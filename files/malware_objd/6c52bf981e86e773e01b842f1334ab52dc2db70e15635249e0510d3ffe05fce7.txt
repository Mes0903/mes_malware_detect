
6c52bf981e86e773e01b842f1334ab52dc2db70e15635249e0510d3ffe05fce7.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x401430
  401008:	mov    eax,ds:0x423ce0
  40100d:	push   eax
  40100e:	call   0x401690
  401013:	add    esp,0x4
  401016:	mov    ds:0x423ce4,eax
  40101b:	pop    ebp
  40101c:	ret    
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	mov    eax,DWORD PTR [ebp+0x8]
  401026:	mov    eax,DWORD PTR [eax-0x4]
  401029:	pop    ebp
  40102a:	ret    
  40102b:	int3   
  40102c:	int3   
  40102d:	int3   
  40102e:	int3   
  40102f:	int3   
  401030:	push   ebp
  401031:	mov    ebp,esp
  401033:	sub    esp,0x618
  401039:	push   ebx
  40103a:	push   esi
  40103b:	push   edi
  40103c:	mov    DWORD PTR [ebp-0x28c],0x401cf0
  401046:	mov    DWORD PTR ds:0x423ce8,ebp
  40104c:	pusha  
  40104d:	mov    DWORD PTR [ebp-0x290],0x0
  401057:	mov    DWORD PTR [ebp-0x2a0],0x80000002
  401061:	mov    DWORD PTR [ebp-0x5f0],0x41d018
  40106b:	mov    DWORD PTR [ebp-0x5f4],0x41d0f4
  401075:	mov    DWORD PTR [ebp-0x600],0x41d004
  40107f:	mov    DWORD PTR [ebp-0x2b8],0xe1
  401089:	mov    eax,ds:0x421cdc
  40108e:	mov    DWORD PTR [ebp-0x2b4],eax
  401094:	mov    ecx,DWORD PTR ds:0x421ce0
  40109a:	mov    DWORD PTR [ebp-0x3dc],ecx
  4010a0:	mov    DWORD PTR [ebp-0x3d8],0x0
  4010aa:	lea    edx,[ebp-0x3d8]
  4010b0:	push   edx
  4010b1:	push   0x0
  4010b3:	push   0x0
  4010b5:	call   DWORD PTR ds:0x421ce4
  4010bb:	cmp    DWORD PTR [ebp-0x3d8],0x0
  4010c2:	jne    0x4010cb
  4010c4:	xor    eax,eax
  4010c6:	jmp    0x40141a
  4010cb:	push   0x104
  4010d0:	lea    eax,[ebp-0x5e8]
  4010d6:	push   eax
  4010d7:	call   DWORD PTR ds:0x421ce8
  4010dd:	movzx  ecx,WORD PTR [ebp-0x5e6]
  4010e4:	cmp    ecx,0x3a
  4010e7:	je     0x4010f0
  4010e9:	xor    eax,eax
  4010eb:	jmp    0x40141a
  4010f0:	mov    edx,0x61
  4010f5:	mov    eax,DWORD PTR [ebp-0x600]
  4010fb:	mov    WORD PTR [eax],dx
  4010fe:	mov    ecx,DWORD PTR [ebp-0x5f4]
  401104:	push   ecx
  401105:	mov    edx,DWORD PTR [ebp-0x600]
  40110b:	push   edx
  40110c:	call   DWORD PTR [ebp-0x2b4]
  401112:	push   eax
  401113:	call   DWORD PTR [ebp-0x3dc]
  401119:	mov    DWORD PTR [ebp-0x5ec],eax
  40111f:	push   0x41d104
  401124:	push   0x41d110
  401129:	call   DWORD PTR [ebp-0x2b4]
  40112f:	push   eax
  401130:	call   DWORD PTR [ebp-0x3dc]
  401136:	mov    ds:0x423cec,eax
  40113b:	mov    eax,0x61
  401140:	mov    ecx,DWORD PTR [ebp-0x5f0]
  401146:	mov    WORD PTR [ecx+0x16],ax
  40114a:	lea    edx,[ebp-0x5fc]
  401150:	push   edx
  401151:	push   0x20019
  401156:	push   0x0
  401158:	mov    eax,DWORD PTR [ebp-0x5f0]
  40115e:	push   eax
  40115f:	push   0x80000002
  401164:	call   DWORD PTR [ebp-0x5ec]
  40116a:	test   eax,eax
  40116c:	jne    0x401170
  40116e:	jmp    0x40117a
  401170:	push   0x0
  401172:	call   0x401520
  401177:	add    esp,0x4
  40117a:	call   0x4014c0
  40117f:	mov    ecx,DWORD PTR ds:0x423cf0
  401185:	push   ecx
  401186:	call   0x401020
  40118b:	add    esp,0x4
  40118e:	mov    ds:0x423ce0,eax
  401193:	mov    edx,DWORD PTR ds:0x423ce0
  401199:	push   edx
  40119a:	call   0x401690
  40119f:	add    esp,0x4
  4011a2:	mov    ds:0x423cf4,eax
  4011a7:	mov    eax,ds:0x423ce0
  4011ac:	mov    DWORD PTR [ebp-0x298],eax
  4011b2:	mov    DWORD PTR [ebp-0x284],0x64
  4011bc:	mov    DWORD PTR [ebp-0x224],0xf
  4011c6:	mov    DWORD PTR [ebp-0x290],0x0
  4011d0:	mov    DWORD PTR [ebp-0x258],0x0
  4011da:	mov    DWORD PTR [ebp-0x280],0x1
  4011e4:	mov    DWORD PTR [ebp-0x21c],0x0
  4011ee:	mov    ecx,DWORD PTR [ebp-0x290]
  4011f4:	cmp    ecx,DWORD PTR ds:0x423ce0
  4011fa:	jae    0x401285
  401200:	mov    edx,DWORD PTR [ebp-0x298]
  401206:	push   edx
  401207:	mov    eax,DWORD PTR [ebp-0x284]
  40120d:	push   eax
  40120e:	call   0x4017c0
  401213:	add    esp,0x8
  401216:	mov    DWORD PTR [ebp-0x29c],eax
  40121c:	mov    ecx,DWORD PTR [ebp-0x29c]
  401222:	push   ecx
  401223:	mov    edx,DWORD PTR ds:0x423cf0
  401229:	add    edx,DWORD PTR [ebp-0x258]
  40122f:	push   edx
  401230:	mov    eax,ds:0x423cf4
  401235:	add    eax,DWORD PTR [ebp-0x290]
  40123b:	push   eax
  40123c:	call   0x401b50
  401241:	add    esp,0xc
  401244:	mov    ecx,DWORD PTR [ebp-0x224]
  40124a:	add    ecx,DWORD PTR [ebp-0x284]
  401250:	add    ecx,DWORD PTR [ebp-0x258]
  401256:	mov    DWORD PTR [ebp-0x258],ecx
  40125c:	mov    edx,DWORD PTR [ebp-0x290]
  401262:	add    edx,DWORD PTR [ebp-0x284]
  401268:	mov    DWORD PTR [ebp-0x290],edx
  40126e:	mov    eax,DWORD PTR [ebp-0x298]
  401274:	sub    eax,DWORD PTR [ebp-0x29c]
  40127a:	mov    DWORD PTR [ebp-0x298],eax
  401280:	jmp    0x4011ee
  401285:	mov    ecx,DWORD PTR ds:0x423ce0
  40128b:	push   ecx
  40128c:	mov    edx,DWORD PTR ds:0x423cf4
  401292:	push   edx
  401293:	call   0x401a40
  401298:	add    esp,0x8
  40129b:	mov    DWORD PTR [ebp-0x258],0x0
  4012a5:	mov    DWORD PTR [ebp-0x60c],0x0
  4012af:	mov    eax,ds:0x423ce0
  4012b4:	push   eax
  4012b5:	push   0x0
  4012b7:	mov    ecx,DWORD PTR ds:0x423ce4
  4012bd:	push   ecx
  4012be:	call   0x401000
  4012c3:	add    esp,0xc
  4012c6:	mov    edx,DWORD PTR ds:0x423ce0
  4012cc:	mov    DWORD PTR [ebp-0x614],edx
  4012d2:	mov    eax,DWORD PTR [ebp-0x60c]
  4012d8:	cmp    eax,DWORD PTR ds:0x423ce0
  4012de:	jae    0x40136a
  4012e4:	mov    ecx,DWORD PTR [ebp-0x614]
  4012ea:	push   ecx
  4012eb:	mov    edx,DWORD PTR [ebp-0x284]
  4012f1:	push   edx
  4012f2:	call   0x4017c0
  4012f7:	add    esp,0x8
  4012fa:	mov    DWORD PTR [ebp-0x618],eax
  401300:	mov    eax,DWORD PTR [ebp-0x618]
  401306:	push   eax
  401307:	mov    ecx,DWORD PTR ds:0x423cf0
  40130d:	add    ecx,DWORD PTR [ebp-0x258]
  401313:	push   ecx
  401314:	mov    edx,DWORD PTR ds:0x423ce4
  40131a:	add    edx,DWORD PTR [ebp-0x60c]
  401320:	push   edx
  401321:	call   0x401b50
  401326:	add    esp,0xc
  401329:	mov    eax,DWORD PTR [ebp-0x224]
  40132f:	add    eax,DWORD PTR [ebp-0x284]
  401335:	add    eax,DWORD PTR [ebp-0x258]
  40133b:	mov    DWORD PTR [ebp-0x258],eax
  401341:	mov    ecx,DWORD PTR [ebp-0x60c]
  401347:	add    ecx,DWORD PTR [ebp-0x284]
  40134d:	mov    DWORD PTR [ebp-0x60c],ecx
  401353:	mov    edx,DWORD PTR [ebp-0x614]
  401359:	sub    edx,DWORD PTR [ebp-0x618]
  40135f:	mov    DWORD PTR [ebp-0x614],edx
  401365:	jmp    0x4012d2
  40136a:	mov    eax,ds:0x423ce0
  40136f:	push   eax
  401370:	mov    ecx,DWORD PTR ds:0x423ce4
  401376:	push   ecx
  401377:	call   0x401a40
  40137c:	add    esp,0x8
  40137f:	mov    DWORD PTR [ebp-0x28c],0x401cf0
  401389:	mov    edx,DWORD PTR ds:0x423cf4
  40138f:	mov    eax,ds:0x423ce4
  401394:	mov    DWORD PTR [edx],eax
  401396:	push   0x19000
  40139b:	call   0x401690
  4013a0:	add    esp,0x4
  4013a3:	mov    ds:0x423cf8,eax
  4013a8:	mov    ecx,DWORD PTR ds:0x423cf8
  4013ae:	add    ecx,0x200
  4013b4:	mov    DWORD PTR ds:0x423cfc,ecx
  4013ba:	push   0x17100
  4013bf:	mov    edx,DWORD PTR ds:0x423cf4
  4013c5:	push   edx
  4013c6:	mov    eax,ds:0x423cfc
  4013cb:	push   eax
  4013cc:	call   0x401b50
  4013d1:	add    esp,0xc
  4013d4:	mov    ecx,DWORD PTR ds:0x423cf8
  4013da:	add    ecx,0x16f90
  4013e0:	mov    DWORD PTR ds:0x423d00,ecx
  4013e6:	mov    ecx,ecx
  4013e8:	mov    ecx,ecx
  4013ea:	mov    ecx,ecx
  4013ec:	popa   
  4013ed:	mov    ecx,ecx
  4013ef:	mov    ecx,ecx
  4013f1:	mov    ecx,ecx
  4013f3:	mov    ecx,ecx
  4013f5:	push   0x37
  4013f7:	mov    eax,DWORD PTR [ebp-0x28c]
  4013fd:	mov    ecx,ecx
  4013ff:	mov    ecx,ecx
  401401:	mov    ecx,esp
  401403:	sub    ecx,0x26
  401406:	mov    edx,0x1a
  40140b:	mov    DWORD PTR [ecx+edx*1+0xc],0x0
  401413:	add    DWORD PTR [ecx+edx*1+0xc],eax
  401417:	ret    
  401418:	xor    eax,eax
  40141a:	pop    edi
  40141b:	pop    esi
  40141c:	pop    ebx
  40141d:	mov    esp,ebp
  40141f:	pop    ebp
  401420:	ret    
  401421:	int3   
  401422:	int3   
  401423:	int3   
  401424:	int3   
  401425:	int3   
  401426:	int3   
  401427:	int3   
  401428:	int3   
  401429:	int3   
  40142a:	int3   
  40142b:	int3   
  40142c:	int3   
  40142d:	int3   
  40142e:	int3   
  40142f:	int3   
  401430:	push   ebp
  401431:	mov    ebp,esp
  401433:	call   0x401490
  401438:	mov    eax,ds:0x423cf0
  40143d:	push   eax
  40143e:	call   0x401020
  401443:	add    esp,0x4
  401446:	mov    ds:0x423ce0,eax
  40144b:	pop    ebp
  40144c:	ret    
  40144d:	int3   
  40144e:	int3   
  40144f:	int3   
  401450:	push   ebp
  401451:	mov    ebp,esp
  401453:	push   ecx
  401454:	mov    DWORD PTR [ebp-0x4],0x4e6
  40145b:	call   0x401030
  401460:	mov    esp,ebp
  401462:	pop    ebp
  401463:	ret    
  401464:	int3   
  401465:	int3   
  401466:	int3   
  401467:	int3   
  401468:	int3   
  401469:	int3   
  40146a:	int3   
  40146b:	int3   
  40146c:	int3   
  40146d:	int3   
  40146e:	int3   
  40146f:	int3   
  401470:	push   ebp
  401471:	mov    ebp,esp
  401473:	pop    ebp
  401474:	ret    0x10
  401477:	int3   
  401478:	int3   
  401479:	int3   
  40147a:	int3   
  40147b:	int3   
  40147c:	int3   
  40147d:	int3   
  40147e:	int3   
  40147f:	int3   
  401480:	push   ebp
  401481:	mov    ebp,esp
  401483:	pop    ebp
  401484:	ret    0x10
  401487:	int3   
  401488:	int3   
  401489:	int3   
  40148a:	int3   
  40148b:	int3   
  40148c:	int3   
  40148d:	int3   
  40148e:	int3   
  40148f:	int3   
  401490:	push   ebp
  401491:	mov    ebp,esp
  401493:	sub    esp,0x8
  401496:	mov    DWORD PTR [ebp-0x4],0x4
  40149d:	mov    eax,DWORD PTR [ebp-0x4]
  4014a0:	add    eax,0x401d08
  4014a5:	mov    ds:0x423cf0,eax
  4014aa:	mov    ecx,DWORD PTR ds:0x421fdc
  4014b0:	mov    DWORD PTR [ebp-0x8],ecx
  4014b3:	mov    esp,ebp
  4014b5:	pop    ebp
  4014b6:	ret    
  4014b7:	int3   
  4014b8:	int3   
  4014b9:	int3   
  4014ba:	int3   
  4014bb:	int3   
  4014bc:	int3   
  4014bd:	int3   
  4014be:	int3   
  4014bf:	int3   
  4014c0:	push   ebp
  4014c1:	mov    ebp,esp
  4014c3:	sub    esp,0x28
  4014c6:	mov    DWORD PTR [ebp-0x28],0x401f57
  4014cd:	mov    DWORD PTR [ebp-0x24],0x1027
  4014d4:	mov    DWORD PTR [ebp-0x18],0x4
  4014db:	mov    eax,DWORD PTR [ebp-0x18]
  4014de:	mov    ecx,DWORD PTR [ebp-0x28]
  4014e1:	lea    edx,[ecx+eax*1+0x29]
  4014e5:	mov    DWORD PTR [ebp-0x20],edx
  4014e8:	mov    eax,DWORD PTR [ebp-0x20]
  4014eb:	mov    DWORD PTR [ebp-0x1c],eax
  4014ee:	mov    DWORD PTR [ebp-0x14],0x0
  4014f5:	lea    ecx,[ebp-0x14]
  4014f8:	push   ecx
  4014f9:	push   0x0
  4014fb:	call   DWORD PTR ds:0x421cec
  401501:	cmp    DWORD PTR [ebp-0x14],0x0
  401505:	jne    0x40150b
  401507:	xor    eax,eax
  401509:	jmp    0x401517
  40150b:	mov    edx,DWORD PTR [ebp-0x1c]
  40150e:	sub    edx,0x29
  401511:	mov    DWORD PTR ds:0x423cf0,edx
  401517:	mov    esp,ebp
  401519:	pop    ebp
  40151a:	ret    
  40151b:	int3   
  40151c:	int3   
  40151d:	int3   
  40151e:	int3   
  40151f:	int3   
  401520:	push   ebp
  401521:	mov    ebp,esp
  401523:	mov    eax,DWORD PTR [ebp+0x8]
  401526:	mov    ecx,DWORD PTR [ebp+0x8]
  401529:	add    ecx,DWORD PTR [eax+0x4]
  40152c:	mov    eax,ecx
  40152e:	pop    ebp
  40152f:	ret    
  401530:	push   ebp
  401531:	mov    ebp,esp
  401533:	sub    esp,0x350
  401539:	mov    DWORD PTR [ebp-0x340],0x41d138
  401543:	mov    DWORD PTR [ebp-0x344],0x41d1b4
  40154d:	mov    DWORD PTR [ebp-0x350],0x41d1c4
  401557:	mov    DWORD PTR [ebp-0x8],0xe1
  40155e:	mov    eax,ds:0x421cdc
  401563:	mov    DWORD PTR [ebp-0x4],eax
  401566:	mov    ecx,DWORD PTR ds:0x421ce0
  40156c:	mov    DWORD PTR [ebp-0x12c],ecx
  401572:	mov    DWORD PTR [ebp-0x128],0x0
  40157c:	lea    edx,[ebp-0x128]
  401582:	push   edx
  401583:	push   0x0
  401585:	push   0x0
  401587:	call   DWORD PTR ds:0x421ce4
  40158d:	cmp    DWORD PTR [ebp-0x128],0x0
  401594:	jne    0x40159d
  401596:	xor    eax,eax
  401598:	jmp    0x40167f
  40159d:	push   0x104
  4015a2:	lea    eax,[ebp-0x338]
  4015a8:	push   eax
  4015a9:	call   DWORD PTR ds:0x421ce8
  4015af:	movzx  ecx,WORD PTR [ebp-0x336]
  4015b6:	cmp    ecx,0x3a
  4015b9:	je     0x4015c2
  4015bb:	xor    eax,eax
  4015bd:	jmp    0x40167f
  4015c2:	mov    edx,0x61
  4015c7:	mov    eax,DWORD PTR [ebp-0x350]
  4015cd:	mov    WORD PTR [eax],dx
  4015d0:	mov    ecx,DWORD PTR [ebp-0x344]
  4015d6:	push   ecx
  4015d7:	mov    edx,DWORD PTR [ebp-0x350]
  4015dd:	push   edx
  4015de:	call   DWORD PTR [ebp-0x4]
  4015e1:	push   eax
  4015e2:	call   DWORD PTR [ebp-0x12c]
  4015e8:	mov    DWORD PTR [ebp-0x33c],eax
  4015ee:	push   0x41d1d8
  4015f3:	push   0x41d1e4
  4015f8:	call   DWORD PTR [ebp-0x4]
  4015fb:	push   eax
  4015fc:	call   DWORD PTR [ebp-0x12c]
  401602:	mov    ds:0x423cec,eax
  401607:	mov    eax,0x61
  40160c:	mov    ecx,DWORD PTR [ebp-0x340]
  401612:	mov    WORD PTR [ecx+0x16],ax
  401616:	lea    edx,[ebp-0x34c]
  40161c:	push   edx
  40161d:	push   0x20019
  401622:	push   0x0
  401624:	mov    eax,DWORD PTR [ebp-0x340]
  40162a:	push   eax
  40162b:	push   0x80000002
  401630:	call   DWORD PTR [ebp-0x33c]
  401636:	test   eax,eax
  401638:	jne    0x401643
  40163a:	mov    eax,0x1
  40163f:	jmp    0x40167f
  401641:	jmp    0x40164d
  401643:	push   0x0
  401645:	call   0x401520
  40164a:	add    esp,0x4
  40164d:	mov    ecx,DWORD PTR [ebp-0x348]
  401653:	movzx  edx,BYTE PTR [ecx]
  401656:	cmp    edx,0x55
  401659:	je     0x40167f
  40165b:	mov    eax,DWORD PTR [ebp-0x348]
  401661:	movzx  ecx,BYTE PTR [eax]
  401664:	cmp    ecx,0x8b
  40166a:	je     0x40167f
  40166c:	mov    edx,DWORD PTR [ebp-0x348]
  401672:	movzx  eax,BYTE PTR [edx]
  401675:	cmp    eax,0x6a
  401678:	je     0x40167f
  40167a:	call   0x401450
  40167f:	mov    esp,ebp
  401681:	pop    ebp
  401682:	ret    
  401683:	int3   
  401684:	int3   
  401685:	int3   
  401686:	int3   
  401687:	int3   
  401688:	int3   
  401689:	int3   
  40168a:	int3   
  40168b:	int3   
  40168c:	int3   
  40168d:	int3   
  40168e:	int3   
  40168f:	int3   
  401690:	push   ebp
  401691:	mov    ebp,esp
  401693:	sub    esp,0x238
  401699:	mov    DWORD PTR [ebp-0x1c],0x307c
  4016a0:	mov    DWORD PTR [ebp-0x238],0x3000
  4016aa:	mov    DWORD PTR [ebp-0x18],0x40
  4016b1:	mov    DWORD PTR [ebp-0x22c],0x0
  4016bb:	mov    DWORD PTR [ebp-0x230],0x0
  4016c5:	mov    DWORD PTR [ebp-0x1c],0x307c
  4016cc:	mov    DWORD PTR [ebp-0x1c],0x307c
  4016d3:	mov    DWORD PTR [ebp-0x1c],0x307c
  4016da:	mov    DWORD PTR [ebp-0x1c],0x307c
  4016e1:	mov    eax,ds:0x421ce8
  4016e6:	mov    ds:0x423d04,eax
  4016eb:	push   0x104
  4016f0:	lea    ecx,[ebp-0x228]
  4016f6:	push   ecx
  4016f7:	call   DWORD PTR ds:0x423d04
  4016fd:	push   0x104
  401702:	lea    edx,[ebp-0x228]
  401708:	push   edx
  401709:	call   DWORD PTR ds:0x421ce8
  40170f:	movzx  eax,WORD PTR [ebp-0x226]
  401716:	cmp    eax,0x3a
  401719:	je     0x40171f
  40171b:	xor    eax,eax
  40171d:	jmp    0x40175a
  40171f:	mov    DWORD PTR [ebp-0x14],0x0
  401726:	lea    ecx,[ebp-0x14]
  401729:	push   ecx
  40172a:	push   0x0
  40172c:	call   DWORD PTR ds:0x421cec
  401732:	cmp    DWORD PTR [ebp-0x14],0x0
  401736:	jne    0x40173c
  401738:	xor    eax,eax
  40173a:	jmp    0x40175a
  40173c:	mov    edx,DWORD PTR [ebp-0x18]
  40173f:	push   edx
  401740:	mov    eax,DWORD PTR [ebp-0x238]
  401746:	push   eax
  401747:	mov    ecx,DWORD PTR [ebp+0x8]
  40174a:	push   ecx
  40174b:	mov    edx,DWORD PTR [ebp-0x22c]
  401751:	push   edx
  401752:	push   0xffffffff
  401754:	call   DWORD PTR ds:0x421cf0
  40175a:	mov    esp,ebp
  40175c:	pop    ebp
  40175d:	ret    
  40175e:	int3   
  40175f:	int3   
  401760:	push   ebp
  401761:	mov    ebp,esp
  401763:	sub    esp,0x18
  401766:	mov    eax,DWORD PTR [ebp+0x8]
  401769:	mov    DWORD PTR [ebp-0x8],eax
  40176c:	mov    ecx,DWORD PTR [ebp+0xc]
  40176f:	mov    DWORD PTR [ebp-0x4],ecx
  401772:	mov    DWORD PTR [ebp-0x10],0x19c
  401779:	mov    edx,DWORD PTR [ebp-0x8]
  40177c:	mov    DWORD PTR ds:0x423d08,edx
  401782:	mov    eax,DWORD PTR [ebp-0x4]
  401785:	mov    ds:0x423d0c,eax
  40178a:	mov    ecx,DWORD PTR ds:0x423d08
  401790:	mov    DWORD PTR [ebp-0x14],ecx
  401793:	mov    edx,DWORD PTR ds:0x423d0c
  401799:	mov    DWORD PTR [ebp-0xc],edx
  40179c:	mov    eax,DWORD PTR [ebp-0xc]
  40179f:	mov    ecx,DWORD PTR [ebp-0x14]
  4017a2:	lea    edx,[ecx+eax*2]
  4017a5:	mov    DWORD PTR [ebp-0x18],edx
  4017a8:	mov    eax,DWORD PTR [ebp-0x18]
  4017ab:	mov    DWORD PTR [ebp-0x14],eax
  4017ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4017b1:	movzx  edx,WORD PTR [ecx]
  4017b4:	mov    DWORD PTR [ebp-0xc],edx
  4017b7:	mov    eax,DWORD PTR [ebp-0xc]
  4017ba:	mov    esp,ebp
  4017bc:	pop    ebp
  4017bd:	ret    
  4017be:	int3   
  4017bf:	int3   
  4017c0:	push   ebp
  4017c1:	mov    ebp,esp
  4017c3:	sub    esp,0xc
  4017c6:	mov    eax,DWORD PTR [ebp+0x8]
  4017c9:	mov    DWORD PTR [ebp-0x8],eax
  4017cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4017cf:	mov    DWORD PTR [ebp-0xc],ecx
  4017d2:	mov    DWORD PTR [ebp-0x4],0x11afc
  4017d9:	mov    edx,DWORD PTR [ebp-0x8]
  4017dc:	cmp    edx,DWORD PTR [ebp-0xc]
  4017df:	jae    0x4017ef
  4017e1:	mov    DWORD PTR [ebp-0x4],0x11afc
  4017e8:	mov    eax,DWORD PTR [ebp-0x8]
  4017eb:	jmp    0x4017f9
  4017ed:	jmp    0x4017f9
  4017ef:	mov    DWORD PTR [ebp-0x4],0x11afc
  4017f6:	mov    eax,DWORD PTR [ebp-0xc]
  4017f9:	mov    esp,ebp
  4017fb:	pop    ebp
  4017fc:	ret    
  4017fd:	int3   
  4017fe:	int3   
  4017ff:	int3   
  401800:	push   ebp
  401801:	mov    ebp,esp
  401803:	mov    eax,DWORD PTR [ebp+0x10]
  401806:	push   eax
  401807:	mov    ecx,DWORD PTR [ebp+0xc]
  40180a:	push   ecx
  40180b:	mov    edx,DWORD PTR [ebp+0x8]
  40180e:	push   edx
  40180f:	call   0x4018a0
  401814:	add    esp,0xc
  401817:	pop    ebp
  401818:	ret    
  401819:	int3   
  40181a:	int3   
  40181b:	int3   
  40181c:	int3   
  40181d:	int3   
  40181e:	int3   
  40181f:	int3   
  401820:	push   ebp
  401821:	mov    ebp,esp
  401823:	push   ecx
  401824:	mov    DWORD PTR [ebp-0x4],0x22fc
  40182b:	mov    DWORD PTR [ebp-0x4],0x22fc
  401832:	mov    DWORD PTR [ebp-0x4],0x22fc
  401839:	mov    eax,DWORD PTR [ebp+0x8]
  40183c:	xor    eax,DWORD PTR [ebp+0xc]
  40183f:	mov    esp,ebp
  401841:	pop    ebp
  401842:	ret    
  401843:	int3   
  401844:	int3   
  401845:	int3   
  401846:	int3   
  401847:	int3   
  401848:	int3   
  401849:	int3   
  40184a:	int3   
  40184b:	int3   
  40184c:	int3   
  40184d:	int3   
  40184e:	int3   
  40184f:	int3   
  401850:	push   ebp
  401851:	mov    ebp,esp
  401853:	sub    esp,0x8
  401856:	mov    eax,DWORD PTR [ebp+0x8]
  401859:	cmp    DWORD PTR [eax+0x4],0x0
  40185d:	je     0x40189b
  40185f:	mov    ecx,DWORD PTR [ebp+0x8]
  401862:	add    ecx,0x8
  401865:	mov    DWORD PTR ds:0x423d10,ecx
  40186b:	mov    edx,DWORD PTR [ebp+0x8]
  40186e:	mov    eax,DWORD PTR [edx+0x4]
  401871:	mov    ds:0x423d14,eax
  401876:	call   0x401970
  40187b:	mov    ecx,DWORD PTR [ebp+0x8]
  40187e:	mov    DWORD PTR ds:0x423d18,ecx
  401884:	mov    edx,DWORD PTR [ebp+0x10]
  401887:	push   edx
  401888:	mov    eax,DWORD PTR [ebp+0xc]
  40188b:	push   eax
  40188c:	push   0x1
  40188e:	call   0x401800
  401893:	add    esp,0xc
  401896:	mov    DWORD PTR [ebp+0x8],eax
  401899:	jmp    0x401856
  40189b:	mov    esp,ebp
  40189d:	pop    ebp
  40189e:	ret    
  40189f:	int3   
  4018a0:	push   ebp
  4018a1:	mov    ebp,esp
  4018a3:	cmp    DWORD PTR [ebp+0x8],0x1
  4018a7:	jne    0x4018b1
  4018a9:	mov    eax,ds:0x423d18
  4018ae:	mov    DWORD PTR [ebp+0x8],eax
  4018b1:	mov    ecx,DWORD PTR [ebp+0x10]
  4018b4:	push   ecx
  4018b5:	mov    edx,DWORD PTR [ebp+0xc]
  4018b8:	push   edx
  4018b9:	mov    eax,DWORD PTR [ebp+0x8]
  4018bc:	push   eax
  4018bd:	call   0x4018e0
  4018c2:	add    esp,0xc
  4018c5:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c8:	push   ecx
  4018c9:	call   0x401520
  4018ce:	add    esp,0x4
  4018d1:	mov    DWORD PTR [ebp+0x8],eax
  4018d4:	mov    eax,DWORD PTR [ebp+0x8]
  4018d7:	pop    ebp
  4018d8:	ret    
  4018d9:	int3   
  4018da:	int3   
  4018db:	int3   
  4018dc:	int3   
  4018dd:	int3   
  4018de:	int3   
  4018df:	int3   
  4018e0:	push   ebp
  4018e1:	mov    ebp,esp
  4018e3:	sub    esp,0x8
  4018e6:	mov    DWORD PTR [ebp-0x4],0x0
  4018ed:	jmp    0x4018f8
  4018ef:	mov    eax,DWORD PTR [ebp-0x4]
  4018f2:	add    eax,0x1
  4018f5:	mov    DWORD PTR [ebp-0x4],eax
  4018f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4018fb:	cmp    ecx,DWORD PTR ds:0x423d14
  401901:	jae    0x401966
  401903:	mov    edx,DWORD PTR [ebp-0x4]
  401906:	push   edx
  401907:	mov    eax,ds:0x423d10
  40190c:	push   eax
  40190d:	call   0x401760
  401912:	add    esp,0x8
  401915:	sar    eax,0xc
  401918:	cmp    eax,0x3
  40191b:	jne    0x401964
  40191d:	mov    ecx,DWORD PTR [ebp-0x4]
  401920:	push   ecx
  401921:	mov    edx,DWORD PTR ds:0x423d10
  401927:	push   edx
  401928:	call   0x401760
  40192d:	add    esp,0x8
  401930:	and    eax,0xfff
  401935:	add    eax,0x907
  40193a:	mov    DWORD PTR [ebp-0x8],eax
  40193d:	mov    eax,DWORD PTR [ebp+0x8]
  401940:	mov    ecx,DWORD PTR [ebp+0xc]
  401943:	add    ecx,DWORD PTR [eax]
  401945:	mov    edx,DWORD PTR [ebp-0x8]
  401948:	mov    eax,DWORD PTR [ecx+edx*1-0x907]
  40194f:	add    eax,DWORD PTR [ebp+0x10]
  401952:	mov    ecx,DWORD PTR [ebp+0x8]
  401955:	mov    edx,DWORD PTR [ebp+0xc]
  401958:	add    edx,DWORD PTR [ecx]
  40195a:	mov    ecx,DWORD PTR [ebp-0x8]
  40195d:	mov    DWORD PTR [edx+ecx*1-0x907],eax
  401964:	jmp    0x4018ef
  401966:	mov    esp,ebp
  401968:	pop    ebp
  401969:	ret    
  40196a:	int3   
  40196b:	int3   
  40196c:	int3   
  40196d:	int3   
  40196e:	int3   
  40196f:	int3   
  401970:	push   ebp
  401971:	mov    ebp,esp
  401973:	push   ecx
  401974:	mov    DWORD PTR [ebp-0x4],0x3c2
  40197b:	mov    DWORD PTR [ebp-0x4],0x3c2
  401982:	mov    DWORD PTR [ebp-0x4],0x3c2
  401989:	mov    DWORD PTR [ebp-0x4],0x3c2
  401990:	mov    DWORD PTR [ebp-0x4],0x3c2
  401997:	mov    DWORD PTR [ebp-0x4],0x3c2
  40199e:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019a5:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019ac:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019b3:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019ba:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019c1:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019c8:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019cf:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019d6:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019dd:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019e4:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019eb:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019f2:	mov    DWORD PTR [ebp-0x4],0x3c2
  4019f9:	mov    DWORD PTR [ebp-0x4],0x3c2
  401a00:	mov    DWORD PTR [ebp-0x4],0x3c2
  401a07:	mov    DWORD PTR [ebp-0x4],0x3c2
  401a0e:	mov    DWORD PTR [ebp-0x4],0x3c2
  401a15:	mov    DWORD PTR [ebp-0x4],0x3c2
  401a1c:	mov    DWORD PTR [ebp-0x4],0x3c2
  401a23:	mov    DWORD PTR [ebp-0x4],0x3c2
  401a2a:	mov    eax,ds:0x423d14
  401a2f:	sub    eax,0x8
  401a32:	shr    eax,1
  401a34:	mov    ds:0x423d14,eax
  401a39:	mov    esp,ebp
  401a3b:	pop    ebp
  401a3c:	ret    
  401a3d:	int3   
  401a3e:	int3   
  401a3f:	int3   
  401a40:	push   ebp
  401a41:	mov    ebp,esp
  401a43:	sub    esp,0x228
  401a49:	mov    DWORD PTR [ebp-0x218],0x0
  401a53:	mov    DWORD PTR [ebp-0x214],0x41d1f8
  401a5d:	mov    DWORD PTR [ebp-0x4],0x12f1
  401a64:	mov    DWORD PTR [ebp-0x4],0x12f1
  401a6b:	mov    DWORD PTR [ebp-0x220],0x0
  401a75:	jmp    0x401a86
  401a77:	mov    eax,DWORD PTR [ebp-0x220]
  401a7d:	add    eax,0x4
  401a80:	mov    DWORD PTR [ebp-0x220],eax
  401a86:	mov    ecx,DWORD PTR [ebp-0x220]
  401a8c:	cmp    ecx,DWORD PTR [ebp+0xc]
  401a8f:	jae    0x401b43
  401a95:	mov    DWORD PTR [ebp-0x4],0x12f1
  401a9c:	mov    DWORD PTR [ebp-0x4],0x12f1
  401aa3:	mov    edx,DWORD PTR [ebp-0x220]
  401aa9:	add    edx,0xc83f
  401aaf:	mov    DWORD PTR ds:0x423d1c,edx
  401ab5:	mov    DWORD PTR [ebp-0x4],0x12f1
  401abc:	mov    eax,DWORD PTR [ebp+0x8]
  401abf:	add    eax,DWORD PTR [ebp-0x220]
  401ac5:	mov    DWORD PTR [ebp-0x228],eax
  401acb:	mov    DWORD PTR [ebp-0x4],0x12f1
  401ad2:	mov    DWORD PTR [ebp-0x4],0x12f1
  401ad9:	mov    ecx,DWORD PTR [ebp-0x228]
  401adf:	mov    edx,DWORD PTR [ecx]
  401ae1:	add    edx,DWORD PTR [ebp-0x220]
  401ae7:	mov    eax,DWORD PTR [ebp-0x228]
  401aed:	mov    DWORD PTR [eax],edx
  401aef:	mov    DWORD PTR [ebp-0x4],0x12f1
  401af6:	mov    ecx,DWORD PTR [ebp-0x228]
  401afc:	mov    DWORD PTR [ebp-0x224],ecx
  401b02:	mov    edx,DWORD PTR ds:0x423d1c
  401b08:	mov    DWORD PTR [ebp-0x4],edx
  401b0b:	mov    DWORD PTR [ebp-0x4],0x12f1
  401b12:	mov    eax,DWORD PTR [ebp-0x224]
  401b18:	mov    ecx,DWORD PTR [eax]
  401b1a:	mov    DWORD PTR [ebp-0x4],ecx
  401b1d:	mov    edx,DWORD PTR ds:0x423d1c
  401b23:	push   edx
  401b24:	mov    eax,DWORD PTR [ebp-0x4]
  401b27:	push   eax
  401b28:	call   0x401820
  401b2d:	add    esp,0x8
  401b30:	mov    DWORD PTR [ebp-0x4],eax
  401b33:	mov    ecx,DWORD PTR [ebp-0x224]
  401b39:	mov    edx,DWORD PTR [ebp-0x4]
  401b3c:	mov    DWORD PTR [ecx],edx
  401b3e:	jmp    0x401a77
  401b43:	mov    esp,ebp
  401b45:	pop    ebp
  401b46:	ret    
  401b47:	int3   
  401b48:	int3   
  401b49:	int3   
  401b4a:	int3   
  401b4b:	int3   
  401b4c:	int3   
  401b4d:	int3   
  401b4e:	int3   
  401b4f:	int3   
  401b50:	push   ebp
  401b51:	mov    ebp,esp
  401b53:	sub    esp,0x214
  401b59:	push   0x104
  401b5e:	lea    eax,[ebp-0x208]
  401b64:	push   eax
  401b65:	call   DWORD PTR ds:0x423d04
  401b6b:	mov    DWORD PTR [ebp-0x210],0x0
  401b75:	jmp    0x401b86
  401b77:	mov    ecx,DWORD PTR [ebp-0x210]
  401b7d:	add    ecx,0x1
  401b80:	mov    DWORD PTR [ebp-0x210],ecx
  401b86:	mov    edx,DWORD PTR [ebp-0x210]
  401b8c:	cmp    edx,DWORD PTR [ebp+0x10]
  401b8f:	jge    0x401cbb
  401b95:	cmp    DWORD PTR [ebp-0x210],0x0
  401b9c:	jne    0x401c55
  401ba2:	mov    DWORD PTR [ebp-0x214],0x41d200
  401bac:	mov    eax,0x5c
  401bb1:	mov    ecx,DWORD PTR [ebp-0x214]
  401bb7:	mov    WORD PTR [ecx],ax
  401bba:	mov    edx,0x73
  401bbf:	mov    eax,DWORD PTR [ebp-0x214]
  401bc5:	mov    WORD PTR [eax+0x2],dx
  401bc9:	mov    ecx,0x79
  401bce:	mov    edx,DWORD PTR [ebp-0x214]
  401bd4:	mov    WORD PTR [edx+0x4],cx
  401bd8:	mov    eax,0x65
  401bdd:	mov    ecx,DWORD PTR [ebp-0x214]
  401be3:	mov    WORD PTR [ecx+0xa],ax
  401be7:	mov    edx,0x6d
  401bec:	mov    eax,DWORD PTR [ebp-0x214]
  401bf2:	mov    WORD PTR [eax+0xc],dx
  401bf6:	mov    ecx,0x33
  401bfb:	mov    edx,DWORD PTR [ebp-0x214]
  401c01:	mov    WORD PTR [edx+0xe],cx
  401c05:	mov    eax,0x32
  401c0a:	mov    ecx,DWORD PTR [ebp-0x214]
  401c10:	mov    WORD PTR [ecx+0x10],ax
  401c14:	mov    edx,0x5c
  401c19:	mov    eax,DWORD PTR [ebp-0x214]
  401c1f:	mov    WORD PTR [eax+0x12],dx
  401c23:	mov    ecx,0x73
  401c28:	mov    edx,DWORD PTR [ebp-0x214]
  401c2e:	mov    WORD PTR [edx+0x16],cx
  401c32:	mov    eax,0x65
  401c37:	mov    ecx,DWORD PTR [ebp-0x214]
  401c3d:	mov    WORD PTR [ecx+0x24],ax
  401c41:	mov    edx,DWORD PTR [ebp-0x214]
  401c47:	push   edx
  401c48:	lea    eax,[ebp-0x208]
  401c4e:	push   eax
  401c4f:	call   DWORD PTR ds:0x423cec
  401c55:	mov    ecx,DWORD PTR [ebp+0x8]
  401c58:	add    ecx,DWORD PTR [ebp-0x210]
  401c5e:	mov    edx,DWORD PTR [ebp+0xc]
  401c61:	add    edx,DWORD PTR [ebp-0x210]
  401c67:	mov    al,BYTE PTR [edx]
  401c69:	mov    BYTE PTR [ecx],al
  401c6b:	cmp    DWORD PTR [ebp-0x210],0x0
  401c72:	jne    0x401cb6
  401c74:	mov    ecx,DWORD PTR ds:0x421cf4
  401c7a:	mov    DWORD PTR ds:0x423d20,ecx
  401c80:	push   0x0
  401c82:	push   0x80
  401c87:	push   0x3
  401c89:	push   0x0
  401c8b:	push   0x3
  401c8d:	push   0x1
  401c8f:	lea    edx,[ebp-0x208]
  401c95:	push   edx
  401c96:	call   DWORD PTR ds:0x423d20
  401c9c:	mov    DWORD PTR [ebp-0x20c],eax
  401ca2:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  401ca9:	je     0x401cb4
  401cab:	cmp    DWORD PTR [ebp-0x20c],0x0
  401cb2:	jne    0x401cb6
  401cb4:	jmp    0x401ce8
  401cb6:	jmp    0x401b77
  401cbb:	mov    eax,DWORD PTR [ebp+0x8]
  401cbe:	cmp    eax,DWORD PTR ds:0x423cfc
  401cc4:	jne    0x401ce8
  401cc6:	mov    ecx,DWORD PTR ds:0x423cf8
  401ccc:	sub    ecx,0x400000
  401cd2:	push   ecx
  401cd3:	mov    edx,DWORD PTR ds:0x423cf8
  401cd9:	push   edx
  401cda:	mov    eax,ds:0x423ce4
  401cdf:	push   eax
  401ce0:	call   0x401850
  401ce5:	add    esp,0xc
  401ce8:	mov    esp,ebp
  401cea:	pop    ebp
  401ceb:	ret    
  401cec:	int3   
  401ced:	int3   
  401cee:	int3   
  401cef:	int3   
  401cf0:	push   ebp
  401cf1:	mov    ebp,esp
  401cf3:	mov    esp,DWORD PTR ds:0x423ce8
  401cf9:	add    esp,0x4
  401cfc:	mov    ecx,DWORD PTR ds:0x423d00
  401d02:	jmp    ecx
  401d04:	pop    ebp
  401d05:	ret    
  401d06:	int3   
  401d07:	int3   
  401d08:	add    BYTE PTR [edx],al
  401d0a:	add    BYTE PTR [eax],al
  401d0c:	aas    
  401d0d:	enter  0x0,0x57
  401d11:	enter  0x0,0xc3
  401d15:	cli    
  401d16:	nop
  401d17:	xor    dl,bl
  401d19:	cli    
  401d1a:	cwde   
  401d1b:	xor    al,bl
  401d1d:	cli    
  401d1e:	mov    al,ds:0xa8fae332
  401d23:	xor    bh,BYTE PTR [edi]
  401d25:	test   al,0x1
  401d27:	add    bl,bl
  401d29:	enter  0x0,0x5c
  401d2d:	dec    DWORD PTR [ebx-0x650030c9]
  401d33:	aaa    
  401d34:	sar    bh,1
  401d36:	test   al,0x37
  401d38:	cdq    
  401d39:	call   ebx
  401d3b:	aaa    
  401d3c:	cmp    edi,0xf04337e8
  401d42:	sub    eax,0x51f00438
  401d47:	cmp    dh,ah
  401d49:	out    dx,eax
  401d4a:	fnstsw WORD PTR [eax]
  401d4c:	pop    ebx
  401d4d:	icebp  
  401d4e:	(bad)  
  401d4f:	cmp    cl,BYTE PTR [edx]
  401d51:	repnz aad 0x3a
  401d54:	cmp    esi,ebx
  401d56:	or     eax,0xbef3603b
  401d5b:	cmp    edi,esp
  401d5d:	repnz fstp TBYTE PTR [ebx]
  401d60:	es repz out dx,eax
  401d63:	cmp    edx,DWORD PTR [eax]
  401d65:	repz or al,0x3c
  401d68:	sub    eax,0x4e3c26f4
  401d6d:	hlt    
  401d6e:	cmp    DWORD PTR [eax+eax*1],edi
	...
  401d7d:	add    BYTE PTR [eax],al
  401d7f:	cmp    ah,dh
  401d81:	inc    ebp
  401d82:	cmp    al,0x97
  401d84:	hlt    
  401d85:	sar    DWORD PTR [eax+eax*1],0xf4
  401d89:	xchg   BYTE PTR ds:0x3d9df4b4,bh
  401d8f:	mov    eax,ds:0x23db0f4
  401d94:	cmc    
  401d95:	in     al,0x3d
  401d97:	aad    0xf4
  401d99:	add    bh,BYTE PTR [esi]
  401d9b:	push   ds
  401d9c:	test   BYTE PTR [esi+0x3e],0x10
  401da0:	neg    BYTE PTR [esi+edi*1+0x1c]
  401da4:	idiv   BYTE PTR [ecx+0x3e]
  401da7:	mov    ebp,0xce3e88f5
  401dac:	cmc    
  401dad:	xchg   edi,eax
  401dae:	ds mov ecx,0xd23eadf5
  401db4:	cmc    
  401db5:	ret    0x733e
  401db8:	cmc    
  401db9:	fnstsw WORD PTR [esi]
  401dbb:	cwde   
  401dbc:	cmc    
  401dbd:	idiv   BYTE PTR [esi]
  401dbf:	cmp    eax,0x73f10f7
  401dc4:	test   DWORD PTR [esi+0x3f],0x3f65f713
  401dcb:	aad    0xf6
  401dcd:	cmp    BYTE PTR [edi],0x99
  401dd0:	test   al,0x3f
  401dd3:	push   0xfffffff6
  401dd5:	loope  0x401e16
  401dd7:	push   esp
  401dd8:	div    ah
  401dda:	aas    
  401ddb:	inc    ecx
  401ddc:	test   BYTE PTR [eax],0x0
  401ddf:	aas    
  401de0:	mov    eax,0x1
	...
  401df1:	add    BYTE PTR [edi+0x360000c8],dl
  401df7:	clc    
  401df8:	push   cs
  401df9:	xor    BYTE PTR [ebx-0x8],cl
  401dfc:	sbb    eax,0x34f86830
  401e01:	xor    BYTE PTR [ebp-0x8],dl
  401e04:	aas    
  401e05:	xor    BYTE PTR [edx+0x713049f8],al
  401e0b:	clc    
  401e0c:	push   esp
  401e0d:	xor    BYTE PTR [ebp-0x8],bl
  401e10:	push   0x72f86230
  401e15:	xor    BYTE PTR [eax-0x6cf6508],bh
  401e1b:	clc    
  401e1c:	int3   
  401e1d:	xor    ch,ch
  401e1f:	clc    
  401e20:	fdiv   QWORD PTR [eax]
  401e22:	cmp    edi,esi
  401e24:	sub    esi,DWORD PTR [ecx]
  401e26:	pop    es
  401e27:	test   DWORD PTR [ecx+esi*1+0x69],0x263163f7
  401e2f:	div    DWORD PTR [ecx+0x31]
  401e32:	test   DWORD PTR ss:[ecx+esi*1+0x319df7bb],0x31b1f7dd
  401e3e:	xor    bh,0xce
  401e41:	xor    DWORD PTR [ecx-0x9],ebp
  401e44:	in     eax,0x31
  401e46:	aas    
  401e47:	enter  0x0,0x3f
  401e4b:	enter  0x0,0x3f
  401e4f:	enter  0x0,0x3f
  401e53:	enter  0x0,0x0
	...
  401e63:	add    BYTE PTR [eax],al
  401e65:	aas    
  401e66:	enter  0x0,0x3f
  401e6a:	enter  0x0,0x3f
  401e6e:	enter  0x0,0x3f
  401e72:	enter  0x0,0x3f
  401e76:	enter  0x0,0x3f
  401e7a:	enter  0x0,0x3f
  401e7e:	enter  0x0,0x3f
  401e82:	enter  0x0,0x3f
  401e86:	enter  0x0,0x3f
  401e8a:	enter  0x0,0x3f
  401e8e:	enter  0x0,0x3f
  401e92:	enter  0x0,0x3f
  401e96:	enter  0x0,0x3f
  401e9a:	enter  0x0,0x3f
  401e9e:	enter  0x0,0x3f
  401ea2:	enter  0x0,0x3f
  401ea6:	enter  0x0,0x3f
  401eaa:	enter  0x0,0x3f
  401eae:	enter  0x0,0x3f
  401eb2:	enter  0x0,0x3f
  401eb6:	enter  0x0,0x3f
  401eba:	enter  0x0,0x3f
  401ebe:	enter  0x0,0x3f
  401ec2:	enter  0x0,0x3f
  401ec6:	enter  0x0,0x0
	...
  401ed6:	add    BYTE PTR [eax],al
  401ed8:	aas    
  401ed9:	enter  0x0,0x3f
  401edd:	enter  0x0,0x3f
  401ee1:	enter  0x0,0x3f
  401ee5:	enter  0x0,0x3f
  401ee9:	enter  0x0,0x3f
  401eed:	enter  0x0,0x3f
  401ef1:	enter  0x0,0x3f
  401ef5:	enter  0x0,0x3f
  401ef9:	enter  0x0,0x3f
  401efd:	enter  0x0,0x3f
  401f01:	enter  0x0,0x3f
  401f05:	enter  0x0,0x3f
  401f09:	enter  0x0,0x3f
  401f0d:	enter  0x0,0x3f
  401f11:	enter  0x0,0x3f
  401f15:	enter  0x0,0x3f
  401f19:	enter  0x0,0x3f
  401f1d:	enter  0x0,0x3f
  401f21:	enter  0x0,0x3f
  401f25:	enter  0x0,0x3f
  401f29:	enter  0x0,0x3f
  401f2d:	enter  0x0,0x3f
  401f31:	enter  0x0,0x3f
  401f35:	enter  0x0,0x3f
  401f39:	enter  0x0,0x0
	...
  401f49:	add    BYTE PTR [eax],al
  401f4b:	aas    
  401f4c:	enter  0x0,0x3f
  401f50:	enter  0x0,0x3f
  401f54:	enter  0x0,0x0
  401f58:	jno    0x401f5b
  401f5a:	add    BYTE PTR [edi],bh
  401f5c:	mov    ebx,0xad000041
  401f61:	je     0x401fb3
  401f63:	sub    eax,0x234163a7
  401f68:	lods   al,BYTE PTR ds:[esi]
  401f69:	jb     0x401fd0
  401f6b:	sub    al,0xbb
  401f6d:	add    BYTE PTR [eax],al
  401f6f:	or     esp,DWORD PTR [edi-0x5efc9b9f]
  401f75:	bound  esi,QWORD PTR [edx+0x1e]
  401f78:	mov    edx,0x89074579
  401f7d:	add    BYTE PTR [eax],al
  401f7f:	or     esp,DWORD PTR [edi-0x5efc9b9f]
  401f85:	bound  esi,QWORD PTR [edx-0x22]
  401f88:	mov    ecx,0x9ee74579
  401f8d:	add    BYTE PTR [eax],al
  401f8f:	add    BYTE PTR [ebp-0x541fb28c],ch
  401f95:	jne    0x402003
  401f97:	loop   0x402018
  401f99:	popa   
  401f9a:	outs   dx,BYTE PTR ds:[esi]
  401f9b:	(bad)  [ebx-0x37c0be9b]
  401fa1:	add    BYTE PTR [eax],al
  401fa3:	jl     0x401f5f
  401fa5:	gs popa 
  401fa7:	mov    bl,0xad
  401fa9:	inc    esi
  401faa:	imul   edx,DWORD PTR [ebx-0x54ffbe53],0x9c7274bb
  401fb4:	test   eax,0xc83f4174
  401fb9:	add    BYTE PTR [eax],al
  401fbb:	js     0x401f6a
  401fbd:	je     0x402016
	...
  401fcb:	add    BYTE PTR [eax],al
  401fcd:	add    BYTE PTR [esi-0x5a],ah
  401fd0:	outs   dx,DWORD PTR fs:[esi]
  401fd2:	push   0x6d6944bb
  401fd7:	lods   eax,DWORD PTR ds:[esi]
  401fd8:	arpl   WORD PTR [eax+edx*2-0x46],si
  401fdc:	jns    0x40201f
  401fde:	aas    
  401fdf:	enter  0x0,0x78
  401fe3:	lods   eax,DWORD PTR ds:[esi]
  401fe4:	je     0x402033
  401fe6:	pop    eax
  401fe7:	lods   al,BYTE PTR ds:[esi]
  401fe8:	jne    0x402056
  401fea:	pop    edx
  401feb:	and    BYTE PTR [ecx+0x6e],0x23
  401fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ff0:	gs push edi
  401ff2:	aas    
  401ff3:	enter  0x0,0x43
  401ff7:	retf   0x40
  401ffa:	dec    ebx
  401ffb:	retf   0x40
  401ffe:	arpl   dx,cx
  402000:	inc    eax
  402001:	add    BYTE PTR [ebx-0x36],cl
  402004:	inc    eax
  402005:	add    bh,dh
  402007:	leave  
  402008:	inc    eax
  402009:	add    bl,ch
  40200b:	leave  
  40200c:	inc    eax
  40200d:	add    bh,bl
  40200f:	leave  
  402010:	inc    eax
  402011:	add    bh,dh
  402013:	leave  
  402014:	inc    eax
  402015:	add    BYTE PTR [eax],al
  402017:	lods   eax,DWORD PTR ds:[esi]
  402018:	je     0x40206a
  40201a:	in     eax,dx
  40201b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40201c:	arpl   WORD PTR [ecx-0x1d],ax
  40201f:	stos   DWORD PTR es:[edi],eax
  402020:	jb     0x402087
  402022:	int3   
  402023:	mov    edx,0xa6fb0000
  402028:	popa   
  402029:	repz mov al,fs:0xba9e7262
  402030:	jns    0x402077
	...
  40203e:	add    BYTE PTR [eax],al
  402040:	add    BYTE PTR [edi-0x6bffff79],dh
  402046:	stos   DWORD PTR es:[edi],eax
  402047:	jb     0x4020b7
  402049:	call   0x6cac:0x693233a4
  402050:	ins    BYTE PTR es:[edi],dx
  402051:	aas    
  402052:	enter  0x0,0x9a
  402056:	mov    ecx,0xbc8d6376
  40205b:	cs imul esp,DWORD PTR fs:[eax+eax*1+0x6dab6200],0x73
  402065:	bound  edi,QWORD PTR [eax+eax*1+0x76b95200]
  40206c:	arpl   WORD PTR [ebp-0x44],cx
  40206f:	cs arpl WORD PTR fs:[eax+eax*1+0x6dab5a00],sp
  402078:	arpl   WORD PTR [edi-0x51],cx
  40207b:	add    BYTE PTR [eax],al
  40207d:	adc    DWORD PTR [edi-0x58d58b8e],ebx
  402083:	ins    BYTE PTR es:[edi],dx
  402084:	inc    ecx
  402085:	sbb    esp,DWORD PTR [edi+ebp*2+0xc83f63]
  40208c:	add    cl,dh
  40208e:	sahf   
  40208f:	jb     0x402105
  402091:	or     ah,BYTE PTR [edi-0x5be4be94]
  402097:	outs   dx,DWORD PTR ds:[esi]
  402098:	arpl   WORD PTR [edi],di
  40209a:	enter  0x0,0x12
  40209e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40209f:	ins    DWORD PTR es:[edi],dx
  4020a0:	popa   
  4020a1:	out    dx,eax
  4020a2:	popf   
  4020a3:	imul   esp,DWORD PTR [ebp+0x0],0x0
	...
  4020b2:	add    BYTE PTR [eax],al
  4020b4:	lock test BYTE PTR [esi+0x46],ah
  4020b8:	(bad)  
  4020b9:	mov    ds:0x9ef10065,eax
  4020be:	jb     0x402134
  4020c0:	retf   0x6ca6
  4020c3:	push   eax
  4020c4:	int    0xa4
  4020c6:	je     0x40212d
  4020c8:	fdivr  QWORD PTR [ebx-0x54790000]
  4020ce:	popa   
  4020cf:	jo     0x40214f
  4020d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d2:	ins    BYTE PTR es:[edi],dx
  4020d3:	outs   dx,DWORD PTR ds:[esi]
  4020d4:	pushf  
  4020d5:	enter  0x0,0x94
  4020d9:	stos   DWORD PTR es:[edi],eax
  4020da:	jb     0x40214a
  4020dc:	mov    ds:0x613233a4,al
  4020e1:	lods   al,BYTE PTR ds:[esi]
  4020e2:	ins    BYTE PTR es:[edi],dx
  4020e3:	ins    BYTE PTR es:[edi],dx
  4020e4:	aas    
  4020e5:	enter  0x0,0x78
  4020e9:	stos   DWORD PTR es:[edi],eax
  4020ea:	je     0x40213c
  4020ec:	ins    DWORD PTR es:[edi],dx
  4020ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020ee:	arpl   WORD PTR [ebp+0x6c],sp
  4020f1:	mov    ecx,0xb85e6548
  4020f6:	add    BYTE PTR [eax],al
  4020f8:	aas    
  4020f9:	enter  0x160,0x3f
  4020fd:	ins    BYTE PTR es:[edi],dx
  4020fe:	pop    ecx
  4020ff:	nop
  402100:	aas    
  402101:	and    al,BYTE PTR [ebx]
  402103:	add    BYTE PTR [edi],bh
  402105:	and    eax,DWORD PTR [ebx]
  402107:	add    BYTE PTR [edi],bh
  402109:	ss sti 
  40210b:	add    BYTE PTR [edi],bh
  40210d:	test   DWORD PTR [ebx],0x31f3f00
  402113:	add    BYTE PTR [edi],bh
  402115:	fild   WORD PTR [eax+eax*1]
	...
  402124:	add    BYTE PTR [eax],al
  402126:	add    BYTE PTR [edi],bh
  402128:	pop    ds
  402129:	add    eax,DWORD PTR [eax]
  40212b:	aas    
  40212c:	pop    ds
  40212d:	add    eax,DWORD PTR [eax]
  40212f:	aas    
  402130:	pop    ds
  402131:	add    eax,DWORD PTR [eax]
  402133:	aas    
  402134:	pop    ds
  402135:	add    eax,DWORD PTR [eax]
  402137:	aas    
  402138:	pop    ds
  402139:	add    eax,DWORD PTR [eax]
  40213b:	aas    
  40213c:	pop    ds
  40213d:	add    eax,DWORD PTR [eax]
  40213f:	aas    
  402140:	pop    ds
  402141:	add    eax,DWORD PTR [eax]
  402143:	aas    
  402144:	pop    ds
  402145:	add    eax,DWORD PTR [eax]
  402147:	aas    
  402148:	lahf   
  402149:	add    al,0x0
  40214b:	aas    
  40214c:	sub    eax,0x1f41ba1a
  402151:	scas   eax,DWORD PTR es:[edi]
  402152:	or     DWORD PTR [edx-0x1],edi
  402155:	mov    edx,0x2563f301
  40215a:	push   esp
  40215b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40215c:	enter  0x2077,0xaf
  402160:	das    
  402161:	push   0x67
  402163:	lods   eax,DWORD PTR ds:[esi]
  402164:	add    BYTE PTR [eax+0x20],ch
  402167:	pushf  
  402168:	add    BYTE PTR [ecx+0x6e],ch
  40216b:	test   al,0x15
  40216d:	and    esp,DWORD PTR [edx-0x66]
  402170:	shl    DWORD PTR [esi+0x75],0x99
  402174:	shr    DWORD PTR [ebp+0x6e],0x5f
  402178:	ins    DWORD PTR es:[edi],dx
  402179:	dec    edx
  40217a:	push   ebx
  40217b:	pop    ds
  40217c:	or     al,0x6a
  40217e:	fs pop edx
  402180:	xor    ecx,DWORD PTR [eax]
  402182:	or     eax,0x3cdc835
  402187:	aas    
  402188:	enter  0x3e9,0x0
	...
  402198:	add    BYTE PTR [eax],al
  40219a:	aas    
  40219b:	enter  0x40b9,0x3f
  40219f:	enter  0x49d,0x3c
  4021a3:	enter  0x820c,0x70
  4021a7:	cwde   
  4021a8:	jmp    0xea0860b0
  4021ad:	add    edi,DWORD PTR [edi]
  4021af:	enter  0x409,0x38
  4021b3:	leave  
  4021b4:	repnz add al,0x3d
  4021b7:	imul   cl
  4021b9:	(bad)  
  4021bb:	enter  0x53e9,0x3f
  4021bf:	enter  0x3e9,0x3f
  4021c3:	enter  0xf9bc,0x3f
  4021c7:	enter  0x13e9,0x3f
  4021cb:	enter  0x33e9,0x3e
  4021cf:	enter  0x3e9,0xff
  4021d3:	(bad)  
  4021d4:	jmp    0xea0860ec
  4021d9:	add    eax,0x3edc83f
  4021de:	aas    
  4021df:	enter  0x3e9,0x3f
  4021e3:	enter  0x3ed,0x3f
  4021e7:	enter  0x3e9,0x3f
  4021eb:	enter  0x93e9,0x3e
  4021ef:	enter  0x5e9,0x3f
  4021f3:	enter  0xbf3,0x3d
  4021f7:	enter  0x3eb,0x3f
  4021fb:	enter  0x3e9,0x0
	...
  40220b:	add    BYTE PTR [eax],al
  40220d:	das    
  40220e:	enter  0x13e9,0x3f
  402212:	enter  0x3e9,0x2f
  402216:	enter  0x13e9,0x3f
  40221a:	enter  0xe900,0x3c
  40221e:	enter  0xd900,0x3c
  402222:	enter  0xe900,0x3c
  402226:	enter  0xe900,0x3c
  40222a:	enter  0x3500,0x57
  40222e:	leave  
  40222f:	add    BYTE PTR [ebp+0x3c],dl
  402232:	enter  0xe900,0x3c
  402236:	enter  0xe900,0x3c
  40223a:	enter  0xe900,0x3c
  40223e:	enter  0xe900,0x3c
  402242:	enter  0xe900,0x3c
  402246:	enter  0xe900,0x3c
  40224a:	enter  0xe900,0x3c
  40224e:	enter  0xe900,0x3c
  402252:	enter  0xe900,0x3c
  402256:	enter  0xe900,0x3c
  40225a:	enter  0xe900,0x3c
  40225e:	enter  0xe900,0x3c
  402262:	enter  0xe900,0x3c
  402266:	enter  0xe900,0x3c
  40226a:	enter  0xe900,0x3c
  40226e:	enter  0xe900,0x0
	...
  40227e:	add    BYTE PTR [eax],al
  402280:	cmp    al,0xc8
  402282:	add    cl,ch
  402284:	cmp    al,0xc8
  402286:	add    cl,ch
  402288:	cmp    al,0xc8
  40228a:	add    cl,ch
  40228c:	cmp    al,0xc8
  40228e:	add    cl,ch
  402290:	cmp    al,0xc8
  402292:	add    BYTE PTR [ecx],al
  402294:	mov    ebx,0x3c7100c7
  402299:	enter  0xe900,0x3c
  40229d:	enter  0xe900,0x3c
  4022a1:	enter  0x0,0x16
  4022a5:	mov    BYTE PTR [eax],0x0
  4022a8:	out    0xc5,al
  4022aa:	add    BYTE PTR [eax],al
  4022ac:	out    0xc5,al
  4022ae:	add    BYTE PTR [eax],al
  4022b0:	(bad)  
  4022b1:	lds    eax,FWORD PTR [eax]
  4022b3:	add    BYTE PTR [eax],cl
  4022b5:	mov    ds:0xc5b27865,al
  4022ba:	add    BYTE PTR [eax],al
  4022bc:	int    0xdc
  4022be:	add    DWORD PTR [eax],eax
  4022c0:	(bad)  
  4022c1:	aad    0x0
  4022c3:	add    dh,dl
  4022c5:	rol    DWORD PTR [ecx],0x0
  4022c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022c9:	retf   
  4022ca:	add    BYTE PTR [eax],al
  4022cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022cd:	lds    eax,FWORD PTR [eax]
  4022cf:	add    BYTE PTR [esi-0x69ffff3b],dl
  4022d5:	lds    eax,FWORD PTR [eax]
  4022d7:	add    BYTE PTR [esi-0x34],al
  4022da:	add    BYTE PTR [eax+0x38],ah
  4022dd:	mov    edx,0xa4f26164
	...
  4022f2:	add    BYTE PTR [esi+0x660000c6],dl
  4022f8:	cmc    
  4022f9:	add    DWORD PTR [eax],eax
  4022fb:	retfw  
  4022fd:	add    BYTE PTR [eax],al
  4022ff:	push   esi
  402300:	xlat   BYTE PTR ds:[ebx]
  402301:	add    DWORD PTR [eax],eax
  402303:	push   esi
  402304:	lds    eax,FWORD PTR [eax]
  402306:	add    BYTE PTR [esi-0x3b],ah
  402309:	add    BYTE PTR [eax],al
  40230b:	lds    ax,DWORD PTR [eax]
  40230e:	add    BYTE PTR [esi],dl
  402310:	int3   
  402311:	add    BYTE PTR [eax+0x68],al
  402314:	xchg   ecx,eax
  402315:	popa   
  402316:	je     0x40235f
  402318:	int3   
  402319:	add    BYTE PTR [eax],al
  40231b:	pop    esi
  40231c:	mov    DWORD PTR [eax],eax
  40231e:	add    BYTE PTR [esi],dl
  402320:	test   DWORD PTR [ecx],eax
  402322:	add    BYTE PTR [esi],dl
  402324:	jge    0x402326
  402326:	add    BYTE PTR [esi],ah
  402328:	int    0x1
  40232a:	add    BYTE PTR [edi],bh
  40232c:	pop    ds
  40232d:	add    eax,DWORD PTR [eax]
  40232f:	aas    
  402330:	pop    ds
  402331:	add    eax,DWORD PTR [eax]
  402333:	aas    
  402334:	pop    ds
  402335:	add    eax,DWORD PTR [eax]
  402337:	aas    
  402338:	pop    edi
  402339:	add    eax,DWORD PTR [eax]
  40233b:	call   FWORD PTR [esi]
  40233d:	add    eax,DWORD PTR [eax]
  40233f:	aas    
  402340:	pop    ds
  402341:	add    eax,DWORD PTR [eax]
  402343:	aas    
  402344:	pop    ds
  402345:	add    eax,DWORD PTR [eax]
  402347:	aas    
  402348:	pop    ds
  402349:	add    eax,DWORD PTR [eax]
  40234b:	aas    
  40234c:	je     0x4022da
  40234e:	in     al,dx
  40234f:	outs   dx,DWORD PTR ds:[esi]
  402350:	ja     0x4023bd
  402352:	comiss xmm3,DWORD PTR [edi+0x3]
  402356:	clc    
	...
  402363:	add    BYTE PTR [eax],al
  402365:	add    BYTE PTR ds:0xb0ffc420,ch
  40236b:	mov    bl,0xb
  40236d:	push   0x3e
  40236f:	inc    ebp
  402370:	add    ebp,eax
  402372:	clc    
  402373:	push   cs
  402374:	add    al,0x0
  402376:	xchg   BYTE PTR [eax+eax*1+0x0],bl
  40237a:	jmp    0x2686:0xe750e8a5
  402381:	adc    bh,bh
  402383:	push   ds
  402384:	sti    
  402385:	jb     0x4023c5
  402387:	pop    esi
  402388:	test   DWORD PTR [ebx+0x740326f2],0x851a634
  402392:	mov    ah,0x2c
  402394:	div    BYTE PTR [ebp+0x47]
  402397:	push   edx
  402398:	push   edx
  402399:	or     BYTE PTR [esi-0xdffffa4],al
  40239f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023a0:	call   0x54869f28
  4023a5:	pop    eax
  4023a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023a7:	aam    0x14
  4023a9:	inc    eax
  4023aa:	aas    
  4023ab:	mov    ecx,0x9efc0172
  4023b0:	div    DWORD PTR [ebp+0x33]
  4023b3:	enter  0x4176,0x17
  4023b7:	or     BYTE PTR [edi+esi*8+0x3e9c83f],ah
  4023be:	mov    ah,0x95
  4023c0:	loope  0x40234c
  4023c2:	sub    eax,0x72f6e9a2
  4023c7:	fdivr  DWORD PTR [esi]
  4023c9:	jno    0x4023cb
	...
  4023d7:	add    BYTE PTR [eax],al
  4023d9:	repz das 
  4023db:	mov    esp,0xe1b5e8fb
  4023e0:	test   BYTE PTR [ebp+0x4bc230d4],0xc8
  4023e7:	mov    ah,0x8a
  4023e9:	jecxz  0x402436
  4023eb:	sub    eax,0x81906ffc
  4023f0:	test   DWORD PTR [edi],ebp
  4023f2:	mov    cl,ch
  4023f4:	sti    
  4023f5:	sub    eax,0x78f72ac9
  4023fa:	test   ecx,esi
  4023fc:	add    edi,DWORD PTR [edi]
  4023fe:	enter  0xbee9,0xfa
  402402:	sub    ebp,ecx
  402404:	add    edi,DWORD PTR [edi]
  402406:	enter  0x5072,0x47
  40240a:	inc    ebx
  40240b:	sti    
  40240c:	mov    BYTE PTR [edx],al
  40240e:	xor    BYTE PTR [ecx],bh
  402410:	push   0x3d
  402412:	das    
  402413:	cmp    al,0xf8
  402415:	js     0x4023cc
  402417:	shl    esi,0xea
  40241a:	mov    edi,0x435351b6
  40241f:	and    al,0xfc
  402421:	jbe    0x40242d
  402423:	in     eax,dx
  402424:	add    esi,edx
  402426:	inc    edx
  402427:	lea    eax,[edx+0x5c39307b]
  40242d:	xlat   BYTE PTR ds:[ebx]
  40242e:	sti    
  40242f:	clc    
  402430:	inc    ebx
  402431:	aas    
  402432:	xor    bl,bh
  402434:	add    al,0xfc
  402436:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  402438:	inc    eax
  402439:	aaa    
  40243a:	enter  0xe900,0x0
	...
  40244a:	add    BYTE PTR [eax],al
  40244c:	cmp    al,0xc8
  40244e:	(bad)  
  40244f:	and    al,0x27
  402451:	enter  0xe900,0x3c
  402455:	inc    ebx
  402456:	push   ebp
  402457:	icebp  
  402458:	(bad)
  40245b:	lods   al,BYTE PTR ds:[esi]
  40245c:	add    al,0x98
  40245e:	push   0xffffffe8
  402460:	or     DWORD PTR [ebp+0x306f46fc],esi
  402466:	push   DWORD PTR [esp+eax*2-0xe22add1]
  40246d:	mov    ah,0x8
  40246f:	inc    ecx
  402470:	mov    ebp,0x6c26ff2e
  402475:	inc    ebx
  402476:	push   ebp
  402477:	icebp  
  402478:	vpunpckhdq xmm5,xmm4,xmm1
  40247c:	push   esi
  40247d:	enter  0x94ff,0xc8
  402481:	cs jne 0x402485
  402484:	mov    cl,0xb4
  402486:	or     dh,bh
  402488:	paddq  mm3,QWORD PTR [eax+0x62]
  40248c:	wrmsr  
  40248e:	add    edx,DWORD PTR [eax+edi*1-0x66a02f0d]
  402495:	loope  0x402457
  402497:	mov    al,0x7d
  402499:	mov    edi,0xc83c9100
  40249e:	add    cl,ch
  4024a0:	jne    0x4024ab
  4024a2:	or     cl,ch
  4024a4:	or     DWORD PTR [ebx-0x14],eax
  4024a7:	push   0x7f
  4024a9:	sub    edx,DWORD PTR [eax+0x11]
  4024ac:	fcomi  st,st(2)
  4024ae:	adc    DWORD PTR [ecx],ebp
	...
  4024bc:	add    BYTE PTR [eax],al
  4024be:	add    BYTE PTR [ebx],bh
  4024c0:	xor    BYTE PTR [edx-0x18],dh
  4024c3:	jg     0x4024f3
  4024c5:	call   DWORD PTR [ebx+ebp*1]
  4024c8:	das    
  4024c9:	jne    0x4024ac
  4024cb:	push   esp
  4024cc:	mov    bl,0xff
  4024ce:	mov    cs,WORD PTR [edx-0x3e]
  4024d1:	rol    BYTE PTR [eax],0x3b
  4024d4:	cs enter 0x22c2,0xca
  4024d9:	mov    edx,DWORD PTR [ebp+0x1e]
  4024dc:	inc    ecx
  4024dd:	adc    cl,BYTE PTR [ebp-0xafcfa5]
  4024e3:	sti    
  4024e4:	fcos   
  4024e6:	jne    0x40250a
  4024e8:	xor    eax,0x9a710875
  4024ed:	or     al,0x85
  4024ef:	push   esi
  4024f0:	lods   al,BYTE PTR ds:[esi]
  4024f1:	adc    ecx,DWORD PTR [ebx+0x453b35ab]
  4024f7:	push   ss
  4024f8:	lahf   
  4024f9:	pop    es
  4024fa:	mov    eax,0xc9d7
  4024ff:	jge    0x40252f
  402501:	sub    al,al
  402503:	sub    eax,0xfc02bca
  402508:	or     cl,BYTE PTR [eax+eax*1]
  40250b:	mov    eax,DWORD PTR [eax-0x14]
  40250e:	sbb    DWORD PTR [edx],0x30
  402511:	push   esi
  402512:	push   eax
  402513:	fisub  WORD PTR [ecx-0x3619ee6d]
  402519:	clc    
  40251a:	jb     0x4024b3
  40251c:	or     bh,bh
  40251e:	adc    DWORD PTR [ebx],0xffffffc5
  402521:	add    BYTE PTR [eax+eax*1+0x0],dh
	...
  402531:	add    BYTE PTR [eax-0x59f782b8],ch
  402537:	sahf   
  402538:	pop    es
  402539:	sub    edx,esi
  40253b:	xchg   ebx,eax
  40253c:	leave  
  40253d:	ret    0xc962
  402540:	cmp    DWORD PTR [ebp-0x6a],0xffffffc9
  402544:	jne    0x402550
  402546:	mov    esi,0x560000ca
  40254b:	xchg   ebx,eax
  40254c:	leave  
  40254d:	ret    0xc982
  402550:	mov    esi,DWORD PTR [ebp+0x52]
  402553:	ins    BYTE PTR es:[edi],dx
  402554:	inc    ebp
  402555:	cld    
  402556:	leavew 
  402558:	add    BYTE PTR [eax],al
  40255a:	aas    
  40255b:	stos   BYTE PTR es:[edi],al
  40255c:	dec    esi
  40255d:	or     BYTE PTR [ecx+esi*1-0x30c4ba7a],dh
  402564:	cmc    
  402565:	jne    0x4025b6
  402567:	aad    0xf5
  402569:	jne    0x4025a2
  40256b:	mov    dh,0x51
  40256d:	adc    BYTE PTR [edx+0x64077a5e],bh
  402573:	fist   WORD PTR [ebp-0x37]
  402576:	std    
  402577:	sbb    al,BYTE PTR [ebx]
  402579:	or     DWORD PTR [edx+0x38750393],0xffffffca
  402580:	les    ebx,FWORD PTR [esi+0x6]
  402583:	loope  0x40258c
  402585:	add    ah,al
  402587:	arpl   di,si
  402589:	add    ebp,edi
  40258b:	(bad)  
  40258c:	aas    
  40258d:	adc    BYTE PTR [edx-0x1d],ch
  402590:	mov    ebx,0x31f3f01
  402595:	pop    esi
	...
  4025a2:	add    BYTE PTR [eax],al
  4025a4:	add    BYTE PTR [esi],al
  4025a6:	loope  0x4025af
  4025a8:	add    BYTE PTR [edx-0x56],dh
  4025ab:	out    0x81,eax
  4025ad:	sti    
  4025ae:	(bad)  
  4025af:	in     al,0xff
  4025b1:	mov    eax,0x4b685b4e
  4025b6:	adc    DWORD PTR [ebx+0x0],eax
  4025b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025ba:	mov    al,0x2
  4025bc:	ret    
  4025bd:	mov    al,ds:0x3f6a0348
  4025c2:	cdq    
  4025c3:	pop    es
  4025c4:	push   0x3f
  4025c6:	cdq    
  4025c7:	pop    es
  4025c8:	push   0x80031f3f
  4025cd:	adc    BYTE PTR [ebx+0x1278e7fc],0x4
  4025d4:	add    dh,al
  4025d6:	jecxz  0x4025c8
  4025d8:	inc    eax
  4025d9:	repnz sbb bh,BYTE PTR [edx+eax*8+0x5d1f37]
  4025e1:	retf   0x2cc7
  4025e4:	in     al,dx
  4025e5:	out    dx,eax
  4025e6:	lahf   
  4025e7:	jmp    0x650864ff
  4025ec:	mov    DWORD PTR [edi+0x1c],eax
  4025ef:	mov    ?,ebx
  4025f1:	(bad)  
  4025f2:	sub    edi,esp
  4025f4:	out    dx,eax
  4025f5:	daa    
  4025f6:	sub    cl,BYTE PTR [ebp-0x5640c0fc]
  4025fc:	jns    0x40262f
  4025fe:	sub    esi,esp
  402600:	out    dx,eax
  402601:	daa    
  402602:	adc    BYTE PTR [ebp+0x4],dl
  402605:	aas    
  402606:	fild   QWORD PTR [ecx]
  402608:	mov    ebp,0x0
	...
  402615:	add    BYTE PTR [eax],al
  402617:	add    ch,bh
  402619:	shr    cl,0xf2
  40261c:	mov    dh,BYTE PTR [eax]
  40261e:	pop    esp
  40261f:	mov    edi,esi
  402621:	sbb    eax,DWORD PTR [esi-0xd]
  402624:	(bad)  
  402625:	sub    esi,DWORD PTR [edi+edi*8-0xcc94220]
  40262c:	loopne 0x402675
  40262e:	lods   al,BYTE PTR ds:[esi]
  40262f:	jmp    0x402670
  402631:	mov    ch,0x65
  402633:	repz dec edx
  402635:	sub    al,0x11
  402637:	mov    ecx,0xabe9c8db
  40263c:	ds enter 0x3e9,0x86
  402641:	push   es
  402642:	icebp  
  402643:	add    ecx,DWORD PTR [edx]
  402645:	aas    
  402646:	or     eax,0x50a00754
  40264b:	push   ss
  40264c:	inc    edi
  40264e:	icebp  
  40264f:	jne    0x40268f
  402651:	pop    es
  402652:	out    0x5d,al
  402654:	cmp    eax,0x12f2e99e
  402659:	rol    cl,0x91
  40265c:	sub    BYTE PTR [ebx],0xce
  40265f:	mov    esp,0x58e9c47d
  402664:	les    ebx,FWORD PTR [ecx+ebx*1]
  402667:	dec    esp
  402668:	xlat   BYTE PTR ds:[ebx]
  402669:	outs   dx,DWORD PTR ds:[esi]
  40266a:	add    bl,bl
  40266c:	cld    
  40266d:	xbegin 0xff4768ae
  402673:	adc    edi,DWORD PTR [ebx]
  402675:	sahf   
  402676:	add    BYTE PTR [esi+0x16e8bfc7],bl
	...
  402688:	add    BYTE PTR [eax],al
  40268a:	add    BYTE PTR [esi+0x2b],cl
  40268d:	jmp    DWORD PTR [eax+0x1c00c402]
  402693:	mov    al,0x1c
  402695:	and    DWORD PTR [ebp+0x1589814],0xfffffff1
  40269c:	aad    0x40
  40269e:	jmp    0x2a41dcc7
  4026a3:	or     eax,0xbded752b
  4026a8:	test   al,bh
  4026aa:	cs ja  0x4026d9
  4026ad:	add    cl,ch
  4026af:	cmp    al,0xc8
  4026b1:	push   0xffffffe9
  4026b3:	in     eax,dx
  4026b4:	mov    ah,0xc
  4026b6:	ds addr16 shr al,0xa6
  4026bb:	out    dx,eax
  4026bc:	sub    bh,bh
  4026be:	bound  esi,QWORD PTR [edi-0x40]
  4026c1:	mov    edi,ebx
  4026c3:	int    0xb4
  4026c5:	cld    
  4026c6:	push   ds
  4026c7:	inc    edi
  4026c8:	xor    bh,bh
  4026ca:	pushf  
  4026cb:	les    ebp,FWORD PTR [ecx]
  4026cd:	push   edx
  4026ce:	icebp  
  4026cf:	sti    
  4026d0:	add    eax,0x3f17e908
  4026d5:	in     al,dx
  4026d6:	cdq    
  4026d7:	hlt    
  4026d8:	lahf   
  4026d9:	sbb    dl,bl
  4026db:	cld    
  4026dc:	xbegin 0xff476a5d
  4026e2:	push   ebx
  4026e3:	cmp    ebp,DWORD PTR [ebx]
  4026e5:	jne    0x4026d8
  4026e7:	fs popa 
  4026e9:	call   esi
  4026eb:	mov    es,WORD PTR [eax]
  4026ed:	ret    0xe5
	...
  4026fc:	add    BYTE PTR [eax],al
  4026fe:	cmp    al,0x95
  402700:	mov    eax,DWORD PTR [eax]
  402702:	mov    ch,BYTE PTR [ebp+edx*2+0xd9d514]
  402709:	jne    0x40275d
  40270b:	ins    DWORD PTR es:[edi],dx
  40270c:	ret    0x6610
  40270f:	aaa    
  402710:	jne    0x402722
  402712:	cdq    
  402713:	mov    dl,0xc
  402715:	push   DWORD PTR [ebx]
  402717:	sub    al,0xe7
  402719:	out    0xab,al
  40271b:	cmp    bh,bh
  40271d:	mov    esi,DWORD PTR [ebx-0x30]
  402720:	and    DWORD PTR [edx],eax
  402722:	out    dx,eax
  402723:	add    dl,BYTE PTR [eax]
  402725:	add    BYTE PTR [ebx-0x55],dl
  402728:	in     al,dx
  402729:	adc    edx,0x38
  40272c:	push   DWORD PTR [ebp-0x6]
  40272f:	mov    eax,DWORD PTR [ecx*4-0xafe61d]
  402736:	repz sub eax,0x3769c3e7
  40273c:	dec    DWORD PTR [ebx+0x388229a3]
  402742:	out    0xb1,al
  402744:	pop    es
  402745:	mov    esp,DWORD PTR [ebx+0x7dc80f19]
  40274b:	ret    0xc02b
  40274e:	pop    ds
  40274f:	add    cl,BYTE PTR [eax]
  402751:	add    BYTE PTR [ebx+0x2283ecac],dl
  402757:	cmp    bh,bh
  402759:	jne    0x402735
  40275b:	mov    eax,DWORD PTR [edx]
  40275d:	(bad)  
  40275e:	jecxz  0x402797
  402760:	push   eax
  402761:	inc    DWORD PTR [eax]
	...
  40276f:	add    BYTE PTR [eax],al
  402771:	xor    ebp,DWORD PTR ds:0x38a997e7
  402777:	dec    DWORD PTR [ebx+0x388229d3]
  40277d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40277e:	mov    cl,0x8
  402780:	cmpxchg DWORD PTR [edx+0xce286fe],eax
  402787:	add    ch,BYTE PTR [ebx]
  402789:	aas    
  40278a:	pop    edi
  40278b:	mov    edx,0x561f47c2
  402790:	mov    esp,DWORD PTR [ebx-0x62]
  402793:	(bad)  
  402794:	cld    
  402795:	push   0x3e6a00f4
  40279a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40279b:	inc    esi
  40279c:	(bad)  
  40279d:	out    dx,eax
  40279e:	pop    ecx
  40279f:	jbe    0x4027a9
  4027a1:	addr16 aad 0xf1
  4027a4:	dec    DWORD PTR [eax-0x4a]
  4027a7:	inc    esi
  4027a8:	or     al,0xbc
  4027aa:	pop    ss
  4027ab:	add    esi,DWORD PTR [ecx+eax*2+0xa]
  4027af:	mov    ecx,0x5563045
  4027b4:	sub    edi,edi
  4027b6:	ja     0x40277d
  4027b8:	or     BYTE PTR [edi],bh
  4027ba:	int3   
  4027bb:	jge    0x4027a9
  4027bd:	(bad)  
  4027be:	rcl    DWORD PTR [ebx+eax*4],cl
  4027c1:	push   ebp
  4027c2:	pop    ds
  4027c3:	jbe    0x4027c9
  4027c5:	neg    ah
  4027c7:	(bad)  
  4027c8:	inc    DWORD PTR [ecx]
  4027ca:	or     al,0xff
  4027cc:	(bad)  
  4027cd:	jb     0x4027f6
  4027cf:	fcmovnbe st,st(0)
  4027d1:	repz xor eax,0xb
	...
  4027e4:	push   DWORD PTR [ebx-0x4]
  4027e7:	mov    cl,BYTE PTR [edx+0x3f02c80f]
  4027ed:	pop    ds
  4027ee:	add    eax,DWORD PTR [eax]
  4027f0:	in     al,0x33
  4027f2:	pop    ebp
  4027f3:	add    eax,ecx
  4027f5:	push   ebx
  4027f6:	(bad)  
  4027f7:	dec    BYTE PTR [edx+0x27]
  4027fa:	fstp   TBYTE PTR ds:0xc9f0b9bb
  402800:	jge    0x402834
  402802:	add    edx,DWORD PTR [ebp-0x4c]
  402805:	mov    edx,0x48a3c484
  40280a:	jl     0x402881
  40280c:	dec    ebx
  40280d:	inc    ebp
  40280e:	add    ecx,DWORD PTR [ebp+0x54e5c7fa]
  402814:	mov    BYTE PTR [edx-0x4d7faa07],dh
  40281a:	loope  0x4027f7
  40281c:	push   ecx
  40281d:	sbb    eax,0x84403e9
  402822:	cmp    eax,0xbdaabc06
  402827:	add    al,0xea
  402829:	rol    BYTE PTR [edx],0xc4
  40282c:	stc    
  40282d:	(bad)  
  40282e:	stos   BYTE PTR es:[edi],al
  40282f:	add    BYTE PTR [edi],bh
  402831:	cmp    eax,0x383cf02c
  402836:	ror    BYTE PTR [eax+0x2f],1
  402839:	mov    bl,0xba
  40283b:	lods   al,BYTE PTR ds:[esi]
  40283c:	ds enter 0x3e9,0x91
  402841:	adc    DWORD PTR [ebx+0x727d3f00],ebp
  402847:	loopne 0x402849
	...
  402855:	add    BYTE PTR [eax],al
  402857:	mov    esp,0x92ef710c
  40285c:	aam    0x81
  40285e:	and    edx,DWORD PTR [ebx]
  402860:	sub    BYTE PTR [esi+0x7d],ah
  402863:	and    BYTE PTR [eax],0x26
  402866:	dec    ecx
  402867:	add    ecx,ecx
  402869:	jmp    0xd4676771
  40286e:	(bad)  
  40286f:	fsub   st,st(6)
  402871:	inc    edi
  402872:	out    dx,eax
  402873:	call   0xb63fbccb
  402878:	mov    edx,0xc86503c3
  40287d:	cs jns 0x402853
  402880:	daa    
  402881:	pushf  
  402882:	jmp    0x40284c
  402884:	popf   
  402885:	icebp  
  402886:	out    dx,al
  402887:	dec    edx
  402888:	aam    0x16
  40288a:	push   edx
  40288b:	pop    ebx
  40288c:	adc    DWORD PTR [ebx],ebp
  40288e:	cld    
  40288f:	mov    al,0x7c
  402891:	jb     0x402873
  402893:	mov    esp,0xfac7010c
  402898:	pop    ds
  402899:	add    cl,ch
  40289b:	cmp    al,0xc8
  40289d:	add    BYTE PTR [esi],ah
  40289f:	push   es
  4028a0:	and    al,0x0
  4028a2:	jmp    0x34cbf0e3
  4028a7:	adc    DWORD PTR [edx+0x12],0x64
  4028ab:	pop    es
  4028ac:	and    BYTE PTR [eax+0x43],dl
  4028af:	cmp    ah,BYTE PTR [edi]
  4028b1:	jne    0x402878
  4028b3:	pop    ecx
  4028b4:	popf   
  4028b5:	clc    
  4028b6:	mov    esi,0x1bffcfe7
	...
  4028c7:	add    BYTE PTR [eax],al
  4028c9:	add    BYTE PTR [edi],dh
  4028cb:	push   ebx
  4028cc:	inc    ebp
  4028cd:	mov    cl,0x93
  4028cf:	or     al,BYTE PTR [ecx+ebp*8]
  4028d2:	out    0x52,eax
  4028d4:	in     al,dx
  4028d5:	adc    edi,DWORD PTR [edx]
  4028d7:	push   ebp
  4028d8:	inc    ebp
  4028d9:	in     eax,0x8c
  4028db:	daa    
  4028dc:	jne    0x4028bf
  4028de:	adc    al,0x5e
  4028e0:	cld    
  4028e1:	xchg   BYTE PTR [ecx],bl
  4028e3:	adc    edx,eax
  4028e5:	icebp  
  4028e6:	cmp    al,0x7d
  4028e8:	mov    eax,DWORD PTR [ebp+0x248dcc76]
  4028ee:	aas    
  4028ef:	js     0x4028f0
  4028f1:	fadd   QWORD PTR [edi+ebp*1]
  4028f4:	mov    eax,ds:0xc927115d
  4028f9:	sub    esi,esp
  4028fb:	es push esp
  4028fd:	bound  edx,QWORD PTR [eax]
  4028ff:	dec    ebx
  402900:	jge    0x4028f7
  402902:	cmp    al,0x9c
  402904:	adc    al,0x6a
  402906:	outs   dx,DWORD PTR ds:[esi]
  402907:	mov    eax,0x25dabd00
  40290c:	jne    0x4028e7
  40290e:	loope  0x4028ac
  402910:	or     al,0x26
  402912:	inc    edi
  402913:	shr    al,1
  402915:	imul   edx,eax,0x7e20ff26
  40291b:	rol    DWORD PTR [eax],cl
  40291d:	mov    ah,0x35
  40291f:	xor    al,0xff
  402921:	add    BYTE PTR [ebx],ch
  402923:	mov    ebx,0x2ae75ff
  402928:	mov    esp,0x833491ff
  40292d:	jge    0x40292f
	...
  40293b:	add    BYTE PTR [eax],al
  40293d:	jbe    0x402909
  40293f:	je     0x402955
  402941:	adc    eax,0xea000cb7
  402946:	and    eax,0x337675fe
  40294b:	jne    0x402959
  40294d:	sbb    DWORD PTR [esi+0x34e9e808],0x9afffff
  402957:	or     al,0x0
  402959:	cmp    esp,DWORD PTR [ecx-0x37dc7c14]
  40295f:	add    BYTE PTR [esp+ecx*2+0x33],dh
  402963:	jne    0x402971
  402965:	scas   al,BYTE PTR es:[edi]
  402966:	retf   0xea
  402969:	add    DWORD PTR es:[edx],eax
  40296c:	sub    esp,esi
  40296e:	jl     0x40296f
  402970:	jne    0x4029a4
  402972:	xor    eax,0x57ce0875
  402977:	(bad)  
  402978:	call   DWORD PTR [ecx+0x2608c261]
  40297e:	jg     0x40290b
  402980:	in     al,dx
  402981:	mov    eax,ds:0x39e8089d
  402986:	xor    edi,edi
  402988:	push   DWORD PTR [esi-0x7a97f781]
  40298e:	mov    eax,DWORD PTR [ecx+0x0]
  402991:	sbb    DWORD PTR [ebp+0x34a5e808],0xc9fcffff
  40299b:	push   DWORD PTR [ebp-0x22]
  40299e:	add    DWORD PTR [edi+edi*8+0x0],edx
	...
  4029ae:	add    BYTE PTR [eax],al
  4029b0:	and    DWORD PTR [ebx],esi
  4029b2:	push   0x2
  4029b4:	push   ebx
  4029b5:	lea    ecx,[eax+edx*2]
  4029b8:	aas    
  4029b9:	mov    esi,0x5aa70877
  4029be:	in     al,dx
  4029bf:	jmp    FWORD PTR [eax-0x572fec7]
  4029c5:	(bad)  
  4029c6:	push   edx
  4029c7:	call   DWORD PTR [edx]
  4029c9:	daa    
  4029ca:	fisttp DWORD PTR [ebp-0x70]
  4029cd:	ss in  al,dx
  4029cf:	pop    eax
  4029d0:	jbe    0x402a43
  4029d2:	(bad)  
  4029d3:	(bad)  
  4029d4:	jmp    0x40296f
  4029d6:	fild   WORD PTR [ebx+0x75ebfb83]
  4029dc:	inc    edi
  4029dd:	pop    es
  4029de:	sar    dl,1
  4029e0:	push   0x3345180e
  4029e5:	cwde   
  4029e6:	inc    esi
  4029e7:	cld    
  4029e8:	mov    esp,0xe50800f4
  4029ed:	cs in  al,dx
  4029ef:	jne    0x402a2c
  4029f1:	outs   dx,BYTE PTR ds:[esi]
  4029f2:	jbe    0x4029fc
  4029f4:	push   edi
  4029f5:	mov    dl,0xe9
  4029f7:	(bad)  
  4029f8:	cmp    BYTE PTR [esi],bh
  4029fa:	jbe    0x4029f8
  4029fc:	xor    BYTE PTR [esp+edi*8-0x13b1c319],bh
  402a03:	jmp    DWORD PTR [eax]
  402a05:	sbb    al,0xfb
  402a07:	out    0xd0,eax
  402a09:	call   0xc9f0:0xebc4ffec
  402a10:	std    
  402a11:	push   ss
  402a12:	add    edx,DWORD PTR [ebp+0x0]
	...
  402a21:	add    BYTE PTR [eax],al
  402a23:	mov    ah,0x92
  402a25:	add    ah,0xf3
  402a28:	cmc    
  402a29:	inc    esi
  402a2a:	hlt    
  402a2b:	aas    
  402a2c:	das    
  402a2d:	add    eax,DWORD PTR [eax]
  402a2f:	mov    edx,0xe050ef73
  402a34:	pop    ebx
  402a35:	sti    
  402a36:	out    0x52,eax
  402a38:	mov    DWORD PTR [ebx],eax
  402a3a:	add    BYTE PTR [edx-0x37d29412],bh
  402a40:	(bad)  
  402a41:	pushf  
  402a42:	sti    
  402a43:	fsub   DWORD PTR [edx+0x4eb8ec23]
  402a49:	lods   al,BYTE PTR ds:[esi]
  402a4a:	jmp    0x4029fc
  402a4c:	call   0x3e9:0x2f69db0d
  402a53:	xor    al,0x8
  402a55:	jne    0x402a6c
  402a57:	cwde   
  402a58:	call   0x7201:0xc82552f1
  402a5f:	inc    edx
  402a60:	enter  0x7ce9,0xfa
  402a64:	sbb    ebx,esi
  402a66:	jno    0x402ae3
  402a68:	das    
  402a69:	add    ebx,ebp
  402a6b:	aas    
  402a6c:	enter  0x71ce,0x37
  402a70:	xor    BYTE PTR [edi],ah
  402a72:	call   0x41b24ed7
  402a77:	push   ebx
  402a78:	aam    0xa1
  402a7a:	rep outs dx,DWORD PTR ds:[esi]
  402a7c:	ja     0x402a2c
  402a7e:	jno    0x402ab7
  402a80:	xor    BYTE PTR [ebx-0x16],bh
  402a83:	inc    eax
  402a84:	and    al,0xb0
  402a86:	mov    BYTE PTR [eax],0x0
	...
  402a95:	add    BYTE PTR [ebx-0x38],al
  402a98:	cmp    al,0x7f
  402a9a:	and    ecx,DWORD PTR [eax-0x5b]
  402a9d:	hlt    
  402a9e:	add    BYTE PTR [esi-0x37c0fb83],cl
  402aa4:	jmp    0x1964ad21
  402aa9:	jmp    0x402a35
  402aab:	rol    BYTE PTR [ecx-0x1636e905],1
  402ab1:	cmp    bh,0xa0
  402ab4:	lods   al,BYTE PTR ds:[esi]
  402ab5:	jmp    0x23f5:0x1341d072
  402abc:	dec    esi
  402abd:	jge    0x402a41
  402abf:	and    BYTE PTR [edx+0x69],ch
  402ac2:	out    0xcc,eax
  402ac4:	mov    ebx,0xb5bc17
  402ac9:	xor    DWORD PTR [edi],edi
  402acb:	and    esi,DWORD PTR [ebp+0x2d]
  402ace:	jmp    0x402ae2
  402ad0:	call   0xc10f67be
  402ad5:	xchg   ebp,eax
  402ad6:	jb     0x402afb
  402ad8:	jne    0x402aeb
  402ada:	or     ebp,DWORD PTR [esi-0x32bdff00]
  402ae0:	add    cl,ch
  402ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae3:	or     esi,edi
  402ae5:	sbb    DWORD PTR [edx],ebx
  402ae7:	(bad)  
  402ae8:	hlt    
  402ae9:	test   BYTE PTR [edi],0x24
  402aec:	call   0x1089628
  402af1:	shr    BYTE PTR [esi],cl
  402af3:	and    esi,DWORD PTR [ebp-0xf]
  402af6:	xchg   esp,eax
  402af7:	xor    bl,bh
  402af9:	(bad)  
	...
  402b06:	add    BYTE PTR [eax],al
  402b08:	add    BYTE PTR [ebp-0x11],ah
  402b0b:	shl    BYTE PTR [eax-0x2dff337e],0x3e
  402b12:	out    dx,eax
  402b13:	shl    BYTE PTR [eax+0x4300cc82],0x39
  402b1a:	scas   al,BYTE PTR es:[edi]
  402b1b:	cld    
  402b1c:	scas   al,BYTE PTR es:[edi]
  402b1d:	iret   
  402b1e:	iret   
  402b1f:	call   0xff637e92
  402b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b25:	jg     0x402b3f
  402b27:	add    ecx,ebp
  402b29:	cmp    al,0xc8
  402b2b:	lea    esp,[ebx+esi*1]
  402b2e:	js     0x402b2f
  402b30:	cld    
  402b31:	and    al,0x2b
  402b33:	jge    0x402bb2
  402b35:	and    eax,0xcf48323
  402b3a:	enter  0xdb74,0x5
  402b3e:	or     edi,DWORD PTR [ebx]
  402b40:	lods   al,BYTE PTR ds:[esi]
  402b41:	adc    BYTE PTR [ebp-0x37bc5ef9],bl
  402b47:	add    cl,ch
  402b49:	adc    edx,ecx
  402b4b:	sub    ebp,DWORD PTR [ecx]
  402b4d:	or     esi,eax
  402b4f:	sub    eax,DWORD PTR [eax]
  402b51:	push   ss
  402b52:	fs ret 0xe604
  402b56:	ja     0x402ae3
  402b58:	in     al,dx
  402b59:	gs arpl ax,di
  402b5c:	lea    esp,[ebx-0x5c00afd6]
  402b62:	push   ds
  402b63:	out    0x69,eax
  402b65:	dec    edi
  402b66:	mov    DWORD PTR [eax],0x2baf6685
  402b6c:	inc    DWORD PTR [eax]
	...
  402b7a:	add    BYTE PTR [eax],al
  402b7c:	rcr    DWORD PTR [esi],cl
  402b7e:	out    0x71,eax
  402b80:	aas    
  402b81:	dec    DWORD PTR cs:[ecx+0x75ff2ee3]
  402b88:	mov    bh,ch
  402b8a:	xor    eax,ebp
  402b8c:	xchg   esi,eax
  402b8d:	(bad)  
  402b8e:	or     eax,eax
  402b90:	loop   0x402b49
  402b92:	push   DWORD PTR [ebp+0x6a]
  402b95:	das    
  402b96:	jne    0x402b90
  402b98:	ss add al,0x35
  402b9b:	or     edx,DWORD PTR [esi-0x3a]
  402b9e:	push   DWORD PTR [ebp+0x7a]
  402ba1:	add    esp,DWORD PTR [eax]
  402ba3:	call   0x763ff20e
  402ba8:	pop    esi
  402ba9:	(bad)  
  402baa:	push   ebx
  402bab:	sti    
  402bac:	cdq    
  402bad:	xor    cl,cl
  402baf:	ret    0xc64e
  402bb2:	push   ebp
  402bb3:	mov    ecx,edx
  402bb5:	dec    ebx
  402bb6:	(bad)  
  402bb7:	call   0x8e1bef31
  402bbc:	arpl   WORD PTR [eax],si
  402bbe:	push   eax
  402bbf:	jmp    DWORD PTR [ebx]
  402bc1:	push   ds
  402bc2:	out    0x19,eax
  402bc4:	scas   eax,DWORD PTR es:[edi]
  402bc5:	int3   
  402bc6:	add    BYTE PTR [ebp-0x4878e01a],al
  402bcc:	push   ss
  402bcd:	mov    BYTE PTR [eax],0xff
  402bd0:	jecxz  0x402bef
  402bd2:	out    0x1d,eax
  402bd4:	pop    edi
  402bd5:	das    
  402bd6:	dec    DWORD PTR [ecx-0x108bc1]
  402bdc:	jb     0x402b71
  402bde:	(bad)  
	...
  402bec:	add    BYTE PTR [eax],al
  402bee:	add    al,bl
  402bf0:	das    
  402bf1:	add    ecx,DWORD PTR [ebx]
  402bf3:	push   DWORD PTR [edx]
  402bf5:	jg     0x402b93
  402bf7:	aas    
  402bf8:	das    
  402bf9:	add    ecx,DWORD PTR [ecx+0x75e9df82]
  402bff:	retf   
  402c00:	mov    bh,0xdf
  402c02:	(bad)  
  402c03:	aas    
  402c04:	das    
  402c05:	test   ah,al
  402c07:	cmp    esi,DWORD PTR [ebx+eax*1]
  402c0a:	add    BYTE PTR [edi],cl
  402c0c:	das    
  402c0d:	push   ebx
  402c0e:	call   0x435be9
  402c13:	(bad)  
  402c14:	ins    BYTE PTR es:[edi],dx
  402c15:	xlat   BYTE PTR ds:[ebx]
  402c16:	dec    DWORD PTR [edx]
  402c18:	and    ebx,ebx
  402c1a:	ror    BYTE PTR [eax+0x7b83032f],cl
  402c20:	xor    edi,esi
  402c22:	(bad)  
  402c23:	js     0x402c44
  402c25:	add    edx,DWORD PTR [eax+0x67]
  402c28:	lahf   
  402c29:	add    eax,DWORD PTR [eax]
  402c2b:	aas    
  402c2c:	test   al,0x3e
  402c2e:	call   0x76285b08
  402c33:	imul   esp,DWORD PTR [edx+0x6e],0xfffffff4
  402c37:	push   eax
  402c38:	in     al,0xdc
  402c3a:	call   edx
  402c3c:	pop    esi
  402c3d:	fstp   TBYTE PTR [eax+eax*2+0x383032f]
  402c44:	sbb    edi,DWORD PTR [edx+0x45]
  402c47:	aaa    
  402c48:	cmp    ch,BYTE PTR [esi-0x4]
  402c4b:	pop    ss
  402c4c:	test   eax,0x4a3f00e0
  402c51:	outs   dx,BYTE PTR ds:[esi]
  402c52:	or     BYTE PTR [eax],al
	...
  402c60:	add    BYTE PTR [eax],al
  402c62:	daa    
  402c63:	or     ah,ch
  402c65:	call   DWORD PTR [eax]
  402c67:	(bad)  
  402c6a:	add    ch,dl
  402c6c:	inc    ebx
  402c6d:	add    BYTE PTR [eax],al
  402c6f:	enter  0xfbdc,0xe0
  402c73:	retf   
  402c74:	pop    esp
  402c75:	call   0xe871f96a
  402c7a:	jb     0x402c98
  402c7c:	dec    esi
  402c7d:	outs   dx,BYTE PTR ds:[esi]
  402c7e:	aaa    
  402c7f:	xor    BYTE PTR [ebx-0x19],cl
  402c82:	fsub   DWORD PTR [eax]
  402c84:	or     cl,ah
  402c86:	rcr    BYTE PTR [edx+0x3052e831],1
  402c8c:	outs   dx,BYTE PTR cs:[esi]
  402c8e:	aaa    
  402c8f:	xor    cl,dh
  402c91:	out    0xb8,al
  402c93:	and    dl,cl
  402c95:	retf   
  402c96:	mov    al,0x9a
  402c98:	add    eax,0xe9c850db
  402c9d:	add    esp,DWORD PTR [eax+0x48db119a]
  402ca3:	enter  0x3e9,0x90
  402ca7:	call   0xe7ee:0x1e13dbe1
  402cae:	mov    ah,0x4
  402cb0:	inc    edx
  402cb1:	mov    ebp,0x50e9cb7d
  402cb6:	les    esi,FWORD PTR [ebx]
  402cb8:	push   0x69
  402cba:	aaa    
  402cbb:	enter  0xfc55,0x61
  402cbf:	call   0x3e9:0x2921dbf1
	...
  402cd2:	add    BYTE PTR [eax],al
  402cd4:	add    BYTE PTR [eax+ecx*1],ah
  402cd7:	mov    al,ds:0x14c843c2
  402cdc:	jnp    0x402d31
  402cde:	dec    esp
  402cdf:	sub    al,0xfc
  402ce1:	inc    ebx
  402ce2:	dec    eax
  402ce3:	jmp    0x3b86beb
  402ce8:	inc    esp
  402ce9:	pop    ss
  402cea:	mov    esp,0x113f0486
  402cef:	stos   DWORD PTR es:[edi],eax
  402cf0:	add    BYTE PTR [edi],bh
  402cf2:	jne    0x402d66
  402cf4:	fsubr  DWORD PTR [eax+0x1c]
  402cf7:	add    BYTE PTR [edx-0x6a],ah
  402cfa:	ror    BYTE PTR [ebx+0xe2b071c],1
  402d00:	mov    eax,0x12023203
  402d05:	sti    
  402d06:	sbb    ebp,DWORD PTR [ebx+0x329bdb0]
  402d0c:	pop    edx
  402d0d:	lds    edi,FWORD PTR [edi-0x37]
  402d10:	sub    ebx,ebx
  402d12:	pop    ds
  402d13:	push   esp
  402d14:	jb     0x402d0d
  402d16:	jbe    0x402d6f
  402d18:	bound  edx,QWORD PTR [esi-0x34]
  402d1b:	cld    
  402d1c:	bound  ecx,QWORD PTR [esi-0x30]
  402d1f:	mov    esi,DWORD PTR [esp+ecx*2-0x20e5fdd5]
  402d26:	jg     0x402d86
  402d28:	and    BYTE PTR [ebp-0x34],bh
  402d2b:	add    BYTE PTR [ebp+eiz*1+0x159e562c],dh
  402d32:	xchg   ebp,eax
  402d33:	or     ch,bh
  402d35:	adc    eax,0xc2108d
	...
  402d46:	add    BYTE PTR [eax],al
  402d48:	jl     0x402d9d
  402d4a:	jge    0x402d29
  402d4c:	popf   
  402d4d:	retf   0x8ff3
  402d50:	jne    0x402d62
  402d52:	jne    0x402d3c
  402d54:	cld    
  402d55:	jle    0x402db5
  402d57:	mov    al,ds:0x3400cc7e
  402d5c:	in     al,0x2b
  402d5e:	sub    DWORD PTR [ebp+0x1a577660],0xfffffff3
  402d65:	leave  
  402d66:	add    ecx,ebp
  402d68:	cmp    al,0x1f
  402d6a:	jne    0x402d4d
  402d6c:	fs cmp edi,edi
  402d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d70:	and    DWORD PTR [ebx+0x7d],edx
  402d73:	icebp  
  402d74:	jno    0x402cfd
  402d76:	sub    edi,DWORD PTR [ebx-0x16fe3825]
  402d7c:	cmp    al,0x50
  402d7e:	adc    al,0x0
  402d80:	cld    
  402d81:	and    al,0xc2
  402d83:	loop   0x402d44
  402d85:	mov    eax,ds:0xdf59087d
  402d8a:	mov    esi,DWORD PTR [ebp-0x1e]
  402d8d:	pop    esp
  402d8e:	inc    ebp
  402d8f:	(bad)  
  402d90:	out    0xc1,al
  402d92:	leave  
  402d93:	sub    edi,DWORD PTR [ebp-0x5f]
  402d96:	add    al,0x3b
  402d98:	pop    esi
  402d99:	mov    bh,bh
  402d9b:	add    BYTE PTR [ebx-0x28fb75dc],bl
  402da1:	retf   0xfe45
  402da4:	loope  0x402e12
  402da6:	push   ebp
  402da7:	(bad)  
  402da8:	pop    esp
  402da9:	pop    ds
  402daa:	cmp    DWORD PTR [eax+0x0],ecx
	...
  402db8:	add    BYTE PTR [eax],al
  402dba:	add    dl,bl
  402dbc:	icebp  
  402dbd:	mov    al,BYTE PTR [ebp+0x61]
  402dc0:	mov    ds:0xf1e73a04,eax
  402dc5:	dec    ebp
  402dc6:	adc    ah,al
  402dc8:	enter  0xc92b,0x30
  402dcc:	or     dh,BYTE PTR [ebp-0x2b]
  402dcf:	fld    QWORD PTR [ebp+0x1764c95e]
  402dd5:	call   DWORD PTR [ebp+ebx*1-0x9]
  402dd9:	add    ah,0x8e
  402ddc:	js     0x402e34
  402dde:	push   edi
  402ddf:	popa   
  402de0:	scas   al,BYTE PTR es:[edi]
  402de1:	or     BYTE PTR [ebx-0x14],bl
  402de4:	enter  0x4588,0x93
  402de8:	mov    eax,ds:0xdede0143
  402ded:	cld    
  402dee:	mov    edi,DWORD PTR [ebp-0x24]
  402df1:	inc    edi
  402df2:	mov    ecx,DWORD PTR [ebx]
  402df4:	and    dh,al
  402df6:	inc    ebp
  402df7:	mov    es,ebx
  402df9:	add    BYTE PTR [eax],al
  402dfb:	push   esi
  402dfc:	lahf   
  402dfd:	dec    ebp
  402dfe:	adc    ch,al
  402e00:	test   dh,bh
  402e02:	inc    ebp
  402e03:	rcl    DWORD PTR [ebx],cl
  402e05:	mov    ch,0x45
  402e07:	aas    
  402e08:	xor    al,0xf5
  402e0a:	mov    ch,0x4b
  402e0c:	idiv   DWORD PTR [edx+0x55]
  402e0f:	sbb    BYTE PTR [eax],dh
  402e11:	dec    esi
  402e12:	cld    
  402e13:	inc    eax
  402e14:	aad    0x3f
  402e16:	cld    
  402e17:	mov    ch,0xfb
  402e19:	sub    cl,BYTE PTR [eax-0x4a0a5296]
	...
  402e2b:	add    BYTE PTR [eax],al
  402e2d:	add    BYTE PTR [edx+0x37147ca4],al
  402e33:	lods   eax,DWORD PTR cs:[esi]
  402e35:	inc    ebp
  402e36:	jmp    0x402de1
  402e38:	dec    edi
  402e39:	push   DWORD PTR [edi+0x728a2b13]
  402e3f:	xchg   BYTE PTR [edx],al
  402e41:	push   ebp
  402e42:	rcr    DWORD PTR [ecx+0x6cb43a10],1
  402e48:	jmp    0x402e7a
  402e4a:	sub    ebx,DWORD PTR [edi]
  402e4c:	in     al,0x45
  402e4e:	mov    bh,0xd1
  402e50:	les    ecx,FWORD PTR [edx+0x37cbbfa]
  402e56:	mov    ch,0x6c
  402e58:	out    0x88,eax
  402e5a:	cld    
  402e5b:	das    
  402e5c:	inc    esp
  402e5d:	pop    esi
  402e5e:	hlt    
  402e5f:	xlat   BYTE PTR ds:[ebx]
  402e60:	ret    0x3f0c
  402e63:	xor    al,0x78
  402e65:	in     al,dx
  402e66:	mov    esi,0x80fed8eb
  402e6b:	cs push eax
  402e6d:	sub    edx,DWORD PTR [esp+edx*4-0x1f003c2]
  402e74:	ins    DWORD PTR es:[edi],dx
  402e75:	or     BYTE PTR [edi+0x6b],dl
  402e78:	fld    QWORD PTR [eax]
  402e7a:	aas    
  402e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e7c:	ret    
  402e7d:	vmptrst QWORD PTR [ebp+0x3]
  402e81:	add    BYTE PTR [edi],bh
  402e83:	pop    esi
  402e84:	outs   dx,BYTE PTR ds:[esi]
  402e85:	or     BYTE PTR [edi+0x67],dl
  402e88:	in     eax,dx
  402e89:	inc    DWORD PTR [eax-0x58]
  402e8c:	ds hlt 
  402e8e:	cmp    al,cl
  402e90:	sbb    al,0xe8
	...
  402e9e:	add    BYTE PTR [eax],al
  402ea0:	add    BYTE PTR [edi],ah
  402ea2:	dec    edi
  402ea3:	test   BYTE PTR [ebx],al
  402ea5:	aas    
  402ea6:	shr    DWORD PTR [ecx+0x244fa06f],1
  402eac:	hlt    
  402ead:	sbb    BYTE PTR [ebx+0x1e99db7d],dl
  402eb3:	jle    0x402e99
  402eb5:	mov    dh,0x82
  402eb7:	jno    0x402e9d
  402eb9:	mov    dl,BYTE PTR [esi+ebp*2]
  402ebc:	outs   dx,BYTE PTR ds:[esi]
  402ebd:	neg    DWORD PTR [esp+ebx*8]
  402ec0:	repz out 0x4b,eax
  402ec3:	pop    edi
  402ec4:	in     al,0xe8
  402ec6:	sbb    al,0xdc
  402ec8:	out    0xd7,eax
  402eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecb:	inc    esp
  402ecc:	add    edi,DWORD PTR [edi]
  402ece:	sbb    eax,0x78d8f7bc
  402ed3:	inc    esp
  402ed4:	add    edi,DWORD PTR [edi]
  402ed6:	js     0x402f0e
  402ed8:	outs   dx,BYTE PTR ds:[esi]
  402ed9:	xor    ecx,DWORD PTR [ebx+0x64]
  402edc:	aad    0xb9
  402ede:	sbb    al,0x26
  402ee0:	push   ebx
  402ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee2:	bound  ebx,QWORD PTR [edi]
  402ee4:	in     al,0xa8
  402ee6:	sbb    al,0x9c
  402ee8:	out    dx,eax
  402ee9:	mov    al,ds:0xc2761192
  402eee:	sub    eax,0x7790e407
  402ef3:	adc    ebp,esp
  402ef5:	mov    DWORD PTR [esi+esi*8],ebx
  402ef8:	jecxz  0x402f04
  402efa:	rol    BYTE PTR [ecx],1
  402efc:	repz ja 0x402f1b
  402eff:	out    0x6e,al
  402f01:	inc    edi
  402f02:	mov    al,0xb9
  402f04:	dec    ebx
	...
  402f11:	add    BYTE PTR [eax],al
  402f13:	add    dh,bh
  402f15:	(bad)  
  402f16:	(bad)  
  402f17:	pop    ecx
  402f18:	aaa    
  402f19:	xor    BYTE PTR [edx-0xde3a722],dl
  402f1f:	mov    ebx,0xe3b59250
  402f24:	rcr    BYTE PTR [edi],cl
  402f26:	add    BYTE PTR [esi-0x7d17301a],dh
  402f2c:	sbb    DWORD PTR [edi+edi*8],ebx
  402f2f:	retf   0x1bf4
  402f32:	jne    0x402ed5
  402f34:	sbb    eax,DWORD PTR [eax]
  402f36:	std    
  402f37:	xchg   esi,eax
  402f38:	sbb    al,0x1c
  402f3a:	jne    0x402f1d
  402f3c:	and    al,0x89
  402f3e:	clc    
  402f3f:	xchg   BYTE PTR [eax+edx*2],bl
  402f42:	ret    
  402f43:	and    bh,dl
  402f45:	push   es
  402f46:	or     cl,ch
  402f48:	inc    edi
  402f49:	dec    edi
  402f4a:	in     al,dx
  402f4b:	push   0x7
  402f4d:	adc    eax,0xb4867257
  402f52:	or     ebp,DWORD PTR [ecx]
  402f54:	xchg   edx,eax
  402f56:	(bad)  
  402f57:	jmp    0xe940f798
  402f5c:	sub    DWORD PTR [ebx],ebx
  402f5e:	add    esp,0xffffffd4
  402f61:	enter  0xe675,0xaa
  402f65:	enter  0xe902,0x3c
  402f69:	das    
  402f6a:	punpckhdq mm3,QWORD PTR [esi]
  402f6d:	rol    BYTE PTR [edx],0x9c
  402f70:	inc    ebp
  402f71:	pop    esi
  402f72:	add    al,ch
  402f74:	cmp    al,0xc8
  402f76:	jmp    0x402f63
	...
  402f84:	add    BYTE PTR [eax],al
  402f86:	add    BYTE PTR [ecx-0xa],dl
  402f89:	and    BYTE PTR [ebx],0x9a
  402f8c:	sbb    eax,DWORD PTR [ecx]
  402f8e:	jmp    0x9a3cb542
  402f93:	push   edx
  402f94:	scas   al,BYTE PTR es:[edi]
  402f95:	add    dh,dh
  402f97:	out    0xcb,eax
  402f99:	push   DWORD PTR [esp+eax*2+0x30]
  402f9d:	icebp  
  402f9e:	int3   
  402f9f:	cmp    al,0xc8
  402fa1:	or     ebp,DWORD PTR [ecx+0x2c8dab07]
  402fa7:	cmp    DWORD PTR [eax+0x6a],0xffffffe9
  402fab:	scas   eax,DWORD PTR es:[edi]
  402fac:	test   esp,esi
  402fae:	add    BYTE PTR [esi],dh
  402fb0:	stos   BYTE PTR es:[edi],al
  402fb1:	add    bh,bh
  402fb3:	adc    edx,DWORD PTR [esi+edi*8]
  402fb6:	jne    0x402f42
  402fb8:	das    
  402fb9:	fsubr  st(5),st
  402fbb:	es (bad) 
  402fbd:	or     eax,eax
  402fbf:	push   ebx
  402fc0:	js     0x402f45
  402fc2:	jge    0x402fa2
  402fc4:	(bad)  
  402fc5:	je     0x40300d
  402fc7:	xchg   ebp,eax
  402fc8:	test   al,0xf4
  402fca:	add    DWORD PTR [ebx],esi
  402fcc:	into   
  402fcd:	cmp    DWORD PTR [ebp-0x42],0xffffffc3
  402fd1:	je     0x40300d
  402fd3:	lea    edx,[eax+0x2c2640f8]
  402fd9:	pop    esi
  402fda:	std    
  402fdb:	imul   esp,DWORD PTR [esi],0x906bf88b
  402fe1:	clc    
  402fe2:	push   eax
  402fe3:	mov    cl,0xac
  402fe5:	add    BYTE PTR [edx-0x2a],ch
  402fe8:	and    eax,0x1075
	...
  402ff9:	add    BYTE PTR [ecx-0x3f170380],cl
  402fff:	das    
  403000:	add    BYTE PTR [eax],al
  403002:	int    0x6
  403004:	je     0x403010
  403006:	mov    eax,ds:0x69fd272e
  40300b:	es sub edi,edi
  40300e:	dec    ebp
  40300f:	retf   
  403010:	mov    eax,DWORD PTR [ebp-0x4e]
  403013:	leave  
  403014:	shl    BYTE PTR [ebx+edx*4+0x25],0x75
  403019:	clc    
  40301a:	stc    
  40301b:	(bad)  
  40301c:	push   DWORD PTR [ebp+0x3a]
  40301f:	das    
  403020:	mov    ah,ch
  403022:	xchg   esi,eax
  403023:	(bad)  
  403024:	mov    eax,edi
  403026:	popf   
  403027:	push   es
  403028:	jne    0x403046
  40302a:	in     eax,0xa7
  40302c:	sbb    BYTE PTR [edx],al
  40302e:	adc    eax,0x3e458a1e
  403033:	test   BYTE PTR [eax-0x1],dl
  403036:	aas    
  403037:	jl     0x403031
  403039:	(bad)  
  40303a:	shl    BYTE PTR [eax],cl
  40303c:	loopne 0x4030b3
  40303e:	inc    ebx
  40303f:	add    dl,BYTE PTR [edi+0x8]
  403042:	push   edi
  403043:	iret   
  403044:	loope  0x403045
  403046:	inc    eax
  403047:	mov    cl,0xcb
  403049:	ret    0x2f53
  40304c:	mov    esp,DWORD PTR ss:[ebx]
  40304f:	mov    cl,0x5f
  403051:	or     BYTE PTR [esi],bh
  403053:	das    
  403054:	add    eax,DWORD PTR [eax+0x35e028aa]
  40305a:	mov    al,ds:0x43e7
	...
  40306b:	add    BYTE PTR [eax],al
  40306d:	shr    ah,0xc
  403070:	push   0x3f
  403072:	call   0xfef3:0x1d001457
  403079:	jb     0x403076
  40307b:	fbstp  TBYTE PTR [ebp+0x47]
  40307e:	ja     0x403058
  403080:	(bad)  
  403081:	call   0x5002fc00
  403086:	das    
  403087:	sub    al,0xc0
  403089:	(bad)  
  40308a:	fbstp  TBYTE PTR [ebx+0x31896e2]
  403090:	add    BYTE PTR [edi],bh
  403092:	shr    dh,0x73
  403095:	xor    esi,DWORD PTR [eax+0x48cd31d6]
  40309b:	loopne 0x40301e
  40309d:	lods   eax,DWORD PTR ds:[esi]
  40309e:	and    dl,dh
  4030a0:	adc    BYTE PTR [esi-0x33],cl
  4030a3:	repnz mov DWORD PTR [ebx-0x54],ecx
  4030a7:	in     al,0x87
  4030a9:	(bad)  
  4030aa:	cs loope 0x40306d
  4030ad:	or     ah,ch
  4030af:	lds    edx,FWORD PTR [ebp-0x4c]
  4030b2:	retf   
  4030b3:	cmp    DWORD PTR [ebx-0x2f27d906],ecx
  4030b9:	les    ebp,FWORD PTR [edi+ecx*1-0x637fd75]
  4030c0:	or     al,0x76
  4030c2:	xchg   esp,eax
  4030c3:	add    DWORD PTR [ebp+0xbc3078f],ecx
  4030c9:	or     eax,0x3fe104c1
  4030ce:	enter  0x8ce9,0x0
	...
  4030de:	add    BYTE PTR [eax],al
  4030e0:	inc    ebx
  4030e1:	inc    ebx
  4030e2:	leave  
  4030e3:	mov    dh,bh
  4030e5:	(bad)  
  4030e6:	cli    
  4030e7:	lds    eax,FWORD PTR [eax+0xfd8c126]
  4030ed:	jns    0x40309f
  4030ef:	lds    edi,FWORD PTR [ebx]
  4030f1:	enter  0x8d34,0x13
  4030f5:	jne    0x403161
  4030f7:	pop    esi
  4030f8:	inc    edi
  4030f9:	enter  0x914,0xf8
  4030fd:	xor    cl,0x46
  403100:	ja     0x403089
  403102:	jmp    0xea0cb38b
  403107:	push   esi
  403108:	inc    eax
  403109:	add    DWORD PTR [eax+edx*1],esp
  40310c:	jp     0x40309e
  40310e:	test   al,0x3
  403110:	call   0x602c22a7
  403115:	and    eax,0xffc403e9
  40311a:	dec    ebp
  40311b:	push   esi
  40311c:	inc    ebx
  40311d:	xor    BYTE PTR [edi-0x1537c01c],bl
  403123:	mov    ebx,0x2041757c
  403128:	mov    ebx,0x978c2e18
  40312d:	sbb    BYTE PTR [ebx+ecx*1-0x1b76cff4],bl
  403134:	aas    
  403135:	enter  0x5616,0x4b
  403139:	jne    0x40313c
  40313b:	ds pushf 
  40313d:	(bad)  
  40313e:	jmp    0x30bcadcf
  403143:	lds    eax,FWORD PTR [eax]
	...
  403151:	add    BYTE PTR [eax],al
  403153:	aaa    
  403154:	enter  0x9c00,0xcb
  403158:	sub    edx,DWORD PTR [ebx+0x6a]
  40315b:	adc    eax,edx
  40315d:	add    BYTE PTR [eax+eax*2+0x1],bl
  403161:	inc    ebp
  403162:	icebp  
  403163:	test   DWORD PTR [edi-0x654216bf],0xc0f7e90c
  40316d:	(bad)  
  40316e:	sub    al,0x2f
  403170:	or     DWORD PTR [eax+0x28],0x3b
  403174:	sbb    DWORD PTR [ebp-0x1f],esi
  403177:	and    al,0xc5
  403179:	jecxz  0x403164
  40317b:	cmp    al,0x43
  40317d:	fsub   DWORD PTR [esi-0x14173b7a]
  403183:	sbb    eax,0xd4ea00c9
  403188:	mov    edx,DWORD PTR [ebx-0x7f]
  40318b:	and    al,0x14
  40318d:	inc    DWORD PTR [esi-0xb010f4c]
  403193:	xor    al,0x7b
  403195:	call   0x1090f7f
  40319a:	outs   dx,BYTE PTR ds:[esi]
  40319b:	xchg   esi,eax
  40319c:	les    edx,FWORD PTR [ebx+0x51]
  40319f:	cmp    ch,BYTE PTR [ebx]
  4031a1:	add    cl,ch
  4031a3:	mov    ebx,0x84ac0895
  4031a8:	mov    DWORD PTR [eax],eax
  4031aa:	aad    0x44
  4031ac:	pop    ss
  4031ad:	jne    0x4031a0
  4031af:	aam    0x67
  4031b1:	sti    
  4031b2:	ds loopne 0x4031f8
  4031b5:	ret    
  4031b6:	xchg   edx,eax
	...
  4031c3:	add    BYTE PTR [eax],al
  4031c5:	add    BYTE PTR [ebx+0x77e9080a],cl
  4031cb:	inc    ebx
  4031cc:	in     al,dx
  4031cd:	push   0x77
  4031cf:	adc    al,0x57
  4031d1:	xchg   ecx,eax
  4031d2:	aaa    
  4031d3:	leave  
  4031d4:	add    cl,ch
  4031d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031d7:	data16 sti 
  4031d9:	push   cs
  4031da:	jo     0x40321d
  4031dc:	inc    ebp
  4031dd:	add    BYTE PTR [edx+0x4b],al
  4031e0:	cmp    eax,0x8ccd7b
  4031e5:	add    bl,bh
  4031e7:	enter  0x16eb,0x61
  4031eb:	jo     0x4031e9
  4031ed:	push   0x56
  4031ef:	mov    eax,ds:0xc40bff00
  4031f4:	push   0x0
  4031f6:	jno    0x403208
  4031f8:	jp     0x403245
  4031fa:	daa    
  4031fb:	int3   
  4031fc:	test   eax,eax
  4031fe:	inc    DWORD PTR [ebx+0x238275ff]
  403204:	imul   edi,ebx,0xfffffff1
  403207:	cmc    
  403208:	mov    BYTE PTR [ebp-0x1e],0xca
  40320c:	add    BYTE PTR [eax],al
  40320e:	push   ss
  40320f:	ss jg  0x40325d
  403212:	push   edi
  403213:	int3   
  403214:	jmp    0x403243
  403216:	popf   
  403217:	push   ds
  403218:	mov    al,BYTE PTR [ebp+0x1e]
  40321b:	loopne 0x40321c
  40321d:	jg     0x4031e0
  40321f:	cmc    
  403220:	cmp    BYTE PTR [edx+0x1a],al
  403223:	jo     0x403240
  403225:	push   0xffffffe6
  403227:	aaa    
  403228:	inc    edx
  403229:	or     BYTE PTR [eax],al
	...
  403237:	add    BYTE PTR [eax],al
  403239:	push   esi
  40323a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40323b:	retf   
  40323c:	dec    esp
  40323d:	xchg   edi,eax
  40323e:	retf   0x32ff
  403241:	mov    ds,edi
  403243:	(bad)  
  403244:	push   DWORD PTR [ecx-0x3e]
  403247:	shl    BYTE PTR [ebx+ebx*8+0x43],0x45
  40324c:	cld    
  40324d:	ins    DWORD PTR es:[edi],dx
  40324e:	ret    
  40324f:	add    edi,0xffffffda
  403252:	dec    ecx
  403253:	aas    
  403254:	add    bl,bh
  403256:	add    al,0x8b
  403258:	inc    ebp
  403259:	(bad)  
  40325a:	(bad)  
  40325b:	leave  
  40325c:	ret    0xca9a
  40325f:	push   ebp
  403260:	mov    esi,DWORD PTR [edx]
  403262:	fimul  DWORD PTR [ebx+0xa293f45]
  403268:	ror    BYTE PTR [ebx],0x2c
  40326b:	cmp    DWORD PTR [eax],0x3f
  40326e:	xchg   esp,eax
  40326f:	or     DWORD PTR [eax+0x3213f],edi
  403275:	adc    al,0xe8
  403277:	rol    DWORD PTR [edi+edi*1],0x4b
  40327b:	add    ebp,DWORD PTR [edx+0x3f]
  40327e:	jnp    0x403281
  403280:	push   0x3f
  403282:	jnp    0x403288
  403284:	push   0x320bf
  403289:	push   eax
  40328a:	jnp    0x403298
  40328c:	call   0x4431d9
  403291:	mov    ah,0x68
  403293:	sub    eax,eax
  403295:	jl     0x40326a
  403297:	or     DWORD PTR [ebx+0x27],edx
  40329a:	data16 jecxz 0x40329d
	...
  4032a9:	add    BYTE PTR [eax],al
  4032ab:	add    BYTE PTR [edi],bh
  4032ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ae:	add    eax,DWORD PTR [eax]
  4032b0:	aas    
  4032b1:	pop    ds
  4032b2:	cmp    cl,cl
  4032b4:	std    
  4032b5:	and    eax,DWORD PTR [ebx]
  4032b7:	push   ebp
  4032b8:	les    edx,FWORD PTR [ebx+0x1a374589]
  4032be:	ret    
  4032bf:	je     0x4032fb
  4032c1:	lahf   
  4032c2:	sbb    al,0x0
  4032c4:	jb     0x4032ee
  4032c6:	fwait
  4032c7:	add    BYTE PTR [edi],bh
  4032c9:	pop    ds
  4032ca:	add    ecx,ecx
  4032cc:	std    
  4032cd:	and    eax,DWORD PTR [ebx]
  4032cf:	jmp    FWORD PTR [edx+0x17]
  4032d2:	jmp    0x4032de
  4032d4:	fstp   QWORD PTR [edi]
  4032d6:	add    eax,DWORD PTR [ebx+0xd5886d7]
  4032dc:	xchg   esi,eax
  4032dd:	out    dx,eax
  4032de:	add    al,BYTE PTR [eax]
  4032e0:	aas    
  4032e1:	es jbe 0x4032a4
  4032e4:	dec    eax
  4032e5:	xchg   ebp,eax
  4032e6:	(bad)  
  4032e7:	jmp    0x403323
  4032e9:	xchg   edi,eax
  4032ea:	add    al,0x0
  4032ec:	aas    
  4032ed:	enter  0xcae9,0x7d
  4032f1:	int3   
  4032f2:	jmp    0x6a64f72d
  4032f7:	enter  0xa293,0xe9
  4032fb:	imul   edi,DWORD PTR [edi],0x970b7c15
  403301:	sub    DWORD PTR [eax],ecx
  403303:	add    al,0x3f
  403305:	shr    DWORD PTR [ecx],0x58
  403308:	and    eax,0xc5eb9978
  40330d:	adc    ah,dh
  40330f:	fadd   QWORD PTR [eax]
	...
  40331d:	add    BYTE PTR [eax],al
  40331f:	mov    dh,0x8b
  403321:	fnstsw WORD PTR [ebx]
  403323:	out    dx,eax
  403324:	adc    al,0x5c
  403326:	loopne 0x403378
  403328:	fwait
  403329:	loope  0x403316
  40332b:	ja     0x403354
  40332d:	jmp    0x34486735
  403332:	adc    BYTE PTR [eax],bh
  403334:	fwait
  403335:	mov    ch,0xeb
  403337:	cwde   
  403338:	adc    ch,BYTE PTR [esi-0x6df7ab24]
  40333e:	add    BYTE PTR [edx+ecx*4-0x34023563],dh
  403345:	jmp    0x3a63f780
  40334a:	mov    DWORD PTR [edx-0x3c],ebp
  40334d:	adc    esi,esp
  40334f:	ins    DWORD PTR es:[edi],dx
  403350:	and    BYTE PTR [edx],al
  403352:	(bad)  
  403354:	adc    al,0x3
  403356:	add    al,0x65
  403358:	enter  0x103,0x55
  40335c:	enter  0xd3,0x57
  403360:	enter  0x3e9,0xbf
  403364:	adc    al,0xdc
  403366:	or     esp,edi
  403368:	mov    BYTE PTR [eax+0x3],cl
  40336b:	aas    
  40336c:	aas    
  40336d:	jmp    0xf03:0xd3744b43
  403374:	and    BYTE PTR [eax],al
  403376:	ins    DWORD PTR es:[edi],dx
  403377:	popf   
  403378:	mov    DWORD PTR [eax],0x6ac3ff60
  40337e:	jmp    0xe9aafb99
	...
  40338f:	add    BYTE PTR [eax],al
  403391:	add    BYTE PTR [esi],ah
  403393:	retf   0xe96a
  403396:	jae    0x403370
  403398:	call   0x107d134
  40339d:	bnd jl 0x40333b
  4033a0:	das    
  4033a1:	jo     0x4033a2
  4033a3:	retf   
  4033a4:	push   0xffffffe9
  4033a6:	out    0xc7,al
  4033a8:	push   0xffffffe9
  4033aa:	(bad)  
  4033ab:	retf   
  4033ac:	push   eax
  4033ad:	rcr    esp,1
  4033af:	es add cl,ch
  4033b2:	retf   
  4033b3:	mov    BYTE PTR [eax],cl
  4033b5:	loop   0x403433
  4033b7:	call   0xf3e8:0xcbf0ce24
  4033be:	pop    ebx
  4033bf:	mov    DWORD PTR [eax],0x32050be
  4033c5:	enter  0xc83b,0xc7
  4033c9:	jmp    0xc610:0xa6ff1405
  4033d0:	(bad)  
  4033d1:	fisub  DWORD PTR [ebx*1+0xb3ce9e0]
  4033d8:	add    ecx,DWORD PTR [esi-0x2d00ec1c]
  4033de:	cld    
  4033df:	rol    DWORD PTR [ebx-0xf],1
  4033e2:	inc    ebp
  4033e3:	cmp    eax,0x70212c0
  4033e8:	or     cl,ch
  4033ea:	das    
  4033eb:	aas    
  4033ec:	in     al,dx
  4033ed:	mov    edx,0x6a0875b1
  4033f2:	cmp    BYTE PTR [ebx],dl
  4033f4:	je     0x4033f4
	...
  403402:	add    BYTE PTR [eax],al
  403404:	add    ch,dh
  403406:	xchg   edi,eax
  403407:	or     BYTE PTR [ecx+0x22],al
  40340a:	sub    DWORD PTR [eax],eax
  40340c:	add    dh,dl
  40340e:	out    dx,al
  40340f:	jb     0x403415
  403411:	push   cs
  403412:	or     eax,esp
  403414:	add    BYTE PTR [esi+0x18e832ee],ah
  40341a:	sub    al,0x0
  40341c:	add    BYTE PTR [ebp+0x4],bh
  40341f:	ret    0xa604
  403422:	fmul   DWORD PTR [ebx-0x1ff7d814]
  403428:	out    dx,eax
  403429:	cmp    edi,ebp
  40342b:	push   ebp
  40342c:	push   edi
  40342d:	adc    eax,0xa747ebb1
  403432:	mov    DWORD PTR [eax],0x34ee9374
  403438:	jmp    0x4033db
  40343a:	mov    WORD PTR [eax],es
  40343c:	call   0x3f2818
  403441:	mov    eax,ds:0x2747ebc8
  403446:	int3   
  403447:	add    BYTE PTR [eax],al
  403449:	push   esi
  40344a:	mov    DWORD PTR [ebx+0x4186693d],0x15832600
  403454:	push   DWORD PTR [ebx]
  403456:	push   ds
  403457:	inc    edi
  403458:	inc    ecx
  403459:	push   ss
  40345a:	pop    ds
  40345b:	arpl   cx,di
  40345d:	fldln2 
  40345f:	mov    BYTE PTR ds:0x4185c9,0x26
  403466:	mov    DWORD PTR [eax],0x0
	...
  403478:	imul   ecx,DWORD PTR [eax-0x10],0xffffffef
  40347c:	mov    ecx,0xb6e84fed
  403481:	sti    
  403482:	(bad)  
  403483:	call   FWORD PTR [ebx+0x48]
  403486:	in     al,dx
  403487:	out    dx,eax
  403488:	pop    ecx
  403489:	out    dx,al
  40348a:	dec    edi
  40348b:	call   0x3f31c2
  403490:	imul   ecx,DWORD PTR [eax+0x93f50fc],0xffffffd6
  403497:	inc    edi
  403498:	jle    0x4034bb
  40349a:	imul   eax,DWORD PTR [edx],0x3f
  40349d:	and    DWORD PTR [ebx+0x37fe8e8],eax
  4034a3:	add    BYTE PTR [ecx+eiz*8+0xa],al
  4034a7:	test   DWORD PTR [eax+eiz*1],eax
  4034aa:	add    eax,DWORD PTR [eax]
  4034ac:	js     0x403451
  4034ae:	iret   
  4034af:	out    dx,eax
  4034b0:	cwde   
  4034b1:	mov    cl,0x3
  4034b3:	add    BYTE PTR [edi],bh
  4034b5:	and    edx,eax
  4034b7:	test   DWORD PTR [edi-0x7f0026ef],eax
  4034bd:	sbb    DWORD PTR [ebx],eax
  4034bf:	add    ch,ah
  4034c1:	and    BYTE PTR [ebp+0x0],ch
  4034c4:	in     eax,0x20
  4034c6:	ins    DWORD PTR es:[edi],dx
  4034c7:	add    BYTE PTR [edx+0x60efdbab],bh
  4034cd:	sub    DWORD PTR [ecx*4-0x170b3e],esi
  4034d4:	push   eax
  4034d5:	rcr    cl,1
  4034d7:	mov    ch,0x53
  4034d9:	push   ecx
  4034da:	fcos   
	...
  4034e8:	add    BYTE PTR [eax],al
  4034ea:	add    BYTE PTR [eax-0x2d],al
  4034ed:	fsubr  st,st(0)
  4034ef:	mov    dl,0x0
  4034f1:	add    al,0x0
  4034f3:	inc    esp
  4034f4:	pop    edi
  4034f5:	or     DWORD PTR [ebp+0x3204c],eax
  4034fb:	xchg   edi,eax
  4034fc:	fimul  WORD PTR [ecx+eax*2+0x3f]
  403500:	mov    bh,0xd5
  403502:	inc    edi
  403503:	jle    0x403524
  403505:	jmp    0x40357d
  403507:	or     eax,DWORD PTR [ebx-0x27]
  40350a:	or     edi,edi
  40350c:	sbb    bh,BYTE PTR [edi-0xf]
  40350f:	aas    
  403510:	pop    ds
  403511:	add    ecx,DWORD PTR [ebx-0x38052f1]
  403517:	fsub   DWORD PTR [edx-0x3772af27]
  40351d:	push   ecx
  40351e:	xchg   ebp,eax
  40351f:	fist   DWORD PTR [ecx]
  403521:	pop    esi
  403522:	or     eax,0xbe6dc1ff
  403527:	aas    
  403528:	enter  0x8ae9,0xba
  40352c:	sub    BYTE PTR [esi-0x27],dl
  40352f:	mov    eax,0xa0ec6443
  403534:	adc    DWORD PTR [esi],esi
  403536:	xor    al,0x17
  403538:	jmp    0x117f77de
  40353d:	pop    esp
  40353e:	in     al,0xa8
  403540:	adc    DWORD PTR [esi],ebx
  403542:	ins    BYTE PTR es:[edi],dx
  403543:	cmp    eax,0x9783e9c8
  403548:	bound  edx,QWORD PTR [edx]
  40354a:	fld    DWORD PTR [eax+0x929bd]
	...
  40355c:	add    BYTE PTR [eax],al
  40355e:	ret    
  40355f:	imul   ebp,ecx,0x3
  403562:	aas    
  403563:	inc    ebp
  403564:	icebp  
  403565:	add    bh,BYTE PTR [eax]
  403567:	dec    edx
  403568:	dec    ebp
  403569:	add    al,0x3f
  40356b:	enter  0xd939,0x92
  40356f:	and    dh,cl
  403571:	fcom   DWORD PTR [eax+0x78]
  403574:	(bad)  
  403575:	mov    cs,WORD PTR [edi+0x21]
  403578:	into   
  403579:	fcom   DWORD PTR [edi-0x30]
  40357c:	mov    esp,0x644338d8
  403581:	jmp    0x4035a3
  403583:	adc    DWORD PTR [esi+0x21d99733],esi
  403589:	inc    ebx
  40358a:	aas    
  40358b:	adc    DWORD PTR [ebx+eiz*8+0x28],ebx
  40358f:	adc    DWORD PTR [esi-0x1637c295],ebx
  403595:	adc    DWORD PTR [edi],0xffffffa2
  403598:	xchg   edx,eax
  403599:	fadd   DWORD PTR [eax]
  40359b:	mov    ebp,0x45834fa9
  4035a0:	cmp    al,0xeb
  4035a2:	loopne 0x4035b4
  4035a4:	add    BYTE PTR [esi+0x3d],dh
  4035a7:	call   0x6585:0x432b193b
  4035ae:	out    0x10,eax
  4035b0:	(bad)  
  4035b1:	mov    ecx,0xe9dfa7e4
  4035b6:	cmp    al,0x78
  4035b8:	lea    esp,[eax+ebp*8+0x20]
  4035bc:	inc    DWORD PTR [esi+0x6c]
  4035bf:	adc    DWORD PTR [ebp+0x4d],esi
	...
  4035d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035d2:	adc    bh,bh
  4035d4:	inc    ecx
  4035d5:	xchg   esi,eax
  4035d6:	sbb    edi,edi
  4035d8:	cs adc DWORD PTR fs:[ebp-0xef58ef],esi
  4035e0:	mov    ecx,0x6ec5a77
  4035e5:	addr16 adc al,ch
  4035e8:	xor    dh,BYTE PTR [eax+0x10]
  4035eb:	call   DWORD PTR [ecx]
  4035ed:	ins    BYTE PTR es:[edi],dx
  4035ee:	sbb    bh,bh
  4035f0:	(bad)  
  4035f1:	fs out 0x8d,eax
  4035f4:	ins    BYTE PTR es:[edi],dx
  4035f5:	nop
  4035f6:	and    bh,bh
  4035f8:	out    dx,al
  4035f9:	sub    eax,0x43c62720
  4035fe:	enter  0x3940,0xc6
  403602:	dec    edx
  403603:	cld    
  403604:	(bad)  
  403605:	jo     0x403617
  403607:	push   eax
  403608:	into   
  403609:	scas   al,BYTE PTR es:[edi]
  40360a:	and    ebp,edi
  40360c:	(bad)  
  40360d:	adc    BYTE PTR [ecx],ah
  40360f:	mov    ah,0xb5
  403611:	or     BYTE PTR [eax],dl
  403613:	call   0xff502ed8
  403618:	scas   al,BYTE PTR es:[edi]
  403619:	into   
  40361a:	sub    bh,ch
  40361c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40361d:	lock and dh,bl
  403620:	xchg   esi,eax
  403621:	call   0xefad3535
  403626:	pop    ds
  403627:	dec    DWORD PTR [esi+0xfe5812]
  40362d:	shl    edi,0xfe
  403630:	jne    0x4036a4
  403632:	sbb    al,0x46
  403634:	loopne 0x403636
	...
  403642:	add    BYTE PTR [eax],al
  403644:	(bad)  
  403645:	retf   
  403646:	push   0x0
  403648:	push   ecx
  403649:	cmp    eax,esi
  40364b:	out    dx,eax
  40364c:	popa   
  40364d:	mul    edi
  40364f:	outs   dx,DWORD PTR ds:[esi]
  403650:	push   0xfffffff7
  403652:	(bad)  
  403653:	push   0xffffffd6
  403655:	div    BYTE PTR [esp+ebp*8-0x170108ff]
  40365c:	test   bh,bh
  40365e:	(bad)  
  40365f:	jmp    DWORD PTR [ebx]
  403661:	dec    ecx
  403662:	in     al,0xef
  403664:	jno    0x40365d
  403666:	dec    edi
  403667:	jmp    FWORD PTR [ebx]
  403669:	hlt    
  40366a:	out    dx,al
  40366b:	jmp    DWORD PTR [ecx+0x1c]
  40366e:	jmp    0xaec0:0x85cba6df
  403675:	cmp    bh,0xb5
  403678:	es daa 
  40367a:	(bad)  
  40367b:	dec    DWORD PTR [esi+0x27]
  40367e:	out    dx,eax
  40367f:	push   DWORD PTR [ecx+0x3c]
  403682:	test   eax,ebp
  403684:	inc    ecx
  403685:	idiv   esi
  403687:	jmp    FWORD PTR [ebx]
  403689:	sbb    al,0xef
  40368b:	jmp    DWORD PTR [ecx+0x23]
  40368e:	xchg   esi,eax
  40368f:	div    DWORD PTR [ecx-0xa]
  403692:	mov    ds:0x8519eb,al
  403697:	jmp    FWORD PTR [ebx+0x1ffeeef]
  40369d:	and    ebx,DWORD PTR [edx+0xbcb26de]
  4036a3:	shr    BYTE PTR [edx+0x13],0x8a
  4036a7:	lea    eax,[eax]
	...
  4036b5:	add    BYTE PTR [eax],al
  4036b7:	(bad)  
  4036b8:	and    eax,0xfb8dffff
  4036bd:	mov    bh,BYTE PTR ds:0x41cdad
  4036c3:	aas    
  4036c4:	xor    bl,BYTE PTR [edi-0x19bb3501]
  4036ca:	(bad)  
  4036cb:	clc    
  4036cc:	cmp    BYTE PTR [esi+ebx*8-0x7a77dec1],al
  4036d3:	jecxz  0x40371a
  4036d5:	(bad)  
  4036d6:	dec    DWORD PTR [edi-0x17136f62]
  4036dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036dd:	(bad)  
  4036de:	call   0x4404a9
  4036e3:	ret    0x5be0
  4036e6:	dec    ebx
  4036e7:	shl    BYTE PTR [ebx],0xe7
  4036ea:	out    dx,eax
  4036eb:	mov    eax,0xa08eeb85
  4036f0:	int    0xd6
  4036f2:	mov    edx,eax
  4036f4:	mov    dh,ah
  4036f6:	jmp    DWORD PTR [eax-0x57176f23]
  4036fc:	in     eax,0xd6
  4036fe:	call   0x16ed4d
  403703:	fadd   st(5),st
  403705:	ds inc ecx
  403707:	aas    
  403708:	mov    esi,0xc568e490
  40370d:	(bad)  
  40370e:	call   0x43e649
  403713:	xor    al,0xe1
  403715:	dec    edi
  403716:	sbb    esi,DWORD PTR [ebx+ebp*2+0xefeb]
	...
  403729:	add    BYTE PTR [eax+0x25],bl
  40372c:	mov    eax,esi
  40372e:	les    ebp,FWORD PTR [ebx+0x20fe47e5]
  403734:	shl    BYTE PTR [eax+eax*2+0x38efe033],1
  40373b:	pop    es
  40373c:	in     al,dx
  40373d:	and    BYTE PTR [ecx],dl
  40373f:	and    BYTE PTR [ebx],al
  403741:	push   edx
  403743:	dec    edi
  403744:	in     eax,0xff
  403746:	and    BYTE PTR [eax],cl
  403748:	fsubp  st(6),st
  40374a:	sbb    cl,cl
  40374c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40374d:	aad    0xca
  40374f:	sbb    al,0x8e
  403751:	aad    0x8
  403753:	and    DWORD PTR [edx+0x2e0e00e6],esi
  403759:	ss push es
  40375b:	or     bl,BYTE PTR [ecx+ecx*4]
  40375e:	jecxz  0x403702
  403760:	icebp  
  403761:	jmp    0x403740
  403763:	push   ss
  403764:	jbe    0x40373b
  403766:	mov    ah,0xf8
  403768:	ins    DWORD PTR es:[edi],dx
  403769:	jbe    0xc043dfef
  40376f:	retf   0x4f5e
  403772:	aaa    
  403773:	cmp    eax,0xb3b7ffab
  403778:	mov    al,ds:0x30c7fe4b
  40377d:	ret    0xc83b
  403780:	xchg   esp,eax
  403781:	mov    BYTE PTR [ebx+0x8dc2d49],bl
  403787:	add    eax,0xc83fdba4
  40378c:	jmp    0x403794
	...
  40379d:	mov    esp,0x1303f18b
  4037a2:	mov    edx,0xd334f16
  4037a7:	xchg   esp,eax
  4037a8:	or     esp,ebp
  4037aa:	(bad)  
  4037ab:	adc    edi,edx
  4037ad:	jbe    0x4037bc
  4037af:	dec    BYTE PTR [edx-0x2fdf3fe]
  4037b5:	jns    0x40373a
  4037b7:	in     eax,dx
  4037b8:	add    edi,DWORD PTR [edi]
  4037ba:	enter  0x88e9,0x12
  4037be:	jg     0x4037f1
  4037c0:	inc    ebx
  4037c1:	aas    
  4037c2:	and    edx,edi
  4037c4:	mov    dl,bh
  4037c6:	or     edx,DWORD PTR [edx]
  4037c8:	cmp    eax,0xbcf09343
  4037cd:	jp     0x4037df
  4037cf:	call   0x10876d7
  4037d4:	ret    0x4222
  4037d7:	aas    
  4037d8:	loop   0x4037cd
  4037da:	xchg   edx,eax
  4037db:	jmp    0x50a14a
  4037e0:	adc    al,0x3b
  4037e2:	or     eax,0x4a149575
  4037e7:	dec    DWORD PTR [esi-0x7ebabeed]
  4037ed:	sub    edi,edi
  4037ef:	shl    ecx,0x3c
  4037f2:	jne    0x40377f
  4037f4:	mov    ah,0x75
  4037f6:	add    BYTE PTR [ecx-0x17],0xe7
  4037fa:	mov    edi,0x202b7257
  4037ff:	ds push edi
	...
  40380d:	add    BYTE PTR [eax],al
  40380f:	add    bl,dh
  403811:	or     al,0xb
  403813:	push   esi
  403814:	jno    0x40382a
  403816:	(bad)  
  403817:	in     al,0x5
  403819:	add    BYTE PTR [ecx-0x17],0x3c
  40381d:	enter  0xe900,0x73
  403821:	or     DWORD PTR [ebp+0x62],edx
  403824:	cwde   
  403825:	je     0x40387d
  403827:	ret    
  403828:	cmp    al,0xd
  40382a:	jne    0x40381d
  40382c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40382d:	dec    ebp
  40382e:	stc    
  40382f:	push   ds
  403830:	jae    0x403872
  403832:	clc    
  403833:	push   ss
  403834:	icebp  
  403835:	mov    edi,0xc7b1d3e8
  40383a:	add    BYTE PTR [edx-0x6c],ch
  40383d:	(bad)  
  40383e:	jbe    0x40382e
  403840:	sbb    ecx,DWORD PTR [eax+0x3f]
  403843:	retf   
  403844:	icebp  
  403845:	mov    edi,0xc70b5cfc
  40384a:	mov    esi,DWORD PTR [ecx+0x515f6368]
  403850:	(bad)  
  403851:	jg     0x403894
  403853:	jmp    0xaff3585d
  403858:	inc    ebx
  403859:	enter  0xb,0xe6
  40385d:	jo     0x403863
  40385f:	(bad)  
  403860:	push   esi
  403861:	rol    BYTE PTR [eax],0x6a
  403864:	dec    edx
  403865:	push   0x0
  403867:	push   edi
  403868:	(bad)  
  403869:	pop    edi
  40386a:	fiadd  WORD PTR [eax]
  40386c:	or     edi,DWORD PTR es:[edi+0x22374]
	...
  403883:	mov    ebp,0xe607c6c3
  403888:	into   
  403889:	call   0x104d385
  40388e:	cmp    DWORD PTR [esi-0x6ffc883d],0xffffffbf
  403895:	add    BYTE PTR [ebx-0x36a0295f],cl
  40389b:	and    al,0xc0
  40389d:	add    BYTE PTR [ebp+0x4d],dl
  4038a0:	sub    BYTE PTR [ebx+0x458b6ac4],al
  4038a6:	or     al,0xa3
  4038a8:	(bad)  
  4038a9:	adc    BYTE PTR [eax],al
  4038ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ac:	xlat   BYTE PTR ds:[ebx]
  4038ad:	call   0xff37ac77
  4038b2:	mov    ebx,edx
  4038b4:	sti    
  4038b5:	(bad)  
  4038b6:	jne    0x403932
  4038b8:	div    BYTE PTR [esp+edi*8+0x59]
  4038bc:	jno    0x4038c6
  4038be:	call   0x3f29f0
  4038c3:	sub    DWORD PTR [ecx+0x10],esi
  4038c6:	call   ebx
  4038c8:	or     edi,esi
  4038ca:	jne    0x403906
  4038cc:	in     al,dx
  4038cd:	mov    eax,ds:0xffc75609
  4038d2:	jne    0x40393e
  4038d4:	out    dx,eax
  4038d5:	xchg   ch,dh
  4038d7:	imul   esi,esi,0xc74ac2c8
  4038dd:	push   ebp
  4038de:	mov    edi,DWORD PTR [edx-0x2f]
  4038e1:	push   ebx
  4038e2:	push   edi
  4038e3:	aas    
  4038e4:	repnz push edi
  4038e6:	or     BYTE PTR [eax],al
	...
  4038f4:	add    BYTE PTR [eax],al
  4038f6:	daa    
  4038f7:	or     DWORD PTR [edi-0x18ec100],ebp
  4038fd:	mov    edi,0x5b3222b2
  403902:	sub    DWORD PTR [eax-0x3b],0x50a63f08
  403909:	or     BYTE PTR [edi-0x4b6f546b],ch
  40390f:	mov    bl,0x0
  403911:	sub    edi,edi
  403913:	xor    al,0x8c
  403915:	(bad)  
  403916:	clc    
  403917:	cmp    edx,edx
  403919:	nop
  40391a:	in     eax,dx
  40391b:	jb     0x403990
  40391d:	sub    BYTE PTR [eax],0x21
  403920:	push   edi
  403921:	sbb    DWORD PTR [eax-0x43f2352],ecx
  403927:	and    BYTE PTR [ebx],al
  403929:	or     edi,edi
  40392b:	jmp    0x403936
  40392d:	pop    edi
  40392e:	fs dec ebx
  403930:	mov    esp,0x7c2137c2
  403935:	push   es
  403936:	mov    esp,0x89eb07e2
  40393b:	dec    eax
  40393c:	add    al,0x0
  40393e:	aas    
  40393f:	and    DWORD PTR [edx],esi
  403941:	pop    ebx
  403942:	add    eax,ebp
  403944:	lds    ecx,FWORD PTR [eax]
  403946:	aas    
  403947:	or     esp,ecx
  403949:	dec    edx
  40394a:	(bad)  
  40394b:	and    BYTE PTR [ebx-0x2a],bl
  40394e:	neg    DWORD PTR [edi+0x3]
  403951:	call   0x12eafe
  403956:	out    0x5f,eax
  403958:	ds inc ecx
	...
  403966:	add    BYTE PTR [eax],al
  403968:	add    BYTE PTR [edi],bh
  40396a:	cmp    DWORD PTR [edx],ebp
  40396c:	dec    edx
  40396d:	(bad)  
  40396e:	and    bl,bl
  403970:	mov    BYTE PTR [eax+0x11],ah
  403973:	shr    DWORD PTR [eax+0x5a],1
  403976:	inc    sp
  403978:	add    bh,ah
  40397a:	(bad)  
  40397b:	fnstcw WORD PTR [esi+edi*8]
  40397e:	(bad)  
  40397f:	ror    DWORD PTR [ebx+0x40],1
  403982:	or     dl,dh
  403984:	pop    esp
  403985:	mov    ah,0x7d
  403987:	sub    BYTE PTR [edi+eiz*4],al
  40398a:	imul   esi,DWORD PTR [edx],0x43
  40398d:	aas    
  40398e:	and    BYTE PTR [ebx-0x2f],dl
  403991:	and    BYTE PTR [edx],cl
  403993:	inc    ecx
  403994:	rol    DWORD PTR [ebp-0x1ba41679],cl
  40399a:	sub    BYTE PTR [eax],0x4
  40399d:	pop    ss
  40399e:	outs   dx,BYTE PTR ds:[esi]
  40399f:	sahf   
  4039a0:	rol    DWORD PTR [eax],1
  4039a2:	mov    eax,ds:0xc87e3e80
  4039a7:	add    DWORD PTR [ebp-0x79],ebx
  4039aa:	xchg   ecx,ebp
  4039ac:	fstp   TBYTE PTR [ebx+0x9]
  4039af:	jle    0x403982
  4039b1:	push   edi
  4039b2:	jae    0x4039d6
  4039b4:	inc    ebx
  4039b5:	aas    
  4039b6:	mov    al,ds:0xc87e3e40
  4039bb:	push   ecx
  4039bc:	bswap  eax
  4039be:	or     DWORD PTR [esi+0x5c],ebx
  4039c1:	data16 jge 0x40396c
  4039c4:	add    esp,DWORD PTR [edi]
  4039c6:	add    DWORD PTR [ebx+0x17203f42],esp
  4039cc:	rol    DWORD PTR [eax],1
	...
  4039da:	add    BYTE PTR [eax],al
  4039dc:	test   al,0x9
  4039de:	sub    dh,BYTE PTR [edi]
  4039e0:	mov    ah,0x1c
  4039e2:	bound  eax,QWORD PTR [edi+0x47]
  4039e5:	mov    ebp,0x483a5829
  4039ea:	loope  0x4039ef
  4039ec:	adc    bh,BYTE PTR [edi-0x37c0fb9f]
  4039f2:	jmp    0xea04b7b1
  4039f7:	sbb    al,0x8d
  4039f9:	sbb    eax,0x6c2783de
  4039fe:	jne    0x403a06
  403a00:	mov    edi,0xf1c600d0
  403a05:	sar    BYTE PTR [edx+0xc83ce8],0xd2
  403a0c:	inc    ecx
  403a0d:	dec    esi
  403a0e:	add    cl,ch
  403a10:	cmp    al,0xc8
  403a12:	inc    eax
  403a13:	imul   eax,DWORD PTR [eax+ecx*8+0x75],0xc906b3c5
  403a1b:	stos   DWORD PTR es:[edi],eax
  403a1c:	inc    eax
  403a1d:	enter  0x7255,0x0
  403a21:	jno    0x403a79
  403a23:	sbb    bl,BYTE PTR [edx+0x3ce40c83]
  403a29:	les    eax,FWORD PTR [eax]
  403a2b:	jmp    0x919061fd
  403a30:	imul   edx,DWORD PTR [edi+edi*8],0xffffff96
  403a34:	jnp    0x403a46
  403a36:	mov    esi,DWORD PTR [ecx+0x72089373]
  403a3c:	sub    DWORD PTR [ebx+ebp*8+0xeb],edi
	...
  403a4f:	cwde   
  403a50:	jle    0x403a5d
  403a52:	mov    al,ds:0xaf80c370
  403a57:	rcl    BYTE PTR [ebx-0x6c7a0d0b],cl
  403a5d:	add    al,BYTE PTR [ebp-0x7c3f22fb]
  403a63:	sar    esi,0x74
  403a66:	inc    edi
  403a67:	xor    eax,DWORD PTR ds:0xff6fa75b
  403a6d:	shl    ecx,0x3c
  403a70:	jne    0x403ac8
  403a72:	jo     0x403ab4
  403a74:	enter  0xe900,0xc
  403a78:	aad    0xd2
  403a7a:	jns    0x403aaf
  403a7c:	in     eax,dx
  403a7d:	(bad)  
  403a7e:	dec    ebp
  403a7f:	or     al,0xb9
  403a81:	mov    dh,0x29
  403a83:	in     al,dx
  403a84:	retf   
  403a85:	sub    edi,DWORD PTR [ecx+0x9]
  403a88:	ret    0x90
  403a8b:	aad    0x2
  403a8d:	ds nop
  403a8f:	xchg   ebp,eax
  403a90:	mov    eax,0xbedb902f
  403a95:	nop
  403a96:	and    DWORD PTR [eax+edi*4],0xffffff90
  403a9a:	inc    ebx
  403a9b:	and    dh,BYTE PTR [eax+edx*4+0x39b84c7c]
  403aa2:	nop
  403aa3:	xchg   ecx,eax
  403aa4:	rol    DWORD PTR [esp+eax*1],1
  403aa7:	and    eax,0x573c433c
  403aac:	jl     0x403b2a
  403aae:	or     esp,DWORD PTR [edx]
  403ab0:	mov    dl,0x90
  403ab2:	jg     0x403ab4
	...
  403ac0:	add    BYTE PTR [eax],al
  403ac2:	sub    al,ch
  403ac4:	inc    ecx
  403ac5:	nop
  403ac6:	and    eax,0x373c433c
  403acb:	jl     0x403b49
  403acd:	or     ah,dl
  403acf:	xchg   ecx,eax
  403ad0:	nop
  403ad1:	jg     0x403abe
  403ad3:	out    0x47,eax
  403ad5:	add    esi,DWORD PTR [esi-0x273d3e75]
  403adb:	jmp    0xceecfc90
  403ae0:	mov    eax,edx
  403ae2:	loope  0x403b27
  403ae4:	shr    eax,0xde
  403ae7:	ret    0x8b90
  403aea:	or     eax,0x155b5e7c
  403aef:	ror    DWORD PTR [ebx+0x56bef5ec],0xfc
  403af6:	sbb    eax,0x2d9008a1
  403afb:	cdq    
  403afc:	adc    BYTE PTR [eax-0x6ff376d3],dl
  403b02:	xchg   ebp,eax
  403b03:	xor    ah,bl
  403b05:	and    dh,dh
  403b07:	mov    esp,0x16a4e890
  403b0c:	(bad)  
  403b0d:	inc    DWORD PTR [esi]
  403b0f:	push   ecx
  403b10:	leave  
  403b11:	jle    0x403b52
  403b13:	jmp    0xe9a7fcb0
  403b18:	jb     0x403b5d
  403b1a:	pop    ebp
  403b1b:	leave  
  403b1c:	je     0x403b77
  403b1e:	iret   
  403b1f:	jb     0x403ae7
  403b21:	add    al,0xaf
  403b23:	jb     0x403b02
  403b25:	add    al,0x0
	...
  403b33:	add    BYTE PTR [eax],al
  403b35:	scas   eax,DWORD PTR es:[edi]
  403b36:	jbe    0x403ae5
  403b38:	nop
  403b39:	mov    ah,0x32
  403b3b:	jae    0x403b9b
  403b3d:	loopne 0x403ac8
  403b3f:	mov    ebp,0x37f14bc2
  403b44:	mov    esp,DWORD PTR [ebx]
  403b46:	jo     0x403b0f
  403b48:	in     al,dx
  403b49:	sub    DWORD PTR [esi],ecx
  403b4b:	into   
  403b4c:	push   ebx
  403b4d:	push   esp
  403b4e:	sub    al,BYTE PTR [eax+0x5ce11b45]
  403b54:	push   edx
  403b55:	xchg   DWORD PTR [eax-0x29ad00fc],esi
  403b5b:	cmp    al,0x41
  403b5d:	aas    
  403b5e:	pop    ecx
  403b5f:	(bad)  
  403b61:	aas    
  403b62:	icebp  
  403b63:	stc    
  403b64:	mov    edi,0x75ce136a
  403b69:	dec    edi
  403b6a:	dec    esi
  403b6b:	pop    eax
  403b6c:	or     al,0x55
  403b6e:	repnz pop eax
  403b70:	add    al,bl
  403b72:	add    edi,ebx
  403b74:	dec    BYTE PTR [edx+0x75]
  403b77:	fcmovnbe st,st(6)
  403b79:	in     al,0xf0
  403b7b:	add    cl,BYTE PTR [ebx]
  403b7d:	call   FWORD PTR [ebx]
  403b7f:	add    al,0x43
  403b81:	mov    eax,0xeee8cf23
  403b86:	mov    ecx,0xaa340003
  403b8b:	inc    BYTE PTR [edx+edi*2-0x35fffd10]
  403b92:	jae    0x403b66
  403b94:	(bad)  
  403b95:	nop
  403b96:	mov    ch,0x33
  403b98:	push   0x0
	...
  403ba5:	add    BYTE PTR [eax],al
  403ba7:	add    BYTE PTR [ebx-0x38],al
  403baa:	call   0x7d307ab2
  403baf:	test   eax,0xc3e2c83f
  403bb4:	inc    eax
  403bb5:	dec    esp
  403bb6:	cmp    eax,0xc4c83f03
  403bbb:	pop    es
  403bbc:	ds enter 0xfee9,0xc1
  403bc1:	sub    cl,ch
  403bc3:	add    edi,DWORD PTR [edi]
  403bc5:	jb     0x403bb0
  403bc7:	add    dl,0xfa
  403bca:	out    0xcd,al
  403bcc:	inc    eax
  403bcd:	xchg   edi,eax
  403bce:	rol    DWORD PTR [ebx+0x7ee9c915],1
  403bd4:	mov    edx,0x28cdcef9
  403bd9:	cdq    
  403bda:	rol    DWORD PTR [ecx+eiz*1+0x6],1
  403bde:	mov    esi,0xd57bd8f9
  403be3:	pop    ebx
  403be4:	jl     0x403b76
  403be6:	sub    BYTE PTR [edx+edi*4],al
  403be9:	dec    ebx
  403bea:	call   0x75dc:0x390600ce
  403bf1:	(bad)  
  403bf2:	xchg   ebp,eax
  403bf3:	int    0xf0
  403bf5:	jnp    0x403bd8
  403bf7:	xor    edx,edi
  403bf9:	or     edi,DWORD PTR [edi-0x33]
  403bfc:	loopne 0x403bef
  403bfe:	in     eax,dx
  403bff:	int3   
  403c00:	push   edx
  403c01:	shl    BYTE PTR [edi+eax*4-0x34],1
  403c05:	push   es
  403c06:	outs   dx,BYTE PTR ds:[esi]
  403c07:	int    0x6f
  403c09:	lock enter 0xd5,0x0
	...
  403c1a:	add    al,al
  403c1c:	add    eax,0x6ab8770
  403c21:	push   esi
  403c22:	int    0x25
  403c24:	enter  0x3c3,0x15
  403c28:	retf   0x3d3
  403c2b:	adc    eax,0x3f03d1c9
  403c30:	enter  0x2900,0x82
  403c34:	cmp    ebp,esp
  403c36:	das    
  403c37:	jp     0x403c3e
  403c39:	call   0x1091095
  403c3e:	jo     0x403c40
  403c40:	add    BYTE PTR [eax-0x63],al
  403c43:	fs push es
  403c45:	jne    0x403c40
  403c47:	jnp    0x403cc4
  403c49:	or     al,0x6
  403c4b:	or     BYTE PTR [eax],al
  403c4d:	call   0xff45b6d5
  403c52:	bound  esp,QWORD PTR [ebx+0x64f17505]
  403c58:	fs fldl2t 
  403c5b:	cmp    al,0xd1
  403c5d:	fist   DWORD PTR [esi+esi*1+0x6]
  403c61:	mov    ch,0xc5
  403c63:	add    al,BYTE PTR ds:0x1efbc1ff
  403c69:	add    cl,ch
  403c6b:	repz cmp ch,ah
  403c6e:	mov    edi,0x40e8050b
  403c73:	in     eax,dx
  403c74:	add    al,0xff
  403c76:	(bad)  
  403c77:	jmp    DWORD PTR [eax+0x500abc9]
  403c7d:	push   esp
  403c7e:	jb     0x403c80
	...
  403c8c:	add    BYTE PTR [eax],al
  403c8e:	sbb    BYTE PTR [edi-0x3c],al
  403c91:	test   DWORD PTR [edx],eax
  403c93:	add    eax,0x7afa3aff
  403c98:	or     al,0x86
  403c9a:	mov    eax,edx
  403c9c:	push   0x871b1b
  403ca1:	jbe    0x403ccc
  403ca3:	ins    DWORD PTR es:[edi],dx
  403ca4:	dec    eax
  403ca5:	sub    BYTE PTR [ebx-0x10],al
  403ca8:	pop    ecx
  403ca9:	pop    esp
  403caa:	repz add al,0xb
  403cad:	sub    DWORD PTR [ebx+0x3ce9da4b],edi
  403cb3:	enter  0x322b,0x29
  403cb7:	dec    ebx
  403cb8:	out    dx,eax
  403cb9:	add    al,bh
  403cbb:	adc    edi,edi
  403cbd:	push   eax
  403cbe:	outs   dx,BYTE PTR ds:[esi]
  403cbf:	int3   
  403cc0:	add    DWORD PTR [eax],eax
  403cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc3:	and    BYTE PTR [esi+0xbc896d9],ah
  403cc9:	ror    BYTE PTR [ecx+0x6600bd4c],0xc8
  403cd0:	cmp    eax,0xc86704
  403cd5:	psraw  mm2,QWORD PTR [esi+0x0]
  403cd9:	add    BYTE PTR [esi-0x7b],dl
  403cdc:	inc    ebp
  403cdd:	cld    
  403cde:	mov    dh,0x20
  403ce0:	out    dx,al
  403ce1:	jmp    0x85cd4d2f
  403ce6:	dec    ecx
  403ce7:	adc    edi,edi
  403ce9:	inc    DWORD PTR [esi]
  403ceb:	and    al,0x4f
  403ced:	std    
  403cee:	sbb    DWORD PTR [eax],edx
  403cf0:	or     eax,eax
	...
  403cfe:	add    BYTE PTR [eax],al
  403d00:	add    BYTE PTR [ebx+0x5e4366f0],dl
  403d06:	lea    eax,[eax]
  403d08:	lea    edx,[ebx-0x260001e1]
  403d0e:	mov    esp,0xfd389e8
  403d13:	(bad)  
  403d14:	call   DWORD PTR [ebx+0x4]
  403d17:	dec    edi
  403d18:	call   0x3f56df
  403d1d:	int    0xff
  403d1f:	std    
  403d20:	jne    0x403d00
  403d22:	add    BYTE PTR [ebp-0xf04711],0x50
  403d29:	into   
  403d2a:	lahf   
  403d2b:	cmc    
  403d2c:	call   FWORD PTR [ecx-0x44]
  403d2f:	push   DWORD PTR [ebp+0x4a]
  403d32:	mov    esp,0xfbda8e8
  403d37:	dec    DWORD PTR [ebx]
  403d39:	push   ss
  403d3a:	cwde   
  403d3b:	push   ebx
  403d3c:	call   DWORD PTR [ebx+0x3f19e80b]
  403d42:	xchg   ebx,ecx
  403d44:	push   DWORD PTR [esi+0x2283cb2c]
  403d4a:	mov    DWORD PTR [esp+esi*2],eax
  403d4d:	std    
  403d4e:	jae    0x403d91
  403d50:	hlt    
  403d51:	out    dx,eax
  403d52:	mov    ecx,0xc197fc51
  403d57:	lods   eax,DWORD PTR ds:[esi]
  403d58:	add    BYTE PTR [edi],bh
  403d5a:	je     0x403d20
  403d5c:	js     0x403d8b
  403d5e:	loop   0x403db1
  403d60:	hlt    
  403d61:	addr16 mov ch,0xac
	...
  403d74:	aas    
  403d75:	out    0xc2,al
  403d77:	je     0x403d92
  403d79:	popa   
  403d7a:	retf   0x5775
  403d7d:	fldenv [edi+0x7dfa50f1]
  403d83:	fsub   st,st(7)
  403d85:	icebp  
  403d86:	dec    edi
  403d87:	clc    
  403d88:	in     al,dx
  403d89:	rcr    ah,0xcd
  403d8c:	cs and cl,dl
  403d8f:	jmp    FWORD PTR [edx+0x7a8db25]
  403d95:	icebp  
  403d96:	add    cl,BYTE PTR [ebx+0x75c9fd7a]
  403d9c:	pop    ss
  403d9d:	jb     0x403da2
  403d9f:	call   0xa7e49
  403da4:	or     BYTE PTR [eax+ecx*8-0x35a76418],bh
  403dab:	inc    esp
  403dad:	sub    eax,0xe8fdc92e
  403db2:	add    dl,BYTE PTR [ebp-0x4c]
  403db5:	test   BYTE PTR [edx],dh
  403db7:	mov    esp,DWORD PTR [edx-0x7]
  403dba:	fst    QWORD PTR [ecx]
  403dbc:	jo     0x403e14
  403dbe:	add    DWORD PTR [edx+0x77af078],ecx
  403dc4:	xor    BYTE PTR [ecx+0xa],0x0
  403dc8:	dec    edx
  403dc9:	enter  0x2a5c,0x8
  403dcd:	mov    ebp,DWORD PTR [ecx+0xa]
  403dd0:	pop    edi
  403dd1:	jl     0x403e16
  403dd3:	sub    DWORD PTR [eax-0x2b],0xffffffd5
  403dd7:	loopne 0x403dd9
	...
  403de5:	add    BYTE PTR [eax],al
  403de7:	mov    edi,0x9f4ff3c2
  403dec:	inc    edi
  403ded:	(bad)  
  403dee:	cld    
  403def:	or     al,0x1f
  403df1:	bound  ecx,QWORD PTR [eax+0x37]
  403df4:	add    esi,DWORD PTR [ebx+edi*8+0x3418a98]
  403dfb:	aas    
  403dfc:	inc    edi
  403dfd:	and    DWORD PTR [ebx],eax
  403dff:	jmp    0x2787a7ae
  403e04:	add    ecx,ecx
  403e06:	dec    edi
  403e07:	dec    edx
  403e08:	dec    eax
  403e09:	test   DWORD PTR [ebx],ecx
  403e0b:	pop    eax
  403e0c:	aam    0x75
  403e0e:	stc    
  403e0f:	rol    BYTE PTR [ebx+0x7c35cab1],1
  403e15:	out    0x83,al
  403e17:	ret    
  403e18:	mov    edi,0xc9b3fbe6
  403e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e1e:	inc    eax
  403e1f:	ja     0x403e22
  403e21:	jmp    0xeb2d7c02
  403e26:	fdivr  st(3),st
  403e28:	mov    eax,ds:0xc843c6b0
  403e2d:	adc    al,0x7d
  403e2f:	and    eax,DWORD PTR [esi-0x53]
  403e32:	loopne 0x403ea0
  403e34:	inc    ebp
  403e35:	in     al,dx
  403e36:	or     dh,BYTE PTR [edi+eax*4-0x17]
  403e3a:	add    esi,DWORD PTR [ebx-0x2a]
  403e3d:	push   0x7
  403e3f:	xor    cl,BYTE PTR [ebp+0x7c3f0428]
  403e45:	loopne 0x403dcb
  403e47:	and    ch,BYTE PTR [ebx+0x4332]
	...
  403e59:	add    BYTE PTR [edi],bh
  403e5b:	enter  0xf4,0x24
  403e5f:	or     BYTE PTR [eax],al
  403e61:	adc    al,BYTE PTR [esi+eax*1+0x1d23e908]
  403e68:	(bad)  
  403e69:	lods   al,BYTE PTR ds:[esi]
  403e6a:	mov    al,cl
  403e6c:	add    cl,ch
  403e6e:	cmp    al,0x53
  403e70:	inc    ebp
  403e71:	push   ecx
  403e72:	jae    0x403e75
  403e74:	jne    0x403e57
  403e76:	add    cl,al
  403e78:	(bad)  
  403e79:	fadd   QWORD PTR [ebp-0x73]
  403e7c:	inc    ecx
  403e7d:	jmp    0x92b48015
  403e82:	fs rcr al,0xe9
  403e86:	cmp    al,0x4d
  403e88:	shl    BYTE PTR [eax+edi*1-0x4],1
  403e8c:	dec    edi
  403e8d:	xchg   ebx,eax
  403e8e:	sbb    al,0x96
  403e90:	(bad)  
  403e91:	cld    
  403e92:	dec    ecx
  403e93:	lea    eax,[ecx-0x17]
  403e96:	arpl   WORD PTR [ecx+0x74],ax
  403e99:	sar    BYTE PTR [edi-0x75],1
  403e9c:	in     al,0xe8
  403e9e:	cmp    al,0xc8
  403ea0:	add    dh,dh
  403ea2:	stc    
  403ea3:	dec    DWORD PTR [esi+0x750164a4]
  403ea9:	in     eax,0xb7
  403eab:	mov    ebp,esp
  403ead:	push   0x79
  403eaf:	aam    0x0
  403eb1:	pop    ebp
  403eb2:	and    al,0xa
  403eb4:	inc    ebp
  403eb5:	fnstcw WORD PTR [edx]
  403eb7:	enter  0xe900,0xfb
  403ebb:	enter  0x24c7,0x0
	...
  403ecb:	add    BYTE PTR [eax],al
  403ecd:	jmp    0x403e96
  403ecf:	add    cl,ch
  403ed1:	cmp    al,0x6e
  403ed3:	add    BYTE PTR [ebx+0x3b],al
  403ed6:	outs   dx,BYTE PTR ds:[esi]
  403ed7:	adc    BYTE PTR [ecx+edi*1-0x14],dh
  403edb:	dec    edi
  403edc:	adc    edi,DWORD PTR [ebx]
  403ede:	add    DWORD PTR [ebp-0x63],esi
  403ee1:	neg    edx
  403ee3:	cmp    eax,0xbc87c22
  403ee8:	add    BYTE PTR [esi+0x65430190],ah
  403eee:	mov    dh,ah
  403ef0:	add    dl,cl
  403ef2:	cld    
  403ef3:	std    
  403ef4:	jne    0x403f40
  403ef6:	sbb    eax,0xc4a6d75c
  403efb:	mov    eax,ebx
  403efd:	jge    0x403f3c
  403eff:	ret    0x9608
  403f02:	mov    cl,0x8b
  403f04:	in     al,dx
  403f05:	icebp  
  403f06:	xchg   ecx,eax
  403f07:	or     al,ch
  403f09:	mov    eax,0xe6000037
  403f0e:	mov    ah,0xe8
  403f10:	inc    ecx
  403f11:	inc    esi
  403f12:	adc    bh,bh
  403f14:	push   eax
  403f15:	push   ecx
  403f16:	xchg   edx,eax
  403f17:	or     BYTE PTR [eax+0x4e],dl
  403f1a:	ins    BYTE PTR es:[edi],dx
  403f1b:	xlat   BYTE PTR ds:[ebx]
  403f1c:	add    BYTE PTR [esi-0x54],ah
  403f1f:	leave  
  403f20:	ret    0xc45a
  403f23:	push   ebp
  403f24:	mov    esp,DWORD PTR [edx+0x44]
  403f27:	(bad)  
  403f28:	cld    
  403f29:	mov    ch,0x4b
  403f2b:	jge    0x403f35
  403f2d:	xchg   cx,ax
  403f2f:	pop    es
  403f30:	sub    eax,DWORD PTR [eax]
	...
  403f3e:	add    BYTE PTR [eax],al
  403f40:	push   ss
  403f41:	mov    ah,0xc9
  403f43:	ret    0xc45e
  403f46:	sub    ebx,ebx
  403f48:	mov    esp,es
  403f4a:	push   0x0
  403f4c:	mov    esp,es
  403f4e:	push   0x0
  403f50:	adc    DWORD PTR [edx-0x37400f4],ebx
  403f56:	push   0xe8c46c00
  403f5b:	test   DWORD PTR [ecx-0x29f4ff3c],ebp
  403f61:	cwde   
  403f62:	xor    al,0x89
  403f64:	pop    ebx
  403f65:	adc    bh,bh
  403f67:	jne    0x403f0b
  403f69:	sbb    al,0xf6
  403f6b:	out    dx,eax
  403f6c:	rol    DWORD PTR [edi],1
  403f6e:	or     eax,eax
  403f70:	aas    
  403f71:	frstor [ecx]
  403f73:	mov    eax,DWORD PTR [edi]
  403f75:	int3   
  403f76:	add    al,0x6a
  403f78:	aas    
  403f79:	inc    esi
  403f7a:	push   ecx
  403f7b:	cld    
  403f7c:	ins    BYTE PTR es:[edi],dx
  403f7d:	jle    0x403fd0
  403f7f:	or     al,0xc8
  403f81:	cld    
  403f82:	cli    
  403f83:	imul   edi,DWORD PTR [edi],0x16e804cb
  403f89:	mov    esi,0xb1440004
  403f8e:	push   ecx
  403f8f:	or     BYTE PTR [ecx+ecx*4],cl
  403f92:	mov    edi,gs
  403f94:	mov    al,ds:0xc4db1b8e
  403f99:	mov    dl,0x2b
  403f9b:	leave  
  403f9c:	jge    0x403f97
  403f9e:	add    dl,BYTE PTR [ebp-0x4c]
  403fa1:	test   DWORD PTR [edx-0x1],ebx
	...
  403fb0:	add    BYTE PTR [eax],al
  403fb2:	add    BYTE PTR [eax-0x3f1804cc],al
  403fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fb9:	(bad)  
  403fba:	inc    DWORD PTR [esi+0x120000b3]
  403fc0:	push   0xffffffd8
  403fc2:	and    edx,0x1c
  403fc5:	add    esi,DWORD PTR [ecx+eax*2+0x72]
  403fc9:	dec    ecx
  403fca:	or     BYTE PTR [edi],bh
  403fcc:	je     0x403fcb
  403fce:	sub    bh,BYTE PTR [edi-0x58]
  403fd1:	ret    0x3f08
  403fd4:	dec    ebx
  403fd5:	add    edi,edi
  403fd7:	mov    dl,0xf5
  403fd9:	lds    esi,FWORD PTR [ebp+0x47]
  403fdc:	sbb    eax,esi
  403fde:	xlat   BYTE PTR ds:[ebx]
  403fdf:	aas    
  403fe0:	icebp  
  403fe1:	stc    
  403fe2:	mov    edi,0x6db401ab
  403fe7:	dec    ebx
  403fe8:	push   es
  403fe9:	push   eax
  403fea:	or     al,0x10
  403fec:	mov    ah,0xfc
  403fee:	out    0x78,eax
  403ff0:	ss (bad) 
  403ff2:	call   DWORD PTR [ecx+ebx*1]
  403ff5:	jp     0x40403c
  403ff7:	dec    ebx
  403ff8:	enter  0x3429,0xe7
  403ffc:	je     0x403f8c
  403ffe:	(bad)  
  403fff:	call   0x3390d69b
  404004:	cwde   
  404005:	mov    ss,WORD PTR [eax+0x47]
  404008:	lock gs (bad) 
  40400b:	sar    dh,1
  40400d:	and    BYTE PTR [ebp+0x30e9cffd],bh
  404013:	mov    ah,0xeb
  404015:	push   ss
  404016:	das    
	...
  404023:	add    BYTE PTR [eax],al
  404025:	add    BYTE PTR [ebx+ecx*2],cl
  404028:	in     al,0xfb
  40402a:	mov    al,0x73
  40402c:	lock sbb bh,BYTE PTR [edi-0x5e]
  404030:	mov    dh,0x25
  404032:	jbe    0x40403d
  404034:	loope  0x404039
  404036:	les    eax,FWORD PTR [ebp+esi*8-0xd37607e]
  40403d:	ret    
  40403e:	adc    edx,ecx
  404040:	add    al,ah
  404042:	in     al,0x9e
  404044:	(bad)  
  404045:	mov    esp,0x7ae9cf7d
  40404a:	adc    cl,ah
  40404c:	jb     0x40409e
  40404e:	aaa    
  40404f:	push   ebx
  404050:	pop    ss
  404051:	(bad)  
  404053:	gs (bad) 
  404055:	std    
  404056:	fdivr  st,st(3)
  404058:	mov    eax,0xfd484551
  40405d:	or     edx,eax
  40405f:	les    ebp,FWORD PTR [ecx-0x29]
  404062:	psllq  mm7,QWORD PTR [ebx+0x5b883b83]
  404069:	div    DWORD PTR [eax+0x374d26fc]
  40406f:	dec    eax
  404070:	lds    eax,FWORD PTR [ebx-0x41]
  404073:	add    al,0xe3
  404075:	fdiv   DWORD PTR [eax+ecx*2]
  404078:	lds    esp,FWORD PTR [ebx-0x73]
  40407b:	retf   
  40407c:	imul   ecx,eax,0xe10075a1
  404082:	mov    esp,0xff6960ec
  404087:	shr    bl,cl
  404089:	lock add BYTE PTR [eax],al
	...
  404098:	add    BYTE PTR [edi+0x8],dl
  40409b:	pop    ebx
  40409c:	and    DWORD PTR ds:[edi],ecx
  40409f:	ret    0x3ce1
  4040a2:	mov    esp,0xc1db1b30
  4040a7:	cmp    esi,edi
  4040a9:	shl    BYTE PTR [ecx-0x43d76dd0],1
  4040af:	inc    ecx
  4040b0:	sti    
  4040b1:	mov    cl,0x46
  4040b4:	idiv   BYTE PTR [edx-0x4912be4f]
  4040ba:	repnz push ss
  4040bc:	sbb    eax,0x150a7a1c
  4040c1:	add    DWORD PTR [ebp+0x6],esi
  4040c4:	std    
  4040c5:	sbb    eax,0x94520ac4
  4040ca:	mov    dl,0xc0
  4040cc:	mov    ds:0x2bc99e63,al
  4040d1:	cmp    ebp,0xffffffbe
  4040d4:	dec    ecx
  4040d5:	aas    
  4040d6:	rol    ah,cl
  4040d8:	push   ebx
  4040d9:	ss xchg ecx,eax
  4040db:	and    DWORD PTR [edi],0x3d
  4040de:	rcr    ebx,1
  4040e0:	pushf  
  4040e1:	mov    ebp,0x3ce90140
  4040e6:	enter  0xa65b,0x1a
  4040ea:	cmpps  xmm6,xmm1,0x3c
  4040ee:	xchg   ebp,eax
  4040ef:	push   ebx
  4040f0:	cdq    
  4040f1:	adc    al,0x70
  4040f3:	pushf  
  4040f4:	sar    BYTE PTR [eax+ecx*8-0x8],0x5b
  4040f9:	cmp    al,0x9
  4040fb:	jmp    DWORD PTR [edx+0x0]
	...
  404109:	add    BYTE PTR [eax],al
  40410b:	add    BYTE PTR ds:0xbbe900c8,bh
  404111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404112:	dec    ebp
  404113:	sub    BYTE PTR [ebx+0x72],al
  404116:	add    DWORD PTR [eax],eax
  404118:	xor    DWORD PTR [esi+edi*2],ebx
  40411b:	std    
  40411c:	leave  
  40411d:	add    esp,DWORD PTR [ebx]
  40411f:	fmul   st,st(2)
  404121:	xlat   BYTE PTR ds:[ebx]
  404122:	sar    BYTE PTR [ecx-0xfc57],0xd4
  404129:	push   edx
  40412a:	cmp    BYTE PTR [edi],al
  40412c:	push   ebx
  40412d:	sbb    al,0x8b
  40412f:	ret    
  404130:	sub    eax,0x5d55c3a3
  404135:	adc    eax,0xb856c483
  40413a:	push   eax
  40413b:	pop    eax
  40413c:	cs sub DWORD PTR cs:[eax-0x2a],eax
  404141:	adc    BYTE PTR [edx+0x1],dh
  404144:	in     eax,0x3
  404146:	cmp    DWORD PTR ds:0x41bf43,0xffffff96
  40414d:	mov    WORD PTR [edx],ss
  40414f:	or     DWORD PTR [ebx-0x2b],0x4b
  404153:	inc    ecx
  404154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404155:	enter  0x974,0x25
  404159:	(bad)  
  40415a:	xor    DWORD PTR [ebx-0x29],ecx
  40415d:	enter  0x7500,0x93
  404161:	ffreep st(0)
  404163:	pop    ebx
  404164:	pop    ds
  404165:	or     BYTE PTR [ebx],ch
  404167:	fisttp DWORD PTR [esi+0x5a]
  40416a:	aad    0x0
  40416c:	push   esi
  40416d:	jne    0x4041c4
  40416f:	cld    
	...
  40417c:	add    BYTE PTR [eax],al
  40417e:	add    BYTE PTR [esi+ebx*4-0x11b6aff8],ah
  404185:	and    ecx,DWORD PTR [ebx-0x59]
  404188:	enter  0xc00b,0x59
  40418c:	jl     0x40411e
  40418e:	add    BYTE PTR [esi-0x38],dl
  404191:	mov    DWORD PTR [ebp+0x2e],0x260000c7
  404198:	pop    ecx
  404199:	inc    ebp
  40419a:	clc    
  40419b:	data16 stos BYTE PTR es:[edi],al
  40419d:	add    BYTE PTR [edx+0x3f],ch
  4041a0:	icebp  
  4041a1:	sub    al,0x1
  4041a3:	sbb    BYTE PTR [ebp-0x2bd50040],dl
  4041a9:	dec    edi
  4041aa:	inc    ecx
  4041ab:	aas    
  4041ac:	test   dl,0x75
  4041af:	xchg   ebp,eax
  4041b0:	or     DWORD PTR [ecx-0x7a0ec02b],ecx
  4041b6:	clc    
  4041b7:	jne    0x404195
  4041b9:	and    al,0x83
  4041bb:	push   0x29
  4041bd:	add    al,0x74
  4041bf:	test   DWORD PTR [edx+0x39],edx
  4041c2:	clc    
  4041c3:	out    0x7d,eax
  4041c5:	mov    cl,0xff
  4041c7:	sar    BYTE PTR [eax+0x49],1
  4041ca:	hlt    
  4041cb:	mov    edx,0xc050bca4
  4041d0:	cld    
  4041d1:	mov    edx,0x2e7532ff
  4041d6:	add    DWORD PTR [eax+0x52ffbf1c],esi
  4041dc:	int3   
  4041dd:	dec    edi
  4041de:	inc    ecx
  4041df:	aas    
  4041e0:	out    0xc2,al
  4041e2:	je     0x4041e4
	...
  4041f0:	add    BYTE PTR [eax],al
  4041f2:	imul   esp,DWORD PTR [esi+0x49],0x9021c4f4
  4041f9:	inc    ebp
  4041fa:	(bad)  
  4041fb:	popa   
  4041fc:	push   ebp
  4041fd:	jmp    FWORD PTR [edx]
  4041ff:	add    BYTE PTR [esi+0x41],cl
  404202:	aas    
  404203:	out    0xc2,al
  404205:	je     0x40425c
  404207:	pop    ecx
  404208:	sbb    al,0x4d
  40420a:	(bad)  
  40420b:	lock shl DWORD PTR [ebp+0x6f],0xc9
  404210:	call   esp
  404212:	aas    
  404213:	icebp  
  404214:	or     eax,0x45efcac0
  404219:	call   edx
  40421b:	add    BYTE PTR [ebx+0x2f16bc2],ch
  404221:	push   DWORD PTR [edx+0x2283aaf5]
  404227:	enter  0xc2e6,0x28
  40422b:	jne    0x40420a
  40422d:	stos   DWORD PTR es:[edi],eax
  40422e:	retf   
  40422f:	adc    ebp,ecx
  404231:	add    eax,esp
  404233:	push   es
  404234:	xor    cl,ch
  404236:	cld    
  404237:	xchg   esp,eax
  404238:	jb     0x4041e9
  40423a:	mov    esi,0xc1a903
  40423f:	sti    
  404240:	sbb    DWORD PTR [edi+edx*4+0x70],edx
  404244:	ins    BYTE PTR es:[edi],dx
  404245:	in     eax,dx
  404246:	xor    al,cl
  404248:	mov    eax,ds:0x9e073e35
  40424d:	xchg   BYTE PTR [edx],ah
  40424f:	icebp  
  404250:	and    al,BYTE PTR [ebp+0x3f]
  404253:	enter  0x1f15,0x0
	...
  404263:	add    BYTE PTR [eax],al
  404265:	mov    esp,0x7e4d94bc
  40426a:	enter  0x37e9,0x2d
  40426e:	inc    edi
  40426f:	mov    ah,0xe8
  404271:	add    eax,0x2b03e989
  404276:	shr    DWORD PTR [edx+0x0],1
  404279:	push   esi
  40427a:	(bad)
  40427e:	jne    0x40426c
  404280:	out    dx,al
  404281:	fcomp  DWORD PTR [esi+0x1f64c620]
  404287:	inc    esi
  404288:	sbb    BYTE PTR [esi-0x49fc5773],dl
  40428e:	test   BYTE PTR ds:0x2f0bc2ca,bh
  404294:	ret    0xaf70
  404297:	call   0xe9ae819f
  40429c:	sub    eax,0xd72af03d
  4042a1:	aas    
  4042a2:	enter  0xbb6a,0x50
  4042a6:	retf   0x216d
  4042a9:	ds enter 0x8ce9,0xba
  4042ae:	(bad)  
  4042b0:	idiv   esi
  4042b2:	stc    
  4042b3:	mov    WORD PTR [eax+eax*1-0x5],fs
  4042b7:	(bad)  
  4042b8:	out    0x93,al
  4042ba:	stc    
  4042bb:	mov    ah,0xb1
  4042bd:	std    
  4042be:	stc    
  4042bf:	inc    cl
  4042c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042c2:	adc    al,0x0
  4042c4:	jmp    0x6d4f4b0c
	...
  4042d5:	add    BYTE PTR [eax],al
  4042d7:	add    dl,dl
  4042d9:	enter  0xe900,0x54
  4042dd:	int3   
  4042de:	dec    ebp
  4042df:	sub    BYTE PTR [ebx+0x4b],al
  4042e2:	test   DWORD PTR [ecx+0x39fef9fd],edi
  4042e8:	fwait
  4042e9:	pop    esp
  4042ea:	aad    0xe9
  4042ec:	cmp    al,0xcd
  4042ee:	shl    dh,0xc0
  4042f1:	add    eax,0x13ce900
  4042f6:	test   DWORD PTR [ebp-0x16010603],ebp
  4042fc:	cmp    al,0xc8
  4042fe:	add    BYTE PTR [eax+eax*8+0x4],ah
  404302:	(bad)  
  404303:	outs   dx,BYTE PTR ds:[esi]
  404304:	jle    0x40429e
  404306:	call   FWORD PTR [edi+eax*4+0x7e5efefa]
  40430d:	shr    ebp,cl
  40430f:	mov    ds:0x748bc7fd,eax
  404314:	xchg   edx,edi
  404316:	inc    BYTE PTR [esi+0x3a]
  404319:	or     BYTE PTR [edi],cl
  40431b:	mov    gs:0x7be900c8,eax
  404321:	xchg   esp,eax
  404322:	hlt    
  404323:	fidivr WORD PTR [ecx+0x3ce90049]
  404329:	stc    
  40432a:	mov    ah,0x35
  40432c:	jge    0x404327
  40432e:	inc    BYTE PTR [ebx-0x16ff8fc4]
  404334:	cmp    al,0xc6
  404336:	call   0x51db3b
	...
  40434b:	dec    ebp
  40434c:	add    eax,0x819f7974
  404351:	clc    
  404352:	(bad)  
  404353:	fstp   TBYTE PTR [eax]
  404355:	push   eax
  404356:	push   0x2c60d
  40435b:	add    DWORD PTR [edx-0x1de40008],esi
  404361:	dec    ecx
  404362:	inc    ecx
  404363:	es int3 
  404365:	shl    BYTE PTR [esi+ebx*2+0x7],0x75
  40436a:	cld    
  40436b:	rcl    ecx,0x29
  40436e:	dec    ebx
  40436f:	daa    
  404370:	les    ecx,FWORD PTR [ebx]
  404372:	shr    BYTE PTR [edx],0xfd
  404375:	inc    ecx
  404376:	(bad)  
  404377:	pop    ebx
  404378:	add    eax,0xc4c1fffe
  40437d:	add    BYTE PTR [eax],al
  40437f:	out    0x49,al
  404381:	test   eax,eax
  404383:	rol    BYTE PTR [edi],0xff
  404386:	push   eax
  404387:	mov    DWORD PTR cs:[eax],0xea2cd60f
  40438e:	aam    0xa6
  404390:	les    ecx,FWORD PTR [ebx]
  404392:	shr    BYTE PTR [ebx+0x56bd83d1],0x7
  404399:	(bad)  
  40439a:	call   DWORD PTR [esi-0x4400f350]
  4043a0:	add    al,0xfe
  4043a2:	inc    DWORD PTR [ecx]
  4043a4:	pop    eax
  4043a5:	add    eax,0x85ce67
  4043aa:	jmp    0x404331
  4043ac:	sub    ebx,DWORD PTR [edx]
  4043ae:	inc    DWORD PTR [eax]
	...
  4043bc:	add    BYTE PTR [eax],al
  4043be:	mov    ebx,0x553fe838
  4043c3:	lds    eax,FWORD PTR [eax]
  4043c5:	dec    ebx
  4043c7:	cmp    al,0xe8
  4043c9:	aaa    
  4043ca:	and    eax,0x3feb00c5
  4043cf:	out    0xbf,eax
  4043d1:	jne    0x40442a
  4043d3:	(bad)  
  4043d4:	out    dx,al
  4043d5:	sar    BYTE PTR [edi],cl
  4043d7:	out    dx,eax
  4043d8:	lea    eax,[ebp-0x41078d]
  4043de:	(bad)  
  4043df:	(bad)  
  4043e0:	je     0x4043aa
  4043e2:	xor    edi,esp
  4043e4:	mov    esi,0x432eae8
  4043e9:	add    BYTE PTR [esi],dl
  4043eb:	in     eax,dx
  4043ec:	mov    ebp,0x791f18ff
  4043f1:	enter  0x711,0xbf
  4043f5:	call   0x44962e
  4043fa:	mov    ah,0x22
  4043fc:	pop    ebx
  4043fd:	leave  
  4043fe:	cld    
  4043ff:	aam    0x8b
  404401:	in     al,dx
  404402:	mov    esp,0x8c50b02d
  404407:	mov    al,0x52
  404409:	push   edi
  40440a:	mov    DWORD PTR [edx+0x49],edi
  40440d:	or     al,0xca
  40440f:	imul   eax,DWORD PTR [eax+eax*1+0x148fe13f],0x2e202
  40441a:	aas    
  40441b:	jp     0x4043f9
  40441d:	mov    eax,DWORD PTR [edi+0x6ac20]
	...
  40442f:	add    BYTE PTR [eax],al
  404431:	(bad)  
  404432:	lods   al,BYTE PTR ds:[esi]
  404433:	mov    al,0x8b
  404435:	sub    bh,cl
  404437:	add    ecx,edi
  404439:	jns    0x404429
  40443b:	add    BYTE PTR [ebx-0x5142164],0xbc
  404442:	call   0xb8b9:0xe23971fc
  404449:	jmp    eax
  40444b:	add    al,BYTE PTR [eax]
  40444d:	and    al,0xa2
  40444f:	add    edi,eax
  404451:	jo     0x40447f
  404453:	scas   eax,DWORD PTR es:[edi]
  404454:	mov    DWORD PTR [eax],edx
  404456:	enter  0x90e1,0xea
  40445a:	mul    DWORD PTR ds:0xacab3e06
  404460:	es js  0x4043f1
  404463:	in     eax,0x8c
  404465:	xchg   esp,eax
  404466:	add    eax,0xbff9c716
  40446b:	(bad)  
  40446c:	fcomip st,st(5)
  40446e:	dec    edi
  40446f:	cs inc esi
  404471:	inc    ebx
  404472:	jle    0x404409
  404474:	icebp  
  404475:	cmp    bh,dh
  404477:	pop    ebx
  404478:	mov    al,0x20
  40447a:	jge    0x40446d
  40447c:	nop
  40447d:	cmp    al,0x38
  404480:	lods   al,BYTE PTR ds:[esi]
  404481:	sub    cl,al
  404483:	jmp    0xed714f8b
  404488:	add    edi,DWORD PTR [edi]
  40448a:	enter  0x4072,0x4f
  40448e:	sti    
  40448f:	mov    ebx,DWORD PTR [ebp-0x70]
  404492:	xchg   edx,eax
  404493:	adc    BYTE PTR [ebx+0x0],bl
	...
  4044a2:	add    BYTE PTR [eax],al
  4044a4:	xchg   DWORD PTR [ecx],eax
  4044a6:	stos   DWORD PTR es:[edi],eax
  4044a7:	(bad)  
  4044a9:	popf   
  4044aa:	jb     0x40445b
  4044ac:	mov    esp,0x6855950b
  4044b1:	cwde   
  4044b2:	cmp    dl,BYTE PTR [ebp+0x6d]
  4044b5:	inc    ebx
  4044b6:	cld    
  4044b7:	lfs    esi,FWORD PTR [ecx+esi*8-0x76]
  4044bc:	add    bl,al
  4044be:	pusha  
  4044bf:	dec    eax
  4044c0:	mov    bl,0x42
  4044c2:	out    0x8a,al
  4044c4:	or     ah,cl
  4044c6:	jb     0x404516
  4044c8:	aaa    
  4044c9:	inc    ebx
  4044ca:	mov    dh,0xf
  4044cc:	(bad)  
  4044cd:	lock sbb DWORD PTR [edx-0x45e60ca4],edi
  4044d4:	mov    edx,0xdb3bee4b
  4044d9:	popa   
  4044da:	push   ss
  4044db:	add    al,BYTE PTR [ecx+0x9]
  4044de:	add    BYTE PTR [ecx],ch
  4044e0:	cmp    ebx,ecx
  4044e2:	ret    
  4044e3:	bound  esp,QWORD PTR [ebp-0x5b350646]
  4044e9:	mov    edx,0xdeb06cf9
  4044ee:	push   esi
  4044ef:	pop    esi
  4044f0:	jns    0x4044d1
  4044f2:	add    dh,BYTE PTR [edi-0xa3df6c0]
  4044f8:	cmp    eax,0x2d018b18
  4044fd:	repz and dh,bl
  404500:	repz mov WORD PTR cs:[ebp+0x39],ds
  404505:	adc    DWORD PTR [eax+0x9],esi
	...
  404514:	add    BYTE PTR [eax],al
  404516:	add    BYTE PTR [edi],dl
  404518:	retf   
  404519:	dec    esi
  40451a:	icebp  
  40451b:	std    
  40451c:	pop    es
  40451d:	adc    edx,ebp
  40451f:	push   es
  404520:	inc    edx
  404521:	cli    
  404522:	sbb    cl,bl
  404524:	test   eax,0x43c4faf9
  404529:	pushf  
  40452a:	fisubr WORD PTR [edx+0x3ea8bd06]
  404530:	xchg   esi,eax
  404531:	or     al,0xa8
  404533:	(bad)  
  404534:	fiadd  WORD PTR [ebx]
  404536:	shl    BYTE PTR [esi-0x215ccd11],0xf2
  40453d:	xor    dl,BYTE PTR [ebx+0x3e074cc0]
  404543:	cmp    dh,BYTE PTR [ebp+esi*8-0x16]
  404547:	jp     0x404521
  404549:	shr    DWORD PTR [ecx+0x62c3c942],0xf6
  404550:	mov    ecx,0xb9e4caf9
  404555:	stc    
  404556:	je     0x40451f
  404558:	(bad)  [edx]
  40455a:	daa    
  40455b:	ret    0x38d
  40455e:	mov    edi,0xddc20728
  404563:	aas    
  404564:	sbb    BYTE PTR [ebx-0x6090200],cl
  40456a:	and    edi,esp
  40456c:	idiv   cl
  40456e:	(bad)  
  40456f:	fcmovb st,st(2)
  404571:	adc    eax,DWORD PTR [esi+0x66]
  404574:	popa   
  404575:	add    ecx,DWORD PTR [esi+0x3e]
  404578:	or     ecx,eax
  40457a:	adc    DWORD PTR [eax],eax
	...
  404588:	add    BYTE PTR [eax],al
  40458a:	dec    DWORD PTR gs:[edx+0x233175fa]
  404591:	stc    
  404592:	xor    DWORD PTR gs:[ebp-0x6a35a664],ecx
  404599:	inc    esi
  40459a:	cmp    ecx,eax
  40459c:	pop    esi
  40459d:	sbb    al,0x67
  40459f:	pop    es
  4045a0:	push   ss
  4045a1:	add    ecx,DWORD PTR [edi+0x3f]
  4045a4:	stc    
  4045a5:	xor    ebx,DWORD PTR [eax+ebp*8]
  4045a8:	stc    
  4045a9:	xor    ebx,DWORD PTR [esi+eax*2]
  4045ac:	test   BYTE PTR [edi],al
  4045ae:	into   
  4045af:	push   eax
  4045b0:	sub    BYTE PTR [ecx+0x15],0x8b
  4045b4:	and    cl,al
  4045b6:	(bad)  
  4045b7:	retf   
  4045b8:	add    eax,ebx
  4045ba:	ins    DWORD PTR es:[edi],dx
  4045bb:	xor    BYTE PTR [ebx],dh
  4045bd:	stc    
  4045be:	inc    ebp
  4045bf:	xor    al,0x33
  4045c1:	stc    
  4045c2:	mov    ebx,DWORD PTR [ebp+0x17]
  4045c5:	scas   eax,DWORD PTR es:[edi]
  4045c6:	ror    DWORD PTR [ebx+ecx*4-0x401feffd],0xc2
  4045ce:	fcmovb st,st(7)
  4045d0:	ror    BYTE PTR [ebx+0x23f9f7ae],1
  4045d6:	mov    esp,0x2a8df9f7
  4045db:	les    esi,FWORD PTR [ecx+0x334295b]
  4045e1:	dec    esi
  4045e2:	jle    0x4045ed
  4045e4:	rcl    DWORD PTR [ecx],0x95
  4045e7:	dec    BYTE PTR [edx+0x233435fa]
  4045ed:	stc    
	...
  4045fa:	add    BYTE PTR [eax],al
  4045fc:	add    BYTE PTR [edi],bh
  4045fe:	sar    BYTE PTR [ebp+ecx*4-0x28831a55],cl
  404605:	jecxz  0x40467e
  404607:	add    BYTE PTR [esi+0x2b],bl
  40460a:	mov    al,ds:0xd83c16c0
  40460f:	mov    cl,bh
  404611:	sub    al,0xb9
  404613:	loopne 0x40460f
  404615:	sub    al,0xa9
  404617:	mov    es,WORD PTR [eax+eax*2-0x1b6fedff]
  40461e:	loope  0x404664
  404620:	xor    BYTE PTR [esi-0x62],bh
  404623:	add    al,0x3
  404625:	jl     0x4046a0
  404627:	mov    eax,0xbaff3633
  40462c:	xor    esi,DWORD PTR [esi]
  40462e:	ins    DWORD PTR es:[edi],dx
  40462f:	xchg   edi,eax
  404630:	pop    ss
  404631:	int3   
  404632:	jo     0x4045cf
  404634:	std    
  404635:	cmp    al,0xb3
  404637:	lock sar ch,0xe5
  40463b:	add    eax,0xf719c4d0
  404640:	cli    
  404641:	pop    esp
  404642:	pop    ss
  404643:	idiv   edx
  404645:	mov    dl,0x7d
  404647:	or     ecx,DWORD PTR [esi+0x362887c]
  40464d:	cmp    ecx,0xde4ec1c3
  404653:	int3   
  404654:	mov    esp,ebp
  404656:	push   cs
  404657:	mov    ebx,0xbb0ed623
  40465c:	lea    esi,[ebx+0x7e3fa]
	...
  40466e:	add    BYTE PTR [eax],al
  404670:	xchg   ebx,eax
  404671:	test   al,0x7
  404673:	pop    esi
  404674:	add    esp,DWORD PTR [eax]
  404676:	(bad)  
  404677:	push   ss
  404678:	cmp    al,0x28
  40467a:	(bad)  
  40467b:	stc    
  40467c:	ins    BYTE PTR es:[edi],dx
  40467d:	jbe    0x404666
  40467f:	stc    
  404680:	ins    BYTE PTR es:[edi],dx
  404681:	js     0x40460c
  404683:	test   BYTE PTR [eax],bh
  404685:	enter  0xe0cb,0x3a
  404689:	cli    
  40468a:	jmp    0x294981d0
  40468f:	add    DWORD PTR [edi+eax*1],edi
  404692:	bound  edi,QWORD PTR [edi-0x42f60fb4]
  404698:	sub    al,0xef
  40469a:	imul   edx,DWORD PTR [eax+0x447a8848],0x7f
  4046a1:	(bad)  
  4046a2:	xchg   edi,eax
  4046a3:	sbb    edi,DWORD PTR [esi+0x6]
  4046a6:	lock push es
  4046a8:	outs   dx,DWORD PTR ds:[esi]
  4046a9:	aas    
  4046aa:	and    edi,esi
  4046ac:	push   esi
  4046ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046ae:	adc    dh,bh
  4046b0:	push   eax
  4046b1:	inc    ebp
  4046b2:	pop    ebp
  4046b3:	or     ebp,esi
  4046b5:	lea    esp,[edi-0x327dc21f]
  4046bb:	(bad)  
  4046bc:	inc    cl
  4046be:	jmp    0x5cbc:0xb9edb4cd
  4046c5:	lock sbb DWORD PTR [esi+0x6dfe53ca],edi
  4046cc:	clc    
  4046cd:	cmp    eax,eax
  4046cf:	push   es
  4046d0:	sub    DWORD PTR [ecx],ecx
  4046d2:	stos   BYTE PTR es:[edi],al
  4046d3:	sldt   WORD PTR [eax]
	...
  4046e2:	add    BYTE PTR [ecx+edx*1],bh
  4046e5:	jb     0x4046a3
  4046e7:	sub    al,0xef
  4046e9:	or     DWORD PTR [esi+0x7f63f12c],edi
  4046ef:	inc    eax
  4046f0:	xchg   ebp,eax
  4046f1:	fldl2e 
  4046f3:	or     al,bh
  4046f5:	das    
  4046f6:	adc    dh,bh
  4046f8:	pop    es
  4046f9:	in     al,0x6
  4046fb:	cld    
  4046fc:	ds xchg edx,eax
  4046fe:	not    al
  404700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404701:	nop
  404702:	test   ch,0x44
  404705:	pop    ebp
  404706:	adc    cl,BYTE PTR [esp+ebx*8]
  404709:	and    eax,0x9a3c06
  40470e:	rol    DWORD PTR [ebx-0x7315f6fb],0x3e
  404715:	clc    
  404716:	sbb    bl,cl
  404718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404719:	sti    
  40471a:	sbb    dl,bl
  40471c:	inc    esp
  40471d:	mov    esi,fs
  40471f:	ret    
  404720:	jmp    0x827978c5
  404725:	cmp    al,0x28
  404727:	add    ecx,0x3
  40472a:	xor    eax,ecx
  40472c:	in     eax,dx
  40472d:	xor    dh,BYTE PTR [eax]
  40472f:	popa   
  404730:	cli    
  404731:	xor    dh,BYTE PTR [ebx]
  404733:	mov    bh,0x53
  404735:	pop    ds
  404736:	xor    DWORD PTR [ecx-0x91518ea],ebx
  40473c:	xlat   BYTE PTR ds:[ebx]
  40473d:	shr    DWORD PTR [edx],0x38
  404740:	(bad)  
  404741:	fldenv [edx-0x7d]
  404744:	mov    dh,0xfb
  404746:	retf   0x0
	...
  404755:	add    dl,bh
  404757:	mov    ch,0xf9
  404759:	ins    BYTE PTR es:[edi],dx
  40475a:	mov    al,0xc9
  40475c:	out    0x24,al
  40475e:	jecxz  0x404707
  404760:	add    esp,DWORD PTR [edi-0x133ff700]
  404766:	inc    ebx
  404767:	add    eax,0xfa0ae28b
  40476c:	and    dl,al
  40476e:	adc    ch,bh
  404770:	mov    WORD PTR [ebp+0x2e],?
  404773:	sbb    al,BYTE PTR [edi]
  404775:	inc    BYTE PTR [ebx]
  404777:	(bad)  
  404778:	push   esi
  404779:	add    esp,edi
  40477b:	push   es
  40477c:	or     edx,ebp
  40477e:	or     al,0x3e
  404780:	clc    
  404781:	cli    
  404782:	mov    ds:0x94dafba5,al
  404787:	inc    ebx
  404788:	mov    esi,gs
  40478a:	mov    edi,0x429dd5c3
  40478f:	or     BYTE PTR [eax+ebp*4],0xfc
  404793:	ret    0x3
  404796:	in     al,dx
  404797:	inc    ebx
  404798:	cli    
  404799:	xor    edi,DWORD PTR [edi+0x2c33f6eb]
  40479f:	dec    ecx
  4047a0:	pushf  
  4047a1:	pop    ds
  4047a2:	and    ebx,eax
  4047a4:	pop    edx
  4047a5:	inc    ebp
  4047a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047a7:	(bad)  
  4047a8:	and    cl,al
  4047aa:	fadd   DWORD PTR gs:[ebx]
  4047ad:	fstp   DWORD PTR ds:0x35fb332d
  4047b3:	xor    dh,BYTE PTR [ebx]
  4047b5:	stc    
  4047b6:	repz inc edi
  4047b8:	pop    es
  4047b9:	add    eax,0x0
	...
  4047c6:	add    BYTE PTR [eax],al
  4047c8:	add    BYTE PTR [edi],cl
  4047ca:	sub    ebp,DWORD PTR [ecx-0x401e67fd]
  4047d0:	rcr    BYTE PTR [ebx-0x34],0xc3
  4047d4:	mov    ebx,DWORD PTR ds:0x1f23f6fb
  4047da:	sti    
  4047db:	stc    
  4047dc:	(bad)  
  4047dd:	retf   0xf8d6
  4047e0:	mov    ds:0x56033941,eax
  4047e5:	cs push es
  4047e7:	ret    0x2509
  4047ea:	adc    eax,0x32e5f88b
  4047ef:	and    edi,ebx
  4047f1:	in     eax,0x2c
  4047f3:	lea    ecx,[ecx+edx*1+0x796f020e]
  4047fa:	retf   
  4047fb:	dec    esi
  4047fc:	sbb    al,0xd7
  4047fe:	add    eax,0x43dc030e
  404803:	cli    
  404804:	xor    edi,edi
  404806:	jmp    0x4047fe
  404808:	xor    edi,esp
  40480a:	dec    ecx
  40480b:	pushf  
  40480c:	pop    ds
  40480d:	pop    esp
  40480e:	mov    DWORD PTR [edx],ebp
  404810:	(bad)  
  404811:	aad    0x8e
  404813:	xor    cl,al
  404815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404816:	rol    BYTE PTR [ebx],0xd9
  404819:	dec    ebp
  40481a:	cs xor edi,edx
  40481d:	aas    
  40481e:	push   cs
  40481f:	mov    esp,0x44e9bb8d
  404824:	cmp    DWORD PTR [ebp+0x4b460449],esi
  40482a:	and    bl,al
  40482c:	add    al,0x0
	...
  40483a:	add    BYTE PTR [eax],al
  40483c:	cmp    al,0x1e
  40483e:	mov    ebx,?
  404840:	ins    BYTE PTR es:[edi],dx
  404841:	js     0x404837
  404843:	test   edx,0x89811072
  404849:	jo     0xc3ff3952
  40484f:	ret    0xde34
  404852:	ror    BYTE PTR [ebx+0x33bbed77],cl
  404858:	jne    0x4048bd
  40485a:	xchg   DWORD PTR [edi],ecx
  40485c:	sbb    eax,0x3c6d9600
  404861:	push   ecx
  404862:	out    0xc0,eax
  404864:	jle    0x404854
  404866:	add    ecx,edx
  404868:	les    esp,FWORD PTR [esp+esi*8-0x7927f309]
  40486f:	pushf  
  404870:	and    BYTE PTR [ebx],dl
  404872:	sti    
  404873:	in     al,0x3a
  404875:	jecxz  0x4048cf
  404877:	cmp    dh,bh
  404879:	mov    ds:0x6b060310,al
  40487e:	mov    edx,0xbc332533
  404883:	(bad)  
  404884:	ret    
  404885:	fidivr WORD PTR [esi]
  404887:	jmp    0x2043:0x460345d1
  40488e:	les    eax,FWORD PTR [esp+edi*1]
  404891:	and    cl,BYTE PTR [ebx-0xcf7d305]
  404897:	test   edx,0xf8a90f95
  40489d:	push   edi
  40489e:	dec    ebx
  40489f:	add    eax,DWORD PTR [eax]
	...
  4048ad:	add    BYTE PTR [eax],al
  4048af:	mov    DWORD PTR [ecx],edx
  4048b1:	(bad)
  4048b5:	jmp    0xcba:0xd9f0c4d3
  4048bc:	repnz arpl WORD PTR [eax+0x7b226830],cx
  4048c3:	mov    cl,0xcb
  4048c5:	aaa    
  4048c6:	sbb    BYTE PTR [esi+0x9],bh
  4048c9:	fld    DWORD PTR [edx]
  4048cb:	jne    0x404910
  4048cd:	jae    0x4048c2
  4048cf:	test   al,0xbb
  4048d1:	jo     0x40485c
  4048d3:	mov    ebx,0xd077d9cf
  4048d8:	cs jmp 0x3c0f:0x2a095755
  4048e0:	adc    DWORD PTR [edx-0x43],esp
  4048e3:	sub    al,0xf2
  4048e5:	stc    
  4048e6:	mov    edx,0xbde644c2
  4048eb:	jmp    0xf9434a42
  4048f0:	mov    bl,0x28
  4048f2:	les    eax,FWORD PTR [ebx-0x35]
  4048f5:	sub    cl,BYTE PTR [ebx-0xcdf44ac]
  4048fb:	push   eax
  4048fc:	cmp    eax,0xa7450f7d
  404901:	dec    eax
  404902:	stos   BYTE PTR es:[edi],al
  404903:	cmp    al,0xd6
  404905:	sub    dl,al
  404907:	inc    esp
  404908:	retf   
  404909:	sbb    DWORD PTR [ebx-0xd0d44d9],ecx
  40490f:	es cmp eax,0x75d
	...
  404921:	add    dl,al
  404923:	mov    bh,0xd6
  404925:	iret   
  404926:	cmp    al,0x7e
  404928:	in     eax,dx
  404929:	(bad)  
  40492a:	(bad)  
  40492b:	xlat   BYTE PTR ds:[ebx]
  40492c:	jmp    0x2cbc:0x19f1b4c9
  404933:	icebp  
  404934:	jae    0x4048cd
  404936:	push   eax
  404937:	(bad)
  40493a:	inc    ebx
  40493b:	retf   
  40493c:	add    BYTE PTR [edi],dl
  40493e:	inc    ebx
  40493f:	or     ebx,eax
  404941:	(bad)  
  404942:	cmp    eax,0xcda08b11
  404947:	lock xor ah,BYTE PTR [edx-0x2ff8bc49]
  40494e:	in     al,dx
  40494f:	adc    ebx,ecx
  404951:	jmp    0xc9b0:0xa9c1a47a
  404958:	ret    
  404959:	jb     0x404940
  40495b:	mov    edx,0x3ce4baf9
  404960:	xchg   esp,eax
  404961:	(bad)  
  404962:	fist   WORD PTR [eax-0x25]
  404965:	dec    edi
  404966:	cmp    eax,0x7e283096
  40496b:	ret    0x3903
  40496e:	mov    ch,0xef
  404970:	xor    dl,BYTE PTR [edx+0x6d]
  404973:	lock mov WORD PTR [ebp+0x39],?
  404977:	lock jnp 0x404905
  40497a:	push   ecx
  40497b:	retf   
  40497c:	dec    esi
  40497d:	cmc    
  40497e:	jnp    0x404988
  404980:	adc    dl,ch
  404982:	xchg   BYTE PTR [edx-0x6],al
  404985:	fiadd  DWORD PTR [eax]
	...
  404993:	add    BYTE PTR [eax],al
  404995:	xchg   esp,eax
  404996:	mov    edx,0xceb06cf9
  40499b:	gs mov edi,0xaf0303d8
  4049a1:	inc    esp
  4049a2:	pop    es
  4049a3:	ret    
  4049a4:	fidivr WORD PTR ds:0xf2febf0f
  4049aa:	in     eax,dx
  4049ab:	(bad)  
  4049ac:	mov    edx,0xbafbc1e6
  4049b1:	fstp   TBYTE PTR [ebx]
  4049b3:	test   dh,ch
  4049b5:	push   eax
  4049b6:	stos   BYTE PTR es:[edi],al
  4049b7:	sub    ebp,edx
  4049b9:	ds mov cl,0xa9
  4049bd:	add    ebx,ecx
  4049bf:	ret    
  4049c0:	mov    ?,WORD PTR [edx-0x6ff0113]
  4049c6:	div    edi
  4049c8:	or     edi,esi
  4049ca:	idiv   ecx
  4049cc:	lea    eax,[edx+0x3cff97bb]
  4049d2:	xchg   DWORD PTR [ebx],eax
  4049d4:	push   esi
  4049d5:	cmp    cl,BYTE PTR [ecx]
  4049d7:	ret    0xd50a
  4049da:	sbb    DWORD PTR [edi-0xcc5601],edi
  4049e0:	xor    ecx,ebp
  4049e2:	mov    edi,0x45be33fa
  4049e7:	mov    WORD PTR [edi],cs
  4049e9:	add    edi,esp
  4049eb:	xchg   edx,eax
  4049ec:	stos   DWORD PTR es:[edi],eax
  4049ed:	xchg   ebp,eax
  4049ee:	cmp    DWORD PTR [eax],0xffffffc1
  4049f1:	out    0xc3,eax
  4049f3:	add    ecx,edx
  4049f5:	fnstenv [ebx]
  4049f7:	(bad)  
  4049f8:	inc    DWORD PTR [eax]
	...
  404a06:	add    BYTE PTR [eax],al
  404a08:	jmp    0xef4c4103
  404a0d:	idiv   al
  404a0f:	(bad)  
  404a10:	jmp    0x330:0x15a039d2
  404a17:	pop    esi
  404a18:	xchg   edx,eax
  404a19:	or     al,bl
  404a1b:	adc    eax,0xffbf1255
  404a20:	sub    DWORD PTR [ebx],esi
  404a22:	push   DWORD PTR [ebx]
  404a24:	sbb    al,0xbf
  404a26:	sti    
  404a27:	xor    ebx,DWORD PTR [edi]
  404a29:	inc    ebp
  404a2a:	test   BYTE PTR [edi],al
  404a2c:	adc    eax,0x25655b91
  404a31:	stos   DWORD PTR es:[edi],eax
  404a32:	xor    cl,al
  404a34:	data16 out dx,al
  404a36:	add    ebx,eax
  404a38:	imul   esi,DWORD PTR [ebx],0xf829ffff
  404a3e:	test   DWORD PTR [ebx],0x8df9f80e
  404a44:	xchg   edx,eax
  404a45:	mov    esp,0x441acc92
  404a4a:	add    edx,DWORD PTR [esi+0x3f]
  404a4d:	jecxz  0x404a10
  404a4f:	ret    0xe245
  404a52:	sar    BYTE PTR [edi-0x4bfa10],cl
  404a58:	sub    al,0xa
  404a5a:	or     dl,bh
  404a5c:	sub    al,0x37
  404a5e:	xchg   BYTE PTR [eax+ecx*2-0x2f104f64],cl
  404a65:	loope  0x404aab
  404a67:	sub    dh,bh
  404a69:	pop    ds
  404a6a:	add    al,0x3
	...
  404a78:	add    BYTE PTR [eax],al
  404a7a:	add    ch,dh
  404a7c:	xchg   ebp,eax
  404a7d:	mov    ah,0xff
  404a7f:	mov    eax,0x44f7f03d
  404a84:	dec    eax
  404a85:	lock stc 
  404a87:	mov    edx,0x2d1148a
  404a8c:	pop    ebx
  404a8d:	jle    0x404a92
  404a8f:	stc    
  404a90:	loop   0x404a53
  404a92:	ret    
  404a93:	sub    ah,dl
  404a95:	fnstcw WORD PTR [edi-0x4b7278]
  404a9b:	dec    esp
  404a9c:	cdq    
  404a9d:	or     bl,bh
  404a9f:	sub    al,0x98
  404aa1:	xchg   BYTE PTR [eax+edi*1-0x2757caca],al
  404aa8:	loope  0x404ae6
  404aaa:	and    BYTE PTR [esi-0x62],bh
  404aad:	std    
  404aae:	add    bh,BYTE PTR [ebp+ebx*2-0x4c]
  404ab2:	call   DWORD PTR [eax-0x5b]
  404ab5:	lock clc 
  404ab7:	xor    al,0xa7
  404ab9:	lock cli 
  404abb:	mov    dl,0x6a
  404abd:	or     al,0xe0
  404abf:	and    DWORD PTR [esi],ebp
  404ac1:	mov    ch,0x3
  404ac3:	mov    DWORD PTR ds:0xde35c2c2,eax
  404ac9:	sar    BYTE PTR [edi-0x4d0ce0],cl
  404acf:	dec    esp
  404ad0:	test   BYTE PTR [esi],0xfa
  404ad3:	dec    esp
  404ad4:	enter  0x81e1,0xbb
  404ad8:	mov    ebx,0x273e46f5
  404add:	jmp    0x0:0x41
	...
  404aec:	add    BYTE PTR [eax],al
  404aee:	push   edi
  404aef:	or     DWORD PTR [eax-0x7a01c3fd],ebp
  404af5:	mov    bl,0xe8
  404af7:	jmp    0x404ab6
  404af9:	imul   eax
  404afb:	mov    edi,0x3dd6f7b0
  404b00:	dec    ebp
  404b01:	adc    ebx,DWORD PTR [esi+0x3c41f1d9]
  404b07:	mov    dl,ch
  404b09:	(bad)  
  404b0a:	cld    
  404b0b:	aad    0xea
  404b0d:	int3   
  404b0e:	clc    
  404b0f:	jmp    0x404a9e
  404b11:	mov    bl,0xb0
  404b13:	mov    bh,0x83
  404b15:	jmp    DWORD PTR [ebp-0x447e7f49]
  404b1b:	ret    
  404b1c:	imul   esi,DWORD PTR [edx],0xffffffec
  404b1f:	bnd jmp 0x29497a6e
  404b25:	or     bh,BYTE PTR [edi+eax*1]
  404b28:	sahf   
  404b29:	mov    bl,0x80
  404b2b:	jmp    0x404b82
  404b2d:	div    DWORD PTR [edi-0x41]
  404b30:	push   ecx
  404b31:	div    DWORD PTR [ebp+0x3d]
  404b34:	pop    ebp
  404b35:	sbb    esi,DWORD PTR [edx]
  404b37:	test   BYTE PTR [edx],0x71
  404b3a:	cmp    al,0x92
  404b3c:	add    eax,0xeabe7dc5
  404b41:	rcl    DWORD PTR [eax+0x48b325eb],cl
  404b47:	mov    bh,0x22
  404b49:	inc    DWORD PTR [esi-0x49]
  404b4c:	adc    DWORD PTR [ecx-0x29ad4535],eax
	...
  404b5e:	add    BYTE PTR [eax],al
  404b60:	add    BYTE PTR [eax],cl
  404b62:	sahf   
  404b63:	jmp    0x3c03:0x28093741
  404b6a:	(bad)  
  404b6b:	push   DWORD PTR ds:0xeefeeacc
  404b71:	or     ebx,esi
  404b73:	or     ah,al
  404b75:	adc    ecx,esi
  404b77:	mov    WORD PTR [ebp+0x2d],?
  404b7a:	pop    ecx
  404b7b:	shr    DWORD PTR [edi-0x27],cl
  404b7e:	(bad)  
  404b7f:	pop    esi
  404b80:	add    eax,0xea1506fa
  404b85:	sti    
  404b86:	ds jge 0x404b7a
  404b89:	cmp    eax,ebx
  404b8b:	add    DWORD PTR [esi],edx
  404b8d:	inc    edi
  404b8e:	leave  
  404b8f:	dec    edi
  404b90:	loope  0x404bcd
  404b92:	xchg   ebx,eax
  404b93:	or     al,0xa6
  404b95:	jg     0x404b83
  404b97:	mov    WORD PTR [edi],ss
  404b99:	jnp    0x404b56
  404b9b:	mov    esi,esp
  404b9d:	jmp    0x588f:0x233feea
  404ba4:	es or  eax,0x3cedc201
  404baa:	xchg   ebp,eax
  404bab:	mov    eax,DWORD PTR [ebp+0x16f803c1]
  404bb1:	cmc    
  404bb2:	xchg   esi,eax
  404bb3:	(bad)  
  404bb4:	lods   al,BYTE PTR ds:[esi]
  404bb5:	fadd   st,st(7)
  404bb7:	add    cl,ch
  404bb9:	cmp    al,0xeb
  404bbb:	je     0x404ba2
  404bbd:	mov    ebp,0x4726f884
  404bc2:	call   0x40f451
	...
  404bd3:	add    BYTE PTR [ecx+ecx*8],bh
  404bd6:	and    esp,DWORD PTR [ebp+edx*1-0x26b2fafd]
  404bdd:	mov    BYTE PTR [eax],al
  404bdf:	pusha  
  404be0:	icebp  
  404be1:	cld    
  404be2:	out    dx,al
  404be3:	cs aaa 
  404be5:	loopne 0x404b71
  404be7:	test   al,0x3c
  404be9:	jmp    0xfd05:0x1c453db
  404bf0:	mov    dl,0x87
  404bf2:	add    BYTE PTR [eax],al
  404bf4:	test   al,0x91
  404bf6:	xor    dl,BYTE PTR [eax]
  404bf8:	pop    ecx
  404bf9:	shl    al,0x8b
  404bfc:	out    0xc5,eax
  404bfe:	lock loope 0x404c35
  404c01:	add    ch,bl
  404c03:	sbb    al,0x8d
  404c05:	or     DWORD PTR [eax],0x6a385b03
  404c0b:	inc    eax
  404c0c:	jle    0x404c3e
  404c0e:	mov    eax,DWORD PTR [ecx-0x1a]
  404c11:	xchg   ebp,eax
  404c12:	call   0xff784757
  404c17:	sbb    DWORD PTR [ebx],0x38
  404c1a:	inc    eax
  404c1b:	call   0x4110c2
  404c20:	gs leave 
  404c22:	clc    
  404c23:	inc    eax
  404c24:	and    eax,0x9e5d8b16
  404c29:	inc    ebx
  404c2a:	ret    
  404c2b:	inc    eax
  404c2c:	sbb    eax,0x5b030881
  404c31:	cmp    BYTE PTR [ebx+0x68],dl
  404c34:	sub    ch,BYTE PTR [ebx+0x41]
	...
  404c47:	inc    esi
  404c48:	dec    esp
  404c49:	sbb    ebp,esp
  404c4b:	adc    DWORD PTR [edi],esi
  404c4d:	add    DWORD PTR [ebp+0x22],ebx
  404c50:	inc    BYTE PTR [edx+0x850df4]
  404c56:	adc    BYTE PTR ds:0x6d76374b,0x44
  404c5d:	jmp    0x404c67
  404c5f:	mov    ch,bl
  404c61:	jle    0x404c06
  404c63:	push   0x69
  404c65:	inc    ecx
  404c66:	add    BYTE PTR [esi-0x7c],dl
  404c69:	js     0x404c61
  404c6b:	(bad)  
  404c6c:	push   0x0
  404c6e:	add    BYTE PTR [esi+0x5c],ah
  404c71:	enter  0x21ff,0x37
  404c75:	jmp    0x404c79
  404c77:	stos   BYTE PTR es:[edi],al
  404c78:	jmp    0x404cf8
  404c7a:	mov    ds:0x417f033f,eax
  404c7f:	aas    
  404c80:	fild   WORD PTR [ebx+0x78]
  404c83:	xor    DWORD PTR [esi+0x47],esi
  404c86:	or     al,0xe6
  404c88:	test   BYTE PTR [edx],0x0
  404c8b:	aas    
  404c8c:	cs aad 0xf7
  404c8f:	push   ds
  404c90:	or     bh,BYTE PTR [ebx-0xcc20af1]
  404c96:	mov    edi,DWORD PTR [esi-0x21]
  404c99:	jns    0x404cb0
  404c9b:	sub    esp,DWORD PTR [ebx+0x42]
  404c9e:	add    bh,ah
  404ca0:	mov    dh,0x4
  404ca2:	add    BYTE PTR [edi],bh
  404ca4:	inc    eax
  404ca5:	mov    ds:0x7bdf7e8b,eax
  404caa:	adc    eax,0x0
	...
  404cb7:	add    BYTE PTR [eax],al
  404cb9:	add    bl,ah
  404cbb:	gs inc edx
  404cbd:	add    ah,al
  404cbf:	or     ebx,DWORD PTR [ebx-0x208175]
  404cc5:	(bad)  
  404cc6:	xor    BYTE PTR ds:0x3edcc900,dh
  404ccc:	jl     0x404d0f
  404cce:	aas    
  404ccf:	push   0x9fb4e416
  404cd4:	add    al,0x89
  404cd6:	xor    dl,BYTE PTR [edi+0x7c]
  404cd9:	inc    ecx
  404cda:	aas    
  404cdb:	sbb    BYTE PTR [edi+0x7bdefe8b],0x15
  404ce2:	(bad)  
  404ce3:	jne    0x404d27
  404ce5:	add    BYTE PTR [eax],dh
  404ce7:	mov    bh,0x0
  404ce9:	retf   0x829c
  404cec:	jl     0x404d2f
  404cee:	aas    
  404cef:	push   0x1fb4f016
  404cf4:	add    ebp,DWORD PTR [edx+0x4b]
  404cf7:	stos   BYTE PTR es:[edi],al
  404cf8:	ss adc bh,ah
  404cfb:	jle    0x404d79
  404cfd:	inc    ecx
  404cfe:	aas    
  404cff:	xchg   DWORD PTR ds:0x26c748e4,esi
  404d05:	dec    esp
  404d06:	loope  0x404c90
  404d08:	xor    ch,al
  404d0a:	dec    ebx
  404d0b:	enter  0x7cbc,0x23
  404d0f:	dec    esp
  404d10:	and    eax,0x5e0e6ab
  404d15:	mov    al,0x20
  404d17:	push   esp
  404d18:	in     eax,0xbe
  404d1a:	push   ebx
  404d1b:	push   esp
  404d1c:	test   al,0x3
	...
  404d2a:	add    BYTE PTR [eax],al
  404d2c:	add    ah,al
  404d2e:	mov    esp,0x89b4eb1c
  404d33:	jmp    0xb4184636
  404d38:	jge    0x404d7d
  404d3a:	adc    eax,0xc87e801d
  404d3f:	pusha  
  404d40:	sbb    dl,bh
  404d42:	mov    al,ds:0x893f4575
  404d47:	xor    al,0xd1
  404d49:	xchg   esi,eax
  404d4a:	or     BYTE PTR [esi-0x1aac2f51],dh
  404d50:	adc    BYTE PTR [edi],0x55
  404d53:	sub    BYTE PTR [esp+esi*4],al
  404d56:	mov    esp,0x89ca186c
  404d5b:	jmp    0x8d958a52
  404d60:	cmp    dh,0xc7
  404d63:	mov    edx,0x6cdcb217
  404d68:	inc    ebp
  404d69:	aas    
  404d6a:	fwait
  404d6b:	stos   DWORD PTR es:[edi],eax
  404d6c:	aad    0x7f
  404d6e:	push   ecx
  404d6f:	in     eax,0x80
  404d71:	push   ebx
  404d72:	push   ebp
  404d73:	test   al,0x3
  404d75:	(bad)  
  404d76:	pop    esp
  404d77:	aaa    
  404d78:	jnp    0x404dd4
  404d7a:	call   0x537f92e0
  404d7f:	adc    al,0xa8
  404d81:	mov    ah,0x89
  404d83:	jmp    0x72307002
  404d88:	inc    ebp
  404d89:	aas    
  404d8a:	out    0xff,eax
  404d8c:	sti    
  404d8d:	mov    al,0x53
  404d8f:	inc    ecx
  404d90:	jmp    0x404d95
	...
  404d9d:	add    BYTE PTR [eax],al
  404d9f:	add    cl,cl
  404da1:	mov    esp,?
  404da3:	es inc esi
  404da5:	test   DWORD PTR [edx+0x45573ca8],0xfef4a211
  404daf:	push   cs
  404db0:	fcom   DWORD PTR [edx-0x2a]
  404db3:	jb     0x404dad
  404db5:	(bad)  
  404db7:	retf   0xab02
  404dba:	push   ebp
  404dbb:	cmc    
  404dbc:	adc    eax,0xbfe50309
  404dc1:	mov    ecx,DWORD PTR [eax+ebp*1-0x1eba34c5]
  404dc8:	inc    edi
  404dc9:	inc    ecx
  404dca:	jns    0x404e37
  404dcc:	xchg   bh,ah
  404dce:	je     0x404d9d
  404dd0:	imul   ecx,DWORD PTR [ebp-0x1bd08f08],0x534aa7c0
  404dda:	(bad)  
  404ddb:	bound  ecx,QWORD PTR [ebp+0x3de4c308]
  404de1:	add    BYTE PTR [ecx+0x1c],al
  404de4:	jmp    DWORD PTR [eax]
  404de6:	in     al,dx
  404de7:	sahf   
  404de8:	jmp    0x35efd8d3
  404ded:	push   DWORD PTR [edx]
  404def:	and    al,0xef
  404df1:	call   0x6d94:0x5538eac2
  404df8:	add    ecx,eax
  404dfa:	add    ebp,DWORD PTR [ebx+eiz*8]
  404dfd:	int3   
  404dfe:	mov    eax,ds:0xff757b82
  404e03:	fadd   QWORD PTR [eax]
	...
  404e11:	add    BYTE PTR [eax],al
  404e13:	rcl    BYTE PTR [esi+0x45],1
  404e16:	popa   
  404e17:	sti    
  404e18:	fs cld 
  404e1a:	sub    BYTE PTR [edx-0x3b],bh
  404e1d:	mov    ecx,DWORD PTR [edi-0x1b]
  404e20:	fcmovb st,st(0)
  404e22:	add    BYTE PTR ds:0xa7d803d0,dl
  404e28:	lahf   
  404e29:	sar    BYTE PTR [ecx-0xca06],1
  404e2f:	fisttp QWORD PTR ds:0xe21a558b
  404e35:	inc    ebx
  404e36:	cld    
  404e37:	add    eax,0x1dc622ff
  404e3c:	or     BYTE PTR [ebx],al
  404e3e:	add    al,0x8b
  404e40:	sub    eax,0xcb16418c
  404e45:	inc    ebp
  404e46:	clc    
  404e47:	and    edx,DWORD PTR [esi]
  404e49:	mov    esp,0x7536991b
  404e4e:	cld    
  404e4f:	imul   edx,DWORD PTR [eax+0x189b89f8],0x60f8c6c1
  404e59:	dec    BYTE PTR [ebx+0x5c30a15]
  404e5f:	aad    0x11
  404e61:	inc    ecx
  404e62:	jne    0x404e11
  404e64:	jno    0x404e52
  404e66:	call   FWORD PTR [ecx+0x5dc68b33]
  404e6c:	sti    
  404e6d:	xor    al,BYTE PTR [ebp-0x66]
  404e70:	xlat   BYTE PTR ds:[ebx]
  404e71:	rol    BYTE PTR [ebx],0xd2
  404e74:	data16 xor al,0x8d
	...
  404e83:	add    BYTE PTR [eax],al
  404e85:	add    BYTE PTR [edi-0x34],ah
  404e88:	add    eax,DWORD PTR [ebp-0x32]
  404e8b:	int    0xd6
  404e8d:	shl    DWORD PTR [edx+eiz*1],0xff
  404e91:	jne    0x404e4d
  404e93:	arpl   WORD PTR [ebp-0x8],ax
  404e96:	(bad)  
  404e98:	cld    
  404e99:	shl    eax,0xd6
  404e9c:	mov    edi,esi
  404e9e:	sbb    eax,0x93c3c117
  404ea3:	enter  0x41d8,0x93
  404ea7:	stc    
  404ea8:	add    BYTE PTR ds:0x41798f3f,bl
  404eae:	aas    
  404eaf:	lock cmc 
  404eb1:	jecxz  0x404e67
  404eb3:	xor    BYTE PTR [ebx],al
  404eb5:	add    DWORD PTR [edx],ebx
  404eb7:	ja     0x404f32
  404eb9:	inc    ecx
  404eba:	aas    
  404ebb:	push   0x47
  404ebd:	cld    
  404ebe:	ds in  al,dx
  404ec0:	sahf   
  404ec1:	mov    edi,esi
  404ec3:	out    dx,al
  404ec4:	ja     0x404f0b
  404ec6:	aaa    
  404ec7:	lock add eax,0x32fc4f0
  404ecd:	leave  
  404ece:	cld    
  404ecf:	sbb    edi,DWORD PTR [eax-0x14]
  404ed2:	and    BYTE PTR [ebx+edi*8-0x19],ah
  404ed6:	test   al,0x9a
  404ed8:	add    al,0x0
  404eda:	mov    esp,0x6175abd6
  404edf:	div    BYTE PTR ds:0xb9771708
  404ee5:	add    BYTE PTR [edi],bh
  404ee7:	fcmovb st,st(2)
  404ee9:	jne    0x404eeb
	...
  404ef7:	add    BYTE PTR [eax],al
  404ef9:	cmp    BYTE PTR [edi],dh
  404efb:	lods   al,BYTE PTR ds:[esi]
  404efc:	(bad)  
  404efd:	call   0xb453e717
  404f02:	scas   al,BYTE PTR es:[edi]
  404f03:	add    BYTE PTR [eax+0x7362f44],dl
  404f09:	xchg   edi,eax
  404f0a:	sbb    eax,0x9c8ffac
  404f0f:	pop    es
  404f10:	mov    edi,DWORD PTR [edi]
  404f12:	pop    edx
  404f13:	add    ecx,ecx
  404f15:	jge    0x404f01
  404f17:	add    dl,BYTE PTR [ebp-0x3c]
  404f1a:	dec    edx
  404f1b:	add    ah,0xaf
  404f1e:	mov    eax,ds:0xf515daf1
  404f23:	sbb    BYTE PTR [ecx],al
  404f25:	and    eax,0x84389af1
  404f2a:	out    dx,al
  404f2b:	add    al,BYTE PTR [ebx+0x2367587]
  404f31:	xchg   esp,eax
  404f32:	(bad)  
  404f33:	retf   
  404f34:	js     0x404ecd
  404f36:	jno    0x404f31
  404f38:	jle    0x404f34
  404f3a:	xlat   BYTE PTR ds:[ebx]
  404f3b:	mov    eax,0x4de9e29b
  404f40:	lods   al,BYTE PTR ds:[esi]
  404f41:	(bad)  [esp+ebp*4]
  404f44:	mov    bl,0x3d
  404f46:	enter  0x3e72,0x2f
  404f4a:	dec    esi
  404f4b:	and    al,0x25
  404f4d:	mov    dh,0x92
  404f4f:	cmp    eax,DWORD PTR [eax+0x37e9d3c2]
  404f55:	inc    edx
  404f56:	dec    edi
  404f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f58:	jmp    DWORD PTR ds:0x2e6ac4
	...
  404f6a:	add    BYTE PTR [eax],al
  404f6c:	cmp    ecx,eax
  404f6e:	xchg   esp,eax
  404f6f:	stc    
  404f70:	mov    ebp,0x9203f165
  404f75:	int3   
  404f76:	adc    ah,dh
  404f78:	and    eax,0x3735f6d4
  404f7d:	lock jl 0x404f2c
  404f80:	add    ah,ah
  404f82:	imul   ebp,DWORD PTR [eax+edi*8+0x4b9eeb5d],0x55b02c51
  404f8d:	mov    eax,0x78ef415c
  404f92:	sbb    bl,BYTE PTR [ebp+ebx*8-0x43fc16f2]
  404f99:	loopne 0x404f50
  404f9b:	xor    DWORD PTR [edi],esi
  404f9d:	ja     0x404f60
  404f9f:	leave  
  404fa0:	cmc    
  404fa1:	enter  0xf6e9,0x95
  404fa5:	dec    edi
  404fa6:	stos   BYTE PTR es:[edi],al
  404fa7:	dec    edi
  404fa8:	xchg   BYTE PTR [esi],al
  404faa:	in     eax,0x3
  404fac:	adc    cl,BYTE PTR [edi+0x7d]
  404faf:	push   edi
  404fb0:	or     BYTE PTR [edi+0x4],al
  404fb3:	adc    al,0x3f
  404fb5:	pop    ebp
  404fb6:	repnz imul edi,DWORD PTR [esi],0xffffffc8
  404fba:	add    cl,ch
  404fbc:	cmp    al,0x83
  404fbe:	pop    ebx
  404fbf:	mov    al,ds:0x7200d479
  404fc4:	es aam 0xbb
  404fc7:	jmp    0xc3411808
  404fcc:	cmp    al,0xe3
  404fce:	je     0x404fc9
	...
  404fdc:	add    BYTE PTR [eax],al
  404fde:	add    BYTE PTR ds:0xb4f174e3,cl
  404fe4:	xor    cl,dl
  404fe6:	jmp    0xb8009d27
  404feb:	cmp    bh,al
  404fed:	clc    
  404fee:	add    dh,bh
  404ff0:	mov    bh,0x83
  404ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ff3:	dec    esp
  404ff4:	enter  0xe675,0xa1
  404ff8:	leave  
  404ff9:	add    cl,ch
  404ffb:	cmp    al,0xef
  404ffd:	add    DWORD PTR [edx],eax
  404fff:	icebp  
  405000:	dec    esi
  405001:	ret    
  405002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405003:	mov    DWORD PTR [ecx],edx
  405005:	ret    0x3ced
  405008:	jge    0x404f95
  40500a:	add    eax,0xeff40bc2
  40500f:	aad    0xe2
  405011:	(bad)  
  405012:	pop    esp
  405013:	not    DWORD PTR [ecx-0x7b]
  405016:	aad    0xa6
  405018:	loop   0x405018
  40501a:	scas   al,BYTE PTR es:[edi]
  40501b:	mov    edi,0x95cefddf
  405020:	mov    DWORD PTR [eax],0x850b3ce9
  405026:	mov    ebp,0xe8fee2a6
  40502b:	cmp    al,0xc8
  40502d:	add    BYTE PTR [edi+edi*4-0x39],bl
  405031:	jmp    DWORD PTR [esi-0xe8b1d1b]
  405037:	xor    eax,0xd86c8dc8
  40503c:	loope  0x40503c
  40503e:	mov    cs,WORD PTR [esi+ebp*2]
	...
  405051:	add    BYTE PTR [esp+ecx*8],ch
  405054:	lea    eax,[ebp-0xceee]
  40505a:	es ret 0xe800
  40505e:	pop    esp
  40505f:	and    al,BYTE PTR [eax]
  405061:	add    ch,ah
  405063:	push   DWORD PTR cs:[edx+ebx*2-0x1f]
  405068:	mov    esi,0xbed95a75
  40506d:	jmp    0x4050ca
  40506f:	outs   dx,BYTE PTR ds:[esi]
  405070:	add    DWORD PTR [eax],eax
  405072:	data16 (bad) 
  405074:	leave  
  405075:	ret    0xc64e
  405078:	push   ebp
  405079:	mov    eax,DWORD PTR [edx]
  40507b:	dec    edx
  40507c:	(bad)  
  40507d:	cld    
  40507e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40507f:	add    edx,ebx
  405081:	push   0xfffffffc
  405083:	cs jne 0x40508e
  405086:	dec    esi
  405087:	pusha  
  405088:	(bad)  
  405089:	call   DWORD PTR [ecx-0x1e]
  40508c:	mov    esi,0x5ac3ea74
  405091:	call   FWORD PTR [ebx+0x117fe6dd]
  405097:	xor    bh,bh
  405099:	or     edx,DWORD PTR [esi-0x68]
  40509c:	add    ch,bl
  40509e:	fcmovb st,st(3)
  4050a0:	add    BYTE PTR [edx-0x19],ch
  4050a3:	pop    edx
  4050a4:	inc    ebp
  4050a5:	push   DWORD PTR [esi]
  4050a7:	das    
  4050a8:	jne    0x4050b2
  4050aa:	dec    bl
  4050ac:	retf   0xd600
  4050af:	(bad)  
  4050b0:	sar    BYTE PTR [esi-0x2a],0x64
  4050b4:	inc    ebp
  4050b5:	adc    al,0x0
	...
  4050c3:	add    BYTE PTR [eax],al
  4050c5:	mov    eax,ds:0x5cd475ff
  4050cb:	add    DWORD PTR [ebx+0x1289e02b],ecx
  4050d1:	dec    esp
  4050d2:	int3   
  4050d3:	push   0x1
  4050d5:	and    esp,DWORD PTR [ecx+0x3a3f50ff]
  4050db:	das    
  4050dc:	or     al,0xa0
  4050de:	popf   
  4050df:	adc    al,0xff
  4050e1:	adc    bl,bl
  4050e3:	call   0x23b:0xa962762e
  4050ea:	push   DWORD PTR [edx+eax*1]
  4050ed:	xchg   esp,eax
  4050ee:	jmp    0x40516d
  4050f0:	fcomi  st,st(3)
  4050f2:	cmp    bh,BYTE PTR [ebp-0x3d]
  4050f5:	adc    al,0x98
  4050f7:	(bad)  
  4050f8:	adc    al,0x3f
  4050fa:	and    al,0x7c
  4050fc:	in     al,dx
  4050fd:	mov    esi,0x58f804ab
  405102:	mov    dl,BYTE PTR [ebp+0x2b]
  405105:	je     0x4050fc
  405107:	dec    esp
  405108:	call   edx
  40510a:	out    0x9a,al
  40510c:	sbb    BYTE PTR [eax-0x4e],al
  40510f:	test   eax,0x2042ff0b
  405114:	push   0xffffff95
  405116:	ret    0x82f
  405119:	pop    ss
  40511a:	in     eax,0xa7
  40511c:	jmp    DWORD PTR [eax]
  40511e:	out    0xc2,al
  405120:	jne    0x40515f
  405122:	mov    dh,0x51
  405124:	adc    DWORD PTR [edx+0x802ff],0x0
	...
  405136:	add    BYTE PTR [eax],al
  405138:	aas    
  405139:	out    dx,eax
  40513a:	xor    BYTE PTR [edi],al
  40513c:	(bad)  
  40513d:	out    dx,al
  40513e:	cli    
  40513f:	(bad)  
  405140:	clc    
  405141:	cmc    
  405142:	add    ecx,DWORD PTR [ebx+0x1cdf7a]
  405148:	(bad)  
  405149:	ins    BYTE PTR es:[edi],dx
  40514a:	jle    0x40514c
  40514c:	out    0x11,eax
  40514e:	test   al,0x50
  405150:	fsub   DWORD PTR [ebx+0x1856e7fc]
  405156:	add    eax,DWORD PTR [eax]
  405158:	ret    0x2a2e
  40515b:	add    dl,ah
  40515d:	loop   0x40518c
  40515f:	add    edi,esp
  405161:	(bad)  
  405162:	xchg   edx,eax
  405163:	loopne 0x405165
  405165:	dec    ebp
  405166:	xor    al,0xf8
  405168:	mov    ch,0xb5
  40516a:	add    eax,DWORD PTR [edi+ecx*1]
  40516d:	push   ebx
  40516e:	add    edx,DWORD PTR fs:[edi-0x6fac7a20]
  405175:	pop    edx
  405176:	in     eax,dx
  405177:	test   al,0xed
  405179:	mov    bh,0x11
  40517b:	(bad)  
  40517d:	mov    bh,0x6a
  40517f:	es dec edi
  405181:	enter  0x4dc,0xfc
  405185:	in     al,dx
  405186:	in     al,0x7e
  405188:	test   BYTE PTR [ebx+0x70],bl
  40518b:	jl     0x405209
  40518d:	jl     0x4051af
  40518f:	lds    ecx,FWORD PTR [ebx-0x38]
  405192:	pushf  
  405193:	jl     0x4051f8
  405195:	inc    esp
  405196:	and    eax,0x3694f0ab
  40519b:	sbb    eax,0x0
	...
  4051a8:	add    BYTE PTR [eax],al
  4051aa:	add    BYTE PTR [edi],bh
  4051ac:	jns    0x4051dc
  4051ae:	cs inc edi
  4051b0:	lock lods eax,DWORD PTR ds:[esi]
  4051b2:	retf   
  4051b3:	xor    al,ah
  4051b5:	and    eax,0xe9c92b3e
  4051ba:	add    edi,DWORD PTR [edi]
  4051bc:	push   ebx
  4051bd:	mov    ah,0xfb
  4051bf:	lds    edi,FWORD PTR [edx+0x79173e74]
  4051c5:	xchg   ebx,eax
  4051c6:	(bad)  
  4051c7:	mov    ebx,0x52f585
  4051cc:	push   esi
  4051cd:	loope  0x405177
  4051cf:	(bad)  
  4051d0:	int3   
  4051d1:	test   DWORD PTR cs:[edx-0x24],esi
  4051d5:	jmp    0x4051d0
  4051d7:	cmp    edx,edx
  4051d9:	pop    ebp
  4051da:	cli    
  4051db:	mov    ebp,0x5204d15d
  4051e0:	adc    edx,edi
  4051e2:	ret    
  4051e3:	in     al,0xc5
  4051e5:	jb     0x4051a6
  4051e7:	mov    esp,0x79ea0008
  4051ec:	adc    edx,eax
  4051ee:	in     eax,0x3c
  4051f0:	jne    0x40517d
  4051f2:	xchg   ebp,eax
  4051f3:	mov    esp,0xf83af404
  4051f8:	outs   dx,DWORD PTR ds:[esi]
  4051f9:	cwde   
  4051fa:	sar    DWORD PTR [eax+ecx*8],cl
  4051fd:	call   0xff1fd27f
  405202:	jo     0x405202
  405204:	fisttp DWORD PTR [esp+0x45e878cf]
  40520b:	jo     0x4051ec
  40520d:	(bad)  
  40520e:	mov    edx,0x0
	...
  40521b:	add    BYTE PTR [eax],al
  40521d:	add    BYTE PTR [ebp+0x76d31e72],al
  405223:	add    BYTE PTR [bp+di+0x43],ah
  405227:	enter  0xdcff,0x90
  40522b:	fbstp  TBYTE PTR [ecx+eiz*8-0x4c]
  40522f:	inc    esp
  405230:	inc    BYTE PTR [esi-0x68]
  405233:	inc    ebp
  405234:	shr    dh,0xc8
  405237:	xchg   edi,eax
  405238:	add    ecx,ebp
  40523a:	cmp    al,0xdf
  40523c:	je     0x405273
  40523e:	fcmovne st,st(1)
  405240:	fsub   DWORD PTR [esi]
  405242:	fcomp  DWORD PTR [eax+eax*1+0x76c84323]
  405249:	in     al,dx
  40524a:	ret    
  40524b:	mov    ebx,0xdf3ce901
  405250:	je     0x40524f
  405252:	mov    ah,0x81
  405254:	(bad)  
  405255:	(bad)  
  405256:	loope  0x40529c
  405258:	sar    BYTE PTR [ebp-0x40],0xde
  40525c:	je     0x405253
  40525e:	aam    0xce
  405260:	(bad)  
  405262:	cdq    
  405263:	push   edx
  405264:	push   ebp
  405265:	aad    0x65
  405267:	mov    edx,0x9444e96a
  40526c:	and    ecx,ebp
  40526e:	cmp    al,0xdf
  405270:	je     0x405272
  405272:	cli    
  405273:	and    eax,0x7889f475
  405278:	or     al,0xc7
  40527a:	adc    ebp,DWORD PTR [eax+eax*1]
  40527d:	add    BYTE PTR [esi+0xcc68ca],ah
	...
  40528f:	add    BYTE PTR [eax],al
  405291:	push   0x53ff0085
  405296:	xor    al,ch
  405298:	pop    ss
  405299:	fmulp  st(2),st
  40529b:	add    BYTE PTR [ebx-0x63],dl
  40529e:	or     dh,BYTE PTR [esi+esi*1+0xd]
  4052a2:	xor    ebp,DWORD PTR [eax-0x34]
  4052a5:	pop    eax
  4052a6:	test   DWORD PTR [eax],eax
  4052a8:	call   0x4070e5
  4052ad:	xor    dl,BYTE PTR gs:[edi+0x47]
  4052b1:	in     eax,dx
  4052b2:	add    eax,0xca6794b9
  4052b7:	add    BYTE PTR [eax-0x4751e7a5],dh
  4052bd:	shl    BYTE PTR [ebx+0x52d0000],cl
  4052c3:	mov    BYTE PTR [edi+0x9],0xcb
  4052c7:	push   edi
  4052c8:	push   ebx
  4052c9:	(bad)  
  4052ca:	adc    eax,edi
  4052cc:	add    BYTE PTR [esi],ah
  4052ce:	pop    ebp
  4052cf:	inc    ebp
  4052d0:	clc    
  4052d1:	stc    
  4052d2:	sbb    eax,DWORD PTR [edi-0x1]
  4052d5:	sbb    eax,DWORD PTR [edi-0x6c9597a5]
  4052db:	inc    ecx
  4052dc:	add    BYTE PTR [ecx-0x68],cl
  4052df:	cld    
  4052e0:	call   0x40712d
  4052e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052e6:	loop   0x4052a6
  4052e8:	je     0x4052bc
  4052ea:	(bad)  
  4052eb:	clc    
  4052ec:	push   0x41934a
  4052f1:	push   cs
  4052f2:	inc    ah
	...
  405304:	(bad)  
  405305:	enter  0x57f8,0x3f
  405309:	scas   al,BYTE PTR es:[edi]
  40530a:	jns    0x4052eb
  40530c:	xchg   esi,eax
  40530d:	push   ebx
  40530e:	adc    eax,DWORD PTR [eax]
  405310:	aas    
  405311:	pop    edi
  405312:	div    ecx
  405314:	cdq    
  405315:	inc    edi
  405316:	nop
  405317:	adc    DWORD PTR [edi],edi
  405319:	out    dx,eax
  40531a:	xlat   BYTE PTR ds:[ebx]
  40531b:	rol    BYTE PTR [ecx+0x800a5a6],0xa2
  405322:	pushf  
  405323:	mov    ds:0x8ba53e99,eax
  405328:	or     bl,bh
  40532a:	not    ecx
  40532c:	adc    esp,ebx
  40532e:	jns    0x405332
  405330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405331:	in     eax,dx
  405332:	push   edx
  405333:	call   0xffe590b1
  405338:	loopne 0x405366
  40533a:	cmp    eax,0x49ce4aff
  40533f:	(bad)  
  405340:	jmp    0xa57e:0x86ab9c7a
  405347:	and    edx,0x76
  40534a:	add    al,0x77
  40534c:	inc    eax
  40534d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534e:	aas    
  40534f:	clc    
  405350:	aas    
  405351:	out    dx,eax
  405352:	bound  eax,QWORD PTR [eax]
  405354:	dec    eax
  405355:	adc    al,0xab
  405357:	dec    edx
  405359:	call   0xfd9d:0x874775a5
  405360:	xor    BYTE PTR [esi-0x48cc8a5b],ah
  405366:	test   eax,0xd6
	...
  405377:	and    BYTE PTR [esi-0xe6d4007],dh
  40537d:	xchg   edi,eax
  40537e:	sbb    eax,DWORD PTR [edi+ebp*4+0x30]
  405382:	pop    ss
  405383:	mov    ah,0x33
  405385:	scas   eax,DWORD PTR es:[edi]
  405386:	mov    ebp,DWORD PTR ds:0xf80c2dd6
  40538c:	push   ebx
  40538d:	scas   eax,DWORD PTR es:[edi]
  40538e:	dec    DWORD PTR [ebp-0x80e238]
  405394:	pop    edi
  405395:	in     al,0x68
  405397:	ds enter 0x3e9,0xc4
  40539c:	jb     0x405373
  40539e:	js     0x4053cd
  4053a0:	fnstsw WORD PTR [ebx]
  4053a2:	mov    al,0xc8
  4053a4:	jns    0x405397
  4053a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053a7:	dec    edx
  4053a8:	fadd   st(0),st
  4053aa:	sbb    ebx,DWORD PTR [ecx+0x7c78addc]
  4053b0:	jl     0x4053f4
  4053b2:	mov    ebx,0x4ee9cb7d
  4053b7:	mov    ah,0xeb
  4053b9:	imul   edi,DWORD PTR [edi+0x3ea6659b],0x1de9c693
  4053c3:	add    BYTE PTR [edx+0x723f057f],0xed
  4053ca:	jbe    0x4053ce
  4053cc:	fcomp  QWORD PTR [eax]
  4053ce:	sbb    al,0xbf
  4053d0:	(bad)  
  4053d1:	jmp    0x5e1d2ad9
  4053d6:	add    edi,DWORD PTR [edi]
  4053d8:	fstp   st(3)
  4053da:	sti    
	...
  4053e7:	add    BYTE PTR [eax],al
  4053e9:	add    BYTE PTR [eax-0x7c],ah
  4053ec:	add    edi,DWORD PTR es:[edi]
  4053ef:	(bad)  
  4053f1:	dec    DWORD PTR [eax+0x73]
  4053f4:	jb     0x40538d
  4053f6:	mov    esp,0x8c4c8503
  4053fb:	add    esp,DWORD PTR [edi+edx*2+0x3e9c83f]
  405402:	ins    BYTE PTR es:[edi],dx
  405403:	call   DWORD PTR [eax-0x1637b0fd]
  405409:	fwait
  40540a:	imul   edi,edx,0x85c6a40d
  405410:	sub    DWORD PTR [ebx],ebx
  405412:	aas    
  405413:	mov    eax,0xaa1703e9
  405418:	add    BYTE PTR [edi],dl
  40541a:	mov    ds:0x64a488db,eax
  40541f:	jo     0x405421
  405421:	stc    
  405422:	cmp    al,0xc8
  405424:	call   0xff1c531e
  405429:	pusha  
  40542a:	xchg   BYTE PTR [ecx*4+0x3c22074c],bl
  405431:	jmp    0xa9741c72
  405436:	test   al,0x2e
  405438:	(bad)  
  405439:	sub    al,0x87
  40543b:	pushf  
  40543c:	add    cl,ch
  40543e:	cmp    al,0xdb
  405440:	je     0x4053eb
  405442:	int3   
  405443:	test   esp,edx
  405445:	sahf   
  405446:	inc    esi
  405447:	and    BYTE PTR [edi+0x4503b32c],cl
  40544d:	mov    cl,0x0
	...
  40545b:	add    BYTE PTR [eax],al
  40545d:	fmul   st(3),st
  40545f:	add    cl,ch
  405461:	jne    0x4053e8
  405463:	hlt    
  405464:	jle    0x405492
  405466:	enter  0x6400,0x6
  40546a:	add    al,0x50
  40546c:	add    DWORD PTR [ebx],edi
  40546e:	enter  0x6900,0x19
  405472:	enter  0xd4ff,0x34
  405476:	lock push 0x2f
  405479:	inc    ebx
  40547a:	enter  0x290b,0x37
  40547e:	ret    0xc483
  405481:	nop
  405482:	enter  0xe475,0x93
  405486:	(bad)  
  405488:	call   0x798557c9
  40548d:	fmul   st(2),st
  40548f:	add    cl,ch
  405491:	iret   
  405492:	test   BYTE PTR [eax-0x43ab2247],dh
  405498:	cmp    DWORD PTR [eax+ecx*8],0x84ae6900
  40549f:	les    eax,FWORD PTR [eax]
  4054a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054a2:	cs inc esi
  4054a4:	(bad)  
  4054a5:	push   ss
  4054a6:	(bad)  
  4054a7:	or     eax,eax
  4054a9:	jnp    0x40547b
  4054ab:	jmp    0x1073b88
  4054b0:	mov    ebx,DWORD PTR [ebx]
  4054b2:	jl     0x40547a
  4054b4:	add    dh,dl
  4054b6:	aaa    
  4054b7:	jge    0x40547d
  4054b9:	scas   eax,DWORD PTR es:[edi]
  4054ba:	cli    
  4054bb:	(bad)  
  4054bc:	jmp    esi
  4054be:	icebp  
  4054bf:	mov    esi,0xf3
	...
  4054d0:	lods   al,BYTE PTR ds:[esi]
  4054d1:	or     eax,0xc6c2c445
  4054d6:	add    BYTE PTR [eax],al
  4054d8:	icebp  
  4054d9:	mov    edi,0x345b8fb8
  4054de:	mov    DWORD PTR [ebp+0x7e],0x96000f25
  4054e5:	or     eax,0xb5b1f445
  4054ea:	add    BYTE PTR [eax],al
  4054ec:	repz pop esp
  4054ef:	push   eax
  4054f0:	sub    al,0xc4
  4054f2:	push   0x0
  4054f4:	add    eax,eax
  4054f6:	mov    esp,0xfece8
  4054fb:	add    BYTE PTR [ebp+0x6],bl
  4054fe:	je     0x405506
  405500:	aad    0xa7
  405502:	aam    0x0
  405504:	mov    ecx,edi
  405506:	jmp    0x106bb97
  40550b:	jmp    FWORD PTR [ebx-0x2a]
  40550e:	std    
  40550f:	jne    0x405527
  405511:	es jne 0x4054cc
  405514:	outs   dx,BYTE PTR ds:[esi]
  405515:	push   ds
  405516:	dec    ebp
  405517:	inc    ecx
  405518:	es daa 
  40551a:	jne    0x4054d8
  40551c:	jle    0x405556
  40551e:	lds    eax,FWORD PTR [eax]
  405520:	push   ss
  405521:	inc    ebx
  405522:	les    edx,FWORD PTR [ecx+edx*1]
  405525:	jg     0x40556c
  405527:	fdivr  QWORD PTR [edi]
  405529:	pop    ds
  40552a:	sub    eax,0xc3351000
  40552f:	call   0xffe31b00
	...
  405540:	add    BYTE PTR [eax],al
  405542:	add    BYTE PTR [edi+ebp*4],dh
  405545:	sbb    BYTE PTR [edx],al
  405547:	in     al,0x31
  405549:	mov    WORD PTR [ebp-0x55],es
  40554c:	jmp    0xffa2:0x50d7b416
  405553:	loopne 0x40554f
  405555:	push   ss
  405556:	mov    esp,0xc6d1e7
  40555b:	aas    
  40555c:	lahf   
  40555d:	mov    eax,ds:0x17028b75
  405562:	mov    ah,0xd7
  405564:	std    
  405565:	fwait
  405566:	(bad)  
  405567:	mov    eax,0x3d75c2e6
  40556c:	push   es
  40556d:	rol    DWORD PTR [edx+0x7402df2a],cl
  405573:	dec    ebx
  405574:	cmp    dl,BYTE PTR [edi]
  405576:	adc    BYTE PTR [eax+0xaff10bc],bl
  40557c:	jae    0x40552a
  40557e:	clc    
  40557f:	test   DWORD PTR [edx-0x5f],eax
  405582:	or     edi,DWORD PTR [edi-0x2c]
  405585:	add    al,0xeb
  405587:	push   eax
  405588:	mov    sp,0x940b
  40558c:	shl    ecx,cl
  40558e:	mov    WORD PTR [edx],es
  405590:	xor    esi,DWORD PTR [edi+edi*8]
  405593:	jmp    0xb387:0x93759fd2
  40559a:	cld    
  40559b:	push   eax
  40559c:	mov    cl,BYTE PTR [ebp+0x571c48d8]
  4055a2:	call   0x44fa3f
	...
  4055b3:	add    BYTE PTR [eax],al
  4055b5:	add    BYTE PTR [eax],bh
  4055b7:	sbb    al,0xc3
  4055b9:	call   0xffe22097
  4055be:	sub    al,cl
  4055c0:	pushf  
  4055c1:	pop    edi
  4055c2:	pop    ss
  4055c3:	cmp    bh,BYTE PTR ds:0x9bd918a1
  4055c9:	pop    ebx
  4055ca:	daa    
  4055cb:	xor    ch,BYTE PTR ds:0x844508a1
  4055d1:	outs   dx,DWORD PTR ds:[esi]
  4055d2:	aas    
  4055d3:	push   esp
  4055d4:	icebp  
  4055d5:	mov    al,ds:0x8c012c72
  4055da:	adc    ebx,ecx
  4055dc:	in     eax,dx
  4055dd:	mov    esp,?
  4055df:	jl     0x405627
  4055e1:	retf   
  4055e2:	std    
  4055e3:	mov    bh,0xe9
  4055e5:	ss (bad) 
  4055e7:	jmp    0x405652
  4055e9:	(bad)  
  4055ea:	xlat   BYTE PTR ds:[ebx]
  4055eb:	je     0x4055ef
  4055ed:	mov    ebp,0x3f55abc
  4055f2:	dec    ebx
  4055f3:	mov    ch,BYTE PTR [edx+0x1e]
  4055f6:	dec    edi
  4055f7:	enter  0x4c3d,0xc2
  4055fb:	sub    BYTE PTR [ebp-0xaad57cd],0xab
  405602:	aad    0x3
  405604:	jmp    0x1148180c
  405609:	aam    0x91
  40560b:	push   edx
  40560c:	(bad)  [ebx-0x5f7a0c33]
  405612:	mov    dh,0x82
  405614:	and    DWORD PTR [eax+0x1480dbf2],0x0
	...
  405626:	add    BYTE PTR [eax],al
  405628:	add    BYTE PTR [edi+eax*8-0x17],bh
  40562c:	or     al,0x7f
  40562e:	push   ebx
  40562f:	add    BYTE PTR [ecx+0x165eb7ea],ah
  405635:	push   edi
  405636:	ja     0x40568e
  405638:	push   ss
  405639:	inc    edi
  40563a:	lock jmp 0x72189ee1
  405640:	mov    ebx,0xab3d5240
  405645:	fwait
  405646:	or     eax,DWORD PTR [eax]
  405648:	jmp    0xddb52d89
  40564d:	aam    0x38
  40564f:	(bad)  
  405650:	fild   WORD PTR es:[ebx-0x3d]
  405654:	ret    0xb05
  405657:	or     al,0xe9
  405659:	dec    ecx
  40565a:	inc    ebx
  40565b:	in     al,dx
  40565c:	push   0x6fe5900
  405661:	fild   WORD PTR [ebp-0x7b]
  405664:	jnp    0x405604
  405666:	xlat   BYTE PTR ds:[ebx]
  405667:	(bad)  
  405668:	cdq    
  405669:	and    al,0xc9
  40566b:	add    ecx,ebp
  40566d:	cmp    al,0xe0
  40566f:	sbb    BYTE PTR [ebx+edi*1+0x16aac9c8],ch
  405676:	inc    ebx
  405677:	in     al,dx
  405678:	push   0x1e
  40567a:	rol    BYTE PTR [eax],0x55
  40567d:	enter  0x7d4a,0xd9
  405681:	cmp    al,0x5c
  405683:	sbb    DWORD PTR [esi+0x3cffbc56],edi
  405689:	inc    ebx
  40568a:	loopne 0x405622
  40568c:	xchg   ecx,eax
	...
  405699:	add    BYTE PTR [eax],al
  40569b:	add    al,cl
  40569d:	xlat   BYTE PTR ds:[ebx]
  40569e:	(bad)  
  40569f:	sbb    al,0xab
  4056a1:	(bad)  
  4056a2:	je     0x405691
  4056a4:	mov    ecx,0xf081085d
  4056a9:	out    dx,eax
  4056aa:	dec    BYTE PTR [esi-0x16eff586]
  4056b0:	inc    edi
  4056b1:	inc    ebx
  4056b2:	in     al,dx
  4056b3:	push   0x1e
  4056b5:	rol    BYTE PTR [eax],0xfd
  4056b8:	jo     0x405704
  4056ba:	jge    0x405699
  4056bc:	cmp    al,0x5c
  4056be:	push   ss
  4056bf:	inc    si
  4056c1:	mov    eax,0xe044d4ff
  4056c6:	push   0x31
  4056c8:	mov    al,0xd7
  4056ca:	(bad)  
  4056cb:	aam    0x38
  4056cd:	xlat   BYTE PTR ds:[ebx]
  4056ce:	je     0x4056d0
  4056d0:	dec    esi
  4056d1:	and    eax,edx
  4056d3:	fdivr  DWORD PTR [ecx+0x37]
  4056d6:	leave  
  4056d7:	ret    0xcb1a
  4056da:	push   ebp
  4056db:	mov    ebp,DWORD PTR [edx+0x4b]
  4056de:	(bad)  
  4056df:	lock pop ecx
  4056e1:	mov    cl,0xc
  4056e3:	call   0x3f8323
  4056e8:	lahf   
  4056e9:	or     DWORD PTR [ebx+eax*4],0x7400c6bb
  4056f0:	mov    al,ds:0x4e0c7535
  4056f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f6:	loopne 0x4056f7
  4056f8:	jmp    0x94b517be
  4056fd:	aaa    
  4056fe:	inc    ebp
  4056ff:	lock add BYTE PTR [eax],al
	...
  40570e:	add    BYTE PTR [esi],ah
  405710:	aaa    
  405711:	jne    0x40571f
  405713:	out    dx,al
  405714:	jmp    0x74c0:0xc1e9ffdf
  40571b:	and    al,0x4d
  40571d:	jge    0x40571b
  40571f:	(bad)  
  405720:	retf   0x10
  405723:	jne    0x405711
  405725:	std    
  405726:	jne    0x405712
  405728:	xor    eax,0x797ef875
  40572d:	in     al,0xff
  40572f:	fld    st(1)
  405731:	shl    BYTE PTR [ebp-0x69],0x35
  405735:	jne    0x405747
  405737:	test   eax,0x33fffcaf
  40573c:	xor    al,0xff
  40573e:	jne    0x4056ce
  405740:	and    cl,BYTE PTR [edi-0x1]
  405743:	stc    
  405744:	xor    eax,0x9af6458d
  405749:	call   0xff760ecc
  40574e:	inc    DWORD PTR [ebx-0x2c1173a]
  405754:	xor    eax,0xa33fc9ff
  405759:	(bad)  
  40575b:	repnz imul ebp,DWORD PTR [edi-0x616f847d],0x8f774b75
  405766:	loopne 0x405798
  405768:	lahf   
  405769:	mov    WORD PTR [ebp+0x3b],es
  40576c:	bound  esp,QWORD PTR [eax]
  40576e:	or     al,0x3f
  405770:	xor    eax,DWORD PTR [esi-0x1]
	...
  40577f:	add    BYTE PTR [eax],al
  405781:	add    BYTE PTR [edx-0xf07551d],dl
  405787:	mov    esi,0x3bff0b9e
  40578c:	ror    BYTE PTR [edx+edi*2+0x72ff31cf],cl
  405793:	jecxz  0x40573f
  405795:	scas   eax,DWORD PTR es:[edi]
  405796:	(bad)  
  405798:	pushf  
  405799:	or     edi,edi
  40579b:	pop    ebx
  40579c:	loop   0x40571e
  40579e:	(bad)  
  40579f:	jmp    0x4057a4
  4057a1:	add    BYTE PTR [edi],ch
  4057a3:	fisttp WORD PTR [edi]
  4057a5:	adc    eax,edx
  4057a7:	je     0x40579d
  4057a9:	(bad)  
  4057aa:	push   edx
  4057ab:	add    ebx,DWORD PTR [ebp+0x170ec775]
  4057b1:	or     BYTE PTR [edi-0x4f0061fc],ah
  4057b7:	ins    BYTE PTR es:[edi],dx
  4057b8:	inc    edi
  4057b9:	lock sysret 
  4057bc:	add    cl,ah
  4057be:	mov    al,ds:0x4b759d2e
  4057c3:	aaa    
  4057c4:	rcr    dl,0x90
  4057c7:	ds retf 
  4057c9:	ret    0xdf3b
  4057cc:	xor    eax,0xc862938b
  4057d1:	lock or al,0xfa
  4057d4:	mov    bh,0xff
  4057d6:	jmp    0x9d66:0x5f27aae6
  4057dd:	mov    edx,edi
  4057df:	(bad)  
  4057e0:	icebp  
  4057e1:	sbb    dl,0xbf
  4057e4:	jmp    0x405800
	...
  4057f5:	stc    
  4057f6:	aam    0xdb
  4057f8:	or     edx,DWORD PTR [edi+0x39]
  4057fb:	cs popf 
  4057fd:	inc    eax
  4057fe:	shr    DWORD PTR [ecx],0x18
  405801:	ins    DWORD PTR es:[edi],dx
  405802:	inc    ebx
  405803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405804:	xchg   ebx,eax
  405805:	(bad)  
  405806:	aad    0xbb
  405808:	or     edx,DWORD PTR [edi]
  40580a:	or     BYTE PTR [ecx-0x63],0x20
  40580e:	shr    DWORD PTR [ecx],0x18
  405811:	pop    ebp
  405812:	inc    edi
  405813:	pushf  
  405814:	lahf   
  405815:	aas    
  405816:	enter  0x3f9,0x8c
  40581a:	mov    eax,0xd503170e
  40581f:	jnp    0x4057bc
  405821:	out    0xf2,eax
  405823:	or     DWORD PTR [ebp+0x1829c0f0],ebx
  405829:	mov    DWORD PTR ds:[edi+eax*2-0x11],ebx
  40582e:	ja     0x405801
  405830:	pop    ebx
  405831:	(bad)  
  405833:	fstp   QWORD PTR [edx+ecx*2-0x1ae43e40]
  40583a:	aam    0xcd
  40583c:	mov    ah,bh
  40583e:	jo     0x4057f0
  405840:	rol    DWORD PTR [ebx-0x38],0x14
  405844:	mov    DWORD PTR [ebx-0x56a852ba],esp
  40584a:	aam    0xad
  40584c:	les    edi,FWORD PTR [edx-0x676358f1]
  405852:	(bad)  
  405853:	jmp    0x2c81975b
  405858:	adc    BYTE PTR [eax],al
	...
  405866:	add    BYTE PTR [eax],al
  405868:	xor    al,0x8
  40586a:	adc    eax,0xe98fbf07
  40586f:	push   ss
  405870:	inc    edx
  405871:	fild   WORD PTR [eax]
  405873:	add    edi,DWORD PTR [edi]
  405875:	enter  0x7600,0x51
  405879:	(bad)  
  40587a:	call   0xff14f1d3
  40587f:	bnd jl 0x4058dc
  405882:	psrlw  mm4,QWORD PTR [edi-0x5416be7b]
  405889:	pop    edx
  40588a:	or     al,0x41
  40588c:	(bad)  
  40588d:	repnz inc BYTE PTR [esi-0x19]
  405891:	lds    ebp,FWORD PTR [eax+0x39]
  405894:	or     BYTE PTR [ecx-0x3baeca00],0xe8
  40589b:	and    eax,0x70fed3e1
  4058a0:	rcl    DWORD PTR [eax],0xfe
  4058a3:	push   ds
  4058a4:	mov    bl,0x60
  4058a6:	ds call 0x64ce20e8
  4058ac:	(bad)  
  4058ad:	sar    dh,cl
  4058af:	push   es
  4058b0:	sub    al,0xe0
  4058b2:	cmp    esp,DWORD PTR [ebx]
  4058b4:	rcl    ebx,cl
  4058b6:	mov    WORD PTR [esi+edi*8-0x2e],gs
  4058ba:	(bad)  
  4058bb:	out    dx,al
  4058bc:	sub    eax,0xb5a1b4d3
  4058c1:	sar    esi,cl
  4058c3:	shl    DWORD PTR [esi+0x9],1
  4058c6:	add    cl,ch
  4058c8:	mov    ebx,0xcfbc4d
	...
  4058d9:	add    BYTE PTR [eax],al
  4058db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058dc:	sar    DWORD PTR [edi],cl
  4058de:	idiv   BYTE PTR [eax]
  4058e0:	scas   al,BYTE PTR es:[edi]
  4058e1:	add    ecx,ebp
  4058e3:	cmp    al,0x45
  4058e5:	xchg   ebp,eax
  4058e6:	stos   DWORD PTR es:[edi],eax
  4058e7:	(bad)
  4058ea:	mov    dh,0x39
  4058ec:	mov    eax,0xc33ce900
  4058f1:	test   BYTE PTR [edx+0x3b],ch
  4058f4:	enter  0x6400,0x1
  4058f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058f9:	push   eax
  4058fa:	add    ebp,ebx
  4058fc:	add    BYTE PTR [ecx+0x0],0x66
  405900:	pop    ds
  405901:	xchg   esi,eax
  405902:	shl    DWORD PTR [esi-0x39],0xb
  405906:	shr    BYTE PTR [ebx-0x38],0xe9
  40590a:	int3   
  40590b:	push   esi
  40590c:	mov    DWORD PTR [eax],0xfe09db8d
  405912:	push   ecx
  405914:	inc    eax
  405915:	inc    edx
  405916:	sub    al,0x86
  405918:	lahf   
  405919:	call   0xe907f06c
  40591e:	jns    0x405987
  405920:	int3   
  405921:	add    BYTE PTR [ebx],cl
  405923:	mov    cx,0xe905
  405927:	ror    ebx,0x0
  40592a:	add    BYTE PTR [ecx-0x47],dl
  40592d:	or     al,0xe8
  40592f:	aaa    
  405930:	sub    bh,bh
  405932:	dec    DWORD PTR ds:0xbe0f7507
  405938:	mov    DWORD PTR [eax+0x41],ecx
  40593b:	push   ss
  40593c:	cs jne 0x40594b
	...
  40594b:	add    BYTE PTR [eax],al
  40594d:	add    BYTE PTR [esi-0x21],cl
  405950:	(bad)  
  405952:	icebp  
  405953:	and    DWORD PTR [edx],ecx
  405955:	push   0xffffffd6
  405957:	sub    eax,0xeb3e0c75
  40595c:	(bad)  
  40595e:	loope  0x40599f
  405960:	xchg   ebp,eax
  405961:	ret    0x2df0
  405964:	dec    DWORD PTR [ebp+0x5050e004]
  40596a:	(bad)  
  40596b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40596c:	(bad)  
  40596e:	adc    DWORD PTR [esi+0x2d9e75ff],0xb7f11475
  405978:	adc    BYTE PTR [eax-0x2f],dl
  40597b:	mov    bh,0x8
  40597d:	call   0x3f8a38
  405982:	scas   al,BYTE PTR es:[edi]
  405983:	call   0x60ae:0x3a3fffd9
  40598a:	mov    dl,0x9e
  40598c:	call   0x99d51c19
  405991:	push   DWORD PTR [eax+0x5d]
  405994:	sbb    BYTE PTR [eax],dl
  405996:	aas    
  405997:	aam    0x4
  405999:	jmp    0x4059e8
  40599b:	bound  edx,QWORD PTR [eax]
  40599d:	adc    BYTE PTR [eax+0x33],bl
  4059a0:	dec    edi
  4059a1:	(bad)  
  4059a2:	push   eax
  4059a3:	jno    0x405950
  4059a5:	clc    
  4059a6:	jle    0x405988
  4059a8:	add    cl,BYTE PTR [ebx]
  4059aa:	jg     0x4059a8
  4059ac:	xlat   BYTE PTR ds:[ebx]
  4059ad:	addr16 jl 0x4059c7
  4059b0:	inc    esp
	...
  4059c1:	xor    BYTE PTR ds:0xbbf6e807,bl
  4059c7:	call   0x18fe:0x4f5d20ff
  4059ce:	stos   DWORD PTR es:[edi],eax
  4059cf:	xor    ebp,eax
  4059d1:	cs xchg esp,eax
  4059d3:	call   0x3f18:0x185e6fff
  4059da:	cmp    eax,DWORD PTR [edi]
  4059dc:	push   DWORD PTR [edx-0xd]
  4059df:	xor    bh,bh
  4059e1:	push   0xffffffd7
  4059e3:	cdq    
  4059e4:	push   ebp
  4059e5:	inc    edi
  4059e6:	mov    BYTE PTR [edi],0xff
  4059e9:	push   0xfffffffb
  4059eb:	xor    bh,bh
  4059ed:	push   edx
  4059ee:	xlat   BYTE PTR ds:[ebx]
  4059ef:	stos   BYTE PTR es:[edi],al
  4059f0:	push   esp
  4059f1:	shl    dl,cl
  4059f3:	cwde   
  4059f4:	call   0xffd971be
  4059f9:	mov    dl,0x6c
  4059fb:	(bad)  
  4059fc:	(bad)  
  4059fd:	mov    eax,0xeaff340a
  405a02:	push   ebx
  405a03:	call   0x3fc0:0x4f07a8ff
  405a0a:	fistp  QWORD PTR [ebp-0x40]
  405a0d:	dec    eax
  405a0e:	enter  0x936c,0x91
  405a12:	rcr    DWORD PTR [ebp-0x68eb2d67],1
  405a18:	cdq    
  405a19:	and    al,0x40
  405a1c:	les    edi,FWORD PTR [edi]
  405a1e:	enter  0x4f86,0xb7
  405a22:	sar    BYTE PTR [ebp-0x67],cl
	...
  405a31:	add    BYTE PTR [eax],al
  405a33:	add    BYTE PTR [edi-0x2],dl
  405a36:	nop
  405a37:	cdq    
  405a38:	pusha  
  405a39:	jmp    FWORD PTR [edx+0x727c58f0]
  405a3f:	test   al,0xe5
  405a41:	(bad)  
  405a42:	pop    esi
  405a43:	rdpmc  
  405a45:	rcr    ebx,1
  405a47:	repz inc ecx
  405a49:	pop    ebx
  405a4a:	fstp   QWORD PTR [eax-0x26ae3f4e]
  405a50:	xor    dl,cl
  405a52:	cmp    eax,0xe9b7fdcb
  405a57:	cs mov ah,0xe3
  405a5a:	sub    eax,0x1fe04b0f
  405a5f:	mov    eax,0xc3f1d110
  405a64:	xchg   ebx,eax
  405a65:	mov    dl,0x16
  405a67:	comiss xmm7,DWORD PTR [eax+0x1]
  405a6b:	sbb    DWORD PTR [ebx],0xf03405d1
  405a71:	pop    edx
  405a72:	loope  0x405a0c
  405a74:	jb     0x405a32
  405a76:	cdq    
  405a77:	cwde   
  405a78:	push   0xffffffc0
  405a7a:	add    DWORD PTR [edx-0x28],ebx
  405a7d:	shl    ch,1
  405a7f:	stos   DWORD PTR es:[edi],eax
  405a80:	push   eax
  405a81:	lock fstp QWORD PTR [eax+0x3fd05f6]
  405a88:	push   0x3d
  405a8a:	mov    ebp,0xc6bc3298
  405a8f:	push   cs
  405a90:	dec    edi
  405a91:	shl    DWORD PTR [ebx],1
  405a93:	or     BYTE PTR ds:0xb600ae,dl
	...
  405aa5:	add    BYTE PTR [eax],al
  405aa7:	xor    eax,eax
  405aa9:	call   0xff11121e
  405aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aaf:	inc    ecx
  405ab0:	mov    esp,0xd19314ff
  405ab5:	je     0x405a9c
  405ab7:	push   edx
  405ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab9:	call   DWORD PTR [ebx+ecx*2]
  405abc:	loopne 0x405a63
  405abe:	xchg   bh,dl
  405ac0:	sar    dh,1
  405ac2:	hlt    
  405ac3:	pop    eax
  405ac4:	shl    DWORD PTR [ecx+ebx*8-0x39],1
  405ac8:	pop    edx
  405ac9:	or     al,0x3
  405acb:	push   edi
  405acc:	shl    DWORD PTR [ecx+esi*8-0x5c],1
  405ad0:	xor    al,0xff
  405ad2:	pop    esi
  405ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad4:	inc    cl
  405ad6:	stc    
  405ad7:	cmp    al,0x7b
  405ad9:	mov    edi,DWORD PTR ds:0x9af004c3
  405adf:	outs   dx,BYTE PTR ds:[esi]
  405ae0:	ja     0x405b0d
  405ae2:	and    bh,BYTE PTR [ebx+0xc360c85]
  405ae8:	aas    
  405ae9:	inc    ebp
  405aea:	xor    DWORD PTR [edi+0x51760855],esi
  405af0:	int3   
  405af1:	(bad)  
  405af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405af3:	mov    eax,0x3ce900c8
  405af8:	dec    ebx
  405af9:	cmp    eax,0x898ba8
  405afe:	jmp    0x7cc3c743
  405b03:	xor    al,0xc8
  405b05:	je     0x405aa6
  405b07:	mov    ecx,0x99f085
	...
  405b18:	add    BYTE PTR [eax],al
  405b1a:	sub    cl,cl
  405b1c:	push   0xffffffe9
  405b1e:	es enter 0x5c83,0xd3
  405b23:	iret   
  405b24:	jb     0x405b12
  405b26:	test   eax,0x3dc21055
  405b2b:	bound  eax,QWORD PTR [eax]
  405b2d:	add    BYTE PTR [esp+eax*8],cl
  405b30:	lea    eax,[ebp+0x7e]
  405b33:	xchg   esp,eax
  405b34:	call   DWORD PTR ds:0x418357
  405b3a:	popf   
  405b3b:	or     esi,DWORD PTR [edi+ebp*1+0x25]
  405b3f:	mov    cl,0xf4
  405b41:	add    BYTE PTR [edx],dh
  405b43:	fisttp QWORD PTR [ecx+0x4d429a45]
  405b49:	lock (bad) 
  405b4b:	ret    
  405b4c:	ja     0x405b65
  405b4e:	and    eax,0xf2758b30
  405b53:	inc    edx
  405b54:	jge    0x405b5e
  405b56:	fld    QWORD PTR [eax+0x3a64e3f0]
  405b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b5d:	mov    esp,DWORD PTR [ebx-0x198a0039]
  405b63:	inc    esi
  405b64:	add    bh,bh
  405b66:	arpl   WORD PTR [edi],di
  405b68:	call   0x104245a
  405b6d:	mov    esp,DWORD PTR [ebp-0x69]
  405b70:	pop    esi
  405b71:	pop    ebx
  405b72:	outs   dx,DWORD PTR ds:[esi]
  405b73:	or     cl,BYTE PTR [eax+eax*1]
  405b76:	ret    
  405b77:	inc    ecx
  405b78:	in     al,dx
  405b79:	and    DWORD PTR [edx+0x30],0x53
  405b7d:	push   esi
	...
  405b8a:	add    BYTE PTR [eax],al
  405b8c:	add    cl,dl
  405b8e:	mov    ds:0xcad74f40,al
  405b93:	call   0x104c50b
  405b98:	mov    ebp,DWORD PTR [esi]
  405b9a:	cmovne edi,esp
  405b9d:	out    0xca,al
  405b9f:	add    BYTE PTR [eax],al
  405ba1:	in     eax,dx
  405ba2:	or     dh,BYTE PTR [esi+edi*1-0x42]
  405ba6:	out    0x4d,al
  405ba8:	inc    ecx
  405ba9:	out    0x99,al
  405bab:	call   0x10af4ab
  405bb0:	or     edx,DWORD PTR [esi+0x3f8b2fbe]
  405bb6:	icebp  
  405bb7:	sub    cl,BYTE PTR [ebp+0x8]
  405bba:	mov    al,ds:0xfaa75304
  405bbf:	push   esp
  405bc0:	add    BYTE PTR [edi],bh
  405bc2:	fcmovb st,st(2)
  405bc4:	je     0x405c07
  405bc6:	push   0xffffff9b
  405bc8:	lea    eax,[edx]
  405bca:	sbb    eax,0x668ce833
  405bcf:	add    eax,DWORD PTR [eax]
  405bd1:	out    dx,eax
  405bd2:	sub    eax,0x350283ae
  405bd7:	add    esi,DWORD PTR [ebp+eax*2+0x79]
  405bdb:	add    al,0x0
  405bdd:	aas    
  405bde:	loope  0x405c15
  405be0:	pop    esi
  405be1:	add    al,0x18
  405be3:	ret    0x3fb8
  405be6:	loope  0x405bea
  405be8:	add    al,bh
  405bea:	mov    esi,0xb7cc93b
  405bef:	mov    ch,ah
	...
  405bfd:	add    BYTE PTR [eax],al
  405bff:	add    BYTE PTR [esp+eiz*4+0x74028393],bh
  405c06:	dec    ecx
  405c07:	inc    ecx
  405c08:	aas    
  405c09:	fisttp WORD PTR [esi]
  405c0b:	adc    bh,BYTE PTR [esp+eax*8-0x2081b4fb]
  405c12:	add    dh,BYTE PTR [esi+esi*1+0x62]
  405c16:	fadd   DWORD PTR [esp+eax*4]
  405c19:	and    BYTE PTR [ebx],al
  405c1b:	add    BYTE PTR [edx+0x3f015ade],cl
  405c21:	fild   WORD PTR [edx]
  405c23:	leave  
  405c24:	cld    
  405c25:	fs inc eax
  405c27:	cli    
  405c28:	add    eax,esp
  405c2a:	add    al,dh
  405c2c:	jg     0x405c0e
  405c2e:	add    al,dh
  405c30:	jg     0x405c13
  405c32:	add    al,dh
  405c34:	jg     0x405c18
  405c36:	add    al,dh
  405c38:	jg     0x405c1d
  405c3a:	add    al,dh
  405c3c:	jg     0x405c06
  405c3e:	in     al,dx
  405c3f:	(bad)  
  405c40:	mov    ebx,0x5534d583
  405c45:	enter  0x443,0x25
  405c49:	enter  0x443,0x25
  405c4d:	enter  0x453,0x17
  405c51:	test   al,0xeb
  405c53:	add    edi,DWORD PTR [edi]
  405c55:	bound  ecx,QWORD PTR [ecx]
  405c57:	sub    bh,BYTE PTR ds:0xef9a243b
  405c5d:	int3   
  405c5e:	sti    
  405c5f:	xchg   esi,eax
  405c60:	cmc    
  405c61:	xchg   cl,ch
  405c63:	or     BYTE PTR [eax],al
	...
  405c71:	add    BYTE PTR [eax],al
  405c73:	jg     0x405cc8
  405c75:	jmp    0x405c41
  405c77:	jl     0x405c7e
  405c79:	and    al,0x94
  405c7b:	aas    
  405c7c:	enter  0x3e9,0xba
  405c80:	cmp    DWORD PTR [ecx+0x34],0x60
  405c84:	push   ebx
  405c85:	jge    0x405cb1
  405c87:	aas    
  405c88:	int    0xd3
  405c8a:	add    al,BYTE PTR [edi+eax*4]
  405c8d:	jmp    0xe693db9a
  405c92:	mov    esp,0x3e8d7fa
  405c97:	aas    
  405c98:	enter  0xf4e,0x2b
  405c9c:	int    0xdb
  405c9e:	(bad)  
  405c9f:	jne    0x405c28
  405ca1:	jmp    0x2018d72e
  405ca6:	shl    DWORD PTR [edx+0x41],0x3d
  405caa:	cmp    ebx,0xb73f743f
  405cb0:	ja     0x405c43
  405cb2:	(bad)  
  405cb3:	jno    0x405c3c
  405cb5:	jmp    0xe248f65
  405cba:	xchg   ebp,eax
  405cbb:	pop    ecx
  405cbd:	sub    DWORD PTR [eax],edx
  405cbf:	inc    ecx
  405cc0:	dec    ecx
  405cc1:	jl     0x405c4e
  405cc3:	dec    ebx
  405cc4:	push   ebp
  405cc5:	add    BYTE PTR [edx-0x660f7d3f],al
  405ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ccc:	repz mov ebp,0xc0433ce9
  405cd2:	popa   
  405cd3:	or     DWORD PTR [ebp+0x2cb6],edi
	...
  405ce5:	add    dl,dl
  405ce7:	ja     0x405cf8
  405ce9:	xchg   edi,eax
  405cea:	jno    0x405cba
  405cec:	dec    edi
  405ced:	idiv   dl
  405cef:	cmp    ch,0x19
  405cf2:	cmp    dl,BYTE PTR [esi]
  405cf4:	inc    ebp
  405cf5:	mov    ch,0x4c
  405cf7:	mov    ebp,0x77b624b6
  405cfc:	maxps  xmm1,XMMWORD PTR [ecx-0x2e]
  405d00:	dec    edi
  405d01:	out    dx,al
  405d02:	repnz cmp cl,0x39
  405d06:	inc    edx
  405d07:	push   ss
  405d08:	inc    ebp
  405d09:	xchg   ecx,eax
  405d0a:	sub    al,0xbd
  405d0c:	mov    bh,0x2c
  405d0e:	mov    ecx,0x21360f77
  405d13:	aam    0x4f
  405d15:	jbe    0x405d60
  405d17:	fsub   DWORD PTR [edi+0x70]
  405d1a:	cli    
  405d1b:	xchg   BYTE PTR [eax],al
  405d1d:	je     0x405d28
  405d1f:	cmp    al,0x50
  405d21:	push   ecx
  405d22:	loope  0x405d31
  405d24:	add    cl,ch
  405d26:	mov    edi,0x715c3404
  405d2b:	cmp    al,0x50
  405d2d:	push   ecx
  405d2e:	pop    ecx
  405d2f:	or     eax,0x3d6ce900
  405d34:	inc    ebp
  405d35:	gs dec esp
  405d37:	pusha  
  405d38:	hlt    
  405d39:	lahf   
  405d3a:	jge    0x405d04
  405d3c:	call   0xff0c3b8d
  405d41:	adc    DWORD PTR [eax],ecx
  405d43:	idiv   dh
  405d45:	push   ss
  405d46:	add    eax,0x625508
	...
  405d57:	add    BYTE PTR [eax],al
  405d59:	cwde   
  405d5a:	dec    ecx
  405d5b:	les    eax,FWORD PTR [eax]
  405d5d:	adc    dh,BYTE PTR ds:0x9cc5ffff
  405d63:	push   0x0
  405d65:	mov    esp,0xde75ffc7
  405d6a:	pop    ds
  405d6b:	cmp    edx,ebx
  405d6d:	loope  0x405da6
  405d6f:	mov    DWORD PTR [ebp-0x1e],eax
  405d72:	lods   al,BYTE PTR ds:[esi]
  405d73:	add    DWORD PTR [eax],eax
  405d75:	xor    DWORD PTR [esi-0x1],0xa42f9e75
  405d7c:	rol    BYTE PTR [ecx-0x696397c9],cl
  405d82:	mov    DWORD PTR [eax],0xffa42b8d
  405d88:	jmp    ecx
  405d8a:	xchg   esp,eax
  405d8b:	call   0xff7825a0
  405d90:	(bad)  
  405d91:	sbb    esp,DWORD PTR [edi+edi*8+0x58d1ff]
  405d98:	add    BYTE PTR [esi+0x48],ah
  405d9b:	test   DWORD PTR [eax-0x3f],esp
  405d9e:	aaa    
  405d9f:	call   DWORD PTR [eax-0x32]
  405da2:	imul   edi,DWORD PTR [ebp-0x38159a00],0x2b
  405da9:	mov    ah,0x49
  405dab:	mov    ebp,0xff36e174
  405db0:	jmp    0x405df7
  405db2:	inc    edi
  405db3:	aas    
  405db4:	add    BYTE PTR [ebx],bl
  405db6:	sar    BYTE PTR [edx+0xc72601],0xb
	...
  405dc9:	add    BYTE PTR [eax],al
  405dcb:	add    BYTE PTR [eax+esi*4+0x3],al
  405dcf:	(bad)  
  405dd0:	sbb    edi,eax
  405dd2:	inc    edi
  405dd3:	inc    ecx
  405dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dd5:	cmp    eax,0xc7260080
  405dda:	jb     0x405dc1
  405ddc:	or     eax,0xae167407
  405de1:	pop    edx
  405de2:	add    BYTE PTR [eax],al
  405de4:	aas    
  405de5:	loope  0x405e66
  405de7:	test   DWORD PTR [edi-0x46],ebx
  405dea:	xchg   ebx,eax
  405deb:	dec    DWORD PTR [edi-0x28f7e63e]
  405df1:	push   esp
  405df2:	mov    ch,0xff
  405df4:	fadd   st,st(5)
  405df6:	add    BYTE PTR [edx+0x3f],ch
  405df9:	inc    edi
  405dfa:	add    edi,edi
  405dfc:	push   edx
  405dfd:	fstp   DWORD PTR [edx-0x6e16129a]
  405e03:	call   0xffd25192
  405e08:	psubd  mm2,QWORD PTR [edi]
  405e0b:	or     BYTE PTR [edi-0x5f004942],dl
  405e11:	js     0x405e17
  405e13:	add    al,0x3f
  405e15:	loope  0x405db1
  405e17:	jle    0x405e83
  405e19:	sbb    DWORD PTR [edx-0x6c7b3d77],edx
  405e1f:	inc    DWORD PTR [eax+0x3f0393b8]
  405e25:	loope  0x405db8
  405e27:	mov    ch,0x13
  405e29:	cmp    dl,BYTE PTR [edx-0xd212801]
  405e2f:	inc    DWORD PTR [eax]
	...
  405e3d:	add    BYTE PTR [eax],al
  405e3f:	pusha  
  405e40:	mov    eax,0xe13f0404
  405e45:	call   0x4850:0x2e0922c
  405e4c:	sub    ebp,DWORD PTR [edi]
  405e4e:	inc    DWORD PTR [eax+0x69]
  405e51:	xchg   edx,eax
  405e52:	jne    0x405e9b
  405e54:	xchg   edx,esi
  405e56:	shl    DWORD PTR [eax],1
  405e58:	jnp    0x405e75
  405e5a:	(bad)  
  405e5b:	cmp    al,0xdf
  405e5d:	add    bh,bh
  405e5f:	jmp    0x408:0x18ff922b
  405e66:	adc    BYTE PTR [edi],bh
  405e68:	fistp  WORD PTR [edx]
  405e6a:	add    BYTE PTR [ebx-0x38],al
  405e6d:	jmp    0x5d067575
  405e72:	add    edi,DWORD PTR [edi]
  405e74:	js     0x405e8c
  405e76:	pop    eax
  405e77:	xchg   ebx,eax
  405e78:	leave  
  405e79:	or     eax,0xf153e892
  405e7e:	fwait
  405e7f:	jmp    0xe7d25c7b
  405e84:	add    esi,esp
  405e86:	xchg   ecx,eax
  405e87:	sar    BYTE PTR [eax-0x12],1
  405e8a:	pop    ss
  405e8b:	aaa    
  405e8c:	loopne 0x405e28
  405e8e:	mov    bl,0xc0
  405e90:	leave  
  405e91:	shl    BYTE PTR [ebx],1
  405e93:	mov    ecx,0xba7fd5c9
  405e98:	jo     0x405e68
  405e9a:	xchg   ecx,eax
  405e9b:	test   al,0x78
  405e9d:	push   ecx
  405e9e:	cwde   
  405e9f:	icebp  
  405ea0:	xchg   cl,ch
  405ea2:	fwait
	...
  405eaf:	add    BYTE PTR [eax],al
  405eb1:	add    dh,al
  405eb3:	out    0xb5,al
  405eb5:	xchg   ecx,eax
  405eb6:	mov    BYTE PTR [ebx+0x15],0x91
  405eba:	mov    cl,cl
  405ebc:	imul   ecx,DWORD PTR [edi-0x15],0x3f919dc8
  405ec3:	push   esp
  405ec4:	sub    al,0x85
  405ec6:	mov    dl,0x70
  405ec8:	mov    ss,WORD PTR [ecx-0x30044b98]
  405ece:	mov    ebp,0x58912143
  405ed3:	leave  
  405ed4:	in     al,dx
  405ed5:	nop
  405ed6:	mov    dh,BYTE PTR [eax+0x6e]
  405ed9:	xchg   ecx,eax
  405eda:	dec    eax
  405edb:	leave  
  405edc:	(bad)  
  405ede:	pop    eax
  405edf:	pop    ecx
  405ee0:	cmp    BYTE PTR [ecx+0x2c844538],dl
  405ee6:	xor    cl,cl
  405ee8:	dec    ebp
  405ee9:	or     BYTE PTR [ebp+0x371745c9],dl
  405eef:	loopne 0x405e8f
  405ef1:	mov    dl,0x18
  405ef3:	leave  
  405ef4:	push   DWORD PTR ds:0x2eff7068
  405efa:	scas   al,BYTE PTR es:[edi]
  405efb:	enter  0xbdb4,0xaf
  405eff:	enter  0x1efe,0x50
  405f03:	shr    al,0xb6
  405f06:	lods   eax,DWORD PTR ds:[esi]
  405f07:	enter  0x2fe,0x3f
  405f0b:	pop    esi
  405f0c:	add    BYTE PTR [ebx-0xe8b36c4],dl
  405f12:	mov    ah,0x55
  405f14:	shl    esi,1
	...
  405f22:	add    BYTE PTR [eax],al
  405f24:	add    BYTE PTR [edi-0x506a4b38],ch
  405f2a:	enter  0xd1fe,0xbc
  405f2e:	repz (bad) 
  405f30:	fmulp  st(7),st
  405f32:	adc    bl,BYTE PTR [esi+edx*8-0x31]
  405f36:	enter  0x54e7,0xe7
  405f3a:	enter  0x12fe,0xd2
  405f3e:	pop    edi
  405f3f:	inc    eax
  405f40:	cs cld 
  405f42:	(bad)  
  405f43:	call   0x1084e73
  405f48:	pusha  
  405f49:	rcr    DWORD PTR [ebx+0x44afa6ff],0xbd
  405f50:	int    0xcf
  405f52:	enter  0xe9fe,0x48
  405f56:	stos   BYTE PTR es:[edi],al
  405f57:	push   0x86ffbd
  405f5c:	xchg   BYTE PTR [ecx],cl
  405f5e:	pushf  
  405f5f:	(bad)  
  405f60:	jle    0x405f11
  405f62:	ffreep st(2)
  405f64:	xor    bh,BYTE PTR [eax+ecx*8]
  405f67:	or     ebp,DWORD PTR [ecx+0x7c8dbe30]
  405f6d:	ins    BYTE PTR es:[edi],dx
  405f6e:	leave  
  405f6f:	(bad)  
  405f70:	pop    esi
  405f71:	jb     0x405f3a
  405f73:	shr    DWORD PTR [edx-0x228b5ccd],1
  405f79:	test   eax,0x7900314d
  405f7e:	pop    eax
  405f7f:	(bad)  
  405f80:	push   eax
  405f81:	outs   dx,BYTE PTR ds:[esi]
  405f82:	sar    BYTE PTR [edx+0x24e62600],0x8d
	...
  405f95:	add    BYTE PTR [eax],al
  405f97:	add    BYTE PTR [ebx+0x59ffff9b],ah
  405f9d:	sti    
  405f9e:	std    
  405f9f:	jne    0x405f8f
  405fa1:	arpl   WORD PTR [ebx],ax
  405fa3:	ror    DWORD PTR [ecx+0x58],1
  405fa6:	(bad)  
  405fa7:	jne    0x405fe3
  405fa9:	pop    eax
  405faa:	je     0x405fb4
  405fac:	dec    esi
  405fad:	dec    ecx
  405fae:	sar    bh,1
  405fb0:	fincstp 
  405fb2:	pop    ecx
  405fb3:	leave  
  405fb4:	and    al,0xcf
  405fb6:	add    BYTE PTR [ebp+0x5d],dl
  405fb9:	addr16 add ah,0xee
  405fbd:	pop    edi
  405fbe:	(bad)  
  405fbf:	jmp    FWORD PTR [ebx]
  405fc1:	adc    ebp,edi
  405fc3:	push   eax
  405fc4:	mov    ecx,esp
  405fc6:	or     al,0xff
  405fc8:	push   ebx
  405fc9:	out    dx,eax
  405fca:	dec    eax
  405fcb:	inc    ecx
  405fcc:	xchg   esi,eax
  405fcd:	arpl   WORD PTR [ecx-0x44],si
  405fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd1:	retf   
  405fd2:	or     eax,eax
  405fd4:	cdq    
  405fd5:	push   eax
  405fd6:	out    0x0,al
  405fd8:	xchg   esi,eax
  405fd9:	retf   
  405fda:	lds    eax,FWORD PTR [ebp-0x22]
  405fdd:	int3   
  405fde:	add    BYTE PTR [eax],al
  405fe0:	data16 mov es,WORD PTR [esp+esi*8-0x37]
  405fe5:	iret   
  405fe6:	add    BYTE PTR [eax],al
  405fe8:	cmp    al,0xcc
  405fea:	push   0x0
  405fec:	jmp    0x40603e
  405fee:	in     eax,dx
  405fef:	neg    ecx
  405ff1:	push   esi
  405ff2:	push   ecx
  405ff3:	push   0x66
  405ff5:	dec    eax
  405ff6:	inc    esp
  405ff7:	hlt    
  405ff8:	es dec ecx
  405ffa:	test   ah,dh
	...
  406008:	add    BYTE PTR [eax],al
  40600a:	add    cl,ah
  40600c:	push   esi
  40600d:	(bad)  
  40600e:	push   eax
  40600f:	cdq    
  406010:	loope  0x40600a
  406012:	(bad)  
  406013:	aas    
  406014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406015:	mov    gs,eax
  406017:	test   BYTE PTR [ebp+0x5],dl
  40601a:	add    BYTE PTR [ecx+esi*8],dh
  40601d:	sbb    BYTE PTR ds:0x54c26,al
  406023:	aas    
  406024:	xor    dl,BYTE PTR [eax-0x14]
  406027:	adc    dh,dh
  406029:	lea    eax,[ecx]
  40602b:	mov    edi,DWORD PTR [edi-0x2214427d]
  406031:	(bad)  
  406032:	(bad)  
  406033:	cmp    BYTE PTR [ebp+0x9],ah
  406036:	inc    DWORD PTR [edx+0x57b699d9]
  40603c:	imul   esi,DWORD PTR [edx],0x41
  40603f:	aas    
  406040:	xor    al,0x88
  406042:	hlt    
  406043:	enter  0x8fbd,0x50
  406047:	xlat   BYTE PTR ds:[ebx]
  406048:	jb     0x406098
  40604a:	add    BYTE PTR [edi],bh
  40604c:	mov    edx,0x342e74c2
  406051:	mov    eax,ebp
  406053:	test   al,0x9d
  406055:	(bad)  
  406056:	push   eax
  406057:	mov    edx,0xa0f7962b
  40605c:	lea    esi,[edx]
  40605e:	call   DWORD PTR [edx]
  406060:	mov    ch,0x8f
  406062:	xor    eax,0x43e918
  406067:	xchg   edi,eax
  406068:	repz mov dh,0xff
  40606b:	cmp    BYTE PTR [ecx+0x74c2],0x0
	...
  40607e:	push   cs
  40607f:	cmp    BYTE PTR [ecx-0x70a29710],cl
  406085:	push   0xbe9fb13e
  40608a:	pusha  
  40608b:	ret    
  40608c:	cli    
  40608d:	out    0x58,eax
  40608f:	jne    0x406020
  406091:	(bad)  
  406092:	mov    esp,0x48f79dfb
  406097:	xor    eax,0xc8337505
  40609c:	rol    DWORD PTR [ebx],1
  40609e:	cmp    BYTE PTR [eax+esi*8],bh
  4060a1:	fwait
  4060a2:	and    edx,DWORD PTR [esi-0x2ceb71a9]
  4060a8:	rol    DWORD PTR [eax+eiz*1],0x3c
  4060ac:	lock fwait
  4060ae:	pop    ds
  4060af:	xchg   esi,eax
  4060b0:	aas    
  4060b1:	mov    ss,WORD PTR [eax]
  4060b3:	jl     0x4060f5
  4060b5:	xchg   esi,eax
  4060b6:	or     dh,al
  4060b8:	das    
  4060b9:	pop    eax
  4060ba:	movsx  esp,BYTE PTR [edi]
  4060bd:	mov    ?,eax
  4060bf:	cmp    esi,eax
  4060c1:	fwait
  4060c2:	cmp    eax,0xe88e1798
  4060c7:	jnp    0x4060e1
  4060c9:	xchg   esi,eax
  4060ca:	loopne 0x406091
  4060cc:	adc    bl,dh
  4060ce:	in     eax,dx
  4060cf:	(bad)  
  4060d2:	jp     0x406094
  4060d4:	add    ebx,ebx
  4060d6:	leave  
  4060d7:	(bad)
  4060da:	dec    edx
  4060db:	(bad)  
  4060dc:	ror    BYTE PTR [ecx],1
  4060de:	hlt    
  4060df:	enter  0xbae7,0x0
	...
  4060ef:	add    BYTE PTR [eax],al
  4060f1:	jge    0x4060c3
  4060f3:	out    0x36,eax
  4060f5:	mov    ah,0xb4
  4060f7:	imul   ecx,eax,0x8dc7bd9b
  4060fd:	retf   0xbc0b
  406100:	xor    al,0x90
  406102:	cmp    esp,esp
  406104:	mov    WORD PTR [edx+0x2d],ss
  406107:	and    BYTE PTR [ebx+0x3f],al
  40610a:	mov    al,0xa
  40610c:	dec    ecx
  40610d:	aas    
  40610e:	enter  0xc3f2,0x40
  406112:	dec    ebx
  406113:	cmp    eax,DWORD PTR [ebx]
  406115:	aas    
  406116:	enter  0x47a6,0x67
  40611a:	enter  0x3e7,0x3f
  40611e:	lea    esp,ds:0xcd5098
  406124:	jmp    0x3419365
  406129:	cmp    esi,DWORD PTR [edx]
  40612b:	add    ebx,edx
  40612d:	cmp    al,0x53
  40612f:	inc    esp
  406130:	push   ebp
  406131:	imul   edx,DWORD PTR [ebx-0x7c],0x5d
  406135:	rol    ah,cl
  406137:	(bad)  
  406138:	mov    ecx,0x46f93ab3
  40613d:	xor    ah,al
  40613f:	jmp    0x108e939
  406144:	loop   0x406142
  406146:	cmp    eax,DWORD PTR [eax+eax*2]
  406149:	or     eax,ecx
  40614b:	add    cl,ch
  40614d:	push   esp
  40614e:	or     DWORD PTR [ecx-0x58],ecx
  406151:	cmp    al,0xc5
  406153:	je     0x40613a
	...
  406161:	add    BYTE PTR [eax],al
  406163:	add    ah,al
  406165:	std    
  406166:	(bad)  
  406167:	push   cs
  406168:	mov    dl,0x17
  40616a:	mov    bl,BYTE PTR [ecx]
  40616c:	pop    eax
  40616d:	dec    ebx
  40616e:	cmc    
  40616f:	test   bl,0xc4
  406172:	push   ecx
  406173:	fwait
  406174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406175:	in     eax,dx
  406176:	(bad)  
  406177:	out    dx,al
  406178:	mov    bl,0x4e
  40617a:	test   cl,bl
  40617c:	rol    esp,cl
  40617e:	(bad)  
  40617f:	rol    DWORD PTR [eax-0x66],1
  406182:	(bad)  
  406183:	(bad)  
  406184:	inc    esi
  406185:	enter  0x2a68,0x6b
  406189:	pop    es
  40618a:	add    esi,eax
  40618c:	icebp  
  40618d:	mov    bh,0xf6
  40618f:	mov    esi,0x4e34c4c3
  406194:	dec    ebx
  406195:	pop    es
  406196:	add    ecx,eax
  406198:	xor    BYTE PTR [ebx+0x4af5a6fe],bl
  40619e:	in     eax,0x96
  4061a0:	ret    
  4061a1:	les    ebp,FWORD PTR [ebx-0x17]
  4061a4:	inc    esp
  4061a5:	adc    al,0x51
  4061a7:	sub    BYTE PTR [ebx],bh
  4061a9:	lds    esi,FWORD PTR [eax+eax*1-0x1a42a]
  4061b0:	rcr    DWORD PTR [ebp-0x33e8b799],1
  4061b6:	call   0xfe940d19
  4061bb:	mov    DWORD PTR [ebx-0x6e00099d],ebp
  4061c1:	loope  0x4061c3
  4061c3:	push   0x3ff7eb
	...
  4061d4:	add    BYTE PTR [eax],al
  4061d6:	add    BYTE PTR [ecx+0x1a],dh
  4061d9:	icebp  
  4061da:	test   DWORD PTR [ecx-0x6ca01ac],0x7e003fff
  4061e4:	pop    es
  4061e5:	aam    0xff
  4061e7:	push   ecx
  4061e8:	ds test al,ch
  4061eb:	pop    ecx
  4061ec:	push   esp
  4061ed:	inc    BYTE PTR [ebx-0x9946d]
  4061f3:	push   ecx
  4061f4:	(bad)  
  4061f5:	je     0x406240
  4061f7:	push   ebp
  4061f8:	adc    ch,ch
  4061fa:	test   DWORD PTR [ecx+0x54],0x48a67401
  406201:	mov    esp,0xfe4fc9e8
  406206:	add    BYTE PTR [edx-0x64],cl
  406209:	data16 add BYTE PTR [esi+0xbffbf5e],ah
  406210:	(bad)  
  406211:	out    0xab,al
  406213:	loopne 0x406264
  406215:	(bad)  
  406216:	dec    ebx
  406218:	pusha  
  406219:	idiv   bh
  40621b:	or     DWORD PTR [edi+0x74],0xcf4f6e08
  406222:	call   ecx
  406224:	dec    edi
  406225:	mov    ah,0xe8
  406227:	leave  
  406228:	dec    edi
  406229:	(bad)  
  40622a:	call   FWORD PTR [ebx-0x3c]
  40622d:	out    0xf1,al
  40622f:	mov    al,ds:0x3ffffe4f
  406234:	and    al,0xa1
  406236:	mul    DWORD PTR [eax+0x52]
  406239:	mov    dh,BYTE PTR [ebp+0x0]
	...
  406248:	add    BYTE PTR [eax],al
  40624a:	inc    edi
  40624b:	pop    ecx
  40624c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40624d:	into   
  40624e:	push   eax
  40624f:	inc    edx
  406250:	mov    dh,BYTE PTR [ebp-0x75bd9d]
  406256:	push   edi
  406257:	ins    BYTE PTR es:[edi],dx
  406258:	mov    ah,0xff
  40625a:	cmp    BYTE PTR [edx],ch
  40625c:	push   eax
  40625d:	in     al,dx
  40625e:	sub    BYTE PTR [edx],ah
  406260:	mov    ch,al
  406262:	in     eax,0xff
  406264:	mov    edi,edi
  406266:	and    BYTE PTR [ebp+ebx*4-0x9],bl
  40626a:	sbb    BYTE PTR [edx],cl
  40626c:	popf   
  40626d:	scas   eax,DWORD PTR es:[edi]
  40626e:	out    dx,al
  40626f:	add    DWORD PTR [edx-0x6dff2d01],ecx
  406275:	inc    DWORD PTR [eax]
  406277:	repnz invd 
  40627a:	out    0x13,eax
  40627c:	mov    edi,edi
  40627e:	lock loope 0x4062d0
  406281:	lock lock (bad) [ecx-0x76003618]
  406289:	(bad)  
  40628a:	fdiv   DWORD PTR [ebx-0x76]
  40628d:	jmp    0xffcc2525
  406292:	enter  0x8643,0xe8
  406296:	test   DWORD PTR ds:[eax+eax*1],0xfffa6e86
  40629e:	or     esi,DWORD PTR [esi]
  4062a0:	xchg   esi,eax
  4062a1:	add    DWORD PTR [ebx+0x15001c9c],0xffffffb0
  4062a8:	mov    esi,DWORD PTR [ebp+0x47]
  4062ab:	cdq    
  4062ac:	pop    edx
  4062ad:	into   
	...
  4062ba:	add    BYTE PTR [eax],al
  4062bc:	add    BYTE PTR [eax-0x74ba827f],dl
  4062c2:	or     BYTE PTR [ecx],ch
  4062c4:	dec    edi
  4062c5:	(bad)  
  4062c6:	mov    al,0x8b
  4062c8:	jne    0x406311
  4062ca:	enter  0x1f8f,0x71
  4062ce:	ret    0x1b9f
  4062d1:	in     al,0x12
  4062d3:	sub    DWORD PTR [eax+eiz*2],eax
  4062d6:	cmp    al,0xe0
  4062d8:	fwait
  4062d9:	lock rol DWORD PTR [edi+0x2f5ee78a],0x45
  4062e1:	aas    
  4062e2:	ret    
  4062e3:	std    
  4062e4:	sti    
  4062e5:	pop    eax
  4062e6:	or     eax,0x31388a6e
  4062eb:	sub    bh,BYTE PTR [edx]
  4062ed:	jle    0x4062b7
  4062ef:	pop    esi
  4062f0:	adc    BYTE PTR [edi],dh
  4062f2:	mov    al,0x7
  4062f4:	mov    DWORD PTR [eax],esp
  4062f6:	ret    0x9dc0
  4062f9:	mov    BYTE PTR [edi],al
  4062fb:	call   0x5010ed8a
  406300:	in     eax,0xb
  406302:	ret    0x1b37
  406305:	sub    al,0x18
  406307:	test   eax,0xf03bf803
  40630c:	fwait
  40630d:	dec    edx
  40630e:	ret    
  40630f:	pop    ds
  406310:	mov    ch,al
  406312:	cmp    edx,DWORD PTR [edx+ecx*4]
  406315:	push   0xffffffd0
  406317:	push   DWORD PTR [ecx+ecx*1-0x3e]
  40631b:	pop    es
  40631c:	mov    esp,0x30e7ccfd
	...
  40632d:	add    BYTE PTR [eax],al
  40632f:	add    BYTE PTR [esp+esi*4-0x4ec0fc80],dh
  406336:	mov    dh,BYTE PTR cs:[edx]
  406339:	aam    0xe6
  40633b:	cmova  esi,DWORD PTR [eax-0x3e5770c6]
  406342:	mov    eax,ds:0x34c837c6
  406347:	jge    0x4062f4
  406349:	inc    ebp
  40634a:	inc    ebp
  40634b:	clc    
  40634c:	nop
  40634d:	shl    BYTE PTR [ebx-0x1a],cl
  406350:	aas    
  406351:	enter  0xe900,0xb7
  406355:	cmp    ecx,DWORD PTR ds:0xfe9d8fc1
  40635b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40635c:	jb     0x4062df
  40635e:	je     0x406359
  406360:	inc    esp
  406361:	add    eax,0xc13b2849
  406366:	je     0x406345
  406368:	mov    ah,0x8a
  40636a:	aad    0x86
  40636c:	(bad)  
  40636d:	dec    edi
  40636e:	inc    esp
  40636f:	in     eax,dx
  406370:	sub    cl,al
  406372:	push   0x1070cf6
  406377:	add    DWORD PTR [ecx-0x3816bfe8],edi
  40637d:	cli    
  40637e:	gs mov cl,0x7d
  406381:	enter  0x38e8,0xea
  406385:	sar    dh,0xe2
  406388:	cld    
  406389:	cmp    ebx,DWORD PTR [edi]
  40638b:	cdq    
  40638c:	dec    esp
  40638d:	shl    DWORD PTR [ebp+ebp*8-0x5c],0xd
  406392:	aad    0x36
	...
  4063a0:	add    BYTE PTR [eax],al
  4063a2:	add    BYTE PTR [esi+0x482e5117],dh
  4063a8:	shr    al,1
  4063aa:	js     0x406372
  4063ac:	sar    dh,0x11
  4063af:	push   edi
  4063b0:	cwde   
  4063b1:	(bad)  
  4063b2:	push   ss
  4063b3:	ret    
  4063b4:	pop    eax
  4063b5:	ror    DWORD PTR [esi],1
  4063b7:	(bad)  
  4063b8:	sub    eax,0x18479101
  4063bd:	inc    eax
  4063be:	jmp    0xa891b1e7
  4063c3:	cmp    al,0x30
  4063c5:	add    ebp,ecx
  4063c7:	cmp    al,0x48
  4063c9:	jmp    0xff014f4e
  4063ce:	bnd jl 0x40640c
  4063d1:	pop    ds
  4063d2:	cmp    DWORD PTR [ebx-0x3f],ebp
  4063d5:	je     0x4063b4
  4063d7:	mov    ah,0xd5
  4063d9:	aam    0x0
  4063db:	jns    0x40642c
  4063dd:	push   ecx
  4063de:	push   eax
  4063df:	leave  
  4063e0:	ror    DWORD PTR [eax],1
  4063e2:	call   0x3eb316
  4063e7:	jle    0x4063c9
  4063e9:	sar    bh,1
  4063eb:	cdq    
  4063ec:	pop    esp
  4063ed:	pop    esi
  4063ee:	ror    cl,1
  4063f0:	dec    edi
  4063f1:	imul   eax,DWORD PTR [eax],0x3e
  4063f4:	iret   
  4063f5:	push   eax
  4063f6:	inc    ecx
  4063f7:	data16 fsubr QWORD PTR [ebx-0x233d8b0]
  4063fe:	xor    eax,0x400441
  406403:	mov    esi,0xffd1e4
	...
  406414:	add    BYTE PTR [eax],al
  406416:	test   eax,0x3874bebc
  40641b:	hlt    
  40641c:	push   eax
  40641d:	call   DWORD PTR [ebx]
  40641f:	mov    eax,0x5065d9e6
  406424:	(bad)  
  406425:	push   eax
  406426:	(bad)  
  406427:	push   eax
  406428:	je     0x406432
  40642a:	outs   dx,BYTE PTR ds:[esi]
  40642b:	stos   DWORD PTR es:[edi],eax
  40642c:	(bad)  
  40642d:	dec    DWORD PTR [ecx+0x63]
  406430:	sub    dl,al
  406432:	dec    ecx
  406433:	push   eax
  406434:	jmp    0xfe90ba5f
  406439:	push   0xffffffe6
  40643b:	jecxz  0x4064ba
  40643d:	push   eax
  40643e:	xchg   edi,eax
  40643f:	retf   
  406440:	push   0x10aa6ad
  406445:	push   0x8000cbe4
  40644a:	mov    cs:0xc3c9ffd3,eax
  406450:	mov    esi,0x50fbe874
  406455:	push   DWORD PTR [ebx]
  406457:	mov    bh,0xe6
  406459:	mov    eax,ds:0x50fe47f5
  40645e:	inc    di
  406460:	je     0x40646a
  406462:	aas    
  406463:	mov    DWORD PTR [ebp-0x62716702],ebx
  406469:	repz add BYTE PTR [esi+0x6e99e886],0x86
  406471:	call   DWORD PTR [edi]
  406473:	(bad)  
  406474:	xor    al,0x41
  406476:	aas    
  406477:	outs   dx,BYTE PTR ds:[esi]
  406478:	adc    BYTE PTR [eax+eax*1],cl
	...
  406487:	add    BYTE PTR [eax],al
  406489:	xor    DWORD PTR [bp+si+0x68ff],esi
  40648e:	add    DWORD PTR ds:0x9aa8eaff,esi
  406494:	(bad)  
  406495:	pop    ecx
  406496:	dec    esi
  406497:	xchg   al,ch
  406499:	ins    DWORD PTR es:[edi],dx
  40649a:	jbe    0x406422
  40649c:	dec    DWORD PTR [eax-0x4c]
  40649f:	mul    bh
  4064a1:	jne    0x406509
  4064a3:	xchg   bh,bh
  4064a5:	push   es
  4064a6:	jae    0x4064a5
  4064a8:	dec    DWORD PTR [ebx+0x383993a]
  4064ae:	adc    eax,0xb395001b
  4064b3:	xchg   DWORD PTR [ebp+0x47],esi
  4064b6:	or     DWORD PTR [ecx+0x7c0610cc],ebx
  4064bc:	inc    ebp
  4064bd:	or     ebx,DWORD PTR [ecx-0x4ec0feff]
  4064c3:	call   0x7a89:0x85ee08be
  4064ca:	jmp    0xb17e68eb
  4064cf:	add    bh,bh
  4064d1:	push   0xffffffd9
  4064d3:	pushf  
  4064d4:	mov    BYTE PTR [eax-0xf4fd50],dl
  4064da:	cmp    al,0xee
  4064dc:	cmp    al,0x43
  4064de:	mov    al,0x2
  4064e0:	add    BYTE PTR [eax-0x5c],cl
  4064e3:	xchg   DWORD PTR [ebp-0x49],esi
  4064e6:	lods   eax,DWORD PTR ds:[esi]
  4064e7:	adc    DWORD PTR [eax],ecx
  4064e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064ea:	(bad)  
  4064eb:	outs   dx,DWORD PTR ds:[esi]
  4064ec:	test   DWORD PTR [eax],eax
	...
  4064fa:	add    BYTE PTR [eax],al
  4064fc:	test   al,0xbe
  4064fe:	sar    ebx,cl
  406500:	mov    eax,ds:0x109bd034
  406505:	(bad)  
  406506:	iret   
  406507:	xchg   BYTE PTR ds:0x6cbbcff0,ah
  40650d:	mov    esi,0x348033bf
  406512:	loopne 0x4064af
  406514:	jmp    0xe5c714d6
  406519:	loope  0x4064aa
  40651b:	dec    ebx
  40651c:	mov    WORD PTR [esi+0x33a0fa9f],?
  406522:	cld    
  406523:	sbb    esp,esp
  406525:	pop    ss
  406526:	sub    DWORD PTR [edi+ebp*8],eax
  406529:	scas   eax,DWORD PTR es:[edi]
  40652a:	sub    al,0xb3
  40652c:	dec    eax
  40652d:	mov    esi,0xcfca8718
  406532:	jg     0x40656a
  406534:	cmp    DWORD PTR [esi-0x4fa3e691],edi
  40653a:	xor    DWORD PTR [edx-0x3c0c41d8],0x1abfd4ab
  406544:	outs   dx,DWORD PTR ds:[esi]
  406545:	pop    es
  406546:	call   0x1b248c7e
  40654b:	xchg   BYTE PTR [eax],cl
  40654d:	sbb    DWORD PTR [edi],edi
  40654f:	adc    BYTE PTR [edi],dh
  406551:	mov    al,0xf8
  406553:	test   eax,edi
  406555:	mov    ebp,0x42d8e7c2
  40655a:	cmp    eax,DWORD PTR [esi+0xf27d1e8]
	...
  40656c:	add    BYTE PTR [eax],al
  40656e:	add    BYTE PTR [ebx+0x30],cl
  406571:	xor    DWORD PTR [ebx],0x7e
  406574:	enter  0x9bb7,0x39
  406578:	cdq    
  406579:	pop    es
  40657a:	xchg   BYTE PTR [edi-0x43],ch
  40657d:	jne    0x40657a
  40657f:	fcom   st(7)
  406581:	add    bh,dh
  406583:	ret    0x6bbd
  406586:	jmp    0x289199df
  40658b:	inc    ebx
  40658c:	xor    BYTE PTR [ebx-0x23803c7],cl
  406592:	sbb    al,0x3a
  406594:	adc    BYTE PTR [eax-0x17],al
  406597:	mov    ah,0xd1
  406599:	rol    dh,cl
  40659b:	ret    0xfe18
  40659e:	xor    al,0x83
  4065a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065a1:	lock mov ah,0xc2
  4065a4:	mov    ebp,0x3d54e96b
  4065a9:	push   ecx
  4065aa:	sub    BYTE PTR [ebx+0x30],al
  4065ad:	mov    edi,DWORD PTR [ecx]
  4065af:	cld    
  4065b0:	(bad)  
  4065b1:	std    
  4065b2:	fdivr  QWORD PTR [ebx]
  4065b4:	adc    BYTE PTR [eax-0x17],al
  4065b7:	mov    ah,0xb1
  4065b9:	rol    BYTE PTR [esi-0xa3f2e3e],1
  4065bf:	push   edx
  4065c0:	push   eax
  4065c1:	inc    esp
  4065c2:	jge    0x406586
  4065c4:	xor    dh,ch
  4065c6:	outs   dx,BYTE PTR ds:[esi]
  4065c7:	inc    eax
  4065c8:	shr    al,1
  4065ca:	cwde   
  4065cb:	sar    BYTE PTR [esi+edi*8-0x164bcfa2],0x90
	...
  4065df:	add    BYTE PTR [eax],al
  4065e1:	add    cl,dl
  4065e3:	mov    esp,0x303cc3fe
  4065e8:	jne    0x406583
  4065ea:	jge    0x4065b4
  4065ec:	push   0x1074b8c
  4065f1:	or     BYTE PTR ss:[esi],ah
  4065f4:	dec    ecx
  4065f5:	test   al,0x3c
  4065f7:	mov    al,0xbb
  4065f9:	cmp    dl,al
  4065fb:	mov    esp,0xd0301e51
  406600:	call   0xfefd264e
  406605:	cmp    DWORD PTR [eax+esi*1],0x7e
  406609:	add    BYTE PTR [esi+0x73680109],ah
  40660f:	hlt    
  406610:	aas    
  406611:	add    BYTE PTR [ecx-0x18b79873],dh
  406617:	enter  0x9ae8,0xe7
  40661b:	inc    ebx
  40661c:	dec    BYTE PTR [ebx]
  40661e:	(bad)  
  40661f:	int3   
  406620:	push   ss
  406621:	mov    DWORD PTR [ebx+0x58],ebp
  406624:	(bad)  
  406625:	jne    0x406691
  406627:	inc    ebx
  406628:	je     0x406632
  40662a:	outs   dx,BYTE PTR ds:[esi]
  40662b:	call   0x4402662b
  406630:	je     0x406626
  406632:	jle    0x406614
  406634:	into   
  406635:	jmp    DWORD PTR [ecx+0x4a6800de]
  40663b:	hlt    
  40663c:	aas    
  40663d:	add    BYTE PTR [esi+0x42],cl
  406640:	push   ecx
  406641:	inc    ecx
  406642:	data16 loopne 0x406647
	...
  406655:	dec    ax
  406657:	jmp    0xfe840dc6
  40665c:	push   eax
  40665d:	ror    ebp,0x8
  406660:	call   0x3ea9bb
  406665:	cmp    al,0xc4
  406667:	push   0x106e67f
  40666c:	push   0x3ff7ac
  406671:	dec    cl
  406673:	add    BYTE PTR [eax],al
  406675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406676:	pop    edi
  406677:	dec    edx
  406678:	rol    DWORD PTR [ecx-0x353ff5bc],1
  40667e:	lods   eax,DWORD PTR ds:[esi]
  40667f:	mov    DWORD PTR [ebp+0x3a],eax
  406682:	inc    esp
  406683:	je     0x406679
  406685:	and    edx,ecx
  406687:	or     al,ch
  406689:	out    0x42,eax
  40668b:	(bad)  
  40668c:	inc    DWORD PTR [ecx-0x36]
  40668f:	hlt    
  406690:	call   0xfff51ed4
  406695:	rol    BYTE PTR [edi+0x2],1
  406698:	push   0x436153
  40669d:	push   edi
  40669e:	or     al,0x32
  4066a0:	inc    ecx
  4066a1:	aas    
  4066a2:	dec    ecx
  4066a3:	add    BYTE PTR [eax],al
  4066a5:	aas    
  4066a6:	xor    DWORD PTR [edx-0x7d5d71e5],ebx
  4066ac:	push   eax
  4066ad:	mov    al,ds:0x3ee80d14
  4066b2:	xchg   esp,eax
  4066b3:	cmp    bh,0x25
  4066b6:	mov    cl,0xea
  4066b8:	jle    0x4066ba
	...
  4066c6:	add    BYTE PTR [eax],al
  4066c8:	out    dx,eax
  4066c9:	out    dx,eax
  4066ca:	add    al,0x68
  4066cc:	shl    cl,cl
  4066ce:	ret    
  4066cf:	jmp    eax
  4066d1:	scas   al,BYTE PTR es:[edi]
  4066d2:	add    al,BYTE PTR [eax]
  4066d4:	mov    edi,0x68d08189
  4066d9:	bound  ecx,QWORD PTR [esi]
  4066db:	shr    bl,0xb2
  4066de:	lea    eax,[ebp+0x53]
  4066e1:	push   edx
  4066e2:	clc    
  4066e3:	repz push eax
  4066e5:	aam    0xc
  4066e7:	call   0xffc2ac69
  4066ec:	inc    eax
  4066ed:	mov    ah,0x76
  4066ef:	call   0xffc2caf9
  4066f4:	xor    BYTE PTR [esi+edi*2+0x6ab9b2ff],dh
  4066fb:	cmp    eax,0xc98219f4
  406700:	std    
  406701:	lods   al,BYTE PTR ds:[esi]
  406702:	add    dl,BYTE PTR [ebp-0x3c]
  406705:	cld    
  406706:	in     al,dx
  406707:	dec    DWORD PTR [eax]
  406709:	adc    al,bl
  40670b:	dec    DWORD PTR [edx+0x477583ad]
  406711:	or     DWORD PTR [eax+0x4be9f0f1],eax
  406717:	ret    0xc837
  40671a:	out    0xd8,eax
  40671c:	mov    ch,0xab
  40671e:	imul   ecx,DWORD PTR [eax-0x6d],0xf88317b9
  406725:	inc    esp
  406726:	push   eax
  406727:	or     al,0xba
  40672a:	call   0x406732
	...
  40673b:	aas    
  40673c:	enter  0xc972,0x44
  406740:	iret   
  406741:	daa    
  406742:	clc    
  406743:	cmp    ecx,DWORD PTR [eax-0x50]
  406746:	add    esi,DWORD PTR [edx]
  406748:	(bad)
  40674b:	aas    
  40674c:	enter  0x82e7,0x12
  406750:	int3   
  406751:	mov    edi,0xcfba774b
  406756:	push   cs
  406757:	jg     0x40678d
  406759:	imul   ebx
  40675b:	xchg   ebp,eax
  40675c:	or     DWORD PTR [ecx],ebp
  40675e:	add    al,0x78
  406760:	xor    al,0xe4
  406762:	imul   edi,DWORD PTR [ecx],0xffffff99
  406765:	scas   eax,DWORD PTR es:[edi]
  406766:	adc    BYTE PTR [esp+ecx*8+0xf],0x74
  40676b:	icebp  
  40676c:	or     al,ch
  40676e:	adc    dl,0xcb
  406771:	jg     0x4067ed
  406773:	outs   dx,DWORD PTR ds:[esi]
  406774:	mov    edx,0x7fc28c8f
  406779:	xchg   BYTE PTR [edx+0x4be2f40],al
  40677f:	aas    
  406780:	enter  0x8864,0xfd
  406784:	mov    edx,0xb08f826f
  406789:	xlat   BYTE PTR ds:[ebx]
  40678a:	push   eax
  40678b:	and    BYTE PTR [edx-0x45027793],bh
  406791:	push   edi
  406792:	sub    BYTE PTR [edi-0x47],0x95
  406796:	mov    ebx,0x6b47ba09
  40679b:	pcmpeqw mm5,mm0
  40679e:	add    eax,DWORD PTR [eax]
	...
  4067ac:	add    BYTE PTR [eax],al
  4067ae:	mov    BYTE PTR [ebx+0x1],0x75
  4067b2:	mov    esi,0x4da9feb9
  4067b7:	inc    esp
  4067b8:	cli    
  4067b9:	jmp    0x74cc2ffa
  4067be:	cmp    BYTE PTR [edx-0x39aae902],0x10
  4067c5:	jmp    0x8cb53006
  4067ca:	scas   eax,DWORD PTR es:[edi]
  4067cb:	push   es
  4067cc:	sub    eax,0x4fa3a499
  4067d1:	test   al,0x3c
  4067d3:	mov    al,0xcc
  4067d5:	xor    eax,0xa909c83c
  4067da:	test   al,0xc4
  4067dc:	out    0x98,eax
  4067de:	inc    ebx
  4067df:	enter  0x6400,0xa8
  4067e3:	xchg   bh,bh
  4067e5:	into   
  4067e6:	mov    esi,0x6b15434b
  4067eb:	and    ecx,ebp
  4067ed:	das    
  4067ee:	jl     0x4067a9
  4067f0:	out    0x79,al
  4067f2:	mov    bh,0xc8
  4067f4:	add    dl,ah
  4067f6:	cld    
  4067f7:	xor    al,BYTE PTR [eax+edx*4]
  4067fa:	(bad)  
  4067fb:	enter  0xe900,0x64
  4067ff:	push   es
  406800:	dec    ecx
  406801:	sub    BYTE PTR [ebx],bh
  406803:	mov    ecx,0x35d4dd74
  406808:	rol    DWORD PTR [esi-0x546bb442],1
  40680e:	mov    ebp,0x64feb8
	...
  40681f:	add    BYTE PTR [eax],al
  406821:	or     ebp,ebp
  406823:	push   edx
  406824:	sbb    DWORD PTR [ebx-0x41992e8e],ebx
  40682a:	pop    ss
  40682b:	(bad)  
  40682c:	aam    0x2c
  40682e:	sbb    dh,bh
  406830:	fadd   QWORD PTR [eax+esi*4+0x13]
  406834:	dec    esi
  406835:	mov    esi,0x8700e9b8
  40683a:	sbb    dh,bh
  40683c:	dec    DWORD PTR [ebp+0x3a428da3]
  406842:	dec    ebp
  406843:	test   BYTE PTR [eax+ebx*1+0x1f68fe47],dh
  40684a:	xchg   esp,eax
  40684b:	inc    ecx
  40684c:	add    BYTE PTR [ecx],bh
  40684e:	jno    0x406805
  406850:	(bad)  
  406851:	sub    DWORD PTR [edi-0x17],eax
  406854:	push   ebx
  406855:	jae    0x40681b
  406857:	add    BYTE PTR [ebx],cl
  406859:	push   ss
  40685a:	rol    BYTE PTR [eax+ebp*2-0x1b],0x8c
  40685f:	inc    ecx
  406860:	add    BYTE PTR [ecx-0x7d17f54f],ch
  406866:	adc    al,0xfe
  406868:	call   FWORD PTR [ecx+0x79feb571]
  40686e:	inc    edi
  40686f:	push   ecx
  406870:	call   0x3e7c6f
  406875:	inc    esi
  406876:	xchg   esp,eax
  406877:	cmp    DWORD PTR [ebp+0x66],0xffffffc4
  40687b:	je     0x40688a
  40687d:	push   cs
  40687e:	sbb    al,0x51
  406880:	inc    ecx
  406881:	xchg   sp,ax
  406883:	out    0x23,al
	...
  406891:	add    BYTE PTR [eax],al
  406893:	add    bl,dh
  406895:	les    eax,FWORD PTR [eax]
  406897:	jmp    0x4068ec
  406899:	jl     0x40689b
  40689b:	add    BYTE PTR [esi-0x3c],ah
  40689e:	pop    edx
  40689f:	or     esp,DWORD PTR [esi-0x46adf650]
  4068a5:	mov    cl,0x6
  4068a7:	call   0x3eaf8c
  4068ac:	into   
  4068ad:	xchg   edx,ecx
  4068af:	jmp    FWORD PTR [ecx-0x673d7bba]
  4068b5:	dec    eax
  4068b6:	(bad)  
  4068b7:	push   eax
  4068b8:	cdq    
  4068b9:	jle    0x406878
  4068bb:	(bad)  
  4068bc:	jns    0x406906
  4068be:	jmp    0x295a7ca
  4068c3:	add    dl,al
  4068c5:	loope  0x4068d7
  4068c7:	test   DWORD PTR [edi],ebp
  4068c9:	push   cs
  4068ca:	cmp    edi,0xfebe3cf8
  4068d0:	lock (bad) 
  4068d2:	imul   edi,edx,0xff02a1ac
  4068d8:	stos   BYTE PTR es:[edi],al
  4068d9:	sub    DWORD PTR [eax+0x1dd9d8ff],eax
  4068df:	int3   
  4068e0:	rcr    dh,1
  4068e2:	dec    edx
  4068e3:	ret    0xa13b
  4068e6:	xlat   BYTE PTR ds:[ebx]
  4068e7:	mov    dl,bl
  4068e9:	and    al,BYTE PTR [esi-0x4]
  4068ec:	sub    BYTE PTR [esi+edi*2+0x0],0x3f
  4068f1:	mov    eax,ds:0x9532ff02
  4068f6:	push   0x5b
	...
  406904:	add    BYTE PTR [eax],al
  406906:	add    BYTE PTR [edi+0x7f0b7eae],cl
  40690c:	sbb    eax,0x9cfa891b
  406911:	jle    0x406988
  406913:	das    
  406914:	xchg   al,bh
  406916:	sti    
  406917:	xchg   edi,eax
  406918:	adc    DWORD PTR [esi-0x1],ecx
  40691b:	js     0x4068ee
  40691d:	jge    0x406994
  40691f:	jae    0x4068aa
  406921:	ins    DWORD PTR es:[edi],dx
  406922:	retf   
  406923:	push   0x63458e66
  406928:	fild   DWORD PTR [ebx]
  40692a:	call   edx
  40692c:	push   esp
  40692d:	jle    0x4069a4
  40692f:	inc    edi
  406930:	dec    ecx
  406931:	cmp    esi,edi
  406933:	dec    eax
  406934:	inc    esi
  406935:	jle    0x4069ac
  406937:	inc    ebx
  406938:	pop    ecx
  406939:	push   ebp
  40693a:	retf   
  40693b:	cmp    BYTE PTR [esi],dh
  40693d:	dec    esp
  40693e:	ret    0xa143
  406941:	(bad)  [edx-0xfb6dfe5]
  406947:	and    eax,ecx
  406949:	data16 jg 0x4068f1
  40694c:	enter  0x2d1,0x10
  406950:	cmp    eax,0x80186be0
  406955:	dec    edi
  406956:	jg     0x40690e
  406958:	or     al,0x44
  40695a:	in     al,dx
  40695b:	cmp    al,0xc9
  40695d:	out    0x3,eax
  40695f:	ret    0x3f4c
  406962:	jle    0x40694c
  406964:	mov    dh,0x98
  406966:	imul   ecx,ebx,0x7a
  406969:	call   0x406971
	...
  40697a:	inc    esp
  40697b:	mov    bh,ch
  40697d:	xchg   DWORD PTR [edi+eax*8-0x33f5fc19],ebx
  406984:	call   0x6f07a88c
  406989:	pushf  
  40698a:	aas    
  40698b:	enter  0xebe7,0xa0
  40698f:	pop    ss
  406990:	test   eax,0xf74cba03
  406995:	jge    0x406937
  406997:	mov    dh,0x38
  406999:	ins    BYTE PTR es:[edi],dx
  40699a:	cmp    DWORD PTR [edi+0x4cc67edf],eax
  4069a0:	fdivr  DWORD PTR [ebp-0x78]
  4069a3:	mov    dh,0xcf
  4069a5:	mov    eax,0x7ec7b58f
  4069aa:	out    0xcb,eax
  4069ac:	call   0x6d85a8b4
  4069b1:	jbe    0x406a1c
  4069b3:	mov    dh,0xaf
  4069b5:	rcr    eax,cl
  4069b7:	or     al,0x30
  4069b9:	lds    ebx,FWORD PTR [eax+0x2e]
  4069bc:	in     eax,0xd4
  4069be:	inc    edi
  4069c0:	(bad)  
  4069c1:	jge    0x4069b2
  4069c3:	or     al,ch
  4069c5:	imul   esi,ebp,0x7a
  4069c8:	call   0xf4c8add0
  4069cd:	adc    al,0xa5
  4069cf:	enter  0x6400,0xb7
  4069d3:	mov    ebp,0x18a16eff
  4069d8:	(bad)  
  4069d9:	fadd   QWORD PTR [eax+eiz*4-0x65]
  4069dd:	pop    esp
	...
  4069ea:	add    BYTE PTR [eax],al
  4069ec:	add    BYTE PTR [ecx-0x7363014b],dl
  4069f2:	mov    dh,0xfe
  4069f4:	dec    esi
  4069f5:	adc    al,0xca
  4069f7:	(bad)  
  4069f8:	call   0x36c4ad39
  4069fd:	jb     0x4069b4
  4069ff:	(bad)  
  406a00:	cdq    
  406a01:	aam    0xc
  406a03:	dec    ecx
  406a04:	test   al,0x3c
  406a06:	and    BYTE PTR [eax],cl
  406a08:	mov    eax,0x1f66b603
  406a0d:	in     al,dx
  406a0e:	or     BYTE PTR [ecx],al
  406a10:	add    DWORD PTR [ecx],edi
  406a12:	jns    0x406a15
  406a14:	jmp    0xd8b5f24e
  406a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a1a:	mov    ch,0x8d
  406a1c:	sub    DWORD PTR fs:[esi-0x49720902],esi
  406a23:	je     0x406a06
  406a25:	adc    al,0x15
  406a27:	cld    
  406a28:	out    0x1a,al
  406a2a:	mov    ch,0xb4
  406a2c:	fst    DWORD PTR [ecx]
  406a2e:	mov    ch,0xfe
  406a30:	ror    DWORD PTR [ebx],0x82
  406a33:	dec    dh
  406a35:	xchg   ebp,eax
  406a36:	loop   0x406a20
  406a38:	xor    BYTE PTR [edx],cl
  406a3a:	mov    ch,0xfe
  406a3c:	repnz cld 
  406a3e:	cmp    ebx,DWORD PTR ds:0x40180a41
  406a44:	jmp    0xb81517d5
  406a49:	fidiv  DWORD PTR [ecx+edx*2-0x1e7c4ed]
  406a50:	sbb    al,0x0
	...
  406a5e:	add    BYTE PTR [eax],al
  406a60:	cmp    esp,DWORD PTR [eax-0x4b3d73cd]
  406a66:	jmp    0xfe42416b
  406a6b:	dec    DWORD PTR [esi+0x6]
  406a6e:	push   ecx
  406a6f:	inc    ecx
  406a70:	push   ss
  406a71:	lahf   
  406a72:	sbb    bh,bh
  406a74:	sub    eax,ecx
  406a76:	call   0xfe740b25
  406a7b:	push   0x419c60
  406a80:	cld    
  406a81:	out    0xfd,eax
  406a83:	jne    0x406aa3
  406a85:	and    DWORD PTR [edx+0x693381fe],ebx
  406a8b:	into   
  406a8c:	(bad)  
  406a8d:	mov    esi,edi
  406a8f:	imul   edx,DWORD PTR [edx],0x7e087434
  406a95:	pop    eax
  406a96:	(bad)  
  406a97:	jmp    DWORD PTR [ecx]
  406a99:	xor    esi,DWORD PTR [esp+edi*8+0x31]
  406a9d:	mov    ebp,0xc9e806
  406aa2:	(bad)  
  406aa3:	call   FWORD PTR [edi]
  406aa5:	or     al,BYTE PTR ds:0xed3fdb00
  406aab:	push   0xbeedc8a6
  406ab0:	mov    cl,0xbd
  406ab2:	or     bh,bh
  406ab4:	sub    eax,ecx
  406ab6:	call   0xfe73db92
  406abb:	leave  
  406abc:	in     al,0xc0
  406abe:	add    BYTE PTR [ebp+0x1d],dl
  406ac1:	and    eax,0xc482
	...
  406ad2:	add    BYTE PTR [esi+0xb],ch
  406ad5:	inc    esp
  406ad6:	cld    
  406ad7:	enterw 0x0,0xe3
  406adc:	(bad)  
  406add:	cli    
  406ade:	push   eax
  406adf:	(bad)  
  406ae0:	ror    DWORD PTR [edi+0x41],cl
  406ae3:	push   esi
  406ae4:	xor    esi,DWORD PTR [esp+ecx*1-0x5f]
  406ae8:	std    
  406ae9:	gs dec eax
  406aeb:	daa    
  406aec:	int3   
  406aed:	call   0x7dacaa64
  406af2:	push   DWORD PTR [edi+ebx*2]
  406af5:	neg    BYTE PTR ds:0x687ce4c6
  406afb:	mov    eax,ds:0xb528be6d
  406b01:	jle    0x406b02
  406b03:	stos   BYTE PTR es:[edi],al
  406b04:	cmp    DWORD PTR [ebp+0x75],edi
  406b07:	inc    edi
  406b08:	sbb    edx,eax
  406b0a:	in     eax,dx
  406b0b:	adc    BYTE PTR [ebx],dl
  406b0d:	jge    0x406b84
  406b0f:	pop    es
  406b10:	or     bh,BYTE PTR [edx]
  406b12:	retf   0x300
  406b15:	dec    ebx
  406b16:	ret    0xa147
  406b19:	xlat   BYTE PTR ds:[ebx]
  406b1a:	mov    ah,bl
  406b1c:	and    BYTE PTR [esi-0x4c],al
  406b1f:	jmp    0xbb07e81e
  406b24:	cmp    DWORD PTR [edi+edi*8-0x28],edi
  406b28:	mov    eax,ds:0x363f0002
  406b2d:	(bad)  
  406b2e:	or     esi,DWORD PTR [ecx+eiz*8]
  406b31:	cmc    
  406b32:	add    al,0xbf
  406b34:	cdq    
  406b35:	add    dh,BYTE PTR [ebp+0x0]
	...
  406b44:	add    BYTE PTR [eax],al
  406b46:	inc    edx
  406b47:	fadd   DWORD PTR ds:0x7da13f01
  406b4d:	jne    0x406b9e
  406b4f:	mov    edx,0xd970bf4
  406b54:	dec    edi
  406b55:	call   FWORD PTR [eax+0xafed4f1]
  406b5b:	mov    ecx,0x9a88666a
  406b60:	jp     0x406b4a
  406b62:	mov    DWORD PTR [eax+0x7a],ebp
  406b65:	jmp    edi
  406b67:	xchg   ebp,eax
  406b68:	retf   
  406b69:	inc    eax
  406b6a:	aas    
  406b6b:	jb     0x406b5d
  406b6d:	or     edx,DWORD PTR [edi+0x29]
  406b70:	dec    eax
  406b71:	jmp    DWORD PTR [eax+0x28]
  406b74:	cmp    BYTE PTR [eax+0x7ba6c859],0xe7
  406b7b:	icebp  
  406b7c:	call   0x6d85aa84
  406b81:	inc    esi
  406b82:	inc    ecx
  406b83:	mov    bl,0x8f
  406b85:	aam    0x20
  406b87:	enter  0x7bb1,0x30
  406b8b:	inc    ebp
  406b8c:	gs inc esi
  406b8e:	sub    DWORD PTR [ebx+0x7d21d477],esi
  406b94:	xor    BYTE PTR [edx+0x18],bh
  406b97:	mov    bl,0x50
  406b99:	test   esi,ecx
  406b9b:	(bad)  
  406b9c:	out    0x8c,eax
  406b9e:	ret    0x5673
  406ba1:	jnp    0x406ba3
  406ba3:	or     bh,bl
  406ba5:	jg     0x406b47
  406ba7:	(bad)  
  406ba8:	out    0x3,eax
	...
  406bb6:	add    BYTE PTR [eax],al
  406bb8:	add    dl,al
  406bba:	pop    esp
  406bbb:	sub    bh,BYTE PTR [edx-0x18]
  406bbe:	mov    dl,0x3f
  406bc0:	push   es
  406bc1:	dec    edi
  406bc2:	enter  0x3e7,0x53
  406bc6:	cmp    al,0x75
  406bc8:	xchg   ecx,eax
  406bc9:	std    
  406bca:	mov    cl,0x1f
  406bcc:	jnp    0x406b88
  406bce:	add    eax,0xaa58d3c4
  406bd3:	sahf   
  406bd4:	les    edi,FWORD PTR [eax+0x3fb4a0aa]
  406bda:	enter  0x43f2,0x32
  406bde:	mov    BYTE PTR [edx],0xde
  406be1:	mov    bl,0x5c
  406be3:	sub    bh,BYTE PTR [edx-0x68]
  406be6:	mov    dl,0x75
  406be8:	lds    esp,FWORD PTR [eax+ebx*1+0x50]
  406bec:	ins    BYTE PTR es:[edi],dx
  406bed:	stc    
  406bee:	or     al,ch
  406bf0:	imul   eax,DWORD PTR [ecx+0x79],0xffffffe8
  406bf4:	add    eax,DWORD PTR [eax+ecx*4+0x3d]
  406bf8:	push   es
  406bf9:	fs pop es
  406bfb:	ins    DWORD PTR es:[edi],dx
  406bfc:	nop
  406bfd:	jge    0x406bb0
  406bff:	add    DWORD PTR [esi-0x2bcbb1b],esi
  406c05:	retf   
  406c06:	dec    esp
  406c07:	mov    ch,0xa7
  406c09:	aad    0xb2
  406c0b:	imul   ebp,DWORD PTR [edx],0x9601077b
  406c11:	dec    edi
  406c12:	mov    esi,0xb18095e8
  406c17:	inc    BYTE PTR [esi+0x7eff7cef]
	...
  406c29:	add    BYTE PTR [eax],al
  406c2b:	add    BYTE PTR [ebp+0x77b5e918],ah
  406c31:	mov    cl,0xfe
  406c33:	outs   dx,BYTE PTR ds:[esi]
  406c34:	cmpps  xmm2,XMMWORD PTR [eax+0x51],0x49
  406c39:	cmp    esi,0x5e
  406c3c:	in     al,dx
  406c3d:	add    esi,edi
  406c3f:	fdiv   QWORD PTR [eax+eiz*4]
  406c42:	mov    al,ds:0xe9b1754f
  406c47:	clc    
  406c48:	xor    DWORD PTR [ecx-0x79409302],0xffffffff
  406c4f:	ss gs sbb dh,bh
  406c53:	je     0x406be5
  406c55:	mov    dl,0xfe
  406c57:	es movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  406c5a:	mov    cl,0xe9
  406c5c:	cmp    al,0x4b
  406c5e:	shl    esi,0xbf
  406c61:	sub    al,0xfe
  406c63:	push   cs
  406c64:	xor    eax,0x3645b4b1
  406c69:	mov    cl,0xfe
  406c6b:	adc    DWORD PTR ds:0x25e90178,eax
  406c71:	jnp    0x406c2c
  406c73:	out    dx,eax
  406c74:	push   ss
  406c75:	mov    cl,0xe9
  406c77:	call   0xb13f1d81
  406c7c:	add    esp,eax
  406c7e:	add    BYTE PTR [edx+esi*4],bh
  406c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c82:	and    BYTE PTR [ebp+0x74b0f7],0x6a
  406c89:	sbb    eax,0x2fa9cd46
  406c8e:	mov    BYTE PTR [ebp+0x0],al
	...
  406c9d:	add    BYTE PTR [eax],al
  406c9f:	stos   BYTE PTR es:[edi],al
  406ca0:	ret    
  406ca1:	ror    BYTE PTR [edi],0xe2
  406ca4:	aas    
  406ca5:	add    DWORD PTR [eax],eax
  406ca7:	popfw  
  406ca9:	dec    esp
  406caa:	push   edx
  406cab:	pop    ss
  406cac:	int3   
  406cad:	std    
  406cae:	jne    0x406c5a
  406cb0:	and    al,0x77
  406cb2:	int3   
  406cb3:	leave  
  406cb4:	cs push ecx
  406cb6:	push   0x419a99
  406cbb:	inc    esi
  406cbc:	das    
  406cbd:	je     0x406cc7
  406cbf:	mov    esi,0xa9ffff57
  406cc4:	and    al,0xc2
  406cc6:	enter  0x2f99,0x69
  406cca:	arpl   sp,ax
  406ccc:	test   esi,edi
  406cce:	(bad)  
  406ccf:	jecxz  0x406d09
  406cd1:	jmp    0xfe6fc72b
  406cd6:	push   eax
  406cd7:	push   cs
  406cd8:	push   eax
  406cd9:	push   ebx
  406cda:	inc    ecx
  406cdb:	(bad)  
  406cdc:	xchg   esp,eax
  406cdd:	push   DWORD PTR [ebp-0x22]
  406ce0:	sbb    al,0x72
  406ce2:	(bad)  
  406ce3:	sub    DWORD PTR [edi],ebp
  406ce5:	jmp    0xfe6f7b8c
  406cea:	push   0x419aaa
  406cef:	sub    DWORD PTR [ecx+0x892e8fa],esp
  406cf5:	(bad)  
  406cf6:	call   esi
  406cf8:	pushf  
  406cf9:	lahf   
  406cfa:	push   edx
  406cfb:	xlat   BYTE PTR ds:[ebx]
  406cfc:	les    edx,FWORD PTR [eax-0x1]
  406cff:	and    edi,DWORD PTR [ebp+0x52e8]
	...
  406d11:	add    BYTE PTR [eax+0x27e8fe2f],ch
  406d17:	std    
  406d18:	std    
  406d19:	(bad)  
  406d1a:	out    dx,al
  406d1b:	push   ebp
  406d1c:	push   ebx
  406d1d:	inc    ecx
  406d1e:	aas    
  406d1f:	lahf   
  406d20:	jns    0x406d97
  406d22:	jnp    0x406caa
  406d24:	adc    eax,0xd28970cc
  406d29:	addr16 enter 0xc1cc,0xff
  406d2e:	lock jns 0x406d20
  406d31:	pop    es
  406d32:	scas   eax,DWORD PTR es:[di]
  406d34:	js     0x406d35
  406d36:	push   eax
  406d37:	push   esi
  406d38:	loop   0x406d01
  406d3a:	dec    eax
  406d3b:	push   ecx
  406d3c:	jns    0x406db3
  406d3e:	inc    ebx
  406d3f:	inc    esi
  406d40:	fcmovb st,st(7)
  406d42:	cmp    BYTE PTR [edi],bh
  406d44:	dec    ebx
  406d45:	ret    0xa147
  406d48:	iret   
  406d49:	mov    bl,BYTE PTR [ebx]
  406d4b:	and    edi,DWORD PTR [esi]
  406d4d:	cld    
  406d4e:	mov    bl,cl
  406d50:	add    al,0x6a
  406d52:	inc    ebx
  406d53:	push   ds
  406d54:	out    dx,eax
  406d55:	pop    es
  406d56:	daa    
  406d57:	test   eax,0x3908ff3f
  406d5c:	mov    edi,0x6bd4b4fb
  406d61:	inc    edi
  406d62:	jle    0x406d05
  406d64:	cmp    BYTE PTR [edi],0x3f
  406d67:	ins    DWORD PTR es:[edi],dx
  406d68:	cmp    eax,0xc3504f68
  406d6d:	dec    DWORD PTR [ecx+0x3fb05f09]
  406d73:	mov    eax,ds:0xc00d
	...
  406d84:	add    BYTE PTR [ebx-0x39],cl
  406d87:	iret   
  406d88:	out    0xcf,eax
  406d8a:	lock js 0x406d8c
  406d8d:	xor    al,0xe1
  406d8f:	in     eax,dx
  406d90:	adc    ecx,DWORD PTR [edi]
  406d92:	dec    ecx
  406d93:	cdq    
  406d94:	push   edx
  406d95:	(bad)  
  406d96:	mov    al,ds:0xb932fed2
  406d9b:	push   0xffffffd7
  406d9d:	mov    ds:0x41e876b6,al
  406da2:	jmp    0xc8d46d1f
  406da7:	sbb    al,BYTE PTR [esi+eax*8-0x51]
  406dab:	fbstp  TBYTE PTR [edi-0x80]
  406dae:	mov    edx,0x35403c86
  406db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406db4:	jmp    0xb957:0xc3daf56
  406dbb:	mov    esi,0xb226077
  406dc0:	ja     0x406d94
  406dc2:	mov    edi,0xaf515fbf
  406dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dc8:	jmp    0x8d57:0xc15af24
  406dcf:	xchg   esi,eax
  406dd0:	ja     0x406e0a
  406dd2:	and    al,dh
  406dd4:	jbe    0x406d80
  406dd6:	ror    BYTE PTR [edi+0x7faf2953],0xec
  406ddd:	pop    esi
  406dde:	sbb    DWORD PTR [ecx],ebp
  406de0:	add    al,0x18
  406de2:	xor    eax,0xad7a6be0
  406de7:	addr16 ja 0x406dea
	...
  406df6:	add    BYTE PTR [eax],al
  406df8:	xchg   edi,eax
  406df9:	sbb    BYTE PTR [ecx-0x2251ff3c],bh
  406dff:	or     esp,edi
  406e01:	out    dx,eax
  406e02:	dec    esp
  406e03:	ja     0x406df5
  406e05:	pop    ds
  406e06:	outs   dx,BYTE PTR ds:[esi]
  406e07:	aad    0x7f
  406e09:	enter  0xf13e,0x38
  406e0d:	mov    al,ds:0xaed87903
  406e12:	shr    BYTE PTR [edi+0x76e8096e],0x52
  406e19:	ror    BYTE PTR [edi],0x16
  406e1c:	ret    0x17ae
  406e1f:	in     al,dx
  406e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e21:	sbb    BYTE PTR [ecx-0xfcb4ffd],ch
  406e27:	imul   ecx,DWORD PTR [esi-0x53],0xffffffff
  406e2b:	jbe    0x406e44
  406e2d:	rol    BYTE PTR [eax],1
  406e2f:	fwait
  406e30:	sub    DWORD PTR [esi-0x5fbb8b01],0x5
  406e37:	in     al,0x11
  406e39:	scas   eax,DWORD PTR es:[edi]
  406e3a:	(bad)  
  406e3b:	push   esp
  406e3c:	pop    es
  406e3d:	scas   eax,DWORD PTR es:[edi]
  406e3e:	je     0x406e21
  406e40:	in     al,0xb4
  406e42:	(bad)
  406e45:	push   cs
  406e46:	enter  0x68ab,0xae
  406e4a:	push   ebp
  406e4b:	jb     0x406e25
  406e4d:	dec    edx
  406e4e:	jl     0x406e35
  406e50:	cmp    al,0x34
  406e52:	pop    ss
  406e53:	scas   al,BYTE PTR es:[edi]
  406e54:	dec    edi
  406e55:	mov    esi,0xaf371cfd
  406e5a:	je     0x406e4d
	...
  406e68:	add    BYTE PTR [eax],al
  406e6a:	add    ah,dl
  406e6c:	ja     0x406e58
  406e6e:	xchg   esi,eax
  406e6f:	mov    cl,0xad
  406e71:	je     0x406e50
  406e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e74:	sbb    esi,eax
  406e76:	xchg   BYTE PTR [ecx+0x3cedc37f],dh
  406e7c:	adc    ecx,DWORD PTR [edx-0x27b427b]
  406e82:	add    edi,DWORD PTR [ebx]
  406e84:	lods   eax,DWORD PTR ds:[esi]
  406e85:	je     0x406e84
  406e87:	xchg   ecx,eax
  406e88:	xor    edx,DWORD PTR [ecx]
  406e8a:	pop    esi
  406e8b:	cmpps  xmm5,xmm0,0xb8
  406e8f:	xchg   BYTE PTR [ebp+0x347ce2fe],ch
  406e95:	pop    ebp
  406e96:	jo     0x406e97
  406e98:	mov    cl,0x69
  406e9a:	(bad)  ds:0xcf360109
  406ea0:	mov    cl,0xe9
  406ea2:	and    eax,0x91fead86
  406ea7:	cmp    al,0xc8
  406ea9:	in     eax,dx
  406eaa:	pop    edi
  406eab:	in     al,dx
  406eac:	scas   al,BYTE PTR es:[edi]
  406ead:	je     0x406e90
  406eaf:	and    al,0x63
  406eb1:	dec    BYTE PTR [esi]
  406eb3:	sub    DWORD PTR [eax],esp
  406eb5:	sbb    al,BYTE PTR [eax]
  406eb7:	lds    eax,FWORD PTR [esi+edi*8-0x16cad402]
  406ebe:	test   eax,0x68fe365c
  406ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ec4:	leave  
  406ec5:	in     eax,dx
  406ec6:	mov    esi,0x8743346
  406ecb:	outs   dx,BYTE PTR ds:[esi]
  406ecc:	inc    edx
  406ecd:	(bad)  
  406ece:	inc    DWORD PTR [eax]
	...
  406edc:	add    BYTE PTR [eax],al
  406ede:	xchg   ecx,eax
  406edf:	pushf  
  406ee0:	and    al,0x53
  406ee2:	daa    
  406ee3:	(bad)  
  406ee4:	std    
  406ee5:	jne    0x406e69
  406ee7:	sbb    al,0x8f
  406ee9:	retf   0x33a1
  406eec:	imul   eax,DWORD PTR [edx],0x50bf2466
  406ef2:	mov    eax,ds:0x31e8069d
  406ef7:	xor    edi,esi
  406ef9:	jmp    DWORD PTR [ecx-0x10170563]
  406eff:	in     eax,dx
  406f00:	std    
  406f01:	(bad)  
  406f02:	fisttp WORD PTR [ecx]
  406f04:	adc    DWORD PTR [eax],eax
  406f06:	dec    ebx
  406f07:	aas    
  406f08:	in     eax,dx
  406f09:	push   0x4197e5
  406f0e:	xchg   ecx,eax
  406f0f:	popf   
  406f10:	or     ch,al
  406f12:	cmp    al,BYTE PTR [edx]
  406f14:	(bad)  
  406f15:	jmp    DWORD PTR [ecx+0x6e500e9d]
  406f1b:	arpl   bx,cx
  406f1d:	call   DWORD PTR [ecx-0x49eb8bcd]
  406f23:	xor    esi,DWORD PTR [eax+ecx*1-0x72]
  406f27:	idiv   ch
  406f29:	jmp    DWORD PTR [ecx]
  406f2b:	pushf  
  406f2c:	aas    
  406f2d:	push   ebx
  406f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2f:	enter  0x75fd,0xf2
  406f33:	and    BYTE PTR [ebx-0x36],al
  406f36:	and    DWORD PTR [ebx],esi
  406f38:	(bad)  
  406f39:	jne    0x406f01
  406f3b:	cwde   
  406f3c:	out    0x8d,al
  406f3e:	aas    
  406f3f:	jmp    0x416eb7
	...
  406f50:	add    BYTE PTR [eax-0x57aff1ad],dh
  406f56:	sub    ecx,DWORD PTR [edx]
  406f58:	call   0xffb61da0
  406f5d:	xchg   al,ah
  406f5f:	adc    al,0x0
  406f61:	jmp    0x75a2:0x83836929
  406f68:	jne    0x406f9d
  406f6a:	xchg   edi,eax
  406f6b:	dec    esi
  406f6c:	retf   0x9578
  406f6f:	or     eax,eax
  406f71:	jmp    0x406f5b
  406f73:	mov    DWORD PTR [ebp+0x6b],eax
  406f76:	push   ss
  406f77:	add    eax,0xea2c5000
  406f7c:	paddsb mm3,mm7
  406f7f:	add    al,0xff
  406f81:	retf   0x755a
  406f84:	jne    0x406fbd
  406f86:	push   edi
  406f87:	mov    edi,edi
  406f89:	inc    eax
  406f8a:	dec    ebp
  406f8b:	jmp    0x5468:0xb4423f00
  406f92:	out    dx,al
  406f93:	sar    edi,0x29
  406f96:	lods   eax,DWORD PTR ds:[esi]
  406f97:	jbe    0x406f98
  406f99:	stos   BYTE PTR es:[edi],al
  406f9a:	mov    ecx,0x3318766a
  406f9f:	jne    0x407009
  406fa1:	cmp    eax,0x97be65a1
  406fa6:	mov    ebx,0xa3f40cf
  406fab:	out    dx,eax
  406fac:	sti    
  406fad:	clc    
  406fae:	mov    WORD PTR [edx],cs
  406fb0:	call   0xffb56a13
	...
  406fc1:	add    BYTE PTR [eax],al
  406fc3:	add    al,ch
  406fc5:	ins    BYTE PTR es:[edi],dx
  406fc6:	jbe    0x406fb0
  406fc8:	adc    ebx,esp
  406fca:	je     0x406fcb
  406fcc:	push   es
  406fcd:	loopne 0x406fd8
  406fcf:	add    BYTE PTR [edx+0x26],ch
  406fd2:	add    WORD PTR [ebx],0xffc9
  406fd6:	and    ebp,ecx
  406fd8:	shl    BYTE PTR [ecx],0xe5
  406fdb:	je     0x40700f
  406fdd:	sar    bh,0xd2
  406fe0:	jge    0x406f8d
  406fe2:	jp     0x62d11bea
  406fe8:	or     eax,0xe1ebe809
  406fed:	push   ss
  406fee:	test   eax,0x86f59003
  406ff3:	retf   
  406ff4:	inc    edi
  406ff6:	out    0xf9,al
  406ff8:	cmp    BYTE PTR [eax-0x54878d72],ah
  406ffe:	inc    eax
  406fff:	ja     0x40700e
  407001:	or     eax,ebp
  407003:	(bad)  [ebp+0x60042916]
  407009:	cmc    
  40700a:	inc    esi
  40700b:	mov    esp,0xf9b6c7ff
  407010:	cmp    BYTE PTR [eax-0x54b78daa],ah
  407016:	adc    BYTE PTR [ebp+ebp*8+0x8],ch
  40701a:	call   0x295651fa
  40701f:	add    al,0x30
  407021:	cmc    
  407022:	push   es
  407023:	mov    esp,0xf986c87f
	...
  407034:	add    BYTE PTR [eax],al
  407036:	add    BYTE PTR [eax],bh
  407038:	mov    al,ds:0xab1871fe
  40703d:	add    BYTE PTR [ecx],cl
  40703f:	ins    BYTE PTR es:[edi],dx
  407040:	or     eax,ebp
  407042:	fndisi(8087 only) 
  407044:	adc    eax,0xf50003a9
  407049:	(bad)  
  40704a:	mov    ebx,0xf956c87f
  40704f:	cmp    BYTE PTR [eax-0x55178e3a],ah
  407055:	shl    BYTE PTR [ebp+ecx*4+0x9],1
  407059:	call   0x1567c39
  40705e:	test   al,0x3c
  407060:	stos   DWORD PTR es:[edi],eax
  407061:	xor    al,0xc6
  407063:	test   BYTE PTR [edi],al
  407065:	add    DWORD PTR [esi],esp
  407067:	mov    dl,0xe8
  40706a:	scas   eax,DWORD PTR es:[edi]
  40706b:	cs stos DWORD PTR es:[edi],eax
  40706d:	inc    BYTE PTR [ecx-0x16bfe9d7]
  407073:	test   BYTE PTR [ebx+0x53],bh
  407076:	test   al,0x3c
  407078:	stos   DWORD PTR es:[edi],eax
  407079:	xor    al,0x86
  40707b:	aam    0x7
  40707d:	add    esi,esi
  40707f:	xchg   edi,eax
  407080:	ret    0xb7e8
  407083:	push   cs
  407084:	stos   DWORD PTR es:[edi],eax
  407085:	(bad)  
  407086:	push   ecx
  407087:	adc    edx,DWORD PTR [esi]
  407089:	inc    eax
  40708a:	jmp    0x2893ec23
  40708f:	cmp    ebp,DWORD PTR [ebx+0x7ab4634]
  407095:	add    esi,eax
  407097:	addr16 ret 0xdfe8
	...
  4070a7:	add    BYTE PTR [eax],al
  4070a9:	add    dh,cl
  4070ab:	stos   BYTE PTR es:[edi],al
  4070ac:	inc    BYTE PTR [ecx+0x46]
  4070af:	pop    ss
  4070b0:	inc    eax
  4070b1:	jmp    0x2893ec1a
  4070b6:	cmp    ebp,DWORD PTR [ebx+0x8fb0634]
  4070bc:	add    DWORD PTR [esi-0x18173dc9],edx
  4070c2:	scas   al,BYTE PTR es:[edi]
  4070c3:	test   eax,0x169a11fe
  4070c8:	inc    eax
  4070c9:	jmp    0x2893d3c2
  4070ce:	cmp    esp,DWORD PTR [eax]
  4070d0:	add    ebp,ecx
  4070d2:	cmp    al,0x48
  4070d4:	(bad)  
  4070d5:	fadd   QWORD PTR [edx+eiz*4]
  4070d8:	out    dx,al
  4070d9:	pop    esp
  4070da:	ins    DWORD PTR es:[edi],dx
  4070db:	test   eax,0x90a5a69
  4070e0:	add    ecx,eax
  4070e2:	cdq    
  4070e3:	push   ss
  4070e4:	inc    eax
  4070e5:	add    dh,dl
  4070e7:	lea    eax,[eax]
  4070e9:	add    dh,ah
  4070eb:	inc    ebp
  4070ec:	(bad)  
  4070ed:	jne    0x4070cd
  4070ef:	or     eax,0x3619fdd9
  4070f4:	imul   edi,eax,0x67fe8484
  4070fa:	add    DWORD PTR [ebx-0x3c41ffbf],edx
  407100:	add    BYTE PTR [eax],al
  407102:	push   ss
  407103:	ss je  0x40710e
  407106:	dec    esi
  407107:	add    al,0xfc
  407109:	call   FWORD PTR [ecx+0x53058e]
	...
  40711b:	add    BYTE PTR [eax],al
  40711d:	out    0xc5,eax
  40711f:	push   0xfe84a4a7
  407124:	addr16 xchg esp,eax
  407126:	lds    eax,FWORD PTR [eax]
  407128:	sbb    BYTE PTR [ecx-0x4317f94f],0x19
  40712f:	(bad)  
  407130:	(bad)  
  407131:	(bad)  
  407132:	and    al,0x53
  407134:	inc    ecx
  407135:	push   esi
  407136:	(bad)  
  407137:	int    0x52
  407139:	daa    
  40713a:	les    ebp,FWORD PTR [eax+0x2]
  40713d:	lds    ax,DWORD PTR [eax-0x1953ec01]
  407144:	xchg   ebx,eax
  407145:	fwait
  407146:	aaa    
  407147:	(bad)  
  407148:	push   0x4191d5
  40714d:	ds jmp 0x8d56b2a5
  407153:	add    BYTE PTR [eax],al
  407155:	push   ss
  407156:	inc    ebp
  407157:	(bad)  
  407158:	jne    0x407168
  40715a:	or     eax,0x3789fd7d
  40715f:	imul   edi,eax,0x67fe8524
  407165:	dec    ebx
  407166:	xchg   edx,eax
  407167:	inc    ecx
  407168:	add    BYTE PTR [esi],cl
  40716a:	ret    
  40716b:	add    BYTE PTR [eax],al
  40716d:	aas    
  40716e:	pop    ds
  40716f:	jo     0x4071e6
  407171:	aaa    
  407172:	pop    es
  407173:	out    0xfc,al
  407175:	loopne 0x407178
  407177:	fld    QWORD PTR [esp+ebp*2]
  40717a:	pusha  
  40717b:	add    ch,BYTE PTR [eax+0x2]
  40717e:	dec    ebp
  40717f:	ret    
  407180:	inc    DWORD PTR [eax]
	...
  40718e:	add    BYTE PTR [eax],al
  407190:	pusha  
  407191:	popf   
  407192:	add    al,BYTE PTR [eax]
  407194:	mov    edi,0xa707f5e1
  407199:	pop    eax
  40719a:	outs   dx,DWORD PTR ds:[esi]
  40719b:	push   DWORD PTR [eax+0x32ff0c44]
  4071a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071a2:	pop    edx
  4071a3:	or     DWORD PTR [ecx+0x5c6a6fc1],esp
  4071a9:	stos   BYTE PTR es:[edi],al
  4071aa:	test   DWORD PTR [edi],0xff6fb1a7
  4071b0:	mov    BYTE PTR [esi+ecx*1-0x1],al
  4071b4:	or     dh,BYTE PTR [edi-0x76850aa6]
  4071ba:	jno    0x4071bb
  4071bc:	jmp    0x7487:0x37757192
  4071c3:	shl    DWORD PTR [eax-0x7f],0x3b
  4071c7:	ret    0x9f43
  4071ca:	xlat   BYTE PTR ds:[ebx]
  4071cb:	mov    ah,BYTE PTR [ebx+0x1d]
  4071ce:	out    dx,eax
  4071cf:	or     edi,DWORD PTR [edi]
  4071d1:	repz jecxz 0x40723b
  4071d4:	jmp    0x3a4033c6
  4071d9:	mov    ebp,0x7736e800
  4071de:	jno    0x4071df
  4071e0:	(bad)
  4071e4:	adc    BYTE PTR [eax],dl
  4071e6:	sar    dh,cl
  4071e8:	xchg   edx,eax
  4071e9:	cdq    
  4071ea:	pop    edx
  4071eb:	mov    al,ds:0xe8711f27
  4071f0:	sub    DWORD PTR [ebp+0x71],0xff
	...
  407203:	xchg   edi,eax
  407204:	enter  0xd4ce,0x7f
  407208:	enter  0xf65e,0x44
  40720c:	mov    al,0x30
  40720e:	dec    eax
  40720f:	call   0x401c2abb
  407214:	enter  0xb156,0x6f
  407218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407219:	mov    ch,0xfb
  40721b:	fsub   DWORD PTR [edi]
  40721d:	inc    eax
  40721e:	jo     0x4071e8
  407220:	mov    al,0x5
  407222:	dec    eax
  407223:	shl    BYTE PTR [edi+0x90ded90],0xe8
  40722a:	jo     0x407256
  40722c:	aam    0xff
  40722e:	mov    bh,0x80
  407230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407231:	psrlq  mm3,QWORD PTR [eax]
  407234:	retf   0x60e7
  407237:	fprem  
  407239:	(bad)  
  40723a:	cmc    
  40723b:	cmp    BYTE PTR [eax-0x5877a46a],dh
  407241:	add    BYTE PTR [edi],al
  407243:	jnp    0x4071ec
  407245:	out    0x3d,eax
  407247:	jge    0x407219
  407249:	out    0xd8,eax
  40724b:	lds    esi,FWORD PTR [edi+edx*8+0x1db034f9]
  407252:	cmp    al,0x60
  407254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407255:	repz inc ebx
  407257:	rol    ecx,cl
  407259:	dec    edi
  40725a:	mov    ebx,0xd3e808ed
  40725f:	pusha  
  407260:	and    DWORD PTR [edi+0x37f8406f],0x6f
	...
  407276:	mov    dl,0xd0
  407278:	(bad)  
  407279:	loopne 0x4072ac
  40727b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40727c:	xchg   edi,eax
  40727d:	pop    esp
  40727e:	adc    BYTE PTR [ebx-0x76099071],cl
  407284:	lock add esi,DWORD PTR [edx+0x53]
  407288:	mov    WORD PTR [ebx+0x301a7fb],es
  40728e:	inc    ebx
  40728f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407290:	je     0x40726b
  407292:	xchg   ecx,eax
  407293:	sbb    eax,0x2f36660d
  407298:	dec    ecx
  407299:	test   al,0x3c
  40729b:	mov    al,0xd3
  40729d:	das    
  40729e:	pop    eax
  40729f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072a0:	mov    BYTE PTR [eax+ebp*2-0x29b9fece],ah
  4072a7:	mov    edx,0xa5d0b4fd
  4072ac:	xor    al,0xce
  4072ae:	test   BYTE PTR [edi],al
  4072b0:	add    DWORD PTR [ecx-0x71],eax
  4072b3:	(bad)  
  4072b4:	(bad)  
  4072b5:	cmp    cl,BYTE PTR es:0xa73c93fd
  4072bc:	je     0x4072af
  4072be:	sbb    DWORD PTR ds:0x2f660e0d,ebx
  4072c4:	dec    ecx
  4072c5:	test   al,0x3c
  4072c7:	mov    al,0xa7
  4072c9:	daa    
  4072ca:	and    BYTE PTR [edi+0x5514ac88],ah
  4072d0:	inc    esp
  4072d1:	add    DWORD PTR [ebx-0x5b],ebp
  4072d4:	je     0x4072db
  4072d6:	call   0x11e7ff7
	...
  4072e7:	add    BYTE PTR [eax],al
  4072e9:	aaa    
  4072ea:	das    
  4072eb:	dec    ecx
  4072ec:	sub    BYTE PTR [ebx-0x50],al
  4072ef:	(bad)  
  4072f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072f1:	shl    DWORD PTR [esi+0x31d32c88],1
  4072f7:	add    DWORD PTR [esi+0x3cfdc657],edi
  4072fd:	aas    
  4072fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ff:	xor    al,0x46
  407301:	add    DWORD PTR [edi],0x1
  407304:	xchg   ecx,eax
  407305:	and    al,0x8c
  407307:	(bad)  
  407308:	sahf   
  407309:	mov    bl,0xb
  40730b:	in     eax,dx
  40730c:	test   DWORD PTR fs:[ebp-0x15d871af],0xa61b00fd
  407317:	push   DWORD PTR ds:0x416439
  40731d:	mov    esi,0x91ffc4a9
  407322:	and    al,0x44
  407324:	in     al,0x65
  407326:	cwde   
  407327:	cli    
  407328:	add    cl,ah
  40732a:	dec    ebp
  40732b:	xchg   ebp,eax
  40732c:	add    dh,dl
  40732e:	leave  
  40732f:	cmp    DWORD PTR [ebp-0x72],0x4c840dc9
  407336:	leave  
  407337:	add    BYTE PTR [eax],al
  407339:	gs cwde 
  40733b:	repnz add cl,ah
  40733e:	dec    ebp
  40733f:	add    DWORD PTR [eax],0x75fdc9d6
  407345:	mov    ?,WORD PTR [esi]
  407347:	je     0x407351
  407349:	dec    esi
  40734a:	or     BYTE PTR [esi+0xff],bh
	...
  40735c:	push   ecx
  40735d:	ss je  0x40735c
  407360:	xor    DWORD PTR [eax+0x98ae806],esp
  407366:	(bad)  
  407367:	call   DWORD PTR [ecx+0xbfff69d]
  40736d:	mov    eax,ds:0x365619e6
  407372:	(bad)  
  407373:	call   FWORD PTR [ebx]
  407375:	and    dh,bh
  407377:	jne    0x4073e7
  407379:	add    DWORD PTR [edi],ecx
  40737b:	rcl    BYTE PTR [ecx+0x3e7d8033],0xb7
  407382:	add    bh,ch
  407384:	rcr    BYTE PTR [ebp+0x1c0bff0d],0xfe
  40738b:	jne    0x4073eb
  40738d:	add    ebx,edi
  40738f:	mov    edi,0xeea3391
  407394:	loope  0x407332
  407396:	out    0xff,al
  407398:	dec    ebx
  407399:	sbb    al,0xfe
  40739b:	jne    0x4073dc
  40739d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40739e:	pop    edx
  40739f:	mov    esi,0xff6c55e0
  4073a4:	xchg   edx,eax
  4073a5:	cmp    ebp,DWORD PTR [ebp+esi*2+0x47]
  4073a9:	aaa    
  4073aa:	dec    esp
  4073ab:	mov    edi,0x7d801e08
  4073b0:	sbb    ebp,DWORD PTR [edi-0x5443eb0a]
  4073b6:	bound  eax,QWORD PTR [edx+ebp*2]
  4073b9:	mov    dh,0x79
  4073bb:	inc    ebp
  4073bc:	jecxz  0x4073bb
  4073be:	xor    al,0xff
	...
  4073cc:	add    BYTE PTR [eax],al
  4073ce:	add    BYTE PTR [edx-0x59],ch
  4073d1:	pop    edx
  4073d2:	fs cwde 
  4073d4:	or     eax,0x7945eb6c
  4073d9:	add    bh,bh
  4073db:	push   edx
  4073dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073dd:	pop    edx
  4073de:	pop    eax
  4073df:	xor    ch,0x6b
  4073e2:	push   DWORD PTR [edx]
  4073e4:	ret    
  4073e5:	pop    esp
  4073e6:	lahf   
  4073e7:	jge    0x4073ae
  4073e9:	imul   edi,edi,0x32
  4073ec:	mov    ebx,0xd57d975c
  4073f1:	imul   edi,edi,0x12
  4073f4:	(bad)  
  4073f5:	pop    esp
  4073f6:	(bad)  
  4073f7:	jge    0x40739e
  4073f9:	ins    DWORD PTR es:[edi],dx
  4073fa:	call   DWORD PTR [edx]
  4073fc:	lahf   
  4073fd:	pop    edx
  4073fe:	xchg   DWORD PTR [ebp-0x4b],edi
  407401:	ins    DWORD PTR es:[edi],dx
  407402:	push   edx
  407404:	jp     0x407460
  407406:	jg     0x407485
  407408:	test   DWORD PTR [ebp-0x1],ebp
  40740b:	repnz xchg edx,eax
  40740d:	pop    edx
  40740e:	ja     0x40748d
  407410:	xchg   ebp,eax
  407411:	ins    DWORD PTR es:[edi],dx
  407412:	leave  
  407413:	jge    0x4073e7
  407415:	add    al,0x55
  407417:	les    edx,FWORD PTR [edx+0x654fc483]
  40741d:	ins    DWORD PTR es:[edi],dx
  40741e:	call   edi
  407420:	add    DWORD PTR [edx],0xfc8f9ef
  407426:	arpl   WORD PTR [ecx+ecx*1-0x7ed2418],cx
  40742d:	sub    BYTE PTR [edi+edx*4],al
  407430:	jns    0x40746d
  407432:	ret    
	...
  40743f:	add    BYTE PTR [eax],al
  407441:	add    BYTE PTR [eax],bl
  407443:	sub    al,0xaf
  407445:	sar    BYTE PTR [edi-0x38],1
  407448:	cmovb  ebp,DWORD PTR [ecx+ecx*1-0x18]
  40744d:	fcomi  st,st(4)
  40744f:	imul   DWORD PTR [eax]
  407451:	add    al,0xf8
  407453:	sbb    eax,0xd06a6cf4
  407458:	dec    edi
  407459:	(bad)  
  40745b:	mov    ds:0xc84ddb57,eax
  407460:	lods   eax,DWORD PTR ds:[esi]
  407462:	addr16 out 0x9b,al
  407465:	ret    0x2bd0
  407468:	fst    st(7)
  40746a:	jg     0x407434
  40746c:	mov    edi,0xe8096b12
  407471:	(bad)  [edi+0x2703a8f7]
  407477:	mov    ch,0xbb
  407479:	ret    0x2ba8
  40747c:	in     eax,dx
  40747d:	xlat   BYTE PTR ds:[ebx]
  40747e:	inc    edi
  407480:	push   cs
  407481:	test   BYTE PTR [ebx+eiz*4+0x7d],0xfb
  407486:	cwde   
  407487:	(bad)  
  407489:	imul   ecx,DWORD PTR [eax-0x6ffc23d0],0x62
  407490:	add    BYTE PTR [ecx-0x2417f6ed],0xef
  407497:	sti    
  407498:	sub    BYTE PTR [edi+edx*8],al
  40749b:	daa    
  40749c:	cmp    al,0xc5
  40749e:	pusha  
  40749f:	sub    ecx,DWORD PTR [esi]
  4074a1:	sar    bh,1
  4074a3:	(bad)  
  4074a4:	dec    edi
  4074a5:	sbb    DWORD PTR [eax],eax
	...
  4074b3:	add    BYTE PTR [eax],al
  4074b5:	jmp    0x4074bf
  4074b7:	call   0x13c6e97
  4074bc:	sub    BYTE PTR [ebx],bh
  4074be:	mov    ds:0x1da5dd74,eax
  4074c3:	or     DWORD PTR [ecx-0x61015aca],edx
  4074c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074ca:	or     eax,0x1d9439fd
  4074cf:	or     eax,0x492b4e8e
  4074d4:	sub    BYTE PTR [ebx],bh
  4074d6:	mov    al,0x4e
  4074d8:	push   ebx
  4074d9:	inc    ebx
  4074da:	enter  0xa909,0xe
  4074de:	and    esi,eax
  4074e0:	and    al,0x6b
  4074e2:	enter  0xe900,0x3c
  4074e6:	mov    eax,DWORD PTR [ebp+edx*2+0x54]
  4074ea:	retf   
  4074eb:	add    cl,ch
  4074ed:	add    ah,BYTE PTR [ebx-0x5d051698]
  4074f3:	push   0xf50d57e9
  4074f8:	cdq    
  4074f9:	inc    edi
  4074fa:	dec    ebp
  4074fb:	cmc    
  4074fc:	ds push esp
  4074fe:	mov    ds:0x9aae2e51,eax
  407503:	(bad)  
  407504:	pushf  
  407505:	sbb    BYTE PTR [eax-0x37bcacdc],dh
  40750b:	or     DWORD PTR [ecx],ebp
  40750d:	scas   eax,DWORD PTR es:[edi]
  40750e:	enter  0xa9e9,0x74
  407512:	add    eax,0xa33ca849
  407517:	je     0x407506
	...
  407525:	add    BYTE PTR [eax],al
  407527:	add    ah,ah
  407529:	in     eax,dx
  40752a:	ret    
  40752b:	not    BYTE PTR ds:0xbe5cd14f
  407531:	fwait
  407532:	mul    dh
  407534:	in     eax,0xf7
  407536:	push   edx
  407537:	rol    DWORD PTR [ebp-0x1c290175],1
  40753d:	dec    esp
  40753e:	icebp  
  40753f:	(bad)  
  407540:	in     eax,0xa2
  407542:	inc    BYTE PTR [eax]
  407544:	rcl    DWORD PTR [esi],cl
  407546:	idiv   bh
  407548:	mov    DWORD PTR ds:0x177e0874,ebp
  40754e:	(bad)  
  40754f:	(bad)  
  407550:	jmp    0xd2312983
  407555:	cs (bad) 
  407557:	call   0x3e80c7
  40755c:	leave  
  40755d:	mov    dh,dh
  40755f:	jmp    0x4074f4
  407561:	cs je  0x407560
  407564:	scas   al,BYTE PTR es:[edi]
  407565:	loop   0x40750e
  407567:	add    BYTE PTR [esi],dl
  407569:	in     eax,0xc2
  40756b:	or     BYTE PTR [esi],dl
  40756d:	jns    0x4074fa
  40756f:	in     al,dx
  407570:	gs loope 0x40756f
  407573:	push   0xffffffe6
  407575:	add    DWORD PTR [edi+edi*8],0x13
  407579:	sahf   
  40757a:	out    0x72,al
  40757c:	enter  0xfe2e,0x89
  407580:	mov    ds:0xb5896929,eax
  407585:	mov    esi,?
  407587:	(bad)  
  407588:	xchg   ebx,eax
  407589:	popf   
  40758a:	out    0xb7,al
	...
  407598:	add    BYTE PTR [eax],al
  40759a:	add    BYTE PTR [eax],cl
  40759c:	cs (bad) 
  40759e:	push   0xffffffa6
  4075a0:	jge    0x407556
  4075a2:	push   ebx
  4075a3:	out    0xc5,eax
  4075a5:	push   0xfe8ce589
  4075aa:	inc    BYTE PTR [ebx-0x59beb95a]
  4075b0:	std    
  4075b1:	sub    esp,eax
  4075b3:	cmp    DWORD PTR [esi],ebp
  4075b5:	or     al,al
  4075b7:	adc    bl,BYTE PTR [esi-0x4e76afb2]
  4075bd:	push   es
  4075be:	call   0x3e9ed6
  4075c3:	mov    cs,esp
  4075c5:	mov    edi,0xfe8289ff
  4075ca:	addr16 aas 
  4075cc:	hlt    
  4075cd:	mov    esp,0x89073f40
  4075d2:	push   ebx
  4075d3:	(bad)  
  4075d4:	scas   al,BYTE PTR es:[edi]
  4075d5:	imul   esi,DWORD PTR ds:0xffc1d6e0,0xff3eb058
  4075df:	cmp    BYTE PTR [esi-0x20bf8bbe],ah
  4075e5:	aam    0xfe
  4075e7:	mov    dl,0x97
  4075e9:	pop    edx
  4075ea:	imul   esp,DWORD PTR [ebx],0x3a
  4075ed:	push   0x686ef1e8
  4075f2:	jmp    DWORD PTR [ebp+0x6cb5daaf]
  4075f8:	lock add al,0x68
  4075fb:	mov    dh,0xbd
  4075fd:	sar    edi,0x0
	...
  40760c:	add    BYTE PTR [eax],al
  40760e:	pusha  
  40760f:	lods   eax,DWORD PTR ds:[esi]
  407610:	add    al,BYTE PTR [eax]
  407612:	mov    edi,0xe8c34cf6
  407617:	add    esp,edi
  407619:	mov    edi,0x4fd2aa6b
  40761e:	fdivr  DWORD PTR [ebx-0x6]
  407621:	out    0x7d,eax
  407623:	or     ebp,DWORD PTR [eax-0x1]
  407626:	xlat   BYTE PTR ds:[ebx]
  407627:	push   ebx
  407628:	inc    ebp
  407629:	inc    eax
  40762b:	test   BYTE PTR [edx],al
  40762d:	push   0xffc36702
  407632:	sbb    BYTE PTR [ebx-0x2c],cl
  407635:	inc    eax
  407636:	aas    
  407637:	aaa    
  407638:	add    al,0x0
  40763a:	aas    
  40763b:	das    
  40763c:	pop    ebp
  40763d:	scas   eax,DWORD PTR es:[edi]
  40763e:	jl     0x407611
  407640:	or     edi,DWORD PTR [bx+0x22]
  407644:	stc    
  407645:	dec    edi
  407646:	out    dx,eax
  407647:	mov    eax,ds:0x779707ef
  40764c:	data16 (bad) 
  40764e:	js     0x407616
  407650:	add    al,0x70
  407653:	(bad)  
  407654:	out    0xdd,al
  407656:	inc    esi
  407657:	mov    eax,ds:0x1d58fc55
  40765c:	aam    0x68
  40765e:	pop    eax
  40765f:	sub    eax,0xcfca690b
  407664:	iret   
  407665:	repz inc esp
  407667:	mov    al,ds:0xa124ddbf
  40766c:	cmp    eax,0xac2720fc
  407671:	push   0x0
	...
  40767e:	add    BYTE PTR [eax],al
  407680:	add    BYTE PTR [eax],dh
  407682:	mov    al,ds:0x1628681d
  407687:	lock pop ebx
  407689:	push   es
  40768a:	pop    esi
  40768b:	xchg   edi,eax
  40768c:	push   0x3e48b06
  407691:	push   0x53
  407693:	xchg   esp,eax
  407694:	test   BYTE PTR [ebx],al
  407696:	popf   
  407697:	push   ss
  407698:	rcl    DWORD PTR [esi-0x7fefe38],1
  40769e:	adc    eax,0x5d745be0
  4076a3:	addr16 push 0x7c5c05b6
  4076a9:	sub    dh,BYTE PTR [ebx+0x52d8c2af]
  4076af:	or     eax,0xe8097859
  4076b4:	or     DWORD PTR [eax],0xffffffc8
  4076b7:	mov    bl,0xf4
  4076b9:	pop    eax
  4076ba:	cmp    ebx,DWORD PTR [edx+eax*8+0x623ff6b8]
  4076c1:	out    0xc8,eax
  4076c3:	out    0xfc,eax
  4076c5:	call   0x991275de
  4076ca:	lods   al,BYTE PTR ds:[esi]
  4076cb:	and    DWORD PTR [eax-0x68],ebp
  4076ce:	clc    
  4076cf:	jg     0x4076d4
  4076d1:	aas    
  4076d2:	scas   eax,DWORD PTR es:[edi]
  4076d3:	inc    esi
  4076d4:	fcmovnu st,st(1)
  4076d6:	hlt    
  4076d7:	test   al,0x3
  4076d9:	out    dx,eax
  4076da:	sahf   
  4076db:	add    DWORD PTR [esp+esi*2-0x59],edi
  4076df:	inc    ecx
  4076e0:	push   es
  4076e1:	out    0x9e,eax
  4076e3:	jmp    0x4077d0
	...
  4076f4:	cld    
  4076f5:	sahf   
  4076f6:	(bad)  
  4076f7:	push   ecx
  4076f8:	call   0xb2a7:0x89e93ff4
  4076ff:	cmp    DWORD PTR [ebx],0x4fa909c8
  407705:	mov    esi,0x9199d156
  40770a:	(bad)  
  40770b:	mov    dh,0x13
  40770d:	daa    
  40770e:	add    ecx,ebp
  407710:	mov    DWORD PTR [esi+0x69],ebx
  407713:	push   esi
  407714:	invd   
  407716:	add    DWORD PTR [ecx],edi
  407718:	cwde   
  407719:	adc    eax,0xa72d8109
  40771e:	dec    BYTE PTR [esi-0x7941848d]
  407724:	mov    al,ds:0xbb2700b3
  407729:	fld    QWORD PTR [eax]
  40772b:	cld    
  40772c:	pushw  es
  40772e:	std    
  40772f:	mov    edx,0x66fe617c
  407734:	pusha  
  407735:	lahf   
  407736:	repz (bad) 
  407738:	adc    eax,edi
  40773a:	jae    0x4077a0
  40773c:	pusha  
  40773d:	adc    eax,0xc6ce4efd
  407742:	call   0xfedf0d5d
  407747:	sahf   
  407748:	cli    
  407749:	pop    ebx
  40774b:	in     eax,dx
  40774c:	cmp    al,0xf5
  40774e:	mov    DWORD PTR ds:0x16fe9e93,edi
  407754:	loope  0x407785
  407756:	shl    BYTE PTR [ebp+0x0],1
	...
  407764:	add    BYTE PTR [eax],al
  407766:	add    BYTE PTR [ebx-0x62],bh
  407769:	call   FWORD PTR [eax+edx*4-0xb1e8b63]
  407770:	mov    edi,fs
  407772:	add    BYTE PTR [ecx+0x27],al
  407775:	imul   eax,DWORD PTR [ecx],0x68bef596
  40777b:	pop    eax
  40777c:	js     0x4077bf
  40777e:	add    BYTE PTR [ecx-0x69],ah
  407781:	or     bh,bh
  407783:	or     ebx,DWORD PTR [esi+eiz*8-0x1da8748]
  40778a:	leave  
  40778b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40778c:	mov    ds:0xf6dd54fe,al
  407791:	std    
  407792:	jne    0x4077e6
  407794:	add    al,dh
  407796:	ret    
  407797:	and    DWORD PTR ds:0xd27ac00a,0x834abb68
  4077a1:	dec    BYTE PTR [edi-0x32]
  4077a4:	jp     0x407769
  4077a6:	inc    ecx
  4077a8:	jns    0x4077f8
  4077aa:	(bad)  
  4077ab:	cmp    ebx,DWORD PTR [esi+eiz*8-0x1d93e55]
  4077b2:	call   0x3edcde
  4077b7:	iret   
  4077b8:	pop    es
  4077b9:	or     DWORD PTR [eax],eax
  4077bb:	pop    ebx
  4077bc:	and    ebp,ebp
  4077be:	sbb    DWORD PTR [edx+0xc006b25],0xffffffa2
  4077c5:	push   DWORD PTR [ebp-0x12]
  4077c8:	add    DWORD PTR [edx-0x44],esi
	...
  4077d7:	add    BYTE PTR [eax],al
  4077d9:	add    BYTE PTR [ecx+0x26],dh
  4077dc:	mov    BYTE PTR [ebp-0x7e],al
  4077df:	jg     0x4077df
  4077e1:	addr16 mov al,0x78
  4077e4:	inc    ecx
  4077e5:	add    dh,ch
  4077e7:	adc    dl,BYTE PTR [ebp+0x41]
  4077ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077eb:	es xor al,0x67
  4077ee:	fiadd  WORD PTR [esi+edi*8-0x1f86019]
  4077f5:	jmp    FWORD PTR [ebp+0x3f147509]
  4077fb:	pop    edi
  4077fc:	fiadd  DWORD PTR [eax]
  4077fe:	aas    
  4077ff:	sahf   
  407800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407801:	push   eax
  407802:	mov    BYTE PTR [edx+edi*8],bl
  407805:	out    0x1c,eax
  407807:	shl    BYTE PTR [esi-0x1],cl
  40780a:	addr16 test al,0xa7
  40780d:	push   DWORD PTR [eax+0x49]
  407810:	add    ch,BYTE PTR [eax-0x67]
  407813:	fadd   st(1),st
  407815:	(bad)  
  407816:	fsubr  DWORD PTR [esi+0x763f40cf]
  40781c:	cs addr16 pop es
  40781f:	lock add al,0xe8
  407822:	xor    eax,0x34ff6471
  407827:	outs   dx,DWORD PTR ds:[esi]
  407828:	icebp  
  407829:	adc    ecx,DWORD PTR [edi+0x20000207]
  40782f:	sub    eax,0x97b2fed5
  407834:	pop    edx
  407835:	xor    al,0x1c
  407837:	ds fs call 0xffa46d33
	...
  40784a:	add    BYTE PTR [eax],al
  40784c:	add    BYTE PTR [ebp+0x72bddaaf],ah
  407852:	lock add al,0x68
  407855:	inc    ebp
  407856:	mov    ah,0xc1
  407858:	(bad)  
  407859:	stc    
  40785a:	pop    ebx
  40785b:	fld    QWORD PTR [edi+0x7e]
  40785e:	scas   eax,DWORD PTR es:[edi]
  40785f:	pop    edx
  407860:	(bad)  
  407862:	and    eax,0x72ff0b64
  407867:	cmc    
  407868:	dec    edi
  407869:	outs   dx,DWORD PTR ds:[esi]
  40786a:	imul   ch
  40786c:	pop    es
  40786d:	out    0xa8,eax
  40786f:	gs dec eax
  407872:	div    BYTE PTR [esi+edi*4-0x252240]
  407879:	and    BYTE PTR ds:0x873f40ce,dl
  40787f:	loopne 0x4078d5
  407881:	inc    bh
  407883:	out    0x64,eax
  407885:	push   0x25
  407887:	mov    al,0xc2
  407889:	cwde   
  40788a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40788b:	pop    ecx
  40788c:	inc    ebx
  40788d:	nop
  40788e:	pushf  
  40788f:	jecxz  0x4078d4
  407891:	adc    ecx,ebp
  407893:	xchg   edi,eax
  407894:	rol    DWORD PTR [ecx+0x5f5bf012],cl
  40789a:	popf   
  40789b:	mul    DWORD PTR [edi+eiz*2+0x45]
  40789f:	cs gs push 0x79dbe831
  4078a6:	repnz sub BYTE PTR [edi+eiz*8],al
  4078aa:	cmp    al,0x3d
  4078ac:	ret    
  4078ad:	push   eax
  4078ae:	popf   
  4078af:	adc    eax,0xdd
	...
  4078c0:	add    BYTE PTR [edi],al
  4078c2:	call   0xbfc73122
  4078c7:	fs inc esp
  4078c9:	mov    BYTE PTR [esi*8-0x11510780],bh
  4078d0:	inc    eax
  4078d1:	mov    al,0x5e
  4078d3:	and    BYTE PTR gs:[eax+edx*4-0x68642539],bl
  4078db:	fnstenv [ebx+ebx*4]
  4078de:	adc    eax,0x868120fc
  4078e3:	add    BYTE PTR fs:[edi],ch
  4078e6:	loop   0x40794c
  4078e8:	jb     0x4078ba
  4078ea:	jg     0x407921
  4078ec:	icebp  
  4078ed:	fwait
  4078ee:	outs   dx,DWORD PTR ds:[esi]
  4078ef:	fstp   DWORD PTR ds:0xd8fbdd9b
  4078f5:	test   BYTE PTR [esi+0x64],bl
  4078f8:	fcomp  DWORD PTR [ebx+0x15d067dd]
  4078fe:	loopne 0x40795b
  407900:	mov    ds,WORD PTR [edi+0x47]
  407903:	test   BYTE PTR fs:[esi+0x4f1203e4],0x1
  40790b:	inc    ebp
  40790c:	sbb    edx,DWORD PTR ds:0x89a0410d
  407912:	(bad)  
  407913:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  407915:	pop    ebx
  407916:	jne    0x4078c7
  407918:	je     0x40798d
  40791a:	push   esp
  40791b:	test   al,0x3c
  40791d:	clc    
  40791e:	call   0xfedb7804
  407923:	cdq    
	...
  407930:	add    BYTE PTR [eax],al
  407932:	add    BYTE PTR [ebx+ecx*1+0x69],ch
  407936:	jmp    0x82002477
  40793b:	pmaddwd mm7,QWORD PTR [edi]
  40793e:	jmp    0xf1b513cf
  407943:	aam    0xe0
  407945:	jecxz  0x407925
  407947:	fdiv   st(7),st
  407949:	push   0xbfab3ce8
  40794e:	inc    ecx
  40794f:	loope  0x407945
  407951:	aas    
  407952:	jmp    0xf1b513e3
  407957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407958:	in     eax,0xe3
  40795a:	mov    dh,0x9c
  40795c:	add    BYTE PTR [ecx-0x15],ch
  40795f:	cmp    al,0xab
  407961:	mov    edi,0x3ff58b11
  407966:	jmp    0xe1b51337
  40796b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40796c:	mov    ecx,0xb09c8ee3
  407971:	rol    DWORD PTR [esp+ebx*4-0x65],cl
  407975:	enter  0x4bab,0xc8
  407979:	push   ebx
  40797a:	bound  ebp,QWORD PTR [edi+0x47]
  40797d:	lds    ebp,FWORD PTR [ebp-0x27]
  407980:	call   0x5109:0x155df068
  407987:	ja     0x4079e7
  407989:	(bad)  
  40798a:	push   esi
  40798b:	ret    0xfd04
  40798e:	ret    
  40798f:	retf   0x7499
  407992:	add    dh,cl
  407994:	cs cmp edi,0x0
	...
  4079a3:	add    BYTE PTR [eax],al
  4079a5:	add    BYTE PTR [ecx+0x27],bh
  4079a8:	imul   esp,DWORD PTR [ebx],0x69
  4079ab:	add    DWORD PTR [esi],0xfe25f0e8
  4079b1:	dec    esp
  4079b3:	call   0xff6d:0x2e8e75ff
  4079ba:	sub    DWORD PTR [edi],esp
  4079bc:	(bad)  
  4079bd:	jne    0x4079f9
  4079bf:	daa    
  4079c0:	je     0x4079ca
  4079c2:	cs mov dh,0xb9
  4079c5:	(bad)  
  4079c6:	jns    0x4079d3
  4079c8:	ret    
  4079c9:	add    al,0x66
  4079cb:	pop    edi
  4079cc:	mov    ebp,esp
  4079ce:	mov    esp,0x202d68c6
  4079d3:	test   esi,edi
  4079d5:	addr16 cmp eax,0x6900415e
  4079db:	mov    edi,0xc4174865
  4079e0:	call   0xfe66106f
  4079e5:	or     esp,esi
  4079e7:	jno    0x4079fe
  4079e9:	push   eax
  4079ea:	jmp    0x743f886f
  4079ef:	mov    eax,0xcc43ff50
  4079f4:	call   0xfe673c91
  4079f9:	call   0x3ee14d
  4079fe:	cmp    al,0xc4
  407a00:	push   0xfe83202d
  407a05:	fstp   QWORD PTR [bx+0x41]
	...
  407a19:	ds ret 0x0
  407a1d:	push   esi
  407a1e:	sub    eax,0x2659c05a
  407a23:	or     al,al
  407a25:	repnz mov al,ds:0x7c3fff4e
  407a2b:	repnz (bad) 
  407a2d:	push   edx
  407a2e:	jnp    0x4079e2
  407a30:	dec    BYTE PTR [edx-0x69]
  407a33:	push   0x69
  407a35:	mov    ds:0x65e862da,eax
  407a3a:	adc    al,0x63
  407a3c:	jmp    FWORD PTR [eax+0x2afef254]
  407a42:	xchg   ebx,eax
  407a43:	jmp    0xaff:0x26ff110
  407a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a4b:	push   0xffffff9c
  407a4d:	mov    ds:0x7dc962ca,eax
  407a52:	xchg   ebx,eax
  407a53:	add    dl,BYTE PTR [ebp-0x3c]
  407a56:	retf   
  407a57:	xchg   ah,al
  407a59:	jae    0x407aa0
  407a5b:	add    ch,BYTE PTR [edx+0x35]
  407a5e:	stos   BYTE PTR es:[edi],al
  407a5f:	(bad)  
  407a60:	pop    es
  407a61:	push   edi
  407a62:	call   0x18997a05
  407a67:	(bad)  
  407a68:	sti    
  407a69:	out    0xae,eax
  407a6b:	add    ch,bh
  407a6d:	mov    DWORD PTR [edi],eax
  407a6f:	popa   
  407a70:	push   ebp
  407a71:	(bad)  
  407a72:	scas   al,BYTE PTR es:[edi]
  407a73:	popa   
  407a74:	jne    0x407abd
  407a76:	ja     0x407a5d
  407a78:	(bad)  
  407a79:	xor    BYTE PTR [edx-0x13],dl
	...
  407a8c:	aas    
  407a8d:	pop    edx
  407a8e:	mov    ds:0xc1d93868,eax
  407a93:	call   FWORD PTR [ecx]
  407a95:	mov    ah,0xc
  407a97:	call   0xffa0ad1d
  407a9c:	or     BYTE PTR [eax+eiz*2+0x6a978aff],dh
  407aa3:	dec    ebp
  407aa4:	mov    ch,0x19
  407aa6:	pusha  
  407aa7:	leave  
  407aa8:	std    
  407aa9:	stos   BYTE PTR es:[edi],al
  407aaa:	add    dl,BYTE PTR [ebp-0x4c]
  407aad:	sbb    al,BYTE PTR [edx+0x5ec807c4]
  407ab3:	popa   
  407ab4:	fmul   DWORD PTR [edx-0x5b]
  407ab7:	pop    edi
  407ab8:	outs   dx,DWORD PTR ds:[esi]
  407ab9:	cdq    
  407aba:	fisttp QWORD PTR [edi]
  407abc:	enter  0xc6d2,0xcb
  407ac0:	jg     0x407a8a
  407ac2:	dec    edi
  407ac3:	adc    esp,edx
  407ac5:	(bad)  
  407ac6:	out    0xc,eax
  407ac8:	jg     0x407a92
  407aca:	ins    BYTE PTR es:[edi],dx
  407acb:	cmp    al,0x3e
  407acd:	enter  0x48e7,0xfa
  407ad1:	lahf   
  407ad2:	call   0x2708b9da
  407ad7:	(bad)  
  407ad8:	mov    WORD PTR [eax+0x2e3f03ef],ds
  407ade:	call   0xe86efbd0
  407ae3:	in     eax,dx
  407ae4:	js     0x407b31
  407ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ae7:	push   edi
  407ae8:	cmovnp ebp,DWORD PTR [ebp+0x58]
  407aec:	jo     0x407a86
  407aee:	out    dx,eax
  407aef:	mov    bl,0x0
	...
  407afd:	add    BYTE PTR [eax],al
  407aff:	popa   
  407b00:	adc    ah,al
  407b02:	pusha  
  407b03:	rcr    BYTE PTR [ebx-0x3865fb30],cl
  407b09:	out    0xc,eax
  407b0b:	jg     0x407b20
  407b0d:	in     eax,0x6a
  407b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b10:	(bad)  
  407b11:	out    0x3,eax
  407b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b14:	or     esi,DWORD PTR [eax]
  407b16:	ret    
  407b17:	xor    BYTE PTR [edi-0x31e8efc3],dl
  407b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b1e:	pusha  
  407b1f:	and    cl,bh
  407b21:	jb     0x407b56
  407b23:	retf   0x944d
  407b26:	pop    eax
  407b27:	adc    BYTE PTR [eax-0x61df49c8],bl
  407b2d:	dec    edi
  407b2e:	pusha  
  407b2f:	add    BYTE PTR [edx+0x6d],al
  407b32:	push   ebx
  407b33:	lock xchg edi,eax
  407b35:	jg     0x407ba2
  407b37:	test   BYTE PTR [ecx+eax*1+0x76],dl
  407b3b:	pop    edi
  407b3c:	and    al,BYTE PTR [ecx]
  407b3e:	add    DWORD PTR [ebx+0x5fe93ffe],esi
  407b44:	pop    ebp
  407b45:	icebp  
  407b46:	push   esi
  407b47:	pop    edi
  407b48:	xchg   edi,eax
  407b49:	(bad)  
  407b4a:	sbb    al,0xd6
  407b4c:	cmovo  ebp,ecx
  407b4f:	push   esp
  407b50:	add    edi,DWORD PTR [esi-0x7bbee0ba]
  407b56:	inc    ebp
  407b57:	pop    ss
  407b58:	xchg   edi,eax
  407b59:	inc    bl
  407b5b:	cmp    al,0x20
  407b5d:	fwait
  407b5e:	xchg   edi,eax
  407b5f:	jge    0x407af8
  407b61:	call   FWORD PTR [eax+eax*1+0x0]
	...
  407b71:	add    ah,ch
  407b73:	sahf   
  407b74:	(bad)  
  407b75:	push   ds
  407b76:	pop    ds
  407b77:	frstor [ebp-0x5f]
  407b7a:	jge    0x407b13
  407b7c:	out    0xbc,al
  407b7e:	fist   WORD PTR [edi-0x5b3e8f02]
  407b84:	idiv   dh
  407b86:	adc    BYTE PTR [edx],ah
  407b88:	add    DWORD PTR [ecx-0x16c00213],eax
  407b8e:	fistp  WORD PTR [ecx+esi*8-0x22]
  407b92:	clc    
  407b93:	xchg   esi,eax
  407b94:	(bad)  
  407b95:	adc    al,0x58
  407b97:	cmovo  ebp,ecx
  407b9a:	aam    0xc6
  407b9c:	mov    ebp,0x8440e0ce
  407ba1:	rcl    DWORD PTR [eax+0x3b53fe97],1
  407ba7:	and    BYTE PTR [edx-0x68fde1],ah
  407bad:	je     0x407b3a
  407baf:	lahf   
  407bb0:	(bad)  
  407bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb2:	js     0x407b91
  407bb4:	gs xor edx,edi
  407bb7:	xchg   esi,eax
  407bb8:	out    0x98,al
  407bba:	test   eax,0xb660fe96
  407bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bc0:	test   BYTE PTR [eax],0xc1
  407bc3:	test   BYTE PTR [ebx-0x201617b],0xff
  407bca:	inc    esi
  407bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bcc:	lods   eax,DWORD PTR ds:[esi]
  407bcd:	push   esi
  407bce:	pop    ss
  407bcf:	int3   
  407bd0:	std    
  407bd1:	mov    ch,0x76
  407bd3:	(bad)  
  407bd4:	std    
  407bd5:	inc    DWORD PTR [eax]
	...
  407be3:	add    BYTE PTR [eax],al
  407be5:	jno    0x407b98
  407be7:	gs dec eax
  407be9:	xchg   edi,eax
  407bea:	retf   0xcee8
  407bed:	mov    al,0xf6
  407bef:	std    
  407bf0:	or     esp,DWORD PTR [esi+0x70]
  407bf3:	sbb    DWORD PTR [ebx-0xa2bcd],eax
  407bf9:	jno    0x407bbb
  407bfb:	jae    0x407c0d
  407bfd:	push   ecx
  407bfe:	mov    esp,0xff02858d
  407c03:	std    
  407c04:	call   esi
  407c06:	and    bl,BYTE PTR [edx-0x1608ce45]
  407c0c:	adc    al,0x9d
  407c0e:	or     dh,BYTE PTR [ebp+0x6]
  407c11:	(bad)  
  407c12:	and    cl,BYTE PTR [esi-0x3a0a8e45]
  407c18:	test   DWORD PTR [edx-0x1],edx
  407c1b:	std    
  407c1c:	dec    DWORD PTR [ebx-0x1affff36]
  407c22:	addr16 in eax,0xf7
  407c25:	jno    0x407c1c
  407c27:	add    BYTE PTR [ebx+edi*8+0x4a],dh
  407c2b:	mov    esp,0xfdf569ec
  407c30:	add    BYTE PTR [edx-0x78],bh
  407c33:	cmp    DWORD PTR [ebp-0x200f2],0x16
  407c3a:	jle    0x407c8f
  407c3c:	push   0xbeedca16
  407c41:	loope  0x407cb3
  407c43:	push   es
  407c44:	call   0x3eae69
	...
  407c55:	add    BYTE PTR [eax],al
  407c57:	add    BYTE PTR [edi],bh
  407c59:	ds cdq 
  407c5b:	in     al,dx
  407c5c:	or     BYTE PTR [edi+0x5f],al
  407c5f:	push   DWORD PTR [edx-0x69]
  407c62:	push   0x62
  407c64:	mov    bh,0x16
  407c66:	pop    edi
  407c67:	push   DWORD PTR [edx-0x1f00a8b9]
  407c6d:	fld    DWORD PTR es:[edi]
  407c70:	out    0x53,eax
  407c72:	call   0xd0e4:0x98f6d0ff
  407c79:	(bad)  
  407c7a:	pop    esi
  407c7b:	dec    DWORD PTR [edx-0x59]
  407c7e:	push   0x46
  407c80:	test   DWORD PTR [esi],0xffeaff5f
  407c86:	push   esi
  407c87:	jmp    FWORD PTR [eax-0x68f82722]
  407c8d:	xchg   edi,eax
  407c8e:	call   0x88dc:0x98ee98ff
  407c95:	mov    dh,0x5e
  407c97:	call   DWORD PTR [edx]
  407c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c9a:	push   0xffffffc8
  407c9c:	enter  0x5ec6,0xff
  407ca0:	mov    dl,0xc3
  407ca2:	push   esi
  407ca3:	push   DWORD PTR [eax-0x49]
  407ca6:	or     eax,0x5c9e68bb
  407cab:	mov    ch,0x53
  407cad:	sahf   
  407cae:	pop    esp
  407caf:	jmp    DWORD PTR [edi-0x60]
  407cb2:	cdq    
  407cb3:	call   DWORD PTR [eax+0x76]
  407cb6:	xchg   esi,eax
  407cb7:	call   0xe89cfb0c
	...
  407cc8:	add    BYTE PTR [eax],al
  407cca:	add    BYTE PTR [ecx+0x39],cl
  407ccd:	pop    esp
  407cce:	(bad)  
  407ccf:	cmp    BYTE PTR [eiz*2+0x6d5630f7],dl
  407cd6:	jmp    0x407cbd
  407cd8:	pop    ebp
  407cd9:	pop    esp
  407cda:	(bad)  
  407cdb:	jmp    0x8fc8:0x18ff544e
  407ce2:	fs aad 0x94
  407ce5:	lahf   
  407ce6:	pop    ebp
  407ce7:	adc    BYTE PTR [eax-0x6afeea7f],0x8f
  407cee:	pop    ebp
  407cef:	jb     0x407c85
  407cf1:	nop
  407cf2:	leave  
  407cf3:	popf   
  407cf4:	(bad)  
  407cf5:	out    0x4a,eax
  407cf7:	std    
  407cf8:	mov    edi,0xa3b5b6e7
  407cfd:	imul   ecx,DWORD PTR [eax-0x29],0x21
  407d01:	call   0xd5d5c2ef
  407d06:	or     edx,edi
  407d08:	cdq    
  407d09:	lahf   
  407d0a:	pop    ebp
  407d0b:	sar    BYTE PTR [esi],0xa5
  407d0e:	pop    edi
  407d0f:	retf   0x400a
  407d12:	mov    ah,0x18
  407d14:	add    edx,DWORD PTR [esi-0xed3573e]
  407d1a:	mov    ch,0xff
  407d1c:	(bad)  
  407d1d:	cs pop ss
  407d1f:	and    BYTE PTR [eax],al
  407d21:	test   eax,0x5d5da703
  407d26:	pop    ebp
  407d27:	mov    al,al
  407d29:	daa    
  407d2a:	fsubr  DWORD PTR [ecx]
  407d2c:	clc    
  407d2d:	jg     0x407d31
	...
  407d3b:	add    BYTE PTR [eax],al
  407d3d:	add    BYTE PTR [edi],bh
  407d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d40:	inc    esi
  407d41:	pop    ebp
  407d42:	jmp    0xffbf:0xf25c988f
  407d49:	mov    eax,DWORD PTR [ecx-0x4394106c]
  407d4f:	push   ecx
  407d50:	out    0x5c,eax
  407d52:	ret    0xe00a
  407d55:	mov    bl,0xe0
  407d57:	repz cmp eax,0x112c40c3
  407d5d:	mov    dh,0x7f
  407d5f:	enter  0x16c6,0x98
  407d63:	add    BYTE PTR [ecx],ch
  407d65:	add    al,0x17
  407d67:	inc    edi
  407d68:	add    DWORD PTR [ebx+eax*4-0x6d],esi
  407d6c:	or     ch,BYTE PTR [ecx+0x1150baf0]
  407d72:	cmp    eax,0x6b5fedc8
  407d77:	sbb    eax,0x1d6239f9
  407d7c:	or     DWORD PTR [ecx-0x79018a50],eax
  407d82:	add    edi,DWORD PTR fs:[ebx+0x6d208b7e]
  407d89:	pop    ds
  407d8a:	cld    
  407d8b:	xchg   ebx,eax
  407d8c:	push   esp
  407d8e:	inc    esp
  407d8f:	mov    al,ds:0x93736476
  407d94:	(bad)  
  407d95:	aam    0x68
  407d97:	xchg   ebx,eax
  407d98:	je     0x407d7b
  407d9a:	push   esp
  407d9b:	pop    ebp
  407d9c:	mov    dh,0x4e
  407d9e:	sbb    eax,DWORD PTR [ecx+0xedc3]
	...
  407db0:	add    BYTE PTR [edi*8-0x7342b277],bh
  407db7:	fnstsw WORD PTR [esi]
  407db9:	add    edx,DWORD PTR [ebx-0x8075b74]
  407dbf:	std    
  407dc0:	pushf  
  407dc1:	inc    eax
  407dc2:	xchg   ebx,eax
  407dc3:	xor    al,0x86
  407dc5:	je     0x407dcf
  407dc7:	add    DWORD PTR [ecx],eax
  407dc9:	add    eax,0x47e90166
  407dce:	mov    BYTE PTR [esi],cl
  407dd0:	ins    BYTE PTR es:[edi],dx
  407dd1:	std    
  407dd2:	enter  0xe900,0x3
  407dd6:	or     eax,0xc83ce9f9
  407ddb:	add    BYTE PTR [esi],ah
  407ddd:	adc    DWORD PTR [edi-0x37c31102],0x935ae96a
  407de7:	push   0x8d9352e9
  407dec:	and    al,0x8f
  407dee:	clc    
  407def:	mov    eax,DWORD PTR [eax]
  407df1:	mov    ds:0xe9fff5f8,eax
  407df6:	pop    ebx
  407df7:	push   DWORD PTR [ebp-0x12]
  407dfa:	out    dx,al
  407dfb:	jae    0x407df9
  407dfd:	(bad)  
  407dfe:	mov    ds:0xc22600a0,al
  407e03:	shl    BYTE PTR [ebx+eiz*1+0x24],0x85
  407e08:	add    DWORD PTR [esi],edx
  407e0a:	(bad)  
  407e0b:	push   0xfe8d1e43
  407e10:	(bad)  
  407e11:	repz retf 0x6de8
	...
  407e21:	add    BYTE PTR [eax],al
  407e23:	add    BYTE PTR [ebx],ch
  407e25:	out    dx,eax
  407e26:	std    
  407e27:	push   eax
  407e28:	pop    ebp
  407e29:	fmul   QWORD PTR [ebx-0x208ad7b]
  407e2f:	call   DWORD PTR [esi-0x54a219a4]
  407e35:	out    dx,al
  407e36:	std    
  407e37:	mov    DWORD PTR [ebx-0x4],edx
  407e3a:	cmc    
  407e3b:	dec    DWORD PTR [ecx]
  407e3d:	and    al,0xb2
  407e3f:	mov    ecx,0x6aeef9
  407e44:	mov    es,WORD PTR [ebx]
  407e46:	push   edi
  407e47:	inc    ecx
  407e48:	xchg   esi,eax
  407e49:	in     eax,dx
  407e4a:	mov    bl,0xf0
  407e4c:	push   ecx
  407e4d:	out    dx,eax
  407e4e:	std    
  407e4f:	push   DWORD PTR [ebx-0x5b]
  407e52:	inc    esi
  407e53:	inc    ecx
  407e54:	xchg   esi,eax
  407e55:	push   ds
  407e56:	mov    dl,0xbc
  407e58:	sub    edi,ebp
  407e5a:	xchg   DWORD PTR [ebp-0x208be],eax
  407e60:	int3   
  407e61:	(bad)  
  407e62:	push   0xfe8bd0b2
  407e67:	(bad)  
  407e68:	and    edi,esp
  407e6a:	cmc    
  407e6b:	jmp    FWORD PTR [ecx-0x13]
  407e6e:	xor    esp,DWORD PTR [edi+0xe]
  407e71:	(bad)  
  407e72:	(bad)  
  407e73:	out    0xd3,eax
  407e75:	cmp    bh,dh
  407e77:	(bad)  
  407e78:	aas    
  407e79:	sub    BYTE PTR [ecx+0x5b8330ec],al
  407e7f:	push   0x3f
  407e81:	neg    DWORD PTR [ebp+0x5b9f7e56]
  407e87:	mov    ch,0x0
	...
  407e95:	add    BYTE PTR [eax],al
  407e97:	das    
  407e98:	push   ebx
  407e99:	pop    ebx
  407e9a:	call   FWORD PTR [eax]
  407e9c:	popf   
  407e9d:	jecxz  0x407ee6
  407e9f:	jle    0x407e40
  407ea1:	push   0x77
  407ea3:	retf   
  407ea4:	xor    bl,BYTE PTR [ebx-0x77]
  407ea7:	mov    edx,0xf8ff533f
  407eac:	lds    eax,FWORD PTR [eax+ebp*2]
  407eaf:	push   DWORD PTR [ecx-0x2316003d]
  407eb5:	push   ecx
  407eb6:	mul    eax
  407eb8:	sbb    bl,BYTE PTR [ebx+0x35]
  407ebb:	pusha  
  407ebc:	out    0xc3,eax
  407ebe:	(bad)  
  407ebf:	fmul   DWORD PTR [eax+0x18c8ff96]
  407ec5:	sub    eax,0x6a5afac8
  407ecb:	aas    
  407ecc:	xchg   DWORD PTR [esi+edx*2],esi
  407ecf:	(bad)  
  407ed0:	sahf   
  407ed1:	pop    ebx
  407ed2:	mov    ch,0xaf
  407ed4:	ficomp DWORD PTR [edx-0x1]
  407ed7:	mov    al,ds:0xfe47e394
  407edc:	sahf   
  407edd:	push   0x3b
  407edf:	shr    edx,cl
  407ee1:	pop    edx
  407ee2:	mov    edx,eax
  407ee4:	rcl    DWORD PTR [edx-0x1],cl
  407ee7:	sbb    BYTE PTR [esi],0x99
  407eea:	in     al,0x70
  407eec:	ret    0x5a
  407eef:	jmp    0x407f34
  407ef1:	xchg   DWORD PTR [ebp-0xa765a5],edi
  407ef7:	aas    
  407ef8:	adc    esi,DWORD PTR [esi+0x82]
	...
  407f0a:	call   0xe7c8:0x50ff52c7
  407f11:	iret   
  407f12:	in     eax,dx
  407f13:	pop    ds
  407f14:	call   0xd792cf1c
  407f19:	iret   
  407f1a:	inc    eax
  407f1b:	mov    al,ds:0x91308f86
  407f20:	(bad)  
  407f21:	(bad)  
  407f22:	sbb    ebx,DWORD PTR [ecx+0x1b2059bf]
  407f28:	loopne 0x407f95
  407f2a:	adc    eax,0x1059af5b
  407f2f:	pop    ebx
  407f30:	nop
  407f31:	push   ecx
  407f32:	or     BYTE PTR [ecx-0x5fc73061],dl
  407f38:	test   BYTE PTR [edi-0x70706f08],cl
  407f3e:	fistp  DWORD PTR [eax+0x1ae85987]
  407f44:	lock imul eax,DWORD PTR [ecx],0x5b
  407f48:	ja     0x407fa3
  407f4a:	fcomp  DWORD PTR [edx-0x78]
  407f4d:	push   ecx
  407f4e:	rcl    BYTE PTR [eax-0x5fbf3099],1
  407f54:	cmp    BYTE PTR [edi-0x70a86f40],cl
  407f5a:	fwait
  407f5b:	cwde   
  407f5c:	dec    edi
  407f5d:	pop    ecx
  407f5e:	mov    al,0x1a
  407f60:	lock imul edi,DWORD PTR [ebp+0x5a],0x3f
  407f65:	pop    ecx
  407f66:	mov    al,ds:0x98514c5a
  407f6b:	nop
  407f6c:	inc    eax
  407f6d:	mov    al,ds:0x0
	...
  407f7a:	add    BYTE PTR [eax],al
  407f7c:	add    bh,dl
  407f7e:	nop
  407f7f:	daa    
  407f80:	pop    ecx
  407f81:	shl    BYTE PTR [ebx-0x607fa6e9],cl
  407f87:	jno    0x407f25
  407f89:	js     0x407f1b
  407f8b:	jg     0x594817f8
  407f91:	push   edi
  407f92:	inc    ecx
  407f93:	inc    eax
  407f94:	pop    ecx
  407f95:	pusha  
  407f96:	nop
  407f97:	add    DWORD PTR [ebx+eiz*8],edi
  407f9a:	cwde   
  407f9b:	(bad)  
  407f9c:	out    dx,al
  407f9d:	in     al,0x44
  407f9f:	mov    ecx,0xb490e7e6
  407fa4:	mov    ebp,0xc1fe90ef
  407fa9:	adc    al,0x58
  407fab:	dec    dh
  407fad:	xchg   edi,eax
  407fae:	push   ebp
  407faf:	icebp  
  407fb0:	mov    esi,0x34fe8f87
  407fb5:	xor    esp,DWORD PTR [eax-0x708848ca]
  407fbb:	(bad)  
  407fbc:	je     0x40802a
  407fbe:	xchg   edi,eax
  407fbf:	(bad)  
  407fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fc1:	xchg   esp,eax
  407fc2:	out    dx,eax
  407fc3:	mov    eax,0x448f679e
  407fc8:	xchg   ecx,eax
  407fc9:	gs (bad) 
  407fcb:	dec    BYTE PTR [esi-0x7a8b7069]
  407fd1:	push   esp
  407fd2:	and    BYTE PTR [ecx-0x3c7ec317],0xe1
  407fd9:	cmp    al,0xf5
  407fdb:	mov    DWORD PTR [ebp-0x45],edi
  407fde:	test   ch,bh
  407fe0:	rol    DWORD PTR [eax],cl
	...
  407fee:	add    BYTE PTR [eax],al
  407ff0:	cmp    al,0x22
  407ff2:	or     eax,0xe8c7f15e
  407ff7:	fmul   st,st(1)
  407ff9:	(bad)  
  407ffa:	(bad)  
  407ffb:	pusha  
  407ffc:	icebp  
  407ffd:	xchg   ebx,eax
  407ffe:	imul   esp,DWORD PTR [edi],0x3e0108ee
  408004:	jno    0x407fcd
  408006:	call   0xfecf714a
  40800b:	adc    DWORD PTR cs:[ebx-0x5fcb6302],0x8ee7549d
  408016:	enter  0x782b,0x8f
  40801a:	push   ebp
  40801b:	(bad)  
  40801c:	fmul   DWORD PTR [eax-0x3b]
  40801f:	add    BYTE PTR [esi-0x8],al
  408022:	std    
  408023:	call   ebx
  408025:	dec    ebp
  408026:	cli    
  408027:	push   eax
  408028:	push   ecx
  408029:	jge    0x408035
  40802b:	dec    DWORD PTR [ebx+0x564146a8]
  408031:	and    eax,DWORD PTR [ecx+0x9cb56a0]
  408037:	shl    BYTE PTR [ecx],0x48
  40803a:	cmp    eax,DWORD PTR [edx]
  40803c:	es retf 
  40803e:	lds    eax,FWORD PTR [ebp-0x2]
  408041:	ret    
  408042:	add    BYTE PTR [eax],al
  408044:	push   ss
  408045:	into   
  408046:	inc    ebx
  408047:	hlt    
  408048:	ror    DWORD PTR [esi-0x3b830002],1
  40804e:	push   0x0
  408050:	sub    al,0xc4
  408052:	push   0x0
	...
  408060:	add    BYTE PTR [eax],al
  408062:	add    BYTE PTR [ebx+0x6350f289],dl
  408068:	dec    ecx
  408069:	cmc    
  40806a:	test   ecx,0xebff50f6
  408070:	repnz std 
  408072:	jne    0x4080d6
  408074:	sbb    al,0x53
  408076:	mov    al,ds:0xc009cae6
  40807b:	retf   0xe7c7
  40807e:	std    
  40807f:	xlat   BYTE PTR ds:[ebx]
  408080:	retf   0x6800
  408083:	xchg   ebp,eax
  408084:	add    BYTE PTR [ecx+0x0],0x11
  408088:	jns    0x408094
  40808a:	call   0x3eb279
  40808f:	sub    eax,0x6a858bd4
  408094:	(bad)  
  408095:	std    
  408096:	push   DWORD PTR [esi+0xd99e658]
  40809c:	idiv   ebp
  40809e:	mov    DWORD PTR [ebx],ebx
  4080a0:	hlt    
  4080a1:	cmc    
  4080a2:	jmp    DWORD PTR [ecx]
  4080a4:	mov    ds:0x7b3f67fe,al
  4080a9:	scas   eax,DWORD PTR es:[edi]
  4080aa:	inc    eax
  4080ab:	aas    
  4080ac:	mov    esi,0xc570f08f
  4080b1:	push   ebp
  4080b2:	jmp    FWORD PTR [edx]
  4080b4:	inc    esi
  4080b5:	retf   0x3f40
  4080b8:	leave  
  4080b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080ba:	mov    edx,0x858d9d50
  4080bf:	arpl   WORD PTR [ebp+0x57],bp
  4080c2:	call   ebp
  4080c4:	mov    al,ds:0x2aea
	...
  4080d5:	add    BYTE PTR [eax-0x1500fb20],dl
  4080db:	outs   dx,DWORD PTR ds:[esi]
  4080dc:	dec    edi
  4080dd:	jmp    FWORD PTR [eax]
  4080df:	xchg   DWORD PTR [ecx],edx
  4080e1:	addr16 ja 0x4080c4
  4080e4:	add    al,0xe8
  4080e6:	mov    ebp,0xc6ff5719
  4080eb:	and    al,0x66
  4080ed:	test   DWORD PTR [eax],0x98ffe867
  4080f3:	outs   dx,DWORD PTR ds:[esi]
  4080f4:	scas   eax,DWORD PTR es:[edi]
  4080f5:	inc    eax
  4080f6:	aas    
  4080f7:	ss xchg ecx,eax
  4080f9:	lock call 0x333fd83d
  4080ff:	mov    esi,0x373f40cc
  408104:	fidivr WORD PTR [ecx-0x7a72e928]
  40810a:	out    0x16,eax
  40810c:	push   edi
  40810d:	call   DWORD PTR [ebp-0x61]
  408110:	jmp    0xf2ff:0x260683c
  408117:	out    dx,eax
  408118:	dec    esi
  408119:	push   DWORD PTR [eax-0x898ef02]
  40811f:	pop    edi
  408120:	add    ch,al
  408122:	stc    
  408123:	dec    eax
  408124:	push   edi
  408125:	inc    esi
  408127:	sbb    al,0x62
  408129:	not    DWORD PTR [eax+0x738588de]
  40812f:	enter  0x561e,0x80
  408133:	clc    
  408134:	(bad)  
  408135:	adc    BYTE PTR [eax],dl
  408137:	pop    es
  408138:	call   0x408193
	...
  408149:	stos   BYTE PTR es:[edi],al
  40814a:	cwde   
  40814b:	pop    ss
  40814c:	push   esi
  40814d:	push   0xf8debd8d
  408152:	push   es
  408153:	call   0xf7929dc3
  408158:	push   ebp
  408159:	inc    esp
  40815a:	mov    BYTE PTR [esp+edi*8-0x43],dh
  40815e:	dec    ebx
  40815f:	mov    esp,0xe48d404d
  408164:	into   
  408165:	dec    eax
  408166:	lea    ebx,[eax]
  408168:	test   DWORD PTR [edx+0x2855d76b],edi
  40816e:	clc    
  40816f:	iret   
  408170:	push   esp
  408171:	jmp    0x33aa4102
  408176:	shl    DWORD PTR [edi-0x4007c530],0x60
  40817d:	ror    DWORD PTR [edi+eiz*4-0x689445c3],1
  408184:	push   ebp
  408185:	clc    
  408186:	mov    dl,0xe7
  408188:	add    edi,DWORD PTR [edi]
  40818a:	cmp    esp,DWORD PTR [ebp+0x34]
  40818d:	lock mov WORD PTR [edi+0x170a58b4],es
  408194:	ret    
  408195:	fmul   DWORD PTR [ebp-0x7337abc3]
  40819b:	outs   dx,DWORD PTR ds:[esi]
  40819c:	push   ebp
  40819d:	adc    ah,BYTE PTR ds:0xa4c0c2b0
  4081a3:	xor    eax,0x618cb89b
  4081a8:	jg     0x408141
  4081aa:	xchg   esp,eax
  4081ab:	dec    edi
  4081ac:	push   ebp
	...
  4081b9:	add    BYTE PTR [eax],al
  4081bb:	add    BYTE PTR [edx+ecx*2-0x735fb2b4],bh
  4081c2:	call   0x17144cb
  4081c7:	jmp    0x6cc24a08
  4081cc:	pop    ss
  4081cd:	xchg   ebp,eax
  4081ce:	(bad)  
  4081cf:	cmp    edi,DWORD PTR es:[ebp-0x37bc907c]
  4081d6:	add    BYTE PTR [edx-0x38],ch
  4081d9:	lahf   
  4081da:	test   BYTE PTR [esi],0x12
  4081dd:	enter  0x6d0d,0xbc
  4081e1:	mov    DWORD PTR [eax],0xbc64e9
  4081e7:	push   es
  4081e8:	test   eax,0xd4e1748c
  4081ed:	shl    DWORD PTR [ecx-0x4b73141a],cl
  4081f3:	int    0x8b
  4081f5:	mov    edi,esi
  4081f7:	(bad)  
  4081f8:	add    esp,eax
  4081fa:	call   0xfecc5160
  4081ff:	(bad)  
  408200:	mov    cl,0xa0
  408202:	idiv   BYTE PTR [esi-0x1e8b748d]
  408208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408209:	push   cs
  40820a:	mov    dl,0xae
  40820c:	jae    0x408199
  40820e:	mov    ah,0x8d
  408210:	jae    0x40819d
  408212:	(bad)  
  408213:	sahf   
  408214:	or     esp,eax
  408216:	call   0xfecc5020
  40821b:	mov    ?,WORD PTR [ecx+0x86f66c]
	...
  40822d:	add    BYTE PTR [eax],al
  40822f:	mov    ecx,DWORD PTR [ebx-0x739b0e8c]
  408235:	mov    bl,0x76
  408237:	imul   ecx,DWORD PTR [ebx-0x7484764c],0xfffffffe
  40823e:	data16 icebp 
  408240:	ret    
  408241:	call   0xfecc51ff
  408246:	push   0xffffffc9
  408248:	jo     0x408240
  40824a:	dec    esi
  40824b:	adc    ecx,eax
  40824d:	je     0x40824f
  40824f:	popf   
  408250:	dec    eax
  408251:	mov    esp,0xfdf451d0
  408256:	add    al,0xd3
  408258:	cdq    
  408259:	mov    eax,DWORD PTR [ebp-0x203d2]
  40825f:	pop    ecx
  408260:	mov    bh,0xfd
  408262:	jne    0x4082d2
  408264:	pop    ds
  408265:	int    0xb2
  408267:	dec    ecx
  408268:	hlt    
  408269:	jmp    0xfe083e78
  40826e:	jne    0x4082de
  408270:	pop    ds
  408271:	shl    DWORD PTR [edx-0x4a0208a7],0x42
  408278:	cld    
  408279:	std    
  40827a:	(bad)  
  40827b:	mov    esi,DWORD PTR ds:[edi+edi*8-0x134c08a7]
  408283:	adc    edi,esi
  408285:	std    
  408286:	call   0x3eb39a
  40828b:	stc    
  40828c:	xor    cl,ch
  40828e:	idiv   ecx
  408290:	imul   al
  408292:	out    dx,al
	...
  40829f:	add    BYTE PTR [eax],al
  4082a1:	add    BYTE PTR [ebx-0x6c000209],dl
  4082a7:	and    al,0xf6
  4082a9:	(bad)  
  4082aa:	fldpi  
  4082ac:	loope  0x408263
  4082ae:	fdecstp 
  4082b0:	std    
  4082b1:	mov    ch,0xfe
  4082b3:	out    dx,al
  4082b4:	std    
  4082b5:	(bad)  
  4082b6:	mov    esi,0xb9ffb3db
  4082bb:	div    BYTE PTR [ebx-0x2089e10]
  4082c1:	call   0x3eb371
  4082c6:	dec    ecx
  4082c7:	xor    esi,0xfdf8b3e9
  4082cd:	call   FWORD PTR [ecx+0x71]
  4082d0:	cli    
  4082d1:	call   0x419934
  4082d6:	aas    
  4082d7:	call   0x547f8b22
  4082dc:	jg     0x4082ca
  4082de:	mov    esp,0x3f6a50dc
  4082e3:	ja     0x4082e6
  4082e5:	dec    DWORD PTR [edx]
  4082e7:	test   eax,0xd9cddf5a
  4082ec:	push   ecx
  4082ed:	mov    edx,edi
  4082ef:	in     al,0xdc
  4082f1:	or     edx,DWORD PTR [eax]
  4082f3:	pusha  
  4082f4:	add    bh,bh
  4082f6:	jmp    0x51b9:0x6a7d5aa8
  4082fd:	(bad)  
  4082fe:	jmp    0xfeb9:0x477551c4
  408305:	mov    dl,0x0
	...
  408313:	add    BYTE PTR [eax],al
  408315:	push   eax
  408316:	xchg   ecx,eax
  408317:	cmp    eax,0xb9a143c2
  40831c:	mov    dl,BYTE PTR [ebx+0x1f]
  40831f:	inc    esi
  408320:	int3   
  408321:	xor    BYTE PTR [ebx+0x53],ch
  408324:	lea    edi,[edx+0x73]
  408327:	mov    dl,0xfe
  408329:	mov    dl,0x6b
  40832b:	push   ebx
  40832c:	xor    eax,0xffc3d798
  408331:	and    BYTE PTR [edx+0x71],bh
  408334:	add    BYTE PTR [edi],bh
  408336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408337:	inc    edx
  408338:	cmpps  xmm7,XMMWORD PTR [edx+0x5a3f0006],0xc9
  408340:	idiv   DWORD PTR [edi]
  408342:	lahf   
  408343:	add    al,BYTE PTR [eax]
  408345:	clc    
  408346:	fcomp  QWORD PTR [eax-0x1]
  408349:	inc    eax
  40834a:	lahf   
  40834b:	add    ch,BYTE PTR [edx+0x3f]
  40834e:	mov    ch,0x4
  408350:	push   0x3f
  408352:	mov    ch,0x4
  408354:	lea    edi,[edx+0xb]
  408357:	mov    dl,0x8c
  408359:	ret    0x5b13
  40835c:	inc    eax
  40835e:	enter  0x52b7,0x32
  408362:	nop
  408363:	pop    edi
  408364:	fdiv   DWORD PTR [eax+eiz*4-0x37c08fd8]
  40836b:	loop   0x4083b0
  40836d:	sub    eax,ebx
  40836f:	push   eax
  408370:	and    eax,0xdbe7c83d
  408375:	std    
  408376:	jmp    FWORD PTR [eax+0x3]
	...
  408388:	mov    BYTE PTR [ebx],dl
  40838a:	fcomp  QWORD PTR [ebx+0x7d]
  40838d:	push   eax
  40838e:	daa    
  40838f:	push   edx
  408390:	les    edi,FWORD PTR [eax+0x6d]
  408393:	mov    BYTE PTR [ebx-0x6f],ch
  408396:	pop    ss
  408397:	push   edx
  408398:	psadbw mm7,mm7
  40839b:	or     DWORD PTR [esi-0x3d83f877],esp
  4083a1:	cwde   
  4083a2:	not    DWORD PTR [ecx+0x50]
  4083a5:	cmp    ebp,DWORD PTR [ebp+0x3f]
  4083a8:	push   eax
  4083a9:	mov    edi,ebp
  4083ab:	mov    dl,0xd8
  4083ad:	cmp    DWORD PTR [edi],0xffffffc3
  4083b0:	cmp    BYTE PTR [edx-0x76d7ab6b],cl
  4083b6:	xlat   BYTE PTR ds:[ebx]
  4083b7:	push   ecx
  4083b8:	jb     0x4083db
  4083ba:	and    bl,al
  4083bc:	and    BYTE PTR [ecx-0x76e7740f],ah
  4083c2:	jno    0x40834b
  4083c4:	sbb    edx,DWORD PTR [ecx-0x376aae49]
  4083ca:	aas    
  4083cb:	cs push 0xb250e807
  4083d1:	xchg   edi,eax
  4083d2:	xchg   edi,eax
  4083d3:	push   ecx
  4083d4:	lock mov ch,bl
  4083d7:	call   0x5c288b5c
  4083dc:	aam    0x50
  4083de:	xchg   DWORD PTR [ecx-0x3a],edx
  4083e1:	inc    edx
  4083e2:	mov    WORD PTR [ecx-0x30],ds
  4083e5:	mov    BYTE PTR [ecx],al
  4083e7:	add    eax,DWORD PTR [ebx+0x20]
  4083ea:	ficom  WORD PTR [esi]
	...
  4083f8:	add    BYTE PTR [eax],al
  4083fa:	add    ah,bh
  4083fc:	mov    bh,bh
  4083fe:	pushf  
  4083ff:	adc    edx,DWORD PTR [ecx-0x2cf1a102]
  408405:	mov    eax,gs:0x1ce6887d
  40840b:	(bad)  
  40840c:	mov    dh,bh
  40840e:	jo     0x4083d0
  408410:	lahf   
  408411:	idiv   BYTE PTR [esi]
  408413:	out    dx,al
  408414:	sbb    eax,0xf0eac101
  408419:	aas    
  40841a:	jmp    0x1f31d70e
  40841f:	push   cs
  408420:	mov    esi,edi
  408422:	aam    0x67
  408424:	add    BYTE PTR [eax-0x17],al
  408427:	add    al,0x59
  408429:	mov    dh,0xe
  40842b:	push   cs
  40842c:	aas    
  40842d:	test   BYTE PTR [ecx],cl
  40842f:	test   BYTE PTR [eax+0x6fb86cfe],0xf6
  408436:	imul   bh
  408438:	imul   DWORD PTR [eax+0x4]
  40843b:	xchg   BYTE PTR [edi],al
  40843d:	add    esi,esp
  40843f:	sar    DWORD PTR [eax-0xa],1
  408442:	fimul  WORD PTR [edi-0x14b1cb79]
  408448:	or     BYTE PTR [ecx],al
  40844a:	shl    DWORD PTR [eax+0x1bc6fe3f],0x48
  408451:	jne    0x40842d
  408453:	mov    ebx,0x6fbed945
  408458:	xchg   DWORD PTR ds:0x31870134,eax
  40845e:	jbe    0x408460
	...
  40846c:	add    BYTE PTR [eax],al
  40846e:	shl    DWORD PTR [esi+esi*8+0xb738f9e],0xae
  408476:	shl    DWORD PTR [esi+esi*8+0xdd8f8e],0x0
  40847e:	out    0xcb,al
  408480:	push   eax
  408481:	call   0x3ee4a9
  408486:	arpl   WORD PTR [esi-0x2f],cx
  408489:	not    DWORD PTR [ecx+0x18]
  40848c:	push   ecx
  40848d:	push   0x414073
  408492:	adc    DWORD PTR [esi-0xf],ebx
  408495:	not    DWORD PTR [ecx]
  408497:	sbb    dh,bh
  408499:	xor    eax,0x414379
  40849e:	out    dx,al
  40849f:	inc    edx
  4084a0:	mov    bh,0xff
  4084a2:	push   ecx
  4084a3:	test   BYTE PTR [esi-0x43b39a8c],bh
  4084a9:	ror    BYTE PTR [ecx+0x18],1
  4084ac:	inc    BYTE PTR [ebx+ebx*8]
  4084af:	test   edi,edi
  4084b1:	xor    cl,ah
  4084b3:	dec    ebp
  4084b4:	aad    0xf7
  4084b6:	push   ecx
  4084b7:	sbb    dl,ch
  4084b9:	or     bl,BYTE PTR [ecx]
  4084bb:	dec    esi
  4084bc:	aad    0xf7
  4084be:	inc    ecx
  4084bf:	sbb    BYTE PTR [ecx],al
  4084c1:	add    BYTE PTR [esi-0x35],ah
  4084c4:	push   eax
  4084c5:	call   0x3ee429
  4084ca:	aad    0x55
  4084cc:	in     eax,0xf7
  4084ce:	and    DWORD PTR [edi],edx
  4084d0:	add    DWORD PTR [eax+eax*1+0x0],esi
	...
  4084e0:	add    BYTE PTR [ecx+0x4b],dl
  4084e3:	mov    esp,0xfe1709d4
  4084e8:	add    cl,BYTE PTR [ebx-0x6cff9522]
  4084ee:	push   ecx
  4084ef:	int    0xf7
  4084f1:	rcl    DWORD PTR [esi],1
  4084f3:	push   ecx
  4084f4:	dec    DWORD PTR [ebx-0x2e000a10]
  4084fa:	and    ebp,DWORD PTR [ecx+0xa16a1db]
  408500:	ror    BYTE PTR [edx-0x7b],0x83
  408504:	mov    ebp,0xff562d3f
  408509:	loopne 0x40857b
  40850b:	fst    DWORD PTR [eax+ebx*8]
  40850e:	ret    
  40850f:	push   0x5d05d0f7
  408514:	retf   
  408515:	mov    ebp,?
  408517:	dec    ebp
  408518:	(bad)  
  408519:	mov    edx,0xb8ff564c
  40851e:	jo     0x408522
  408520:	add    BYTE PTR [edi],bh
  408522:	repnz (bad) 
  408524:	in     al,0xb0
  408526:	sbb    eax,0x8a2b004e
  40852b:	cmp    DWORD PTR [ebp-0xb23a55],0x3f
  408532:	cmp    eax,0x8ca82e0
  408537:	push   esi
  408538:	inc    DWORD PTR [eax-0x18a72990]
  40853e:	jb     0x408542
  408540:	out    dx,eax
  408541:	mov    cl,0xe5
  408543:	xlat   BYTE PTR ds:[ebx]
  408544:	pop    es
	...
  408551:	add    BYTE PTR [eax],al
  408553:	add    BYTE PTR [edi+0x2a],dl
  408556:	xchg   edx,eax
  408557:	jmp    DWORD PTR [eax-0x2b]
  40855a:	xchg   edi,eax
  40855b:	in     al,dx
  40855c:	push   eax
  40855d:	int    0x4d
  40855f:	dec    edx
  408561:	js     0x4085bd
  408563:	sahf   
  408564:	(bad)  
  408565:	jge    0x4085b6
  408567:	dec    DWORD PTR [edx+0x38ff55c8]
  40856d:	outs   dx,DWORD PTR ds:[esi]
  40856e:	fld    DWORD PTR [edi]
  408570:	daa    
  408571:	add    BYTE PTR [edx-0x6660d701],dl
  408577:	int3   
  408578:	sub    BYTE PTR [edi-0x6c2d00b1],dl
  40857e:	push   edi
  40857f:	call   DWORD PTR [eax]
  408581:	inc    edi
  408582:	fld    DWORD PTR [edi]
  408584:	pop    ss
  408585:	loopne 0x40851b
  408587:	inc    DWORD PTR [eax]
  408589:	aaa    
  40858a:	cdq    
  40858b:	fdivr  st(0),st
  40858d:	enter  0x4ea6,0xf0
  408591:	sti    
  408592:	out    dx,eax
  408593:	pop    ebx
  408594:	cmp    edi,DWORD PTR [eax]
  408596:	xchg   edi,eax
  408597:	dec    esi
  408598:	loopne 0x4085d5
  40859a:	mov    BYTE PTR [esi-0x28],dl
  40859d:	test   DWORD PTR [edi+0x87038d8],eax
  4085a3:	xchg   esp,eax
  4085a4:	enter  0x7785,0x98
  4085a8:	fstp   TBYTE PTR [ebp+0x6f]
  4085ab:	dec    esi
  4085ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085ad:	or     bl,BYTE PTR [ebx-0x6a7a4fb2]
  4085b3:	pop    edi
  4085b4:	mov    al,0x85
  4085b6:	push   edi
  4085b7:	pop    ebx
	...
  4085c4:	add    BYTE PTR [eax],al
  4085c6:	add    BYTE PTR [eax+0x39],ch
  4085c9:	dec    edi
  4085ca:	dec    esi
  4085cb:	cwde   
  4085cc:	cmp    edx,DWORD PTR [eax+0x56]
  4085cf:	nop
  4085d0:	test   DWORD PTR [eax+0x1f],edx
  4085d3:	int3   
  4085d4:	test   DWORD PTR [edi],esi
  4085d6:	dec    esi
  4085d7:	retf   0x3768
  4085da:	dec    esi
  4085db:	js     0x40864d
  4085dd:	leave  
  4085de:	xchg   edx,eax
  4085df:	jo     0x408566
  4085e1:	pop    ds
  4085e2:	cwde   
  4085e3:	outs   dx,DWORD PTR ds:[esi]
  4085e4:	jge    0x4085fd
  4085e6:	dec    esi
  4085e7:	push   edi
  4085e8:	ficomp WORD PTR [edx+0x4e]
  4085eb:	pop    eax
  4085ec:	test   DWORD PTR [ebp-0x2c799b5],ebp
  4085f2:	dec    ebp
  4085f3:	dec    eax
  4085f4:	test   DWORD PTR [ebp+0x4f],edi
  4085f7:	push   edi
  4085f8:	inc    edi
  4085f9:	push   ebx
  4085fa:	add    edi,DWORD PTR [edi]
  4085fc:	(bad)  
  408600:	sbb    al,0x73
  408602:	pusha  
  408603:	mov    esp,0x20dadc8b
  408608:	out    dx,eax
  408609:	fisttp QWORD PTR [edx+edx*4-0x30]
  40860d:	iret   
  40860e:	sbb    al,0xcf
  408610:	test   BYTE PTR [edi+0x184827b],bh
  408616:	inc    ecx
  408617:	cmp    ecx,eax
  408619:	in     eax,dx
  40861a:	outs   dx,DWORD PTR ds:[esi]
  40861b:	sbb    ecx,DWORD PTR [ebx]
  40861d:	push   esi
  40861e:	sub    BYTE PTR [ebx],bh
  408620:	lock push ecx
  408622:	ss cld 
  408624:	test   bh,bh
  408626:	sbb    al,0xe3
  408628:	ins    BYTE PTR es:[edi],dx
  408629:	pop    edx
  40862a:	mov    bl,0x0
	...
  408638:	add    BYTE PTR [eax],al
  40863a:	mov    al,BYTE PTR [ebp+0x18832c8c]
  408640:	imul   ebx,DWORD PTR [edx+edx*4+0x7],0x1ddc0101
  408648:	inc    eax
  408649:	jmp    0xb1a64159
  40864e:	jge    0x4085d4
  408650:	out    0x34,al
  408652:	rol    BYTE PTR [esi+edi*8+0x26fbfce2],1
  408659:	pusha  
  40865a:	cmp    BYTE PTR [eax+0x69],0xe8
  40865e:	cmp    al,0x75
  408660:	mov    edi,0xe8cc703e
  408665:	xchg   ebx,eax
  408666:	mov    ds:0x902efe84,eax
  40866b:	jl     0x40866b
  40866d:	pushf  
  40866e:	or     BYTE PTR [ebp+0x4a04f174],al
  408674:	scas   al,BYTE PTR es:[edi]
  408675:	push   ss
  408676:	repnz test BYTE PTR [ebp+edx*1-0x5],dh
  40867b:	pop    eax
  40867c:	mov    bl,0x6
  40867e:	add    dh,al
  408680:	mov    ds:0xff847d96,eax
  408685:	jl     0x4086cb
  408687:	ins    BYTE PTR es:[edi],dx
  408688:	(bad)  
  408689:	in     eax,dx
  40868a:	mov    eax,DWORD PTR [ebx-0x7c70a302]
  408690:	je     0x408683
  408692:	test   BYTE PTR [ecx-0x6e8c2952],al
  408698:	ret    
  408699:	in     eax,0x3c
  40869b:	sbb    eax,0x8a
	...
  4086ac:	add    dl,ch
  4086ae:	dec    eax
  4086af:	(bad)  
  4086b2:	int3   
  4086b3:	push   0xf
  4086b5:	leave  
  4086b6:	call   0xfffe:0x648be806
  4086bd:	outs   dx,DWORD PTR ds:[esi]
  4086be:	mov    bh,dl
  4086c0:	push   0xbeedc7d6
  4086c5:	sbb    dl,BYTE PTR ds:[esi+0x41]
  4086c9:	out    0x9f,al
  4086cb:	add    BYTE PTR [eax+0x27],bl
  4086ce:	int3   
  4086cf:	std    
  4086d0:	jne    0x4086a0
  4086d2:	pop    ds
  4086d3:	rcr    ecx,1
  4086d5:	dec    ecx
  4086d6:	adc    al,0xfe
  4086d8:	jne    0x408704
  4086da:	adc    al,0x74
  4086dc:	or     BYTE PTR [esi],cl
  4086de:	push   ebp
  4086df:	scas   al,BYTE PTR es:[edi]
  4086e0:	dec    DWORD PTR [ecx]
  4086e2:	mov    esi,0x3a9604c2
  4086e7:	mov    ebp,esp
  4086e9:	and    eax,0xa66afd0b
  4086ee:	mov    eax,ds:0x7fd3ff0e
  4086f3:	out    0x62,al
  4086f5:	mov    ecx,0xa389fe14
  4086fa:	adc    ebp,DWORD PTR [ecx+0x0]
  4086fd:	data16 and al,0xbf
  408700:	push   0x412f5a
  408705:	mov    esi,0x66415676
  40870a:	adc    al,0x74
  40870c:	or     BYTE PTR [esi],ch
  40870e:	cli    
  40870f:	xlat   BYTE PTR ds:[ebx]
  408710:	inc    DWORD PTR [eax]
	...
  40871e:	add    BYTE PTR [eax],al
  408720:	dec    ecx
  408721:	mov    al,ds:0x2f9867fe
  408726:	inc    ecx
  408727:	add    BYTE PTR [esi+0x264158da],bh
  40872d:	push   cs
  40872e:	xor    al,0x67
  408730:	outs   dx,BYTE PTR ds:[esi]
  408731:	(bad)  
  408732:	(bad)  
  408733:	out    0x3f,eax
  408735:	adc    BYTE PTR [ecx+0x426618ff],0x74
  40873c:	pop    ebx
  40873d:	sbb    DWORD PTR [edi],ebx
  40873f:	pop    eax
  408740:	jle    0x4087b3
  408742:	mov    dl,0xe7
  408744:	loop   0x408749
  408746:	dec    edx
  408747:	dec    DWORD PTR [edi-0x1ffffaf7]
  40874d:	jmp    0x5004:0xb0870bdc
  408754:	loopne 0x408739
  408756:	cld    
  408757:	out    0x2f,eax
  408759:	cmp    BYTE PTR [edx-0x1],cl
  40875c:	out    0x5f,eax
  40875e:	xchg   esp,eax
  40875f:	dec    eax
  408761:	add    eax,edx
  408763:	sti    
  408764:	rol    BYTE PTR [ebx-0x3dfc1806],0x49
  40876b:	inc    DWORD PTR [esi+0x120000ae]
  408771:	neg    BYTE PTR [eax-0x7d]
  408774:	jnp    0x408792
  408776:	mov    bl,0x56
  408778:	and    eax,0x9010dc71
  40877d:	inc    ebx
  40877e:	cli    
  40877f:	out    0xa1,eax
  408781:	push   edx
  408782:	dec    edx
  408783:	inc    DWORD PTR [eax]
	...
  408791:	add    BYTE PTR [eax],al
  408793:	mov    dh,0x33
  408795:	inc    esi
  408796:	mov    esi,DWORD PTR [edx]
  408798:	push   es
  408799:	ret    0x3f40
  40879c:	test   BYTE PTR [edi],0xef
  40879f:	add    BYTE PTR [eax],dh
  4087a1:	add    al,BYTE PTR [eax+0x4ace7120]
  4087a7:	out    0x36,eax
  4087a9:	stos   BYTE PTR es:[edi],al
  4087aa:	inc    eax
  4087ab:	aas    
  4087ac:	bound  ebx,QWORD PTR [edx+0x4c]
  4087af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087b0:	jo     0x4087b4
  4087b2:	or     edi,DWORD PTR [edi+0x4]
  4087b5:	and    DWORD PTR [esi+0x27],edx
  4087b8:	pop    ebx
  4087b9:	(bad)  
  4087ba:	push   DWORD PTR [eax]
  4087bc:	leave  
  4087bd:	dec    edi
  4087be:	out    0x90,eax
  4087c0:	pop    es
  4087c1:	call   0x9d34a079
  4087c6:	dec    edx
  4087c7:	sbb    BYTE PTR [ecx],bl
  4087c9:	inc    eax
  4087ca:	add    al,0x3f
  4087cc:	jno    0x408754
  4087ce:	mov    bl,0x9
  4087d0:	cld    
  4087d1:	out    dx,eax
  4087d2:	pop    ebx
  4087d3:	call   FWORD PTR [ebx-0x1518b549]
  4087d9:	js     0x408825
  4087db:	lock ins DWORD PTR es:[edi],dx
  4087dd:	jmp    0xe802f0a3
  4087e2:	shl    dh,1
  4087e4:	or     dl,BYTE PTR [esi+edx*1+0x4a8f3fff]
  4087eb:	rol    BYTE PTR [ecx-0x36f86686],1
  4087f1:	hlt    
  4087f2:	nop
  4087f3:	sar    bl,0x73
  4087f6:	dec    edx
	...
  408803:	add    BYTE PTR [eax],al
  408805:	add    BYTE PTR [edx],dh
  408807:	sar    BYTE PTR [edi+0x45],1
  40880a:	loope  0x40878d
  40880c:	stos   BYTE PTR es:[di],al
  40880e:	or     cl,BYTE PTR [edi+0x1ca0ff2a]
  408814:	arpl   WORD PTR [edi-0x44],dx
  408817:	mov    WORD PTR [ebp+ebx*8-0x70],cs
  40881b:	out    dx,eax
  40881c:	(bad)  [edx+0x12]
  40881f:	ror    BYTE PTR [edi-0x21],1
  408822:	rol    BYTE PTR [ecx-0x7bfd83c9],cl
  408828:	rol    BYTE PTR [ebx],0x3f
  40882b:	jno    0x408893
  40882d:	fcomi  st,st(1)
  40882f:	pop    ds
  408830:	test   eax,0xaff1d703
  408835:	les    ebx,FWORD PTR [eax-0x7e]
  408838:	xchg   ebp,eax
  408839:	sti    
  40883a:	pop    eax
  40883b:	pop    ecx
  40883c:	and    BYTE PTR [edx+0x48],cl
  40883f:	xor    DWORD PTR [ebp+0x47],0xe100fb40
  408846:	xchg   esp,eax
  408847:	dec    ebx
  408848:	scas   eax,DWORD PTR es:[edi]
  408849:	out    dx,al
  40884a:	xchg   BYTE PTR [edi+0x1b3cedc3],cl
  408850:	mov    cl,ch
  408852:	mov    esp,0x86dedd8b
  408857:	or     DWORD PTR [esp+0x3cfe1887],0x46348207
  408862:	ret    
  408863:	pop    es
  408864:	add    ecx,eax
  408866:	adc    al,0x60
  408868:	add    ecx,ebp
	...
  408876:	add    BYTE PTR [eax],al
  408878:	add    bl,dh
  40887a:	inc    eax
  40887b:	push   cs
  40887c:	ins    BYTE PTR es:[edi],dx
  40887d:	pushf  
  40887e:	mov    BYTE PTR [eax],0xe9
  408881:	jg     0x40888e
  408883:	stc    
  408884:	jmp    0xa64150c5
  408889:	nop
  40888a:	je     0x40888a
  40888c:	out    dx,al
  40888d:	cmp    al,0xc8
  40888f:	push   0xffffffe9
  408891:	loop   0x408813
  408893:	push   0x8d809ae9
  408898:	and    al,0xf
  40889a:	sbb    BYTE PTR [esp+ebp*2+0x5efe790f],cl
  4088a1:	jmp    0x408824
  4088a3:	je     0x4088f6
  4088a5:	push   es
  4088a6:	sti    
  4088a7:	cld    
  4088a8:	inc    ecx
  4088a9:	inc    edx
  4088aa:	pop    edi
  4088ab:	add    ecx,ebp
  4088ad:	mov    eax,DWORD PTR [eax+0x75]
  4088b0:	in     al,0xe5
  4088b2:	jmp    0x4088b3
  4088b4:	call   0xa18278f5
  4088b9:	jge    0x40883b
  4088bb:	call   FWORD PTR [eax+esi*2-0x9aac398]
  4088c2:	adc    BYTE PTR [ecx+0x62],0x13
  4088c6:	push   ebx
  4088c7:	test   BYTE PTR ds:0xfe80ee,dl
  4088cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ce:	cmp    ah,dh
  4088d0:	sub    eax,0x89fe0f0a
  4088d5:	stos   DWORD PTR es:[edi],eax
  4088d6:	adc    al,0xf6
  4088d8:	jmp    DWORD PTR [ecx]
  4088da:	and    al,0x82
  4088dc:	mov    al,0x0
	...
  4088ea:	add    BYTE PTR [eax],al
  4088ec:	and    DWORD PTR [ecx],edx
  4088ee:	imul   eax,DWORD PTR [eax],0xffffff8e
  4088f1:	clc    
  4088f2:	pop    eax
  4088f3:	inc    ecx
  4088f4:	adc    DWORD PTR es:[eax+esi*8-0x1ef17],esi
  4088fc:	or     ebp,DWORD PTR [ecx+0x46]
  4088ff:	inc    ecx
  408900:	push   ss
  408901:	and    al,0x82
  408903:	mov    bl,0xb1
  408905:	adc    BYTE PTR [eax-0x1e7057b],cl
  40890b:	dec    DWORD PTR [esp+eax*8+0x68]
  40890f:	test   BYTE PTR [esi-0x75],bh
  408912:	(bad)  
  408913:	(bad)  
  408914:	jnp    0x408931
  408916:	idiv   bh
  408918:	rcl    DWORD PTR [eax],0x34
  40891b:	addr16 push cs
  40891d:	mov    edi,esi
  40891f:	out    0x3b,eax
  408921:	push   ebp
  408922:	(bad)  
  408923:	call   FWORD PTR [edi]
  408925:	(bad)  
  408926:	in     al,dx
  408927:	mul    DWORD PTR [ecx]
  408929:	adc    BYTE PTR [ebx+0x0],ch
  40892c:	mov    ?,esp
  40892e:	pop    eax
  40892f:	inc    ecx
  408930:	xchg   esi,eax
  408931:	adc    BYTE PTR [eax+esi*8-0x1f007],dh
  408938:	sub    ebp,DWORD PTR [ecx+0x46]
  40893b:	inc    ecx
  40893c:	xchg   esi,eax
  40893d:	and    eax,DWORD PTR [esi-0x4d]
  408940:	inc    ecx
  408941:	adc    BYTE PTR [eax-0x1e8017b],cl
  408947:	call   DWORD PTR [ebx]
  408949:	(bad)  
  40894a:	fdivr  st(7),st
  40894c:	and    DWORD PTR [eax],edx
  40894e:	push   ecx
  40894f:	push   0x0
	...
  40895c:	add    BYTE PTR [eax],al
  40895e:	add    bl,ah
  408960:	xor    al,BYTE PTR [ecx+0x0]
  408963:	aas    
  408964:	(bad)  
  408965:	mov    ?,eax
  408967:	dec    eax
  408968:	into   
  408969:	dec    eax
  40896a:	call   DWORD PTR [edx]
  40896c:	dec    esi
  40896d:	mov    edx,0x1dd93f40
  408972:	mov    bl,0x38
  408974:	jbe    0x408970
  408976:	mov    edi,0xbd8598ab
  40897b:	or     ebx,DWORD PTR [esi+0x143bff46]
  408981:	cmc    
  408982:	dec    BYTE PTR [edi-0x1a]
  408985:	jg     0x408967
  408987:	or     BYTE PTR [esi+0x40175046],cl
  40898d:	xchg   esi,eax
  40898e:	inc    DWORD PTR [eax]
  408990:	call   0x4ffe:0xbcff0af1
  408997:	out    0x83,eax
  408999:	xchg   esi,eax
  40899a:	(bad)  
  40899b:	call   0xe92109cd
  4089a0:	pop    ebp
  4089a1:	inc    esi
  4089a2:	adc    eax,0x8302713f
  4089a7:	xchg   edx,eax
  4089a8:	inc    esp
  4089a9:	dec    esi
  4089aa:	dec    eax
  4089ac:	jo     0x40897c
  4089ae:	push   esi
  4089af:	mov    esp,0xb8f758bb
  4089b4:	cmc    
  4089b5:	add    al,0x74
  4089b7:	add    edx,esi
  4089b9:	xchg   eax,ebp
  4089bb:	mov    al,0xe5
  4089bd:	inc    ebp
  4089be:	add    BYTE PTR [ebx],ch
  4089c0:	and    al,0xda
  4089c2:	inc    DWORD PTR [eax]
	...
  4089d0:	add    BYTE PTR [eax],al
  4089d2:	cwde   
  4089d3:	add    eax,0x690aff87
  4089d8:	pop    edx
  4089d9:	fild   DWORD PTR fs:0xccaff46
  4089e0:	dec    esi
  4089e1:	(bad)  
  4089e2:	js     0x408999
  4089e4:	iret   
  4089e5:	pop    es
  4089e6:	addr16 clc 
  4089e8:	cwde   
  4089e9:	jmp    FWORD PTR [eax-0x39]
  4089ec:	es xchg ecx,eax
  4089ee:	push   edi
  4089ef:	jbe    0x408a10
  4089f1:	inc    edi
  4089f2:	pop    eax
  4089f3:	hlt    
  4089f4:	fistp  WORD PTR [ebx-0x5b]
  4089f7:	sub    ecx,DWORD PTR [edi]
  4089f9:	inc    edi
  4089fa:	dec    eax
  4089fb:	xor    al,0xc
  4089fd:	dec    edi
  4089fe:	inc    eax
  4089ff:	jle    0x408a00
  408a01:	rol    BYTE PTR [eax+0x70],1
  408a04:	push   esp
  408a05:	cwde   
  408a06:	xor    BYTE PTR [esi-0x11],bh
  408a09:	nop
  408a0a:	pop    ds
  408a0b:	jbe    0x4089f4
  408a0d:	inc    esi
  408a0e:	and    ah,dh
  408a10:	out    dx,eax
  408a11:	pop    ebx
  408a12:	imul   ebp,DWORD PTR [edi+edx*8],0x46
  408a16:	adc    BYTE PTR [esp+eax*8],dh
  408a19:	dec    esi
  408a1a:	or     BYTE PTR [esi-0x30],bh
  408a1d:	rcl    ecx,cl
  408a1f:	jge    0x4089e0
  408a21:	inc    esi
  408a22:	mov    dl,0x6c
  408a24:	mov    edi,0x4570f046
  408a29:	xchg   edi,eax
  408a2a:	call   0xd7d131ac
  408a2f:	jne    0x4089d0
  408a31:	inc    esi
  408a32:	out    0x22,eax
  408a34:	inc    edi
  408a35:	inc    esi
	...
  408a42:	add    BYTE PTR [eax],al
  408a44:	add    al,dl
  408a46:	jge    0x408a9d
  408a48:	push   ebx
  408a49:	sar    BYTE PTR [ebp-0x79],1
  408a4c:	pop    ebx
  408a4d:	jo     0x408a7c
  408a4f:	jg     0x408a97
  408a51:	mov    eax,0x215c7003
  408a56:	jle    0x408ac7
  408a58:	inc    esi
  408a59:	test   al,0xf3
  408a5b:	arpl   WORD PTR [ebx-0x1b],bx
  408a5e:	push   ebp
  408a5f:	call   0xe0cb1067
  408a64:	add    ebp,edx
  408a66:	push   eax
  408a67:	cmp    al,0x82
  408a69:	cmp    DWORD PTR [edx+edx*8+0x3],0x15
  408a6e:	fnstcw WORD PTR [esi]
  408a70:	rol    BYTE PTR [eax+0x70],1
  408a73:	add    eax,ecx
  408a75:	enter  0xfe7d,0x60
  408a79:	jg     0x4089fc
  408a7b:	imul   ecx,DWORD PTR [esp+edx*4+0x8],0xc56f1e01
  408a83:	call   0xfebd8587
  408a88:	push   cs
  408a89:	outs   dx,DWORD PTR ds:[esi]
  408a8a:	cmp    esi,0x8d65447c
  408a90:	dec    ebp
  408a91:	cmp    DWORD PTR [ebp-0x38],0x557d302b
  408a98:	bound  edx,QWORD PTR [eax+0x5e5c549]
  408a9e:	jge    0x408b08
  408aa0:	cmc    
  408aa1:	xor    ebx,0x8
  408aa4:	shr    DWORD PTR [ebx],0x2c
  408aa7:	dec    dh
	...
  408ab5:	add    BYTE PTR [eax],al
  408ab7:	add    BYTE PTR [ebx+eax*1-0x37c4ae03],al
  408abe:	in     eax,dx
  408abf:	jg     0x408adc
  408ac1:	mov    ds,WORD PTR [ecx+0x28]
  408ac4:	cmp    esi,eax
  408ac6:	ret    
  408ac7:	adc    esp,edi
  408ac9:	jl     0x408aca
  408acb:	sbb    al,0xe3
  408acd:	bound  esi,QWORD PTR fs:[edi+0x1cfe7d82]
  408ad4:	xchg   DWORD PTR [ebp+0x74],edi
  408ad7:	loope  0x408b3d
  408ad9:	pop    ss
  408ada:	lods   eax,DWORD PTR ds:[esi]
  408adb:	xchg   BYTE PTR [edx-0x71],bh
  408ade:	ret    
  408adf:	in     eax,0x3c
  408ae1:	adc    ecx,DWORD PTR [edx-0x267c437b]
  408ae7:	jbe    0x408aeb
  408ae9:	jge    0x408a77
  408aeb:	lods   al,BYTE PTR ds:[esi]
  408aec:	clc    
  408aed:	pop    ss
  408aee:	(bad)  
  408aef:	aam    0x90
  408af1:	jge    0x408b27
  408af3:	into   
  408af4:	aam    0x7
  408af6:	add    DWORD PTR [ecx+0x38],eax
  408af9:	push   ebp
  408afa:	add    DWORD PTR [eax],eax
  408afc:	xchg   esi,eax
  408afd:	jg     0x408abd
  408aff:	pavgw  mm6,QWORD PTR [edi+edi*8+0x43bb66ff]
  408b07:	clc    
  408b08:	push   esi
  408b09:	enter  0x0,0x11
  408b0d:	cmp    eax,0xc861fff2
  408b12:	add    BYTE PTR [edx+0x66],ch
  408b15:	sahf   
  408b16:	(bad)  
  408b17:	imul   edx,DWORD PTR [esi-0x62],0x8cfe
	...
  408b2a:	add    BYTE PTR [ebx-0x5c72aef4],dl
  408b30:	sbb    dh,dh
  408b32:	jmp    FWORD PTR [ecx]
  408b34:	cmp    bh,bh
  408b36:	jne    0x408b66
  408b38:	add    eax,0x7d0efc74
  408b3d:	xchg   edi,eax
  408b3e:	add    BYTE PTR [esi],ah
  408b40:	cmp    DWORD PTR [esi-0x6ee0dc8c],0x68c81601
  408b4a:	inc    ebx
  408b4b:	dec    esi
  408b4c:	xchg   esi,edi
  408b4e:	(bad)  
  408b4f:	xor    eax,DWORD PTR [eax+0x47409e6]
  408b55:	(bad)  
  408b56:	push   eax
  408b57:	pop    ebp
  408b58:	mov    bh,0x8b
  408b5a:	test   edx,eax
  408b5c:	or     al,0xfe
  408b5e:	call   DWORD PTR [esi]
  408b60:	ss out 0xf9,al
  408b63:	ja     0x408b69
  408b65:	dec    BYTE PTR [ecx-0x9e89d]
  408b6b:	mov    ecx,0x39ae4e1f
  408b70:	add    al,0x8c
  408b72:	test   esi,ecx
  408b74:	or     al,0xfe
  408b76:	inc    DWORD PTR [esi-0x64]
  408b79:	in     eax,dx
  408b7a:	pop    eax
  408b7b:	xlat   BYTE PTR ds:[ebx]
  408b7c:	(bad)  
  408b7d:	std    
  408b7e:	mov    ch,0xf6
  408b80:	or     edi,esi
  408b82:	(bad)  
  408b83:	aas    
  408b84:	adc    cl,BYTE PTR [edi]
  408b86:	imul   DWORD PTR [bx]
  408b89:	add    ch,al
  408b8b:	cmc    
  408b8c:	inc    DWORD PTR [edi+edi*8+0x0]
	...
  408b9c:	add    BYTE PTR [eax],al
  408b9e:	(bad)  
  408b9f:	in     al,0x5d
  408ba1:	div    DWORD PTR [eax-0x4e]
  408ba4:	xlat   BYTE PTR ds:[ebx]
  408ba5:	jmp    eax
  408ba7:	aad    0xa9
  408ba9:	inc    eax
  408baa:	aas    
  408bab:	mov    ds:0xda50f08e,al
  408bb0:	inc    esp
  408bb1:	dec    DWORD PTR [edx]
  408bb3:	dec    edx
  408bb4:	mov    edx,0x15c93f40
  408bb9:	mov    cl,0x40
  408bbb:	ret    0x857a
  408bbe:	sub    esi,DWORD PTR [edx+0x42]
  408bc1:	jmp    DWORD PTR [ebp-0x781c258f]
  408bc7:	xor    BYTE PTR [edx],al
  408bc9:	(bad)  
  408bca:	jmp    0xf89a:0x18ff3aa0
  408bd1:	xchg   WORD PTR [eax+0x6039e804],si
  408bd8:	inc    edx
  408bd9:	push   DWORD PTR [esi-0x708d315]
  408bdf:	cmp    DWORD PTR [eax+0x423a1385],edx
  408be5:	dec    DWORD PTR [edi+0x7e583b09]
  408beb:	jno    0x408c30
  408bed:	mov    ch,0xcf
  408bef:	push   ecx
  408bf0:	inc    edx
  408bf1:	call   eax
  408bf3:	fwait
  408bf4:	stos   DWORD PTR es:[edi],eax
  408bf5:	inc    edi
  408bf6:	jle    0x408c69
  408bf8:	sub    ch,bl
  408bfa:	pop    DWORD PTR [ecx+0x42]
  408bfd:	or     edi,DWORD PTR [edi+0x74]
  408c00:	sbb    eax,0x83
	...
  408c11:	repnz push esp
  408c13:	cmp    bh,bh
  408c15:	test   al,0x64
  408c17:	mov    ecx,0x17c7a00f
  408c1c:	xchg   ebx,eax
  408c1d:	ret    0x5767
  408c20:	inc    ebx
  408c21:	nop
  408c22:	pop    ss
  408c23:	inc    eax
  408c24:	jl     0x408c00
  408c26:	jp     0x408c77
  408c28:	das    
  408c29:	sub    ecx,edi
  408c2b:	daa    
  408c2c:	mov    eax,0x70501842
  408c31:	mov    ds:0xc24b377a,al
  408c36:	addr16 aaa 
  408c38:	inc    ebx
  408c39:	pusha  
  408c3a:	aam    0xe7
  408c3c:	add    edi,DWORD PTR [edi]
  408c3e:	inc    edi
  408c3f:	pop    ebp
  408c40:	sub    BYTE PTR [eax+0x7a],cl
  408c43:	pop    ss
  408c44:	add    al,0xd3
  408c46:	stc    
  408c47:	push   0xffffff81
  408c49:	push   ebx
  408c4a:	jb     0x408c53
  408c4c:	inc    ebx
  408c4d:	aas    
  408c4e:	hlt    
  408c4f:	je     0x408bd7
  408c51:	bnd jo 0x408c53
  408c54:	inc    edx
  408c55:	sub    cl,cl
  408c57:	jae    0x408c08
  408c59:	xchg   esi,eax
  408c5a:	enter  0x8874,0xf7
  408c5e:	jno    0x408c3f
  408c60:	inc    edx
  408c61:	outs   dx,DWORD PTR ds:[esi]
  408c62:	jns    0x408c01
  408c64:	daa    
  408c65:	adc    BYTE PTR [edx-0x31],bh
  408c68:	sub    eax,DWORD PTR [edi-0x6d]
  408c6b:	mov    DWORD PTR [edx+0x44],0xbdd83488
  408c72:	cmp    edx,DWORD PTR [eax+0x3a]
	...
  408c84:	call   0x75f87502
  408c89:	lock out 0x3,eax
  408c8c:	call   0x38f92bcb
  408c91:	jo     0x408c75
  408c93:	ins    DWORD PTR es:[edi],dx
  408c94:	enter  0x8f79,0x78
  408c98:	shl    DWORD PTR [ecx-0x79],cl
  408c9b:	inc    edx
  408c9c:	mov    eax,0x112beff3
  408ca1:	add    DWORD PTR cs:[esi-0x3],esi
  408ca5:	js     0x408c5b
  408ca7:	and    DWORD PTR [ebp+0x79],0xc1d766fe
  408cae:	call   0xfeb9af6c
  408cb3:	push   esi
  408cb4:	pop    es
  408cb5:	mov    al,ds:0x78fd4ef6
  408cba:	mov    ah,0x4d
  408cbc:	xor    eax,0xb73efe79
  408cc1:	shr    eax,0xd9
  408cc4:	fidivr DWORD PTR [eax-0x2]
  408cc7:	cs out 0x67,eax
  408cca:	mul    BYTE PTR [esi]
  408ccc:	std    
  408ccd:	js     0x408d43
  408ccf:	icebp  
  408cd0:	and    al,0x8c
  408cd2:	test   al,0x16
  408cd4:	std    
  408cd5:	js     0x408c8b
  408cd7:	add    eax,0x11fe7905
  408cdc:	dec    esp
  408cdd:	sub    edi,esi
  408cdf:	(bad)  
  408ce0:	jle    0x408d15
  408ce2:	in     eax,dx
  408ce3:	(bad)  
  408ce4:	jle    0x408d5f
  408ce6:	jmp    0x408dcf
	...
  408cf7:	scas   eax,DWORD PTR es:[edi]
  408cf8:	jns    0x408cf8
  408cfa:	out    0x90,al
  408cfc:	jo     0x408cf4
  408cfe:	fidivr WORD PTR [esi+0x70]
  408d01:	sti    
  408d02:	test   DWORD PTR [esi+0x79],edi
  408d05:	(bad)  
  408d06:	xchg   esp,eax
  408d07:	dec    ebx
  408d08:	jno    0x408d08
  408d0a:	(bad)  
  408d0b:	sub    ebp,DWORD PTR [ecx-0x53]
  408d0e:	mov    esi,0xb144797e
  408d13:	adc    al,0x6
  408d15:	jmp    FWORD PTR [esi-0x5a8b8682]
  408d1b:	sub    ebx,DWORD PTR [esi]
  408d1d:	xchg   esp,eax
  408d1e:	jmp    0xe2041c5f
  408d23:	cmp    al,0x13
  408d25:	mov    bh,BYTE PTR [ebp-0x46]
  408d28:	xor    ebp,0x0
  408d2b:	shl    DWORD PTR [eax],0xa
  408d2e:	call   0x41e067
  408d33:	pop    ds
  408d34:	xor    esi,0xe8bcabff
  408d3a:	fnstenv [edx-0x247601fa]
  408d40:	mov    eax,0x6f275fd
  408d45:	je     0x408d3f
  408d47:	icebp  
  408d48:	xor    BYTE PTR [edx],cl
  408d4a:	call   0x3e8986
  408d4f:	ins    DWORD PTR es:[edi],dx
  408d50:	add    al,0x75
  408d52:	fild   WORD PTR ds:[eax+0x49566af2]
  408d59:	inc    esp
  408d5a:	hlt    
	...
  408d67:	add    BYTE PTR [eax],al
  408d69:	add    BYTE PTR [esi+0x2efc7407],dl
  408d6f:	and    eax,0xcb31ffd2
  408d74:	shl    BYTE PTR [edi+edi*2+0x2c],0xfe
  408d79:	sqrtps xmm1,XMMWORD PTR [edx-0x2]
  408d7d:	jne    0x408dad
  408d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d80:	cmp    al,0xa9
  408d82:	xor    DWORD PTR [ecx],ecx
  408d84:	(bad)  
  408d85:	jne    0x408db5
  408d87:	or     DWORD PTR [esp+ecx*1+0x21],esi
  408d8b:	aas    
  408d8c:	push   es
  408d8d:	call   0x3e710c
  408d92:	icebp  
  408d93:	repnz jmp FWORD PTR ds:[ebx+0x8]
  408d98:	(bad)  
  408d99:	jne    0x408d89
  408d9b:	mov    ds:0x8b1a956,eax
  408da0:	(bad)  
  408da1:	jne    0x408d55
  408da3:	mov    ds:0x891ac65,eax
  408da8:	enter  0xcec2,0xcb
  408dac:	push   ebx
  408dad:	mov    eax,edx
  408daf:	dec    esp
  408db0:	(bad)
  408db3:	mov    bh,0x3f
  408db5:	jne    0x408dea
  408db7:	dec    ecx
  408db8:	repz mov al,0xb8
  408dbb:	dec    esi
  408dbc:	or     eax,0xe06c2ac0
  408dc1:	enter  0x697d,0x2
  408dc5:	(bad)  
  408dc6:	cli    
  408dc7:	lock sar esi,1
  408dca:	adc    bh,BYTE PTR [ebp+0x2a]
  408dcd:	jecxz  0x408dcf
	...
  408ddb:	add    BYTE PTR [eax],al
  408ddd:	into   
  408dde:	push   ss
  408ddf:	inc    ecx
  408de0:	or     edi,DWORD PTR [edi+0x6e]
  408de3:	xchg   BYTE PTR [edx-0xfd9ec1],bl
  408de9:	repnz or al,0x2a
  408dec:	inc    esi
  408ded:	mov    ds:0x28940b6,eax
  408df2:	or     eax,0xa6637541
  408df7:	mov    dh,0xeb
  408df9:	pop    eax
  408dfa:	push   esp
  408dfb:	cmp    ch,al
  408dfd:	jecxz  0x408e03
  408dff:	inc    ecx
  408e00:	push   DWORD PTR [esp+edx*2+0x48f6eb2e]
  408e07:	icebp  
  408e08:	pop    eax
  408e09:	jle    0x408e6c
  408e0b:	fsub   st,st(7)
  408e0d:	adc    bl,BYTE PTR ds:0xa1340002
  408e13:	mov    dh,0x1
  408e15:	adc    al,0x24
  408e17:	(bad)  
  408e18:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e1a:	(bad)  
  408e1c:	inc    eax
  408e1d:	aas    
  408e1e:	cdq    
  408e1f:	in     al,0x92
  408e21:	aas    
  408e22:	popa   
  408e23:	add    esi,eax
  408e25:	mov    dh,0x1b
  408e27:	sub    eax,0xc3a83968
  408e2c:	dec    DWORD PTR [edx+0x3f947a99]
  408e32:	popa   
  408e33:	or     eax,eax
  408e35:	push   0x63
  408e37:	sub    ebx,DWORD PTR [ebx]
  408e39:	(bad)
  408e3c:	inc    ebp
  408e3d:	aas    
  408e3e:	enter  0xd237,0x0
	...
  408e4e:	add    BYTE PTR [eax],al
  408e50:	leave  
  408e51:	cld    
  408e52:	jg     0x408e93
  408e54:	dec    edx
  408e55:	sar    BYTE PTR [edi+0x3d],0xb9
  408e59:	jbe    0x408de2
  408e5b:	fimul  DWORD PTR [eax]
  408e5d:	inc    eax
  408e5e:	fadd   DWORD PTR [ebx+0x71fcc869]
  408e64:	pop    ss
  408e65:	leave  
  408e66:	xlat   BYTE PTR ds:[ebx]
  408e67:	fnstenv cs:[esi-0x23]
  408e6b:	or     esp,DWORD PTR [edi-0x77c0701a]
  408e71:	jbe    0x408e50
  408e73:	aas    
  408e74:	cmp    ah,0x3b
  408e77:	aas    
  408e78:	repnz mov edi,0x76a7974f
  408e7e:	aas    
  408e7f:	aas    
  408e80:	repnz arpl WORD PTR [eax+0x6c],ax
  408e84:	xchg   esp,eax
  408e85:	jbe    0x408eb6
  408e87:	xchg   ecx,eax
  408e88:	add    bh,BYTE PTR [eax-0x48]
  408e8b:	sub    ebp,DWORD PTR [eax+0x38]
  408e8e:	pop    ds
  408e8f:	aas    
  408e90:	push   esp
  408e91:	(bad)  
  408e92:	mov    ch,0x4c
  408e94:	jge    0x408e55
  408e96:	out    0xd8,eax
  408e98:	lds    esp,FWORD PTR [ebx+ebp*2+0x48]
  408e9c:	xor    esp,ebx
  408e9e:	out    0xa9,eax
  408ea0:	push   ebx
  408ea1:	jne    0x408f20
  408ea3:	or     edx,DWORD PTR [edi]
  408ea5:	aaa    
  408ea6:	inc    eax
  408ea7:	aas    
  408ea8:	sbb    BYTE PTR [eax+0x2d],al
  408eab:	inc    eax
  408eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ead:	jno    0x408eef
  408eaf:	lds    ecx,FWORD PTR [eax]
  408eb1:	ja     0x408f10
  408eb3:	or     al,0x0
	...
  408ec1:	add    BYTE PTR [eax],al
  408ec3:	pop    ss
  408ec4:	cs int3 
  408ec6:	ds clc 
  408ec8:	loop   0x408eb1
  408eca:	stos   DWORD PTR es:[edi],eax
  408ecb:	mov    ecx,DWORD PTR [edi]
  408ecd:	sub    DWORD PTR [edi+edx*2],eax
  408ed0:	pop    es
  408ed1:	add    DWORD PTR [eax],edx
  408ed3:	cli    
  408ed4:	jne    0x408ed5
  408ed6:	hlt    
  408ed7:	mov    eax,ds:0x24e9400d
  408edc:	std    
  408edd:	scas   al,BYTE PTR es:[edi]
  408ede:	sahf   
  408edf:	or     ecx,eax
  408ee1:	rcr    BYTE PTR ds:0x3024e025,0x82
  408ee8:	jne    0x408f38
  408eea:	xchg   ecx,eax
  408eeb:	jge    0x408f13
  408eed:	(bad)  
  408eee:	jle    0x408e7c
  408ef0:	add    eax,0x6034fcfe
  408ef5:	loop   0x408f66
  408ef7:	pop    ecx
  408ef8:	jne    0x408ee3
  408efa:	test   al,0x25
  408efc:	jne    0x408efc
  408efe:	shl    DWORD PTR [esi],cl
  408f00:	pusha  
  408f01:	xchg   ebx,eax
  408f02:	xchg   BYTE PTR [ecx+0x75],al
  408f05:	or     ch,BYTE PTR [ecx]
  408f07:	mov    al,0xac
  408f09:	push   0x10893e1
  408f0e:	cdq    
  408f0f:	adc    al,0xd6
  408f11:	lods   eax,DWORD PTR ds:[esi]
  408f12:	ss and eax,esp
  408f15:	and    al,0x90
  408f17:	xor    DWORD PTR [ebp+0x4e],0x11
  408f1b:	sub    eax,0x6c1efe25
  408f20:	add    eax,0x60349cfe
  408f25:	mov    dl,0xf
	...
  408f33:	add    BYTE PTR [eax],al
  408f35:	add    BYTE PTR [ecx+0x75],bh
  408f38:	jmp    0xfeb63515
  408f3d:	xchg   ebx,eax
  408f3e:	dec    eax
  408f3f:	pusha  
  408f40:	arpl   WORD PTR [esi+0x61],ax
  408f43:	jne    0x408f4f
  408f45:	sub    eax,edx
  408f47:	stos   DWORD PTR es:[edi],eax
  408f48:	push   0x107f401
  408f4d:	cmp    DWORD PTR [ebx+0x66],ebx
  408f50:	scas   eax,DWORD PTR es:[edi]
  408f51:	(bad)  
  408f52:	inc    edx
  408f53:	loopne 0x408f79
  408f55:	xor    ah,bh
  408f57:	je     0x408fa7
  408f59:	add    BYTE PTR [esi],cl
  408f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f5c:	scas   al,BYTE PTR es:[edi]
  408f5d:	jmp    FWORD PTR [ecx+0x23ff4e9b]
  408f63:	(bad)  
  408f64:	call   0xfdf337ec
  408f69:	call   0x3e7135
  408f6e:	sub    al,0x67
  408f70:	out    0x32,al
  408f72:	jns    0x408f27
  408f74:	std    
  408f75:	or     esp,esi
  408f77:	das    
  408f78:	and    eax,0x41919e68
  408f7d:	add    BYTE PTR [esi-0x5c],al
  408f80:	mov    esi,0x68b329ae
  408f85:	and    al,0x2f
  408f87:	mov    esi,edi
  408f89:	dec    edi
  408f8a:	out    dx,al
  408f8b:	imul   BYTE PTR [esi+0x4e9be9ff]
  408f91:	jmp    DWORD PTR [ebx-0x40]
  408f94:	call   0xfdf397ec
  408f99:	call   0x408f9e
	...
  408fa6:	add    BYTE PTR [eax],al
  408fa8:	add    bh,dh
  408faa:	loope  0x408fa9
  408fac:	jmp    FWORD PTR [ecx]
  408fae:	cmp    eax,0xc0a3fffa
  408fb3:	call   0xfdf34ddc
  408fb8:	leave  
  408fb9:	and    al,0xc0
  408fbb:	add    BYTE PTR [ebp-0x33],dl
  408fbe:	mov    bh,0x7f
  408fc0:	les    ecx,FWORD PTR [edx]
  408fc2:	mov    ebx,0x8b9bfffd
  408fc7:	cli    
  408fc8:	push   eax
  408fc9:	cmp    DWORD PTR [ebx],edi
  408fcb:	push   cs
  408fcc:	push   DWORD PTR [ebx-0x7af4173d]
  408fd2:	int3   
  408fd3:	add    BYTE PTR [ebx],cl
  408fd5:	lds    ax,DWORD PTR [ebx+0xc827be]
  408fdc:	(bad)  
  408fdd:	arpl   WORD PTR [eax+eax*1+0x2613f00],si
  408fe4:	mov    DWORD PTR [edx+0x3f073d9d],0x56ffa861
  408fee:	popa   
  408fef:	test   al,0xff
  408ff1:	push   esi
  408ff2:	popa   
  408ff3:	pop    DWORD PTR [ebp-0x2d]
  408ff6:	ror    DWORD PTR [ebp+0x3d52cb85],1
  408ffc:	jmp    FWORD PTR [edi+0x52]
  408fff:	mov    bh,0xf7
  409001:	rcl    ah,0x40
  409004:	call   0x427fa3
  409009:	inc    esp
  40900a:	and    DWORD PTR [esi+0x4],esi
	...
  40901c:	xchg   esi,eax
  40901d:	loopne 0x409021
  40901f:	add    BYTE PTR [edi],bh
  409021:	leave  
  409022:	mov    edi,0x3d60fe47
  409027:	jne    0x409058
  409029:	sbb    DWORD PTR [ebp-0x53],ebx
  40902c:	mov    BYTE PTR [edx],dl
  40902e:	ror    BYTE PTR [edx-0xb791391],cl
  409034:	jo     0x409038
  409036:	cmp    eax,0x4d190d50
  40903b:	lods   eax,DWORD PTR ds:[esi]
  40903c:	push   0x6f858ab2
  409041:	mov    dl,0x3c
  409043:	jmp    DWORD PTR [edi-0x34]
  409046:	push   0xffffffff
  409048:	push   eax
  409049:	push   edi
  40904a:	add    ch,BYTE PTR [eax-0x2e]
  40904d:	xchg   ebx,eax
  40904f:	inc    DWORD PTR [ecx+0x14]
  409052:	xor    dh,bh
  409054:	cmp    dl,al
  409056:	cmp    al,0x75
  409058:	inc    ebx
  409059:	fldl2t 
  40905b:	lods   al,BYTE PTR ds:[esi]
  40905c:	sub    BYTE PTR [edx-0x78],dh
  40905f:	test   DWORD PTR [ebx],ebx
  409061:	jb     0x40909d
  409063:	jmp    DWORD PTR [ebp+0x767daa61]
  409069:	enter  0x428,0x8
  40906d:	cmp    eax,0x730033d8
  409072:	xlat   BYTE PTR ds:[ebx]
  409073:	mov    cl,0x44
  409075:	pusha  
  409076:	(bad)  [eax-0x10]
  409079:	jb     0x4090ec
  40907b:	sbb    edi,0x3bbf7a
	...
  40908d:	add    BYTE PTR [eax],al
  40908f:	push   ebp
  409090:	enter  0xa13f,0x77
  409094:	or     eax,ebp
  409096:	cmp    cl,BYTE PTR [edx-0x37c46089]
  40909c:	jb     0x4090b3
  40909e:	or     bh,dl
  4090a0:	jne    0x4090e6
  4090a2:	cmp    edi,DWORD PTR [eax-0x57d79ac0]
  4090a8:	jb     0x409031
  4090aa:	scas   al,BYTE PTR es:[edi]
  4090ab:	test   al,0xea
  4090ad:	or     ebx,ebp
  4090af:	inc    edi
  4090b1:	jbe    0x409124
  4090b3:	(bad)  
  4090b4:	jp     0x409125
  4090b6:	cmp    edx,DWORD PTR [eax+0x702bf3fc]
  4090bc:	and    ebx,DWORD PTR [edi+0x3b]
  4090bf:	mov    dh,0x4c
  4090c1:	inc    eax
  4090c2:	xor    edi,DWORD PTR [eax+0x72]
  4090c5:	ret    0xe703
  4090c8:	aas    
  4090c9:	mov    eax,ds:0x757168c4
  4090ce:	xor    al,0x68
  4090d0:	jb     0x409109
  4090d2:	cmp    edx,edx
  4090d4:	ret    
  4090d5:	aas    
  4090d6:	js     0x40907b
  4090d8:	jb     0x409101
  4090da:	(bad)  
  4090db:	ret    0x1793
  4090de:	cmp    eax,DWORD PTR [eax+0x46]
  4090e1:	push   ebp
  4090e2:	and    BYTE PTR [eax],dh
  4090e4:	jb     0x4090f5
  4090e6:	add    al,0xaa
  4090e8:	mov    edi,0x7a1f796a
  4090ed:	(bad)  
  4090ee:	cmp    bh,BYTE PTR [edi]
  4090f0:	cld    
  4090f1:	add    BYTE PTR [eax+eax*1+0x0],cl
	...
  409100:	add    BYTE PTR [eax],al
  409102:	shl    DWORD PTR [ebx],0xed
  409105:	not    BYTE PTR [ebp+0x71]
  409108:	add    DWORD PTR [ebp-0x19],ebx
  40910b:	inc    esi
  40910c:	mov    esp,0xfe714dd1
  409111:	jmp    0xe9a9a7be
  409116:	cmp    al,0x61
  409118:	mov    edi,0xe8c9afc6
  40911d:	fistp  WORD PTR [esi+0x71]
  409120:	(bad)  
  409121:	mov    dh,0x4f
  409123:	imul   BYTE PTR fs:[esi-0xe8b8eeb]
  40912a:	adc    al,0xf6
  40912c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912d:	sahf   
  40912e:	add    eax,0x6d81b471
  409133:	jno    0x409133
  409135:	mov    gs,edi
  409137:	leave  
  409138:	call   0xfeb1ae4a
  40913d:	jle    0x40916e
  40913f:	ins    BYTE PTR es:[edi],dx
  409140:	div    BYTE PTR [esi+0x55]
  409143:	jno    0x4091b9
  409145:	loope  0x4091ab
  409147:	sbb    ah,BYTE PTR [edi-0x4b8eba9a]
  40914d:	dec    ecx
  40914e:	dec    ebp
  40914f:	jno    0x40914f
  409151:	push   esi
  409152:	scas   eax,DWORD PTR es:[edi]
  409153:	leave  
  409154:	call   0xfeb16ffa
  409159:	inc    esi
  40915a:	out    dx,eax
  40915b:	xchg   ebx,eax
  40915c:	idiv   BYTE PTR [esi]
  40915e:	and    eax,0x24e17471
  409163:	scas   al,BYTE PTR es:[edi]
  409164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409165:	add    BYTE PTR cs:[eax],al
	...
  409174:	add    BYTE PTR ds:0xd0db471,dl
  40917a:	jno    0x40917a
  40917c:	adc    DWORD PTR [eax],ebp
  40917e:	pop    ds
  40917f:	(bad)  
  409180:	push   ss
  409181:	jne    0x4091be
  409183:	loope  0x40919b
  409185:	jne    0x4091f8
  409187:	jmp    0xfe24988c
  40918c:	jmp    DWORD PTR [ecx]
  40918e:	loope  0x40917c
  409190:	not    DWORD PTR [ecx]
  409192:	scas   eax,DWORD PTR es:[edi]
  409193:	call   0xfdef109e
  409198:	jmp    FWORD PTR [ebx-0x1e000a5d]
  40919e:	mov    ds:0xaf11a8f9,eax
  4091a3:	std    
  4091a4:	mov    ch,0xa2
  4091a6:	mov    dh,0xfd
  4091a8:	dec    DWORD PTR [esi]
  4091aa:	mov    esp,0xaea1ffa8
  4091af:	mov    bl,0xf0
  4091b1:	cdq    
  4091b2:	scas   al,BYTE PTR es:[edi]
  4091b3:	std    
  4091b4:	dec    DWORD PTR [ebx]
  4091b6:	sar    ch,0x75
  4091b9:	into   
  4091ba:	pushf  
  4091bb:	cmp    edi,esi
  4091bd:	mov    eax,ds:0xd6b5fdae
  4091c2:	mov    dh,0xfd
  4091c4:	(bad)  
  4091c5:	mov    esi,0xc1ffa917
  4091ca:	scas   al,BYTE PTR es:[edi]
  4091cb:	inc    ebx
  4091cc:	clc    
  4091cd:	iret   
  4091ce:	xchg   esp,eax
  4091cf:	cld    
  4091d0:	call   DWORD PTR [ecx]
  4091d2:	scas   eax,DWORD PTR es:[edi]
  4091d3:	jae    0x4091d1
  4091d5:	mov    esi,0x916e
	...
  4091e6:	add    BYTE PTR [eax],al
  4091e8:	xchg   esi,eax
  4091e9:	std    
  4091ea:	ret    0x960c
  4091ed:	or     DWORD PTR [ebx-0x2f81a14],0x1422666a
  4091f7:	jmp    FWORD PTR [ebx-0x44191744]
  4091fd:	scas   al,BYTE PTR es:[edi]
  4091fe:	std    
  4091ff:	mov    DWORD PTR [ebx-0x506d9748],ebp
  409205:	test   esi,edi
  409207:	addr16 push esp
  409209:	les    eax,FWORD PTR [eax]
  40920b:	and    BYTE PTR [ecx],0x21
  40920e:	push   es
  40920f:	call   0xff766053
  409214:	xor    BYTE PTR [edx-0x6c],cl
  409217:	pop    ecx
  409218:	jle    0x40927b
  40921a:	cmp    DWORD PTR ds:0xffc33998,esi
  409220:	sbb    ebp,ebp
  409222:	or     eax,ebp
  409224:	sbb    ebx,DWORD PTR [ebp+0x39]
  409227:	dec    DWORD PTR [eax]
  409229:	or     eax,0x798aff39
  40922e:	sub    bh,cl
  409230:	mov    ds:0xfdc93996,al
  409235:	add    dl,BYTE PTR gs:[ebp-0x4c]
  409239:	xchg   ebp,eax
  40923a:	add    esp,0x3
  40923d:	aaa    
  40923e:	cmp    edi,edi
  409240:	retf   0x389c
  409243:	push   eax
  409244:	shl    BYTE PTR [esp+edx*1+0x2a7552ff],1
  40924b:	loopne 0x40924d
	...
  409259:	add    BYTE PTR [eax],al
  40925b:	scas   eax,DWORD PTR es:[edi]
  40925c:	popa   
  40925d:	add    cl,BYTE PTR [ebx]
  40925f:	jg     0x4092c7
  409261:	jg     0x409221
  409263:	ds popa 
  409265:	add    al,bh
  409267:	add    cl,BYTE PTR [ecx+0x2]
  40926a:	add    BYTE PTR [edi],bh
  40926c:	popa   
  40926d:	inc    ecx
  40926e:	inc    ebp
  40926f:	xchg   ebx,eax
  409270:	test   BYTE PTR [eax],0x0
  409273:	aas    
  409274:	retf   
  409275:	add    al,0x6a
  409277:	aas    
  409278:	fwait
  409279:	add    ch,BYTE PTR [edx+0x3f]
  40927c:	fdivr  QWORD PTR [esi+0x7ee40ff3]
  409282:	hlt    
  409283:	push   0x685038fe
  409288:	sub    al,0x3a
  40928a:	(bad)  
  40928b:	jmp    0x261:0xafb229ac
  409292:	or     edi,DWORD PTR [edi+0x35]
  409295:	(bad)  
  409296:	call   0x4295b59
  40929b:	aas    
  40929c:	loopne 0x409248
  40929e:	retf   
  40929f:	jg     0x409269
  4092a1:	push   ss
  4092a2:	scas   al,BYTE PTR es:[edi]
  4092a3:	inc    eax
  4092a4:	pusha  
  4092a5:	push   esp
  4092a6:	ins    BYTE PTR es:[edi],dx
  4092a7:	sub    BYTE PTR [edi-0x68],ch
  4092aa:	mov    WORD PTR [edi],cs
  4092ac:	cmp    eax,0x6f102f65
  4092b1:	not    edx
  4092b3:	outs   dx,BYTE PTR ds:[esi]
  4092b4:	pusha  
  4092b5:	inc    esp
  4092b6:	ins    BYTE PTR es:[edi],dx
  4092b7:	or     BYTE PTR [edi+0x71],ch
  4092ba:	or     DWORD PTR [edi],0x37df77
	...
  4092cc:	add    BYTE PTR [eax],al
  4092ce:	out    0x71,eax
  4092d0:	(bad)  
  4092d1:	aaa    
  4092d2:	lock loope 0x4092bc
  4092d5:	stos   DWORD PTR es:[edi],eax
  4092d6:	adc    edx,DWORD PTR [ecx]
  4092d8:	sub    DWORD PTR [eax+eiz*8],eax
  4092db:	xor    al,0xb8
  4092dd:	das    
  4092de:	fsubr  DWORD PTR [esi-0x49]
  4092e1:	mov    cl,0x44
  4092e3:	pusha  
  4092e4:	lods   eax,DWORD PTR ds:[esi]
  4092e5:	push   0xffffffc8
  4092e7:	outs   dx,BYTE PTR ds:[esi]
  4092e8:	jno    0x40926b
  4092ea:	(bad)  [esi-0x61]
  4092ed:	aaa    
  4092ee:	and    eax,0x1624ffc8
  4092f3:	or     eax,ebp
  4092f5:	ss bnd ja 0x409378
  4092f9:	aaa    
  4092fa:	mov    al,ds:0xa707f56e
  4092ff:	imul   eax,DWORD PTR [edx+0x37],0x24654090
  409306:	nop
  409307:	outs   dx,BYTE PTR ds:[esi]
  409308:	stos   BYTE PTR es:[di],al
  40930a:	and    dh,0x9e
  40930d:	(bad)  
  40930f:	(bad)  
  409310:	push   esi
  409311:	jno    0x409382
  409313:	jbe    0x409364
  409315:	aaa    
  409316:	push   0x782bf3f4
  40931b:	and    DWORD PTR [edi],edi
  40931d:	aaa    
  40931e:	mov    BYTE PTR [ecx+eax*1+0x45],0x20
  409323:	outs   dx,DWORD PTR ds:[esi]
  409324:	inc    bl
  409326:	cmp    al,0xe0
  409328:	mov    eax,0x54ff6e7b
  40932e:	jae    0x4093a5
  409330:	(bad)  
  409331:	push   ss
	...
  40933e:	add    BYTE PTR [eax],al
  409340:	add    BYTE PTR [eax-0xd],ch
  409343:	or     al,0x1
  409345:	xchg   edi,eax
  409346:	and    bh,dh
  409348:	push   es
  409349:	mov    dl,0x43
  40934b:	jmp    0x6bade546
  409350:	jmp    0xa898ef39
  409355:	cmp    al,0x6d
  409357:	mov    ah,0xd9
  409359:	push   ecx
  40935a:	ins    DWORD PTR es:[edi],dx
  40935b:	(bad)  
  40935c:	fisubr WORD PTR [edi+0x6678e8c1]
  409362:	ins    DWORD PTR es:[edi],dx
  409363:	(bad)  
  409364:	pusha  
  409365:	mov    edi,0x29c6f68c
  40936a:	dec    ecx
  40936b:	mov    esp,0xfe6d29c5
  409370:	jmp    0x6cc25404
  409375:	sbb    al,0x75
  409377:	(bad)  
  409378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409379:	cmp    al,0xf4
  40937b:	arpl   WORD PTR [edx+0x37],bp
  40937e:	pop    esp
  40937f:	not    BYTE PTR [esi+0x2d74c869]
  409385:	mov    esp,0x697ee92b
  40938a:	ins    DWORD PTR es:[edi],dx
  40938b:	add    ebp,esi
  40938d:	ins    DWORD PTR es:[edi],dx
  40938e:	in     eax,0x0
  409390:	jmp    0xf53ec1ee
  409395:	xor    al,0x60
  409397:	repnz mov cl,BYTE PTR [ecx+0x6d]
  40939b:	(bad)  
  40939c:	xchg   esp,eax
  40939d:	and    BYTE PTR [ebp-0x2],dh
  4093a0:	push   esi
  4093a1:	sub    ebx,esi
  4093a3:	or     BYTE PTR [ecx+0x0],al
	...
  4093b2:	add    BYTE PTR [eax],al
  4093b4:	test   eax,0xf900fe29
  4093b9:	mov    ch,0xb3
  4093bb:	call   0x3e49d1
  4093c0:	xchg   ebx,eax
  4093c1:	shr    eax,0x39
  4093c4:	ret    0xfdb6
  4093c7:	jmp    ebx
  4093c9:	int3   
  4093ca:	cmc    
  4093cb:	call   FWORD PTR [ecx-0x4a]
  4093ce:	jae    0x4093d8
  4093d0:	bound  esp,QWORD PTR ds:[edx-0x4c49c601]
  4093d7:	loopne 0x4093fa
  4093d9:	mov    bl,0xfd
  4093db:	call   DWORD PTR [ebx-0x7de2173f]
  4093e1:	mov    dh,0xfd
  4093e3:	call   DWORD PTR [ebx+0x15]
  4093e6:	idiv   bh
  4093e8:	sbb    DWORD PTR [ebx-0x3cf1f78d],esi
  4093ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093ef:	dec    DWORD PTR [ecx]
  4093f1:	mov    bl,0xb3
  4093f3:	in     al,0x11
  4093f5:	mov    bl,0xfd
  4093f7:	call   0x3ea1a3
  4093fc:	cdq    
  4093fd:	fsubr  st(0),st
  4093ff:	test   DWORD PTR [ecx-0x3f19174e],0x63fffdb2
  409409:	mov    al,ds:0x9bd9fff5
  40940e:	fldenv [esi-0x4a024d37]
  409414:	mov    esi,0xfffd9a
	...
  409425:	add    BYTE PTR [eax],al
  409427:	into   
  409428:	adc    esp,DWORD PTR [edi-0x4c4ce601]
  40942e:	fcom   QWORD PTR [ecx]
  409430:	mov    bl,0xfd
  409432:	call   0x3ea21a
  409437:	sbb    ebp,ebx
  409439:	lock neg DWORD PTR [ecx]
  40943c:	mov    bl,0xfd
  40943e:	jne    0x40947f
  409440:	arpl   WORD PTR ds:0xf6073775,si
  409446:	std    
  409447:	pusha  
  409448:	add    eax,0xb54fb534
  40944d:	xor    edi,edi
  40944f:	addr16 inc edi
  409451:	pop    edi
  409452:	dec    DWORD PTR [eax-0x63]
  409455:	mov    ebp,0x342f56f7
  40945a:	(bad)  
  40945b:	cmp    bl,cl
  40945d:	lods   eax,DWORD PTR ds:[esi]
  40945e:	sti    
  40945f:	daa    
  409460:	outs   dx,BYTE PTR ds:[esi]
  409461:	test   DWORD PTR [eax],eax
  409463:	aas    
  409464:	test   al,0x42
  409466:	or     al,0x3f
  409468:	dec    esp
  409469:	mov    esp,ebp
  40946b:	mov    esp,0x3f6a38a5
  409470:	inc    edi
  409471:	or     eax,0x2a6992ff
  409476:	mov    ebx,0x893562dc
  40947b:	or     BYTE PTR [ebp-0x5f690556],0x4
  409482:	push   DWORD PTR [edx]
  409484:	add    cl,ch
  409486:	inc    eax
  409487:	aas    
  409488:	sub    BYTE PTR [edi+0x7],0x0
	...
  409497:	add    BYTE PTR [eax],al
  409499:	add    bh,ah
  40949b:	xor    esi,DWORD PTR [edi]
  40949d:	call   eax
  40949f:	or     DWORD PTR [eax],edi
  4094a1:	pop    ecx
  4094a2:	jle    0x409505
  4094a4:	stos   BYTE PTR es:[edi],al
  4094a5:	add    DWORD PTR [edi],edi
  4094a7:	popa   
  4094a8:	cmp    bh,0x32
  4094ab:	jns    0x4094d7
  4094ad:	in     al,0xb2
  4094af:	push   edx
  4094b0:	xor    eax,0x353d32ff
  4094b5:	jne    0x4094ee
  4094b7:	pop    ecx
  4094b8:	inc    esp
  4094b9:	mov    ds:0xc24aea98,eax
  4094be:	cmp    esp,DWORD PTR [ecx-0x31]
  4094c1:	mov    bl,BYTE PTR [ebx-0x7713c220]
  4094c7:	enter  0x3466,0xca
  4094cb:	add    eax,0xf571d35c
  4094d0:	div    DWORD PTR [edx+esi*8]
  4094d3:	mov    ebx,0xc8b16e3f
  4094d8:	out    0x8,eax
  4094da:	jg     0x409497
  4094dc:	test   BYTE PTR fs:[edi],bh
  4094df:	enter  0x3ce7,0x2
  4094e3:	jo     0x4094cd
  4094e5:	add    edi,DWORD PTR [edi]
  4094e7:	enter  0xbe2e,0x2c
  4094eb:	imul   esp,edi,0x3
  4094ee:	aas    
  4094ef:	fsubrp st(7),st
  4094f1:	test   eax,0xa9e7e128
  4094f6:	and    BYTE PTR [ebp*4+0x653d6f2f],bh
  4094fd:	das    
	...
  40950a:	add    BYTE PTR [eax],al
  40950c:	add    BYTE PTR [eax],cl
  40950e:	imul   esi,edi,0xffffffd2
  409511:	or     ebp,esi
  409513:	out    dx,eax
  409514:	xor    ecx,DWORD PTR [edx-0x36962f94]
  40951a:	(bad)  
  40951b:	out    0xfe,eax
  40951d:	mov    al,0xf3
  40951f:	jmp    0x657e2742
  409524:	and    al,ch
  409526:	push   0xffffffc7
  409528:	aam    0xcb
  40952a:	inc    esp
  40952b:	mov    ah,0x3b
  40952d:	shr    BYTE PTR [edx+0x18],1
  409530:	xor    edx,DWORD PTR [edx-0x28]
  409533:	scas   al,BYTE PTR es:[edi]
  409534:	mov    ecx,0x5ca16034
  409539:	mov    eax,0xaf89716a
  40953e:	jb     0x4094d7
  409540:	xor    esi,DWORD PTR [eax+ecx*4]
  409543:	adc    al,0xe6
  409545:	mov    ebp,0x983b942c
  40954a:	push   0xffffffe8
  40954c:	mov    bh,0x37
  40954e:	loopne 0x409550
  409550:	jmp    0x6efff091
  409555:	push   es
  409556:	pop    esp
  409557:	mul    BYTE PTR [esi+0x2c]
  40955a:	imul   esi,DWORD PTR [ecx+ebx*2+0x56fe6b34],0xffffffa6
  409562:	ret    0x94e8
  409565:	and    ch,BYTE PTR [ebx-0x2]
  409568:	inc    esi
  409569:	(bad)  
  40956a:	ja     0x409562
  40956c:	ds or  al,0x60
  40956f:	stos   DWORD PTR es:[edi],eax
  409570:	mov    WORD PTR [eax],es
	...
  40957e:	add    BYTE PTR [eax],al
  409580:	or     al,0x6b
  409582:	(bad)  
  409583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409584:	adc    al,0x5f
  409586:	and    DWORD PTR [esi],0x1e96df6
  40958c:	mov    ebp,0x812000c8
  409591:	mov    esp,0x5ca1b400
  409596:	sub    BYTE PTR ds:0x9300de4f,0x44
  40959d:	imul   esi,DWORD PTR [ecx+eiz*8+0x24],0x4deea329
  4095a5:	aas    
  4095a6:	inc    esp
  4095a7:	in     eax,0xd4
  4095a9:	leave  
  4095aa:	pop    edx
  4095ab:	sub    BYTE PTR [ebx],bh
  4095ad:	imul   esi,DWORD PTR [esi+ecx*2],0xce0108ab
  4095b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b5:	shr    eax,0xc
  4095b8:	or     al,0x69
  4095ba:	(bad)  
  4095bb:	push   ecx
  4095bc:	fisttp DWORD PTR [edi]
  4095be:	inc    eax
  4095bf:	jmp    0xe9415d68
  4095c4:	mov    esp,0x54f17469
  4095c9:	aad    0xfd
  4095cb:	sahf   
  4095cc:	ins    DWORD PTR es:[edi],dx
  4095cd:	loopne 0x409606
  4095cf:	xor    eax,DWORD PTR [edx-0x2a2b0097]
  4095d5:	add    DWORD PTR [eax+0x0],eax
  4095d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095d9:	mov    dh,0x73
  4095db:	or     BYTE PTR [esi+0x11fffdc5],ch
  4095e1:	dec    ebp
  4095e2:	cmp    DWORD PTR [edx+0x0],ebx
	...
  4095f1:	add    BYTE PTR [eax],al
  4095f3:	push   edi
  4095f4:	les    ebp,FWORD PTR [eax+0x2]
  4095f7:	lds    ax,DWORD PTR [eax-0x19927401]
  4095fe:	out    dx,al
  4095ff:	adc    BYTE PTR [esi-0x66740003],dh
  409605:	std    
  409606:	jne    0x409656
  409608:	int    0xab
  40960a:	mov    ds:0xc2c7b611,al
  40960f:	pop    edx
  409610:	lds    edx,FWORD PTR [ebx-0x75]
  409613:	add    dh,BYTE PTR [esi+0x1d4e0c73]
  409619:	test   eax,0xbe6a51ff
  40961e:	je     0x409600
  409620:	dec    esp
  409621:	jo     0x40967d
  409623:	xlat   BYTE PTR ds:[ebx]
  409624:	les    edx,FWORD PTR [eax-0x18]
  409627:	sub    cl,BYTE PTR [esi+edi*8]
  40962a:	push   DWORD PTR [esi+0x16684e94]
  409630:	(bad)
  409633:	mov    esi,0xe6415878
  409638:	xchg   esp,eax
  409639:	push   DWORD PTR [ebp-0x12]
  40963c:	int3   
  40963d:	xor    ecx,esp
  40963f:	adc    DWORD PTR [edi-0x3b2897a8],esi
  409645:	in     eax,dx
  409646:	mov    esi,0x4158256e
  40964b:	out    0x94,al
  40964d:	push   DWORD PTR [ebp-0x22]
  409650:	int3   
  409651:	pop    ds
  409652:	int3   
  409653:	xchg   ecx,eax
  409654:	mov    dh,0x58
  409656:	push   0x0
	...
  409663:	add    BYTE PTR [eax],al
  409665:	add    BYTE PTR [esp+eax*8+0x1e4ebeed],ah
  40966c:	pop    eax
  40966d:	inc    ecx
  40966e:	aas    
  40966f:	pop    edi
  409670:	sar    dh,cl
  409672:	sub    ah,BYTE PTR [edi+0x1a]
  409675:	or     eax,0xe830418b
  40967a:	add    DWORD PTR [edx],0x1c76ff30
  409680:	std    
  409681:	(bad)  
  409682:	jmp    0x409669
  409684:	and    BYTE PTR [ebx-0x611d7d],al
  40968a:	out    0xc7,al
  40968c:	das    
  40968d:	jne    0x4096c6
  40968f:	pop    es
  409690:	xor    eax,0x79f960a1
  409695:	inc    ebp
  409696:	pop    ebx
  409697:	xchg   esp,eax
  409698:	or     al,0xff
  40969a:	retf   0x1a76
  40969d:	or     BYTE PTR [eax-0x4f],0x2f
  4096a1:	push   0x1c
  4096a3:	call   0xff31:0x482707b5
  4096aa:	xor    BYTE PTR [esi+ecx*1],bh
  4096ad:	push   DWORD PTR [edx+0x206c1a69]
  4096b3:	xlat   BYTE PTR ds:[ebx]
  4096b4:	das    
  4096b5:	call   DWORD PTR [edx+0x47752fcd]
  4096bb:	mov    ecx,0x5f08a1fe
  4096c0:	cmp    eax,edx
  4096c2:	cmp    esi,DWORD PTR [ecx-0x29]
  4096c5:	mov    ch,bl
  4096c7:	repnz inc ebp
  4096c9:	cld    
	...
  4096d6:	add    BYTE PTR [eax],al
  4096d8:	add    al,dh
  4096da:	cld    
  4096db:	add    al,ch
  4096dd:	or     eax,0x34ff314a
  4096e2:	xor    DWORD PTR [ecx],eax
  4096e4:	test   BYTE PTR [ecx+esi*2-0x5339fffe],bl
  4096eb:	xor    BYTE PTR [ebx+0x7402814a],al
  4096f1:	xor    DWORD PTR [esi],esi
  4096f3:	mov    bh,0xf
  4096f5:	mov    eax,0xa7301cc8
  4096fa:	stc    
  4096fb:	dec    edi
  4096fc:	xor    BYTE PTR [eax+0x17302d51],ch
  409702:	push   ebp
  409703:	xor    al,bl
  409705:	cwde   
  409706:	data16 std 
  409708:	das    
  409709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40970a:	jne    0x409753
  40970c:	xor    BYTE PTR [eax+0x3f03fff8],cl
  409712:	ja     0x409742
  409714:	sar    DWORD PTR [ecx-0x23],cl
  409717:	out    dx,eax
  409718:	sbb    ecx,ebx
  40971a:	nop
  40971b:	pop    edi
  40971c:	xor    BYTE PTR [edi-0x5e],dl
  40971f:	mov    esi,DWORD PTR [eax]
  409721:	pusha  
  409722:	lock xchg edx,eax
  409724:	int    0xff
  409726:	mov    DWORD PTR [esi-0x4a],0x682c7054
  40972d:	dec    eax
  40972e:	addr16 cwde 
  409730:	fwait
  409731:	aas    
  409732:	enter  0x713e,0x8f
  409736:	addr16 popf 
  409738:	sti    
  409739:	sbb    bl,bl
  40973b:	das    
  40973c:	xor    BYTE PTR [eax],al
	...
  40974a:	add    BYTE PTR [eax],al
  40974c:	sub    BYTE PTR [eax-0xf],dh
  40974f:	and    BYTE PTR [bx-0x80],ah
  409753:	bound  esi,QWORD PTR [ebp+0x9]
  409756:	call   0x10a5218b
  40975b:	pop    esp
  40975c:	loopne 0x4097c4
  40975e:	not    edx
  409760:	cwde   
  409761:	enter  0x20e7,0xb9
  409765:	mul    esi
  409767:	mov    ecx,0x3c3a7038
  40976c:	call   0x9c6d57d7
  409771:	iretw  
  409773:	pushf  
  409774:	out    dx,al
  409775:	add    DWORD PTR [ecx],ebp
  409777:	add    al,0xd0
  409779:	fdivr  QWORD PTR [ebx+0x12eb51c]
  40977f:	mov    dh,0x10
  409781:	clc    
  409782:	push   0xbf773ce8
  409787:	cmp    DWORD PTR [eax-0x23],esp
  40978a:	or     BYTE PTR [ecx-0x6901714e],dl
  409790:	inc    ebx
  409791:	jg     0x409735
  409793:	mov    gs,WORD PTR [eax+0x67]
  409796:	je     0x40971d
  409798:	xor    edx,DWORD PTR [edi-0x6ea7815e]
  40979e:	ret    
  40979f:	in     eax,0x3c
  4097a1:	std    
  4097a2:	mov    DWORD PTR [ebp-0x44],edi
  4097a5:	mov    edi,ebp
  4097a7:	sar    DWORD PTR [edx+esi*8],cl
  4097aa:	sbb    bl,BYTE PTR [esi-0x5a]
  4097ad:	into   
  4097ae:	call   0x40980b
	...
  4097bf:	(bad)  [esi-0x2]
  4097c2:	pusha  
  4097c3:	xchg   BYTE PTR [edx+0x6b],ah
  4097c6:	jmp    0xb53e5881
  4097cb:	inc    esp
  4097cc:	outs   dx,BYTE PTR ds:[esi]
  4097cd:	and    esi,DWORD PTR [esi]
  4097cf:	adc    BYTE PTR [edi+0x6b],ah
  4097d2:	jmp    0x9d3e42ad
  4097d7:	xor    al,0x6e
  4097d9:	pop    ss
  4097da:	push   ds
  4097db:	pop    eax
  4097dc:	gs imul ebp,ecx,0xffffffc6
  4097e0:	sar    ebp,0x94
  4097e3:	adc    al,0x6e
  4097e5:	or     eax,DWORD PTR [esi]
  4097e7:	pusha  
  4097e8:	imul   ecx,DWORD PTR gs:[esi],0x830108f5
  4097ef:	ss gs je 0x4097d4
  4097f3:	push   esp
  4097f4:	popa   
  4097f5:	jmp    esi
  4097f7:	and    eax,esi
  4097f9:	in     eax,dx
  4097fa:	inc    ebx
  4097fb:	add    ah,BYTE PTR [esi+0x68]
  4097fe:	or     dl,BYTE PTR [eax]
  409800:	fisttp DWORD PTR [eax]
  409802:	sar    DWORD PTR [eax],0x66
  409805:	inc    BYTE PTR [eax]
  409807:	stc    
  409808:	inc    ecx
  409809:	out    dx,eax
  40980a:	pop    edx
  40980b:	pop    ss
  40980c:	int3   
  40980d:	push   0x1c
  40980f:	mov    DWORD PTR [eax],esp
  409811:	push   es
  409812:	call   0x3e4be2
  409817:	fldenv [eax]
  409819:	cli    
  40981a:	call   DWORD PTR [ebx+0x64]
  40981d:	out    0xd8,al
  40981f:	div    BYTE PTR [ebp+0xc9fd]
	...
  409831:	add    ah,ah
  409833:	int    0x0
  409835:	push   ebp
  409836:	or     eax,0xaec47fc5
  40983b:	sahf   
  40983c:	std    
  40983d:	call   FWORD PTR [ebx]
  40983f:	nop
  409840:	cli    
  409841:	push   eax
  409842:	jmp    0x943fa666
  409847:	gs out 0xbf,al
  40984a:	in     eax,dx
  40984b:	enter  0xb00,0x16
  40984f:	test   WORD PTR [edi+0x67],ax
  409853:	leave  
  409854:	add    bh,al
  409856:	mov    ds:0x560000b1,eax
  40985b:	leave  
  40985c:	lds    eax,FWORD PTR [ebp+0x2]
  40985f:	mov    dh,0x5
  409861:	add    BYTE PTR [esi],ah
  409863:	aas    
  409864:	(bad)  
  409865:	imul   esp,DWORD PTR [esi],0x1669fe3f
  40986b:	dec    eax
  40986c:	inc    esp
  40986d:	hlt    
  40986e:	out    0x47,al
  409870:	test   ah,dh
  409872:	xor    DWORD PTR [esi+0x203950fd],esi
  409878:	idiv   bh
  40987a:	xchg   ebx,eax
  40987b:	mov    ch,0xe8
  40987d:	xchg   ecx,eax
  40987e:	popf   
  40987f:	leave  
  409880:	add    BYTE PTR [ebx],cl
  409882:	es sbb eax,0xc9ece905
  409888:	add    BYTE PTR [eax],al
  40988a:	mov    es,WORD PTR [edi+0x6f3f4146]
  409890:	sub    eax,0x90872f75
  409895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4098a2:	add    BYTE PTR [eax],al
  4098a4:	add    al,dl
  4098a6:	(bad)  
  4098a7:	aad    0x8a
  4098a9:	out    dx,eax
  4098aa:	repz test esp,esi
  4098ad:	enter  0x2c1d,0x50
  4098b1:	or     eax,0xb0a68087
  4098b6:	sub    eax,0x3daf857a
  4098bb:	sub    al,0xff
  4098bd:	xchg   edi,eax
  4098be:	pop    ss
  4098bf:	arpl   di,di
  4098c1:	cwde   
  4098c2:	enter  0x6804,0x1
  4098c6:	stos   BYTE PTR es:[edi],al
  4098c7:	sar    edi,0x89
  4098ca:	fwait
  4098cb:	xor    al,0xf7
  4098cd:	sbb    ch,0x2b
  4098d0:	jne    0x40991d
  4098d2:	inc    edi
  4098d3:	push   ecx
  4098d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098d5:	jo     0x4098c4
  4098d7:	jns    0x40985e
  4098d9:	pop    ebx
  4098da:	std    
  4098db:	sub    edi,edi
  4098dd:	aad    0x6e
  4098df:	call   0x8aff:0x22ff459
  4098e6:	sahf   
  4098e7:	xor    edi,edi
  4098e9:	dec    eax
  4098ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098eb:	mov    ch,0xb
  4098ed:	push   edi
  4098ee:	scas   eax,DWORD PTR es:[edi]
  4098ef:	gs (bad) 
  4098f1:	cmp    cl,ch
  4098f3:	test   eax,ebp
  4098f5:	sub    BYTE PTR [ebx-0x2a157cd5],ch
  4098fb:	xor    edi,edi
  4098fd:	and    BYTE PTR [edx-0x4a],dh
  409900:	das    
  409901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409902:	jno    0x409906
  409904:	out    dx,eax
  409905:	sar    DWORD PTR [ecx],1
  409907:	adc    al,0x5b
	...
  409915:	add    BYTE PTR [eax],al
  409917:	add    BYTE PTR [esi+0x71],bh
  40991a:	sub    eax,0x2d6313b5
  40991f:	(bad)  
  409920:	clc    
  409921:	fdiv   st(1),st
  409923:	out    0xb3,eax
  409925:	enter  0x2cb0,0xe8
  409929:	lock call 0x40636932
  40992f:	in     al,0x75
  409931:	or     eax,ebp
  409933:	sub    al,0x8a
  409935:	je     0x4098f6
  409937:	sub    al,0xc8
  409939:	arpl   WORD PTR ds:0xa12cd8fc,si
  40993f:	sub    al,0xb8
  409941:	inc    edi
  409942:	ins    DWORD PTR es:[edi],dx
  409943:	sbb    ebp,DWORD PTR [eax+0x3303a763]
  409949:	cwde   
  40994a:	(bad)  
  40994c:	aas    
  40994d:	jae    0x4099a5
  40994f:	fwait
  409950:	xor    bh,bh
  409952:	sub    BYTE PTR [eax+edx*4],al
  409955:	sbb    eax,0x63883490
  40995a:	jg     0x409912
  40995c:	cmp    BYTE PTR [eax+0x6b],dh
  40995f:	cmp    bh,BYTE PTR [eax+0x63]
  409962:	add    BYTE PTR [ebx],al
  409964:	aas    
  409965:	jae    0x40990d
  409967:	fwait
  409968:	dec    eax
  409969:	jmp    FWORD PTR [eax+0x401d6003]
  40996f:	xor    al,0x58
  409971:	arpl   WORD PTR [edi-0x4a],cx
  409974:	cmp    BYTE PTR [eax-0x2d],dh
  409977:	cmp    cl,BYTE PTR [eax+0x63]
  40997a:	aas    
  40997b:	jbe    0x40997d
	...
  409989:	add    BYTE PTR [eax],al
  40998b:	push   ebx
  40998c:	pop    ebx
  40998d:	aaa    
  40998e:	sub    al,0x27
  409990:	stos   BYTE PTR es:[edi],al
  409991:	mov    DWORD PTR [eax+esi*1],ebp
  409994:	arpl   WORD PTR [ebp+0x1b],bx
  409997:	xor    BYTE PTR [ebx+0x1f],ah
  40999a:	sbb    eax,DWORD PTR [esi+eiz*1+0x17]
  40999e:	sub    al,0x18
  4099a0:	sbb    eax,0x63103418
  4099a5:	pop    es
  4099a6:	mov    dh,0x34
  4099a8:	arpl   WORD PTR [ebp-0x5],si
  4099ab:	sbb    BYTE PTR [ecx+eax*1],bl
  4099ae:	mul    DWORD PTR [ebx+eiz*2]
  4099b1:	(bad)  
  4099b2:	xor    al,0x2c
  4099b4:	pop    ebx
  4099b5:	(bad)  
  4099b6:	out    0x4b,al
  4099b8:	arpl   WORD PTR [eax+0x446314de],sp
  4099be:	sar    DWORD PTR [edx],1
  4099c0:	nop
  4099c1:	dec    esi
  4099c3:	and    al,0x63
  4099c5:	je     0x40998c
  4099c7:	sub    ebp,esi
  4099c9:	mov    ch,cl
  4099cb:	cmp    al,0x91
  4099cd:	ret    
  4099ce:	in     eax,0x3c
  4099d0:	std    
  4099d1:	mov    DWORD PTR [ebp-0x6ef3229c],edi
  4099d7:	fwait
  4099d8:	sub    al,0xfe
  4099da:	sahf   
  4099db:	mov    al,ds:0xb4d07522
  4099e0:	mov    al,0x59
  4099e2:	sub    BYTE PTR [ebx],bh
  4099e4:	clc    
  4099e5:	call   0xfea3b897
  4099ea:	sbb    DWORD PTR [ebx-0x16],ebp
  4099ed:	add    cl,ch
	...
  4099fb:	add    BYTE PTR [eax],al
  4099fd:	add    BYTE PTR [ebp+0x22],dl
  409a00:	imul   edx,edi,0xb9010781
  409a06:	adc    eax,0x2d5108dd
  409a0b:	nop
  409a0c:	(bad)  
  409a0d:	push   esi
  409a0e:	mov    ebp,edx
  409a10:	(bad)  
  409a11:	call   0x9a9bc4b
  409a16:	js     0x409a1f
  409a18:	add    DWORD PTR [ecx+0x4108dd15],ebx
  409a1e:	popa   
  409a1f:	nop
  409a20:	(bad)  
  409a21:	cs push ebx
  409a23:	and    eax,0x8f5426a0
  409a28:	ret    
  409a29:	icebp  
  409a2a:	cmp    al,0xfb
  409a2c:	mov    DWORD PTR ds:0xb7fd8cc0,eax
  409a32:	in     eax,dx
  409a33:	out    dx,eax
  409a34:	add    BYTE PTR [eax],al
  409a36:	lods   al,BYTE PTR ds:[esi]
  409a37:	sar    ch,cl
  409a39:	jne    0x409a49
  409a3b:	mov    esi,0xaef19ec1
  409a40:	xchg   DWORD PTR [ebp-0x1e],eax
  409a43:	loop   0x409a78
  409a45:	jmp    0x409a60
  409a47:	mov    edi,esi
  409a49:	mov    al,BYTE PTR [ebx-0x43]
  409a4c:	inc    ebp
  409a4d:	inc    ecx
  409a4e:	out    0x45,al
  409a50:	ds add cl,dh
  409a53:	loope  0x409a0e
  409a55:	add    dh,dl
  409a57:	lds    ebp,FWORD PTR [eax+0xb]
  409a5a:	sbb    eax,0x7e55fe8b
  409a5f:	push   esi
  409a60:	mov    BYTE PTR [eax],al
	...
  409a6e:	add    BYTE PTR [eax],al
  409a70:	add    BYTE PTR [esi+0x7074be62],ah
  409a76:	mov    WORD PTR [esi+0x38],?
  409a79:	xchg   esi,eax
  409a7a:	pop    esi
  409a7b:	add    BYTE PTR [edi+0x5000c5a6],0x3e
  409a82:	popa   
  409a83:	pop    ebx
  409a84:	inc    ecx
  409a85:	xchg   esi,eax
  409a86:	mov    ebp,0xc5968874
  409a8b:	pop    edx
  409a8c:	add    esp,DWORD PTR [ebp+esi*2-0x5202e71a]
  409a93:	std    
  409a94:	push   eax
  409a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a96:	cmp    eax,0xeef1fffe
  409a9b:	push   0xfe8c8d16
  409aa0:	dec    edi
  409aa1:	add    DWORD PTR [eax],ebx
  409aa3:	push   es
  409aa4:	call   0x3e3816
  409aa9:	sahf   
  409aaa:	cmp    eax,0xef810001
  409aaf:	push   0xfe8bcd20
  409ab4:	dec    edi
  409ab5:	popa   
  409ab6:	sbb    BYTE PTR [esi],al
  409ab8:	call   0x3e37a6
  409abd:	aas    
  409abe:	(bad)  
  409abf:	or     DWORD PTR [ecx+0x431ed210],esp
  409ac5:	xchg   edi,eax
  409ac6:	outs   dx,BYTE PTR ds:[esi]
  409ac7:	iret   
  409ac8:	inc    eax
  409ac9:	aas    
  409aca:	cmp    bl,BYTE PTR [edx]
  409acc:	enter  0x6ec6,0x2
  409ad0:	or     edi,edi
  409ad2:	(bad)  
  409ad4:	push   ebp
	...
  409ae1:	add    BYTE PTR [eax],al
  409ae3:	add    bh,dl
  409ae5:	sbb    eax,0x9ee0ff5f
  409aea:	aam    0x67
  409aec:	aas    
  409aed:	outs   dx,DWORD PTR ds:[esi]
  409aee:	sbb    DWORD PTR [esi+0x40cd5967],edi
  409af4:	aas    
  409af5:	mov    edi,0x77377527
  409afa:	jecxz  0x409ac3
  409afc:	mov    eax,0x3e67cd19
  409b01:	outs   dx,DWORD PTR ds:[esi]
  409b02:	sbb    DWORD PTR [esi+0x40cd8f17],edi
  409b08:	aas    
  409b09:	lahf   
  409b0a:	daa    
  409b0b:	jne    0x409b54
  409b0d:	inc    edi
  409b0e:	pop    ss
  409b0f:	enter  0x5190,0x1d
  409b13:	rcr    edi,cl
  409b15:	dec    ecx
  409b16:	sub    bl,ch
  409b18:	ds test eax,0x643f3e84
  409b1e:	sub    al,0x46
  409b20:	jae    0x409b3f
  409b22:	inc    edx
  409b23:	mov    ecx,0xff27e968
  409b28:	ins    DWORD PTR es:[edi],dx
  409b29:	push   eax
  409b2a:	in     eax,dx
  409b2b:	push   es
  409b2c:	dec    eax
  409b2d:	hlt    
  409b2e:	mov    ebp,0x9f1150fe
  409b33:	sbb    DWORD PTR [eax+0x23],ecx
  409b36:	cli    
  409b37:	out    0x7c,eax
  409b39:	mov    al,ds:0xd2a5ff27
  409b3e:	daa    
  409b3f:	jne    0x409b88
  409b41:	or     DWORD PTR [edx-0x2],ebp
  409b44:	sub    cl,cl
  409b46:	es sahf 
	...
  409b54:	add    BYTE PTR [eax],al
  409b56:	add    BYTE PTR [edi+ebx*2-0x6b],al
  409b5a:	sti    
  409b5b:	and    BYTE PTR [eax],dh
  409b5d:	push   ss
  409b5e:	sub    DWORD PTR [eax],edx
  409b60:	icebp  
  409b61:	retf   
  409b62:	int3   
  409b63:	jg     0x409b2d
  409b65:	push   es
  409b66:	out    dx,eax
  409b67:	cdq    
  409b68:	adc    BYTE PTR [ecx-0x202a07fd],ch
  409b6e:	sbb    ebp,DWORD PTR [esi]
  409b70:	pop    ebp
  409b71:	out    dx,eax
  409b72:	sub    BYTE PTR [edi-0x64],dl
  409b75:	inc    edx
  409b76:	ret    
  409b77:	loopne 0x409b60
  409b79:	jmp    0xd788da81
  409b7e:	scas   al,BYTE PTR es:[edi]
  409b7f:	cmp    BYTE PTR [eax-0x11],dh
  409b82:	es enter 0xc75f,0xae
  409b87:	les    ebx,FWORD PTR [edi+0x35]
  409b8a:	cld    
  409b8b:	mov    al,ds:0xb0285570
  409b90:	dec    DWORD PTR ds:0xe7c47d3b
  409b96:	into   
  409b97:	mov    ch,0x6c
  409b99:	imul   edi,DWORD PTR [edi],0x2897576f
  409b9f:	ret    0x8c05
  409ba2:	ror    DWORD PTR [ecx+0xa28d7d5],cl
  409ba8:	int3   
  409ba9:	(bad)  
  409baa:	ss (bad) 
  409bac:	enter  0xfce7,0xb0
  409bb0:	iret   
  409bb1:	lds    edi,FWORD PTR fs:[esi]
  409bb4:	enter  0x40e7,0xfa
  409bb8:	pop    edi
  409bb9:	call   0x409bc1
	...
  409bca:	aas    
  409bcb:	enter  0xbe2e,0x4c
  409bcf:	pop    edi
  409bd0:	out    0x3,eax
  409bd2:	aas    
  409bd3:	repnz out 0x9d,eax
  409bd6:	inc    eax
  409bd7:	icebp  
  409bd8:	out    0x9d,eax
  409bda:	cmp    BYTE PTR [ecx+eax*1-0x54],cl
  409bde:	pusha  
  409bdf:	clc    
  409be0:	mov    esp,DWORD PTR [eax+ebx*2+0x57]
  409be4:	(bad)  
  409be5:	es or  al,0x5e
  409be8:	je     0x409c0b
  409bea:	addr16 aad 0xfc
  409bed:	add    edi,eax
  409bef:	dec    edi
  409bf0:	add    ecx,ebp
  409bf2:	or     ebx,DWORD PTR [edi]
  409bf4:	jne    0x409be2
  409bf6:	and    eax,0x3ce902c5
  409bfb:	lock inc ecx
  409bfd:	mov    eax,ds:0x74ff5efd
  409c02:	dec    esp
  409c03:	jo     0x409ba5
  409c05:	mov    bl,BYTE PTR [eax]
  409c07:	pop    edi
  409c08:	push   ecx
  409c09:	jb     0x409c7e
  409c0b:	dec    ebp
  409c0c:	test   ch,bl
  409c0e:	and    BYTE PTR [edi-0x2],bl
  409c11:	cmp    ebp,ebp
  409c13:	xchg   ax,ax
  409c15:	mov    bl,BYTE PTR [eax]
  409c17:	pop    edi
  409c18:	mov    BYTE PTR [ebx+esi*2+0x57],ah
  409c1c:	(bad)  
  409c1d:	mov    dh,0x53
  409c1f:	addr16 sahf 
  409c21:	scas   al,BYTE PTR es:[edi]
  409c22:	pusha  
  409c23:	repnz add BYTE PTR [ecx],dl
  409c26:	fld    QWORD PTR [ecx]
  409c28:	inc    eax
  409c29:	jmp    0x9f31b18f
	...
  409c3a:	add    BYTE PTR [eax],al
  409c3c:	add    BYTE PTR [eax+0x5f],bl
  409c3f:	(bad)  
  409c40:	adc    al,0x87
  409c42:	data16 jmp 0x409c90
  409c45:	pop    eax
  409c46:	pop    edi
  409c47:	mov    BYTE PTR [edi+ebx*1+0x57],ah
  409c4b:	(bad)  
  409c4c:	jbe    0x409c23
  409c4e:	pop    esi
  409c4f:	data16 add dh,BYTE PTR [edi+eax*1+0x1]
  409c54:	data16 out dx,al
  409c56:	push   edi
  409c57:	neg    BYTE PTR [esi+0x20]
  409c5a:	pop    edi
  409c5b:	je     0x409c42
  409c5d:	xor    al,0x8f
  409c5f:	mov    ds:0x8451204e,eax
  409c64:	add    dl,ch
  409c66:	scas   al,BYTE PTR es:[edi]
  409c67:	std    
  409c68:	dec    DWORD PTR [edx+ecx*8]
  409c6b:	push   0xfe84cd74
  409c70:	(bad)  
  409c71:	mov    bl,0x94
  409c73:	cmc    
  409c74:	call   FWORD PTR [ecx-0x5b]
  409c77:	jae    0x409c85
  409c79:	fsub   DWORD PTR cs:[edx-0x7c24d601]
  409c80:	call   0x6b3e41b6
  409c85:	push   ss
  409c86:	inc    edx
  409c87:	jge    0x409ce4
  409c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c8a:	leave  
  409c8b:	std    
  409c8c:	mov    ch,0xf6
  409c8e:	scas   al,BYTE PTR es:[edi]
  409c8f:	std    
  409c90:	(bad)  
  409c91:	fstp   DWORD PTR [eax]
  409c93:	or     ch,al
  409c95:	mov    edi,0x4ffffde7
  409c9a:	dec    eax
  409c9b:	(bad)  
  409c9d:	jmp    0xc62848
	...
  409cae:	add    BYTE PTR [eax],al
  409cb0:	imul   BYTE PTR [esi+0x3c26fffd]
  409cb6:	lea    ebx,[ebx+0x67]
  409cb9:	(bad)  
  409cba:	std    
  409cbb:	mov    ch,0xf6
  409cbd:	scas   al,BYTE PTR es:[edi]
  409cbe:	std    
  409cbf:	(bad)  
  409cc0:	fstp   DWORD PTR [eax+0x67]
  409cc3:	dec    eax
  409cc4:	push   edi
  409cc5:	(bad)  
  409cc6:	call   0xfde6a141
  409ccb:	or     esp,esi
  409ccd:	sub    eax,0xa8fb8319
  409cd2:	cmc    
  409cd3:	(bad)  
  409cd4:	mov    ecx,0xf910755d
  409cd9:	pop    eax
  409cda:	pop    DWORD PTR [ebp-0x25132]
  409ce0:	inc    esi
  409ce1:	mov    esp,0xa5d99f41
  409ce6:	jmp    0x7549e9ff
  409ceb:	push   es
  409cec:	aas    
  409ced:	pop    ds
  409cee:	sbb    dh,BYTE PTR [edi]
  409cf0:	test   al,0xe
  409cf2:	daa    
  409cf3:	(bad)  
  409cf4:	mov    edx,0x38ff2ea7
  409cf9:	je     0x409cfd
  409cfb:	add    BYTE PTR [edi],bh
  409cfd:	in     al,0x80
  409cff:	shl    BYTE PTR [eax],1
  409d01:	scas   al,BYTE PTR es:[edi]
  409d02:	es push eax
  409d04:	xchg   edi,eax
  409d05:	inc    edi
  409d06:	retf   
  409d07:	inc    eax
  409d08:	aas    
  409d09:	mov    esi,0xb608f070
  409d0e:	call   DWORD PTR es:[edx+0x2b1a7b]
	...
  409d21:	add    BYTE PTR [eax],al
  409d23:	ffree  st(5)
  409d25:	es mov edx,eax
  409d28:	mov    dl,0x2e
  409d2a:	push   eax
  409d2c:	icebp  
  409d2d:	push   0x246df0e4
  409d32:	add    BYTE PTR [eax],dh
  409d34:	jmp    0x409cbd
  409d36:	add    BYTE PTR [edi],bh
  409d38:	outs   dx,DWORD PTR ds:[esi]
  409d39:	cmp    DWORD PTR [ebp-0xdb821d],0x8e7e7e3f
  409d43:	aas    
  409d44:	outs   dx,DWORD PTR ds:[esi]
  409d45:	add    al,BYTE PTR [ebx-0xd38906]
  409d4b:	mov    al,0x6e
  409d4d:	cmc    
  409d4e:	cmp    DWORD PTR [esi+0x1700026e],0x5f
  409d55:	add    ch,bh
  409d57:	fnstcw WORD PTR ds:0xe8a707ae
  409d5d:	xchg   edi,edi
  409d5f:	mov    BYTE PTR [ebp+0x6e],cl
  409d62:	in     al,dx
  409d63:	mov    BYTE PTR [ebp+0x24],al
  409d66:	push   edx
  409d68:	push   esi
  409d69:	sbb    bl,dh
  409d6b:	aam    0xd5
  409d6d:	and    edi,edi
  409d6f:	mov    dl,0x46
  409d71:	sub    al,0xff
  409d73:	pusha  
  409d74:	(bad)  
  409d75:	scas   ax,WORD PTR es:[edi]
  409d77:	inc    eax
  409d78:	jo     0x409db2
  409d7a:	mov    DWORD PTR [eax+0x5c],edx
  409d7d:	push   edi
  409d7e:	outs   dx,DWORD PTR ds:[esi]
  409d7f:	arpl   WORD PTR [edi+ecx*2+0x25],dx
  409d83:	inc    eax
  409d84:	shr    bh,cl
  409d86:	sbb    eax,DWORD PTR [eax]
	...
  409d94:	add    BYTE PTR [eax],al
  409d96:	std    
  409d97:	aas    
  409d98:	aas    
  409d99:	and    eax,0x2d101630
  409d9e:	sub    BYTE PTR [edi+ebp*1-0x51],bl
  409da2:	cmp    BYTE PTR [eax-0x46],dh
  409da5:	mov    BYTE PTR [eax],bl
  409da7:	pop    esp
  409da8:	pop    ds
  409da9:	outs   dx,DWORD PTR ds:[esi]
  409daa:	repz push ebx
  409dac:	pop    ss
  409dad:	and    eax,0x1bdfd608
  409db2:	fnstcw WORD PTR [edi]
  409db4:	pop    es
  409db5:	and    eax,0x2d141dbc
  409dba:	lock pop ebx
  409dbc:	call   0x2d87e370
  409dc1:	push   esp
  409dc2:	call   0x54408522
  409dc7:	mov    dh,0x72
  409dc9:	jle    0x409db6
  409dcb:	push   ebx
  409dcc:	xlat   BYTE PTR ds:[ebx]
  409dcd:	and    al,0xc8
  409dcf:	cwde   
  409dd0:	into   
  409dd1:	scas   al,BYTE PTR es:[edi]
  409dd2:	cmp    BYTE PTR [eax+0xa],dh
  409dd5:	mov    DWORD PTR [eax+0x26f9d35b],edi
  409ddb:	enter  0xaeb6,0x40
  409ddf:	jo     0x409db7
  409de1:	mov    BYTE PTR [eax-0x5c9158a5],ah
  409de7:	push   ebx
  409de8:	lahf   
  409de9:	and    al,0xa7
  409deb:	(bad)  
  409dec:	jne    0x409e12
  409dee:	mov    BYTE PTR [ebx+0x55],bl
  409df1:	pop    ss
  409df2:	mov    BYTE PTR [ebx-0x79],bl
  409df5:	sbb    ecx,DWORD PTR [eax]
  409df7:	cmp    bh,BYTE PTR [edi+0x24]
	...
  409e06:	add    BYTE PTR [eax],al
  409e08:	add    BYTE PTR [eax+0x15],dh
  409e0b:	add    DWORD PTR [ecx-0x7e01a4e5],eax
  409e11:	mov    al,ds:0x2366fe3d
  409e16:	adc    eax,0x5b1b56dd
  409e1b:	jmp    0xfe9c5f30
  409e20:	dec    esi
  409e21:	shl    DWORD PTR [ebx-0xa],1
  409e24:	inc    esi
  409e25:	arpl   WORD PTR [eax+0x2f],si
  409e28:	pop    edi
  409e29:	pop    ebx
  409e2a:	pop    ebx
  409e2b:	(bad)  
  409e2c:	jl     0x409e9a
  409e2e:	push   ebx
  409e2f:	(bad)  
  409e30:	cs pop ebx
  409e32:	aad    0xc
  409e34:	es jmp 0x59a186fc
  409e3a:	pop    ebx
  409e3b:	(bad)  
  409e3c:	push   ss
  409e3d:	cdq    
  409e3e:	pop    eax
  409e3f:	test   BYTE PTR [esi],0x5b
  409e42:	jo     0x409e57
  409e44:	and    ebx,DWORD PTR [bp+di-0x2]
  409e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e49:	and    al,0x71
  409e4b:	int3   
  409e4c:	hlt    
  409e4d:	sbb    al,0x5b
  409e4f:	(bad)  
  409e50:	je     0x409e6a
  409e52:	jo     0x409ed0
  409e54:	outs   dx,DWORD PTR ds:[esi]
  409e55:	inc    ebx
  409e56:	enter  0xabc7,0x2f
  409e5a:	enter  0x6253,0xf
  409e5e:	inc    edi
  409e5f:	(bad)
  409e62:	pop    edx
  409e63:	push   0x8d55de5
  409e68:	shl    DWORD PTR [edi+0xb6fe3d],1
	...
  409e7a:	add    BYTE PTR [eax],al
  409e7c:	mov    edx,0x1841fd04
  409e81:	(bad)  
  409e82:	aas    
  409e83:	jmp    0x31a633e5
  409e88:	jp     0x409ee4
  409e8a:	call   FWORD PTR [ebx+edi*1]
  409e8d:	jo     0x409f02
  409e8f:	mov    WORD PTR [ebx+ebx*2+0x69],ds
  409e93:	add    BYTE PTR ds:0x4e00411b,al
  409e99:	ret    0x0
  409e9c:	(bad)  
  409e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e9e:	jae    0x409ea8
  409ea0:	mov    esi,0xe1fffd23
  409ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea6:	jae    0x409ea4
  409ea8:	icebp  
  409ea9:	inc    eax
  409eaa:	push   es
  409eab:	call   0x3e79d9
  409eb0:	pop    ds
  409eb1:	add    al,BYTE PTR ds:0xed4adb00
  409eb7:	sbb    DWORD PTR [edx-0x40],0x2a71fffe
  409ebe:	(bad)  
  409ebf:	imul   esi,ebx,0x2e0873a6
  409ec5:	pushf  
  409ec6:	call   0xbefc:0x444b31ff
  409ecd:	sar    edi,0xff
  409ed0:	push   ss
  409ed1:	cmp    DWORD PTR [edi+esi*8+0x50fda540],eax
  409ed8:	dec    esi
  409ed9:	daa    
  409eda:	test   DWORD PTR [eax],eax
  409edc:	(bad)  
  409edd:	retf   0x74c0
	...
  409eec:	add    BYTE PTR [eax],al
  409eee:	add    BYTE PTR [edx-0x19fefd98],ah
  409ef4:	lds    esi,FWORD PTR [ebp+0x25]
  409ef7:	outs   dx,BYTE PTR ds:[esi]
  409ef8:	stc    
  409ef9:	pop    ecx
  409efa:	inc    ecx
  409efb:	(bad)  
  409efc:	cmp    BYTE PTR [edi+esi*8+0x50fda6f0],al
  409f03:	mov    ?,WORD PTR [esi+0x15f1ff9f]
  409f09:	data16 add BYTE PTR [esi-0x2eaf416a],dl
  409f10:	inc    eax
  409f11:	push   es
  409f12:	call   0x3ea30f
  409f17:	scas   al,BYTE PTR es:[edi]
  409f18:	sbb    DWORD PTR [ebp+0x23323fff],ebx
  409f1e:	jne    0x409ea3
  409f20:	dec    edx
  409f21:	cdq    
  409f22:	pop    es
  409f23:	adc    bh,BYTE PTR [si-0x1]
  409f27:	jo     0x409f41
  409f29:	inc    esp
  409f2a:	add    al,0x3f
  409f2c:	mov    esp,0x23bcec8d
  409f31:	push   ds
  409f32:	push   0x3f
  409f34:	jne    0x409f36
  409f36:	dec    edx
  409f38:	push   esi
  409f39:	sub    dh,BYTE PTR [ebx-0x5b]
  409f3c:	repnz and cl,BYTE PTR [ecx-0x55f506]
  409f43:	cmp    dl,dh
  409f45:	pop    edi
  409f46:	push   0xffc52606
  409f4b:	mov    al,ds:0x3f40bebc
  409f50:	stos   BYTE PTR es:[edi],al
  409f51:	cwde   
  409f52:	pop    es
	...
  409f5f:	add    BYTE PTR [eax],al
  409f61:	add    BYTE PTR [edi],ah
  409f63:	or     DWORD PTR [esi-0x1],eax
  409f66:	adc    BYTE PTR [edx+0x3c08fb98],bh
  409f6c:	or     ch,al
  409f6e:	stos   DWORD PTR es:[edi],eax
  409f6f:	aam    0x22
  409f71:	inc    DWORD PTR [esi]
  409f73:	lods   eax,DWORD PTR ds:[esi]
  409f74:	add    eax,0x2dd68a00
  409f79:	add    DWORD PTR [ebx],0xe0ff1abb
  409f7f:	sti    
  409f80:	enter  0x6ffb,0x62
  409f84:	xchg   esi,eax
  409f85:	(bad)  
  409f87:	repz adc al,ch
  409f8a:	inc    esp
  409f8b:	in     al,dx
  409f8c:	add    al,0x0
  409f8e:	xor    al,0x2f
  409f90:	adc    BYTE PTR [ebp+0x26fb3],al
  409f96:	js     0x409f3b
  409f98:	sbb    al,0x0
  409f9a:	aas    
  409f9b:	outs   dx,DWORD PTR ds:[esi]
  409f9c:	add    al,bh
  409f9e:	cli    
  409f9f:	adc    ah,BYTE PTR [eax]
  409fa1:	pop    es
  409fa2:	aas    
  409fa3:	enter  0xade7,0x90
  409fa7:	out    dx,al
  409fa8:	out    0xad,eax
  409faa:	mov    dh,ch
  409fac:	out    0x8e,eax
  409fae:	cli    
  409faf:	push   ebx
  409fb0:	cmp    BYTE PTR [edi+0x217f53c2],cl
  409fb6:	jo     0x409faf
  409fb8:	jle    0x409f51
  409fba:	jo     0x40a014
  409fbc:	std    
  409fbd:	pop    ds
  409fbe:	push   edi
  409fbf:	or     ah,BYTE PTR [ebp+0x4]
  409fc2:	aas    
  409fc3:	int    0x27
  409fc5:	cwde   
	...
  409fd2:	add    BYTE PTR [eax],al
  409fd4:	add    BYTE PTR [ebx],bh
  409fd6:	outs   dx,DWORD PTR ds:[esi]
  409fd7:	xchg   edi,eax
  409fd8:	add    edi,DWORD PTR [edi]
  409fda:	enter  0xc4bf,0xf8
  409fde:	push   es
  409fdf:	call   0x4ff95204
  409fe4:	rcl    eax,1
  409fe6:	push   edi
  409fe7:	aas    
  409fe8:	mov    ah,0xb5
  409fea:	js     0x40a051
  409fec:	xchg   DWORD PTR [ebx],ebp
  409fee:	pusha  
  409fef:	das    
  409ff0:	and    DWORD PTR [edi-0x6],ebp
  409ff3:	psraw  mm6,QWORD PTR [eax-0x3d74e0a9]
  409ffa:	pop    eax
  409ffb:	pop    ds
  409ffc:	and    DWORD PTR [eax],eax
  409ffe:	popa   
  409fff:	jne    0x409f81
  40a001:	clc    
  40a002:	push   edi
  40a003:	jne    0x409f8c
  40a005:	fistp  WORD PTR [edi-0x1]
  40a008:	and    BYTE PTR [edi+0x7fbd16e0],cl
  40a00e:	enter  0x56ee,0xcf
  40a012:	pop    edi
  40a013:	out    0x20,eax
  40a015:	rcr    ch,1
  40a017:	jmp    0x40a044
  40a019:	lods   al,BYTE PTR ds:[esi]
  40a01a:	aaa    
  40a01b:	xlat   BYTE PTR ds:[ebx]
  40a01c:	and    BYTE PTR [esi-0x47e73bb3],dh
  40a022:	push   edi
  40a023:	push   edx
  40a024:	add    al,0x27
  40a026:	pusha  
  40a027:	and    eax,ebx
  40a029:	test   al,0x56
  40a02b:	add    DWORD PTR [esp+ecx*2+0x5f],edi
  40a02f:	(bad)  
  40a030:	scas   al,BYTE PTR es:[edi]
  40a031:	pop    edi
  40a032:	fisttp QWORD PTR [ecx+edx*4]
  40a035:	mov    ah,0x36
  40a037:	(bad)  
  40a038:	sahf   
	...
  40a045:	add    BYTE PTR [eax],al
  40a047:	add    BYTE PTR [ebp+0x5f9eed4d],dh
  40a04d:	push   edi
  40a04e:	imul   ebp,ecx,0xffffffa4
  40a051:	arpl   WORD PTR [edx+0x28],bx
  40a054:	cmp    edx,DWORD PTR [edi-0x4c]
  40a057:	jns    0x40a0a0
  40a059:	push   edi
  40a05a:	(bad)  
  40a05b:	jbe    0x40a026
  40a05d:	ret    
  40a05e:	call   0xfe985e6f
  40a063:	jo     0x40a01e
  40a065:	pusha  
  40a066:	neg    BYTE PTR [esi+0x1f]
  40a069:	loop   0x40a06b
  40a06b:	shr    DWORD PTR [ecx],0xf3
  40a06e:	aas    
  40a06f:	jmp    0x3f31bdd3
  40a074:	pop    edi
  40a075:	push   edi
  40a076:	(bad)  
  40a077:	mov    ah,0x38
  40a079:	pusha  
  40a07a:	inc    ebx
  40a07b:	push   esi
  40a07c:	pop    edi
  40a07d:	push   edi
  40a07e:	mov    BYTE PTR [eax+ebx*2+0x5f],ah
  40a082:	(bad)  
  40a083:	es loop 0x40a0dc
  40a086:	jmp    0x1601:0x7c8
  40a08c:	imul   ebx,DWORD PTR [eax-0xa],0x74571f0e
  40a093:	cmc    
  40a094:	and    al,0xaf
  40a096:	popf   
  40a097:	dec    BYTE PTR [eax+0x41]
  40a09a:	test   BYTE PTR [ecx],dl
  40a09c:	inc    edi
  40a09d:	push   edi
  40a09e:	inc    BYTE PTR [ebx+0x453de03c]
  40a0a4:	cli    
  40a0a5:	push   esi
  40a0a6:	call   DWORD PTR [ebx+esi*1+0xd6fe5f]
	...
  40a0b9:	add    BYTE PTR [eax],al
  40a0bb:	and    ch,bl
  40a0bd:	or     al,0xc1
  40a0bf:	dec    edi
  40a0c0:	aaa    
  40a0c1:	inc    BYTE PTR [eax]
  40a0c3:	jns    0x40a109
  40a0c5:	test   ah,dl
  40a0c7:	icebp  
  40a0c8:	mov    dh,0xfd
  40a0ca:	sub    DWORD PTR [ebx],0xffffffa0
  40a0cd:	cmc    
  40a0ce:	(bad)  
  40a0cf:	jmp    0x25ba159f
  40a0d4:	jmp    0xb6ea98c5
  40a0d9:	add    BYTE PTR [esi+eiz*1+0x4b],dh
  40a0dd:	mov    esp,0xfdb6d1e8
  40a0e2:	add    BYTE PTR [edx+0x2d],dh
  40a0e5:	data16 adc BYTE PTR [esi-0x5b],dl
  40a0e9:	mov    esi,0xe8c263ff
  40a0ee:	ja     0x40a0de
  40a0f0:	mov    dh,0xfd
  40a0f2:	push   DWORD PTR [ebx-0x16000a69]
  40a0f8:	mov    dh,0x73
  40a0fa:	or     dh,bh
  40a0fc:	add    bl,BYTE PTR [ecx-0x4c4a7601]
  40a102:	call   0x3e5678
  40a107:	repz shr eax,0xbd
  40a10b:	mov    ?,WORD PTR [ebp-0x536c0003]
  40a111:	cmc    
  40a112:	call   FWORD PTR [ecx-0x4b]
  40a115:	mov    bl,0xe4
  40a117:	xor    DWORD PTR [ebp-0x3e5c0003],esi
  40a11d:	call   0x40a19f
	...
  40a12e:	outs   dx,BYTE PTR ds:[esi]
  40a12f:	mov    ch,0xfd
  40a131:	push   DWORD PTR [ebx]
  40a133:	xchg   esp,eax
  40a134:	cmc    
  40a135:	(bad)  
  40a136:	jmp    0x3e4914f1
  40a13b:	rcr    DWORD PTR [eax-0x4c491601],1
  40a141:	fdivr  st(1),st
  40a143:	mov    dh,0xfd
  40a145:	push   DWORD PTR [ebx-0x3c]
  40a148:	call   0x1f17e0da
  40a14d:	(bad)  
  40a14e:	mov    eax,0xb0f7363c
  40a153:	mov    ds,WORD PTR [edi]
  40a155:	jne    0x40a18e
  40a157:	ja     0x40a0f8
  40a159:	xchg   edi,eax
  40a15a:	mov    al,ds:0xa3b51f1e
  40a15f:	push   ds
  40a160:	pop    ds
  40a161:	jmp    DWORD PTR [edi-0x77008640]
  40a167:	ss pop ecx
  40a169:	in     al,dx
  40a16a:	mov    BYTE PTR [esi],bh
  40a16c:	pop    ds
  40a16d:	call   0xff5f7b83
  40a172:	jo     0x40a108
  40a174:	sub    edi,esi
  40a176:	push   0xc44b29d6
  40a17b:	ficomp WORD PTR [esi]
  40a17d:	call   DWORD PTR [edx+0x50ff1743]
  40a183:	test   ecx,0x1ef6489a
  40a189:	mov    ch,0x67
  40a18b:	neg    BYTE PTR [esi]
  40a18d:	jmp    DWORD PTR [edi]
  40a18f:	mov    esp,0xff79
	...
  40a1a0:	add    BYTE PTR [eax],dh
  40a1a2:	push   cs
  40a1a3:	pop    ecx
  40a1a4:	aam    0x30
  40a1a6:	xchg   esi,eax
  40a1a7:	push   ds
  40a1a8:	call   0xff5f9c02
  40a1ad:	sbb    ah,bl
  40a1af:	adc    edi,esi
  40a1b1:	adc    BYTE PTR [esi-0x49c48ae2],ch
  40a1b7:	cwde   
  40a1b8:	pop    es
  40a1b9:	pop    ss
  40a1ba:	data16 sbb al,0xff
  40a1bd:	clc    
  40a1be:	lds    ebx,FWORD PTR [eax-0x10]
  40a1c1:	call   0x3a28c093
  40a1c6:	jmp    0xe91a:0x23e0ff1e
  40a1cd:	xor    al,0x65
  40a1cf:	sbb    al,0xff
  40a1d1:	rol    bh,1
  40a1d3:	pop    esp
  40a1d4:	and    bh,dl
  40a1d6:	into   
  40a1d7:	push   0x4
  40a1d9:	aas    
  40a1da:	jg     0x40a186
  40a1dc:	adc    BYTE PTR [edi],bh
  40a1de:	sti    
  40a1df:	bound  esi,QWORD PTR [eax]
  40a1e1:	mov    esp,0xa8aac48b
  40a1e6:	(bad)  
  40a1e8:	sbb    al,0x2a
  40a1ea:	sar    BYTE PTR [edi-0x50ab4f1c],0x8b
  40a1f1:	cli    
  40a1f2:	push   ebx
  40a1f3:	adc    BYTE PTR [ebx+ebp*8],cl
  40a1f6:	push   es
  40a1f7:	call   0x202dec18
  40a1fc:	ret    
  40a1fd:	js     0x40a254
  40a1ff:	adc    eax,0x8587670c
  40a204:	sbb    eax,0x0
	...
  40a211:	add    BYTE PTR [eax],al
  40a213:	add    BYTE PTR [eax-0x21],ch
  40a216:	out    dx,eax
  40a217:	mov    edi,0x1ffc7ff
  40a21c:	aas    
  40a21d:	enter  0x1d67,0xca
  40a221:	mov    edi,0x544a6e4f
  40a226:	pop    edi
  40a227:	sbb    eax,0x975753ca
  40a22c:	inc    eax
  40a22d:	pusha  
  40a22e:	sbb    edi,DWORD PTR [eax+esi*1+0x54]
  40a232:	xor    DWORD PTR [edx+0x43],eax
  40a235:	enter  0x8894,0x13
  40a239:	dec    eax
  40a23a:	sub    al,0x20
  40a23c:	jno    0x40a239
  40a23e:	rol    DWORD PTR [ebx],0xa5
  40a241:	test   al,0x26
  40a243:	xchg   edi,eax
  40a244:	inc    eax
  40a245:	pusha  
  40a246:	xor    eax,0x61540075
  40a24b:	(bad)  
  40a24c:	hlt    
  40a24d:	aas    
  40a24e:	aad    0x28
  40a250:	js     0x40a25b
  40a252:	call   0xa7a3ccdf
  40a257:	ret    0xd3e0
  40a25a:	add    BYTE PTR [esi-0x7ea023c4],dh
  40a260:	mov    ch,bh
  40a262:	aas    
  40a263:	jmp    0x6a7b0dfa
  40a268:	cmp    al,0xc8
  40a26a:	push   eax
  40a26b:	inc    ecx
  40a26c:	test   edi,ebp
  40a26e:	aas    
  40a26f:	jmp    0x6a6f0e5f
  40a274:	cmp    al,0xc8
  40a276:	pop    edx
  40a277:	repnz add BYTE PTR [eax],al
	...
  40a286:	add    ah,bh
  40a288:	fadd   QWORD PTR [edx+eiz*8]
  40a28b:	dec    esi
  40a28c:	fsubr  QWORD PTR [edx]
  40a28e:	pop    ss
  40a28f:	arpl   WORD PTR [ebp-0x1fd4595c],bx
  40a295:	bound  edi,QWORD PTR ds:0x814e537c
  40a29b:	xchg   DWORD PTR ds:0xebac8efe,esi
  40a2a1:	add    cl,ch
  40a2a3:	sbb    edx,DWORD PTR [edx]
  40a2a5:	imul   ebx,DWORD PTR [edi+edi*2],0x3a190108
  40a2ac:	fisttp QWORD PTR [eax]
  40a2ae:	xor    DWORD PTR [edx+0x1466fe88],0x235e9a93
  40a2b8:	pop    edi
  40a2b9:	add    BYTE PTR [edi-0x2bff6e44],ch
  40a2bf:	push   esi
  40a2c0:	or     bh,ch
  40a2c2:	cli    
  40a2c3:	jl     0x40a2d6
  40a2c5:	(bad)  
  40a2c6:	ds inc ebx
  40a2c8:	push   ebx
  40a2c9:	repz xchg esp,esi
  40a2cc:	leave  
  40a2cd:	jae    0x40a31d
  40a2cf:	xor    ebx,ebp
  40a2d1:	cld    
  40a2d2:	es mov cl,0xca
  40a2d5:	call   0xfe942e5c
  40a2da:	mov    dh,0xba
  40a2dc:	jg     0x40a2a1
  40a2de:	in     eax,0x3c
  40a2e0:	std    
  40a2e1:	mov    DWORD PTR [eax],eax
  40a2e3:	push   edx
  40a2e4:	dec    eax
  40a2e5:	(bad)  
  40a2e8:	cmp    al,0xa
  40a2ea:	inc    DWORD PTR [eax]
	...
  40a2f8:	add    BYTE PTR [eax],al
  40a2fa:	pop    ebx
  40a2fb:	mov    edi,0xb46b35e8
  40a300:	std    
  40a301:	mov    DWORD PTR [ebx],ebx
  40a303:	mov    al,0xfd
  40a305:	jne    0x40a2e9
  40a307:	scas   al,BYTE PTR es:[edi]
  40a308:	jae    0x40a312
  40a30a:	jle    0x40a2e4
  40a30c:	xchg   edx,eax
  40a30d:	inc    DWORD PTR [ecx-0x52f3b3be]
  40a313:	push   es
  40a314:	jne    0x40a358
  40a316:	adc    eax,0x9373fe75
  40a31b:	lods   eax,DWORD PTR ds:[esi]
  40a31c:	jae    0x40a31a
  40a31e:	jle    0x40a2d2
  40a320:	xchg   edi,eax
  40a321:	jmp    ecx
  40a323:	sbb    edi,edi
  40a325:	jne    0x40a2b9
  40a327:	lods   eax,DWORD PTR ds:[esi]
  40a328:	jae    0x40a326
  40a32a:	ss scas eax,DWORD PTR es:[edi]
  40a32c:	jae    0x40a336
  40a32e:	mov    esi,0xc1ff9490
  40a333:	adc    DWORD PTR [ebx+0x3849524d],ecx
  40a339:	add    BYTE PTR [ebx-0x3c],bl
  40a33c:	push   edx
  40a33d:	call   0x3e77dd
  40a342:	sub    eax,0xd514ea0c
  40a347:	xor    BYTE PTR [esi],cl
  40a349:	add    BYTE PTR [edx],bl
  40a34b:	mov    esi,0xaf364589
  40a350:	jae    0x40a34e
  40a352:	mov    cl,0xcc
  40a354:	mov    edx,eax
  40a356:	(bad)  
  40a357:	retf   0xc029
  40a35a:	pop    edi
  40a35b:	or     cl,BYTE PTR ds:0x0
	...
  40a36d:	stos   DWORD PTR es:[edi],eax
  40a36e:	inc    edx
  40a36f:	in     eax,dx
  40a370:	jmp    FWORD PTR [ebx+0xe75fdc9]
  40a376:	sahf   
  40a377:	retf   0x3f94
  40a37a:	mov    edx,0x736aff19
  40a37f:	mov    dl,0xfe
  40a381:	jb     0x40a3da
  40a383:	sub    al,BYTE PTR [edx-0x36]
  40a386:	push   edx
  40a387:	sbb    ecx,ecx
  40a389:	std    
  40a38a:	add    dl,BYTE PTR [di-0x3c]
  40a38e:	push   ebx
  40a38f:	xchg   esp,eax
  40a391:	call   DWORD PTR [ecx-0xb43ad4f]
  40a397:	or     al,0x0
  40a399:	xor    ecx,DWORD PTR [ebp-0x79]
  40a39c:	jge    0x40a3e1
  40a39e:	pop    edi
  40a39f:	mov    cs,WORD PTR [ebx]
  40a3a1:	mov    esp,0x2cfff50c
  40a3a6:	imul   eax,DWORD PTR [edi-0x6ea0cc83],0xbf1f6408
  40a3b0:	pop    esi
  40a3b1:	jmp    0x3f50e7cd
  40a3b6:	(bad)  
  40a3b7:	ror    BYTE PTR [ebx],0xbc
  40a3ba:	aas    
  40a3bb:	add    eax,DWORD PTR [ebx+0x740272f2]
  40a3c1:	inc    ebx
  40a3c2:	push   esi
  40a3c3:	inc    edx
  40a3c4:	je     0x40a3fc
  40a3c6:	jbe    0x40a40a
  40a3c8:	pop    ebx
  40a3c9:	clc    
  40a3ca:	mov    eax,0x5f2fc24b
  40a3cf:	pop    DWORD PTR [ebp+0x0]
	...
  40a3de:	add    BYTE PTR [eax],al
  40a3e0:	xor    ebx,esi
  40a3e2:	and    DWORD PTR [edi],eax
  40a3e4:	mov    esp,0xacffee74
  40a3e9:	arpl   WORD PTR [edi],cx
  40a3eb:	shr    BYTE PTR [ebx-0x7b401098],0x2a
  40a3f2:	mov    eax,0x26efdc8
  40a3f7:	sub    esi,esp
  40a3f9:	cdq    
  40a3fa:	nop
  40a3fb:	or     eax,eax
  40a3fd:	sub    eax,DWORD PTR [edx-0x7d]
  40a400:	or     al,0x27
  40a403:	push   cs
  40a404:	add    bl,bl
  40a406:	daa    
  40a407:	sub    ebp,DWORD PTR ds:0xf31a172f
  40a40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a40f:	aas    
  40a410:	mov    ah,0xd2
  40a412:	sub    ebx,DWORD PTR [ecx+0x53]
  40a415:	hlt    
  40a416:	test   al,0x3
  40a418:	xchg   esi,eax
  40a419:	mov    esp,0x553f03e7
  40a41e:	inc    esp
  40a41f:	mov    ss,WORD PTR [edx-0x40]
  40a422:	jb     0x40a3eb
  40a424:	xor    al,0x55
  40a426:	test   BYTE PTR [edi+0x19385802],al
  40a42c:	sub    cl,BYTE PTR [eax+0x5f7c8fcf]
  40a432:	pop    ss
  40a433:	mov    al,gs:0x7c8fbf50
  40a439:	pop    edi
  40a43a:	sar    DWORD PTR [eax+edx*4+0x50],0xaf
  40a43f:	(bad)  
  40a440:	xor    al,0x41
  40a442:	sub    eax,0x44
	...
  40a453:	mov    esp,0x79fda80a
  40a458:	fisub  DWORD PTR [edi-0x70d09ed4]
  40a45e:	sbb    DWORD PTR [esi-0x49e753f6],esi
  40a464:	or     ah,BYTE PTR [edi+eax*4-0x689ca82e]
  40a46b:	jl     0x40a47b
  40a46d:	fadd   DWORD PTR [ebx]
  40a46f:	aas    
  40a470:	enter  0x605a,0x81
  40a474:	jecxz  0x40a431
  40a476:	ret    0x1138
  40a479:	jecxz  0x40a47e
  40a47b:	aas    
  40a47c:	enter  0x605a,0xb4
  40a480:	aad    0xef
  40a482:	mov    WORD PTR [edx-0x44],?
  40a485:	cmp    ah,BYTE PTR [eax-0x36]
  40a488:	add    eax,0x4ecb4901
  40a48d:	je     0x40a4b8
  40a48f:	es aad 0xc4
  40a492:	adc    DWORD PTR [ebp+0x2a],eax
  40a495:	(bad)  
  40a496:	push   ds
  40a497:	push   esi
  40a498:	aad    0xc4
  40a49a:	add    DWORD PTR [ebx+0x30],esi
  40a49d:	dec    BYTE PTR [esi]
  40a49f:	inc    edi
  40a4a0:	cmp    eax,0xcdb9f974
  40a4a5:	enter  0xd340,0x4f
  40a4a9:	(bad)  
  40a4aa:	jmp    0x74ccc8da
  40a4af:	sbb    al,0x11
  40a4b1:	or     ecx,ebp
  40a4b3:	cmp    al,0xc8
  40a4b5:	icebp  
  40a4b6:	test   DWORD PTR [eax],eax
	...
  40a4c4:	add    BYTE PTR [eax],al
  40a4c6:	jmp    0xe8f8:0x32c8bc8
  40a4cd:	pop    edx
  40a4ce:	and    ecx,eax
  40a4d0:	add    BYTE PTR [edx-0x4f],dh
  40a4d3:	mov    edi,0x888f3c89
  40a4d8:	out    dx,al
  40a4d9:	jmp    0xbf5a:0x46754f43
  40a4e0:	mov    ebp,DWORD PTR [ebx+edx*2]
  40a4e3:	clc    
  40a4e4:	push   esi
  40a4e5:	aaa    
  40a4e6:	sub    eax,esp
  40a4e8:	mov    eax,ds:0xc74b3ce9
  40a4ed:	loope  0x40a566
  40a4ef:	ret    0xfcfd
  40a4f2:	sbb    DWORD PTR [edi+0x4b3627b6],edi
  40a4f8:	stc    
  40a4f9:	loope  0x40a4aa
  40a4fb:	leave  
  40a4fc:	sub    DWORD PTR [ecx+0x5b],edi
  40a4ff:	aam    0x10
  40a501:	cmp    BYTE PTR [esi],dl
  40a503:	loop   0x40a505
  40a505:	sar    DWORD PTR [edx+eiz*8],cl
  40a508:	add    bl,al
  40a50a:	cmp    al,0xf6
  40a50c:	std    
  40a50d:	aam    0x2c
  40a50f:	loope  0x40a511
  40a511:	add    BYTE PTR [ebx+ecx*8],cl
  40a514:	call   0x10b7ede
  40a519:	or     esp,DWORD PTR [esi+0x3f]
  40a51c:	sub    DWORD PTR [eax-0x5a],edx
  40a51f:	mov    ds:0xb059983a,al
  40a524:	mov    eax,ebx
  40a526:	call   FWORD PTR [esi+edi*8]
  40a529:	imul   eax,DWORD PTR [eax],0x0
	...
  40a537:	add    BYTE PTR [eax],al
  40a539:	out    0x19,al
  40a53b:	push   ebx
  40a53c:	push   esi
  40a53d:	cmp    DWORD PTR [esi],edi
  40a53f:	push   cs
  40a540:	push   0xffffffd6
  40a542:	sbb    al,0xfe
  40a544:	out    0x82,eax
  40a546:	xor    dh,bh
  40a548:	(bad)  
  40a549:	fisttp QWORD PTR [edx]
  40a54b:	je     0x40a555
  40a54d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a54e:	mov    ds:0xb6d99801,al
  40a553:	sub    ebx,ebx
  40a555:	sub    eax,0x685f5a0b
  40a55a:	std    
  40a55b:	ret    0x9610
  40a55e:	pop    ss
  40a55f:	mov    ebp,esp
  40a561:	adc    eax,0x3557f108
  40a566:	arpl   bx,bx
  40a568:	call   DWORD PTR [ebx-0x40]
  40a56b:	std    
  40a56c:	jne    0x40a50c
  40a56e:	mov    ds:0xb6d99312,al
  40a573:	push   eax
  40a574:	call   DWORD PTR [ebx-0x44]
  40a577:	call   0xfdf797c0
  40a57c:	mov    ecx,esi
  40a57e:	or     eax,DWORD PTR [ebx]
  40a580:	clc    
  40a581:	ins    DWORD PTR es:[edi],dx
  40a582:	or     dh,BYTE PTR [ebp+0x47]
  40a585:	jmp    0x40a50f
  40a587:	repnz push eax
  40a589:	leave  
  40a58a:	cmp    BYTE PTR [edx],cl
  40a58c:	call   DWORD PTR [ebx-0x3e]
  40a58f:	call   0xfdf7813f
  40a594:	mov    ebx,esp
  40a596:	mov    ch,0x8b
  40a598:	inc    ebp
  40a599:	aas    
  40a59a:	out    dx,eax
  40a59b:	mov    ah,0xfe
	...
  40a5a9:	add    BYTE PTR [eax],al
  40a5ab:	add    BYTE PTR [edx+0x3775176b],dh
  40a5b1:	idiv   DWORD PTR [ebx-0x3]
  40a5b4:	sbb    BYTE PTR [edi-0x68e8ba75],cl
  40a5ba:	(bad)  
  40a5bb:	out    dx,eax
  40a5bc:	or     BYTE PTR ds:0xab8aff1a,dl
  40a5c2:	adc    eax,0xf3b7fb75
  40a5c7:	std    
  40a5c8:	lock mov dh,0x89
  40a5cb:	fsubr  st,st(0)
  40a5cd:	xor    al,0x16
  40a5cf:	call   0xff5694a1
  40a5d4:	fcom   st(4)
  40a5d6:	sbb    eax,ebp
  40a5d8:	vunpckhps ymm7,ymm2,ymm7
  40a5dc:	push   ebp
  40a5dd:	pop    edi
  40a5de:	scas   eax,DWORD PTR es:[edi]
  40a5df:	dec    BYTE PTR [edx+0x57]
  40a5e2:	sub    ah,BYTE PTR [ebp-0x74e89138]
  40a5e8:	jl     0x40a584
  40a5ea:	mov    ch,0xc8
  40a5ec:	jge    0x40a655
  40a5ee:	add    dl,BYTE PTR [ebp-0x4c]
  40a5f1:	jae    0x40a576
  40a5f3:	jge    0x40a640
  40a5f5:	gs nop
  40a5f7:	and    BYTE PTR [eax+0x12fef48c],dl
  40a5fd:	sub    dl,BYTE PTR [bp+si+0x26ad]
  40a602:	pop    ss
  40a603:	push   edx
  40a605:	dec    esi
  40a606:	pop    ss
  40a607:	jne    0x40a650
  40a609:	inc    edi
  40a60a:	addr16 std 
  40a60c:	push   0x75173e
	...
  40a61d:	add    BYTE PTR [eax],al
  40a61f:	dec    edi
  40a620:	inc    esi
  40a621:	xchg   ecx,eax
  40a622:	pop    es
  40a623:	add    ebx,DWORD PTR [bx+di]
  40a626:	call   DWORD PTR [eax-0x2a]
  40a629:	nop
  40a62a:	cmovs  edx,DWORD PTR [edx+ecx*1-0x18]
  40a62f:	cmc    
  40a630:	(bad)  
  40a631:	pushw  ss
  40a633:	cmp    BYTE PTR [ecx-0x4b],al
  40a636:	out    dx,eax
  40a637:	(bad)  
  40a638:	leave  
  40a639:	push   esi
  40a63a:	nop
  40a63b:	cmp    BYTE PTR [ebp-0x2b],cl
  40a63e:	or     edx,DWORD PTR [edi]
  40a640:	aas    
  40a641:	inc    ebp
  40a642:	push   ss
  40a643:	sbb    BYTE PTR [ecx-0x43],cl
  40a646:	pop    es
  40a647:	cmp    al,0xd6
  40a649:	fst    QWORD PTR [esi]
  40a64b:	xchg   edx,eax
  40a64c:	mov    eax,0x6038902e
  40a651:	mov    al,ds:0x1f4cf818
  40a656:	nop
  40a657:	inc    eax
  40a658:	dec    ebp
  40a659:	popf   
  40a65a:	or     edx,edi
  40a65c:	fimul  DWORD PTR [esi+edx*1]
  40a65f:	loopne 0x40a6ad
  40a661:	jge    0x40a656
  40a663:	data16 mov al,0xfe
  40a666:	(bad)  
  40a667:	cmp    BYTE PTR [eax+0x34],ah
  40a66a:	jno    0x40a634
  40a66c:	dec    esp
  40a66d:	out    dx,eax
  40a66e:	(bad)  
  40a66f:	xor    BYTE PTR [ebp+0x5d],cl
  40a672:	or     al,0xa7
  40a674:	call   0xf4aa:0x7eb01579
  40a67b:	test   al,0xf3
  40a67d:	bound  ebp,QWORD PTR [eax]
  40a67f:	mov    al,ds:0xa9f3d2
	...
  40a690:	add    BYTE PTR [eax],al
  40a692:	aas    
  40a693:	dec    ebp
  40a694:	xor    eax,0x5a2aa70c
  40a699:	adc    eax,0x8354c88
  40a69e:	adc    dl,0xef
  40a6a1:	sub    esp,DWORD PTR [eax+0x4d]
  40a6a4:	lahf   
  40a6a5:	adc    eax,0x8af7f2c4
  40a6aa:	cmp    eax,0x6008154d
  40a6af:	shr    bh,cl
  40a6b1:	sub    esi,DWORD PTR [eax+0x4d]
  40a6b4:	jg     0x40a6cb
  40a6b6:	(bad)  
  40a6b7:	repnz add ch,bl
  40a6ba:	mov    ch,0xc9
  40a6bc:	std    
  40a6bd:	hlt    
  40a6be:	cmp    BYTE PTR [ebp+0x74],cl
  40a6c1:	icebp  
  40a6c2:	fs cmp edi,0x5e
  40a6c6:	dec    edx
  40a6c7:	aas    
  40a6c8:	push   esp
  40a6c9:	icebp  
  40a6ca:	mov    ch,0xc6
  40a6cc:	(bad)  
  40a6cd:	sub    ebp,DWORD PTR [edi]
  40a6cf:	dec    esp
  40a6d0:	push   ebp
  40a6d1:	jb     0x40a73a
  40a6d3:	inc    edi
  40a6d4:	lds    ecx,FWORD PTR [ebp-0x1f]
  40a6d7:	repnz std 
  40a6d9:	mov    esp,0x2dffe218
  40a6de:	mov    al,0xc3
  40a6e0:	call   0xfe8c15a2
  40a6e5:	push   ds
  40a6e6:	shl    BYTE PTR [edi+0x60349cfd],0xc4
  40a6ed:	js     0x40a739
  40a6ef:	dec    ebx
  40a6f0:	mov    bh,cl
  40a6f2:	and    eax,0xe8ff8f
	...
  40a703:	add    BYTE PTR [eax],al
  40a705:	cmp    al,0x3f
  40a707:	inc    esp
  40a708:	fnstsw WORD PTR [edi-0x3e8bff70]
  40a70e:	pusha  
  40a70f:	aaa    
  40a710:	call   0x25066f51
  40a715:	push   edi
  40a716:	enter  0xe900,0x3c
  40a71a:	cmp    eax,0x4aeccd44
  40a71f:	je     0x40a6fe
  40a721:	xor    edx,ebp
  40a723:	adc    BYTE PTR [esi-0x44173c3f],bh
  40a729:	xor    cl,BYTE PTR [ebx-0x2]
  40a72c:	bound  esp,QWORD PTR [edi+eax*2]
  40a72f:	jl     0x40a6d6
  40a731:	cmp    al,0xd4
  40a733:	and    DWORD PTR [ecx],edx
  40a735:	ret    0x3fef
  40a738:	jmp    0x823d7c90
  40a73d:	ins    DWORD PTR es:[edi],dx
  40a73e:	retf   0x0
  40a741:	data16 rol al,0x75
  40a745:	arpl   WORD PTR [edi],bx
  40a747:	jg     0x40a7a5
  40a749:	pop    ss
  40a74a:	(bad)  
  40a74b:	std    
  40a74c:	jne    0x40a720
  40a74e:	sahf   
  40a74f:	add    BYTE PTR [edi+0x26],bh
  40a752:	mov    DWORD PTR [edi+0x5a08245],0xa2dbc7
  40a75c:	add    BYTE PTR [esi],dl
  40a75e:	mov    DWORD PTR [ecx+0x74c7727d],0xc5ee18
  40a768:	out    dx,eax
	...
  40a775:	add    BYTE PTR [eax],al
  40a777:	add    BYTE PTR [eax+0x7e0c73b4],dl
  40a77d:	call   0xfc73:0xb421ff92
  40a784:	push   ecx
  40a785:	cmp    cl,BYTE PTR [edx]
  40a787:	call   0x3e7f8e
  40a78c:	aas    
  40a78d:	inc    eax
  40a78e:	add    DWORD PTR [eax],eax
  40a790:	out    0x3f,al
  40a792:	inc    esp
  40a793:	adc    al,0x65
  40a795:	outs   dx,DWORD PTR ds:[esi]
  40a796:	(bad)  
  40a797:	je     0x40a774
  40a799:	popf   
  40a79a:	xchg   BYTE PTR [eax],al
  40a79c:	(bad)  
  40a79d:	mov    ch,0x45
  40a7a0:	sahf   
  40a7a1:	ret    
  40a7a2:	add    BYTE PTR [eax],al
  40a7a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7a5:	std    
  40a7a6:	inc    ebx
  40a7a7:	hlt    
  40a7a8:	xchg   esi,eax
  40a7a9:	mov    BYTE PTR [eax],0x0
  40a7ac:	fld    DWORD PTR [eax-0x3959ff12]
  40a7b2:	add    BYTE PTR [ebp-0x72af4ba5],cl
  40a7b8:	pop    ebx
  40a7b9:	mov    al,0x50
  40a7bb:	lea    ebx,[ebx-0x44]
  40a7be:	push   eax
  40a7bf:	call   FWORD PTR [ebx+0x50]
  40a7c2:	push   DWORD PTR [ebp+0x6e]
  40a7c5:	scas   al,BYTE PTR es:[edi]
  40a7c6:	(bad)  
  40a7c8:	aas    
  40a7c9:	xor    dl,BYTE PTR [edx]
  40a7cb:	and    edx,0xffffffcc
  40a7ce:	add    al,0x74
  40a7d0:	or     al,0xde
  40a7d2:	(bad)  
  40a7d3:	idiv   DWORD PTR [edi]
  40a7d5:	push   ebp
  40a7d6:	loope  0x40a75a
  40a7d8:	retf   0x4cc
  40a7db:	jne    0x40a7dd
	...
  40a7e9:	add    BYTE PTR [eax],al
  40a7eb:	cmp    esi,ebx
  40a7ed:	(bad)  
  40a7ee:	out    dx,eax
  40a7ef:	aas    
  40a7f0:	imul   esp,ebp,0xfffffffe
  40a7f3:	stos   BYTE PTR es:[edi],al
  40a7f4:	out    0x11,eax
  40a7f6:	jne    0x40a833
  40a7f8:	pop    es
  40a7f9:	ds xchg edx,eax
  40a7fb:	and    bl,bh
  40a7fd:	adc    DWORD PTR [ebp+0x13],esi
  40a800:	add    ebx,DWORD PTR [eax+0x76a0270b]
  40a806:	dec    DWORD PTR [eax]
  40a808:	xchg   ebx,eax
  40a809:	xchg   edi,eax
  40a80a:	out    dx,eax
  40a80b:	add    BYTE PTR ds:0xcdb2e7fe,dl
  40a811:	adc    edi,edi
  40a813:	lock xor al,0xa
  40a816:	call   0xff5274e0
  40a81b:	loopne 0x40a851
  40a81d:	push   ss
  40a81e:	call   0xff5294d0
  40a823:	rcl    ah,1
  40a825:	adc    eax,ebp
  40a827:	mov    ch,0xec
  40a829:	adc    edi,edi
  40a82b:	jo     0x40a893
  40a82d:	adc    ecx,DWORD PTR [edi]
  40a82f:	ret    0x11f4
  40a832:	push   DWORD PTR [eax+0x3feb90de]
  40a838:	jmp    0x40a82c
  40a83a:	imul   edi,DWORD PTR [edi],0xa70b997a
  40a840:	mov    ebp,0xf590ff76
  40a845:	add    al,0xff
  40a847:	adc    ah,BYTE PTR [ebx+0x1a]
  40a84a:	sbb    BYTE PTR [ebp+0x6a131a],ch
	...
  40a85c:	add    BYTE PTR [eax],al
  40a85e:	aas    
  40a85f:	enter  0x98a6,0x44
  40a863:	pusha  
  40a864:	out    dx,al
  40a865:	jne    0x40a8cf
  40a867:	dec    ecx
  40a868:	xchg   edi,eax
  40a869:	cwde   
  40a86a:	fs pusha 
  40a86c:	xor    eax,0x36495879
  40a871:	dec    DWORD PTR [edx-0x47]
  40a874:	fs push eax
  40a876:	dec    ecx
  40a877:	dec    ecx
  40a878:	ja     0x40a82c
  40a87a:	loop   0x40a8fa
  40a87c:	stos   BYTE PTR es:[edi],al
  40a87d:	repz cmp ah,dh
  40a880:	jb     0x40a8a1
  40a882:	mov    esp,0x29b94483
  40a887:	rcr    edi,cl
  40a889:	sbb    ecx,ecx
  40a88b:	cmp    cl,BYTE PTR [edi+0x12]
  40a88e:	mov    BYTE PTR [edx],0x3c
  40a891:	xchg   BYTE PTR [edx+0x3696d854],dl
  40a897:	adc    cl,ch
  40a899:	add    edi,DWORD PTR [edi]
  40a89b:	enter  0x3c8d,0xfd
  40a89f:	mov    edi,0xc06a12e7
  40a8a4:	cvtdq2ps xmm7,XMMWORD PTR [eax+0x7a4a1748]
  40a8ab:	push   eax
  40a8ac:	jmp    0x7508e7b4
  40a8b1:	enter  0xf7c8,0xfe
  40a8b5:	xchg   edi,eax
  40a8b6:	inc    eax
  40a8b7:	pusha  
  40a8b8:	mov    al,0x73
  40a8ba:	ror    BYTE PTR [eax+0x61],0xc8
  40a8be:	mov    ah,0x44
  40a8c0:	gs or  al,0x0
	...
  40a8cf:	add    BYTE PTR [eax],al
  40a8d1:	aas    
  40a8d2:	aam    0xeb
  40a8d4:	test   BYTE PTR [edx],ch
  40a8d6:	dec    esp
  40a8d7:	jmp    0x4110:0x4d453a95
  40a8de:	shl    cl,cl
  40a8e0:	dec    ebx
  40a8e1:	ds enter 0x3e7,0xe9
  40a8e6:	jle    0x40a8e9
  40a8e8:	stos   DWORD PTR es:[edi],eax
  40a8e9:	or     DWORD PTR [eax-0x73],0x24
  40a8ed:	dec    ebx
  40a8ee:	clc    
  40a8ef:	std    
  40a8f0:	sbb    al,0x73
  40a8f2:	pusha  
  40a8f3:	or     al,0x79
  40a8f5:	dec    esi
  40a8f6:	dec    ecx
  40a8f7:	adc    BYTE PTR [ebx+esi*1],0xc8
  40a8fb:	je     0x40a8e2
  40a8fd:	pop    ebx
  40a8fe:	or     BYTE PTR [ebp-0xd],dh
  40a901:	add    al,0xc7
  40a903:	add    cl,ch
  40a905:	cmp    al,0xea
  40a907:	(bad)  
  40a908:	stos   DWORD PTR es:[edi],eax
  40a909:	inc    ebx
  40a90a:	dec    eax
  40a90b:	sub    esp,0x48
  40a90e:	int    0x72
  40a910:	push   es
  40a911:	mov    al,0x8d
  40a913:	clc    
  40a914:	mov    ecx,0xdcfddfca
  40a919:	and    al,0x30
  40a91b:	push   0x8c472e79
  40a920:	lods   al,BYTE PTR ds:[esi]
  40a921:	inc    esp
  40a922:	cwde   
  40a923:	std    
  40a924:	mov    ah,0x4
  40a926:	xor    al,bl
  40a928:	cs inc di
  40a92b:	mov    BYTE PTR [eax+eiz*1-0x78be3cd],ah
  40a932:	aas    
  40a933:	push   ecx
  40a934:	push   ds
	...
  40a941:	add    BYTE PTR [eax],al
  40a943:	add    al,dl
  40a945:	iret   
  40a946:	call   0xfe88676c
  40a94b:	pusha  
  40a94c:	add    BYTE PTR [esp+ecx*4],ch
  40a94f:	lods   al,BYTE PTR ds:[esi]
  40a950:	inc    esp
  40a951:	cwde   
  40a952:	push   0xffffffe5
  40a954:	das    
  40a955:	mov    ebp,0x57f20108
  40a95a:	(bad)  
  40a95b:	out    dx,al
  40a95c:	cmp    DWORD PTR [ebp-0x42b1c608],ecx
  40a962:	or     cl,dl
  40a964:	jae    0x40a9a8
  40a966:	(bad)  
  40a967:	(bad)  
  40a968:	mov    ebx,0xb1e8e4c5
  40a96d:	in     eax,0x8b
  40a96f:	add    BYTE PTR [ebx-0x2c],ah
  40a972:	push   eax
  40a973:	call   DWORD PTR [ebx-0x28]
  40a976:	std    
  40a977:	jne    0x40a913
  40a979:	fdiv   DWORD PTR [ebx+0x8]
  40a97c:	jle    0x40a927
  40a97e:	sti    
  40a97f:	call   FWORD PTR [ecx+0x26f843c6]
  40a985:	fnstenv [ebx+0x8]
  40a988:	mov    esi,0xc9fffaa8
  40a98d:	dec    esp
  40a98e:	jl     0x40a988
  40a990:	pop    si
  40a992:	or     BYTE PTR [eax+0xcb56],bh
  40a998:	sub    BYTE PTR [ebx],al
  40a99a:	ret    
  40a99b:	or     BYTE PTR [esi],ah
  40a99d:	mov    BYTE PTR [ebx-0x8],0xf6
  40a9a1:	xlat   BYTE PTR ds:[ebx]
  40a9a2:	jae    0x40a9a0
  40a9a4:	mov    DWORD PTR [esi+0xa],ebx
  40a9a7:	inc    DWORD PTR [eax]
	...
  40a9b5:	add    BYTE PTR [eax],al
  40a9b7:	add    eax,DWORD PTR [ebx-0x1a]
  40a9ba:	or     BYTE PTR [ebx-0x47c0228],0xd2
  40a9c1:	add    BYTE PTR [ebp+0xc],dh
  40a9c4:	xchg   ebx,eax
  40a9c5:	add    BYTE PTR [eax],al
  40a9c7:	push   ss
  40a9c8:	retf   
  40a9c9:	pop    esi
  40a9ca:	leave  
  40a9cb:	and    al,0x43
  40a9cd:	dec    BYTE PTR [ebx+eiz*4-0x2c00af2e]
  40a9d4:	inc    edx
  40a9d5:	out    0x49,al
  40a9d7:	pop    ecx
  40a9d8:	fdivr  st,st(5)
  40a9da:	mov    esi,DWORD PTR [esi]
  40a9dc:	loop   0x40a9d7
  40a9de:	add    dh,ah
  40a9e0:	retf   0x75fd
  40a9e3:	into   
  40a9e4:	loop   0x40aa59
  40a9e6:	nop
  40a9e7:	leave  
  40a9e8:	(bad)  
  40a9e9:	cmp    DWORD PTR [ebp-0x4e],eax
  40a9ec:	pop    esp
  40a9ed:	add    eax,0xcb91e9
  40a9f2:	add    BYTE PTR ds:0x3f06fa59,dl
  40a9f8:	mov    ds:0x19028ce8,eax
  40a9fd:	mov    ch,0xfe
  40a9ff:	or     bh,BYTE PTR [ecx]
  40aa01:	sbb    bl,BYTE PTR [esi]
  40aa03:	mov    eax,0xfa8d0e85
  40aa08:	js     0x40a9bf
  40aa0a:	(bad)  
  40aa0b:	repnz sub BYTE PTR [edx],bl
  40aa0e:	cmp    dh,BYTE PTR [ebp+0x6d]
  40aa11:	push   cs
  40aa12:	lea    eax,[edx]
  40aa14:	imul   esi,DWORD PTR [ebp+0x1a28eafe],0x2e
	...
  40aa2a:	push   ebp
  40aa2b:	push   ebp
  40aa2c:	push   cs
  40aa2d:	(bad)  
  40aa2e:	cli    
  40aa2f:	dec    eax
  40aa30:	mov    ch,0xfe
  40aa32:	sar    BYTE PTR [eax],cl
  40aa34:	sbb    dl,bl
  40aa36:	inc    esp
  40aa37:	mov    ebp,0xbf82890d
  40aa3c:	jg     0x40aa83
  40aa3e:	aaa    
  40aa3f:	or     BYTE PTR [edi],0x75
  40aa42:	aaa    
  40aa43:	xchg   edi,eax
  40aa44:	dec    eax
  40aa45:	sti    
  40aa46:	and    BYTE PTR [edi-0x5ad4ba85],bl
  40aa4c:	(bad)  
  40aa4d:	imul   DWORD PTR [edi-0x72]
  40aa50:	xchg   edi,eax
  40aa51:	pop    es
  40aa52:	pop    ss
  40aa53:	mov    ebp,0xa900ff09
  40aa58:	(bad)  
  40aa59:	out    0xbc,eax
  40aa5b:	je     0x40aa6f
  40aa5d:	add    BYTE PTR [ebx+0x62],ch
  40aa60:	cmp    DWORD PTR [ebp-0x25],0x2f
  40aa64:	xchg   esi,eax
  40aa65:	ins    BYTE PTR es:[edi],dx
  40aa66:	mov    esp,0x53001a5c
  40aa6b:	dec    esi
  40aa6c:	cmp    DWORD PTR [ebp-0x29],0x2f
  40aa70:	xchg   esi,eax
  40aa71:	pusha  
  40aa72:	push   edi
  40aa73:	mov    bh,0xb0
  40aa75:	inc    eax
  40aa76:	aas    
  40aa77:	ds cdq 
  40aa79:	out    dx,eax
  40aa7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa7b:	jno    0x40aa0b
  40aa7d:	push   DWORD PTR [eax+0x3243f2c8]
  40aa83:	out    0x4f,al
  40aa85:	xchg   edi,eax
  40aa86:	add    al,0x87
  40aa88:	out    0xe,eax
  40aa8a:	adc    bh,BYTE PTR [eax]
  40aa8c:	rcl    ah,0x0
	...
  40aa9b:	add    BYTE PTR [eax],al
  40aa9d:	adc    al,0xc8
  40aa9f:	out    0xfa,eax
  40aaa1:	enter  0xecbb,0x9b
  40aaa5:	add    DWORD PTR [eax+ebp*1-0x484487fc],esp
  40aaac:	sbb    ebx,DWORD PTR [edi]
  40aaae:	(bad)  
  40aaaf:	out    0x3,eax
  40aab1:	xor    al,0x8
  40aab3:	adc    al,0xde
  40aab5:	fadd   st,st(7)
  40aab7:	out    0x1e,eax
  40aab9:	cdq    
  40aaba:	inc    ebp
  40aabb:	adc    eax,0x57c96700
  40aac0:	push   cs
  40aac1:	dec    eax
  40aac2:	inc    ebp
  40aac3:	cmc    
  40aac4:	adc    eax,DWORD PTR [eax-0x45]
  40aac7:	jecxz  0x40aae4
  40aac9:	xchg   ebp,eax
  40aaca:	pop    eax
  40aacb:	outs   dx,DWORD PTR ds:[esi]
  40aacc:	push   cs
  40aacd:	xor    BYTE PTR [ebx-0x2b4df1ad],bh
  40aad3:	dec    edi
  40aad4:	mov    esi,0xe5744b0
  40aad9:	xchg   edx,eax
  40aada:	xor    BYTE PTR [edi-0x68],cl
  40aadd:	inc    esp
  40aade:	xor    BYTE PTR [ebx+esi*2-0x67c0baf8],ch
  40aae5:	adc    BYTE PTR [eax],dh
  40aae7:	add    DWORD PTR [ebx-0x8],esi
  40aaea:	inc    esp
  40aaeb:	das    
  40aaec:	cwde   
  40aaed:	in     al,0x2f
  40aaef:	leave  
  40aaf0:	jb     0x40aada
  40aaf2:	inc    esp
  40aaf3:	pop    ds
  40aaf4:	cwde   
  40aaf5:	fsubr  DWORD PTR [edi]
  40aaf7:	icebp  
  40aaf8:	jb     0x40aad2
  40aafa:	inc    esp
  40aafb:	sahf   
  40aafc:	adc    BYTE PTR [edx+0x40],0xe8
  40ab00:	xchg   edi,eax
	...
  40ab0d:	add    BYTE PTR [eax],al
  40ab0f:	add    BYTE PTR [eax-0x2f],al
  40ab12:	cmc    
  40ab13:	std    
  40ab14:	mov    ebx,0x4af7013c
  40ab19:	inc    ebp
  40ab1a:	mov    ah,BYTE PTR [esp+eax*2-0x5454385a]
  40ab21:	inc    esp
  40ab22:	push   ebp
  40ab23:	jb     0x40ab84
  40ab25:	dec    ecx
  40ab26:	(bad)
  40ab29:	mov    ebx,0x7c8fc10c
  40ab2e:	inc    dh
  40ab30:	xchg   BYTE PTR [esp+esi*2-0x374fff2],al
  40ab37:	sbb    DWORD PTR [ebx+0x12],ebx
  40ab3a:	mov    ebp,DWORD PTR [esi-0x5a8bbabe]
  40ab40:	cmp    bh,BYTE PTR [ebx+0x53f1910c]
  40ab46:	(bad)  
  40ab47:	xchg   esi,eax
  40ab48:	push   esi
  40ab49:	test   BYTE PTR [ebp-0x22],dh
  40ab4c:	inc    ebx
  40ab4d:	mov    ebx,0x40b08608
  40ab52:	jmp    0xfe85dbbd
  40ab57:	loop   0x40abd5
  40ab59:	mov    ebp,0x3fc86e00
  40ab5e:	jmp    0xfe84508d
  40ab63:	xor    BYTE PTR [ebp-0x30],bh
  40ab66:	add    BYTE PTR [edi+edx*4+0x77258034],bh
  40ab6d:	inc    edx
  40ab6e:	inc    BYTE PTR [esi-0x7e]
  40ab71:	dec    ebp
  40ab72:	mov    ecx,0x3f
	...
  40ab83:	xor    al,BYTE PTR [ebx+0x1]
  40ab86:	jmp    0xa4ca73c7
  40ab8b:	lock into 
  40ab8d:	rcr    BYTE PTR [ebp-0x16c6b7bf],0xc9
  40ab94:	int3   
  40ab95:	out    0xb8,eax
  40ab97:	cmp    eax,0xa80e00c8
  40ab9c:	iret   
  40ab9d:	call   0xfdf3e2a2
  40aba2:	dec    ebp
  40aba4:	xchg   DWORD PTR [ebx+0xf],esi
  40aba7:	mov    esi,0xa6414ee0
  40abac:	aam    0x73
  40abae:	or     al,0x8e
  40abb0:	xor    al,0x94
  40abb2:	inc    DWORD PTR [ecx+0x76680be0]
  40abb8:	test   DWORD PTR [ecx+0x0],eax
  40abbb:	sbb    DWORD PTR [edx+0xa],0xfdbd66e8
  40abc2:	dec    DWORD PTR [edi]
  40abc4:	dec    edx
  40abc5:	mov    ecx,0x68d4b1fe
  40abca:	mov    DWORD PTR ds:[bx+si],0xfe88db8d
  40abd2:	inc    ecx
  40abd4:	ja     0x40abbc
  40abd6:	mov    ah,dl
  40abd8:	sar    ebp,cl
  40abda:	(bad)  
  40abdb:	fisttp DWORD PTR [eax+0x77c1fffe]
  40abe1:	push   DWORD PTR [ebp-0x22b02]
	...
  40abf3:	add    BYTE PTR [eax],al
  40abf5:	add    BYTE PTR [esi+0x2600783d],bh
  40abfb:	mov    esi,0xd4a0bc83
  40ac00:	std    
  40ac01:	inc    eax
  40ac02:	adc    DWORD PTR [ebx-0xe],ecx
  40ac05:	add    BYTE PTR [esi],ah
  40ac07:	(bad)  
  40ac08:	mov    edx,DWORD PTR [ebp-0x22a9c]
  40ac0e:	dec    ecx
  40ac0f:	leave  
  40ac10:	adc    BYTE PTR [eax],al
  40ac12:	push   ss
  40ac13:	(bad)  
  40ac14:	je     0x40ac93
  40ac16:	arpl   WORD PTR [ecx],cx
  40ac18:	sub    dl,BYTE PTR [eax-0x2]
  40ac1b:	in     al,dx
  40ac1c:	dec    esi
  40ac1d:	inc    ecx
  40ac1e:	(bad)  
  40ac1f:	fsubrp st(6),st
  40ac21:	jns    0x40abf9
  40ac23:	(bad)  
  40ac24:	or     eax,eax
  40ac26:	aas    
  40ac27:	fs pop es
  40ac29:	jmp    0x42dcd4
  40ac2e:	mov    edx,0xc0fe3fa3
  40ac33:	inc    ecx
  40ac34:	jl     0x40ac78
  40ac36:	imul   esp,DWORD PTR [ecx-0x66],0xffffffe7
  40ac3a:	add    DWORD PTR [eax+0x2],esi
  40ac3d:	call   0x4553b8
  40ac42:	xor    al,0x71
  40ac44:	nop
  40ac45:	add    al,0xa6
  40ac47:	lods   al,BYTE PTR ds:[esi]
  40ac48:	add    al,0x0
  40ac4a:	aas    
  40ac4b:	adc    dl,BYTE PTR [eax+0x67ef970b]
  40ac51:	inc    DWORD PTR [eax+0x48754235]
  40ac57:	mov    ebp,eax
  40ac59:	inc    edi
	...
  40ac66:	add    BYTE PTR [eax],al
  40ac68:	add    dh,bh
  40ac6a:	xor    BYTE PTR [ebx],cl
  40ac6c:	jne    0x40aca9
  40ac6e:	pop    ecx
  40ac6f:	mov    dl,BYTE PTR [eax+eiz*2-0x1af5e19f]
  40ac76:	xor    BYTE PTR [ebx],cl
  40ac78:	jne    0x40acbd
  40ac7a:	dec    ecx
  40ac7b:	xchg   esi,eax
  40ac7c:	xchg   esp,eax
  40ac7d:	dec    eax
  40ac7e:	dec    ecx
  40ac7f:	js     0x40ac16
  40ac81:	jge    0x40ac45
  40ac83:	or     edi,edi
  40ac85:	retf   0xd8dd
  40ac88:	push   ecx
  40ac89:	pop    DWORD PTR [edi+0x52]
  40ac8c:	xchg   ebp,eax
  40ac8d:	sub    BYTE PTR [ebx+0x3faafeb4],ch
  40ac93:	mov    dl,0xfe
  40ac95:	xchg   edx,eax
  40ac96:	daa    
  40ac97:	sbb    bh,dl
  40ac99:	adc    DWORD PTR [ebx-0x5f3217f7],edx
  40ac9f:	or     edi,edi
  40aca1:	adc    al,0x6f
  40aca3:	jns    0x40ace7
  40aca5:	sub    ebp,DWORD PTR [eax-0xd0e4b81]
  40acab:	or     edi,edi
  40acad:	jb     0x40ac77
  40acaf:	test   DWORD PTR [edx],0xb1e7caa
  40acb5:	fdiv   DWORD PTR [eax]
  40acb7:	mov    esi,0xe341d08d
  40acbc:	inc    ebx
  40acbd:	push   ebx
  40acbe:	lock pop esi
  40acc1:	js     0x40ac4a
  40acc3:	out    0xa,eax
  40acc5:	xor    dl,ah
  40acc7:	jmp    edx
  40acc9:	retf   
  40acca:	inc    ecx
  40accb:	out    dx,eax
  40accc:	or     al,BYTE PTR [eax]
	...
  40acda:	add    BYTE PTR [eax],al
  40acdc:	bnd jl 0x40acc5
  40acdf:	or     ah,BYTE PTR [eax-0x4c653068]
  40ace5:	inc    ecx
  40ace6:	xlat   BYTE PTR ds:[ebx]
  40ace7:	mov    bl,0x0
  40ace9:	inc    ecx
  40acea:	push   ebp
  40aceb:	cld    
  40acec:	mov    al,ds:0x800ac5b8
  40acf1:	xor    BYTE PTR [ebp+0x75],cl
  40acf4:	js     0x40ad37
  40acf6:	cmp    BYTE PTR gs:[ebp+0x42],0xaf
  40acfb:	or     cl,BYTE PTR [edi]
  40acfd:	inc    ecx
  40acfe:	pop    ebp
  40acff:	inc    edi
  40ad00:	popa   
  40ad01:	inc    ecx
  40ad02:	lahf   
  40ad03:	sbb    esp,DWORD PTR [edi]
  40ad05:	mov    edi,0x8ba03e7
  40ad0a:	fild   WORD PTR [eax+0xa874127]
  40ad10:	inc    eax
  40ad11:	jnp    0x40ad4f
  40ad13:	or     DWORD PTR [eax],edi
  40ad15:	inc    ecx
  40ad16:	sub    dh,0xb7
  40ad19:	enter  0xae7,0xf2
  40ad1d:	jg     0x40ad85
  40ad1f:	or     ah,BYTE PTR [eax]
  40ad21:	xor    BYTE PTR ds:0x21411875,bl
  40ad27:	inc    ebp
  40ad28:	inc    ebx
  40ad29:	enter  0x7eb4,0x1b
  40ad2d:	inc    edi
  40ad2e:	sub    al,0x53
  40ad30:	add    DWORD PTR [ecx+0x3f],eax
  40ad33:	inc    edx
  40ad34:	ret    0x17f
  40ad37:	aaa    
  40ad38:	inc    ebp
  40ad39:	inc    ecx
  40ad3a:	add    ecx,ebp
  40ad3c:	cmp    al,0xc8
  40ad3e:	mov    DWORD PTR [eax+eax*1+0x0],ebp
	...
  40ad4d:	add    BYTE PTR [eax],al
  40ad4f:	call   0x3fd66e21
  40ad54:	dec    eax
  40ad55:	cmp    ecx,ebp
  40ad57:	scas   eax,DWORD PTR es:[edi]
  40ad58:	retf   
  40ad59:	out    0xe0,eax
  40ad5b:	inc    ebx
  40ad5c:	enter  0x9100,0x21
  40ad60:	xchg   edx,eax
  40ad61:	aas    
  40ad62:	jmp    0x14d68ac
  40ad67:	sbb    eax,0x24eefe5c
  40ad6c:	dec    ebx
  40ad6d:	mov    ecx,0x694136e7
  40ad72:	pop    ds
  40ad73:	cmp    al,0xc8
  40ad75:	add    BYTE PTR [eax+edx*1+0x6],ah
  40ad79:	dec    esi
  40ad7b:	ss cwde 
  40ad7d:	call   0xfe81bb68
  40ad82:	ins    BYTE PTR es:[edi],dx
  40ad83:	clc    
  40ad84:	add    eax,0x9846b6ff
  40ad89:	std    
  40ad8a:	je     0x40ad87
  40ad8c:	inc    ecx
  40ad8d:	(bad)  
  40ad8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad8f:	inc    ebx
  40ad90:	push   0x4f3ce979
  40ad95:	test   BYTE PTR [ebp+0x45],dl
  40ad98:	inc    ecx
  40ad99:	(bad)  
  40ad9a:	sub    DWORD PTR [esi+0x44],eax
  40ad9d:	(bad)  
  40ad9e:	jmp    0x54cc75df
  40ada3:	cmp    DWORD PTR [esi],0xca4e76fe
  40ada9:	adc    cl,ch
  40adab:	cmp    al,0xc8
  40adad:	or     eax,0xc8a66d
  40adb2:	jmp    0x40adb7
	...
  40adbf:	add    BYTE PTR [eax],al
  40adc1:	add    BYTE PTR [ecx+0x4657c355],dl
  40adc7:	aas    
  40adc8:	mov    WORD PTR [ebx+0x688ff0],gs
  40adce:	jo     0x40ad52
  40add0:	inc    ecx
  40add1:	add    BYTE PTR [esi-0x19ff89ab],cl
  40add7:	cmp    al,0xbe
  40add9:	jne    0x40adaf
  40addb:	fdiv   QWORD PTR [ebx-0x73]
  40adde:	arpl   WORD PTR [esi-0x48c60002],ax
  40ade4:	inc    edx
  40ade5:	sub    al,0x96
  40ade7:	arpl   si,sp
  40ade9:	dec    esi
  40adea:	xchg   edi,eax
  40adeb:	retf   
  40adec:	call   0x10c6c4a
  40adf1:	or     esp,DWORD PTR [esi+0x4f]
  40adf4:	add    bl,ch
  40adf6:	int    0xb6
  40adf8:	xchg   ebx,eax
  40adf9:	ret    0xd098
  40adfc:	std    
  40adfd:	lea    edx,[eax+eiz*1-0x77]
  40ae01:	test   DWORD PTR [edx-0x100022f],esi
  40ae07:	add    al,0x46
  40ae09:	inc    ecx
  40ae0a:	xchg   esi,eax
  40ae0b:	shl    BYTE PTR [ebx+0xc],1
  40ae0e:	outs   dx,BYTE PTR ds:[esi]
  40ae0f:	inc    eax
  40ae10:	xchg   edx,eax
  40ae11:	(bad)  
  40ae12:	mov    ecx,0xa8b4b3d0
  40ae17:	sar    ch,1
  40ae19:	push   eax
  40ae1a:	jle    0x40ae94
  40ae1c:	xchg   edx,eax
  40ae1d:	call   FWORD PTR [ecx-0x474f7c3e]
  40ae23:	sar    ch,1
  40ae25:	push   eax
	...
  40ae32:	add    BYTE PTR [eax],al
  40ae34:	add    BYTE PTR [esi],bh
  40ae36:	rcr    DWORD PTR [ecx+eax*2+0x56],0xd0
  40ae3b:	mov    bl,0xb0
  40ae3d:	mov    eax,0x2ce8fdd0
  40ae42:	push   edx
  40ae43:	(bad)  
  40ae44:	call   FWORD PTR ds:0x3e13748b
  40ae4a:	scas   eax,DWORD PTR es:[edi]
  40ae4b:	pop    esp
  40ae4c:	inc    ecx
  40ae4d:	push   ss
  40ae4e:	shl    BYTE PTR [ebx-0x22f8750],1
  40ae54:	(bad)  
  40ae55:	aas    
  40ae56:	sbb    al,0xfa
  40ae58:	out    0x86,eax
  40ae5a:	mov    WORD PTR [eax],cs
  40ae5c:	call   DWORD PTR [edi]
  40ae5e:	inc    eax
  40ae5f:	jb     0x40ae60
  40ae61:	clc    
  40ae62:	stos   DWORD PTR es:[edi],eax
  40ae63:	jle    0x40ae27
  40ae65:	icebp  
  40ae66:	cmc    
  40ae67:	or     BYTE PTR [eax-0x18],dl
  40ae6a:	mov    bl,0x45
  40ae6c:	(bad)  
  40ae6d:	loopne 0x40ae54
  40ae6f:	sbb    esp,ebp
  40ae71:	push   eax
  40ae72:	xor    DWORD PTR [edx],eax
  40ae74:	test   edi,edi
  40ae76:	and    eax,0xcdc8457f
  40ae7b:	or     bh,bh
  40ae7d:	mov    al,BYTE PTR [edi+eax*1+0x28d8b8ff]
  40ae84:	ja     0x40aec5
  40ae86:	xor    DWORD PTR [ecx],ecx
  40ae88:	mov    ch,0xe7
  40ae8a:	cs push es
  40ae8c:	call   DWORD PTR [edi-0x67008dd1]
  40ae92:	ja     0x40aed7
  40ae94:	or     BYTE PTR [edi],bh
  40ae96:	cld    
  40ae97:	jns    0x40ae85
	...
  40aea5:	add    BYTE PTR [eax],al
  40aea7:	add    BYTE PTR [eax-0xa18076d],cl
  40aead:	pushf  
  40aeae:	add    eax,0x917144ff
  40aeb3:	push   cs
  40aeb4:	psraw  mm0,QWORD PTR ds:0x5a093775
  40aebb:	(bad)  
  40aebc:	pusha  
  40aebd:	gs sbb eax,0x65dc8df
  40aec3:	leave  
  40aec4:	jge    0x40aeee
  40aec6:	add    dl,BYTE PTR [ebp-0x4c]
  40aec9:	mov    esp,0xda43c481
  40aece:	add    al,0x6a
  40aed0:	pop    esi
  40aed1:	mov    esi,0x3127078f
  40aed6:	jns    0x40aed7
  40aed8:	sub    BYTE PTR [ecx-0x376a0441],ch
  40aede:	add    DWORD PTR [edi],eax
  40aee0:	xchg   edx,eax
  40aee1:	ror    BYTE PTR [edi+0x47],1
  40aee4:	adc    BYTE PTR [esi],bh
  40aee6:	push   edi
  40aee7:	call   0x7418:0xfbd53d5d
  40aeee:	inc    edi
  40aeef:	pop    es
  40aef0:	clc    
  40aef1:	mov    dl,0xdb
  40aef3:	push   es
  40aef4:	push   0xffffffd0
  40aef6:	aas    
  40aef7:	pop    ebx
  40aef8:	call   0xe0dade3a
  40aefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aefe:	pop    esi
  40aeff:	test   al,0x7f
  40af01:	enter  0x668f,0x73
  40af05:	xchg   edi,esp
  40af07:	push   es
  40af08:	adc    ah,BYTE PTR [ebp+0xc49f]
	...
  40af1a:	add    al,al
  40af1c:	and    eax,0x3db87251
  40af21:	repz inc ebx
  40af23:	sub    edx,esp
  40af25:	xchg   edi,eax
  40af26:	fwait
  40af27:	rcr    DWORD PTR [eax+ebp*4+0x5d3d0f03],cl
  40af2e:	cld    
  40af2f:	mov    al,ds:0x9006dc07
  40af34:	xor    BYTE PTR [ecx+0x77],dl
  40af37:	mov    BYTE PTR ds:0x5170442,bh
  40af3d:	and    al,0xc5
  40af3f:	js     0x40aee6
  40af41:	pop    esi
  40af42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af43:	inc    edi
  40af45:	mov    dh,0xd0
  40af47:	loope  0x40aed8
  40af49:	sub    BYTE PTR [edi+edx*2],al
  40af4c:	ret    0x679
  40af4f:	pop    eax
  40af50:	shl    DWORD PTR [edi-0x67d371],1
  40af56:	jo     0x40af43
  40af58:	xchg   bh,ah
  40af5a:	mov    bl,0x41
  40af5c:	mov    bl,0xef
  40af5e:	sbb    ecx,ebp
  40af60:	cmp    edi,DWORD PTR [edi+0x6]
  40af63:	daa    
  40af64:	xchg   edx,eax
  40af65:	add    BYTE PTR [esi+0x41],ah
  40af68:	cmp    eax,0x3cc6e96b
  40af6d:	inc    ax
  40af6f:	loopne 0x40aef8
  40af71:	add    cl,dl
  40af73:	cmp    al,0xc8
  40af75:	add    BYTE PTR [ecx+0x24],ch
  40af78:	lea    edx,[edx-0x3f2ec6b2]
  40af7e:	mov    ebp,0x0
	...
  40af8b:	add    BYTE PTR [eax],al
  40af8d:	add    BYTE PTR [eax],bl
  40af8f:	lea    edx,[eax+0x51]
  40af92:	cmp    ah,BYTE PTR [eax-0x2]
  40af95:	ss in  eax,0x7c
  40af98:	jne    0x40af6f
  40af9a:	lods   al,BYTE PTR ds:[esi]
  40af9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af9c:	xchg   ebx,eax
  40af9d:	lds    eax,FWORD PTR [ebx]
  40af9f:	cmp    eax,0xc4af1e4e
  40afa4:	call   0xfe7df05e
  40afa9:	add    eax,edx
  40afab:	dec    ebp
  40afac:	inc    BYTE PTR [esi]
  40afae:	push   esp
  40afaf:	int    0x8d
  40afb1:	(bad)  
  40afb2:	cmp    bh,BYTE PTR ds:0xb342f574
  40afb8:	or     BYTE PTR [ecx],al
  40afba:	mov    esi,0x54e6fe4b
  40afbf:	or     al,BYTE PTR ds:0xed51e1e9
  40afc5:	push   0xcef62bff
  40afca:	cmp    cl,BYTE PTR [ebx+0x44]
  40afcd:	lds    esi,FWORD PTR [ebx+0x3bd9743d]
  40afd3:	mov    bl,0xc
  40afd5:	rol    esp,0xb5
  40afd8:	add    cl,ch
  40afda:	addr16 jl 0x40afeb
  40afdd:	ins    BYTE PTR es:[edi],dx
  40afde:	push   ss
  40afdf:	enter  0xe900,0x13
  40afe3:	cmp    eax,0xffffffe9
  40afe6:	cmp    al,0xc8
  40afe8:	add    BYTE PTR [esi+0xfe3880],ah
  40afee:	sub    eax,ecx
  40aff0:	add    BYTE PTR [edx+0x0],ch
	...
  40afff:	add    BYTE PTR [eax],al
  40b001:	es (bad) 
  40b003:	(bad)  
  40b004:	imul   edx,DWORD PTR [esi],0x5b8cfe62
  40b00a:	fcom   DWORD PTR [eax-0x73]
  40b00d:	stos   DWORD PTR es:[edi],eax
  40b00e:	fdiv   st,st(5)
  40b010:	push   DWORD PTR [ecx+0x74]
  40b013:	push   DWORD PTR [ebp+0x6e]
  40b016:	lds    esi,FWORD PTR [ebx-0x4]
  40b019:	jle    0x40b02c
  40b01b:	ja     0x40b01d
  40b01d:	out    0x40,al
  40b01f:	mov    esi,0x8ededb74
  40b024:	add    dh,dl
  40b026:	(bad)  
  40b027:	push   0xfe069e43
  40b02c:	(bad)  
  40b02d:	mov    ebx,0x543de637
  40b032:	(bad)  
  40b035:	pop    ebp
  40b036:	hlt    
  40b037:	mov    eax,DWORD PTR [ebp-0x232d6]
  40b03d:	(bad)  
  40b03e:	jns    0x40b026
  40b040:	sub    eax,0x89fdc514
  40b045:	sbb    edx,esp
  40b047:	cmc    
  40b048:	call   DWORD PTR [ecx-0x5e717e21]
  40b04e:	les    ebp,FWORD PTR [edx+0x0]
  40b051:	out    dx,al
  40b052:	and    al,0x5d
  40b054:	inc    ecx
  40b055:	xchg   esi,eax
  40b056:	les    esi,FWORD PTR [ebx-0x23b9610]
  40b05c:	(bad)  
  40b05d:	cmp    eax,DWORD PTR [eax-0x1a]
  40b060:	xchg   BYTE PTR [edi],dl
  40b062:	(bad)  
  40b063:	std    
  40b064:	mov    DWORD PTR [eax],eax
	...
  40b072:	add    BYTE PTR [eax],al
  40b074:	fcmovnbe st,st(2)
  40b076:	cmc    
  40b077:	call   DWORD PTR [ecx-0x461343b8]
  40b07d:	(bad)  
  40b07e:	std    
  40b07f:	add    BYTE PTR [edx],ch
  40b081:	cmp    DWORD PTR [esi+0x1],esp
  40b084:	aas    
  40b085:	xor    DWORD PTR ds:0x159440be,edx
  40b08b:	idiv   DWORD PTR [eax]
  40b08d:	inc    edx
  40b08e:	add    eax,0x8a594775
  40b093:	mov    cl,0x28
  40b095:	mov    dl,0x4
  40b097:	mov    ch,0x13
  40b099:	mov    dl,0x4
  40b09b:	jmp    DWORD PTR [edi]
  40b09d:	jo     0x40b113
  40b09f:	call   DWORD PTR [eax]
  40b0a1:	call   0xff04:0x9210f04e
  40b0a8:	mov    bl,BYTE PTR ds:0x99477505
  40b0ae:	sar    esi,1
  40b0b0:	lock stc 
  40b0b2:	add    al,0xb5
  40b0b4:	out    dx,eax
  40b0b5:	stc    
  40b0b6:	add    al,0xff
  40b0b8:	xlat   BYTE PTR ds:[ebx]
  40b0b9:	ret    
  40b0ba:	jbe    0x40b0bb
  40b0bc:	fsub   st,st(1)
  40b0be:	mov    esi,0x564e6f7
  40b0c3:	dec    eax
  40b0c5:	ror    DWORD PTR [esi-0x743f2805],1
  40b0cb:	(bad)  
  40b0cc:	mov    eax,0x3f0c3ff7
  40b0d1:	push   esp
  40b0d2:	jns    0x40b0c0
  40b0d4:	mov    esi,0xf719ec
	...
  40b0e5:	add    BYTE PTR [eax],al
  40b0e7:	mov    al,ds:0x9b457429
  40b0ec:	add    BYTE PTR [edx],al
  40b0ee:	jne    0x40b11f
  40b0f0:	sbb    bh,BYTE PTR [eax+0xc]
  40b0f3:	xchg   edi,eax
  40b0f4:	xchg   esi,eax
  40b0f5:	jp     0x40b0f7
  40b0f7:	aas    
  40b0f8:	es ret 0xc20e
  40b0fc:	and    al,BYTE PTR ds:0x48623f00
  40b102:	clc    
  40b103:	aas    
  40b104:	xor    DWORD PTR [edx],eax
  40b106:	add    BYTE PTR [eax-0x1d],bh
  40b109:	clc    
  40b10a:	inc    BYTE PTR [eax-0x38]
  40b10d:	out    0x3,eax
  40b10f:	in     eax,0xc7
  40b111:	adc    DWORD PTR [edx*8-0x4dfbfe39],eax
  40b118:	test   BYTE PTR [ebx+0x7c43ca54],dl
  40b11e:	sti    
  40b11f:	xor    DWORD PTR [edx],edi
  40b121:	sbb    BYTE PTR [ebx],al
  40b123:	mov    dl,0x40
  40b125:	ja     0x40b1a0
  40b127:	and    esi,DWORD PTR [ecx]
  40b129:	sbb    al,0x7a
  40b12b:	aas    
  40b12c:	enter  0xc3f2,0x8c
  40b130:	ret    
  40b131:	push   eax
  40b132:	in     eax,0x8
  40b134:	cmp    ch,al
  40b136:	imul   edi,DWORD PTR [eax+edx*4-0x58],0x3
  40b13b:	clc    
  40b13c:	mov    bl,0xd7
  40b13e:	jmp    0x40b0c2
  40b140:	push   edi
  40b141:	aas    
  40b142:	add    ecx,DWORD PTR [edi-0x446ee7b3]
  40b148:	xor    al,0x37
  40b14a:	add    eax,DWORD PTR [eax]
	...
  40b158:	add    BYTE PTR [eax],al
  40b15a:	fcomp  DWORD PTR [eax+0x5712ebb9]
  40b160:	pop    ds
  40b161:	add    esi,DWORD PTR [esi-0x3e04e7bd]
  40b167:	cmp    DWORD PTR [eax],eax
  40b169:	cwde   
  40b16a:	retf   
  40b16b:	cmp    DWORD PTR [edi],eax
  40b16d:	outs   dx,BYTE PTR ds:[esi]
  40b16e:	aas    
  40b16f:	scas   al,BYTE PTR es:[edi]
  40b170:	out    0x2,eax
  40b172:	repnz cmp bh,bh
  40b175:	add    ah,BYTE PTR [eax-0x58f08ac7]
  40b17b:	pop    esi
  40b17c:	js     0x40b180
  40b17e:	nop
  40b17f:	dec    edi
  40b180:	gs out dx,eax
  40b182:	xchg   ecx,eax
  40b183:	cmp    edi,edx
  40b185:	add    cl,dl
  40b187:	sub    al,0xd7
  40b189:	add    bh,BYTE PTR [eax+0x30]
  40b18c:	sub    ebx,DWORD PTR [ebx-0x3c0cc68f]
  40b192:	in     al,dx
  40b193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b194:	add    BYTE PTR [ecx],bl
  40b196:	mov    dl,0x44
  40b198:	jmp    0xfe79ef53
  40b19d:	pop    esp
  40b19e:	fs xor bh,dh
  40b1a1:	sahf   
  40b1a2:	push   esp
  40b1a3:	mov    ecx,0xcd3d9692
  40b1a8:	rcl    BYTE PTR ds:0xe902b08b,0x2d
  40b1af:	jnp    0x40b21a
  40b1b1:	dec    edx
  40b1b2:	lahf   
  40b1b3:	xchg   DWORD PTR [eax],eax
  40b1b5:	jbe    0x40b19e
  40b1b7:	and    dh,dh
  40b1b9:	outs   dx,BYTE PTR ds:[esi]
  40b1ba:	cmp    eax,0xf17439
	...
  40b1cb:	add    BYTE PTR [eax],al
  40b1cd:	and    al,0xc0
  40b1cf:	mov    ah,0x5e
  40b1d1:	cmp    eax,0xde902b0
  40b1d6:	jnp    0x40b241
  40b1d8:	call   0x20b7:0x4600875f
  40b1df:	idiv   BYTE PTR [esi]
  40b1e1:	cmp    eax,0xd4e17439
  40b1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1e7:	mov    ah,0x2e
  40b1e9:	cmp    eax,0xcde900b0
  40b1ee:	jp     0x40b259
  40b1f0:	push   ss
  40b1f1:	push   0x87160087
  40b1f6:	and    dh,dh
  40b1f8:	push   cs
  40b1f9:	cmp    eax,0xa4f17439
  40b1fe:	(bad)  
  40b1ff:	mov    ah,0xfe
  40b201:	xor    BYTE PTR ds:[ebx],cl
  40b204:	fs cmp eax,0xa834fe39
  40b20a:	xor    esi,edi
  40b20c:	out    0xa3,al
  40b20e:	cmp    DWORD PTR [ebp-0x4bc6c122],ecx
  40b214:	fld    DWORD PTR [esi-0xf3101c7]
  40b21a:	retf   
  40b21b:	std    
  40b21c:	add    BYTE PTR [ebx],dh
  40b21e:	int3   
  40b21f:	call   0xfe075b01
  40b224:	jmp    ebx
  40b226:	xor    esi,edi
  40b228:	jmp    FWORD PTR [ecx-0x66731cd5]
  40b22e:	(bad)  
  40b22f:	std    
  40b230:	inc    ebp
	...
  40b23d:	add    BYTE PTR [eax],al
  40b23f:	add    BYTE PTR [esi-0x56010ed4],bl
  40b245:	(bad)  
  40b246:	std    
  40b247:	jne    0x40b213
  40b249:	and    al,0x4c
  40b24b:	jne    0x40b273
  40b24d:	int3   
  40b24e:	mov    edx,0x8b53cc1a
  40b254:	mov    edx,0x3cfcc24d
  40b259:	int3   
  40b25a:	push   0x22
  40b25c:	cdq    
  40b25d:	mov    edi,0x4373e808
  40b262:	(bad)  
  40b263:	call   FWORD PTR [edi-0x19970371]
  40b269:	retf   
  40b26a:	in     eax,dx
  40b26b:	mov    esi,0x415a310e
  40b270:	(bad)  
  40b271:	mov    ds:0xcb975d05,eax
  40b276:	std    
  40b277:	jne    0x40b257
  40b279:	and    esp,DWORD PTR [esi]
  40b27b:	mov    ah,0x19
  40b27d:	leave  
  40b27e:	push   0x8a8b0f
  40b283:	jmp    ebx
  40b285:	mov    al,ds:0xc8a64148
  40b28a:	jae    0x40b294
  40b28c:	dec    esi
  40b28d:	pop    esp
  40b28e:	std    
  40b28f:	jmp    FWORD PTR [ecx-0x28a2f25d]
  40b295:	retf   
  40b296:	push   0x80cba602
  40b29b:	push   ebx
  40b29d:	ret    
  40b29e:	call   0xfe091e21
  40b2a3:	push   0x0
	...
  40b2b0:	add    BYTE PTR [eax],al
  40b2b2:	add    BYTE PTR [edi],bh
  40b2b4:	ret    0x415d
  40b2b7:	aas    
  40b2b8:	mov    DWORD PTR [esi],eax
  40b2ba:	add    BYTE PTR [edi],bh
  40b2bc:	mov    eax,ds:0x19377500
  40b2c1:	pop    ebp
  40b2c2:	(bad)  
  40b2c3:	pusha  
  40b2c4:	jle    0x40b330
  40b2c6:	arpl   dx,di
  40b2c8:	fild   WORD PTR [eax+ebp*2]
  40b2cb:	cmp    eax,0x48800221
  40b2d0:	fmul   QWORD PTR [eax+ebp*8]
  40b2d3:	neg    BYTE PTR [esi+0x1]
  40b2d6:	(bad)  
  40b2d7:	cmp    ah,bl
  40b2d9:	add    bh,bh
  40b2db:	stos   BYTE PTR es:[edi],al
  40b2dc:	cmp    edx,ebp
  40b2de:	int3   
  40b2df:	mov    dh,0xb5
  40b2e1:	add    cl,cl
  40b2e3:	std    
  40b2e4:	and    al,0x2
  40b2e6:	push   ebp
  40b2e7:	les    esi,FWORD PTR [eax+eax*1-0x6666bc8b]
  40b2ee:	(bad)
  40b2f2:	ror    BYTE PTR [ebx-0x65239328],0x60
  40b2f9:	add    dl,BYTE PTR [eax-0x19]
  40b2fc:	les    edx,FWORD PTR [esi+edi*8+0x685250e8]
  40b303:	aas    
  40b304:	and    ecx,esi
  40b306:	mov    ebp,0x415ea667
  40b30b:	aas    
  40b30c:	jno    0x40b30f
  40b30e:	jne    0x40b347
  40b310:	fst    DWORD PTR [edi-0x4d]
  40b313:	rcr    ch,0x59
  40b316:	push   0x0
	...
  40b323:	add    BYTE PTR [eax],al
  40b325:	add    BYTE PTR [esi],bh
  40b327:	and    ecx,esi
  40b329:	mov    ebp,0x415eff27
  40b32e:	aas    
  40b32f:	push   ecx
  40b330:	add    DWORD PTR [ebp+0x37],esi
  40b333:	leave  
  40b334:	inc    ebx
  40b335:	mov    bl,0x98
  40b337:	and    eax,0xc7c302eb
  40b33c:	out    0xff,al
  40b33e:	ja     0x40b349
  40b340:	lock add ebp,edx
  40b343:	inc    edx
  40b344:	les    eax,FWORD PTR [ebx+0x442337c]
  40b34a:	in     eax,0xea
  40b34c:	(bad)  
  40b34d:	jns    0x40b386
  40b34f:	and    BYTE PTR ds:0x6136618d,al
  40b355:	dec    ecx
  40b356:	pop    ebx
  40b357:	mov    eax,ds:0xbfcbfed1
  40b35c:	(bad)  
  40b35d:	cdq    
  40b35e:	dec    ecx
  40b35f:	ss lahf 
  40b361:	push   0x1c
  40b363:	aaa    
  40b364:	sbb    eax,0x8f42270c
  40b369:	push   DWORD PTR [ecx]
  40b36b:	mov    ds:0xc0b3fee3,eax
  40b370:	pop    DWORD PTR [ebp-0x88c9df]
  40b376:	xchg   ebx,eax
  40b377:	xor    al,0x6f
  40b379:	jns    0x40b3c2
  40b37b:	and    BYTE PTR [edi],ah
  40b37d:	lea    ecx,[ecx]
  40b37f:	ss xor edx,eax
  40b382:	cmp    al,0xc8
  40b384:	mov    esp,0x2699e48a
  40b389:	or     DWORD PTR [eax],eax
	...
  40b397:	add    BYTE PTR [eax],al
  40b399:	leave  
  40b39a:	xchg   ebp,eax
  40b39b:	test   al,0x3
  40b39d:	aas    
  40b39e:	enter  0x3e7,0x14
  40b3a2:	adc    DWORD PTR [edi],esi
  40b3a4:	jns    0x40b3ed
  40b3a6:	and    BYTE PTR [edx],ah
  40b3a8:	jb     0x40b3e9
  40b3aa:	enter  0x5972,0x37
  40b3ae:	dec    ecx
  40b3af:	and    BYTE PTR [edx],al
  40b3b1:	dec    ecx
  40b3b2:	xlat   BYTE PTR ds:[ebx]
  40b3b3:	jmp    0xbe65:0xea22bdd3
  40b3ba:	repnz mov ds:0x85cb325f,eax
  40b3c0:	(bad)  
  40b3c1:	ds xchg esp,eax
  40b3c3:	add    cl,ch
  40b3c5:	cdq    
  40b3c6:	mov    esp,0xbaba010c
  40b3cb:	add    cl,ch
  40b3cd:	adc    al,0xb1
  40b3cf:	pop    esi
  40b3d0:	sub    BYTE PTR [ebx],bh
  40b3d2:	mov    al,ds:0xc80234e9
  40b3d7:	call   0xfe778bb7
  40b3dc:	bnd jl 0x40b398
  40b3df:	arpl   WORD PTR [esi-0x23024019],di
  40b3e5:	aad    0x95
  40b3e7:	aas    
  40b3e8:	jmp    0xf245bdaa
  40b3ed:	jl     0x40b3ab
  40b3ef:	push   ebx
  40b3f0:	sahf   
  40b3f1:	daa    
  40b3f2:	inc    ecx
  40b3f3:	pop    edi
  40b3f4:	sub    BYTE PTR [ebx+0x69],al
  40b3f7:	xchg   edi,eax
  40b3f8:	cs jp  0x40b3c3
  40b3fb:	add    esp,0x0
	...
  40b409:	add    BYTE PTR [eax],al
  40b40b:	add    dl,dl
  40b40d:	xchg   ebp,eax
  40b40e:	aas    
  40b40f:	jmp    0x76496f50
  40b414:	aaa    
  40b415:	mov    ch,0x5e
  40b417:	sub    BYTE PTR [ebx],bh
  40b419:	and    DWORD PTR [eax],edi
  40b41b:	sar    DWORD PTR [edx+eiz*4],cl
  40b41e:	call   FWORD PTR [ebp+0x47]
  40b421:	pop    esi
  40b422:	pop    esi
  40b423:	test   al,0x3c
  40b425:	xor    eax,0x87925e14
  40b42a:	add    BYTE PTR [edx+0x0],ch
  40b42d:	ror    DWORD PTR [ecx],0x29
  40b430:	push   0xb2fcfde7
  40b435:	xchg   ebp,eax
  40b436:	aas    
  40b437:	jmp    0xc7d6900d
  40b43c:	or     eax,0xffffff81
  40b43f:	and    eax,0x96143538
  40b444:	sbb    al,BYTE PTR [edi+0x5e472600]
  40b44a:	pop    esi
  40b44b:	add    bh,dl
  40b44d:	enter  0x0,0x96
  40b451:	enter  0x1e9,0xe5
  40b455:	inc    ecx
  40b456:	ret    
  40b457:	pop    ebx
  40b458:	pop    edi
  40b459:	pop    es
  40b45a:	push   es
  40b45b:	add    BYTE PTR ds:0x575f96f5,dl
  40b461:	int3   
  40b462:	add    BYTE PTR [ecx+esi*2+0x33],dh
  40b466:	xor    eax,0x892196
  40b46b:	dec    DWORD PTR [ebx+0x415c5b]
	...
  40b47d:	add    BYTE PTR [eax],al
  40b47f:	push   esi
  40b480:	inc    edi
  40b481:	ret    0x9104
  40b484:	fdivr  QWORD PTR [ebp+0x5e]
  40b487:	daa    
  40b488:	int3   
  40b489:	lds    eax,FWORD PTR ds:0x3f92c8
  40b48f:	push   esi
  40b490:	enter  0x0,0xe5
  40b494:	fwait
  40b495:	mov    esp,ebp
  40b497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b498:	add    dh,ch
  40b49a:	push   ebx
  40b49b:	lods   eax,DWORD PTR ds:[esi]
  40b49c:	mov    ecx,DWORD PTR [eax]
  40b49e:	or     edx,esi
  40b4a0:	mov    al,0x9
  40b4a2:	adc    DWORD PTR [ebx],0xffffffc4
  40b4a5:	add    BYTE PTR [ebx+ebx*1+0x48],dh
  40b4a9:	ss add bl,ch
  40b4ac:	int3   
  40b4ad:	sub    eax,eax
  40b4af:	std    
  40b4b0:	(bad)  
  40b4b1:	mov    edi,0x3647e608
  40b4b6:	jle    0x40b4c2
  40b4b8:	fadd   DWORD PTR [ecx+0x3f95883d]
  40b4be:	add    dh,dl
  40b4c0:	mov    edx,0x91262b05
  40b4c5:	mov    edx,0x3880c7de
  40b4cb:	mov    al,ds:0x8b8b3eba
  40b4d0:	ret    
  40b4d1:	dec    edx
  40b4d2:	cmp    DWORD PTR [edi],0xffffffbf
  40b4d5:	dec    DWORD PTR [edx]
  40b4d7:	lea    ebx,[esp+eax*1-0x7d]
  40b4db:	sub    bh,BYTE PTR ds:0x163b7503
  40b4e1:	ret    0xea
	...
  40b4f0:	add    BYTE PTR [eax],al
  40b4f2:	arpl   WORD PTR [edx],di
  40b4f4:	dec    edi
  40b4f5:	or     al,0xc4
  40b4f7:	ins    BYTE PTR es:[edi],dx
  40b4f8:	push   cs
  40b4f9:	add    eax,0x2253f
  40b4fe:	jle    0x40b501
  40b500:	add    BYTE PTR [eax+0x67],dl
  40b503:	mov    cl,0x87
  40b505:	(bad)  
  40b506:	jo     0x40b4f9
  40b508:	xchg   DWORD PTR [edi+esi*1-0x21],edx
  40b50c:	push   esp
  40b50d:	(bad)  
  40b50e:	jmp    0xfc93:0xa5e85024
  40b515:	(bad)  
  40b516:	not    ebp
  40b518:	leave  
  40b519:	shl    DWORD PTR [edi],0x21
  40b51c:	sub    ebx,ebx
  40b51e:	inc    eax
  40b51f:	fcom   QWORD PTR [eax]
  40b521:	push   DWORD PTR [edx-0x5aff97d7]
  40b527:	and    ebp,edi
  40b529:	adc    al,0xbc
  40b52b:	jmp    0xb12:0x6cbc0041
  40b532:	push   DWORD PTR [edi+eiz*2]
  40b535:	mov    DWORD PTR [edx-0x5b],edi
  40b538:	addr16 or al,0xba
  40b53b:	arpl   dx,si
  40b53d:	dec    edi
  40b53e:	pop    ss
  40b53f:	push   ss
  40b540:	mov    dh,bh
  40b542:	clc    
  40b543:	push   es
  40b544:	add    cl,BYTE PTR [ebp-0xae6e86]
  40b54a:	jb     0x40b4d9
  40b54c:	cld    
  40b54d:	adc    al,0xcc
  40b54f:	push   edx
  40b550:	inc    ebx
  40b551:	add    BYTE PTR [esp+eiz*8+0xb0d],bh
	...
  40b564:	add    bh,bh
  40b566:	jnp    0x40b599
  40b568:	lea    eax,[edx+0x488017c8]
  40b56e:	int3   
  40b56f:	out    0x77,eax
  40b571:	push   esp
  40b572:	aas    
  40b573:	test   al,0xb
  40b575:	call   DWORD PTR [edi+0x32b527ff]
  40b57b:	pop    es
  40b57c:	mov    BYTE PTR [eax-0x660c5abc],cl
  40b582:	mov    bh,0xdf
  40b584:	push   eax
  40b585:	nop
  40b586:	mov    bh,0xe3
  40b588:	jmp    0x40b579
  40b58a:	cmp    eax,0xc816fbe7
  40b58f:	ins    BYTE PTR es:[edi],dx
  40b590:	inc    ecx
  40b591:	outs   dx,DWORD PTR ds:[esi]
  40b592:	xchg   edi,eax
  40b593:	(bad)  
  40b594:	adc    DWORD PTR [eax-0x43fbd76f],edi
  40b59a:	or     esi,eax
  40b59c:	ins    DWORD PTR es:[edi],dx
  40b59d:	xor    esi,DWORD PTR ds:0x6edc59f8
  40b5a4:	pop    edx
  40b5a5:	inc    bh
  40b5a7:	push   0xffffffc0
  40b5a9:	inc    eax
  40b5aa:	aas    
  40b5ab:	stos   DWORD PTR es:[edi],eax
  40b5ac:	pop    edi
  40b5ad:	jbe    0x40b5b4
  40b5af:	lock add edx,DWORD PTR [edx-0x54047bc3]
  40b5b6:	les    ecx,FWORD PTR [esi-0x22cec88f]
  40b5bc:	mov    DWORD PTR [ecx-0x3791879],eax
  40b5c2:	rcl    BYTE PTR [edi],0xfb
  40b5c5:	mov    eax,esp
  40b5c7:	outs   dx,BYTE PTR ds:[esi]
  40b5c8:	jno    0x40b5ca
	...
  40b5d6:	add    BYTE PTR [eax],al
  40b5d8:	aaa    
  40b5d9:	xor    ebp,edi
  40b5db:	lea    esp,[ecx-0x79]
  40b5de:	out    0x86,eax
  40b5e0:	cld    
  40b5e1:	shl    BYTE PTR [edx+0x51],0x4f
  40b5e5:	aas    
  40b5e6:	jmp    0x8a03:0xf406f65b
  40b5ed:	cmp    eax,0x20fc874c
  40b5f2:	add    DWORD PTR [esi],esi
  40b5f4:	dec    esi
  40b5f5:	(bad)  
  40b5f6:	call   0xfe736b66
  40b5fb:	repnz cld 
  40b5fd:	mov    esp,0xc1813004
  40b602:	add    BYTE PTR [esi],dl
  40b604:	cs (bad) 
  40b606:	call   0xfe738b57
  40b60b:	bnd jl 0x40b5c3
  40b60e:	add    al,0x30
  40b610:	add    ecx,0xdc0ff600
  40b616:	std    
  40b617:	je     0x40b645
  40b619:	and    ah,al
  40b61b:	in     al,0x85
  40b61d:	xor    cl,BYTE PTR [edx]
  40b61f:	test   eax,0xabc7cbef
  40b624:	dec    esp
  40b625:	enter  0x5368,0x4
  40b629:	xchg   DWORD PTR [eax],eax
  40b62b:	push   ecx
  40b62c:	xor    dl,BYTE PTR [ecx+0x2964e93f]
  40b632:	xchg   edx,eax
  40b633:	mov    dh,0x55
  40b635:	mov    esi,0xa03434c0
  40b63a:	jp     0x40b682
	...
  40b648:	add    BYTE PTR [eax],al
  40b64a:	add    dl,bh
  40b64c:	(bad)  
  40b64d:	push   0x879682
  40b652:	or     DWORD PTR [edi],0x398efe56
  40b658:	or     BYTE PTR [esi],cl
  40b65a:	ins    DWORD PTR es:[edi],dx
  40b65b:	inc    edi
  40b65d:	add    cl,ch
  40b65f:	(bad)  
  40b660:	mov    edi,esp
  40b662:	sbb    DWORD PTR [esp+edi*4],edx
  40b665:	or     al,0x6e
  40b667:	das    
  40b668:	scas   al,BYTE PTR es:[edi]
  40b669:	pop    ebp
  40b66a:	test   al,0x3c
  40b66c:	inc    ebp
  40b66d:	(bad)
  40b670:	or     BYTE PTR [esi],cl
  40b672:	ins    BYTE PTR es:[edi],dx
  40b673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b674:	mov    DWORD PTR [eax],0x8bc85ae9
  40b67a:	add    BYTE PTR [ebx+0x196a4e2c],dl
  40b680:	popf   
  40b681:	adc    DWORD PTR [eax-0x59],esp
  40b684:	(bad)  
  40b685:	std    
  40b686:	jne    0x40b6a2
  40b688:	cs adc eax,0x8bf982
  40b68e:	and    DWORD PTR [edx-0x3f],0x9
  40b692:	rcr    BYTE PTR [ecx-0x69fe81b9],0xc4
  40b699:	std    
  40b69a:	jne    0x40b6da
  40b69c:	cs adc eax,0x8bb986
  40b6a2:	and    DWORD PTR [edx+0x31],0xffffff83
  40b6a6:	clc    
  40b6a7:	ret    0x3a0
  40b6aa:	jmp    0x417b9b
	...
  40b6bb:	add    BYTE PTR [eax],al
  40b6bd:	add    bl,ch
  40b6bf:	lock hlt 
  40b6c1:	push   eax
  40b6c2:	cld    
  40b6c3:	retf   
  40b6c4:	std    
  40b6c5:	jne    0x40b655
  40b6c7:	and    edx,DWORD PTR [edx]
  40b6c9:	(bad)  
  40b6ca:	jns    0x40b6fa
  40b6cc:	or     eax,eax
  40b6ce:	imul   esi,DWORD PTR [eax-0x3b99feb2],0xcb927d81
  40b6d8:	or     eax,0xc51384
  40b6dd:	add    BYTE PTR [esi-0x5df0ff14],ah
  40b6e3:	lock (bad) 
  40b6e5:	call   DWORD PTR [esi]
  40b6e7:	pushf  
  40b6e8:	mov    DWORD PTR [ebp-0x5e],edx
  40b6eb:	xchg   BYTE PTR [edx-0x18],dl
  40b6ee:	ret    0xff3c
  40b6f1:	jmp    FWORD PTR [ebx+eax*2]
  40b6f4:	inc    ebp
  40b6f5:	call   0x355693
  40b6fa:	jecxz  0x40b71f
  40b6fc:	push   eax
  40b6fd:	call   0x3ff9ef
  40b702:	aas    
  40b703:	fidivr WORD PTR ds:0x2213ff0
  40b709:	add    al,bh
  40b70b:	pop    esp
  40b70c:	out    0xff,al
  40b70e:	fsub   DWORD PTR [ecx]
  40b710:	add    al,BYTE PTR [ebx+0x41579312]
  40b716:	aas    
  40b717:	and    DWORD PTR [edi+0x52],ebp
  40b71a:	push   edi
  40b71b:	mov    ecx,0xd93f4164
  40b720:	shr    DWORD PTR [esi+0x0],0x0
	...
  40b730:	add    BYTE PTR [edi],bh
  40b732:	and    DWORD PTR [edx+0x68],edx
  40b735:	mov    bh,0x41
  40b737:	inc    ebx
  40b738:	add    BYTE PTR [eax+0x1ce7e9ac],ah
  40b73e:	mov    al,0x1
  40b740:	add    BYTE PTR [ecx+eiz*8+0x70],al
  40b744:	sbb    BYTE PTR [edi],dl
  40b746:	mov    fs,WORD PTR [ecx+eax*2+0x3f]
  40b74a:	sbb    DWORD PTR [edi+0x52213f6e],ebx
  40b750:	push   0x4181c0
  40b755:	push   0xf8e7ec94
  40b75a:	out    dx,eax
  40b75b:	add    al,0x0
  40b75d:	inc    esp
  40b75e:	popa   
  40b75f:	outs   dx,BYTE PTR ds:[esi]
  40b760:	dec    eax
  40b761:	out    0x8d,eax
  40b763:	popa   
  40b764:	inc    ecx
  40b765:	aas    
  40b766:	or     DWORD PTR [ebx+0x52213f6e],ecx
  40b76c:	push   0x41c0d0
  40b771:	xor    ah,cl
  40b773:	in     al,dx
  40b774:	out    0x54,eax
  40b776:	rol    BYTE PTR [eax+eax*1],1
  40b779:	adc    al,0x17
  40b77b:	test   DWORD PTR [ebp*4+0x3e0041cd],edi
  40b782:	sub    al,0x1c
  40b784:	push   0x41c0df
  40b789:	pop    ss
  40b78a:	enter  0x68cd,0x3f
  40b78e:	enter  0x6bb7,0x9f
  40b792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b793:	test   al,0x3
	...
  40b7a1:	add    BYTE PTR [eax],al
  40b7a3:	add    al,ch
  40b7a5:	mov    ah,0x3f
  40b7a7:	jmp    0x40b7e1
  40b7a9:	mov    ecx,0xc2e403e7
  40b7ae:	push   0x36
  40b7b0:	lods   eax,DWORD PTR ds:[esi]
  40b7b1:	mov    gs,WORD PTR [eax-0x164ac2fd]
  40b7b7:	sub    al,0xff
  40b7b9:	ret    0x6e27
  40b7bc:	sub    DWORD PTR ds:0xa200efa5,edi
  40b7c2:	call   0x70ebbf
  40b7c7:	mov    eax,cs:0x13f8072e
  40b7cd:	xor    al,0x98
  40b7cf:	jmp    0x40b832
  40b7d1:	sub    eax,0x84b7f7f7
  40b7d6:	test   DWORD PTR [ebp+0x6a3833fb],0xfc552f3d
  40b7e0:	pop    eax
  40b7e1:	rcl    ch,cl
  40b7e3:	imul   DWORD PTR [ecx+0x2e]
  40b7e6:	push   ebp
  40b7e7:	lock lock pop ds
  40b7ea:	(bad)  
  40b7ec:	pop    ecx
  40b7ed:	cs jno 0x40b831
  40b7f0:	arpl   WORD PTR [edx+0x35],cx
  40b7f3:	in     al,dx
  40b7f4:	dec    eax
  40b7f5:	mov    edx,0x1bc382f3
  40b7fa:	call   0xe7e1216e
  40b7ff:	add    esp,DWORD PTR [eax]
  40b801:	outs   dx,DWORD PTR ds:[esi]
  40b802:	xchg   edi,eax
  40b803:	jno    0x40b83c
  40b805:	and    BYTE PTR [esi-0x80],ah
	...
  40b814:	add    BYTE PTR [eax],al
  40b816:	add    BYTE PTR [ecx],ah
  40b818:	xchg   DWORD PTR cs:[ecx+0x27],esi
  40b81c:	cs cmc 
  40b81e:	or     esp,DWORD PTR [edi]
  40b820:	or     al,0x1
  40b822:	ins    DWORD PTR es:[edi],dx
  40b823:	adc    BYTE PTR [edi],ch
  40b825:	(bad)  
  40b826:	hlt    
  40b827:	or     al,0x2f
  40b829:	je     0x40b81c
  40b82b:	in     al,0x17
  40b82d:	test   DWORD PTR [esi-0x18],ebx
  40b830:	cs je  0x40b878
  40b833:	lock mov ah,0x8
  40b836:	inc    ecx
  40b837:	mov    al,ds:0xd046fe49
  40b83c:	mov    ah,0xf0
  40b83e:	push   ecx
  40b83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b840:	inc    esi
  40b841:	(bad)  
  40b842:	shl    BYTE PTR ss:[esp+ebp*8-0x1b960bf],1
  40b84a:	es mov al,0xb4
  40b84d:	call   0xfe878f63
  40b852:	push   ss
  40b853:	call   0x742e:0xa80efead
  40b85a:	add    eax,0x9e7ed490
  40b85f:	sti    
  40b860:	mov    DWORD PTR [ecx-0x7fdfc0d3],0xc82e89ed
  40b86a:	stos   DWORD PTR es:[edi],eax
  40b86b:	dec    esp
  40b86c:	enter  0x7253,0x58
  40b870:	call   0xc108:0xb471e96a
  40b877:	dec    ebp
  40b878:	inc    ecx
  40b879:	inc    dh
	...
  40b887:	add    BYTE PTR [eax],al
  40b889:	add    ch,al
  40b88b:	adc    eax,0x9babd152
  40b890:	add    cl,ch
  40b892:	xor    eax,0x3dd27508
  40b897:	or     DWORD PTR [ecx-0x6e],ecx
  40b89a:	dec    esi
  40b89b:	dec    eax
  40b89c:	cmp    esp,ebp
  40b89e:	mov    al,ds:0x36d180c3
  40b8a3:	mov    bl,0x3
  40b8a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8a6:	cmp    al,0xc8
  40b8a8:	jmp    0x562dcad
  40b8ad:	dec    eax
  40b8ae:	std    
  40b8af:	or     DWORD PTR [ebx-0x16],esi
  40b8b2:	popf   
  40b8b3:	or     bl,BYTE PTR [ebx-0x37]
  40b8b6:	aam    0x2c
  40b8b8:	(bad)  
  40b8b9:	push   esp
  40b8ba:	ins    DWORD PTR es:[edi],dx
  40b8bb:	and    eax,0x7dcac483
  40b8c0:	std    
  40b8c1:	jne    0x40b8a5
  40b8c3:	and    BYTE PTR [edx],dl
  40b8c5:	mov    WORD PTR [ecx+0x36],?
  40b8c8:	or     eax,eax
  40b8ca:	fwait
  40b8cb:	(bad)  
  40b8cc:	pop    ebp
  40b8cd:	leave  
  40b8ce:	and    al,0xd9
  40b8d0:	add    bh,bh
  40b8d2:	mov    eax,esp
  40b8d4:	call   0xff76fb27
  40b8d9:	or     esp,DWORD PTR [esi-0x63]
  40b8dc:	add    ebx,DWORD PTR [edi+0x6f]
  40b8df:	pop    es
  40b8e0:	push   cs
  40b8e1:	add    BYTE PTR [ecx-0x48],dl
  40b8e4:	adc    al,0xff
  40b8e6:	retf   
  40b8e7:	fsubr  st,st(0)
  40b8e9:	push   ebp
  40b8ea:	cmp    eax,0x8dff36
	...
  40b8fb:	add    BYTE PTR [eax],al
  40b8fd:	fstp   TBYTE PTR [eax]
  40b8ff:	dec    esi
  40b900:	dec    DWORD PTR [ebx]
  40b902:	(bad)
  40b905:	loop   0x40b93c
  40b907:	dec    DWORD PTR [ebx]
  40b909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b90a:	ret    0x884
  40b90d:	gs enter 0xff00,0xb
  40b912:	xor    bh,bh
  40b914:	jne    0x40b8a4
  40b916:	sbb    eax,DWORD PTR [ecx+0xb328192]
  40b91c:	shl    BYTE PTR [ecx-0x54],0xe9
  40b920:	add    dl,BYTE PTR [esi-0x38]
  40b923:	xchg   DWORD PTR [ebp-0x7e],eax
  40b926:	test   BYTE PTR ds:[eax-0x7bf237df],0xe8
  40b92e:	mov    BYTE PTR [eax],0x0
  40b931:	aas    
  40b932:	jmp    0x88f4:0x3b2054ec
  40b939:	adc    BYTE PTR [ecx-0xc],0x74
  40b93d:	out    dx,eax
  40b93e:	fsincos 
  40b940:	pop    edi
  40b941:	jle    0x40b964
  40b943:	jmp    0xf850:0x2219169
  40b94a:	or     al,0xd2
  40b94c:	addr16 inc esp
  40b94e:	add    DWORD PTR [ebx+0x0],eax
  40b951:	xlat   BYTE PTR ds:[ebx]
  40b952:	jne    0x40b9b8
  40b954:	add    BYTE PTR [edi],bh
  40b956:	jno    0x40b94d
  40b958:	je     0x40b949
  40b95a:	sbb    DWORD PTR ds:0xea217e60,eax
  40b960:	dec    ebp
	...
  40b96d:	add    BYTE PTR [eax],al
  40b96f:	add    BYTE PTR [ecx+0x21],bl
  40b972:	add    bl,BYTE PTR [edx+0x66]
  40b975:	es ret 0x4b73
  40b979:	shl    BYTE PTR ss:[ebx+0x47],1
  40b97d:	ss retf 
  40b97f:	push   cs
  40b980:	ret    0x2a7
  40b983:	add    BYTE PTR [edi],bh
  40b985:	es retf 
  40b987:	je     0x40b9cf
  40b989:	fidivr DWORD PTR ds:0x2213eb4
  40b98f:	add    BYTE PTR [edx+ebx*1+0x21cb44bd],dl
  40b996:	add    al,BYTE PTR [eax]
  40b998:	aas    
  40b999:	and    eax,0xab6c031
  40b99e:	cmc    
  40b99f:	(bad)  
  40b9a0:	push   0x3837a40f
  40b9a5:	xchg   esp,eax
  40b9a6:	add    al,0xc7
  40b9a8:	add    bl,BYTE PTR [ecx]
  40b9aa:	add    al,BYTE PTR [eax]
  40b9ac:	aas    
  40b9ad:	and    DWORD PTR [edx+0x7e223f3e],eax
  40b9b3:	push   edi
  40b9b4:	cmp    eax,0x27570221
  40b9b9:	enter  0xf5c6,0x31
  40b9bd:	sub    esi,DWORD PTR [ecx+0x3e]
  40b9c0:	sti    
  40b9c1:	inc    esi
  40b9c2:	adc    eax,0xc8b420ec
  40b9c7:	imul   esp,DWORD PTR [ecx],0x7a
  40b9ca:	sub    BYTE PTR [eax+edx*1],al
  40b9cd:	mov    ch,0xab
  40b9cf:	jmp    0x40b9eb
  40b9d1:	popf   
  40b9d2:	out    0x3,eax
	...
  40b9e0:	add    BYTE PTR [eax],al
  40b9e2:	add    BYTE PTR [eax+ecx*1],dh
  40b9e5:	fistp  QWORD PTR [esi+0x56]
  40b9e8:	(bad)  
  40b9e9:	out    0x3,eax
  40b9eb:	clc    
  40b9ec:	test   BYTE PTR [edi+0x2],cl
  40b9ef:	aas    
  40b9f0:	enter  0xeae7,0x32
  40b9f4:	(bad)  
  40b9f5:	out    0x3,eax
  40b9f7:	mov    esp,0x4a024fac
  40b9fc:	mov    ebx,0x2e37670
  40ba01:	lods   eax,DWORD PTR ds:[esi]
  40ba02:	jmp    0x40ba42
  40ba04:	enter  0x3e7,0xa6
  40ba08:	push   es
  40ba09:	jmp    0x9d87f911
  40ba0e:	jmp    0x40ba4e
  40ba10:	mov    ch,0xe6
  40ba12:	mov    ah,BYTE PTR [ebx]
  40ba14:	sub    BYTE PTR [edi],ah
  40ba16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba18:	(bad)  
  40ba19:	out    0x3,eax
  40ba1b:	aas    
  40ba1c:	and    DWORD PTR [esi+0x2],ecx
  40ba1f:	aas    
  40ba20:	enter  0x766a,0x97
  40ba24:	(bad)  
  40ba25:	je     0x40ba2b
  40ba27:	(bad)  
  40ba28:	lods   al,BYTE PTR ds:[esi]
  40ba29:	ret    
  40ba2a:	retf   
  40ba2b:	sti    
  40ba2c:	pop    ds
  40ba2d:	in     al,0x3
  40ba2f:	aas    
  40ba30:	enter  0x8dc0,0x3f
  40ba34:	enter  0x86e7,0xdb
  40ba38:	pop    ds
  40ba39:	in     al,dx
  40ba3a:	js     0x40ba7c
  40ba3c:	inc    ecx
  40ba3d:	cmp    eax,0x8481cc
  40ba42:	shl    DWORD PTR [esi],0xc8
  40ba45:	add    cl,ch
	...
  40ba53:	add    BYTE PTR [eax],al
  40ba55:	add    BYTE PTR [ebx],bl
  40ba57:	inc    esi
  40ba58:	add    cl,ch
  40ba5a:	cmp    al,0x45
  40ba5c:	jl     0x40b9ef
  40ba5e:	ss mov ecx,0xc83a0483
  40ba64:	add    BYTE PTR [eax-0x72],ah
  40ba67:	adc    al,0x82
  40ba69:	add    al,0xd7
  40ba6b:	sub    DWORD PTR [edx-0x10],esi
  40ba6e:	cmc    
  40ba6f:	test   al,ch
  40ba71:	jmp    0x40baaf
  40ba73:	enter  0x8200,0x44
  40ba77:	add    DWORD PTR [ecx+edx*2+0x45],eax
  40ba7b:	enter  0xe900,0xf5
  40ba7f:	test   al,al
  40ba81:	jmp    0x264182c2
  40ba86:	xchg   BYTE PTR [eax],al
  40ba88:	add    ecx,ebp
  40ba8a:	cmp    al,0xc8
  40ba8c:	lds    esp,FWORD PTR [eax+eax*1+0x3ce9fe2a]
  40ba93:	add    DWORD PTR [ebp+ebp*2+0x43],eax
  40ba97:	enter  0xe900,0x85
  40ba9b:	test   BYTE PTR [eax+0xc83ce9],bh
  40baa1:	push   ss
  40baa2:	es and al,0xe9
  40baa5:	cli    
  40baa6:	mov    gs,WORD PTR [edx]
  40baa8:	(bad)  
  40baa9:	jo     0x40bab1
  40baab:	or     dh,bh
  40baad:	je     0x40bb27
  40baaf:	and    DWORD PTR [ecx],ecx
  40bab1:	test   DWORD PTR [ebp-0x4b5b77d6],0xbd742a
	...
  40bac7:	add    BYTE PTR [eax],al
  40bac9:	xchg   esp,eax
  40baca:	sub    al,0xfc
  40bacc:	fisubr WORD PTR [ebp+0x40]
  40bacf:	inc    esp
  40bad0:	lods   eax,DWORD PTR ds:[esi]
  40bad1:	mov    ecx,0x22e92ec
  40bad6:	enter  0x0,0x13
  40bada:	xchg   edx,eax
  40badb:	push   0x82f688
  40bae0:	call   0x4143bd
  40bae5:	push   esi
  40bae6:	mov    WORD PTR [eax-0x23b98a0],cs
  40baec:	jne    0x40bac4
  40baee:	or     al,0x2e
  40baf0:	outs   dx,BYTE PTR ds:[esi]
  40baf1:	push   ss
  40baf2:	lds    ecx,FWORD PTR [ecx]
  40baf4:	shl    BYTE PTR [edx],0xbc
  40baf7:	push   0x83468f
  40bafc:	call   0x414405
  40bb01:	mov    WORD PTR es:[ebp-0x23bd8a0],cs
  40bb08:	jne    0x40bb30
  40bb0a:	or     eax,0xc4d66e12
  40bb0f:	or     eax,eax
  40bb11:	add    dh,dh
  40bb13:	push   0x840697
  40bb18:	call   0x4143cd
  40bb1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb1e:	mov    WORD PTR [ebp-0x23b68a0],ss
  40bb24:	jne    0x40bb8c
  40bb26:	or     eax,0xc4a66df6
  40bb2b:	jmp    0x40bb55
	...
  40bb3c:	adc    eax,0xd75f92f8
  40bb41:	(bad)  
  40bb42:	push   DWORD PTR [esp+ecx*4-0x74]
  40bb46:	mov    al,ds:0xe8c4e760
  40bb4b:	xor    edi,DWORD PTR [edx-0x41afff3c]
  40bb51:	fs pop esi
  40bb53:	inc    ecx
  40bb54:	xor    ax,0xc075
  40bb58:	mov    ss,WORD PTR [eax]
  40bb5a:	ins    DWORD PTR es:[edi],dx
  40bb5b:	add    BYTE PTR [esi+0xb],dl
  40bb5e:	add    BYTE PTR [ebx],ch
  40bb60:	aas    
  40bb61:	pop    edi
  40bb62:	cld    
  40bb63:	mov    edi,0x74ef7cd2
  40bb68:	xchg   DWORD PTR [esi],edx
  40bb6a:	push   ss
  40bb6b:	ins    BYTE PTR es:[edi],dx
  40bb6c:	aas    
  40bb6d:	pop    ds
  40bb6e:	push   edx
  40bb6f:	dec    edx
  40bb71:	data16 fisttp QWORD PTR [edx]
  40bb74:	xor    eax,0x7a88f077
  40bb79:	lods   eax,DWORD PTR ds:[esi]
  40bb7a:	out    dx,eax
  40bb7b:	je     0x40bb80
  40bb7d:	cmp    al,BYTE PTR [edx]
  40bb7f:	ins    BYTE PTR es:[edi],dx
  40bb80:	aas    
  40bb81:	xor    DWORD PTR [edx-0x1],edx
  40bb84:	xchg   edx,eax
  40bb85:	ins    DWORD PTR es:[edi],dx
  40bb86:	(bad)  
  40bb88:	push   ss
  40bb89:	dec    edi
  40bb8a:	lock mov BYTE PTR [edx-0x837c77],al
  40bb91:	xor    DWORD PTR [esi+0x34],esi
  40bb94:	mov    esp,0x6cffaa34
  40bb99:	mov    edi,0x963f005c
  40bb9e:	mov    dl,0xfe
	...
  40bbac:	add    BYTE PTR [eax],al
  40bbae:	add    BYTE PTR [edx+0x29],ch
  40bbb1:	fisub  DWORD PTR [edi-0x42]
  40bbb4:	xchg   esi,eax
  40bbb5:	out    dx,eax
  40bbb6:	dec    BYTE PTR [edx-0xf]
  40bbb9:	out    dx,eax
  40bbba:	je     0x40bbf3
  40bbbc:	jns    0x40bb6d
  40bbbe:	add    al,0xde
  40bbc1:	out    dx,eax
  40bbc2:	je     0x40bbbf
  40bbc4:	div    BYTE PTR [ebp+0x8]
  40bbc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbc8:	test   DWORD PTR [ecx+0x75c6a8fe],eax
  40bbce:	mov    eax,0xe7fa44a0
  40bbd3:	out    0xb0,al
  40bbd5:	out    dx,eax
  40bbd6:	(bad)  
  40bbd7:	nop
  40bbd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd9:	shl    edi,0xb9
  40bbdc:	lods   eax,DWORD PTR ds:[esi]
  40bbdd:	out    dx,eax
  40bbde:	inc    BYTE PTR [eax-0x3e18465c]
  40bbe4:	lods   eax,DWORD PTR ds:[esi]
  40bbe5:	out    dx,eax
  40bbe6:	(bad)  
  40bbe7:	jo     0x40bbb1
  40bbe9:	pop    esp
  40bbea:	enter  0xa660,0x63
  40bbee:	lock popa 
  40bbf0:	daa    
  40bbf1:	pop    ebp
  40bbf2:	mov    al,0x60
  40bbf4:	sahf   
  40bbf5:	arpl   ax,si
  40bbf7:	push   ecx
  40bbf8:	daa    
  40bbf9:	cmp    eax,0x63b660ac
  40bbfe:	lock inc ecx
  40bc00:	xor    esp,ebp
  40bc02:	test   BYTE PTR [ebx+0x3876e630],bh
  40bc08:	cvtps2pi mm3,xmm4
  40bc0b:	ds enter 0x3e7,0xbc
  40bc10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc11:	jg     0x40bc16
	...
  40bc1f:	add    BYTE PTR [eax],al
  40bc21:	add    BYTE PTR [ebx-0x7d160028],dl
  40bc27:	mov    edi,esp
  40bc29:	lock xchg ebx,eax
  40bc2b:	adc    al,0x90
  40bc2d:	loopne 0x40bbc4
  40bc2f:	enter  0xfce7,0xb8
  40bc33:	pushf  
  40bc34:	out    0xc8,al
  40bc36:	jnp    0x40bc68
  40bc38:	jmp    0xd008fb40
  40bc3d:	xchg   DWORD PTR [eax+0x53f0e789],eax
  40bc43:	adc    al,0x40
  40bc45:	fsub   DWORD PTR [ebp-0x38]
  40bc48:	out    0xfc,eax
  40bc4a:	mov    BYTE PTR [esi+eiz*8-0x15cf8438],bl
  40bc51:	add    edi,DWORD PTR [edi]
  40bc53:	enter  0x762e,0x83
  40bc57:	das    
  40bc58:	leave  
  40bc59:	xchg   DWORD PTR [ecx+0x7f341c26],ebp
  40bc5f:	pusha  
  40bc60:	pop    ss
  40bc61:	lock cdq 
  40bc63:	sbb    ah,BYTE PTR es:[ecx-0x790930b8]
  40bc6a:	test   eax,0x81efff24
  40bc6f:	pushf  
  40bc70:	add    BYTE PTR [ecx],bl
  40bc72:	xchg   esp,eax
  40bc73:	int    0x84
  40bc75:	out    dx,al
  40bc76:	pusha  
  40bc77:	and    eax,0x258bd574
  40bc7c:	sbb    dh,0x50
  40bc7f:	push   ebx
  40bc80:	inc    esp
  40bc81:	fpatan 
  40bc83:	das    
  40bc84:	das    
  40bc85:	arpl   WORD PTR [eax],ax
	...
  40bc93:	add    BYTE PTR [eax],al
  40bc95:	pusha  
  40bc96:	and    eax,0x255bd5e9
  40bc9b:	(bad)  
  40bc9c:	push   ds
  40bc9d:	or     BYTE PTR [eax],0x11
  40bca0:	jmp    0x692e0e3c
  40bca5:	pop    es
  40bca6:	pop    edx
  40bca7:	jmp    DWORD PTR [esi+0x61840f18]
  40bcad:	adc    DWORD PTR [edi],esp
  40bcaf:	(bad)  
  40bcb0:	jmp    0x624184f1
  40bcb5:	xchg   BYTE PTR [ecx+ecx*1-0x7f347857],bh
  40bcbc:	sar    DWORD PTR [ebx+ebx*4],0x3
  40bcc0:	add    BYTE PTR [edi-0x1e16ff36],0x9c
  40bcc7:	adc    al,0x51
  40bcc9:	push   ebx
  40bcca:	push   ebp
  40bccb:	(bad)  
  40bccc:	pop    esi
  40bccd:	in     al,0x65
  40bccf:	je     0x40bcb7
  40bcd1:	je     0x40bd04
  40bcd3:	dec    edi
  40bcd4:	test   al,0x3c
  40bcd6:	and    eax,0x93e4dd74
  40bcdb:	test   DWORD PTR [esi],edi
  40bcdd:	shl    BYTE PTR [edx],1
  40bcdf:	or     al,0xc1
  40bce1:	lods   al,BYTE PTR ds:[esi]
  40bce2:	xchg   ebx,eax
  40bce3:	aas    
  40bce4:	jmp    0x1155598a
  40bce9:	pop    eax
  40bcea:	dec    ebp
  40bceb:	(bad)  
  40bcec:	push   ds
  40bced:	and    cl,BYTE PTR [ecx+edi*4+0x17]
  40bcf1:	test   al,0x26
  40bcf3:	imul   ecx,edi,0xc83b
	...
  40bd05:	add    BYTE PTR [eax],al
  40bd07:	add    BYTE PTR [ebx],dl
  40bd09:	dec    edi
  40bd0a:	sar    dh,0x81
  40bd0d:	ss dec esi
  40bd0f:	call   0x40064d
  40bd14:	adc    ecx,DWORD PTR [edi-0x40]
  40bd17:	(bad)  
  40bd18:	popa   
  40bd19:	ss dec esi
  40bd1b:	dec    ebx
  40bd1d:	jno    0x40bd1b
  40bd1f:	push   DWORD PTR [ecx+0x1]
  40bd22:	imul   esp,DWORD PTR ss:[esi-0x37],0xffffff87
  40bd27:	test   edx,eax
  40bd29:	xor    edi,edi
  40bd2b:	call   DWORD PTR [esi]
  40bd2d:	and    eax,0xc927e682
  40bd32:	add    BYTE PTR [ebp-0x3f875],cl
  40bd38:	loope  0x40bd57
  40bd3a:	add    BYTE PTR [eax],dl
  40bd3c:	push   ss
  40bd3d:	leave  
  40bd3e:	add    BYTE PTR [edi],cl
  40bd40:	stos   BYTE PTR es:[edi],al
  40bd41:	dec    edx
  40bd42:	(bad)  
  40bd43:	jmp    DWORD PTR [esi]
  40bd45:	dec    eax
  40bd46:	inc    eax
  40bd47:	sub    al,0x26
  40bd49:	test   dh,ah
  40bd4b:	dec    esi
  40bd4c:	push   edi
  40bd4d:	int3   
  40bd4e:	call   0x10cfa64
  40bd53:	or     esp,DWORD PTR [esi-0x4116fc61]
  40bd59:	retf   
  40bd5a:	add    BYTE PTR [eax],al
  40bd5c:	push   ebx
  40bd5d:	inc    eax
  40bd5e:	sar    dh,0x71
  40bd61:	lea    eax,ss:[edx-0x2e]
  40bd65:	js     0x40bdcf
  40bd67:	call   0xe84148fc
	...
  40bd78:	add    BYTE PTR [eax],al
  40bd7a:	add    BYTE PTR [edx],cl
  40bd7c:	jg     0x40bd7e
  40bd7e:	add    BYTE PTR [ebp-0xfa8af8],bl
  40bd84:	mov    cl,0xff
  40bd86:	call   DWORD PTR [esi+0x4e147535]
  40bd8c:	test   DWORD PTR [esi-0x541c001],ecx
  40bd92:	mov    edi,0x435a060a
  40bd97:	imul   DWORD PTR [edi+0x2]
  40bd9a:	dec    DWORD PTR [edx]
  40bd9c:	sti    
  40bd9d:	fldcw  WORD PTR [ecx-0x1513e23f]
  40bda3:	inc    ebp
  40bda4:	dec    ecx
  40bda5:	add    bh,bh
  40bda7:	repnz and bl,dl
  40bdaa:	popf   
  40bdab:	mov    ecx,0xb28cec05
  40bdb0:	jo     0x40bda1
  40bdb2:	(bad)  
  40bdb3:	push   eax
  40bdb4:	adc    DWORD PTR [edx+0x2c],0xffffffed
  40bdb8:	mov    esi,0x65b9e1dc
  40bdbd:	in     al,dx
  40bdbe:	dec    edi
  40bdbf:	(bad)  
  40bdc0:	pop    edx
  40bdc1:	jbe    0x40bdd3
  40bdc3:	xor    ch,bl
  40bdc5:	add    bh,bh
  40bdc7:	mov    dl,0x19
  40bdc9:	(bad)  
  40bdcb:	and    DWORD PTR [ebx-0x14],eax
  40bdce:	out    0xf5,eax
  40bdd0:	scas   eax,DWORD PTR es:[edi]
  40bdd1:	jmp    0x40bdd1
  40bdd3:	add    ax,WORD PTR es:[eax]
  40bdd7:	aas    
  40bdd8:	pushf  
  40bdd9:	inc    edx
  40bdda:	sub    al,0xb6
  40bddc:	lods   al,BYTE PTR ds:[esi]
  40bddd:	mov    eax,0xfd
	...
  40bdee:	clc    
  40bdef:	call   0x41:0xd2cd3c7f
  40bdf6:	cmp    al,0x4
  40bdf8:	inc    esp
  40bdf9:	push   0x4362f6
  40bdfe:	fadd   DWORD PTR [ecx+edi*4-0x3]
  40be02:	rcl    BYTE PTR [edx+0x31546fdc],1
  40be08:	add    cl,BYTE PTR [ebx]
  40be0a:	call   FWORD PTR [ebp+0x1f]
  40be0d:	push   0x4368fc
  40be12:	mov    al,0x5c
  40be14:	push   ss
  40be15:	call   0xedae8618
  40be1a:	mov    eax,ds:0x9ab85523
  40be1f:	and    edx,DWORD PTR [edi]
  40be21:	push   esp
  40be22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be23:	push   ecx
  40be24:	in     ax,dx
  40be26:	mov    DWORD PTR [eax-0x71],edi
  40be29:	add    bh,BYTE PTR [edi]
  40be2b:	xor    edi,DWORD PTR [esi]
  40be2d:	push   esp
  40be2e:	js     0x40bdcd
  40be30:	(bad)  
  40be32:	xchg   esp,eax
  40be33:	push   0xffffffef
  40be35:	in     al,dx
  40be36:	pusha  
  40be37:	inc    esi
  40be38:	push   0xffffffec
  40be3a:	popa   
  40be3b:	xor    DWORD PTR [ebx+eax*1-0x2dc037c1],esi
  40be42:	icebp  
  40be43:	mov    bh,ah
  40be45:	in     al,dx
  40be46:	xchg   ebx,eax
  40be47:	pop    esp
  40be48:	(bad)  
  40be49:	in     al,dx
  40be4a:	inc    ecx
  40be4b:	xor    BYTE PTR [edx],dl
  40be4d:	pop    ecx
  40be4e:	aas    
  40be4f:	enter  0xc3e2,0x0
	...
  40be5f:	add    BYTE PTR [eax],al
  40be61:	lods   al,BYTE PTR ds:[esi]
  40be62:	repnz aas 
  40be64:	inc    ecx
  40be65:	ja     0x40bdf0
  40be67:	out    0xec,eax
  40be69:	stos   DWORD PTR es:[edi],eax
  40be6a:	mov    esp,0x22c3e88f
  40be6f:	xchg   edi,eax
  40be70:	in     al,dx
  40be71:	retf   
  40be72:	pop    ebx
  40be73:	mov    gs,esp
  40be75:	or     DWORD PTR [eax-0x71],edi
  40be78:	inc    eax
  40be79:	mov    ecx,0xf8537f22
  40be7e:	pushf  
  40be7f:	xlat   BYTE PTR ds:[ebx]
  40be80:	in     al,dx
  40be81:	imul   edx,esp,0x17
  40be84:	in     eax,dx
  40be85:	jae    0x40be57
  40be87:	dec    edi
  40be88:	jle    0x40be72
  40be8a:	and    bl,BYTE PTR [edi-0x25]
  40be8d:	adc    eax,0xd1ec5746
  40be92:	pop    esp
  40be93:	xchg   esp,eax
  40be94:	in     eax,dx
  40be95:	leave  
  40be96:	and    dl,BYTE PTR [eax+0x56]
  40be99:	push   esi
  40be9a:	enter  0x80e7,0xb0
  40be9e:	lds    eax,FWORD PTR [eax]
  40bea0:	mov    ebx,0x75944f48
  40bea5:	call   0xeb45:0x8ceafe21
  40beac:	jmp    0x40bed0
  40beae:	dec    ecx
  40beaf:	cmp    eax,edi
  40beb1:	setge  BYTE PTR [edx]
  40beb4:	add    bh,ah
  40beb6:	scas   eax,DWORD PTR es:[edi]
  40beb7:	fbld   TBYTE PTR [esi+0x34fdc7fd]
  40bebd:	mov    al,0x24
  40bebf:	(bad)  
  40bec0:	not    BYTE PTR [ebp+0xe96b06]
	...
  40bed2:	add    BYTE PTR [eax],al
  40bed4:	cmp    al,0x78
  40bed6:	push   0x88f4d4
  40bedb:	fimul  WORD PTR [esi+0x64d6ff56]
  40bee1:	sub    dh,BYTE PTR [edx+0x50c84343]
  40bee7:	push   ecx
  40bee8:	push   ecx
  40bee9:	cmp    DWORD PTR [edi],0xb55d25e9
  40beef:	mov    bh,0x24
  40bef1:	and    ebp,ecx
  40bef3:	mov    ecx,DWORD PTR [ecx+0x724300c8]
  40bef9:	int    0xc0
  40befb:	adc    al,0x1b
  40befd:	iret   
  40befe:	rcr    BYTE PTR [edi+edi*1],cl
  40bf01:	int    0xc7
  40bf03:	adc    eax,0x3141b025
  40bf08:	jp     0x40bed2
  40bf0a:	std    
  40bf0b:	hlt    
  40bf0c:	dec    eax
  40bf0d:	xor    BYTE PTR [eax+0x6c],ch
  40bf10:	in     al,0x22
  40bf12:	(bad)  
  40bf13:	xor    al,0xaf
  40bf15:	and    edi,esi
  40bf17:	mov    si,WORD PTR [eax]
  40bf1a:	mov    al,0x64
  40bf1c:	in     al,0x22
  40bf1e:	push   ecx
  40bf1f:	push   esi
  40bf20:	dec    esi
  40bf21:	mov    eax,0x91d0d4fd
  40bf26:	std    
  40bf27:	add    BYTE PTR [ebx-0x39719e3],al
  40bf2d:	sub    al,0xff
  40bf2f:	call   0x400af3
  40bf34:	or     eax,DWORD PTR [edi-0x40]
  40bf37:	inc    BYTE PTR [eax]
	...
  40bf45:	add    BYTE PTR [eax],al
  40bf47:	pop    ecx
  40bf48:	sub    eax,0x6ff3ff4e
  40bf4d:	cld    
  40bf4e:	jmp    FWORD PTR [ecx]
  40bf50:	add    al,0x62
  40bf52:	imul   edx,DWORD PTR [esi-0x763f7c3b],0x79fe2548
  40bf5c:	push   DWORD PTR cs:[ebp-0xd1d6]
  40bf63:	ds jne 0x40bfcd
  40bf66:	add    BYTE PTR [esi+0x2e],dl
  40bf69:	mov    ch,0xb8
  40bf6b:	js     0x40bf9b
  40bf6d:	(bad)  
  40bf6e:	call   0x400a62
  40bf73:	lahf   
  40bf74:	or     ecx,DWORD PTR [esi]
  40bf76:	add    BYTE PTR [ebx],ah
  40bf78:	mov    eax,ds:0x2073ffe9
  40bf7d:	push   DWORD PTR [ebp+0x16]
  40bf80:	cs jne 0x40bf8f
  40bf83:	fst    DWORD PTR [edi+0x2f43e808]
  40bf89:	(bad)  
  40bf8a:	dec    edi
  40bf8c:	or     cl,BYTE PTR [edx]
  40bf8e:	add    BYTE PTR [ebx-0x5f],dl
  40bf91:	jmp    0x5755a219
  40bf96:	inc    DWORD PTR [ebx]
  40bf98:	sbb    esi,esp
  40bf9a:	jae    0x40bffc
  40bf9c:	dec    DWORD PTR cs:[ebx]
  40bf9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfa0:	xchg   edi,eax
  40bfa1:	add    ebx,DWORD PTR [edi-0x61]
  40bfa4:	or     cl,BYTE PTR [edx]
  40bfa6:	add    BYTE PTR [ecx-0x68],bl
  40bfa9:	adc    al,ch
	...
  40bfb7:	add    BYTE PTR [eax],al
  40bfb9:	add    BYTE PTR [edi+eax*2],al
  40bfbc:	(bad)  
  40bfbd:	(bad)  
  40bfbe:	aas    
  40bfbf:	es ret 0x4274
  40bfc3:	jb     0x40bf82
  40bfc5:	shl    DWORD PTR [ebx],0x2f
  40bfc8:	jmp    0x40c03e
  40bfca:	dec    ebx
  40bfcb:	ja     0x40c032
  40bfcd:	mov    WORD PTR [eax+0x32bffed9],?
  40bfd3:	add    bl,BYTE PTR [edx+0x43]
  40bfd6:	imul   DWORD PTR [edi+0x2]
  40bfd9:	call   DWORD PTR [edx]
  40bfdb:	xor    ebx,edx
  40bfdd:	mov    ecx,0xeaeab9bb
  40bfe2:	xor    eax,0xaff0245
  40bfe7:	sbb    ebx,edx
  40bfe9:	lods   eax,DWORD PTR ds:[esi]
  40bfea:	ret    
  40bfeb:	and    eax,ebp
  40bfed:	mov    dl,bh
  40bfef:	and    bl,BYTE PTR [ebx-0x66]
  40bff2:	or     BYTE PTR [eax+0x2],dh
  40bff5:	(bad)  
  40bff6:	jmp    0xe801:0xc39ddd02
  40bffd:	mov    dl,bh
  40bfff:	neg    BYTE PTR [edx+ebp*8+0x4a]
  40c003:	cs add ch,al
  40c006:	ss mov al,0xe7
  40c009:	inc    dh
  40c00b:	in     al,0xe8
  40c00d:	addr16 aas 
  40c00f:	add    DWORD PTR [edx],eax
  40c011:	add    BYTE PTR [edi],dl
  40c013:	outs   dx,BYTE PTR ds:[esi]
  40c014:	test   esi,edi
  40c016:	and    BYTE PTR [ecx-0x4ae70fc3],bl
  40c01c:	in     al,dx
  40c01d:	out    0x0,eax
	...
  40c02b:	add    BYTE PTR [eax],al
  40c02d:	enter  0xe7ac,0xfe
  40c031:	xor    al,0x71
  40c033:	clc    
  40c034:	add    edx,0x31
  40c037:	add    al,BYTE PTR [eax]
  40c039:	clc    
  40c03a:	adc    al,0xea
  40c03c:	addr16 out 0x94,eax
  40c03f:	add    al,0x0
  40c041:	call   0xfb28a65a
  40c046:	enter  0x3cf,0x3f
  40c04a:	dec    ebx
  40c04b:	pusha  
  40c04c:	push   es
  40c04d:	inc    eax
  40c04e:	inc    esi
  40c04f:	mov    WORD PTR [edi+edi*1],es
  40c052:	enter  0x6762,0xc3
  40c056:	dec    eax
  40c057:	pop    es
  40c058:	add    al,0x48
  40c05a:	inc    esp
  40c05b:	pusha  
  40c05c:	add    al,0x3f
  40c05e:	enter  0xa0bf,0x9
  40c062:	mov    edi,esp
  40c064:	push   eax
  40c065:	xchg   edi,eax
  40c066:	jg     0x40bff8
  40c068:	add    edi,DWORD PTR [edi]
  40c06a:	shl    DWORD PTR [edi],cl
  40c06c:	jo     0x40c076
  40c06e:	pop    ds
  40c06f:	popf   
  40c070:	jmp    0x40c092
  40c072:	pop    ds
  40c073:	fild   WORD PTR [ebx]
  40c075:	aas    
  40c076:	pop    ds
  40c077:	jge    0x40c06c
  40c079:	loopne 0x40bfff
  40c07b:	scas   eax,DWORD PTR es:[edi]
  40c07c:	inc    edx
  40c07d:	aas    
  40c07e:	mov    al,0x31
  40c080:	dec    ecx
  40c081:	inc    bh
  40c083:	xchg   esi,eax
  40c084:	(bad)  
  40c086:	scas   eax,DWORD PTR es:[edi]
  40c087:	out    0x3,eax
  40c089:	inc    esp
  40c08a:	or     BYTE PTR [esp+ecx*2+0x50],dl
  40c08e:	xchg   ebp,eax
  40c08f:	iret   
  40c090:	pop    ebp
	...
  40c09d:	add    BYTE PTR [eax],al
  40c09f:	add    BYTE PTR [esi],bh
  40c0a1:	mov    al,0x7e
  40c0a3:	dec    eax
  40c0a4:	inc    bh
  40c0a6:	push   ds
  40c0a7:	fdiv   QWORD PTR [eax-0x43fc1850]
  40c0ad:	pop    ds
  40c0ae:	jmp    0x35603321
  40c0b3:	hlt    
  40c0b4:	and    DWORD PTR [ebp+0x4b1adb9b],edx
  40c0ba:	lahf   
  40c0bb:	call   0xdcf91440
  40c0c0:	aaa    
  40c0c1:	dec    eax
  40c0c2:	rcr    BYTE PTR [eax],cl
  40c0c4:	mov    cl,bl
  40c0c6:	lods   eax,DWORD PTR ds:[esi]
  40c0c7:	add    eax,0xd5f28a9b
  40c0cc:	ins    BYTE PTR es:[edi],dx
  40c0cd:	lds    eax,FWORD PTR [eax]
  40c0cf:	imul   ebx,DWORD PTR [edx],0xd77f73c8
  40c0d5:	xchg   ebx,eax
  40c0d6:	adc    BYTE PTR [ecx+0x510893e7],bh
  40c0dc:	call   FWORD PTR [esi+edi*8]
  40c0df:	push   esi
  40c0e0:	in     al,0xd5
  40c0e2:	or     BYTE PTR [esi-0x29],0x31
  40c0e6:	cmovbe ebp,DWORD PTR [ecx]
  40c0e9:	mov    eax,0x1dacb4fd
  40c0ee:	je     0x40c0d1
  40c0f0:	test   BYTE PTR [eax-0x1],bl
  40c0f3:	cs xchg edi,eax
  40c0f5:	and    dh,BYTE PTR [edx]
  40c0f7:	sub    ebp,esp
  40c0f9:	sbb    eax,0x18a71efe
  40c0fe:	scas   eax,DWORD PTR es:[edi]
  40c0ff:	sar    DWORD PTR [edi],1
  40c101:	iret   
  40c102:	add    DWORD PTR [ecx+0x0],0x0
	...
  40c111:	add    BYTE PTR [eax],al
  40c113:	xchg   edi,eax
  40c114:	sbb    eax,0x13e906fe
  40c119:	jmp    0xfe5e7e0a
  40c11e:	neg    dl
  40c120:	pop    ss
  40c121:	jmp    0xfe5e7e0a
  40c126:	out    0xce,al
  40c128:	pop    ds
  40c129:	jmp    0xfe5f9a0a
  40c12e:	(bad)  
  40c12f:	into   
  40c130:	sbb    ebp,ecx
  40c132:	aam    0xd8
  40c134:	push   ds
  40c135:	inc    dh
  40c137:	scas   al,BYTE PTR es:[edi]
  40c138:	mov    eax,0x1f3734fd
  40c13d:	je     0x40c120
  40c13f:	add    al,0x98
  40c141:	(bad)  
  40c142:	scas   al,BYTE PTR es:[edi]
  40c143:	sbb    BYTE PTR [edi-0x39],bh
  40c146:	stos   DWORD PTR es:[edi],eax
  40c147:	pop    ss
  40c148:	push   ds
  40c149:	push   ebp
  40c14a:	jb     0x40c143
  40c14c:	dec    edx
  40c14d:	lds    eax,FWORD PTR [ecx-0x71eb6ae0]
  40c153:	mov    ?,WORD PTR [eax+0x7c7000e8]
  40c159:	add    BYTE PTR [eax],al
  40c15b:	in     eax,dx
  40c15c:	or     DWORD PTR [edx+0x57],esi
  40c15f:	cmp    al,0xc4
  40c161:	push   0x8331bf
  40c166:	(bad)  
  40c167:	sti    
  40c168:	mov    ecx,0x1e275fd
  40c16d:	rol    DWORD PTR [edx-0x3ff4da8f],cl
  40c173:	jmp    0x0:0x505084
	...
  40c186:	push   cs
  40c187:	dec    edx
  40c188:	mov    edi,edi
  40c18a:	jno    0x40c1ad
  40c18c:	mov    esi,0x449ca774
  40c191:	call   0xfb299112
  40c196:	and    eax,0x660bff25
  40c19b:	cwde   
  40c19c:	sbb    edi,edi
  40c19e:	stos   DWORD PTR es:[edi],eax
  40c19f:	rcl    DWORD PTR [eax-0x18],1
  40c1a2:	push   ds
  40c1a3:	dec    ecx
  40c1a4:	(bad)  
  40c1a5:	call   esi
  40c1a7:	es jne 0x40c192
  40c1aa:	(bad)  
  40c1ab:	es jne 0x40c1b6
  40c1ae:	ds sar esi,0xff
  40c1b2:	push   ecx
  40c1b3:	add    DWORD PTR [ebx-0xd99e81],eax
  40c1b9:	jne    0x40c229
  40c1bb:	add    DWORD PTR [ebx+0x7f],edi
  40c1be:	jno    0x40c1e6
  40c1c0:	out    0x76,al
  40c1c2:	icebp  
  40c1c3:	and    al,0xff
  40c1c5:	push   0xfffe2126
  40c1ca:	push   cs
  40c1cb:	dec    edx
  40c1cc:	jg     0x40c1cd
  40c1ce:	icebp  
  40c1cf:	fwait
  40c1d0:	inc    esp
  40c1d1:	clc    
  40c1d2:	or     DWORD PTR [eax-0x681eaf04],0x10
  40c1d9:	jmp    FWORD PTR [ebx]
  40c1db:	and    dh,ah
  40c1dd:	fstp   TBYTE PTR [edi]
  40c1df:	into   
  40c1e0:	add    al,0x0
  40c1e2:	xor    al,0x6f
  40c1e4:	jno    0x40c256
  40c1e6:	add    ah,ch
  40c1e8:	hlt    
  40c1e9:	inc    DWORD PTR [eax]
	...
  40c1f7:	add    BYTE PTR [eax],al
  40c1f9:	lock cs add al,bh
  40c1fd:	sbb    BYTE PTR [ebx+0x2f3f06e6],0x58
  40c204:	add    BYTE PTR [ebp+0x2f],ah
  40c207:	pop    eax
  40c208:	add    BYTE PTR [ebp+0x2f],ah
  40c20b:	jns    0x40c251
  40c20d:	rcr    DWORD PTR [esi-0x19],cl
  40c210:	je     0x40c1d9
  40c212:	lea    esi,[eax-0x10]
  40c215:	mov    eax,0xeae7e65b
  40c21a:	add    eax,0xef340002
  40c21f:	ins    DWORD PTR es:[edi],dx
  40c220:	add    dl,BYTE PTR [eax+ebx*1+0x7007435a]
  40c227:	add    bh,bh
  40c229:	or     bl,BYTE PTR [edi]
  40c22b:	fidivr DWORD PTR [ecx-0x1194a43]
  40c231:	or     dh,BYTE PTR [edi-0x4dbd17af]
  40c237:	out    0xfe,al
  40c239:	(bad)  
  40c23a:	arpl   si,dx
  40c23c:	(bad)  
  40c23d:	repnz mul dh
  40c240:	je     0x40c28d
  40c242:	outs   dx,BYTE PTR cs:[esi]
  40c244:	in     al,dx
  40c245:	pop    eax
  40c246:	jnp    0x40c240
  40c248:	dec    dl
  40c24a:	push   ss
  40c24b:	ficomp DWORD PTR [eax]
  40c24d:	dec    eax
  40c24e:	cmc    
  40c24f:	jecxz  0x40c24f
  40c251:	retf   0xdd5a
  40c254:	repnz mov ecx,0x7afee402
  40c25a:	popa   
  40c25b:	fcomp  DWORD PTR [esi+0x0]
	...
  40c269:	add    BYTE PTR [eax],al
  40c26b:	add    BYTE PTR [eax],ch
  40c26d:	fucomp st(0)
  40c26f:	out    0x9e,eax
  40c271:	add    BYTE PTR [eax+eax*1],0x18
  40c275:	leave  
  40c276:	sbb    al,0xec
  40c278:	sbb    bl,bh
  40c27a:	sbb    eax,0xaa1209e5
  40c27f:	adc    BYTE PTR [edi],bh
  40c281:	jne    0x40c2e5
  40c283:	fdivr  DWORD PTR [edi-0xe1983fc]
  40c289:	sbb    edx,DWORD PTR [edx]
  40c28b:	add    al,0x55
  40c28d:	in     al,0x76
  40c28f:	outs   dx,DWORD PTR ds:[esi]
  40c290:	aaa    
  40c291:	xor    BYTE PTR [ebp+0x69],ch
  40c294:	fcomp  DWORD PTR [ebx]
  40c296:	jno    0x40c2d7
  40c298:	rol    DWORD PTR [ebx],cl
  40c29a:	in     eax,0x91
  40c29c:	imul   ecx,DWORD PTR [ecx-0x37c0fc19],0x13c376e7
  40c2a6:	inc    esi
  40c2a7:	in     eax,0xb1
  40c2a9:	js     0x40c27a
  40c2ab:	(bad)  
  40c2ac:	aas    
  40c2ad:	enter  0xdbe7,0xea
  40c2b1:	mov    ds:0xa92703e7,al
  40c2b6:	xchg   DWORD PTR [edx+0x3f],eax
  40c2b9:	mov    al,0xc0
  40c2bb:	arpl   si,di
  40c2bd:	(bad)  
  40c2be:	jg     0x40c330
  40c2c0:	pop    ds
  40c2c1:	mov    edi,esp
  40c2c3:	in     al,0x33
  40c2c5:	mov    ds:0x1b3f42af,eax
  40c2ca:	jne    0x40c2c7
  40c2cc:	pusha  
  40c2cd:	jo     0x40c2c5
  40c2cf:	in     al,0x0
	...
  40c2dd:	add    BYTE PTR [eax],al
  40c2df:	popa   
  40c2e0:	mov    al,0x88
  40c2e2:	arpl   si,di
  40c2e4:	(bad)  
  40c2e5:	dec    edi
  40c2e6:	dec    ebx
  40c2e7:	fisttp WORD PTR [eax-0x5833a419]
  40c2ed:	sub    BYTE PTR [edi+edx*8],al
  40c2f0:	(bad)
  40c2f3:	mov    edi,0x18fc3d1a
  40c2f8:	dec    esp
  40c2f9:	mov    esi,0x14d29e4
  40c2fe:	ins    BYTE PTR es:[edi],dx
  40c2ff:	adc    ebx,DWORD PTR ds:0x306caefe
  40c305:	pop    esi
  40c306:	(bad)  
  40c308:	enter  0x14fd,0x17
  40c30c:	sbb    dh,BYTE PTR [ecx+eiz*8-0x1c]
  40c310:	repz jns 0x40c2a1
  40c313:	jecxz  0x40c324
  40c315:	ret    
  40c316:	in     eax,dx
  40c317:	cmp    al,0x75
  40c319:	mov    DWORD PTR [ebp+0x77f506bd],ecx
  40c31f:	fistp  DWORD PTR [ecx]
  40c321:	imul   ebp,ecx,0x76
  40c324:	in     eax,0xfd
  40c326:	(bad)  
  40c328:	and    dh,BYTE PTR [edi-0x1e]
  40c32b:	jecxz  0x40c346
  40c32d:	mov    BYTE PTR [eax+ebx*8+0x30411ab0],ch
  40c334:	dec    ecx
  40c335:	inc    BYTE PTR [esi-0x49]
  40c338:	pop    edx
  40c339:	jne    0x40c340
  40c33b:	or     ebp,DWORD PTR [ecx+0x783ca860]
  40c341:	call   0x40c417
	...
  40c352:	mov    esi,0xf4b9fe19
  40c357:	(bad)  
  40c358:	adc    BYTE PTR [esi],cl
  40c35a:	loop   0x40c2fe
  40c35c:	mov    ds:0x50c7fd89,eax
  40c361:	push   cs
  40c362:	jmp    0xd1f3ac36
  40c367:	sbb    esi,edi
  40c369:	adc    DWORD PTR [eax-0x64],esi
  40c36c:	std    
  40c36d:	mul    BYTE PTR [ebx+eax*8-0x3802716e]
  40c374:	(bad)  
  40c375:	call   0x64cc8bb6
  40c37a:	fs sbb al,0xfe
  40c37d:	(bad)  
  40c37e:	or     esi,DWORD PTR [eax-0x37c317fc]
  40c384:	call   0xf0e989
  40c389:	add    BYTE PTR [esi+0x164160a3],cl
  40c38f:	scas   al,BYTE PTR es:[edi]
  40c390:	push   edi
  40c391:	pusha  
  40c392:	les    ebp,FWORD PTR [bx+si+0x73]
  40c396:	inc    esi
  40c397:	add    DWORD PTR [eax],0xffffffff
  40c39a:	repz scas al,BYTE PTR es:[edi]
  40c39c:	dec    eax
  40c39d:	inc    ecx
  40c39e:	push   ss
  40c39f:	daa    
  40c3a0:	jne    0x40c3aa
  40c3a2:	mov    esi,0xb9fffcf2
  40c3a7:	lods   al,BYTE PTR ds:[esi]
  40c3a8:	pop    edi
  40c3a9:	pusha  
  40c3aa:	pop    ss
  40c3ab:	les    ebp,FWORD PTR [eax+0x59]
  40c3ae:	add    DWORD PTR ss:[eax],0x68
  40c3b2:	aad    0xa5
  40c3b4:	aas    
	...
  40c3c5:	out    dx,al
  40c3c6:	ret    
  40c3c7:	add    BYTE PTR [eax],al
  40c3c9:	push   esi
  40c3ca:	and    eax,0x5e7e0875
  40c3cf:	std    
  40c3d0:	dec    DWORD PTR [ecx]
  40c3d2:	aaa    
  40c3d3:	test   edi,esi
  40c3d5:	clc    
  40c3d6:	and    al,0xff
  40c3d8:	push   eax
  40c3d9:	push   cs
  40c3da:	imul   esp,DWORD PTR [ebp+0x0],0xffffff96
  40c3de:	es jne 0x40c3dd
  40c3e1:	imul   edi,DWORD PTR [edi+0x8],0xfd7939e8
  40c3e8:	dec    DWORD PTR [edi+0x2]
  40c3eb:	add    al,BYTE PTR [eax]
  40c3ed:	ret    
  40c3ee:	dec    edx
  40c3ef:	jmp    0x39ff:0xfc002281
  40c3f6:	stos   BYTE PTR es:[edi],al
  40c3f7:	add    BYTE PTR [edx-0x80],ch
  40c3fa:	es jne 0x40c405
  40c3fd:	ds add al,0x78
  40c400:	jmp    FWORD PTR [ecx+0x4c]
  40c403:	inc    ebp
  40c404:	cld    
  40c405:	mov    eax,ds:0x175f92d0
  40c40a:	les    eax,FWORD PTR [eax]
  40c40c:	add    BYTE PTR [edi],bh
  40c40e:	das    
  40c40f:	add    cl,BYTE PTR [ebp-0x1200e3e]
  40c415:	xor    BYTE PTR [edi+0x2f3e046c],bh
  40c41b:	add    ch,al
  40c41d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c41e:	mov    WORD PTR [eax+eax*1],es
  40c421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c422:	outs   dx,DWORD PTR ds:[esi]
  40c423:	bound  eax,QWORD PTR [ecx+0x3f]
  40c426:	mov    bh,0x9a
  40c428:	pop    edi
	...
  40c435:	add    BYTE PTR [eax],al
  40c437:	add    BYTE PTR [esi+0x2f],bh
  40c43a:	push   0x73
  40c43c:	lahf   
  40c43d:	lock add al,0xff
  40c440:	xor    al,dl
  40c442:	dec    esp
  40c443:	inc    ecx
  40c444:	aas    
  40c445:	inc    edx
  40c446:	pop    ecx
  40c447:	or     bh,dl
  40c449:	mov    ch,0xdf
  40c44b:	(bad)  
  40c44c:	loopne 0x40c414
  40c44e:	les    ebx,FWORD PTR [edi+0x7e]
  40c451:	das    
  40c452:	push   0xffffffb6
  40c454:	pop    edi
  40c455:	jo     0x40c459
  40c457:	push   0x450f4c
  40c45c:	push   edi
  40c45d:	sub    eax,0x89bf0002
  40c462:	pop    eax
  40c463:	or     BYTE PTR [edi-0x57011eaf],ah
  40c469:	stos   DWORD PTR es:[edi],eax
  40c46a:	mov    dh,dh
  40c46c:	mov    eax,ds:0xa74fe2d1
  40c471:	int3   
  40c472:	add    BYTE PTR [bx],bh
  40c475:	loop   0x40c4cf
  40c477:	cld    
  40c478:	mov    BYTE PTR [ebx],dh
  40c47a:	or     ch,al
  40c47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c47d:	xor    al,0xe3
  40c47f:	inc    BYTE PTR [esi+0xa0005ec]
  40c485:	xchg   esi,eax
  40c486:	in     eax,dx
  40c487:	add    BYTE PTR [ebx+0x60fee112],0x44
  40c48e:	add    ch,BYTE PTR [edx+0x20]
  40c491:	sub    dl,BYTE PTR [esi+0x8]
  40c494:	addr16 (bad) 
  40c496:	and    BYTE PTR [esi+0x48],bl
  40c499:	sbb    BYTE PTR [ecx+0x47],dh
	...
  40c4a8:	add    BYTE PTR [eax],al
  40c4aa:	add    BYTE PTR [ebx+0x0],al
  40c4ad:	in     eax,dx
  40c4ae:	jne    0x40c449
  40c4b0:	mov    edi,esp
  40c4b2:	add    edi,DWORD PTR [edi]
  40c4b4:	enter  0x8ee7,0xc3
  40c4b8:	pop    ds
  40c4b9:	mov    esi,0x3f7921e1
  40c4be:	or     BYTE PTR [esi],bh
  40c4c0:	enter  0xebe7,0xe
  40c4c4:	lods   eax,DWORD PTR ds:[esi]
  40c4c5:	out    0x3,eax
  40c4c7:	xchg   edi,eax
  40c4c8:	repnz pop es
  40c4ca:	inc    ebx
  40c4cb:	aas    
  40c4cc:	mov    al,ds:0xc87e64bb
  40c4d1:	call   DWORD PTR [edi+ebx*2-0x77]
  40c4d5:	out    0xe0,eax
  40c4d7:	xor    ebp,DWORD PTR [edi+0x173f432f]
  40c4dd:	std    
  40c4de:	or     esp,edi
  40c4e0:	sub    al,0x6c
  40c4e2:	loope  0x40c4b5
  40c4e4:	mov    al,ds:0xc87e6441
  40c4e9:	iret   
  40c4ea:	mov    bh,0x60
  40c4ec:	mov    edi,esp
  40c4ee:	imul   ebp,DWORD PTR [eax+ebp*4],0xffffffa8
  40c4f2:	add    esp,DWORD PTR [edi]
  40c4f4:	retf   0x3e7
  40c4f7:	mov    edi,0x970bb517
  40c4fc:	add    BYTE PTR [ecx+eiz*8],dh
  40c4ff:	cdq    
  40c500:	inc    ebp
  40c501:	fst    DWORD PTR gs:[edx-0x68cbd8e9]
  40c508:	xor    eax,DWORD PTR [ebx+eax*1-0x2062e8c1]
	...
  40c51b:	add    BYTE PTR [eax],al
  40c51d:	add    BYTE PTR [ecx-0x63],bh
  40c520:	fucomip st,st(3)
  40c522:	dec    edi
  40c523:	xchg   edx,eax
  40c524:	push   es
  40c525:	loope  0x40c59e
  40c527:	or     ah,ah
  40c529:	add    ecx,DWORD PTR [edx]
  40c52b:	inc    ebx
  40c52c:	add    DWORD PTR ds:0xeff50bbc,eax
  40c532:	pop    edi
  40c533:	push   ss
  40c534:	imul   ebp,ecx,0xffffffda
  40c537:	(bad)  
  40c539:	push   esp
  40c53a:	xor    esp,DWORD PTR [eax]
  40c53c:	mov    bl,0x50
  40c53e:	push   ds
  40c53f:	push   ss
  40c540:	mov    BYTE PTR [edi+ebx*1],ah
  40c543:	push   cs
  40c544:	add    al,0x5b
  40c546:	jg     0x40c4d1
  40c548:	add    cl,ch
  40c54a:	cmp    al,0xc8
  40c54c:	add    BYTE PTR [ecx+eax*8+0x1d],ah
  40c550:	jmp    FWORD PTR [esi-0x129778e1]
  40c556:	cmp    eax,0x939100c8
  40c55b:	lods   al,BYTE PTR ds:[esi]
  40c55c:	add    cl,ch
  40c55e:	sbb    ah,BYTE PTR fs:[ecx+0x28]
  40c562:	cmp    esp,DWORD PTR [eax-0x3783f616]
  40c568:	push   0x895cfa
  40c56d:	jbe    0x40c5a0
  40c56f:	scas   eax,DWORD PTR es:[edi]
  40c570:	dec    eax
  40c571:	sub    BYTE PTR [ebx],bh
  40c573:	pop    ss
  40c574:	je     0x40c567
  40c576:	aam    0x73
  40c578:	cld    
  40c579:	pop    esi
  40c57a:	fild   QWORD PTR [esi-0x3802360e]
  40c580:	push   0x43
	...
  40c591:	sbb    al,0x89
  40c593:	add    cl,dl
  40c595:	adc    ebp,DWORD PTR [eax-0x35eb16c1]
  40c59b:	add    cl,ch
  40c59d:	mov    esp,0xa4e17415
  40c5a2:	xchg   esp,edi
  40c5a4:	es lahf 
  40c5a6:	inc    ebx
  40c5a7:	test   BYTE PTR [esi],dl
  40c5a9:	sahf   
  40c5aa:	adc    eax,0xba64b9fe
  40c5af:	fs jmp 0xb4dcf1
  40c5b5:	inc    edx
  40c5b6:	sub    BYTE PTR [ebp+0x8],dh
  40c5b9:	dec    esi
  40c5ba:	inc    ebp
  40c5bb:	jns    0x40c5bc
  40c5bd:	push   ecx
  40c5be:	add    al,al
  40c5c0:	add    al,0x66
  40c5c2:	fisttp QWORD PTR [ecx-0x6002a14]
  40c5c8:	push   0x56
  40c5ca:	mov    al,ds:0xc49bff27
  40c5cf:	call   0xff365502
  40c5d4:	mov    DWORD PTR [ebx+0x28],ebx
  40c5d7:	push   0x611d8e00
  40c5dc:	inc    ecx
  40c5dd:	mov    es:0xcc676103,al
  40c5e3:	std    
  40c5e4:	xor    eax,0x3f8439
  40c5e9:	scas   al,BYTE PTR es:[edi]
  40c5ea:	lock jnp 0x40c5ec
  40c5ed:	rol    ecx,1
  40c5ef:	shl    BYTE PTR [edi+ebp*8-0x27],0x68
	...
  40c604:	(bad)  
  40c605:	es mov esp,0x3facf968
  40c60b:	add    BYTE PTR [esi],dh
  40c60d:	cmc    
  40c60e:	je     0x40c618
  40c610:	mov    esi,0x61ff9ff6
  40c615:	and    al,0xbf
  40c617:	jnp    0x40c67a
  40c619:	cmc    
  40c61a:	add    BYTE PTR [bp+0x13],bh
  40c61e:	popa   
  40c61f:	inc    ecx
  40c620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c621:	mov    eax,ds:0xc9d76103
  40c626:	std    
  40c627:	xor    eax,0x3f8179
  40c62c:	dec    BYTE PTR [ebx]
  40c62e:	jl     0x40c62f
  40c630:	popa   
  40c631:	rol    eax,0x74
  40c634:	aas    
  40c635:	fsubr  QWORD PTR [eax+0x0]
  40c638:	xchg   esi,eax
  40c639:	es mov esp,0x65063f68
  40c63f:	inc    ecx
  40c640:	aas    
  40c641:	dec    edi
  40c642:	fbstp  TBYTE PTR [edi+esi*1-0x49]
  40c646:	retf   0x60a1
  40c649:	push   ss
  40c64a:	jmp    0xcafe:0xdf1dd48a
  40c651:	and    bl,bh
  40c653:	je     0x40c68c
  40c655:	neg    ebx
  40c657:	ja     0x40c699
  40c659:	test   ah,0xc1
  40c65c:	inc    ebx
  40c65d:	pop    ds
  40c65e:	cmp    DWORD PTR [ebx-0x43a5ddd],ecx
  40c664:	xchg   ecx,eax
  40c665:	mov    dh,0x6a
	...
  40c677:	xchg   ebp,eax
  40c678:	mov    ecx,0x74774dd
  40c67d:	mov    ds:0x8d661077,al
  40c682:	inc    esp
  40c683:	or     edi,DWORD PTR [ecx-0x4a3617fc]
  40c689:	(bad)  
  40c68b:	inc    esp
  40c68c:	pop    edi
  40c68d:	push   esi
  40c68e:	sbb    DWORD PTR [edi-0x27fffb39],ecx
  40c694:	mov    WORD PTR [ecx+0x34],gs
  40c697:	pop    esi
  40c698:	loopne 0x40c69e
  40c69a:	push   eax
  40c69b:	fcom   DWORD PTR [ebx]
  40c69d:	or     ch,al
  40c69f:	mov    edi,0xd7fede80
  40c6a4:	pop    edi
  40c6a5:	pop    ebx
  40c6a6:	inc    eax
  40c6a8:	cdq    
  40c6a9:	sbb    bl,ch
  40c6ab:	add    BYTE PTR [eax+0x2],ah
  40c6ae:	mov    esi,DWORD PTR [edx-0x2a]
  40c6b1:	inc    esi
  40c6b2:	inc    ecx
  40c6b3:	aas    
  40c6b4:	lahf   
  40c6b5:	push   ds
  40c6b6:	add    BYTE PTR [ebx],ch
  40c6b8:	ins    BYTE PTR es:[edi],dx
  40c6b9:	push   0x41
  40c6bb:	push   ds
  40c6bc:	pusha  
  40c6bd:	add    dl,BYTE PTR [edi-0x59]
  40c6c0:	and    BYTE PTR [edx+0x0],0x3f
  40c6c4:	enter  0xc3f2,0xc
  40c6c8:	mov    ch,0xb5
  40c6ca:	jmp    0x40c737
  40c6cc:	dec    ebx
  40c6cd:	pop    ss
  40c6ce:	fiadd  WORD PTR [eax]
  40c6d0:	mov    al,ds:0x555803e7
  40c6d5:	nop
  40c6d6:	pop    ss
  40c6d7:	fiadd  WORD PTR [esi+0x33e7]
	...
  40c6e9:	add    BYTE PTR [eax-0x66],bl
  40c6ec:	fucomip st,st(3)
  40c6ee:	jmp    FWORD PTR [ecx-0x11]
  40c6f1:	frstor [eax-0x37]
  40c6f4:	(bad)  
  40c6f5:	fld    QWORD PTR [ecx+0x20]
  40c6f8:	jmp    0xe8138642
  40c6fd:	push   esi
  40c6fe:	xor    eax,0xff11cb8b
  40c703:	push   ecx
  40c704:	(bad)  
  40c705:	frstor [ecx]
  40c707:	adc    al,0xba
  40c709:	scas   al,BYTE PTR es:[edi]
  40c70a:	push   eax
  40c70b:	retf   
  40c70c:	cmp    al,0x99
  40c70e:	adc    DWORD PTR [esi-0x3f6c2255],ebx
  40c714:	(bad)  
  40c715:	xchg   DWORD PTR ds:[ebx],edx
  40c718:	lahf   
  40c719:	cmp    eax,0x8aa0199
  40c71e:	aas    
  40c71f:	jge    0x40c783
  40c721:	lock mov ebp,0x8836840c
  40c727:	sahf   
  40c728:	out    0x69,eax
  40c72a:	and    al,0x13
  40c72c:	std    
  40c72d:	or     esp,edi
  40c72f:	adc    dh,bh
  40c731:	fmul   st(1),st
  40c733:	inc    ecx
  40c734:	lods   eax,DWORD PTR ds:[esi]
  40c735:	fbstp  TBYTE PTR [ebp-0x1baad23]
  40c73b:	(bad)  
  40c73c:	bound  ebx,QWORD PTR [edi]
  40c73e:	mov    al,ds:0xbf03a88b
  40c743:	shl    edi,cl
  40c745:	push   edi
  40c746:	cli    
  40c747:	lahf   
  40c748:	xchg   ebx,eax
  40c749:	(bad)  
  40c74a:	inc    bh
  40c74c:	add    BYTE PTR [esi+0x0],bl
	...
  40c75a:	add    BYTE PTR [eax],al
  40c75c:	add    BYTE PTR [edi+eiz*4-0x40c3169f],ah
  40c763:	rcr    BYTE PTR [ebp-0x7117827d],0xc0
  40c76a:	adc    bh,dh
  40c76c:	mov    ecx,0xfe00c7e4
  40c771:	retf   0x46ab
  40c774:	mov    ch,bh
  40c776:	(bad)  
  40c777:	push   eax
  40c778:	(bad)  
  40c779:	icebp  
  40c77a:	mov    edi,0x129c2ae8
  40c77f:	inc    BYTE PTR [ecx]
  40c781:	mov    bh,0x91
  40c783:	std    
  40c784:	out    0x57,al
  40c786:	enter  0x6946,0x5a
  40c78a:	enter  0xd373,0x7a
  40c78e:	adc    al,0x32
  40c790:	test   eax,0xc6fe11c5
  40c795:	add    ebx,DWORD PTR [ecx]
  40c797:	scas   eax,DWORD PTR es:[edi]
  40c798:	add    DWORD PTR [edx-0x63],eax
  40c79b:	mov    ecx,0xfe1469b6
  40c7a0:	xor    al,0x3b
  40c7a2:	and    cl,ah
  40c7a4:	push   ds
  40c7a5:	loop   0x40c7b8
  40c7a7:	pop    esi
  40c7a8:	aas    
  40c7a9:	add    al,0x9
  40c7ab:	add    eax,0xed3f29e9
  40c7b0:	push   0x0
  40c7b2:	packssdw mm5,mm1
  40c7b5:	push   esi
  40c7b6:	in     al,0xfd
  40c7b8:	hlt    
  40c7b9:	inc    esp
  40c7ba:	and    BYTE PTR [ebx-0x77ee0c02],al
  40c7c0:	and    al,0x0
	...
  40c7ce:	add    BYTE PTR [eax],al
  40c7d0:	fbld   TBYTE PTR [eax-0x5fc32d00]
  40c7d6:	fs enter 0xc7fd,0x68
  40c7db:	jmp    0x41c1901c
  40c7e0:	clc    
  40c7e1:	xchg   esp,eax
  40c7e2:	std    
  40c7e3:	add    cl,bh
  40c7e5:	mov    edi,0xd67974c0
  40c7ea:	call   0xff34edeb
  40c7ef:	push   eax
  40c7f0:	jle    0x40c7b8
  40c7f2:	add    bh,ch
  40c7f4:	sbb    BYTE PTR [edi-0x39589ea7],bl
  40c7fa:	push   eax
  40c7fb:	call   ebx
  40c7fd:	mov    esi,0xf3f750e8
  40c802:	(bad)  
  40c803:	call   0x3e388f
  40c808:	pop    ecx
  40c809:	jl     0x40c807
  40c80b:	call   ebx
  40c80d:	mov    esi,0xf3d184e8
  40c812:	dec    cl
  40c814:	xchg   esp,eax
  40c815:	mov    DWORD PTR [eax],0x8320ad55
  40c81b:	les    ecx,FWORD PTR [edx]
  40c81d:	mov    ds:0xef2b6a00,eax
  40c822:	je     0x40c82c
  40c824:	push   cs
  40c825:	in     eax,0x75
  40c827:	(bad)  
  40c828:	fld    DWORD PTR [ebx+0x45]
  40c82b:	cld    
  40c82c:	jle    0x40c7fa
  40c82e:	add    bh,ch
  40c830:	cwde   
  40c831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c832:	mov    al,ds:0x61
	...
  40c843:	push   edi
  40c844:	int3   
  40c845:	push   0x8b47ac
  40c84a:	call   DWORD PTR [ebx-0x3c]
  40c84d:	call   0xff2e3fad
  40c852:	jmp    ebx
  40c854:	stc    
  40c855:	(bad)  
  40c856:	jne    0x40c826
  40c858:	sbb    eax,0xed497749
  40c85d:	enter  0xe2c2,0xc5
  40c861:	push   ebx
  40c862:	mov    ebp,DWORD PTR [edx+0x49]
  40c865:	ret    0x8cfc
  40c868:	lds    ebp,FWORD PTR [edx+0x2e]
  40c86b:	aas    
  40c86c:	jp     0x40c8bd
  40c86e:	or     BYTE PTR [edi-0x5f00ad2c],dl
  40c874:	cwde   
  40c875:	aas    
  40c876:	cld    
  40c877:	daa    
  40c878:	pop    ds
  40c879:	add    ch,bh
  40c87b:	rol    DWORD PTR [edi],1
  40c87d:	xchg   ebx,eax
  40c87e:	pusha  
  40c87f:	(bad)  
  40c880:	push   ds
  40c881:	push   0xffffffcc
  40c883:	push   ds
  40c884:	pusha  
  40c885:	add    bh,bh
  40c887:	repnz push ss
  40c889:	jmp    0x3f67:0xd9ba9e1f
  40c890:	pop    ds
  40c891:	jmp    0x40c850
  40c893:	xlat   BYTE PTR ds:[ebx]
  40c894:	fsub   QWORD PTR [ebx+0x41]
  40c897:	aas    
  40c898:	aaa    
  40c899:	(bad)  
  40c89a:	pusha  
  40c89b:	(bad)  
  40c89c:	push   ds
  40c89d:	(bad)  [edi+esi*1-0x39]
  40c8a1:	or     esp,DWORD PTR [ecx+0x74db2a40]
	...
  40c8b3:	add    BYTE PTR [eax],al
  40c8b5:	add    BYTE PTR [ebx],bh
  40c8b7:	repnz push eax
  40c8b9:	or     BYTE PTR [edi],ah
  40c8bb:	repnz dec edi
  40c8bd:	jmp    FWORD PTR [eax]
  40c8bf:	push   0xb43f03c4
  40c8c4:	(bad)  
  40c8c5:	jmp    0x40c883
  40c8c7:	push   0xffffffd6
  40c8c9:	mov    ch,BYTE PTR [edx-0x11]
  40c8cc:	mov    ss,WORD PTR [ecx]
  40c8ce:	xchg   ebp,eax
  40c8cf:	pop    ds
  40c8d0:	mov    DWORD PTR [ebx+eax*1-0x31],eax
  40c8d4:	fnstenv [edi+eax*2-0x4b]
  40c8d8:	add    al,0xff
  40c8da:	push   0xf
  40c8dc:	fist   DWORD PTR [ecx+0x4b]
  40c8df:	lods   al,BYTE PTR ds:[esi]
  40c8e0:	shl    DWORD PTR [eax+ebx*1-0x6a],0x30
  40c8e5:	cld    
  40c8e6:	scas   eax,DWORD PTR es:[edi]
  40c8e7:	mov    ah,0x4
  40c8e9:	push   0x3f
  40c8eb:	(bad)  
  40c8ec:	fld    DWORD PTR [edx]
  40c8ee:	aas    
  40c8ef:	pop    ds
  40c8f0:	(bad)  [ebx+esi*1-0x38]
  40c8f4:	rcr    edx,1
  40c8f6:	mov    ecx,0x3f6de395
  40c8fb:	sahf   
  40c8fc:	out    0xeb,eax
  40c8fe:	jp     0x40c8a7
  40c900:	out    0x3,eax
  40c902:	iret   
  40c903:	adc    BYTE PTR [ebp-0x36b55f29],bh
  40c909:	add    edi,DWORD PTR [edi]
  40c90b:	jmp    FWORD PTR [ecx]
  40c90d:	pop    es
  40c90e:	aas    
  40c90f:	jnp    0x40c973
  40c911:	out    0xbd,eax
  40c913:	or     esp,DWORD PTR [esi+ecx*4]
  40c916:	adc    edi,DWORD PTR [edx+esi*2+0xf5]
	...
  40c929:	out    0xc7,al
  40c92b:	fs inc eax
  40c92d:	imul   esi,DWORD PTR [edi+0xe],0x50
  40c931:	xor    edx,DWORD PTR [ecx]
  40c933:	jge    0x40c940
  40c935:	in     eax,0xc7
  40c937:	dec    BYTE PTR [edi+0x2b]
  40c93a:	adc    DWORD PTR [edx+0x7507c22b],ebx
  40c940:	and    dh,BYTE PTR [edx+edi*2-0x37598b1d]
  40c947:	push   ecx
  40c948:	add    al,0xa7
  40c94a:	por    mm0,QWORD PTR [ebx]
  40c94d:	aas    
  40c94e:	andnps xmm6,xmm4
  40c951:	xchg   esi,eax
  40c952:	(bad)  
  40c954:	push   esi
  40c955:	inc    ebx
  40c956:	mov    ds:0x203f6de7,al
  40c95b:	push   0x57c83f64
  40c960:	(bad)  [ebx+0x5e11900c]
  40c966:	enter  0xcae7,0xfe
  40c96a:	mov    eax,0x1cb42ee7
  40c96f:	imul   eax,eax,0xffffffa8
  40c972:	ja     0x40c9de
  40c974:	push   edi
  40c975:	aaa    
  40c976:	enter  0xfef4,0x71
  40c97a:	add    DWORD PTR [ecx],eax
  40c97c:	stos   DWORD PTR es:[edi],eax
  40c97d:	iret   
  40c97e:	jnp    0x13839898
  40c984:	je     0x40c9fe
  40c986:	push   eax
  40c987:	push   ecx
  40c988:	sar    DWORD PTR [edi+ecx*1],cl
  40c98b:	je     0x40c972
	...
  40c999:	add    BYTE PTR [eax],al
  40c99b:	add    BYTE PTR [edi+0x3cc30894],al
  40c9a1:	pcmpeqb mm3,mm5
  40c9a4:	ja     0x40ca1f
  40c9a6:	push   esp
  40c9a7:	fs jnp 0x40c93e
  40c9aa:	push   edx
  40c9ab:	cs dec eax
  40c9ad:	dec    esp
  40c9ae:	add    ecx,ebp
  40c9b0:	cmp    al,0xc8
  40c9b2:	mov    DWORD PTR [esp+edx*8+0x306c1342],edi
  40c9b9:	dec    esp
  40c9ba:	push   ecx
  40c9bb:	sub    BYTE PTR fs:[eax],cl
  40c9be:	push   ecx
  40c9bf:	sub    DWORD PTR [esi+ecx*1+0x74],0x41
  40c9c4:	jbe    0x40ca3f
  40c9c6:	or     al,0x6a
  40c9c8:	call   0x29bdcb18
  40c9cd:	cmp    eax,0x9466297c
  40c9d2:	adc    al,0xe6
  40c9d4:	mov    DWORD PTR [eax-0x6be9e903],edi
  40c9da:	or     al,0xd6
  40c9dc:	jns    0x40c99e
  40c9de:	std    
  40c9df:	xor    al,0x23
  40c9e1:	push   cs
  40c9e2:	ss sar edi,1
  40c9e5:	outs   dx,BYTE PTR ds:[esi]
  40c9e6:	add    cl,ch
  40c9e8:	mov    ebx,0x81b60505
  40c9ed:	dec    esp
  40c9ee:	je     0x40c9b9
  40c9f0:	adc    edx,DWORD PTR [eax-0x76]
  40c9f3:	cmp    al,0xdb
  40c9f5:	inc    ecx
  40c9f6:	adc    ebx,DWORD PTR [esi+0x3bfe5081]
  40c9fc:	cmp    ebp,DWORD PTR [edi-0x39]
  40c9ff:	stos   DWORD PTR es:[edi],eax
	...
  40ca0c:	add    BYTE PTR [eax],al
  40ca0e:	add    al,dl
  40ca10:	push   cs
  40ca11:	push   ebp
  40ca12:	add    BYTE PTR [ebp+0x27],cl
  40ca15:	add    esp,0xfffef0be
  40ca1b:	sub    DWORD PTR ds:0x155d1055,edi
  40ca21:	lea    eax,[ebp-0x10ee2]
  40ca27:	neg    BYTE PTR [eax+eax*1+0x6ac28bff]
  40ca2e:	add    cl,dh
  40ca30:	jge    0x40ca42
  40ca32:	push   DWORD PTR [esi+esi*4-0x63343f7d]
  40ca39:	lds    eax,FWORD PTR [ebp-0x10eae]
  40ca3f:	xchg   esi,eax
  40ca40:	retf   0x0
  40ca43:	in     eax,dx
  40ca44:	popf   
  40ca45:	cmc    
  40ca46:	(bad)  
  40ca47:	push   ecx
  40ca48:	lock mov dl,BYTE PTR [edx]
  40ca4b:	jecxz  0x40c9da
  40ca4d:	stc    
  40ca4e:	(bad)  
  40ca4f:	xor    eax,esi
  40ca51:	dec    ebp
  40ca52:	(bad)  
  40ca53:	jmp    0x40ca1f
  40ca55:	std    
  40ca56:	call   DWORD PTR [ecx-0x27]
  40ca59:	push   0x10
  40ca5b:	push   ecx
  40ca5c:	cmp    al,0xf6
  40ca5e:	(bad)  
  40ca5f:	push   ecx
  40ca60:	idiv   dh
  40ca62:	push   edx
  40ca63:	xor    cl,BYTE PTR [ebx-0x43]
  40ca66:	cld    
  40ca67:	adc    dh,dh
  40ca69:	inc    BYTE PTR [eax]
  40ca6b:	mov    ah,bh
  40ca6d:	mov    edi,DWORD PTR [ebp-0x108ea]
	...
  40ca7f:	add    BYTE PTR [eax],al
  40ca81:	add    BYTE PTR [ecx],al
  40ca83:	js     0x40ca99
  40ca85:	dec    DWORD PTR [ebx+0x14]
  40ca88:	push   DWORD PTR [ebp+0x22]
  40ca8b:	(bad)  
  40ca8d:	jne    0x40caad
  40ca8f:	and    al,BYTE PTR [edi]
  40ca91:	jmp    DWORD PTR [ecx-0x9387d0b]
  40ca97:	test   BYTE PTR [esp+edi*8-0x129cac1],0x6a
  40ca9f:	inc    edx
  40caa0:	jmp    0xd0fd:0xdc6cc4a6
  40caa7:	mov    cs,WORD PTR [ecx-0x233337ef]
  40caad:	std    
  40caae:	rcr    BYTE PTR [esi+0x64751d5],0xcd
  40cab5:	ror    DWORD PTR [edi+0x1f],0x31
  40cab9:	mov    ebx,DWORD PTR [ebx-0x5e083f60]
  40cabf:	jle    0x40ca96
  40cac1:	push   esi
  40cac2:	les    ebp,FWORD PTR [esi+eax*1]
  40cac5:	mov    ebp,DWORD PTR ds:0x89f77f9c
  40cacb:	(bad)  
  40cacc:	aad    0x4f
  40cace:	adc    eax,0x7800681f
  40cad3:	sub    al,0x6
  40cad5:	dec    DWORD PTR ds:0xf2bf8127
  40cadb:	inc    eax
  40cadc:	mov    edi,0x21f6344
  40cae1:	add    BYTE PTR [edi],bh
  40cae3:	outs   dx,DWORD PTR ds:[esi]
  40cae4:	mov    DWORD PTR [eax+eax*1+0x0],edx
	...
  40caf3:	add    BYTE PTR [eax],al
  40caf5:	push   edi
  40caf6:	or     eax,0xf1b4fed7
  40cafb:	mov    BYTE PTR [ebx+eax*2+0x2f],al
  40caff:	mov    DWORD PTR [ebx+edi*1-0x700128db],eax
  40cb06:	jns    0x40cafc
  40cb08:	(bad)  
  40cb09:	repnz not bl
  40cb0c:	(bad)  
  40cb0d:	and    dh,bh
  40cb0f:	das    
  40cb10:	or     al,0xaf
  40cb12:	mov    eax,ds:0x6f3ffc58
  40cb17:	dec    ebp
  40cb18:	and    edi,DWORD PTR [edx+0xfdd593]
  40cb1e:	pop    esi
  40cb1f:	jb     0x40cb1f
  40cb21:	jb     0x40caeb
  40cb23:	not    esi
  40cb25:	imul   edi,DWORD PTR [esi+ebx*4+0x7f753750],0x1
  40cb2d:	loopne 0x40cb3b
  40cb2f:	pop    DWORD PTR [edx-0x29a847ff]
  40cb35:	or     DWORD PTR [eax+ebx*2],0x50
  40cb39:	loope  0x40cb72
  40cb3b:	and    DWORD PTR [esi-0x2a8fcd4b],0xffffffb9
  40cb42:	or     al,0x73
  40cb44:	icebp  
  40cb45:	mov    cl,0x52
  40cb47:	pusha  
  40cb48:	aad    0xa9
  40cb4a:	or     al,0x57
  40cb4c:	xor    DWORD PTR [edi],esi
  40cb4e:	ins    DWORD PTR es:[edi],dx
  40cb4f:	and    cl,al
  40cb51:	inc    esp
  40cb52:	enter  0x8a9c,0xa4
  40cb56:	or     al,0xb5
  40cb58:	or     eax,DWORD PTR [eax]
	...
  40cb66:	add    BYTE PTR [eax],al
  40cb68:	mov    BYTE PTR [edx-0x67971431],dl
  40cb6e:	cs (bad) 
  40cb70:	jns    0x40cb04
  40cb72:	repz jmp 0x40cba1
  40cb75:	ins    DWORD PTR es:[edi],dx
  40cb76:	out    0x3,eax
  40cb78:	mov    fs,WORD PTR [edi]
  40cb7a:	imul   eax,ebx,0x3e
  40cb7d:	js     0x40cb8d
  40cb7f:	push   eax
  40cb80:	dec    ebx
  40cb81:	or     eax,0x1258fb7d
  40cb86:	jnp    0x40cb5e
  40cb88:	dec    ecx
  40cb89:	or     al,0x7d
  40cb8b:	out    dx,eax
  40cb8c:	inc    ecx
  40cb8d:	xchg   edx,eax
  40cb8e:	xlat   BYTE PTR ds:[ebx]
  40cb8f:	(bad)  
  40cb90:	mov    bl,0xb0
  40cb92:	iret   
  40cb93:	(bad)  [ebp-0x13420f5]
  40cb99:	mov    ah,0xe7
  40cb9b:	cs mov ah,0x1c
  40cb9e:	iret   
  40cb9f:	dec    edi
  40cba0:	inc    edi
  40cba1:	or     edi,DWORD PTR ds:0x3b2c18fc
  40cba7:	aad    0x9
  40cba9:	or     al,0x1
  40cbab:	cmp    al,0x37
  40cbad:	and    BYTE PTR [edx],cl
  40cbaf:	cmovae ecx,eax
  40cbb2:	inc    eax
  40cbb3:	cmp    DWORD PTR [edx],ecx
  40cbb5:	xchg   ebp,eax
  40cbb6:	or     al,0x9e
  40cbb8:	js     0x40cb6a
  40cbba:	call   0xfe4c5a68
  40cbbf:	mov    cs,WORD PTR [eax-0x3303024c]
  40cbc5:	or     dh,BYTE PTR [ecx+eiz*8-0x2c]
  40cbc9:	pop    ecx
  40cbca:	jb     0x40cc42
	...
  40cbd8:	add    BYTE PTR [eax],al
  40cbda:	add    dl,ch
  40cbdc:	add    bl,al
  40cbde:	aad    0x3c
  40cbe0:	jne    0x40cb6b
  40cbe2:	push   ebp
  40cbe3:	mov    esp,0x9256d507
  40cbe8:	or     bh,dh
  40cbea:	fsub   QWORD PTR [esp+edi*1+0xa70e984]
  40cbf1:	(bad)  
  40cbf2:	cdq    
  40cbf3:	imul   edx,DWORD PTR [eax+ecx*1-0x1f2c5af],0x36
  40cbfb:	adc    eax,0xe4e96ac8
  40cc00:	or     al,BYTE PTR [edx]
  40cc02:	jmp    0xe9c50943
  40cc07:	test   BYTE PTR [edx],cl
  40cc09:	(bad)  
  40cc0a:	mov    ecx,0x94fe0ad6
  40cc0f:	dec    esp
  40cc10:	mov    eax,ds:0x203c9300
  40cc15:	and    al,0x9f
  40cc17:	cmp    al,0xc8
  40cc19:	lds    ebp,FWORD PTR [ebx+ebp*2+0x12]
  40cc1d:	(bad)  
  40cc1e:	out    dx,al
  40cc1f:	sub    al,0xb
  40cc21:	(bad)  
  40cc22:	jmp    0xd736101a
  40cc27:	adc    ecx,DWORD PTR [edx]
  40cc29:	add    ebp,ecx
  40cc2b:	cmp    al,0xc8
  40cc2d:	lds    esp,FWORD PTR [esp+esi*8+0x11]
  40cc31:	inc    BYTE PTR [eax]
  40cc33:	stc    
  40cc34:	mov    BYTE PTR [eax],0x0
  40cc37:	push   ss
  40cc38:	dec    esp
  40cc39:	test   esp,edi
  40cc3b:	shl    ebx,0xfe
	...
  40cc4e:	out    0xc6,al
  40cc50:	add    BYTE PTR [ebx+0x128b0c33],cl
  40cc56:	dec    esp
  40cc57:	les    ecx,FWORD PTR [ebx-0x104397b]
  40cc5d:	call   DWORD PTR [esi]
  40cc5f:	inc    ebx
  40cc60:	test   esp,ebp
  40cc62:	push   ecx
  40cc63:	hlt    
  40cc64:	(bad)  
  40cc65:	push   eax
  40cc66:	pop    ebx
  40cc67:	mov    ah,ch
  40cc69:	test   DWORD PTR [ecx-0xc],0x16b3ff4d
  40cc70:	push   DWORD PTR [ebp-0x56]
  40cc73:	repz je 0x40cc7e
  40cc76:	mov    esi,es
  40cc78:	std    
  40cc79:	jne    0x40cc29
  40cc7b:	repz dec edi
  40cc7d:	inc    esp
  40cc7e:	and    eax,0xf9f7e632
  40cc83:	repz std 
  40cc85:	push   cs
  40cc86:	and    dl,BYTE PTR [ebx]
  40cc88:	add    DWORD PTR [eax],eax
  40cc8a:	xchg   esi,eax
  40cc8b:	inc    edi
  40cc8c:	mov    ebp,0xfef431ec
  40cc91:	add    BYTE PTR [ecx-0x76],ch
  40cc94:	push   cs
  40cc95:	add    DWORD PTR [esi-0x3a],edx
  40cc98:	lds    eax,FWORD PTR [ebp-0x103de]
  40cc9e:	data16 (bad) 
  40cca0:	in     eax,dx
  40cca1:	mov    esi,0x41614fae
  40cca6:	push   esi
  40cca7:	inc    ecx
  40cca8:	test   DWORD PTR [eax],eax
  40ccaa:	dec    edx
  40ccab:	idiv   dh
  40ccad:	push   eax
  40ccae:	add    BYTE PTR ds:[ebp+0x0],bl
	...
  40ccbe:	add    BYTE PTR [eax],al
  40ccc0:	add    BYTE PTR [esi],ah
  40ccc2:	inc    ecx
  40ccc3:	mov    esi,0x84fd5474
  40ccc8:	aam    0x3f
  40ccca:	jmp    0xbde3:0x1f3efed1
  40ccd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccd2:	hlt    
  40ccd3:	arpl   WORD PTR [ecx+0x3f],ax
  40ccd6:	pushf  
  40ccd7:	xchg   edi,edi
  40ccd9:	add    al,0x53
  40ccdb:	ror    BYTE PTR [edi-0x19],cl
  40ccde:	mov    ebp,DWORD PTR [edi]
  40cce0:	add    BYTE PTR [edi],bh
  40cce2:	pushf  
  40cce3:	les    esi,FWORD PTR [ebx+0x1c]
  40cce6:	bound  ecx,QWORD PTR [eax-0x2dcd172d]
  40ccec:	add    DWORD PTR [edi],edi
  40ccee:	mov    dl,BYTE PTR [edx+0x43bd3a67]
  40ccf4:	add    BYTE PTR [edx-0x3f03fb5c],bh
  40ccfa:	xchg   edx,eax
  40ccfb:	xor    al,0xe8
  40ccfd:	retf   0x4bc
  40cd00:	add    BYTE PTR [edx-0x237afe21],bh
  40cd06:	pop    ds
  40cd07:	add    al,BYTE PTR [eax]
  40cd09:	pop    ss
  40cd0a:	sbb    BYTE PTR [ecx+eax*2+0x3f],ah
  40cd0e:	ins    BYTE PTR es:[edi],dx
  40cd0f:	xchg   edi,edi
  40cd11:	mov    BYTE PTR [edx-0xa68b02f],al
  40cd17:	das    
  40cd18:	add    BYTE PTR [edi],bh
  40cd1a:	es ret 0xee73
  40cd1e:	popf   
  40cd1f:	cmovno eax,DWORD PTR [eax+eiz*2]
  40cd23:	add    al,BYTE PTR [eax]
	...
  40cd31:	add    BYTE PTR [eax],al
  40cd33:	add    BYTE PTR [eax],bh
  40cd35:	mov    ds:0x1f60ff83,eax
  40cd3a:	shl    DWORD PTR [edi+eiz*2-0x3f012e4e],cl
  40cd41:	pushf  
  40cd42:	in     al,0xf6
  40cd44:	dec    eax
  40cd45:	or     dl,bl
  40cd47:	mov    ah,0x53
  40cd49:	or     dl,bl
  40cd4b:	dec    al
  40cd4d:	mov    ds:0xc830f6e8,eax
  40cd52:	out    0x80,al
  40cd54:	ret    
  40cd55:	out    dx,eax
  40cd56:	(bad)  
  40cd57:	shl    BYTE PTR [ecx],cl
  40cd59:	js     0x40cd9c
  40cd5b:	add    eax,0x441c8a5
  40cd60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd61:	enter  0x451,0xba
  40cd65:	inc    edx
  40cd66:	enter  0x1da,0x9
  40cd6a:	sbb    bl,dl
  40cd6c:	push   ebx
  40cd6d:	xchg   DWORD PTR [edx],esp
  40cd6f:	inc    ebp
  40cd70:	aas    
  40cd71:	mov    ebp,0x98057a7
  40cd76:	adc    eax,0xb052e1f8
  40cd7b:	fcmovu st,st(1)
  40cd7d:	or     BYTE PTR [edi-0x78ef0b68],cl
  40cd83:	ror    cl,cl
  40cd85:	xchg   edx,eax
  40cd86:	xlat   BYTE PTR ds:[ebx]
  40cd87:	ror    BYTE PTR [ebx-0x462d810d],cl
  40cd8d:	pop    ds
  40cd8e:	fcom   st(1)
  40cd90:	mov    cl,0x8
  40cd92:	addr16 cwde 
  40cd94:	test   BYTE PTR [eax],dl
  40cd96:	pop    edi
  40cd97:	rol    BYTE PTR [eax],cl
	...
  40cda5:	add    BYTE PTR [eax],al
  40cda7:	cwde   
  40cda8:	xchg   esi,eax
  40cda9:	mov    bl,0x3
  40cdab:	aas    
  40cdac:	sbb    eax,0xb40bd2ed
  40cdb1:	inc    esi
  40cdb2:	cwde   
  40cdb3:	mov    al,ds:0x81d23f10
  40cdb8:	push   edx
  40cdb9:	inc    esp
  40cdba:	fidivr DWORD PTR [ecx+0x8]
  40cdbd:	das    
  40cdbe:	pop    eax
  40cdbf:	dec    edi
  40cdc0:	or     DWORD PTR [ebp-0x49],ebx
  40cdc3:	jno    0x40cdcd
  40cdc5:	pop    ds
  40cdc6:	fistp  DWORD PTR [edx+0xa]
  40cdc9:	pop    ss
  40cdca:	rcr    BYTE PTR [ecx+0x52],cl
  40cdcd:	cld    
  40cdce:	fst    DWORD PTR [ecx+0x8]
  40cdd1:	adc    BYTE PTR [edx-0x16],ch
  40cdd4:	(bad)  
  40cdd5:	out    0xbc,eax
  40cdd7:	jle    0x40cd8c
  40cdd9:	add    cl,ch
  40cddb:	ja     0x40ce30
  40cddd:	in     eax,dx
  40cdde:	push   0xfffffff8
  40cde0:	aaa    
  40cde1:	push   edi
  40cde2:	out    0x90,al
  40cde4:	aam    0xe8
  40cde6:	sti    
  40cde7:	push   ecx
  40cde8:	enter  0xe200,0xfc
  40cdec:	jl     0x40cdf1
  40cdee:	das    
  40cdef:	aam    0x9
  40cdf1:	or     eax,0x8227cde9
  40cdf6:	test   eax,0x64d15339
  40cdfb:	xor    ah,0x50
  40cdfe:	sbb    ecx,DWORD PTR [esi]
  40ce00:	jge    0x40ce0e
  40ce02:	xchg   ecx,eax
  40ce03:	ins    BYTE PTR es:[edi],dx
  40ce04:	push   esi
  40ce05:	(bad)  
  40ce06:	sahf   
  40ce07:	inc    edx
  40ce08:	adc    DWORD PTR [eax+0x24],ecx
	...
  40ce1a:	xchg   edi,eax
  40ce1b:	repnz or dl,bh
  40ce1e:	aas    
  40ce1f:	ds inc ebp
  40ce21:	shr    al,1
  40ce23:	enter  0x9543,0x7c
  40ce27:	dec    ebx
  40ce28:	clc    
  40ce29:	fst    QWORD PTR [edx]
  40ce2b:	stc    
  40ce2c:	sub    DWORD PTR [edi+0x34],esi
  40ce2f:	jl     0x40ce01
  40ce31:	push   edx
  40ce32:	dec    ebx
  40ce33:	mov    esi,0xb5f7970d
  40ce38:	in     al,dx
  40ce39:	mov    ecx,0xa8629cf4
  40ce3e:	cmp    al,0x55
  40ce40:	inc    esp
  40ce41:	and    DWORD PTR [ebx-0x10],edx
  40ce44:	adc    eax,0x81c83c9c
  40ce49:	sub    eax,0x1144553f
  40ce4e:	sub    eax,DWORD PTR [edi]
  40ce50:	je     0x40ce8b
  40ce52:	mov    ebx,DWORD PTR [ecx+0x79]
  40ce55:	push   ds
  40ce56:	mov    ss,WORD PTR [eax+0x44]
  40ce59:	cmp    DWORD PTR ds:0xeaf5ff4b,eax
  40ce5f:	sbb    al,BYTE PTR [eax-0xc04500]
  40ce65:	add    BYTE PTR [esi-0x35],dl
  40ce68:	std    
  40ce69:	jne    0x40cec5
  40ce6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce6c:	push   ebx
  40ce6d:	(bad)  
  40ce6e:	out    0xca,eax
  40ce70:	mov    eax,DWORD PTR [ebp-0x2]
  40ce73:	mov    edx,0xcc62e7e8
  40ce78:	add    BYTE PTR [ebx+0x458d06ea],al
	...
  40ce8a:	add    BYTE PTR [eax],al
  40ce8c:	add    dh,cl
  40ce8e:	mov    edx,0x22a675fd
  40ce93:	pusha  
  40ce94:	js     0x40ce57
  40ce96:	pop    ss
  40ce97:	mov    DWORD PTR [ebp-0x2a],eax
  40ce9a:	test   DWORD PTR [esp+ecx*8+0x56],eax
  40ce9e:	sbb    DWORD PTR [ebp-0x30],esi
  40cea1:	dec    esi
  40cea2:	mov    dh,0x62
  40cea4:	inc    ecx
  40cea5:	(bad)  
  40cea6:	pop    ss
  40cea7:	xor    eax,0x8b1e67
  40ceac:	call   0x3e6e84
  40ceb1:	int    0xa
  40ceb3:	je     0x419a22
  40ceb9:	pop    ds
  40ceba:	mov    cs,eax
  40cebc:	and    DWORD PTR [ebx+0x1a0efe46],0x4d
  40cec3:	(bad)  
  40cec4:	call   DWORD PTR [esi-0x1f38ae9]
  40ceca:	lds    ebx,FWORD PTR [eax+eax*1-0x5a]
  40cece:	cmp    esi,ebx
  40ced0:	adc    DWORD PTR [esi-0x33],0xffffff87
  40ced4:	inc    ebp
  40ced5:	push   es
  40ced6:	sbb    BYTE PTR [ebp+0xc],dh
  40ced9:	loope  0x40ce68
  40cedb:	mov    ah,0xff
  40cedd:	stos   DWORD PTR es:[edi],eax
  40cede:	inc    esi
  40cedf:	pop    DWORD PTR [ebp+0x16]
  40cee2:	sbb    BYTE PTR [ebp-0x38],dh
  40cee5:	ror    DWORD PTR [ebp+0x343fc7c4],1
  40ceeb:	mov    ?,edi
  40ceed:	push   eax
  40ceee:	lock add DWORD PTR [ebx+0x0],eax
	...
  40cefd:	add    BYTE PTR [eax],al
  40ceff:	add    BYTE PTR [edx],cl
  40cf01:	xor    BYTE PTR ds:0x55f13f41,bh
  40cf07:	push   eax
  40cf08:	retf   0x8a34
  40cf0b:	dec    edi
  40cf0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf0d:	lock pop ebx
  40cf0f:	add    BYTE PTR [ebp-0x10bb7f11],dl
  40cf15:	mov    edi,0xb4ca005a
  40cf1a:	les    ecx,FWORD PTR [edi+0x10]
  40cf1d:	std    
  40cf1e:	inc    esp
  40cf1f:	dec    ebx
  40cf20:	jle    0x40cf11
  40cf22:	cli    
  40cf23:	mov    edi,0x7c83018b
  40cf28:	mov    ebx,0xbc2c55ef
  40cf2d:	mov    ah,0xf4
  40cf2f:	jmp    FWORD PTR [edi+esi*8+0x7a]
  40cf33:	push   esp
  40cf34:	dec    edi
  40cf35:	int    0xc5
  40cf37:	add    DWORD PTR [eax],ebx
  40cf39:	out    dx,eax
  40cf3a:	into   
  40cf3b:	je     0x40cf84
  40cf3d:	push   esi
  40cf3e:	pop    eax
  40cf3f:	mov    eax,0xfe8e04c8
  40cf44:	dec    edx
  40cf45:	repz pop ecx
  40cf47:	add    edi,DWORD PTR [edi]
  40cf49:	dec    esi
  40cf4a:	(bad)  
  40cf4b:	out    0xce,eax
  40cf4d:	jae    0x40cf1c
  40cf4f:	(bad)  
  40cf50:	test   al,0x24
  40cf52:	mov    fs,edi
  40cf54:	stos   BYTE PTR es:[edi],al
  40cf55:	or     DWORD PTR [edx],eax
  40cf57:	add    BYTE PTR [eax-0x361845dc],bl
  40cf5d:	and    cl,bh
  40cf5f:	dec    BYTE PTR [eax+0xe7b244]
	...
  40cf71:	add    BYTE PTR [eax],al
  40cf73:	rol    DWORD PTR [edx-0x31],1
  40cf76:	(bad)  
  40cf77:	sbb    DWORD PTR [eax+0x5c3f0bc2],ebp
  40cf7d:	jnp    0x40cf6a
  40cf7f:	mov    esp,0xb3bc2bc8
  40cf84:	mov    ebx,DWORD PTR [ebx]
  40cf86:	xor    al,0xe7
  40cf88:	mov    dh,0x89
  40cf8a:	inc    esp
  40cf8b:	aas    
  40cf8c:	jb     0x40cf72
  40cf8e:	pop    ecx
  40cf8f:	aas    
  40cf90:	jo     0x40cf5a
  40cf92:	popa   
  40cf93:	inc    bh
  40cf95:	paddusw mm2,QWORD PTR [ebp-0xf771838]
  40cf9c:	aam    0x5f
  40cf9e:	les    ebp,FWORD PTR [eax]
  40cfa0:	add    eax,0x48b7ae8
  40cfa5:	jae    0x40cf98
  40cfa7:	retf   
  40cfa8:	mov    cl,bh
  40cfaa:	xor    edx,DWORD PTR [eax]
  40cfac:	jnp    0x40cf79
  40cfae:	into   
  40cfaf:	outs   dx,BYTE PTR ds:[esi]
  40cfb0:	in     al,0x6c
  40cfb2:	ret    
  40cfb3:	xor    DWORD PTR [eax+0x5e],edx
  40cfb6:	add    edi,DWORD PTR [edi]
  40cfb8:	enter  0x506a,0xf7
  40cfbc:	(bad)  
  40cfbd:	fiadd  WORD PTR [edi+0x3e7c7cc]
  40cfc3:	clc    
  40cfc4:	mov    dh,BYTE PTR [ebx-0x1837c0fd]
  40cfca:	(bad)  
  40cfcb:	jnp    0x40cfed
  40cfcd:	call   0xaf090ed5
  40cfd2:	dec    eax
  40cfd3:	out    dx,eax
  40cfd4:	scas   eax,DWORD PTR es:[edi]
  40cfd5:	out    0x3,eax
	...
  40cfe3:	add    BYTE PTR [eax],al
  40cfe5:	add    BYTE PTR [edi],bh
  40cfe7:	or     eax,0x4b0c02d
  40cfec:	call   0x5fdb83f4
  40cff1:	jp     0x40d041
  40cff3:	push   ebx
  40cff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cff5:	mov    edi,0xb3ad5308
  40cffa:	add    BYTE PTR [edx-0x18],dh
  40cffd:	into   
  40cffe:	adc    eax,DWORD PTR [eax]
  40d000:	inc    edi
  40d001:	xor    DWORD PTR [ebx],esi
  40d003:	shl    DWORD PTR [edi],1
  40d005:	pop    eax
  40d006:	adc    ecx,DWORD PTR [ecx+0x1]
  40d009:	mov    ah,0xb0
  40d00b:	(bad)  
  40d00c:	jae    0x40cfad
  40d00e:	mov    ebp,0x8e9d483
  40d013:	mov    gs,WORD PTR [eax-0x48]
  40d016:	fiadd  WORD PTR [esi+0x1bf71600]
  40d01c:	jmp    0x108e53a
  40d021:	bnd jl 0x40d09c
  40d024:	or     al,BYTE PTR [edi-0x1601fbff]
  40d02a:	mov    bl,0x8c
  40d02c:	enter  0x4102,0xb
  40d030:	inc    esp
  40d031:	mov    cl,0x3b
  40d033:	enter  0xe900,0xb
  40d037:	jge    0x40d001
  40d039:	(bad)  
  40d03a:	push   0xb54fe1c
  40d03f:	in     al,dx
  40d040:	out    0xc4,al
  40d042:	repnz add bh,dh
  40d045:	xor    al,0xb7
  40d047:	jmp    0x40d088
  40d049:	adc    al,BYTE PTR [eax]
	...
  40d057:	add    BYTE PTR [eax],al
  40d059:	cmp    ecx,eax
  40d05b:	sub    DWORD PTR [ebx+ebx*4],0xf3f17203
  40d062:	jl     0x40d03c
  40d064:	xchg   ecx,eax
  40d065:	cs lahf 
  40d067:	add    cl,ch
  40d069:	test   DWORD PTR [edi-0x76],0x134efb34
  40d070:	xchg   BYTE PTR [eax+0x0],ch
  40d073:	(bad)  
  40d074:	sbb    edi,DWORD PTR [ebx+0x3675544e]
  40d07a:	fscale 
  40d07c:	hlt    
  40d07d:	js     0x40d081
  40d07f:	push   ebx
  40d080:	icebp  
  40d081:	in     eax,0x9
  40d083:	add    eax,0xed4f51e9
  40d088:	push   0xffffff87
  40d08a:	and    edx,DWORD PTR [edi+0x6a]
  40d08d:	cmp    BYTE PTR [ebp+0x63],bl
  40d090:	add    bh,dl
  40d092:	mov    DWORD PTR [eax],0x50c9875
  40d098:	xchg   ebp,eax
  40d099:	test   BYTE PTR [esi-0x38a9ff00],al
  40d09f:	add    BYTE PTR [esi+0x3f66bf],bh
  40d0a5:	sub    eax,0x80c166cd
  40d0aa:	leave  
  40d0ab:	add    esi,0x3e816d54
  40d0b1:	push   esi
  40d0b2:	call   0x414b:0x1fb83f1
  40d0b9:	es (bad) 
  40d0bb:	or     eax,0x84
	...
  40d0cc:	sub    eax,0x950000c7
  40d0d1:	rol    BYTE PTR [edi],cl
  40d0d3:	dec    ebx
  40d0d4:	addr16 int3 
  40d0d6:	add    BYTE PTR [edi],cl
  40d0d8:	mov    ds:0x16fffe25,al
  40d0dd:	dec    eax
  40d0de:	cmp    eax,0x874d41
  40d0e3:	add    cl,ch
  40d0e5:	dec    edx
  40d0e6:	loope  0x40d0e8
  40d0e8:	out    0xc6,al
  40d0ea:	lds    eax,FWORD PTR [ebp-0x66]
  40d0ed:	mov    BYTE PTR [eax],0x0
  40d0f0:	(bad)  
  40d0f1:	or     eax,DWORD PTR [ebp-0x8]
  40d0f4:	out    0xc6,al
  40d0f6:	add    BYTE PTR [eax],al
  40d0f8:	pop    ebx
  40d0f9:	mov    bh,ah
  40d0fb:	push   eax
  40d0fc:	imul   ecx,DWORD PTR [edx-0x33d3af08],0x68
  40d103:	jecxz  0x40d149
  40d105:	xchg   DWORD PTR [eax],eax
  40d107:	call   DWORD PTR [ebx-0x69beb503]
  40d10d:	(bad)  
  40d10e:	mov    ebp,0xfe5d120f
  40d113:	jmp    DWORD PTR [esi+0x3ff87d47]
  40d119:	icebp  
  40d11a:	cld    
  40d11b:	sbb    ebx,0xfffffff0
  40d11e:	add    DWORD PTR [eax],eax
  40d120:	mov    esp,0x49ffce0b
  40d125:	ins    DWORD PTR es:[edi],dx
  40d126:	lahf   
  40d127:	push   DWORD PTR [eax-0x10]
  40d12a:	js     0x40d1a0
  40d12c:	imul   eax,DWORD PTR [edi+0xff7f],0x0
	...
  40d13f:	pusha  
  40d140:	lock xor ecx,DWORD PTR [ebx+0x1853e211]
  40d147:	shl    BYTE PTR [ebx],0xd2
  40d14a:	(bad)  
  40d14b:	shl    esp,1
  40d14d:	jl     0x40d193
  40d14f:	dec    ebx
  40d150:	pop    eax
  40d151:	imul   esp,DWORD PTR [ecx+0x7e],0xffffffef
  40d155:	fstp   DWORD PTR [edi]
  40d157:	xchg   ebp,eax
  40d158:	out    dx,eax
  40d159:	add    ecx,edx
  40d15b:	pop    ds
  40d15c:	outs   dx,DWORD PTR ds:[esi]
  40d15d:	rol    DWORD PTR [ecx],0xb6
  40d160:	mov    ah,0xe4
  40d162:	addr16 mov dh,0x8d
  40d165:	inc    ebx
  40d166:	add    al,al
  40d168:	mov    ah,0xe0
  40d16a:	mov    BYTE PTR [edx+0x3f000543],0xef
  40d171:	js     0x40d1b7
  40d173:	out    0xdf,eax
  40d175:	pop    esi
  40d176:	add    DWORD PTR [ebp-0x11],esp
  40d179:	pop    ebx
  40d17a:	add    BYTE PTR [edx+0x554fe4ac],bh
  40d180:	out    dx,eax
  40d181:	js     0x40d1c7
  40d183:	iret   
  40d184:	mov    edi,0xa67e14c9
  40d189:	inc    ebx
  40d18a:	add    BYTE PTR [edi+ebp*1],dh
  40d18d:	push   ecx
  40d18e:	sub    eax,0xffd8ccbc
  40d193:	sub    al,0xa
  40d195:	mov    al,BYTE PTR [eax]
  40d197:	aas    
  40d198:	out    dx,eax
  40d199:	add    DWORD PTR [ebx],ecx
  40d19b:	jg     0x40d198
  40d19d:	out    dx,eax
  40d19e:	(bad)  
  40d19f:	sub    cl,al
  40d1a1:	out    dx,eax
  40d1a2:	retf   0x0
	...
  40d1b1:	add    BYTE PTR [ebx],dl
  40d1b3:	lock pop esi
  40d1b5:	push   ecx
  40d1b6:	mov    ds:0x20fbde01,eax
  40d1bb:	int3   
  40d1bc:	out    0xda,eax
  40d1be:	ret    0x7cf0
  40d1c1:	into   
  40d1c2:	jns    0x40d1c5
  40d1c4:	aas    
  40d1c5:	push   ecx
  40d1c6:	arpl   ax,si
  40d1c8:	inc    edi
  40d1c9:	sub    al,0x3f
  40d1cb:	enter  0xca8d,0xf3
  40d1cf:	jmp    FWORD PTR [edx-0x3e]
  40d1d2:	cmp    al,0x45
  40d1d4:	popf   
  40d1d5:	retf   
  40d1d6:	push   eax
  40d1d7:	jne    0x40d1b9
  40d1d9:	xchg   BYTE PTR [edx],cl
  40d1db:	enter  0x80de,0xd1
  40d1df:	add    BYTE PTR [edi],al
  40d1e1:	retf   
  40d1e2:	cmp    DWORD PTR [ebx-0x5],edi
  40d1e5:	retf   0xd34b
  40d1e8:	mov    ds:0x20a23f44,al
  40d1ed:	(bad)  
  40d1ee:	cmp    al,0xc8
  40d1f0:	cmp    al,0x7f
  40d1f2:	and    al,0x45
  40d1f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1f5:	retf   
  40d1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1f7:	enter  0x1b41,0x8
  40d1fb:	jnp    0x40d1dc
  40d1fd:	fcmovnbe st,st(5)
  40d1ff:	jno    0x40d1c7
  40d201:	retf   0x8ac7
  40d204:	mov    ebx,0x229f3386
  40d209:	inc    ebp
  40d20a:	aas    
  40d20b:	enter  0xb33,0xf8
  40d20f:	mov    bl,BYTE PTR [edi-0x1837c0fd]
  40d215:	push   ds
	...
  40d222:	add    BYTE PTR [eax],al
  40d224:	add    bh,bh
  40d226:	xchg   edi,eax
  40d227:	aaa    
  40d228:	xor    al,0xba
  40d22a:	call   0x3f20:0xdac0358f
  40d231:	inc    bh
  40d233:	fs ret 
  40d235:	aaa    
  40d236:	mov    BYTE PTR [eax],0x82
  40d239:	popa   
  40d23a:	inc    ebp
  40d23b:	jl     0x40d2ae
  40d23d:	cmp    al,0x7b
  40d23f:	add    dl,BYTE PTR [edx-0x57]
  40d242:	push   0xc7fc8856
  40d247:	std    
  40d248:	fdiv   QWORD PTR [ecx+eax*1+0x74]
  40d24c:	loope  0x40d2b2
  40d24e:	jne    0x40d247
  40d250:	inc    esi
  40d251:	test   DWORD PTR [ebp+0x54],ecx
  40d254:	inc    ecx
  40d255:	icebp  
  40d256:	(bad)  
  40d257:	std    
  40d258:	mov    esp,0xe1530174
  40d25d:	jne    0x40d2da
  40d25f:	or     BYTE PTR [ecx],dl
  40d261:	in     eax,dx
  40d262:	add    bh,dh
  40d264:	push   ds
  40d265:	test   DWORD PTR [ebx+0x8],edi
  40d268:	add    DWORD PTR [edx+eax*1],edx
  40d26b:	dec    BYTE PTR [esi]
  40d26d:	jne    0x40d2ea
  40d26f:	cld    
  40d270:	push   es
  40d271:	(bad)  
  40d272:	shr    al,1
  40d274:	jb     0x40d20c
  40d276:	(bad)  
  40d277:	std    
  40d278:	and    BYTE PTR [edx],al
  40d27a:	int3   
  40d27b:	add    BYTE PTR [ecx+eiz*4-0xc527e0d],dl
  40d282:	xchg   ebp,eax
  40d283:	push   ebp
  40d284:	cmp    dl,BYTE PTR [edx+0xae0c94]
	...
  40d296:	add    BYTE PTR [eax],al
  40d298:	inc    ecx
  40d299:	enter  0xe900,0x3c
  40d29d:	push   DWORD PTR [ebx-0xf]
  40d2a0:	adc    al,0xdc
  40d2a2:	pop    eax
  40d2a3:	jmp    0xe93a1de4
  40d2a8:	(bad)  
  40d2a9:	shr    DWORD PTR [ecx],1
  40d2ab:	test   eax,0xb05e9f12
  40d2b0:	add    eax,ecx
  40d2b2:	add    BYTE PTR [eax-0x1aabad0d],bh
  40d2b8:	inc    ebp
  40d2b9:	leave  
  40d2ba:	mov    DWORD PTR [ecx+0xdb49c6],esi
  40d2c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2c1:	retf   
  40d2c2:	add    BYTE PTR [ebx+0x7d8b03ab],cl
  40d2c8:	sahf   
  40d2c9:	sbb    al,0x58
  40d2cb:	sbb    ax,0x80ca
  40d2cf:	cld    
  40d2d0:	ss xchg esi,eax
  40d2d2:	or     al,BYTE PTR [eax+0x575d2f2]
  40d2d8:	push   ss
  40d2d9:	and    BYTE PTR [esi],ch
  40d2db:	jmp    0x40d26a
  40d2dd:	dec    ebx
  40d2de:	cli    
  40d2df:	inc    ecx
  40d2e0:	mov    ah,0xf6
  40d2e2:	jge    0x40d2e0
  40d2e4:	cwde   
  40d2e5:	cwde   
  40d2e6:	or     BYTE PTR [eax-0x3b7f74fe],al
  40d2ec:	pop    esp
  40d2ed:	sbb    al,0x9
  40d2ef:	sub    esp,DWORD PTR [esi]
  40d2f1:	lods   eax,DWORD PTR ds:[esi]
  40d2f2:	pop    ebp
  40d2f3:	pop    esi
  40d2f4:	clts   
  40d2f6:	push   es
  40d2f7:	add    BYTE PTR [edx-0x25],dh
  40d2fa:	jb     0x40d304
	...
  40d308:	add    BYTE PTR [eax],al
  40d30a:	add    BYTE PTR [edx-0x2e],dh
  40d30d:	jne    0x40d313
  40d30f:	adc    bl,bl
  40d311:	jmp    0x72cac52d
  40d316:	or     dh,dl
  40d318:	mov    BYTE PTR [ebp+0x6],dh
  40d31b:	loop   0x40d2a6
  40d31d:	add    al,0xa
  40d31f:	in     eax,dx
  40d320:	add    DWORD PTR [ebx],ebp
  40d322:	sar    BYTE PTR [ebp-0x4f],0x5e
  40d326:	leave  
  40d327:	aam    0x2
  40d329:	(bad)  
  40d32a:	mov    edi,0xc407fef6
  40d32f:	int3   
  40d330:	mov    ebx,0xfbe4c681
  40d335:	fidiv  DWORD PTR [ebp-0x4c]
  40d338:	jnp    0x40d37e
  40d33a:	or     al,0x91
  40d33c:	fimul  DWORD PTR [ebp+0x750f9e45]
  40d342:	or     BYTE PTR [ecx-0x42],ah
  40d345:	cld    
  40d346:	(bad)  
  40d347:	aas    
  40d348:	lods   al,BYTE PTR ds:[esi]
  40d349:	sar    bh,1
  40d34b:	shl    al,0x1
  40d34e:	cmp    DWORD PTR [edx-0x50],0x3b
  40d352:	inc    ecx
  40d353:	aas    
  40d354:	icebp  
  40d355:	dec    ebp
  40d356:	push   esi
  40d357:	mov    edx,0x154fd4ab
  40d35c:	lock pop ebx
  40d35e:	add    BYTE PTR ds:0x25005bf1,ah
  40d364:	icebp  
  40d365:	jbe    0x40d3ab
  40d367:	xchg   DWORD PTR [eax-0x37],eax
  40d36a:	adc    al,0xfe
  40d36c:	sub    DWORD PTR [ebx+0x0],eax
	...
  40d37b:	add    BYTE PTR [eax],al
  40d37d:	add    BYTE PTR [ecx+esi*4+0x4d],al
  40d381:	cmp    bh,BYTE PTR [ebx+edi*1-0x3130032]
  40d388:	jl     0x40d3ce
  40d38a:	xor    ebp,DWORD PTR [edx+0x36]
  40d38d:	lock adc al,0xf9
  40d390:	push   eax
  40d391:	sub    dl,BYTE PTR [ebx+0x79]
  40d394:	dec    esi
  40d395:	hlt    
  40d396:	mov    ah,0x53
  40d398:	cli    
  40d399:	mov    dh,dl
  40d39b:	loopne 0x40d381
  40d39d:	add    DWORD PTR [esp+ecx*4],ebp
  40d3a0:	jl     0x40d3e6
  40d3a2:	inc    ebx
  40d3a3:	dec    BYTE PTR [ebx-0x10]
  40d3a6:	mov    eax,0x2b74c8ef
  40d3ab:	enter  0x570c,0x3f
  40d3af:	out    dx,eax
  40d3b0:	mov    DWORD PTR [eax],eax
  40d3b2:	aas    
  40d3b3:	out    dx,eax
  40d3b4:	add    DWORD PTR [ebx+0x68],ebx
  40d3b7:	mov    ch,0xbb
  40d3b9:	shl    DWORD PTR [edi],0xef
  40d3bc:	sbb    al,al
  40d3be:	xchg   esp,eax
  40d3bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3c0:	es leave 
  40d3c2:	std    
  40d3c3:	test   DWORD PTR [ecx],0x8203b455
  40d3c9:	ret    
  40d3ca:	inc    DWORD PTR [edi-0x37c0dffc]
  40d3d0:	out    0xdb,eax
  40d3d2:	retf   0x9e6d
  40d3d5:	(bad)  
  40d3d6:	mov    bh,0x83
  40d3d8:	xchg   ebx,eax
  40d3d9:	pop    esp
  40d3da:	aas    
  40d3db:	test   al,0xe7
  40d3dd:	add    esp,DWORD PTR [edi+0xc716ef]
	...
  40d3ef:	add    BYTE PTR [eax],al
  40d3f1:	mov    cl,0x4f
  40d3f3:	and    eax,0xc7c820cc
  40d3f8:	add    edi,DWORD PTR [edi]
  40d3fa:	lock mov edx,DWORD PTR [edi-0x68]
  40d3fe:	std    
  40d3ff:	jo     0x40d442
  40d401:	mov    esi,DWORD PTR [eax-0x19]
  40d404:	and    edi,DWORD PTR [edi]
  40d406:	enter  0xb73f,0x11
  40d40a:	std    
  40d40b:	dec    esi
  40d40c:	jge    0x40d411
  40d40e:	clc    
  40d40f:	iret   
  40d410:	add    ebx,DWORD PTR [edi]
  40d412:	enter  0xdbe7,0x7e
  40d416:	ins    DWORD PTR es:[edi],dx
  40d417:	ss (bad) 
  40d419:	mov    bh,0x83
  40d41b:	cmp    ebx,DWORD PTR [edi+edi*1-0x58]
  40d41f:	out    0x3,eax
  40d421:	xor    ecx,DWORD PTR [bx+0x49c6]
  40d426:	dec    edi
  40d427:	lods   eax,DWORD PTR ds:[esi]
  40d428:	fcmovnu st,st(0)
  40d42a:	mov    edi,0x4ff03f03
  40d430:	push   edi
  40d431:	xor    ch,bh
  40d433:	jo     0x40d476
  40d435:	and    edi,ebp
  40d437:	jl     0x40d42c
  40d439:	cwde   
  40d43a:	test   al,0x8a
  40d43c:	inc    esp
  40d43d:	aas    
  40d43e:	std    
  40d43f:	pop    esp
  40d440:	enter  0xe518,0x36
  40d444:	add    al,0x3f
  40d446:	dec    ecx
  40d447:	lods   al,BYTE PTR ds:[esi]
  40d448:	test   DWORD PTR [ecx],0x2c5bf773
  40d44e:	imul   ebp,DWORD PTR [eax],0xbf72f004
  40d454:	fild   DWORD PTR [eax]
	...
  40d462:	add    BYTE PTR [eax],al
  40d464:	or     al,0x95
  40d466:	add    cl,ch
  40d468:	cmp    al,0x49
  40d46a:	(bad)
  40d46d:	je     0x40d47f
  40d46f:	adc    DWORD PTR [ebx],edx
  40d471:	imul   edi,DWORD PTR [edi],0xf47401e9
  40d477:	cmp    ebx,0xbde90095
  40d47d:	or     BYTE PTR ds:0x68d80f86,cl
  40d483:	push   es
  40d484:	sbb    al,0x87
  40d486:	add    BYTE PTR [esi+0xf],dh
  40d489:	clc    
  40d48a:	call   0x1093dce
  40d48f:	push   0xffffffd0
  40d491:	sar    ch,1
  40d493:	aam    0x8c
  40d495:	fs jp  0x40d462
  40d498:	sti    
  40d499:	(bad)  
  40d49a:	std    
  40d49b:	aam    0x90
  40d49d:	in     al,0x99
  40d49f:	sahf   
  40d4a0:	cmp    al,0xc8
  40d4a2:	and    DWORD PTR ds:0xe573fd70,0xa8625804
  40d4ac:	cmp    al,0xfd
  40d4ae:	jae    0x40d4c1
  40d4b0:	je     0x40d4f6
  40d4b2:	push   esi
  40d4b3:	jmp    0xe6061df4
  40d4b8:	jns    0x40d52d
  40d4ba:	adc    BYTE PTR [ecx-0x16c09960],al
  40d4c0:	stc    
  40d4c1:	je     0x40d4a7
  40d4c3:	adc    DWORD PTR [edi+0xe90093],ecx
	...
  40d4d5:	add    BYTE PTR [eax],al
  40d4d7:	mov    ebp,0x3c830d07
  40d4dc:	sti    
  40d4dd:	jae    0x40d4c4
  40d4df:	cli    
  40d4e0:	je     0x40d4ee
  40d4e2:	fidivr WORD PTR [eax]
  40d4e4:	arpl   WORD PTR [eax+0x28],cx
  40d4e7:	cmp    esi,eax
  40d4e9:	push   cs
  40d4ea:	pop    ebx
  40d4eb:	add    bh,bl
  40d4ed:	xchg   DWORD PTR [eax],eax
  40d4ef:	and    esp,esp
  40d4f1:	add    BYTE PTR [bx+di-0x775],ch
  40d4f6:	jmp    DWORD PTR [ebx]
  40d4f8:	add    bh,bh
  40d4fa:	xor    eax,0x3fbc81
  40d4ff:	scas   al,BYTE PTR es:[edi]
  40d500:	or     al,0x71
  40d502:	jmp    FWORD PTR [ecx+0x3cdc447f]
  40d508:	(bad)  
  40d509:	std    
  40d50a:	jne    0x40d4de
  40d50c:	add    eax,0xcbb90c75
  40d511:	gs dec eax
  40d513:	push   edi
  40d514:	(bad)  
  40d515:	call   0xff457cfc
  40d51a:	mov    DWORD PTR [ebx+0x2c],esp
  40d51d:	push   0xf08b1900
  40d522:	push   DWORD PTR [ebx+0x1f]
  40d525:	push   DWORD PTR ds:0x3fbf71
  40d52b:	(bad)  
  40d52c:	aas    
  40d52d:	jno    0x40d52e
  40d52f:	stc    
  40d530:	jle    0x40d576
  40d532:	aam    0x8c
  40d534:	(bad)  
  40d535:	std    
  40d536:	jne    0x40d532
  40d538:	add    al,0x75
  40d53a:	call   0x40d53f
	...
  40d547:	add    BYTE PTR [eax],al
  40d549:	add    BYTE PTR [ecx],ch
  40d54b:	retf   
  40d54c:	gs dec eax
  40d54e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d54f:	(bad)  
  40d550:	call   0xff457d0b
  40d555:	mov    DWORD PTR [ebx+0x66458d37],edx
  40d55b:	mov    ah,0xfd
  40d55d:	jne    0x40d5a1
  40d55f:	add    eax,0xca290c75
  40d564:	gs dec eax
  40d566:	xlat   BYTE PTR ds:[ebx]
  40d567:	(bad)  
  40d568:	call   0xff456d0b
  40d56d:	mov    DWORD PTR [ebx+0x40],esp
  40d570:	cmp    DWORD PTR [ebp-0xa],0xffffffc6
  40d574:	or     eax,0x25a3f84
  40d579:	add    BYTE PTR [edi],bh
  40d57b:	outs   dx,BYTE PTR ds:[esi]
  40d57c:	inc    esi
  40d57d:	aam    0x3f
  40d57f:	bnd jge 0x40d52e
  40d582:	aas    
  40d583:	icebp  
  40d584:	add    DWORD PTR [ebx+0xf026162],eax
  40d58a:	ret    
  40d58b:	dec    ebp
  40d58c:	add    al,BYTE PTR [eax]
  40d58e:	aas    
  40d58f:	je     0x40d5cf
  40d591:	les    ebp,FWORD PTR [edi+0x5a]
  40d594:	dec    edi
  40d595:	aam    0xd7
  40d597:	rol    ch,0xfe
  40d59a:	mov    eax,0xbb0ec1e5
  40d59f:	jno    0x40d5a2
  40d5a1:	add    BYTE PTR [edi],bh
  40d5a3:	outs   dx,BYTE PTR ds:[esi]
  40d5a4:	inc    esi
  40d5a5:	les    edi,FWORD PTR [edi]
  40d5a7:	loop   0x40d626
  40d5a9:	test   BYTE PTR [edi],bh
  40d5ab:	icebp  
  40d5ac:	add    DWORD PTR [ebp+0x0],ecx
	...
  40d5ba:	add    BYTE PTR [eax],al
  40d5bc:	add    dl,bh
  40d5be:	mov    eax,0xc112ff31
  40d5c3:	fnstenv [ecx]
  40d5c5:	adc    BYTE PTR [ecx+0x147f0ac4],0x4f
  40d5cc:	xor    edx,0xffffffb8
  40d5cf:	add    DWORD PTR [eax+ebx*8+0x18],esi
  40d5d3:	bnd call DWORD PTR [ecx+0x72]
  40d5d7:	les    esi,FWORD PTR [edi+eax*2-0x77]
  40d5db:	scas   al,BYTE PTR es:[edi]
  40d5dc:	imul   edx,DWORD PTR [eax-0x5f],0xd95f74c4
  40d5e3:	dec    esi
  40d5e4:	or     BYTE PTR [edi+0x4],dl
  40d5e7:	pop    ecx
  40d5e8:	(bad)  
  40d5e9:	cmp    bl,cl
  40d5eb:	dec    esi
  40d5ec:	fdiv   QWORD PTR [eax]
  40d5ee:	jge    0x40d5e9
  40d5f0:	out    0x5e,eax
  40d5f2:	push   esi
  40d5f3:	(bad)  
  40d5f6:	jge    0x40d5a1
  40d5f8:	(bad)  
  40d5f9:	xchg   edx,eax
  40d5fa:	out    0xd9,eax
  40d5fc:	adc    eax,0xc3e6c8a4
  40d601:	or     DWORD PTR [ebx+eiz*4-0x3d],esi
  40d605:	mov    edx,DWORD PTR [edi+edx*8]
  40d608:	cmp    DWORD PTR [edi-0x10],eax
  40d60b:	stos   DWORD PTR es:[edi],eax
  40d60c:	cs lock stc 
  40d60f:	(bad)  
  40d610:	cmp    edi,esi
  40d612:	stc    
  40d613:	xor    al,0xd4
  40d615:	loope  0x40d68a
  40d617:	fild   QWORD PTR [ebx-0x3c5190f6]
  40d61d:	mov    ebp,0x4b37b
	...
  40d62e:	add    BYTE PTR [eax],al
  40d630:	push   ebx
  40d631:	shr    DWORD PTR [edx+0x41],cl
  40d634:	inc    esp
  40d636:	sbb    al,0x13
  40d638:	les    eax,FWORD PTR [ebx-0x69f3c65]
  40d63e:	cld    
  40d63f:	or     edx,DWORD PTR [edi-0x5e3cee87]
  40d645:	in     eax,dx
  40d646:	loope  0x40d675
  40d648:	aas    
  40d649:	stc    
  40d64a:	hlt    
  40d64b:	or     esp,DWORD PTR [edi-0x763d2e8b]
  40d651:	stc    
  40d652:	aam    0xbf
  40d654:	cwde   
  40d655:	(bad)
  40d659:	stc    
  40d65a:	aam    0xbb
  40d65c:	pop    eax
  40d65d:	ss aad 0xc2
  40d660:	imul   edi,ecx,0x2e58b7b4
  40d666:	vmulss xmm7,xmm7,xmm1
  40d66a:	mov    ah,0xb3
  40d66c:	pop    eax
  40d66d:	es xchg ebp,eax
  40d66f:	ret    0xf949
  40d672:	xchg   esp,eax
  40d673:	scas   eax,DWORD PTR es:[edi]
  40d674:	pop    eax
  40d675:	pop    esi
  40d676:	test   edx,eax
  40d678:	cmp    ecx,edi
  40d67a:	xchg   esp,eax
  40d67b:	stos   DWORD PTR es:[edi],eax
  40d67c:	sbb    BYTE PTR [esi-0x6b],dl
  40d67f:	ret    0xf929
  40d682:	je     0x40d62b
  40d684:	sbb    BYTE PTR [esi+0x1],cl
  40d687:	test   ch,bh
  40d689:	stc    
  40d68a:	std    
  40d68b:	je     0x40d669
  40d68d:	loopne 0x40d611
  40d68f:	push   esp
  40d690:	cld    
  40d691:	stc    
  40d692:	std    
  40d693:	push   esp
	...
  40d6a0:	add    BYTE PTR [eax],al
  40d6a2:	add    BYTE PTR [edi],bl
  40d6a4:	loope  0x40d720
  40d6a6:	inc    esp
  40d6a7:	cld    
  40d6a8:	stc    
  40d6a9:	std    
  40d6aa:	push   esp
  40d6ab:	adc    esp,ecx
  40d6ad:	jb     0x40d703
  40d6af:	cld    
  40d6b0:	stc    
  40d6b1:	std    
  40d6b2:	xor    al,0x7
  40d6b4:	loope  0x40d720
  40d6b6:	inc    esp
  40d6b7:	cld    
  40d6b8:	stc    
  40d6b9:	std    
  40d6ba:	xor    al,0xeb
  40d6bc:	loopne 0x40d720
  40d6be:	adc    al,0xfc
  40d6c0:	stc    
  40d6c1:	std    
  40d6c2:	adc    al,0xef
  40d6c4:	loopne 0x40d720
  40d6c6:	add    al,0x7c
  40d6c8:	stc    
  40d6c9:	(bad)  
  40d6ca:	stos   DWORD PTR es:[edi],eax
  40d6cb:	inc    eax
  40d6cc:	enter  0x7253,0xd8
  40d6d0:	inc    edi
  40d6d1:	lds    edx,FWORD PTR [ecx+0x64fdf9e5]
  40d6d7:	pop    es
  40d6d8:	cld    
  40d6d9:	push   eax
  40d6da:	outs   dx,BYTE PTR ds:[esi]
  40d6db:	push   edi
  40d6dc:	int3   
  40d6dd:	std    
  40d6de:	sbb    al,0x54
  40d6e0:	nop
  40d6e1:	aas    
  40d6e2:	jmp    0xe99513bb
  40d6e7:	cmp    al,0xcd
  40d6e9:	rcr    dh,0xc7
  40d6ec:	aam    0xff
  40d6ee:	call   0x4184d82f
  40d6f3:	cmp    al,0xc8
  40d6f5:	add    cl,ch
  40d6f7:	test   DWORD PTR [ebx-0x37bad10c],eax
  40d6fd:	add    BYTE PTR [ebx-0x6cff91c4],dl
  40d703:	cmp    al,0x6e
  40d705:	add    BYTE PTR [eax+eax*1+0x0],ah
	...
  40d715:	add    BYTE PTR [edi-0x38a3af04],al
  40d71b:	out    0xf5,eax
  40d71d:	add    BYTE PTR [ecx+0xa],al
  40d720:	dec    esi
  40d721:	jmp    FWORD PTR [ebx+0x1275ff33]
  40d727:	and    ecx,DWORD PTR [ebp+edx*2-0x3ff633da]
  40d72e:	push   0xffffffcf
  40d730:	out    0xd7,eax
  40d732:	push   ss
  40d733:	int3   
  40d734:	add    BYTE PTR [eax+0x25],ch
  40d737:	test   BYTE PTR [edi],bh
  40d739:	add    BYTE PTR [ecx],al
  40d73b:	ror    BYTE PTR [eax+ebp*8],0x86
  40d73f:	mov    esp,0x4546fffd
  40d744:	into   
  40d745:	lea    ebp,[ebx+0x3c]
  40d748:	idiv   edi
  40d74a:	mov    eax,ds:0x56e8529c
  40d74f:	mov    esp,0x4f4ffffd
  40d754:	out    0xf7,al
  40d756:	ror    DWORD PTR [ecx],1
  40d758:	out    0xd6,al
  40d75a:	mov    dl,0x8
  40d75c:	dec    DWORD PTR [ebp+0x684e3c5b]
  40d762:	mov    ch,BYTE PTR [edi+edi*1-0x1a80ef00]
  40d769:	mul    DWORD PTR [ecx]
  40d76b:	or     edi,edi
  40d76d:	xor    eax,0x3f8379
  40d772:	out    dx,al
  40d773:	movq   mm7,mm7
  40d776:	adc    DWORD PTR [ebx-0x7b],eax
  40d779:	in     al,dx
	...
  40d786:	add    BYTE PTR [eax],al
  40d788:	add    BYTE PTR [ecx],cl
  40d78a:	or     edi,edi
  40d78c:	add    ebx,0x38
  40d78f:	idiv   edi
  40d791:	and    esp,ecx
  40d793:	je     0x40d7ef
  40d795:	in     eax,0xb6
  40d797:	lock add al,0x8b
  40d79a:	or     BYTE PTR [ecx-0xcecd7b],0xff
  40d7a1:	and    esp,edi
  40d7a3:	mov    es,WORD PTR [ebp-0x14832c1]
  40d7a9:	xor    BYTE PTR [eax+0x7d],ah
  40d7ac:	jmp    0x40d7de
  40d7ae:	into   
  40d7af:	mov    edi,0x1e13ce7
  40d7b4:	jbe    0x40d7fb
  40d7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7b7:	test   ebx,ebp
  40d7b9:	or     dh,ah
  40d7bb:	shl    bh,0x3c
  40d7be:	loope  0x40d7c1
  40d7c0:	jmp    0x40d7e7
  40d7c2:	push   ss
  40d7c3:	(bad)  
  40d7c4:	jmp    0x40d7b6
  40d7c6:	sbb    eax,0x34aafec1
  40d7cb:	mov    ecx,0x770de8fe
  40d7d0:	out    0xe8,eax
  40d7d2:	xor    eax,0xe952fec1
  40d7d7:	test   eax,0xc125d377
  40d7dc:	or     BYTE PTR [edx-0x3f0146a4],0xe0
  40d7e3:	fnstsw WORD PTR ss:[eax-0x4f09526d]
  40d7ea:	inc    ebp
  40d7eb:	stos   BYTE PTR es:[edi],al
  40d7ec:	push   edx
	...
  40d7f9:	add    BYTE PTR [eax],al
  40d7fb:	add    BYTE PTR [ebx],bl
  40d7fd:	dec    esi
  40d7fe:	sar    esi,0xea
  40d801:	inc    esp
  40d802:	mov    ecx,0x4a4898fe
  40d807:	ins    BYTE PTR es:[edi],dx
  40d808:	nop
  40d809:	shl    BYTE PTR gs:[edi+edx*4-0x7f013f6b],0x1b
  40d812:	or     ch,al
  40d814:	arpl   WORD PTR [esi+0x5b70fec0],bx
  40d81a:	stos   BYTE PTR es:[edi],al
  40d81b:	imul   BYTE PTR [eax-0x73]
  40d81e:	test   eax,0xc0b5d32e
  40d823:	inc    BYTE PTR [edx]
  40d825:	mov    ecx,0xa551faaa
  40d82a:	sar    dh,0xd2
  40d82d:	(bad)  
  40d82e:	and    ebp,DWORD PTR [ebx+0x3e79ba6]
  40d834:	push   es
  40d835:	or     esp,eax
  40d837:	add    ecx,DWORD PTR [edx-0x37c03bf]
  40d83d:	hlt    
  40d83e:	xchg   ecx,eax
  40d83f:	add    edx,DWORD PTR [ebp+0x4735feb8]
  40d845:	loopne 0x40d7ef
  40d847:	sub    dl,BYTE PTR [eax]
  40d849:	mul    BYTE PTR [eax+0x46]
  40d84c:	or     esp,DWORD PTR [ecx-0x1b]
  40d84f:	and    bh,BYTE PTR [esi-0x38]
  40d852:	fidivr WORD PTR [ecx]
  40d854:	inc    edi
  40d855:	loopne 0x40d7e1
  40d857:	mov    esi,0x39cef5f1
  40d85c:	jmp    0x40d853
  40d85e:	cmp    al,0xc
	...
  40d86c:	add    BYTE PTR [eax],al
  40d86e:	add    bh,dl
  40d870:	fs push eax
  40d872:	mov    edi,0x8a9ffd9
  40d877:	aas    
  40d878:	fwait
  40d879:	bound  esi,QWORD PTR [eax+0x56a40cbd]
  40d87f:	push   0x6e29e762
  40d884:	cmc    
  40d885:	sbb    al,0xc
  40d887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d888:	mov    BYTE PTR [eax],0xbf
  40d88b:	test   eax,0xb5c02d3f
  40d890:	mov    ebx,0xc7fe4792
  40d895:	bound  eax,QWORD PTR [ecx]
  40d897:	mov    al,ds:0xbf04288d
  40d89c:	mov    ch,0xe7
  40d89e:	aaa    
  40d89f:	cli    
  40d8a0:	pop    edi
  40d8a1:	mov    fs,WORD PTR [ebx]
  40d8a3:	inc    bh
  40d8a5:	mov    esi,0xe79becab
  40d8aa:	add    esi,DWORD PTR [eax+ecx*1]
  40d8ad:	mov    esp,0xbee0091e
  40d8b2:	cmp    BYTE PTR [eax-0xb],bl
  40d8b5:	add    BYTE PTR [ecx+0x3e00c824],bl
  40d8bb:	leave  
  40d8bc:	ins    BYTE PTR es:[edi],dx
  40d8bd:	mov    bh,0x8a
  40d8bf:	sti    
  40d8c0:	(bad)  
  40d8c1:	push   eax
  40d8c2:	push   ds
  40d8c3:	jbe    0x40d885
  40d8c5:	call   0xfe36a604
  40d8ca:	add    edi,eax
  40d8cc:	popa   
  40d8cd:	std    
  40d8ce:	push   es
  40d8cf:	aam    0xc7
  40d8d1:	inc    esi
  40d8d2:	imul   eax,DWORD PTR [eax],0x0
	...
  40d8e0:	add    BYTE PTR [eax],al
  40d8e2:	sbb    ebp,esi
  40d8e4:	je     0x40d8d9
  40d8e6:	jp     0x40d8dc
  40d8e8:	xor    DWORD PTR [ecx],ebp
  40d8ea:	mov    dh,dh
  40d8ec:	std    
  40d8ed:	out    0xc1,al
  40d8ef:	imul   BYTE PTR [esi-0x4684bfdf]
  40d8f5:	(bad)  
  40d8f6:	aaa    
  40d8f7:	hlt    
  40d8f8:	std    
  40d8f9:	push   esp
  40d8fa:	cmp    esp,eax
  40d8fc:	lock push ecx
  40d8fe:	mov    al,ds:0xa1f5df5
  40d903:	pop    es
  40d904:	add    eax,0xed4177e9
  40d909:	push   0x0
  40d90b:	std    
  40d90c:	push   ecx
  40d90d:	scas   al,BYTE PTR es:[edi]
  40d90e:	ja     0x40d900
  40d910:	add    cl,ch
  40d912:	cmp    al,0xc8
  40d914:	lds    ebp,FWORD PTR [edi+edi*2]
  40d917:	hlt    
  40d918:	std    
  40d919:	jmp    0xf5851a5a
  40d91e:	mov    ebp,0x4bf400bc
  40d923:	mov    eax,ds:0x916ec2c0
  40d928:	(bad)  
  40d929:	stos   DWORD PTR es:[edi],eax
  40d92a:	cmp    al,cl
  40d92c:	mov    ecx,0xc83ce8
  40d931:	push   edx
  40d932:	and    ecx,DWORD PTR [ecx+0x7c]
  40d935:	stc    
  40d936:	cmp    al,0x7c
  40d938:	add    esp,DWORD PTR [edx-0x9]
  40d93b:	xlat   BYTE PTR ds:[ebx]
  40d93c:	xchg   DWORD PTR [eax],eax
  40d93e:	pop    esi
  40d93f:	xor    eax,0xb0190c75
  40d944:	or     al,ch
	...
  40d952:	add    BYTE PTR [eax],al
  40d954:	add    bh,dl
  40d956:	stos   BYTE PTR es:[edi],al
  40d957:	std    
  40d958:	call   ebp
  40d95a:	xor    DWORD PTR [ecx],ecx
  40d95c:	jne    0x40d9b1
  40d95e:	ret    
  40d95f:	inc    ebx
  40d960:	clc    
  40d961:	dec    ebp
  40d962:	lea    edx,[eax+0x25]
  40d965:	leave  
  40d966:	xor    bh,bh
  40d968:	call   FWORD PTR [edi]
  40d96a:	cmp    eax,0xfe478f58
  40d970:	jmp    DWORD PTR [esi]
  40d972:	mov    cl,0x2
  40d974:	jmp    0x40d94b
  40d976:	inc    esi
  40d977:	sti    
  40d978:	or     BYTE PTR [ebx+0x1e4589d0],dl
  40d97e:	inc    edx
  40d97f:	push   ebp
  40d980:	cld    
  40d981:	jmp    0xa74998f1
  40d986:	sub    al,0x6
  40d988:	mov    DWORD PTR [ebx],esp
  40d98a:	xor    al,0x89
  40d98c:	push   ebp
  40d98d:	cli    
  40d98e:	and    DWORD PTR [ebx],edx
  40d990:	mov    esp,DWORD PTR [ebx]
  40d992:	xor    al,0x8b
  40d994:	push   ebp
  40d995:	mov    al,ch
  40d997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d998:	ret    0x6e1
  40d99b:	fiadd  WORD PTR [edi]
  40d99d:	dec    edi
  40d99e:	mov    edi,eax
  40d9a0:	mov    DWORD PTR [ebx+0x8],esi
  40d9a3:	inc    ebx
  40d9a4:	or     ebp,0xffffffbf
  40d9a7:	jbe    0x40d943
  40d9a9:	sbb    eax,0x7e830c8b
  40d9ae:	(bad)  
  40d9af:	jae    0x40d9b7
  40d9b1:	ins    DWORD PTR es:[edi],dx
  40d9b2:	pop    es
  40d9b3:	sub    edx,edx
  40d9b5:	mov    ebp,0x4589ca
	...
  40d9c6:	add    BYTE PTR [eax],al
  40d9c8:	push   cs
  40d9c9:	inc    ecx
  40d9ca:	push   ebp
  40d9cb:	cld    
  40d9cc:	jge    0x40d9cc
  40d9ce:	mov    edi,0x899a660c
  40d9d3:	in     al,dx
  40d9d4:	aas    
  40d9d5:	pop    esi
  40d9d6:	enter  0x9ef3,0xdd
  40d9da:	lea    eax,[eax+0x3f]
  40d9dd:	enter  0xc45,0xd1
  40d9e1:	jmp    0x14:0x9f86bfe8
  40d9e8:	dec    eax
  40d9e9:	cld    
  40d9ea:	cmc    
  40d9eb:	mov    esi,?
  40d9ed:	loopne 0x40d998
  40d9ef:	mov    ch,0xa5
  40d9f1:	sar    BYTE PTR [ebx-0x72268578],cl
  40d9f7:	inc    esp
  40d9f8:	sub    esi,DWORD PTR [ecx]
  40d9fa:	stos   BYTE PTR es:[edi],al
  40d9fb:	jne    0x40d99a
  40d9fd:	retf   0xfebb
  40da00:	xchg   edx,eax
  40da01:	sbb    eax,0xfa4374bd
  40da06:	ss clc 
  40da08:	or     BYTE PTR [ecx+ecx*1-0x18],bh
  40da0c:	mov    ah,0x83
  40da0e:	mov    ebx,0xd2144fe
  40da13:	test   BYTE PTR [ecx-0x17fffe20],bl
  40da19:	fwait
  40da1a:	adc    bh,bh
  40da1c:	push   0x9
  40da1e:	mov    ebp,0xcd18db74
  40da23:	(bad)  
  40da24:	sar    BYTE PTR [ecx],1
  40da26:	mov    DWORD PTR [ebx+edi*1-0xa],eax
  40da2a:	inc    esi
  40da2b:	adc    BYTE PTR [eax],al
	...
  40da39:	add    BYTE PTR [eax],al
  40da3b:	xor    BYTE PTR [esi+0x65],bl
  40da3e:	(bad)  
  40da3f:	mov    eax,0x4b74bce0
  40da44:	pop    edx
  40da45:	aaa    
  40da46:	or     BYTE PTR [edi-0x5f00d994],dl
  40da4c:	ja     0x40da94
  40da4e:	hlt    
  40da4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da50:	cld    
  40da51:	mov    esp,0xd0058b4c
  40da56:	mov    al,BYTE PTR [edx]
  40da58:	jge    0x40da0e
  40da5a:	and    al,0x4b
  40da5c:	enter  0x4274,0x3f
  40da60:	mov    edi,0xdf3d3739
  40da65:	mov    edi,0x4e983f29
  40da6a:	ss aaa 
  40da6c:	loopne 0x40da0c
  40da6e:	and    DWORD PTR [eax-0xe],ebx
  40da71:	ds ss sub esi,ebx
  40da75:	mov    esp,0xc49c570b
  40da7a:	mov    esp,0x17bd3e41
  40da7f:	mov    esp,0x3d36e7ae
  40da84:	fstp   QWORD PTR [edi+0x62fc838a]
  40da8a:	push   cs
  40da8b:	imul   eax,DWORD PTR [ebx-0x57],0x3
  40da8f:	mov    esp,0x1052e3df
  40da94:	jl     0x40da71
  40da96:	push   edx
  40da97:	or     BYTE PTR [edi+ebp*8-0x45],bh
  40da9b:	mov    eax,eax
  40da9d:	iret   
  40da9e:	or     eax,0x0
	...
  40daab:	add    BYTE PTR [eax],al
  40daad:	add    BYTE PTR [edx-0xf],ah
  40dab0:	ficomp WORD PTR [ebp+0x44]
  40dab3:	or     BYTE PTR [ebp+0x6],bl
  40dab6:	aam    0xab
  40dab8:	cmp    BYTE PTR [ebx+0x31c6f06b],bh
  40dabe:	fneni(8087 only) 
  40dac0:	pop    ss
  40dac1:	daa    
  40dac2:	shl    cl,1
  40dac4:	mov    dh,0x31
  40dac6:	retf   
  40dac7:	loopne 0x40daec
  40dac9:	es shl cl,0xe4
  40dacd:	add    edi,DWORD PTR [edi]
  40dacf:	mov    ch,ah
  40dad1:	xor    DWORD PTR ds:0x2b86dfdd,edi
  40dad7:	cld    
  40dad8:	out    0x30,eax
  40dada:	mov    ecx,0x13badfdd
  40dadf:	hlt    
  40dae0:	(bad)
  40dae4:	add    BYTE PTR [esi+0x7c],dh
  40dae7:	mov    esp,?
  40dae9:	jmp    0x7241a32a
  40daee:	(bad)  
  40daef:	fcmovnb st,st(5)
  40daf1:	jmp    0xe941a332
  40daf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf7:	jl     0x40daf1
  40daf9:	inc    ecx
  40dafa:	out    dx,eax
  40dafb:	pop    edi
  40dafc:	std    
  40dafd:	inc    esi
  40dafe:	enter  0xfc8c,0x30
  40db02:	jns    0x40dac5
  40db04:	add    BYTE PTR [ecx+edi*4-0x19daa23],bl
  40db0b:	ret    
  40db0c:	sub    DWORD PTR [ecx],0x55e8984b
	...
  40db1e:	add    BYTE PTR [eax],al
  40db20:	add    BYTE PTR [edx-0xf],ah
  40db23:	std    
  40db24:	(bad)  
  40db25:	jmp    0x40db18
  40db27:	jae    0x40db06
  40db29:	mov    ch,0xc9
  40db2b:	std    
  40db2c:	jl     0x40db5a
  40db2e:	inc    ecx
  40db2f:	inc    esi
  40db30:	in     eax,0xb9
  40db32:	jae    0x40db40
  40db34:	jmp    0x753e9c91
  40db39:	cmp    BYTE PTR [ebx+0x46],al
  40db3c:	icebp  
  40db3d:	mov    ecx,?
  40db3f:	jae    0x40db32
  40db41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db42:	jmp    DWORD PTR [edi-0x2a]
  40db45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db46:	cmp    eax,0xb8b3f544
  40db4b:	mov    eax,0xc83ce8
  40db50:	push   ds
  40db51:	add    al,BYTE PTR [edi]
  40db53:	adc    ecx,ebp
  40db55:	outs   dx,DWORD PTR ds:[esi]
  40db56:	cmp    eax,0xf4806aed
  40db5b:	mov    DWORD PTR [edi+ecx*2],edi
  40db5e:	or     DWORD PTR [ebx],eax
  40db60:	jmp    0xc241a3a1
  40db65:	xchg   edx,eax
  40db66:	stc    
  40db67:	inc    ebx
  40db68:	fnstsw WORD PTR [ebx]
  40db6a:	enter  0x0,0xa6
  40db6e:	mov    ebp,0xb025c294
  40db73:	or     al,0x0
  40db75:	mov    ebx,ecx
  40db77:	std    
  40db78:	jne    0x40dbe4
  40db7a:	mov    ds:0xa2666a01,al
  40db7f:	add    al,ch
  40db81:	imul   BYTE PTR ds:0xffff
	...
  40db93:	add    bh,bh
  40db95:	jecxz  0x40db96
  40db97:	call   DWORD PTR [esi+0x49]
  40db9a:	jge    0x40dba8
  40db9c:	addr16 mov bh,0x21
  40db9f:	dec    DWORD PTR [ebx+0x5e75fdd4]
  40dba5:	sbb    al,0xaf
  40dba7:	adc    DWORD PTR fs:[esi],ebp
  40dbaa:	mov    DWORD PTR [ebp+0x62],eax
  40dbad:	xor    dh,BYTE PTR [ebp+0x14]
  40dbb0:	int3   
  40dbb1:	retf   
  40dbb2:	push   0x4
  40dbb4:	mov    ds:0x3e50fc88,eax
  40dbb9:	stos   BYTE PTR es:[edi],al
  40dbba:	std    
  40dbbb:	inc    DWORD PTR [ecx+0x1c]
  40dbbe:	inc    BYTE PTR [ecx]
  40dbc0:	es int3 
  40dbc2:	cmp    DWORD PTR [ebp+0x22],0x112373c6
  40dbc9:	mov    al,ds:0xbc9bff10
  40dbce:	call   0xff72562c
  40dbd3:	mov    DWORD PTR [ebx],ebx
  40dbd5:	xor    bh,bh
  40dbd7:	jne    0x40dbc3
  40dbd9:	popf   
  40dbda:	add    BYTE PTR [edx-0x16],ch
  40dbdd:	inc    esi
  40dbde:	inc    ebp
  40dbdf:	cld    
  40dbe0:	ss sbb al,0x3c
  40dbe3:	call   DWORD PTR [ecx-0x282816cf]
  40dbe9:	retf   
  40dbea:	add    BYTE PTR [ebx+0x7501c063],al
  40dbf0:	xchg   BYTE PTR [eax],dh
  40dbf2:	jne    0x40dc04
  40dbf4:	aas    
  40dbf5:	retf   
  40dbf6:	add    edi,edi
	...
  40dc04:	add    BYTE PTR [eax],al
  40dc06:	add    BYTE PTR [edx],ch
  40dc08:	jmp    0x466461b6
  40dc0d:	mov    eax,0x2c150afe
  40dc12:	add    edx,DWORD PTR ds:0x97002be1
  40dc18:	sbb    DWORD PTR [ecx+0x719878fe],edi
  40dc1e:	add    BYTE PTR [edi],bh
  40dc20:	loope  0x40dba6
  40dc22:	jl     0x40dc5f
  40dc24:	(bad)  [esi]
  40dc26:	and    esp,DWORD PTR [eax+0x14]
  40dc29:	adc    bh,bh
  40dc2b:	sar    al,cl
  40dc2d:	test   eax,0xb7addcdd
  40dc32:	mov    BYTE PTR [edx],al
  40dc34:	mov    ch,0xb7
  40dc36:	je     0x40dc63
  40dc38:	or     eax,DWORD PTR [edx]
  40dc3a:	push   0x43
  40dc3c:	je     0x40dc7b
  40dc3e:	cld    
  40dc3f:	(bad)  
  40dc40:	fldenv [edi-0x5629d703]
  40dc46:	xchg   DWORD PTR [esi],edi
  40dc48:	loope  0x40dc4b
  40dc4a:	sbb    DWORD PTR [edx+0x2874fef5],0xffffffee
  40dc51:	adc    BYTE PTR cs:[ebp+0x3774b8df],dl
  40dc58:	leave  
  40dc59:	out    dx,eax
  40dc5a:	arpl   ax,di
  40dc5c:	in     eax,0x79
  40dc5e:	add    BYTE PTR [edi],bh
  40dc60:	loope  0x40dc63
  40dc62:	jmp    0x42bcbb
  40dc67:	mov    esp,0x6087b
	...
  40dc78:	add    BYTE PTR [eax],al
  40dc7a:	push   edx
  40dc7b:	shl    DWORD PTR [edi+0xc9b2f74],0xff
  40dc82:	push   edx
  40dc83:	jmp    0x1e9bf631
  40dc88:	mov    ecx,0xfbc832fe
  40dc8d:	sub    eax,0x2de7623c
  40dc92:	aas    
  40dc93:	loopne 0x40dcd8
  40dc95:	mov    ecx,0x3e80eea1
  40dc9a:	ds enter 0x84e7,0x13
  40dc9f:	mov    esp,0xef5f2ee6
  40dca4:	cld    
  40dca5:	adc    edx,DWORD PTR ds:0x472e6ec0
  40dcab:	loopne 0x40dd08
  40dcad:	and    al,0x70
  40dcaf:	out    dx,al
  40dcb0:	pop    esi
  40dcb1:	cs push ebx
  40dcb3:	(bad)  
  40dcb4:	jmp    0xc2ab:0xe7623f2d
  40dcbb:	in     eax,dx
  40dcbc:	inc    esi
  40dcbd:	mov    eax,0x3e8ce67
  40dcc2:	aas    
  40dcc3:	dec    ebx
  40dcc4:	mov    ch,0x7
  40dcc6:	aaa    
  40dcc7:	jne    0x40dc94
  40dcc9:	rol    BYTE PTR [ebx+0x3f03e7ec],0xc8
  40dcd0:	push   ds
  40dcd1:	cs push ebx
  40dcd3:	(bad)  
  40dcd4:	out    0x2d,eax
  40dcd6:	cmp    edi,DWORD PTR [ebx]
  40dcd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcd9:	mov    bh,0x88
  40dcdb:	loopne 0x40dc68
  40dcdd:	mov    ecx,0x0
	...
  40dcea:	add    BYTE PTR [eax],al
  40dcec:	add    BYTE PTR [ecx],dl
  40dcee:	out    dx,al
  40dcef:	adc    BYTE PTR [esi-0x7b1811f8],dh
  40dcf5:	cmp    DWORD PTR [eax+eiz*8+0x2d055b2e],0xffffffb8
  40dcfd:	aas    
  40dcfe:	enter  0x3e7,0xe8
  40dd02:	jae    0x40dcff
  40dd04:	sub    DWORD PTR [edi],edi
  40dd06:	(bad)  
  40dd08:	mov    BYTE PTR [ebx+0x7eac17ec],al
  40dd0e:	out    dx,al
  40dd0f:	mov    esi,0x111d7b7
  40dd14:	jmp    0x2cc2a555
  40dd19:	inc    edi
  40dd1a:	ret    0xf373
  40dd1d:	xor    al,0xed
  40dd1f:	std    
  40dd20:	jmp    0xea0abc61
  40dd25:	cmp    al,0xc8
  40dd27:	or     DWORD PTR [edi+eax*2],0x14f373c1
  40dd2e:	in     eax,dx
  40dd2f:	std    
  40dd30:	jmp    0xe9fabc71
  40dd35:	cmp    al,0xc8
  40dd37:	sub    esp,0xbc72bc40
  40dd3d:	inc    ebp
  40dd3e:	sbb    dh,BYTE PTR [ebp-0x48]
  40dd41:	ret    
  40dd42:	ins    BYTE PTR es:[edi],dx
  40dd43:	or     al,0xe9
  40dd45:	cmp    al,0x88
  40dd47:	push   es
  40dd48:	fiadd  DWORD PTR [ebp*8-0x7b460a8d]
  40dd4f:	hlt    
  40dd50:	push   0x0
	...
  40dd5e:	add    BYTE PTR [eax],al
  40dd60:	push   ss
  40dd61:	hlt    
  40dd62:	or     al,0x18
  40dd64:	push   ss
  40dd65:	hlt    
  40dd66:	std    
  40dd67:	mov    ah,0xe8
  40dd69:	in     al,0xb7
  40dd6b:	mov    gs,ecx
  40dd6d:	in     eax,dx
  40dd6e:	xchg   DWORD PTR [esp+eiz*8-0x16068c13],esp
  40dd75:	jae    0x40dd6b
  40dd77:	push   cs
  40dd78:	dec    esi
  40dd79:	lock std 
  40dd7b:	jl     0x40ddc1
  40dd7d:	loopne 0x40dd14
  40dd7f:	mov    edx,ecx
  40dd81:	in     eax,dx
  40dd82:	std    
  40dd83:	jl     0x40ddb5
  40dd85:	bound  eax,QWORD PTR [edx]
  40dd87:	out    dx,al
  40dd88:	das    
  40dd89:	hlt    
  40dd8a:	std    
  40dd8b:	pop    esp
  40dd8c:	mov    bl,0xe4
  40dd8e:	iret   
  40dd8f:	fdiv   QWORD PTR [ecx-0x5ca30213]
  40dd95:	in     al,0x76
  40dd97:	inc    esi
  40dd98:	nop
  40dd99:	in     eax,dx
  40dd9a:	mov    eax,0xc8e700
  40dd9f:	add    ch,ch
  40dda1:	test   al,0x81
  40dda3:	jge    0x40dd7f
  40dda5:	mov    edi,0x169d5572
  40ddaa:	jne    0x40ddfd
  40ddac:	daa    
  40ddad:	mov    al,0xc
  40ddaf:	add    BYTE PTR [esi+0x5e730688],dl
  40ddb5:	xor    eax,0x87f90c75
  40ddba:	hlt    
  40ddbb:	sub    DWORD PTR [ebx],0x38
  40ddbe:	or     eax,0xff383bd1
  40ddc3:	jne    0x40ddc5
	...
  40ddd1:	add    BYTE PTR [eax],al
  40ddd3:	add    ah,BYTE PTR [ecx]
  40ddd5:	pop    esp
  40ddd6:	addr16 jmp 0xde866711
  40dddc:	xor    eax,0xb8091075
  40dde1:	hlt    
  40dde2:	inc    DWORD PTR [ebx+0x5e75ff30]
  40dde8:	and    BYTE PTR [edx],bh
  40ddea:	(bad)  
  40ddeb:	stc    
  40ddec:	xor    eax,0x9e7275ff
  40ddf1:	(bad)  
  40ddf2:	inc    BYTE PTR [ebx+0x6e75ff1c]
  40ddf8:	pop    ds
  40ddf9:	je     0x40ddf8
  40ddfb:	pop    ecx
  40ddfc:	xor    bh,bh
  40ddfe:	jne    0x40de5e
  40de00:	pop    ds
  40de01:	sbb    esp,DWORD PTR [edi+0x49]
  40de04:	xor    dh,BYTE PTR [esi+0xc82601]
  40de0a:	jmp    0x40de2f
  40de0c:	jo     0x40de0b
  40de0e:	call   DWORD PTR [esi]
  40de10:	enter  0xc2c7,0xe6
  40de14:	(bad)  
  40de15:	push   ebx
  40de16:	mov    edi,edx
  40de18:	jl     0x40dd9b
  40de1a:	jge    0x40de0a
  40de1c:	(bad)  
  40de1d:	jae    0x40de24
  40de1f:	sub    bh,bh
  40de21:	mov    edi,0x88e13f04
  40de26:	je     0x40de6f
  40de28:	push   es
  40de29:	or     edi,edi
  40de2b:	or     DWORD PTR [ecx],ebx
  40de2d:	mov    ch,0x65
  40de2f:	enter  0x802a,0xc5
  40de33:	cmp    ebx,DWORD PTR [esi-0xa]
  40de36:	inc    DWORD PTR [eax]
	...
  40de44:	add    BYTE PTR [eax],al
  40de46:	xor    esi,DWORD PTR [eax]
  40de48:	mov    ah,0x74
  40de4a:	inc    edi
  40de4b:	pop    ecx
  40de4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de4d:	gs test al,0x4a
  40de50:	push   edi
  40de51:	leave  
  40de52:	jge    0x40de31
  40de54:	add    DWORD PTR [ebp-0x3c],edx
  40de57:	ins    DWORD PTR es:[edi],dx
  40de58:	xchg   DWORD PTR [edi+eax*2+0x76],eax
  40de5c:	dec    ebp
  40de5d:	or     al,0xb4
  40de5f:	in     eax,0x91
  40de61:	add    BYTE PTR [edx],0x11
  40de64:	add    dh,BYTE PTR [eax+eax*2+0x66]
  40de68:	dec    ebp
  40de69:	adc    BYTE PTR [eax-0x2f],dh
  40de6c:	add    DWORD PTR [ecx],0xffffffbc
  40de6f:	or     al,0xe
  40de71:	add    bl,ch
  40de73:	call   0x7a743300
  40de78:	xor    al,0x4
  40de7a:	rcr    bh,0x80
  40de7d:	jl     0x40dea6
  40de7f:	loope  0x40deae
  40de81:	or     DWORD PTR [esp+ecx*2-0x2137afe6],esi
  40de88:	add    BYTE PTR [ecx],0x47
  40de8b:	mov    eax,0x343f13c2
  40de90:	mov    ebx,ebp
  40de92:	mov    esp,0x7156d89c
  40de97:	cmp    ax,0xf810
  40de9b:	loopne 0x40de9e
  40de9d:	add    BYTE PTR [edi],bh
  40de9f:	loope  0x40de29
  40dea1:	inc    esp
  40dea2:	xor    ebx,DWORD PTR [edx-0x1ec0fffc]
  40dea8:	add    DWORD PTR [ebx+0x0],eax
	...
  40deb6:	add    BYTE PTR [eax],al
  40deb8:	add    BYTE PTR [edx-0x38],dh
  40debb:	out    dx,eax
  40debc:	add    esi,DWORD PTR [edx-0x40]
  40debf:	adc    al,ah
  40dec1:	or     BYTE PTR [ebx-0x37bb3e60],0xce
  40dec8:	cs inc edi
  40deca:	loopne 0x40de63
  40decc:	push   ebp
  40decd:	enter  0xf2ea,0xc3
  40ded1:	dec    ebx
  40ded2:	rol    BYTE PTR [edx],0xc4
  40ded5:	sbb    cl,BYTE PTR [ebx-0x37bb3e60]
  40dedb:	jo     0x40df1b
  40dedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dede:	jmp    0xb507:0xe1970c14
  40dee5:	cdq    
  40dee6:	add    ah,BYTE PTR ds:0xe7c83fb0
  40deec:	add    edi,DWORD PTR [edx-0x4dac747c]
  40def2:	test   BYTE PTR [ebx+0x53],bh
  40def5:	js     0x40df6b
  40def7:	fild   QWORD PTR [ebx-0x4b991277]
  40defd:	daa    
  40defe:	test   DWORD PTR [ebx+0x2c],ecx
  40df01:	xor    eax,0x58afd547
  40df06:	jbe    0x40deeb
  40df08:	or     BYTE PTR [ebp+0x73],ch
  40df0b:	out    dx,eax
  40df0c:	call   0xcadf6899
  40df11:	jle    0x40dece
  40df13:	out    0xe8,eax
  40df15:	sbb    esp,0x60
  40df18:	ds daa 
  40df1a:	dec    eax
  40df1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df1c:	stos   DWORD PTR es:[edi],eax
	...
  40df29:	add    BYTE PTR [eax],al
  40df2b:	add    BYTE PTR [eax],ch
  40df2d:	jmp    0xc3c2:0xc0a90347
  40df34:	jp     0x40debf
  40df36:	and    cl,al
  40df38:	inc    esp
  40df39:	enter  0x3e72,0x17
  40df3d:	or     BYTE PTR [eax],cl
  40df3f:	add    DWORD PTR [edi-0x20],ebp
  40df42:	add    cl,cl
  40df44:	pop    edx
  40df45:	jmp    0xec724047
  40df4a:	mov    ecx,esp
  40df4c:	hlt    
  40df4d:	test   ah,ah
  40df4f:	jmp    0xc241a790
  40df54:	sar    BYTE PTR [esp+eax*2],1
  40df57:	fldcw  WORD PTR [ebx+0x3b]
  40df5a:	inc    esp
  40df5b:	mov    ebp,0xf173e973
  40df60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df61:	push   0xfffffffa
  40df63:	mov    dh,0xec
  40df65:	ds dec esp
  40df67:	mov    ecx,0x1ee87ca0
  40df6c:	aaa    
  40df6d:	mov    ebp,0xe94b15d2
  40df72:	jae    0x40df09
  40df74:	mov    ebx,0xcc8e6412
  40df79:	sahf   
  40df7a:	shl    BYTE PTR [edi],0xec
  40df7d:	inc    dl
  40df7f:	in     eax,dx
  40df80:	cmp    al,0x9f
  40df82:	dec    ebx
  40df83:	sub    DWORD PTR [esp+eax*4+0x6cb842e4],0xc226e9e8
  40df8e:	sbb    esp,0x0
	...
  40df9c:	add    BYTE PTR [eax],al
  40df9e:	add    BYTE PTR [eax-0x3fd78b17],ch
  40dfa4:	ins    BYTE PTR es:[edi],dx
  40dfa5:	call   0x8202f793
  40dfaa:	les    edx,FWORD PTR [eax-0x72268b17]
  40dfb0:	je     0x40dfae
  40dfb2:	inc    ecx
  40dfb3:	fwait
  40dfb4:	fs std 
  40dfb6:	adc    BYTE PTR cs:[ecx],ch
  40dfb9:	pop    edi
  40dfba:	(bad)  
  40dfbb:	jmp    0x40dfc3
  40dfbd:	or     eax,0xe46bb9e9
  40dfc2:	jmp    0x6328a31e
  40dfc7:	cmp    ecx,eax
  40dfc9:	add    BYTE PTR [eax],al
  40dfcb:	lea    edi,[edi+0x10]
  40dfce:	dec    DWORD PTR [ebx+0x5d008f21]
  40dfd4:	jg     0x40dfba
  40dfd6:	rol    DWORD PTR [esi-0x3e],0x50
  40dfda:	call   0x3e7f9d
  40dfdf:	outs   dx,DWORD PTR ds:[esi]
  40dfe0:	sbb    ah,0x8b
  40dfe3:	jae    0x40dffd
  40dfe5:	mov    esi,DWORD PTR [ebp+0x2]
  40dfe8:	dec    edx
  40dfe9:	push   esi
  40dfea:	lods   eax,DWORD PTR ds:[esi]
  40dfeb:	dec    ebp
  40dfec:	adc    eax,0xc4f645c7
  40dff1:	add    BYTE PTR [eax],al
  40dff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff4:	inc    edi
  40dff5:	inc    ebp
  40dff6:	loopne 0x40e04e
  40dff8:	inc    edi
  40dff9:	inc    ebp
  40dffa:	hlt    
  40dffb:	xchg   dx,ax
  40dffd:	std    
  40dffe:	jne    0x40dfae
  40e000:	dec    esp
  40e001:	out    dx,eax
  40e002:	sti    
	...
  40e00f:	add    BYTE PTR [eax],al
  40e011:	add    BYTE PTR [ecx+0x2ac00b35],dh
  40e017:	enter  0x7d81,0xa
  40e01b:	lds    esi,FWORD PTR [esi+eax*1+0x15]
  40e01f:	mov    eax,0xde7b00e0
  40e024:	cmp    BYTE PTR [ebp-0x3a],0xc4
  40e028:	je     0x40e032
  40e02a:	loope  0x40dfdb
  40e02c:	loopne 0x40e016
  40e02e:	inc    ebx
  40e02f:	lahf   
  40e030:	std    
  40e031:	push   ecx
  40e033:	scas   eax,DWORD PTR es:[edi]
  40e034:	fsub   st(0),st
  40e036:	cmp    al,0x36
  40e038:	(bad)  
  40e039:	inc    DWORD PTR [ecx]
  40e03b:	mov    al,0xfc
  40e03d:	call   0x3e7f75
  40e042:	cmp    eax,0x5f5f5c0c
  40e047:	or     eax,0x90ad000a
  40e04c:	loopne 0x40dff9
  40e04e:	inc    ecx
  40e04f:	mov    ah,ah
  40e051:	cmp    DWORD PTR [edi],0x3c
  40e054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e055:	dec    DWORD PTR [edi+ebp*8-0xdec837a]
  40e05c:	cmp    BYTE PTR [esp+esi*4+0x72fefe2c],bl
  40e063:	mov    ebp,0x5cf1ff82
  40e068:	lods   eax,DWORD PTR ds:[esi]
  40e069:	out    0x3d,eax
  40e06b:	xchg   esp,eax
  40e06c:	scas   eax,DWORD PTR es:[edi]
  40e06d:	(bad)  
  40e06e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e06f:	lock add DWORD PTR [eax],eax
  40e072:	aas    
  40e073:	lahf   
  40e074:	dec    edi
  40e075:	leave  
	...
  40e082:	add    BYTE PTR [eax],al
  40e084:	add    ch,bh
  40e086:	add    eax,0xfdb45502
  40e08b:	add    ebx,0xfffffff7
  40e08e:	mov    esi,0xf14f7c83
  40e093:	ss or  dh,bh
  40e096:	lock add DWORD PTR [eax],eax
  40e099:	aas    
  40e09a:	mov    ?,WORD PTR [ecx-0x4f0eb43f]
  40e0a0:	dec    esp
  40e0a1:	das    
  40e0a2:	or     dl,ah
  40e0a4:	mov    bh,dl
  40e0a6:	loopne 0x40e060
  40e0a8:	and    al,0x53
  40e0aa:	pop    esp
  40e0ab:	inc    ecx
  40e0ac:	add    BYTE PTR [esi+0x3f69b4ac],dh
  40e0b2:	pop    esi
  40e0b3:	xor    eax,0xf9dc70f0
  40e0b8:	out    0x57,eax
  40e0ba:	or     eax,0x4bcfeb1
  40e0bf:	adc    al,BYTE PTR [eax]
  40e0c1:	shr    ah,cl
  40e0c3:	sbb    eax,DWORD PTR [ecx]
  40e0c5:	in     eax,0xc
  40e0c7:	mov    cl,0x74
  40e0c9:	aaa    
  40e0ca:	jns    0x40e0a6
  40e0cc:	pop    ebx
  40e0cd:	inc    eax
  40e0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0cf:	scas   eax,DWORD PTR es:[edi]
  40e0d0:	je     0x40e125
  40e0d2:	sahf   
  40e0d3:	xor    eax,0x21e42708
  40e0d8:	jmp    FWORD PTR [eax]
  40e0da:	enter  0x4770,0x23
  40e0de:	out    0x94,eax
  40e0e0:	pop    ss
  40e0e1:	sbb    BYTE PTR [ebp-0x21],bl
  40e0e4:	fwait
  40e0e5:	push   cs
  40e0e6:	xchg   DWORD PTR [esi],ecx
  40e0e8:	mov    cl,0x0
	...
  40e0f6:	add    BYTE PTR [eax],al
  40e0f8:	or     DWORD PTR [ebp-0x25],ebx
  40e0fb:	mov    al,0x8b
  40e0fd:	ror    BYTE PTR [edi],1
  40e0ff:	test   eax,0x7af6e799
  40e104:	jnp    0x40e0e6
  40e106:	out    dx,al
  40e107:	ss push ebx
  40e109:	out    0x5c,eax
  40e10b:	cld    
  40e10c:	fadd   DWORD PTR [eax]
  40e10e:	aas    
  40e10f:	mov    cl,0xd9
  40e111:	out    0x5c,al
  40e113:	sbb    al,dl
  40e115:	pop    esp
  40e116:	fistp  WORD PTR [ebx-0x4f39793b]
  40e11c:	mov    ch,0x8c
  40e11e:	rol    DWORD PTR [eax+esi*2-0x43ffc438],cl
  40e125:	fs stos DWORD PTR es:[edi],eax
  40e127:	(bad)  
  40e128:	sub    al,0xd5
  40e12a:	push   0x2e
  40e12c:	mov    ds:0x640913cc,eax
  40e131:	or     BYTE PTR [edi],dh
  40e133:	mov    ebx,0x62e7bb7e
  40e138:	dec    esp
  40e139:	push   ebp
  40e13a:	sub    DWORD PTR [esi+ebp*2],eax
  40e13d:	out    dx,eax
  40e13e:	rol    BYTE PTR [esi+0x77],0x5d
  40e142:	out    dx,al
  40e143:	fdiv   QWORD PTR [eax+0x4cc5a086]
  40e149:	enter  0x2e6a,0x63
  40e14d:	int3   
  40e14e:	aam    0x1
  40e150:	pop    eax
  40e151:	pop    esp
  40e152:	sti    
  40e153:	mov    al,0xcb
  40e155:	iret   
  40e156:	aas    
  40e157:	and    al,0xe8
  40e159:	out    0x46,al
  40e15b:	jp     0x40e15d
	...
  40e169:	add    BYTE PTR [eax],al
  40e16b:	sti    
  40e16c:	(bad)  
  40e16e:	add    edi,DWORD PTR [edi]
  40e170:	mov    DWORD PTR [eax],0x64a3d4e9
  40e176:	cs out dx,eax
  40e178:	push   eax
  40e179:	inc    esp
  40e17a:	sbb    eax,0xfbe9e703
  40e17f:	iret   
  40e180:	pop    esp
  40e181:	adc    al,0x16
  40e183:	dec    ecx
  40e184:	shr    al,1
  40e186:	cdq    
  40e187:	outs   dx,DWORD PTR ds:[esi]
  40e188:	in     eax,0xfd
  40e18a:	jb     0x40e1f5
  40e18c:	fadd   QWORD PTR [edi+0x398e6ae5]
  40e192:	je     0x40e138
  40e194:	push   edi
  40e195:	out    0x62,eax
  40e197:	cmp    DWORD PTR [ecx+eax*4+0xd5b3b21],0xe8dc16de
  40e1a2:	rcr    BYTE PTR [eiz*8-0x78fcfd03],1
  40e1a9:	(bad)  
  40e1aa:	stos   DWORD PTR es:[edi],eax
  40e1ab:	daa    
  40e1ac:	enter  0x3c81,0xef
  40e1b0:	int3   
  40e1b1:	or     eax,0xfde5186c
  40e1b6:	jmp    0x182ac840
  40e1bb:	and    al,0x7c
  40e1bd:	hlt    
  40e1be:	jb     0x40e207
  40e1c0:	and    al,BYTE PTR [edx]
  40e1c2:	sub    al,0xcb
  40e1c4:	outs   dx,DWORD PTR ds:[esi]
  40e1c5:	add    BYTE PTR [ecx],bh
  40e1c7:	fcomp  DWORD PTR [eax+ecx*1-0x6f]
  40e1cb:	leave  
  40e1cc:	cmp    ch,0x7e
	...
  40e1db:	add    BYTE PTR [eax],al
  40e1dd:	add    BYTE PTR [eax+0x3676145c],ch
  40e1e3:	shr    al,1
  40e1e5:	jne    0x40e1e0
  40e1e7:	in     al,0xfd
  40e1e9:	jo     0x40e1e1
  40e1eb:	adc    ebp,DWORD PTR [ebx-0x17]
  40e1ee:	test   eax,0x1656145c
  40e1f3:	shr    al,1
  40e1f5:	mov    al,ds:0xfde694
  40e1fa:	int    0x86
  40e1fc:	adc    al,0x83
  40e1fe:	aas    
  40e1ff:	int3   
  40e200:	jae    0x40e211
  40e202:	imul   ebx,DWORD PTR [edi-0x573c170c],0x90dfffd
  40e20c:	pop    edi
  40e20d:	leave  
  40e20e:	rol    BYTE PTR fs:[eax],0xff
  40e212:	mov    bl,0xd0
  40e214:	std    
  40e215:	jne    0x40e229
  40e217:	ss jne 0x40e1e6
  40e21a:	cmp    DWORD PTR [edi-0x1e8c00f4],ebx
  40e220:	in     eax,0x93
  40e222:	call   0x164ce15c
  40e227:	lahf   
  40e228:	or     eax,0xe62083ff
  40e22d:	jle    0x40e1b4
  40e22f:	xor    eax,0x95a62bff
  40e234:	mov    edx,0x3b45c8d2
  40e23a:	jnp    0x40e270
  40e23c:	jo     0x40e1cb
  40e23e:	stc    
  40e23f:	lahf   
  40e240:	sbb    bh,bh
	...
  40e24e:	add    BYTE PTR [eax],al
  40e250:	add    BYTE PTR [ebx-0x40],dh
  40e253:	std    
  40e254:	jne    0x40e234
  40e256:	xor    eax,0x9fd90c75
  40e25b:	or     al,ch
  40e25d:	inc    eax
  40e25e:	ss (bad) 
  40e260:	call   FWORD PTR [ebp+0x44850f08]
  40e266:	retf   
  40e267:	add    BYTE PTR [eax],al
  40e269:	mov    ecx,0x2be8f49f
  40e26e:	test   eax,0x87dfffd
  40e273:	pop    edi
  40e274:	leave  
  40e275:	xchg   esp,eax
  40e276:	mov    esp,0xcb18e900
  40e27b:	add    BYTE PTR [eax],al
  40e27d:	in     eax,0x97
  40e27f:	cld    
  40e280:	or     eax,0x3388ee3f
  40e285:	ds out dx,eax
  40e287:	add    DWORD PTR [ebx],ebp
  40e289:	inc    eax
  40e28a:	ja     0x40e271
  40e28c:	add    BYTE PTR [edi],bh
  40e28e:	icebp  
  40e28f:	jp     0x40e2e5
  40e291:	sub    esp,DWORD PTR [edi+0x5]
  40e294:	mov    edx,0x69b22c3c
  40e299:	aas    
  40e29a:	and    DWORD PTR [edi+0x3fb94774],ebp
  40e2a0:	pop    ebx
  40e2a1:	adc    BYTE PTR [ebx+0x3d080017],bh
  40e2a7:	push   ss
  40e2a8:	dec    DWORD PTR [edx-0xf5d6627]
  40e2ae:	loop   0x40e25b
  40e2b0:	mov    al,BYTE PTR [edx+0x388305]
	...
  40e2c2:	add    BYTE PTR [eax],al
  40e2c4:	aas    
  40e2c5:	pop    esp
  40e2c6:	(bad)  
  40e2c7:	(bad)  
  40e2c8:	push   0x5
  40e2ca:	popf   
  40e2cb:	(bad)  
  40e2cc:	pop    ebp
  40e2cd:	add    ch,BYTE PTR [edx+ebp*1-0x3e466501]
  40e2d4:	xor    esi,ecx
  40e2d6:	clc    
  40e2d7:	ror    DWORD PTR [ebx-0xc],1
  40e2da:	call   0xfa89:0x1f13feb
  40e2e1:	or     al,0x1b
  40e2e3:	add    BYTE PTR [eax+0x2aff189c],ch
  40e2e9:	fstp   DWORD PTR [ecx-0x53bd6f8e]
  40e2ef:	mov    al,BYTE PTR [edx]
  40e2f1:	in     eax,0x80
  40e2f3:	cmp    BYTE PTR [edi],bh
  40e2f5:	mov    esp,0x650afefb
  40e2fa:	pushf  
  40e2fb:	into   
  40e2fc:	frstor [ecx-0x55]
  40e2ff:	sub    bh,BYTE PTR [edi-0x46]
  40e302:	mov    ecx,0xacf153c1
  40e307:	xor    al,0x2b
  40e309:	enter  0x4374,0x3f
  40e30d:	push   ebx
  40e30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e30f:	fwait
  40e310:	lds    ecx,FWORD PTR [ebp-0x2b9f7ec1]
  40e316:	sub    BYTE PTR [ebx+edi*1+0x396b19af],ah
  40e31d:	enter  0x3e7,0x28
  40e321:	fldcw  WORD PTR [edx-0x64]
  40e324:	push   ecx
  40e325:	push   ecx
  40e326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e327:	mov    ds:0x0,eax
	...
  40e334:	add    BYTE PTR [eax],al
  40e336:	add    BYTE PTR [ebp-0x3a1ef08c],bh
  40e33c:	mov    WORD PTR [ebx],cs
  40e33e:	jmp    0x1dfd3be
  40e343:	adc    al,0xb1
  40e345:	ret    0xb5d1
  40e348:	mov    WORD PTR [ebx],ss
  40e34a:	fld    DWORD PTR [ebx-0x18c08d18]
  40e350:	inc    esi
  40e351:	sub    ecx,esp
  40e353:	mov    ebp,0xefb4e3f0
  40e358:	(bad)  
  40e359:	cmp    al,0xa4
  40e35b:	(bad)  
  40e35c:	jl     0x40e321
  40e35e:	js     0x40e3db
  40e360:	lock adc al,BYTE PTR [edi-0x1d]
  40e364:	push   esi
  40e365:	in     al,0x78
  40e367:	jnp    0x40e351
  40e369:	rol    BYTE PTR [eax],cl
  40e36b:	les    ecx,FWORD PTR [ebx+eax*8-0x4943d454]
  40e372:	ss fwait
  40e374:	ja     0x40e324
  40e376:	ss aaa 
  40e378:	lock dec eax
  40e37a:	mov    ah,0x99
  40e37c:	loop   0x40e370
  40e37e:	ret    
  40e37f:	or     edx,ebx
  40e381:	xchg   esi,eax
  40e382:	ss xchg ebx,eax
  40e384:	out    dx,eax
  40e385:	xor    al,0x22
  40e387:	and    dl,0xd2
  40e38a:	ret    
  40e38b:	sbb    DWORD PTR [ecx],edx
  40e38d:	stos   BYTE PTR es:[edi],al
  40e38e:	pop    ss
  40e38f:	aas    
  40e390:	push   ecx
  40e391:	add    DWORD PTR [edi+ecx*4],ebp
  40e394:	dec    ebp
  40e395:	rcr    DWORD PTR [ecx+edi*8-0x5],1
  40e399:	push   eax
  40e39a:	je     0x40e39c
	...
  40e3a8:	add    BYTE PTR [eax],al
  40e3aa:	add    DWORD PTR [eax],eax
  40e3ac:	push   ecx
  40e3ad:	mov    ebx,0x56fa40b4
  40e3b2:	fwait
  40e3b3:	dec    edi
  40e3b4:	inc    esp
  40e3b5:	cmp    DWORD PTR [ebx+0x2e51dc5b],edx
  40e3bb:	cmp    ch,0x3e
  40e3be:	mov    edi,0x70e9d064
  40e3c3:	ret    
  40e3c4:	sub    DWORD PTR [esp+esi*8-0x14018e1f],0x491ed45c
  40e3cf:	add    dh,bh
  40e3d1:	pushf  
  40e3d2:	or     bl,ah
  40e3d4:	jae    0x40e3b7
  40e3d6:	sar    DWORD PTR [eax+ebx*1+0x6],cl
  40e3da:	xor    DWORD PTR [eax],eax
  40e3dc:	jmp    0xfe238bcc
  40e3e1:	scas   al,BYTE PTR es:[edi]
  40e3e2:	xlat   BYTE PTR ds:[ebx]
  40e3e3:	fs clc 
  40e3e5:	fidivr WORD PTR [esi-0x5b19010a]
  40e3eb:	loop   0x40e460
  40e3ed:	aad    0xb3
  40e3ef:	ficomp WORD PTR [edi-0x2a]
  40e3f2:	xchg   esp,eax
  40e3f3:	sbb    DWORD PTR [eax],eax
  40e3f5:	jmp    0xb09eac36
  40e3fa:	xor    DWORD PTR [ebp-0x12cfec00],0xd06eb655
  40e404:	call   0xfe224f6c
  40e409:	adc    edx,edx
  40e40b:	data16 aas 
  40e40d:	jmp    0x40e412
	...
  40e41a:	add    BYTE PTR [eax],al
  40e41c:	add    ch,ah
  40e41e:	pop    esp
  40e41f:	or     BYTE PTR [ecx-0x16ff7052],al
  40e425:	and    DWORD PTR [ecx],0x8e6b0074
  40e42b:	mov    edx,0xc6c56e
  40e431:	push   esi
  40e432:	cs jne 0x40e43d
  40e435:	mov    esi,0xe1ff70c3
  40e43a:	ins    BYTE PTR es:[edi],dx
  40e43b:	repnz arpl WORD PTR [edi+0x5e75fdc5],sp
  40e442:	jbe    0x40e42c
  40e444:	jge    0x40e3e5
  40e446:	lds    eax,FWORD PTR [eax]
  40e448:	or     esp,DWORD PTR [esi-0x69]
  40e44b:	add    ebx,DWORD PTR [edi+0x6f]
  40e44e:	or     al,BYTE PTR [esi]
  40e450:	add    BYTE PTR [edx-0x27],dh
  40e453:	mov    ebp,0xff2d51b9
  40e458:	push   DWORD PTR [esi+edi*2]
  40e45b:	xor    eax,0xff24ab07
  40e460:	jne    0x40e480
  40e462:	cmp    eax,0xc51648ba
  40e467:	or     eax,eax
  40e469:	jnp    0x40e433
  40e46b:	pop    ebp
  40e46c:	leave  
  40e46d:	and    al,0xe4
  40e46f:	std    
  40e470:	addr16 cmc 
  40e472:	sar    BYTE PTR [edi],0x0
  40e475:	rcl    DWORD PTR [edi-0x5cf117f8],1
  40e47b:	add    BYTE PTR [eax],al
  40e47d:	int    0x4
  40e47f:	jne    0x40e48a
	...
  40e48d:	add    BYTE PTR [eax],al
  40e48f:	add    cl,dh
  40e491:	xchg   edi,eax
  40e492:	or     al,0x8f
  40e494:	fucomi st,st(0)
  40e496:	mov    WORD PTR [ecx-0x5a],es
  40e499:	mov    esp,0xcc67642e
  40e49e:	std    
  40e49f:	jne    0x40e43f
  40e4a1:	cmp    al,0x2c
  40e4a3:	dec    ecx
  40e4a4:	xchg   esi,eax
  40e4a5:	les    ecx,FWORD PTR [ecx]
  40e4a7:	sar    BYTE PTR [ebx],0xe3
  40e4aa:	(bad)  
  40e4ab:	jne    0x40e44f
  40e4ad:	pop    ebp
  40e4ae:	add    al,0x40
  40e4b0:	aas    
  40e4b1:	ins    BYTE PTR es:[edi],dx
  40e4b2:	inc    esp
  40e4b3:	add    BYTE PTR [edi],dl
  40e4b5:	adc    al,0x1e
  40e4b7:	inc    ecx
  40e4b8:	aas    
  40e4b9:	dec    edx
  40e4ba:	xor    DWORD PTR [eax],ecx
  40e4bc:	addr16 cli 
  40e4be:	cmp    al,0x0
  40e4c0:	aas    
  40e4c1:	out    0xc1,al
  40e4c3:	je     0x40e4fb
  40e4c5:	jb     0x40e4f7
  40e4c7:	or     al,0xc8
  40e4c9:	repz cmp eax,0x69eefe8d
  40e4cf:	add    BYTE PTR [edi],bh
  40e4d1:	out    dx,eax
  40e4d2:	add    DWORD PTR [edi+0x76],ebx
  40e4d5:	lods   al,BYTE PTR ds:[esi]
  40e4d6:	stc    
  40e4d7:	call   DWORD PTR [ebx-0x47d6aa6]
  40e4dd:	xchg   ebp,eax
  40e4de:	dec    edi
  40e4df:	push   edi
  40e4e0:	xchg   edi,eax
  40e4e1:	test   BYTE PTR [esi],ah
  40e4e3:	inc    ecx
  40e4e4:	aas    
  40e4e5:	scas   al,BYTE PTR es:[edi]
  40e4e6:	xor    BYTE PTR [eax],cl
  40e4e8:	daa    
  40e4e9:	mov    BYTE PTR [eax+eax*1],bh
  40e4ec:	aas    
  40e4ed:	fcmovb st,st(1)
  40e4ef:	je     0x40e532
  40e4f1:	push   ss
  40e4f2:	dec    eax
  40e4f3:	leave  
	...
  40e500:	add    BYTE PTR [eax],al
  40e502:	add    ch,bh
  40e504:	in     eax,0x1
  40e506:	inc    eax
  40e507:	vhaddps xmm0,xmm0,XMMWORD PTR [edi-0x46]
  40e50d:	add    al,0xa4
  40e50f:	mov    edi,0xe5750217
  40e514:	test   DWORD PTR [ecx],ebx
  40e516:	out    dx,eax
  40e517:	pop    esp
  40e518:	mov    al,0x4
  40e51a:	dec    DWORD PTR [edx-0x27]
  40e51d:	cdq    
  40e51e:	mov    bh,0x76
  40e520:	icebp  
  40e521:	add    DWORD PTR [ebx],ecx
  40e523:	push   DWORD PTR [edx+eax*1+0x5f]
  40e527:	sbb    DWORD PTR [eax],ebx
  40e529:	mov    DWORD PTR [ebx],0x8255a3f
  40e52f:	xchg   esp,eax
  40e530:	rol    DWORD PTR [esi+edi*1-0x7ff66aca],cl
  40e537:	pop    eax
  40e538:	enter  0x2ff4,0x2b
  40e53c:	dec    eax
  40e53d:	(bad)  
  40e53f:	or     al,0xcf
  40e541:	addr16 jmp 0x8422392c
  40e547:	cmp    DWORD PTR [ebp-0x5],edi
  40e54a:	(bad)  
  40e54b:	lock sahf 
  40e54d:	pop    es
  40e54e:	das    
  40e54f:	cmp    al,0x6
  40e551:	out    dx,eax
  40e552:	jecxz  0x40e54d
  40e554:	inc    edi
  40e555:	scas   eax,DWORD PTR es:[edi]
  40e556:	add    edx,edx
  40e558:	add    BYTE PTR [edi],ch
  40e55a:	aas    
  40e55b:	push   ebx
  40e55c:	enter  0x3e7,0x3f
  40e560:	pop    es
  40e561:	lods   eax,DWORD PTR ds:[esi]
  40e562:	stos   DWORD PTR es:[edi],eax
  40e563:	inc    eax
  40e564:	(bad)  
  40e566:	add    eax,DWORD PTR [eax]
	...
  40e574:	add    BYTE PTR [eax],al
  40e576:	les    ebx,FWORD PTR [edi+ebp*8-0x64]
  40e57a:	test   DWORD PTR [eax-0x1],ecx
  40e57d:	loopne 0x40e532
  40e57f:	mov    bl,0x6a
  40e581:	daa    
  40e582:	and    ecx,eax
  40e584:	mov    ah,0x15
  40e586:	adc    BYTE PTR [ebp-0x37c0fce1],al
  40e58c:	out    0x2e,eax
  40e58e:	sub    eax,DWORD PTR [edi]
  40e590:	lods   eax,DWORD PTR ds:[esi]
  40e591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e592:	aas    
  40e593:	enter  0x3e7,0xe4
  40e597:	mov    edx,0xc8f73efe
  40e59c:	out    0x3,eax
  40e59e:	aas    
  40e59f:	push   ebp
  40e5a0:	loope  0x40e563
  40e5a2:	cmp    DWORD PTR [eax-0x3824c0da],ebp
  40e5a8:	out    0x3,eax
  40e5aa:	aas    
  40e5ab:	dec    eax
  40e5ac:	pop    ds
  40e5ad:	dec    eax
  40e5ae:	push   edx
  40e5af:	(bad)
  40e5b2:	(bad)  
  40e5b3:	repnz out 0xc0,al
  40e5b6:	add    esp,eax
  40e5b8:	out    0x3,eax
  40e5ba:	aas    
  40e5bb:	enter  0x266a,0xab
  40e5bf:	enter  0x3c00,0x3a
  40e5c3:	push   es
  40e5c4:	push   es
  40e5c5:	or     esi,edi
  40e5c7:	inc    edi
  40e5c8:	ds jmp 0x1ccafe2f
  40e5ce:	mov    esi,ecx
  40e5d0:	sbb    al,0x69
  40e5d2:	xchg   edi,eax
  40e5d3:	mov    esi,0x5dbcf773
  40e5d8:	dec    eax
	...
  40e5e6:	add    BYTE PTR [eax],al
  40e5e8:	add    BYTE PTR [ecx],ah
  40e5ea:	mov    eax,0x523e9255
  40e5ef:	inc    esi
  40e5f0:	call   0x6986abd9
  40e5f5:	fidiv  WORD PTR [si+0x5c]
  40e5f9:	pop    es
  40e5fa:	pop    DWORD PTR [ebp+0x69]
  40e5fd:	push   edi
  40e5fe:	fidiv  WORD PTR [esi+esi*1+0x7f]
  40e602:	xor    esp,0xffffffe9
  40e605:	cmp    al,0xc8
  40e607:	add    BYTE PTR [edx+0x61],dh
  40e60a:	ror    BYTE PTR [ecx+0x22f324bc],1
  40e610:	imul   edx,DWORD PTR [edi],0xfecd73b2
  40e616:	mov    BYTE PTR [eax],0x26
  40e619:	popa   
  40e61a:	aam    0x56
  40e61c:	adc    ebx,ebp
  40e61e:	(bad)  
  40e620:	push   ss
  40e621:	add    ebx,DWORD PTR [esi]
  40e623:	je     0x40e60c
  40e625:	xchg   DWORD PTR [esi-0x39],edi
  40e628:	sub    esi,eax
  40e62a:	fisttp QWORD PTR [edx+0x43dd7ff6]
  40e630:	std    
  40e631:	and    BYTE PTR [eax+0x3e],cl
  40e634:	jmp    0x5d3ee562
  40e639:	(bad)  
  40e63a:	jae    0x40e624
  40e63c:	in     eax,dx
  40e63d:	mov    ds:0x7936fdde,al
  40e642:	(bad)  
  40e644:	in     eax,0x3c
  40e646:	jae    0x40e5d1
  40e648:	add    BYTE PTR [edx+0xc8c249],cl
	...
  40e65a:	add    BYTE PTR [eax],al
  40e65c:	push   eax
  40e65d:	lea    eax,[ecx+0x74c9827d]
  40e663:	or     DWORD PTR ds:0x674b40ef,esp
  40e669:	les    eax,FWORD PTR [eax]
  40e66b:	jne    0x40e60d
  40e66d:	xchg   BYTE PTR [esi-0x37],bl
  40e670:	aam    0xb4
  40e672:	add    BYTE PTR [ebx+0x537b823],cl
  40e678:	jp     0x40e6da
  40e67a:	inc    eax
  40e67b:	add    BYTE PTR [ecx+0x4a],bl
  40e67e:	mov    ds:0x37c95601,eax
  40e683:	add    eax,0x405f26
  40e688:	dec    ecx
  40e689:	dec    edx
  40e68a:	xchg   edi,eax
  40e68b:	add    DWORD PTR [esi-0x37],edx
  40e68e:	aaa    
  40e68f:	add    eax,0x406092
  40e694:	sbb    DWORD PTR [edx-0x75],ecx
  40e697:	add    DWORD PTR [esi],esp
  40e699:	leave  
  40e69a:	mov    eax,DWORD PTR [ebp+0x72]
  40e69d:	je     0x40e62a
  40e69f:	inc    ebp
  40e6a0:	outs   dx,BYTE PTR ds:[esi]
  40e6a1:	je     0x40e62e
  40e6a3:	inc    ebp
  40e6a4:	push   0x74
  40e6a6:	std    
  40e6a7:	xor    eax,0x40601a
  40e6ac:	sub    DWORD PTR [edi+0x2c68e810],edx
  40e6b2:	(bad)  
  40e6b3:	call   FWORD PTR [ebx+0x6b50e887]
  40e6b9:	xchg   esp,ebp
  40e6bb:	push   eax
  40e6bc:	pop    ebx
  40e6bd:	xchg   eax,esi
  40e6bf:	push   eax
	...
  40e6cc:	add    BYTE PTR [eax],al
  40e6ce:	add    cl,ch
  40e6d0:	xlat   BYTE PTR ds:[ebx]
  40e6d1:	inc    ecx
  40e6d2:	lea    esp,[edi-0x298a0238]
  40e6d8:	inc    eax
  40e6d9:	mov    ds:0x8d25e9f8,al
  40e6de:	inc    ebp
  40e6df:	aas    
  40e6e0:	adc    edx,DWORD PTR [edx-0x73]
  40e6e3:	add    cl,BYTE PTR [edi]
  40e6e5:	push   edx
  40e6e6:	(bad)  
  40e6e7:	cli    
  40e6e8:	or     dl,BYTE PTR [edx-0x1]
  40e6eb:	jb     0x40e69c
  40e6ed:	ja     0x40e72f
  40e6ef:	aas    
  40e6f0:	push   ss
  40e6f1:	xor    DWORD PTR [eax],edx
  40e6f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6f4:	push   0x2590fea9
  40e6f9:	xor    esp,esp
  40e6fb:	mov    eax,0xafed0a3
  40e700:	adc    esi,DWORD PTR [edi+0x44]
  40e703:	xchg   edi,eax
  40e704:	and    eax,0xef3fd041
  40e709:	add    DWORD PTR [eax],eax
  40e70b:	mov    edx,0xd54fb8a3
  40e710:	out    dx,eax
  40e711:	pop    ss
  40e712:	add    ch,ah
  40e714:	out    dx,al
  40e715:	pop    ss
  40e716:	add    ch,ah
  40e718:	out    dx,al
  40e719:	js     0x40e75f
  40e71b:	jae    0x40e73b
  40e71d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e71e:	adc    al,0xfe
  40e720:	sub    DWORD PTR [ebp+0x0],eax
  40e723:	inc    esp
  40e724:	mov    cl,0xf6
  40e726:	add    DWORD PTR [ebp-0x10],0x1
  40e72a:	add    BYTE PTR [esp+ebx*1+0x6d31ffd2],bh
  40e731:	add    DWORD PTR [ecx],eax
	...
  40e73f:	add    BYTE PTR [eax],al
  40e741:	add    BYTE PTR [edi],bh
  40e743:	icebp  
  40e744:	jp     0x40e792
  40e746:	add    esp,edi
  40e748:	cmp    ah,ah
  40e74a:	cmp    BYTE PTR [edx-0x53],ah
  40e74d:	inc    DWORD PTR [eax]
  40e74f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e751:	mov    dh,BYTE PTR [edx-0x5f]
  40e754:	jp     0x40e7d2
  40e756:	adc    edx,DWORD PTR [edi+0x38]
  40e759:	int3   
  40e75a:	fsub   st(7),st
  40e75c:	mov    dl,0xa3
  40e75e:	loopne 0x40e7bc
  40e760:	mov    ch,0x8e
  40e762:	add    ch,0xa6
  40e765:	je     0x40e756
  40e767:	enter  0xedcf,0x82
  40e76b:	enter  0x80e7,0x43
  40e76f:	fsubr  st(7),st
  40e771:	hlt    
  40e772:	mov    esp,0x3f03e80a
  40e777:	inc    edi
  40e778:	inc    ebp
  40e779:	mov    ah,0xa8
  40e77b:	retf   0xc063
  40e77e:	mov    al,ds:0x1b80e7db
  40e783:	in     al,0xe7
  40e785:	hlt    
  40e786:	mov    esp,0x3f03e81e
  40e78b:	fist   DWORD PTR [eax+ebp*4]
  40e78e:	cwde   
  40e78f:	fnstenv ds:0x255179a5
  40e795:	mov    esp,0xa5835571
  40e79a:	movdqu XMMWORD PTR [edi],xmm5
  40e79e:	imul   esi,eax,0xffffffde
  40e7a1:	inc    esp
  40e7a2:	pop    eax
  40e7a3:	(bad)  
  40e7a5:	aaa    
	...
  40e7b2:	add    BYTE PTR [eax],al
  40e7b4:	add    bl,bl
  40e7b6:	mov    bh,ah
  40e7b8:	fwait
  40e7b9:	pop    esp
  40e7ba:	test   edi,esp
  40e7bc:	add    ebp,edi
  40e7be:	outs   dx,DWORD PTR ds:[esi]
  40e7bf:	mov    ds:0x4ec87e1f,eax
  40e7c4:	das    
  40e7c5:	pop    es
  40e7c6:	lock ins DWORD PTR es:[edi],dx
  40e7c8:	cmp    eax,0xc3f2c83f
  40e7cd:	lods   al,BYTE PTR ds:[esi]
  40e7ce:	sar    BYTE PTR [edi-0x18765cb0],0x9b
  40e7d5:	clc    
  40e7d6:	test   bh,ah
  40e7d8:	add    ebp,DWORD PTR [edi+0x70]
  40e7db:	mov    edx,0x16c87e1f
  40e7e0:	das    
  40e7e1:	pop    es
  40e7e2:	lock cmp DWORD PTR [edi+edi*1],0x6cc3f2c8
  40e7ea:	ror    BYTE PTR [edi+0x895b48],0xe9
  40e7f1:	mov    ah,0x2e
  40e7f3:	inc    esp
  40e7f4:	jmp    0x42a96035
  40e7f9:	pop    ds
  40e7fa:	mov    DWORD PTR [eax],eax
  40e7fc:	ficom  WORD PTR [ecx]
  40e7fe:	adc    cl,ch
  40e800:	daa    
  40e801:	jp     0x40e7cb
  40e803:	add    dl,ah
  40e805:	jl     0x40e85a
  40e807:	inc    ebx
  40e808:	push   ecx
  40e809:	inc    ebx
  40e80a:	enter  0x7fed,0xdb
  40e80e:	push   ebx
  40e80f:	or     al,0xc1
  40e811:	inc    ebp
  40e812:	jg     0x40e811
  40e814:	scas   al,BYTE PTR es:[edi]
  40e815:	fist   DWORD PTR [ebx+0x7438]
	...
  40e827:	add    ch,bh
  40e829:	(bad)  
  40e82a:	std    
  40e82b:	adc    al,0x87
  40e82d:	loop   0x40e838
  40e82f:	xor    ah,BYTE PTR [edx-0x58eb0227]
  40e835:	fnstenv [ebx+0x7d]
  40e838:	mov    ds:0x6f910c53,eax
  40e83d:	jge    0x40e83c
  40e83f:	jbe    0x40e7e4
  40e841:	push   ebx
  40e842:	lock outs dx,BYTE PTR ds:[esi]
  40e844:	and    eax,esi
  40e846:	std    
  40e847:	fcom   QWORD PTR [eax-0x1e]
  40e84a:	and    eax,edx
  40e84c:	fscale 
  40e84f:	(bad)  
  40e851:	fidiv  DWORD PTR [ebx+0x2d]
  40e854:	fist   DWORD PTR [esp+ecx*1+0x51]
  40e858:	cmp    edi,DWORD PTR [ebp-0x3]
  40e85b:	fist   DWORD PTR ds:[eax+ecx*8+0x41]
  40e860:	hlt    
  40e861:	jnp    0x40e860
  40e863:	cs jnp 0x40e8e0
  40e866:	(bad)  
  40e867:	sub    ebp,DWORD PTR [eax+ecx*8]
  40e86a:	push   ebx
  40e86b:	jb     0x40e815
  40e86d:	inc    esi
  40e86e:	lds    eax,FWORD PTR [ecx]
  40e870:	mov    edi,0xebe4145c
  40e875:	inc    esp
  40e876:	adc    al,BYTE PTR [eax]
  40e878:	xlat   BYTE PTR ds:[ebx]
  40e879:	lds    eax,FWORD PTR [eax]
  40e87b:	lea    ebx,[ebx-0x5472b1d7]
  40e881:	sub    eax,0x219b8d4e
  40e886:	dec    esi
  40e887:	push   0xffffffd4
  40e889:	es jne 0x40e89c
	...
  40e898:	add    BYTE PTR [eax],al
  40e89a:	add    dh,ch
  40e89c:	jecxz  0x40e894
  40e89e:	call   DWORD PTR [ecx-0x580782bf]
  40e8a4:	mov    dh,0x83
  40e8a6:	repz xchg esi,eax
  40e8a8:	lds    eax,FWORD PTR [eax]
  40e8aa:	jmp    FWORD PTR [ebx+0x40]
  40e8ad:	pop    DWORD PTR [ebp-0x2a]
  40e8b0:	lods   al,BYTE PTR ds:[esi]
  40e8b1:	sbb    al,0x64
  40e8b3:	addr16 (bad) 
  40e8b5:	std    
  40e8b6:	jne    0x40e85e
  40e8b8:	sub    al,0xa4
  40e8ba:	inc    ebp
  40e8bb:	xchg   esi,eax
  40e8bc:	lds    ecx,FWORD PTR [ecx]
  40e8be:	shl    BYTE PTR [ecx+0x50],0xd6
  40e8c2:	add    BYTE PTR [esi-0x3b],ah
  40e8c5:	mov    eax,DWORD PTR [ebp-0x16]
  40e8c8:	xchg   ebx,eax
  40e8c9:	mov    eax,DWORD PTR [ebp-0x42]
  40e8cc:	xchg   esp,eax
  40e8cd:	mov    eax,DWORD PTR [ebp-0x2e]
  40e8d0:	xchg   ebx,eax
  40e8d1:	push   0x0
  40e8d3:	loope  0x40e893
  40e8d5:	adc    al,ch
  40e8d7:	clc    
  40e8d8:	cmp    eax,0xa6d5ffff
  40e8dd:	clc    
  40e8de:	add    DWORD PTR [ecx],esp
  40e8e0:	push   eax
  40e8e1:	mov    dh,0x0
  40e8e3:	vpcmpeqw ymm5,ymm0,YMMWORD PTR es:[edx-0x54]
  40e8e9:	in     eax,0x63
  40e8eb:	xlat   BYTE PTR ds:[ebx]
  40e8ec:	(bad)  
  40e8ed:	call   0x105d43f
  40e8f2:	or     esp,DWORD PTR [esi-0x4b]
  40e8f5:	and    DWORD PTR [ebx-0x72ff3aea],0xffffffdb
  40e8fc:	xor    BYTE PTR [esi-0x73],cl
	...
  40e90b:	add    BYTE PTR [eax],al
  40e90d:	add    BYTE PTR [edi],bh
  40e90f:	sub    al,0x9a
  40e911:	dec    edi
  40e912:	ret    0x9e23
  40e915:	dec    edi
  40e916:	push   ebp
  40e917:	out    dx,al
  40e918:	mov    ds:0x53b74f74,al
  40e91d:	cmc    
  40e91e:	fcom   st(1)
  40e920:	xchg   BYTE PTR [edi+edx*8-0x12],bh
  40e924:	adc    al,BYTE PTR [ebp+0x1eebc]
  40e92a:	mov    ah,0xa3
  40e92c:	cwde   
  40e92d:	(bad)  
  40e92e:	outs   dx,DWORD PTR ds:[esi]
  40e92f:	bound  ecx,QWORD PTR [eax-0x14]
  40e932:	ret    0x98a3
  40e935:	dec    edi
  40e936:	mov    edx,0xb24f9cab
  40e93b:	mov    ds:0xeb254fa0,eax
  40e940:	mov    ds:0x8d072f74,al
  40e945:	cmc    
  40e946:	mov    BYTE PTR [ecx],ah
  40e948:	xchg   DWORD PTR [edi+eax*4-0x11],edi
  40e94c:	sbb    BYTE PTR [edi-0x80],bl
  40e94f:	jmp    0x40e92e
  40e951:	mov    esi,?
  40e953:	out    dx,al
  40e954:	mov    ds:0xcb4168fe,al
  40e959:	add    al,0xff
  40e95b:	imul   eax,DWORD PTR [eax+eax*1+0x58],0x51
  40e960:	mov    ds:0x45e378fe,al
  40e965:	(bad)  
  40e966:	(bad)  
  40e967:	out    dx,al
  40e968:	mov    ds:0xa27940fe,al
  40e96d:	je     0x40e9a2
  40e96f:	mov    al,BYTE PTR [ebx]
  40e971:	cld    
	...
  40e97e:	add    BYTE PTR [eax],al
  40e980:	add    BYTE PTR [eax],dh
  40e982:	xchg   edx,ecx
  40e984:	inc    esp
  40e985:	pop    ss
  40e986:	loope  0x40e989
  40e988:	add    BYTE PTR [edi],bh
  40e98a:	(bad)  
  40e98b:	loopne 0x40e9c8
  40e98d:	retf   0x220
  40e990:	dec    DWORD PTR [ebx+0x7f3c85c8]
  40e996:	enter  0x4474,0x3f
  40e99a:	xlat   BYTE PTR ds:[ebx]
  40e99b:	xchg   ebx,eax
  40e99c:	jecxz  0x40e95b
  40e99e:	xchg   ebp,eax
  40e99f:	stos   DWORD PTR es:[edi],eax
  40e9a0:	nop
  40e9a1:	jg     0x40e96b
  40e9a3:	push   cs
  40e9a4:	pop    ss
  40e9a5:	push   eax
  40e9a6:	pusha  
  40e9a7:	int    0x5b
  40e9a9:	and    al,cl
  40e9ab:	ins    BYTE PTR es:[edi],dx
  40e9ac:	dec    eax
  40e9ad:	out    0x78,eax
  40e9af:	not    BYTE PTR [edi]
  40e9b1:	jecxz  0x40e98a
  40e9b3:	je     0x40e9c4
  40e9b5:	enter  0xef5d,0xab
  40e9b9:	cmp    al,dl
  40e9bb:	fisub  WORD PTR [ecx+0x3f80a87]
  40e9c1:	or     al,BYTE PTR [ebx-0x44]
  40e9c4:	test   DWORD PTR [esp+eiz*8-0x3a],edi
  40e9c8:	pop    ss
  40e9c9:	aaa    
  40e9ca:	loopne 0x40ea0c
  40e9cc:	cmp    DWORD PTR [eax-0x3c0bbe29],ebx
  40e9d2:	lea    esi,[edi-0x10a277cc]
  40e9d8:	stos   DWORD PTR es:[edi],eax
  40e9d9:	xchg   ebp,eax
  40e9da:	jge    0x40e97a
  40e9dc:	mov    eax,ds:0x81d0845
  40e9e1:	xchg   BYTE PTR [edx],cl
  40e9e3:	loopne 0x40e9e8
	...
  40e9f1:	add    BYTE PTR [eax],al
  40e9f3:	add    ch,dl
  40e9f5:	mov    bh,0xf
  40e9f7:	mov    ecx,0x8ee788dd
  40e9fc:	add    ebx,eax
  40e9fe:	pop    ss
  40e9ff:	lods   al,BYTE PTR ds:[esi]
  40ea00:	and    dh,BYTE PTR [ebp+0x6e]
  40ea03:	mov    eax,ds:0x7dd0835
  40ea08:	jbe    0x40ea14
  40ea0a:	lock add eax,DWORD PTR [eax]
  40ea0d:	lea    eax,[ebx+0x3]
  40ea10:	aas    
  40ea11:	enter  0x8ee7,0x83
  40ea15:	in     al,0x97
  40ea17:	mov    al,ds:0x94fc0ab
  40ea1c:	ja     0x40e9f5
  40ea1e:	add    BYTE PTR [esi],dh
  40ea20:	inc    edx
  40ea21:	or     BYTE PTR [ebp-0x19],dh
  40ea24:	ret    
  40ea25:	push   ebx
  40ea26:	in     al,dx
  40ea27:	jmp    0x296ab855
  40ea2c:	add    al,0x9
  40ea2e:	or     ecx,ebp
  40ea30:	sub    al,0xa3
  40ea32:	mov    DWORD PTR [edx],0x7ae8f940
  40ea38:	cmp    eax,0x30290989
  40ea3d:	fistp  WORD PTR [eax+0x6a]
  40ea40:	mov    bl,0xc7
  40ea42:	jae    0x40ea28
  40ea44:	xlat   BYTE PTR fs:[ebx]
  40ea46:	std    
  40ea47:	call   0xe9393588
  40ea4c:	push   eax
  40ea4d:	into   
  40ea4e:	sub    DWORD PTR [ecx-0x16f6f77b],ebp
  40ea54:	and    ebx,DWORD PTR [ebx+0x288b]
	...
  40ea66:	add    BYTE PTR [ebx],bh
  40ea68:	inc    ebp
  40ea69:	inc    esp
  40ea6a:	int    0x4c
  40ea6c:	xlat   BYTE PTR ds:[ebx]
  40ea6d:	jae    0x40ea50
  40ea6f:	in     al,0xe5
  40ea71:	push   ebp
  40ea72:	scas   al,BYTE PTR es:[edi]
  40ea73:	fisttp WORD PTR [ecx-0x7]
  40ea76:	call   0xa1c2b7a3
  40ea7b:	inc    edx
  40ea7c:	pop    ebp
  40ea7d:	push   es
  40ea7e:	push   0x51
  40ea80:	in     al,0x0
  40ea82:	adc    al,0x35
  40ea84:	mov    ds:0xce7ab0c0,eax
  40ea89:	add    BYTE PTR [ecx+eax*1-0x1c],ch
  40ea8d:	push   eax
  40ea8e:	jbe    0x40eab9
  40ea90:	shr    al,0x9c
  40ea93:	pop    es
  40ea94:	xlat   BYTE PTR ds:[ebx]
  40ea95:	std    
  40ea96:	push   0xffffffa4
  40ea98:	(bad)  
  40ea99:	je     0x40ea7f
  40ea9b:	ret    
  40ea9c:	fld    QWORD PTR [edx]
  40ea9e:	fadd   QWORD PTR [esi+0x49]
  40eaa1:	jl     0x40eae0
  40eaa3:	cmp    al,0x5b
  40eaa5:	push   es
  40eaa6:	add    BYTE PTR [ebp+0xc],cl
  40eaa9:	leave  
  40eaaa:	ret    0xca0e
  40eaad:	mov    eax,DWORD PTR [ebp+0x7a]
  40eab0:	cdq    
  40eab1:	std    
  40eab2:	jne    0x40ead2
  40eab4:	and    ch,BYTE PTR [ebx+0xb285957]
  40eaba:	rcl    bl,0xbf
  40eabd:	cmp    DWORD PTR [ebp+0x3a],0xfd0673c9
  40eac4:	or     ecx,ecx
  40eac6:	ret    0xc9ee
  40eac9:	mov    eax,DWORD PTR [ebp+0x0]
	...
  40ead8:	add    BYTE PTR [eax],al
  40eada:	dec    edx
  40eadb:	cdq    
  40eadc:	std    
  40eadd:	jne    0x40eabd
  40eadf:	and    DWORD PTR [edi-0x7cca26a9],ecx
  40eae5:	clc    
  40eae6:	push   ss
  40eae7:	scas   eax,DWORD PTR es:[edi]
  40eae8:	push   es
  40eae9:	sbb    DWORD PTR [ebx],0x18
  40eaec:	(bad)  
  40eaed:	je     0x40ea8f
  40eaef:	loop   0x40eaae
  40eaf1:	leave  
  40eaf2:	aam    0xc4
  40eaf4:	add    BYTE PTR [ebp-0xb1e7ad],cl
  40eafa:	push   ebx
  40eafb:	(bad)  
  40eafc:	call   0xff761c73
  40eb01:	or     esi,0xffffffec
  40eb04:	je     0x40eb0c
  40eb06:	adc    eax,0x5300eca7
  40eb0b:	into   
  40eb0c:	sub    eax,eax
  40eb0e:	lahf   
  40eb0f:	or     al,BYTE PTR [esi]
  40eb11:	add    BYTE PTR [ebx],cl
  40eb13:	jg     0x40eb01
  40eb15:	push   eax
  40eb16:	mov    ecx,0x33e808af
  40eb1b:	popf   
  40eb1c:	std    
  40eb1d:	jmp    ebp
  40eb1f:	xor    ebx,DWORD PTR [esi]
  40eb21:	jne    0x40eb83
  40eb23:	dec    edx
  40eb24:	jge    0x40eb12
  40eb26:	push   esi
  40eb27:	mov    al,0x6
  40eb29:	sub    esp,DWORD PTR [esi+0x3]
  40eb2c:	ror    BYTE PTR [eax],0x3f
  40eb2f:	fist   WORD PTR [eax+0x280f1b44]
  40eb35:	and    BYTE PTR [eax],ah
  40eb37:	adc    al,0xa
  40eb39:	call   0xfee029dc
	...
  40eb4a:	add    BYTE PTR [eax],al
  40eb4c:	add    dl,al
  40eb4e:	and    ebp,DWORD PTR [esi+0xa1c084f]
  40eb54:	call   0xfee00047
  40eb59:	mov    esp,0x447203a6
  40eb5e:	bound  ebx,QWORD PTR [edx+eax*1+0x7c82ed70]
  40eb65:	rcr    esi,cl
  40eb67:	sbb    BYTE PTR [esi],al
  40eb69:	and    al,0x9f
  40eb6b:	retf   
  40eb6c:	rol    DWORD PTR [edi-0x21],0x62
  40eb70:	aaa    
  40eb71:	mov    edx,0x7a8d021f
  40eb76:	sti    
  40eb77:	xor    DWORD PTR [edx+0x67],ebp
  40eb7a:	neg    BYTE PTR [eax]
  40eb7c:	or     BYTE PTR [edi-0x5700ca36],ah
  40eb82:	xchg   BYTE PTR [ecx-0x6f210048],bl
  40eb88:	inc    esp
  40eb89:	stos   DWORD PTR es:[edi],eax
  40eb8a:	scas   al,BYTE PTR es:[edi]
  40eb8b:	sub    al,BYTE PTR [ecx]
  40eb8d:	nop
  40eb8e:	xchg   ebx,eax
  40eb8f:	adc    bh,bh
  40eb91:	adc    ah,bh
  40eb93:	test   eax,0x9f2d896b
  40eb98:	enter  0xd67d,0x1
  40eb9c:	push   ebp
  40eb9d:	les    ecx,FWORD PTR [edx-0x7d]
  40eba0:	ret    
  40eba1:	imul   esi,DWORD PTR [ebx+0x48],0xfffffffc
  40eba5:	getsec 
  40eba7:	rcl    DWORD PTR [edx+0x58],cl
  40ebaa:	push   ebp
  40ebab:	sahf   
  40ebac:	je     0x40ec01
  40ebae:	pop    ebp
  40ebaf:	sbb    BYTE PTR [eax+eax*1],cl
	...
  40ebbe:	add    BYTE PTR [eax],al
  40ebc0:	push   edi
  40ebc1:	or     eax,0xc740ff39
  40ebc6:	bnd ret 
  40ebc8:	lods   al,BYTE PTR ds:[esi]
  40ebc9:	ret    
  40ebca:	pop    esi
  40ebcb:	sbb    BYTE PTR [edi-0x2d],al
  40ebce:	fcomp  QWORD PTR [edi-0x61b26fe0]
  40ebd4:	and    eax,eax
  40ebd6:	daa    
  40ebd7:	sbb    BYTE PTR [edi],bh
  40ebd9:	shl    DWORD PTR [edi+ebx*4-0x61655ae8],cl
  40ebe0:	or     DWORD PTR [edx],eax
  40ebe2:	sub    cl,BYTE PTR [edi]
  40ebe4:	aas    
  40ebe5:	jge    0x40ec59
  40ebe7:	scas   eax,DWORD PTR es:[edi]
  40ebe8:	stc    
  40ebe9:	pop    ebp
  40ebea:	jmp    0x40eb97
  40ebec:	ins    DWORD PTR es:[edi],dx
  40ebed:	jae    0x40ec05
  40ebef:	sahf   
  40ebf0:	xor    eax,0xe1e29408
  40ebf5:	pop    ebp
  40ebf6:	xlat   BYTE PTR ds:[ebx]
  40ebf7:	xor    esp,edi
  40ebf9:	leave  
  40ebfa:	sahf   
  40ebfb:	sahf   
  40ebfc:	sar    DWORD PTR [eax+0x7f],1
  40ebff:	pop    ebp
  40ec00:	test   BYTE PTR [eax-0x4fb46119],cl
  40ec06:	out    0x17,al
  40ec08:	push   ebx
  40ec09:	js     0x40ebe9
  40ec0b:	pop    ss
  40ec0c:	inc    edi
  40ec0d:	loopne 0x40ec6e
  40ec0f:	test   BYTE PTR [ecx+0x698bfd3],ch
  40ec15:	rol    esi,cl
  40ec17:	retf   
  40ec18:	jle    0x40ebd6
  40ec1a:	out    0x36,eax
  40ec1c:	(bad)  
  40ec1d:	in     al,0x3f
  40ec1f:	add    al,0x3f
  40ec21:	jecxz  0x40ec90
  40ec23:	sub    al,0x0
	...
  40ec31:	add    BYTE PTR [eax],al
  40ec33:	jl     0x40ec9c
  40ec35:	sub    BYTE PTR [eax+edi*2],al
  40ec38:	pop    ebp
  40ec39:	jmp    0x40ec64
  40ec3b:	push   ebp
  40ec3c:	rcr    DWORD PTR [esp+ecx*1],cl
  40ec3f:	push   edi
  40ec40:	sbb    BYTE PTR [edi-0x189f9e63],cl
  40ec46:	add    ebp,DWORD PTR [eax+0x12]
  40ec49:	adc    al,dl
  40ec4b:	fisttp QWORD PTR [eax+0x5cabe900]
  40ec51:	or     al,0x3
  40ec53:	inc    ebp
  40ec54:	shl    BYTE PTR [ebx-0xf],cl
  40ec57:	in     al,0x2f
  40ec59:	(bad)  
  40ec5a:	pop    esi
  40ec5b:	shr    BYTE PTR [edx+0x0],cl
  40ec5e:	jmp    0x2aaa013e
  40ec63:	pop    esi
  40ec64:	mov    DWORD PTR [eax],eax
  40ec66:	inc    esi
  40ec67:	xor    ah,al
  40ec69:	push   0xffffffdd
  40ec6b:	mov    bl,0x5b
  40ec6d:	or     BYTE PTR [ecx-0x43],al
  40ec70:	sar    ebp,1
  40ec72:	cs push ebx
  40ec74:	enter  0x1600,0x99
  40ec78:	imul   ecx,esp,0xffffff8a
  40ec7b:	jge    0x40ec45
  40ec7d:	std    
  40ec7e:	pushf  
  40ec7f:	cmp    BYTE PTR [esi+0x1c],bl
  40ec82:	push   cs
  40ec83:	dec    eax
  40ec84:	shr    al,0x92
  40ec87:	mov    ebx,0x3c91fdd1
  40ec8c:	enter  0x37ed,0x1b
  40ec90:	pop    es
  40ec91:	bound  ebp,QWORD PTR [eax-0xa8c2cc4]
	...
  40eca3:	add    BYTE PTR [eax],al
  40eca5:	add    BYTE PTR [esi-0x59],ah
  40eca8:	std    
  40eca9:	push   esp
  40ecaa:	inc    ebx
  40ecab:	loopne 0x40ed01
  40ecad:	(bad)  
  40ecae:	retf   
  40ecaf:	shr    DWORD PTR [eax-0x17],1
  40ecb2:	cmp    al,0xe3
  40ecb4:	mov    esi,0x3f656f51
  40ecb9:	jmp    0x434d4871
  40ecbe:	sahf   
  40ecbf:	shl    DWORD PTR [ebx-0x1f],1
  40ecc2:	aam    0x93
  40ecc4:	std    
  40ecc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecc6:	(bad)  
  40ecc8:	ret    0x3cf1
  40eccb:	jge    0x40ec56
  40eccd:	test   DWORD PTR [edi+0x3b03fd06],edi
  40ecd3:	pop    esi
  40ecd4:	xor    al,BYTE PTR [eax]
  40ecd6:	sar    DWORD PTR [ecx-0x642417f8],0xfd
  40ecdd:	(bad)  
  40ecde:	fisttp WORD PTR [ecx-0x5fc59704]
  40ece4:	aas    
  40ece5:	add    BYTE PTR [ecx-0x1c17f746],ah
  40eceb:	xor    al,0xff
  40eced:	call   DWORD PTR [ecx+0xbfffcba]
  40ecf3:	mov    esi,0x34b9b0e8
  40ecf8:	dec    ecx
  40ecfa:	fs leave 
  40ecfc:	add    BYTE PTR [ebp-0x63],dl
  40ecff:	and    DWORD PTR [ebx+0x9f52c4],eax
  40ed05:	push   0x15
  40ed07:	xor    eax,0x875
	...
  40ed18:	add    BYTE PTR [esi-0x67],cl
  40ed1b:	push   ebp
  40ed1c:	call   DWORD PTR [ecx+0x3e]
  40ed1f:	inc    ebp
  40ed20:	cld    
  40ed21:	mov    esi,0xe64164b8
  40ed26:	xor    al,0x75
  40ed28:	or     BYTE PTR [esi],ch
  40ed2a:	sar    esi,1
  40ed2c:	call   ecx
  40ed2e:	sub    eax,0xbbd1fc75
  40ed33:	or     al,ch
  40ed35:	and    DWORD PTR [ebp+0xaeffffd],edx
  40ed3b:	add    al,BYTE PTR [eax]
  40ed3d:	imul   eax,DWORD PTR [ecx-0x16],0xffffff83
  40ed41:	fidiv  DWORD PTR [eax+ebp*2]
  40ed44:	add    ah,ch
  40ed46:	idiv   esi
  40ed48:	jne    0x40ecd8
  40ed4a:	sbb    eax,0x2dd15723
  40ed4f:	mov    DWORD PTR [ebp-0x2e],eax
  40ed52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed53:	jnp    0x40edb9
  40ed55:	daa    
  40ed56:	int3   
  40ed57:	std    
  40ed58:	jne    0x40edc8
  40ed5a:	sbb    eax,0x3a3ffeeb
  40ed5f:	call   0xfe63:0x77c73f69
  40ed66:	fisubr WORD PTR [ecx]
  40ed68:	mov    ebx,ebx
  40ed6a:	lahf   
  40ed6b:	add    al,0xff
  40ed6d:	adc    al,dl
  40ed6f:	dec    esp
  40ed70:	inc    ecx
  40ed71:	aas    
  40ed72:	inc    edi
  40ed73:	mov    ecx,0xd6a385b
  40ed78:	shr    BYTE PTR [ebx+0x448bb2],0x0
	...
  40ed8b:	add    BYTE PTR [edi],ah
  40ed8d:	pop    es
  40ed8e:	pop    eax
  40ed8f:	mov    ebx,0x29df7f
  40ed94:	aas    
  40ed95:	jp     0x40edf1
  40ed97:	addr16 cld 
  40ed99:	std    
  40ed9a:	inc    esp
  40ed9b:	add    BYTE PTR [eax],cl
  40ed9d:	adc    al,0x9a
  40ed9f:	dec    BYTE PTR [edx+0x7831a9e7]
  40eda5:	stos   BYTE PTR es:[edi],al
  40eda6:	cdq    
  40eda7:	addr16 mov cl,0x72
  40edaa:	inc    esp
  40edab:	add    BYTE PTR [edi-0x21],dl
  40edae:	add    edi,ebp
  40edb0:	mov    eax,ds:0x7e62c646
  40edb5:	fistp  WORD PTR [edx+0x10d1d774]
  40edbb:	or     bh,dl
  40edbd:	neg    BYTE PTR [edx]
  40edbf:	inc    eax
  40edc1:	loope  0x40edd3
  40edc3:	clc    
  40edc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc5:	pop    edi
  40edc6:	cmp    al,0xff
  40edc8:	mov    al,0xf1
  40edca:	adc    ah,bh
  40edcc:	test   al,0x73
  40edce:	or     al,0xe8
  40edd0:	stos   DWORD PTR es:[edi],eax
  40edd1:	cwde   
  40edd2:	cdq    
  40edd3:	inc    BYTE PTR [esi-0x140001e4]
  40edd9:	push   ebp
  40edda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eddb:	add    BYTE PTR [ebx+0x15002c1a],0xdc
  40ede2:	call   0xa7b:0x8fc84774
  40ede9:	rcr    DWORD PTR [esi-0x2bfc74],1
  40edef:	ins    BYTE PTR es:[edi],dx
	...
  40edfc:	add    BYTE PTR [eax],al
  40edfe:	add    ah,bl
  40ee00:	xchg   bh,ah
  40ee02:	call   0xd051:0x238fbfd3
  40ee09:	jle    0x40eda5
  40ee0b:	rcl    ebx,cl
  40ee0d:	jbe    0x40ee1f
  40ee0f:	aaa    
  40ee10:	loopne 0x40edbc
  40ee12:	xor    DWORD PTR [eax],edi
  40ee14:	shl    BYTE PTR [eax],1
  40ee16:	lds    edi,FWORD PTR [eax+ecx*8]
  40ee19:	mov    ah,0x8e
  40ee1b:	adc    al,0x4c
  40ee1d:	sub    al,0x97
  40ee1f:	xchg   esi,eax
  40ee20:	enter  0xd1c1,0x19
  40ee24:	push   esi
  40ee25:	out    dx,eax
  40ee26:	stos   DWORD PTR es:[edi],eax
  40ee27:	cdq    
  40ee28:	jbe    0x40ee68
  40ee2a:	call   0x64cd:0x2b3385b7
  40ee31:	test   al,0x3
  40ee33:	clc    
  40ee34:	push   ebp
  40ee35:	out    dx,eax
  40ee36:	stos   DWORD PTR es:[edi],eax
  40ee37:	and    esi,ecx
  40ee39:	push   ds
  40ee3a:	call   0xc06b:0x9a1355e9
  40ee41:	push   DWORD PTR [edx+esi*2-0x31]
  40ee45:	push   es
  40ee46:	int3   
  40ee47:	inc    ah
  40ee49:	out    0x30,eax
  40ee4b:	mov    ah,0xdc
  40ee4d:	push   0xffffffbf
  40ee4f:	les    esp,FWORD PTR [edx-0x19]
  40ee52:	sub    eax,0xc5ccf70
  40ee57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee58:	xchg   esi,eax
  40ee59:	xor    eax,0x2d41a999
  40ee5e:	cwde   
  40ee5f:	sbb    BYTE PTR [esp+eax*2],cl
  40ee62:	inc    ebx
	...
  40ee6f:	add    BYTE PTR [eax],al
  40ee71:	add    BYTE PTR [edi],bh
  40ee73:	iret   
  40ee74:	cmp    al,0xc
  40ee76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee77:	into   
  40ee78:	mov    esp,0xcf8999
  40ee7d:	cmp    al,0xa7
  40ee7f:	into   
  40ee80:	jae    0x40ee63
  40ee82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee83:	push   0xd6a656
  40ee88:	ret    
  40ee89:	in     eax,0x3c
  40ee8b:	jne    0x40ee16
  40ee8d:	test   DWORD PTR [edx+0x4303fd0b],edi
  40ee93:	bound  edi,QWORD PTR [eax]
  40ee95:	xchg   BYTE PTR [eax-0x40],al
  40ee98:	call   0xfe0ffd81
  40ee9d:	pusha  
  40ee9e:	add    ah,cl
  40eea0:	push   0x895fa5
  40eea5:	inc    ax
  40eea7:	shr    al,0x2c
  40eeaa:	ror    ch,1
  40eeac:	std    
  40eead:	push   esi
  40eeae:	xor    ah,cl
  40eeb0:	std    
  40eeb1:	aam    0x44
  40eeb3:	loopne 0x40eee5
  40eeb5:	lahf   
  40eeb6:	mov    bh,0xcd
  40eeb8:	(bad)  
  40eeb9:	sub    edi,DWORD PTR [edi]
  40eebb:	enter  0x6253,0xd7
  40eebf:	int    0x73
  40eec1:	frstor [ecx+edx*8-0x3e29d9a4]
  40eec8:	rcl    BYTE PTR [ebp-0x722a990f],0x7d
  40eecf:	enter  0x150,0xbe
  40eed3:	jb     0x40eed2
  40eed5:	push   es
	...
  40eee2:	add    BYTE PTR [eax],al
  40eee4:	add    BYTE PTR [ebx],cl
  40eee6:	iret   
  40eee7:	jae    0x40eec2
  40eee9:	or     al,0xcf
  40eeeb:	jae    0x40eece
  40eeed:	xchg   esp,eax
  40eeee:	mov    al,ds:0xe6d7eed5
  40eef3:	add    BYTE PTR [ecx-0x2a],0xcd
  40eef7:	(bad)  
  40eef8:	stos   DWORD PTR es:[edi],eax
  40eef9:	inc    eax
  40eefa:	enter  0x6253,0xd8
  40eefe:	dec    ecx
  40eeff:	(bad)
  40ef02:	bound  eax,QWORD PTR [eax]
  40ef04:	add    ah,ch
  40ef06:	repnz (bad) 
  40ef08:	jne    0x40ee98
  40ef0a:	and    ah,BYTE PTR [ebx-0x76d036ab]
  40ef10:	inc    ebp
  40ef11:	stos   BYTE PTR es:[edi],al
  40ef12:	cmp    edi,DWORD PTR ds:0x8b21eb
  40ef18:	or     BYTE PTR [ecx+0x3e7c74ca],0x2
  40ef1f:	bound  eax,QWORD PTR [ecx+0x66]
  40ef22:	xchg   edi,eax
  40ef23:	call   0x1051637
  40ef28:	or     edx,DWORD PTR [esi-0x41a8a242]
  40ef2e:	int3   
  40ef2f:	pop    edi
  40ef30:	jmp    FWORD PTR [ecx-0xc8b3f44]
  40ef36:	inc    edx
  40ef37:	inc    ebp
  40ef38:	clc    
  40ef39:	mov    DWORD PTR [esi+0x312c6af8],edi
  40ef3f:	jne    0x40ef49
  40ef41:	jle    0x40ef8a
  40ef43:	(bad)  
  40ef44:	(bad)  
  40ef45:	jns    0x40ef77
  40ef47:	jne    0x40ef41
	...
  40ef55:	add    BYTE PTR [eax],al
  40ef57:	add    ah,ch
  40ef59:	aad    0xfe
  40ef5b:	jne    0x40ef7b
  40ef5d:	and    bh,BYTE PTR [ecx-0x1]
  40ef60:	sub    DWORD PTR [eax],esi
  40ef62:	push   DWORD PTR [ebp+0x1e]
  40ef65:	fwait
  40ef66:	and    edi,edi
  40ef68:	rol    ecx,cl
  40ef6a:	call   0xff7138db
  40ef6f:	push   0x3fad47
  40ef74:	cmp    DWORD PTR [esi-0x73851708],edi
  40ef7a:	std    
  40ef7b:	(bad)  
  40ef7c:	fisttp QWORD PTR [ecx]
  40ef7e:	jb     0x40ef92
  40ef80:	(bad)  
  40ef81:	xor    BYTE PTR [ebp-0x8],dh
  40ef84:	jbe    0x40efbb
  40ef86:	jne    0x40ef90
  40ef88:	mov    ss,WORD PTR [ebp-0x2d]
  40ef8b:	(bad)  
  40ef8c:	aas    
  40ef8d:	imul   BYTE PTR [esi+esi*8-0x16a0210]
  40ef94:	or     al,BYTE PTR [edi]
  40ef96:	lods   eax,DWORD PTR ds:[esi]
  40ef97:	out    dx,al
  40ef98:	lock or eax,0x1f4cfb96
  40ef9e:	pop    esp
  40ef9f:	(bad)  
  40efa0:	js     0x40efc0
  40efa2:	xchg   esi,eax
  40efa3:	icebp  
  40efa4:	mov    eax,ds:0xc374fee7
  40efa9:	cs adc ah,bh
  40efac:	pusha  
  40efad:	lods   al,BYTE PTR ds:[esi]
  40efae:	or     al,0xe8
  40efb0:	repz xchg ebx,eax
  40efb2:	xchg   ebp,eax
  40efb3:	(bad)  
  40efb4:	lock pop ss
  40efb6:	ret    
  40efb7:	add    edi,DWORD PTR [edi]
  40efb9:	mov    ah,0x89
  40efbb:	jmp    0x40efbd
	...
  40efc9:	add    BYTE PTR [eax],al
  40efcb:	inc    eax
  40efcc:	int3   
  40efcd:	add    eax,0x95bb59e8
  40efd2:	inc    BYTE PTR [edi+ebx*4+0x10]
  40efd6:	sbb    eax,0x41206f97
  40efdb:	aas    
  40efdc:	rsm    
  40efde:	test   eax,0x4f957e74
  40efe3:	adc    BYTE PTR [edx+esi*8],cl
  40efe6:	dec    edi
  40efe7:	or     BYTE PTR [edx+ecx*1],dl
  40efea:	call   0xfed69d61
  40efef:	out    0x43,eax
  40eff1:	cs push eax
  40eff4:	xchg   edi,eax
  40eff5:	ret    0x3f0b
  40eff8:	adc    al,0x8b
  40effa:	jmp    0x40efb8
  40effc:	call   0x3a27:0xdf65569c
  40f003:	ror    BYTE PTR [ebx+0x9],1
  40f006:	call   0xfed8230c
  40f00b:	mov    dh,0x1b
  40f00d:	xchg   esi,eax
  40f00e:	mov    bh,BYTE PTR [edx-0x36]
  40f011:	cmp    eax,0x67c83f41
  40f016:	(bad)  
  40f017:	test   al,0x58
  40f019:	inc    eax
  40f01a:	sub    al,0x94
  40f01c:	arpl   WORD PTR [eax],bp
  40f01e:	add    al,0xf0
  40f020:	fistp  WORD PTR [ecx]
  40f022:	inc    esp
  40f023:	aas    
  40f024:	enter  0xc3f2,0xc
  40f028:	mov    WORD PTR [esi],ss
  40f02a:	lods   al,BYTE PTR ds:[esi]
  40f02b:	inc    ebx
  40f02c:	addr16 mov dh,0x96
	...
  40f03b:	add    BYTE PTR [eax],al
  40f03d:	add    BYTE PTR [ebp+0x8],al
  40f040:	xor    al,0xd2
  40f042:	mov    DWORD PTR [edx-0x300c6961],0x5261fa11
  40f04c:	fild   QWORD PTR [ebx-0x6971333e]
  40f052:	push   ecx
  40f053:	push   edx
  40f054:	jg     0x40f07f
  40f056:	sub    ecx,ebp
  40f058:	hlt    
  40f059:	or     edx,DWORD PTR [edi+0x4e]
  40f05c:	jbe    0x40eff4
  40f05e:	cmp    esp,ecx
  40f060:	hlt    
  40f061:	fwait
  40f062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f064:	data16 adc BYTE PTR [edi],dh
  40f067:	loopne 0x40f034
  40f069:	xchg   esi,eax
  40f06a:	and    esp,ecx
  40f06c:	push   esi
  40f06d:	adc    BYTE PTR [edi],dl
  40f06f:	loope  0x40f085
  40f071:	das    
  40f072:	adc    ah,cl
  40f074:	inc    ebx
  40f075:	ror    al,cl
  40f077:	adc    DWORD PTR [edi],edi
  40f079:	xchg   esi,eax
  40f07a:	add    esp,ecx
  40f07c:	cmp    DWORD PTR [ebp+0x30],esp
  40f07f:	ret    
  40f080:	mov    ah,0x5e
  40f082:	icebp  
  40f083:	push   ebp
  40f084:	and    edx,DWORD PTR [esi+0x790fc073]
  40f08a:	mov    ebx,cs
  40f08c:	push   ss
  40f08d:	ss push es
  40f08f:	pop    es
  40f090:	in     al,0x3
  40f092:	push   0x3f
  40f094:	adc    al,0x82
  40f096:	cld    
  40f097:	int3   
  40f098:	xchg   esi,eax
  40f099:	sub    DWORD PTR [edi],edi
  40f09b:	pop    esi
  40f09c:	add    BYTE PTR [edx+0x10854d1],dh
	...
  40f0ae:	add    BYTE PTR [eax],al
  40f0b0:	add    BYTE PTR [eax-0x4b190289],cl
  40f0b6:	test   ah,bh
  40f0b8:	jb     0x40f042
  40f0ba:	fiadd  WORD PTR [ebp+0x28]
  40f0bd:	inc    ebx
  40f0be:	dec    eax
  40f0bf:	ds jmp 0xc2a97905
  40f0c5:	pop    edi
  40f0c6:	mov    DWORD PTR [eax],eax
  40f0c8:	push   ss
  40f0c9:	shl    DWORD PTR [ebx],cl
  40f0cb:	ds jmp 0x3601b00d
  40f0d1:	pop    esi
  40f0d2:	jb     0x40f0bc
  40f0d4:	pop    edx
  40f0d5:	and    ecx,ebx
  40f0d7:	std    
  40f0d8:	bnd jl 0x40f132
  40f0db:	pop    ss
  40f0dc:	cmp    DWORD PTR [ebx],ebp
  40f0de:	enter  0x7e00,0xe9
  40f0e2:	bound  eax,QWORD PTR [ebx]
  40f0e4:	or     al,0xfc
  40f0e6:	(bad)  
  40f0e7:	push   eax
  40f0e8:	jle    0x40f11a
  40f0ea:	shr    al,0xea
  40f0ed:	push   edx
  40f0ee:	retf   
  40f0ef:	std    
  40f0f0:	cmp    edi,0xc766fd74
  40f0f6:	xchg   ebp,eax
  40f0f7:	shl    BYTE PTR [eax+0x56fdc9ca],0xad
  40f0fe:	sbb    al,0x39
  40f100:	out    0x41,al
  40f102:	or     dh,bh
  40f104:	mov    esp,0xf173c9b0
  40f109:	aam    0x9f
  40f10b:	push   esp
  40f10c:	shr    BYTE PTR ss:[ecx-0x39],cl
  40f110:	sub    edi,DWORD PTR [edi]
  40f112:	enter  0x7253,0x0
	...
  40f122:	add    BYTE PTR [eax],al
  40f124:	xchg   edi,eax
  40f125:	inc    ebp
  40f126:	lds    edx,FWORD PTR [ecx]
  40f128:	mov    esi,0x7da3f78b
  40f12d:	enter  0x9400,0xd0
  40f131:	inc    edx
  40f133:	add    dl,dl
  40f135:	(bad)  
  40f136:	push   0x0
  40f138:	lods   al,BYTE PTR ds:[esi]
  40f139:	(bad)  
  40f13a:	push   0xffffffff
  40f13c:	mov    cl,0xb9
  40f13e:	or     al,0x6a
  40f140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f141:	mov    al,ds:0xf4c2e800
  40f146:	std    
  40f147:	jmp    FWORD PTR [edi]
  40f149:	mov    bh,al
  40f14b:	(bad)  
  40f14c:	sti    
  40f14d:	sub    esp,esi
  40f14f:	lea    ecx,[eax+0x35]
  40f152:	dec    DWORD PTR [ecx+0x75ff305b]
  40f158:	jle    0x40f18d
  40f15a:	jne    0x40f158
  40f15c:	cld    
  40f15d:	xor    al,0xff
  40f15f:	jne    0x40f0f3
  40f161:	mov    al,ds:0x1e566a00
  40f166:	js     0x40f1a6
  40f168:	push   esi
  40f169:	(bad)  
  40f16a:	mov    eax,DWORD PTR [ebp-0x46]
  40f16d:	xchg   esi,eax
  40f16e:	push   0x0
  40f170:	cmp    al,0xc4
  40f172:	push   0x12
  40f174:	sub    al,0xc4
  40f176:	std    
  40f177:	jne    0x40f13b
  40f179:	xor    edx,DWORD PTR ds:0x855cf9
  40f17f:	test   esi,esp
  40f181:	les    ecx,FWORD PTR [eax+0xc61688]
  40f187:	mov    eax,DWORD PTR [eax]
	...
  40f195:	add    BYTE PTR [eax],al
  40f197:	jmp    0x40f1d2
  40f199:	mov    edx,DWORD PTR [edx]
  40f19b:	mov    ds:0xfc50f08a,eax
  40f1a0:	lds    ebp,FWORD PTR [edx+0x12]
  40f1a3:	in     al,dx
  40f1a4:	lds    ebp,FWORD PTR [eax+0x2a]
  40f1a7:	sti    
  40f1a8:	xchg   BYTE PTR [eax],al
  40f1aa:	(bad)  
  40f1ab:	mov    ebx,0x1652ff39
  40f1b0:	dec    ebx
  40f1b1:	mov    ebp,0x75350178
  40f1b6:	lock dec esi
  40f1b8:	mov    al,0x4e
  40f1ba:	(bad)  
  40f1bb:	aas    
  40f1bc:	mov    dl,0x8a
  40f1be:	inc    esp
  40f1bf:	out    0xe6,eax
  40f1c1:	shl    DWORD PTR [ebx+0x77],0xc2
  40f1c5:	push   cs
  40f1c6:	call   0xff6cf5a2
  40f1cb:	mov    eax,0xb0ec3e68
  40f1d0:	push   esp
  40f1d1:	xchg   ecx,eax
  40f1d2:	out    0xb9,eax
  40f1d4:	(bad)  
  40f1d5:	xchg   ecx,eax
  40f1d6:	(bad)  
  40f1d7:	mov    al,ds:0x12fe9c74
  40f1dc:	add    edx,DWORD PTR [edx+0x5078f74]
  40f1e2:	dec    edi
  40f1e3:	mov    BYTE PTR [edx],al
  40f1e5:	(bad)  
  40f1e6:	mov    edi,0x19e60b
  40f1eb:	aas    
  40f1ec:	add    dl,BYTE PTR [ebx-0x2]
  40f1ef:	jmp    0x9222:0xd9399e6
  40f1f6:	(bad)  
  40f1f7:	jmp    0x0:0x749236
	...
  40f20a:	imul   esi,DWORD PTR [edx],0x18
  40f20d:	or     BYTE PTR [edi+0x7b],ah
  40f210:	dec    DWORD PTR ss:[eax+0x42]
  40f214:	sbb    ah,ch
  40f216:	push   edi
  40f217:	sbb    al,0x38
  40f219:	(bad)  
  40f21a:	cmp    BYTE PTR [edx+0x17],dl
  40f21d:	lock daa 
  40f21f:	and    al,BYTE PTR [eax-0x1]
  40f222:	sub    BYTE PTR [esi+0x37],dl
  40f225:	hlt    
  40f226:	mov    ah,0xcc
  40f228:	xchg   edx,eax
  40f229:	je     0x40f23e
  40f22b:	jb     0x40f263
  40f22d:	or     BYTE PTR [eax],dl
  40f22f:	hlt    
  40f230:	(bad)  
  40f231:	out    0xcd,eax
  40f233:	sub    edx,DWORD PTR [ebx+0x9cf6fe]
  40f239:	add    BYTE PTR [edx+0x6afea066],dl
  40f23f:	jmp    0x40f1da
  40f241:	cli    
  40f242:	xchg   al,cl
  40f244:	es xchg ebx,eax
  40f246:	xor    eax,0x60dc9408
  40f24b:	mov    ecx,0x783f448c
  40f250:	dec    DWORD PTR [edx+0x3406c967]
  40f256:	push   edi
  40f257:	push   ecx
  40f258:	sub    BYTE PTR [edi+edi*1+0x60],al
  40f25c:	out    0x3,eax
  40f25e:	mov    al,ds:0x23e88009
  40f263:	xchg   edi,esp
  40f265:	xor    esp,DWORD PTR [eax+0x469bef52]
  40f26b:	dec    ebp
  40f26c:	(bad)  
  40f26d:	xchg   edx,eax
	...
  40f27a:	add    BYTE PTR [eax],al
  40f27c:	add    BYTE PTR [eax-0x766ccbaf],bl
  40f282:	enter  0x3c,0x97
  40f286:	add    DWORD PTR [ecx],esp
  40f288:	xchg   ebx,eax
  40f289:	jns    0x40f247
  40f28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f28c:	pop    ss
  40f28d:	es pusha 
  40f28f:	aad    0x28
  40f291:	inc    bh
  40f293:	aaa    
  40f294:	pushf  
  40f295:	push   cs
  40f296:	outs   dx,DWORD PTR ds:[esi]
  40f297:	sahf   
  40f298:	xchg   edx,eax
  40f299:	or     BYTE PTR [eax+0x1e],ah
  40f29c:	lds    edx,FWORD PTR [eax]
  40f29e:	enter  0x3ff,0x3f
  40f2a2:	fld    DWORD PTR [ebp+0x1b]
  40f2a5:	sbb    ah,BYTE PTR [ebx+0x28]
  40f2a8:	add    al,0x8f
  40f2aa:	(bad)  
  40f2ab:	cld    
  40f2ac:	sti    
  40f2ad:	sbb    BYTE PTR [esi-0x4ed66d0f],bl
  40f2b3:	test   al,0x38
  40f2b5:	and    al,cl
  40f2b7:	xor    ch,al
  40f2b9:	inc    eax
  40f2ba:	enter  0x7ebc,0x24
  40f2be:	dec    esp
  40f2bf:	and    ecx,DWORD PTR [edi-0x302e376a]
  40f2c5:	add    DWORD PTR [esi],edi
  40f2c7:	lock fwait
  40f2c9:	pop    ebp
  40f2ca:	sbb    al,BYTE PTR [ecx]
  40f2cc:	ss int 0x50
  40f2cf:	inc    ebx
  40f2d0:	sub    eax,0x9cfde24a
  40f2d5:	in     al,0xaf
  40f2d7:	jo     0x40f2f7
  40f2d9:	lods   eax,DWORD PTR ds:[esi]
  40f2da:	(bad)  
  40f2db:	push   0xffffffca
  40f2dd:	lods   eax,DWORD PTR ds:[esi]
  40f2de:	cmp    al,0x9
  40f2e0:	add    DWORD PTR [eax],eax
	...
  40f2ee:	add    BYTE PTR [eax],al
  40f2f0:	push   ss
  40f2f1:	(bad)  
  40f2f2:	std    
  40f2f3:	push   es
  40f2f4:	and    ah,ah
  40f2f6:	std    
  40f2f7:	je     0x40f2ad
  40f2f9:	scas   eax,DWORD PTR es:[edi]
  40f2fa:	pop    esp
  40f2fb:	test   dh,0xc6
  40f2fe:	std    
  40f2ff:	je     0x40f2b9
  40f301:	(bad)  
  40f302:	jae    0x40f2f5
  40f304:	les    eax,FWORD PTR [ebx+edx*2-0x22]
  40f308:	scas   al,BYTE PTR es:[edi]
  40f309:	nop
  40f30a:	ret    0x3ced
  40f30d:	sbb    eax,0x3caebd8a
  40f312:	or     eax,0xfe2143d1
  40f317:	mov    esi,0xd74877a
  40f31c:	push   ebx
  40f31d:	add    al,0x64
  40f31f:	sub    BYTE PTR [ebx+0x18],al
  40f322:	jmp    0xfe0806e4
  40f327:	cmp    DWORD PTR [ebx],edi
  40f329:	enter  0x8600,0xed
  40f32d:	cs dec esi
  40f32f:	add    al,0xfc
  40f331:	(bad)  
  40f332:	push   eax
  40f333:	xchg   BYTE PTR [eax],ch
  40f335:	shr    al,1
  40f337:	out    0x48,al
  40f339:	(bad)  
  40f33a:	std    
  40f33b:	xor    ebx,0xe46efe1a
  40f341:	mov    BYTE PTR [eax],cl
  40f343:	jmp    0x6b2d46b1
  40f348:	pop    es
  40f349:	ret    
  40f34a:	push   0xffffffe9
  40f34c:	xor    al,BYTE PTR ds:0xaf04d4fe
  40f352:	jmp    0x0:0x0
	...
  40f361:	add    BYTE PTR [eax],al
  40f363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f364:	push   edi
  40f365:	dec    BYTE PTR [ecx+0x1a6756a3]
  40f36b:	sub    edi,ebx
  40f36d:	or     al,ch
  40f36f:	mov    esp,0xccfffe58
  40f374:	stos   DWORD PTR es:[edi],eax
  40f375:	(bad)  
  40f376:	jne    0x40f346
  40f378:	bound  ebx,QWORD PTR [ebp+0x675929ff]
  40f37e:	sbb    al,0x39
  40f380:	fisttp WORD PTR [eax]
  40f382:	call   0x3f4ce7
  40f387:	mov    ecx,0x33fffcdd
  40f38c:	ret    
  40f38d:	in     eax,0x4
  40f38f:	les    edx,FWORD PTR [edi-0x2]
  40f392:	leave  
  40f393:	aam    0xce
  40f395:	add    BYTE PTR [ebp+0xd],dl
  40f398:	addr16 add ah,0x6e
  40f39c:	jmp    FWORD PTR [edx+0x0]
  40f39f:	cld    
  40f3a0:	cdq    
  40f3a1:	(bad)  
  40f3a2:	jne    0x40f332
  40f3a4:	bound  esp,QWORD PTR [esi-0x77a846af]
  40f3aa:	inc    ebp
  40f3ab:	stos   BYTE PTR es:[edi],al
  40f3ac:	inc    ebx
  40f3ad:	cmp    eax,0x10b21eb
  40f3b2:	sbb    BYTE PTR [ecx-0x36],0x74
  40f3b6:	inc    edi
  40f3b7:	add    DWORD PTR cs:[ecx+eax*2+0x66],esp
  40f3bc:	(bad)  
  40f3bd:	call   0x10b6ed5
  40f3c2:	or     edx,DWORD PTR [esi+0x572ade]
	...
  40f3d4:	add    BYTE PTR [eax],al
  40f3d6:	into   
  40f3d7:	mov    bh,0x5b
  40f3d9:	jmp    FWORD PTR [ecx-0x98b423c]
  40f3df:	inc    edx
  40f3e0:	inc    ebp
  40f3e1:	clc    
  40f3e2:	push   cs
  40f3e3:	retf   0xef00
  40f3e6:	mov    eax,0x3f6560e1
  40f3eb:	jo     0x40f3ee
  40f3ed:	call   DWORD PTR [edx+0x37749117]
  40f3f3:	pop    ss
  40f3f4:	sbb    al,0x7b
  40f3f6:	clc    
  40f3f7:	push   es
  40f3f8:	xchg   ecx,eax
  40f3f9:	je     0x40f3f2
  40f3fb:	pop    es
  40f3fc:	ficom  DWORD PTR [ebx-0x18]
  40f3ff:	test   BYTE PTR [ebp-0x6ed700ce],0xfe
  40f406:	fsub   st,st(6)
  40f408:	xchg   ebx,eax
  40f409:	lods   eax,DWORD PTR ds:[esi]
  40f40a:	pop    ss
  40f40b:	mov    dh,0x16
  40f40d:	mov    ecx,0xfe8d5cc8
  40f412:	dec    edx
  40f413:	mov    bh,0x99
  40f415:	mov    WORD PTR [esi],cs
  40f417:	(bad)  
  40f418:	lea    ebx,[esi-0x7a]
  40f41b:	icebp  
  40f41c:	add    eax,0x9e2a1200
  40f421:	cmp    BYTE PTR [ebx-0x6d],0x35
  40f425:	push   0x3f
  40f427:	sbb    esi,ecx
  40f429:	dec    BYTE PTR [edx]
  40f42b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f42c:	cdq    
  40f42d:	cs out dx,al
  40f42f:	xchg   ebp,eax
  40f430:	lea    ecx,[eax+0x3c798afa]
  40f436:	fs out dx,al
  40f438:	inc    ebx
	...
  40f449:	mov    edi,0x7401be
  40f44e:	pop    es
  40f44f:	sub    BYTE PTR [ebp-0x2],ah
  40f452:	scas   al,BYTE PTR es:[edi]
  40f453:	ss call 0x42980d
  40f459:	inc    esp
  40f45a:	outs   dx,DWORD PTR ds:[esi]
  40f45b:	sbb    BYTE PTR [edx],ch
  40f45d:	lock inc esi
  40f45f:	pop    sp
  40f461:	inc    eax
  40f462:	dec    esi
  40f463:	stc    
  40f464:	mov    edi,0x447c8fb3
  40f469:	aaa    
  40f46a:	mov    DWORD PTR [eax+eax*1],0x6e1cf518
  40f471:	call   0x603b:0x1803a8c8
  40f478:	(bad)  
  40f479:	mov    edx,eax
  40f47b:	aas    
  40f47c:	xchg   edx,eax
  40f47d:	xchg   ch,al
  40f47f:	dec    esi
  40f480:	(bad)  
  40f481:	mov    eax,eax
  40f483:	dec    edi
  40f484:	push   esp
  40f485:	(bad)  
  40f486:	lds    edi,FWORD PTR [esi]
  40f488:	nop
  40f489:	sub    eax,0xe98f7088
  40f48e:	les    ebp,FWORD PTR [esi]
  40f490:	xchg   edx,eax
  40f491:	xchg   edx,eax
  40f492:	(bad)  
  40f493:	out    dx,al
  40f494:	sbb    BYTE PTR [esi-0x1ffc17d1],dl
  40f49a:	test   DWORD PTR [edi+0x1d],edi
  40f49d:	bound  eax,QWORD PTR [edi]
  40f49f:	call   0xa96becbf
  40f4a4:	add    edi,DWORD PTR [eax+0x409bf03a]
  40f4aa:	inc    ecx
  40f4ab:	test   DWORD PTR [esi+0x0],0x0
  40f4b5:	add    BYTE PTR [eax],al
  40f4b7:	add    BYTE PTR [eax],al
  40f4b9:	add    BYTE PTR [eax],al
  40f4bb:	add    BYTE PTR [esi],dl
  40f4bd:	enter  0x167f,0x1a
  40f4c1:	pop    es
  40f4c2:	call   0x296bd1e2
  40f4c7:	add    al,0x90
  40f4c9:	cli    
  40f4ca:	dec    esi
  40f4cb:	cmp    al,0xfe
  40f4cd:	(bad)  
  40f4ce:	mov    edi,0xc6c4ea7f
  40f4d3:	jl     0x40f4d8
  40f4d5:	mov    ah,0x51
  40f4d7:	add    al,0xe7
  40f4d9:	dec    ebx
  40f4da:	dec    esp
  40f4db:	inc    ebp
  40f4dc:	aas    
  40f4dd:	xor    BYTE PTR [edx-0x593801d8],cl
  40f4e3:	fsub   st,st(1)
  40f4e5:	movaps XMMWORD PTR [edi+eiz*2],xmm0
  40f4e9:	cmp    DWORD PTR [esi],edi
  40f4eb:	(bad)
  40f4ef:	cwde   
  40f4f0:	(bad)  
  40f4f1:	(bad)  
  40f4f2:	pcmpeqb mm4,QWORD PTR [ebx-0x22e417f7]
  40f4f9:	sub    eax,0xc3432801
  40f4fe:	xor    eax,DWORD PTR [esi]
  40f500:	arpl   WORD PTR [ecx],cx
  40f502:	add    DWORD PTR [ecx+0x64],edx
  40f505:	sbb    bh,dh
  40f507:	pop    esi
  40f508:	xchg   ebx,eax
  40f509:	or     al,0xf1
  40f50b:	fs ja  0x40f4ba
  40f50e:	push   eax
  40f50f:	rcl    DWORD PTR [ebx+0x54e9402c],0x66
  40f516:	arpl   WORD PTR [eax-0x31cc3cc4],bp
  40f51c:	and    al,0x9
  40f51e:	add    DWORD PTR [ecx+0x0],eax
	...
  40f52d:	add    BYTE PTR [eax],al
  40f52f:	lock sbb eax,0xc5b26fe
  40f535:	jmp    0xfd24a4
  40f53a:	popf   
  40f53b:	add    al,0x47
  40f53d:	jnp    0x40f558
  40f53f:	cmp    al,0x3c
  40f541:	inc    ebx
  40f542:	push   0x4f
  40f544:	mov    ah,0x0
  40f546:	jne    0x40f4c8
  40f548:	sub    eax,DWORD PTR [eax]
  40f54a:	jmp    0x753e7b18
  40f54f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f550:	stos   DWORD PTR es:[edi],eax
  40f551:	mov    cl,0x36
  40f553:	retf   0xfdc2
  40f556:	push   esp
  40f557:	mov    bh,0xc2
  40f559:	jae    0x40f53c
  40f55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f55c:	rcl    DWORD PTR [eax-0x32],1
  40f55f:	mov    dl,0xc2
  40f561:	jae    0x40f51c
  40f563:	retf   0x93c
  40f566:	rol    edx,1
  40f568:	adc    bh,dh
  40f56a:	mov    dh,0xba
  40f56c:	cmp    al,0xed
  40f56e:	scas   al,BYTE PTR es:[edi]
  40f56f:	dec    eax
  40f570:	shr    al,1
  40f572:	popf   
  40f573:	sbb    al,bl
  40f575:	std    
  40f576:	sahf   
  40f577:	sub    BYTE PTR [ebp+edi*8+0x73c2ab1c],ch
  40f57e:	loope  0x40f524
  40f580:	or     DWORD PTR [ebp+0x0],0x75fe54c1
  40f587:	ret    0xca63
  40f58a:	push   edx
  40f58b:	mov    cl,0x55
  40f58d:	(bad)  
  40f58e:	jne    0x40f53a
  40f590:	fs ret 0x52
	...
  40f5a0:	add    BYTE PTR [eax],al
  40f5a2:	mov    eax,ds:0x7675fe55
  40f5a7:	fs mov edx,0xfe557152
  40f5ad:	jne    0x40f62d
  40f5af:	fs mov dl,0x52
  40f5b2:	adc    DWORD PTR [ebp-0x2],0x74553275
  40f5b9:	or     BYTE PTR [esi-0x56],bh
  40f5bc:	dec    ebp
  40f5bd:	call   DWORD PTR [ecx]
  40f5bf:	cmc    
  40f5c0:	mov    edx,0x8b53c6ea
  40f5c6:	inc    edx
  40f5c7:	dec    ecx
  40f5c8:	sar    esp,0xbc
  40f5cb:	(bad)  
  40f5cc:	push   0x40
  40f5ce:	xor    ebx,ebx
  40f5d0:	or     al,ch
  40f5d2:	outs   dx,DWORD PTR ds:[esi]
  40f5d3:	add    eax,0xb2ffffe
  40f5d8:	std    
  40f5d9:	push   0xffffff96
  40f5db:	loopne 0x40f5dd
  40f5dd:	push   0x3feb48
  40f5e2:	out    dx,al
  40f5e3:	retf   
  40f5e4:	add    BYTE PTR [eax],al
  40f5e6:	es pop edi
  40f5e8:	xchg   edx,eax
  40f5e9:	push   ebp
  40f5ea:	jno    0x40f63f
  40f5ec:	or     al,al
  40f5ee:	jmp    0xfdf8:0x25e84da8
  40f5f5:	jmp    FWORD PTR [ebp-0x7a]
  40f5f8:	jno    0x40f613
  40f5fa:	inc    esi
  40f5fb:	in     al,0x0
  40f5fd:	add    BYTE PTR [ecx+0x4bd16614],ah
  40f603:	pop    es
  40f604:	add    DWORD PTR [eax+0x0],edx
	...
  40f613:	add    BYTE PTR [eax],al
  40f615:	mov    cl,0xd9
  40f617:	or     al,ch
  40f619:	aas    
  40f61a:	ds or  edi,edi
  40f61d:	inc    eax
  40f61e:	dec    eax
  40f61f:	xor    eax,0x8c4b3852
  40f624:	je     0x40f659
  40f626:	inc    ebx
  40f627:	pop    ss
  40f628:	or     BYTE PTR [edi],dl
  40f62a:	jae    0x40f668
  40f62c:	jmp    DWORD PTR [eax]
  40f62e:	imul   edi,DWORD PTR [edi+0x78843f03],0x8debbceb
  40f638:	push   esi
  40f639:	xchg   ebp,eax
  40f63a:	scas   eax,DWORD PTR es:[edi]
  40f63b:	pop    ss
  40f63c:	inc    ecx
  40f63d:	add    BYTE PTR [ebp+0x7a65e7f9],bl
  40f643:	mov    esi,?
  40f645:	(bad)  
  40f646:	ins    BYTE PTR es:[edi],dx
  40f647:	lea    ecx,[edx+0x4145062a]
  40f64d:	aas    
  40f64e:	das    
  40f64f:	int    0xff
  40f651:	dec    esp
  40f652:	outs   dx,DWORD PTR ds:[esi]
  40f653:	sbb    esp,esi
  40f655:	pop    edx
  40f656:	jo     0x40f659
  40f658:	push   edi
  40f659:	xlat   BYTE PTR ds:[ebx]
  40f65a:	add    eax,ecx
  40f65c:	inc    eax
  40f65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f65f:	shl    DWORD PTR [ebx+0x5c],0x62
  40f663:	cdq    
  40f664:	loopne 0x40f67a
  40f666:	ret    0xa89
  40f669:	jg     0x40f6ae
  40f66b:	jmp    0x40f6bc
  40f66d:	pop    ss
  40f66e:	scas   eax,DWORD PTR es:[edi]
  40f66f:	add    edi,ebp
  40f671:	fst    DWORD PTR [edi]
  40f673:	(bad)  
  40f674:	fs (bad) 
  40f676:	scas   al,BYTE PTR es:[edi]
  40f677:	xor    edi,edi
	...
  40f685:	add    BYTE PTR [eax],al
  40f687:	add    BYTE PTR [edx],dl
  40f689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f68a:	cdq    
  40f68b:	xor    BYTE PTR [esi],al
  40f68d:	xchg   edx,eax
  40f68e:	mov    edi,esp
  40f690:	ins    DWORD PTR es:[edi],dx
  40f691:	loopne 0x40f61c
  40f693:	(bad)  
  40f694:	jae    0x40f654
  40f696:	sar    DWORD PTR [eax-0x1768598],0x6d
  40f69d:	inc    ecx
  40f69e:	int    0x6
  40f6a0:	rol    bh,cl
  40f6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6a3:	mov    ecx,ebx
  40f6a5:	ret    
  40f6a6:	sahf   
  40f6a7:	adc    DWORD PTR [edi],esi
  40f6a9:	mov    al,0x3e
  40f6ab:	cmp    eax,DWORD PTR [eax-0x3f]
  40f6ae:	cs mov ebp,0x30e7cbfe
  40f6b4:	les    esi,FWORD PTR [ebx+0x1924c06a]
  40f6ba:	add    al,BYTE PTR [edx*4+0x47116f06]
  40f6c1:	mov    al,0x60
  40f6c3:	cmp    dl,BYTE PTR [eax]
  40f6c5:	shl    DWORD PTR [eax+0x41],0xb
  40f6c9:	dec    ebp
  40f6ca:	adc    al,0x9f
  40f6cc:	jns    0x40f6d5
  40f6ce:	call   0xbc093056
  40f6d3:	inc    ebx
  40f6d4:	addr16 into 
  40f6d6:	lds    eax,FWORD PTR [edi+edi*1+0x19]
  40f6da:	inc    eax
  40f6db:	and    DWORD PTR ds:0x98fee7c8,esp
  40f6e1:	cmp    ecx,ebx
  40f6e3:	xor    ah,bh
  40f6e5:	aaa    
  40f6e6:	ret    
  40f6e7:	mov    cl,cl
  40f6e9:	int3   
  40f6ea:	daa    
  40f6eb:	adc    BYTE PTR [eax],al
	...
  40f6f9:	add    BYTE PTR [eax],al
  40f6fb:	sbb    BYTE PTR es:[eax+0x45b13f03],al
  40f702:	sbb    al,0x4e
  40f704:	sub    ch,BYTE PTR [ecx+0x7cc10f03]
  40f70a:	sti    
  40f70b:	cwde   
  40f70c:	xchg   DWORD PTR [edi-0x76],ebp
  40f70f:	cdq    
  40f710:	scas   eax,DWORD PTR es:[edi]
  40f711:	push   0xdbc09034
  40f716:	(bad)  
  40f717:	enter  0xd67e,0x8a
  40f71b:	add    eax,0xc93059d9
  40f721:	cmp    al,0xc4
  40f723:	out    0xe4,al
  40f725:	iret   
  40f726:	mov    edi,0xb600c113
  40f72b:	popa   
  40f72c:	xor    BYTE PTR [ebp+eax*1+0x3b],0xdd
  40f731:	data16 sub BYTE PTR [ebx],bh
  40f734:	sbb    cl,ch
  40f736:	cmp    DWORD PTR [esi],ecx
  40f738:	sar    ebp,0x39
  40f73b:	and    ecx,eax
  40f73d:	add    BYTE PTR [esi-0x7a],bh
  40f740:	daa    
  40f741:	adc    BYTE PTR [edi],cl
  40f743:	jp     0x40f70d
  40f745:	push   eax
  40f746:	jle    0x40f797
  40f748:	shr    al,1
  40f74a:	push   0x34
  40f74c:	mov    edi,0x195881fd
  40f751:	(bad)  
  40f752:	data16 xor ch,bl
  40f755:	call   0xfe0046ce
  40f75a:	loop   0x40f758
  40f75c:	cmp    esp,DWORD PTR ds:0xc1
	...
  40f76e:	loope  0x40f795
  40f770:	inc    eax
  40f771:	jmp    0x9460a7a2
  40f776:	mov    ch,0xbe
  40f778:	push   eax
  40f779:	sar    DWORD PTR [eax+ecx*8],0xed
  40f77d:	outs   dx,DWORD PTR ds:[esi]
  40f77e:	xor    al,0xd9
  40f780:	data16 test al,0x3c
  40f783:	sbb    dh,bh
  40f785:	xchg   esp,eax
  40f786:	les    esp,FWORD PTR [edi-0x414a6eac]
  40f78c:	call   0xfe006b85
  40f791:	push   es
  40f792:	dec    edi
  40f793:	mov    esp,0xa7a474fd
  40f798:	mov    BYTE PTR [edi+0x205dbeb5],ah
  40f79e:	or     bl,0x0
  40f7a1:	cmp    al,0x12
  40f7a3:	mov    bl,0x81
  40f7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7a6:	mov    bl,0x4c
  40f7a8:	inc    ebx
  40f7a9:	(bad)  [ebx-0x41]
  40f7ac:	jae    0x40f78b
  40f7ae:	aam    0x56
  40f7b0:	push   esi
  40f7b1:	add    BYTE PTR [ecx+0x51],bh
  40f7b4:	or     al,al
  40f7b6:	xor    dl,BYTE PTR [esi-0x3955827e]
  40f7bc:	jbe    0x40f7e1
  40f7be:	(bad)  
  40f7c0:	clc    
  40f7c1:	out    0x8b,ax
  40f7c4:	sub    DWORD PTR [edx],esp
  40f7c6:	xor    esi,DWORD PTR [ebx+0x504675fe]
  40f7cc:	je     0x40f7d6
  40f7ce:	mov    esi,0xff4d3e
	...
  40f7df:	add    BYTE PTR [eax],al
  40f7e1:	mov    ecx,0xa9fc7450
  40f7e6:	iret   
  40f7e7:	clc    
  40f7e8:	jmp    DWORD PTR [ebx]
  40f7ea:	ret    
  40f7eb:	in     eax,0xad
  40f7ed:	cmp    edx,DWORD PTR [ecx-0x2]
  40f7f0:	(bad)  
  40f7f1:	jecxz  0x40f84d
  40f7f3:	dec    ebp
  40f7f4:	call   0x3ef26c
  40f7f9:	pop    edi
  40f7fa:	xchg   BYTE PTR [ecx],cl
  40f7fc:	add    BYTE PTR [ebx+0x2283ea3b],dh
  40f802:	dec    esp
  40f803:	add    BYTE PTR [si],cl
  40f806:	add    al,0xfe
  40f808:	jne    0x40f7e8
  40f80a:	(bad)  
  40f80b:	fimul  WORD PTR [ebp+0x29]
  40f80e:	push   ecx
  40f80f:	mov    BYTE PTR [ebp+0x1a],al
  40f812:	fiadd  WORD PTR [eax]
  40f814:	push   0xffffffd6
  40f816:	loop   0x40f847
  40f818:	xchg   di,ax
  40f81a:	retf   0x268
  40f81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f81e:	retf   0xe880
  40f821:	pmaddwd mm7,mm5
  40f824:	jmp    FWORD PTR [ebp+0x1f3f718a]
  40f82a:	(bad)  
  40f82b:	clc    
  40f82c:	push   0x3fe92b
  40f831:	cdq    
  40f832:	int    0xf8
  40f834:	call   0x3e8b95
  40f839:	aas    
  40f83a:	stos   BYTE PTR es:[edi],al
  40f83b:	shl    DWORD PTR [ebx+0x1c],0x8e
  40f83f:	push   cs
  40f840:	clc    
  40f841:	addr16 icebp 
  40f843:	inc    DWORD PTR cs:[eax]
	...
  40f852:	add    BYTE PTR [eax],al
  40f854:	push   0x78181ce0
  40f859:	lock add al,0x68
  40f85c:	aas    
  40f85d:	mov    cl,0x98
  40f85f:	mov    ebp,0xff31b0e5
  40f864:	sar    BYTE PTR [eax+0x55cae999],cl
  40f86a:	mov    bh,ah
  40f86c:	xchg   ecx,eax
  40f86d:	inc    DWORD PTR [edi-0x7642cf02]
  40f873:	out    0x79,eax
  40f875:	fild   WORD PTR [edi-0x7a42df02]
  40f87b:	(bad)  
  40f87c:	xchg   edx,eax
  40f87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f87e:	cdq    
  40f87f:	rol    BYTE PTR [edx-0x23776da],0xa3
  40f886:	add    DWORD PTR [ebp-0x4c],edx
  40f889:	add    eax,DWORD PTR [ebp+0x189fbc3]
  40f88f:	push   0x7b
  40f891:	push   es
  40f892:	invd   
  40f894:	xlat   BYTE PTR ds:[ebx]
  40f895:	test   BYTE PTR [esi],dh
  40f897:	jmp    eax
  40f899:	sub    BYTE PTR [edi],bh
  40f89b:	cld    
  40f89c:	scas   eax,DWORD PTR es:[di]
  40f89e:	add    edi,ebp
  40f8a0:	xchg   ecx,eax
  40f8a1:	push   edi
  40f8a2:	jno    0x40f909
  40f8a4:	jle    0x40f855
  40f8a6:	sbb    DWORD PTR [ebp-0xfe8fa7],eax
  40f8ac:	xor    ah,BYTE PTR [edi-0x39d76867]
  40f8b2:	mov    dh,bh
  40f8b4:	xor    bh,BYTE PTR [ebx+0x7485]
	...
  40f8c6:	add    BYTE PTR [edi],dh
  40f8c8:	(bad)  
  40f8c9:	jg     0x40f917
  40f8cb:	cwde   
  40f8cc:	scas   al,BYTE PTR es:[edi]
  40f8cd:	mov    bh,0xc1
  40f8cf:	cmp    ecx,eax
  40f8d1:	out    0x30,eax
  40f8d3:	mov    ah,0xac
  40f8d5:	push   0xffffffc0
  40f8d7:	mov    BYTE PTR [eax],dh
  40f8d9:	call   0xcebf60e1
  40f8de:	adc    DWORD PTR [edi-0x50],eax
  40f8e1:	mov    DWORD PTR [eax],edi
  40f8e3:	push   0x3311bebd
  40f8e8:	mov    ebp,0xbf60fc3c
  40f8ed:	sbb    eax,DWORD PTR [edi-0xbe342af]
  40f8f3:	dec    ecx
  40f8f4:	xor    esi,eax
  40f8f6:	fwait
  40f8f7:	push   edx
  40f8f8:	or     al,0x97
  40f8fa:	xchg   DWORD PTR [ecx],edi
  40f8fc:	xor    esi,eax
  40f8fe:	xchg   BYTE PTR [ebx+0x371186d4],ch
  40f904:	mov    al,0x33
  40f906:	cmp    BYTE PTR [eax],ah
  40f908:	mov    ebp,0x7a2b6ff
  40f90d:	call   0x50198498
  40f912:	or     DWORD PTR [edi-0x38],eax
  40f915:	out    0xfa,eax
  40f917:	shl    BYTE PTR [edx],0xcd
  40f91a:	sbb    ecx,DWORD PTR [esi]
  40f91c:	es test eax,0xfd94e703
  40f922:	add    edi,DWORD PTR [edi]
  40f924:	dec    edi
  40f925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f926:	mov    ebx,DWORD PTR [eax-0x69]
  40f929:	int    0x44
	...
  40f937:	add    BYTE PTR [eax],al
  40f939:	add    BYTE PTR [edi],bh
  40f93b:	mov    ebp,0x1cd8f3b4
  40f940:	loopne 0x40f945
  40f942:	aas    
  40f943:	shl    DWORD PTR [edi],1
  40f945:	adc    BYTE PTR [ecx],bh
  40f947:	leave  
  40f948:	lods   al,BYTE PTR ds:[esi]
  40f949:	mov    eax,edi
  40f94b:	add    bh,al
  40f94d:	xchg   BYTE PTR [ebx],ch
  40f94f:	fmul   DWORD PTR [edi]
  40f951:	(bad)  
  40f952:	adc    al,0xbd
  40f954:	inc    BYTE PTR [edx+0x7d00bca8]
  40f95a:	mov    BYTE PTR [edi+0x43],cl
  40f95d:	in     eax,dx
  40f95e:	xor    al,0xc7
  40f960:	add    dh,dl
  40f962:	add    bh,BYTE PTR [esi-0xf5b0e8d]
  40f968:	dec    esp
  40f969:	(bad)  
  40f96a:	sar    DWORD PTR [ebp+0x33b9dd73],0x9
  40f971:	sar    DWORD PTR [ebp-0x464101f0],1
  40f977:	xor    edi,ebp
  40f979:	mov    dh,0x2f
  40f97b:	shr    al,1
  40f97d:	xlat   BYTE PTR ds:[ebx]
  40f97e:	or     BYTE PTR [ebp-0x1fd05903],bh
  40f984:	std    
  40f985:	adc    al,0x4f
  40f987:	mov    ebp,0xfdd4e173
  40f98c:	dec    esp
  40f98d:	mov    ?,WORD PTR [ecx+0x3cddc290]
  40f993:	adc    eax,0x87bd8d8a
  40f998:	clc    
  40f999:	pop    ds
  40f99a:	mov    esp,0x220bfc
	...
  40f9ab:	add    BYTE PTR [eax],al
  40f9ad:	jp     0x40f977
  40f9af:	add    ch,bl
  40f9b1:	inc    eax
  40f9b2:	inc    edi
  40f9b3:	cmp    esi,eax
  40f9b5:	inc    ebp
  40f9b6:	or     DWORD PTR [ecx],eax
  40f9b8:	jmp    0xcc33105
  40f9bd:	jp     0x40f9ce
  40f9bf:	inc    eax
  40f9c0:	jmp    0x26ac2e01
  40f9c5:	jg     0x40f983
  40f9c7:	add    cl,ch
  40f9c9:	cmp    al,0xc8
  40f9cb:	lds    esp,FWORD PTR [esp+eax*8+0x3ce9fdbb]
  40f9d2:	dec    ebp
  40f9d3:	inc    ebx
  40f9d4:	sbb    eax,0x11434d0c
  40f9d9:	ins    BYTE PTR es:[edi],dx
  40f9da:	add    DWORD PTR cs:[ecx+0x402526],eax
  40f9e1:	xchg   esi,eax
  40f9e2:	inc    edx
  40f9e3:	adc    al,0x9
  40f9e5:	in     eax,dx
  40f9e6:	add    al,0x1
  40f9e8:	or     esp,DWORD PTR [esi-0x35]
  40f9eb:	inc    ecx
  40f9ec:	and    DWORD PTR [ebx],0x4f
  40f9ef:	std    
  40f9f0:	jae    0x40fa55
  40f9f2:	dec    ecx
  40f9f3:	jl     0x40f9f1
  40f9f5:	xchg   esi,eax
  40f9f6:	retf   
  40f9f7:	xor    eax,0xea501b8b
  40f9fc:	push   ds
  40f9fd:	sub    BYTE PTR [ecx+0x34],al
  40fa00:	jmp    FWORD PTR [eax]
  40fa02:	lods   al,BYTE PTR ds:[esi]
  40fa03:	(bad)  
  40fa04:	jbe    0x40f988
  40fa06:	inc    esp
  40fa07:	jae    0x40fa11
  40fa09:	xchg   ecx,eax
  40fa0a:	retf   0xff30
  40fa0d:	or     edi,DWORD PTR [ebp+eiz*8+0xde]
	...
  40fa20:	mov    al,ds:0xa15efe45
  40fa25:	repz clc 
  40fa27:	sub    eax,0xffffffc7
  40fa2a:	cmp    DWORD PTR [ebp-0x32],0x950574c3
  40fa31:	cmp    ch,0x74
  40fa34:	leave  
  40fa35:	inc    esp
  40fa36:	je     0x40fa34
  40fa38:	xchg   ecx,eax
  40fa39:	stos   DWORD PTR es:[edi],eax
  40fa3a:	or     al,0x4b
  40fa3c:	les    ebx,FWORD PTR [bp-0x37]
  40fa40:	push   esp
  40fa41:	enter  0x5500,0x8d
  40fa45:	pusha  
  40fa46:	add    ah,0x9a
  40fa49:	stc    
  40fa4a:	lds    eax,FWORD PTR [ebp-0x72]
  40fa4d:	les    eax,FWORD PTR [eax]
  40fa4f:	add    dh,dl
  40fa51:	jnp    0x40fa97
  40fa53:	hlt    
  40fa54:	(bad)  
  40fa55:	mov    BYTE PTR [eax],0x0
  40fa58:	adc    ebx,ecx
  40fa5a:	adc    BYTE PTR [edi+0x6dd0429b],cl
  40fa60:	and    bl,dh
  40fa62:	add    BYTE PTR [edx-0x2a],ch
  40fa65:	loopne 0x40fa67
  40fa67:	push   0x3f
  40fa69:	mov    cl,0x84
  40fa6b:	je     0x40fa20
  40fa6d:	leave  
  40fa6e:	or     eax,0x17b1150c
  40fa73:	add    BYTE PTR [edi-0x6700347c],dl
  40fa79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa7a:	shl    DWORD PTR [ebx+0x4a],0x61
  40fa7e:	xor    eax,ebp
  40fa80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa81:	repnz cmp esi,0x0
	...
  40fa91:	add    BYTE PTR [eax],al
  40fa93:	mov    dh,0xe3
  40fa95:	mov    WORD PTR [eax-0x1b],ds
  40fa98:	mov    al,0x17
  40fa9a:	add    BYTE PTR [esi],cl
  40fa9c:	mov    cl,BYTE PTR [esi]
  40fa9e:	clc    
  40fa9f:	push   0xeafe88fb
  40faa4:	lods   al,BYTE PTR ds:[esi]
  40faa5:	pop    ss
  40faa6:	add    ch,ah
  40faa8:	mov    al,0x99
  40faaa:	std    
  40faab:	or     dh,BYTE PTR [ecx-0x2480f4ff]
  40fab1:	repz dec dl
  40fab4:	push   0x52895a99
  40fab9:	test   dh,al
  40fabb:	jp     0x40fb14
  40fabd:	add    DWORD PTR [eax],eax
  40fabf:	aas    
  40fac0:	scas   eax,DWORD PTR es:[edi]
  40fac1:	cmp    BYTE PTR [edi+eiz*1-0x50],0xd
  40fac6:	dec    esi
  40fac7:	sbb    BYTE PTR [ebp+0x378afef9],bh
  40facd:	call   0xff0b:0x1af51ff
  40fad4:	xchg   ebx,eax
  40fad5:	les    ecx,FWORD PTR [edi-0x8]
  40fad8:	pushf  
  40fad9:	stc    
  40fada:	out    0x94,eax
  40fadc:	aam    0x4
  40fade:	add    BYTE PTR [esi+0x78ac2ae],al
  40fae4:	pop    ss
  40fae5:	fdivr  DWORD PTR [edi+0x17]
  40fae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fae9:	push   cs
  40faea:	and    al,0xf9
  40faec:	scas   eax,DWORD PTR es:[edi]
  40faed:	add    DWORD PTR [ebx-0x29],edx
  40faf0:	enter  0xcead,0xc0
  40faf4:	mov    ecx,0xc3f2
	...
  40fb05:	add    BYTE PTR [ebx+edx*8],ch
  40fb08:	mov    bh,0x33
  40fb0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb0b:	jmp    0x40faaa
  40fb0d:	test   BYTE PTR [ecx+0x78fac4f],ch
  40fb13:	pop    ss
  40fb14:	dec    DWORD PTR ds:0x2d001593
  40fb1a:	add    DWORD PTR [ecx+0x84297ee],edi
  40fb20:	push   0xb9333f3c
  40fb25:	xor    ebx,0xffffffbf
  40fb28:	mov    edi,0xceb9037c
  40fb2d:	pop    DWORD PTR [ebx]
  40fb2f:	mov    ah,0x22
  40fb31:	dec    ebp
  40fb32:	jle    0x40fb00
  40fb34:	out    0xd8,eax
  40fb36:	lds    ebp,FWORD PTR [edx+ebp*2+0x17126c48]
  40fb3d:	xchg   DWORD PTR [ebx],ecx
  40fb3f:	pop    es
  40fb40:	xor    eax,ebp
  40fb42:	inc    eax
  40fb43:	mov    ecx,0x1a980a14
  40fb48:	mov    eax,ds:0x5cc84446
  40fb4d:	leave  
  40fb4e:	sbb    BYTE PTR [eax],bl
  40fb50:	xchg   ecx,edi
  40fb52:	xor    al,0xb0
  40fb54:	clc    
  40fb55:	(bad)  
  40fb56:	sbb    DWORD PTR [ecx+0x444143e2],edi
  40fb5c:	mov    esp,0x68c83f04
  40fb61:	add    DWORD PTR [ebx],eax
  40fb63:	enter  0x13e7,0x3f
  40fb67:	leave  
  40fb68:	push   0x1b
	...
  40fb76:	add    BYTE PTR [eax],al
  40fb78:	add    BYTE PTR [esi],bh
  40fb7a:	enter  0x82e7,0x73
  40fb7e:	mov    esp,0xafe8f946
  40fb83:	cmp    ebx,edx
  40fb85:	fnstcw WORD PTR [eax-0x35831e00]
  40fb8b:	and    ebp,0x43
  40fb8e:	enter  0x2600,0xc6
  40fb92:	mov    esp,0x213494fd
  40fb97:	mov    dl,0x8f
  40fb99:	jnp    0x40fb53
  40fb9b:	in     eax,0x3a
  40fb9d:	mov    ebp,0x7670fdb9
  40fba2:	lods   al,BYTE PTR ds:[esi]
  40fba3:	std    
  40fba4:	je     0x40fbbe
  40fba6:	mov    edx,0x64a4f173
  40fbab:	data16 test al,0x3c
  40fbae:	mov    al,0xc0
  40fbb0:	out    0xbd,eax
  40fbb2:	mov    ecx,0xb9eb2487
  40fbb7:	jae    0x40fb8e
  40fbb9:	mov    ebp,0x7c41f933
  40fbbe:	and    al,BYTE PTR [eax-0x17]
  40fbc1:	aam    0x6b
  40fbc3:	(bad)  
  40fbc4:	mov    esi,0xcd434fbd
  40fbc9:	mov    ecx,0x2de9ed3b
  40fbce:	inc    esp
  40fbcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd0:	jmp    0x1cc2c411
  40fbd5:	stos   DWORD PTR es:[edi],eax
  40fbd6:	mov    bh,0xe
  40fbd8:	ins    DWORD PTR es:[edi],dx
  40fbd9:	fnsave [edi+0xe9fd]
	...
  40fbeb:	add    cl,al
  40fbed:	xor    al,0xe5
  40fbef:	jmp    0xe9d44841
  40fbf4:	cmp    al,0xc8
  40fbf6:	std    
  40fbf7:	cld    
  40fbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf9:	scas   eax,DWORD PTR es:[edi]
  40fbfa:	imul   esi,DWORD PTR [ebp-0x237637c4],0x72fe4294
  40fc04:	test   BYTE PTR [eax-0x1a9e4719],bl
  40fc0a:	data16 jl 0x40fc35
  40fc0d:	clc    
  40fc0e:	jb     0x40fc10
  40fc10:	out    dx,al
  40fc11:	div    DWORD PTR [edi]
  40fc13:	ja     0x40fbf7
  40fc15:	out    0x30,eax
  40fc17:	jmp    0x40fbfb
  40fc19:	out    0x3f,eax
  40fc1b:	add    al,0xdc
  40fc1d:	dec    ebx
  40fc1e:	stc    
  40fc1f:	xor    BYTE PTR [ebp+eax*8-0x4d600380],ah
  40fc26:	add    al,0x80
  40fc28:	cmp    bh,bl
  40fc2a:	jmp    0x41681235
  40fc2f:	adc    BYTE PTR [edx-0x3b],0xc0
  40fc33:	loopne 0x40fbd7
  40fc35:	(bad)
  40fc38:	ffreep st(6)
  40fc3a:	(bad)  
  40fc3b:	jne    0x40fc65
  40fc3d:	xchg   esp,eax
  40fc3e:	mov    BYTE PTR [ebp+0x7a],cl
  40fc41:	dec    ecx
  40fc42:	je     0x40fc2c
  40fc44:	jmp    0x2408d9d7
  40fc49:	adc    al,0xfe
  40fc4b:	call   DWORD PTR [esi-0x35]
  40fc4e:	mov    eax,DWORD PTR [ebp+0x0]
	...
  40fc5d:	add    BYTE PTR [eax],al
  40fc5f:	ret    0x679c
  40fc62:	add    esp,ebp
  40fc64:	retf   
  40fc65:	push   0x0
  40fc67:	cld    
  40fc68:	retf   
  40fc69:	push   0x0
  40fc6b:	jmp    0x40fbfb
  40fc6d:	fst    DWORD PTR [eax-0x67]
  40fc70:	fistp  QWORD PTR [edi]
  40fc72:	dec    ebx
  40fc73:	addr16 int3 
  40fc75:	or     eax,eax
  40fc77:	push   edx
  40fc78:	out    dx,al
  40fc79:	cmp    DWORD PTR [ebp-0x12],0xb91c74cb
  40fc80:	mov    esi,0x1313ffd1
  40fc85:	push   DWORD PTR [ebp-0x3e]
  40fc88:	dec    eax
  40fc89:	je     0x40fc77
  40fc8b:	cdq    
  40fc8c:	mov    edi,0x47dbe805
  40fc91:	(bad)  
  40fc92:	call   FWORD PTR [ecx+0x3fe8d5bf]
  40fc98:	adc    DWORD PTR [eax+eax*1],esi
  40fc9b:	aas    
  40fc9c:	push   es
  40fc9d:	imul   bl
  40fc9f:	xlat   BYTE PTR ds:[ebx]
  40fca0:	das    
  40fca1:	sar    esi,1
  40fca3:	fdiv   st,st(5)
  40fca5:	cmc    
  40fca6:	out    0xe7,eax
  40fca8:	inc    edi
  40fca9:	sar    dh,1
  40fcab:	enter  0xf5e5,0xe3
  40fcaf:	xlat   BYTE PTR ds:[ebx]
  40fcb0:	call   eax
  40fcb2:	(bad)  
  40fcb3:	mov    eax,0xfefc623
  40fcb8:	leave  
  40fcb9:	push   esp
  40fcba:	push   ecx
  40fcbb:	test   al,0xc5
  40fcbd:	fistp  WORD PTR [ebp+0x76]
  40fcc0:	loop   0x40fcd2
	...
  40fcd2:	repnz cmp DWORD PTR [ecx-0x7e],esi
  40fcd6:	jnp    0x40fc94
  40fcd8:	jmp    0x40fcd9
  40fcda:	push   ss
  40fcdb:	ins    BYTE PTR es:[edi],dx
  40fcdc:	xor    BYTE PTR [edi+esi*1-0x67],0xb9
  40fce1:	dec    eax
  40fce2:	js     0x40fc79
  40fce4:	mov    al,BYTE PTR [ebx+esi*2-0x63]
  40fce8:	test   BYTE PTR [edi],0x57
  40fceb:	ret    0xfe7d
  40fcee:	pusha  
  40fcef:	sbb    al,BYTE PTR [esi]
  40fcf1:	call   0xfec0cd77
  40fcf6:	inc    esp
  40fcf7:	popa   
  40fcf8:	cmc    
  40fcf9:	sbb    eax,0xca2e08ef
  40fcfe:	jmp    DWORD PTR [eax+0x4738ffe9]
  40fd04:	mov    edi,0xc1c5ca67
  40fd09:	(bad)  
  40fd0a:	js     0x40fd52
  40fd0c:	test   BYTE PTR [edi],0x17
  40fd0f:	inc    eax
  40fd10:	repnz (bad) 
  40fd12:	sbb    BYTE PTR [eax-0x33],bl
  40fd15:	dec    ebx
  40fd16:	adc    BYTE PTR [edi],bh
  40fd18:	xor    DWORD PTR [ebx+ecx*1+0x27],0xc91707f7
  40fd20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd21:	retf   0xb5f9
  40fd24:	xor    BYTE PTR [ebp+0x3c],al
  40fd27:	enter  0x8cbc,0xd4
  40fd2b:	dec    ecx
  40fd2c:	and    edi,DWORD PTR [edi-0x77]
  40fd2f:	and    ch,al
  40fd31:	in     eax,dx
  40fd32:	xor    BYTE PTR [ebp+0xbb4],0x0
	...
  40fd45:	out    0x2a,eax
  40fd47:	mov    eax,ds:0xa43fc980
  40fd4c:	jg     0x40fd03
  40fd4e:	repz adc cl,al
  40fd51:	inc    edi
  40fd53:	addr16 inc eax
  40fd55:	aas    
  40fd56:	cmp    al,0xb9
  40fd58:	jmp    0x40fcf8
  40fd5a:	cs test eax,0x35a00803
  40fd60:	aaa    
  40fd61:	aas    
  40fd62:	enter  0x43f2,0xc
  40fd66:	retf   0x1002
  40fd69:	pop    ss
  40fd6a:	xchg   edx,eax
  40fd6b:	test   edx,eax
  40fd6d:	sbb    BYTE PTR [esi],0xd0
  40fd70:	shr    DWORD PTR [eax+ecx*8],0xe7
  40fd74:	or     bh,BYTE PTR [edi+0x3c]
  40fd77:	or     edx,edi
  40fd79:	pusha  
  40fd7a:	xor    BYTE PTR [edi+edi*2],0x61
  40fd7e:	shl    DWORD PTR [edi+0x501837f8],0x4
  40fd85:	aas    
  40fd86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd87:	jne    0x40fd75
  40fd89:	push   edi
  40fd8a:	sub    DWORD PTR cs:[edi+ebp*8],eax
  40fd8e:	mov    ah,0x1c
  40fd90:	or     al,0x27
  40fd92:	rcr    BYTE PTR [edx],1
  40fd94:	jg     0x40fdc7
  40fd96:	mov    al,ds:0xb529cbb0
  40fd9b:	mov    esi,DWORD PTR [ebx]
  40fd9d:	jmp    FWORD PTR [esi-0x7a]
  40fda0:	jg     0x40fdbb
  40fda2:	mov    ch,0x79
  40fda4:	scas   al,BYTE PTR es:[edi]
  40fda5:	dec    eax
  40fda6:	int    0x0
  40fda8:	cld    
	...
  40fdb5:	add    BYTE PTR [eax],al
  40fdb7:	add    cl,bl
  40fdb9:	mov    ch,0x73
  40fdbb:	ins    DWORD PTR es:[edi],dx
  40fdbc:	cmp    BYTE PTR [ecx+ecx*1],0x51
  40fdc0:	cmp    edi,edi
  40fdc2:	std    
  40fdc3:	pop    esi
  40fdc4:	adc    BYTE PTR [eax+0x1b3cedc2],al
  40fdca:	mov    bh,BYTE PTR ds:0x3ed088ba
  40fdd0:	pop    eax
  40fdd1:	mov    dh,0x8b
  40fdd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdd4:	push   eax
  40fdd5:	add    eax,0xb52cbcfe
  40fdda:	jae    0x40fdb9
  40fddc:	push   esp
  40fddd:	jmp    0xc17de716
  40fde2:	shr    dh,0xc7
  40fde5:	sti    
  40fde6:	add    ch,cl
  40fde8:	cmp    al,0x8d
  40fdea:	inc    ebx
  40fdeb:	adc    DWORD PTR [ebx],edi
  40fded:	enter  0xe900,0x1
  40fdf1:	or     al,0xf1
  40fdf3:	(bad)  
  40fdf4:	cmp    eax,ecx
  40fdf6:	add    BYTE PTR [ebx-0x7cfeddc4],al
  40fdfc:	cmp    al,0x22
  40fdfe:	add    DWORD PTR [edi+eax*4-0x5c],esi
  40fe02:	push   eax
  40fe03:	ins    BYTE PTR es:[edi],dx
  40fe04:	(bad)  
  40fe05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe06:	cmc    
  40fe07:	(bad)  
  40fe08:	jmp    0xe395fc11
  40fe0d:	mov    ch,0x73
  40fe0f:	(bad)
  40fe12:	xor    ecx,ebp
  40fe14:	cmp    al,0xc1
  40fe16:	sar    BYTE PTR ds:0xe8f89f36,0x0
	...
  40fe29:	add    BYTE PTR [eax],al
  40fe2b:	cmp    al,0xc8
  40fe2d:	push   0x1090b2a
  40fe32:	sahf   
  40fe33:	aaa    
  40fe34:	(bad)  
  40fe35:	call   0xfdf3f8cb
  40fe3a:	cmp    DWORD PTR [ebx+eax*4+0x37ab008b],esi
  40fe41:	idiv   edi
  40fe43:	xchg   ecx,eax
  40fe44:	xchg   edi,eax
  40fe45:	dec    edi
  40fe46:	call   0x3f8409
  40fe4b:	lahf   
  40fe4c:	inc    eax
  40fe4d:	jmp    0xe6736049
  40fe52:	lods   eax,DWORD PTR ds:[esi]
  40fe54:	xor    bh,bh
  40fe56:	lea    ebx,[ebx-0x6697b1c5]
  40fe5c:	stos   BYTE PTR es:[edi],al
  40fe5d:	inc    eax
  40fe5e:	add    BYTE PTR [ecx+0x11f7e970],al
  40fe64:	xor    bh,bh
  40fe66:	jne    0x40fe4a
  40fe68:	pop    ds
  40fe69:	aas    
  40fe6a:	dec    esi
  40fe6b:	adc    DWORD PTR [edx],esi
  40fe6d:	mov    DWORD PTR [ebp-0xc602],eax
  40fe73:	int3   
  40fe74:	(bad)  
  40fe75:	push   0xfd8cb950
  40fe7a:	dec    BYTE PTR [ebx]
  40fe7c:	and    esi,edi
  40fe7e:	inc    DWORD PTR [ecx+0x32]
  40fe81:	jne    0x40fe8f
  40fe83:	cs jmp 0x40fed4
  40fe86:	call   DWORD PTR [ecx-0x76177bc1]
  40fe8c:	xor    eax,0x6aff
	...
  40fe9d:	add    BYTE PTR [esi-0x61],ah
  40fea0:	pop    edx
  40fea1:	addr16 daa 
  40fea3:	int3   
  40fea4:	std    
  40fea5:	mov    ch,0x82
  40fea7:	cmp    eax,0xbb71ffff
  40feac:	or     eax,ebp
  40feae:	dec    edi
  40feaf:	test   esi,edi
  40feb1:	dec    edi
  40feb3:	dec    edx
  40feb4:	loope  0x40fead
  40feb6:	xchg   ecx,eax
  40feb7:	xor    eax,0x3daa858d
  40febc:	(bad)  
  40febd:	push   DWORD PTR [esi-0x5c]
  40fec0:	jb     0x40ff29
  40fec2:	addr16 int3 
  40fec4:	std    
  40fec5:	mov    ch,0x3f
  40fec7:	dec    ebp
  40fec8:	jae    0x40fec8
  40feca:	and    BYTE PTR [edx-0xb],al
  40fecd:	or     esp,DWORD PTR [edi]
  40fecf:	pop    eax
  40fed0:	int    0xfe
  40fed2:	adc    BYTE PTR [esi+0x1e267341],dh
  40fed8:	mov    esi,0x7c2208d3
  40fedd:	add    esi,DWORD PTR [edx-0x4f]
  40fee0:	jl     0x40ff11
  40fee2:	shr    BYTE PTR [ebx],0x65
  40fee5:	imul   al
  40fee7:	sbb    ebp,edx
  40fee9:	out    0xa9,eax
  40feeb:	data16 jl 0x40feec
  40feee:	in     al,0x94
  40fef0:	or     al,al
  40fef2:	dec    ebx
  40fef3:	stos   DWORD PTR es:[edi],eax
  40fef4:	shl    edi,1
  40fef6:	xchg   ebp,eax
  40fef7:	data16 jl 0x40fef8
  40fefa:	clc    
  40fefb:	sub    esp,DWORD PTR [ebp-0xa]
  40fefe:	mov    eax,0x15e9
	...
  40ff0f:	add    BYTE PTR [eax],al
  40ff11:	aas    
  40ff12:	mov    eax,ds:0x3f20ffe7
  40ff17:	in     al,0x40
  40ff19:	aas    
  40ff1a:	ret    0xebb5
  40ff1d:	nop
  40ff1e:	leave  
  40ff1f:	jnp    0x40ff1f
  40ff21:	or     ah,BYTE PTR [ebp-0x46055d97]
  40ff27:	jl     0x40feb1
  40ff29:	mov    edx,0x78fe73c4
  40ff2e:	push   ss
  40ff2f:	add    eax,0xc209f168
  40ff34:	jmp    FWORD PTR [ecx+0x53]
  40ff37:	ins    DWORD PTR es:[edi],dx
  40ff38:	mul    BYTE PTR [eax-0x7f]
  40ff3b:	jl     0x40ffb1
  40ff3d:	dec    ebx
  40ff3e:	cdq    
  40ff3f:	mov    DWORD PTR [eax+edx*2+0x71],ecx
  40ff43:	mov    al,BYTE PTR [edi+ebp*2-0x4301838f]
  40ff4a:	and    ebx,DWORD PTR [edx-0xa]
  40ff4d:	cmp    cl,cl
  40ff4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff50:	add    eax,DWORD PTR [eax+0x4c]
  40ff53:	jae    0x40ff58
  40ff55:	aas    
  40ff56:	enter  0x8aff,0x99
  40ff5a:	pop    es
  40ff5b:	call   0x17fd82ee
  40ff60:	jge    0x40ff2d
  40ff62:	nop
  40ff63:	jbe    0x40ffe1
  40ff65:	or     DWORD PTR [ecx-0x4dfe0e1b],esp
  40ff6b:	loop   0x40ffb0
  40ff6d:	ins    BYTE PTR es:[edi],dx
  40ff6e:	xor    al,0x6b
  40ff70:	(bad)  
  40ff71:	in     al,dx
  40ff72:	enter  0xf5d3,0x0
	...
  40ff82:	add    BYTE PTR [eax],al
  40ff84:	mov    ebp,0xe1744b73
  40ff89:	mov    cl,0xe7
  40ff8b:	imul   DWORD PTR [ebx+0x45]
  40ff8e:	test   BYTE PTR [ebx-0x37],ch
  40ff91:	mov    cl,0x3e
  40ff93:	add    edx,DWORD PTR [ebx+0x2c]
  40ff96:	rcl    BYTE PTR [ebx],0x3f
  40ff99:	mov    eax,ds:0xc0337c6d
  40ff9e:	rsqrtps xmm7,xmm2
  40ffa1:	mov    al,0x1e
  40ffa3:	jl     0x40ff98
  40ffa5:	mov    al,ds:0xb1a17c1e
  40ffaa:	xchg   esp,eax
  40ffab:	or     esp,DWORD PTR [edi-0x6e835115]
  40ffb1:	mov    cl,0x34
  40ffb3:	addr16 xchg ecx,eax
  40ffb5:	mov    cl,0xf6
  40ffb7:	jnp    0x40ffc4
  40ffb9:	sar    bh,0x13
  40ffbc:	add    BYTE PTR [ecx-0x4414841a],dh
  40ffc2:	fidiv  WORD PTR [ecx+0x7bd6b990]
  40ffc8:	popa   
  40ffc9:	cmp    esp,eax
  40ffcb:	imul   esi,DWORD PTR [esi+0xa],0xffffffc7
  40ffcf:	jnp    0x410022
  40ffd1:	jnp    0x40ff9a
  40ffd3:	jae    0x41001e
  40ffd5:	mov    cl,0x0
  40ffd7:	mov    dh,0x4e
  40ffd9:	leave  
  40ffda:	call   0xfdf2fd36
  40ffdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffe0:	out    dx,al
  40ffe1:	mov    ebp,?
  40ffe3:	sahf   
  40ffe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffe5:	mov    dl,0x73
  40ffe7:	loope  0x40ffe9
	...
  40fff5:	add    BYTE PTR [eax],al
  40fff7:	xchg   esp,eax
  40fff8:	lahf   
  40fff9:	inc    esi
  40fffa:	mov    ss,WORD PTR [edx+esi*4-0x4d73664d]
  410001:	std    
  410002:	jle    0x410012
  410004:	leave  
  410005:	call   0xfdf2fd9f
  41000a:	outs   dx,BYTE PTR ds:[esi]
  41000b:	scas   al,BYTE PTR es:[edi]
  41000c:	cwde   
  41000d:	cmc    
  41000e:	data16 je 0x40ffba
  410011:	mov    esi,0xfdb265b0
  410016:	pushf  
  410017:	push   ebx
  410018:	mov    edx,0x766b4efd
  41001d:	inc    edi
  41001e:	inc    esi
  41001f:	push   esp
  410020:	mov    dl,0xb3
  410022:	sbb    eax,0x41fdb24c
  410027:	xchg   ebx,eax
  410028:	(bad)  
  410029:	std    
  41002a:	cs xor al,0x7c
  41002d:	in     al,0x1e
  41002f:	xor    al,0xb2
  410031:	call   0xfdf27ab2
  410036:	push   ss
  410037:	out    dx,al
  410038:	xor    ch,0xe
  41003b:	adc    al,0xa9
  41003d:	xchg   edx,eax
  41003e:	mov    al,0x15
  410040:	mov    dl,0xfd
  410042:	xor    al,0x17
  410044:	mov    edx,0x3c05f6fd
  410049:	or     eax,0xe8c86fee
  41004e:	scas   eax,DWORD PTR es:[edi]
  41004f:	div    DWORD PTR [ecx-0x63502103]
  410055:	cmc    
  410056:	(bad)  
  410057:	in     eax,0xa8
  410059:	jbe    0x41007b
	...
  410067:	add    BYTE PTR [eax],al
  410069:	add    ah,dl
  41006b:	mov    cl,0xfd
  41006d:	add    BYTE PTR [ebx],ah
  41006f:	xor    al,0xe9
  410071:	fimul  DWORD PTR [ebx+0x3ffff2d]
  410077:	xor    dh,ah
  410079:	loope  0x4100b2
  41007b:	int3   
  41007c:	add    cl,cl
  41007e:	in     al,0xc7
  410080:	add    BYTE PTR [ebp-0x53],dl
  410083:	daa    
  410084:	add    esp,0xffffffb2
  410087:	inc    eax
  410088:	inc    esp
  410089:	cld    
  41008a:	push   esi
  41008b:	pushf  
  41008c:	das    
  41008d:	addr16 les ebp,FWORD PTR [bx+si-0xd]
  410092:	inc    eax
  410093:	test   ebp,edi
  410095:	inc    BYTE PTR [ebx]
  410097:	enter  0x5ee8,0x5a
  41009b:	xor    edi,edi
  41009d:	or     esp,DWORD PTR [esi]
  41009f:	lahf   
  4100a0:	push   0x50
  4100a2:	push   ebp
  4100a3:	mov    al,0xf9
  4100a5:	add    al,0x3
  4100a7:	xchg   ebx,eax
  4100a8:	(bad)  
  4100a9:	xor    BYTE PTR [ecx-0x78],bh
  4100ac:	cmc    
  4100ad:	cmp    ebx,0xd601f233
  4100b3:	retf   
  4100b4:	jbe    0x4100bd
  4100b6:	adc    DWORD PTR [eax-0x34580b0b],ecx
  4100bc:	add    bl,ch
  4100be:	in     al,0x32
  4100c0:	jne    0x4100ba
  4100c2:	into   
  4100c3:	mul    DWORD PTR [ebp+0x41]
  4100c6:	xchg   esi,eax
  4100c7:	inc    eax
  4100c8:	inc    esp
  4100c9:	in     al,0xd6
  4100cb:	and    edi,DWORD PTR [edx+0x31]
	...
  4100da:	add    BYTE PTR [eax],al
  4100dc:	add    BYTE PTR [esi-0x653b7e35],ah
  4100e2:	popf   
  4100e3:	std    
  4100e4:	mov    ebx,ss
  4100e6:	cmovle ebp,DWORD PTR [eax+0x75]
  4100ea:	test   al,0x40
  4100ec:	add    BYTE PTR [ecx-0x61],bl
  4100ef:	or     eax,ebp
  4100f1:	jae    0x41007a
  4100f3:	(bad)  
  4100f4:	(bad)  
  4100f5:	aas    
  4100f6:	stos   BYTE PTR es:[edi],al
  4100f7:	inc    ecx
  4100f8:	jae    0x41012d
  4100fa:	icebp  
  4100fb:	in     al,dx
  4100fc:	add    BYTE PTR [edi],bh
  4100fe:	xchg   esi,eax
  4100ff:	mov    edx,0xcf4484f
  410104:	call   0xfeb90509
  410109:	daa    
  41010a:	test   ah,cl
  41010c:	(bad)  
  41010d:	xor    BYTE PTR [esi-0x3b],ah
  410110:	idiv   DWORD PTR [ebx+ecx*8+0x19abff7c]
  410117:	ins    DWORD PTR es:[edi],dx
  410118:	(bad)  
  410119:	xchg   DWORD PTR [esi],edi
  41011b:	ja     0x4100e5
  41011d:	std    
  41011e:	mov    eax,0x3cb45501
  410123:	add    ebx,0x3
  410126:	retf   
  410127:	add    al,0x6a
  410129:	sbb    BYTE PTR [esi],0xee
  41012c:	pop    es
  41012d:	out    0x27,eax
  41012f:	mov    esi,0xbe37e8fe
  410134:	sti    
  410135:	push   edi
  410136:	mov    al,0xe0
  410138:	inc    eax
  410139:	aas    
  41013a:	(bad)  
  41013b:	sub    eax,0x1608767
  410140:	inc    DWORD PTR [eax]
	...
  41014e:	add    BYTE PTR [eax],al
  410150:	push   edx
  410151:	mov    ecx,0xf5c3ef69
  410156:	ja     0x4101bf
  410158:	dec    esi
  410159:	xchg   dl,al
  41015b:	call   FWORD PTR [eax]
  41015d:	mov    ds:0xcdbf0001,eax
  410162:	in     eax,dx
  410163:	pop    es
  410164:	xchg   edi,eax
  410165:	idiv   BYTE PTR [eax-0x2]
  410168:	cwde   
  410169:	mov    ebp,0x6007672d
  41016e:	add    edi,edi
  410170:	adc    bh,BYTE PTR [ecx-0x4a7fd797]
  410176:	js     0x4101df
  410178:	cmp    eax,0x708001a1
  41017d:	(bad)  
  41017e:	pop    esp
  41017f:	or     al,0x57
  410181:	retf   
  410182:	fidivr WORD PTR [eax+0x61]
  410185:	scas   al,BYTE PTR es:[edi]
  410186:	pop    esp
  410187:	js     0x4101e2
  410189:	xor    al,0xe0
  41018b:	imul   ecx,DWORD PTR [edi+0x4],0xffffffc7
  41018f:	js     0x410208
  410191:	mov    ebx,esp
  410193:	add    ebp,edx
  410195:	inc    edx
  410196:	ret    
  410197:	test   ah,bh
  410199:	mov    WORD PTR ds:0x11c8a6d1,ss
  41019f:	int3   
  4101a0:	sub    DWORD PTR [eax+esi*8],esi
  4101a3:	imul   ecx,ebp,0x3
  4101a6:	xchg   edi,eax
  4101a7:	js     0x410170
  4101a9:	add    ecx,DWORD PTR [esp+eax*4-0x3cccfcad]
  4101b0:	or     BYTE PTR [esi+0x7fee],ch
	...
  4101c2:	add    bl,dh
  4101c4:	(bad)  
  4101c5:	out    0x3,eax
  4101c7:	mov    esp,0x7fcd20eb
  4101cc:	enter  0x8e7,0xc3
  4101d0:	mov    al,ch
  4101d2:	add    edi,DWORD PTR [edi]
  4101d4:	dec    ecx
  4101d5:	adc    al,0xd3
  4101d7:	test   DWORD PTR [edi],eax
  4101d9:	call   0x7a8541e1
  4101de:	add    bh,BYTE PTR [edi]
  4101e0:	enter  0x366a,0x2e
  4101e4:	add    DWORD PTR [ecx+0x63bd3f03],ebp
  4101ea:	mov    eax,ds:0x84e7c83f
  4101ef:	imul   edx,ebx,0xffffffb2
  4101f2:	ret    0xada0
  4101f5:	out    0x7f,al
  4101f7:	mov    bh,0xc7
  4101f9:	out    0x3,eax
  4101fb:	mov    esp,0xffcce0eb
  410200:	(bad)  
  410201:	out    0x8,eax
  410203:	mov    ebx,0x3ce8003c
  410208:	enter  0xac81,0x49
  41020c:	add    DWORD PTR [eax-0x17],eax
  41020f:	cmp    al,0xbd
  410211:	test   BYTE PTR [esi+0x3a],bl
  410214:	enter  0x6a00,0x16
  410218:	sti    
  410219:	dec    ecx
  41021a:	sub    BYTE PTR [ebx],bh
  41021c:	enter  0x6d0d,0x4d
  410220:	enter  0xe900,0x54
  410224:	push   0x2865
	...
  410235:	add    BYTE PTR [ebx+0x22],al
  410238:	add    DWORD PTR [esi+0x284a034e],ebp
  41023e:	inc    ebx
  41023f:	aas    
  410240:	inc    ebx
  410241:	mov    eax,ds:0xe9f92bbc
  410246:	inc    ecx
  410247:	inc    esp
  410248:	pop    eax
  410249:	call   0x7f6aca8a
  41024e:	stc    
  41024f:	lods   eax,DWORD PTR ds:[esi]
  410250:	jae    0x4101d3
  410252:	mov    ah,dl
  410254:	inc    edi
  410255:	and    al,BYTE PTR [edx]
  410257:	lods   eax,DWORD PTR ds:[esi]
  410258:	mov    bh,BYTE PTR [ecx+0x44]
  41025b:	mov    dh,0x73
  41025d:	in     al,dx
  41025e:	pop    ebx
  41025f:	repz (bad) 
  410261:	call   0xe59743a2
  410266:	(bad)  
  410269:	(bad)  
  41026a:	aad    0x20
  41026c:	mov    BYTE PTR [eax+ebx*2+0x40eefdc2],dh
  410273:	int3   
  410274:	(bad)  
  410275:	call   0xe84fa1b6
  41027a:	cmp    al,0xc8
  41027c:	push   0x107884d
  410281:	push   ds
  410282:	push   eax
  410283:	mov    al,ds:0xc83cc63b
  410288:	or     DWORD PTR [ecx],ebp
  41028a:	cmp    BYTE PTR [ebx-0xc],al
  41028d:	add    BYTE PTR [esi+0x18300c8],dl
  410293:	rol    DWORD PTR [eax],0xf
  410296:	jmp    0x0:0xfffe21
	...
  4102a9:	xor    ax,0x877
  4102ad:	mov    ?,WORD PTR ds:0x3b81ff46
  4102b3:	inc    esp
  4102b4:	lock jno 0x410254
  4102b7:	add    eax,0xff33ebff
  4102bc:	ja     0x410310
  4102be:	and    BYTE PTR [ebp+0x66358147],bh
  4102c4:	scas   al,BYTE PTR es:[edi]
  4102c5:	mov    DWORD PTR [ebp+0x346bfefd],eax
  4102cb:	out    0x5,al
  4102cd:	adc    eax,ecx
  4102cf:	add    BYTE PTR [ebx],cl
  4102d1:	(bad)  
  4102d2:	ret    0xb483
  4102d5:	es enter 0x6a00,0x26
  4102da:	inc    ecx
  4102db:	inc    esp
  4102dc:	call   0xec854407
  4102e1:	es sahf 
  4102e3:	std    
  4102e4:	imul   esp,esi,0x5715fe7d
  4102ea:	jg     0x41032c
  4102ec:	add    ch,ch
  4102ee:	pop    es
  4102ef:	je     0x41ca5e
  4102f5:	arpl   WORD PTR [eax-0x477eaf1f],cx
  4102fb:	in     eax,0xff
  4102fd:	mov    esp,DWORD PTR [ebx]
  4102ff:	call   DWORD PTR ds:0x407ee7
  410305:	popf   
  410306:	pop    es
  410307:	jb     0x410381
  410309:	adc    ecx,DWORD PTR [eax+0x50dd]
	...
  41031b:	add    ah,cl
  41031d:	(bad)  
  41031e:	push   0x0
  410320:	int3   
  410321:	stos   BYTE PTR es:[edi],al
  410322:	add    BYTE PTR [bx],bh
  410325:	shl    al,cl
  410327:	jecxz  0x4102b9
  410329:	mov    ah,0x10
  41032b:	dec    ebx
  41032c:	(bad)  
  41032d:	mov    al,ds:0x530bc00a
  410332:	jbe    0x4103a8
  410334:	pop    edi
  410335:	leave  
  410336:	push   ss
  410337:	inc    edi
  410338:	jo     0x4102d4
  41033a:	mov    DWORD PTR [ebx+ecx*4+0x34],eax
  41033e:	mov    esi,0xed8a0fdf
  410343:	frstpm(287 only) 
  410345:	mov    al,ds:0xa0e506e7
  41034a:	je     0x4103c0
  41034c:	arpl   WORD PTR [edx-0x200beaf3],ax
  410352:	add    al,0xb
  410354:	(bad)  
  410355:	in     al,dx
  410356:	sub    DWORD PTR [eax+0x3f],ebp
  410359:	mov    eax,ds:0xcc28bd64
  41035e:	or     al,0xe8
  410360:	mov    al,0xdd
  410362:	jae    0x410362
  410364:	sbb    bl,cl
  410366:	or     al,0xff
  410368:	mov    DWORD PTR [ebp+0x59377474],esp
  41036e:	stos   DWORD PTR es:[edi],eax
  41036f:	inc    edx
  410370:	add    BYTE PTR [edx],ch
  410372:	je     0x4103e8
  410374:	fbstp  TBYTE PTR [ecx]
  410376:	out    dx,al
  410377:	fcomi  st,st(0)
  410379:	mov    bl,0x9
  41037b:	call   0xfeb56116
	...
  41038c:	add    BYTE PTR [eax],al
  41038e:	add    al,ah
  410390:	xchg   ebx,eax
  410391:	push   ebp
  410392:	out    0x95,eax
  410394:	pop    edx
  410395:	je     0x410395
  410397:	rcl    BYTE PTR [ebx-0x57cd01a3],1
  41039d:	enter  0x3f40,0x97
  4103a1:	add    edi,edi
  4103a3:	xor    al,BYTE PTR ds:0x66521474
  4103a9:	ret    0xa9ff
  4103ac:	(bad)  
  4103ad:	pushf  
  4103ae:	jae    0x410348
  4103b0:	dec    ecx
  4103b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103b2:	je     0x41034d
  4103b4:	inc    esi
  4103b5:	cs adc al,0x90
  4103b8:	cld    
  4103b9:	adc    eax,DWORD PTR [ecx+0x4e7b40b]
  4103bf:	mov    edx,0x7974fd9f
  4103c4:	mov    al,ds:0xaa71763c
  4103c9:	add    DWORD PTR [ebx],0x74e03468
  4103cf:	dec    ebx
  4103d0:	std    
  4103d1:	xor    al,bl
  4103d3:	pop    eax
  4103d4:	test   eax,0x3451785c
  4103d9:	loopne 0x410446
  4103db:	dec    edi
  4103dc:	push   es
  4103dd:	(bad)  
  4103de:	je     0x4103c1
  4103e0:	or     DWORD PTR [ecx+0x1cc83c41],esi
  4103e6:	mov    DWORD PTR [eax+ecx*2],esp
  4103e9:	mov    ds:0xa6aa3157,eax
  4103ee:	xchg   BYTE PTR [ebx-0x54],bh
  4103f1:	aaa    
  4103f2:	jne    0x4103f4
	...
  410400:	add    BYTE PTR [eax],al
  410402:	xchg   ebx,eax
  410403:	mov    esp,0x982e96
  410408:	sub    DWORD PTR [edi+edx*1],eax
  41040b:	xchg   esi,eax
  41040c:	aad    0x3
  41040e:	aas    
  41040f:	mov    ebp,0x59c204a7
  410414:	call   0x24c2431c
  410419:	jl     0x410403
  41041b:	test   eax,0x3f803e7
  410420:	push   esp
  410421:	je     0x410464
  410423:	enter  0xe9e7,0xd0
  410427:	pop    ds
  410428:	call   0xe860cd16
  41042d:	xchg   BYTE PTR [ebx-0x4c],bh
  410430:	xchg   edi,eax
  410431:	xchg   bl,al
  410433:	mov    ah,0x0
  410435:	sub    ebp,DWORD PTR ds:[edx-0x4e66d1b0]
  41043c:	std    
  41043d:	pushf  
  41043e:	sub    BYTE PTR [ecx-0x37c3305d],ah
  410444:	or     DWORD PTR [ecx],ebp
  410446:	mov    al,ds:0x3d9be7c4
  41044b:	enter  0x9100,0x7f
  41044f:	add    DWORD PTR [eax-0x17],eax
  410452:	repz xor ecx,DWORD PTR ds:0xfe00d301
  410459:	out    dx,al
  41045a:	lea    edi,[esi]
  41045c:	shl    BYTE PTR [esi+esi*4-0x4b],1
  410460:	cmc    
  410461:	fmulp  st(4),st
  410463:	clc    
  410464:	push   edx
  410465:	rol    DWORD PTR [eax],0x0
	...
  410474:	add    BYTE PTR [eax+eax*1+0x43cacefe],dh
  41047b:	fdivr  QWORD PTR [esi-0x33175634]
  410481:	push   es
  410482:	stos   BYTE PTR es:[edi],al
  410483:	std    
  410484:	inc    ebx
  410485:	cmp    esp,DWORD PTR [eax]
  410487:	fild   DWORD PTR [esi+0x2]
  41048a:	test   eax,0xb28f5cfe
  41048f:	std    
  410490:	sahf   
  410491:	mov    esp,?
  410493:	gs and edx,edi
  410496:	test   al,0xe5
  410498:	jl     0x410465
  41049a:	test   eax,0x98b670fd
  41049f:	cmc    
  4104a0:	jle    0x41050e
  4104a2:	pop    ds
  4104a3:	add    DWORD PTR [ecx],eax
  4104a5:	mov    WORD PTR [edx],fs
  4104a7:	inc    eax
  4104a8:	jmp    0x5f1d791a
  4104ad:	ins    BYTE PTR es:[edi],dx
  4104ae:	stos   BYTE PTR es:[edi],al
  4104af:	std    
  4104b0:	adc    al,0xe4
  4104b2:	add    BYTE PTR [eax-0x17],al
  4104b5:	je     0x410531
  4104b7:	dec    eax
  4104b8:	dec    esi
  4104b9:	dec    esp
  4104ba:	inc    eax
  4104bb:	add    DWORD PTR [eax],0x6a
  4104be:	sub    eax,0xc48cffff
  4104c3:	push   0xfd8381e4
  4104c8:	(bad)  
  4104c9:	xor    ebx,DWORD PTR [eax]
  4104cb:	idiv   edi
  4104cd:	pop    ecx
  4104ce:	xor    eax,0x83ce6735
  4104d3:	std    
  4104d4:	out    0xf7,eax
  4104d6:	imul   edi,esi,0xffffffff
	...
  4104e5:	add    BYTE PTR [eax],al
  4104e7:	add    BYTE PTR [edi],bl
  4104e9:	aas    
  4104ea:	in     eax,0xf7
  4104ec:	cmp    DWORD PTR ds:0xbce0068,esi
  4104f2:	addr16 inc ecx
  4104f4:	xor    ax,0xdcb5
  4104f8:	jno    0x41052f
  4104fa:	(bad)  
  4104fb:	inc    DWORD PTR [ebx-0x63]
  4104fe:	inc    ebp
  4104ff:	inc    ecx
  410500:	data16 or al,0x93
  410503:	dec    eax
  410504:	imul   esi,DWORD PTR ds:0x2d828589,0xc3ecffff
  41050e:	push   0xfd8d81ee
  410513:	(bad)  
  410514:	mov    bl,0x17
  410516:	idiv   edi
  410518:	fstp   DWORD PTR [edx]
  41051a:	xor    eax,0xfd8d6e67
  41051f:	out    0x33,eax
  410521:	fs (bad) 
  410523:	call   FWORD PTR [edi-0x460822b0]
  410529:	sbb    al,BYTE PTR [ebx-0xdd5543]
  41052f:	jmp    esi
  410531:	lahf   
  410532:	push   edx
  410533:	push   0xbeedcbe6
  410538:	pop    ecx
  410539:	mov    al,ds:0x8c84e805
  41053e:	(bad)  
  41053f:	(bad)  
  410540:	jns    0x4105a2
  410542:	in     eax,dx
  410543:	idiv   DWORD PTR [edi]
  410545:	(bad)  
  410546:	jb     0x410546
  410548:	push   edx
  410549:	test   eax,0x4559
	...
  41055a:	add    BYTE PTR [ebp+0xe],bh
  41055d:	jae    0x41055d
  41055f:	repnz adc eax,0xdeb0fe7b
  410565:	clc    
  410566:	pop    es
  410567:	xchg   edi,eax
  410568:	cdq    
  410569:	ret    
  41056a:	(bad)  
  41056b:	mov    al,ds:0x90e7b8ee
  410570:	(bad)  
  410571:	jb     0x410571
  410573:	or     ch,BYTE PTR [ecx-0x2a02d6a7]
  410579:	jb     0x410579
  41057b:	retf   0x7ad5
  41057e:	(bad)  
  41057f:	js     0x410527
  410581:	cmc    
  410582:	pop    es
  410583:	addr16 jge 0x410549
  410586:	(bad)  
  410587:	push   0x68dfb5b6
  41058c:	scas   al,BYTE PTR es:[edi]
  41058d:	outs   dx,DWORD PTR ds:[esi]
  41058e:	(bad)  
  41058f:	rcr    BYTE PTR [eax+0x7dfd0d59],cl
  410595:	outs   dx,DWORD PTR ds:[esi]
  410596:	(bad)  
  410597:	xchg   edx,eax
  410598:	jne    0x410611
  41059a:	inc    BYTE PTR [eax-0x72]
  41059d:	cmc    
  41059e:	pop    es
  41059f:	daa    
  4105a0:	xor    DWORD PTR [ebx-0x2],esi
  4105a3:	xor    BYTE PTR [esi-0x4b],bl
  4105a6:	(bad)  [eax]
  4105a8:	jbe    0x410619
  4105aa:	out    0x1d,eax
  4105ac:	cmc    
  4105ad:	outs   dx,DWORD PTR ds:[esi]
  4105ae:	(bad)  
  4105af:	sbb    ah,bh
  4105b1:	je     0x4105a9
  4105b3:	adc    BYTE PTR [esi],bh
  4105b5:	pop    esp
  4105b6:	(bad)  
  4105b7:	adc    DWORD PTR [esi+0x6f],0xfffffffe
  4105bb:	retf   0x773c
  4105be:	inc    BYTE PTR [eax]
	...
  4105cc:	add    BYTE PTR [eax],al
  4105ce:	clc    
  4105cf:	cmp    BYTE PTR [eax+0x43],al
  4105d2:	lock sbb eax,0x1dd7b470
  4105d8:	jo     0x4105d8
  4105da:	xlat   BYTE PTR ds:[ebx]
  4105db:	(bad)  
  4105dc:	sub    al,cl
  4105de:	fldenv [esi-0x612348a2]
  4105e4:	push   esi
  4105e5:	jno    0x4105c7
  4105e7:	pop    ebp
  4105e8:	mov    ds:0x7ca6c170,eax
  4105ed:	fs mov cl,0xa6
  4105f0:	ds pop esp
  4105f2:	in     eax,0xb
  4105f4:	aaa    
  4105f5:	jno    0x4105a0
  4105f7:	or     al,0x30
  4105f9:	pop    ebx
  4105fa:	add    BYTE PTR [esi+0x1c997126],ah
  410600:	sbb    al,0x5c
  410602:	sub    dh,ch
  410604:	out    0x3,eax
  410606:	jbe    0x410591
  410608:	fild   WORD PTR [ebx]
  41060a:	jmp    0x91a3:0x7c851352
  410611:	add    esp,ebp
  410613:	adc    bh,dh
  410615:	test   BYTE PTR [eax-0x50],0x2c
  410619:	ret    
  41061a:	popa   
  41061b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41061c:	jo     0x4105e4
  41061e:	push   esp
  41061f:	das    
  410620:	mov    ds:0xd6c7ffe8,eax
  410625:	test   BYTE PTR [eax-0x50],0xdf
  410629:	jno    0x41066c
  41062b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41062c:	(bad)  
  41062d:	div    BYTE PTR [esi+eiz*4]
  410630:	xor    al,0xfc
	...
  41063e:	add    BYTE PTR [eax],al
  410640:	add    BYTE PTR [eax],bl
  410642:	mov    cl,0x28
  410644:	jno    0x41066f
  410646:	nop
  410647:	test   eax,0x72fb3f07
  41064c:	pop    edi
  41064d:	mov    ebp,0x8b70938c
  410652:	aam    0x7f
  410654:	out    dx,al
  410655:	push   ebp
  410656:	enter  0xfce7,0xc0
  41065a:	sbb    ebp,esp
  41065c:	cmp    bh,dh
  41065e:	aam    0xe7
  410660:	jo     0x4106cd
  410662:	mov    eax,0xf3098100
  410667:	add    cl,ch
  410669:	jecxz  0x4106d0
  41066b:	jae    0x41065a
  41066d:	adc    eax,0x55e90c87
  410672:	or     al,0xf9
  410674:	push   esi
  410675:	rcr    DWORD PTR [ebp-0x59076218],1
  41067b:	std    
  41067c:	jo     0x4105ff
  41067e:	mov    eax,ds:0xa620b4fd
  410683:	jae    0x4106b6
  410685:	das    
  410686:	sbb    al,0x11
  410688:	inc    ecx
  410689:	cwde   
  41068a:	adc    eax,0x659b26fe
  41068f:	je     0x410673
  410691:	adc    eax,0x3c83f50c
  410696:	push   ebx
  410697:	inc    ebx
  410698:	adc    eax,0x573a66c
  41069d:	adc    al,0x79
  41069f:	imul   edi,esi,0x7dc0d1e0
	...
  4106b1:	add    BYTE PTR [eax],al
  4106b3:	add    BYTE PTR [esi],dl
  4106b5:	xor    BYTE PTR [ecx],al
  4106b7:	(bad)  
  4106b9:	(bad)  
  4106ba:	std    
  4106bb:	pop    esp
  4106bc:	pop    ebx
  4106bd:	lods   eax,DWORD PTR ds:[esi]
  4106be:	lods   eax,DWORD PTR ds:[esi]
  4106bf:	sub    eax,esp
  4106c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106c2:	std    
  4106c3:	pop    esp
  4106c4:	aas    
  4106c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106c6:	jae    0x4106a9
  4106c8:	in     al,0xca
  4106ca:	aas    
  4106cb:	(bad)  
  4106cc:	test   al,0xa6
  4106ce:	jae    0x410685
  4106d0:	mov    al,ds:0x26b6fd1c
  4106d5:	int    0xe8
  4106d7:	popf   
  4106d8:	sti    
  4106d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106da:	std    
  4106db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106dc:	push   ss
  4106dd:	mov    eax,ds:0xa5fcbce8
  4106e2:	std    
  4106e3:	mov    al,ds:0x3400d17d
  4106e8:	test   BYTE PTR [ecx-0x55ff7f],dh
  4106ee:	push   ebx
  4106ef:	(bad)  
  4106f0:	jmp    0x410696
  4106f2:	in     eax,0xa7
  4106f4:	push   ds
  4106f5:	xor    eax,0x9e960bff
  4106fa:	add    al,0x5e
  4106fc:	(bad)  
  4106fe:	or     al,BYTE PTR [eax]
  410700:	arpl   WORD PTR [edi-0x608eaf13],cx
  410706:	or     eax,ebp
  410708:	(bad)  
  410709:	arpl   si,di
  41070b:	jmp    FWORD PTR [ebp+0x6840f08]
  410711:	int3   
  410712:	add    BYTE PTR [eax],al
  410714:	jno    0x4106b5
  410716:	stc    
  410717:	call   0x41071c
	...
  410724:	add    BYTE PTR [eax],al
  410726:	add    BYTE PTR [edx],dl
  410728:	mov    esi,edi
  41072a:	dec    DWORD PTR [edi]
  41072c:	(bad)  
  410730:	xor    al,0xff
  410732:	jne    0x410776
  410734:	xor    eax,0x2a3ef875
  410739:	inc    ebx
  41073a:	inc    DWORD PTR [ecx+0x21]
  41073d:	jne    0x41072b
  41073f:	dec    edi
  410740:	imul   edi,ebp,0x138056ff
  410746:	push   0xe856c897
  41074b:	push   ss
  41074c:	call   0x88e0751
  410751:	jne    0x410758
  410753:	jg     0x4107a5
  410755:	std    
  410756:	call   DWORD PTR [esi+0x21]
  410759:	out    dx,al
  41075a:	push   0x408018
  41075f:	push   cs
  410760:	cmp    eax,0xc7160027
  410765:	lock mov DWORD PTR [ebx+0x4],ebp
  410769:	data16 es cs (bad) 
  41076d:	std    
  41076e:	push   ebp
  41076f:	scas   al,BYTE PTR es:[edi]
  410770:	mov    esi,0xb13f002c
  410775:	cli    
  410776:	mov    edi,0x755aaf8a
  41077b:	lds    eax,FWORD PTR [ecx+0x18dc5479]
  410781:	leave  
  410782:	jecxz  0x4107db
  410784:	mov    ecx,ebx
  410786:	inc    eax
  410787:	aas    
  410788:	mov    ebx,0x115c
	...
  410799:	add    BYTE PTR [ebx],ch
  41079b:	mov    cl,0x1
  41079d:	or     edi,edi
  41079f:	jl     0x4107a0
  4107a1:	jmp    0x8917:0x6772266a
  4107a8:	(bad)  
  4107a9:	jmp    DWORD PTR [eax+0x3f001743]
  4107af:	scas   al,BYTE PTR es:[edi]
  4107b0:	jno    0x41073a
  4107b2:	xor    bh,BYTE PTR [ebp+0x701725d9]
  4107b8:	add    DWORD PTR [esi-0x59],edx
  4107bb:	rcr    DWORD PTR [edx],0x0
  4107be:	aas    
  4107bf:	xchg   esi,eax
  4107c0:	inc    ecx
  4107c1:	je     0x410800
  4107c3:	(bad)  
  4107c4:	sub    cl,BYTE PTR [edx-0x2926d6d1]
  4107ca:	(bad)  
  4107cb:	je     0x410816
  4107cd:	mov    bh,dl
  4107cf:	int3   
  4107d0:	inc    ebx
  4107d1:	jmp    FWORD PTR [eax+0x26]
  4107d4:	leave  
  4107d5:	xlat   BYTE PTR ds:[ebx]
  4107d6:	jns    0x410789
  4107d8:	add    edi,edi
  4107da:	ror    BYTE PTR [ebx+ebp*2-0xa7d988c],cl
  4107e1:	pop    es
  4107e2:	push   edi
  4107e3:	push   ds
  4107e4:	outs   dx,DWORD PTR ds:[esi]
  4107e5:	inc    BYTE PTR [eax+0x27]
  4107e8:	(bad)  
  4107e9:	loop   0x4107af
  4107eb:	repz push 0xd6174f87
  4107f1:	(bad)  
  4107f2:	mov    ah,0xf3
  4107f4:	dec    esp
  4107f5:	xchg   DWORD PTR [edi+0x31],ecx
  4107f8:	das    
  4107f9:	add    BYTE PTR [eax-0x38],cl
  4107fc:	ins    BYTE PTR es:[edi],dx
  4107fd:	fadd   DWORD PTR [eax]
	...
  41080b:	add    BYTE PTR [eax],al
  41080d:	adc    DWORD PTR [ebx-0x4b6c9262],esp
  410813:	jg     0x410861
  410815:	jle    0x4107ba
  410817:	mov    ?,WORD PTR [edi-0x7d]
  41081a:	cwde   
  41081b:	pop    ss
  41081c:	pop    esp
  41081d:	cmp    DWORD PTR [ecx],edx
  41081f:	jg     0x41088e
  410821:	aad    0xc7
  410823:	adc    eax,0xe7d3fe3b
  410828:	(bad)  
  410829:	lds    esi,FWORD PTR [ebx-0x4fbb089a]
  41082f:	hlt    
  410830:	(bad)  
  410831:	leave  
  410832:	mov    ds:0xf14c43e2,al
  410837:	mov    edi,0xe809216a
  41083c:	rcr    DWORD PTR [eax-0x56935a98],cl
  410842:	idiv   DWORD PTR [edi-0x17f87339]
  410848:	fistp  DWORD PTR [eax+0x18ae16a2]
  41084e:	into   
  41084f:	pop    edx
  410851:	mov    BYTE PTR [edx],dl
  410853:	pop    ss
  410854:	idiv   DWORD PTR [eax]
  410856:	mov    al,0xc3
  410858:	fstp   TBYTE PTR [ecx-0x5e]
  41085b:	sete   dh
  41085e:	mov    ds:0xcf7e3afe,al
  410863:	out    0xd6,eax
  410865:	mov    ch,0xb3
  410867:	push   0x48
  410869:	push   esp
  41086a:	sub    eax,0xa306d9e8
  41086f:	push   esp
  410870:	cld    
	...
  41087d:	add    BYTE PTR [eax],al
  41087f:	add    BYTE PTR [eax+0x55],ah
  410882:	push   ss
  410883:	ins    DWORD PTR es:[edi],dx
  410884:	inc    ecx
  410885:	push   eax
  410886:	and    al,0x70
  410888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410889:	mov    esi,0xb038f6c6
  41088e:	test   BYTE PTR [ecx+ebp*1-0x5e],ch
  410892:	add    BYTE PTR [ebx+0x5e],al
  410895:	mov    eax,ds:0x3e74e173
  41089a:	std    
  41089b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089c:	mov    ds:0x119e1d2f,eax
  4108a1:	retf   0x78e8
  4108a4:	xchg   ebx,eax
  4108a5:	mov    ds:0xc84301fd,al
  4108aa:	in     eax,dx
  4108ab:	inc    edi
  4108ac:	adc    al,0xc6
  4108ae:	push   0xf8304328
  4108b3:	push   cs
  4108b4:	cld    
  4108b5:	mov    eax,ds:0xa9d4f4fe
  4108ba:	(bad)
  4108bd:	mov    ds:0xa258d4fd,al
  4108c2:	jae    0x4108a5
  4108c4:	fs pop esp
  4108c6:	cmp    eax,0xc2902b4e
  4108cb:	in     eax,dx
  4108cc:	cmp    al,0xfb
  4108ce:	mov    DWORD PTR [ebp-0x43],ecx
  4108d1:	test   eax,ebx
  4108d3:	adc    esp,DWORD PTR ds:[edx+0x1128a48b]
  4108da:	(bad)  
  4108db:	pushf  
  4108dc:	nop
  4108dd:	mov    ds:0x3ce4f173,al
  4108e2:	sub    ch,cl
	...
  4108f0:	add    BYTE PTR [eax],al
  4108f2:	add    BYTE PTR [ecx*8+0x61c1dec0],bh
  4108f9:	(bad)  
  4108fa:	call   0x184923b
  4108ff:	cmp    al,0xc8
  410901:	add    cl,ch
  410903:	sti    
  410904:	or     esi,ebp
  410906:	out    dx,al
  410907:	cmp    al,0xc8
  410909:	add    BYTE PTR [ebx+0x3b],dl
  41090c:	add    DWORD PTR cs:[ebx+0x43],edx
  410910:	add    DWORD PTR cs:[esi+edi*2-0x6b],esp
  410915:	push   eax
  410916:	pop    esp
  410917:	mov    esi,0xf900f594
  41091c:	sub    al,0x4e
  41091e:	push   DWORD PTR [ebx+0x34]
  410921:	push   DWORD PTR [ebp-0x16]
  410924:	add    ebp,DWORD PTR [edx+ebp*1+0x26]
  410928:	lds    ecx,FWORD PTR [ecx]
  41092a:	shl    BYTE PTR [edx],0xc7
  41092d:	out    0x83,eax
  41092f:	pop    ss
  410930:	lds    eax,FWORD PTR [eax]
  410932:	push   0x406455
  410937:	leave  
  410938:	xchg   esi,eax
  410939:	or     eax,ebp
  41093b:	test   BYTE PTR [edi+0x2146fffe],0xce
  410942:	lea    edx,[ebx+0x18]
  410945:	idiv   edi
  410947:	imul   edi,DWORD PTR [edi+ecx*2-0x18],0xfffe8806
  41094f:	dec    edi
  410950:	inc    edi
  410951:	aad    0xf7
  410953:	imul   ebp,DWORD PTR ds:0xb6e6,0x0
	...
  410965:	add    bh,ah
  410967:	sub    eax,0x7ca66aff
  41096c:	push   ecx
  41096d:	push   0xb5fdc4d7
  410972:	dec    esi
  410973:	adc    eax,0x9769ffff
  410978:	add    eax,0xfe881fe8
  41097d:	dec    DWORD PTR [edi]
  41097f:	inc    edi
  410980:	in     eax,dx
  410981:	imul   DWORD PTR [ecx]
  410983:	sub    eax,0x8fbe0068
  410988:	gs inc ecx
  41098a:	sub    ax,0xd8b5
  41098e:	jno    0x4109bd
  410990:	(bad)  
  410991:	jmp    ebx
  410993:	pushf  
  410994:	in     eax,0x9e
  410996:	mov    ds:0xe389ff2d,al
  41099b:	clc    
  41099c:	idiv   bh
  41099e:	imul   eax,DWORD PTR [edx+0x113f67fd],0x8e3f40dd
  4109a8:	mov    al,0xd7
  4109aa:	sub    BYTE PTR [edi-0x664d0196],al
  4109b0:	pop    ecx
  4109b1:	cmp    BYTE PTR [ebx+0x56],0x6a
  4109b5:	mov    dl,al
  4109b7:	mov    DWORD PTR [edx-0x2],esi
  4109ba:	adc    BYTE PTR ds:0x3f10db81,dl
  4109c0:	push   0x4f
  4109c2:	xchg   edi,eax
  4109c3:	(bad)  
  4109c4:	fadd   QWORD PTR [eax+0x3f]
  4109c7:	dec    esi
  4109c8:	mov    al,0xd7
	...
  4109d6:	add    BYTE PTR [eax],al
  4109d8:	add    al,ch
  4109da:	inc    esi
  4109db:	push   0xfffffffe
  4109dd:	jb     0x410978
  4109df:	pop    ecx
  4109e0:	bound  edi,QWORD PTR [ebx+0x16]
  4109e3:	imul   ecx,DWORD PTR [eax-0x18dba3e],0xffffffd0
  4109ea:	jnp    0x4109ed
  4109ec:	push   0xffc47945
  4109f1:	sar    DWORD PTR [ecx+ecx*2],0xf6
  4109f5:	mov    eax,0x47746b0e
  4109fa:	stc    
  4109fb:	mov    ecx,0x7cdea843
  410a00:	test   BYTE PTR [edi-0x43019522],bl
  410a06:	sub    al,0x72
  410a08:	not    BYTE PTR [eax+0x147401e6]
  410a0e:	xor    ch,BYTE PTR [ecx+0x6ab688eb]
  410a14:	(bad)  
  410a15:	in     al,dx
  410a16:	push   edx
  410a17:	xchg   BYTE PTR [edi+eiz*2+0x3ffe679e],bh
  410a1e:	adc    eax,0xb13f67cd
  410a23:	pop    edx
  410a24:	mov    ebp,0xe8121458
  410a29:	mov    eax,cs
  410a2b:	and    al,0x69
  410a2d:	dec    ecx
  410a2e:	lahf   
  410a2f:	xchg   esp,eax
  410a30:	je     0x410a7b
  410a32:	lahf   
  410a33:	(bad)  
  410a34:	imul   esi,DWORD PTR [ebx+0x7101bfb8],0x69c69f
	...
  410a4a:	add    BYTE PTR [eax],al
  410a4c:	rep stos DWORD PTR es:[edi],eax
  410a4e:	mov    dh,0x69
  410a50:	and    DWORD PTR [edi-0x5ed8ebc4],ebx
  410a56:	in     al,dx
  410a57:	push   0x5c5c9f11
  410a5c:	adc    DWORD PTR [edi-0x47749662],ebx
  410a62:	jg     0x410ac1
  410a64:	cmp    ebx,DWORD PTR [edi+0x7bab698e]
  410a6a:	jle    0x410ad5
  410a6c:	jmp    0xe9a13f0f
  410a71:	sahf   
  410a72:	jbe    0x410add
  410a74:	push   ebx
  410a75:	mov    eax,0x9f139d7f
  410a7a:	imul   dx,WORD PTR [ebx-0x3e96a959],0xdc9e
  410a83:	adc    esp,DWORD PTR [edi-0x4e96f370]
  410a89:	sahf   
  410a8a:	mov    esp,0x1f54a813
  410a8f:	jno    0x410a32
  410a91:	sahf   
  410a92:	ss out dx,eax
  410a94:	inc    eax
  410a95:	mov    al,0xb9
  410a97:	imul   edx,DWORD PTR [ecx+0x70af269e],0x98691e96
  410aa1:	inc    ecx
  410aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa3:	push   0x74549e79
  410aa8:	imul   ebx,DWORD PTR [esi+0x7b95c06],0x68ff
	...
  410abe:	add    BYTE PTR [ecx+0x54],ah
  410ac1:	add    BYTE PTR ds:0x1fd9dce,al
  410ac7:	mov    edi,0xd7e6fdde
  410acc:	push   ebx
  410acd:	call   0xe8dee2a8
  410ad2:	push   eax
  410ad3:	add    ebx,DWORD PTR [edi-0x561e3103]
  410ad9:	cmc    
  410ada:	(bad)  
  410adb:	xchg   edi,eax
  410adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410add:	outs   dx,BYTE PTR ds:[esi]
  410ade:	sub    DWORD PTR [esi-0x63830262],edx
  410ae4:	xchg   esi,eax
  410ae5:	std    
  410ae6:	scas   al,BYTE PTR es:[edi]
  410ae7:	je     0x410b13
  410ae9:	inc    ecx
  410aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aeb:	xchg   edi,eax
  410aec:	sahf   
  410aed:	inc    ebx
  410aee:	mov    eax,ds:0x96ff0e65
  410af3:	addr16 sahf 
  410af5:	jae    0x410a84
  410af7:	xchg   esp,eax
  410af8:	mov    ebp,DWORD PTR [eax]
  410afa:	jmp    0xee039a3b
  410aff:	cmp    al,0xf3
  410b01:	mov    DWORD PTR [ebp+0x3fc89c3],eax
  410b07:	cmp    esi,DWORD PTR [edx]
  410b09:	dec    edx
  410b0a:	data16 fld st(5)
  410b0d:	call   0xfdde24e6
  410b12:	pusha  
  410b13:	stc    
  410b14:	mov    eax,ds:0x25b4d4fd
  410b19:	xor    ecx,edx
  410b1b:	jge    0x410aba
  410b1d:	(bad)  
  410b1e:	hlt    
  410b1f:	lahf   
  410b20:	add    eax,0xe940
	...
  410b31:	add    ah,dh
  410b33:	cwde   
  410b34:	sti    
  410b35:	cs daa 
  410b37:	sahf   
  410b38:	jae    0x410b2b
  410b3a:	fs in  eax,dx
  410b3c:	push   0x3303ca8
  410b41:	jmp    0xc295382
  410b46:	fstp   DWORD PTR [ebp-0x51beff03]
  410b4c:	stc    
  410b4d:	(bad)  
  410b4e:	jmp    0x410af0
  410b50:	in     eax,0x88
  410b52:	xchg   ebx,eax
  410b53:	xor    bh,bh
  410b55:	leave  
  410b56:	and    al,0x9d
  410b58:	std    
  410b59:	push   esp
  410b5a:	int    0xff
  410b5c:	add    ah,0x62
  410b5f:	cmp    ch,0x69
  410b62:	bound  esp,QWORD PTR ds:0xbffe0875
  410b68:	cmp    edi,edi
  410b6a:	add    DWORD PTR [ebx],ebx
  410b6c:	inc    ebp
  410b6d:	cld    
  410b6e:	mov    es,esp
  410b70:	add    bh,ch
  410b72:	nop
  410b73:	jl     0x410afb
  410b75:	push   0x9268c467
  410b7a:	cs cmp ebp,0xfffffffe
  410b7e:	sub    ebx,DWORD PTR [ebp+eiz*8-0xdab6a1]
  410b85:	dec    DWORD PTR [ebx+0x30]
  410b88:	push   DWORD PTR [ebp-0x12]
  410b8b:	add    BYTE PTR [ebp+0x3d],cl
  410b8e:	popa   
  410b8f:	and    eax,0xc8eac2c9
  410b94:	push   ebx
  410b95:	mov    eax,DWORD PTR [eax]
	...
  410ba3:	add    BYTE PTR [eax],al
  410ba5:	push   edx
  410ba6:	inc    ebx
  410ba7:	rcl    eax,0x69
  410baa:	and    eax,0x249b8dff
  410baf:	dec    esi
  410bb0:	call   FWORD PTR [ebx-0x618a016c]
  410bb6:	add    BYTE PTR [edx],dh
  410bb8:	sub    BYTE PTR [esi-0x6e3ff638],dl
  410bbe:	inc    edi
  410bbf:	adc    al,0x2
  410bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bc2:	enter  0x45c5,0x4e
  410bc6:	les    eax,FWORD PTR [eax]
  410bc8:	add    BYTE PTR [esi+0x21f444dd],dl
  410bce:	popf   
  410bcf:	std    
  410bd0:	(bad)  
  410bd1:	aas    
  410bd2:	dec    ecx
  410bd3:	add    DWORD PTR [edx+0x3f],ebp
  410bd6:	dec    ecx
  410bd7:	add    DWORD PTR [edx+0x3f],ebp
  410bda:	adc    al,0xc0
  410bdc:	cvttss2si eax,DWORD PTR [eax+0x669550f3]
  410be4:	dec    edi
  410be5:	push   eax
  410be6:	adc    ebp,DWORD PTR [edx-0x2]
  410be9:	shl    BYTE PTR [edx-0x50e8faa7],cl
  410bef:	add    DWORD PTR [ebx],ecx
  410bf1:	(bad)  
  410bf2:	std    
  410bf3:	(bad)  
  410bf4:	call   0x42bd10
  410bf9:	xchg   edi,eax
  410bfa:	out    dx,al
  410bfb:	mov    esp,0xf05a3f40
  410c00:	or     esp,DWORD PTR [edi]
  410c02:	stos   BYTE PTR es:[edi],al
  410c03:	ret    0x10fe
  410c06:	ret    0xcf79
	...
  410c15:	add    BYTE PTR [eax],al
  410c17:	add    BYTE PTR [edx+0xf66e2c],bh
  410c1d:	cmp    edx,ecx
  410c1f:	push   ecx
  410c20:	out    0x39,eax
  410c22:	mov    edi,0x8128f0fe
  410c27:	xlat   BYTE PTR ds:[ebx]
  410c28:	lock inc edx
  410c2a:	out    0x71,ax
  410c2d:	pop    edx
  410c2e:	data16 (bad) 
  410c30:	gs mov cl,0xd9
  410c33:	mov    eax,0xff04f067
  410c38:	xchg   edx,eax
  410c39:	or     DWORD PTR [edi-0x2],ebp
  410c3c:	sar    dl,0xf0
  410c3f:	pop    es
  410c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c41:	pusha  
  410c42:	mov    edi,0x8128b0fe
  410c47:	out    dx,eax
  410c48:	mov    al,0x2
  410c4a:	imul   edi,DWORD PTR [bx],0xfe675179
  410c51:	mov    al,0x66
  410c53:	mov    ah,0x77
  410c55:	shl    BYTE PTR [esi-0x2],cl
  410c58:	mov    al,cl
  410c5a:	pushf  
  410c5b:	sti    
  410c5c:	cwde   
  410c5d:	shr    BYTE PTR [ecx+0x6c517966],cl
  410c63:	push   edi
  410c64:	imul   ebx,DWORD PTR [ebx+0x2368d90e],0xc7ffdb0d
  410c6e:	(bad)  
  410c6f:	scas   eax,DWORD PTR es:[edi]
  410c70:	jo     0x410c05
  410c72:	mul    BYTE PTR [ebp+0x51]
  410c75:	adc    eax,0x6255be0
  410c7a:	out    0x65,eax
	...
  410c88:	add    BYTE PTR [eax],al
  410c8a:	add    BYTE PTR [edi+0x396dcf45],dh
  410c90:	fwait
  410c91:	fs jg  0x410ca8
  410c94:	xchg   ebx,eax
  410c95:	into   
  410c96:	gs js  0x410cc9
  410c99:	(bad)  
  410c9a:	fdivr  QWORD PTR [edi-0x38]
  410c9d:	mov    esi,0xb692f0af
  410ca2:	adc    DWORD PTR gs:0x9055be0,edx
  410ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410caa:	gs mov bh,0x44
  410cad:	sub    DWORD PTR [ebp-0x7],0xffffff9a
  410cb1:	add    DWORD PTR [edi+eiz*2],eax
  410cb4:	mov    bh,0x0
  410cb6:	ret    
  410cb7:	call   0xe98d4955
  410cbc:	call   0x647f:0xd053657e
  410cc3:	jg     0x410c60
  410cc5:	outs   dx,BYTE PTR ds:[esi]
  410cc6:	jnp    0x410c8b
  410cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cc9:	pop    esi
  410cca:	ror    DWORD PTR gs:[esp+eiz*2+0x54],0xb1
  410cd0:	call   0xc2c0:0xef18d456
  410cd7:	test   al,0x99
  410cd9:	jl     0x410d27
  410cdb:	test   eax,0x13653e9a
  410ce0:	rol    BYTE PTR [eax],1
  410ce2:	inc    ecx
  410ce3:	sti    
  410ce4:	pop    es
  410ce5:	(bad)  
  410ce6:	cs add al,0x44
  410ce9:	aam    0x1e
  410ceb:	sbb    bl,BYTE PTR [edx+0x5c81]
	...
  410cfd:	add    bl,dh
  410cff:	xchg   ecx,eax
  410d00:	std    
  410d01:	push   ss
  410d02:	cmp    edx,DWORD PTR [edx+ebp*2]
  410d05:	push   0xffffffa0
  410d07:	scas   al,BYTE PTR es:[edi]
  410d08:	cmc    
  410d09:	push   es
  410d0a:	ficomp DWORD PTR [edx+0x5bbf8b71]
  410d10:	call   0xdae913
  410d15:	jne    0x410d8c
  410d17:	and    al,BYTE PTR [ecx]
  410d19:	jmp    0x553e6a09
  410d1e:	push   ebx
  410d1f:	mov    al,0x29
  410d21:	adc    bl,BYTE PTR [edx-0x536b0266]
  410d27:	xchg   edx,eax
  410d28:	std    
  410d29:	(bad)  
  410d2a:	fwait
  410d2b:	adc    al,0x11
  410d2d:	shl    DWORD PTR [ebx],1
  410d2f:	(bad)  
  410d31:	mov    dh,0x9b
  410d33:	push   esp
  410d34:	in     al,dx
  410d35:	mov    dh,0xa3
  410d37:	call   0xe26f:0xb02b1cfd
  410d3e:	arpl   WORD PTR [edx-0x6d6ba303],bx
  410d44:	std    
  410d45:	mov    fs,WORD PTR [ebx+0x14]
  410d48:	adc    DWORD PTR [ecx+0x7efddedf],edx
  410d4e:	arpl   WORD PTR [esp+ebx*8+0x7e],dx
  410d52:	pop    ebx
  410d53:	call   0x66fd:0x926834fd
  410d5a:	pop    ebx
  410d5b:	adc    al,0x11
  410d5d:	push   ecx
  410d5e:	pop    edi
  410d5f:	(bad)  
  410d61:	push   esi
	...
  410d6e:	add    BYTE PTR [eax],al
  410d70:	add    BYTE PTR [ebx],bl
  410d72:	push   esp
  410d73:	loopne 0x410dcb
  410d75:	and    ebx,DWORD PTR [edx-0x4a1cff03]
  410d7b:	call   0xff644ac1
  410d80:	or     DWORD PTR [ebx],0xfffffff5
  410d83:	idiv   bh
  410d85:	pop    ecx
  410d86:	lds    esi,FWORD PTR [ecx+eiz*1-0x52]
  410d8a:	mov    BYTE PTR [eax],0xef
  410d8d:	sbb    BYTE PTR [esi*2+0x37de3e10],ah
  410d94:	(bad)  
  410d95:	cmp    DWORD PTR [esi*4-0xda9e30],esp
  410d9c:	call   DWORD PTR [ebx]
  410d9e:	or     edi,esi
  410da0:	dec    DWORD PTR [ecx+0x25]
  410da3:	jne    0x410db5
  410da5:	add    BYTE PTR ds:[eax],bh
  410da8:	call   FWORD PTR [ecx+0x25]
  410dab:	jne    0x410dbd
  410dad:	sbb    DWORD PTR [edi],edi
  410daf:	aad    0xf7
  410db1:	or     DWORD PTR ds:0x2d1e75ff,esp
  410db7:	es (bad) 
  410db9:	stc    
  410dba:	and    al,0xff
  410dbc:	mov    ch,0xde
  410dbe:	cld    
  410dbf:	(bad)  
  410dc0:	(bad)  
  410dc1:	(bad)  
  410dc2:	sub    edi,DWORD PTR ds:0xb524d9ff
  410dc8:	lock mov eax,ds:0xbbe8ff24
  410dce:	out    0xfd,al
  410dd0:	dec    ecx
  410dd2:	ds jmp 0x410ecf
	...
  410de4:	mov    ecx,0xfbd2e624
  410de9:	and    eax,0x2c13ffff
  410dee:	idiv   edi
  410df0:	dec    ecx
  410df1:	sub    al,0xc7
  410df3:	cmp    eax,0xb5ff2559
  410df8:	jb     0x410df7
  410dfa:	(bad)  
  410dfb:	dec    DWORD PTR [esi]
  410dfd:	push   0xf23fff3c
  410e02:	popa   
  410e03:	mov    ah,0x9f
  410e05:	icebp  
  410e06:	popa   
  410e07:	(bad)  
  410e08:	xchg   edi,eax
  410e09:	pop    ds
  410e0a:	and    bh,bh
  410e0c:	cwde   
  410e0d:	fst    DWORD PTR [edi+0x61d188d3]
  410e13:	out    0xe1,eax
  410e15:	stos   DWORD PTR es:[edi],eax
  410e16:	(bad)  
  410e17:	inc    BYTE PTR [eax+0x75e8596b]
  410e1d:	mov    ebx,0x3b70fe61
  410e22:	pop    ebp
  410e23:	out    0x4e,eax
  410e25:	add    DWORD PTR [ecx],0x10ec7600
  410e2b:	add    dl,dh
  410e2d:	adc    eax,0x927b8271
  410e32:	jmp    0x410e33
  410e34:	(bad)  
  410e35:	cmp    esp,DWORD PTR [edx+0x74]
  410e38:	aaa    
  410e39:	ja     0x410dd4
  410e3b:	cmp    DWORD PTR [eax],edi
  410e3d:	ja     0x410dcb
  410e3f:	inc    esp
  410e40:	xor    edi,DWORD PTR [edi-0x28]
  410e43:	pop    es
  410e44:	xchg   edi,eax
  410e45:	and    al,0xea
  410e47:	inc    eax
	...
  410e54:	add    BYTE PTR [eax],al
  410e56:	add    BYTE PTR [edi],bh
  410e58:	mov    ds,WORD PTR [eax]
  410e5a:	addr16 xchg eax,esp
  410e5d:	add    al,0xe8
  410e5f:	mov    al,0x5c
  410e61:	(bad)  
  410e62:	dec    BYTE PTR [eax]
  410e64:	fisttp QWORD PTR [eax+ebp*2]
  410e67:	mov    ds:0x60ffc3b9,al
  410e6c:	mov    ds:0x49bf0001,eax
  410e71:	nop
  410e72:	cld    
  410e73:	call   0xe3b570be
  410e78:	dec    esi
  410e79:	fadd   DWORD PTR [edi]
  410e7b:	out    0x5a,eax
  410e7d:	sbb    edi,edi
  410e7f:	shr    BYTE PTR [eax+0x43],1
  410e82:	add    edi,DWORD PTR [edi]
  410e84:	mov    esp,0xc8bceb8d
  410e89:	sub    ebx,DWORD PTR [edi+0x12]
  410e8c:	call   ecx
  410e8e:	add    esp,DWORD PTR ds:0x40d85706
  410e94:	mov    al,ds:0x97a01dbc
  410e99:	jo     0x410e63
  410e9b:	xchg   esp,eax
  410e9c:	inc    ebx
  410e9d:	hlt    
  410e9e:	outs   dx,BYTE PTR ds:[esi]
  410e9f:	stc    
  410ea0:	or     al,ch
  410ea2:	mov    cs,WORD PTR [ebx-0x59]
  410ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ea6:	les    eax,FWORD PTR [eax-0xcfc18e9]
  410eac:	or     al,0x90
  410eae:	sbb    esp,esi
  410eb0:	or     al,ch
  410eb2:	mov    edx,0x3c47b60
  410eb7:	aas    
  410eb8:	ret    
  410eb9:	daa    
  410eba:	xlat   BYTE PTR ds:[ebx]
	...
  410ec7:	add    BYTE PTR [eax],al
  410ec9:	add    BYTE PTR [ecx],bh
  410ecb:	dec    BYTE PTR [edi]
  410ecd:	inc    ecx
  410ece:	cli    
  410ecf:	xchg   esi,eax
  410ed0:	div    BYTE PTR [edx+0x72e7c7e0]
  410ed6:	and    BYTE PTR [eax],0x29
  410ed9:	jmp    0x410f5a
  410edb:	enter  0x6137,0xab
  410edf:	sar    BYTE PTR [edi-0x31685cea],0x6c
  410ee6:	sub    eax,0x2561c6d4
  410eeb:	leave  
  410eec:	and    eax,0x3cc85284
  410ef1:	pop    esi
  410ef2:	adc    BYTE PTR [edx+edi*8-0x596938bd],0x61
  410efa:	stc    
  410efb:	cdq    
  410efc:	dec    ebp
  410efd:	sbb    al,0x38
  410eff:	sbb    eax,0x94736153
  410f04:	mov    ss,edi
  410f06:	cmp    BYTE PTR [eax-0x6927e1ca],ah
  410f0c:	push   ds
  410f0d:	ret    0x8a07
  410f10:	add    ch,ch
  410f12:	cmp    al,0xfd
  410f14:	mov    DWORD PTR [ebp-0x46],edi
  410f17:	mov    bh,ah
  410f19:	sar    DWORD PTR [edx+eiz*1],cl
  410f1c:	dec    esi
  410f1d:	pop    esi
  410f1e:	mov    dh,cl
  410f20:	call   0xfdd8537d
  410f25:	pusha  
  410f26:	js     0x410eba
  410f28:	push   0xffffffe9
  410f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f2b:	and    al,0x68
  410f2d:	test   al,0x0
	...
  410f3b:	add    BYTE PTR [eax],al
  410f3d:	cmp    al,0x20
  410f3f:	dec    edi
  410f40:	sar    BYTE PTR [ebp-0x6a],0xfe
  410f44:	hlt    
  410f45:	xchg   edi,eax
  410f46:	push   cs
  410f47:	inc    eax
  410f48:	jmp    0x1e7e6d31
  410f4d:	faddp  st(1),st
  410f4f:	rcr    BYTE PTR [ebp-0x1696f99b],0x3c
  410f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f57:	mov    esi,0x401f5f91
  410f5c:	jmp    0xe1b4a4ed
  410f61:	aam    0x87
  410f63:	popa   
  410f64:	out    dx,al
  410f65:	fild   QWORD PTR [esi-0x6961da7e]
  410f6b:	push   0xbea53ce9
  410f70:	inc    ecx
  410f71:	push   ds
  410f72:	and    DWORD PTR [eax-0x17],eax
  410f75:	adc    al,0x1c
  410f77:	push   0x73954328
  410f7c:	icebp  
  410f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f7f:	popa   
  410f80:	mov    dh,0x9f
  410f82:	xchg   esi,eax
  410f83:	jae    0x410f32
  410f85:	lahf   
  410f86:	sbb    al,0x9
  410f88:	xchg   ecx,eax
  410f89:	jle    0x410f5b
  410f8b:	std    
  410f8c:	sahf   
  410f8d:	test   DWORD PTR [edi+0x42b1e904],eax
  410f93:	in     al,dx
  410f94:	push   0x78
  410f96:	xchg   ecx,eax
  410f97:	push   esi
  410f98:	add    BYTE PTR [ecx],bh
  410f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f9b:	std    
  410f9c:	imul   esi,DWORD PTR [esi],0x87527
	...
  410fae:	add    BYTE PTR [eax],al
  410fb0:	mov    esi,0x51ff3849
  410fb5:	inc    edx
  410fb6:	inc    esp
  410fb7:	cld    
  410fb8:	sub    eax,0xe747e9be
  410fbd:	leave  
  410fbe:	mov    DWORD PTR ds:0x408001,edi
  410fc4:	push   ss
  410fc5:	call   0xa22c83ca
  410fca:	mov    ebp,DWORD PTR [ecx-0x19]
  410fcd:	leave  
  410fce:	push   ebp
  410fcf:	call   0x41fccc
  410fd4:	popf   
  410fd5:	or     DWORD PTR [edx+0x1f],esi
  410fd8:	mov    eax,0x5145f121
  410fdd:	sub    BYTE PTR [esi+0x68],cl
  410fe0:	push   esi
  410fe1:	leave  
  410fe2:	in     eax,dx
  410fe3:	mov    esi,0x416911be
  410fe8:	pop    cx
  410fea:	(bad)  
  410feb:	jne    0x41103b
  410fed:	and    DWORD PTR [ebp+0x63],eax
  410ff0:	push   ecx
  410ff1:	cmc    
  410ff2:	in     eax,0x6
  410ff4:	xchg   edx,eax
  410ff5:	sub    bh,bh
  410ff7:	jmp    0x411020
  410ff9:	mov    edi,DWORD PTR [ebp+0x3e]
  410ffc:	es jo  0x410ff6
  410fff:	inc    esi
  411000:	adc    bh,BYTE PTR [ecx-0xb0e4640]
  411006:	(bad)  
  411007:	call   esp
  411009:	gs xor eax,0xfe314b07
  41100f:	jne    0x410fe3
  411011:	hlt    
  411012:	je     0x41101c
	...
  411020:	add    BYTE PTR [eax],al
  411022:	add    dh,bh
  411024:	test   eax,0x54a1ff38
  411029:	pop    ebx
  41102a:	leave  
  41102b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41102c:	mov    edi,0x2a3f5500
  411031:	jno    0x410fb5
  411033:	sti    
  411034:	inc    edx
  411035:	mov    dh,0x56
  411037:	gs lahf 
  411039:	out    0x50,eax
  41103b:	rcr    BYTE PTR [ebx+0x583de809],1
  411041:	pop    esi
  411042:	(bad)  
  411043:	mov    dh,0xeb
  411045:	pusha  
  411046:	mov    dh,BYTE PTR [edx-0x6]
  411049:	lds    eax,FWORD PTR [eax+0x3f]
  41104c:	sbb    ah,BYTE PTR [eax]
  41104e:	out    dx,eax
  41104f:	add    BYTE PTR [eax+0x1],ah
  411052:	and    BYTE PTR [eax-0x61],0xd5
  411056:	inc    esp
  411057:	daa    
  411058:	inc    ebx
  411059:	jmp    0x41109b
  41105b:	aas    
  41105c:	imul   esp,DWORD PTR ds:[edi+0x63],0x7f0b019f
  411064:	pop    edx
  411065:	(bad)  
  411066:	push   ebp
  411067:	addr16 xor eax,ecx
  41106a:	(bad)  
  41106b:	jo     0x4110bb
  41106d:	jmp    0x9f0e7971
  411072:	addr16 test eax,0x8ffc447
  411078:	into   
  411079:	xlat   BYTE PTR ds:[ebx]
  41107a:	pop    es
  41107b:	addr16 in eax,dx
  41107d:	loop   0x41107d
  41107f:	dec    eax
  411080:	(bad)  
  411081:	mov    WORD PTR [edx],?
  411083:	inc    eax
  411084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411085:	push   0x0
	...
  411093:	add    BYTE PTR [eax],al
  411095:	add    BYTE PTR [ecx-0x55ffe3df],al
  41109b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41109c:	ret    
  41109d:	sti    
  41109e:	ins    BYTE PTR es:[edi],dx
  41109f:	popa   
  4110a0:	pushf  
  4110a1:	(bad)  
  4110a2:	and    BYTE PTR [ebx-0x36160ea2],al
  4110a8:	add    eax,0xd852d475
  4110ad:	sti    
  4110ae:	or     ch,dl
  4110b0:	or     al,0xe8
  4110b2:	sbb    ebx,DWORD PTR [edx-0x376701a2]
  4110b8:	inc    ebp
  4110b9:	dec    ebp
  4110ba:	dec    ah
  4110bc:	out    0xb8,eax
  4110be:	mov    ch,0xa4
  4110c0:	push   0x47
  4110c2:	in     al,0x1e
  4110c4:	call   0xfcd47fb2
  4110c9:	or     esp,edi
  4110cb:	dec    edx
  4110cc:	mov    edi,0x2c41c95e
  4110d1:	pusha  
  4110d2:	pop    eax
  4110d3:	mov    DWORD PTR [eax],eax
  4110d5:	lds    edi,FWORD PTR [eax-0x58f4236e]
  4110db:	add    cl,BYTE PTR [eax+0x5e]
  4110de:	test   eax,0xa15fdc93
  4110e3:	sbb    eax,0xd0cf6be0
  4110e8:	inc    esi
  4110e9:	pop    esi
  4110ea:	xchg   DWORD PTR [esi+0x3ef203e3],eax
  4110f0:	inc    ebx
  4110f1:	cmp    BYTE PTR [eax+ebp*4-0x6b],0x5e
  4110f6:	repz ret 
  4110f8:	punpcklbw mm0,DWORD PTR [eax]
	...
  411107:	add    BYTE PTR [eax],al
  411109:	xor    DWORD PTR [ebx+0x1d7f0a1e],edx
  41110f:	in     eax,dx
  411110:	mov    ebp,0x3df8677
  411115:	retf   0xf80d
  411118:	mov    dl,0x51
  41111a:	sbb    eax,0x8996bec
  41111f:	neg    DWORD PTR [ebp+0x35]
  411122:	mov    dh,bl
  411124:	xchg   DWORD PTR [eax-0x37],eax
  411127:	out    0x3,eax
  411129:	xor    BYTE PTR ds:0xcf4e6cdc,bl
  41112f:	(bad)  
  411130:	pop    ebp
  411131:	mov    bh,0xc
  411133:	mov    esp,0xc694935d
  411138:	xlat   BYTE PTR ds:[ebx]
  411139:	and    al,0x93
  41113b:	xor    al,0x5c
  41113d:	and    al,dl
  41113f:	add    dl,dh
  411141:	arpl   WORD PTR [edx-0x5f90cb77],dx
  411147:	mov    al,0xe9
  411149:	cmp    al,0xc8
  41114b:	push   0x107d539
  411150:	aas    
  411151:	push   ebx
  411152:	ins    DWORD PTR es:[edi],dx
  411153:	and    ecx,ebp
  411155:	cmp    al,0xbf
  411157:	sar    ah,0x39
  41115a:	mov    eax,ds:0xc83ce9a3
  41115f:	mov    DWORD PTR [ecx-0x2d],edi
  411162:	add    ch,BYTE PTR [ebx+0x28]
  411165:	inc    ebx
  411166:	mov    al,ds:0xc83b08e5
  41116b:	add    DWORD PTR [ecx+0x0],ebx
	...
  41117a:	add    BYTE PTR [eax],al
  41117c:	mov    ah,0x1b
  41117e:	jmp    0x4061f644
  411183:	jmp    0xac0bc5a
  411188:	cmp    ecx,eax
  41118a:	or     DWORD PTR [ecx],ebp
  41118c:	jo     0x411159
  41118e:	out    0x69,eax
  411190:	cmp    ecx,eax
  411192:	add    BYTE PTR [ebx+0x73],ah
  411195:	mov    WORD PTR [eax],es
  411197:	jmp    0x953f0a48
  41119c:	aam    0xaa
  41119e:	mov    ebp,0x9c83cc8
  4111a3:	sub    DWORD PTR [edi-0xe],esi
  4111a6:	xchg   DWORD PTR [eax+ebx*8-0x24ee8c6f],ebp
  4111ad:	add    DWORD PTR [ebx-0xa],ecx
  4111b0:	jecxz  0x4111f1
  4111b2:	inc    ebx
  4111b3:	or     DWORD PTR [edx+0x9e6e51c],ebx
  4111b9:	jb     0x4111a3
  4111bb:	sbb    dh,dh
  4111bd:	xchg   edx,eax
  4111be:	std    
  4111bf:	loop   0x41123d
  4111c1:	adc    eax,0xa629b83a
  4111c6:	push   0x0
  4111c8:	es inc ebx
  4111ca:	inc    esp
  4111cb:	in     al,0x26
  4111cd:	repz je 0x4111b0
  4111d0:	(bad)  
  4111d1:	loop   0x411235
  4111d3:	jmp    FWORD PTR [ecx+0x74c0c0]
  4111d9:	sahf   
  4111da:	add    BYTE PTR [eax],al
  4111dc:	mov    ecx,0x75fe33
	...
  4111ed:	add    BYTE PTR [eax],al
  4111ef:	ficomp WORD PTR ds:0xf4c93706
  4111f5:	(bad)  
  4111f6:	jne    0x4111a6
  4111f8:	hlt    
  4111f9:	je     0x411203
  4111fb:	scas   al,BYTE PTR es:[edi]
  4111fc:	push   esp
  4111fd:	dec    DWORD PTR ss:[ecx-0xc]
  411201:	je     0x4111e7
  411203:	sub    DWORD PTR [edx-0x23],edi
  411206:	call   DWORD PTR [ebx+0x5125e8bd]
  41120c:	repz (bad) 
  41120e:	inc    DWORD PTR [ebx+0x2c36e625]
  411214:	repz (bad) 
  411216:	pop    edx
  411217:	fidivr WORD PTR ds:0xc588800d
  41121d:	or     eax,0xfef4d185
  411222:	(bad)  
  411223:	jle    0x4111ec
  411225:	add    bh,ch
  411227:	fdiv   st,st(3)
  411229:	je     0x411233
  41122b:	dec    esi
  41122c:	add    dh,BYTE PTR [edi+edi*8]
  41122f:	dec    ecx
  411230:	hlt    
  411231:	je     0x41122f
  411233:	dec    ecx
  411234:	jp     0x41121f
  411236:	call   ebx
  411238:	mov    esp,0xf490f5e8
  41123d:	(bad)  
  41123e:	inc    ebx
  411240:	and    dh,ah
  411242:	push   es
  411243:	in     al,dx
  411244:	repz dec BYTE PTR [ebp-0x17b2039d]
  41124b:	push   ebx
  41124c:	mov    esi,?
  41124e:	(bad)  
  41124f:	aas    
  411250:	xchg   BYTE PTR [esi+ebx*2],al
	...
  41125f:	add    BYTE PTR [eax],al
  411261:	add    BYTE PTR [esi],al
  411263:	pop    ebp
  411264:	or     al,0x0
  411266:	push   0x16
  411268:	imul   eax,DWORD PTR [edx+0x44878b03],0x7459af03
  411272:	dec    ebx
  411273:	(bad)  
  411274:	iret   
  411275:	pop    es
  411276:	out    0xbc,eax
  411278:	add    BYTE PTR es:[edi],bh
  41127b:	xchg   esi,eax
  41127c:	inc    ecx
  41127d:	push   cs
  41127e:	mov    edx,0x3f000486
  411283:	lds    eax,FWORD PTR [eax+ebp*2]
  411286:	and    esi,DWORD PTR [ebp-0x6436003d]
  41128c:	add    eax,0x69a74aff
  411291:	fidivr WORD PTR [ebx+0x22]
  411294:	pop    edx
  411295:	mov    dl,bh
  411297:	es out dx,eax
  411299:	jmp    DWORD PTR [eax]
  41129b:	mov    al,0xee
  41129d:	inc    eax
  41129e:	aas    
  41129f:	cli    
  4112a0:	iret   
  4112a1:	or     ebx,DWORD PTR [eax-0x7a17f685]
  4112a7:	retf   0xfe59
  4112aa:	mov    dh,0x6b
  4112ac:	dec    ebp
  4112ad:	mov    edx,?
  4112af:	add    dh,BYTE PTR [ebp-0x3b7ac899]
  4112b5:	push   DWORD PTR [ecx+0x33]
  4112b8:	add    eax,0x6996f2ff
  4112bd:	mov    dl,0x23
  4112bf:	mov    edx,0xaf028859
  4112c4:	out    dx,al
  4112c5:	inc    DWORD PTR [eax]
	...
  4112d3:	add    BYTE PTR [eax],al
  4112d5:	fmul   DWORD PTR [ecx-0x6dc0bf15]
  4112db:	ror    BYTE PTR [ebx],1
  4112dd:	inc    eax
  4112de:	adc    ecx,DWORD PTR [edx]
  4112e0:	call   0xfe9b70be
  4112e5:	(bad)  
  4112e6:	enter  0x682c,0x96
  4112ea:	enter  0xc04f,0x96
  4112ee:	or     eax,ebp
  4112f0:	pop    edx
  4112f1:	xchg   ebx,eax
  4112f2:	mov    esp,0xa038d0ce
  4112f7:	jo     0x411310
  4112f9:	or     BYTE PTR [eax+0x4c18c070],dl
  4112ff:	xor    al,0x54
  411301:	clc    
  411302:	mov    esi,0x8ff08663
  411307:	out    0x86,eax
  411309:	imul   esp,DWORD PTR [edi+eiz*8+0x1c8f63cf],0x60
  411311:	fst    DWORD PTR ds:0x2396b98
  411317:	xchg   DWORD PTR [edx+0x35],ebx
  41131a:	mov    bl,dh
  41131c:	jmp    0xedcd3110
  411321:	mov    eax,0x60243c
  411326:	(bad)  
  411327:	fcom   QWORD PTR [ebx-0x60]
  41132a:	retf   
  41132b:	enter  0xa15a,0xc3
  41132f:	daa    
  411330:	iret   
  411331:	test   DWORD PTR [edx-0x34],0x9b1b905b
  411338:	xchg   BYTE PTR [eax],al
	...
  411346:	add    BYTE PTR [eax],al
  411348:	or     edx,DWORD PTR [edi+eiz*8-0x4bb50c31]
  41134f:	push   ebx
  411350:	js     0x41136d
  411352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411353:	jmp    0x4113c5
  411355:	(bad)  
  411356:	push   ss
  411357:	cdq    
  411358:	imul   edx,DWORD PTR ds:0xd5746bf8,0x15595a16
  411362:	adc    BYTE PTR [edx-0x35],bl
  411365:	mov    bh,0xf
  411367:	adc    DWORD PTR es:[edi-0x6c34a602],ecx
  41136e:	add    dh,dh
  411370:	or     BYTE PTR [edi-0x70b12e18],bh
  411376:	std    
  411377:	out    0xf8,al
  411379:	stos   BYTE PTR es:[edi],al
  41137a:	std    
  41137b:	push   esp
  41137c:	mov    ecx,DWORD PTR [esi+0x6da4f973]
  411382:	xor    ecx,esi
  411384:	jbe    0x411314
  411386:	jae    0x41135d
  411388:	data16 adc al,0x11
  41138b:	shl    DWORD PTR [esi-0x2c],1
  41138e:	std    
  41138f:	mov    dh,0x96
  411391:	adc    al,0xe9
  411393:	scas   al,BYTE PTR es:[edi]
  411394:	add    BYTE PTR [edi-0x70c76218],bh
  41139a:	std    
  41139b:	sahf   
  41139c:	lock xchg esi,eax
  41139e:	call   0xfdd04f53
  4113a3:	mov    es,WORD PTR [eax]
  4113a5:	fwait
  4113a6:	call   0xfdd03f43
  4113ab:	jle    0x4113ad
	...
  4113b9:	add    BYTE PTR [eax],al
  4113bb:	lock sahf 
  4113bd:	call   0xfdd06f62
  4113c2:	outs   dx,BYTE PTR ds:[esi]
  4113c3:	and    BYTE PTR [edx-0x70b4d718],0xfd
  4113ca:	pop    esi
  4113cb:	jo     0x411373
  4113cd:	call   0xfdd04f62
  4113d2:	dec    esi
  4113d3:	adc    BYTE PTR [edx-0x37a3ea18],0x0
  4113da:	xor    cl,bh
  4113dc:	ret    0x9c00
  4113df:	retf   
  4113e0:	mov    ds:0x95e3257f,al
  4113e5:	std    
  4113e6:	rol    BYTE PTR es:[ebx],0xfd
  4113ea:	mov    ecx,0x160d1407
  4113ef:	mov    dh,al
  4113f1:	call   0x10931ed
  4113f6:	add    BYTE PTR [ebp+0xa],cl
  4113f9:	jne    0x41d7fa
  4113ff:	imul   ecx,DWORD PTR [ebp-0xb],0xca2600
  411406:	(bad)  
  411407:	pop    ebx
  411408:	clc    
  411409:	inc    BYTE PTR [edi]
  41140b:	push   ss
  41140c:	retf   0x6a
  41140f:	jl     0x4113d5
  411411:	mov    eax,DWORD PTR [ebp-0x1072e]
  411417:	es sahf 
  411419:	std    
  41141a:	mov    WORD PTR [ebx-0x8],ds
  41141d:	dec    ebp
  41141e:	lea    eax,[eax]
	...
  41142c:	add    BYTE PTR [eax],al
  41142e:	imul   edi,ebp,0xfffffff6
  411431:	jmp    DWORD PTR [ecx-0x618a01a7]
  411437:	lock je 0x411436
  41143a:	into   
  41143b:	retf   0x1f
  41143e:	out    0xbc,al
  411440:	shl    BYTE PTR [esp+eiz*8+0x1c],0x64
  411445:	add    DWORD PTR [ebx+0x41fff725],0xffffffca
  41144c:	je     0x411453
  41144e:	xor    DWORD PTR [esi-0xb],ecx
  411451:	jmp    0x411437
  411453:	inc    esi
  411454:	test   al,ch
  411456:	or     eax,esi
  411458:	(bad)  
  411459:	push   eax
  41145a:	adc    ecx,DWORD PTR [esi]
  41145c:	repnz div ecx
  41145f:	out    dx,eax
  411460:	dec    ebp
  411461:	jmp    FWORD PTR [ebx-0x3b]
  411464:	std    
  411465:	jne    0x4113f5
  411467:	and    DWORD PTR [edi+0x3b],eax
  41146a:	inc    ecx
  41146b:	lock or al,al
  41146e:	mov    edx,0x368587b4
  411473:	clc    
  411474:	(bad)  
  411475:	dec    esi
  411477:	jl     0x4114e0
  411479:	inc    ecx
  41147a:	push   esi
  41147b:	lock mov ah,0xf0
  41147e:	aas    
  41147f:	scas   al,BYTE PTR es:[edi]
  411480:	pop    eax
  411481:	(bad)  
  411482:	shl    DWORD PTR [bx+di],1
  411485:	add    BYTE PTR [edi],bh
  411487:	call   0xef8b:0x8e317341
  41148e:	xor    BYTE PTR [esi+0xfe55],dl
	...
  4114a0:	add    BYTE PTR [edx+0x2bd3696f],ch
  4114a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a7:	push   ebp
  4114a8:	(bad)  
  4114a9:	jmp    0x5c87:0x18fe4d6e
  4114b0:	adc    BYTE PTR ss:[esi+0x55],bh
  4114b4:	inc    esp
  4114b5:	pop    es
  4114b6:	js     0x4114a2
  4114b8:	inc    BYTE PTR [eax]
  4114ba:	dec    esi
  4114bb:	push   ebp
  4114bc:	je     0x4114b9
  4114be:	xchg   cl,ah
  4114c0:	pop    ds
  4114c1:	aas    
  4114c2:	lahf   
  4114c3:	dec    esp
  4114c4:	sar    DWORD PTR [ebx],0x9f
  4114c7:	mov    al,0x8a
  4114c9:	shl    DWORD PTR [ecx],cl
  4114cb:	inc    ecx
  4114cc:	sti    
  4114cd:	gs lahf 
  4114cf:	out    0x52,eax
  4114d1:	shl    BYTE PTR [ebx+0x4c35e80c],1
  4114d7:	push   esi
  4114d8:	(bad)  
  4114d9:	mov    dh,0xe3
  4114db:	pop    eax
  4114dc:	(bad)  
  4114dd:	xor    ah,BYTE PTR [edi-0x1fd92717]
  4114e3:	add    al,0xff
  4114e5:	jb     0x411565
  4114e7:	leave  
  4114e8:	inc    eax
  4114e9:	aas    
  4114ea:	idiv   DWORD PTR [esi]
  4114ec:	cld    
  4114ed:	cwde   
  4114ee:	cmc    
  4114ef:	push   ebp
  4114f0:	je     0x411539
  4114f2:	xchg   DWORD PTR [eax+ebp*2],edi
  4114f5:	(bad)  
  4114f6:	sahf   
  4114f7:	jmp    0x81e053fd
  4114fc:	out    0xb3,eax
  4114fe:	rcl    DWORD PTR [ebp-0x2],cl
  411501:	jo     0x411556
  411503:	or     DWORD PTR [eax+0x0],ebp
	...
  411512:	add    BYTE PTR [eax],al
  411514:	aas    
  411515:	enter  0xc491,0x60
  411519:	(bad)  
  41151a:	aam    0xde
  41151c:	add    BYTE PTR [edi],al
  41151e:	call   0xece7b8e
  411523:	push   edi
  411524:	dec    ecx
  411525:	adc    dh,al
  411527:	jmp    0x411569
  411529:	push   ds
  41152a:	test   eax,0xe7c6a703
  41152f:	add    edi,DWORD PTR [edi+0x29560fa0]
  411535:	mov    esi,fs
  411537:	shl    BYTE PTR [esp+ecx*4],1
  41153a:	push   esp
  41153b:	or     al,0x27
  41153d:	xchg   ecx,eax
  41153e:	sbb    edx,DWORD PTR [edi+0x11]
  411541:	sub    BYTE PTR [ecx+0x72f508ff],0x67
  411548:	mov    ebp,0xf8e9bb84
  41154d:	and    DWORD PTR [edi+edx*2],ebx
  411550:	imul   eax,eax,0xffffffbf
  411553:	ja     0x411581
  411555:	mov    esp,DWORD PTR [esi+0xf8c7b8c]
  41155b:	mov    eax,0x56e80966
  411560:	dec    ebx
  411561:	sar    BYTE PTR [edi-0x21],0xe4
  411565:	mov    eax,DWORD PTR [esi+0x7e8c4b56]
  41156b:	rol    BYTE PTR [eax-0x60],1
  41156e:	scas   al,BYTE PTR es:[edi]
  41156f:	cmpxchg BYTE PTR [ebx-0x37c3be60],cl
  411576:	mov    esp,0x8a
	...
  411587:	xchg   esp,eax
  411588:	inc    edi
  411589:	and    edx,DWORD PTR [edi-0xe]
  41158c:	repnz rol DWORD PTR [ebx],0x25
  411590:	cmc    
  411591:	dec    esi
  411592:	rol    BYTE PTR [eax-0x60],1
  411595:	ror    BYTE PTR [edi],1
  411597:	or     BYTE PTR [ebx+0x3f74c070],0x0
  41159e:	cld    
  41159f:	in     eax,0x1
  4115a1:	inc    eax
  4115a2:	jmp    0xaf2ee25c
  4115a7:	jnp    0x411534
  4115a9:	jge    0x411589
  4115ab:	cmp    al,0x14
  4115ad:	inc    esp
  4115ae:	xor    DWORD PTR [eax+0x21],0xa399e940
  4115b5:	int    0xe6
  4115b7:	cmp    al,0xc8
  4115b9:	or     DWORD PTR [ecx],ebp
  4115bb:	or     BYTE PTR [edx-0x3489feaa],ch
  4115c1:	std    
  4115c2:	out    dx,al
  4115c3:	in     eax,dx
  4115c4:	and    al,BYTE PTR [ecx]
  4115c6:	jmp    0x52a96366
  4115cb:	and    eax,0x6a390108
  4115d0:	adc    al,0x9
  4115d2:	shl    DWORD PTR [ecx-0x16],0xfd
  4115d6:	(bad)  
  4115d7:	xchg   ebx,eax
  4115d8:	call   0x2eff:0x9e92be36
  4115df:	mov    ebx,0x853400cc
  4115e4:	add    eax,0x507cdafd
  4115e9:	std    
  4115ea:	sahf   
	...
  4115f7:	add    BYTE PTR [eax],al
  4115f9:	add    BYTE PTR [edx-0x76],dh
  4115fc:	repnz inc edi
  4115fe:	xor    eax,ebx
  411600:	jae    0x411654
  411602:	jb     0x411618
  411604:	std    
  411605:	xchg   al,dh
  411607:	ret    0x32e8
  41160a:	dec    edi
  41160b:	mov    edi,ebp
  41160d:	push   ss
  41160e:	jmp    0x3d26d892
  411613:	cmc    
  411614:	mov    DWORD PTR [ebp-0x42],edx
  411617:	xchg   al,bh
  411619:	push   0x30
  41161b:	cmc    
  41161c:	dec    ecx
  41161d:	test   al,0x3c
  41161f:	enter  0xe573,0xf5
  411623:	mov    BYTE PTR [eax],cl
  411625:	add    BYTE PTR [esi+0x6601049e],dl
  41162b:	(bad)  
  41162c:	call   0xff3486f2
  411631:	mov    DWORD PTR [ebx+0x1e45c6f2],esp
  411637:	enter  0xffff,0x66
  41163b:	inc    ecx
  41163c:	inc    esp
  41163d:	clc    
  41163e:	xchg   esi,eax
  41163f:	repz je 0x41163e
  411642:	cmp    DWORD PTR [ebx+0x9],edi
  411645:	inc    ebx
  411647:	ret    0x15fd
  41164a:	rol    DWORD PTR [eax+0x7b290040],cl
  411650:	stc    
  411651:	call   0x3ea7d2
  411656:	xchg   ebp,eax
  411657:	in     eax,dx
  411658:	add    dh,BYTE PTR [esi+0x13]
  41165b:	sahf   
  41165c:	std    
  41165d:	inc    DWORD PTR [eax]
	...
  41166b:	add    BYTE PTR [eax],al
  41166d:	stc    
  41166e:	xor    esp,DWORD PTR [ebp+0x77]
  411671:	jl     0x4115f8
  411673:	std    
  411674:	inc    BYTE PTR [ebx-0x10]
  411677:	(bad)  
  411678:	jne    0x411668
  41167a:	sbb    eax,0xf4a95da5
  41167f:	(bad)  
  411680:	jne    0x41161c
  411682:	sbb    eax,0xf4993663
  411687:	enter  0xcec2,0xc5
  41168b:	push   ebx
  41168c:	mov    edi,DWORD PTR [edx+0x3cfcc148]
  411692:	les    ebp,FWORD PTR [edx+0x56]
  411695:	mov    ecx,0x23e8057a
  41169a:	mov    eax,0x4a1ffffd
  41169f:	stc    
  4116a0:	push   0x409f9a
  4116a5:	sbb    DWORD PTR [edx+0x5],edi
  4116a8:	call   0x400b1d
  4116ad:	aas    
  4116ae:	repnz into 
  4116b0:	sti    
  4116b1:	mov    BYTE PTR [ecx+ecx*1-0x18],dh
  4116b5:	iret   
  4116b6:	mov    ss,WORD PTR [esi+edi*8-0x7a]
  4116ba:	(bad)  
  4116bc:	dec    DWORD PTR [ebx]
  4116be:	data16 add BYTE PTR es:[ebx-0x29001825],0x49
  4116c7:	push   esp
  4116c8:	je     0x411711
  4116ca:	mov    bh,0xad
  4116cc:	xor    dl,BYTE PTR [eax-0x4e]
  4116cf:	mov    al,BYTE PTR [eax+eax*1+0x0]
	...
  4116df:	add    BYTE PTR [ebx+0x47],cl
  4116e2:	add    DWORD PTR [eax],eax
  4116e4:	push   eax
  4116e5:	add    edx,ebp
  4116e7:	mov    ds:0x680160a5,al
  4116ec:	loope  0x411732
  4116ee:	ret    0x29ff
  4116f1:	adc    al,0xa
  4116f3:	call   0xfe931ab0
  4116f8:	sbb    ah,dh
  4116fa:	push   eax
  4116fb:	dec    BYTE PTR [edx+0x4c7459a7]
  411701:	jp     0x411754
  411703:	enter  0x9afd,0x1
  411707:	push   ebp
  411708:	les    edi,FWORD PTR [edx-0x7b]
  41170b:	ret    
  41170c:	or     ebp,DWORD PTR [ecx+0x6b72feb9]
  411712:	pop    ecx
  411713:	mov    edi,0xa516225
  411718:	push   DWORD PTR [ebx+0x68715f0a]
  41171e:	inc    esi
  41171f:	pop    es
  411720:	aas    
  411721:	in     al,dx
  411722:	(bad)  
  411723:	out    dx,eax
  411724:	outs   dx,DWORD PTR ds:[esi]
  411725:	inc    edx
  411726:	xlat   BYTE PTR ds:[ebx]
  411727:	or     esp,DWORD PTR [edi-0x4f00f171]
  41172d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41172e:	inc    ecx
  41172f:	push   cs
  411730:	ret    
  411731:	mov    ch,0x3
  411733:	add    BYTE PTR [edi],bh
  411735:	enter  0xd966,0x94
  411739:	cmp    BYTE PTR [edi+ebp*1+0x53341a6f],ah
  411740:	adc    ebp,DWORD PTR [esi+ecx*2-0x27]
	...
  411750:	add    BYTE PTR [eax],al
  411752:	add    BYTE PTR [eax+0x79c95d9f],cl
  411758:	mov    dl,dh
  41175a:	inc    ebx
  41175b:	in     al,dx
  41175c:	shl    BYTE PTR [eax-0x37],0x54
  411760:	cmp    al,0x37
  411762:	pop    edi
  411763:	inc    esp
  411764:	mov    DWORD PTR [edi+ecx*2+0x52d45260],ebx
  41176b:	push   ecx
  41176c:	lods   al,BYTE PTR ds:[esi]
  41176e:	pop    edi
  41176f:	dec    ecx
  411770:	adc    cl,BYTE PTR [ebx+edx*2]
  411773:	retf   
  411774:	fwait
  411775:	push   es
  411776:	fnstenv [eax]
  411778:	jno    0x41179c
  41177a:	sbb    DWORD PTR [eax],esi
  41177c:	mov    BYTE PTR [edx-0x27],ah
  41177f:	adc    al,0x72
  411781:	pop    es
  411782:	add    al,0x3f
  411784:	enter  0x32a6,0xa6
  411788:	or     eax,ebp
  41178a:	mov    edx,0xf21f706a
  41178f:	or     BYTE PTR [eax-0x3573bc1e],cl
  411795:	shl    dh,cl
  411797:	hlt    
  411798:	mov    ebx,0x87f18ca7
  41179d:	mov    dh,0x52
  41179f:	out    dx,al
  4117a0:	ss out dx,eax
  4117a2:	or     ch,BYTE PTR [edx+0x6d]
  4117a5:	nop
  4117a6:	cmp    ebx,eax
  4117a8:	xchg   edi,esp
  4117aa:	jle    0x41178c
  4117ac:	lock mov cl,0xdd
  4117af:	jg     0x411779
  4117b1:	xor    eax,0xe7e6305c
  4117b6:	add    eax,DWORD PTR [eax]
	...
  4117c4:	add    BYTE PTR [eax],al
  4117c6:	inc    esp
  4117c7:	mov    ah,dh
  4117c9:	or     BYTE PTR [esi+0x3ce9003a],ah
  4117cf:	enter  0x6240,0xc
  4117d3:	push   eax
  4117d4:	jae    0x411827
  4117d6:	je     0x41177b
  4117d8:	push   0xffffffa8
  4117da:	cmp    al,0x1e
  4117dc:	jmp    0xfdc8a6c2
  4117e1:	loop   0x4117df
  4117e3:	sti    
  4117e4:	add    edx,DWORD PTR [eax-0x1c]
  4117e7:	xchg   ch,bh
  4117e9:	jmp    0xea07eee0
  4117ee:	cmp    al,0x18
  4117f0:	push   ebx
  4117f1:	xchg   DWORD PTR cs:[edi-0x18],ebp
  4117f5:	scas   eax,DWORD PTR es:[edi]
  4117f6:	push   0xfcf2fd87
  4117fb:	cli    
  4117fc:	je     0x41185e
  4117fe:	ja     0x41186b
  411800:	std    
  411801:	xchg   esp,eax
  411802:	in     al,0x6e
  411804:	(bad)  
  411805:	lods   eax,DWORD PTR ds:[esi]
  411806:	lea    eax,[esi-0x79635b79]
  41180c:	jae    0x41181b
  41180e:	(bad)  
  41180f:	cld    
  411810:	loopne 0x411813
  411812:	mov    ah,0xb
  411814:	(bad)  
  411815:	out    0x1a,al
  411817:	inc    edi
  411818:	je     0x411848
  41181a:	dec    esp
  41181b:	hlt    
  41181c:	in     al,0xd6
  41181e:	xor    BYTE PTR [edx+0x573b286a],bl
  411824:	inc    ebx
  411825:	mov    eax,ds:0x53d6bc8e
	...
  411836:	add    BYTE PTR [eax],al
  411838:	add    ah,bh
  41183a:	xchg   BYTE PTR [esi+0x4354272c],cl
  411840:	xchg   ebp,eax
  411841:	stos   DWORD PTR es:[edi],eax
  411842:	push   ebx
  411843:	inc    ebx
  411844:	lea    edx,[ebx+0x73897385]
  41184a:	addr16 pop esp
  41184c:	xchg   esi,eax
  41184d:	outs   dx,BYTE PTR ds:[esi]
  41184e:	rol    al,cl
  411850:	adc    eax,0xfffff015
  411855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411856:	out    0xbb,eax
  411858:	jmp    FWORD PTR [ebx-0x18841a7e]
  41185e:	pop    ss
  41185f:	(bad)  
  411860:	jmp    FWORD PTR [ebx-0x718a00de]
  411866:	and    dl,al
  411868:	xor    ecx,esi
  41186a:	sbb    bh,bh
  41186c:	jne    0x411868
  41186e:	sbb    BYTE PTR [ebp-0x20],dh
  411871:	icebp  
  411872:	sahf   
  411873:	add    eax,0xfddadee8
  411878:	push   DWORD PTR [ecx]
  41187a:	lahf   
  41187b:	fucomp st(0)
  41187d:	mov    edi,0xccfffddf
  411882:	xor    al,BYTE PTR [ebp+0x72204d10]
  411888:	or     esi,esp
  41188a:	fld    DWORD PTR [eax]
  41188c:	pand   mm7,QWORD PTR [esi+edi*8-0x1]
  411891:	xor    DWORD PTR [edi+edi*8-0x1a5ae01],esp
  411898:	jne    0x4118c8
  41189a:	and    bh,BYTE PTR [edx]
  41189c:	xor    DWORD PTR [eax],eax
	...
  4118aa:	add    BYTE PTR [eax],al
  4118ac:	xor    DWORD PTR [ecx],ebx
  4118ae:	push   DWORD PTR [ebp+0x12]
  4118b1:	sbb    DWORD PTR [ebp-0x8],esi
  4118b4:	and    DWORD PTR [edi-0x268517fb],ebx
  4118ba:	std    
  4118bb:	push   ecx
  4118bd:	sahf   
  4118be:	jmp    0xfe2184ab
  4118c3:	push   DWORD PTR [ebx-0x72]
  4118c6:	in     eax,dx
  4118c7:	push   eax
  4118c8:	push   cs
  4118c9:	cs aaa 
  4118cb:	push   DWORD PTR [ecx+0x305efe24]
  4118d1:	sar    DWORD PTR [edi-0x75c119f8],0xec
  4118d8:	mov    cl,0x9e
  4118da:	or     edi,edi
  4118dc:	aas    
  4118dd:	in     al,0xfc
  4118df:	out    0x5c,eax
  4118e1:	push   ebp
  4118e2:	push   eax
  4118e3:	inc    BYTE PTR [esi+0xbfffd31]
  4118e9:	cli    
  4118ea:	pop    ebp
  4118eb:	(bad)  
  4118ec:	xor    ch,BYTE PTR [ebx+0x59]
  4118ef:	sahf   
  4118f0:	not    BYTE PTR [bx+si+0xa]
  4118f4:	jg     0x411899
  4118f6:	and    al,0xff
  4118f8:	or     bh,BYTE PTR [edi-0x4f]
  4118fb:	out    0x5a,eax
  4118fd:	xlat   BYTE PTR ds:[ebx]
  4118fe:	dec    edi
  4118ff:	(bad)  
  411900:	out    dx,eax
  411901:	xchg   BYTE PTR [edx+0x506effe2],cl
  411907:	je     0x411960
  411909:	(bad)  
  41190a:	(bad)  
  41190b:	adc    ecx,DWORD PTR [edi]
  41190d:	mov    esi,0x7d6
	...
  41191e:	add    BYTE PTR [edi-0x5],dl
  411921:	stos   BYTE PTR es:[edi],al
  411922:	(bad)  
  411923:	pop    eax
  411924:	xlat   BYTE PTR ds:[ebx]
  411925:	and    DWORD PTR [eax+edx*2],esi
  411928:	out    0x3a,al
  41192a:	shl    DWORD PTR [ebx],0x6f
  41192d:	mov    dh,0x8a
  41192f:	push   ebx
  411930:	inc    edi
  411931:	add    DWORD PTR [eax],eax
  411933:	sub    BYTE PTR ds:0x30a5c1da,cl
  411939:	add    edi,edi
  41193b:	mov    dl,0x6b
  41193d:	fistp  DWORD PTR [ecx]
  41193f:	and    ah,bh
  411941:	stc    
  411942:	out    0xcf,eax
  411944:	ins    DWORD PTR es:[edi],dx
  411945:	dec    ebp
  411946:	(bad)  
  411947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411948:	outs   dx,DWORD PTR ds:[esi]
  411949:	add    edi,ebp
  41194b:	leave  
  41194c:	push   es
  41194d:	inc    ebx
  41194e:	imul   edi,DWORD PTR [esi+0x6f],0x194b744e
  411955:	icebp  
  411956:	(bad)  
  411957:	push   0x77
  411959:	pop    ecx
  41195a:	cwde   
  41195b:	call   0x3fa8669d
  411960:	outs   dx,DWORD PTR ds:[esi]
  411961:	pop    esi
  411962:	mov    ebp,0xdaa9c867
  411967:	jg     0x411931
  411969:	sahf   
  41196a:	fnstenv [edx+esi*8]
  41196d:	retf   0x4b4e
  411970:	sar    BYTE PTR [edi-0x7e],1
  411973:	mov    ecx,0x7e3d8684
  411978:	iret   
  411979:	out    0xb8,eax
  41197b:	mov    ch,0x73
  41197d:	push   DWORD PTR ds:0xdbe80716
	...
  41198f:	add    BYTE PTR [eax],al
  411991:	add    BYTE PTR [ebx-0x6ffc570f],cl
  411997:	cli    
  411998:	test   DWORD PTR [esi+0x53],0x80c49fed
  41199f:	ins    BYTE PTR es:[edi],dx
  4119a0:	sbb    al,0x16
  4119a2:	js     0x411928
  4119a4:	repnz inc ebx
  4119a6:	in     al,dx
  4119a7:	loopne 0x411933
  4119a9:	xor    dl,dh
  4119ab:	push   es
  4119ac:	call   0x2f1504ff
  4119b1:	fld    DWORD PTR [eax+0x70]
  4119b4:	ins    BYTE PTR es:[edi],dx
  4119b5:	dec    edi
  4119b6:	push   ecx
  4119b7:	test   BYTE PTR [esi],bl
  4119b9:	sbb    DWORD PTR [ebp-0xf],ebp
  4119bc:	test   al,0x3
  4119be:	push   edi
  4119bf:	pop    ebp
  4119c0:	fimul  DWORD PTR [esi+0x39]
  4119c3:	xchg   edx,eax
  4119c4:	sub    DWORD PTR [eax],eax
  4119c6:	aas    
  4119c7:	sbb    eax,0x8cbd6073
  4119cc:	repz fldenv [eax]
  4119cf:	repnz nop
  4119d1:	dec    esi
  4119d2:	xchg   ebx,eax
  4119d3:	ror    bh,1
  4119d5:	mov    esp,DWORD PTR [eax-0x7d]
  4119d8:	fidivr WORD PTR [ebx+eax*4-0x7c]
  4119dc:	aas    
  4119dd:	lds    edx,FWORD PTR [ebp+0x1cdbe809]
  4119e3:	out    dx,eax
  4119e4:	sub    BYTE PTR [eax+esi*8],al
  4119e7:	std    
  4119e8:	out    dx,eax
  4119e9:	pop    ebx
  4119ea:	lds    eax,FWORD PTR [ebx-0x7d8e4a00]
  4119f0:	jae    0x41199f
  4119f2:	mov    esp,edi
  4119f4:	or     BYTE PTR [ecx+0x0],dl
	...
  411a02:	add    BYTE PTR [eax],al
  411a04:	add    BYTE PTR [edx],ah
  411a06:	mov    bl,0xfd
  411a08:	sahf   
  411a09:	or     ecx,DWORD PTR [ecx+0x4e87e904]
  411a0f:	in     al,dx
  411a10:	push   0x0
  411a12:	jg     0x411a7e
  411a14:	jmp    0xf53f35af
  411a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a1a:	imul   eax,DWORD PTR [edx-0x787e0e47],0x24
  411a21:	out    dx,eax
  411a22:	jmp    0xc765:0x837bd27e
  411a29:	or     BYTE PTR gs:[ecx],al
  411a2c:	push   esi
  411a2d:	addr16 retf 
  411a2f:	call   0xfdc323f8
  411a34:	inc    esi
  411a35:	xchg   edi,eax
  411a36:	jg     0x411a35
  411a38:	mov    ah,0x64
  411a3a:	imul   ebp,DWORD PTR [eax-0x387e0e07],0x2b
  411a41:	inc    eax
  411a42:	enter  0x7253,0xf0
  411a46:	inc    ebp
  411a47:	les    ebx,FWORD PTR ds:0xb3678366
  411a4d:	icebp  
  411a4e:	sti    
  411a4f:	or     BYTE PTR [ecx],al
  411a51:	clc    
  411a52:	mov    dl,0xfd
  411a54:	push   es
  411a55:	mov    bl,0xc
  411a57:	std    
  411a58:	xchg   ebx,eax
  411a59:	cmp    al,0xf0
  411a5b:	mov    ecx,0x6582fb82
  411a60:	dec    edi
  411a61:	cmc    
  411a62:	pop    es
  411a63:	add    esi,esp
  411a65:	sub    bl,ch
  411a67:	dec    eax
  411a68:	sub    BYTE PTR [eax],al
	...
  411a76:	add    BYTE PTR [eax],al
  411a78:	inc    ebx
  411a79:	jo     0x411a8d
  411a7b:	pop    ds
  411a7c:	jb     0x411a00
  411a7e:	or     DWORD PTR [ecx+0x50e017],ebp
  411a84:	mov    cs,esp
  411a86:	add    bh,ch
  411a88:	push   0x176bcba4
  411a8d:	int3   
  411a8e:	push   eax
  411a8f:	call   DWORD PTR [ebx]
  411a91:	test   ch,ah
  411a93:	sbb    al,0x7c
  411a95:	adc    eax,0xd58be8ff
  411a9a:	std    
  411a9b:	(bad)  
  411a9c:	cmp    al,0xcc
  411a9e:	push   0xfd873dbb
  411aa3:	sbb    BYTE PTR [bx+di+0x40],ah
  411aa8:	dec    esi
  411aa9:	mov    BYTE PTR [eax],0x0
  411aac:	push   ss
  411aad:	and    al,0xdf
  411aaf:	xor    eax,0xc00b1529
  411ab4:	jb     0x411b23
  411ab6:	dec    ebp
  411ab7:	push   0xbeedc696
  411abc:	jle    0x411a82
  411abe:	push   0x41
  411ac0:	data16 ss (bad) 
  411ac3:	jne    0x411b33
  411ac5:	push   ds
  411ac6:	jmp    0xe6564424
  411acb:	stos   BYTE PTR es:[edi],al
  411acc:	fs adc edi,edi
  411acf:	push   0x66
  411ad1:	sahf   
  411ad2:	ret    0xa76b
  411ad5:	(bad)  
  411ad6:	push   0xfd85ad9e
  411adb:	inc    BYTE PTR [eax]
	...
  411ae9:	add    BYTE PTR [eax],al
  411aeb:	arpl   WORD PTR [ebx+0x45],bp
  411aee:	inc    ecx
  411aef:	es push ds
  411af1:	stos   DWORD PTR es:[edi],eax
  411af2:	xor    eax,0xc00b1339
  411af7:	mov    dl,0x6e
  411af9:	dec    ebp
  411afa:	push   0xbeedc616
  411aff:	mov    esi,0x26416ac3
  411b04:	ss (bad) 
  411b06:	jne    0x411b16
  411b08:	push   ds
  411b09:	mov    ch,0x59
  411b0b:	aas    
  411b0c:	call   0xfe4b:0xdd71e74c
  411b13:	outs   dx,DWORD PTR gs:[esi]
  411b15:	fld    st(2)
  411b17:	push   esp
  411b18:	mov    al,0x4
  411b1a:	push   0xffc206c1
  411b1f:	pusha  
  411b20:	ins    DWORD PTR es:[edi],dx
  411b21:	add    DWORD PTR [eax],eax
  411b23:	mov    edi,0xc834c957
  411b28:	(bad)  
  411b29:	clc    
  411b2a:	mov    edi,0x67b1784b
  411b2f:	aas    
  411b30:	outs   dx,DWORD PTR ds:[esi]
  411b31:	pop    esp
  411b32:	mov    ebp,0x40d83927
  411b37:	aas    
  411b38:	fisttp WORD PTR [ebx+0x74]
  411b3b:	aaa    
  411b3c:	inc    edi
  411b3d:	jg     0x411b97
  411b3f:	cwde   
  411b40:	repnz pop ecx
  411b42:	inc    edx
  411b43:	dec    ebp
  411b44:	jmp    0x744d:0x2312fe4c
  411b4b:	aaa    
  411b4c:	pop    es
  411b4d:	xchg   esp,eax
  411b4e:	add    BYTE PTR cs:[eax],al
	...
  411b5d:	add    BYTE PTR [eax+0x12],bh
  411b60:	cmp    eax,ecx
  411b62:	cmp    ebp,DWORD PTR [edi-0x4a]
  411b65:	mov    bl,BYTE PTR [ebx-0x10]
  411b68:	inc    ebp
  411b69:	out    0x68,eax
  411b6b:	mov    edx,0x7042674c
  411b70:	add    DWORD PTR [eax],eax
  411b72:	addr16 ud0 ecx,DWORD PTR [bx+si-0x8]
  411b78:	xchg   bh,ah
  411b7a:	dec    eax
  411b7b:	fimul  DWORD PTR [esp+ecx*4-0x7e]
  411b7f:	shl    DWORD PTR [ecx+0x4c7baafe],cl
  411b85:	je     0x411bbe
  411b87:	xlat   BYTE PTR ds:[ebx]
  411b88:	jle    0x411ba3
  411b8a:	aas    
  411b8b:	outs   dx,DWORD PTR ds:[esi]
  411b8c:	clc    
  411b8d:	mov    edi,0xf8ec48
  411b92:	aas    
  411b93:	enter  0x42e7,0x83
  411b97:	and    bh,0x3
  411b9a:	aas    
  411b9b:	enter  0xc1ae,0xec
  411b9f:	and    dh,0x3
  411ba2:	aas    
  411ba3:	out    dx,al
  411ba4:	out    0xdd,eax
  411ba6:	call   0xe11f0399
  411bab:	push   ebx
  411bac:	sub    al,0x50
  411bae:	mov    BYTE PTR [ebx+0x64],dl
  411bb1:	push   eax
  411bb2:	leave  
  411bb3:	and    BYTE PTR [esi-0x6005364c],0x4b
  411bba:	dec    ebx
  411bbb:	test   BYTE PTR [edi-0x55],bh
  411bbe:	push   esi
  411bbf:	enter  0xfee7,0x0
	...
  411bcf:	add    BYTE PTR [eax],al
  411bd1:	lock sti 
  411bd3:	in     al,dx
  411bd4:	pop    esp
  411bd5:	jp     0x411b9e
  411bd7:	out    0x3,eax
  411bd9:	pop    ss
  411bda:	add    eax,0x8198c520
  411bdf:	hlt    
  411be0:	neg    DWORD PTR [eax-0x76b4e31a]
  411be6:	pop    ss
  411be7:	jae    0x411c1d
  411be9:	mov    bl,0x4a
  411beb:	pop    ebx
  411bec:	push   ebx
  411bed:	jns    0x411b6f
  411bef:	mov    bh,0xb5
  411bf1:	pop    eax
  411bf2:	push   ss
  411bf3:	std    
  411bf4:	dec    edx
  411bf5:	imul   ecx,DWORD PTR [esi+0x64],0x36806954
  411bfc:	pop    esp
  411bfd:	mov    eax,ds:0xe64b2eb6
  411c02:	(bad)  
  411c03:	(bad)  
  411c04:	dec    edi
  411c05:	aad    0x6
  411c07:	call   0x1eb8a756
  411c0c:	dec    ebx
  411c0d:	cmp    DWORD PTR [eax+0x3318fb94],eax
  411c13:	mov    ebx,0x6452294a
  411c18:	pop    eax
  411c19:	sub    DWORD PTR [eax+0x3cc1f600],eax
  411c1f:	in     al,dx
  411c20:	test   BYTE PTR [ebp-0x2fa2ff82],0xe7
  411c27:	not    DWORD PTR [edx-0x6]
  411c2a:	jg     0x411c2a
  411c2c:	pushf  
  411c2d:	nop
  411c2e:	jbe    0x411c2d
  411c30:	into   
  411c31:	xchg   esp,eax
  411c32:	fnstenv [ebx]
  411c34:	mov    BYTE PTR [eax],0x0
	...
  411c43:	add    BYTE PTR [ebp+0xf],dh
  411c46:	push   ecx
  411c47:	push   ecx
  411c48:	aas    
  411c49:	leave  
  411c4a:	add    cl,ch
  411c4c:	test   DWORD PTR [eax+ebp*8],esi
  411c4f:	mov    dh,0x85
  411c51:	jle    0x411cbb
  411c53:	sub    al,0x8b
  411c55:	or     BYTE PTR [ecx],al
  411c57:	adc    edx,ecx
  411c59:	repz aas 
  411c5b:	jmp    0x28adecf4
  411c60:	cmp    esi,DWORD PTR [eax+0x47]
  411c63:	loopne 0x411ca1
  411c65:	enter  0x8181,0x39
  411c69:	neg    BYTE PTR [eax]
  411c6b:	add    DWORD PTR [ebx-0x38],eax
  411c6e:	in     eax,dx
  411c6f:	das    
  411c70:	je     0x411c53
  411c72:	ins    BYTE PTR es:[edi],dx
  411c73:	test   al,0x3c
  411c75:	jg     0x411c2a
  411c77:	push   ecx
  411c78:	in     eax,dx
  411c79:	jge    0x411c78
  411c7b:	push   esi
  411c7c:	(bad)  
  411c7d:	iret   
  411c7e:	call   0xfdbfc141
  411c83:	push   ecx
  411c84:	dec    esp
  411c85:	mov    ecx,0xf3f53efd
  411c8a:	adc    BYTE PTR [esi],dh
  411c8c:	scas   eax,DWORD PTR es:[edi]
  411c8d:	outs   dx,DWORD PTR ds:[esi]
  411c8e:	cmc    
  411c8f:	cs add eax,0xe4f1737e
  411c95:	jno    0x411c95
  411c97:	push   ds
  411c98:	cmc    
  411c99:	jge    0x411c4e
  411c9b:	sbb    DWORD PTR [ebp+0x2001fd7e],ecx
  411ca1:	mov    eax,0x124100fd
  411ca6:	mov    ch,0xec
	...
  411cb4:	add    BYTE PTR [eax],al
  411cb6:	add    BYTE PTR [ecx],ch
  411cb8:	adc    edi,edi
  411cba:	call   0x3ef0de
  411cbf:	and    DWORD PTR [edi],edi
  411cc1:	cmc    
  411cc2:	jmp    0x402ce1
  411cc7:	loope  0x411c57
  411cc9:	stc    
  411cca:	call   0x3e9069
  411ccf:	add    DWORD PTR [edi-0x1b],ecx
  411cd2:	test   DWORD PTR [ecx],0xe6eee611
  411cd8:	ud0    ecx,ecx
  411cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cdc:	jg     0x411cdb
  411cde:	push   esp
  411cdf:	pop    ebp
  411ce0:	and    BYTE PTR [ebx-0x2625d3c],al
  411ce6:	imul   edi,DWORD PTR [ebp+0x11],0x73be0875
  411ced:	sub    edi,edi
  411cef:	rol    DWORD PTR [edx],0x45
  411cf2:	cld    
  411cf3:	ror    DWORD PTR [esi-0x632397fb],0x40
  411cfa:	add    BYTE PTR [ecx],dl
  411cfc:	iret   
  411cfd:	gs dec eax
  411cff:	addr16 (bad) 
  411d01:	call   0xff523d94
  411d06:	jmp    FWORD PTR [ebx-0x7e]
  411d09:	fidivr DWORD PTR gs:[ebp-0x77]
  411d0d:	std    
  411d0e:	addr16 fs retf 0x8000
  411d13:	push   cs
  411d14:	nop
  411d15:	sti    
  411d16:	jmp    DWORD PTR [ecx]
  411d18:	pushf  
  411d19:	std    
  411d1a:	inc    DWORD PTR [eax]
	...
  411d28:	add    BYTE PTR [eax],al
  411d2a:	add    DWORD PTR [edx+0x65],edx
  411d2d:	sbb    dl,BYTE PTR [edx+0x7967fd89]
  411d33:	xchg   esi,eax
  411d34:	inc    eax
  411d35:	add    BYTE PTR [ecx],ah
  411d37:	pop    DWORD PTR ds:0xa9753fe8
  411d3d:	(bad)  
  411d3e:	xor    bh,cl
  411d40:	int    0xfb
  411d42:	sub    ch,bh
  411d44:	stc    
  411d45:	out    0x33,eax
  411d47:	lea    ecx,[eax-0x2]
  411d4a:	push   es
  411d4b:	mov    dl,0x0
  411d4d:	add    BYTE PTR [edx-0x16],ch
  411d50:	pop    eax
  411d51:	add    BYTE PTR [ebx],0x28
  411d54:	push   eax
  411d55:	inc    BYTE PTR [eax]
  411d57:	in     eax,dx
  411d58:	mov    esi,0xce968ffb
  411d5d:	or     esi,eax
  411d5f:	adc    al,0xfd
  411d61:	out    0xec,eax
  411d63:	add    DWORD PTR [bx+si],eax
  411d66:	xor    al,0x2f
  411d68:	clc    
  411d69:	test   al,ah
  411d6b:	jno    0x411d6e
  411d6d:	add    al,bh
  411d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d70:	dec    esp
  411d71:	dec    eax
  411d73:	outs   dx,DWORD PTR ds:[esi]
  411d74:	add    edi,eax
  411d76:	jp     0x411dcb
  411d78:	dec    eax
  411d79:	push   es
  411d7a:	aas    
  411d7b:	outs   dx,DWORD PTR ds:[esi]
  411d7c:	(bad)  
  411d7e:	outs   dx,DWORD PTR es:[esi]
  411d80:	(bad)  
  411d82:	push   ss
  411d83:	outs   dx,DWORD PTR ds:[esi]
  411d84:	jbe    0x411dca
  411d86:	stos   DWORD PTR es:[edi],eax
  411d87:	fbstp  TBYTE PTR [ebp-0x7c]
  411d8a:	xchg   ebx,eax
  411d8b:	dec    BYTE PTR [eax-0x2]
	...
  411d9a:	add    BYTE PTR [eax],al
  411d9c:	add    bh,ch
  411d9e:	in     eax,dx
  411d9f:	into   
  411da0:	test   DWORD PTR [eax+0x7ae7459c],0x440004c7
  411daa:	scas   eax,DWORD PTR es:[edi]
  411dab:	int    0x4
  411dad:	dec    cx
  411daf:	add    eax,DWORD PTR [eax]
  411db1:	aas    
  411db2:	xchg   edi,eax
  411db3:	les    eax,FWORD PTR [edi-0x2]
  411db6:	outs   dx,BYTE PTR ds:[esi]
  411db7:	dec    eax
  411db8:	je     0x411e05
  411dba:	pop    es
  411dbb:	inc    ecx
  411dbc:	xor    dl,BYTE PTR [eax-0x52]
  411dbf:	jl     0x411d90
  411dc1:	mov    edx,0x494f6cc8
  411dc6:	jge    0x411de6
  411dc8:	mov    bl,0x8e
  411dca:	jo     0x411daf
  411dcc:	wrmsr  
  411dce:	jge    0x411e30
  411dd0:	jle    0x411dea
  411dd2:	jne    0x411dda
  411dd4:	dec    eax
  411dd5:	xchg   esi,eax
  411dd6:	enter  0xc18f,0xa4
  411dda:	pop    es
  411ddb:	call   0xf6b8e928
  411de0:	inc    edi
  411de1:	or     DWORD PTR [ebp+0x5c],edi
  411de4:	cld    
  411de5:	sbb    dh,dl
  411de7:	sbb    al,BYTE PTR [edi-0x7]
  411dea:	dec    esi
  411deb:	ins    BYTE PTR es:[edi],dx
  411dec:	pop    eax
  411ded:	jmp    0xe91bec6e
  411df2:	in     al,0x1a
  411df4:	fdivr  DWORD PTR [edi-0x38]
  411df7:	mov    esi,0xb674e891
  411dfc:	inc    edi
  411dfd:	shl    edx,1
  411dff:	fistp  WORD PTR [ebx+0x0]
	...
  411e0e:	add    BYTE PTR [eax],al
  411e10:	lds    edi,FWORD PTR [ecx+0x42b747a6]
  411e16:	(bad)  
  411e17:	dec    edi
  411e18:	mov    ecx,0x2704017c
  411e1d:	push   ds
  411e1e:	cld    
  411e1f:	les    ebp,FWORD PTR [eax-0x56abc383]
  411e25:	jl     0x411ea5
  411e27:	inc    edi
  411e28:	adc    edx,eax
  411e2a:	jg     0x411e90
  411e2c:	dec    esi
  411e2d:	jge    0x411e9d
  411e2f:	jge    0x411df4
  411e31:	arpl   WORD PTR [esi+0x47],bx
  411e34:	or     DWORD PTR [edx+0x64],0x567c7128
  411e3b:	mov    ah,0xd8
  411e3d:	out    dx,eax
  411e3e:	mov    ebx,0x7c7d68c4
  411e43:	push   esp
  411e44:	imul   edi,DWORD PTR [esi+edi*1+0x47],0x4100cfd3
  411e4c:	sti    
  411e4d:	mov    dh,0xfd
  411e4f:	cs retf 0xe043
  411e53:	push   ds
  411e54:	clc    
  411e55:	jge    0x411ec1
  411e57:	jmp    0xa8ae0a70
  411e5c:	cmp    al,0x7b
  411e5e:	mov    bl,0x19
  411e60:	js     0x411edc
  411e62:	std    
  411e63:	push   es
  411e64:	push   cs
  411e65:	(bad)  
  411e66:	call   0xfdbc4baf
  411e6b:	pusha  
  411e6c:	mov    esi,0x81eef593
  411e71:	dec    esp
  411e72:	cmp    DWORD PTR [ecx+0x0],0x0
	...
  411e81:	add    BYTE PTR [eax],al
  411e83:	jno    0x411eff
  411e85:	std    
  411e86:	cmp    DWORD PTR [ebx],ebx
  411e88:	jmp    FWORD PTR [eax+ebp*1+0x3b]
  411e8c:	jnp    0x411e41
  411e8e:	fnstcw WORD PTR [ecx+0x7a]
  411e91:	std    
  411e92:	(bad)  
  411e93:	pinsrw mm5,eax,0x64
  411e97:	cs jnp 0x411e97
  411e9a:	pusha  
  411e9b:	mov    edi,0x81aef597
  411ea0:	icebp  
  411ea1:	add    BYTE PTR [ecx],dl
  411ea3:	inc    eax
  411ea4:	out    dx,eax
  411ea5:	aas    
  411ea6:	jmp    0x9f3152ac
  411eab:	stc    
  411eac:	jns    0x411eab
  411eae:	adc    al,0xab
  411eb0:	arpl   WORD PTR [edx-0x45],bp
  411eb3:	stc    
  411eb4:	jns    0x411e3d
  411eb6:	fs push eax
  411eb8:	jb     0x411eb7
  411eba:	jbe    0x411ed3
  411ebc:	inc    esp
  411ebd:	les    esi,FWORD PTR [esi+0x1]
  411ec0:	jp     0x411f12
  411ec2:	ror    DWORD PTR [esi],1
  411ec4:	out    dx,eax
  411ec5:	aas    
  411ec6:	jmp    0x5f3152cc
  411ecb:	stc    
  411ecc:	jns    0x411ecb
  411ece:	aam    0x64
  411ed0:	arpl   WORD PTR [edx+0x0],cx
  411ed3:	fs add bh,bh
  411ed6:	mov    ebx,esp
  411ed8:	mov    esi,0xa109fff6
  411edd:	std    
  411ede:	addr16 in eax,dx
  411ee0:	xchg   edx,eax
  411ee1:	inc    eax
  411ee2:	add    BYTE PTR [ecx],bl
  411ee4:	pop    eax
  411ee5:	in     eax,dx
  411ee6:	test   DWORD PTR [eax],0x0
	...
  411ef4:	add    BYTE PTR [eax],al
  411ef6:	pop    ecx
  411ef7:	add    bh,bh
  411ef9:	jne    0x411f19
  411efb:	pop    ds
  411efc:	das    
  411efd:	xor    bh,BYTE PTR [ecx]
  411eff:	add    cl,BYTE PTR [ecx-0xf5a97b]
  411f05:	jmp    FWORD PTR [ebx+0x9f7b548]
  411f0b:	add    eax,0x9381684e
  411f10:	inc    eax
  411f11:	add    BYTE PTR [ecx],bl
  411f13:	dec    ebx
  411f14:	in     eax,dx
  411f15:	neg    DWORD PTR [ecx]
  411f17:	add    eax,0x1ede75ff
  411f1c:	rdmsr  
  411f1e:	stc    
  411f1f:	add    al,0x89
  411f21:	test   DWORD PTR [edx+0x65ffff0c],edi
  411f27:	inc    ebx
  411f28:	jmp    0xfe45a924
  411f2d:	push   cs
  411f2e:	bound  edi,QWORD PTR [ebp+0x47d6fffd]
  411f34:	mov    esp,0xff04d1d0
  411f39:	add    BYTE PTR [ebx+0x73],dl
  411f3c:	cmp    BYTE PTR [ebp-0xf2f2],0x96
  411f43:	jae    0x411ec6
  411f45:	mov    cl,0xa6
  411f47:	mov    BYTE PTR [eax],0x68
  411f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f4b:	(bad)  
  411f4c:	in     eax,dx
  411f4d:	mov    esi,0xe80d8b19
  411f52:	fs (bad) 
  411f55:	call   FWORD PTR [ecx]
  411f57:	dec    ebx
  411f58:	jmp    0x412054
	...
  411f69:	aas    
  411f6a:	adc    al,BYTE PTR [esi+edi*8-0xe]
  411f6e:	sbb    BYTE PTR [ecx-0x3b],0x14
  411f72:	add    al,BYTE PTR [esi+edi*8-0x6e]
  411f76:	sbb    BYTE PTR [esi+edi*8+0x50],cl
  411f7a:	mov    cl,0xcd
  411f7c:	xorps  xmm7,xmm0
  411f7f:	pop    ss
  411f80:	inc    DWORD PTR [eax-0x5f]
  411f83:	(bad)  
  411f84:	jecxz  0x411fb6
  411f86:	fild   DWORD PTR [ebx-0x2]
  411f89:	stos   BYTE PTR es:[edi],al
  411f8a:	jg     0x411fe5
  411f8c:	test   eax,0xfe43ca54
  411f91:	jmp    0x8e7b:0x18fe4ba3
  411f98:	fisttp WORD PTR [eax]
  411f9a:	jae    0x411fe0
  411f9c:	(bad)  
  411f9d:	xchg   edx,eax
  411f9e:	lahf   
  411f9f:	pop    ecx
  411fa0:	imul   edx,DWORD PTR [edx+eiz*2+0x44],0x4c87b2fe
  411fa8:	(bad)  
  411fa9:	lock xchg edx,eax
  411fab:	into   
  411fac:	pmovmskb esp,mm7
  411faf:	sbb    bh,bh
  411fb1:	loopne 0x411f35
  411fb3:	mov    cs,edi
  411fb5:	sar    BYTE PTR [edx],1
  411fb7:	inc    esp
  411fb8:	dec    BYTE PTR [edx-0x3701b3a5]
  411fbe:	sub    cl,dh
  411fc0:	(bad)  
  411fc2:	mov    bh,0x17
  411fc4:	(bad)  
  411fc5:	mov    eax,0xa8cb8e5a
  411fca:	push   edx
  411fcb:	inc    esp
  411fcc:	inc    BYTE PTR [eax]
	...
  411fda:	add    BYTE PTR [eax],al
  411fdc:	xor    bh,BYTE PTR [edi+0x59]
  411fdf:	gs push esp
  411fe1:	inc    edx
  411fe2:	inc    esp
  411fe3:	(bad)  
  411fe4:	shl    BYTE PTR [ebx],cl
  411fe6:	dec    esp
  411fe7:	(bad)  
  411fe8:	nop
  411fe9:	repnz mov es,edi
  411fec:	nop
  411fed:	jmp    0x5bf7:0xc80afe44
  411ff4:	and    ch,BYTE PTR [ebp+0x3371445e]
  411ffa:	daa    
  411ffb:	dec    esp
  411ffc:	imul   edi,DWORD PTR [ecx+0x4e],0xab7030ce
  412003:	sbb    BYTE PTR [eax+0x79],bl
  412006:	mov    cs,WORD PTR ds:[eax+0x49443671]
  41200d:	xor    ebp,DWORD PTR [ebx+0x4c]
  412010:	inc    ecx
  412011:	jns    0x412039
  412013:	into   
  412014:	dec    eax
  412015:	jo     0x411ffa
  412017:	sbb    BYTE PTR [eax],dh
  412019:	jns    0x412031
  41201b:	into   
  41201c:	cmp    BYTE PTR [ecx+0x54],bh
  41201f:	push   ebx
  412020:	sub    DWORD PTR [ecx+0x6],edi
  412023:	inc    esp
  412024:	xchg   ebx,eax
  412025:	ror    BYTE PTR [edi],1
  412027:	adc    DWORD PTR [ebx],0xd343f679
  41202d:	ja     0x412025
  41202f:	inc    ebx
  412030:	add    DWORD PTR [eax-0x18],esi
  412033:	icebp  
  412034:	stc    
  412035:	js     0x412015
  412037:	jns    0x41201d
  412039:	jo     0x412011
  41203b:	inc    ebx
  41203c:	loopne 0x4120af
  41203e:	cld    
  41203f:	inc    edx
	...
  41204c:	add    BYTE PTR [eax],al
  41204e:	add    cl,ah
  412050:	js     0x4120ce
  412052:	sub    al,0xd1
  412054:	js     0x412014
  412056:	sub    al,0xe5
  412058:	stos   BYTE PTR es:[edi],al
  412059:	mov    dh,0x43
  41205b:	leave  
  41205c:	xor    al,bl
  41205e:	cmp    eax,ecx
  412060:	js     0x411ff1
  412062:	and    al,0x6b
  412064:	jns    0x412004
  412066:	inc    ebx
  412067:	jmp    0x4120d0
  412069:	sahf   
  41206a:	inc    ebx
  41206b:	test   eax,0xa1f1b46f
  412070:	js     0x411ff8
  412072:	jns    0x4120e4
  412074:	jo     0x4120f4
  412076:	inc    ebx
  412077:	cwde   
  412078:	lea    eax,[eax]
  41207a:	(bad)  
  41207b:	std    
  41207c:	jns    0x41207b
  41207e:	xor    al,0xe7
  412080:	jno    0x41207f
  412082:	sub    di,WORD PTR [edx]
  412085:	sub    ebx,DWORD PTR [esi-0x4]
  412088:	jns    0x41203d
  41208a:	and    eax,0x41fd7a24
  41208f:	out    0xab,eax
  412091:	std    
  412092:	inc    esi
  412093:	cld    
  412094:	xor    ecx,eax
  412096:	ss cld 
  412098:	jns    0x412082
  41209a:	or     BYTE PTR [esi+0x79],0xfd
  41209e:	cs (bad) 
  4120a0:	cmp    ch,dh
  4120a2:	es jl  0x412114
  4120a5:	sahf   
  4120a6:	int3   
  4120a7:	jge    0x41211f
  4120a9:	std    
  4120aa:	pop    esp
  4120ab:	mov    edi,0x530efd7e
  4120b0:	pop    edx
  4120b1:	sub    eax,DWORD PTR [esi]
	...
  4120bf:	add    BYTE PTR [eax],al
  4120c1:	add    BYTE PTR [esi+esi*2+0x43],bh
  4120c5:	add    DWORD PTR [edx-0x51],esp
  4120c8:	sti    
  4120c9:	idiv   BYTE PTR [ebp+0x76]
  4120cc:	jae    0x4120bb
  4120ce:	push   esp
  4120cf:	jne    0x4120e4
  4120d1:	jmp    0xee03a212
  4120d6:	cmp    al,0x1d
  4120d8:	mov    al,ch
  4120da:	ror    DWORD PTR [ebx-0x1dc4bc04],0x5c
  4120e1:	(bad)  
  4120e2:	xchg   edi,eax
  4120e3:	iret   
  4120e4:	call   0xfdb8036d
  4120e9:	pusha  
  4120ea:	div    DWORD PTR [ebx-0x3]
  4120ed:	xor    al,0x33
  4120ef:	loopne 0x412120
  4120f1:	adc    eax,0xd4fe7782
  4120f6:	in     eax,0xf
  4120f8:	inc    eax
  4120f9:	jmp    0x8f3da552
  4120fe:	std    
  4120ff:	jne    0x412174
  412101:	add    BYTE PTR [esi+0x676c3023],cl
  412107:	int3   
  412108:	push   0x80cb9602
  41210d:	call   0x3fd85f
  412112:	loope  0x412143
  412114:	stc    
  412115:	dec    DWORD PTR [ebx+0x3cb8e8c3]
  41211b:	or     edi,edi
  41211d:	leave  
  41211e:	adc    al,0xcf
  412120:	add    BYTE PTR [ebp-0x33],dl
  412123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412124:	add    ah,0x0
	...
  412133:	add    BYTE PTR [eax],al
  412135:	adc    ah,BYTE PTR [ebx]
  412137:	std    
  412138:	inc    DWORD PTR [ecx]
  41213a:	dec    ecx
  41213b:	gs mov ah,0x82
  41213e:	mov    ebp,?
  412140:	(bad)  
  412141:	fcmovnb st,st(6)
  412143:	std    
  412144:	jne    0x412174
  412146:	mov    ds:0xa515454,eax
  41214b:	add    WORD PTR [esi],dx
  41214e:	mov    edx,0x276668bb
  412153:	inc    eax
  412154:	add    BYTE PTR [ecx],dl
  412156:	aas    
  412157:	or     edi,edi
  412159:	mov    eax,ebx
  41215b:	call   0xff4acba0
  412160:	call   FWORD PTR [ebx+0x545ee8d8]
  412166:	or     edi,edi
  412168:	or     edx,DWORD PTR [esi+0x1b89342f]
  41216e:	or     BYTE PTR [esi+0x0],ah
  412171:	out    0xb7,al
  412173:	mov    ebx,0x40384a68
  412178:	add    BYTE PTR [ecx+0xbfff93e],dl
  41217e:	(bad)  
  41217f:	call   0xff4a9ba0
  412184:	push   0xbeedcaa7
  412189:	aas    
  41218a:	leave  
  41218b:	inc    esp
  41218c:	imul   edi,esi,0x60
  41218f:	inc    eax
  412190:	je     0x41212d
  412192:	dec    ebp
  412193:	mov    ch,0x7
  412195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412196:	ins    DWORD PTR es:[edi],dx
  412197:	aad    0xfe
	...
  4121a5:	add    BYTE PTR [eax],al
  4121a7:	add    BYTE PTR [eax-0x68044a03],cl
  4121ad:	sub    esi,eax
  4121af:	(bad)  
  4121b0:	js     0x412169
  4121b2:	inc    esi
  4121b3:	pop    es
  4121b4:	aas    
  4121b5:	cmp    al,0x8c
  4121b7:	jmp    0x412175
  4121b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121ba:	dec    eax
  4121bb:	imul   edi,DWORD PTR [edi],0xfe6d1889
  4121c1:	pusha  
  4121c2:	test   eax,0x11fe3de
  4121c7:	call   edx
  4121c9:	ins    BYTE PTR es:[edi],dx
  4121ca:	sub    DWORD PTR [esi+0xa3fa610],edi
  4121d0:	call   DWORD PTR [ebx+0x17]
  4121d3:	mov    DWORD PTR [edx-0x2d],edi
  4121d6:	aas    
  4121d7:	je     0x412204
  4121d9:	fbstp  TBYTE PTR [ebp+0x40271707]
  4121df:	(bad)  
  4121e0:	sbb    bh,cl
  4121e2:	mov    ch,0xfb
  4121e4:	daa    
  4121e5:	in     eax,0xf0
  4121e7:	dec    BYTE PTR [eax]
  4121e9:	dec    edx
  4121ea:	add    DWORD PTR [eax+0x56],ebp
  4121ed:	hlt    
  4121ee:	ret    0x60ff
  4121f1:	mov    gs,WORD PTR [ebp-0x4969c0c0]
  4121f7:	or     edx,edi
  4121f9:	lock lock (bad) 
  4121fc:	loopne 0x412268
  4121fe:	inc    ecx
  4121ff:	jae    0x412232
  412201:	clc    
  412202:	(bad)  
  412203:	sti    
  412204:	sar    BYTE PTR [eax+eax*2+0x296752fe],1
  41220b:	xor    BYTE PTR [eax],al
	...
  412219:	add    BYTE PTR [eax],al
  41221b:	shl    BYTE PTR [esi],0x40
  41221e:	(bad)  
  41221f:	xor    cl,al
  412221:	mov    ds:0x9ea4112b,eax
  412226:	inc    eax
  412227:	push   ss
  412228:	enter  0xfdff,0x13
  41222c:	pop    es
  41222d:	call   0x2925b5dd
  412232:	add    al,0x90
  412234:	sti    
  412235:	jmp    0x412262
  412237:	sbb    eax,0x354076a5
  41223c:	mov    bl,dh
  41223e:	sbb    esi,eax
  412240:	or     esp,DWORD PTR [eax+eax*2-0x15]
  412244:	jae    0x4122a4
  412246:	mov    dh,0x40
  412248:	pusha  
  412249:	jmp    0x54b6:0x4e756140
  412250:	pusha  
  412251:	clc    
  412252:	out    dx,eax
  412253:	push   ecx
  412254:	jne    0x4122c2
  412256:	(bad)  
  412257:	dec    esp
  412258:	sbb    al,al
  41225a:	not    ebx
  41225c:	push   es
  41225d:	call   0xa925560d
  412262:	add    esi,DWORD PTR [eax]
  412264:	sti    
  412265:	jmp    0x412292
  412267:	ins    DWORD PTR es:[edi],dx
  412268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412269:	push   ss
  41226a:	inc    eax
  41226b:	xor    eax,0xc7ba9388
  412270:	or     al,BYTE PTR [eax]
  412272:	test   BYTE PTR [ebx-0x5f491c84],dl
  412278:	inc    ecx
  412279:	lods   al,BYTE PTR ds:[esi]
  41227a:	cmp    esi,DWORD PTR [ebp+0x13acc7]
	...
  41228c:	add    BYTE PTR [eax],al
  41228e:	and    al,cl
  412290:	out    0xb5,eax
  412292:	cmp    esi,DWORD PTR [eax]
  412294:	mul    esi
  412296:	call   0xd10a830f
  41229b:	pusha  
  41229c:	sbb    edi,DWORD PTR [edi]
  41229e:	push   ebx
  41229f:	js     0x4122f0
  4122a1:	ret    0x763
  4122a4:	call   0xc1a639
  4122a9:	sbb    DWORD PTR [ebx],edx
  4122ab:	add    eax,0x493ce915
  4122b0:	(bad)  
  4122b1:	cmc    
  4122b2:	iret   
  4122b3:	or     eax,ebp
  4122b5:	cmp    esi,ecx
  4122b7:	or     ecx,ecx
  4122b9:	cmp    ebx,edx
  4122bb:	jnp    0x412329
  4122bd:	sub    BYTE PTR [ebx+0x75],al
  4122c0:	jae    0x4122b7
  4122c2:	outs   dx,BYTE PTR fs:[esi]
  4122c4:	cs jle 0x41230f
  4122c7:	ret    0xfdc0
  4122ca:	and    BYTE PTR [edi],bh
  4122cc:	inc    ebx
  4122cd:	ins    DWORD PTR es:[edi],dx
  4122ce:	mov    esp,0xaaeac4f3
  4122d3:	sar    ebp,0xd4
  4122d6:	sub    BYTE PTR [esi+0x73],dh
  4122d9:	loope  0x4122ef
  4122db:	dec    eax
  4122dc:	dec    BYTE PTR [esi+0x18]
  4122df:	jbe    0x412354
  4122e1:	inc    ebp
  4122e2:	and    esp,DWORD PTR [esi]
  4122e4:	sub    DWORD PTR [esi],edi
  4122e6:	or     BYTE PTR [esi+0x4b],dh
  4122e9:	cmp    DWORD PTR [ebx+esi*8+0x25f7e9f0],edi
  4122f0:	std    
  4122f1:	pushf  
	...
  4122fe:	add    BYTE PTR [eax],al
  412300:	add    BYTE PTR [ebx+ebp*2-0x62],dh
  412304:	shr    BYTE PTR [ecx+0x72],cl
  412307:	(bad)  
  412308:	sub    esi,DWORD PTR [ebx]
  41230a:	enter  0x6253,0x4f
  41230e:	inc    esi
  41230f:	les    eax,FWORD PTR ds:0x9c6773e5
  412315:	dec    ecx
  412316:	cld    
  412317:	or     BYTE PTR [ecx],al
  412319:	jnp    0x4122c6
  41231b:	std    
  41231c:	out    dx,al
  41231d:	retf   
  41231e:	or     al,0xfd
  412320:	push   ecx
  412321:	cmp    ecx,eax
  412323:	in     eax,dx
  412324:	lahf   
  412325:	xchg   esp,eax
  412326:	aaa    
  412327:	ins    BYTE PTR es:[edi],dx
  412328:	sub    BYTE PTR [ebx],bh
  41232a:	loopne 0x4122f8
  41232c:	cmp    eax,0xfe7402
  412331:	adc    eax,esp
  412333:	call   0xfef4482b
  412338:	push   0xbeedc7d7
  41233d:	dec    BYTE PTR [ebx]
  41233f:	push   0x41
  412341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412342:	pop    ds
  412343:	leave  
  412344:	ins    BYTE PTR es:[edi],dx
  412345:	push   edi
  412346:	int3   
  412347:	std    
  412348:	jne    0x4122e8
  41234a:	lahf   
  41234b:	fst    DWORD PTR [edx-0x37]
  41234e:	mov    dl,0x65
  412350:	add    BYTE PTR [esi+0x5268bba2],ah
  412356:	and    eax,DWORD PTR [eax+0x0]
  412359:	adc    DWORD PTR ds:[edx+0x41],ebp
  41235d:	data16 mov dl,0x74
  412360:	or     BYTE PTR [esi],cl
  412362:	add    BYTE PTR [eax-0x1],dl
	...
  412371:	add    BYTE PTR [eax],al
  412373:	add    BYTE PTR [ecx],cl
  412375:	pop    ds
  412376:	add    BYTE PTR [eax],al
  412378:	stc    
  412379:	hlt    
  41237a:	rcr    BYTE PTR gs:[edx+0x3367fd8c],0x23
  412382:	inc    eax
  412383:	add    BYTE PTR [ecx],cl
  412385:	xor    BYTE PTR ds:0xfe99b8e8,al
  41238b:	jmp    FWORD PTR [ecx+0x70]
  41238e:	dec    ax
  412390:	out    0xc6,eax
  412392:	std    
  412393:	jne    0x4123c3
  412395:	lahf   
  412396:	push   edi
  412397:	dec    BYTE PTR [ecx-0x4e]
  41239a:	add    ah,BYTE PTR gs:[esi]
  41239d:	mov    DWORD PTR [eax-0x17406c01],0xfeb5084d
  4123a7:	inc    DWORD PTR [ebx-0x218a014d]
  4123ad:	sahf   
  4123ae:	sub    BYTE PTR [eax],0xd9
  4123b1:	mov    ah,0xc8
  4123b3:	ret    0xc6e2
  4123b6:	push   ebx
  4123b7:	mov    edi,DWORD PTR [edi]
  4123b9:	lea    edi,[edi-0x3d]
  4123bc:	fild   DWORD PTR [ecx-0x4c2fec4b]
  4123c2:	adc    al,0xe8
  4123c4:	outs   dx,DWORD PTR ds:[esi]
  4123c5:	(bad)  
  4123c6:	cmp    edi,esi
  4123c8:	xor    al,0x21
  4123ca:	mov    eax,0x40abc630
  4123cf:	(bad)  
  4123d0:	sub    cl,cl
  4123d2:	cmp    esi,DWORD PTR [edi+esi*1+0x59]
  4123d6:	lea    esp,[esi]
	...
  4123e4:	add    BYTE PTR [eax],al
  4123e6:	add    BYTE PTR [eax+0x4b743b59],ah
  4123ec:	inc    edx
  4123ed:	mov    ch,0x7
  4123ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f0:	inc    esp
  4123f1:	jecxz  0x4123f1
  4123f3:	mov    cl,dh
  4123f5:	mov    ch,0xfb
  4123f7:	xor    BYTE PTR [ebx+0x9],0xe8
  4123fb:	xchg   esi,eax
  4123fc:	mov    DWORD PTR [esi+edi*8],edi
  4123ff:	jo     0x412394
  412401:	cmp    eax,0x3bd6a9e7
  412406:	(bad)  
  412407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412408:	pop    edi
  412409:	add    DWORD PTR [eax],eax
  41240b:	aas    
  41240c:	test   al,0x42
  41240e:	adc    edi,DWORD PTR [edi]
  412410:	push   esp
  412411:	mov    bl,ch
  412413:	mov    esp,0xe9563cac
  412418:	dec    ebp
  412419:	call   0xae671cf8
  41241e:	inc    eax
  41241f:	aas    
  412420:	cld    
  412421:	(bad)  
  412424:	cmp    bh,BYTE PTR [esp+esi*2]
  412427:	dec    edi
  412428:	fidiv  DWORD PTR [ebp-0x124ad8f5]
  41242e:	(bad)  
  41242f:	adc    BYTE PTR [edi+0x41],dh
  412432:	jae    0x412459
  412434:	dec    edi
  412435:	test   eax,0x7ecb00ff
  41243a:	(bad)  
  41243b:	jb     0x4124a0
  41243d:	rcl    DWORD PTR [esi-0x10],1
  412440:	enter  0xc5c,0xd7
  412444:	icebp  
  412445:	fidivr WORD PTR [ecx+eiz*8]
  412448:	mov    ebp,0x2baf
	...
  412459:	add    BYTE PTR [ecx-0x62],dl
  41245c:	into   
  41245d:	cmp    al,0xd4
  41245f:	mov    ch,0xa7
  412461:	jp     0x41242c
  412463:	jno    0x412423
  412465:	cmp    al,0xce
  412467:	and    ch,bh
  412469:	add    al,0x32
  41246b:	mov    WORD PTR [esi-0x22],gs
  41246e:	and    al,BYTE PTR [edi]
  412470:	call   0x37b52803
  412475:	aad    0xa1
  412477:	sti    
  412478:	idiv   DWORD PTR [ebx+edx*1]
  41247b:	les    edi,FWORD PTR [edi-0x51]
  41247e:	arpl   WORD PTR [ecx-0x7a],si
  412481:	or     BYTE PTR [edi-0x4],bh
  412484:	mov    bh,0xd3
  412486:	mov    bh,0xb
  412488:	jo     0x412435
  41248a:	cmp    eax,0x717d7ec8
  41248f:	sti    
  412490:	out    dx,eax
  412491:	sub    ebx,DWORD PTR [eax-0x56]
  412494:	pop    esi
  412495:	cmp    al,0x9
  412497:	jno    0x412475
  412499:	or     esp,DWORD PTR [edi-0x1]
  41249c:	push   es
  41249d:	cmp    eax,0x3fbc7151
  4124a2:	dec    ecx
  4124a3:	sti    
  4124a4:	aas    
  4124a5:	cmp    al,0xcb
  4124a7:	mov    edi,0x71600c3f
  4124ac:	sub    ebx,DWORD PTR cs:[ebp-0x62]
  4124b0:	es cmp al,0xbd
  4124b3:	jl     0x41249d
  4124b5:	aas    
  4124b6:	ins    DWORD PTR es:[edi],dx
  4124b7:	mov    BYTE PTR [eax+0x3c],dl
  4124ba:	sbb    DWORD PTR [ecx+0xe],esi
  4124bd:	xor    DWORD PTR [eax],eax
	...
  4124cb:	add    BYTE PTR [eax],al
  4124cd:	loop   0x41247e
  4124cf:	out    dx,al
  4124d0:	mov    dh,0xda
  4124d2:	xor    BYTE PTR [ebp+ebp*4+0x7f],cl
  4124d6:	enter  0x6400,0x1
  4124da:	ins    DWORD PTR es:[edi],dx
  4124db:	push   eax
  4124dc:	xchg   esi,eax
  4124dd:	xor    edi,esp
  4124df:	adc    dh,ah
  4124e1:	scas   al,BYTE PTR es:[edi]
  4124e2:	mov    esp,0x71d7f4e8
  4124e7:	std    
  4124e8:	loop   0x412566
  4124ea:	cmc    
  4124eb:	pop    edx
  4124ec:	cmp    eax,eax
  4124ee:	pusha  
  4124ef:	add    DWORD PTR [edi+eax*1-0x38],0xb2bb2d76
  4124f7:	(bad)  
  4124f8:	cmp    ebx,DWORD PTR [ecx+0xa]
  4124fb:	(bad)  
  4124fc:	sbb    al,0x77
  4124fe:	jmp    0x33970e02
  412503:	std    
  412504:	adc    al,0x67
  412506:	sbb    edx,DWORD PTR [esi-0x6a]
  412509:	into   
  41250a:	enter  0xb7e8,0x55
  41250e:	jb     0x41250d
  412510:	repnz in al,0x5d
  412513:	sub    ebp,DWORD PTR [ecx-0x7b]
  412516:	(bad)  
  412517:	jae    0x4124da
  412519:	jle    0x41258c
  41251b:	dec    ebx
  41251c:	ins    DWORD PTR es:[edi],dx
  41251d:	mov    eax,ds:0x30ac8c70
  412522:	add    DWORD PTR [edi+0x51],edx
  412525:	mov    edx,0x4856fe17
  41252a:	mov    BYTE PTR [ebp+esi*8-0x5c],dh
  41252e:	mov    BYTE PTR [eax],0x56
	...
  41253d:	add    BYTE PTR [eax],al
  41253f:	add    ch,al
  412541:	jno    0x4125b6
  412543:	cmp    eax,0xbcfe196d
  412548:	inc    esp
  412549:	pusha  
  41254a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41254b:	das    
  41254c:	je     0x4125bc
  41254e:	or     DWORD PTR [ecx+0x5b],eax
  412551:	dec    esi
  412552:	daa    
  412553:	push   ds
  412554:	fs jae 0x412588
  412557:	sub    DWORD PTR [edx+0x540efd6e],ebx
  41255d:	jns    0x41250d
  41255f:	add    dh,bh
  412561:	retf   0x8473
  412564:	inc    ecx
  412565:	jb     0x4125d2
  412567:	inc    ecx
  412568:	out    0x40,al
  41256a:	inc    esp
  41256b:	cld    
  41256c:	(bad)  
  41256d:	call   0xc74:0xb2e675fe
  412574:	push   cs
  412575:	inc    eax
  412576:	sub    edi,edi
  412578:	icebp  
  412579:	mov    esi,0x943674c0
  41257e:	mov    BYTE PTR [ebp-0x2],al
  412581:	and    eax,DWORD PTR [ecx]
  412583:	add    cl,dh
  412585:	icebp  
  412586:	(bad)  
  412587:	jne    0x412527
  412589:	mov    ds:0xb2e12615,eax
  41258e:	push   esi
  41258f:	dec    DWORD PTR [ebx-0x44]
  412592:	call   0xfef39e08
  412597:	(bad)  
  412598:	cmp    esi,DWORD PTR [eax-0x4d518a02]
  41259e:	je     0x4125a8
  4125a0:	scas   al,BYTE PTR es:[edi]
  4125a1:	jp     0x4125c6
  4125a3:	inc    DWORD PTR [eax]
	...
  4125b1:	add    BYTE PTR [eax],al
  4125b3:	add    DWORD PTR [ebx-0x4e0ed6b6],esp
  4125b9:	or     bl,0x67
  4125bc:	mov    bh,0x32
  4125be:	rcr    BYTE PTR [edi+0x1fffeb2],0xb5
  4125c5:	stos   DWORD PTR es:[edi],eax
  4125c6:	cmp    BYTE PTR [ecx+0x38],ch
  4125c9:	stos   DWORD PTR es:[edi],eax
  4125ca:	or     ecx,DWORD PTR ds:0x66680c1f
  4125d0:	retf   
  4125d1:	in     eax,dx
  4125d2:	mov    esi,0xe8053801
  4125d7:	dec    esp
  4125d8:	push   0x69dfffe
  4125dd:	pop    ebx
  4125de:	pop    esi
  4125df:	add    esp,edi
  4125e1:	mov    edi,0x8a981610
  4125e6:	in     al,dx
  4125e7:	aas    
  4125e8:	loopne 0x412627
  4125ea:	out    dx,eax
  4125eb:	or     BYTE PTR [esi-0x3a7d73c6],bh
  4125f1:	sar    esi,1
  4125f3:	mov    dl,BYTE PTR [ecx-0x36b48bc6]
  4125f9:	mov    WORD PTR [eax],ss
  4125fb:	aas    
  4125fc:	popa   
  4125fd:	push   cs
  4125fe:	shl    BYTE PTR [edx-0x1a],0x3f
  412602:	inc    esp
  412603:	out    0x60,eax
  412605:	add    DWORD PTR [eax],eax
  412607:	aas    
  412608:	push   ds
  412609:	mov    ebp,0x165d0f3
  41260e:	add    BYTE PTR [ebp+0x61],dl
  412611:	stos   DWORD PTR es:[edi],eax
  412612:	call   DWORD PTR [esi+0x61]
  412615:	stos   DWORD PTR es:[edi],eax
  412616:	inc    DWORD PTR [eax]
	...
  412624:	add    BYTE PTR [eax],al
  412626:	retf   
  412627:	fwait
  412628:	xor    BYTE PTR [edi-0x3e],cl
  41262b:	jecxz  0x41265d
  41262d:	imul   BYTE PTR [eax+0x2afed425]
  412633:	sub    DWORD PTR [edi],esi
  412635:	je     0x4125d2
  412637:	dec    eax
  412638:	xlat   BYTE PTR ds:[ebx]
  412639:	adc    BYTE PTR [edi],bh
  41263b:	popa   
  41263c:	or     al,0xc0
  41263e:	adc    esp,DWORD PTR [ebx+0x2c]
  412641:	inc    esp
  412642:	pop    ss
  412643:	mov    ds:0xf63f40cc,al
  412648:	lods   eax,DWORD PTR ds:[esi]
  412649:	packuswb mm0,mm4
  41264c:	call   0x553a8f4f
  412651:	mov    WORD PTR [edx+0x58fe3014],?
  412657:	xor    bl,dl
  412659:	out    0xa6,eax
  41265b:	ins    BYTE PTR es:[edi],dx
  41265c:	cmp    dh,bh
  41265e:	mov    dh,0xdb
  412660:	xor    al,0xf6
  412662:	inc    eax
  412663:	lods   eax,DWORD PTR ds:[esi]
  412664:	scas   al,BYTE PTR es:[edi]
  412665:	(bad)  
  412666:	cmp    ebp,ebp
  412668:	xor    al,0xf6
  41266a:	xor    BYTE PTR [edi-0x37c48bc9],bl
  412670:	es scas eax,DWORD PTR es:[edi]
  412672:	cmp    BYTE PTR [eax+0xf],ah
  412675:	aaa    
  412676:	sbb    DWORD PTR [esi+0x16],ebp
  412679:	outs   dx,DWORD PTR ds:[esi]
  41267a:	and    BYTE PTR [esi+0xe],dh
  41267d:	cmp    DWORD PTR [eax],esp
  41267f:	pop    ebx
  412680:	iret   
  412681:	cmp    BYTE PTR [ecx],al
  412683:	outs   dx,BYTE PTR ds:[esi]
  412684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412685:	cmp    esp,ebp
  412687:	pop    eax
  412688:	imul   BYTE PTR [esi+0x0]
	...
  412696:	add    BYTE PTR [eax],al
  412698:	add    ah,dh
  41269a:	pusha  
  41269b:	out    0x12,eax
  41269d:	aas    
  41269e:	enter  0x45b0,0x34
  4126a2:	enter  0x8d34,0xe4
  4126a6:	inc    edi
  4126a7:	stos   DWORD PTR es:[edi],eax
  4126a8:	xor    ecx,ecx
  4126aa:	ins    DWORD PTR es:[edi],dx
  4126ab:	into   
  4126ac:	xchg   BYTE PTR [ebx+0x4b39176c],al
  4126b2:	fdivr  DWORD PTR [esi-0x3e9fbb52]
  4126b8:	adc    edi,DWORD PTR [edi]
  4126ba:	enter  0x43e2,0x39
  4126be:	inc    ebx
  4126bf:	ins    DWORD PTR es:[edi],dx
  4126c0:	add    edi,DWORD PTR [edi]
  4126c2:	enter  0xbea6,0x90
  4126c6:	enter  0x3e7,0x3f
  4126ca:	test   DWORD PTR [eax+esi*1],esp
  4126cd:	mov    ebp,eax
  4126cf:	out    0x3,eax
  4126d1:	adc    eax,0xe50411c8
  4126d6:	mov    DWORD PTR [ecx],0x7403c204
  4126dc:	sar    DWORD PTR [ebx+0x61305b43],cl
  4126e2:	ins    DWORD PTR es:[edi],dx
  4126e3:	mov    bh,0x38
  4126e5:	shr    DWORD PTR [edi+0x56],cl
  4126e8:	scas   al,BYTE PTR es:[edi]
  4126e9:	push   esp
  4126ea:	pusha  
  4126eb:	mov    edx,DWORD PTR [ebx]
  4126ed:	aas    
  4126ee:	enter  0x43f2,0xcc
  4126f2:	leave  
  4126f3:	push   edx
  4126f4:	(bad)  
  4126f5:	mov    al,ds:0xfda10109
  4126fa:	ins    BYTE PTR es:[edi],dx
  4126fb:	(bad)  
  4126fc:	mov    ah,0x0
	...
  41270a:	add    BYTE PTR [eax],al
  41270c:	dec    esp
  41270d:	pusha  
  41270e:	mov    edi,0x896e67d2
  412713:	cmp    ecx,eax
  412715:	inc    ebx
  412716:	hlt    
  412717:	push   ds
  412718:	push   edi
  412719:	outs   dx,BYTE PTR ds:[esi]
  41271a:	push   eax
  41271b:	mov    ebx,0x62cc354
  412720:	inc    edi
  412721:	outs   dx,BYTE PTR ds:[esi]
  412722:	jae    0x4126f9
  412724:	or     al,0x65
  412726:	sti    
  412727:	ret    0x6e37
  41272a:	xchg   DWORD PTR [esp+ebp*1+0x76],esp
  41272e:	std    
  41272f:	out    0x28,al
  412731:	xor    al,0xf0
  412733:	(bad)  
  412734:	adc    BYTE PTR [esi-0x3],ch
  412737:	pop    esp
  412738:	inc    edi
  412739:	ins    DWORD PTR es:[edi],dx
  41273a:	jae    0x41271d
  41273c:	adc    al,0x9a
  41273e:	inc    dh
  412740:	or     BYTE PTR [esi-0x4d],ch
  412743:	mov    ecx,0xc1fd6e68
  412748:	arpl   WORD PTR [esi+0x470aefd],sp
  41274e:	stc    
  41274f:	xchg   edx,eax
  412750:	mov    dl,0x6d
  412752:	jae    0x4126f1
  412754:	imul   edx,DWORD PTR [ebx],0x11
  412757:	jmp    0xfa03a698
  41275c:	cmp    al,0x13
  41275e:	mov    dl,BYTE PTR [ebp+0x169488bc]
  412764:	xor    ah,dh
  412766:	or     al,0x81
  412768:	push   edx
  412769:	mov    al,0xfd
  41276b:	outs   dx,BYTE PTR ds:[esi]
  41276c:	xor    al,0x88
  41276e:	jae    0x41275c
	...
  41277c:	add    BYTE PTR [eax],al
  41277e:	add    BYTE PTR [ecx+0x3cfdc27f],cl
  412784:	aas    
  412785:	inc    ebx
  412786:	jge    0x41274c
  412788:	jmp    0x4127a6
  41278a:	(bad)  
  41278c:	add    eax,0xc5a6000e
  412791:	mov    dh,0x47
  412793:	sub    BYTE PTR [eax-0x3f1e49f2],bl
  412799:	push   eax
  41279a:	cmpxchg BYTE PTR [ebx],ch
  41279d:	or     DWORD PTR [eax+0x29],edx
  4127a0:	fiadd  WORD PTR [esi+0xb]
  4127a3:	(bad)  
  4127a4:	ret    0x47b6
  4127a7:	sbb    al,0x98
  4127a9:	push   cs
  4127aa:	mov    dh,0xe1
  4127ac:	mov    esp,0x2b400f50
  4127b1:	add    eax,0x46dae950
  4127b6:	push   es
  4127b7:	(bad)  
  4127b8:	ret    0x47b5
  4127bb:	loop   0x412754
  4127bd:	(bad)  
  4127be:	aaa    
  4127bf:	mov    fs,WORD PTR [edi+0x40e6416d]
  4127c5:	inc    esp
  4127c6:	pushf  
  4127c7:	push   ss
  4127c8:	pushf  
  4127c9:	fisttp QWORD PTR [edi]
  4127cb:	(bad)  
  4127cc:	mov    DWORD PTR [ecx+0x7c46c2c4],0x481ba620
  4127d6:	push   DWORD PTR [ebx-0x28]
  4127d9:	std    
  4127da:	jne    0x412762
  4127dc:	lahf   
  4127dd:	les    esi,FWORD PTR [edi]
  4127df:	fnstenv [edx+0xc00a]
	...
  4127f1:	add    BYTE PTR [edx],dh
  4127f3:	push   ds
  4127f4:	mov    BYTE PTR [ebp+0xe],al
  4127f7:	mov    dl,0x74
  4127f9:	or     BYTE PTR [ecx-0x6b17eac8],bh
  4127ff:	mov    edi,esi
  412801:	(bad)  
  412802:	stc    
  412803:	aaa    
  412804:	xchg   ecx,eax
  412805:	push   DWORD PTR [ebx-0x31]
  412808:	call   0xfef3aa66
  41280d:	lea    edx,[ebx+0x73ff4d53]
  412813:	iret   
  412814:	call   0x35fe6766
  412819:	dec    BYTE PTR [eax-0x6c]
  41281c:	cdq    
  41281d:	dec    dl
  41281f:	push   0xaa634129
  412824:	ss (bad) 
  412826:	stos   BYTE PTR es:[edi],al
  412827:	sbb    DWORD PTR [edx],ebp
  412829:	es pusha 
  41282b:	call   0x7b0:0xa26fea36
  412832:	sbb    BYTE PTR [ecx+ebx*1-0x18],dl
  412836:	add    al,0x7e
  412838:	dec    BYTE PTR ss:[eax]
  41283b:	push   esp
  41283c:	(bad)  
  41283d:	dec    BYTE PTR [edx+0x23212969]
  412843:	push   0x33
  412845:	mov    WORD PTR [edx+0x15],?
  412848:	sar    dh,cl
  41284a:	jb     0x4127e5
  41284c:	sub    DWORD PTR ds:0xfe33621b,edx
  412852:	push   edx
  412853:	jne    0x412889
  412855:	je     0x412857
	...
  412863:	add    BYTE PTR [eax],al
  412865:	das    
  412866:	xchg   edx,eax
  412867:	lods   eax,DWORD PTR ds:[esi]
  412868:	pop    ss
  412869:	xlat   BYTE PTR ds:[ebx]
  41286a:	sbb    al,0xdf
  41286c:	inc    al
  41286e:	sub    DWORD PTR [ebp-0x2184586d],0x49d1b0fe
  412878:	ror    DWORD PTR [ebx+0x61],0xce
  41287c:	mov    dl,BYTE PTR [ebx-0x731cbf21]
  412882:	dec    ecx
  412883:	xor    edi,esi
  412885:	or     bh,BYTE PTR [ecx-0x7a]
  412888:	test   BYTE PTR [edi],bh
  41288a:	cmp    eax,0x41effe33
  41288f:	lods   eax,DWORD PTR ds:[esi]
  412890:	pop    es
  412891:	addr16 test al,0x65
  412894:	(bad)  
  412895:	jo     0x412888
  412897:	lods   eax,DWORD PTR ds:[esi]
  412898:	pop    ss
  412899:	mov    edx,0x60f804e3
  41289e:	(bad)  
  41289f:	data16 aam 0x59
  4128a2:	hlt    
  4128a3:	jmp    0x4128d9
  4128a5:	retf   
  4128a6:	mov    edi,0x6a9b863f
  4128ab:	dec    esi
  4128ac:	stos   BYTE PTR es:[edi],al
  4128ad:	inc    eax
  4128ae:	loopne 0x412897
  4128b0:	stos   DWORD PTR es:[edi],eax
  4128b1:	cmp    esi,eax
  4128b3:	out    0x3,eax
  4128b5:	ret    0xe743
  4128b8:	das    
  4128b9:	sub    DWORD PTR [edx-0x69],ebp
  4128bc:	test   eax,0x139c6a21
  4128c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c2:	enter  0x391,0x27
  4128c6:	mov    eax,0x3e5
	...
  4128d7:	add    BYTE PTR [edi],bh
  4128d9:	and    DWORD PTR [esp+esi*1+0xd],0x3f14066a
  4128e1:	enter  0x3ce7,0xbb
  4128e5:	je     0x4128e1
  4128e7:	xor    al,0xe9
  4128e9:	(bad)  
  4128ea:	out    0x3,eax
  4128ec:	aas    
  4128ed:	sub    DWORD PTR [ebx+edi*1-0x33],0x3f03de69
  4128f5:	enter  0x3ce7,0xc3
  4128f9:	ins    BYTE PTR es:[edi],dx
  4128fa:	fidiv  DWORD PTR [ecx+eax*8]
  4128fd:	enter  0x3e7,0x3f
  412901:	cmp    eax,0xd6c41c14
  412906:	inc    ecx
  412907:	add    al,0xba
  412909:	inc    ebx
  41290a:	mov    bh,0x30
  41290c:	mov    eax,ds:0xc3873769
  412911:	pop    esp
  412912:	call   0xa07e:0x65189134
  412919:	jne    0x4128a9
  41291b:	xor    al,0xf0
  41291d:	push   0xf37813fc
  412922:	jmp    0x412958
  412924:	jmp    0x4128e5
  412926:	add    BYTE PTR [ebx],al
  412928:	inc    ebx
  412929:	imul   esi,DWORD PTR [ebx-0x2f],0x6a45172b
  412930:	shl    DWORD PTR [eax-0xf],1
  412933:	pop    esi
  412934:	or     ebp,DWORD PTR [ecx+0xe]
  412937:	ins    DWORD PTR es:[edi],dx
  412938:	sbb    DWORD PTR [ecx-0x3],ebp
  41293b:	jmp    0x412940
	...
  412948:	add    BYTE PTR [eax],al
  41294a:	add    BYTE PTR [edi+0x733aec2c],bh
  412950:	push   0x0
  412952:	out    dx,al
  412953:	mov    al,0x61
  412955:	add    cl,ch
  412957:	cmp    al,0xe0
  412959:	jg     0x412914
  41295b:	std    
  41295c:	push   0x6c3c6c8c
  412961:	std    
  412962:	push   ds
  412963:	in     al,dx
  412964:	pusha  
  412965:	(bad)  
  412967:	cmp    al,0xc8
  412969:	sub    DWORD PTR [ecx],0xffffffd0
  41296c:	iret   
  41296d:	push   0x107ac59
  412972:	ins    BYTE PTR es:[edi],dx
  412973:	jno    0x4129de
  412975:	stc    
  412976:	imul   BYTE PTR [ecx+edi*8]
  412979:	call   0x109629b
  41297e:	ins    BYTE PTR es:[edi],dx
  41297f:	cmp    DWORD PTR [edx-0x37c4717d],0x0
  412986:	scas   al,BYTE PTR es:[edi]
  412987:	mov    dh,0x64
  412989:	icebp  
  41298a:	into   
  41298b:	or     al,0xc4
  41298d:	add    dh,dl
  41298f:	sub    eax,0x7a399ce1
  412994:	push   0x70436c8c
  412999:	std    
  41299a:	scas   al,BYTE PTR es:[edi]
  41299b:	mov    esp,DWORD PTR [eax-0x59]
  41299e:	hlt    
  41299f:	cmp    al,0xc8
  4129a1:	sub    DWORD PTR [ecx+0x6cc5aad7],0x57
  4129a8:	jbe    0x4129a7
  4129aa:	mov    ?,WORD PTR ds:0xedc8
	...
  4129bc:	add    BYTE PTR [eax],al
  4129be:	add    BYTE PTR [ebx+esi*4+0x70],cl
  4129c2:	daa    
  4129c3:	les    ecx,FWORD PTR [ebx-0x163a97b]
  4129c9:	inc    DWORD PTR [esi-0x34]
  4129cc:	xchg   DWORD PTR ds:0xc083c466,ecx
  4129d2:	push   0xffffffd5
  4129d4:	lds    eax,FWORD PTR [ebp-0x14f06]
  4129da:	pop    ecx
  4129db:	(bad)  
  4129dc:	in     eax,dx
  4129dd:	mov    esi,0x416e140e
  4129e2:	es dec ecx
  4129e4:	test   BYTE PTR [eax],al
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	fwait
  4129e8:	(bad)  
  4129e9:	push   eax
  4129ea:	jle    0x412a33
  4129ec:	or     al,0x0
  4129ee:	es push ecx
  4129f0:	mov    ebp,0xbc4cd475
  4129f5:	in     al,0x25
  4129f7:	fwait
  4129f8:	inc    BYTE PTR [edi]
  4129fa:	push   ss
  4129fb:	stos   DWORD PTR es:[edi],eax
  4129fc:	mov    ebx,0xfd460a75
  412a01:	(bad)  
  412a02:	imul   esp,DWORD PTR [edi-0x2],0x75
  412a06:	or     bl,BYTE PTR [ebx-0x651a174c]
  412a0c:	(bad)  
  412a0d:	(bad)  
  412a0e:	mov    ebx,0xf1fff2c7
  412a13:	call   0xf3e1:0xe0f11074
  412a1a:	icebp  
  412a1b:	call   0xebfe:0x9a839be5
	...
  412a2e:	add    BYTE PTR [eax],al
  412a30:	add    BYTE PTR [esi+eax*2+0x0],al
  412a34:	jmp    FWORD PTR [ebx-0x38]
  412a37:	std    
  412a38:	jne    0x4129c4
  412a3a:	call   0xfffe:0x9ab5e8b4
  412a41:	jmp    0x412a09
  412a43:	repnz (bad) 
  412a45:	aas    
  412a46:	xor    dh,BYTE PTR ds:[edi+ebp*1+0x56]
  412a4b:	js     0x412a30
  412a4d:	ins    BYTE PTR es:[edi],dx
  412a4e:	dec    esi
  412a4f:	xor    ah,bh
  412a51:	call   0x693f5d39
  412a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a57:	sbb    eax,0x19f660f2
  412a5c:	cdq    
  412a5d:	dec    edx
  412a5e:	jno    0x412a61
  412a60:	leave  
  412a61:	jge    0x412ac0
  412a63:	add    DWORD PTR [ebp-0x4c],edx
  412a66:	or     eax,0xf243c387
  412a6b:	lock pop eax
  412a6d:	test   BYTE PTR [eax],dh
  412a6f:	add    DWORD PTR [eax],eax
  412a71:	stos   DWORD PTR es:[edi],eax
  412a72:	dec    dx
  412a74:	inc    esp
  412a75:	sub    esi,DWORD PTR [ecx+0x1]
  412a78:	add    BYTE PTR [edi],bh
  412a7a:	retf   0x4f44
  412a7d:	outs   dx,DWORD PTR ds:[esi]
  412a7e:	and    DWORD PTR [eax+0x32231354],eax
  412a84:	adc    al,0x66
  412a86:	sub    al,ah
  412a88:	(bad)  
  412a89:	mov    ebx,0xe401acb0
  412a8e:	xchg   ecx,eax
  412a8f:	xchg   BYTE PTR [ebx+esi*8+0x70],bh
  412a93:	mov    eax,0x1
	...
  412aa4:	aam    0x79
  412aa6:	cdq    
  412aa7:	xor    al,0xee
  412aa9:	xor    BYTE PTR [ecx],al
  412aab:	call   DWORD PTR [edx+0x6d]
  412aae:	das    
  412aaf:	je     0x412af8
  412ab1:	jns    0x412aa3
  412ab3:	lods   al,BYTE PTR ds:[esi]
  412ab4:	enter  0x7b7d,0x54
  412ab8:	ret    
  412ab9:	jmp    0x8d7429d4
  412abe:	das    
  412abf:	push   ecx
  412ac0:	inc    edi
  412ac1:	sbb    BYTE PTR [esi+0x3],al
  412ac4:	aas    
  412ac5:	les    edi,FWORD PTR [ebx-0x15]
  412ac8:	mov    esp,0x3f69302c
  412acd:	enter  0xd211,0x91
  412ad1:	fsub   st(7),st
  412ad3:	sbb    ebp,DWORD PTR ds:0xb73196aa
  412ad9:	or     al,0x8c
  412adb:	xor    ebx,esi
  412add:	iret   
  412ade:	(bad)  
  412adf:	xchg   ebx,eax
  412ae0:	jno    0x412b48
  412ae2:	jle    0x412a80
  412ae4:	ins    BYTE PTR es:[edi],dx
  412ae5:	cmc    
  412ae6:	sub    BYTE PTR [eax+eiz*2],al
  412ae9:	pushf  
  412aea:	push   es
  412aeb:	mov    esp,0xb766c7ff
  412af0:	cmp    BYTE PTR [eax+0x7c],dh
  412af3:	sub    eax,0x37bf6649
  412af8:	ror    BYTE PTR [eax],cl
  412afa:	call   0xa951a89a
  412aff:	add    esp,DWORD PTR [edi]
  412b01:	adc    al,0x10
  412b03:	xor    DWORD PTR [ecx],ebp
  412b05:	stc    
  412b06:	xchg   edi,eax
  412b07:	fwait
	...
  412b14:	add    BYTE PTR [eax],al
  412b16:	add    BYTE PTR [edi-0xb],dl
  412b19:	test   al,0x3
  412b1b:	sbb    BYTE PTR [esi+ecx*4+0x1ec87fbb],bl
  412b22:	mov    bh,0x40
  412b24:	jo     0x412b15
  412b26:	das    
  412b27:	add    DWORD PTR [esi-0x1],esp
  412b2a:	xchg   edi,eax
  412b2b:	sbb    al,0x65
  412b2d:	push   es
  412b2e:	sahf   
  412b2f:	lock in eax,dx
  412b31:	mov    ?,WORD PTR [ebx-0x3b803781]
  412b37:	push   eax
  412b38:	pop    es
  412b39:	call   0xe80969d9
  412b3e:	sbb    eax,0x3e
  412b41:	push   es
  412b42:	xor    ecx,ecx
  412b44:	shl    DWORD PTR [edi+0x56f020b7],1
  412b4a:	mov    ah,0xff
  412b4c:	(bad)  
  412b4d:	pop    ss
  412b4e:	sbb    al,0x1e
  412b50:	mov    al,0xbe
  412b52:	xor    al,bh
  412b54:	test   DWORD PTR [eax],0x48eea9b6
  412b5a:	sub    BYTE PTR [ebx+0x65],al
  412b5d:	jae    0x412b50
  412b5f:	xor    al,0xa6
  412b61:	stc    
  412b62:	sahf   
  412b63:	dec    edi
  412b64:	ins    DWORD PTR es:[edi],dx
  412b65:	pop    edx
  412b66:	int    0x4f
  412b68:	pushw  0x9fd5
  412b6c:	or     BYTE PTR [ecx],al
  412b6e:	xchg   BYTE PTR [ecx-0x12],ch
  412b71:	dec    eax
  412b72:	sub    BYTE PTR [ebx+0x65],al
  412b75:	jae    0x412b58
  412b77:	inc    esp
  412b78:	scas   al,BYTE PTR es:[edi]
  412b79:	stc    
  412b7a:	outs   dx,BYTE PTR ds:[esi]
	...
  412b87:	add    BYTE PTR [eax],al
  412b89:	add    BYTE PTR [edi],cl
  412b8b:	out    dx,eax
  412b8c:	add    cl,dl
  412b8e:	mov    esi,esi
  412b90:	aas    
  412b91:	jmp    0xa1a6c7a5
  412b96:	jge    0x412bfd
  412b98:	(bad)  
  412b99:	aam    0x34
  412b9b:	ins    DWORD PTR es:[edi],dx
  412b9c:	scas   eax,DWORD PTR es:[edi]
  412b9d:	inc    edx
  412b9e:	outs   dx,DWORD PTR ds:[esi]
  412b9f:	pushw  0xffe9
  412ba2:	les    ebp,FWORD PTR [edi+0x6d]
  412ba5:	test   al,0x3c
  412ba7:	gs xor eax,esi
  412baa:	aam    0x7
  412bac:	add    DWORD PTR [esi],esp
  412bae:	leave  
  412baf:	int3   
  412bb0:	call   0xfda78732
  412bb5:	push   ss
  412bb6:	leave  
  412bb7:	pusha  
  412bb8:	std    
  412bb9:	xchg   esp,eax
  412bba:	hlt    
  412bbb:	ins    BYTE PTR es:[edi],dx
  412bbc:	nop
  412bbd:	enter  0x662f,0xc7
  412bc1:	sub    eax,DWORD PTR [eax-0x38]
  412bc4:	push   ebx
  412bc5:	bound  eax,QWORD PTR [eax+0x48]
  412bc8:	(bad)  
  412bc9:	cmc    
  412bca:	pcmpgtd mm7,mm5
  412bcd:	push   ebx
  412bce:	cmp    esi,edx
  412bd0:	pop    ebp
  412bd1:	fiadd  WORD PTR [esi-0x25e71734]
  412bd7:	gs std 
  412bd9:	pusha  
  412bda:	xchg   BYTE PTR [eax-0x3b],ah
  412bdd:	add    BYTE PTR [ebx-0x69bea1ca],ah
  412be3:	mov    BYTE PTR [eax],0x0
  412be6:	xchg   esi,eax
  412be7:	inc    edi
  412be8:	test   bh,dh
  412bea:	call   0x922aa3
	...
  412bfb:	add    BYTE PTR [eax],al
  412bfd:	cs sar bh,1
  412c00:	call   DWORD PTR [esi-0x69f41840]
  412c06:	enter  0x2268,0x57
  412c0a:	mov    edi,ebp
  412c0c:	addr16 nop
  412c0e:	sbb    eax,DWORD PTR [eax+0x0]
  412c11:	dec    esi
  412c12:	sbb    DWORD PTR [ebp+0x41],ebx
  412c15:	push   esi
  412c16:	mov    ch,0x34
  412c18:	addr16 push ds
  412c1a:	mov    edi,ebp
  412c1c:	(bad)  
  412c1d:	jae    0x412c7f
  412c1f:	in     eax,0xdc
  412c21:	mov    ch,0xb4
  412c23:	(bad)  
  412c24:	push   0x401b34
  412c29:	(bad)  
  412c2a:	mov    ebp,0x4026416f
  412c2f:	jb     0x412c91
  412c31:	xlat   BYTE PTR ds:[ebx]
  412c32:	(bad)  
  412c33:	push   0x80c81602
  412c38:	call   ebx
  412c3a:	pop    edi
  412c3b:	in     eax,0xc0
  412c3d:	test   DWORD PTR [ebx-0x645c7202],esi
  412c43:	sti    
  412c44:	jmp    FWORD PTR [ecx]
  412c46:	jl     0x412c2d
  412c48:	xchg   ebx,eax
  412c49:	ffree  st(7)
  412c4b:	add    bh,al
  412c4d:	jecxz  0x412c88
  412c4f:	pop    esi
  412c50:	inc    ecx
  412c51:	(bad)  
  412c52:	mov    BYTE PTR [eax],0x0
  412c55:	(bad)  
  412c56:	dec    eax
  412c57:	test   bh,dh
  412c59:	call   0x6e922b10
  412c5e:	sar    bh,1
  412c60:	inc    DWORD PTR [eax]
	...
  412c6e:	add    BYTE PTR [eax],al
  412c70:	(bad)  
  412c71:	mov    edi,0x713f0b87
  412c76:	add    DWORD PTR [eax+0x5d],ebp
  412c79:	add    ah,al
  412c7b:	call   FWORD PTR [eax]
  412c7d:	xor    DWORD PTR [eax+eax*2+0x5fb1f93f],0xfffffffe
  412c85:	jo     0x412cb5
  412c87:	xor    al,0x20
  412c89:	test   eax,0xc491ffc3
  412c8e:	cld    
  412c8f:	out    0xb,eax
  412c91:	push   cs
  412c92:	das    
  412c93:	(bad)  
  412c94:	pop    ss
  412c95:	(bad)  
  412c96:	mov    ah,0x40
  412c98:	aas    
  412c99:	leave  
  412c9a:	push   ss
  412c9b:	jno    0x412c9b
  412c9d:	jo     0x412c38
  412c9f:	jb     0x412c80
  412ca1:	scas   eax,DWORD PTR es:[edi]
  412ca2:	add    al,0x68
  412ca4:	cmp    eax,0x58800171
  412ca9:	pop    esp
  412caa:	stc    
  412cab:	out    0xdf,eax
  412cad:	dec    ebp
  412cae:	cs (bad) 
  412cb0:	mov    edx,0x40fd36ec
  412cb5:	cli    
  412cb6:	shl    edi,1
  412cb8:	ins    BYTE PTR es:[edi],dx
  412cb9:	add    WORD PTR [eax],ax
  412cbc:	xor    BYTE PTR [ebp*1+0x1959b2fe],ah
  412cc3:	test   al,0x5f
  412cc5:	call   0x5501:0x6cfdc82e
  412ccc:	les    edi,FWORD PTR [edx+eax*4-0x2ee5f43d]
  412cd3:	push   edi
	...
  412ce0:	add    BYTE PTR [eax],al
  412ce2:	add    BYTE PTR [edi+0x3f3f3868],dl
  412ce8:	mov    ecx,0xc9fc00af
  412ced:	inc    esi
  412cee:	inc    esp
  412cef:	jmp    0x412d61
  412cf1:	add    DWORD PTR [eax],eax
  412cf3:	aas    
  412cf4:	call   0x742e:0x717e70de
  412cfb:	inc    edi
  412cfc:	enter  0x776,0x90
  412d00:	aad    0x28
  412d02:	add    al,0x5b
  412d04:	sub    DWORD PTR [edi],edx
  412d06:	add    al,0x3f
  412d08:	enter  0xac67,0x3e
  412d0c:	enter  0xfc3b,0xa9
  412d10:	fsub   st(7),st
  412d12:	sbb    edx,DWORD PTR [ebx-0x58d24943]
  412d18:	pop    ds
  412d19:	out    0x3,eax
  412d1b:	aas    
  412d1c:	jo     0x412d97
  412d1e:	loopne 0x412ca9
  412d20:	bound  ebx,QWORD PTR [esi+0x2a7038b7]
  412d26:	or     eax,0x714a6278
  412d2b:	out    dx,al
  412d2c:	or     al,ch
  412d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d2f:	imul   ebx,DWORD PTR [edi+eiz*8+0x62c83f03],0xb462dc48
  412d3a:	add    edi,DWORD PTR [edi]
  412d3c:	enter  0xd6e7,0xf8
  412d40:	out    dx,eax
  412d41:	inc    esp
  412d42:	aaa    
  412d43:	add    al,cl
  412d45:	mov    edi,0x8d
	...
  412d56:	xor    ecx,DWORD PTR [ecx]
  412d58:	call   0xc90ca30
  412d5d:	add    al,0x3f
  412d5f:	enter  0x2ce7,0xab
  412d63:	shl    BYTE PTR [esi],1
  412d65:	adc    eax,0xc1eaa1be
  412d6a:	push   eax
  412d6b:	enter  0xc9b,0xbc
  412d6f:	pusha  
  412d70:	div    DWORD PTR [edi+0x2fac8937]
  412d76:	aas    
  412d77:	enter  0x3e7,0xe4
  412d7b:	mov    bh,0x6
  412d7d:	imul   DWORD PTR [ebp-0x1ffc572a]
  412d83:	fwait
  412d84:	add    BYTE PTR [esi],bh
  412d86:	lea    ecx,[eax]
  412d88:	add    DWORD PTR [ecx],eax
  412d8a:	repnz (bad) 
  412d8c:	std    
  412d8d:	out    0xbf,al
  412d8f:	test   DWORD PTR [eax],ebx
  412d91:	sar    bl,cl
  412d93:	cld    
  412d94:	mov    ebp,eax
  412d96:	aaa    
  412d97:	cld    
  412d98:	or     al,0x62
  412d9a:	jns    0x412d6d
  412d9c:	std    
  412d9d:	cmp    ebp,DWORD PTR [ebx+0x3c818052]
  412da3:	enter  0xb600,0xce
  412da7:	int    0x8d
  412da9:	imul   edi,eax,0x5be9fd60
  412daf:	xlat   BYTE PTR ds:[ebx]
  412db0:	adc    BYTE PTR [esi-0x44],ch
  412db3:	adc    eax,0x453ce900
  412db8:	cmp    edx,DWORD PTR [esi+0x0]
	...
  412dc7:	add    BYTE PTR [eax],al
  412dc9:	scas   al,BYTE PTR es:[edi]
  412dca:	or     BYTE PTR [ecx],al
  412dcc:	jmp    0xb53ee681
  412dd1:	out    dx,eax
  412dd2:	(bad)  
  412dd3:	aas    
  412dd4:	jmp    0xfbf6ca04
  412dd9:	jge    0x412e3c
  412ddb:	in     eax,0x55
  412ddd:	cmp    BYTE PTR [ecx-0x3],ah
  412de0:	mov    eax,ds:0xe900c83c
  412de5:	or     DWORD PTR [edi+0x51d8e924],eax
  412deb:	add    ebp,ecx
  412ded:	cmp    al,0xc8
  412def:	add    BYTE PTR [edx+0x7b],ch
  412df2:	lds    eax,FWORD PTR [ecx-0x7c2ec30a]
  412df8:	out    dx,al
  412df9:	arpl   WORD PTR [edx-0x3],sp
  412dfc:	jb     0x412dff
  412dfe:	pop    ebp
  412dff:	pop    ebp
  412e00:	xor    BYTE PTR [esi-0x3b],bh
  412e03:	add    BYTE PTR [edi+esi*2+0x2025816d],bh
  412e0a:	sti    
  412e0b:	push   eax
  412e0c:	add    BYTE PTR [esi-0x6909edc4],bl
  412e12:	(bad)  
  412e13:	clc    
  412e14:	jb     0x412dfd
  412e16:	pop    es
  412e17:	dec    DWORD PTR [ebx+0x2bc8e01f]
  412e1d:	call   0xdca9f702
  412e22:	mov    WORD PTR [edi],ds
  412e24:	add    DWORD PTR ds:0x82458ea3,ebx
  412e2a:	loopne 0x412df4
  412e2c:	jmp    0x412e2e
	...
  412e3a:	add    BYTE PTR [eax],al
  412e3c:	pushf  
  412e3d:	loope  0x412e07
  412e3f:	add    ebx,eax
  412e41:	loopne 0x412e0b
  412e43:	push   eax
  412e44:	sbb    eax,0x9c07e5a3
  412e49:	les    eax,FWORD PTR [eax]
  412e4b:	mov    ecx,edi
  412e4d:	xchg   ebx,eax
  412e4e:	mov    cl,cl
  412e50:	xchg   ebp,eax
  412e51:	or     cl,BYTE PTR [ebx-0x6e12e37]
  412e57:	add    DWORD PTR [ebx-0x50],0xfffffffd
  412e5b:	je     0x412e13
  412e5d:	(bad)  
  412e5e:	enter  0x4bc3,0xe1
  412e62:	jmp    0x5a855cb7
  412e67:	mul    BYTE PTR [esi]
  412e69:	int3   
  412e6a:	clc    
  412e6b:	jb     0x412ec4
  412e6d:	or     edi,edi
  412e6f:	mov    ebx,DWORD PTR [ebx+0x1ac00a5c]
  412e75:	pop    eax
  412e76:	jmp    0xd608:0xfb5c8005
  412e7d:	dec    ebx
  412e7e:	xor    eax,0xc899eb00
  412e83:	ret    0xcc2a
  412e86:	push   ebx
  412e87:	mov    edx,DWORD PTR [edx+0x47]
  412e8a:	shl    esp,0xc5
  412e8d:	jnp    0x412ee4
  412e8f:	push   0x3d9a9b
  412e94:	aas    
  412e95:	mov    ecx,0xcefc00b6
  412e9a:	inc    ecx
  412e9b:	inc    esp
  412e9c:	repz jno 0x412ea0
	...
  412eaf:	aas    
  412eb0:	jp     0x412f00
  412eb2:	mov    WORD PTR [edx+0x4afed155],es
  412eb8:	imul   ebx,DWORD PTR [ecx],0x17136cd
  412ebe:	test   edi,edi
  412ec0:	jmp    0x69742db4
  412ec5:	sbb    ebp,edx
  412ec7:	push   esi
  412ec8:	mov    gs,WORD PTR [edx]
  412eca:	mov    BYTE PTR [edx],al
  412ecc:	mov    ecx,eax
  412ece:	dec    edi
  412ecf:	xchg   edi,eax
  412ed0:	in     eax,0xe4
  412ed2:	(bad)  
  412ed3:	cwde   
  412ed4:	call   0x94d22299
  412ed9:	sub    bh,ah
  412edb:	mov    edx,0x34000159
  412ee0:	xor    DWORD PTR [ebp+0x2cbc7813],ebp
  412ee6:	(bad)  
  412ee7:	jmp    0x2a90:0x9fe7d134
  412eee:	(bad)  
  412eef:	pusha  
  412ef0:	push   esp
  412ef1:	and    eax,0x168d4e7
  412ef6:	add    BYTE PTR [eax+0x54],dl
  412ef9:	stc    
  412efa:	out    0x98,eax
  412efc:	retf   0xfe29
  412eff:	mov    esp,0xacff2d7c
  412f04:	push   edi
  412f05:	cdq    
  412f06:	into   
  412f07:	lods   eax,DWORD PTR ds:[esi]
  412f08:	xor    BYTE PTR [ecx],al
  412f0a:	push   DWORD PTR [edx+0x36eb199d]
  412f10:	jno    0x412f13
  412f12:	or     eax,DWORD PTR [eax]
	...
  412f20:	add    BYTE PTR [eax],al
  412f22:	call   FWORD PTR [eax+eax*1]
  412f25:	mov    ebx,0x1713e
  412f2a:	or     al,cl
  412f2c:	pushf  
  412f2d:	das    
  412f2e:	sbb    BYTE PTR [esi+0x52f92ac8],bh
  412f34:	sub    cl,dh
  412f36:	pop    es
  412f37:	mov    ah,bl
  412f39:	add    edx,DWORD PTR [edx-0x772cecad]
  412f3f:	lock aam 0x32
  412f42:	sbb    al,cl
  412f44:	out    dx,eax
  412f45:	mov    ah,0x3f
  412f47:	mov    ebp,esi
  412f49:	sub    DWORD PTR [ebx-0x30],edx
  412f4c:	iret   
  412f4d:	sbb    BYTE PTR ds:0x409ede5f,ah
  412f53:	lock xchg ecx,eax
  412f55:	sar    edi,0xc7
  412f58:	into   
  412f59:	scas   eax,DWORD PTR es:[edi]
  412f5a:	inc    eax
  412f5b:	jo     0x412fdb
  412f5d:	pop    es
  412f5e:	mov    al,ds:0x20fc515e
  412f63:	sub    DWORD PTR [esi],0xffffffc3
  412f66:	nop
  412f67:	pop    ebp
  412f68:	xor    al,0xfc
  412f6a:	mov    al,ds:0x8129042f
  412f6f:	pop    esi
  412f70:	adc    al,0xfc
  412f72:	pusha  
  412f73:	sbb    dl,BYTE PTR [ecx+ebp*1+0x3e81f71]
  412f7a:	aas    
  412f7b:	enter  0x46b0,0x3c
  412f7f:	enter  0x7d14,0x64
  412f83:	dec    edx
  412f84:	stos   DWORD PTR es:[edi],eax
  412f85:	sub    al,0x0
	...
  412f97:	add    dl,cl
  412f99:	push   ecx
  412f9a:	pop    es
  412f9b:	call   0x2b09fdcb
  412fa0:	sub    DWORD PTR [ecx],edi
  412fa2:	aam    0xe3
  412fa4:	sub    BYTE PTR [ebx+0x49803fd0],ch
  412faa:	pop    ebp
  412fab:	inc    esi
  412fac:	inc    ecx
  412fad:	jnp    0x41300b
  412faf:	call   0x1096eb7
  412fb4:	rcl    BYTE PTR fs:[ebp+0x50],1
  412fb8:	rol    DWORD PTR [ebx+0x24e93fd7],0x9c
  412fbf:	cs push ds
  412fc1:	es rol al,cl
  412fc4:	popf   
  412fc5:	fimul  DWORD PTR ds:0xcd148c82
  412fcb:	jae    0x412fac
  412fcd:	ret    0x50cd
  412fd0:	(bad)  
  412fd1:	test   eax,0xdcf9e8d1
  412fd6:	pop    esi
  412fd7:	std    
  412fd8:	loop   0x413056
  412fda:	fld    DWORD PTR ds:0x6181ae
  412fe0:	jmp    0x5129f821
  412fe5:	fwait
  412fe6:	pop    esi
  412fe7:	std    
  412fe8:	(bad)  
  412fe9:	jmp    0xa4ecf74f
  412fee:	pop    ebp
  412fef:	push   esp
  412ff0:	jb     0x413022
  412ff2:	cli    
  412ff3:	push   eax
  412ff4:	adc    DWORD PTR [ebx+0x29f522],esi
	...
  413006:	add    BYTE PTR [eax],al
  413008:	inc    ebx
  413009:	pusha  
  41300a:	jb     0x412ff4
  41300c:	sti    
  41300d:	pop    ebp
  41300e:	sub    edx,eax
  413010:	daa    
  413011:	aam    0x8
  413013:	cmp    DWORD PTR [ebp+0x5e],0x1d6b8efd
  41301a:	or     eax,0xfd5dce6d
  41301f:	jmp    0x814a044b
  413024:	fbstp  TBYTE PTR [ebp+edi*8+0x731d4b6e]
  41302b:	in     al,dx
  41302c:	and    eax,0x3ce9004f
  413031:	pop    ebp
  413032:	jae    0x413019
  413034:	addr16 aam 0x8
  413037:	inc    ecx
  413038:	jecxz  0x413097
  41303a:	std    
  41303b:	add    BYTE PTR [ecx-0x50],bh
  41303e:	je     0x413048
  413040:	outs   dx,BYTE PTR ds:[esi]
  413041:	and    bl,BYTE PTR [esi]
  413043:	dec    DWORD PTR [ecx+0x5c]
  413046:	mov    ebp,0x70bc1475
  41304b:	jmp    DWORD PTR [ebx-0x4241aa0]
  413051:	scas   eax,DWORD PTR es:[edi]
  413052:	dec    BYTE PTR [ebx]
  413054:	es cs (bad) 
  413057:	jmp    0x544e:0x874afb5
  41305e:	sbb    edi,edi
  413060:	fldenv [eax-0x43]
  413063:	jne    0x413049
  413065:	mov    ebx,0x87b06854
  41306a:	inc    eax
	...
  41307b:	fst    DWORD PTR [esi]
  41307d:	add    eax,0xfe630ae8
  413082:	call   FWORD PTR [ebp+0x7d027508]
  413088:	mov    esi,edi
  41308a:	jne    0x41303a
  41308c:	shr    BYTE PTR [ecx+0xaa4d91d],0xc0
  413093:	push   ebx
  413094:	retf   0x34e9
  413097:	fst    DWORD PTR [esi]
  413099:	add    eax,0xfdc292e8
  41309e:	jmp    FWORD PTR [ebp+0x8]
  4130a1:	jne    0x4130a5
  4130a3:	mov    ebp,0x5e75fe7d
  4130a8:	shr    BYTE PTR [edi],0x18
  4130ab:	mov    ecx,0x86f882a4
  4130b0:	sub    eax,0x60a62aff
  4130b5:	mov    ebp,0xfd6f6574
  4130ba:	inc    DWORD PTR [esi-0x38]
  4130bd:	jno    0x4130cb
  4130bf:	ffree  st(5)
  4130c1:	add    BYTE PTR [eax],al
  4130c3:	aas    
  4130c4:	jno    0x4130e0
  4130c6:	add    al,0xe4
  4130c8:	outs   dx,BYTE PTR ds:[esi]
  4130c9:	add    DWORD PTR [eax],eax
  4130cb:	aas    
  4130cc:	(bad)  
  4130cd:	inc    ecx
  4130ce:	pop    edx
  4130cf:	push   es
  4130d0:	mov    al,0xfc
  4130d2:	jmp    FWORD PTR [ebx-0x1a]
  4130d5:	sbb    BYTE PTR [edi+0x67],cl
  4130d8:	mov    DWORD PTR [ebx+0x29717ff7],esp
  4130de:	jno    0x4130e0
	...
  4130ec:	add    BYTE PTR [eax],al
  4130ee:	ds scas al,BYTE PTR es:[edi]
  4130f0:	and    eax,0x26656afe
  4130f5:	je     0x41312e
  4130f7:	leave  
  4130f8:	loop   0x4130f8
  4130fa:	loopne 0x4130be
  4130fc:	stc    
  4130fd:	mov    edi,0x74266752
  413102:	inc    ebx
  413103:	push   edx
  413104:	mov    al,0x7
  413106:	xlat   BYTE PTR ds:[ebx]
  413107:	jle    0x41312f
  413109:	inc    al
  41310b:	push   esi
  41310c:	inc    ecx
  41310d:	je     0x413153
  41310f:	jp     0x4130c1
  413111:	or     esi,DWORD PTR [eax+0x43e7fcfc]
  413117:	mov    ah,BYTE PTR [esi]
  413119:	(bad)  
  41311a:	jbe    0x41314b
  41311c:	stc    
  41311d:	push   ebx
  41311f:	aad    0x15
  413121:	cmp    BYTE PTR [ebx-0x73],0xd2
  413125:	push   esi
  413126:	out    dx,eax
  413127:	mov    eax,0xb187be9c
  41312c:	add    al,0xf8
  41312e:	in     eax,dx
  41312f:	outs   dx,DWORD PTR ds:[esi]
  413130:	inc    edx
  413131:	(bad)  
  413132:	and    al,0x16
  413134:	sbb    DWORD PTR [edx],edi
  413136:	cld    
  413137:	dec    ecx
  413138:	es (bad) 
  41313a:	cli    
  41313b:	xor    al,0x1
  41313d:	add    BYTE PTR [edi],bh
  41313f:	jno    0x4131b9
  413141:	inc    esp
  413142:	arpl   cx,ax
  413144:	sbb    al,0x29
  413146:	xor    dl,ch
  413148:	es add dl,0xc7
  41314c:	push   ebx
  41314d:	add    esi,DWORD PTR [edx+0xc06cc0]
	...
  41315f:	add    BYTE PTR [eax],al
  413161:	and    al,0xf8
  413163:	aas    
  413164:	or     dl,BYTE PTR [eax+0x5b]
  413167:	dec    esi
  413168:	and    BYTE PTR [ebx+0x47b0e76c],0x4d
  41316f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413170:	pop    ss
  413171:	xor    BYTE PTR [eax-0x1d],0xe
  413175:	or     BYTE PTR [ebx+0x6a],bl
  413178:	test   al,0x14
  41317a:	enter  0x7ff6,0xca
  41317e:	(bad)  
  41317f:	out    0x3,eax
  413181:	ret    0x1804
  413184:	shr    ecx,cl
  413186:	aam    0xfb
  413188:	sbb    bl,BYTE PTR [ebx+0x5b]
  41318b:	push   es
  41318c:	es mov ebp,0x53b0e85f
  413192:	sbb    ecx,DWORD PTR [ecx+0x2c87fbe]
  413198:	int3   
  413199:	stc    
  41319a:	add    al,0xcc
  41319c:	cli    
  41319d:	mov    eax,0xfb3ce75a
  4131a2:	outs   dx,DWORD PTR ds:[esi]
  4131a3:	out    0x3,eax
  4131a5:	aas    
  4131a6:	enter  0xbf5c,0x98
  4131aa:	test   esi,0xcff2a4af
  4131b0:	cwde   
  4131b1:	(bad)  
  4131b2:	pop    edx
  4131b3:	mov    dh,0xf9
  4131b5:	enter  0xd7d3,0x80
  4131b9:	add    esi,DWORD PTR [eax-0x19]
  4131bc:	scas   eax,DWORD PTR es:[edi]
  4131bd:	inc    esi
  4131be:	pop    ebx
  4131bf:	adc    al,0x1c
  4131c1:	pop    eax
  4131c2:	stos   BYTE PTR es:[edi],al
  4131c3:	xchg   esp,eax
  4131c4:	and    eax,0x0
	...
  4131d1:	add    BYTE PTR [eax],al
  4131d3:	add    BYTE PTR [ecx+0x4e],ch
  4131d6:	scas   eax,DWORD PTR es:[edi]
  4131d7:	and    eax,0x528f6feb
  4131dc:	xor    bl,BYTE PTR [ebx+0x7e]
  4131df:	stc    
  4131e0:	jne    0x4131b6
  4131e2:	add    ah,bl
  4131e4:	mov    edi,0x90e9e4db
  4131e9:	leave  
  4131ea:	std    
  4131eb:	mov    ah,0x58
  4131ed:	loope  0x413177
  4131ef:	cli    
  4131f0:	cmp    al,0xc8
  4131f2:	call   0xfd9b5b40
  4131f7:	inc    edx
  4131f8:	xchg   edx,eax
  4131f9:	outs   dx,BYTE PTR ds:[esi]
  4131fa:	jmp    FWORD PTR [ebp-0x4bff6544]
  413200:	data16 add al,BYTE PTR [ecx+0x4d43cf6]
  413207:	loop   0x413280
  413209:	aad    0x9e
  41320b:	repnz xchg ebp,edx
  41320e:	adc    BYTE PTR [ebx+0x19434b4c],dl
  413214:	adc    esp,edx
  413216:	rcr    DWORD PTR [ebx-0x231aa603],0xf7
  41321d:	pop    edx
  41321e:	std    
  41321f:	(bad)  
  413220:	mov    eax,ds:0x3962e86d
  413225:	pop    ecx
  413226:	std    
  413227:	bound  edi,QWORD PTR [esi-0x6]
  41322a:	pop    ecx
  41322b:	mov    al,0xff
  41322d:	repz mov ebp,ecx
  413230:	mov    edi,0x7b39f085
  413235:	loope  0x4131e3
  413237:	rol    BYTE PTR [eax],1
	...
  413245:	add    BYTE PTR [eax],al
  413247:	jl     0x4132a2
  413249:	cmc    
  41324a:	cmp    edi,DWORD PTR [eax*4+0x48ee72fd]
  413251:	push   0xc83dec
  413256:	rcl    edi,0xbb
  413259:	std    
  41325a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41325b:	int3   
  41325c:	dec    esi
  41325d:	sar    BYTE PTR [ecx-0xb],cl
  413260:	add    edi,ebp
  413262:	jns    0x41324b
  413264:	jbe    0x4131f6
  413266:	add    DWORD PTR [eax-0x38],esp
  413269:	add    BYTE PTR [eax],al
  41326b:	mov    bp,0x1e63
  41326f:	shl    DWORD PTR [ebx-0x215b7473],1
  413275:	inc    esp
  413276:	lock out 0x3c,al
  413279:	add    al,0x1
  41327b:	vandnps xmm6,xmm2,XMMWORD PTR es:[eax]
  413280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413281:	dec    BYTE PTR [ebx-0x2d75ca9c]
  413287:	lahf   
  413288:	sbb    dh,ch
  41328a:	mov    esi,DWORD PTR [eax+eiz*8]
  41328d:	iret   
  41328e:	nop
  41328f:	out    dx,al
  413290:	pop    eax
  413291:	add    BYTE PTR [eax],al
  413293:	push   ss
  413294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413295:	je     0x413293
  413297:	cld    
  413298:	(bad)  
  413299:	call   0x1061aed
  41329e:	nop
  41329f:	ins    DWORD PTR es:[edi],dx
  4132a0:	test   DWORD PTR [edx-0x12d5ae2e],0xc5da68
	...
  4132ba:	cs aam 0x4
  4132bd:	add    dh,ah
  4132bf:	pop    edi
  4132c0:	mov    ebp,0xcfdfe674
  4132c5:	nop
  4132c6:	mov    esi,0xa6416fb2
  4132cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132cc:	je     0x4132be
  4132ce:	mov    cs,WORD PTR [esi+0x49960004]
  4132d4:	iret   
  4132d5:	push   0xffffff96
  4132d7:	sub    bh,ch
  4132d9:	imul   esp,DWORD PTR [edx+ebp*1+0x2ca569fd],0x496fffd
  4132e4:	push   DWORD PTR [ebp-0x3a]
  4132e7:	stos   DWORD PTR es:[edi],eax
  4132e8:	in     eax,dx
  4132e9:	add    al,0x66
  4132eb:	les    eax,FWORD PTR [edi+0xa83ca45]
  4132f1:	sar    BYTE PTR [edi],0xbc
  4132f4:	enter  0xeafe,0x4a
  4132f8:	and    DWORD PTR [edi+ecx*2+0x36],esi
  4132fc:	cmc    
  4132fd:	add    al,0x3f
  4132ff:	outs   dx,DWORD PTR ds:[esi]
  413300:	stos   DWORD PTR es:[edi],eax
  413301:	pop    ebx
  413302:	aad    0x6e
  413304:	and    dh,BYTE PTR [edi+ecx*2+0x46]
  413308:	mov    DWORD PTR ds:0xc00e613f,eax
  41330e:	stos   DWORD PTR es:[edi],eax
  41330f:	shl    DWORD PTR gs:[edi+0x19],0x74
  413314:	(bad)  
  413315:	push   DWORD PTR [eax+0x9]
  413318:	sbb    al,BYTE PTR [ebx]
  41331a:	aas    
  41331b:	popa   
  41331c:	stos   DWORD PTR es:[edi],eax
  41331d:	inc    DWORD PTR [eax]
	...
  41332b:	add    BYTE PTR [eax],al
  41332d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41332e:	popa   
  41332f:	stos   DWORD PTR es:[edi],eax
  413330:	add    DWORD PTR [ebp-0x68fd549f],edx
  413336:	popa   
  413337:	add    DWORD PTR [eax],eax
  413339:	jmp    FWORD PTR [esi-0x4181069]
  41333f:	or     BYTE PTR [eax],al
  413341:	aas    
  413342:	call   0x3dc1270e
  413347:	scas   al,BYTE PTR es:[edi]
  413348:	addr16 rcl bl,1
  41334b:	(bad)  
  41334c:	(bad)  
  41334d:	fcom   DWORD PTR [ebx+0x313f0008]
  413353:	test   eax,0x1204df6
  413358:	push   DWORD PTR [edx]
  41335a:	jne    0x413385
  41335c:	imul   edx,DWORD PTR [esi+0x76],0x22
  413360:	dec    edi
  413361:	test   al,0xf4
  413363:	sbb    bh,ah
  413365:	mov    al,0x6d
  413367:	add    DWORD PTR [eax],eax
  413369:	neg    DWORD PTR [ecx+0x41]
  41336c:	je     0x4133ab
  41336e:	jp     0x413336
  413370:	(bad)  
  413371:	adc    bl,BYTE PTR ds:0xa00c42a9
  413377:	add    al,0xff
  413379:	repnz (bad) 
  41337b:	lahf   
  41337c:	sub    edi,DWORD PTR [eax-0x33]
  41337f:	out    0x3,eax
  413381:	mov    esp,0xf1abe38c
  413386:	fisubr DWORD PTR [eax]
  413388:	add    al,0x67
  41338a:	(bad)  
  41338b:	jmp    0x413390
  41338d:	aas    
  41338e:	ret    
  41338f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413390:	xchg   edi,eax
	...
  41339d:	add    BYTE PTR [eax],al
  41339f:	add    BYTE PTR [esi],bl
  4133a1:	loopne 0x41332a
  4133a3:	xchg   ebp,eax
  4133a4:	inc    edi
  4133a6:	pop    ss
  4133a7:	sub    al,0xf4
  4133a9:	retf   
  4133aa:	out    0x3,eax
  4133ac:	inc    esp
  4133ad:	mov    bl,dl
  4133af:	not    BYTE PTR [esi+0x2003c1c8]
  4133b5:	fisttp QWORD PTR [edi+0x22]
  4133b8:	xchg   ebx,eax
  4133b9:	pop    eax
  4133ba:	iret   
  4133bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133bc:	js     0x4133c7
  4133be:	call   0x17973c70
  4133c3:	and    cl,BYTE PTR [ebx+0x5be73f54]
  4133c9:	push   edi
  4133ca:	and    ch,BYTE PTR es:[ebx+0x58]
  4133ce:	ud0    ecx,DWORD PTR [ebx+0x57]
  4133d2:	push   ss
  4133d3:	and    ch,BYTE PTR [ebx+0x50]
  4133d6:	push   esi
  4133d8:	cmp    edx,DWORD PTR [edi+0x6]
  4133db:	dec    esp
  4133dc:	std    
  4133dd:	cld    
  4133de:	jb     0x41340f
  4133e0:	mov    ebp,0x70b6078b
  4133e5:	lock jg 0x4133e9
  4133e8:	mov    ah,0x7
  4133ea:	call   0xab0a620a
  4133ef:	and    DWORD PTR [ebp-0x31236c],edi
  4133f5:	(bad)  
  4133f6:	out    0x97,eax
  4133f8:	inc    edi
  4133f9:	dec    ebx
  4133fa:	add    al,0x13
  4133fc:	push   es
  4133fd:	or     eax,ebp
  4133ff:	add    edx,DWORD PTR [edx]
  413401:	int    0x0
  413403:	add    al,BYTE PTR [eax]
	...
  413411:	add    BYTE PTR [eax],al
  413413:	sti    
  413414:	icebp  
  413415:	(bad)  
  413416:	stos   BYTE PTR es:[edi],al
  413417:	push   es
  413418:	or     al,0xfd
  41341a:	jmp    0xa641fc5b
  41341f:	sbb    BYTE PTR [esi+0x0],0xe9
  413423:	cmp    al,0xc8
  413425:	lds    esp,FWORD PTR [edi+ecx*1]
  413428:	push   edi
  413429:	std    
  41342a:	jmp    0x7584c36b
  41342f:	inc    ebx
  413430:	enter  0xe900,0xf7
  413434:	or     esi,ecx
  413436:	jmp    0x7441fc77
  41343b:	clc    
  41343c:	gs push eax
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	add    BYTE PTR [edx+0x50],bl
  413442:	fs clc 
  413444:	popa   
  413445:	push   eax
  413446:	ret    
  413447:	pop    edi
  413448:	inc    esp
  413449:	inc    ebx
  41344a:	inc    ebp
  41344b:	retf   
  41344c:	fild   WORD PTR [edx]
  41344e:	rol    DWORD PTR [ebx-0x1e],cl
  413451:	add    BYTE PTR [esi],dh
  413453:	or     BYTE PTR [ebp+0x4a],bl
  413456:	test   al,0x3c
  413458:	aas    
  413459:	inc    ebx
  41345a:	adc    DWORD PTR [edx-0x2f16172c],edi
  413460:	sar    BYTE PTR [edi-0x6c],0x14
  413464:	pop    edi
  413465:	add    cl,ch
  413467:	cmp    al,0xdb
  413469:	je     0x413471
  41346b:	test   al,0x51
  41346d:	lea    esp,[esp+0x3cf17b4a]
  413474:	fcomp  QWORD PTR [edx+0x62]
	...
  413483:	add    BYTE PTR [eax],al
  413485:	add    al,bh
  413487:	pop    ebp
  413488:	jmp    0x691b92b3
  41348d:	sar    ecx,1
  41348f:	mov    al,ds:0xcb5d6fd
  413494:	loope  0x413464
  413496:	jae    0x413505
  413498:	rol    DWORD PTR [eax],0x2a
  41349b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41349c:	dec    BYTE PTR [ebx]
  41349e:	(bad)  
  41349f:	cmp    eax,0xa0538922
  4134a4:	addr16 or al,0x7e
  4134a7:	xor    al,0x19
  4134a9:	call   FWORD PTR [ecx-0x261f8b58]
  4134af:	mov    BYTE PTR ds:0x8ea043ff,al
  4134b5:	inc    eax
  4134b6:	bound  ebp,QWORD PTR [eax-0x75ab44cc]
  4134bc:	std    
  4134bd:	mov    ss,WORD PTR [esi-0x14]
  4134c0:	mov    edx,0x81cc1772
  4134c5:	ret    
  4134c6:	xor    ch,BYTE PTR [eax+0x36a5ec4c]
  4134cc:	jmp    0xff3547d1
  4134d1:	jne    0x41345d
  4134d3:	test   al,0x14
  4134d5:	icebp  
  4134d6:	fmul   QWORD PTR [ecx-0x4b1c3903]
  4134dc:	std    
  4134dd:	call   DWORD PTR [esi]
  4134df:	leave  
  4134e0:	jg     0x41355f
  4134e2:	jle    0x413487
  4134e4:	std    
  4134e5:	jmp    esi
  4134e7:	cmp    eax,0xe904
	...
  4134f8:	add    dl,bh
  4134fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134fb:	(bad)  
  4134fc:	call   DWORD PTR [ebp+0x36]
  4134ff:	stc    
  413500:	add    dl,al
  413502:	sar    ebp,0x75
  413505:	dec    edx
  413506:	test   al,0x14
  413508:	icebp  
  413509:	mov    WORD PTR [ecx-0x37284803],cs
  41350f:	add    BYTE PTR [eax],al
  413511:	lods   eax,DWORD PTR ds:[esi]
  413512:	add    ebx,eax
  413514:	push   ebp
  413515:	sbb    eax,0xf2c482a5
  41351a:	sbb    BYTE PTR [esi+0x50],dl
  41351d:	(bad)  
  41351e:	and    esp,DWORD PTR [esi]
  413520:	cld    
  413521:	aas    
  413522:	lahf   
  413523:	add    al,0xf8
  413525:	or     eax,0xbcfe4260
  41352a:	retf   
  41352b:	jmp    0x413577
  41352d:	(bad)  
  41352e:	pop    esi
  41352f:	add    DWORD PTR [esi+esi*1-0x1e],esi
  413533:	fbstp  TBYTE PTR [esp+eax*1]
  413536:	mov    al,ds:0x64ea0004
  41353b:	jmp    0xb4c2:0x4c0a08bf
  413542:	pop    ebx
  413543:	pop    edx
  413544:	jno    0x413544
  413546:	pop    esi
  413547:	sub    al,0x90
  413549:	ds pop edi
  41354b:	add    eax,ebp
  41354d:	or     BYTE PTR [esi+ebx*1+0x5e1bbcfe],al
  413554:	jno    0x4135d4
  413556:	popa   
  413557:	add    DWORD PTR [eax+ecx*2-0x16],esi
  41355b:	xchg   ecx,eax
  41355c:	add    eax,DWORD PTR [eax]
	...
  41356a:	add    BYTE PTR [eax],al
  41356c:	sub    BYTE PTR [ebp+0x617e715d],bh
  413572:	sub    DWORD PTR [ebp+0x3c],edi
  413575:	popa   
  413576:	add    DWORD PTR [ebx],ecx
  413578:	call   DWORD PTR [eax+ecx*1]
  41357b:	jmp    0x429615
  413580:	clc    
  413581:	and    al,0x1d
  413583:	(bad)  
  413584:	clc    
  413585:	popa   
  413586:	add    DWORD PTR [ebp+0x69b4ad7a],ecx
  41358c:	aas    
  41358d:	aaa    
  41358e:	(bad)  
  41358f:	(bad)  
  413590:	ins    BYTE PTR es:[edi],dx
  413591:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  413593:	(bad)  
  413594:	fldcw  WORD PTR [esi]
  413596:	add    eax,0xca142aff
  41359b:	inc    eax
  41359c:	aas    
  41359d:	push   esi
  41359e:	inc    ecx
  41359f:	jae    0x4135db
  4135a1:	enter  0xff8b,0xb8
  4135a5:	popa   
  4135a6:	push   ds
  4135a7:	jb     0x4135e4
  4135a9:	enter  0xc7cf,0x55
  4135ad:	push   ebx
  4135ae:	fimul  WORD PTR [ebx+edi*8+0x3c92d64f]
  4135b5:	pusha  
  4135b6:	jno    0x4135b9
  4135b8:	aas    
  4135b9:	enter  0x1f17,0x13
  4135bd:	push   eax
  4135be:	pop    ss
  4135bf:	pop    ds
  4135c0:	or     eax,0x3e043fcc
  4135c5:	enter  0xabe7,0x70
  4135c9:	(bad)  
  4135ca:	out    0x3,eax
  4135cc:	push   edi
  4135cd:	cmp    edx,ebp
  4135cf:	add    eax,DWORD PTR [eax]
	...
  4135dd:	add    BYTE PTR [eax],al
  4135df:	aas    
  4135e0:	mov    edi,0x8b2597a7
  4135e5:	and    al,0x20
  4135e7:	push   eax
  4135e8:	push   ebx
  4135e9:	out    0x3,eax
  4135eb:	mov    edx,0xd6b37c0d
  4135f0:	mov    DWORD PTR [ecx],0x6fdd3802
  4135f6:	test   eax,0x7da5230
  4135fb:	sub    BYTE PTR [ebp-0x378034ec],bh
  413601:	loop   0x413646
  413603:	mov    WORD PTR [esi+0x6008984e],?
  413609:	clc    
  41360a:	cli    
  41360b:	or     DWORD PTR [ebx+0x52],edx
  41360e:	rol    DWORD PTR [ecx],cl
  413610:	(bad)  [edi]
  413612:	sub    esp,DWORD PTR [ecx]
  413614:	scas   eax,DWORD PTR es:[edi]
  413615:	cs push ds
  413617:	mov    cl,0xc7
  413619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41361a:	(bad)  
  41361b:	call   0xe060daa9
  413620:	push   edx
  413621:	out    0x3,eax
  413623:	retf   0xc0c
  413626:	mov    bl,0x66
  413628:	enter  0x191,0x70
  41362c:	fsubrp st(7),st
  41362e:	push   ds
  41362f:	dec    ebp
  413630:	int3   
  413631:	add    dh,dh
  413633:	mov    al,0x9b
  413635:	dec    ecx
  413636:	test   al,0x3c
  413638:	mov    edi,0x1fc0f6c0
  41363d:	add    cl,ch
  41363f:	cmp    al,0x8b
  413641:	inc    ebx
  413642:	mov    cl,0x0
	...
  413650:	add    BYTE PTR [eax],al
  413652:	mov    ds:0xfbe9fd52,eax
  413657:	or     ebx,ebp
  413659:	call   0xbe41fe9a
  41365e:	scas   al,BYTE PTR es:[edi]
  41365f:	(bad)  
  413660:	lea    ebp,[ebx+eiz*1]
  413663:	push   edx
  413664:	jno    0x413647
  413666:	ret    
  413667:	or     esp,ebp
  413669:	scas   al,BYTE PTR es:[edi]
  41366a:	sub    BYTE PTR [edx+0x0],0xe9
  41366e:	cmp    al,0xc8
  413670:	lds    ebp,FWORD PTR [edi+ecx*1]
  413673:	push   ebx
  413674:	std    
  413675:	jmp    0x7984c1b6
  41367a:	inc    ebx
  41367b:	enter  0xe900,0xfb
  41367f:	or     esi,ebp
  413681:	jmp    0x5c41fec2
  413686:	clc    
  413687:	jns    0x4136d9
  413689:	data16 ror BYTE PTR [ebp-0x18],1
  41368d:	inc    ebx
  41368e:	ds enter 0xe200,0x7c
  413693:	aad    0x18
  413695:	push   0xffffffb0
  413697:	push   ebp
  413698:	add    BYTE PTR [ebp+0x35735135],bh
  41369e:	mov    dl,0xcc
  4136a0:	mov    eax,gs:0xa4c651fd
  4136a6:	sub    al,cl
  4136a8:	add    cl,ch
  4136aa:	cmp    al,0x5d
  4136ac:	add    eax,0x75f826
  4136b1:	jmp    0x953efef2
	...
  4136c2:	add    BYTE PTR [eax],al
  4136c4:	add    BYTE PTR [eax],dh
  4136c6:	push   edx
  4136c7:	adc    eax,DWORD PTR [eax]
  4136c9:	out    dx,eax
  4136ca:	add    BYTE PTR [eax+0x0],0xcd
  4136ce:	add    eax,0x5a3e1e72
  4136d3:	cli    
  4136d4:	jmp    DWORD PTR [ecx+0x6d213c48]
  4136da:	test   ebp,edi
  4136dc:	dec    DWORD PTR [edx]
  4136de:	retf   0x15fd
  4136e1:	inc    edi
  4136e2:	jg     0x413724
  4136e4:	add    cl,bl
  4136e6:	retf   0x4865
  4136e9:	push   edi
  4136ea:	int3   
  4136eb:	(bad)  
  4136ec:	call   DWORD PTR [esi-0x25827dbb]
  4136f2:	lds    esi,FWORD PTR [ebx+ecx*1-0x5f]
  4136f6:	cmp    dh,cl
  4136f8:	dec    DWORD PTR [ebx-0x58]
  4136fb:	in     eax,0x81
  4136fd:	push   ebp
  4136fe:	lds    eax,FWORD PTR [eax]
  413700:	(bad)  
  413701:	cmp    ebp,DWORD PTR [eax-0x3a98901b]
  413707:	add    ah,bh
  413709:	test   DWORD PTR ds:0xb3c1ffb9,eax
  41370f:	(bad)  
  413710:	repnz sub BYTE PTR [ebp+0x6],0xf
  413715:	fwait
  413716:	addr16 (bad) 
  413718:	jmp    DWORD PTR [ecx+0x7d0b1a40]
  41371e:	les    eax,FWORD PTR [ebx-0x14b8f99]
  413724:	mov    eax,0xc527
	...
  413735:	add    BYTE PTR [eax],al
  413737:	add    cl,ah
  413739:	bswap  eax
  41373b:	ret    
  41373c:	stos   DWORD PTR es:[edi],eax
  41373d:	aas    
  41373e:	jmp    0x4df261c6
  413743:	pop    eax
  413744:	(bad)  
  413745:	mov    dl,0xfc
  413747:	inc    eax
  413748:	(bad)  
  413749:	lods   al,BYTE PTR ds:[esi]
  41374a:	outs   dx,DWORD PTR ds:[esi]
  41374b:	add    DWORD PTR ds:0x3f0067b4,edx
  413751:	(bad)  
  413752:	cwde   
  413753:	add    DWORD PTR [edi],edi
  413755:	pop    edi
  413756:	sub    ecx,ebp
  413758:	and    ecx,edx
  41375a:	sbb    al,0xe7
  41375c:	into   
  41375d:	pop    ecx
  41375e:	sbb    esi,edi
  413760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413761:	aam    0xe8
  413763:	(bad)  
  413764:	mov    al,0xc6
  413766:	sub    ch,BYTE PTR [bx+si+0xd69]
  41376b:	shr    BYTE PTR [ebx],0x4e
  41376e:	sub    DWORD PTR [ebx+ebp*2+0x7f0a197a],eax
  413775:	cli    
  413776:	push   cs
  413777:	mov    DWORD PTR [edx-0x43],0x603f40c7
  41377e:	add    DWORD PTR [eax],eax
  413780:	aas    
  413781:	pop    es
  413782:	add    al,0x1
  413784:	aas    
  413785:	pop    edi
  413786:	sub    ecx,edi
  413788:	inc    esi
  413789:	sub    bl,BYTE PTR [ecx]
  41378b:	mov    ds:0xffc3aca0,al
  413790:	and    DWORD PTR [ebx+0x5f3e0018],0x4b028d01
  41379a:	mov    ah,0xfe
	...
  4137a8:	add    BYTE PTR [eax],al
  4137aa:	add    BYTE PTR [edx],cl
  4137ac:	xchg   edx,eax
  4137ad:	xchg   esi,eax
  4137ae:	inc    eax
  4137af:	aas    
  4137b0:	dec    ecx
  4137b1:	xchg   ebp,eax
  4137b2:	add    DWORD PTR [edi],edi
  4137b4:	popa   
  4137b5:	push   cs
  4137b6:	shl    BYTE PTR [edx-0x1fcbe5b4],0x73
  4137bd:	(bad)  
  4137be:	jmp    DWORD PTR [eax]
  4137c0:	cmp    ebx,edi
  4137c2:	(bad)  
  4137c3:	adc    BYTE PTR [edi+0x208dbeff],ah
  4137c9:	add    DWORD PTR [eax],eax
  4137cb:	aas    
  4137cc:	popa   
  4137cd:	add    eax,ebp
  4137cf:	inc    ebp
  4137d0:	rcr    DWORD PTR [ecx],0xfe
  4137d3:	out    0x8,eax
  4137d5:	stc    
  4137d6:	(bad)  
  4137d7:	call   0x79f2c7a4
  4137dc:	or     eax,ebp
  4137de:	sub    eax,DWORD PTR [esi]
  4137e0:	pop    eax
  4137e1:	push   ss
  4137e2:	sbb    eax,DWORD PTR [edi]
  4137e4:	mov    WORD PTR [esi+ecx*4-0x5460072c],?
  4137eb:	lods   eax,DWORD PTR ds:[esi]
  4137ec:	dec    esi
  4137ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ee:	add    esi,DWORD PTR [edi-0x4eb91726]
  4137f4:	loop   0x4137dd
  4137f6:	sub    esp,esp
  4137f8:	leave  
  4137f9:	out    0x3,eax
  4137fb:	out    0xc8,eax
  4137fd:	out    0x3,eax
  4137ff:	aas    
  413800:	sub    DWORD PTR [ecx+0x2fff90ff],0x274ed9ac
  41380a:	add    al,0x87
  41380c:	(bad)  
  41380e:	inc    esi
	...
  41381b:	add    BYTE PTR [eax],al
  41381d:	add    BYTE PTR [ecx-0x20],bh
  413820:	imul   ebx,DWORD PTR [ecx],0x30
  413823:	enter  0x66bf,0x3f
  413827:	enter  0x2be7,0x12
  41382b:	dec    edi
  41382c:	sahf   
  41382d:	sbb    ah,BYTE PTR [eax-0x73]
  413830:	sahf   
  413831:	sbb    dl,BYTE PTR [ecx+0x60]
  413834:	mov    bl,BYTE PTR [ecx+ecx*2]
  413837:	dec    edi
  413838:	push   0xffffffd8
  41383a:	push   ds
  41383b:	std    
  41383c:	sub    BYTE PTR [edi+edi*1],al
  41383f:	aam    0xd0
  413841:	xchg   BYTE PTR [ebx-0x57],dh
  413844:	and    al,ch
  413846:	sub    BYTE PTR [edi-0x25],cl
  413849:	add    DWORD PTR [eax],esp
  41384b:	mov    ch,0x8
  41384d:	iret   
  41384e:	jg     0x413818
  413850:	add    BYTE PTR cs:[eax+0x3e03a900],bl
  413857:	enter  0x83e7,0x18
  41385b:	lods   al,BYTE PTR ds:[esi]
  41385c:	cmp    ebx,DWORD PTR [edx]
  41385e:	stc    
  41385f:	pop    edi
  413860:	add    dh,dl
  413862:	push   edi
  413863:	dec    esi
  413864:	std    
  413865:	sub    ch,BYTE PTR [esi+esi*8-0x70ba1798]
  41386c:	add    BYTE PTR [ecx],ah
  41386e:	mov    dl,0xc7
  413870:	rcl    DWORD PTR [esi],0x24
  413873:	xchg   edi,eax
  413874:	(bad)  
  413875:	call   0xe94649b6
  41387a:	cmp    al,0xc8
  41387c:	xor    DWORD PTR [ebx],ebx
  41387e:	dec    ebp
  41387f:	pop    eax
  413880:	xor    ebx,0x0
	...
  41388e:	add    BYTE PTR [eax],al
  413890:	add    BYTE PTR [eax+0x420202d3],dh
  413896:	arpl   di,sp
  413898:	sar    DWORD PTR [ebp+0x6bdefd4d],1
  41389e:	xlat   BYTE PTR ds:[ebx]
  41389f:	cli    
  4138a0:	(bad)  
  4138a1:	ss loope 0x4138a4
  4138a4:	shl    DWORD PTR [eax-0x716ff39],0x4d
  4138ab:	and    esp,ecx
  4138ad:	mov    esp,0x90b60107
  4138b2:	mov    dl,0x80
  4138b4:	sub    BYTE PTR [ebx+0x4f],al
  4138b7:	and    ecx,ecx
  4138b9:	mov    esp,0x789e0107
  4138be:	stos   BYTE PTR es:[edi],al
  4138bf:	sub    BYTE PTR [eax],0x3b
  4138c2:	dec    edi
  4138c3:	and    eax,ecx
  4138c5:	mov    esp,0x60860107
  4138ca:	mov    ds:0x4d432880,al
  4138cf:	and    edi,DWORD PTR [ecx+0x6e0108bc]
  4138d5:	or     BYTE PTR [edx+0x4d3ca880],bl
  4138db:	and    esp,DWORD PTR [ecx]
  4138dd:	ret    
  4138de:	or     BYTE PTR [ecx],al
  4138e0:	push   esi
  4138e1:	lock xchg ecx,eax
  4138e3:	sub    BYTE PTR [eax+0x234d3c],0xd6
  4138ea:	dec    ecx
  4138eb:	inc    eax
  4138ec:	add    BYTE PTR [ecx],bh
  4138ee:	ins    DWORD PTR es:[edi],dx
  4138ef:	inc    ecx
  4138f0:	and    BYTE PTR [edi+0x25fdc9],0x0
	...
  413903:	add    BYTE PTR [esi+0x19004049],bl
  413909:	ins    DWORD PTR es:[edi],dx
  41390a:	dec    ecx
  41390b:	and    BYTE PTR [edi-0x69da0237],0x49
  413912:	inc    eax
  413913:	add    BYTE PTR [ecx],bh
  413915:	ins    DWORD PTR es:[edi],dx
  413916:	push   ecx
  413917:	adc    BYTE PTR [edi-0x21da0237],0x49
  41391e:	inc    eax
  41391f:	add    BYTE PTR [ecx-0x287fa692],ch
  413925:	leave  
  413926:	std    
  413927:	and    eax,0x4043f6
  41392c:	jns    0x41399c
  41392e:	popa   
  41392f:	and    BYTE PTR [edi-0x3c],0xfd
  413933:	and    eax,0x4043fe
  413938:	jns    0x4139a8
  41393a:	imul   eax,DWORD PTR [eax+0x25fdc427],0x404436
  413944:	cdq    
  413945:	outs   dx,BYTE PTR ds:[esi]
  413946:	jno    0x4138c8
  413948:	pop    ss
  413949:	(bad)  
  41394a:	std    
  41394b:	and    eax,0x40441e
  413950:	test   eax,0x1780796e
  413955:	(bad)  
  413956:	std    
  413957:	and    eax,0x4048d6
  41395c:	mov    ecx,0x6780816e
  413961:	(bad)  
  413962:	std    
  413963:	and    eax,0x40499e
	...
  413974:	add    BYTE PTR [eax],al
  413976:	add    BYTE PTR [ecx-0x187f7692],bl
  41397c:	enter  0x25fd,0x3f
  413980:	iret   
  413981:	add    DWORD PTR [eax+0x3f],0xbf93defe
  413988:	pop    ds
  413989:	add    edi,edi
  41398b:	and    ah,bh
  41398d:	add    DWORD PTR [eax+0x3f],0xbf9bde96
  413994:	pop    ds
  413995:	add    edi,edi
  413997:	sbb    bh,bh
  413999:	add    DWORD PTR [eax+0x3f],0xbfa3deae
  4139a0:	pop    ds
  4139a1:	add    edi,edi
  4139a3:	and    al,BYTE PTR [edi]
  4139a5:	add    BYTE PTR [eax+0x3f],0xc6
  4139a9:	fisubr WORD PTR [ebx-0xfee041]
  4139af:	pop    edx
  4139b0:	pop    DWORD PTR [ecx-0x24a1c0c0]
  4139b6:	mov    bl,0xbf
  4139b8:	lahf   
  4139b9:	add    al,0xff
  4139bb:	bound  esp,QWORD PTR [edi]
  4139bd:	test   BYTE PTR [eax+0x3f],al
  4139c0:	jbe    0x4139a1
  4139c2:	mov    ebx,0xff049fbf
  4139c7:	pop    edx
  4139c8:	pop    ds
  4139c9:	test   BYTE PTR [eax+0x3f],al
  4139cc:	push   cs
  4139cd:	ffreep st(3)
  4139cf:	mov    edi,0x22ff049f
  4139d4:	daa    
  4139d5:	test   BYTE PTR [eax+0x3f],al
  4139d8:	es (bad) 
	...
  4139e7:	add    BYTE PTR [eax],al
  4139e9:	add    BYTE PTR [edi+0x1aff049f],bh
  4139ef:	je     0xdf7f7935
  4139f5:	sar    DWORD PTR [edi+0x62ff049f],cl
  4139fb:	sub    DWORD PTR [eax+eax*2-0x24202dc1],eax
  413a02:	mov    edi,0x5aff04a0
  413a07:	enter  0x8447,0x7f
  413a0b:	enter  0xe15e,0x1c
  413a0f:	dec    ecx
  413a10:	test   al,0x3
  413a12:	or     BYTE PTR [esi-0x37807bc5],ah
  413a18:	inc    esi
  413a19:	loope  0x413a03
  413a1b:	dec    eax
  413a1c:	test   al,0x3
  413a1e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a20:	cmp    eax,DWORD PTR [edi+edi*2-0x171ed138]
  413a27:	dec    eax
  413a28:	test   al,0x3
  413a2a:	fsub   DWORD PTR [ebp-0x37807be5]
  413a30:	push   ss
  413a31:	loope  0x4139fb
  413a33:	dec    eax
  413a34:	test   al,0x3
  413a36:	shl    BYTE PTR [ebp-0x38007b11],0xfe
  413a3d:	loopne 0x413a7f
  413a3f:	dec    ecx
  413a40:	test   al,0x3
  413a42:	test   al,0xa5
  413a44:	rol    DWORD PTR [edi+edi*8+0x30e0e6c7],cl
  413a4b:	dec    ecx
  413a4c:	sub    BYTE PTR [eax+eax*1],al
	...
  413a5b:	add    BYTE PTR [eax],al
  413a5d:	nop
  413a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a5f:	repz test bh,bh
  413a62:	(bad)  
  413a63:	into   
  413a64:	loopne 0x413a86
  413a66:	dec    ecx
  413a67:	sub    BYTE PTR [eax+edi*2],al
  413a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a6b:	add    eax,DWORD PTR [ebp-0x1f493801]
  413a71:	and    BYTE PTR [ecx+0x28],cl
  413a74:	add    al,0x60
  413a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a77:	rol    DWORD PTR [edi+edi*8+0x20e09ec7],cl
  413a7e:	dec    ecx
  413a7f:	sub    BYTE PTR [eax+ecx*2],al
  413a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a83:	rol    DWORD PTR [edi+edi*8+0x70e086c7],cl
  413a8a:	dec    ecx
  413a8b:	sub    BYTE PTR [eax+esi*1],al
  413a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a8f:	add    BYTE PTR [ecx],ch
  413a91:	ret    0x107
  413a94:	outs   dx,BYTE PTR ds:[esi]
  413a95:	pop    ds
  413a96:	pop    es
  413a97:	sub    BYTE PTR [eax-0x52dcb4c4],0xbb
  413a9e:	pop    es
  413a9f:	add    DWORD PTR [esi+0x1f],edx
  413aa2:	sti    
  413aa3:	jg     0x413a4d
  413aa5:	cmp    al,0x4b
  413aa7:	and    ebx,DWORD PTR [ebp+0x3e0107c3]
  413aad:	fcomip st,st(2)
  413aaf:	jg     0x413a59
  413ab1:	cmp    al,0x4b
  413ab3:	and    ecx,DWORD PTR [ebp+0x260107bb]
  413ab9:	fucomip st,st(2)
  413abb:	jg     0x413a65
  413abd:	cmp    al,0x4b
  413abf:	and    eax,DWORD PTR [ecx+0x0]
	...
  413acd:	add    BYTE PTR [eax],al
  413acf:	add    bl,al
  413ad1:	pop    es
  413ad2:	add    DWORD PTR [esi],ecx
  413ad4:	(bad)  
  413ad6:	jg     0x413a80
  413ad8:	cmp    al,0x4b
  413ada:	and    edi,DWORD PTR [ecx-0x45]
  413add:	pop    es
  413ade:	add    esi,esi
  413ae0:	mov    dh,dl
  413ae2:	jg     0x413a8c
  413ae4:	cmp    al,0x4b
  413ae6:	and    esp,DWORD PTR [ecx-0x44]
  413ae9:	pop    es
  413aea:	add    esi,ebx
  413aec:	jo     0x413abc
  413aee:	jg     0x413b18
  413af0:	inc    ebx
  413af1:	dec    ebx
  413af2:	and    ebp,DWORD PTR [ecx-0x44]
  413af5:	pop    es
  413af6:	add    esi,eax
  413af8:	cwde   
  413af9:	inc    esi
  413afa:	jg     0x413b24
  413afc:	cmp    ecx,DWORD PTR [ebx+0x23]
  413aff:	popa   
  413b00:	mov    esp,0x80ae0107
  413b05:	ds jg  0x413b30
  413b08:	inc    ebx
  413b09:	dec    ebx
  413b0a:	and    esi,DWORD PTR [ebp-0x44]
  413b0d:	pop    es
  413b0e:	add    DWORD PTR [esi+0x287f3268],edx
  413b14:	cmp    edi,DWORD PTR [esp+ecx*8+0x0]
  413b18:	repnz add dl,cl
  413b1b:	int3   
  413b1c:	loop   0x413b1e
  413b1e:	retf   0x9dcc
  413b21:	mov    BYTE PTR [ecx],ah
  413b23:	add    al,0x95
  413b25:	lods   al,BYTE PTR ds:[esi]
  413b26:	(bad)  
  413b27:	jl     0x413b37
  413b29:	out    dx,al
  413b2a:	popa   
  413b2b:	add    BYTE PTR [esi],ah
  413b2d:	mov    dl,0x4
  413b30:	push   ss
  413b31:	dec    ecx
  413b32:	cmc    
  413b33:	add    al,0x0
	...
  413b41:	add    BYTE PTR [eax],al
  413b43:	repz mov ebp,0xc5e602b8
  413b49:	add    dl,al
  413b4b:	fcmovb st,st(5)
  413b4d:	cmp    eax,0xb80532de
  413b53:	fcmovb st,st(5)
  413b55:	add    BYTE PTR [eax],al
  413b57:	and    al,0xc8
  413b59:	add    BYTE PTR [ebx+0x87c541e],al
  413b5f:	outs   dx,BYTE PTR ds:[esi]
  413b60:	dec    edx
  413b61:	std    
  413b62:	call   esi
  413b64:	pop    es
  413b65:	add    al,BYTE PTR [eax]
  413b67:	and    eax,0xae7d1dac
  413b6c:	in     eax,dx
  413b6d:	add    eax,0xc2c59600
  413b72:	add    al,0x96
  413b74:	dec    eax
  413b75:	cmc    
  413b76:	inc    eax
  413b77:	and    edi,DWORD PTR [eax+edi*4+0xc5a60a]
  413b7e:	ret    0xc59a
  413b81:	cmp    eax,DWORD PTR [eax+0x7d00c596]
  413b87:	outs   dx,BYTE PTR ds:[esi]
  413b88:	in     eax,dx
  413b89:	or     DWORD PTR [eax],eax
  413b8b:	(bad)
  413b8f:	push   esi
  413b90:	jb     0x413b8f
  413b92:	add    BYTE PTR [esi-0x3b],dl
  413b95:	jnp    0x413b9f
  413b97:	faddp  st(2),st
  413b99:	add    BYTE PTR [eax],al
  413b9b:	popw   es
  413b9d:	add    al,BYTE PTR [eax]
  413b9f:	aas    
  413ba0:	je     0x413ba3
  413ba2:	add    bh,BYTE PTR [edi]
  413ba4:	pop    edi
  413ba5:	xchg   esi,eax
  413ba6:	pop    es
	...
  413bb3:	add    BYTE PTR [eax],al
  413bb5:	add    bh,dh
  413bb7:	outs   dx,BYTE PTR ds:[esi]
  413bb8:	add    DWORD PTR [eax],eax
  413bba:	aas    
  413bbb:	sbb    eax,0x5f6bfffd
  413bc0:	std    
  413bc1:	jmp    DWORD PTR [eax]
  413bc3:	pop    esp
  413bc4:	or     DWORD PTR [eax+0x15f2d],edi
  413bca:	std    
  413bcb:	bound  eax,QWORD PTR [ecx]
  413bcd:	cmp    eax,0x1673f
  413bd2:	and    BYTE PTR [edi+0x59],0x13
  413bd6:	aas    
  413bd7:	pop    edi
  413bd8:	add    edx,eax
  413bda:	cmp    ebx,DWORD PTR [edi-0x2a]
  413bdd:	(bad)  
  413bde:	cmp    BYTE PTR [edi+0x1],bl
  413be1:	jge    0x413c1a
  413be3:	xlat   BYTE PTR ds:[ebx]
  413be4:	jmp    0x413be5
  413be6:	fcomp  DWORD PTR [esi+0x3f]
  413be9:	add    edi,DWORD PTR [edi]
  413beb:	ins    BYTE PTR es:[edi],dx
  413bec:	add    DWORD PTR [eax],esp
  413bee:	aas    
  413bef:	pop    edi
  413bf0:	xchg   esi,eax
  413bf1:	pop    es
  413bf2:	xchg   DWORD PTR [esi+0x1],edx
  413bf5:	add    BYTE PTR [edi],bh
  413bf7:	popf   
  413bf8:	std    
  413bf9:	push   DWORD PTR [ebx+0x5f]
  413bfc:	sar    edi,0xa8
  413bff:	ror    DWORD PTR [ecx],cl
  413c01:	mov    eax,0x15f45
  413c06:	jge    0x413c62
  413c08:	add    DWORD PTR ds:0x4df3f,edi
  413c0e:	or     ah,BYTE PTR [edi+0x49]
  413c11:	sbb    edi,DWORD PTR [edi]
  413c13:	pop    edi
  413c14:	add    edx,eax
  413c16:	inc    ebx
  413c17:	pop    edi
  413c18:	(bad)  
  413c19:	enter  0x0,0x0
	...
  413c29:	xor    bl,BYTE PTR [edi+0x1]
  413c2c:	add    DWORD PTR [edi],edi
  413c2e:	bound  esi,QWORD PTR [eax-0x40]
  413c31:	mov    dl,0xaa
  413c33:	sti    
  413c34:	sbb    eax,0x46a8c7c4
  413c39:	cmp    al,0xc8
  413c3b:	push   0xffffff85
  413c3d:	and    al,0xc4
  413c3f:	out    0x3,eax
  413c41:	inc    eax
  413c42:	shr    ah,cl
  413c44:	jle    0x413c05
  413c46:	fsubr  st,st(3)
  413c48:	add    edi,DWORD PTR [edi]
  413c4a:	push   ecx
  413c4b:	push   0xe7c83cec
  413c50:	ret    
  413c51:	stc    
  413c52:	dec    ecx
  413c53:	retf   
  413c54:	pop    es
  413c55:	aas    
  413c56:	enter  0x3ef,0x3f
  413c5a:	enter  0x8570,0x38
  413c5e:	int3   
  413c5f:	out    0x3,eax
  413c61:	mov    esp,0x3f0803c4
  413c66:	push   ebx
  413c67:	jo     0x413c55
  413c69:	cmp    al,0xc8
  413c6b:	out    0x97,eax
  413c6d:	xor    eax,0xff05e852
  413c72:	inc    esi
  413c73:	daa    
  413c74:	jl     0x413cb5
  413c76:	or     ch,bl
  413c78:	add    ebp,edi
  413c7a:	jmp    0x4b8044a8
  413c7f:	push   0xe7c83cf0
  413c84:	adc    dh,BYTE PTR [ebx]
  413c86:	in     eax,0x72
  413c88:	test   DWORD PTR [eax-0x34],eax
  413c8b:	out    0x3,eax
	...
  413c99:	add    BYTE PTR [eax],al
  413c9b:	add    BYTE PTR [esi+0x3f07cf49],dh
  413ca1:	enter  0x4aa7,0xbf
  413ca5:	in     al,0xeb
  413ca7:	add    edi,DWORD PTR [edi]
  413ca9:	shl    bh,1
  413cab:	add    edi,DWORD PTR [edi]
  413cad:	push   ecx
  413cae:	push   0xe7c83cf3
  413cb3:	jle    0x413c7c
  413cb5:	loopne 0x413ca2
  413cb7:	add    edi,DWORD PTR [edi]
  413cb9:	sbb    BYTE PTR [eax],cl
  413cbb:	inc    edi
  413cbc:	mov    ebp,0x38d50049
  413cc1:	enter  0xae00,0xb7
  413cc5:	in     al,0x89
  413cc7:	push   0xe900cb4c
  413ccc:	retf   
  413ccd:	inc    edi
  413cce:	sbb    ch,ch
  413cd0:	cmp    al,0xc8
  413cd2:	inc    eax
  413cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cd4:	ret    
  413cd5:	loop   0x413cdb
  413cd7:	jmp    0xe9420d18
  413cdc:	cmp    al,0x51
  413cde:	jg     0x413cb9
  413ce0:	cmp    al,cl
  413ce2:	add    BYTE PTR [edx-0x65],ah
  413ce5:	fild   WORD PTR [ecx+ebp*8]
  413ce8:	cmp    al,0x52
  413cea:	(bad)  
  413ceb:	jmp    0xb3b:0x61c0457c
  413cf2:	mov    DWORD PTR [ebp-0x62763520],esp
  413cf8:	fmul   st,st(2)
  413cfa:	push   ebx
  413cfb:	xchg   edi,eax
  413cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cfd:	stc    
  413cfe:	mul    BYTE PTR [eax+eax*1+0x0]
	...
  413d0e:	add    BYTE PTR [ebx-0x3ece75ba],ah
  413d14:	sub    eax,0x8d3437ff
  413d19:	mov    esi,ebp
  413d1b:	test   DWORD PTR [ecx-0x8],ecx
  413d1e:	call   0xffc273c8
  413d23:	cmp    al,0x85
  413d25:	std    
  413d26:	push   es
  413d27:	dec    ebp
  413d28:	inc    esi
  413d29:	mov    edi,DWORD PTR [ebx+ebp*4-0x46]
  413d2d:	jb     0x413cc9
  413d2f:	and    DWORD PTR [esi-0x1],eax
  413d32:	aas    
  413d33:	test   al,0xca
  413d35:	add    cl,ch
  413d37:	test   eax,0x936889df
  413d3c:	retf   0xe900
  413d3f:	add    eax,0x3ce51848
  413d44:	enter  0x40,0xef
  413d48:	xchg   edx,eax
  413d49:	sbb    DWORD PTR [esi+edx*2],eax
  413d4c:	retf   0x8187
  413d4f:	xchg   dh,cl
  413d51:	add    BYTE PTR [eax],al
  413d53:	fisttp QWORD PTR [edx+0x15]
  413d56:	add    al,0x66
  413d58:	retf   0xc2f6
  413d5b:	push   edi
  413d5c:	pop    esi
  413d5d:	pop    es
  413d5e:	mov    cl,BYTE PTR [esi-0x34]
  413d61:	fsin   
  413d63:	in     eax,0xc4
  413d65:	adc    eax,0x1dfa24eb
  413d6a:	add    DWORD PTR [edi+0x16000138],ecx
  413d70:	pop    edi
  413d71:	sbb    BYTE PTR [ebx+0x0],cl
	...
  413d7f:	add    BYTE PTR [eax],al
  413d81:	add    BYTE PTR [edi+0x2600013c],ah
  413d87:	ret    
  413d88:	sbb    BYTE PTR [eax],0x22
  413d8b:	retf   0x4000
  413d8e:	lahf   
  413d8f:	xchg   ecx,eax
  413d90:	sbb    DWORD PTR [esi+eiz*8],eax
  413d93:	leave  
  413d94:	xchg   DWORD PTR [ecx+0xce16],eax
  413d9a:	ins    DWORD PTR es:[edi],dx
  413d9b:	dec    ecx
  413d9c:	adc    eax,0x8ac9d604
  413da1:	sbb    ah,ah
  413da3:	hlt    
  413da4:	sti    
  413da5:	ret    
  413da6:	pop    ss
  413da7:	out    0x82,al
  413da9:	out    dx,al
  413daa:	xlat   BYTE PTR ds:[ebx]
  413dab:	rcl    DWORD PTR ds:0x734475,0xa9
  413db2:	stos   BYTE PTR es:[edi],al
  413db3:	int    0x0
  413db5:	add    BYTE PTR [ebx],dh
  413db7:	xor    cl,BYTE PTR [edx+0xcd8681]
  413dbd:	add    BYTE PTR [edi],bl
  413dbf:	dec    ecx
  413dc0:	adc    eax,0x40c9a604
  413dc5:	mov    edi,ebx
  413dc7:	xor    eax,0xc2960001
  413dcc:	adc    BYTE PTR [eax],0x3f
  413dcf:	xor    eax,DWORD PTR [ecx]
  413dd1:	add    ah,al
  413dd3:	mov    al,0xe9
  413dd5:	add    edi,DWORD PTR [edi]
  413dd7:	das    
  413dd8:	pop    ss
  413dd9:	sar    DWORD PTR [esi],0xfb
  413ddc:	dec    BYTE PTR [ecx-0x2ccceb1]
  413de2:	jge    0x413d8b
  413de4:	icebp  
  413de5:	jmp    0x0:0x0
	...
  413df4:	add    BYTE PTR ds:0x9600e17f,bh
  413dfa:	inc    ebx
  413dfb:	add    eax,0xe9e43f00
  413e00:	mov    bh,BYTE PTR [esi+0x3f00053e]
  413e06:	mov    eax,0x2f431782
  413e0b:	add    DWORD PTR [eax-0x4a],eax
  413e0e:	imul   ebp
  413e10:	add    edi,DWORD PTR [edi]
  413e12:	das    
  413e13:	jp     0x413d95
  413e15:	das    
  413e16:	xor    eax,DWORD PTR [ecx]
  413e18:	add    BYTE PTR [edi+esi*4+0x2f3f03e9],dh
  413e1f:	xor    DWORD PTR [eax],esp
  413e21:	cwde   
  413e22:	jne    0x413dd2
  413e24:	sar    DWORD PTR [ebx],0x2f
  413e27:	mov    ah,0x54
  413e29:	mov    ah,0x12
  413e2b:	in     eax,0xf
  413e2d:	mov    DWORD PTR [edx+0x41],eax
  413e30:	push   esi
  413e31:	mov    esp,0x3a7600f3
  413e36:	lods   al,BYTE PTR ds:[esi]
  413e37:	add    BYTE PTR [eax],al
  413e39:	aas    
  413e3a:	das    
  413e3b:	jl     0x413eb8
  413e3d:	sbb    eax,DWORD PTR [ebx+0x7c]
  413e40:	mul    BYTE PTR [esp+ebx*8+0x7e]
  413e44:	arpl   WORD PTR [ebx+0x2f],bx
  413e47:	jnp    0x413e67
  413e49:	ret    
  413e4a:	jmp    0xebf55de4
  413e4f:	jl     0x413e26
  413e51:	retf   0x199
  413e54:	add    BYTE PTR [edi],bh
  413e56:	enter  0xc9e7,0x0
	...
  413e66:	add    BYTE PTR [eax],al
  413e68:	es mov esp,0x4afebce5
  413e6e:	mov    al,ds:0xa7487299
  413e73:	pop    es
  413e74:	mov    edx,0xbdfc3c0e
  413e79:	pop    es
  413e7a:	jmp    0xa78a7b99
  413e7f:	pop    es
  413e80:	add    BYTE PTR [esi-0x1be35f96],cl
  413e86:	call   0x3de5b923
  413e8b:	mov    cl,0xe5
  413e8d:	or     ebx,esp
  413e8f:	add    eax,esp
  413e91:	pushf  
  413e92:	ret    
  413e93:	pop    es
  413e94:	mov    bl,BYTE PTR [edx+0x4b011572]
  413e9a:	iret   
  413e9b:	pop    es
  413e9c:	aas    
  413e9d:	enter  0x3e7,0x3f
  413ea1:	enter  0xfa61,0xbc
  413ea5:	adc    esi,esi
  413ea7:	xchg   DWORD PTR [eax-0x37],ebx
  413eaa:	out    0x3,eax
  413eac:	push   0x4ce7d34f
  413eb1:	inc    edi
  413eb2:	dec    esi
  413eb3:	jmp    FWORD PTR [edx-0x33]
  413eb6:	xchg   bh,bh
  413eb8:	call   0xfebc2600
  413ebd:	out    dx,eax
  413ebe:	cs je  0x413ed7
  413ec1:	shl    BYTE PTR [ebx+0x6c8881b9],1
  413ec7:	rcpps  xmm7,XMMWORD PTR [edx]
  413eca:	push   0xffffff86
	...
  413ed8:	add    BYTE PTR [eax],al
  413eda:	add    BYTE PTR [esp+ecx*8],ah
  413edd:	out    0x3,eax
  413edf:	mov    eax,0xba7aecbd
  413ee4:	fsubr  st,st(3)
  413ee6:	add    edi,DWORD PTR [edi]
  413ee8:	push   ecx
  413ee9:	gs in  al,dx
  413eeb:	cmp    al,0xc8
  413eed:	add    cl,ch
  413eef:	jl     0x413efb
  413ef1:	xchg   ch,cl
  413ef3:	cmp    al,cl
  413ef5:	add    cl,dh
  413ef7:	cmp    al,0xc8
  413ef9:	add    BYTE PTR [eax-0x46],dh
  413efc:	rol    DWORD PTR [ecx+ebp*8],cl
  413eff:	cmp    al,0x4f
  413f01:	xchg   cl,dh
  413f03:	cmp    al,cl
  413f05:	add    BYTE PTR [ecx-0x2679b1a4],bl
  413f0b:	cmp    al,cl
  413f0d:	add    BYTE PTR [ebx+0x56],ah
  413f10:	mov    ds:0x4d41e188,al
  413f15:	adc    ch,ch
  413f17:	cmp    al,0xc8
  413f19:	pop    esi
  413f1a:	cmp    al,0xfd
  413f1c:	retf   0x6c00
  413f1f:	dec    ecx
  413f20:	mov    bh,0xb8
  413f22:	push   0x73
  413f24:	inc    edx
  413f25:	push   DWORD PTR [esi+0x18]
  413f28:	mov    DWORD PTR [eax],0x7afbfe9
  413f2e:	cld    
  413f2f:	sub    ecx,DWORD PTR [esi-0x7a]
  413f32:	fnstcw WORD PTR [eax]
  413f34:	enter  0x7000,0xc2
  413f38:	fiadd  DWORD PTR [ecx+ebp*8]
  413f3b:	cmp    al,0x88
  413f3d:	xchg   DWORD PTR [edi+0x0],eax
	...
  413f4b:	add    BYTE PTR [eax],al
  413f4d:	add    al,ch
  413f4f:	mov    BYTE PTR [eax],0xe9
  413f52:	jae    0x413fa1
  413f54:	adc    ch,ch
  413f56:	cmp    al,0xc8
  413f58:	mov    DWORD PTR [edi-0x2c],esp
  413f5b:	mov    BYTE PTR [eax],0xe9
  413f5e:	push   esi
  413f5f:	rol    DWORD PTR [edx],cl
  413f61:	sbb    eax,DWORD PTR [edx+0x9]
  413f64:	mov    cl,bh
  413f66:	inc    ebx
  413f67:	push   edx
  413f68:	sbb    al,0xe5
  413f6a:	cmp    al,0xc8
  413f6c:	jae    0x413f5e
  413f6e:	xor    eax,0x3ce5104d
  413f73:	enter  0x87,0x18
  413f77:	das    
  413f78:	add    DWORD PTR [eax],eax
  413f7a:	xchg   esi,eax
  413f7b:	push   es
  413f7c:	mov    BYTE PTR [esi+0xca72],ch
  413f82:	pop    ds
  413f83:	dec    ebp
  413f84:	or     eax,0x89c69604
  413f89:	xchg   BYTE PTR [esi],bh
  413f8b:	rol    BYTE PTR [eax],1
  413f8d:	add    ah,bl
  413f8f:	cmp    edi,edi
  413f91:	rol    DWORD PTR [eax+0x57108585],1
  413f97:	les    ebx,FWORD PTR [ecx]
  413f99:	add    al,0x56
  413f9b:	(bad)  
  413f9c:	jae    0x413fb7
  413f9e:	fisttp QWORD PTR [ecx+0xd]
  413fa1:	add    al,0x66
  413fa3:	mov    BYTE PTR [edi+0xd03e86],0x0
  413faa:	push   ss
  413fab:	mov    edi,0xc62a1cab
  413fb0:	add    BYTE PTR [ecx+0x0],cl
	...
  413fbe:	add    BYTE PTR [eax],al
  413fc0:	add    BYTE PTR [eax+0x1600013c],bl
  413fc6:	rol    DWORD PTR [ebx+0xc61a18],0x8a
  413fcd:	push   ds
  413fce:	enter  0xfec7,0xe7
  413fd2:	mov    edi,0xc44b23d6
  413fd7:	add    eax,0xe6028d52
  413fdc:	fst    DWORD PTR [edx+0x198bfed3]
  413fe2:	inc    edi
  413fe3:	fld    QWORD PTR [esi+eax*8]
  413fe6:	ror    bl,0xe8
  413fe9:	adc    bl,al
  413feb:	(bad)  
  413fec:	call   FWORD PTR [ebp+0x3]
  413fef:	and    ecx,0xffffffe4
  413ff2:	jbe    0x413f7e
  413ff4:	into   
  413ff5:	cs xchg ebx,eax
  413ff7:	stc    
  413ff8:	jmp    DWORD PTR [ecx]
  413ffa:	inc    edi
  413ffb:	out    0x1,al
  413ffd:	aas    
  413ffe:	cmp    BYTE PTR [eax-0x33],0xa7
  414002:	fwait
  414003:	adc    dh,bh
  414005:	test   al,0x6a
  414007:	stos   DWORD PTR es:[edi],eax
  414008:	pop    esp
  414009:	jge    0x414042
  41400b:	add    DWORD PTR [ebx-0x71fdc57a],eax
  414011:	xor    ebp,DWORD PTR [ebx]
  414013:	add    DWORD PTR [eax],eax
  414015:	mov    edx,0x2674f998
  41401a:	mov    dh,0x83
  41401c:	cmovae ebp,DWORD PTR [edi]
  41401f:	add    DWORD PTR [ecx+0x537b9],ecx
	...
  414031:	add    BYTE PTR [eax],al
  414033:	add    BYTE PTR [edi],bh
  414035:	out    dx,eax
  414036:	jns    0x413fe5
  414038:	inc    ebx
  414039:	sub    eax,DWORD PTR [ecx]
  41403b:	add    dh,al
  41403d:	mov    cl,0xf1
  41403f:	add    edi,DWORD PTR [edi]
  414041:	das    
  414042:	js     0x413fc9
  414044:	daa    
  414045:	xor    eax,DWORD PTR [ecx]
  414047:	add    BYTE PTR [ebp+0x39d1ff3f],dh
  41404d:	ins    DWORD PTR es:[edi],dx
  41404e:	jns    0x41405f
  414050:	mov    eax,ds:0x2f3f03ed
  414056:	xchg   esi,eax
  414057:	sbb    BYTE PTR [eax+ebp*4+0x2f3f03f1],dh
  41405e:	jp     0x413fe5
  414060:	aaa    
  414061:	sub    eax,DWORD PTR [ecx]
  414063:	add    BYTE PTR [edi-0x48],bh
  414066:	pop    ebx
  414067:	sbb    edi,DWORD PTR [ebx]
  414069:	das    
  41406a:	add    DWORD PTR [ecx+0x53ec1],ecx
  414070:	aas    
  414071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414072:	adc    DWORD PTR [edi],0x43
  414075:	das    
  414076:	add    DWORD PTR [edx-0x2d0d2b1],ecx
  41407c:	std    
  41407d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41407e:	icebp  
  41407f:	add    cl,al
  414081:	adc    al,BYTE PTR ds:0x9cc83f00
  414087:	jmp    0xc83f:0x7f749b5
  41408e:	pusha  
  41408f:	test   DWORD PTR [eax-0x34],ecx
  414092:	out    0x3,eax
  414094:	dec    DWORD PTR [esi+0x55]
  414097:	out    dx,eax
	...
  4140a4:	add    BYTE PTR [eax],al
  4140a6:	add    BYTE PTR [eax+ecx*8],bh
  4140a9:	out    0x7a,eax
  4140ab:	ret    0xebd7
  4140ae:	add    edi,DWORD PTR [edi]
  4140b0:	dec    ebp
  4140b1:	gs jmp 0x4140f0
  4140b4:	enter  0x7de7,0x30
  4140b8:	(bad)  
  4140b9:	mov    ecx,0xf74f7e0a
  4140be:	add    al,0xc1
  4140c0:	jecxz  0x4140a5
  4140c2:	add    edi,DWORD PTR [edi]
  4140c4:	mov    ebx,0xd7ba7ee0
  4140c9:	jecxz  0x4140ce
  4140cb:	aas    
  4140cc:	dec    edi
  4140cd:	ins    DWORD PTR es:[edi],dx
  4140ce:	in     al,dx
  4140cf:	cmp    al,0xc8
  4140d1:	out    0xc3,eax
  4140d3:	mov    bh,0x71
  4140d5:	add    eax,DWORD PTR [eax]
  4140d7:	aas    
  4140d8:	enter  0x8270,0x48
  4140dc:	(bad)  
  4140dd:	out    0x3,eax
  4140df:	les    eax,FWORD PTR [esi-0x11]
  4140e2:	jmp    FWORD PTR [eax]
  4140e4:	inc    eax
  4140e5:	xchg   edi,eax
  4140e6:	in     al,0x3f
  4140e8:	dec    esi
  4140e9:	(bad)  
  4140eb:	sbb    BYTE PTR [eax-0x4],al
  4140ee:	in     al,dx
  4140ef:	lds    eax,FWORD PTR [esi-0x29]
  4140f2:	dec    DWORD PTR [eax]
  4140f4:	inc    eax
  4140f5:	jo     0x414079
  4140f7:	sub    ah,al
  4140f9:	out    0x3,eax
  4140fb:	jg     0x41414e
  4140fd:	test   eax,ebp
  4140ff:	cmp    al,0xc8
  414101:	out    0x7c,eax
  414103:	ret    0xebd8
  414106:	add    edi,DWORD PTR [edi]
  414108:	push   ebx
  414109:	gs in  al,dx
	...
  414117:	add    BYTE PTR [eax],al
  414119:	add    BYTE PTR [eax+ecx*8],bh
  41411c:	add    cl,ch
  41411e:	or     al,0xdf
  414120:	call   FWORD PTR [esi-0x29]
  414123:	retf   
  414124:	add    cl,ch
  414126:	scas   eax,DWORD PTR es:[edi]
  414127:	loopne 0x4140b2
  414129:	addr16 mov bl,0xcb
  41412c:	add    cl,ch
  41412e:	xor    eax,DWORD PTR [ebp+0x18]
  414131:	in     eax,0x3c
  414133:	enter  0x7040,0x5
  414137:	jecxz  0x41413d
  414139:	jmp    0xd9c7927a
  41413e:	nop
  41413f:	aas    
  414140:	std    
  414141:	bound  edi,QWORD PTR [ebp+0x3ce904d7]
  414147:	sbb    BYTE PTR [eax],ah
  414149:	call   0xe9462444
  41414e:	cmp    al,0xb5
  414150:	pop    ss
  414151:	bound  edi,QWORD PTR [esi+0x3ce904cf]
  414157:	push   ecx
  414158:	xchg   cl,ah
  41415a:	pop    eax
  41415b:	aas    
  41415c:	std    
  41415d:	sub    edx,edx
  41415f:	ins    BYTE PTR es:[edi],dx
  414160:	sbb    al,0xe5
  414162:	cmp    al,0xc8
  414164:	xchg   DWORD PTR [edi+0x4c],ebp
  414167:	retf   
  414168:	add    cl,ch
  41416a:	mov    ecx,0x3ced1875
  41416f:	enter  0xc7d0,0xd6
  414173:	fwait
  414174:	ret    0x3cf1
  414177:	push   ebx
  414178:	inc    esp
  414179:	lds    ebx,FWORD PTR [eax]
  41417b:	xchg   ebp,eax
  41417c:	push   ebp
  41417d:	bound  eax,QWORD PTR [eax]
	...
  41418b:	add    BYTE PTR [eax],al
  41418d:	mov    eax,0x336210ea
  414192:	cld    
  414193:	sub    cl,0x3c
  414196:	enter  0xfd71,0xc1
  41419a:	cmp    eax,0x1edda04
  41419f:	xchg   DWORD PTR ds:0xc83f,eax
  4141a5:	mov    ds:0xddd8f66e,al
  4141aa:	mov    al,BYTE PTR [edx-0x7d8e1f20]
  4141b0:	shl    bl,0x70
  4141b3:	mov    edi,0x830dd608
  4141b8:	and    al,0xa2
  4141ba:	retf   0x7400
  4141bd:	mov    ecx,DWORD PTR [edi]
  4141bf:	jge    0x4141c1
  4141c1:	xchg   esi,eax
  4141c2:	retf   0x571
  4141c5:	adc    eax,0x76eaffe2
  4141ca:	paddw  mm0,QWORD PTR [esi+eiz*4]
  4141ce:	retf   0x172
  4141d1:	test   eax,0x967cfd0f
  4141d6:	retf   0x172
  4141d9:	sub    DWORD PTR [ebx+0x453508e5],ecx
  4141df:	mov    ebp,0x23dc2603
  4141e4:	cli    
  4141e5:	jns    0x4141b7
  4141e7:	push   esi
  4141e8:	mov    ebp,DWORD PTR [eax+0x6ae8d5bc]
  4141ee:	int3   
  4141ef:	(bad)  
  4141f0:	inc    DWORD PTR [eax]
	...
  4141fe:	add    BYTE PTR [eax],al
  414200:	jmp    0x414209
  414202:	adc    eax,0x5b70fd0a
  414207:	ret    0xca2e
  41420a:	push   ebp
  41420b:	call   0x400e2a
  414210:	pop    ecx
  414211:	inc    ebx
  414212:	mov    ebp,0x5865804
  414217:	add    BYTE PTR ds:0x1e2459bb,dh
  41421d:	outs   dx,DWORD PTR ds:[esi]
  41421e:	push   ebx
  41421f:	mov    eax,DWORD PTR [edi+0x1228bb43]
  414225:	retf   0x0
  414228:	mov    cl,0x40
  41422a:	sbb    DWORD PTR [ebx],0x1303f
  414230:	mov    esi,0xe0ff849a
  414235:	das    
  414236:	xchg   esp,eax
  414237:	inc    eax
  414238:	mov    esp,0x3b17dd7b
  41423d:	or     bl,0xe7
  414240:	adc    dl,bh
  414242:	pop    es
  414243:	(bad)  
  414244:	mov    ah,0xf5
  414246:	sbb    al,0x2f
  414248:	mov    ah,0xde
  41424a:	pop    es
  41424b:	mov    al,BYTE PTR [ecx-0x5706f139]
  414251:	into   
  414252:	jle    0x414297
  414254:	pop    ebx
  414255:	daa    
  414256:	jl     0x4141ed
  414258:	das    
  414259:	and    eax,DWORD PTR [ecx]
  41425b:	add    ch,al
  41425d:	jmp    0xc106:0xe83d00e0
	...
  414270:	add    BYTE PTR [eax],al
  414272:	add    al,ah
  414274:	mov    dh,0x3
  414276:	inc    ecx
  414278:	aas    
  414279:	std    
  41427a:	push   DWORD PTR [eax-0x58]
  41427d:	and    eax,DWORD PTR [bp+di+0x2f]
  414281:	add    DWORD PTR [esi+0x2],ebx
  414284:	jmp    0xfe38:0xb23f0746
  41428b:	ds mov ch,0xe5
  41428e:	add    edi,DWORD PTR [edi]
  414290:	das    
  414291:	jbe    0x414301
  414293:	ss fsub st(1),st
  414296:	mov    al,cl
  414298:	ds std 
  41429a:	push   DWORD PTR [eax]
  41429c:	test   al,0x7f
  41429e:	pop    ss
  41429f:	inc    ebx
  4142a0:	das    
  4142a1:	add    DWORD PTR [eax-0x4a],eax
  4142a4:	xchg   esp,eax
  4142a5:	in     eax,0x3
  4142a7:	aas    
  4142a8:	das    
  4142a9:	jp     0x414230
  4142ab:	das    
  4142ac:	sub    eax,DWORD PTR [ecx]
  4142ae:	add    BYTE PTR [esp+eiz*4-0x37c0fc17],dh
  4142b5:	out    0x7d,eax
  4142b7:	inc    eax
  4142b8:	retf   0x930
  4142bb:	dec    DWORD PTR [edi-0x21]
  4142be:	add    ch,BYTE PTR [ecx+0x3f03e3db]
  4142c4:	mov    bl,0xe0
  4142c6:	jl     0x41428a
  4142c8:	xlat   BYTE PTR ds:[ebx]
  4142c9:	jecxz  0x4142ce
  4142cb:	aas    
  4142cc:	dec    edi
  4142cd:	ins    DWORD PTR es:[edi],dx
  4142ce:	jmp    0x41430c
  4142d0:	enter  0xc3e7,0xb7
  4142d4:	ins    DWORD PTR es:[edi],dx
  4142d5:	add    eax,DWORD PTR [eax]
	...
  4142e3:	add    BYTE PTR [eax],al
  4142e5:	add    BYTE PTR [edi],bh
  4142e7:	enter  0x8170,0x40
  4142eb:	(bad)  
  4142ec:	out    0x3,eax
  4142ee:	mov    ah,0x45
  4142f0:	out    dx,eax
  4142f1:	jmp    DWORD PTR [eax-0x3a1ce8c4]
  4142f7:	sbb    BYTE PTR [eax],ch
  4142f9:	sbb    eax,0x5294938
  4142fe:	in     eax,dx
  4142ff:	push   eax
  414300:	sbb    eax,0xe641771b
  414305:	pop    es
  414306:	lds    eax,FWORD PTR [ebp-0x9]
  414309:	push   DWORD PTR [eax+0x3c]
  41430c:	pop    edi
  41430d:	in     al,dx
  41430e:	mov    al,0xc6
  414310:	out    0x3,eax
  414312:	aas    
  414313:	(bad)  
  414314:	ins    DWORD PTR es:[edi],dx
  414315:	hlt    
  414316:	cmp    al,0xc8
  414318:	out    0x7c,eax
  41431a:	mov    dl,0xe3
  41431c:	jmp    0x414321
  41431e:	aas    
  41431f:	inc    edi
  414320:	mov    dl,0x84
  414322:	inc    eax
  414323:	cmp    al,0xe7
  414325:	xchg   edx,eax
  414326:	push   eax
  414327:	inc    edi
  414328:	or     esp,eax
  41432a:	dec    eax
  41432b:	(bad)  
  41432c:	bound  edi,QWORD PTR [eax+0x7b38e05c]
  414332:	repnz xor BYTE PTR [esi+0xa],bl
  414336:	sbb    DWORD PTR [esi+ebx*1],edi
  414339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41433a:	jae    0x4142db
  41433c:	add    BYTE PTR [ebx+0x72803c0b],ch
  414342:	cmp    eax,ebp
  414344:	add    cl,ch
  414346:	into   
  414347:	(bad)  
  414348:	daa    
  414349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  414356:	add    BYTE PTR [eax],al
  414358:	add    BYTE PTR [eax],dl
  41435a:	aam    0x7f
  41435c:	push   edx
  41435d:	inc    ebx
  41435e:	mov    ebp,0xc7cee900
  414363:	daa    
  414364:	lods   eax,DWORD PTR ds:[esi]
  414365:	clc    
  414366:	ror    DWORD PTR [ecx+0x4fd3f0ad],cl
  41436c:	bound  edx,QWORD PTR [ecx]
  41436e:	and    ebp,DWORD PTR [ebx+esi*1+0x38]
  414372:	cmp    bl,BYTE PTR [ebp-0x39]
  414375:	out    0x9e,eax
  414377:	ret    0x3cf1
  41437a:	add    eax,DWORD PTR [esi-0x2c4573f]
  414380:	call   0x68420bc1
  414385:	inc    esp
  414386:	mov    ebx,0xb73ce900
  41438b:	inc    edi
  41438c:	push   0xffffffb7
  41438e:	out    0x18,eax
  414390:	in     eax,0xad
  414392:	mov    DWORD PTR [ecx],edi
  414394:	xchg   DWORD PTR [eax-0x3f16ff39],ebx
  41439a:	add    ecx,ebp
  41439c:	jecxz  0x4143d4
  41439e:	cmp    bh,ch
  4143a0:	bound  ebp,QWORD PTR [edx]
  4143a2:	and    eax,DWORD PTR [ecx]
  4143a4:	ret    
  4143a5:	inc    ecx
  4143a6:	cmp    cl,BYTE PTR [ecx-0x8f3cb51]
  4143ac:	mov    dh,0x41
  4143ae:	push   ecx
  4143af:	inc    esp
  4143b0:	add    eax,0xf98e4e53
  4143b5:	cmp    BYTE PTR [ebx],bh
  4143b7:	std    
  4143b8:	jae    0x414427
  4143ba:	out    0xff,eax
  4143bc:	jmp    0x0:0x0
	...
  4143cb:	add    BYTE PTR [esi-0x37],ch
  4143ce:	ret    0xa32e
  4143d1:	enter  0xfd,0xa8
  4143d5:	aaa    
  4143d6:	add    DWORD PTR [eax],eax
  4143d8:	es mov esp,0xc71a249b
  4143de:	add    BYTE PTR [esi+0x33],bl
  4143e1:	outs   dx,DWORD PTR ds:[esi]
  4143e2:	mov    edi,0xce45e608
  4143e7:	jmp    edi
  4143e9:	test   BYTE PTR [ecx],bl
  4143eb:	add    al,0xd6
  4143ed:	(bad)  
  4143ee:	mov    ebp,DWORD PTR [edi-0x21]
  4143f1:	push   edi
  4143f2:	sbb    BYTE PTR [ebx+0x13768],cl
  4143f8:	out    0xbb,al
  4143fa:	sbb    DWORD PTR [eax],0xffffffda
  4143fd:	mov    BYTE PTR [eax],0x40
  414400:	pop    edi
  414401:	xchg   ebp,eax
  414402:	sbb    DWORD PTR [esi+eiz*4],eax
  414405:	mov    BYTE PTR [edi-0x2c5497a],0xff
  41440c:	sbb    eax,0x960415bd
  414411:	(bad)  
  414412:	mov    dl,BYTE PTR [eax]
  414414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414415:	clc    
  414416:	sti    
  414417:	ret    0x370e
  41441a:	add    BYTE PTR [esi-0x2c58e],bh
  414420:	or     ebp,DWORD PTR [edx+ecx*4]
  414423:	xchg   BYTE PTR [esi+0x3a],dh
  414426:	std    
  414427:	(bad)  
  414428:	out    dx,eax
  414429:	mov    ecx,0xc6560415
  41442e:	inc    eax
  41442f:	mov    DWORD PTR [eax],eax
	...
  41443d:	add    BYTE PTR [eax],al
  41443f:	loopne 0x414470
  414441:	add    DWORD PTR [eax],eax
  414443:	mov    bp,0x1083
  414447:	pop    edx
  414448:	mov    BYTE PTR [eax],0x8b
  41444b:	fsubr  DWORD PTR [ebx]
  41444d:	add    DWORD PTR [eax],eax
  41444f:	push   esi
  414450:	neg    BYTE PTR ds:0x128c03b
  414456:	add    BYTE PTR [esi],ah
  414458:	dec    edx
  414459:	outs   dx,DWORD PTR ds:[esi]
  41445a:	mov    edi,DWORD PTR [edi]
  41445c:	outs   dx,BYTE PTR ds:[esi]
  41445d:	inc    ecx
  41445e:	out    0x37,eax
  414460:	scas   al,BYTE PTR es:[edi]
  414461:	inc    esp
  414462:	add    ch,BYTE PTR [edi+0x57]
  414465:	outs   dx,BYTE PTR ds:[esi]
  414466:	clc    
  414467:	adc    BYTE PTR [ebx+0x2b2f8d77],bh
  41446d:	add    DWORD PTR [eax],eax
  41446f:	mov    bh,0x18
  414471:	dec    ecx
  414472:	add    BYTE PTR [edi],bh
  414474:	das    
  414475:	add    DWORD PTR [ecx],eax
  414477:	mov    ecx,0xe8fffd3f
  41447c:	test   al,0x66
  41447e:	and    edi,DWORD PTR [ebx]
  414480:	das    
  414481:	add    DWORD PTR [ecx+0x4afd4],eax
  414487:	aas    
  414488:	jle    0x414473
  41448a:	sbb    BYTE PTR [ebx-0x35],0xec
  41448e:	add    DWORD PTR [ebx+edx*2-0x49f2e823],esi
  414495:	ss out 0x1b,eax
  414498:	call   0x714a42a0
  41449d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41449e:	pop    edx
  41449f:	jge    0x4144c8
  4144a1:	add    DWORD PTR [ecx+0x0],eax
	...
  4144af:	add    BYTE PTR [eax],al
  4144b1:	add    BYTE PTR [edi+ebp*1-0x426f0002],dl
  4144b8:	std    
  4144b9:	sub    BYTE PTR [ebx],al
  4144bb:	or     ebp,ecx
  4144bd:	add    BYTE PTR [edi+ebp*1-0x6287007a],0x99
  4144c5:	sub    bl,bh
  4144c7:	ret    0x8aec
  4144ca:	adc    ecx,ebx
  4144cc:	in     al,dx
  4144cd:	push   ecx
  4144ce:	mov    ah,0x59
  4144d0:	sbb    DWORD PTR [eax],edi
  4144d2:	push   esi
  4144d3:	add    al,BYTE PTR [esi+ebx*2]
  4144d6:	icebp  
  4144d7:	(bad)  [edi+0x22f37c1]
  4144dd:	mov    esi,0x12323
  4144e2:	mov    dl,0xc8
  4144e4:	add    BYTE PTR [ecx-0x46],bh
  4144e7:	xlat   BYTE PTR ds:[ebx]
  4144e8:	jecxz  0x4144ed
  4144ea:	aas    
  4144eb:	dec    edi
  4144ec:	ins    DWORD PTR es:[edi],dx
  4144ed:	jmp    0x41452b
  4144ef:	enter  0xc3e7,0xc7
  4144f3:	imul   esp,ebx,0x703910ff
  4144f9:	jge    0x414533
  4144fb:	(bad)  
  4144fc:	out    0x3,eax
  4144fe:	mov    ah,0x41
  414500:	iret   
  414501:	(bad)  
  414502:	clc    
  414503:	cmp    BYTE PTR [edi],dh
  414505:	jecxz  0x414546
  414507:	jp     0x414504
  414509:	(bad)  
  41450a:	call   0xb62c2147
  41450f:	inc    ecx
  414510:	idiv   edi
  414512:	fdivr  DWORD PTR [eax]
  414514:	jo     0x414593
	...
  414522:	add    BYTE PTR [eax],al
  414524:	add    BYTE PTR [eax],ch
  414526:	(bad)  
  414527:	out    0x3,eax
  414529:	jg     0x41457a
  41452b:	test   edi,esp
  41452d:	cmp    al,0xc8
  41452f:	out    0x7a,eax
  414531:	ret    0xebd7
  414534:	add    edi,DWORD PTR [edi]
  414536:	dec    ebp
  414537:	gs jmp 0x414576
  41453a:	enter  0x33e7,0x40
  41453e:	dec    ebp
  41453f:	mov    bl,0xdf
  414541:	xor    BYTE PTR [esi+0x13983572],dl
  414547:	inc    DWORD PTR [ebx]
  414549:	mov    DWORD PTR [eax+0x5e5a695],ebx
  41454f:	fild   WORD PTR [ebx]
  414551:	les    eax,FWORD PTR [ebx+0x57c4080b]
  414557:	out    0x6b,eax
  414559:	push   0x3b951238
  41455e:	(bad)  
  41455f:	out    0x3,eax
  414561:	rcr    esi,1
  414563:	jb     0x4144f2
  414565:	inc    ebx
  414566:	(bad)  
  414567:	out    0x3,eax
  414569:	push   es
  41456a:	pop    es
  41456b:	add    BYTE PTR [edi],bh
  41456d:	ss out dx,eax
  41456f:	mov    edi,0x29c847ab
  414574:	test   al,0x46
  414576:	enter  0xe868,0x3c
  41457a:	or     al,BYTE PTR [ecx+ebp*8]
  41457d:	imul   ecx,DWORD PTR [eax],0x493ce5c2
  414583:	in     al,dx
  414584:	fldcw  WORD PTR [ecx-0x65]
  414587:	mov    DWORD PTR ds:0x0,ecx
	...
  414595:	add    BYTE PTR [eax],al
  414597:	add    BYTE PTR [edi-0x18],dl
  41459a:	push   esi
  41459b:	mov    edx,0x16ef41e1
  4145a0:	retf   0x2494
  4145a3:	stc    
  4145a4:	ret    
  4145a5:	xchg   esp,eax
  4145a6:	and    al,0x1
  4145a8:	sub    ah,BYTE PTR [esi+0x8]
  4145ab:	in     eax,dx
  4145ac:	cmp    al,0xc8
  4145ae:	or     eax,0xc8a06a
  4145b3:	jmp    0x85cd0799
  4145b8:	pop    ss
  4145b9:	enter  0xe900,0x3c
  4145bd:	inc    ebx
  4145be:	fs add eax,0xed864143
  4145c4:	cmp    al,cl
  4145c6:	add    BYTE PTR [ebx+edi*4-0x38],ch
  4145ca:	push   0xc8f13ce8
  4145cf:	xchg   edi,eax
  4145d0:	xor    eax,0x38f58e41
  4145d5:	enter  0xc200,0x83
  4145d9:	mov    esi,0x217bc204
  4145de:	or     edx,eax
  4145e0:	or     ebx,0x0
  4145e3:	push   ecx
  4145e4:	cmp    cl,al
  4145e6:	jmp    0x894977d6
  4145eb:	addr16 xor al,0xcc
  4145ee:	add    cl,ch
  4145f0:	sub    eax,0x49000f7e
  4145f5:	jno    0x41463c
  4145f7:	add    ebp,ecx
  4145f9:	sahf   
  4145fa:	xchg   esi,eax
  4145fb:	add    al,0x0
	...
  414609:	add    BYTE PTR [eax],al
  41460b:	ffree  st(6)
  41460d:	mov    cl,BYTE PTR [ebx-0x78f3bbd8]
  414613:	lods   eax,DWORD PTR ds:[esi]
  414614:	inc    ecx
  414615:	or     BYTE PTR [esi+edx*1],al
  414618:	retf   
  414619:	or     esi,DWORD PTR [esi+0x40b6da26]
  41461f:	daa    
  414620:	inc    esi
  414621:	dec    esp
  414622:	xchg   esi,eax
  414623:	and    al,BYTE PTR [esi-0x6a]
  414626:	add    al,0x22
  414628:	retf   
  414629:	add    BYTE PTR [ecx+0x1b54be2],cl
  41462f:	out    0xca,al
  414631:	add    BYTE PTR [ecx],al
  414633:	push   0xd60004cf
  414638:	retf   
  414639:	mov    cs,WORD PTR [eax]
  41463b:	ror    dl,cl
  41463d:	add    BYTE PTR [ebx+0x4cf60],cl
  414643:	out    0x45,al
  414645:	enter  0x582b,0xc7
  414649:	add    al,0x0
  41464b:	(bad)  
  41464c:	dec    ebx
  41464d:	cmc    
  41464e:	add    BYTE PTR [esi-0x35],bh
  414651:	add    BYTE PTR [esi-0x5f],dh
  414654:	add    BYTE PTR [ebp+0xce9a86],0x0
  41465b:	(bad)  
  41465c:	js     0x414666
  41465e:	add    al,0xa6
  414660:	retf   0x820b
  414663:	lods   al,BYTE PTR ds:[esi]
  414664:	leave  
  414665:	(bad)  
  414666:	dec    DWORD PTR ds:0x4c30248f
  41466c:	retf   
  41466d:	arpl   WORD PTR [ecx],ax
	...
  41467b:	add    BYTE PTR [eax],al
  41467d:	add    BYTE PTR [esi-0xb],ah
  414680:	ret    0x6076
  414683:	inc    ecx
  414684:	push   esp
  414685:	and    al,0x46
  414687:	and    eax,0x193f8305
  41468c:	add    DWORD PTR ds:0x16ac1,ecx
  414692:	aas    
  414693:	ds mov bh,0x43
  414696:	aas    
  414697:	es mov bh,0x4b
  41469a:	ds stos BYTE PTR es:[edi],al
  41469c:	dec    eax
  41469d:	xchg   BYTE PTR [ebx-0x56],al
  4146a0:	inc    eax
  4146a1:	mov    BYTE PTR [edx+ebp*2+0xf],dh
  4146a5:	test   ah,ch
  4146a7:	and    BYTE PTR [ecx],al
  4146a9:	add    BYTE PTR [ebp+ebp*4+0x1f3f0424],dh
  4146b0:	mov    es,WORD PTR [eax+eax*2]
  4146b3:	dec    ax
  4146b5:	and    al,0x2b
  4146b7:	pop    ds
  4146b8:	or     DWORD PTR [eax],eax
  4146ba:	aas    
  4146bb:	jp     0x414683
  4146bd:	jb     0x4146f4
  4146bf:	stos   BYTE PTR es:[edi],al
  4146c0:	(bad)  
  4146c1:	cmp    esp,esi
  4146c3:	adc    esi,DWORD PTR ds:0x691fc08b
  4146c9:	jmp    eax
  4146cb:	fimul  DWORD PTR [edx+0x11f4304]
  4146d1:	jbe    0x41470a
  4146d3:	mov    edx,0x1f430c8a
  4146d8:	add    DWORD PTR [ecx],edi
  4146da:	(bad)  
  4146db:	jne    0x4146e2
  4146dd:	sub    DWORD PTR [edi+0x29108a],esi
	...
  4146ef:	add    BYTE PTR [eax],al
  4146f1:	mov    bh,0xa0
  4146f3:	mov    DWORD PTR [eax],0xe9012017
  4146f9:	cmp    eax,0x418a0012
  4146fe:	stos   BYTE PTR es:[edi],al
  4146ff:	inc    eax
  414700:	mov    eax,0x391023c2
  414705:	xor    BYTE PTR [edx+0x2eb37c9],0x2d
  41470c:	jbe    0x414751
  41470e:	test   al,0x58
  414710:	and    al,0x23
  414712:	enter  0xfd22,0x3a
  414716:	dec    esp
  414717:	cmp    DWORD PTR [ebx],eax
  414719:	aas    
  41471a:	enter  0x9c64,0x3f
  41471e:	enter  0x3e7,0xc6
  414722:	add    edx,DWORD PTR [edx]
  414724:	int3   
  414725:	rol    BYTE PTR [ebx+eax*1+0xb840618],0x30
  41472d:	dec    edx
  41472e:	dec    ebp
  41472f:	icebp  
  414730:	add    bh,BYTE PTR [edi]
  414732:	enter  0x4f72,0x63
  414736:	fdiv   DWORD PTR [ecx+0x17]
  414739:	and    bh,ch
  41473b:	cmp    ecx,DWORD PTR [edi]
  41473d:	aas    
  41473e:	inc    ecx
  41473f:	sbb    ebp,DWORD PTR [eax]
  414741:	sub    esi,DWORD PTR [ecx-0x17]
  414744:	add    edi,DWORD PTR [edi]
  414746:	enter  0xff3,0x46
  41474a:	inc    esi
  41474b:	retf   
  41474c:	pop    es
  41474d:	aas    
  41474e:	enter  0x86de,0x5
  414752:	enter  0x3e7,0x0
	...
  414762:	add    BYTE PTR [eax],al
  414764:	mov    dh,0x9b
  414766:	add    esi,DWORD PTR [esi+eiz*1]
  414769:	adc    bl,dl
  41476b:	and    al,ah
  41476d:	sub    cl,0x8c
  414770:	out    0xe0,eax
  414772:	shl    DWORD PTR [edi],cl
  414774:	pop    ss
  414775:	inc    edx
  414776:	mov    ds:0xe8f23f0e,eax
  41477b:	jbe    0x4147be
  41477d:	mov    DWORD PTR [eax+0x19b9953c],ebp
  414783:	mov    ebx,?
  414785:	jmp    0x41477a
  414787:	mov    WORD PTR [ebx],ss
  414789:	in     al,dx
  41478a:	mov    edi,0x63c4753c
  41478f:	loop   0x4147d0
  414791:	enter  0x3ce7,0xeb
  414795:	jmp    0x41476e
  414797:	jns    0x414793
  414799:	cwde   
  41479a:	add    BYTE PTR [eax+0x3be805cb],bl
  4147a0:	jb     0x4147d4
  4147a2:	std    
  4147a3:	jb     0x4147b4
  4147a5:	in     al,dx
  4147a6:	adc    BYTE PTR [edx+0x7],dh
  4147a9:	in     al,dx
  4147aa:	sbb    BYTE PTR [eax],bh
  4147ac:	in     eax,dx
  4147ad:	ds into 
  4147af:	bound  esp,QWORD PTR [ebx+0x1f]
  4147b2:	popf   
  4147b3:	ret    
  4147b4:	dec    eax
  4147b5:	xor    ch,BYTE PTR [ecx]
  4147b7:	shl    DWORD PTR [ebx+eax*4+0x1f3ddd24],1
  4147be:	mov    eax,0x4e0d2f1e
  4147c3:	sahf   
  4147c4:	cs inc edx
  4147c6:	ins    BYTE PTR es:[edi],dx
  4147c7:	lds    eax,FWORD PTR [eax]
	...
  4147d5:	add    BYTE PTR [eax],al
  4147d7:	push   esp
  4147d8:	jae    0x4147d4
  4147da:	jmp    0x4147a1
  4147dc:	push   es
  4147dd:	mov    edi,0xc2c93081
  4147e2:	jmp    0xbae4:0xc210ec80
  4147e9:	push   es
  4147ea:	pusha  
  4147eb:	(bad)  
  4147ec:	in     al,dx
  4147ed:	sbb    BYTE PTR [edx+0xd8ef185],al
  4147f3:	aaa    
  4147f4:	enter  0xd400,0x7a
  4147f8:	cdq    
  4147f9:	dec    edi
  4147fa:	bound  ecx,QWORD PTR [ecx]
  4147fc:	and    DWORD PTR [ecx+0x53],esp
  4147ff:	shl    BYTE PTR ds:0xd8209d89,1
  414805:	mov    DWORD PTR [ecx-0x4c],edx
  414808:	mov    WORD PTR [ecx+edx*8],fs
  41480b:	push   cs
  41480c:	cwde   
  41480d:	mov    DWORD PTR [edi],ebx
  41480f:	mov    ds:0xa826fa98,eax
  414814:	inc    ecx
  414815:	enter  0x8fd2,0x41
  414819:	ins    BYTE PTR es:[edi],dx
  41481a:	int    0x64
  41481c:	jo     0x4147c7
  41481e:	inc    ebx
  41481f:	in     eax,0xde
  414821:	cmc    
  414822:	add    BYTE PTR [edi],ch
  414824:	aas    
  414825:	retf   0x2fc1
  414828:	sar    edi,cl
  41482a:	leave  
  41482b:	gs (bad) 
  41482d:	ss dec esp
  41482f:	jp     0x414808
  414831:	jb     0x41483f
  414833:	in     eax,dx
  414834:	call   0x1824:0x9aef1424
	...
  414847:	add    BYTE PTR [eax],al
  414849:	add    bh,bl
  41484b:	xchg   edx,eax
  41484c:	and    al,0x10
  41484e:	repz dec ecx
  414850:	add    BYTE PTR [eax+0x57],ch
  414853:	(bad)  
  414854:	aaa    
  414855:	xchg   BYTE PTR [edx-0x35],bl
  414858:	add    BYTE PTR [eax],al
  41485a:	js     0x414830
  41485c:	xchg   DWORD PTR [esi+0xcb12],eax
  414862:	sbb    eax,0xd04762f
  414867:	das    
  414868:	out    0xc,eax
  41486a:	std    
  41486b:	cs jge 0x414835
  41486e:	es lahf 
  414870:	std    
  414871:	jmp    FWORD PTR [ebp-0x7200d038]
  414877:	lds    eax,FWORD PTR [edi-0x79c1d0c4]
  41487d:	and    dl,bl
  41487f:	mov    BYTE PTR [eax],0x3
  414882:	sbb    DWORD PTR [esi+0x6c],eax
  414885:	and    al,0xe2
  414887:	retf   
  414888:	je     0x41489c
  41488a:	imul   esi,DWORD PTR [edx],0xb
  41488d:	test   eax,eax
  41488f:	xor    al,0xfb
  414891:	jmp    FWORD PTR [ebp-0x41]
  414894:	test   DWORD PTR [edx+edi*1-0x2c],ecx
  414898:	test   DWORD PTR [edx+ecx*2-0x24],ebx
  41489c:	xchg   DWORD PTR [edx+edi*1-0x20],eax
  4148a0:	xchg   DWORD PTR [edx+edi*2-0x2a],edx
  4148a4:	xchg   DWORD PTR [edx+edi*2-0x32],ecx
  4148a8:	pop    ebx
  4148a9:	pop    esi
  4148aa:	aas    
  4148ab:	jl     0x414839
  4148ad:	push   eax
	...
  4148ba:	add    BYTE PTR [eax],al
  4148bc:	add    BYTE PTR [ebx],bh
  4148be:	test   al,0x9
  4148c0:	pop    ecx
  4148c1:	mov    esp,0x2fc211e4
  4148c6:	and    DWORD PTR [edx+0x7d9e37ec],eax
  4148cc:	and    al,0xfb
  4148ce:	and    BYTE PTR [ebx-0x77],dl
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	xchg   ebx,eax
  4148d3:	or     DWORD PTR [ecx],esi
  4148d5:	jg     0x4148c9
  4148d7:	jg     0x41489d
  4148d9:	pop    ss
  4148da:	pop    edi
  4148db:	sbb    al,0x0
  4148dd:	(bad)  
  4148de:	in     al,dx
  4148df:	sub    BYTE PTR [eax-0x3e],al
  4148e2:	pusha  
  4148e3:	jne    0x4148ef
  4148e5:	mov    esp,0xbc5efb78
  4148ea:	arpl   WORD PTR [edx+eax*8],di
  4148ed:	push   edi
  4148ee:	pop    ds
  4148ef:	mov    BYTE PTR [ebx+eiz*2-0x1d],cl
  4148f3:	test   edi,eax
  4148f5:	stos   DWORD PTR es:[edi],eax
  4148f6:	inc    ecx
  4148f7:	xchg   DWORD PTR [ebx+eiz*2-0x15],edx
  4148fb:	test   edx,edx
  4148fd:	mov    ecx,DWORD PTR [ecx-0x77]
  414900:	xchg   BYTE PTR [ebx],dh
  414902:	and    eax,DWORD PTR [ecx]
  414904:	add    BYTE PTR [edi-0x48],dh
  414907:	xchg   BYTE PTR [eax],ah
  414909:	inc    ebx
  41490a:	pop    ds
  41490b:	add    DWORD PTR [edi+0x50fc1],eax
  414911:	aas    
  414912:	addr16 out dx,al
  414914:	stc    
  414915:	rcl    DWORD PTR [esi+0x2f],1
  414918:	(bad)  
  414919:	jo     0x414945
  41491b:	mov    bl,0xb7
  41491d:	aas    
  41491e:	iret   
  41491f:	inc    ecx
	...
  414930:	out    dx,al
  414931:	fild   QWORD PTR [edi]
  414933:	lds    esi,FWORD PTR [eax]
  414935:	mov    ecx,0x6068ffb9
  41493a:	add    edi,ecx
  41493c:	jg     0x41496c
  41493e:	les    ecx,FWORD PTR ds:0x260c8f1
  414944:	outs   dx,DWORD PTR ds:[esi]
  414945:	xchg   edi,esp
  414947:	sar    BYTE PTR [edi-0xb],cl
  41494a:	cs or  eax,0x33ea6fc9
  414950:	dec    eax
  414951:	enter  0xc418,0xbe
  414955:	pop    es
  414956:	jecxz  0x414988
  414958:	add    BYTE PTR [edi-0x10],0x3
  41495c:	jo     0x41498f
  41495e:	out    0x71,eax
  414960:	or     BYTE PTR [ebx-0x59],0xc
  414964:	mov    esp,0x3f03f06d
  414969:	xchg   ebp,eax
  41496a:	pusha  
  41496b:	adc    eax,0x82e382c4
  414970:	jge    0x414942
  414972:	xchg   DWORD PTR [esi],eax
  414974:	aas    
  414975:	jno    0x41495e
  414977:	add    bh,BYTE PTR [edi]
  414979:	enter  0x5b64,0x30
  41497d:	pushf  
  41497e:	pusha  
  41497f:	adc    ch,BYTE PTR [esi+0x8]
  414982:	in     al,dx
  414983:	add    edi,DWORD PTR [edi]
  414985:	enter  0x88e7,0x60
  414989:	or     DWORD PTR [ebx],ebp
  41498b:	pop    es
  41498c:	aas    
  41498d:	enter  0x3e7,0x3f
  414991:	inc    ebp
  414992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414993:	pop    es
	...
  4149a0:	add    BYTE PTR [eax],al
  4149a2:	add    BYTE PTR [eax+ecx*8-0x1d],al
  4149a6:	add    edi,DWORD PTR [edi]
  4149a8:	mov    dh,0x83
  4149aa:	cmp    ch,0xc7
  4149ad:	jecxz  0x4149b2
  4149af:	aas    
  4149b0:	inc    ebp
  4149b1:	sub    BYTE PTR [edi],al
  4149b3:	push   ss
  4149b4:	sub    eax,0x41c6d5d4
  4149b9:	sti    
  4149ba:	pop    es
  4149bb:	aas    
  4149bc:	enter  0x1562,0xbe
  4149c0:	inc    DWORD PTR [ebp-0x76]
  4149c3:	mov    ecx,0x3f03e3eb
  4149c8:	aas    
  4149c9:	add    BYTE PTR [edi+0x44],ah
  4149cc:	int3   
  4149cd:	add    cl,ch
  4149cf:	mov    ch,0x51
  4149d1:	add    al,0xed
  4149d3:	cmp    al,0xc8
  4149d5:	xchg   DWORD PTR [edi+0x48],ebx
  4149d8:	int3   
  4149d9:	add    cl,ch
  4149db:	(bad)
  4149de:	pop    edi
  4149df:	xor    ah,cl
  4149e1:	add    cl,ch
  4149e3:	mov    bh,0x59
  4149e5:	adc    ch,ah
  4149e7:	cmp    al,0xc8
  4149e9:	xchg   DWORD PTR [edi],esi
  4149eb:	and    al,0xcc
  4149ed:	add    cl,ch
  4149ef:	mov    dh,0xc8
  4149f1:	xchg   DWORD PTR ds:0x2589d41f,ebp
  4149f7:	pop    ds
  4149f8:	pushf  
  4149f9:	mov    bl,ah
  4149fb:	cmp    edx,DWORD PTR [edx+0x14]
  4149fe:	in     eax,0x3c
  414a00:	enter  0x66ff,0x2b
  414a04:	int3   
  414a05:	add    cl,ch
	...
  414a13:	add    BYTE PTR [eax],al
  414a15:	add    BYTE PTR [edi+eax*2+0x474b0d7c],al
  414a1c:	jl     0x414a23
  414a1e:	dec    ebx
  414a1f:	inc    edi
  414a20:	sahf   
  414a21:	add    eax,0x7000c83f
  414a26:	ja     0x414a0c
  414a28:	pop    eax
  414a29:	sar    cl,cl
  414a2b:	mov    ebp,0xc83c9a86
  414a30:	add    BYTE PTR [eax+eiz*4-0x38],dh
  414a34:	add    cl,ch
  414a36:	cmp    al,0x41
  414a38:	inc    esp
  414a39:	int    0x88
  414a3b:	dec    ebx
  414a3c:	shl    ch,0x2a
  414a3f:	inc    ecx
  414a40:	dec    esp
  414a41:	or     eax,0xad87ef43
  414a46:	cmp    al,dl
  414a48:	test   BYTE PTR [eax],ah
  414a4a:	dec    esi
  414a4b:	jecxz  0x4149d6
  414a4d:	mov    ch,0x28
  414a4f:	test   al,0x89
  414a51:	add    BYTE PTR [eax-0x2c],cl
  414a54:	add    al,0x0
  414a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a57:	fimul  WORD PTR [esp-0x2a]
  414a5b:	xchg   ebp,eax
  414a5c:	xchg   DWORD PTR [esi-0x2d06e],edx
  414a62:	lea    edi,[edi+0x24]
  414a65:	push   eax
  414a66:	xlat   BYTE PTR ds:[ebx]
  414a67:	ds dec esp
  414a69:	and    al,0xca
  414a6b:	xchg   ebp,eax
  414a6c:	dec    ebp
  414a6d:	inc    DWORD PTR [esi+0x47]
  414a70:	les    edx,FWORD PTR [eax]
  414a72:	adc    eax,DWORD PTR [ebx+ecx*1]
  414a75:	test   bl,dh
  414a77:	leave  
	...
  414a88:	add    BYTE PTR [ebp-0xce3db69],ch
  414a8e:	aam    0x87
  414a90:	ins    BYTE PTR es:[edi],dx
  414a91:	xor    cl,BYTE PTR [eax-0x7bbdab79]
  414a97:	test   DWORD PTR [edx+eax*2-0x20],ebp
  414a9b:	test   DWORD PTR [edx+eax*2-0x24],edx
  414a9f:	out    0x1f,eax
  414aa1:	int    0xee
  414aa3:	and    al,0x54
  414aa5:	lods   eax,DWORD PTR ds:[esi]
  414aa6:	inc    ecx
  414aa7:	adc    al,0x4
  414aa9:	es retf 
  414aab:	daa    
  414aac:	ret    
  414aad:	inc    esi
  414aae:	xchg   edi,eax
  414aaf:	dec    ebp
  414ab0:	lea    esp,[edx-0x18]
  414ab3:	xor    al,0x52
  414ab5:	lea    eax,[ecx]
  414ab7:	call   0xfb72f83f
  414abc:	mov    ecx,DWORD PTR [edx]
  414abe:	iret   
  414abf:	sub    al,0x83
  414ac1:	mov    ebx,0x808c0bc4
  414ac6:	enter  0x0,0x5d
  414aca:	dec    ecx
  414acb:	and    al,0x4
  414acd:	(bad)  
  414ace:	retf   0x44c3
  414ad1:	xor    bl,al
  414ad3:	add    BYTE PTR [eax],al
  414ad5:	out    0xca,al
  414ad7:	xor    eax,0x2cbd3f44
  414adc:	jae    0x414b3b
  414ade:	mov    ds:0x9f31fffa,al
  414ae3:	push   ebx
  414ae4:	add    DWORD PTR [edi],edi
  414ae6:	and    DWORD PTR [esp+eax*2],edi
  414ae9:	pop    ebx
  414aea:	cmp    DWORD PTR [edx],ecx
  414aec:	test   BYTE PTR [eax],al
	...
  414afa:	add    BYTE PTR [eax],al
  414afc:	mul    DWORD PTR [ecx]
  414afe:	add    DWORD PTR [eax],eax
  414b00:	mov    ah,0x5c
  414b02:	sbb    eax,0xda19f010
  414b07:	push   ecx
  414b08:	out    dx,eax
  414b09:	test   eax,0xd49de8c7
  414b0e:	cli    
  414b0f:	std    
  414b10:	mov    ah,0x74
  414b12:	sbb    eax,0x8e501038
  414b17:	into   
  414b18:	(bad)  
  414b19:	fsubr  st,st(1)
  414b1b:	mov    ah,0x70
  414b1d:	sbb    eax,0x357c39f7
  414b22:	xchg   BYTE PTR [ebx],bl
  414b24:	cmp    al,0x21
  414b26:	add    DWORD PTR [ecx+0x3b3cbcfb],ecx
  414b2c:	aas    
  414b2d:	and    al,0x1
  414b2f:	add    bl,al
  414b31:	aaa    
  414b32:	test   ch,bh
  414b34:	cmp    eax,0x3c077d1e
  414b39:	pop    ds
  414b3a:	add    DWORD PTR [ebx],edi
  414b3c:	aas    
  414b3d:	fadd   QWORD PTR [eax+eax*1]
  414b40:	mov    ds:0x3cfd8438,eax
  414b45:	push   ds
  414b46:	jge    0x414b3f
  414b48:	cmp    eax,0x6b89011f
  414b4d:	add    ebx,DWORD PTR [ecx-0x77]
  414b50:	jnp    0x414b4d
  414b52:	dec    esp
  414b53:	mov    ecx,edx
  414b55:	adc    edi,ebp
  414b57:	push   eax
  414b59:	or     al,ah
  414b5b:	xchg   DWORD PTR [ebx+0x482103],eax
	...
  414b6d:	add    BYTE PTR [eax],al
  414b6f:	(bad)
  414b73:	fcomp  DWORD PTR [eax-0x7b3baa57]
  414b79:	or     ecx,DWORD PTR [eax+0x6f]
  414b7c:	inc    ecx
  414b7d:	sbb    eax,0x4632e3ec
  414b82:	stc    
  414b83:	(bad)  
  414b84:	jl     0x414b89
  414b86:	sub    al,0x68
  414b88:	jl     0x414b95
  414b8a:	inc    esp
  414b8b:	mov    ah,0x89
  414b8d:	call   0x425471c
  414b92:	dec    edi
  414b93:	sbb    ebp,edi
  414b95:	jb     0x414b6a
  414b97:	in     eax,dx
  414b98:	inc    eax
  414b99:	and    eax,0xe3503ec
  414b9e:	stc    
  414b9f:	mov    dh,0x7c
  414ba1:	retf   
  414ba2:	inc    ebx
  414ba3:	rol    BYTE PTR [ebx+eax*8-0x347b39e1],0x3f
  414bab:	seta   BYTE PTR [edx-0x36]
  414baf:	push   edi
  414bb0:	fstp   st(6)
  414bb2:	clc    
  414bb3:	pop    edx
  414bb4:	inc    ecx
  414bb5:	sub    esp,DWORD PTR [eax]
  414bb7:	sbb    esp,ecx
  414bb9:	lahf   
  414bba:	add    al,0x80
  414bbc:	jo     0x414bce
  414bbe:	mov    bl,BYTE PTR [esi-0x10]
  414bc1:	mov    esi,0x723208ea
  414bc6:	(bad)
  414bc9:	(bad)  
  414bca:	add    al,0xfd
  414bcc:	and    bh,dh
  414bce:	mov    WORD PTR [ebx-0x1c],?
  414bd1:	rcl    DWORD PTR [edx+0x0],cl
	...
  414be0:	add    BYTE PTR [eax],al
  414be2:	(bad)  
  414be3:	std    
  414be4:	mov    cs,WORD PTR [edx]
  414be6:	or     ch,BYTE PTR ds:0xe4738c96
  414bec:	and    ecx,DWORD PTR [ebp+0x202b40e7]
  414bf2:	jg     0x414b8e
  414bf4:	pop    ss
  414bf5:	lea    eax,[ecx]
  414bf7:	and    BYTE PTR [eax],al
  414bf9:	jg     0x414be9
  414bfb:	sub    bh,ch
  414bfd:	ret    0x3f04
  414c00:	shl    DWORD PTR [edx+0x70],0xe4
  414c04:	pop    eax
  414c05:	cmp    BYTE PTR [ebx+0x2ea0129],0x6d
  414c0c:	clc    
  414c0d:	jmp    0x414c4a
  414c0f:	test   BYTE PTR [ebp*4-0xe84df85],ah
  414c16:	jg     0x414b9b
  414c18:	and    al,0xdd
  414c1a:	cmp    eax,0x21e900c8
  414c1f:	sub    esi,DWORD PTR [esi-0x1f]
  414c22:	push   ebp
  414c23:	pushf  
  414c24:	and    al,0xa5
  414c26:	or     al,bh
  414c28:	mov    DWORD PTR [ebp-0x47ac1fd8],esp
  414c2e:	mov    bl,0xfd
  414c30:	out    0x47,eax
  414c32:	outs   dx,BYTE PTR ds:[esi]
  414c33:	sub    bh,ch
  414c35:	jb     0x414c37
  414c37:	in     al,0x44
  414c39:	bound  eax,QWORD PTR [esi+edi*1-0x66033abc]
  414c40:	push   eax
  414c41:	jb     0x414bc4
  414c43:	pop    ds
  414c44:	test   eax,0xd7
	...
  414c55:	dec    eax
  414c56:	sub    bh,BYTE PTR [ecx]
  414c58:	stos   BYTE PTR es:[edi],al
  414c59:	mov    ah,0x8b
  414c5b:	and    al,0x31
  414c5d:	(bad)  
  414c5e:	mov    edi,0xd45f2dc5
  414c63:	(bad)  
  414c64:	call   0xb6c514a5
  414c69:	scas   al,BYTE PTR es:[edi]
  414c6a:	jg     0x414ca3
  414c6c:	cmp    eax,0x2e7b845f
  414c71:	les    edi,FWORD PTR [edx]
  414c73:	adc    al,0xe5
  414c75:	cmp    al,0xc8
  414c77:	push   0xffffffe8
  414c79:	ins    DWORD PTR es:[edi],dx
  414c7a:	jnp    0x414c05
  414c7c:	lahf   
  414c7d:	adc    ecx,DWORD PTR [esi-0xf]
  414c80:	add    cl,al
  414c82:	xor    eax,DWORD PTR [edi-0x781405ac]
  414c88:	fcomp  DWORD PTR [ebp-0x78]
  414c8b:	and    al,0x40
  414c8d:	inc    esp
  414c8e:	xchg   esp,eax
  414c8f:	xchg   esi,ecx
  414c91:	outs   dx,BYTE PTR ds:[esi]
  414c92:	mov    eax,ds:0x3f71fff6
  414c97:	dec    esp
  414c98:	and    al,0x3e
  414c9a:	cdq    
  414c9b:	dec    ebp
  414c9c:	mov    esp,DWORD PTR [eax]
  414c9e:	inc    ecx
  414c9f:	pop    esp
  414ca0:	sbb    BYTE PTR [edi+0x71f65c1f],ah
  414ca6:	xor    esi,DWORD PTR [edi]
  414ca8:	fcomp  DWORD PTR ds:0xd0582490
  414cae:	rol    ebx,0x44
  414cb1:	mov    bh,BYTE PTR [ebx-0x385a0000]
  414cb7:	out    0xb,eax
	...
  414cc5:	add    BYTE PTR [eax],al
  414cc7:	add    BYTE PTR ds:0x961424b0,dl
  414ccd:	ret    0xce81
  414cd0:	mov    DWORD PTR gs:[eax],0xbc97383
  414cd7:	mov    ?,ebp
  414cd9:	les    eax,FWORD PTR [eax]
  414cdb:	add    ch,bl
  414cdd:	xchg   edi,eax
  414cde:	and    al,0x20
  414ce0:	int    0xac
  414ce2:	adc    al,0x4
  414ce4:	data16 (bad) 
  414ce6:	jg     0x414caa
  414ce8:	jo     0x414c83
  414cea:	jg     0x414caf
  414cec:	push   esp
  414ced:	xchg   esi,eax
  414cee:	jg     0x414cb0
  414cf0:	and    al,0x97
  414cf2:	mov    DWORD PTR [edx+edi*1-0x10],ecx
  414cf6:	dec    ebp
  414cf7:	mov    esp,eax
  414cf9:	push   ds
  414cfa:	nop
  414cfb:	stc    
  414cfc:	shl    DWORD PTR [ecx],1
  414cfe:	xchg   DWORD PTR [edx+ecx*1-0x9],eax
  414d02:	aaa    
  414d03:	inc    esp
  414d04:	cli    
  414d05:	fiadd  WORD PTR [edi+0x2cfd3f54]
  414d0b:	push   edx
  414d0c:	mov    ah,0x4a
  414d0e:	push   ecx
  414d0f:	jl     0x414d2d
  414d11:	pop    ecx
  414d12:	clc    
  414d13:	repz lock test eax,0xdcb4d88a
  414d1a:	and    BYTE PTR [eax],ch
  414d1c:	mov    dl,cl
  414d1e:	mov    esi,ecx
  414d20:	out    0x92,eax
  414d22:	lock std 
  414d24:	rcl    ch,1
  414d26:	rcl    DWORD PTR [edi+0x1027ebc],0x0
	...
  414d39:	add    BYTE PTR [eax],al
  414d3b:	std    
  414d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d3d:	leave  
  414d3e:	mov    edi,0x2aea1eb6
  414d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d44:	out    0xf0,al
  414d46:	std    
  414d47:	test   al,0xa5
  414d49:	(bad)  [ecx+0x532cc4fb]
  414d4f:	out    dx,eax
  414d50:	mov    ch,0xc3
  414d52:	call   0xfe3820db
  414d57:	mov    ah,0xe8
  414d59:	sub    cl,cl
  414d5b:	cmp    al,0xe8
  414d5d:	mov    ecx,0x23b59de7
  414d62:	cmc    
  414d63:	iretw  
  414d65:	test   DWORD PTR [ecx+0x1decdf75],0x448ae73c
  414d6f:	and    ecx,ebp
  414d71:	inc    edi
  414d73:	adc    al,0x18
  414d75:	jne    0x414d7f
  414d77:	sbb    ah,0x20
  414d7a:	adc    al,0x3e
  414d7c:	and    DWORD PTR [ecx],eax
  414d7e:	add    dl,al
  414d80:	add    ch,BYTE PTR [esi+0x28]
  414d83:	je     0x414de9
  414d85:	js     0x414dab
  414d87:	mov    ah,0xcb
  414d89:	and    BYTE PTR [eax],dh
  414d8b:	(bad)  
  414d8c:	int    0x87
  414d8e:	into   
  414d8f:	daa    
  414d90:	leave  
  414d91:	jne    0x414d82
  414d93:	adc    ch,BYTE PTR [edx]
  414d95:	jb     0x414d73
  414d97:	mov    dh,0x84
  414d99:	retf   
  414d9a:	sub    ebp,DWORD PTR [eax+ebx*4+0x62]
  414d9e:	mov    BYTE PTR [eax],0x0
	...
  414dad:	add    bh,ah
  414daf:	test   eax,0xedf2f57c
  414db4:	lahf   
  414db5:	add    eax,0x3eac6bb
  414dba:	aas    
  414dbb:	inc    ebp
  414dbc:	jmp    0x414ddd
  414dbe:	xor    ecx,eax
  414dc0:	idiv   BYTE PTR [esi-0x36]
  414dc3:	(bad)  
  414dc4:	out    0x3,eax
  414dc6:	mov    esi,0xb104ea2b
  414dcb:	adc    al,0xe7
  414dcd:	add    edi,DWORD PTR [edi]
  414dcf:	cmp    eax,0x3d5f1fb3
  414dd4:	xchg   ebx,eax
  414dd5:	pop    ds
  414dd6:	pop    es
  414dd7:	cmp    eax,0xc83b106d
  414ddc:	out    0x80,eax
  414dde:	fsubr  DWORD PTR [ebx]
  414de0:	mov    eax,0xb9c57d80
  414de5:	cmp    BYTE PTR [edi-0x3b],0xb7
  414de9:	xchg   bl,dh
  414deb:	jecxz  0x414db8
  414ded:	push   edx
  414dee:	(bad)  
  414def:	cli    
  414df0:	push   cs
  414df1:	mov    ebx,0x88fe2977
  414df6:	add    esp,esp
  414df8:	mov    bh,0x88
  414dfa:	or     esp,esp
  414dfc:	mov    bl,0x88
  414dfe:	sti    
  414dff:	jecxz  0x414e10
  414e01:	cmp    DWORD PTR [esi-0x6a],edi
  414e04:	jb     0x414dcb
  414e06:	out    dx,eax
  414e07:	stos   DWORD PTR es:[edi],eax
  414e08:	or     al,0xec
  414e0a:	sbb    esi,DWORD PTR [ebx]
  414e0c:	into   
  414e0d:	hlt    
  414e0e:	mov    WORD PTR [ebp+0xc572],ss
	...
  414e20:	add    BYTE PTR [eax+0x17280383],bh
  414e26:	rol    DWORD PTR [eax],1
  414e28:	mov    esp,0x1d892b2b
  414e2d:	pop    edi
  414e2e:	in     al,0x29
  414e30:	test   al,0xb5
  414e32:	inc    esi
  414e33:	loop   0x414e1f
  414e35:	aas    
  414e36:	push   es
  414e37:	mov    DWORD PTR [ecx-0x7dfdcf03],esp
  414e3d:	and    BYTE PTR [eax],ah
  414e3f:	std    
  414e40:	jge    0x414e2d
  414e42:	sub    dl,BYTE PTR [ebx+0x1a]
  414e45:	mov    dh,0xf9
  414e47:	xchg   BYTE PTR ds:0x7be8dc1f,ch
  414e4d:	call   0x4b44b7c
  414e52:	aas    
  414e53:	inc    esp
  414e54:	add    eax,0xeac8df1f
  414e59:	cmc    
  414e5a:	outs   dx,DWORD PTR ds:[esi]
  414e5b:	out    0x8b,eax
  414e5d:	(bad)  
  414e5e:	fprem1 
  414e60:	push   eax
  414e61:	lea    ebp,ds:0x207d3389
  414e67:	sbb    eax,0x443e76ea
  414e6c:	add    eax,0xe2c8c74f
  414e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e72:	lods   al,BYTE PTR ds:[esi]
  414e73:	or     BYTE PTR [esi],ah
  414e75:	dec    eax
  414e76:	in     al,0x14
  414e78:	call   0x644216b9
  414e7d:	jae    0x414e30
  414e7f:	sub    dl,al
  414e81:	mov    cl,0xab
  414e83:	and    al,0x72
	...
  414e91:	add    BYTE PTR [eax],al
  414e93:	add    al,bh
  414e95:	jecxz  0x414ec7
  414e97:	cdq    
  414e98:	push   cs
  414e99:	aas    
  414e9a:	into   
  414e9b:	add    DWORD PTR [ebp-0x2f1902cd],ecx
  414ea1:	jns    0x542165cc
  414ea7:	cmp    eax,eax
  414ea9:	stc    
  414eaa:	out    0x8b,eax
  414eac:	aaa    
  414ead:	es std 
  414eaf:	add    BYTE PTR ds:0x438c0b14,bh
  414eb5:	into   
  414eb6:	add    BYTE PTR [eax],al
  414eb8:	xchg   ebp,eax
  414eb9:	cwde   
  414eba:	and    al,0x14
  414ebc:	es retf 
  414ebe:	sbb    DWORD PTR [edx],0x8b00cc24
  414ec4:	dec    edx
  414ec5:	lock pop eax
  414ec7:	test   DWORD PTR [ecx-0x18947b35],ebp
  414ecd:	retf   
  414ece:	add    BYTE PTR [ebx-0x79f43247],al
  414ed4:	inc    esi
  414ed5:	int    0x0
  414ed7:	add    BYTE PTR [ebp-0x80],bl
  414eda:	and    al,0x54
  414edc:	pop    ebp
  414edd:	or     esp,DWORD PTR [edi]
  414edf:	retf   
  414ee0:	dec    ebx
  414ee1:	ror    BYTE PTR [edx],1
  414ee3:	cmp    esp,DWORD PTR [ecx]
  414ee5:	mov    ds:0x7c118b02,al
  414eea:	xchg   DWORD PTR [edx+eax*2-0x40],eax
  414eee:	daa    
  414eef:	(bad)  
  414ef1:	jnp    0x414e7c
  414ef3:	dec    esp
  414ef4:	inc    edx
  414ef5:	fmul   DWORD PTR [ebp-0x75]
	...
  414f04:	add    BYTE PTR [eax],al
  414f06:	add    BYTE PTR [eax-0x5b],bl
  414f09:	pop    esp
  414f0a:	and    al,0x42
  414f0c:	add    al,0xcc
  414f0e:	neg    DWORD PTR [ecx+0x1b]
  414f11:	xor    eax,0x72df827c
  414f16:	xor    al,0x1d
  414f18:	and    BYTE PTR [eax+esi*1],0xb1
  414f1c:	jge    0x414ea5
  414f1e:	into   
  414f1f:	dec    esi
  414f20:	fxtract 
  414f22:	jmp    FWORD PTR [ecx-0x5a]
  414f25:	fmul   DWORD PTR [ebx+0x5738ef92]
  414f2b:	mov    dh,0xa6
  414f2d:	into   
  414f2e:	call   0x3c6f5b
  414f33:	sbb    eax,0x3f5c870f
  414f38:	aad    0x18
  414f3a:	jle    0x414f8b
  414f3c:	stos   BYTE PTR es:[edi],al
  414f3d:	cmp    eax,0x559a6f24
  414f42:	and    al,0x73
  414f44:	cwde   
  414f45:	cmp    eax,0x55a86724
  414f4a:	and    al,0x5b
  414f4c:	stos   BYTE PTR es:[edi],al
  414f4d:	inc    ebp
  414f4e:	and    al,0x2f
  414f50:	out    0x55,al
  414f52:	push   eax
  414f53:	mov    ah,0x76
  414f55:	fldenv ds:0x89f23e0e
  414f5b:	mov    ecx,DWORD PTR ds:0x9a8e5529
  414f61:	mov    edi,0xec390789
  414f66:	icebp  
  414f67:	loopne 0x414f06
  414f69:	rol    DWORD PTR cs:[eax],0x0
	...
  414f79:	add    BYTE PTR [eax-0x7c],cl
  414f7c:	stos   BYTE PTR es:[edi],al
  414f7d:	add    BYTE PTR [edi],bh
  414f7f:	xor    DWORD PTR [esi+0x5c],edi
  414f82:	and    edi,DWORD PTR [ecx+0x351b9e2d]
  414f88:	add    DWORD PTR [eax],eax
  414f8a:	xor    bl,BYTE PTR [ecx+0x7e]
  414f8d:	push   esp
  414f8e:	pop    ebx
  414f8f:	add    eax,0x163447e
  414f94:	pop    edx
  414f95:	push   edx
  414f96:	rsm    
  414f98:	mov    edi,0xf2e08de8
  414f9d:	std    
  414f9e:	jmp    0x256c:0xb6ce7e61
  414fa5:	sub    al,0x97
  414fa7:	div    dh
  414fa9:	std    
  414faa:	js     0x414f55
  414fac:	cmp    eax,0xb9321b24
  414fb1:	mov    DWORD PTR [ebx+edi*1+0x14f38743],ecx
  414fb8:	sbb    DWORD PTR [edx-0x3c],edx
  414fbb:	(bad)  
  414fbc:	fnstenv [eax-0xe1938b4]
  414fc2:	mov    dh,0xff
  414fc4:	jno    0x41500e
  414fc6:	sbb    esp,eax
  414fc8:	ds push esp
  414fca:	(bad)  
  414fcb:	push   ss
  414fcc:	mov    edi,0xc6262ea3
  414fd1:	jge    0x414f6e
  414fd3:	in     al,dx
  414fd4:	or     eax,DWORD PTR ds:0x282b5207
  414fda:	arpl   cx,sp
  414fdc:	stos   BYTE PTR es:[edi],al
  414fdd:	jge    0x414fdf
	...
  414feb:	add    BYTE PTR [eax],al
  414fed:	jae    0x414fdb
  414fef:	aas    
  414ff0:	jb     0x414f72
  414ff2:	xor    ebx,esp
  414ff4:	jl     0x415059
  414ff6:	in     al,dx
  414ff7:	das    
  414ff8:	jge    0x414f7d
  414ffa:	in     al,dx
  414ffb:	iret   
  414ffc:	sub    al,0xb9
  414ffe:	in     al,dx
  414fff:	jmp    0x415004
  415001:	aas    
  415002:	fwait
  415003:	lock test BYTE PTR [ecx+0x3f03ebf0],ah
  41500a:	enter  0xcf3,0x14
  41500e:	enter  0x3ec,0x3f
  415012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415013:	in     al,0x84
  415015:	ret    0xdbca
  415018:	and    eax,0x2c03a438
  41501d:	aas    
  41501e:	mov    ds:0xcb2b03e7,eax
  415023:	push   0xfffffff1
  415025:	ds pushf 
  415027:	fidivr DWORD PTR [ebx+ecx*1-0x14]
  41502b:	out    dx,eax
  41502c:	pop    eax
  41502d:	add    BYTE PTR [ecx+0x35],dl
  415030:	fdivr  QWORD PTR [ecx+0x19]
  415033:	push   ds
  415034:	icebp  
  415035:	xchg   esi,eax
  415036:	fsub   DWORD PTR [edx+0x50]
  415039:	and    eax,DWORD PTR [eax-0x47e4b79e]
  41503f:	jb     0x415016
  415041:	push   ss
  415042:	std    
  415043:	cwde   
  415044:	push   ebx
  415045:	mov    dh,0x16
  415047:	add    BYTE PTR [ecx],al
  415049:	mov    eax,0x4feefd18
  41504e:	mov    WORD PTR [ecx+edi*8],fs
	...
  41505d:	add    BYTE PTR [eax],al
  41505f:	add    bl,al
  415061:	xor    edi,edi
  415063:	push   ebx
  415064:	push   ebp
  415065:	das    
  415066:	adc    ah,BYTE PTR [edx-0x70]
  415069:	in     al,dx
  41506a:	adc    BYTE PTR [ebx+esi*2+0x23],bl
  41506e:	dec    edi
  41506f:	sbb    ebp,DWORD PTR [edx+0x2c5be816]
  415075:	and    edi,ebp
  415077:	cli    
  415078:	cmova  edi,ebx
  41507b:	jmp    0xc83c:0xe97f533f
  415082:	mov    DWORD PTR [edi+0x28],esp
  415085:	int3   
  415086:	add    cl,ch
  415088:	xchg   ecx,eax
  415089:	ja     0x4150db
  41508b:	(bad)  
  41508c:	(bad)  
  41508d:	das    
  41508e:	push   ds
  41508f:	jns    0x415080
  415091:	and    cl,BYTE PTR [ecx+0x53f0172d]
  415097:	sbb    BYTE PTR [edx+0x16],bl
  41509a:	mov    DWORD PTR [ecx+0x66f217f4],edx
  4150a0:	iret   
  4150a1:	faddp  st(1),st
  4150a3:	fisub  WORD PTR [edi+ecx*2]
  4150a6:	inc    esp
  4150a7:	or     eax,0x586df5b
  4150ac:	inc    edi
  4150ad:	enter  0xbc00,0xa5
  4150b1:	inc    edi
  4150b2:	mov    esi,0xc83711
  4150b7:	jmp    0xe97cd9cc
  4150bc:	cmp    eax,ecx
  4150be:	add    BYTE PTR [ebp-0x1404b8bf],ah
	...
  4150d0:	add    BYTE PTR [eax],al
  4150d2:	add    BYTE PTR [eax],cl
  4150d4:	retf   
  4150d5:	cmp    ebp,ecx
  4150d7:	jmp    0x2ace51a3
  4150dc:	dec    edi
  4150dd:	pop    esp
  4150de:	add    BYTE PTR [edx-0x70],bh
  4150e1:	test   DWORD PTR [edx+edi*2-0x44],ebp
  4150e5:	sub    ebp,0x9687e8da
  4150eb:	push   0xffffffcc
  4150ed:	add    BYTE PTR [eax],al
  4150ef:	add    eax,0x6ece877a
  4150f4:	jmp    0xfffd:0x7511fff0
  4150fb:	es enter 0x85fd,0xa
  415100:	int3   
  415101:	add    BYTE PTR [eax],al
  415103:	dec    edi
  415104:	nop
  415105:	and    al,0x14
  415107:	pop    ebx
  415108:	sub    al,0x89
  41510a:	pop    esp
  41510b:	add    esi,DWORD PTR [ebx]
  41510d:	out    0x5a,eax
  41510f:	lea    edi,[eax+0x24]
  415112:	pop    eax
  415113:	lea    edx,[eax+0x7c3b2824]
  415119:	xchg   esi,ecx
  41511b:	mov    esi,0xc1ffefc7
  415120:	int    0xae
  415122:	adc    al,0xda
  415124:	mov    DWORD PTR [eax],0xfbb9328d
  41512a:	jmp    0x4150cf
  41512c:	sahf   
  41512d:	pop    esp
  41512e:	and    al,0xfe
  415130:	push   eax
  415131:	sti    
  415132:	jne    0x4150fc
  415134:	sahf   
  415135:	dec    esp
  415136:	and    al,0x0
	...
  415144:	add    BYTE PTR [eax],al
  415146:	ds lahf 
  415148:	xchg   esi,eax
  415149:	adc    al,0x9a
  41514b:	mov    DWORD PTR [eax],0x3ceb9289
  415151:	mov    edx,edx
  415153:	jmp    0x41518d
  415155:	mov    DWORD PTR [edx-0x2b8ef15],edi
  41515b:	mov    ecx,0xc6aaff81
  415160:	inc    ebx
  415161:	jmp    0x4150f4
  415163:	sahf   
  415164:	xchg   BYTE PTR [edi+edi*1],dl
  415167:	xor    eax,0x610c0001
  41516c:	jp     0x41513c
  41516e:	push   edi
  41516f:	jecxz  0x41514e
  415171:	std    
  415172:	pusha  
  415173:	and    al,BYTE PTR [ebx+0x1314314]
  415179:	adc    DWORD PTR [eax+0x2],0xffffff85
  41517d:	jmp    0x394282c1
  415182:	ret    
  415183:	int3   
  415184:	xor    BYTE PTR ds:0x10fc2,cl
  41518a:	aas    
  41518b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41518c:	push   ebp
  41518d:	and    al,0x93
  41518f:	xchg   esi,eax
  415190:	mov    esi,0x5b3f429
  415195:	or     dl,BYTE PTR [edx+esi*2+0x73]
  415199:	add    al,ah
  41519b:	imul   edx,DWORD PTR [ecx-0x77],0x89151583
  4151a2:	adc    al,0xf6
  4151a4:	fst    QWORD PTR [ebx-0x71]
  4151a7:	lods   al,BYTE PTR ds:[esi]
  4151a8:	cmp    eax,0x24
	...
  4151b9:	xor    esp,eax
  4151bb:	jns    0x41518b
  4151bd:	mov    dh,0xbc
  4151bf:	sub    BYTE PTR [edi+edx*8],ah
  4151c2:	sbb    bh,al
  4151c4:	std    
  4151c5:	fcom   DWORD PTR [edi+0x6d]
  4151c8:	and    al,0xb
  4151ca:	pop    ds
  4151cb:	xor    eax,0x34d57389
  4151d0:	push   ebp
  4151d1:	ins    DWORD PTR es:[edi],dx
  4151d2:	xchg   esi,eax
  4151d3:	mov    ebx,0xee7fa0e8
  4151d8:	std    
  4151d9:	les    ecx,FWORD PTR [eax-0x369cbb86]
  4151df:	push   ebp
  4151e0:	push   eax
  4151e1:	mov    ah,0xf2
  4151e3:	(bad)  
  4151e5:	mov    ds,ecx
  4151e7:	out    dx,al
  4151e8:	cmp    DWORD PTR [edx-0x5b],edi
  4151eb:	pop    ebp
  4151ec:	and    al,0x33
  4151ee:	enter  0x13a5,0xb6
  4151f2:	xchg   ebx,eax
  4151f3:	ret    
  4151f4:	xor    eax,esi
  4151f6:	jnp    0x4151c3
  4151f8:	aaa    
  4151f9:	mov    eax,0xc02bc393
  4151fe:	jnp    0x4151cb
  415200:	das    
  415201:	mov    dh,0x8b
  415203:	ret    
  415204:	adc    esi,edx
  415206:	jl     0x41519f
  415208:	jp     0x41518b
  41520a:	das    
  41520b:	sbb    ch,bl
  41520d:	dec    edx
  41520e:	and    dh,BYTE PTR [edx+0x40]
  415211:	sbb    esp,eax
  415213:	ss push ebx
  415215:	(bad)  
  415216:	adc    ah,BYTE PTR [edx-0x24]
  415219:	daa    
  41521a:	data16 fsubr st,st(5)
	...
  415229:	add    BYTE PTR [eax],al
  41522b:	add    BYTE PTR [edx],ch
  41522d:	fisubr WORD PTR [edi+ebp*2+0x28234d65]
  415234:	push   edi
  415235:	(bad)  [ebp+0x28]
  415238:	cmp    ecx,eax
  41523a:	out    0x76,eax
  41523c:	inc    eax
  41523d:	inc    ebp
  41523e:	gs sbb al,0x3b
  415241:	enter  0x3e7,0x73
  415245:	rcl    ah,0x3
  415248:	cmp    al,0xc8
  41524a:	out    0x6f,eax
  41524c:	cmp    al,0x45
  41524e:	xchg   BYTE PTR [edx],al
  415250:	imul   edi,DWORD PTR [edi-0x37abfc44],0xffffffe7
  415257:	outs   dx,DWORD PTR ds:[esi]
  415258:	cmp    al,0x45
  41525a:	outs   dx,BYTE PTR ds:[esi]
  41525b:	add    DWORD PTR [ebx-0x2d],edx
  41525e:	mov    esi,0x4f12b653
  415263:	fldcw  WORD PTR [eax-0x4dcea9df]
  415269:	sub    eax,0xec1b7907
  41526e:	xlat   BYTE PTR ds:[ebx]
  41526f:	push   es
  415270:	aas    
  415271:	enter  0x3e7,0xc6
  415275:	cmc    
  415276:	inc    DWORD PTR [ecx]
  415278:	push   0x76
  41527a:	push   ebx
  41527b:	(bad)  
  41527c:	leave  
  41527d:	xor    ch,al
  41527f:	pop    ss
  415280:	xchg   edx,eax
  415281:	and    eax,DWORD PTR [ebx+0x6a]
  415284:	call   0x24b3:0xf4047421
  41528b:	stc    
  41528c:	out    0x8b,eax
  41528e:	and    al,0x9d
	...
  41529c:	add    BYTE PTR [eax],al
  41529e:	add    bh,bh
  4152a0:	pop    DWORD PTR [edi+0x3980209d]
  4152a6:	adc    DWORD PTR [edx+0x47],edx
  4152a9:	mov    ch,0xf1
  4152ab:	pop    ebx
  4152ac:	and    eax,DWORD PTR [ebx-0x63babc1a]
  4152b2:	jmp    0xd6c31af3
  4152b7:	cmp    eax,0x3c6a86d3
  4152bc:	enter  0x7200,0x60
  4152c0:	in     al,dx
  4152c1:	adc    BYTE PTR [esi],dl
  4152c3:	xchg   esi,eax
  4152c4:	pop    es
  4152c5:	sub    DWORD PTR [esi-0x60766e94],ebp
  4152cb:	in     al,0xf2
  4152cd:	out    dx,al
  4152ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152cf:	adc    ecx,DWORD PTR [edi+0x54]
  4152d2:	lds    esp,FWORD PTR [ebx+edi*2]
  4152d5:	push   edx
  4152d6:	bound  esi,QWORD PTR [edx+0x3d81e84e]
  4152dc:	xor    ebp,edi
  4152de:	xchg   BYTE PTR [edi],dl
  4152e0:	add    eax,0x8c56247d
  4152e5:	and    al,0xb1
  4152e7:	daa    
  4152e8:	dec    edx
  4152e9:	and    al,0xe5
  4152eb:	cmp    al,0xc8
  4152ed:	jae    0x4152df
  4152ef:	mov    edi,0x3ce52861
  4152f4:	enter  0xdd00,0x44
  4152f8:	fld    QWORD PTR [eax]
  4152fa:	in     al,0x3c
  4152fc:	enter  0x7c,0x93
  415300:	inc    edi
  415301:	sti    
  415302:	add    al,BYTE PTR [eax]
	...
  415310:	add    BYTE PTR [eax],al
  415312:	shr    al,cl
  415314:	cmp    DWORD PTR [eax],eax
  415316:	retf   
  415317:	les    eax,FWORD PTR [eax]
  415319:	jl     0x4152be
  41531b:	inc    edi
  41531c:	sti    
  41531d:	add    esp,DWORD PTR [edx-0x12afac34]
  415323:	(bad)  
  415324:	call   0xfb75aa72
  415329:	jmp    0x4152bb
  41532b:	xchg   ecx,eax
  41532c:	push   edi
  41532d:	pop    edi
  41532e:	aad    0x5c
  415330:	sti    
  415331:	pop    esi
  415332:	in     eax,0x8
  415334:	cmp    dl,al
  415336:	outs   dx,BYTE PTR ds:[esi]
  415337:	les    eax,FWORD PTR [edi-0x784b7d94]
  41533d:	ret    
  41533e:	sub    eax,0xad555005
  415343:	(bad)  
  415344:	call   0xfb754b68
  415349:	inc    ebp
  41534a:	xchg   ebp,eax
  41534b:	add    edi,ebp
  41534d:	je     0x41535a
  41534f:	add    BYTE PTR [eax],dl
  415351:	mov    esi,DWORD PTR [edx]
  415353:	call   0x339ee068
  415358:	dec    ebp
  415359:	push   edx
  41535a:	popf   
  41535b:	(bad)  
  41535c:	call   0xfb74fb68
  415361:	mov    ebx,DWORD PTR [edx-0x18]
  415364:	push   esp
  415365:	mov    ebp,0xcbe7
  41536a:	or     eax,0x6b216f13
  41536f:	dec    edi
  415370:	add    BYTE PTR [eax],al
  415372:	out    0xcb,al
  415374:	xchg   DWORD PTR [esi+0x0],eax
	...
  415382:	add    BYTE PTR [eax],al
  415384:	add    dl,dh
  415386:	pop    ds
  415387:	std    
  415388:	jmp    DWORD PTR ds:0x6ece8774
  41538e:	sub    ecx,ebp
  415390:	call   FWORD PTR [ecx]
  415392:	lds    ebp,FWORD PTR [esi+0x12d3f14]
  415398:	add    BYTE PTR [esp+ebp*8],bh
  41539b:	sub    eax,0x858c2ddd
  4153a0:	leave  
  4153a1:	cwde   
  4153a2:	xor    BYTE PTR [edi+0x1313b1c],al
  4153a8:	mov    esi,esp
  4153aa:	daa    
  4153ab:	jo     0x4153c4
  4153ad:	mov    ah,0xaf
  4153af:	adc    al,0x4
  4153b1:	aas    
  4153b2:	xor    DWORD PTR [esi+eax*4+0x57],edi
  4153b6:	sub    eax,0xa7ff0001
  4153bb:	jp     0x4153d9
  4153bd:	cmp    esi,DWORD PTR [ecx]
  4153bf:	add    DWORD PTR [edi-0x2fe3f],eax
  4153c5:	push   eax
  4153c6:	stos   BYTE PTR es:[edi],al
  4153c7:	sbb    BYTE PTR [eax],0x43
  4153ca:	xor    DWORD PTR [ecx],eax
  4153cc:	mov    ch,BYTE PTR [edi]
  4153ce:	xor    edx,ebx
  4153d0:	(bad)  
  4153d1:	std    
  4153d2:	cwde   
  4153d3:	adc    edi,edi
  4153d5:	rcl    BYTE PTR [edi*8+0xb7428ff],cl
  4153dc:	mov    DWORD PTR [ecx+0x18fffd00],edi
  4153e2:	cwde   
  4153e3:	jg     0x4153fd
  4153e5:	cmp    esi,DWORD PTR [ecx]
  4153e7:	add    DWORD PTR [eax+0x0],eax
	...
  4153f6:	add    BYTE PTR [eax],al
  4153f8:	mov    dh,0x7e
  4153fa:	add    eax,0x7c313f04
  4153ff:	xchg   BYTE PTR [edi+0x25],cl
  415402:	add    DWORD PTR [eax],eax
  415404:	les    ebp,FWORD PTR [esi+0x313f0409]
  41540a:	jnp    0x41541c
  41540c:	cmp    eax,0xc7c2e743
  415411:	add    BYTE PTR [esi+ebx*4],al
  415414:	xor    ebp,DWORD PTR ds:0xf8520001
  41541a:	jge    0x4153a2
  41541c:	das    
  41541d:	enter  0x3eb,0x3f
  415421:	push   ecx
  415422:	or     edi,DWORD PTR gs:[ebx]
  415425:	enter  0x43e7,0xc0
  415429:	dec    ebp
  41542a:	jmp    0x41542b
  41542c:	mov    al,ds:0x2f81701e
  415431:	(bad)  
  415432:	out    0x3,eax
  415434:	mov    BYTE PTR [ebp-0x31],0xff
  415438:	mov    BYTE PTR [esi],bl
  41543a:	pop    ss
  41543b:	and    esi,DWORD PTR [esi+0x78fff745]
  415441:	push   ds
  415442:	and    eax,0x65533f03
  415447:	pop    es
  415448:	inc    ebx
  415449:	enter  0x7ee7,0xb9
  41544d:	mov    edi,0xc93f03eb
  415452:	dec    ebp
  415453:	adc    edi,DWORD PTR [ebx]
  415455:	enter  0x1ee7,0x74
  415459:	stc    
  41545a:	(bad)  
  41545b:	jle    0x41545d
	...
  415469:	add    BYTE PTR [eax],al
  41546b:	sti    
  41546c:	jecxz  0x4154b1
  41546e:	jg     0x41546f
  415470:	xchg   esp,eax
  415471:	sbb    BYTE PTR [ebp-0x7d],bh
  415474:	in     al,0x47
  415476:	jge    0x415449
  415478:	mov    eax,0xf13f03e3
  41547d:	sbb    esp,DWORD PTR [eax]
  41547f:	outs   dx,DWORD PTR ds:[esi]
  415480:	ja     0x4154f4
  415482:	jp     0x4154af
  415484:	(bad)  
  415485:	out    0x3,eax
  415487:	push   esi
  415488:	mov    WORD PTR [ebx],es
  41548a:	push   esp
  41548b:	ins    DWORD PTR es:[edi],dx
  41548c:	ja     0x4154cc
  41548e:	jmp    0x14e49ea2
  415493:	mov    esp,0x85f81c08
  415498:	push   ecx
  415499:	stos   BYTE PTR es:[edi],al
  41549a:	dec    ebp
  41549b:	cmp    BYTE PTR [esi+0x6a],0xc0
  41549f:	pop    ss
  4154a0:	or     bl,bh
  4154a2:	add    eax,esi
  4154a4:	inc    esi
  4154a5:	add    cl,bl
  4154a7:	enter  0xfd1d,0xc2
  4154ab:	add    ah,ah
  4154ad:	push   eax
  4154ae:	les    ecx,FWORD PTR [ebx]
  4154b0:	jnp    0x415510
  4154b2:	push   0x7f
  4154b4:	loopne 0x415478
  4154b6:	icebp  
  4154b7:	cmp    al,0x60
  4154b9:	add    cl,ch
  4154bb:	mov    ds:0xff72c21d,al
  4154c0:	jecxz  0x4154c6
  4154c2:	jb     0x415497
  4154c4:	pop    ebp
  4154c5:	out    0xea,eax
  4154c7:	adc    DWORD PTR [eax+ecx*1+0x444f7ba9],eax
  4154ce:	int    0x0
	...
  4154dc:	add    BYTE PTR [eax],al
  4154de:	jo     0x41547e
  4154e0:	in     al,dx
  4154e1:	int    0x70
  4154e3:	sbb    eax,0x99836cfd
  4154e8:	add    eax,0x4ec7f68
  4154ed:	jmp    0x6dca5c2e
  4154f2:	pop    ds
  4154f3:	test   BYTE PTR [ecx+ebp*8],al
  4154f6:	cmp    al,0x4f
  4154f8:	xchg   esp,eax
  4154f9:	(bad)  
  4154fc:	add    cl,ch
  4154fe:	lea    ecx,[edi-0x74]
  415501:	add    eax,0xe900c47b
  415506:	xchg   edx,eax
  415507:	dec    edi
  415508:	xchg   esp,eax
  415509:	add    eax,0xe900c457
  41550e:	ins    DWORD PTR es:[edi],dx
  41550f:	js     0x41549a
  415511:	xor    BYTE PTR gs:[eax+0x7a3ce904],cl
  415518:	push   eax
  415519:	pop    esp
  41551a:	dec    eax
  41551b:	in     al,0x18
  41551d:	xchg   ecx,eax
  41551e:	mov    WORD PTR [ecx],ds
  415520:	std    
  415521:	sahf   
  415522:	mov    ebp,0x3ced2c03
  415527:	enter  0x9dc1,0xa8
  41552b:	or     ecx,esp
  41552d:	add    BYTE PTR [edx-0x5d3333ac],dl
  415533:	push   esp
  415534:	int3   
  415535:	int3   
  415536:	sub    esp,DWORD PTR [ecx+0x194281e1]
  41553c:	add    BYTE PTR [eax],al
  41553e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41553f:	jae    0x415597
  415541:	push   edi
	...
  41554e:	add    BYTE PTR [eax],al
  415550:	add    BYTE PTR ds:0x6d31088e,ch
  415556:	and    BYTE PTR [ebx+0x3dad7ab3],dh
  41555c:	add    BYTE PTR [edi],cl
  41555e:	sbb    DWORD PTR [ebp-0x4ce05a08],edi
  415564:	add    al,0x66
  415566:	mov    eax,ds:0xc7f783ed
  41556b:	or     esi,DWORD PTR [edi+0x74f121f2]
  415571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415572:	enter  0xc881,0x61
  415576:	dec    ebp
  415577:	int    0xf
  415579:	or     BYTE PTR [edx],cl
  41557b:	mov    BYTE PTR [ebx+eiz*2+0x60],al
  41557f:	aas    
  415580:	cmp    DWORD PTR ds:0x87d17cf1,0xfffffff2
  415587:	gs adc ebx,0x14
  41558b:	(bad)  
  41558c:	je     0x4155ba
  41558e:	popf   
  41558f:	shl    bh,1
  415591:	(bad)  
  415592:	mov    eax,ds:0xff30004c
  415597:	dec    BYTE PTR [edx+eax*1+0x277989ba]
  41559e:	inc    edi
  41559f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155a0:	mov    ebp,0xfffb22f6
  4155a5:	push   ss
  4155a6:	inc    edi
  4155a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155a8:	(bad)  
  4155a9:	out    0x22,al
  4155ab:	sti    
  4155ac:	jmp    esi
  4155ae:	aam    0xd7
  4155b0:	js     0xb6f1fc
	...
  4155c2:	add    BYTE PTR [eax],al
  4155c4:	aas    
  4155c5:	lock add al,0x8b
  4155c8:	sub    ebx,DWORD PTR [ecx]
  4155ca:	cmp    dh,0x3b
  4155cd:	(bad)  
  4155ce:	cli    
  4155cf:	mov    DWORD PTR [ebx+0x54],edi
  4155d2:	mov    ecx,0x90f48388
  4155d7:	jmp    0x3381fd13
  4155dc:	jmp    0x415577
  4155de:	inc    eax
  4155df:	sbb    ecx,edi
  4155e1:	outs   dx,BYTE PTR ds:[esi]
  4155e2:	cmp    cl,0x4b
  4155e5:	cmc    
  4155e6:	retf   
  4155e7:	mov    ecx,0x13143
  4155ec:	dec    eax
  4155ed:	fwait
  4155ee:	sbb    BYTE PTR [edx+ecx*1+0x538b0170],0xf9
  4155f6:	cmp    esi,0x89f76c47
  4155fc:	add    edi,esp
  4155fe:	mov    eax,0x911bfb88
  415603:	jmp    0x3381fd3f
  415608:	xchg   ebx,eax
  415609:	test   eax,0x6eaf1b40
  41560e:	cmp    cl,0x17
  415611:	popf   
  415612:	int3   
  415613:	das    
  415614:	and    ch,BYTE PTR fs:[ebx+0x44949381]
  41561b:	add    BYTE PTR [edi+0x3f8fffa4],bh
  415621:	jne    0x415619
  415623:	mov    BYTE PTR [ebx-0x6c],al
  415626:	std    
  415627:	jb     0x415629
	...
  415635:	add    BYTE PTR [eax],al
  415637:	jle    0x41566a
  415639:	cld    
  41563a:	or     edx,0x0
  41563d:	out    0xfd,al
  41563f:	adc    BYTE PTR [edx],ch
  415641:	stos   DWORD PTR es:[edi],eax
  415642:	add    DWORD PTR [ebx],0xbf0043dc
  415648:	in     al,dx
  415649:	dec    DWORD PTR [edi-0x9e437c1]
  41564f:	mov    ebx,0x896dff7c
  415655:	out    0xfc,eax
  415657:	mov    esp,0xdae6f75c
  41565c:	sbb    ch,BYTE PTR [edx]
  41565e:	adc    esi,0xffffffbf
  415661:	sti    
  415662:	sar    DWORD PTR [ebp+0x47],0x71
  415666:	adc    esi,DWORD PTR [edx]
  415668:	dec    esp
  415669:	mov    cl,0xe6
  41566b:	mov    edx,0x4f80741a
  415670:	sbb    ebx,DWORD PTR [esi-0x1a]
  415673:	wrmsr  
  415675:	loopne 0x41567a
  415677:	aas    
  415678:	enter  0x45ae,0xf6
  41567c:	push   eax
  41567d:	push   ebx
  41567e:	dec    eax
  41567f:	jge    0x415650
  415681:	out    0x50,eax
  415683:	shl    BYTE PTR [eax+ebp*2],0xd7
  415687:	mov    edi,0xe03e7c7
  41568c:	jb     0x41564c
  41568e:	jp     0x41568c
  415690:	iret   
  415691:	ins    BYTE PTR es:[edi],dx
  415692:	push   eax
  415693:	mov    edi,0x3f03f760
  415698:	enter  0xc260,0x0
	...
  4156a8:	add    BYTE PTR [eax],al
  4156aa:	mov    esi,0xe7aeb07
  4156af:	dec    ecx
  4156b0:	add    eax,0xe71c3f03
  4156b5:	les    ebx,FWORD PTR [ecx-0x3f]
  4156b8:	bound  ebp,QWORD PTR [edx]
  4156ba:	mov    eax,0x30f5a721
  4156bf:	sbb    ch,BYTE PTR [eax-0x2a30ca23]
  4156c5:	jns    0x41572e
  4156c7:	inc    edi
  4156c8:	mov    BYTE PTR [edi+edi*1],0x1c
  4156cc:	out    0xc2,eax
  4156ce:	and    cl,bh
  4156d0:	lock in eax,0xc0
  4156d3:	(bad)  
  4156d4:	add    BYTE PTR [eax-0xf],ah
  4156d7:	inc    edi
  4156d8:	ret    0x77e5
  4156db:	loopne 0x41575c
  4156dd:	mov    ?,ebx
  4156df:	retf   
  4156e0:	add    cl,ch
  4156e2:	std    
  4156e3:	sub    eax,DWORD PTR [esi]
  4156e5:	loop   0x415701
  4156e7:	inc    ecx
  4156e8:	bound  ecx,QWORD PTR ds:[esi]
  4156eb:	cdq    
  4156ec:	out    0xe9,al
  4156ee:	int3   
  4156ef:	mov    DWORD PTR [eax],0x89cce9a8
  4156f5:	sar    BYTE PTR [edi-0x6157c2d9],cl
  4156fb:	mov    eax,0xc0364707
  415700:	jg     0x41574c
  415702:	inc    ebx
  415703:	sbb    BYTE PTR [ecx],al
  415705:	jmp    0xe0458687
  41570a:	add    BYTE PTR [ecx+0x32],0x70
	...
  41571a:	add    BYTE PTR [eax],al
  41571c:	add    BYTE PTR [esi+0x47],ch
  41571f:	ret    0x7e5
  415722:	fadd   DWORD PTR [ecx+0x31cf5a4f]
  415728:	pusha  
  415729:	add    DWORD PTR cs:[ecx-0x38bac0d7],0x434cea94
  415734:	imul   ecx,DWORD PTR [ebx],0x3ce92530
  41573a:	enter  0xa75d,0x7
  41573e:	inc    ecx
  41573f:	in     al,dx
  415740:	pushf  
  415741:	jle    0x415707
  415743:	add    BYTE PTR [edx-0x1],ah
  415746:	jecxz  0x41574c
  415748:	xor    eax,DWORD PTR [edi-0x4816c069]
  41574e:	into   
  41574f:	xchg   ecx,esi
  415751:	mov    edi,0xfc6a0405
  415756:	ret    
  415757:	jg     0x41572c
  415759:	add    BYTE PTR [edi-0x68d9ffc1],dl
  41575f:	out    dx,al
  415760:	ret    0xc522
  415763:	xchg   DWORD PTR [edx+esi*1-0x38],eax
  415767:	mov    edx,0x85355c
  41576c:	mov    ebp,esi
  41576e:	popf   
  41576f:	or     al,BYTE PTR [ebx-0x3d7fe76a]
  415775:	rol    BYTE PTR [ebp-0x6],cl
  415778:	fdiv   QWORD PTR ds:0xa8720085
  41577e:	push   es
  41577f:	add    al,0x0
	...
  41578d:	add    BYTE PTR [eax],al
  41578f:	add    BYTE PTR [ebx],dh
  415791:	popf   
  415792:	loope  0x4157e4
  415794:	es ja  0x41571e
  415797:	inc    ebp
  415798:	sahf   
  415799:	lahf   
  41579a:	pop    ecx
  41579b:	or     al,0x2b
  41579d:	mov    bh,al
  41579f:	push   edx
  4157a0:	out    0xfc,al
  4157a2:	sbb    al,BYTE PTR [eax]
  4157a4:	xchg   esi,eax
  4157a5:	les    ebp,FWORD PTR [eax+0x5c]
  4157a8:	jne    0x41572f
  4157aa:	add    BYTE PTR [ebp-0x17afd31d],cl
  4157b0:	dec    edi
  4157b1:	lds    eax,FWORD PTR [eax]
  4157b3:	add    BYTE PTR [ebp-0x2907be6f],ah
  4157b9:	cld    
  4157ba:	outs   dx,DWORD PTR ds:[esi]
  4157bb:	add    BYTE PTR [esi-0x3c],ah
  4157be:	push   edi
  4157bf:	mov    DWORD PTR [edx],edi
  4157c1:	add    dl,0x8
  4157c4:	push   esi
  4157c5:	ja     0x41574e
  4157c7:	inc    esp
  4157c8:	sbb    BYTE PTR [eax+ecx*4],0x54
  4157cc:	adc    BYTE PTR [eax],0x86
  4157cf:	rcl    DWORD PTR [esi+0x1709b313],0x26
  4157d6:	sbb    BYTE PTR [ecx+0x40bd931c],cl
  4157dc:	sub    DWORD PTR [edx],esi
  4157de:	add    eax,0x81cf7c1
  4157e3:	or     bh,BYTE PTR [edi]
  4157e5:	test   al,0xe
  4157e7:	xchg   esi,edi
  4157e9:	loope  0x4157fc
  4157eb:	mov    dh,0x46
  4157ed:	pusha  
  4157ee:	jecxz  0x4157f8
  4157f0:	xor    al,0x1b
  4157f2:	mov    WORD PTR [edx],cs
	...
  415800:	add    BYTE PTR [eax],al
  415802:	add    BYTE PTR [esi+0x43c28530],dh
  415808:	test   al,0xc5
  41580a:	inc    eax
  41580b:	inc    eax
  41580c:	ja     0x41580b
  41580e:	push   es
  41580f:	inc    esi
  415810:	cwde   
  415811:	ret    
  415812:	inc    eax
  415813:	xor    BYTE PTR [edi+0xb],dh
  415816:	mov    edi,0xa8c19de
  41581b:	(bad)  
  41581c:	pusha  
  41581d:	inc    esp
  41581e:	or     eax,0xdfc41891
  415823:	das    
  415824:	sub    cl,BYTE PTR [ebx]
  415826:	xchg   DWORD PTR [ebp-0x58],eax
  415829:	ret    
  41582a:	inc    eax
  41582b:	inc    eax
  41582c:	aaa    
  41582d:	or     edi,DWORD PTR [edi+0xa0e199e]
  415833:	xor    BYTE PTR [edi],dh
  415835:	add    al,0x7
  415837:	jle    0x4157e1
  415839:	push   cs
  41583a:	pop    ecx
  41583b:	jge    0x415856
  41583d:	add    DWORD PTR [ecx-0x4c],edx
  415840:	cmp    eax,0x6db40825
  415845:	and    eax,0xc423c40c
  41584a:	call   0x3f44f1a6
  41584f:	mov    ah,0x23
  415851:	(bad)  
  415852:	call   0x3f4501a6
  415857:	les    esp,FWORD PTR [ebx]
  415859:	(bad)  
  41585a:	call   0x3f44f1a6
  41585f:	mov    dh,0xda
  415861:	inc    ebx
  415862:	xchg   DWORD PTR [edi-0x5e],ebp
  415865:	mov    BYTE PTR [eax+eax*1],0x0
	...
  415875:	add    ah,al
  415877:	and    BYTE PTR [ecx-0x16383bff],cl
  41587d:	les    edx,FWORD PTR [edi]
  41587f:	mov    al,0x6f
  415881:	add    al,0x60
  415883:	inc    ebx
  415884:	jmp    0x5ff9804d
  415889:	add    al,0x50
  41588b:	inc    ebx
  41588c:	jmp    0x70017055
  415891:	add    al,0x40
  415893:	inc    ebx
  415894:	(bad)  [ebx+0x3ee8400f]
  41589a:	std    
  41589b:	mov    edi,0x2cc038e7
  4158a0:	push   0xffffffef
  4158a2:	xor    edi,DWORD PTR [ebx+0x3d]
  4158a5:	cmp    eax,esi
  4158a7:	mov    ebx,ds
  4158a9:	mov    gs,WORD PTR [eax+eax*8+0x72]
  4158ad:	cmc    
  4158ae:	mov    bh,0x84
  4158b0:	out    dx,eax
  4158b1:	mov    ?,WORD PTR [eax-0x34]
  4158b4:	pusha  
  4158b5:	mov    dh,0xf8
  4158b7:	and    ah,bl
  4158b9:	adc    al,0x86
  4158bb:	dec    eax
  4158bc:	dec    edx
  4158bd:	adc    bh,BYTE PTR [edx]
  4158bf:	(bad)  
  4158c0:	out    dx,al
  4158c1:	adc    al,0x88
  4158c3:	inc    eax
  4158c4:	xor    eax,0x18cba1c4
  4158c9:	(bad)  
  4158ca:	mov    eax,0x2ff127fd
  4158cf:	fldcw  WORD PTR ds:0x4a488e8c
  4158d5:	loop   0x415951
  4158d7:	(bad)  
  4158d8:	out    0x14,eax
	...
  4158e6:	add    BYTE PTR [eax],al
  4158e8:	add    BYTE PTR [eax+0x61c44540],cl
  4158ee:	mov    bh,0xd8
  4158f0:	aad    0xb8
  4158f2:	add    eax,0xd93df128
  4158f7:	xor    eax,0xa484e8c
  4158fc:	push   ss
  4158fd:	push   cs
  4158fe:	fstp   TBYTE PTR [edx+0x406514]
  415904:	pop    ss
  415905:	add    ebp,DWORD PTR [edi]
  415907:	add    bh,BYTE PTR [eax-0x5731b1f5]
  41590d:	sub    eax,0xb4b72fc1
  415912:	pop    ss
  415913:	jg     0x4158df
  415915:	push   ds
  415916:	leave  
  415917:	std    
  415918:	jmp    0xa7c84b4a
  41591d:	cld    
  41591e:	cs or  al,bh
  415921:	out    dx,al
  415922:	dec    ebp
  415923:	jae    0x4158da
  415925:	cmp    al,0x1e
  415927:	mov    DWORD PTR [edi+ebx*8],ebp
  41592a:	push   ebp
  41592b:	in     eax,dx
  41592c:	push   es
  41592d:	ret    0xff2b
  415930:	outs   dx,DWORD PTR ds:[esi]
  415931:	or     al,0xce
  415933:	mul    DWORD PTR [eax-0x6b]
  415936:	in     eax,0xce
  415938:	pusha  
  415939:	jmp    0xaa62:0x9953e195
  415940:	mov    eax,0x64d7e582
  415945:	push   edi
  415946:	mov    edx,0x237c9687
  41594b:	sbb    eax,0x6a
	...
  41595c:	xchg   esi,eax
  41595d:	adc    eax,0x12345b88
  415962:	lds    ebp,FWORD PTR [esp+esi*2+0x3ce900c0]
  415969:	dec    ebp
  41596a:	into   
  41596b:	sub    BYTE PTR [ebp+0x7c2e87b4],dl
  415971:	and    eax,DWORD PTR [eax+eiz*2]
  415974:	xchg   edx,eax
  415975:	int    0xf9
  415977:	pusha  
  415978:	test   DWORD PTR [edi-0x40],eax
  41597b:	in     eax,dx
  41597c:	push   ebx
  41597d:	mov    dh,0x87
  41597f:	aas    
  415980:	mov    edx,0x37623d2e
  415985:	pop    ecx
  415986:	fcom   QWORD PTR [edx+0x87c7fd]
  41598c:	and    DWORD PTR [ecx],ecx
  41598e:	jmp    0x415996
  415990:	xlat   BYTE PTR ds:[ebx]
  415991:	push   ds
  415992:	cld    
  415993:	add    BYTE PTR [esi],ah
  415995:	leave  
  415996:	pop    es
  415997:	mov    bh,0x42
  415999:	jno    0x4159d8
  41599b:	add    BYTE PTR [edi+0x10efbd08],ch
  4159a1:	dec    edx
  4159a2:	jecxz  0x4159a0
  4159a4:	es leave 
  4159a6:	add    BYTE PTR [ebx],cl
  4159a8:	test   eax,0x16417354
  4159ad:	inc    edx
  4159ae:	fcmovnb st,st(1)
  4159b0:	icebp  
  4159b1:	push   cs
  4159b2:	jle    0x41599b
  4159b4:	mov    dl,0xc8
  4159b6:	add    BYTE PTR [eax],al
  4159b8:	(bad)  [edi]
  4159ba:	fdiv   QWORD PTR [ebp+0x17]
  4159bd:	int3   
  4159be:	test   DWORD PTR [ebp+0x0],esi
	...
  4159cd:	add    BYTE PTR [eax],al
  4159cf:	retf   0xc641
  4159d2:	and    DWORD PTR [esi-0xa347a34],0xffffffc6
  4159d9:	test   esi,ebx
  4159db:	push   ebp
  4159dc:	pop    ds
  4159dd:	cmp    ecx,DWORD PTR [ebx+0x7cdc3d8a]
  4159e3:	addr16 int3 
  4159e5:	pop    es
  4159e6:	jne    0x415a12
  4159e8:	inc    edx
  4159e9:	fcmovnb st,st(1)
  4159eb:	adc    DWORD PTR [edi-0x36fd1883],edi
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	popf   
  4159f4:	das    
  4159f5:	fdivr  QWORD PTR [edx-0x19]
  4159f8:	enter  0xdf85,0x57
  4159fc:	sbb    BYTE PTR [esi],cl
  4159fe:	cmp    ecx,0x66fffff4
  415a04:	ret    
  415a05:	mov    bl,0xdc
  415a07:	scas   al,BYTE PTR es:[edi]
  415a08:	mov    DWORD PTR [eax],eax
  415a0a:	mov    DWORD PTR [ecx],eax
  415a0c:	or     ch,bl
  415a0e:	push   ss
  415a0f:	xlat   BYTE PTR ds:[ebx]
  415a10:	pop    ds
  415a11:	cld    
  415a12:	add    BYTE PTR [edi],bh
  415a14:	pop    ds
  415a15:	add    DWORD PTR [ecx],ecx
  415a17:	mov    dl,ah
  415a19:	push   edi
  415a1a:	aas    
  415a1b:	aas    
  415a1c:	push   eax
  415a1d:	rol    DWORD PTR [edi+0x1ce7df69],cl
  415a23:	(bad)  
  415a24:	mov    dl,0xc2
  415a26:	in     eax,dx
  415a27:	cmp    ebp,DWORD PTR [eax-0x66dbf82c]
  415a2d:	mov    BYTE PTR [ecx+0x1e122dff],0x0
	...
  415a40:	add    BYTE PTR [eax],al
  415a42:	(bad)  
  415a43:	pop    ebx
  415a44:	and    esi,0xb318a650
  415a4a:	jmp    0x4159d2
  415a4c:	inc    ebx
  415a4d:	add    BYTE PTR [esi+0x41edc332],dh
  415a53:	mov    al,ds:0x213ffce5
  415a58:	add    DWORD PTR [ecx],ecx
  415a5a:	mov    al,0xd
  415a5c:	pop    ebx
  415a5d:	aas    
  415a5e:	aas    
  415a5f:	cwde   
  415a60:	mov    ebp,0x842be8bf
  415a65:	in     eax,0xd3
  415a67:	and    DWORD PTR [ecx],eax
  415a69:	add    BYTE PTR [edx+edx*8],dh
  415a6c:	shl    BYTE PTR [ebp+0x7e],0x21
  415a70:	mov    ebp,ds
  415a72:	jle    0x415abe
  415a74:	idiv   BYTE PTR [esi-0x68]
  415a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a78:	add    al,0x0
  415a7a:	aas    
  415a7b:	push   ss
  415a7c:	xchg   esi,eax
  415a7d:	fsubr  QWORD PTR [edx]
  415a7f:	pusha  
  415a80:	add    DWORD PTR [edi-0x39748aee],eax
  415a86:	mov    esp,0x6c8708e1
  415a8b:	push   cs
  415a8c:	sti    
  415a8d:	xchg   BYTE PTR [ecx-0x62],ah
  415a90:	out    0x3d,al
  415a92:	les    edx,FWORD PTR ds:0x5ff3dc98
  415a98:	add    DWORD PTR [ecx],ecx
  415a9a:	repnz (bad) 
  415a9c:	sbb    ecx,DWORD PTR [ebp+0x60e0982]
  415aa2:	fsubr  DWORD PTR [edx]
  415aa4:	adc    eax,DWORD PTR [eax+eax*1]
	...
  415ab3:	add    BYTE PTR [eax],al
  415ab5:	aas    
  415ab6:	enter  0x96e2,0x6b
  415aba:	mov    gs,WORD PTR [eax+0x27f3b803]
  415ac0:	out    dx,eax
  415ac1:	dec    ecx
  415ac2:	dec    ecx
  415ac3:	push   cs
  415ac4:	loopne 0x415b05
  415ac6:	enter  0xae7,0xf2
  415aca:	repz pop esi
  415acc:	inc    ebp
  415acd:	aas    
  415ace:	inc    ecx
  415acf:	mov    esi,0x68ba2ac4
  415ad4:	out    0x13,al
  415ad6:	enter  0x3e7,0x36
  415ada:	pop    ebx
  415adb:	mov    ds:0xf8c84055,eax
  415ae0:	aam    0xfa
  415ae2:	test   BYTE PTR [edi-0x18ef8b7e],ch
  415ae8:	push   cs
  415ae9:	mov    esp,0xe2dea55e
  415aee:	inc    eax
  415aef:	scas   eax,DWORD PTR es:[edi]
  415af0:	(bad)  
  415af1:	fbstp  TBYTE PTR [edx+0x2200cd60]
  415af7:	pusha  
  415af8:	les    eax,FWORD PTR [eax+0x19]
  415afb:	jo     0x415ab0
  415afd:	adc    BYTE PTR [eax],al
  415aff:	jo     0x415ac3
  415b01:	cmp    BYTE PTR [edi],ah
  415b03:	inc    ecx
  415b04:	test   eax,0xb9b85de5
  415b09:	pop    eax
  415b0a:	icebp  
  415b0b:	outs   dx,DWORD PTR ds:[esi]
  415b0c:	mov    bl,0xe0
  415b0e:	daa    
  415b0f:	dec    BYTE PTR [ecx+esi*2+0x7d8c44f8]
  415b16:	rcr    BYTE PTR [ecx-0x74],0x0
	...
  415b26:	add    BYTE PTR [eax],al
  415b28:	outs   dx,DWORD PTR ds:[esi]
  415b29:	or     BYTE PTR [edi+0xb],cl
  415b2c:	push   eax
  415b2d:	add    BYTE PTR [eax-0x3e],dh
  415b30:	clc    
  415b31:	add    BYTE PTR es:[esi],dh
  415b34:	cmp    al,0x15
  415b36:	add    al,bh
  415b38:	stos   DWORD PTR es:[edi],eax
  415b39:	dec    edx
  415b3a:	fsubr  DWORD PTR [eax]
  415b3c:	pop    esp
  415b3d:	mov    edi,0xf7cb2b2f
  415b42:	mov    esi,0xc8e33e01
  415b47:	pusha  
  415b48:	jge    0x415adc
  415b4a:	loope  0x415b06
  415b4c:	sub    eax,0xfbb831d9
  415b51:	dec    ecx
  415b52:	fsubr  DWORD PTR [eax]
  415b54:	sbb    al,0xc7
  415b56:	das    
  415b57:	sub    edi,DWORD PTR [ebx+0x2bd1bf00]
  415b5d:	jecxz  0x415b2f
  415b5f:	jo     0x415b5f
  415b61:	xchg   ecx,eax
  415b62:	loope  0x415b3a
  415b64:	repnz enter 0x1800,0xc5
  415b69:	dec    ecx
  415b6a:	fsubr  DWORD PTR [eax-0x57d046e5]
  415b70:	les    eax,FWORD PTR [eax]
  415b72:	mov    edi,0xd0e147c1
  415b77:	pusha  
  415b78:	(bad)  
  415b79:	xchg   ecx,eax
  415b7a:	loope  0x415b72
  415b7c:	xor    eax,ebx
  415b7e:	or     eax,0x433f96d8
  415b83:	loope  0x415b82
  415b85:	daa    
  415b86:	add    al,0xd8
  415b88:	test   DWORD PTR [ecx+0x18],0x6a
	...
  415b9b:	js     0x415b5d
  415b9d:	add    al,0x72
  415b9f:	add    al,al
  415ba1:	xchg   ecx,ebx
  415ba3:	jae    0x415c17
  415ba5:	pop    ecx
  415ba6:	pusha  
  415ba7:	scas   eax,DWORD PTR es:[edi]
  415ba8:	ins    DWORD PTR es:[edi],dx
  415ba9:	ret    0x3cf1
  415bac:	ja     0x415c04
  415bae:	jb     0x415baf
  415bb0:	jmp    0x415bbe
  415bb2:	iret   
  415bb3:	(bad)  
  415bb4:	pushf  
  415bb5:	and    al,0xf9
  415bb7:	and    al,BYTE PTR [ebp-0xa]
  415bba:	add    BYTE PTR [ecx-0xff03267],cl
  415bc0:	add    al,0xb
  415bc2:	mov    bh,0x26
  415bc4:	fmul   QWORD PTR [ecx-0x172aa1bd]
  415bca:	push   ebp
  415bcb:	sbb    al,0xf3
  415bcd:	cli    
  415bce:	push   0x3d771a
  415bd3:	ds mov edi,0xc339fffc
  415bd9:	mov    bl,0xf6
  415bdb:	mov    al,ds:0x3c41e8d8
  415be0:	repz cli 
  415be2:	push   0x3d78ca
  415be7:	ds sti 
  415be9:	idiv   bh
  415beb:	sbb    ebx,edx
  415bed:	push   edi
  415bee:	ret    0xc50e
  415bf1:	push   ecx
  415bf2:	mov    DWORD PTR [ebx],eax
  415bf4:	aad    0x50
  415bf6:	push   ebx
  415bf7:	popf   
  415bf8:	mov    cl,BYTE PTR [eax]
  415bfa:	mov    ebx,DWORD PTR [ebx-0x48]
  415bfd:	mov    DWORD PTR [ebp+0x0],edx
	...
  415c0c:	add    BYTE PTR [eax],al
  415c0e:	(bad)  
  415c0f:	(bad)  
  415c10:	push   eax
  415c11:	call   0x3c8431
  415c16:	jle    0x415ba0
  415c18:	outs   dx,DWORD PTR ds:[esi]
  415c19:	inc    ecx
  415c1a:	(bad)  
  415c1b:	inc    ecx
  415c1c:	inc    ecx
  415c1d:	clc    
  415c1e:	push   ss
  415c1f:	and    al,0xf3
  415c21:	cld    
  415c22:	test   eax,0x25dc67f3
  415c27:	test   DWORD PTR [eax],eax
  415c29:	lea    edx,[ebx]
  415c2b:	hlt    
  415c2c:	dec    edi
  415c2d:	call   0x3c4d01
  415c32:	mov    BYTE PTR ds:[ecx+eax*2-0x6a],dh
  415c37:	inc    ecx
  415c38:	inc    ecx
  415c39:	clc    
  415c3a:	out    0x1c,al
  415c3c:	xlat   BYTE PTR ds:[ebx]
  415c3d:	cld    
  415c3e:	stc    
  415c3f:	repz dec esi
  415c41:	lea    edi,[edi]
  415c43:	fst    DWORD PTR fs:[eax-0x69]
  415c47:	pushf  
  415c48:	(bad)  
  415c4a:	and    BYTE PTR [ebp-0x76],0xec
  415c4e:	sbb    bl,ch
  415c50:	or     DWORD PTR [eax],eax
  415c52:	or     ch,BYTE PTR [eax-0x11a47e1a]
  415c58:	das    
  415c59:	push   esi
  415c5a:	mov    ah,0xb
  415c5c:	or     DWORD PTR [ecx+0x438e22d2],ecx
  415c62:	push   edi
  415c63:	dec    esi
  415c64:	xor    al,ch
  415c66:	inc    ebp
  415c67:	mov    ch,0xdc
  415c69:	std    
  415c6a:	mov    dl,0x63
  415c6c:	rcl    DWORD PTR [eax-0x44],1
  415c6f:	loop   0x415c7a
  415c71:	push   ecx
	...
  415c7e:	add    BYTE PTR [eax],al
  415c80:	add    BYTE PTR [edi],ah
  415c82:	(bad)
  415c85:	sub    BYTE PTR [edx+0x3d],cl
  415c88:	jno    0x415d08
  415c8a:	and    DWORD PTR [eax-0x132de8bd],ecx
  415c90:	xchg   ebp,eax
  415c91:	adc    esi,edi
  415c93:	fsubr  DWORD PTR [eax+0x6b]
  415c96:	jb     0x415cdb
  415c98:	add    BYTE PTR [edx-0x18af2b24],dh
  415c9e:	cwde   
  415c9f:	fdivr  st,st(5)
  415ca1:	lock stos BYTE PTR es:[edi],al
  415ca3:	aaa    
  415ca4:	cld    
  415ca5:	mov    ah,0xe4
  415ca7:	aam    0x87
  415ca9:	jp     0x415d10
  415cab:	mov    ebx,DWORD PTR [ebx-0x31]
  415cae:	mov    ecx,0x217e71b8
  415cb3:	mov    BYTE PTR [ebx-0x39],al
  415cb6:	shr    esp,1
  415cb8:	ins    DWORD PTR es:[edi],dx
  415cb9:	ret    
  415cba:	inc    esi
  415cbb:	fldcw  WORD PTR [eax-0x65]
  415cbe:	adc    al,BYTE PTR [eax+eax*1-0x3e]
  415cc2:	(bad)  
  415cc4:	push   eax
  415cc5:	xchg   edi,eax
  415cc6:	rcr    al,0xfd
  415cc9:	mov    al,ds:0x9b3972c8
  415cce:	inc    ebx
  415ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cd0:	sar    DWORD PTR [eax-0x1b72ac7b],cl
  415cd6:	pop    ss
  415cd7:	mov    edi,0xe7890b37
  415cdc:	mov    ah,bh
  415cde:	seta   bl
  415ce1:	cli    
  415ce2:	or     esi,DWORD PTR [esi]
  415ce4:	fild   DWORD PTR [eax]
	...
  415cf2:	add    BYTE PTR [eax],al
  415cf4:	xlat   BYTE PTR ds:[ebx]
  415cf5:	imul   esi,DWORD PTR [ebx-0x53c2c0bc],0xffffffd3
  415cfc:	out    dx,eax
  415cfd:	pop    ds
  415cfe:	loopne 0x415cd7
  415d00:	push   edx
  415d01:	bsr    ecx,DWORD PTR [eax-0x1448f004]
  415d08:	pop    edi
  415d09:	adc    eax,DWORD PTR [esi]
  415d0b:	fstp   TBYTE PTR [esi-0x3bce10fb]
  415d11:	test   bh,dh
  415d13:	xor    edx,DWORD PTR [edi]
  415d15:	sti    
  415d16:	icebp  
  415d17:	fisub  DWORD PTR [edx]
  415d19:	outs   dx,BYTE PTR ds:[esi]
  415d1a:	inc    edx
  415d1b:	lea    ebp,[ebx]
  415d1d:	ins    DWORD PTR es:[edi],dx
  415d1e:	test   eax,0x60753f0b
  415d23:	loopne 0x415cad
  415d25:	sbb    al,0x5b
  415d27:	add    al,0x3f
  415d29:	enter  0x321a,0x92
  415d2d:	inc    ebx
  415d2e:	sbb    al,0xc
  415d30:	(bad)  
  415d31:	xchg   esp,eax
  415d32:	jecxz  0x415cbc
  415d34:	mov    esp,0xe2daad47
  415d39:	ja     0x415cca
  415d3b:	cwde   
  415d3c:	fmul   DWORD PTR [esi]
  415d3e:	out    0x6d,eax
  415d40:	aas    
  415d41:	mov    al,ds:0xc8084fb3
  415d46:	jg     0x415dbc
  415d48:	ror    DWORD PTR [esi],0x86
  415d4b:	adc    al,0x8d
  415d4d:	inc    ecx
  415d4e:	imul   esi,DWORD PTR [edi-0x16ff76d5],0x2b32c3b4
	...
  415d64:	add    BYTE PTR [eax],al
  415d66:	add    BYTE PTR [eax+0x73e50811],bh
  415d6c:	add    al,0x83
  415d6e:	loope  0x415de6
  415d70:	or     al,0xfd
  415d72:	call   0x424225b3
  415d77:	push   eax
  415d78:	inc    edi
  415d79:	lock jo 0x415d3b
  415d7c:	xchg   ebx,eax
  415d7d:	(bad)  
  415d7e:	ds xchg ebp,eax
  415d80:	(bad)  
  415d82:	inc    edx
  415d83:	dec    esp
  415d84:	inc    ecx
  415d85:	xor    DWORD PTR [ebp+0x70fd0c86],0xffffffbf
  415d8c:	mov    edi,esi
  415d8e:	push   ds
  415d8f:	jne    0x415d9d
  415d91:	sbb    DWORD PTR [ebp+0x62fd0c66],0xffffffb7
  415d98:	mov    edi,esi
  415d9a:	push   es
  415d9b:	adc    eax,0xb9eabebc
  415da0:	sub    BYTE PTR [ebp+0x62],bh
  415da3:	(bad)  
  415da4:	mov    esi,?
  415da6:	out    dx,al
  415da7:	push   es
  415da8:	mov    esp,0x102c26b6
  415dad:	mov    al,ch
  415daf:	inc    bh
  415db1:	add    BYTE PTR [edx],ch
  415db3:	add    DWORD PTR [edi-0x6],0x80c969e1
  415dba:	add    al,BYTE PTR [ebx-0x67]
  415dbd:	(bad)  
  415dbe:	pop    ss
  415dbf:	sub    eax,0x6b76920
  415dc4:	or     al,0x81
  415dc6:	test   BYTE PTR [ebx+0xa6fd0e],al
	...
  415dd8:	add    BYTE PTR [eax],al
  415dda:	inc    ebx
  415ddb:	dec    eax
  415ddc:	cmp    ecx,ebp
  415dde:	and    DWORD PTR [ebx-0x7f],0xfd0e6b54
  415de5:	mov    ?,WORD PTR [ebx]
  415de7:	cdq    
  415de8:	sahf   
  415de9:	add    BYTE PTR [ebx],dh
  415deb:	lea    eax,[eax+0x4fef31fe]
  415df1:	call   0x42272f
  415df6:	xor    edx,edx
  415df8:	push   edi
  415df9:	mov    edx,esi
  415dfb:	aam    0xc2
  415dfd:	or     BYTE PTR [esi+0x17e585de],ah
  415e03:	and    BYTE PTR [ecx+eax*1+0x564fc996],cl
  415e0a:	fnstcw WORD PTR [ecx+ebx*2]
  415e0d:	or     ch,ch
  415e0f:	jl     0x415e1d
  415e11:	(bad)  
  415e12:	fild   DWORD PTR [ebx-0x2]
  415e15:	call   DWORD PTR [ecx]
  415e17:	aam    0xe8
  415e19:	jmp    DWORD PTR [esi-0x37]
  415e1c:	add    BYTE PTR [edx+0x66],ch
  415e1f:	mov    eax,ds:0xc99774dc
  415e24:	call   0xfb3091fc
  415e29:	xor    DWORD PTR [esi+edi*1-0x7e],edx
  415e2d:	fsubr  QWORD PTR [edx+0x1a88008a]
  415e33:	mov    bl,0x42
  415e35:	sub    DWORD PTR [ecx+ebx*1],0x79
  415e39:	icebp  
  415e3a:	jmp    0x13fd6cc
	...
  415e4b:	add    BYTE PTR [eax],al
  415e4d:	icebp  
  415e4e:	out    dx,eax
  415e4f:	cld    
  415e50:	call   DWORD PTR [esi]
  415e52:	leave  
  415e53:	out    0x54,eax
  415e55:	lahf   
  415e56:	stc    
  415e57:	test   BYTE PTR [ebp-0x50dc6],al
  415e5d:	not    DWORD PTR [edx-0x19]
  415e60:	xor    BYTE PTR [ebp-0x72],bl
  415e63:	je     0x415e63
  415e65:	xchg   ecx,eax
  415e66:	out    dx,eax
  415e67:	test   BYTE PTR [ebp-0x50dde],al
  415e6d:	mov    cl,0x8d
  415e6f:	je     0x415e6f
  415e71:	aas    
  415e72:	fmul   DWORD PTR ss:[ecx-0x225454e]
  415e79:	mov    eax,0xbc019715
  415e7e:	ds pop eax
  415e80:	mov    edx,ebp
  415e82:	adc    dl,bh
  415e84:	std    
  415e85:	mov    al,ds:0x4e3d8eed
  415e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e8b:	mov    edi,edi
  415e8d:	jp     0x415eb0
  415e8f:	add    DWORD PTR [ecx-0x3],eax
  415e92:	mov    eax,ds:0x240210db
  415e97:	cmp    DWORD PTR [ecx],0x56bf4c3f
  415e9d:	or     DWORD PTR [edi-0x29],esi
  415ea0:	sti    
  415ea1:	push   0xe7a384d5
  415ea6:	(bad)  
  415ea8:	std    
  415ea9:	aas    
  415eaa:	lahf   
  415eab:	sbb    al,0x0
  415ead:	retf   0x8485
  415eb0:	mov    ebx,0x0
	...
  415ebd:	add    BYTE PTR [eax],al
  415ebf:	add    bh,al
  415ec1:	mov    ah,0xd8
  415ec3:	std    
  415ec4:	aas    
  415ec5:	xor    al,0x77
  415ec7:	mov    eax,edx
  415ec9:	mov    eax,ds:0x3230fdd7
  415ece:	jmp    0x1629e7a
  415ed3:	pop    ebp
  415ed4:	xor    DWORD PTR [esi],0x5f7aec8a
  415eda:	or     al,0x0
  415edc:	ins    BYTE PTR es:[edi],dx
  415edd:	shr    DWORD PTR ds:0xf4bd8389,cl
  415ee3:	gs mov ah,0xdd
  415ee6:	and    BYTE PTR [ecx+eiz*2],dl
  415ee9:	pushf  
  415eea:	mov    ecx,0xbe984473
  415eef:	mov    esp,DWORD PTR [edi-0xf]
  415ef2:	pop    edx
  415ef3:	mov    edx,0x8ea213e
  415ef8:	retf   0x17c8
  415efb:	hlt    
  415efc:	mov    ecx,0xed150503
  415f01:	mov    ebx,0x476db25e
  415f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f07:	or     al,0xf
  415f09:	and    BYTE PTR [ebx-0x31],ch
  415f0c:	mov    dl,0xb
  415f0e:	(bad)  
  415f10:	cs mov edi,esp
  415f13:	jmp    0x415f7a
  415f15:	adc    DWORD PTR [esi-0x29],ebp
  415f18:	dec    edx
  415f19:	push   ebx
  415f1a:	inc    edx
  415f1b:	xor    ebp,edx
  415f1d:	pop    ds
  415f1e:	xlat   BYTE PTR ds:[ebx]
  415f1f:	into   
  415f20:	mov    cl,BYTE PTR [ebx]
  415f22:	mov    edi,0x37
	...
  415f33:	or     ecx,DWORD PTR [ecx+0x1121ebe7]
  415f39:	inc    esi
  415f3a:	xlat   BYTE PTR ds:[ebx]
  415f3b:	inc    edx
  415f3c:	push   ebx
  415f3d:	and    dh,BYTE PTR [ebx]
  415f3f:	adc    DWORD PTR [eax],esp
  415f41:	xchg   ebx,eax
  415f42:	into   
  415f43:	bound  ecx,QWORD PTR [ebx]
  415f45:	mov    ?,WORD PTR ds:0x3ef05f6
  415f4b:	out    dx,al
  415f4c:	ds mov ebx,0xff77371f
  415f52:	or     cl,BYTE PTR [eax+0xb]
  415f55:	push   cs
  415f56:	test   esi,edi
  415f58:	inc    edi
  415f59:	out    0x3,eax
  415f5b:	aas    
  415f5c:	push   eax
  415f5d:	sbb    edx,DWORD PTR [ebx+0x68]
  415f60:	enter  0xf462,0xb9
  415f64:	mov    dh,0x6a
  415f66:	les    eax,FWORD PTR [ebx+0x47]
  415f69:	stos   BYTE PTR es:[edi],al
  415f6a:	call   DWORD PTR [ebp+0x6c]
  415f6d:	push   ebx
  415f6e:	inc    ebp
  415f6f:	aas    
  415f70:	xchg   esi,eax
  415f71:	(bad)  
  415f72:	fwait
  415f73:	arpl   WORD PTR [eax+ebp*1+0x70b7c604],dx
  415f7a:	repnz mov edi,0xfe82e307
  415f80:	ret    
  415f81:	add    ah,dh
  415f83:	test   al,0x93
  415f85:	aas    
  415f86:	jmp    0xab9a7cf9
  415f8b:	ror    BYTE PTR [edx],1
  415f8d:	push   edx
  415f8e:	jb     0x415fa0
  415f90:	in     al,0x8
  415f92:	cmp    dl,bl
  415f94:	pop    ds
  415f95:	clc    
  415f96:	mov    es,WORD PTR [eax]
	...
  415fa4:	add    BYTE PTR [eax],al
  415fa6:	xchg   ecx,eax
  415fa7:	mov    al,cl
  415fa9:	imul   edi,DWORD PTR [eax+ecx*8],0x98f04100
  415fb0:	aas    
  415fb1:	jmp    0xd9c9186b
  415fb6:	mov    ebp,0x7c6a0408
  415fbb:	ret    
  415fbc:	cmp    edi,DWORD PTR [ebp-0x24ff3508]
  415fc2:	cdq    
  415fc3:	dec    edi
  415fc4:	pop    esp
  415fc5:	aad    0x3
  415fc7:	enter  0xda89,0xc3
  415fcb:	mov    bh,0x81
  415fcd:	sub    ch,BYTE PTR [eax+0x47]
  415fd0:	shr    ch,0x47
  415fd3:	in     al,dx
  415fd4:	jae    0x415f7e
  415fd6:	cmp    al,0x96
  415fd8:	in     eax,dx
  415fd9:	ret    0xc37e
  415fdc:	add    BYTE PTR [ebx+edi*4+0x44058126],dh
  415fe3:	ja     0x41603b
  415fe5:	bound  esi,QWORD PTR [edi-0x40]
  415fe8:	mov    DWORD PTR [eax+edi*1+0x3d],edi
  415fec:	inc    ebx
  415fed:	add    DWORD PTR [edi+esi*2-0x18],ebp
  415ff1:	add    al,0x4
  415ff3:	or     al,0xfd
  415ff5:	pop    esp
  415ff6:	jg     0x416010
  415ff8:	push   eax
  415ff9:	je     0x416079
  415ffb:	rcl    BYTE PTR [eax-0x2f],0x23
  415fff:	adc    ebp,edi
  416001:	(bad)  
  416002:	mov    eax,0xbe39e885
  416007:	pop    es
  416008:	adc    BYTE PTR [eax],al
	...
  416016:	add    BYTE PTR [eax],al
  416018:	add    BYTE PTR [ebp+0x1c],dl
  41601b:	iret   
  41601c:	clc    
  41601d:	test   eax,0x255c67f3
  416022:	test   DWORD PTR [eax],eax
  416024:	lea    esp,[ebx]
  416026:	in     al,dx
  416027:	dec    edi
  416028:	call   0x3c4d48
  41602d:	shr    BYTE PTR cs:[edi+0x41],1
  416031:	(bad)  
  416032:	inc    edx
  416033:	inc    ecx
  416034:	lock jbe 0x416053
  416037:	imul   edi,ecx,0xffffffb9
  41603a:	repz addr16 pop esp
  41603d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41603e:	xchg   BYTE PTR [eax],al
  416040:	lea    edx,[ebx+0x1c]
  416043:	push   eax
  416044:	call   0x3c4d90
  416049:	or     eax,0xe38bfcd1
  41604e:	cmc    
  41604f:	test   BYTE PTR [ebp-0x16],al
  416052:	cmp    al,0x59
  416054:	lock fst st(0)
  416057:	hlt    
  416058:	mov    esp,DWORD PTR [ebx+0x3245851d]
  41605e:	cmp    eax,0x517ee859
  416063:	outs   dx,DWORD PTR ds:[esi]
  416064:	inc    ecx
  416065:	inc    dx
  416067:	inc    ecx
  416068:	clc    
  416069:	xchg   esi,eax
  41606a:	sbb    eax,0xf329f937
  41606f:	fsub   QWORD PTR [di+0x86]
  416074:	(bad)  
  416075:	jecxz  0x41606b
  416077:	dec    edi
  416078:	call   0x3c4e88
	...
  416089:	add    BYTE PTR [eax],al
  41608b:	add    dh,cl
  41608d:	push   eax
  41608e:	outs   dx,DWORD PTR ds:[esi]
  41608f:	inc    ecx
  416090:	push   ss
  416091:	inc    edx
  416092:	inc    ecx
  416093:	call   0xf95c7d4e
  416098:	sbb    esp,esi
  41609a:	xchg   BYTE PTR [ebp-0x16],bl
  41609d:	aas    
  41609e:	inc    ecx
  41609f:	lock aas 
  4160a1:	test   al,0x3e
  4160a3:	cld    
  4160a4:	(bad)  
  4160a5:	fcmovnbe st,st(4)
  4160a7:	mov    DWORD PTR [edx-0x28bc77b5],edx
  4160ad:	xchg   edi,eax
  4160ae:	ds hlt 
  4160b0:	mov    dh,0xb3
  4160b2:	in     al,dx
  4160b3:	push   0x41d37b
  4160b8:	ret    0xdcdb
  4160bb:	push   eax
  4160bc:	xlat   BYTE PTR ds:[ebx]
  4160bd:	addr16 fscale 
  4160c0:	rol    dh,0x38
  4160c3:	je     0x4160c3
  4160c5:	push   ds
  4160c6:	xchg   BYTE PTR [ebx-0x51],al
  4160c9:	scas   al,BYTE PTR es:[edi]
  4160ca:	in     al,dx
  4160cb:	jmp    0x6915ea77
  4160d0:	add    ecx,DWORD PTR [ebx]
  4160d2:	inc    edx
  4160d3:	add    dl,cl
  4160d5:	jecxz  0x4160c3
  4160d7:	push   eax
  4160d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d9:	sbb    ecx,0xfffffffd
  4160dc:	mov    BYTE PTR [eax-0x7a],dl
  4160df:	inc    ebx
  4160e0:	xchg   DWORD PTR [esi-0x17],ecx
  4160e3:	test   BYTE PTR [edi+0x79],dh
  4160e6:	aam    0x8b
  4160e8:	stc    
  4160e9:	push   ss
  4160ea:	xor    DWORD PTR [ebx-0x17ce30fe],ecx
	...
  4160fc:	add    BYTE PTR [eax],al
  4160fe:	add    al,ch
  416100:	(bad)  
  416101:	aam    0xfd
  416103:	mov    esp,0xc255f1e0
  416108:	pop    ebx
  416109:	jmp    0xd975b85e
  41610e:	std    
  41610f:	inc    eax
  416110:	push   eax
  416111:	cmp    BYTE PTR [edi+0x8bf352b],al
  416117:	aas    
  416118:	fs mov ah,bl
  41611b:	mov    esi,0x20ff85d5
  416120:	repnz das 
  416122:	push   esi
  416123:	jo     0x41618f
  416125:	ss or  ah,al
  416128:	enter  0x5c,0xb4
  41612c:	dec    ebp
  41612d:	rol    BYTE PTR [bp+si],cl
  416130:	or     BYTE PTR [edi],dh
  416132:	fcom   QWORD PTR [ebx+0x65d3ce06]
  416138:	enter  0xb04f,0x73
  41613c:	mov    edi,esp
  41613e:	fcmovnu st,st(0)
  416140:	add    eax,0x1a28d3b6
  416145:	popa   
  416146:	xchg   bl,dh
  416148:	jl     0x416172
  41614a:	add    al,0xb7
  41614c:	int3   
  41614d:	fld    DWORD PTR [ebp-0x42]
  416150:	add    ch,bh
  416152:	dec    edi
  416153:	test   al,0xf
  416155:	fs dec esp
  416157:	mov    cl,0x7
  416159:	xchg   BYTE PTR ds:0xdee7c83f,al
  41615f:	or     edx,DWORD PTR [ecx+0x77]
  416162:	jge    0x416164
	...
  416170:	add    BYTE PTR [eax],al
  416172:	mov    esp,0x92d36d7c
  416177:	mov    ecx,0x534fdf39
  41617c:	fs pop eax
  41617e:	add    DWORD PTR [edi],0x84bc7d56
  416184:	dec    ebp
  416185:	shl    DWORD PTR [edx+0x7],cl
  416188:	ins    BYTE PTR es:[edi],dx
  416189:	pop    eax
  41618a:	imul   eax,DWORD PTR [edi],0x84b47f3e
  416190:	xor    eax,0x6dd75ad3
  416195:	pop    es
  416196:	mov    esi,0x847ea5e8
  41619b:	test   BYTE PTR ds:0x5dd742d3,bl
  4161a1:	adc    ebp,DWORD PTR [eax+0x0]
  4161a4:	pop    edi
  4161a5:	add    eax,0x46e7caf9
  4161aa:	jge    0x4161f7
  4161ac:	add    esp,ebp
  4161ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161af:	int    0x0
  4161b1:	imul   ecx,DWORD PTR [eax-0x38],0x9e552773
  4161b8:	call   0xfd464f06
  4161bd:	push   0xffffffd7
  4161bf:	jg     0x4161bf
  4161c1:	(bad)  
  4161c2:	or     eax,0x3b1280c8
  4161c7:	jnp    0x41616e
  4161c9:	push   0xffffffcf
  4161cb:	jg     0x4161cb
  4161cd:	mov    esi,0x5773c80d
  4161d2:	mov    edi,0xaf804a
	...
  4161e3:	add    BYTE PTR [eax],al
  4161e5:	in     eax,dx
  4161e6:	add    al,0x50
  4161e8:	xchg   ecx,eax
  4161e9:	out    dx,al
  4161ea:	add    bh,ch
  4161ec:	sahf   
  4161ed:	or     eax,0x986059a6
  4161f2:	mov    ds:0x9b3ce1c2,al
  4161f7:	xchg   DWORD PTR [esp+ebp*2+0x20175198],ecx
  4161fe:	fwait
  4161ff:	or     BYTE PTR [edx+0x4f],ah
  416202:	aam    0x89
  416204:	hlt    
  416205:	mov    WORD PTR [ebp-0x28bf8c39],?
  41620b:	mov    BYTE PTR [ebp-0x1275ffc1],ah
  416211:	jae    0x416261
  416213:	add    al,0xf0
  416215:	sti    
  416216:	dec    eax
  416217:	div    ecx
  416219:	clc    
  41621a:	repnz push eax
  41621c:	fwait
  41621d:	test   BYTE PTR [ebx],dh
  41621f:	cli    
  416220:	ss ins DWORD PTR es:[edi],dx
  416222:	mov    dh,0xd2
  416224:	pop    esp
  416225:	push   eax
  416226:	loopne 0x4161b2
  416228:	in     eax,dx
  416229:	xor    bh,BYTE PTR [edx-0x75c48f01]
  41622f:	adc    DWORD PTR [ebx],0xd8f08234
  416235:	jmp    0x8812:0xb004452
  41623c:	add    al,0xe4
  41623e:	mov    edi,DWORD PTR [edi-0x6]
  416241:	push   ds
  416242:	xchg   esi,eax
  416243:	out    dx,eax
  416244:	pop    esi
  416245:	lods   eax,DWORD PTR ds:[esi]
  416246:	test   ah,ch
  416248:	pop    ebp
	...
  416255:	add    BYTE PTR [eax],al
  416257:	add    ah,dl
  416259:	enter  0x0,0x16
  41625d:	retf   0x0
  416260:	out    0xc9,al
  416262:	add    BYTE PTR [eax],al
  416264:	out    0xc9,al
  416266:	add    BYTE PTR [eax],al
  416268:	(bad)  
  416269:	leave  
  41626a:	add    BYTE PTR [eax],al
  41626c:	(bad)  
  41626d:	leave  
  41626e:	add    BYTE PTR [eax],al
  416270:	out    0xc9,al
  416272:	add    BYTE PTR [eax],al
  416274:	out    0xc9,al
  416276:	add    BYTE PTR [eax],al
  416278:	(bad)  
  416279:	leave  
  41627a:	add    BYTE PTR [eax],al
  41627c:	(bad)  
  41627d:	leave  
  41627e:	add    BYTE PTR [eax],al
  416280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416281:	leave  
  416282:	add    BYTE PTR [eax],al
  416284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416285:	leave  
  416286:	add    BYTE PTR [eax],al
  416288:	xchg   esi,eax
  416289:	leave  
  41628a:	add    BYTE PTR [eax],al
  41628c:	xchg   esi,eax
  41628d:	leave  
  41628e:	add    BYTE PTR [eax],al
  416290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416291:	leave  
  416292:	add    BYTE PTR [eax],al
  416294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416295:	leave  
  416296:	add    BYTE PTR [eax],al
  416298:	xchg   esi,eax
  416299:	leave  
  41629a:	add    BYTE PTR [eax],al
  41629c:	xchg   esi,eax
  41629d:	leave  
  41629e:	add    BYTE PTR [eax],al
  4162a0:	leavew 
  4162a2:	add    BYTE PTR [eax],al
  4162a4:	leavew 
  4162a6:	add    BYTE PTR [eax],al
  4162a8:	push   esi
  4162a9:	leave  
  4162aa:	add    BYTE PTR [eax],al
  4162ac:	push   esi
  4162ad:	leave  
  4162ae:	add    BYTE PTR [eax],al
  4162b0:	leavew 
  4162b2:	add    BYTE PTR [eax],al
  4162b4:	leavew 
  4162b6:	add    BYTE PTR [eax],al
  4162b8:	push   esi
  4162b9:	leave  
	...
  4162ca:	add    BYTE PTR [esi-0x37],dl
  4162cd:	add    BYTE PTR [eax],al
  4162cf:	aas    
  4162d0:	out    dx,eax
  4162d1:	add    BYTE PTR [eax],al
  4162d3:	aas    
  4162d4:	out    dx,eax
  4162d5:	add    BYTE PTR [eax],al
  4162d7:	aas    
  4162d8:	out    dx,eax
  4162d9:	add    BYTE PTR [eax],al
  4162db:	aas    
  4162dc:	out    dx,eax
  4162dd:	add    BYTE PTR [eax],al
  4162df:	aas    
  4162e0:	out    dx,eax
  4162e1:	add    BYTE PTR [eax],al
  4162e3:	aas    
  4162e4:	out    dx,eax
  4162e5:	add    BYTE PTR [eax],al
  4162e7:	aas    
  4162e8:	out    dx,eax
  4162e9:	add    BYTE PTR [eax],al
  4162eb:	aas    
  4162ec:	out    dx,eax
  4162ed:	add    BYTE PTR [eax],al
  4162ef:	aas    
  4162f0:	out    dx,eax
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	aas    
  4162f4:	out    dx,eax
  4162f5:	add    BYTE PTR [eax],al
  4162f7:	aas    
  4162f8:	out    dx,eax
  4162f9:	add    BYTE PTR [eax],al
  4162fb:	aas    
  4162fc:	out    dx,eax
  4162fd:	add    BYTE PTR [eax],al
  4162ff:	aas    
  416300:	out    dx,eax
  416301:	add    BYTE PTR [eax],al
  416303:	aas    
  416304:	out    dx,eax
  416305:	add    BYTE PTR [eax],al
  416307:	aas    
  416308:	out    dx,eax
  416309:	add    BYTE PTR [eax],al
  41630b:	aas    
  41630c:	out    dx,eax
  41630d:	add    BYTE PTR [eax],al
  41630f:	aas    
  416310:	out    dx,eax
  416311:	add    BYTE PTR [eax],al
  416313:	aas    
  416314:	out    dx,eax
  416315:	add    BYTE PTR [eax],al
  416317:	aas    
  416318:	out    dx,eax
  416319:	add    BYTE PTR [eax],al
  41631b:	aas    
  41631c:	out    dx,eax
  41631d:	add    BYTE PTR [eax],al
  41631f:	aas    
  416320:	out    dx,eax
  416321:	add    BYTE PTR [eax],al
  416323:	aas    
  416324:	out    dx,eax
  416325:	add    BYTE PTR [eax],al
  416327:	aas    
  416328:	out    dx,eax
  416329:	add    BYTE PTR [eax],al
  41632b:	aas    
  41632c:	out    dx,eax
	...
  41633d:	add    BYTE PTR [edi],bh
  41633f:	out    dx,eax
  416340:	add    BYTE PTR [eax],al
  416342:	aas    
  416343:	out    dx,eax
  416344:	add    BYTE PTR [eax],al
  416346:	aas    
  416347:	out    dx,eax
  416348:	add    BYTE PTR [eax],al
  41634a:	aas    
  41634b:	out    dx,eax
  41634c:	add    BYTE PTR [eax],al
  41634e:	aas    
  41634f:	out    dx,eax
  416350:	add    BYTE PTR [eax],al
  416352:	aas    
  416353:	out    dx,eax
  416354:	add    BYTE PTR [eax],al
  416356:	aas    
  416357:	enter  0x3e7,0x3f
  41635b:	enter  0x3e7,0x3f
  41635f:	enter  0xfde4,0x45
  416363:	into   
  416364:	mov    BYTE PTR [ebx],dh
  416366:	jnp    0x4163d9
  416368:	mov    DWORD PTR [ebx],esp
  41636a:	test   eax,0x6813cdb9
  41636f:	test   al,0xc7
  416371:	push   ds
  416372:	pop    edi
  416373:	test   al,0x73
  416375:	pop    ebx
  416376:	pushf  
  416377:	test   al,0x5a
  416379:	popa   
  41637a:	pusha  
  41637b:	je     0x4163c8
  41637d:	imul   ebp,DWORD PTR [ebp-0x58],0xa85c5c5b
  416384:	dec    ecx
  416385:	imul   esi,DWORD PTR [ebx+0x7c],0xbe1f524c
  41638c:	adc    BYTE PTR [ecx],al
  41638e:	inc    ebp
  41638f:	xchg   DWORD PTR [esi+0x54],eax
  416392:	dec    eax
  416393:	jbe    0x4163d5
  416395:	addr16 push edi
  416397:	jl     0x416360
  416399:	sbb    ebx,DWORD PTR [esi-0x4f]
  41639c:	(bad)  
  41639d:	adc    al,0x70
  41639f:	ror    edi,0x20
	...
  4163ae:	add    BYTE PTR [eax],al
  4163b0:	add    BYTE PTR [ebp-0x48],ch
  4163b3:	xlat   BYTE PTR ds:[ebx]
  4163b4:	or     al,0x5f
  4163b6:	data16 add BYTE PTR [esi*8+0x22520472],ah
  4163be:	ins    DWORD PTR es:[edi],dx
  4163bf:	add    eax,0xfa65f824
  4163c4:	push   0x4507b419
  4163c9:	adc    esi,DWORD PTR [edi+eax*1+0x32]
  4163cd:	loopne 0x416439
  4163cf:	mov    edi,0xb9a7ee57
  4163d4:	push   0x55b96cee
  4163d9:	fsubr  QWORD PTR [ebx+0xd]
  4163dc:	add    DWORD PTR [ebp-0x2b],eax
  4163df:	add    bl,ah
  4163e1:	push   DWORD PTR [edx+esi*2-0x3c]
  4163e5:	sbb    al,0x6b
  4163e7:	outs   dx,BYTE PTR ds:[esi]
  4163e8:	(bad)  
  4163e9:	loope  0x416460
  4163eb:	imul   ecx,DWORD PTR [eax-0x78929470],0x46
  4163f2:	test   al,0x68
  4163f4:	xchg   ebp,eax
  4163f5:	nop
  4163f6:	js     0x416432
  4163f8:	(bad)  
  4163f9:	inc    ecx
  4163fa:	jge    0x416471
  4163fc:	jbe    0x416438
  4163fe:	imul   esp,DWORD PTR [edx+0x7a],0xffffffa7
  416402:	jb     0x416475
  416404:	jle    0x4163a8
  416406:	jl     0x41647d
  416408:	dec    eax
  416409:	ins    DWORD PTR es:[edi],dx
  41640a:	addr16 cs dec edx
  41640d:	cwde   
  41640e:	outs   dx,DWORD PTR ds:[esi]
  41640f:	sub    eax,0xacdf6e4
  416414:	jmp    0x416419
	...
  416421:	add    BYTE PTR [eax],al
  416423:	add    BYTE PTR [eax+ecx*8],bh
  416426:	add    cl,ch
  416428:	cmp    al,0xc8
  41642a:	add    cl,ch
  41642c:	cmp    al,0xc8
  41642e:	add    cl,ch
  416430:	cmp    al,0xc8
  416432:	add    cl,ch
  416434:	cmp    al,0xc8
  416436:	add    cl,ch
  416438:	cmp    al,0xc8
  41643a:	add    cl,ch
  41643c:	cmp    al,0xc8
  41643e:	add    cl,ch
  416440:	cmp    al,0xc8
  416442:	add    cl,ch
  416444:	cmp    al,0xc8
  416446:	add    cl,ch
  416448:	cmp    al,0xc8
  41644a:	add    cl,ch
  41644c:	cmp    al,0xc8
  41644e:	add    cl,ch
  416450:	cmp    al,0xc8
  416452:	add    cl,ch
  416454:	cmp    al,0xc8
  416456:	add    cl,ch
  416458:	cmp    al,0xc8
  41645a:	add    cl,ch
  41645c:	cmp    al,0xc8
  41645e:	add    BYTE PTR [ecx+ecx*8+0x17286991],dl
  416465:	scas   eax,DWORD PTR es:[edi]
  416466:	add    al,0x0
  416468:	and    BYTE PTR ds:0x293bec54,bh
  41646e:	bound  ebp,QWORD PTR ds:0x57074f79
  416474:	dec    ebx
  416475:	add    BYTE PTR ds:0x65019211,al
  41647b:	in     al,0xee
  41647d:	(bad)  
  41647e:	dec    edi
  41647f:	mov    fs,WORD PTR [esi]
  416481:	mov    BYTE PTR [eax],0x0
  416484:	push   ss
  416485:	mov    BYTE PTR [eax],0x0
	...
  416494:	add    BYTE PTR [eax],al
  416496:	add    BYTE PTR [esi],dl
  416498:	mov    BYTE PTR [eax],0x0
  41649b:	mov    BYTE PTR es:[eax],0x0
  41649f:	mov    BYTE PTR es:[eax],0x0
  4164a3:	push   ss
  4164a4:	mov    BYTE PTR [eax],0x0
  4164a7:	push   ss
  4164a8:	mov    BYTE PTR [eax],0x0
  4164ab:	out    0xc5,al
  4164ad:	add    BYTE PTR [eax],al
  4164af:	out    0xc5,al
  4164b1:	add    BYTE PTR [eax],al
  4164b3:	(bad)  
  4164b4:	lds    eax,FWORD PTR [eax]
  4164b6:	add    dh,dl
  4164b8:	lds    eax,FWORD PTR [eax]
  4164ba:	add    dh,ah
  4164bc:	lds    eax,FWORD PTR [eax]
  4164be:	add    dh,ah
  4164c0:	lds    eax,FWORD PTR [eax]
  4164c2:	add    dh,dl
  4164c4:	lds    eax,FWORD PTR [eax]
  4164c6:	add    dh,dl
  4164c8:	lds    eax,FWORD PTR [eax]
  4164ca:	add    BYTE PTR [esi-0x59ffff3b],ah
  4164d0:	lds    eax,FWORD PTR [eax]
  4164d2:	add    BYTE PTR [esi-0x69ffff3b],dl
  4164d8:	lds    eax,FWORD PTR [eax]
  4164da:	add    BYTE PTR [esi-0x59ffff3b],ah
  4164e0:	lds    eax,FWORD PTR [eax]
  4164e2:	add    BYTE PTR [esi-0x69ffff3b],dl
  4164e8:	lds    eax,FWORD PTR [eax]
  4164ea:	add    BYTE PTR [esi-0x3b],ah
  4164ed:	add    BYTE PTR [eax],al
  4164ef:	aas    
  4164f0:	out    dx,eax
  4164f1:	add    BYTE PTR [eax],al
  4164f3:	aas    
  4164f4:	out    dx,eax
  4164f5:	add    BYTE PTR [eax],al
  4164f7:	aas    
  4164f8:	out    dx,eax
	...
  416509:	add    BYTE PTR [edi],bh
  41650b:	out    dx,eax
  41650c:	add    BYTE PTR [eax],al
  41650e:	aas    
  41650f:	out    dx,eax
  416510:	add    BYTE PTR [eax],al
  416512:	aas    
  416513:	out    dx,eax
  416514:	add    BYTE PTR [eax],al
  416516:	aas    
  416517:	out    dx,eax
  416518:	add    BYTE PTR [eax],al
  41651a:	aas    
  41651b:	out    dx,eax
  41651c:	add    BYTE PTR [eax],al
  41651e:	aas    
  41651f:	out    dx,eax
  416520:	add    BYTE PTR [eax],al
  416522:	aas    
  416523:	out    dx,eax
  416524:	add    BYTE PTR [eax],al
  416526:	aas    
  416527:	out    dx,eax
  416528:	add    BYTE PTR [eax],al
  41652a:	aas    
  41652b:	out    dx,eax
  41652c:	add    BYTE PTR [eax],al
  41652e:	aas    
  41652f:	out    dx,eax
  416530:	add    BYTE PTR [eax],al
  416532:	aas    
  416533:	out    dx,eax
  416534:	add    BYTE PTR [eax],al
  416536:	aas    
  416537:	out    dx,eax
  416538:	add    BYTE PTR [eax],al
  41653a:	aas    
  41653b:	out    dx,eax
  41653c:	add    BYTE PTR [eax],al
  41653e:	aas    
  41653f:	out    dx,eax
  416540:	add    BYTE PTR [eax],al
  416542:	aas    
  416543:	out    dx,eax
  416544:	add    BYTE PTR [eax],al
  416546:	aas    
  416547:	out    dx,eax
  416548:	add    BYTE PTR [eax],al
  41654a:	aas    
  41654b:	out    dx,eax
  41654c:	add    BYTE PTR [eax],al
  41654e:	aas    
  41654f:	out    dx,eax
  416550:	add    BYTE PTR [eax],al
  416552:	aas    
  416553:	out    dx,eax
  416554:	add    BYTE PTR [eax],al
  416556:	aas    
  416557:	out    dx,eax
  416558:	add    BYTE PTR [eax],al
  41655a:	aas    
  41655b:	out    dx,eax
  41655c:	add    BYTE PTR [eax],al
  41655e:	aas    
  41655f:	out    dx,eax
  416560:	add    BYTE PTR [eax],al
  416562:	aas    
  416563:	out    dx,eax
  416564:	add    BYTE PTR [eax],al
  416566:	aas    
  416567:	out    dx,eax
  416568:	add    BYTE PTR [eax],al
  41656a:	aas    
  41656b:	out    dx,eax
	...
  41657c:	add    BYTE PTR [edi],bh
  41657e:	out    dx,eax
  41657f:	add    BYTE PTR [eax],al
  416581:	aas    
  416582:	out    dx,eax
  416583:	add    BYTE PTR [eax],al
  416585:	aas    
  416586:	enter  0x3e7,0x3f
  41658a:	enter  0x3e7,0x3f
  41658e:	enter  0x3e7,0x3f
  416592:	enter  0x3e7,0x3f
  416596:	enter  0x3e7,0x3f
  41659a:	enter  0x3e7,0x3f
  41659e:	enter  0x3e7,0x3f
  4165a2:	enter  0x3e7,0x3f
  4165a6:	enter  0x3e7,0x3f
  4165aa:	enter  0x3e7,0x3f
  4165ae:	enter  0x11d8,0x6e
  4165b2:	mov    ah,0xd4
  4165b4:	adc    eax,0x5088783f
  4165b9:	mov    ?,WORD PTR [edi-0x72]
  4165bc:	push   ecx
  4165bd:	fwait
  4165be:	enter  0x5b77,0x8f
  4165c2:	push   0xffffff89
  4165c4:	add    edx,DWORD PTR [eax+0x73564c77]
  4165ca:	and    edi,0x1bbb2d14
  4165d0:	adc    DWORD PTR [edi],edi
  4165d2:	jb     0x416618
  4165d4:	push   edi
  4165d5:	ins    BYTE PTR es:[edi],dx
  4165d6:	jnp    0x4165bf
  4165d8:	adc    al,0xd
  4165da:	mov    ebx,0xb70910f3
  4165df:	out    dx,eax
  4165e0:	add    eax,DWORD PTR [eax]
	...
  4165ee:	add    BYTE PTR [eax],al
  4165f0:	sbb    BYTE PTR [edx+0x693f0ffa],bh
  4165f6:	or     DWORD PTR [edi+0x68],esp
  4165f9:	mov    edx,0x652303da
  4165fe:	sbb    ebx,DWORD PTR [ecx+0x1c]
  416601:	jno    0x416600
  416603:	add    ebp,DWORD PTR [ebx]
  416605:	gs cli 
  416607:	dec    edi
  416608:	aas    
  416609:	ins    BYTE PTR es:[edi],dx
  41660a:	push   cs
  41660b:	push   edx
  41660c:	sbb    al,0xc8
  41660e:	add    BYTE PTR [eax-0x6ff46ce],bh
  416614:	sbb    edi,DWORD PTR [ecx+0x71]
  416617:	ficom  WORD PTR ds:0x3b18647a
  41661d:	jo     0x416682
  41661f:	lds    edx,FWORD PTR [eax]
  416621:	ins    DWORD PTR es:[edi],dx
  416622:	add    BYTE PTR [ebp+eax*1+0xbcc696e],bh
  416629:	enter  0xbb64,0xdb
  41662d:	fs ins DWORD PTR es:[edi],dx
  41662f:	(bad)  
  416630:	cmp    al,0x74
  416632:	jb     0x4165e8
  416634:	jmp    0x53d7d4ac
  416639:	enter  0xd82f,0x4b
  41663d:	scas   eax,DWORD PTR es:[edi]
  41663e:	das    
  41663f:	fdivr  DWORD PTR [edi+eiz*2]
  416642:	ins    BYTE PTR es:[edi],dx
  416643:	jle    0x4165d3
  416645:	imul   esi,DWORD PTR [edi-0x6a],0x6f
  416649:	enter  0xbb2f,0x29
  41664d:	mov    ah,0x33
  41664f:	mov    edi,0x8171c82d
	...
  416660:	add    BYTE PTR [eax],al
  416662:	add    BYTE PTR [ebx+0x435e6d64],bl
  416668:	scas   eax,DWORD PTR es:[edi]
  416669:	xor    bl,BYTE PTR [edx]
  41666b:	dec    edi
  41666c:	mov    ebx,0xb73b1e36
  416671:	add    BYTE PTR [edx-0x7d],cl
  416674:	jp     0x4166dd
  416676:	cmp    ch,BYTE PTR [edi-0x38]
  416679:	jno    0x4166af
  41667b:	jne    0x4166f6
  41667d:	push   0x6b6540
  416682:	cmp    al,0x5a
  416684:	jns    0x4166fa
  416686:	or     al,0x11
  416688:	enter  0xe61,0x16
  41668c:	js     0x416701
  41668e:	sbb    eax,0x19007a1e
  416693:	or     DWORD PTR [edi+0x6e],esp
  416696:	add    BYTE PTR [ebp+0x69],al
  416699:	outs   dx,DWORD PTR ds:[esi]
  41669a:	jae    0x416642
  41669c:	mov    fs,WORD PTR [ebp+0x67]
  41669f:	cmp    DWORD PTR [ecx+0x72],ebp
  4166a2:	add    BYTE PTR [eax],bh
  4166a4:	mov    ds:0x6384746b,eax
  4166a9:	ins    BYTE PTR es:[edi],dx
  4166aa:	ins    BYTE PTR es:[edi],dx
  4166ab:	data16 arpl WORD PTR [esi+0x67],bp
  4166af:	jnp    0x416647
  4166b1:	add    BYTE PTR [edx+0x7b],ch
  4166b4:	xchg   ebp,eax
  4166b5:	jno    0x41672a
  4166b7:	push   edi
  4166b8:	retf   0x322d
  4166bb:	push   ebp
  4166bc:	shl    DWORD PTR [edx],cl
  4166be:	xor    edx,DWORD PTR [esi-0x67]
  4166c1:	push   0x76678a61
  4166c6:	add    BYTE PTR gs:[eax],al
	...
  4166d5:	add    ah,dl
  4166d7:	leave  
  4166d8:	data16 jb 0x416696
  4166db:	push   0xc9c36f64
  4166e0:	imul   esp,DWORD PTR [bp+si+0x6195],0x6f652672
  4166e9:	fs mov eax,0xb56f6fc9
  4166ef:	popaw  
  4166f1:	jb     0x416709
  4166f3:	xchg   edi,eax
  4166f4:	jno    0x416766
  4166f6:	mov    edx,DWORD PTR [esi-0x3b7f9e97]
  4166fc:	imul   ebp,DWORD PTR [ecx+0x75],0x22655d9c
  416703:	les    ebx,FWORD PTR [edi+0x68]
  416706:	mov    ebx,DWORD PTR [ebp-0x5d199a91]
  41670c:	outs   dx,BYTE PTR ds:[esi]
  41670d:	je     0x41678a
  41670f:	xchg   esi,eax
  416710:	outs   dx,BYTE PTR ds:[esi]
  416711:	gs or  al,ah
  416714:	push   0x6f
  416716:	push   ebp
  416717:	pushf  
  416718:	jno    0x41677b
  41671a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41671b:	addr16 jno 0x416781
  41671e:	aas    
  41671f:	retf   0x6d49
  416722:	sub    ch,bh
  416724:	bound  ebp,QWORD PTR [edx+eiz*1+0x2]
  416728:	push   esp
  416729:	arpl   WORD PTR [ebx],bx
  41672b:	out    dx,eax
  41672c:	bound  ebx,QWORD PTR [edi+0xc]
  41672f:	int3   
  416730:	pop    di
  416732:	adc    edi,ebx
  416734:	add    BYTE PTR [ecx-0xd],dh
  416737:	rcpps  xmm6,XMMWORD PTR [ebp+0x0]
	...
  416747:	add    BYTE PTR [eax],al
  416749:	fisub  WORD PTR [eax]
  41674b:	push   esp
  41674c:	add    BYTE PTR [edi],ch
  41674e:	fist   WORD PTR [eax+esi*1]
  416751:	das    
  416752:	fild   WORD PTR [eax+esi*2]
  416755:	rol    BYTE PTR [eax+0x51],cl
  416758:	ins    BYTE PTR es:[edi],dx
  416759:	(bad)  
  41675b:	pop    edx
  41675c:	ins    DWORD PTR es:[edi],dx
  41675d:	int    0xa
  41675f:	bound  ebp,QWORD PTR [esi+0x3f]
  416762:	add    eax,0x57b36762
  416767:	add    DWORD PTR [ecx-0x56],esi
  41676a:	dec    esp
  41676b:	push   esi
  41676c:	arpl   WORD PTR [ebp-0x688e9e11],bp
  416772:	jnp    0x4167d2
  416774:	ja     0x4167b5
  416776:	push   ecx
  416777:	dec    esi
  416778:	jno    0x416705
  41677a:	inc    esp
  41677b:	push   ebx
  41677c:	add    BYTE PTR [edi-0x65899db4],dl
  416782:	jge    0x416785
  416784:	jo     0x4167e8
  416786:	lahf   
  416787:	push   esp
  416788:	arpl   WORD PTR [ebp-0x11],bp
  41678b:	sysexit 
  41678d:	xor    dh,bl
  41678f:	sysexit 
  416791:	sub    bh,ch
  416793:	pop    eax
  416794:	jae    0x4167ff
  416796:	mov    ebx,0x8b3f725d
  41679b:	push   edi
  41679c:	jbe    0x416800
  41679e:	or     DWORD PTR [ecx+0x0],0x5e
  4167a2:	mov    ebp,0xc8227260
  4167a7:	push   ds
  4167a8:	add    al,0x2b
  4167aa:	jo     0x4167ba
  4167ac:	push   edi
	...
  4167b9:	add    BYTE PTR [eax],al
  4167bb:	add    BYTE PTR [eax],cl
  4167bd:	jns    0x4167a6
  4167bf:	bound  edx,QWORD PTR [ecx]
  4167c1:	gs add al,0x58
  4167c4:	push   cs
  4167c5:	enter  0x5c0a,0xf0
  4167c9:	jns    0x4167d6
  4167cb:	pop    ebx
  4167cc:	sbb    al,0xc8
  4167ce:	or     esp,DWORD PTR [ebx+0x11]
  4167d1:	outs   dx,DWORD PTR ds:[esi]
  4167d2:	add    al,0x58
  4167d4:	aas    
  4167d5:	mov    bh,0x18
  4167d7:	adc    esp,DWORD PTR [eax]
  4167d9:	enter  0x5ed1,0xd9
  4167dd:	ins    DWORD PTR es:[edi],dx
  4167de:	shl    BYTE PTR [ecx-0x24],0x79
  4167e2:	out    0x54,eax
  4167e4:	loopne 0x416853
  4167e6:	into   
  4167e7:	push   edi
  4167e8:	fadd   st(7),st
  4167ea:	iret   
  4167eb:	(bad)  
  4167ec:	fldcw  WORD PTR [ebp-0x38]
  4167ef:	pop    ebx
  4167f0:	aas    
  4167f1:	ja     0x4167bb
  4167f3:	dec    ebp
  4167f4:	mov    dl,0x77
  4167f6:	lahf   
  4167f7:	add    esp,DWORD PTR [edi-0x4fac6897]
  4167fd:	enter  0x6284,0xab
  416801:	jbe    0x416783
  416803:	dec    ebx
  416804:	aas    
  416805:	js     0x41678f
  416807:	push   esp
  416808:	mov    cs,eax
  41680a:	mov    BYTE PTR [edx+0x68],ah
  41680d:	imul   ecx,DWORD PTR [eax-0x4b4dc09e],0x18b62e0f
  416817:	add    al,0x90
  416819:	ins    DWORD PTR es:[edi],dx
  41681a:	dec    eax
  41681b:	push   esi
  41681c:	arpl   WORD PTR [ecx-0x19],bp
  41681f:	push   ebp
	...
  41682c:	add    BYTE PTR [eax],al
  41682e:	add    BYTE PTR [edx+0x74],dl
  416831:	aas    
  416832:	pop    ebp
  416833:	imul   esp,DWORD PTR [ebx-0x19],0x466a585e
  41683a:	popa   
  41683b:	dec    ebp
  41683c:	enter  0x4400,0x68
  416840:	je     0x4168aa
  416842:	inc    esp
  416843:	or     eax,0x81771c8
  416848:	ins    DWORD PTR es:[edi],dx
  416849:	jo     0x41686b
  41684b:	inc    ebx
  41684c:	outs   dx,BYTE PTR ds:[esi]
  41684d:	arpl   WORD PTR [edx],bx
  41684f:	or     al,0x63
  416851:	popa   
  416852:	or     BYTE PTR [ebx+0x75],al
  416855:	arpl   WORD PTR ds:0x46b6d1c,dx
  41685b:	inc    ebx
  41685c:	js     0x4168cb
  41685e:	add    bl,BYTE PTR [esi]
  416860:	outs   dx,DWORD PTR ds:[esi]
  416861:	ins    DWORD PTR es:[edi],dx
  416862:	(bad)  
  416863:	cmp    al,0x63
  416865:	ins    BYTE PTR es:[edi],dx
  416866:	(bad)  
  416867:	add    ah,BYTE PTR [edi+0x77]
  41686a:	into   
  41686b:	bts    DWORD PTR [eax],eax
  41686e:	sbb    BYTE PTR [edx-0x55],cl
  416871:	das    
  416872:	sbb    BYTE PTR [ebx+0x6f],al
  416875:	jae    0x416831
  416877:	add    BYTE PTR [ebx+0x703cc66e],bl
  41687d:	arpl   bp,ax
  41687f:	in     al,dx
  416880:	outs   dx,BYTE PTR ds:[esi]
  416881:	arpl   cx,bp
  416883:	xchg   esi,eax
  416884:	ja     0x4168f7
  416886:	popf   
  416887:	xchg   ebx,eax
  416888:	push   0x0
  41688a:	xchg   ebx,eax
  41688b:	mov    ds:0x8a806b79,eax
  416890:	add    BYTE PTR [bp+0x0],bh
	...
  4168a0:	add    BYTE PTR [eax],al
  4168a2:	outs   dx,BYTE PTR ds:[esi]
  4168a3:	fwait
  4168a4:	outs   dx,BYTE PTR ds:[esi]
  4168a5:	mov    ds,WORD PTR [edi+0x6d8474c8]
  4168ab:	je     0x416914
  4168ad:	xchg   DWORD PTR [ecx-0x38],esp
  4168b0:	pop    edi
  4168b1:	jns    0x41683f
  4168b3:	ins    BYTE PTR es:[edi],dx
  4168b4:	arpl   cx,bp
  4168b6:	xchg   edi,eax
  4168b7:	arpl   WORD PTR [ecx+0x51],sp
  4168ba:	pop    esi
  4168bb:	ins    BYTE PTR es:[edi],dx
  4168bc:	ins    BYTE PTR es:[edi],dx
  4168bd:	dec    esp
  4168be:	cmp    edi,DWORD PTR [eax+0x63]
  4168c1:	dec    eax
  4168c2:	pop    esp
  4168c3:	add    BYTE PTR [bx+si],al
  4168c6:	adc    eax,0x83725f69
  4168cb:	cwde   
  4168cc:	add    BYTE PTR [ecx],dh
  4168ce:	(bad)  
  4168cf:	cdq    
  4168d0:	jb     0x416933
  4168d2:	add    eax,0x4f770069
  4168d7:	mov    al,ds:0xa137696c
  4168dc:	add    BYTE PTR [ecx+0x3a],ch
  4168df:	xchg   ebx,eax
  4168e0:	jbe    0x416947
  4168e2:	das    
  4168e3:	xchg   ebx,eax
  4168e4:	jno    0x416918
  4168e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168e7:	xchg   esp,eax
  4168e8:	arpl   WORD PTR gs:[ecx],di
  4168eb:	mov    al,ds:0xccc00061
  4168f0:	ss ss mov al,0xcc
  4168f4:	add    BYTE PTR [ebp-0x6d],ch
  4168f7:	pushf  
  4168f8:	imul   di,WORD PTR [eax-0x3a],0x6163
  4168fe:	and    BYTE PTR [edi+0x73],0x61
  416902:	outs   dx,DWORD PTR ds:[esi]
  416903:	(bad)  
  416904:	data16 jne 0x416907
	...
  416913:	add    BYTE PTR [eax],al
  416915:	test   DWORD PTR [ebp-0x2c6c908b],ebx
  41691b:	add    BYTE PTR [ecx-0x7b],ah
  41691e:	xchg   ebp,eax
  41691f:	push   0x68fa6f
  416924:	push   0x685d9dc7
  416929:	mov    bh,0xc5
  41692b:	jo     0x41699c
  41692d:	mov    ecx,0x9a620095
  416932:	push   0x93af736f
  416937:	arpl   WORD PTR [eax],ax
  416939:	mov    ah,0x91
  41693b:	pop    ebp
  41693c:	push   0x685d91b4
  416941:	out    0xa0,al
  416943:	jne    0x4169b8
  416945:	xchg   esi,eax
  416946:	gs pop edi
  416948:	gs inc edi
  41694a:	les    ebp,FWORD PTR [ecx+0x61]
  41694d:	aas    
  41694e:	fwait
  41694f:	push   eax
  416950:	push   0x61049262
  416955:	pop    esi
  416956:	xchg   ecx,eax
  416957:	popa   
  416958:	fs pop esi
  41695a:	out    dx,eax
  41695b:	dec    edi
  41695c:	addr16 push ebx
  41695e:	mov    ecx,0xbd3f725d
  416963:	push   ebx
  416964:	bound  ebx,QWORD PTR [edx]
  416966:	fst    QWORD PTR [eax+0x0]
  416969:	and    edx,ecx
  41696b:	push   edx
  41696c:	arpl   WORD PTR [ecx],bp
  41696e:	int3   
  41696f:	push   edx
  416970:	add    BYTE PTR [esi],bl
  416972:	fisub  WORD PTR [eax+0x66]
  416975:	sbb    bh,dl
  416977:	add    al,0x72
	...
  416985:	add    BYTE PTR [eax],al
  416987:	add    BYTE PTR [esi],bl
  416989:	into   
  41698a:	pop    esp
  41698b:	arpl   WORD PTR [ebx],dx
  41698d:	out    dx,eax
  41698e:	dec    esi
  41698f:	pop    edi
  416990:	out    0xf8,al
  416992:	pop    esi
  416993:	ins    DWORD PTR es:[edi],dx
  416994:	call   0xd6b4c587
  416999:	adc    ah,BYTE PTR [edx+0x72]
  41699c:	aas    
  41699d:	pop    ds
  41699e:	pop    esi
  41699f:	pop    edi
  4169a0:	jmp    0xdd41b6b8
  4169a5:	cmovge ebp,DWORD PTR [ebx-0x22]
  4169a9:	or     BYTE PTR [ecx],al
  4169ab:	popa   
  4169ac:	rol    BYTE PTR [ecx],1
  4169ae:	pop    eax
  4169af:	addr16 mov ds:0x5eef,al
  4169b3:	pop    edi
  4169b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169b5:	push   ebx
  4169b6:	pop    esi
  4169b7:	ja     0x4169f8
  4169b9:	pop    esi
  4169ba:	push   esp
  4169bb:	popa   
  4169bc:	pushf  
  4169bd:	dec    esp
  4169be:	dec    edi
  4169bf:	das    
  4169c0:	aas    
  4169c1:	jl     0x416a1d
  4169c3:	popa   
  4169c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169c5:	dec    esp
  4169c6:	dec    edx
  4169c7:	add    BYTE PTR [ebp-0x6d9cb2a8],bl
  4169cd:	dec    esp
  4169ce:	add    DWORD PTR [eax+0x62],ebp
  4169d1:	jnp    0x416a28
  4169d3:	ins    DWORD PTR es:[edi],dx
  4169d4:	cs enter 0x5ee7,0x54
  4169d9:	outs   dx,DWORD PTR ds:[esi]
  4169da:	dec    ebp
  4169db:	pop    edi
  4169dc:	push   esp
  4169dd:	enter  0x634b,0x66
  4169e1:	imul   edx,DWORD PTR [ebx+0x63],0x5748753f
  4169e8:	push   0x5c336a
	...
  4169f9:	add    BYTE PTR [eax],al
  4169fb:	pusha  
  4169fc:	enter  0x554a,0x24
  416a00:	js     0x416a4a
  416a02:	push   ebx
  416a03:	aas    
  416a04:	adc    BYTE PTR fs:[ebx+0x14],ah
  416a08:	imul   ecx,DWORD PTR ds:0x8743f60,0x19692b4b
  416a12:	add    al,0x19
  416a14:	imul   edi,ecx,0x11c8144e
  416a1a:	push   ebp
  416a1b:	pop    ss
  416a1c:	push   0xffffffba
  416a1e:	adc    dh,BYTE PTR [ecx]
  416a20:	enter  0x5af9,0xde
  416a24:	outs   dx,DWORD PTR ds:[esi]
  416a25:	enter  0xe351,0xc7
  416a29:	leave  
  416a2a:	push   edi
  416a2b:	fsubr  DWORD PTR [ecx-0x3e]
  416a2e:	adc    dl,BYTE PTR [edi]
  416a30:	mov    dh,0xe7
  416a32:	push   ebx
  416a33:	fsub   QWORD PTR [esi-0x36]
  416a36:	pop    ebx
  416a37:	fdiv   QWORD PTR [edi+eiz*8+0x60]
  416a3b:	shr    BYTE PTR [eax-0x3d],cl
  416a3e:	add    esp,DWORD PTR [ecx-0x63b3419c]
  416a44:	jp     0x416a2d
  416a46:	push   eax
  416a47:	sahf   
  416a48:	mov    cs,WORD PTR [bx-0x64]
  416a4c:	jp     0x416a35
  416a4e:	popa   
  416a4f:	js     0x416ab7
  416a51:	mov    BYTE PTR [ebp+0x70],dl
  416a54:	enter  0x6291,0x94
  416a58:	ins    DWORD PTR es:[edi],dx
  416a59:	jp     0x416a5e
  416a5b:	pusha  
  416a5c:	jnp    0x416a5e
  416a5e:	lea    eax,[eax]
	...
  416a6c:	add    BYTE PTR [eax],al
  416a6e:	call   0x76c8:0x92857197
  416a75:	push   eax
  416a76:	and    BYTE PTR [ebp+ebp*2+0x5b],bh
  416a7a:	and    cl,al
  416a7c:	ins    BYTE PTR es:[edi],dx
  416a7d:	inc    esi
  416a7e:	or     eax,0x3b3f6d6c
  416a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a84:	xor    bh,dl
  416a86:	adc    edi,DWORD PTR [ebp+0x63]
  416a89:	jmp    0xfa732459
  416a8e:	mov    dl,0xa6
  416a90:	add    BYTE PTR [edx],bh
  416a92:	ja     0x416a2b
  416a94:	jb     0x416ab3
  416a96:	jno    0x416b03
  416a98:	imul   ebp,ecx,0x1b6d6b55
  416a9e:	imul   eax,DWORD PTR fs:[eax],0x16
  416aa2:	bound  esp,QWORD PTR [esi+0x6e]
  416aa5:	or     al,0x51
  416aa7:	enter  0x86b,0x54
  416aab:	ins    DWORD PTR es:[edi],dx
  416aac:	addr16 or al,0x43
  416aaf:	jl     0x416b23
  416ab1:	add    BYTE PTR ds:0x3ce0746f,ch
  416ab7:	outs   dx,BYTE PTR gs:[esi]
  416ab9:	int    0x13
  416abb:	data16 arpl cx,bp
  416abe:	push   ebx
  416abf:	mov    ecx,0x691ac831
  416ac4:	add    dl,cl
  416ac6:	adc    al,0x6f
  416ac8:	popa   
  416ac9:	rcl    BYTE PTR [edi],cl
  416acb:	data16 add bl,al
  416ace:	ja     0x416b36
  416ad0:	addr16 mov esi,0x0
	...
  416ade:	add    BYTE PTR [eax],al
  416ae0:	add    BYTE PTR [edx-0x38],ch
  416ae3:	popa   
  416ae4:	xchg   ecx,eax
  416ae5:	jb     0x416b56
  416ae7:	jno    0x416ad2
  416ae9:	ins    BYTE PTR es:[edi],dx
  416aea:	xchg   edi,eax
  416aeb:	jno    0x416a87
  416aed:	push   ebp
  416aee:	mov    eax,0x973c8572
  416af3:	jae    0x416af5
  416af5:	test   DWORD PTR [edi-0x41e9919b],edi
  416afb:	jo     0x416b5e
  416afd:	je     0x416aa5
  416aff:	jne    0x416b01
  416b01:	(bad)  
  416b02:	scas   al,BYTE PTR es:[edi]
  416b03:	imul   ebp,DWORD PTR [ecx-0x70],0x846569cc
  416b0a:	mov    eax,0xa1e66e65
  416b0f:	imul   ebp,DWORD PTR [edi+0x79],0xffffffb8
  416b13:	popa   
  416b14:	add    BYTE PTR [eax-0x42],bh
  416b17:	gs gs jo 0x416abb
  416b1b:	outs   dx,DWORD PTR ds:[esi]
  416b1c:	add    dh,bh
  416b1e:	mov    edx,0xbda66570
  416b23:	push   0x69bb5261
  416b28:	add    BYTE PTR [eax],dh
  416b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b2b:	outs   dx,BYTE PTR ds:[esi]
  416b2c:	je     0x416b79
  416b2e:	mov    edx,0xa6a66f64
  416b33:	imul   ebp,DWORD PTR [edi+0x2d],0xffffffa5
  416b37:	outs   dx,BYTE PTR ds:[esi]
  416b38:	addr16 xchg esi,eax
  416b3a:	mov    ds:0xa142725d,al
  416b3f:	jne    0x416b41
  416b41:	jne    0x416afa
  416b43:	imul   ebp,DWORD PTR [ebx+0x0],0x0
	...
  416b53:	add    BYTE PTR [ebx-0x4d],bh
  416b56:	add    BYTE PTR [edi],dh
  416b58:	dec    ecx
  416b59:	repz xor eax,DWORD PTR [eax]
  416b5c:	jl     0x416b17
  416b5e:	outs   dx,DWORD PTR ds:[esi]
  416b5f:	gs jbe 0x416b04
  416b62:	add    BYTE PTR [ebx+ecx*4-0x53],ch
  416b66:	addr16 jns 0x416bbf
  416b69:	scas   al,BYTE PTR es:[edi]
  416b6a:	gs addr16 (bad) 
  416b6d:	mov    ebp,0xad266c5d
  416b72:	add    BYTE PTR [esi+ecx*8-0x50],dh
  416b76:	outs   dx,BYTE PTR ds:[esi]
  416b77:	fs mov ebx,0x3f7300bb
  416b7d:	dec    edi
  416b7e:	sub    al,0x72
  416b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b81:	pop    ebx
  416b82:	add    DWORD PTR [edx-0x62],esp
  416b85:	pop    ebp
  416b86:	and    eax,0x27df8b67
  416b8b:	outs   dx,BYTE PTR ds:[esi]
  416b8c:	jae    0x416bd2
  416b8e:	xor    eax,DWORD PTR [eax]
  416b90:	pop    esi
  416b91:	jne    0x416bc8
  416b93:	push   0x399d58
  416b98:	pop    esp
  416b99:	xchg   BYTE PTR [esi],dh
  416b9b:	jbe    0x416bff
  416b9d:	xchg   ebx,eax
  416b9e:	cmp    BYTE PTR [ebx+0x3f],ah
  416ba1:	xchg   DWORD PTR [edi],ebp
  416ba3:	popa   
  416ba4:	push   esp
  416ba5:	test   BYTE PTR [ecx],bh
  416ba7:	add    BYTE PTR [edi-0x7a],cl
  416baa:	aaa    
  416bab:	arpl   WORD PTR ds:0x216322df,bp
  416bb1:	mov    DWORD PTR [ecx],esp
  416bb3:	imul   edx,DWORD PTR [esi],0xffffffdd
  416bb6:	add    al,0x67
	...
  416bc4:	add    BYTE PTR [eax],al
  416bc6:	add    BYTE PTR [ebx],dl
  416bc8:	(bad)  
  416bc9:	cmp    ah,BYTE PTR [ebx+0x16]
  416bcc:	into   
  416bcd:	xor    eax,0x32103f1f
  416bd2:	xor    dl,BYTE PTR [eax]
  416bd4:	xor    ah,BYTE PTR [esi]
  416bd6:	add    BYTE PTR [ecx],cl
  416bd8:	fdiv   DWORD PTR [ebx+eiz*2]
  416bdb:	in     eax,dx
  416bdc:	fisub  WORD PTR [edi]
  416bde:	arpl   cx,sp
  416be0:	retf   
  416be1:	xor    esp,DWORD PTR [edi-0x14]
  416be4:	fisubr WORD PTR [ebx]
  416be6:	outs   dx,BYTE PTR ds:[esi]
  416be7:	(bad)  
  416be8:	or     eax,0x103f7429
  416bed:	cmp    BYTE PTR [ebx-0x33],ah
  416bf0:	sbb    bh,BYTE PTR [edx]
  416bf2:	das    
  416bf3:	aas    
  416bf4:	add    dh,BYTE PTR [ebx]
  416bf6:	arpl   si,bx
  416bf8:	cmp    ch,BYTE PTR [edx]
  416bfa:	jbe    0x416b9e
  416bfc:	fbld   TBYTE PTR [esi]
  416bfe:	ins    DWORD PTR es:[edi],dx
  416bff:	mov    al,ds:0x3f722201
  416c04:	enter  0x2788,0x98
  416c08:	ins    BYTE PTR es:[edi],dx
  416c09:	mov    BYTE PTR [edi+edi*1],dh
  416c0c:	jp     0x416b94
  416c0e:	aaa    
  416c0f:	cwde   
  416c10:	arpl   WORD PTR [eax-0x779b71fd],ax
  416c16:	cmp    bl,BYTE PTR [edx+edi*2+0x796038e7]
  416c1d:	mov    esi,DWORD PTR [eax]
  416c1f:	fs enter 0x3577,0x88
  416c24:	pop    edi
  416c25:	pop    edx
  416c26:	daa    
  416c27:	aas    
  416c28:	jb     0x416c89
  416c2a:	and    eax,0x0
	...
  416c37:	add    BYTE PTR [eax],al
  416c39:	add    BYTE PTR [ecx+0x6a],dl
  416c3c:	inc    ebp
  416c3d:	das    
  416c3e:	aas    
  416c3f:	jns    0x416c89
  416c41:	das    
  416c42:	dec    esp
  416c43:	imul   edx,DWORD PTR [ebx+0x4],0x54
  416c47:	pop    edi
  416c48:	push   edx
  416c49:	daa    
  416c4a:	aas    
  416c4b:	ins    BYTE PTR es:[edi],dx
  416c4c:	dec    eax
  416c4d:	xor    BYTE PTR [ebx],ah
  416c4f:	cmp    al,BYTE PTR [si]
  416c52:	and    bh,BYTE PTR [edx+0xc]
  416c55:	daa    
  416c56:	adc    eax,ecx
  416c58:	adc    esp,DWORD PTR [edi]
  416c5a:	push   cs
  416c5b:	jl     0x416c78
  416c5d:	daa    
  416c5e:	push   cs
  416c5f:	jl     0x416c48
  416c61:	cs call 0x187778e4
  416c67:	imul   edx,DWORD PTR [edx],0xc65ea04
  416c6d:	xor    dl,ah
  416c6f:	jge    0x416c75
  416c71:	add    al,0xe3
  416c73:	data16 (bad) [edx]
  416c76:	fcmovnb st,st(7)
  416c78:	int3   
  416c79:	cmp    ch,bl
  416c7b:	frstor fs:[esi]
  416c7e:	aas    
  416c7f:	imul   edi,DWORD PTR [edi-0x309732ca],0xd079d903
  416c89:	es test eax,0x67e9006c
  416c8f:	gs fs jmp 0x9db2d3f6
  416c96:	push   ebp
  416c97:	bound  esi,QWORD PTR [edi-0x17]
  416c9a:	dec    esi
  416c9b:	outs   dx,BYTE PTR gs:[esi]
  416c9d:	mov    WORD PTR [eax],es
	...
  416cab:	add    BYTE PTR [eax],al
  416cad:	cmp    al,0x5f
  416caf:	mov    dl,BYTE PTR [bp+si+0x65]
  416cb3:	jno    0x416c4b
  416cb5:	push   esi
  416cb6:	jl     0x416cb8
  416cb8:	mov    ebx,0xbb32b9f2
  416cbd:	jmp    0x6c66:0x22745ef3
  416cc4:	dec    esp
  416cc5:	sub    al,0xc8
  416cc7:	das    
  416cc8:	sbb    dl,dl
  416cca:	mov    ds:0xa2ca182f,al
  416ccf:	add    BYTE PTR [edx+0x18],cl
  416cd2:	imul   ebx,DWORD PTR [edi+0x4a],0xe95f6410
  416cd9:	data16 gs jb 0x416d2a
  416cdd:	pop    edx
  416cde:	bound  esi,QWORD PTR [edx]
  416ce0:	cli    
  416ce1:	cmp    al,0x6b
  416ce3:	ins    BYTE PTR es:[edi],dx
  416ce4:	push   ss
  416ce5:	imul   esp,DWORD PTR [edi+0x65],0x66c8670e
  416cec:	push   es
  416ced:	pusha  
  416cee:	jl     0x416d52
  416cf0:	or     BYTE PTR [edi+0x64],cl
  416cf3:	das    
  416cf4:	jmp    0x10b7d249
  416cf9:	sub    DWORD PTR [ebp+0x0],ebp
  416cfc:	pop    es
  416cfd:	sbb    bh,BYTE PTR [eax+ebp*2+0x8]
  416d01:	sbb    eax,ecx
  416d03:	arpl   sp,dx
  416d05:	das    
  416d06:	xchg   ebx,eax
  416d07:	outs   dx,BYTE PTR ds:[esi]
  416d08:	aam    0x27
  416d0a:	fs add dl,bl
  416d0d:	sbb    eax,0xcb6d65
	...
  416d1e:	add    BYTE PTR [eax],al
  416d20:	or     ecx,eax
  416d22:	data16 add BYTE PTR [ebx+0x6f67a6],al
  416d29:	lods   eax,DWORD PTR ds:[esi]
  416d2a:	add    BYTE PTR [ebx+0x7],dh
  416d2d:	mov    eax,0xb8167969
  416d32:	pop    ebp
  416d33:	js     0x416cf6
  416d35:	lahf   
  416d36:	ins    BYTE PTR es:[edi],dx
  416d37:	ins    BYTE PTR es:[edi],dx
  416d38:	mov    eax,es:0xa4b9735d
  416d3e:	add    BYTE PTR [edx-0x77],ch
  416d41:	lahf   
  416d42:	outs   dx,BYTE PTR ds:[esi]
  416d43:	add    bh,al
  416d45:	mov    ebx,0x9fb57732
  416d4a:	xor    al,0x72
  416d4c:	out    0xa8,al
  416d4e:	pop    ebp
  416d4f:	bound  ebp,QWORD PTR [edi-0x39]
  416d52:	jb     0x416db9
  416d54:	jb     0x416d53
  416d56:	cs xor esp,esi
  416d59:	test   al,0x6c
  416d5b:	popa   
  416d5c:	test   BYTE PTR [eax-0x4999ffa3],bh
  416d62:	outs   dx,BYTE PTR gs:[esi]
  416d64:	jne    0x416d07
  416d66:	add    BYTE PTR [ecx+0x71],dh
  416d69:	mov    eax,ds:0xa5a67472
  416d6e:	push   0x61b76a65
  416d73:	popa   
  416d74:	xchg   esi,eax
  416d75:	out    dx,eax
  416d76:	xor    DWORD PTR ds:0x60fcef73,esi
  416d7c:	cmp    BYTE PTR [ebx-0x3998939f],ch
  416d82:	push   0x61
	...
  416d93:	test   BYTE PTR [edx-0x608b90a1],ch
  416d99:	add    BYTE PTR [ebx+eax*2-0x4c],ah
  416d9d:	je     0x416e04
  416d9f:	fs (bad) 
  416da1:	outs   dx,DWORD PTR ds:[esi]
  416da2:	popa   
  416da3:	sbb    BYTE PTR [edi-0x2c8ff9c],0x2e
  416daa:	xor    bh,BYTE PTR [edi]
  416dac:	into   
  416dad:	icebp  
  416dae:	jmp    eax
  416db0:	jmp    FWORD PTR [esp+ebp*2]
  416db3:	shl    al,1
  416db5:	es pop edi
  416db7:	lods   al,BYTE PTR ds:[esi]
  416db8:	das    
  416db9:	sub    BYTE PTR [edx+0x3f],dh
  416dbc:	add    esp,DWORD PTR [esi+ebp*2]
  416dbf:	xchg   esi,eax
  416dc0:	or     al,0x2d
  416dc2:	ins    BYTE PTR es:[edi],dx
  416dc3:	call   0x285b:0x936729df
  416dca:	outs   dx,BYTE PTR ds:[esi]
  416dcb:	aas    
  416dcc:	ds and al,0x71
  416dcf:	mov    WORD PTR [eax+0x28],cs
  416dd2:	add    BYTE PTR [ebx+esi*2+0x406b6c28],cl
  416dd9:	add    DWORD PTR [eax+0x6d],esi
  416ddc:	inc    eax
  416ddd:	cmp    al,0x63
  416ddf:	ins    DWORD PTR es:[edi],dx
  416de0:	fild   QWORD PTR [eax]
  416de2:	ins    DWORD PTR es:[edi],dx
  416de3:	imul   eax,DWORD PTR [ebx-0x65c09ad5],0x29
  416dea:	outs   dx,BYTE PTR ds:[esi]
  416deb:	pop    ebx
  416dec:	mov    dh,BYTE PTR [ebx]
  416dee:	jno    0x416e2f
  416df0:	mov    ah,0x35
  416df2:	jno    0x416e3f
  416df4:	sub    DWORD PTR [ecx],0x63
	...
  416e03:	add    BYTE PTR [eax],al
  416e05:	add    BYTE PTR [edi],bh
  416e07:	mov    ah,BYTE PTR [ecx]
  416e09:	je     0x416e25
  416e0b:	scas   al,BYTE PTR es:[edi]
  416e0c:	add    al,0x62
  416e0e:	push   ss
  416e0f:	mov    bl,0x30
  416e11:	gs push ds
  416e13:	shl    DWORD PTR ds:0x2cca3f71,cl
  416e19:	bound  ebx,QWORD PTR [ebx]
  416e1b:	shr    DWORD PTR [esi],cl
  416e1d:	add    BYTE PTR [eax],ah
  416e1f:	leave  
  416e20:	sub    al,0x6a
  416e22:	adc    al,0xdc
  416e24:	add    al,0x2f
  416e26:	sub    eax,0x2932f52e
  416e2b:	xor    bh,cl
  416e2d:	ss das 
  416e2f:	fild   WORD PTR [eax]
  416e31:	arpl   bx,bp
  416e33:	(bad)  
  416e34:	loop   0x416e67
  416e36:	rcr    DWORD PTR [esi+ecx*8+0x31],1
  416e3a:	loope  0x416eb4
  416e3c:	fadd   QWORD PTR [ebx]
  416e3e:	xlat   BYTE PTR ds:[ebx]
  416e3f:	jnp    0x416e14
  416e41:	xor    eax,DWORD PTR ds:0xab2116a1
  416e47:	addr16 mov edx,0xc4659830
  416e4d:	sub    al,0xa3
  416e4f:	imul   edi,DWORD PTR [ebx-0x6498aed0],0xfffffff9
  416e56:	push   eax
  416e57:	mov    eax,0x7863f3df
  416e5c:	xchg   BYTE PTR ds:0x24be6c90,ch
  416e62:	pusha  
  416e63:	jl     0x416df1
  416e65:	in     eax,dx
  416e66:	push   0x37760
	...
  416e77:	add    BYTE PTR [eax],al
  416e79:	addr16 jl 0x416ef7
  416e7c:	xor    esp,DWORD PTR ds:0x5827bea1
  416e82:	jp     0x416ecc
  416e84:	out    dx,eax
  416e85:	pop    edi
  416e86:	popa   
  416e87:	inc    ebx
  416e88:	daa    
  416e89:	and    DWORD PTR [edi+0x5b],esp
  416e8c:	cli    
  416e8d:	adc    BYTE PTR [eax+0x7813f40f],bh
  416e93:	push   esi
  416e94:	xor    BYTE PTR cs:[esi+ecx*1+0x25],ch
  416e99:	adc    BYTE PTR [esp+ecx*2-0x12],bh
  416e9d:	sbb    BYTE PTR [eax+0x37],ah
  416ea0:	add    al,0x3f
  416ea2:	(bad)  
  416ea3:	cmp    al,0x4b
  416ea5:	out    dx,eax
  416ea6:	cwde   
  416ea7:	and    eax,DWORD PTR [esi-0x8]
  416eaa:	sub    DWORD PTR [esp+esi*8],0xfffffff1
  416eae:	call   0x4b2d:0x8bf65420
  416eb5:	or     ecx,DWORD PTR [ebx+0x7f0c5ab7]
  416ebb:	add    BYTE PTR [edx],ch
  416ebd:	or     eax,0xf8155099
  416ec2:	mov    esi,DWORD PTR [eax]
  416ec4:	shl    cl,0x88
  416ec7:	das    
  416ec8:	cmovnp esi,eax
  416ecb:	cld    
  416ecc:	jmp    0xe944370d
  416ed1:	icebp  
  416ed2:	add    BYTE PTR [esp+ebx*4+0x3d],0xef
  416ed7:	cld    
  416ed8:	jmp    0xe9423719
	...
  416ee9:	add    BYTE PTR [eax],al
  416eeb:	add    BYTE PTR [eax+ecx*8],bh
  416eee:	push   ecx
  416eef:	sahf   
  416ef0:	jp     0x416e86
  416ef2:	push   ebp
  416ef3:	test   al,0x6e
  416ef5:	mov    ebx,DWORD PTR [esp+ebp*4+0x65]
  416ef9:	imul   esi,DWORD PTR [edx-0x7a],0x95665d4f
  416f00:	pusha  
  416f01:	xchg   ebp,eax
  416f02:	addr16 xchg edi,eax
  416f04:	and    BYTE PTR [ebp+0x75],bl
  416f07:	jp     0x416e99
  416f09:	mov    DWORD PTR [ebx+0x7b],esi
  416f0c:	imul   ebp,DWORD PTR cs:[esi+0x75],0xffffff8a
  416f11:	imul   esi,DWORD PTR [edx+0x5a],0x2a
  416f15:	pop    ebp
  416f16:	outs   dx,BYTE PTR ds:[esi]
  416f17:	cmp    eax,0x47675e6e
  416f1c:	adc    BYTE PTR [edi+ebx*2+0x3d],dh
  416f20:	pop    ss
  416f21:	enter  0x5753,0x6a
  416f25:	pop    esi
  416f26:	jno    0x416f5d
  416f28:	pop    edx
  416f29:	pop    esp
  416f2a:	ins    BYTE PTR es:[edi],dx
  416f2b:	sbb    ch,BYTE PTR [edi+0x7a]
  416f2e:	addr16 aas 
  416f30:	pop    esp
  416f31:	enter  0x1044,0x50
  416f35:	js     0x416fa3
  416f37:	or     BYTE PTR [edx+0x7e],dl
  416f3a:	pop    edi
  416f3b:	add    al,0x5e
  416f3d:	enter  0xe95c,0x3c
  416f41:	enter  0x0,0x66
  416f45:	retf   
  416f46:	add    BYTE PTR [eax],al
  416f48:	data16 loope 0x416fac
  416f4b:	js     0x416f88
  416f4d:	les    ecx,FWORD PTR [edi+0x6f]
	...
  416f5c:	add    BYTE PTR [eax],al
  416f5e:	add    BYTE PTR [eax],bh
  416f60:	mov    eax,0xa8746173
  416f65:	pop    esp
  416f66:	push   edi
  416f67:	outs   dx,DWORD PTR ds:[esi]
  416f68:	mov    eax,ds:0xcb844152
  416f6d:	imul   esi,DWORD PTR [eax+0x7b],0xffffffa1
  416f71:	add    BYTE PTR [ecx],al
  416f73:	es retf 
  416f75:	sub    BYTE PTR [ebx-0x5],0xb4
  416f79:	outs   dx,BYTE PTR ds:[esi]
  416f7a:	gs add dh,dh
  416f7d:	cs cs cli 
  416f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f81:	ins    BYTE PTR es:[edi],dx
  416f82:	add    cl,bl
  416f84:	jle    0x416fd5
  416f86:	inc    edi
  416f87:	mov    ebx,0xaa633d9e
  416f8c:	fwait
  416f8d:	jbe    0x416ff4
  416f8f:	aad    0xa1
  416f91:	outs   dx,BYTE PTR ds:[esi]
  416f92:	jae    0x416f65
  416f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f95:	popa   
  416f96:	push   ebx
  416f97:	mov    ebx,0xc1696fb5
  416f9c:	mov    al,ds:0x9ad66445
  416fa1:	jb     0x417012
  416fa3:	test   DWORD PTR [ecx-0x57f08c91],ebp
  416fa9:	push   esp
  416faa:	outs   dx,DWORD PTR ds:[esi]
  416fab:	add    eax,0x7f736fa9
  416fb0:	mov    ds:0xc40a496e,eax
  416fb5:	add    BYTE PTR [esi-0x5],ch
  416fb8:	mov    bh,0x5d
  416fba:	jo     0x416fbb
  416fbc:	imul   BYTE PTR [esi]
  416fbe:	cs cli 
  416fc0:	lahf   
  416fc1:	ins    BYTE PTR es:[edi],dx
	...
  416fd2:	push   eax
  416fd3:	test   eax,0x9d364174
  416fd8:	inc    edx
  416fd9:	jne    0x41701a
  416fdb:	mov    edi,0xa70d6322
  416fe0:	ss arpl dx,sp
  416fe3:	loopne 0x41702b
  416fe5:	arpl   bx,bp
  416fe7:	shl    DWORD PTR ds:0x2a9bed63,cl
  416fed:	jae    0x416fc1
  416fef:	loopne 0x416ff1
  416ff1:	ins    DWORD PTR es:[edi],dx
  416ff2:	jmp    0x416fef
  416ff4:	cmc    
  416ff5:	xor    DWORD PTR [ecx],esp
  416ff7:	add    eax,0x323f6c25
  416ffc:	sub    eax,0x2010f065
  417001:	outs   dx,BYTE PTR ds:[esi]
  417002:	mov    WORD PTR [ebx],gs
  417004:	sub    dh,BYTE PTR [edx-0x62]
  417007:	push   es
  417008:	and    BYTE PTR [eax],al
  41700a:	aas    
  41700b:	add    BYTE PTR ds:0x2c2f9e76,bl
  417011:	xor    DWORD PTR [ebp+0x15],ecx
  417014:	sbb    eax,0x43dfa36c
  417019:	ins    BYTE PTR es:[edi],dx
  41701a:	fwait
  41701b:	inc    esi
  41701c:	es pop edi
  41701e:	mov    eax,DWORD PTR [esp+eax*2+0x6e]
  417022:	arpl   WORD PTR [eax],di
  417024:	daa    
  417025:	imul   ebx,DWORD PTR [bx+si+0x24],0x6c
  41702a:	push   esi
  41702b:	jns    0x41704d
  41702d:	push   ecx
  41702e:	push   esi
  41702f:	inc    ebx
  417030:	add    DWORD PTR [ecx+0x67],eax
  417033:	jl     0x417058
  417035:	imul   eax,DWORD PTR [eax],0x0
	...
  417043:	add    BYTE PTR [eax],al
  417045:	imul   edi,DWORD PTR [esi+0x2b],0x63
  417049:	pop    ecx
  41704a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41704b:	sbb    eax,0x36845d6b
  417050:	jno    0x417079
  417052:	cwde   
  417053:	xor    al,0x0
  417055:	stc    
  417056:	mov    al,0x1d
  417058:	arpl   WORD PTR [eax+ecx*4],cx
  41705b:	and    BYTE PTR [eax],al
  41705d:	cld    
  41705e:	mov    al,0x1d
  417060:	fs add cl,al
  417063:	adc    eax,0x1963242f
  417068:	and    edx,DWORD PTR [ebx]
  41706a:	arpl   WORD PTR [eax],bp
  41706c:	add    al,0xfe
  41706e:	jns    0x417074
  417070:	and    BYTE PTR [ecx],al
  417072:	jp     0x417080
  417074:	pop    ds
  417075:	aas    
  417076:	mov    ecx,edi
  417078:	cmp    ch,bh
  41707a:	jae    0x4170aa
  41707c:	pop    ds
  41707d:	jmp    0x417011
  41707f:	cli    
  417080:	push   ds
  417081:	int    0x80
  417083:	int3   
  417084:	cmp    bh,BYTE PTR [edi]
  417086:	mov    ecx,ebx
  417088:	cmp    cl,bh
  41708a:	jae    0x417038
  41708c:	cmp    ecx,edi
  41708e:	pop    esp
  41708f:	fldcw  WORD PTR [edi]
  417091:	xchg   BYTE PTR [ebx-0x40],ah
  417094:	add    edi,DWORD PTR [esi+0x7a]
  417097:	shl    BYTE PTR [ebx],0xb3
  41709a:	test   ah,cl
  41709c:	xor    al,0xab
  41709e:	jp     0x41705e
  4170a0:	cmp    al,BYTE PTR [esi+0x7e03a063]
  4170a6:	jp     0x417048
  4170a8:	xor    eax,DWORD PTR [eax]
	...
  4170b6:	add    BYTE PTR [eax],al
  4170b8:	xchg   ebx,eax
  4170b9:	call   0x1e9a:0x679c278c
  4170c0:	jle    0x41711f
  4170c2:	xchg   ebp,eax
  4170c3:	das    
  4170c4:	pop    esp
  4170c5:	jo     0x41713a
  4170c7:	add    ecx,DWORD PTR [ebp+0x6d1e7d63]
  4170cd:	je     0x417062
  4170cf:	sub    BYTE PTR [esi+0x63],ch
  4170d2:	push   ebx
  4170d3:	and    bh,BYTE PTR [edi]
  4170d5:	jge    0x41712e
  4170d7:	pop    ds
  4170d8:	pop    ecx
  4170d9:	cwde   
  4170da:	pop    ecx
  4170db:	sub    DWORD PTR [esi+0x63],ebx
  4170de:	pop    edx
  4170df:	xor    eax,0x1f525d13
  4170e4:	and    eax,ecx
  4170e6:	xor    BYTE PTR [edi],ah
  4170e8:	das    
  4170e9:	arpl   WORD PTR [eax],ax
  4170eb:	cmp    ebp,DWORD PTR [edx+0x5b]
  4170ee:	outs   dx,BYTE PTR ds:[esi]
  4170ef:	dec    eax
  4170f0:	dec    edi
  4170f1:	imul   ecx,DWORD PTR [esi+edx*1+0x5e],0xf6056363
  4170f9:	pop    ebp
  4170fa:	push   ebx
  4170fb:	sbb    ah,BYTE PTR [eax]
  4170fd:	jp     0x4170ff
  4170ff:	es pop eax
  417101:	je     0x417157
  417103:	push   ss
  417104:	and    ch,BYTE PTR [ecx+0x6e]
  417107:	xor    BYTE PTR ds:0x19fb6d66,dl
  41710d:	lea    esi,[eax+eax*1+0x26]
  417111:	pop    esi
  417112:	add    BYTE PTR [edx-0x3b89a1d9],ch
  417118:	adc    dh,BYTE PTR [ecx+edx*2-0x40]
	...
  417128:	add    BYTE PTR [eax],al
  41712a:	add    BYTE PTR [eax],ah
  41712c:	xchg   esp,eax
  41712d:	ins    DWORD PTR es:[edi],dx
  41712e:	mov    edx,0xd7677668
  417133:	pop    edi
  417134:	cdq    
  417135:	lds    edi,FWORD PTR [di-0x38]
  417139:	dec    esp
  41713a:	(bad)  
  41713b:	pop    edi
  41713c:	pop    ebp
  41713d:	outs   dx,BYTE PTR ds:[esi]
  41713e:	xchg   esp,eax
  41713f:	push   ebx
  417140:	addr16 jb 0x4170eb
  417143:	cmp    al,0x7c
  417145:	ins    DWORD PTR es:[edi],dx
  417146:	mov    ds,WORD PTR [ebx+0x77]
  417149:	jo     0x417104
  41714b:	dec    edx
  41714c:	arpl   WORD PTR [esi-0x80],si
  41714f:	and    BYTE PTR [edi+0x65],ah
  417152:	mov    WORD PTR [esi+0x49746c8b],cs
  417158:	stos   DWORD PTR es:[edi],eax
  417159:	add    BYTE PTR [eax+0x7a735e40],ch
  41715f:	sub    BYTE PTR [ebp+ebp*2+0x505a1e52],dl
  417166:	pop    ebx
  417167:	sbb    dh,BYTE PTR [edx+0x67]
  41716a:	inc    ebp
  41716b:	push   ds
  41716c:	arpl   WORD PTR gs:[edx+0x43],bx
  417170:	enter  0x61,0x74
  417174:	lods   eax,DWORD PTR ds:[esi]
  417175:	jo     0x4171eb
  417177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417178:	stc    
  417179:	sub    ah,BYTE PTR [edx+edi*8-0x61]
  41717d:	add    BYTE PTR [ebx+0x54],al
  417180:	lods   eax,DWORD PTR ds:[esi]
  417181:	jo     0x4171f7
  417183:	push   ebx
  417184:	mov    ds:0xb8397270,al
  417189:	popa   
  41718a:	arpl   WORD PTR [edx],sp
  41718c:	mov    BYTE PTR [ebp+0x74],bl
	...
  41719b:	add    BYTE PTR [eax],al
  41719d:	add    BYTE PTR [edi-0x3c],al
  4171a0:	aas    
  4171a1:	gs je  0x41713f
  4171a4:	dec    ebx
  4171a5:	jo     0x4171ea
  4171a7:	mov    ds:0x9b65794f,al
  4171ac:	popa   
  4171ad:	ins    DWORD PTR es:[edi],dx
  4171ae:	xor    eax,0x83726bb8
  4171b3:	test   BYTE PTR [eax],al
  4171b5:	inc    ebx
  4171b6:	cmp    DWORD PTR [ecx-0x4787ba8c],0x69
  4171bd:	inc    ebx
  4171be:	add    edi,DWORD PTR [ecx-0x63ff968c]
  4171c4:	pop    edi
  4171c5:	popa   
  4171c6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c8:	outs   dx,DWORD PTR ds:[esi]
  4171c9:	dec    ecx
  4171ca:	clc    
  4171cb:	xchg   ebp,eax
  4171cc:	je     0x41723d
  4171ce:	aam    0xa7
  4171d0:	add    BYTE PTR [ebx-0x3d],al
  4171d3:	mov    eax,0xa1ba4374
  4171d8:	outs   dx,DWORD PTR ds:[esi]
  4171d9:	lds    ebx,FWORD PTR gs:[edx-0x393c8d95]
  4171e0:	aas    
  4171e1:	jb     0x4171a2
  4171e3:	mov    dh,0x74
  4171e5:	inc    ecx
  4171e6:	mov    ch,0xb3
  4171e8:	jno    0x417253
  4171ea:	fs test al,0x3f
  4171ed:	gs push esp
  4171ef:	fwait
  4171f0:	outs   dx,WORD PTR gs:[esi]
  4171f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f4:	pop    ebp
  4171f5:	je     0x41717a
  4171f7:	xchg   esp,eax
  4171f8:	jb     0x417263
  4171fa:	aas    
  4171fb:	mov    esp,DWORD PTR [ebx]
  4171fd:	je     0x417221
  4171ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417200:	pop    ds
  417201:	ja     0x417203
	...
  41720f:	add    BYTE PTR [eax],al
  417211:	aas    
  417212:	loope  0x41723b
  417214:	jno    0x41722c
  417216:	mov    ebx,0xe1136c20
  41721b:	inc    edi
  41721c:	jno    0x417244
  41721e:	mov    ds:0xd1fc741f,al
  417223:	daa    
  417224:	jo     0x41723e
  417226:	mov    ebx,0xb10b6e1f
  41722b:	and    esi,DWORD PTR [edi+eiz*8-0x61]
  41722f:	add    al,0x0
  417231:	out    dx,eax
  417232:	in     eax,dx
  417233:	sub    al,0x6d
  417235:	in     eax,dx
  417236:	ret    
  417237:	and    DWORD PTR [esi],ebp
  417239:	fcmovnb st,st(4)
  41723b:	sub    BYTE PTR [eax],al
  41723d:	out    dx,eax
  41723e:	int    0x30
  417240:	ins    DWORD PTR es:[edi],dx
  417241:	int    0xfb
  417243:	inc    ecx
  417244:	jb     0x417228
  417246:	jmp    FWORD PTR [ebx+eiz*2]
  417249:	test   BYTE PTR [edx],0x32
  41724c:	je     0x4171ec
  41724e:	sub    DWORD PTR [edx],esp
  417250:	arpl   WORD PTR [edi],di
  417252:	fild   WORD PTR [eax]
  417254:	add    BYTE PTR [edi],bh
  417256:	fild   WORD PTR [eax]
  417258:	add    BYTE PTR [edi],bh
  41725a:	fild   WORD PTR [eax]
  41725c:	add    BYTE PTR [edi],bh
  41725e:	fild   WORD PTR [eax]
  417260:	add    BYTE PTR [edi],bh
  417262:	fild   WORD PTR [eax]
  417264:	add    BYTE PTR [edi],bh
  417266:	fild   WORD PTR [eax]
  417268:	add    BYTE PTR [edi],bh
  41726a:	fild   WORD PTR [eax]
  41726c:	add    BYTE PTR [edi],bh
  41726e:	fild   WORD PTR [eax]
  417270:	add    BYTE PTR [edi],bh
  417272:	fild   WORD PTR [eax]
	...
  417284:	aas    
  417285:	fild   WORD PTR [eax]
  417287:	add    BYTE PTR [edi],bh
  417289:	fild   WORD PTR [eax]
  41728b:	add    BYTE PTR [edi],bh
  41728d:	fild   WORD PTR [eax]
  41728f:	add    BYTE PTR [edi],bh
  417291:	enter  0x3e7,0x3f
  417295:	enter  0x3e7,0x3f
  417299:	enter  0x3e7,0x3f
  41729d:	enter  0x3e7,0x3f
  4172a1:	enter  0x3e7,0x3f
  4172a5:	enter  0x3e7,0x3f
  4172a9:	enter  0x3e7,0x3f
  4172ad:	enter  0x3e7,0x3f
  4172b1:	enter  0x3e7,0x3f
  4172b5:	enter  0x3e7,0x3f
  4172b9:	enter  0x3e7,0x3f
  4172bd:	enter  0x3e7,0x3f
  4172c1:	enter  0x3e7,0x3f
  4172c5:	enter  0x3e7,0x3f
  4172c9:	enter  0x3e7,0x3f
  4172cd:	enter  0x3e7,0x3f
  4172d1:	enter  0x3e7,0x3f
  4172d5:	enter  0x30e7,0xd7
  4172d9:	(bad)
  4172de:	std    
  4172df:	pop    ds
  4172e0:	mov    ds:0x7750e75c,eax
  4172e5:	add    esp,0x2f
	...
  4172f7:	jns    0x417352
  4172f9:	ret    
  4172fa:	pop    ds
  4172fb:	pushf  
  4172fc:	jbe    0x417295
  4172fe:	and    cl,BYTE PTR [ebx+0x3f03a860]
  417304:	enter  0x3e7,0x3f
  417308:	xor    DWORD PTR [edx-0x5e03c0be],esp
  41730e:	inc    edx
  41730f:	aas    
  417310:	or     al,0xb2
  417312:	inc    edx
  417313:	aas    
  417314:	div    BYTE PTR [ecx+0xc83f42]
  41731a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41731b:	jge    0x4172e5
  41731d:	adc    BYTE PTR [ebp+0x3520c87d],bl
  417323:	jl     0x4172ed
  417325:	xor    ebp,DWORD PTR ds:0x254cc87c
  41732b:	cld    
  41732c:	(bad)  
  41732d:	pusha  
  41732e:	sbb    eax,0x3577c7fc
  417333:	cld    
  417334:	(bad)  
  417335:	fwait
  417336:	sub    eax,0x25bac7fc
  41733b:	cld    
  41733c:	mov    DWORD PTR [eax],0xffc83ce9
  417342:	call   0xe944bb83
  417347:	cmp    al,0xc8
  417349:	dec    ebx
  41734a:	adc    BYTE PTR [ebx-0x7c],ah
  41734d:	ins    DWORD PTR es:[edi],dx
  41734e:	or     ah,BYTE PTR [eax]
  417350:	pop    ebp
  417351:	arpl   WORD PTR [edi],dx
  417353:	das    
  417354:	ja     0x417356
  417356:	call   0xd3c23b97
	...
  417367:	add    BYTE PTR [eax],al
  417369:	add    BYTE PTR [eax+ecx*8],bh
  41736c:	add    BYTE PTR [eax],ch
  41736e:	or     edi,DWORD PTR [eax+0x44]
  417371:	enter  0x8918,0x0
  417375:	call   0xf5c23bb6
  41737a:	cmp    al,0xc8
  41737c:	add    BYTE PTR [ebp-0x2aa096a5],bl
  417382:	sbb    al,0xa7
  417384:	jo     0x41733f
  417386:	pusha  
  417387:	xchg   DWORD PTR [eax+ecx*8+0x3c],esi
  41738b:	out    0xfc,eax
  41738d:	jmp    0xe9421c4e
  417392:	cmp    al,0x89
  417394:	pop    edi
  417395:	mov    dl,BYTE PTR [ebx+ebp*2+0x0]
  417399:	call   0xc8c23bda
  41739e:	cmp    al,0xc8
  4173a0:	add    BYTE PTR [eax],al
  4173a2:	xchg   ebp,eax
  4173a3:	lods   al,BYTE PTR ds:[esi]
  4173a4:	imul   ebp,DWORD PTR [ebx-0x31],0xffffffc6
  4173a8:	outs   dx,DWORD PTR ds:[esi]
  4173a9:	add    bh,ah
  4173ab:	retf   
  4173ac:	add    BYTE PTR [eax+0xcc04],al
  4173b2:	push   cs
  4173b3:	lds    ebp,FWORD PTR [edi+0x74]
  4173b6:	jno    0x417356
  4173b8:	jne    0x4173ba
  4173ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173bb:	retf   
  4173bc:	add    BYTE PTR [eax+0xcb9b],al
  4173c2:	jae    0x417379
  4173c4:	and    BYTE PTR [ecx+esi*8-0x52],al
  4173c8:	jno    0x417437
  4173ca:	or     ebp,DWORD PTR [edx+0x7374]
	...
  4173dc:	add    BYTE PTR [esi+0x160000cd],ah
  4173e2:	out    dx,eax
  4173e3:	cld    
  4173e4:	call   DWORD PTR [esi+0x436d6b8e]
  4173ea:	stos   DWORD PTR es:[edi],eax
  4173eb:	outs   dx,BYTE PTR ds:[esi]
  4173ec:	and    BYTE PTR [edi],ah
  4173ee:	pushf  
  4173ef:	jo     0x417435
  4173f1:	aaa    
  4173f2:	mov    al,ds:0xcb57005d
  4173f7:	add    BYTE PTR [eax+0xcb89],al
  4173fd:	xor    esi,DWORD PTR [ebp-0x5190afe0]
  417403:	je     0x41747a
  417405:	fs mov al,0x6f
  417408:	add    BYTE PTR [ebx+ecx*8],ah
  41740b:	add    BYTE PTR [eax+0xcb30],al
  417411:	aad    0xa9
  417413:	imul   ebp,DWORD PTR [ebp-0xf],0x14420a8
  41741a:	scas   al,BYTE PTR es:[edi]
  41741b:	jno    0x41748a
  41741d:	sti    
  41741e:	test   al,0x74
  417420:	jae    0x417438
  417422:	int    0x0
  417424:	add    BYTE PTR [esi+0x3ffffceb],dl
  41742a:	icebp  
  41742b:	inc    ebp
  41742c:	ins    DWORD PTR es:[edi],dx
  41742d:	bound  esp,QWORD PTR [edx+eiz*1+0x6e]
  417431:	pop    ds
  417432:	xor    BYTE PTR ds:0x1c57566b,ah
  417438:	jno    0x41748d
  41743a:	arpl   WORD PTR [esp+esi*2],sp
  41743d:	pop    di
  41743f:	sub    BYTE PTR [eax],ah
	...
  41744d:	add    BYTE PTR [eax],al
  41744f:	add    BYTE PTR [ebx+0x7e],dh
  417452:	and    DWORD PTR [esp+ecx*2-0xf],ebp
  417456:	add    eax,DWORD PTR [eax]
  417458:	aas    
  417459:	jno    0x41744c
  41745b:	push   DWORD PTR [eax+0x1a6443f0]
  417461:	js     0x417485
  417463:	addr16 sub al,0x9d
  417466:	ss pop edi
  417468:	adc    ecx,DWORD PTR [eax-0x42a09cc6]
  41746e:	and    DWORD PTR [ebp+0x1b],ebp
  417471:	ret    0xff04
  417474:	xor    al,0x80
  417477:	add    edi,DWORD PTR [edi]
  417479:	icebp  
  41747a:	add    BYTE PTR [eax-0x26],dl
  41747d:	ret    0x6d35
  417480:	fxch   st(7)
  417482:	and    BYTE PTR [eax],al
  417484:	or     al,0xd6
  417486:	sub    dh,BYTE PTR [eax+edx*8-0x31]
  41748a:	ss arpl bx,si
  41748d:	ret    
  41748e:	sbb    esp,DWORD PTR [ecx-0x33]
  417491:	std    
  417492:	xor    eax,0x4cfcd96d
  417497:	push   ebp
  417498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417499:	or     eax,0x2a86d25
  41749e:	dec    ebp
  41749f:	inc    ecx
  4174a0:	mov    dl,0x21
  4174a2:	xor    esp,DWORD PTR [ebx-0x6f]
  4174a5:	sbb    edx,DWORD PTR [edi+0x63]
  4174a8:	lea    esp,[edx]
  4174aa:	sbb    al,0x6d
  4174ac:	mov    eax,ds:0x8f784853
  4174b1:	enter  0x2293,0x0
	...
  4174c1:	add    BYTE PTR [eax],al
  4174c3:	lea    ebp,[ebx-0x67]
  4174c6:	dec    edi
  4174c7:	mov    ?,WORD PTR [eax-0x74]
  4174ca:	pop    ds
  4174cb:	arpl   WORD PTR [eax+0x6c5b22a5],bp
  4174d1:	mov    WORD PTR ds:0x2b84c86e,?
  4174d7:	dec    edi
  4174d8:	je     0x417460
  4174da:	xor    eax,0x28bd5a5c
  4174df:	inc    edi
  4174e0:	imul   esp,edi,0x54
  4174e3:	adc    al,0x97
  4174e5:	or     al,0xf7
  4174e7:	gs xchg edi,eax
  4174e9:	(bad)  
  4174eb:	aas    
  4174ec:	enter  0x3e7,0xe
  4174f0:	imul   esi,DWORD PTR [eax],0x1f
  4174f3:	das    
  4174f4:	imul   edi,DWORD PTR [ecx],0x35
  4174f7:	sub    dh,BYTE PTR [esi+0x48]
  4174fa:	cmp    BYTE PTR [eax+edi*2],bl
  4174fd:	cmp    DWORD PTR [ebx],ebx
  4174ff:	adc    DWORD PTR [edi+0x13],ebp
  417502:	daa    
  417503:	sbb    ch,BYTE PTR [ebx-0x19]
  417506:	push   esp
  417507:	fdivr  QWORD PTR [ebx+0xa]
  41750a:	cvtps2pd xmm0,QWORD PTR es:[eax]
  41750e:	cmp    ah,al
  417510:	jae    0x41751e
  417512:	sub    esp,ebx
  417514:	(bad)  
  417515:	sbb    ah,BYTE PTR [edi]
  417517:	(bad)  
  417518:	outs   dx,DWORD PTR ds:[esi]
  417519:	or     BYTE PTR [edx],ah
  41751b:	fisubr DWORD PTR [edx+0x1d]
  41751e:	and    ebx,edx
  417520:	outs   dx,BYTE PTR ds:[esi]
  417521:	int    0x2a
  417523:	out    dx,eax
  417524:	pop    ecx
  417525:	sar    BYTE PTR [ecx],1
	...
  417533:	add    BYTE PTR [eax],al
  417535:	add    BYTE PTR [eax-0x63d7338c],ah
  41753b:	enter  0x26ba,0x7e
  41753f:	pop    edx
  417540:	int3   
  417541:	and    ch,BYTE PTR [ebx-0x59df6c95]
  417547:	imul   eax,DWORD PTR [eax],0xffffffc7
  41754a:	ins    BYTE PTR es:[edi],dx
  41754b:	pop    edx
  41754c:	addr16 mov bh,0x25
  41754f:	je     0x4175b4
  417551:	mov    ds,WORD PTR [ecx-0x38]
  417554:	push   ecx
  417555:	test   BYTE PTR [edx+0x29826185],al
  41755b:	pop    eax
  41755c:	push   eax
  41755d:	fwait
  41755e:	inc    ebp
  41755f:	pop    esi
  417560:	addr16 xchg ebp,eax
  417562:	sbb    DWORD PTR [ebx+0x63],ebp
  417565:	jmp    0x8c93dedd
  41756a:	or     ebx,DWORD PTR [ebp+ebp*2+0x7b]
  41756e:	and    DWORD PTR [eax+0x72],edi
  417571:	push   eax
  417572:	add    eax,0x66446c6d
  417577:	imul   eax,DWORD PTR [eax],0x6e8d583a
  41757d:	dec    edx
  41757e:	jno    0x4175e9
  417580:	pop    edi
  417581:	cmp    bl,BYTE PTR [eax-0x6b]
  417584:	jae    0x4175d4
  417586:	push   edi
  417587:	test   DWORD PTR [eax+0x3b],edx
  41758a:	xor    al,0x5e
  41758c:	addr16 cmp eax,0xe9636b60
  417592:	jmp    0x4175fc
  417594:	aas    
  417595:	sbb    dh,BYTE PTR [edx]
  417597:	ins    DWORD PTR es:[edi],dx
  417598:	gs pop es
	...
  4175a6:	add    BYTE PTR [eax],al
  4175a8:	add    BYTE PTR [ebx],cl
  4175aa:	pop    edx
  4175ab:	addr16 cld 
  4175ad:	sbb    eax,0x1e1d775a
  4175b2:	outs   dx,DWORD PTR ds:[esi]
  4175b3:	arpl   WORD PTR [edi],cx
  4175b5:	repz pop ecx
  4175b7:	push   DWORD PTR [di]
  4175ba:	je     0x41761f
  4175bc:	push   es
  4175bd:	and    al,cl
  4175bf:	add    BYTE PTR [ecx+0x95476ff],bh
  4175c5:	and    BYTE PTR [ecx+0x20],bl
  4175c8:	mov    eax,ds:0xfe507c88
  4175cd:	sub    eax,0x2b0030b6
  4175d2:	out    0x44,al
  4175d4:	outs   dx,DWORD PTR ds:[esi]
  4175d5:	aad    0x9b
  4175d7:	cmp    ah,BYTE PTR [eax]
  4175d9:	inc    ebx
  4175da:	popf   
  4175db:	or     DWORD PTR [edx],ecx
  4175dd:	xlat   BYTE PTR ds:[ebx]
  4175de:	lods   al,BYTE PTR ds:[esi]
  4175df:	pop    edi
  4175e0:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4175e2:	fwait
  4175e3:	cmp    ah,BYTE PTR [eax]
  4175e5:	or     al,0xe9
  4175e7:	es or  eax,0x635f86dc
  4175ed:	ret    
  4175ee:	xchg   edi,eax
  4175ef:	je     0x41761e
  4175f1:	xchg   ebx,eax
  4175f2:	test   eax,0xbec26f5f
  4175f7:	outs   dx,BYTE PTR ds:[esi]
  4175f8:	addr16 mov edi,fs
  4175fb:	gs fs ret 
  4175fe:	test   eax,0xb5626974
  417603:	sub    al,0x20
  417605:	dec    esp
  417606:	out    dx,eax
  417607:	ins    DWORD PTR es:[edi],dx
  417608:	cmp    eax,0x430ac956
	...
  417619:	add    BYTE PTR [eax],al
  41761b:	add    BYTE PTR [ecx-0x3e],ch
  41761e:	je     0x417685
  417620:	or     BYTE PTR [eax-0x3dfcb3d7],ah
  417626:	arpl   WORD PTR [esi+edi*8-0x13],si
  41762a:	sbb    al,0x25
  41762c:	dec    edx
  41762d:	mov    eax,ds:0xc3550a09
  417632:	outs   dx,BYTE PTR ds:[esi]
  417633:	outs   dx,BYTE PTR ds:[esi]
  417634:	inc    ebx
  417635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417636:	je     0x4176a1
  417638:	cmp    edx,eax
  41763a:	cmp    ah,BYTE PTR [eax]
  41763c:	xor    eax,0x33736ba8
  417641:	leave  
  417642:	or     al,BYTE PTR [ebx+0x49]
  417645:	ret    0x6574
  417648:	cmp    BYTE PTR [eax-0x68b0abd7],ah
  41764e:	popa   
  41764f:	cmp    dh,BYTE PTR [esi]
  417651:	lods   eax,DWORD PTR ds:[esi]
  417652:	jo     0x4176c4
  417654:	or     al,ah
  417656:	pop    edi
  417657:	popa   
  417658:	aas    
  417659:	add    eax,0xe2996d1c
  41765e:	sbb    eax,0x3514ab61
  417663:	sub    ecx,DWORD PTR [ebp+ebx*1+0xc9e632f]
  41766a:	add    BYTE PTR [edx],cl
  41766c:	jl     0x417690
  41766e:	sbb    esi,DWORD PTR [edx+ebx*4+0x3b]
  417672:	xor    eax,0x2253822b
  417677:	ins    DWORD PTR es:[edi],dx
  417678:	pop    ebx
  417679:	dec    eax
  41767a:	sbb    esp,DWORD PTR [ebp+0x25]
  41767d:	adc    DWORD PTR [edi],ebx
  41767f:	add    BYTE PTR [bx+si],al
	...
  41768e:	add    BYTE PTR [ecx+0x50],dl
  417691:	das    
  417692:	ja     0x4176de
  417694:	xlat   BYTE PTR ds:[ebx]
  417695:	push   edi
  417696:	jno    0x4176f2
  417698:	pop    edi
  417699:	loopne 0x4176d9
  41769b:	pusha  
  41769c:	dec    esp
  41769d:	sbb    esi,DWORD PTR [ebp+eax*1-0x2f]
  4176a1:	aas    
  4176a2:	ins    DWORD PTR es:[edi],dx
  4176a3:	xor    eax,0x1e6c2078
  4176a8:	retf   0x2df8
  4176ab:	outs   dx,DWORD PTR ds:[esi]
  4176ac:	rcr    esp,1
  4176ae:	pusha  
  4176af:	adc    BYTE PTR [esp+esi*1+0x5f],bh
  4176b3:	adc    edi,DWORD PTR [eax+0x22]
  4176b6:	ins    BYTE PTR es:[edi],dx
  4176b7:	sbb    dl,dh
  4176b9:	loopne 0x417705
  4176bb:	in     al,dx
  4176bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176bd:	inc    edi
  4176be:	and    BYTE PTR [edx-0x5],cl
  4176c1:	lock cmp BYTE PTR [edi],bl
  4176c4:	call   0x7135:0xc9db6e1b
  4176cb:	pop    ds
  4176cc:	clc    
  4176cd:	call   0x18a8f8
  4176d2:	or     DWORD PTR [edi],edi
  4176d4:	scas   al,BYTE PTR es:[edi]
  4176d5:	sbb    eax,0x1ed3cb6e
  4176da:	je     0x4176f6
  4176dc:	lds    esp,FWORD PTR [edi]
  4176de:	outs   dx,BYTE PTR ds:[esi]
  4176df:	fadd   st,st(7)
  4176e1:	fistp  DWORD PTR [ebx]
  4176e3:	jne    0x4176ad
  4176e5:	stos   DWORD PTR es:[edi],eax
  4176e6:	push   ds
  4176e7:	sahf   
  4176e8:	fistp  DWORD PTR [si]
  4176eb:	call   0x15c8:0x51041172
  4176f2:	fiadd  WORD PTR [eax]
	...
  417700:	add    BYTE PTR [eax],al
  417702:	sbb    BYTE PTR [esi+0x11],bh
  417705:	fisub  WORD PTR [esi-0x38]
  417708:	add    esi,ebx
  41770a:	push   esi
  41770b:	enter  0x569f,0x78
  41770f:	mov    edi,fs
  417711:	sub    bl,BYTE PTR [eax+ebx*4]
  417714:	fisttp WORD PTR [ebx+0x24]
  417717:	stos   DWORD PTR es:[edi],eax
  417718:	xlat   BYTE PTR ds:[ebx]
  417719:	not    DWORD PTR [eax+0x2cf3c4b3]
  41771f:	adc    ah,0xe8
  417722:	sub    BYTE PTR [esi-0x69df1761],dl
  417728:	(bad)  
  417729:	loopne 0x417748
  41772b:	cwde   
  41772c:	mov    ecx,0x19981c4b
  417731:	dec    esp
  417732:	pop    esp
  417733:	cwde   
  417734:	sbb    DWORD PTR [esp+ebx*2-0x68],ecx
  417738:	sbb    DWORD PTR [esp+ebx*2-0x68],ecx
  41773c:	sbb    DWORD PTR [esp+ebx*2-0x68],ecx
  417740:	stc    
  417741:	dec    ebx
  417742:	adc    al,0xc8
  417744:	es daa 
  417746:	or     edx,DWORD PTR [edx+0x5a203848]
  41774c:	inc    esp
  41774d:	push   ecx
  41774e:	or     BYTE PTR [ebp+0x1b],dl
  417751:	daa    
  417752:	in     al,0x8e
  417754:	or     eax,0x2c7e226
  417759:	daa    
  41775a:	in     eax,dx
  41775b:	jno    0x417761
  41775d:	and    BYTE PTR [esi],ch
  41775f:	xchg   esi,eax
  417760:	aad    0x27
  417762:	jmp    0x4177d7
  417764:	out    0x3a,eax
	...
  417772:	add    BYTE PTR [eax],al
  417774:	add    dh,cl
  417776:	js     0x417778
  417778:	push   es
  417779:	adc    bl,BYTE PTR [edx+0x730d1934]
  41777f:	popa   
  417780:	int3   
  417781:	outs   dx,DWORD PTR ds:[esi]
  417782:	push   edi
  417783:	add    BYTE PTR [edx-0x218b95ad],bh
  417789:	pop    ebp
  41778a:	push   esi
  41778b:	arpl   WORD PTR [ebp-0x5a8d7e86],bp
  417791:	ins    BYTE PTR es:[edi],dx
  417792:	je     0x417807
  417794:	(bad)  
  417795:	xor    eax,0x82957172
  41779a:	jl     0x4177ec
  41779c:	lea    eax,[ebx+esi*2+0x71]
  4177a0:	popf   
  4177a1:	das    
  4177a2:	enter  0x8e51,0x1a
  4177a6:	pop    esp
  4177a7:	jne    0x417731
  4177a9:	cs gs pop esp
  4177ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177ad:	sbb    eax,0x6ca53256
  4177b2:	je     0x417827
  4177b4:	xchg   BYTE PTR ds:0x82957172,dh
  4177ba:	jl     0x41780c
  4177bc:	lea    eax,[ebx+esi*2]
  4177bf:	jno    0x41781e
  4177c1:	outs   dx,BYTE PTR ds:[esi]
  4177c2:	enter  0x4e51,0x59
  4177c6:	pop    esp
  4177c7:	jne    0x417811
  4177c9:	ins    DWORD PTR es:[edi],dx
  4177ca:	gs pop esp
  4177cc:	daa    
  4177cd:	pop    esp
  4177ce:	push   esi
  4177cf:	and    BYTE PTR [esp+ebx*2],dh
  4177d2:	jb     0x417833
  4177d4:	inc    esi
  4177d5:	pop    eax
  4177d6:	push   esi
  4177d7:	pop    esp
  4177d8:	sbb    DWORD PTR [eax],eax
	...
  4177e6:	add    BYTE PTR [eax],al
  4177e8:	pop    edi
  4177e9:	push   ebp
  4177ea:	gs inc eax
  4177ec:	and    DWORD PTR [edi+0x5c],edx
  4177ef:	das    
  4177f0:	pop    ss
  4177f1:	js     0x41784f
  4177f3:	xor    DWORD PTR [edx+0x57],edx
  4177f6:	je     0x417812
  4177f8:	inc    ebx
  4177f9:	ja     0x417868
  4177fb:	pop    es
  4177fc:	daa    
  4177fd:	pop    ebx
  4177fe:	pop    edi
  4177ff:	add    BYTE PTR [ecx+ebp*4+0x5c],dl
  417803:	inc    esi
  417804:	inc    edi
  417805:	xchg   esi,eax
  417806:	pop    esp
  417807:	push   ebx
  417808:	aaa    
  417809:	call   0x6c5d:0xbd1a6461
  417810:	adc    DWORD PTR [ebp-0x67ea96b8],esp
  417816:	imul   esi,DWORD PTR [edx+0xf],0xffffff90
  41781a:	inc    esi
  41781b:	push   esp
  41781c:	out    0xa3,al
  41781e:	imul   esi,DWORD PTR [ebx-0x26],0xffffffcb
  417822:	dec    edi
  417823:	outs   dx,DWORD PTR ds:[esi]
  417824:	clc    
  417825:	xchg   edi,eax
  417826:	jae    0x417889
  417828:	les    esp,FWORD PTR [esi-0x6608b9a4]
  41782e:	xor    bl,BYTE PTR [ebp+esi*4-0x56]
  417832:	jbe    0x417899
  417834:	mov    edx,0xc2616587
  417839:	mov    esp,0x98bf4863
  41783e:	je     0x4178af
  417840:	push   esp
  417841:	mov    dl,0x5c
  417843:	inc    esi
  417844:	stos   BYTE PTR es:[edi],al
  417845:	jnp    0x41788f
  417847:	outs   dx,DWORD PTR ds:[esi]
  417848:	inc    ebp
  417849:	xchg   edi,eax
  41784a:	add    BYTE PTR [ebx+0x0],dl
	...
  417859:	add    BYTE PTR [eax],al
  41785b:	inc    ecx
  41785c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41785d:	je     0x4178d6
  41785f:	pop    es
  417860:	xchg   esi,eax
  417861:	popa   
  417862:	pop    esp
  417863:	pop    eax
  417864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417865:	jb     0x417887
  417867:	arpl   WORD PTR [ebp-0x57069e92],sp
  41786d:	jb     0x4178cb
  41786f:	xor    eax,0xfa6576a5
  417874:	xchg   DWORD PTR [ebp+0x61],esp
  417877:	add    al,bl
  417879:	arpl   WORD PTR [eax-0x1],cx
  41787c:	xchg   esi,eax
  41787d:	je     0x4178ee
  41787f:	push   esp
  417880:	lods   eax,DWORD PTR ds:[esi]
  417881:	pop    esp
  417882:	inc    esi
  417883:	sub    dh,BYTE PTR [eax+ecx*2+0x6f]
  417887:	aas    
  417888:	ret    0x30
  41788b:	(bad)  
  41788d:	xor    eax,0x36b5d071
  417892:	fs aas 
  417894:	cdq    
  417895:	sbb    DWORD PTR [ecx-0x2d],esi
  417898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417899:	and    ebp,DWORD PTR [ebx-0x26]
  41789c:	lock dec edi
  41789e:	jno    0x417842
  4178a0:	add    eax,DWORD PTR [ecx]
  4178a2:	dec    esp
  4178a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178a4:	mov    eax,cr0
  4178a7:	mov    al,0x12
  4178a9:	sub    DWORD PTR [ebp-0x67],ebx
  4178ac:	cmc    
  4178ad:	xor    BYTE PTR [esi],ch
  4178af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178b0:	neg    DWORD PTR [ebx]
  4178b2:	add    BYTE PTR [ebx+0x26],dh
  4178b5:	cmp    DWORD PTR [edi+0x6c],eax
  4178b8:	and    eax,0x283f5240
  4178bd:	pop    ss
  4178be:	jno    0x4178c0
	...
  4178cc:	add    BYTE PTR [eax],al
  4178ce:	jae    0x417920
  4178d0:	adc    eax,0x33387b6c
  4178d5:	add    BYTE PTR [ecx+0x5147313d],al
  4178db:	dec    eax
  4178dc:	aaa    
  4178dd:	pop    edi
  4178de:	push   0x4c
  4178e0:	add    DWORD PTR [ecx+0x60],edx
  4178e3:	inc    edi
  4178e4:	sub    eax,0x20635e75
  4178e9:	pop    esp
  4178ea:	js     0x417935
  4178ec:	sbb    al,0x71
  4178ee:	sub    ecx,DWORD PTR [esi+esi*1+0x1a78085c]
  4178f5:	sbb    BYTE PTR fs:[esi+0x35],bh
  4178f9:	and    ah,bh
  4178fb:	popf   
  4178fc:	pop    ss
  4178fd:	imul   ebx,DWORD PTR [esi],0x77
  417900:	and    BYTE PTR [ebx+0xd],ah
  417903:	icebp  
  417904:	push   ebp
  417905:	ins    DWORD PTR es:[edi],dx
  417906:	and    DWORD PTR [ebp-0x7bf2a0cf],ebx
  41790c:	dec    eax
  41790d:	inc    ebp
  41790e:	out    0xc7,eax
  417910:	adc    BYTE PTR [edi],dh
  417912:	jecxz  0x417978
  417914:	sbb    DWORD PTR [eax+0x13],ecx
  417917:	outs   dx,DWORD PTR ds:[esi]
  417918:	sbb    esp,DWORD PTR ds:0x1b2aa7d3
  41791e:	in     al,0x6c
  417920:	or     BYTE PTR [edx],bl
  417922:	(bad)  [ecx+edi*8+0x3]
  417926:	jmp    0x4178b8
  417928:	div    DWORD PTR [esi]
  41792a:	retf   0xf370
  41792d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41792f:	enter  0x1cba,0x0
	...
  41793f:	add    BYTE PTR [eax],al
  417941:	stos   DWORD PTR es:[edi],eax
  417942:	arpl   dx,bx
  417944:	inc    edi
  417945:	aas    
  417946:	jl     0x4178e8
  417948:	xor    ebp,DWORD PTR [esi-0x61d03fab]
  41794e:	jo     0x4178f3
  417950:	push   edx
  417951:	outs   dx,BYTE PTR ds:[esi]
  417952:	jge    0x4178f9
  417954:	dec    edi
  417955:	outs   dx,DWORD PTR ds:[esi]
  417956:	enter  0x3293,0x98
  41795a:	outs   dx,BYTE PTR ds:[esi]
  41795b:	std    
  41795c:	sbb    al,0x69
  41795e:	outs   dx,DWORD PTR ds:[esi]
  41795f:	out    0xd9,eax
  417961:	pop    ecx
  417962:	outs   dx,BYTE PTR ds:[esi]
  417963:	nop
  417964:	add    edx,DWORD PTR [edx-0x74be4987]
  41796a:	js     0x417953
  41796c:	aas    
  41796d:	cmp    BYTE PTR [edx-0x19],0x3f
  417971:	jl     0x4178f9
  417973:	mov    ds:0xaac86d3c,eax
  417978:	push   eax
  417979:	imul   eax,DWORD PTR [ebx-0x37f0b05b],0x38
  417980:	inc    ebp
  417981:	pop    es
  417982:	outs   dx,DWORD PTR ds:[esi]
  417983:	pop    edx
  417984:	xor    BYTE PTR [edx],bl
  417986:	pop    edx
  417987:	push   eax
  417988:	add    al,0xe
  41798a:	ins    DWORD PTR es:[edi],dx
  41798b:	inc    ebp
  41798c:	xor    BYTE PTR [edx],dl
  41798e:	cmp    DWORD PTR [bx],ebx
  417991:	repz test BYTE PTR [ebx+0x19],cl
  417995:	sbb    eax,0xea450067
  41799a:	xchg   BYTE PTR [edi],bh
  41799c:	sbb    DWORD PTR [eax],edi
  41799e:	jl     0x4179e1
  4179a0:	sbb    al,0x2f
  4179a2:	imul   eax,DWORD PTR [esi+0x35],0x0
	...
  4179b1:	add    BYTE PTR [eax],al
  4179b3:	add    BYTE PTR [ebx],dl
  4179b5:	test   al,0x36
  4179b7:	leave  
  4179b8:	and    al,0x6b
  4179ba:	imul   eax,DWORD PTR [edi+eax*1],0xffffff8d
  4179be:	inc    ecx
  4179bf:	sbb    eax,0xb6c6b36
  4179c4:	sbb    al,0x5a
  4179c6:	add    BYTE PTR [edx],bl
  4179c8:	es data16 je 0x4179c2
  4179cc:	pop    ebp
  4179cd:	pop    edx
  4179ce:	arpl   bp,ax
  4179d0:	jg     0x417a3e
  4179d2:	ins    DWORD PTR es:[edi],dx
  4179d3:	retf   
  4179d4:	pop    ebp
  4179d5:	ins    BYTE PTR es:[edi],dx
  4179d6:	push   ecx
  4179d7:	stos   BYTE PTR es:[edi],al
  4179d8:	jge    0x417a52
  4179da:	inc    ebx
  4179db:	lods   eax,DWORD PTR ds:[esi]
  4179dc:	sbb    DWORD PTR [ecx+0x74],0xffffffcc
  4179e0:	jle    0x417a56
  4179e2:	push   eax
  4179e3:	or     DWORD PTR ds:0x27bb50bd,ecx
  4179e9:	data16 arpl WORD PTR [edx-0x68929acd],di
  4179f0:	sbb    eax,0x83b85c6c
  4179f5:	je     0x417a64
  4179f7:	xchg   BYTE PTR [eax+0x6a],cl
  4179fa:	pop    edi
  4179fb:	fwait
  4179fc:	cmp    al,0x77
  4179fe:	ins    DWORD PTR es:[edi],dx
  4179ff:	(bad)  
  417a00:	and    BYTE PTR [ebx+0x5f],dl
  417a03:	jnp    0x417a2e
  417a05:	jl     0x417a4c
  417a07:	test   DWORD PTR [edi],esp
  417a09:	push   0x5f
  417a0b:	jge    0x417a20
  417a0d:	xchg   DWORD PTR [edi],edi
  417a0f:	cmp    DWORD PTR [eax+0x7c],esi
  417a12:	inc    ecx
  417a13:	push   esp
  417a14:	outs   dx,DWORD PTR ds:[esi]
  417a15:	imul   eax,DWORD PTR [esi+0x3d],0x0
	...
  417a24:	add    BYTE PTR [eax],al
  417a26:	add    BYTE PTR [ebx],cl
  417a28:	test   al,0x35
  417a2a:	or     DWORD PTR [ebx+0x6b],ebx
  417a2d:	imul   eax,DWORD PTR [eax],0x3
  417a30:	nop
  417a31:	dec    ebp
  417a32:	inc    ebx
  417a33:	xor    bh,BYTE PTR [edi-0x570b9395]
  417a39:	jb     0x417a3b
  417a3b:	push   ebp
  417a3c:	mov    edi,0xa9517466
  417a41:	jb     0x417aa8
  417a43:	sub    al,BYTE PTR [edi-0x56cb9094]
  417a49:	ins    BYTE PTR es:[edi],dx
  417a4a:	push   ebx
  417a4b:	and    eax,0x1a455089
  417a50:	xor    DWORD PTR [ecx+0x74],0x43
  417a54:	mov    dl,BYTE PTR [eax+edx*2+0x76]
  417a58:	xlat   BYTE PTR ds:[ebx]
  417a59:	sbb    al,0x50
  417a5b:	xor    al,0xc1
  417a5d:	gs adc ax,0x6595
  417a62:	outs   dx,DWORD PTR ds:[esi]
  417a63:	clc    
  417a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a65:	ins    BYTE PTR es:[edi],dx
  417a66:	pop    esp
  417a67:	out    0x84,eax
  417a69:	push   esp
  417a6a:	outs   dx,DWORD PTR ds:[esi]
  417a6b:	fnstenv [ebx-0x382b9e9e]
  417a71:	dec    edi
  417a72:	outs   dx,DWORD PTR ds:[esi]
  417a73:	add    BYTE PTR [ebx+esi*2+0x5cbac461],ch
  417a7a:	inc    edi
  417a7b:	mov    edx,0xca6162c0
  417a80:	je     0x417ac1
  417a82:	inc    ecx
  417a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a84:	call   0x4661:0xabc3435c
	...
  417a97:	add    BYTE PTR [eax],al
  417a99:	add    BYTE PTR [edx+0x6382077],dl
  417a9f:	mov    al,ds:0x83c36d6b
  417aa4:	dec    ebp
  417aa5:	inc    ebx
  417aa6:	mov    ds:0xc46c6bc0,al
  417aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aac:	jb     0x417aae
  417aae:	jne    0x417a63
  417ab0:	data16 je 0x417ac4
  417ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ab4:	jb     0x417b1b
  417ab6:	aas    
  417ab7:	xchg   ebp,eax
  417ab8:	cmp    eax,0x238f286c
  417abd:	ins    BYTE PTR es:[edi],dx
  417abe:	in     al,dx
  417abf:	lods   eax,DWORD PTR ds:[esi]
  417ac0:	inc    ebx
  417ac1:	push   eax
  417ac2:	add    bh,BYTE PTR [ebp-0x73f48cbf]
  417ac8:	ds push esp
  417aca:	psrlw  mm5,mm4
  417acd:	pop    ds
  417ace:	movsx  edx,WORD PTR ds:0x31bde266
  417ad5:	addr16 rol dl,1
  417ad8:	and    ebp,DWORD PTR [ebx+edi*8-0x61]
  417adc:	inc    ecx
  417add:	push   esp
  417ade:	loopne 0x417a91
  417ae0:	sbb    BYTE PTR [edx-0x22],ah
  417ae3:	fiadd  WORD PTR [eax]
  417ae5:	pop    esp
  417ae6:	clc    
  417ae7:	les    edx,FWORD PTR ds:0x51dd9e62
  417aed:	inc    ecx
  417aee:	jle    0x417b11
  417af0:	inc    eax
  417af1:	pop    esp
  417af2:	jl     0x417ae8
  417af4:	sub    al,0x63
  417af6:	jns    0x417b15
  417af8:	push   ecx
  417af9:	add    BYTE PTR [ebx+0x22],bh
  417afc:	adc    eax,0x6d
	...
  417b0d:	popf   
  417b0e:	adc    BYTE PTR ds:0x51307c51,dl
  417b14:	inc    ebx
  417b15:	arpl   WORD PTR [esi],bp
  417b17:	xor    BYTE PTR [edx+eiz*2+0x23],dh
  417b1b:	dec    ebp
  417b1c:	push   eax
  417b1d:	pop    ds
  417b1e:	and    DWORD PTR [edi],ebp
  417b20:	ins    DWORD PTR es:[edi],dx
  417b21:	aas    
  417b22:	sbb    eax,0x4f506c3e
  417b27:	and    al,0x6c
  417b29:	ins    BYTE PTR es:[edi],dx
  417b2a:	cs inc esp
  417b2c:	push   eax
  417b2d:	jp     0x417b54
  417b2f:	inc    edx
  417b30:	jae    0x417b85
  417b32:	inc    esp
  417b33:	cmp    edx,DWORD PTR [edi+ebp*2+0x11]
  417b37:	xor    eax,0x1443367
  417b3c:	pop    esp
  417b3d:	cld    
  417b3e:	(bad)  
  417b3f:	pop    esp
  417b40:	xor    BYTE PTR [edx+eax*4],bl
  417b43:	xor    edx,DWORD PTR [edi+edi*1+0x7c]
  417b47:	pop    edx
  417b48:	sbb    DWORD PTR [ecx+0x64],ebp
  417b4b:	dec    eax
  417b4c:	xor    BYTE PTR [edi],bh
  417b4e:	ja     0x417ba6
  417b50:	push   ds
  417b51:	adc    edx,DWORD PTR [ebx+0x48]
  417b54:	xor    bl,BYTE PTR [esp+edi*2]
  417b57:	sub    eax,0x3f571818
  417b5c:	ds pop ss
  417b5e:	js     0x417ba3
  417b60:	repz push 0xeb1e0e75
  417b66:	push   edx
  417b67:	or     BYTE PTR [edx],dh
  417b69:	fdivr  QWORD PTR [ebx+0x25]
  417b6c:	sbb    al,dh
  417b6e:	push   esi
  417b6f:	(bad)  
	...
  417b7d:	add    BYTE PTR [eax],al
  417b7f:	add    bh,ah
  417b81:	ja     0x417b6a
  417b83:	push   edx
  417b84:	shl    BYTE PTR [ecx-0x5],cl
  417b87:	cs cwde 
  417b89:	push   esi
  417b8a:	add    al,0x48
  417b8c:	jns    0x417bfa
  417b8e:	enter  0x9732,0x82
  417b92:	mov    edi,0xe7948353
  417b97:	cmp    al,0xa9
  417b99:	push   ebp
  417b9a:	shl    DWORD PTR [ebx+eiz*4],cl
  417b9d:	ins    BYTE PTR es:[edi],dx
  417b9e:	int3   
  417b9f:	xor    DWORD PTR [ebx+0x6f1bb367],eax
  417ba5:	addr16 mov ebx,0xc8583f1b
  417bab:	das    
  417bac:	addr16 enter 0x15b0,0x6e
  417bb1:	push   esp
  417bb2:	mov    BYTE PTR [edi],dl
  417bb4:	push   ebx
  417bb5:	test   al,0xb7
  417bb7:	and    al,0x53
  417bb9:	jo     0x417ba2
  417bbb:	aas    
  417bbc:	jo     0x417c12
  417bbe:	mov    BYTE PTR ds:0x20836c5a,bh
  417bc4:	dec    ebp
  417bc5:	enter  0x9500,0xd
  417bc9:	popa   
  417bca:	je     0x417b50
  417bcc:	ins    DWORD PTR es:[edi],dx
  417bcd:	stos   BYTE PTR es:[edi],al
  417bce:	fs dec eax
  417bd0:	outs   dx,DWORD PTR ds:[esi]
  417bd1:	enter  0x385c,0x50
  417bd5:	popa   
  417bd6:	popa   
  417bd7:	inc    edx
  417bd8:	jno    0x417c3f
  417bda:	pop    edi
  417bdb:	push   ebp
  417bdc:	cmp    edi,DWORD PTR [eax+ecx*2+0x50]
  417be0:	dec    esi
  417be1:	push   esp
  417be2:	ins    DWORD PTR es:[edi],dx
  417be3:	cmp    eax,DWORD PTR [eax]
	...
  417bf1:	add    BYTE PTR [eax],al
  417bf3:	push   esp
  417bf4:	stos   BYTE PTR es:[edi],al
  417bf5:	fs dec eax
  417bf7:	das    
  417bf8:	enter  0x275c,0x57
  417bfc:	jns    0x417c6f
  417bfe:	adc    DWORD PTR [ecx],ebp
  417c00:	adc    BYTE PTR [eax+0x3d],0x6e
  417c04:	fstp   DWORD PTR [eax+0x2f]
  417c07:	aaa    
  417c08:	jns    0x417c7b
  417c0a:	add    DWORD PTR [ecx],edx
  417c0c:	adc    BYTE PTR [eax+0x25],0x4f
  417c10:	fstp   DWORD PTR [eax+0x27]
  417c13:	and    al,0x6c
  417c15:	arpl   WORD PTR [ebx],dx
  417c17:	push   esp
  417c18:	ins    BYTE PTR es:[edi],dx
  417c19:	ins    BYTE PTR es:[edi],dx
  417c1a:	or     BYTE PTR [ebx],bh
  417c1c:	jl     0x417c8f
  417c1e:	rcr    BYTE PTR [eax+0x65],1
  417c21:	imul   ecx,eax,0x4a
  417c24:	jns    0x417c8b
  417c26:	int3   
  417c27:	dec    esi
  417c28:	stos   BYTE PTR es:[edi],al
  417c29:	js     0x417be7
  417c2b:	sub    al,cl
  417c2d:	pop    esp
  417c2e:	mov    ebx,0xcf636729
  417c33:	push   eax
  417c34:	push   edi
  417c35:	arpl   WORD PTR [ebx-0x458d9ad6],di
  417c3b:	or     dl,BYTE PTR [ecx+0x6b]
  417c3e:	xchg   ebp,eax
  417c3f:	cmp    al,0x7c
  417c41:	xchg   ax,ax
  417c43:	dec    eax
  417c44:	gs jp  0x417bc7
  417c47:	xor    BYTE PTR [edi+ebx*2-0x41],ch
  417c4b:	and    al,0x6d
  417c4d:	ins    BYTE PTR es:[edi],dx
  417c4e:	add    dh,dl
  417c50:	ja     0x417cbd
  417c52:	dec    dx
  417c54:	lods   al,BYTE PTR ds:[esi]
  417c55:	pop    ebp
  417c56:	jb     0x417c58
	...
  417c64:	add    BYTE PTR [eax],al
  417c66:	retf   
  417c67:	add    BYTE PTR [esi+0x69],0x32
  417c6b:	mov    edx,0xc012695a
  417c70:	pop    ebp
  417c71:	add    BYTE PTR [ebp-0x4d],ah
  417c74:	data16 je 0x417c70
  417c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c78:	jb     0x417cdf
  417c7a:	bound  ebx,QWORD PTR [edx-0x7204939b]
  417c80:	gs ins BYTE PTR es:[edi],dx
  417c82:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c84:	and    BYTE PTR [ebx+0x2],al
  417c87:	mov    ebp,0xc42a6e61
  417c8c:	inc    ebp
  417c8d:	outs   dx,BYTE PTR ds:[esi]
  417c8e:	inc    ebp
  417c8f:	cwde   
  417c90:	pop    ebp
  417c91:	ins    BYTE PTR es:[edi],dx
  417c92:	xor    al,BYTE PTR [ebx-0x3bcb96bc]
  417c98:	dec    eax
  417c99:	outs   dx,DWORD PTR ds:[esi]
  417c9a:	xor    eax,0x45550098
  417c9f:	mov    ecx,0xa5260072
  417ca4:	outs   dx,DWORD PTR ds:[esi]
  417ca5:	jae    0x417ccd
  417ca7:	jl     0x417d14
  417ca9:	jb     0x417cd5
  417cab:	int3   
  417cac:	push   edx
  417cad:	adc    edi,DWORD PTR gs:[ebp-0x77c99a8c]
  417cb4:	gs jb  0x417cdd
  417cb7:	jns    0x417d1a
  417cb9:	jb     0x417ca3
  417cbb:	mov    dh,0x72
  417cbd:	and    BYTE PTR [edx+0x166570a2],ch
  417cc3:	jns    0x417d26
  417cc5:	jb     0x417c7f
  417cc7:	mov    dh,0x72
  417cc9:	add    BYTE PTR cs:[eax],al
	...
  417cd8:	add    BYTE PTR [esi-0x298b9044],bl
  417cde:	js     0x417d41
  417ce0:	jb     0x417caa
  417ce2:	mov    dh,0x72
  417ce4:	cs aas 
  417ce6:	adc    al,0x30
  417ce8:	arpl   WORD PTR [ebp-0x1f],cx
  417ceb:	dec    edi
  417cec:	arpl   WORD PTR [ebp+0x57],cx
  417cef:	push   ds
  417cf0:	jb     0x417d03
  417cf2:	xor    DWORD PTR [edx],esp
  417cf4:	jno    0x417d22
  417cf6:	loope  0x417d47
  417cf8:	arpl   WORD PTR ds:0x59721e5f,bp
  417cfe:	xchg   ecx,eax
  417cff:	xor    DWORD PTR [edx+0x2b],esi
  417d02:	loope  0x417d34
  417d04:	pop    edi
  417d05:	adc    ecx,DWORD PTR [ecx+0x731a5104]
  417d0b:	sbb    ah,BYTE PTR [ebx+0xd]
  417d0e:	mov    ch,0x1b
  417d10:	jo     0x417d2c
  417d12:	loope  0x417d60
  417d14:	pop    edi
  417d15:	in     al,dx
  417d16:	xchg   esp,eax
  417d17:	in     al,0x50
  417d19:	ficom  DWORD PTR [edx+0xed631a]
  417d1f:	dec    ecx
  417d20:	ins    DWORD PTR es:[edi],dx
  417d21:	in     al,dx
  417d22:	mov    esp,0xb1de4c04
  417d27:	sbb    BYTE PTR [eax],ah
  417d29:	in     al,dx
  417d2a:	retf   
  417d2b:	push   ss
  417d2c:	jbe    0x417d10
  417d2e:	shl    al,cl
  417d30:	push   edx
  417d31:	int3   
  417d32:	retf   
  417d33:	push   ss
  417d34:	add    BYTE PTR [ebx+0x5f7415c0],cl
  417d3a:	mov    dl,0x27
  417d3c:	jb     0x417d3e
	...
  417d4a:	add    BYTE PTR [eax],al
  417d4c:	mov    cl,0x4
  417d4e:	adc    esp,DWORD PTR [eax]
  417d50:	pop    DWORD PTR [eax]
  417d52:	push   ss
  417d53:	jno    0x417d94
  417d55:	sub    eax,0xc18b7124
  417d5a:	xor    eax,0x28178d63
  417d5f:	jb     0x417dc0
  417d61:	xor    DWORD PTR [edx],esi
  417d63:	jb     0x417dd8
  417d65:	loope  0x417db3
  417d67:	pop    edi
  417d68:	ins    BYTE PTR es:[edi],dx
  417d69:	sbb    eax,0xc86250e1
  417d6e:	cdq    
  417d6f:	sbb    DWORD PTR [edx+ebx*2-0x39],ebx
  417d73:	xor    edi,DWORD PTR [eax+0x5c]
  417d76:	jg     0x417d7b
  417d78:	sub    DWORD PTR [ecx-0x66],0x17
  417d7c:	pop    ds
  417d7d:	jnp    0x417d0b
  417d7f:	adc    eax,0xe3796d49
  417d84:	or     al,0x51
  417d86:	ja     0x417db0
  417d88:	aas    
  417d89:	mov    ss,WORD PTR [ebx+0x48865f33]
  417d8f:	sbb    bl,BYTE PTR [eax]
  417d91:	outs   dx,DWORD PTR ds:[esi]
  417d92:	dec    eax
  417d93:	sbb    BYTE PTR [edx],ch
  417d95:	pop    edx
  417d96:	out    0x49,eax
  417d98:	jmp    0x417e11
  417d9a:	pop    es
  417d9b:	inc    edi
  417d9c:	sbb    ah,BYTE PTR [ebp+0x54]
  417d9f:	and    eax,0x16446c11
  417da4:	aas    
  417da5:	outs   dx,BYTE PTR ds:[esi]
  417da6:	cmp    edx,DWORD PTR [ebx+eiz*8]
  417da9:	pusha  
  417daa:	cmp    bl,BYTE PTR [eax]
  417dac:	sbb    DWORD PTR [edi+ebx*1+0x18],ebx
	...
  417dbc:	add    BYTE PTR [eax],al
  417dbe:	add    BYTE PTR [edi],bh
  417dc0:	je     0x417deb
  417dc2:	sbb    ebx,ebp
  417dc4:	arpl   WORD PTR [eax+ebx*1],cx
  417dc7:	out    dx,eax
  417dc8:	pop    ecx
  417dc9:	(bad)  
  417dca:	xor    ah,cl
  417dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dcd:	sbb    dh,BYTE PTR [ebx]
  417dcf:	fstp   DWORD PTR [ebx-0xa]
  417dd2:	and    al,0xad
  417dd4:	imul   esp,edi,0xfffffff1
  417dd7:	pushf  
  417dd8:	repz add ebx,DWORD PTR [bx+di+0x6a]
  417ddd:	xlat   BYTE PTR ds:[ebx]
  417dde:	push   ss
  417ddf:	aas    
  417de0:	jns    0x417db0
  417de2:	sub    DWORD PTR [ebx-0x63ea37a3],edx
  417de8:	je     0x417d93
  417dea:	xor    eax,DWORD PTR [ecx+0x7d3f977c]
  417df0:	pop    ebx
  417df1:	retf   
  417df2:	das    
  417df3:	pop    esp
  417df4:	pop    esp
  417df5:	add    BYTE PTR [ecx],cl
  417df7:	sub    ebx,DWORD PTR [edx+0x6d]
  417dfa:	mov    esi,0xbd46a816
  417dff:	sub    al,0x74
  417e01:	dec    ebx
  417e02:	mov    BYTE PTR [ebx],ch
  417e04:	data16 add BYTE PTR [edx-0x698b91f3],bh
  417e0b:	and    ebx,DWORD PTR [edx+0x63]
  417e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e0f:	jp     0x417e6a
  417e11:	ins    BYTE PTR es:[edi],dx
  417e12:	lea    esp,[edi+0x5c]
  417e15:	push   eax
  417e16:	jnp    0x417e85
  417e18:	arpl   WORD PTR [esi-0x37],sp
  417e1b:	jno    0x417e80
  417e1d:	pop    bp
  417e1f:	inc    esi
  417e20:	jne    0x417e94
  417e22:	inc    esp
	...
  417e2f:	add    BYTE PTR [eax],al
  417e31:	add    bh,bh
  417e33:	mov    DWORD PTR [ebx+0x45],esi
  417e36:	dec    edi
  417e37:	imul   esi,DWORD PTR [ecx+edi*1+0x31],0x9b4f6d63
  417e3f:	mov    edx,DWORD PTR [ecx+ebx*1+0x63]
  417e43:	mov    BYTE PTR [eax+eax*2+0x18],ch
  417e47:	data16 je 0x417e57
  417e4a:	clc    
  417e4b:	je     0x417eb4
  417e4d:	pop    ss
  417e4e:	cmp    esi,DWORD PTR [edi+0x6d]
  417e51:	pop    es
  417e52:	aaa    
  417e53:	pop    ebx
  417e54:	pop    edi
  417e55:	sbb    ebx,DWORD PTR [eax]
  417e57:	je     0x417e9b
  417e59:	cmp    ebp,esi
  417e5b:	jnp    0x417ead
  417e5d:	and    eax,0xd6c58f9
  417e62:	pusha  
  417e63:	pop    esp
  417e64:	and    BYTE PTR [ecx],bl
  417e66:	dec    ecx
  417e67:	arpl   WORD PTR [ebp+0x7],bp
  417e6a:	and    ecx,DWORD PTR [ebx-0x7c9f46ac]
  417e70:	jo     0x417e47
  417e72:	arpl   WORD PTR gs:[esi-0x26],bp
  417e76:	cmp    al,0x77
  417e78:	ins    DWORD PTR es:[edi],dx
  417e79:	(bad)  
  417e7a:	xor    BYTE PTR [ebx+0x5f],bl
  417e7d:	add    ah,al
  417e7f:	lods   eax,DWORD PTR ds:[esi]
  417e80:	pop    esp
  417e81:	inc    edx
  417e82:	mov    bl,0xa4
  417e84:	ins    BYTE PTR es:[edi],dx
  417e85:	gs mov dl,0x98
  417e88:	jb     0x417ef9
  417e8a:	test   eax,0xc953209e
  417e8f:	sahf   
  417e90:	je     0x417f09
  417e92:	(bad)  
  417e93:	mov    edx,0x5c61
	...
  417ea4:	add    BYTE PTR [ebp+edi*4-0x433c9394],ah
  417eab:	push   eax
  417eac:	jb     0x417e57
  417eae:	xchg   edi,eax
  417eaf:	data16 and al,ah
  417eb2:	pushf  
  417eb3:	push   eax
  417eb4:	and    ch,ah
  417eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eb7:	gs sub BYTE PTR gs:[ebp-0x4ff9b0a4],bh
  417ebf:	outs   dx,DWORD PTR gs:[esi]
  417ec1:	or     BYTE PTR [ebx-0x5e06ad00],bh
  417ec7:	je     0x417f40
  417ec9:	idiv   DWORD PTR [ebp-0x63aba39f]
  417ecf:	inc    esi
  417ed0:	push   esp
  417ed1:	push   esi
  417ed2:	int3   
  417ed3:	dec    esp
  417ed4:	popa   
  417ed5:	xor    eax,0x25654fb0
  417eda:	mov    ebx,0x82486f65
  417edf:	gs ins BYTE PTR es:[edi],dx
  417ee1:	inc    ebx
  417ee2:	int3   
  417ee3:	dec    edi
  417ee4:	imul   esi,DWORD PTR [edx],0x3f446fad
  417eea:	mov    esi,0xbb284900
  417eef:	je     0x417f52
  417ef1:	dec    edx
  417ef2:	cwde   
  417ef3:	inc    esp
  417ef4:	imul   esi,DWORD PTR [edi+esi*8],0xa32e2dfc
  417efb:	ins    BYTE PTR es:[edi],dx
  417efc:	add    dl,bh
  417efe:	pushf  
  417eff:	imul   esp,DWORD PTR [ecx-0xc],0x3f5446bb
  417f06:	adc    DWORD PTR [ecx],eax
  417f08:	inc    esi
	...
  417f15:	add    BYTE PTR [eax],al
  417f17:	add    BYTE PTR [esi-0x698dd005],bl
  417f1d:	adc    eax,0xd297126
  417f22:	and    dh,BYTE PTR [edi+edi*1+0x29]
  417f26:	sub    dh,BYTE PTR [ecx+0x73]
  417f29:	adc    dl,BYTE PTR [ebx]
  417f2b:	ja     0x417f3e
  417f2d:	inc    ebp
  417f2e:	and    dh,BYTE PTR [edi+edi*1+0x40]
  417f32:	and    eax,0x2c3f4d64
  417f37:	arpl   WORD PTR cs:[eax+0x15],ax
  417f3b:	add    BYTE PTR [esi+0x54],cl
  417f3e:	sub    ah,BYTE PTR [ecx+0x24]
  417f41:	add    esp,DWORD PTR ds:0x3ce12b5f
  417f47:	push   esp
  417f48:	xor    cl,BYTE PTR [edi+0x23]
  417f4b:	ins    DWORD PTR es:[edi],dx
  417f4c:	stc    
  417f4d:	xchg   esp,eax
  417f4e:	xor    al,0x0
  417f50:	in     al,dx
  417f51:	and    DWORD PTR [esi],0x12800874
  417f57:	arpl   bx,bp
  417f59:	pushf  
  417f5a:	pop    ss
  417f5b:	jb     0x417f7a
  417f5d:	jp     0x417fa5
  417f5f:	push   esp
  417f60:	psraw  mm5,QWORD PTR [ebx]
  417f63:	outs   dx,BYTE PTR ds:[esi]
  417f64:	in     al,dx
  417f65:	xchg   esp,eax
  417f66:	and    ebp,DWORD PTR [ebx+ebx*8-0x70]
  417f6a:	and    esi,DWORD PTR [edi+edx*8-0x20]
  417f6e:	xor    DWORD PTR [ebp-0x1f],ebp
  417f71:	mov    esp,0xc3cd5f15
  417f76:	inc    eax
  417f77:	push   ecx
  417f78:	fdivr  DWORD PTR [ebx+eiz*1+0x5c]
	...
  417f8b:	stc    
  417f8c:	mov    ds:0xe18f5446,al
  417f91:	inc    ecx
  417f92:	jb     0x417f2e
  417f94:	lds    esp,FWORD PTR [edi]
  417f96:	outs   dx,BYTE PTR ds:[esi]
  417f97:	mov    bl,0xc8
  417f99:	and    ebp,DWORD PTR [esp+ecx*4-0x38]
  417f9d:	enter  0x932f,0xc8
  417fa1:	stos   BYTE PTR es:[edi],al
  417fa2:	adc    DWORD PTR [esp+ebp*2+0x61932dcc],ebx
  417fa9:	enter  0x7e2f,0x60
  417fad:	int3   
  417fae:	and    ah,BYTE PTR [esi-0x38]
  417fb1:	call   0x6d24:0xbe5c592e
  417fb8:	ins    DWORD PTR es:[edi],dx
  417fb9:	mov    esi,DWORD PTR [edx]
  417fbb:	push   edx
  417fbc:	pop    esp
  417fbd:	mov    BYTE PTR [edi],bh
  417fbf:	or     DWORD PTR [edx+0x746f37a5],0x615313a6
  417fc9:	jle    0x417ff8
  417fcb:	dec    esi
  417fcc:	enter  0x2497,0x2e
  417fd0:	push   edi
  417fd1:	jbe    0x418001
  417fd3:	sub    eax,0x2e38e76c
  417fd8:	ins    DWORD PTR es:[edi],dx
  417fd9:	jns    0x418028
  417fdb:	add    BYTE PTR [ebp+0x4c],ah
  417fde:	add    al,0x7
  417fe0:	arpl   WORD PTR [edx+0x18],bx
  417fe3:	push   eax
  417fe4:	ins    BYTE PTR es:[edi],dx
  417fe5:	pop    ecx
  417fe6:	adc    edi,DWORD PTR [edi]
  417fe8:	jbe    0x41802e
  417fea:	xor    DWORD PTR [edx],edx
  417fec:	pop    esp
  417fed:	dec    esp
  417fee:	dec    eax
	...
  417ffb:	add    BYTE PTR [eax],al
  417ffd:	add    al,ah
  417fff:	push   ebp
  418000:	out    0x33,eax
  418002:	loop   0x418059
  418004:	cmp    eax,DWORD PTR [edi+esi*8]
  418007:	bound  edi,QWORD PTR [edx]
  418009:	sbb    cl,dh
  41800b:	push   0x783f2914
  418010:	push   cs
  418011:	adc    cl,bl
  418013:	(bad)  
  418014:	cmp    al,0x13
  418016:	fcom   QWORD PTR [ebp-0x3]
  418019:	and    al,0xd4
  41801b:	ins    BYTE PTR es:[edi],dx
  41801c:	out    0x33,eax
  41801e:	cwde   
  41801f:	push   ebp
  418020:	cli    
  418021:	push   ss
  418022:	mov    ds:0x430d0056,al
  418027:	sub    BYTE PTR [ebp-0x6],0x48
  41802b:	mov    WORD PTR [edi-0x25],fs
  41802e:	mov    dh,BYTE PTR [ecx+0x6b]
  418031:	les    edi,FWORD PTR [edi+esi*2]
  418034:	ins    DWORD PTR es:[edi],dx
  418035:	iret   
  418036:	xor    BYTE PTR [ebx+0x5f],bl
  418039:	fist   DWORD PTR [edi+0x74]
  41803c:	inc    ecx
  41803d:	(bad)  
  41803e:	and    ch,BYTE PTR [edx+0x63]
  418041:	les    edi,FWORD PTR [ebp+0x55]
  418044:	jo     0x41804f
  418046:	sub    al,0x63
  418048:	data16 mov ch,0x49
  41804b:	jno    0x4180bf
  41804d:	mov    WORD PTR [eax],ds
  41804f:	mov    DWORD PTR [esi-0x6b],ebp
  418052:	daa    
  418053:	push   esi
  418054:	outs   dx,BYTE PTR ds:[esi]
  418055:	mov    WORD PTR [eax],?
  418057:	je     0x4180a9
  418059:	fwait
  41805a:	adc    DWORD PTR [edx+0x67],ebp
  41805d:	xchg   ebp,eax
  41805e:	addr16 push edi
  418060:	add    BYTE PTR [edx+0x0],bl
	...
  41806e:	add    BYTE PTR [eax],al
  418070:	add    BYTE PTR [ecx+0x6a],ah
  418073:	je     0x4180f3
  418075:	arpl   WORD PTR [esi+0x63],dx
  418078:	(bad)  
  418079:	cli    
  41807a:	jnp    0x4180cc
  41807c:	ds pop esp
  41807e:	push   esi
  41807f:	arpl   WORD PTR ds:0x2c5282fe,di
  418085:	add    DWORD PTR [eax+edx*2+0x2d],edi
  418089:	dec    esi
  41808a:	imul   esi,DWORD PTR [esp+ecx*2+0x4e],0x4e4e48c8
  418092:	pop    esp
  418093:	add    BYTE PTR [esi+ecx*2],bl
  418096:	gs jb  0x418082
  418099:	sub    al,0x63
  41809b:	jb     0x4180ba
  41809d:	inc    ebx
  41809e:	js     0x4180f5
  4180a0:	jmp    0x3ba9dcb1
  4180a5:	inc    ebx
  4180a6:	ja     0x4180f9
  4180a8:	and    DWORD PTR [ebx],edi
  4180aa:	pop    eax
  4180ab:	jb     0x4180ad
  4180ad:	push   ecx
  4180ae:	stos   BYTE PTR es:[edi],al
  4180af:	gs ins BYTE PTR es:[edi],dx
  4180b1:	cmp    esi,DWORD PTR [edi-0x67bc87d2]
  4180b7:	add    BYTE PTR [eax+ebx*2-0x70],bl
  4180bb:	push   eax
  4180bc:	and    bl,ch
  4180be:	lods   al,BYTE PTR ds:[esi]
  4180bf:	jo     0x41812d
  4180c1:	add    DWORD PTR [edi-0x67e98d9f],esi
  4180c7:	imul   esp,DWORD PTR [esi-0x16],0xffffffbb
  4180cb:	pop    ebp
  4180cc:	jb     0x4180d9
  4180ce:	xchg   ecx,eax
  4180cf:	inc    esi
  4180d0:	push   esp
  4180d1:	(bad)  
  4180d2:	in     al,0x41
  4180d4:	js     0x4180d6
	...
  4180e2:	add    BYTE PTR [eax],al
  4180e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e5:	mov    al,ds:0xb6fb726b
  4180ea:	pop    esp
  4180eb:	inc    esi
  4180ec:	call   0x6cb4:0x9e452094
  4180f3:	outs   dx,DWORD PTR ds:[esi]
  4180f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180f5:	test   eax,0xa3895c72
  4180fa:	jb     0x418167
  4180fc:	xor    eax,0xbb635db5
  418101:	nop
  418102:	dec    ecx
  418103:	inc    esi
  418104:	aad    0x98
  418106:	imul   ebp,DWORD PTR [edi+0x22],0xffffff87
  41810a:	pop    ebp
  41810b:	jb     0x418140
  41810d:	imul   BYTE PTR [esi]
  41810f:	xor    al,0xa6
  418111:	xchg   BYTE PTR [ecx+0x74],dh
  418114:	jmp    0x6b97:0x96736ea2
  41811b:	data16 cmp bh,BYTE PTR [ebx-0x78048da3]
  418122:	inc    esi
  418123:	push   esp
  418124:	inc    esi
  418125:	in     al,dx
  418126:	inc    ecx
  418127:	js     0x41814f
  418129:	cwde   
  41812a:	imul   esi,DWORD PTR [edx+0x4b],0xffffffb6
  41812e:	pop    esp
  41812f:	push   eax
  418130:	xor    al,0xa3
  418132:	imul   di,WORD PTR [edi],0x25cb
  418137:	jno    0x418178
  418139:	(bad)  
  41813a:	and    DWORD PTR [ecx-0x54],esi
  41813d:	into   
  41813e:	sub    esi,DWORD PTR [edx-0x65]
  418141:	loope  0x418173
  418143:	pop    edi
  418144:	lods   al,BYTE PTR ds:[esi]
  418145:	rcl    BYTE PTR [ebx],cl
  418147:	ins    DWORD PTR es:[edi],dx
	...
  418154:	add    BYTE PTR [eax],al
  418156:	add    BYTE PTR [ebp-0x7088c73b],ch
  41815c:	cld    
  41815d:	add    BYTE PTR [eax-0x60],cl
  418160:	repnz adc al,0x0
  418163:	jnp    0x41816b
  418165:	and    al,0x67
  418167:	xchg   ecx,eax
  418168:	loope  0x41819a
  41816a:	ins    DWORD PTR es:[edi],dx
  41816b:	ins    DWORD PTR es:[edi],dx
  41816c:	or     eax,0xf8614701
  418171:	adc    al,0x67
  418173:	pop    esi
  418174:	add    eax,0x96b5f31
  418179:	add    DWORD PTR [esi+0x53],eax
  41817c:	xor    DWORD PTR [eax],esi
  41817e:	addr16 dec ebx
  418180:	inc    esp
  418181:	jmp    0x4181fa
  418183:	pop    edx
  418184:	inc    ebp
  418185:	add    DWORD PTR [ecx+edi*2+0x33],ebx
  418189:	sub    ah,BYTE PTR [ebp+0x1e]
  41818c:	dec    ebp
  41818d:	xor    DWORD PTR es:[edi],edi
  418190:	jmp    FWORD PTR [ecx]
  418192:	outs   dx,BYTE PTR ds:[esi]
  418193:	push   ss
  418194:	loope  0x4181d2
  418196:	push   esi
  418197:	push   ds
  418198:	dec    edi
  418199:	inc    ebp
  41819a:	ja     0x4181c0
  41819c:	jl     0x4181d6
  41819e:	inc    ecx
  41819f:	and    BYTE PTR [edi+0x22],bh
  4181a2:	and    BYTE PTR [di+0x6335],dl
  4181a7:	or     al,0x72
  4181a9:	sub    ebp,DWORD PTR [ebp-0x17]
  4181ac:	xchg   ecx,eax
  4181ad:	add    al,0x5c
  4181af:	or     al,0x84
  4181b1:	adc    eax,0x2a85d671
  4181b6:	jno    0x4181f7
  4181b8:	mov    dl,0x29
  4181ba:	data16 add BYTE PTR [eax],al
	...
  4181c9:	add    bl,dl
  4181cb:	(bad)  
  4181cc:	push   ds
  4181cd:	and    eax,0x323b64cd
  4181d2:	call   0xd65ead34
  4181d7:	sub    esi,DWORD PTR fs:[edi]
  4181da:	pushf  
  4181db:	imul   edi,esp,0x15
  4181de:	pushf  
  4181df:	xchg   BYTE PTR [edi],bl
  4181e1:	add    al,0x7e
  4181e3:	pop    edi
  4181e4:	add    eax,0xc7679822
  4181e9:	xor    edi,DWORD PTR [eax+0x54]
  4181ec:	iret   
  4181ed:	add    ebp,DWORD PTR [esp+ebx*2-0x2d]
  4181f1:	adc    eax,0x33af8668
  4181f6:	aas    
  4181f7:	ins    BYTE PTR es:[edi],dx
  4181f8:	fisubr DWORD PTR [ebx+esi*2]
  4181fb:	gs mov edx,0xcb5d68e9
  418201:	add    ecx,DWORD PTR [ebx-0x72cc647a]
  418207:	push   ebp
  418208:	mov    edx,0x9c7a3f2b
  41820d:	push   ss
  41820e:	addr16 jnp 0x4181a1
  418211:	subps  xmm3,XMMWORD PTR [esi-0x37acd771]
  418218:	mov    edx,0x8c562d20
  41821d:	adc    eax,0x207a753f
  418222:	sub    eax,0x1c28885e
  418227:	enter  0x2497,0xe
  41822b:	pop    ebx
  41822c:	pop    esi
  41822d:	sub    eax,DWORD PTR [eax]
	...
  41823b:	add    BYTE PTR [eax],al
  41823d:	or     eax,0x1341e764
  418242:	pop    eax
  418243:	aaa    
  418244:	sub    ecx,DWORD PTR ds:0xea36e754
  41824a:	cmp    edx,DWORD PTR gs:[ebx]
  41824d:	adc    BYTE PTR [edx+0x44],bl
  418250:	cmp    dh,bh
  418252:	pop    ecx
  418253:	add    BYTE PTR [eax],dh
  418255:	push   ds
  418256:	pop    edx
  418257:	pop    esp
  418258:	push   ss
  418259:	push   ds
  41825a:	push   0x51
  41825c:	adc    BYTE PTR [edi],ch
  41825e:	imul   edx,DWORD PTR [eax+0x14],0x21
  418262:	pop    esp
  418263:	sbb    dl,BYTE PTR [bp+di]
  418266:	imul   esi,DWORD PTR [edx-0x17],0x70
  41826a:	mov    ah,BYTE PTR [edi-0x3]
  41826d:	and    DWORD PTR [ebp+0x6e],0x62c84b04
  418274:	add    BYTE PTR [edi+0x5f],cl
  418277:	call   FWORD PTR [bx+0x50]
  41827b:	cs int 0x29
  41827e:	enter  0xce48,0x31
  418282:	push   esp
  418283:	outs   dx,BYTE PTR ds:[esi]
  418284:	enter  0x6957,0x0
  418288:	mov    ah,0x51
  41828a:	imul   esi,DWORD PTR [edx-0x29],0xe963611b
  418291:	sub    al,0x6d
  418293:	jno    0x41824f
  418295:	dec    ebp
  418296:	pop    ebx
  418297:	jb     0x41825e
  418299:	cmp    al,0x78
  41829b:	ins    DWORD PTR es:[edi],dx
  41829c:	fwait
  41829d:	inc    eax
  41829e:	enter  0x8e51,0x0
	...
  4182ae:	add    BYTE PTR [eax],al
  4182b0:	push   ds
  4182b1:	push   esp
  4182b2:	jne    0x41823c
  4182b4:	sub    ch,BYTE PTR [ecx+0x5c]
  4182b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182b8:	push   esp
  4182b9:	pop    eax
  4182ba:	pop    edi
  4182bb:	xchg   edi,eax
  4182bc:	jo     0x418318
  4182be:	addr16 ja 0x418320
  4182c1:	ins    BYTE PTR es:[edi],dx
  4182c2:	push   ecx
  4182c3:	mov    WORD PTR [ecx+0x57],cs
  4182c6:	addr16 jle 0x41832f
  4182c9:	push   edi
  4182ca:	add    BYTE PTR [ebp+0x50],al
  4182cd:	push   eax
  4182ce:	jo     0x418318
  4182d0:	push   ebp
  4182d1:	test   BYTE PTR [edx+0x40],dh
  4182d4:	sub    eax,0x1f2d0069
  4182d9:	pop    edx
  4182da:	add    BYTE PTR [bx+si],dh
  4182dd:	lods   eax,DWORD PTR ds:[esi]
  4182de:	outs   dx,DWORD PTR ds:[esi]
  4182df:	cs or  al,0xb3
  4182e2:	add    BYTE PTR [edx],ah
  4182e4:	es test eax,0x9f11736f
  4182ea:	jb     0x418350
  4182ec:	test   cl,ch
  4182ee:	and    BYTE PTR ss:[ecx+ecx*8+0x22],dh
  4182f3:	sub    al,0x56
  4182f5:	xchg   esp,eax
  4182f6:	imul   esp,DWORD PTR [esi+0x52],0xffffffb7
  4182fa:	pop    ebp
  4182fb:	jb     0x418340
  4182fd:	nop
  4182fe:	inc    ecx
  4182ff:	js     0x418327
  418301:	stos   BYTE PTR es:[edi],al
  418302:	outs   dx,BYTE PTR ds:[esi]
  418303:	inc    esp
  418304:	and    al,0xa2
  418306:	jbe    0x41836d
  418308:	mov    ?,WORD PTR es:[eax+0x70]
  41830c:	pop    es
  41830d:	lahf   
  41830e:	inc    esp
  41830f:	jb     0x418300
  418311:	mov    dh,0x61
  418313:	pop    edi
	...
  418320:	add    BYTE PTR [eax],al
  418322:	add    dh,bl
  418324:	lahf   
  418325:	imul   esp,DWORD PTR [ebp-0x1a],0xb0726193
  41832c:	lods   eax,DWORD PTR ds:[esi]
  41832d:	jb     0x41832f
  41832f:	shl    DWORD PTR [ebx-0x56678d9f],cl
  418335:	imul   esp,DWORD PTR [ebp-0x1a],0xb5735d98
  41833c:	mov    bh,0x6b
  41833e:	jb     0x418302
  418340:	enter  0x505b,0xb7
  418344:	mov    bl,0x6f
  418346:	ja     0x418381
  418348:	mov    bl,0x64
  41834a:	add    dl,ah
  41834c:	mov    eax,ds:0xbcb56572
  418351:	imul   esi,DWORD PTR [edx+0x2f],0xffffffc9
  418355:	dec    edi
  418356:	outs   dx,DWORD PTR ds:[esi]
  418357:	sar    BYTE PTR [ebx+esi*2+0x5cacf461],0x4e
  41835f:	push   ebp
  418360:	jl     0x418382
  418362:	push   ebx
  418363:	aas    
  418364:	xchg   BYTE PTR [edx],ah
  418366:	je     0x418358
  418368:	jg     0x418380
  41836a:	arpl   WORD PTR [ebx],dx
  41836c:	mov    ds:0x91ec5f28,al
  418371:	sub    DWORD PTR [ecx-0x7],esp
  418374:	stos   BYTE PTR es:[edi],al
  418375:	xor    al,0x5c
  418377:	add    DWORD PTR [ebx-0x3e23c0cc],esi
  41837d:	daa    
  41837e:	jae    0x418359
  418380:	mov    dl,0x13
  418382:	add    cl,bh
  418384:	stos   BYTE PTR es:[edi],al
  418385:	adc    al,0x51
	...
  418393:	add    BYTE PTR [eax],al
  418395:	add    BYTE PTR [edx-0x529ced51],ah
  41839b:	loope  0x4183db
  41839d:	je     0x41834e
  41839f:	mov    ah,0x13
  4183a1:	arpl   WORD PTR [ebp-0x5d94de5d],bp
  4183a7:	loope  0x4183e7
  4183a9:	je     0x41833a
  4183ab:	adc    DWORD PTR [edx],esp
  4183ad:	jno    0x41833b
  4183af:	repnz daa 
  4183b1:	jb     0x41834e
  4183b3:	loope  0x4183ec
  4183b5:	inc    esi
  4183b6:	jae    0x4183a9
  4183b8:	xor    BYTE PTR [edi+0x6c],bl
  4183bb:	push   cs
  4183bc:	adc    BYTE PTR [ebp+0x6d],ch
  4183bf:	add    eax,0x116b4601
  4183c4:	cmp    eax,0x24044d67
  4183c9:	je     0x41842b
  4183cb:	das    
  4183cc:	sbb    al,BYTE PTR [eax]
  4183ce:	ins    BYTE PTR es:[edi],dx
  4183cf:	sbb    bh,BYTE PTR [edi]
  4183d1:	push   esp
  4183d2:	push   0x1b433320
  4183d7:	sub    eax,DWORD PTR [eax+ecx*2+0x5f]
  4183db:	sub    BYTE PTR cs:[esi+0x33],ah
  4183df:	push   edx
  4183e0:	and    dh,BYTE PTR [edx+0x1a]
  4183e3:	xor    eax,0x4b266c3f
  4183e8:	and    BYTE PTR [esi+edi*8-0x39],bl
  4183ec:	dec    edx
  4183ed:	and    ebx,DWORD PTR [edx]
  4183ef:	push   ebp
  4183f0:	dec    ebp
  4183f1:	adc    BYTE PTR [esi],cl
  4183f3:	enter  0x273a,0xe1
  4183f7:	push   ebx
  4183f8:	push   esi
  4183f9:	and    eax,0x0
	...
  418406:	add    BYTE PTR [eax],al
  418408:	add    ch,ch
  41840a:	and    edi,DWORD PTR fs:[esi]
  41840d:	adc    edi,DWORD PTR [eax+0x2a]
  418410:	sub    al,bl
  418412:	fs inc ebp
  418414:	adc    bl,bh
  418416:	jbe    0x418458
  418418:	adc    ah,bl
  41841a:	push   esi
  41841b:	out    0x32,eax
  41841d:	fisub  DWORD PTR [ecx+0x13]
  418420:	pavgb  mm2,QWORD PTR [ebp+0xc]
  418424:	cmp    BYTE PTR [esi-0x68effaa5],cl
  41842a:	call   0x3025:0x6ca21216
  418431:	pop    DWORD PTR [edi+0x5a9c2d03]
  418437:	repz aaa 
  418439:	outs   dx,BYTE PTR ds:[esi]
  41843a:	popa   
  41843b:	(bad)  [eax]
  41843d:	mov    cs,eax
  41843f:	or     eax,0xe7678727
  418444:	in     eax,0x6b
  418446:	pop    esp
  418447:	mov    ebx,0xb7545903
  41844c:	daa    
  41844d:	mov    BYTE PTR [edi-0x4d],dl
  418450:	in     eax,0x53
  418452:	push   edi
  418453:	retf   
  418454:	add    edi,DWORD PTR [ebx-0x7d]
  418457:	xchg   edi,eax
  418458:	xor    ah,BYTE PTR [edx+0x62]
  41845b:	fwait
  41845c:	push   cs
  41845d:	push   0x7b378456
  418462:	popa   
  418463:	cdq    
  418464:	and    BYTE PTR [esi],bl
  418466:	push   esp
  418467:	jle    0x41847a
  418469:	sub    BYTE PTR [eax+0x13b6],ch
	...
  41847b:	add    BYTE PTR [edi+edx*2],ch
  41847e:	out    0x37,eax
  418480:	push   cs
  418481:	pusha  
  418482:	add    BYTE PTR [eax-0x659b98d2],cl
  418488:	pop    edi
  418489:	push   esp
  41848a:	je     0x4184dc
  41848c:	popa   
  41848d:	gs jno 0x41849f
  418490:	pop    esp
  418491:	imul   esi,DWORD PTR [ecx-0x17],0x48687930
  418498:	dec    ebp
  418499:	sbb    bl,BYTE PTR fs:0x7454
  41849f:	push   eax
  4184a0:	sbb    DWORD PTR [ebp+0x71],esp
  4184a3:	push   ss
  4184a4:	jb     0x418511
  4184a6:	xor    BYTE PTR [esi],cl
  4184a8:	outs   dx,BYTE PTR ds:[esi]
  4184a9:	pushf  
  4184aa:	popa   
  4184ab:	or     ch,BYTE PTR [eax+ecx*8]
  4184ae:	pop    esp
  4184af:	cmp    dl,BYTE PTR [ebx]
  4184b1:	imul   esi,DWORD PTR [edx+0xc],0x5f
  4184b5:	ja     0x41851a
  4184b7:	adc    eax,0xe6e614f
  4184bc:	dec    esp
  4184bd:	call   0xc74:0x6158f871
  4184c4:	inc    ebx
  4184c5:	ins    BYTE PTR es:[edi],dx
  4184c6:	push   ecx
  4184c7:	add    DWORD PTR [edx+0x56],ebx
  4184ca:	arpl   bp,cx
  4184cc:	dec    ebp
  4184cd:	gs je  0x4184a5
  4184d0:	push   ebx
  4184d1:	pop    edx
  4184d2:	fidiv  DWORD PTR gs:[ecx]
  4184d5:	cdq    
  4184d6:	pop    ebp
  4184d7:	sbb    DWORD PTR [eax],ebp
  4184d9:	xchg   ebp,eax
  4184da:	cs mov edx,0xb5675c53
	...
  4184ec:	add    BYTE PTR [eax],al
  4184ee:	add    BYTE PTR [edi],bl
  4184f0:	enter  0xaa5c,0x21
  4184f4:	bound  esp,QWORD PTR [esi-0x3c]
  4184f7:	pop    ds
  4184f8:	xchg   DWORD PTR [ebx-0x67],esi
  4184fb:	fdivr  QWORD PTR [eax+0x6d]
  4184fe:	xchg   DWORD PTR [eax],esi
  418500:	push   ebx
  418501:	pop    edi
  418502:	fwait
  418503:	pop    edi
  418504:	enter  0x846c,0x5b
  418508:	pop    eax
  418509:	data16 add BYTE PTR [edx],ch
  41850c:	mov    ch,0x0
  41850e:	jne    0x4184c0
  418510:	mov    eax,ds:0xe3166161
  418515:	popa   
  418516:	js     0x4184d3
  418518:	lds    ebp,FWORD PTR [edi+0x69]
  41851b:	jmp    0x74a4:0xfa2e6fa8
  418522:	add    BYTE PTR ds:0x1565749d,dl
  418528:	loop   0x41858f
  41852a:	outs   dx,BYTE PTR ds:[esi]
  41852b:	pinsrw mm3,WORD PTR [esp+ecx*2-0x5],0xa4
  418531:	jo     0x41858a
  418533:	pop    es
  418534:	mov    dh,0x61
  418536:	pop    esp
  418537:	xor    ch,BYTE PTR [ecx-0x67e78fa3]
  41853d:	push   eax
  41853e:	add    BYTE PTR ds:0x79544683,al
  418544:	test   DWORD PTR [edx+0x45],edx
  418547:	bound  eax,QWORD PTR [eax-0x63d99e9f]
  41854d:	pop    ebp
  41854e:	jb     0x41858b
  418550:	les    eax,FWORD PTR [ebp+0x6e]
	...
  41855f:	add    BYTE PTR [eax],al
  418561:	add    BYTE PTR ds:0x126c5db9,dl
  418567:	xchg   ebp,eax
  418568:	pop    ebp
  418569:	je     0x418559
  41856b:	les    eax,FWORD PTR [ecx+eiz*2-0x16]
  41856f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418570:	inc    esp
  418571:	imul   edx,DWORD PTR [eax*8-0x47ea9eb0],0xa8a46f73
  41857c:	add    BYTE PTR [eax-0xf],cl
  41857f:	mov    bh,0x74
  418581:	dec    esi
  418582:	pop    es
  418583:	mov    ds:0xb7ab0061,al
  418588:	popa   
  418589:	jb     0x41851b
  41858b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41858c:	imul   esp,DWORD PTR [ebp-0x2a],0x3f6d6196
  418593:	inc    edx
  418594:	or     eax,0xf47fb63
  418599:	arpl   WORD PTR [ebx+ecx*2],bx
  41859c:	and    al,0x72
  41859e:	fbstp  TBYTE PTR es:[eax]
  4185a1:	ins    DWORD PTR es:[edi],dx
  4185a2:	or     eax,0x2273434b
  4185a7:	cmp    eax,0x993f721e
  4185ac:	das    
  4185ad:	push   eax
  4185ae:	or     eax,0xdc6d107a
  4185b3:	sub    DWORD PTR [eax],0x1e8a0c00
  4185b9:	je     0x4185ab
  4185bb:	jg     0x4185cf
  4185bd:	arpl   WORD PTR [ebx],ax
  4185bf:	pushf  
  4185c0:	and    DWORD PTR [edx-0x2d],esi
  4185c3:	xchg   DWORD PTR [esi],esp
  4185c5:	and    BYTE PTR [eax],al
	...
  4185d3:	add    BYTE PTR [eax],al
  4185d5:	out    dx,eax
  4185d6:	mov    WORD PTR [ecx],gs
  4185d8:	imul   ecx,ebp,0xe30028a7
  4185de:	in     eax,dx
  4185df:	into   
  4185e0:	inc    ecx
  4185e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185e2:	in     eax,0x3a
  4185e4:	je     0x418595
  4185e6:	xchg   DWORD PTR [edi],esp
  4185e8:	outs   dx,BYTE PTR ds:[esi]
  4185e9:	xchg   esi,eax
  4185ea:	mov    cl,0x46
  4185ec:	inc    esp
  4185ed:	mov    eax,ds
  4185ef:	adc    BYTE PTR [ebx-0x74],ah
  4185f2:	(bad)  
  4185f3:	daa    
  4185f4:	outs   dx,BYTE PTR ds:[esi]
  4185f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185f6:	mov    cl,0x34
  4185f8:	dec    esi
  4185f9:	mov    ds:0x96723ca5,al
  4185fe:	lahf   
  4185ff:	sbb    eax,DWORD PTR [eax]
  418601:	(bad)  
  418602:	nop
  418603:	adc    DWORD PTR [ecx-0x78],esi
  418606:	xchg   BYTE PTR [edx],dl
  418608:	fs aas 
  41860a:	adc    ch,BYTE PTR fs:[edi+edi*1+0x5c]
  41860f:	adc    DWORD PTR [ebx+0x4d],esp
  418612:	outs   dx,DWORD PTR ds:[esi]
  418613:	pop    ds
  418614:	imul   ebx,DWORD PTR [edx-0x4f],0x32
  418618:	ins    DWORD PTR es:[edi],dx
  418619:	pop    eax
  41861a:	enter  0x3f9d,0x58
  41861e:	cmp    al,BYTE PTR [ebp-0x67c8cce0]
  418624:	sbb    bh,BYTE PTR [edi]
  418626:	sbb    BYTE PTR [ebx+0x11],bh
  418629:	xor    ecx,eax
  41862b:	xchg   esi,eax
  41862c:	and    al,0x19
  41862e:	cmp    al,0x73
  418630:	and    cl,BYTE PTR ds:0x2230962d
  418636:	cmp    eax,0x2b76
	...
  418647:	add    BYTE PTR [edi+0x1a],bl
  41864a:	push   ecx
  41864b:	sbb    bl,BYTE PTR [edx+edi*1]
  41864e:	or     bh,BYTE PTR [eax]
  418650:	fsubr  QWORD PTR [edx]
  418652:	inc    edx
  418653:	and    ah,dl
  418655:	xor    edi,DWORD PTR [ebx]
  418657:	sub    esp,eax
  418659:	sub    al,0x37
  41865b:	xor    BYTE PTR [edx],cl
  41865d:	sub    eax,0x30cd4848
  418662:	cmp    al,0x29
  418664:	repz or bh,BYTE PTR [ebx]
  418667:	and    bl,cl
  418669:	sub    al,0x7
  41866b:	sbb    al,bl
  41866d:	ss or  al,0x17
  418670:	aas    
  418671:	sbb    ecx,DWORD PTR ds:0x182da916
  418677:	cmp    BYTE PTR [eax+0x79040d38],dh
  41867d:	sbb    al,0x1a
  41867f:	in     al,0x7f
  418681:	pop    ss
  418682:	and    al,0x38
  418684:	ins    DWORD PTR es:[edi],dx
  418685:	pop    ss
  418686:	push   ds
  418687:	add    al,0x81
  418689:	sbb    al,0xba
  41868b:	inc    esi
  41868c:	jb     0x4186a4
  41868e:	jmp    0x9303:0xcc3a68e1
  418695:	sbb    al,bl
  418697:	and    ah,BYTE PTR [ecx+0x31]
  41869a:	(bad)  
  41869b:	sub    BYTE PTR [esi-0x38],ch
  41869e:	adc    bx,bx
  4186a1:	(bad)  
  4186a2:	add    BYTE PTR [edi+0x68],ah
  4186a5:	mov    al,0x6a
  4186a7:	mov    edx,0x9d69c55d
	...
  4186b8:	add    BYTE PTR [eax],al
  4186ba:	add    BYTE PTR [eax],ch
  4186bc:	cmp    BYTE PTR [edi],dh
  4186be:	into   
  4186bf:	popf   
  4186c0:	(bad)  
  4186c1:	fs popf 
  4186c3:	dec    eax
  4186c4:	cmp    BYTE PTR [eax-0x2d],dh
  4186c7:	popf   
  4186c8:	repz add BYTE PTR [edi-0x31c8c7b8],cl
  4186cf:	popf   
  4186d0:	(bad)  
  4186d1:	imul   edi,DWORD PTR [ecx+0x67],0x3a
  4186d5:	(bad)  
  4186d6:	jmp    0x4dacae00
  4186db:	popf   
  4186dc:	sub    ah,BYTE PTR [edx+0x55]
  4186df:	inc    ebx
  4186e0:	and    eax,0x3c254650
  4186e5:	je     0x41872f
  4186e7:	push   ecx
  4186e8:	sub    ebx,DWORD PTR [ebp+0x36]
  4186eb:	dec    ebx
  4186ec:	sub    ebp,DWORD PTR [edi+0x48]
  4186ef:	arpl   WORD PTR [edi],dx
  4186f1:	ins    BYTE PTR es:[edi],dx
  4186f2:	dec    edi
  4186f3:	aaa    
  4186f4:	cmp    eax,0xc8163b62
  4186f9:	dec    esp
  4186fa:	or     BYTE PTR [eax],ch
  4186fc:	cmp    al,0x21
  4186fe:	and    eax,0xa663a5a
  418703:	push   edi
  418704:	xor    ebp,DWORD PTR [edi+0x10]
  418707:	adc    dh,al
  418709:	dec    eax
  41870a:	or     BYTE PTR [eax+0x3c],cl
  41870d:	and    DWORD PTR [eax],esi
  41870f:	pop    ebp
  418710:	aaa    
  418711:	jne    0x41871b
  418713:	pop    edi
  418714:	xor    al,0x21
  418716:	sbb    DWORD PTR [edx+0x3c],esp
  418719:	imul   ebp,ecx,0xdb66387d
	...
  41872b:	add    BYTE PTR [eax],al
  41872d:	add    BYTE PTR [ebx],ah
  41872f:	test   BYTE PTR [eax-0x43],0x7f
  418733:	adc    al,0x5d
  418735:	fiadd  DWORD PTR [ecx+ebp*1+0x6d]
  418739:	add    BYTE PTR [edx],cl
  41873b:	imul   BYTE PTR [ebp+0x70]
  41873e:	add    ebp,eax
  418740:	pop    esp
  418741:	arpl   cx,di
  418743:	call   0xedc9e8af
  418748:	add    BYTE PTR [edi-0x51],dh
  41874b:	ficomp WORD PTR [edi+0x66]
  41874e:	rcr    cl,cl
  418750:	jno    0x4187c4
  418752:	rcr    dh,1
  418754:	sub    ah,BYTE PTR [edx-0x41]
  418757:	out    0x0,eax
  418759:	pop    esp
  41875a:	xlat   BYTE PTR ds:[ebx]
  41875b:	out    dx,al
  41875c:	pop    edi
  41875d:	inc    edx
  41875e:	iret   
  41875f:	std    
  418760:	add    BYTE PTR [ebx-0x47],dl
  418763:	out    dx,eax
  418764:	je     0x4187dd
  418766:	mov    bh,0xdb
  418768:	pop    edi
  418769:	pop    esp
  41876a:	push   edi
  41876b:	jmp    0x4187cc
  41876d:	inc    edx
  41876e:	das    
  41876f:	add    BYTE PTR [ecx],al
  418771:	dec    ebp
  418772:	xor    al,0xfd
  418774:	add    BYTE PTR [ebx+0x49],dl
  418777:	adc    dl,BYTE PTR [ebp+0x57]
  41877a:	pop    ss
  41877b:	(bad)  
  41877c:	aas    
  41877d:	pop    esp
  41877e:	and    eax,0x15735be8
  418783:	in     eax,dx
  418784:	jno    0x4187e2
  418786:	xor    dl,cl
  418788:	jo     0x4187ef
  41878a:	or     ah,cl
  41878c:	pop    esi
  41878d:	pop    esp
  41878e:	pop    ebp
  41878f:	or     edi,DWORD PTR [edi]
  418791:	xor    DWORD PTR [eax],eax
	...
  41879f:	add    BYTE PTR [eax],al
  4187a1:	pusha  
  4187a2:	sahf   
  4187a3:	inc    ecx
  4187a4:	xor    BYTE PTR [eax-0x5b],ah
  4187a7:	xor    al,0x30
  4187a9:	call   FWORD PTR [edi+eiz*1+0x42096734]
  4187b0:	sub    eax,0x35430b64
  4187b5:	retf   
  4187b6:	pushf  
  4187b7:	sub    eax,DWORD PTR [ecx+0x20]
  4187ba:	mov    al,ds:0x1251323f
  4187bf:	ss aaa 
  4187c1:	aas    
  4187c2:	out    0xb,al
  4187c4:	add    BYTE PTR [esi+eiz*2+0x7088544a],cl
  4187cb:	ss inc ebx
  4187cd:	jnp    0x418841
  4187cf:	sbb    al,0x5f
  4187d1:	dec    esp
  4187d2:	and    BYTE PTR [ebx],0x71
  4187d5:	imul   ebx,DWORD PTR [ebx+0x7],0x70
  4187d9:	pop    edx
  4187da:	jnp    0x4187f3
  4187dc:	bound  ebx,QWORD PTR [ebx]
  4187de:	push   0xffffffc7
  4187e0:	inc    edx
  4187e1:	(bad)  
  4187e2:	mov    ds:0x986d32d3,eax
  4187e7:	fild   DWORD PTR [edx+0x6e]
  4187ea:	adc    esi,0xd37e532a
  4187f0:	xor    al,0x62
  4187f2:	jno    0x418839
  4187f4:	xor    eax,0x34438446
  4187f9:	inc    edi
  4187fa:	loope  0x4187cf
  4187fc:	inc    ebp
  4187fd:	aaa    
  4187fe:	(bad)  
  418800:	xor    BYTE PTR ds:0xbf2,ch
	...
  418812:	add    BYTE PTR [eax],al
  418814:	lock pop es
  418816:	push   ss
  418817:	arpl   cx,bx
  418819:	add    dl,BYTE PTR ds:0x15fccd71
  41881f:	cs out 0xc,al
  418822:	sbb    BYTE PTR [eax],al
  418824:	rol    BYTE PTR [edi],1
  418826:	push   ss
  418827:	arpl   cx,bx
  418829:	loop   0x41883f
  41882b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41882d:	rcl    DWORD PTR [edi],cl
  41882f:	add    BYTE PTR [ecx+0x5],bh
  418832:	xor    eax,0x1fd89856
  418837:	gs call 0xc1:0x9365e2bf
  41883f:	inc    esi
  418840:	imul   esp,ecx,0x36
  418843:	ins    DWORD PTR es:[edi],dx
  418844:	xchg   al,dl
  418846:	sub    DWORD PTR [ebx-0x73],esp
  418849:	enter  0x1313,0x5e
  41884d:	enter  0x35bd,0x67
  418851:	xor    esp,eax
  418853:	and    BYTE PTR [esi+0x1117c433],cl
  418859:	daa    
  41885a:	rcr    DWORD PTR [esi],cl
  41885c:	aas    
  41885d:	xor    dh,BYTE PTR [edi-0x320df1ec]
  418863:	pop    ds
  418864:	pop    ebx
  418865:	enter  0x349b,0x6e
  418869:	and    esi,DWORD PTR [ecx-0x15c3dfdf]
  41886f:	inc    ecx
  418870:	push   cs
  418871:	pop    ss
  418872:	mov    bl,0x34
  418874:	pop    ss
  418875:	cmp    eax,0x2796
	...
  418886:	add    BYTE PTR [edx],dl
  418888:	cmp    edx,DWORD PTR [ebx+eax*1+0x45971709]
  41888f:	lock ss (bad) 
  418892:	(bad)  [ebx+eiz*1-0x5a]
  418896:	es push ds
  418898:	xor    ecx,DWORD PTR [esi+0x29]
  41889b:	std    
  41889c:	cmp    al,0x44
  41889e:	fdiv   QWORD PTR es:0x6fc32ea
  4188a5:	and    DWORD PTR [eax],edi
  4188a7:	cld    
  4188a8:	adc    al,0x23
  4188aa:	inc    esi
  4188ab:	int    0x2c
  4188ad:	inc    ebp
  4188ae:	cmp    eax,0x4452ccb
  4188b3:	out    dx,eax
  4188b4:	push   cs
  4188b5:	stc    
  4188b6:	aam    0xe3
  4188b8:	or     cl,BYTE PTR ds:0x16328018
  4188be:	sub    DWORD PTR [ebp+0x76200932],ebp
  4188c4:	sub    eax,0x33933311
  4188c9:	inc    BYTE PTR [ebx]
  4188cb:	outs   dx,DWORD PTR ds:[esi]
  4188cc:	ud1    edx,esp
  4188cf:	jae    0x4188da
  4188d1:	add    esp,edi
  4188d3:	xor    BYTE PTR [eax],dh
  4188d5:	jmp    DWORD PTR [eax]
  4188d8:	sub    esp,DWORD PTR [eax-0x38]
  4188db:	push   eax
  4188dc:	daa    
  4188dd:	add    DWORD PTR [ecx-0x45ce0ccb],edi
  4188e3:	adc    BYTE PTR [esi],0x5c
  4188e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e7:	pop    ss
  4188e8:	sub    DWORD PTR [edi-0x40],ebp
	...
  4188f7:	add    BYTE PTR [eax],al
  4188f9:	add    BYTE PTR [esp+edi*1],ch
  4188fc:	add    DWORD PTR [ecx-0x69ce0ceb],ebx
  418902:	xor    BYTE PTR [esi],0x66
  418905:	les    ecx,FWORD PTR ds:0x3c9d6c34
  41890b:	enter  0xe900,0x3c
  41890f:	enter  0xe900,0x3c
  418913:	enter  0xe900,0x3c
  418917:	enter  0xe900,0x3c
  41891b:	enter  0xe900,0x3c
  41891f:	enter  0xe900,0x3c
  418923:	enter  0xe900,0x3c
  418927:	enter  0xe900,0x3c
  41892b:	enter  0x586f,0x1f
  41892f:	sub    esi,DWORD PTR [ebp+0x4c]
  418932:	mov    esp,?
  418934:	fs cmp eax,0x386fc81f
  41893a:	pop    ds
  41893b:	sub    esi,DWORD PTR [ebp+0x44]
  41893e:	ins    BYTE PTR es:[edi],dx
  41893f:	and    ebp,DWORD PTR [ecx+edi*1+0x16]
  418943:	xor    al,BYTE PTR [ecx]
  418945:	cmp    ch,BYTE PTR [edx]
  418947:	xor    al,0x6a
  418949:	sbb    eax,0xa5bf766
  41894e:	pop    edi
  41894f:	xor    esi,DWORD PTR [eax+0xc]
  418952:	inc    ebx
  418953:	aaa    
  418954:	jb     0x418953
  418956:	inc    ebx
  418957:	cmp    al,0x66
  418959:	add    ch,dl
  41895b:	bnd jo 0x4189d0
	...
  41896a:	add    BYTE PTR [eax],al
  41896c:	add    BYTE PTR [ebx],bh
  41896e:	fcomp  QWORD PTR [ebx+0x72]
  418971:	cmp    ecx,esp
  418973:	jno    0x4189e6
  418975:	add    ah,ch
  418977:	je     0x4189de
  418979:	push   ebp
  41897a:	icebp  
  41897b:	jno    0x4189f1
  41897d:	sti    
  41897e:	aad    0x0
  418980:	jae    0x418989
  418982:	loop   0x4189e7
  418984:	je     0x418981
  418986:	xchg   esi,eax
  418987:	pop    ebp
  418988:	arpl   cx,si
  41898a:	loope  0x4189fb
  41898c:	ins    DWORD PTR es:[edi],dx
  41898d:	add    bl,dh
  41898f:	pop    esi
  418990:	jns    0x41891c
  418992:	lock jno 0x418995
  418995:	test   esp,ebx
  418997:	ins    BYTE PTR es:[edi],dx
  418998:	imul   ebx,edx,0xc55f31f0
  41899e:	loop   0x418a0c
  4189a0:	jne    0x418965
  4189a2:	jecxz  0x418a01
  4189a4:	bound  esp,QWORD PTR [edx]
  4189a6:	loop   0x418a06
  4189a8:	add    BYTE PTR [esi+0x157a6de8],ah
  4189ae:	fsubr  QWORD PTR [ecx+ebp*2+0xa]
  4189b2:	lock xor DWORD PTR [esi],ebp
  4189b5:	mov    edx,0x15006ce1
  4189ba:	aad    0x6c
  4189bc:	imul   ecx,DWORD PTR [edx],0x15f31e9
  4189c2:	fcomp  QWORD PTR [edi+0x6e]
  4189c5:	push   esi
  4189c6:	fsubr  DWORD PTR [ebx+0x6c]
  4189c9:	out    dx,eax
  4189ca:	fistp  WORD PTR [edi+0x33]
  4189cd:	xor    edi,esp
  4189cf:	ins    BYTE PTR es:[edi],dx
  4189d0:	outs   dx,DWORD PTR ds:[esi]
	...
  4189dd:	add    BYTE PTR [eax],al
  4189df:	add    BYTE PTR ds:0x77300e9,al
  4189e5:	call   0x978cfe4d
  4189ea:	pop    ebp
  4189eb:	jo     0x418a41
  4189ed:	jmp    0xdd80eb62
  4189f2:	and    eax,DWORD PTR [eax]
  4189f4:	lods   al,BYTE PTR ds:[esi]
  4189f5:	loopne 0x418a17
  4189f7:	addr16 xchg ebx,eax
  4189f9:	aam    0xd1
  4189fb:	pop    esp
  4189fc:	mov    WORD PTR [ebx-0x41c08fdd],?
  418a02:	(bad)  
  418a04:	xchg   esi,eax
  418a05:	mov    ebx,0x8e983123
  418a0a:	sbb    eax,0x1e946a6c
  418a0f:	pop    ebp
  418a10:	pop    ebp
  418a11:	cwde   
  418a12:	adc    al,0x63
  418a14:	ins    BYTE PTR es:[edi],dx
  418a15:	scas   eax,DWORD PTR es:[edi]
  418a16:	adc    DWORD PTR [edi+0x6b],ebp
  418a19:	cwde   
  418a1a:	adc    al,0x63
  418a1c:	or     al,0x62
  418a1e:	and    DWORD PTR [ebp+0x5b],ebp
  418a21:	test   BYTE PTR [ebx],bl
  418a23:	outs   dx,BYTE PTR ds:[esi]
  418a24:	pusha  
  418a25:	lea    ebx,[ebp*2+0xaf1d]
  418a2c:	aas    
  418a2d:	scas   eax,DWORD PTR es:[edi]
  418a2e:	add    BYTE PTR [eax],al
  418a30:	aas    
  418a31:	scas   eax,DWORD PTR es:[edi]
  418a32:	add    BYTE PTR [eax],al
  418a34:	aas    
  418a35:	scas   eax,DWORD PTR es:[edi]
  418a36:	add    BYTE PTR [eax],al
  418a38:	aas    
  418a39:	scas   eax,DWORD PTR es:[edi]
  418a3a:	add    BYTE PTR [eax],al
  418a3c:	aas    
  418a3d:	scas   eax,DWORD PTR es:[edi]
  418a3e:	add    BYTE PTR [eax],al
  418a40:	aas    
  418a41:	scas   eax,DWORD PTR es:[edi]
	...
  418a52:	add    BYTE PTR [edi],bh
  418a54:	scas   eax,DWORD PTR es:[edi]
  418a55:	add    BYTE PTR [eax],al
  418a57:	aas    
  418a58:	scas   eax,DWORD PTR es:[edi]
  418a59:	add    BYTE PTR [eax-0x13],dh
  418a5c:	adc    DWORD PTR [ebx],esp
  418a5e:	fist   DWORD PTR [bp+di]
  418a61:	adc    ch,BYTE PTR [esi]
  418a63:	(bad)  
  418a64:	add    BYTE PTR [eax],bl
  418a66:	add    bh,ch
  418a68:	cld    
  418a69:	sbb    eax,0x2412e666
  418a6e:	add    dh,dh
  418a70:	std    
  418a71:	cs arpl bx,dx
  418a74:	nop    DWORD PTR [edi-0x4f]
  418a78:	enter  0x40c,0x8f
  418a7c:	sub    DWORD PTR [esi],edx
  418a7e:	sbb    al,0x3f
  418a80:	sbb    BYTE PTR [ecx],cl
  418a82:	sbb    BYTE PTR [edi-0x68b904ec],dl
  418a88:	and    eax,0x258d13ea
  418a8d:	add    al,0x11
  418a8f:	pop    ecx
  418a90:	xor    dh,bh
  418a92:	add    ecx,DWORD PTR [esi+0x6a1e0331]
  418a98:	xlat   BYTE PTR cs:[ebx]
  418a9a:	(bad)  [edi+0x39]
  418a9d:	into   
  418a9e:	sbb    dh,BYTE PTR [ebx+0x25]
  418aa1:	jmp    0x691c:0xbc275810
  418aa8:	cmp    edx,DWORD PTR [eax+ebx*1]
  418aab:	push   edi
  418aac:	xor    al,0xea
  418aae:	adc    BYTE PTR [eax+0x27],ah
  418ab1:	les    ebx,FWORD PTR [ecx+edx*2]
  418ab4:	cmp    edi,eax
  418ab6:	fld    QWORD PTR [eax]
	...
  418ac4:	add    BYTE PTR [eax],al
  418ac6:	sub    al,0x40
  418ac8:	sahf   
  418ac9:	add    ebp,DWORD PTR [esi]
  418acb:	xor    DWORD PTR [ebx-0x68d1e5e3],eax
  418ad1:	rcl    BYTE PTR [edx+0x34],1
  418ad4:	xchg   edx,eax
  418ad5:	pop    ss
  418ad6:	aas    
  418ad7:	jmp    0x418a90
  418ad9:	and    BYTE PTR [edi],bh
  418adb:	jmp    0x418a94
  418add:	daa    
  418ade:	aas    
  418adf:	jmp    0x418a98
  418ae1:	es aas 
  418ae3:	sbb    esp,DWORD PTR [ebp+0x3e0afc3f]
  418ae9:	in     al,0xd8
  418aeb:	cs push edi
  418aed:	adc    cl,bl
  418aef:	sub    BYTE PTR [ebp+0x21],al
  418af2:	adc    ebp,eax
  418af4:	inc    esp
  418af5:	sbb    bl,dh
  418af7:	cmp    DWORD PTR [ecx+0x14],eax
  418afa:	retf   
  418afb:	and    al,0x46
  418afd:	xor    esi,ecx
  418aff:	and    al,0x1
  418b01:	cmp    esp,DWORD PTR ds:0x17446e1f
  418b07:	fbld   TBYTE PTR [ebp+0x17]
  418b0a:	pop    eax
  418b0b:	cmp    bh,BYTE PTR [edx+0x19]
  418b0e:	dec    edi
  418b0f:	sub    esp,DWORD PTR [ebp+0x39]
  418b12:	pop    edx
  418b13:	cmp    DWORD PTR [eax+0x16],esi
  418b16:	xor    al,0x3a
  418b18:	gs leave 
  418b1a:	jle    0x418b36
  418b1c:	dec    esp
  418b1d:	sub    al,0x23
  418b1f:	xor    ch,BYTE PTR [ebx+esi*8+0x55]
  418b23:	sub    al,0x6c
  418b25:	push   es
  418b26:	pop    edx
  418b27:	cs jo  0x418b13
	...
  418b36:	add    BYTE PTR [eax],al
  418b38:	add    BYTE PTR [esi+0x27],bh
  418b3b:	outs   dx,DWORD PTR ds:[esi]
  418b3c:	les    ebx,FWORD PTR [esi]
  418b3e:	sub    eax,0x1318e979
  418b43:	ins    BYTE PTR es:[edi],dx
  418b44:	sar    DWORD PTR [ebx],cl
  418b46:	sub    al,0x6d
  418b48:	enter  0x618,0x6a
  418b4c:	mov    ebx,0xb16c261f
  418b51:	sbb    al,cl
  418b53:	dec    edi
  418b54:	mov    esi,0x8874345e
  418b59:	dec    edx
  418b5a:	sub    ebx,DWORD PTR [ebp-0x54]
  418b5d:	inc    ebp
  418b5e:	inc    edx
  418b5f:	push   0xffffff85
  418b61:	dec    eax
  418b62:	pop    ds
  418b63:	add    DWORD PTR [edi+esi*2+0x408f00f1],edi
  418b6a:	cmp    BYTE PTR [edi],dh
  418b6c:	into   
  418b6d:	gs mov esi,0x38307d64
  418b73:	aaa    
  418b74:	mov    esi,0x5d64be95
  418b79:	dec    edi
  418b7a:	cmp    BYTE PTR [eax+0x23],dh
  418b7d:	test   bl,ch
  418b7f:	add    BYTE PTR [edi+0x4f],cl
  418b82:	cmp    BYTE PTR [ebx],ch
  418b84:	jmp    0xb0b2a7
  418b89:	add    ecx,DWORD PTR [edx]
  418b8b:	push   ebp
  418b8c:	push   eax
  418b8d:	add    eax,0x56574dd
  418b92:	mov    ds:0xc4726160,al
  418b97:	push   ecx
  418b98:	gs inc edi
  418b9a:	jmp    FWORD PTR [ebp+0x6e]
	...
  418ba9:	add    BYTE PTR [eax],al
  418bab:	add    BYTE PTR [ebp-0x19],cl
  418bae:	jae    0x418bb0
  418bb0:	push   0xffffffff
  418bb2:	ins    DWORD PTR es:[edi],dx
  418bb3:	jp     0x418bf4
  418bb5:	loopne 0x418c23
  418bb7:	popa   
  418bb8:	pop    edx
  418bb9:	cmc    
  418bba:	pop    edi
  418bbb:	popa   
  418bbc:	pop    ebx
  418bbd:	loope  0x418c29
  418bbf:	imul   esi,DWORD PTR [ebx],0xffffffcb
  418bc2:	pop    esp
  418bc3:	add    BYTE PTR [eax],ah
  418bc5:	loopne 0x418c34
  418bc7:	arpl   WORD PTR ds:0xfa465cca,cx
  418bcd:	loop   0x418c30
  418bcf:	imul   ebp,DWORD PTR [edx-0xe9090fd],0xffffffd6
  418bd6:	pop    edi
  418bd7:	jb     0x418b73
  418bd9:	leave  
  418bda:	inc    edi
  418bdb:	outs   dx,DWORD PTR ds:[esi]
  418bdc:	cld    
  418bdd:	fsubr  QWORD PTR [esp+ebp*2-0x9]
  418be1:	leave  
  418be2:	pop    esp
  418be3:	dec    ebp
  418be4:	stc    
  418be5:	retf   
  418be6:	arpl   WORD PTR [edx+ecx*8-0x1c],bp
  418bea:	pop    esp
  418beb:	push   eax
  418bec:	(bad)
  418bf0:	mov    edx,0xa65c71e8
  418bf5:	imul   BYTE PTR [ebp+0x66]
  418bf8:	adc    bl,dl
  418bfa:	pop    ebx
  418bfb:	jb     0x418bc0
  418bfd:	in     eax,0x4c
  418bff:	gs mov bl,0xe6
  418c02:	push   0xf9d246
  418c07:	inc    ecx
  418c08:	push   ss
  418c09:	aam    0x44
  418c0b:	imul   eax,DWORD PTR [esp+eax*8],0x6f4c
	...
  418c1e:	add    BYTE PTR [edi],bh
  418c20:	adc    ah,BYTE PTR [eax]
  418c22:	ins    BYTE PTR es:[edi],dx
  418c23:	add    ecx,DWORD PTR [eax]
  418c25:	adc    eax,DWORD PTR [eax]
  418c27:	fst    QWORD PTR ds:0xfda691a
  418c2d:	adc    ebp,DWORD PTR [ecx+0x11]
  418c30:	or     esp,DWORD PTR [eax]
  418c32:	je     0x418c73
  418c34:	loop   0x418c4d
  418c36:	je     0x418bd2
  418c38:	clc    
  418c39:	push   ss
  418c3a:	cbw    
  418c3c:	lea    ebp,[edi]
  418c3e:	inc    esi
  418c3f:	(bad)  
  418c40:	scas   eax,DWORD PTR es:[edi]
  418c41:	cmp    DWORD PTR [esi+eiz*4-0x43],esp
  418c45:	add    BYTE PTR [esi-0x62],al
  418c48:	mov    ebp,0xb3967219
  418c4d:	sbb    esi,DWORD PTR [ecx+0x51]
  418c50:	retf   
  418c51:	pop    ds
  418c52:	je     0x418c93
  418c54:	(bad)  
  418c55:	pop    ss
  418c56:	outs   dx,BYTE PTR ds:[esi]
  418c57:	jns    0x418cd4
  418c59:	xor    BYTE PTR [eax],al
  418c5b:	ins    BYTE PTR es:[edi],dx
  418c5c:	cwde   
  418c5d:	or     al,0x63
  418c5f:	ins    BYTE PTR es:[edi],dx
  418c60:	lds    esp,FWORD PTR [eax]
  418c62:	bound  edi,QWORD PTR [edi]
  418c64:	jb     0x418c9a
  418c66:	push   ecx
  418c67:	xchg   BYTE PTR [ebx+0x24],ch
  418c6a:	jns    0x418c7a
  418c6c:	rol    BYTE PTR [ebp+0x2f],0x7b
  418c70:	mov    esi,0x706a2ecc
  418c75:	(bad)  
  418c76:	xor    bh,ch
  418c78:	xchg   ebx,eax
  418c79:	iret   
  418c7a:	and    esp,DWORD PTR cs:[ecx-0x6901c82d]
  418c81:	shr    BYTE PTR [edx],1
	...
  418c8f:	add    BYTE PTR [eax],al
  418c91:	add    BYTE PTR [edi-0x61],cl
  418c94:	enter  0xfe2f,0x6a
  418c98:	inc    esi
  418c99:	xor    DWORD PTR [ebp+0x65],ecx
  418c9c:	inc    edx
  418c9d:	xor    al,0x2
  418c9f:	push   ebx
  418ca0:	aaa    
  418ca1:	outs   dx,BYTE PTR ds:[esi]
  418ca2:	cmovno ebx,DWORD PTR [ecx]
  418ca5:	popa   
  418ca6:	or     al,0xc8
  418ca8:	dec    esp
  418ca9:	push   ss
  418caa:	icebp  
  418cab:	and    bl,BYTE PTR [eax-0x2b]
  418cae:	cs enter 0x1f56,0xcd
  418cb3:	xor    eax,0xedce1645
  418cb8:	inc    ecx
  418cb9:	pop    ss
  418cba:	fcmovnb st,st(7)
  418cbc:	sbb    eax,0x2b17eb42
  418cc1:	pop    ds
  418cc2:	mov    bl,0x34
  418cc4:	inc    ebp
  418cc5:	push   ss
  418cc6:	aas    
  418cc7:	add    eax,0x26a33037
  418ccc:	fcomp  st(1)
  418cce:	pushf  
  418ccf:	sub    DWORD PTR [esi],ebx
  418cd1:	add    al,0x88
  418cd3:	add    al,0x9
  418cd5:	adc    BYTE PTR [eax-0x16],dh
  418cd8:	or     eax,0x1dc89323
  418cdd:	aas    
  418cde:	mov    ?,WORD PTR [edi+esi*8]
  418ce1:	sbb    BYTE PTR [ecx+0x34],ah
  418ce4:	push   cs
  418ce5:	inc    ebx
  418ce6:	add    DWORD PTR [edx],0xffffffbe
  418ce9:	xor    edi,DWORD PTR [edi]
  418ceb:	adc    esp,ecx
  418ced:	subps  xmm6,XMMWORD PTR [esi]
  418cf0:	les    ebx,FWORD PTR [esi]
  418cf2:	push   ebx
  418cf3:	call   0x41989c
	...
  418d04:	add    BYTE PTR [edi+0x2c],cl
  418d07:	rcl    DWORD PTR ds:0x30ea365c,cl
  418d0d:	pop    eax
  418d0e:	sub    al,cl
  418d10:	sbb    DWORD PTR [esp+esi*1],ebx
  418d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d14:	and    bl,BYTE PTR [esi]
  418d16:	xor    BYTE PTR [ebp-0x79dad2bc],cl
  418d1c:	push   ds
  418d1d:	adc    DWORD PTR [ecx+eax*4],esi
  418d20:	and    ch,BYTE PTR [ebx]
  418d22:	aaa    
  418d23:	jmp    0x5f3e:0xb0e7ee36
  418d2a:	add    dl,BYTE PTR [esi+0x1185f33]
  418d30:	mov    BYTE PTR [ebx+0x39],dl
  418d33:	je     0x418db3
  418d35:	dec    edx
  418d36:	and    al,0x70
  418d38:	jmp    0x3983a565
  418d3d:	and    bh,dh
  418d3f:	and    cl,ch
  418d41:	cld    
  418d42:	or     eax,0x7e9f0d34
  418d47:	int3   
  418d48:	fadd   DWORD PTR [ecx]
  418d4a:	aas    
  418d4b:	add    DWORD PTR [ebx-0x38bcdcc5],edx
  418d51:	or     BYTE PTR [esi],0x34
  418d54:	in     eax,dx
  418d55:	sar    BYTE PTR [ebp-0x34],1
  418d58:	clc    
  418d59:	cmp    DWORD PTR [edi],0x233b5301
  418d5f:	inc    ebx
  418d60:	xchg   DWORD PTR [ebp+0xe],edi
  418d63:	xor    al,0xcd
  418d65:	mov    al,0x7d
  418d67:	int3   
  418d68:	fadd   DWORD PTR [eax]
	...
  418d76:	add    BYTE PTR [eax],al
  418d78:	cmp    DWORD PTR [edi],0x233b5301
  418d7e:	inc    ebx
  418d7f:	xchg   DWORD PTR [eax],eax
  418d81:	mov    ebx,0xeadfe9fc
  418d86:	sar    DWORD PTR cs:[ecx+ebx*1],0x6c
  418d8b:	(bad)  
  418d8c:	xor    BYTE PTR ds:0x1c1fdb62,dh
  418d92:	dec    esi
  418d93:	rcr    BYTE PTR ds:0x31ba6c36,0x22
  418d9a:	jne    0x418d39
  418d9c:	add    ebp,DWORD PTR [edx]
  418d9e:	jne    0x418d6c
  418da0:	dec    esi
  418da1:	sub    ah,BYTE PTR [esi-0x4b]
  418da4:	pushf  
  418da5:	add    eax,0x2d509979
  418daa:	outs   dx,DWORD PTR ds:[esi]
  418dab:	test   BYTE PTR [esi+0x1c],cl
  418dae:	dec    edx
  418daf:	xchg   DWORD PTR [eax+0x27],ecx
  418db2:	ins    DWORD PTR es:[edi],dx
  418db3:	jge    0x418de8
  418db5:	add    ch,BYTE PTR [eax+eax*1+0x4]
  418db9:	loopne 0x418e2c
  418dbb:	pop    esp
  418dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dbd:	retf   0x726d
  418dc0:	(bad)  
  418dc1:	fstp   DWORD PTR [edi+0x32]
  418dc4:	data16 mov BYTE PTR [eax],0x0
  418dc8:	push   esi
  418dc9:	jecxz  0x418dcb
  418dcb:	bound  edx,QWORD PTR [esi-0x19]
  418dce:	add    BYTE PTR [edx],dh
  418dd0:	mov    ?,sp
  418dd3:	xor    eax,0x65fc8b66
  418dd8:	push   esi
  418dd9:	lahf   
  418dda:	cld    
  418ddb:	cmp    BYTE PTR [eax],al
	...
  418de9:	add    BYTE PTR [eax],al
  418deb:	push   esi
  418dec:	call   0x8b67c1f1
  418df1:	cld    
  418df2:	sub    al,0x26
  418df4:	mov    bh,ah
  418df6:	bound  edx,QWORD PTR [esi]
  418df8:	fiadd  DWORD PTR [eax]
  418dfa:	cmp    DWORD PTR [esi],edx
  418dfc:	mov    eax,ds:0x972660fc
  418e01:	cld    
  418e02:	xor    al,0x26
  418e04:	mov    ?,esp
  418e06:	sub    al,0x16
  418e08:	out    0x0,eax
  418e0a:	xor    dl,BYTE PTR [esi]
  418e0c:	cwde   
  418e0d:	cld    
  418e0e:	cmp    dh,ah
  418e10:	xchg   ebp,eax
  418e11:	cld    
  418e12:	xor    esp,esi
  418e14:	fld    DWORD PTR [eax]
  418e16:	(bad)  
  418e17:	(bad)  
  418e18:	in     al,0x0
  418e1a:	aaa    
  418e1b:	(bad)  
  418e1c:	fild   DWORD PTR [eax]
  418e1e:	aaa    
  418e1f:	out    0xc5,al
  418e21:	add    BYTE PTR [ebp-0x1],cl
  418e24:	out    0x6e,al
  418e26:	outs   dx,DWORD PTR ds:[esi]
  418e27:	test   edx,edx
  418e29:	bound  esi,QWORD PTR [ecx+eiz*4-0x16]
  418e2d:	arpl   WORD PTR [esi-0x21],bp
  418e30:	rcr    DWORD PTR [edi+0x74],cl
  418e33:	rcr    DWORD PTR [edi-0x2a359a04],0x36
  418e3a:	das    
  418e3b:	jno    0x418e02
  418e3d:	push   ecx
  418e3e:	outs   dx,DWORD PTR ds:[esi]
  418e3f:	aas    
  418e40:	dec    ecx
  418e41:	or     al,0x75
  418e43:	push   ds
  418e44:	pop    ebp
  418e45:	and    DWORD PTR [esi+edi*8+0x4a],ebx
  418e49:	adc    esp,DWORD PTR [edx+0x1a]
  418e4c:	pop    ebx
  418e4d:	aas    
  418e4e:	ins    DWORD PTR es:[edi],dx
	...
  418e5b:	add    BYTE PTR [eax],al
  418e5d:	add    dl,ch
  418e5f:	inc    ebx
  418e60:	adc    ebp,DWORD PTR [esi+0x3f]
  418e63:	pop    esi
  418e64:	sbb    eax,0x1bfde274
  418e69:	jb     0x418e54
  418e6b:	add    ecx,DWORD PTR [edi]
  418e6d:	jno    0x418eae
  418e6f:	(bad)  
  418e70:	pop    ss
  418e71:	je     0x418e4d
  418e73:	std    
  418e74:	sbb    esi,DWORD PTR [edx-0x2f]
  418e77:	or     ecx,DWORD PTR [edi]
  418e79:	and    BYTE PTR [edx],bl
  418e7b:	add    ebp,DWORD PTR [ecx]
  418e7d:	dec    eax
  418e7e:	test   al,0xfe
  418e80:	adc    BYTE PTR [eax],al
  418e82:	mov    WORD PTR [eax],cs
  418e84:	adc    DWORD PTR [ebx-0x74],esp
  418e87:	int3   
  418e88:	push   cs
  418e89:	jbe    0x418e25
  418e8b:	fucom  st(4)
  418e8d:	and    ah,BYTE PTR [ebx-0x629cd20d]
  418e93:	hlt    
  418e94:	push   cs
  418e95:	ins    BYTE PTR es:[edi],dx
  418e96:	aas    
  418e97:	ficom  WORD PTR [edi]
  418e99:	je     0x418e35
  418e9b:	ficomp WORD PTR [ebx]
  418e9d:	jb     0x418f10
  418e9f:	int3   
  418ea0:	push   cs
  418ea1:	and    BYTE PTR [edx],bl
  418ea3:	ret    
  418ea4:	sub    BYTE PTR [edx+0x62],dl
  418ea7:	xchg   esp,eax
  418ea8:	adc    eax,0x40cf5a74
  418ead:	addr16 dec ebp
  418eaf:	mov    WORD PTR [ecx],fs
  418eb1:	je     0x418f13
  418eb3:	popf   
  418eb4:	pop    es
  418eb5:	add    BYTE PTR [eax+ebx*4+0xc],ch
  418eb9:	arpl   WORD PTR [esp+eax*4+0x12],bp
  418ebd:	jbe    0x418ee1
  418ebf:	jge    0x418ea1
  418ec1:	and    al,BYTE PTR [eax]
	...
  418ecf:	add    BYTE PTR [eax],al
  418ed1:	sbb    edi,DWORD PTR [ebx+ebp*1-0x6837dd8f]
  418ed8:	add    ecx,DWORD PTR [esi]
  418eda:	das    
  418edb:	xchg   esi,eax
  418edc:	push   ds
  418edd:	out    dx,al
  418ede:	and    bl,BYTE PTR [eax-0x35c9e3f3]
  418ee4:	ficomp WORD PTR [ebx+ebp*8]
  418ee7:	pushf  
  418ee8:	adc    BYTE PTR [esi+esi*1],bl
  418eeb:	retf   0x1233
  418eee:	enter  0x10cc,0x13
  418ef2:	or     eax,0x2fde0a85
  418ef7:	dec    ecx
  418ef8:	sbb    edx,ecx
  418efa:	(bad)  
  418efb:	ss sbb edx,ebx
  418efe:	and    dh,BYTE PTR [edi]
  418f00:	pop    ds
  418f01:	int    0x31
  418f03:	inc    ebp
  418f04:	adc    bl,BYTE PTR [edi]
  418f06:	jecxz  0x418f55
  418f08:	sub    dh,ch
  418f0a:	add    DWORD PTR [esi],edx
  418f0c:	xor    al,0x3f
  418f0e:	or     al,0x4d
  418f10:	sbb    BYTE PTR [eax+esi*1+0x18933e45],ch
  418f17:	jmp    0x6911:0x53c9810
  418f1e:	xor    BYTE PTR ds:0x51f3f18,al
  418f24:	and    bl,BYTE PTR [edi+0xc]
  418f27:	or     DWORD PTR [eax],edx
  418f29:	pusha  
  418f2a:	enter  0x152d,0x62
  418f2e:	and    DWORD PTR [esp+eiz*8],eax
  418f31:	jl     0x418f5c
  418f33:	mul    BYTE PTR [edx]
	...
  418f41:	add    BYTE PTR [eax],al
  418f43:	add    BYTE PTR [edi],bh
  418f45:	sbb    edi,DWORD PTR [ecx-0x3ac3a7c9]
  418f4b:	jecxz  0x418faf
  418f4d:	daa    
  418f4e:	fcom   DWORD PTR [esi]
  418f50:	jo     0x418f8e
  418f52:	or     dl,cl
  418f54:	enter  0xc93b,0x21
  418f58:	push   ebx
  418f59:	sub    eax,0xe0b8dbea
  418f5e:	add    cl,ch
  418f60:	pushf  
  418f61:	mov    bh,0x3f
  418f63:	sahf   
  418f64:	jb     0x418f7f
  418f66:	push   ebp
  418f67:	mov    ebx,0xb54b0efd
  418f6c:	cmp    al,0x18
  418f6e:	dec    edi
  418f6f:	mov    al,ds:0xb04ef749
  418f74:	cmp    al,0x1b
  418f76:	dec    ebx
  418f77:	mov    al,0x4d
  418f79:	sbb    eax,DWORD PTR [esi-0x17]
  418f7c:	(bad)  
  418f7d:	inc    DWORD PTR [ebp-0x56]
  418f80:	aaa    
  418f81:	enter  0x9e42,0x2e
  418f85:	or     ecx,DWORD PTR [edx+0x2e]
  418f88:	lea    esi,[edi+0x2c4c4dfc]
  418f8e:	push   0x47
  418f90:	dec    eax
  418f91:	mov    bh,0x6b
  418f93:	pop    ebx
  418f94:	pop    edx
  418f95:	sub    al,0x6a
  418f97:	push   edi
  418f98:	pop    esp
  418f99:	cmp    ch,BYTE PTR [edi+0x4d]
  418f9c:	inc    ebx
  418f9d:	cmp    BYTE PTR [edx+0x3a],ah
  418fa0:	sub    BYTE PTR [esp+ebp*2],bh
  418fa3:	cmp    edx,DWORD PTR [edi]
  418fa5:	adc    al,0x73
  418fa7:	or     BYTE PTR [eax],al
	...
  418fb5:	add    BYTE PTR [eax],al
  418fb7:	das    
  418fb8:	cmp    ah,BYTE PTR [esi-0x17]
  418fbb:	pop    ss
  418fbc:	cmp    BYTE PTR [esi+0x1b],ah
  418fbf:	or     eax,0x1c046e16
  418fc4:	cmp    eax,0x2a061562
  418fc9:	add    DWORD PTR [edi],eax
  418fcb:	mul    DWORD PTR [esi]
  418fcd:	aaa    
  418fce:	(bad)  
  418fcf:	sub    eax,0xf0f568c8
  418fd4:	es aaa 
  418fd6:	push   ss
  418fd7:	sub    al,0xc8
  418fd9:	push   0x7026d0d5
  418fde:	adc    ecx,DWORD PTR [eiz*8+0x23f5ad00]
  418fe5:	ins    BYTE PTR es:[edi],dx
  418fe6:	add    cl,dh
  418fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fe9:	pop    edi
  418fea:	pop    esp
  418feb:	in     eax,0xa2
  418fed:	jb     0x41905e
  418fef:	jnp    0x418f90
  418ff1:	cld    
  418ff2:	pop    ebx
  418ff3:	aad    0xa2
  418ff5:	jb     0x419066
  418ff7:	retf   
  418ff8:	mov    ds:0x96a66d6f,eax
  418ffd:	inc    ecx
  418ffe:	push   0x6567b9b4
  419003:	(bad)  
  419004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419005:	outs   dx,DWORD PTR ds:[esi]
  419006:	jae    0x418f9e
  419008:	popf   
  419009:	ins    DWORD PTR es:[edi],dx
  41900a:	data16 repnz mov cl,0x5b
  41900e:	jb     0x418fd3
  419010:	xchg   esi,eax
  419011:	inc    ecx
  419012:	push   0x6567b9e4
  419017:	es mov eax,0x736f
	...
  419029:	add    BYTE PTR [esi-0x7d],ah
  41902c:	outs   dx,BYTE PTR ds:[esi]
  41902d:	jae    0x419021
  41902f:	lods   al,BYTE PTR ds:[esi]
  419030:	push   0x6380196c
  419035:	jb     0x41908d
  419037:	xchg   esi,eax
  419038:	inc    edx
  419039:	jb     0x418fc4
  41903b:	mov    bh,0x63
  41903d:	jne    0x4190ba
  41903f:	int3   
  419040:	pop    esp
  419041:	dec    esi
  419042:	jg     0x418ff1
  419044:	fs jb  0x419090
  419047:	mov    bh,0x5f
  419049:	add    BYTE PTR [edx-0x73],bl
  41904c:	ins    DWORD PTR es:[edi],dx
  41904d:	ins    DWORD PTR es:[edi],dx
  41904e:	cmp    DWORD PTR [eax-0x61a5ff93],esp
  419054:	ins    DWORD PTR es:[edi],dx
  419055:	arpl   WORD PTR ds:0xf26c5f97,bp
  41905b:	leave  
  41905c:	dec    ecx
  41905d:	sub    eax,0x65689f1b
  419062:	jmp    0xad9d8d1e
  419067:	clc    
  419068:	inc    edi
  419069:	or     ah,BYTE PTR gs:[ecx-0x60c09193]
  419070:	fmul   QWORD PTR [edi+0x4d]
  419073:	jbe    0x41905f
  419075:	push   bx
  419077:	test   bl,dh
  419079:	inc    DWORD PTR [ebx]
  41907b:	outs   dx,DWORD PTR ds:[esi]
  41907c:	in     eax,dx
  41907d:	pusha  
  41907e:	aas    
  41907f:	pop    ebx
  419080:	leave  
  419081:	outs   dx,DWORD PTR ds:[esi]
  419082:	push   ss
  419083:	sbb    ah,0x42
  419086:	das    
  419087:	pop    eax
  419088:	jecxz  0x419089
  41908a:	in     eax,dx
  41908b:	pop    edx
  41908c:	in     eax,0x65
	...
  41909a:	add    BYTE PTR [eax],al
  41909c:	add    BYTE PTR [ecx],bl
  41909e:	mov    edx,cs
  4190a0:	push   ebx
  4190a1:	out    dx,eax
  4190a2:	sahf   
  4190a3:	repz or ax,WORD PTR [ebx+esi*8+0x2d]
  4190a9:	out    0x44,al
  4190ab:	in     eax,dx
  4190ac:	call   DWORD PTR [edx+edx*2]
  4190af:	in     eax,dx
  4190b0:	jae    0x419094
  4190b2:	xor    DWORD PTR [eax],eax
  4190b4:	pop    esp
  4190b5:	or     DWORD PTR [eax],ebx
  4190b7:	mul    BYTE PTR [esi-0x24]
  4190ba:	add    eax,0x4021fec
  4190bf:	jmp    0x32e06f2a
  4190c4:	retfw  
  4190c6:	out    dx,al
  4190c7:	add    al,0x51
  4190c9:	aas    
  4190ca:	or     al,0x5
  4190cc:	je     0x41910d
  4190ce:	repz add al,0x67
  4190d1:	aas    
  4190d2:	cmc    
  4190d3:	add    al,0x65
  4190d5:	aas    
  4190d6:	rol    BYTE PTR [eax+eax*1],cl
  4190d9:	aas    
  4190da:	repz leave 
  4190dc:	imul   esp,DWORD PTR [eax+0x5f6bdfc1],0xffffffeb
  4190e3:	icebp  
  4190e4:	je     0x419077
  4190e6:	fcomi  st,st(1)
  4190e8:	pop    esi
  4190e9:	arpl   sp,cx
  4190eb:	repnz dec DWORD PTR [ebp+0x6d5f2eec]
  4190f2:	ret    0xffec
  4190f5:	jp     0x4190bf
  4190f7:	xlat   BYTE PTR ds:[ebx]
  4190f8:	out    0x4f,al
  4190fa:	and    BYTE PTR [edi+edx*8-0x2afc3780],ah
	...
  41910d:	add    BYTE PTR [eax],al
  41910f:	add    BYTE PTR [ebp+0xe],dh
  419112:	jmp    0x2e6:0xc02754c5
  419119:	cmp    al,0xba
  41911b:	add    ebp,DWORD PTR [esi]
  41911d:	pop    ds
  41911e:	mov    esi,0xc92c5ae6
  419123:	mul    DWORD PTR [eax+0xcf48900]
  419129:	sbb    BYTE PTR [ecx-0x7cc2f00c],cl
  41912f:	cmc    
  419130:	sbb    al,0xc8
  419132:	popf   
  419133:	loop   0x419144
  419135:	cmp    al,0xa9
  419137:	out    0xdc,eax
  419139:	cmp    DWORD PTR [ebp-0x5a38100c],eax
  41913f:	loop   0x419130
  419141:	cmp    edx,DWORD PTR [ebp-0x15c6220c]
  419147:	iret   
  419148:	stc    
  419149:	cmp    BYTE PTR [esi-0x2c],dl
  41914c:	jecxz  0x419187
  41914e:	pop    esi
  41914f:	add    al,0xee
  419151:	and    al,0x44
  419153:	clc    
  419154:	retf   
  419155:	es cmp bh,ah
  419158:	xchg   esp,eax
  419159:	or     cl,BYTE PTR [esi-0x1d]
  41915c:	scas   eax,DWORD PTR es:[edi]
  41915d:	and    BYTE PTR [edx],bl
  41915f:	out    0x89,eax
  419161:	pop    ds
  419162:	push   cs
  419163:	(bad)  
  419164:	xchg   esp,eax
  419165:	sub    DWORD PTR [eax],esp
  419167:	out    0x82,eax
  419169:	cmp    al,0x1a
  41916b:	loopne 0x4191dc
  41916d:	sub    eax,0x22a1f81e
  419172:	add    esi,ebp
	...
  419184:	adc    BYTE PTR [eax],ch
  419186:	lock cdq 
  419188:	cs add eax,0x1386cca
  41918e:	jmp    0xfdb2bbc1
  419193:	cmp    al,0xa
  419195:	push   ebp
  419196:	mov    ecx,0xad2ae12b
  41919b:	in     eax,0x25
  41919d:	push   0x662bd3b5
  4191a2:	mov    ebp,0xb96c0fd0
  4191a7:	mov    eax,ds:0xafca5d25
  4191ac:	push   ds
  4191ad:	outs   dx,BYTE PTR ds:[esi]
  4191ae:	enter  0x27ae,0x1
  4191b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191b3:	scas   eax,DWORD PTR es:[edi]
  4191b4:	or     eax,0x93cb955
  4191b9:	ins    BYTE PTR es:[edi],dx
  4191ba:	(bad)  
  4191bb:	mov    fs,WORD PTR [esi]
  4191bd:	pusha  
  4191be:	popf   
  4191bf:	xchg   ebp,eax
  4191c0:	and    al,0x6b
  4191c2:	call   0xf93c:0x7d793c4e
  4191c9:	inc    esp
  4191ca:	int3   
  4191cb:	xchg   BYTE PTR [edi],dl
  4191cd:	push   ecx
  4191ce:	jmp    0x84b6bc46
  4191d3:	imul   esp,ebp,0x69
  4191d6:	push   edi
  4191d7:	push   0xffffffb3
  4191d9:	pop    eax
  4191da:	sbb    al,BYTE PTR [edi+0x733d42de]
  4191e0:	mov    bl,0x58
  4191e2:	cmp    dl,BYTE PTR [edx+0x37]
  4191e5:	sub    ax,0x0
	...
  4191f5:	add    BYTE PTR [esi],ah
  4191f7:	cmp    BYTE PTR [edx+0x46],ch
  4191fa:	and    DWORD PTR [esi],esp
  4191fc:	outs   dx,DWORD PTR ds:[esi]
  4191fd:	jmp    0x1584960f
  419202:	or     dl,dh
  419204:	dec    esi
  419205:	sub    al,0x1f
  419207:	or     BYTE PTR [ebp+0x8],ch
  41920a:	or     al,0x38
  41920c:	data16 sbb bl,BYTE PTR [edi]
  41920f:	pop    ss
  419210:	jp     0x41922b
  419212:	push   ss
  419213:	jmp    FWORD PTR [ecx+0x0]
  419216:	inc    esp
  419217:	test   al,0x79
  419219:	inc    esi
  41921a:	push   esi
  41921c:	xor    al,0x33
  41921e:	adc    eax,0x182d38f4
  419223:	cli    
  419224:	inc    edx
  419225:	xor    dh,BYTE PTR [ebx]
  419227:	std    
  419228:	xor    BYTE PTR [ecx],dh
  41922a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41922b:	idiv   DWORD PTR [ebx]
  41922d:	xor    edx,DWORD PTR [ebp+0x2e3027f3]
  419233:	cld    
  419234:	xor    BYTE PTR [edx],dh
  419236:	in     al,0xf8
  419238:	inc    edx
  419239:	xor    al,0x3f
  41923b:	mov    al,BYTE PTR [edx+0x7d]
  41923e:	sar    bl,cl
  419240:	sub    dh,BYTE PTR [edx]
  419242:	mov    dl,0xf6
  419244:	pop    esp
  419245:	ja     0x4191f6
  419247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419248:	xor    DWORD PTR [edx],esi
  41924a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41924b:	jg     0x4192a8
  41924d:	jae    0x4191fe
  41924f:	mov    WORD PTR [eax+0x50],ss
  419252:	xchg   esi,eax
  419253:	xchg   edx,eax
  419254:	dec    esi
  419255:	gs cli 
  419257:	xchg   ebp,eax
  419258:	pop    ebx
  419259:	jb     0x41925b
	...
  419267:	add    BYTE PTR [eax],al
  419269:	(bad)  
  41926a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41926b:	add    BYTE PTR gs:[eax+0x567066ae],al
  419272:	in     al,0x6e
  419274:	fs test bl,0x54
  419278:	inc    ebp
  419279:	adc    al,0x99
  41927b:	push   ecx
  41927c:	push   edx
  41927d:	or     bl,ah
  41927f:	es add dh,ah
  419282:	lods   al,BYTE PTR ds:[esi]
  419283:	jno    0x4192f8
  419285:	jns    0x419228
  419287:	jb     0x4192ed
  419289:	inc    esi
  41928a:	out    dx,eax
  41928b:	sub    edi,DWORD PTR [edx]
  41928d:	je     0x41927d
  41928f:	add    BYTE PTR [ebp+0x65],dh
  419292:	lahf   
  419293:	jb     0x419303
  419295:	inc    edi
  419296:	mov    bh,0x5f
  419298:	cmp    dh,BYTE PTR ds:0x3f6600ee
  41929e:	aam    0xf0
  4192a0:	imul   ebx,DWORD PTR [edi-0x40],0xffffffe8
  4192a4:	arpl   WORD PTR [ebp-0x3c],bp
  4192a7:	out    dx,eax
  4192a8:	jo     0x4192df
  4192aa:	scas   al,BYTE PTR es:[edi]
  4192ab:	cmp    al,BYTE PTR [eax]
  4192ad:	sbb    DWORD PTR [edi-0x2b72bd2c],ebx
  4192b3:	iret   
  4192b4:	push   ecx
  4192b5:	jno    0x419291
  4192b7:	add    al,0x46
  4192b9:	imul   ebp,DWORD PTR [edi+0x20],0x4e
  4192bd:	pop    eax
  4192be:	xchg   edx,eax
  4192bf:	add    BYTE PTR [esi+0x6b],al
  4192c2:	outs   dx,DWORD PTR ds:[esi]
  4192c3:	into   
  4192c4:	ins    BYTE PTR es:[edi],dx
  4192c5:	xor    BYTE PTR [edi-0x73d49911],bl
  4192cb:	out    dx,eax
  4192cc:	sub    eax,0x0
	...
  4192d9:	add    BYTE PTR [eax],al
  4192db:	add    BYTE PTR [edi],ah
  4192dd:	mov    esp,gs
  4192df:	dec    DWORD PTR ds:0xf053c652
  4192e5:	pop    edi
  4192e6:	rol    BYTE PTR [edx-0xd],cl
  4192e9:	ins    BYTE PTR es:[edi],dx
  4192ea:	jmp    0x41934d
  4192ec:	sbb    BYTE PTR [esi+eax*8+0x2f7eef53],cl
  4192f3:	xor    BYTE PTR cs:[ebx-0x31],ch
  4192f7:	pusha  
  4192f8:	in     eax,dx
  4192f9:	push   edi
  4192fa:	lock jae 0x4192e9
  4192fd:	sahf   
  4192fe:	iret   
  4192ff:	dec    esp
  419300:	stc    
  419301:	pop    edx
  419302:	sar    DWORD PTR [esi],cl
  419304:	in     eax,dx
  419305:	jecxz  0x4192e7
  419307:	push   ecx
  419308:	loopne 0x419306
  41930a:	in     eax,dx
  41930b:	sub    al,BYTE PTR [ecx]
  41930d:	repz aam 0x1f
  419310:	or     al,0xb1
  419312:	xor    eax,0xd4d3815c
  419317:	push   eax
  419318:	call   0x4ee:0xad62f2ed
  41931f:	inc    esi
  419320:	mov    ecx,edi
  419322:	and    al,0x41
  419324:	test   al,0xc8
  419326:	sbb    al,0xee
  419328:	mov    eax,cs
  41932a:	and    ebx,eax
  41932c:	js     0x419316
  41932e:	sub    ebp,ebx
  419330:	xchg   esp,eax
  419331:	sub    eax,ebp
  419333:	out    0xf8,eax
  419335:	add    BYTE PTR [ecx],cl
  419337:	icebp  
  419338:	outs   dx,DWORD PTR ds:[esi]
  419339:	cmp    DWORD PTR [ebx],ecx
  41933b:	repnz pop esp
  41933d:	enter  0xe716,0x0
	...
  41934d:	add    BYTE PTR [eax],al
  41934f:	outs   dx,BYTE PTR ds:[esi]
  419350:	cmp    al,BYTE PTR ds:0xd5278af2
  419356:	out    0xd0,al
  419358:	sbb    edx,edi
  41935a:	out    0x4e,al
  41935c:	jmp    FWORD PTR [ebp-0x3edd87fd]
  419362:	mul    DWORD PTR [ecx]
  419364:	daa    
  419365:	(bad)  
  419366:	(bad)  
  419367:	sbb    DWORD PTR [esi],esi
  419369:	(bad)
  41936c:	and    DWORD PTR [eax-0x44ff5f06],edi
  419372:	icebp  
  419373:	or     al,0x2
  419375:	popf   
  419376:	out    dx,al
  419377:	push   ds
  419378:	sub    ebx,DWORD PTR [eax-0x67d511fd]
  41937e:	cmc    
  41937f:	sbb    eax,0xe8fab636
  419384:	sub    ch,dl
  419386:	adc    edi,DWORD PTR [edi]
  419388:	enter  0x92e9,0xe2
  41938c:	push   es
  41938d:	jmp    0x282:0x6d56dde9
  419394:	add    al,0x13
  419396:	mov    dh,0x68
  419398:	enter  0x7b89,0x5c
  41939c:	xchg   esp,eax
  41939d:	dec    esp
  41939e:	iret   
  41939f:	jmp    0x6c6fab6b
  4193a4:	fdivrp st(7),st
  4193a6:	cmp    ah,BYTE PTR [ecx-0x5]
  4193a9:	repnz add ebp,DWORD PTR [edi-0x3e]
  4193ad:	add    bh,ch
  4193af:	xor    al,0xe1
  4193b1:	add    ch,al
	...
  4193bf:	add    BYTE PTR [eax],al
  4193c1:	add    BYTE PTR [ecx-0x35],al
  4193c4:	add    ebp,edx
  4193c6:	aas    
  4193c7:	enter  0xe4f,0x21
  4193cb:	cmp    al,0x74
  4193cd:	or     BYTE PTR ds:0xe41d5d2b,cl
  4193d3:	sbb    eax,0x1bfafa62
  4193d8:	push   ecx
  4193d9:	sbb    eax,0xc75270e
  4193de:	sbb    eax,DWORD PTR [ebx]
  4193e0:	(bad)  
  4193e1:	(bad)  
  4193e2:	frstor [esi+eiz*2]
  4193e5:	fstp   TBYTE PTR [eax+eax*1]
  4193e8:	ins    BYTE PTR es:[edi],dx
  4193e9:	fcmovbe st,st(0)
  4193eb:	scas   eax,DWORD PTR es:[edi]
  4193ec:	push   ebp
  4193ed:	fcmovu st,st(1)
  4193ef:	cmp    DWORD PTR [ecx],eax
  4193f1:	mov    ecx,0xe970389d
  4193f6:	mov    WORD PTR [edi+ebp*2],ds
  4193f9:	mov    ch,0x3c
  4193fb:	sbb    ah,BYTE PTR [esi-0x3c]
  4193fe:	xchg   ebx,eax
  4193ff:	cmp    esp,DWORD PTR [esi+0x9]
  419402:	xchg   DWORD PTR [esi],esp
  419404:	outs   dx,DWORD PTR ds:[esi]
  419405:	jmp    0x8bbb9c7a
  41940a:	mov    eax,ds:0x9f9c6539
  41940f:	and    BYTE PTR [ecx],al
  419411:	mov    edi,0x92603a60
  419416:	cmp    al,0x3b
  419418:	jo     0x41939e
  41941a:	outs   dx,BYTE PTR ds:[esi]
  41941b:	fstp   QWORD PTR [edi-0x7a]
  41941e:	push   edx
  41941f:	and    eax,0xec3c866a
  419424:	outs   dx,DWORD PTR ds:[esi]
  419425:	dec    esp
	...
  419432:	add    BYTE PTR [eax],al
  419434:	add    BYTE PTR [edi+0x3b],cl
  419437:	push   0x4f
  419439:	pop    esp
  41943a:	iret   
  41943b:	push   0x48
  41943d:	push   esi
  41943e:	sub    bh,BYTE PTR [esi]
  419440:	or     eax,DWORD PTR [ebx-0x16]
  419443:	add    BYTE PTR [eax],al
  419445:	jo     0x4193ec
  419447:	push   0x1ef18375
  41944c:	add    BYTE PTR [ebp-0x5d],al
  41944f:	data16 je 0x4194a3
  419452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419453:	jb     0x4194ba
  419455:	jp     0x4193ee
  419457:	arpl   WORD PTR [ebp+0x39],bp
  41945a:	mov    ds:0x9c226150,al
  41945f:	pop    ebx
  419460:	ins    DWORD PTR es:[edi],dx
  419461:	sub    dl,BYTE PTR [edi+ebp*2+0x588d5254]
  419468:	push   ebx
  419469:	inc    ebx
  41946a:	mov    bh,0x71
  41946c:	imul   edi,DWORD PTR [ecx],0x1e0071a2
  419472:	mov    ds:0xa3887471,eax
  419477:	addr16 gs (bad) 
  41947a:	xchg   edi,eax
  41947b:	jno    0x4194e2
  41947d:	in     al,0x80
  41947f:	pop    ebx
  419480:	ins    DWORD PTR es:[edi],dx
  419481:	or     edx,0x50
  419484:	popa   
  419485:	cmc    
  419486:	mov    ch,0x75
  419488:	outs   dx,DWORD PTR ds:[esi]
  419489:	in     al,0x8e
  41948b:	cld    
  41948c:	dec    edi
  41948d:	jns    0x419443
  41948f:	jo     0x4194df
  419491:	rcr    DWORD PTR [edi-0x354b9a9e],cl
  419497:	push   esp
  419498:	add    BYTE PTR gs:[eax],al
	...
  4194a7:	add    BYTE PTR [edi+ebx*4-0x5948919d],ah
  4194ae:	push   eax
  4194af:	jns    0x419487
  4194b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194b2:	cld    
  4194b3:	dec    ebp
  4194b4:	idiv   BYTE PTR [edx-0x1f39abba]
  4194ba:	js     0x419529
  4194bc:	mov    edx,0xd94e5cca
  4194c1:	sahf   
  4194c2:	pop    edi
  4194c3:	jo     0x4194cc
  4194c5:	test   al,0x29
  4194c7:	sub    edx,DWORD PTR [esi-0x6b]
  4194ca:	ins    DWORD PTR es:[edi],dx
  4194cb:	data16 aas 
  4194cd:	or     eax,0x4ad5ef0
  4194d2:	fld    DWORD PTR [eax-0x60]
  4194d5:	std    
  4194d6:	fisub  WORD PTR [edx-0x5e]
  4194d9:	loop   0x4194cc
  4194db:	outs   dx,DWORD PTR ds:[esi]
  4194dc:	pop    edi
  4194dd:	shl    bh,cl
  4194df:	gs xchg ebx,eax
  4194e1:	mul    ch
  4194e3:	jno    0x41947f
  4194e5:	lahf   
  4194e6:	ret    0x6f53
  4194e9:	jg     0x4194c7
  4194eb:	bound  ecx,QWORD PTR [ebx+ecx*8-0x2ca19213]
  4194f2:	in     eax,dx
  4194f3:	ins    BYTE PTR es:[edi],dx
  4194f4:	popa   
  4194f5:	jg     0x4194ea
  4194f7:	bound  ebp,QWORD PTR [ebp-0x4b]
  4194fa:	loope  0x41956d
  4194fc:	aas    
  4194fd:	fst    st(0)
  4194ff:	dec    edi
  419500:	pop    ds
  419501:	ret    
  419502:	loope  0x419574
  419504:	dec    ebx
  419505:	cwde   
  419506:	jmp    0x6d:0xe798535e
	...
  419519:	add    BYTE PTR [eax],al
  41951b:	pop    ds
  41951c:	mov    ebx,?
  41951e:	bound  ebp,QWORD PTR ds:0xf53c29f
  419524:	mov    edi,0x732c62e0
  419529:	in     eax,dx
  41952a:	ins    DWORD PTR es:[edi],dx
  41952b:	push   ds
  41952c:	imul   ebp,ebp,0x6c
  41952f:	sub    DWORD PTR [edi+0x520c5ef4],edi
  419535:	out    dx,eax
  419536:	ins    BYTE PTR es:[edi],dx
  419537:	or     eax,0xeb460043
  41953c:	outs   dx,BYTE PTR ds:[esi]
  41953d:	and    BYTE PTR [edx+eiz*8+0x51],ah
  419541:	in     al,dx
  419542:	data16 loope 0x419584
  419545:	in     al,dx
  419546:	data16 fdivr DWORD PTR [eax+eiz*1]
  41954a:	jo     0x41951c
  41954c:	xor    ah,ch
  41954e:	inc    DWORD PTR [edx]
  419550:	push   ebx
  419551:	rcr    BYTE PTR [edi],1
  419553:	fcmovnb st,st(7)
  419555:	dec    esp
  419556:	cmc    
  419557:	int3   
  419558:	push   ds
  419559:	dec    esp
  41955a:	jecxz  0x419528
  41955c:	push   ds
  41955d:	inc    ebx
  41955e:	jmp    0x1c91:0xf0492958
  419565:	push   ebx
  419566:	loope  0x419590
  419568:	add    edx,DWORD PTR [esi]
  41956a:	aam    0x40
  41956c:	cmp    BYTE PTR [eax],bh
  41956e:	jmp    0xdf7fb515
  419573:	(bad)
  419577:	js     0x419592
  419579:	adc    bl,bh
  41957b:	xchg   esp,eax
  41957c:	sbb    al,0xea
  41957e:	loope  0x419580
	...
  41958c:	add    BYTE PTR [eax],al
  41958e:	ins    BYTE PTR es:[edi],dx
  41958f:	cmp    BYTE PTR [edi],dl
  419591:	in     al,dx
  419592:	pop    ebp
  419593:	sbb    al,0x16
  419595:	sub    ah,BYTE PTR [ecx+0x39]
  419598:	adc    DWORD PTR [esi+ecx*4],eax
  41959b:	sbb    eax,0x2753f00c
  4195a0:	clc    
  4195a1:	fidiv  WORD PTR [ebx+edi*8-0x58]
  4195a5:	aam    0x15
  4195a7:	sbb    ebx,ecx
  4195a9:	loope  0x4195f7
  4195ab:	or     al,0xac
  4195ad:	iret   
  4195ae:	or     bh,bh
  4195b0:	mov    ebx,0x970c23e1
  4195b5:	fisubr WORD PTR [ebx+esi*1]
  4195b8:	mov    edx,0xbe26fb03
  4195bd:	loop   0x4195bb
  4195bf:	push   ds
  4195c0:	mov    eax,0xbe05f303
  4195c5:	rol    DWORD PTR [ecx],cl
  4195c7:	push   ds
  4195c8:	test   al,ch
  4195ca:	sbb    BYTE PTR [ecx],0x8d
  4195cd:	cmc    
  4195ce:	repnz and bl,BYTE PTR [eax+0x7e38d9c7]
  4195d5:	sub    edi,esp
  4195d7:	sbb    cl,BYTE PTR [esi+0x122f103]
  4195dd:	jno    0x419648
  4195df:	aaa    
  4195e0:	inc    ebx
  4195e1:	sbb    BYTE PTR [eax+0x29],0x1
  4195e5:	dec    edi
  4195e6:	dec    edi
  4195e7:	sbb    al,0x70
  4195e9:	push   eax
  4195ea:	dec    edi
  4195eb:	sub    DWORD PTR [ebx],ebp
  4195ed:	inc    eax
  4195ee:	and    eax,0x270123
	...
  4195ff:	add    BYTE PTR [eax],al
  419601:	sbb    al,0x39
  419603:	jne    0x41961f
  419605:	das    
  419606:	sbb    eax,0x65b446b
  41960b:	outs   dx,DWORD PTR ds:[esi]
  41960c:	inc    esi
  41960d:	push   cs
  41960e:	cmp    DWORD PTR [esi+0x3b],esp
  419611:	cmp    eax,DWORD PTR [edx]
  419613:	push   ebp
  419614:	cmp    edi,esi
  419616:	and    dh,BYTE PTR [eax+0x15]
  419619:	push   ebp
  41961a:	and    al,0x5f
  41961c:	jmp    0x19a39531
  419621:	out    0x26,eax
  419623:	push   eax
  419624:	std    
  419625:	fldenv [edi]
  419627:	push   0xe
  419629:	pop    es
  41962a:	or     DWORD PTR [ecx-0x5],ebp
  41962d:	out    0x1e,eax
  41962f:	sbb    di,sp
  419632:	ss jo  0x41961e
  419635:	repz sbb al,0x63
  419638:	aad    0xcf
  41963a:	or     ch,BYTE PTR [edi-0x34]
  41963d:	nop
  41963e:	std    
  41963f:	imul   ecx,edx,0xc84dcba7
  419645:	fwait
  419646:	retf   
  419647:	aas    
  419648:	into   
  419649:	cdq    
  41964a:	sbb    esi,DWORD PTR [esi-0x43]
  41964d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41964e:	sbb    eax,0x226f8d64
  419653:	imul   eax,ebx,0xffffff95
  419656:	sbb    ebx,DWORD PTR [ebp-0x59]
  419659:	jo     0x419656
  41965b:	add    BYTE PTR [edx-0x698ada99],bh
  419661:	pop    ebp
  419662:	cmp    DWORD PTR [esi+0x0],esp
	...
  419671:	add    BYTE PTR [eax],al
  419673:	add    BYTE PTR [edx-0x4e9c9c7f],ah
  419679:	out    0x47,eax
  41967b:	popa   
  41967c:	mov    ebp,0xd36f41e7
  419681:	mov    dh,0x6f
  419683:	je     0x419674
  419685:	mov    eax,ds:0x9d095c65
  41968a:	outs   dx,BYTE PTR ds:[esi]
  41968b:	pop    edx
  41968c:	jg     0x419642
  41968e:	pop    eax
  41968f:	ins    DWORD PTR es:[edi],dx
  419690:	xchg   esp,eax
  419691:	mov    ecx,0xa6916a58
  419696:	jno    0x419698
  419698:	inc    ebp
  419699:	popf   
  41969a:	jo     0x419701
  41969c:	es cwde 
  41969e:	jno    0x419705
  4196a0:	push   esp
  4196a1:	jge    0x4196e3
  4196a3:	add    BYTE PTR [esi-0x76],bl
  4196a6:	push   0xfcb73961
  4196ab:	dec    edi
  4196ac:	inc    ecx
  4196ad:	mov    dh,0x70
  4196af:	add    BYTE PTR [eax],bl
  4196b1:	mov    ds:0xb63b6468,eax
  4196b6:	cld    
  4196b7:	sub    eax,0x66a0e9
  4196bc:	fstp   DWORD PTR [ebx-0x10319a92]
  4196c2:	push   ds
  4196c3:	add    BYTE PTR [ebx+eiz*8],dh
  4196c6:	cmp    al,BYTE PTR [eax]
  4196c8:	or     BYTE PTR [ebx-0x587591a5],0x74
  4196cf:	add    bl,dl
  4196d1:	stos   DWORD PTR es:[edi],eax
  4196d2:	sbb    al,0x46
  4196d4:	retf   0xfc96
  4196d7:	outs   dx,DWORD PTR ds:[esi]
	...
  4196e4:	add    BYTE PTR [eax],al
  4196e6:	add    ah,ah
  4196e8:	mov    eax,ds:0x9a85656a
  4196ed:	cs imul edx,eax,0xde2dfc9b
  4196f4:	lahf   
  4196f5:	push   0x34d9dd00
  4196fa:	inc    esi
  4196fb:	aas    
  4196fc:	pop    ebx
  4196fd:	xor    eax,0x29912c35
  419702:	inc    edx
  419703:	cs pop ebx
  419705:	xor    ch,BYTE PTR [ebx]
  419707:	sub    esp,DWORD PTR [ebp+0x38]
  41970a:	cmp    BYTE PTR [edx],ch
  41970c:	js     0x419740
  41970e:	ss std 
  419710:	imul   esi,DWORD PTR ds:0xbae91133,0x3e
  419717:	cli    
  419718:	shl    BYTE PTR ds:0xf9ca7d44,cl
  41971e:	inc    DWORD PTR [edx-0x7ea11516]
  419724:	retf   
  419725:	aam    0x2d
  419727:	fwait
  419728:	std    
  419729:	add    al,0x5c
  41972b:	xchg   cl,ah
  41972d:	iret   
  41972e:	ins    BYTE PTR es:[edi],dx
  41972f:	cdq    
  419730:	repz jmp 0x419791
  419733:	lea    edi,[eax+ebx*8-0x1a2e6fb3]
  41973a:	inc    ebp
  41973b:	xchg   ebx,eax
  41973c:	out    dx,eax
  41973d:	add    al,0x2e
  41973f:	pusha  
  419740:	(bad)  
  419741:	in     eax,0x60
  419743:	pop    esp
  419744:	shl    cl,cl
  419746:	ins    DWORD PTR es:[edi],dx
  419747:	imul   ebx,DWORD PTR [edi+0x5ecf],0x0
	...
  41975a:	imul   ebp,DWORD PTR [ebx-0x60c10000],0x0
  419761:	add    BYTE PTR [edi],bh
  419763:	lahf   
  419764:	add    BYTE PTR [esi],bh
  419766:	aas    
  419767:	retf   
  419768:	and    eax,DWORD PTR [eax]
  41976a:	jnp    0x4197db
  41976c:	ret    
  41976d:	dec    edi
  41976e:	ins    BYTE PTR es:[edi],dx
  41976f:	pop    edx
  419770:	rcr    BYTE PTR [esi+0x2c],1
  419773:	outs   dx,BYTE PTR ds:[esi]
  419774:	jmp    0x4197e2
  419776:	sub    eax,0x5b003283
  41977b:	dec    esi
  41977c:	leave  
  41977d:	push   ebx
  41977e:	out    dx,eax
  41977f:	cmp    eax,edx
  419781:	pop    esi
  419782:	or     al,0xc8
  419784:	xchg   esi,eax
  419785:	out    dx,al
  419786:	adc    esi,DWORD PTR [esi]
  419788:	xchg   BYTE PTR [ecx],dh
  41978a:	aas    
  41978b:	in     al,dx
  41978c:	mov    al,ds:0xab1831c8
  419791:	ror    DWORD PTR [ecx],cl
  419793:	xor    eax,0x35d3ee77
  419798:	xchg   BYTE PTR [ecx],dh
  41979a:	aas    
  41979b:	in     al,dx
  41979c:	mov    eax,ds:0x9d17eccf
  4197a1:	in     al,0xe1
  4197a3:	sbb    eax,DWORD PTR [ebx-0x2c]
  4197a6:	loope  0x4197dc
  4197a8:	push   edi
  4197a9:	in     eax,dx
  4197aa:	stos   DWORD PTR es:[edi],eax
  4197ab:	ss dec esi
  4197ad:	xor    bh,BYTE PTR [edi]
  4197af:	enter  0xc72d,0xa1
  4197b3:	and    eax,0x19afe538
  4197b8:	inc    esp
  4197b9:	lock je 0x4197cd
  4197bc:	inc    ecx
  4197bd:	out    0x0,al
	...
  4197cb:	add    BYTE PTR [eax],al
  4197cd:	pushf  
  4197ce:	sbb    DWORD PTR [ebx],esi
  4197d0:	icebp  
  4197d1:	sub    ah,bh
  4197d3:	adc    dh,ch
  4197d5:	popf   
  4197d6:	call   0x1ca37b07
  4197db:	jmp    0x89ed:0x162263d0
  4197e2:	ss or  eax,0x71f75d8
  4197e8:	repnz imul esi,DWORD PTR ds:0xc4cde03,0x13
  4197f0:	jmp    0x41984c
  4197f2:	and    al,0xd3
  4197f4:	in     al,dx
  4197f5:	dec    edi
  4197f6:	call   0x237482a8
  4197fb:	or     al,bh
  4197fd:	adc    DWORD PTR [edi],ebx
  4197ff:	mov    esi,0xd0fb0b03
  419804:	loopne 0x419834
  419806:	sbb    DWORD PTR [edi+0x13422e4],esi
  41980c:	xchg   ebp,eax
  41980d:	and    DWORD PTR [ecx],0x6b
  419810:	lds    esp,FWORD PTR [ebx+0x79c97033]
  419816:	or     DWORD PTR [edx-0x73],ebp
  419819:	cmp    al,0x17
  41981b:	ins    BYTE PTR es:[edi],dx
  41981c:	(bad)  
  41981d:	pusha  
  41981e:	xor    esp,DWORD PTR [edx-0x65]
  419821:	mov    DWORD PTR [esi+ecx*2],ecx
  419824:	nop
  419825:	pop    edi
  419826:	ss ins BYTE PTR es:[edi],dx
  419828:	jp     0x41988d
  41982a:	and    dh,BYTE PTR [ebp-0x6b]
  41982d:	and    DWORD PTR [ecx],0x6b
  419830:	test   DWORD PTR [eax],eax
	...
  41983e:	add    BYTE PTR [eax],al
  419840:	arpl   WORD PTR [ebx],si
  419842:	jo     0x41984d
  419844:	js     0x41984f
  419846:	push   0x4d
  419848:	inc    ebx
  419849:	stc    
  41984a:	imul   ecx,DWORD PTR [edi+0x2f],0x1d
  41984e:	bound  ebx,QWORD PTR [ebx+0x8]
  419851:	add    al,0x4f
  419853:	push   eax
  419854:	sbb    bh,ah
  419856:	outs   dx,BYTE PTR ds:[esi]
  419857:	xor    eax,0xfb3f040e
  41985c:	call   0xf76fe59
  419861:	das    
  419862:	imul   ecx,DWORD PTR [esi],0xe
  419865:	test   al,0x40
  419867:	or     bh,ch
  419869:	push   es
  41986a:	inc    ebp
  41986b:	add    ch,ch
  41986d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41986e:	inc    eax
  41986f:	or     bh,ch
  419871:	push   es
  419872:	inc    ebp
  419873:	adc    ch,ch
  419875:	or     DWORD PTR [edx+0x12],esp
  419878:	inc    ebx
  419879:	adc    esp,DWORD PTR [edx+0x0]
  41987c:	out    0x29,eax
  41987e:	ins    BYTE PTR es:[edi],dx
  41987f:	icebp  
  419880:	and    ch,BYTE PTR [edi]
  419882:	imul   edx,eax,0x3c
  419885:	stc    
  419886:	imul   eax,edi,0xffffffa8
  419889:	sbb    al,0x62
  41988b:	fist   DWORD PTR [ecx-0x6041aefd]
  419891:	xor    al,0x21
  419893:	add    ch,al
  419895:	mov    ds:0xae837471,al
  41989a:	jno    0x4198bc
  41989c:	fild   QWORD PTR [ebp-0x5559ff9f]
  4198a2:	jo     0x41990c
	...
  4198b0:	add    BYTE PTR [eax],al
  4198b2:	add    BYTE PTR [esi-0x3a90b381],dl
  4198b8:	lods   al,BYTE PTR ds:[esi]
  4198b9:	push   ecx
  4198ba:	jns    0x419891
  4198bc:	mov    bh,0x5f
  4198be:	ins    DWORD PTR es:[edi],dx
  4198bf:	test   al,0xb2
  4198c1:	outs   dx,BYTE PTR ds:[esi]
  4198c2:	imul   edx,DWORD PTR [esi+0x7b],0x99c16f72
  4198c9:	pop    ebx
  4198ca:	ins    DWORD PTR es:[edi],dx
  4198cb:	addr16 pop bx
  4198ce:	je     0x419887
  4198d0:	jnp    0x41992d
  4198d2:	je     0x4198c2
  4198d4:	retf   
  4198d5:	pop    ebx
  4198d6:	arpl   WORD PTR [ebp-0x6d919055],ax
  4198dc:	lahf   
  4198dd:	imul   ebp,DWORD PTR cs:[eax-0x7b],0xab465bfc
  4198e5:	popa   
  4198e6:	outs   dx,DWORD PTR ds:[esi]
  4198e7:	mov    ebp,DWORD PTR [ebp+0x7e266c63]
  4198ed:	ins    DWORD PTR es:[edi],dx
  4198ee:	push   dx
  4198f0:	mov    ds:0x7833725b,eax
  4198f5:	inc    ebx
  4198f6:	outs   dx,BYTE PTR ds:[esi]
  4198f7:	inc    ebp
  4198f8:	sahf   
  4198f9:	pop    edi
  4198fa:	fs aas 
  4198fc:	mov    DWORD PTR [ebx+0x69],ebx
  4198ff:	jmp    0x6885:0x376d3fca
  419906:	inc    ecx
  419907:	inc    edx
  419908:	mov    al,0x72
  41990a:	gs aad 0x9d
  41990d:	cld    
  41990e:	push   ebx
  41990f:	inc    ebx
  419910:	scas   eax,DWORD PTR es:[edi]
  419911:	outs   dx,BYTE PTR fs:[esi]
  419913:	jmp    0xa9069e
	...
  419924:	add    BYTE PTR [eax],al
  419926:	lahf   
  419927:	retf   0x6f50
  41992a:	aas    
  41992b:	adc    ebx,0xe97f2d62
  419931:	jno    0x419972
  419933:	inc    ecx
  419934:	fild   QWORD PTR [edi-0x11]
  419937:	xchg   ebp,eax
  419938:	div    BYTE PTR [ebx+0x3f]
  41993b:	inc    ecx
  41993c:	fild   QWORD PTR [edi-0x2]
  41993f:	xchg   ecx,eax
  419940:	jecxz  0x4199ae
  419942:	or     bh,BYTE PTR [edi]
  419944:	hlt    
  419945:	dec    DWORD PTR [eax]
  419947:	push   esi
  419948:	lock dec edi
  41994a:	fiadd  WORD PTR [ecx-0xd]
  41994d:	je     0x419927
  41994f:	inc    edx
  419950:	in     al,0xff
  419952:	or     eax,0xec6ff43c
  419957:	dec    ebx
  419958:	div    BYTE PTR [ebp-0x26]
  41995b:	and    al,BYTE PTR [eax]
  41995d:	push   ecx
  41995e:	ficomp DWORD PTR [eax+esi*8]
  419961:	dec    edi
  419962:	rol    BYTE PTR [edx],1
  419964:	stc    
  419965:	dec    DWORD PTR [ebp+0x7e6ff914]
  41996b:	adc    ah,ah
  41996d:	ins    BYTE PTR es:[edi],dx
  41996e:	mov    dl,0xe5
  419970:	clc    
  419971:	dec    DWORD PTR [ebp+0x6f6ff8fc]
  419977:	adc    ah,dh
  419979:	jo     0x419903
  41997b:	push   cs
  41997c:	repz arpl WORD PTR [edi],di
  41997f:	adc    ah,ah
  419981:	pusha  
  419982:	nop
  419983:	(bad)  
  419984:	fidiv  WORD PTR [ebx+0x29]
  419987:	shl    dh,cl
  419989:	add    BYTE PTR fs:[eax],al
	...
  419998:	add    BYTE PTR [edi],bh
  41999a:	shl    bl,1
  41999c:	pusha  
  41999d:	pop    eax
  41999e:	mov    esp,0xd21173de
  4199a3:	out    0x6d,al
  4199a5:	aas    
  4199a6:	ret    
  4199a7:	ret    0x4b5e
  4199aa:	in     al,dx
  4199ab:	in     eax,0x66
  4199ad:	pop    ebx
  4199ae:	scas   eax,DWORD PTR es:[edi]
  4199af:	int3   
  4199b0:	push   ebx
  4199b1:	push   edi
  4199b2:	enter  0x23cc,0xfd
  4199b6:	es (bad) 
  4199b8:	and    al,0x3f
  4199ba:	stc    
  4199bb:	ret    0x2ce9
  4199be:	sbb    eax,0x41df5c9
  4199c3:	cwde   
  4199c4:	mov    esp,0xdb9603ec
  4199c9:	sbb    eax,0xce4a7e8
  4199ce:	out    0xe9,eax
  4199d0:	(bad)  
  4199d1:	adc    ebp,DWORD PTR [esi]
  4199d3:	sahf   
  4199d4:	cli    
  4199d5:	sbb    DWORD PTR [edx],ebx
  4199d7:	test   edi,ecx
  4199d9:	push   cs
  4199da:	movsx  ecx,bh
  4199dd:	or     al,0x30
  4199df:	test   DWORD PTR [ebx],esp
  4199e1:	std    
  4199e2:	es jle 0x419a09
  4199e5:	sti    
  4199e6:	cli    
  4199e7:	jbe    0x4199d1
  4199e9:	into   
  4199ea:	sbb    dl,cl
  4199ec:	out    0xdd,eax
  4199ee:	pop    ss
  4199ef:	jnp    0x4199e8
  4199f1:	inc    eax
  4199f2:	(bad)  
  4199f3:	push   edx
  4199f4:	mul    BYTE PTR [edi+0x50e94c2f]
  4199fa:	or     al,0x41
  4199fc:	test   BYTE PTR [eax],0x0
	...
  419a0b:	add    BYTE PTR [ebp-0x511ea9d7],bl
  419a11:	pop    ds
  419a12:	jmp    0x71f6:0x43358ed3
  419a19:	xor    ebp,DWORD PTR [esi]
  419a1b:	fisttp DWORD PTR [esi-0x721ed938]
  419a21:	ss push ds
  419a23:	add    al,0x83
  419a25:	sub    eax,DWORD PTR [ebx+eiz*8]
  419a28:	ins    DWORD PTR es:[edi],dx
  419a29:	xor    al,0x1e
  419a2b:	add    al,0x83
  419a2d:	das    
  419a2e:	sbb    BYTE PTR [esi+ebx*1],ah
  419a31:	jmp    0x419a40
  419a33:	add    al,0x6e
  419a35:	adc    edx,DWORD PTR [esi]
  419a37:	aam    0x30
  419a39:	or     eax,DWORD PTR [ecx]
  419a3b:	add    al,0xdc
  419a3d:	sub    eax,0x28fdc96d
  419a42:	(bad)  gs:[ecx-0x74168fe9]
  419a49:	adc    DWORD PTR [ebp-0x47],edx
  419a4c:	pop    esp
  419a4d:	mul    DWORD PTR [ebp-0x25]
  419a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a51:	sub    DWORD PTR [edi-0x17],ebp
  419a54:	ins    BYTE PTR es:[edi],dx
  419a55:	adc    edx,DWORD PTR [ecx-0x6]
  419a58:	pop    esp
  419a59:	mul    DWORD PTR [ebp-0x45]
  419a5c:	xchg   BYTE PTR [ecx],ch
  419a5e:	outs   dx,DWORD PTR ds:[esi]
  419a5f:	jmp    0xda92add0
  419a64:	sbb    al,0xf9
  419a66:	outs   dx,DWORD PTR ds:[esi]
  419a67:	test   BYTE PTR [edx-0x3c],ch
  419a6a:	dec    edx
  419a6b:	mov    BYTE PTR [ecx+0xba0129],cl
	...
  419a7d:	add    BYTE PTR [eax],al
  419a7f:	mov    eax,ds:0x71c950f8
  419a84:	pop    ss
  419a85:	data16 jnp 0x419aa4
  419a88:	push   ss
  419a89:	bound  eax,QWORD PTR [ecx+eiz*2+0x689f4ea4]
  419a90:	adc    al,0x21
  419a92:	sub    al,0x18
  419a94:	add    ebp,DWORD PTR [edx+0x4d]
  419a97:	pop    ebx
  419a98:	jecxz  0x419afe
  419a9a:	dec    ebp
  419a9b:	xor    DWORD PTR [edi],esp
  419a9d:	jo     0x419af9
  419a9f:	cmp    edx,DWORD PTR [edx]
  419aa1:	dec    ebx
  419aa2:	sbb    eax,0x3a55c3f3
  419aa7:	sbb    BYTE PTR [edx],bl
  419aa9:	and    DWORD PTR [edi],esp
  419aab:	sbb    al,0x2f
  419aad:	jmpw   0xb0af
  419ab1:	push   ebp
  419ab2:	cmp    DWORD PTR [ebx],esp
  419ab4:	stc    
  419ab5:	gs sbb esi,ebp
  419ab8:	outs   dx,DWORD PTR es:[esi]
  419aba:	jmp    0x3983a964
  419abf:	sbb    edi,ecx
  419ac1:	gs add ah,dl
  419ac4:	mov    eax,ds:0x5ee6725f
  419ac9:	inc    edi
  419aca:	inc    ecx
  419acb:	es in  al,dx
  419acd:	dec    edi
  419ace:	jae    0x419b0b
  419ad0:	call   0x5f:0x82874e1c
  419ad7:	fild   DWORD PTR [edx-0x387d96a5]
  419add:	dec    eax
  419ade:	push   esp
  419adf:	jmp    0x0:0x551c77
	...
  419af2:	aad    0xaa
  419af4:	jb     0x419af6
  419af6:	into   
  419af7:	jnp    0x419b49
  419af9:	push   eax
  419afa:	ss jge 0x419b5c
  419afd:	jb     0x419ac7
  419aff:	stos   BYTE PTR es:[edi],al
  419b00:	jb     0x419b22
  419b02:	mov    ebx,0xb600487d
  419b07:	mov    BYTE PTR [ebx+esi*1+0x76],cl
  419b0b:	jp     0x419b7e
  419b0d:	gs (bad) 
  419b0f:	mov    DWORD PTR [ebx+0x4d],0x551c77a7
  419b16:	aad    0xa9
  419b18:	jb     0x419b1a
  419b1a:	sahf   
  419b1b:	jnp    0x419b6d
  419b1d:	push   eax
  419b1e:	mov    ds:0x466c63a6,eax
  419b23:	xor    DWORD PTR [ecx+0x65],0x614aec94
  419b2a:	xor    DWORD PTR [ecx-0x7f95b804],0x4c
  419b31:	dec    ebp
  419b32:	xchg   DWORD PTR [ebp-0x4ecadf98],eax
  419b38:	jb     0x419bb0
  419b3a:	jnp    0x419ad2
  419b3c:	cld    
  419b3d:	push   edx
  419b3e:	and    eax,DWORD PTR [eax-0x68c4dfb4]
  419b44:	pop    edi
  419b45:	jb     0x419b2d
  419b47:	(bad)  
  419b48:	push   eax
  419b49:	dec    edi
  419b4a:	aas    
  419b4b:	loope  0x419b7c
  419b4d:	and    BYTE PTR [edi+0x3f73f2a2],cl
  419b53:	mov    esi,0x53c1
	...
  419b64:	add    BYTE PTR [edi-0x6f],ch
  419b67:	shr    BYTE PTR [ebp+ecx*2-0x5b],1
  419b6b:	add    BYTE PTR [edi+0x72],al
  419b6e:	lock aam 0x1f
  419b71:	(bad)  
  419b73:	bnd jae 0x419bb5
  419b76:	mov    cl,0xd0
  419b78:	dec    esp
  419b79:	movsx  esp,BYTE PTR [eax+edx*2]
  419b7d:	push   ds
  419b7e:	jle    0x419b6f
  419b80:	je     0x419baa
  419b82:	pop    edi
  419b83:	in     al,0x31
  419b85:	aas    
  419b86:	pop    eax
  419b87:	sar    DWORD PTR [esi],0xef
  419b8a:	rcl    ah,1
  419b8c:	pop    esi
  419b8d:	or     al,0x5e
  419b8f:	rep ins BYTE PTR es:[edi],dx
  419b91:	in     eax,dx
  419b92:	push   esp
  419b93:	xor    al,BYTE PTR [eax]
  419b95:	add    DWORD PTR [ebx-0x2c],esi
  419b98:	dec    edi
  419b99:	pop    ds
  419b9a:	popa   
  419b9b:	in     eax,0x70
  419b9d:	in     al,dx
  419b9e:	cmp    ebx,ebx
  419ba0:	jno    0x419b85
  419ba2:	pop    esi
  419ba3:	add    BYTE PTR [eax-0x15],cl
  419ba6:	cmp    al,0xd0
  419ba8:	dec    edx
  419ba9:	fiadd  WORD PTR [edi-0x24]
  419bac:	pop    ds
  419bad:	out    dx,eax
  419bae:	dec    edi
  419baf:	out    dx,eax
  419bb0:	jo     0x419b62
  419bb2:	cli    
  419bb3:	out    dx,al
  419bb4:	arpl   WORD PTR [ebp-0x51],bp
  419bb7:	iret   
  419bb8:	dec    edx
  419bb9:	xchg   ebx,eax
  419bba:	fbld   TBYTE PTR [eax+edx*2]
  419bbd:	sahf   
  419bbe:	(bad)  
  419bbf:	out    dx,eax
  419bc0:	je     0x419b6a
  419bc2:	fucomp st(0)
  419bc4:	xor    DWORD PTR [edi],edi
  419bc6:	scas   eax,DWORD PTR es:[edi]
  419bc7:	ror    BYTE PTR [eax+eax*1+0x0],1
	...
  419bd7:	add    BYTE PTR [edi-0x62],ch
  419bda:	and    BYTE PTR [eax-0x62],dl
  419bdd:	fsubp  st(7),st
  419bdf:	je     0x419c49
  419be1:	enter  0xe817,0xf0
  419be5:	adc    BYTE PTR ds:0x39e878c5,ch
  419beb:	in     eax,0x6f
  419bed:	adc    eax,0x2c4edf13
  419bf2:	jmp    0x6f24:0x19fc82bd
  419bf9:	daa    
  419bfa:	div    edx
  419bfc:	dec    ebx
  419bfd:	xor    eax,edi
  419bff:	out    0xb8,eax
  419c01:	or     DWORD PTR [esi-0x4617ff29],edi
  419c07:	in     al,0x2f
  419c09:	adc    eax,0x2c2ededb
  419c0e:	jmp    0xef23:0x99fc05d2
  419c15:	es mov bh,0xf2
  419c18:	adc    esi,DWORD PTR [ecx]
  419c1a:	mov    eax,0x97a180e7
  419c1f:	fsubrp st(2),st
  419c21:	sbb    ebx,DWORD PTR [ebx-0x41d5111c]
  419c27:	shl    cl,0x24
  419c2a:	cwde   
  419c2b:	fsubp  st(7),st
  419c2d:	xor    BYTE PTR [edi+esi*8-0x86bf10c],al
  419c34:	fst    QWORD PTR ds:0xe7cce88c
  419c3a:	test   al,0xe2
	...
  419c48:	add    BYTE PTR [eax],al
  419c4a:	add    bh,bl
  419c4c:	xor    BYTE PTR [ebp-0x23],dh
  419c4f:	lods   al,BYTE PTR ds:[esi]
  419c50:	call   0x27e47f89
  419c55:	inc    ebx
  419c56:	out    0xae,eax
  419c58:	add    al,0x29
  419c5a:	loope  0x419bfb
  419c5c:	xor    DWORD PTR [ebp-0x22],edx
  419c5f:	mov    WORD PTR ds:0x2b9cbaea,ss
  419c65:	dec    esp
  419c66:	clc    
  419c67:	mov    eax,ds:0x1840011c
  419c6c:	sbb    BYTE PTR [ecx],al
  419c6e:	sbb    bl,BYTE PTR [edx]
  419c70:	sub    esi,DWORD PTR [ebp+0x1e]
  419c73:	fcom   QWORD PTR [esi]
  419c75:	cmp    ax,0x29a8
  419c79:	pusha  
  419c7a:	sbb    eax,DWORD PTR [edx]
  419c7c:	sbb    BYTE PTR [edi+eax*1-0x29],ch
  419c80:	cld    
  419c81:	dec    ebx
  419c82:	psubusw mm5,QWORD PTR [ecx]
  419c85:	pusha  
  419c86:	add    al,0xef
  419c88:	adc    esi,DWORD PTR [esi-0x3]
  419c8b:	loopne 0x419cc0
  419c8d:	ins    BYTE PTR es:[edi],dx
  419c8e:	add    cl,BYTE PTR [edi+0x5cb04e13]
  419c94:	loope  0x419cf5
  419c96:	retf   0x158b
  419c99:	imul   ebx,ebp,0x5c
  419c9c:	or     eax,0x2b9dbf62
  419ca1:	mov    bx,0xe180
  419ca5:	pop    edi
  419ca6:	retf   0x156b
  419ca9:	imul   edi,DWORD PTR [ebp-0x41b05f71],0x0
	...
  419cbc:	add    BYTE PTR [eax],al
  419cbe:	bound  edx,QWORD PTR [esp+esi*2]
  419cc1:	mov    BYTE PTR [esi+0x25],ch
  419cc4:	pop    ebp
  419cc5:	lods   al,BYTE PTR ds:[esi]
  419cc6:	test   DWORD PTR [edi],esp
  419cc8:	outs   dx,DWORD PTR ds:[esi]
  419cc9:	xchg   BYTE PTR [edi+0x33],ch
  419ccc:	arpl   WORD PTR [ebp-0x68960478],dx
  419cd2:	pop    eax
  419cd3:	xor    esi,DWORD PTR [edx+edi*2+0x1c]
  419cd7:	adc    dl,BYTE PTR [ebp-0x6b]
  419cda:	jg     0x419cf1
  419cdc:	outs   dx,DWORD PTR ds:[esi]
  419cdd:	jnp    0x419d00
  419cdf:	cs jne 0x419d21
  419ce2:	sbb    BYTE PTR [edx],bl
  419ce4:	jo     0x419d36
  419ce6:	or     ch,BYTE PTR [esi]
  419ce8:	pop    ebp
  419ce9:	ds add al,0x2e
  419cec:	gs adc bl,BYTE PTR ds:[ecx]
  419cf0:	and    DWORD PTR [eax],eax
  419cf2:	dec    ebx
  419cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cf4:	jno    0x419d69
  419cf6:	ja     0x419c9d
  419cf8:	arpl   WORD PTR [esi+0x71],bp
  419cfb:	in     al,0x51
  419cfd:	jne    0x419c83
  419cff:	cdq    
  419d00:	jae    0x419d75
  419d02:	push   edx
  419d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d04:	addr16 pop esp
  419d06:	es call 0x735f:0xa83f666d
  419d0e:	sub    bl,BYTE PTR [edi+0x63]
  419d11:	arpl   sp,dx
  419d13:	jl     0x419d86
  419d15:	outs   dx,DWORD PTR ds:[esi]
  419d16:	inc    eax
  419d17:	mov    al,ds:0x97c34f1c
  419d1c:	push   0x1c80b96f
  419d21:	dec    ecx
	...
  419d2e:	add    BYTE PTR [eax],al
  419d30:	add    BYTE PTR [eax+0x78725f97],cl
  419d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d37:	jo     0x419d59
  419d39:	in     eax,0xa6
  419d3b:	jo     0x419db1
  419d3d:	jg     0x419dbc
  419d3f:	gs jae 0x419ce8
  419d42:	js     0x419db1
  419d44:	data16 rcl BYTE PTR [ebx+ebx*2+0x478f7372],cl
  419d4c:	imul   eax,DWORD PTR [ebp-0x368c9267],0xb15c70a5
  419d56:	sub    BYTE PTR [esi+0x64],0xb9
  419d5a:	xchg   esp,eax
  419d5b:	jno    0x419d7d
  419d5d:	mov    eax,0xd3435877
  419d62:	cwde   
  419d63:	jb     0x419dca
  419d65:	mov    eax,0xc4655697
  419d6a:	xchg   edi,eax
  419d6b:	arpl   WORD PTR [edi-0x48],bp
  419d6e:	(bad)  
  419d6f:	push   ebp
  419d70:	imul   ecx,DWORD PTR [eax-0x7a889258],0x3f6547e4
  419d7a:	add    dh,ah
  419d7c:	pop    esi
  419d7d:	mov    al,ds:0x5f64d708
  419d82:	ret    0x61f1
  419d85:	mov    WORD PTR [eax],cs
  419d87:	hlt    
  419d88:	jae    0x419d24
  419d8a:	add    al,0xc9
  419d8c:	dec    edi
  419d8d:	ins    DWORD PTR es:[edi],dx
  419d8e:	(bad)  
  419d90:	data16 arpl sp,cx
  419d93:	repz pop ebx
	...
  419da1:	add    BYTE PTR [eax],al
  419da3:	add    BYTE PTR [eax-0x4c],bh
  419da6:	lock imul edx,DWORD PTR [eax-0x3a],0xffffffdb
  419dab:	jmp    FWORD PTR [ebp-0x62]
  419dae:	loop   0x419e23
  419db0:	dec    eax
  419db1:	shl    dl,1
  419db3:	bound  ebp,QWORD PTR [ebx-0x14]
  419db6:	frstor [eax+0x4d]
  419db9:	(bad)  
  419dba:	rep ins BYTE PTR es:[edi],dx
  419dbc:	and    DWORD PTR [ebp+0x7d2146c4],edx
  419dc2:	loope  0x419e35
  419dc4:	sbb    DWORD PTR [esp+ebp*8-0x1c6e01e1],eax
  419dcb:	ins    BYTE PTR es:[edi],dx
  419dcc:	adc    bl,BYTE PTR [edi-0x14]
  419dcf:	pop    ds
  419dd0:	add    dl,BYTE PTR [eax-0x7bdfa126]
  419dd6:	idiv   bh
  419dd8:	icebp  
  419dd9:	pop    ebx
  419dda:	in     al,dx
  419ddb:	imul   ebp,eax,0x5d
  419dde:	(bad)  
  419de0:	adc    al,0x70
  419de2:	jecxz  0x419e44
  419de4:	fdiv   DWORD PTR [ebx]
  419de6:	fidiv  DWORD PTR [ebx-0x14]
  419de9:	mov    al,0xdd
  419deb:	arpl   dx,sp
  419ded:	push   ds
  419dee:	in     al,dx
  419def:	fnstenvw [edi]
  419df2:	jecxz  0x419e52
  419df4:	shl    DWORD PTR [edi],cl
  419df6:	xlat   BYTE PTR ds:[ebx]
  419df7:	ins    DWORD PTR es:[edi],dx
  419df8:	aas    
  419df9:	dec    eax
  419dfa:	fsub   QWORD PTR [edx-0x57]
  419dfd:	adc    ebx,ebp
  419dff:	jae    0x419db7
  419e01:	enter  0xe354,0xae
  419e05:	enter  0xda50,0x0
	...
  419e15:	add    BYTE PTR [eax],al
  419e17:	popf   
  419e18:	adc    al,0x47
  419e1a:	(bad)  [ebp-0x6208f5d5]
  419e20:	sbb    bh,BYTE PTR [ecx+eiz*8]
  419e23:	mov    gs,eax
  419e25:	cmp    ebp,esp
  419e27:	(bad)  
  419e28:	sbb    DWORD PTR [ebx],edi
  419e2a:	fld    TBYTE PTR [esi+0x24]
  419e2d:	aaa    
  419e2e:	add    al,0x62
  419e30:	adc    ebx,DWORD PTR [esi]
  419e32:	fcomp  DWORD PTR [ebx+0x2d]
  419e35:	(bad)  
  419e37:	sub    BYTE PTR [ecx],0x7
  419e3a:	fisttp DWORD PTR [ebp+0x2e]
  419e3d:	push   ss
  419e3e:	and    al,0x64
  419e40:	daa    
  419e41:	adc    al,0xe5
  419e43:	arpl   WORD PTR [ebx],sp
  419e45:	clc    
  419e46:	and    ecx,DWORD PTR [edi+0x27]
  419e49:	div    esi
  419e4b:	xor    ebp,DWORD PTR ds:0xc82fdff8
  419e51:	rcr    bh,1
  419e53:	sbb    eax,0x2cdcd62e
  419e58:	das    
  419e59:	int    0xf6
  419e5b:	cwde   
  419e5c:	and    al,BYTE PTR ds:0x15005734
  419e62:	and    DWORD PTR [edi-0x2c],ecx
  419e65:	mov    eax,ds:0xfdd85c18
  419e6a:	retf   
  419e6b:	and    eax,0x1735f9e3
  419e70:	jecxz  0x419e4b
  419e72:	xor    eax,0x33c4eb07
  419e77:	sub    eax,0x33cd00
	...
  419e88:	add    BYTE PTR [eax],al
  419e8a:	or     eax,0xd33c500
  419e8f:	add    ch,cl
  419e91:	xor    ecx,DWORD PTR ds:0xd33c500
  419e97:	add    BYTE PTR [ecx],al
  419e99:	int3   
  419e9a:	ins    BYTE PTR es:[edi],dx
  419e9b:	ficomp DWORD PTR [eax+0x6c]
  419e9e:	cmp    al,0xf4
  419ea0:	push   0x6629055c
  419ea5:	pop    ebx
  419ea6:	sbb    DWORD PTR [esi],esp
  419ea8:	outs   dx,DWORD PTR ds:[esi]
  419ea9:	dec    ebp
  419eaa:	inc    ebx
  419eab:	cld    
  419eac:	push   esp
  419ead:	inc    ecx
  419eae:	and    BYTE PTR [ebx],ch
  419eb0:	gs dec esp
  419eb2:	adc    DWORD PTR [edi],esp
  419eb4:	push   0x3b
  419eb6:	pop    ds
  419eb7:	popf   
  419eb8:	jmp    FWORD PTR [edx]
  419eba:	add    ebx,DWORD PTR [ebp-0x6304d869]
  419ec0:	push   ebx
  419ec1:	xor    DWORD PTR [ebx],eax
  419ec3:	popf   
  419ec4:	push   ecx
  419ec5:	sub    eax,0x26c99cfb
  419eca:	add    ebx,DWORD PTR [ebp-0x6304c711]
  419ed0:	rcr    DWORD PTR [edi],1
  419ed2:	add    ebx,DWORD PTR [ebp-0x6304e93a]
  419ed8:	int3   
  419ed9:	adc    DWORD PTR [ebx+0x7b134b9c],eax
  419edf:	pushf  
  419ee0:	or     al,dl
  419ee2:	jl     0x419e80
  419ee4:	push   ecx
  419ee5:	mov    esp,0xb6d29c7c
  419eea:	jl     0x419e88
  419eec:	pusha  
  419eed:	retf   
	...
  419efa:	add    BYTE PTR [eax],al
  419efc:	add    BYTE PTR [esp+ebx*4+0x17],bh
  419f00:	int3   
  419f01:	jl     0x419e9f
  419f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f04:	les    edi,FWORD PTR [esp+ebx*4-0x1f]
  419f08:	int3   
  419f09:	jl     0x419ea7
  419f0b:	push   edi
  419f0c:	(bad)  
  419f0d:	jl     0x419eab
  419f0f:	fisttp DWORD PTR [edi-0x6e1d6384]
  419f15:	jl     0x419eb3
  419f17:	jo     0x7dc73b99
  419f1d:	jl     0x419ebb
  419f1f:	pop    ebp
  419f20:	add    BYTE PTR [ecx-0x38780378],dh
  419f26:	mov    ah,bh
  419f28:	xor    DWORD PTR [edi+eax*4-0x784aad04],0xfffffffc
  419f30:	push   ecx
  419f31:	mov    al,BYTE PTR [esp+edi*8-0x37b7783]
  419f38:	push   ds
  419f39:	ins    BYTE PTR es:[edi],dx
  419f3a:	test   ah,bh
  419f3c:	ins    BYTE PTR es:[di],dx
  419f3e:	test   ah,bh
  419f40:	iret   
  419f41:	jl     0x419ec7
  419f43:	cld    
  419f44:	and    al,BYTE PTR [ebx-0x7c]
  419f47:	cld    
  419f48:	imul   esi,DWORD PTR [ebx],0xffffff84
  419f4b:	cld    
  419f4c:	inc    ecx
  419f4d:	pop    esi
  419f4e:	xchg   esp,edi
  419f50:	dec    ebp
  419f51:	ins    DWORD PTR es:[edi],dx
  419f52:	xchg   esp,edi
  419f54:	sbb    eax,0x42fc8752
  419f59:	dec    edi
  419f5a:	xchg   esp,edi
  419f5c:	leave  
  419f5d:	dec    edi
  419f5e:	xchg   esp,edi
  419f60:	jg     0x419f62
	...
  419f6e:	add    BYTE PTR [eax],al
  419f70:	pop    esp
  419f71:	xchg   esp,edi
  419f73:	push   es
  419f74:	pop    ebp
  419f75:	xchg   esp,edi
  419f77:	lea    ecx,ds:0x214fc87
  419f7d:	xchg   esp,edi
  419f7f:	mov    al,ds:0x42fc87c2
  419f84:	and    eax,DWORD PTR [edi-0x78ec3f04]
  419f8a:	cld    
  419f8b:	sbb    ah,BYTE PTR [eax]
  419f8d:	xchg   esp,edi
  419f8f:	push   ebp
  419f90:	and    BYTE PTR [edi-0x78476804],al
  419f96:	cld    
  419f97:	add    edx,eax
  419f99:	xchg   esp,edi
  419f9b:	xor    dh,dl
  419f9d:	xchg   ah,bh
  419f9f:	mov    ebp,0xeefc86e3
  419fa4:	add    eax,DWORD PTR [edi-0xcc0e004]
  419faa:	mov    edi,0xc00ba5ff
  419faf:	jmp    DWORD PTR [ebx+eax*1-0x40]
  419fb3:	push   DWORD PTR [ebx]
  419fb5:	fidivr DWORD PTR [edi-0x402d8501]
  419fbb:	call   ecx
  419fbd:	jmp    0x71e69f81
  419fc2:	(bad)  
  419fc5:	jo     0x419f8c
  419fc7:	(bad)  
  419fc8:	clc    
  419fc9:	outs   dx,BYTE PTR ds:[esi]
  419fca:	(bad)  
  419fcd:	outs   dx,BYTE PTR ds:[esi]
  419fce:	(bad)  
  419fd1:	ins    DWORD PTR es:[edi],dx
  419fd2:	(bad)  
	...
  419fe1:	add    BYTE PTR [eax],al
  419fe3:	sub    eax,0x76ffc565
  419fe8:	ins    BYTE PTR es:[edi],dx
  419fe9:	(bad)  
  419fec:	fs (bad) 
  419ff0:	imul   eax,ebp,0xffffffff
  419ff3:	pop    esp
  419ff4:	(bad)  
  419ff5:	(bad)  
  419ff8:	imul   eax,ebp,0xc565c5ff
  419ffe:	(bad)  
  419fff:	call   0x77416559
  41a004:	push   0xffffffc5
  41a006:	(bad)  
  41a007:	jmp    0xc53d:0xbaffc561
  41a00e:	dec    edi
  41a010:	fcmovnb st,st(4)
  41a012:	push   DWORD PTR [edx-0x2f]
  41a015:	(bad)  
  41a016:	push   DWORD PTR [ecx]
  41a018:	fld    st(4)
  41a01a:	inc    ebp
  41a01c:	(bad)  
  41a01d:	(bad)  
  41a01e:	jmp    FWORD PTR [esi+eiz*8-0x3c]
  41a022:	(bad)  
  41a023:	out    dx,al
  41a024:	in     eax,0xc4
  41a026:	(bad)  
  41a027:	jg     0x419fde
  41a029:	(bad)  
  41a02a:	push   DWORD PTR [ecx]
  41a02c:	int    0xc4
  41a02e:	jmp    FWORD PTR [ebx+0x60c445c7]
  41a034:	fisttp WORD PTR [ecx]
  41a036:	les    ebx,FWORD PTR [eax+0x61]
  41a039:	or     al,ah
  41a03b:	push   eax
  41a03c:	jb     0x41a048
  41a03e:	les    ecx,FWORD PTR [eax+0x5c]
  41a041:	or     esp,eax
  41a043:	inc    eax
  41a044:	test   eax,0xc409
	...
  41a055:	add    BYTE PTR [eax],bh
  41a057:	dec    edi
  41a058:	push   cs
  41a059:	les    esi,FWORD PTR [eax]
  41a05b:	mov    DWORD PTR [esi],eax
  41a05d:	les    ebp,FWORD PTR [eax]
  41a05f:	xchg   ebx,eax
  41a060:	into   
  41a061:	ret    
  41a062:	and    bh,dl
  41a064:	ret    0x18c3
  41a067:	cmp    al,0xc0
  41a069:	ret    
  41a06a:	adc    BYTE PTR [edi-0x42],al
  41a06d:	ret    
  41a06e:	or     dl,ch
  41a070:	mov    dh,0xc3
  41a072:	add    bl,cl
  41a074:	mov    ch,0xc3
  41a076:	clc    
  41a077:	cdq    
  41a078:	jmp    0x3f03:0xe9c83f03
  41a07f:	enter  0x3e9,0x3f
  41a083:	enter  0x3e9,0x3f
  41a087:	enter  0x3e9,0x3f
  41a08b:	add    eax,0x2a5ddcfe
  41a090:	(bad)  
  41a091:	and    esi,DWORD PTR [edi+0x27]
  41a094:	neg    ebx
  41a096:	mov    eax,0xcc51df6
  41a09b:	repz push ss
  41a09d:	sbb    DWORD PTR [eax],eax
  41a09f:	or     edi,DWORD PTR [edx+0xcf40eb6]
  41a0a5:	mov    bh,0x7
  41a0a7:	enter  0xdbb6,0x1d
  41a0ab:	sub    al,0xbe
  41a0ad:	rcl    BYTE PTR [eax],0x23
  41a0b0:	(bad)  
  41a0b1:	lock or al,0x23
  41a0b4:	test   eax,0x1261803
  41a0b9:	retf   0x0
	...
  41a0c8:	add    BYTE PTR [eax+0x58c85eeb],dl
  41a0ce:	cdq    
  41a0cf:	or     eax,esi
  41a0d1:	addr16 iret 
  41a0d3:	or     eax,0x36b95bf3
  41a0d8:	xor    BYTE PTR [esi+0x30],0x21
  41a0dc:	fadd   QWORD PTR [esi-0x47]
  41a0df:	mov    WORD PTR fs:[eax-0x47],gs
  41a0e3:	or     esp,eax
  41a0e5:	jae    0x41a0cf
  41a0e7:	and    ah,ah
  41a0e9:	ss ret 0x8769
  41a0ed:	pop    esp
  41a0ee:	ror    DWORD PTR [ecx],0x9
  41a0f1:	add    BYTE PTR [ecx],dl
  41a0f3:	push   0x5a
  41a0f5:	ud1    ecx,DWORD PTR [ecx]
  41a0f8:	or     DWORD PTR [ebx-0x18],ebx
  41a0fb:	and    eax,0x9e86318
  41a100:	or     DWORD PTR [ebx+0x23],ebx
  41a103:	ins    BYTE PTR es:[edi],dx
  41a104:	xor    eax,0xe409b912
  41a109:	sbb    al,0x21
  41a10b:	addr16 inc edx
  41a10d:	lock into 
  41a10f:	and    BYTE PTR ds:0xf0212d00,cl
  41a115:	sbb    al,0xe8
  41a117:	and    eax,0x20c81cd9
  41a11c:	leave  
  41a11d:	sbb    al,0xe8
  41a11f:	push   ds
  41a120:	int3   
  41a121:	iret   
  41a122:	out    0x20,al
  41a124:	leave  
  41a125:	pop    esp
  41a126:	enter  0x16f,0x90
  41a12a:	sub    al,0x6d
  41a12c:	mov    edx,0x0
	...
  41a139:	add    BYTE PTR [eax],al
  41a13b:	add    BYTE PTR [esi-0x16],ch
  41a13e:	fs aad 0x88
  41a141:	cwde   
  41a142:	cld    
  41a143:	jmp    0xe9426984
  41a148:	cmp    al,0xc8
  41a14a:	add    cl,ch
  41a14c:	cmp    al,0xc8
  41a14e:	add    BYTE PTR [eax],al
  41a150:	xchg   esi,eax
  41a151:	les    eax,FWORD PTR [eax]
  41a153:	add    BYTE PTR [esi-0x3c],ah
  41a156:	add    BYTE PTR [eax],al
  41a158:	les    ax,DWORD PTR [eax]
  41a15b:	add    BYTE PTR [esi-0x3c],dl
  41a15e:	add    BYTE PTR [eax],al
  41a160:	push   esi
  41a161:	les    eax,FWORD PTR [eax]
  41a163:	add    BYTE PTR [esi-0x3c],ah
  41a166:	add    BYTE PTR [eax],al
  41a168:	les    ax,DWORD PTR [eax]
  41a16b:	add    BYTE PTR [esi-0x3c],dl
  41a16e:	add    BYTE PTR [eax],al
  41a170:	push   esi
  41a171:	les    eax,FWORD PTR [eax]
  41a173:	add    BYTE PTR [esi],ah
  41a175:	int3   
  41a176:	add    BYTE PTR [eax],al
  41a178:	es int3 
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	push   ss
  41a17d:	int3   
  41a17e:	add    BYTE PTR [eax],al
  41a180:	push   ss
  41a181:	int3   
  41a182:	add    BYTE PTR [eax],al
  41a184:	es int3 
  41a186:	add    BYTE PTR [eax],al
  41a188:	es int3 
  41a18a:	add    BYTE PTR [eax],al
  41a18c:	push   ss
  41a18d:	int3   
  41a18e:	add    BYTE PTR [eax],al
  41a190:	push   ss
  41a191:	int3   
  41a192:	add    BYTE PTR [eax],al
  41a194:	out    0xcb,al
  41a196:	add    BYTE PTR [eax],al
  41a198:	out    0xcb,al
  41a19a:	add    BYTE PTR [eax],al
  41a19c:	(bad)  
  41a19d:	retf   
	...
  41a1ae:	add    dh,dl
  41a1b0:	retf   
  41a1b1:	add    BYTE PTR [eax],al
  41a1b3:	out    0xcb,al
  41a1b5:	add    BYTE PTR [eax],al
  41a1b7:	out    0xcb,al
  41a1b9:	add    BYTE PTR [eax],al
  41a1bb:	(bad)  
  41a1bc:	retf   
  41a1bd:	add    BYTE PTR [eax],al
  41a1bf:	(bad)  
  41a1c0:	retf   
  41a1c1:	add    BYTE PTR [eax],al
  41a1c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c4:	retf   
  41a1c5:	add    BYTE PTR [eax],al
  41a1c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c8:	retf   
  41a1c9:	add    BYTE PTR [eax],al
  41a1cb:	xchg   esi,eax
  41a1cc:	retf   
  41a1cd:	add    BYTE PTR [eax],al
  41a1cf:	xchg   esi,eax
  41a1d0:	retf   
  41a1d1:	add    BYTE PTR [eax],al
  41a1d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d4:	retf   
  41a1d5:	add    BYTE PTR [eax],al
  41a1d7:	aas    
  41a1d8:	mov    eax,ds:0xa13f0000
  41a1dd:	add    BYTE PTR [eax],al
  41a1df:	aas    
  41a1e0:	mov    eax,ds:0xa13f0000
  41a1e5:	add    BYTE PTR [eax],al
  41a1e7:	aas    
  41a1e8:	mov    eax,ds:0xa13f0000
  41a1ed:	add    BYTE PTR [eax],al
  41a1ef:	aas    
  41a1f0:	mov    eax,ds:0xa13f0000
  41a1f5:	add    BYTE PTR [eax],al
  41a1f7:	aas    
  41a1f8:	mov    eax,ds:0xa13f0000
  41a1fd:	add    BYTE PTR [eax],al
  41a1ff:	aas    
  41a200:	mov    eax,ds:0xa13f0000
  41a205:	add    BYTE PTR [eax],al
  41a207:	aas    
  41a208:	mov    eax,ds:0xa13f0000
  41a20d:	add    BYTE PTR [eax],al
  41a20f:	aas    
  41a210:	mov    eax,ds:0x0
	...
  41a221:	add    BYTE PTR [edi],bh
  41a223:	mov    eax,ds:0xa13f0000
  41a228:	add    BYTE PTR [eax],al
  41a22a:	aas    
  41a22b:	mov    eax,ds:0xa13f0000
  41a230:	add    BYTE PTR [eax],al
  41a232:	aas    
  41a233:	mov    eax,ds:0xa13f0000
  41a238:	add    BYTE PTR [eax],al
  41a23a:	aas    
  41a23b:	mov    eax,ds:0xa13f0000
  41a240:	add    BYTE PTR [eax],al
  41a242:	aas    
  41a243:	mov    eax,ds:0xa13f0000
  41a248:	add    BYTE PTR [eax],al
  41a24a:	aas    
  41a24b:	mov    eax,ds:0xa13f0000
  41a250:	add    BYTE PTR [eax],al
  41a252:	aas    
  41a253:	mov    eax,ds:0xa13f0000
  41a258:	add    BYTE PTR [eax],al
  41a25a:	aas    
  41a25b:	mov    eax,ds:0xc83f0000
  41a260:	jmp    0xea09e168
  41a265:	add    edi,DWORD PTR [edi]
  41a267:	enter  0x3e9,0x3f
  41a26b:	enter  0x3e9,0x3f
  41a26f:	enter  0x3e9,0x3f
  41a273:	enter  0x3e9,0x3f
  41a277:	enter  0x3e9,0x3f
  41a27b:	enter  0x3e9,0x3f
  41a27f:	enter  0x3e9,0x3f
  41a283:	enter  0x3e9,0x0
	...
  41a293:	add    BYTE PTR [eax],al
  41a295:	aas    
  41a296:	enter  0x3e9,0x3f
  41a29a:	enter  0x3e9,0x3f
  41a29e:	enter  0x3e9,0x3f
  41a2a2:	enter  0x3e9,0x3f
  41a2a6:	enter  0x3e9,0x3f
  41a2aa:	enter  0x3e9,0x3f
  41a2ae:	enter  0x3e9,0x3f
  41a2b2:	enter  0x3e9,0x3f
  41a2b6:	enter  0x3e9,0x3f
  41a2ba:	enter  0x3e9,0x3f
  41a2be:	enter  0x3e9,0x3f
  41a2c2:	enter  0x3e9,0x3f
  41a2c6:	enter  0x3e9,0x3f
  41a2ca:	enter  0x3e9,0x3f
  41a2ce:	enter  0x3e9,0x3f
  41a2d2:	enter  0x3e9,0x3f
  41a2d6:	enter  0x3e9,0x3f
  41a2da:	enter  0x3e9,0x3f
  41a2de:	enter  0x3e9,0x3f
  41a2e2:	enter  0x3e9,0x3f
  41a2e6:	enter  0xe900,0x3c
  41a2ea:	enter  0xe900,0x3c
  41a2ee:	enter  0xe900,0x3c
  41a2f2:	enter  0xe800,0x59
  41a2f6:	or     DWORD PTR [eax+eiz*2+0x0],esp
	...
  41a306:	add    BYTE PTR [eax],al
  41a308:	fld    DWORD PTR [ecx+0x52404fec]
  41a30e:	cdq    
  41a30f:	mov    edi,0x7010d7b0
  41a314:	mov    eax,ds:0x21e8ec81
  41a319:	or     DWORD PTR [ecx+ebp*2+0x3c],esp
  41a31d:	or     BYTE PTR [ecx],al
  41a31f:	leave  
  41a320:	cmp    al,0xb8
  41a322:	add    cl,dh
  41a324:	cmp    al,0xcc
  41a326:	add    bl,ch
  41a328:	cmp    al,0x95
  41a32a:	cld    
  41a32b:	jmp    0xe942eb6c
  41a330:	cmp    al,0x8
  41a332:	add    ecx,ebp
  41a334:	cmp    al,0xe8
  41a336:	add    cl,ch
  41a338:	cmp    al,0xb8
  41a33a:	add    cl,ch
  41a33c:	cmp    al,0xc0
  41a33e:	add    cl,ch
  41a340:	cmp    al,0xcc
  41a342:	add    cl,ch
  41a344:	cmp    al,0xca
  41a346:	add    cl,ch
  41a348:	cmp    al,0x95
  41a34a:	cld    
  41a34b:	jmp    0xe9426b0c
  41a350:	cld    
  41a351:	xchg   esp,eax
  41a352:	cld    
  41a353:	jmp    0xe9426b74
  41a358:	in     al,dx
  41a359:	xchg   esp,eax
  41a35a:	cld    
  41a35b:	jmp    0xe9426b94
  41a360:	inc    eax
  41a361:	enter  0xe900,0x3a
  41a365:	enter  0xe900,0x3d
  41a369:	enter  0x6900,0x0
	...
  41a379:	add    BYTE PTR [eax],al
  41a37b:	cmp    ecx,eax
  41a37d:	add    BYTE PTR [eax],al
  41a37f:	data16 int3 
  41a381:	add    BYTE PTR [eax],al
  41a383:	xchg   al,cl
  41a385:	add    BYTE PTR [eax],al
  41a387:	xchg   al,cl
  41a389:	add    BYTE PTR [eax],al
  41a38b:	sahf   
  41a38c:	enter  0x0,0xaa
  41a390:	enter  0x0,0xa4
  41a394:	enter  0x0,0x97
  41a398:	enter  0x0,0x2e
  41a39c:	mov    esp,0x985e2028
  41a3a1:	add    al,0x0
  41a3a3:	aas    
  41a3a4:	mov    ecx,0x998f2123
  41a3a9:	add    eax,DWORD PTR [ecx]
  41a3ab:	ins    BYTE PTR es:[edi],dx
  41a3ac:	mov    edx,0x9e3c2226
  41a3b1:	or     al,BYTE PTR [edx]
  41a3b3:	pop    ebp
  41a3b4:	mov    ebx,0xae702329
  41a3b9:	sub    ah,BYTE PTR [esi]
  41a3bb:	push   eax
  41a3bc:	mov    cs,WORD PTR [esi]
  41a3be:	push   es
  41a3bf:	add    edi,DWORD PTR [ebx-0x64ecdad9]
  41a3c5:	pop    es
  41a3c6:	add    eax,0x242cbbf2
  41a3cb:	repnz fwait
  41a3cd:	or     BYTE PTR [edi*1+0x2703099d],al
  41a3d4:	into   
  41a3d5:	add    al,0x6
  41a3d7:	push   ds
  41a3d8:	(bad)  
  41a3d9:	or     al,0xe
  41a3db:	loope  0x41a373
  41a3dd:	adc    DWORD PTR ds:0x0,edx
	...
  41a3eb:	add    BYTE PTR [eax],al
  41a3ed:	add    BYTE PTR [ecx],bl
  41a3ef:	(bad)  
  41a3f0:	sbb    DWORD PTR [ebx+eiz*8],ebx
  41a3f3:	xchg   edi,eax
  41a3f4:	or     dl,BYTE PTR [edi]
  41a3f6:	(bad)  
  41a3f7:	retf   
  41a3f8:	(bad)  
  41a3f9:	sbb    al,BYTE PTR [eax]
  41a3fb:	retf   
  41a3fc:	adc    al,0x9
  41a3fe:	fcomp  DWORD PTR [ebp-0x3ec0fcf7]
  41a404:	or     eax,0xf5973f06
  41a409:	or     edi,DWORD PTR [esi]
  41a40b:	mov    DWORD PTR ds:0x1a7b631e,edx
  41a411:	sbb    ebx,DWORD PTR [eax+0x4f]
  41a414:	sub    al,0x20
  41a416:	pop    eax
  41a417:	xchg   BYTE PTR [eax],dl
  41a419:	es push 0x662b1480
  41a41f:	mov    al,0x25
  41a421:	sbb    al,0x30
  41a423:	mov    eax,ds:0xa13fff04
  41a428:	add    BYTE PTR [eax],al
  41a42a:	aas    
  41a42b:	mov    eax,ds:0xa578ff00
  41a430:	add    al,0xff
  41a432:	aas    
  41a433:	lods   eax,DWORD PTR ds:[esi]
  41a434:	add    bh,bh
  41a436:	aas    
  41a437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a438:	add    al,0xff
  41a43a:	pusha  
  41a43b:	lods   eax,DWORD PTR ds:[esi]
  41a43c:	add    BYTE PTR [eax],al
  41a43e:	aas    
  41a43f:	mov    eax,ds:0xa150ff00
  41a444:	add    al,0x0
  41a446:	aas    
  41a447:	mov    eax,ds:0xad3fff04
  41a44c:	add    al,0xff
  41a44e:	aas    
  41a44f:	mov    eax,ds:0x4
	...
  41a460:	add    BYTE PTR [edi],bh
  41a462:	lods   eax,DWORD PTR ds:[esi]
  41a463:	add    al,0x0
  41a465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a467:	add    bh,bh
  41a469:	aas    
  41a46a:	mov    eax,ds:0xa53e0000
  41a46f:	add    BYTE PTR [eax],al
  41a471:	aas    
  41a472:	lods   eax,DWORD PTR ds:[esi]
  41a473:	add    al,0x0
  41a475:	aas    
  41a476:	mov    eax,ds:0xa13e0004
  41a47b:	add    al,0x0
  41a47d:	mov    eax,ds:0xa0f0ff04
  41a483:	add    al,0xff
  41a485:	call   0x4040a52a
  41a48a:	mov    eax,ds:0xc83fff00
  41a48f:	in     eax,dx
  41a490:	pop    es
  41a491:	aas    
  41a492:	leave  
  41a493:	in     eax,0x3
  41a495:	enter  0xee92,0x3
  41a499:	aas    
  41a49a:	leave  
  41a49b:	in     eax,0x3
  41a49d:	aas    
  41a49e:	leave  
  41a49f:	in     eax,dx
  41a4a0:	add    esi,DWORD PTR [eax+0x3f03ea92]
  41a4a6:	enter  0x7ed,0x3f
  41a4aa:	enter  0x7e5,0x98
  41a4ae:	xchg   edx,eax
  41a4af:	jmp    0x8803:0xe9c93f03
  41a4b6:	xchg   edx,eax
  41a4b7:	out    dx,al
  41a4b8:	pop    es
  41a4b9:	add    bh,0xe5
  41a4bc:	add    edi,DWORD PTR [edi]
  41a4be:	enter  0x3e9,0x70
  41a4c2:	(bad)  
  41a4c3:	jmp    0x41a4cf
	...
  41a4d4:	push   0x3f03e9c7
  41a4d9:	leave  
  41a4da:	jmp    0xea0ae3e2
  41a4df:	pop    es
  41a4e0:	aas    
  41a4e1:	enter  0x3e5,0x48
  41a4e5:	(bad)  
  41a4e6:	jmp    0xead3e4ee
  41a4eb:	pop    es
  41a4ec:	cmp    BYTE PTR [edx-0x38c0fc12],dl
  41a4f2:	jmp    0xee09e3fe
  41a4f7:	add    edi,DWORD PTR [edi]
  41a4f9:	enter  0x7e5,0x3f
  41a4fd:	(bad)  
  41a4fe:	in     eax,dx
  41a4ff:	pop    es
  41a500:	adc    BYTE PTR [edx-0x36f7f81a],dl
  41a506:	in     eax,dx
  41a507:	add    eax,DWORD PTR [eax]
  41a509:	xchg   edx,eax
  41a50a:	jmp    0x3f07:0xedc8f803
  41a511:	(bad)  
  41a512:	in     eax,0x3
  41a514:	aas    
  41a515:	mov    DWORD PTR [eax],0xc838ed
  41a51b:	in     eax,0x40
  41a51d:	xchg   ecx,eax
  41a51e:	cld    
  41a51f:	jmp    0xe543365c
  41a524:	inc    eax
  41a525:	enter  0xe900,0x38
  41a529:	enter  0xe901,0x40
  41a52d:	enter  0xe901,0x3c
  41a531:	enter  0xe500,0x3c
  41a535:	xchg   ecx,eax
  41a536:	cld    
  41a537:	jmp    0x41a53c
	...
  41a544:	add    BYTE PTR [eax],al
  41a546:	add    BYTE PTR [eax],bh
  41a548:	xchg   ecx,eax
  41a549:	cld    
  41a54a:	jmp    0xed426d8b
  41a54f:	cmp    al,0x91
  41a551:	add    DWORD PTR [ecx],ecx
  41a553:	ret    
  41a554:	mov    eax,0xc8bce980
  41a559:	sub    cl,0xbc
  41a55c:	enter  0x900,0xbb
  41a560:	mov    eax,0xb83ce900
  41a565:	add    BYTE PTR [ecx],cl
  41a567:	cmp    ecx,eax
  41a569:	add    BYTE PTR [ecx],cl
  41a56b:	inc    ebx
  41a56c:	mov    eax,0xc8bcc980
  41a571:	or     cl,0x3c
  41a574:	enter  0xc980,0xbc
  41a578:	mov    eax,0xb7bce980
  41a57d:	sub    cl,0x3c
  41a580:	enter  0xe980,0xbc
  41a584:	mov    DWORD PTR [eax+0xb83ce9],0xc83cc9
  41a58e:	or     DWORD PTR [ebx],edi
  41a590:	mov    eax,0xb7bce980
  41a595:	add    BYTE PTR [ecx],cl
  41a597:	cmp    edi,DWORD PTR [eax-0x383cf700]
  41a59d:	add    BYTE PTR [eax],0xe6
  41a5a0:	les    eax,FWORD PTR [eax]
  41a5a2:	add    dh,dl
  41a5a4:	les    eax,FWORD PTR [eax]
  41a5a6:	adc    dh,0x44
  41a5a9:	add    DWORD PTR [eax],eax
	...
  41a5b7:	add    BYTE PTR [eax],al
  41a5b9:	add    BYTE PTR [esi+0x4c],al
  41a5bc:	adc    DWORD PTR [eax],eax
  41a5be:	out    0xc4,al
  41a5c0:	adc    BYTE PTR [eax+0x10c4f6],al
  41a5c6:	test   ah,0x0
  41a5c9:	and    BYTE PTR [esi-0x59ffff3c],0x44
  41a5d0:	adc    DWORD PTR [eax],eax
  41a5d2:	jbe    0x41a618
  41a5d4:	add    DWORD PTR [eax],eax
  41a5d6:	xchg   esi,eax
  41a5d7:	inc    esp
  41a5d8:	adc    DWORD PTR [eax-0x7fef3b5a],eax
  41a5de:	inc    esi
  41a5df:	dec    esp
  41a5e0:	add    DWORD PTR [eax],eax
  41a5e2:	xchg   esi,eax
  41a5e3:	les    eax,FWORD PTR [eax]
  41a5e5:	add    BYTE PTR [esi],dh
  41a5e7:	dec    esp
  41a5e8:	adc    DWORD PTR [eax],eax
  41a5ea:	inc    esi
  41a5eb:	int3   
  41a5ec:	adc    BYTE PTR [eax+0x10c466],al
  41a5f2:	ss dec esp
  41a5f4:	add    DWORD PTR [eax-0x7fef3baa],eax
  41a5fa:	inc    sp
  41a5fc:	adc    DWORD PTR [eax+0x14466],eax
  41a602:	push   esi
  41a603:	les    edx,FWORD PTR [eax]
  41a605:	adc    BYTE PTR [esi+0x44],0x1
  41a609:	add    BYTE PTR [esi],0xcc
  41a60c:	add    BYTE PTR [eax],al
  41a60e:	push   es
  41a60f:	dec    esp
  41a610:	adc    DWORD PTR [eax+0x114bf6],eax
  41a616:	test   bl,0x0
  41a619:	add    BYTE PTR [esi],ah
  41a61b:	dec    esp
  41a61c:	add    DWORD PTR [eax],eax
	...
  41a62a:	add    BYTE PTR [eax],al
  41a62c:	add    BYTE PTR [esi],ah
  41a62e:	int3   
  41a62f:	add    BYTE PTR [eax+0x14436],al
  41a635:	aas    
  41a636:	mov    eax,ds:0xa1bf1080
  41a63b:	add    BYTE PTR [eax],dl
  41a63d:	aas    
  41a63e:	rol    DWORD PTR [eax+eax*1],0xbf
  41a642:	rol    DWORD PTR [eax+edx*1],0x3f
  41a646:	rol    DWORD PTR [eax+eax*1+0x4c1bf],0xbf
  41a64e:	add    DWORD PTR [eax],0x80a13f10
  41a654:	adc    BYTE PTR [edi],bh
  41a656:	mov    eax,ds:0xa13f0000
  41a65b:	add    BYTE PTR [eax],0xbf
  41a65e:	add    DWORD PTR [eax+0xa13f00],0x81bf00
  41a668:	adc    BYTE PTR [edi-0x40ef7f7f],bh
  41a66e:	mov    eax,ds:0x993f1080
  41a673:	add    al,BYTE PTR [eax]
  41a675:	aas    
  41a676:	mov    eax,ds:0xa1470202
  41a67b:	add    BYTE PTR [eax],al
  41a67d:	aas    
  41a67e:	cdq    
  41a67f:	add    BYTE PTR [edx],al
  41a681:	aaa    
  41a682:	mov    eax,ds:0xa1370002
  41a687:	add    BYTE PTR [eax],al
  41a689:	aas    
  41a68a:	test   eax,0xa13f0202
  41a68f:	add    al,BYTE PTR [eax]
	...
  41a69d:	add    BYTE PTR [eax],al
  41a69f:	add    BYTE PTR [edi],dh
  41a6a1:	cdq    
  41a6a2:	add    BYTE PTR [edx],al
  41a6a4:	aas    
  41a6a5:	test   eax,0xa9470000
  41a6aa:	add    BYTE PTR [eax],al
  41a6ac:	inc    edi
  41a6ad:	mov    eax,ds:0x993f0200
  41a6b2:	add    al,BYTE PTR [edx]
  41a6b4:	aaa    
  41a6b5:	test   eax,0xa13f0200
  41a6ba:	add    BYTE PTR [edx],al
  41a6bc:	inc    edi
  41a6bd:	enter  0x5f1,0x3f
  41a6c1:	enter  0x3e9,0x3f
  41a6c5:	shl    cl,0x3
  41a6c8:	aas    
  41a6c9:	enter  0x5e9,0x3d
  41a6cd:	shr    cl,0x5
  41a6d0:	aas    
  41a6d1:	enter  0x5e9,0x3d
  41a6d5:	enter  0x3e9,0x3d
  41a6d9:	shl    cl,0x3
  41a6dc:	cmp    eax,0x3d05f1c0
  41a6e1:	enter  0x5f1,0x3f
  41a6e5:	shr    cl,0x5
  41a6e8:	cmp    eax,0x3d03e9c8
  41a6ed:	enter  0x5f1,0x3f
  41a6f1:	shl    cl,0x3
  41a6f4:	aas    
  41a6f5:	enter  0x5e1,0x3d
  41a6f9:	shr    cl,0x5
  41a6fc:	aas    
  41a6fd:	enter  0x3e9,0x3f
  41a701:	shr    cl,0x5
	...
  41a710:	add    BYTE PTR [eax],al
  41a712:	add    BYTE PTR ds:0x3f03e9c0,bh
  41a718:	shl    cl,0x3
  41a71b:	cmp    eax,0x3f05f1c8
  41a720:	enter  0x3e9,0x3d
  41a724:	enter  0x5e9,0x3d
  41a728:	shr    cl,0x5
  41a72b:	aas    
  41a72c:	shr    cl,0x3
  41a72f:	aas    
  41a730:	enter  0x5e9,0x3f
  41a734:	enter  0x3e1,0x3d
  41a738:	enter  0x5e1,0x3d
  41a73c:	shr    cl,0x5
  41a73f:	aas    
  41a740:	shl    cl,0x3
  41a743:	aas    
  41a744:	rol    BYTE PTR [eax],0xe9
  41a747:	inc    edx
  41a748:	enter  0xe900,0x3c
  41a74c:	enter  0xf100,0x3c
  41a750:	retf   0xf108
  41a753:	cmp    cl,al
  41a755:	or     cl,ch
  41a757:	cmp    al,0xca
  41a759:	add    cl,ch
  41a75b:	cmp    al,0xc8
  41a75d:	or     cl,dh
  41a75f:	inc    edx
  41a760:	retf   0xf108
  41a763:	cmp    al,0xc8
  41a765:	add    cl,ah
  41a767:	inc    edx
  41a768:	retf   0xe900
  41a76b:	cmp    cl,dl
  41a76d:	add    cl,dh
  41a76f:	cmp    al,0xc8
  41a771:	or     cl,ch
  41a773:	cmp    al,0xca
  41a775:	or     cl,ah
	...
  41a783:	add    BYTE PTR [eax],al
  41a785:	add    BYTE PTR [edx-0x38],al
  41a788:	or     cl,ah
  41a78a:	cmp    cl,al
  41a78c:	add    cl,ch
  41a78e:	cmp    al,0xca
  41a790:	or     cl,dh
  41a792:	cmp    cl,dl
  41a794:	add    cl,ah
  41a796:	cmp    al,0xc8
  41a798:	add    cl,ah
  41a79a:	cmp    al,0xca
  41a79c:	or     cl,ch
  41a79e:	inc    edx
  41a79f:	retf   0xe800
  41a7a2:	pop    esp
  41a7a3:	dec    eax
  41a7a4:	add    DWORD PTR [eax+0x1c],ebp
  41a7a7:	enter  0x6800,0x1c
  41a7ab:	enter  0x6900,0x3c
  41a7af:	enter  0x6900,0x1c
  41a7b3:	dec    eax
  41a7b4:	add    DWORD PTR [eax+0x3c],ebp
  41a7b7:	dec    eax
  41a7b8:	add    eax,ebp
  41a7ba:	cmp    al,0x48
  41a7bc:	add    eax,ebp
  41a7be:	sbb    al,0xc8
  41a7c0:	add    cl,ch
  41a7c2:	cmp    al,0xc8
  41a7c4:	add    cl,ch
  41a7c6:	pop    esp
  41a7c7:	dec    eax
  41a7c8:	add    ecx,ebp
  41a7ca:	pop    esp
  41a7cb:	dec    eax
  41a7cc:	add    DWORD PTR [eax],eax
  41a7ce:	xchg   edi,eax
  41a7cf:	jmp    0xc9d8a854
  41a7d4:	add    BYTE PTR [eax],al
  41a7d6:	es leave 
  41a7d8:	add    BYTE PTR [eax],al
  41a7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7db:	leave  
  41a7dc:	add    BYTE PTR [eax],0x17
  41a7df:	leave  
  41a7e0:	add    BYTE PTR [eax],0x17
  41a7e3:	leave  
  41a7e4:	add    BYTE PTR [eax],al
  41a7e6:	out    0xe8,al
	...
  41a7f8:	add    dh,ah
  41a7fa:	enter  0x80,0xd7
  41a7fe:	call   0xc497a883
  41a803:	add    BYTE PTR [eax],al
  41a805:	out    0xc8,al
  41a807:	add    BYTE PTR [eax],0xe7
  41a80a:	call   0xe497a80f
  41a80f:	add    BYTE PTR [eax],al
  41a811:	push   edi
  41a812:	les    eax,FWORD PTR [eax+0xc8a700]
  41a818:	add    BYTE PTR [esi],ah
  41a81a:	in     al,0x0
  41a81c:	add    BYTE PTR [esi],dl
  41a81e:	les    eax,FWORD PTR [eax+0xe89600]
  41a824:	add    BYTE PTR [esi],ah
  41a826:	in     al,0x80
  41a828:	add    BYTE PTR [edi],ah
  41a82a:	in     al,0x80
  41a82c:	add    BYTE PTR [edi],dl
  41a82e:	les    eax,FWORD PTR [eax]
  41a830:	add    BYTE PTR [esi],dl
  41a832:	les    eax,FWORD PTR [eax-0x7f379900]
  41a838:	add    BYTE PTR [esi-0x18],ah
  41a83b:	add    BYTE PTR [eax],0xd7
  41a83e:	jecxz  0x41a7c0
  41a840:	add    bh,dl
  41a842:	ret    
  41a843:	add    BYTE PTR [eax],al
  41a845:	enterw 0x0,0x66
  41a84a:	enter  0x0,0x56
  41a84e:	call   0xe417a8d3
  41a853:	add    BYTE PTR [eax],al
  41a855:	aas    
  41a856:	and    DWORD PTR ds:0x5203f80,eax
  41a85c:	add    BYTE PTR [eax],0x0
	...
  41a86b:	add    BYTE PTR [edi],bh
  41a86d:	mov    al,ds:0xa03f0000
  41a872:	and    BYTE PTR [eax+0x25203f],al
  41a878:	aas    
  41a879:	and    BYTE PTR ds:0x213f00,ah
  41a87f:	add    BYTE PTR [edi],bh
  41a881:	and    BYTE PTR [eax],ah
  41a883:	cmp    BYTE PTR [edi],0x20
  41a886:	add    BYTE PTR [eax],al
  41a888:	aas    
  41a889:	mov    al,ds:0xa13f0000
  41a88e:	and    BYTE PTR [eax],al
  41a890:	aas    
  41a891:	mov    al,ds:0xa03f8000
  41a896:	and    BYTE PTR [eax],al
  41a898:	aas    
  41a899:	and    DWORD PTR [eax],esp
  41a89b:	cmp    BYTE PTR [edi],0x20
  41a89e:	add    BYTE PTR [eax+0x20a03f],al
  41a8a4:	aas    
  41a8a5:	and    DWORD PTR [eax],esp
  41a8a7:	add    BYTE PTR [edi],bh
  41a8a9:	mov    eax,ds:0xa03f8000
  41a8ae:	and    BYTE PTR [eax+0x213f],al
  41a8b4:	aas    
  41a8b5:	mov    eax,ds:0xa13f8000
  41a8ba:	and    BYTE PTR [eax],al
  41a8bc:	aas    
  41a8bd:	and    DWORD PTR [eax],esp
  41a8bf:	cmp    BYTE PTR [edi],0xa1
  41a8c2:	(bad)  
  41a8c3:	(bad)  
  41a8c4:	aas    
  41a8c5:	mov    eax,ds:0xa13d07ff
  41a8ca:	add    BYTE PTR [eax],cl
  41a8cc:	cmp    eax,0xffffa1
	...
  41a8dd:	add    BYTE PTR [eax],al
  41a8df:	std    
  41a8e0:	mov    al,ds:0xa13f0800
  41a8e5:	(bad)  
  41a8e6:	(bad)  
  41a8e7:	aas    
  41a8e8:	mov    eax,ds:0xc7ff0000
  41a8ed:	jmp    0xea07dff5
  41a8f2:	add    al,BYTE PTR [edi+0x8]
  41a8f5:	jmp    0x3f02:0xe9c84703
  41a8fc:	(bad)  
  41a8fd:	jmp    0xea49e004
  41a902:	add    bh,BYTE PTR [edi]
  41a904:	push   es
  41a905:	jmp    0x3702:0xea064703
  41a90c:	enter  0x3e9,0x3f
  41a910:	or     dl,ch
  41a912:	add    edi,DWORD PTR [edi]
  41a914:	(bad)  
  41a915:	jmp    0xea49f01d
  41a91a:	add    esi,DWORD PTR [edi]
  41a91c:	or     dl,ch
  41a91e:	add    edi,DWORD PTR [edi]
  41a920:	enter  0x4e9,0x3f
  41a924:	or     dl,ch
  41a926:	add    al,0x47
  41a928:	push   es
  41a929:	jmp    0x3f04:0xea063704
  41a930:	(bad)  
  41a931:	jmp    0xea47f039
  41a936:	add    al,0x3f
  41a938:	or     dl,ch
  41a93a:	add    edi,DWORD PTR [edi]
  41a93c:	enter  0x3e9,0x3f
  41a940:	push   es
  41a941:	jmp    0x0:0x4
	...
  41a950:	add    BYTE PTR [eax],al
  41a952:	inc    edi
  41a953:	(bad)  
  41a954:	jmp    0xea07e85c
  41a959:	add    edi,DWORD PTR [edi]
  41a95b:	push   es
  41a95c:	jmp    0x4703:0xe9c83704
  41a963:	enter  0x4e9,0x3f
  41a967:	push   es
  41a968:	jmp    0x3f03:0xe9c83f04
  41a96f:	(bad)  
  41a970:	jmp    0x149e878
  41a975:	jmp    0xe94069b6
  41a97a:	inc    ebx
  41a97b:	enter  0xe93e,0x3b
  41a97f:	rol    BYTE PTR [eax-0x17],0x43
  41a983:	enter  0xe8fe,0x3c
  41a987:	enter  0xe940,0x3c
  41a98b:	sar    BYTE PTR [esi],0xe9
  41a98e:	cmp    eax,eax
  41a990:	(bad)  
  41a991:	call   0xe98269d9
  41a996:	cmp    ecx,eax
  41a998:	add    cl,ch
  41a99a:	cmp    al,0xc8
  41a99c:	(bad)  
  41a99d:	call   0xe98069de
  41a9a2:	inc    ebx
  41a9a3:	sar    BYTE PTR [esi],0xe9
  41a9a6:	cmp    eax,eax
  41a9a8:	add    cl,ch
  41a9aa:	cmp    al,0xc8
  41a9ac:	ds jmp 0xe98069ed
  41a9b2:	cmp    al,0xc0
  41a9b4:	(bad)  
  41a9b5:	call   0x41a9ba
	...
  41a9c2:	add    BYTE PTR [eax],al
  41a9c4:	add    BYTE PTR [eax+ecx*8],bh
  41a9c7:	add    cl,ch
  41a9c9:	cmp    al,0xc0
  41a9cb:	inc    eax
  41a9cc:	jmp    0xe980720d
  41a9d1:	inc    ebx
  41a9d2:	rol    BYTE PTR [eax],0xe9
  41a9d5:	cmp    ecx,eax
  41a9d7:	(bad)  
  41a9d8:	call   0xe9827220
  41a9dd:	cmp    al,0xc0
  41a9df:	add    cl,ch
  41a9e1:	cmp    al,0xc8
  41a9e3:	add    cl,ch
  41a9e5:	cmp    al,0xc0
  41a9e7:	inc    eax
  41a9e8:	jmp    0xe9406a30
  41a9ed:	cmp    ecx,eax
  41a9ef:	inc    eax
  41a9f0:	stc    
  41a9f1:	cmp    al,0xc8
  41a9f3:	and    cl,ch
  41a9f5:	cmp    al,0x8
  41a9f7:	and    ecx,ebp
  41a9f9:	jl     0x41a984
  41a9fb:	cld    
  41a9fc:	add    BYTE PTR [esi+0x66203c85],al
  41aa02:	lds    eax,FWORD PTR [eax+0x20]
  41aa05:	jbe    0x41a9cc
  41aa07:	add    BYTE PTR [eax],al
  41aa09:	test   WORD PTR [eax+eiz*1],di
  41aa0d:	push   esi
  41aa0e:	lds    eax,FWORD PTR [eax+0x0]
  41aa11:	es test esp,edi
  41aa14:	pop    ds
  41aa15:	test   DWORD PTR ss:[eax+eax*1],edi
  41aa19:	push   ss
  41aa1a:	lds    eax,FWORD PTR [eax+0x0]
  41aa1d:	push   es
  41aa1e:	lds    eax,FWORD PTR [eax]
  41aa20:	and    dh,dh
  41aa22:	les    eax,FWORD PTR [eax+0x0]
  41aa25:	es test esp,edi
  41aa28:	pop    ds
	...
  41aa35:	add    BYTE PTR [eax],al
  41aa37:	add    BYTE PTR [esi],dl
  41aa39:	lds    eax,FWORD PTR [eax]
  41aa3b:	and    BYTE PTR [esi],al
  41aa3d:	test   esp,edi
  41aa3f:	jmp    esi
  41aa41:	les    eax,FWORD PTR [eax]
  41aa43:	add    dh,dh
  41aa45:	les    eax,FWORD PTR [eax+0x0]
  41aa48:	out    0x84,al
  41aa4a:	cld    
  41aa4b:	pop    ds
  41aa4c:	(bad)  
  41aa4d:	test   ah,bh
  41aa4f:	jmp    esi
  41aa51:	test   BYTE PTR [eax+eax*1],bh
  41aa54:	test   BYTE PTR [esp+edi*8+0xc4e61f],0x0
  41aa5c:	mov    ah,0x40
  41aa5f:	and    BYTE PTR [esi-0x59dfbf3c],dh
  41aa65:	les    eax,FWORD PTR [eax]
  41aa67:	add    BYTE PTR [esi-0x69ffc37c],ah
  41aa6d:	test   BYTE PTR [eax+eiz*1],bh
  41aa70:	jbe    0x41a9f6
  41aa72:	cld    
  41aa73:	jmp    DWORD PTR [esi-0x69ffc37c]
  41aa79:	test   BYTE PTR [eax+eiz*1],bh
  41aa7c:	xchg   esi,eax
  41aa7d:	les    eax,FWORD PTR [eax]
  41aa7f:	and    BYTE PTR [esi-0x7c],ah
  41aa82:	cld    
  41aa83:	pop    ds
  41aa84:	aas    
  41aa85:	pop    DWORD PTR [eax]
  41aa87:	add    BYTE PTR [edi],bh
  41aa89:	pop    DWORD PTR [eax]
  41aa8b:	inc    eax
  41aa8c:	pop    ds
  41aa8d:	lahf   
  41aa8e:	sar    BYTE PTR [edi],0x3f
  41aa91:	outs   dx,DWORD PTR ds:[esi]
  41aa92:	sar    BYTE PTR [edi],0x1f
  41aa95:	lahf   
  41aa96:	add    BYTE PTR [eax+0x3f],al
  41aa99:	outs   dx,DWORD PTR ds:[esi]
  41aa9a:	sar    bh,0x0
	...
  41aaa9:	add    BYTE PTR [eax],al
  41aaab:	inc    eax
  41aaac:	mov    es,WORD PTR [eax]
  41aaae:	add    BYTE PTR [edi+0x71],bl
  41aab1:	add    BYTE PTR [eax+0x3f],al
  41aab4:	jno    0x41aa76
  41aab6:	dec    DWORD PTR [eax+0x71]
  41aab9:	add    BYTE PTR [eax],al
  41aabb:	pop    edi
  41aabc:	mov    eax,ds:0xa218ffc0
  41aac1:	add    BYTE PTR [eax],al
  41aac3:	pop    edi
  41aac4:	mov    eax,ds:0x715f3fc0
  41aac9:	sar    BYTE PTR [edi],0x3f
  41aacc:	jno    0x41aace
  41aace:	inc    eax
  41aacf:	pop    ds
  41aad0:	add    eax,0xc0713f3f
  41aad6:	aas    
  41aad7:	pop    ds
  41aad8:	jno    0x41aada
  41aada:	add    BYTE PTR [edi],bh
  41aadc:	mov    eax,ds:0xa11f4000
  41aae1:	add    BYTE PTR [eax],al
  41aae3:	aas    
  41aae4:	jno    0x41aaa6
  41aae6:	dec    eax
  41aae8:	jno    0x41aaea
  41aaea:	inc    eax
  41aaeb:	pop    ds
  41aaec:	add    eax,0xc0713f3f
  41aaf2:	push   DWORD PTR [eax+0x3f400081]
  41aaf8:	add    eax,0x7140ff
  41aafe:	add    BYTE PTR [edi],bh
  41ab00:	jno    0x41aac2
  41ab02:	aas    
  41ab03:	pop    edi
  41ab04:	jno    0x41ab06
  41ab06:	add    BYTE PTR [edi-0x5f],bl
  41ab09:	add    BYTE PTR [eax+0x3f],al
  41ab0c:	enter  0xc3f9,0x0
	...
  41ab1c:	add    BYTE PTR [eax],al
  41ab1e:	js     0x41ab07
  41ab20:	jmp    0xe809ca28
  41ab25:	add    ebx,DWORD PTR [edi]
  41ab27:	int3   
  41ab28:	out    0xb,eax
  41ab2a:	aas    
  41ab2b:	int3   
  41ab2c:	jmp    0xea09ea34
  41ab31:	or     edi,DWORD PTR [edi]
  41ab33:	enter  0xbe7,0x3f
  41ab37:	int3   
  41ab38:	out    0xb,eax
  41ab3a:	pop    ds
  41ab3b:	enter  0xbe9,0x5f
  41ab3f:	int3   
  41ab40:	out    0xb,eax
  41ab42:	pop    edi
  41ab43:	int3   
  41ab44:	jmp    0xea0a0a4c
  41ab49:	add    edi,DWORD PTR [edi]
  41ab4b:	enter  0x3e7,0x3f
  41ab4f:	int3   
  41ab50:	out    0x3,eax
  41ab52:	aas    
  41ab53:	enter  0x3e9,0x3f
  41ab57:	int3   
  41ab58:	out    0x3,eax
  41ab5a:	pop    edi
  41ab5b:	int3   
  41ab5c:	out    0xfb,eax
  41ab5e:	clc    
  41ab5f:	xchg   dl,ch
  41ab61:	sti    
  41ab62:	lock retf 0xfbe7
  41ab66:	dec    eax
  41ab67:	enter  0x3e7,0x1f
  41ab6b:	enter  0xfbe9,0xd8
  41ab6f:	retf   0x3e7
  41ab72:	aas    
  41ab73:	int3   
  41ab74:	jmp    0xea0dca7c
  41ab79:	sti    
  41ab7a:	and    ah,cl
  41ab7c:	out    0x3,eax
  41ab7e:	pop    edi
  41ab7f:	enter  0x3e9,0x0
	...
  41ab8f:	add    BYTE PTR [eax],al
  41ab91:	pop    edi
  41ab92:	int3   
  41ab93:	jmp    0xe8c85493
  41ab98:	sti    
  41ab99:	mov    al,ds:0x38fbe886
  41ab9e:	int3   
  41ab9f:	jmp    0x109dc9f
  41aba4:	jmp    0x41abe2
  41aba6:	enter  0xe900,0x3c
  41abaa:	enter  0xe904,0x74
  41abae:	out    0x0,al
  41abb0:	jmp    0xe94673f1
  41abb5:	fs out 0x0,al
  41abb8:	jmp    0xeb4253f9
  41abbd:	push   esp
  41abbe:	xchg   BYTE PTR [eax],al
  41abc0:	jmp    0x41ac16
  41abc2:	xchg   BYTE PTR [eax],al
  41abc4:	jmp    0x41ac02
  41abc6:	test   al,0x4
  41abc8:	jmp    0x41ac06
  41abca:	test   al,0x4
  41abcc:	jmp    0x41ac0a
  41abce:	enter  0xeb00,0x3c
  41abd2:	test   al,0x0
  41abd4:	jmp    0xe9467415
  41abd9:	and    al,0x86
  41abdb:	add    cl,ch
  41abdd:	cmp    al,0xa8
  41abdf:	add    cl,ch
  41abe1:	adc    al,0xe6
  41abe3:	add    al,0xeb
  41abe5:	add    al,0x86
  41abe7:	cld    
  41abe8:	jmp    0x41abee
  41abea:	out    0x0,al
  41abec:	jmp    0xeb4691e5
  41abf1:	hlt    
  41abf2:	test   esp,edi
  41abf4:	jmp    0x41abf6
	...
  41ac02:	add    BYTE PTR [eax],al
  41ac04:	cmp    al,0xc8
  41ac06:	add    al,0xeb
  41ac08:	in     al,0xe5
  41ac0a:	add    al,0xe9
  41ac0c:	cmp    al,0xa8
  41ac0e:	add    al,0xe9
  41ac10:	aam    0xe5
  41ac12:	add    cl,ch
  41ac14:	cmp    al,0xc8
  41ac16:	add    bl,ch
  41ac18:	cmp    al,0xc8
  41ac1a:	add    bl,ch
  41ac1c:	mov    ah,0xe5
  41ac1e:	add    al,0xe9
  41ac20:	cmp    al,0xc8
  41ac22:	add    bl,ch
  41ac24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac25:	in     eax,0x0
  41ac27:	jmp    0x465468
  41ac2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac2d:	cmp    esp,0xc9a4ff
  41ac33:	add    al,0x96
  41ac35:	cmp    esp,0xfc819603
  41ac3b:	jmp    DWORD PTR [ecx+ecx*8+0x20]
  41ac3f:	add    BYTE PTR [esi+0x560ffc79],ah
  41ac45:	jns    0x41ac43
  41ac47:	call   DWORD PTR [esi-0x37]
  41ac4a:	add    al,0x0
  41ac4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac4d:	jns    0x41ac4f
  41ac4f:	adc    BYTE PTR [esi-0x37],ah
  41ac52:	add    BYTE PTR [eax],dl
  41ac54:	xchg   esi,eax
  41ac55:	jns    0x41ac53
  41ac57:	setbe  cl
  41ac5a:	add    BYTE PTR [eax],al
  41ac5c:	es leave 
  41ac5e:	add    BYTE PTR [eax],dl
  41ac60:	out    0xc8,al
  41ac62:	add    al,0x0
  41ac64:	push   ss
  41ac65:	leave  
  41ac66:	add    al,0x10
	...
  41ac74:	add    BYTE PTR [eax],al
  41ac76:	add    dh,dl
  41ac78:	js     0x41ac7a
  41ac7a:	adc    BYTE PTR [esi],ah
  41ac7c:	jns    0x41ac7e
  41ac7e:	add    BYTE PTR [esi],ah
  41ac80:	jns    0x41ac82
  41ac82:	adc    dh,dl
  41ac84:	js     0x41ac86
  41ac86:	add    BYTE PTR [esi],dl
  41ac88:	jns    0x41ac86
  41ac8a:	jmp    DWORD PTR [esi]
  41ac8c:	int3   
  41ac8d:	add    BYTE PTR [eax],al
  41ac8f:	out    0xc8,al
  41ac91:	add    al,0x10
  41ac93:	push   ss
  41ac94:	int3   
  41ac95:	add    BYTE PTR [eax],dl
  41ac97:	(bad)  
  41ac98:	js     0x41ac96
  41ac9a:	(bad)  
  41ac9c:	jl     0x41ac9a
  41ac9e:	jmp    esi
  41aca0:	js     0x41aca2
  41aca2:	add    BYTE PTR [esi],dl
  41aca4:	int3   
  41aca5:	add    al,0x0
  41aca7:	push   ss
  41aca8:	int3   
  41aca9:	add    al,0x10
  41acab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acac:	js     0x41acae
  41acae:	adc    BYTE PTR [esi+0x7c],ah
  41acb1:	cld    
  41acb2:	(bad)  
  41acb3:	aas    
  41acb4:	outs   dx,DWORD PTR ds:[esi]
  41acb5:	add    BYTE PTR [eax],al
  41acb7:	aas    
  41acb8:	outs   dx,DWORD PTR ds:[esi]
  41acb9:	add    BYTE PTR [eax],al
  41acbb:	aas    
  41acbc:	scas   eax,DWORD PTR es:[edi]
  41acbd:	add    al,0x4
  41acbf:	das    
  41acc0:	scas   eax,DWORD PTR es:[edi]
  41acc1:	add    al,0x0
  41acc3:	das    
  41acc4:	outs   dx,DWORD PTR ds:[esi]
  41acc5:	lock push DWORD PTR [eax]
  41acc8:	scas   eax,DWORD PTR es:[edi]
  41acc9:	hlt    
  41acca:	add    edi,DWORD PTR [edi]
  41accc:	outs   dx,DWORD PTR ds:[esi]
  41accd:	add    BYTE PTR [edi+edi*1],al
  41acd0:	das    
  41acd1:	lock add edi,DWORD PTR [edi]
  41acd4:	outs   dx,DWORD PTR ds:[esi]
  41acd5:	add    BYTE PTR [edi+edi*1],al
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	lock add eax,DWORD PTR [eax]
	...
  41ace8:	add    BYTE PTR [eax],al
  41acea:	das    
  41aceb:	outs   dx,DWORD PTR ds:[esi]
  41acec:	lock call DWORD PTR [eax+0x2e]
  41acf0:	add    BYTE PTR [eax],al
  41acf2:	aas    
  41acf3:	das    
  41acf4:	add    BYTE PTR [edi+ebp*1],al
  41acf7:	outs   dx,DWORD PTR ds:[esi]
  41acf8:	lock (bad) 
  41acfa:	cmp    BYTE PTR [edx],dh
  41acfc:	lock add edi,DWORD PTR [edi]
  41acff:	jno    0x41acf1
  41ad01:	(bad)  
  41ad02:	cmp    BYTE PTR [ecx],dh
  41ad04:	add    BYTE PTR [eax],al
  41ad06:	aas    
  41ad07:	xor    DWORD PTR [eax],eax
  41ad09:	add    BYTE PTR [edi],ch
  41ad0b:	jno    0x41ad0d
  41ad0d:	add    al,0x2f
  41ad0f:	xor    DWORD PTR [eax],eax
  41ad11:	add    al,0x2f
  41ad13:	jno    0x41ad15
  41ad15:	add    BYTE PTR [edi],ch
  41ad17:	jno    0x41ad19
  41ad19:	add    al,0x3f
  41ad1b:	mov    cl,0xf4
  41ad1d:	inc    DWORD PTR [eax+0x71]
  41ad20:	add    BYTE PTR [eax],al
  41ad22:	aas    
  41ad23:	mov    cl,0xf4
  41ad25:	add    ecx,DWORD PTR [edi-0x4f]
  41ad28:	add    al,0x4
  41ad2a:	aas    
  41ad2b:	mov    cl,0x4
  41ad2d:	add    BYTE PTR [edi],ch
  41ad2f:	jno    0x41ad31
  41ad31:	add    al,0x2f
  41ad33:	jno    0x41ad25
  41ad35:	push   DWORD PTR [eax]
  41ad37:	mov    cl,0xf4
  41ad39:	dec    DWORD PTR [eax-0x38]
  41ad3c:	jmp    0x2a09ec44
  41ad41:	hlt    
  41ad42:	cmp    al,0xd8
  41ad44:	jmp    0xea09ea3c
  41ad49:	repz cmp al,0xc8
  41ad4c:	sub    esp,esi
	...
  41ad5a:	add    BYTE PTR [eax],al
  41ad5c:	add    BYTE PTR [eax-0x770bd57d],dl
  41ad62:	sub    DWORD PTR [edx],0x4
  41ad65:	cmp    ecx,eax
  41ad67:	jmp    0xea19ec6f
  41ad6c:	repz cmp al,0xd8
  41ad6f:	jns    0x41ad42
  41ad71:	imul   eax,DWORD PTR [ebx-0x37c0fc16],0xc83f03e9
  41ad7b:	add    DWORD PTR [edi-0x7c1d7cb0],eax
  41ad81:	dec    eax
  41ad82:	or     esi,0xffffffd0
  41ad85:	inc    ecx
  41ad86:	sub    edx,0x3
  41ad89:	aas    
  41ad8a:	enter  0x3e9,0x3f
  41ad8e:	enter  0x865f,0x28
  41ad92:	add    DWORD PTR [esi],0xffffff83
  41ad95:	and    BYTE PTR [ebx-0x7ce62f96],al
  41ad9b:	jmp    0x3f03:0xe9c83f03
  41ada2:	enter  0x8619,0x0
  41ada6:	and    edx,0xffffff82
  41ada9:	clc    
  41adaa:	xor    BYTE PTR [edx-0x31],0xf1
  41adae:	sub    dl,0x3
  41adb1:	aas    
  41adb2:	enter  0x3e9,0x3f
  41adb6:	enter  0x8675,0xd8
  41adba:	sbb    dl,0x84
  41adbd:	rol    BYTE PTR [edx+0xcf82],1
	...
  41adcf:	add    cl,cl
  41add1:	add    BYTE PTR [ecx],0xe9
  41add4:	cmp    al,0xc8
  41add6:	add    cl,ch
  41add8:	cmp    al,0xc8
  41adda:	add    BYTE PTR [ebp+0x29fc82b9],dh
  41ade0:	ret    0xfc82
  41ade3:	lods   eax,DWORD PTR ds:[esi]
  41ade4:	jo     0x41ad67
  41ade6:	cld    
  41ade7:	jmp    0xe9427628
  41adec:	cmp    al,0xc8
  41adee:	add    bh,bl
  41adf0:	rol    DWORD PTR [edx-0x7d45da04],0xfc
  41adf7:	mov    DWORD PTR [eax+0x3ce9fc81],ecx
  41adfd:	enter  0xe900,0x3c
  41ae01:	enter  0x7700,0xb8
  41ae05:	cmp    ah,0xc1
  41ae08:	ret    
  41ae09:	cmp    ah,0xf5
  41ae0c:	mov    esp,0x3ce9fc82
  41ae11:	enter  0xe900,0x3c
  41ae15:	enter  0x1b00,0xc0
  41ae19:	cmp    esp,0xfc81ba7d
  41ae1f:	jmp    0xe9427660
  41ae24:	cmp    al,0xc8
  41ae26:	add    cl,ch
  41ae28:	cmp    al,0xc8
  41ae2a:	add    cl,ch
  41ae2c:	cmp    al,0xc8
  41ae2e:	add    cl,ch
  41ae30:	cmp    al,0xc8
  41ae32:	add    BYTE PTR [ecx+0x0],cl
	...
  41ae41:	add    BYTE PTR [eax],al
  41ae43:	mov    edx,0xc23ffc81
  41ae48:	cmp    esp,0xfc81bba3
  41ae4e:	mov    cl,0xc3
  41ae50:	cmp    esp,0xfc81bbbd
  41ae56:	leave  
  41ae57:	ret    
  41ae58:	cmp    esp,0xfc4ce800
  41ae5e:	dec    DWORD PTR [eax-0x230003b4]
  41ae64:	inc    edi
  41ae65:	cld    
  41ae66:	dec    DWORD PTR [esi-0x7d0003b9]
  41ae6c:	inc    edi
  41ae6d:	cld    
  41ae6e:	inc    DWORD PTR [esi+0x50fffc47]
  41ae74:	inc    esi
  41ae75:	cld    
  41ae76:	inc    DWORD PTR [esi+eax*2-0x4]
  41ae7a:	call   DWORD PTR [esi+0x20fffc47]
  41ae80:	inc    edi
  41ae81:	cld    
  41ae82:	jmp    eax
  41ae84:	inc    esi
  41ae85:	cld    
  41ae86:	(bad)  
  41ae87:	inc    BYTE PTR [esi-0x4]
  41ae8a:	call   FWORD PTR [esi+0x2cfffc47]
  41ae90:	inc    edi
  41ae91:	cld    
  41ae92:	jmp    FWORD PTR [edi+eax*2]
  41ae95:	cld    
  41ae96:	call   FWORD PTR [eax]
  41ae98:	inc    edi
  41ae99:	cld    
  41ae9a:	(bad)  
  41ae9b:	cli    
  41ae9c:	inc    esi
  41ae9d:	cld    
  41ae9e:	jmp    DWORD PTR [esi+0x46]
  41aea1:	cld    
  41aea2:	push   DWORD PTR [eax]
  41aea4:	inc    ebp
  41aea5:	cld    
  41aea6:	inc    DWORD PTR [eax]
	...
  41aeb4:	add    BYTE PTR [eax],al
  41aeb6:	xor    BYTE PTR [esi-0x4],al
  41aeb9:	jmp    esp
  41aebb:	inc    ebp
  41aebc:	cld    
  41aebd:	(bad)  
  41aebe:	call   0xc741ab08
  41aec3:	inc    ebp
  41aec4:	cld    
  41aec5:	dec    eax
  41aec7:	inc    ebp
  41aec8:	cld    
  41aec9:	dec    DWORD PTR [eax+0x76fffc46]
  41aecf:	inc    esi
  41aed0:	cld    
  41aed1:	(bad)  
  41aed2:	jp     0x41af1a
  41aed4:	cld    
  41aed5:	jmp    FWORD PTR [edx]
  41aed7:	inc    esi
  41aed8:	cld    
  41aed9:	jmp    FWORD PTR [esi-0x550003ba]
  41aedf:	inc    esi
  41aee0:	cld    
  41aee1:	(bad)  
  41aee2:	aas    
  41aee3:	mov    eax,DWORD PTR [edx-0x7d6f2701]
  41aee9:	call   eax
  41aeeb:	js     0x41ae71
  41aeed:	dec    eax
  41aeef:	enter  0xff88,0xc0
  41aef3:	lods   al,BYTE PTR ds:[esi]
  41aef4:	mov    bh,bh
  41aef6:	mov    eax,0xb0ff88d4
  41aefb:	stos   BYTE PTR es:[edi],al
  41aefc:	mov    bh,bh
  41aefe:	test   al,0xfa
  41af00:	mov    bh,bh
  41af02:	mov    al,ds:0x98ff890a
  41af07:	push   ss
  41af08:	mov    edi,edi
  41af0a:	nop
  41af0b:	cmp    BYTE PTR [ecx-0x769f7701],cl
  41af11:	inc    DWORD PTR [eax+0x78ff8950]
  41af17:	repnz mov bh,bh
	...
  41af26:	add    BYTE PTR [eax],al
  41af28:	add    BYTE PTR [eax+0x7a],dh
  41af2b:	cmp    edi,0x68
  41af2e:	les    eax,FWORD PTR [ebx+0x6e60ff]
  41af34:	add    BYTE PTR [edi],bh
  41af36:	sub    DWORD PTR [ebx-0x7cd7af01],eax
  41af3c:	dec    DWORD PTR [eax+0x38]
  41af3f:	cmp    edi,0x40
  41af42:	lock cmp edi,0x38
  41af46:	sbb    BYTE PTR [edi+edi*8-0x7be3d0],al
  41af4d:	sub    BYTE PTR [edx+0x0],dh
  41af50:	add    BYTE PTR [edi],bh
  41af52:	lods   eax,DWORD PTR ds:[esi]
  41af53:	cmp    edi,0x18
  41af56:	jb     0x41af58
  41af58:	add    BYTE PTR [edi],bh
  41af5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af5b:	cmp    edi,0x8
  41af5e:	into   
  41af5f:	cmp    edi,0x0
  41af62:	jb     0x41aeea
  41af64:	(bad)  
  41af65:	clc    
  41af66:	lahf   
  41af67:	xchg   bh,bh
  41af69:	lock enter 0x8605,0xe8
  41af6e:	jg     0x41af7e
  41af70:	xchg   al,ah
  41af72:	jg     0x41af8a
  41af74:	xchg   al,bl
  41af76:	jg     0x41af94
  41af78:	xchg   al,dl
  41af7a:	jg     0x41afa0
  41af7c:	xchg   al,cl
  41af7e:	jg     0x41afb6
  41af80:	xchg   al,al
  41af82:	jg     0x41aff2
  41af84:	test   DWORD PTR [eax+0x3f03ea7f],edi
  41af8a:	enter  0x8547,0x0
	...
  41af9a:	add    BYTE PTR [eax],al
  41af9c:	test   al,0x7f
  41af9e:	push   esp
  41af9f:	test   DWORD PTR [eax+0x3f03ea7f],esp
  41afa5:	enter  0x85b1,0x90
  41afa9:	jg     0x41af39
  41afab:	test   DWORD PTR [eax-0x7f7a8581],ecx
  41afb1:	jg     0x41b029
  41afb3:	test   DWORD PTR [eax+0x7f],edi
  41afb6:	in     al,0x84
  41afb8:	jo     0x41b039
  41afba:	clc    
  41afbb:	test   BYTE PTR [eax+0x7f],ch
  41afbe:	jmp    0x5884:0xffc83f03
  41afc5:	jg     0x41afdb
  41afc7:	test   DWORD PTR [eax+0x7f],edx
  41afca:	lods   al,BYTE PTR ds:[esi]
  41afcb:	test   BYTE PTR [eax+0x7f],cl
  41afce:	call   0x3884:0x907f4084
  41afd5:	jg     0x41af99
  41afd7:	test   BYTE PTR [eax],dh
  41afd9:	jg     0x41af75
  41afdb:	test   BYTE PTR [eax],ch
  41afdd:	jg     0x41af7f
  41afdf:	test   BYTE PTR [eax],ah
  41afe1:	jg     0x41b04b
  41afe3:	test   BYTE PTR [eax],bl
  41afe5:	jg     0x41b061
  41afe7:	test   BYTE PTR [eax],dl
  41afe9:	jg     0x41afd5
  41afeb:	add    edi,DWORD PTR [edi]
  41afed:	enter  0x844f,0x0
  41aff1:	jg     0x41aff4
  41aff3:	aaa    
  41aff4:	ret    
  41aff5:	jle    0x41aff3
  41aff7:	jmp    0x89427838
  41affc:	ret    0xfc7e
  41afff:	pop    DWORD PTR [eax]
	...
  41b00d:	add    BYTE PTR [eax],al
  41b00f:	mov    edx,0xc293fc7e
  41b014:	jle    0x41b012
  41b016:	mov    eax,ds:0x9dfc7eba
  41b01b:	ret    0xfc7e
  41b01e:	leave  
  41b01f:	mov    edx,0xc2c7fc7e
  41b024:	jle    0x41b022
  41b026:	scas   eax,DWORD PTR es:[edi]
  41b027:	mov    edx,0xc2f3fc7e
  41b02c:	jle    0x41b02a
  41b02e:	add    DWORD PTR [ecx-0x3d320382],edi
  41b034:	jle    0x41b032
  41b036:	fnstcw WORD PTR [edx-0x3ed00382]
  41b03c:	jle    0x41b03a
  41b03e:	or     edi,DWORD PTR [ecx-0x3d060382]
  41b044:	jle    0x41b042
  41b046:	addr16 mov ecx,0xc17ffc7e
  41b04c:	jle    0x41b04a
  41b04e:	xchg   ecx,eax
  41b04f:	mov    ecx,0xc191fc7e
  41b054:	jle    0x41b052
  41b056:	and    edi,DWORD PTR [ecx-0x3edc0382]
  41b05c:	jle    0x41b05a
  41b05e:	dec    edi
  41b05f:	mov    ecx,0xc135fc7e
  41b064:	jge    0x41b062
  41b066:	fnstcw WORD PTR [ecx-0x3e300383]
  41b06c:	jge    0x41b06a
  41b06e:	xlat   BYTE PTR ds:[ebx]
  41b06f:	mov    ecx,0xabfc7d
	...
  41b080:	add    BYTE PTR [eax],al
  41b082:	sar    DWORD PTR [ebp-0x4],0xaf
  41b086:	mov    ecx,0x8600fc7d
  41b08b:	inc    esi
  41b08c:	cld    
  41b08d:	inc    DWORD PTR [eax+0x60fffc46]
  41b093:	inc    ebp
  41b094:	cld    
  41b095:	inc    DWORD PTR [esi-0x2d0003bb]
  41b09b:	inc    esi
  41b09c:	cld    
  41b09d:	inc    edx
  41b09f:	inc    esi
  41b0a0:	cld    
  41b0a1:	call   FWORD PTR [esi-0x5d0003ba]
  41b0a7:	inc    esi
  41b0a8:	cld    
  41b0a9:	push   edx
  41b0ab:	inc    esi
  41b0ac:	cld    
  41b0ad:	inc    DWORD PTR [eax-0x5f0003ba]
  41b0b3:	std    
  41b0b4:	sti    
  41b0b5:	(bad)  
  41b0b6:	cmp    BYTE PTR [eax-0x4],cl
  41b0b9:	call   DWORD PTR [eax+ecx*2-0x4]
  41b0bd:	(bad)  
  41b0be:	cld    
  41b0bf:	inc    edi
  41b0c0:	cld    
  41b0c1:	push   DWORD PTR [edx]
  41b0c3:	dec    eax
  41b0c4:	cld    
  41b0c5:	dec    DWORD PTR [edx]
  41b0c7:	std    
  41b0c8:	sti    
  41b0c9:	push   edx
  41b0cb:	cld    
  41b0cc:	sti    
  41b0cd:	(bad)  
  41b0ce:	(bad)  
  41b0cf:	cld    
  41b0d0:	sti    
  41b0d1:	jmp    DWORD PTR [eax-0x3f000403]
  41b0d7:	std    
  41b0d8:	sti    
  41b0d9:	(bad)  
  41b0da:	clc    
  41b0db:	cld    
  41b0dc:	sti    
  41b0dd:	inc    DWORD PTR [edx]
  41b0df:	std    
  41b0e0:	sti    
  41b0e1:	jmp    DWORD PTR [edx+0x48]
  41b0e4:	cld    
  41b0e5:	inc    DWORD PTR [eax]
	...
  41b0f3:	add    BYTE PTR [eax],al
  41b0f5:	dec    esp
  41b0f6:	dec    eax
  41b0f7:	cld    
  41b0f8:	call   DWORD PTR [esi-0x37]
  41b0fb:	add    BYTE PTR [eax],al
  41b0fd:	cwde   
  41b0fe:	dec    eax
  41b0ff:	cld    
  41b100:	call   eax
  41b102:	inc    edi
  41b103:	cld    
  41b104:	(bad)  
  41b105:	call   0x9941ad51
  41b10a:	dec    eax
  41b10b:	cld    
  41b10c:	jmp    FWORD PTR [eax+0x3ffffc48]
  41b112:	or     DWORD PTR [ecx+0x6f10ff],eax
  41b118:	add    BYTE PTR [edi],bh
  41b11a:	stos   DWORD PTR es:[edi],eax
  41b11b:	cmp    bh,0x0
  41b11e:	outs   dx,DWORD PTR ds:[esi]
  41b11f:	add    BYTE PTR [eax],al
  41b121:	aas    
  41b122:	rol    DWORD PTR [eax+0x7c7af0ff],cl
  41b128:	(bad)  
  41b129:	call   0xe141339c
  41b12e:	ins    BYTE PTR es:[edi],dx
  41b12f:	cmp    bh,0xd8
  41b132:	jb     0x41b0b6
  41b134:	call   eax
  41b136:	jp     0x41b0ba
  41b138:	dec    eax
  41b13a:	ret    0xff7e
  41b13d:	shr    BYTE PTR [esi+edi*2+0x7ed4b8ff],0xff
  41b145:	mov    al,0xb2
  41b147:	jle    0x41b148
  41b149:	test   al,0xea
  41b14b:	jle    0x41b14c
  41b14d:	mov    al,ds:0x3f00006e
  41b152:	adc    DWORD PTR [edi-0x1],edi
  41b155:	nop
  41b156:	adc    al,0x7f
  41b158:	inc    DWORD PTR [eax]
	...
  41b166:	add    BYTE PTR [eax],al
  41b168:	mov    BYTE PTR [esi+0x0],ch
  41b16b:	add    BYTE PTR [edi],bh
  41b16d:	daa    
  41b16e:	jg     0x41b16f
  41b170:	js     0x41b1bc
  41b172:	jg     0x41b173
  41b174:	jo     0x41b174
  41b176:	jle    0x41b177
  41b178:	push   0x60ff7ee2
  41b17d:	fs cmp edi,0xff818058
  41b184:	push   eax
  41b185:	outs   dx,BYTE PTR ds:[esi]
  41b186:	add    BYTE PTR [eax],al
  41b188:	aas    
  41b189:	fld    DWORD PTR [ecx-0x7e8bbf01]
  41b18f:	(bad)  
  41b190:	cmp    BYTE PTR [ecx+eax*4],ch
  41b193:	push   DWORD PTR [eax]
  41b195:	bound  eax,QWORD PTR [ecx-0x4036d701]
  41b19b:	and    BYTE PTR [eax],0x7c
  41b19e:	xchg   edx,eax
  41b19f:	sbb    BYTE PTR [eax],0x7c
  41b1a2:	call   0x880:0x907c1080
  41b1a9:	jl     0x41b213
  41b1ab:	add    DWORD PTR [eax],0xf8815a7c
  41b1b1:	jnp    0x41b19d
  41b1b3:	add    edi,DWORD PTR [edi]
  41b1b5:	enter  0x813f,0xe8
  41b1b9:	jnp    0x41b15f
  41b1bb:	and    al,0x7b
  41b1be:	jmp    0x7e04:0x14c83f03
  41b1c5:	test   BYTE PTR [ebx+eiz*8+0x4c],0xe5
  41b1ca:	sub    ebx,ebx
	...
  41b1d8:	add    BYTE PTR [eax],al
  41b1da:	add    BYTE PTR [ebp+eiz*8+0x28],dl
  41b1de:	add    al,0x78
  41b1e0:	(bad)  
  41b1e1:	pop    ss
  41b1e2:	fist   WORD PTR [ecx]
  41b1e4:	in     al,0x23
  41b1e6:	fist   DWORD PTR [eiz*8-0x37a1fc17]
  41b1ed:	fsubr  DWORD PTR es:[ebx]
  41b1f0:	test   DWORD PTR [esp+edi*4],0xd805e9f1
  41b1f7:	sbb    eax,0xea057ec8
  41b1fc:	cmc    
  41b1fd:	adc    al,dl
  41b1ff:	fld    QWORD PTR [ecx]
  41b201:	add    eax,ebx
  41b203:	ffree  st(7)
  41b205:	int3   
  41b206:	add    al,0xdb
  41b208:	neg    ch
  41b20a:	aad    0xd4
  41b20c:	in     al,0xcb
  41b20e:	ret    0x7b58
  41b211:	call   0xe9e5:0xbaebfa02
  41b218:	jmp    0x41b1cf
  41b21a:	fcomp  st(7)
  41b21c:	out    dx,al
  41b21d:	jmp    0x10aa425
  41b222:	scas   al,BYTE PTR es:[edi]
  41b223:	or     ah,ch
  41b225:	pop    esi
  41b226:	enter  0x1610,0x6b
  41b22a:	xchg   ebp,eax
  41b22b:	pop    es
  41b22c:	call   0x747e9b98
  41b231:	add    ah,BYTE PTR [ebp+0x7d61e7f7]
  41b237:	(bad)  
  41b238:	clc    
  41b239:	mov    WORD PTR gs:[eax+edi*2],?
  41b23d:	add    ch,BYTE PTR [ebp+0x0]
	...
  41b24b:	add    BYTE PTR [eax],al
  41b24d:	add    BYTE PTR [edi],dl
  41b24f:	call   0xef3f37b5
  41b254:	ins    BYTE PTR es:[edi],dx
  41b255:	jle    0x41b23a
  41b257:	jp     0x41b255
  41b259:	add    BYTE PTR [esp+ebp*8],bh
  41b25c:	outs   dx,DWORD PTR ds:[esi]
  41b25d:	push   ebp
  41b25e:	in     eax,dx
  41b25f:	out    0x70,eax
  41b261:	push   eax
  41b262:	cli    
  41b263:	jp     0x41b261
  41b265:	cli    
  41b266:	cmp    eax,0xed3d6fec
  41b26b:	out    0x61,eax
  41b26d:	xor    eax,0xdefc7a82
  41b272:	cmp    eax,DWORD PTR ds:0xe1e93566
  41b278:	ins    BYTE PTR es:[edi],dx
  41b279:	or     al,0x7a
  41b27b:	div    BYTE PTR [ebx+ebx*1+0x7a]
  41b27f:	call   0xf7dfcff9
  41b284:	inc    ecx
  41b285:	jmp    0x2c4311c6
  41b28a:	jae    0x41b276
  41b28c:	popa   
  41b28d:	maxps  xmm0,XMMWORD PTR ds:0xf893ff6b
  41b294:	imul   edi,edi,0xffffff87
  41b297:	in     eax,0x6a
  41b299:	(bad)  [ebp+0x72d06ef6]
  41b29f:	jecxz  0x41b310
  41b2a1:	test   al,0x3c
  41b2a3:	fadd   QWORD PTR [ecx]
  41b2a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2a6:	pop    edi
  41b2a7:	test   BYTE PTR [edx+0x0],0x6f
  41b2ab:	xchg   edx,eax
  41b2ac:	pop    edi
  41b2ad:	push   ebx
  41b2ae:	seto   BYTE PTR [edi+0x0]
	...
  41b2be:	add    BYTE PTR [eax],al
  41b2c0:	add    BYTE PTR [eax],ch
  41b2c2:	mov    BYTE PTR [ecx+0x72],0x3
  41b2c6:	gs jo  0x41b32e
  41b2c9:	rcr    BYTE PTR [eax+ebp*2+0x6c64eb65],1
  41b2d0:	jo     0x41b291
  41b2d2:	xchg   ebx,eax
  41b2d3:	gs inc ecx
  41b2d5:	push   ss
  41b2d6:	mov    BYTE PTR [eax],0x2
  41b2d9:	retf   
  41b2da:	fs ins BYTE PTR es:[edi],dx
  41b2dc:	push   esi
  41b2dd:	iret   
  41b2de:	push   0x3bc04f75
  41b2e3:	arpl   WORD PTR [ebx+eax*8-0x3b],bp
  41b2e7:	rol    DWORD PTR [edx],1
  41b2e9:	and    edx,DWORD PTR [edx+0x2a766167]
  41b2ef:	arpl   WORD PTR [ebp+0x71],sp
  41b2f2:	xor    DWORD PTR [esi+0x46],esp
  41b2f5:	jg     0x41b297
  41b2f7:	pop    edi
  41b2f8:	add    ah,ch
  41b2fa:	les    ecx,FWORD PTR [edi+ebp*2+0x7]
  41b2fe:	push   0x96046948
  41b303:	pop    ebx
  41b304:	jb     0x41b375
  41b306:	cmp    esp,0xffffffff
  41b309:	gs ret 
  41b30b:	inc    ebp
  41b30c:	xor    dh,BYTE PTR gs:[edx+esi*2]
  41b310:	outs   dx,DWORD PTR ds:[esi]
  41b311:	inc    ebp
  41b312:	and    DWORD PTR [eax+0x64],0x24
  41b316:	addr16 jno 0x41b38c
  41b319:	xchg   esi,eax
  41b31a:	lds    eax,FWORD PTR [ecx+eax*1+0x54706721]
  41b321:	inc    ebx
  41b322:	lahf   
  41b323:	ins    BYTE PTR es:[edi],dx
  41b324:	push   eax
	...
  41b331:	add    BYTE PTR [eax],al
  41b333:	add    BYTE PTR [edi],dh
  41b335:	cwde   
  41b336:	fs inc ecx
  41b338:	push   esi
  41b339:	lds    ebp,FWORD PTR [edi]
  41b33b:	add    BYTE PTR [ebp+0x3f615f97],ah
  41b341:	fwait
  41b342:	loope  0x41b387
  41b344:	(bad)  
  41b345:	pushf  
  41b346:	loope  0x41b3a8
  41b348:	retf   
  41b349:	xchg   ecx,eax
  41b34a:	shl    BYTE PTR [esi+0x7e],cl
  41b34d:	outs   dx,DWORD PTR ds:[esi]
  41b34e:	add    BYTE PTR [edi+0x3f],ah
  41b351:	sub    esp,ecx
  41b353:	imul   esp,DWORD PTR [edx-0x69ba1ecd],0x53
  41b35a:	loope  0x41b39a
  41b35c:	aas    
  41b35d:	outs   dx,DWORD PTR ds:[esi]
  41b35e:	add    eax,0xbf5b9a45
  41b363:	jb     0x41b2f2
  41b365:	pop    ebp
  41b366:	loope  0x41b3d5
  41b368:	mov    ebx,DWORD PTR [edi-0x2e]
  41b36b:	ins    BYTE PTR es:[edi],dx
  41b36c:	pop    esp
  41b36d:	inc    esp
  41b36e:	iret   
  41b36f:	jo     0x41b3b0
  41b371:	jg     0x41b374
  41b373:	push   ebp
  41b374:	push   esi
  41b375:	inc    ebx
  41b376:	loope  0x41b3b8
  41b378:	push   edi
  41b379:	adc    bh,cl
  41b37b:	push   ebx
  41b37c:	push   0x4b6bcbac
  41b381:	or     BYTE PTR [edi+0x5045376],bh
  41b387:	sub    BYTE PTR [esi],bh
  41b389:	stos   BYTE PTR es:[edi],al
  41b38a:	(bad)  [ebx+0xb]
  41b38d:	adc    dl,dl
  41b38f:	jae    0x41b38b
  41b391:	mov    esp,0x6f2d6cce
  41b396:	add    BYTE PTR [ebx],dl
	...
  41b3a4:	add    BYTE PTR [eax],al
  41b3a6:	add    BYTE PTR [ebx+edx*8],bh
  41b3a9:	shl    DWORD PTR [ebx+0xd],1
  41b3ac:	into   
  41b3ad:	shr    DWORD PTR [edi-0x2],cl
  41b3b0:	outs   dx,BYTE PTR ds:[esi]
  41b3b1:	add    BYTE PTR [edi+0x3f],dl
  41b3b4:	scas   al,BYTE PTR es:[edi]
  41b3b5:	into   
  41b3b6:	bound  ebx,QWORD PTR [esi]
  41b3b8:	jnp    0x41b395
  41b3ba:	push   ebx
  41b3bb:	call   0xdaa98c89
  41b3c0:	ret    0x30d4
  41b3c3:	sub    eax,0xef5ed2de
  41b3c8:	(bad)  
  41b3c9:	(bad)  
  41b3ca:	fucomi st,st(3)
  41b3cc:	repz jmp 0xba07cfd5
  41b3d2:	rcr    ebx,1
  41b3d4:	in     al,0xc4
  41b3d6:	ror    bh,1
  41b3d8:	mov    ah,0xf7
  41b3da:	mov    ebp,0xcfb6faa1
  41b3df:	xor    BYTE PTR [eax-0x2e],bh
  41b3e2:	add    DWORD PTR [edx-0x8],edi
  41b3e5:	(bad)  
  41b3e6:	aad    0x70
  41b3e8:	cli    
  41b3e9:	xchg   edx,eax
  41b3ea:	loopne 0x41b389
  41b3ec:	sti    
  41b3ed:	xchg   esi,eax
  41b3ee:	add    ebx,DWORD PTR [edx-0x36]
  41b3f1:	mov    ecx,0x84eb9bd1
  41b3f6:	ror    BYTE PTR [edi+0x5db5b7bb],1
  41b3fc:	lock jne 0x41b402
  41b3ff:	mov    al,ds:0x5adaabc8
  41b404:	in     al,dx
  41b405:	mov    ds:0x5dfb6eda,eax
  41b40a:	mov    esi,0x0
	...
  41b417:	add    BYTE PTR [eax],al
  41b419:	add    BYTE PTR [ecx-0x1c],ah
  41b41c:	inc    esp
  41b41d:	ret    
  41b41e:	shl    BYTE PTR [edi-0x5],1
  41b421:	add    BYTE PTR [ebx-0x5],bl
  41b424:	push   ebp
  41b425:	rcr    BYTE PTR [edi-0x1b],cl
  41b428:	cmp    ebx,ebx
  41b42a:	jns    0x41b3f4
  41b42c:	jg     0x41b431
  41b42e:	stc    
  41b42f:	loopne 0x41b474
  41b431:	loopne 0x41b42d
  41b433:	in     al,dx
  41b434:	xor    eax,edx
  41b436:	cli    
  41b437:	loopne 0x41b44e
  41b439:	fistp  WORD PTR [ecx-0x38]
  41b43c:	dec    esp
  41b43d:	add    edi,ecx
  41b43f:	loopne 0x41b444
  41b441:	loopne 0x41b442
  41b443:	jecxz  0x41b43f
  41b445:	rcr    BYTE PTR ds:0x202bdc8,1
  41b44b:	in     eax,dx
  41b44c:	cmc    
  41b44d:	mov    dh,0xe3
  41b44f:	jmp    0x41b451
  41b451:	cld    
  41b452:	nop
  41b453:	jmp    0xcc6c:0xeb890848
  41b45a:	jge    0x41b4d3
  41b45c:	cld    
  41b45d:	ja     0x41b49c
  41b45f:	or     eax,0xea9add66
  41b464:	outs   dx,BYTE PTR ds:[esi]
  41b465:	fisub  DWORD PTR [ebp-0x1c]
  41b468:	push   0xffffffac
  41b46a:	add    al,0xb6
  41b46c:	add    BYTE PTR [ebx],dl
  41b46e:	cmp    al,0xd
  41b470:	mov    bp,0xe3f0
  41b474:	pop    edi
  41b475:	enter  0xea08,0x49
  41b479:	xchg   edi,eax
  41b47a:	cli    
  41b47b:	jecxz  0x41b4be
  41b47d:	jmp    0x41b482
	...
  41b48a:	add    BYTE PTR [eax],al
  41b48c:	add    BYTE PTR [esp+edi*8],bh
  41b48f:	add    DWORD PTR [esi-0x6fb00517],ebp
  41b495:	out    dx,eax
  41b496:	cli    
  41b497:	gs xchg esp,eax
  41b499:	mov    ch,0xe4
  41b49b:	bound  ecx,QWORD PTR [esi-0x51fdd7c4]
  41b4a1:	or     ebx,edi
  41b4a3:	push   ebx
  41b4a4:	or     BYTE PTR [edx],0xeb
  41b4a7:	imul   ebx,DWORD PTR [esi-0x70],0xa
  41b4ab:	push   0x5b
  41b4ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ae:	out    0x74,eax
  41b4b0:	inc    esi
  41b4b1:	xchg   ecx,eax
  41b4b2:	std    
  41b4b3:	inc    ecx
  41b4b4:	jmp    0x2e43b9f5
  41b4b9:	out    0xfa,al
  41b4bb:	push   eax
  41b4bc:	cmp    esp,edx
  41b4be:	cld    
  41b4bf:	popa   
  41b4c0:	cmp    eax,0x3e6f06d6
  41b4c5:	aad    0xed
  41b4c7:	ins    BYTE PTR es:[edi],dx
  41b4c8:	or     al,0x70
  41b4ca:	cli    
  41b4cb:	outs   dx,BYTE PTR ds:[esi]
  41b4cc:	adc    ch,cl
  41b4ce:	jmp    0x41b511
  41b4d0:	jmp    0x3a40a711
  41b4d5:	(bad)  
  41b4d6:	cli    
  41b4d7:	aas    
  41b4d8:	add    BYTE PTR [ebx+0x3c],bh
  41b4db:	jb     0x41b542
  41b4dd:	inc    eax
  41b4de:	xor    BYTE PTR [eax+0x69],al
  41b4e1:	fs pop ds
  41b4e3:	popa   
  41b4e4:	je     0x41b547
  41b4e6:	cmp    al,0x73
  41b4e8:	inc    ecx
  41b4e9:	retfw  0x14c
  41b4ed:	cdq    
  41b4ee:	pop    ds
  41b4ef:	jo     0x41b541
	...
  41b4fd:	add    BYTE PTR [eax],al
  41b4ff:	add    BYTE PTR [ebx+eiz*1+0x76],ah
  41b503:	popa   
  41b504:	push   0x1f
  41b506:	dec    esp
  41b507:	jb     0x41b51a
  41b509:	and    BYTE PTR [ebx+0x6c],ah
  41b50c:	sti    
  41b50d:	sahf   
  41b50e:	pop    edi
  41b50f:	arpl   dx,bp
  41b511:	and    al,0x6d
  41b513:	outs   dx,BYTE PTR ds:[esi]
  41b514:	shr    BYTE PTR [edi+eiz*2],0x65
  41b518:	mov    ch,0x8c
  41b51a:	cld    
  41b51b:	dec    edi
  41b51d:	int3   
  41b51e:	inc    ebp
  41b51f:	gs stos BYTE PTR es:[edi],al
  41b521:	cdq    
  41b522:	jb     0x41b58d
  41b524:	test   al,0x2c
  41b526:	jo     0x41b58d
  41b528:	(bad)  
  41b529:	cmp    ebp,DWORD PTR [ebp+0x66]
  41b52c:	iret   
  41b52d:	and    eax,0x3dc0495f
  41b532:	cmp    eax,DWORD PTR [eax]
  41b534:	ror    cl,1
  41b536:	inc    ebp
  41b537:	gs jp  0x41b4c7
  41b53a:	outs   dx,DWORD PTR ds:[esi]
  41b53b:	jb     0x41b5b1
  41b53d:	pop    ds
  41b53e:	outs   dx,BYTE PTR ds:[esi]
  41b53f:	je     0x41b55b
  41b541:	and    esi,DWORD PTR [edx+0x65]
  41b544:	jne    0x41b576
  41b546:	ins    DWORD PTR es:[edi],dx
  41b547:	jb     0x41b548
  41b549:	mov    bh,ah
  41b54b:	call   DWORD PTR [eax+0x6a736cce]
  41b551:	ds push 0xfc916065
  41b557:	call   DWORD PTR [ebx+0x427547cb]
  41b55d:	xor    BYTE PTR [ebx+0x42],ah
  41b560:	aas    
  41b561:	fdivr  DWORD PTR [eax+0x62]
	...
  41b573:	jmp    0x41b5ea
  41b575:	xlat   BYTE PTR ds:[ebx]
  41b576:	data16 jecxz 0x41b53c
  41b579:	ret    
  41b57a:	fidiv  WORD PTR [bx+si+0x0]
  41b57e:	mov    edi,DWORD PTR [esi]
  41b580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b581:	test   eax,0xa3c80b73
  41b586:	push   0x6db99dfc
  41b58b:	retf   
  41b58c:	pop    esi
  41b58d:	add    BYTE PTR [ecx+0x62ac323d],bh
  41b593:	fimul  DWORD PTR [esi+0x263e3200]
  41b599:	test   eax,0xa4868273
  41b59e:	jb     0x41b53b
  41b5a0:	test   dl,cl
  41b5a2:	xchg   bx,ax
  41b5a4:	mov    edx,ss
  41b5a6:	pop    esi
  41b5a7:	stos   BYTE PTR es:[edi],al
  41b5a8:	inc    esp
  41b5a9:	vmovsd xmm1,xmm0,xmm6
  41b5ad:	add    al,0x4c
  41b5af:	jl     0x41b5dd
  41b5b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5b2:	outs   dx,DWORD PTR ds:[esi]
  41b5b3:	ins    BYTE PTR es:[edi],dx
  41b5b4:	pop    ebx
  41b5b5:	mov    dh,0x66
  41b5b7:	imul   eax,DWORD PTR [esi-0x3b],0xffe9f0ff
  41b5be:	inc    edx
  41b5bf:	addr16 dec eax
  41b5c1:	mov    ah,0x4f
  41b5c3:	ins    DWORD PTR es:[edi],dx
  41b5c4:	mul    BYTE PTR [edx+0x5124c62]
  41b5ca:	scas   eax,DWORD PTR es:[edi]
  41b5cb:	cmp    eax,0x7273a3b2
  41b5d0:	or     eax,0xb515ead
  41b5d5:	mov    cl,0x62
	...
  41b5e3:	add    BYTE PTR [eax],al
  41b5e5:	add    BYTE PTR [ebx],ah
  41b5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5e8:	mov    esp,0xb8af1a60
  41b5ed:	data16 sbb BYTE PTR ds:0xbb1366c7,cl
  41b5f4:	mov    ds:0xec83f71,eax
  41b5f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5fa:	push   cs
  41b5fb:	out    0x4,al
  41b5fd:	mov    al,0x4f
  41b5ff:	mov    edx,0xe414a7c3
  41b604:	jmp    0x27097c0c
  41b609:	mov    dh,0xdd
  41b60b:	out    0xf5,al
  41b60d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b60e:	paddb  mm6,mm7
  41b611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b612:	add    ebx,esp
  41b614:	sbb    dh,BYTE PTR [edx-0x4f29f300]
  41b61a:	fsubrp st(6),st
  41b61c:	int    0x3
  41b61e:	mov    dl,0xc7
  41b620:	stos   BYTE PTR es:[edi],al
  41b621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b622:	int3   
  41b623:	jmp    DWORD PTR [edx-0x37195451]
  41b629:	scas   eax,DWORD PTR es:[edi]
  41b62a:	jp     0x41b622
  41b62c:	retf   0x8fae
  41b62f:	cld    
  41b630:	mov    bh,0xa6
  41b632:	and    ebp,0xc84903e9
  41b638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b639:	mov    al,0x7f
  41b63b:	test   BYTE PTR [edx+eiz*4-0x49551274],0x99
  41b643:	in     al,dx
  41b644:	jmp    0xa70a154c
  41b649:	mov    al,0x0
	...
  41b657:	add    BYTE PTR [eax],al
  41b659:	mov    ecx,gs
  41b65b:	jbe    0x41b609
  41b65d:	jne    0x41b64c
  41b65f:	test   cl,cl
  41b661:	outs   dx,BYTE PTR ds:[esi]
  41b662:	in     eax,dx
  41b663:	test   BYTE PTR [ebx],al
  41b665:	dec    edx
  41b666:	enter  0xb126,0x7f
  41b66a:	test   BYTE PTR [ebx+eiz*4+0x4c],0xed
  41b66f:	and    BYTE PTR [edx-0x4db703b1],dh
  41b675:	pop    ds
  41b676:	in     eax,dx
  41b677:	jmp    0x2b0a647f
  41b67c:	mov    al,0x1d
  41b67e:	add    DWORD PTR [ecx],eax
  41b680:	inc    edi
  41b681:	aam    0xf7
  41b683:	imul   ecx,DWORD PTR [eax-0x31],0x3b0c76ea
  41b68a:	in     eax,0x6c
  41b68c:	add    al,0x92
  41b68e:	mov    ecx,0xdfcf0d2a
  41b693:	add    BYTE PTR [ecx+eax*2],cl
  41b696:	std    
  41b697:	outs   dx,DWORD PTR ds:[esi]
  41b698:	stc    
  41b699:	stos   BYTE PTR es:[edi],al
  41b69a:	jmp    0xfc00:0xb296f56a
  41b6a1:	stos   DWORD PTR es:[edi],eax
  41b6a2:	out    0x6e,al
  41b6a4:	mov    edx,0xd564a552
  41b6a9:	mov    al,ds:0x3d39fc73
  41b6ae:	push   ss
  41b6af:	data16 into 
  41b6b1:	outs   dx,DWORD PTR ds:[esi]
  41b6b2:	jecxz  0x41b719
  41b6b4:	mov    edi,0xac79e60b
  41b6b9:	hlt    
  41b6ba:	mov    cl,0x0
  41b6bc:	and    eax,DWORD PTR [eax]
	...
  41b6ca:	add    BYTE PTR [eax],al
  41b6cc:	cmp    eax,0xdce6616
  41b6d1:	mul    BYTE PTR [ebp-0x45]
  41b6d4:	aad    0x1c
  41b6d6:	bound  edx,QWORD PTR [ebp-0x5eba1a37]
  41b6dc:	std    
  41b6dd:	jb     0x41b6db
  41b6df:	pop    esi
  41b6e0:	cmp    eax,0x3866616
  41b6e5:	fild   QWORD PTR [ebx+0x7a]
  41b6e8:	cdq    
  41b6e9:	jmp    DWORD PTR [ebp-0x80]
  41b6ec:	cmp    al,0x85
  41b6ee:	add    bl,BYTE PTR [ebx+0x794beb99]
  41b6f4:	mov    eax,ds:0x924c47e4
  41b6f9:	mov    cl,0x0
  41b6fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6fc:	inc    edx
  41b6fd:	push   ss
  41b6fe:	dec    si
  41b700:	mul    ah
  41b702:	jne    0x41b740
  41b704:	test   ch,ah
  41b706:	jns    0x41b708
  41b708:	arpl   WORD PTR [ebx+edi*1],si
  41b70b:	add    BYTE PTR [esp+ecx*8-0x790e9ab2],bh
  41b712:	jb     0x41b779
  41b714:	pop    es
  41b715:	xor    BYTE PTR [edi+0x4b],bl
  41b718:	inc    ebx
  41b719:	xor    eax,0xccc1003b
  41b71e:	dec    esi
  41b71f:	xor    DWORD PTR gs:[edi+0x2d30745f],edx
  41b726:	push   0x74814375
  41b72b:	inc    ecx
  41b72c:	push   esi
  41b72d:	(bad)  
  41b72e:	daa    
  41b72f:	add    DWORD PTR [eax],eax
	...
  41b73d:	add    BYTE PTR [eax],al
  41b73f:	pop    ds
  41b740:	aaa    
  41b741:	push   eax
  41b742:	gs dec esi
  41b744:	cmp    cl,BYTE PTR [edi+0x6e]
  41b747:	outs   dx,DWORD PTR ds:[esi]
  41b748:	and    eax,0xc683646d
  41b74d:	retf   0x8401
  41b750:	pop    ds
  41b751:	gs dec edi
  41b753:	push   ss
  41b754:	and    DWORD PTR [esi+0x43],ebp
  41b757:	repz aaa 
  41b759:	jb     0x41b7c0
  41b75b:	clc    
  41b75c:	cmp    DWORD PTR [edi+0x73],ecx
  41b75f:	repz aaa 
  41b761:	cld    
  41b762:	jmp    DWORD PTR [ecx-0x35]
  41b765:	dec    esi
  41b766:	rol    DWORD PTR gs:[eax-0x64448a92],0x5b
  41b76e:	ins    BYTE PTR es:[edi],dx
  41b76f:	mov    ds:0xed003b20,eax
  41b774:	int3   
  41b775:	inc    ebp
  41b776:	gs jb  0x41b709
  41b779:	jno    0x41b7e0
  41b77b:	sbb    DWORD PTR fs:[ebx+0x6d],0xffffffb3
  41b780:	mov    esp,?
  41b782:	inc    edi
  41b784:	sub    DWORD PTR [esi+0x61],esi
  41b787:	jbe    0x41b7ac
  41b789:	xor    DWORD PTR [edx],esi
  41b78b:	cmp    BYTE PTR [eax],ah
  41b78d:	push   0x5f3f6c
  41b792:	ja     0x41b7d3
  41b794:	test   al,0xaa
  41b796:	jae    0x41b7b2
  41b798:	lods   eax,DWORD PTR ds:[esi]
  41b799:	stos   BYTE PTR es:[edi],al
  41b79a:	bound  esi,QWORD PTR [ebx]
  41b79c:	sahf   
  41b79d:	scas   al,BYTE PTR es:[edi]
  41b79e:	pop    esi
  41b79f:	sbb    al,0x6
  41b7a1:	fidiv  DWORD PTR [ecx+0x0]
	...
  41b7b0:	add    BYTE PTR [eax],al
  41b7b2:	sub    esp,DWORD PTR [eax-0x47c086fc]
  41b7b8:	stos   BYTE PTR es:[edi],al
  41b7b9:	jae    0x41b7dd
  41b7bb:	int    0xaa
  41b7bd:	bound  ecx,QWORD PTR [ebx]
  41b7bf:	sahf   
  41b7c0:	scas   al,BYTE PTR es:[edi]
  41b7c1:	(bad)  
  41b7c2:	(bad)  
  41b7c4:	test   eax,0xc5daed52
  41b7c9:	jmp    FWORD PTR [eax+0x7a]
  41b7cc:	lods   eax,DWORD PTR ds:[esi]
  41b7cd:	ins    DWORD PTR es:[edi],dx
  41b7ce:	(bad)  
  41b7cf:	enter  0x73a9,0x29
  41b7d3:	retf   
  41b7d4:	mov    al,0x6b
  41b7d6:	aas    
  41b7d7:	jl     0x41b7de
  41b7d9:	push   ecx
  41b7da:	ror    DWORD PTR [edi+ecx*8-0x3ad8328d],cl
  41b7e1:	(bad)  
  41b7e2:	cmp    BYTE PTR [edi+0x5],bl
  41b7e5:	push   ecx
  41b7e6:	stos   DWORD PTR es:[edi],eax
  41b7e7:	sub    eax,0x2d9740d2
  41b7ec:	int    0x3e
  41b7ee:	aas    
  41b7ef:	xchg   ebx,eax
  41b7f0:	add    eax,0xd42d9351
  41b7f5:	ins    BYTE PTR es:[edi],dx
  41b7f6:	xchg   BYTE PTR [ecx-0x4c],bl
  41b7f9:	ds aas 
  41b7fb:	arpl   WORD PTR ds:0xcf4d8b51,ax
  41b801:	jae    0x41b870
  41b803:	and    BYTE PTR [eax],al
  41b805:	jmp    0x447c:0x71b44e3f
  41b80c:	mov    al,0x4d
  41b80e:	jbe    0x41b830
  41b810:	add    BYTE PTR [esi],cl
  41b812:	ds dec esi
  41b814:	mov    ah,0x71
	...
  41b822:	add    BYTE PTR [eax],al
  41b824:	add    BYTE PTR [eax+ecx*8+0x5d],ch
  41b828:	mov    dl,0x81
  41b82a:	sbb    edx,ebp
  41b82c:	add    ecx,DWORD PTR [esi-0x20]
  41b82f:	inc    ebp
  41b830:	mov    ch,0x19
  41b832:	clc    
  41b833:	inc    eax
  41b834:	out    dx,al
  41b835:	sbb    al,0xe4
  41b837:	push   ebp
  41b838:	add    al,0x71
  41b83a:	enter  0xae50,0x1d
  41b83e:	cld    
  41b83f:	adc    ah,BYTE PTR [ebx+0x437ec1c]
  41b845:	gs enter 0xa70a,0xc
  41b84a:	loopne 0x41b856
  41b84c:	mov    cl,0xc
  41b84e:	out    0x10,al
  41b850:	scas   al,BYTE PTR es:[edi]
  41b851:	sbb    ebx,esp
  41b853:	add    al,0x4
  41b855:	clc    
  41b856:	(bad)  
  41b857:	imul   BYTE PTR [edi+ebx*8+0x60b804dc]
  41b85e:	jo     0x41b82b
  41b860:	add    ebx,esi
  41b862:	loopne 0x41b85f
  41b864:	lods   eax,DWORD PTR ds:[esi]
  41b865:	fucom  st(4)
  41b867:	fld    QWORD PTR [ebx]
  41b869:	and    eax,ecx
  41b86b:	(bad)  
  41b86c:	scas   eax,DWORD PTR es:[edi]
  41b86d:	shl    esp,cl
  41b86f:	int3   
  41b870:	mov    al,0xab
  41b872:	jmp    0x41b832
  41b874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b875:	lods   al,BYTE PTR ds:[esi]
  41b876:	enter  0x3ad,0xae
  41b87a:	in     eax,0xcb
  41b87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b87d:	and    BYTE PTR [eax-0x59],dh
  41b880:	add    ecx,DWORD PTR [esi-0x6059421b]
  41b886:	hlt    
  41b887:	jmp    0x41b88f
	...
  41b898:	dec    ecx
  41b899:	enter  0xa697,0x9f
  41b89d:	imul   cl
  41b89f:	add    eax,DWORD PTR [edx+0x6ca696c8]
  41b8a5:	sti    
  41b8a6:	xchg   edx,eax
  41b8a7:	mov    al,ds:0xb779df57
  41b8ac:	loopne 0x41b91d
  41b8ae:	add    eax,ecx
  41b8b0:	cmp    al,0x15
  41b8b2:	push   eax
  41b8b3:	test   al,0xef
  41b8b5:	sti    
  41b8b6:	popa   
  41b8b7:	pop    ebx
  41b8b8:	xchg   edx,edi
  41b8ba:	jo     0x41b8a5
  41b8bc:	cmp    al,0xf5
  41b8be:	outs   dx,DWORD PTR ds:[esi]
  41b8bf:	inc    esi
  41b8c0:	fsubrp st(0),st
  41b8c2:	das    
  41b8c3:	sbb    esp,DWORD PTR [ecx+0x43556ceb]
  41b8c9:	add    eax,DWORD PTR [ecx]
  41b8cb:	sub    eax,0x1c650ed2
  41b8d0:	into   
  41b8d1:	jmp    0x1062:0xdccd196e
  41b8d8:	iret   
  41b8d9:	jmp    0x3c01:0xf3ce941
  41b8e0:	test   eax,0xa7086be3
  41b8e5:	sbb    dh,BYTE PTR [eax+0xc]
  41b8e8:	lods   eax,DWORD PTR ds:[esi]
  41b8e9:	jmp    FWORD PTR [esi+0xe]
  41b8ec:	cdq    
  41b8ed:	out    0x6c,al
  41b8ef:	or     al,0x43
  41b8f1:	sti    
  41b8f2:	outs   dx,DWORD PTR ds:[esi]
  41b8f3:	add    al,0x8d
  41b8f5:	jmp    0xcd6c:0xeb5adf6a
	...
  41b908:	add    BYTE PTR [eax],al
  41b90a:	add    BYTE PTR [eax+ecx*8],bh
  41b90d:	add    cl,ch
  41b90f:	cmp    al,0xc8
  41b911:	add    cl,ch
  41b913:	cmp    al,0xc8
  41b915:	add    cl,ch
  41b917:	cmp    al,0xc8
  41b919:	add    cl,ch
  41b91b:	cmp    al,0xc8
  41b91d:	add    cl,ch
  41b91f:	cmp    al,0xc8
  41b921:	add    cl,ch
  41b923:	cmp    al,0xc8
  41b925:	add    cl,ch
  41b927:	cmp    al,0xc8
  41b929:	add    cl,ch
  41b92b:	cmp    al,0xc8
  41b92d:	add    ah,cl
  41b92f:	or     edi,DWORD PTR [ebp+ecx*8-0x34]
  41b933:	add    edi,DWORD PTR [ebp+ecx*8-0x34]
  41b937:	sti    
  41b938:	jnp    0x41b907
  41b93a:	int3   
  41b93b:	mov    al,BYTE PTR [ebx-0x13]
  41b93e:	push   ecx
  41b93f:	les    eax,FWORD PTR [ecx+ecx*1]
  41b942:	mov    al,BYTE PTR [edi+0x40]
  41b945:	dec    esi
  41b946:	push   DWORD PTR [esp+eiz*2+0x436ac35e]
  41b94d:	in     eax,dx
  41b94e:	push   ecx
  41b94f:	adc    DWORD PTR [edi],edx
  41b951:	xor    cl,cl
  41b953:	sbb    eax,DWORD PTR [ebx+0x72]
  41b956:	xor    BYTE PTR [ebp+esi*8-0x33d674f4],dh
  41b95d:	xchg   DWORD PTR [esi+0x47],eax
  41b960:	inc    ecx
  41b961:	inc    esi
  41b962:	cld    
  41b963:	(bad)  
  41b964:	in     eax,dx
  41b965:	and    BYTE PTR [ebx+0x6b3c4851],cl
  41b96b:	or     eax,edi
  41b96d:	cmp    BYTE PTR [edi],0x0
	...
  41b97c:	add    BYTE PTR [eax],al
  41b97e:	add    al,0xf4
  41b980:	(bad)  
  41b981:	jmp    0xc62:0x8b5b0e66
  41b988:	ror    ah,0xa
  41b98b:	inc    ebx
  41b98c:	in     eax,dx
  41b98d:	sub    DWORD PTR [ebx-0x5d],0xffffff87
  41b991:	inc    ebp
  41b992:	inc    edi
  41b993:	inc    ecx
  41b994:	inc    esi
  41b995:	loopne 0x41b94b
  41b997:	cld    
  41b998:	loopne 0x41b925
  41b99a:	jmp    0x563f:0x7b510067
  41b9a1:	in     al,0xc4
  41b9a3:	add    esp,ebp
  41b9a5:	mov    esi,DWORD PTR [edi-0x10]
  41b9a8:	dec    DWORD PTR [edi+esi*1+0x3f]
  41b9ac:	dec    esi
  41b9ad:	clc    
  41b9ae:	les    edx,FWORD PTR [ebx]
  41b9b0:	stc    
  41b9b1:	mov    edi,DWORD PTR [ebp-0x5c]
  41b9b4:	inc    DWORD PTR [edi+esi*1+0x3f]
  41b9b8:	inc    esi
  41b9b9:	call   0x8c3ab572
  41b9be:	mov    gs,WORD PTR [eax+0x3f4754ff]
  41b9c4:	push   esi
  41b9c5:	lock mov ah,0x3
  41b9c8:	stc    
  41b9c9:	mov    esi,DWORD PTR [edi-0x34]
  41b9cc:	dec    DWORD PTR [edi+eax*2+0x3f]
  41b9d0:	dec    esi
  41b9d1:	cld    
  41b9d2:	clc    
  41b9d3:	add    esi,ebp
  41b9d5:	add    BYTE PTR [edi],bh
  41b9d7:	enter  0xeb00,0x36
  41b9db:	inc    ecx
  41b9dc:	push   esi
  41b9dd:	hlt    
  41b9de:	mov    esp,0x89028a
	...
  41b9ef:	add    BYTE PTR [eax],al
  41b9f1:	or     dh,BYTE PTR [eax+ecx*4+0x45]
  41b9f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9f6:	inc    ecx
  41b9f7:	dec    esi
  41b9f8:	hlt    
  41b9f9:	add    BYTE PTR fs:[ecx],bl
  41b9fc:	jae    0x41ba05
  41b9fe:	inc    ecx
  41b9ff:	push   esi
  41ba00:	lock (bad) 
  41ba02:	retf   0x44ff
  41ba05:	aaa    
  41ba06:	aas    
  41ba07:	inc    esi
  41ba08:	fcom   QWORD PTR ds:0x3dac68be
  41ba0e:	or     BYTE PTR [ecx],al
  41ba10:	mov    eax,DWORD PTR [edx]
  41ba12:	mov    WORD PTR [edx-0x18],ss
  41ba15:	(bad)  
  41ba17:	add    BYTE PTR [eax],al
  41ba19:	mov    esp,0x7f850d84
  41ba1e:	repz pop ss
  41ba20:	mov    ebp,edx
  41ba22:	jae    0x41b9ac
  41ba24:	inc    ebp
  41ba25:	push   edi
  41ba26:	mov    ebp,0x3eef0cb3
  41ba2b:	dec    esi
  41ba2c:	in     al,dx
  41ba2d:	les    edx,FWORD PTR [edx]
  41ba2f:	in     eax,dx
  41ba30:	mov    edi,DWORD PTR [edx+0x6c]
  41ba33:	mov    BYTE PTR [edi+ecx*8],al
  41ba36:	enter  0x845,0x14
  41ba3a:	mov    ebx,0x490f4d87
  41ba3f:	ret    0xc604
  41ba42:	cli    
  41ba43:	lock jmp 0x41ba29
  41ba46:	mov    eax,0xb1a8bc0
  41ba4b:	ror    ah,0xb
  41ba4e:	jl     0x41ba1d
  41ba50:	int3   
  41ba51:	add    edi,DWORD PTR [ebp+ecx*8-0x34]
	...
  41ba61:	add    BYTE PTR [eax],al
  41ba63:	add    bl,bh
  41ba65:	jnp    0x41ba34
  41ba67:	int3   
  41ba68:	mov    al,BYTE PTR [ecx-0x13]
  41ba6b:	sub    ebx,0xffffffcf
  41ba6e:	call   0xfcae8a78
  41ba73:	mov    DWORD PTR [edx-0x28ba77a0],eax
  41ba79:	pop    ss
  41ba7a:	jmp    0xfcae72a8
  41ba7f:	cmp    DWORD PTR [ebx-0x3d],0xffffff9f
  41ba83:	hlt    
  41ba84:	cs pop es
  41ba86:	add    DWORD PTR [eax-0x1d],ebp
  41ba89:	leave  
  41ba8a:	inc    eax
  41ba8b:	add    ah,al
  41ba8d:	cli    
  41ba8e:	call   0xf5144ae4
  41ba93:	jno    0x41ba93
  41ba95:	(bad)  
  41ba96:	lahf   
  41ba97:	clc    
  41ba98:	push   cs
  41ba99:	pop    es
  41ba9a:	add    DWORD PTR [edx+0x3f],ebp
  41ba9d:	loop   0x41ba9f
  41ba9f:	push   0x40c983
  41baa4:	push   0xfe71f8d2
  41baa9:	(bad)  
  41baaa:	mov    DWORD PTR [ebp+0x67],eax
  41baad:	test   BYTE PTR [esi-0x4],al
  41bab0:	aas    
  41bab1:	enter  0x0,0x54
  41bab5:	mov    esi,0x48435587
  41baba:	mov    edi,0xfd15c601
  41babf:	xor    DWORD PTR [edx+0x5e73096c],0x3f
  41bac6:	inc    esi
  41bac7:	cld    
	...
  41bad4:	add    BYTE PTR [eax],al
  41bad6:	add    BYTE PTR [esp+edi*4+0x83d8c85],dh
  41badd:	add    DWORD PTR [ecx-0x3c],edx
  41bae0:	adc    eax,0xd60852e9
  41bae5:	hlt    
  41bae6:	jno    0x41bb66
  41bae8:	enter  0x4d87,0xfb
  41baec:	inc    ecx
  41baed:	add    eax,0x41f9eb8d
  41baf2:	add    ah,dl
  41baf4:	cwde   
  41baf5:	mov    ch,ah
  41baf7:	add    BYTE PTR [edi+0x7d0bcccd],0xcd
  41bafe:	int3   
  41baff:	add    edi,DWORD PTR [ebp-0x33]
  41bb02:	int3   
  41bb03:	sti    
  41bb04:	jl     0x41bad3
  41bb06:	int3   
  41bb07:	push   0x3f
  41bb09:	in     eax,dx
  41bb0a:	mov    eax,ds:0x41f60f
  41bb0f:	jno    0x41bb50
  41bb11:	inc    ecx
  41bb12:	xor    BYTE PTR [ebp+edi*8+0xb63e08],dh
  41bb19:	or     DWORD PTR [ebp+0x7c],ebx
  41bb1c:	jl     0x41baeb
  41bb1e:	int3   
  41bb1f:	cmp    DWORD PTR [ebp+ecx*8-0x34],0x7b
  41bb24:	jl     0x41baf3
  41bb26:	int3   
  41bb27:	jmp    0x50bc:0x28bed3e
  41bb2e:	mov    eax,DWORD PTR [edx]
  41bb30:	rcl    BYTE PTR [ecx-0x1],0x52
  41bb34:	je     0x41bba8
  41bb36:	inc    ecx
  41bb37:	aas    
  41bb38:	or     eax,0xccc0
	...
  41bb49:	add    BYTE PTR [ebx-0x7c333284],cl
  41bb4f:	jl     0x41bb1e
  41bb51:	int3   
  41bb52:	jnp    0x41bbd0
  41bb54:	int    0xcc
  41bb56:	jmp    0x66c0:0x2b83ed3e
  41bb5d:	add    BYTE PTR [ebp+0x3ddc68c8],ah
  41bb63:	or     BYTE PTR [ecx],al
  41bb65:	dec    DWORD PTR [edx+0x70]
  41bb68:	jb     0x41bbab
  41bb6a:	aas    
  41bb6b:	inc    ecx
  41bb6c:	inc    esi
  41bb6d:	clc    
  41bb6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb6f:	pusha  
  41bb70:	(bad)  
  41bb71:	aas    
  41bb72:	aas    
  41bb73:	aas    
  41bb74:	inc    esi
  41bb75:	clc    
  41bb76:	outs   dx,DWORD PTR ds:[esi]
  41bb77:	pusha  
  41bb78:	mov    bh,0xff
  41bb7a:	clc    
  41bb7b:	push   0xffffff80
  41bb7d:	les    eax,FWORD PTR [edi+0x41]
  41bb80:	inc    esi
  41bb81:	cld    
  41bb82:	mov    ah,0xfc
  41bb84:	adc    BYTE PTR [ecx-0x4c],dl
  41bb87:	adc    al,0xd
  41bb89:	push   edx
  41bb8a:	les    eax,FWORD PTR [ecx+ecx*1]
  41bb8d:	push   eax
  41bb8e:	rcl    BYTE PTR [edi*8-0x3ff31d75],1
  41bb95:	int3   
  41bb96:	push   0x3f
  41bb98:	in     eax,dx
  41bb99:	push   ecx
  41bb9a:	add    BYTE PTR [edi*8+0xc83f00],0xeb
  41bba2:	ss aas 
  41bba4:	inc    esi
  41bba5:	cld    
  41bba6:	mov    esp,0x2890287
  41bbab:	ins    BYTE PTR es:[edi],dx
  41bbac:	mov    BYTE PTR [ebp+0x0],cl
	...
  41bbbb:	add    BYTE PTR [eax],al
  41bbbd:	xchg   ebx,eax
  41bbbe:	scas   al,BYTE PTR es:[edi]
  41bbbf:	dec    ebp
  41bbc0:	adc    BYTE PTR [ebx+ecx*8],cl
  41bbc3:	xchg   DWORD PTR [ebp+0x37],edx
  41bbc6:	(bad)  
  41bbc7:	push   ebp
  41bbc8:	cld    
  41bbc9:	dec    eax
  41bbca:	xor    bh,bh
  41bbcc:	mov    al,BYTE PTR [edx]
  41bbce:	mov    esp,0xba6b4cff
  41bbd3:	mov    dl,0x11
  41bbd5:	and    al,0x86
  41bbd7:	jne    0x41bbe0
  41bbd9:	xchg   edi,eax
  41bbda:	enter  0x0,0x3f
  41bbde:	pop    edi
  41bbdf:	add    eax,0xc0b66feb
  41bbe4:	mov    ebx,DWORD PTR [edx+0xc]
  41bbe7:	ror    ah,0xb
  41bbea:	jge    0x41bbb9
  41bbec:	int3   
  41bbed:	add    edi,DWORD PTR [ebp-0x33]
  41bbf0:	int3   
  41bbf1:	sti    
  41bbf2:	jl     0x41bbc1
  41bbf4:	int3   
  41bbf5:	mov    bh,BYTE PTR ds:0xc837b9ed
  41bbfb:	add    BYTE PTR [eax],al
  41bbfd:	fwait
  41bbfe:	cmp    eax,0x183a890a
  41bc03:	outs   dx,DWORD PTR ds:[esi]
  41bc04:	inc    ecx
  41bc05:	aas    
  41bc06:	or     eax,eax
  41bc08:	int3   
  41bc09:	or     edi,DWORD PTR [ebp-0x33]
  41bc0c:	int3   
  41bc0d:	add    edi,DWORD PTR [ebp-0x33]
  41bc10:	int3   
  41bc11:	sti    
  41bc12:	jl     0x41bbe1
  41bc14:	int3   
  41bc15:	mov    bh,BYTE PTR ds:0xd8eb83ed
  41bc1b:	xchg   DWORD PTR [ebp+0x47],eax
  41bc1e:	inc    ebp
  41bc1f:	jns    0x41bc25
	...
  41bc2d:	add    BYTE PTR [eax],al
  41bc2f:	add    BYTE PTR [edi],bh
  41bc31:	mov    ecx,0xc83f8884
  41bc36:	add    BYTE PTR [ebx+0x5187c00a],cl
  41bc3c:	cmp    eax,DWORD PTR [ebp-0x19]
  41bc3f:	or     BYTE PTR [esi-0x54aa75a2],cl
  41bc45:	cmp    eax,0x88bc0846
  41bc4a:	or     DWORD PTR [ecx+0x45c477fa],ecx
  41bc50:	mov    ecx,eax
  41bc52:	add    BYTE PTR [eax],al
  41bc54:	aas    
  41bc55:	pop    ebp
  41bc56:	or     cl,BYTE PTR [ebx-0x3e7f93f6]
  41bc5c:	ds aas 
  41bc5e:	dec    esi
  41bc5f:	cld    
  41bc60:	mov    ah,0x13
  41bc62:	std    
  41bc63:	cmp    ecx,DWORD PTR [edx]
  41bc65:	je     0x41bcd7
  41bc67:	inc    esi
  41bc68:	les    eax,FWORD PTR [ebx]
  41bc6a:	std    
  41bc6b:	mov    eax,DWORD PTR [edx]
  41bc6d:	js     0x41bc7b
  41bc6f:	mov    bh,0x33
  41bc71:	pop    es
  41bc72:	ret    0x33fa
  41bc75:	inc    ebp
  41bc76:	test   DWORD PTR [ebx],0x4587b6b2
  41bc7c:	xor    edi,DWORD PTR ds:0x3138f04e
  41bc82:	adc    eax,0xfc65be41
  41bc87:	(bad)  
  41bc89:	enter  0x5589,0x17
  41bc8d:	cmp    eax,0xfab40846
  41bc92:	or     al,0x3
	...
  41bca0:	add    BYTE PTR [eax],al
  41bca2:	add    BYTE PTR [edi],dh
  41bca4:	cmp    eax,0xc3c4f856
  41bca9:	adc    DWORD PTR [ebx],eax
  41bcab:	jp     0x41bc85
  41bcad:	xchg   DWORD PTR [ebp+0x37],ecx
  41bcb0:	cmp    eax,0xd73c0c56
  41bcb5:	xchg   DWORD PTR [ebp-0x29],ecx
  41bcb8:	ds add eax,0x881ee40a
  41bcbe:	push   ebp
  41bcbf:	aaa    
  41bcc0:	cmp    eax,0x63c0846
  41bcc5:	add    eax,0xe9c00289
  41bcca:	imul   esi,DWORD PTR [eax-0x5d740398],0xa
  41bcd1:	ror    ah,0xa
  41bcd4:	cmp    eax,0xa3ab83ed
  41bcd9:	xchg   DWORD PTR [ebp+0x47],eax
  41bcdc:	aas    
  41bcdd:	inc    esi
  41bcde:	in     al,0xb4
  41bce0:	cli    
  41bce1:	in     al,0x8b
  41bce3:	jmp    0x563f:0x3b510063
  41bcea:	call   0x8c2abfb3
  41bcef:	mov    bh,0x47
  41bcf1:	add    DWORD PTR [eax],eax
  41bcf3:	aas    
  41bcf4:	aas    
  41bcf5:	dec    esi
  41bcf6:	lock mov esp,0x4000f0ea
  41bcfc:	inc    esp
  41bcfd:	clc    
  41bcfe:	add    BYTE PTR [edi],bh
  41bd00:	enter  0x5587,0x37
  41bd04:	lds    edx,FWORD PTR [ebp-0x10]
	...
  41bd13:	add    BYTE PTR [eax],al
  41bd15:	add    dh,al
  41bd17:	std    
  41bd18:	loopne 0x41bca5
  41bd1a:	jp     0x41bd84
  41bd1c:	cmp    BYTE PTR [eax+0x4f],0xc8
  41bd20:	or     eax,DWORD PTR [edx+ebx*1-0x5affff37]
  41bd27:	enter  0x66,0xc4
  41bd2b:	adc    eax,0xd0728be1
  41bd30:	call   DWORD PTR [eax+0x33]
  41bd33:	cli    
  41bd34:	sti    
  41bd35:	adc    eax,0x41d9f7
  41bd3a:	(bad)  
  41bd3b:	or     eax,0x68828bfd
  41bd40:	cmp    BYTE PTR [eax],0x3f
  41bd43:	fcomp  QWORD PTR [ecx]
  41bd45:	mov    ecx,DWORD PTR [edx+0x47558868]
  41bd4b:	retf   
  41bd4c:	adc    DWORD PTR [ecx+0x45887472],ecx
  41bd52:	fist   WORD PTR [ebx+0x4e]
  41bd55:	or     BYTE PTR [eax+edx*1],bh
  41bd58:	adc    DWORD PTR [ecx+0x17e85c02],ecx
  41bd5e:	mov    ah,0xfd
  41bd60:	loopne 0x41bced
  41bd62:	cli    
  41bd63:	iret   
  41bd64:	inc    DWORD PTR [ecx+0x2f]
  41bd67:	push   ecx
  41bd68:	inc    esi
  41bd69:	hlt    
  41bd6a:	les    edx,FWORD PTR ds:0xcff28be1
  41bd70:	call   DWORD PTR [eax]
  41bd72:	mov    dh,0xfd
  41bd74:	in     al,dx
  41bd75:	mov    DWORD PTR [edx],0x160
	...
  41bd87:	add    BYTE PTR [eax],al
  41bd89:	aas    
  41bd8a:	enter  0x4587,0x5f
  41bd8e:	dec    ebx
  41bd8f:	jns    0x41bda1
  41bd91:	aas    
  41bd92:	fmul   QWORD PTR [ebx]
  41bd94:	mov    ecx,DWORD PTR [edx]
  41bd96:	push   0xdc3f3980
  41bd9b:	add    eax,edi
  41bd9d:	add    ah,BYTE PTR [eax+0x2]
  41bda0:	add    BYTE PTR [edi],bh
  41bda2:	enter  0x5587,0x33
  41bda6:	dec    ebx
  41bda7:	aaa    
  41bda8:	add    BYTE PTR [ebx+0x334587e9],ch
  41bdae:	push   ebx
  41bdaf:	or     DWORD PTR [ecx+0xc81e],eax
  41bdb5:	mov    edi,0x6a8b1cdb
  41bdba:	pop    esp
  41bdbb:	mov    BYTE PTR [edx],al
  41bdbd:	bound  esp,QWORD PTR [edi-0x4]
  41bdc0:	inc    DWORD PTR [eax-0x4b27808]
  41bdc6:	clc    
  41bdc7:	call   0xfca8b081
  41bdcc:	add    DWORD PTR [ebx],0xffffffd0
  41bdcf:	mov    DWORD PTR [ebp+0x3],eax
  41bdd2:	jae    0x41bdf1
  41bdd4:	mov    esi,DWORD PTR [edx+0x5c]
  41bdd7:	mov    BYTE PTR [edx],al
  41bdd9:	les    edx,FWORD PTR [ecx+ecx*1]
  41bddc:	lea    esi,[ebx-0x30]
  41bddf:	(bad)  
  41bde0:	push   ecx
  41bde1:	mov    ah,0xc
  41bde3:	std    
  41bde4:	push   eax
  41bde5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bde6:	ds (bad) 
  41bde8:	push   DWORD PTR [eax+0x8c54a]
	...
  41bdfa:	add    BYTE PTR [eax],al
  41bdfc:	mov    dh,0xc
  41bdfe:	fisttp QWORD PTR [ebx+0x55885bf2]
  41be04:	jnp    0x41be56
  41be06:	adc    cl,BYTE PTR [ebx-0x3f7fa406]
  41be0c:	inc    ebx
  41be0d:	push   ecx
  41be0e:	inc    esi
  41be0f:	hlt    
  41be10:	mov    ah,0x14
  41be12:	in     eax,dx
  41be13:	cmp    DWORD PTR [esi-0x35],0xffffff89
  41be17:	dec    ebp
  41be18:	arpl   WORD PTR [edx-0x6c],si
  41be1b:	mov    edx,DWORD PTR [edx]
  41be1d:	push   0x514bc280
  41be22:	push   esi
  41be23:	loopne 0x41be8b
  41be25:	aad    0xfb
  41be27:	call   DWORD PTR [eax+0x52]
  41be2a:	out    0x5d,al
  41be2c:	jl     0x41bdc1
  41be2e:	int    0xcc
  41be30:	jmp    0x68d1:0x2b83ed52
  41be37:	lock cmp eax,0x52ff0108
  41be3d:	enter  0x416e,0x3f
  41be41:	dec    edi
  41be42:	inc    esi
  41be43:	clc    
  41be44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be45:	fs (bad) 
  41be47:	aas    
  41be48:	aas    
  41be49:	push   ecx
  41be4a:	inc    esi
  41be4b:	clc    
  41be4c:	outs   dx,DWORD PTR ds:[esi]
  41be4d:	jo     0x41be8a
  41be4f:	std    
  41be50:	add    BYTE PTR [esi-0x80],ah
  41be53:	les    eax,FWORD PTR [edi+0x4f]
  41be56:	inc    esi
  41be57:	cld    
  41be58:	les    edx,FWORD PTR [ebx]
  41be5a:	adc    DWORD PTR [ecx-0x4c],edx
  41be5d:	sti    
  41be5e:	or     al,0x52
	...
  41be6c:	add    BYTE PTR [eax],al
  41be6e:	add    BYTE PTR [ebx+ecx*1-0x427aff7],dh
  41be75:	cld    
  41be76:	mov    ebx,edx
  41be78:	add    eax,eax
  41be7a:	int3   
  41be7b:	sti    
  41be7c:	xchg   esp,eax
  41be7d:	int    0xcc
  41be7f:	push   0x51
  41be81:	in     eax,dx
  41be82:	mov    eax,ds:0x41da1b
  41be87:	jns    0x41be51
  41be89:	push   0x6efc528b
  41be8e:	inc    ecx
  41be8f:	aas    
  41be90:	dec    edi
  41be91:	push   ecx
  41be92:	add    ebp,ecx
  41be94:	mov    DWORD PTR [ecx-0x3ffcc5b0],ecx
  41be9a:	int3   
  41be9b:	jnp    0x41be31
  41be9d:	int    0xcc
  41be9f:	jmp    0xa1d4:0x6b83ed50
  41bea6:	push   eax
  41bea7:	in     eax,dx
  41bea8:	push   es
  41bea9:	add    DWORD PTR [ebx+0x3ec9998d],ecx
  41beaf:	mov    ah,0x8
  41beb1:	xor    DWORD PTR [ebx+0x3ecf516d],ecx
  41beb7:	les    edx,FWORD PTR [eax]
  41beb9:	or     eax,0x4e4f6d8b
  41bebe:	hlt    
  41bebf:	mov    ah,0xb
  41bec1:	cmc    
  41bec2:	mov    eax,DWORD PTR [edi+0x374d89d4]
  41bec8:	push   ecx
  41bec9:	push   esi
  41beca:	clc    
  41becb:	mov    dh,0xfa
  41becd:	cld    
  41bece:	mov    eax,0xc83e
	...
  41bedf:	add    BYTE PTR [eax],al
  41bee1:	add    dl,al
  41bee3:	xchg   DWORD PTR [ebp+0x44],esi
  41bee6:	mov    esp,0x9200f8e2
  41beeb:	int3   
  41beec:	das    
  41beed:	rcl    BYTE PTR [esp+eiz*4],0x87
  41bef1:	dec    ebp
  41bef2:	not    DWORD PTR [eax+0x52]
  41bef5:	sbb    BYTE PTR [ebx+edi*8],dh
  41bef8:	or     BYTE PTR [ebp+0x46],dh
  41befb:	push   ecx
  41befc:	inc    esi
  41befd:	clc    
  41befe:	mov    ah,0x12
  41bf00:	or     eax,0x87c48789
  41bf05:	push   ebp
  41bf06:	xlat   BYTE PTR ds:[ebx]
  41bf07:	push   eax
  41bf08:	inc    esi
  41bf09:	adc    BYTE PTR [esi+0x3eb81909],dh
  41bf0f:	enter  0x0,0xa4
  41bf13:	mov    edi,0x50b74d87
  41bf18:	adc    cl,BYTE PTR [ecx+0x45886012]
  41bf1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf1f:	mov    al,ds:0xcc12fc45
  41bf24:	das    
  41bf25:	shl    BYTE PTR [ebx+ecx*8-0x77b34c19],0x88
  41bf2d:	in     eax,0xe2
  41bf2f:	mov    ch,cl
  41bf31:	int3   
  41bf32:	mov    edx,DWORD PTR [ebx-0x6c7c3333]
  41bf38:	int    0xcc
  41bf3a:	jnp    0x41becf
  41bf3c:	int    0xcc
  41bf3e:	or     dl,BYTE PTR [ecx-0x13]
  41bf41:	sub    DWORD PTR [ebx-0x41],0xffffffc3
  41bf45:	inc    ebp
	...
  41bf52:	add    BYTE PTR [eax],al
  41bf54:	add    BYTE PTR [edi-0x39],dl
  41bf57:	xor    BYTE PTR [eax],al
  41bf59:	aas    
  41bf5a:	lock add al,0x3
  41bf5d:	inc    edi
  41bf5f:	mov    eax,ds:0x109ad3c
  41bf64:	push   eax
  41bf65:	daa    
  41bf66:	clc    
  41bf67:	cld    
  41bf68:	jmp    FWORD PTR [eax]
  41bf6a:	dec    eax
  41bf6b:	lds    ecx,FWORD PTR [eax]
  41bf6d:	mov    dh,0xd
  41bf6f:	cmc    
  41bf70:	push   0x7f
  41bf72:	dec    edi
  41bf73:	dec    esi
  41bf74:	clc    
  41bf75:	outs   dx,BYTE PTR ds:[esi]
  41bf76:	dec    edi
  41bf77:	push   ss
  41bf78:	sbb    al,0x8d
  41bf7a:	or     DWORD PTR [ecx],eax
  41bf7c:	mov    edi,DWORD PTR [ebp-0x8]
  41bf7f:	push   eax
  41bf80:	push   0x3f
  41bf82:	arpl   WORD PTR [esi-0xc],dx
  41bf85:	pushf  
  41bf86:	mov    esp,0x473f416e
  41bf8b:	ds adc al,0x6d
  41bf8e:	or     DWORD PTR [ecx],eax
  41bf90:	add    BYTE PTR [edx-0x35],dl
  41bf93:	mov    eax,0xc83f02
  41bf98:	jmp    0x41bfef
  41bf9a:	dec    edi
  41bf9b:	push   cs
  41bf9c:	add    BYTE PTR ds:0xa890108,bh
  41bfa2:	pop    eax
  41bfa3:	imul   eax,DWORD PTR [eax],0x6800c92e
  41bfa9:	aas    
  41bfaa:	mov    BYTE PTR [eax+0x0],0xb4
  41bfae:	mov    ebp,0xc7fe7214
  41bfb3:	add    edx,0xc63f
	...
  41bfc5:	add    BYTE PTR [eax],al
  41bfc7:	add    ch,ch
  41bfc9:	outs   dx,DWORD PTR ds:[esi]
  41bfca:	fwait
  41bfcb:	inc    BYTE PTR [eax+0x4bc48063]
  41bfd1:	and    BYTE PTR [ecx],al
  41bfd3:	add    bh,bh
  41bfd5:	(bad)  
  41bfd6:	sub    eax,0xc83d00
  41bfdb:	mov    esi,DWORD PTR [edx]
  41bfdd:	mov    esp,0xaf3f416e
  41bfe2:	enter  0x4289,0xc
  41bfe6:	outs   dx,DWORD PTR ds:[esi]
  41bfe7:	inc    ecx
  41bfe8:	aas    
  41bfe9:	dec    edi
  41bfea:	push   ss
  41bfeb:	inc    esp
  41bfec:	int    0x8
  41bfee:	add    DWORD PTR [edx-0x22],edx
  41bff1:	mov    ebx,0xf83f416e
  41bff6:	xchg   DWORD PTR [ebp+0x2f],ecx
  41bff9:	stc    
  41bffa:	call   0xfca4e39c
  41bfff:	add    DWORD PTR [ebx],0xffffffd4
  41c002:	xchg   DWORD PTR ds:0x41d62b,edx
  41c008:	cmp    al,0xfd
  41c00a:	or     BYTE PTR [ecx+0x5588706a],cl
  41c010:	out    0x62,eax
  41c012:	fisttp WORD PTR [ebx-0x333ffb26]
  41c018:	sti    
  41c019:	xchg   ebx,eax
  41c01a:	int    0xcc
  41c01c:	mov    cl,BYTE PTR [edi-0x13]
  41c01f:	mov    eax,DWORD PTR [edx+0x434537d0]
  41c025:	xlat   BYTE PTR ds:[ebx]
  41c026:	add    ecx,DWORD PTR [ebx+0x5e7d082]
	...
  41c038:	add    BYTE PTR [eax],al
  41c03a:	add    ah,dl
  41c03c:	mov    BYTE PTR [edi-0x3ffab4bb],0xcc
  41c043:	adc    DWORD PTR [ebx-0x6c843333],0xffffffcd
  41c04a:	int3   
  41c04b:	or     cl,BYTE PTR [edi-0x13]
  41c04e:	sub    DWORD PTR [ebx-0x6cba3c4d],0xffffffc7
  41c055:	nop
  41c056:	add    DWORD PTR [edi],edi
  41c058:	dec    edi
  41c059:	inc    esi
  41c05a:	or     BYTE PTR [esi+0xa8bd90c],dh
  41c060:	or     BYTE PTR [eax+0x51c74755],0x3c
  41c067:	mov    dh,0xfc
  41c069:	loopne 0x41bff6
  41c06b:	cli    
  41c06c:	addr16 or al,0xb7
  41c06f:	pop    es
  41c070:	mov    esp,0x545f5587
  41c075:	inc    ebp
  41c076:	or     ah,BYTE PTR [edi]
  41c078:	push   ecx
  41c079:	inc    esi
  41c07a:	call   0x40417c56
  41c07f:	aas    
  41c080:	dec    ebp
  41c081:	push   cs
  41c082:	cmp    al,0xad
  41c084:	pop    es
  41c085:	add    DWORD PTR [ecx+0x17],edx
  41c088:	adc    bh,al
  41c08a:	jmp    DWORD PTR [eax]
  41c08c:	inc    esi
  41c08d:	lds    ecx,FWORD PTR [eax]
  41c08f:	(bad)  
  41c090:	or     esi,ecx
  41c092:	push   0x7f
  41c094:	lock add BYTE PTR [eax],dh
  41c097:	aas    
  41c098:	enter  0x68,0xaf
  41c09c:	mov    DWORD PTR [eax],0x6a
	...
  41c0ae:	aas    
  41c0af:	popa   
  41c0b0:	push   esi
  41c0b1:	lock (bad) 
  41c0b3:	or     esp,ebp
  41c0b5:	mov    edx,DWORD PTR [edx-0x74bd7798]
  41c0bb:	clc    
  41c0bc:	xchg   DWORD PTR [ebp+0x47],ecx
  41c0bf:	test   DWORD PTR [edi-0x170924ab],0xfc61cac1
  41c0c9:	cmp    ebx,0xffffffd4
  41c0cc:	ret    
  41c0cd:	inc    ebp
  41c0ce:	mov    bl,0xc8
  41c0d0:	add    BYTE PTR [eax],al
  41c0d2:	aas    
  41c0d3:	ins    DWORD PTR es:[edi],dx
  41c0d4:	or     cl,BYTE PTR [ebx-0x3f7fa3fe]
  41c0da:	ds dec edi
  41c0dc:	inc    esi
  41c0dd:	hlt    
  41c0de:	les    edx,FWORD PTR [ebx]
  41c0e0:	loope  0x41c0f1
  41c0e2:	enter  0x2f7,0x39
  41c0e6:	repnz pop ebx
  41c0e8:	jo     0x41c143
  41c0ea:	mov    ah,0xb
  41c0ec:	jmp    0xfdb874
  41c0f1:	je     0x41c0ed
  41c0f3:	dec    esp
  41c0f4:	dec    esi
  41c0f5:	call   0x52a0b6
  41c0fa:	jmp    0x41c09f
  41c0fc:	xchg   DWORD PTR [ebp+0x67],edx
  41c0ff:	dec    ebp
  41c100:	aas    
  41c101:	adc    ah,al
  41c103:	adc    esp,ecx
  41c105:	mov    ebp,esi
  41c107:	mov    ds:0x612f448d,eax
  41c10c:	mov    BYTE PTR [ebp+0x1f],cl
  41c10f:	xchg   ebp,eax
  41c110:	into   
  41c111:	test   DWORD PTR [eax],0x0
	...
  41c11f:	add    BYTE PTR [eax],al
  41c121:	scas   al,BYTE PTR es:[edi]
  41c122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c123:	xchg   DWORD PTR [ebp+0x1f],edx
  41c126:	shr    DWORD PTR [ebx-0x78079cbe],1
  41c12c:	inc    ebp
  41c12d:	daa    
  41c12e:	dec    ebp
  41c12f:	dec    esi
  41c130:	or     BYTE PTR [eax+edx*1],bh
  41c133:	adc    eax,0xe8fab451
  41c138:	mov    edi,DWORD PTR [edx+0x6c]
  41c13b:	add    BYTE PTR [edx+0x4b],al
  41c13e:	clc    
  41c13f:	call   0xfca2b399
  41c144:	add    DWORD PTR [ebx],0xffffffd4
  41c147:	xchg   DWORD PTR [ebp-0x29],ecx
  41c14a:	inc    esp
  41c14b:	ret    0xc628
  41c14e:	adc    ch,cl
  41c150:	jmp    0x41c0ff
  41c152:	dec    esp
  41c153:	push   esi
  41c154:	in     al,0x6d
  41c156:	jo     0x41c163
  41c158:	cld    
  41c159:	shl    BYTE PTR [eax-0x80],0xc4
  41c15d:	inc    ebx
  41c15e:	lock and al,0x3
  41c161:	inc    edi
  41c163:	mov    eax,ds:0x1072d3c
  41c168:	push   eax
  41c169:	xchg   edi,eax
  41c16a:	dec    esp
  41c16b:	idiv   edi
  41c16d:	cwde   
  41c16e:	inc    esp
  41c16f:	lds    ecx,FWORD PTR [eax]
  41c171:	(bad)  
  41c172:	or     bl,ch
  41c174:	or     DWORD PTR [edx-0x60],0x6e
  41c178:	inc    ecx
  41c179:	aas    
  41c17a:	enter  0xa75,0xc4
  41c17e:	shl    BYTE PTR [eax],cl
  41c180:	jb     0x41c180
  41c182:	(bad)  
  41c183:	push   ecx
  41c184:	inc    DWORD PTR [eax]
	...
  41c192:	add    BYTE PTR [eax],al
  41c194:	adc    al,BYTE PTR [eax+eax*4+0x41d6273d]
  41c19b:	add    BYTE PTR [edi],bh
  41c19d:	fistp  DWORD PTR [edx+ebp*2]
  41c1a0:	(bad)  
  41c1a1:	out    dx,eax
  41c1a2:	add    BYTE PTR [eax],dh
  41c1a4:	aas    
  41c1a5:	enter  0x5587,0x43
  41c1a9:	cmc    
  41c1aa:	xchg   DWORD PTR [ebp+0x1f],eax
  41c1ad:	push   esp
  41c1ae:	dec    ecx
  41c1af:	xor    al,0x8e
  41c1b1:	pop    edi
  41c1b2:	push   esi
  41c1b3:	lock fdiv QWORD PTR [esi+ebp*2+0x16733f41]
  41c1bb:	push   0x7f
  41c1bd:	lock add BYTE PTR [eax],dh
  41c1c0:	aas    
  41c1c1:	enter  0x5587,0xb
  41c1c5:	sti    
  41c1c6:	data16 add BYTE PTR [eax],al
  41c1c9:	div    al
  41c1cb:	mov    ds:0x41da53,eax
  41c1d0:	mov    esp,0x7e72149d
  41c1d5:	enter  0x7500,0x4a
  41c1d9:	repnz inc eax
  41c1db:	push   0x983f
  41c1e0:	les    eax,FWORD PTR ds:0xc85550fd
  41c1e6:	sti    
  41c1e7:	push   ebp
  41c1e8:	iret   
  41c1e9:	sub    edx,DWORD PTR ds:0x87c7fe72
  41c1ef:	dec    ebp
  41c1f0:	fwait
  41c1f1:	push   ecx
  41c1f2:	dec    esi
  41c1f3:	fdiv   DWORD PTR [ebp+esi*8+0x8bd8]
	...
  41c206:	add    dl,bh
  41c208:	jg     0x41c20a
  41c20a:	inc    edx
  41c20b:	pop    ebx
  41c20c:	push   ecx
  41c20d:	inc    esi
  41c20e:	loopne 0x41c1d4
  41c210:	or     eax,0xf5b451fd
  41c215:	in     al,0x52
  41c217:	fidiv  WORD PTR [esi+ebp*2-0x1707c0bf]
  41c21e:	xchg   ebp,eax
  41c21f:	jae    0x41c280
  41c221:	cld    
  41c222:	add    DWORD PTR [ebx+0x5f4d87cc],0x4b
  41c229:	mov    edx,0xc83fa4
  41c22e:	add    bl,cl
  41c230:	mov    eax,ds:0x535f5587
  41c235:	inc    esi
  41c236:	fdivr  DWORD PTR [edx+ecx*2]
  41c239:	mov    eax,ds:0x89c83f00
  41c23e:	inc    ebp
  41c23f:	and    edx,DWORD PTR [ebx+0x4e]
  41c242:	loopne 0x41c1f8
  41c244:	mov    ah,0x14
  41c246:	jb     0x41c2c6
  41c248:	enter  0x5127,0x53
  41c24c:	push   ecx
  41c24d:	push   ss
  41c24e:	inc    esp
  41c24f:	lea    ecx,[ecx]
  41c251:	add    DWORD PTR [ecx+0x41da83],esp
  41c257:	outs   dx,DWORD PTR ds:[esi]
  41c258:	push   ebx
  41c259:	push   cs
  41c25a:	adc    al,0x6d
  41c25c:	or     DWORD PTR [ecx],eax
  41c25e:	push   ecx
  41c25f:	(bad)  
  41c260:	hlt    
  41c261:	in     al,dx
  41c262:	push   edx
  41c263:	xlat   BYTE PTR ds:[ebx]
  41c264:	fdivrp st(6),st
  41c266:	jmp    eax
  41c268:	dec    edx
  41c269:	lds    ecx,FWORD PTR [eax+eax*1]
	...
  41c278:	add    BYTE PTR [eax],al
  41c27a:	les    eax,FWORD PTR [ecx+eiz*8]
  41c27d:	mov    eax,DWORD PTR [edx-0x4c]
  41c280:	outs   dx,BYTE PTR ds:[esi]
  41c281:	inc    ecx
  41c282:	aas    
  41c283:	retf   
  41c284:	dec    eax
  41c285:	sub    BYTE PTR [esi-0x18dab34],dh
  41c28b:	(bad)  
  41c28c:	jg     0x41c2cb
  41c28e:	ja     0x41c26a
  41c290:	inc    ecx
  41c291:	add    BYTE PTR [edi],bh
  41c293:	aad    0x2d
  41c295:	mov    ecx,DWORD PTR [edx-0x4c]
  41c298:	outs   dx,BYTE PTR ds:[esi]
  41c299:	inc    ecx
  41c29a:	aas    
  41c29b:	cli    
  41c29c:	mov    eax,ds:0x1090d54
  41c2a1:	push   eax
  41c2a2:	mov    ah,0xcc
  41c2a4:	xor    BYTE PTR [edx-0x2],dh
  41c2a7:	(bad)  
  41c2a8:	push   ecx
  41c2a9:	call   0x3e1ea5
  41c2ae:	mov    esp,0x528b0d83
  41c2b3:	mov    ah,0x6e
  41c2b5:	inc    ecx
  41c2b6:	aas    
  41c2b7:	cli    
  41c2b8:	call   0xfca01906
  41c2bd:	cmp    DWORD PTR [ebx-0x3d],0xffffffe7
  41c2c1:	popa   
  41c2c2:	xlat   BYTE PTR ds:[ebx]
  41c2c3:	xchg   ebx,eax
  41c2c4:	(bad)  
  41c2c5:	aas    
  41c2c6:	aas    
  41c2c7:	sub    DWORD PTR ds:0x50c87e72,edi
  41c2cd:	call   0x3e225d
  41c2d2:	mov    esp,0x7a890984
  41c2d7:	je     0x41c261
  41c2d9:	or     eax,0x41da33
	...
  41c2ea:	add    BYTE PTR [eax],al
  41c2ec:	add    BYTE PTR [esi+0x51],ch
  41c2ef:	push   esi
  41c2f0:	loopne 0x41c2d0
  41c2f2:	mov    ah,0x6e
  41c2f4:	inc    ecx
  41c2f5:	aas    
  41c2f6:	leave  
  41c2f7:	sub    BYTE PTR ds:[edi+0x6d300e51],cl
  41c2fe:	pop    es
  41c2ff:	add    DWORD PTR [ecx-0x29],edx
  41c302:	lods   eax,DWORD PTR ds:[esi]
  41c303:	cld    
  41c304:	jmp    eax
  41c306:	dec    ecx
  41c307:	lds    ecx,FWORD PTR [esp+eax*8]
  41c30a:	mov    bl,0x30
  41c30c:	jb     0x41c38c
  41c30e:	enter  0xc281,0xaf
  41c312:	in     eax,dx
  41c313:	add    DWORD PTR [eax],eax
  41c315:	mov    dh,0xb3
  41c317:	pop    esp
  41c318:	jb     0x41c318
  41c31a:	(bad)  
  41c31b:	lea    eax,[ebp-0x49]
  41c31e:	clc    
  41c31f:	inc    ax
  41c321:	adc    eax,0x30d87c6
  41c326:	fiadd  DWORD PTR [ecx+0x0]
  41c329:	out    dx,al
  41c32a:	pop    esp
  41c32b:	push   esi
  41c32c:	aam    0xa7
  41c32e:	imul   edi,eax,0x22088ff
  41c334:	add    BYTE PTR [edi],bh
  41c336:	enter  0xe587,0x1a
  41c33a:	mov    al,BYTE PTR ds:0xcd8c8300
  41c340:	int3   
  41c341:	jnp    0x41c2cf
  41c343:	int    0xcc
  41c345:	or     dl,BYTE PTR [ecx-0x13]
  41c348:	mov    eax,DWORD PTR [edx]
  41c34a:	rol    BYTE PTR [edi-0x4004acc0],1
  41c350:	int3   
	...
  41c35d:	add    BYTE PTR [eax],al
  41c35f:	add    BYTE PTR [ebx-0x74],bh
  41c362:	int    0xcc
  41c364:	jmp    0x87f5:0x9153ed50
  41c36b:	cmp    eax,0x41da5f
  41c370:	mov    ah,0xba
  41c372:	sub    al,0x72
  41c374:	jle    0x41c33e
  41c376:	xchg   DWORD PTR ds:0x41da37,esi
  41c37c:	jo     0x41c37c
  41c37e:	push   edi
  41c37f:	pop    ebp
  41c380:	cld    
  41c381:	mov    ecx,ebp
  41c383:	int3   
  41c384:	push   0x51
  41c386:	in     eax,dx
  41c387:	push   ecx
  41c388:	addr16 add al,0x0
  41c38b:	inc    eax
  41c38c:	aas    
  41c38d:	daa    
  41c38e:	cmp    eax,0x50c87e72
  41c393:	call   0x3e232b
  41c398:	mov    esp,0x7a890983
  41c39d:	pop    esp
  41c39e:	mov    BYTE PTR [ebp+0x37],cl
  41c3a1:	mul    DWORD PTR [esi+0x0]
  41c3a4:	mov    ah,0xb2
  41c3a6:	pop    eax
  41c3a7:	jb     0x41c3a7
  41c3a9:	(bad)  
  41c3aa:	dec    esi
  41c3ab:	dec    DWORD PTR [edx]
  41c3ad:	pop    esp
  41c3ae:	mov    ch,ah
  41c3b0:	or     cl,BYTE PTR [ecx+0x510acccd]
  41c3b6:	in     eax,dx
  41c3b7:	sub    DWORD PTR [ebx-0x68ba3c5d],0xffffffc7
  41c3be:	add    BYTE PTR [eax],al
  41c3c0:	aas    
  41c3c1:	test   DWORD PTR [esi-0x24],eax
	...
  41c3d0:	add    BYTE PTR [eax],al
  41c3d2:	add    BYTE PTR [edi],al
  41c3d4:	enter  0x0,0x80
  41c3d8:	add    dh,ch
  41c3da:	add    DWORD PTR [edi],edi
  41c3dc:	enter  0xc700,0x2
  41c3e0:	pop    esp
  41c3e1:	add    DWORD PTR [eax],eax
  41c3e3:	aas    
  41c3e4:	enter  0x45c3,0x63
  41c3e8:	mov    DWORD PTR [eax],0x4e513f00
  41c3ee:	or     BYTE PTR [esi-0x18dcf36],dh
  41c3f4:	(bad)  
  41c3f5:	call   0xfc9df4a3
  41c3fa:	mov    eax,ds:0x41d66f
  41c3ff:	bound  ebx,QWORD PTR [ebx-0x4]
  41c402:	add    BYTE PTR [edi],bh
  41c404:	aam    0xc
  41c406:	mov    DWORD PTR [edx-0x60],0xc83f416e
  41c40d:	add    BYTE PTR [eax],al
  41c40f:	aas    
  41c410:	outs   dx,DWORD PTR ds:[esi]
  41c411:	pop    es
  41c412:	(bad)  
  41c413:	cmp    ah,BYTE PTR [eax-0x36c0be92]
  41c419:	add    BYTE PTR [eax],al
  41c41b:	aas    
  41c41c:	inc    edi
  41c41d:	xor    BYTE PTR ds:[ebp+0x9],ch
  41c421:	add    DWORD PTR [eax],eax
  41c423:	push   0xffffffce
  41c425:	ret    
  41c426:	add    eax,0x41d617
  41c42b:	aas    
  41c42c:	enter  0x0,0xbc
  41c430:	popf   
  41c431:	cmp    BYTE PTR [edx+0x7e],dh
  41c434:	enter  0x7500,0x0
	...
  41c444:	add    BYTE PTR [eax],al
  41c446:	dec    edx
  41c447:	out    dx,al
  41c448:	add    bh,bh
  41c44a:	dec    edx
  41c44b:	enter  0x416e,0x3f
  41c44f:	daa    
  41c450:	xor    DWORD PTR [edx-0x2],esi
  41c453:	mov    DWORD PTR [edi+0x41d64f0d],0xe90dc600
  41c45d:	mov    esi,DWORD PTR [edx]
  41c45f:	cwde   
  41c460:	outs   dx,BYTE PTR ds:[esi]
  41c461:	inc    ecx
  41c462:	aas    
  41c463:	dec    edi
  41c464:	inc    esi
  41c465:	call   0x897ecaa6
  41c46a:	cli    
  41c46b:	outs   dx,DWORD PTR ds:[esi]
  41c46c:	mov    BYTE PTR [ebp+0x57],cl
  41c46f:	push   ecx
  41c470:	push   cs
  41c471:	sbb    al,0xed
  41c473:	or     BYTE PTR [ecx],al
  41c475:	push   0x40c6ef
  41c47a:	push   eax
  41c47b:	mov    ch,0x0
  41c47d:	jb     0x41c47d
  41c47f:	(bad)  
  41c480:	lahf   
  41c481:	cmp    al,0xcd
  41c483:	or     BYTE PTR [ecx],al
  41c485:	mov    DWORD PTR [edx+0xc],0xd53f416f
  41c48c:	(bad)  
  41c48d:	aas    
  41c48e:	aas    
  41c48f:	lock pusha 
  41c491:	add    edi,DWORD PTR [edi-0x38]
  41c494:	xchg   DWORD PTR ds:0x41d65b,edx
  41c49a:	ins    DWORD PTR es:[edi],dx
  41c49b:	jo     0x41c45c
  41c49d:	test   DWORD PTR [eax],0x37c4805b
  41c4a3:	daa    
  41c4a4:	dec    ecx
  41c4a5:	jb     0x41c525
  41c4a7:	enter  0x15fb,0x0
	...
  41c4b7:	add    BYTE PTR [eax],al
  41c4b9:	xchg   esi,edx
  41c4bb:	inc    ecx
  41c4bc:	add    BYTE PTR [edi+edi*8+0x293f416e],bl
  41c4c3:	dec    ebp
  41c4c4:	jb     0x41c544
  41c4c6:	enter  0xe850,0x8b
  41c4ca:	pop    ecx
  41c4cb:	cld    
  41c4cc:	(bad)  
  41c4cd:	mov    esp,0x7a890583
  41c4d2:	pop    eax
  41c4d3:	mov    BYTE PTR [ebp-0x51],cl
  41c4d6:	clc    
  41c4d7:	call   0xfc9c76b1
  41c4dc:	add    DWORD PTR [ebx+0x2d349fc3],0x9
  41c4e3:	add    DWORD PTR [ebx+0x6a4f57f2],ecx
  41c4e9:	aas    
  41c4ea:	sub    DWORD PTR ds:0x50c7fe72,esi
  41c4f0:	call   0x3e1798
  41c4f5:	mov    esp,0x28b0d83
  41c4fa:	pop    eax
  41c4fb:	mov    cl,BYTE PTR [ebp+0x5f]
  41c4fe:	dec    esi
  41c4ff:	push   esi
  41c500:	cld    
  41c501:	and    al,0xf5
  41c503:	lock jae 0x41c4fb
  41c506:	dec    esi
  41c507:	inc    esi
  41c508:	loopne 0x41c4f9
  41c50a:	dec    esi
  41c50b:	dec    esi
  41c50c:	fsub   st(6),st
  41c50e:	outs   dx,DWORD PTR ds:[esi]
  41c50f:	stos   DWORD PTR es:[edi],eax
  41c510:	sti    
  41c511:	inc    eax
  41c512:	pop    edx
  41c513:	add    ah,0x47
  41c516:	and    eax,0xc87e7241
  41c51b:	xchg   DWORD PTR ds:0x0,edx
	...
  41c529:	add    BYTE PTR [eax],al
  41c52b:	add    BYTE PTR [edi-0x2a],bh
  41c52e:	inc    ecx
  41c52f:	add    BYTE PTR [ebp+0x7e724d27],cl
  41c535:	enter  0x44ff,0x1b
  41c539:	stc    
  41c53a:	xchg   DWORD PTR ds:0x41d653,ecx
  41c540:	cmp    al,0xb
  41c542:	std    
  41c543:	push   ecx
  41c544:	out    0x71,eax
  41c546:	cli    
  41c547:	push   eax
  41c549:	inc    ebp
  41c54a:	lds    ecx,FWORD PTR [esp+esi*4]
  41c54d:	repz hlt 
  41c54f:	add    ecx,DWORD PTR [edx-0x1caaff84]
  41c555:	dec    edi
  41c556:	push   esi
  41c557:	in     al,0xc4
  41c559:	add    edi,ebp
  41c55b:	add    eax,DWORD PTR [edx-0x3cba7584]
  41c561:	dec    ebp
  41c562:	dec    esi
  41c563:	loopne 0x41c5c9
  41c565:	retf   
  41c566:	inc    eax
  41c567:	jb     0x41c567
  41c569:	(bad)  
  41c56a:	mov    DWORD PTR [ebp-0x61],ecx
  41c56d:	ins    DWORD PTR es:[edi],dx
  41c56e:	fwait
  41c56f:	(bad)  
  41c570:	cli    
  41c571:	pop    edi
  41c572:	add    DWORD PTR [eax],eax
  41c574:	aas    
  41c575:	enter  0x9e7,0xc4
  41c579:	repz clc 
  41c57b:	cmp    DWORD PTR [ebp-0x3c],0xffffff89
  41c57f:	push   ebp
  41c580:	xchg   DWORD PTR [ebp+0x46],ecx
  41c583:	clc    
  41c584:	xor    al,0x3
  41c586:	icebp  
  41c587:	jae    0x41c5c0
  41c589:	dec    ebp
  41c58a:	push   cs
  41c58b:	xor    al,0xed
  41c58d:	push   es
  41c58e:	add    DWORD PTR [ebx],eax
	...
  41c59c:	add    BYTE PTR [eax],al
  41c59e:	add    dl,dh
  41c5a0:	pop    edi
  41c5a1:	mov    BYTE PTR [ecx],dl
  41c5a3:	cmp    al,0xf3
  41c5a5:	clc    
  41c5a6:	mov    eax,ds:0x41d60b
  41c5ab:	cmp    al,0x3
  41c5ad:	stc    
  41c5ae:	mov    DWORD PTR [edi],ebp
  41c5b0:	dec    ebp
  41c5b1:	dec    esi
  41c5b2:	clc    
  41c5b3:	mov    esi,0x3f03ea86
  41c5b8:	enter  0x1587,0x73
  41c5bc:	(bad)  
  41c5bd:	inc    ecx
  41c5be:	add    BYTE PTR [ebx+esi*8],bh
  41c5c1:	clc    
  41c5c2:	xor    eax,DWORD PTR [ebp+0x27]
  41c5c5:	xor    eax,0xffc87e72
  41c5ca:	inc    esp
  41c5cb:	pop    es
  41c5cc:	dec    edi
  41c5cd:	or     ebx,ebp
  41c5cf:	enter  0x2e4e,0x24
  41c5d3:	ins    DWORD PTR es:[edi],dx
  41c5d4:	pop    es
  41c5d5:	add    DWORD PTR [ecx+0x416ea832],ecx
  41c5db:	aas    
  41c5dc:	xchg   ebp,eax
  41c5dd:	leave  
  41c5de:	mov    DWORD PTR [edx],ebp
  41c5e0:	shr    BYTE PTR [esi+0x41],0x3f
  41c5e4:	xchg   ebp,eax
  41c5e5:	leave  
  41c5e6:	mov    DWORD PTR [edx],esi
  41c5e8:	lods   al,BYTE PTR ds:[esi]
  41c5e9:	outs   dx,BYTE PTR ds:[esi]
  41c5ea:	inc    ecx
  41c5eb:	aas    
  41c5ec:	jo     0x41c639
  41c5ee:	test   eax,0xe80d8e58
  41c5f4:	(bad)  
  41c5f5:	inc    ecx
  41c5f6:	add    dh,al
  41c5f8:	or     bh,cl
  41c5fa:	mov    ecx,0x40c63f
  41c5ff:	mov    esi,0x2016e
	...
  41c610:	add    BYTE PTR [eax],al
  41c612:	aas    
  41c613:	enter  0x5587,0x97
  41c617:	lods   al,BYTE PTR ds:[esi]
  41c618:	ror    DWORD PTR [ecx+0x416eb032],1
  41c61e:	aas    
  41c61f:	daa    
  41c620:	sub    DWORD PTR [edx-0x2],esi
  41c623:	(bad)  
  41c624:	push   eax
  41c625:	call   0x3e2465
  41c62a:	mov    esp,0x328b0583
  41c62f:	xchg   esp,eax
  41c630:	outs   dx,BYTE PTR ds:[esi]
  41c631:	inc    ecx
  41c632:	aas    
  41c633:	imul   eax
  41c635:	aad    0x55
  41c637:	pop    eax
  41c638:	cld    
  41c639:	test   DWORD PTR [edi-0x2e],edi
  41c63c:	add    al,0x33
  41c63e:	jg     0x41c6ac
  41c640:	daa    
  41c641:	mov    esp,DWORD PTR [edx-0x54]
  41c644:	outs   dx,BYTE PTR ds:[esi]
  41c645:	inc    ecx
  41c646:	aas    
  41c647:	dec    ebx
  41c648:	lds    eax,FWORD PTR [esp+edi*4]
  41c64b:	xchg   ebp,eax
  41c64c:	cmp    BYTE PTR [edx+0x7e],dh
  41c64f:	enter  0x7400,0x46
  41c653:	sub    DWORD PTR ds:0x89c87e72,edx
  41c659:	inc    esp
  41c65a:	arpl   sp,cx
  41c65c:	call   0xfc99c8be
  41c661:	mov    edx,DWORD PTR [edx-0x4]
  41c664:	outs   dx,BYTE PTR ds:[esi]
  41c665:	inc    ecx
  41c666:	aas    
  41c667:	cli    
  41c668:	mov    edi,0xe643ff33
  41c66d:	pop    ebp
  41c66e:	cld    
  41c66f:	test   ch,cl
  41c671:	int3   
  41c672:	aas    
  41c673:	enter  0x0,0x0
	...
  41c683:	add    BYTE PTR [eax],al
  41c685:	aas    
  41c686:	enter  0x0,0x3f
  41c68a:	enter  0x0,0x3f
  41c68e:	enter  0x0,0x3f
  41c692:	enter  0x0,0x3f
  41c696:	enter  0x0,0x3f
  41c69a:	enter  0x0,0x3f
  41c69e:	enter  0x0,0x3f
  41c6a2:	enter  0x0,0x3f
  41c6a6:	enter  0x0,0x3f
  41c6aa:	enter  0x0,0x3f
  41c6ae:	enter  0x0,0x3f
  41c6b2:	enter  0x0,0x3f
  41c6b6:	enter  0x0,0x3f
  41c6ba:	enter  0x0,0x3f
  41c6be:	enter  0x0,0x3f
  41c6c2:	enter  0x0,0x3f
  41c6c6:	enter  0x0,0x3f
  41c6ca:	enter  0x0,0x3f
  41c6ce:	enter  0x0,0x3f
  41c6d2:	enter  0x0,0x3f
  41c6d6:	enter  0x0,0x3f
  41c6da:	enter  0x0,0x3f
  41c6de:	enter  0x0,0x3f
  41c6e2:	enter  0x0,0x3f
  41c6e6:	enter  0x0,0x0
	...
  41c6f6:	add    BYTE PTR [eax],al
  41c6f8:	aas    
  41c6f9:	enter  0x0,0x3f
  41c6fd:	enter  0x0,0x3f
  41c701:	enter  0x0,0x3f
  41c705:	enter  0x0,0x3f
  41c709:	enter  0x0,0x3f
  41c70d:	enter  0x0,0x3f
  41c711:	enter  0x0,0x3f
  41c715:	enter  0x0,0x3f
  41c719:	enter  0x0,0x3f
  41c71d:	enter  0x0,0x3f
  41c721:	enter  0x0,0x3f
  41c725:	enter  0x0,0x3f
  41c729:	enter  0x0,0x3f
  41c72d:	enter  0x0,0x3f
  41c731:	enter  0x0,0x3f
  41c735:	enter  0x0,0x3f
  41c739:	enter  0x0,0x3f
  41c73d:	enter  0x0,0x3f
  41c741:	enter  0x0,0x3f
  41c745:	enter  0x0,0x3f
  41c749:	enter  0x0,0x3f
  41c74d:	enter  0x0,0x3f
  41c751:	enter  0x0,0x3f
  41c755:	enter  0x0,0x3f
  41c759:	enter  0x0,0x0
	...
  41c769:	add    BYTE PTR [eax],al
  41c76b:	aas    
  41c76c:	enter  0x0,0x3f
  41c770:	enter  0x0,0x3f
  41c774:	enter  0x0,0x3f
  41c778:	enter  0x0,0x3f
  41c77c:	enter  0x0,0x3f
  41c780:	enter  0x0,0x3f
  41c784:	enter  0x0,0x3f
  41c788:	enter  0x0,0x3f
  41c78c:	enter  0x0,0x3f
  41c790:	enter  0x0,0x3f
  41c794:	enter  0x0,0x3f
  41c798:	enter  0x0,0x3f
  41c79c:	enter  0x0,0x3f
  41c7a0:	enter  0x0,0x3f
  41c7a4:	enter  0x0,0x3f
  41c7a8:	enter  0x0,0xff
  41c7ac:	and    eax,0x421cdc
  41c7b1:	jmp    DWORD PTR ds:0x421ce0
  41c7b7:	jmp    DWORD PTR ds:0x421ce4
  41c7bd:	jmp    DWORD PTR ds:0x421ce8
  41c7c3:	jmp    DWORD PTR ds:0x421cec
  41c7c9:	jmp    DWORD PTR ds:0x421cf0
  41c7cf:	jmp    DWORD PTR ds:0x421cf4
  41c7d5:	jmp    DWORD PTR ds:0x421cf8
  41c7db:	jmp    DWORD PTR ds:0x421cfc
  41c7e1:	jmp    DWORD PTR ds:0x421d00
  41c7e7:	jmp    DWORD PTR ds:0x421d04
  41c7ed:	jmp    DWORD PTR ds:0x421d08
  41c7f3:	jmp    DWORD PTR ds:0x421d0c
  41c7f9:	jmp    DWORD PTR ds:0x421d10
  41c7ff:	jmp    DWORD PTR ds:0x421d14
  41c805:	jmp    DWORD PTR ds:0x421d18
  41c80b:	jmp    DWORD PTR ds:0x421d1c
  41c811:	jmp    DWORD PTR ds:0x421d20
  41c817:	jmp    DWORD PTR ds:0x421d24
  41c81d:	jmp    DWORD PTR ds:0x421d28
  41c823:	jmp    DWORD PTR ds:0x421d2c
  41c829:	jmp    DWORD PTR ds:0x421d30
  41c82f:	jmp    DWORD PTR ds:0x421d34
  41c835:	jmp    DWORD PTR ds:0x421d38
  41c83b:	jmp    DWORD PTR ds:0x421d3c
  41c841:	jmp    DWORD PTR ds:0x421d40
  41c847:	jmp    DWORD PTR ds:0x421d44
  41c84d:	jmp    DWORD PTR ds:0x421d48
  41c853:	jmp    DWORD PTR ds:0x421d4c
  41c859:	jmp    DWORD PTR ds:0x421d50
  41c85f:	jmp    DWORD PTR ds:0x421d54
  41c865:	jmp    DWORD PTR ds:0x421d58
  41c86b:	jmp    DWORD PTR ds:0x421d5c
  41c871:	jmp    DWORD PTR ds:0x421d60
  41c877:	jmp    DWORD PTR ds:0x421d64
  41c87d:	jmp    DWORD PTR ds:0x421d68
  41c883:	jmp    DWORD PTR ds:0x421d6c
  41c889:	jmp    DWORD PTR ds:0x421d70
  41c88f:	jmp    DWORD PTR ds:0x421d74
  41c895:	jmp    DWORD PTR ds:0x421d78
  41c89b:	jmp    DWORD PTR ds:0x421d7c
  41c8a1:	jmp    DWORD PTR ds:0x421d80
  41c8a7:	jmp    DWORD PTR ds:0x421d84
  41c8ad:	jmp    DWORD PTR ds:0x421d88
  41c8b3:	jmp    DWORD PTR ds:0x421d8c
  41c8b9:	jmp    DWORD PTR ds:0x421d90
  41c8bf:	jmp    DWORD PTR ds:0x421d94
  41c8c5:	jmp    DWORD PTR ds:0x421d98
  41c8cb:	jmp    DWORD PTR ds:0x421d9c
  41c8d1:	jmp    DWORD PTR ds:0x421da0
  41c8d7:	jmp    DWORD PTR ds:0x421da4
  41c8dd:	jmp    DWORD PTR ds:0x421da8
  41c8e3:	jmp    DWORD PTR ds:0x421dac
  41c8e9:	jmp    DWORD PTR ds:0x421db0
  41c8ef:	jmp    DWORD PTR ds:0x421db4
  41c8f5:	jmp    DWORD PTR ds:0x421db8
  41c8fb:	jmp    DWORD PTR ds:0x421dbc
  41c901:	jmp    DWORD PTR ds:0x421dc0
  41c907:	jmp    DWORD PTR ds:0x421dc4
  41c90d:	jmp    DWORD PTR ds:0x421dc8
  41c913:	jmp    DWORD PTR ds:0x421dcc
  41c919:	jmp    DWORD PTR ds:0x421dd0
  41c91f:	jmp    DWORD PTR ds:0x421dd4
  41c925:	jmp    DWORD PTR ds:0x421dd8
  41c92b:	jmp    DWORD PTR ds:0x421ddc
  41c931:	jmp    DWORD PTR ds:0x421de0
  41c937:	jmp    DWORD PTR ds:0x421de4
  41c93d:	jmp    DWORD PTR ds:0x421de8
  41c943:	jmp    DWORD PTR ds:0x421dec
  41c949:	jmp    DWORD PTR ds:0x421df0
  41c94f:	jmp    DWORD PTR ds:0x421df4
  41c955:	jmp    DWORD PTR ds:0x421df8
  41c95b:	jmp    DWORD PTR ds:0x421dfc
  41c961:	jmp    DWORD PTR ds:0x421e00
  41c967:	jmp    DWORD PTR ds:0x421e04
  41c96d:	jmp    DWORD PTR ds:0x421e08
  41c973:	jmp    DWORD PTR ds:0x421e0c
  41c979:	jmp    DWORD PTR ds:0x421e10
  41c97f:	jmp    DWORD PTR ds:0x421e14
  41c985:	jmp    DWORD PTR ds:0x421e18
  41c98b:	jmp    DWORD PTR ds:0x421e1c
  41c991:	jmp    DWORD PTR ds:0x421e20
  41c997:	jmp    DWORD PTR ds:0x421e24
  41c99d:	jmp    DWORD PTR ds:0x421e28
  41c9a3:	jmp    DWORD PTR ds:0x421e2c
  41c9a9:	jmp    DWORD PTR ds:0x421e30
  41c9af:	jmp    DWORD PTR ds:0x421e34
  41c9b5:	jmp    DWORD PTR ds:0x421e38
  41c9bb:	jmp    DWORD PTR ds:0x421e3c
  41c9c1:	jmp    DWORD PTR ds:0x421e40
  41c9c7:	jmp    DWORD PTR ds:0x421e44
  41c9cd:	jmp    DWORD PTR ds:0x421e48
  41c9d3:	jmp    DWORD PTR ds:0x421e4c
  41c9d9:	jmp    DWORD PTR ds:0x421e50
  41c9df:	jmp    DWORD PTR ds:0x421e54
  41c9e5:	jmp    DWORD PTR ds:0x421e58
  41c9eb:	jmp    DWORD PTR ds:0x421e5c
  41c9f1:	jmp    DWORD PTR ds:0x421e60
  41c9f7:	jmp    DWORD PTR ds:0x421e68
  41c9fd:	jmp    DWORD PTR ds:0x421e6c
  41ca03:	jmp    DWORD PTR ds:0x421e70
  41ca09:	jmp    DWORD PTR ds:0x421e74
  41ca0f:	jmp    DWORD PTR ds:0x421e78
  41ca15:	jmp    DWORD PTR ds:0x421e7c
  41ca1b:	jmp    DWORD PTR ds:0x421e80
  41ca21:	jmp    DWORD PTR ds:0x421e84
  41ca27:	jmp    DWORD PTR ds:0x421e88
  41ca2d:	jmp    DWORD PTR ds:0x421e8c
  41ca33:	jmp    DWORD PTR ds:0x421e90
  41ca39:	jmp    DWORD PTR ds:0x421e94
  41ca3f:	jmp    DWORD PTR ds:0x421e98
  41ca45:	jmp    DWORD PTR ds:0x421e9c
  41ca4b:	jmp    DWORD PTR ds:0x421ea0
  41ca51:	jmp    DWORD PTR ds:0x421ea4
  41ca57:	jmp    DWORD PTR ds:0x421ea8
  41ca5d:	jmp    DWORD PTR ds:0x421eac
  41ca63:	jmp    DWORD PTR ds:0x421eb0
  41ca69:	jmp    DWORD PTR ds:0x421eb4
  41ca6f:	jmp    DWORD PTR ds:0x421eb8
  41ca75:	jmp    DWORD PTR ds:0x421ebc
  41ca7b:	jmp    DWORD PTR ds:0x421ec0
  41ca81:	jmp    DWORD PTR ds:0x421ec4
  41ca87:	jmp    DWORD PTR ds:0x421ec8
  41ca8d:	jmp    DWORD PTR ds:0x421ecc
  41ca93:	jmp    DWORD PTR ds:0x421ed0
  41ca99:	jmp    DWORD PTR ds:0x421ed4
  41ca9f:	jmp    DWORD PTR ds:0x421ed8
  41caa5:	jmp    DWORD PTR ds:0x421edc
  41caab:	jmp    DWORD PTR ds:0x421ee0
  41cab1:	jmp    DWORD PTR ds:0x421ee4
  41cab7:	jmp    DWORD PTR ds:0x421ee8
  41cabd:	jmp    DWORD PTR ds:0x421eec
  41cac3:	jmp    DWORD PTR ds:0x421ef0
  41cac9:	jmp    DWORD PTR ds:0x421ef4
  41cacf:	jmp    DWORD PTR ds:0x421ef8
  41cad5:	jmp    DWORD PTR ds:0x421efc
  41cadb:	jmp    DWORD PTR ds:0x421f00
  41cae1:	jmp    DWORD PTR ds:0x421f04
  41cae7:	jmp    DWORD PTR ds:0x421f08
  41caed:	jmp    DWORD PTR ds:0x421f0c
  41caf3:	jmp    DWORD PTR ds:0x421f10
  41caf9:	jmp    DWORD PTR ds:0x421f14
  41caff:	jmp    DWORD PTR ds:0x421f18
  41cb05:	jmp    DWORD PTR ds:0x421f1c
  41cb0b:	jmp    DWORD PTR ds:0x421f20
  41cb11:	jmp    DWORD PTR ds:0x421f24
  41cb17:	jmp    DWORD PTR ds:0x421f28
  41cb1d:	jmp    DWORD PTR ds:0x421f2c
  41cb23:	jmp    DWORD PTR ds:0x421f30
  41cb29:	jmp    DWORD PTR ds:0x421f34
  41cb2f:	jmp    DWORD PTR ds:0x421f38
  41cb35:	jmp    DWORD PTR ds:0x421f3c
  41cb3b:	jmp    DWORD PTR ds:0x421f40
  41cb41:	jmp    DWORD PTR ds:0x421f44
  41cb47:	jmp    DWORD PTR ds:0x421f48
  41cb4d:	jmp    DWORD PTR ds:0x421f4c
  41cb53:	jmp    DWORD PTR ds:0x421f50
  41cb59:	jmp    DWORD PTR ds:0x421f54
  41cb5f:	jmp    DWORD PTR ds:0x421f58
  41cb65:	jmp    DWORD PTR ds:0x421f5c
  41cb6b:	jmp    DWORD PTR ds:0x421f60
  41cb71:	jmp    DWORD PTR ds:0x421f64
  41cb77:	jmp    DWORD PTR ds:0x421f68
  41cb7d:	jmp    DWORD PTR ds:0x421f6c
  41cb83:	jmp    DWORD PTR ds:0x421f70
  41cb89:	jmp    DWORD PTR ds:0x421f74
  41cb8f:	jmp    DWORD PTR ds:0x421f78
  41cb95:	jmp    DWORD PTR ds:0x421f7c
  41cb9b:	jmp    DWORD PTR ds:0x421f80
  41cba1:	jmp    DWORD PTR ds:0x421f84
  41cba7:	jmp    DWORD PTR ds:0x421f88
  41cbad:	jmp    DWORD PTR ds:0x421f8c
  41cbb3:	jmp    DWORD PTR ds:0x421f90
  41cbb9:	jmp    DWORD PTR ds:0x421f94
  41cbbf:	jmp    DWORD PTR ds:0x421f98
  41cbc5:	jmp    DWORD PTR ds:0x421f9c
  41cbcb:	jmp    DWORD PTR ds:0x421fa0
  41cbd1:	jmp    DWORD PTR ds:0x421fa4
  41cbd7:	jmp    DWORD PTR ds:0x421fa8
  41cbdd:	jmp    DWORD PTR ds:0x421fac
  41cbe3:	jmp    DWORD PTR ds:0x421fb0
  41cbe9:	jmp    DWORD PTR ds:0x421fb4
  41cbef:	jmp    DWORD PTR ds:0x421fb8
  41cbf5:	jmp    DWORD PTR ds:0x421fbc
  41cbfb:	jmp    DWORD PTR ds:0x421fc0
  41cc01:	jmp    DWORD PTR ds:0x421fc4
  41cc07:	jmp    DWORD PTR ds:0x421fc8
  41cc0d:	jmp    DWORD PTR ds:0x421fcc
  41cc13:	jmp    DWORD PTR ds:0x421fd0
  41cc19:	jmp    DWORD PTR ds:0x421fd4
  41cc1f:	jmp    DWORD PTR ds:0x421fdc
  41cc25:	jmp    DWORD PTR ds:0x421fe4
  41cc2b:	jmp    DWORD PTR ds:0x421fe8
  41cc31:	jmp    DWORD PTR ds:0x421fec
  41cc37:	jmp    DWORD PTR ds:0x421ff0
  41cc3d:	jmp    DWORD PTR ds:0x421ff4
  41cc43:	jmp    DWORD PTR ds:0x421ff8
  41cc49:	jmp    DWORD PTR ds:0x421ffc
  41cc4f:	jmp    DWORD PTR ds:0x422000
  41cc55:	jmp    DWORD PTR ds:0x422004
  41cc5b:	jmp    DWORD PTR ds:0x422008
  41cc61:	jmp    DWORD PTR ds:0x42200c
  41cc67:	jmp    DWORD PTR ds:0x422010
  41cc6d:	jmp    DWORD PTR ds:0x422014
  41cc73:	jmp    DWORD PTR ds:0x422018
  41cc79:	jmp    DWORD PTR ds:0x42201c
  41cc7f:	jmp    DWORD PTR ds:0x422020
  41cc85:	jmp    DWORD PTR ds:0x422024
  41cc8b:	jmp    DWORD PTR ds:0x422028
  41cc91:	jmp    DWORD PTR ds:0x42202c
  41cc97:	jmp    DWORD PTR ds:0x422030
  41cc9d:	jmp    DWORD PTR ds:0x422034
  41cca3:	jmp    DWORD PTR ds:0x422038
  41cca9:	jmp    DWORD PTR ds:0x42203c
  41ccaf:	jmp    DWORD PTR ds:0x422040
  41ccb5:	jmp    DWORD PTR ds:0x422044
  41ccbb:	jmp    DWORD PTR ds:0x422048
  41ccc1:	jmp    DWORD PTR ds:0x42204c
  41ccc7:	jmp    DWORD PTR ds:0x422050
  41cccd:	jmp    DWORD PTR ds:0x422054
  41ccd3:	jmp    DWORD PTR ds:0x422058
  41ccd9:	jmp    DWORD PTR ds:0x42205c
  41ccdf:	jmp    DWORD PTR ds:0x422060
  41cce5:	jmp    DWORD PTR ds:0x422064
  41cceb:	jmp    DWORD PTR ds:0x422068
  41ccf1:	jmp    DWORD PTR ds:0x42206c
  41ccf7:	jmp    DWORD PTR ds:0x422070
  41ccfd:	jmp    DWORD PTR ds:0x422074
  41cd03:	jmp    DWORD PTR ds:0x422078
  41cd09:	jmp    DWORD PTR ds:0x42207c
  41cd0f:	jmp    DWORD PTR ds:0x422080
  41cd15:	jmp    DWORD PTR ds:0x422084
  41cd1b:	jmp    DWORD PTR ds:0x422088
  41cd21:	jmp    DWORD PTR ds:0x42208c
  41cd27:	jmp    DWORD PTR ds:0x422090
  41cd2d:	jmp    DWORD PTR ds:0x422094
  41cd33:	jmp    DWORD PTR ds:0x422098
  41cd39:	jmp    DWORD PTR ds:0x42209c
  41cd3f:	jmp    DWORD PTR ds:0x4220a0
  41cd45:	jmp    DWORD PTR ds:0x4220a4
  41cd4b:	jmp    DWORD PTR ds:0x4220a8
  41cd51:	jmp    DWORD PTR ds:0x4220ac
  41cd57:	jmp    DWORD PTR ds:0x4220b0
  41cd5d:	jmp    DWORD PTR ds:0x4220b4
  41cd63:	jmp    DWORD PTR ds:0x4220b8
  41cd69:	jmp    DWORD PTR ds:0x4220c0
  41cd6f:	jmp    DWORD PTR ds:0x4220c4
  41cd75:	jmp    DWORD PTR ds:0x4220c8
  41cd7b:	jmp    DWORD PTR ds:0x4220cc
  41cd81:	jmp    DWORD PTR ds:0x4220d0
  41cd87:	jmp    DWORD PTR ds:0x4220d4
  41cd8d:	jmp    DWORD PTR ds:0x4220d8
  41cd93:	jmp    DWORD PTR ds:0x4220dc
  41cd99:	jmp    DWORD PTR ds:0x4220e0
  41cd9f:	jmp    DWORD PTR ds:0x4220e4
  41cda5:	jmp    DWORD PTR ds:0x4220e8
  41cdab:	jmp    DWORD PTR ds:0x4220ec
  41cdb1:	jmp    DWORD PTR ds:0x4220f0
  41cdb7:	jmp    DWORD PTR ds:0x4220f4
  41cdbd:	jmp    DWORD PTR ds:0x4220f8
  41cdc3:	jmp    DWORD PTR ds:0x4220fc
  41cdc9:	jmp    DWORD PTR ds:0x422100
  41cdcf:	jmp    DWORD PTR ds:0x422104
  41cdd5:	jmp    DWORD PTR ds:0x422108
  41cddb:	jmp    DWORD PTR ds:0x42210c
  41cde1:	jmp    DWORD PTR ds:0x422110
  41cde7:	jmp    DWORD PTR ds:0x422114
  41cded:	jmp    DWORD PTR ds:0x422118
  41cdf3:	jmp    DWORD PTR ds:0x42211c
  41cdf9:	jmp    DWORD PTR ds:0x422120
  41cdff:	jmp    DWORD PTR ds:0x422124
  41ce05:	jmp    DWORD PTR ds:0x422128
  41ce0b:	jmp    DWORD PTR ds:0x42212c
  41ce11:	jmp    DWORD PTR ds:0x422130
  41ce17:	jmp    DWORD PTR ds:0x422134
  41ce1d:	jmp    DWORD PTR ds:0x422138
  41ce23:	jmp    DWORD PTR ds:0x42213c
  41ce29:	jmp    DWORD PTR ds:0x422140
  41ce2f:	jmp    DWORD PTR ds:0x422144
  41ce35:	jmp    DWORD PTR ds:0x422148
  41ce3b:	jmp    DWORD PTR ds:0x42214c
  41ce41:	jmp    DWORD PTR ds:0x422150
  41ce47:	jmp    DWORD PTR ds:0x422154
  41ce4d:	jmp    DWORD PTR ds:0x422158
  41ce53:	jmp    DWORD PTR ds:0x42215c
  41ce59:	jmp    DWORD PTR ds:0x422160
  41ce5f:	jmp    DWORD PTR ds:0x422164
  41ce65:	jmp    DWORD PTR ds:0x422168
  41ce6b:	jmp    DWORD PTR ds:0x42216c
  41ce71:	jmp    DWORD PTR ds:0x422170
  41ce77:	jmp    DWORD PTR ds:0x422174
  41ce7d:	jmp    DWORD PTR ds:0x422178
  41ce83:	jmp    DWORD PTR ds:0x42217c
  41ce89:	jmp    DWORD PTR ds:0x422180
  41ce8f:	jmp    DWORD PTR ds:0x422184
  41ce95:	jmp    DWORD PTR ds:0x422188
  41ce9b:	jmp    DWORD PTR ds:0x42218c
  41cea1:	jmp    DWORD PTR ds:0x422190
  41cea7:	jmp    DWORD PTR ds:0x422194
  41cead:	jmp    DWORD PTR ds:0x422198
  41ceb3:	jmp    DWORD PTR ds:0x42219c
  41ceb9:	jmp    DWORD PTR ds:0x4221a0
  41cebf:	jmp    DWORD PTR ds:0x4221a4
  41cec5:	jmp    DWORD PTR ds:0x4221a8
  41cecb:	jmp    DWORD PTR ds:0x4221ac
  41ced1:	jmp    DWORD PTR ds:0x4221b0
  41ced7:	jmp    DWORD PTR ds:0x4221b4
  41cedd:	jmp    DWORD PTR ds:0x4221b8
  41cee3:	jmp    DWORD PTR ds:0x4221bc
  41cee9:	jmp    DWORD PTR ds:0x4221c0
  41ceef:	jmp    DWORD PTR ds:0x4221c4
  41cef5:	jmp    DWORD PTR ds:0x4221c8
  41cefb:	jmp    DWORD PTR ds:0x4221cc
  41cf01:	jmp    DWORD PTR ds:0x4221d0
  41cf07:	jmp    DWORD PTR ds:0x4221d4
  41cf0d:	jmp    DWORD PTR ds:0x4221d8
  41cf13:	jmp    DWORD PTR ds:0x4221dc
  41cf19:	jmp    DWORD PTR ds:0x4221e0
  41cf1f:	jmp    DWORD PTR ds:0x4221e4
  41cf25:	jmp    DWORD PTR ds:0x4221e8
  41cf2b:	jmp    DWORD PTR ds:0x4221ec
  41cf31:	jmp    DWORD PTR ds:0x4221f0
  41cf37:	jmp    DWORD PTR ds:0x4221f4
  41cf3d:	jmp    DWORD PTR ds:0x4221f8
  41cf43:	jmp    DWORD PTR ds:0x4221fc
  41cf49:	jmp    DWORD PTR ds:0x422200
  41cf4f:	jmp    DWORD PTR ds:0x422204
  41cf55:	jmp    DWORD PTR ds:0x422208
  41cf5b:	jmp    DWORD PTR ds:0x42220c
  41cf61:	jmp    DWORD PTR ds:0x422214
  41cf67:	jmp    DWORD PTR ds:0x422218
  41cf6d:	jmp    DWORD PTR ds:0x42221c
  41cf73:	jmp    DWORD PTR ds:0x422220
  41cf79:	jmp    DWORD PTR ds:0x422224
  41cf7f:	jmp    DWORD PTR ds:0x422228
  41cf85:	jmp    DWORD PTR ds:0x42222c
  41cf8b:	jmp    DWORD PTR ds:0x422230
  41cf91:	jmp    DWORD PTR ds:0x422234
  41cf97:	jmp    DWORD PTR ds:0x422238
