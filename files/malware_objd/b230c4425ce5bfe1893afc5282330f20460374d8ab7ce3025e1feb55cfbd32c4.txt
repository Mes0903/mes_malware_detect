
b230c4425ce5bfe1893afc5282330f20460374d8ab7ce3025e1feb55cfbd32c4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x448fa8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x448fac
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x448fb0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x448fb4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x448fb8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x448fbc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x448fc0
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x448fc4
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x448fc6
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417000
  4010e9:	test   eax,eax
  4010eb:	je     0x4152d6
  4010f1:	mov    edx,DWORD PTR [ebp-0x10]
  4010f4:	add    edx,0x1
  4010f7:	mov    DWORD PTR [ebp-0x10],edx
  4010fa:	or     dh,bh
  4010fc:	mov    ss,WORD PTR [edi]
  4010fe:	inc    esi
  4010ff:	push   0x15a28861
  401104:	dec    ebx
  401105:	shl    DWORD PTR [ecx-0x63],0x5a
  401109:	arpl   WORD PTR [esi],di
  40110b:	or     BYTE PTR [ecx+edx*1],dh
  40110e:	(bad)  
  40110f:	xor    dl,ch
  401111:	cwde   
  401112:	cmc    
  401113:	arpl   WORD PTR [esi-0x5edf20f6],di
  401119:	xor    ecx,DWORD PTR [eax+0x3da0aa77]
  40111f:	mov    WORD PTR [ebx+0x13],fs
  401122:	fsubr  DWORD PTR [edi+0x3aac7469]
  401128:	mov    edx,0x66a05a8c
  40112d:	dec    edx
  40112e:	mov    bh,ch
  401130:	and    al,BYTE PTR [edi-0x51]
  401133:	test   al,0xf7
  401135:	lds    esi,FWORD PTR [ebx]
  401137:	rol    BYTE PTR [edx-0x40],0x2d
  40113b:	adc    eax,0x3410b6b1
  401140:	hlt    
  401141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401142:	fsub   st(7),st
  401144:	aad    0xe4
  401146:	lods   eax,DWORD PTR ds:[esi]
  401147:	push   es
  401148:	push   eax
  401149:	rcl    BYTE PTR [esi+0x1],1
  40114c:	jns    0x40117e
  40114e:	mov    bl,0xf4
  401150:	call   0x540beb37
  401155:	pop    ebx
  401156:	sub    al,0xfc
  401158:	mov    al,0xa0
  40115a:	lea    esi,[eax]
  40115c:	push   0x1dc80ae5
  401161:	pusha  
  401162:	dec    eax
  401163:	and    BYTE PTR [eax+0x4],al
  401166:	add    bh,ah
  401168:	mov    bl,0xbf
  40116a:	jbe    0x40118d
  40116c:	mov    edi,0x92a83fd4
  401171:	add    esp,DWORD PTR [esi-0x30ff7c01]
  401177:	mov    bl,0xc8
  401179:	aad    0x20
  40117b:	loopne 0x401169
  40117d:	pop    esi
  40117e:	data16 js 0x40111f
  401181:	dec    esp
  401182:	into   
  401183:	data16 es xor al,bh
  401187:	xchg   esp,eax
  401188:	ror    BYTE PTR [eax],1
  40118a:	mov    eax,0xba866854
  40118f:	test   DWORD PTR [ebx-0x48],ebp
  401192:	xor    DWORD PTR [esi+0xa8f76c4],ecx
  401198:	in     eax,dx
  401199:	sti    
  40119a:	shl    BYTE PTR [eax],0x1e
  40119d:	cmc    
  40119e:	jle    0x40120e
  4011a0:	sub    al,0xf3
  4011a2:	lods   eax,DWORD PTR ds:[esi]
  4011a3:	into   
  4011a4:	cmp    dh,dl
  4011a6:	add    edi,DWORD PTR [ebx+ebx*2+0x53c338d7]
  4011ad:	loopne 0x401222
  4011af:	mov    ds:0xe31036e8,al
  4011b4:	and    esp,DWORD PTR [esi-0x28]
  4011b7:	jp     0x40121b
  4011b9:	aaa    
  4011ba:	fs ss push esp
  4011bd:	mov    ?,WORD PTR [ecx]
  4011bf:	(bad)  
  4011c0:	fadd   QWORD PTR [edx+ecx*2]
  4011c3:	add    esp,edx
  4011c5:	push   es
  4011c6:	scas   al,BYTE PTR es:[edi]
  4011c7:	fldcw  WORD PTR [eax-0x169e288c]
  4011cd:	xchg   esp,eax
  4011ce:	fiadd  WORD PTR [eax-0x71]
  4011d1:	xchg   DWORD PTR [eax],esi
  4011d3:	push   ecx
  4011d4:	bndstx [ebp+0x2c],bnd0
  4011d8:	cmp    eax,0x4d04a310
  4011dd:	out    dx,eax
  4011de:	push   cs
  4011df:	sbb    al,0x81
  4011e1:	or     DWORD PTR [ebp+edi*1-0x53e9c084],esp
  4011e8:	and    DWORD PTR [edx+0x71],ebp
  4011eb:	out    0x9e,eax
  4011ed:	bound  esi,QWORD PTR [ebx]
  4011ef:	dec    ebx
  4011f0:	jp     0x4011b8
  4011f2:	push   edi
  4011f3:	es fs mov ebx,0xd1f410fb
  4011fa:	mov    DWORD PTR [ebp-0x5e],edx
  4011fd:	mov    esp,0xe25c6463
  401202:	mov    al,0xe4
  401204:	inc    ecx
  401205:	fwait
  401206:	jl     0x40121e
  401208:	or     dl,ah
  40120a:	push   ebx
  40120b:	mov    ds:0x6509f2f6,eax
  401210:	sar    DWORD PTR [ecx+0x59],cl
  401213:	add    al,0x8d
  401215:	enter  0x1f79,0x23
  401219:	jecxz  0x4011f4
  40121b:	in     al,dx
  40121c:	dec    esp
  40121d:	imul   eax,edx,0x95e8baae
  401223:	inc    edi
  401224:	jns    0x401205
  401226:	(bad)  
  401227:	sbb    edi,ebx
  401229:	jne    0x4011c6
  40122b:	ins    DWORD PTR es:[edi],dx
  40122c:	sahf   
  40122d:	or     cl,BYTE PTR [eax-0x1a]
  401230:	loopne 0x4011f7
  401232:	xor    DWORD PTR [ebp+0x7d],0x1aa59b90
  401239:	aad    0x7f
  40123b:	lods   eax,DWORD PTR ds:[esi]
  40123c:	add    BYTE PTR [eax+0x2c11ccc5],0x2f
  401243:	aaa    
  401244:	jg     0x4011ed
  401246:	into   
  401247:	icebp  
  401248:	xchg   edx,eax
  401249:	xchg   BYTE PTR ds:[ecx],cl
  40124c:	add    dh,0xd4
  40124f:	shl    DWORD PTR [ecx+eiz*4],1
  401252:	lea    edx,[eax-0x12a1bf88]
  401258:	adc    cl,BYTE PTR [ebx]
  40125a:	das    
  40125b:	retf   0x2fa6
  40125e:	inc    eax
  40125f:	or     ebp,edx
  401261:	call   0xe23bcfd7
  401266:	loopne 0x4011f9
  401268:	stos   DWORD PTR es:[edi],eax
  401269:	fbstp  TBYTE PTR ds:0x84646d4e
  40126f:	mov    ebx,0x5116f2d5
  401274:	inc    al
  401276:	ret    
  401277:	stos   BYTE PTR es:[edi],al
  401278:	cmc    
  401279:	hlt    
  40127a:	inc    edx
  40127b:	and    al,0x8d
  40127d:	fst    st(5)
  40127f:	sbb    DWORD PTR [esi+0x65a1f58b],ebx
  401285:	in     eax,dx
  401286:	pop    ecx
  401287:	jb     0x4012f0
  401289:	inc    ebp
  40128a:	xchg   edi,eax
  40128b:	adc    al,BYTE PTR [edi-0x51]
  40128e:	add    cl,BYTE PTR [eax]
  401290:	sbb    eax,0x7829e2bf
  401295:	loope  0x401279
  401297:	es nop
  401299:	mov    ecx,?
  40129b:	pop    es
  40129c:	mov    dl,0xf
  40129e:	shl    DWORD PTR [edx-0x5d],cl
  4012a1:	je     0x4012fa
  4012a3:	repnz push edx
  4012a5:	xchg   esp,eax
  4012a6:	pop    esp
  4012a7:	(bad)  
  4012a9:	dec    esp
  4012aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012ab:	cdq    
  4012ac:	push   ebx
  4012ad:	cmc    
  4012ae:	sbb    DWORD PTR [ecx+0x42936733],eax
  4012b4:	aad    0xe7
  4012b6:	outs   dx,DWORD PTR ds:[esi]
  4012b7:	pusha  
  4012b8:	push   esi
  4012b9:	loope  0x401303
  4012bb:	ja     0x4012f4
  4012bd:	jo     0x4012ed
  4012bf:	es lahf 
  4012c1:	mov    ch,0xb6
  4012c3:	ja     0x40124e
  4012c5:	xor    eax,0xb51472f8
  4012ca:	xor    DWORD PTR [ebx],ebx
  4012cc:	fwait
  4012cd:	lock stc 
  4012cf:	shr    BYTE PTR [ecx+0x5b],1
  4012d2:	mov    bl,0x41
  4012d4:	and    eax,0x1f204472
  4012d9:	adc    eax,0xe61ece08
  4012de:	ja     0x40129c
  4012e0:	jns    0x4012d2
  4012e2:	test   BYTE PTR [ebp+0x3a],bh
  4012e5:	xor    ch,BYTE PTR [ecx+0x18]
  4012e8:	repnz nop
  4012ea:	bound  ebx,QWORD PTR [edi]
  4012ec:	lock out 0x66,al
  4012ef:	daa    
  4012f0:	test   eax,0x46fd27ee
  4012f5:	xor    al,0x16
  4012f7:	push   ecx
  4012f8:	sbb    DWORD PTR [ebx],esi
  4012fa:	hlt    
  4012fb:	repnz in al,dx
  4012fd:	lods   al,BYTE PTR ds:[esi]
  4012fe:	fs lock adc edx,DWORD PTR gs:[eax+edi*1]
  401304:	pop    ss
  401305:	mov    ds:0x664f425b,al
  40130a:	test   eax,0x2c9489e8
  40130f:	jmp    0x400f:0xe24f7e4a
  401316:	daa    
  401317:	cmp    DWORD PTR [ecx+0x302f9646],edx
  40131d:	jg     0x40137e
  40131f:	add    DWORD PTR [ecx+0x4d],ebp
  401322:	dec    eax
  401323:	stos   BYTE PTR es:[edi],al
  401324:	clc    
  401325:	add    edi,DWORD PTR [ebp+edx*1-0x26]
  401329:	icebp  
  40132a:	fisubr WORD PTR [ebx]
  40132c:	adc    al,0xd1
  40132e:	jge    0x40131a
  401330:	popf   
  401331:	jno    0x401379
  401333:	outs   dx,DWORD PTR ds:[esi]
  401334:	jns    0x40133f
  401336:	dec    eax
  401337:	jb     0x401368
  401339:	out    0xee,al
  40133b:	call   0xd991dc95
  401340:	mov    cl,0x39
  401342:	xchg   esp,eax
  401343:	and    bh,BYTE PTR [ebp+0x6ac47851]
  401349:	push   0x5
  40134b:	xchg   BYTE PTR [edx],dl
  40134d:	fcomp  QWORD PTR [ebp+0x4252c768]
  401353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401354:	test   eax,0xb839a280
  401359:	retf   0x55f1
  40135c:	mov    ah,BYTE PTR [edi-0x450a31c9]
  401362:	mov    al,BYTE PTR [edx+0x50bba55]
  401368:	stos   BYTE PTR es:[edi],al
  401369:	push   es
  40136a:	jl     0x4012f8
  40136c:	js     0x401301
  40136e:	ror    BYTE PTR [ebp+0x12963c23],1
  401374:	sbb    bh,ah
  401376:	dec    esi
  401377:	sti    
  401378:	int3   
  401379:	jbe    0x401302
  40137b:	sbb    ah,BYTE PTR [edi]
  40137d:	int3   
  40137e:	xchg   BYTE PTR [edx],dl
  401380:	push   ss
  401381:	stc    
  401382:	fcom   QWORD PTR [edi-0x36]
  401385:	xchg   ebx,eax
  401386:	pushf  
  401387:	inc    ecx
  401388:	mov    cl,0xc8
  40138a:	push   cs
  40138b:	in     eax,0xf1
  40138d:	lock stos DWORD PTR es:[edi],eax
  40138f:	mov    dl,0x7a
  401391:	aas    
  401392:	jmp    0x40131f
  401394:	cmc    
  401395:	rcr    BYTE PTR [ecx],1
  401397:	int    0x59
  401399:	mov    ebx,0x839f3a31
  40139e:	sbb    dl,dl
  4013a0:	je     0x4013bf
  4013a2:	inc    esp
  4013a3:	jne    0x4013ac
  4013a5:	jo     0x401415
  4013a7:	pushf  
  4013a8:	mov    ebx,0x67bb6fec
  4013ad:	push   ebp
  4013ae:	jne    0x401371
  4013b0:	outs   dx,BYTE PTR ds:[esi]
  4013b1:	aas    
  4013b2:	or     cl,dl
  4013b4:	in     al,0x8d
  4013b6:	fcomip st,st(2)
  4013b8:	lahf   
  4013b9:	xchg   edx,eax
  4013ba:	and    BYTE PTR [eax+0x21],0x1f
  4013be:	cmp    eax,0x41041f91
  4013c3:	iret   
  4013c4:	add    ch,BYTE PTR [ebx-0x13cf9535]
  4013ca:	bound  esp,QWORD PTR ss:[esi+0x4ac2904f]
  4013d1:	add    bl,bh
  4013d3:	test   BYTE PTR [edx+0x61],bl
  4013d6:	sub    al,0x38
  4013d8:	pushf  
  4013d9:	and    ch,BYTE PTR [edi+ebp*8]
  4013dc:	cmp    al,0xf5
  4013de:	xchg   esp,eax
  4013df:	add    ch,BYTE PTR [eax-0x16]
  4013e2:	jmp    0x3859:0x339ab04c
  4013e9:	rcr    DWORD PTR [edx+0x3],cl
  4013ec:	cwde   
  4013ed:	adc    al,0x40
  4013ef:	aad    0x35
  4013f1:	iret   
  4013f2:	and    esi,DWORD PTR [eax-0x2b7dfb6e]
  4013f8:	xchg   esi,eax
  4013f9:	loop   0x4013cd
  4013fb:	xchg   BYTE PTR [edx],ch
  4013fd:	ins    BYTE PTR es:[edi],dx
  4013fe:	adc    eax,0x34e6d41
  401403:	loope  0x40142c
  401405:	push   ebp
  401406:	dec    ecx
  401407:	es int3 
  401409:	push   esp
  40140a:	cmp    edx,DWORD PTR [edx+esi*2]
  40140d:	mov    ?,edi
  40140f:	mov    dh,0xc4
  401411:	fisttp QWORD PTR [ecx-0x40]
  401414:	mov    cl,0x60
  401416:	outs   dx,DWORD PTR ds:[esi]
  401417:	xchg   esi,eax
  401418:	sar    DWORD PTR ds:0x347dba86,cl
  40141e:	loope  0x4013ff
  401420:	inc    edx
  401421:	push   ebx
  401422:	pop    edi
  401423:	lea    esi,fs:[esi-0x2e]
  401427:	dec    ecx
  401428:	lds    ebx,FWORD PTR [edi+0x22330b5f]
  40142e:	sar    BYTE PTR [ecx-0x7c],cl
  401431:	xor    edx,DWORD PTR [ebx-0x36eb0a71]
  401437:	dec    edi
  401438:	popf   
  401439:	es jbe 0x40142b
  40143c:	rcl    ebx,1
  40143e:	sahf   
  40143f:	fwait
  401440:	add    BYTE PTR [ecx],0x1
  401443:	pop    es
  401444:	js     0x401444
  401446:	retf   
  401447:	sbb    DWORD PTR [ecx],0x6d
  40144a:	cdq    
  40144b:	aaa    
  40144c:	inc    edx
  40144d:	or     BYTE PTR ds:0x996ff463,cl
  401453:	(bad)  
  401454:	shl    BYTE PTR [di-0x1be0],cl
  401459:	push   esi
  40145a:	out    dx,eax
  40145b:	dec    edi
  40145c:	add    DWORD PTR [ecx+eax*1-0x50],0xffffff95
  401461:	arpl   WORD PTR [ebp+0x54f8fd01],di
  401467:	pop    eax
  401468:	push   edi
  401469:	adc    BYTE PTR [ebp-0x3f],dl
  40146c:	sahf   
  40146d:	lods   eax,DWORD PTR ds:[esi]
  40146e:	retf   0x2633
  401471:	inc    edi
  401472:	or     BYTE PTR [esi],cl
  401474:	aam    0xa6
  401476:	sar    DWORD PTR [ebp+eax*4+0xc],0x8b
  40147b:	push   esi
  40147c:	add    eax,0xe05fa9c
  401481:	daa    
  401482:	jl     0x401459
  401484:	mov    cl,0xb2
  401486:	fidivr WORD PTR [eax]
  401488:	push   eax
  401489:	dec    ecx
  40148a:	fimul  WORD PTR ds:0x12022e58
  401490:	out    dx,al
  401491:	xchg   esi,eax
  401492:	inc    eax
  401493:	or     BYTE PTR [esi],bl
  401495:	and    eax,0x5db671f9
  40149a:	(bad)  
  40149b:	or     bl,bl
  40149d:	cmc    
  40149e:	xor    edi,DWORD PTR [ebx-0x14c95ab]
  4014a4:	dec    ecx
  4014a5:	mov    fs,WORD PTR [edx]
  4014a7:	es jg  0x4014a6
  4014aa:	and    al,0x68
  4014ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014ad:	fisub  DWORD PTR [esi]
  4014af:	retf   0xcf67
  4014b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014b3:	sbb    esi,edi
  4014b5:	or     bl,BYTE PTR [esi]
  4014b7:	push   0xffffffca
  4014b9:	inc    ebp
  4014ba:	pop    ds
  4014bb:	inc    ebp
  4014bc:	xor    DWORD PTR [ecx],esi
  4014be:	jmp    0x401528
  4014c0:	rcr    DWORD PTR [ebx-0x664e050d],1
  4014c6:	jo     0x401507
  4014c8:	pop    ebp
  4014c9:	dec    BYTE PTR [edi-0x65]
  4014cc:	or     ah,bh
  4014ce:	xchg   esp,eax
  4014cf:	mov    ecx,0xf85c1ce4
  4014d4:	daa    
  4014d5:	ja     0x40150a
  4014d7:	std    
  4014d8:	jle    0x4014c4
  4014da:	test   al,0x96
  4014dc:	mov    DWORD PTR [esi],esi
  4014de:	fidiv  WORD PTR [ebx+0x1a]
  4014e1:	stos   DWORD PTR es:[edi],eax
  4014e2:	xlat   BYTE PTR ds:[ebx]
  4014e3:	cwde   
  4014e4:	pop    ecx
  4014e5:	xchg   DWORD PTR [edi+0x58],esi
  4014e8:	lock lahf 
  4014ea:	push   ebx
  4014eb:	inc    edi
  4014ec:	fstp   DWORD PTR [edi+esi*4-0x1]
  4014f0:	sub    dl,BYTE PTR [ebp+ecx*4-0x751b8625]
  4014f7:	pop    edi
  4014f8:	mov    edi,ss
  4014fa:	jecxz  0x40152d
  4014fc:	adc    BYTE PTR [eax],cl
  4014fe:	xchg   esi,eax
  4014ff:	pop    ds
  401500:	mov    al,ds:0x33272904
  401505:	rcl    DWORD PTR cs:[ebp-0x2b],1
  401509:	int3   
  40150a:	add    DWORD PTR [edi],ecx
  40150c:	std    
  40150d:	cs test eax,0x5991f2af
  401513:	fisttp QWORD PTR [ebx]
  401515:	in     eax,dx
  401516:	sbb    ecx,DWORD PTR [esi+0x53fb3ac2]
  40151c:	cwde   
  40151d:	pop    ss
  40151e:	call   0x8d2b:0xd9a104ef
  401525:	(bad)  
  401527:	mov    ds:0xf046159b,eax
  40152c:	add    al,al
  40152e:	call   0xfc5:0xa04f2bfe
  401535:	xor    ch,BYTE PTR [ebx+esi*2]
  401538:	jmp    0xb14f:0x713e7788
  40153f:	and    eax,0x6eade44e
  401544:	addr16 gs into 
  401547:	sub    BYTE PTR [eax],dh
  401549:	mov    esp,0x38789bf6
  40154e:	sub    eax,0x1c351153
  401553:	retf   
  401554:	sub    ebx,edi
  401556:	inc    edi
  401557:	imul   edi,ecx,0xeb28438e
  40155d:	sar    DWORD PTR ds:0x4e0d9b18,cl
  401563:	xor    cl,al
  401565:	das    
  401566:	jb     0x401520
  401568:	pop    ds
  401569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40156a:	jmp    0x3e9:0xd82ced16
  401571:	dec    esi
  401572:	or     DWORD PTR [ebx-0x32],esi
  401575:	aas    
  401576:	lahf   
  401577:	inc    ebx
  401578:	or     eax,0x7255613c
  40157d:	stos   BYTE PTR es:[edi],al
  40157e:	pop    ebp
  40157f:	std    
  401580:	stos   DWORD PTR es:[edi],eax
  401581:	out    0x75,al
  401583:	mov    sp,si
  401586:	aad    0xb5
  401588:	cmp    ch,dl
  40158a:	nop
  40158b:	mov    ds:0x613bb87b,al
  401590:	sub    DWORD PTR [ecx+edi*2-0xacdf503],esp
  401597:	mov    dl,0x69
  401599:	popa   
  40159a:	jl     0x4015d5
  40159c:	inc    eax
  40159d:	xor    BYTE PTR [ebp-0x5e],dh
  4015a0:	adc    DWORD PTR [eax],0x9b39ff15
  4015a6:	imul   ebp,DWORD PTR [ecx+0x5f],0xffffff9f
  4015aa:	ret    
  4015ab:	pop    ecx
  4015ac:	vshufpd xmm0,xmm6,xmm0,0x2
  4015b1:	jmp    0x40154c
  4015b3:	stc    
  4015b4:	cwde   
  4015b5:	mov    DWORD PTR [ecx+0x38],esi
  4015b8:	or     ah,BYTE PTR [ebp+0x3cfdc7e9]
  4015be:	aas    
  4015bf:	pushf  
  4015c0:	shl    DWORD PTR [edi],cl
  4015c2:	mov    es,WORD PTR [eax-0x61]
  4015c5:	xchg   BYTE PTR [eax+0x2e3a7cfe],ah
  4015cb:	(bad)  [esi+ebp*4+0x576b078a]
  4015d2:	loop   0x401578
  4015d4:	add    DWORD PTR [ebx+eax*1+0x4f996294],esp
  4015db:	xor    bh,BYTE PTR [ecx]
  4015dd:	ss popf 
  4015df:	jp     0x401646
  4015e1:	xchg   edi,eax
  4015e2:	or     BYTE PTR [eax+ebp*8+0x72],dl
  4015e6:	fsubrp st(7),st
  4015e8:	inc    BYTE PTR [ebp-0x5d]
  4015eb:	loopne 0x40165f
  4015ed:	inc    eax
  4015ee:	(bad)  
  4015f0:	cmp    bh,bh
  4015f2:	loop   0x4015c7
  4015f4:	sub    eax,DWORD PTR [eax+0x2]
  4015f7:	or     eax,0x584c3461
  4015fc:	daa    
  4015fd:	fcomp  DWORD PTR [eax]
  4015ff:	out    dx,al
  401600:	pop    esi
  401601:	mov    al,ds:0x4b592530
  401606:	sbb    al,0x4
  401608:	dec    ebp
  401609:	ds mov dh,0x16
  40160c:	ds cs inc edi
  40160f:	(bad)  
  401610:	cmp    dl,BYTE PTR [eax]
  401612:	mov    dl,dl
  401614:	arpl   WORD PTR [edi],sp
  401616:	inc    edi
  401617:	test   BYTE PTR [ecx+edx*4+0x5bdc39a5],cl
  40161e:	xor    DWORD PTR ss:[ebx-0x151d6cc],esi
  401625:	aam    0x21
  401627:	out    dx,eax
  401628:	pushf  
  401629:	push   0x53
  40162b:	push   cs
  40162c:	cmc    
  40162d:	add    ah,BYTE PTR [edx-0x4e8390eb]
  401633:	sbb    bh,dl
  401635:	test   al,0x5c
  401637:	mov    dl,0x76
  401639:	test   dl,dh
  40163b:	arpl   WORD PTR [edi-0x56],di
  40163e:	dec    edx
  40163f:	dec    ebp
  401640:	inc    ecx
  401641:	popa   
  401642:	cmp    esi,edx
  401644:	sub    eax,0xe473a4e0
  401649:	ja     0x4016af
  40164b:	sbb    ebp,DWORD PTR [ebx]
  40164d:	adc    cl,al
  40164f:	rcl    DWORD PTR [ecx-0x55],0xc7
  401653:	dec    edi
  401654:	rcl    BYTE PTR ds:0x112b67b4,1
  40165a:	or     al,0x53
  40165c:	mov    ds:0xb2d67278,eax
  401661:	cmc    
  401662:	dec    ecx
  401663:	inc    esi
  401664:	or     BYTE PTR [edi],0xc9
  401667:	dec    ecx
  401668:	sbb    bl,dh
  40166a:	inc    ebx
  40166b:	lahf   
  40166c:	dec    esp
  40166d:	sub    eax,DWORD PTR cs:[ecx]
  401670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401671:	ror    esi,0xc3
  401674:	rcr    BYTE PTR [eax+0x52],cl
  401677:	loop   0x40162d
  401679:	mov    esp,0x85208e05
  40167e:	inc    esp
  40167f:	cdq    
  401680:	or     DWORD PTR [edx+0x1e3494c6],0xffffffb6
  401687:	idiv   cl
  401689:	loopne 0x4016a4
  40168b:	imul   ebp,DWORD PTR [edi-0x70],0xee5b1d72
  401692:	or     al,0x8e
  401694:	lahf   
  401695:	cmp    BYTE PTR [edi-0x7],ah
  401698:	lods   eax,DWORD PTR ds:[esi]
  401699:	gs inc esp
  40169b:	outs   dx,BYTE PTR ds:[esi]
  40169c:	js     0x401674
  40169e:	mov    DWORD PTR [edi+ebx*8-0x31c1164],edx
  4016a5:	and    DWORD PTR [ebp-0x7e93561f],ecx
  4016ab:	mov    ebp,0x22d4b60f
  4016b0:	mov    ah,0x5c
  4016b2:	out    0xcd,eax
  4016b4:	clc    
  4016b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016b6:	fld    QWORD PTR [ebp-0x67]
  4016b9:	push   ebp
  4016ba:	mov    ecx,0x42585760
  4016bf:	gs jp  0x401694
  4016c2:	sub    ah,BYTE PTR [esi+0x49050f4a]
  4016c8:	inc    esi
  4016c9:	sub    bl,BYTE PTR [eax+0x4d]
  4016cc:	jecxz  0x401689
  4016ce:	aam    0x36
  4016d0:	push   esi
  4016d1:	cmp    BYTE PTR [ebp+ebp*1-0x22],al
  4016d5:	adc    esp,DWORD PTR [ebp-0x14]
  4016d8:	mov    edx,0xab4fe252
  4016dd:	push   cs
  4016de:	sub    eax,esp
  4016e0:	loopne 0x4016d3
  4016e2:	leave  
  4016e3:	sar    DWORD PTR [eax],0xe8
  4016e6:	mov    esp,0x8c56e4ed
  4016eb:	cmp    DWORD PTR [edx-0x3c],edx
  4016ee:	push   cs
  4016ef:	popa   
  4016f0:	sbb    bl,BYTE PTR [esi-0x47]
  4016f3:	stc    
  4016f4:	cs push es
  4016f6:	pop    ebx
  4016f7:	repz pop es
  4016f9:	cmp    edi,DWORD PTR [edi+ebx*8]
  4016fc:	out    dx,al
  4016fd:	cmp    al,0x9f
  4016ff:	jno    0x401755
  401701:	mov    cl,0x9c
  401703:	push   0x3b
  401705:	jmp    0x62cc8746
  40170a:	mov    ah,0xaf
  40170c:	pushf  
  40170d:	sbb    al,0x99
  40170f:	jnp    0x4016ba
  401711:	int    0x46
  401713:	pop    es
  401714:	mov    al,0x2a
  401716:	xchg   ebp,eax
  401717:	mov    al,0xa5
  401719:	jns    0x401770
  40171b:	(bad)  [eax+0x100959dc]
  401721:	jg     0x40179b
  401723:	mov    cl,0x5d
  401725:	in     al,dx
  401726:	pusha  
  401727:	inc    esi
  401728:	inc    esi
  401729:	popa   
  40172a:	(bad)  
  40172b:	jmp    0x8c4c:0xfc4f490a
  401732:	lock imul eax,DWORD PTR [edx],0xffffffac
  401736:	arpl   si,di
  401738:	arpl   sp,sp
  40173a:	js     0x4017a1
  40173c:	jb     0x401732
  40173e:	jp     0x4016cc
  401740:	fmul   QWORD PTR [edi-0x3dd53074]
  401746:	pop    esi
  401747:	or     DWORD PTR [edi-0x51a68f3],0x1078b80e
  401751:	loop   0x401714
  401753:	mov    ds:0xf7bae906,eax
  401758:	xchg   edi,eax
  401759:	aad    0x54
  40175b:	and    eax,0xfc10275c
  401760:	jp     0x401766
  401762:	rol    BYTE PTR [ecx+0x16032846],cl
  401768:	scas   al,BYTE PTR es:[edi]
  401769:	mov    esp,0xfa43495a
  40176e:	or     DWORD PTR [edx-0x2b],ebp
  401771:	call   0x3582:0x1b72f366
  401778:	cmp    BYTE PTR [ecx+0x1a4fce6e],ch
  40177e:	frstor [edx+0x7f]
  401781:	fwait
  401782:	aaa    
  401783:	jmp    0x401798
  401785:	xor    edi,DWORD PTR [ebx+0x1]
  401788:	out    0x17,al
  40178a:	ss dec esi
  40178c:	add    eax,0x88059c49
  401791:	pop    ss
  401792:	jmp    0x40171d
  401794:	fwait
  401795:	cmp    eax,0x64fb4cbc
  40179a:	inc    edx
  40179b:	fsubr  QWORD PTR [esi-0x6013d5a5]
  4017a1:	dec    esp
  4017a2:	cmp    DWORD PTR [ebx-0x64],eax
  4017a5:	iret   
  4017a6:	sbb    BYTE PTR [edx],ah
  4017a8:	in     al,dx
  4017a9:	mov    eax,ds:0xae8ada57
  4017ae:	fcomp  st(3)
  4017b0:	dec    eax
  4017b1:	hlt    
  4017b2:	(bad)  
  4017b3:	xchg   ecx,eax
  4017b4:	mov    dl,0xc4
  4017b6:	ds loopne 0x4017cb
  4017b9:	push   edx
  4017ba:	icebp  
  4017bb:	xor    ah,dl
  4017bd:	outs   dx,DWORD PTR ds:[esi]
  4017be:	xlat   BYTE PTR ds:[ebx]
  4017bf:	mov    WORD PTR [ebx+esi*1-0x76],ss
  4017c3:	test   DWORD PTR [ecx-0x3c],0xab25b8a3
  4017ca:	adc    ebp,DWORD PTR [edi]
  4017cc:	scas   eax,DWORD PTR es:[edi]
  4017cd:	jne    0x401802
  4017cf:	lods   al,BYTE PTR ds:[esi]
  4017d0:	jbe    0x4017d6
  4017d2:	pop    edi
  4017d3:	imul   esp,DWORD PTR [edx-0x40],0x50289187
  4017da:	mov    bl,0xd4
  4017dc:	dec    ecx
  4017dd:	push   cs
  4017de:	shr    bl,0x25
  4017e1:	test   DWORD PTR [ebp+0x46],esi
  4017e4:	cmc    
  4017e5:	lahf   
  4017e6:	ss dec eax
  4017e8:	jp     0x40178f
  4017ea:	or     eax,0x576e677
  4017ef:	mov    esp,0xf6ef66ce
  4017f4:	lods   eax,DWORD PTR ds:[esi]
  4017f5:	or     eax,DWORD PTR [ebx]
  4017f7:	cdq    
  4017f8:	adc    esi,DWORD PTR [edx-0x613fba07]
  4017fe:	leave  
  4017ff:	cmp    eax,0xe0896ae0
  401804:	out    0x5,al
  401806:	and    bl,BYTE PTR [eax-0x51]
  401809:	jle    0x4017b2
  40180b:	xlat   BYTE PTR ds:[ebx]
  40180c:	inc    ebx
  40180d:	or     esp,eax
  40180f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401810:	retf   
  401811:	retf   
  401812:	xor    BYTE PTR [esi],dl
  401814:	arpl   WORD PTR [edi],si
  401816:	cmp    BYTE PTR [esi-0x2ed13988],0x73
  40181d:	mov    ah,0x23
  40181f:	ret    
  401820:	dec    ecx
  401821:	hlt    
  401822:	push   cs
  401823:	pop    es
  401824:	xor    DWORD PTR [ecx-0x38bafac],eax
  40182a:	xor    eax,0xf867d4e6
  40182f:	mov    ds:0xe91f17c6,eax
  401834:	mov    BYTE PTR [ecx],cl
  401836:	int3   
  401837:	ror    DWORD PTR [ebp+0x1ddd7217],1
  40183d:	sub    BYTE PTR [edx-0x3d],bh
  401840:	ss xchg edx,eax
  401842:	mov    dh,0xac
  401844:	inc    edx
  401845:	push   ss
  401846:	mov    esp,DWORD PTR [ecx-0x425dc37d]
  40184c:	dec    eax
  40184d:	and    bl,BYTE PTR [edx]
  40184f:	inc    ecx
  401850:	arpl   cx,di
  401852:	mov    ds:0xa1d13ad1,eax
  401857:	lock shl BYTE PTR [edi],cl
  40185a:	inc    edx
  40185b:	gs jecxz 0x4018c2
  40185e:	dec    edx
  40185f:	xor    al,0xe
  401861:	pop    ebx
  401862:	aam    0x45
  401864:	es mov ebx,0x7fed56c8
  40186a:	je     0x4018e1
  40186c:	or     ebp,ecx
  40186e:	mov    eax,0xdf747289
  401873:	stos   DWORD PTR es:[edi],eax
  401874:	(bad)  
  401875:	int3   
  401876:	shl    BYTE PTR [ebx-0x6110f177],0x37
  40187d:	mov    dl,BYTE PTR [eax+0x295c1cee]
  401883:	adc    BYTE PTR [eax-0x16],0x21
  401887:	bound  esp,QWORD PTR [edx+0x1e]
  40188a:	cmp    eax,ebp
  40188c:	push   esi
  40188d:	sbb    BYTE PTR [edx-0x72],0x4f
  401891:	in     al,0xa5
  401893:	mov    al,0x72
  401895:	mov    dh,0xfa
  401897:	test   BYTE PTR [eax-0x11],al
  40189a:	test   al,0xa9
  40189c:	cmp    cl,cl
  40189e:	leave  
  40189f:	xchg   edx,eax
  4018a0:	mov    ah,0xa0
  4018a2:	mov    ds:0x4fe6bf9c,eax
  4018a7:	sbb    DWORD PTR [ebp+ebx*2+0x1a],edi
  4018ab:	jge    0x40185d
  4018ad:	xchg   esi,eax
  4018ae:	and    eax,0x84554c61
  4018b3:	cmp    BYTE PTR [eax+ebx*4-0x73],0x25
  4018b8:	xor    eax,0x22259135
  4018bd:	sbb    ebx,ebx
  4018bf:	sub    eax,0x5f86aed6
  4018c4:	fcomip st,st(0)
  4018c6:	sbb    dh,BYTE PTR [ebp-0x6b716dce]
  4018cc:	add    bh,ah
  4018ce:	adc    eax,0x3013c5eb
  4018d3:	scas   al,BYTE PTR es:[edi]
  4018d4:	or     al,BYTE PTR [edx]
  4018d6:	and    ch,BYTE PTR [ebx]
  4018d8:	jmp    0x63f61c6e
  4018dd:	sbb    ch,BYTE PTR [ebp-0x5841c531]
  4018e3:	push   esp
  4018e4:	sbb    bl,BYTE PTR [eax+0x27]
  4018e7:	jge    0x4018fd
  4018e9:	inc    ebx
  4018ea:	push   cs
  4018eb:	xchg   ebx,eax
  4018ec:	loope  0x4018bd
  4018ee:	in     eax,dx
  4018ef:	mov    esi,DWORD PTR [ebx+0x11c3569a]
  4018f5:	mov    al,ds:0x7488019e
  4018fa:	daa    
  4018fb:	ret    0x766e
  4018fe:	cmp    eax,DWORD PTR [edi-0x3]
  401901:	add    dl,BYTE PTR [ebp-0x78]
  401904:	sub    DWORD PTR [edi-0x37],ecx
  401907:	xlat   BYTE PTR ds:[ebx]
  401908:	mov    BYTE PTR [ebp+edi*2-0x10],0x32
  40190d:	sub    dh,BYTE PTR [edx+0x3e]
  401910:	in     eax,0x37
  401912:	int    0xb2
  401914:	(bad)
  401917:	jo     0x40196b
  401919:	mov    bh,0x84
  40191b:	inc    esp
  40191c:	xchg   ebx,eax
  40191d:	aad    0xd7
  40191f:	sbb    eax,0xe9a546ee
  401924:	fcom   st(0)
  401926:	imul   eax,DWORD PTR [edx],0xe7a5d53f
  40192c:	sub    DWORD PTR [esi+0x6b2dc32d],ecx
  401932:	and    eax,0xe3c5e867
  401937:	ja     0x4018ed
  401939:	or     ah,BYTE PTR [esi+0x77]
  40193c:	xor    al,0x74
  40193e:	pop    ss
  40193f:	repz and edx,edi
  401942:	jg     0x4018f2
  401944:	test   DWORD PTR [ebx],esp
  401946:	fistp  DWORD PTR [eax]
  401948:	ror    BYTE PTR [ebx],cl
  40194a:	jmp    0x4019a2
  40194c:	add    DWORD PTR [ecx-0x27],esi
  40194f:	ret    
  401950:	call   0x5f31:0x7d2c3a04
  401957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401958:	int3   
  401959:	adc    DWORD PTR [esi],ebp
  40195b:	mov    dl,0x18
  40195d:	pop    es
  40195e:	in     al,0x6a
  401960:	sbb    BYTE PTR [edi],al
  401962:	es inc ebx
  401964:	mov    al,ds:0x82e539b9
  401969:	pushf  
  40196a:	pusha  
  40196b:	mov    BYTE PTR [ecx-0x67b37301],dh
  401971:	adc    eax,0x2185bbf5
  401976:	push   cs
  401977:	push   eax
  401978:	inc    eax
  401979:	sbb    esp,esi
  40197b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40197c:	adc    esi,DWORD PTR [ebx]
  40197e:	pop    ss
  40197f:	xchg   esp,eax
  401980:	scas   eax,DWORD PTR es:[edi]
  401981:	pop    ds
  401982:	mov    ch,0xe6
  401984:	in     al,0x1b
  401986:	xor    BYTE PTR [ebx+ebx*1-0x59],ah
  40198a:	sub    al,0x89
  40198c:	cmp    al,0x73
  40198e:	dec    esi
  40198f:	jbe    0x4019c0
  401991:	mov    bl,0x31
  401993:	adc    eax,DWORD PTR [esp+eiz*2-0x1]
  401997:	push   ds
  401998:	loop   0x401a0b
  40199a:	and    DWORD PTR [ecx-0x123c36b9],ebp
  4019a0:	sbb    al,0x35
  4019a2:	scas   eax,DWORD PTR es:[edi]
  4019a3:	dec    esp
  4019a4:	fst    QWORD PTR [esi+0x2c]
  4019a7:	mov    dl,0x27
  4019a9:	jecxz  0x401a0e
  4019ab:	in     al,dx
  4019ac:	outs   dx,BYTE PTR ds:[esi]
  4019ad:	cmp    ebx,DWORD PTR [ebp-0x6cbe86e3]
  4019b3:	in     al,dx
  4019b4:	(bad)  
  4019b5:	or     eax,0x7b94a560
  4019ba:	(bad)  
  4019bc:	xor    bh,BYTE PTR [ecx+0x7ff533bd]
  4019c2:	fs pop edx
  4019c4:	inc    ecx
  4019c5:	xchg   edx,eax
  4019c6:	xor    al,0xbd
  4019c8:	inc    esp
  4019c9:	add    ecx,DWORD PTR [esi+ecx*4+0x66ea09f4]
  4019d0:	sbb    ch,0x4f
  4019d3:	add    eax,0x922df77
  4019d8:	jbe    0x401961
  4019da:	pop    edi
  4019db:	fcmovb st,st(3)
  4019dd:	test   BYTE PTR [ebp-0x5f],ah
  4019e0:	push   esi
  4019e1:	or     esi,esi
  4019e3:	in     eax,0x4c
  4019e5:	in     eax,dx
  4019e6:	mov    bh,0x59
  4019e8:	scas   eax,DWORD PTR es:[edi]
  4019e9:	xor    BYTE PTR ds:0xea6ba40c,0xf1
  4019f0:	mov    esp,0xb878437
  4019f5:	int3   
  4019f6:	sbb    cl,BYTE PTR [eax-0x6c]
  4019f9:	adc    DWORD PTR [ebx],ebx
  4019fb:	je     0x401a2c
  4019fd:	adc    eax,DWORD PTR [eax+0x31]
  401a00:	ss in  al,0x5e
  401a03:	sbb    eax,0x4fc647aa
  401a08:	sub    BYTE PTR [ecx],dl
  401a0a:	call   0x51cb:0x8f6c3c14
  401a11:	add    eax,0xe9f77053
  401a16:	mov    dl,cl
  401a18:	clc    
  401a19:	xor    BYTE PTR [ebx+0xc096a7c],bh
  401a1f:	js     0x401a0e
  401a21:	pop    ebx
  401a22:	pusha  
  401a23:	cs mov ebx,0xb6e87fd9
  401a29:	mov    esi,DWORD PTR [esi-0x43]
  401a2c:	fld    DWORD PTR [edi+0x635ac429]
  401a32:	shl    ebp,cl
  401a34:	in     eax,dx
  401a35:	clc    
  401a36:	jae    0x401a03
  401a38:	add    ebp,DWORD PTR [eax-0x4c8e996a]
  401a3e:	ins    DWORD PTR es:[edi],dx
  401a3f:	in     al,dx
  401a40:	xlat   BYTE PTR ds:[ebx]
  401a41:	retf   
  401a42:	pop    ecx
  401a43:	ret    0xa4d9
  401a46:	and    DWORD PTR [ebx],esp
  401a48:	aas    
  401a49:	mov    al,0x51
  401a4b:	lock cs sbb al,0xb5
  401a4f:	fs xor al,0x2f
  401a52:	int3   
  401a53:	enter  0x461,0x21
  401a57:	in     al,0x61
  401a59:	dec    ebx
  401a5a:	pop    esi
  401a5b:	or     al,0x66
  401a5d:	sub    DWORD PTR ds:0x6a93a65b,esi
  401a63:	or     al,al
  401a65:	cmp    eax,0xda1371d6
  401a6a:	int    0xea
  401a6c:	sub    eax,DWORD PTR [esp+ebp*4+0x3c]
  401a70:	data16 jecxz 0x4019fb
  401a73:	push   DWORD PTR ds:0x9a58
  401a78:	push   eax
  401a79:	into   
  401a7a:	fs arpl ax,sp
  401a7d:	test   BYTE PTR [edi+edx*4],bh
  401a80:	sbb    BYTE PTR [ebx+ebx*1-0x3100b8f2],dl
  401a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a88:	int    0xf8
  401a8a:	cmc    
  401a8b:	or     ch,cl
  401a8d:	xchg   ebp,eax
  401a8e:	pushf  
  401a8f:	sahf   
  401a90:	inc    esi
  401a91:	rcr    DWORD PTR [ebx-0x1728f55],0xa3
  401a98:	cmp    BYTE PTR [edi+esi*2],dh
  401a9b:	outs   dx,DWORD PTR ds:[esi]
  401a9c:	clc    
  401a9d:	(bad)  
  401a9e:	jp     0x401a45
  401aa0:	push   eax
  401aa1:	xor    esp,0x78e72fe1
  401aa7:	dec    esp
  401aa8:	pop    ecx
  401aa9:	xchg   esp,eax
  401aaa:	sub    dl,BYTE PTR [edx+0x3f16f18d]
  401ab0:	dec    ecx
  401ab1:	and    DWORD PTR [esi+0x6a],0x4b
  401ab5:	mul    DWORD PTR es:[ecx-0x47]
  401ab9:	fwait
  401aba:	in     al,dx
  401abb:	(bad)  
  401abc:	jle    0x401a7a
  401abe:	clc    
  401abf:	pop    es
  401ac0:	jle    0x401b34
  401ac2:	cli    
  401ac3:	mov    edi,0x2e2fd284
  401ac8:	(bad)  
  401aca:	dec    ecx
  401acb:	jge    0x401a64
  401acd:	cmc    
  401ace:	je     0x401aaf
  401ad0:	(bad)  
  401ad1:	adc    al,cl
  401ad3:	mov    dh,0x67
  401ad5:	mov    dh,0xf8
  401ad7:	cmp    al,0xa
  401ad9:	jmp    0x401a6b
  401adb:	mov    ebp,0x5c484f6a
  401ae0:	test   BYTE PTR [esi+0x3a],bh
  401ae3:	mov    DWORD PTR [ebp*2+0x75d9d1c5],ebx
  401aea:	inc    ecx
  401aeb:	imul   eax,DWORD PTR [esp+ecx*8+0x3e],0x259d2d64
  401af3:	jno    0x401a90
  401af5:	and    DWORD PTR [edi+ebp*4],ebp
  401af8:	push   ss
  401af9:	add    edi,DWORD PTR [ecx+eiz*2+0x32eda772]
  401b00:	add    DWORD PTR [edi],ebp
  401b02:	jge    0x401b16
  401b04:	xchg   ecx,eax
  401b05:	pop    es
  401b06:	pop    eax
  401b07:	cmp    eax,0x8a76bdd7
  401b0c:	aas    
  401b0d:	jmp    0x3b2b:0x21213a59
  401b14:	mov    eax,ds:0xda919479
  401b19:	mov    cl,0xf1
  401b1b:	dec    edi
  401b1c:	in     eax,dx
  401b1d:	mov    al,0x2f
  401b1f:	mov    esp,0x6d94e9b8
  401b24:	dec    esi
  401b25:	push   ds
  401b26:	ja     0x401af2
  401b28:	mov    ss,esp
  401b2a:	add    bh,BYTE PTR [ebx+0x7ea4a62b]
  401b30:	or     ebp,esp
  401b32:	adc    DWORD PTR [edx+0x47e697ff],edi
  401b38:	adc    DWORD PTR [esi-0x1330cbd2],eax
  401b3e:	sahf   
  401b3f:	cmp    eax,0xd9314b85
  401b44:	cmp    ecx,DWORD PTR [esi+0x1a9210d1]
  401b4a:	call   0xe777:0x76f12a8e
  401b51:	dec    ecx
  401b52:	(bad)  
  401b53:	cld    
  401b54:	sub    ah,al
  401b56:	dec    edx
  401b57:	or     BYTE PTR [edx-0x65ce681b],al
  401b5d:	ret    0x8ae9
  401b60:	call   0xc6b56a4
  401b65:	clc    
  401b66:	add    dl,bh
  401b68:	cli    
  401b69:	(bad)  
  401b6a:	cli    
  401b6b:	daa    
  401b6c:	(bad)  [eax]
  401b6e:	les    ebx,FWORD PTR [edi-0x6f285665]
  401b74:	rol    DWORD PTR ds:0xaf5d3052,0x59
  401b7b:	fld    st(5)
  401b7d:	mov    esi,DWORD PTR [ebx+0x13629fb]
  401b83:	pop    edx
  401b84:	out    dx,eax
  401b85:	push   ds
  401b86:	popa   
  401b87:	ja     0x401b1b
  401b89:	shr    BYTE PTR [esi-0x4],0x93
  401b8d:	mov    DWORD PTR [edi-0x6],ebx
  401b90:	sbb    al,0xe4
  401b92:	mov    edx,0xf579717e
  401b97:	inc    eax
  401b98:	xchg   esp,eax
  401b99:	jle    0x401bdb
  401b9b:	enter  0x15d0,0x24
  401b9f:	sub    eax,0xda8662a2
  401ba4:	ins    DWORD PTR es:[edi],dx
  401ba5:	stc    
  401ba6:	push   esp
  401ba7:	loopne 0x401c1b
  401ba9:	and    DWORD PTR [edx+eiz*4-0x44f68397],ecx
  401bb0:	or     edi,edx
  401bb2:	inc    esi
  401bb3:	and    al,0x1a
  401bb5:	shl    edi,0x36
  401bb8:	js     0x401c2a
  401bba:	inc    eax
  401bbb:	mov    esp,0xa5c4428e
  401bc0:	jp     0x401c3c
  401bc2:	lods   al,BYTE PTR ds:[esi]
  401bc3:	or     DWORD PTR [edx-0x6a],ebp
  401bc6:	push   es
  401bc7:	mov    ah,0x4
  401bc9:	or     ecx,DWORD PTR [eax+0x6]
  401bcc:	data16 sub BYTE PTR [eax],bh
  401bcf:	mov    ah,0x6d
  401bd1:	aas    
  401bd2:	(bad)  
  401bd3:	mov    esi,0x4018b3cd
  401bd8:	je     0x401bd3
  401bda:	cdq    
  401bdb:	jae    0x401ba1
  401bdd:	es aam 0xe0
  401be0:	sub    BYTE PTR [esi+ebp*2-0x16b70f6d],al
  401be7:	pop    ebx
  401be8:	fwait
  401be9:	adc    eax,0x9579bbbb
  401bee:	call   0x7063c455
  401bf3:	mov    ebp,0xb09100da
  401bf8:	push   cs
  401bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bfa:	cmp    al,0x84
  401bfc:	test   al,0x64
  401bfe:	(bad)  
  401bff:	inc    ah
  401c01:	addr16 adc edi,0x37
  401c05:	or     ebx,ebx
  401c07:	pop    ds
  401c08:	in     eax,dx
  401c09:	or     edx,esi
  401c0b:	ret    0xb9b3
  401c0e:	(bad)  
  401c0f:	mov    eax,ds:0x80157ab9
  401c14:	(bad)  
  401c15:	js     0x401c93
  401c17:	push   esp
  401c18:	and    ecx,eax
  401c1a:	pop    eax
  401c1b:	mov    edi,0xf58dbf93
  401c20:	xor    ebp,DWORD PTR [eax-0xd31974c]
  401c26:	add    bl,bh
  401c28:	in     al,dx
  401c29:	push   cs
  401c2a:	aam    0x8b
  401c2c:	das    
  401c2d:	aam    0x3a
  401c2f:	sbb    ebx,DWORD PTR [eax+0x66e9fd6d]
  401c35:	inc    ebp
  401c36:	mov    cl,BYTE PTR [esi+0x50129de6]
  401c3c:	sbb    al,0xb3
  401c3e:	aaa    
  401c3f:	jecxz  0x401be5
  401c41:	jg     0x401c4b
  401c43:	adc    al,0xae
  401c45:	cwde   
  401c46:	and    edx,eax
  401c48:	mov    al,BYTE PTR [edx+ebx*8-0x17]
  401c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c4d:	nop
  401c4e:	mov    dh,0xf9
  401c50:	mov    DWORD PTR [ebx-0x91a98bb],esp
  401c56:	xor    al,0x41
  401c58:	daa    
  401c59:	cdq    
  401c5a:	mov    ebx,0x875dd0f4
  401c5f:	xor    BYTE PTR [eax-0x3df11819],bh
  401c65:	sub    DWORD PTR [edx+eax*2],ebp
  401c68:	icebp  
  401c69:	mov    BYTE PTR [ebp-0xc],ah
  401c6c:	and    edi,DWORD PTR [esi+0x292660bc]
  401c72:	rcl    BYTE PTR [edi],0xee
  401c75:	out    dx,eax
  401c76:	xchg   edi,eax
  401c77:	(bad)  
  401c78:	mov    ah,0x8a
  401c7a:	cmp    al,0xfa
  401c7c:	into   
  401c7d:	ret    0xa32a
  401c80:	call   DWORD PTR [edx+0x6d]
  401c83:	call   0x2140ae22
  401c88:	int    0x8d
  401c8a:	sti    
  401c8b:	(bad)  
  401c8c:	dec    edx
  401c8d:	adc    ecx,DWORD PTR [eax-0x3]
  401c90:	repz dec esp
  401c92:	mov    ebx,0xea8baec3
  401c97:	sar    BYTE PTR [ecx],0x24
  401c9a:	and    edi,DWORD PTR [esp+ebp*2]
  401c9d:	loopne 0x401c65
  401c9f:	sub    al,0x29
  401ca1:	dec    ebp
  401ca2:	xor    edi,DWORD PTR [eax]
  401ca4:	lods   al,BYTE PTR ds:[esi]
  401ca5:	mov    DWORD PTR [eax+0x10],edi
  401ca8:	jo     0x401c5a
  401caa:	push   es
  401cab:	je     0x401d0b
  401cad:	sub    BYTE PTR [ebx],bl
  401caf:	dec    edi
  401cb0:	test   esi,0x8e05ffa9
  401cb6:	mov    al,ds:0x36368f08
  401cbb:	int3   
  401cbc:	in     eax,0xf6
  401cbe:	mov    bh,0xad
  401cc0:	jne    0x401cd9
  401cc2:	not    BYTE PTR [eax]
  401cc4:	mov    al,0x2d
  401cc6:	cmp    eax,0x5211606e
  401ccb:	clc    
  401ccc:	push   edi
  401ccd:	test   eax,0xa3c7899f
  401cd2:	xlat   BYTE PTR ds:[ebx]
  401cd3:	dec    edi
  401cd4:	repnz or DWORD PTR [edi+0xf],ebp
  401cd8:	xor    ecx,DWORD PTR [ebx]
  401cda:	pop    esp
  401cdb:	jnp    0x401c6b
  401cdd:	or     bl,BYTE PTR [ecx+0x6e]
  401ce0:	js     0x401ca5
  401ce2:	test   al,0x26
  401ce4:	adc    eax,0xf9cee1cf
  401ce9:	push   esp
  401cea:	adc    BYTE PTR [edx+eax*4+0x7e],ah
  401cee:	pushf  
  401cef:	int    0xe2
  401cf1:	(bad)  
  401cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cf4:	sbb    eax,0x4785af41
  401cf9:	and    cl,BYTE PTR [edx]
  401cfb:	mov    DWORD PTR [edx+ebx*8+0x11],ebp
  401cff:	cmp    bh,BYTE PTR cs:[esp+esi*4+0x39888fec]
  401d07:	(bad)  
  401d09:	outs   dx,BYTE PTR ds:[esi]
  401d0a:	das    
  401d0b:	ja     0x401d28
  401d0d:	add    BYTE PTR [ebx+edx*4+0x67535f7b],bh
  401d14:	stc    
  401d15:	mov    BYTE PTR [edx+0x2c2651e6],cl
  401d1b:	add    eax,0x514e0b39
  401d20:	mov    eax,ds:0xe0a6994c
  401d25:	in     al,0xb7
  401d27:	and    esi,DWORD PTR [ecx-0x38]
  401d2a:	scas   eax,DWORD PTR es:[edi]
  401d2b:	les    esp,FWORD PTR [ebp+0x2635819c]
  401d31:	or     al,0x32
  401d33:	mov    eax,ds:0xe99fd65e
  401d38:	lahf   
  401d39:	aam    0x12
  401d3b:	push   ss
  401d3c:	push   ss
  401d3d:	push   0x79
  401d3f:	pop    esi
  401d40:	ror    ecx,1
  401d42:	arpl   WORD PTR ds:0x44b7e7b1,di
  401d48:	pop    ebp
  401d49:	lea    eax,[ebp-0x75]
  401d4c:	mov    bl,0x49
  401d4e:	nop
  401d4f:	mov    esp,0xe534949
  401d54:	cmc    
  401d55:	lds    ecx,FWORD PTR [esi]
  401d57:	xchg   ecx,eax
  401d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d59:	mov    al,ds:0xb5d39fce
  401d5e:	adc    ebp,DWORD PTR [edi+0x61044a77]
  401d64:	inc    edx
  401d65:	jl     0x401dd0
  401d67:	lahf   
  401d68:	xchg   cl,cl
  401d6a:	xlat   BYTE PTR ds:[ebx]
  401d6b:	inc    edx
  401d6c:	popa   
  401d6d:	xchg   ebx,eax
  401d6e:	shr    ah,0xac
  401d71:	push   edi
  401d72:	pop    eax
  401d73:	jns    0x401da5
  401d75:	pusha  
  401d76:	dec    ecx
  401d77:	test   DWORD PTR [edx],0x5061e961
  401d7d:	cmp    esi,DWORD PTR [ecx-0x5c]
  401d80:	pop    ecx
  401d81:	std    
  401d82:	stc    
  401d83:	add    al,ch
  401d85:	mov    ch,0xe8
  401d87:	or     al,BYTE PTR [edi+ebp*2+0x138d5753]
  401d8e:	sub    ah,BYTE PTR [edx-0x5a24addd]
  401d94:	push   ecx
  401d95:	adc    dl,BYTE PTR [esi+0x41]
  401d98:	inc    edx
  401d99:	inc    edi
  401d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d9b:	adc    eax,0x772b9f3e
  401da0:	and    DWORD PTR [edx-0x260f8440],ebx
  401da6:	mov    dh,0x3e
  401da8:	sar    ah,cl
  401daa:	imul   ebx,ebp,0x59
  401dad:	or     dl,bl
  401daf:	imul   ebx,DWORD PTR [edx-0x7931cb27],0xfffffff0
  401db6:	sbb    bh,bh
  401db8:	idiv   esi
  401dba:	mov    bl,0x9
  401dbc:	xor    esi,edi
  401dbe:	jne    0x401d98
  401dc0:	xor    al,0x9
  401dc2:	jmp    0x401d6d
  401dc4:	ins    BYTE PTR es:[edi],dx
  401dc5:	sub    al,BYTE PTR [edi+0x37442e8b]
  401dcb:	sbb    ebp,esi
  401dcd:	shl    BYTE PTR [eiz*1+0x2534be92],0xb9
  401dd5:	xor    cl,BYTE PTR [ebp-0x6f]
  401dd8:	cmc    
  401dd9:	fisubr WORD PTR [edx+0x6]
  401ddc:	inc    edi
  401ddd:	pushf  
  401dde:	cdq    
  401ddf:	test   BYTE PTR ds:0xd1260370,0xb6
  401de6:	ret    
  401de7:	les    ebx,FWORD PTR [edx]
  401de9:	adc    esi,DWORD PTR [esi-0xb10cb05]
  401def:	fsub   QWORD PTR [edi+0x6f]
  401df2:	enter  0x70a0,0x24
  401df6:	inc    ebp
  401df7:	loope  0x401dab
  401df9:	cli    
  401dfa:	jecxz  0x401d7f
  401dfc:	cmp    ebx,ebp
  401dfe:	xchg   ecx,eax
  401dff:	pop    ecx
  401e00:	add    eax,0xc1c66b3c
  401e05:	adc    cl,bh
  401e07:	fs lahf 
  401e09:	ret    
  401e0a:	or     al,0x9d
  401e0c:	and    DWORD PTR [ebp-0x53],eax
  401e0f:	retf   
  401e10:	cld    
  401e11:	xchg   edx,eax
  401e12:	addr16 mov ah,0xb8
  401e15:	sub    al,0x87
  401e17:	cld    
  401e18:	int3   
  401e19:	or     eax,0xf630c4e9
  401e1e:	hlt    
  401e1f:	or     eax,0x5cc427cb
  401e24:	ins    DWORD PTR es:[edi],dx
  401e25:	call   0xa6cc7c94
  401e2a:	mov    eax,0x9003fe93
  401e2f:	(bad)  
  401e31:	mov    al,0x9a
  401e33:	inc    edx
  401e34:	inc    ecx
  401e35:	xchg   edi,eax
  401e36:	leave  
  401e37:	mov    ebp,0xb2a98a0d
  401e3c:	xlat   BYTE PTR ds:[ebx]
  401e3d:	ss repz movsx edx,bl
  401e42:	call   0xb2d4b218
  401e47:	and    al,0x98
  401e49:	xchg   ebx,eax
  401e4a:	sar    edx,0x3c
  401e4d:	popa   
  401e4e:	in     eax,dx
  401e4f:	stos   BYTE PTR es:[edi],al
  401e50:	leave  
  401e51:	mov    ds:0xfa02d417,al
  401e56:	or     edx,DWORD PTR [edi+0x6b]
  401e59:	sub    DWORD PTR [eax+0x3177b072],ebp
  401e5f:	repnz adc BYTE PTR [edi+0x64],ah
  401e63:	push   edx
  401e64:	sti    
  401e65:	pop    es
  401e66:	ret    0xecca
  401e69:	inc    ebx
  401e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e6b:	stos   DWORD PTR es:[edi],eax
  401e6c:	sub    DWORD PTR [edi-0x3d8f249b],edi
  401e72:	adc    eax,0xff5b4de9
  401e77:	fidivr DWORD PTR [edx]
  401e79:	sub    edi,DWORD PTR [esi]
  401e7b:	push   ebx
  401e7c:	mov    ah,0x22
  401e7e:	repz in eax,dx
  401e80:	stos   BYTE PTR es:[edi],al
  401e81:	sbb    BYTE PTR [eax+0x78],cl
  401e84:	and    ch,dh
  401e86:	in     eax,dx
  401e87:	jmp    0x401ea9
  401e89:	fwait
  401e8a:	adc    al,0x8f
  401e8c:	inc    ecx
  401e8d:	sahf   
  401e8e:	popa   
  401e8f:	push   0xfffffff7
  401e91:	rcr    DWORD PTR ds:0xfd7431d7,0xe9
  401e98:	or     bl,BYTE PTR [ebp+0x16]
  401e9b:	scas   eax,DWORD PTR es:[edi]
  401e9c:	es xchg edx,eax
  401e9e:	fsubr  DWORD PTR [edx-0x580b607d]
  401ea4:	xchg   DWORD PTR ds:0xadfa8e87,edi
  401eaa:	push   ds
  401eab:	pop    edi
  401eac:	or     al,0x84
  401eae:	add    DWORD PTR [ebp+0x74],ebx
  401eb1:	pop    ecx
  401eb2:	jle    0x401f22
  401eb4:	xor    DWORD PTR [ecx],ebp
  401eb6:	add    ch,bh
  401eb8:	mov    ebp,0x927fde17
  401ebd:	in     eax,0xb9
  401ebf:	loope  0x401ec5
  401ec1:	clc    
  401ec2:	and    DWORD PTR ds:0x169247bd,edx
  401ec8:	mov    ah,0x50
  401eca:	xor    bl,BYTE PTR [esi-0x19c157bc]
  401ed0:	cli    
  401ed1:	stos   BYTE PTR es:[edi],al
  401ed2:	cmp    BYTE PTR [esi],0x6c
  401ed5:	xchg   esi,eax
  401ed6:	or     bh,BYTE PTR [esi]
  401ed8:	xor    dl,BYTE PTR [eax]
  401eda:	fnstcw WORD PTR [edi]
  401edc:	mov    eax,0x8b0b1f05
  401ee1:	sbb    al,0xad
  401ee3:	stos   BYTE PTR es:[edi],al
  401ee4:	dec    ebx
  401ee5:	icebp  
  401ee6:	inc    edx
  401ee7:	fucomi st,st(5)
  401ee9:	stos   DWORD PTR es:[edi],eax
  401eea:	mov    eax,ds:0xa4aae9eb
  401eef:	jge    0x401f65
  401ef1:	es inc esi
  401ef3:	mov    dh,0xa5
  401ef5:	cdq    
  401ef6:	test   BYTE PTR [eax-0x62],dh
  401ef9:	adc    BYTE PTR [ebx-0x1a],ah
  401efc:	aam    0xf3
  401efe:	test   al,0x92
  401f00:	stos   BYTE PTR es:[edi],al
  401f01:	int3   
  401f02:	hlt    
  401f03:	aam    0x4
  401f05:	cs (bad) 
  401f07:	add    eax,0xaede10c5
  401f0c:	sbb    DWORD PTR [eax+0x7ac42d2c],edi
  401f12:	jmp    DWORD PTR [ecx-0x24f0b3b0]
  401f18:	std    
  401f19:	adc    DWORD PTR [edx+0xdacc954],ebp
  401f1f:	jno    0x401f5f
  401f21:	in     eax,dx
  401f22:	aam    0x90
  401f24:	jnp    0x401f4d
  401f26:	ret    0x8776
  401f29:	xor    DWORD PTR [eax-0x6ad602ec],esp
  401f2f:	sub    edx,DWORD PTR [ebx]
  401f31:	out    0x6f,eax
  401f33:	cs jle 0x401f64
  401f36:	leave  
  401f37:	gs popf 
  401f39:	xor    dl,BYTE PTR [ecx-0x6ec16826]
  401f3f:	les    esi,FWORD PTR [eax+0x73aef549]
  401f45:	xchg   ah,al
  401f47:	mov    esp,0xfcd60948
  401f4c:	hlt    
  401f4d:	jge    0x401f46
  401f4f:	stc    
  401f50:	frstor [edi+0x1096a8b9]
  401f56:	sbb    edi,DWORD PTR [ecx+0x59]
  401f59:	dec    esp
  401f5a:	xor    BYTE PTR [esi],dl
  401f5c:	dec    eax
  401f5d:	out    0xa8,al
  401f5f:	sbb    ah,BYTE PTR [edi+0x29348096]
  401f65:	cmp    BYTE PTR [esp+ebp*2],al
  401f68:	jg     0x401f0f
  401f6a:	clc    
  401f6b:	sub    BYTE PTR [edx+0x7b4fca66],al
  401f71:	cmp    esp,DWORD PTR [ebx]
  401f73:	mov    cl,BYTE PTR [ebx+0x7a]
  401f76:	pop    ebx
  401f77:	xchg   ecx,eax
  401f78:	mov    esp,0x450dee6a
  401f7d:	stc    
  401f7e:	inc    eax
  401f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f80:	jnp    0x401fae
  401f82:	fiadd  DWORD PTR [esi]
  401f84:	mov    ecx,0x599a27be
  401f89:	pavgb  mm5,mm2
  401f8c:	std    
  401f8d:	sbb    DWORD PTR ds:0xaaeca671,esp
  401f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f94:	retf   0xf9f2
  401f97:	loop   0x401ffd
  401f99:	scas   al,BYTE PTR es:[edi]
  401f9a:	pop    ss
  401f9b:	sbb    BYTE PTR [ecx-0x6e69b34e],dh
  401fa1:	in     eax,0x3d
  401fa3:	sub    eax,DWORD PTR [esp+ecx*4-0x232c7b01]
  401faa:	push   ecx
  401fab:	loopne 0x40200b
  401fad:	dec    ebp
  401fae:	gs ss dec ebx
  401fb1:	and    ah,cl
  401fb3:	ins    DWORD PTR es:[edi],dx
  401fb4:	mov    ebx,0x6ca26734
  401fb9:	dec    esi
  401fba:	inc    ecx
  401fbb:	pop    esp
  401fbc:	adc    dh,BYTE PTR [ebp-0x6d]
  401fbf:	mov    esp,ebp
  401fc1:	jecxz  0x40203f
  401fc3:	iret   
  401fc4:	add    DWORD PTR [eax-0x12d0c5e2],esi
  401fca:	push   eax
  401fcb:	mov    ds:0x297fb479,eax
  401fd0:	rcr    edx,0xd4
  401fd3:	or     edi,DWORD PTR [esp+eiz*2]
  401fd6:	stc    
  401fd7:	fwait
  401fd8:	or     bl,dh
  401fda:	mov    BYTE PTR [edx],0x5c
  401fdd:	adc    cl,bh
  401fdf:	js     0x401f7c
  401fe1:	(bad)  
  401fe2:	add    edi,DWORD PTR [ebp+esi*8-0x7a]
  401fe6:	inc    eax
  401fe7:	fcmovb st,st(7)
  401fe9:	les    ecx,FWORD PTR [ebp+0x7bf2aa66]
  401fef:	pop    ecx
  401ff0:	sub    BYTE PTR [eax-0x164f7eb5],dl
  401ff6:	push   ebx
  401ff7:	test   DWORD PTR [edi],0x20f4f88b
  401ffd:	imul   eax,edi,0x9113de2d
  402003:	(bad)
  402007:	add    BYTE PTR [eax],bh
  402009:	jb     0x401fb8
  40200b:	cmp    eax,0xc085ae43
  402010:	sbb    al,0xd
  402012:	sub    dl,BYTE PTR [ebp-0x1e4e7e76]
  402018:	cwde   
  402019:	and    ah,BYTE PTR [eax-0x47]
  40201c:	mov    edx,0xa984dd94
  402021:	pop    ebp
  402022:	and    eax,0xbcbecc59
  402027:	adc    al,0x93
  402029:	lds    ebp,FWORD PTR [ebp+0x13ee3f27]
  40202f:	or     DWORD PTR [ebp-0x5ec80402],ebx
  402035:	mov    eax,0x790e3c2a
  40203a:	mul    esi
  40203c:	int3   
  40203d:	dec    ebx
  40203e:	hlt    
  40203f:	mov    cl,0x69
  402041:	mov    edi,0x82d621b6
  402046:	sub    DWORD PTR [ebx],edx
  402048:	mov    cl,0x65
  40204a:	daa    
  40204b:	test   DWORD PTR [esi-0x59],ecx
  40204e:	fadd   QWORD PTR [edx+0x7a83fb6e]
  402054:	xchg   ecx,eax
  402055:	or     edi,DWORD PTR [ebx]
  402057:	sti    
  402058:	in     al,dx
  402059:	pop    esi
  40205a:	retf   
  40205b:	call   0xb56e6359
  402060:	mov    ch,0xd5
  402062:	mov    ecx,0x50fd31d3
  402067:	ss out 0x1f,al
  40206a:	lahf   
  40206b:	adc    esi,esp
  40206d:	out    0xaa,al
  40206f:	sub    DWORD PTR [edi-0x4deb3c51],ebx
  402075:	fsub   st(4),st
  402077:	pop    es
  402078:	jmp    0x2fe:0x494f1420
  40207f:	lods   al,BYTE PTR ds:[esi]
  402080:	out    0xf0,eax
  402082:	retf   
  402083:	dec    esi
  402084:	ds jne 0x4020f1
  402087:	fist   DWORD PTR [edi]
  402089:	(bad)  [esp+eax*1-0x2cc96282]
  402090:	aaa    
  402091:	lahf   
  402092:	dec    edx
  402093:	shl    ah,1
  402095:	jp     0x4020b5
  402097:	adc    al,0xdb
  402099:	(bad)  
  40209b:	fadd   QWORD PTR [ebp-0x46f69e46]
  4020a1:	call   0xac0d5fac
  4020a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020a7:	push   esp
  4020a8:	add    DWORD PTR [ebx+edi*1],edx
  4020ab:	jno    0x4020b8
  4020ad:	(bad)  
  4020ae:	(bad)  [edi+0x15]
  4020b1:	out    dx,al
  4020b2:	icebp  
  4020b3:	pop    esp
  4020b4:	fld    QWORD PTR [ebx+0x6c]
  4020b7:	rcl    DWORD PTR [eax+0x3a],cl
  4020ba:	clc    
  4020bb:	push   ebx
  4020bc:	and    BYTE PTR [edx-0x21],dl
  4020bf:	pop    ss
  4020c0:	and    DWORD PTR [edx+0x6a],edx
  4020c3:	ds out dx,eax
  4020c5:	mov    WORD PTR [edx-0x63],?
  4020c8:	addr16 aaa 
  4020ca:	jne    0x402063
  4020cc:	pop    DWORD PTR [esi+0xaab04b5]
  4020d2:	fmul   QWORD PTR [esp+eiz*8-0x22e56c0a]
  4020d9:	xchg   DWORD PTR [ecx-0x67c26d41],edx
  4020df:	ins    DWORD PTR es:[edi],dx
  4020e0:	cmc    
  4020e1:	sub    DWORD PTR [edx+edi*4+0x4d],edx
  4020e5:	mov    esi,0x5e0cb5af
  4020ea:	jge    0x4020f2
  4020ec:	stos   DWORD PTR es:[edi],eax
  4020ed:	int3   
  4020ee:	jb     0x402083
  4020f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020f1:	lds    edx,FWORD PTR [ebp+0x27]
  4020f4:	fs loope 0x40209a
  4020f7:	and    eax,0x5204cb6f
  4020fc:	inc    edx
  4020fd:	cmp    al,BYTE PTR [edx]
  4020ff:	idiv   DWORD PTR [esi-0x5046d529]
  402105:	jge    0x402186
  402107:	int    0x53
  402109:	ret    
  40210a:	dec    ebp
  40210b:	iret   
  40210c:	mov    dl,0x31
  40210e:	cmp    esi,DWORD PTR [ebx]
  402110:	inc    edx
  402111:	in     eax,0xe7
  402113:	cmp    DWORD PTR [edx+0x1c],eax
  402116:	lea    ebx,[ecx]
  402118:	cdq    
  402119:	(bad)  
  40211b:	xor    al,ch
  40211d:	in     eax,dx
  40211e:	push   edx
  40211f:	jg     0x402164
  402121:	push   edx
  402122:	fsub   st(0),st
  402124:	adc    ch,BYTE PTR ds:0x569e160f
  40212a:	adc    bl,ch
  40212c:	imul   edx,DWORD PTR [edx-0x6d],0x3d
  402130:	sub    al,0x3c
  402132:	mov    edx,0x9b1b51e2
  402137:	jp     0x402133
  402139:	xchg   BYTE PTR [edi-0x3707c546],dl
  40213f:	repnz add ecx,esi
  402142:	mov    ?,ebx
  402144:	add    al,0x7f
  402146:	sub    esp,esi
  402148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402149:	inc    esp
  40214a:	add    DWORD PTR [ebx-0x6421b457],ebp
  402150:	stc    
  402151:	cmp    DWORD PTR [edx+edi*4+0x37ac9aa9],edi
  402158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402159:	out    dx,al
  40215a:	retf   
  40215b:	and    al,0xdc
  40215d:	sti    
  40215e:	pushf  
  40215f:	mov    ss,WORD PTR [eax-0x65]
  402162:	sub    ebx,DWORD PTR [ecx-0x63c66dfa]
  402168:	pop    es
  402169:	xchg   ebx,eax
  40216a:	cli    
  40216b:	dec    ebp
  40216c:	nop
  40216d:	(bad)  
  40216e:	mov    al,0xca
  402170:	jmp    0x7d36e418
  402175:	repnz cmc 
  402177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402178:	push   ecx
  402179:	dec    DWORD PTR gs:[edi]
  40217c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40217d:	inc    esp
  40217e:	test   BYTE PTR [ecx+eiz*4-0x3d2d8431],al
  402185:	daa    
  402186:	push   eax
  402187:	retf   0xb747
  40218a:	int3   
  40218b:	mov    esi,0x3c8ebf34
  402190:	inc    esp
  402191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402192:	js     0x40220d
  402194:	icebp  
  402195:	mov    ds:0xf3fea5f6,eax
  40219a:	inc    cl
  40219c:	mov    ebp,0x74f8b35e
  4021a1:	sbb    eax,0xa18ed69e
  4021a6:	and    eax,0xdbcaa757
  4021ab:	sub    al,0xf
  4021ad:	or     eax,0xbef3dfe8
  4021b2:	push   0x6eb5d0ab
  4021b7:	sub    al,0x19
  4021b9:	dec    ecx
  4021ba:	nop
  4021bb:	in     eax,0x63
  4021bd:	xchg   sp,ax
  4021bf:	aad    0xbc
  4021c1:	jp     0x40223e
  4021c3:	aam    0xf8
  4021c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021c6:	cli    
  4021c7:	jae    0x402225
  4021c9:	shl    ch,1
  4021cb:	jne    0x402170
  4021cd:	jl     0x4021ed
  4021cf:	xchg   esp,eax
  4021d0:	(bad)  
  4021d1:	shr    BYTE PTR [ecx+eiz*1-0x1501b3a],cl
  4021d8:	dec    ecx
  4021d9:	dec    eax
  4021da:	je     0x402202
  4021dc:	out    0xec,eax
  4021de:	lock test eax,0x6f9596a3
  4021e4:	lods   eax,DWORD PTR ds:[esi]
  4021e5:	dec    esi
  4021e6:	fisttp DWORD PTR [edi-0x44]
  4021e9:	retf   
  4021ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021eb:	popf   
  4021ec:	lahf   
  4021ed:	mov    al,ds:0x1fb513c
  4021f2:	scas   eax,DWORD PTR es:[edi]
  4021f3:	add    al,0xe
  4021f5:	jmp    0x402221
  4021f7:	lock popa 
  4021f9:	jmp    0x402270
  4021fb:	xchg   ecx,eax
  4021fc:	pusha  
  4021fd:	push   cs
  4021fe:	xchg   DWORD PTR [esp+ebx*4+0x3],esp
  402202:	pop    es
  402203:	hlt    
  402204:	out    dx,eax
  402205:	jne    0x40227e
  402207:	shl    DWORD PTR [ebp+0x18],1
  40220a:	shr    DWORD PTR [si-0x6271],0xb9
  402210:	push   ss
  402211:	pop    ds
  402212:	push   ebx
  402213:	mov    ecx,0x11b89853
  402218:	mov    ds,WORD PTR [edi-0x4e3b8078]
  40221e:	push   edi
  40221f:	mov    ds:0x537f3214,al
  402224:	mov    al,BYTE PTR [edx]
  402226:	jae    0x40223e
  402228:	pop    ecx
  402229:	pushf  
  40222a:	mul    BYTE PTR [ebx]
  40222c:	mov    WORD PTR [esi],gs
  40222e:	mov    bl,cl
  402230:	in     eax,0xd7
  402232:	repz call 0x1b79b3cc
  402238:	xchg   esi,eax
  402239:	scas   al,BYTE PTR es:[edi]
  40223a:	(bad)  
  40223b:	jne    0x402265
  40223d:	gs add ecx,ebx
  402240:	clc    
  402241:	mov    dh,0x35
  402243:	dec    ebp
  402244:	mov    edi,0x801d3995
  402249:	ret    
  40224a:	aam    0x63
  40224c:	sub    BYTE PTR [ebx],ch
  40224e:	jmp    0x10f47a6a
  402253:	loop   0x4022b2
  402255:	mov    esp,0x12e9495e
  40225a:	(bad)  
  40225b:	sar    DWORD PTR [ebx+0x5f],cl
  40225e:	add    eax,DWORD PTR [ebx+0x3a1dc6f5]
  402264:	push   ecx
  402265:	mov    WORD PTR [esi-0x56ce86f5],?
  40226b:	sbb    DWORD PTR [edx],esp
  40226d:	and    dx,di
  402270:	repnz and esi,edx
  402273:	shl    bh,1
  402275:	push   cs
  402276:	bound  esi,QWORD PTR [eax+ecx*2]
  402279:	pop    edx
  40227a:	jns    0x402257
  40227c:	push   cs
  40227d:	int    0xe4
  40227f:	jne    0x402223
  402281:	daa    
  402282:	adc    al,0x53
  402284:	loopne 0x4022ff
  402286:	je     0x4022ff
  402288:	xchg   BYTE PTR [ebx+eiz*8-0x3291f9a9],dl
  40228f:	or     eax,ecx
  402291:	pop    ebx
  402292:	iret   
  402293:	loope  0x4022cb
  402295:	outs   dx,BYTE PTR ds:[esi]
  402296:	hlt    
  402297:	outs   dx,DWORD PTR ds:[esi]
  402298:	dec    edi
  402299:	loop   0x402250
  40229b:	adc    BYTE PTR [edi-0x46],ah
  40229e:	jne    0x4022a6
  4022a0:	int3   
  4022a1:	jne    0x4022ce
  4022a3:	popf   
  4022a4:	cld    
  4022a5:	push   ecx
  4022a6:	lods   al,BYTE PTR ds:[esi]
  4022a7:	add    ah,bl
  4022a9:	mov    bl,0x5a
  4022ab:	mov    ch,0x65
  4022ad:	or     DWORD PTR [eax+0x39],ebp
  4022b0:	mov    esi,0x7d3a3aff
  4022b5:	sub    ch,BYTE PTR fs:[esi+0x46]
  4022b9:	sub    BYTE PTR [ecx+0x1ae86e1],bh
  4022bf:	ror    edx,0x4b
  4022c2:	imul   ebp,DWORD PTR [ebx],0x1f
  4022c5:	(bad)
  4022c8:	(bad)  
  4022c9:	xchg   esp,eax
  4022ca:	pop    edx
  4022cb:	adc    BYTE PTR [edi],cl
  4022cd:	sbb    dh,BYTE PTR [esi]
  4022cf:	out    0x10,ax
  4022d2:	fiadd  DWORD PTR [edx+0x71]
  4022d5:	and    ecx,DWORD PTR [ecx+0x35]
  4022d8:	push   es
  4022d9:	or     BYTE PTR [ecx],cl
  4022db:	add    esi,esi
  4022dd:	mov    dh,0x4f
  4022df:	jnp    0x4022c3
  4022e1:	and    DWORD PTR [ecx+0x34e640a8],0x1b
  4022e8:	sub    ch,BYTE PTR [eax]
  4022ea:	inc    eax
  4022eb:	jne    0x402361
  4022ed:	jo     0x402368
  4022ef:	test   DWORD PTR [ecx+0x77e32cb1],ebx
  4022f5:	ret    
  4022f6:	sub    bh,BYTE PTR [eax]
  4022f8:	adc    edx,DWORD PTR ds:0x7a538022
  4022fe:	popa   
  4022ff:	push   ds
  402300:	int    0x6a
  402302:	jp     0x4022bf
  402304:	push   edx
  402305:	and    al,0x13
  402307:	add    cl,BYTE PTR [edi+0x247c4cae]
  40230d:	js     0x4022b3
  40230f:	and    eax,0x96143b3b
  402314:	aad    0x40
  402316:	dec    esp
  402317:	and    al,0x84
  402319:	in     eax,0xb3
  40231b:	test   DWORD PTR [ecx-0x135731cf],0x25377c9a
  402325:	add    eax,0x1c2e710f
  40232a:	fs xchg esp,eax
  40232c:	iret   
  40232d:	or     eax,0x2b49336f
  402332:	xchg   ebx,eax
  402333:	sti    
  402334:	xlat   BYTE PTR ds:[ebx]
  402335:	(bad)  
  402336:	xchg   ecx,eax
  402337:	mov    ch,0xaf
  402339:	clc    
  40233a:	pusha  
  40233b:	in     eax,dx
  40233c:	xchg   ebx,edi
  40233e:	or     al,0xd5
  402340:	push   eax
  402341:	loop   0x402322
  402343:	push   0x5425df43
  402348:	imul   esp,DWORD PTR [edx-0x1d],0xffffffa0
  40234c:	pop    esi
  40234d:	rcr    DWORD PTR [esi+edx*1],0xd7
  402351:	adc    BYTE PTR [ecx],dl
  402353:	or     ebp,DWORD PTR [ebx-0x34dafce5]
  402359:	ficomp WORD PTR [esi]
  40235b:	cld    
  40235c:	add    BYTE PTR [eax+0x4ea7f021],bl
  402362:	shl    edi,cl
  402364:	icebp  
  402365:	daa    
  402366:	ret    0x8dfa
  402369:	adc    BYTE PTR [esi-0x4eb0ad9e],bl
  40236f:	adc    DWORD PTR [edx+esi*1+0x27],0x37
  402374:	jg     0x4023d3
  402376:	jp     0x402372
  402378:	je     0x402356
  40237a:	sub    BYTE PTR [eax],dl
  40237c:	rcl    BYTE PTR [edx-0x70dba1e7],1
  402382:	(bad)  
  402383:	in     eax,0xdf
  402385:	sar    dl,cl
  402387:	cmp    ecx,ebx
  402389:	jne    0x402379
  40238b:	sub    al,0x0
  40238d:	jmp    0x402409
  40238f:	ins    DWORD PTR es:[edi],dx
  402390:	fdivr  DWORD PTR [ebp+0x12]
  402393:	out    dx,eax
  402394:	aam    0xc7
  402396:	fidiv  DWORD PTR [edi]
  402398:	push   ds
  402399:	jl     0x40237e
  40239b:	push   esi
  40239c:	xor    al,0x3
  40239e:	ds int3 
  4023a0:	push   ss
  4023a1:	bound  ebx,QWORD PTR [edi-0x6a799eec]
  4023a7:	dec    ecx
  4023a8:	cli    
  4023a9:	popa   
  4023aa:	(bad)  
  4023ab:	out    0x5f,al
  4023ad:	push   eax
  4023ae:	sub    ch,BYTE PTR [edi-0x32]
  4023b1:	lods   eax,DWORD PTR ds:[esi]
  4023b2:	sub    eax,0x8c50cbba
  4023b7:	stos   BYTE PTR es:[edi],al
  4023b8:	(bad)  
  4023ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023bb:	in     eax,dx
  4023bc:	and    eax,0x121f46c0
  4023c1:	repnz and eax,0xda0cd9d6
  4023c7:	in     eax,0xb6
  4023c9:	pushf  
  4023ca:	push   edx
  4023cb:	sbb    DWORD PTR [eax],ebx
  4023cd:	jmp    0xc40351d5
  4023d2:	inc    edx
  4023d3:	out    0x9a,eax
  4023d5:	cmp    eax,DWORD PTR [ebx+0x4862716a]
  4023db:	or     BYTE PTR [edi],bh
  4023dd:	ja     0x402404
  4023df:	sub    edi,DWORD PTR [edx-0x1e2ddbe0]
  4023e5:	retf   
  4023e6:	pop    ds
  4023e7:	push   ss
  4023e8:	out    dx,al
  4023e9:	push   eax
  4023ea:	fs in  al,dx
  4023ec:	cmp    esi,eax
  4023ee:	xor    BYTE PTR [esi],dl
  4023f0:	enter  0x1b05,0xe0
  4023f4:	popf   
  4023f5:	and    ebx,esi
  4023f7:	push   ecx
  4023f8:	fcom   QWORD PTR [edx+0x7c6d9826]
  4023fe:	sub    esp,ecx
  402400:	pop    eax
  402401:	pop    ss
  402402:	jl     0x40241a
  402404:	mov    cl,0xe6
  402406:	xor    dh,cl
  402408:	inc    esp
  402409:	sbb    eax,0xb7a51991
  40240e:	mov    bh,0x2a
  402410:	inc    eax
  402411:	jo     0x40239d
  402413:	fsubrp st(2),st
  402415:	je     0x4023f7
  402417:	imul   DWORD PTR [ecx+0x7b57e1b7]
  40241d:	outs   dx,BYTE PTR ds:[esi]
  40241e:	test   esi,ecx
  402420:	scas   eax,DWORD PTR es:[edi]
  402421:	gs daa 
  402423:	pop    ebp
  402424:	jnp    0x40246b
  402426:	loope  0x40247d
  402428:	fbld   TBYTE PTR [ebx-0x4984950e]
  40242e:	push   esi
  40242f:	xchg   ecx,eax
  402430:	jns    0x402445
  402432:	push   ebp
  402433:	pop    ss
  402434:	in     al,dx
  402435:	clc    
  402436:	jmp    0x4023ca
  402438:	sub    al,0x6d
  40243a:	addr16 into 
  40243c:	jl     0x4023fd
  40243e:	(bad)  
  40243f:	std    
  402440:	in     al,0xc2
  402442:	cld    
  402443:	ins    BYTE PTR es:[edi],dx
  402444:	pop    ss
  402445:	sbb    ecx,ecx
  402447:	lahf   
  402448:	jae    0x40242b
  40244a:	sub    al,0xb7
  40244c:	push   esi
  40244d:	call   0x4c92:0x1de1f487
  402454:	sbb    eax,0x5df38f64
  402459:	aaa    
  40245a:	lahf   
  40245b:	in     al,dx
  40245c:	enter  0xae63,0x2d
  402460:	ret    
  402461:	hlt    
  402462:	pop    esp
  402463:	add    al,0xb
  402465:	lock and dl,al
  402468:	rol    BYTE PTR [edx+ecx*2-0x2d],0xee
  40246d:	out    dx,eax
  40246e:	loope  0x402461
  402470:	mov    ebx,0x3ceddbac
  402475:	div    BYTE PTR [edx-0x3a]
  402478:	in     al,dx
  402479:	or     WORD PTR [edx+0x69726bea],si
  402480:	scas   al,BYTE PTR es:[edi]
  402481:	or     BYTE PTR [ebx-0xc6d9938],ch
  402487:	or     al,0x5d
  402489:	daa    
  40248a:	outs   dx,BYTE PTR ds:[esi]
  40248b:	in     eax,0xb7
  40248d:	adc    eax,0x41330246
  402492:	aaa    
  402493:	repnz mov bh,0x42
  402496:	fiadd  WORD PTR [eax-0x1c]
  402499:	sbb    edx,DWORD PTR [edi+edx*2-0x52]
  40249d:	leave  
  40249e:	push   esi
  40249f:	dec    ebx
  4024a0:	stc    
  4024a1:	sbb    ebx,ebx
  4024a3:	push   cs
  4024a4:	mov    eax,ds:0x15551366
  4024a9:	sub    eax,0x15a2b226
  4024ae:	repnz dec edx
  4024b0:	out    0xad,al
  4024b2:	dec    ebx
  4024b3:	mov    esp,0x1f00354
  4024b8:	jae    0x4024b7
  4024ba:	inc    esp
  4024bb:	in     eax,dx
  4024bc:	outs   dx,BYTE PTR ds:[esi]
  4024bd:	pop    ecx
  4024be:	aaa    
  4024bf:	xchg   ecx,eax
  4024c0:	inc    ecx
  4024c1:	ficom  DWORD PTR [ebp-0x54]
  4024c4:	sub    ch,BYTE PTR [ebx+0x3638070f]
  4024ca:	cmp    BYTE PTR [ecx-0x31],ah
  4024cd:	cmc    
  4024ce:	adc    bh,BYTE PTR [ebx+0x3e]
  4024d1:	pop    ecx
  4024d2:	cli    
  4024d3:	inc    eax
  4024d4:	xchg   esi,ebx
  4024d6:	push   esi
  4024d7:	inc    ebx
  4024d8:	xlat   BYTE PTR ds:[ebx]
  4024d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024da:	push   eax
  4024db:	fcomp  DWORD PTR [esi+edx*1-0x67]
  4024df:	mov    ah,0xa3
  4024e1:	lds    esi,FWORD PTR [edi]
  4024e3:	scas   eax,DWORD PTR es:[edi]
  4024e4:	mov    edi,0x2d047d18
  4024e9:	xor    ah,BYTE PTR [ecx+0x5c24726]
  4024ef:	or     eax,0x9f18a36d
  4024f4:	(bad)  
  4024f5:	nop
  4024f6:	cli    
  4024f7:	adc    al,0x3f
  4024f9:	fcmovnb st,st(5)
  4024fb:	out    0xb5,eax
  4024fd:	or     edx,ecx
  4024ff:	mov    bh,0x2e
  402501:	xor    ch,BYTE PTR [esi-0x747d8717]
  402507:	sub    BYTE PTR [eax-0x8],dl
  40250a:	mov    ecx,0xf7207be6
  40250f:	outs   dx,DWORD PTR ds:[esi]
  402510:	mov    WORD PTR [ebx-0x18],cs
  402513:	jmp    0xce3bd6a
  402518:	stc    
  402519:	adc    bh,BYTE PTR [edi]
  40251b:	les    ebp,FWORD PTR [edx+ecx*1]
  40251e:	push   edx
  40251f:	xchg   edi,eax
  402520:	or     eax,0x6dc5d3f7
  402525:	dec    esp
  402526:	sub    al,0x4f
  402528:	adc    al,0xbb
  40252a:	dec    esp
  40252b:	pusha  
  40252c:	xchg   ebx,eax
  40252d:	loop   0x4025a1
  40252f:	mov    ecx,0x274bfb8
  402534:	or     eax,0x288eaa5e
  402539:	jo     0x4024dd
  40253b:	ins    DWORD PTR es:[edi],dx
  40253c:	test   DWORD PTR [esp+ebx*8-0x33ecdd00],edi
  402543:	jno    0x402524
  402545:	sub    BYTE PTR [ebx-0x2b],ah
  402548:	sbb    eax,0x30cae461
  40254d:	xchg   esp,eax
  40254e:	jecxz  0x4024f1
  402550:	pop    esp
  402551:	idiv   DWORD PTR [ebx+edi*8-0x79a58254]
  402558:	test   al,0xc6
  40255a:	in     eax,dx
  40255b:	js     0x4024f5
  40255d:	outs   dx,BYTE PTR ds:[esi]
  40255e:	je     0x402509
  402560:	cs aas 
  402562:	adc    al,0xb3
  402564:	add    WORD PTR [ebp+0x3f],ax
  402568:	push   0xb167b85c
  40256d:	outs   dx,BYTE PTR ds:[esi]
  40256e:	mov    ecx,0xe1c183c5
  402573:	test   al,0x4b
  402575:	jge    0x4025d1
  402577:	in     al,0xfc
  402579:	out    dx,eax
  40257a:	inc    esp
  40257b:	sti    
  40257c:	or     ebx,ebx
  40257e:	jecxz  0x4025f9
  402580:	xor    al,0x44
  402582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402583:	dec    edx
  402584:	scas   eax,DWORD PTR es:[edi]
  402585:	mov    dh,0xbb
  402587:	add    eax,0xeec51327
  40258c:	ret    0x3f96
  40258f:	mov    esi,eax
  402591:	dec    edi
  402592:	mov    ?,ebp
  402594:	aas    
  402595:	pop    esi
  402596:	fldcw  WORD PTR [ecx-0x2978dc8e]
  40259c:	add    dh,BYTE PTR [eax+edi*4-0x5f]
  4025a0:	cmc    
  4025a1:	jl     0x402560
  4025a3:	mov    ebp,0x216dadc
  4025a8:	in     eax,0x8d
  4025aa:	xchg   BYTE PTR [ebp+0x51],ah
  4025ad:	retf   0xf5d5
  4025b0:	inc    esp
  4025b1:	cs mov ecx,0xe5ce6188
  4025b7:	push   esp
  4025b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b9:	data16 (bad) 
  4025bb:	out    dx,eax
  4025bc:	sti    
  4025bd:	jmpw   0x7107
  4025c1:	or     edi,DWORD PTR [edi+0x62bd97c2]
  4025c7:	mov    dh,0x5
  4025c9:	lea    esp,[eax-0x31]
  4025cc:	xor    ebx,DWORD PTR [edi-0x6a]
  4025cf:	jmp    0x4025fe
  4025d1:	mov    ch,0xf2
  4025d3:	pop    eax
  4025d4:	aas    
  4025d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025d6:	or     eax,ebx
  4025d8:	adc    eax,0x29e3cc2d
  4025dd:	fisttp WORD PTR [edx+0x25]
  4025e0:	(bad)  
  4025e2:	sahf   
  4025e3:	imul   edi,edi,0xffffffde
  4025e6:	xor    BYTE PTR [ebp+eax*2+0x49],bh
  4025ea:	mov    DWORD PTR ds:0xc4e3952a,edi
  4025f0:	mov    ds:0xfc003290,eax
  4025f5:	sar    edi,1
  4025f7:	fist   WORD PTR [esi]
  4025f9:	jnp    0x40265c
  4025fb:	push   es
  4025fc:	idiv   al
  4025fe:	retf   
  4025ff:	mov    ?,WORD PTR [esi+0x30]
  402602:	gs ss adc eax,0xf34ef79a
  402609:	(bad)  
  40260a:	cmp    al,0xa3
  40260c:	loopne 0x4025ce
  40260e:	mov    DWORD PTR [ecx-0x24eea21d],esp
  402614:	adc    DWORD PTR [esi],ecx
  402616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402617:	daa    
  402618:	mov    al,ds:0x8d5122d9
  40261d:	sbb    eax,0x97e70571
  402622:	(bad)  
  402623:	jnp    0x402677
  402625:	jo     0x402605
  402627:	cmp    ah,BYTE PTR [edx]
  402629:	mov    edi,0x78458e96
  40262e:	ror    BYTE PTR [ebx+0x44],cl
  402631:	imul   edi,DWORD PTR [edi-0x33ecee2e],0xa63b3ac8
  40263b:	repz xchg edi,eax
  40263d:	(bad)  
  40263e:	push   0x88ded513
  402643:	cdq    
  402644:	xchg   ebx,eax
  402645:	adc    bl,dl
  402647:	sti    
  402648:	cs arpl dx,bp
  40264b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40264c:	out    0xed,al
  40264e:	hlt    
  40264f:	fcom   DWORD PTR [ebx]
  402651:	push   cx
  402653:	aas    
  402654:	dec    BYTE PTR [edx-0x4]
  402657:	adc    cl,BYTE PTR ds:0x76ca07b3
  40265d:	aam    0x7b
  40265f:	mov    edi,0x67f2ffd5
  402664:	out    dx,eax
  402665:	and    al,0x30
  402667:	adc    BYTE PTR [esp+edx*2-0x7a],ah
  40266b:	fsub   QWORD PTR [bp+0x14db]
  402670:	sbb    BYTE PTR [ecx],bh
  402672:	test   BYTE PTR [eax+edx*2],bh
  402675:	pop    ds
  402676:	or     al,ch
  402678:	add    DWORD PTR [esi-0x2a58bf97],0x18b209d1
  402682:	pop    DWORD PTR ds:0xab06a09a
  402688:	cmp    dl,BYTE PTR [ebx-0x33]
  40268b:	aas    
  40268c:	pop    edi
  40268d:	adc    ch,al
  40268f:	and    al,ah
  402691:	ret    0xfacb
  402694:	add    bh,BYTE PTR [ebx+0xea41923]
  40269a:	rcr    BYTE PTR [ebp+0x1e33fbb9],1
  4026a0:	(bad)  
  4026a1:	jp     0x40267b
  4026a3:	mov    ah,0xe6
  4026a5:	jno    0x402708
  4026a7:	pop    esi
  4026a8:	mov    esp,0x1faaad46
  4026ad:	lahf   
  4026ae:	fmul   QWORD PTR [eax]
  4026b0:	sbb    DWORD PTR [edx],ebx
  4026b2:	aaa    
  4026b3:	lahf   
  4026b4:	push   edi
  4026b5:	retf   
  4026b6:	(bad)  
  4026b7:	into   
  4026b8:	rol    DWORD PTR [eax+0x12c29498],1
  4026be:	mov    eax,0xf6836799
  4026c3:	xchg   ecx,eax
  4026c4:	inc    ebp
  4026c5:	pop    ss
  4026c6:	stc    
  4026c7:	dec    ebx
  4026c8:	cmp    eax,0xe392fb89
  4026cd:	and    ah,BYTE PTR [edx+0x2a27cc54]
  4026d3:	aas    
  4026d4:	cmp    al,0x45
  4026d6:	daa    
  4026d7:	rcr    BYTE PTR [edi],cl
  4026d9:	in     al,0x94
  4026db:	popf   
  4026dc:	fiadd  DWORD PTR [ecx+0xb]
  4026df:	add    cl,bl
  4026e1:	xor    DWORD PTR [edx-0x69],ebp
  4026e4:	bound  esi,QWORD PTR [eax-0x19]
  4026e7:	test   al,0x17
  4026e9:	cmp    DWORD PTR [edx],esi
  4026eb:	sti    
  4026ec:	adc    edx,DWORD PTR [ebx]
  4026ee:	sbb    eax,0x9a87dd33
  4026f3:	stc    
  4026f4:	fistp  WORD PTR [edx+0x2a104ff6]
  4026fa:	adc    al,0x42
  4026fc:	inc    bl
  4026fe:	in     eax,dx
  4026ff:	mov    ds:0xf4850b27,al
  402704:	add    BYTE PTR [edi-0x56],ah
  402707:	mov    DWORD PTR [edx+edx*4+0x31],ecx
  40270b:	xchg   esp,eax
  40270c:	mov    ecx,0x75ef808e
  402711:	(bad)  
  402712:	xchg   esp,eax
  402713:	in     eax,dx
  402714:	sub    edi,DWORD PTR [edx+0x610d2bba]
  40271a:	lods   al,BYTE PTR ds:[esi]
  40271b:	call   0x1f4b86f9
  402720:	fld    TBYTE PTR [edx+0x6]
  402723:	jae    0x4026a6
  402725:	cmovge eax,DWORD PTR [ebp-0x34]
  402729:	shl    DWORD PTR [ebp-0x599b8379],1
  40272f:	jno    0x4026c5
  402731:	icebp  
  402732:	dec    edx
  402733:	push   esp
  402734:	xchg   edi,eax
  402736:	jge    0x4026d8
  402738:	into   
  402739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40273a:	mov    ah,0x9
  40273c:	and    ecx,0x5e9aa432
  402742:	adc    al,0x99
  402744:	loope  0x402736
  402746:	mov    esp,0xd5d7b21d
  40274b:	ds xor eax,0xfafe3daf
  402751:	lods   al,BYTE PTR ds:[esi]
  402752:	imul   edi,DWORD PTR [esi-0x3485f0e],0x62
  402759:	cmp    al,0x7c
  40275b:	(bad)  
  40275c:	xor    eax,0xc0e526c0
  402761:	pop    ebx
  402762:	mov    ah,0x6
  402764:	lods   eax,DWORD PTR ds:[esi]
  402765:	jno    0x40274f
  402767:	cmp    ebx,0xef26b0e1
  40276d:	(bad)
  402770:	out    dx,eax
  402771:	shl    DWORD PTR [edi+0x7503ac32],0x2a
  402778:	jo     0x4027a8
  40277a:	inc    edi
  40277b:	and    BYTE PTR [bx+di-0x43],bl
  40277f:	adc    bl,BYTE PTR cs:[eax+0x481b711e]
  402786:	(bad)  
  402787:	fcomp  st(1)
  402789:	xor    DWORD PTR [ecx+0x358acf96],esp
  40278f:	repz js 0x4027ab
  402792:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402794:	cmp    dh,BYTE PTR [ebx+ecx*8+0x52]
  402798:	xor    al,0xa2
  40279a:	(bad)  
  40279b:	fdiv   st,st(2)
  40279d:	jb     0x402751
  40279f:	dec    esi
  4027a0:	sbb    bl,cl
  4027a2:	ret    0xc269
  4027a5:	jmp    FWORD PTR [esi]
  4027a7:	add    eax,ebx
  4027a9:	daa    
  4027aa:	aas    
  4027ab:	cli    
  4027ac:	pop    ds
  4027ad:	fist   WORD PTR [ebx]
  4027af:	xor    al,0x4d
  4027b1:	mov    eax,0xb510adf9
  4027b6:	pop    ecx
  4027b7:	xchg   DWORD PTR [ebx-0x13],esi
  4027ba:	popf   
  4027bb:	imul   eax,DWORD PTR [esi],0x384aeeab
  4027c1:	arpl   WORD PTR fs:[esi-0x10430b72],ax
  4027c8:	cmp    DWORD PTR [ebp-0x54],0xfffffffc
  4027cc:	mov    al,ds:0xaa253848
  4027d1:	push   ebp
  4027d2:	hlt    
  4027d3:	enter  0x133a,0xa8
  4027d7:	xlat   BYTE PTR ds:[ebx]
  4027d8:	ins    BYTE PTR es:[edi],dx
  4027d9:	mov    bh,0x6a
  4027db:	pop    edx
  4027dc:	lods   al,BYTE PTR ds:[esi]
  4027dd:	dec    esi
  4027de:	lods   al,BYTE PTR ds:[esi]
  4027df:	mov    ecx,0xad264793
  4027e4:	cmp    al,0xaf
  4027e6:	jae    0x40276a
  4027e8:	in     eax,0x8c
  4027ea:	jne    0x402869
  4027ec:	call   0x35a72cdd
  4027f1:	lahf   
  4027f2:	sub    al,0x16
  4027f4:	xchg   esi,eax
  4027f5:	popf   
  4027f6:	cmp    dl,ch
  4027f8:	jp     0x40284c
  4027fa:	into   
  4027fb:	fsub   st(6),st
  4027fd:	dec    edx
  4027fe:	lahf   
  4027ff:	(bad)  
  402800:	sbb    BYTE PTR gs:[ebx-0x45],al
  402804:	retf   
  402805:	fnstsw WORD PTR [esi-0x113ef665]
  40280b:	sbb    ebx,DWORD PTR [esi-0x3418a09f]
  402811:	push   ds
  402812:	push   0x65
  402814:	dec    esp
  402815:	loop   0x40288f
  402817:	jge    0x402877
  402819:	div    bl
  40281b:	mov    edx,es
  40281d:	cmp    bl,BYTE PTR [ebp+0x382b4a8a]
  402823:	daa    
  402824:	mov    dh,0x67
  402826:	xchg   ecx,eax
  402827:	cmp    ecx,DWORD PTR [edx+ecx*1-0x3b]
  40282b:	xchg   ecx,edx
  40282d:	(bad)  
  40282e:	loopne 0x4027d6
  402830:	pushf  
  402831:	enter  0x2e39,0x2f
  402835:	mov    WORD PTR [eax-0x30],es
  402838:	or     ebx,edx
  40283a:	sbb    al,0x84
  40283c:	push   cs
  40283d:	mov    dl,BYTE PTR [edi+esi*4+0x5fb8d99a]
  402844:	adc    BYTE PTR [esi],cl
  402846:	mov    bh,0x39
  402848:	sub    DWORD PTR [edx-0x5eb924b6],eax
  40284e:	(bad)  
  40284f:	jmp    0x4027e4
  402851:	push   ebp
  402852:	imul   edi,DWORD PTR [ebp+edi*8+0x62895c8e],0xa7fd05d2
  40285d:	cmp    cl,BYTE PTR [eax-0x3d7546e7]
  402863:	or     BYTE PTR [ebp-0x5c08bfe1],bh
  402869:	mov    cl,0x99
  40286b:	add    ecx,ebp
  40286d:	inc    edi
  40286e:	xor    ch,BYTE PTR [edi-0x32eeb865]
  402874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402875:	mov    ch,0xc5
  402877:	and    al,0x92
  402879:	inc    ebx
  40287a:	test   eax,0x81703f3f
  40287f:	out    dx,al
  402880:	mov    ecx,eax
  402882:	sti    
  402883:	(bad)  
  402885:	xor    eax,0x7690f28e
  40288a:	or     eax,0x653486c1
  40288f:	inc    esi
  402890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402891:	adc    al,0x71
  402893:	call   0x34133a1
  402898:	adc    ebp,DWORD PTR [ecx]
  40289a:	mov    eax,ds:0x49c62bef
  40289f:	cmp    BYTE PTR [edx+0x4e],al
  4028a2:	xor    ecx,DWORD PTR [edx+ebp*2-0x7d536a83]
  4028a9:	and    DWORD PTR [eax+ebx*1],ebx
  4028ac:	push   0xfffffff1
  4028ae:	or     bh,BYTE PTR [eax]
  4028b0:	add    BYTE PTR [edx],dl
  4028b2:	aad    0x44
  4028b4:	arpl   bx,ax
  4028b6:	mov    DWORD PTR [edi-0x7b],ebx
  4028b9:	mov    ah,0x1d
  4028bb:	fild   WORD PTR [ebp-0x64]
  4028be:	popa   
  4028bf:	enter  0x313d,0xd5
  4028c3:	neg    BYTE PTR [edi]
  4028c5:	loopne 0x402889
  4028c7:	bound  edx,QWORD PTR [ebx]
  4028c9:	in     eax,dx
  4028ca:	outs   dx,BYTE PTR ds:[esi]
  4028cb:	add    bh,ch
  4028cd:	fistp  QWORD PTR [ebx-0x6b161abf]
  4028d3:	iret   
  4028d4:	fdiv   DWORD PTR [edx+0x37fd5dbb]
  4028da:	les    edi,FWORD PTR [ebx-0x584a84e8]
  4028e0:	mov    cl,0x2
  4028e2:	mov    ch,0xcc
  4028e4:	jecxz  0x402867
  4028e6:	ret    0xb36e
  4028e9:	dec    eax
  4028ea:	call   0x959:0x13c8264c
  4028f1:	sbb    ebx,DWORD PTR [edi+0x5f]
  4028f4:	and    edi,DWORD PTR ds:0xcf5ec289
  4028fa:	dec    ebp
  4028fb:	push   ecx
  4028fc:	lods   al,BYTE PTR ds:[esi]
  4028fd:	mov    BYTE PTR [ebp-0x6ceaa225],ch
  402903:	pop    ecx
  402904:	int3   
  402905:	ss dec ecx
  402907:	loope  0x4028c1
  402909:	loopne 0x40292e
  40290b:	mov    ds:0xe4a349df,al
  402910:	aas    
  402911:	fmul   DWORD PTR [ebp+0x4150e76e]
  402917:	mov    eax,ebp
  402919:	sub    dh,BYTE PTR ds:0x2bd32c28
  40291f:	jns    0x402957
  402921:	lods   al,BYTE PTR ds:[esi]
  402922:	retf   
  402923:	out    0x6,eax
  402925:	pop    eax
  402926:	ret    0x42b2
  402929:	xor    dl,BYTE PTR [eax+ebx*1]
  40292c:	pusha  
  40292d:	jne    0x402937
  40292f:	mov    esp,0xdef63cd0
  402934:	jmp    0x3d31:0xef287db
  40293b:	outs   dx,BYTE PTR fs:[esi]
  40293d:	rcl    BYTE PTR [edx+0xaaf6642],0xf5
  402944:	inc    esi
  402945:	jecxz  0x40295f
  402947:	pop    edx
  402948:	sbb    BYTE PTR [edx+0x20b506a],dh
  40294e:	lods   eax,DWORD PTR ds:[esi]
  40294f:	add    al,0xf4
  402951:	fimul  WORD PTR [ebp+0x6b]
  402954:	mov    eax,0xafc801fd
  402959:	mov    edx,0x52a828b4
  40295e:	cli    
  40295f:	mov    ah,0x69
  402961:	ror    BYTE PTR [esp+ebp*8+0x56dfdf],0xe0
  402969:	pop    edi
  40296a:	jmp    0x402931
  40296c:	(bad)  
  40296d:	fst    QWORD PTR [edi-0x39]
  402970:	mov    dh,0xbe
  402972:	jmp    0x2bf5:0x3acdf40d
  402979:	(bad)  
  40297b:	or     sp,0xd00b
  402980:	retf   
  402981:	adc    bl,BYTE PTR [ebp+edx*1-0x7a95381c]
  402988:	dec    edi
  402989:	adc    bh,al
  40298b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40298c:	popa   
  40298d:	fadd   st(1),st
  40298f:	icebp  
  402990:	adc    eax,0xd06fcc48
  402995:	loope  0x4029a7
  402997:	nop
  402998:	test   eax,0x6931548f
  40299d:	mov    DWORD PTR [eax],edx
  40299f:	mov    fs,WORD PTR [ecx+eiz*4+0x5d]
  4029a3:	out    dx,eax
  4029a4:	dec    edi
  4029a5:	mov    dh,0xc8
  4029a7:	popa   
  4029a8:	stc    
  4029a9:	sub    BYTE PTR [ebp+eax*8-0x56],ah
  4029ad:	sbb    DWORD PTR [esi],0xffffffa0
  4029b0:	ret    
  4029b1:	sbb    eax,0x2add611
  4029b6:	popa   
  4029b7:	call   DWORD PTR [ebp+0x2b9f5cc1]
  4029bd:	ins    BYTE PTR es:[edi],dx
  4029be:	ror    BYTE PTR [eax],cl
  4029c0:	(bad)  
  4029c1:	in     eax,dx
  4029c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029c3:	les    edx,FWORD PTR [edx+ebp*2-0x6b]
  4029c7:	daa    
  4029c8:	xor    DWORD PTR [ecx+edx*2+0x74],0xe18cedf7
  4029d0:	clc    
  4029d1:	mov    bh,0xd
  4029d3:	add    al,0x42
  4029d5:	inc    ebp
  4029d6:	in     al,0x60
  4029d8:	jo     0x4029a1
  4029da:	test   DWORD PTR [esi+0x19896bc1],ebx
  4029e0:	stos   BYTE PTR es:[edi],al
  4029e1:	jb     0x402a27
  4029e3:	sbb    ebx,ecx
  4029e5:	mov    edi,0xd82169ab
  4029ea:	mov    eax,ds:0x2debed53
  4029ef:	pop    ss
  4029f0:	cwde   
  4029f1:	daa    
  4029f2:	push   ecx
  4029f3:	inc    esi
  4029f4:	adc    BYTE PTR [edx+0xb],dh
  4029f7:	sbb    DWORD PTR cs:[edx-0x2ce33430],edx
  4029fe:	and    ebx,DWORD PTR [ecx+ecx*1+0x54]
  402a02:	push   ebp
  402a03:	test   DWORD PTR [esi-0x3cf6e905],ecx
  402a09:	call   DWORD PTR [ebp-0xa2d7cb8]
  402a0f:	je     0x402a58
  402a11:	cmp    DWORD PTR [ebp+0x21],ecx
  402a14:	cmp    al,0x76
  402a16:	cwde   
  402a17:	call   0x954826c1
  402a1c:	xor    dh,BYTE PTR [ebp-0x3880f2bf]
  402a22:	stos   BYTE PTR es:[edi],al
  402a23:	push   ds
  402a24:	jmp    0x402a18
  402a26:	xchg   DWORD PTR [ebp+0x439abc16],edx
  402a2c:	mov    bl,0xac
  402a2e:	js     0x4029cd
  402a30:	xor    bl,ah
  402a32:	adc    BYTE PTR [esi],ah
  402a34:	loopne 0x4029e2
  402a36:	add    eax,0xa51a3c88
  402a3b:	dec    ecx
  402a3c:	stc    
  402a3d:	xchg   ebp,eax
  402a3e:	xor    ebx,DWORD PTR [ecx]
  402a40:	mov    eax,0x6ce4f779
  402a45:	(bad)  
  402a46:	sub    ebp,edx
  402a48:	adc    BYTE PTR [edi+0x7],bh
  402a4b:	(bad)  
  402a4c:	sbb    edi,DWORD PTR [edi+ecx*2-0x3d]
  402a50:	sub    edi,eax
  402a52:	(bad)  
  402a53:	enter  0x7b18,0xd6
  402a57:	dec    esp
  402a58:	out    0x1,eax
  402a5a:	xchg   esi,esp
  402a5c:	inc    di
  402a5e:	add    esp,DWORD PTR [esi+eax*2-0x2a836d6d]
  402a65:	inc    bl
  402a67:	dec    ebp
  402a68:	pop    es
  402a69:	sub    DWORD PTR [esi+0x36],esi
  402a6c:	in     al,dx
  402a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a6e:	stos   BYTE PTR es:[edi],al
  402a6f:	out    dx,eax
  402a70:	pop    eax
  402a71:	ret    0x70d7
  402a74:	lea    edi,[edi]
  402a76:	into   
  402a77:	cld    
  402a78:	xchg   BYTE PTR ds:0x99808864,dl
  402a7e:	sub    eax,0x1d269c3a
  402a83:	push   esp
  402a84:	dec    ebp
  402a85:	mov    ebx,0xfc263dee
  402a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a8b:	ficomp DWORD PTR [ebx+edi*4]
  402a8e:	sbb    bh,cl
  402a90:	cld    
  402a91:	cmp    DWORD PTR [ebx+0x32],eax
  402a94:	push   eax
  402a95:	and    al,BYTE PTR [edi+0x799e166d]
  402a9b:	(bad)  
  402a9c:	shl    DWORD PTR [esi+edx*2+0x2f],1
  402aa0:	and    bh,BYTE PTR [edi-0x4c]
  402aa3:	dec    ebx
  402aa4:	push   esp
  402aa5:	nop
  402aa6:	jno    0x402b00
  402aa8:	es pop ds
  402aaa:	call   DWORD PTR [esi]
  402aac:	popf   
  402aad:	xchg   esi,eax
  402aae:	push   es
  402aaf:	sub    al,0xdc
  402ab1:	je     0x402abe
  402ab3:	pop    ebp
  402ab4:	lahf   
  402ab5:	shl    DWORD PTR [ecx+0x42],1
  402ab8:	push   edi
  402ab9:	leave  
  402aba:	and    edx,ebp
  402abc:	push   ss
  402abd:	adc    eax,0x6b11a636
  402ac2:	add    al,0x87
  402ac4:	dec    esi
  402ac5:	cmp    ebx,0x8
  402ac8:	jno    0x402a51
  402aca:	cmp    al,0x1b
  402acc:	test   DWORD PTR [edx+eiz*8-0x2a],ecx
  402ad0:	jo     0x402a73
  402ad2:	cmc    
  402ad3:	jae    0x402a8b
  402ad5:	push   ss
  402ad6:	push   esp
  402ad7:	xchg   esi,eax
  402ad8:	pop    ecx
  402ad9:	pop    edx
  402ada:	adc    BYTE PTR [eax-0x27072ac3],ch
  402ae0:	xor    eax,0x432dddce
  402ae5:	mov    al,ds:0x1a0b6681
  402aea:	and    BYTE PTR [eax+0x3d],dl
  402aed:	push   es
  402aee:	jno    0x402b17
  402af0:	dec    ebx
  402af1:	pusha  
  402af2:	inc    BYTE PTR [edx]
  402af4:	cmp    ah,BYTE PTR [ebx-0x5a]
  402af7:	(bad)  
  402af8:	mov    cl,0xf3
  402afa:	sub    eax,0x3b28805c
  402aff:	(bad)  
  402b00:	mov    DWORD PTR [esi-0x73],edx
  402b03:	dec    esi
  402b04:	sti    
  402b05:	dec    esp
  402b06:	xchg   ah,ah
  402b08:	call   0x7d8b:0x784b3fb0
  402b0f:	mov    ds:0x53bf672b,eax
  402b14:	push   ebx
  402b15:	jo     0x402ac0
  402b17:	xchg   esp,eax
  402b18:	(bad)  
  402b19:	ficom  DWORD PTR [edx]
  402b1b:	sbb    DWORD PTR [esi],esi
  402b1d:	adc    ah,dh
  402b1f:	test   esi,ebx
  402b21:	sbb    ecx,DWORD PTR [ecx+0x44]
  402b24:	data16 std 
  402b26:	xor    edx,DWORD PTR [ecx-0x45]
  402b29:	push   0x20
  402b2b:	pop    ecx
  402b2c:	sub    DWORD PTR [ebp+ecx*8-0x2e39cb73],ebp
  402b33:	fxch   st(1)
  402b35:	test   DWORD PTR [edi+0x38],0x5961c5ca
  402b3c:	sub    BYTE PTR [esi+0x22],0x84
  402b40:	push   ds
  402b41:	aad    0x60
  402b43:	dec    edx
  402b44:	loope  0x402ad6
  402b46:	xor    dh,dl
  402b48:	inc    esp
  402b49:	dec    esi
  402b4a:	lea    edi,[ecx]
  402b4c:	out    0x5f,al
  402b4e:	mov    WORD PTR [edx+0x7dd216d0],gs
  402b54:	jmp    0x7755:0xffdbf453
  402b5b:	pop    es
  402b5c:	inc    esi
  402b5d:	mov    eax,DWORD PTR [esi+ebp*1+0x24]
  402b61:	pop    ebp
  402b62:	jnp    0x402b98
  402b64:	xchg   edx,eax
  402b65:	(bad)  
  402b66:	sub    esp,DWORD PTR [esi-0x3a]
  402b69:	jb     0x402b45
  402b6b:	(bad)  
  402b6c:	fild   WORD PTR [ecx-0x259aaca5]
  402b72:	xor    DWORD PTR [esi],esi
  402b74:	xor    ax,WORD PTR [eax-0x75]
  402b78:	sub    al,0xcc
  402b7a:	out    dx,eax
  402b7b:	icebp  
  402b7c:	mov    dl,0xa5
  402b7e:	and    bh,BYTE PTR [esp+ebp*8]
  402b81:	adc    DWORD PTR [ecx],ebp
  402b83:	sbb    al,0x6d
  402b85:	jge    0x402b85
  402b87:	jle    0x402b6e
  402b89:	ja     0x402b97
  402b8b:	adc    al,0xf
  402b8d:	sub    eax,0x5b0b1538
  402b92:	adc    BYTE PTR [ebp+0x37],al
  402b95:	or     ebx,0xb7410d5a
  402b9b:	jecxz  0x402bae
  402b9d:	xchg   ebx,eax
  402b9e:	test   eax,0x3e3c0558
  402ba3:	push   ds
  402ba4:	jmp    0xb9f6:0xde8c9c97
  402bab:	mov    ebp,0x44778e0
  402bb0:	popa   
  402bb1:	xor    DWORD PTR [eax-0x3341909e],ebx
  402bb7:	xor    DWORD PTR [esi+0x6c],ebx
  402bba:	jmp    0x402bc6
  402bbc:	push   0x17
  402bbe:	je     0x402b8a
  402bc0:	or     BYTE PTR [esi-0x50],ch
  402bc3:	xchg   ecx,eax
  402bc4:	std    
  402bc5:	and    eax,0xec017caa
  402bca:	das    
  402bcb:	jge    0x402be7
  402bcd:	scas   eax,DWORD PTR es:[edi]
  402bce:	xor    DWORD PTR [esi],ebp
  402bd0:	dec    edi
  402bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bd2:	dec    esp
  402bd3:	cld    
  402bd4:	inc    edx
  402bd5:	cmp    BYTE PTR [esi-0x6132e1d0],cl
  402bdb:	inc    ebp
  402bdc:	mov    edx,0x3711e252
  402be1:	fist   DWORD PTR [esp+ebp*8]
  402be4:	test   al,0x55
  402be6:	aaa    
  402be7:	dec    edx
  402be8:	sahf   
  402be9:	neg    BYTE PTR [ecx+0x1e7d8b98]
  402bef:	mov    ah,0x64
  402bf1:	pusha  
  402bf2:	add    DWORD PTR [ecx],esp
  402bf4:	pop    ds
  402bf5:	mov    ds:0xa98c5477,eax
  402bfa:	pcmpgtw mm5,QWORD PTR [esi+0x74]
  402bfe:	rcl    DWORD PTR [edx+0x7b],1
  402c01:	xchg   esp,eax
  402c02:	ficomp WORD PTR [esi-0x23]
  402c05:	or     dl,cl
  402c07:	retf   
  402c08:	out    dx,al
  402c09:	dec    esi
  402c0a:	sahf   
  402c0b:	inc    ebp
  402c0c:	aam    0x1a
  402c0e:	push   ecx
  402c0f:	and    DWORD PTR [eax+0x6965f64a],0xf0d96d3
  402c19:	into   
  402c1a:	loope  0x402c72
  402c1c:	jle    0x402c92
  402c1e:	pop    esi
  402c1f:	or     edi,0xd47c2f58
  402c25:	push   es
  402c26:	int    0x97
  402c28:	ror    BYTE PTR [esp+ecx*1],1
  402c2b:	fstp   DWORD PTR [eax-0x218df67f]
  402c31:	(bad)  
  402c32:	push   edi
  402c33:	and    al,0xa1
  402c35:	adc    BYTE PTR [edx+0x73],dl
  402c38:	sub    BYTE PTR [ecx+0x61],cl
  402c3b:	add    ebp,DWORD PTR [edi+0x2bd6cb33]
  402c41:	pop    esi
  402c42:	pop    eax
  402c43:	hlt    
  402c44:	pop    esp
  402c45:	call   0x21f16d60
  402c4a:	cwde   
  402c4b:	es leave 
  402c4d:	loope  0x402c68
  402c4f:	pop    eax
  402c50:	mov    al,0x10
  402c52:	and    dl,0x42
  402c55:	cmp    cl,BYTE PTR [ebp-0xf0bedd1]
  402c5b:	push   ecx
  402c5c:	movhps xmm7,QWORD PTR [ebx]
  402c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c60:	(bad)  
  402c61:	pop    ss
  402c62:	fst    DWORD PTR [ecx]
  402c64:	or     bh,dl
  402c66:	shl    ch,0xac
  402c69:	add    al,0xb7
  402c6b:	xchg   esp,eax
  402c6c:	add    bh,BYTE PTR [eax+eax*2+0x23]
  402c70:	nop
  402c71:	call   0xd3d28410
  402c76:	mov    eax,0x6dbd2cb
  402c7b:	fiadd  WORD PTR [ebx]
  402c7d:	xchg   esi,eax
  402c7e:	mov    ds:0x7e7de3ec,eax
  402c83:	pop    esp
  402c84:	sar    DWORD PTR [eax],1
  402c86:	sub    al,0x54
  402c88:	cmp    eax,0xa183b6b9
  402c8d:	adc    al,0xfb
  402c8f:	add    al,cl
  402c91:	sbb    eax,0x7f62b347
  402c96:	pop    ebp
  402c97:	jg     0x402c32
  402c99:	adc    DWORD PTR [ecx-0xd],0xac036b74
  402ca0:	inc    esi
  402ca1:	lods   al,BYTE PTR ds:[esi]
  402ca2:	jno    0x402cd7
  402ca4:	dec    ebx
  402ca5:	lahf   
  402ca6:	stos   BYTE PTR es:[edi],al
  402ca7:	push   ebx
  402ca8:	add    al,BYTE PTR [eax]
  402caa:	push   ecx
  402cab:	dec    esp
  402cac:	test   al,0xbd
  402cae:	lahf   
  402caf:	out    0xf1,al
  402cb1:	stos   BYTE PTR es:[edi],al
  402cb2:	or     eax,ebx
  402cb4:	push   ecx
  402cb5:	neg    BYTE PTR [esp+edi*4]
  402cb8:	int3   
  402cb9:	int    0xca
  402cbb:	mov    esi,0x616fc922
  402cc0:	or     eax,0x384df6e1
  402cc5:	outs   dx,BYTE PTR ds:[esi]
  402cc6:	or     cl,ch
  402cc8:	and    al,BYTE PTR [esi-0x15041e2d]
  402cce:	ins    DWORD PTR es:[edi],dx
  402ccf:	and    edx,DWORD PTR [eax-0xf509b21]
  402cd5:	push   ebx
  402cd7:	xor    BYTE PTR [ecx+0x45],al
  402cda:	mov    ah,0xba
  402cdc:	enter  0x9502,0x3c
  402ce0:	fwait
  402ce1:	stos   DWORD PTR es:[edi],eax
  402ce2:	or     eax,0x6c2a5c92
  402ce7:	cmp    bh,BYTE PTR [esi]
  402ce9:	test   ecx,ecx
  402ceb:	test   BYTE PTR [ebp+0x218b1997],ah
  402cf1:	xor    bh,bl
  402cf3:	sbb    BYTE PTR [edx],dh
  402cf5:	cmp    DWORD PTR [edx-0x67],ebp
  402cf8:	in     eax,0x7f
  402cfa:	and    al,0x88
  402cfc:	xchg   edi,eax
  402cfd:	loope  0x402d16
  402cff:	push   es
  402d00:	ficom  DWORD PTR [ecx]
  402d02:	fidivr DWORD PTR ds:0x81c0d25b
  402d08:	inc    eax
  402d09:	pop    esp
  402d0a:	dec    edi
  402d0b:	sub    bl,0xa2
  402d0e:	mov    bl,BYTE PTR [esi+0x6d5f3a4c]
  402d14:	add    BYTE PTR fs:[eax-0x39],bh
  402d18:	jbe    0x402d99
  402d1a:	adc    esp,DWORD PTR [edi-0x31d2ba2f]
  402d20:	dec    eax
  402d21:	idiv   BYTE PTR [esi-0x3867c150]
  402d27:	jl     0x402cd8
  402d29:	dec    ecx
  402d2a:	pusha  
  402d2b:	mov    ds:0x95cb8dc0,al
  402d30:	mov    ebx,0x898b4e38
  402d35:	inc    edx
  402d36:	cdq    
  402d37:	(bad)  
  402d38:	imul   edx,DWORD PTR ds:0x83207e41,0xfcafb402
  402d42:	loope  0x402cff
  402d44:	aam    0xfa
  402d46:	add    ah,bl
  402d48:	pop    ecx
  402d49:	jle    0x402d59
  402d4b:	sub    eax,0x52084ea0
  402d50:	or     al,0x6b
  402d52:	mov    al,ds:0xfd2dbbb7
  402d57:	or     DWORD PTR [eax+ecx*2+0x50],esp
  402d5b:	xor    eax,0xd393bf3
  402d60:	or     BYTE PTR [edx+esi*2+0x68],dh
  402d64:	(bad)  
  402d65:	jmp    0xe6b7:0x2e74872e
  402d6c:	xchg   esi,eax
  402d6d:	mov    eax,ds:0x208da421
  402d72:	dec    edi
  402d73:	pushf  
  402d74:	inc    edi
  402d75:	dec    esp
  402d76:	cld    
  402d77:	mov    ah,0x6f
  402d79:	sub    BYTE PTR [ecx-0x5ed88d6a],dl
  402d7f:	leave  
  402d80:	jmp    0x8c10:0xd138e6a0
  402d87:	jp     0x402d96
  402d89:	adc    al,BYTE PTR [ecx+0x30]
  402d8c:	punpcklbw mm1,mm0
  402d8f:	das    
  402d90:	shr    ah,1
  402d92:	stos   DWORD PTR es:[edi],eax
  402d93:	ficomp DWORD PTR [esp+ebp*8+0x16]
  402d97:	inc    eax
  402d98:	push   esp
  402d99:	push   ebp
  402d9a:	mov    al,0xe
  402d9c:	dec    edi
  402d9d:	(bad)
  402da1:	inc    edi
  402da2:	xor    cl,dh
  402da4:	jp     0x402dcb
  402da6:	lds    edx,FWORD PTR [esi-0xfe35f00]
  402dac:	jge    0x402e22
  402dae:	rcr    BYTE PTR gs:[ecx],1
  402db1:	dec    ebx
  402db2:	hlt    
  402db3:	ror    DWORD PTR [ebx+0x1cf23d15],cl
  402db9:	adc    eax,DWORD PTR [ebp+0x66]
  402dbc:	or     ecx,ebx
  402dbe:	pop    esp
  402dbf:	and    DWORD PTR ds:[edx],0xa3152209
  402dc6:	inc    eax
  402dc7:	jp     0x402d92
  402dc9:	dec    ebx
  402dca:	cmp    BYTE PTR [esi+0x3e],dl
  402dcd:	jg     0x402d63
  402dcf:	fisub  DWORD PTR [edx+ebp*8]
  402dd2:	cmp    ebp,edi
  402dd4:	cmp    BYTE PTR [esi+0x21],dl
  402dd7:	ret    0x3545
  402dda:	pusha  
  402ddb:	xor    al,0x87
  402ddd:	cdq    
  402dde:	hlt    
  402ddf:	pop    es
  402de0:	jmp    0xe734af4c
  402de5:	in     eax,0xab
  402de7:	mov    dh,0xb6
  402de9:	cmovo  edi,DWORD PTR [edi+edx*4-0x52690b76]
  402df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402df2:	es (bad) 
  402df4:	jmp    0x1130:0x3e59
  402dfa:	jo     0x402d8f
  402dfc:	or     DWORD PTR [ecx+0x1f],0xfffffffa
  402e00:	cld    
  402e01:	dec    ecx
  402e02:	mov    esp,0x1bc445b
  402e07:	xor    BYTE PTR [edi+0x65],ch
  402e0a:	add    eax,0x722c5ceb
  402e0f:	mov    edx,DWORD PTR [eax-0x38933f56]
  402e15:	push   es
  402e16:	xchg   ebx,eax
  402e17:	dec    ecx
  402e18:	rol    DWORD PTR [edx+0x0],cl
  402e1b:	dec    edi
  402e1c:	ffree  st(6)
  402e1e:	aad    0x58
  402e20:	fsub   DWORD PTR [ecx]
  402e22:	push   0x1db6eef9
  402e27:	in     eax,dx
  402e28:	push   0xd220e013
  402e2d:	sar    DWORD PTR [ebx-0x721f59e2],1
  402e33:	mov    al,cl
  402e35:	and    ax,WORD PTR [esi-0x18]
  402e39:	je     0x402ea6
  402e3b:	test   BYTE PTR [ecx],dl
  402e3d:	(bad)  
  402e3e:	mov    esp,0x28b30913
  402e43:	adc    DWORD PTR [ebx],edx
  402e45:	and    bh,dh
  402e47:	sub    bl,ah
  402e49:	add    al,0x7c
  402e4b:	pop    esp
  402e4c:	jmp    0x3215:0xc21164d0
  402e53:	cs push ebx
  402e55:	push   ecx
  402e56:	out    0x7e,al
  402e58:	mov    edi,0x7ffec711
  402e5d:	inc    esp
  402e5e:	jnp    0x402e54
  402e60:	push   ss
  402e61:	stos   DWORD PTR es:[edi],eax
  402e62:	pop    ss
  402e63:	fwait
  402e64:	ds (bad) 
  402e66:	stc    
  402e67:	rol    DWORD PTR [esi-0x2c],cl
  402e6a:	jns    0x402e37
  402e6c:	stc    
  402e6d:	aad    0xda
  402e6f:	ret    
  402e70:	arpl   WORD PTR [edx+0x9d5d5ac],bx
  402e76:	push   esp
  402e77:	jo     0x402e5a
  402e79:	mov    bh,0xbe
  402e7b:	scas   al,BYTE PTR es:[edi]
  402e7c:	hlt    
  402e7d:	pop    ecx
  402e7e:	xchg   BYTE PTR [ecx-0x44b33535],ah
  402e84:	fcom   DWORD PTR [ecx-0x41]
  402e87:	ins    BYTE PTR es:[edi],dx
  402e88:	pop    ebp
  402e89:	std    
  402e8a:	(bad)  
  402e8c:	sub    DWORD PTR [ebx],eax
  402e8e:	rcl    BYTE PTR gs:[ebp+0x5a],0x9e
  402e93:	xor    DWORD PTR [esi-0x7ec9d5d0],ecx
  402e99:	je     0x402ed0
  402e9b:	xlat   BYTE PTR ds:[ebx]
  402e9c:	pop    ecx
  402e9d:	cmp    al,0xea
  402e9f:	mov    ebx,0x3d277449
  402ea4:	xchg   ebp,eax
  402ea5:	cmp    bl,BYTE PTR [esi+esi*8-0x51]
  402ea9:	daa    
  402eaa:	xor    eax,0xbf6ecf23
  402eaf:	xor    eax,0xbbdd549d
  402eb4:	fincstp 
  402eb6:	inc    ecx
  402eb7:	cmp    eax,DWORD PTR [edi]
  402eb9:	in     eax,0x2b
  402ebb:	std    
  402ebc:	pushf  
  402ebd:	icebp  
  402ebe:	jecxz  0x402e63
  402ec0:	stos   DWORD PTR es:[edi],eax
  402ec1:	pop    esi
  402ec2:	jb     0x402ebe
  402ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ec5:	jne    0x402eaa
  402ec7:	pop    ebx
  402ec8:	(bad)  
  402eca:	add    DWORD PTR [edi-0x80],ebx
  402ecd:	ftst   
  402ecf:	aam    0x7f
  402ed1:	dec    esi
  402ed2:	cli    
  402ed3:	imul   eax,DWORD PTR [esi+0x69],0x37
  402ed7:	jae    0x402f36
  402ed9:	ins    BYTE PTR es:[edi],dx
  402eda:	xchg   esi,eax
  402edb:	ins    DWORD PTR es:[edi],dx
  402edc:	sbb    ebx,ebx
  402ede:	inc    ebx
  402edf:	mov    edi,0x86d52a26
  402ee4:	mov    DWORD PTR [eax],ebp
  402ee6:	pop    ss
  402ee7:	fwait
  402ee8:	scas   al,BYTE PTR es:[edi]
  402ee9:	pop    esp
  402eea:	pop    esp
  402eeb:	sub    ebp,DWORD PTR [edx]
  402eed:	outs   dx,BYTE PTR ds:[esi]
  402eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eef:	retf   0x5009
  402ef2:	repnz mov edi,0x1e1b0e7f
  402ef8:	jle    0x402f02
  402efa:	in     eax,0x58
  402efc:	adc    cl,BYTE PTR [eax+0x6e]
  402eff:	jmp    0x2ee20733
  402f04:	sub    BYTE PTR [ebx+edx*8+0x2f113b63],al
  402f0b:	and    DWORD PTR [esi],ebp
  402f0d:	xor    ebx,esp
  402f0f:	(bad)  
  402f10:	or     eax,0xa9d9eff8
  402f15:	mov    ecx,0x6da3ed99
  402f1a:	mov    WORD PTR [edx-0x3],?
  402f1d:	test   eax,0xcc988ce9
  402f22:	inc    ebp
  402f23:	addr16 inc esi
  402f25:	pop    ecx
  402f26:	cdq    
  402f27:	out    0xfe,eax
  402f29:	push   ebp
  402f2a:	pop    esi
  402f2b:	repz ret 
  402f2d:	test   al,0x8a
  402f2f:	rol    BYTE PTR [ebx+0x44],cl
  402f32:	xchg   edi,eax
  402f33:	mov    edx,0x463d5a53
  402f38:	popa   
  402f39:	and    DWORD PTR [eax+0x7e],0x60
  402f3d:	cwde   
  402f3e:	into   
  402f3f:	in     eax,dx
  402f40:	mov    esi,0xbf18e712
  402f45:	out    0x66,eax
  402f47:	sbb    bh,BYTE PTR [eax+ecx*8-0x49fd28e1]
  402f4e:	jns    0x402f71
  402f50:	je     0x402f7b
  402f52:	jge    0x402f5c
  402f54:	ror    BYTE PTR [ecx+0xa8950b8],0x78
  402f5b:	and    DWORD PTR [eax],esp
  402f5d:	pop    ecx
  402f5e:	dec    ebx
  402f5f:	std    
  402f60:	sub    eax,0x73f1b424
  402f65:	pop    ds
  402f66:	mov    dh,0xb9
  402f68:	test   al,0x99
  402f6a:	pushf  
  402f6b:	repz scas al,BYTE PTR es:[edi]
  402f6d:	cmp    al,0x8
  402f6f:	push   0x2279a55b
  402f74:	or     dl,BYTE PTR [edi]
  402f76:	push   0x1a
  402f78:	clc    
  402f79:	mov    esi,0x823f5e7e
  402f7e:	or     DWORD PTR [ebx-0x5833e39c],edi
  402f84:	or     bl,BYTE PTR [ebx-0x60]
  402f87:	je     0x402f2a
  402f89:	imul   ebp,ebx,0xfffffff5
  402f8c:	ins    BYTE PTR es:[edi],dx
  402f8d:	or     bl,BYTE PTR [eax]
  402f8f:	push   ebx
  402f90:	cmp    BYTE PTR [edi+0x6e14ef87],al
  402f96:	cdq    
  402f97:	mov    dl,0x18
  402f99:	xor    ebp,edi
  402f9b:	inc    edx
  402f9c:	aad    0x7f
  402f9e:	pop    edi
  402f9f:	add    BYTE PTR [eax-0x44],0xdd
  402fa3:	ins    BYTE PTR es:[edi],dx
  402fa4:	lahf   
  402fa5:	repnz mov eax,0xdf2e31e1
  402fab:	dec    ebp
  402fac:	les    edx,FWORD PTR [ebx-0x5950bd16]
  402fb2:	gs cs sbb eax,0x43628f79
  402fb9:	mov    al,0xdf
  402fbb:	call   0xb9c4:0x536a4116
  402fc2:	sbb    DWORD PTR [ebp+edi*4+0x3edc379],edx
  402fc9:	fnstenv [ebx+0x1c2a1c3c]
  402fcf:	sub    bh,ah
  402fd1:	(bad)  
  402fd2:	popf   
  402fd3:	push   esi
  402fd4:	sar    BYTE PTR [esi],cl
  402fd6:	call   0xef09:0xfd099bc0
  402fdd:	add    BYTE PTR [eax],ch
  402fdf:	cmc    
  402fe0:	mov    es,WORD PTR [edx+0x7c]
  402fe3:	ds and al,0xc4
  402fe6:	mov    DWORD PTR [ecx+eax*2-0x39],0x191bc53b
  402fee:	ins    BYTE PTR es:[edi],dx
  402fef:	sub    al,0x9f
  402ff1:	inc    eax
  402ff2:	inc    esp
  402ff3:	jo     0x40301b
  402ff5:	ins    BYTE PTR es:[edi],dx
  402ff6:	add    BYTE PTR [eax-0x38],ch
  402ff9:	sbb    ah,dl
  402ffb:	fs pop esi
  402ffd:	out    0x29,eax
  402fff:	mov    al,0xcf
  403001:	fucomp st(0)
  403003:	repnz inc eax
  403005:	retf   
  403006:	cmp    eax,0x277362f7
  40300b:	ss repnz mov edx,edx
  40300f:	stos   BYTE PTR es:[edi],al
  403010:	sar    al,0xd7
  403013:	xchg   esp,eax
  403014:	imul   esp,DWORD PTR [edi-0x66],0xb7f0fb06
  40301b:	rcl    bh,0x30
  40301e:	pop    ecx
  40301f:	shr    DWORD PTR [edx+esi*1],1
  403022:	xchg   esi,eax
  403023:	neg    DWORD PTR [esi+edx*1]
  403026:	lock mov edx,0xdcf336ca
  40302c:	pop    ebp
  40302d:	shl    BYTE PTR [ecx+edi*8-0x41],0x9a
  403032:	pushw  ss
  403034:	lock mov DWORD PTR [ebx-0x210c9196],esi
  40303b:	jb     0x403086
  40303d:	mov    dh,0x4b
  40303f:	mov    cl,al
  403041:	cmp    eax,0x6f8537e4
  403046:	jmp    0x403068
  403048:	ja     0x403048
  40304a:	mov    edi,0x23150c70
  40304f:	iret   
  403050:	jle    0x40303d
  403052:	std    
  403053:	addr16 jmp 0x72040714
  403059:	or     eax,0xfb4e6520
  40305e:	xor    esp,DWORD PTR [edi-0x1cbe9181]
  403064:	mov    ch,0x2f
  403066:	xchg   edi,eax
  403067:	out    dx,eax
  403068:	imul   edi,DWORD PTR [edx+0x665ba593],0xffffff85
  40306f:	fs and eax,0x3d0a6518
  403075:	into   
  403076:	or     ah,BYTE PTR cs:[ebx]
  403079:	xor    al,0x21
  40307b:	mov    eax,es
  40307d:	and    eax,0xce6b8a47
  403082:	aas    
  403083:	outs   dx,BYTE PTR ds:[esi]
  403084:	fld    TBYTE PTR ds:[esi-0x48ec4f66]
  40308b:	fcomp  st(1)
  40308d:	cwde   
  40308e:	gs in  al,dx
  403090:	push   eax
  403091:	(bad)  
  403092:	mov    WORD PTR [edx],?
  403094:	push   0x218c4a6f
  403099:	and    ah,BYTE PTR [esi-0x5e]
  40309c:	xchg   DWORD PTR [edi-0x61],esi
  40309f:	adc    eax,0xac240dad
  4030a4:	out    dx,al
  4030a5:	scas   al,BYTE PTR es:[edi]
  4030a6:	and    eax,0x5bd4b1e
  4030ab:	inc    ebp
  4030ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ad:	fist   WORD PTR [ecx+ebx*2]
  4030b0:	xchg   DWORD PTR [ecx+0x71acdfa6],ecx
  4030b6:	stc    
  4030b7:	push   edi
  4030b8:	cld    
  4030b9:	xchg   ecx,eax
  4030ba:	push   0xffffffe1
  4030bc:	(bad)  
  4030bd:	loop   0x403043
  4030bf:	add    al,0xb
  4030c1:	clc    
  4030c2:	imul   eax,DWORD PTR [ecx],0xe75f4663
  4030c8:	test   esi,0x5fc133cb
  4030ce:	sub    edi,edi
  4030d0:	sub    eax,ebx
  4030d2:	mov    al,0x82
  4030d4:	jo     0x4030a9
  4030d6:	add    eax,0xb8543630
  4030db:	xchg   ecx,eax
  4030dc:	retf   
  4030dd:	cmp    BYTE PTR [esi],bh
  4030df:	mov    ?,WORD PTR [edi]
  4030e1:	out    dx,al
  4030e2:	xchg   DWORD PTR [ebx+0x6e1f132d],esi
  4030e8:	cmp    DWORD PTR [edi-0x6380d4de],ebp
  4030ee:	outs   dx,BYTE PTR ds:[esi]
  4030ef:	dec    eax
  4030f0:	je     0x4030d4
  4030f2:	(bad)  
  4030f3:	sbb    dh,ch
  4030f5:	ret    0x47e2
  4030f8:	out    0x2c,al
  4030fa:	enter  0xb1b4,0x1c
  4030fe:	xor    DWORD PTR [ecx-0x72],esp
  403101:	mov    esp,DWORD PTR [edi-0x2817f93e]
  403107:	aaa    
  403108:	cmp    BYTE PTR [ebp+0x7e],bh
  40310b:	out    dx,al
  40310c:	cmp    ebx,DWORD PTR [edx]
  40310e:	popf   
  40310f:	outs   dx,BYTE PTR ds:[esi]
  403110:	into   
  403111:	mov    ebp,0xa1551cc8
  403116:	push   ecx
  403117:	pop    ecx
  403118:	jae    0x403191
  40311a:	test   eax,0x46476b65
  40311f:	sar    BYTE PTR [eax-0x50],1
  403122:	pop    esp
  403123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403124:	push   0xffffffc2
  403126:	inc    edi
  403127:	sbb    BYTE PTR [edx+0x49],0x85
  40312b:	pop    ss
  40312c:	cmp    cl,BYTE PTR [edi-0x7c]
  40312f:	out    0x60,al
  403131:	lods   al,BYTE PTR ds:[esi]
  403132:	div    DWORD PTR [ebx+0x5f]
  403135:	inc    esi
  403136:	xor    al,0xce
  403138:	stc    
  403139:	mov    edx,0x9d8528c7
  40313e:	or     al,BYTE PTR [edi-0x1e]
  403141:	retf   0x379
  403144:	inc    esi
  403146:	cmp    al,0xf6
  403148:	cmp    DWORD PTR [ebp-0x6a38033f],edx
  40314e:	pop    ds
  40314f:	adc    eax,DWORD PTR [edx]
  403151:	jp     0x4031be
  403153:	ins    DWORD PTR es:[edi],dx
  403154:	in     eax,dx
  403155:	inc    ebp
  403156:	jae    0x4031bc
  403158:	ror    BYTE PTR [ebx+0x74c64633],cl
  40315e:	retf   0x8e1e
  403161:	ins    BYTE PTR es:[edi],dx
  403162:	(bad)  
  403163:	mov    esi,0xd5fe756e
  403168:	fs mov dh,0xeb
  40316b:	test   edx,ecx
  40316d:	icebp  
  40316e:	cwde   
  40316f:	push   es
  403170:	xchg   BYTE PTR [ebp+0x7de6fd04],bh
  403176:	aam    0xfd
  403178:	adc    BYTE PTR [ebx+0x2b152272],0x65
  40317f:	lds    ebx,FWORD PTR [ebx+0x11]
  403182:	mov    esp,0x38c81d1f
  403187:	mov    al,0xde
  403189:	push   esi
  40318a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40318b:	sbb    cl,ch
  40318d:	enter  0xe1c6,0xe6
  403191:	fcmove st,st(5)
  403193:	and    DWORD PTR [eax],ebp
  403195:	je     0x403117
  403197:	aam    0xe3
  403199:	call   0x3d58:0x2fd5bcd1
  4031a0:	ret    
  4031a1:	repz (bad) 
  4031a4:	xor    eax,0x2291b717
  4031a9:	clc    
  4031aa:	push   cs
  4031ab:	mov    cl,0x3a
  4031ad:	mov    edi,0xea9fb292
  4031b2:	fild   WORD PTR [edx+0x5e]
  4031b5:	fld    QWORD PTR [ebp+0x45392a9e]
  4031bb:	in     al,0x91
  4031bd:	das    
  4031be:	pop    eax
  4031bf:	ficom  DWORD PTR [edx]
  4031c1:	out    0x37,al
  4031c3:	shl    BYTE PTR [eax+0x69],cl
  4031c6:	jmp    0x40317f
  4031c8:	retf   0x18f9
  4031cb:	push   ds
  4031cc:	jmp    0x40320a
  4031ce:	call   FWORD PTR [edx+0x1cbd97ef]
  4031d4:	bound  edi,QWORD PTR [ebp-0x63]
  4031d7:	popf   
  4031d8:	sbb    bl,bh
  4031da:	fcomp  QWORD PTR [edx+0xa0b625d]
  4031e0:	int3   
  4031e1:	ret    
  4031e2:	retf   
  4031e3:	adc    al,0x2c
  4031e5:	outs   dx,BYTE PTR ds:[esi]
  4031e6:	mov    dl,0x8a
  4031e8:	out    dx,al
  4031e9:	sbb    eax,0x424d63bb
  4031ee:	add    edx,ebx
  4031f0:	xlat   BYTE PTR ds:[ebx]
  4031f1:	shr    DWORD PTR [ebx],0x77
  4031f4:	cdq    
  4031f5:	fld    DWORD PTR [ebx-0x1c]
  4031f8:	pop    ss
  4031f9:	xor    bh,BYTE PTR [edx+0x151b08ce]
  4031ff:	por    mm3,mm4
  403202:	mov    dh,0xc5
  403204:	sbb    DWORD PTR [edi],0x8596f8a4
  40320a:	xchg   edx,eax
  40320b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40320c:	test   eax,0x5a515278
  403211:	inc    edi
  403212:	stc    
  403213:	test   BYTE PTR [edx+0x1f],0x45
  403217:	or     ecx,esp
  403219:	setno  ah
  40321c:	jg     0x403260
  40321e:	fidivr WORD PTR [eax]
  403220:	sti    
  403221:	rcl    BYTE PTR [ecx+0x4c7e5fe],1
  403227:	or     bh,dl
  403229:	adc    bl,BYTE PTR [ebx-0x60]
  40322c:	jns    0x403221
  40322e:	push   ebx
  40322f:	ficom  WORD PTR [esi]
  403231:	mov    BYTE PTR ds:0xedeb9b9f,al
  403237:	in     al,dx
  403238:	xor    eax,0x3d608c76
  40323d:	pop    edx
  40323e:	fcom   st(7)
  403240:	ins    BYTE PTR es:[edi],dx
  403241:	out    0xd3,eax
  403243:	push   eax
  403244:	ret    0xc5e0
  403247:	pop    esp
  403248:	push   edx
  403249:	mov    ebx,0x2b87f773
  40324e:	pushf  
  40324f:	lahf   
  403250:	sub    edi,DWORD PTR ds:0x463330d0
  403256:	xor    eax,0x72fc5dfb
  40325b:	mov    edx,0x9e478c71
  403260:	add    ah,BYTE PTR [ecx]
  403262:	and    al,0x14
  403264:	les    esi,FWORD PTR [esi-0x5230d88f]
  40326a:	inc    ebp
  40326b:	test   DWORD PTR [ebx-0x6daf1196],esp
  403271:	sub    al,0x7e
  403273:	pop    esp
  403274:	cmp    cl,ah
  403276:	sbb    edi,esp
  403278:	cld    
  403279:	sahf   
  40327a:	ss nop
  40327c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40327d:	sbb    eax,0x37f144ee
  403282:	jmp    0xd1a8:0xc4746c8b
  403289:	pop    esi
  40328a:	sbb    BYTE PTR [eax+0x3e5ac0e0],bh
  403290:	xor    al,0xf3
  403292:	js     0x403223
  403294:	xchg   ecx,eax
  403295:	in     al,0x15
  403297:	les    edi,FWORD PTR [ebx-0x1a]
  40329a:	sbb    al,BYTE PTR ds:0x376994a6
  4032a0:	es sbb eax,0x93c5c289
  4032a6:	mov    al,0x98
  4032a8:	xchg   ecx,eax
  4032a9:	push   ebp
  4032aa:	sbb    BYTE PTR [edx],cl
  4032ac:	ret    0x72fe
  4032af:	adc    eax,0x1ac4b75e
  4032b4:	push   edi
  4032b5:	cmp    ebp,edi
  4032b7:	cld    
  4032b8:	sub    dl,BYTE PTR [edi-0x39]
  4032bb:	or     DWORD PTR [esi-0x6e00198a],esi
  4032c1:	xor    dh,BYTE PTR [ebx-0x4bff5138]
  4032c7:	inc    edx
  4032c8:	inc    eax
  4032c9:	mov    ds:0x4981c6c8,al
  4032ce:	ret    0xfdd
  4032d1:	dec    esp
  4032d2:	pop    es
  4032d3:	sub    al,0x24
  4032d5:	inc    ebp
  4032d6:	shr    esp,0x36
  4032d9:	mov    eax,0xc5bd8c0d
  4032de:	fsubr  st(4),st
  4032e0:	mov    es,WORD PTR [ebp-0x51141739]
  4032e6:	fidiv  WORD PTR [edi-0x2d9f4ec9]
  4032ec:	repnz cmp DWORD PTR [esi+0x3e],esi
  4032f0:	mov    bh,0xc4
  4032f2:	cmp    eax,0x993490a4
  4032f7:	sub    ecx,DWORD PTR [esi+esi*1]
  4032fa:	mov    cl,ch
  4032fc:	mov    ebp,0xe12557ec
  403301:	cmp    cl,dl
  403303:	fist   WORD PTR [esi+0x6e]
  403306:	ror    BYTE PTR [edx+0x49],1
  403309:	leave  
  40330a:	and    al,0x73
  40330c:	lods   al,BYTE PTR ds:[esi]
  40330d:	loopne 0x40335a
  40330f:	cmp    eax,0xafe9bcbe
  403314:	cmp    BYTE PTR [ecx-0x76],ch
  403317:	and    dh,al
  403319:	sbb    bl,BYTE PTR [edx-0x689ac32f]
  40331f:	aaa    
  403320:	push   0x96d5d8be
  403325:	(bad)  
  403326:	push   eax
  403327:	jle    0x4032fb
  403329:	addr16 hlt 
  40332b:	push   ecx
  40332c:	nop
  40332d:	in     eax,dx
  40332e:	mov    edx,0x95d620ea
  403333:	push   0x16fc0d03
  403338:	inc    ebx
  403339:	jno    0x403309
  40333b:	mov    BYTE PTR fs:[edi+0x4e1be211],bh
  403342:	xor    ebp,ecx
  403344:	test   eax,edx
  403346:	inc    ecx
  403347:	mov    dl,0xc2
  403349:	cmp    eax,0x52cc0e6f
  40334e:	mov    ebx,0x61617302
  403353:	loope  0x403316
  403355:	pop    ss
  403356:	jo     0x4033c9
  403358:	and    ebp,ecx
  40335a:	jo     0x40334c
  40335c:	retf   0xbe96
  40335f:	pop    ebp
  403360:	adc    esi,DWORD PTR es:[ebp+0x55]
  403364:	mov    al,0x97
  403366:	mov    eax,ds:0x813ad8c0
  40336b:	xor    al,0x38
  40336d:	pop    edx
  40336e:	pop    ss
  40336f:	scas   eax,DWORD PTR es:[edi]
  403370:	stos   BYTE PTR es:[edi],al
  403371:	in     eax,dx
  403372:	push   ebp
  403373:	fs push cs
  403375:	add    BYTE PTR [edx],dh
  403377:	push   ebp
  403378:	push   ds
  403379:	jns    0x40337c
  40337b:	cwde   
  40337c:	aam    0x52
  40337e:	clc    
  40337f:	out    0x2c,al
  403381:	inc    eax
  403382:	retf   0x81d5
  403385:	out    0x38,eax
  403387:	rcl    DWORD PTR [ebp-0x2d],1
  40338a:	gs retf 0xa1fa
  40338e:	xor    ecx,DWORD PTR [esi]
  403390:	xchg   esp,eax
  403391:	jmp    0xe429:0x45ea0e99
  403398:	imul   edx,DWORD PTR [eax],0x529dc64
  40339e:	dec    esp
  40339f:	loope  0x40338e
  4033a1:	shr    DWORD PTR [esi],1
  4033a3:	mov    edi,0x89d6b32e
  4033a8:	push   DWORD PTR [edx]
  4033aa:	push   ss
  4033ab:	jl     0x4033e3
  4033ad:	mov    dh,0xee
  4033af:	push   ebx
  4033b0:	fimul  DWORD PTR [eax]
  4033b2:	cmp    al,ch
  4033b4:	pop    esi
  4033b5:	xchg   ecx,eax
  4033b6:	adc    esp,DWORD PTR [esi+edi*4-0x48c06359]
  4033bd:	sub    al,0x2d
  4033bf:	in     al,dx
  4033c0:	and    cl,BYTE PTR [ecx-0xfd9977b]
  4033c6:	adc    edx,DWORD PTR [eax-0x5a]
  4033c9:	fcomp  DWORD PTR [ebp-0x67477fa9]
  4033cf:	lea    eax,[esi]
  4033d1:	test   al,ah
  4033d3:	lea    edi,[ecx]
  4033d5:	jmp    0x4033e5
  4033d7:	hlt    
  4033d8:	cmp    eax,0xf4b003d1
  4033dd:	inc    ecx
  4033de:	xchg   ebp,esi
  4033e0:	(bad)  
  4033e1:	xor    al,0xb1
  4033e3:	jge    0x403426
  4033e5:	push   cs
  4033e6:	jecxz  0x403439
  4033e8:	add    BYTE PTR [ebx+edx*4+0x4a],ch
  4033ec:	lock push 0xffffff8b
  4033ef:	in     al,dx
  4033f0:	inc    esi
  4033f1:	mov    ebp,edi
  4033f3:	cmp    al,cl
  4033f5:	fwait
  4033f6:	out    0x59,eax
  4033f8:	inc    edi
  4033f9:	mov    edx,0xa9b2ed63
  4033fe:	inc    eax
  4033ff:	adc    BYTE PTR [edi-0x43],dl
  403402:	mov    ch,BYTE PTR [eax-0xe]
  403405:	jmp    0x6933f5e5
  40340a:	sub    BYTE PTR [esi+0x3a],ch
  40340d:	pop    ds
  40340e:	pop    edi
  40340f:	push   ecx
  403410:	push   edi
  403411:	dec    ebp
  403412:	jmp    0x403434
  403414:	push   edi
  403415:	push   ecx
  403416:	mov    edx,0x39438c5b
  40341b:	fcmovnbe st,st(3)
  40341d:	js     0x40348c
  40341f:	xor    edi,esi
  403421:	test   DWORD PTR [edi+0x3],0x8f0cf317
  403428:	int    0xc4
  40342a:	fist   DWORD PTR [ebp-0x6f]
  40342d:	xchg   cl,dl
  40342f:	dec    ecx
  403430:	mov    ebp,0x39fada51
  403435:	xor    al,0xb8
  403437:	pop    edi
  403438:	jae    0x4033e6
  40343a:	mov    ebp,0x387999c0
  40343f:	retf   
  403440:	sbb    edi,DWORD PTR [ecx-0xd]
  403443:	jns    0x4034b9
  403445:	mov    ds:0x9f21a7d5,al
  40344a:	and    al,0x8f
  40344c:	mov    eax,0x73bebae
  403451:	inc    ebx
  403452:	sar    al,1
  403454:	clc    
  403455:	mov    cl,0xcb
  403457:	inc    edi
  403458:	jle    0x4034c1
  40345a:	cwde   
  40345b:	std    
  40345c:	cli    
  40345d:	(bad)  [ebx]
  40345f:	push   ds
  403460:	add    BYTE PTR [edx+0x2074ba7b],0xdf
  403467:	and    DWORD PTR [edx-0x5dee43e3],edx
  40346d:	jnp    0x40344f
  40346f:	jno    0x403469
  403471:	clc    
  403472:	fs test eax,0x1f6c5ab7
  403478:	mov    eax,ss:0xd658e16
  40347e:	test   eax,0x5ba78dd
  403483:	ins    BYTE PTR es:[edi],dx
  403484:	(bad)  
  403486:	retf   
  403487:	push   esp
  403488:	mov    ebx,DWORD PTR [edi+0x60a3e6fe]
  40348e:	push   esi
  40348f:	out    0xf1,eax
  403491:	iret   
  403492:	jb     0x4034e9
  403494:	mov    ecx,0xa36ab63d
  403499:	je     0x403483
  40349b:	dec    ecx
  40349c:	pop    ss
  40349d:	sbb    DWORD PTR [eax-0x76],eax
  4034a0:	sbb    eax,0x2f67ef44
  4034a5:	xchg   edx,eax
  4034a6:	out    dx,al
  4034a7:	(bad)  
  4034a8:	mov    dh,0xac
  4034aa:	lahf   
  4034ab:	lods   al,BYTE PTR ds:[esi]
  4034ac:	idiv   DWORD PTR [ebp-0x1f]
  4034af:	xchg   ebp,eax
  4034b0:	inc    ebx
  4034b1:	add    edx,edi
  4034b3:	stc    
  4034b4:	(bad)  
  4034b5:	out    dx,al
  4034b6:	mov    ebp,0xd8cc55bb
  4034bb:	inc    ebp
  4034bc:	pop    ds
  4034bd:	loope  0x40352e
  4034bf:	mov    cl,0x73
  4034c1:	loop   0x403531
  4034c3:	dec    esi
  4034c4:	std    
  4034c5:	jmp    0x9990:0xafcf1cfc
  4034cc:	cmp    DWORD PTR [eax-0x7c4054ac],esp
  4034d2:	ins    DWORD PTR es:[edi],dx
  4034d3:	mov    WORD PTR [eax],fs
  4034d5:	xchg   edx,eax
  4034d6:	add    eax,ecx
  4034d8:	adc    dh,al
  4034da:	pushf  
  4034db:	test   DWORD PTR [edx],esp
  4034dd:	rcl    BYTE PTR [eax+eiz*1+0x7eab4491],0x8c
  4034e5:	and    cl,BYTE PTR [ecx]
  4034e7:	jl     0x4034ea
  4034e9:	sub    ch,bl
  4034eb:	or     bh,BYTE PTR [edi-0x7a034f81]
  4034f1:	fisubr WORD PTR [eax-0x64]
  4034f4:	aad    0x4d
  4034f6:	mov    ebx,0xaa081cd4
  4034fb:	(bad)  
  4034fc:	leave  
  4034fd:	sub    BYTE PTR [esi],dh
  4034ff:	push   edi
  403500:	pop    ds
  403501:	stos   BYTE PTR es:[edi],al
  403502:	jo     0x403491
  403504:	mov    bh,0xc1
  403506:	loopne 0x40349d
  403508:	mov    cl,0x21
  40350a:	call   0xcc869949
  40350f:	or     eax,0x4cee8604
  403514:	stc    
  403515:	hlt    
  403516:	cdq    
  403517:	test   DWORD PTR [ebx],ebx
  403519:	out    0x9e,al
  40351b:	mov    esi,DWORD PTR [esi]
  40351d:	lods   eax,DWORD PTR ds:[esi]
  40351e:	shl    BYTE PTR [edx-0x48],0x26
  403522:	add    DWORD PTR [ebp-0xe2eca8d],edi
  403528:	shl    BYTE PTR [ebp-0x6bdf8e70],1
  40352e:	pop    es
  40352f:	dec    ebp
  403530:	fs mov ebx,0xe62c41b5
  403536:	js     0x403585
  403538:	or     BYTE PTR [edx],dh
  40353a:	pusha  
  40353b:	jb     0x403551
  40353d:	xchg   ebx,eax
  40353e:	into   
  40353f:	fdivrp st(2),st
  403541:	fmul   QWORD PTR [ebx+0x4c]
  403544:	pop    eax
  403545:	leave  
  403546:	fs mov ecx,0x1732946
  40354c:	ret    
  40354d:	jno    0x40351b
  40354f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403550:	es fwait
  403552:	pop    ecx
  403553:	ret    
  403554:	push   ss
  403555:	adc    eax,0xa88f1c1f
  40355a:	adc    DWORD PTR [ebx+edx*4],edi
  40355d:	sub    eax,0x4e44ce62
  403562:	jmp    0xe372:0x4d73fe85
  403569:	dec    edi
  40356a:	add    bh,dh
  40356c:	dec    edx
  40356d:	jmp    0x4035eb
  40356f:	aas    
  403570:	call   FWORD PTR [ebx+0x6f285c11]
  403576:	inc    ebx
  403577:	push   0xffffffed
  403579:	push   esp
  40357b:	sub    dh,BYTE PTR [ecx]
  40357d:	andnps xmm3,XMMWORD PTR [edi]
  403580:	add    ah,BYTE PTR [eax+0x54]
  403583:	jp     0x403594
  403585:	dec    ecx
  403586:	add    dl,bh
  403588:	loopne 0x4035fa
  40358a:	add    ah,cl
  40358c:	hlt    
  40358d:	lods   al,BYTE PTR ds:[esi]
  40358e:	dec    eax
  40358f:	or     BYTE PTR [esi+0x39],0xdb
  403593:	test   DWORD PTR ds:0xc7805c87,edi
  403599:	mov    ah,BYTE PTR [ebx-0x3bbcdf26]
  40359f:	add    al,0x25
  4035a1:	stc    
  4035a2:	pop    ebx
  4035a3:	cmp    al,0xa1
  4035a5:	scas   al,BYTE PTR es:[edi]
  4035a6:	stc    
  4035a7:	scas   al,BYTE PTR es:[edi]
  4035a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035a9:	call   0xfcfd:0x54a00759
  4035b0:	out    dx,eax
  4035b1:	imul   ecx,DWORD PTR [ecx+0x439af9df],0x9f020420
  4035bb:	jmp    DWORD PTR [eax]
  4035bd:	mov    BYTE PTR [ebx],dl
  4035bf:	shl    BYTE PTR [ebp+0x12],1
  4035c2:	fistp  WORD PTR [ebp-0x53]
  4035c5:	es inc ebp
  4035c7:	repnz and eax,0xef1c93e6
  4035cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ce:	leave  
  4035cf:	jb     0x403635
  4035d1:	jo     0x4035eb
  4035d3:	xchg   esi,eax
  4035d4:	ror    DWORD PTR [ecx+0x1fbc2504],1
  4035da:	test   DWORD PTR [eax-0x19],eax
  4035dd:	js     0x4035fc
  4035df:	inc    ebx
  4035e0:	mov    esi,0xdaeac049
  4035e5:	mov    ds:0x740571ae,al
  4035ea:	test   DWORD PTR [ecx+0x15],edi
  4035ed:	or     DWORD PTR [esi+0x28],0x35
  4035f1:	sub    ch,al
  4035f3:	dec    esi
  4035f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035f5:	daa    
  4035f6:	fs stc 
  4035f8:	js     0x403601
  4035fa:	jb     0x40360a
  4035fc:	(bad)  
  4035fd:	retf   
  4035fe:	dec    ebx
  4035ff:	nop
  403600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403601:	mov    ss,WORD PTR [ecx]
  403603:	mov    cl,0xcd
  403605:	imul   BYTE PTR [ecx-0x7f48465]
  40360b:	pop    ss
  40360c:	mov    ecx,es
  40360e:	cmp    BYTE PTR ds:0x332822ab,0x34
  403615:	jmp    0xe1ee8a79
  40361a:	jbe    0x4035d0
  40361c:	lds    eax,FWORD PTR [ecx+0x8241cf0]
  403622:	repz ja 0x403601
  403625:	dec    edx
  403626:	mov    dl,0x7e
  403628:	or     DWORD PTR ds:0xc3580736,ecx
  40362e:	leave  
  40362f:	pop    esp
  403630:	push   eax
  403631:	pop    eax
  403632:	jbe    0x4035f3
  403634:	mov    cl,0x9d
  403636:	sbb    dh,BYTE PTR [esi]
  403638:	mov    ah,0x4f
  40363a:	adc    DWORD PTR [edx-0x71],edx
  40363d:	jns    0x403681
  40363f:	add    al,0x67
  403641:	mov    ch,0x3c
  403643:	push   ebx
  403644:	mov    ch,0x50
  403646:	in     eax,dx
  403647:	sub    ah,0x31
  40364a:	sub    BYTE PTR [edi+0x6aa4670a],bl
  403650:	jmp    0x845a:0x84b97e7f
  403657:	bound  ebp,QWORD PTR [ebx+0x41]
  40365a:	iret   
  40365b:	push   edx
  40365c:	or     dl,dl
  40365e:	jnp    0x40362e
  403660:	cmp    DWORD PTR [ecx+0x7f],esi
  403663:	push   eax
  403664:	jo     0x403631
  403666:	fcomp  QWORD PTR [edx]
  403668:	cld    
  403669:	out    dx,eax
  40366a:	cmp    BYTE PTR [ebx+0x28],0xd
  40366e:	cdq    
  40366f:	sbb    ebp,esp
  403671:	ret    0x2489
  403674:	repnz xchg esp,eax
  403676:	cli    
  403677:	jmp    0x680e1e17
  40367c:	xor    DWORD PTR [ecx-0x37],0xffffff8a
  403680:	xor    BYTE PTR ds:0x1b9c6aa9,0x3d
  403687:	jge    0x403671
  403689:	sub    DWORD PTR [edx],eax
  40368b:	mov    bh,0x43
  40368d:	xchg   ebp,eax
  40368e:	repz dec esi
  403690:	repnz lods eax,DWORD PTR ds:[esi]
  403692:	jle    0x40365f
  403694:	ds xchg esi,eax
  403696:	push   es
  403697:	mov    eax,ds:0x1b5c3e91
  40369c:	xchg   ebp,eax
  40369d:	ds lahf 
  40369f:	pop    ecx
  4036a0:	pop    edi
  4036a1:	lds    esi,FWORD PTR [eax]
  4036a3:	adc    al,0x49
  4036a5:	or     esi,DWORD PTR ds:0x23c34804
  4036ab:	addr16 fs pusha 
  4036ae:	cwde   
  4036af:	mov    BYTE PTR [esi],bl
  4036b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b2:	mov    dl,0x77
  4036b4:	aaa    
  4036b5:	(bad)  
  4036b6:	retf   
  4036b7:	adc    ch,al
  4036b9:	out    dx,al
  4036ba:	clc    
  4036bb:	push   0xe8d7485d
  4036c0:	fidiv  DWORD PTR [edx-0x8]
  4036c3:	int3   
  4036c4:	push   edx
  4036c5:	jge    0x4036e1
  4036c7:	lods   al,BYTE PTR ds:[esi]
  4036c8:	inc    esi
  4036c9:	or     dh,dh
  4036cb:	fs pop ebp
  4036cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036ce:	sub    DWORD PTR [ecx-0x7a],esp
  4036d1:	fneni(8087 only) 
  4036d3:	in     eax,dx
  4036d4:	sub    dh,0xfb
  4036d7:	sar    DWORD PTR [ebp-0x5e],cl
  4036da:	mov    ecx,0x7e0bda1f
  4036df:	test   al,0x64
  4036e1:	int3   
  4036e2:	js     0x4036b7
  4036e4:	mov    ds:0x46a4c3c9,eax
  4036e9:	xchg   DWORD PTR cs:[eax+0x77],esi
  4036ed:	stos   BYTE PTR es:[edi],al
  4036ee:	iret   
  4036ef:	sahf   
  4036f0:	lods   al,BYTE PTR ds:[esi]
  4036f1:	mov    edx,0x48b4177e
  4036f6:	add    BYTE PTR [edi+0x39],dh
  4036f9:	ja     0x403764
  4036fb:	and    DWORD PTR [ebx],ebp
  4036fd:	stos   DWORD PTR es:[edi],eax
  4036fe:	xor    eax,0x7a3828cd
  403703:	inc    DWORD PTR [esi+eiz*4-0x44]
  403707:	dec    ecx
  403708:	ret    
  403709:	cli    
  40370a:	lock mov bh,0x2
  40370d:	sbb    eax,0x29eacfed
  403712:	loop   0x403766
  403714:	and    DWORD PTR ds:0x5a333b91,ecx
  40371a:	jns    0x4036be
  40371c:	es push edx
  40371e:	xchg   edx,eax
  40371f:	inc    ebp
  403720:	push   esp
  403721:	sub    ebp,DWORD PTR [ecx]
  403723:	push   eax
  403724:	sub    edi,DWORD PTR [eax-0x38]
  403727:	push   ebp
  403728:	lods   eax,DWORD PTR ds:[esi]
  403729:	jg     0x40372c
  40372b:	lock add eax,DWORD PTR [edx]
  40372e:	cmp    BYTE PTR [esi],0x11
  403731:	push   esp
  403732:	sub    dh,BYTE PTR [ebp-0x5b]
  403735:	(bad)  
  403736:	stc    
  403737:	pop    esp
  403738:	xchg   ebp,eax
  403739:	jne    0x4036ec
  40373b:	jb     0x403798
  40373d:	sub    ah,BYTE PTR [esi-0x1fbd2224]
  403743:	pop    ebx
  403744:	mov    bl,0xd5
  403746:	add    ecx,DWORD PTR [eax-0x534fae99]
  40374c:	mov    dh,0x5f
  40374e:	pop    eax
  40374f:	rcl    BYTE PTR [esi-0x31f22f32],cl
  403755:	pop    ecx
  403756:	cmc    
  403757:	pop    esi
  403758:	fisub  DWORD PTR [esi-0x9]
  40375b:	jne    0x403792
  40375d:	adc    bl,0x66
  403760:	out    0xb5,al
  403762:	or     bh,BYTE PTR [eax-0x410bf082]
  403768:	xor    ecx,esp
  40376a:	adc    edi,DWORD PTR [ebp+0x53]
  40376d:	scas   eax,DWORD PTR es:[edi]
  40376e:	jp     0x403736
  403770:	shr    BYTE PTR [edi],0xcd
  403773:	cwde   
  403774:	add    cl,al
  403776:	dec    edx
  403777:	imul   esi,DWORD PTR [ebp+0x59fdbe80],0x64
  40377e:	rcl    BYTE PTR [ecx],1
  403780:	xor    DWORD PTR [ebx+0x87fded3],eax
  403786:	pop    ss
  403787:	xor    BYTE PTR [edx+0x59b4473f],dh
  40378d:	leave  
  40378e:	push   cs
  40378f:	xor    dh,bh
  403791:	push   ss
  403792:	mov    eax,DWORD PTR [esi-0x15fda5f5]
  403798:	lock jno 0x4037b7
  40379b:	pop    esp
  40379c:	mov    esp,0x45ab4639
  4037a1:	mov    ?,ecx
  4037a3:	in     eax,0x9e
  4037a5:	ja     0x403800
  4037a7:	jae    0x4037a4
  4037a9:	dec    ecx
  4037aa:	lods   eax,DWORD PTR ds:[esi]
  4037ab:	iret   
  4037ac:	mov    esi,0x3344750d
  4037b1:	test   BYTE PTR [edi],ch
  4037b3:	mov    ebx,0x43508174
  4037b8:	inc    ecx
  4037b9:	push   ebx
  4037ba:	and    esp,edx
  4037bc:	pop    ss
  4037bd:	xor    bl,BYTE PTR [ebp+0x51c6ce35]
  4037c3:	pop    ebx
  4037c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037c5:	inc    edi
  4037c6:	cli    
  4037c7:	bound  edi,QWORD PTR [esp+edi*8-0x13]
  4037cb:	add    esp,ebp
  4037cd:	cmp    eax,0x9f39d195
  4037d2:	mov    BYTE PTR [edi+ecx*8+0xa375577],bh
  4037d9:	and    dh,BYTE PTR [edi]
  4037db:	mov    cl,0x1f
  4037dd:	fld    QWORD PTR [eax-0x7f9bffa1]
  4037e3:	pop    edi
  4037e4:	int3   
  4037e5:	int3   
  4037e6:	mov    ebp,0x1c3996e0
  4037eb:	or     ch,BYTE PTR [ebx-0x31]
  4037ee:	repz or al,0xa8
  4037f1:	sub    eax,0xc39d69e7
  4037f6:	in     eax,0xdf
  4037f8:	(bad)  
  4037f9:	popa   
  4037fa:	sub    eax,0xaf660aae
  4037ff:	scas   al,BYTE PTR es:[edi]
  403800:	adc    al,0x64
  403802:	das    
  403803:	cmp    eax,0xc8aa5d58
  403808:	in     al,0x6e
  40380a:	fisttp QWORD PTR [edx]
  40380c:	outs   dx,DWORD PTR ds:[esi]
  40380d:	lahf   
  40380e:	adc    edi,DWORD PTR [edi-0x4750547]
  403814:	mov    ebp,0x2bf93467
  403819:	push   0x3345fe31
  40381e:	cli    
  40381f:	outs   dx,BYTE PTR ds:[esi]
  403820:	iret   
  403821:	push   eax
  403822:	mov    ch,0xd7
  403824:	stos   DWORD PTR es:[edi],eax
  403825:	xor    dh,0x61
  403828:	pop    ebp
  403829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40382b:	(bad)  
  40382c:	sahf   
  40382d:	stos   BYTE PTR es:[edi],al
  40382e:	call   0xe0743649
  403833:	push   esi
  403834:	(bad)  
  403835:	aad    0x7
  403837:	xchg   DWORD PTR [ecx+0xad592e5],esi
  40383d:	and    BYTE PTR [ebx-0x26d1547e],ch
  403843:	pop    ebx
  403844:	(bad)  
  403845:	xor    ebp,DWORD PTR [ecx+0x1a79ba6c]
  40384b:	pop    edi
  40384c:	xchg   ecx,eax
  40384d:	mov    ?,WORD PTR [esi]
  40384f:	jo     0x4037d1
  403851:	mov    esp,0xd68e1cc1
  403856:	push   edi
  403857:	push   es
  403858:	iret   
  403859:	inc    ebp
  40385a:	pop    ebx
  40385b:	lods   eax,DWORD PTR ss:[esi]
  40385d:	pop    ebp
  40385e:	ins    BYTE PTR es:[edi],dx
  40385f:	cld    
  403860:	pop    ss
  403861:	pop    edx
  403862:	lahf   
  403863:	add    dl,BYTE PTR [edx+0x4c38d497]
  403869:	out    0xb9,eax
  40386b:	jp     0x40380b
  40386d:	repnz popf 
  40386f:	cmp    ebx,DWORD PTR [edx+0x14985aec]
  403875:	xor    al,0xe7
  403877:	inc    ebp
  403878:	in     eax,dx
  403879:	fst    DWORD PTR [edi+eax*4-0x30d9b138]
  403880:	lds    ecx,FWORD PTR [ebp+0x7a2d1e68]
  403886:	loopne 0x4038a6
  403888:	xor    bh,BYTE PTR ds:0x91a95f53
  40388e:	leave  
  40388f:	aas    
  403890:	gs mov esi,0xee200f9f
  403896:	inc    esp
  403897:	push   0x70
  403899:	or     eax,0xfcf22df4
  40389e:	sahf   
  40389f:	out    dx,eax
  4038a0:	mov    eax,0x78d8ccd3
  4038a5:	js     0x4038be
  4038a7:	and    DWORD PTR [edx],ecx
  4038a9:	sbb    BYTE PTR [esi],dl
  4038ab:	imul   esi,DWORD PTR [esi+0x55],0x8e999707
  4038b2:	jo     0x40383e
  4038b4:	push   es
  4038b5:	scas   eax,DWORD PTR es:[edi]
  4038b6:	jo     0x403903
  4038b8:	add    BYTE PTR [esi+eax*4],bh
  4038bb:	pushf  
  4038bc:	sub    ebp,DWORD PTR [edi+eax*1-0x8702864]
  4038c3:	ds (bad) 
  4038c5:	out    0xd7,eax
  4038c7:	addr16 fwait
  4038c9:	mov    eax,0x9898ecc5
  4038ce:	in     eax,0xf7
  4038d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038d1:	mov    edx,0xcea1b151
  4038d6:	push   ds
  4038d7:	and    al,0x1c
  4038d9:	inc    edx
  4038da:	mov    esp,0x58ad8992
  4038df:	lock push eax
  4038e1:	mov    ecx,0x360f756f
  4038e6:	push   ebp
  4038e7:	and    dh,dl
  4038e9:	psubd  mm3,QWORD PTR [ebx+0x2f]
  4038ed:	jle    0x403961
  4038ef:	repnz sub bl,BYTE PTR [ebp-0x78]
  4038f3:	adc    al,0x3f
  4038f5:	lods   al,BYTE PTR ds:[esi]
  4038f6:	stos   DWORD PTR es:[edi],eax
  4038f7:	aaa    
  4038f8:	clc    
  4038f9:	jge    0x403887
  4038fb:	out    0xbc,al
  4038fd:	pop    eax
  4038fe:	add    BYTE PTR [edi+0x7d],ch
  403901:	push   eax
  403902:	fwait
  403903:	dec    ebx
  403904:	xchg   ebp,eax
  403905:	or     DWORD PTR [ecx+0x3b],ebp
  403908:	xchg   ecx,eax
  403909:	mov    edx,0xf4af7450
  40390e:	xchg   edx,eax
  40390f:	sbb    al,0x6
  403911:	inc    edx
  403912:	leave  
  403913:	or     DWORD PTR [esi+ecx*1+0x781e35d4],0xe838a1e4
  40391e:	mov    al,ds:0x3a0d0cf3
  403923:	daa    
  403924:	add    bl,ah
  403926:	fsub   QWORD PTR [esi]
  403928:	lods   eax,DWORD PTR ds:[esi]
  403929:	out    0x77,al
  40392b:	inc    ebp
  40392c:	loop   0x403969
  40392e:	fsubr  st(4),st
  403930:	adc    edx,ecx
  403932:	inc    ebp
  403933:	xchg   ebp,eax
  403934:	inc    esi
  403935:	xor    eax,0xcb4f6237
  40393a:	sub    DWORD PTR [ecx-0x6f154686],esp
  403940:	or     dh,bh
  403942:	dec    edx
  403943:	mov    bl,0x63
  403945:	jle    0x403901
  403947:	and    DWORD PTR [ebx-0x3537b141],0xcb95451b
  403951:	retf   
  403952:	loop   0x40394a
  403954:	adc    DWORD PTR [ecx],edx
  403956:	retf   
  403957:	jmp    0x40393b
  403959:	push   edi
  40395a:	xlat   BYTE PTR ds:[ebx]
  40395b:	add    edx,DWORD PTR [ecx+0x258541b8]
  403961:	adc    eax,0x9786253f
  403966:	rol    eax,cl
  403968:	fcomp  DWORD PTR [ebx+edx*4-0x41]
  40396c:	rcl    DWORD PTR [ebp+0x33],0x22
  403970:	ret    0x2ae8
  403973:	enterw 0x850c,0x2a
  403978:	jle    0x4039e6
  40397a:	xchg   esi,eax
  40397b:	enter  0x82b9,0x98
  40397f:	jl     0x403959
  403981:	add    DWORD PTR [eax-0x52],eax
  403984:	adc    bh,BYTE PTR [edi+0xca3b6df]
  40398a:	cwde   
  40398b:	xchg   ebp,eax
  40398c:	pushf  
  40398d:	xacquire xchg DWORD PTR [ebx+esi*4+0x294e7e03],ebx
  403995:	pop    edx
  403996:	adc    al,0x1c
  403998:	(bad)  
  403999:	or     al,0x38
  40399b:	jne    0x403998
  40399d:	pusha  
  40399e:	inc    edi
  40399f:	ss icebp 
  4039a1:	cld    
  4039a2:	rol    dh,0xc5
  4039a5:	add    al,0xcd
  4039a7:	test   BYTE PTR [edi],dh
  4039a9:	out    0x8c,al
  4039ab:	retf   
  4039ac:	in     eax,dx
  4039ad:	or     al,dh
  4039af:	cmp    DWORD PTR [esi-0x4c8aee8c],edi
  4039b5:	sub    DWORD PTR [edi],ebp
  4039b7:	cmc    
  4039b8:	idiv   BYTE PTR [eax-0x5abbfc2f]
  4039be:	dec    edx
  4039bf:	idiv   BYTE PTR [eax+0x7db78fbf]
  4039c5:	fs pusha 
  4039c7:	stos   BYTE PTR es:[edi],al
  4039c8:	sub    ebx,DWORD PTR [ebp-0x20]
  4039cb:	or     al,0x19
  4039cd:	xchg   ecx,eax
  4039ce:	sub    eax,0xb30ee2d8
  4039d3:	fnstenv [ebp+0x678d3f9]
  4039d9:	call   0xfe11d11f
  4039de:	dec    ebp
  4039df:	fidivr WORD PTR [edi+0x7676496c]
  4039e5:	ret    0x748d
  4039e8:	daa    
  4039e9:	xchg   esp,eax
  4039ea:	dec    esi
  4039eb:	aas    
  4039ec:	jbe    0x4039d6
  4039ee:	xor    al,ah
  4039f0:	jnp    0x403a3a
  4039f2:	js     0x403a52
  4039f4:	data16 (bad) 
  4039f6:	dec    edx
  4039f7:	fld    DWORD PTR [edi-0x7e]
  4039fa:	or     al,0x69
  4039fc:	add    eax,0xcd3fc46a
  403a01:	jl     0x403a36
  403a03:	xlat   BYTE PTR ds:[ebx]
  403a04:	ds mov cl,ah
  403a07:	iret   
  403a08:	inc    edi
  403a09:	sub    ecx,DWORD PTR [edx+esi*4]
  403a0c:	mov    eax,DWORD PTR [ebx+0x609f966c]
  403a12:	pop    ebx
  403a13:	gs iret 
  403a15:	or     DWORD PTR [esi],esp
  403a17:	or     al,0x5e
  403a19:	sub    edi,DWORD PTR [ecx+0x113b836]
  403a1f:	dec    eax
  403a20:	mov    dl,0xdb
  403a22:	(bad)  
  403a23:	(bad)  
  403a24:	jo     0x4039fc
  403a26:	push   ebp
  403a27:	adc    al,0x9b
  403a29:	out    dx,al
  403a2a:	data16 xor bh,BYTE PTR [ebp+ebx*1-0x5]
  403a2f:	pop    esi
  403a30:	lea    edi,[ebx+0x339c518f]
  403a36:	fisubr DWORD PTR [ebx+0x42949e84]
  403a3c:	xchg   edx,eax
  403a3d:	fnstenv [edi-0x68]
  403a40:	mov    DWORD PTR ss:[ebx-0x44923a42],ebp
  403a47:	cmp    BYTE PTR [ebx],0xc5
  403a4a:	ror    DWORD PTR [eax],0xf6
  403a4d:	ss cmp eax,0xc21ddd5b
  403a53:	pop    esi
  403a54:	sub    DWORD PTR [eax],ebp
  403a56:	aas    
  403a57:	jl     0x403a5b
  403a59:	xor    bh,bl
  403a5b:	ds xchg edx,eax
  403a5d:	cmp    bl,BYTE PTR [ecx+0x1f]
  403a60:	out    0xc6,eax
  403a62:	and    BYTE PTR [eax+0xfc39d16],dh
  403a68:	aas    
  403a69:	enter  0xbc8d,0xf0
  403a6d:	jge    0x403a0f
  403a6f:	into   
  403a70:	les    eax,FWORD PTR [esi+edx*2+0x573d28f8]
  403a77:	test   al,0x75
  403a79:	jecxz  0x403aed
  403a7b:	sub    ch,BYTE PTR [ebp+0xc75e807]
  403a81:	sti    
  403a82:	sbb    eax,0xb2e258e
  403a87:	jns    0x403ae4
  403a89:	dec    ecx
  403a8a:	cli    
  403a8b:	sahf   
  403a8c:	add    al,BYTE PTR [edx]
  403a8e:	pop    edi
  403a8f:	cvtps2pd xmm6,QWORD PTR [esi+ebx*8+0x2f7dd883]
  403a97:	push   esi
  403a98:	jmp    0x403a91
  403a9a:	mov    edi,0xa2b8f39
  403a9f:	call   0xe2d30a6c
  403aa4:	dec    ebx
  403aa5:	xor    al,0xd0
  403aa7:	add    eax,0x4aca82
  403aac:	in     eax,dx
  403aad:	adc    dl,dl
  403aaf:	call   0xa159:0xd9c3eda8
  403ab6:	iret   
  403ab7:	call   0xcb508424
  403abc:	and    DWORD PTR [ebp-0x89e9ad3],esi
  403ac2:	push   ds
  403ac3:	(bad)  
  403ac4:	mov    al,ds:0xc00754d5
  403ac9:	and    DWORD PTR [ecx-0x80],ebx
  403acc:	push   esi
  403acd:	jp     0x403b38
  403acf:	int    0xbe
  403ad1:	loope  0x403b2f
  403ad3:	pop    edi
  403ad4:	and    DWORD PTR [ecx+esi*8-0x39459030],0xd8ed5249
  403adf:	mov    ch,0x22
  403ae1:	aam    0xb2
  403ae3:	or     ch,bh
  403ae5:	dec    edi
  403ae6:	jecxz  0x403a7d
  403ae8:	xchg   ebx,eax
  403ae9:	pop    esi
  403aea:	jle    0x403b5b
  403aec:	sbb    eax,0xd84d5728
  403af1:	ret    
  403af2:	adc    eax,0x8d303521
  403af7:	bound  esi,QWORD PTR [edx+0x21]
  403afa:	push   ecx
  403afb:	push   ebp
  403afc:	inc    ecx
  403afd:	or     edi,DWORD PTR [edi+0x7f185ee0]
  403b03:	(bad)  
  403b04:	je     0x403b13
  403b06:	mov    ecx,0x73a1114d
  403b0b:	ret    0x3b2f
  403b0e:	fisubr WORD PTR [esi-0x35]
  403b11:	inc    ebx
  403b12:	dec    eax
  403b13:	les    ebx,FWORD PTR [esi+ecx*4+0x17055bd7]
  403b1a:	xor    al,0xa2
  403b1c:	stc    
  403b1d:	push   ebx
  403b1e:	(bad)  
  403b1f:	cmp    al,0x2c
  403b21:	add    al,0xc3
  403b23:	outs   dx,BYTE PTR ds:[esi]
  403b24:	mov    BYTE PTR [eax+0x2c],ah
  403b27:	xchg   esi,eax
  403b28:	push   ebx
  403b29:	push   0xffffff83
  403b2b:	pushf  
  403b2c:	push   edi
  403b2d:	fbld   TBYTE PTR [esi]
  403b2f:	inc    esp
  403b30:	stc    
  403b31:	push   ebp
  403b32:	sbb    eax,0x9486ce1e
  403b37:	sub    DWORD PTR [edx+ecx*1+0x5228f59b],0xffffffe9
  403b3f:	fwait
  403b40:	call   DWORD PTR [ecx+0x1]
  403b43:	cmp    al,0x8e
  403b45:	ja     0x403b90
  403b47:	aad    0xa1
  403b49:	dec    edi
  403b4a:	inc    ecx
  403b4b:	iret   
  403b4c:	and    dh,dh
  403b4e:	dec    edi
  403b4f:	pop    edx
  403b50:	inc    edx
  403b51:	add    cl,al
  403b53:	(bad)  
  403b54:	retf   0x83c4
  403b57:	xor    eax,0xd8c85132
  403b5c:	dec    edx
  403b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b5e:	xchg   ecx,eax
  403b5f:	gs jo  0x403b53
  403b62:	bound  esi,QWORD PTR [edi]
  403b64:	jns    0x403b54
  403b66:	push   0x20
  403b68:	std    
  403b69:	cmp    cl,bl
  403b6b:	pop    edi
  403b6c:	popw   ss
  403b6e:	sti    
  403b6f:	and    eax,0xc2dfcf53
  403b74:	je     0x403bbf
  403b76:	and    DWORD PTR [ebp+0x6186d9c8],ebx
  403b7c:	add    ah,BYTE PTR [bx+di+0x2]
  403b80:	jmp    0xc7d3:0xfed1084d
  403b87:	outs   dx,DWORD PTR ds:[esi]
  403b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b89:	ss mov ebp,0x9f3d362d
  403b8f:	adc    eax,0x85aada81
  403b94:	and    bl,dl
  403b96:	test   DWORD PTR [edi+0x50],ecx
  403b99:	push   ecx
  403b9a:	cdq    
  403b9b:	fnstcw WORD PTR [ecx+eax*1]
  403b9e:	inc    esp
  403b9f:	fwait
  403ba0:	and    eax,0xe26d4688
  403ba5:	mov    edx,0x4c93b323
  403baa:	cmp    DWORD PTR [eax],esp
  403bac:	cmp    eax,0x1b88804d
  403bb2:	(bad)  
  403bb3:	leave  
  403bb4:	fs mov esp,0x23d0ab63
  403bba:	int    0x51
  403bbc:	fmul   st(2),st
  403bbe:	pop    esp
  403bbf:	dec    ebx
  403bc0:	sub    al,0x9a
  403bc2:	pop    es
  403bc3:	int    0xe2
  403bc5:	mov    DWORD PTR ds:0x76d09ed0,ebp
  403bcb:	loopne 0x403b6e
  403bcd:	pop    esi
  403bce:	ins    DWORD PTR es:[edi],dx
  403bcf:	pushaw 
  403bd1:	mov    dl,0x44
  403bd3:	or     al,0xb0
  403bd5:	fld    DWORD PTR [esi-0x68c13d3a]
  403bdb:	retf   0x3492
  403bde:	inc    ebp
  403bdf:	push   ebp
  403be0:	bound  ecx,QWORD PTR [esi+0x34]
  403be3:	lods   al,BYTE PTR ds:[esi]
  403be4:	push   ss
  403be5:	dec    eax
  403be6:	add    DWORD PTR [ebx+edx*4-0x36],edx
  403bea:	mov    dl,0x7b
  403bec:	idiv   BYTE PTR [edi+0x1966f84e]
  403bf2:	adc    al,0x30
  403bf4:	mov    ch,0xd6
  403bf6:	test   eax,0x5b7d633c
  403bfb:	sub    ebx,eax
  403bfd:	bound  ebx,QWORD PTR ds:0xa7f09fee
  403c03:	(bad)  
  403c04:	in     eax,0xf
  403c06:	sub    BYTE PTR [ebx+ecx*4+0x3d],cl
  403c0a:	mov    ds:0x9bd6733a,al
  403c0f:	mov    esi,0x8530a30c
  403c14:	mov    ebp,0x76c308a2
  403c19:	inc    esp
  403c1a:	push   esi
  403c1b:	stos   DWORD PTR es:[edi],eax
  403c1c:	xor    al,BYTE PTR [ebx]
  403c1e:	mov    ds:0xce5c1b8a,al
  403c23:	pop    esp
  403c24:	sub    DWORD PTR ds:0x6377fc11,esi
  403c2a:	fadd   DWORD PTR [ebx]
  403c2c:	sti    
  403c2d:	shl    ecx,0x20
  403c30:	mov    ds:0x1d6be827,eax
  403c35:	mov    al,0xa6
  403c37:	gs ins BYTE PTR es:[edi],dx
  403c39:	sub    BYTE PTR [esi],ch
  403c3b:	fisub  WORD PTR [ebx]
  403c3d:	iret   
  403c3e:	pop    es
  403c3f:	mov    ds:0x3ad2c61a,eax
  403c44:	sar    DWORD PTR [ebx+0x4f],cl
  403c47:	pop    edx
  403c48:	stos   BYTE PTR es:[edi],al
  403c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c4a:	xchg   esp,eax
  403c4b:	repnz xchg edx,eax
  403c4d:	xchg   esi,eax
  403c4e:	xchg   BYTE PTR [edi-0x7a],cl
  403c51:	mov    al,ds:0x6f10069f
  403c56:	push   ebp
  403c57:	(bad)  [edi+0x280353ca]
  403c5d:	mov    WORD PTR [eax+0x1d],ds
  403c60:	mov    ds:0x5217bb3b,eax
  403c65:	fcomi  st,st(2)
  403c67:	jmp    0x160c:0x2c80998b
  403c6e:	repnz ss inc ecx
  403c71:	or     al,0xa0
  403c73:	cli    
  403c74:	ds popf 
  403c76:	loop   0x403cd0
  403c78:	jmp    0x403c7d
  403c7a:	test   DWORD PTR [ebp+0x26454ae9],ebp
  403c80:	push   esp
  403c81:	lods   eax,DWORD PTR ds:[esi]
  403c82:	gs shr esi,0xbe
  403c86:	ror    DWORD PTR [edi-0x34],0x8d
  403c8a:	pop    es
  403c8b:	sti    
  403c8c:	test   al,0xf
  403c8e:	retf   0xeb87
  403c91:	rcl    DWORD PTR [ebp+0xb],0xb1
  403c95:	xchg   esi,eax
  403c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c97:	ret    0x923d
  403c9a:	arpl   WORD PTR [eax-0x2ff072c2],sp
  403ca0:	mov    BYTE PTR es:[eax-0x56868ac9],bh
  403ca7:	stos   DWORD PTR es:[edi],eax
  403ca8:	and    al,0x5e
  403caa:	imul   esp,DWORD PTR [edi+0x49],0xfffffffc
  403cae:	test   DWORD PTR [esi+0x68],ebx
  403cb1:	mov    ds:0xb790a626,eax
  403cb6:	rol    BYTE PTR [esp+ebx*8+0x71214623],0xa4
  403cbe:	sbb    al,0xf4
  403cc0:	dec    eax
  403cc1:	mov    ss,eax
  403cc3:	xabort 0xa8
  403cc6:	hlt    
  403cc7:	cmp    ch,BYTE PTR [eax-0x4b]
  403cca:	push   ecx
  403ccb:	stos   DWORD PTR es:[edi],eax
  403ccc:	scas   al,BYTE PTR es:[edi]
  403ccd:	xor    eax,0x1e60a021
  403cd2:	add    bh,dl
  403cd4:	mov    bl,0x5d
  403cd6:	call   0xa99c26ff
  403cdb:	xchg   bh,al
  403cdd:	jmp    0x403cc3
  403cdf:	xchg   edi,eax
  403ce0:	arpl   WORD PTR [edi],di
  403ce2:	inc    esp
  403ce3:	mov    bh,ch
  403ce5:	xchg   edi,eax
  403ce6:	pop    ss
  403ce7:	fdiv   st(7),st
  403ce9:	pusha  
  403cea:	test   al,0x44
  403cec:	sbb    DWORD PTR [edx-0x5b20cd7e],eax
  403cf2:	add    dl,ah
  403cf4:	cmp    eax,0x720e02e
  403cf9:	mov    bh,0xf
  403cfb:	sub    BYTE PTR [esp+edx*2],dl
  403cfe:	xchg   ebx,eax
  403cff:	mov    eax,0x24dc44d9
  403d04:	mov    dh,0x8
  403d06:	fldenv [ecx]
  403d08:	pushf  
  403d09:	retf   
  403d0a:	mov    edx,0x7a3b5d29
  403d0f:	push   esp
  403d10:	(bad)  
  403d11:	xchg   esi,eax
  403d12:	mov    BYTE PTR [edx-0x4b],cl
  403d15:	mov    esi,0x36231c06
  403d1a:	dec    edx
  403d1b:	push   ebx
  403d1c:	retf   
  403d1d:	pop    ebx
  403d1e:	arpl   si,cx
  403d20:	std    
  403d21:	lock std 
  403d23:	cmp    BYTE PTR [ebx-0x5b],al
  403d26:	je     0x403cb8
  403d28:	call   0xf8c1:0xaaa8ca2b
  403d2f:	cmc    
  403d30:	dec    eax
  403d31:	fisttp QWORD PTR [edi-0x7e19717e]
  403d37:	ret    
  403d38:	mov    al,ds:0xc4f56cd1
  403d3d:	gs jg  0x403db6
  403d40:	scas   eax,DWORD PTR es:[edi]
  403d41:	push   esi
  403d42:	adc    ebp,esi
  403d44:	call   0xd82dfcf0
  403d49:	dec    ebx
  403d4a:	push   ebp
  403d4b:	out    dx,eax
  403d4c:	std    
  403d4d:	and    esi,eax
  403d4f:	cs push 0x61863946
  403d55:	mov    ebp,DWORD PTR [edx]
  403d57:	mov    dl,0x67
  403d59:	lds    ebx,FWORD PTR [eiz*2-0x20a108da]
  403d60:	dec    esi
  403d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d62:	jmp    0x403cef
  403d64:	imul   ecx,DWORD PTR [eax+0xa],0xdfe9b689
  403d6b:	push   cs
  403d6c:	(bad)  
  403d6d:	(bad)  ds:0xe68164ee
  403d73:	and    edi,DWORD PTR [esp+esi*4+0x4b]
  403d77:	cwde   
  403d78:	stos   DWORD PTR es:[edi],eax
  403d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d7a:	xor    DWORD PTR [edi+0x34],edi
  403d7d:	jmp    0xbf767cd8
  403d82:	push   ecx
  403d83:	ror    dl,0xfd
  403d86:	xchg   ebx,eax
  403d87:	call   DWORD PTR [ebp-0x2186d64f]
  403d8e:	jg     0x403da7
  403d90:	inc    esp
  403d91:	scas   al,BYTE PTR es:[edi]
  403d92:	adc    bl,BYTE PTR [ecx+ebx*2-0x28]
  403d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d97:	pop    edx
  403d98:	inc    DWORD PTR [ebp-0x629c5e79]
  403d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d9f:	xchg   eax,ebp
  403da1:	or     al,0x65
  403da3:	call   0x7ca5:0xdb1ead9
  403daa:	ins    BYTE PTR es:[edi],dx
  403dab:	jns    0x403d38
  403dad:	ror    ah,cl
  403daf:	mov    esi,esi
  403db1:	mov    al,ds:0xe1c3d42e
  403db6:	lahf   
  403db7:	fstp   QWORD PTR [ebx*1-0x4561741]
  403dbe:	scas   eax,DWORD PTR es:[edi]
  403dbf:	fidivr WORD PTR [edi-0x5f596a9f]
  403dc5:	jae    0x403de5
  403dc7:	inc    ebx
  403dc8:	xor    DWORD PTR [ecx+0x45],esp
  403dcb:	dec    esi
  403dcc:	pusha  
  403dcd:	adc    edx,ebx
  403dcf:	in     al,dx
  403dd0:	mov    ss:0xe20a6102,eax
  403dd6:	push   esp
  403dd7:	loop   0x403e2a
  403dd9:	test   BYTE PTR [ecx-0x67629293],bh
  403ddf:	sub    bl,BYTE PTR [esi-0x4d5a8f4e]
  403de5:	test   eax,0x3ff550d8
  403dea:	push   ss
  403deb:	pop    esp
  403dec:	cdq    
  403ded:	aam    0x38
  403def:	mov    dh,0x9f
  403df1:	dec    ebp
  403df2:	imul   bp,WORD PTR [esi-0x24],0xffd2
  403df7:	xchg   ebx,eax
  403df8:	sbb    BYTE PTR [eax-0x42],bh
  403dfb:	mov    bh,0xd3
  403dfd:	add    DWORD PTR [esi+edi*2],ebp
  403e00:	(bad)  
  403e01:	lods   al,BYTE PTR ds:[esi]
  403e02:	fnsave [edi]
  403e04:	push   ecx
  403e05:	loopne 0x403e39
  403e07:	xor    ch,dh
  403e09:	(bad)  
  403e0a:	hlt    
  403e0b:	out    0x95,al
  403e0d:	adc    cl,BYTE PTR [ebx+0x2f]
  403e10:	cmc    
  403e11:	fsubr  DWORD PTR [ecx+ebp*2+0x524ffbf7]
  403e18:	mov    ah,BYTE PTR [edx-0x5]
  403e1b:	push   0xf05d75b9
  403e20:	aaa    
  403e21:	out    dx,eax
  403e22:	pop    esi
  403e23:	fs int 0x6f
  403e26:	mov    ebx,0xc172ae62
  403e2b:	hlt    
  403e2c:	mov    bl,0x27
  403e2e:	jp     0x403e6c
  403e30:	cmp    BYTE PTR [edi+ebx*8-0x64],bh
  403e34:	cbw    
  403e36:	jl     0x403e2c
  403e38:	test   al,0xfa
  403e3a:	push   esp
  403e3b:	jb     0x403e4f
  403e3d:	mov    bh,0x53
  403e3f:	js     0x403e98
  403e41:	pop    edi
  403e42:	mov    edi,0x59f15f80
  403e47:	xlat   BYTE PTR ds:[bx]
  403e49:	sbb    eax,0xcda642a0
  403e4e:	aam    0xd8
  403e50:	test   ecx,esi
  403e52:	mov    esi,0x58f09ff3
  403e57:	dec    eax
  403e58:	out    dx,eax
  403e59:	mov    cl,BYTE PTR [edi]
  403e5b:	sbb    bh,BYTE PTR [esp+edi*8]
  403e5e:	mov    ebx,0x9ddd05fa
  403e63:	pop    edi
  403e64:	mov    eax,0x8df0d270
  403e69:	or     eax,0x5a4a24f5
  403e6e:	sub    esi,ebx
  403e70:	and    ch,ch
  403e72:	jnp    0x403ec4
  403e74:	jnp    0x403e00
  403e76:	jo     0x403eee
  403e78:	mov    esi,0xd134a47b
  403e7d:	ja     0x403e25
  403e7f:	xor    esp,DWORD PTR [edx+edi*1+0x44f43a2c]
  403e86:	ret    0xff4a
  403e89:	dec    esi
  403e8a:	sbb    ch,BYTE PTR [edx]
  403e8c:	inc    edx
  403e8d:	shl    DWORD PTR [ecx-0x3ce6f28b],cl
  403e93:	mov    WORD PTR fs:[eax-0x6f],?
  403e97:	sti    
  403e98:	and    BYTE PTR [edi-0x3a],al
  403e9b:	in     al,dx
  403e9c:	lahf   
  403e9d:	jmp    ebx
  403e9f:	stos   BYTE PTR es:[edi],al
  403ea0:	push   ecx
  403ea1:	cmp    edx,esi
  403ea3:	scas   eax,DWORD PTR es:[edi]
  403ea4:	ins    DWORD PTR es:[edi],dx
  403ea5:	stos   DWORD PTR es:[edi],eax
  403ea6:	mov    cl,0x56
  403ea8:	add    al,BYTE PTR [ebp-0x3c887baf]
  403eae:	jnp    0x403ea2
  403eb0:	out    0x59,eax
  403eb2:	outs   dx,DWORD PTR ds:[esi]
  403eb3:	stc    
  403eb4:	mov    ecx,0xa7af28ea
  403eb9:	sbb    esi,DWORD PTR [ecx-0x11]
  403ebc:	dec    edi
  403ebd:	jno    0x403e82
  403ebf:	test   dl,cl
  403ec1:	sbb    BYTE PTR [ecx-0x64c978f5],bl
  403ec7:	adc    eax,0x9071fe33
  403ecc:	sbb    DWORD PTR [ebp-0x6],edi
  403ecf:	popf   
  403ed0:	aad    0xee
  403ed2:	cmp    ecx,ebx
  403ed4:	jg     0x403f0e
  403ed6:	push   es
  403ed7:	and    ebx,DWORD PTR [edx-0x3]
  403eda:	ror    BYTE PTR [ebx+0x3b],1
  403edd:	mov    ds:0x200f7d56,al
  403ee2:	nop
  403ee3:	sub    eax,0x7d4e1b3f
  403ee8:	maxps  xmm5,XMMWORD PTR [esi]
  403eeb:	lea    edi,ds:0x2655e3c8
  403ef1:	push   ss
  403ef2:	jg     0x403f72
  403ef4:	or     BYTE PTR ds:0x9fae1b2c,ch
  403efa:	or     DWORD PTR [ebx],0x41
  403efd:	fist   DWORD PTR [edx+0x688a3840]
  403f03:	rol    BYTE PTR [eax*2-0x69ce307a],0xfc
  403f0b:	sbb    DWORD PTR [ebx-0x2c],0x158b2097
  403f12:	push   0x19bac44c
  403f17:	in     al,0x78
  403f19:	mov    esi,0x6d3898cd
  403f1e:	das    
  403f1f:	cmp    al,0xac
  403f21:	xchg   ebx,eax
  403f22:	call   0x9945de34
  403f27:	in     eax,dx
  403f28:	xchg   BYTE PTR ds:0xc46dfcbe,bh
  403f2e:	ret    0x93a1
  403f31:	sub    eax,0x54091f60
  403f36:	and    DWORD PTR [edi],edi
  403f38:	cmp    DWORD PTR [eax+0x75],0xeb0a3514
  403f3f:	rcr    dh,1
  403f41:	push   edi
  403f42:	ret    0xc92b
  403f45:	(bad)  
  403f46:	neg    BYTE PTR [esi-0x3d]
  403f49:	in     al,0x3a
  403f4b:	std    
  403f4c:	stc    
  403f4d:	pop    edx
  403f4e:	sar    BYTE PTR [ebp+eiz*8-0x578b2b29],1
  403f55:	or     BYTE PTR [edx-0xa577284],0xbd
  403f5c:	fdivr  st,st(7)
  403f5e:	ins    BYTE PTR es:[edi],dx
  403f5f:	pop    esp
  403f60:	mul    DWORD PTR [edi-0x527ee13]
  403f66:	push   eax
  403f67:	inc    esp
  403f68:	sbb    eax,0x75f523cd
  403f6d:	retf   
  403f6e:	gs jns 0x403f9d
  403f71:	adc    ah,BYTE PTR [eax]
  403f73:	cmp    DWORD PTR [ecx],ecx
  403f75:	out    0x24,al
  403f77:	push   ebp
  403f78:	sti    
  403f79:	cmp    BYTE PTR [esi+0x5cb204f5],al
  403f7f:	inc    ebx
  403f80:	retf   0x118f
  403f83:	add    BYTE PTR [ebx+0x16],ch
  403f86:	stc    
  403f87:	mov    ebx,0xfb0b2460
  403f8c:	sti    
  403f8d:	push   eax
  403f8e:	arpl   WORD PTR [ecx-0x76148ced],si
  403f94:	(bad)  
  403f95:	in     al,0x1c
  403f97:	daa    
  403f98:	push   cs
  403f99:	cmp    BYTE PTR [esi],bh
  403f9b:	mov    cl,BYTE PTR [esp+edi*4+0x6]
  403f9f:	jmp    0x6c47:0x8e6fe6c6
  403fa6:	aaa    
  403fa7:	mov    bh,0x15
  403fa9:	mov    ecx,0xd153ef7a
  403fae:	mov    al,bl
  403fb0:	xchg   esi,eax
  403fb1:	std    
  403fb2:	push   cs
  403fb3:	add    al,0xf1
  403fb5:	add    DWORD PTR [ecx],ecx
  403fb7:	pop    esp
  403fb8:	int3   
  403fb9:	jne    0x403fed
  403fbb:	pop    DWORD PTR [ebx+0x27790fb6]
  403fc1:	xlat   BYTE PTR ds:[ebx]
  403fc2:	outs   dx,DWORD PTR ds:[esi]
  403fc3:	rcr    DWORD PTR ds:0x76130356,0x2b
  403fca:	mov    eax,ds:0xa4e6657e
  403fcf:	or     al,0x36
  403fd1:	addr16 pushf 
  403fd3:	or     esp,DWORD PTR [ecx]
  403fd5:	push   cs
  403fd6:	push   esp
  403fd7:	stos   BYTE PTR es:[edi],al
  403fd8:	out    0xf5,al
  403fda:	and    ebp,DWORD PTR [ecx-0x4b1f730c]
  403fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fe1:	sbb    edx,ebp
  403fe3:	clc    
  403fe4:	mov    WORD PTR ds:0x19dc314a,es
  403fea:	ds pushf 
  403fec:	ds popa 
  403fee:	dec    ebp
  403fef:	pop    ss
  403ff0:	cmp    DWORD PTR [ecx+esi*1-0x60ffd189],edi
  403ff7:	out    0xa0,eax
  403ff9:	add    al,0x47
  403ffb:	xor    ebp,DWORD PTR [edi]
  403ffd:	retf   
  403ffe:	mov    ds:0xfbc051f8,al
  404003:	js     0x404043
  404005:	fwait
  404006:	xchg   edi,eax
  404007:	or     ebx,esi
  404009:	xchg   ebx,eax
  40400a:	scas   eax,DWORD PTR es:[edi]
  40400b:	(bad)  
  40400c:	sub    BYTE PTR [ebp-0x5],dl
  40400f:	lds    ecx,FWORD PTR [ebp-0x4]
  404012:	sub    ah,BYTE PTR [edi]
  404014:	cmp    edx,DWORD PTR [esi-0x8]
  404017:	sbb    al,0xe8
  404019:	repz leave 
  40401b:	je     0x403fde
  40401d:	and    DWORD PTR [ebp+0x2f],esp
  404020:	enter  0xd38e,0xbc
  404024:	mov    dh,BYTE PTR [edi+0x3e]
  404027:	pop    ss
  404028:	rol    DWORD PTR [ecx],0x6e
  40402b:	(bad)  
  40402c:	or     DWORD PTR [edi+ecx*2],edi
  40402f:	sbb    DWORD PTR [edx*2+0x38341e95],ebp
  404036:	and    DWORD PTR [ebp-0x13275428],esi
  40403c:	icebp  
  40403d:	mov    BYTE PTR [esi],bh
  40403f:	sub    dh,BYTE PTR [edx+ecx*8-0x3ed6602f]
  404046:	leave  
  404047:	xchg   ebx,eax
  404048:	fdiv   DWORD PTR [edi+0x252aeb5d]
  40404e:	cmp    eax,0xf977722e
  404053:	out    dx,eax
  404054:	mov    dl,0x81
  404056:	popf   
  404057:	sbb    eax,edx
  404059:	out    0x6c,eax
  40405b:	ficomp DWORD PTR [ebx+0x17]
  40405e:	aas    
  40405f:	lds    esi,FWORD PTR [ecx-0x68f3a77c]
  404065:	and    al,dl
  404067:	sbb    edi,DWORD PTR [esi+0x9]
  40406a:	int    0x16
  40406c:	icebp  
  40406d:	cmp    ah,BYTE PTR [ebx+0x62e7c1c6]
  404073:	gs adc eax,0x186b07a8
  404079:	and    eax,0x8630188d
  40407e:	mov    WORD PTR ds:0x9e7a8877,ds
  404084:	imul   eax,ebx,0x67
  404087:	out    dx,eax
  404088:	and    al,0x80
  40408a:	sahf   
  40408b:	xlat   BYTE PTR ds:[ebx]
  40408c:	dec    ecx
  40408d:	mov    edx,0x230d8d1e
  404092:	shl    dh,0x3a
  404095:	push   ebp
  404096:	fcomp  QWORD PTR [ecx+esi*8+0x2a8798ce]
  40409d:	dec    eax
  40409e:	lods   al,BYTE PTR ds:[esi]
  40409f:	mov    edx,0xd60008d9
  4040a4:	push   ds
  4040a5:	mov    dh,0xbb
  4040a7:	mov    WORD PTR [esp+edi*2-0x14],cs
  4040ab:	mov    WORD PTR [edi+0x5a],ds
  4040ae:	fwait
  4040af:	mov    cl,0x39
  4040b1:	es and eax,0xeb3d42ab
  4040b7:	push   ss
  4040b8:	outs   dx,BYTE PTR ds:[esi]
  4040b9:	jb     0x4040be
  4040bb:	add    bh,BYTE PTR [edi+0x1dc36627]
  4040c1:	ret    0xabc1
  4040c4:	dec    edx
  4040c5:	inc    esp
  4040c6:	xor    BYTE PTR [ebp-0x32],0x17
  4040ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040cb:	stos   BYTE PTR es:[edi],al
  4040cc:	jl     0x404050
  4040ce:	test   al,0x35
  4040d0:	push   ecx
  4040d1:	sub    edi,DWORD PTR [edx+0x4c]
  4040d4:	mov    bh,0x2d
  4040d6:	imul   edi,esi,0x620579a4
  4040dc:	xor    dl,BYTE PTR [ebx]
  4040de:	sub    BYTE PTR [edi],cl
  4040e0:	dec    edi
  4040e1:	xchg   edx,eax
  4040e2:	push   ecx
  4040e3:	mov    esi,DWORD PTR [edx+ebp*2]
  4040e6:	in     eax,0xe2
  4040e8:	cmp    edi,DWORD PTR [edx+0x0]
  4040eb:	sti    
  4040ec:	cmp    bl,BYTE PTR [ebx-0x69]
  4040ef:	sbb    edi,DWORD PTR [edi]
  4040f1:	mov    dl,0xd7
  4040f3:	loop   0x404165
  4040f5:	mov    WORD PTR [ebp+eiz*2+0x71d99d8d],ss
  4040fc:	fldcw  WORD PTR [edx]
  4040fe:	push   ecx
  4040ff:	jecxz  0x4040b0
  404101:	xlat   BYTE PTR ds:[ebx]
  404102:	imul   edi,DWORD PTR [ebp-0x7a71666c],0xeb37fe48
  40410c:	shl    BYTE PTR [edi-0x67],0xc9
  404110:	push   ecx
  404111:	adc    al,0x9a
  404113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404114:	not    eax
  404116:	jp     0x2375ed09
  40411c:	cmp    eax,0x2c9dc02c
  404121:	push   eax
  404122:	push   cs
  404123:	dec    edx
  404124:	mov    ebp,0xe6942201
  404129:	test   BYTE PTR [edi+0x6d],al
  40412c:	mov    ebx,0xf5090da0
  404131:	lahf   
  404132:	(bad)  [eax+esi*4+0x34eb7fb9]
  404139:	mov    edi,0xe7c2a6f
  40413e:	adc    ecx,DWORD PTR [ebp-0x6776ffd1]
  404144:	sbb    eax,0x6bd23d4e
  404149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40414a:	inc    edi
  40414b:	ja     0x404195
  40414d:	aam    0x7d
  40414f:	and    BYTE PTR [edi+0x75],dl
  404152:	pop    ecx
  404153:	dec    eax
  404154:	js     0x404177
  404156:	cld    
  404157:	mov    esp,0xfcfc4b17
  40415c:	adc    eax,0x51f55d96
  404161:	repz inc DWORD PTR [ecx-0x9]
  404165:	dec    edi
  404166:	dec    edx
  404167:	arpl   WORD PTR [eax+0x33],si
  40416a:	mov    ch,0x60
  40416c:	add    DWORD PTR [eax-0x66],edi
  40416f:	dec    ecx
  404170:	std    
  404171:	dec    esi
  404172:	rol    esp,cl
  404174:	fidivr WORD PTR [eax-0x2]
  404177:	mul    BYTE PTR [edx-0x70]
  40417a:	push   0xa2a6a1c4
  40417f:	pusha  
  404180:	adc    eax,0xa88ccd03
  404185:	and    edi,0x2b4e4c21
  40418b:	jne    0x404175
  40418d:	shl    DWORD PTR ds:0xa75e8697,0x39
  404194:	loop   0x404209
  404196:	in     al,0x2c
  404198:	fnstsw WORD PTR [ebp+0x2f54572f]
  40419e:	xchg   DWORD PTR [ecx+ebp*2],eax
  4041a1:	pop    DWORD PTR [ebx-0x16fa2f70]
  4041a7:	repnz pushf 
  4041a9:	and    bl,BYTE PTR [ebp-0x37]
  4041ac:	es aad 0x30
  4041af:	mov    ah,0xdb
  4041b1:	leave  
  4041b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041b3:	outs   dx,DWORD PTR ds:[esi]
  4041b4:	xor    edx,DWORD PTR [ebx+0x1050c63c]
  4041ba:	inc    eax
  4041bb:	jecxz  0x404201
  4041bd:	adc    BYTE PTR [ebp-0x1763b647],bh
  4041c3:	lods   eax,DWORD PTR ds:[esi]
  4041c4:	mov    edi,DWORD PTR [ebp+0x71]
  4041c7:	push   edi
  4041c8:	scas   eax,DWORD PTR es:[edi]
  4041c9:	cmp    BYTE PTR [edi+0x2dcbab54],bl
  4041cf:	xor    BYTE PTR [edi-0x78],bh
  4041d2:	jbe    0x4041f0
  4041d4:	xchg   edx,eax
  4041d5:	mov    cl,0xc6
  4041d7:	enter  0xad26,0x17
  4041db:	cmp    esp,edx
  4041dd:	inc    esi
  4041de:	push   ecx
  4041df:	outs   dx,BYTE PTR ds:[esi]
  4041e0:	ficomp WORD PTR [ecx+0x56af4de9]
  4041e6:	retf   
  4041e7:	cmc    
  4041e8:	dec    ecx
  4041e9:	inc    esp
  4041ea:	sbb    eax,0xf20f6b76
  4041ef:	stos   BYTE PTR es:[edi],al
  4041f0:	shl    BYTE PTR [edx],1
  4041f2:	dec    ebx
  4041f3:	loop   0x4041a6
  4041f5:	inc    esi
  4041f6:	xchg   DWORD PTR [eax-0x605e70e8],eax
  4041fc:	ja     0x404208
  4041fe:	jno    0x404246
  404200:	and    esi,0xe72dfe7f
  404206:	ja     0x40421f
  404208:	out    0x94,al
  40420a:	push   esi
  40420b:	test   DWORD PTR [esi-0x46a87da9],ecx
  404211:	shr    DWORD PTR [eax+0x2cd1062b],1
  404217:	sub    eax,0x187b824a
  40421c:	call   0x66360aba
  404221:	mov    eax,0xbee25102
  404226:	inc    ecx
  404227:	pop    eax
  404228:	pop    edi
  404229:	lds    ebp,FWORD PTR [edi-0x5c177c46]
  40422f:	push   ss
  404230:	fucomi st,st(4)
  404232:	push   esi
  404233:	ins    DWORD PTR es:[edi],dx
  404234:	sub    al,0x4f
  404236:	sbb    bh,bh
  404238:	into   
  404239:	mov    dh,0x93
  40423b:	je     0x4042b7
  40423d:	rcr    BYTE PTR ds:0x29dc6d48,cl
  404243:	cmp    dl,BYTE PTR [eax]
  404245:	mov    al,0x31
  404247:	ds xchg edi,ebx
  40424a:	adc    al,0xa5
  40424c:	cmp    BYTE PTR [edx-0x181d8af6],bh
  404252:	loope  0x40421a
  404254:	call   0xcb2f246f
  404259:	out    dx,eax
  40425a:	adc    al,bl
  40425c:	lahf   
  40425d:	dec    BYTE PTR [edx]
  40425f:	(bad)  
  404260:	shl    DWORD PTR [edx],cl
  404262:	test   ebp,ebp
  404264:	sub    DWORD PTR [edi-0x6c],edx
  404267:	mov    eax,ds:0x8a0befb2
  40426c:	leave  
  40426d:	xchg   ebp,eax
  40426e:	ja     0x40420f
  404270:	sbb    BYTE PTR [eax-0x70],0xe
  404274:	and    eax,0x2cd61106
  404279:	sbb    esp,DWORD PTR [eax-0x13821543]
  40427f:	(bad)
  404283:	test   eax,0x26c36899
  404288:	mov    ch,0x7e
  40428a:	ins    DWORD PTR es:[edi],dx
  40428b:	int3   
  40428c:	mov    edx,0xc952be0
  404291:	and    esp,DWORD PTR [edx-0x2098d24e]
  404297:	shl    esi,1
  404299:	sti    
  40429a:	mov    DWORD PTR [esi+0x101f1c89],ebx
  4042a0:	cmp    edi,DWORD PTR [ecx]
  4042a2:	mov    eax,0x986ac2b
  4042a7:	sbb    DWORD PTR [edi-0x15],edx
  4042aa:	enter  0xa471,0x26
  4042ae:	lds    esi,FWORD PTR [edx]
  4042b0:	fsubr  DWORD PTR [esi-0x53]
  4042b3:	and    al,0x28
  4042b5:	das    
  4042b6:	pusha  
  4042b7:	retf   
  4042b8:	xchg   ebx,eax
  4042b9:	pop    edx
  4042ba:	cmc    
  4042bb:	cmc    
  4042bc:	mov    dl,0x93
  4042be:	pop    esp
  4042bf:	loopne 0x4042be
  4042c1:	inc    edx
  4042c2:	sbb    edx,DWORD PTR [esi]
  4042c4:	fisub  DWORD PTR [ecx+edi*1+0x3]
  4042c8:	dec    edi
  4042c9:	push   ecx
  4042ca:	cwde   
  4042cb:	fsubr  st,st(0)
  4042cd:	adc    al,0x35
  4042cf:	jge    0x404261
  4042d1:	aad    0xee
  4042d3:	adc    al,0x63
  4042d5:	fabs   
  4042d7:	iret   
  4042d8:	pop    ds
  4042d9:	fild   QWORD PTR [ebp-0x2feb70e2]
  4042df:	call   0x78e0:0xfad3eeed
  4042e6:	leave  
  4042e7:	mov    bh,0xaa
  4042e9:	repz sahf 
  4042eb:	push   0xd4c4e269
  4042f0:	or     edx,DWORD PTR [esi-0x74]
  4042f3:	and    esp,DWORD PTR [eax-0x1756a8fb]
  4042f9:	into   
  4042fa:	(bad)  
  4042fc:	sub    DWORD PTR [ecx-0x26],0x5c
  404300:	mov    dl,0x12
  404302:	repz scas al,BYTE PTR es:[edi]
  404304:	popf   
  404305:	jmp    0x38e7b675
  40430a:	ins    BYTE PTR es:[edi],dx
  40430b:	sub    ah,bl
  40430d:	xor    eax,0xde8e7abc
  404312:	add    eax,0x68643e5c
  404317:	hlt    
  404318:	pop    esp
  404319:	rcr    ebx,cl
  40431b:	mov    cl,0x42
  40431d:	sbb    eax,0x95056b08
  404322:	fcomp  DWORD PTR [eax+0x16342387]
  404328:	or     ch,cl
  40432a:	xor    cl,BYTE PTR [edx-0x63]
  40432d:	(bad)  
  40432e:	mov    dh,0x75
  404330:	xlat   BYTE PTR ds:[ebx]
  404331:	sbb    ch,BYTE PTR [esp+eiz*2+0x77]
  404335:	mov    DWORD PTR [ecx+0x4],ebp
  404338:	inc    edx
  404339:	icebp  
  40433a:	inc    esp
  40433b:	sub    BYTE PTR [ebp+0x6e],dh
  40433e:	retf   0xbd86
  404341:	or     BYTE PTR [edi+0x246eee0f],cl
  404347:	add    DWORD PTR [eax+0x36761a86],esp
  40434d:	fcmovnbe st,st(7)
  40434f:	sti    
  404350:	mov    cl,0x17
  404352:	xchg   ebp,eax
  404353:	dec    eax
  404354:	add    DWORD PTR [ecx],ecx
  404356:	mov    esp,0x90bf5249
  40435b:	cmp    bh,BYTE PTR [ebx+0x2c]
  40435e:	adc    ecx,DWORD PTR [ebx+0x3db793e9]
  404364:	dec    eax
  404365:	clc    
  404366:	fs cmp eax,ebx
  404369:	sub    cl,BYTE PTR ds:0x222ee31d
  40436f:	sti    
  404370:	and    ah,dh
  404372:	call   0xd5787b2f
  404377:	add    esp,DWORD PTR [ebp+eiz*2+0x26]
  40437b:	adc    DWORD PTR [eax+0x1b],0x22017b89
  404382:	cmp    DWORD PTR [eax-0x69236089],eax
  404388:	(bad)  [ecx+0x4f75963b]
  40438e:	sbb    al,0x51
  404390:	in     eax,0xfa
  404392:	arpl   WORD PTR [ebp-0x14],cx
  404395:	ins    BYTE PTR es:[edi],dx
  404396:	lock pop ebx
  404398:	mov    cl,0x82
  40439a:	pop    eax
  40439b:	and    eax,0x26bdecf3
  4043a0:	out    0xa1,al
  4043a2:	(bad)  
  4043a3:	mov    edx,0x9259661c
  4043a8:	push   es
  4043a9:	xor    esp,DWORD PTR ds:0x5dd02cda
  4043af:	sbb    BYTE PTR [edx+0x5e4484e2],bl
  4043b5:	pusha  
  4043b6:	lods   eax,DWORD PTR ds:[esi]
  4043b7:	xchg   ecx,eax
  4043b8:	push   edx
  4043b9:	adc    BYTE PTR [edx],cl
  4043bb:	fucomp st(5)
  4043bd:	pop    esi
  4043be:	fild   DWORD PTR [eax]
  4043c0:	ins    BYTE PTR es:[edi],dx
  4043c1:	push   edi
  4043c2:	fidivr DWORD PTR [edx]
  4043c4:	in     eax,0x5a
  4043c6:	test   eax,0x282a40c0
  4043cb:	mov    edi,0x97374b8f
  4043d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043d1:	add    DWORD PTR [esi+0x34],ebp
  4043d4:	stc    
  4043d5:	test   eax,0x7fb62ba8
  4043da:	in     al,0xe9
  4043dc:	pop    ds
  4043dd:	sub    al,0x31
  4043df:	ret    
  4043e0:	aad    0xdf
  4043e2:	out    0x5e,al
  4043e4:	iret   
  4043e5:	push   esi
  4043e6:	push   esp
  4043e7:	jle    0x404460
  4043e9:	fbstp  TBYTE PTR [ebx+edi*4]
  4043ec:	cli    
  4043ed:	xchg   esp,eax
  4043ee:	pop    eax
  4043ef:	clc    
  4043f0:	les    ebx,FWORD PTR [edi]
  4043f2:	in     eax,0x19
  4043f4:	pop    ebp
  4043f5:	cs stc 
  4043f7:	ja     0x4043fa
  4043f9:	ins    DWORD PTR es:[edi],dx
  4043fa:	int    0x7c
  4043fc:	add    eax,0xa86d9b15
  404401:	xor    eax,0x57ce0232
  404406:	pcmpeqb mm2,QWORD PTR [edx-0xb]
  40440a:	xor    eax,0xa8d47c4b
  40440f:	mov    ds:0x3293e6aa,eax
  404414:	cmp    BYTE PTR [edx],bh
  404416:	call   0x5563e402
  40441b:	and    BYTE PTR [ebx],dl
  40441d:	inc    esp
  40441e:	mov    bh,0x7
  404420:	das    
  404421:	test   DWORD PTR [eax+0x7e],ebx
  404424:	lods   eax,DWORD PTR ds:[esi]
  404425:	pop    esp
  404426:	inc    esi
  404427:	mov    edi,0x975f4837
  40442c:	inc    ebp
  40442d:	mov    BYTE PTR [edx],cl
  40442f:	jb     0x4043ca
  404431:	out    0x8,al
  404433:	inc    ebp
  404434:	sbb    eax,0x6b4b4cc7
  404439:	gs push ecx
  40443b:	cmc    
  40443c:	lods   eax,DWORD PTR ds:[esi]
  40443d:	inc    ebp
  40443e:	adc    edx,DWORD PTR [ecx+0x33]
  404441:	lahf   
  404442:	dec    esi
  404443:	fist   WORD PTR [ebp-0x1260c8e9]
  404449:	fs dec ecx
  40444b:	or     BYTE PTR [ebp+0x28],ch
  40444e:	call   0x94e5314e
  404453:	push   ebp
  404454:	pop    ebx
  404455:	mov    dl,dl
  404457:	icebp  
  404458:	sub    DWORD PTR [esi-0x66],edx
  40445b:	stc    
  40445c:	xchg   edi,eax
  40445d:	gs pop edx
  40445f:	scas   al,BYTE PTR es:[edi]
  404460:	fsubrp st(5),st
  404462:	fcmovbe st,st(1)
  404464:	imul   esi,DWORD PTR [ebx+ecx*2],0x7103b583
  40446b:	mov    ch,0xfa
  40446d:	inc    ebp
  40446e:	sub    edx,DWORD PTR [ebp+0x44]
  404471:	mov    ds:0xdc99acec,eax
  404476:	inc    edi
  404477:	add    bl,al
  404479:	jb     0x404404
  40447b:	sar    BYTE PTR [edi-0x686e7b8c],0x98
  404482:	fld    QWORD PTR [edx]
  404484:	jmp    0x98e0a64a
  404489:	imul   ebx,DWORD PTR [ebp+0x23],0x5c
  40448d:	loop   0x404466
  40448f:	ss pop esi
  404491:	arpl   bx,cx
  404493:	pop    esp
  404494:	inc    ecx
  404495:	into   
  404496:	popa   
  404497:	sub    al,ah
  404499:	cs dec edi
  40449b:	jnp    0x4044d1
  40449d:	imul   eax,DWORD PTR [ebx-0x4d],0x9ef925f
  4044a4:	mov    esi,0x2fc945b4
  4044a9:	push   ds
  4044aa:	sbb    edi,DWORD PTR [esi]
  4044ac:	xor    bh,BYTE PTR [ebx-0x70]
  4044af:	add    bh,ah
  4044b1:	loop   0x404492
  4044b3:	cmp    al,BYTE PTR ds:0x36a55df4
  4044b9:	stos   BYTE PTR es:[edi],al
  4044ba:	mov    ss,WORD PTR [ebp+esi*2-0x29a121d]
  4044c1:	mov    cl,0x4c
  4044c3:	adc    eax,0xcce417ea
  4044c8:	mov    ebp,0x38fc9610
  4044cd:	push   cs
  4044ce:	push   esp
  4044cf:	loop   0x4044e0
  4044d1:	out    0x17,al
  4044d3:	adc    esi,DWORD PTR [ebp-0x3]
  4044d6:	fisttp WORD PTR [ecx+0x2]
  4044d9:	mov    ds,WORD PTR [ecx]
  4044db:	adc    BYTE PTR [esi-0x6423ba3c],cl
  4044e1:	push   ebp
  4044e2:	and    eax,0x3a80f2b2
  4044e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e8:	xor    DWORD PTR [edx+0x68ac4eb9],edx
  4044ee:	inc    ecx
  4044ef:	xchg   BYTE PTR [ebx],ch
  4044f1:	dec    ebx
  4044f2:	push   edi
  4044f3:	sbb    al,0xac
  4044f5:	sub    ecx,DWORD PTR [ecx+0x75]
  4044f8:	sbb    eax,0x715ca649
  4044fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044fe:	aaa    
  4044ff:	pop    edi
  404500:	rcr    DWORD PTR [esi+ecx*4-0x770f35a],cl
  404507:	jnp    0x404497
  404509:	test   esp,esp
  40450b:	sub    eax,0x7cee39df
  404510:	xchg   edx,eax
  404511:	sbb    ah,ch
  404513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404514:	pop    edi
  404515:	inc    esi
  404516:	aaa    
  404517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404518:	or     eax,0xd924c9fe
  40451d:	jnp    0x404596
  40451f:	lahf   
  404520:	enter  0x8626,0xfd
  404524:	push   ss
  404525:	pop    edx
  404526:	inc    esi
  404527:	mov    ebx,0x81eeb9de
  40452c:	jae    0x404519
  40452e:	dec    ecx
  40452f:	sbb    eax,DWORD PTR [eax]
  404531:	push   edi
  404532:	fdivrp st(3),st
  404534:	in     al,dx
  404535:	dec    esi
  404536:	sub    DWORD PTR [eax+0x38],0x61
  40453a:	bound  ebx,QWORD PTR [edx]
  40453c:	aas    
  40453d:	test   ebx,edx
  40453f:	jae    0x4044e5
  404541:	lea    eax,[eax]
  404543:	imul   ebp,DWORD PTR [esi-0x71497630],0xf606cccd
  40454d:	dec    BYTE PTR [ebp+esi*2+0x7119c904]
  404554:	or     BYTE PTR [eax+0x57],0x76
  404558:	push   edx
  404559:	loope  0x4044e0
  40455b:	inc    edx
  40455c:	adc    al,0xa9
  40455e:	je     0x4045a5
  404560:	sub    BYTE PTR [ecx],cl
  404562:	loop   0x404524
  404564:	cmc    
  404565:	xor    BYTE PTR ds:0x6232c36a,ch
  40456b:	push   edx
  40456c:	cmp    al,0xa5
  40456e:	push   ds
  40456f:	imul   ebx,DWORD PTR [esi-0x4b698a32],0x3b
  404576:	scas   eax,DWORD PTR es:[edi]
  404577:	mov    bh,0x20
  404579:	push   ss
  40457a:	ds sub eax,0xd98aa3d3
  404580:	gs mov ecx,0x34b3782
  404586:	test   ebp,ebp
  404588:	jmp    0xcf06:0x11f42fa7
  40458f:	nop
  404590:	push   edi
  404591:	call   0x6547882b
  404596:	mov    edi,0x689ba964
  40459b:	xor    eax,0x5a239bf3
  4045a0:	or     BYTE PTR [eax],ch
  4045a2:	mov    esi,0x42c68167
  4045a7:	ror    DWORD PTR [eax+0x117ca550],cl
  4045ad:	xor    DWORD PTR [edi+0x6ea1418e],0xfffffffb
  4045b4:	imul   eax,ebp,0x1cf683bb
  4045ba:	ret    
  4045bb:	cmp    eax,0x59777994
  4045c0:	dec    ebx
  4045c1:	sbb    DWORD PTR [ebp-0x73d52eb1],edi
  4045c7:	cli    
  4045c8:	push   es
  4045c9:	jge    0x404577
  4045cb:	mov    bh,0x10
  4045cd:	push   es
  4045ce:	pop    edx
  4045cf:	in     eax,dx
  4045d0:	pop    esp
  4045d1:	shl    DWORD PTR [edi+esi*2+0x8],0x3c
  4045d6:	idiv   BYTE PTR [ebp-0x44]
  4045d9:	test   DWORD PTR [esp+esi*4-0x4e624145],eax
  4045e0:	and    BYTE PTR ds:0x6931ce87,0x10
  4045e7:	inc    eax
  4045e8:	out    0xf7,al
  4045ea:	out    0x22,eax
  4045ec:	rcr    ebp,1
  4045ee:	cmp    BYTE PTR [edx-0xaf9b15],ch
  4045f4:	jo     0x40466f
  4045f6:	int3   
  4045f7:	out    0x8,eax
  4045f9:	imul   ebx,DWORD PTR [esi],0x35
  4045fc:	add    al,ah
  4045fe:	mov    al,0xf6
  404600:	pop    ecx
  404601:	sub    eax,0xaa63f55d
  404606:	push   eax
  404607:	inc    edi
  404608:	(bad)  
  404609:	sti    
  40460a:	sub    DWORD PTR [esi+0x5d1c45b3],esp
  404610:	loopne 0x4045a8
  404612:	dec    eax
  404613:	pop    edx
  404614:	stos   DWORD PTR es:[edi],eax
  404615:	sbb    ebp,DWORD PTR [ebx+0x21758a06]
  40461b:	shr    BYTE PTR [edi-0x144cd1f5],cl
  404621:	push   ecx
  404622:	jne    0x40467e
  404624:	xlat   BYTE PTR ds:[ebx]
  404625:	mov    ch,0x67
  404627:	cmp    eax,0x71d0c801
  40462c:	pop    esp
  40462d:	test   al,0x54
  40462f:	jae    0x40462b
  404631:	xchg   edi,eax
  404632:	pop    ebx
  404633:	mov    ecx,0xde67acc6
  404638:	inc    edx
  404639:	mov    bl,0x88
  40463b:	pop    es
  40463c:	ret    
  40463d:	cmp    ch,ah
  40463f:	sahf   
  404640:	xchg   esi,eax
  404641:	xlat   BYTE PTR ds:[ebx]
  404642:	xchg   edi,eax
  404643:	or     BYTE PTR [ecx-0x10],0x75
  404647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404648:	add    al,0x20
  40464a:	cli    
  40464b:	ss inc ebx
  40464d:	bound  edx,QWORD PTR [ecx-0x6e]
  404650:	inc    edi
  404651:	call   0x154e:0x5567cefb
  404658:	add    ebx,DWORD PTR [ecx+0x7a18bda9]
  40465e:	lods   eax,DWORD PTR ds:[esi]
  40465f:	mov    eax,ds:0x53f41e2c
  404664:	fwait
  404665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404666:	rol    DWORD PTR [ebx-0xec85ae3],1
  40466c:	pop    ebx
  40466d:	jo     0x40460e
  40466f:	or     dh,0x9d
  404672:	add    esp,DWORD PTR [ecx]
  404674:	dec    esi
  404675:	cmp    BYTE PTR [edi-0x45],0x17
  404679:	in     eax,0x76
  40467b:	mul    edi
  40467d:	inc    esp
  40467e:	sub    DWORD PTR [eax+0xf],ebp
  404681:	inc    esp
  404682:	imul   edx,DWORD PTR [esi],0xffffffe1
  404685:	sahf   
  404686:	lea    eax,[esi-0xc]
  404689:	and    al,0x46
  40468b:	jle    0x4046ad
  40468d:	fidiv  DWORD PTR [esp+esi*2]
  404690:	adc    DWORD PTR [ecx-0x69c17f94],ecx
  404696:	pop    ds
  404697:	and    cl,al
  404699:	cs in  al,0x5d
  40469c:	jb     0x4046b9
  40469e:	inc    eax
  40469f:	ret    0x6ccc
  4046a2:	test   DWORD PTR [edi+0x1f],esi
  4046a5:	jp     0x404686
  4046a7:	cwde   
  4046a8:	mov    eax,0x92b3e6a9
  4046ad:	or     dh,BYTE PTR [ebx]
  4046af:	loopne 0x404687
  4046b1:	or     eax,0xc742fcfc
  4046b6:	xacquire xchg BYTE PTR [ecx+0x37840a08],bl
  4046bd:	jg     0x4046a2
  4046bf:	jno    0x40471e
  4046c1:	add    al,0x50
  4046c3:	std    
  4046c4:	stos   BYTE PTR es:[edi],al
  4046c5:	(bad)  
  4046c6:	or     bl,BYTE PTR [ebp+0x69]
  4046c9:	adc    dl,cl
  4046cb:	push   0xffffffc0
  4046cd:	push   ebp
  4046ce:	je     0x404685
  4046d0:	jnp    0x404703
  4046d2:	push   es
  4046d3:	dec    esp
  4046d4:	rol    ah,cl
  4046d6:	imul   eax,DWORD PTR [ecx],0x2f
  4046d9:	outs   dx,DWORD PTR ds:[esi]
  4046da:	sbb    BYTE PTR [ebx-0x9],bl
  4046dd:	fxch   st(3)
  4046df:	inc    ebp
  4046e0:	popa   
  4046e1:	push   ecx
  4046e2:	mov    eax,ds:0x29eb693d
  4046e7:	and    al,0x9f
  4046e9:	jmp    0xd89c:0x67a30033
  4046f0:	jb     0x4046ab
  4046f2:	loopne 0x404734
  4046f4:	jne    0x404773
  4046f6:	xchg   ecx,eax
  4046f7:	sbb    eax,0x3cc880a4
  4046fc:	pop    esp
  4046fd:	fsub   st(5),st
  4046ff:	rcr    DWORD PTR [eax+0x4f],1
  404702:	mov    al,ds:0x1d35786c
  404707:	nop
  404708:	xor    DWORD PTR [ebx+ebx*1],esp
  40470b:	xchg   ecx,eax
  40470c:	rcr    cl,0xa7
  40470f:	mov    ds:0x2ee5bc22,al
  404714:	or     al,0x8e
  404716:	(bad)  
  404717:	mov    cl,0xd2
  404719:	nop
  40471a:	jae    0x4046f6
  40471c:	cli    
  40471d:	fwait
  40471e:	pop    ebx
  40471f:	push   ecx
  404720:	xlat   BYTE PTR ds:[ebx]
  404721:	in     eax,dx
  404722:	jo     0x404763
  404724:	pop    edx
  404725:	jno    0x4046ad
  404727:	inc    ebp
  404728:	fcomp  DWORD PTR [ecx]
  40472a:	and    ecx,DWORD PTR [ebp-0x23]
  40472d:	cld    
  40472e:	xchg   ecx,eax
  40472f:	call   0xea40:0xc91d5cd0
  404736:	xchg   edx,eax
  404737:	sub    al,0x36
  404739:	push   ebx
  40473a:	and    edx,DWORD PTR [ecx-0x30]
  40473d:	fsub   DWORD PTR [ecx+0xf181e7e]
  404743:	into   
  404744:	popa   
  404745:	mov    eax,ds:0xf79bcb5f
  40474a:	repnz push ds
  40474c:	(bad)  
  40474d:	fldcw  WORD PTR [esi]
  40474f:	xchg   ebx,eax
  404750:	add    ecx,DWORD PTR [edi-0x40b1e957]
  404756:	fldcw  WORD PTR cs:[ecx-0x799855c9]
  40475d:	aaa    
  40475e:	cmp    ecx,edx
  404760:	fmul   st,st(0)
  404762:	inc    ecx
  404763:	mov    edx,0x16a51396
  404768:	push   cs
  404769:	mov    ebp,0x5120fd31
  40476e:	xchg   esp,eax
  40476f:	mov    ds:0xe3c01604,al
  404774:	jmp    0x4047d3
  404776:	pop    ecx
  404777:	js     0x404797
  404779:	sar    DWORD PTR [ecx+ebx*4+0x2f],1
  40477d:	xor    DWORD PTR [esi],esp
  40477f:	cmp    DWORD PTR [edx],0x532090c3
  404785:	sub    DWORD PTR [edi-0x25],esi
  404788:	dec    edi
  404789:	xchg   ebp,eax
  40478a:	jae    0x4047ed
  40478c:	dec    ecx
  40478d:	jge    0x404713
  40478f:	and    esp,DWORD PTR [esi+0x35]
  404792:	repz cmp al,0xfd
  404795:	(bad)  
  404796:	adc    DWORD PTR [esi-0x51],ecx
  404799:	pop    ebx
  40479a:	xor    esi,DWORD PTR [ecx]
  40479c:	les    eax,FWORD PTR [edi-0x2b8a2fa0]
  4047a2:	jmp    0x864246bc
  4047a7:	adc    ebx,DWORD PTR ds:0x66431269
  4047ad:	out    dx,eax
  4047ae:	xchg   BYTE PTR [esi+0x75],ah
  4047b1:	mov    ah,0x11
  4047b3:	inc    DWORD PTR ds:0x941c834e
  4047b9:	jp     0x404769
  4047bb:	bound  edx,QWORD PTR [ebx-0x7e8b664d]
  4047c1:	hlt    
  4047c2:	repz or eax,0xcd5cb0f1
  4047c8:	nop
  4047c9:	mov    WORD PTR [esi],?
  4047cb:	add    eax,0xcb3195fb
  4047d0:	call   0xa4b9bdf2
  4047d5:	(bad)  
  4047d6:	dec    esi
  4047d7:	jmp    0xf29a:0x41c1e82e
  4047de:	mov    bl,0xd5
  4047e0:	ss in  al,0x75
  4047e3:	ss iret 
  4047e5:	pop    esp
  4047e6:	inc    edx
  4047e7:	pop    ecx
  4047e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047e9:	mov    dh,0x33
  4047eb:	pop    edx
  4047ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ed:	fwait
  4047ee:	popf   
  4047ef:	outs   dx,BYTE PTR ds:[esi]
  4047f0:	std    
  4047f1:	mov    bl,0x28
  4047f3:	outs   dx,BYTE PTR ds:[esi]
  4047f4:	jg     0x4047f9
  4047f6:	mov    bh,0xb8
  4047f8:	loope  0x40484a
  4047fa:	cmp    esi,eax
  4047fc:	xchg   ebx,eax
  4047fd:	test   ebp,esi
  4047ff:	pop    es
  404800:	mov    cl,0xa3
  404802:	mov    WORD PTR [edx+0xa],fs
  404805:	push   edi
  404806:	aad    0x46
  404808:	daa    
  404809:	sub    eax,DWORD PTR [edx]
  40480b:	xchg   esi,eax
  40480c:	dec    ebx
  40480d:	inc    esi
  40480e:	mov    cl,0x1d
  404810:	dec    edx
  404811:	mov    ch,0x97
  404813:	cdq    
  404814:	jmp    0xbf76a966
  404819:	(bad)  
  40481a:	sub    eax,0xd12f1093
  40481f:	mov    al,ds:0x1308ad75
  404824:	inc    esi
  404825:	ins    DWORD PTR es:[edi],dx
  404826:	shl    BYTE PTR [ebp-0x47cc3785],0x9e
  40482d:	inc    esi
  40482e:	sar    BYTE PTR [edx+0x71],1
  404831:	fscale 
  404833:	lock lods eax,DWORD PTR ds:[esi]
  404835:	aad    0xe6
  404837:	sub    BYTE PTR [ecx-0x6d75051b],bh
  40483d:	cmp    edi,ebx
  40483f:	into   
  404840:	mov    edi,0xa10dc868
  404845:	fs and eax,0x442ef7f9
  40484b:	xchg   edx,eax
  40484c:	dec    ebp
  40484d:	add    DWORD PTR [ebx],0xdb352d47
  404853:	jno    0x40489c
  404855:	xchg   edi,eax
  404856:	(bad)  
  404857:	push   ebp
  404858:	mov    al,ds:0x4fe1e996
  40485d:	(bad)  
  40485e:	clc    
  40485f:	jo     0x4048bc
  404861:	and    DWORD PTR ds:0xe9c0df1a,eax
  404867:	sub    edi,DWORD PTR [ebx+0x170c3355]
  40486d:	xor    ah,BYTE PTR [ecx+0x580b9648]
  404873:	add    ebx,DWORD PTR [edx+0x510a977f]
  404879:	xor    eax,0xea1f4da4
  40487e:	jne    0x40488b
  404880:	pop    ebp
  404881:	cmc    
  404882:	fnstcw WORD PTR [ebx]
  404884:	cdq    
  404885:	ret    0xef98
  404888:	push   edi
  404889:	or     al,0xaa
  40488c:	dec    BYTE PTR [edx-0x68]
  40488f:	sahf   
  404890:	cmp    BYTE PTR [esp+eax*2],bh
  404893:	popf   
  404894:	sbb    BYTE PTR [ebx+0x31182246],bl
  40489a:	popf   
  40489b:	mov    eax,0x918fd19d
  4048a0:	xor    al,0xd2
  4048a2:	mov    esi,0xfb281036
  4048a7:	aaa    
  4048a8:	mov    ch,0x29
  4048aa:	(bad)  
  4048ac:	mov    edx,0xc14fbb2f
  4048b1:	pop    ecx
  4048b2:	mov    cl,0xf6
  4048b4:	fnstcw WORD PTR [ecx]
  4048b6:	stc    
  4048b7:	adc    ebx,eax
  4048b9:	sub    al,0x30
  4048bb:	jo     0x40491f
  4048bd:	imul   edx,eax,0x79
  4048c0:	pop    esi
  4048c1:	call   0x3a979272
  4048c6:	sbb    BYTE PTR [edx],bh
  4048c8:	and    al,BYTE PTR [ebp-0x790b842f]
  4048ce:	enter  0x410f,0x5f
  4048d2:	sub    BYTE PTR [edi-0x35],ah
  4048d5:	mov    ecx,?
  4048d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048d8:	imul   eax,DWORD PTR [edx+esi*1-0x656b5f63],0x695530d7
  4048e3:	outs   dx,DWORD PTR ds:[esi]
  4048e4:	inc    edx
  4048e5:	fdivrp st(5),st
  4048e7:	sbb    edx,esp
  4048e9:	cmp    BYTE PTR [edi],dh
  4048eb:	pop    edx
  4048ec:	mov    ds:0xd5aa0dd9,eax
  4048f1:	push   ebp
  4048f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048f3:	xor    al,0x39
  4048f5:	mov    ah,0x49
  4048f7:	push   ebp
  4048f8:	pop    esp
  4048f9:	push   0x16
  4048fb:	mov    ecx,0xefc2dc4a
  404900:	mov    ss,esi
  404902:	int    0xc1
  404904:	jmp    FWORD PTR [ecx+eax*2-0x3bcc1659]
  40490b:	lds    esp,FWORD PTR ds:0x91417a29
  404911:	enter  0xb317,0x47
  404915:	or     dl,BYTE PTR [esi]
  404917:	jge    0x4048cc
  404919:	test   BYTE PTR [edx],bh
  40491b:	les    edx,FWORD PTR [ebx-0x3482a721]
  404921:	dec    ebp
  404922:	ja     0x40490c
  404924:	ins    DWORD PTR es:[edi],dx
  404925:	mov    dl,0x3f
  404927:	frstor [ecx+0x76]
  40492a:	cwde   
  40492b:	es dec ecx
  40492d:	es jmp 0x3ed0:0x34c568
  404935:	mov    dh,0x73
  404937:	pushf  
  404938:	jle    0x4048fc
  40493a:	out    dx,al
  40493b:	xchg   edi,eax
  40493c:	fild   QWORD PTR [edx]
  40493e:	call   0xd1d7:0x2a8b5b5a
  404945:	rcr    BYTE PTR [eax-0xdf83345],0xc6
  40494c:	or     al,0x47
  40494e:	mov    ch,BYTE PTR [esi+0x46cdfb89]
  404954:	jmp    0x38eb:0xbb44172d
  40495b:	sub    DWORD PTR [esi+0x70],ebx
  40495e:	or     DWORD PTR [edi+0x56],edi
  404961:	in     eax,0xc1
  404963:	adc    eax,0x67f7d4af
  404968:	dec    ecx
  404969:	out    0x72,eax
  40496b:	test   DWORD PTR [ecx],esi
  40496d:	shl    esi,cl
  40496f:	daa    
  404970:	jecxz  0x404964
  404972:	pop    esi
  404973:	push   edx
  404974:	shl    BYTE PTR [edi+0x6b3e8582],0xfe
  40497b:	(bad)  
  40497c:	fisub  WORD PTR [ebx-0x12]
  40497f:	repnz push edx
  404981:	mov    edi,0x9e419813
  404986:	int3   
  404987:	hlt    
  404988:	add    DWORD PTR [esi+0x4c110304],esp
  40498e:	fst    QWORD PTR [ebp+0x66]
  404991:	in     eax,dx
  404992:	into   
  404993:	dec    edi
  404994:	mov    ebp,0x2bfc360
  404999:	mov    ds:0xc0585fad,eax
  40499e:	iret   
  40499f:	aas    
  4049a0:	add    DWORD PTR [esi+ebp*1-0x5f],0x797273e9
  4049a8:	mov    ebp,gs
  4049aa:	sub    eax,0x4224573d
  4049af:	push   edi
  4049b0:	pop    edx
  4049b1:	ret    0xaf15
  4049b4:	jge    0x40496b
  4049b6:	inc    edx
  4049b7:	in     al,dx
  4049b8:	push   ebp
  4049b9:	leave  
  4049ba:	call   0x8b8e:0x3419b621
  4049c1:	or     esp,esp
  4049c3:	(bad)  
  4049c4:	sbb    eax,0x73342a76
  4049c9:	call   0x6bbd:0x9ce27137
  4049d0:	sbb    eax,0x5ed34f31
  4049d5:	sub    eax,DWORD PTR [esi+0x6e]
  4049d8:	daa    
  4049d9:	mov    ds:0xe6ba43df,eax
  4049de:	out    dx,eax
  4049df:	inc    ecx
  4049e0:	rcl    DWORD PTR [ebp+0x6ef31c5b],cl
  4049e6:	sub    edi,DWORD PTR [edi-0x2c]
  4049e9:	ret    0x98d8
  4049ec:	mov    esp,0x73f89992
  4049f1:	nop
  4049f2:	sub    DWORD PTR [ebx-0x13],edi
  4049f5:	iret   
  4049f6:	ja     0x404a48
  4049f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f9:	mov    edx,0xacde1a6e
  4049fe:	fidiv  WORD PTR [ebp+ecx*2+0x33]
  404a02:	enter  0x9894,0x35
  404a06:	or     al,0xc6
  404a08:	cwde   
  404a09:	xlat   BYTE PTR ds:[ebx]
  404a0a:	add    edi,DWORD PTR [edx+ebx*1-0x1c5d8645]
  404a11:	inc    ebx
  404a12:	push   cs
  404a13:	add    DWORD PTR [eax],0xffffffb5
  404a16:	dec    eax
  404a17:	cmp    al,0x14
  404a19:	xchg   edi,eax
  404a1a:	outs   dx,DWORD PTR ds:[esi]
  404a1b:	mov    ds:0xf0d442a4,eax
  404a21:	outs   dx,DWORD PTR ds:[esi]
  404a22:	vpslld xmm7,xmm3,XMMWORD PTR [eax-0x4a]
  404a27:	rol    BYTE PTR [ecx-0x18],0x73
  404a2b:	or     al,0x2
  404a2d:	lahf   
  404a2e:	rol    DWORD PTR [esi-0x66],0x19
  404a32:	jmp    0x404a49
  404a34:	inc    eax
  404a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a36:	out    0x8f,al
  404a38:	mov    bh,0x94
  404a3a:	push   ecx
  404a3b:	xchg   DWORD PTR [ebx+0x37],esp
  404a3e:	and    DWORD PTR [ecx-0x34],ecx
  404a41:	push   0xb9527dad
  404a46:	ins    DWORD PTR es:[edi],dx
  404a47:	add    cl,BYTE PTR [ebx-0x61]
  404a4a:	les    edx,FWORD PTR [edx+0x1c]
  404a4d:	mov    ah,0xce
  404a4f:	neg    BYTE PTR [ebp+0x5f]
  404a52:	cdq    
  404a53:	mov    ah,0x93
  404a55:	jb     0x4049ee
  404a57:	cmp    al,0xe2
  404a59:	aas    
  404a5a:	push   ss
  404a5b:	and    DWORD PTR [ecx-0x5e],0xffffffb8
  404a5f:	push   cs
  404a60:	pop    esp
  404a61:	mov    bh,0xc8
  404a63:	jecxz  0x404a7a
  404a65:	in     al,dx
  404a66:	jne    0x404a14
  404a68:	pop    es
  404a69:	out    dx,al
  404a6a:	mov    dl,0xf1
  404a6c:	sub    al,0xf5
  404a6e:	(bad)
  404a71:	sbb    BYTE PTR [eax],0xe5
  404a74:	inc    esp
  404a75:	jmp    0xc16c89a2
  404a7a:	test   BYTE PTR [ebx+0x77],bh
  404a7d:	xchg   edx,eax
  404a7e:	add    DWORD PTR [ecx-0x330a5ebb],ecx
  404a84:	daa    
  404a85:	cmp    dh,dl
  404a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a88:	dec    eax
  404a89:	push   0x54
  404a8b:	stc    
  404a8c:	add    DWORD PTR [esi],eax
  404a8e:	and    eax,edi
  404a90:	call   0xdd1c:0x74e7950c
  404a97:	arpl   WORD PTR [esi-0x9],cx
  404a9a:	(bad)  
  404a9b:	(bad)  
  404a9c:	and    ebx,DWORD PTR [edi+0x67]
  404a9f:	pop    ebp
  404aa0:	ins    BYTE PTR es:[edi],dx
  404aa1:	pop    eax
  404aa2:	push   esp
  404aa3:	dec    esp
  404aa4:	lock pop esi
  404aa6:	jbe    0x404a6a
  404aa8:	jmp    0xb9d2:0xb1faf7c9
  404aaf:	shr    esi,cl
  404ab1:	xor    ch,BYTE PTR [ebp-0x5b]
  404ab4:	in     al,0x8d
  404ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab7:	rol    ebp,cl
  404ab9:	stos   BYTE PTR es:[edi],al
  404aba:	iret   
  404abb:	mov    WORD PTR [esi-0x39],fs
  404abe:	in     eax,dx
  404abf:	cmp    ecx,DWORD PTR [edi+0x5]
  404ac2:	mov    edi,0x6ca3c8c6
  404ac7:	jb     0x404b09
  404ac9:	out    0xc6,eax
  404acb:	adc    esi,DWORD PTR [esi+ebp*1-0x79e24345]
  404ad2:	push   0xc5859590
  404ad7:	mov    ch,0xa5
  404ad9:	lods   eax,DWORD PTR ds:[esi]
  404ada:	gs loope 0x404a6b
  404add:	cmp    BYTE PTR [ecx+0x20],ch
  404ae0:	mov    esp,ebx
  404ae2:	pop    es
  404ae3:	pop    eax
  404ae4:	popf   
  404ae5:	fadd   DWORD PTR [ebp-0x28ff421a]
  404aeb:	mov    eax,ds:0x385f5e3a
  404af0:	jl     0x404b27
  404af2:	push   ecx
  404af3:	sti    
  404af4:	scas   al,BYTE PTR es:[edi]
  404af5:	or     eax,0xf872938
  404afa:	mov    bl,0x35
  404afc:	inc    eax
  404afd:	stc    
  404afe:	ds popf 
  404b00:	mov    dh,0x3c
  404b02:	add    DWORD PTR ds:[esi+0x15],esi
  404b06:	fwait
  404b07:	out    0xd4,eax
  404b09:	popf   
  404b0a:	f2xm1  
  404b0c:	pop    ds
  404b0d:	pop    eax
  404b0e:	shl    DWORD PTR [edi+0x741264b9],0xcc
  404b15:	jl     0x404ad3
  404b17:	xchg   bl,dl
  404b19:	imul   esi,DWORD PTR [esi]
  404b1c:	in     al,dx
  404b1d:	push   eax
  404b1e:	mov    eax,0xf5c6aa3e
  404b23:	stos   BYTE PTR es:[edi],al
  404b24:	enter  0x9d0c,0xd7
  404b28:	lods   eax,DWORD PTR ds:[esi]
  404b29:	cmp    BYTE PTR [eax],al
  404b2b:	pop    ecx
  404b2c:	mov    BYTE PTR [eax-0x64d4c29b],dl
  404b32:	jb     0x404b82
  404b34:	and    edx,DWORD PTR [edi-0x6b149eba]
  404b3a:	icebp  
  404b3b:	add    al,0x49
  404b3d:	and    al,0x6c
  404b3f:	sar    ecx,0x4b
  404b42:	out    dx,eax
  404b43:	mov    ds:0xc98ff8a0,eax
  404b48:	and    al,0x6e
  404b4a:	cmp    al,cl
  404b4c:	jecxz  0x404bcd
  404b4e:	fistp  WORD PTR es:[eax]
  404b51:	test   al,0x43
  404b53:	add    eax,0x89a33869
  404b58:	push   edx
  404b59:	mov    ?,WORD PTR [ebx+eax*8-0x73]
  404b5d:	mov    ds:0xb340555b,al
  404b62:	pop    edx
  404b63:	lods   al,BYTE PTR ds:[esi]
  404b64:	mov    ebx,0x5473ce5e
  404b69:	cwde   
  404b6a:	popa   
  404b6b:	push   0xc5726d33
  404b70:	fstp   QWORD PTR [edi-0x528f99eb]
  404b76:	cdq    
  404b77:	stos   BYTE PTR es:[edi],al
  404b78:	mov    al,ds:0xd2401a0f
  404b7d:	mov    al,0x45
  404b7f:	adc    ecx,DWORD PTR [eax-0x2d195bad]
  404b85:	cmc    
  404b86:	mov    edx,0x884416a1
  404b8b:	xchg   BYTE PTR [ebp+0x57],bl
  404b8e:	and    bh,al
  404b90:	dec    ebx
  404b91:	loope  0x404bc3
  404b93:	sub    BYTE PTR [ecx+0x2fd2aedb],dh
  404b99:	inc    edx
  404b9a:	mov    dl,0xc
  404b9c:	sbb    eax,0x94948410
  404ba1:	scas   al,BYTE PTR es:[edi]
  404ba2:	mov    bh,0x75
  404ba4:	mov    edx,0x15b832b6
  404ba9:	hlt    
  404baa:	add    BYTE PTR [ebp+0x4aac07ba],0x32
  404bb1:	inc    ebx
  404bb2:	xchg   sp,ax
  404bb4:	pop    eax
  404bb5:	pop    ebx
  404bb6:	mov    ebx,0x3d7d9351
  404bbb:	push   ebp
  404bbc:	and    al,0x7
  404bbe:	xchg   esp,eax
  404bbf:	cld    
  404bc0:	out    dx,al
  404bc1:	pop    eax
  404bc2:	mov    ch,0xff
  404bc4:	retf   0x1720
  404bc7:	ins    DWORD PTR es:[di],dx
  404bc9:	pop    ds
  404bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bcb:	popf   
  404bcc:	ret    
  404bcd:	mov    ebx,0x8dd20112
  404bd2:	sbb    ch,dh
  404bd4:	add    eax,0x4127d12a
  404bd9:	popf   
  404bda:	or     eax,0xd3b4f730
  404bdf:	cmp    eax,0xf62208b3
  404be4:	pop    ds
  404be5:	push   edx
  404be6:	test   al,0x3d
  404be8:	sbb    esi,DWORD PTR [esi+0x60368d77]
  404bee:	fwait
  404bef:	jo     0x404c1c
  404bf1:	sahf   
  404bf2:	and    ch,BYTE PTR [edi+0x18]
  404bf5:	addr16 out 0xbc,al
  404bf8:	mov    BYTE PTR [ebx],0x69
  404bfb:	adc    DWORD PTR [eax+0x4a3e90d],ecx
  404c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c02:	jb     0x404c0d
  404c04:	cmp    al,0xb0
  404c06:	xchg   BYTE PTR [ecx],dh
  404c08:	lds    edx,FWORD PTR [edi+esi*1]
  404c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c0c:	mov    dh,0xc2
  404c0e:	sub    al,0x45
  404c10:	xchg   DWORD PTR [edi+0x65],edx
  404c13:	jns    0x404c44
  404c15:	and    eax,0xb4abb1f1
  404c1a:	es cwde 
  404c1c:	sbb    al,dl
  404c1e:	pop    ebx
  404c1f:	sbb    DWORD PTR [edi+0x662680ce],esp
  404c25:	adc    DWORD PTR [ecx],0x20
  404c28:	mov    ecx,DWORD PTR [ecx-0x2e]
  404c2b:	fiadd  DWORD PTR ds:0x74bc0c7a
  404c31:	mov    DWORD PTR [ebx],ebx
  404c33:	inc    ebx
  404c34:	xor    eax,0x7a77241c
  404c39:	jnp    0x404bde
  404c3b:	inc    esp
  404c3c:	adc    BYTE PTR [edx],0x51
  404c3f:	xchg   eax,esi
  404c41:	mov    ch,0xc8
  404c43:	fisttp DWORD PTR [ebx-0x3f]
  404c46:	int3   
  404c47:	fidiv  WORD PTR [ebp+0xca4817a]
  404c4d:	adc    bl,BYTE PTR [esi+0x6e]
  404c50:	mov    ch,0x7
  404c52:	outs   dx,DWORD PTR ds:[esi]
  404c53:	push   ss
  404c54:	push   cs
  404c55:	add    al,0x8d
  404c57:	int    0x65
  404c59:	mov    dl,0x86
  404c5b:	repnz mov WORD PTR [esi],ds
  404c5e:	pop    edi
  404c5f:	cmc    
  404c60:	cmp    edx,ebx
  404c62:	dec    esi
  404c63:	dec    esi
  404c64:	push   eax
  404c65:	mov    ebx,DWORD PTR [ebp+0x694ca6d4]
  404c6b:	out    dx,al
  404c6c:	pop    es
  404c6d:	call   0x950bbcf0
  404c72:	jmp    0xd682:0xe6fb44f1
  404c79:	push   esi
  404c7a:	sub    cl,0x4f
  404c7d:	mov    edx,0x57041c9f
  404c82:	adc    ebp,DWORD PTR [edx]
  404c84:	aaa    
  404c85:	push   edx
  404c86:	xor    al,0xd1
  404c88:	adc    eax,0xb3a26782
  404c8d:	xchg   edx,eax
  404c8e:	jmp    0xe7509cde
  404c93:	popa   
  404c94:	mov    esp,ebx
  404c96:	and    DWORD PTR [ebx],0x4a
  404c99:	sub    BYTE PTR [esi],bh
  404c9b:	inc    edi
  404c9c:	push   0xffffffe2
  404c9e:	ins    BYTE PTR es:[edi],dx
  404c9f:	(bad)  
  404ca0:	stc    
  404ca1:	inc    eax
  404ca2:	cs in  eax,0x13
  404ca5:	mov    edx,eax
  404ca7:	push   esi
  404ca8:	add    BYTE PTR [ebx+eax*4-0x58b007ec],ah
  404caf:	or     BYTE PTR [esi+ebx*8-0x4a],0xa8
  404cb4:	or     ebx,DWORD PTR [esp+edx*8+0x49]
  404cb8:	data16 data16 jne 0x404d32
  404cbc:	pop    esp
  404cbd:	(bad)  
  404cbe:	repz popf 
  404cc0:	mov    gs,esi
  404cc2:	adc    eax,ecx
  404cc4:	dec    edi
  404cc5:	and    al,0x9c
  404cc7:	mov    ecx,0xe9ffa79a
  404ccc:	lds    eax,FWORD PTR [ecx-0x5c]
  404ccf:	or     ch,bl
  404cd1:	xor    DWORD PTR [eax],edi
  404cd3:	bound  ebp,QWORD PTR [ebx]
  404cd5:	inc    BYTE PTR [edi-0x11]
  404cd8:	sub    BYTE PTR ds:0xa42d706c,dh
  404cde:	dec    edi
  404cdf:	mov    DWORD PTR [eax+0x6a2e7028],esi
  404ce5:	and    BYTE PTR [eax],dh
  404ce7:	cmc    
  404ce8:	call   DWORD PTR ds:0x1149694e
  404cee:	test   al,0x75
  404cf0:	xchg   edx,eax
  404cf1:	shl    DWORD PTR [ebx+0x66],1
  404cf4:	je     0x404c85
  404cf6:	push   ebp
  404cf7:	scas   eax,DWORD PTR es:[edi]
  404cf8:	and    edx,DWORD PTR [ebx+0xf]
  404cfb:	pop    eax
  404cfc:	dec    esi
  404cfd:	fstp   QWORD PTR [ebx-0x140db019]
  404d03:	push   ebx
  404d04:	jmp    0x7deab657
  404d09:	jne    0x404cfe
  404d0b:	stos   BYTE PTR es:[edi],al
  404d0c:	push   ebp
  404d0d:	cdq    
  404d0e:	aas    
  404d0f:	fsubr  QWORD PTR [ebx+0x4a]
  404d12:	pop    ds
  404d13:	push   es
  404d14:	imul   esp,DWORD PTR [ecx+0x7e9399be],0xbc5d19c4
  404d1e:	fsub   DWORD PTR [esi]
  404d20:	ds in  al,dx
  404d22:	cmp    eax,0x62c4846f
  404d27:	add    BYTE PTR [ecx-0x5],bl
  404d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d2b:	retf   
  404d2c:	dec    ecx
  404d2d:	pusha  
  404d2e:	xchg   edx,eax
  404d2f:	jno    0x404d60
  404d31:	mov    esp,0x33de1c05
  404d36:	fwait
  404d37:	jb     0x404d28
  404d39:	in     eax,0xc7
  404d3b:	and    esp,DWORD PTR [ecx-0x14f6112d]
  404d41:	push   ebx
  404d42:	retf   0xf5ee
  404d45:	push   esi
  404d46:	push   0xd14265f0
  404d4b:	call   0xfdae:0x2e4c5f23
  404d52:	and    ebx,DWORD PTR [ebx]
  404d54:	cs mov esp,0x6588f15a
  404d5a:	ja     0x404cee
  404d5c:	shl    DWORD PTR [eax+0x5aa21367],0x1b
  404d63:	pop    ecx
  404d64:	pop    esp
  404d65:	and    eax,0x6c8017ec
  404d6a:	cdq    
  404d6b:	xchg   esp,eax
  404d6c:	cli    
  404d6d:	es mov ch,0x5
  404d70:	mov    WORD PTR ds:0x28391a45,?
  404d76:	jle    0x404da4
  404d78:	(bad)  
  404d79:	mov    esp,0x87716e97
  404d7e:	and    ebx,esi
  404d80:	test   DWORD PTR [ecx+0x26],ebp
  404d83:	push   ebx
  404d84:	pop    edi
  404d85:	leave  
  404d86:	dec    edx
  404d87:	push   es
  404d88:	sti    
  404d89:	in     al,dx
  404d8a:	popf   
  404d8b:	add    BYTE PTR [edx],bl
  404d8d:	cmp    dh,BYTE PTR [ebx]
  404d8f:	out    0xc4,al
  404d91:	(bad)  
  404d92:	mov    ebp,0xb9482f8e
  404d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d99:	or     al,0x3c
  404d9b:	or     DWORD PTR [edi],0x343ed50
  404da1:	in     al,0x8
  404da3:	arpl   bp,cx
  404da5:	mov    esi,0xad99978e
  404daa:	stc    
  404dab:	cli    
  404dac:	mov    BYTE PTR [ebp+0x3b],cl
  404daf:	xor    bh,BYTE PTR [edx]
  404db1:	push   0xc9ab353f
  404db6:	cmp    bh,bl
  404db8:	(bad)  
  404db9:	pusha  
  404dba:	stos   BYTE PTR es:[edi],al
  404dbb:	gs (bad) 
  404dbd:	fistp  WORD PTR ds:0x7d04edb5
  404dc3:	cli    
  404dc4:	std    
  404dc5:	mov    esp,0x574d21a3
  404dca:	jbe    0x404e2c
  404dcc:	add    BYTE PTR [ecx],bh
  404dce:	cwde   
  404dcf:	daa    
  404dd0:	aas    
  404dd1:	fdiv   st(6),st
  404dd3:	jmp    0x404d5c
  404dd5:	xor    BYTE PTR [ecx-0x330d4c9c],dl
  404ddb:	sub    dh,BYTE PTR [edi*8+0x6ef85711]
  404de2:	push   edx
  404de3:	shl    DWORD PTR [edx+0x6b],cl
  404de6:	aaa    
  404de7:	xor    eax,0xd9eca881
  404dec:	sahf   
  404ded:	jnp    0x404df2
  404def:	jno    0x404dd8
  404df1:	test   DWORD PTR [esp+edi*8],esp
  404df4:	push   es
  404df5:	inc    edi
  404df6:	sbb    BYTE PTR [edi-0x7f],0xd5
  404dfa:	call   0xd12a:0xe1a87bcf
  404e01:	es mov ebp,0x359efd7c
  404e07:	int3   
  404e08:	rcr    BYTE PTR [eax+0x72],0x56
  404e0c:	inc    ebx
  404e0d:	ds push ss
  404e0f:	stos   BYTE PTR es:[edi],al
  404e10:	in     al,0x65
  404e12:	test   dh,ah
  404e14:	jbe    0x404dc3
  404e16:	retfw  
  404e18:	xor    ebp,eax
  404e1a:	and    dh,BYTE PTR [esi+0x37]
  404e1d:	lods   al,BYTE PTR ds:[esi]
  404e1e:	(bad)  
  404e1f:	cmp    cl,BYTE PTR ds:0x31584911
  404e25:	ins    DWORD PTR es:[edi],dx
  404e26:	nop
  404e27:	xchg   BYTE PTR [ebp-0x9],ah
  404e2a:	push   eax
  404e2b:	jo     0x404e7f
  404e2d:	jnp    0x404de9
  404e2f:	stc    
  404e30:	inc    edi
  404e31:	and    al,0xa5
  404e33:	cmp    edx,DWORD PTR [eax-0x7e]
  404e36:	sub    DWORD PTR [edi+0x29cfc91b],ebx
  404e3c:	mov    ch,0x69
  404e3e:	cmp    BYTE PTR [edx-0x5664f32],ch
  404e44:	enter  0x4497,0xfa
  404e48:	imul   ebx,DWORD PTR [edx+0x78096316],0xfffffff3
  404e4f:	jb     0x404ec4
  404e51:	pop    ds
  404e52:	push   ss
  404e53:	fldenv [edx+0x53]
  404e56:	push   esp
  404e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e59:	(bad)  
  404e5a:	pushaw 
  404e5c:	hlt    
  404e5d:	mov    edx,edi
  404e5f:	jns    0x404def
  404e61:	dec    edi
  404e62:	repz pop edx
  404e64:	pop    ss
  404e65:	fs or  dh,bh
  404e68:	sub    DWORD PTR [esi],esp
  404e6a:	mov    ah,0xa9
  404e6c:	mov    esi,0xf392281c
  404e71:	push   edx
  404e72:	adc    al,0x43
  404e74:	outs   dx,DWORD PTR ds:[esi]
  404e75:	mov    bh,0xa8
  404e77:	jne    0x404e57
  404e79:	xchg   edx,eax
  404e7a:	push   ebp
  404e7b:	js     0x404e1b
  404e7d:	dec    edi
  404e7e:	jmp    0x878c:0x8d053870
  404e85:	imul   esp,esi,0x1f
  404e88:	data16 jnp 0x404e3a
  404e8b:	loopne 0x404e46
  404e8d:	cmp    eax,0x4f3616fb
  404e92:	and    eax,0x31ab4d3f
  404e97:	arpl   WORD PTR [esi-0x6f8f4585],bp
  404e9d:	in     al,dx
  404e9e:	push   ds
  404e9f:	loope  0x404e77
  404ea1:	xchg   BYTE PTR [eax-0x26ac0fe4],dh
  404ea7:	call   0x92a88fc3
  404eac:	fadd   QWORD PTR [esi-0x31f056c9]
  404eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eb3:	inc    ebp
  404eb4:	out    0x26,al
  404eb6:	add    cl,BYTE PTR [edi]
  404eb8:	xor    eax,0x26f61f6c
  404ebd:	adc    esi,esp
  404ebf:	fadd   DWORD PTR [ebx+ebx*2-0x37]
  404ec4:	mov    ds:0xf549ce5d,al
  404ec9:	and    DWORD PTR [esi+0x16c360a5],ebp
  404ecf:	loop   0x404f37
  404ed1:	inc    edi
  404ed2:	push   es
  404ed3:	popa   
  404ed4:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  404ed6:	fisub  WORD PTR [esi+0xe]
  404ed9:	retf   
  404eda:	pop    cx
  404edc:	das    
  404edd:	adc    al,0x72
  404edf:	xchg   edx,eax
  404ee0:	arpl   WORD PTR [ecx+0x6f],si
  404ee3:	neg    DWORD PTR [eax-0x57e70192]
  404ee9:	add    dh,bl
  404eeb:	inc    ecx
  404eec:	dec    edx
  404eed:	adc    cl,al
  404eef:	add    eax,0x58fa516e
  404ef4:	in     eax,0x63
  404ef6:	sbb    cl,BYTE PTR ds:0x87bd8530
  404efc:	jnp    0x404ebe
  404efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eff:	add    DWORD PTR [eax],esp
  404f01:	inc    ebp
  404f02:	test   BYTE PTR ds:0x4536e4a8,ch
  404f08:	lea    eax,[edx]
  404f0a:	cmc    
  404f0b:	jmp    0xff73:0x8d2ed639
  404f12:	sti    
  404f13:	out    dx,al
  404f14:	loope  0x404e99
  404f16:	or     bl,bl
  404f18:	sbb    al,0x2b
  404f1a:	inc    edx
  404f1b:	nop
  404f1c:	repz and DWORD PTR [eax+ebx*8],ecx
  404f20:	jo     0x404f90
  404f22:	cld    
  404f23:	inc    esi
  404f24:	in     al,0x42
  404f26:	jle    0x404f35
  404f28:	sbb    BYTE PTR [ebp+0x4fedfff6],dh
  404f2e:	test   bh,bh
  404f30:	inc    ecx
  404f31:	pop    ebx
  404f32:	icebp  
  404f33:	mov    ch,0xbe
  404f35:	cmp    al,0x9d
  404f37:	fadd   QWORD PTR ds:0x380d3863
  404f3d:	jo     0x404f21
  404f3f:	jae    0x404f07
  404f41:	mov    edi,0xd1a21e69
  404f46:	mov    ds:0xac66d471,al
  404f4b:	outs   dx,DWORD PTR ds:[esi]
  404f4c:	shl    DWORD PTR [esi+0x70b89261],1
  404f52:	stos   DWORD PTR es:[edi],eax
  404f53:	adc    DWORD PTR [eax+eax*8-0x67c1f069],0x6
  404f5b:	ret    0x7685
  404f5e:	inc    eax
  404f5f:	or     edx,DWORD PTR [edi]
  404f61:	cdq    
  404f62:	inc    eax
  404f63:	pop    es
  404f64:	aaa    
  404f65:	rol    DWORD PTR [ebp+0x4dc8ee8f],cl
  404f6b:	stos   BYTE PTR es:[edi],al
  404f6c:	push   ecx
  404f6d:	imul   esi,DWORD PTR [esi+0xa],0xfffffffa
  404f71:	mov    ecx,0x7f83d026
  404f76:	xor    ebx,DWORD PTR [edi-0x7e]
  404f79:	mov    bl,0xbb
  404f7b:	test   BYTE PTR [ebx+0x2d8b519b],0x20
  404f82:	je     0x404fd4
  404f84:	ins    BYTE PTR es:[edi],dx
  404f85:	inc    esi
  404f86:	pop    ebx
  404f87:	pushf  
  404f88:	ret    
  404f89:	dec    edx
  404f8a:	xor    al,0xe5
  404f8c:	fimul  DWORD PTR [ebx-0x26]
  404f8f:	inc    ebx
  404f90:	cli    
  404f91:	shr    DWORD PTR [ebx-0x6],0x19
  404f95:	pop    esi
  404f96:	int    0x1f
  404f98:	sbb    DWORD PTR [edi],0xd7f1bd51
  404f9e:	mov    esi,0x2ac1866
  404fa3:	xchg   ebx,eax
  404fa4:	not    DWORD PTR [edx-0x48059ba6]
  404faa:	in     eax,0xd4
  404fac:	push   0x36
  404fae:	fcmovnbe st,st(0)
  404fb0:	inc    ecx
  404fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fb2:	data16 std 
  404fb4:	(bad)  
  404fb5:	jo     0x404faf
  404fb7:	fs es inc ebp
  404fba:	fidivr WORD PTR [edx-0x285cd6ab]
  404fc0:	outs   dx,BYTE PTR ds:[esi]
  404fc1:	leave  
  404fc2:	or     ah,BYTE PTR [edx+0x6f7d3b65]
  404fc8:	(bad)
  404fcb:	dec    eax
  404fcc:	cmp    esp,ebx
  404fce:	retf   
  404fcf:	je     0x404fab
  404fd1:	adc    dh,BYTE PTR [ebp-0x31]
  404fd4:	xchg   ebp,eax
  404fd5:	out    dx,eax
  404fd6:	xor    dh,dl
  404fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fd9:	clc    
  404fda:	pop    ecx
  404fdb:	lahf   
  404fdc:	dec    ebx
  404fdd:	retf   
  404fde:	stc    
  404fdf:	adc    al,0x6d
  404fe1:	and    esi,DWORD PTR [esi]
  404fe3:	jge    0x404ffe
  404fe5:	in     al,0x62
  404fe7:	and    al,BYTE PTR [edi+0x5c]
  404fea:	loopne 0x404f6d
  404fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fed:	daa    
  404fee:	push   ebx
  404fef:	inc    ecx
  404ff0:	mov    BYTE PTR [ebx-0x329c6667],ch
  404ff6:	jo     0x405003
  404ff8:	clc    
  404ff9:	test   BYTE PTR [ebp-0x638b0c67],cl
  404fff:	mov    ebp,0xb0cb4748
  405004:	mov    ebp,0x56771f9c
  405009:	cmp    eax,0xb76a6cdb
  40500e:	push   esp
  40500f:	mov    ebx,0xfb963a04
  405014:	iret   
  405015:	outs   dx,BYTE PTR ds:[esi]
  405016:	stc    
  405017:	lock in al,dx
  405019:	loope  0x405029
  40501b:	mov    eax,DWORD PTR [ebx]
  40501d:	pusha  
  40501e:	loope  0x405031
  405020:	dec    edx
  405021:	and    DWORD PTR [ebx-0x14833bd9],ecx
  405027:	out    0xf2,eax
  405029:	pop    ds
  40502a:	pop    edx
  40502b:	aaa    
  40502c:	hlt    
  40502d:	add    DWORD PTR [eax-0x23134aec],0xffffffe8
  405034:	xchg   ecx,eax
  405035:	(bad)  
  405036:	pop    ebx
  405037:	in     eax,dx
  405038:	sbb    bh,dl
  40503a:	mov    ds:0x45c95ed3,eax
  40503f:	push   ds
  405040:	jecxz  0x405049
  405042:	and    dl,dl
  405044:	in     al,dx
  405045:	mov    DWORD PTR [ebx+0x2f3d0ef3],edi
  40504b:	imul   ecx,DWORD PTR [edx+0x29],0x34
  40504f:	jecxz  0x40504f
  405051:	cdq    
  405052:	gs neg edi
  405055:	stos   DWORD PTR es:[edi],eax
  405056:	pop    esp
  405057:	enter  0xc47b,0xaf
  40505b:	push   es
  40505c:	lock inc edx
  40505e:	loop   0x4050a8
  405060:	mov    ds:0xf55c17b1,eax
  405065:	cdq    
  405066:	jmp    0x40503f
  405068:	mov    ch,0xe2
  40506a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40506b:	into   
  40506c:	xor    ebx,DWORD PTR [ebx-0x78a443d9]
  405072:	imul   edi,DWORD PTR [eax+eax*2],0x37
  405076:	call   0xf2cda1f4
  40507b:	mov    dl,0xc6
  40507d:	fadd   DWORD PTR [edi+0x14c97d00]
  405083:	aad    0xa5
  405085:	popf   
  405086:	test   DWORD PTR [esi+0x719d3b05],eax
  40508c:	add    eax,0xbf0d2d5f
  405091:	into   
  405092:	cwde   
  405093:	sub    al,0x75
  405095:	mov    dh,0x8d
  405097:	scas   eax,DWORD PTR es:[edi]
  405098:	mov    bh,0xb1
  40509a:	in     eax,dx
  40509b:	xchg   ebx,eax
  40509c:	test   eax,0x89121613
  4050a1:	xlat   BYTE PTR ds:[ebx]
  4050a2:	and    ebp,DWORD PTR ds:0x9a15ff93
  4050a8:	pop    edx
  4050a9:	cmp    eax,0xf9b542
  4050ae:	outs   dx,DWORD PTR ds:[esi]
  4050af:	mov    cl,0xe3
  4050b1:	sbb    BYTE PTR [edx-0x68],bh
  4050b4:	xor    ebp,DWORD PTR [edx-0x3e]
  4050b7:	adc    BYTE PTR gs:[ebx+eax*1-0x53ae55a4],ah
  4050bf:	xchg   edx,eax
  4050c0:	iret   
  4050c1:	popf   
  4050c2:	cmp    eax,ebx
  4050c4:	gs or  edx,esi
  4050c7:	adc    bl,BYTE PTR [edi]
  4050c9:	sbb    eax,0xebc7a232
  4050ce:	sbb    DWORD PTR [esi],ebp
  4050d0:	repz cmp DWORD PTR [ebp-0x49],ebp
  4050d4:	in     eax,dx
  4050d5:	and    al,0xb1
  4050d7:	mov    ebp,0x3709f1bf
  4050dc:	inc    DWORD PTR [edi+0x4dbbb0d1]
  4050e2:	adc    eax,0xe3d304ba
  4050e7:	cli    
  4050e8:	sub    edx,0xa59ab35d
  4050ee:	pop    ebx
  4050ef:	jae    0x4050f2
  4050f1:	xor    ebx,DWORD PTR [ebx-0x3dd69f4b]
  4050f7:	(bad)  
  4050f8:	jnp    0x405105
  4050fa:	ret    0xfcd3
  4050fd:	sub    eax,0x798ebed
  405102:	ja     0x40514d
  405104:	jle    0x4050e3
  405106:	cmp    DWORD PTR [edi],eax
  405108:	jae    0x405135
  40510a:	popf   
  40510b:	add    BYTE PTR [edx+0x49],0x9e
  40510f:	mov    bh,0x2b
  405111:	sbb    al,0xbd
  405113:	mov    ebp,0xedb67567
  405118:	aas    
  405119:	xlat   BYTE PTR ds:[ebx]
  40511a:	xchg   esi,eax
  40511c:	cdq    
  40511d:	ja     0x4050d5
  40511f:	nop
  405120:	cmp    cl,BYTE PTR [ecx+0x1b]
  405123:	push   es
  405124:	stos   BYTE PTR es:[edi],al
  405125:	(bad)  
  405126:	xchg   edi,eax
  405127:	dec    ecx
  405128:	pop    edi
  405129:	push   cs
  40512a:	add    BYTE PTR [edi+0x5a4297bd],dl
  405130:	push   esp
  405131:	clc    
  405132:	popa   
  405133:	call   0x9c0:0xde871553
  40513a:	dec    ecx
  40513b:	shl    BYTE PTR [edi+0x53],0x34
  40513f:	xor    DWORD PTR [edx],0x77
  405142:	or     al,0xa4
  405144:	or     DWORD PTR [edx-0x73],edi
  405147:	push   ds
  405148:	xor    al,0x75
  40514a:	jl     0x4050e5
  40514c:	leave  
  40514d:	cmp    bh,BYTE PTR [edi+esi*4]
  405150:	iret   
  405151:	mov    eax,ds:0x995873e5
  405156:	push   ecx
  405157:	and    ebp,DWORD PTR [ebx-0x28]
  40515a:	push   es
  40515b:	push   esp
  40515c:	aaa    
  40515d:	add    eax,DWORD PTR [ecx-0x3c]
  405160:	in     eax,dx
  405161:	out    dx,eax
  405162:	jne    0x405144
  405164:	sbb    eax,0x9e69070b
  405169:	cmp    DWORD PTR [eax-0x48eaac05],ebp
  40516f:	fcomp  DWORD PTR ds:0x7f8b90ca
  405175:	test   eax,0xb7a3bbd
  40517a:	mov    ebp,0xad4c2d92
  40517f:	and    esp,DWORD PTR [ecx-0x55]
  405182:	mov    BYTE PTR [esi],ch
  405184:	cwde   
  405185:	mov    dl,0xcb
  405187:	sti    
  405188:	or     ch,BYTE PTR [esi+0x3d]
  40518b:	add    ebx,DWORD PTR [ecx+esi*8-0x34161ace]
  405192:	sti    
  405193:	xor    DWORD PTR [esi+0x5f],ebx
  405196:	pop    esp
  405197:	ds mov dh,0xb3
  40519a:	nop
  40519b:	xchg   DWORD PTR [ecx],edx
  40519d:	dec    esp
  40519e:	hlt    
  40519f:	pusha  
  4051a0:	test   DWORD PTR [edi],esi
  4051a2:	dec    ebx
  4051a3:	les    esi,FWORD PTR [edi-0x46]
  4051a6:	adc    esp,DWORD PTR [ebp-0x4639173d]
  4051ac:	pop    ds
  4051ad:	pop    esi
  4051ae:	int3   
  4051af:	mov    es:0xaa3bb3ce,eax
  4051b5:	nop
  4051b6:	push   0xffffffeb
  4051b8:	push   0x22f96da6
  4051bd:	shl    dl,cl
  4051bf:	in     eax,dx
  4051c0:	xchg   edi,eax
  4051c1:	xchg   ebx,eax
  4051c2:	cmp    BYTE PTR [edi+0x1c],bh
  4051c5:	hlt    
  4051c6:	mov    al,ds:0xec8f2a3e
  4051cb:	add    eax,0x5ce98a26
  4051d0:	out    dx,eax
  4051d1:	adc    BYTE PTR [esi-0x7576b591],0xb1
  4051d8:	data16 (bad) 
  4051da:	jle    0x405180
  4051dc:	adc    BYTE PTR [edi-0x2604bfd4],0xe9
  4051e3:	imul   esi,DWORD PTR [ebp+0x5b04b051],0xc2bad18e
  4051ed:	mov    bl,0x12
  4051ef:	dec    edx
  4051f0:	xchg   esi,eax
  4051f1:	jmp    0xbb41:0xde8b8e25
  4051f8:	xor    ebp,DWORD PTR [eax-0x35]
  4051fb:	push   esi
  4051fc:	sbb    dl,cl
  4051fe:	jle    0x4051ca
  405200:	sub    ecx,esi
  405202:	mov    ah,0x8d
  405204:	outs   dx,DWORD PTR ds:[esi]
  405205:	cmp    ecx,DWORD PTR [esi-0x71]
  405208:	lods   eax,DWORD PTR ds:[esi]
  405209:	adc    ebx,DWORD PTR [ecx-0x1a]
  40520c:	sbb    al,0x89
  40520e:	lods   al,BYTE PTR ds:[esi]
  40520f:	xor    eax,0x5b47e531
  405214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405216:	pop    ecx
  405217:	aas    
  405218:	sbb    DWORD PTR [ebp-0x1],esi
  40521b:	in     al,0xc8
  40521d:	in     eax,dx
  40521e:	mov    ss,WORD PTR [ebp-0xcc77312]
  405224:	jae    0x40522e
  405226:	das    
  405227:	les    esp,FWORD PTR [eax+eax*4]
  40522a:	jg     0x4051d5
  40522c:	lahf   
  40522d:	mov    ebp,0x24d010e3
  405232:	lods   eax,DWORD PTR ds:[esi]
  405233:	xchg   BYTE PTR [esi-0x8],dh
  405236:	add    eax,0x2d33401b
  40523b:	js     0x405200
  40523d:	mov    ds:0x4d51575b,al
  405242:	scas   eax,DWORD PTR es:[edi]
  405243:	xor    eax,0xab9cc981
  405248:	fnstsw WORD PTR [ebp+0x68b16ef9]
  40524e:	arpl   WORD PTR [ecx-0x70ada0df],sp
  405254:	bound  edi,QWORD PTR [ecx]
  405256:	sar    BYTE PTR [esi+ecx*8+0x3],cl
  40525a:	ja     0x4052c4
  40525c:	call   0x1c43:0xd839703f
  405263:	std    
  405264:	inc    eax
  405265:	xchg   al,bl
  405267:	enter  0xda03,0x4b
  40526b:	sti    
  40526c:	xchg   ebp,eax
  40526d:	jl     0x405214
  40526f:	lds    edx,FWORD PTR [edx-0x6c]
  405272:	xor    eax,0x2dcf254d
  405277:	jb     0x40527a
  405279:	cmp    al,0x8c
  40527b:	jo     0x405207
  40527d:	cmp    BYTE PTR [esi],bh
  40527f:	push   cs
  405280:	pusha  
  405281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405282:	inc    esp
  405283:	out    0x34,al
  405285:	aad    0xaa
  405287:	inc    eax
  405288:	jne    0x40528b
  40528a:	outs   dx,DWORD PTR ds:[esi]
  40528b:	adc    al,0xd8
  40528d:	enter  0x949c,0xa1
  405291:	pusha  
  405292:	pop    edi
  405293:	ror    BYTE PTR [ebx],0x22
  405296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405297:	mov    esi,0x55c7deb7
  40529c:	pop    esp
  40529d:	(bad)  
  40529e:	xor    BYTE PTR [edi+esi*4+0x61],ch
  4052a2:	add    BYTE PTR [ebp+0x3f],dl
  4052a5:	jnp    0x405235
  4052a7:	and    eax,0x74b32c51
  4052ac:	test   eax,0x79362011
  4052b1:	das    
  4052b2:	pop    esp
  4052b3:	aaa    
  4052b4:	xchg   edx,eax
  4052b5:	add    BYTE PTR [ebx+0x52b3c04],cl
  4052bb:	lods   eax,DWORD PTR ds:[esi]
  4052bc:	cmp    ch,ch
  4052be:	(bad)  
  4052bf:	js     0x4052b0
  4052c1:	push   edx
  4052c2:	add    esp,edx
  4052c4:	push   ss
  4052c5:	arpl   WORD PTR gs:[ebx+0x59],di
  4052c9:	xor    BYTE PTR [edx+0x68da68a7],ch
  4052cf:	adc    dh,BYTE PTR [edi-0xc]
  4052d2:	jp     0x405263
  4052d4:	or     al,0x9f
  4052d6:	pop    eax
  4052d7:	xchg   esi,eax
  4052d8:	push   edi
  4052d9:	or     cl,BYTE PTR [esi*4-0x494ca61]
  4052e0:	ret    0x3d85
  4052e3:	(bad)  
  4052e4:	icebp  
  4052e5:	jp     0x4052a0
  4052e7:	sahf   
  4052e8:	call   0xded6:0x2021d1e5
  4052ef:	and    al,0xcb
  4052f1:	or     DWORD PTR [esi-0x77d7c79b],ecx
  4052f7:	int    0xf5
  4052f9:	jmp    0x4b64:0x78a451c9
  405300:	inc    esp
  405301:	mov    ecx,0xbf475e07
  405306:	xor    BYTE PTR [edi],0xc1
  405309:	lahf   
  40530a:	jnp    0x405356
  40530c:	push   eax
  40530d:	mov    ah,bh
  40530f:	clc    
  405310:	inc    ebp
  405311:	mov    BYTE PTR [edi*1+0x5d200a0b],ch
  405318:	mov    ecx,DWORD PTR [ecx+eiz*4-0x46]
  40531c:	mov    ch,0xac
  40531e:	lods   eax,DWORD PTR ds:[esi]
  40531f:	lods   al,BYTE PTR ds:[esi]
  405320:	dec    esi
  405321:	mov    ecx,0x611f9427
  405326:	push   edi
  405327:	xchg   ebp,eax
  405328:	dec    esi
  405329:	cmc    
  40532a:	inc    ecx
  40532b:	push   ecx
  40532c:	mov    ecx,0x9c1d7c76
  405331:	and    edx,DWORD PTR [ecx]
  405333:	sahf   
  405334:	pop    ebx
  405335:	xchg   BYTE PTR [edx-0x27],ch
  405338:	aad    0xed
  40533a:	xor    edx,DWORD PTR es:[ebp+ebp*8-0xa85c606]
  405342:	jo     0x40533c
  405344:	fwait
  405345:	pop    ss
  405346:	add    al,0x7f
  405348:	push   ss
  405349:	rep outs dx,BYTE PTR ds:[esi]
  40534b:	xor    DWORD PTR [edx-0x71],0xd3b7524c
  405352:	cmp    edx,DWORD PTR [edx+0x1]
  405355:	mov    dl,0x63
  405357:	and    dl,bl
  405359:	dec    eax
  40535a:	shrd   DWORD PTR [ecx+0x63],edx,cl
  40535e:	pop    ebx
  40535f:	mov    dh,0xbb
  405361:	jns    0x405364
  405363:	dec    ebx
  405364:	ss (bad) 
  405366:	dec    ebx
  405367:	xor    al,0x6
  405369:	push   edx
  40536a:	daa    
  40536b:	add    cl,al
  40536d:	inc    ebp
  40536e:	xchg   esi,eax
  40536f:	adc    ebp,DWORD PTR [edi+0x9]
  405372:	les    edi,FWORD PTR [edi+eax*2+0x3afe08cc]
  405379:	ss jo  0x4053cb
  40537c:	and    BYTE PTR [ebp-0x43110641],ah
  405382:	aas    
  405383:	inc    eax
  405384:	scas   eax,DWORD PTR es:[edi]
  405385:	stos   BYTE PTR es:[edi],al
  405386:	dec    ecx
  405387:	out    dx,eax
  405388:	lods   al,BYTE PTR ds:[esi]
  405389:	adc    al,0x6b
  40538b:	xchg   esi,eax
  40538c:	in     al,0x0
  40538e:	xchg   esp,eax
  40538f:	nop
  405390:	push   ebx
  405391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405392:	out    dx,al
  405393:	fs dec edx
  405395:	jge    0x4053fd
  405397:	mov    WORD PTR [eax+0x7],gs
  40539a:	outs   dx,DWORD PTR ds:[esi]
  40539b:	in     eax,0x0
  40539d:	pop    eax
  40539e:	shl    DWORD PTR [esi-0xb],1
  4053a1:	add    ebx,DWORD PTR [ebx+esi*4]
  4053a4:	add    DWORD PTR [edi-0x40],0x5d20f002
  4053ab:	pop    ebx
  4053ac:	mov    bh,0xc8
  4053ae:	mov    DWORD PTR [edx-0x7dd2adb0],0xaff51e7d
  4053b8:	inc    ebp
  4053b9:	repz test esp,edx
  4053bc:	les    ebx,FWORD PTR [ecx]
  4053be:	mov    edi,DWORD PTR [ebx+0x62]
  4053c1:	jne    0x405405
  4053c3:	es cmp ebx,0xffffffb1
  4053c7:	mov    bh,0x96
  4053c9:	in     eax,0x99
  4053cb:	fwait
  4053cc:	pop    ebx
  4053cd:	xchg   ebp,eax
  4053ce:	arpl   sp,si
  4053d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053d2:	dec    DWORD PTR [edi-0x57]
  4053d5:	aad    0x1d
  4053d7:	shr    DWORD PTR [ebp+ecx*1-0x39321971],cl
  4053de:	jmp    0x83cf:0xc1f44b0c
  4053e5:	icebp  
  4053e6:	mov    edi,0x7f51a082
  4053eb:	adc    eax,0x3012a207
  4053f0:	neg    BYTE PTR [edx-0x5f171c70]
  4053f6:	int3   
  4053f7:	xchg   ebx,eax
  4053f8:	dec    edx
  4053f9:	jae    0x40545f
  4053fb:	push   esp
  4053fc:	push   ds
  4053fd:	or     DWORD PTR [ebx],0xffffffb0
  405400:	in     eax,dx
  405401:	dec    edi
  405402:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  405404:	cmp    BYTE PTR [edi],dh
  405406:	outs   dx,BYTE PTR ds:[esi]
  405407:	mov    esp,0x8fcc9b14
  40540c:	jo     0x4053b5
  40540e:	xchg   ecx,eax
  40540f:	xor    ecx,0x18
  405412:	mov    ah,0x75
  405414:	add    DWORD PTR ds:0xef564fd2,edx
  40541a:	rcr    ah,0x20
  40541d:	add    DWORD PTR [ebx+0x1],esi
  405420:	loopne 0x405477
  405422:	push   0xd92fface
  405427:	inc    eax
  405428:	mov    ebp,0x9ae0c603
  40542d:	repnz xor dh,BYTE PTR [ecx+0x51]
  405431:	mov    ch,0x5c
  405433:	and    al,0xa3
  405435:	sub    BYTE PTR [ebp-0x1a],cl
  405438:	sub    bh,BYTE PTR [ebp+0x1f7278bf]
  40543e:	pop    esp
  40543f:	inc    edi
  405440:	adc    ebp,ebx
  405442:	or     eax,0xb76569cb
  405447:	lods   eax,DWORD PTR ds:[esi]
  405448:	call   0xaef96e05
  40544d:	push   ecx
  40544e:	dec    ebp
  40544f:	sbb    eax,0xd2d72f17
  405454:	jg     0x4053e8
  405456:	sub    esi,DWORD PTR [ebx]
  405458:	push   0x64
  40545a:	jle    0x4054d1
  40545c:	xor    eax,ecx
  40545e:	arpl   WORD PTR [eax+0x56],dx
  405461:	mov    dl,BYTE PTR [edx]
  405463:	push   edi
  405464:	push   ds
  405465:	fwait
  405466:	push   eax
  405467:	and    al,cl
  405469:	inc    ecx
  40546a:	or     edi,DWORD PTR [ebx+0x7f707f3e]
  405470:	and    DWORD PTR [ebx+0x1f],ecx
  405473:	adc    esi,DWORD PTR [edx-0x64068808]
  405479:	jecxz  0x40546c
  40547b:	scas   al,BYTE PTR es:[edi]
  40547c:	jl     0x4054b0
  40547e:	neg    DWORD PTR [eax]
  405480:	push   eax
  405481:	add    ebx,DWORD PTR [esi+edx*4+0x6d]
  405485:	dec    esi
  405486:	or     ecx,ebp
  405488:	mov    bl,0xa2
  40548a:	and    ebp,DWORD PTR [edx]
  40548c:	imul   esp,DWORD PTR [ebp+0x62],0xffffffea
  405490:	xchg   DWORD PTR [ecx+0x42],edx
  405493:	pop    ebx
  405494:	cs jae 0x405492
  405497:	mov    ds:0xb51d5693,al
  40549c:	jle    0x405432
  40549e:	xchg   ecx,eax
  40549f:	mov    ebx,ebp
  4054a1:	fwait
  4054a2:	pop    eax
  4054a3:	push   cs
  4054a4:	lock int 0x95
  4054a7:	xchg   DWORD PTR [ebx-0x29],ebp
  4054aa:	or     al,0x44
  4054ac:	push   ebx
  4054ad:	(bad)  
  4054af:	mov    ds:0x71164f07,al
  4054b4:	mov    ah,BYTE PTR [eax]
  4054b6:	xor    eax,ebx
  4054b8:	int    0x99
  4054ba:	mov    ch,BYTE PTR [edx]
  4054bc:	ss lock mov esi,0x1d2e3236
  4054c3:	dec    ecx
  4054c4:	xchg   esi,eax
  4054c5:	retf   
  4054c6:	jae    0x405475
  4054c8:	fnstsw WORD PTR [edi]
  4054ca:	or     eax,0x908e0d45
  4054cf:	add    esi,DWORD PTR ds:0x7ddc3f85
  4054d5:	adc    eax,0x1f65812e
  4054da:	test   eax,0xc14943b7
  4054df:	dec    edx
  4054e0:	(bad)  
  4054e1:	fisttp WORD PTR [ebx-0x2dfbba40]
  4054e7:	pop    edi
  4054e8:	in     al,dx
  4054e9:	mov    edi,0x5256f878
  4054ee:	loop   0x4054ba
  4054f0:	in     eax,0x4c
  4054f2:	ins    BYTE PTR es:[edi],dx
  4054f3:	mov    ecx,0xba87c3aa
  4054f8:	daa    
  4054f9:	stos   DWORD PTR es:[edi],eax
  4054fa:	xchg   ebx,eax
  4054fb:	add    DWORD PTR ds:0x2c6ceede,ebp
  405501:	(bad)  
  405502:	shr    BYTE PTR [ecx],0x3c
  405505:	xor    eax,0x36ea9ff7
  40550a:	ret    0x305
  40550d:	pop    es
  40550e:	inc    ebp
  40550f:	popa   
  405510:	inc    ecx
  405511:	and    ah,BYTE PTR [eax-0x78]
  405514:	and    BYTE PTR [esi],0xe9
  405517:	lock mov ds,WORD PTR [ecx]
  40551a:	mov    eax,0x1b7c4904
  40551f:	sar    DWORD PTR [edx],cl
  405521:	dec    esp
  405522:	or     al,0x8b
  405524:	jo     0x405557
  405526:	dec    esp
  405527:	into   
  405528:	jmp    0x40553a
  40552a:	mov    bl,0x3e
  40552c:	out    dx,al
  40552d:	cmp    ebx,DWORD PTR [ebx+0x1c]
  405530:	fnstcw WORD PTR [ecx+0x37e8437b]
  405536:	retf   
  405537:	pop    esi
  405538:	ret    
  405539:	out    0xb0,al
  40553b:	mov    dl,0x40
  40553d:	daa    
  40553e:	in     al,dx
  40553f:	sub    eax,0x450062a0
  405544:	dec    edi
  405545:	xchg   edi,eax
  405546:	push   esi
  405547:	mov    edi,0x60f4aa16
  40554c:	add    al,0xbd
  40554e:	or     al,0xe8
  405550:	fcmovnbe st,st(5)
  405552:	loop   0x405501
  405554:	call   0xe998:0x407f5067
  40555b:	xor    al,0x36
  40555d:	inc    esp
  40555e:	dec    edx
  40555f:	lock stos DWORD PTR es:[edi],eax
  405561:	pxor   mm0,QWORD PTR [edi+0x70fc1a0d]
  405568:	dec    edx
  405569:	call   0x6e85:0xda55f831
  405570:	xor    al,0x6
  405572:	in     eax,dx
  405573:	pop    ebp
  405574:	and    ecx,DWORD PTR [esi]
  405576:	push   edx
  405577:	sbb    edi,edx
  405579:	and    DWORD PTR [edx+0x73],ecx
  40557c:	aas    
  40557d:	fwait
  40557e:	inc    eax
  40557f:	push   ss
  405580:	dec    ebp
  405581:	ret    0x3e2c
  405584:	sbb    ebp,DWORD PTR [ebp-0x620d598a]
  40558a:	pop    esp
  40558b:	push   edx
  40558c:	jle    0x405534
  40558e:	test   al,0x98
  405590:	fcomp  QWORD PTR [esi]
  405592:	dec    ecx
  405593:	xor    al,0x69
  405595:	pop    edx
  405596:	cmp    eax,0xbedada8d
  40559b:	sbb    al,0x72
  40559d:	lods   eax,DWORD PTR ds:[esi]
  40559e:	call   FWORD PTR [eax]
  4055a0:	popa   
  4055a1:	pop    edx
  4055a2:	mov    ds,WORD PTR [edx+0x9a8e271]
  4055a8:	pop    ss
  4055a9:	xor    al,al
  4055ab:	inc    edx
  4055ac:	sbb    esp,0x7e4028f5
  4055b2:	retf   0xbe9e
  4055b5:	push   ebp
  4055b6:	and    ah,BYTE PTR [edi+edx*1-0x72]
  4055ba:	push   eax
  4055bb:	inc    edi
  4055bc:	or     DWORD PTR [esi+0x134c4a77],ebp
  4055c2:	xlat   BYTE PTR ds:[ebx]
  4055c3:	fst    QWORD PTR [edi+0x32]
  4055c6:	inc    edx
  4055c7:	fadd   DWORD PTR [ebp+0x67aef837]
  4055cd:	into   
  4055ce:	xor    eax,0x495f99e3
  4055d3:	imul   BYTE PTR [edi+0x1d51ce9]
  4055d9:	leavew 
  4055db:	dec    ecx
  4055dc:	mov    ecx,ecx
  4055de:	pusha  
  4055df:	push   cs
  4055e0:	sub    eax,0x9833219b
  4055e5:	cmp    ebp,DWORD PTR [ebp+0x2e27301f]
  4055eb:	mov    ch,0x81
  4055ed:	clc    
  4055ee:	repnz fucomip st,st(3)
  4055f1:	lds    ebp,FWORD PTR [ebx-0x660c47a0]
  4055f7:	loope  0x405582
  4055f9:	or     bl,dl
  4055fb:	sub    al,0x78
  4055fd:	push   ds
  4055fe:	out    dx,al
  4055ff:	scas   eax,DWORD PTR es:[edi]
  405600:	jno    0x40562b
  405602:	sub    eax,0x32ba0cab
  405607:	mov    esi,0xecad668d
  40560c:	mov    ds:0x2241497b,eax
  405611:	add    BYTE PTR [edx+edi*8+0xcc6c6bc],bh
  405618:	cmp    edx,esi
  40561a:	pop    edi
  40561b:	std    
  40561c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40561d:	xchg   edi,eax
  40561e:	sub    eax,0xe85db053
  405623:	fistp  QWORD PTR [eax+0x53]
  405626:	pop    esp
  405627:	into   
  405628:	dec    eax
  405629:	cmp    eax,0xc3490824
  40562e:	ret    
  40562f:	arpl   sp,dx
  405631:	lods   eax,DWORD PTR ds:[esi]
  405632:	in     eax,dx
  405633:	dec    eax
  405634:	add    cl,BYTE PTR [edi]
  405636:	mov    al,ds:0x8cdb39d8
  40563b:	in     eax,0xa6
  40563d:	ja     0x4055d7
  40563f:	pop    ebp
  405640:	jl     0x405689
  405642:	sbb    eax,0x5cec8492
  405647:	push   0xffffffc6
  405649:	and    BYTE PTR [edi],bh
  40564b:	cdq    
  40564c:	cwde   
  40564d:	ins    DWORD PTR es:[edi],dx
  40564e:	adc    eax,0x76c1062
  405653:	fild   QWORD PTR [ebp+0x2e]
  405656:	pop    eax
  405657:	stos   DWORD PTR es:[edi],eax
  405658:	and    cl,BYTE PTR [eax-0x690a714d]
  40565e:	add    al,0x81
  405660:	cmp    al,0xaf
  405662:	loop   0x4056de
  405664:	sbb    cl,BYTE PTR [ecx+0x7f]
  405667:	out    0x2c,al
  405669:	mov    bl,0xf6
  40566b:	scas   eax,DWORD PTR es:[edi]
  40566c:	cmp    esi,0x13
  40566f:	inc    edi
  405670:	pop    edx
  405671:	(bad)
  405676:	repnz pop ebp
  405678:	es xchg ebp,eax
  40567a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40567b:	xchg   esi,eax
  40567c:	retf   
  40567d:	inc    ecx
  40567e:	sub    BYTE PTR [edx-0x52c2f94f],ch
  405684:	and    edi,DWORD PTR [ecx]
  405686:	aad    0xfb
  405688:	sub    eax,0x9604ee67
  40568d:	pop    edx
  40568e:	es mov edx,0x3bbfcf6d
  405694:	jne    0x4056b0
  405696:	retf   
  405697:	jmp    0xe81:0x49772cab
  40569e:	cdq    
  40569f:	shr    DWORD PTR [ecx-0x2b],1
  4056a2:	dec    edi
  4056a3:	repnz xor ebx,ebx
  4056a6:	dec    ecx
  4056a7:	mov    esi,0xbe85e3f9
  4056ac:	jbe    0x4056df
  4056ae:	mov    ah,0xc9
  4056b0:	xchg   ebx,eax
  4056b1:	sbb    DWORD PTR [ecx+0x4f],0x29aaacda
  4056b8:	xor    ah,ah
  4056ba:	fninit 
  4056bc:	ret    0xd8ec
  4056bf:	push   ecx
  4056c0:	aaa    
  4056c1:	jle    0x405696
  4056c3:	inc    esp
  4056c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056c5:	test   eax,0x858c2dd0
  4056ca:	sub    esi,DWORD PTR [eax+0x1f]
  4056cd:	add    DWORD PTR [edi],0xffffffd5
  4056d0:	scas   eax,DWORD PTR es:[edi]
  4056d1:	jae    0x4056b8
  4056d3:	push   edx
  4056d4:	or     DWORD PTR [esi-0x20],edi
  4056d7:	or     al,BYTE PTR [esi+0x6b]
  4056da:	pop    ds
  4056db:	test   DWORD PTR [ebx],esi
  4056dd:	mov    cl,0x56
  4056df:	push   ebx
  4056e0:	aam    0xc3
  4056e2:	add    bl,BYTE PTR [edi+0xb99e5fc]
  4056e8:	dec    ebx
  4056e9:	iret   
  4056ea:	(bad)  
  4056eb:	push   ss
  4056ec:	idiv   BYTE PTR [edi+eax*2]
  4056ef:	pusha  
  4056f0:	pop    esp
  4056f1:	pop    ebx
  4056f2:	or     esp,DWORD PTR [esi]
  4056f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f5:	fisub  WORD PTR [esi+0x1a]
  4056f8:	inc    ebp
  4056f9:	mov    eax,0x57b67e56
  4056fe:	pop    esi
  4056ff:	aad    0xb3
  405701:	pop    ds
  405702:	or     eax,DWORD PTR [ebx+0x6278b952]
  405708:	aas    
  405709:	lock fisttp WORD PTR [eax+0x29]
  40570d:	dec    ecx
  40570e:	scas   eax,DWORD PTR es:[edi]
  40570f:	sub    BYTE PTR [eax-0x7e],bl
  405712:	in     al,0xd2
  405714:	cmp    eax,0xdbdd3667
  405719:	or     DWORD PTR [eax],esi
  40571b:	stos   DWORD PTR es:[edi],eax
  40571c:	dec    esp
  40571d:	pop    edi
  40571e:	cmc    
  40571f:	push   esi
  405720:	fidivr DWORD PTR [edi]
  405722:	pop    ecx
  405723:	in     al,dx
  405724:	mov    dh,0x5e
  405726:	cmp    al,0x7f
  405728:	ins    DWORD PTR es:[edi],dx
  405729:	loopne 0x4056e0
  40572b:	daa    
  40572c:	or     ebp,0xffffff82
  40572f:	or     ebp,ebx
  405731:	pop    esi
  405732:	add    eax,0x316a50d2
  405737:	das    
  405738:	push   ss
  405739:	loopne 0x40574c
  40573b:	mov    WORD PTR [ecx+0x32],cs
  40573e:	push   ebp
  40573f:	fist   DWORD PTR [ebx+0x5bacb0a9]
  405745:	iret   
  405746:	or     cl,0xc1
  405749:	sbb    eax,0xab77ae9f
  40574e:	pop    eax
  40574f:	xadd   BYTE PTR [eax],ah
  405752:	mov    eax,ds:0x3f230eea
  405757:	inc    edx
  405758:	data16 icebp 
  40575a:	xor    al,dh
  40575c:	adc    DWORD PTR [ebp+ecx*4-0x1c],ebp
  405760:	test   DWORD PTR [esi],edx
  405762:	pushf  
  405763:	xchg   ebx,eax
  405764:	or     DWORD PTR [esi],ecx
  405766:	inc    esi
  405767:	sbb    ch,dl
  405769:	mov    dl,0xfc
  40576b:	int    0xc0
  40576d:	sbb    al,0x3c
  40576f:	dec    esi
  405770:	(bad)
  405774:	adc    al,0x5
  405776:	(bad)  
  405777:	inc    eax
  405778:	cld    
  405779:	xlat   BYTE PTR ds:[ebx]
  40577a:	outs   dx,BYTE PTR ds:[esi]
  40577b:	mov    bh,0x38
  40577d:	(bad)  
  40577e:	mov    ch,0xb1
  405780:	out    dx,al
  405781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405782:	in     al,0x5
  405784:	adc    DWORD PTR [ecx],esp
  405786:	imul   ebx,DWORD PTR [ecx-0x42],0x12a8a955
  40578d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40578e:	add    dh,BYTE PTR [ebp-0x3e374d56]
  405794:	aam    0x39
  405796:	and    DWORD PTR [edi-0x2b],edi
  405799:	loopne 0x405795
  40579b:	adc    edi,DWORD PTR [eax+0x53]
  40579e:	test   BYTE PTR ss:0xd4559def,0x58
  4057a6:	aad    0x3b
  4057a8:	sbb    BYTE PTR [ebx-0x73],ah
  4057ab:	sub    eax,0xd21af6c9
  4057b0:	inc    eax
  4057b1:	pop    ecx
  4057b2:	gs xchg edi,eax
  4057b4:	pop    ecx
  4057b5:	mov    al,0x6b
  4057b7:	xchg   ebp,eax
  4057b8:	jo     0x40581f
  4057ba:	jnp    0x405787
  4057bc:	nop
  4057bd:	and    BYTE PTR [eax],bl
  4057bf:	dec    eax
  4057c0:	das    
  4057c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057c2:	retf   
  4057c3:	push   esi
  4057c4:	jecxz  0x405788
  4057c6:	aam    0x22
  4057c8:	stos   BYTE PTR es:[edi],al
  4057c9:	adc    al,0x2
  4057cb:	repz inc esp
  4057cd:	mov    DWORD PTR [edx+0x5b0cb5c6],0xf8d63d2d
  4057d7:	jbe    0x4057f8
  4057d9:	lods   al,BYTE PTR ds:[esi]
  4057da:	sbb    dl,BYTE PTR [ecx]
  4057dc:	mov    cl,0x20
  4057de:	imul   esi,DWORD PTR [esi-0x6b299588],0xffffffbd
  4057e5:	and    bh,BYTE PTR [ecx+0x40]
  4057e8:	pop    edi
  4057e9:	push   eax
  4057ea:	dec    edi
  4057eb:	daa    
  4057ec:	push   ds
  4057ed:	lods   al,BYTE PTR ds:[esi]
  4057ee:	adc    ah,BYTE PTR [ebx]
  4057f0:	mov    esi,ebx
  4057f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057f3:	into   
  4057f4:	sti    
  4057f5:	div    DWORD PTR [ecx-0x5040629e]
  4057fb:	retf   
  4057fc:	add    BYTE PTR [edi-0x43],ch
  4057ff:	sub    eax,0x87c321e6
  405804:	xor    eax,0x47f8b3dc
  405809:	mov    edx,0xed8e27f1
  40580e:	push   esp
  40580f:	cdq    
  405810:	jne    0x4057cb
  405812:	push   di
  405814:	jo     0x405839
  405816:	pop    ebp
  405817:	inc    eax
  405818:	ins    BYTE PTR es:[edi],dx
  405819:	mov    esi,0x62014141
  40581e:	out    0xc3,al
  405820:	cmp    eax,0xb5cc27f4
  405825:	push   esi
  405826:	pop    esi
  405827:	mov    al,0x14
  405829:	add    DWORD PTR [edx],edi
  40582b:	clc    
  40582c:	mov    eax,0x295b525a
  405831:	mov    eax,DWORD PTR ds:0xedc94202
  405837:	retf   0x5f5c
  40583a:	pop    esp
  40583b:	mov    esi,0xc4331fb8
  405840:	jno    0x4058a6
  405842:	mov    ebx,0xa3728724
  405847:	ins    BYTE PTR es:[edi],dx
  405848:	bnd jle 0x405823
  40584b:	xor    ebp,edi
  40584d:	scas   al,BYTE PTR es:[edi]
  40584e:	add    al,0x58
  405850:	adc    bl,BYTE PTR [edi+0x6e]
  405853:	jno    0x405887
  405855:	imul   eax,DWORD PTR ds:0x9ab81903,0x16dde8f1
  40585f:	mov    esi,0x8bf6363e
  405864:	mov    ds:0x7ea00737,eax
  405869:	cmp    ch,ah
  40586b:	shl    BYTE PTR [ebx+edx*4+0xa3630c5],0x38
  405873:	push   edi
  405874:	dec    ecx
  405875:	lods   al,BYTE PTR ds:[esi]
  405876:	xor    ebx,DWORD PTR [ebx]
  405878:	callw  0xbe87
  40587c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40587d:	shr    ebx,cl
  40587f:	mov    eax,0x4e2a20df
  405884:	test   al,0x37
  405886:	fisub  WORD PTR [edi+0x507e523d]
  40588c:	std    
  40588d:	rol    BYTE PTR [edx],cl
  40588f:	xor    dh,BYTE PTR [edx-0x1b]
  405892:	sub    BYTE PTR [ebx+0x6f],ch
  405895:	dec    ebx
  405896:	enter  0xca2d,0x3f
  40589a:	xchg   BYTE PTR [ebx],bl
  40589c:	and    DWORD PTR [ecx+0x7cd9a9c2],esi
  4058a2:	xor    ah,BYTE PTR [edx-0x53a688e0]
  4058a8:	xor    ch,bh
  4058aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ab:	mov    eax,ds:0x79d8b732
  4058b0:	and    al,0xc0
  4058b2:	jno    0x4058a0
  4058b4:	add    eax,0x5cae67d0
  4058b9:	enter  0xa550,0xc2
  4058bd:	inc    esi
  4058be:	jl     0x4058ed
  4058c0:	out    dx,eax
  4058c1:	inc    edx
  4058c2:	(bad)  
  4058c3:	mov    ch,0x83
  4058c5:	dec    ebx
  4058c6:	cmp    al,BYTE PTR [ecx-0x4317f53d]
  4058cc:	addr16 adc ah,bh
  4058cf:	mov    ch,0xd1
  4058d1:	jmp    0x4058e5
  4058d3:	and    dl,0xd5
  4058d6:	fimul  DWORD PTR [ebp+ecx*2+0x71aac68f]
  4058dd:	xchg   ebx,eax
  4058de:	inc    ebp
  4058df:	jmp    0x405914
  4058e1:	and    al,dl
  4058e3:	push   0xffffffcf
  4058e5:	popa   
  4058e6:	mov    ebx,0x83ba61bd
  4058eb:	mov    cl,0xaa
  4058ed:	mov    ah,0xd4
  4058ef:	stos   DWORD PTR es:[edi],eax
  4058f0:	xor    BYTE PTR [edi+0x4e],al
  4058f3:	imul   esi,DWORD PTR [ebx-0x28db154c],0x44370958
  4058fd:	dec    cl
  4058ff:	xor    BYTE PTR [ebp+edi*8+0x4a0d61d3],ah
  405906:	and    al,0x18
  405908:	push   esp
  405909:	mov    DWORD PTR [ecx-0x36],esi
  40590c:	sub    edi,DWORD PTR [ebp+0x15c04052]
  405912:	mov    bl,0xa7
  405914:	jge    0x405934
  405916:	imul   ebp,edx,0x3d246327
  40591c:	(bad)  
  40591d:	pop    edi
  40591e:	cmp    DWORD PTR [ebp-0x48939346],esi
  405924:	add    edx,DWORD PTR ds:0x4a720631
  40592a:	or     al,0xa0
  40592c:	sub    eax,0x88ad738a
  405931:	js     0x4058f5
  405933:	and    edx,ebx
  405935:	mov    edx,0xc8939413
  40593a:	(bad)
  40593d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40593e:	iret   
  40593f:	ficomp WORD PTR [edi+0x53b9dbb1]
  405945:	mov    eax,ds:0x5181892a
  40594a:	lea    edi,[esi]
  40594c:	sub    eax,0xdcf125f1
  405951:	cmp    bl,BYTE PTR [edx]
  405953:	lea    esi,[ecx-0x7cba0f09]
  405959:	(bad)
  40595c:	mov    ecx,0xad716490
  405961:	scas   eax,DWORD PTR es:[edi]
  405962:	inc    ebp
  405963:	retf   
  405964:	fcom   QWORD PTR [esi+0xb3eb20e]
  40596a:	aam    0xa8
  40596c:	xor    BYTE PTR [edx],0x9
  40596f:	data16 ss jne 0x40596c
  405973:	pop    ebx
  405974:	push   edx
  405975:	(bad)  
  405977:	mov    dl,0x21
  405979:	int    0xe9
  40597b:	jmp    0x4059ab
  40597d:	ret    0x91e5
  405980:	xchg   esi,eax
  405981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405982:	das    
  405983:	push   eax
  405984:	aas    
  405985:	(bad)  
  405986:	mov    edi,0x9035d254
  40598b:	add    esp,0xf278210d
  405991:	dec    ebp
  405992:	xchg   esi,eax
  405993:	cmp    dh,dh
  405995:	pop    bx
  405997:	xor    BYTE PTR [edx-0x60],bh
  40599a:	repnz hlt 
  40599c:	mov    esp,0x7c02734e
  4059a1:	dec    ebp
  4059a2:	push   es
  4059a3:	pop    es
  4059a4:	mov    bh,BYTE PTR ds:0x8fed3897
  4059aa:	fwait
  4059ab:	cld    
  4059ac:	mov    dh,0x3e
  4059ae:	pop    eax
  4059af:	push   esp
  4059b0:	inc    ebp
  4059b1:	into   
  4059b2:	fldcw  WORD PTR [edi-0x43]
  4059b5:	fcomp  DWORD PTR [edi-0x6570b9c7]
  4059bb:	and    ch,BYTE PTR [edx-0x1a]
  4059be:	xchg   esi,eax
  4059bf:	jns    0x405942
  4059c1:	jmp    0xc41d0467
  4059c6:	adc    eax,0xab713f7f
  4059cb:	not    ah
  4059cd:	out    0x90,eax
  4059cf:	cli    
  4059d0:	and    BYTE PTR [ebp+0x66],bh
  4059d3:	ucomiss xmm2,xmm3
  4059d6:	xchg   BYTE PTR [esp+eax*2],ah
  4059d9:	and    eax,0xf4ebe2bb
  4059de:	in     al,dx
  4059df:	pop    ebp
  4059e0:	outs   dx,DWORD PTR ds:[esi]
  4059e1:	jecxz  0x4059e7
  4059e3:	les    ebx,FWORD PTR [ecx]
  4059e5:	add    eax,0xc1ce8ceb
  4059ea:	loopne 0x405a4a
  4059ec:	pop    ss
  4059ed:	daa    
  4059ee:	pop    ebp
  4059ef:	shl    BYTE PTR [edx+0x61],0x30
  4059f3:	ret    
  4059f4:	fstp   TBYTE PTR [ebx]
  4059f6:	cwde   
  4059f7:	push   ebp
  4059f8:	loope  0x40597e
  4059fa:	leave  
  4059fb:	in     al,dx
  4059fc:	mov    ah,0x3b
  4059fe:	imul   edi,DWORD PTR [ecx+eiz*2-0x19b87ef3],0xffffffb0
  405a06:	jbe    0x405a0a
  405a08:	cmp    al,0x56
  405a0a:	cmp    eax,0x999c6148
  405a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a10:	jecxz  0x405a34
  405a12:	cld    
  405a13:	sbb    eax,DWORD PTR [edi]
  405a15:	shr    BYTE PTR [edi+0x2e],cl
  405a18:	and    ebx,DWORD PTR [esi-0x56cfd2df]
  405a1e:	adc    ecx,DWORD PTR [ecx]
  405a20:	sbb    ch,ch
  405a22:	aaa    
  405a23:	fwait
  405a24:	cmp    edx,esp
  405a26:	sbb    BYTE PTR [edi],dl
  405a28:	xor    al,0xb4
  405a2a:	jp     0x4059da
  405a2c:	ret    0x833b
  405a2f:	dec    esi
  405a30:	dec    edx
  405a31:	sub    eax,0xf0d31a9a
  405a36:	pop    esi
  405a37:	js     0x4059e4
  405a39:	in     al,dx
  405a3a:	xchg   DWORD PTR [edi],esi
  405a3c:	lea    ebp,[ebp+edx*4+0x129fb9d3]
  405a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a44:	ficomp DWORD PTR [ebx]
  405a46:	xor    bl,BYTE PTR [edx-0x4f]
  405a49:	hlt    
  405a4a:	inc    ebx
  405a4b:	ins    DWORD PTR es:[edi],dx
  405a4c:	inc    ecx
  405a4d:	ret    0xf19
  405a50:	out    0x4b,al
  405a52:	adc    dh,bl
  405a54:	inc    ebx
  405a55:	test   esi,esp
  405a57:	pop    ss
  405a58:	or     esi,edx
  405a5a:	repz sbb ch,BYTE PTR [eax+0x4b]
  405a5e:	(bad)  
  405a5f:	int    0x9e
  405a61:	icebp  
  405a62:	jo     0x405ad8
  405a64:	ja     0x4059eb
  405a66:	(bad)  
  405a67:	not    BYTE PTR [esi-0xa]
  405a6a:	sti    
  405a6b:	sub    BYTE PTR [ebx+0x2e],dh
  405a6e:	cmp    al,bh
  405a70:	fwait
  405a71:	jo     0x405a79
  405a73:	inc    ebx
  405a74:	fcmovbe st,st(4)
  405a76:	loop   0x405a92
  405a78:	dec    eax
  405a79:	mov    BYTE PTR [esi+0x7f],0xa2
  405a7d:	cli    
  405a7e:	push   edx
  405a7f:	lods   al,BYTE PTR ds:[si]
  405a81:	imul   esi,edx,0xfffffff6
  405a84:	push   ebx
  405a85:	stos   BYTE PTR es:[edi],al
  405a86:	mov    bh,0xe1
  405a88:	xchg   esp,eax
  405a89:	enter  0xb8c3,0x32
  405a8d:	ss jp  0x405aec
  405a90:	xchg   ebx,eax
  405a91:	and    al,0x68
  405a93:	xchg   edi,eax
  405a94:	mov    esi,0x7f63f3d5
  405a99:	arpl   WORD PTR ds:0xe77937de,bx
  405a9f:	pop    es
  405aa0:	inc    eax
  405aa1:	dec    ebx
  405aa2:	dec    eax
  405aa3:	push   ss
  405aa4:	mov    ds:0xecc108f3,eax
  405aa9:	sub    dh,dl
  405aab:	imul   esi,DWORD PTR [esi+0x6e],0xe627f264
  405ab2:	xchg   ebp,eax
  405ab3:	mov    edi,0x5a3db1c4
  405ab8:	sbb    eax,0x67
  405abb:	mov    bl,0x76
  405abd:	and    eax,0x1618fe8c
  405ac2:	ss into 
  405ac4:	imul   ebp,esp,0x6e
  405ac7:	cmp    bl,BYTE PTR [ebp+edi*1-0x2910695e]
  405ace:	dec    ebx
  405acf:	fxch   st(2)
  405ad1:	stc    
  405ad2:	test   al,0xaf
  405ad4:	fdivr  DWORD PTR [eax+esi*4+0x7901db50]
  405adb:	push   cs
  405adc:	pop    ds
  405add:	mov    DWORD PTR [ecx-0x25],eax
  405ae0:	mov    al,0x71
  405ae2:	and    al,0x48
  405ae4:	sub    BYTE PTR [esi],bh
  405ae6:	lea    ebx,[esp+ebp*8+0x7e31d5a]
  405aed:	push   0x51
  405aef:	sbb    ebp,DWORD PTR ds:0x9ba87f36
  405af5:	push   ss
  405af6:	push   es
  405af7:	(bad)  
  405af8:	ficom  WORD PTR [edi+esi*2-0x592d9d54]
  405aff:	push   edx
  405b00:	adc    BYTE PTR ds:0x18a82c3e,dh
  405b06:	mov    ah,0xf2
  405b08:	(bad)  
  405b09:	jns    0x405ab3
  405b0b:	sbb    bh,BYTE PTR [eax+esi*1-0x161c52aa]
  405b12:	cmc    
  405b13:	daa    
  405b14:	imul   edx,DWORD PTR [edx],0x2de8005c
  405b1a:	(bad)  
  405b1b:	nop
  405b1c:	hlt    
  405b1d:	mov    esi,0x721eb639
  405b22:	rcr    BYTE PTR [eax+eiz*1-0x20],1
  405b26:	pop    esp
  405b27:	dec    ebx
  405b28:	out    dx,eax
  405b29:	cmp    BYTE PTR [ebx],0x7b
  405b2c:	and    eax,ebp
  405b2e:	or     edx,DWORD PTR [eax]
  405b30:	pop    ecx
  405b31:	retf   
  405b32:	inc    esi
  405b33:	mov    ds:0xa0427152,eax
  405b38:	imul   DWORD PTR [eax+0x2b77efec]
  405b3e:	pop    esi
  405b3f:	jns    0x405b10
  405b41:	hlt    
  405b42:	push   ss
  405b43:	mov    cl,0x84
  405b45:	sbb    edi,ecx
  405b47:	push   edi
  405b48:	fld    TBYTE PTR [esi]
  405b4a:	(bad)  
  405b4b:	cld    
  405b4c:	dec    ebp
  405b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b4e:	fs pop edx
  405b50:	jmp    0x5e469ebb
  405b55:	mov    BYTE PTR [edi],ch
  405b57:	loope  0x405b2e
  405b59:	push   eax
  405b5b:	sbb    bl,BYTE PTR ds:0xf9c22a9
  405b61:	adc    DWORD PTR [ebx+esi*4+0x6a4a1d0a],edi
  405b68:	neg    BYTE PTR [ebx]
  405b6a:	sub    eax,0x835814c1
  405b6f:	js     0x405b01
  405b71:	retf   0x5966
  405b74:	addr16 mov cs:0x6876,eax
  405b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b7a:	mov    dh,0x59
  405b7c:	sbb    ebx,ebx
  405b7e:	adc    al,0x34
  405b80:	mov    al,0x81
  405b82:	(bad)  
  405b84:	and    DWORD PTR [esi+0x55],esi
  405b87:	jnp    0x405b1b
  405b89:	adc    ah,BYTE PTR [edx]
  405b8b:	inc    ebx
  405b8c:	iret   
  405b8d:	into   
  405b8e:	pop    edi
  405b8f:	daa    
  405b90:	mov    WORD PTR [ecx],ss
  405b92:	cs pop esp
  405b94:	imul   eax,DWORD PTR [eax+0x66a26dc1],0xe26575e1
  405b9e:	or     ch,BYTE PTR ds:0x79a99c70
  405ba4:	imul   ebx,DWORD PTR [edi+0x6a],0xffffff8a
  405ba8:	pop    ss
  405ba9:	(bad)
  405bac:	cdq    
  405bad:	int3   
  405bae:	pop    edi
  405baf:	shl    DWORD PTR [edx],cl
  405bb1:	dec    esp
  405bb2:	ret    
  405bb3:	(bad)  
  405bb4:	or     BYTE PTR [ebx+0x1897b214],dh
  405bba:	jae    0x405c0d
  405bbc:	cdq    
  405bbd:	(bad)  
  405bbe:	xchg   ebp,eax
  405bbf:	sub    cl,ah
  405bc1:	cli    
  405bc2:	push   eax
  405bc3:	jb     0x405c27
  405bc5:	aam    0xf0
  405bc7:	cld    
  405bc8:	les    ebx,FWORD PTR [ecx-0x78a56a04]
  405bce:	add    BYTE PTR [edi],ch
  405bd0:	outs   dx,BYTE PTR ds:[esi]
  405bd1:	jmp    0xe636:0x41bfe00e
  405bd8:	xchg   edx,eax
  405bd9:	pushf  
  405bda:	ror    DWORD PTR [ebp-0x37407673],cl
  405be0:	jge    0x405be2
  405be2:	inc    esp
  405be3:	ror    BYTE PTR [ebx+0x8],1
  405be6:	out    dx,al
  405be7:	jne    0x405bfd
  405be9:	sub    al,0x82
  405beb:	and    BYTE PTR [edi],ch
  405bed:	lds    esp,FWORD PTR [edx]
  405bef:	int    0x64
  405bf1:	add    esi,esi
  405bf3:	dec    ebp
  405bf4:	icebp  
  405bf5:	jae    0x405c22
  405bf7:	leave  
  405bf8:	addr16 mov esi,0x9e7615b5
  405bfe:	in     eax,0x32
  405c00:	fdiv   DWORD PTR [ebx]
  405c02:	in     eax,0xd5
  405c04:	or     DWORD PTR [ebx+0x7b921018],esi
  405c0a:	mov    al,ds:0x762b36ce
  405c0f:	gs mov edi,eax
  405c12:	ret    0xe638
  405c15:	pop    ds
  405c16:	and    esp,esi
  405c18:	push   esp
  405c19:	fild   WORD PTR [ebx-0x53]
  405c1c:	and    al,0xc2
  405c1e:	pop    esi
  405c1f:	push   0xfffffff8
  405c21:	sti    
  405c22:	call   0xabac:0x573fe1f8
  405c29:	pop    ebp
  405c2a:	push   edi
  405c2b:	inc    ebx
  405c2c:	or     edx,DWORD PTR [eax+0x3db5dbdf]
  405c32:	sub    eax,0xd061ce3c
  405c37:	int    0xaa
  405c39:	mov    bh,0xd8
  405c3b:	xor    DWORD PTR [ebp+0x36],ebp
  405c3e:	jmp    0x3109b8ce
  405c43:	or     DWORD PTR [eax],esi
  405c45:	std    
  405c46:	aaa    
  405c47:	fnstsw WORD PTR [ebx]
  405c49:	addr16 popa 
  405c4b:	push   edi
  405c4c:	ret    0x799
  405c4f:	std    
  405c50:	fs sbb bl,al
  405c53:	adc    eax,0x17a2e9ac
  405c58:	adc    DWORD PTR [esi],esi
  405c5a:	in     eax,0x7e
  405c5c:	mov    cl,ch
  405c5e:	xchg   esi,eax
  405c5f:	imul   dx,WORD PTR [edi-0x55],0x1d
  405c64:	jmp    0x8d58:0x61845d65
  405c6b:	adc    DWORD PTR ss:[esi+eax*2+0x1c91a536],ebp
  405c73:	lock cmp al,0x93
  405c76:	loop   0x405c70
  405c78:	mov    eax,0xd39a68b4
  405c7d:	jge    0x405c30
  405c7f:	jns    0x405ca9
  405c81:	cmp    ah,0x86
  405c84:	aas    
  405c85:	lahf   
  405c86:	pusha  
  405c87:	sbb    edx,DWORD PTR [ecx-0x4757725b]
  405c8d:	imul   esi,DWORD PTR [edx],0xf6776dab
  405c93:	push   ds
  405c94:	fmul   QWORD PTR [ecx-0x47014e5a]
  405c9a:	sbb    ah,cl
  405c9c:	lods   al,BYTE PTR ds:[esi]
  405c9d:	mov    ebp,0x73ed1f
  405ca2:	fnstcw WORD PTR [ecx]
  405ca4:	fdiv   st,st(5)
  405ca6:	xor    al,0xaa
  405ca8:	cmp    eax,0xfd5625b4
  405cad:	pop    ebx
  405cae:	mov    al,0x3b
  405cb0:	inc    ebx
  405cb1:	ins    DWORD PTR es:[edi],dx
  405cb2:	push   ebx
  405cb3:	fnstsw WORD PTR [ecx+edi*2+0x143323e]
  405cba:	push   edx
  405cbb:	mov    eax,0x6c8c9bd9
  405cc0:	push   cs
  405cc1:	cmp    bl,al
  405cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cc4:	sbb    eax,0xf1da0757
  405cc9:	ss cdq 
  405ccb:	out    dx,eax
  405ccc:	xchg   esp,eax
  405ccd:	inc    esp
  405cce:	xor    cl,BYTE PTR [ecx+0x78]
  405cd1:	cmp    esi,DWORD PTR [edx+0x3288be46]
  405cd7:	leave  
  405cd8:	in     al,0x1
  405cda:	mov    BYTE PTR [ebx+0x539acd3f],dh
  405ce0:	mov    bh,0xc0
  405ce2:	sub    BYTE PTR [edi],al
  405ce4:	inc    edi
  405ce5:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  405ce7:	dec    ebx
  405ce8:	(bad)  [eax-0x39]
  405ceb:	cdq    
  405cec:	sbb    ch,BYTE PTR [edi-0xee079ea]
  405cf2:	sbb    eax,0x9ba229ed
  405cf7:	lods   eax,DWORD PTR ds:[esi]
  405cf8:	dec    ebx
  405cf9:	loopne 0x405d27
  405cfb:	adc    BYTE PTR [ebp-0x163befad],bl
  405d01:	fiadd  DWORD PTR [edi]
  405d03:	and    eax,0x6d95acb2
  405d08:	ret    0xebfd
  405d0b:	mov    cl,0x1b
  405d0d:	imul   edi,DWORD PTR [edx+0x2f],0x52
  405d11:	mov    WORD PTR [ebp-0x7c],es
  405d14:	rcl    edx,cl
  405d16:	outs   dx,DWORD PTR ds:[esi]
  405d17:	bound  ecx,QWORD PTR [ebx+ebx*1+0x21d56f36]
  405d1e:	mov    ds:0x5d48df7f,al
  405d23:	adc    cl,BYTE PTR [esi+0x2e665c5a]
  405d29:	xor    al,0xcd
  405d2b:	aaa    
  405d2c:	es ja  0x405cb8
  405d2f:	mov    esp,0x980ceb2a
  405d34:	mov    cl,0xf3
  405d36:	sar    BYTE PTR [edx],1
  405d38:	jp     0x405d9f
  405d3a:	sbb    ecx,DWORD PTR [eax]
  405d3c:	cmp    DWORD PTR [ebx],ecx
  405d3e:	addr16 adc eax,0xbff6b408
  405d44:	call   0xf18dddaf
  405d49:	jmp    FWORD PTR [eax+0x6f]
  405d4c:	cmp    BYTE PTR [eax+0x5e],ch
  405d4f:	and    sp,si
  405d52:	addr16 xchg ecx,eax
  405d54:	lds    edi,FWORD PTR [edx+0x1f]
  405d57:	pop    edi
  405d58:	lahf   
  405d59:	inc    edi
  405d5a:	nop
  405d5b:	jle    0x405d2e
  405d5d:	sbb    al,BYTE PTR [eax-0x7f7012bb]
  405d63:	addr16 jno 0x405d0e
  405d66:	mov    bh,0x32
  405d68:	out    0xdf,eax
  405d6a:	(bad)  
  405d6c:	shr    DWORD PTR [esi-0x753b8a6b],0x7f
  405d73:	jnp    0x405db1
  405d75:	and    ecx,esp
  405d77:	jne    0x405d99
  405d79:	jecxz  0x405d22
  405d7b:	ror    bl,1
  405d7d:	mov    esp,esi
  405d7f:	pop    esi
  405d80:	test   eax,0xc5982043
  405d85:	sub    al,BYTE PTR [edi+0x1a]
  405d88:	repz ds sti 
  405d8b:	repz xchg esp,eax
  405d8d:	jecxz  0x405d1e
  405d8f:	and    BYTE PTR [eax-0x1ae1c152],dh
  405d95:	adc    DWORD PTR [edi],ebp
  405d97:	adc    BYTE PTR [ebp+0x3b202b31],dh
  405d9d:	dec    eax
  405d9e:	int    0xb8
  405da0:	iret   
  405da1:	mov    DWORD PTR [edx+ebx*4],edi
  405da4:	dec    edi
  405da5:	adc    bl,BYTE PTR [ebp+0x43]
  405da8:	ins    DWORD PTR es:[edi],dx
  405da9:	addr16 pop esi
  405dab:	or     ecx,DWORD PTR [ecx-0x2206dcdd]
  405db1:	sbb    DWORD PTR [edi-0x41],edi
  405db4:	xchg   BYTE PTR [ecx-0x2ff94fa8],al
  405dba:	(bad)  [ebx]
  405dbc:	push   0xffffff9b
  405dbe:	mov    eax,ds:0x846a3a62
  405dc3:	push   eax
  405dc4:	fs pop ecx
  405dc6:	jno    0x405dd2
  405dc8:	shr    cl,cl
  405dca:	fiadd  DWORD PTR [edx+0xc2780d1]
  405dd0:	pushf  
  405dd1:	test   DWORD PTR [ecx-0xe8b8d44],eax
  405dd7:	xchg   BYTE PTR ds:0xfafded1e,dl
  405ddd:	pop    ss
  405dde:	cmp    dl,bh
  405de0:	(bad)  
  405de1:	cli    
  405de2:	push   edx
  405de3:	mov    bh,0x17
  405de5:	test   BYTE PTR [ecx-0x391fd2c2],dh
  405deb:	stos   DWORD PTR es:[edi],eax
  405dec:	adc    al,0xa7
  405dee:	jl     0x405db5
  405df0:	std    
  405df1:	cld    
  405df2:	sbb    dl,BYTE PTR [eax+0x67]
  405df5:	daa    
  405df6:	jmp    0x405dc5
  405df8:	loope  0x405e66
  405dfa:	pop    ecx
  405dfb:	or     ebp,DWORD PTR ds:[esi+ecx*2]
  405dff:	fadd   st(1),st
  405e01:	js     0x405dac
  405e03:	push   esi
  405e04:	mov    ebx,0x3223de2
  405e09:	pop    ds
  405e0a:	clc    
  405e0b:	loop   0x405e3b
  405e0d:	loopne 0x405e6e
  405e0f:	adc    edi,DWORD PTR [ecx+eiz*2+0x482e0b05]
  405e16:	out    dx,al
  405e17:	ds and al,0xb3
  405e1a:	sub    eax,0x6a2ca051
  405e1f:	jecxz  0x405e50
  405e21:	fwait
  405e22:	ds cwde 
  405e24:	sub    eax,0x631a78bb
  405e29:	or     al,0xa6
  405e2b:	jg     0x405e4f
  405e2d:	cmp    ch,BYTE PTR [edi-0x3275d2b6]
  405e33:	jecxz  0x405e3a
  405e35:	pushf  
  405e36:	pusha  
  405e37:	bound  ecx,QWORD PTR [edx-0x4d6266c9]
  405e3d:	call   0x61fa:0x97aab8fe
  405e44:	sti    
  405e45:	popf   
  405e46:	adc    al,0xb4
  405e48:	fstp   TBYTE PTR [ecx+0x2a]
  405e4b:	push   esi
  405e4c:	std    
  405e4d:	xor    BYTE PTR [ebx+0x7a],al
  405e50:	xor    dh,BYTE PTR ds:0x6c9d4f2d
  405e56:	xchg   bh,ch
  405e58:	adc    DWORD PTR [ecx-0x1b],ebx
  405e5b:	icebp  
  405e5c:	in     eax,0x7a
  405e5e:	vpmaddwd xmm0,xmm0,xmm1
  405e62:	and    DWORD PTR [eax+0x5c4b13b0],edi
  405e68:	mov    ah,0x2c
  405e6a:	ss in  al,0xc0
  405e6d:	outs   dx,BYTE PTR ds:[esi]
  405e6e:	leave  
  405e6f:	int3   
  405e70:	mov    ebx,DWORD PTR [ecx-0x35]
  405e73:	inc    edx
  405e74:	(bad)  
  405e75:	hlt    
  405e76:	sahf   
  405e77:	jge    0x405ed5
  405e79:	dec    ecx
  405e7b:	out    dx,eax
  405e7c:	sbb    BYTE PTR [eax+0x461723c0],bl
  405e82:	std    
  405e83:	cmp    eax,0x3e0b3447
  405e88:	das    
  405e89:	cwde   
  405e8a:	test   eax,0x9cd8c225
  405e8f:	daa    
  405e90:	jecxz  0x405e22
  405e92:	dec    ecx
  405e93:	popf   
  405e94:	in     eax,dx
  405e95:	cmc    
  405e96:	lahf   
  405e97:	mov    DWORD PTR [ebx],ecx
  405e99:	push   esi
  405e9a:	inc    eax
  405e9b:	dec    edi
  405e9c:	cwde   
  405e9d:	imul   BYTE PTR [esi+0x49]
  405ea0:	fisttp WORD PTR [eax]
  405ea2:	push   ecx
  405ea3:	pop    edx
  405ea4:	mov    edx,0xb9e25c4a
  405ea9:	pop    esi
  405eaa:	test   eax,0x973effbf
  405eaf:	fcmovu st,st(2)
  405eb1:	scas   al,BYTE PTR es:[edi]
  405eb2:	loop   0x405e6d
  405eb4:	cmp    DWORD PTR [ecx+0x66],edi
  405eb7:	jecxz  0x405e62
  405eb9:	dec    ecx
  405eba:	and    DWORD PTR [eax+ecx*8-0x4c369128],edi
  405ec1:	out    0xdc,eax
  405ec3:	rol    BYTE PTR [edi*8-0x3049723c],cl
  405eca:	xchg   esp,eax
  405ecb:	cs cs rcl bh,cl
  405ecf:	mov    esp,0x4c4a0a2
  405ed4:	mov    al,ds:0x2059fcd
  405ed9:	dec    esi
  405eda:	sub    edx,esi
  405edc:	ja     0x405f0a
  405ede:	jge    0x405f3a
  405ee0:	mov    ah,0x9d
  405ee2:	and    eax,DWORD PTR [esi-0x35]
  405ee5:	sub    DWORD PTR [ebx+eiz*1+0x6415b77],eax
  405eec:	cmp    al,0x1f
  405eee:	xor    cl,cl
  405ef0:	call   0xdbd09dcc
  405ef5:	retf   0xad5c
  405ef8:	in     al,dx
  405ef9:	(bad)  
  405efa:	sub    bl,BYTE PTR [ebx-0x3f]
  405efd:	xor    edx,DWORD PTR [edi]
  405eff:	fiadd  DWORD PTR ss:[edi+eax*8+0x336e5184]
  405f07:	add    BYTE PTR [eax+0x21],dh
  405f0a:	add    dh,bh
  405f0c:	push   eax
  405f0d:	arpl   bp,si
  405f0f:	mov    BYTE PTR [eax],dl
  405f11:	add    al,BYTE PTR ds:0xd8992274
  405f17:	add    eax,0x72481c79
  405f1c:	repnz imul esi,ecx,0xccfebf20
  405f23:	cmp    BYTE PTR ds:0xfec4c8f9,dl
  405f29:	addr16 and al,cl
  405f2c:	int3   
  405f2d:	sub    dh,BYTE PTR ds:0x4d281b85
  405f33:	sub    ebx,DWORD PTR [edx-0xf]
  405f36:	into   
  405f37:	mov    ecx,gs
  405f39:	mov    edi,0x82f0138c
  405f3e:	xchg   bl,bl
  405f40:	outs   dx,BYTE PTR ds:[esi]
  405f41:	shl    BYTE PTR ds:0x60a93528,1
  405f47:	scas   eax,DWORD PTR es:[edi]
  405f48:	jae    0x405f70
  405f4a:	mov    esi,edx
  405f4c:	aas    
  405f4d:	and    edi,ebp
  405f4f:	and    DWORD PTR [esi+0x13],esp
  405f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f53:	dec    edx
  405f54:	mov    al,0xb9
  405f56:	std    
  405f57:	sub    al,0x6e
  405f59:	test   DWORD PTR [edi],eax
  405f5b:	sbb    ebx,DWORD PTR [ebp+0x6bc6d7ce]
  405f61:	daa    
  405f62:	mov    cl,0xca
  405f64:	xchg   DWORD PTR [edx+0xb9f7132],edi
  405f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f6b:	inc    esp
  405f6c:	je     0x405f62
  405f6e:	or     BYTE PTR [esp+edi*8],0x8b
  405f72:	sbb    eax,0x62a78488
  405f77:	pop    ebx
  405f78:	sub    BYTE PTR [eax],dl
  405f7a:	inc    esi
  405f7b:	adc    ebp,edx
  405f7d:	fidiv  WORD PTR [edx]
  405f7f:	jns    0x405f80
  405f81:	push   0xffffffb0
  405f83:	inc    esp
  405f84:	sbb    eax,0xf847155a
  405f89:	dec    ecx
  405f8a:	dec    eax
  405f8b:	jns    0x405ff3
  405f8d:	aaa    
  405f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f8f:	fisub  DWORD PTR [esi+0x1]
  405f92:	imul   ebx,DWORD PTR [eax],0xa4b760b0
  405f98:	call   0xe11da34d
  405f9d:	dec    ebp
  405f9e:	lods   al,BYTE PTR ds:[esi]
  405f9f:	cmp    cl,cl
  405fa1:	out    0x7e,eax
  405fa3:	and    BYTE PTR [ebx+0x65d04b60],ah
  405fa9:	fld    TBYTE PTR [edx+0x68]
  405fac:	mov    ds:0xcb9a6dc0,eax
  405fb1:	pop    ds
  405fb2:	sti    
  405fb3:	pop    ss
  405fb4:	sbb    al,0xc0
  405fb6:	push   ds
  405fb7:	push   DWORD PTR ds:0x831fae18
  405fbd:	into   
  405fbe:	and    BYTE PTR [ecx+0x56],dl
  405fc1:	(bad)  
  405fc2:	mov    cl,0x7a
  405fc4:	mov    ebx,0x83d076f9
  405fc9:	dec    edi
  405fca:	dec    edi
  405fcb:	sbb    ecx,esp
  405fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fce:	push   eax
  405fcf:	loop   0x405fe6
  405fd1:	shl    eax,cl
  405fd3:	mov    eax,ds:0xff27cf19
  405fd8:	jno    0x405f5e
  405fda:	xchg   ebp,eax
  405fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fdc:	push   ebx
  405fdd:	loope  0x40600e
  405fdf:	or     BYTE PTR [ebx-0x59c65e0],cl
  405fe5:	inc    ebx
  405fe6:	jecxz  0x40604d
  405fe8:	(bad)  
  405fe9:	and    BYTE PTR es:[ecx+0x2e535c1f],dl
  405ff0:	lods   eax,DWORD PTR ds:[esi]
  405ff1:	(bad)  
  405ff2:	ret    0xbb46
  405ff5:	popf   
  405ff6:	and    eax,0x3bd3b344
  405ffb:	inc    ebx
  405ffc:	jae    0x405fb4
  405ffe:	loopne 0x406068
  406000:	sbb    DWORD PTR [eax+esi*4],ecx
  406003:	xchg   esi,eax
  406004:	repz push eax
  406006:	pop    edx
  406007:	popa   
  406008:	nop
  406009:	add    eax,0x6d
  40600c:	push   eax
  40600d:	mov    esp,0x23030a60
  406012:	lahf   
  406013:	xor    eax,0xe3eee12e
  406018:	sub    edx,esi
  40601a:	idiv   DWORD PTR [edx+0x727cc314]
  406020:	cs jne 0x405ff7
  406023:	jbe    0x40607d
  406025:	adc    eax,0x5b8a89f4
  40602a:	sub    al,0x1f
  40602c:	xor    esp,esp
  40602e:	sub    al,0x8
  406030:	cmp    eax,0xfc327c45
  406035:	jbe    0x406037
  406037:	cmp    al,0xeb
  406039:	pushf  
  40603a:	pop    eax
  40603b:	or     DWORD PTR [ecx+0x39],0xfffffff4
  40603f:	dec    esp
  406040:	fdiv   DWORD PTR [esi-0x51]
  406043:	scas   al,BYTE PTR es:[edi]
  406044:	mov    DWORD PTR [ebp+0x7ac62566],ebp
  40604a:	daa    
  40604b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40604c:	mov    ah,0x17
  40604e:	sahf   
  40604f:	aam    0x46
  406051:	jmp    0x40604a
  406053:	out    dx,eax
  406054:	cwde   
  406055:	mov    al,0x5f
  406057:	ja     0x40603a
  406059:	jl     0x406087
  40605b:	push   ecx
  40605c:	retf   0x91ee
  40605f:	add    DWORD PTR [ebx],esi
  406061:	sbb    ecx,esi
  406063:	sar    BYTE PTR [ebx],1
  406065:	mov    eax,DWORD PTR [ecx-0xf]
  406068:	or     bl,BYTE PTR gs:[ebx+0x1dfccce]
  40606f:	loopne 0x406090
  406071:	xor    esp,DWORD PTR [eax+0x482a8c1c]
  406077:	pop    ds
  406078:	popf   
  406079:	into   
  40607a:	inc    esp
  40607b:	aas    
  40607c:	imul   ebp,DWORD PTR [eax+0x5239b665],0xffffffb1
  406083:	stos   DWORD PTR es:[edi],eax
  406084:	jmp    0xe75cca52
  406089:	int3   
  40608a:	std    
  40608b:	addr16 ror al,1
  40608e:	push   ss
  40608f:	mov    DWORD PTR [edx],ecx
  406091:	aad    0x7f
  406093:	lods   eax,DWORD PTR cs:[esi]
  406095:	in     al,0x89
  406097:	jmp    0x6e865daa
  40609c:	xor    esp,ebp
  40609e:	fcomp  st(6)
  4060a0:	xor    eax,0x8e175924
  4060a5:	sbb    BYTE PTR [ecx],bh
  4060a7:	sahf   
  4060a8:	outs   dx,DWORD PTR ds:[esi]
  4060a9:	popf   
  4060aa:	sbb    BYTE PTR [edx-0xf5acc06],bl
  4060b0:	jo     0x4060f4
  4060b2:	add    DWORD PTR [ebp+0x70],edx
  4060b5:	pop    eax
  4060b6:	sub    DWORD PTR [edx-0x1de00f6a],ecx
  4060bc:	je     0x4060e9
  4060be:	inc    edi
  4060bf:	push   ds
  4060c0:	test   al,0xb6
  4060c2:	mov    ebp,0x8d6184c5
  4060c7:	popa   
  4060c8:	call   0x33b9:0x2f0cd985
  4060cf:	or     BYTE PTR ds:0xf977358,dl
  4060d5:	out    0xda,eax
  4060d7:	xchg   edi,eax
  4060d8:	inc    eax
  4060d9:	popa   
  4060da:	jb     0x40612c
  4060dc:	out    0xc2,al
  4060de:	stos   DWORD PTR es:[edi],eax
  4060df:	xchg   esi,eax
  4060e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060e1:	ret    0x4672
  4060e4:	lods   eax,DWORD PTR ds:[esi]
  4060e5:	hlt    
  4060e6:	mov    edx,0xf2196cad
  4060eb:	outs   dx,DWORD PTR ds:[esi]
  4060ec:	jns    0x406159
  4060ee:	fist   WORD PTR [ebp+0x5b2c4b3b]
  4060f4:	rcl    DWORD PTR [edi],0x89
  4060f7:	add    bh,ah
  4060f9:	pop    es
  4060fa:	mov    dl,0xba
  4060fc:	push   0x75
  4060fe:	push   0x5f
  406100:	sbb    BYTE PTR [edx+0x4b],bl
  406103:	adc    al,0x9f
  406105:	(bad)  
  406106:	cld    
  406107:	cmp    eax,0xcf02bdcd
  40610c:	mov    ecx,0x10abdfbf
  406111:	out    0x2c,eax
  406113:	neg    esi
  406115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406116:	sub    DWORD PTR [edi+ebx*8-0x80],eax
  40611a:	mov    ecx,0x64931274
  40611f:	call   0x4322b07e
  406124:	cld    
  406125:	ds fwait
  406127:	cmp    BYTE PTR [ecx+edx*1-0x2fcde2f3],ch
  40612e:	out    0x54,al
  406130:	sbb    eax,DWORD PTR [ebx]
  406132:	pop    ss
  406133:	add    al,al
  406135:	es cmp al,0xb1
  406138:	or     DWORD PTR [edi+0x6c],ecx
  40613b:	fwait
  40613c:	loop   0x4060e4
  40613e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40613f:	push   ecx
  406140:	pop    ss
  406141:	add    DWORD PTR [ecx-0x4ab65f5a],ebx
  406147:	pop    ebp
  406148:	popa   
  406149:	shl    DWORD PTR [esi-0x25e1949c],0xa0
  406150:	mov    al,ds:0x2489d88a
  406155:	aam    0x46
  406157:	sub    esp,DWORD PTR [edx+ecx*1]
  40615a:	sub    ebp,DWORD PTR [edi+eiz*1+0x3da7d8f0]
  406161:	ins    BYTE PTR es:[edi],dx
  406162:	in     al,0x3c
  406164:	bound  ebx,QWORD PTR [ecx+0x19]
  406167:	repnz mov dl,0x1a
  40616a:	ins    BYTE PTR es:[edi],dx
  40616b:	xor    eax,0xd08b46c4
  406170:	xchg   edi,eax
  406171:	pusha  
  406172:	sbb    ch,ah
  406174:	repnz add BYTE PTR [ebx],bl
  406177:	lahf   
  406178:	lods   eax,DWORD PTR ds:[esi]
  406179:	aad    0xbb
  40617b:	repnz xor eax,0xa7291fb3
  406181:	ror    DWORD PTR [edx+0x28],cl
  406184:	test   cl,bl
  406186:	je     0x4061d9
  406188:	pushf  
  406189:	jmp    0x4061a2
  40618b:	stos   DWORD PTR es:[edi],eax
  40618c:	mov    esp,0x8f332513
  406191:	pusha  
  406192:	mov    eax,ds:0x8270d6cd
  406197:	psraw  mm6,QWORD PTR [ebx+0x5c]
  40619b:	xchg   esi,ebx
  40619d:	ds cs jns 0x406220
  4061a1:	xchg   ecx,eax
  4061a2:	mul    DWORD PTR ds:[esi]
  4061a5:	daa    
  4061a6:	xlat   BYTE PTR ds:[ebx]
  4061a7:	xchg   edx,esp
  4061a9:	pop    esi
  4061aa:	cmc    
  4061ab:	cmp    ebx,edx
  4061ad:	cmova  esp,DWORD PTR [ebx]
  4061b0:	out    0x5f,eax
  4061b2:	sbb    al,0xeb
  4061b4:	jae    0x406151
  4061b6:	push   edx
  4061b7:	xor    BYTE PTR [ecx],0x90
  4061ba:	and    eax,0xe46d234b
  4061bf:	cmc    
  4061c0:	or     BYTE PTR [eax+0x36],dl
  4061c3:	lods   al,BYTE PTR ds:[esi]
  4061c4:	icebp  
  4061c5:	dec    esp
  4061c6:	jle    0x406196
  4061c8:	dec    edx
  4061c9:	sbb    dl,bl
  4061cb:	dec    ebp
  4061cc:	(bad)  
  4061ce:	mov    esi,0x1928ee78
  4061d3:	fcom   st(5)
  4061d5:	sbb    DWORD PTR [eax+0x73aa87d],0x4695f66d
  4061df:	or     DWORD PTR [eax-0x74],0x31
  4061e3:	mov    DWORD PTR [esi+0x3bf48bb0],edx
  4061e9:	inc    ebx
  4061ea:	stos   DWORD PTR es:[edi],eax
  4061eb:	push   edi
  4061ec:	mov    dh,0x39
  4061ee:	mov    es,WORD PTR [ecx]
  4061f0:	fild   WORD PTR [ecx+0x34]
  4061f3:	std    
  4061f4:	adc    DWORD PTR [esi+0x2],edx
  4061f7:	add    al,0xa0
  4061f9:	and    eax,0xe6eb9c9f
  4061fe:	dec    esi
  4061ff:	inc    esp
  406200:	ss pop edi
  406202:	fild   WORD PTR [ebx+0x5d]
  406205:	shr    DWORD PTR [ecx],1
  406207:	or     BYTE PTR [eax+0x7588e93d],ch
  40620d:	cmc    
  40620e:	mov    DWORD PTR [ecx+0x191eccb1],edx
  406214:	sub    eax,0x92805dde
  406219:	push   ds
  40621a:	bound  esi,QWORD PTR [edx+ebp*4-0x2dcbf332]
  406221:	push   cs
  406222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406223:	lds    ebp,FWORD PTR [ebp+0x5]
  406226:	aaa    
  406227:	pop    ds
  406228:	and    edx,esp
  40622a:	add    BYTE PTR [edx-0x6c8f2bb2],bh
  406230:	mov    esi,0xab7a7fe4
  406235:	and    al,0x0
  406237:	jl     0x406245
  406239:	xor    ecx,esi
  40623b:	xchg   edi,eax
  40623c:	xchg   esp,eax
  40623d:	repz and edx,DWORD PTR [ecx-0x2dcf2f5b]
  406244:	or     al,0xa1
  406246:	repnz fnstsw WORD PTR [esi-0x26edbd20]
  40624d:	out    0x33,al
  40624f:	mov    eax,0xa9f4b612
  406254:	jne    0x406254
  406256:	sahf   
  406257:	inc    edi
  406258:	dec    edi
  406259:	imul   ecx,DWORD PTR [ebx-0x4ff08550],0x74
  406260:	sbb    DWORD PTR [ecx+0xdfb3662],esi
  406266:	scas   eax,DWORD PTR es:[edi]
  406267:	sub    dh,BYTE PTR [edx+eiz*8+0x7fc0a111]
  40626e:	leave  
  40626f:	mov    ds:0xb13f756d,eax
  406274:	inc    esi
  406275:	es push es
  406277:	mov    DWORD PTR es:[esi-0x68],esi
  40627b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40627c:	push   ebx
  40627d:	mov    ch,0xd6
  40627f:	jb     0x406210
  406281:	xchg   ecx,eax
  406282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406283:	cmp    BYTE PTR [ebx-0x58],al
  406286:	jmp    0x1a9:0x10cda310
  40628d:	dec    ecx
  40628e:	jp     0x406251
  406290:	out    0xfb,al
  406292:	arpl   WORD PTR [eax+0xed68769],si
  406298:	push   ebp
  406299:	jle    0x406319
  40629b:	mov    bh,0x15
  40629d:	mov    esi,0xfd9e6871
  4062a2:	(bad)  
  4062a4:	(bad)  
  4062a5:	rol    DWORD PTR [eax],cl
  4062a7:	fisubr DWORD PTR [ecx]
  4062a9:	out    0xf3,al
  4062ab:	and    DWORD PTR [ecx+0x405ae62e],esp
  4062b1:	cmp    edi,DWORD PTR [esi+0x40]
  4062b4:	mov    esi,DWORD PTR [edi-0x4e]
  4062b7:	mov    ds:0x7097a755,al
  4062bc:	push   esi
  4062bd:	jne    0x4062c2
  4062bf:	out    0x33,al
  4062c1:	push   0xa072ccbd
  4062c6:	es pop ecx
  4062c8:	test   eax,0x2b1ede1d
  4062cd:	dec    ecx
  4062ce:	(bad)  
  4062cf:	push   ebp
  4062d0:	mov    al,0x3
  4062d2:	mov    ?,WORD PTR [ecx]
  4062d4:	cmp    dh,BYTE PTR [ebp-0x7a39d330]
  4062da:	hlt    
  4062db:	divps  xmm5,XMMWORD PTR [eax+0x5fdfa34a]
  4062e2:	std    
  4062e3:	push   0x74
  4062e5:	ins    BYTE PTR es:[edi],dx
  4062e6:	pop    ecx
  4062e7:	jge    0x406321
  4062e9:	or     bl,BYTE PTR [esi+0x5df00828]
  4062ef:	push   ss
  4062f0:	adc    BYTE PTR [eax+0x2a7fdbd4],ch
  4062f6:	out    dx,al
  4062f7:	les    edx,FWORD PTR [ebx-0x20]
  4062fa:	sub    DWORD PTR ds:0x82322a69,edi
  406300:	(bad)  
  406301:	stc    
  406302:	(bad)  
  406303:	mov    bl,0xc
  406305:	aam    0xc7
  406307:	fiadd  WORD PTR ds:0xe3d9b309
  40630d:	adc    esi,esp
  40630f:	or     BYTE PTR [esi+0xc009950],cl
  406315:	je     0x406305
  406317:	lods   al,BYTE PTR ds:[esi]
  406318:	push   cs
  406319:	(bad)  
  40631a:	scas   al,BYTE PTR es:[edi]
  40631b:	push   ecx
  40631c:	mov    esi,0x3bd416bf
  406321:	sub    eax,0x8d3bc657
  406326:	jmp    0x20a56ffd
  40632b:	push   es
  40632c:	loop   0x40632b
  40632e:	sbb    bh,al
  406330:	ins    DWORD PTR es:[edi],dx
  406331:	addr16 into 
  406333:	mov    ?,WORD PTR [eax+0x0]
  406336:	cdq    
  406337:	mov    al,0xc3
  406339:	add    eax,0x56d7adbf
  40633e:	adc    DWORD PTR [edi],0x9ba604ad
  406344:	inc    ebx
  406345:	sub    al,0x69
  406348:	push   0xffffffa4
  40634a:	mov    dl,0x79
  40634c:	sub    eax,0x6ab6ef69
  406351:	add    BYTE PTR [ecx-0x35],ch
  406354:	sub    ecx,eax
  406356:	mov    ds:0xaebf4d92,eax
  40635b:	mov    dl,0x38
  40635d:	dec    esp
  40635e:	sub    ecx,DWORD PTR [ecx+0x37960673]
  406364:	ins    BYTE PTR es:[edi],dx
  406365:	inc    ecx
  406366:	and    BYTE PTR [eax+0x385be7bd],0x11
  40636d:	jge    0x406329
  40636f:	out    dx,al
  406370:	adc    eax,0xd0c98207
  406375:	repnz loop 0x4063cc
  406378:	aaa    
  406379:	mov    al,ds:0x7db45415
  40637e:	shl    ebx,1
  406380:	(bad)  [ebp-0x20]
  406383:	imul   ebx,DWORD PTR [ecx-0x27],0xffffffe7
  406387:	mov    DWORD PTR [edx+0x582ce5e2],ebx
  40638d:	ja     0x40638e
  40638f:	or     al,0xc3
  406391:	(bad)  
  406393:	dec    esi
  406394:	or     al,BYTE PTR [eax]
  406396:	inc    edi
  406397:	jnp    0x40639d
  406399:	out    0xf4,eax
  40639b:	aaa    
  40639c:	mov    al,ds:0x8ee5c135
  4063a1:	sbb    esp,DWORD PTR [ecx+0x18645fa0]
  4063a7:	sub    al,0xc0
  4063a9:	out    0xee,eax
  4063ab:	mov    ebp,0x828305c6
  4063b0:	enter  0x9675,0xce
  4063b4:	sub    al,0xaa
  4063b6:	jmp    0x1275f44e
  4063bb:	mul    edi
  4063bd:	icebp  
  4063be:	inc    ebx
  4063bf:	sbb    DWORD PTR [ebx],edx
  4063c1:	xor    DWORD PTR [ebx-0x77],esi
  4063c4:	xor    BYTE PTR [ebx+0x7a],0xf
  4063c8:	shl    DWORD PTR [ebp-0x7d51e813],cl
  4063ce:	mov    ecx,0xb634483
  4063d3:	call   0xdfb0c309
  4063d8:	mov    dl,0xee
  4063da:	lods   eax,DWORD PTR ds:[esi]
  4063db:	inc    ecx
  4063dc:	outs   dx,DWORD PTR ds:[esi]
  4063dd:	mov    ebp,0xa8276fb7
  4063e2:	adc    BYTE PTR [ecx-0x67],0x33
  4063e6:	cld    
  4063e7:	sar    BYTE PTR [ebp+0x218ea73d],0x2b
  4063ee:	rol    DWORD PTR [edi-0x4b],1
  4063f1:	ja     0x406373
  4063f3:	ror    DWORD PTR [edi+0x43b57b4a],1
  4063f9:	add    DWORD PTR [edi],ebx
  4063fb:	jle    0x406477
  4063fd:	jno    0x406447
  4063ff:	fisubr WORD PTR [edx]
  406401:	dec    esi
  406402:	in     al,0x3e
  406404:	push   edx
  406405:	(bad)  
  406406:	in     eax,0xf8
  406408:	xchg   edx,eax
  406409:	xchg   esi,eax
  40640a:	mov    edx,0x222a0af5
  40640f:	imul   ebp,DWORD PTR [esi+0x7808ff92],0x9c2b9db8
  406419:	adc    dl,BYTE PTR [eax*2-0x3511e158]
  406420:	pop    eax
  406421:	int3   
  406422:	dec    esi
  406423:	sbb    al,0xbc
  406425:	and    cl,BYTE PTR [esi+ebp*4-0x56]
  406429:	outs   dx,BYTE PTR ds:[si]
  40642b:	push   edx
  40642c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40642d:	jmp    0x406402
  40642f:	test   al,0x9d
  406431:	dec    esi
  406432:	mov    al,0x9b
  406434:	mov    eax,ds:0x4703fb88
  406439:	push   ebp
  40643a:	ins    BYTE PTR es:[edi],dx
  40643b:	jo     0x4063d9
  40643d:	inc    esp
  40643e:	lahf   
  40643f:	rol    DWORD PTR [edi],0xa0
  406442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406443:	aaa    
  406444:	lods   eax,DWORD PTR ds:[esi]
  406445:	push   esp
  406446:	xchg   edi,eax
  406447:	dec    ebx
  406448:	fwait
  406449:	pop    eax
  40644a:	repnz mov bh,0xdd
  40644d:	iret   
  40644e:	add    al,0x1b
  406450:	xor    DWORD PTR [edi+0xfac1274],ebp
  406456:	jecxz  0x406409
  406458:	nop
  406459:	jno    0x40643b
  40645b:	(bad)  
  40645c:	sbb    dh,BYTE PTR [edi-0x38b5194e]
  406462:	scas   al,BYTE PTR es:[edi]
  406463:	in     eax,dx
  406464:	jne    0x40649a
  406466:	test   DWORD PTR [ebp+0x10],eax
  406469:	xlat   BYTE PTR ds:[ebx]
  40646a:	sub    esi,DWORD PTR [eax]
  40646c:	(bad)  
  40646d:	cld    
  40646e:	cmp    eax,0x175d144a
  406473:	adc    al,0xdb
  406475:	dec    esi
  406476:	aad    0xee
  406478:	sub    BYTE PTR [ebx],al
  40647a:	xor    eax,0x538e8ca3
  40647f:	gs mov eax,0xd1e94b5c
  406485:	pushf  
  406486:	xchg   BYTE PTR [esi],bl
  406488:	pop    edi
  406489:	sub    ebx,DWORD PTR [esi-0x47]
  40648c:	and    ebx,ebx
  40648e:	fisubr WORD PTR [eax-0x72]
  406491:	cmp    al,0xc6
  406493:	push   edx
  406494:	add    al,0x7
  406496:	mov    ebx,0xae67ad88
  40649b:	add    DWORD PTR [esi-0x9],edx
  40649e:	xor    eax,0xd2382d5e
  4064a3:	add    BYTE PTR [edi-0x790b38b0],al
  4064a9:	jmp    0xdcae2d1a
  4064ae:	push   ds
  4064af:	push   ebx
  4064b0:	jmp    0x4064b8
  4064b2:	xor    eax,0x6686a614
  4064b7:	add    BYTE PTR [ecx-0x39],ah
  4064ba:	(bad)  
  4064bb:	mov    ecx,0x822f4eb8
  4064c0:	xor    bh,BYTE PTR [edx]
  4064c2:	das    
  4064c3:	or     DWORD PTR [edi],ecx
  4064c5:	jmp    0x406467
  4064c7:	cdq    
  4064c8:	fcom   DWORD PTR [edi-0x5d]
  4064cb:	fldcw  WORD PTR [ebx+0x119aca43]
  4064d1:	and    al,0x6b
  4064d3:	push   ebp
  4064d4:	xor    BYTE PTR [esi-0x428e6ac2],0x45
  4064db:	loopne 0x406495
  4064dd:	fs mov ecx,ds
  4064e0:	addr16 out 0x75,eax
  4064e3:	xchg   ebp,eax
  4064e4:	into   
  4064e5:	pop    ss
  4064e6:	jg     0x4064f1
  4064e8:	mov    cl,0x82
  4064ea:	aam    0x66
  4064ec:	and    eax,0x35111ae2
  4064f1:	mov    bl,0x32
  4064f3:	jnp    0x4064fd
  4064f5:	mov    edx,0x2b780e43
  4064fa:	add    al,0x90
  4064fc:	and    bh,BYTE PTR [eax]
  4064fe:	mov    dl,0xcd
  406500:	stos   DWORD PTR es:[edi],eax
  406501:	pusha  
  406502:	sar    ecx,1
  406504:	xchg   BYTE PTR [ebp+0x2392e30b],bh
  40650a:	dec    ebp
  40650b:	pop    ebp
  40650c:	xor    eax,0x360389c1
  406511:	inc    eax
  406512:	neg    DWORD PTR [edi-0x5e]
  406515:	push   cs
  406516:	mov    edi,0x92cd9aff
  40651b:	xor    al,0xdc
  40651d:	(bad)  
  40651e:	fist   DWORD PTR [edx]
  406520:	jp     0x406596
  406522:	outs   dx,DWORD PTR ds:[esi]
  406523:	inc    edi
  406524:	jbe    0x4064b4
  406526:	lods   eax,DWORD PTR ds:[esi]
  406527:	xchg   ecx,eax
  406528:	loope  0x40657d
  40652a:	mov    al,ds:0x104fb84c
  40652f:	mov    esp,0xb75647a8
  406534:	cld    
  406535:	jmp    0x40654f
  406537:	or     dh,ah
  406539:	pop    eax
  40653a:	div    DWORD PTR [ebx-0x344a73f0]
  406540:	cmp    bh,BYTE PTR [ebp+ecx*2+0x3f6fb1fc]
  406547:	je     0x406503
  406549:	shl    ch,0x1d
  40654c:	inc    ecx
  40654d:	adc    edi,DWORD PTR [ebp-0x53606f82]
  406553:	iret   
  406554:	out    0xe,eax
  406556:	and    dl,BYTE PTR [ecx-0x28]
  406559:	out    0x42,eax
  40655b:	ss jns 0x406584
  40655e:	sbb    al,0x98
  406560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406561:	in     al,0xab
  406563:	push   0x43
  406565:	(bad)  
  406566:	xchg   esi,eax
  406567:	adc    eax,0xc4559846
  40656c:	dec    esp
  40656d:	jg     0x406573
  40656f:	sbb    al,0x31
  406571:	cli    
  406572:	add    edx,ecx
  406574:	sbb    eax,0xb7865901
  406579:	pop    es
  40657a:	into   
  40657b:	jge    0x406551
  40657d:	fadd   st,st(1)
  40657f:	cmp    al,0x1e
  406581:	mov    eax,0x904f43dd
  406586:	jae    0x406602
  406588:	int    0xa8
  40658a:	retf   
  40658b:	mov    dl,0x7d
  40658d:	cmovae ecx,DWORD PTR [ecx]
  406590:	mov    dl,0x78
  406592:	sti    
  406593:	and    BYTE PTR [edi-0x20],dh
  406596:	sbb    dl,BYTE PTR [ebx+0x6e3c783e]
  40659c:	int3   
  40659d:	and    eax,0x23c03663
  4065a2:	jle    0x40658f
  4065a4:	pop    ss
  4065a5:	push   ds
  4065a6:	mov    dh,0xdd
  4065a8:	xchg   ebx,edi
  4065aa:	sbb    dl,bl
  4065ac:	push   ebx
  4065ad:	call   0x79c77085
  4065b2:	fs inc ebx
  4065b4:	push   0x43
  4065b6:	gs inc ebx
  4065b8:	and    dh,bl
  4065ba:	out    dx,eax
  4065bb:	xor    bl,BYTE PTR [ebp-0x5eddec83]
  4065c1:	pushf  
  4065c2:	dec    ecx
  4065c3:	pop    ebp
  4065c4:	mov    esp,0x1642e53f
  4065c9:	cmp    cl,dl
  4065cb:	adc    al,0x32
  4065cd:	xor    BYTE PTR [ebp+0x7e],0xe
  4065d1:	sbb    BYTE PTR [edi+ecx*1],0xf9
  4065d5:	xor    al,0x4
  4065d7:	mov    dl,0x4f
  4065d9:	ss int 0xf0
  4065dc:	stos   DWORD PTR es:[edi],eax
  4065dd:	std    
  4065de:	pop    esp
  4065df:	and    bl,BYTE PTR [eax+0x2c]
  4065e2:	mov    esi,0x6f26a234
  4065e7:	cs clc 
  4065e9:	push   es
  4065ea:	fsubr  st,st(1)
  4065ec:	mov    al,0x92
  4065ee:	(bad)  
  4065ef:	cld    
  4065f0:	mov    DWORD PTR [ecx-0x36],esp
  4065f3:	mov    ds:0xdb3007ec,eax
  4065f8:	pop    eax
  4065f9:	sbb    bl,cl
  4065fb:	jmp    0xd39d5575
  406600:	test   DWORD PTR ds:0xba6ef4b6,edi
  406606:	inc    ecx
  406607:	jns    0x40666b
  406609:	(bad)  
  40660a:	std    
  40660b:	ins    DWORD PTR es:[edi],dx
  40660c:	test   cl,bh
  40660e:	lahf   
  40660f:	ret    
  406610:	outs   dx,DWORD PTR ds:[esi]
  406611:	lods   eax,DWORD PTR ds:[esi]
  406612:	aas    
  406613:	xchg   ecx,eax
  406614:	push   ss
  406615:	test   cl,bl
  406617:	sbb    eax,0x3763a834
  40661c:	inc    eax
  40661d:	(bad)  
  40661e:	cli    
  40661f:	mov    eax,ds:0xf091ace7
  406624:	push   ebx
  406625:	lods   eax,DWORD PTR ds:[esi]
  406626:	retf   
  406627:	fld    DWORD PTR [esi-0x46]
  40662a:	fadd   DWORD PTR [esi-0x78ef20d3]
  406630:	stos   DWORD PTR es:[edi],eax
  406631:	aaa    
  406632:	add    dh,bh
  406634:	lea    edi,[ebx-0x60a19205]
  40663a:	int    0x99
  40663c:	arpl   di,di
  40663e:	jae    0x406631
  406640:	stc    
  406641:	cld    
  406642:	mov    DWORD PTR [ecx-0x69],edi
  406645:	arpl   WORD PTR [esi],cx
  406647:	push   ebx
  406648:	mov    ebp,0xbdcfcea6
  40664d:	lahf   
  40664e:	ds sub al,0x24
  406651:	cdq    
  406652:	sahf   
  406653:	xlat   BYTE PTR ds:[ebx]
  406654:	xlat   BYTE PTR ds:[ebx]
  406655:	test   al,0xd8
  406657:	adc    DWORD PTR [eax+edx*4+0x452de58a],0x575d7be6
  406662:	or     BYTE PTR [edx+esi*8+0x1e],ah
  406666:	mov    esi,0xa55d7a05
  40666b:	cs add al,0x43
  40666e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40666f:	lds    ecx,FWORD PTR [ecx+0x59]
  406672:	sti    
  406673:	and    ebx,DWORD PTR [ebx-0xc]
  406676:	daa    
  406677:	adc    al,0x82
  406679:	dec    edx
  40667a:	sub    eax,0x15dbd636
  40667f:	aaa    
  406680:	jbe    0x4066a2
  406682:	inc    ebp
  406683:	mov    bl,0x92
  406685:	or     esi,edx
  406687:	int    0xec
  406689:	dec    edi
  40668a:	fstp   TBYTE PTR [esi]
  40668c:	cmp    bh,BYTE PTR [eax-0x42cd7a04]
  406692:	cmp    DWORD PTR [ecx+0x4b],edi
  406695:	xchg   ebp,eax
  406696:	mov    bl,0x5f
  406698:	mov    bh,cl
  40669a:	inc    ebx
  40669b:	jno    0x406710
  40669d:	sbb    ebp,DWORD PTR ds:0x89638bf8
  4066a3:	mov    DWORD PTR [edi],esp
  4066a5:	out    dx,eax
  4066a6:	sti    
  4066a7:	cli    
  4066a8:	inc    edi
  4066a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066aa:	push   esi
  4066ab:	mov    ebp,fs
  4066ad:	adc    eax,esp
  4066af:	xor    DWORD PTR [ebx+0x4fdceac6],ebx
  4066b5:	mov    ah,0x22
  4066b8:	xchg   ecx,eax
  4066b9:	and    DWORD PTR [esi],esp
  4066bb:	ins    DWORD PTR es:[edi],dx
  4066bc:	mov    ebp,0x5873017a
  4066c1:	mov    DWORD PTR [edi],0x23e3e6bb
  4066c7:	jecxz  0x4066ab
  4066c9:	inc    esi
  4066ca:	js     0x4066f9
  4066cc:	mov    ebp,0x1ac0128c
  4066d1:	mov    esi,DWORD PTR [ebp-0x1451693]
  4066d7:	or     BYTE PTR ds:0x99e5d937,ch
  4066dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066de:	fsub   QWORD PTR [eax+0x49]
  4066e1:	mov    ch,0xce
  4066e3:	adc    al,ah
  4066e5:	cmp    al,0x8f
  4066e7:	std    
  4066e8:	dec    edx
  4066e9:	out    dx,eax
  4066ea:	pop    edi
  4066eb:	and    BYTE PTR [edi-0x25],ch
  4066ee:	sbb    al,0x4b
  4066f0:	push   ecx
  4066f1:	xor    eax,0xceb7c270
  4066f6:	sbb    cl,BYTE PTR ds:0x7dfc70f7
  4066fc:	pushf  
  4066fd:	test   DWORD PTR [edx+0x634f2f88],0xeb746837
  406707:	cmp    dh,bl
  406709:	in     eax,0x14
  40670b:	test   al,0x1d
  40670d:	xor    dh,BYTE PTR [edi-0x40]
  406710:	fsubr  DWORD PTR [eax+ecx*4-0x51]
  406714:	inc    eax
  406715:	push   ss
  406716:	out    dx,eax
  406717:	retf   
  406718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406719:	repnz pop ebx
  40671b:	cld    
  40671c:	xchg   esi,eax
  40671d:	sub    ebx,DWORD PTR [ecx]
  40671f:	dec    BYTE PTR [ebx]
  406721:	lahf   
  406722:	enter  0x5fb8,0x82
  406726:	fisttp WORD PTR [ebx+esi*1+0x465ac163]
  40672d:	xor    esp,edx
  40672f:	loope  0x40679d
  406731:	in     al,dx
  406732:	lods   al,BYTE PTR ds:[esi]
  406733:	and    BYTE PTR [ecx],bl
  406735:	ret    0x8797
  406738:	out    0xc0,eax
  40673a:	in     al,dx
  40673b:	stos   BYTE PTR es:[edi],al
  40673c:	push   esi
  40673d:	pop    ebx
  40673e:	and    BYTE PTR [edi-0x40d76c66],cl
  406744:	in     al,0xe9
  406746:	push   ebx
  406747:	pop    ebx
  406748:	sbb    esi,edi
  40674a:	xchg   BYTE PTR [eax-0x4962a58],ch
  406750:	test   DWORD PTR [edx],ecx
  406752:	xchg   BYTE PTR [ecx+eiz*8+0x82e23fd],cl
  406759:	jno    0x406753
  40675b:	cmp    al,0xc3
  40675d:	in     eax,dx
  40675e:	cdq    
  40675f:	xchg   esp,eax
  406760:	xchg   edx,eax
  406761:	inc    edx
  406762:	ficomp WORD PTR [ebp+0x74]
  406765:	jbe    0x4067df
  406767:	mov    bl,0x6b
  406769:	paddsb mm5,QWORD PTR [ebx]
  40676c:	dec    esi
  40676d:	and    BYTE PTR [ebx],dh
  40676f:	popa   
  406770:	xchg   BYTE PTR [ecx],bh
  406772:	add    al,BYTE PTR [edi-0x497a4e2f]
  406778:	in     eax,0x78
  40677a:	(bad)  
  40677b:	mov    ebx,0xce2e3c58
  406780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406781:	jle    0x40672f
  406783:	push   es
  406784:	jb     0x4067d8
  406786:	dec    esi
  406787:	push   0xffffffc4
  406789:	inc    eax
  40678a:	xor    ebx,eax
  40678c:	inc    edi
  40678d:	jmp    0xd263098e
  406792:	inc    ebx
  406793:	popf   
  406794:	test   DWORD PTR [esi],esp
  406796:	sub    BYTE PTR [ecx+0x60],dl
  406799:	push   cs
  40679a:	call   0x6c3c:0x458e61ce
  4067a1:	and    ah,cl
  4067a3:	fsubr  QWORD PTR [esi-0x50dad94e]
  4067a9:	shr    edx,1
  4067ab:	test   bh,ch
  4067ad:	(bad)  
  4067ae:	mov    ds,WORD PTR [ebp+edi*4-0x5f]
  4067b2:	xlat   BYTE PTR ds:[ebx]
  4067b3:	ret    
  4067b4:	daa    
  4067b5:	enter  0xb0eb,0x81
  4067b9:	mov    al,ds:0xe1040783
  4067be:	test   eax,0x378f4ad4
  4067c3:	push   ds
  4067c4:	enter  0xb409,0xcb
  4067c8:	push   esi
  4067c9:	fsubr  st(2),st
  4067cb:	adc    DWORD PTR [ecx+0x76],ebp
  4067ce:	cld    
  4067cf:	pop    ebp
  4067d0:	jecxz  0x406834
  4067d2:	mov    ds:0xd737151b,eax
  4067d7:	aam    0x58
  4067d9:	push   ss
  4067da:	lahf   
  4067db:	inc    edx
  4067dc:	(bad)  
  4067dd:	(bad)  
  4067de:	cdq    
  4067df:	nop
  4067e0:	pop    eax
  4067e1:	push   ecx
  4067e2:	dec    edi
  4067e4:	push   eax
  4067e5:	aas    
  4067e6:	retf   
  4067e7:	jl     0x406783
  4067e9:	xchg   BYTE PTR [esi+0x62],bh
  4067ec:	xchg   esp,eax
  4067ed:	mov    bh,0x5
  4067ef:	fnsave [ebx]
  4067f1:	xchg   BYTE PTR [edx-0x51],cl
  4067f4:	jmp    0xa068:0xdebda9c5
  4067fb:	inc    esp
  4067fc:	sahf   
  4067fd:	inc    esp
  4067fe:	xor    bl,BYTE PTR [esi]
  406800:	rcl    BYTE PTR [ebx],0xeb
  406803:	sub    DWORD PTR gs:[esi-0x72d95cdb],esp
  40680a:	sub    bl,cl
  40680c:	call   0xa7dc0de4
  406811:	cmp    BYTE PTR [ecx-0x25dfab16],ch
  406817:	inc    ecx
  406818:	nop
  406819:	into   
  40681a:	es push edx
  40681c:	sub    ah,BYTE PTR ds:0x1e3501ee
  406822:	pop    ebp
  406823:	cmp    eax,0xeac33b9a
  406828:	pusha  
  406829:	mov    eax,ds:0x8a15f359
  40682e:	mov    ?,WORD PTR [edx]
  406830:	cmp    edx,ebp
  406832:	mov    ah,0x53
  406834:	out    dx,eax
  406835:	sub    edi,DWORD PTR [edx]
  406837:	pop    edi
  406838:	jns    0x4067ea
  40683a:	cdq    
  40683b:	(bad)  
  40683c:	hlt    
  40683d:	xchg   BYTE PTR [eax+0x77],bl
  406840:	xor    bh,al
  406842:	icebp  
  406843:	push   cs
  406844:	push   cs
  406845:	iret   
  406846:	sbb    dh,BYTE PTR [ebx-0x4297d097]
  40684c:	dec    eax
  40684d:	sub    eax,0xc1a49281
  406852:	call   FWORD PTR [ebx-0x69]
  406855:	sbb    DWORD PTR [esi-0x73884aef],0x54
  40685c:	mov    esi,0x3b5c671e
  406861:	(bad)  
  406862:	stc    
  406863:	test   al,0x13
  406865:	mov    ebp,0x59b9f625
  40686a:	jb     0x4068a4
  40686c:	pop    edx
  40686d:	pop    ecx
  40686e:	jo     0x4068be
  406870:	sbb    BYTE PTR [edx],al
  406872:	and    eax,edi
  406874:	xchg   edi,eax
  406875:	jns    0x406870
  406877:	adc    DWORD PTR [ebp+eax*2-0xc86c77e],0xbb5195dd
  406882:	es push eax
  406884:	sbb    al,0x69
  406886:	iret   
  406887:	mov    esi,0x7d1905da
  40688c:	jp     0x406839
  40688e:	add    ebp,edi
  406890:	xchg   esi,eax
  406891:	test   eax,0xcb151180
  406896:	test   DWORD PTR [edx+esi*2+0x2b],ebp
  40689a:	or     eax,DWORD PTR [edx+0x7e35b398]
  4068a0:	cld    
  4068a1:	or     bh,BYTE PTR [ecx+0x49af971b]
  4068a7:	imul   edi,esp,0x64
  4068aa:	push   0xdab35392
  4068af:	sbb    BYTE PTR [edx-0x31],0x9a
  4068b3:	push   edi
  4068b4:	lock cmp edx,DWORD PTR [edi+0x4ecd46ea]
  4068bb:	mov    dl,0x4e
  4068bd:	out    0x99,al
  4068bf:	push   eax
  4068c0:	lods   al,BYTE PTR ds:[esi]
  4068c1:	stos   DWORD PTR es:[edi],eax
  4068c2:	shl    DWORD PTR [ebx+ecx*1-0xff78773],cl
  4068c9:	mov    ebx,0xb89f6e8e
  4068ce:	and    BYTE PTR [ecx+0x68],dl
  4068d1:	pop    ss
  4068d2:	popf   
  4068d3:	(bad)  
  4068d4:	sub    DWORD PTR [edi-0x16],eax
  4068d7:	adc    bl,BYTE PTR [edx+ebp*4]
  4068da:	loope  0x40686b
  4068dc:	lods   al,BYTE PTR ds:[esi]
  4068dd:	sub    ecx,edx
  4068df:	ror    DWORD PTR [ebp+0x3f81e7a2],1
  4068e5:	ja     0x4068f1
  4068e7:	sbb    BYTE PTR [edx],dl
  4068e9:	xchg   edi,eax
  4068ea:	dec    edx
  4068eb:	mov    ?,WORD PTR [ebp+0x25]
  4068ee:	pushf  
  4068ef:	not    BYTE PTR [eax+0x36]
  4068f2:	mov    DWORD PTR [edi+0x39],esp
  4068f5:	int3   
  4068f6:	jbe    0x406930
  4068f8:	movd   mm7,DWORD PTR [edx+0x5a77eca9]
  4068ff:	in     eax,dx
  406900:	or     al,0x70
  406902:	pop    ebx
  406903:	cmp    al,0x63
  406905:	jne    0x4068a6
  406907:	mov    dl,0xc8
  406909:	mov    al,dh
  40690b:	ins    DWORD PTR es:[edi],dx
  40690c:	jno    0x4068f0
  40690e:	es out 0xd0,al
  406911:	cmp    edx,ebp
  406913:	std    
  406914:	inc    eax
  406915:	xchg   ecx,eax
  406916:	jl     0x40694c
  406918:	mov    ds:0x410ba865,al
  40691d:	(bad)  
  40691e:	or     eax,0x9410a9e9
  406923:	xchg   esp,eax
  406924:	addr16 push cs
  406926:	je     0x406991
  406928:	scas   al,BYTE PTR es:[edi]
  406929:	push   ebx
  40692a:	ror    edx,1
  40692c:	mov    esi,0x770355c
  406931:	es jbe 0x40698d
  406934:	not    DWORD PTR [edi+0x482915e]
  40693a:	scas   al,BYTE PTR es:[edi]
  40693b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40693c:	scas   al,BYTE PTR es:[edi]
  40693d:	mov    dh,0xff
  40693f:	or     dh,BYTE PTR [esi-0x6023f45b]
  406945:	xchg   edi,eax
  406946:	mov    dh,0xf2
  406948:	pushf  
  406949:	or     DWORD PTR [ebp+0x3d022352],edx
  40694f:	push   edx
  406950:	call   0xb41e4aba
  406955:	fidiv  WORD PTR [edi]
  406957:	fwait
  406958:	push   0xdef0d860
  40695d:	in     eax,dx
  40695e:	pop    ebx
  40695f:	or     eax,0x59e7b459
  406964:	sub    eax,0x17688a78
  406969:	dec    ebx
  40696a:	mov    esp,0x59731832
  40696f:	gs jae 0x40697b
  406972:	sbb    dl,BYTE PTR [ebx+edi*2+0x6c]
  406976:	pusha  
  406977:	rcl    DWORD PTR [edi+esi*2-0x32af12cc],1
  40697e:	stos   BYTE PTR es:[edi],al
  40697f:	inc    edi
  406980:	or     bh,BYTE PTR [edi-0x7d]
  406983:	push   cs
  406984:	and    bl,BYTE PTR [esi-0x57]
  406987:	inc    eax
  406988:	fstp   st(4)
  40698a:	dec    ecx
  40698b:	xor    DWORD PTR [ecx],eax
  40698d:	loope  0x4069e1
  40698f:	dec    edi
  406990:	push   0xc59559c
  406995:	das    
  406996:	int    0x69
  406998:	push   ds
  406999:	jns    0x4069db
  40699b:	std    
  40699c:	ins    BYTE PTR es:[edi],dx
  40699d:	dec    ecx
  40699e:	jns    0x40699e
  4069a0:	rcl    BYTE PTR ds:0xd741d9e4,1
  4069a6:	push   ecx
  4069a7:	into   
  4069a8:	jno    0x4069b0
  4069aa:	xor    DWORD PTR [edi+0x2a0f2ba4],0x32
  4069b1:	scas   al,BYTE PTR es:[edi]
  4069b2:	lods   al,BYTE PTR ds:[esi]
  4069b3:	push   eax
  4069b4:	sti    
  4069b5:	jge    0x4069be
  4069b7:	ja     0x40695b
  4069b9:	xor    DWORD PTR [ecx],edx
  4069bb:	pushfw 
  4069bd:	mov    fs,WORD PTR [esi+esi*8]
  4069c0:	popa   
  4069c1:	sub    bl,BYTE PTR ds:0x272fa1ab
  4069c7:	adc    bl,cl
  4069c9:	aad    0xbb
  4069cb:	xor    ebx,DWORD PTR [edi]
  4069cd:	rol    BYTE PTR ds:0x2976a309,1
  4069d3:	fwait
  4069d4:	cwde   
  4069d5:	fsin   
  4069d7:	sbb    al,BYTE PTR [ebx-0x31ebe8c8]
  4069dd:	inc    ebx
  4069de:	das    
  4069df:	pop    esp
  4069e0:	(bad)  
  4069e1:	jns    0x4069a6
  4069e3:	stc    
  4069e4:	scas   al,BYTE PTR es:[edi]
  4069e5:	jae    0x406a18
  4069e7:	mov    ah,0xe0
  4069e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069ea:	je     0x406999
  4069ec:	pop    ebp
  4069ed:	in     al,dx
  4069ee:	cmp    edi,edi
  4069f0:	and    dl,BYTE PTR [ecx-0x3c41efd2]
  4069f6:	cmp    ecx,DWORD PTR [ebp+0x4e]
  4069f9:	pushf  
  4069fa:	mov    ds:0x17742c1f,al
  4069ff:	jo     0x406a6b
  406a01:	add    al,0xaa
  406a03:	mov    dh,BYTE PTR [edx+0x61ed582c]
  406a09:	and    BYTE PTR [edx-0x57],0xd9
  406a0d:	or     eax,0xc37cf771
  406a12:	push   esp
  406a13:	imul   esp,DWORD PTR [esi],0x3c
  406a16:	cmp    ebp,DWORD PTR [esi+0x17ff78af]
  406a1c:	cmp    DWORD PTR [eax],ebx
  406a1e:	mov    cl,0xef
  406a20:	or     bl,BYTE PTR [edi+0x66]
  406a23:	lods   eax,DWORD PTR ds:[esi]
  406a24:	and    DWORD PTR [edi],ebp
  406a26:	sub    eax,0x41f7dd0a
  406a2b:	push   eax
  406a2c:	and    BYTE PTR [edx],al
  406a2e:	aad    0x4b
  406a30:	ins    DWORD PTR es:[edi],dx
  406a31:	mov    ah,0xa
  406a33:	inc    eax
  406a34:	mov    al,ds:0x70e5a13c
  406a39:	std    
  406a3a:	mov    ecx,eax
  406a3c:	add    cl,BYTE PTR ds:0x81a3af4e
  406a42:	sub    al,0x9c
  406a44:	or     al,0xda
  406a46:	push   cs
  406a47:	jo     0x4069d9
  406a49:	sub    DWORD PTR [ebp+edx*8+0x7],eax
  406a4d:	in     al,dx
  406a4e:	loope  0x406a23
  406a50:	fnstsw WORD PTR [esp+edx*1-0x500648ef]
  406a57:	jne    0x406a93
  406a59:	xor    eax,0x2b645e20
  406a5e:	push   eax
  406a5f:	or     bl,BYTE PTR [esi]
  406a61:	jo     0x406ab4
  406a63:	lahf   
  406a64:	fisub  WORD PTR [ecx+edx*4+0x3625d491]
  406a6b:	mov    al,ds:0x7ef16ca6
  406a70:	loopne 0x406a20
  406a72:	test   eax,0x71c3db8a
  406a77:	into   
  406a78:	cmc    
  406a79:	or     al,0x2a
  406a7b:	and    DWORD PTR [edi-0x1b],0x4e
  406a7f:	inc    edi
  406a80:	ficomp DWORD PTR [esi+0x79a4008f]
  406a86:	call   0x36a9:0xcee77c2
  406a8d:	add    ch,bh
  406a8f:	out    dx,eax
  406a90:	scas   eax,DWORD PTR es:[edi]
  406a91:	jg     0x406a79
  406a93:	cmp    ah,bl
  406a95:	adc    BYTE PTR [esi+0x26],dh
  406a98:	imul   BYTE PTR [edi]
  406a9a:	sar    DWORD PTR [ebx],0xe
  406a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a9e:	pushf  
  406a9f:	test   eax,0x30cd9ebb
  406aa4:	cmp    DWORD PTR [ecx+0x6892aaac],ebp
  406aaa:	fnsave [edi+0x61]
  406aad:	jb     0x406ae9
  406aaf:	pop    ebx
  406ab0:	retf   
  406ab1:	dec    ecx
  406ab2:	push   esp
  406ab3:	and    bl,ch
  406ab5:	and    eax,DWORD PTR [eax+0x48]
  406ab8:	pop    ecx
  406ab9:	pop    ss
  406aba:	or     eax,DWORD PTR [esi]
  406abc:	push   ebp
  406abd:	xchg   esi,eax
  406abe:	std    
  406abf:	sub    esi,DWORD PTR [ebx+0x3c]
  406ac2:	inc    edi
  406ac3:	mov    dh,0x63
  406ac5:	ja     0x406b21
  406ac7:	mov    dh,0x2f
  406ac9:	call   0x8c55:0xe541636c
  406ad0:	imul   edx,DWORD PTR [ebx],0x346faa1b
  406ad6:	sub    al,0xcd
  406ad8:	mov    DWORD PTR [eax+eiz*8-0x56],edx
  406adc:	out    dx,eax
  406add:	add    DWORD PTR [ebp+0x52],0x6d
  406ae1:	xchg   edx,eax
  406ae2:	(bad)
  406ae5:	mov    ebx,edx
  406ae7:	jno    0x406ab4
  406ae9:	mov    esi,0xec7673c6
  406aee:	in     eax,dx
  406aef:	lock and edi,DWORD PTR [ebx]
  406af2:	fstp   DWORD PTR [eax+0xa]
  406af5:	imul   ecx,esp,0x7ddb9460
  406afb:	mov    dl,0x28
  406afd:	aas    
  406afe:	cmp    BYTE PTR [eax],cl
  406b00:	ds push es
  406b02:	addr16 jb 0x406af8
  406b05:	add    al,0xfa
  406b07:	pop    edx
  406b08:	sbb    bl,bl
  406b0a:	jns    0x406ae6
  406b0c:	push   es
  406b0d:	inc    edx
  406b0e:	push   es
  406b0f:	push   esp
  406b10:	test   eax,0xb9bbc659
  406b15:	es inc esp
  406b17:	stc    
  406b18:	out    dx,al
  406b19:	scas   eax,DWORD PTR es:[edi]
  406b1a:	mov    ecx,0x734d43c3
  406b1f:	in     eax,0x6e
  406b21:	hlt    
  406b22:	(bad)  
  406b23:	jp     0x406b2e
  406b25:	xchg   edi,eax
  406b26:	push   edx
  406b27:	mov    bh,0xc2
  406b29:	ds sub edx,0xe7d5320d
  406b30:	or     BYTE PTR [ebp+0x1c765e61],ch
  406b36:	arpl   WORD PTR [ebp+0x7d],dx
  406b39:	fld    TBYTE PTR [esi]
  406b3b:	dec    ebp
  406b3c:	push   esp
  406b3d:	call   0x283a:0x4f3a4ac0
  406b44:	mov    ebp,0x778b0179
  406b49:	sbb    edx,DWORD PTR [ebp+0x38f8ac3f]
  406b4f:	pop    esi
  406b50:	xlat   BYTE PTR ds:[ebx]
  406b51:	xlat   BYTE PTR ds:[ebx]
  406b52:	mov    es,ebx
  406b54:	mov    ch,0x6a
  406b56:	popf   
  406b57:	mov    WORD PTR [esi+ebx*4],ss
  406b5a:	ins    BYTE PTR es:[edi],dx
  406b5b:	and    DWORD PTR [eax],esi
  406b5d:	sbb    al,0xd5
  406b5f:	aaa    
  406b60:	xor    DWORD PTR [esi-0x7265b67c],0x46
  406b67:	sbb    eax,DWORD PTR [esi-0x1e]
  406b6a:	mov    eax,0x5cb1f6cc
  406b6f:	(bad)  
  406b71:	int3   
  406b72:	or     eax,0x2830067a
  406b77:	sar    DWORD PTR [eax-0x79],1
  406b7a:	in     eax,0x90
  406b7c:	mov    al,0xd0
  406b7e:	mov    BYTE PTR [edi-0x1a25a41b],ch
  406b84:	idiv   ah
  406b86:	add    dl,BYTE PTR [ebp-0x3]
  406b89:	cli    
  406b8a:	xor    BYTE PTR [eax+0x73],dl
  406b8d:	rol    DWORD PTR [edi],1
  406b8f:	std    
  406b90:	imul   eax,DWORD PTR [edi],0xffffff9e
  406b93:	xor    edi,DWORD PTR ds:0x2a027f05
  406b99:	xlat   BYTE PTR ds:[ebx]
  406b9a:	or     bh,bh
  406b9c:	clc    
  406b9d:	xlat   BYTE PTR ds:[ebx]
  406b9e:	ror    ecx,1
  406ba0:	pop    ecx
  406ba1:	or     BYTE PTR [ebx],ch
  406ba3:	retf   0x434a
  406ba6:	and    ebp,DWORD PTR [eax+0xf286201]
  406bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bad:	dec    eax
  406bae:	das    
  406baf:	adc    al,0x35
  406bb1:	sub    DWORD PTR [ebx+0x30],ebp
  406bb4:	pop    esp
  406bb5:	in     eax,0x18
  406bb7:	pop    eax
  406bb8:	loopne 0x406b7d
  406bba:	and    al,0xe8
  406bbc:	call   0xf0016916
  406bc1:	mov    eax,0xb79e8441
  406bc6:	repnz in eax,dx
  406bc8:	sub    al,0xf9
  406bca:	and    al,BYTE PTR [esi]
  406bcc:	int    0xc3
  406bce:	sub    eax,0x34419732
  406bd3:	adc    edx,edx
  406bd5:	sbb    al,BYTE PTR [ecx+0x7f]
  406bd8:	scas   al,BYTE PTR es:[edi]
  406bd9:	ror    DWORD PTR [edi],cl
  406bdb:	sbb    al,0xa2
  406bdd:	mov    WORD PTR [ebx-0xb],cs
  406be0:	ror    BYTE PTR [edx],1
  406be2:	cld    
  406be3:	jbe    0x406c57
  406be5:	pop    ecx
  406be6:	fild   WORD PTR [ecx-0x7cdcfda9]
  406bec:	jb     0x406bfd
  406bee:	stc    
  406bef:	mov    ah,0x67
  406bf1:	jle    0x406be2
  406bf3:	arpl   WORD PTR [eax],si
  406bf5:	ret    0xc1c1
  406bf8:	mov    al,ds:0xe5283de8
  406bfd:	popf   
  406bfe:	ret    0xb4b2
  406c01:	sub    DWORD PTR [ecx+eiz*2+0x157bd336],ebx
  406c08:	mov    edx,0xc521652f
  406c0d:	adc    edx,esp
  406c0f:	mov    bh,BYTE PTR [ebx+ecx*2]
  406c12:	sbb    ch,BYTE PTR [esi-0x234bc01b]
  406c18:	(bad)  
  406c19:	xor    eax,0xca582cf7
  406c1e:	ins    DWORD PTR es:[edi],dx
  406c1f:	xchg   ecx,eax
  406c20:	out    dx,eax
  406c21:	ins    DWORD PTR es:[edi],dx
  406c22:	lahf   
  406c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c24:	icebp  
  406c25:	xor    al,0x54
  406c27:	xor    eax,0xa0eade45
  406c2c:	rcr    DWORD PTR [ecx-0x6f],0x8b
  406c30:	push   ebp
  406c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c32:	out    0x2a,al
  406c34:	neg    edx
  406c36:	xor    BYTE PTR [ebx+0x7c37ba3c],bl
  406c3c:	cs daa 
  406c3e:	(bad)  
  406c3f:	sub    ah,BYTE PTR [ebp+0x6269dd75]
  406c45:	dec    esp
  406c46:	cli    
  406c47:	dec    edx
  406c48:	int    0xba
  406c4a:	bound  edx,QWORD PTR [ecx]
  406c4c:	retf   
  406c4d:	mov    WORD PTR [ebx+eiz*1+0x4703a774],gs
  406c54:	stos   DWORD PTR es:[edi],eax
  406c55:	test   BYTE PTR [eax],cl
  406c57:	(bad)  
  406c59:	fsub   DWORD PTR [edi+edx*1+0x642f14c7]
  406c60:	dec    eax
  406c61:	push   0x1143f666
  406c66:	lahf   
  406c67:	mov    al,0xa9
  406c69:	sub    al,0x40
  406c6b:	stos   DWORD PTR es:[edi],eax
  406c6c:	test   al,0xd
  406c6e:	push   0x17
  406c70:	imul   ebp,esi,0x17
  406c73:	aaa    
  406c74:	mov    al,BYTE PTR [edi+esi*2-0x450d7708]
  406c7b:	sbb    BYTE PTR [edx+0x67055d3a],0x58
  406c82:	adc    ch,BYTE PTR [eax-0x7f]
  406c85:	shl    eax,0x72
  406c88:	dec    esp
  406c89:	xor    DWORD PTR [ebx+0x4f],0xedeeb8d0
  406c90:	push   0x98fc3bc7
  406c95:	test   BYTE PTR [edx-0x484bbbb0],bl
  406c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c9c:	rol    esp,0x21
  406c9f:	and    dh,BYTE PTR [edi]
  406ca1:	cmp    BYTE PTR [ecx+0x4c],bl
  406ca4:	cli    
  406ca5:	psrld  mm2,mm2
  406ca8:	js     0x406cd1
  406caa:	or     BYTE PTR [ebx+0x20],ah
  406cad:	stc    
  406cae:	pop    ecx
  406caf:	aad    0x72
  406cb1:	nop
  406cb2:	mov    al,ds:0xbbeb3fde
  406cb7:	in     eax,dx
  406cb8:	aad    0x56
  406cba:	stos   BYTE PTR es:[edi],al
  406cbb:	test   al,0x4d
  406cbd:	mov    dl,0xc1
  406cbf:	loop   0x406d3f
  406cc1:	cld    
  406cc2:	mov    bh,0x21
  406cc4:	pop    edi
  406cc5:	paddusw mm4,QWORD PTR [esp+ebp*1+0x644af38f]
  406ccd:	inc    edi
  406cce:	lea    ecx,[ebx+0x52]
  406cd1:	and    esp,edx
  406cd3:	adc    eax,0xf07737c5
  406cd8:	mov    esp,0x7246281
  406cdd:	sbb    ebx,esp
  406cdf:	xchg   ebx,eax
  406ce0:	imul   ebp,DWORD PTR [edi+eax*8+0x39],0x1a4ca057
  406ce8:	jns    0x406cd0
  406cea:	push   ds
  406ceb:	sub    bh,al
  406ced:	cld    
  406cee:	adc    ch,BYTE PTR [ebp+ebp*8-0x65]
  406cf2:	dec    esp
  406cf3:	add    edx,DWORD PTR [edi]
  406cf5:	or     ah,BYTE PTR [esi+0x12]
  406cf8:	fcom   DWORD PTR [eax-0x2f49b23a]
  406cfe:	xor    eax,0xfdaf4346
  406d03:	xor    al,0x97
  406d05:	cld    
  406d06:	int3   
  406d07:	dec    ecx
  406d08:	ins    DWORD PTR es:[edi],dx
  406d09:	rdpmc  
  406d0b:	jo     0x406cbf
  406d0d:	add    eax,0x2b7dd545
  406d12:	sub    ah,BYTE PTR ds:0x31545342
  406d18:	leave  
  406d19:	lock aas 
  406d1b:	mov    ecx,0x94528e30
  406d20:	icebp  
  406d21:	jne    0x406ccf
  406d23:	jp     0x406cfd
  406d25:	mov    bl,0x27
  406d27:	js     0x406d75
  406d29:	push   edi
  406d2a:	fstp   TBYTE PTR ss:[esi+ebp*4]
  406d2e:	fcomp  st(0)
  406d30:	dec    esp
  406d31:	push   ss
  406d32:	aas    
  406d33:	jne    0x406d44
  406d35:	xor    DWORD PTR [esi],eax
  406d37:	imul   DWORD PTR [eax-0x5a]
  406d3a:	mov    dh,dl
  406d3c:	cdq    
  406d3d:	cs push ebx
  406d3f:	cmp    BYTE PTR [edx+0xf],cl
  406d42:	dec    esp
  406d43:	push   ecx
  406d44:	cmp    DWORD PTR [ebx-0x4883ded7],ebx
  406d4a:	dec    ebx
  406d4b:	dec    ebp
  406d4c:	or     eax,0xac4287ae
  406d51:	mov    edi,0xfea2aca9
  406d56:	fnstcw WORD PTR [ecx]
  406d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d59:	ins    BYTE PTR es:[edi],dx
  406d5a:	addr16 jns 0x406d26
  406d5d:	cmp    eax,0x9a05d2d5
  406d62:	and    dh,BYTE PTR [ebp-0x59f9a3aa]
  406d68:	into   
  406d69:	push   ebp
  406d6a:	(bad)  
  406d6b:	jle    0x406dd5
  406d6d:	in     al,0xb7
  406d6f:	(bad)  
  406d70:	jge    0x406d51
  406d72:	ror    DWORD PTR [ecx+0x4705584b],0x90
  406d79:	fdivr  DWORD PTR [eax]
  406d7b:	stos   DWORD PTR es:[edi],eax
  406d7c:	mov    dl,0xa
  406d7e:	jbe    0x406db7
  406d80:	je     0x406d42
  406d82:	xchg   edi,eax
  406d83:	or     esp,DWORD PTR [eax-0x3e]
  406d86:	adc    eax,0xe997a8f1
  406d8b:	xor    eax,0x8c078dc3
  406d90:	sub    edi,ebx
  406d92:	cmp    DWORD PTR [ebx-0x23],edx
  406d95:	dec    BYTE PTR [esi+0x46751a28]
  406d9b:	push   cs
  406d9c:	popf   
  406d9d:	call   0x7fb967e3
  406da2:	mov    dl,0x2b
  406da4:	lahf   
  406da5:	add    dh,BYTE PTR [esi-0x65]
  406da8:	mov    bl,0x61
  406daa:	outs   dx,BYTE PTR ds:[esi]
  406dab:	lea    esp,[ecx+0x28c906de]
  406db1:	cmp    ebp,DWORD PTR [esi-0x7e]
  406db4:	dec    esi
  406db5:	(bad)  
  406db7:	outs   dx,DWORD PTR ds:[esi]
  406db8:	jbe    0x406db5
  406dba:	jne    0x406e3a
  406dbc:	add    ah,0xb9
  406dbf:	out    0xd7,eax
  406dc1:	std    
  406dc2:	lea    eax,fs:[ecx-0x1a]
  406dc6:	(bad)  
  406dc7:	fbld   TBYTE PTR [eax]
  406dc9:	jno    0x406e0b
  406dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dcc:	cs inc ebp
  406dce:	and    ebx,DWORD PTR [esi-0x59]
  406dd1:	push   ss
  406dd2:	adc    al,0x7a
  406dd4:	test   eax,0x4cb72b10
  406dd9:	iret   
  406dda:	mov    ah,0x57
  406ddc:	(bad)  
  406ddd:	outs   dx,DWORD PTR ds:[esi]
  406dde:	mov    dh,0x2a
  406de0:	scas   al,BYTE PTR es:[edi]
  406de1:	stos   DWORD PTR es:[edi],eax
  406de2:	and    edi,esp
  406de4:	mov    ds:0x5ca1c8ba,eax
  406de9:	sbb    bl,BYTE PTR [ebp+0x64]
  406dec:	xor    ecx,DWORD PTR [esi+edx*1]
  406def:	sub    ebx,DWORD PTR [ecx-0x35]
  406df2:	and    edi,esi
  406df4:	aaa    
  406df5:	dec    ebp
  406df6:	mov    dh,0x9c
  406df8:	scas   al,BYTE PTR es:[edi]
  406df9:	jb     0x406e68
  406dfb:	mov    esp,0xb4b086ee
  406e00:	or     ebp,DWORD PTR [ebx]
  406e02:	faddp  st(6),st
  406e04:	frstor [eax]
  406e06:	jecxz  0x406e82
  406e08:	out    0x87,al
  406e0a:	dec    edi
  406e0b:	stos   DWORD PTR es:[edi],eax
  406e0c:	push   esp
  406e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e0e:	push   ebx
  406e0f:	sub    dl,cl
  406e11:	mov    dh,0x24
  406e13:	xchg   edi,eax
  406e14:	add    DWORD PTR [ebp-0x24a18fcd],ecx
  406e1a:	push   esp
  406e1b:	mov    ch,0xa8
  406e1d:	lods   al,BYTE PTR ds:[esi]
  406e1e:	inc    edi
  406e1f:	cmp    edi,esp
  406e21:	or     al,0x22
  406e23:	xor    DWORD PTR [ebx+0x8],0xd41df5db
  406e2a:	mov    edi,0x9691cfe1
  406e2f:	and    ebx,DWORD PTR [eax]
  406e31:	mov    ebx,0xb3679e6f
  406e36:	bound  ebx,QWORD PTR [ebp-0x80]
  406e39:	sahf   
  406e3a:	xchg   edi,eax
  406e3b:	dec    ecx
  406e3c:	mov    dh,0xd6
  406e3e:	aaa    
  406e3f:	xchg   ebp,eax
  406e40:	dec    edx
  406e41:	fisttp WORD PTR [edx+0x40bc3176]
  406e47:	add    ch,BYTE PTR [ebx-0xc]
  406e4a:	adc    DWORD PTR [ebp-0x1702de],ebx
  406e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e51:	sbb    esi,DWORD PTR [edx+ebx*4]
  406e54:	mov    edx,0x1e2ce138
  406e59:	sub    BYTE PTR [edi-0x40ce927e],0x3f
  406e60:	cdq    
  406e61:	jmp    FWORD PTR [ebp+ebx*8-0x66]
  406e65:	sub    cl,BYTE PTR [eax+0x273cae2e]
  406e6b:	and    cl,BYTE PTR [esi]
  406e6d:	fnstcw WORD PTR [edx]
  406e6f:	mov    BYTE PTR [edi+0x37],ah
  406e72:	dec    eax
  406e73:	jmp    0xd8d1:0x5bbbbd3
  406e7a:	sub    eax,0xf9f9ca7
  406e7f:	aad    0xd7
  406e81:	add    eax,0xcfa01609
  406e86:	scas   al,BYTE PTR es:[edi]
  406e87:	adc    DWORD PTR [esi+0x5d],0x160db04
  406e8e:	pusha  
  406e8f:	push   0x42
  406e91:	xor    edx,ecx
  406e93:	(bad)  
  406e94:	push   edx
  406e95:	mov    eax,ecx
  406e97:	sub    edx,DWORD PTR [edx-0x4d58b2a7]
  406e9d:	xor    dh,cl
  406e9f:	(bad)  
  406ea0:	cwde   
  406ea1:	xor    al,0x1c
  406ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea4:	jns    0x406ea8
  406ea6:	adc    cl,BYTE PTR [ecx+eax*8-0x3cfbdf74]
  406ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eae:	adc    BYTE PTR [ebx+0x7e],bl
  406eb1:	fsubr  st(0),st
  406eb3:	es iret 
  406eb5:	call   0xfe127f14
  406eba:	xchg   ebp,eax
  406ebb:	sti    
  406ebc:	push   ebp
  406ebd:	mov    cl,0xe8
  406ebf:	inc    ebx
  406ec0:	ss pushf 
  406ec2:	fs loope 0x406ec1
  406ec5:	pop    esp
  406ec6:	pop    es
  406ec7:	fidivr DWORD PTR [edi]
  406ec9:	push   ecx
  406eca:	cdq    
  406ecb:	or     ecx,DWORD PTR [edi+0x71]
  406ece:	mov    WORD PTR [edx+ebp*1-0x1a69a7c1],fs
  406ed5:	loop   0x406f08
  406ed7:	loop   0x406f1f
  406ed9:	outs   dx,BYTE PTR ds:[esi]
  406eda:	xor    BYTE PTR [ebx+0x39],bh
  406edd:	ins    BYTE PTR es:[edi],dx
  406ede:	push   edi
  406edf:	fistp  WORD PTR [ecx-0x4c]
  406ee2:	cmp    al,0xa4
  406ee4:	xor    BYTE PTR [edi],ch
  406ee6:	js     0x406f2c
  406ee8:	add    DWORD PTR [edi],0xdf658842
  406eee:	add    eax,DWORD PTR [edx+0x755f5361]
  406ef4:	test   eax,0xbfaf2ac5
  406ef9:	jns    0x406f52
  406efb:	sub    al,0x5b
  406efd:	inc    ebx
  406efe:	jb     0x406eb4
  406f00:	sbb    ch,BYTE PTR [eax-0x2b]
  406f03:	push   cs
  406f04:	cmp    DWORD PTR [eax],0xffffffa1
  406f07:	jmp    0x399b:0xebbc6ff0
  406f0e:	pop    ebp
  406f0f:	mov    ?,edi
  406f11:	loop   0x406e95
  406f13:	(bad)  
  406f15:	repz cmp BYTE PTR [ebx],al
  406f18:	out    dx,al
  406f19:	outs   dx,DWORD PTR ds:[esi]
  406f1a:	push   0xffffffbd
  406f1c:	push   esi
  406f1d:	mov    edx,0x4c4158ea
  406f22:	inc    edx
  406f23:	(bad)  
  406f24:	nop
  406f25:	xor    ch,al
  406f27:	inc    esi
  406f28:	dec    edi
  406f29:	cmp    bl,BYTE PTR [edi+0x1d79b503]
  406f2f:	pop    ds
  406f30:	push   ds
  406f31:	adc    eax,0x14c26d3e
  406f36:	lock sar DWORD PTR [esi-0x3],cl
  406f3a:	xlat   BYTE PTR ds:[ebx]
  406f3b:	imul   ecx,DWORD PTR [esp+eiz*2],0x4d
  406f3f:	and    al,BYTE PTR [eax-0x105d850e]
  406f45:	xchg   edi,eax
  406f46:	retf   
  406f47:	stos   DWORD PTR es:[edi],eax
  406f48:	mov    esi,0x5bb4f63
  406f4d:	xchg   edi,eax
  406f4e:	in     al,0x52
  406f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f51:	loop   0x406f36
  406f53:	sub    eax,0x42bcaf00
  406f58:	xchg   DWORD PTR [ecx+0x606099db],eax
  406f5e:	fucomp st(0)
  406f60:	sbb    al,0x8c
  406f62:	adc    ah,BYTE PTR [ebx-0x6c565218]
  406f68:	inc    edx
  406f69:	fwait
  406f6a:	xchg   ebx,eax
  406f6b:	and    DWORD PTR [ebx+edi*2-0x4eb323f1],ebp
  406f72:	jmp    0x9296c660
  406f77:	push   esp
  406f78:	sub    dh,BYTE PTR [edi+0x61]
  406f7b:	mov    cl,0x6b
  406f7d:	xor    BYTE PTR [eax-0x1],bl
  406f80:	daa    
  406f81:	inc    ebp
  406f82:	adc    al,0x3d
  406f84:	lock ins DWORD PTR es:[edi],dx
  406f86:	xchg   ebx,eax
  406f87:	jae    0x406f54
  406f89:	pop    esi
  406f8a:	mov    dl,0xb
  406f8c:	xor    DWORD PTR ds:0x9a818b99,ebp
  406f92:	lahf   
  406f93:	mov    edi,0xb7487c3f
  406f98:	sbb    al,0x65
  406f9a:	xor    DWORD PTR [edi+0x746c5f38],ecx
  406fa0:	add    DWORD PTR [edx],edi
  406fa2:	je     0x40701a
  406fa4:	sbb    BYTE PTR ds:0xb89f6788,0x97
  406fab:	cmp    DWORD PTR [edi+0x47],ebx
  406fae:	retf   0xdb21
  406fb1:	cmc    
  406fb2:	adc    eax,0x2e3ec6be
  406fb7:	dec    ebp
  406fb8:	push   esi
  406fb9:	je     0x406f73
  406fbb:	or     dh,dh
  406fbd:	jge    0x406f5b
  406fbf:	adc    al,0x80
  406fc1:	adc    eax,0xd0659a81
  406fc6:	int3   
  406fc7:	mov    ebx,0xc9d44388
  406fcc:	ficomp DWORD PTR [edx-0x12]
  406fcf:	(bad)  
  406fd0:	pop    ebx
  406fd1:	dec    edi
  406fd2:	ds (bad) 
  406fd4:	mov    eax,0xc24c1df8
  406fd9:	repz and BYTE PTR [edx+eax*2],ch
  406fdd:	lods   al,BYTE PTR ds:[esi]
  406fde:	pop    edx
  406fdf:	ret    
  406fe0:	inc    ecx
  406fe1:	mov    esi,0x7f6d2e7c
  406fe6:	hlt    
  406fe7:	mov    ebx,0x9fe6fa86
  406fec:	inc    ebp
  406fed:	daa    
  406fee:	cmp    esp,DWORD PTR [ecx]
  406ff0:	ret    
  406ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff2:	push   cs
  406ff3:	sbb    bh,0x8d
  406ff6:	add    edx,ebp
  406ff8:	das    
  406ff9:	mov    edx,0xf0a3de27
  406ffe:	cmp    DWORD PTR [eax-0x6b],eax
  407001:	cmc    
  407002:	aas    
  407003:	pop    ds
  407004:	enter  0x60b3,0xec
  407008:	leave  
  407009:	adc    ebx,DWORD PTR [esi+ecx*1]
  40700c:	rcr    DWORD PTR [edx-0x5c],0x4c
  407010:	fldenv [edi+ecx*2]
  407013:	sbb    dh,BYTE PTR [ecx+0x286088d6]
  407019:	inc    ebp
  40701a:	fcmove st,st(2)
  40701c:	jmp    0xb00991b5
  407021:	cmp    edi,esi
  407023:	xor    bl,BYTE PTR ds:0xf44c0163
  407029:	xchg   al,dl
  40702b:	and    eax,0xe40ef824
  407030:	cmp    edi,DWORD PTR [edi]
  407032:	inc    ebp
  407033:	fmulp  st(2),st
  407035:	outs   dx,DWORD PTR ds:[esi]
  407036:	jb     0x407048
  407038:	and    ah,ah
  40703a:	mov    ebx,0xb520050c
  40703f:	fldcw  WORD PTR [ecx+0x3a06701]
  407045:	enter  0x464,0x8b
  407049:	mov    cl,0x8
  40704b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40704c:	ror    edi,0x21
  40704f:	jo     0x40703a
  407051:	mov    esi,esi
  407053:	lods   eax,DWORD PTR ds:[esi]
  407054:	scas   al,BYTE PTR es:[edi]
  407055:	enter  0xe3,0xb0
  407059:	hlt    
  40705a:	cmp    eax,0xf1ac969f
  40705f:	push   edi
  407060:	xor    eax,0x4194e0bb
  407065:	rcr    cl,1
  407067:	mov    esi,0x5a306dcf
  40706c:	(bad)  
  40706d:	sbb    bl,BYTE PTR [ecx-0x8aef80d]
  407073:	mov    edi,0x6c249314
  407078:	and    ah,BYTE PTR [ecx-0x518c06]
  40707e:	cmp    ebp,edi
  407080:	or     al,0x4f
  407082:	sub    edx,DWORD PTR [ebx+0x17]
  407085:	out    0xcd,eax
  407087:	dec    ebp
  407088:	imul   eax,DWORD PTR [edi-0x25d30560],0x35
  40708f:	lahf   
  407090:	in     eax,0x30
  407092:	jge    0x4070c5
  407094:	add    al,0xde
  407096:	xor    DWORD PTR [ecx],edx
  407098:	ret    
  407099:	rcr    BYTE PTR [esi+0x47b62708],0xd3
  4070a0:	push   ecx
  4070a1:	push   esi
  4070a2:	test   DWORD PTR [esp+edx*4+0x5f6c5180],esp
  4070a9:	lahf   
  4070aa:	sub    BYTE PTR [ebp+edi*8+0x40662083],ah
  4070b1:	cmp    eax,DWORD PTR [ecx-0x4]
  4070b4:	jg     0x407105
  4070b6:	mov    dh,BYTE PTR ss:[esi]
  4070b9:	mov    eax,ss
  4070bb:	mov    al,ds:0xbd7defc9
  4070c0:	aam    0xf1
  4070c2:	fsubr  DWORD PTR [eax]
  4070c4:	push   esi
  4070c5:	test   eax,0x84ebc668
  4070ca:	adc    bl,cl
  4070cc:	enter  0xed8,0x66
  4070d0:	jnp    0x4070f3
  4070d2:	mov    ch,0x24
  4070d4:	fiadd  WORD PTR [ebp+0x2d9c59fe]
  4070da:	jmp    0x407125
  4070dc:	(bad)  
  4070de:	repz imul esi,esp,0x222e4d73
  4070e5:	into   
  4070e6:	push   esi
  4070e7:	(bad)  
  4070e8:	das    
  4070e9:	pop    esp
  4070ea:	das    
  4070eb:	inc    esi
  4070ec:	clc    
  4070ed:	es dec esp
  4070ef:	test   DWORD PTR ds:0x749546f4,edx
  4070f5:	fcomp  DWORD PTR [edx]
  4070f7:	mov    edx,DWORD PTR [esi-0x1b]
  4070fa:	mov    edi,0xb1d135a2
  4070ff:	mov    bh,0xf4
  407101:	adc    al,0x59
  407103:	cli    
  407104:	and    al,0xee
  407106:	lds    ebp,FWORD PTR [edi]
  407108:	test   bl,bh
  40710a:	push   0xffffffa7
  40710c:	mov    ds:0x29b8a026,al
  407111:	mov    edx,0x73d0a995
  407116:	(bad)  
  407117:	push   edx
  407118:	icebp  
  407119:	sbb    edi,0xffffff8f
  40711c:	loope  0x40717d
  40711e:	cmp    BYTE PTR [ebx],bh
  407120:	pshufw mm6,QWORD PTR [ebx],0x23
  407124:	and    dh,BYTE PTR [edx+edi*8-0x18a9e390]
  40712b:	std    
  40712c:	xchg   esp,eax
  40712d:	psubusb mm6,mm2
  407130:	dec    edi
  407131:	lahf   
  407132:	addr16 add eax,0x2340ab0
  407138:	and    ch,0x64
  40713b:	mov    ebx,0x4f751859
  407140:	out    0x8e,eax
  407142:	pop    ebp
  407143:	adc    eax,0x5d44c0a
  407148:	ja     0x407119
  40714a:	inc    eax
  40714b:	(bad)
  40714e:	aas    
  40714f:	push   ebp
  407150:	cmc    
  407151:	cmp    ebp,0xfffffff6
  407154:	cmp    eax,0x1fe57a28
  407159:	fs inc ecx
  40715b:	add    BYTE PTR [edx-0x63],ch
  40715e:	fwait
  40715f:	shr    BYTE PTR [edx],1
  407161:	inc    esp
  407162:	pop    esp
  407163:	lahf   
  407164:	fimul  WORD PTR [esi]
  407166:	mov    eax,0xbbc04223
  40716b:	push   es
  40716c:	mov    edx,0x7fd5fcab
  407171:	loop   0x4071ca
  407173:	jg     0x40717c
  407175:	data16 cmp al,0xc3
  407178:	(bad)  
  407179:	xchg   edx,eax
  40717a:	shr    ah,cl
  40717c:	sbb    eax,0xb7572a7d
  407181:	popa   
  407182:	xlat   BYTE PTR ds:[ebx]
  407183:	jae    0x4071c5
  407185:	add    DWORD PTR [esi],ecx
  407187:	dec    esi
  407188:	cli    
  407189:	add    DWORD PTR [ecx+0x442c271e],esp
  40718f:	iret   
  407190:	ret    0xc302
  407193:	jmp    0x3b704138
  407198:	aaa    
  407199:	sub    ecx,DWORD PTR [esi+0x5c]
  40719c:	jp     0x4071cf
  40719e:	(bad)  
  40719f:	jmp    0x3cae:0x6e1ae2c8
  4071a6:	or     ah,dl
  4071a8:	and    BYTE PTR [esi-0x85204a0],dh
  4071ae:	push   ebp
  4071af:	imul   edx,DWORD PTR [ebx+esi*1-0x300f4666],0x49
  4071b7:	fwait
  4071b8:	mov    eax,DWORD PTR [eax+0x54]
  4071bb:	in     eax,dx
  4071bc:	rcl    DWORD PTR [edi+0x78218a5c],0x9e
  4071c3:	inc    ebp
  4071c4:	aam    0xc5
  4071c6:	inc    ebp
  4071c7:	push   edx
  4071c8:	xor    edx,DWORD PTR [eax-0x45c199ef]
  4071ce:	cmp    ebx,DWORD PTR [ecx]
  4071d0:	mov    eax,ds:0xcf19fbac
  4071d5:	adc    DWORD PTR [esi],esp
  4071d7:	jnp    0x40716d
  4071d9:	pop    ebx
  4071da:	jne    0x40724e
  4071dc:	lods   eax,DWORD PTR ds:[esi]
  4071dd:	test   BYTE PTR [edi-0x1c],cl
  4071e0:	test   ebp,edi
  4071e2:	mov    WORD PTR [ecx+0x66],ss
  4071e5:	cs inc edi
  4071e7:	rcr    DWORD PTR [ebp-0x14],0x10
  4071eb:	into   
  4071ec:	push   0xffffffec
  4071ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071ef:	ret    
  4071f0:	ss cli 
  4071f2:	stos   BYTE PTR es:[edi],al
  4071f3:	js     0x4071cd
  4071f5:	test   BYTE PTR [eax-0x514131b2],0xb7
  4071fc:	out    dx,eax
  4071fd:	shl    bl,cl
  4071ff:	shl    DWORD PTR [edx+0x67],cl
  407202:	je     0x407213
  407204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407205:	shl    BYTE PTR [eax],0xa1
  407208:	inc    eax
  407209:	and    BYTE PTR [ebx+0x3],dh
  40720c:	sub    BYTE PTR [ebx-0x14c5b6ff],0xea
  407213:	fldenv [eax-0x7ac46a88]
  407219:	mov    cl,0x18
  40721b:	mov    ds:0x904694d8,eax
  407220:	fidivr WORD PTR [ebp-0x14ceea89]
  407226:	push   es
  407227:	aam    0xb3
  407229:	pop    edi
  40722a:	mov    al,ds:0x69420b3a
  40722f:	xlat   BYTE PTR ds:[ebx]
  407230:	cmp    al,0xb5
  407232:	xor    al,dl
  407234:	stos   DWORD PTR es:[edi],eax
  407235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407236:	les    edx,FWORD PTR [ecx]
  407238:	ins    BYTE PTR es:[di],dx
  40723a:	sahf   
  40723b:	popa   
  40723c:	and    eax,DWORD PTR [eax-0x2a]
  40723f:	aaa    
  407240:	push   esi
  407241:	jl     0x40723a
  407243:	(bad)  
  407244:	sub    DWORD PTR [eax-0x11],edx
  407247:	pop    ds
  407248:	retf   
  407249:	mov    ecx,0x7b9fb03c
  40724e:	fsub   QWORD PTR [edi-0x558e9c6b]
  407254:	xchg   edx,eax
  407255:	xor    edx,DWORD PTR [eax-0x6e26245]
  40725b:	sbb    dh,BYTE PTR ds:0xf8b3c324
  407261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407262:	lock out 0x18,eax
  407265:	mov    cl,0x93
  407267:	popa   
  407268:	sub    al,0xe5
  40726a:	in     al,0x8f
  40726c:	sub    edx,esi
  40726e:	aas    
  40726f:	sahf   
  407270:	jno    0x407243
  407272:	push   cs
  407273:	ret    0xc327
  407276:	les    ebx,FWORD PTR [edi]
  407278:	fidiv  DWORD PTR [esi-0xd]
  40727b:	pop    edx
  40727c:	imul   edx,ebp,0x73
  40727f:	adc    eax,0x94012e47
  407284:	adc    dl,BYTE PTR [eax-0x258a929f]
  40728a:	inc    ebx
  40728b:	xor    DWORD PTR [ebp+0x1a],eax
  40728e:	mov    eax,ds:0x6ec724a0
  407293:	cwde   
  407294:	outs   dx,BYTE PTR ds:[esi]
  407295:	cmp    DWORD PTR ds:0x369fc4fc,0x57753bb4
  40729f:	aas    
  4072a0:	pop    ds
  4072a1:	cmc    
  4072a2:	fidiv  WORD PTR [ebx]
  4072a4:	lds    esi,FWORD PTR [ebp-0x739829ad]
  4072aa:	adc    DWORD PTR [eax+0x20318f88],edi
  4072b0:	fnsave [ecx]
  4072b2:	xor    al,0x28
  4072b4:	push   edx
  4072b5:	cmc    
  4072b6:	(bad)  
  4072b7:	div    esi
  4072b9:	add    dl,al
  4072bb:	retf   0xa881
  4072be:	aas    
  4072bf:	dec    ecx
  4072c0:	or     bh,BYTE PTR [ebp+eax*2+0x7d]
  4072c4:	adc    esp,DWORD PTR [edi+0x1cfa1e49]
  4072ca:	jge    0x4072a7
  4072cc:	retf   0x11f2
  4072cf:	mov    DWORD PTR [edx+eax*1+0x49b05bec],eax
  4072d6:	cdq    
  4072d7:	cmp    bl,BYTE PTR [eax]
  4072d9:	mov    ss,WORD PTR [edx+ebx*8-0x29]
  4072dd:	int3   
  4072de:	dec    eax
  4072df:	int    0x7d
  4072e1:	xchg   ebp,eax
  4072e2:	je     0x407322
  4072e4:	cmp    eax,0xbd9a4b52
  4072e9:	inc    ecx
  4072ea:	push   esi
  4072eb:	push   ecx
  4072ec:	jmp    0x69a41a2e
  4072f1:	nop
  4072f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072f3:	sbb    eax,0xff662bec
  4072f8:	and    dh,BYTE PTR [eax]
  4072fa:	je     0x407328
  4072fc:	or     al,BYTE PTR [edi+0x7b]
  4072ff:	mov    al,0x5f
  407301:	inc    esi
  407302:	dec    esp
  407303:	imul   BYTE PTR [ebx+0x79]
  407306:	mov    al,ds:0x86c25f6
  40730b:	call   0x2daeebe6
  407310:	dec    edi
  407311:	stc    
  407312:	sub    eax,0x5085626
  407317:	xor    eax,DWORD PTR [esi]
  407319:	dec    eax
  40731a:	push   0x74
  40731c:	repz xor al,0xd9
  40731f:	mov    ebp,DWORD PTR [ebx]
  407321:	mov    cl,0xfe
  407323:	ja     0x407318
  407325:	mov    ebx,0x40191ab6
  40732a:	mov    ecx,0x765a7ebb
  40732f:	(bad)  
  407330:	or     BYTE PTR [ecx+ecx*1-0x46880dfa],bh
  407337:	cmovne eax,DWORD PTR [ebp-0x65]
  40733b:	sub    edi,0xbfe0ce58
  407341:	xlat   BYTE PTR ds:[ebx]
  407342:	in     eax,dx
  407343:	outs   dx,DWORD PTR ds:[esi]
  407344:	adc    esi,DWORD PTR [ebx+0x2eb3430f]
  40734a:	xor    DWORD PTR [eax+0x6f],edi
  40734d:	mov    bh,0x81
  40734f:	ss or  eax,0x66ae03d7
  407355:	retf   0x3e6c
  407358:	add    ebx,DWORD PTR [edi-0x42]
  40735b:	popf   
  40735c:	call   0x6c4c48b2
  407361:	cli    
  407362:	jb     0x4073d7
  407364:	add    eax,0xdef2a2dd
  407369:	leave  
  40736a:	xor    BYTE PTR [ebx+0xf59e6d3],dl
  407370:	xor    al,0x9f
  407372:	mov    dl,BYTE PTR [edx]
  407374:	and    al,0x50
  407376:	sbb    esi,esp
  407378:	out    0x27,eax
  40737a:	dec    edx
  40737b:	jl     0x4073bd
  40737d:	div    eax
  40737f:	scas   eax,DWORD PTR es:[edi]
  407380:	ror    bh,1
  407382:	push   ebp
  407383:	jmp    0xfba1:0xe2408665
  40738a:	mov    ds:0x2385de67,eax
  40738f:	loop   0x407328
  407391:	jle    0x4073bc
  407393:	int3   
  407394:	jbe    0x4073be
  407396:	popf   
  407397:	scas   al,BYTE PTR es:[edi]
  407398:	inc    edx
  407399:	repnz or esp,DWORD PTR [esi]
  40739c:	lahf   
  40739d:	fst    DWORD PTR [edx]
  40739f:	add    ah,cl
  4073a1:	in     eax,0xb9
  4073a3:	mov    eax,ds:0xd48ba09f
  4073a8:	(bad)  
  4073a9:	in     eax,0xc3
  4073ab:	loope  0x4073f7
  4073ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073ae:	cmp    eax,0x9a31bb52
  4073b3:	sub    esi,ecx
  4073b5:	ja     0x40739a
  4073b7:	clc    
  4073b8:	pop    esi
  4073b9:	push   edi
  4073ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073bb:	push   edi
  4073bc:	int3   
  4073bd:	inc    ebx
  4073be:	inc    eax
  4073bf:	push   cs
  4073c0:	jp     0x407363
  4073c2:	fnstcw WORD PTR [ebx]
  4073c4:	push   eax
  4073c5:	icebp  
  4073c6:	out    dx,eax
  4073c7:	fwait
  4073c8:	sar    DWORD PTR [edi],1
  4073ca:	sbb    DWORD PTR [eax+0x4dad93ff],esi
  4073d0:	les    edx,FWORD PTR [eax+0x571a614e]
  4073d6:	neg    BYTE PTR [ebp+0x26]
  4073d9:	and    al,0x44
  4073db:	retf   0x805f
  4073de:	popa   
  4073df:	cmc    
  4073e0:	xchg   ebp,eax
  4073e1:	mov    bh,0x86
  4073e3:	cs mov al,0xcb
  4073e6:	sar    DWORD PTR [edi],0x5e
  4073e9:	cwde   
  4073ea:	push   esi
  4073eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073ec:	mov    dl,0x91
  4073ee:	aad    0x18
  4073f0:	push   ds
  4073f1:	jae    0x407390
  4073f3:	mov    dl,0x71
  4073f5:	or     DWORD PTR cs:[ebx-0x9fc1417],0x73
  4073fd:	stos   DWORD PTR es:[edi],eax
  4073fe:	jmp    0x4073ba
  407400:	cmc    
  407401:	sti    
  407402:	xlat   BYTE PTR ds:[ebx]
  407403:	pop    ebx
  407404:	rcl    BYTE PTR [edx+0x7c],0xa3
  407408:	mov    BYTE PTR [ecx-0x993182b],cl
  40740e:	not    edx
  407410:	adc    dl,0x4e
  407413:	add    eax,0x1f46db8c
  407418:	rol    ebx,cl
  40741a:	fcom   QWORD PTR [ebx+ebx*1-0x21ceeeb5]
  407421:	in     eax,dx
  407422:	adc    DWORD PTR ds:0x68e521f5,edi
  407428:	ins    DWORD PTR es:[edi],dx
  407429:	js     0x4074a2
  40742b:	mov    al,0xcb
  40742d:	jae    0x4074a9
  40742f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407430:	es (bad) 
  407432:	rcl    BYTE PTR [edx-0x36],0x99
  407436:	xor    al,0x46
  407438:	popf   
  407439:	adc    DWORD PTR [ebx],0xffffffca
  40743c:	xchg   esp,eax
  40743d:	cdq    
  40743e:	push   es
  40743f:	ins    DWORD PTR es:[edi],dx
  407440:	inc    ebp
  407441:	pop    esi
  407442:	pextrw esi,(bad),0xc5
  407444:	jo     0x40746c
  407446:	jb     0x4073de
  407448:	sub    al,0xfa
  40744a:	mov    ds:0x8338d298,eax
  40744f:	sub    DWORD PTR [ecx-0x6],eax
  407452:	pop    es
  407453:	push   es
  407454:	addr16 xchg esp,eax
  407456:	mov    esi,gs
  407458:	inc    edi
  40745a:	pop    edx
  40745b:	pusha  
  40745c:	les    edx,FWORD PTR [eax+0x65c00d9]
  407462:	fwait
  407463:	adc    al,0x93
  407465:	xor    BYTE PTR [edx+edi*8-0x7f],dl
  407469:	ret    
  40746a:	hlt    
  40746b:	xchg   ch,ah
  40746d:	xor    ch,dl
  40746f:	(bad)  
  407470:	bound  edx,QWORD PTR [edi]
  407472:	dec    ebp
  407473:	(bad)  
  407474:	test   eax,0x42f74f6
  407479:	fnstcw WORD PTR [ebx]
  40747b:	mov    edx,0xc9d27826
  407480:	add    DWORD PTR [ebx-0x3867f40f],0xffffffd3
  407487:	cmp    bh,dl
  407489:	retf   
  40748a:	inc    ebp
  40748b:	dec    esi
  40748c:	rcl    BYTE PTR [ebx-0x37cea2ae],1
  407492:	aas    
  407493:	mov    BYTE PTR [ecx+0x5a],dh
  407496:	out    0xfd,eax
  407498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407499:	inc    ecx
  40749a:	fidivr DWORD PTR [edx]
  40749c:	icebp  
  40749d:	in     al,0x25
  40749f:	in     eax,dx
  4074a0:	cmp    bl,BYTE PTR ds:0x96ddb27b
  4074a6:	in     al,0x67
  4074a8:	cmp    al,0x59
  4074aa:	fisubr WORD PTR [eax+0x521c37a7]
  4074b0:	dec    esp
  4074b1:	mov    eax,0x4dc0b42e
  4074b6:	push   cs
  4074b7:	in     eax,dx
  4074b8:	loop   0x4074f5
  4074ba:	push   ds
  4074bb:	mov    al,ds:0xa9e9ee3b
  4074c0:	push   esp
  4074c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074c2:	jnp    0x4074bb
  4074c4:	aas    
  4074c5:	cmp    DWORD PTR [ecx],edi
  4074c7:	gs mov cl,bl
  4074ca:	pop    ebp
  4074cb:	xor    eax,0x36b001ca
  4074d0:	add    DWORD PTR [edx+0x6d],ecx
  4074d3:	mov    bh,0xfc
  4074d5:	(bad)  
  4074d6:	das    
  4074d7:	je     0x407543
  4074d9:	cmc    
  4074da:	es es adc eax,0x26920561
  4074e1:	out    0x8b,al
  4074e3:	mov    al,ds:0xe8f070ae
  4074e8:	das    
  4074e9:	jo     0x407507
  4074eb:	push   0xffffffe8
  4074ed:	xor    ebx,DWORD PTR [ecx]
  4074ef:	out    0x58,al
  4074f1:	mov    bh,0xdb
  4074f3:	(bad)  
  4074f4:	xlat   BYTE PTR ds:[ebx]
  4074f5:	push   0x76e05aaf
  4074fa:	data16 xor al,0xce
  4074fd:	js     0x4074a1
  4074ff:	adc    al,0xb0
  407501:	sub    al,0x45
  407503:	ret    
  407504:	xlat   BYTE PTR ds:[ebx]
  407505:	dec    ecx
  407506:	mov    ebx,0x76104d31
  40750b:	or     al,0xde
  40750d:	add    BYTE PTR [edi+0x55],al
  407510:	retf   0x8c4b
  407513:	test   dl,dh
  407515:	xor    al,0xd2
  407517:	ins    DWORD PTR es:[edi],dx
  407518:	shr    BYTE PTR [edi-0x75],cl
  40751b:	xchg   ebx,eax
  40751c:	sbb    ch,BYTE PTR [ebp-0x17e05cd9]
  407522:	add    eax,0xdf82c7a9
  407527:	add    DWORD PTR ds:0x618a8036,0x5a
  40752e:	jle    0x40757d
  407530:	push   edi
  407531:	ror    ebx,0x78
  407534:	scas   eax,DWORD PTR es:[edi]
  407535:	cmp    al,0xd2
  407537:	cli    
  407538:	pop    ebp
  407539:	mov    edi,0x6acf511d
  40753e:	sbb    al,0x4d
  407540:	dec    ebx
  407541:	(bad)  
  407542:	cmp    al,0xa1
  407544:	fs pusha 
  407546:	jmp    0xa6af:0x28fe4ffa
  40754d:	out    dx,al
  40754e:	shl    BYTE PTR [edi],cl
  407550:	retf   0xf929
  407553:	arpl   WORD PTR [ebx-0xd],di
  407556:	sbb    BYTE PTR [esi+0x56],al
  407559:	or     esi,DWORD PTR [edi-0x28387c1b]
  40755f:	mov    gs,WORD PTR [esi+esi*1-0x1e]
  407563:	xlat   BYTE PTR ds:[ebx]
  407564:	(bad)  
  407565:	jno    0x40755b
  407567:	(bad)  
  407568:	xchg   ebx,eax
  407569:	int3   
  40756a:	sbb    dl,BYTE PTR [ecx-0x68]
  40756d:	sub    eax,0x6f5159bc
  407572:	sahf   
  407573:	ja     0x407522
  407575:	jecxz  0x4075c2
  407577:	inc    ecx
  407578:	mov    cl,0x1a
  40757a:	and    esp,DWORD PTR [ebx+0xf]
  40757d:	mov    WORD PTR [ebp-0xd],ss
  407580:	mov    ds:0x29656cf0,eax
  407585:	ds xchg ebp,eax
  407587:	je     0x4075bc
  407589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40758a:	cmp    DWORD PTR [edi],ecx
  40758c:	ret    0xafe8
  40758f:	jo     0x407564
  407591:	pop    ecx
  407592:	enter  0x5e2b,0xf6
  407596:	and    ch,BYTE PTR [ecx]
  407598:	xchg   BYTE PTR [ebp-0x7ccda41b],dl
  40759e:	clc    
  40759f:	and    al,0xf3
  4075a1:	or     bh,BYTE PTR [ecx]
  4075a3:	lds    eax,FWORD PTR [ecx-0x62a2e9]
  4075a9:	ret    
  4075aa:	rcl    DWORD PTR [edx+0x2b7d34e5],0x23
  4075b1:	stos   BYTE PTR es:[edi],al
  4075b2:	adc    DWORD PTR [esi],edi
  4075b4:	test   eax,0x53f29800
  4075b9:	sahf   
  4075ba:	jne    0x4075e6
  4075bc:	inc    BYTE PTR [eax+edi*8-0x59]
  4075c0:	mov    eax,ds:0x4442069f
  4075c5:	xor    DWORD PTR [eax-0x7c12ca9a],esp
  4075cb:	adc    al,BYTE PTR [eax-0x2b]
  4075ce:	xor    esi,esi
  4075d0:	cmp    eax,DWORD PTR [ebp+0x12930607]
  4075d6:	out    dx,al
  4075d7:	into   
  4075d8:	sbb    DWORD PTR [ebp+0x2c],eax
  4075db:	sub    ah,0x42
  4075de:	xor    dl,BYTE PTR [edx+ebp*1+0x612eff84]
  4075e5:	sbb    DWORD PTR [eax+0x1f],0x12
  4075e9:	ficom  WORD PTR [eax-0xdadc245]
  4075ef:	enter  0xd5cb,0x26
  4075f3:	sub    ebx,esp
  4075f5:	or     BYTE PTR [edi+0xc0946f8],0xbb
  4075fc:	es jmp 0x407677
  4075ff:	cmp    esi,DWORD PTR [eax-0x66b58e3f]
  407605:	jo     0x407683
  407607:	jno    0x4075d0
  407609:	sar    DWORD PTR [ebp+0x6d],cl
  40760c:	out    0x20,al
  40760e:	sar    BYTE PTR [eax-0xc],1
  407611:	popf   
  407612:	lods   eax,DWORD PTR ds:[esi]
  407613:	shl    DWORD PTR [eax-0x15],1
  407616:	mov    ch,0x41
  407618:	lds    ebp,FWORD PTR [eax]
  40761a:	mov    ch,0xf6
  40761c:	jl     0x4075b5
  40761e:	push   esp
  40761f:	mov    dl,0xdd
  407621:	pop    ebp
  407622:	inc    edx
  407623:	push   eax
  407624:	and    dl,BYTE PTR [ecx]
  407626:	mov    ch,0x26
  407628:	enter  0x7a3e,0x24
  40762c:	inc    ecx
  40762d:	sbb    sp,cx
  407630:	xchg   ebp,eax
  407631:	jbe    0x40762d
  407633:	mov    dh,0x66
  407635:	jae    0x4075c5
  407637:	jne    0x407626
  407639:	sahf   
  40763a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40763b:	stc    
  40763c:	adc    BYTE PTR [ecx],bl
  40763e:	add    eax,0xca9ef9ee
  407643:	jmp    0x407647
  407645:	test   BYTE PTR [eax+ebp*4],0xe4
  407649:	xchg   ebp,eax
  40764a:	adc    eax,0x7abd731
  40764f:	xor    dl,al
  407651:	mov    edx,0x3ac96bf5
  407656:	ds xor al,0xf8
  407659:	daa    
  40765a:	mov    bl,0x6d
  40765c:	pop    ebx
  40765d:	js     0x4076cb
  40765f:	mov    BYTE PTR [esp+ecx*1+0x49],cl
  407663:	sub    BYTE PTR [edi],ch
  407665:	xchg   ebp,eax
  407666:	add    dh,BYTE PTR [edx+0x35]
  407669:	mov    ch,0x3b
  40766b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40766c:	sub    DWORD PTR [ecx+0x711dfd94],eax
  407672:	and    BYTE PTR [edx+0x225362b2],0x62
  407679:	repnz push ss
  40767b:	sbb    BYTE PTR [edi+edi*1],dh
  40767e:	jmp    0xf38b372a
  407683:	cmp    ch,BYTE PTR [ebp-0xfbf0bc2]
  407689:	jo     0x407625
  40768b:	sbb    eax,0xaa3dd0e9
  407690:	outs   dx,DWORD PTR ds:[esi]
  407691:	pop    ebp
  407692:	in     al,dx
  407693:	pop    ecx
  407694:	es aad 0x66
  407697:	jo     0x407710
  407699:	out    0xbd,al
  40769b:	push   ebp
  40769c:	adc    DWORD PTR [ebp+eax*8+0x72],edi
  4076a0:	clc    
  4076a1:	or     dh,al
  4076a3:	push   0xb2b52dbf
  4076a8:	fstp   TBYTE PTR [esp+edx*4-0x74]
  4076ac:	call   0xd363a5f1
  4076b1:	call   0x8d7a:0xd191e498
  4076b8:	lods   al,BYTE PTR ds:[esi]
  4076b9:	sub    dh,BYTE PTR [edx]
  4076bb:	push   ebx
  4076bc:	(bad)  [edi+0x23bd70b7]
  4076c2:	adc    esp,DWORD PTR ds:0x5657d79a
  4076c8:	hlt    
  4076c9:	xorps  xmm0,xmm4
  4076cc:	pop    ebp
  4076cd:	cmp    DWORD PTR [ebp+0x2b],ebx
  4076d0:	popa   
  4076d1:	add    ebx,DWORD PTR gs:[ebx+0x63]
  4076d5:	(bad)  
  4076d6:	pusha  
  4076d7:	mov    ds:0x88fcb5c0,eax
  4076dc:	mov    fs,WORD PTR [ecx-0x64ae3c91]
  4076e2:	pushf  
  4076e3:	mov    edi,0xd4a40281
  4076e8:	arpl   si,dx
  4076ea:	pushf  
  4076eb:	rsqrtps xmm6,XMMWORD PTR [edi]
  4076ee:	sbb    al,0x4c
  4076f0:	push   esi
  4076f1:	xor    eax,edi
  4076f3:	mov    bl,0x62
  4076f5:	in     al,dx
  4076f6:	test   BYTE PTR [esi+0x5a],dl
  4076f9:	cs xchg ebp,eax
  4076fb:	mov    DWORD PTR [ebp+0x7e0c03ed],esi
  407701:	xchg   esi,eax
  407702:	jne    0x4076d7
  407704:	mov    ch,0x88
  407706:	cmp    eax,0xdf1d32eb
  40770b:	popf   
  40770c:	xor    BYTE PTR ds:0x4c00c14b,dl
  407712:	push   edx
  407713:	mov    BYTE PTR [esi+0x4b],0xc9
  407717:	aad    0xf5
  407719:	sbb    DWORD PTR [ebx],ebp
  40771b:	sub    eax,0xc53615e9
  407720:	sub    BYTE PTR [ecx+0x40371274],cl
  407726:	or     BYTE PTR ds:0x31ca5c52,al
  40772c:	popf   
  40772d:	xlat   BYTE PTR ds:[ebx]
  40772e:	or     ch,BYTE PTR [ebx]
  407730:	imul   ecx,DWORD PTR [ebx-0x1a1fc1aa],0x1cf157d1
  40773a:	mov    cl,BYTE PTR [esi-0x7]
  40773d:	adc    cl,bh
  40773f:	test   al,0xb9
  407741:	dec    edi
  407742:	in     eax,0xac
  407744:	jno    0x40779d
  407746:	sbb    BYTE PTR [ecx],ch
  407748:	pop    esi
  407749:	jmp    0x4e7ee396
  40774e:	mov    dl,0x33
  407750:	or     eax,0xb42aac01
  407755:	test   ebx,ebx
  407757:	xor    al,0xe3
  407759:	dec    esi
  40775a:	out    0xe,al
  40775c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40775d:	add    bh,ah
  40775f:	sub    bh,ah
  407761:	push   ebp
  407762:	imul   ecx,DWORD PTR [edx-0x258483e0],0x7a
  407769:	and    DWORD PTR [ebp+0x35620c8c],ecx
  40776f:	dec    esp
  407770:	test   esp,0x89bcc635
  407776:	cmovb  edx,DWORD PTR [ecx]
  407779:	sar    DWORD PTR [eax],1
  40777b:	aas    
  40777c:	mov    ebp,0x600347b0
  407781:	clc    
  407782:	retf   0x6bee
  407785:	xor    DWORD PTR [edx+0x33ef7f67],esp
  40778b:	fisttp DWORD PTR [eax]
  40778d:	jb     0x407778
  40778f:	adc    DWORD PTR [eax],0x7f
  407792:	icebp  
  407793:	inc    edx
  407794:	cmp    al,BYTE PTR [ecx+0x10]
  407797:	(bad)  [edx-0xacf2eaa]
  40779d:	inc    esp
  40779e:	add    ecx,ebx
  4077a0:	(bad)  
  4077a1:	jecxz  0x407725
  4077a3:	dec    ebp
  4077a4:	pop    es
  4077a5:	in     al,0x7c
  4077a7:	push   0xffffff80
  4077a9:	aad    0x88
  4077ab:	cmp    al,0xd4
  4077ad:	les    esi,FWORD PTR [edx-0x4f]
  4077b0:	inc    esi
  4077b1:	push   esi
  4077b2:	in     al,0x3d
  4077b4:	xor    eax,DWORD PTR [ecx]
  4077b6:	retf   
  4077b7:	call   0x18e:0x726dc0f0
  4077be:	jge    0x4077e3
  4077c0:	and    DWORD PTR [esi+edi*2-0x57d0bc68],eax
  4077c7:	jge    0x407790
  4077c9:	in     al,dx
  4077ca:	js     0x407818
  4077cc:	sub    edi,DWORD PTR [ebx-0x15]
  4077cf:	(bad)  [esi-0x235ed955]
  4077d5:	mov    dh,0x80
  4077d7:	daa    
  4077d8:	sub    ch,BYTE PTR [eax]
  4077da:	mov    ecx,DWORD PTR [ecx-0x2a417caf]
  4077e0:	adc    BYTE PTR [ecx+0x6d],dl
  4077e3:	dec    edx
  4077e4:	add    BYTE PTR [ebp+0x7f9ef783],al
  4077ea:	mov    eax,0x1345c132
  4077ef:	mov    BYTE PTR [ebx-0x1f],al
  4077f2:	mov    ebp,0x7f2b096
  4077f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077f8:	dec    esp
  4077f9:	sbb    cl,BYTE PTR [ebx+0x765e8088]
  4077ff:	sub    al,0xd4
  407801:	pop    edi
  407802:	push   cs
  407803:	test   BYTE PTR [ebp+0x59],dl
  407806:	push   esp
  407807:	dec    esp
  407808:	pop    edx
  407809:	jne    0x407839
  40780b:	or     eax,0xc19a0431
  407810:	clc    
  407811:	fiadd  DWORD PTR [ebp-0x14]
  407814:	test   al,0xd1
  407816:	aam    0xcb
  407818:	jecxz  0x4077a2
  40781a:	(bad)  
  40781b:	aas    
  40781c:	pop    ss
  40781d:	mov    dh,0x58
  40781f:	push   eax
  407820:	das    
  407821:	pop    edi
  407822:	mov    ds:0x15a8a8f,al
  407827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407828:	enter  0xcad8,0x72
  40782c:	inc    ebp
  40782d:	mov    ebx,0x664961a6
  407832:	popf   
  407833:	out    0x1a,eax
  407835:	mov    ds:0xd438913f,al
  40783a:	sub    edx,0xffffffc4
  40783d:	and    al,BYTE PTR [ebp-0x44]
  407840:	loopne 0x407810
  407842:	jmp    0x4077ef
  407844:	xor    eax,0x6a8b8072
  407849:	popa   
  40784a:	push   0x95bb68fd
  40784f:	lods   al,BYTE PTR ds:[esi]
  407850:	(bad)  
  407851:	mov    bl,0xe0
  407853:	add    eax,esi
  407855:	cld    
  407856:	xchg   edi,eax
  407857:	mov    WORD PTR [ebp-0x3],es
  40785a:	inc    ebp
  40785b:	push   esp
  40785c:	bsf    ebx,DWORD PTR [eax+0x790ae623]
  407863:	je     0x4077f2
  407865:	cwde   
  407866:	out    dx,al
  407867:	mov    DWORD PTR [ebx-0x3a],edi
  40786a:	scas   eax,DWORD PTR es:[edi]
  40786b:	shl    ah,1
  40786d:	jne    0x4078cf
  40786f:	pop    ds
  407870:	mov    bl,al
  407872:	out    dx,al
  407873:	icebp  
  407874:	sbb    al,0x4d
  407876:	lds    edx,FWORD PTR [edi-0x138732dc]
  40787c:	and    ebp,DWORD PTR [ebx+0x2a]
  40787f:	xchg   ebx,eax
  407880:	xor    edi,DWORD PTR [eax-0x3b]
  407883:	in     eax,dx
  407884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407885:	pop    ecx
  407886:	sub    eax,0x68116b7b
  40788b:	add    al,0x9
  40788d:	jle    0x40789c
  40788f:	or     bl,BYTE PTR [eax+0x2f798224]
  407895:	pop    ebp
  407896:	jno    0x40785e
  407898:	stc    
  407899:	push   edx
  40789a:	pop    es
  40789b:	out    dx,al
  40789c:	sbb    eax,DWORD PTR [edx-0x7d]
  40789f:	or     BYTE PTR [edi+0x382a6c00],cl
  4078a5:	mov    BYTE PTR [edx+0x6c8a2d79],bl
  4078ab:	ins    BYTE PTR es:[edi],dx
  4078ac:	aam    0xaa
  4078ae:	and    eax,0xa9c928c3
  4078b3:	stos   BYTE PTR es:[edi],al
  4078b4:	cli    
  4078b5:	or     ch,BYTE PTR [edi-0xcbffc16]
  4078bb:	adc    BYTE PTR [eax-0xe],bl
  4078be:	mov    dl,0x3
  4078c0:	out    dx,eax
  4078c1:	dec    esp
  4078c2:	retf   
  4078c3:	test   al,0x89
  4078c5:	push   esp
  4078c6:	mov    cl,0xc7
  4078c8:	and    bl,BYTE PTR [edi+esi*8-0x36]
  4078cc:	or     al,0xca
  4078ce:	pusha  
  4078cf:	int3   
  4078d0:	test   DWORD PTR [edi-0x77],0xccc731b2
  4078d7:	add    BYTE PTR ds:0x90169b1c,bh
  4078dd:	mov    edx,0x283be80c
  4078e2:	scas   eax,DWORD PTR es:[edi]
  4078e3:	call   0xdb01:0x8aafd12
  4078ea:	arpl   si,di
  4078ec:	mov    dh,BYTE PTR [ebx+0x28]
  4078ef:	rol    BYTE PTR [ebx+0x26],cl
  4078f2:	mov    ds:0x8f20f1d6,al
  4078f7:	mov    al,0xa9
  4078f9:	xlat   BYTE PTR ds:[ebx]
  4078fa:	add    DWORD PTR [ebx+edi*8-0x16d282b5],eax
  407901:	mov    WORD PTR [ebp-0x1],gs
  407904:	sub    BYTE PTR [eax-0x1e],bh
  407907:	scas   al,BYTE PTR es:[edi]
  407908:	mov    bl,0x76
  40790a:	hlt    
  40790b:	sub    cl,ch
  40790d:	mov    esp,0x6aaefac4
  407912:	mov    al,ds:0x96101f9a
  407917:	adc    DWORD PTR [ecx],0xffffffcd
  40791a:	lds    ebx,FWORD PTR [edi]
  40791c:	dec    ebp
  40791d:	or     eax,0x1716879e
  407922:	ins    BYTE PTR es:[edi],dx
  407923:	add    cl,dl
  407925:	push   ebp
  407926:	mov    DWORD PTR [ebp-0x58],eax
  407929:	idiv   BYTE PTR [edi-0x6d162c51]
  40792f:	lahf   
  407930:	xor    bh,BYTE PTR [ebx-0x6c312579]
  407936:	xadd   BYTE PTR [edi],ah
  407939:	sar    BYTE PTR [eax-0x2f2ac53e],0xa7
  407940:	mov    ecx,0x46b3fc27
  407945:	or     BYTE PTR [esp+ecx*8+0x3f],dh
  407949:	push   ss
  40794a:	mov    ecx,0x9936f7a3
  40794f:	push   ds
  407950:	inc    ecx
  407951:	sub    BYTE PTR [esi+0x66cd58df],ah
  407957:	cmp    eax,0x799f5af3
  40795c:	inc    ecx
  40795d:	ror    BYTE PTR [esi+0x1bc2eaa4],cl
  407963:	pop    edi
  407964:	mov    ebx,0xa0ffa297
  407969:	adc    eax,0xeda881f6
  40796e:	push   cs
  40796f:	icebp  
  407970:	and    al,0xb6
  407972:	inc    edi
  407973:	push   es
  407974:	mov    edx,DWORD PTR [edi]
  407976:	mov    cl,0x8d
  407978:	in     eax,0x31
  40797a:	(bad)  
  40797b:	mov    ch,0x6f
  40797d:	xlat   BYTE PTR ds:[ebx]
  40797e:	xchg   esi,eax
  40797f:	push   esp
  407980:	ins    BYTE PTR es:[edi],dx
  407981:	fwait
  407982:	add    DWORD PTR [ecx-0x51666a79],edx
  407988:	pop    esi
  407989:	mov    edi,0x122567e8
  40798e:	pop    ebx
  40798f:	int    0x31
  407991:	shl    ecx,cl
  407993:	and    esi,edx
  407995:	sbb    eax,0xc17f1bd4
  40799a:	in     al,dx
  40799b:	lea    esi,[edx-0x35]
  40799e:	and    cl,BYTE PTR [ebx+ebp*2-0x5199ae19]
  4079a5:	pop    edi
  4079a6:	call   0x6d44:0x55d6bfc5
  4079ad:	aaa    
  4079ae:	shl    BYTE PTR [ebp-0x37dd30f5],0x77
  4079b5:	(bad)  [edi]
  4079b7:	mov    al,ds:0x79951d37
  4079bc:	clc    
  4079bd:	and    al,0x78
  4079bf:	out    0x13,al
  4079c1:	lea    edi,[eax-0x78]
  4079c4:	inc    esp
  4079c5:	inc    ebx
  4079c6:	aaa    
  4079c7:	aas    
  4079c8:	mov    cl,0x1b
  4079ca:	cmp    DWORD PTR [edx+0x4fbf505f],esi
  4079d0:	in     al,0xc2
  4079d2:	cmc    
  4079d3:	scas   eax,DWORD PTR es:[edi]
  4079d4:	pusha  
  4079d5:	(bad)  
  4079d7:	mov    cl,0xd4
  4079d9:	mov    ebx,0x954633ea
  4079de:	sahf   
  4079df:	sbb    BYTE PTR [edi-0x9],cl
  4079e2:	lock inc ecx
  4079e4:	sub    cl,dl
  4079e6:	out    dx,eax
  4079e7:	jmp    0xfe:0x10ec136c
  4079ee:	add    BYTE PTR [esp+esi*8],bh
  4079f1:	fwait
  4079f2:	jmp    DWORD PTR [edi]
  4079f4:	ja     0x4079fb
  4079f6:	mov    ?,WORD PTR [ebx+0x19]
  4079f9:	cmp    ch,cl
  4079fb:	adc    eax,0xcb2ff815
  407a00:	push   eax
  407a01:	outs   dx,DWORD PTR ds:[esi]
  407a02:	xchg   edx,eax
  407a03:	ss push ds
  407a05:	xor    BYTE PTR [esi+0x19],bl
  407a08:	rcr    DWORD PTR [edx],1
  407a0a:	inc    esi
  407a0b:	sbb    BYTE PTR [eax],0x2
  407a0e:	fnstenv [esi+edi*2]
  407a11:	xchg   ebp,eax
  407a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a13:	fcom   QWORD PTR [edx-0x6b]
  407a16:	das    
  407a17:	cmp    al,0xd6
  407a19:	out    dx,eax
  407a1a:	mov    ah,0xf2
  407a1c:	outs   dx,DWORD PTR ds:[esi]
  407a1d:	out    0x4d,al
  407a1f:	mov    dh,0x89
  407a21:	js     0x407a6e
  407a23:	das    
  407a24:	(bad)  
  407a25:	mov    edx,0x5a5715c9
  407a2a:	xchg   ebp,eax
  407a2b:	sub    al,0x38
  407a2d:	shl    dl,1
  407a2f:	outs   dx,DWORD PTR ds:[esi]
  407a30:	aas    
  407a31:	aad    0xab
  407a33:	inc    ebx
  407a34:	js     0x4079ff
  407a36:	dec    ebx
  407a37:	pop    esi
  407a38:	jbe    0x407a10
  407a3a:	test   al,0x24
  407a3c:	jo     0x4079f0
  407a3e:	cwde   
  407a3f:	pop    esi
  407a40:	mov    ch,0xd9
  407a42:	outs   dx,BYTE PTR ds:[esi]
  407a43:	(bad)  
  407a44:	jbe    0x4079cd
  407a46:	mov    bh,0x71
  407a48:	adc    al,0xab
  407a4a:	iret   
  407a4b:	rcl    DWORD PTR [edx],1
  407a4d:	sbb    DWORD PTR [edi+0x70e1d3bf],ebx
  407a53:	push   eax
  407a54:	mov    ebx,0x73530180
  407a59:	mov    ds:0x256ee5c5,eax
  407a5e:	push   0x62
  407a60:	repnz cmp cl,BYTE PTR [eax+0x67]
  407a64:	pop    edx
  407a65:	mov    dh,0xef
  407a67:	dec    esi
  407a68:	sbb    eax,0x36c655
  407a6d:	xchg   esp,eax
  407a6e:	push   bp
  407a70:	inc    esi
  407a71:	mov    bl,0x1b
  407a73:	and    ah,cl
  407a75:	mov    ch,0x2b
  407a77:	js     0x407a53
  407a79:	jg     0x407a49
  407a7b:	add    esi,esi
  407a7d:	mov    dl,0xcb
  407a7f:	in     eax,0x94
  407a81:	fs retf 0xd90a
  407a85:	inc    edi
  407a86:	bound  ebx,QWORD PTR [esi+0x306fd129]
  407a8c:	aas    
  407a8d:	cmp    DWORD PTR [eax+ebx*1],edi
  407a90:	stos   DWORD PTR es:[edi],eax
  407a91:	dec    eax
  407a92:	mov    edi,0xb26681bc
  407a97:	xchg   esp,eax
  407a98:	hlt    
  407a99:	lods   al,BYTE PTR ds:[esi]
  407a9a:	xor    al,0x8f
  407a9c:	leave  
  407a9d:	xlat   BYTE PTR ds:[ebx]
  407a9e:	pop    ecx
  407a9f:	out    0x8a,al
  407aa1:	dec    esi
  407aa2:	cmc    
  407aa3:	push   edi
  407aa4:	inc    DWORD PTR [esp+edx*1-0x35]
  407aa8:	rcl    BYTE PTR [edi-0x27],1
  407aab:	fnsave [ebp-0x4506e7fc]
  407ab1:	jne    0x407b27
  407ab3:	cmp    DWORD PTR [esi],esp
  407ab5:	cmp    al,0xe6
  407ab7:	push   ebx
  407ab8:	cmp    DWORD PTR [esi+0x75],0x6b895309
  407abf:	rcr    BYTE PTR [eax+0x18587dc3],cl
  407ac5:	(bad)  
  407ac7:	sbb    eax,0xb60a6f5c
  407acc:	test   eax,0x57ec2693
  407ad1:	mov    dl,0xae
  407ad3:	cwde   
  407ad4:	jecxz  0x407ab5
  407ad6:	cmp    ebx,ecx
  407ad8:	pop    ebp
  407ad9:	mov    bh,0x76
  407adb:	mov    esi,0x9aaa2167
  407ae0:	mov    esi,0x2c9b3f66
  407ae5:	fimul  WORD PTR [ecx]
  407ae7:	jnp    0x407b56
  407ae9:	pop    eax
  407aea:	dec    esp
  407aeb:	int3   
  407aec:	cmovl  eax,DWORD PTR [edx+0x66]
  407af0:	shl    DWORD PTR [esi+0x1f0c67c6],0x40
  407af7:	in     eax,0x4a
  407af9:	jo     0x407adc
  407afb:	aaa    
  407afc:	adc    al,0x4c
  407afe:	rol    bl,cl
  407b00:	fdivr  DWORD PTR [ecx-0x775c251c]
  407b06:	xchg   esp,eax
  407b07:	js     0x407a9c
  407b09:	test   DWORD PTR [esp+esi*8],eax
  407b0c:	xchg   ebp,eax
  407b0d:	lods   eax,DWORD PTR ds:[esi]
  407b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b0f:	mov    dh,0x70
  407b11:	inc    edi
  407b12:	sub    BYTE PTR [ebx+0x1],al
  407b15:	xor    al,ch
  407b17:	mov    esp,0xc769f3d4
  407b1c:	shl    esi,1
  407b1e:	jmp    0x21d9547e
  407b23:	adc    BYTE PTR [ebp-0x73],bl
  407b26:	mov    ebx,eax
  407b28:	nop
  407b29:	jl     0x407ac7
  407b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b2c:	mov    eax,ds:0x8980e96c
  407b31:	loopne 0x407bac
  407b33:	mov    esp,esp
  407b35:	fcmovnbe st,st(2)
  407b37:	pop    ecx
  407b38:	out    dx,eax
  407b39:	dec    edx
  407b3a:	mov    DWORD PTR [ecx],ebp
  407b3c:	aas    
  407b3d:	cwde   
  407b3e:	call   0xc9e10496
  407b43:	js     0x407b22
  407b45:	sahf   
  407b46:	pop    edi
  407b47:	fistp  DWORD PTR [eax+0x44dfa7a1]
  407b4d:	bound  eax,QWORD PTR [edi]
  407b4f:	fisttp QWORD PTR [esi-0x22aefb5a]
  407b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b56:	sbb    eax,0x83776c68
  407b5b:	cmp    eax,0xf3ecf13b
  407b60:	das    
  407b61:	and    eax,0x3ad33bf2
  407b66:	je     0x407b31
  407b68:	lahf   
  407b69:	fwait
  407b6a:	and    al,0x80
  407b6c:	scas   eax,DWORD PTR es:[edi]
  407b6d:	and    al,BYTE PTR [ecx+0x58034429]
  407b73:	xlat   BYTE PTR ds:[ebx]
  407b74:	punpckldq mm1,DWORD PTR [eax]
  407b77:	ja     0x407b7a
  407b79:	mov    ebx,0x4e9ba07d
  407b7e:	test   eax,0x4b406d4b
  407b83:	xchg   ecx,eax
  407b84:	xchg   edx,eax
  407b85:	dec    edx
  407b86:	dec    ecx
  407b87:	out    dx,al
  407b88:	dec    esi
  407b89:	shr    BYTE PTR [esi+0x326d152d],0x5d
  407b90:	(bad)  
  407b91:	test   al,0x5b
  407b93:	(bad)  [ebx+ebp*2-0x65ba3f53]
  407b9a:	dec    esp
  407b9b:	ret    0x59af
  407b9e:	data16 out 0xb1,al
  407ba1:	icebp  
  407ba2:	push   0xd7f980f4
  407ba7:	lods   eax,DWORD PTR ds:[esi]
  407ba8:	int3   
  407ba9:	test   DWORD PTR [ebp+0x13f3c027],0x68958976
  407bb3:	cmp    bl,BYTE PTR [edx+0x7d55ae8e]
  407bb9:	pusha  
  407bba:	lock xlat BYTE PTR ds:[ebx]
  407bbc:	imul   dx,WORD PTR [ebx],0x6a
  407bc0:	cmp    eax,0xc36fd835
  407bc5:	(bad)  
  407bc6:	fiadd  DWORD PTR [eax+0x65a5e858]
  407bcc:	(bad)  
  407bcd:	xor    dh,BYTE PTR [edx]
  407bcf:	lods   eax,DWORD PTR ds:[esi]
  407bd0:	iret   
  407bd1:	inc    ecx
  407bd2:	sub    BYTE PTR [ebp-0x1d5eccf4],0xe0
  407bd9:	sbb    al,0xf3
  407bdb:	js     0x407c29
  407bdd:	or     eax,0x4314a8a5
  407be2:	es jge 0x407b69
  407be5:	(bad)  ds:0x6c580708
  407beb:	mov    al,0xb9
  407bed:	loop   0x407bc6
  407bef:	in     al,0xee
  407bf1:	out    0x9f,al
  407bf3:	pop    ss
  407bf4:	outs   dx,DWORD PTR ds:[esi]
  407bf5:	mov    ds:0x79b49949,al
  407bfa:	fnstsw WORD PTR [eax+0x5a]
  407bfd:	push   eax
  407bfe:	repz dec edi
  407c00:	add    esi,DWORD PTR [eax+esi*8-0x5]
  407c04:	mov    ds:0xfdf663f6,eax
  407c0a:	daa    
  407c0b:	mov    ch,0xe8
  407c0d:	inc    edx
  407c0e:	comiss xmm3,DWORD PTR [edx+0x48c5e0b0]
  407c15:	push   esi
  407c16:	repz dec ebx
  407c18:	fist   WORD PTR [edx+0x6ec85883]
  407c1e:	jno    0x407c8e
  407c20:	ret    
  407c21:	sub    DWORD PTR [eax+0x7cc131b0],esi
  407c27:	sbb    ah,al
  407c29:	add    al,0xeb
  407c2b:	out    dx,al
  407c2c:	int    0x4d
  407c2e:	in     al,0xe
  407c30:	cmp    al,0xc9
  407c32:	push   0x6186c807
  407c37:	inc    edx
  407c38:	push   ebp
  407c39:	push   es
  407c3a:	stos   BYTE PTR es:[edi],al
  407c3b:	xor    BYTE PTR [ebx],0x65
  407c3e:	pop    edx
  407c3f:	in     eax,0x18
  407c41:	dec    edi
  407c42:	add    BYTE PTR [edi],dl
  407c44:	pop    esp
  407c45:	mov    esi,0x4041f56
  407c4a:	ror    DWORD PTR [edx-0x69180be9],1
  407c50:	inc    esp
  407c51:	lock mul BYTE PTR [edi+0x5452f667]
  407c58:	cmp    al,0x45
  407c5a:	add    esp,DWORD PTR [eax+0x341c89ff]
  407c60:	(bad)  
  407c62:	outs   dx,DWORD PTR ds:[esi]
  407c63:	ret    0xa6a7
  407c66:	ffree  st(2)
  407c68:	fidivr WORD PTR [eax*2+0x5dc7fd06]
  407c6f:	xlat   BYTE PTR ds:[ebx]
  407c70:	mov    edx,0x66d52766
  407c75:	imul   edx,ebp,0x7b767760
  407c7b:	ret    0xa81a
  407c7e:	cdq    
  407c7f:	popf   
  407c80:	jno    0x407cf6
  407c82:	(bad)  
  407c83:	dec    esi
  407c84:	icebp  
  407c85:	or     eax,0xc9d9d15f
  407c8a:	push   eax
  407c8b:	mov    bh,0xca
  407c8d:	mov    ah,BYTE PTR [esi+0x71a803aa]
  407c93:	bound  esp,QWORD PTR [ebp+0x56359e37]
  407c99:	mov    bl,0x3f
  407c9b:	ss dec edx
  407c9d:	call   0xd52d:0xfa6fb3f9
  407ca4:	leave  
  407ca5:	pop    esi
  407ca6:	std    
  407ca7:	mov    edx,0xff15f88c
  407cac:	pop    esi
  407cad:	ins    DWORD PTR es:[edi],dx
  407cae:	inc    eax
  407caf:	repnz cmp eax,0x595b5dc8
  407cb5:	mov    edx,0x19e9c0c1
  407cba:	cmp    al,0xe9
  407cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cbd:	push   esp
  407cbe:	in     eax,dx
  407cbf:	fst    QWORD PTR [ecx+0x36097745]
  407cc5:	stos   BYTE PTR es:[edi],al
  407cc6:	inc    esp
  407cc7:	int3   
  407cc8:	sbb    eax,0x3815692c
  407ccd:	and    DWORD PTR [esi],ebx
  407ccf:	cmp    DWORD PTR [edx+eiz*2+0x59cda1ba],0x579d3d1b
  407cda:	jb     0x407d19
  407cdc:	outs   dx,DWORD PTR ds:[esi]
  407cdd:	push   ds
  407cde:	add    edx,ebp
  407ce0:	mov    ecx,0xe708f882
  407ce5:	dec    edi
  407ce6:	mov    ds:0x1a460358,eax
  407ceb:	inc    ecx
  407cec:	add    al,BYTE PTR [edi]
  407cee:	sbb    ecx,ebp
  407cf0:	sub    eax,0xec5b186e
  407cf5:	jno    0x407d72
  407cf7:	add    dx,dx
  407cfa:	inc    eax
  407cfb:	push   esi
  407cfc:	outs   dx,DWORD PTR ds:[esi]
  407cfd:	arpl   WORD PTR [edi],dx
  407cff:	in     eax,dx
  407d00:	push   cs
  407d01:	cmp    ah,BYTE PTR [edi]
  407d03:	inc    esp
  407d04:	dec    esp
  407d05:	xor    eax,ecx
  407d07:	xor    eax,0xcb865be7
  407d0c:	cmp    dh,BYTE PTR [edx+eiz*4]
  407d0f:	fwait
  407d10:	mov    DWORD PTR [esi-0x7a],esp
  407d13:	pop    edx
  407d14:	pop    esp
  407d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d16:	sub    edx,DWORD PTR [ecx+0x63de088f]
  407d1c:	push   ds
  407d1d:	lahf   
  407d1e:	pop    ecx
  407d1f:	cmp    ah,BYTE PTR gs:[edi-0x64]
  407d23:	popf   
  407d24:	pop    esp
  407d25:	jmp    0xa8596a3a
  407d2a:	and    DWORD PTR [ebx+0x4664c336],esp
  407d30:	adc    ebx,ebp
  407d32:	sub    eax,DWORD PTR [edx]
  407d34:	adc    eax,0xdf58f558
  407d39:	sahf   
  407d3a:	in     al,0xe3
  407d3c:	pop    eax
  407d3d:	pusha  
  407d3e:	or     al,BYTE PTR [eax-0x24091b78]
  407d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d45:	sub    BYTE PTR [edx+0x0],dl
  407d48:	or     eax,0x71b9a91a
  407d4d:	cld    
  407d4e:	inc    eax
  407d4f:	bound  esp,QWORD PTR [esi+0x2]
  407d52:	je     0x407d86
  407d54:	pop    ds
  407d55:	jae    0x407d8f
  407d57:	or     dl,al
  407d59:	icebp  
  407d5a:	mov    bh,0x46
  407d5c:	es jae 0x407d60
  407d5f:	xor    al,BYTE PTR [esi+0x34008fa7]
  407d65:	adc    esi,esp
  407d67:	mov    bl,0xf7
  407d69:	in     al,dx
  407d6a:	push   edx
  407d6b:	push   ss
  407d6c:	lock mov ah,0xfe
  407d6f:	dec    esp
  407d70:	sti    
  407d71:	pop    ds
  407d72:	lahf   
  407d73:	addr16 fdiv st(4),st
  407d76:	pop    ecx
  407d77:	mov    esi,0x9dc833b1
  407d7c:	out    0xc9,eax
  407d7e:	mov    bl,0xd
  407d80:	into   
  407d81:	ret    
  407d82:	cmc    
  407d83:	imul   edx,esp,0x969614de
  407d89:	push   0x9480bbac
  407d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d8f:	or     al,0xa6
  407d91:	aaa    
  407d92:	pop    edi
  407d93:	or     eax,0x58467e90
  407d98:	mov    edi,0xa3ad5aba
  407d9d:	xor    al,0x3e
  407d9f:	sub    ch,BYTE PTR [esi-0x80]
  407da2:	mov    al,es:0xe9ea5ebc
  407da8:	mov    DWORD PTR [ebx+0x4e],0xc0f1a1f4
  407daf:	pop    eax
  407db0:	mov    ds:0x9145f724,eax
  407db5:	push   edi
  407db6:	cmp    al,0x5e
  407db8:	leave  
  407db9:	add    eax,0x38fa7102
  407dbe:	mov    ds:0x26baccbf,eax
  407dc3:	adc    BYTE PTR [ebx-0x2bd5a965],cl
  407dc9:	xor    al,0x5f
  407dcb:	fdivr  st,st(1)
  407dcd:	pop    esi
  407dce:	lods   eax,DWORD PTR ds:[esi]
  407dcf:	sti    
  407dd0:	dec    ebx
  407dd1:	mov    bl,0xf8
  407dd3:	shl    DWORD PTR [ebp+0x54],0x7f
  407dd7:	dec    eax
  407dd8:	inc    edi
  407dd9:	xchg   ecx,eax
  407dda:	or     bh,dh
  407ddc:	xchg   ecx,eax
  407ddd:	shr    edx,cl
  407ddf:	mov    edi,0x214dfb39
  407de4:	pop    esi
  407de5:	jmp    0x9924:0xf1a2d95c
  407dec:	aam    0xb0
  407dee:	add    dh,BYTE PTR [ebp+0x6f5d921a]
  407df4:	aad    0x57
  407df6:	(bad)  
  407df7:	popa   
  407df8:	outs   dx,BYTE PTR ds:[esi]
  407df9:	hlt    
  407dfa:	push   es
  407dfb:	lea    esp,[ecx-0x43]
  407dfe:	clc    
  407dff:	popa   
  407e00:	sbb    dh,ah
  407e02:	hlt    
  407e03:	mov    al,0x8b
  407e05:	and    al,BYTE PTR [edi+ecx*1]
  407e08:	aam    0xba
  407e0a:	mov    WORD PTR [ebp+0x7e],?
  407e0d:	fisub  DWORD PTR [eax-0x1c376891]
  407e13:	push   eax
  407e14:	adc    eax,0x450a6e12
  407e19:	cmp    al,0xc5
  407e1b:	add    esi,esp
  407e1d:	jl     0x407e54
  407e1f:	mov    dh,BYTE PTR [edi-0x1f24affa]
  407e25:	xlat   BYTE PTR ds:[ebx]
  407e26:	repnz out 0xd2,eax
  407e29:	retf   0xf0d2
  407e2c:	add    al,BYTE PTR [eax]
  407e2e:	push   ebp
  407e2f:	ret    
  407e30:	inc    esp
  407e31:	out    0x9,al
  407e33:	mov    ah,0xa5
  407e35:	sbb    BYTE PTR ds:0x702bb93f,0xc1
  407e3c:	shr    DWORD PTR ds:0x1df50d68,1
  407e42:	out    0xb5,eax
  407e44:	neg    DWORD PTR [edx-0x46]
  407e47:	sahf   
  407e48:	mov    ds:0x2a8abdaf,al
  407e4d:	loope  0x407eb2
  407e4f:	loopne 0x407e2e
  407e51:	dec    esp
  407e52:	outs   dx,DWORD PTR ds:[esi]
  407e53:	ret    0x4954
  407e56:	test   BYTE PTR [ebp-0x71],bh
  407e59:	loope  0x407e77
  407e5b:	inc    ecx
  407e5c:	bound  ebp,QWORD PTR [ebx-0x2fd6d549]
  407e62:	int    0x58
  407e64:	imul   esi,DWORD PTR [edx],0x5774fca4
  407e6a:	jno    0x407e2d
  407e6c:	aad    0x39
  407e6e:	repz add DWORD PTR [ebx+0x10710f1c],ecx
  407e75:	les    ecx,FWORD PTR [eax+0x3e1f44fa]
  407e7b:	cdq    
  407e7c:	xchg   BYTE PTR [esi+0x78],al
  407e7f:	and    eax,0x5b3873f2
  407e84:	std    
  407e85:	hlt    
  407e86:	inc    esp
  407e87:	adc    cl,BYTE PTR [esi-0x68]
  407e8a:	(bad)  
  407e8b:	loopne 0x407e60
  407e8d:	aam    0x4c
  407e8f:	clc    
  407e90:	or     eax,0xd75facfa
  407e95:	ret    0x5fb6
  407e98:	xor    bh,BYTE PTR [ebx-0x7c]
  407e9b:	sub    al,0x99
  407e9d:	push   ebp
  407e9e:	jnp    0x407ecb
  407ea0:	xchg   ebx,eax
  407ea1:	sbb    DWORD PTR [ebp+0x18d1714],eax
  407ea7:	cmc    
  407ea8:	xor    dl,BYTE PTR [eax+0x34]
  407eab:	fiadd  DWORD PTR [ebx+ebx*8-0x6d6c076d]
  407eb2:	aad    0x4
  407eb4:	and    edx,ebx
  407eb6:	pop    ebx
  407eb7:	ror    esp,0xc8
  407eba:	jo     0x407f33
  407ebc:	cmc    
  407ebd:	jne    0x407f27
  407ebf:	and    WORD PTR [edi+0x16042419],ax
  407ec6:	test   BYTE PTR [ebx+0x429300d2],dl
  407ecc:	inc    esp
  407ecd:	mov    ecx,0x528bca7d
  407ed2:	jno    0x407f32
  407ed4:	mov    bh,0xe2
  407ed6:	lahf   
  407ed7:	pmaddwd mm1,QWORD PTR [eax+ebx*4]
  407edb:	mov    BYTE PTR [ebp-0x2cb54879],bl
  407ee1:	push   ecx
  407ee2:	hlt    
  407ee3:	fcomi  st,st(4)
  407ee5:	pop    edx
  407ee6:	jo     0x407ed7
  407ee8:	jno    0x407f08
  407eea:	mov    cs,WORD PTR [edi+0x6f69630d]
  407ef0:	lea    edx,[esi+0x341d294c]
  407ef6:	jo     0x407f52
  407ef8:	test   eax,0x5f2a85ff
  407efd:	call   0xb832b88a
  407f02:	mov    eax,0x339ae9b8
  407f07:	xor    DWORD PTR [edi],esp
  407f09:	test   DWORD PTR [eax-0x2a],ecx
  407f0c:	js     0x407f51
  407f0e:	cli    
  407f0f:	sub    al,0x2
  407f11:	retf   
  407f12:	mov    dh,0x71
  407f14:	hlt    
  407f15:	outs   dx,BYTE PTR ds:[esi]
  407f16:	into   
  407f17:	ds cmp bl,bh
  407f1a:	mov    DWORD PTR [eax+0x73],esp
  407f1d:	and    eax,0xfb0a4eae
  407f22:	and    BYTE PTR [ebp-0x78],ch
  407f25:	lds    esp,FWORD PTR [edx-0x3724a224]
  407f2b:	dec    ebx
  407f2c:	cmp    eax,0xd55b7cf1
  407f31:	xor    al,0xc7
  407f33:	jne    0x407f44
  407f35:	popa   
  407f36:	mov    edi,0xe85d31ea
  407f3b:	scas   eax,DWORD PTR es:[edi]
  407f3c:	pop    esi
  407f3d:	(bad)  
  407f3e:	xlat   BYTE PTR ds:[ebx]
  407f3f:	dec    edi
  407f40:	(bad)  
  407f41:	jp     0x407ed6
  407f43:	and    al,0x7b
  407f45:	mov    eax,ds:0x50b37c46
  407f4a:	mov    bh,0x39
  407f4c:	ss loope 0x407f02
  407f4f:	xchg   DWORD PTR [ebx],ecx
  407f51:	ja     0x407f5a
  407f53:	pop    es
  407f54:	test   eax,0x308e4715
  407f59:	jae    0x407fb3
  407f5b:	mov    WORD PTR [edx+0x2d05c006],?
  407f61:	xlat   BYTE PTR ds:[ebx]
  407f62:	(bad)  
  407f64:	aas    
  407f65:	pop    ecx
  407f66:	mov    edx,0x16915a08
  407f6b:	test   BYTE PTR fs:[edx-0xd652854],bl
  407f72:	inc    esp
  407f73:	mov    BYTE PTR [edi+0x16ba8109],0x2a
  407f7a:	mov    edi,0x8f335ea8
  407f7f:	adc    DWORD PTR [ebx],0xffffffc5
  407f82:	mov    esp,0x71546b00
  407f87:	add    DWORD PTR [edi-0x1071f990],esp
  407f8d:	pop    esi
  407f8e:	mov    BYTE PTR [esi-0x23],0x20
  407f92:	mov    ds:0x89027c06,al
  407f97:	inc    ebx
  407f98:	or     ecx,DWORD PTR [eax]
  407f9a:	iret   
  407f9b:	mov    ecx,0x9146f371
  407fa0:	(bad)  
  407fa1:	in     al,dx
  407fa2:	test   DWORD PTR [ebp+0x7c2429cc],esp
  407fa8:	stos   DWORD PTR es:[edi],eax
  407fa9:	(bad)  
  407fab:	popa   
  407fac:	cmc    
  407fad:	mov    dl,0x7e
  407faf:	int    0xe1
  407fb1:	dec    ebx
  407fb2:	outs   dx,DWORD PTR ds:[esi]
  407fb3:	pop    eax
  407fb4:	test   al,0x80
  407fb6:	stos   DWORD PTR es:[edi],eax
  407fb7:	shl    BYTE PTR [edi],0x26
  407fba:	add    edi,edx
  407fbc:	(bad)  
  407fbd:	sbb    ebx,ebx
  407fbf:	(bad)  
  407fc0:	loope  0x407f6c
  407fc2:	imul   esp,edi,0xca8dd24e
  407fc8:	das    
  407fc9:	jp     0x40800f
  407fcb:	mov    cl,0x25
  407fcd:	jl     0x407fce
  407fcf:	addr16 icebp 
  407fd1:	add    esi,edi
  407fd3:	sub    BYTE PTR [eax-0x9],bl
  407fd6:	retf   
  407fd7:	pusha  
  407fd8:	push   ecx
  407fd9:	cld    
  407fda:	cld    
  407fdb:	cmp    dl,BYTE PTR [esi-0x3cf73805]
  407fe1:	je     0x407f76
  407fe3:	les    esp,FWORD PTR [ecx+0x44]
  407fe6:	nop
  407fe7:	xchg   ax,ax
  407fe9:	aam    0x3
  407feb:	jecxz  0x408011
  407fed:	ror    al,cl
  407fef:	or     eax,0xad815388
  407ff4:	add    eax,0x9a2d40c6
  407ff9:	pop    esi
  407ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ffb:	pop    es
  407ffc:	sbb    BYTE PTR [ebp+0x11],al
  407fff:	sub    edi,edx
  408001:	sbb    eax,0xd6f3375f
  408006:	scas   eax,DWORD PTR es:[edi]
  408007:	shr    ebp,0x97
  40800a:	pushf  
  40800b:	sahf   
  40800c:	pop    ecx
  40800d:	scas   eax,DWORD PTR es:[edi]
  40800e:	push   esi
  40800f:	enter  0x6c8,0xc8
  408013:	xor    ebp,edx
  408015:	pop    edx
  408016:	jbe    0x407fb8
  408018:	loop   0x407fb3
  40801a:	fidiv  DWORD PTR [ebx]
  40801c:	sub    eax,0x6c6b4c4c
  408021:	es loop 0x408085
  408024:	sub    BYTE PTR [ebx+0x3a],dh
  408027:	rcr    BYTE PTR [ecx-0x31],cl
  40802a:	addr16 xchg ebx,eax
  40802c:	dec    edx
  40802d:	adc    DWORD PTR [edx*8+0x2c559736],edx
  408034:	stos   BYTE PTR es:[edi],al
  408035:	and    al,0x6d
  408037:	sbb    cl,BYTE PTR [edi+0x4d]
  40803a:	repnz clc 
  40803c:	pushf  
  40803d:	adc    eax,0x57636869
  408042:	imul   eax,DWORD PTR [ecx+0x44],0xffffffb0
  408046:	ret    0x972a
  408049:	mov    ebx,0xde3ecee4
  40804e:	inc    ecx
  40804f:	pop    ecx
  408050:	fs sub al,0x2b
  408053:	stos   BYTE PTR es:[edi],al
  408054:	(bad)  
  408055:	shl    DWORD PTR [esi-0x5d],1
  408058:	sahf   
  408059:	(bad)  
  40805a:	mov    edi,0x1ef777ee
  40805f:	(bad)  
  408060:	fnstsw WORD PTR [ebx+0x2]
  408063:	xchg   DWORD PTR [ebx+0x65],edi
  408066:	xchg   DWORD PTR [eax],eax
  408068:	pop    esi
  408069:	mov    bh,0xc4
  40806b:	pop    ebx
  40806c:	push   ss
  40806d:	fmulp  st(3),st
  40806f:	mov    BYTE PTR [edi+eax*4-0x7e65b0b6],ch
  408076:	lods   eax,DWORD PTR ds:[esi]
  408077:	jecxz  0x4080dc
  408079:	ins    DWORD PTR es:[edi],dx
  40807a:	mov    ds:0xa1331ada,eax
  40807f:	test   DWORD PTR [ebx+ebp*8+0x715caa40],ebx
  408086:	lahf   
  408087:	jmp    0x4080d5
  408089:	adc    DWORD PTR [esi-0x1e],edx
  40808c:	xor    al,0x1e
  40808e:	push   edx
  40808f:	jmp    0xad47:0xbb63c6bc
  408096:	les    eax,FWORD PTR ds:0x59b3d8d
  40809c:	mov    cs:0xe3684483,al
  4080a2:	icebp  
  4080a3:	jae    0x408100
  4080a5:	(bad)  
  4080a6:	and    al,0x49
  4080a8:	jb     0x40811f
  4080aa:	icebp  
  4080ab:	pushf  
  4080ac:	neg    edi
  4080ae:	ins    DWORD PTR es:[edi],dx
  4080af:	add    eax,DWORD PTR [ecx+ecx*4]
  4080b2:	cmp    ecx,DWORD PTR [esi]
  4080b4:	call   0x2dc325c1
  4080b9:	or     BYTE PTR [ebx+0xe],cl
  4080bc:	std    
  4080bd:	fiadd  DWORD PTR [eax-0x32]
  4080c0:	out    dx,eax
  4080c1:	sti    
  4080c2:	stos   BYTE PTR es:[edi],al
  4080c3:	mov    BYTE PTR [eax],ah
  4080c5:	or     ebx,DWORD PTR [edx+ecx*4+0x4799f15f]
  4080cc:	setl   BYTE PTR [ebp-0x3b566c4a]
  4080d3:	jno    0x4080c9
  4080d5:	loopne 0x4080be
  4080d7:	mov    ds:0x6114b409,eax
  4080dc:	mov    dl,BYTE PTR [edx+0xb]
  4080df:	inc    edi
  4080e0:	(bad)  
  4080e1:	sbb    eax,0x1c3fe797
  4080e6:	retf   
  4080e7:	inc    edx
  4080e8:	scas   al,BYTE PTR es:[edi]
  4080e9:	sahf   
  4080ea:	push   edi
  4080eb:	xchg   esp,eax
  4080ec:	dec    edx
  4080ed:	popf   
  4080ee:	pop    ebp
  4080ef:	retf   
  4080f0:	mov    edi,0xa9ae97aa
  4080f5:	cmp    ebp,DWORD PTR [ecx+0x4991e8c7]
  4080fb:	dec    ecx
  4080fc:	push   esp
  4080fd:	or     eax,DWORD PTR [ebx-0x6c]
  408100:	je     0x4080a4
  408102:	mov    edx,0x4e5e685f
  408107:	dec    eax
  408108:	sub    DWORD PTR [esi-0x3c4fb1fb],esi
  40810e:	std    
  40810f:	dec    ebp
  408110:	ficomp DWORD PTR [ecx+0xa]
  408113:	int    0xb
  408115:	jbe    0x4080f3
  408117:	int    0x7d
  408119:	or     edi,DWORD PTR [eax]
  40811b:	mov    ch,0x27
  40811d:	dec    ecx
  40811e:	dec    esp
  40811f:	adc    BYTE PTR [eax+0x2ca7cc74],cl
  408125:	push   0xab168e13
  40812a:	mov    al,0xcc
  40812c:	cmp    al,0xef
  40812e:	pop    esi
  40812f:	mov    ebp,0x85f89239
  408134:	aad    0x28
  408136:	dec    edx
  408137:	out    0x4a,al
  408139:	jle    0x40815c
  40813b:	cli    
  40813c:	(bad)  [edi-0x29f5a334]
  408142:	mov    esp,edi
  408144:	fst    QWORD PTR [esi]
  408146:	cmp    edi,DWORD PTR [ebx]
  408148:	sub    eax,0x5541ea1d
  40814d:	mov    al,ds:0x76d8df7e
  408152:	ins    DWORD PTR es:[edi],dx
  408153:	stos   DWORD PTR es:[edi],eax
  408154:	sbb    BYTE PTR [edi+edx*1],al
  408157:	pop    edi
  408158:	int3   
  408159:	(bad)  
  40815a:	xchg   esp,eax
  40815b:	jecxz  0x4080f2
  40815d:	jecxz  0x408170
  40815f:	xor    cl,0x67
  408162:	pop    ss
  408163:	ret    0x5022
  408166:	js     0x40816b
  408168:	repnz and edi,DWORD PTR ds:0x1733b7b4
  40816f:	(bad)  
  408170:	test   eax,0x956b3082
  408175:	push   edi
  408176:	xor    cl,BYTE PTR [esi+0x34]
  408179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40817a:	xchg   BYTE PTR [eax-0x5ff62dba],bh
  408180:	ret    0x3d5a
  408183:	jb     0x408179
  408185:	xor    esi,DWORD PTR [edi+0x2c]
  408188:	(bad)  
  408189:	aam    0xba
  40818b:	and    esp,edx
  40818d:	cwde   
  40818e:	push   edx
  40818f:	mov    DWORD PTR [edx-0x4eb5da1f],edi
  408195:	and    bp,WORD PTR ds:0x16d4fdb6
  40819c:	adc    cl,BYTE PTR [edx]
  40819e:	xchg   edi,eax
  4081a0:	xchg   BYTE PTR [esi],ch
  4081a2:	paddusb mm4,QWORD PTR [ecx+0x124d778a]
  4081a9:	mov    esi,0x1bd4e537
  4081ae:	scas   al,BYTE PTR es:[edi]
  4081af:	push   cs
  4081b0:	cmp    eax,0x31ae9cbe
  4081b5:	bound  esp,QWORD PTR [ebx-0x6c]
  4081b8:	ret    0xc6c1
  4081bb:	xchg   ecx,eax
  4081bc:	rcr    BYTE PTR [edx-0x4739d2c4],cl
  4081c2:	jo     0x408200
  4081c4:	dec    BYTE PTR [ecx+0x4d]
  4081c7:	cmp    DWORD PTR [ebx+0x26f16bc0],0xffffffb1
  4081ce:	ja     0x4081b2
  4081d0:	sbb    edi,edi
  4081d2:	ror    DWORD PTR [edx+0x55],1
  4081d5:	stos   BYTE PTR es:[edi],al
  4081d6:	cli    
  4081d7:	jmp    0x4081ac
  4081d9:	bswap  eax
  4081db:	das    
  4081dc:	jno    0x408238
  4081de:	cmp    BYTE PTR [ecx],dl
  4081e0:	ficomp DWORD PTR [edx-0x266aaebf]
  4081e6:	push   ds
  4081e7:	mov    ah,0x6b
  4081e9:	xchg   edx,eax
  4081ea:	pop    ecx
  4081eb:	inc    ebp
  4081ec:	pop    esi
  4081ed:	retf   
  4081ee:	inc    ebx
  4081ef:	inc    edi
  4081f0:	aaa    
  4081f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f2:	rcr    edx,1
  4081f4:	arpl   WORD PTR [ebx+0x54f089ef],cx
  4081fa:	stc    
  4081fb:	(bad)  
  4081fc:	fldl2t 
  4081fe:	imul   eax,DWORD PTR [ebx+0x202ed15f],0xffffffd8
  408205:	jge    0x40822f
  408207:	cmp    al,0x21
  408209:	cmp    eax,0xcb25d1b6
  40820e:	fwait
  40820f:	add    BYTE PTR [ebp+0x6348b0ba],0xb3
  408216:	pop    esi
  408217:	test   al,0x0
  408219:	xor    BYTE PTR [esi],bl
  40821b:	mov    al,ds:0x42f520b8
  408220:	lahf   
  408221:	jae    0x4081f5
  408223:	adc    BYTE PTR [ebp+ebp*4+0x62],0x3d
  408228:	arpl   WORD PTR [edx],bp
  40822a:	xchg   BYTE PTR [edx],ch
  40822c:	pop    es
  40822d:	sbb    eax,0x80fa3c85
  408232:	sub    al,0x13
  408234:	ds jecxz 0x4081cd
  408237:	mov    fs,WORD PTR [eax-0x4]
  40823a:	and    DWORD PTR [ebx+0x7600db51],edx
  408240:	or     eax,0x26231a20
  408245:	es ds pop esp
  408248:	push   cs
  408249:	sbb    BYTE PTR [eax+eiz*4+0x40],0xbe
  40824e:	mov    dh,0xb4
  408250:	xchg   DWORD PTR [ebx+0x74],edi
  408253:	add    edx,eax
  408255:	scas   eax,DWORD PTR es:[edi]
  408256:	mov    dl,0xa
  408258:	jge    0x4081fb
  40825a:	(bad)  
  40825b:	pop    edi
  40825c:	xchg   esp,eax
  40825d:	outs   dx,BYTE PTR ds:[esi]
  40825e:	es inc esi
  408260:	imul   esi,DWORD PTR [ebp+0x6f],0xa307f4c3
  408267:	push   ds
  408268:	ret    
  408269:	pop    ss
  40826a:	test   BYTE PTR [ecx],0x45
  40826d:	jle    0x408234
  40826f:	sbb    eax,0xb1e3858b
  408274:	add    eax,0x414659d6
  408279:	push   edx
  40827a:	push   edi
  40827b:	in     eax,0x3e
  40827d:	icebp  
  40827e:	fist   WORD PTR [ebx-0x34ed934a]
  408284:	arpl   WORD PTR [ecx-0x45],bx
  408287:	mov    BYTE PTR [ebx-0x66c6460b],0x2
  40828e:	jp     0x4082d2
  408290:	iret   
  408291:	push   eax
  408292:	mov    eax,0xb0c56696
  408297:	mov    al,ds:0x53d372fd
  40829c:	push   ds
  40829d:	data16 int 0xe3
  4082a0:	pop    esp
  4082a1:	popa   
  4082a2:	out    0xad,eax
  4082a4:	retf   0x6851
  4082a7:	xchg   ebx,eax
  4082a8:	arpl   WORD PTR [eax-0x7343b0fb],bp
  4082ae:	shr    DWORD PTR [edx-0x4c91083a],1
  4082b4:	push   ds
  4082b5:	daa    
  4082b6:	leave  
  4082b7:	mov    cl,0x89
  4082b9:	dec    esi
  4082ba:	inc    edi
  4082bb:	push   esp
  4082bc:	(bad)  
  4082bd:	jge    0x40832b
  4082bf:	(bad)  
  4082c0:	cmp    al,0x99
  4082c2:	ret    0x8434
  4082c5:	mov    dl,0x7a
  4082c7:	call   DWORD PTR [edx+0x39]
  4082ca:	push   esi
  4082cb:	add    al,0xac
  4082cd:	add    ecx,eax
  4082cf:	rcl    BYTE PTR [esi+0x34738fb6],cl
  4082d5:	or     cl,bl
  4082d7:	out    dx,al
  4082d8:	rol    DWORD PTR [ebx-0x37],1
  4082db:	cmp    al,0x54
  4082dd:	icebp  
  4082de:	or     al,0x4c
  4082e0:	dec    eax
  4082e1:	mov    ebx,DWORD PTR [edx-0x6c793b6d]
  4082e7:	mov    esp,0xc21f7cf2
  4082ec:	aad    0x75
  4082ee:	(bad)  
  4082ef:	jecxz  0x408303
  4082f1:	push   eax
  4082f2:	stos   DWORD PTR es:[edi],eax
  4082f3:	popf   
  4082f4:	inc    ecx
  4082f5:	jmp    0x4082f5
  4082f7:	leave  
  4082f8:	pop    ds
  4082f9:	or     DWORD PTR [edi],edx
  4082fb:	pop    ecx
  4082fc:	dec    edx
  4082fd:	inc    esi
  4082fe:	sbb    dl,ch
  408300:	or     cl,0xeb
  408303:	popf   
  408304:	cli    
  408305:	int    0xf1
  408307:	in     al,dx
  408308:	sbb    eax,0xdedb6ad6
  40830d:	ret    
  40830e:	jae    0x4082a0
  408310:	xor    bh,BYTE PTR [eax]
  408312:	mov    al,ds:0x4c5945ba
  408317:	lods   al,BYTE PTR ds:[esi]
  408318:	add    eax,0x9959f48d
  40831d:	rcl    ch,1
  40831f:	cdq    
  408320:	fwait
  408321:	sbb    dl,BYTE PTR [eax+0x68]
  408324:	jbe    0x408393
  408326:	fwait
  408327:	outs   dx,DWORD PTR ds:[esi]
  408328:	(bad)  
  408329:	in     eax,0x32
  40832b:	jle    0x4082d1
  40832d:	adc    ebp,edx
  40832f:	fdivp  st(1),st
  408331:	add    al,0x19
  408333:	pusha  
  408334:	(bad)  
  408335:	xchg   ecx,eax
  408336:	and    eax,0xd3bdc00e
  40833b:	ds loop 0x408315
  40833e:	sub    eax,0x81860042
  408343:	jmp    0x5498b2a
  408348:	mov    bh,0x16
  40834a:	popa   
  40834b:	xor    DWORD PTR [ecx+0x3],edi
  40834e:	mov    al,0x21
  408350:	dec    edx
  408351:	fwait
  408352:	or     DWORD PTR [ebp+0x7c2e3097],esp
  408358:	mov    BYTE PTR [eax+0x634d3917],cl
  40835e:	mov    bh,0x99
  408360:	enter  0xea52,0x2f
  408364:	push   ss
  408365:	push   esp
  408366:	in     al,0xf9
  408368:	pop    ebp
  408369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40836a:	adc    DWORD PTR [ecx-0x2358727c],ebp
  408370:	xor    ebx,DWORD PTR [esi]
  408372:	in     al,0x3c
  408374:	gs cld 
  408376:	push   esi
  408377:	sbb    esi,DWORD PTR [eax]
  408379:	retf   0x56f8
  40837c:	lods   eax,DWORD PTR ds:[esi]
  40837d:	or     al,BYTE PTR [edx+0x6e660c14]
  408383:	sub    eax,0x3c966643
  408388:	inc    esi
  408389:	fmul   st,st(7)
  40838b:	dec    ebp
  40838c:	je     0x40830e
  40838e:	add    eax,0xbe179b04
  408393:	ins    BYTE PTR es:[edi],dx
  408394:	adc    BYTE PTR [esi],cl
  408396:	leave  
  408397:	dec    edi
  408398:	jns    0x408369
  40839a:	sub    ecx,DWORD PTR [ebp+0x46]
  40839d:	jns    0x408386
  40839f:	in     eax,dx
  4083a0:	pop    esi
  4083a1:	or     ebx,DWORD PTR [ecx]
  4083a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083a4:	mov    WORD PTR [eax-0x6975d540],ss
  4083aa:	mov    DWORD PTR [edi+0x70a6ef84],eax
  4083b0:	retf   
  4083b1:	xor    eax,0x763d898d
  4083b6:	inc    ecx
  4083b7:	test   eax,0x3a0fc7e1
  4083bc:	out    dx,al
  4083bd:	cmp    esi,DWORD PTR [ecx]
  4083bf:	aad    0x3c
  4083c1:	lds    edi,FWORD PTR [edx+0x4]
  4083c4:	and    ah,BYTE PTR ds:0x3321f6e7
  4083ca:	sahf   
  4083cb:	gs mov dl,0x83
  4083ce:	cmp    edx,DWORD PTR [ecx+0x7a]
  4083d1:	fnsetpm(287 only) 
  4083d3:	push   esp
  4083d4:	pop    ebp
  4083d5:	aad    0xe4
  4083d7:	(bad)  
  4083d8:	or     ch,ch
  4083da:	(bad)  
  4083db:	push   eax
  4083dc:	ins    DWORD PTR es:[edi],dx
  4083dd:	sbb    al,0x67
  4083df:	call   0x147414db
  4083e4:	sbb    ch,BYTE PTR [ecx+0x4e7106cb]
  4083ea:	and    al,0x3a
  4083ec:	call   0xf2d0:0x68f8e0d1
  4083f3:	inc    BYTE PTR [edx]
  4083f5:	stos   DWORD PTR es:[edi],eax
  4083f6:	loope  0x40839a
  4083f8:	or     al,0x84
  4083fa:	aaa    
  4083fb:	(bad)  
  4083fd:	jmp    0xad5f:0xc2157126
  408404:	xchg   esp,eax
  408405:	jge    0x408402
  408407:	and    al,0x43
  408409:	(bad)  
  40840a:	rcl    ch,cl
  40840c:	jmp    0x70e6:0x78bcc6b6
  408413:	fucomip st,st(6)
  408415:	sbb    dl,BYTE PTR [ecx]
  408417:	dec    esp
  408418:	sub    DWORD PTR [ecx],ebx
  40841a:	jl     0x408416
  40841c:	inc    esp
  40841d:	cmp    esp,DWORD PTR [eax]
  40841f:	push   cs
  408420:	xchg   BYTE PTR [ebx+0xf],ch
  408423:	dec    esi
  408424:	sbb    BYTE PTR [si-0x44],ah
  408428:	dec    edi
  408429:	call   0x3dea3f98
  40842e:	lahf   
  40842f:	add    eax,0x6ba63b72
  408434:	mov    BYTE PTR [ebx+ecx*1],bl
  408437:	and    BYTE PTR [ecx],cl
  408439:	inc    eax
  40843a:	out    0xcb,al
  40843c:	xor    BYTE PTR ds:0xba3bc040,0x30
  408443:	je     0x408461
  408445:	add    eax,0x1050be42
  40844a:	xchg   esi,eax
  40844b:	mov    ebp,0xf4e44e4d
  408450:	jmp    0x1dd5:0xaa5bec4e
  408457:	pop    es
  408458:	cld    
  408459:	ds sahf 
  40845b:	sbb    al,0x52
  40845d:	mov    ch,0x89
  40845f:	jle    0x40842e
  408461:	imul   ebx,DWORD PTR [edx+0x56a0e049],0x5be4c856
  40846b:	dec    ebx
  40846c:	jb     0x408497
  40846e:	xor    eax,0x5511aa9d
  408473:	(bad)  
  408474:	xchg   ecx,eax
  408475:	pop    ebp
  408476:	xor    bl,0xcd
  408479:	cli    
  40847a:	outs   dx,BYTE PTR ds:[esi]
  40847b:	mov    cs,WORD PTR [esi]
  40847d:	fistp  WORD PTR [edi+eiz*2+0x60fe8fc7]
  408484:	in     eax,dx
  408485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408486:	jecxz  0x4084c4
  408488:	push   eax
  408489:	or     DWORD PTR [esi-0x6c2ff29a],ecx
  40848f:	dec    edx
  408490:	sub    DWORD PTR [ebx],esi
  408492:	aad    0x18
  408494:	inc    ebp
  408495:	retf   
  408496:	jae    0x4084dc
  408498:	nop
  408499:	adc    BYTE PTR [esi-0x6101c9c9],ch
  40849f:	fldenv [esi-0x1e]
  4084a2:	cmp    ch,BYTE PTR [esi-0x62411d9b]
  4084a8:	in     eax,0x10
  4084aa:	shr    BYTE PTR [esi],cl
  4084ac:	mov    ch,0x9e
  4084ae:	(bad)  
  4084af:	int    0x57
  4084b1:	gs ret 
  4084b3:	pop    esp
  4084b4:	mov    BYTE PTR [ecx],0x63
  4084b7:	mov    ds:0xf0c96b42,eax
  4084bc:	push   ds
  4084bd:	mov    cl,0x3f
  4084bf:	popf   
  4084c0:	cmp    eax,0xeaba5370
  4084c5:	rcr    DWORD PTR [ecx-0x5f],0x98
  4084c9:	fisttp QWORD PTR [eax+0x5]
  4084cc:	dec    esp
  4084cd:	scas   al,BYTE PTR es:[edi]
  4084ce:	mov    edi,0x9d4c1e66
  4084d3:	fld    QWORD PTR [ebx-0x38]
  4084d6:	je     0x408458
  4084d8:	sbb    esp,ebp
  4084da:	loopne 0x4084d4
  4084dc:	test   DWORD PTR [ebx],esp
  4084de:	mov    es,esi
  4084e0:	scas   al,BYTE PTR es:[edi]
  4084e1:	jl     0x4084dd
  4084e3:	push   0xffffffa4
  4084e5:	mul    BYTE PTR [edi-0x2]
  4084e8:	mov    es:0x5abce71,eax
  4084ee:	inc    ecx
  4084ef:	xor    ebx,DWORD PTR [edi-0x49]
  4084f2:	in     al,dx
  4084f3:	mov    DWORD PTR [edi+ecx*1-0xe],0x36d8c30f
  4084fb:	imul   esi,DWORD PTR [edx-0x614cb3ae],0x14
  408502:	sub    edx,edi
  408504:	sahf   
  408505:	mov    ebx,0xccfa90c2
  40850a:	(bad)  
  40850b:	sbb    al,0x9e
  40850d:	jmp    0xcdb4:0x7214fea9
  408514:	dec    ecx
  408515:	pop    ebp
  408516:	jmp    0xeeb2d5c3
  40851b:	popf   
  40851c:	xor    al,0x84
  40851e:	mov    cl,0x2c
  408520:	cmc    
  408521:	add    eax,DWORD PTR [eax]
  408523:	stos   DWORD PTR es:[edi],eax
  408524:	xchg   ecx,eax
  408525:	je     0x408532
  408527:	clc    
  408528:	inc    esp
  408529:	lods   al,BYTE PTR ds:[esi]
  40852a:	cmc    
  40852b:	daa    
  40852c:	outs   dx,DWORD PTR ds:[esi]
  40852d:	pop    edi
  40852e:	retf   
  40852f:	or     eax,0x6ee98023
  408534:	xor    BYTE PTR [eax],ch
  408536:	add    esp,DWORD PTR [ebp+0x5495959a]
  40853c:	rcr    DWORD PTR [esi+0x79928bea],1
  408542:	shrd   DWORD PTR [esi+0x30],ebp,0xcb
  408547:	inc    ecx
  408548:	push   edi
  408549:	push   edi
  40854a:	fmulp  st(3),st
  40854c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40854d:	or     ebp,DWORD PTR [ebp-0x2c]
  408550:	imul   ebp,DWORD PTR [edi-0x7658b01a],0x74
  408557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408558:	xchg   ebx,eax
  408559:	dec    ebx
  40855a:	dec    ebp
  40855b:	fdiv   DWORD PTR [edx-0x2049ca2b]
  408561:	add    eax,0x20a7402d
  408566:	and    al,0xd8
  408568:	or     al,0x4c
  40856a:	adc    eax,0x38068310
  40856f:	lahf   
  408570:	add    ebp,DWORD PTR [edx-0x4]
  408573:	add    BYTE PTR [ecx+0x5],bl
  408576:	(bad)  
  408578:	bound  ebp,QWORD PTR [ebp+0x10]
  40857b:	cs (bad) 
  40857d:	imul   edi
  40857f:	fsubr  DWORD PTR [ecx-0x76d2e8cf]
  408585:	mov    bh,0xb5
  408587:	mov    BYTE PTR [ebp-0x4f],cl
  40858a:	or     BYTE PTR [edx],bl
  40858c:	push   es
  40858d:	out    0xad,eax
  40858f:	jmp    0x40858a
  408591:	(bad)  
  408592:	loop   0x408525
  408594:	inc    ebx
  408595:	pop    ebp
  408596:	daa    
  408597:	push   ds
  408598:	add    eax,0x8ed78003
  40859d:	leave  
  40859e:	add    DWORD PTR [eax-0x3fae6808],eax
  4085a4:	loop   0x408528
  4085a6:	shl    DWORD PTR [ecx+eax*4+0x335e64ef],0xe5
  4085ae:	xor    edi,esp
  4085b0:	popf   
  4085b1:	or     bl,BYTE PTR [esi+eax*8]
  4085b4:	leave  
  4085b5:	pop    edx
  4085b6:	cwde   
  4085b7:	sub    eax,0x32d6d1d6
  4085bc:	cli    
  4085bd:	cmp    esi,DWORD PTR [ebx+ebp*8+0x27]
  4085c1:	sbb    bl,BYTE PTR [eax-0x18]
  4085c4:	and    eax,0x37250d2d
  4085c9:	dec    edi
  4085ca:	je     0x4085c3
  4085cc:	jecxz  0x4085a1
  4085ce:	fcomp  DWORD PTR [esi+ebp*1+0x5cce4d4f]
  4085d5:	inc    edx
  4085d6:	xor    bh,cl
  4085d8:	jnp    0x4085b8
  4085da:	enter  0x607d,0x3a
  4085de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085df:	leave  
  4085e0:	fwait
  4085e1:	jae    0x40856f
  4085e3:	scas   al,BYTE PTR es:[edi]
  4085e4:	jmp    0x229af508
  4085e9:	repnz mov cl,BYTE PTR [ebx-0x8]
  4085ed:	sbb    DWORD PTR [eax+edx*1-0x77],esp
  4085f1:	shl    DWORD PTR [eax-0x21],cl
  4085f4:	int    0xfc
  4085f6:	jle    0x408639
  4085f8:	neg    eax
  4085fa:	mov    esp,0x62f3eb20
  4085ff:	push   ss
  408600:	inc    esi
  408601:	bound  ecx,QWORD PTR [esi-0x6d]
  408604:	pop    edi
  408605:	cmc    
  408606:	pop    esi
  408607:	je     0x408616
  408609:	nop
  40860a:	xor    BYTE PTR [ecx-0x43],dh
  40860d:	les    ecx,FWORD PTR [ebp+0x4b]
  408610:	and    dl,dh
  408612:	fisub  DWORD PTR [ebx+0x2d2d925c]
  408618:	cmp    eax,DWORD PTR [edi+eax*1-0x8a040a4]
  40861f:	mov    es,WORD PTR [esi-0x5b]
  408622:	push   edi
  408623:	ds dec esi
  408625:	scas   al,BYTE PTR es:[edi]
  408626:	sub    eax,0xdd50d952
  40862b:	js     0x408616
  40862d:	mov    bh,0x44
  40862f:	fs or  ch,dh
  408632:	xor    al,0x73
  408634:	push   edx
  408635:	jb     0x408671
  408637:	ror    al,cl
  408639:	sbb    eax,0x7619f38e
  40863e:	or     eax,DWORD PTR [ecx+0x5dcb88ac]
  408644:	jecxz  0x408615
  408646:	lahf   
  408647:	jecxz  0x4086b3
  408649:	cld    
  40864a:	adc    al,dh
  40864c:	push   esi
  40864d:	jno    0x4085e2
  40864f:	icebp  
  408650:	adc    eax,0x176868f7
  408655:	mov    esp,0x341eaf53
  40865a:	xor    DWORD PTR [eax-0xc1e2522],esi
  408660:	in     eax,dx
  408661:	stc    
  408662:	xlat   BYTE PTR ds:[ebx]
  408663:	xlat   BYTE PTR ds:[ebx]
  408664:	pusha  
  408665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408666:	(bad)  [esi]
  408668:	pushf  
  408669:	stc    
  40866a:	jl     0x4085ef
  40866c:	xchg   ebx,eax
  40866d:	imul   eax,DWORD PTR [eax],0x4486a8a0
  408673:	cs in  al,dx
  408675:	sub    bl,0x5
  408678:	and    esp,edx
  40867a:	sub    al,BYTE PTR [edi]
  40867c:	test   al,0x1e
  40867e:	clc    
  40867f:	mov    eax,0xb3de0871
  408684:	jmp    0x16f0:0xd04211df
  40868b:	stos   BYTE PTR es:[edi],al
  40868c:	xchg   ebx,eax
  40868d:	loopne 0x408643
  40868f:	push   0xffffff8b
  408691:	ss je  0x408668
  408694:	sbb    edi,DWORD PTR [ecx+edx*2-0x5d]
  408698:	adc    cl,BYTE PTR [ebx-0xc]
  40869b:	sahf   
  40869c:	pop    esi
  40869d:	push   es
  40869e:	mov    eax,0x94849e12
  4086a3:	jmp    0x4086ab
  4086a5:	cmp    DWORD PTR [edx-0x32e8038f],esp
  4086ab:	mov    eax,0xd57ad30a
  4086b0:	out    0x16,al
  4086b2:	test   BYTE PTR [ecx+0x43],dh
  4086b5:	out    dx,al
  4086b6:	cmp    bl,dl
  4086b8:	ins    BYTE PTR es:[edi],dx
  4086b9:	aam    0xdd
  4086bb:	mov    cl,0x83
  4086bd:	add    BYTE PTR [ebp-0xe72f93c],0x5c
  4086c4:	add    cl,cl
  4086c6:	jmp    0xbeed:0xeef2957f
  4086cd:	es mov cl,0xff
  4086d0:	outs   dx,DWORD PTR ds:[esi]
  4086d1:	or     eax,0x1e692cc9
  4086d6:	adc    BYTE PTR [edx+eax*2-0x59],ch
  4086da:	jae    0x40871f
  4086dc:	xlat   BYTE PTR ds:[ebx]
  4086dd:	sbb    eax,DWORD PTR [ecx-0x7f]
  4086e0:	push   ss
  4086e1:	pop    ebp
  4086e2:	dec    edx
  4086e3:	(bad)  
  4086e4:	jmp    0x40875a
  4086e6:	pusha  
  4086e7:	jl     0x4086b3
  4086e9:	dec    ecx
  4086ea:	mov    al,0xae
  4086ec:	dec    edi
  4086ed:	jns    0x40875b
  4086ef:	push   ss
  4086f0:	xchg   edi,eax
  4086f1:	or     eax,0xc38aae2c
  4086f6:	dec    edx
  4086f7:	ja     0x40867b
  4086f9:	lock repnz mov esp,0x951ecc93
  408700:	sbb    eax,0x16a8740a
  408705:	jae    0x4086f2
  408707:	ret    
  408708:	mov    esi,0x7fd4c216
  40870d:	fwait
  40870e:	jecxz  0x4086f8
  408710:	mov    cl,0x69
  408712:	mov    bh,0x44
  408714:	cmp    al,0x84
  408716:	xchg   edx,eax
  408717:	adc    bh,BYTE PTR [edx-0x3031c092]
  40871d:	jp     0x408757
  40871f:	pop    esi
  408720:	pop    ebx
  408721:	push   ds
  408722:	jne    0x408720
  408724:	call   0xf7a95ee0
  408729:	push   cs
  40872a:	sbb    DWORD PTR [edi+edi*4+0x620d1db],0xa2587185
  408735:	lods   eax,DWORD PTR ds:[esi]
  408736:	sbb    al,0xed
  408738:	ja     0x40879e
  40873a:	inc    edi
  40873b:	cmp    dl,BYTE PTR [ebx]
  40873d:	push   edx
  40873e:	mov    ecx,0x8d0ce62a
  408743:	inc    edi
  408744:	sbb    ebp,DWORD PTR ds:0x4fe34cc4
  40874a:	std    
  40874b:	shr    DWORD PTR [edx],0xa7
  40874e:	pusha  
  40874f:	jns    0x4087c5
  408751:	fmul   DWORD PTR [ebx+0x24570640]
  408757:	aas    
  408758:	push   esp
  408759:	dec    esi
  40875a:	fstp   DWORD PTR ds:0x44fa23f2
  408760:	(bad)  
  408761:	pop    ecx
  408762:	sti    
  408763:	xchg   ebx,eax
  408764:	mov    dh,ah
  408766:	inc    esp
  408767:	xor    ax,ax
  40876a:	cwde   
  40876b:	das    
  40876c:	aam    0x8b
  40876e:	jno    0x408710
  408770:	cli    
  408771:	sub    ebp,DWORD PTR [eax-0x27168442]
  408777:	shl    BYTE PTR [edi+0x63],0x76
  40877b:	in     eax,dx
  40877c:	pop    ecx
  40877d:	dec    ecx
  40877e:	mov    ?,esi
  408780:	stc    
  408781:	je     0x40874c
  408783:	pop    esi
  408784:	stos   DWORD PTR es:[edi],eax
  408785:	pop    ecx
  408786:	mov    dl,0x35
  408788:	sub    DWORD PTR [edi],0xaf86368e
  40878e:	test   DWORD PTR [edi+0x1e],esi
  408791:	adc    DWORD PTR [ebp+0x68],esp
  408794:	inc    edi
  408795:	xchg   esi,eax
  408796:	xchg   ecx,eax
  408797:	mov    ebp,0x288d6d4f
  40879c:	(bad)  
  40879e:	frstor [edi]
  4087a0:	push   0x64
  4087a2:	arpl   WORD PTR [edi],cx
  4087a4:	sbb    eax,0x233688f6
  4087a9:	push   ebp
  4087aa:	lea    ebx,[eax+0x37863341]
  4087b0:	mov    ss:0x71a761d3,eax
  4087b6:	mov    ah,0x86
  4087b8:	fs jge 0x408811
  4087bb:	sbb    eax,0x62606ca0
  4087c0:	jb     0x40875c
  4087c2:	ret    0xbe4e
  4087c5:	jmp    0xeb68:0x9ada655e
  4087cc:	leave  
  4087cd:	fs push eax
  4087cf:	mov    ebp,0xb33215af
  4087d4:	jb     0x408757
  4087d6:	mov    bh,0x1b
  4087d8:	adc    eax,0x6c91dfe5
  4087dd:	xor    dh,cl
  4087df:	xchg   edx,eax
  4087e1:	fdiv   DWORD PTR [edi-0x3b]
  4087e4:	dec    ebx
  4087e5:	test   DWORD PTR [edi-0xae5810f],ecx
  4087eb:	sbb    ebx,edi
  4087ed:	push   eax
  4087ee:	adc    eax,0x13d8465b
  4087f3:	push   edi
  4087f4:	ja     0x4087d5
  4087f6:	mov    ecx,0x642ffa4
  4087fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087fc:	(bad)  
  4087fd:	fdivp  st(4),st
  4087ff:	les    ebx,FWORD PTR [ebx+0x38847724]
  408805:	push   ebx
  408806:	pop    ss
  408807:	cmc    
  408808:	imul   ebx,DWORD PTR [eax-0x77],0xc1616f41
  40880f:	fs mov BYTE PTR cs:0x4a48383d,dh
  408817:	aas    
  408818:	outs   dx,DWORD PTR ds:[esi]
  408819:	fistp  WORD PTR ds:0x2911d7b7
  40881f:	mul    DWORD PTR [esi]
  408821:	shr    DWORD PTR [eax+edx*8-0x45505f5],0x41
  408829:	pop    eax
  40882a:	imul   ebp,DWORD PTR [ebp-0x1d],0xfffffffb
  40882e:	pop    ebp
  40882f:	pop    ebp
  408830:	inc    ebx
  408831:	jl     0x40880f
  408833:	mov    esp,0xed757cdf
  408838:	enter  0x64a1,0xbe
  40883c:	xchg   esi,eax
  40883d:	mov    dl,0x4b
  40883f:	cmc    
  408840:	jnp    0x408833
  408842:	push   eax
  408843:	shl    cl,cl
  408845:	ins    DWORD PTR es:[edi],dx
  408846:	sbb    dh,BYTE PTR [esi-0x6f6dd4a4]
  40884c:	dec    ebx
  40884d:	xlat   BYTE PTR ds:[ebx]
  40884e:	mov    BYTE PTR [edx],dl
  408850:	movss  DWORD PTR [ebx+edx*4-0x28],xmm4
  408856:	in     eax,dx
  408857:	cmp    al,cl
  408859:	adc    DWORD PTR [esi+0x11],0x8482b77
  408860:	xor    BYTE PTR [edx+ebx*8],ah
  408863:	add    eax,0xef747837
  408868:	sbb    BYTE PTR [eax-0x119a2a33],dl
  40886e:	test   BYTE PTR [edx],al
  408870:	ss out 0x94,eax
  408873:	add    al,0x25
  408875:	fstp   DWORD PTR [ecx-0x36]
  408878:	lods   eax,DWORD PTR ds:[esi]
  408879:	lods   eax,DWORD PTR ds:[esi]
  40887a:	inc    edx
  40887b:	push   ecx
  40887c:	xlat   BYTE PTR ds:[ebx]
  40887d:	sub    al,0x12
  40887f:	call   0x28e:0xfc62fc98
  408886:	cwde   
  408887:	aaa    
  408888:	es dec ecx
  40888a:	mov    esp,0x37c0edff
  40888f:	outs   dx,BYTE PTR ds:[esi]
  408890:	jmp    0x926b:0xf7742f7b
  408897:	inc    ecx
  408898:	fist   WORD PTR [eax]
  40889a:	mov    eax,ds:0x4b9fafda
  40889f:	cmp    bh,ch
  4088a1:	ret    
  4088a2:	fldcw  WORD PTR ds:0x46229393
  4088a8:	daa    
  4088a9:	sbb    ah,BYTE PTR [edx+0x76f5a606]
  4088af:	xchg   edx,eax
  4088b0:	(bad)  
  4088b1:	cwde   
  4088b2:	rcr    DWORD PTR [edi],0x8f
  4088b5:	sbb    al,0x5e
  4088b7:	xchg   ebx,eax
  4088b8:	sahf   
  4088b9:	retf   
  4088ba:	lahf   
  4088bb:	imul   ebp,DWORD PTR [esi-0x2c],0xa1c36737
  4088c2:	in     al,dx
  4088c3:	dec    ebp
  4088c4:	popf   
  4088c5:	inc    eax
  4088c6:	test   ax,0xebdf
  4088ca:	pop    ss
  4088cb:	xchg   BYTE PTR [ebx],dh
  4088cd:	(bad)  
  4088ce:	push   ss
  4088cf:	jae    0x40893a
  4088d1:	mov    ebx,DWORD PTR [ebp+0x32]
  4088d4:	ret    
  4088d5:	push   edx
  4088d6:	mov    ch,0x3d
  4088d8:	inc    eax
  4088d9:	pop    ds
  4088da:	add    eax,0xd6c1172e
  4088df:	dec    eax
  4088e0:	sti    
  4088e1:	inc    esi
  4088e2:	bound  edi,QWORD PTR [esi+0x28]
  4088e5:	mov    ss,WORD PTR [ecx+0x57]
  4088e8:	scas   eax,DWORD PTR es:[edi]
  4088e9:	stos   DWORD PTR es:[edi],eax
  4088ea:	xchg   BYTE PTR [edi],ch
  4088ec:	lock pop eax
  4088ee:	sbb    BYTE PTR [edx+0x6],dl
  4088f1:	stos   BYTE PTR es:[edi],al
  4088f2:	push   ebx
  4088f3:	imul   edx,DWORD PTR [ebx-0x2e3df39a],0xb
  4088fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088fb:	cmp    DWORD PTR [ebp+0x22],ecx
  4088fe:	sub    al,0x60
  408900:	cmp    eax,0x445c5ad6
  408905:	sbb    BYTE PTR [ebx+0x6],bh
  408908:	scas   al,BYTE PTR es:[edi]
  408909:	inc    di
  40890b:	addr16 sub DWORD PTR gs:[bp+di-0x7c74],0xffffff91
  408913:	popa   
  408914:	daa    
  408915:	cld    
  408916:	sbb    ch,dh
  408918:	mov    ebx,0xba4e7558
  40891d:	cmp    DWORD PTR [eax+0x70],esp
  408920:	call   0x7d578ecf
  408925:	dec    ebp
  408926:	jg     0x40893e
  408928:	cmc    
  408929:	and    DWORD PTR [ecx],ecx
  40892b:	dec    esi
  40892c:	test   DWORD PTR [edx+edi*2-0x72312fa4],ebx
  408933:	push   ds
  408934:	inc    edx
  408935:	xchg   ebp,eax
  408936:	jmp    0x67f9:0xc18d828e
  40893d:	and    ch,ah
  40893f:	arpl   WORD PTR [esi+0xf],cx
  408942:	call   0x12cc1d72
  408947:	jp     0x408963
  408949:	and    eax,0xaa3cba00
  40894e:	sahf   
  40894f:	adc    BYTE PTR [ecx],0x8c
  408952:	jae    0x408925
  408954:	js     0x408963
  408956:	test   al,0x91
  408958:	sar    DWORD PTR [ecx+0x4f],0x7f
  40895c:	icebp  
  40895d:	out    0x46,eax
  40895f:	outs   dx,BYTE PTR ds:[esi]
  408960:	rcl    DWORD PTR [edx+eax*8-0x25],1
  408964:	jecxz  0x40896a
  408966:	pop    edi
  408967:	test   BYTE PTR [esi-0x69eef30b],0x92
  40896e:	imul   ebp
  408970:	pop    ebx
  408971:	adc    eax,0xaa8f0d43
  408976:	aaa    
  408977:	mov    dl,0x94
  408979:	out    0x9a,eax
  40897b:	shl    BYTE PTR [ebx],1
  40897d:	pop    esp
  40897e:	nop
  40897f:	adc    DWORD PTR [esi],eax
  408981:	xchg   edx,eax
  408982:	xchg   ecx,eax
  408983:	inc    ecx
  408984:	push   ss
  408985:	cmp    BYTE PTR [eax],0x96
  408988:	inc    edx
  408989:	loopne 0x4089fb
  40898b:	shl    BYTE PTR [esp+ebx*4+0x445ae493],0x12
  408993:	cs test esp,0x81332ba2
  40899a:	mov    ch,0xaf
  40899c:	les    ecx,FWORD PTR [esi*8+0x41f1435b]
  4089a3:	jne    0x4089a1
  4089a5:	ror    BYTE PTR ds:0xeb5a149a,0x4
  4089ac:	pop    esi
  4089ad:	mov    edi,0x6c30ff89
  4089b2:	ror    DWORD PTR [edi-0x5da81839],cl
  4089b8:	mov    eax,ds:0x2850b622
  4089bd:	fnstcw WORD PTR [ebx+ebx*2-0x47e83b16]
  4089c4:	repz leave 
  4089c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c7:	inc    esi
  4089c8:	xchg   esp,eax
  4089c9:	and    ah,BYTE PTR [edx+esi*2]
  4089cc:	cmp    DWORD PTR ds:[esi+0xc7d2895],esp
  4089d3:	jmp    0x87913bd0
  4089d8:	sbb    esi,DWORD PTR [edx]
  4089da:	pop    edi
  4089db:	shl    DWORD PTR fs:[ebx-0x26],cl
  4089df:	xchg   edi,eax
  4089e0:	push   es
  4089e1:	pusha  
  4089e2:	xor    BYTE PTR [ecx],0xd9
  4089e5:	and    eax,0xadb4ca28
  4089ea:	pop    ds
  4089eb:	out    dx,al
  4089ec:	mov    ss,WORD PTR [edi+0x1b86411a]
  4089f2:	ror    ah,cl
  4089f4:	mov    dl,0xfb
  4089f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089f7:	mov    ebx,DWORD PTR [ebx-0x23983526]
  4089fd:	inc    ebx
  4089fe:	cmc    
  4089ff:	jl     0x408993
  408a01:	cmp    ecx,DWORD PTR [esp+eiz*8+0x5b05abb4]
  408a08:	push   edx
  408a09:	adc    BYTE PTR [edx],bl
  408a0b:	inc    edx
  408a0c:	out    0x20,eax
  408a0e:	pop    ds
  408a0f:	and    al,0x47
  408a11:	call   0x9a20:0xe0e5a7a1
  408a18:	xchg   edi,eax
  408a19:	dec    ebp
  408a1a:	pop    ss
  408a1b:	or     eax,0xd50d7794
  408a20:	popa   
  408a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a22:	(bad)  
  408a23:	fs pop ds
  408a25:	adc    al,0x7c
  408a27:	pop    edx
  408a28:	scas   al,BYTE PTR es:[edi]
  408a29:	imul   ebp,DWORD PTR [edi],0x75
  408a2c:	and    BYTE PTR [ebp+0x13],dl
  408a2f:	pop    es
  408a30:	inc    edi
  408a31:	cmp    DWORD PTR [ebp+0x46],ebp
  408a34:	xchg   esi,eax
  408a35:	pop    esp
  408a36:	inc    esp
  408a37:	shr    eax,0x33
  408a3a:	shr    BYTE PTR [ecx+ecx*1],cl
  408a3d:	mov    edx,0xbb31b11d
  408a42:	icebp  
  408a43:	mov    ds:0x7abb2a1c,eax
  408a48:	xchg   ecx,eax
  408a49:	or     ebp,eax
  408a4b:	(bad)  
  408a4c:	aad    0xca
  408a4e:	rcr    bh,0xcf
  408a51:	(bad)  
  408a52:	loopne 0x4089ff
  408a54:	imul   ebp,DWORD PTR [edi],0x2503c979
  408a5a:	(bad)  
  408a5b:	daa    
  408a5c:	fnstenv [ebx-0x67]
  408a5f:	lods   al,BYTE PTR ds:[esi]
  408a60:	add    al,0xa1
  408a62:	cmp    BYTE PTR [ecx-0x11],bl
  408a65:	fs sub ecx,ebx
  408a68:	xchg   BYTE PTR [eax+0x2df113f9],bl
  408a6e:	sbb    BYTE PTR [edx+0x3390d482],dh
  408a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a75:	xor    ebx,DWORD PTR [esi+0x2e]
  408a78:	sub    DWORD PTR [ebp-0x74],edi
  408a7b:	mov    dl,0x25
  408a7d:	lds    edx,FWORD PTR [ebx]
  408a7f:	mov    esi,0x8f6fc993
  408a84:	fs scas al,BYTE PTR es:[edi]
  408a86:	or     al,BYTE PTR [ebx-0x71ba502e]
  408a8c:	xor    cl,bh
  408a8e:	lods   al,BYTE PTR ds:[esi]
  408a8f:	push   es
  408a90:	sti    
  408a91:	cmc    
  408a92:	jecxz  0x408a58
  408a94:	inc    edx
  408a95:	push   eax
  408a96:	pop    ecx
  408a97:	sub    dh,ch
  408a99:	fbstp  TBYTE PTR [ecx]
  408a9b:	out    dx,eax
  408a9c:	push   es
  408a9d:	xlat   BYTE PTR ds:[ebx]
  408a9e:	sub    BYTE PTR [ebx+ebx*4-0x57588b86],dl
  408aa5:	inc    edx
  408aa6:	push   ecx
  408aa7:	mov    dl,0x8
  408aa9:	sub    esi,DWORD PTR [ebx]
  408aab:	cli    
  408aac:	bound  ecx,QWORD PTR [ecx]
  408aae:	retf   0x2b7d
  408ab1:	cmp    cl,BYTE PTR ds:0xaa0985a9
  408ab7:	xor    ch,dh
  408ab9:	cmp    BYTE PTR gs:[esi+esi*1-0x13],bh
  408abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408abf:	outs   dx,DWORD PTR ds:[esi]
  408ac0:	mov    esi,0x959e429
  408ac5:	adc    al,BYTE PTR [edx+0x5bac8ebc]
  408acb:	ds push 0xf0fdce72
  408ad1:	inc    edi
  408ad2:	outs   dx,BYTE PTR ds:[esi]
  408ad3:	aas    
  408ad4:	test   DWORD PTR [eax],ecx
  408ad6:	mov    es,edi
  408ad8:	imul   ebp,edx,0xfd05fb3a
  408ade:	dec    ecx
  408adf:	aaa    
  408ae0:	ds mov bl,0xab
  408ae3:	jle    0x408aef
  408ae5:	fidivr DWORD PTR [edx-0x3b2f68be]
  408aeb:	dec    esi
  408aec:	xchg   ebx,eax
  408aed:	xor    dl,BYTE PTR [ebp+0x39dd4c9e]
  408af3:	shl    esp,0xcd
  408af6:	enter  0x1a49,0x5b
  408afa:	stc    
  408afb:	mov    ecx,0x7334b081
  408b00:	push   esi
  408b01:	fnstsw WORD PTR [edx-0xc7539a6]
  408b07:	dec    al
  408b09:	jbe    0x408acb
  408b0b:	popf   
  408b0c:	ss jae 0x408b3a
  408b0f:	ret    
  408b10:	adc    cl,BYTE PTR [ecx+0x1aff10c8]
  408b16:	je     0x408b08
  408b18:	jp     0x408af6
  408b1a:	push   ds
  408b1b:	cmp    eax,0x8be48609
  408b20:	push   es
  408b21:	inc    eax
  408b22:	lods   eax,DWORD PTR ds:[esi]
  408b23:	xor    DWORD PTR [esi+0x6c],ebp
  408b26:	idiv   DWORD PTR [edx+0x29]
  408b29:	lds    edi,FWORD PTR [esp+edi*4-0x71946881]
  408b30:	jp     0x408afc
  408b32:	inc    ecx
  408b33:	inc    esi
  408b34:	cmp    esp,DWORD PTR [ebp-0x3fd728d2]
  408b3a:	sti    
  408b3b:	div    DWORD PTR [ebx+0x32a9ab49]
  408b41:	hlt    
  408b42:	sti    
  408b43:	fisub  WORD PTR [edx]
  408b45:	popf   
  408b46:	jmp    0x18854fc1
  408b4b:	jecxz  0x408bb4
  408b4d:	mov    edx,0xe6b1cbe6
  408b52:	adc    ecx,DWORD PTR [edi+0x1d]
  408b55:	icebp  
  408b56:	sbb    eax,esi
  408b58:	test   BYTE PTR [esi-0x6b25d2f7],dh
  408b5e:	jbe    0x408b6a
  408b60:	xchg   ebx,eax
  408b61:	mov    ebp,esp
  408b63:	mov    al,ds:0xa9b71772
  408b68:	gs jae 0x408b5d
  408b6b:	pop    ebx
  408b6c:	fst    QWORD PTR [esi]
  408b6e:	(bad)  
  408b6f:	xor    BYTE PTR [edx],cl
  408b71:	aad    0xd7
  408b73:	(bad)  
  408b74:	ret    0xc13f
  408b77:	mov    ebp,0xd55d9630
  408b7c:	lods   eax,DWORD PTR ds:[esi]
  408b7d:	and    al,BYTE PTR [edi-0x17]
  408b80:	not    DWORD PTR ds:[ecx-0x70d6ec37]
  408b87:	icebp  
  408b88:	sahf   
  408b89:	imul   edi,DWORD PTR [edi-0x2c814db0],0xc3e0a1b4
  408b93:	repnz sbb bh,BYTE PTR [edi-0x561fe1a9]
  408b9a:	mov    esi,0xccf2a7f9
  408b9f:	cli    
  408ba0:	aam    0x24
  408ba2:	sub    ecx,esp
  408ba4:	and    eax,0x3301cda7
  408ba9:	or     BYTE PTR [eax+0x7e51417d],cl
  408baf:	jnp    0x408bc3
  408bb1:	jo     0x408b5f
  408bb3:	in     eax,0x58
  408bb5:	inc    esp
  408bb6:	mov    dl,0x66
  408bb8:	outs   dx,DWORD PTR ds:[esi]
  408bb9:	adc    eax,DWORD PTR [ecx]
  408bbb:	mov    WORD PTR [ebx-0x8ef09fd],ss
  408bc1:	lea    eax,[eax+0x71]
  408bc4:	fxch   st(2)
  408bc6:	clc    
  408bc7:	inc    esi
  408bc8:	cmp    eax,0xd6227c20
  408bcd:	imul   ebx,ebp,0xffffffbd
  408bd0:	(bad)  [ebp-0x2d3a735]
  408bd6:	mov    bh,0x9
  408bd8:	mov    eax,es
  408bda:	sub    DWORD PTR [edx],esi
  408bdc:	test   eax,0x6c225c89
  408be1:	jo     0x408bb4
  408be3:	(bad)  
  408be4:	out    0x35,eax
  408be6:	mov    al,ds:0xe75d0319
  408beb:	sbb    ebx,DWORD PTR [esp+edx*1+0x4e]
  408bef:	sbb    eax,DWORD PTR [ebx+0x4a0ce2a7]
  408bf5:	mov    ah,0xc8
  408bf7:	xchg   ecx,eax
  408bf8:	and    eax,0x4a4a90bb
  408bfd:	(bad)  
  408bfe:	adc    al,0xf4
  408c00:	add    al,bh
  408c02:	mov    cl,dl
  408c04:	mov    ecx,DWORD PTR [esp+esi*4-0x5a]
  408c08:	jno    0x408c3e
  408c0a:	or     dl,0x19
  408c0d:	sub    DWORD PTR [edi+ecx*1+0x2d],eax
  408c11:	mov    eax,ds:0x1ad4282b
  408c16:	addr16 pop es
  408c18:	push   ebx
  408c19:	cdq    
  408c1a:	xor    eax,0xd1e708ae
  408c1f:	pusha  
  408c20:	jo     0x408c22
  408c22:	mov    cl,0xd5
  408c24:	dec    eax
  408c25:	jle    0x408c93
  408c27:	xchg   esi,eax
  408c28:	push   esp
  408c29:	in     eax,0xb9
  408c2b:	jg     0x408c8a
  408c2d:	lea    ebp,[edx-0xe560d33]
  408c33:	and    ah,BYTE PTR [edx]
  408c35:	sub    DWORD PTR [ebp-0x6ffb2d6b],edx
  408c3b:	push   ebx
  408c3c:	test   BYTE PTR [esi-0x45],al
  408c3f:	mov    ds:0xe50d5b5,eax
  408c44:	lods   al,BYTE PTR ds:[esi]
  408c45:	in     al,dx
  408c46:	fld    DWORD PTR [esi+ebp*4+0x2]
  408c4a:	jle    0x408c67
  408c4c:	xchg   BYTE PTR [eax+eax*4-0x557d7d9b],ch
  408c53:	lahf   
  408c54:	jge    0x408cd0
  408c56:	in     al,dx
  408c57:	mov    ebx,0xff7e3169
  408c5c:	mov    ebp,0x5f70c9c9
  408c61:	adc    DWORD PTR [eax],0xffffffac
  408c64:	ror    WORD PTR [ebp-0x318838cd],cl
  408c6b:	dec    ecx
  408c6c:	and    ebp,ebp
  408c6e:	aas    
  408c6f:	dec    eax
  408c70:	test   esp,eax
  408c72:	les    ebp,FWORD PTR [eax]
  408c74:	(bad)
  408c77:	fstp   QWORD PTR [eax-0x2fea6242]
  408c7d:	js     0x408c64
  408c7f:	(bad)  [esi-0x33]
  408c82:	xchg   BYTE PTR [ecx-0x61],dl
  408c85:	mov    bh,0xa4
  408c87:	xchg   ecx,eax
  408c88:	xchg   ebp,eax
  408c89:	je     0x408c20
  408c8b:	syscall 
  408c8d:	idiv   edx
  408c8f:	xchg   esi,eax
  408c90:	sub    al,0x69
  408c92:	fcmovne st,st(6)
  408c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c95:	lock or esi,ebp
  408c98:	jnp    0x408d19
  408c9a:	mov    dl,0xae
  408c9c:	in     al,dx
  408c9d:	ret    
  408c9e:	mov    al,ds:0x6458ceed
  408ca3:	cli    
  408ca4:	ret    0xe402
  408ca7:	xchg   esi,eax
  408ca8:	sub    ebp,DWORD PTR [edx]
  408caa:	fisubr DWORD PTR [ebx]
  408cac:	cs adc edx,esi
  408caf:	mov    edi,0x251ad6fb
  408cb4:	shl    BYTE PTR [eax],cl
  408cb6:	cmp    BYTE PTR [edi],bl
  408cb8:	aam    0x68
  408cba:	add    eax,0x57a2cdd7
  408cbf:	xor    cl,0x62
  408cc2:	mov    ebp,0xe430ce28
  408cc7:	add    bh,BYTE PTR [eax-0x5d]
  408cca:	and    BYTE PTR ds:0x5583a432,0x1
  408cd1:	pop    esi
  408cd2:	inc    esp
  408cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cd4:	clc    
  408cd5:	inc    ebp
  408cd6:	test   al,0x4d
  408cd8:	inc    BYTE PTR [ebp+0x40e77706]
  408cde:	xchg   ecx,eax
  408cdf:	addr16 mov dl,0xb0
  408ce2:	cli    
  408ce3:	int3   
  408ce4:	aaa    
  408ce5:	adc    DWORD PTR [edi-0x1ea0f96d],ebp
  408ceb:	stos   BYTE PTR es:[edi],al
  408cec:	and    edi,esp
  408cee:	adc    al,0xd2
  408cf0:	cmc    
  408cf1:	lea    ebx,[esi]
  408cf3:	mov    ch,0x9e
  408cf5:	sahf   
  408cf6:	push   esi
  408cf7:	xor    DWORD PTR [eax+0xf],ebp
  408cfa:	cmp    ch,BYTE PTR [esi+0x14c4372b]
  408d00:	lods   eax,DWORD PTR ds:[esi]
  408d01:	enter  0x6e36,0xd6
  408d05:	out    0x57,eax
  408d07:	int    0xae
  408d09:	imul   edi,DWORD PTR [edi-0x63],0xa4e94534
  408d10:	lods   al,BYTE PTR ds:[esi]
  408d11:	pusha  
  408d12:	xchg   ecx,eax
  408d13:	pushf  
  408d14:	or     DWORD PTR [edx+0xe],0x66
  408d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d19:	stos   DWORD PTR es:[edi],eax
  408d1a:	das    
  408d1b:	cmp    al,0x20
  408d1d:	push   eax
  408d1e:	jp     0x408d93
  408d20:	cmp    ebp,eax
  408d22:	or     ch,BYTE PTR [eax]
  408d24:	dec    edi
  408d25:	xchg   al,bh
  408d27:	push   eax
  408d28:	test   DWORD PTR gs:[eax],ebp
  408d2b:	aad    0xd2
  408d2d:	xor    DWORD PTR [eax-0x72ab37fd],eax
  408d33:	pop    eax
  408d34:	pop    ecx
  408d35:	cmp    BYTE PTR [eax-0x66c425f],0x13
  408d3c:	int3   
  408d3d:	dec    eax
  408d3e:	push   DWORD PTR [edi-0xbde9750]
  408d44:	mov    WORD PTR [esi-0x5d],cs
  408d47:	cdq    
  408d48:	sbb    al,0x5d
  408d4a:	hlt    
  408d4b:	xor    al,0x82
  408d4d:	scas   eax,DWORD PTR es:[edi]
  408d4e:	jns    0x408d39
  408d50:	addr16 (bad) 
  408d52:	pop    ebx
  408d53:	xor    eax,0x11680b3d
  408d58:	mov    ecx,0xbc4bdcf8
  408d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d5e:	jae    0x408d87
  408d60:	test   BYTE PTR [eax+0x2],bh
  408d63:	daa    
  408d64:	popf   
  408d65:	les    edi,FWORD PTR [edx-0x632aadb8]
  408d6b:	mov    esi,0x8bfae9a2
  408d70:	ror    BYTE PTR [eax-0x4],cl
  408d73:	(bad)  
  408d75:	popf   
  408d76:	gs enter 0x2c75,0x5e
  408d7b:	push   eax
  408d7c:	mov    esp,0x4be40232
  408d81:	dec    esp
  408d82:	aas    
  408d83:	stc    
  408d84:	pushf  
  408d85:	sbb    esp,0xebe07d90
  408d8b:	lds    edx,FWORD PTR [eax-0x2d]
  408d8e:	dec    esi
  408d8f:	mov    ds:0xcfbe446b,al
  408d94:	xchg   esp,eax
  408d95:	sub    ch,BYTE PTR [edx-0x157c04ba]
  408d9b:	adc    ebx,0xd9aa4261
  408da1:	or     DWORD PTR [ebx+0x66],esp
  408da4:	mov    eax,0x1a888007
  408da9:	sbb    ax,0xb111
  408dad:	sbb    al,0x27
  408daf:	mov    cl,0x11
  408db1:	adc    al,0xa5
  408db3:	add    DWORD PTR [ecx-0x1e912ff9],0xfffffffa
  408dba:	test   ebp,ebp
  408dbc:	or     ebx,esp
  408dbe:	fnsave [ebx+ecx*4+0x403320eb]
  408dc5:	imul   esp,DWORD PTR [edi+0x73],0x6d81cf66
  408dcc:	jae    0x408df2
  408dce:	mov    ds,WORD PTR [edx+0x7d]
  408dd1:	rol    DWORD PTR [edx-0x30],cl
  408dd4:	mov    ah,0xb5
  408dd6:	xor    ch,BYTE PTR [ebp-0xb]
  408dd9:	out    0xb4,eax
  408ddb:	xchg   ecx,eax
  408ddc:	xor    BYTE PTR ds:0xf94f598e,ch
  408de2:	lock push ds
  408de4:	xchg   ebp,eax
  408de5:	or     bl,BYTE PTR [ebx+0x191f0585]
  408deb:	fisttp QWORD PTR [edx+0x133b822b]
  408df1:	test   ebp,edi
  408df3:	push   ecx
  408df4:	inc    ebp
  408df5:	mov    esi,0x35e9a44e
  408dfa:	(bad)  
  408dfb:	mov    edx,0xe76cb330
  408e00:	push   0xffffffef
  408e02:	cwde   
  408e03:	stos   BYTE PTR es:[edi],al
  408e04:	cmp    DWORD PTR [ecx],eax
  408e06:	mov    al,0x7f
  408e08:	mov    esi,0xbb22b2db
  408e0d:	cmp    dh,BYTE PTR [edx]
  408e0f:	ja     0x408e54
  408e11:	mov    WORD PTR [ebp+0x13],fs
  408e14:	add    al,0x45
  408e16:	pop    edi
  408e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e18:	adc    al,0xc8
  408e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e1b:	push   es
  408e1c:	ja     0x408e08
  408e1e:	scas   eax,DWORD PTR es:[edi]
  408e1f:	inc    edi
  408e20:	lds    edi,FWORD PTR [edx]
  408e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e23:	popf   
  408e24:	dec    ebp
  408e25:	xchg   esp,eax
  408e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e27:	dec    esi
  408e28:	xchg   edx,eax
  408e29:	loopne 0x408dde
  408e2b:	mov    esp,0x9bdb090a
  408e30:	and    DWORD PTR [eax+ebp*8+0x592bed12],esi
  408e37:	mov    edx,DWORD PTR [ebx-0x4b]
  408e3a:	push   esp
  408e3b:	push   es
  408e3c:	cdq    
  408e3d:	hlt    
  408e3e:	repnz aas 
  408e40:	ret    
  408e41:	pop    edi
  408e42:	jno    0x408eae
  408e44:	xchg   edx,eax
  408e45:	adc    eax,0xcefd1aa
  408e4a:	adc    DWORD PTR [esi+0x40],esp
  408e4d:	ss leave 
  408e4f:	(bad)  
  408e50:	sti    
  408e51:	jmp    0xb93e45a0
  408e56:	fisub  DWORD PTR [eax+0x19]
  408e59:	pusha  
  408e5a:	inc    esp
  408e5b:	adc    bl,dh
  408e5d:	cmp    eax,DWORD PTR [ecx-0x50]
  408e60:	inc    edx
  408e61:	xchg   esi,eax
  408e62:	fdivrp st(5),st
  408e64:	jbe    0x408e97
  408e66:	fimul  WORD PTR [esi]
  408e68:	sub    esp,DWORD PTR gs:[ecx+0x176d351]
  408e6f:	(bad)  
  408e70:	(bad)  
  408e71:	or     edi,DWORD PTR [eax]
  408e73:	xlat   BYTE PTR ds:[ebx]
  408e74:	std    
  408e75:	icebp  
  408e76:	mov    BYTE PTR cs:[edi+0x61b4f8a0],cl
  408e7d:	jnp    0x408eab
  408e7f:	push   esi
  408e80:	out    0x66,al
  408e82:	push   esp
  408e83:	dec    ecx
  408e84:	scas   al,BYTE PTR es:[edi]
  408e85:	rcl    DWORD PTR [ebp-0x28],0x92
  408e89:	stc    
  408e8a:	jg     0x408ef8
  408e8c:	je     0x408ea8
  408e8e:	mov    edi,db2
  408e91:	mul    DWORD PTR ds:0x6c089be1
  408e97:	gs out 0xc8,al
  408e9a:	sub    DWORD PTR [esi+ebp*4],esi
  408e9d:	mov    edx,0x9bc393aa
  408ea2:	pop    edi
  408ea3:	xlat   BYTE PTR ds:[ebx]
  408ea4:	and    eax,0x2ddb6069
  408ea9:	push   ebp
  408eaa:	scas   eax,DWORD PTR es:[edi]
  408eab:	idiv   ebp
  408ead:	nop
  408eae:	push   esi
  408eaf:	lds    edx,FWORD PTR [esi-0x2d]
  408eb2:	(bad)  
  408eb4:	and    eax,0xa39a3a4d
  408eb9:	arpl   dx,si
  408ebb:	cmp    bh,BYTE PTR [ebp+ecx*4+0x5ac2e097]
  408ec2:	hlt    
  408ec3:	and    DWORD PTR [esi+0x735fa622],ecx
  408ec9:	add    esi,ebx
  408ecb:	mov    cl,0x4f
  408ecd:	scas   al,BYTE PTR es:[edi]
  408ece:	push   esi
  408ecf:	lods   eax,DWORD PTR ds:[esi]
  408ed0:	pop    esi
  408ed1:	push   ds
  408ed2:	mov    ds:0x2d86be22,al
  408ed7:	adc    al,0x56
  408ed9:	and    al,0x18
  408edb:	fadd   DWORD PTR [edx-0x65c157f4]
  408ee1:	mov    bh,0x0
  408ee3:	stos   BYTE PTR es:[edi],al
  408ee4:	es xchg ecx,eax
  408ee7:	jge    0x408ef1
  408ee9:	out    0x45,eax
  408eeb:	xchg   edi,eax
  408eec:	jno    0x408efc
  408eee:	popa   
  408eef:	dec    edx
  408ef0:	int3   
  408ef1:	int3   
  408ef2:	cmp    al,0x3f
  408ef4:	xchg   esi,eax
  408ef5:	inc    ebp
  408ef6:	repnz or eax,0xb3076037
  408efc:	mov    dh,0xd0
  408efe:	popf   
  408eff:	call   0x3a:0x8c63e5e4
  408f06:	and    BYTE PTR [esi+0x443beffa],cl
  408f0c:	adc    al,BYTE PTR [ecx+0x3a]
  408f0f:	nop
  408f10:	mov    ah,0x97
  408f12:	and    edx,eax
  408f14:	out    0x26,al
  408f16:	lock or ecx,DWORD PTR [esi+ecx*8+0x1a]
  408f1b:	push   eax
  408f1c:	dec    esi
  408f1d:	(bad)  
  408f1e:	pop    ds
  408f1f:	sub    BYTE PTR [edi],bl
  408f21:	mov    ch,cl
  408f23:	(bad)  
  408f24:	nop
  408f25:	call   0x28194335
  408f2a:	or     eax,0x1da33d25
  408f2f:	loope  0x408f18
  408f31:	mov    dh,0x82
  408f33:	pop    ss
  408f34:	enter  0x16e0,0x85
  408f38:	or     BYTE PTR [ebp+0x6c],al
  408f3b:	sub    dl,BYTE PTR [edx+eiz*2-0x77]
  408f3f:	dec    esp
  408f40:	mov    al,0x3f
  408f42:	cdq    
  408f43:	xor    esi,DWORD PTR [edi-0x658d9804]
  408f49:	mov    ebx,DWORD PTR [esi+0x27d4e420]
  408f4f:	mov    ebx,0xb056e8aa
  408f55:	or     ah,bh
  408f57:	sub    esi,DWORD PTR [ebp+0x4dd88e3c]
  408f5d:	shr    BYTE PTR [eax-0x5],1
  408f60:	cmp    al,al
  408f62:	fwait
  408f63:	xor    ecx,ecx
  408f65:	data16 sbb cl,al
  408f68:	mov    esi,0xf146d1d9
  408f6d:	or     DWORD PTR [ebx-0x32406aeb],ecx
  408f73:	pop    esi
  408f74:	mov    ds:0x458b76f6,al
  408f79:	mov    BYTE PTR [eax],cl
  408f7b:	les    esp,FWORD PTR [ecx]
  408f7d:	stos   DWORD PTR es:[edi],eax
  408f7e:	sub    bl,bh
  408f80:	iret   
  408f81:	mov    ebp,0xd4e3328e
  408f86:	ret    0xe917
  408f89:	push   ds
  408f8a:	push   cs
  408f8b:	mov    ds:0x8948979b,al
  408f90:	xor    edx,eax
  408f92:	std    
  408f93:	test   DWORD PTR [edx],edi
  408f95:	push   eax
  408f96:	add    DWORD PTR ds:0xcfcb868e,ebx
  408f9c:	retf   
  408f9d:	jle    0x40900d
  408f9f:	jae    0x408f76
  408fa1:	mov    eax,ds:0x2eac040b
  408fa6:	scas   al,BYTE PTR es:[edi]
  408fa7:	xchg   esi,eax
  408fa8:	sbb    DWORD PTR [ecx+ebp*8],ebp
  408fab:	retf   
  408fac:	mov    bl,0xa
  408fae:	mov    al,0x7c
  408fb0:	test   eax,0xf3c63d91
  408fb5:	ins    DWORD PTR es:[edi],dx
  408fb6:	fdivr  QWORD PTR [ebp+0x2f9f427b]
  408fbc:	lock mov cl,0x59
  408fbf:	imul   eax
  408fc1:	and    al,0xfd
  408fc3:	lock pop esi
  408fc5:	out    0xf4,eax
  408fc7:	mov    al,ds:0x4fbf0b3f
  408fcc:	mov    ch,0x75
  408fce:	mov    esp,0xbf5321d3
  408fd3:	add    al,bh
  408fd5:	jnp    0x409000
  408fd7:	pushf  
  408fd8:	mov    ebx,0x609421b9
  408fdd:	adc    ebx,ebx
  408fdf:	test   esi,ebx
  408fe1:	in     eax,0xe6
  408fe3:	or     eax,DWORD PTR [esi]
  408fe5:	retf   
  408fe6:	setae  ah
  408fe9:	sub    dh,BYTE PTR [edi+0x13e8b98b]
  408fef:	push   0x94dc3f87
  408ff4:	dec    edi
  408ff5:	add    ecx,DWORD PTR [edx-0x9]
  408ff8:	dec    edi
  408ff9:	xchg   esi,eax
  408ffa:	ds mov fs,ecx
  408ffd:	pop    edx
  408ffe:	scas   al,BYTE PTR es:[edi]
  408fff:	test   al,0x4b
  409001:	mov    cl,0xab
  409003:	iret   
  409004:	and    DWORD PTR [edx-0x38668c17],edx
  40900a:	push   0xffffffac
  40900c:	or     al,0xce
  40900e:	pop    ebp
  40900f:	mov    bh,0xe2
  409011:	sahf   
  409012:	int    0xf
  409014:	ins    BYTE PTR es:[edi],dx
  409015:	fsub   QWORD PTR [esp+edi*2]
  409018:	int3   
  409019:	mov    al,0x79
  40901b:	aad    0x79
  40901d:	push   edx
  40901e:	add    edi,edi
  409020:	in     eax,dx
  409021:	js     0x40901a
  409023:	xor    al,0x57
  409025:	(bad)  
  409026:	fidiv  DWORD PTR [ebp+0x3c]
  409029:	imul   ebx,DWORD PTR [ebp+0x42],0x3be4959c
  409030:	test   dl,bh
  409032:	adc    eax,0x6c6961d3
  409037:	loop   0x408fe6
  409039:	cld    
  40903a:	and    al,0xd5
  40903c:	jl     0x408fc5
  40903e:	retf   0x74d4
  409041:	xor    eax,0x545e3a63
  409046:	cmp    BYTE PTR [ebx],0x96
  409049:	mov    dl,0xc8
  40904b:	in     al,0x50
  40904d:	sbb    esi,ecx
  40904f:	adc    eax,DWORD PTR [ebx+0x35]
  409052:	mov    BYTE PTR [ebp+0x5495b2d9],0xa6
  409059:	mov    bl,0xa5
  40905b:	shl    BYTE PTR [esi+0x4603e104],1
  409061:	dec    edi
  409062:	mov    dl,0xf5
  409064:	lds    esp,FWORD PTR [edx-0x80]
  409067:	scas   eax,DWORD PTR es:[edi]
  409068:	es mov eax,0x672fb5ce
  40906e:	or     BYTE PTR [ebx],cl
  409070:	pop    edi
  409071:	and    eax,0xd2f52ef9
  409076:	jmp    0x9cca:0x45c53e3d
  40907d:	(bad)  
  40907e:	sub    BYTE PTR [edi-0x6d],al
  409081:	fs mov cl,0x4e
  409084:	rcr    edx,cl
  409086:	xlat   BYTE PTR ds:[ebx]
  409087:	jle    0x40900e
  409089:	aas    
  40908a:	push   ebp
  40908b:	cmp    BYTE PTR [ebx],bl
  40908d:	sti    
  40908e:	adc    DWORD PTR [ebp+0x279dd569],esi
  409094:	in     al,dx
  409095:	xchg   edi,eax
  409096:	fisub  WORD PTR [edi]
  409098:	into   
  409099:	xlat   BYTE PTR ds:[ebx]
  40909a:	mov    bh,0xf3
  40909c:	mov    ebx,?
  40909e:	adc    eax,0x207a800e
  4090a3:	push   ebp
  4090a4:	inc    esp
  4090a5:	jmp    0xe0a4:0xf7f38ada
  4090ac:	pop    ebp
  4090ad:	push   0x9d507365
  4090b2:	sub    al,0x96
  4090b4:	shl    DWORD PTR [ecx],cl
  4090b6:	fld    TBYTE PTR [esi-0x64]
  4090b9:	nop
  4090ba:	pop    esp
  4090bb:	sbb    al,0x98
  4090bd:	(bad)  
  4090be:	mov    BYTE PTR [eax+0x34c04162],0xdf
  4090c5:	fcomip st,st(3)
  4090c7:	in     eax,dx
  4090c8:	inc    ebp
  4090c9:	ficomp DWORD PTR [edi+0x371863d6]
  4090cf:	imul   edi,DWORD PTR [edx+edi*2+0x36],0x1
  4090d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090d5:	mov    DWORD PTR [ebx-0x10],esp
  4090d8:	mul    eax
  4090da:	jno    0x40912c
  4090dc:	or     ebp,edi
  4090de:	add    esp,ecx
  4090e0:	mov    eax,0xa9f5b860
  4090e5:	in     al,0x53
  4090e7:	out    0x0,eax
  4090e9:	sub    dl,BYTE PTR [eax-0x1b178aeb]
  4090ef:	xor    ebp,DWORD PTR [ebx+0x5d5b0b62]
  4090f5:	shl    esi,cl
  4090f7:	in     al,dx
  4090f8:	sbb    eax,0x2535ecff
  4090fd:	mov    ds:0x8cae7208,eax
  409102:	and    DWORD PTR [esp+edi*1+0x325850d2],ecx
  409109:	cli    
  40910a:	mov    edi,0xe5136793
  40910f:	scas   eax,DWORD PTR es:[edi]
  409110:	cmc    
  409111:	sub    esi,0xee4d644f
  409117:	rcr    DWORD PTR [ebp-0x6c],1
  40911a:	iret   
  40911b:	cmp    eax,0xfa2981d8
  409120:	fistp  QWORD PTR [eax]
  409122:	in     al,0x7b
  409124:	shl    BYTE PTR [edx+0x53],1
  409127:	jl     0x409174
  409129:	mov    al,ds:0x7bd2569a
  40912e:	push   0xf27d1f5c
  409133:	out    dx,eax
  409134:	xchg   bh,cl
  409136:	mov    WORD PTR [eax],?
  409138:	neg    DWORD PTR [edi+0x231e4772]
  40913e:	sbb    cl,dh
  409140:	or     BYTE PTR [ebp-0x35723997],0x3e
  409147:	repnz fcom DWORD PTR [ebx+0x7f]
  40914b:	jo     0x4090cd
  40914d:	test   al,0xd3
  40914f:	pop    ebx
  409150:	fwait
  409151:	mov    ebp,0x22b780a4
  409156:	or     BYTE PTR [edi],bl
  409158:	(bad)  
  409159:	cmp    dh,al
  40915b:	sub    dh,dl
  40915d:	outs   dx,BYTE PTR ds:[esi]
  40915e:	adc    DWORD PTR [edi],esi
  409160:	and    al,0xa4
  409162:	es je  0x409197
  409165:	popa   
  409166:	pushf  
  409167:	or     ebp,edi
  409169:	pushf  
  40916a:	push   esp
  40916b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40916c:	and    eax,0x9fc7580c
  409171:	or     BYTE PTR cs:[ecx-0x36],dl
  409175:	mov    dh,0xe5
  409177:	xchg   edx,eax
  409178:	xchg   ebx,eax
  409179:	scas   al,BYTE PTR es:[edi]
  40917a:	cwde   
  40917b:	push   es
  40917c:	out    dx,eax
  40917d:	gs (bad) 
  40917f:	out    dx,al
  409180:	ret    0xf326
  409183:	push   0xffffffde
  409185:	mov    ah,0xb7
  409187:	jp     0x40912d
  409189:	add    BYTE PTR [esi+0x71],0x9b
  40918d:	ds xchg edx,eax
  40918f:	jns    0x40920c
  409191:	inc    edx
  409192:	lea    esi,[ebx-0xe]
  409195:	xchg   esi,eax
  409196:	mov    dl,BYTE PTR ds:0x3da0bd29
  40919c:	inc    ebp
  40919d:	adc    DWORD PTR [edi+0x45255886],esp
  4091a3:	mov    DWORD PTR [ebx-0x4f],esi
  4091a6:	imul   DWORD PTR [eiz*4-0x2d931d79]
  4091ad:	push   eax
  4091ae:	loope  0x409202
  4091b0:	lods   eax,DWORD PTR ds:[esi]
  4091b1:	iret   
  4091b2:	sub    DWORD PTR [ecx],0xffffffef
  4091b5:	push   DWORD PTR [ebx]
  4091b7:	jbe    0x409143
  4091b9:	mov    es,WORD PTR ds:0x51c1f0cf
  4091bf:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4091c1:	mov    esi,0x24b727f1
  4091c6:	sbb    DWORD PTR [ebx-0x474d845b],esi
  4091cc:	inc    esp
  4091cd:	inc    esi
  4091ce:	aam    0x8e
  4091d0:	pop    edi
  4091d1:	jecxz  0x4091ee
  4091d3:	and    bl,ah
  4091d5:	pop    edx
  4091d6:	jl     0x409186
  4091d8:	jge    0x409188
  4091da:	lods   eax,DWORD PTR ds:[esi]
  4091db:	and    dl,BYTE PTR [ecx]
  4091dd:	cli    
  4091de:	daa    
  4091df:	inc    edi
  4091e0:	gs mov ah,0x73
  4091e3:	enter  0x815c,0x78
  4091e7:	sbb    esi,DWORD PTR [eax+0x15bc6c00]
  4091ed:	cld    
  4091ee:	sub    ah,0xd8
  4091f1:	(bad)  
  4091f3:	mov    BYTE PTR [ebp-0x5d269156],0xc0
  4091fa:	xchg   esi,eax
  4091fb:	cld    
  4091fc:	cmp    BYTE PTR [edx-0x30],al
  4091ff:	adc    BYTE PTR [eax-0x2449abc8],cl
  409205:	mov    ah,0x81
  409207:	adc    eax,0x28c95e4b
  40920c:	push   ebx
  40920d:	scas   al,BYTE PTR es:[edi]
  40920e:	pop    esi
  40920f:	nop
  409210:	scas   al,BYTE PTR es:[edi]
  409211:	jmp    0x276e:0x916080a2
  409218:	inc    eax
  409219:	call   0xb0d6:0xe71
  40921f:	push   ecx
  409220:	mov    ?,WORD PTR [esi-0x67]
  409223:	mov    bh,BYTE PTR [eax]
  409225:	sub    eax,0x8e0272f7
  40922a:	and    DWORD PTR [eax+0x8e59e75],edx
  409230:	imul   esi,eax,0xee94e17
  409236:	cmc    
  409237:	lea    esi,[ebx-0x30]
  40923a:	inc    esp
  40923b:	aaa    
  40923c:	lahf   
  40923d:	pop    esi
  40923e:	inc    ecx
  40923f:	pop    ebp
  409240:	mov    ecx,0x8f870ea8
  409245:	jmp    0xd5299975
  40924a:	sbb    esp,eax
  40924c:	or     al,0x1b
  40924e:	(bad)  
  409252:	ss push esp
  409254:	clc    
  409255:	fadd   DWORD PTR [eax+0x68]
  409258:	hlt    
  409259:	pop    ecx
  40925a:	and    eax,0xc3bdb8e4
  40925f:	fstp   TBYTE PTR [eax+eiz*4-0x14433883]
  409266:	pop    esp
  409267:	out    dx,al
  409268:	out    0x34,eax
  40926a:	or     eax,0x4b68ee19
  40926f:	stc    
  409270:	in     al,dx
  409271:	pop    eax
  409272:	mov    esi,0x5be13da3
  409277:	in     eax,0x24
  409279:	rol    DWORD PTR [edx],cl
  40927b:	mov    edx,0xdf2b3141
  409280:	lods   al,BYTE PTR ds:[esi]
  409281:	lea    edi,[ebp+0x79051794]
  409287:	xchg   edx,eax
  409288:	das    
  409289:	xchg   edi,eax
  40928a:	push   ss
  40928b:	test   DWORD PTR [ebp+0x7bc3728e],0xe6616d6f
  409295:	sbb    edx,DWORD PTR [esp+ebp*8]
  409298:	scas   al,BYTE PTR es:[edi]
  409299:	mov    eax,0xc86fb3e4
  40929e:	xor    ebx,DWORD PTR [esi-0x19c2f015]
  4092a4:	repz jno 0x409255
  4092a7:	push   0x15
  4092a9:	jbe    0x4092cf
  4092ab:	arpl   WORD PTR [ebx+0x7b],dx
  4092ae:	jle    0x4092e3
  4092b0:	xchg   ebx,eax
  4092b1:	outs   dx,DWORD PTR ds:[esi]
  4092b2:	ret    0x924d
  4092b5:	push   ebx
  4092b6:	xchg   ecx,eax
  4092b7:	fist   WORD PTR [edi]
  4092b9:	xchg   BYTE PTR [eax-0x8],ah
  4092bc:	imul   esi,DWORD PTR [edx-0x35],0xe012fa8f
  4092c3:	push   ecx
  4092c4:	pop    eax
  4092c5:	add    dl,dh
  4092c7:	das    
  4092c8:	add    DWORD PTR [edx],ebx
  4092ca:	push   ds
  4092cb:	xchg   BYTE PTR [edx+edi*1],ch
  4092ce:	sub    edi,esi
  4092d0:	pushf  
  4092d1:	ja     0x409298
  4092d3:	ja     0x409304
  4092d5:	nop
  4092d6:	cmp    esi,DWORD PTR [edx]
  4092d8:	cli    
  4092d9:	aam    0x85
  4092db:	and    eax,DWORD PTR [ecx]
  4092dd:	mov    DWORD PTR [ebx+ecx*2-0x33a7d928],edx
  4092e4:	addr16 in eax,dx
  4092e6:	or     cl,BYTE PTR [ecx-0x21dd085]
  4092ec:	jle    0x409318
  4092ee:	loop   0x4092ee
  4092f0:	fidivr WORD PTR [edx]
  4092f2:	and    BYTE PTR [ebp+0x5326cca],al
  4092f8:	push   esp
  4092f9:	xlat   BYTE PTR ds:[bx]
  4092fb:	pop    eax
  4092fc:	mov    BYTE PTR [edi],cl
  4092fe:	outs   dx,DWORD PTR ds:[esi]
  4092ff:	retf   0x951a
  409302:	les    ebx,FWORD PTR [ebx+0x75]
  409305:	js     0x4092ee
  409307:	shl    dh,0xfb
  40930a:	dec    edi
  40930b:	mov    esp,DWORD PTR [ebx+edi*2]
  40930e:	aad    0x35
  409310:	mov    esp,0x6539707b
  409315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409316:	jno    0x4092f4
  409318:	sub    BYTE PTR [edi+ebx*4-0x75890a8a],al
  40931f:	aaa    
  409320:	cmova  esi,esi
  409323:	outs   dx,BYTE PTR ds:[esi]
  409324:	lahf   
  409325:	mov    bh,0xd4
  409327:	(bad)  
  409328:	shl    DWORD PTR [edx],cl
  40932a:	jnp    0x409366
  40932c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40932d:	cmp    DWORD PTR [edi],edi
  40932f:	mov    edx,0x4ebc8111
  409334:	loop   0x409354
  409336:	cs pushf 
  409338:	mov    ecx,0xca609c82
  40933d:	cmp    al,0xf4
  40933f:	imul   DWORD PTR [ebx]
  409341:	loopne 0x4092f8
  409343:	fucomp st(1)
  409345:	test   ch,dl
  409347:	mov    ch,0x56
  409349:	pop    edx
  40934a:	sub    eax,0x4d79e8b4
  40934f:	sar    DWORD PTR cs:[edi-0x29],1
  409353:	sbb    eax,0x773249c4
  409358:	dec    ebp
  409359:	pop    ss
  40935a:	push   esp
  40935b:	test   DWORD PTR [edx],edx
  40935d:	pop    edx
  40935e:	dec    esi
  40935f:	aam    0x73
  409361:	cdq    
  409362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409363:	mov    BYTE PTR [eax],cl
  409365:	pop    es
  409366:	mov    BYTE PTR ds:0xf6baf960,ch
  40936c:	jbe    0x409389
  40936e:	push   esp
  40936f:	xor    edi,DWORD PTR [eax]
  409371:	jne    0x409319
  409373:	adc    BYTE PTR [ebp+0x24a3db79],0x4c
  40937a:	clc    
  40937b:	jg     0x40933e
  40937d:	adc    BYTE PTR [ecx+ecx*1-0x54],ah
  409381:	(bad)  
  409382:	repnz bswap eax
  409385:	pop    ebx
  409386:	and    DWORD PTR [esi+edi*2+0x45],esi
  40938a:	nop
  40938b:	sub    eax,0x66b84139
  409390:	out    dx,al
  409391:	xchg   edi,eax
  409392:	xchg   ecx,eax
  409393:	inc    eax
  409394:	sbb    ch,al
  409396:	xor    BYTE PTR ds:0xec423100,bl
  40939c:	dec    eax
  40939d:	mov    ebx,0xedaee163
  4093a2:	lds    eax,FWORD PTR [eax-0x62545f3e]
  4093a8:	pushf  
  4093a9:	ss xchg ecx,esi
  4093ac:	push   ebp
  4093ad:	mov    ebp,0xdd7d21d5
  4093b2:	pop    ebx
  4093b3:	das    
  4093b4:	jnp    0x409420
  4093b6:	jno    0x40940a
  4093b8:	sar    DWORD PTR [edi-0x330817ce],0x56
  4093bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c0:	push   edi
  4093c1:	adc    eax,edi
  4093c3:	jns    0x4093cd
  4093c5:	clc    
  4093c6:	rol    DWORD PTR [ebp-0x39],1
  4093c9:	scas   eax,DWORD PTR es:[edi]
  4093ca:	lods   al,BYTE PTR ds:[esi]
  4093cb:	or     al,0x2b
  4093cd:	mov    al,ds:0xcd921fdf
  4093d2:	loop   0x409416
  4093d4:	fs mov dl,0x69
  4093d7:	adc    bl,0x89
  4093da:	out    0xe0,eax
  4093dc:	mov    esp,0x7d52647b
  4093e1:	inc    ebx
  4093e2:	ror    ecx,1
  4093e4:	push   esi
  4093e5:	xchg   ebx,eax
  4093e6:	sbb    bh,BYTE PTR [ecx+0x78]
  4093e9:	retf   
  4093ea:	ret    0xe2ea
  4093ed:	xchg   ebp,eax
  4093ee:	pop    esp
  4093ef:	fcomi  st,st(4)
  4093f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f2:	pop    edx
  4093f3:	lahf   
  4093f4:	neg    BYTE PTR [ebp-0x5438fe82]
  4093fa:	or     DWORD PTR [esi],ebx
  4093fc:	js     0x40943a
  4093fe:	push   0x70560864
  409403:	sub    DWORD PTR [ebx-0x4c66d041],ecx
  409409:	not    BYTE PTR [ebx+0x38095c34]
  40940f:	out    dx,al
  409410:	sub    eax,0xc9347a6d
  409415:	(bad)  
  409416:	popa   
  409417:	xor    DWORD PTR [ecx],esi
  409419:	and    edi,0x73
  40941c:	and    ah,ah
  40941e:	(bad)  
  409420:	jae    0x4093b3
  409422:	mov    ch,0x1a
  409424:	push   ebx
  409425:	xchg   ebx,eax
  409426:	mov    edi,0xba8ea80e
  40942b:	pop    ds
  40942c:	pop    edx
  40942d:	nop
  40942e:	sub    esp,ecx
  409430:	stc    
  409431:	xor    ch,BYTE PTR [ebp+0x2d]
  409434:	stc    
  409435:	daa    
  409436:	cmp    BYTE PTR [edi],0x2e
  409439:	je     0x4093d4
  40943b:	sub    al,0xa5
  40943d:	pop    esi
  40943e:	aam    0xd
  409440:	aas    
  409441:	(bad)  
  409442:	cmp    DWORD PTR [eax+0x43],edi
  409445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409446:	daa    
  409447:	call   0x82f1bcd5
  40944c:	addr16 repz call 0x550f2aa4
  409453:	mov    bh,0x57
  409455:	adc    eax,0x8f11cadc
  40945a:	lods   eax,DWORD PTR ds:[esi]
  40945b:	jbe    0x409490
  40945d:	test   dl,ch
  40945f:	jl     0x409453
  409461:	dec    esi
  409462:	out    dx,al
  409463:	mov    al,0xda
  409465:	(bad)  
  409466:	pop    edi
  409467:	mov    al,ds:0x8538ecd5
  40946c:	scas   al,BYTE PTR es:[edi]
  40946d:	pop    es
  40946e:	mov    ecx,0xeb789090
  409473:	jo     0x409466
  409475:	into   
  409476:	aas    
  409477:	scas   eax,DWORD PTR es:[edi]
  409478:	or     dl,bl
  40947a:	mov    al,0x10
  40947c:	push   esi
  40947d:	jmp    0x4094ce
  40947f:	inc    ecx
  409480:	leave  
  409481:	cdq    
  409482:	push   ds
  409483:	dec    esp
  409484:	stos   DWORD PTR es:[edi],eax
  409485:	ret    
  409486:	adc    edx,esi
  409488:	sar    DWORD PTR [eax],cl
  40948a:	(bad)  
  40948b:	outs   dx,DWORD PTR ds:[esi]
  40948c:	test   eax,0x4fb7e7ce
  409491:	fdiv   DWORD PTR ds:0x83c2fcfc
  409497:	(bad)
  40949a:	mov    eax,ebp
  40949c:	test   esi,0xca3b546e
  4094a2:	mov    al,0xa5
  4094a4:	push   edx
  4094a5:	sbb    al,0xa4
  4094a7:	lods   al,BYTE PTR ds:[esi]
  4094a8:	rcl    bh,cl
  4094aa:	or     esi,DWORD PTR [ecx]
  4094ac:	or     edi,ecx
  4094ae:	add    DWORD PTR [ecx-0x2a],edx
  4094b1:	ret    0xb2cd
  4094b4:	push   eax
  4094b5:	dec    ebp
  4094b7:	les    ebp,FWORD PTR [ecx-0x18]
  4094ba:	cdq    
  4094bb:	scas   al,BYTE PTR es:[edi]
  4094bc:	test   al,0xdc
  4094be:	add    al,0x98
  4094c0:	inc    esi
  4094c1:	mov    WORD PTR [edx],ss
  4094c3:	jo     0x409455
  4094c5:	sbb    esi,DWORD PTR [ecx+0x6fa7d727]
  4094cb:	fiadd  DWORD PTR [edi+ebp*4+0x6e]
  4094cf:	mov    ebx,0xe12d155d
  4094d4:	mov    bl,0x86
  4094d6:	cmp    ch,BYTE PTR [edx+0x33]
  4094d9:	inc    esi
  4094da:	pop    esi
  4094db:	jno    0x409543
  4094dd:	or     dh,BYTE PTR [eax-0x27]
  4094e0:	push   edi
  4094e1:	imul   edi,DWORD PTR [esi-0x4958618],0x7602258d
  4094eb:	inc    eax
  4094ec:	mov    bl,0xad
  4094ee:	xchg   ebp,eax
  4094ef:	mov    DWORD PTR [esi],ebx
  4094f1:	lods   al,BYTE PTR ds:[esi]
  4094f2:	add    edx,DWORD PTR [eax]
  4094f4:	les    edx,FWORD PTR [edx-0x7a]
  4094f7:	das    
  4094f8:	test   BYTE PTR [edx+0x138e7341],cl
  4094fe:	nop
  4094ff:	sbb    DWORD PTR [esi-0x3afd77f],0xffffffb2
  409506:	and    BYTE PTR [ebx+0x18],dl
  409509:	int    0x3
  40950b:	je     0x4094f6
  40950d:	sbb    ebp,0xcf05bbc9
  409513:	adc    ebp,DWORD PTR [esi-0x16]
  409516:	jle    0x40958f
  409518:	push   ebx
  409519:	arpl   dx,bp
  40951b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951c:	leave  
  40951d:	popa   
  40951e:	jge    0x409571
  409520:	pop    eax
  409521:	push   ss
  409522:	and    BYTE PTR [edi+edx*1],0x97
  409526:	dec    edx
  409527:	mov    BYTE PTR [ecx-0x4],ah
  40952a:	adc    eax,0xbc3d466
  40952f:	mov    ds:0xe4f9a58c,eax
  409534:	ja     0x409559
  409536:	jge    0x4094ee
  409538:	iret   
  409539:	xchg   esi,eax
  40953a:	outs   dx,BYTE PTR ds:[esi]
  40953b:	adc    al,0xe1
  40953d:	inc    ebx
  40953e:	leave  
  40953f:	imul   ecx,DWORD PTR [edi],0x343cf9f3
  409545:	push   es
  409546:	dec    esi
  409547:	inc    edi
  409548:	cmc    
  409549:	faddp  st(4),st
  40954b:	jge    0x4095c0
  40954d:	imul   esp,DWORD PTR [eax-0x2be72cd9],0xb4596b0d
  409557:	arpl   WORD PTR ds:[edx],bx
  40955a:	sbb    al,0x50
  40955c:	loopne 0x4095b3
  40955e:	mov    dl,0x56
  409560:	pop    edx
  409561:	xchg   edx,eax
  409562:	fimul  WORD PTR [ebx-0x77d2bb8c]
  409568:	dec    edi
  409569:	pop    ebp
  40956a:	(bad)  
  40956b:	ins    BYTE PTR es:[edi],dx
  40956c:	cmp    edx,eax
  40956e:	call   0xd42e:0xa2e551a0
  409575:	loopne 0x409595
  409577:	mov    cl,0xe5
  409579:	ins    BYTE PTR es:[edi],dx
  40957a:	in     eax,0xfd
  40957c:	and    BYTE PTR [edx],ah
  40957e:	adc    DWORD PTR [ecx-0x3e],0xe9094c06
  409585:	sbb    esi,DWORD PTR [eax]
  409587:	mov    ebp,0xefe75ec0
  40958c:	lea    esp,[esi+esi*2]
  40958f:	xor    edi,DWORD PTR [ecx+0x336979d7]
  409595:	pop    ebx
  409596:	sub    BYTE PTR [edx],bh
  409598:	es lock mov esi,0xfcdb5999
  40959f:	and    eax,0xf8aa4e80
  4095a4:	adc    BYTE PTR [ebx-0x22f312c4],al
  4095aa:	inc    edi
  4095ab:	cmp    dl,BYTE PTR [ebp+0x2dc8533f]
  4095b1:	inc    ecx
  4095b2:	outs   dx,BYTE PTR ds:[esi]
  4095b3:	(bad)  
  4095b4:	in     al,0x95
  4095b6:	js     0x409548
  4095b8:	add    ebx,DWORD PTR [ecx+0x27]
  4095bb:	mov    dh,dh
  4095bd:	ja     0x409587
  4095bf:	pop    ds
  4095c0:	aam    0x26
  4095c2:	pop    edi
  4095c3:	(bad)  
  4095c4:	mov    dh,0x4c
  4095c6:	jle    0x4095d8
  4095c8:	sub    DWORD PTR [ebp+0x6],edx
  4095cb:	and    eax,0x2a95e0e8
  4095d0:	mov    dl,0x56
  4095d2:	jp     0x4095b0
  4095d4:	xor    ebx,esp
  4095d6:	sub    DWORD PTR [eax],eax
  4095d8:	mov    ebx,0xe5b9663d
  4095dd:	inc    edx
  4095de:	xchg   edx,ecx
  4095e0:	hlt    
  4095e1:	es popa 
  4095e3:	dec    ebp
  4095e4:	cmc    
  4095e5:	jbe    0x4095d9
  4095e7:	push   cs
  4095e8:	dec    esp
  4095e9:	xchg   BYTE PTR ds:0x12b02186,cl
  4095ef:	out    dx,al
  4095f0:	cmp    ebp,edi
  4095f2:	in     al,dx
  4095f3:	js     0x40966e
  4095f5:	mov    gs,WORD PTR [ebx+ebx*1-0x38]
  4095f9:	and    BYTE PTR [esi],dh
  4095fb:	je     0x4095de
  4095fd:	xlat   BYTE PTR ds:[ebx]
  4095fe:	push   esi
  4095ff:	cmp    esi,DWORD PTR [ebx+eiz*8]
  409602:	test   bh,cl
  409604:	test   cl,bl
  409606:	sbb    eax,0xc8cfee8b
  40960b:	nop
  40960c:	out    0xe3,al
  40960e:	jnp    0x409647
  409610:	cli    
  409611:	sbb    eax,0x948fdc88
  409616:	aas    
  409617:	mov    eax,ds:0x8b68174
  40961c:	aas    
  40961d:	retf   
  40961e:	sub    bl,BYTE PTR [ebx]
  409620:	sub    BYTE PTR [esi-0x58],bh
  409623:	xchg   ecx,eax
  409624:	rcr    BYTE PTR [esi],1
  409626:	add    dl,BYTE PTR [esi+0x26]
  409629:	xchg   ecx,eax
  40962a:	add    bl,ah
  40962c:	push   ebp
  40962d:	int    0x94
  40962f:	mov    al,0x1c
  409631:	daa    
  409632:	add    DWORD PTR [edi+0x1a36bf17],ecx
  409638:	imul   esp,DWORD PTR [eax+0x1b],0x29
  40963c:	or     ch,BYTE PTR [ebx+0x67]
  40963f:	clc    
  409640:	std    
  409641:	mov    ds:0x5eb70d31,eax
  409646:	clc    
  409647:	inc    esp
  409648:	call   0x9985:0xb533870d
  40964f:	fwait
  409650:	and    al,0x9c
  409652:	dec    edi
  409653:	aas    
  409654:	(bad)
  409657:	ret    0xd3ff
  40965a:	mov    esi,0x2c4c23b1
  409660:	int    0xcc
  409662:	jb     0x40960c
  409664:	fnstcw WORD PTR [ecx]
  409666:	hlt    
  409667:	enter  0x88bb,0xc
  40966b:	jbe    0x409672
  40966d:	(bad)  
  40966f:	out    0xf6,eax
  409671:	shl    DWORD PTR [edx-0x19],cl
  409674:	sbb    ch,dl
  409676:	mov    ?,esp
  409678:	leave  
  409679:	fs lock (bad) 
  40967c:	push   edi
  40967d:	jmp    0x3c63:0xc1123fe1
  409684:	fdivrp st(6),st
  409686:	sahf   
  409687:	test   DWORD PTR [eax+0x5c32477a],0x78021f81
  409691:	inc    esi
  409692:	cmp    cl,dl
  409694:	lds    eax,FWORD PTR [esi-0x16]
  409697:	adc    BYTE PTR [esi-0x71aaebc4],al
  40969d:	and    esi,esi
  40969f:	mov    ds,WORD PTR [esi+0x4f]
  4096a2:	sbb    esp,DWORD PTR [esi-0xf]
  4096a5:	jmp    0x644a7f7c
  4096aa:	retf   
  4096ab:	call   0xc1f532c0
  4096b0:	out    dx,eax
  4096b1:	pop    ds
  4096b2:	xchg   ebx,eax
  4096b3:	mov    bl,0x9b
  4096b5:	ss leave 
  4096b7:	int3   
  4096b8:	pop    ss
  4096b9:	in     al,dx
  4096ba:	lods   eax,DWORD PTR ds:[esi]
  4096bb:	in     eax,dx
  4096bc:	push   esi
  4096bd:	push   ss
  4096be:	fisttp QWORD PTR [ecx]
  4096c0:	mov    ah,0xd1
  4096c2:	test   eax,0xf5490498
  4096c7:	int    0x66
  4096c9:	stos   DWORD PTR es:[edi],eax
  4096ca:	sbb    DWORD PTR [ebx-0x51],esp
  4096cd:	lods   eax,DWORD PTR ds:[esi]
  4096ce:	test   al,0xbc
  4096d0:	adc    eax,0x863f4aa4
  4096d5:	and    eax,0x280bdf4e
  4096da:	int3   
  4096db:	xlat   BYTE PTR ds:[ebx]
  4096dc:	cmp    cl,BYTE PTR [eax+0x6a552519]
  4096e2:	jb     0x4096af
  4096e4:	mov    fs,WORD PTR [eax-0x7c]
  4096e7:	mov    DWORD PTR [esi],ecx
  4096e9:	push   ss
  4096ea:	jb     0x40975f
  4096ec:	das    
  4096ed:	lea    esi,[edx]
  4096ef:	gs ror cl,cl
  4096f2:	enter  0x33ae,0x9b
  4096f6:	ffree  st(1)
  4096f8:	cmc    
  4096f9:	pop    es
  4096fa:	in     eax,dx
  4096fb:	adc    BYTE PTR [edx],ch
  4096fd:	pop    esp
  4096fe:	int    0xcf
  409700:	pop    es
  409701:	dec    edx
  409702:	xchg   edx,eax
  409703:	xchg   esi,eax
  409704:	ds sbb esp,0xffffffa6
  409708:	push   esi
  409709:	pop    ss
  40970a:	mov    al,0x4f
  40970c:	pushf  
  40970d:	enter  0x644d,0xe3
  409711:	in     eax,dx
  409712:	xchg   BYTE PTR [eax-0x71be7c65],ch
  409718:	xchg   BYTE PTR [ecx+0x38],bh
  40971b:	inc    eax
  40971c:	loopne 0x40973c
  40971e:	jae    0x409762
  409720:	push   esi
  409721:	mov    dh,BYTE PTR [edx+0x4e]
  409724:	das    
  409725:	jle    0x4096c2
  409727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409728:	sbb    BYTE PTR [ebp-0x34],0xca
  40972c:	imul   esp,DWORD PTR [esi],0xffffffe7
  40972f:	test   bh,ch
  409731:	mov    al,ds:0xaada65d0
  409736:	loopne 0x40970c
  409738:	fld    DWORD PTR [edi+eax*8]
  40973b:	lods   al,BYTE PTR ds:[esi]
  40973c:	mov    bh,bl
  40973e:	ins    BYTE PTR es:[edi],dx
  40973f:	pushf  
  409740:	push   eax
  409741:	sti    
  409742:	dec    ebp
  409743:	dec    eax
  409744:	fidiv  WORD PTR [eax-0x5b3bb3aa]
  40974a:	inc    ecx
  40974b:	out    0xa6,eax
  40974d:	pop    edx
  40974e:	lods   al,BYTE PTR ds:[esi]
  40974f:	xor    dh,al
  409751:	nop
  409752:	and    BYTE PTR [ecx+0x651ae5ad],ah
  409758:	iret   
  409759:	ds test al,0x24
  40975c:	xor    bl,cl
  40975e:	gs add eax,0x30c398fa
  409764:	add    DWORD PTR [edi],edi
  409766:	mov    ch,0xfc
  409768:	add    BYTE PTR [edx],0x6f
  40976b:	xchg   edx,eax
  40976c:	fmul   DWORD PTR [edx]
  40976e:	mov    eax,ds:0xb16379f
  409773:	push   0x62
  409775:	(bad)  
  409776:	lock or al,bl
  409779:	(bad)  
  40977a:	(bad)  
  40977b:	lock xchg esp,eax
  40977d:	pop    ss
  40977e:	shl    BYTE PTR [esi-0x47],1
  409781:	imul   ecx,DWORD PTR [esi+0x47],0xffffffcf
  409785:	out    0x92,al
  409787:	mov    ebx,0x4402342a
  40978c:	dec    edx
  40978d:	mov    eax,ds:0x7d7c139d
  409792:	neg    DWORD PTR [edi+0x3c]
  409795:	or     al,0x36
  409797:	stos   BYTE PTR es:[edi],al
  409798:	out    dx,al
  409799:	sbb    eax,0xb0e82053
  40979e:	mov    ?,WORD PTR [ebp+0x6004215e]
  4097a4:	aam    0xe6
  4097a6:	or     eax,DWORD PTR [ebp+0x1b240d3d]
  4097ac:	mov    esp,0xbb5341b1
  4097b1:	je     0x4097c8
  4097b3:	fwait
  4097b4:	jmp    0x4871a9f7
  4097b9:	sub    eax,0x690afbdd
  4097be:	lock retf 0xbac6
  4097c2:	fmul   QWORD PTR [ebx-0x26f122c1]
  4097c8:	mov    ah,0x5e
  4097ca:	test   DWORD PTR [edx+0x40],edi
  4097cd:	cmp    al,BYTE PTR [eax+edx*4-0xaf87f90]
  4097d4:	push   eax
  4097d5:	pop    eax
  4097d6:	(bad)  
  4097d7:	jno    0x409767
  4097d9:	xor    eax,DWORD PTR [edx-0x3c4dd519]
  4097df:	mov    ebp,0xde3b987b
  4097e4:	add    eax,0xe0ce13cb
  4097e9:	pop    ecx
  4097ea:	(bad)  
  4097eb:	pop    ds
  4097ec:	aas    
  4097ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097ee:	daa    
  4097ef:	in     al,0x7e
  4097f1:	imul   eax,DWORD PTR [eax],0xffffff89
  4097f4:	pusha  
  4097f5:	jae    0x409874
  4097f7:	xchg   edx,esp
  4097f9:	stos   DWORD PTR es:[edi],eax
  4097fa:	sbb    al,0xf9
  4097fc:	fmulp  st(3),st
  4097fe:	cmp    DWORD PTR [edi],esp
  409800:	mov    dh,0x45
  409802:	fcomip st,st(0)
  409804:	pop    ds
  409805:	pop    eax
  409806:	shr    BYTE PTR [edi-0x474e5d5a],1
  40980c:	addr16 pop ebx
  40980e:	div    bh
  409810:	inc    esi
  409811:	or     edi,DWORD PTR [edx-0x53]
  409814:	pop    edi
  409815:	xor    BYTE PTR [eax+0x3ae58982],bl
  40981b:	adc    ebx,DWORD PTR [ecx+edi*1-0x78]
  40981f:	and    DWORD PTR [edi+0x492487a3],edi
  409825:	mov    ebp,0x682f112
  40982a:	xchg   DWORD PTR [ecx*2+0x1a975316],edi
  409831:	and    ch,BYTE PTR [ebx-0x27f1f06e]
  409837:	adc    cl,BYTE PTR [edx-0x4d963cca]
  40983d:	lock movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  409840:	inc    esp
  409841:	xor    ebp,edx
  409843:	lea    edi,[esi+ebx*2]
  409846:	mov    ah,ah
  409848:	ret    0x49d3
  40984b:	stos   BYTE PTR es:[edi],al
  40984c:	xor    al,0x7
  40984e:	idiv   esp
  409850:	fdivr  st(1),st
  409852:	sbb    DWORD PTR [esi],edi
  409854:	scas   al,BYTE PTR es:[edi]
  409855:	cmp    DWORD PTR [eax+0x64],esp
  409858:	int3   
  409859:	inc    eax
  40985a:	fwait
  40985b:	int3   
  40985c:	shl    DWORD PTR fs:[eax-0x1c],cl
  409860:	(bad)  
  409861:	ror    BYTE PTR [edi+0x18],1
  409864:	or     BYTE PTR [esi+0xc],0xf2
  409868:	cdq    
  409869:	push   0xffffffd4
  40986b:	jle    0x40987b
  40986d:	cmp    DWORD PTR [ebx-0x7ae93f3c],ebp
  409873:	fbld   TBYTE PTR [edx+0x7887910c]
  409879:	push   ebp
  40987a:	stos   DWORD PTR es:[edi],eax
  40987b:	xchg   ecx,eax
  40987c:	mov    edi,0xffc0994c
  409881:	xchg   ebx,eax
  409882:	sbb    DWORD PTR [edx],0xbe660f1
  409888:	push   es
  409889:	mov    DWORD PTR [edi],esi
  40988b:	dec    edx
  40988c:	out    dx,eax
  40988d:	xchg   edi,eax
  40988e:	sbb    eax,DWORD PTR [edi+0x6d813175]
  409894:	out    dx,eax
  409895:	call   0x7a3ab63e
  40989a:	push   es
  40989b:	fwait
  40989c:	loopne 0x40990b
  40989e:	out    dx,al
  40989f:	cmp    DWORD PTR [esi+0x334b04a3],ecx
  4098a5:	dec    esp
  4098a6:	scas   al,BYTE PTR es:[edi]
  4098a7:	call   0x8176:0x3616d66f
  4098ae:	or     cl,cl
  4098b0:	sub    ch,BYTE PTR [ebp-0x58]
  4098b3:	nop
  4098b4:	mov    ebp,0xc2c9cb04
  4098b9:	ss gs ja 0x40988c
  4098bd:	pushf  
  4098be:	xor    BYTE PTR [eax],al
  4098c0:	outs   dx,BYTE PTR ds:[esi]
  4098c1:	cwde   
  4098c2:	ficom  WORD PTR [edx]
  4098c4:	xchg   BYTE PTR [eax-0x6d],dh
  4098c7:	push   0x54
  4098c9:	popf   
  4098ca:	sub    DWORD PTR [ebx+eiz*8+0x2e],ebp
  4098ce:	call   0x2050:0x963739fc
  4098d5:	lods   al,BYTE PTR ds:[esi]
  4098d6:	(bad)  
  4098d7:	cld    
  4098d8:	outs   dx,BYTE PTR ds:[esi]
  4098d9:	mov    eax,ds:0xe06945e6
  4098de:	jmp    0x409906
  4098e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098e1:	test   DWORD PTR [esi+0x564a634f],eax
  4098e7:	jbe    0x4098a0
  4098e9:	mov    dh,ah
  4098eb:	call   0xa8931778
  4098f0:	fidivr WORD PTR [edi+eax*2-0x42]
  4098f4:	fsub   st,st(3)
  4098f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098f7:	scas   eax,DWORD PTR es:[edi]
  4098f8:	adc    al,0xa2
  4098fa:	or     edx,edi
  4098fc:	int    0x97
  4098fe:	jno    0x4098ea
  409900:	lods   al,BYTE PTR ds:[esi]
  409901:	add    al,0x81
  409903:	ret    
  409904:	pop    edi
  409905:	sbb    eax,0x4d7bc93f
  40990a:	ins    DWORD PTR es:[edi],dx
  40990b:	xchg   BYTE PTR [ebp-0x27bb3c4c],bh
  409911:	sub    BYTE PTR [ebp-0x6f],ah
  409914:	push   esp
  409915:	adc    cl,BYTE PTR [ebp+edi*4+0x26]
  409919:	adc    al,bl
  40991b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40991c:	sbb    al,BYTE PTR [eax]
  40991e:	push   ebx
  40991f:	fdivr  QWORD PTR [ebx+0x1139401f]
  409925:	sti    
  409926:	neg    BYTE PTR fs:[ecx-0x6e7050c7]
  40992d:	inc    ebx
  40992e:	sub    BYTE PTR [edx-0x243ba09a],0x1d
  409935:	and    al,0x10
  409937:	clc    
  409938:	test   BYTE PTR [esi],ch
  40993a:	pop    ecx
  40993b:	pop    ebp
  40993c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40993d:	jmp    0x409918
  40993f:	ret    0x653a
  409942:	outs   dx,DWORD PTR ds:[esi]
  409943:	retf   0x648
  409946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409947:	jmp    0x40998b
  409949:	shr    DWORD PTR [eax],1
  40994b:	call   0xc024:0x322d2b77
  409952:	enter  0x9b8f,0xdc
  409956:	fldcw  WORD PTR [ebp+esi*2+0x7df0c0d4]
  40995d:	test   eax,0x9033a580
  409962:	ret    0x6750
  409965:	push   es
  409966:	mov    ebp,0x69c03136
  40996b:	arpl   WORD PTR [eax+0x39ea709f],bp
  409971:	es aaa 
  409973:	mov    ds:0xbeec9591,al
  409978:	jl     0x40991c
  40997a:	aad    0x9e
  40997c:	xchg   esi,eax
  40997d:	and    cl,BYTE PTR [edx-0x77f5250d]
  409983:	retf   
  409984:	out    dx,eax
  409985:	or     DWORD PTR [esi+0x6f49f37f],ecx
  40998b:	bound  ecx,QWORD PTR [eax]
  40998d:	bound  esi,QWORD PTR [esi]
  40998f:	fisttp WORD PTR [ebx-0x7d]
  409992:	or     DWORD PTR [esi],edi
  409994:	js     0x40997a
  409996:	loopne 0x40999e
  409998:	in     al,dx
  409999:	mov    BYTE PTR [ecx-0x55],bh
  40999c:	inc    esp
  40999d:	repz jno 0x409a15
  4099a0:	loopne 0x409a17
  4099a2:	mov    dl,0xe5
  4099a4:	or     ah,cl
  4099a6:	mov    edx,DWORD PTR [edx+0x0]
  4099a9:	outs   dx,BYTE PTR ds:[esi]
  4099aa:	iret   
  4099ab:	add    dl,bh
  4099ad:	stos   BYTE PTR es:[edi],al
  4099ae:	fdiv   QWORD PTR [esi+0x31]
  4099b1:	xchg   ecx,eax
  4099b2:	xlat   BYTE PTR ds:[ebx]
  4099b3:	add    eax,0xbad12588
  4099b8:	mov    ss,edi
  4099ba:	fidivr DWORD PTR [edx+0x1303f7a2]
  4099c0:	add    al,0x42
  4099c2:	(bad)  
  4099c3:	jl     0x40996f
  4099c5:	xor    eax,0xcaac6bf7
  4099ca:	xor    dl,BYTE PTR [edi+0xb3a79e2]
  4099d0:	jg     0x409979
  4099d2:	loope  0x4099e0
  4099d4:	inc    ebx
  4099d5:	jmp    0x372e:0x32301a9b
  4099dc:	ss cli 
  4099de:	rcr    DWORD PTR [edx-0x1a],1
  4099e1:	(bad)  
  4099e2:	mov    eax,0xad45b138
  4099e7:	mov    dl,BYTE PTR [esi-0x7d6f5c81]
  4099ed:	nop
  4099ee:	dec    esi
  4099ef:	xchg   ecx,eax
  4099f0:	data16 div BYTE PTR [edx-0x26d742e4]
  4099f7:	inc    edx
  4099f8:	das    
  4099f9:	mov    gs,ecx
  4099fb:	add    al,0xba
  4099fd:	out    0xf3,eax
  4099ff:	add    DWORD PTR [edx+0x5e],esi
  409a02:	inc    esp
  409a03:	add    eax,0x402840ce
  409a08:	loop   0x4099c1
  409a0a:	adc    eax,0x46b872e0
  409a0f:	in     eax,0x3d
  409a11:	push   ebx
  409a12:	outs   dx,BYTE PTR ds:[esi]
  409a13:	and    ebp,DWORD PTR [eax+0x7f6029f5]
  409a19:	dec    esp
  409a1a:	test   BYTE PTR [edi+0x2fea6d43],dl
  409a20:	xchg   esi,eax
  409a21:	fdiv   QWORD PTR [ebp+0x509edfea]
  409a27:	add    cl,ah
  409a29:	in     eax,0x60
  409a2b:	mov    esp,0xc870d7ae
  409a30:	or     ecx,DWORD PTR [ecx+ebp*8-0x5c2ce3ec]
  409a37:	loope  0x409a0b
  409a39:	mov    ?,WORD PTR [esi-0x5e]
  409a3c:	sbb    DWORD PTR [edx-0x3bd994a9],esp
  409a42:	repnz std 
  409a44:	sbb    al,0x8b
  409a46:	test   DWORD PTR [edi+0x77823815],eax
  409a4c:	test   eax,0xf4313023
  409a51:	pop    ebp
  409a52:	retf   
  409a53:	or     BYTE PTR ds:0x82430413,al
  409a59:	push   es
  409a5a:	push   eax
  409a5b:	popf   
  409a5c:	fsubr  st(0),st
  409a5e:	dec    ebx
  409a5f:	cmp    eax,0x59793cde
  409a64:	test   eax,0xecde9986
  409a69:	mov    ch,0xa9
  409a6b:	sti    
  409a6c:	pop    ebx
  409a6d:	test   dh,dh
  409a6f:	dec    edx
  409a70:	xlat   BYTE PTR ds:[ebx]
  409a71:	aas    
  409a72:	xor    eax,0xa312722b
  409a77:	jl     0x409ae6
  409a79:	jns    0x409a7e
  409a7b:	mov    ds:0xa17fbd8b,al
  409a80:	nop
  409a81:	xor    eax,0x6275223c
  409a86:	fstp   st(2)
  409a88:	in     ax,dx
  409a8a:	xchg   esi,eax
  409a8b:	push   0xa41d2e66
  409a90:	icebp  
  409a91:	sbb    BYTE PTR [edi],al
  409a93:	push   ebp
  409a94:	shr    DWORD PTR [edi],cl
  409a96:	sbb    DWORD PTR [ebp+0x48b77163],ecx
  409a9c:	mov    dl,0x1e
  409a9e:	pop    ss
  409a9f:	lock imul ecx,DWORD PTR [edi+0x788c2668],0x450c27a8
  409aaa:	pop    ecx
  409aab:	daa    
  409aac:	inc    ebp
  409aad:	ret    
  409aae:	jecxz  0x409a72
  409ab0:	nop
  409ab1:	xchg   edi,eax
  409ab2:	mov    ebp,0x1c2b43a
  409ab7:	fsub   QWORD PTR [edi]
  409ab9:	xorps  xmm2,xmm0
  409abc:	jge    0x409b02
  409abe:	test   DWORD PTR [ecx],eax
  409ac0:	aam    0xd1
  409ac2:	jl     0x409ab9
  409ac4:	fild   WORD PTR [edx-0x6aede6ac]
  409aca:	dec    edi
  409acb:	lahf   
  409acc:	sub    BYTE PTR ds:0x6d311fb4,al
  409ad2:	sbb    al,0x71
  409ad4:	push   ss
  409ad5:	xor    al,0x12
  409ad7:	mov    dh,0xcc
  409ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ada:	push   cs
  409adb:	mov    eax,0xb6cd7957
  409ae0:	aad    0x88
  409ae2:	std    
  409ae3:	iret   
  409ae4:	in     al,dx
  409ae5:	inc    ecx
  409ae6:	je     0x409b51
  409ae8:	loop   0x409b67
  409aea:	addr16 (bad) 
  409aec:	jae    0x409a70
  409aee:	pop    es
  409aef:	ror    bl,1
  409af1:	xchg   ebx,eax
  409af2:	pop    edx
  409af3:	test   BYTE PTR [ecx-0x78],ch
  409af6:	gs cs inc eax
  409af9:	xor    eax,0xafb5dcf8
  409afe:	xchg   esi,eax
  409aff:	rcr    DWORD PTR [edi-0x2188dad],0x4f
  409b06:	sub    eax,0xa97ef0b4
  409b0b:	cs scas al,BYTE PTR es:[edi]
  409b0d:	das    
  409b0e:	mov    ebx,0x6ea31d3e
  409b13:	pop    es
  409b14:	xchg   cx,ax
  409b16:	xor    eax,0xa0e9d568
  409b1b:	mov    ch,0x78
  409b1d:	sti    
  409b1e:	lock fcmovbe st,st(7)
  409b21:	ja     0x409b7b
  409b23:	loopne 0x409b29
  409b25:	mov    WORD PTR ss:[ebx-0x6d],?
  409b29:	mov    ebp,0x9173d57b
  409b2e:	(bad)  
  409b2f:	mov    dh,0xa2
  409b31:	jno    0x409b3c
  409b33:	hlt    
  409b34:	loope  0x409baa
  409b36:	xchg   ecx,eax
  409b37:	mov    ecx,0x6c68b589
  409b3c:	test   DWORD PTR [ecx],edi
  409b3e:	mov    cl,0xdc
  409b40:	xchg   edi,eax
  409b41:	stc    
  409b42:	mov    ebp,DWORD PTR ds:0xfd3b3e50
  409b48:	fstp   DWORD PTR ds:0x473b8e4
  409b4e:	pop    ebp
  409b4f:	dec    ebp
  409b50:	js     0x409b48
  409b52:	sahf   
  409b53:	adc    eax,esp
  409b55:	xor    al,dl
  409b57:	jge    0x409b1a
  409b59:	add    ah,bl
  409b5b:	xlat   BYTE PTR ds:[ebx]
  409b5c:	popa   
  409b5d:	sub    DWORD PTR [edi],esi
  409b5f:	es xchg edx,eax
  409b61:	hlt    
  409b62:	adc    cl,BYTE PTR [edx]
  409b64:	test   BYTE PTR [edx-0x73],dl
  409b67:	jmp    FWORD PTR [edx+0x48]
  409b6a:	push   edx
  409b6b:	call   0x2692:0x43841065
  409b72:	cs jb  0x409b31
  409b75:	mov    edx,0xfc48cf29
  409b7a:	neg    DWORD PTR [ebp+0x2a]
  409b7d:	rcl    al,cl
  409b7f:	pop    esi
  409b80:	pop    es
  409b81:	popa   
  409b82:	ror    DWORD PTR [edi-0x6c],0xc6
  409b86:	stos   DWORD PTR es:[edi],eax
  409b87:	pop    DWORD PTR [ebx-0x2d]
  409b8a:	loop   0x409b1b
  409b8c:	jl     0x409bc6
  409b8e:	fimul  WORD PTR [eax]
  409b90:	loop   0x409b53
  409b92:	fstp   DWORD PTR [ebp+0x6d]
  409b95:	sub    al,0xc0
  409b97:	lock add eax,0x4034462e
  409b9d:	inc    esi
  409b9e:	(bad)  
  409b9f:	scas   eax,DWORD PTR es:[edi]
  409ba0:	rcl    ebp,0x37
  409ba3:	cdq    
  409ba4:	and    DWORD PTR [eax],ebp
  409ba6:	lahf   
  409ba7:	push   ebp
  409ba8:	mov    bh,0xcb
  409baa:	jnp    0x409bb9
  409bac:	int    0x20
  409bae:	cmp    BYTE PTR [ebp-0x1338e88b],bl
  409bb4:	in     al,0x89
  409bb6:	mov    esi,ds
  409bb8:	fistp  QWORD PTR [edi]
  409bba:	xchg   DWORD PTR [ebx-0xfa71b03],eax
  409bc0:	or     BYTE PTR [ecx],dl
  409bc2:	mov    ch,0xfd
  409bc4:	mov    ?,WORD PTR [ecx]
  409bc6:	popf   
  409bc7:	xchg   DWORD PTR [edi+0x12],ecx
  409bca:	jne    0x409bb8
  409bcc:	in     al,dx
  409bcd:	push   esi
  409bce:	jne    0x409ba7
  409bd0:	pop    ss
  409bd1:	stos   DWORD PTR es:[edi],eax
  409bd2:	mov    eax,0x8d08b0fc
  409bd8:	shl    dl,0xf3
  409bdb:	aam    0xd8
  409bdd:	mov    eax,0xc0e1cc08
  409be2:	jns    0x409b72
  409be4:	(bad)  [ecx]
  409be6:	mov    ds:0x3fbaa6d1,eax
  409beb:	(bad)  
  409bec:	aad    0x12
  409bee:	pop    esp
  409bef:	mov    al,ds:0x2902035e
  409bf4:	leave  
  409bf5:	mov    cl,0x4f
  409bf7:	or     ecx,0xffffffcb
  409bfa:	and    al,0xa4
  409bfc:	jns    0x409ba3
  409bfe:	and    al,0xd6
  409c00:	xor    eax,0x528b1c44
  409c05:	(bad)  [eax]
  409c07:	aad    0x4e
  409c09:	scas   al,BYTE PTR es:[edi]
  409c0a:	jecxz  0x409ba1
  409c0c:	int    0xe6
  409c0e:	push   eax
  409c0f:	push   esi
  409c10:	(bad)  
  409c11:	iret   
  409c12:	out    0xaa,al
  409c14:	in     al,dx
  409c15:	xchg   edi,eax
  409c16:	pop    eax
  409c17:	sub    edi,DWORD PTR [ecx]
  409c19:	(bad)  
  409c1a:	inc    esi
  409c1b:	mov    esi,0xdc4e1876
  409c20:	gs mov bl,0x4
  409c23:	adc    ah,dh
  409c25:	std    
  409c26:	lds    esp,FWORD PTR [eax]
  409c28:	pop    ebp
  409c29:	int    0x43
  409c2b:	mov    ds:0xd496ad6d,eax
  409c30:	mov    edx,0xf62a2c7
  409c35:	sub    BYTE PTR [edi-0x45b85464],cl
  409c3b:	arpl   WORD PTR [eax-0x5c],di
  409c3e:	or     al,0x2
  409c40:	xor    esp,esp
  409c42:	xchg   ecx,eax
  409c43:	sahf   
  409c44:	not    ebx
  409c46:	aas    
  409c47:	push   ecx
  409c48:	push   cs
  409c49:	scas   eax,DWORD PTR es:[edi]
  409c4a:	outs   dx,DWORD PTR ds:[esi]
  409c4b:	enter  0x9ecb,0x52
  409c4f:	and    DWORD PTR [esi+0x328dcdff],eax
  409c55:	push   ss
  409c56:	rcl    BYTE PTR [eax+ebp*8+0x687e15ae],cl
  409c5d:	stos   DWORD PTR es:[edi],eax
  409c5e:	adc    al,0x59
  409c60:	aam    0xde
  409c62:	ins    DWORD PTR es:[edi],dx
  409c63:	pop    esp
  409c64:	outs   dx,DWORD PTR ds:[esi]
  409c65:	ins    DWORD PTR es:[edi],dx
  409c66:	mov    al,ds:0x6fa3b34
  409c6b:	mov    BYTE PTR ds:0x3545571e,ch
  409c71:	push   ebx
  409c72:	inc    ecx
  409c73:	aas    
  409c74:	or     DWORD PTR [eax+ecx*4+0x60],edx
  409c78:	pop    ecx
  409c79:	jge    0x409c8e
  409c7b:	in     eax,0x49
  409c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c7e:	push   edx
  409c7f:	test   DWORD PTR [esi-0x42bfc196],ebx
  409c85:	inc    esp
  409c86:	mov    ds:0x13a70cca,al
  409c8b:	ror    al,cl
  409c8d:	mov    cl,BYTE PTR [edi+0x16f8e93f]
  409c93:	jb     0x409c88
  409c95:	outs   dx,DWORD PTR ds:[esi]
  409c96:	adc    BYTE PTR [esi+eiz*2],al
  409c99:	or     dh,ah
  409c9b:	in     eax,dx
  409c9c:	aam    0xbd
  409c9e:	ja     0x409c24
  409ca0:	adc    DWORD PTR [esi+0x5d],edx
  409ca3:	add    BYTE PTR [eax],0xe
  409ca6:	sar    DWORD PTR [esi],0xd5
  409ca9:	jae    0x409c5b
  409cab:	xor    esi,esp
  409cad:	hlt    
  409cae:	pop    es
  409caf:	fisttp DWORD PTR [edi-0x41]
  409cb2:	jle    0x409c79
  409cb4:	mov    eax,0xf74d3750
  409cb9:	cmp    eax,0xcea780a7
  409cbe:	push   edx
  409cbf:	mov    ds:0xbe4eed70,al
  409cc4:	loop   0x409c6c
  409cc6:	ja     0x409cf2
  409cc8:	inc    ebx
  409cc9:	and    esp,esi
  409ccb:	mov    edi,0xb0b00f2f
  409cd0:	dec    edi
  409cd1:	xor    esp,DWORD PTR [ecx+ebp*4-0x29]
  409cd5:	(bad)  
  409cd6:	(bad)  
  409cd7:	arpl   WORD PTR ds:0x6bfe1ae4,cx
  409cdd:	xchg   ebp,eax
  409cde:	mov    eax,ds:0x750a1ff3
  409ce3:	int3   
  409ce4:	mov    bl,0xaf
  409ce6:	add    DWORD PTR [edi],ebx
  409ce8:	push   ds
  409ce9:	call   0x76e4:0x258b1e1f
  409cf0:	mov    al,cl
  409cf2:	adc    eax,DWORD PTR [eax+edi*8-0x4c657735]
  409cf9:	add    ebx,esi
  409cfb:	jge    0x409d54
  409cfd:	test   ebp,eax
  409cff:	rol    cl,1
  409d01:	add    al,0x65
  409d03:	mov    edx,0xe9b003f9
  409d08:	cs pusha 
  409d0a:	iret   
  409d0b:	(bad)  
  409d0c:	or     eax,0x45245508
  409d11:	loop   0x409d1c
  409d13:	sti    
  409d14:	enter  0xd515,0x66
  409d18:	push   esp
  409d19:	out    dx,al
  409d1a:	mov    WORD PTR [ecx+eax*4-0x73],cs
  409d1e:	mov    ebp,0xce894692
  409d23:	or     eax,0xd81e3959
  409d28:	ret    0xafae
  409d2b:	or     ch,BYTE PTR [edi+ebx*2+0x76]
  409d2f:	mov    WORD PTR [eax-0x66],ds
  409d32:	stc    
  409d33:	xchg   BYTE PTR [ecx+0x4a],cl
  409d36:	add    al,0x3e
  409d38:	fisttp QWORD PTR [ebp+0x35b58268]
  409d3e:	and    al,0x27
  409d40:	pop    esp
  409d41:	mov    WORD PTR [ecx-0x13],es
  409d44:	mov    WORD PTR [ebp-0x55],ds
  409d47:	pop    edi
  409d48:	je     0x409d3a
  409d4a:	repz out dx,al
  409d4c:	xor    BYTE PTR [ecx-0x67],cl
  409d4f:	clc    
  409d50:	dec    ebp
  409d51:	adc    dh,BYTE PTR [esp+ebp*2+0x5]
  409d55:	or     DWORD PTR [edi-0x16a8c468],eax
  409d5b:	push   0x71a815f0
  409d60:	retf   0xa708
  409d63:	jmp    0x7a7326bf
  409d68:	push   edi
  409d69:	adc    al,0xea
  409d6b:	jl     0x409d56
  409d6d:	mov    ah,0x2d
  409d6f:	xor    dl,ah
  409d71:	sti    
  409d72:	cld    
  409d73:	add    BYTE PTR [eax-0xf],bl
  409d76:	in     eax,0xb3
  409d78:	pop    edx
  409d79:	mov    dh,al
  409d7b:	ds jl  0x409ded
  409d7e:	test   al,0xce
  409d80:	jo     0x409d92
  409d82:	or     al,BYTE PTR [ecx+0x671c1634]
  409d88:	popf   
  409d89:	inc    edi
  409d8a:	adc    ebp,DWORD PTR [ebp+0x1b]
  409d8d:	cmp    BYTE PTR [esi+0x6c],bh
  409d90:	sub    dl,BYTE PTR [ebx-0x15]
  409d93:	push   ecx
  409d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d95:	cmp    DWORD PTR [esi],esi
  409d97:	repz push ecx
  409d99:	inc    edi
  409d9a:	dec    ebp
  409d9b:	or     ah,BYTE PTR [edx-0x6ee483e9]
  409da1:	sar    edx,0x6b
  409da4:	pop    eax
  409da5:	or     dl,BYTE PTR [ecx-0xdca6723]
  409dab:	jl     0x409dac
  409dad:	xchg   esp,eax
  409dae:	stos   BYTE PTR es:[edi],al
  409daf:	xlat   BYTE PTR ds:[ebx]
  409db0:	(bad)  
  409db1:	loopne 0x409d59
  409db3:	cmp    eax,0x2612862d
  409db8:	xchg   esi,eax
  409db9:	ja     0x409d83
  409dbb:	retf   
  409dbc:	pop    esi
  409dbd:	mov    cl,0xc0
  409dbf:	aam    0xe2
  409dc1:	xor    WORD PTR ds:0xc328ad1c,sp
  409dc8:	pusha  
  409dc9:	dec    ecx
  409dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dcb:	add    dl,BYTE PTR [edx+0x626e75d6]
  409dd1:	test   eax,0x49e75f1b
  409dd6:	ins    BYTE PTR es:[edi],dx
  409dd7:	sub    BYTE PTR [edx-0x23],dl
  409dda:	ins    DWORD PTR es:[edi],dx
  409ddb:	add    al,dl
  409ddd:	xchg   esp,eax
  409dde:	pop    ds
  409ddf:	jge    0x409df3
  409de1:	mov    cl,0x6b
  409de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de4:	adc    BYTE PTR [esi+0x71],0x61
  409de8:	mov    dl,0x24
  409dea:	mov    ah,0xe4
  409dec:	cdq    
  409ded:	fimul  DWORD PTR [edx-0x6c]
  409df0:	pop    edi
  409df1:	aas    
  409df2:	fdivr  QWORD PTR [esp+eiz*4+0x5c]
  409df6:	retf   
  409df7:	and    eax,0xa5774078
  409dfc:	mov    cl,0xe4
  409dfe:	hlt    
  409dff:	xor    al,0x9e
  409e01:	mov    ebp,0x8460df03
  409e06:	jmp    0x409e3a
  409e08:	xor    esp,DWORD PTR [edi+0x15f79bc6]
  409e0e:	fadd   DWORD PTR [ebx-0x5da17641]
  409e14:	inc    ebx
  409e15:	push   cs
  409e16:	scas   al,BYTE PTR es:[edi]
  409e17:	pop    esp
  409e18:	test   eax,0xc7996a93
  409e1d:	and    edx,edi
  409e1f:	fwait
  409e20:	mov    es,WORD PTR [esi+0x7668990f]
  409e26:	outs   dx,BYTE PTR ds:[esi]
  409e27:	fsub   st(4),st
  409e29:	and    dh,ah
  409e2b:	dec    ebp
  409e2c:	enter  0x7d8e,0x61
  409e30:	sti    
  409e31:	dec    ebp
  409e32:	cmp    BYTE PTR ds:0x8288cda3,cl
  409e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e39:	mov    cs,WORD PTR [edx]
  409e3b:	mov    eax,ds:0x5af67717
  409e40:	pop    esi
  409e41:	push   ebx
  409e42:	mov    dh,BYTE PTR [eax-0x5d14dc25]
  409e48:	and    BYTE PTR [ebx+edi*1-0x64],0x6c
  409e4d:	pop    edi
  409e4e:	xor    al,0x9d
  409e50:	cdq    
  409e51:	mov    eax,ds:0xc0bd9809
  409e56:	ret    
  409e57:	call   0x69ca5d7d
  409e5c:	xor    ecx,ebx
  409e5e:	push   cs
  409e5f:	xchg   edx,eax
  409e60:	(bad)  
  409e61:	hlt    
  409e62:	pop    es
  409e63:	dec    edi
  409e64:	inc    edx
  409e65:	jge    0x409e6a
  409e67:	stc    
  409e68:	fnstenv [eax+0x43a23a99]
  409e6e:	aam    0x8a
  409e70:	int    0x13
  409e72:	adc    BYTE PTR [esp+ebx*8],bh
  409e75:	pushf  
  409e76:	mov    dl,0x16
  409e78:	pushf  
  409e79:	lds    esp,FWORD PTR [eax+0x34]
  409e7c:	inc    ebx
  409e7d:	cmp    BYTE PTR [edx],bh
  409e7f:	out    0x2d,eax
  409e81:	inc    esp
  409e82:	xchg   al,ch
  409e84:	lahf   
  409e85:	jmp    0x2747e3d1
  409e8a:	dec    ebx
  409e8b:	xchg   ecx,eax
  409e8c:	fs dec ebx
  409e8e:	in     al,0x1
  409e90:	(bad)  
  409e91:	in     eax,dx
  409e92:	mov    ecx,0x250c9961
  409e97:	fs inc edi
  409e99:	pop    DWORD PTR ds:0x876d559a
  409e9f:	inc    esp
  409ea0:	xor    al,0x3b
  409ea2:	pop    ebp
  409ea3:	jae    0x409ebc
  409ea5:	add    esi,DWORD PTR [edi-0x7be32851]
  409eab:	inc    ebp
  409eac:	(bad)  
  409ead:	jl     0x409e7e
  409eaf:	jg     0x409e65
  409eb1:	mov    eax,0x858bdf12
  409eb6:	pop    es
  409eb7:	je     0x409ed8
  409eb9:	jmp    0xa688:0xd84429b4
  409ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ec1:	clc    
  409ec2:	int    0xbc
  409ec4:	pop    edi
  409ec5:	out    dx,eax
  409ec6:	mov    ds:0x31c6540f,al
  409ecb:	and    al,BYTE PTR [edi+esi*1-0x53ec5553]
  409ed2:	ficomp DWORD PTR [eax+0x68]
  409ed5:	loop   0x409e94
  409ed7:	out    dx,al
  409ed8:	daa    
  409ed9:	(bad)  
  409eda:	and    ah,BYTE PTR [edi+0x5c]
  409edd:	lahf   
  409ede:	jmp    0x3c07:0x3c11d66a
  409ee5:	test   al,0x9d
  409ee7:	push   edi
  409ee8:	inc    edx
  409ee9:	std    
  409eea:	sbb    DWORD PTR [esi-0x5d9910dc],esp
  409ef0:	pop    ebx
  409ef1:	pop    ebx
  409ef2:	fcomp  DWORD PTR [eax-0x7f5b854e]
  409ef8:	mov    edx,0x894313f2
  409efd:	outs   dx,BYTE PTR ds:[esi]
  409efe:	or     eax,DWORD PTR [ecx-0x3e44f3c0]
  409f04:	test   DWORD PTR [edx],esi
  409f06:	call   0x935e2aae
  409f0b:	(bad)  
  409f0c:	xchg   ebp,eax
  409f0d:	xchg   ebx,eax
  409f0e:	scas   al,BYTE PTR es:[edi]
  409f0f:	pop    ebx
  409f10:	pop    ebx
  409f11:	call   0x4ac2ed77
  409f16:	lods   eax,DWORD PTR ds:[esi]
  409f17:	dec    ecx
  409f18:	pop    edi
  409f19:	mov    eax,0xda308804
  409f1e:	popa   
  409f1f:	mov    esp,0xcaad3408
  409f24:	push   esp
  409f25:	loopne 0x409f15
  409f27:	ins    BYTE PTR es:[edi],dx
  409f28:	cmp    eax,0x69d0ebc4
  409f2d:	or     DWORD PTR [ecx+0x69eb134f],ebp
  409f33:	add    al,0xc1
  409f35:	lock fidiv WORD PTR [ebx-0x2e]
  409f39:	in     eax,dx
  409f3a:	in     al,dx
  409f3b:	inc    esi
  409f3c:	xchg   esp,eax
  409f3d:	mul    ebx
  409f3f:	push   cs
  409f40:	push   esi
  409f41:	(bad)  
  409f42:	mov    ch,0xbd
  409f44:	add    eax,0x705de03c
  409f49:	clc    
  409f4a:	push   ebx
  409f4b:	and    DWORD PTR ds:0x4bf678a7,eax
  409f51:	mov    ebp,0x4cf26874
  409f56:	mov    al,0x79
  409f58:	mov    bh,0x4a
  409f5a:	ss loopne 0x409f65
  409f5d:	std    
  409f5e:	mov    ds:0xb32e78e7,al
  409f63:	daa    
  409f64:	or     eax,0xff81e383
  409f69:	dec    edi
  409f6a:	jmp    DWORD PTR [ebp+0x513a763f]
  409f70:	je     0x409f0c
  409f72:	call   FWORD PTR [ecx-0x36]
  409f75:	in     al,dx
  409f76:	lea    ebp,[edi+0x70b333c]
  409f7c:	xor    esp,0x611444e4
  409f82:	in     eax,0x1
  409f84:	push   edx
  409f85:	or     al,ah
  409f87:	lahf   
  409f88:	push   esi
  409f89:	cs es mov cl,0x5f
  409f8d:	push   ss
  409f8e:	rcl    al,1
  409f90:	fcmovnbe st,st(0)
  409f92:	scas   eax,DWORD PTR es:[edi]
  409f93:	aam    0x2
  409f95:	adc    dh,ch
  409f97:	adc    BYTE PTR [edx+eax*1],dl
  409f9a:	sub    dh,BYTE PTR [ebx+edi*2]
  409f9d:	rcr    ch,1
  409f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fa0:	sbb    al,BYTE PTR [edx]
  409fa2:	push   es
  409fa3:	popf   
  409fa4:	ret    0xce80
  409fa7:	push   edx
  409fa8:	ret    0xf353
  409fab:	sbb    eax,0xc6505989
  409fb0:	fstp   st(7)
  409fb2:	jle    0x409f79
  409fb4:	enter  0xc4de,0x77
  409fb8:	cmp    BYTE PTR [ebp+0x3],cl
  409fbb:	cmp    ebp,DWORD PTR [ecx]
  409fbd:	aaa    
  409fbe:	scas   al,BYTE PTR es:[edi]
  409fbf:	aaa    
  409fc0:	cmc    
  409fc1:	push   0x6574560
  409fc6:	popa   
  409fc7:	(bad)  
  409fc9:	mov    bl,0x30
  409fcb:	sub    dh,bh
  409fcd:	dec    esp
  409fce:	int    0x39
  409fd0:	cld    
  409fd1:	or     edx,DWORD PTR ds:0xa7dc0df0
  409fd7:	test   al,0x32
  409fd9:	test   al,0x17
  409fdb:	pop    ss
  409fdc:	ficomp WORD PTR [edx+0x48]
  409fdf:	xchg   edi,eax
  409fe0:	xchg   edi,eax
  409fe1:	push   esp
  409fe2:	das    
  409fe3:	stc    
  409fe4:	fld    QWORD PTR [ebx]
  409fe6:	adc    ch,BYTE PTR [ebx+ebp*2]
  409fe9:	add    eax,edi
  409feb:	mov    ebp,0x9299b02a
  409ff0:	iret   
  409ff1:	stc    
  409ff2:	mov    ah,0x9b
  409ff4:	dec    ecx
  409ff5:	inc    esp
  409ff6:	push   0xffffffed
  409ff8:	outs   dx,BYTE PTR ds:[esi]
  409ff9:	call   0xaeb3ad99
  409ffe:	jb     0x40a07a
  40a000:	hlt    
  40a001:	push   ebp
  40a002:	sahf   
  40a003:	or     ch,BYTE PTR [edx+0x2]
  40a006:	mov    WORD PTR [edx-0x1fdf1d69],es
  40a00c:	call   0xf01fa0b4
  40a011:	xor    ax,0xf3fb
  40a015:	scas   ax,WORD PTR es:[edi]
  40a017:	scas   eax,DWORD PTR es:[edi]
  40a018:	adc    ah,BYTE PTR [ebx+0x299389e]
  40a01e:	xor    al,0xdc
  40a020:	push   ss
  40a021:	clc    
  40a022:	mov    ds:0x7d79d3fc,eax
  40a027:	das    
  40a028:	dec    eax
  40a029:	add    ebx,edi
  40a02b:	loopne 0x40a03f
  40a02d:	dec    ebp
  40a02e:	cmc    
  40a02f:	or     BYTE PTR [eax+eax*8],dh
  40a032:	inc    BYTE PTR [edi+0x1a]
  40a035:	push   edx
  40a036:	cs mov dh,0x50
  40a039:	aad    0xa9
  40a03b:	xor    ebp,DWORD PTR [edi-0x18e26a56]
  40a041:	psllq  mm5,0x2
  40a045:	jge    0x40a0b1
  40a047:	data16 mov bh,0x61
  40a04a:	push   ebp
  40a04b:	or     al,0xfe
  40a04d:	fnstsw WORD PTR [eax]
  40a04f:	sbb    ebx,esp
  40a051:	fdivr  QWORD PTR [ebp+0x5e7b51de]
  40a058:	sub    esi,ecx
  40a05a:	scas   eax,DWORD PTR es:[edi]
  40a05b:	xor    al,0xa0
  40a05d:	outs   dx,DWORD PTR ds:[esi]
  40a05e:	fisubr DWORD PTR [esi]
  40a060:	cli    
  40a061:	sub    eax,0xfdd11bcf
  40a066:	and    ebx,DWORD PTR [eax]
  40a068:	retf   0x832d
  40a06b:	test   BYTE PTR [ebx+0x61],ah
  40a06e:	mov    ds:0xe7099936,eax
  40a073:	add    cl,bl
  40a075:	retf   
  40a076:	xor    edx,esp
  40a078:	sbb    al,0xfc
  40a07a:	mov    dl,0xd1
  40a07c:	mov    DWORD PTR [eax+0x5e],eax
  40a07f:	xchg   ebx,eax
  40a080:	mov    WORD PTR [esi+0x50],ss
  40a083:	daa    
  40a084:	mov    esi,0x7de8c646
  40a089:	adc    bh,cl
  40a08b:	mov    ah,0x74
  40a08d:	jge    0x40a070
  40a08f:	mov    DWORD PTR [ebx+0x67],edx
  40a092:	fidivr DWORD PTR [ebx-0x6d2b19d1]
  40a098:	push   ebp
  40a099:	mov    eax,0xf7cf6908
  40a09e:	call   0x86c3d8d6
  40a0a3:	imul   ecx,edi,0xffffffcf
  40a0a6:	xor    esp,DWORD PTR [edi-0x6b3fa2d2]
  40a0ac:	das    
  40a0ad:	cmc    
  40a0ae:	push   0xd013346e
  40a0b3:	gs and dh,dl
  40a0b6:	clc    
  40a0b7:	jne    0x40a088
  40a0b9:	icebp  
  40a0ba:	xchg   edi,eax
  40a0bb:	int    0x9e
  40a0bd:	and    eax,0x1f1367a
  40a0c2:	pop    esi
  40a0c3:	lahf   
  40a0c4:	mov    dl,cl
  40a0c6:	inc    edi
  40a0c7:	pop    edx
  40a0c8:	pusha  
  40a0c9:	xor    cl,dl
  40a0cb:	cmp    DWORD PTR [ebp+0x36],0xe7556826
  40a0d2:	mov    ecx,0x5b50557a
  40a0d7:	cmc    
  40a0d8:	mov    ch,0x90
  40a0da:	inc    ecx
  40a0db:	sub    eax,DWORD PTR [ebx+edx*1]
  40a0de:	call   0x847e:0xc4b5ce14
  40a0e5:	dec    edi
  40a0e6:	into   
  40a0e7:	add    dh,BYTE PTR [ebx+0x10]
  40a0ea:	in     al,0xb4
  40a0ec:	ret    0x780c
  40a0ef:	pop    ecx
  40a0f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f1:	aaa    
  40a0f2:	es ret 
  40a0f4:	dec    ebp
  40a0f5:	inc    esp
  40a0f6:	ret    0x1dde
  40a0f9:	jge    0x40a0cf
  40a0fb:	or     al,0xb
  40a0fd:	shl    BYTE PTR [ebx],cl
  40a0ff:	push   cs
  40a100:	aad    0x1d
  40a102:	sbb    eax,edi
  40a104:	mov    dl,0x37
  40a106:	mov    esp,0xaa794fc8
  40a10b:	bound  edx,QWORD PTR [ecx-0xe]
  40a10e:	retf   0x208c
  40a111:	inc    edx
  40a112:	jae    0x40a0e6
  40a114:	mov    edx,0x7a004e
  40a119:	add    eax,0x8ffff3b0
  40a11e:	push   ebp
  40a11f:	bound  ecx,QWORD PTR ds:0x47a2a02a
  40a125:	sbb    eax,0xd6552687
  40a12a:	fidivr DWORD PTR ds:0xd589148f
  40a130:	std    
  40a131:	stc    
  40a132:	lds    ebp,FWORD PTR [esi]
  40a134:	jmp    FWORD PTR [ecx]
  40a136:	shl    DWORD PTR [edx+ebp*2],1
  40a139:	ja     0x40a0e7
  40a13b:	call   0xd54d:0x37f559c6
  40a142:	sub    BYTE PTR [ecx+edi*8],0x70
  40a146:	or     edi,ebp
  40a148:	ins    BYTE PTR es:[edi],dx
  40a149:	nop
  40a14a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a14b:	cli    
  40a14c:	repz push ds
  40a14e:	dec    eax
  40a14f:	fisubr DWORD PTR [esi+0x6fe2c39b]
  40a155:	push   ss
  40a156:	in     eax,dx
  40a157:	fisttp DWORD PTR [esi-0x3d]
  40a15a:	sti    
  40a15b:	jnp    0x40a12f
  40a15d:	pop    ss
  40a15e:	push   esp
  40a15f:	aas    
  40a160:	and    al,0xbb
  40a162:	pop    ebx
  40a163:	mov    ecx,0x32e17b6f
  40a168:	xchg   edi,eax
  40a169:	scas   al,BYTE PTR es:[edi]
  40a16a:	data16 icebp 
  40a16c:	das    
  40a16d:	cmp    al,0x8c
  40a16f:	add    eax,0xcc5fa7a
  40a174:	or     ecx,DWORD PTR [ebx-0x56c2d84f]
  40a17a:	mov    al,0x8b
  40a17c:	dec    ecx
  40a17d:	imul   ecx,DWORD PTR [ebx],0x72
  40a180:	xchg   BYTE PTR [ebp+edx*8-0x25],bl
  40a184:	jne    0x40a1c8
  40a186:	add    al,0x44
  40a188:	cli    
  40a189:	repz sar esp,cl
  40a18c:	xchg   esi,eax
  40a18d:	test   al,0x3c
  40a18f:	pop    edi
  40a190:	(bad)  
  40a191:	cmp    DWORD PTR [ebx],eax
  40a193:	fprem1 
  40a195:	icebp  
  40a196:	inc    esi
  40a197:	jno    0x40a1eb
  40a199:	adc    BYTE PTR [eax+edx*4-0x3e0f75ad],dl
  40a1a0:	mov    dh,ah
  40a1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a3:	mov    esi,ecx
  40a1a5:	fidivr DWORD PTR [edx-0x7f]
  40a1a8:	cmp    al,0x6d
  40a1aa:	cmp    ecx,0xaa762264
  40a1b0:	(bad)  
  40a1b1:	stc    
  40a1b2:	push   esi
  40a1b3:	out    0xc0,eax
  40a1b5:	pushf  
  40a1b6:	fidiv  WORD PTR [ebp+0x38400d4]
  40a1bc:	ja     0x40a206
  40a1be:	xchg   ebp,eax
  40a1bf:	stos   DWORD PTR es:[edi],eax
  40a1c0:	sti    
  40a1c1:	fs jbe 0x40a1be
  40a1c4:	call   0xa6b8920c
  40a1c9:	or     eax,0xda3c2f8d
  40a1ce:	xchg   esp,eax
  40a1cf:	adc    dl,0x70
  40a1d2:	outs   dx,BYTE PTR ds:[esi]
  40a1d3:	dec    esi
  40a1d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1d5:	mov    esi,0x8049c8e3
  40a1da:	or     ch,0x70
  40a1dd:	mov    esi,0x99874e81
  40a1e2:	jb     0x40a19b
  40a1e4:	addr16 pop ecx
  40a1e6:	test   DWORD PTR [ebp+0x44eede46],esp
  40a1ec:	(bad)  
  40a1ed:	and    BYTE PTR [ebx-0x3b9da73],bh
  40a1f3:	ret    
  40a1f4:	cdq    
  40a1f5:	in     eax,dx
  40a1f6:	jg     0x40a1b5
  40a1f8:	shr    ah,cl
  40a1fa:	sub    DWORD PTR [edx],0x70bcd695
  40a200:	rcr    esp,1
  40a202:	jb     0x40a1cb
  40a204:	bound  ecx,QWORD PTR [ebx+eax*2]
  40a207:	jno    0x40a25f
  40a209:	pushf  
  40a20a:	or     esi,ebx
  40a20c:	push   ecx
  40a20d:	cdq    
  40a20e:	jbe    0x40a231
  40a210:	mov    ds:0xfaf68c37,al
  40a215:	inc    eax
  40a216:	scas   al,BYTE PTR es:[edi]
  40a217:	dec    edi
  40a218:	in     al,dx
  40a219:	pop    es
  40a21a:	icebp  
  40a21b:	push   cs
  40a21c:	jo     0x40a206
  40a21e:	cwde   
  40a21f:	ins    DWORD PTR es:[edi],dx
  40a220:	xor    BYTE PTR [edx+edx*8],ch
  40a223:	cld    
  40a224:	aaa    
  40a225:	fidiv  DWORD PTR [edx+0x41]
  40a228:	ror    BYTE PTR ds:0xc2648857,0xb
  40a22f:	sub    al,0xc4
  40a231:	jno    0x40a252
  40a233:	enter  0xf6e3,0xb5
  40a237:	ja     0x40a2b6
  40a239:	mov    edx,0x958e7e5
  40a23e:	(bad)  
  40a23f:	out    dx,al
  40a240:	xor    DWORD PTR [ebp-0x68a5cc53],esi
  40a246:	enter  0xa43f,0x1f
  40a24a:	scas   al,BYTE PTR es:[edi]
  40a24b:	int3   
  40a24c:	cmp    edx,DWORD PTR [ebx]
  40a24e:	sbb    ch,bl
  40a250:	and    ecx,eax
  40a252:	jbe    0x40a233
  40a254:	inc    ebp
  40a255:	out    dx,al
  40a256:	mov    al,ds:0xe5717dc5
  40a25b:	mov    dl,BYTE PTR [ecx]
  40a25d:	inc    esp
  40a25e:	enter  0x5b7e,0xc0
  40a262:	stc    
  40a263:	dec    eax
  40a264:	out    dx,al
  40a265:	jge    0x40a2c6
  40a267:	jecxz  0x40a289
  40a269:	fwait
  40a26a:	mov    eax,ds:0x6212f8e6
  40a26f:	ss lahf 
  40a271:	nop
  40a272:	mov    DWORD PTR [edx+edx*4-0x53],esi
  40a276:	pop    ebp
  40a277:	ffreep st(7)
  40a279:	repnz xor al,0x2e
  40a27c:	pushf  
  40a27d:	ja     0x40a26e
  40a27f:	loop   0x40a25b
  40a281:	jb     0x40a2dd
  40a283:	in     al,dx
  40a284:	rol    DWORD PTR [esi+edi*8],1
  40a287:	ret    
  40a288:	and    esi,DWORD PTR [edi+0x3a2b667f]
  40a28e:	jp     0x40a2ff
  40a290:	and    edx,DWORD PTR [edi]
  40a292:	jle    0x40a2ca
  40a294:	test   BYTE PTR es:[ebx-0x26b2e355],0x8a
  40a29c:	jns    0x40a314
  40a29e:	jmp    0x40a2b7
  40a2a0:	jp     0x40a282
  40a2a2:	mov    ebp,0xa644f2e5
  40a2a7:	pcmpeqb mm2,mm6
  40a2aa:	call   0x20009d15
  40a2af:	out    dx,al
  40a2b0:	fnstsw WORD PTR [ebx]
  40a2b2:	test   eax,0xb38ad3e1
  40a2b7:	inc    esp
  40a2b8:	dec    edi
  40a2b9:	jae    0x40a268
  40a2bb:	ret    0x4524
  40a2be:	inc    esp
  40a2bf:	aaa    
  40a2c0:	sbb    edi,DWORD PTR [ecx]
  40a2c2:	inc    esp
  40a2c3:	jne    0x40a269
  40a2c5:	jp     0x40a2c2
  40a2c7:	data16 sahf 
  40a2c9:	das    
  40a2ca:	add    cl,BYTE PTR [edi]
  40a2cc:	add    eax,DWORD PTR [ecx-0x9]
  40a2cf:	loop   0x40a257
  40a2d1:	pop    ebp
  40a2d2:	icebp  
  40a2d3:	retf   
  40a2d4:	popa   
  40a2d5:	lds    edx,FWORD PTR [ebx]
  40a2d7:	push   0x76befaae
  40a2dc:	enter  0x2bae,0xb8
  40a2e0:	repnz adc DWORD PTR [ecx-0x16],eax
  40a2e4:	shl    DWORD PTR [esi-0x4d],cl
  40a2e7:	xor    BYTE PTR [ecx+0x54],cl
  40a2ea:	ja     0x40a365
  40a2ec:	ss dec eax
  40a2ee:	inc    edi
  40a2ef:	bnd jno 0x40a333
  40a2f2:	xor    al,0x26
  40a2f4:	ds aaa 
  40a2f6:	add    eax,0x8669cd5f
  40a2fb:	or     eax,0xee9ee108
  40a300:	mov    cl,BYTE PTR [edx-0x20]
  40a303:	fidiv  DWORD PTR [esi-0x74]
  40a306:	ret    
  40a307:	es (bad) 
  40a30a:	xchg   esi,eax
  40a30b:	clc    
  40a30c:	dec    ebp
  40a30d:	je     0x40a2ab
  40a30f:	(bad)  
  40a310:	ret    0xf643
  40a313:	push   eax
  40a314:	imul   eax,DWORD PTR ds:0x3ce402cf,0x366c4877
  40a31e:	je     0x40a384
  40a320:	inc    ebp
  40a321:	aaa    
  40a322:	xor    al,bh
  40a324:	push   esi
  40a325:	dec    esi
  40a326:	mov    dl,0x6c
  40a328:	fs sar ah,cl
  40a32b:	out    0xc0,al
  40a32d:	inc    ecx
  40a32e:	ret    0x659e
  40a331:	js     0x40a30c
  40a333:	dec    ebp
  40a334:	ret    
  40a335:	add    eax,0xc08e2635
  40a33a:	xor    eax,0x5283f1c9
  40a33f:	adc    dl,BYTE PTR [edi]
  40a341:	xchg   esp,eax
  40a342:	sbb    ebp,ebx
  40a344:	push   ebp
  40a345:	sub    BYTE PTR [ebp+0x385ed8f4],dh
  40a34b:	test   al,0x18
  40a34d:	mov    ds:0xe7e348c5,eax
  40a352:	xchg   BYTE PTR [ecx-0x228c5d8d],ch
  40a358:	pop    ebp
  40a359:	cmp    eax,0x93072ea1
  40a35e:	cmp    BYTE PTR [eax+ecx*8-0x8ec8d2],dl
  40a365:	jmp    0x40a386
  40a367:	stc    
  40a368:	ins    BYTE PTR es:[edi],dx
  40a369:	call   0xc836:0x8c10f5c4
  40a370:	jecxz  0x40a394
  40a372:	mov    edi,0x9af5757f
  40a377:	push   ss
  40a378:	(bad)  
  40a379:	aas    
  40a37a:	mov    ah,0x77
  40a37c:	push   edi
  40a37d:	cmp    BYTE PTR [ebx],ch
  40a37f:	pop    esi
  40a380:	mov    al,dh
  40a382:	(bad)  
  40a383:	pop    ebx
  40a384:	and    al,0x60
  40a386:	enter  0xb06e,0xca
  40a38a:	inc    ebx
  40a38b:	sbb    al,dl
  40a38d:	inc    esi
  40a38e:	xor    eax,0x1c31a320
  40a393:	loop   0x40a3eb
  40a395:	aas    
  40a396:	xor    BYTE PTR [edi],bl
  40a398:	out    dx,al
  40a399:	mov    ds:0xbec59f6b,al
  40a39e:	sub    eax,DWORD PTR [ebp-0x73ffdbce]
  40a3a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3a5:	mov    DWORD PTR [esi],eax
  40a3a7:	sub    DWORD PTR [ebp+0x40e47146],0xffffffc9
  40a3ae:	push   edi
  40a3af:	stos   BYTE PTR es:[edi],al
  40a3b0:	cli    
  40a3b1:	fs pusha 
  40a3b3:	push   esi
  40a3b4:	inc    edi
  40a3b5:	jp     0x40a34b
  40a3b7:	sbb    BYTE PTR [edx+0x3b],al
  40a3ba:	inc    edi
  40a3bb:	mov    BYTE PTR [esi-0x23520376],0x56
  40a3c2:	out    dx,al
  40a3c3:	push   cs
  40a3c4:	mov    ch,0x19
  40a3c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3c7:	xchg   edi,eax
  40a3c8:	mov    bl,0x9e
  40a3ca:	xchg   ebx,eax
  40a3cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3cc:	push   esi
  40a3cd:	lahf   
  40a3ce:	mov    ds:0x6a056537,al
  40a3d3:	lock xlat BYTE PTR ds:[ebx]
  40a3d5:	icebp  
  40a3d6:	mov    edx,0x940b6bcf
  40a3db:	adc    dl,BYTE PTR [edx]
  40a3dd:	ins    BYTE PTR es:[edi],dx
  40a3de:	cli    
  40a3df:	dec    ecx
  40a3e0:	adc    al,0xff
  40a3e2:	dec    edx
  40a3e3:	ss xor ebp,ebx
  40a3e6:	(bad)  
  40a3e7:	ror    BYTE PTR [edi+0x5f],0x41
  40a3eb:	fdivr  DWORD PTR [edx+0x4f]
  40a3ee:	jnp    0x40a3eb
  40a3f0:	popf   
  40a3f1:	lea    ecx,[eax+eiz*8+0x5c495d59]
  40a3f8:	pop    edx
  40a3f9:	mov    ecx,0x5fa3519c
  40a3fe:	push   edx
  40a3ff:	xor    ch,BYTE PTR [esp+0x73e1bac3]
  40a406:	mov    eax,0x634e3715
  40a40b:	mov    al,ah
  40a40d:	and    edx,eax
  40a40f:	in     al,0xe9
  40a411:	cld    
  40a412:	sti    
  40a413:	jno    0x40a3bc
  40a415:	ja     0x40a43f
  40a417:	pop    esi
  40a418:	call   0x9fd8:0xaa757b41
  40a41f:	ror    BYTE PTR [eax],cl
  40a421:	adc    ch,BYTE PTR [eax]
  40a423:	ret    0x8bcf
  40a426:	lea    edx,[ebp-0x165af6fb]
  40a42c:	inc    ecx
  40a42d:	adc    bh,BYTE PTR [edi]
  40a42f:	fild   WORD PTR [ebx+0x303966a4]
  40a435:	inc    ebp
  40a436:	rol    DWORD PTR [ebp+0x1e],cl
  40a439:	mov    al,0x4f
  40a43b:	push   ss
  40a43c:	lds    ebp,FWORD PTR [ecx+0xa]
  40a43f:	sub    DWORD PTR [ebx+0x3a448037],esp
  40a445:	pop    ebx
  40a446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a447:	mov    ss,WORD PTR ds:0x871403ce
  40a44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a44e:	cmp    ebx,DWORD PTR [ebx+0x8]
  40a451:	cmp    ah,ch
  40a453:	jae    0x40a4bc
  40a455:	nop
  40a456:	sbb    ecx,DWORD PTR [eax]
  40a458:	retf   0xc3b6
  40a45b:	in     eax,dx
  40a45c:	xchg   esp,eax
  40a45d:	retf   0xa3a3
  40a460:	xchg   ah,ch
  40a462:	and    eax,0x48e65fdd
  40a467:	mov    ch,0xa
  40a469:	pop    edi
  40a46a:	ucomiss xmm0,xmm2
  40a46d:	test   eax,0x429ae25d
  40a472:	lock ja 0x40a445
  40a475:	push   ss
  40a476:	in     eax,0xa3
  40a478:	jp     0x40a41d
  40a47a:	xor    ch,BYTE PTR [edi+0x35]
  40a47d:	push   0xafcc51b0
  40a482:	sbb    DWORD PTR [eax+edx*8+0x2258138],0xd262ebd2
  40a48d:	repz jg 0x40a4d4
  40a490:	adc    eax,0x7a55e59
  40a495:	fdivr  st(0),st
  40a497:	dec    esi
  40a498:	sub    DWORD PTR [ecx],ebp
  40a49a:	call   0xd213b83e
  40a49f:	rol    DWORD PTR [eax],0x2b
  40a4a2:	jecxz  0x40a4da
  40a4a4:	xchg   esp,eax
  40a4a5:	push   edx
  40a4a6:	push   esi
  40a4a7:	bound  esp,QWORD PTR [edx+0x10b6a58]
  40a4ad:	repz jne 0x40a458
  40a4b0:	jbe    0x40a477
  40a4b2:	loope  0x40a4dd
  40a4b4:	cmp    al,0x7
  40a4b6:	sbb    al,0xc0
  40a4b8:	es sub eax,0x570dd3ea
  40a4be:	mov    WORD PTR [edx],es
  40a4c0:	and    bl,al
  40a4c2:	sub    esi,DWORD PTR [ecx-0x77]
  40a4c5:	or     esp,DWORD PTR ds:0x354a060c
  40a4cb:	pushf  
  40a4cc:	test   BYTE PTR [ebp-0x59],dh
  40a4cf:	cdq    
  40a4d0:	es inc ebp
  40a4d2:	out    dx,eax
  40a4d3:	outs   dx,DWORD PTR ds:[esi]
  40a4d4:	ins    DWORD PTR es:[edi],dx
  40a4d5:	mov    eax,0xfc5a1cb
  40a4da:	loop   0x40a520
  40a4dc:	in     eax,0x65
  40a4de:	lods   al,BYTE PTR ds:[esi]
  40a4df:	fst    QWORD PTR [esi]
  40a4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4e2:	rol    ch,cl
  40a4e4:	jb     0x40a53f
  40a4e6:	scas   eax,DWORD PTR es:[edi]
  40a4e7:	test   eax,0x2cf6adb5
  40a4ec:	mov    bl,0x97
  40a4ee:	sub    al,0xc8
  40a4f0:	hlt    
  40a4f1:	mov    ebx,0x51f19b41
  40a4f6:	adc    BYTE PTR [ebp+0x2],al
  40a4f9:	ret    0x9c3
  40a4fc:	push   ebx
  40a4fd:	jmp    0x40a512
  40a4ff:	(bad)  
  40a500:	in     eax,dx
  40a501:	clc    
  40a502:	cmp    DWORD PTR [ecx+0x77943a74],0x2d4ceb6
  40a50c:	push   esp
  40a50d:	mov    edx,0x69955257
  40a512:	fwait
  40a513:	iret   
  40a514:	jne    0x40a525
  40a516:	add    eax,0x6720ffb8
  40a51b:	addr16 pushf 
  40a51d:	scas   al,BYTE PTR es:[edi]
  40a51e:	inc    ecx
  40a51f:	jecxz  0x40a57a
  40a521:	rol    BYTE PTR [edi],cl
  40a523:	xchg   esi,eax
  40a524:	fcom   QWORD PTR [edi+0x59]
  40a527:	inc    edx
  40a528:	xor    eax,DWORD PTR [edi]
  40a52a:	mov    ebx,0x3db875a9
  40a52f:	push   esi
  40a530:	fstp   QWORD PTR [esi-0x5e2f4488]
  40a536:	scas   al,BYTE PTR es:[edi]
  40a537:	mov    ds:0x96c5fc7a,al
  40a53c:	sbb    DWORD PTR [eax-0x7d],esp
  40a53f:	iret   
  40a540:	and    eax,DWORD PTR [esi+0x70dec246]
  40a546:	or     eax,0xf128f744
  40a54b:	add    eax,DWORD PTR [ebp-0x79]
  40a54e:	lock retf 
  40a550:	or     al,0xf2
  40a552:	stos   BYTE PTR es:[edi],al
  40a553:	addr16 out dx,eax
  40a555:	mov    ecx,0x639c02aa
  40a55a:	xor    ecx,DWORD PTR [ecx]
  40a55c:	stos   DWORD PTR es:[edi],eax
  40a55d:	out    0xd3,eax
  40a55f:	push   ecx
  40a560:	fcomp  QWORD PTR [esi+eiz*2+0x9]
  40a564:	push   0xffffff94
  40a566:	xchg   esp,eax
  40a567:	cmp    al,0x98
  40a569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a56a:	stos   DWORD PTR es:[edi],eax
  40a56b:	mov    BYTE PTR [esi],ah
  40a56d:	pop    esp
  40a56e:	cmp    cl,BYTE PTR [ebx+0x4e6058dd]
  40a574:	inc    ebx
  40a575:	cmp    eax,0x59779bb3
  40a57a:	cwde   
  40a57b:	das    
  40a57c:	and    cl,dh
  40a57e:	in     al,0x9a
  40a580:	inc    ebp
  40a581:	hlt    
  40a582:	aad    0x35
  40a584:	and    BYTE PTR [edx],al
  40a586:	loop   0x40a5a4
  40a588:	adc    esi,eax
  40a58a:	out    dx,eax
  40a58b:	pushf  
  40a58c:	sti    
  40a58d:	outs   dx,BYTE PTR ds:[esi]
  40a58e:	jecxz  0x40a5e1
  40a590:	scas   al,BYTE PTR es:[edi]
  40a591:	mov    ds:0x838643ae,al
  40a596:	mov    edx,cs
  40a598:	sbb    BYTE PTR [edx*1-0x42d071d2],bh
  40a59f:	lods   eax,DWORD PTR ds:[esi]
  40a5a0:	retf   
  40a5a1:	test   DWORD PTR [esi-0x7a],edx
  40a5a4:	or     al,0xf1
  40a5a6:	daa    
  40a5a7:	pop    ebx
  40a5a8:	pop    ecx
  40a5a9:	arpl   WORD PTR [esi+0x5f],dx
  40a5ac:	repnz fcomp DWORD PTR [eax]
  40a5af:	mov    ?,WORD PTR fs:[ecx-0x5368851b]
  40a5b6:	fcom   DWORD PTR [esi]
  40a5b8:	cmp    DWORD PTR ds:0x14848a7d,esi
  40a5be:	jecxz  0x40a553
  40a5c0:	aam    0xe8
  40a5c2:	cld    
  40a5c3:	arpl   WORD PTR [edi-0x51],bx
  40a5c6:	lahf   
  40a5c7:	adc    dl,dl
  40a5c9:	xchg   ebx,eax
  40a5ca:	cwde   
  40a5cb:	pop    ebp
  40a5cc:	mov    dl,0xd7
  40a5ce:	ret    0x9926
  40a5d1:	jne    0x40a640
  40a5d3:	add    eax,0xf6de9237
  40a5d8:	dec    eax
  40a5d9:	(bad)
  40a5dc:	jo     0x40a646
  40a5de:	mov    ah,0x78
  40a5e0:	or     ah,BYTE PTR [esp+ebp*2-0x625fb2da]
  40a5e7:	test   eax,0x9e715ac0
  40a5ec:	push   ecx
  40a5ed:	in     al,dx
  40a5ee:	outs   dx,DWORD PTR gs:[esi]
  40a5f0:	dec    edi
  40a5f1:	and    bl,dl
  40a5f3:	sbb    bl,0xc0
  40a5f6:	sub    eax,0x65186704
  40a5fb:	pop    esi
  40a5fc:	sub    ch,BYTE PTR [ecx+ecx*4]
  40a5ff:	jnp    0x40a5ba
  40a601:	(bad)  
  40a602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a603:	sar    ah,1
  40a605:	inc    ebx
  40a606:	ror    DWORD PTR [esi+0x4100b985],1
  40a60c:	pusha  
  40a60d:	ret    
  40a60e:	js     0x40a611
  40a610:	scas   al,BYTE PTR es:[edi]
  40a611:	popf   
  40a612:	(bad)  
  40a613:	aam    0xf2
  40a615:	retf   
  40a616:	stos   BYTE PTR es:[edi],al
  40a617:	mov    ds:0x6d1dc234,eax
  40a61c:	ficomp WORD PTR [ebp+0x8febe5e]
  40a622:	mov    bh,0xdf
  40a624:	cmp    BYTE PTR [edi],dl
  40a626:	mov    esp,DWORD PTR [edx-0x64]
  40a629:	cli    
  40a62a:	mov    cl,0xa4
  40a62c:	inc    ebp
  40a62d:	leave  
  40a62e:	imul   ebx,edi,0xffffffb4
  40a631:	sbb    edx,DWORD PTR [eax]
  40a633:	das    
  40a634:	push   eax
  40a635:	add    ebx,eax
  40a637:	ss xchg esi,eax
  40a639:	push   0xffffffed
  40a63b:	sub    bh,BYTE PTR [edi]
  40a63d:	cmp    eax,0xc8317cb9
  40a642:	jne    0x40a5e2
  40a644:	int3   
  40a645:	or     bh,0xa9
  40a648:	dec    eax
  40a649:	ss aam 0xe5
  40a64c:	ds aaa 
  40a64e:	xchg   ebp,eax
  40a64f:	lods   eax,DWORD PTR ds:[esi]
  40a650:	aaa    
  40a651:	xchg   DWORD PTR [eax],eax
  40a653:	pusha  
  40a654:	lods   al,BYTE PTR ds:[esi]
  40a655:	dec    BYTE PTR [esi+ebx*2]
  40a658:	fstp   TBYTE PTR [ecx+0x5]
  40a65b:	mov    ds:0x26831cdc,al
  40a660:	sbb    cl,cl
  40a662:	add    DWORD PTR [ebx],ecx
  40a664:	fsubr  QWORD PTR [edx+0x31]
  40a667:	sti    
  40a668:	ds lahf 
  40a66a:	icebp  
  40a66b:	sti    
  40a66c:	xlat   BYTE PTR ds:[ebx]
  40a66d:	mov    bl,0x92
  40a66f:	or     DWORD PTR [edi-0x34],edi
  40a672:	aad    0x87
  40a674:	in     al,0x4b
  40a676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a677:	lea    ecx,[edi]
  40a679:	mov    cs,WORD PTR [ecx]
  40a67b:	ja     0x40a65d
  40a67d:	lods   al,BYTE PTR ds:[esi]
  40a67e:	pop    ebp
  40a67f:	mov    ah,0xa7
  40a681:	lock mov edx,0xda51515f
  40a687:	mov    dl,0xb2
  40a689:	mov    eax,0xc262809b
  40a68e:	lock test al,0x11
  40a691:	or     dl,ch
  40a693:	mov    ds:0xf6297d1b,eax
  40a698:	inc    edx
  40a699:	push   ecx
  40a69a:	pusha  
  40a69b:	xor    BYTE PTR [eax],0x47
  40a69e:	leave  
  40a69f:	jnp    0x40a647
  40a6a1:	pop    edi
  40a6a2:	jmp    0x8099ed85
  40a6a7:	std    
  40a6a8:	cmp    edx,edi
  40a6aa:	inc    esp
  40a6ab:	jnp    0x40a636
  40a6ad:	mov    ds:0x8fed2b96,al
  40a6b2:	out    dx,eax
  40a6b3:	dec    ebx
  40a6b4:	fs ret 0x27b3
  40a6b8:	jmp    0x40a66f
  40a6ba:	icebp  
  40a6bb:	sbb    eax,DWORD PTR [esi]
  40a6bd:	and    ebp,DWORD PTR [edx+edi*4]
  40a6c0:	add    bl,BYTE PTR [edi+edx*8]
  40a6c3:	repnz aad 0x9d
  40a6c6:	jmp    0x40a6ae
  40a6c8:	aam    0xdd
  40a6ca:	retf   
  40a6cb:	xor    eax,0x8017dd6
  40a6d0:	sahf   
  40a6d1:	push   ebx
  40a6d2:	or     BYTE PTR [edx-0x1b],al
  40a6d5:	mov    al,0x31
  40a6d7:	into   
  40a6d8:	(bad)  
  40a6da:	mov    cl,0x68
  40a6dc:	jecxz  0x40a71c
  40a6de:	lods   eax,DWORD PTR ds:[esi]
  40a6df:	(bad)  
  40a6e0:	pop    eax
  40a6e1:	xor    al,0x7f
  40a6e3:	mov    WORD PTR [esi-0x58dc7fd4],es
  40a6e9:	mov    bl,BYTE PTR [ecx+ebp*4+0x2e]
  40a6ed:	adc    DWORD PTR ds:0xb5847f9a,esp
  40a6f3:	lock sub al,0xcd
  40a6f6:	xlat   BYTE PTR ds:[ebx]
  40a6f7:	adc    dl,BYTE PTR [edi+esi*4]
  40a6fa:	mov    ebx,0xd92906d5
  40a6ff:	adc    dl,ch
  40a701:	pusha  
  40a702:	test   eax,0x4ca53a99
  40a707:	xchg   DWORD PTR [eax],edi
  40a709:	add    al,0xa3
  40a70b:	push   ecx
  40a70c:	push   ds
  40a70d:	call   0x18bd:0xf2e213d2
  40a714:	dec    ebx
  40a715:	pop    DWORD PTR ds:0xeabee608
  40a71b:	push   ecx
  40a71c:	xor    al,0x44
  40a71e:	ss fucomi st,st(4)
  40a721:	add    BYTE PTR [ebx+0x778fc3e9],ah
  40a727:	adc    BYTE PTR [edx-0x65],dl
  40a72a:	mov    edx,0x5df83e69
  40a72f:	ss mov bh,0x45
  40a732:	aam    0xab
  40a734:	dec    ebp
  40a735:	adc    dh,ah
  40a737:	pusha  
  40a738:	mov    esp,0x879c8665
  40a73d:	data16 add al,0xba
  40a740:	lock xor eax,0x81324a5
  40a746:	sbb    eax,0x4c6f3a1b
  40a74b:	test   BYTE PTR [edi+edi*8+0x5db9d32e],ch
  40a752:	dec    esi
  40a753:	cli    
  40a754:	jecxz  0x40a6f1
  40a756:	cmp    ch,BYTE PTR [edi]
  40a758:	out    dx,eax
  40a759:	shl    DWORD PTR [ecx],cl
  40a75b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a75c:	jbe    0x40a6ed
  40a75e:	adc    dl,BYTE PTR [ebx-0x57]
  40a761:	inc    esi
  40a762:	xchg   bh,ah
  40a764:	test   BYTE PTR [ebx+0x11],ch
  40a767:	aam    0x4c
  40a769:	push   ecx
  40a76a:	ror    BYTE PTR [edi],0x5c
  40a76d:	adc    ah,cl
  40a76f:	ret    
  40a770:	addr16 push ecx
  40a772:	rcl    DWORD PTR [ebx],1
  40a774:	fcom   QWORD PTR [esi+0x4c]
  40a777:	idiv   DWORD PTR [ecx]
  40a779:	dec    ebx
  40a77a:	dec    ecx
  40a77b:	and    cl,BYTE PTR [esi]
  40a77d:	and    ecx,DWORD PTR [esp+edx*1]
  40a780:	and    ch,BYTE PTR [ebx+ebx*4-0x67]
  40a784:	cmp    bh,BYTE PTR [edi+0x4a]
  40a787:	inc    ebx
  40a788:	(bad)  
  40a789:	mov    edx,0xc5d1d82
  40a78e:	jmp    0xfb60b636
  40a793:	jle    0x40a7ff
  40a795:	jecxz  0x40a7a5
  40a797:	adc    eax,0x60bb0f81
  40a79c:	inc    ebx
  40a79d:	push   ss
  40a79e:	push   cs
  40a79f:	push   0x66f45f79
  40a7a4:	jmp    0x40a7b6
  40a7a6:	fadd   DWORD PTR [eax+0x640cf4de]
  40a7ac:	cmp    eax,0xa136809e
  40a7b1:	bound  edx,QWORD PTR [ecx]
  40a7b3:	mov    dl,0x27
  40a7b5:	mov    bh,0x9e
  40a7b7:	adc    al,0x8f
  40a7b9:	std    
  40a7ba:	addr16 mov dh,0x2d
  40a7bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7be:	retf   0x7b28
  40a7c1:	(bad)  
  40a7c2:	pop    edx
  40a7c3:	sbb    bh,ah
  40a7c5:	ja     0x40a7a9
  40a7c7:	lock imul ebp,DWORD PTR [edx-0x7e735c29],0xffffffe0
  40a7cf:	xchg   ebp,eax
  40a7d0:	sahf   
  40a7d1:	fyl2x  
  40a7d3:	xchg   DWORD PTR [eax+0x6382e47d],esi
  40a7d9:	popa   
  40a7da:	dec    ecx
  40a7db:	dec    esp
  40a7dc:	mov    dh,0x83
  40a7de:	shr    DWORD PTR [esp+ebp*2],1
  40a7e1:	jns    0x40a7ff
  40a7e3:	inc    edi
  40a7e4:	cld    
  40a7e5:	dec    edx
  40a7e6:	push   esi
  40a7e7:	inc    ebx
  40a7e8:	cmp    DWORD PTR [edx-0x3ccc0c],ecx
  40a7ee:	dec    ecx
  40a7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7f0:	cmp    ah,BYTE PTR [edx+0x122c0c53]
  40a7f6:	rol    BYTE PTR [ebx],cl
  40a7f8:	lea    eax,[eax+0x1a]
  40a7fb:	pop    esp
  40a7fc:	mov    WORD PTR ds:0xb0a51e45,fs
  40a802:	dec    ebp
  40a803:	pop    edx
  40a805:	cmp    DWORD PTR [ecx-0x25608a00],ebx
  40a80b:	sbb    ecx,DWORD PTR [ebx+0x38]
  40a80e:	push   0x42d447c7
  40a813:	dec    esi
  40a814:	push   ecx
  40a815:	adc    ecx,DWORD PTR [eax-0x5a99447b]
  40a81b:	jge    0x40a7b9
  40a81d:	dec    edi
  40a81e:	jmp    0xee50:0xb713452f
  40a825:	adc    eax,DWORD PTR [esp+ebp*8+0x72f3ee9c]
  40a82c:	mov    ah,0xe1
  40a82e:	mov    esp,0xb2be21ff
  40a833:	xor    cl,BYTE PTR [ebx+0x745f0308]
  40a839:	lahf   
  40a83a:	or     ebx,DWORD PTR [ecx+0x287d0ef6]
  40a840:	shl    DWORD PTR ds:0xd98297d0,1
  40a846:	pop    ds
  40a847:	iret   
  40a848:	and    esp,DWORD PTR [ebp-0x691335ec]
  40a84e:	in     al,0x52
  40a850:	daa    
  40a851:	jg     0x40a87f
  40a853:	jmp    0x40a81a
  40a855:	adc    al,0x20
  40a857:	stos   DWORD PTR es:[edi],eax
  40a858:	imul   ebp,ecx,0x7
  40a85b:	push   0xce12bc8b
  40a860:	dec    edi
  40a861:	inc    ecx
  40a862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a863:	pop    ss
  40a864:	fsubr  QWORD PTR [ebx+0x64]
  40a867:	pop    esi
  40a868:	sbb    esi,DWORD PTR [edx+0x3348f360]
  40a86e:	xchg   BYTE PTR [esi],cl
  40a870:	xor    al,0xfd
  40a872:	mov    BYTE PTR [ebx-0x66],bl
  40a875:	pop    ds
  40a876:	pop    es
  40a877:	jae    0x40a8db
  40a879:	repnz fsubr st,st(1)
  40a87c:	bound  edi,QWORD PTR [edi-0x16]
  40a87f:	stos   DWORD PTR es:[edi],eax
  40a880:	jbe    0x40a8d0
  40a882:	fstp   TBYTE PTR [edi-0x19]
  40a885:	sbb    eax,0x82140231
  40a88a:	xchg   ebx,eax
  40a88b:	mov    eax,0x6c407338
  40a890:	inc    esi
  40a891:	dec    ecx
  40a892:	pop    esi
  40a893:	xchg   edi,eax
  40a894:	loop   0x40a8a8
  40a896:	and    ecx,DWORD PTR [ecx+0x46]
  40a899:	xchg   BYTE PTR [esp+ebp*4-0x5a],dl
  40a89d:	ror    BYTE PTR [edx-0x5fbc0d98],1
  40a8a3:	jne    0x40a85e
  40a8a5:	int3   
  40a8a6:	mov    eax,0xa45f971b
  40a8ab:	lock add al,0x7a
  40a8ae:	fist   DWORD PTR [edx-0x7fe172b5]
  40a8b4:	inc    edx
  40a8b5:	in     eax,0xed
  40a8b7:	fidivr WORD PTR [ecx+0x1]
  40a8ba:	inc    edx
  40a8bb:	or     bh,al
  40a8bd:	nop
  40a8be:	mov    ebp,0x39f49ea2
  40a8c3:	cmc    
  40a8c4:	add    eax,edx
  40a8c6:	inc    eax
  40a8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8c8:	stc    
  40a8c9:	mov    eax,ds:0x767e4cd
  40a8ce:	sbb    eax,0x6fa87476
  40a8d3:	sub    al,0x32
  40a8d5:	cwde   
  40a8d6:	test   cl,bh
  40a8d8:	popa   
  40a8d9:	mov    cl,0xa4
  40a8db:	cwde   
  40a8dc:	jmp    0x20b28b2
  40a8e1:	mov    ?,ebx
  40a8e3:	outs   dx,BYTE PTR ds:[esi]
  40a8e4:	pusha  
  40a8e5:	sbb    DWORD PTR [ebp+0x24],ebx
  40a8e8:	push   cs
  40a8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8ea:	sbb    eax,0xf2a0cdad
  40a8ef:	hlt    
  40a8f0:	(bad)  
  40a8f2:	(bad)  
  40a8f3:	stos   BYTE PTR es:[edi],al
  40a8f4:	xor    DWORD PTR [eax],esp
  40a8f6:	sbb    al,0xe3
  40a8f8:	mov    ebx,ebp
  40a8fa:	lock mov ah,0x2f
  40a8fd:	sub    dl,BYTE PTR [ebp-0x29]
  40a900:	fs jbe 0x40a8ed
  40a903:	std    
  40a904:	nop
  40a905:	loopne 0x40a91b
  40a907:	mov    esi,0x1b2c3524
  40a90c:	cmp    eax,ecx
  40a90e:	stos   DWORD PTR es:[edi],eax
  40a90f:	into   
  40a910:	stos   DWORD PTR es:[edi],eax
  40a911:	pop    eax
  40a912:	xor    al,dl
  40a914:	(bad)  
  40a915:	cli    
  40a916:	div    DWORD PTR [ebp+0x47]
  40a919:	mov    ch,0x9b
  40a91b:	adc    BYTE PTR [esi+ecx*1+0x58],al
  40a91f:	popf   
  40a920:	es mul ah
  40a923:	(bad)  
  40a924:	std    
  40a925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a926:	fs pop ebx
  40a928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a929:	jns    0x40a8c7
  40a92b:	cmp    bl,bh
  40a92d:	test   BYTE PTR [ebp*1+0x3653b242],bh
  40a934:	and    al,0xe7
  40a936:	test   BYTE PTR [ebx],bh
  40a938:	stc    
  40a939:	add    al,0x4e
  40a93b:	fistp  QWORD PTR [ecx-0x71915c5c]
  40a941:	or     BYTE PTR [eax-0x5f873ecc],bh
  40a947:	scas   eax,DWORD PTR es:[edi]
  40a948:	pop    esi
  40a949:	cmp    BYTE PTR [ebx+0x42],ch
  40a94c:	cmp    eax,0xef9a2106
  40a951:	cmp    DWORD PTR [edi-0x54],esp
  40a954:	into   
  40a955:	jge    0x40a9b3
  40a957:	jns    0x40a8ee
  40a959:	fild   QWORD PTR ds:0x10a72e97
  40a95f:	ds popa 
  40a961:	sub    ecx,DWORD PTR [ecx]
  40a963:	out    dx,eax
  40a964:	jl     0x40a903
  40a966:	popa   
  40a967:	mov    dl,0xe3
  40a969:	jne    0x40a905
  40a96b:	cmp    eax,0x421e2c7c
  40a970:	idiv   BYTE PTR [edx+0x44]
  40a973:	mov    al,0xac
  40a975:	in     al,0xdb
  40a977:	mov    fs,WORD PTR [ecx]
  40a979:	cmp    BYTE PTR [ecx-0x48],0xb4
  40a97d:	outs   dx,BYTE PTR ds:[esi]
  40a97e:	sub    bl,BYTE PTR [ecx]
  40a980:	mov    edx,0x1262ab11
  40a985:	pop    es
  40a986:	ret    
  40a987:	mov    DWORD PTR [esi+0x7c70ba1d],esi
  40a98d:	inc    edi
  40a98e:	sbb    al,0xf9
  40a990:	jecxz  0x40a972
  40a992:	or     al,0x7f
  40a994:	nop
  40a995:	das    
  40a996:	lock test eax,0xcba2228b
  40a99c:	sti    
  40a99d:	scas   eax,DWORD PTR es:[edi]
  40a99e:	unpcklps xmm6,XMMWORD PTR [ebx]
  40a9a1:	mov    edi,0xfe4d1eb5
  40a9a6:	xor    esp,edx
  40a9a8:	push   ds
  40a9a9:	or     al,0x1b
  40a9ab:	test   dl,0xd3
  40a9ae:	and    ecx,ebx
  40a9b0:	loope  0x40a9f8
  40a9b2:	shr    DWORD PTR ds:0x51ca4c8,1
  40a9b8:	mov    edx,DWORD PTR [ebp+0x6752a89d]
  40a9be:	pusha  
  40a9bf:	loop   0x40a9ca
  40a9c1:	in     al,0x68
  40a9c3:	imul   esp,DWORD PTR [ebp+0x27410114],0xda52c025
  40a9cd:	add    BYTE PTR [esp+ecx*8-0x1b],al
  40a9d1:	mov    ebx,0x4e1ee91e
  40a9d6:	outs   dx,DWORD PTR ds:[esi]
  40a9d7:	pop    DWORD PTR [ebx-0x7e6032d0]
  40a9dd:	out    dx,eax
  40a9de:	mov    cl,0xbc
  40a9e0:	in     eax,dx
  40a9e1:	push   cs
  40a9e2:	mov    bl,0xf5
  40a9e4:	mov    BYTE PTR [eax],ch
  40a9e6:	or     dl,ah
  40a9e8:	mov    cl,0xe0
  40a9ea:	jb     0x40aa37
  40a9ec:	cwde   
  40a9ed:	mov    ds:0x416f3b17,al
  40a9f2:	stc    
  40a9f3:	mov    eax,0xe41bc5dc
  40a9f8:	shl    BYTE PTR [eax],cl
  40a9fa:	xchg   BYTE PTR [ebp+0x4690d790],ah
  40aa00:	push   0xd5328eb6
  40aa05:	fucom  st(1)
  40aa07:	add    al,0xcc
  40aa09:	pop    ebx
  40aa0a:	adc    eax,0x7e626236
  40aa0f:	mov    al,0x98
  40aa11:	pushf  
  40aa12:	pop    ebp
  40aa13:	jmp    FWORD PTR [edi]
  40aa15:	sub    BYTE PTR [edi-0x59],al
  40aa18:	test   eax,0x8adec7be
  40aa1d:	call   0x445:0xbd30c8d1
  40aa24:	sbb    dl,BYTE PTR [ecx+eax*8+0x439afeb2]
  40aa2b:	dec    esi
  40aa2c:	pop    ds
  40aa2d:	js     0x40a9c7
  40aa2f:	retf   0xd16e
  40aa32:	push   0x90be8081
  40aa37:	mov    dh,0xb4
  40aa39:	je     0x40aa2b
  40aa3b:	aad    0x6a
  40aa3d:	iret   
  40aa3e:	pop    ss
  40aa3f:	adc    al,0x9c
  40aa41:	std    
  40aa42:	daa    
  40aa43:	mov    esp,0x4595584e
  40aa48:	ds dec ebx
  40aa4a:	and    BYTE PTR [ebx+0x22],ah
  40aa4d:	add    BYTE PTR [ebx+0x32],dl
  40aa50:	push   esi
  40aa51:	add    BYTE PTR [edx-0x21],dh
  40aa54:	(bad)  
  40aa55:	lea    ecx,cs:0x8e2e8ff3
  40aa5c:	inc    DWORD PTR [ecx]
  40aa5e:	xor    BYTE PTR [edi+0x11241428],bh
  40aa64:	push   ds
  40aa65:	jmp    0x40aae3
  40aa67:	sub    ah,BYTE PTR [eax]
  40aa69:	call   0xf0ce927f
  40aa6e:	in     al,dx
  40aa6f:	xlat   BYTE PTR ds:[ebx]
  40aa70:	sub    eax,0x9df25c6
  40aa75:	mov    dl,0xef
  40aa77:	mov    ebp,0x5523b168
  40aa7c:	icebp  
  40aa7d:	bound  edx,QWORD PTR [edx+eiz*2-0x508db42d]
  40aa84:	ins    BYTE PTR es:[edi],dx
  40aa85:	repnz stos BYTE PTR es:[edi],al
  40aa87:	ins    BYTE PTR es:[edi],dx
  40aa88:	(bad)  
  40aa89:	or     eax,0x62ad3a3f
  40aa8e:	fsubr  DWORD PTR [ebx+0x442f8473]
  40aa94:	adc    al,0x79
  40aa96:	sub    DWORD PTR [ebp+edx*2+0x7],edi
  40aa9a:	std    
  40aa9b:	icebp  
  40aa9c:	xchg   BYTE PTR [edx-0x34],bh
  40aa9f:	mov    WORD PTR [edi+0x32c3b8b6],ds
  40aaa5:	js     0xcf80900b
  40aaab:	jl     0x40aaac
  40aaad:	pop    ecx
  40aaae:	pop    ds
  40aaaf:	loope  0x40aab2
  40aab1:	inc    esp
  40aab2:	aaa    
  40aab3:	inc    eax
  40aab4:	inc    esp
  40aab5:	sbb    ah,BYTE PTR [esi]
  40aab7:	stos   DWORD PTR es:[edi],eax
  40aab8:	pop    ss
  40aab9:	pop    ebp
  40aaba:	or     ax,0x2dab
  40aabe:	test   bl,cl
  40aac0:	push   cs
  40aac1:	daa    
  40aac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aac3:	lock adc DWORD PTR fs:[edx+edi*4],eax
  40aac8:	aam    0x3d
  40aaca:	push   edx
  40aacb:	xor    al,0x7d
  40aacd:	ror    DWORD PTR [edi],1
  40aacf:	sub    eax,0xf7175f7d
  40aad4:	enter  0xc669,0x5a
  40aad8:	sub    edi,DWORD PTR [edx]
  40aada:	xchg   esp,eax
  40aadb:	(bad)  
  40aadc:	fdiv   DWORD PTR [edi-0x14c2b1a8]
  40aae2:	enter  0x21d6,0xdd
  40aae6:	inc    edi
  40aae7:	iret   
  40aae8:	jnp    0x40aa70
  40aaea:	cmp    cl,cl
  40aaec:	and    al,0x53
  40aaee:	add    ebx,DWORD PTR [ecx-0x5cfd4a85]
  40aaf4:	add    BYTE PTR [esi],dl
  40aaf6:	out    0xcd,al
  40aaf8:	lock push es
  40aafa:	mov    al,BYTE PTR [esi]
  40aafc:	in     al,0xa4
  40aafe:	hlt    
  40aaff:	lahf   
  40ab00:	shl    BYTE PTR [eax],1
  40ab02:	jle    0x40ab65
  40ab04:	and    al,0x38
  40ab06:	and    BYTE PTR [ebp+0xc],cl
  40ab09:	sti    
  40ab0a:	inc    ebp
  40ab0b:	(bad)  
  40ab0c:	dec    DWORD PTR [edx+0x29c2949d]
  40ab12:	jae    0x40ab1d
  40ab14:	push   ss
  40ab15:	clc    
  40ab16:	mov    dh,0x15
  40ab18:	sbb    DWORD PTR [ebx-0x24],edx
  40ab1b:	pop    es
  40ab1c:	imul   ecx,DWORD PTR [ebx-0x34],0x8bac06c2
  40ab23:	je     0x40ab8f
  40ab25:	cld    
  40ab26:	push   esp
  40ab27:	pop    esi
  40ab28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab29:	clc    
  40ab2a:	jmp    0xf877:0x9d5b3e88
  40ab31:	jbe    0x40ab64
  40ab33:	add    eax,0x7ea8dd70
  40ab38:	or     ebx,edi
  40ab3a:	stos   DWORD PTR es:[edi],eax
  40ab3b:	ds sub ecx,ecx
  40ab3e:	push   ss
  40ab3f:	mov    bh,0x2b
  40ab41:	adc    al,0xea
  40ab43:	in     eax,0x9f
  40ab45:	in     al,dx
  40ab46:	(bad)  
  40ab47:	cdq    
  40ab48:	mov    ebp,0xec8bb18d
  40ab4d:	loope  0x40ab29
  40ab4f:	(bad)  
  40ab50:	fmul   DWORD PTR [edi-0x1c]
  40ab53:	int3   
  40ab54:	imul   esp,DWORD PTR [esp+edi*4-0x28937b63],0x3792680f
  40ab5f:	sub    bh,BYTE PTR [edx+0x30ed4d28]
  40ab65:	ins    BYTE PTR es:[edi],dx
  40ab66:	mov    WORD PTR [edi+ebp*1+0x660805e2],?
  40ab6d:	push   cs
  40ab6e:	pusha  
  40ab6f:	js     0x40ab94
  40ab71:	inc    edi
  40ab72:	dec    ebx
  40ab73:	sbb    ecx,DWORD PTR [edx+eax*1+0x1b]
  40ab77:	popa   
  40ab78:	repz mov ds:0x51573007,eax
  40ab7e:	imul   esi,DWORD PTR [ebx-0x54e8df33],0x46
  40ab85:	pop    edi
  40ab86:	dec    edx
  40ab87:	add    eax,0xbedf1b61
  40ab8c:	cmc    
  40ab8d:	inc    esi
  40ab8e:	out    dx,eax
  40ab8f:	out    0xf5,al
  40ab91:	jge    0x40ab15
  40ab93:	bound  edi,QWORD PTR [esi+0x6d]
  40ab96:	lds    eax,FWORD PTR [ebx-0x76912bbc]
  40ab9c:	mov    ebp,DWORD PTR [eax+0x65]
  40ab9f:	adc    BYTE PTR [ebx-0x31],0x2c
  40aba3:	inc    eax
  40aba4:	pop    edx
  40aba5:	and    al,0x1a
  40aba7:	mov    eax,ds:0xb064095
  40abac:	add    DWORD PTR [ecx+ecx*1+0x74c7a394],0xffffffb0
  40abb4:	fcomi  st,st(5)
  40abb6:	(bad)  
  40abb7:	jae    0x40ab3c
  40abb9:	push   esp
  40abba:	clc    
  40abbb:	cdq    
  40abbc:	daa    
  40abbd:	add    BYTE PTR [esi+eiz*4+0x37],0xbe
  40abc2:	enter  0x1752,0xf6
  40abc6:	rcr    ebx,1
  40abc8:	or     cl,ch
  40abca:	call   0xfb40:0xc66c890f
  40abd1:	adc    BYTE PTR [esp+ecx*2-0x27],0x23
  40abd6:	fdiv   st(7),st
  40abd8:	bound  ebx,QWORD PTR [edi+0x109b7b34]
  40abde:	es repnz loop 0x40abb0
  40abe2:	pop    esp
  40abe3:	and    DWORD PTR [esp],edi
  40abe6:	shl    BYTE PTR [ebx+eiz*4],0x83
  40abea:	leave  
  40abeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abec:	call   0xc00:0x74955697
  40abf3:	iret   
  40abf4:	das    
  40abf5:	jbe    0x40ab9e
  40abf7:	mov    al,0xe3
  40abf9:	mov    ecx,0x8d1a9e7
  40abfe:	xor    eax,0x5ea319f
  40ac03:	mov    bh,BYTE PTR [eax-0x35]
  40ac06:	(bad)  
  40ac07:	fwait
  40ac08:	or     DWORD PTR [esi-0x4b],ecx
  40ac0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac0c:	mov    edi,?
  40ac0e:	jmp    0xae13:0x5e580db1
  40ac15:	adc    BYTE PTR [ebx-0x37],dh
  40ac18:	cli    
  40ac19:	ror    BYTE PTR es:[ebp+0x3c],cl
  40ac1d:	shl    BYTE PTR [ebx-0x3e],1
  40ac20:	adc    ebx,eax
  40ac22:	aaa    
  40ac23:	mov    ch,0x3a
  40ac25:	mov    edi,0x3d1eba04
  40ac2a:	addr16 jp 0x40abe4
  40ac2d:	lods   al,BYTE PTR ds:[esi]
  40ac2e:	mov    ?,WORD PTR [ebx]
  40ac30:	enter  0x23b1,0x2b
  40ac34:	or     DWORD PTR [edx+0x141c7377],eax
  40ac3a:	mov    al,ds:0x6048de9f
  40ac3f:	bound  eax,QWORD PTR [ebp+0x6d]
  40ac42:	fdivp  st(1),st
  40ac44:	push   eax
  40ac45:	jle    0x40ac4d
  40ac47:	int3   
  40ac48:	pusha  
  40ac49:	std    
  40ac4a:	lock or edi,edi
  40ac4d:	icebp  
  40ac4e:	pop    esi
  40ac4f:	xchg   sp,ax
  40ac51:	sar    DWORD PTR [eax-0x63],0x9b
  40ac55:	sar    DWORD PTR [ecx+edi*4-0x50815748],0x5d
  40ac5d:	dec    eax
  40ac5e:	inc    ebx
  40ac5f:	mov    ds:0x30a1ac33,al
  40ac64:	in     al,0xf1
  40ac66:	ss fadd st(1),st
  40ac69:	jnp    0x40ac46
  40ac6b:	dec    edx
  40ac6c:	fs mov al,0x1c
  40ac6f:	(bad)  
  40ac70:	psubd  mm1,mm3
  40ac73:	jo     0x40ac59
  40ac75:	jb     0x40acb4
  40ac77:	jb     0x40ac0a
  40ac79:	push   ss
  40ac7a:	mov    eax,DWORD PTR [eax]
  40ac7c:	jge    0x40ac70
  40ac7e:	jbe    0x40ac4a
  40ac80:	jae    0x40ac5c
  40ac82:	xor    DWORD PTR [ecx+0x7e8a51c2],ecx
  40ac88:	mov    edi,0xfa2d732c
  40ac8d:	inc    edx
  40ac8e:	enter  0x6573,0xbb
  40ac92:	add    ecx,DWORD PTR [eax-0x397d0b9c]
  40ac98:	pushf  
  40ac99:	xchg   ebx,eax
  40ac9a:	sar    DWORD PTR [esp+ebx*2],cl
  40ac9d:	push   esi
  40ac9e:	sbb    BYTE PTR [edx+ecx*1-0x4efc5b52],ah
  40aca5:	adc    bl,BYTE PTR [esi+0x1c]
  40aca8:	adc    DWORD PTR [edi],esp
  40acaa:	mov    al,0xb2
  40acac:	clc    
  40acad:	daa    
  40acae:	stc    
  40acaf:	mov    cl,0x8d
  40acb1:	inc    edx
  40acb2:	mul    esp
  40acb4:	outs   dx,BYTE PTR ds:[esi]
  40acb5:	pop    ecx
  40acb6:	add    al,BYTE PTR [esi+ebp*2+0x4f]
  40acba:	sbb    al,0xe6
  40acbd:	das    
  40acbe:	outs   dx,DWORD PTR ds:[esi]
  40acbf:	jmp    0x40acc5
  40acc1:	fld    DWORD PTR [edx+eiz*8-0x35439cff]
  40acc8:	aaa    
  40acc9:	imul   eax,eax,0x8
  40accc:	fwait
  40accd:	outs   dx,DWORD PTR ds:[esi]
  40acce:	(bad)  
  40accf:	hlt    
  40acd0:	loopne 0x40ac7a
  40acd2:	lea    edi,[eax]
  40acd4:	dec    eax
  40acd5:	shl    BYTE PTR [ecx-0x7e1f8404],cl
  40acdb:	pop    ecx
  40acdc:	sbb    bh,BYTE PTR [eax+0x2cd2f91]
  40ace2:	xor    BYTE PTR [ecx-0x80],dh
  40ace5:	inc    ecx
  40ace6:	mov    al,0x15
  40ace8:	ficomp DWORD PTR [eax+0x5f1a908d]
  40acee:	sub    eax,0xb23c1595
  40acf3:	jmp    0xb2badfcd
  40acf8:	cld    
  40acf9:	addr16 push cs
  40acfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acfc:	mov    ds:0x5af94849,al
  40ad01:	ret    0x4823
  40ad04:	hlt    
  40ad05:	mov    al,ds:0x117a31cf
  40ad0a:	imul   ebx,DWORD PTR [ecx+edx*8-0x30],0x4eb48673
  40ad12:	bound  edi,QWORD PTR [eax+0x195b732a]
  40ad18:	lea    esp,[esi-0x5b]
  40ad1b:	lahf   
  40ad1c:	push   ss
  40ad1d:	and    esp,DWORD PTR [eax+0x39]
  40ad20:	add    esi,DWORD PTR [edi-0x21c85b65]
  40ad26:	popa   
  40ad27:	mov    ecx,0x1a743b88
  40ad2c:	pop    ebx
  40ad2d:	ins    BYTE PTR es:[edi],dx
  40ad2e:	jns    0x40accc
  40ad30:	in     al,0xc1
  40ad32:	xchg   edx,eax
  40ad33:	mov    esp,DWORD PTR [eax]
  40ad35:	xchg   esi,eax
  40ad36:	cs aaa 
  40ad38:	cmp    dl,BYTE PTR ds:0xb4e93190
  40ad3e:	out    0x3,eax
  40ad40:	xchg   edx,eax
  40ad41:	jo     0x40ada5
  40ad43:	xchg   edx,eax
  40ad44:	fdiv   QWORD PTR [edi-0x33398455]
  40ad4a:	jns    0x40acf4
  40ad4c:	cdq    
  40ad4d:	ret    
  40ad4e:	mov    ebp,0x42915faa
  40ad53:	in     eax,dx
  40ad54:	push   ecx
  40ad55:	(bad)  
  40ad56:	mov    edi,DWORD PTR [ebx+esi*4+0x37665907]
  40ad5d:	sbb    ah,dl
  40ad5f:	or     ebx,DWORD PTR [ecx-0x64]
  40ad62:	mov    ch,0x3b
  40ad64:	cld    
  40ad65:	sbb    eax,0x57412b78
  40ad6a:	mov    BYTE PTR [eax-0x21],ch
  40ad6d:	pop    ecx
  40ad6e:	sti    
  40ad6f:	or     BYTE PTR [edx+0x6f],bh
  40ad72:	je     0x40ad23
  40ad74:	pushf  
  40ad75:	adc    al,0x5a
  40ad77:	js     0x40ad3d
  40ad79:	xchg   DWORD PTR ds:0x66b3bc8e,esp
  40ad7f:	shl    BYTE PTR [edx],cl
  40ad81:	cdq    
  40ad82:	jnp    0x40ad62
  40ad84:	out    0x67,al
  40ad86:	jb     0x40ade1
  40ad88:	mov    bl,0x1f
  40ad8a:	sub    eax,0x64454c5
  40ad8f:	inc    edi
  40ad90:	pop    ebx
  40ad91:	add    dh,BYTE PTR [eax+0xa]
  40ad94:	cmp    DWORD PTR [ecx-0x74cefe3a],0xffffffb7
  40ad9b:	pop    edi
  40ad9c:	push   edx
  40ad9d:	mov    al,BYTE PTR fs:[esi-0x37]
  40ada1:	pop    ebx
  40ada2:	cmp    esp,DWORD PTR [edx+0x1d]
  40ada5:	mov    WORD PTR gs:[esi+0x7],?
  40ada9:	push   edi
  40adaa:	pop    ebx
  40adab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adac:	mov    eax,0x10ef57c
  40adb1:	inc    ecx
  40adb2:	mov    ch,0xf0
  40adb4:	jo     0x40ae03
  40adb6:	inc    ecx
  40adb7:	and    al,ah
  40adb9:	cmc    
  40adba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adbb:	lahf   
  40adbc:	div    DWORD PTR [ebx-0x32]
  40adbf:	jmp    0x40ad4b
  40adc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adc2:	push   esi
  40adc3:	leave  
  40adc4:	mov    esi,0x5cd7586
  40adc9:	pop    es
  40adca:	scas   eax,DWORD PTR es:[edi]
  40adcb:	sbb    eax,DWORD PTR [ecx*1+0x53376801]
  40add2:	into   
  40add3:	xchg   ecx,eax
  40add4:	push   edi
  40add5:	mov    esp,0x743d4997
  40adda:	mov    esp,0x6d7362a3
  40addf:	jecxz  0x40adc2
  40ade1:	lea    ebx,[esi-0x1f5b2279]
  40ade7:	mov    ebp,0x48c532c5
  40adec:	sub    eax,0xa057212b
  40adf1:	enter  0xa7b,0xf7
  40adf5:	popf   
  40adf6:	das    
  40adf7:	les    ebp,FWORD PTR [ecx]
  40adf9:	sbb    eax,0x3d918e3e
  40adfe:	lds    ecx,FWORD PTR [ebx+0x6ceed43b]
  40ae04:	xchg   edi,eax
  40ae05:	cmp    ecx,ecx
  40ae07:	fld    TBYTE PTR [esi-0x2779645b]
  40ae0d:	sbb    eax,0x8f0a6c2
  40ae12:	jb     0x40ae29
  40ae14:	test   BYTE PTR [ecx+ebp*8-0x2e432965],0x37
  40ae1c:	das    
  40ae1d:	clc    
  40ae1e:	pop    eax
  40ae1f:	aaa    
  40ae20:	xor    dl,BYTE PTR [eax]
  40ae22:	int3   
  40ae23:	cdq    
  40ae24:	cli    
  40ae25:	mov    ch,0xc8
  40ae27:	shl    bh,1
  40ae29:	pop    edx
  40ae2a:	xchg   DWORD PTR [edx],ebp
  40ae2c:	and    eax,0x54d7d824
  40ae31:	das    
  40ae32:	in     al,0x64
  40ae34:	loop   0x40ae11
  40ae36:	jle    0x40aea5
  40ae38:	je     0x40ae81
  40ae3a:	adc    eax,0xe4b6ac3
  40ae3f:	and    ecx,DWORD PTR [ebp-0x27]
  40ae42:	jmp    0x40ae89
  40ae44:	call   0xd859:0x2683dd13
  40ae4b:	cmp    eax,0x7895c6f
  40ae50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae51:	jp     0x40ae4a
  40ae53:	dec    edi
  40ae54:	cmp    DWORD PTR [edx-0x213deb7b],edx
  40ae5a:	aam    0xc
  40ae5c:	pop    ebx
  40ae5d:	int    0x95
  40ae5f:	jmp    0x289b:0x56a1074c
  40ae66:	inc    edx
  40ae67:	sub    eax,0xa3b88c41
  40ae6c:	cli    
  40ae6d:	dec    ebx
  40ae6e:	int    0x57
  40ae70:	push   ds
  40ae71:	xor    BYTE PTR [ecx-0x4f60ac2c],al
  40ae77:	rcl    DWORD PTR [edx+0x3a9418fa],0x7c
  40ae7e:	cmp    al,0x85
  40ae80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae81:	jp     0x40ae22
  40ae83:	jle    0x40ae9a
  40ae85:	fst    QWORD PTR [edx+0x76]
  40ae88:	jl     0x40aef2
  40ae8a:	ja     0x40aebc
  40ae8c:	lock pop ss
  40ae8e:	fistp  WORD PTR [ecx+0x59]
  40ae91:	cdq    
  40ae92:	repnz sbb DWORD PTR [eax-0x6cabb077],eax
  40ae99:	pop    edx
  40ae9a:	adc    al,0x7
  40ae9c:	in     al,0x1
  40ae9e:	lar    edi,WORD PTR [edi-0x638159d7]
  40aea5:	xchg   edi,eax
  40aea6:	hlt    
  40aea7:	aas    
  40aea8:	sbb    eax,0x3e841e3a
  40aead:	fcom   st(2)
  40aeaf:	or     bl,ah
  40aeb1:	ror    ebx,cl
  40aeb3:	int3   
  40aeb4:	arpl   WORD PTR [eax-0x14],di
  40aeb7:	dec    esp
  40aeb8:	int3   
  40aeb9:	mov    ebp,0x58908272
  40aebe:	rcl    DWORD PTR [ebx-0x1aa06168],1
  40aec4:	inc    esi
  40aec5:	sbb    ch,BYTE PTR [edi]
  40aec7:	into   
  40aec8:	add    DWORD PTR [eax-0xba607f2],0xe600edc4
  40aed2:	jecxz  0x40af37
  40aed4:	xchg   edx,eax
  40aed5:	pushf  
  40aed6:	pusha  
  40aed7:	and    BYTE PTR [esi],0xc9
  40aeda:	mov    DWORD PTR [esi-0x5b],0xae9e2d9a
  40aee1:	xor    ch,BYTE PTR [esi]
  40aee3:	imul   edx,eax,0xffffffb8
  40aee6:	loopne 0x40aef8
  40aee8:	cmp    al,BYTE PTR ds:0x134299ee
  40aeee:	jmp    0xf4ca2432
  40aef3:	mov    esi,0x9cae546c
  40aef8:	test   dl,cl
  40aefa:	(bad)  
  40aefb:	(bad)  
  40aefc:	out    dx,eax
  40aefd:	sbb    al,0xb9
  40aeff:	adc    cl,BYTE PTR cs:[ebp-0x740ee5a8]
  40af06:	or     DWORD PTR [ebp+esi*8+0x39a4766],ebx
  40af0d:	inc    esp
  40af0e:	popf   
  40af0f:	xor    eax,0xc88735e5
  40af14:	aas    
  40af15:	leave  
  40af16:	aas    
  40af17:	sub    ebx,edx
  40af19:	mov    bh,0x83
  40af1b:	pop    ebp
  40af1c:	dec    eax
  40af1d:	or     edi,esp
  40af1f:	dec    esi
  40af20:	repz pop ebp
  40af22:	mov    ebx,0xacd59674
  40af27:	sbb    cl,bl
  40af29:	pop    ecx
  40af2a:	hlt    
  40af2b:	adc    eax,0xb31777d5
  40af30:	cmp    DWORD PTR [ebp-0xf],edi
  40af33:	pop    ecx
  40af34:	fwait
  40af35:	sub    DWORD PTR [esi],esp
  40af37:	or     bh,0xd0
  40af3a:	dec    ecx
  40af3b:	or     DWORD PTR [ebp+0x29],ecx
  40af3e:	xchg   esp,eax
  40af3f:	aam    0x47
  40af41:	jmp    0xec49abaa
  40af46:	or     ch,ah
  40af48:	nop
  40af49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af4a:	inc    esp
  40af4b:	push   esi
  40af4c:	pop    edx
  40af4d:	sbb    esi,DWORD PTR [edx]
  40af4f:	adc    al,0x4d
  40af51:	(bad)  
  40af52:	scas   al,BYTE PTR es:[edi]
  40af53:	or     bl,BYTE PTR [edx-0x817e16e]
  40af59:	add    bl,BYTE PTR [ebp+0x69]
  40af5c:	lods   eax,DWORD PTR ds:[esi]
  40af5d:	add    edx,DWORD PTR ss:[edi-0x51136ab]
  40af64:	outs   dx,BYTE PTR ds:[esi]
  40af65:	jmp    0x40aeed
  40af67:	call   0xa1e3103c
  40af6c:	into   
  40af6d:	call   0xa0a6334
  40af72:	push   esp
  40af73:	in     al,dx
  40af74:	outs   dx,DWORD PTR ds:[esi]
  40af75:	stc    
  40af76:	sbb    al,0xff
  40af78:	inc    edx
  40af79:	jp     0x40af55
  40af7b:	test   al,0xe5
  40af7d:	es xor eax,0x5372be7c
  40af83:	adc    eax,0x2c2cebeb
  40af88:	bound  ebx,QWORD PTR ds:[esi-0x4892afc8]
  40af8f:	popa   
  40af90:	mov    edx,0x5ebf2cbf
  40af95:	lea    esi,[edx+edx*1]
  40af98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af99:	add    ecx,DWORD PTR [edi+0x3ebb96e]
  40af9f:	out    0x5b,al
  40afa1:	add    al,0x74
  40afa3:	push   esi
  40afa4:	sbb    bh,BYTE PTR [edi+0x1a6e47bb]
  40afaa:	fwait
  40afab:	pusha  
  40afac:	stc    
  40afad:	mov    ds:0x91c2ee95,al
  40afb2:	or     al,0x24
  40afb4:	cmp    BYTE PTR [ebx],cl
  40afb6:	ins    BYTE PTR es:[edi],dx
  40afb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afb8:	in     eax,dx
  40afb9:	pop    esp
  40afba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afbb:	int    0x94
  40afbd:	sub    eax,0x1fcd6b67
  40afc2:	ss fwait
  40afc4:	cwde   
  40afc5:	adc    ch,dl
  40afc7:	mov    ds,WORD PTR [ebx]
  40afc9:	dec    ebx
  40afca:	cmp    edi,DWORD PTR [edx]
  40afcc:	mov    esi,0x6fad46c1
  40afd1:	ror    bh,1
  40afd3:	hlt    
  40afd4:	pop    edi
  40afd5:	xchg   ebp,eax
  40afd6:	retf   0x3b2
  40afd9:	fs out 0x9c,al
  40afdc:	pop    ebx
  40afdd:	(bad)  
  40afde:	call   0xf2f0298b
  40afe3:	xor    al,0x6d
  40afe5:	test   bl,dl
  40afe7:	push   ebx
  40afe8:	sub    ecx,DWORD PTR [ecx-0x7b75b1bd]
  40afee:	jl     0x40afb6
  40aff0:	std    
  40aff1:	mov    ch,BYTE PTR [edi+0x4fd2c4d4]
  40aff7:	arpl   WORD PTR [ebp+0x6e],di
  40affa:	loopne 0x40afcd
  40affc:	mov    ?,WORD PTR [ecx+edi*1+0x24]
  40b000:	pushf  
  40b001:	jmp    0xe68c7917
  40b006:	mov    al,ds:0x5f574701
  40b00b:	push   0xfffffffc
  40b00d:	mov    ds:0x3d0d794d,al
  40b012:	test   eax,0xc47cc5c1
  40b017:	imul   esp,DWORD PTR [ebp-0x58],0xd09152aa
  40b01e:	mov    al,0x3f
  40b020:	mov    esi,0xbb6e016d
  40b025:	add    dh,BYTE PTR [eax]
  40b027:	stos   DWORD PTR es:[edi],eax
  40b028:	scas   al,BYTE PTR es:[edi]
  40b029:	rcl    BYTE PTR [esi+0x377a2669],cl
  40b02f:	xchg   ebp,eax
  40b030:	ja     0x40afce
  40b032:	sub    edx,DWORD PTR [ebx-0x7862cfb5]
  40b038:	shl    BYTE PTR [eax+0x77],cl
  40b03b:	shl    edi,cl
  40b03d:	pushf  
  40b03e:	(bad)  
  40b03f:	aad    0x8a
  40b041:	add    bh,BYTE PTR [edi-0x62543330]
  40b047:	dec    ebp
  40b048:	and    al,0x98
  40b04a:	pop    edi
  40b04b:	mov    dl,0xf5
  40b04d:	ds sub eax,0xdebd40f5
  40b053:	mov    ah,0xd2
  40b055:	popf   
  40b056:	xor    BYTE PTR [esi+0x4b653d20],bh
  40b05c:	lods   al,BYTE PTR ds:[esi]
  40b05d:	das    
  40b05e:	lea    eax,[ebp+0x2d9005a0]
  40b064:	call   0xc142:0xc406d798
  40b06b:	jp     0x40b0cb
  40b06d:	pop    ebx
  40b06e:	call   FWORD PTR ds:0xd1f8cf35
  40b074:	dec    esp
  40b075:	mov    ds:0x63e2cd2e,eax
  40b07a:	sub    DWORD PTR [ebp+0x23f5c33],edx
  40b080:	bound  ecx,QWORD PTR ds:0xdcab72b6
  40b086:	(bad)  
  40b087:	xchg   ebp,eax
  40b088:	pop    esp
  40b089:	out    dx,eax
  40b08a:	jo     0x40b03a
  40b08c:	xor    edx,DWORD PTR [edi+0x708e4b68]
  40b092:	mov    ecx,0x47896b36
  40b097:	dec    edi
  40b098:	jg     0x40b0e9
  40b09a:	push   edx
  40b09b:	add    al,0x6b
  40b09d:	xchg   ecx,eax
  40b09e:	(bad)  
  40b09f:	pop    ds
  40b0a0:	adc    esp,DWORD PTR [edi+0x6d1b0a60]
  40b0a6:	mov    ch,bl
  40b0a8:	xor    DWORD PTR [esi],edx
  40b0aa:	call   0xb4d7c8a7
  40b0af:	fild   DWORD PTR [eax+0x658b27a1]
  40b0b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0b6:	add    BYTE PTR [ebx],bh
  40b0b8:	cmp    eax,0xa9b91c56
  40b0bd:	mov    ecx,0x6a1ca806
  40b0c2:	test   al,0x3e
  40b0c4:	mov    eax,0x66f206fc
  40b0c9:	mov    edi,es
  40b0cb:	imul   esi,DWORD PTR [ebp-0x1e],0xffffffd0
  40b0cf:	(bad)  
  40b0d0:	xchg   ecx,eax
  40b0d1:	xor    DWORD PTR [ebp-0x6d],edi
  40b0d4:	xchg   edi,eax
  40b0d5:	sub    esi,edi
  40b0d7:	sti    
  40b0d8:	inc    esp
  40b0d9:	sbb    BYTE PTR [ebx+0x52e07eca],dh
  40b0df:	lock jmp 0xbb9eaba7
  40b0e5:	int3   
  40b0e6:	jl     0x40b167
  40b0e8:	pop    edi
  40b0e9:	dec    esp
  40b0ea:	loop   0x40b110
  40b0ec:	jl     0x40b0fa
  40b0ee:	ja     0x40b0e5
  40b0f0:	jo     0x40b127
  40b0f2:	push   cs
  40b0f3:	sub    ecx,DWORD PTR [ecx+ecx*1+0x71]
  40b0f7:	mov    WORD PTR [esi],?
  40b0f9:	ins    DWORD PTR es:[edi],dx
  40b0fa:	out    0xf9,eax
  40b0fc:	and    BYTE PTR [edi+0x7589d0d8],al
  40b102:	adc    eax,0xe5360898
  40b107:	push   edi
  40b108:	mov    ebx,0x13b2c025
  40b10d:	mov    esp,0xa4ad0c2a
  40b112:	push   esp
  40b113:	outs   dx,BYTE PTR ds:[si]
  40b115:	add    eax,0x79bb64da
  40b11a:	(bad)  
  40b11b:	and    al,0x30
  40b11d:	imul   ecx,DWORD PTR [eax-0x139420b0],0x64
  40b124:	mov    ds:0xaa502c21,al
  40b129:	pop    ecx
  40b12a:	cwde   
  40b12b:	mov    edx,0x401df28e
  40b130:	pop    edi
  40b131:	mov    ebx,0x3310b90e
  40b136:	in     eax,dx
  40b137:	xchg   esi,eax
  40b138:	push   esi
  40b139:	sub    edi,DWORD PTR [ecx-0x2010da9]
  40b13f:	sub    bh,ch
  40b141:	in     eax,dx
  40b142:	mov    bh,0xab
  40b144:	mov    bh,0xbb
  40b146:	(bad)
  40b149:	cmp    BYTE PTR [edi-0x34d5fb9f],ah
  40b14f:	inc    edi
  40b150:	mov    bl,0xa
  40b152:	mov    eax,cs:0x3c4d8807
  40b158:	fisttp WORD PTR [ecx+edi*8]
  40b15b:	mov    dl,0x3
  40b15d:	test   DWORD PTR [eax],ebx
  40b15f:	ror    DWORD PTR [edx],0xb9
  40b162:	es pop ebp
  40b164:	(bad)  
  40b165:	xor    cl,dl
  40b167:	push   0x29
  40b169:	sub    ax,0xd8e8
  40b16d:	out    dx,eax
  40b16e:	js     0x40b191
  40b170:	aaa    
  40b171:	pop    edx
  40b172:	lods   al,BYTE PTR ds:[esi]
  40b173:	jo     0x40b1b5
  40b175:	retf   0x1f23
  40b178:	js     0x40b15f
  40b17a:	in     eax,dx
  40b17b:	in     eax,dx
  40b17c:	xchg   ebx,eax
  40b17d:	out    dx,eax
  40b17e:	add    DWORD PTR [ebp-0x26],ecx
  40b181:	jne    0x40b1e1
  40b183:	daa    
  40b184:	out    dx,al
  40b185:	(bad)
  40b189:	lahf   
  40b18a:	js     0x40b1de
  40b18c:	out    0xf6,eax
  40b18e:	aas    
  40b18f:	dec    eax
  40b191:	(bad)  
  40b194:	lock jecxz 0x40b154
  40b197:	pop    ebx
  40b198:	mov    ah,0x9a
  40b19a:	(bad)  
  40b19b:	outs   dx,DWORD PTR ds:[esi]
  40b19c:	xchg   edx,eax
  40b19d:	or     ah,BYTE PTR [edx]
  40b19f:	fadd   DWORD PTR [eax-0x52]
  40b1a2:	or     BYTE PTR [edx],al
  40b1a4:	pop    ebx
  40b1a5:	(bad)  
  40b1a6:	mov    bh,0x46
  40b1a8:	ja     0x40b16c
  40b1aa:	out    dx,al
  40b1ab:	push   es
  40b1ac:	sub    BYTE PTR [ebp-0x4751fc00],ch
  40b1b2:	imul   esi,DWORD PTR [ebp-0xa44f403],0xe65f824c
  40b1bc:	pop    esp
  40b1bd:	call   0x2a2d:0x26a8eb03
  40b1c4:	pop    esi
  40b1c5:	xor    eax,0x12405510
  40b1ca:	dec    edi
  40b1cb:	ret    
  40b1cc:	dec    edi
  40b1cd:	aaa    
  40b1ce:	sbb    bh,dh
  40b1d0:	call   DWORD PTR [edi+0x1d]
  40b1d3:	sti    
  40b1d4:	or     esi,DWORD PTR [edx-0x23a969c6]
  40b1da:	ss mov esp,0xa3c074d
  40b1e0:	ss jecxz 0x40b239
  40b1e3:	mov    edi,0xcc2bad91
  40b1e8:	mov    DWORD PTR [ebx-0x3bafe0af],ebx
  40b1ee:	dec    edx
  40b1ef:	cmc    
  40b1f0:	nop
  40b1f1:	and    al,0xb6
  40b1f3:	aas    
  40b1f4:	aam    0x5b
  40b1f6:	push   ebx
  40b1f7:	pop    eax
  40b1f8:	cld    
  40b1f9:	xchg   edx,eax
  40b1fa:	shl    BYTE PTR [ecx+edi*4-0x5c],1
  40b1fe:	fisttp QWORD PTR [ecx-0x3a4d4f07]
  40b204:	idiv   BYTE PTR [edi+0x7b]
  40b207:	adc    BYTE PTR [esi],dl
  40b209:	cdq    
  40b20a:	cmp    DWORD PTR [edx+0x1c],ebx
  40b20d:	fs inc ebp
  40b20f:	fimul  DWORD PTR [edi-0x167c7389]
  40b215:	std    
  40b216:	push   ds
  40b217:	jae    0x40b211
  40b219:	sub    al,0x7d
  40b21b:	fisubr DWORD PTR [edx+0x6b]
  40b21e:	inc    edx
  40b21f:	test   al,0xe2
  40b221:	mov    ds:0x7343b31c,al
  40b226:	shr    DWORD PTR [ebp+0x312c3c4a],1
  40b22c:	test   BYTE PTR [ebx-0x72],ah
  40b22f:	inc    ebp
  40b230:	aam    0xa
  40b232:	mov    gs,WORD PTR [esi+ecx*8-0x3ece7181]
  40b239:	inc    edi
  40b23a:	test   eax,0xc317dbea
  40b23f:	mov    eax,0xf87b5614
  40b244:	inc    esi
  40b245:	es xor ebx,ebp
  40b248:	jge    0x40b20f
  40b24a:	lds    ecx,FWORD PTR [ecx-0x320319bc]
  40b250:	fdivrp st(0),st
  40b252:	cmp    BYTE PTR [ecx],bl
  40b254:	dec    ebx
  40b255:	jl     0x40b2b9
  40b257:	inc    ecx
  40b258:	jmp    0xeff5a047
  40b25d:	shl    ecx,1
  40b25f:	nop
  40b260:	imul   ebp,DWORD PTR [ebx],0xdf122b36
  40b266:	test   BYTE PTR [edi],dl
  40b268:	dec    eax
  40b269:	scas   al,BYTE PTR es:[edi]
  40b26a:	mov    eax,ds:0x58cd8533
  40b26f:	cmp    al,bl
  40b271:	scas   eax,DWORD PTR es:[edi]
  40b272:	push   ebx
  40b273:	(bad)  
  40b274:	cli    
  40b275:	int    0x3d
  40b277:	fisub  DWORD PTR [edx-0x668cdb17]
  40b27d:	test   BYTE PTR [ecx-0x2aaed5ba],dl
  40b283:	outs   dx,BYTE PTR ds:[esi]
  40b284:	jmp    DWORD PTR [edi+edx*4]
  40b287:	inc    edi
  40b288:	repz scas al,BYTE PTR es:[edi]
  40b28a:	push   ecx
  40b28b:	cmc    
  40b28c:	lds    esi,FWORD PTR [eax]
  40b28e:	adc    BYTE PTR [esi],0x58
  40b291:	and    ecx,esp
  40b293:	mov    ecx,0x10dd94fe
  40b298:	retf   0xfbc8
  40b29b:	mov    cs,WORD PTR [ebp+0x75]
  40b29e:	cmp    al,bl
  40b2a0:	pop    edi
  40b2a1:	pusha  
  40b2a2:	dec    ecx
  40b2a3:	fist   DWORD PTR [eax+esi*2+0x360826bb]
  40b2aa:	jae    0x40b2d7
  40b2ac:	xor    BYTE PTR [edi-0x79],ch
  40b2af:	sti    
  40b2b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2b1:	pop    eax
  40b2b2:	lods   eax,DWORD PTR es:[esi]
  40b2b4:	mov    esi,0xb5d639ec
  40b2b9:	mov    BYTE PTR [ecx+0x47],cl
  40b2bc:	pusha  
  40b2bd:	cmp    esp,ebp
  40b2bf:	push   ecx
  40b2c0:	in     eax,dx
  40b2c1:	add    eax,0xdd2b02ee
  40b2c6:	push   ds
  40b2c7:	jmp    0xf1c8:0x7e550c4f
  40b2ce:	pop    ebx
  40b2cf:	cdq    
  40b2d0:	lahf   
  40b2d1:	add    DWORD PTR [edi+0x44ad8e3b],esp
  40b2d7:	nop
  40b2d8:	sbb    edi,DWORD PTR [esi]
  40b2da:	icebp  
  40b2db:	lahf   
  40b2dc:	outs   dx,DWORD PTR ds:[esi]
  40b2dd:	clc    
  40b2de:	loopne 0x40b2c5
  40b2e0:	jg     0x40b357
  40b2e2:	in     al,dx
  40b2e3:	mov    eax,0x1215fde3
  40b2e8:	mov    gs,WORD PTR gs:[esi-0x78]
  40b2ec:	jle    0x40b29f
  40b2ee:	in     eax,dx
  40b2ef:	js     0x40b318
  40b2f1:	pushf  
  40b2f2:	mov    bh,dl
  40b2f4:	xor    bh,BYTE PTR [edi-0x7e]
  40b2f7:	jmp    0x133e6f35
  40b2fc:	lods   al,BYTE PTR ds:[esi]
  40b2fd:	and    DWORD PTR [ecx],ebp
  40b2ff:	loope  0x40b2fb
  40b301:	or     al,0xa2
  40b303:	push   cs
  40b304:	dec    edx
  40b305:	leave  
  40b306:	hlt    
  40b307:	int3   
  40b308:	adc    eax,0x5d92b8b6
  40b30d:	inc    esi
  40b30e:	imul   edx,ecx,0x232e2ca4
  40b314:	and    al,0xc0
  40b316:	jg     0x40b375
  40b318:	(bad)  ds:0x2d6d8217
  40b31e:	sahf   
  40b31f:	jp     0x40b35c
  40b321:	in     al,0x45
  40b323:	cmp    eax,esi
  40b325:	cmp    eax,0xd17bc4d6
  40b32a:	push   ebx
  40b32b:	jo     0x40b2f7
  40b32d:	push   ss
  40b32e:	add    ebp,ebx
  40b330:	add    al,0x52
  40b332:	scas   eax,DWORD PTR es:[edi]
  40b333:	add    al,0x86
  40b335:	out    dx,al
  40b336:	sub    eax,0xb0a33323
  40b33b:	sar    BYTE PTR [edi],1
  40b33d:	dec    ebp
  40b33e:	stc    
  40b33f:	xor    al,0x5a
  40b341:	cs jmp 0x40b381
  40b344:	inc    edx
  40b345:	and    ebx,DWORD PTR [ebx-0x6efbdbad]
  40b34b:	jne    0x40b3b3
  40b34d:	xlat   BYTE PTR ds:[ebx]
  40b34e:	pop    edx
  40b34f:	repz and eax,0x5951d848
  40b355:	sbb    eax,0x5895227d
  40b35a:	pop    ds
  40b35b:	sahf   
  40b35c:	add    cl,ah
  40b35e:	sbb    BYTE PTR [edi-0x34696f45],bl
  40b364:	pop    ebp
  40b365:	sahf   
  40b366:	lahf   
  40b367:	daa    
  40b368:	mov    dl,0x1a
  40b36a:	mov    al,ds:0xeada5849
  40b36f:	scas   eax,DWORD PTR es:[edi]
  40b370:	pop    ebp
  40b371:	lods   al,BYTE PTR ds:[esi]
  40b372:	xor    DWORD PTR ds:[edx],eax
  40b375:	int3   
  40b376:	sub    esi,edi
  40b378:	mov    al,0xac
  40b37a:	add    BYTE PTR [esi],cl
  40b37c:	add    eax,0xf73c049f
  40b381:	jp     0x40b3ef
  40b383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b384:	and    BYTE PTR [eax+0x20d953d0],ch
  40b38a:	add    al,0xa5
  40b38c:	int3   
  40b38d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b38e:	mov    edi,0x89974d5e
  40b393:	fistp  DWORD PTR [edx-0x50]
  40b396:	inc    eax
  40b397:	and    BYTE PTR [ecx+0x7b],dh
  40b39a:	pusha  
  40b39b:	hlt    
  40b39c:	ins    BYTE PTR es:[edi],dx
  40b39d:	test   al,0xfe
  40b39f:	daa    
  40b3a0:	mov    al,ds:0x176ccaa1
  40b3a5:	push   eax
  40b3a6:	sub    eax,0x175d3abb
  40b3ab:	pop    edx
  40b3ac:	sub    DWORD PTR [edi-0x1e764f50],edi
  40b3b2:	mov    esi,?
  40b3b4:	push   0x62e2faba
  40b3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ba:	inc    BYTE PTR [esi+0x3a]
  40b3bd:	ficom  DWORD PTR [eax-0x34]
  40b3c0:	test   edx,edi
  40b3c2:	pop    eax
  40b3c3:	and    BYTE PTR [ebp-0x32],cl
  40b3c6:	and    DWORD PTR [ebx-0x48],0x492dcc93
  40b3cd:	or     esi,DWORD PTR [edi-0x26]
  40b3d0:	mov    eax,0x265b1d9a
  40b3d5:	push   ss
  40b3d6:	cmp    al,0xb4
  40b3d8:	repnz xor edi,ebp
  40b3db:	push   ecx
  40b3dc:	je     0x40b41c
  40b3de:	out    dx,al
  40b3df:	jno    0x40b386
  40b3e1:	sub    DWORD PTR [edi],ebx
  40b3e3:	or     esi,0xffffffdd
  40b3e6:	xchg   esp,eax
  40b3e7:	pop    esp
  40b3e8:	adc    bl,BYTE PTR [edx-0x70]
  40b3eb:	push   es
  40b3ec:	loope  0x40b459
  40b3ee:	pop    ecx
  40b3ef:	lock xchg esp,eax
  40b3f1:	out    dx,al
  40b3f2:	mov    ecx,0x80806d9d
  40b3f7:	out    0x42,eax
  40b3f9:	push   ebp
  40b3fa:	repz pop esp
  40b3fc:	out    dx,al
  40b3fd:	mov    eax,ds:0x738bd6c5
  40b402:	and    al,0xee
  40b404:	and    eax,0x95d23f41
  40b409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b40a:	test   DWORD PTR [edx],esi
  40b40c:	add    DWORD PTR [ebp-0x6c],ebx
  40b40f:	push   ebx
  40b410:	iret   
  40b411:	push   0x47
  40b413:	pop    ebp
  40b414:	ret    0x7c30
  40b417:	mov    cl,0x5e
  40b419:	fmul   QWORD PTR [edx-0x33]
  40b41c:	(bad)  
  40b41d:	mov    BYTE PTR [eax-0x5ff867f5],al
  40b423:	push   ebx
  40b424:	sub    ch,BYTE PTR [eax+0x659b6888]
  40b42a:	js     0x40b49a
  40b42c:	mov    DWORD PTR [ebp-0x39a406c2],esp
  40b432:	(bad)  [edi-0x7755103d]
  40b438:	out    dx,eax
  40b439:	lds    edx,FWORD PTR [ebx-0x5]
  40b43c:	and    ebp,DWORD PTR [ebp-0x3902210a]
  40b442:	jmp    0x40b4c2
  40b444:	in     eax,0x82
  40b446:	adc    DWORD PTR [eax],esp
  40b448:	and    DWORD PTR [esi],ecx
  40b44a:	stos   DWORD PTR es:[edi],eax
  40b44b:	mov    ebx,DWORD PTR ds:0x7ce570ca
  40b451:	xchg   ecx,eax
  40b452:	ret    
  40b453:	cdq    
  40b454:	or     ebx,DWORD PTR [ebx]
  40b456:	mov    ds:0xc771db12,eax
  40b45b:	sub    bh,0x28
  40b45e:	js     0x40b3fe
  40b460:	mov    bl,0x66
  40b462:	and    bh,dl
  40b464:	outs   dx,BYTE PTR ds:[esi]
  40b465:	stc    
  40b466:	xor    BYTE PTR [ecx],ah
  40b468:	push   edx
  40b469:	(bad)  
  40b46a:	pop    ecx
  40b46b:	jmp    0x38ee:0xe6546819
  40b472:	mov    ah,0x9a
  40b474:	xor    al,0x20
  40b476:	and    eax,0x5006e104
  40b47b:	gs push ebx
  40b47d:	jmp    0x522be869
  40b482:	add    bl,BYTE PTR [edi-0x32a1efe3]
  40b488:	sbb    DWORD PTR [esp+eiz*8],esi
  40b48b:	adc    BYTE PTR [eax+0x43],0x94
  40b48f:	retf   0xc1e6
  40b492:	addr16 push ecx
  40b494:	xchg   ecx,eax
  40b495:	push   eax
  40b496:	sub    al,0xcd
  40b498:	or     dh,BYTE PTR [ebx]
  40b49a:	enter  0x8f7d,0xa1
  40b49e:	push   ebx
  40b49f:	mov    edi,0x789a1c35
  40b4a4:	ss (bad) 
  40b4a6:	cwde   
  40b4a7:	mov    ecx,DWORD PTR [esi+0x2bef52c8]
  40b4ad:	push   edi
  40b4ae:	jno    0x40b455
  40b4b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4b1:	inc    edi
  40b4b2:	sbb    esp,DWORD PTR [eax+0x5831ee48]
  40b4b8:	adc    al,ch
  40b4ba:	fwait
  40b4bb:	popa   
  40b4bc:	dec    edx
  40b4bd:	sub    BYTE PTR [esi],ch
  40b4bf:	push   ebx
  40b4c0:	dec    esp
  40b4c1:	sub    ebp,DWORD PTR [esi-0xf5a970d]
  40b4c7:	retf   0x287b
  40b4ca:	enter  0xf1f0,0x5a
  40b4ce:	add    bl,cl
  40b4d0:	neg    BYTE PTR [ecx-0x59]
  40b4d3:	(bad)
  40b4d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d7:	mov    bh,BYTE PTR [ebp+0x6c1c9fa9]
  40b4dd:	pop    eax
  40b4de:	sub    ecx,DWORD PTR [edx+0x3eb18608]
  40b4e4:	and    BYTE PTR [eax],0x87
  40b4e7:	psllw  mm7,QWORD PTR [edx+0x16]
  40b4eb:	out    dx,al
  40b4ec:	pop    esp
  40b4ed:	fsubr  DWORD PTR [ebp-0x2a]
  40b4f0:	add    eax,0xaa92dba2
  40b4f5:	(bad)  
  40b4f6:	frndint 
  40b4f8:	adc    al,0xb
  40b4fa:	inc    edi
  40b4fb:	sahf   
  40b4fc:	mov    ds:0x4a77c508,eax
  40b501:	in     al,dx
  40b502:	fsubr  DWORD PTR [edx-0x27b61c5b]
  40b508:	inc    esi
  40b509:	and    eax,DWORD PTR [esi]
  40b50b:	or     eax,0xef895b5f
  40b510:	sub    edx,DWORD PTR [ecx+0x203fad73]
  40b516:	xchg   edx,eax
  40b517:	(bad)  
  40b518:	call   0x8890:0x9b038c6a
  40b51f:	jae    0x40b4f9
  40b521:	push   cs
  40b522:	cmp    al,0x43
  40b525:	add    DWORD PTR [eax+eax*4-0x5a8c60d6],edx
  40b52c:	ret    0x2e2b
  40b52f:	dec    eax
  40b530:	adc    dh,dh
  40b532:	in     eax,dx
  40b533:	inc    di
  40b535:	sub    DWORD PTR [edi+0x7d],0xd7cd35b6
  40b53c:	xor    eax,0x63c80339
  40b541:	adc    eax,esi
  40b543:	and    ecx,ecx
  40b545:	and    al,0xb3
  40b547:	cmp    ch,0x5d
  40b54a:	xchg   bl,dl
  40b54c:	jns    0x40b535
  40b54e:	sub    edx,DWORD PTR [edi+0x5bc0f407]
  40b554:	nop
  40b555:	mov    al,0xf4
  40b557:	leave  
  40b558:	inc    ebp
  40b559:	sub    DWORD PTR [edi+eax*8+0x11],edi
  40b55d:	pop    edi
  40b55e:	jecxz  0x40b554
  40b560:	loopne 0x40b5a6
  40b562:	into   
  40b563:	push   es
  40b564:	xor    BYTE PTR [ecx+0x133a1c22],cl
  40b56a:	sahf   
  40b56b:	ficom  WORD PTR [edx-0x37]
  40b56e:	stos   DWORD PTR es:[edi],eax
  40b56f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b570:	out    dx,eax
  40b571:	out    dx,eax
  40b572:	cmp    edx,edx
  40b574:	jmp    0x3764:0xb520f608
  40b57b:	lds    esp,FWORD PTR [ebp-0x6f]
  40b57e:	mov    bl,0x85
  40b580:	ror    bl,1
  40b582:	inc    ebp
  40b583:	jmp    0xe1d4:0x8cef1792
  40b58a:	xor    al,0x46
  40b58c:	dec    esi
  40b58d:	xchg   ebp,eax
  40b58f:	imul   eax,DWORD PTR [edi],0x9631f03c
  40b595:	xchg   ebx,eax
  40b596:	es mov esp,0x2c7bcfbe
  40b59c:	jo     0x40b562
  40b59e:	hlt    
  40b59f:	out    0x43,eax
  40b5a1:	xor    eax,0x5477dd73
  40b5a6:	sub    dl,BYTE PTR [edi-0x198791c2]
  40b5ac:	inc    edi
  40b5ad:	inc    edx
  40b5ae:	sbb    DWORD PTR [bx+si-0x6c],0xdc6c35e7
  40b5b6:	jo     0x40b55b
  40b5b8:	inc    ebp
  40b5b9:	lea    esi,ss:[ebx+edx*1-0x80]
  40b5be:	retf   0xe492
  40b5c1:	dec    ebx
  40b5c2:	je     0x40b605
  40b5c4:	xchg   BYTE PTR [esi],al
  40b5c6:	std    
  40b5c7:	sbb    edi,DWORD PTR [eax]
  40b5c9:	scas   al,BYTE PTR es:[edi]
  40b5ca:	gs ret 
  40b5cc:	repz inc esi
  40b5ce:	pop    ss
  40b5cf:	pop    esp
  40b5d0:	pop    es
  40b5d1:	pop    ebp
  40b5d2:	enter  0xe4d3,0x12
  40b5d6:	inc    esp
  40b5d7:	xor    DWORD PTR [ebx+0x5820db84],edx
  40b5dd:	aam    0x3d
  40b5df:	push   esp
  40b5e0:	out    0x98,eax
  40b5e2:	adc    BYTE PTR [eax],ch
  40b5e4:	aaa    
  40b5e5:	adc    eax,0xee16e87c
  40b5ea:	ret    
  40b5eb:	adc    BYTE PTR [edx],al
  40b5ed:	mov    WORD PTR [edx],fs
  40b5ef:	xchg   ecx,eax
  40b5f0:	jl     0x40b584
  40b5f2:	pop    esi
  40b5f3:	sbb    dl,BYTE PTR [edx]
  40b5f5:	sahf   
  40b5f6:	mov    ebp,0xa0642ea5
  40b5fb:	push   edx
  40b5fc:	repz jl 0x40b626
  40b5ff:	pop    ds
  40b600:	xchg   edi,eax
  40b601:	mov    ds:0x9ec690b3,al
  40b606:	sbb    BYTE PTR [esi],bl
  40b608:	mov    cl,0x72
  40b60a:	lods   al,BYTE PTR ds:[esi]
  40b60b:	adc    ecx,edi
  40b60d:	push   ds
  40b60e:	int    0x7e
  40b610:	mov    ds:0xff1932ff,al
  40b615:	shr    DWORD PTR [edx-0x5e4c629f],cl
  40b61b:	shr    edx,cl
  40b61d:	xor    al,0xfa
  40b61f:	mov    al,ds:0xf5e13ef4
  40b624:	mov    bh,0xaa
  40b626:	jae    0x40b690
  40b628:	xchg   ecx,eax
  40b629:	pop    eax
  40b62a:	xchg   DWORD PTR [esi-0x1a],ebp
  40b62d:	mov    ebp,0x830795eb
  40b632:	add    ah,BYTE PTR [edx+0x19]
  40b635:	(bad)  
  40b637:	xchg   DWORD PTR [edi+esi*2-0x3bb20950],edx
  40b63e:	xor    BYTE PTR [edi+0x6e],dl
  40b641:	mov    eax,gs
  40b643:	add    al,0x57
  40b645:	div    DWORD PTR [edi+0x6a]
  40b648:	adc    al,0x1e
  40b64a:	out    0x1c,al
  40b64c:	addr16 in al,dx
  40b64e:	jmp    0x40b601
  40b650:	fld    TBYTE PTR [ebx]
  40b652:	inc    ebx
  40b653:	outs   dx,DWORD PTR ds:[esi]
  40b654:	jns    0x40b60b
  40b656:	or     eax,esi
  40b658:	sub    eax,0x510dce02
  40b65d:	stos   BYTE PTR es:[edi],al
  40b65e:	jp     0x40b689
  40b660:	xchg   ecx,eax
  40b661:	ins    DWORD PTR es:[edi],dx
  40b662:	jmp    0x40b6c9
  40b664:	jmp    0x2700de45
  40b669:	enter  0x42d,0x1a
  40b66d:	xor    BYTE PTR [edi],0x4f
  40b670:	mov    DWORD PTR [ecx+0x77a136b5],edx
  40b676:	xor    eax,0x305aacc9
  40b67b:	data16 cld 
  40b67d:	jno    0x40b68e
  40b67f:	xlat   BYTE PTR ds:[ebx]
  40b680:	stc    
  40b681:	jae    0x40b68b
  40b683:	xor    esi,DWORD PTR [edi-0x68]
  40b686:	cmp    DWORD PTR [ebx+eax*1],edi
  40b689:	cli    
  40b68a:	pop    edx
  40b68b:	mov    esi,0xf5f30e41
  40b690:	adc    ebp,ebp
  40b692:	das    
  40b693:	scas   eax,DWORD PTR es:[edi]
  40b694:	mov    edi,0x6f00eaae
  40b699:	fcmovnu st,st(4)
  40b69b:	ret    0x8f77
  40b69e:	(bad)  
  40b69f:	rol    DWORD PTR [eax],1
  40b6a1:	push   cs
  40b6a2:	and    BYTE PTR [esp+esi*8+0x1d78d72],al
  40b6a9:	push   ss
  40b6aa:	pop    ecx
  40b6ab:	outs   dx,BYTE PTR ds:[esi]
  40b6ac:	(bad)  
  40b6ad:	push   ebx
  40b6ae:	sub    esp,DWORD PTR [esi-0x400dc338]
  40b6b4:	cmp    esi,DWORD PTR [ebx]
  40b6b6:	repnz sub esi,DWORD PTR [ecx-0x73]
  40b6ba:	or     al,0x63
  40b6bc:	push   edx
  40b6bd:	lea    ecx,[edi]
  40b6bf:	mov    ds:0x72dad9b4,eax
  40b6c4:	or     eax,0xfdfbeb84
  40b6c9:	rol    DWORD PTR [ebx],1
  40b6cb:	sbb    al,0xa6
  40b6cd:	mov    ds:0x45a2f990,eax
  40b6d2:	stos   DWORD PTR es:[edi],eax
  40b6d3:	loopne 0x40b678
  40b6d5:	mov    cl,0x43
  40b6d7:	(bad)  [edx+esi*4+0x42]
  40b6db:	clc    
  40b6dc:	pushf  
  40b6dd:	ffreep st(2)
  40b6df:	shl    BYTE PTR [edi+0x38],cl
  40b6e2:	popa   
  40b6e3:	xchg   ebx,eax
  40b6e4:	imul   eax,ecx,0x5da25dc7
  40b6ea:	sub    eax,0x74bf9903
  40b6ef:	xchg   esp,eax
  40b6f0:	jecxz  0x40b743
  40b6f2:	sti    
  40b6f3:	pop    eax
  40b6f4:	or     dh,BYTE PTR [edx]
  40b6f6:	jmp    0x425a:0xe104c92a
  40b6fd:	repz in al,dx
  40b6ff:	mov    ecx,0x4021ba3f
  40b704:	lods   al,BYTE PTR ds:[esi]
  40b705:	pusha  
  40b706:	mov    eax,0x676b3eea
  40b70b:	adc    al,0x55
  40b70d:	sub    bh,BYTE PTR [edi+0x1ff70fa]
  40b713:	shl    BYTE PTR [bx+di-0x2726],cl
  40b718:	sub    BYTE PTR [ebx-0x60],0x48
  40b71c:	inc    edx
  40b71d:	cmp    eax,0x1c0df6c2
  40b722:	cwde   
  40b723:	scas   eax,DWORD PTR es:[edi]
  40b724:	mov    ds:0x2c7d551c,eax
  40b729:	jp     0x40b6c3
  40b72b:	xchg   ecx,eax
  40b72c:	in     al,0xb
  40b72e:	out    0xfb,al
  40b730:	clc    
  40b731:	mov    ah,0x27
  40b733:	inc    ebx
  40b734:	mov    al,ds:0x60d404ba
  40b739:	loopne 0x40b6e8
  40b73b:	mov    eax,ds:0x25179441
  40b740:	inc    ebp
  40b741:	int    0x1f
  40b743:	and    al,0x23
  40b745:	mov    edi,db5
  40b748:	or     edx,edi
  40b74a:	jbe    0x40b749
  40b74c:	ss scas eax,DWORD PTR es:[edi]
  40b74e:	cmp    al,0x6d
  40b750:	dec    esi
  40b751:	or     edi,edi
  40b753:	mov    bl,0xbe
  40b755:	or     DWORD PTR [ebp-0x475b3261],0xffffffdd
  40b75c:	jl     0x40b6ff
  40b75e:	je     0x40b70e
  40b760:	stc    
  40b761:	hlt    
  40b762:	ficomp DWORD PTR [ecx+eax*2]
  40b765:	mov    al,ds:0x3424bee0
  40b76a:	sub    ah,BYTE PTR [edi+0x157eaf4c]
  40b770:	and    ecx,DWORD PTR [ecx-0x22]
  40b773:	pop    ds
  40b774:	lods   eax,DWORD PTR ds:[esi]
  40b775:	dec    ebp
  40b776:	(bad)  
  40b777:	cmc    
  40b778:	dec    esi
  40b779:	push   ecx
  40b77a:	inc    ebp
  40b77b:	mov    cl,0x53
  40b77d:	shr    BYTE PTR ds:0xcf008dab,0x98
  40b784:	data16 (bad) 
  40b786:	mov    al,ds:0xf8db777c
  40b78b:	sbb    esp,ebx
  40b78d:	xor    edx,DWORD PTR [ecx-0x2b]
  40b790:	pop    esp
  40b791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b792:	rol    BYTE PTR [ebp+0x30009b97],0x5c
  40b799:	push   0x508ff7f2
  40b79e:	xchg   DWORD PTR [eax-0x19542c66],ecx
  40b7a4:	sub    eax,0x58c40632
  40b7a9:	out    dx,al
  40b7aa:	fsub   QWORD PTR [ebp-0x37]
  40b7ad:	push   es
  40b7ae:	bound  ebp,QWORD PTR [eax]
  40b7b0:	mov    esp,DWORD PTR [esi-0x32]
  40b7b3:	and    esp,DWORD PTR [edx]
  40b7b5:	hlt    
  40b7b6:	gs nop
  40b7b8:	sbb    edx,edi
  40b7ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7bb:	xor    bh,BYTE PTR ds:0x5a7e57db
  40b7c1:	jge    0x40b7f6
  40b7c3:	and    DWORD PTR [esi+esi*1],ebx
  40b7c6:	add    dl,BYTE PTR [edx]
  40b7c8:	pop    edi
  40b7c9:	mov    eax,ds:0xdf85f495
  40b7ce:	mov    eax,0x305dfbcd
  40b7d3:	xor    DWORD PTR [edi+0x32d804d3],ecx
  40b7d9:	scas   eax,DWORD PTR es:[edi]
  40b7da:	idiv   DWORD PTR [ebp-0x2c]
  40b7dd:	sub    dh,BYTE PTR [esi+ecx*2+0x4d]
  40b7e1:	ins    DWORD PTR es:[edi],dx
  40b7e2:	xor    bl,dl
  40b7e4:	sbb    DWORD PTR [ebx+0x7b3863c7],esp
  40b7ea:	int3   
  40b7eb:	adc    eax,0x454a777c
  40b7f0:	xchg   esp,eax
  40b7f1:	jnp    0x40b7ce
  40b7f3:	aam    0xd3
  40b7f5:	gs pop ss
  40b7f7:	sub    eax,0x3de722ab
  40b7fc:	sahf   
  40b7fd:	xor    ecx,edi
  40b7ff:	stos   DWORD PTR es:[edi],eax
  40b800:	cmp    cl,bl
  40b802:	out    dx,al
  40b803:	repz ds jp 0x40b853
  40b807:	in     al,0xe
  40b809:	mov    eax,0xb95f73de
  40b80e:	mov    ds:0xb9fa66bd,eax
  40b813:	mov    ebp,0xeebfcff5
  40b818:	gs jecxz 0x40b7d2
  40b81b:	mov    edi,DWORD PTR [edi+0x43ce9204]
  40b821:	mov    cl,0xc0
  40b823:	dec    esi
  40b824:	mov    al,ds:0xab8f7943
  40b829:	sub    DWORD PTR [ebp+0x8],0x64
  40b82d:	xchg   ecx,eax
  40b82e:	dec    ecx
  40b82f:	retf   
  40b830:	popf   
  40b831:	ror    DWORD PTR [edx-0x43],cl
  40b834:	pop    ebp
  40b835:	test   al,0xd6
  40b837:	xchg   ecx,eax
  40b838:	adc    eax,0x481f0e69
  40b83d:	(bad)  
  40b83e:	outs   dx,BYTE PTR ds:[esi]
  40b83f:	dec    eax
  40b840:	adc    eax,0x105dcc07
  40b845:	sub    ebx,DWORD PTR [ecx-0x64]
  40b848:	test   esp,ebx
  40b84a:	loop   0x40b89d
  40b84c:	(bad)  
  40b84d:	xchg   BYTE PTR [esi],cl
  40b84f:	sar    DWORD PTR [edx-0x5b],0xd0
  40b853:	xor    DWORD PTR [ebx*4+0x50722593],esp
  40b85a:	shl    eax,cl
  40b85c:	mov    ecx,edx
  40b85e:	push   eax
  40b85f:	ins    DWORD PTR es:[edi],dx
  40b860:	push   ebp
  40b861:	jmp    0x40b86e
  40b863:	dec    esi
  40b864:	iret   
  40b865:	fdiv   QWORD PTR [ecx+ecx*8-0x1bccc436]
  40b86c:	push   esi
  40b86d:	mov    cl,0x9e
  40b86f:	lods   al,BYTE PTR ds:[esi]
  40b870:	or     al,0x26
  40b872:	push   cs
  40b873:	mov    eax,0xd1ee1e5d
  40b878:	data16 fadd QWORD PTR [eax-0x63]
  40b87c:	pushf  
  40b87d:	enter  0x7e1b,0x6b
  40b881:	push   ebp
  40b882:	fnsave [esi-0x4d89bed4]
  40b888:	data16 jb 0x40b8b9
  40b88b:	test   BYTE PTR [ebp+0x40],ch
  40b88e:	ret    0xa8bb
  40b891:	pop    edi
  40b892:	into   
  40b893:	inc    ebp
  40b894:	jge    0x40b902
  40b896:	mov    al,0x8a
  40b898:	aaa    
  40b899:	mov    ebx,0xea46de1d
  40b89e:	nop
  40b89f:	dec    eax
  40b8a0:	fcom   QWORD PTR [ecx-0x71119994]
  40b8a6:	mov    edx,0xed9b06ab
  40b8ab:	in     eax,dx
  40b8ac:	sub    BYTE PTR [edx-0x6fe73a8],bl
  40b8b2:	shl    DWORD PTR [edx-0x2c21b191],1
  40b8b8:	aam    0x42
  40b8ba:	push   edx
  40b8bb:	push   eax
  40b8bc:	imul   ebp,DWORD PTR [ecx-0x3cef2602],0xffffff99
  40b8c3:	add    eax,0x77a695f1
  40b8c8:	mov    esp,0x6b3480d8
  40b8cd:	test   BYTE PTR [ecx+0xe],ah
  40b8d0:	xor    DWORD PTR [eax-0x40],esp
  40b8d3:	stos   DWORD PTR es:[edi],eax
  40b8d4:	pop    esi
  40b8d5:	in     eax,0xdf
  40b8d7:	scas   eax,DWORD PTR es:[edi]
  40b8d8:	das    
  40b8d9:	dec    ebx
  40b8da:	test   BYTE PTR [ebx+0x2923349b],bh
  40b8e0:	xlat   BYTE PTR ds:[ebx]
  40b8e1:	jmp    0x106b:0xc2c66996
  40b8e8:	cmp    edx,DWORD PTR [eax]
  40b8ea:	mov    dh,0x66
  40b8ec:	pop    esi
  40b8ed:	sub    BYTE PTR [eax-0x22],0xb9
  40b8f1:	pusha  
  40b8f2:	push   es
  40b8f3:	pushf  
  40b8f4:	inc    ecx
  40b8f5:	dec    BYTE PTR [ebx]
  40b8f7:	test   eax,0xe6211732
  40b8fc:	mov    BYTE PTR [edi+0x7c],dl
  40b8ff:	loopne 0x40b8f5
  40b901:	jmp    0x40b94c
  40b903:	sub    BYTE PTR [edx],0xfe
  40b906:	xchg   edx,eax
  40b907:	or     bh,BYTE PTR [edx+edi*8+0x4edf268]
  40b90e:	add    eax,0x5d8b7fb0
  40b913:	dec    esp
  40b914:	mov    bl,0x6d
  40b916:	inc    ebx
  40b917:	(bad)  
  40b919:	mov    dh,0x72
  40b91b:	ds dec eax
  40b91d:	add    DWORD PTR [ecx+0x6d],ebx
  40b920:	repnz clc 
  40b922:	xor    BYTE PTR [ebx],dl
  40b924:	adc    eax,0xba3a5c01
  40b929:	jmp    0x469bffd0
  40b92e:	cmp    bh,BYTE PTR [edi+0x52ab4738]
  40b934:	mov    ch,0xe0
  40b936:	in     al,dx
  40b937:	cdq    
  40b938:	push   0xcc058b70
  40b93d:	ret    0xe7cd
  40b940:	xchg   ebx,eax
  40b941:	adc    ebx,DWORD PTR [ecx]
  40b943:	pop    ds
  40b944:	sub    eax,0xfafbc3b3
  40b949:	mov    ebp,0xa5979475
  40b94e:	bound  ecx,QWORD PTR [edx]
  40b950:	(bad)  
  40b951:	in     al,dx
  40b952:	arpl   WORD PTR [eax-0x71efb8cf],di
  40b958:	jbe    0x40b98b
  40b95a:	sub    eax,0xe1b7d8fb
  40b95f:	or     ah,BYTE PTR [eax+0x35]
  40b962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b963:	cld    
  40b964:	sub    esi,DWORD PTR [esi+0x41c47532]
  40b96a:	sub    cl,BYTE PTR [ebp-0x7d]
  40b96d:	test   DWORD PTR [eax],edi
  40b96f:	daa    
  40b970:	sbb    dl,BYTE PTR [ebx-0x4e]
  40b973:	mov    edx,0x5a2146ac
  40b978:	dec    eax
  40b979:	mov    bh,0xb6
  40b97b:	fcomp  DWORD PTR [eax+0x77]
  40b97e:	jo     0x40b9e2
  40b980:	lea    esp,[edi+ebp*4-0x78]
  40b984:	dec    ecx
  40b985:	mov    eax,0x1305025a
  40b98a:	mov    esi,?
  40b98c:	pushf  
  40b98d:	stos   DWORD PTR es:[edi],eax
  40b98e:	pusha  
  40b98f:	push   esp
  40b990:	push   esi
  40b991:	repnz add DWORD PTR [ecx+0x394cad8a],ecx
  40b998:	jnp    0x40b938
  40b99a:	add    eax,0x174c2e1b
  40b99f:	int    0x8a
  40b9a1:	data16 jmp 0x40b993
  40b9a4:	int3   
  40b9a5:	jne    0x40b9a7
  40b9a7:	sbb    al,0xcd
  40b9a9:	pop    edi
  40b9aa:	pop    es
  40b9ab:	add    esi,DWORD PTR [edi+0x293bc39a]
  40b9b1:	call   0x1e0d:0x418f90af
  40b9b8:	not    DWORD PTR [eax]
  40b9ba:	fisub  DWORD PTR [eax-0x224ecdeb]
  40b9c0:	icebp  
  40b9c1:	popa   
  40b9c2:	leave  
  40b9c3:	jns    0x40ba0a
  40b9c5:	mov    bl,0x41
  40b9c7:	fisubr DWORD PTR [eax+0x36]
  40b9ca:	inc    ebp
  40b9cb:	jno    0x40b9eb
  40b9cd:	sub    bh,cl
  40b9cf:	push   ecx
  40b9d0:	lahf   
  40b9d1:	sbb    DWORD PTR [ebx+0x64],ecx
  40b9d4:	jmp    DWORD PTR [edx-0x6a]
  40b9d7:	(bad)  
  40b9d8:	pop    ecx
  40b9d9:	pop    esp
  40b9da:	out    0xe1,al
  40b9dc:	and    al,0xae
  40b9de:	push   ss
  40b9df:	add    BYTE PTR [eax+0x35],dl
  40b9e2:	in     eax,dx
  40b9e3:	pop    ss
  40b9e4:	cmp    dl,BYTE PTR [ecx]
  40b9e6:	pop    es
  40b9e7:	icebp  
  40b9e8:	dec    edx
  40b9e9:	retf   0xe8fa
  40b9ec:	xor    ah,BYTE PTR [edi-0x7c9dfc11]
  40b9f2:	pop    ecx
  40b9f3:	jne    0x40ba40
  40b9f5:	adc    eax,0x2f8f2e06
  40b9fa:	jns    0x40b9ba
  40b9fc:	out    dx,al
  40b9fd:	hlt    
  40b9fe:	stos   DWORD PTR es:[edi],eax
  40b9ff:	icebp  
  40ba00:	push   ds
  40ba01:	in     al,dx
  40ba02:	test   al,0x7c
  40ba04:	pop    ebp
  40ba05:	inc    ecx
  40ba06:	mov    cl,0xcb
  40ba08:	pop    edx
  40ba09:	sbb    al,0x8e
  40ba0b:	jnp    0x40ba0f
  40ba0d:	sahf   
  40ba0e:	xor    ch,0x7f
  40ba11:	or     BYTE PTR [esi-0x1ec41220],al
  40ba17:	fcom   st(2)
  40ba19:	stc    
  40ba1a:	enter  0x541,0xed
  40ba1e:	cli    
  40ba1f:	cmp    edi,DWORD PTR [esi+0x6d]
  40ba22:	xchg   esi,eax
  40ba23:	sbb    DWORD PTR [ebx],edi
  40ba25:	mov    eax,DWORD PTR [eax]
  40ba27:	push   0x74a86d13
  40ba2c:	lods   al,BYTE PTR ds:[esi]
  40ba2d:	mov    esp,0xc14250f3
  40ba32:	movntps XMMWORD PTR [esp+ecx*8-0x390ff505],xmm0
  40ba3a:	ficomp WORD PTR [edx]
  40ba3c:	cdq    
  40ba3d:	cld    
  40ba3e:	inc    esp
  40ba3f:	mov    edx,0xaff822b0
  40ba44:	adc    al,0x3e
  40ba46:	add    DWORD PTR [esi-0x53],edi
  40ba49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba4a:	mov    ebp,0x53bef587
  40ba4f:	dec    ecx
  40ba50:	das    
  40ba51:	xor    eax,0xe365ff22
  40ba56:	in     eax,0x6a
  40ba58:	aam    0x24
  40ba5a:	push   esp
  40ba5b:	ins    DWORD PTR es:[edi],dx
  40ba5c:	dec    esp
  40ba5d:	jge    0x40b9ec
  40ba5f:	inc    esi
  40ba60:	ins    DWORD PTR es:[edi],dx
  40ba61:	adc    BYTE PTR [edi+0xbe34643],cl
  40ba67:	mov    eax,DWORD PTR [edi-0x7c]
  40ba6a:	mov    dh,0xaa
  40ba6c:	mov    eax,0xe35c8161
  40ba71:	pop    ebx
  40ba72:	adc    eax,0x94e973cc
  40ba77:	rol    DWORD PTR [edi-0x1a0f7682],0x8f
  40ba7e:	dec    eax
  40ba7f:	push   ecx
  40ba80:	clc    
  40ba81:	mov    edx,0xe4ad44c9
  40ba86:	ret    
  40ba87:	or     al,0xa5
  40ba89:	inc    edx
  40ba8a:	dec    edx
  40ba8b:	xchg   ecx,eax
  40ba8c:	dec    ebx
  40ba8d:	jns    0x40ba24
  40ba8f:	mov    ecx,DWORD PTR [edx]
  40ba91:	cmp    BYTE PTR [eax-0x3c],cl
  40ba94:	and    eax,0x3c2c3a82
  40ba99:	fnstsw WORD PTR gs:[ecx-0x26bf73a]
  40baa0:	lahf   
  40baa1:	jo     0x40bab9
  40baa3:	pop    ebx
  40baa4:	ins    BYTE PTR es:[edi],dx
  40baa5:	mov    edi,0x7975f1ee
  40baaa:	out    0x15,eax
  40baac:	inc    edi
  40baad:	sub    ebp,DWORD PTR [ebx]
  40baaf:	adc    eax,DWORD PTR [esi+eiz*1-0x482ba13c]
  40bab6:	in     al,0x37
  40bab8:	fist   DWORD PTR [esi]
  40baba:	adc    ch,0x5e
  40babd:	jbe    0x40bb14
  40babf:	cld    
  40bac0:	jecxz  0x40ba7b
  40bac2:	outs   dx,BYTE PTR ds:[esi]
  40bac3:	scas   al,BYTE PTR es:[edi]
  40bac4:	retf   
  40bac5:	outs   dx,DWORD PTR ds:[esi]
  40bac6:	mov    al,0x4a
  40bac8:	enter  0xdb0e,0xc2
  40bacc:	jmp    0x85e6:0xd0adfefc
  40bad3:	or     BYTE PTR [esi],ah
  40bad5:	sbb    DWORD PTR [ebx],esp
  40bad7:	mov    bh,0x87
  40bad9:	push   0xffffff83
  40badb:	and    ah,dh
  40badd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bade:	mov    esi,esi
  40bae0:	adc    al,0x94
  40bae2:	(bad)  
  40bae3:	sub    eax,0xc9bb83c1
  40bae8:	inc    esi
  40bae9:	inc    ecx
  40baea:	mul    BYTE PTR [ebx+0x3804f566]
  40baf0:	add    BYTE PTR cs:[edx-0x68a364c4],al
  40baf7:	pusha  
  40baf8:	push   ecx
  40baf9:	stos   DWORD PTR es:[edi],eax
  40bafa:	ret    
  40bafb:	cmp    DWORD PTR [esi*2+0x7a014f22],ebp
  40bb02:	pop    ds
  40bb03:	xchg   ecx,eax
  40bb04:	jae    0x40bb0b
  40bb06:	lods   eax,DWORD PTR ds:[esi]
  40bb07:	ins    BYTE PTR es:[edi],dx
  40bb08:	push   ecx
  40bb09:	or     eax,edi
  40bb0b:	mov    ds:0x265afd62,al
  40bb10:	(bad)  
  40bb11:	imul   edi,ecx,0xffffff82
  40bb14:	sub    BYTE PTR [ecx-0x68],bh
  40bb17:	dec    edi
  40bb18:	jmp    0xb8bf:0xb5fb9530
  40bb1f:	je     0x40bb50
  40bb21:	clc    
  40bb22:	outs   dx,BYTE PTR ds:[esi]
  40bb23:	cmp    esp,edi
  40bb25:	clc    
  40bb26:	push   ss
  40bb27:	sub    esi,DWORD PTR [esi-0x17fc1fed]
  40bb2d:	xor    edi,ebp
  40bb2f:	mul    DWORD PTR [ecx]
  40bb31:	inc    edx
  40bb32:	inc    ecx
  40bb33:	mov    ebp,0xa9d250a9
  40bb38:	int3   
  40bb39:	add    dh,BYTE PTR [ebx+eax*2+0x7d]
  40bb3d:	shr    edi,0x28
  40bb40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb41:	mov    ah,BYTE PTR [esi-0x75]
  40bb44:	jbe    0x40bb96
  40bb46:	fs es dec ebx
  40bb49:	icebp  
  40bb4a:	xor    DWORD PTR [edx-0xe82131c],ebx
  40bb50:	dec    edx
  40bb51:	jmp    0x40baee
  40bb53:	fcom   DWORD PTR [esi+0x76]
  40bb56:	fsincos 
  40bb58:	add    eax,0xc729abb2
  40bb5d:	das    
  40bb5e:	popa   
  40bb5f:	cmp    DWORD PTR [eax-0x67bd19d1],edi
  40bb65:	arpl   ax,dx
  40bb67:	test   al,0x93
  40bb69:	es scas al,BYTE PTR es:[edi]
  40bb6b:	jle    0x40bb77
  40bb6d:	mov    bh,0xaf
  40bb6f:	xchg   ecx,eax
  40bb70:	pop    ds
  40bb71:	fmul   st,st(3)
  40bb73:	dec    eax
  40bb74:	aaa    
  40bb75:	jae    0x40bbd8
  40bb77:	pop    ebx
  40bb78:	cdq    
  40bb79:	mov    ecx,0x23d66b73
  40bb7e:	jns    0x40bb60
  40bb80:	int3   
  40bb81:	xor    BYTE PTR [ebx+0x6],bh
  40bb84:	inc    esi
  40bb85:	out    dx,al
  40bb86:	lea    esp,ds:0xbcd54616
  40bb8c:	inc    eax
  40bb8d:	test   BYTE PTR [esi+edi*2-0x29c54eba],bh
  40bb94:	sti    
  40bb95:	xlat   BYTE PTR ds:[ebx]
  40bb96:	lock adc DWORD PTR [eax],edi
  40bb99:	mov    al,ds:0xd110c12f
  40bb9e:	xlat   BYTE PTR ds:[ebx]
  40bb9f:	repz fnstenv ds:0xa09316bc
  40bba6:	scas   eax,DWORD PTR es:[edi]
  40bba7:	enter  0x3d21,0x93
  40bbab:	mov    dh,BYTE PTR [ecx-0x4f42e0f5]
  40bbb1:	xchg   edi,eax
  40bbb2:	pop    edi
  40bbb3:	mov    ecx,0x1c7de7b6
  40bbb8:	push   ds
  40bbb9:	push   ecx
  40bbba:	jmp    0x40bb90
  40bbbc:	sub    DWORD PTR [edi-0x5d2629c5],edx
  40bbc2:	mov    dl,BYTE PTR [esi+0x56b0bc99]
  40bbc8:	mov    ecx,0x2bcb75fb
  40bbcd:	fiadd  WORD PTR [ebp+0x41]
  40bbd0:	(bad)  
  40bbd1:	xlat   BYTE PTR ds:[ebx]
  40bbd2:	dec    eax
  40bbd3:	ja     0x40bc2e
  40bbd5:	rcl    ah,cl
  40bbd7:	inc    ecx
  40bbd8:	aaa    
  40bbd9:	idiv   DWORD PTR [eax-0x49d970c1]
  40bbdf:	iret   
  40bbe0:	jp     0x40bb62
  40bbe2:	pop    ecx
  40bbe3:	out    0xe9,al
  40bbe5:	mov    esi,0x7e385093
  40bbea:	jo     0x40bc5d
  40bbec:	imul   edi,DWORD PTR [esi+0x33024c34],0x4c
  40bbf3:	rcl    DWORD PTR [ecx],0x21
  40bbf6:	adc    ch,BYTE PTR [edx-0x3ac87f3]
  40bbfc:	mov    esp,DWORD PTR [edx-0x1f]
  40bbff:	or     BYTE PTR [edx-0xdc89022],ah
  40bc05:	bound  esi,QWORD PTR [edi-0x8]
  40bc08:	mov    ds:0x8128f686,al
  40bc0d:	cmp    al,ch
  40bc0f:	cmp    edx,DWORD PTR [edi-0x4dc67571]
  40bc15:	lahf   
  40bc16:	pop    esi
  40bc17:	bound  esp,QWORD PTR [ebx+0x46]
  40bc1a:	jb     0x40bc27
  40bc1c:	iret   
  40bc1d:	lea    ebp,[ecx+ebp*2+0x24]
  40bc21:	in     al,dx
  40bc22:	inc    esi
  40bc23:	adc    esp,DWORD PTR [ecx+eiz*4-0x6520f620]
  40bc2a:	std    
  40bc2b:	imul   ecx,DWORD PTR [ebx],0x2f
  40bc2e:	fiadd  WORD PTR ds:0xf3d7d5cb
  40bc34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc35:	sar    DWORD PTR [esi],cl
  40bc37:	sbb    bh,ch
  40bc39:	cdq    
  40bc3a:	jecxz  0x40bc5d
  40bc3c:	pop    ebp
  40bc3d:	adc    ebp,DWORD PTR [eax-0xe]
  40bc40:	call   0xa8d2bdb9
  40bc45:	loopne 0x40bc98
  40bc47:	cld    
  40bc48:	(bad)  
  40bc49:	daa    
  40bc4a:	imul   edi,esp,0xffffffd4
  40bc4d:	push   ds
  40bc4e:	sub    bl,ah
  40bc50:	call   0x612a:0x1f194d0a
  40bc57:	in     al,0x5a
  40bc59:	das    
  40bc5a:	mov    ecx,0xaa39763d
  40bc5f:	pop    ss
  40bc60:	fistp  DWORD PTR ds:0x605771cc
  40bc66:	outs   dx,DWORD PTR ds:[esi]
  40bc67:	pop    ecx
  40bc68:	xchg   edi,eax
  40bc69:	lea    ecx,[eax]
  40bc6b:	fdivr  DWORD PTR [esi]
  40bc6d:	(bad)  
  40bc6e:	xor    DWORD PTR [eax],eax
  40bc70:	aaa    
  40bc71:	fadd   QWORD PTR [edi-0x1f6e3bee]
  40bc77:	sbb    eax,0x96d06ada
  40bc7c:	sar    ebp,1
  40bc7e:	int    0xcb
  40bc80:	stc    
  40bc81:	out    dx,al
  40bc82:	push   0xffffff9c
  40bc84:	jnp    0x40bcb8
  40bc86:	fdiv   QWORD PTR [edi+0x6c]
  40bc89:	fcmovne st,st(3)
  40bc8b:	shr    BYTE PTR [eax],0xf0
  40bc8e:	call   0x67cf:0x4c8052a1
  40bc95:	xor    ch,BYTE PTR ss:[edi]
  40bc98:	push   0x8780c507
  40bc9d:	lods   al,BYTE PTR ds:[esi]
  40bc9e:	pop    edi
  40bc9f:	push   ebx
  40bca0:	pop    edx
  40bca1:	dec    esp
  40bca2:	sbb    ch,BYTE PTR [eax+0x7e]
  40bca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bca6:	jge    0x40bca8
  40bca8:	ins    BYTE PTR es:[edi],dx
  40bca9:	push   eax
  40bcaa:	inc    esp
  40bcab:	js     0x40bc7b
  40bcad:	cwde   
  40bcae:	mov    WORD PTR [esi],ds
  40bcb0:	adc    DWORD PTR [ecx-0x20],esp
  40bcb3:	pushf  
  40bcb4:	push   eax
  40bcb5:	push   cs
  40bcb6:	or     eax,0x4dab9599
  40bcbb:	sbb    eax,0x1ca816ba
  40bcc0:	hlt    
  40bcc1:	ja     0x40bd01
  40bcc3:	or     al,0x1d
  40bcc5:	cld    
  40bcc6:	add    al,0x8e
  40bcc8:	es dec esi
  40bcca:	imul   esp,ecx,0x180bf3b4
  40bcd0:	ret    
  40bcd1:	hlt    
  40bcd2:	enter  0xc861,0xbb
  40bcd6:	jmp    0x40bc63
  40bcd8:	push   edx
  40bcd9:	stc    
  40bcda:	outs   dx,BYTE PTR ds:[esi]
  40bcdb:	jne    0x40bc91
  40bcdd:	mov    bl,0x4b
  40bcdf:	xor    al,0xc6
  40bce1:	mov    ax,0x3fcc
  40bce5:	test   DWORD PTR [ebp*1+0x5cbf4cb3],0x59bbfa0b
  40bcf0:	popf   
  40bcf1:	inc    esi
  40bcf2:	neg    BYTE PTR [esi]
  40bcf4:	jnp    0x40bd29
  40bcf6:	mov    al,ds:0x48cada9a
  40bcfb:	and    eax,0x2038f368
  40bd00:	sub    dh,ah
  40bd02:	shl    DWORD PTR [ecx+esi*1+0xfd94fc6],cl
  40bd09:	dec    edi
  40bd0a:	push   esp
  40bd0b:	js     0x40bcf9
  40bd0d:	stc    
  40bd0e:	xor    edx,ebp
  40bd10:	inc    esp
  40bd11:	xor    al,0x65
  40bd13:	adc    eax,DWORD PTR [esi]
  40bd15:	iret   
  40bd16:	jmp    DWORD PTR [esi]
  40bd18:	ficom  WORD PTR [ebp-0x2647361]
  40bd1e:	push   es
  40bd1f:	pusha  
  40bd20:	mov    edi,0x63889339
  40bd25:	mov    ds:0x2d52fb7b,al
  40bd2a:	xchg   ebp,eax
  40bd2b:	fadd   QWORD PTR [eax+0x3dd7d4a3]
  40bd31:	or     eax,0x5f31a65d
  40bd36:	add    esp,DWORD PTR [ebp+0x10]
  40bd39:	mov    bl,0xd2
  40bd3b:	repnz mov esi,gs
  40bd3e:	ret    
  40bd3f:	inc    edi
  40bd40:	mov    ah,0xb7
  40bd42:	add    bh,BYTE PTR [ecx-0x5e]
  40bd45:	mov    esp,edx
  40bd47:	pushf  
  40bd48:	popf   
  40bd49:	in     eax,dx
  40bd4a:	and    eax,0x21dc273
  40bd4f:	mov    edx,0xa2155c99
  40bd54:	test   eax,0xa5312dfe
  40bd59:	inc    ebp
  40bd5a:	xchg   ecx,eax
  40bd5b:	mov    cl,dl
  40bd5d:	aas    
  40bd5e:	cs xchg edx,eax
  40bd60:	bound  ebx,QWORD PTR [ecx+eiz*1-0x5e]
  40bd64:	mov    ebp,0x31c1e05e
  40bd69:	cdq    
  40bd6a:	or     esi,edx
  40bd6c:	xchg   edx,eax
  40bd6d:	or     esp,DWORD PTR [ebx-0x1c]
  40bd70:	sbb    al,BYTE PTR [edx-0x7b]
  40bd73:	in     al,0xe1
  40bd75:	and    DWORD PTR [esi],eax
  40bd77:	mov    esp,0xbe52e1de
  40bd7c:	gs aas 
  40bd7e:	push   ds
  40bd7f:	fadd   QWORD PTR [edi-0x75]
  40bd82:	sar    al,cl
  40bd84:	lods   eax,DWORD PTR ds:[esi]
  40bd85:	jp     0x40bd43
  40bd87:	lss    esp,FWORD PTR [ebx+0x3f]
  40bd8b:	xor    al,0x13
  40bd8d:	daa    
  40bd8e:	jb     0x40bd4c
  40bd90:	inc    eax
  40bd91:	(bad)  
  40bd92:	jmp    0x40bd4f
  40bd94:	adc    eax,0x1e87c4e7
  40bd99:	pop    ds
  40bd9a:	es pop eax
  40bd9c:	mov    eax,0x20aacbd5
  40bda1:	mov    eax,0x1a23cd73
  40bda6:	out    dx,eax
  40bda7:	sub    edx,ebx
  40bda9:	mov    al,ds:0x84f564ce
  40bdae:	mov    eax,ds:0x7639661d
  40bdb3:	ficomp WORD PTR [edi]
  40bdb5:	push   0xffffffa7
  40bdb7:	bound  ebp,QWORD PTR [edi+ebp*1-0x1f]
  40bdbb:	mov    dh,0x0
  40bdbd:	fidiv  DWORD PTR [edi+eax*4-0x57f03201]
  40bdc4:	or     bl,BYTE PTR [ebx]
  40bdc6:	lea    edi,[esi-0x3b]
  40bdc9:	mov    BYTE PTR [ebp-0x4],bh
  40bdcc:	fwait
  40bdcd:	outs   dx,DWORD PTR ds:[esi]
  40bdce:	pop    ecx
  40bdcf:	cmp    DWORD PTR [ebx+0x18],ecx
  40bdd2:	push   ds
  40bdd3:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40bdd5:	outs   dx,BYTE PTR ds:[esi]
  40bdd6:	fidivr WORD PTR [eax+0x555ea9dd]
  40bddc:	push   ds
  40bddd:	cmp    bh,BYTE PTR [esi+ecx*1-0x5a6b28da]
  40bde4:	test   DWORD PTR [edi+0x7b1ef4c3],esi
  40bdea:	or     eax,0xb236e71c
  40bdef:	int    0x8b
  40bdf1:	jge    0x40be08
  40bdf3:	adc    BYTE PTR [eax],dh
  40bdf5:	popf   
  40bdf6:	push   0x21228fb5
  40bdfb:	fwait
  40bdfc:	jne    0x40be39
  40bdfe:	and    eax,0xb14a43dd
  40be03:	push   0xe7c200a2
  40be08:	inc    ebp
  40be09:	std    
  40be0a:	push   es
  40be0b:	inc    eax
  40be0c:	sar    BYTE PTR [edi+eax*2-0xf],1
  40be10:	push   0x4e5354c2
  40be15:	mov    ebp,eax
  40be17:	mov    WORD PTR [esi],cs
  40be19:	inc    ecx
  40be1a:	push   cs
  40be1b:	cmp    edx,DWORD PTR [ebp-0x2e]
  40be1e:	cmp    esi,ebp
  40be20:	jae    0x40be24
  40be22:	add    eax,0x2803fe8e
  40be27:	cmp    eax,0x20e16ed4
  40be2c:	jae    0x40bde6
  40be2e:	and    BYTE PTR [edi-0x45],al
  40be31:	jg     0x40be1d
  40be33:	into   
  40be34:	call   0xdc6de2fd
  40be39:	mov    al,0xd
  40be3b:	pop    ebx
  40be3c:	xchg   ebx,eax
  40be3d:	ins    DWORD PTR es:[edi],dx
  40be3e:	inc    ebp
  40be3f:	aaa    
  40be40:	mov    edi,0x1d162eeb
  40be45:	add    esi,ecx
  40be47:	test   al,0x20
  40be49:	push   ds
  40be4a:	pushw  0x1760
  40be4e:	retf   
  40be4f:	in     eax,dx
  40be50:	sbb    eax,0x2afdb755
  40be55:	and    DWORD PTR [ecx],edi
  40be57:	nop
  40be58:	popa   
  40be59:	pop    ss
  40be5a:	jmp    0x40be80
  40be5c:	mov    ah,0x77
  40be5e:	ret    0xa53
  40be61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be62:	das    
  40be63:	ins    DWORD PTR es:[edi],dx
  40be64:	jp     0x40be19
  40be66:	call   0x6fd0a553
  40be6b:	dec    ebx
  40be6c:	cmp    dh,cl
  40be6e:	(bad)  
  40be70:	pop    es
  40be71:	lahf   
  40be72:	mov    edx,0x6064a0a4
  40be77:	sub    eax,0xb50127d2
  40be7c:	push   esi
  40be7d:	jae    0x40bea3
  40be7f:	inc    esp
  40be80:	mov    ebx,edi
  40be82:	adc    edi,edi
  40be84:	xchg   dh,ch
  40be86:	jl     0x40bec1
  40be88:	mov    ds:0x8fddc6d9,al
  40be8d:	mov    eax,0xf644a899
  40be92:	xor    edx,DWORD PTR [edi+0x413d795b]
  40be98:	dec    eax
  40be99:	imul   eax,DWORD PTR [eax-0x38],0x22
  40be9d:	or     ah,BYTE PTR [edi]
  40be9f:	aad    0xa1
  40bea1:	or     esi,DWORD PTR [ebx-0x1b]
  40bea4:	test   DWORD PTR [ebp-0x5971d781],eax
  40beaa:	es inc eax
  40beac:	retf   0xd93e
  40beaf:	pusha  
  40beb0:	add    edx,esp
  40beb2:	or     eax,0x2f3fb7a0
  40beb7:	cdq    
  40beb8:	outs   dx,DWORD PTR ds:[esi]
  40beb9:	and    BYTE PTR [eax+0x58d2d1c],dl
  40bebf:	jb     0x40bef5
  40bec1:	(bad)  
  40bec2:	and    ebx,DWORD PTR ds:[ecx]
  40bec5:	xchg   ebp,eax
  40bec6:	mov    dl,0x32
  40bec8:	push   edi
  40bec9:	aaa    
  40beca:	mov    al,ds:0x783e49e9
  40becf:	sub    ecx,eax
  40bed1:	or     ebx,ecx
  40bed3:	out    0x84,eax
  40bed5:	das    
  40bed6:	mov    al,0xdc
  40bed8:	ins    BYTE PTR es:[edi],dx
  40bed9:	push   0xc
  40bedb:	test   BYTE PTR [esi+0x2e],ch
  40bede:	lods   al,BYTE PTR ds:[esi]
  40bedf:	mov    edi,0x25c4f4ea
  40bee4:	lea    ecx,[edx+0x519b6807]
  40beea:	adc    ah,dh
  40beec:	sbb    edi,DWORD PTR [ebx+eiz*8-0x7f]
  40bef0:	mov    dh,0x70
  40bef2:	in     al,dx
  40bef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef4:	sbb    dl,dl
  40bef6:	jecxz  0x40becf
  40bef8:	js     0x40bec7
  40befa:	sahf   
  40befb:	inc    edx
  40befc:	pop    esp
  40befd:	jle    0x40bf7a
  40beff:	sbb    edx,DWORD PTR [esi]
  40bf01:	fs ins BYTE PTR es:[edi],dx
  40bf03:	cmp    al,0x59
  40bf05:	xchg   edx,eax
  40bf06:	jg     0x40bf07
  40bf08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf09:	push   ebp
  40bf0a:	ret    0x90f5
  40bf0d:	lock icebp 
  40bf0f:	fs hlt 
  40bf11:	mov    esp,0xdc9d7b59
  40bf16:	mov    bh,0x1d
  40bf18:	sub    DWORD PTR [ebx+0x3b706398],0x4
  40bf1f:	xchg   ebp,eax
  40bf20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf21:	add    ecx,DWORD PTR [esi]
  40bf23:	mov    edx,DWORD PTR [eax]
  40bf25:	fsub   QWORD PTR [eax]
  40bf27:	in     eax,dx
  40bf28:	mov    dl,0x3e
  40bf2a:	cmp    dl,bl
  40bf2c:	inc    edx
  40bf2d:	jp     0x40bed9
  40bf2f:	sbb    BYTE PTR [esi],al
  40bf31:	loopne 0x40bede
  40bf33:	clc    
  40bf34:	cdq    
  40bf35:	dec    ebx
  40bf36:	jo     0x40beec
  40bf38:	scas   al,BYTE PTR es:[edi]
  40bf39:	rcr    al,1
  40bf3b:	aaa    
  40bf3c:	aas    
  40bf3d:	fidivr DWORD PTR [edx-0x14f6d293]
  40bf43:	je     0x40bf76
  40bf45:	sub    al,0x98
  40bf47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf48:	test   DWORD PTR [eax],0xa6dc2b38
  40bf4e:	xor    al,0xc6
  40bf50:	fwait
  40bf51:	xchg   DWORD PTR [edi-0xe],eax
  40bf54:	sbb    ebp,esp
  40bf56:	arpl   WORD PTR [ebx-0x7e00c542],dx
  40bf5c:	ins    BYTE PTR es:[edi],dx
  40bf5d:	inc    ebx
  40bf5e:	sub    al,0x7c
  40bf60:	dec    eax
  40bf61:	mov    BYTE PTR [edx+0x46],cl
  40bf64:	in     al,dx
  40bf65:	jns    0x40bf57
  40bf67:	dec    ecx
  40bf68:	dec    eax
  40bf69:	neg    BYTE PTR ds:0x977c5a2d
  40bf6f:	fcmovne st,st(1)
  40bf71:	test   al,bh
  40bf73:	stos   BYTE PTR es:[edi],al
  40bf74:	jbe    0x40bf3d
  40bf76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf77:	inc    edx
  40bf78:	jg     0x40bf9e
  40bf7a:	(bad)  [eax+0x62]
  40bf7d:	ins    BYTE PTR es:[edi],dx
  40bf7e:	nop
  40bf7f:	call   0x5dab:0xac9a5143
  40bf86:	out    dx,eax
  40bf87:	in     al,dx
  40bf88:	inc    edi
  40bf89:	in     eax,dx
  40bf8a:	and    ah,BYTE PTR [esi]
  40bf8c:	test   DWORD PTR [edx],ebp
  40bf8e:	push   0x26568baf
  40bf93:	mov    al,ds:0xba9a0736
  40bf98:	inc    edi
  40bf99:	call   0x1afd13d0
  40bf9e:	jns    0x40bf8e
  40bfa0:	fs jb  0x40bff8
  40bfa3:	adc    eax,0xaea33c0b
  40bfa8:	mov    bl,0xdc
  40bfaa:	popa   
  40bfab:	dec    edi
  40bfac:	aaa    
  40bfad:	push   eax
  40bfae:	ja     0x40bf4e
  40bfb0:	xor    al,0xe7
  40bfb2:	xor    DWORD PTR [edi-0x180fdd12],esi
  40bfb8:	mov    esp,0xf48a79be
  40bfbd:	ins    BYTE PTR es:[edi],dx
  40bfbe:	mov    al,ds:0xd01c9c30
  40bfc3:	in     al,0xd4
  40bfc5:	jae    0x40c030
  40bfc7:	pop    ebx
  40bfc8:	jecxz  0x40bfb4
  40bfca:	adc    bh,BYTE PTR [ebx-0x23]
  40bfcd:	push   cs
  40bfce:	pop    ebp
  40bfcf:	adc    DWORD PTR [eax],esp
  40bfd1:	sahf   
  40bfd2:	mov    esi,0x3ae93871
  40bfd7:	(bad)  
  40bfd8:	and    DWORD PTR [esi+0x2e],esi
  40bfdb:	das    
  40bfdc:	cmp    ah,BYTE PTR [eax+0x31]
  40bfdf:	push   esp
  40bfe0:	xor    BYTE PTR [ebx],al
  40bfe2:	out    dx,eax
  40bfe3:	aad    0x86
  40bfe5:	or     esp,esi
  40bfe7:	inc    eax
  40bfe8:	in     al,0x13
  40bfea:	(bad)  
  40bfeb:	aam    0x66
  40bfed:	jo     0x40c026
  40bfef:	pop    ecx
  40bff0:	xor    al,0xfd
  40bff2:	mov    eax,ds:0xec61d5b5
  40bff7:	sahf   
  40bff8:	pop    ebp
  40bff9:	sub    edi,DWORD PTR [esi+0x7b]
  40bffc:	mov    cl,0xd8
  40bffe:	addr16 xor eax,0x57b27bda
  40c004:	mov    bl,0x6a
  40c006:	fistp  WORD PTR [esi+0x288a1018]
  40c00c:	and    eax,0xaba0ef28
  40c011:	scas   al,BYTE PTR es:[edi]
  40c012:	jp     0x40c018
  40c014:	popa   
  40c015:	sub    DWORD PTR [esp+eax*8-0xd68b26b],edi
  40c01c:	sbb    al,0xe9
  40c01e:	inc    esi
  40c01f:	xchg   edx,eax
  40c020:	loop   0x40c07b
  40c022:	push   esi
  40c023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c024:	rcr    BYTE PTR [edx+0x1d],cl
  40c027:	add    BYTE PTR [eax],cl
  40c029:	(bad)  
  40c02a:	fmul   QWORD PTR [edi+edi*1]
  40c02d:	xchg   BYTE PTR [edx-0x3d],dh
  40c030:	cwde   
  40c031:	cmp    cl,BYTE PTR ds:0xe4dd
  40c036:	pop    edi
  40c037:	repz or BYTE PTR cs:[ebp+0x47],dh
  40c03c:	mov    esp,ebp
  40c03e:	retf   0x7df2
  40c041:	aam    0xc1
  40c043:	rcr    dl,1
  40c045:	dec    ebx
  40c046:	cmc    
  40c047:	cwde   
  40c048:	popa   
  40c049:	mov    dl,0x3b
  40c04b:	fsincos 
  40c04d:	pop    ss
  40c04e:	push   0x489efff7
  40c053:	or     BYTE PTR [esi],cl
  40c055:	outs   dx,DWORD PTR ds:[esi]
  40c056:	sbb    DWORD PTR [di+0x4308],0x32
  40c05c:	xor    esi,DWORD PTR [ecx+eax*4+0x4f]
  40c060:	inc    esi
  40c061:	imul   esi,DWORD PTR [edi+edx*4-0x28],0xffffffba
  40c066:	push   eax
  40c067:	mov    ecx,0x4a9d0228
  40c06c:	dec    ebp
  40c06d:	or     edi,DWORD PTR [eax+0x719ad273]
  40c073:	leave  
  40c074:	ja     0x40c060
  40c076:	in     al,0xc4
  40c078:	sbb    ecx,DWORD PTR [ebp+0x46e9679e]
  40c07e:	push   eax
  40c07f:	and    esp,DWORD PTR [edi+0x62a8ef27]
  40c085:	addr16 loop 0x40c0e5
  40c088:	adc    al,0x42
  40c08a:	inc    eax
  40c08b:	int    0x14
  40c08d:	dec    esp
  40c08e:	enter  0x910f,0x60
  40c092:	stos   DWORD PTR es:[edi],eax
  40c093:	adc    esp,esp
  40c095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c096:	fdiv   QWORD PTR [edi+0x5b7ce6e]
  40c09c:	and    al,0xe7
  40c09e:	mov    bh,0x7f
  40c0a0:	mov    edi,0x5fb0cf22
  40c0a5:	out    0x80,al
  40c0a7:	fcmovne st,st(6)
  40c0a9:	push   ebp
  40c0aa:	mov    edx,0x4028433b
  40c0af:	lahf   
  40c0b0:	stos   BYTE PTR es:[edi],al
  40c0b1:	inc    eax
  40c0b2:	or     eax,0xce3325e8
  40c0b7:	cmp    eax,0xc7fc7c0
  40c0bc:	stc    
  40c0bd:	push   es
  40c0be:	fs ja  0x40c105
  40c0c1:	retf   0x6af1
  40c0c4:	fsub   st(0),st
  40c0c6:	stos   BYTE PTR es:[edi],al
  40c0c7:	add    edx,esi
  40c0c9:	jmp    0xe45a92d6
  40c0ce:	outs   dx,BYTE PTR ds:[esi]
  40c0cf:	repz (bad) 
  40c0d1:	cld    
  40c0d2:	cdq    
  40c0d3:	xlat   BYTE PTR ds:[ebx]
  40c0d4:	mov    ds:0x91148edc,eax
  40c0d9:	jne    0x40c065
  40c0db:	adc    DWORD PTR [ecx+0xc3b95c5],0x9
  40c0e2:	jmp    0x7475:0x74b2459b
  40c0e9:	(bad)  
  40c0ea:	fs sub al,0x4
  40c0ed:	inc    ebx
  40c0ee:	clc    
  40c0ef:	comiss xmm5,DWORD PTR [edi-0x2f631d14]
  40c0f6:	outs   dx,DWORD PTR ds:[esi]
  40c0f7:	dec    edi
  40c0f8:	imul   edi,DWORD PTR [ebp+0x29cbc93a],0x516d1a8
  40c102:	mov    DWORD PTR [ebx],edx
  40c104:	inc    ecx
  40c105:	or     BYTE PTR [ebp-0x323a6e6a],ch
  40c10b:	clc    
  40c10c:	cmc    
  40c10d:	sbb    al,ah
  40c10f:	test   al,0xcf
  40c111:	pop    edx
  40c112:	into   
  40c113:	(bad)  
  40c114:	ficom  DWORD PTR [ecx]
  40c116:	js     0x40c0f6
  40c118:	xchg   ebx,eax
  40c119:	rcr    BYTE PTR [esi-0x509e27a7],0xff
  40c120:	in     eax,dx
  40c121:	mov    bl,0x2d
  40c123:	shl    dh,0x12
  40c126:	inc    ecx
  40c127:	fidiv  WORD PTR [ebx+0x1f]
  40c12a:	xchg   edx,eax
  40c12b:	adc    al,0x6f
  40c12d:	push   es
  40c12e:	mov    ds:0x1cf6a3bf,eax
  40c133:	fimul  DWORD PTR [edx+0x7d24816a]
  40c139:	mov    ebp,0xdd79121a
  40c13e:	pop    eax
  40c13f:	test   al,0xe
  40c141:	inc    ebp
  40c142:	inc    ebp
  40c143:	add    DWORD PTR [esi+0x2c0c738a],eax
  40c149:	xor    BYTE PTR [ebx],bh
  40c14b:	retf   
  40c14c:	or     BYTE PTR [edx-0x71],dl
  40c14f:	push   ebp
  40c150:	mov    dl,BYTE PTR [edx]
  40c152:	aad    0x72
  40c154:	pop    edx
  40c155:	xchg   edi,eax
  40c156:	sahf   
  40c157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c158:	fild   WORD PTR [ecx+0x5b3dae03]
  40c15e:	xchg   DWORD PTR [esi-0x74],esi
  40c161:	repnz shl BYTE PTR [ecx+eax*4-0x21a31bcb],1
  40c169:	sub    eax,0x1cf1e599
  40c16e:	test   BYTE PTR [edx+ebp*4+0x2ca0d156],dl
  40c175:	ins    BYTE PTR es:[edi],dx
  40c176:	sub    BYTE PTR [eiz*1+0x5c22d02b],bl
  40c17d:	ror    DWORD PTR [ebx],0xbd
  40c180:	jge    0x40c1e5
  40c182:	mov    ds:0xe3b0a5cc,eax
  40c187:	in     eax,dx
  40c188:	pop    eax
  40c189:	inc    esi
  40c18a:	adc    al,0x59
  40c18c:	jo     0x40c16c
  40c18e:	into   
  40c18f:	push   edx
  40c190:	push   ss
  40c191:	xchg   esi,eax
  40c192:	sti    
  40c193:	xchg   BYTE PTR [esi+eax*1],ch
  40c196:	jo     0x40c1d8
  40c198:	jmp    0x40c1f2
  40c19a:	inc    eax
  40c19b:	stos   DWORD PTR es:[edi],eax
  40c19c:	jne    0x40c143
  40c19e:	sub    al,0x54
  40c1a0:	call   0xa007:0xcfb3dac4
  40c1a7:	mov    ds:0x25dcd3b5,al
  40c1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ad:	iret   
  40c1ae:	pop    esp
  40c1af:	inc    eax
  40c1b0:	cmp    eax,0x88c3ca59
  40c1b5:	mov    WORD PTR [ecx-0x6d],cs
  40c1b8:	les    edi,FWORD PTR [edi+0x7ec26369]
  40c1be:	arpl   WORD PTR [ecx-0x1c],sp
  40c1c1:	aaa    
  40c1c2:	and    bh,BYTE PTR [ebx]
  40c1c4:	or     eax,DWORD PTR [esi+eax*8-0x75]
  40c1c8:	xlat   BYTE PTR ds:[ebx]
  40c1c9:	push   ecx
  40c1ca:	mov    cs,WORD PTR [ecx+0x50a6d434]
  40c1d0:	xchg   edx,eax
  40c1d1:	ins    DWORD PTR es:[edi],dx
  40c1d2:	sbb    BYTE PTR [ecx+0x1c952260],ch
  40c1d8:	sub    BYTE PTR [esi+edi*4+0x100bb3d5],dh
  40c1df:	dec    edi
  40c1e0:	(bad)  
  40c1e1:	sti    
  40c1e2:	(bad)  
  40c1e4:	add    eax,0x6dfddcc7
  40c1e9:	sub    dl,BYTE PTR [esi-0x30]
  40c1ec:	adc    ah,dh
  40c1ee:	inc    ebx
  40c1ef:	fst    DWORD PTR [ebx+0x57]
  40c1f2:	pop    es
  40c1f3:	mov    dl,0xee
  40c1f5:	fmul   QWORD PTR [edi]
  40c1f7:	sub    edi,DWORD PTR [edi]
  40c1f9:	mov    al,ds:0x6a01d01d
  40c1fe:	es mov eax,0x42b2dee4
  40c204:	in     al,0xc6
  40c206:	ins    BYTE PTR es:[edi],dx
  40c207:	pop    es
  40c208:	imul   edi,esp,0x27746d02
  40c20e:	cmp    ah,BYTE PTR [edi+esi*4]
  40c211:	ja     0x40c1a2
  40c213:	cmp    edx,ecx
  40c215:	add    BYTE PTR [ebp+0x2b],0x11
  40c219:	pusha  
  40c21a:	xor    al,BYTE PTR [eax+0x40b208]
  40c220:	call   0xf33b:0x94069bb5
  40c227:	test   al,0x68
  40c229:	xchg   ecx,eax
  40c22a:	fs fs pushf 
  40c22d:	and    bl,BYTE PTR ds:0xe6a8a894
  40c233:	test   DWORD PTR [edi+eax*2],ebx
  40c236:	lods   al,BYTE PTR ds:[esi]
  40c237:	outs   dx,DWORD PTR ds:[esi]
  40c238:	jmp    0x60cc:0xf88c903e
  40c23f:	(bad)  
  40c240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c241:	push   edi
  40c242:	xor    DWORD PTR [ecx-0x1c],eax
  40c245:	in     eax,dx
  40c246:	arpl   WORD PTR [edx-0xb5de1b7],di
  40c24c:	lods   eax,DWORD PTR ds:[esi]
  40c24d:	popa   
  40c24e:	jmp    0x4481:0xdb8874ff
  40c255:	inc    edx
  40c256:	cmp    BYTE PTR [ebx],ah
  40c258:	xchg   edx,eax
  40c259:	hlt    
  40c25a:	dec    eax
  40c25b:	push   es
  40c25c:	xchg   BYTE PTR cs:[esi],dl
  40c25f:	xor    eax,0xe551034
  40c264:	scas   al,BYTE PTR es:[edi]
  40c265:	jp     0x40c267
  40c267:	lahf   
  40c268:	mov    al,ah
  40c26a:	pop    ebp
  40c26b:	and    DWORD PTR [eax+ecx*4-0x30],0xe614deab
  40c273:	cmp    BYTE PTR [eax],al
  40c275:	cli    
  40c276:	ja     0x40c264
  40c278:	call   0xaaaee456
  40c27d:	push   0x1a
  40c27f:	mov    dh,0xda
  40c281:	jle    0x40c24f
  40c283:	(bad)  
  40c284:	call   0x20485deb
  40c289:	cmp    BYTE PTR [edx],al
  40c28b:	sbb    cl,BYTE PTR [eax+0x35]
  40c28e:	fiadd  WORD PTR [ebx-0x33]
  40c291:	xor    DWORD PTR [eax+0x38],edx
  40c294:	push   ecx
  40c295:	and    ebx,DWORD PTR [ecx+0x27]
  40c298:	adc    BYTE PTR [eax+0x7899761f],ch
  40c29e:	mov    esi,esi
  40c2a0:	pop    ebp
  40c2a1:	jo     0x40c28d
  40c2a3:	jae    0x40c30c
  40c2a5:	cdq    
  40c2a6:	cdq    
  40c2a7:	mov    dl,BYTE PTR [ebx-0xb]
  40c2aa:	mov    ds:0x773f6429,eax
  40c2af:	test   al,0x53
  40c2b1:	add    DWORD PTR [edi],ecx
  40c2b3:	retf   
  40c2b4:	push   ss
  40c2b5:	cs cld 
  40c2b7:	or     BYTE PTR [ebx],al
  40c2b9:	aas    
  40c2ba:	int3   
  40c2bb:	js     0x40c26a
  40c2bd:	jo     0x40c300
  40c2bf:	mov    ah,0xfe
  40c2c1:	(bad)
  40c2c4:	adc    eax,0x1882889
  40c2c9:	pop    eax
  40c2ca:	test   DWORD PTR [eax],eax
  40c2cc:	push   ds
  40c2cd:	(bad)  
  40c2ce:	fnsave [edi-0x28881dfe]
  40c2d4:	(bad)  
  40c2d5:	clc    
  40c2d6:	stos   DWORD PTR es:[edi],eax
  40c2d7:	das    
  40c2d8:	adc    dl,BYTE PTR [eax-0x53853404]
  40c2de:	cmp    BYTE PTR [ecx+0x5c],cl
  40c2e1:	xor    eax,0x1d722c02
  40c2e6:	fisttp DWORD PTR [ecx]
  40c2e8:	pop    esp
  40c2e9:	mov    ch,0x9d
  40c2eb:	lea    ebp,[ecx+0x70]
  40c2ee:	fisttp QWORD PTR [ecx-0x35954b63]
  40c2f4:	xor    esi,DWORD PTR [ebx]
  40c2f6:	jae    0x40c2eb
  40c2f8:	clc    
  40c2f9:	retf   0x5107
  40c2fc:	repnz push edi
  40c2fe:	adc    ecx,edi
  40c300:	xor    DWORD PTR [edi],ebx
  40c302:	fistp  WORD PTR [ecx+0x7fedf071]
  40c308:	cmp    edx,ebx
  40c30a:	add    al,0x12
  40c30c:	iret   
  40c30d:	jecxz  0x40c2bb
  40c30f:	pushf  
  40c310:	mov    al,ds:0x239565
  40c315:	inc    edx
  40c316:	push   0x25
  40c318:	inc    esi
  40c319:	(bad)  
  40c31b:	repz fisttp QWORD PTR gs:[eax]
  40c31f:	shl    ecx,0x9a
  40c322:	inc    esi
  40c323:	mov    ds:0x60007095,eax
  40c328:	bound  esp,QWORD PTR [esi+eiz*1]
  40c32b:	outs   dx,DWORD PTR ds:[esi]
  40c32c:	cli    
  40c32d:	outs   dx,DWORD PTR ds:[esi]
  40c32e:	dec    esi
  40c32f:	mov    cl,0x92
  40c331:	fnsave [edx]
  40c333:	cmp    DWORD PTR [edx],esp
  40c335:	push   edi
  40c336:	xlat   BYTE PTR ds:[ebx]
  40c337:	adc    DWORD PTR [ebp-0x21],ecx
  40c33a:	sub    DWORD PTR [esi],ebp
  40c33c:	mov    dl,0xe2
  40c33e:	push   edx
  40c33f:	add    BYTE PTR [eax+0x68ddad0a],bl
  40c345:	push   cs
  40c346:	adc    ecx,DWORD PTR [edx+0x7b3dca9f]
  40c34c:	jg     0x40c311
  40c34e:	enter  0xd7f5,0x1c
  40c352:	in     al,0x3
  40c354:	sub    eax,0x3904e31
  40c359:	cmc    
  40c35a:	out    0x3f,eax
  40c35c:	int3   
  40c35d:	jge    0x40c36e
  40c35f:	repz jmp FWORD PTR [eax-0x35a019b4]
  40c366:	push   edx
  40c367:	xor    BYTE PTR [ecx],al
  40c369:	loop   0x40c36c
  40c36b:	in     eax,0x53
  40c36d:	sbb    DWORD PTR es:[ebp-0x5c],0x3d
  40c372:	pop    edi
  40c373:	jbe    0x40c3ef
  40c375:	pop    ebp
  40c376:	div    DWORD PTR [ecx+esi*2+0x67573c6a]
  40c37d:	loop   0x40c38f
  40c37f:	(bad)  
  40c380:	push   esp
  40c381:	xchg   esi,eax
  40c382:	popf   
  40c383:	mov    edi,0x4256bee1
  40c388:	xor    bl,dl
  40c38a:	add    BYTE PTR [edx],0x28
  40c38d:	hlt    
  40c38e:	xchg   DWORD PTR [edi+0x7d],esi
  40c391:	push   ss
  40c392:	cmp    eax,0x9edce6a9
  40c397:	cmp    dh,BYTE PTR gs:[edi+0xb]
  40c39b:	pop    ds
  40c39c:	pop    ecx
  40c39d:	pop    esp
  40c39e:	shr    DWORD PTR [edi],0x57
  40c3a1:	mov    ?,WORD PTR ds:0xf0b83b7c
  40c3a7:	jbe    0x40c3ae
  40c3a9:	(bad)  
  40c3aa:	pusha  
  40c3ab:	jo     0x40c397
  40c3ad:	fcom   DWORD PTR [edx+0x5f]
  40c3b0:	cwde   
  40c3b1:	pop    ds
  40c3b2:	popa   
  40c3b3:	stos   BYTE PTR es:[edi],al
  40c3b4:	push   es
  40c3b5:	jle    0x40c370
  40c3b7:	adc    DWORD PTR [esi-0x21e9a1ed],edi
  40c3bd:	pop    ebp
  40c3be:	mov    dl,0x6e
  40c3c0:	xor    ebp,DWORD PTR [edx-0x80]
  40c3c3:	mov    WORD PTR [edi],ds
  40c3c5:	sbb    DWORD PTR [esi],0x76
  40c3c8:	inc    esi
  40c3c9:	jmp    FWORD PTR [esi]
  40c3cb:	mov    cl,0x49
  40c3cd:	and    ecx,edi
  40c3cf:	pusha  
  40c3d0:	fcomp  st(7)
  40c3d2:	sub    eax,0x4dcf9934
  40c3d7:	mov    ecx,0x3c9ed89d
  40c3dc:	cmp    BYTE PTR [edx],cl
  40c3de:	popa   
  40c3df:	xchg   ebx,eax
  40c3e0:	fist   DWORD PTR [edx]
  40c3e2:	dec    edi
  40c3e3:	lahf   
  40c3e4:	mov    dl,0x9e
  40c3e6:	cmp    eax,0xdded2a93
  40c3eb:	sbb    eax,0x42050c85
  40c3f0:	xor    DWORD PTR [ecx],eax
  40c3f2:	repnz in al,dx
  40c3f4:	pop    es
  40c3f5:	inc    edx
  40c3f6:	ficom  DWORD PTR [edi]
  40c3f8:	jge    0x40c464
  40c3fa:	aas    
  40c3fb:	mov    esp,0xdfec493f
  40c400:	js     0x40c45c
  40c402:	out    dx,eax
  40c403:	test   BYTE PTR [edi],0xb0
  40c406:	push   0x2547a3d2
  40c40b:	dec    edx
  40c40c:	(bad)  
  40c40d:	std    
  40c40e:	mov    esi,0xbaccf37c
  40c413:	(bad)  [esi]
  40c415:	adc    esi,edi
  40c417:	jae    0x40c431
  40c419:	sbb    bl,cl
  40c41b:	jb     0x40c468
  40c41d:	cmp    al,0x4f
  40c41f:	fs cmp al,0xa9
  40c423:	lods   al,BYTE PTR ds:[esi]
  40c424:	sub    eax,0x5dff6820
  40c429:	je     0x40c404
  40c42b:	xor    BYTE PTR [esi-0x19],bh
  40c42e:	adc    al,dh
  40c430:	dec    ebp
  40c431:	or     al,0xe2
  40c433:	dec    edx
  40c434:	jl     0x40c459
  40c436:	xor    edi,ebx
  40c438:	test   al,0x3e
  40c43a:	or     dl,ch
  40c43c:	sbb    bl,BYTE PTR [eax+0x4d]
  40c43f:	sbb    eax,0x1adf867a
  40c444:	mov    ebx,0x41c9f730
  40c449:	pop    ecx
  40c44a:	mov    ds:0x29e55ddd,eax
  40c44f:	jne    0x40c4b3
  40c451:	cmp    edx,DWORD PTR [ecx+edx*1]
  40c454:	add    eax,0xead74233
  40c459:	stc    
  40c45a:	or     eax,0x668b8a20
  40c45f:	and    eax,0xe67fa61b
  40c464:	sbb    dh,dl
  40c466:	mov    eax,0xd2170bcd
  40c46b:	int3   
  40c46c:	inc    esi
  40c46d:	sbb    DWORD PTR [ecx+0x64],esp
  40c470:	jae    0x40c417
  40c472:	jl     0x40c4d4
  40c474:	imul   edi,ebx,0xb2743aee
  40c47a:	mov    edx,0x9ffc84b4
  40c47f:	stc    
  40c480:	jno    0x40c4ff
  40c482:	dec    edi
  40c483:	ins    BYTE PTR es:[edi],dx
  40c484:	imul   eax,DWORD PTR [ebp+0x1b],0x2c
  40c488:	xor    al,0x7d
  40c48a:	mov    esi,0xac58a761
  40c48f:	mov    eax,ds:0xc6ab33f6
  40c494:	mov    esi,0x83c301c1
  40c499:	pusha  
  40c49a:	in     al,dx
  40c49b:	test   DWORD PTR [eax],ecx
  40c49d:	iret   
  40c49e:	mov    al,ds:0x7408b7b6
  40c4a3:	dec    ecx
  40c4a4:	cmp    al,0xc0
  40c4a6:	fld    DWORD PTR [ecx-0x2c]
  40c4a9:	xor    BYTE PTR [ecx],ah
  40c4ab:	dec    ecx
  40c4ac:	lods   al,BYTE PTR ds:[esi]
  40c4ad:	dec    bl
  40c4af:	add    DWORD PTR [ebx+eiz*4+0x36],edi
  40c4b3:	repnz add ecx,ecx
  40c4b6:	cdq    
  40c4b7:	inc    ebx
  40c4b8:	adc    al,0x47
  40c4ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4bb:	push   ss
  40c4bc:	aaa    
  40c4bd:	lods   eax,DWORD PTR ds:[esi]
  40c4be:	adc    al,0xc8
  40c4c0:	inc    ebp
  40c4c1:	mov    dl,BYTE PTR [ebx]
  40c4c3:	xor    edi,DWORD PTR [esi-0x280b970b]
  40c4c9:	imul   esp,esi,0xb261cc
  40c4cf:	loope  0x40c533
  40c4d1:	loop   0x40c4f1
  40c4d3:	test   BYTE PTR [ebx-0x45],0xa4
  40c4d7:	fdiv   QWORD PTR [eax]
  40c4d9:	sbb    cl,BYTE PTR [eax]
  40c4db:	push   cs
  40c4dc:	adc    BYTE PTR [ebx-0x5e],cl
  40c4df:	sub    eax,0xa161313d
  40c4e4:	xchg   esp,eax
  40c4e5:	mov    BYTE PTR [eax+0x0],bh
  40c4e8:	sub    ah,0x3d
  40c4eb:	mov    ecx,0xde88f5c9
  40c4f0:	in     al,dx
  40c4f1:	clc    
  40c4f2:	fimul  DWORD PTR [edi]
  40c4f4:	out    dx,eax
  40c4f5:	ficomp DWORD PTR [edx]
  40c4f7:	add    al,0x89
  40c4f9:	jmp    0xab2a:0x97f1896
  40c500:	fcmovnu st,st(7)
  40c502:	cmp    al,BYTE PTR [ebp-0x64e29c00]
  40c508:	inc    ebp
  40c509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c50a:	inc    edx
  40c50b:	pop    edx
  40c50c:	(bad)  
  40c50d:	jne    0x40c553
  40c50f:	xor    DWORD PTR [ecx+0x37],ecx
  40c512:	or     eax,0x7c25d96e
  40c517:	xor    bl,BYTE PTR [edi+ecx*1+0x77]
  40c51b:	dec    ebp
  40c51c:	inc    esi
  40c51d:	in     al,dx
  40c51e:	aas    
  40c51f:	push   ds
  40c520:	lahf   
  40c521:	dec    DWORD PTR [edx+0x53b8cb0]
  40c527:	mov    eax,0x13acb0d2
  40c52c:	add    edx,DWORD PTR [esi-0x64]
  40c52f:	adc    esi,DWORD PTR [ebx+0x48850e3c]
  40c535:	cld    
  40c536:	push   edi
  40c537:	dec    ecx
  40c538:	xchg   edx,eax
  40c539:	je     0x40c4eb
  40c53b:	mov    WORD PTR [edi-0x3eb83321],?
  40c541:	add    BYTE PTR [ecx+0x59],ch
  40c544:	mov    eax,0x4bcaba7c
  40c549:	dec    ecx
  40c54a:	and    eax,0x3837a859
  40c54f:	test   BYTE PTR es:[ecx],bh
  40c552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c553:	or     al,0x63
  40c555:	(bad)  
  40c556:	mov    ecx,0x3167d8d4
  40c55b:	fldenv [esi+edi*4+0x28000a1d]
  40c562:	(bad)  
  40c563:	out    0x96,al
  40c565:	test   al,ah
  40c567:	enter  0x1191,0x68
  40c56b:	pop    eax
  40c56c:	adc    eax,0x8a7fea54
  40c571:	push   ebp
  40c572:	sahf   
  40c573:	mov    dl,0x8
  40c575:	jle    0x40c528
  40c577:	out    0xa5,eax
  40c579:	je     0x40c5f0
  40c57b:	not    BYTE PTR [esi-0x6f]
  40c57e:	dec    esp
  40c57f:	and    BYTE PTR [edx],0x21
  40c582:	sub    DWORD PTR [ebx-0x7a],eax
  40c585:	cmp    ch,ch
  40c587:	stos   BYTE PTR es:[edi],al
  40c588:	js     0x40c527
  40c58a:	cs pop esi
  40c58c:	sub    BYTE PTR [esi+0x444c6781],al
  40c592:	cmp    ecx,ebp
  40c594:	jb     0x40c563
  40c596:	fistp  QWORD PTR [eax-0x65ca1596]
  40c59c:	rcl    DWORD PTR [ebx+0x7c5fa8ad],cl
  40c5a2:	push   esp
  40c5a3:	icebp  
  40c5a4:	cli    
  40c5a5:	jecxz  0x40c535
  40c5a7:	mov    ah,0xd5
  40c5a9:	mov    ds:0xc3f65a4d,al
  40c5ae:	imul   esp,DWORD PTR [edi+0x3f7a50b6],0x3585e286
  40c5b8:	pop    edx
  40c5b9:	fs inc esi
  40c5bb:	hlt    
  40c5bc:	iret   
  40c5bd:	loop   0x40c5bf
  40c5bf:	lods   eax,DWORD PTR ds:[esi]
  40c5c0:	aas    
  40c5c1:	mov    eax,ds:0x4109dba2
  40c5c6:	shr    BYTE PTR [ebp-0xa42a681],1
  40c5cc:	fiadd  DWORD PTR [edi+0x1d]
  40c5cf:	repnz nop
  40c5d1:	xchg   edi,eax
  40c5d2:	sub    ah,BYTE PTR [esi]
  40c5d4:	mov    edi,0x2a2a16a8
  40c5d9:	or     al,0xd6
  40c5db:	mov    dl,0x97
  40c5dd:	scas   eax,DWORD PTR es:[edi]
  40c5de:	pop    es
  40c5df:	sub    eax,edi
  40c5e1:	sbb    ah,BYTE PTR gs:[esi]
  40c5e4:	mov    ebx,0x1b0968be
  40c5e9:	sbb    eax,0x6a7e81b7
  40c5ee:	in     al,0x17
  40c5f0:	dec    esi
  40c5f1:	push   ecx
  40c5f2:	and    BYTE PTR [ebp-0x62],cl
  40c5f5:	int3   
  40c5f6:	fs dec edx
  40c5f8:	mov    edi,DWORD PTR [ecx-0x65]
  40c5fb:	icebp  
  40c5fc:	or     ch,BYTE PTR [edx+0xc]
  40c5ff:	push   ds
  40c600:	jo     0x40c5ab
  40c602:	ret    0x8a0b
  40c605:	fwait
  40c606:	sub    edi,DWORD PTR [eax]
  40c608:	mov    ah,bh
  40c60a:	inc    edx
  40c60b:	pop    esi
  40c60c:	jge    0x40c629
  40c60e:	scas   al,BYTE PTR es:[edi]
  40c60f:	cvtps2pi mm2,QWORD PTR [eax+0x781038e4]
  40c616:	jge    0x40c604
  40c618:	lock sti 
  40c61a:	pop    edx
  40c61b:	iret   
  40c61c:	mov    esp,0x509289e0
  40c621:	scas   al,BYTE PTR es:[edi]
  40c622:	inc    ebx
  40c623:	mov    ebx,0x30791db0
  40c628:	pop    esp
  40c629:	inc    edx
  40c62a:	push   eax
  40c62b:	fs push edi
  40c62d:	jnp    0x40c61a
  40c62f:	bound  edx,QWORD PTR [ebp+eax*4-0x48]
  40c633:	inc    ecx
  40c634:	je     0x40c680
  40c636:	ffreep st(0)
  40c638:	xor    esp,DWORD PTR [edx]
  40c63a:	push   esp
  40c63b:	aas    
  40c63c:	test   eax,0x4d2f8550
  40c641:	or     ebx,DWORD PTR [ecx+0x31b2761d]
  40c647:	mov    eax,cs
  40c649:	inc    esi
  40c64a:	shr    DWORD PTR [ebp-0x5],cl
  40c64d:	mov    ebp,0x7e2e6d21
  40c652:	lds    ebp,FWORD PTR [esi+0x61]
  40c655:	mov    ch,0x4b
  40c657:	cmp    bh,BYTE PTR [edx+eax*8+0x6bcb0b93]
  40c65e:	jp     0x40c60e
  40c660:	add    al,0xb7
  40c662:	xor    edi,DWORD PTR [ebx+edx*2+0x6d]
  40c666:	ror    dl,1
  40c668:	(bad)  
  40c669:	loopne 0x40c646
  40c66b:	jmp    FWORD PTR ds:0xea9648c7
  40c671:	xor    DWORD PTR [eax+0x2ce11b02],esp
  40c677:	out    0xe,al
  40c679:	or     BYTE PTR [esi+0x75],bl
  40c67c:	sbb    al,0xda
  40c67e:	jmp    edi
  40c680:	aam    0x6c
  40c682:	mov    ecx,0x6094a241
  40c687:	pop    ss
  40c688:	or     bl,bl
  40c68a:	dec    BYTE PTR [ebx]
  40c68c:	jp     0x40c617
  40c68e:	cmc    
  40c68f:	lock dec ecx
  40c691:	shl    BYTE PTR [ebx+0x193a13d],cl
  40c697:	and    al,0xc7
  40c699:	xchg   ax,ax
  40c69b:	and    DWORD PTR [esi+ebx*2-0x4bb6d7e6],edx
  40c6a2:	mov    esi,0x9e729fba
  40c6a7:	inc    esi
  40c6a8:	mov    ch,0x72
  40c6aa:	pop    esp
  40c6ab:	mov    WORD PTR [ecx],cs
  40c6ad:	pop    ecx
  40c6ae:	push   0xcacabe66
  40c6b3:	adc    DWORD PTR cs:[ebx+0x41],0x509ce4fc
  40c6bb:	and    edx,DWORD PTR [ebx]
  40c6bd:	outs   dx,DWORD PTR ds:[esi]
  40c6be:	jge    0x40c718
  40c6c0:	je     0x40c672
  40c6c2:	lock lock das 
  40c6c5:	imul   ebx,DWORD PTR [ebp+ebx*2-0x320eeef7],0xffffffc4
  40c6cd:	mov    bl,0x1b
  40c6cf:	loop   0x40c6cc
  40c6d1:	jnp    0x40c740
  40c6d3:	out    dx,eax
  40c6d4:	or     DWORD PTR [esi+0x1],ebx
  40c6d7:	xchg   edi,eax
  40c6d8:	clc    
  40c6d9:	lds    eax,FWORD PTR [edx-0x52a1c59f]
  40c6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6e0:	cmp    al,0xab
  40c6e2:	popfw  
  40c6e4:	sar    BYTE PTR [edx+0x23],1
  40c6e7:	js     0x40c69e
  40c6e9:	jnp    0x40c6d3
  40c6eb:	pop    ds
  40c6ec:	stc    
  40c6ed:	xor    cl,cl
  40c6ef:	es mov eax,0xe6caf5cf
  40c6f5:	jno    0x40c6f2
  40c6f7:	jae    0x40c71e
  40c6f9:	sub    edx,ebp
  40c6fb:	or     bl,BYTE PTR [edi]
  40c6fd:	xchg   BYTE PTR [ecx],bh
  40c6ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c700:	push   esp
  40c701:	aaa    
  40c702:	dec    ebp
  40c703:	fdiv   QWORD PTR [edx+ebx*8-0x28]
  40c707:	les    edi,FWORD PTR [edi]
  40c709:	daa    
  40c70a:	popa   
  40c70b:	and    edi,0x4d
  40c70e:	icebp  
  40c70f:	jg     0x40c716
  40c711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c712:	daa    
  40c713:	ins    DWORD PTR es:[edi],dx
  40c714:	shr    al,1
  40c716:	sub    ebp,DWORD PTR [edx+0x3c]
  40c719:	ret    
  40c71a:	cmp    DWORD PTR [edx+0x4b],0x7d2692b1
  40c721:	add    bh,BYTE PTR [esi]
  40c723:	sbb    eax,0x8bde3fcc
  40c728:	sub    ah,cl
  40c72a:	mov    al,ds:0x812a5b37
  40c72f:	(bad)  
  40c730:	xor    al,bl
  40c732:	ret    
  40c733:	loopne 0x40c6d4
  40c735:	mov    BYTE PTR [edi-0x6e1bea7f],bl
  40c73b:	aas    
  40c73c:	mov    esi,0x8bc50115
  40c741:	loopne 0x40c6c5
  40c743:	out    0x99,eax
  40c745:	ins    DWORD PTR es:[edi],dx
  40c746:	sbb    al,0x42
  40c748:	xlat   BYTE PTR ds:[ebx]
  40c749:	mov    esp,0xc5b4a21c
  40c74e:	jae    0x40c7b9
  40c750:	or     ebp,DWORD PTR [eax-0x1a]
  40c753:	mov    cl,BYTE PTR [ecx-0x73]
  40c756:	not    BYTE PTR [esi]
  40c758:	push   ebx
  40c759:	in     eax,dx
  40c75a:	mov    ebx,0xb01670a0
  40c75f:	mov    edi,0x32110949
  40c764:	cmp    edx,ebp
  40c766:	sub    eax,0x7ec1ce93
  40c76b:	push   es
  40c76c:	jae    0x40c77b
  40c76e:	inc    ebx
  40c76f:	xchg   BYTE PTR [ebp-0x7e],ch
  40c772:	fsubr  DWORD PTR [edi-0x71fa47b0]
  40c778:	sti    
  40c779:	emms   
  40c77b:	xlat   BYTE PTR ds:[ebx]
  40c77c:	xchg   esp,eax
  40c77d:	xor    eax,0x656d4d2d
  40c782:	stos   BYTE PTR es:[edi],al
  40c783:	sbb    dl,BYTE PTR [eax]
  40c785:	xchg   edx,eax
  40c786:	clc    
  40c787:	inc    ebp
  40c788:	mov    dl,BYTE PTR ds:0xdb6abbb8
  40c78e:	adc    cl,ch
  40c790:	outs   dx,BYTE PTR ds:[esi]
  40c791:	xor    al,0x3f
  40c793:	and    BYTE PTR [esi-0x11],al
  40c796:	int    0x15
  40c798:	sub    BYTE PTR [eax-0x44],bl
  40c79b:	sbb    al,0xe
  40c79d:	scas   eax,DWORD PTR es:[edi]
  40c79e:	jbe    0x40c74e
  40c7a0:	pusha  
  40c7a1:	pop    ss
  40c7a2:	pop    edi
  40c7a3:	jp     0x40c782
  40c7a5:	bndstx [edx+0x2b],(bad)
  40c7a9:	mov    bl,0x36
  40c7ab:	mov    edi,0xbb942d99
  40c7b0:	je     0x40c75b
  40c7b2:	enter  0x7c8f,0x95
  40c7b6:	(bad)  
  40c7b7:	mov    dl,cl
  40c7b9:	and    edx,edi
  40c7bb:	mov    bl,0x6c
  40c7bd:	dec    ebp
  40c7be:	xor    edi,esi
  40c7c0:	inc    ebx
  40c7c1:	add    dl,BYTE PTR [eax]
  40c7c3:	xor    eax,0x50695621
  40c7c8:	or     eax,ecx
  40c7ca:	adc    eax,0x83817708
  40c7cf:	inc    edx
  40c7d0:	push   eax
  40c7d1:	scas   eax,DWORD PTR es:[edi]
  40c7d2:	pop    esi
  40c7d3:	sub    al,0xa0
  40c7d5:	popf   
  40c7d6:	cli    
  40c7d7:	add    eax,0x7cacd8aa
  40c7dc:	sub    BYTE PTR [ecx],0x8b
  40c7df:	out    0xb6,eax
  40c7e1:	lods   eax,DWORD PTR ds:[esi]
  40c7e2:	mov    al,0x31
  40c7e4:	xor    bl,BYTE PTR [eax+ecx*8-0x74]
  40c7e8:	rol    DWORD PTR [ebp+0x67],1
  40c7eb:	jecxz  0x40c823
  40c7ed:	imul   esi,ecx,0xa17e2ff7
  40c7f3:	dec    eax
  40c7f4:	lods   eax,DWORD PTR ds:[esi]
  40c7f5:	push   ebp
  40c7f6:	mov    ds:0x108e552d,eax
  40c7fb:	inc    edx
  40c7fc:	cdq    
  40c7fd:	mov    edi,0x7345b2b3
  40c802:	mov    edi,0x363e4bb8
  40c807:	fsubp  st(6),st
  40c809:	push   edx
  40c80a:	addr16 (bad) 
  40c80c:	cmp    ebx,DWORD PTR [ecx-0x5d009600]
  40c812:	xor    eax,0x3184637f
  40c817:	mov    eax,ds:0xca4ab71a
  40c81c:	xchg   ebp,eax
  40c81d:	and    ah,BYTE PTR [eax-0x3975196b]
  40c823:	sbb    eax,0xc189abbe
  40c828:	cmovle esp,DWORD PTR [edi+0x38]
  40c82c:	xchg   ebp,eax
  40c82d:	(bad)  [esi+0x5e18ac3e]
  40c833:	inc    ecx
  40c834:	cmp    edx,ebp
  40c836:	test   cl,dh
  40c838:	pusha  
  40c839:	pop    eax
  40c83a:	shl    ah,cl
  40c83c:	or     eax,0xef9c05b4
  40c841:	shr    BYTE PTR [ebx],cl
  40c843:	pop    esp
  40c844:	sub    edx,DWORD PTR [edx]
  40c846:	xchg   ebp,eax
  40c847:	fistp  DWORD PTR [ecx]
  40c849:	push   0xffffffdd
  40c84b:	xchg   esi,eax
  40c84c:	inc    esi
  40c84d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c84e:	retf   
  40c84f:	arpl   WORD PTR [edx-0xf],si
  40c852:	loope  0x40c7dc
  40c854:	or     BYTE PTR [ecx-0x32db4d16],ch
  40c85a:	cdq    
  40c85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85c:	inc    esi
  40c85d:	sub    bl,BYTE PTR [ebx]
  40c85f:	jecxz  0x40c815
  40c861:	mov    dh,0xca
  40c863:	int    0xbe
  40c865:	mov    al,ds:0xdabb3831
  40c86a:	dec    eax
  40c86b:	xchg   ecx,eax
  40c86c:	xchg   esi,eax
  40c86d:	jmp    0x5256:0xd789a637
  40c874:	adc    esi,DWORD PTR [ebp-0x1ba8b499]
  40c87a:	lods   eax,DWORD PTR ds:[esi]
  40c87b:	cmp    edi,ecx
  40c87d:	jns    0x40c8e0
  40c87f:	cmp    al,0xb6
  40c881:	xchg   edi,eax
  40c882:	xor    eax,eax
  40c884:	not    dh
  40c886:	pushf  
  40c887:	sub    al,0x48
  40c889:	jl     0x40c8bc
  40c88b:	xor    BYTE PTR [edi+0x2d6ed464],0xc5
  40c892:	mov    ebp,0xf96805fe
  40c897:	and    esp,ebp
  40c899:	add    BYTE PTR [ebx+0x2f],bh
  40c89c:	push   0xffffffa4
  40c89e:	gs inc edx
  40c8a0:	fst    DWORD PTR [eax-0x67330f60]
  40c8a6:	push   ss
  40c8a7:	jb     0x40c889
  40c8a9:	hlt    
  40c8aa:	sbb    DWORD PTR [ebx+0x68296538],esi
  40c8b0:	jmp    0xb1d80a10
  40c8b5:	push   eax
  40c8b6:	mov    ebx,0x51eccff9
  40c8bb:	jmp    0x40c8d3
  40c8bd:	mov    WORD PTR [edx-0x277fbb02],gs
  40c8c3:	inc    ecx
  40c8c4:	pushf  
  40c8c5:	jmp    0x134:0xba35a48e
  40c8cc:	jmp    0x10bc:0x6eb89dfd
  40c8d3:	mov    edx,0xbd2afb36
  40c8d8:	jmp    0x40c884
  40c8da:	imul   ebx,DWORD PTR [ecx],0xffffffcb
  40c8dd:	add    BYTE PTR [edi-0x1ec80533],dl
  40c8e3:	or     BYTE PTR [edx-0x4b19ed14],ah
  40c8e9:	into   
  40c8ea:	test   al,0x76
  40c8ec:	stos   DWORD PTR es:[edi],eax
  40c8ed:	jns    0x40c8a3
  40c8ef:	mov    WORD PTR [eax],es
  40c8f1:	or     cl,BYTE PTR [ecx]
  40c8f3:	add    BYTE PTR [eax-0x75],0x5a
  40c8f7:	dec    edx
  40c8f8:	mov    ebx,0xfa996210
  40c8fd:	xor    bh,BYTE PTR [ecx]
  40c8ff:	stos   BYTE PTR es:[edi],al
  40c900:	js     0x40c929
  40c902:	sbb    ebp,0xffffffc6
  40c905:	jno    0x40c88a
  40c907:	jne    0x40c93a
  40c909:	clc    
  40c90a:	or     ah,cl
  40c90c:	shl    DWORD PTR [edx],1
  40c90e:	popa   
  40c90f:	aaa    
  40c910:	and    DWORD PTR [esp+edi*1],edi
  40c913:	adc    ah,BYTE PTR [ebp+0x7e48bb12]
  40c919:	mov    edx,DWORD PTR [edi+esi*8]
  40c91c:	mov    esi,0x36b14924
  40c921:	in     al,dx
  40c922:	sub    BYTE PTR [ebp+edi*8-0x33],ah
  40c926:	icebp  
  40c927:	addr16 push 0xffffffe0
  40c92a:	(bad)  
  40c92b:	jl     0x40c913
  40c92d:	add    esp,ecx
  40c92f:	les    edi,FWORD PTR [edx]
  40c931:	inc    ebp
  40c933:	mov    cl,0xb7
  40c935:	or     eax,0x4d9d5732
  40c93a:	xchg   ebp,eax
  40c93b:	scas   al,BYTE PTR es:[edi]
  40c93c:	ss sti 
  40c93e:	push   ebx
  40c93f:	loope  0x40c8f2
  40c941:	lahf   
  40c942:	jae    0x40c90c
  40c944:	pop    ebx
  40c945:	add    edx,ebx
  40c947:	cdq    
  40c948:	retf   
  40c949:	inc    ebx
  40c94a:	add    al,0x2c
  40c94c:	jnp    0x40c97d
  40c94e:	pop    ds
  40c94f:	outs   dx,DWORD PTR ds:[esi]
  40c950:	jecxz  0x40c8d3
  40c952:	jp     0x40c955
  40c954:	jge    0x9a694f38
  40c95a:	cmp    al,BYTE PTR [ebx]
  40c95c:	add    ah,BYTE PTR [edx-0x64]
  40c95f:	rcr    edi,0xdf
  40c962:	in     eax,0x41
  40c964:	push   ebx
  40c965:	aas    
  40c966:	sahf   
  40c967:	cmp    bh,BYTE PTR [esi-0x1d]
  40c96a:	int    0x0
  40c96c:	mov    esp,0xd569d0ff
  40c971:	jmp    0x40c954
  40c973:	loop   0x40c9bc
  40c975:	mov    eax,ds:0xd975f9e
  40c97a:	push   ecx
  40c97b:	xchg   ebx,eax
  40c97c:	loopne 0x40c9c4
  40c97e:	cmp    al,0xbd
  40c980:	mov    ds:0x13730ad2,al
  40c985:	push   ds
  40c986:	jo     0x40c982
  40c988:	retf   0xd801
  40c98b:	hlt    
  40c98c:	fld    QWORD PTR [ebx]
  40c98e:	fidiv  DWORD PTR [eax+0x49]
  40c991:	sbb    ebx,edi
  40c993:	shr    dl,cl
  40c995:	loop   0x40c919
  40c997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c998:	enter  0xb38a,0xc3
  40c99c:	sub    al,0xcc
  40c99e:	bound  edi,QWORD PTR [eax]
  40c9a0:	scas   eax,DWORD PTR es:[edi]
  40c9a1:	fsubrp st(7),st
  40c9a3:	or     al,0x80
  40c9a5:	push   0x1fdc316d
  40c9aa:	daa    
  40c9ab:	js     0x40c936
  40c9ad:	icebp  
  40c9ae:	jge    0x40c9af
  40c9b0:	sti    
  40c9b1:	adc    al,0x21
  40c9b3:	adc    eax,0x3f81a1bc
  40c9b8:	push   0x9b288e3b
  40c9bd:	shl    eax,0xc8
  40c9c0:	cmp    BYTE PTR [edx+0x1e2b6ba9],dh
  40c9c6:	iret   
  40c9c7:	sbb    ah,BYTE PTR [ebx]
  40c9c9:	imul   esi,DWORD PTR [edx+0x74aea1c0],0x6a3dc8e2
  40c9d3:	pusha  
  40c9d4:	in     al,dx
  40c9d5:	outs   dx,DWORD PTR ds:[esi]
  40c9d6:	xchg   esp,eax
  40c9d7:	add    eax,0x5886a73e
  40c9dc:	iret   
  40c9dd:	add    BYTE PTR [ebx+0x7cfeb32d],ch
  40c9e3:	xor    ebx,DWORD PTR [ebp+edi*4-0x4f9c32cc]
  40c9ea:	aam    0x7e
  40c9ec:	and    eax,0x6aeb5214
  40c9f2:	pop    esp
  40c9f3:	sbb    eax,0x42acf536
  40c9f8:	or     esi,eax
  40c9fa:	pop    esp
  40c9fb:	push   0x48
  40c9fd:	ds push ecx
  40c9ff:	pop    esi
  40ca00:	dec    ebp
  40ca01:	push   esi
  40ca02:	test   ebp,eax
  40ca04:	lahf   
  40ca05:	adc    al,0xfc
  40ca07:	aad    0xb5
  40ca09:	scas   eax,DWORD PTR es:[edi]
  40ca0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca0b:	jne    0x40ca02
  40ca0d:	ret    
  40ca0e:	stos   BYTE PTR es:[edi],al
  40ca0f:	or     bh,BYTE PTR gs:[ebx+0x76f16353]
  40ca16:	dec    edx
  40ca17:	retf   
  40ca18:	or     ebp,DWORD PTR [ecx+ecx*4+0x5f]
  40ca1c:	mov    ecx,0x356918ef
  40ca21:	xor    eax,edi
  40ca23:	jns    0x40c9d9
  40ca25:	add    eax,0x1f7e0449
  40ca2a:	daa    
  40ca2b:	mov    ah,0x8f
  40ca2d:	mov    ebp,DWORD PTR ss:[edi-0x55]
  40ca31:	aas    
  40ca32:	mov    esi,0x2f1c90af
  40ca37:	pop    esp
  40ca38:	outs   dx,BYTE PTR ds:[esi]
  40ca39:	ret    0x83f1
  40ca3c:	sub    ah,bh
  40ca3e:	outs   dx,DWORD PTR ds:[esi]
  40ca3f:	fistp  DWORD PTR [edi-0x2107dc28]
  40ca45:	test   eax,0x6e6b171
  40ca4a:	adc    eax,0xb68e8f2a
  40ca4f:	sub    eax,0x24184a6a
  40ca54:	test   DWORD PTR [edx+0x7e81a56f],ebp
  40ca5a:	mov    eax,DWORD PTR [ecx-0x128b580c]
  40ca60:	fsubp  st(5),st
  40ca62:	(bad)  
  40ca63:	(bad)  [ecx-0xa]
  40ca66:	push   ds
  40ca67:	add    DWORD PTR [ebx-0x2da7ce80],ebp
  40ca6d:	jg     0x40ca9a
  40ca6f:	or     DWORD PTR [eax],edi
  40ca71:	pop    edi
  40ca72:	add    al,0x72
  40ca74:	ins    DWORD PTR es:[edi],dx
  40ca75:	jecxz  0x40ca04
  40ca77:	dec    ebx
  40ca78:	arpl   WORD PTR [eax-0x55],ax
  40ca7b:	(bad)  
  40ca7c:	jecxz  0x40ca5b
  40ca7e:	and    ch,BYTE PTR [esi+ebx*2+0x7f667d1a]
  40ca85:	and    BYTE PTR [ebx-0x3d],al
  40ca88:	cmp    al,0x35
  40ca8a:	jmp    0x7343d6f7
  40ca8f:	add    bh,BYTE PTR [ebx+0x15bfa7a]
  40ca95:	test   esp,eax
  40ca97:	lock fdiv st,st(2)
  40ca9a:	cmp    esi,DWORD PTR [esp+ebp*1]
  40ca9d:	or     BYTE PTR [eax+0x48],dl
  40caa0:	call   0x63c2:0x72f619c8
  40caa7:	jns    0x40cad2
  40caa9:	test   ecx,0x586cb1f6
  40caaf:	(bad)  
  40cab0:	mov    ebx,DWORD PTR ds:0x5921fc55
  40cab6:	jne    0x40ca74
  40cab8:	xchg   ebx,eax
  40cab9:	cld    
  40caba:	test   ebp,esi
  40cabc:	mov    edx,0xd0ff93a6
  40cac1:	data16 aam 0xfd
  40cac4:	mov    bl,0x72
  40cac6:	fwait
  40cac7:	mov    ecx,0x3185da1e
  40cacc:	push   esp
  40cacd:	enter  0xf017,0xf1
  40cad1:	outs   dx,BYTE PTR ds:[esi]
  40cad2:	jl     0x9edbf945
  40cad8:	xor    ebx,DWORD PTR [esi-0x3e]
  40cadb:	sub    al,0x3a
  40cadd:	mov    ds:0xcb131c0a,al
  40cae2:	out    0x28,eax
  40cae4:	stos   DWORD PTR es:[edi],eax
  40cae5:	mov    eax,0xfdc7c75f
  40caea:	shl    DWORD PTR [eax-0x44],1
  40caed:	loop   0x40cb15
  40caef:	inc    ebx
  40caf0:	sub    eax,0x328bf6cf
  40caf5:	gs jl  0x40cb50
  40caf8:	cli    
  40caf9:	loop   0x40ca87
  40cafb:	xchg   edx,eax
  40cafc:	jbe    0x40cb0a
  40cafe:	add    al,0x2
  40cb00:	mov    eax,0xd7e3ef92
  40cb05:	jmp    0x40cb4d
  40cb07:	sbb    eax,0x8708d4c6
  40cb0c:	(bad)  
  40cb0d:	mov    cl,0xec
  40cb0f:	pop    edi
  40cb10:	stc    
  40cb11:	cli    
  40cb12:	jp     0x40cb14
  40cb14:	or     ah,BYTE PTR [edx-0x6d]
  40cb17:	or     DWORD PTR [edx-0x40968ef7],ecx
  40cb1d:	sub    al,0x2
  40cb1f:	in     eax,dx
  40cb20:	xchg   ecx,eax
  40cb21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb22:	scas   al,BYTE PTR es:[edi]
  40cb23:	xor    bh,BYTE PTR [ecx]
  40cb25:	popf   
  40cb26:	lahf   
  40cb27:	imul   esp,DWORD PTR [edi-0x76],0xffffffee
  40cb2b:	pop    ss
  40cb2c:	aaa    
  40cb2d:	xor    al,0x25
  40cb2f:	popf   
  40cb30:	js     0x40cb70
  40cb32:	in     eax,0xbd
  40cb34:	jp     0x40cb24
  40cb36:	or     al,0x5d
  40cb38:	ret    0x8d4c
  40cb3b:	xchg   DWORD PTR [edx],ebx
  40cb3d:	xchg   esi,eax
  40cb3e:	retf   
  40cb3f:	pop    edi
  40cb40:	dec    edi
  40cb41:	(bad)  
  40cb42:	rol    BYTE PTR [eax+0x19db2d6c],1
  40cb48:	std    
  40cb49:	sbb    esi,DWORD PTR ds:0x564a6ef8
  40cb4f:	call   0x285e:0xf149f77
  40cb56:	mov    ah,0x89
  40cb58:	retf   
  40cb59:	cmp    esp,DWORD PTR [esi+ebx*2]
  40cb5c:	inc    esi
  40cb5d:	int    0x84
  40cb5f:	mov    bl,0x75
  40cb61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb62:	push   0xfcde517
  40cb67:	in     al,0x3
  40cb69:	test   al,0xc9
  40cb6b:	mov    al,ds:0x741e9642
  40cb70:	jg     0x40cb11
  40cb72:	sbb    al,0xc4
  40cb74:	rcl    BYTE PTR [ecx+0x1a274a4b],0x4d
  40cb7b:	ja     0x40cb52
  40cb7d:	ja     0x40cbac
  40cb7f:	jne    0x40cb50
  40cb81:	xor    bl,0x8f
  40cb84:	mov    WORD PTR [ecx-0x60],es
  40cb87:	in     eax,0x68
  40cb89:	(bad)  
  40cb8a:	or     al,bl
  40cb8c:	sbb    al,0x66
  40cb8e:	and    al,0xd2
  40cb90:	and    DWORD PTR [edx],esp
  40cb92:	and    eax,0x66724e48
  40cb97:	cmp    al,0x90
  40cb99:	shl    DWORD PTR [ecx-0xc],0xca
  40cb9d:	sub    BYTE PTR [ecx+0x40],0x33
  40cba1:	xchg   ebx,eax
  40cba2:	mov    edi,0x844cc2dd
  40cba7:	jno    0x40cb8c
  40cba9:	fmul   st(4),st
  40cbab:	sbb    ecx,DWORD PTR [eax]
  40cbad:	cld    
  40cbae:	ja     0x40cb4f
  40cbb0:	aad    0xdd
  40cbb2:	lods   al,BYTE PTR ds:[esi]
  40cbb3:	sub    bh,ch
  40cbb5:	or     DWORD PTR [edx+0x21091867],esp
  40cbbb:	call   0xf304:0x19eb7546
  40cbc2:	dec    ebx
  40cbc3:	pop    ecx
  40cbc4:	pusha  
  40cbc5:	sbb    edx,edi
  40cbc7:	lea    eax,[esi]
  40cbc9:	inc    esi
  40cbca:	jae    0x40cbaf
  40cbcc:	sbb    dl,BYTE PTR ds:0x2a7000a6
  40cbd2:	arpl   WORD PTR [esi+ebx*8-0x7e],sp
  40cbd6:	sub    BYTE PTR [esi-0x34ae108f],0xe3
  40cbdd:	test   DWORD PTR [edx],ebx
  40cbdf:	mov    BYTE PTR [ecx-0x1a912a17],dh
  40cbe5:	mov    ?,WORD PTR [eax]
  40cbe7:	dec    ebp
  40cbe8:	out    dx,eax
  40cbe9:	imul   edi,DWORD PTR [esi],0x145e5641
  40cbef:	xor    al,0x6d
  40cbf1:	adc    eax,0xb3659710
  40cbf6:	push   eax
  40cbf7:	push   eax
  40cbf8:	dec    ebx
  40cbf9:	(bad)  
  40cbfa:	push   ecx
  40cbfb:	aad    0x8e
  40cbfd:	lds    edx,FWORD PTR [edi+eiz*2+0x4066b1e5]
  40cc04:	js     0x40cc15
  40cc06:	and    edx,edx
  40cc08:	mov    bh,0xae
  40cc0a:	fisubr WORD PTR [ecx-0x7c3dc1b0]
  40cc10:	adc    al,0x4e
  40cc12:	pop    ebp
  40cc13:	push   ebp
  40cc14:	xchg   esi,eax
  40cc15:	mov    dh,0xec
  40cc17:	hlt    
  40cc18:	sbb    dl,BYTE PTR [edi+0x49]
  40cc1b:	xor    al,0xa9
  40cc1d:	std    
  40cc1e:	inc    edx
  40cc1f:	jnp    0x40cc3a
  40cc21:	and    BYTE PTR [esi+0x36f63923],cl
  40cc27:	and    dl,cl
  40cc29:	imul   edx,ecx,0xffffff81
  40cc2c:	fnstenv [eax]
  40cc2e:	mov    ?,WORD PTR [ecx]
  40cc30:	jmp    0x4d2:0x305b30bd
  40cc37:	pop    ss
  40cc38:	adc    al,0xf2
  40cc3a:	fwait
  40cc3b:	out    dx,eax
  40cc3c:	loopne 0x40cbd2
  40cc3e:	sbb    bl,al
  40cc40:	sbb    esp,esp
  40cc42:	xor    ah,BYTE PTR [eax-0x1]
  40cc45:	sub    al,0x50
  40cc47:	pop    ebp
  40cc48:	leave  
  40cc49:	cld    
  40cc4a:	stos   BYTE PTR es:[edi],al
  40cc4b:	xchg   edx,eax
  40cc4c:	ja     0x40cc2c
  40cc4e:	jbe    0x40cca6
  40cc50:	(bad)
  40cc53:	xor    BYTE PTR [ebp+0x77],cl
  40cc56:	inc    ebx
  40cc57:	std    
  40cc58:	sbb    cl,al
  40cc5a:	sbb    al,0x26
  40cc5c:	je     0x40cc8b
  40cc5e:	not    ebx
  40cc60:	pop    esp
  40cc61:	and    DWORD PTR [ebx+ebp*1],esi
  40cc64:	sahf   
  40cc65:	pop    ebx
  40cc66:	jg     0x40cc68
  40cc68:	test   al,0xe0
  40cc6a:	stos   DWORD PTR es:[edi],eax
  40cc6b:	rcr    eax,cl
  40cc6d:	and    dh,BYTE PTR [edi]
  40cc6f:	imul   ebx,ecx,0xe7fe6e2a
  40cc75:	sahf   
  40cc76:	jle    0x40cccd
  40cc78:	es push 0x4b
  40cc7b:	push   ebx
  40cc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc7d:	xchg   ecx,eax
  40cc7e:	pop    esi
  40cc7f:	into   
  40cc80:	cli    
  40cc81:	enter  0x32cc,0x27
  40cc85:	xchg   edi,eax
  40cc86:	mov    ah,0x84
  40cc88:	in     al,0x93
  40cc8a:	add    BYTE PTR [edx+0x4c],dl
  40cc8d:	jecxz  0x40cce7
  40cc8f:	ja     0x40cc6f
  40cc91:	std    
  40cc92:	mov    bh,0xf
  40cc94:	scas   eax,DWORD PTR es:[edi]
  40cc95:	push   es
  40cc96:	data16 xor ah,ah
  40cc99:	gs dec ebp
  40cc9b:	int3   
  40cc9c:	cmc    
  40cc9d:	mov    edi,0x5c485b8e
  40cca2:	dec    edi
  40cca3:	test   ecx,ebp
  40cca5:	(bad)  
  40cca6:	sti    
  40cca7:	outs   dx,BYTE PTR ds:[esi]
  40cca8:	mov    al,ds:0x3616a403
  40ccad:	xlat   BYTE PTR ds:[ebx]
  40ccae:	inc    ebx
  40ccaf:	or     edi,0x1b
  40ccb2:	mov    cl,0x2b
  40ccb4:	adc    DWORD PTR [ecx],ebx
  40ccb6:	mov    BYTE PTR [eax+0x661e937b],bh
  40ccbc:	into   
  40ccbd:	fimul  DWORD PTR [ecx]
  40ccbf:	add    BYTE PTR [eax-0x5bb0297f],al
  40ccc5:	retf   
  40ccc6:	or     ecx,0x279dcabf
  40cccc:	hlt    
  40cccd:	jnp    0x40cc5a
  40cccf:	loope  0x40cce6
  40ccd1:	(bad)  
  40ccd2:	jmp    0x40ccf4
  40ccd4:	ins    DWORD PTR es:[edi],dx
  40ccd5:	cmp    al,BYTE PTR [eax]
  40ccd7:	in     eax,dx
  40ccd8:	outs   dx,DWORD PTR ds:[esi]
  40ccd9:	mov    al,0x45
  40ccdb:	(bad)  
  40ccdd:	ja     0x40ccd4
  40ccdf:	popf   
  40cce0:	mov    BYTE PTR [edi+0x2e],0x4d
  40cce4:	or     al,0x5c
  40cce6:	jmp    0x6a3:0xd4cfea72
  40cced:	addr16 fwait
  40ccef:	jl     0x40cd46
  40ccf1:	leave  
  40ccf2:	and    eax,0x23243d3d
  40ccf7:	cmp    eax,0xef4a5006
  40ccfc:	jmp    0x40cd19
  40ccfe:	pusha  
  40ccff:	mov    al,ds:0x61186624
  40cd04:	enter  0x69c4,0x3a
  40cd08:	mov    DWORD PTR [ecx],esi
  40cd0a:	idiv   esp
  40cd0c:	xchg   esp,eax
  40cd0d:	pop    esi
  40cd0e:	int3   
  40cd0f:	push   es
  40cd10:	aad    0x7d
  40cd12:	das    
  40cd13:	std    
  40cd14:	xor    ch,BYTE PTR [eax-0xa731cc9]
  40cd1a:	data16 sub ah,ah
  40cd1d:	dec    edx
  40cd1e:	mov    eax,0xfb5f31d1
  40cd23:	sub    BYTE PTR [edx],dl
  40cd25:	lahf   
  40cd26:	or     dh,BYTE PTR [edi+0x51e9658b]
  40cd2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd2d:	ret    0xbe2f
  40cd30:	inc    ebx
  40cd31:	jge    0x40cd02
  40cd33:	or     esp,eax
  40cd35:	xchg   BYTE PTR [edx+0x57],dh
  40cd38:	cmp    ah,ch
  40cd3a:	dec    ebx
  40cd3b:	ins    BYTE PTR es:[edi],dx
  40cd3c:	icebp  
  40cd3d:	mov    al,0xd1
  40cd3f:	mov    esi,0xfdf38ab2
  40cd44:	int    0x52
  40cd46:	sahf   
  40cd47:	rcr    ebp,0x9b
  40cd4a:	xchg   esi,eax
  40cd4b:	xor    BYTE PTR [ecx-0x6fda6af9],ch
  40cd51:	jae    0x40cd80
  40cd53:	nop
  40cd54:	add    dh,al
  40cd56:	fisub  WORD PTR [esi]
  40cd58:	bswap  edi
  40cd5a:	sub    eax,0xe8735dea
  40cd5f:	sbb    al,0x84
  40cd61:	stc    
  40cd62:	mov    al,ds:0x4a2ace2
  40cd67:	addr16 retf 
  40cd69:	int    0xc9
  40cd6b:	jg     0x40cd60
  40cd6d:	cmp    al,0x51
  40cd6f:	mov    ecx,0xeb715056
  40cd74:	hlt    
  40cd75:	push   esp
  40cd76:	pusha  
  40cd77:	dec    esi
  40cd78:	push   edi
  40cd79:	push   0x64
  40cd7b:	adc    dl,BYTE PTR [eax-0x7a9bab92]
  40cd81:	sub    al,0xbc
  40cd83:	daa    
  40cd84:	xchg   ebx,eax
  40cd85:	jmp    0x4220:0x62e075c9
  40cd8c:	xor    BYTE PTR [edx+0x4a39e096],ch
  40cd92:	inc    ebx
  40cd93:	or     edi,DWORD PTR [ecx-0x34939457]
  40cd99:	mov    ds,WORD PTR [esi]
  40cd9b:	icebp  
  40cd9c:	jp     0x40cdce
  40cd9e:	jmp    0x29088026
  40cda3:	cdq    
  40cda4:	mov    eax,ds:0x7c050ef7
  40cda9:	ffreep st(1)
  40cdab:	and    eax,0xf93b3170
  40cdb0:	sbb    bh,ah
  40cdb2:	es push ds
  40cdb4:	jnp    0x40ce0d
  40cdb6:	mov    ds:0xef02664d,al
  40cdbb:	jg     0x40cd4b
  40cdbd:	int3   
  40cdbe:	retf   
  40cdbf:	lock push cs
  40cdc1:	js     0x40ce23
  40cdc3:	lahf   
  40cdc4:	jge    0x40cd4e
  40cdc6:	or     bh,BYTE PTR [edx]
  40cdc8:	in     al,dx
  40cdc9:	gs xchg ecx,eax
  40cdcb:	popa   
  40cdcc:	push   0xffffff8c
  40cdce:	test   al,0xb3
  40cdd0:	pop    es
  40cdd1:	xor    al,0x50
  40cdd3:	and    dh,bl
  40cdd5:	int3   
  40cdd6:	repnz (bad) 
  40cdd8:	mov    cl,0xa6
  40cdda:	sbb    DWORD PTR fs:[esi],ebp
  40cddd:	(bad)  
  40cdde:	jg     0x40ce4f
  40cde0:	addr16 adc al,ch
  40cde3:	or     eax,DWORD PTR [ebx+0x49]
  40cde6:	and    BYTE PTR [eax-0x44],dl
  40cde9:	sbb    eax,DWORD PTR [ebx]
  40cdeb:	fnstsw WORD PTR [edi]
  40cded:	ret    
  40cdee:	mov    dh,0xf9
  40cdf0:	mov    cl,bh
  40cdf2:	out    dx,eax
  40cdf3:	pop    ebx
  40cdf4:	sbb    DWORD PTR [edx],eax
  40cdf6:	test   eax,0xf0f9aadb
  40cdfb:	fidivr DWORD PTR [esi-0x19c911c1]
  40ce01:	daa    
  40ce02:	nop
  40ce03:	sbb    DWORD PTR [esi-0x1e507448],edx
  40ce09:	fistp  QWORD PTR [ebp-0x10c58da9]
  40ce0f:	repnz rol edi,0x39
  40ce13:	sbb    bl,BYTE PTR [ecx-0x721f30d8]
  40ce19:	fld    QWORD PTR [ebp+0x28a2b9d5]
  40ce1f:	in     eax,dx
  40ce20:	fs jae 0x40cde2
  40ce23:	mov    ebx,DWORD PTR [eax+ebp*4+0x31d8aef0]
  40ce2a:	dec    ebx
  40ce2b:	jnp    0x40ce3d
  40ce2d:	lock fadd QWORD PTR gs:[edi+0x5e2fa11f]
  40ce35:	fs and eax,0xd0e6e07e
  40ce3b:	fwait
  40ce3c:	jbe    0x40ce78
  40ce3e:	xchg   esp,eax
  40ce3f:	mov    bh,BYTE PTR [eax+eiz*2-0x65]
  40ce43:	(bad)  [ebx]
  40ce45:	arpl   WORD PTR [ebx],bp
  40ce47:	add    edi,DWORD PTR [edi]
  40ce49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce4a:	sbb    al,al
  40ce4c:	nop
  40ce4d:	pushf  
  40ce4e:	pop    ds
  40ce4f:	ret    0xead1
  40ce52:	xchg   edi,eax
  40ce53:	jle    0x40cde2
  40ce55:	(bad)  
  40ce56:	fnsetpm(287 only) 
  40ce58:	retf   
  40ce59:	push   ebx
  40ce5a:	xor    eax,0x997c6f22
  40ce5f:	addr16 sub al,0x4b
  40ce62:	nop
  40ce63:	inc    BYTE PTR [esi+0xe271ddf]
  40ce69:	pop    esi
  40ce6a:	sub    al,0x41
  40ce6c:	fist   WORD PTR [esp+edx*8+0x59]
  40ce70:	aam    0xa5
  40ce72:	jns    0x40ceec
  40ce74:	call   0xb3f613bf
  40ce79:	fistp  QWORD PTR [edi]
  40ce7b:	mov    esi,0x418ca3f4
  40ce80:	std    
  40ce81:	addr16 pop sp
  40ce84:	pusha  
  40ce85:	bound  ebp,QWORD PTR [ecx+eiz*8]
  40ce88:	hlt    
  40ce89:	iret   
  40ce8a:	sbb    bl,BYTE PTR [eax-0x5b]
  40ce8d:	xchg   edx,eax
  40ce8e:	sbb    al,0x7f
  40ce90:	imul   edi,DWORD PTR [ebp+0x4571e64f],0xffffff9e
  40ce97:	xlat   BYTE PTR ds:[ebx]
  40ce98:	repnz dec esp
  40ce9a:	jns    0x40cf10
  40ce9c:	and    BYTE PTR [eax+0x71],bh
  40ce9f:	cdq    
  40cea0:	dec    edx
  40cea1:	repz out dx,al
  40cea3:	pop    ss
  40cea4:	pop    esp
  40cea5:	adc    eax,0x70cfde5c
  40ceaa:	ds (bad) 
  40ceac:	(bad)
  40ceaf:	add    al,0x68
  40ceb1:	cmp    eax,0xcaf75655
  40ceb6:	js     0x40ce63
  40ceb8:	int    0x70
  40ceba:	adc    eax,0xf84a2bc
  40cebf:	popa   
  40cec0:	mov    bl,0xba
  40cec2:	add    eax,DWORD PTR [ebx+0x4ec139d8]
  40cec8:	mov    edi,DWORD PTR [esi]
  40ceca:	(bad)  
  40cecb:	popa   
  40cecc:	loop   0x40cef7
  40cece:	jg     0x40ce64
  40ced0:	mov    ebx,0x99878d1a
  40ced5:	fiadd  WORD PTR [eax]
  40ced7:	mov    edx,0x192f15b
  40cedc:	or     bl,BYTE PTR [edx+0x70]
  40cedf:	clc    
  40cee0:	stc    
  40cee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cee3:	imul   esp,DWORD PTR [eax-0x77],0xffffffb9
  40cee7:	test   DWORD PTR [esp+ebp*1-0x1d],esi
  40ceeb:	mov    edx,edi
  40ceed:	ficom  WORD PTR ds:0x4ed7d47b
  40cef3:	stc    
  40cef4:	xchg   ebp,eax
  40cef5:	(bad)  
  40cef6:	pop    eax
  40cef7:	aam    0xf3
  40cef9:	es pop esp
  40cefb:	jbe    0x40cee6
  40cefd:	arpl   WORD PTR [edx-0x35f35279],cx
  40cf03:	mov    BYTE PTR [eax+0x17],ch
  40cf06:	mov    WORD PTR [esi],?
  40cf08:	jmp    0xf300:0x7ac1c695
  40cf0f:	push   ebp
  40cf10:	in     al,0x12
  40cf12:	jb     0x40cf44
  40cf14:	jnp    0x40cf73
  40cf16:	mov    WORD PTR [edx],gs
  40cf18:	pop    edx
  40cf19:	xchg   edx,eax
  40cf1a:	mov    esp,0xbdd6df63
  40cf1f:	jno    0x40cf54
  40cf21:	daa    
  40cf22:	sbb    DWORD PTR [ecx+0x6],eax
  40cf25:	and    al,0x94
  40cf27:	jbe    0x40cf43
  40cf29:	adc    DWORD PTR [ecx+0x3f],ecx
  40cf2c:	cmp    DWORD PTR [ebp-0x7dc8280],0xfffffffd
  40cf33:	xlat   BYTE PTR ds:[ebx]
  40cf34:	inc    ecx
  40cf35:	sub    BYTE PTR [ebp-0x129b2e35],ah
  40cf3b:	in     al,dx
  40cf3c:	test   esp,esi
  40cf3e:	cmp    BYTE PTR [eax-0x2b],bl
  40cf41:	sahf   
  40cf42:	std    
  40cf43:	mov    esi,0x2c76ad5b
  40cf48:	jae    0x40cee7
  40cf4a:	imul   edx,DWORD PTR [ecx-0x71],0x67
  40cf4e:	fxtract 
  40cf50:	pop    es
  40cf51:	int3   
  40cf52:	out    dx,al
  40cf53:	pop    edi
  40cf54:	xor    ah,cl
  40cf56:	push   esi
  40cf57:	xchg   edx,eax
  40cf58:	lods   al,BYTE PTR ds:[esi]
  40cf59:	push   edi
  40cf5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf5b:	enter  0x8954,0xca
  40cf5f:	add    dh,0x32
  40cf62:	out    0x9c,al
  40cf64:	cmp    BYTE PTR [eax],0xf3
  40cf67:	pusha  
  40cf68:	in     eax,0xa1
  40cf6a:	pop    edi
  40cf6b:	push   ebx
  40cf6c:	rol    DWORD PTR [esi+ebp*2+0x32],0x3b
  40cf71:	(bad)  
  40cf72:	pop    esp
  40cf73:	sbb    al,0x47
  40cf75:	fisttp WORD PTR [eax+edi*4+0x5e7ce776]
  40cf7c:	or     BYTE PTR [ebx+0x6720b85],ah
  40cf82:	ror    BYTE PTR [edi],0x29
  40cf85:	loope  0x40cf3d
  40cf87:	ins    BYTE PTR es:[edi],dx
  40cf88:	shr    DWORD PTR [edx],0xc7
  40cf8b:	push   ds
  40cf8c:	add    BYTE PTR [edi+edx*1-0x9],al
  40cf90:	lahf   
  40cf91:	inc    ebx
  40cf92:	jmp    0x60e5:0xc0857720
  40cf99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf9a:	inc    eax
  40cf9b:	dec    ebx
  40cf9c:	cmp    DWORD PTR [esi],ebp
  40cf9e:	dec    ebp
  40cf9f:	(bad)  
  40cfa0:	in     eax,0x34
  40cfa2:	and    edi,DWORD PTR [edi+0x295f5dd7]
  40cfa8:	or     eax,0x1fc47be4
  40cfad:	jnp    0x40cf62
  40cfaf:	push   ebp
  40cfb0:	push   0x77593f1f
  40cfb5:	retf   
  40cfb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfb7:	push   0xd81c406c
  40cfbc:	inc    ebp
  40cfbd:	sub    DWORD PTR [edx+0x28],ebp
  40cfc0:	mov    ecx,0xdbf8daac
  40cfc5:	in     al,dx
  40cfc6:	pop    es
  40cfc7:	test   al,0xc8
  40cfc9:	in     eax,0xa4
  40cfcb:	cmp    eax,0x28f6af9
  40cfd0:	push   ebp
  40cfd1:	addr16 stc 
  40cfd3:	push   esp
  40cfd4:	ds mov eax,0x7d62b48a
  40cfda:	iret   
  40cfdb:	fs pop edi
  40cfdd:	cli    
  40cfde:	or     BYTE PTR [eax+edi*2],bl
  40cfe1:	cmp    eax,0xff0b8bd4
  40cfe6:	cmc    
  40cfe7:	jb     0x40cf7d
  40cfe9:	xchg   BYTE PTR [ebx],dh
  40cfeb:	cmp    dl,BYTE PTR [eax]
  40cfed:	jmp    0x40cf7a
  40cfef:	pop    ss
  40cff0:	test   bh,bl
  40cff2:	inc    edx
  40cff3:	xchg   BYTE PTR [eax-0x7a],al
  40cff6:	ins    BYTE PTR es:[edi],dx
  40cff7:	call   0x3bd0d0b4
  40cffc:	imul   esi,DWORD PTR [edi-0x302ec5b4],0x44750ce4
  40d006:	cs jmp 0x40d06c
  40d009:	(bad)  
  40d00a:	in     al,dx
  40d00b:	hlt    
  40d00c:	sar    BYTE PTR [ecx],cl
  40d00e:	enter  0x443b,0x76
  40d012:	and    al,0xb6
  40d014:	fidiv  WORD PTR [eax]
  40d016:	jne    0x40cfcb
  40d018:	jmp    0x40cfd7
  40d01a:	(bad)  
  40d01b:	sbb    al,0x87
  40d01d:	cmp    BYTE PTR [ebp+0x7c],cl
  40d020:	and    ebx,edx
  40d022:	out    dx,al
  40d023:	dec    ebx
  40d024:	out    dx,al
  40d025:	hlt    
  40d026:	sbb    al,0xf1
  40d028:	es and dh,cl
  40d02b:	sar    DWORD PTR [ebx-0x7d688166],1
  40d031:	add    al,BYTE PTR [ecx]
  40d033:	icebp  
  40d034:	imul   edx,edx,0x406cec2f
  40d03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d03b:	fdiv   QWORD PTR [edx+ebx*2]
  40d03e:	dec    edi
  40d03f:	arpl   di,dx
  40d041:	xchg   edx,eax
  40d042:	jecxz  0x40d091
  40d044:	or     al,0xb1
  40d046:	(bad)  [edx+0x7ee0eb43]
  40d04c:	sub    al,0x24
  40d04e:	inc    eax
  40d04f:	pop    es
  40d050:	lock jmp 0x10e243e9
  40d056:	push   eax
  40d057:	jns    0x40d0a3
  40d059:	or     DWORD PTR [eax],ebp
  40d05b:	pop    esp
  40d05c:	stos   BYTE PTR es:[edi],al
  40d05d:	loop   0x40d067
  40d05f:	stc    
  40d060:	ret    
  40d061:	mov    WORD PTR [esi+0x4bbd0511],cs
  40d067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d068:	ss gs xchg ecx,eax
  40d06b:	cld    
  40d06c:	inc    esi
  40d06d:	add    al,BYTE PTR [esi-0x7d]
  40d070:	jbe    0x40d039
  40d072:	xor    DWORD PTR [eax],ebx
  40d074:	xor    DWORD PTR [esp+edi*1-0x7c],eax
  40d078:	pop    ebx
  40d079:	push   cs
  40d07a:	mov    gs,WORD PTR [ecx-0x20717a35]
  40d080:	sub    DWORD PTR [ecx],ecx
  40d082:	add    eax,0x92adc7
  40d087:	test   eax,0x7a7301cd
  40d08c:	bound  edi,QWORD PTR [edx-0x19]
  40d08f:	adc    esp,DWORD PTR [edi]
  40d091:	cmp    DWORD PTR [edx+0x30],edx
  40d094:	or     bl,0xaa
  40d097:	scas   al,BYTE PTR es:[edi]
  40d098:	add    al,0x5b
  40d09a:	cli    
  40d09b:	jg     0x40d119
  40d09d:	or     al,0xf2
  40d09f:	add    ch,0x9d
  40d0a2:	mov    esi,0xf51db568
  40d0a7:	adc    al,0xe2
  40d0a9:	push   es
  40d0aa:	(bad)  
  40d0ab:	jmp    0xd78fdcb2
  40d0b0:	mov    ah,dl
  40d0b2:	rcl    DWORD PTR [esi-0x6eda40aa],cl
  40d0b8:	aam    0x23
  40d0ba:	pop    ebp
  40d0bb:	pop    esi
  40d0bc:	in     al,dx
  40d0bd:	gs or  eax,0xda39eccc
  40d0c3:	dec    ebp
  40d0c4:	xchg   ebp,eax
  40d0c5:	pop    ecx
  40d0c6:	dec    ecx
  40d0c7:	xor    eax,0x5ea0938c
  40d0cc:	push   cs
  40d0cd:	pop    esp
  40d0ce:	lds    esp,FWORD PTR [eax+0x4a805e52]
  40d0d4:	out    0xb6,eax
  40d0d6:	cmp    ebp,esi
  40d0d8:	push   cs
  40d0d9:	mov    eax,0x9fdf8017
  40d0de:	mov    cl,0x4c
  40d0e0:	add    ah,al
  40d0e2:	sbb    ebp,DWORD PTR [ebp-0x51]
  40d0e5:	je     0x40d150
  40d0e7:	xlat   BYTE PTR ds:[ebx]
  40d0e8:	call   0x76388f8d
  40d0ed:	cli    
  40d0ee:	cmp    BYTE PTR [ecx+edi*4-0x3],0xa7
  40d0f3:	ja     0x40d075
  40d0f5:	fwait
  40d0f6:	inc    ecx
  40d0f7:	mov    ds:0x7220e02b,al
  40d0fc:	scas   al,BYTE PTR es:[edi]
  40d0fd:	sub    al,0x82
  40d0ff:	lahf   
  40d100:	mov    esi,DWORD PTR [eax]
  40d102:	jl     0x40d0d6
  40d104:	mov    ah,BYTE PTR [esi+0x6464bc19]
  40d10a:	sub    BYTE PTR [esi+0x55852875],bl
  40d110:	and    BYTE PTR [edi],0x5b
  40d113:	pop    ecx
  40d114:	push   esp
  40d115:	mov    edi,DWORD PTR [eax-0x7c]
  40d118:	std    
  40d119:	sub    ecx,DWORD PTR [esi+edi*8]
  40d11c:	aad    0xca
  40d11e:	and    edx,DWORD PTR [ecx-0x4]
  40d121:	jae    0x40d0e4
  40d123:	mov    WORD PTR [ebp-0x27b62b9f],?
  40d129:	or     BYTE PTR [esi-0x32f66d1d],cl
  40d12f:	cs in  al,0x10
  40d132:	mov    bh,0xc
  40d134:	mov    esi,0x45ab73eb
  40d139:	mov    ecx,0x88a5bfcf
  40d13e:	loope  0x40d0fa
  40d140:	push   ecx
  40d141:	out    0x88,al
  40d143:	jbe    0x40d1c0
  40d145:	div    DWORD PTR [edx]
  40d147:	ja     0x40d196
  40d149:	test   BYTE PTR [edi],0x5b
  40d14c:	fnstsw WORD PTR [ebx+0x3a]
  40d14f:	xlat   BYTE PTR ds:[ebx]
  40d150:	jo     0x40d112
  40d152:	lods   eax,DWORD PTR ds:[esi]
  40d153:	stos   BYTE PTR es:[edi],al
  40d154:	pop    ebp
  40d155:	mov    bh,0xb5
  40d157:	dec    edx
  40d158:	mov    ecx,0x90e5d9a5
  40d15d:	jne    0x40d120
  40d15f:	frstor [eax-0x2c629c2c]
  40d165:	xor    BYTE PTR [edx-0x724bcdc6],0x79
  40d16c:	pop    ss
  40d16d:	into   
  40d16e:	jo     0x40d0f1
  40d170:	xor    edi,DWORD PTR [edi-0x66]
  40d173:	inc    ecx
  40d174:	in     al,0x7d
  40d176:	stos   DWORD PTR es:[edi],eax
  40d177:	push   0xc4505ad9
  40d17c:	stos   DWORD PTR es:[edi],eax
  40d17d:	mov    cl,0xe8
  40d17f:	icebp  
  40d180:	shl    BYTE PTR [esp+0x5a],1
  40d184:	imul   ebx,DWORD PTR [eax+0x12],0x166086a
  40d18b:	sub    al,0xec
  40d18d:	test   al,0xd
  40d18f:	or     eax,0xf7b247c8
  40d194:	adc    BYTE PTR [ebx-0x66],ch
  40d197:	mov    ds:0x85a63ea1,al
  40d19c:	xor    ch,ch
  40d19e:	loopne 0x40d210
  40d1a0:	stc    
  40d1a1:	push   edi
  40d1a2:	jle    0x40d173
  40d1a4:	inc    eax
  40d1a5:	mov    bl,0xe1
  40d1a7:	xor    esp,DWORD PTR [ebp+0x23f3e3f0]
  40d1ad:	mov    ebx,0x5f3ff72f
  40d1b2:	std    
  40d1b3:	pop    ss
  40d1b4:	jmp    0x31d80ec3
  40d1b9:	pop    ebp
  40d1ba:	in     eax,dx
  40d1bb:	jp     0x40d157
  40d1bd:	mov    ds:0xd06f2dec,al
  40d1c2:	adc    al,0x2f
  40d1c4:	xchg   ebp,eax
  40d1c5:	cmp    al,BYTE PTR [eax-0xc]
  40d1c8:	jl     0x40d239
  40d1ca:	inc    ecx
  40d1cb:	pop    esp
  40d1cc:	(bad)  
  40d1cd:	pushf  
  40d1ce:	jb     0x40d1a8
  40d1d0:	jae    0x40d1c7
  40d1d2:	(bad)  
  40d1d3:	fcom   st(1)
  40d1d5:	sub    ecx,ebx
  40d1d7:	pusha  
  40d1d8:	icebp  
  40d1d9:	pop    eax
  40d1da:	cdq    
  40d1db:	jmp    0x40d1bb
  40d1dd:	xchg   ebp,eax
  40d1de:	lods   al,BYTE PTR ds:[esi]
  40d1df:	jae    0x40d23c
  40d1e1:	jns    0x40d184
  40d1e3:	lods   eax,DWORD PTR ds:[esi]
  40d1e4:	stos   DWORD PTR es:[edi],eax
  40d1e5:	jae    0x40d1c2
  40d1e7:	add    ebp,DWORD PTR [ebx-0x75]
  40d1ea:	jge    0x40d216
  40d1ec:	shl    BYTE PTR [ecx-0xa],1
  40d1ef:	or     bl,BYTE PTR [edx]
  40d1f1:	dec    edx
  40d1f2:	sbb    DWORD PTR [edx],eax
  40d1f4:	add    al,0xf6
  40d1f6:	mov    eax,DWORD PTR [ebx-0x9bb6f5c]
  40d1fc:	mov    al,0x89
  40d1fe:	inc    edi
  40d1ff:	mov    al,ds:0xdb25dc24
  40d204:	pop    eax
  40d205:	and    BYTE PTR [edi+0x5850c44a],ah
  40d20b:	stc    
  40d20c:	cdq    
  40d20d:	or     al,0x67
  40d20f:	pop    edi
  40d210:	call   0x66e0:0xf2296a95
  40d217:	pushf  
  40d218:	cli    
  40d219:	popf   
  40d21a:	push   esp
  40d21b:	xchg   edi,eax
  40d21c:	jg     0x40d276
  40d21e:	lds    esp,FWORD PTR [edx-0x47d5f346]
  40d224:	out    0x43,eax
  40d226:	pop    edx
  40d227:	pusha  
  40d228:	jmp    0xf7f4e03d
  40d22d:	or     esi,DWORD PTR [edx+0x3f]
  40d230:	cmc    
  40d231:	fwait
  40d232:	jns    0x40d259
  40d234:	mov    al,ds:0x29fe6860
  40d239:	outs   dx,BYTE PTR ds:[esi]
  40d23a:	imul   esp,DWORD PTR [ebx+0x3a3b55ff],0xaac8c224
  40d244:	das    
  40d245:	dec    dx
  40d247:	inc    ebp
  40d248:	fistp  WORD PTR [ecx+0x1d]
  40d24b:	frstor [edi+0x3f]
  40d24e:	std    
  40d24f:	xlat   BYTE PTR ds:[ebx]
  40d250:	push   0x59
  40d252:	outs   dx,BYTE PTR ds:[esi]
  40d253:	aad    0xf3
  40d255:	push   ebx
  40d256:	int    0x96
  40d258:	inc    eax
  40d259:	push   ss
  40d25a:	mov    ebp,0x3e730dcc
  40d25f:	or     BYTE PTR [eax-0x3bdd72fd],0xb3
  40d266:	push   esi
  40d267:	lods   al,BYTE PTR ds:[esi]
  40d268:	out    0x3f,eax
  40d26a:	cs pop ss
  40d26c:	mov    ch,ah
  40d26e:	into   
  40d26f:	popa   
  40d270:	mov    eax,ds:0x97ec7b2d
  40d275:	fnstsw WORD PTR [ecx]
  40d277:	cli    
  40d278:	in     eax,dx
  40d279:	jl     0x40d2b2
  40d27b:	mov    edi,ds
  40d27d:	xlat   BYTE PTR ds:[ebx]
  40d27e:	ret    0x1cf1
  40d281:	xor    eax,0x7f191081
  40d286:	cmc    
  40d287:	stc    
  40d288:	xor    eax,0x31e511dd
  40d28d:	loop   0x40d2c4
  40d28f:	ds pop edx
  40d291:	mov    ecx,eax
  40d293:	xchg   esp,eax
  40d294:	sub    al,0x32
  40d296:	cld    
  40d297:	outs   dx,DWORD PTR ds:[esi]
  40d298:	xor    bl,BYTE PTR [edx+0x2d]
  40d29b:	mov    ds:0xefdefa15,al
  40d2a0:	stc    
  40d2a1:	mov    edi,0xd32cf78e
  40d2a6:	mul    ebp
  40d2a8:	or     eax,0x5912eb00
  40d2ad:	cwde   
  40d2ae:	lock int 0x39
  40d2b1:	ret    0x6f81
  40d2b4:	in     eax,0x34
  40d2b6:	xchg   ecx,eax
  40d2b7:	popa   
  40d2b8:	jno    0x40d2a1
  40d2ba:	jg     0x40d2e5
  40d2bc:	mov    edx,0x6abf239f
  40d2c1:	arpl   WORD PTR [edi+ebx*2-0x7c47fe1c],di
  40d2c8:	mov    cs,WORD PTR [edi]
  40d2ca:	(bad)  
  40d2cc:	inc    esp
  40d2cd:	dec    ebx
  40d2ce:	and    eax,0x668b2ed1
  40d2d3:	js     0x40d2f2
  40d2d5:	inc    ebx
  40d2d6:	sbb    DWORD PTR [ebp-0x1a],esp
  40d2d9:	aas    
  40d2da:	push   edx
  40d2db:	mov    ah,bh
  40d2dd:	dec    ebp
  40d2de:	pop    es
  40d2df:	hlt    
  40d2e0:	test   BYTE PTR [edi],al
  40d2e2:	ins    DWORD PTR es:[edi],dx
  40d2e3:	and    eax,DWORD PTR [ebx-0x7256b751]
  40d2e9:	daa    
  40d2ea:	xchg   edx,eax
  40d2eb:	xchg   ebx,eax
  40d2ec:	dec    ecx
  40d2ed:	mov    eax,ds:0xf2f91166
  40d2f2:	lea    ebp,[eax-0x17]
  40d2f5:	sbb    BYTE PTR [eax+0x53e26df4],ah
  40d2fb:	jle    0x40d2b3
  40d2fd:	add    esp,DWORD PTR [edx-0x7e]
  40d300:	dec    eax
  40d301:	imul   eax,DWORD PTR [eax+0x33d8eb4c],0xffffff92
  40d308:	mov    ds:0xb8b9dd5,al
  40d30d:	in     al,0xfe
  40d30f:	sbb    ebx,DWORD PTR [edi+0x73]
  40d312:	popf   
  40d313:	adc    eax,0x6f51eb04
  40d318:	(bad)
  40d31b:	xlat   BYTE PTR ds:[ebx]
  40d31c:	mov    ?,ebp
  40d31e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d31f:	jle    0x40d38c
  40d321:	inc    esi
  40d322:	data16 add al,0x46
  40d325:	rol    BYTE PTR [edi+0x34],0xf
  40d329:	mov    bh,0xe5
  40d32b:	std    
  40d32c:	dec    ecx
  40d32d:	and    BYTE PTR [edx+0x3f81085],cl
  40d333:	jno    0x40d376
  40d335:	jle    0x40d384
  40d337:	push   ss
  40d338:	(bad)  
  40d339:	(bad)  
  40d33a:	xchg   esi,eax
  40d33b:	inc    ebx
  40d33c:	loope  0x40d336
  40d33e:	cmp    eax,0xbb5827a4
  40d343:	fld    QWORD PTR [ebx-0x2]
  40d346:	or     dl,BYTE PTR [eax]
  40d348:	iret   
  40d349:	std    
  40d34a:	adc    al,0x97
  40d34c:	push   esp
  40d34d:	cmp    esi,DWORD PTR [edi]
  40d34f:	jmp    0xf94a:0xc4046623
  40d356:	dec    eax
  40d357:	pusha  
  40d358:	adc    al,0x8f
  40d35a:	push   edx
  40d35b:	stc    
  40d35c:	leave  
  40d35d:	outs   dx,BYTE PTR ds:[esi]
  40d35e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d35f:	out    0xe6,al
  40d361:	data16 test BYTE PTR [ebx],ah
  40d364:	addr16 or dh,cl
  40d367:	or     BYTE PTR ds:[esi],ch
  40d36a:	mov    ah,0x65
  40d36c:	lea    ebp,[edx-0x5c40010e]
  40d372:	dec    esp
  40d373:	jbe    0x40d39d
  40d375:	jnp    0x40d3b8
  40d377:	dec    ebx
  40d378:	retf   
  40d379:	fld    QWORD PTR [edi-0x44]
  40d37c:	dec    edi
  40d37d:	fsub   DWORD PTR [esi]
  40d37f:	cld    
  40d380:	retf   
  40d381:	adc    eax,0xedf04cc3
  40d386:	test   al,0x63
  40d388:	mov    eax,ds:0x7b24c81
  40d38d:	inc    edx
  40d38e:	adc    ecx,DWORD PTR [ebp+0x70]
  40d391:	stos   BYTE PTR es:[edi],al
  40d392:	fadd   st(3),st
  40d394:	es sub al,0x86
  40d397:	mov    dl,0xc6
  40d399:	jge    0x40d381
  40d39b:	sbb    BYTE PTR [eax-0x3f5a83f7],dl
  40d3a1:	nop
  40d3a2:	sub    edi,DWORD PTR [edx+0x1f6dc5ff]
  40d3a8:	dec    eax
  40d3a9:	fld    TBYTE PTR [esi-0x39c739]
  40d3af:	mov    al,0x46
  40d3b1:	iret   
  40d3b2:	pop    ss
  40d3b3:	sbb    al,0x8e
  40d3b5:	mov    WORD PTR [edx],fs
  40d3b7:	pop    edx
  40d3b8:	jo     0x40d3f2
  40d3ba:	rcr    edx,cl
  40d3bc:	loopne 0x40d34e
  40d3be:	loopne 0x40d439
  40d3c0:	cmp    DWORD PTR [edx+0x5c52b796],0x26
  40d3c7:	adc    cl,BYTE PTR cs:[ebx+0x1d]
  40d3cb:	shr    edi,cl
  40d3cd:	mov    fs,WORD PTR [esp+eax*4-0x2a]
  40d3d1:	dec    esi
  40d3d2:	add    BYTE PTR [esi+0x3a],ch
  40d3d5:	add    esi,esp
  40d3d7:	add    al,BYTE PTR [esi]
  40d3d9:	push   esp
  40d3da:	push   ebp
  40d3db:	add    DWORD PTR [ecx+0x104da33b],0x45
  40d3e2:	imul   edi,DWORD PTR [ecx-0xb],0x2a4a6a1d
  40d3e9:	jo     0x40d42d
  40d3eb:	mov    ch,BYTE PTR [edx-0x24f5e29f]
  40d3f1:	hlt    
  40d3f2:	push   esp
  40d3f3:	pushf  
  40d3f4:	add    edx,DWORD PTR [eax-0x4c9b251b]
  40d3fa:	pop    esi
  40d3fb:	xlat   BYTE PTR ds:[ebx]
  40d3fc:	(bad)  
  40d3fd:	jae    0x40d466
  40d3ff:	fwait
  40d400:	es retf 0x775d
  40d404:	aaa    
  40d405:	inc    sp
  40d407:	adc    ah,dh
  40d409:	aaa    
  40d40a:	scas   eax,DWORD PTR es:[edi]
  40d40b:	imul   ecx,DWORD PTR [ecx],0x1f5fb3e0
  40d411:	fcomp  DWORD PTR [esi]
  40d413:	(bad)  
  40d414:	call   0xf7839f3e
  40d419:	add    ch,BYTE PTR [ebp+ebp*8+0x5c]
  40d41d:	cmp    BYTE PTR [esi-0x7415c169],0xad
  40d424:	outs   dx,BYTE PTR ds:[esi]
  40d425:	or     BYTE PTR [edi+eax*4+0x33],0x57
  40d42a:	mov    ds:0x40e7216f,al
  40d42f:	xlat   BYTE PTR ds:[ebx]
  40d430:	push   es
  40d431:	jne    0x40d45c
  40d433:	pop    DWORD PTR [ebx+0x7ec3b3ed]
  40d439:	out    0xce,eax
  40d43b:	push   edx
  40d43c:	dec    ecx
  40d43d:	lds    ebp,FWORD PTR [edi-0x61]
  40d440:	add    BYTE PTR [ebx+0x65],al
  40d443:	ret    
  40d444:	fldenv [ebx+eiz*8-0x5a9a59d5]
  40d44b:	call   0x109f77e
  40d450:	fwait
  40d451:	inc    edi
  40d452:	outs   dx,BYTE PTR ds:[esi]
  40d453:	in     al,dx
  40d454:	or     esp,DWORD PTR [eax]
  40d456:	lock and bl,BYTE PTR [edx]
  40d459:	ins    DWORD PTR es:[edi],dx
  40d45a:	mov    ebx,0xaa4a7716
  40d45f:	retf   0xe0b0
  40d462:	mov    eax,0xf579b58d
  40d467:	in     eax,0x99
  40d469:	mov    DWORD PTR [edi+0x520650bb],ecx
  40d46f:	or     dl,BYTE PTR ds:0x1a53eeea
  40d475:	rcl    BYTE PTR [eax],1
  40d477:	fdiv   st,st(0)
  40d479:	ins    DWORD PTR es:[edi],dx
  40d47a:	scas   al,BYTE PTR es:[edi]
  40d47b:	xlat   BYTE PTR ds:[ebx]
  40d47c:	mov    ebx,0x700451aa
  40d481:	jno    0x40d4a9
  40d483:	dec    BYTE PTR ds:0xc13fde50
  40d489:	test   eax,0xfa8eaad2
  40d48e:	(bad)  
  40d48f:	add    ebp,DWORD PTR [ebp-0xc]
  40d492:	stos   DWORD PTR es:[edi],eax
  40d493:	out    dx,eax
  40d494:	and    eax,0x2868a270
  40d499:	sub    ebx,DWORD PTR [edi-0x1ca776d5]
  40d49f:	mov    dl,0x31
  40d4a1:	inc    ecx
  40d4a2:	dec    eax
  40d4a3:	jb     0x40d456
  40d4a5:	clc    
  40d4a6:	in     al,0xe0
  40d4a8:	push   eax
  40d4a9:	sub    al,0xf7
  40d4ab:	mov    DWORD PTR [eax+eax*2-0x4],esp
  40d4af:	sub    al,0x43
  40d4b1:	pop    ss
  40d4b2:	jnp    0x40d4fc
  40d4b4:	jbe    0x40d44a
  40d4b6:	ins    BYTE PTR es:[edi],dx
  40d4b7:	pop    ebx
  40d4b8:	addr16 enter 0x7e9d,0x41
  40d4bd:	repnz out dx,al
  40d4bf:	fs fdivrp st(4),st
  40d4c2:	imul   ebx,DWORD PTR [ebx+ebp*8+0x1f],0x75
  40d4c7:	ret    
  40d4c8:	pop    ss
  40d4c9:	int    0xd9
  40d4cb:	cwde   
  40d4cc:	adc    al,0xcc
  40d4ce:	mov    dh,al
  40d4d0:	iret   
  40d4d1:	test   eax,0x2f2e0c76
  40d4d6:	pop    ds
  40d4d7:	jge    0x40d523
  40d4d9:	dec    ebx
  40d4da:	and    eax,0xeb02bba7
  40d4df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4e0:	(bad)  
  40d4e1:	int3   
  40d4e2:	sub    BYTE PTR [ecx+0x39],bl
  40d4e5:	data16 mov dl,0xbb
  40d4e8:	fwait
  40d4e9:	and    ax,0x74b7
  40d4ed:	inc    edx
  40d4ee:	retf   0x8cf
  40d4f1:	sar    edx,1
  40d4f3:	jecxz  0x40d4dd
  40d4f5:	sbb    dh,BYTE PTR ds:0xa956286b
  40d4fb:	push   ebx
  40d4fc:	enter  0xeeb7,0x18
  40d500:	stos   DWORD PTR es:[edi],eax
  40d501:	(bad)  
  40d502:	retf   0x1409
  40d505:	mov    ch,BYTE PTR [eax+ebp*4+0x1223372d]
  40d50c:	div    DWORD PTR [ebx]
  40d50e:	jo     0x40d4df
  40d510:	adc    al,0x36
  40d512:	fisttp WORD PTR [ecx]
  40d514:	ss jnp 0x40d508
  40d517:	jge    0x40d4f5
  40d519:	inc    ebx
  40d51a:	xor    DWORD PTR [edx+ebp*8],esp
  40d51d:	push   ecx
  40d51e:	add    DWORD PTR [edx+0x2e849a86],ebx
  40d524:	stc    
  40d525:	jb     0x40d57d
  40d527:	int    0x79
  40d529:	int    0x88
  40d52b:	test   BYTE PTR [ebx+ebx*8+0x150403c2],bh
  40d532:	or     ecx,DWORD PTR [eax]
  40d534:	loopne 0x40d555
  40d536:	xor    BYTE PTR [esp+ebx*2-0x17],0x97
  40d53b:	sub    bh,BYTE PTR [ebx+0x32e3bcbd]
  40d541:	loope  0x40d522
  40d543:	outs   dx,DWORD PTR ds:[esi]
  40d544:	pop    eax
  40d545:	loop   0x40d4c7
  40d547:	mov    ah,0x39
  40d549:	pop    esi
  40d54a:	dec    ecx
  40d54b:	ja     0x40d54a
  40d54d:	mov    esp,DWORD PTR [ebx]
  40d54f:	push   eax
  40d550:	pop    esi
  40d551:	pop    ds
  40d552:	or     al,0xc7
  40d554:	xchg   esi,eax
  40d555:	cld    
  40d556:	mov    eax,ebx
  40d558:	or     eax,eax
  40d55a:	sub    eax,0x3daadfd4
  40d55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d560:	and    al,0x16
  40d562:	(bad)  
  40d563:	out    0x3c,al
  40d565:	addr16 xchg ebp,eax
  40d567:	(bad)  
  40d568:	iret   
  40d569:	sub    DWORD PTR [edi],esi
  40d56b:	cmp    BYTE PTR [edx-0x6ae08073],dh
  40d571:	and    BYTE PTR [ebx],dh
  40d573:	sar    bh,0x71
  40d576:	jle    0x40d51f
  40d578:	enter  0xbfd7,0x19
  40d57c:	pushf  
  40d57d:	push   cs
  40d57e:	fimul  WORD PTR [ebx+0x34]
  40d581:	(bad)  
  40d582:	call   0x4dbc1f47
  40d587:	std    
  40d588:	xor    edi,DWORD PTR [esi-0x1c1faf6b]
  40d58e:	push   ss
  40d58f:	fist   DWORD PTR [esi+0x71]
  40d592:	aas    
  40d593:	lahf   
  40d594:	adc    ecx,eax
  40d596:	sti    
  40d597:	mov    esp,esi
  40d599:	das    
  40d59a:	mov    ah,0xc4
  40d59c:	cli    
  40d59d:	xchg   edi,eax
  40d59e:	inc    edx
  40d59f:	mov    ebx,DWORD PTR [ebx]
  40d5a1:	addr16 inc ecx
  40d5a3:	call   0x5b78758d
  40d5a8:	shr    ah,0xa4
  40d5ab:	aas    
  40d5ac:	push   ebp
  40d5ad:	mov    edx,0x8f067a13
  40d5b2:	fdiv   QWORD PTR [ebx+eax*1]
  40d5b5:	mov    edi,0xb9d26b4
  40d5ba:	test   DWORD PTR [eax],esi
  40d5bc:	mov    esp,0x17e0ea25
  40d5c1:	out    0xde,al
  40d5c3:	test   BYTE PTR [esi+0x3],bh
  40d5c6:	ror    BYTE PTR [esi],0x88
  40d5c9:	mov    BYTE PTR [eax-0x48],ch
  40d5cc:	icebp  
  40d5cd:	stc    
  40d5ce:	or     DWORD PTR [edi+0x7cd3eb9],esp
  40d5d4:	pop    ebx
  40d5d5:	xchg   ecx,eax
  40d5d6:	pop    es
  40d5d7:	retf   
  40d5d8:	clc    
  40d5d9:	out    0xcc,eax
  40d5db:	dec    ecx
  40d5dc:	fst    DWORD PTR [edi+0x217cc809]
  40d5e2:	sub    DWORD PTR [edi-0x3c42a382],ebx
  40d5e8:	adc    eax,0xc4eea6d1
  40d5ed:	xor    DWORD PTR [ebx+0x35],edx
  40d5f0:	out    0x2a,al
  40d5f2:	and    al,0xad
  40d5f4:	fwait
  40d5f5:	ror    BYTE PTR [ecx+0x6f34e37d],1
  40d5fb:	add    eax,0xa9d5b99c
  40d600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d601:	add    BYTE PTR [ecx],dh
  40d603:	into   
  40d604:	ret    
  40d605:	push   esp
  40d606:	sub    edi,esp
  40d608:	inc    esi
  40d609:	retf   
  40d60a:	push   eax
  40d60b:	mov    al,ds:0x61e966e2
  40d610:	push   eax
  40d611:	jmp    DWORD PTR [eax]
  40d613:	sub    BYTE PTR [eax-0x8],cl
  40d616:	xchg   edi,eax
  40d617:	in     eax,dx
  40d618:	(bad)  
  40d619:	(bad)  
  40d61a:	retf   
  40d61b:	sti    
  40d61c:	clc    
  40d61d:	in     eax,0xbb
  40d61f:	push   esp
  40d620:	bound  edx,QWORD PTR [ebp-0x3230e058]
  40d626:	sbb    esp,DWORD PTR [edi]
  40d628:	daa    
  40d629:	pop    eax
  40d62a:	imul   edi,DWORD PTR [edx-0x25],0xffffffd9
  40d62e:	mov    al,0xa2
  40d630:	pop    ebp
  40d631:	add    ebp,esi
  40d633:	mov    eax,ds:0xa57f8708
  40d638:	inc    ebx
  40d639:	lods   al,BYTE PTR ds:[esi]
  40d63a:	int3   
  40d63b:	and    eax,0xc7c24ba9
  40d640:	push   ebp
  40d641:	push   cs
  40d642:	xor    DWORD PTR [ecx+0x56d6fa0a],esi
  40d648:	push   edx
  40d649:	xor    al,0x59
  40d64b:	or     al,0x29
  40d64d:	int    0xce
  40d64f:	or     al,0x25
  40d651:	repnz pop edx
  40d653:	xor    ch,dh
  40d655:	pop    eax
  40d656:	shl    DWORD PTR [esp+ebp*4],1
  40d659:	loop   0x40d6b4
  40d65b:	and    al,0x32
  40d65d:	adc    al,0x3f
  40d65f:	ror    al,1
  40d661:	lds    ebp,FWORD PTR [edi-0x1b]
  40d664:	fild   QWORD PTR [eax-0x5480686e]
  40d66a:	mov    dh,cl
  40d66c:	outs   dx,BYTE PTR ds:[esi]
  40d66d:	sub    DWORD PTR [edx+edi*8+0x76],edi
  40d671:	xchg   DWORD PTR [ebx],esi
  40d673:	aam    0xbe
  40d675:	mov    ch,0x9d
  40d677:	sahf   
  40d678:	aaa    
  40d679:	loope  0x40d64c
  40d67b:	push   ds
  40d67c:	push   esp
  40d67d:	xlat   BYTE PTR ds:[ebx]
  40d67e:	sub    esp,DWORD PTR [eax]
  40d680:	sub    dl,ah
  40d682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d683:	dec    esi
  40d684:	mov    ebp,0x5cb59253
  40d689:	xor    edi,DWORD PTR [eax-0x3c]
  40d68c:	shr    esp,1
  40d68e:	and    DWORD PTR [ebp+0x5c644bb8],edi
  40d694:	inc    edx
  40d695:	mov    esi,0x2663f5e9
  40d69a:	push   ss
  40d69b:	add    DWORD PTR [ebx],esp
  40d69d:	mov    dl,0x59
  40d69f:	data16 fnstsw WORD PTR [ebx+0x73]
  40d6a3:	mov    al,ds:0x30a906a5
  40d6a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6a9:	popa   
  40d6aa:	fist   DWORD PTR [esi+eiz*8]
  40d6ad:	dec    esi
  40d6ae:	sbb    eax,0x1780ef3
  40d6b3:	xchg   ebp,eax
  40d6b4:	pop    ebp
  40d6b5:	daa    
  40d6b6:	lea    ebp,[edx-0x36]
  40d6b9:	adc    DWORD PTR [ebp-0x3],esp
  40d6bc:	xchg   bh,cl
  40d6be:	mov    bh,0xeb
  40d6c0:	and    cl,BYTE PTR [eax+0x1e1c6ad5]
  40d6c6:	sbb    DWORD PTR [ebx],ecx
  40d6c8:	and    eax,0x2c8081c5
  40d6cd:	push   es
  40d6ce:	pop    ebp
  40d6cf:	out    dx,al
  40d6d0:	push   esi
  40d6d1:	clc    
  40d6d2:	and    DWORD PTR [ebp+0x40],eax
  40d6d5:	div    BYTE PTR [ecx]
  40d6d7:	daa    
  40d6d8:	loope  0x40d6ac
  40d6da:	scas   eax,DWORD PTR es:[edi]
  40d6db:	call   0xcdf9:0xbf5f4e1
  40d6e2:	mov    dl,0x6b
  40d6e4:	add    dl,BYTE PTR [eax-0x64]
  40d6e7:	mov    ecx,0x761d8715
  40d6ec:	shr    BYTE PTR [edi-0x39],1
  40d6ef:	test   eax,0x8e4908c
  40d6f4:	dec    esp
  40d6f5:	pop    eax
  40d6f6:	and    cl,dh
  40d6f8:	push   cs
  40d6f9:	inc    ecx
  40d6fa:	jne    0x40d711
  40d6fc:	jg     0x40d6fd
  40d6fe:	mul    dh
  40d700:	xor    eax,0xef3aff7a
  40d705:	cli    
  40d706:	and    ch,BYTE PTR [ebx-0x700dbb05]
  40d70c:	mov    eax,ds:0x700f6bac
  40d711:	add    eax,0xbf8b818b
  40d716:	mov    edx,DWORD PTR ds:0x9a056794
  40d71c:	dec    ebp
  40d71d:	jmp    0x16a8:0x53c52658
  40d724:	pushf  
  40d725:	ins    DWORD PTR es:[edi],dx
  40d726:	fadd   DWORD PTR [ebp+ebx*4-0x1f]
  40d72a:	pop    eax
  40d72b:	scas   eax,DWORD PTR es:[edi]
  40d72c:	xchg   esp,eax
  40d72d:	cmp    edi,DWORD PTR [eax+0x7f7d4391]
  40d733:	xor    BYTE PTR [eax-0x6fb7911d],bl
  40d739:	stos   DWORD PTR es:[edi],eax
  40d73a:	sub    ah,BYTE PTR [eax-0x77060d50]
  40d740:	and    eax,0x1e36b423
  40d745:	sub    DWORD PTR [edi-0x51],ebx
  40d748:	les    edx,FWORD PTR [ebp+0x5cd1e48e]
  40d74e:	ja     0x40d794
  40d750:	inc    ebx
  40d751:	xor    BYTE PTR [ecx],bh
  40d753:	or     esp,DWORD PTR [ebx-0x66]
  40d756:	mov    dh,BYTE PTR [edx]
  40d758:	aaa    
  40d759:	hlt    
  40d75a:	cmp    dl,al
  40d75c:	xor    BYTE PTR [edx],ch
  40d75e:	jp     0x40d7da
  40d760:	adc    bl,BYTE PTR [ecx+0x1d2dbb9d]
  40d766:	mov    al,al
  40d768:	(bad)  
  40d769:	jg     0x40d703
  40d76b:	pop    esi
  40d76c:	cld    
  40d76d:	inc    esi
  40d76e:	test   eax,0x819fbae0
  40d773:	push   ebp
  40d774:	xor    esi,ebp
  40d776:	pop    edi
  40d777:	adc    edi,DWORD PTR [edx-0x5]
  40d77a:	or     BYTE PTR [edx-0x23dbbd9b],al
  40d780:	sub    esi,DWORD PTR [esp+ebx*2+0x1a1a1f32]
  40d787:	pop    ecx
  40d788:	mov    ds:0x23842da7,eax
  40d78d:	mov    al,ds:0xd738a9ce
  40d792:	stos   DWORD PTR es:[edi],eax
  40d793:	adc    esi,DWORD PTR [eax]
  40d795:	scas   al,BYTE PTR es:[edi]
  40d796:	xchg   BYTE PTR [ecx+0x730d97ec],cl
  40d79c:	push   ds
  40d79d:	data16 sub BYTE PTR [edi+0x150be4e1],ch
  40d7a4:	sub    eax,0x79739ed4
  40d7a9:	pushf  
  40d7aa:	mov    eax,0xeb275892
  40d7af:	xchg   ecx,eax
  40d7b0:	pop    ss
  40d7b1:	push   0x35
  40d7b3:	das    
  40d7b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7b5:	mov    al,0xcf
  40d7b7:	adc    al,0x23
  40d7b9:	ss mov ecx,0xa6f333f1
  40d7bf:	mov    edx,DWORD PTR [eax-0x6c7cb2de]
  40d7c5:	repnz push esi
  40d7c7:	int    0xda
  40d7c9:	adc    eax,0x3e6c4fc7
  40d7ce:	hlt    
  40d7cf:	loop   0x40d7b2
  40d7d1:	loope  0x40d786
  40d7d3:	stc    
  40d7d4:	ja     0x40d771
  40d7d6:	das    
  40d7d7:	jmp    0xcef5:0xbe1539a2
  40d7de:	jnp    0x40d79e
  40d7e0:	in     al,0xda
  40d7e2:	xchg   edx,eax
  40d7e3:	and    DWORD PTR [eax],0x4f867fce
  40d7e9:	(bad)
  40d7ec:	mov    ecx,ebp
  40d7ee:	sbb    bh,BYTE PTR [ecx]
  40d7f0:	add    al,0xca
  40d7f2:	stos   BYTE PTR es:[edi],al
  40d7f3:	sbb    al,0x94
  40d7f5:	test   eax,0xfc67e2b8
  40d7fa:	sti    
  40d7fb:	ds or  edi,ebx
  40d7fe:	lea    ebp,[edi+0x77d9f91f]
  40d804:	jmp    0xe82b00
  40d809:	test   al,0x23
  40d80b:	cmp    BYTE PTR [esi],0x6a
  40d80e:	aam    0xf7
  40d810:	jae    0x40d7f9
  40d812:	or     DWORD PTR [eax-0x70],edx
  40d815:	xchg   edi,eax
  40d816:	or     eax,0x288be2e4
  40d81b:	stc    
  40d81c:	jbe    0x40d867
  40d81e:	fbld   TBYTE PTR ds:[eax+0x406d8a89]
  40d825:	push   ecx
  40d826:	jle    0x40d85a
  40d828:	sbb    DWORD PTR [edi+ebx*4+0x4106902],eax
  40d82f:	pop    esi
  40d830:	dec    eax
  40d831:	sbb    eax,0xc68dd84c
  40d836:	(bad)  
  40d837:	fadd   DWORD PTR [esi-0xb00f391]
  40d83d:	cmp    ah,bh
  40d83f:	cmc    
  40d840:	cmp    al,BYTE PTR [edx]
  40d842:	or     al,0xdb
  40d844:	push   cs
  40d845:	mov    cl,0x21
  40d847:	xor    ecx,esp
  40d849:	cld    
  40d84a:	dec    esp
  40d84b:	stos   DWORD PTR es:[edi],eax
  40d84c:	js     0x40d88e
  40d84e:	xor    BYTE PTR [edx],0x51
  40d851:	mov    ebx,0xf6081d44
  40d856:	mov    edx,ebp
  40d858:	dec    edi
  40d859:	in     eax,0x86
  40d85b:	push   0xffffffcb
  40d85d:	jmp    0x4b85da8e
  40d862:	in     al,dx
  40d863:	test   DWORD PTR [edx+0x54aad19d],esp
  40d869:	loope  0x40d825
  40d86b:	push   0xf9b52ed
  40d870:	add    BYTE PTR [ebp+0x7a],ch
  40d873:	lock ret 
  40d875:	mov    ss,WORD PTR [edx]
  40d877:	sbb    eax,0x61a3e86b
  40d87c:	inc    edi
  40d87d:	fnstsw WORD PTR ds:0x7c0c3af1
  40d883:	ins    DWORD PTR es:[edi],dx
  40d884:	ja     0x40d8d5
  40d886:	mov    esi,0x3bc6df68
  40d88b:	push   edi
  40d88c:	lods   al,BYTE PTR ds:[esi]
  40d88d:	retf   0xbb91
  40d890:	cmp    al,0x3f
  40d892:	leave  
  40d893:	cli    
  40d894:	addr16 push ds
  40d896:	loop   0x40d8e4
  40d898:	(bad)
  40d89b:	adc    DWORD PTR [edx+0x65],0xad308256
  40d8a2:	shl    BYTE PTR [ecx+0x677d3bd2],0xe8
  40d8a9:	lock cmp ebx,DWORD PTR [edi-0x22]
  40d8ad:	pop    edx
  40d8ae:	sub    BYTE PTR [ebp-0x2dc75d5d],al
  40d8b4:	pop    ss
  40d8b5:	repnz in al,0x30
  40d8b8:	sar    DWORD PTR [eax-0x3337f93a],cl
  40d8be:	cmp    DWORD PTR [esi+0x30],ebp
  40d8c1:	ror    BYTE PTR [esi+0x19cf7724],1
  40d8c7:	fdiv   QWORD PTR [esi+0x5a]
  40d8ca:	xchg   ebp,edx
  40d8cc:	dec    bl
  40d8ce:	mov    al,ds:0x58004315
  40d8d3:	jb     0x40d902
  40d8d5:	fwait
  40d8d6:	shl    cl,cl
  40d8d8:	xchg   ah,ah
  40d8da:	addr16 inc ebx
  40d8dc:	ds xchg edx,eax
  40d8de:	(bad)  
  40d8e0:	or     eax,0xad288159
  40d8e5:	aad    0xd5
  40d8e7:	mov    bl,0x6b
  40d8e9:	jp     0x40d8bf
  40d8eb:	mov    eax,0x7d3851de
  40d8f0:	xor    eax,0xd2f31265
  40d8f5:	push   ecx
  40d8f6:	mov    cl,0xdd
  40d8f8:	sbb    dh,BYTE PTR [ebp-0x198d0167]
  40d8fe:	iret   
  40d8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d900:	adc    DWORD PTR [eax+0x60],esp
  40d903:	lea    si,[edi]
  40d906:	xchg   DWORD PTR [eax-0x5c],eax
  40d909:	or     ebp,DWORD PTR [edi-0x6e8d691d]
  40d90f:	ins    DWORD PTR es:[edi],dx
  40d910:	iret   
  40d911:	jnp    0x40d928
  40d913:	enter  0x53c1,0x29
  40d917:	dec    esi
  40d918:	add    BYTE PTR [eax-0x73],bh
  40d91b:	cmp    eax,0xc3c54d6b
  40d920:	aam    0x5b
  40d922:	or     al,0x7
  40d924:	les    esi,FWORD PTR ds:0x330bc726
  40d92a:	adc    dh,cl
  40d92c:	iret   
  40d92d:	sub    ebp,DWORD PTR [ebx+0x9]
  40d930:	mov    eax,ds:0xada903e7
  40d935:	adc    BYTE PTR [eax+0x11fb2ebc],al
  40d93b:	imul   edx,DWORD PTR ds:0xfbf39eb7,0x63
  40d942:	mov    WORD PTR [eax-0xe],fs
  40d945:	scas   al,BYTE PTR es:[edi]
  40d946:	lods   al,BYTE PTR ds:[esi]
  40d947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d948:	add    dl,cl
  40d94a:	out    dx,eax
  40d94b:	dec    edi
  40d94c:	hlt    
  40d94d:	fwait
  40d94e:	sub    DWORD PTR [edi+0x49],esi
  40d951:	(bad)  
  40d952:	stc    
  40d953:	mov    eax,ds:0x9c669865
  40d958:	mov    bl,0x76
  40d95a:	aas    
  40d95b:	(bad)  
  40d95c:	call   0xb2fee51
  40d961:	(bad)  
  40d963:	cmp    BYTE PTR cs:[ebp+0x6c4d4932],ch
  40d96a:	add    eax,0xae78f34d
  40d96f:	push   edx
  40d970:	sub    esi,DWORD PTR [eax+eax*8]
  40d973:	jo     0x40d9c9
  40d975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d976:	mov    dl,0xd9
  40d978:	push   eax
  40d979:	push   edi
  40d97a:	aaa    
  40d97b:	pop    eax
  40d97c:	mov    bl,0xfc
  40d97e:	adc    eax,DWORD PTR [edi+0xbbf2cec]
  40d984:	dec    edi
  40d985:	lahf   
  40d986:	pop    eax
  40d987:	jb     0x40d939
  40d989:	ja     0x40d9dc
  40d98b:	mov    al,0x75
  40d98d:	mov    ecx,0x3f7b80b4
  40d992:	sub    eax,0x69c7bf2b
  40d997:	mov    eax,ds:0x8a59535c
  40d99c:	xor    BYTE PTR [edi+esi*2],al
  40d99f:	aad    0x3f
  40d9a1:	dec    esi
  40d9a2:	das    
  40d9a3:	and    DWORD PTR [esi+ecx*8+0x5c],0x95c1324a
  40d9ab:	les    esp,FWORD PTR [edx]
  40d9ad:	(bad)  
  40d9ae:	pop    es
  40d9af:	pop    edi
  40d9b0:	aaa    
  40d9b1:	add    esi,DWORD PTR [edi+0x3f]
  40d9b4:	mov    eax,ds:0x41cf9d7b
  40d9b9:	fidiv  WORD PTR [ebp+0x60d952]
  40d9bf:	cdq    
  40d9c0:	cmp    DWORD PTR [edx],edx
  40d9c2:	sub    ebx,DWORD PTR [ebp-0x22]
  40d9c5:	xchg   esp,eax
  40d9c6:	mov    cl,BYTE PTR [esp+eax*2+0x24]
  40d9ca:	loop   0x40d980
  40d9cc:	sub    eax,0xdbc4a73e
  40d9d1:	cli    
  40d9d2:	xor    BYTE PTR [edi],bl
  40d9d4:	(bad)  
  40d9d5:	lock push cs
  40d9d7:	xchg   ebp,eax
  40d9d8:	or     DWORD PTR [edi],ebx
  40d9da:	inc    edi
  40d9db:	xchg   edx,eax
  40d9dc:	and    eax,0xe14bc164
  40d9e1:	inc    edx
  40d9e2:	jp     0x40d9ad
  40d9e4:	fisub  DWORD PTR [ebx+0x7a]
  40d9e7:	std    
  40d9e8:	dec    edi
  40d9e9:	ja     0x40da4a
  40d9eb:	pop    esi
  40d9ec:	(bad)  
  40d9ed:	lahf   
  40d9ee:	adc    ah,al
  40d9f0:	mov    al,0xe1
  40d9f2:	sbb    ebp,DWORD PTR [esi-0x53bd89c0]
  40d9f8:	inc    eax
  40d9f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9fa:	xor    DWORD PTR [edx-0x53f3e72e],edi
  40da00:	(bad)  
  40da01:	repz (bad) 
  40da03:	ins    BYTE PTR es:[edi],dx
  40da04:	in     eax,0x91
  40da06:	inc    eax
  40da07:	outs   dx,DWORD PTR ds:[esi]
  40da08:	adc    eax,0xd1dc2acf
  40da0d:	pop    ebx
  40da0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da0f:	imul   ecx,DWORD PTR [ebx],0x1bf81990
  40da15:	mov    cl,dh
  40da17:	dec    ecx
  40da18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da19:	mov    cl,0x6f
  40da1b:	adc    BYTE PTR [esi],0x24
  40da1e:	je     0x40da2f
  40da20:	shl    BYTE PTR cs:[eax+0x25],cl
  40da24:	gs iret 
  40da26:	sti    
  40da27:	gs loop 0x40da04
  40da2a:	or     BYTE PTR [ebx],bh
  40da2c:	mov    esi,DWORD PTR [ebp-0x4a14ff4]
  40da32:	hlt    
  40da33:	fdiv   QWORD PTR [edi+eiz*1-0x6]
  40da37:	and    al,0x19
  40da39:	add    BYTE PTR [ebx],al
  40da3b:	xlat   BYTE PTR ds:[ebx]
  40da3c:	mov    eax,ds:0xbb9ba58e
  40da41:	cmc    
  40da42:	inc    ebp
  40da43:	lods   eax,DWORD PTR ds:[esi]
  40da44:	std    
  40da45:	jmp    DWORD PTR [eax-0x1ba24bd4]
  40da4b:	outs   dx,BYTE PTR gs:[esi]
  40da4d:	dec    ebx
  40da4e:	lock out dx,eax
  40da50:	push   ds
  40da51:	jne    0x40daba
  40da53:	lods   eax,DWORD PTR ds:[esi]
  40da54:	mov    eax,cr7
  40da57:	(bad)  
  40da59:	scas   eax,DWORD PTR es:[edi]
  40da5a:	stc    
  40da5b:	and    BYTE PTR [eax-0x56],dl
  40da5e:	mov    DWORD PTR [ebp+0xc5ba877],ebp
  40da64:	adc    al,0x61
  40da66:	xor    al,0xc4
  40da68:	cli    
  40da69:	lea    edi,[eax]
  40da6b:	imul   eax,DWORD PTR [eax+esi*8+0x65ea59d7],0x27041415
  40da76:	push   ebp
  40da77:	jns    0x40dae4
  40da79:	in     al,dx
  40da7a:	lock push ds
  40da7c:	pop    edx
  40da7d:	push   0x9a38df6a
  40da82:	mov    ch,0xdb
  40da84:	retf   
  40da85:	pop    ss
  40da86:	nop
  40da87:	retf   0x826b
  40da8a:	add    eax,0x27327784
  40da8f:	inc    esi
  40da90:	int3   
  40da91:	gs repnz ffree st(6)
  40da95:	inc    esi
  40da96:	cmp    al,0xb7
  40da98:	pop    es
  40da99:	jecxz  0x40dabd
  40da9b:	and    ecx,DWORD PTR [esi+0x73]
  40da9e:	test   eax,edx
  40daa0:	pop    eax
  40daa1:	mov    ds:0xe2998f86,eax
  40daa6:	xchg   ecx,eax
  40daa7:	mov    ecx,0x2a20c6d9
  40daac:	mov    eax,0xb15d5cf9
  40dab1:	nop
  40dab2:	ja     0x40da6d
  40dab4:	sub    eax,ecx
  40dab6:	sahf   
  40dab7:	push   0xd
  40dab9:	test   ah,bh
  40dabb:	into   
  40dabc:	fstp   DWORD PTR [ecx+0xd]
  40dabf:	mov    cs,ebx
  40dac1:	cmp    eax,DWORD PTR [ebx+0x66]
  40dac4:	pusha  
  40dac5:	test   DWORD PTR [edi+0x7160f810],0x9fc423ac
  40dacf:	cmp    eax,DWORD PTR ds:0xd96caf1c
  40dad5:	dec    ebp
  40dad6:	std    
  40dad7:	inc    esi
  40dad8:	mov    esi,0xf0d6aeb0
  40dadd:	mov    edx,0xce673ef0
  40dae2:	xor    al,dh
  40dae4:	icebp  
  40dae5:	outs   dx,DWORD PTR ds:[esi]
  40dae6:	push   ecx
  40dae7:	inc    edx
  40dae8:	leave  
  40dae9:	inc    edx
  40daea:	mov    ebp,0xed894a66
  40daef:	test   al,0x27
  40daf1:	jb     0x40db38
  40daf3:	pop    esi
  40daf4:	jmp    0x9117b26f
  40daf9:	and    DWORD PTR [edi],eax
  40dafb:	repz xchg edi,esi
  40dafe:	mov    es:0x63078b18,al
  40db04:	and    ebp,DWORD PTR [eax+0x16]
  40db07:	dec    esp
  40db08:	hlt    
  40db09:	pop    es
  40db0a:	pop    ebp
  40db0b:	(bad)  
  40db0c:	adc    ebx,edx
  40db0e:	mov    bh,BYTE PTR [edi+edi*2]
  40db11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db12:	sbb    eax,0x676ac5bc
  40db17:	add    eax,0x62ba7894
  40db1c:	stos   BYTE PTR es:[edi],al
  40db1d:	or     eax,0xcc1b2bcf
  40db22:	dec    edi
  40db23:	mov    esp,DWORD PTR [ecx+0x71b472d9]
  40db29:	hlt    
  40db2a:	mov    ds:0x8898e5b2,eax
  40db2f:	xor    esi,DWORD PTR [edx+0x53]
  40db32:	add    edi,DWORD PTR [ebp+0x5b]
  40db35:	or     BYTE PTR [eax],dl
  40db37:	xor    al,0xab
  40db39:	jecxz  0x40db3b
  40db3b:	cli    
  40db3c:	out    0x75,eax
  40db3e:	or     DWORD PTR [edx],0xfdee7ef
  40db44:	popf   
  40db45:	jle    0x40dba5
  40db47:	or     eax,0x711dcd19
  40db4c:	mov    BYTE PTR [ecx-0x7b],bh
  40db4f:	and    dl,BYTE PTR [ebx-0x7d542826]
  40db55:	jecxz  0x40dbac
  40db57:	fcomp  DWORD PTR [edi-0xe40a7c4]
  40db5d:	dec    edx
  40db5e:	mov    ah,0x43
  40db60:	repz imul BYTE PTR [edx-0x80]
  40db64:	dec    edx
  40db65:	pop    esi
  40db66:	push   ds
  40db67:	inc    edx
  40db68:	pop    ebx
  40db69:	inc    esp
  40db6a:	jns    0x40dba1
  40db6c:	(bad)  
  40db6d:	div    DWORD PTR [ebp-0x9d366]
  40db73:	mov    bl,bl
  40db75:	cwde   
  40db76:	sbb    al,0xb
  40db78:	and    edx,esp
  40db7a:	repz inc esi
  40db7c:	lods   eax,DWORD PTR ds:[esi]
  40db7d:	(bad)  
  40db7e:	arpl   WORD PTR [edi],cx
  40db80:	mov    bl,0x9a
  40db82:	sub    al,0x53
  40db84:	dec    esi
  40db85:	or     dl,BYTE PTR [edi]
  40db87:	cmp    al,0xa2
  40db89:	inc    ebx
  40db8a:	ins    DWORD PTR es:[edi],dx
  40db8b:	sub    ch,BYTE PTR [ebx-0x54]
  40db8e:	mov    ds:0x89235085,al
  40db93:	adc    edx,esi
  40db95:	fcmovne st,st(7)
  40db97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db98:	jmp    0xadd9f462
  40db9d:	inc    ebp
  40db9e:	ficom  DWORD PTR [esi]
  40dba0:	xor    al,0xcd
  40dba2:	test   al,0x73
  40dba4:	mov    esi,0x7b2ba01d
  40dba9:	ins    BYTE PTR es:[edi],dx
  40dbaa:	loop   0x40db9d
  40dbac:	pop    eax
  40dbad:	sub    eax,0xb42ff4a9
  40dbb2:	ror    BYTE PTR [eax-0x7f],1
  40dbb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbb6:	push   ecx
  40dbb7:	fcomi  st,st(6)
  40dbb9:	mov    eax,ds:0x57179470
  40dbbe:	ins    BYTE PTR es:[edi],dx
  40dbbf:	leave  
  40dbc0:	xchg   DWORD PTR [esi-0x5af96d86],esp
  40dbc6:	test   eax,0x7542ef98
  40dbcb:	jg     0x40dc0d
  40dbcd:	shr    DWORD PTR [ebp-0x27013208],1
  40dbd3:	add    ebx,DWORD PTR [edi-0x58]
  40dbd6:	cdq    
  40dbd7:	js     0x40dbe1
  40dbd9:	sbb    al,0xd1
  40dbdb:	push   ss
  40dbdc:	(bad)  [ebp-0x7f2bca6b]
  40dbe2:	dec    ebp
  40dbe3:	jp     0x40dc3e
  40dbe5:	inc    ebp
  40dbe6:	xor    esi,DWORD PTR [esi+0x46]
  40dbe9:	push   cs
  40dbea:	addr16 cwde 
  40dbec:	arpl   WORD PTR [esi],bp
  40dbee:	retf   
  40dbef:	jg     0x40dc08
  40dbf1:	std    
  40dbf2:	jne    0x40dc5d
  40dbf4:	cli    
  40dbf5:	cmp    al,0x55
  40dbf7:	lds    esi,FWORD PTR [ebx+edx*1+0xe2e4ce4]
  40dbfe:	into   
  40dbff:	jmp    0x1b1a:0x522713a6
  40dc06:	scas   eax,DWORD PTR es:[edi]
  40dc07:	outs   dx,BYTE PTR ds:[esi]
  40dc08:	and    al,0x52
  40dc0a:	cli    
  40dc0b:	dec    DWORD PTR [ebx+0x3ec80732]
  40dc11:	cmp    al,0x3a
  40dc13:	aas    
  40dc14:	fstp   QWORD PTR [ebx-0x50]
  40dc17:	pop    edi
  40dc18:	mov    cl,0x25
  40dc1a:	cli    
  40dc1b:	in     eax,0x9a
  40dc1d:	sub    eax,ebx
  40dc1f:	inc    esp
  40dc20:	or     DWORD PTR [ebp-0x6],edi
  40dc23:	add    BYTE PTR [esi-0x4f],0xf0
  40dc27:	les    edx,FWORD PTR [edi-0x7e]
  40dc2a:	inc    edi
  40dc2b:	inc    edx
  40dc2c:	outs   dx,BYTE PTR ds:[esi]
  40dc2d:	inc    ecx
  40dc2e:	mov    cl,0x78
  40dc30:	gs adc eax,0x6617bf15
  40dc36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc37:	jmp    0x9aa48583
  40dc3c:	push   ebx
  40dc3d:	xchg   DWORD PTR [esi-0x28],eax
  40dc40:	push   ss
  40dc41:	dec    esi
  40dc42:	aad    0xb3
  40dc44:	or     DWORD PTR [edx*1-0x79971902],ecx
  40dc4b:	xchg   ebx,eax
  40dc4c:	outs   dx,DWORD PTR ds:[esi]
  40dc4d:	add    ebx,esi
  40dc4f:	inc    esp
  40dc50:	int    0xa4
  40dc52:	stos   BYTE PTR es:[edi],al
  40dc53:	hlt    
  40dc54:	aad    0x97
  40dc56:	sub    eax,0xa5198fd
  40dc5b:	push   edi
  40dc5c:	out    0x6b,eax
  40dc5e:	jns    0x40dc66
  40dc60:	div    DWORD PTR [ecx+0x2a01be6f]
  40dc66:	arpl   WORD PTR [eax],sp
  40dc68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc69:	mov    DWORD PTR [eax],edx
  40dc6b:	leave  
  40dc6c:	out    dx,al
  40dc6d:	xchg   edi,eax
  40dc6e:	or     ebp,DWORD PTR [edx+ebp*4-0x7dc13cd9]
  40dc75:	sub    esi,DWORD PTR [ecx-0x53]
  40dc78:	daa    
  40dc79:	iret   
  40dc7a:	clc    
  40dc7b:	jmp    0x40dc85
  40dc7d:	dec    ecx
  40dc7e:	sub    cl,dh
  40dc80:	mov    ds:0xaeb25aa6,eax
  40dc85:	pop    eax
  40dc86:	pop    ebx
  40dc87:	inc    ecx
  40dc88:	pop    eax
  40dc89:	mov    bl,0x42
  40dc8b:	sbb    al,0x45
  40dc8d:	loop   0x40dc31
  40dc8f:	dec    eax
  40dc90:	xlat   BYTE PTR ds:[ebx]
  40dc91:	push   ss
  40dc92:	add    cl,BYTE PTR [esp+ebp*4]
  40dc95:	push   ss
  40dc96:	push   eax
  40dc97:	pop    ds
  40dc98:	jg     0x40dc37
  40dc9a:	inc    esp
  40dc9b:	scas   eax,DWORD PTR es:[edi]
  40dc9c:	aam    0xa3
  40dc9e:	push   esp
  40dc9f:	int3   
  40dca0:	xchg   BYTE PTR [edx+eax*8-0x2947e8d8],ch
  40dca7:	add    dl,BYTE PTR [eax+esi*2+0x5c31372a]
  40dcae:	fld    TBYTE PTR [eax-0x8]
  40dcb1:	adc    eax,0xbb817610
  40dcb6:	xchg   esp,eax
  40dcb7:	test   BYTE PTR [ebp-0x33],0x1c
  40dcbb:	mov    dl,0xaa
  40dcbd:	ror    BYTE PTR [edx],0xc1
  40dcc0:	and    eax,0x18896f95
  40dcc5:	sbb    ebp,ebx
  40dcc7:	sbb    dl,BYTE PTR [ebx+ecx*1+0x35626de5]
  40dcce:	out    0x14,al
  40dcd0:	xchg   ebx,eax
  40dcd1:	shr    DWORD PTR [eax+edx*2-0x25f3bc04],cl
  40dcd8:	push   0x957c7fe4
  40dcdd:	lods   eax,DWORD PTR ds:[esi]
  40dcde:	sbb    BYTE PTR [ecx-0x44],bh
  40dce1:	sub    bh,BYTE PTR [eax-0x11f9f54d]
  40dce7:	pop    ecx
  40dce8:	es jmp 0x5a0605a5
  40dcee:	jno    0x40dc83
  40dcf0:	sbb    edx,DWORD PTR [ebp-0x6c]
  40dcf3:	push   ss
  40dcf4:	fsub   DWORD PTR [esi+0x43f6d7e9]
  40dcfa:	mov    dl,0x4e
  40dcfc:	retf   
  40dcfd:	test   eax,0xc8753ea6
  40dd02:	jecxz  0x40dc9e
  40dd04:	cmp    dh,BYTE PTR gs:[edx+0x4a]
  40dd08:	fld    DWORD PTR [ebx+ecx*4-0x5b]
  40dd0c:	adc    eax,DWORD PTR [edx+ecx*4-0x51ccae36]
  40dd13:	leave  
  40dd14:	sub    DWORD PTR [edi+0x46],ecx
  40dd17:	jle    0x40dcf3
  40dd19:	mov    ch,0x41
  40dd1b:	out    0x3e,al
  40dd1d:	int3   
  40dd1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd1f:	out    0xa1,eax
  40dd21:	aaa    
  40dd22:	sbb    al,0x69
  40dd24:	mov    ebp,0xa7a70482
  40dd29:	test   al,0xc5
  40dd2b:	sahf   
  40dd2c:	int3   
  40dd2d:	push   esp
  40dd2e:	add    BYTE PTR ds:[esi-0x47],0x9b
  40dd33:	or     DWORD PTR [ebx],ebx
  40dd35:	pop    esi
  40dd36:	nop
  40dd37:	daa    
  40dd38:	sbb    ch,dh
  40dd3a:	fs loopne 0x40ddab
  40dd3d:	mov    bl,0xb6
  40dd3f:	add    BYTE PTR [ecx],ah
  40dd41:	and    eax,0x7538eabe
  40dd46:	pop    esp
  40dd47:	mov    esp,0xd4a974a2
  40dd4c:	loop   0x40dcdb
  40dd4e:	dec    BYTE PTR [ecx+ebp*2+0x5a]
  40dd52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd53:	or     eax,DWORD PTR [ecx]
  40dd55:	fistp  DWORD PTR [esi-0x7b]
  40dd58:	mov    ecx,0x8bfcf73f
  40dd5d:	pusha  
  40dd5e:	ret    
  40dd5f:	xchg   ebp,eax
  40dd60:	fnsave [ebx+0x32]
  40dd63:	mov    ebx,0x2e7b4bf
  40dd68:	mov    ch,0xc8
  40dd6a:	xor    bh,BYTE PTR [ebp+0x43]
  40dd6d:	adc    al,0x79
  40dd6f:	(bad)  
  40dd70:	dec    edx
  40dd71:	das    
  40dd72:	sbb    eax,0xf142150d
  40dd77:	push   esi
  40dd78:	in     al,0x3
  40dd7a:	scas   al,BYTE PTR es:[edi]
  40dd7b:	repnz lahf 
  40dd7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd7e:	test   eax,0x3b9aeeb7
  40dd83:	mov    edx,0x1f976c9d
  40dd88:	lds    esi,FWORD PTR [edi+0x47]
  40dd8b:	cmp    esp,esp
  40dd8d:	mov    al,0xe0
  40dd8f:	xchg   ebx,eax
  40dd90:	into   
  40dd91:	into   
  40dd92:	mov    al,ds:0xecefa058
  40dd97:	xor    ebx,DWORD PTR [eax+0x3f88e94]
  40dd9d:	xor    BYTE PTR [ecx+eiz*1-0x10],0xe3
  40dda2:	cmc    
  40dda3:	leave  
  40dda4:	or     DWORD PTR [eax-0x35],eax
  40dda7:	mov    ebp,DWORD PTR [edx]
  40dda9:	clc    
  40ddaa:	call   0x4a4d6255
  40ddaf:	jl     0x40dda1
  40ddb1:	fdivr  QWORD PTR [esi+0x77]
  40ddb4:	outs   dx,BYTE PTR ds:[esi]
  40ddb5:	mov    ebx,0x84d81134
  40ddba:	mov    edx,0x10f8026
  40ddbf:	lock xchg DWORD PTR [edx],ebx
  40ddc2:	push   0xbd803c05
  40ddc7:	pop    es
  40ddc8:	adc    ebx,DWORD PTR fs:[ecx+0x43d5e942]
  40ddcf:	aas    
  40ddd0:	push   edx
  40ddd1:	inc    esi
  40ddd2:	scas   al,BYTE PTR es:[edi]
  40ddd3:	addr16 jge 0x40ddfc
  40ddd6:	lods   al,BYTE PTR ds:[esi]
  40ddd7:	(bad)  
  40ddd8:	repz jmp 0xe70df897
  40ddde:	aas    
  40dddf:	xor    eax,0xa1feb57e
  40dde4:	pop    es
  40dde5:	add    eax,0xac705c58
  40ddea:	stc    
  40ddeb:	pop    edx
  40ddec:	xchg   edi,eax
  40dded:	sub    eax,0xf577be05
  40ddf2:	or     ecx,DWORD PTR [ebx+0x3]
  40ddf5:	xor    BYTE PTR ds:0x6933b239,bl
  40ddfb:	sti    
  40ddfc:	xchg   ebx,eax
  40ddfd:	and    al,0x3f
  40ddff:	pop    edi
  40de00:	jb     0x40ddac
  40de02:	or     al,0xfc
  40de04:	cld    
  40de05:	cwde   
  40de06:	mov    WORD PTR [edx+0x65e2dc20],fs
  40de0c:	dec    edx
  40de0d:	jle    0x40de0f
  40de0f:	imul   edi,DWORD PTR [edx-0x70],0x995160b3
  40de16:	ins    DWORD PTR es:[edi],dx
  40de17:	popf   
  40de18:	cmp    ah,cl
  40de1a:	inc    esp
  40de1b:	fwait
  40de1c:	inc    edi
  40de1d:	lss    esi,FWORD PTR [esi]
  40de20:	mov    ecx,ecx
  40de22:	mov    esi,0xa9e7e6f2
  40de27:	sbb    BYTE PTR [ecx+0x19742328],cl
  40de2d:	xchg   ebx,eax
  40de2e:	push   eax
  40de2f:	ds stos BYTE PTR es:[edi],al
  40de31:	xor    BYTE PTR [edx-0x1f],bh
  40de34:	data16 je 0x40de6a
  40de37:	jbe    0x40de2a
  40de39:	fwait
  40de3a:	pushf  
  40de3b:	mov    cl,0x78
  40de3d:	or     ecx,DWORD PTR [esi-0x316cc0c1]
  40de43:	mov    ch,BYTE PTR [ecx]
  40de45:	jg     0x40de2f
  40de47:	inc    esi
  40de48:	mov    bl,0x7c
  40de4a:	fidiv  DWORD PTR [esi+edi*2]
  40de4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de4e:	cdq    
  40de4f:	pop    ebx
  40de50:	push   esp
  40de51:	jnp    0x40de90
  40de53:	xchg   edi,eax
  40de54:	data16 icebp 
  40de56:	jnp    0x40de39
  40de58:	mov    al,ds:0x8a4e6435
  40de5d:	and    edi,DWORD PTR [edx]
  40de5f:	sub    al,0xad
  40de61:	jle    0x40de9e
  40de63:	xchg   edi,eax
  40de64:	sub    ah,BYTE PTR ds:0x18622f7e
  40de6a:	cmp    al,0xf2
  40de6c:	sub    ch,BYTE PTR [edi+0x1bb81f09]
  40de72:	in     eax,0x28
  40de74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de75:	and    edi,DWORD PTR es:[edi]
  40de78:	popa   
  40de79:	and    dl,ah
  40de7b:	mov    ah,0xac
  40de7d:	pop    ebp
  40de7e:	sbb    BYTE PTR [esi-0x48],dl
  40de81:	ror    BYTE PTR [ebx+0x3d],cl
  40de84:	cmp    al,0x1f
  40de86:	xchg   edx,eax
  40de87:	xchg   edx,eax
  40de88:	or     DWORD PTR [esi],edi
  40de8a:	daa    
  40de8b:	cmp    edi,DWORD PTR [ebp+0x14d3e50b]
  40de91:	dec    esp
  40de92:	pop    esp
  40de93:	xor    ah,BYTE PTR [edx+esi*8-0x3d]
  40de97:	jae    0x40debe
  40de99:	xchg   edi,eax
  40de9a:	cmc    
  40de9b:	in     al,0x67
  40de9d:	in     eax,dx
  40de9e:	cmp    eax,ebp
  40dea0:	xchg   ebx,eax
  40dea1:	jmp    0x40df20
  40dea3:	inc    ecx
  40dea4:	or     eax,ecx
  40dea6:	mov    ds:0x38471ad,eax
  40deab:	xchg   ebx,eax
  40deac:	dec    esp
  40dead:	test   BYTE PTR [ecx-0x45f52957],0xb6
  40deb4:	push   ebp
  40deb5:	imul   ecx,DWORD PTR [edx-0x27],0x22
  40deb9:	xor    DWORD PTR ds:0xef0d03de,0x26
  40dec0:	in     eax,0x13
  40dec2:	fwait
  40dec3:	out    0x44,al
  40dec5:	push   ebp
  40dec6:	adc    cl,0x35
  40dec9:	add    ch,al
  40decb:	outs   dx,DWORD PTR ds:[esi]
  40decc:	push   ebx
  40decd:	jne    0x40df2e
  40decf:	loop   0x40de74
  40ded1:	jg     0x40df52
  40ded3:	inc    ebx
  40ded4:	xor    eax,0x27af997c
  40ded9:	xchg   ebx,eax
  40deda:	ds inc edi
  40dedc:	scas   al,BYTE PTR es:[edi]
  40dedd:	fyl2xp1 
  40dedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dee0:	jno    0x40de6c
  40dee2:	out    0x54,eax
  40dee4:	(bad)  
  40dee5:	mov    esp,0xf752694a
  40deea:	(bad)  
  40deeb:	dec    esi
  40deec:	stos   BYTE PTR es:[edi],al
  40deed:	hlt    
  40deee:	xchg   esp,eax
  40deef:	pop    ebx
  40def0:	lods   al,BYTE PTR ds:[esi]
  40def1:	in     al,0xb
  40def3:	mov    WORD PTR [edx-0x2d1d0f01],fs
  40def9:	mov    al,ds:0x972e2a50
  40defe:	fsubr  DWORD PTR [esi+ebp*4+0x1f]
  40df02:	sbb    ebp,DWORD PTR ds:0x3f87ef6b
  40df08:	jge    0x40deb4
  40df0a:	push   eax
  40df0b:	xchg   ebp,eax
  40df0c:	int3   
  40df0d:	mov    BYTE PTR [ecx],ah
  40df0f:	or     al,BYTE PTR ds:0xe53e7a11
  40df15:	mov    edx,0x97284445
  40df1a:	cwde   
  40df1b:	jmp    0x40ded1
  40df1d:	xor    BYTE PTR [edi-0x6f],ah
  40df20:	inc    eax
  40df21:	mov    ebp,0x280ff75d
  40df26:	add    edi,ebp
  40df28:	xchg   edi,eax
  40df29:	fs in  al,0x89
  40df2c:	mov    ds:0x65fcdd0a,eax
  40df31:	mov    esp,0x84b0f7b3
  40df36:	retf   
  40df37:	fmul   QWORD PTR [edi+0x74]
  40df3a:	arpl   cx,si
  40df3c:	dec    ecx
  40df3d:	out    0x4a,eax
  40df3f:	xchg   BYTE PTR [ebp-0x3a],cl
  40df42:	ins    BYTE PTR es:[edi],dx
  40df43:	cmp    al,0x9e
  40df45:	cmp    al,0xdd
  40df47:	call   0xcb26:0xc54aa424
  40df4e:	stos   BYTE PTR es:[edi],al
  40df4f:	aam    0x10
  40df51:	jno    0x70afb811
  40df57:	jge    0x40df2c
  40df59:	ins    BYTE PTR es:[edi],dx
  40df5a:	xchg   esp,eax
  40df5b:	jno    0x40dfa4
  40df5d:	adc    bh,BYTE PTR [esi]
  40df5f:	cmp    DWORD PTR [edx-0x5a7d5149],edx
  40df65:	ror    BYTE PTR [edx+ecx*4],0xd3
  40df69:	mov    eax,0x369753ac
  40df6e:	xor    ebp,DWORD PTR [eax]
  40df70:	mov    edx,0xe091c7f6
  40df75:	mov    bh,0x86
  40df77:	pop    esi
  40df78:	and    ebp,edx
  40df7a:	mov    cl,0x6
  40df7c:	test   DWORD PTR [edi+0x5c],ebp
  40df7f:	stos   BYTE PTR es:[edi],al
  40df80:	out    0x58,al
  40df82:	jb     0x40dfa2
  40df84:	mov    dh,0x66
  40df86:	inc    esp
  40df87:	adc    eax,0x2d61b007
  40df8c:	sbb    al,0x1a
  40df8e:	stc    
  40df8f:	js     0x40dfef
  40df91:	sbb    al,0x7f
  40df93:	ins    DWORD PTR es:[edi],dx
  40df94:	xchg   edi,eax
  40df95:	adc    al,0x72
  40df97:	fwait
  40df98:	dec    dh
  40df9a:	and    al,BYTE PTR [ecx-0x17]
  40df9d:	pop    ecx
  40df9e:	jp     0x40dfea
  40dfa0:	fdivr  QWORD PTR [esi-0x5993aa49]
  40dfa6:	add    esi,ebp
  40dfa8:	dec    ecx
  40dfa9:	and    DWORD PTR [eax],edx
  40dfab:	lahf   
  40dfac:	pop    ebp
  40dfad:	or     BYTE PTR [edi-0x74],bh
  40dfb0:	cmp    al,0x58
  40dfb2:	call   0x34d3:0x70930aee
  40dfb9:	xchg   cx,ax
  40dfbb:	mov    eax,ds:0xd6ba849c
  40dfc0:	push   esp
  40dfc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfc2:	dec    esp
  40dfc3:	stos   DWORD PTR es:[edi],eax
  40dfc4:	jl     0x40dfa5
  40dfc6:	push   0x47
  40dfc8:	les    eax,FWORD PTR [ecx+0x21]
  40dfcb:	leave  
  40dfcc:	frstor [eax+0x4da64205]
  40dfd2:	lods   eax,DWORD PTR es:[esi]
  40dfd4:	add    al,BYTE PTR [edx-0x1ca4e174]
  40dfda:	je     0x40dfe7
  40dfdc:	dec    ebx
  40dfdd:	jge    0x40dfd6
  40dfdf:	inc    ebp
  40dfe0:	cwde   
  40dfe1:	pop    edi
  40dfe2:	push   0x757ec403
  40dfe7:	mov    ecx,DWORD PTR [bp+si-0xea5]
  40dfec:	out    0x6c,ax
  40dfef:	mov    dh,0xa2
  40dff1:	mov    eax,ds:0xe1e23fd6
  40dff6:	cmp    al,0xdf
  40dff8:	pop    ss
  40dff9:	nop
  40dffa:	cmp    esp,DWORD PTR [eax-0xa1773ca]
  40e000:	repnz iret 
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	es mov dh,cl
  40e006:	push   ds
  40e007:	cmp    esp,esp
  40e009:	test   eax,0xd443d66c
  40e00e:	mov    edi,0xfd409d63
  40e013:	and    bl,cl
  40e015:	inc    esp
  40e016:	or     ecx,ebx
  40e018:	mov    al,0xe2
  40e01a:	sub    DWORD PTR es:[edi-0x4d],eax
  40e01e:	jmp    0x658a:0xc176fd1f
  40e025:	add    eax,0xb825d7f1
  40e02a:	push   ebx
  40e02b:	add    DWORD PTR [edx-0x5c3cc3cf],edx
  40e031:	pop    ecx
  40e032:	add    bl,BYTE PTR [esi+0x19b2bfa4]
  40e038:	(bad)  
  40e039:	xor    bh,BYTE PTR ds:0x5a35f4c
  40e03f:	or     eax,0x538baf35
  40e044:	imul   esp,DWORD PTR ds:[edi-0x30444a49],0x46
  40e04c:	or     al,0x6
  40e04e:	or     al,0x45
  40e050:	xlat   BYTE PTR ds:[ebx]
  40e051:	cmp    ah,BYTE PTR [ecx-0xed44f83]
  40e057:	mov    ?,WORD PTR [ebx-0x1d62d36c]
  40e05d:	and    edx,edi
  40e05f:	inc    eax
  40e060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e061:	mov    dl,0xae
  40e063:	mov    ds:0xd0d52170,al
  40e068:	out    dx,al
  40e069:	cwde   
  40e06a:	or     eax,0xacb1bf19
  40e06f:	adc    cl,BYTE PTR [ebp+0x22]
  40e072:	push   es
  40e073:	jmp    0x40e073
  40e075:	mov    edx,0x83515719
  40e07a:	xor    eax,0x6f9085d
  40e07f:	nop
  40e080:	push   es
  40e081:	jne    0x40e0de
  40e083:	jo     0x40e0ee
  40e085:	inc    edi
  40e086:	mov    ds:0x101cacda,eax
  40e08b:	jl     0x40e02c
  40e08d:	nop
  40e08e:	stc    
  40e08f:	or     BYTE PTR [edi-0x57],cl
  40e092:	out    0xd2,al
  40e094:	call   0xc53c:0xe7a0e960
  40e09b:	in     al,dx
  40e09c:	das    
  40e09d:	or     eax,0xd65016ed
  40e0a2:	xor    eax,0x2bff9958
  40e0a7:	push   edx
  40e0a8:	retf   0x6e75
  40e0ab:	pop    esi
  40e0ac:	or     al,0xba
  40e0ae:	sub    al,0x34
  40e0b0:	ret    
  40e0b1:	jmp    0x40e075
  40e0b3:	stc    
  40e0b4:	mov    edx,0x9d8605de
  40e0b9:	jmp    0x5dcc:0xbd7e44e1
  40e0c0:	mov    ebp,DWORD PTR [edx]
  40e0c2:	mov    edi,0xf4def6ea
  40e0c7:	pop    edx
  40e0c8:	pop    eax
  40e0c9:	xor    eax,DWORD PTR [edi+0x5ff893bd]
  40e0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0d0:	clc    
  40e0d1:	push   ebx
  40e0d2:	adc    DWORD PTR [ecx+0x5bb14081],eax
  40e0d8:	pop    ecx
  40e0d9:	pop    ebp
  40e0da:	icebp  
  40e0db:	push   cs
  40e0dc:	dec    DWORD PTR [ecx+eax*8-0x83572b7]
  40e0e3:	or     eax,0x873a17c5
  40e0e8:	push   ds
  40e0e9:	aas    
  40e0ea:	out    dx,al
  40e0eb:	inc    edx
  40e0ec:	push   esp
  40e0ed:	ret    0xbbd8
  40e0f0:	test   ch,dl
  40e0f2:	sub    BYTE PTR [ebp-0x1e8dbd52],dl
  40e0f8:	sbb    DWORD PTR [edx-0x5f],esi
  40e0fb:	lahf   
  40e0fc:	mov    WORD PTR [esi-0xfe1bf66],fs
  40e102:	mov    WORD PTR [edi-0x61d759e4],?
  40e108:	mov    DWORD PTR [ebx-0x10],ebx
  40e10b:	pop    esp
  40e10c:	xchg   DWORD PTR [ebx-0x58],ebp
  40e10f:	mov    eax,0xccf98ea0
  40e114:	mov    ch,0x81
  40e116:	jns    0x40e11f
  40e118:	mov    ?,WORD PTR [edx]
  40e11a:	pop    ebx
  40e11b:	pop    ebx
  40e11c:	cld    
  40e11d:	inc    ebx
  40e11e:	aaa    
  40e11f:	jae    0x40e0d8
  40e121:	dec    ebp
  40e122:	inc    ebp
  40e123:	sbb    al,0x1
  40e125:	jns    0x40e131
  40e127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e129:	sbb    edx,ebx
  40e12b:	and    BYTE PTR [ebp+0x42ab8d62],bh
  40e131:	or     al,0x8d
  40e133:	push   0x1a227e43
  40e138:	in     eax,0x35
  40e13a:	(bad)  
  40e13b:	inc    edi
  40e13c:	push   ss
  40e13d:	add    DWORD PTR [edx+0x182637f5],ecx
  40e143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e144:	jns    0x40e123
  40e146:	std    
  40e147:	jbe    0x40e179
  40e149:	jl     0x40e1c3
  40e14b:	fs test BYTE PTR fs:[edx-0x4f],bh
  40e150:	retf   
  40e151:	(bad)  
  40e152:	retf   
  40e153:	pop    esi
  40e154:	popf   
  40e155:	popa   
  40e156:	jecxz  0x40e0f4
  40e158:	retf   
  40e159:	pushf  
  40e15a:	sub    eax,0x2161015a
  40e15f:	ins    DWORD PTR es:[edi],dx
  40e160:	inc    ebp
  40e161:	mov    BYTE PTR [esi-0x2733af4],ch
  40e167:	xchg   esi,eax
  40e168:	jae    0x40e196
  40e16a:	jle    0x40e173
  40e16c:	das    
  40e16d:	call   0xed3e:0xf02accff
  40e174:	popa   
  40e175:	js     0x40e168
  40e177:	test   al,0x92
  40e179:	rol    BYTE PTR [ecx-0x64007aee],cl
  40e17f:	daa    
  40e180:	mov    ebx,0xf21d2be8
  40e185:	rcr    DWORD PTR ss:[edx+0x37de25e7],1
  40e18c:	cmp    ecx,ebx
  40e18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e18f:	jo     0x40e1e4
  40e191:	fimul  DWORD PTR [ebp+edi*1-0x125259a1]
  40e198:	sub    edx,ebx
  40e19a:	test   BYTE PTR [edx+0x54],dh
  40e19d:	(bad)
  40e1a0:	xchg   esi,eax
  40e1a1:	or     esp,DWORD PTR [esi]
  40e1a3:	test   BYTE PTR [edi],0x9b
  40e1a6:	jae    0x40e1fa
  40e1a8:	scas   al,BYTE PTR es:[edi]
  40e1a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1aa:	aas    
  40e1ab:	(bad)  
  40e1ac:	mov    WORD PTR [ebx+ebx*2-0x7fb99588],ss
  40e1b3:	nop
  40e1b4:	xor    cl,BYTE PTR ds:0x9e891e30
  40e1ba:	das    
  40e1bb:	pop    es
  40e1bc:	xor    ecx,DWORD PTR [ebp+0x20374a8d]
  40e1c2:	invd   
  40e1c4:	jle    0x40e23e
  40e1c6:	mov    WORD PTR [ecx],ss
  40e1c8:	push   edi
  40e1c9:	push   cs
  40e1ca:	sbb    BYTE PTR [eax+0x6d],bh
  40e1cd:	push   0xffee6636
  40e1d2:	mov    bl,0x93
  40e1d4:	loop   0x40e202
  40e1d6:	ficomp DWORD PTR [ebp+0x5c884aae]
  40e1dc:	or     DWORD PTR [ebx-0x3d128311],ecx
  40e1e2:	xchg   edx,eax
  40e1e3:	clc    
  40e1e4:	jne    0x40e1d7
  40e1e6:	xlat   BYTE PTR ds:[ebx]
  40e1e7:	ss adc al,0xe2
  40e1ea:	sub    eax,0xd06896be
  40e1ef:	sar    DWORD PTR [ebx+0x6be088f4],1
  40e1f5:	aaa    
  40e1f6:	cld    
  40e1f7:	xchg   edx,edx
  40e1f9:	punpckhbw mm2,mm5
  40e1fc:	push   es
  40e1fd:	push   es
  40e1fe:	mov    ds:0x208bdec5,al
  40e203:	test   eax,0x7ab55596
  40e208:	jg     0x40e270
  40e20a:	jecxz  0x40e285
  40e20c:	xchg   esp,eax
  40e20d:	mov    eax,0xf53d9809
  40e212:	jns    0x40e1e0
  40e214:	ss mov al,0x7c
  40e217:	je     0x40e292
  40e219:	loope  0x40e21a
  40e21b:	pop    edi
  40e21c:	mov    edx,0x75bdc55b
  40e221:	xor    al,0xaf
  40e223:	and    DWORD PTR [ebx],ecx
  40e225:	mov    ebp,0x16a85c9a
  40e22a:	xor    edi,DWORD PTR [ebx+0x422eb81a]
  40e230:	adc    eax,0x1de13e7c
  40e235:	daa    
  40e236:	lods   al,BYTE PTR ds:[esi]
  40e237:	ss ret 
  40e239:	(bad)  
  40e23a:	sub    eax,0xb006d144
  40e23f:	sbb    eax,0x45350d92
  40e244:	push   eax
  40e245:	div    bl
  40e247:	xchg   ebp,eax
  40e248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e249:	jmp    0x40e2ca
  40e24b:	popa   
  40e24c:	mov    ch,0x39
  40e24e:	xor    WORD PTR [ebp+0x9],bp
  40e252:	pop    ds
  40e253:	das    
  40e254:	sbb    edi,ebx
  40e256:	cmp    bl,ch
  40e258:	lods   al,BYTE PTR ds:[esi]
  40e259:	je     0x40e299
  40e25b:	cmp    BYTE PTR [ebx+0x1a],ch
  40e25e:	loopne 0x40e207
  40e260:	mov    ebx,0xaa1a733e
  40e265:	fcom   DWORD PTR [esi+edx*1]
  40e268:	ins    BYTE PTR es:[edi],dx
  40e269:	push   eax
  40e26a:	fisttp QWORD PTR [esi-0xa]
  40e26d:	adc    esi,ebp
  40e26f:	adc    DWORD PTR cs:[ebp-0x1a],ecx
  40e273:	mov    dl,0xf1
  40e275:	cmp    ch,BYTE PTR [ebx-0x5d]
  40e278:	xchg   ecx,eax
  40e279:	pop    ebp
  40e27a:	cmp    edi,edx
  40e27c:	mov    ch,0x60
  40e27e:	jge    0x40e26b
  40e280:	shl    DWORD PTR [ecx],1
  40e282:	dec    esp
  40e283:	les    ebx,FWORD PTR [eax+0x56ea4be9]
  40e289:	or     edx,DWORD PTR [edi+0x1bd6b7cf]
  40e28f:	adc    BYTE PTR [esi],ch
  40e291:	cld    
  40e292:	xor    ecx,ebx
  40e294:	fadd   DWORD PTR [ebx+0x34c7cdf]
  40e29a:	aam    0xc4
  40e29c:	pop    edi
  40e29d:	push   ecx
  40e29e:	out    dx,al
  40e29f:	sub    al,0x1c
  40e2a1:	jb     0x40e2e0
  40e2a3:	push   ecx
  40e2a4:	jg     0x40e2bf
  40e2a6:	jecxz  0x40e244
  40e2a8:	sbb    al,0x53
  40e2aa:	inc    BYTE PTR [esi+0x512c35a5]
  40e2b0:	mov    al,ds:0x19d8e5ca
  40e2b5:	mov    ah,0x21
  40e2b7:	xchg   esi,eax
  40e2b8:	push   es
  40e2b9:	jle    0x40e2af
  40e2bb:	and    DWORD PTR [ecx-0x620b4963],eax
  40e2c1:	cmp    ch,BYTE PTR [ecx-0x17]
  40e2c4:	out    0x2b,eax
  40e2c6:	(bad)  
  40e2c7:	cmp    eax,0x616d2e35
  40e2cc:	xchg   edi,eax
  40e2cd:	sbb    DWORD PTR [ebx-0x2913d545],ebx
  40e2d3:	add    dh,BYTE PTR [esp+ebx*4+0x31b3f3f3]
  40e2da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2db:	idiv   DWORD PTR [edi+0x5d75f923]
  40e2e1:	(bad)  
  40e2e3:	retf   0x36fc
  40e2e6:	inc    edx
  40e2e7:	pop    es
  40e2e8:	xlat   BYTE PTR ds:[ebx]
  40e2e9:	cmp    ebx,0xaf0bb5b
  40e2ef:	adc    ch,BYTE PTR [eax+0x424004ef]
  40e2f5:	mov    al,ds:0xa628a5d7
  40e2fa:	(bad)  
  40e2fb:	std    
  40e2fc:	inc    eax
  40e2fd:	pop    esp
  40e2fe:	adc    bh,al
  40e300:	adc    DWORD PTR [eax],ebp
  40e302:	mov    dh,0xbf
  40e304:	dec    ebx
  40e305:	fcmovbe st,st(4)
  40e307:	mov    dh,0xc2
  40e309:	dec    ebp
  40e30a:	sub    al,0x8c
  40e30c:	inc    edi
  40e30d:	and    ecx,ecx
  40e30f:	jne    0x40e30c
  40e311:	and    esp,DWORD PTR [ebx+edi*8-0x68]
  40e315:	and    eax,0x77d03e4
  40e31a:	sahf   
  40e31b:	push   ebp
  40e31c:	inc    ebx
  40e31d:	dec    edi
  40e31e:	and    BYTE PTR [ebx+0x1f],cl
  40e321:	aad    0x68
  40e323:	lods   eax,DWORD PTR ds:[esi]
  40e324:	or     esi,DWORD PTR [edi+0x61052c11]
  40e32a:	sbb    al,0x3c
  40e32c:	jecxz  0x40e310
  40e32e:	lods   eax,DWORD PTR ds:[esi]
  40e32f:	hlt    
  40e330:	adc    edx,edx
  40e332:	outs   dx,DWORD PTR ds:[esi]
  40e333:	daa    
  40e334:	cmp    eax,0x68a73fc
  40e339:	mov    dl,dh
  40e33b:	cmc    
  40e33c:	pop    esi
  40e33d:	mov    al,ds:0xd8ce90a9
  40e342:	mov    eax,0x222de97
  40e347:	aad    0xb0
  40e349:	mov    cl,0x31
  40e34b:	push   edx
  40e34c:	sub    DWORD PTR [edi],eax
  40e34e:	int    0x63
  40e350:	dec    esp
  40e351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e352:	adc    bl,BYTE PTR [ecx]
  40e354:	in     eax,dx
  40e355:	push   ds
  40e356:	fadd   st(7),st
  40e358:	adc    bh,BYTE PTR [esi+0x6]
  40e35b:	sub    al,0x47
  40e35d:	xchg   edi,eax
  40e35e:	dec    ebp
  40e35f:	sub    BYTE PTR [esi-0x68],dh
  40e362:	adc    bl,BYTE PTR [edi-0x1a]
  40e365:	mov    ecx,0x61c01434
  40e36a:	adc    cl,BYTE PTR [edx+0x68b4c7b7]
  40e370:	inc    esp
  40e371:	or     al,0x47
  40e373:	jne    0x40e3a8
  40e375:	xor    BYTE PTR [esi-0x12],al
  40e378:	ins    BYTE PTR es:[edi],dx
  40e379:	mov    ah,al
  40e37b:	push   ecx
  40e37c:	mov    eax,ds:0x68abd92c
  40e381:	test   dl,bh
  40e383:	fcom   QWORD PTR [edi+0x68ee89da]
  40e389:	mov    dh,0x8f
  40e38b:	sti    
  40e38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e38d:	rcl    DWORD PTR [eax+eiz*8+0x41a3785e],0x16
  40e395:	ss sti 
  40e397:	sbb    eax,0x2b5ecf08
  40e39c:	jae    0x40e40f
  40e39e:	add    eax,0x8404ed48
  40e3a3:	xchg   dh,al
  40e3a5:	(bad)  
  40e3a6:	xlat   BYTE PTR ds:[ebx]
  40e3a7:	or     DWORD PTR gs:0xcaf6cac,esp
  40e3ae:	ret    0x5db2
  40e3b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3b2:	mov    WORD PTR [edx],?
  40e3b4:	and    eax,0xfa6dc5d8
  40e3b9:	mov    ecx,0x4791982d
  40e3be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3bf:	call   0xf385:0xb0e7cc08
  40e3c6:	pop    edx
  40e3c7:	push   esp
  40e3c8:	xchg   BYTE PTR [edi],al
  40e3ca:	in     eax,dx
  40e3cb:	imul   edx,DWORD PTR [esi],0x3
  40e3ce:	mov    bl,0x47
  40e3d0:	push   esp
  40e3d1:	imul   ebp,ebx,0x4a
  40e3d4:	mov    ebx,0xe6496bf7
  40e3d9:	add    ah,BYTE PTR [ebp-0x57]
  40e3dc:	ss push es
  40e3de:	xor    BYTE PTR [edi],dl
  40e3e0:	jns    0x40e456
  40e3e2:	mov    ebx,0x7aab08b9
  40e3e7:	jle    0x40e3df
  40e3e9:	repz inc edi
  40e3eb:	popf   
  40e3ec:	mov    cl,0x8d
  40e3ee:	xor    ch,dl
  40e3f0:	dec    esi
  40e3f1:	push   es
  40e3f2:	jecxz  0x40e42f
  40e3f4:	push   ecx
  40e3f5:	jns    0x40e462
  40e3f7:	push   ebp
  40e3f8:	scas   eax,DWORD PTR es:[edi]
  40e3f9:	xchg   esp,eax
  40e3fa:	sbb    eax,0x1d662fbb
  40e3ff:	sub    eax,0x60614fad
  40e404:	rcpps  xmm6,XMMWORD PTR [edx]
  40e407:	push   ebp
  40e408:	imul   eax,DWORD PTR [edx+ecx*1+0x38c58b57],0x31b682ec
  40e413:	jmp    0x40e468
  40e415:	ins    DWORD PTR es:[edi],dx
  40e416:	(bad)  
  40e418:	push   eax
  40e419:	jge    0x40e3e8
  40e41b:	pop    es
  40e41c:	jmp    0x40e480
  40e41e:	sbb    eax,0x2f1e08b6
  40e423:	or     al,0x42
  40e425:	stos   DWORD PTR es:[edi],eax
  40e426:	fidiv  DWORD PTR [eax-0x173ecd48]
  40e42c:	push   edi
  40e42d:	call   0xc9dc:0x4bb92641
  40e434:	jno    0x40e474
  40e436:	pop    ebx
  40e437:	test   esp,ebx
  40e439:	mov    BYTE PTR ds:0xf6b29e13,0x6c
  40e440:	cs inc ecx
  40e442:	sbb    BYTE PTR [eax+0x64],dl
  40e445:	inc    ecx
  40e446:	rcl    bl,0x76
  40e449:	sub    eax,0x10caf8a7
  40e44e:	jmp    0x3857:0xc3147208
  40e455:	and    eax,0xe716f9b0
  40e45a:	mov    eax,0xbc8a9100
  40e45f:	scas   eax,DWORD PTR es:[edi]
  40e460:	xor    eax,0xa89e1b9c
  40e465:	inc    bp
  40e467:	into   
  40e468:	clc    
  40e469:	loop   0x40e479
  40e46b:	inc    ebp
  40e46c:	mov    bh,0x76
  40e46e:	sbb    eax,0x81ed3a31
  40e473:	enter  0xf820,0x8f
  40e477:	jae    0x40e436
  40e479:	pop    edx
  40e47a:	lea    ebx,[eax*8-0x53ffdeed]
  40e481:	push   es
  40e482:	ror    BYTE PTR [esi-0x6b],0xfc
  40e486:	adc    eax,0xd94dede8
  40e48b:	sbb    BYTE PTR [esi-0x6b3513d0],bh
  40e491:	mov    ebp,0x59a5203b
  40e496:	xor    DWORD PTR [ebx-0x7b],0x2d3a9f34
  40e49d:	popf   
  40e49e:	mov    edx,0x8542ec41
  40e4a3:	sub    BYTE PTR [eax],al
  40e4a5:	call   0xcd42:0x72c0cf13
  40e4ac:	mov    ds:0xed9af45e,al
  40e4b1:	shl    DWORD PTR [ecx+0x13],cl
  40e4b4:	mov    bl,BYTE PTR [esi-0x47]
  40e4b7:	push   0x61fddf4b
  40e4bc:	mov    DWORD PTR [edi-0x5019f63c],eax
  40e4c2:	lahf   
  40e4c3:	lahf   
  40e4c4:	sti    
  40e4c5:	adc    al,0x8d
  40e4c7:	mov    al,ds:0x91f8b71c
  40e4cc:	ret    0xe1e4
  40e4cf:	aaa    
  40e4d0:	pop    eax
  40e4d1:	loope  0x40e527
  40e4d3:	call   0xd0be54e7
  40e4d8:	sub    BYTE PTR [ecx+0x40bdf5d5],dh
  40e4de:	in     eax,0x45
  40e4e0:	dec    ebp
  40e4e1:	mov    ecx,0x18e5eb92
  40e4e6:	cmp    al,0xa6
  40e4e8:	push   0xffffffcd
  40e4ea:	aad    0xbc
  40e4ec:	inc    edx
  40e4ed:	sub    DWORD PTR [ecx-0x6c],0xffffffa3
  40e4f1:	jne    0x40e4cc
  40e4f3:	dec    edx
  40e4f4:	push   0x9b40b4e6
  40e4f9:	pop    ds
  40e4fa:	jns    0x40e57a
  40e4fc:	cmp    eax,0x1b25d9e6
  40e501:	push   es
  40e502:	push   ds
  40e503:	pusha  
  40e504:	call   0x555e092b
  40e509:	rcr    esp,cl
  40e50b:	outs   dx,DWORD PTR ds:[esi]
  40e50c:	jl     0x40e572
  40e50e:	dec    ebx
  40e50f:	out    0xde,al
  40e511:	sbb    DWORD PTR [edx],ecx
  40e513:	leave  
  40e514:	adc    bh,dh
  40e516:	ret    0x598e
  40e519:	push   edi
  40e51a:	mov    esp,0xb918a4a4
  40e51f:	or     esi,DWORD PTR [ebx-0x4b]
  40e522:	cli    
  40e523:	push   esp
  40e524:	pop    ss
  40e525:	test   DWORD PTR [edi],ebx
  40e527:	out    dx,eax
  40e528:	out    dx,al
  40e529:	xor    BYTE PTR [ebx+0x6d93f65a],ah
  40e52f:	sbb    DWORD PTR [ecx+0x28],ecx
  40e532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e533:	sbb    esi,ecx
  40e535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e536:	pusha  
  40e537:	std    
  40e538:	mov    DWORD PTR [ebp-0x36],edi
  40e53b:	iret   
  40e53c:	(bad)  
  40e53d:	aaa    
  40e53e:	retf   0xb606
  40e541:	arpl   WORD PTR [ebx+0x4f4856be],sp
  40e547:	jmp    0x43e8:0xfaa1d5fc
  40e54e:	mov    cl,0x21
  40e550:	push   esp
  40e551:	int    0xb0
  40e553:	int    0x95
  40e555:	xor    BYTE PTR [eax-0x236a57c5],cl
  40e55b:	push   es
  40e55c:	movq   mm6,QWORD PTR [eax+eiz*2-0x29]
  40e561:	mov    BYTE PTR [edx-0x72],dh
  40e564:	dec    esi
  40e565:	mov    cs,WORD PTR [edx+ecx*4+0x4c]
  40e569:	pusha  
  40e56a:	dec    edi
  40e56b:	popa   
  40e56c:	jg     0x40e52f
  40e56e:	sbb    dl,BYTE PTR [eax-0x3e]
  40e571:	inc    edi
  40e572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e573:	jmp    0x40e534
  40e575:	mov    ebp,0x4b5c59bb
  40e57a:	push   ds
  40e57b:	scas   eax,DWORD PTR es:[edi]
  40e57c:	aam    0x29
  40e57e:	aad    0x62
  40e580:	xchg   edx,eax
  40e581:	jmp    0x754f:0xd54ef0d0
  40e588:	sbb    eax,0xeaf60568
  40e58d:	push   0xffffffbe
  40e58f:	ja     0x40e57f
  40e591:	outs   dx,DWORD PTR ds:[esi]
  40e592:	data16 jg 0x40e5d0
  40e595:	xchg   esp,eax
  40e596:	bound  edx,QWORD PTR [ebx]
  40e598:	std    
  40e599:	cli    
  40e59a:	sub    cl,dh
  40e59c:	sahf   
  40e59d:	into   
  40e59e:	lods   al,BYTE PTR ds:[esi]
  40e59f:	jo     0x40e5b6
  40e5a1:	repz adc al,dh
  40e5a4:	sub    BYTE PTR ds:0xf7d084ad,dh
  40e5aa:	mov    ds:0xa75e53fc,eax
  40e5af:	stos   DWORD PTR es:[edi],eax
  40e5b0:	xchg   ebp,eax
  40e5b1:	outs   dx,BYTE PTR ds:[esi]
  40e5b2:	xchg   ebp,eax
  40e5b3:	int3   
  40e5b4:	sub    cl,ch
  40e5b6:	mov    bh,0x17
  40e5b8:	inc    edx
  40e5b9:	mov    esp,0xcedbb6f9
  40e5be:	inc    edi
  40e5bf:	xor    eax,0x9a5088ac
  40e5c4:	push   DWORD PTR [ebp-0x5e]
  40e5c7:	repz fwait
  40e5c9:	loopne 0x40e588
  40e5cb:	xor    eax,0x1ce9f2c0
  40e5d0:	mov    DWORD PTR [edi+0x1b24be5],edx
  40e5d6:	jae    0x40e652
  40e5d8:	ror    DWORD PTR [edi+0x2d],0x5f
  40e5dc:	jle    0x40e584
  40e5de:	dec    ebx
  40e5df:	sub    eax,0x81294bbd
  40e5e4:	xchg   ebp,eax
  40e5e5:	out    dx,eax
  40e5e6:	xor    BYTE PTR [edi+0x30],cl
  40e5e9:	pextrw edx,mm2,0x29
  40e5ed:	sub    ebp,ecx
  40e5ef:	aas    
  40e5f0:	dec    esi
  40e5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5f2:	pop    ebx
  40e5f3:	jmp    0x40e627
  40e5f5:	fwait
  40e5f6:	push   0xd027c3b2
  40e5fb:	test   BYTE PTR [esi-0x41],dh
  40e5fe:	icebp  
  40e5ff:	push   0xffffff8a
  40e601:	or     DWORD PTR [esi+0x69700dbc],ebx
  40e607:	pop    edx
  40e608:	cld    
  40e609:	or     DWORD PTR [ebx-0x23],ebx
  40e60c:	push   0x5f
  40e60e:	cmp    al,BYTE PTR [edi-0x430dd3c3]
  40e614:	xor    ecx,DWORD PTR [esi-0xbaef63d]
  40e61a:	xor    al,0x50
  40e61c:	push   ss
  40e61d:	jmp    0x4bf605e9
  40e622:	cld    
  40e623:	or     BYTE PTR [eax],al
  40e625:	popf   
  40e626:	inc    DWORD PTR [esp+esi*4-0x29bcbfd1]
  40e62d:	push   0x79882c30
  40e632:	pusha  
  40e633:	sub    al,BYTE PTR [ebp+0x2b]
  40e636:	fldcw  WORD PTR ds:0xcebd3f6b
  40e63c:	repnz sbb al,0x5c
  40e63f:	arpl   WORD PTR [ecx-0x11225ce1],ax
  40e645:	in     al,0xf2
  40e647:	sub    ebp,esp
  40e649:	stc    
  40e64a:	pop    ebp
  40e64b:	add    esi,ecx
  40e64d:	inc    esi
  40e64e:	enter  0xea23,0x3
  40e652:	pop    eax
  40e653:	arpl   bx,bx
  40e655:	add    ebx,DWORD PTR ds:0xdc7ff5da
  40e65b:	mov    bp,0xb066
  40e65f:	pusha  
  40e660:	sbb    DWORD PTR [ebp+0x9cc5461],esi
  40e666:	mov    al,0x8f
  40e668:	push   esi
  40e669:	lods   al,BYTE PTR ds:[esi]
  40e66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e66b:	cwde   
  40e66c:	or     eax,0xb25fc5c3
  40e671:	xor    al,0xe0
  40e673:	cmp    edi,DWORD PTR [eax-0x70]
  40e676:	popf   
  40e677:	jb     0x40e638
  40e679:	test   DWORD PTR [ecx-0x5c],esi
  40e67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e67d:	xchg   ecx,eax
  40e67e:	add    ebp,DWORD PTR [ecx-0xd88f125]
  40e684:	jge    0x40e655
  40e686:	enter  0xf97a,0xf1
  40e68a:	pushf  
  40e68b:	sbb    BYTE PTR [esi],0xcf
  40e68e:	pop    es
  40e68f:	sahf   
  40e690:	xor    dl,BYTE PTR [esi-0x45c54b06]
  40e696:	out    0xe9,al
  40e698:	(bad)  
  40e699:	int    0x5
  40e69b:	aas    
  40e69c:	mov    eax,ds:0xc86ea811
  40e6a1:	inc    ebx
  40e6a2:	sbb    al,0x73
  40e6a4:	dec    esp
  40e6a5:	pop    edx
  40e6a6:	aad    0xf1
  40e6a8:	mov    edx,0xb67c288d
  40e6ad:	fwait
  40e6ae:	and    BYTE PTR [ebx-0x76],dl
  40e6b1:	daa    
  40e6b2:	mov    dl,0x68
  40e6b4:	adc    BYTE PTR [ebx*2-0x66fbe6b],bl
  40e6bb:	call   0xe6f3:0xb16c90b1
  40e6c2:	daa    
  40e6c3:	(bad)  
  40e6c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6c5:	mov    dl,0xee
  40e6c7:	lds    ecx,FWORD PTR [edi]
  40e6c9:	pop    ds
  40e6ca:	mov    edi,0x91e7e098
  40e6cf:	ret    
  40e6d0:	sahf   
  40e6d1:	mov    dh,0x81
  40e6d3:	mov    cl,0xc3
  40e6d5:	adc    eax,0x8274b623
  40e6da:	cmp    eax,0x76d6d3eb
  40e6df:	into   
  40e6e0:	call   0x3c09:0x3ee5e31d
  40e6e7:	into   
  40e6e8:	jl     0x40e757
  40e6ea:	stos   DWORD PTR es:[edi],eax
  40e6eb:	call   0x55db9ead
  40e6f0:	mov    ax,0xb47f
  40e6f4:	mov    ah,0x37
  40e6f6:	push   eax
  40e6f7:	jmp    0x5c033617
  40e6fc:	test   DWORD PTR [edx-0x7b260d6c],edx
  40e702:	lds    esi,FWORD PTR [esi]
  40e704:	xchg   edx,eax
  40e705:	adc    eax,0xc79acaf6
  40e70a:	aaa    
  40e70b:	ret    
  40e70c:	addr16 pop edi
  40e70e:	and    eax,0xc6ae814
  40e713:	push   eax
  40e714:	loope  0x40e6dc
  40e716:	fadd   DWORD PTR [esi-0x48]
  40e719:	lods   al,BYTE PTR ds:[esi]
  40e71a:	outs   dx,DWORD PTR ds:[esi]
  40e71b:	clc    
  40e71c:	call   DWORD PTR [ebp-0x16]
  40e71f:	xchg   DWORD PTR [ecx],esp
  40e721:	fist   DWORD PTR [ebp-0x7e]
  40e724:	sub    al,0xd1
  40e726:	inc    esi
  40e727:	cli    
  40e728:	sub    al,0x1e
  40e72a:	pop    ebp
  40e72b:	and    BYTE PTR [eax+0x34],0xb3
  40e72f:	pop    ebx
  40e730:	dec    edi
  40e731:	push   ecx
  40e732:	rep stos DWORD PTR es:[edi],eax
  40e734:	sub    DWORD PTR [edi+0x1],esi
  40e737:	pop    ebx
  40e738:	xchg   ebp,eax
  40e739:	jmp    0x5724efa3
  40e73e:	repnz cmp BYTE PTR [esi-0xc],cl
  40e742:	aaa    
  40e743:	stos   DWORD PTR es:[edi],eax
  40e744:	inc    esi
  40e745:	int    0xab
  40e747:	data16 ja 0x40e72b
  40e74a:	div    BYTE PTR [eax-0x52]
  40e74d:	addr16 ret 
  40e74f:	xor    bh,BYTE PTR [edx-0xa0b0841]
  40e755:	addr16 addr16 mov dl,0x11
  40e759:	sub    DWORD PTR [edx-0x27194232],esp
  40e75f:	or     DWORD PTR [ebp-0x77a9a3c0],esp
  40e765:	ficomp WORD PTR [ebx+0x7]
  40e768:	in     eax,0x90
  40e76a:	ss pushw cs
  40e76d:	push   0x5491a1cd
  40e772:	call   0x2039:0x644f6119
  40e779:	dec    ebp
  40e77a:	pop    ds
  40e77b:	or     cl,dl
  40e77d:	add    DWORD PTR [edi-0x5a],ecx
  40e780:	add    ah,BYTE PTR [edx-0xad9c4d]
  40e786:	push   ebx
  40e787:	adc    esp,0x8784842f
  40e78d:	or     BYTE PTR [esi+0x3a],al
  40e790:	push   es
  40e791:	jne    0x40e7df
  40e793:	lea    ebx,[eax]
  40e795:	lods   eax,DWORD PTR ds:[esi]
  40e796:	xchg   ebp,eax
  40e797:	imul   esp,DWORD PTR [edi],0x4f
  40e79a:	and    eax,0xd9e5e9f4
  40e79f:	es cld 
  40e7a1:	and    al,0xbc
  40e7a3:	mov    ch,0xb4
  40e7a5:	sub    eax,0x5816672d
  40e7aa:	mov    al,0x67
  40e7ac:	inc    ecx
  40e7ad:	sti    
  40e7ae:	adc    al,0xa0
  40e7b0:	je     0x40e7fd
  40e7b2:	adc    al,0x61
  40e7b4:	pop    esi
  40e7b5:	cmp    eax,0x2eb29baf
  40e7ba:	sub    esi,edx
  40e7bc:	xor    bh,dh
  40e7be:	pop    ds
  40e7bf:	mov    edx,0x3733a153
  40e7c4:	xchg   esi,eax
  40e7c5:	sbb    DWORD PTR [ebp+0xadc0e76],esi
  40e7cb:	ret    
  40e7cc:	jecxz  0x40e7aa
  40e7ce:	pop    es
  40e7cf:	adc    bl,dh
  40e7d1:	fwait
  40e7d2:	(bad)  
  40e7d3:	pop    eax
  40e7d4:	jae    0x40e824
  40e7d6:	stos   DWORD PTR es:[edi],eax
  40e7d7:	mov    eax,0xf3d5ac87
  40e7dc:	stos   BYTE PTR es:[edi],al
  40e7dd:	and    BYTE PTR ds:0x900962db,dl
  40e7e3:	push   esi
  40e7e4:	fs aam 0xa5
  40e7e7:	loope  0x40e76b
  40e7e9:	pop    ecx
  40e7ea:	popa   
  40e7eb:	jno    0x40e7d6
  40e7ed:	out    dx,eax
  40e7ee:	push   eax
  40e7ef:	je     0x40e78f
  40e7f1:	leave  
  40e7f2:	iret   
  40e7f3:	push   es
  40e7f4:	dec    edx
  40e7f5:	rcr    DWORD PTR [eax+0x19],cl
  40e7f8:	inc    esi
  40e7f9:	mov    DWORD PTR [ebp+0x39945573],esp
  40e7ff:	xchg   DWORD PTR [ecx],ebx
  40e801:	inc    edi
  40e802:	mov    edi,0xba84f01e
  40e807:	adc    DWORD PTR ds:[esi-0x48],ecx
  40e80b:	je     0x40e7e0
  40e80d:	cmp    BYTE PTR [ecx*4-0x14e9b752],ch
  40e814:	jno    0x40e854
  40e816:	and    al,0xec
  40e818:	jle    0x40e843
  40e81a:	mov    ds,WORD PTR [edx+0x3ce094bf]
  40e820:	jno    0x40e893
  40e822:	mov    edi,0x4d3fcdab
  40e827:	cld    
  40e828:	ret    
  40e829:	ins    DWORD PTR es:[edi],dx
  40e82a:	mov    ebx,ss
  40e82c:	les    eax,FWORD PTR [esi]
  40e82e:	push   edx
  40e82f:	aas    
  40e830:	shr    DWORD PTR [ebp+0x353c8b4b],cl
  40e836:	mov    ah,0x56
  40e838:	xlat   BYTE PTR ds:[ebx]
  40e839:	push   edi
  40e83a:	pop    ebp
  40e83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e83c:	mov    eax,ds:0x17f6a01d
  40e841:	xchg   BYTE PTR [ebx+0x73],ah
  40e844:	xor    BYTE PTR [eax],bl
  40e846:	mul    esi
  40e848:	cmp    al,0xb6
  40e84a:	sbb    BYTE PTR [ecx+0x7a21c650],dl
  40e850:	sub    al,0xcd
  40e852:	in     eax,dx
  40e853:	pop    esp
  40e854:	out    0x58,eax
  40e856:	lds    edx,FWORD PTR [ebx+esi*2-0xafdeb6c]
  40e85d:	jbe    0x40e83a
  40e85f:	fbld   TBYTE PTR [ebx+0x68]
  40e862:	call   0x22931bb4
  40e867:	xor    eax,0xd0573884
  40e86c:	xchg   ebp,eax
  40e86d:	nop
  40e86e:	xor    DWORD PTR [ebp+0x24],ebx
  40e871:	pop    ebx
  40e872:	sbb    ch,BYTE PTR [eax+ebx*8-0x50]
  40e876:	fnstsw ax
  40e878:	xor    BYTE PTR [edi-0x967cd8c],dl
  40e87e:	lahf   
  40e87f:	dec    DWORD PTR [edx+0x31]
  40e882:	(bad)  
  40e886:	or     edi,DWORD PTR [esi-0x66]
  40e889:	in     eax,dx
  40e88a:	or     eax,DWORD PTR [eax]
  40e88c:	sbb    ebp,DWORD PTR [ecx-0x4]
  40e88f:	jbe    0x40e8ae
  40e891:	cmp    esp,DWORD PTR [eax]
  40e893:	sbb    dl,BYTE PTR [ecx+0x798b71a6]
  40e899:	mov    ah,BYTE PTR [ebp+0x7c1d6d80]
  40e89f:	leave  
  40e8a0:	xchg   ecx,eax
  40e8a1:	mov    DWORD PTR [ebp+0x4df5a3da],ebx
  40e8a7:	in     eax,0xd
  40e8a9:	jnp    0x40e8ca
  40e8ab:	adc    esi,esp
  40e8ad:	sbb    DWORD PTR [edx-0x52],eax
  40e8b0:	push   edx
  40e8b1:	and    esp,0x42431157
  40e8b7:	mov    eax,cr3
  40e8ba:	jo     0x40e91c
  40e8bc:	ffree  st(6)
  40e8be:	xchg   ecx,eax
  40e8bf:	pushf  
  40e8c0:	push   ds
  40e8c1:	sahf   
  40e8c2:	das    
  40e8c3:	adc    ecx,ebp
  40e8c5:	adc    bh,bh
  40e8c7:	push   ss
  40e8c8:	sbb    cl,BYTE PTR [ecx+0x3ee39962]
  40e8ce:	hlt    
  40e8cf:	push   0x65
  40e8d1:	inc    cl
  40e8d3:	xor    dh,BYTE PTR [ebp+0x41]
  40e8d6:	inc    edi
  40e8d7:	and    al,0x2c
  40e8d9:	sub    DWORD PTR [ebx-0x3fc7eba9],edi
  40e8df:	sbb    BYTE PTR [ebx-0x17dcd1c6],dh
  40e8e5:	mov    DWORD PTR [edx],ecx
  40e8e7:	call   0x610c:0xdb7fbecb
  40e8ee:	les    esp,FWORD PTR [eax+0x62]
  40e8f1:	add    ah,BYTE PTR [ebp-0x4f]
  40e8f4:	sub    BYTE PTR [edi-0x13],ch
  40e8f7:	and    al,0x69
  40e8f9:	cli    
  40e8fa:	out    dx,eax
  40e8fb:	lea    ebx,[ebx+0x31e8c750]
  40e901:	repnz and esi,edx
  40e904:	fucomi st,st(4)
  40e906:	pop    edx
  40e907:	pop    esi
  40e908:	dec    esi
  40e909:	jo     0x40e89f
  40e90b:	inc    eax
  40e90c:	scas   al,BYTE PTR es:[edi]
  40e90d:	retf   
  40e90e:	or     eax,DWORD PTR [ecx-0x74]
  40e911:	sbb    BYTE PTR [esi+0x1],ah
  40e914:	jp     0x40e92a
  40e916:	jns    0x40e8ad
  40e918:	int3   
  40e919:	mov    eax,0x66be6007
  40e91e:	dec    eax
  40e91f:	jecxz  0x40e8c4
  40e921:	imul   ebp,esi,0x17a5babf
  40e927:	loop   0x40e982
  40e929:	rcr    DWORD PTR [ebx-0x12ecc029],1
  40e92f:	adc    BYTE PTR [ecx+ebx*2],ch
  40e932:	stc    
  40e933:	or     al,0x8e
  40e935:	retf   
  40e936:	mov    eax,0x4b9be872
  40e93b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e93c:	rol    DWORD PTR [edx*8-0x6175f2ac],0x9
  40e944:	cli    
  40e945:	sub    DWORD PTR [edi+ebx*1+0x44],edi
  40e949:	pusha  
  40e94a:	das    
  40e94b:	ins    BYTE PTR es:[edi],dx
  40e94c:	fiadd  WORD PTR [ecx-0x176ce41b]
  40e952:	push   ecx
  40e953:	loop   0x40e986
  40e955:	lds    edi,FWORD PTR [esi+0x47e0ffcf]
  40e95b:	sahf   
  40e95c:	imul   ecx,DWORD PTR ds:0x96e92fd3,0xffffff99
  40e963:	pop    edi
  40e964:	push   ss
  40e965:	lock aas 
  40e967:	js     0x40e99c
  40e969:	dec    eax
  40e96a:	jns    0x40e903
  40e96c:	mov    bl,0x96
  40e96e:	jle    0x40e970
  40e970:	pop    es
  40e971:	jg     0x40e952
  40e973:	and    DWORD PTR [ecx],ecx
  40e975:	add    DWORD PTR [edx-0x45],eax
  40e978:	out    0xcf,eax
  40e97a:	add    eax,edx
  40e97c:	ins    BYTE PTR es:[edi],dx
  40e97d:	mov    WORD PTR [ecx-0x43fddc64],ds
  40e983:	adc    BYTE PTR [esi+0x730fe6ef],ch
  40e989:	fist   WORD PTR ss:[ecx-0x61]
  40e98d:	push   0x23
  40e98f:	loope  0x40ea00
  40e991:	pop    ecx
  40e992:	jmp    0x7ebd:0x312c3dcc
  40e999:	adc    eax,0xfd7ec90b
  40e99e:	into   
  40e99f:	adc    al,0x5f
  40e9a1:	leave  
  40e9a2:	xor    eax,ecx
  40e9a4:	lods   al,BYTE PTR ds:[esi]
  40e9a5:	fwait
  40e9a6:	in     eax,0x58
  40e9a8:	jo     0x40e986
  40e9aa:	out    0x3b,al
  40e9ac:	jns    0x40ea25
  40e9ae:	push   esi
  40e9af:	xchg   bh,ah
  40e9b1:	adc    al,0xc2
  40e9b3:	test   BYTE PTR [ebx-0x7d9932f6],ah
  40e9b9:	sbb    al,0x65
  40e9bb:	add    BYTE PTR [edi],cl
  40e9bd:	fwait
  40e9be:	lods   eax,DWORD PTR ds:[esi]
  40e9bf:	cmp    al,0x59
  40e9c1:	pop    edi
  40e9c2:	pusha  
  40e9c3:	sub    esi,edi
  40e9c5:	or     BYTE PTR [ecx-0x4bd26ac4],0x2b
  40e9cc:	int3   
  40e9cd:	sahf   
  40e9ce:	sub    al,0x60
  40e9d0:	dec    ecx
  40e9d1:	outs   dx,DWORD PTR ds:[esi]
  40e9d2:	jo     0x40e9a3
  40e9d4:	fdivr  QWORD PTR [ecx+0x7a0f9b32]
  40e9da:	jecxz  0x40ea0c
  40e9dc:	test   DWORD PTR [ecx-0x5e],ecx
  40e9df:	loopne 0x40e9f1
  40e9e1:	jmp    0x115f:0xeb75cd2a
  40e9e8:	in     al,0x31
  40e9ea:	xchg   ebp,eax
  40e9eb:	push   cs
  40e9ec:	add    DWORD PTR [ecx+0x12619010],ebx
  40e9f2:	mov    bh,0xf1
  40e9f4:	clc    
  40e9f5:	rcl    DWORD PTR [esi],1
  40e9f7:	shl    edi,cl
  40e9f9:	mov    ch,0xf5
  40e9fb:	ja     0x40ea3d
  40e9fd:	adc    DWORD PTR [ecx],ebp
  40e9ff:	(bad)  [eax+eiz*1]
  40ea02:	sbb    al,0x39
  40ea04:	dec    ecx
  40ea05:	adc    eax,0x84e3539b
  40ea0a:	mov    fs,WORD PTR [eax-0x21]
  40ea0d:	or     BYTE PTR [edx-0x381f114e],dl
  40ea13:	add    BYTE PTR [esi-0x2e],cl
  40ea16:	jle    0x40e9cf
  40ea18:	int3   
  40ea19:	test   DWORD PTR [ecx+0x46485f2f],0x9a6e2262
  40ea23:	push   esp
  40ea24:	inc    edi
  40ea25:	lahf   
  40ea26:	jl     0x40ea3e
  40ea28:	dec    ebx
  40ea29:	stos   DWORD PTR es:[edi],eax
  40ea2a:	pop    esp
  40ea2b:	loope  0x40ea70
  40ea2d:	xchg   ebp,eax
  40ea2e:	int3   
  40ea2f:	adc    DWORD PTR [edi-0x2e],ebp
  40ea32:	(bad)
  40ea38:	loopne 0x40ea0c
  40ea3a:	pop    ecx
  40ea3b:	cmp    BYTE PTR [ebx-0x10],al
  40ea3e:	aaa    
  40ea3f:	xor    edx,DWORD PTR [ebx+0x46]
  40ea42:	pop    ebx
  40ea43:	adc    eax,0x98755408
  40ea48:	push   es
  40ea49:	ror    ebx,1
  40ea4b:	pop    eax
  40ea4c:	inc    edi
  40ea4d:	mov    al,0x50
  40ea4f:	mov    cl,0x69
  40ea51:	and    BYTE PTR [eax],bh
  40ea53:	dec    esp
  40ea54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea55:	lods   eax,DWORD PTR ds:[esi]
  40ea56:	and    DWORD PTR [eax-0x5f76ccc0],0x7d92db33
  40ea60:	iret   
  40ea61:	pop    eax
  40ea62:	push   edx
  40ea63:	(bad)  
  40ea64:	xlat   BYTE PTR ds:[ebx]
  40ea65:	dec    edi
  40ea66:	in     al,0x5c
  40ea68:	stc    
  40ea69:	or     DWORD PTR [edx-0x2da513e1],0xaa692f6a
  40ea73:	or     eax,0xc459c037
  40ea78:	mov    edi,es
  40ea7a:	sbb    BYTE PTR [esp+esi*2-0x65ba60bc],bl
  40ea81:	inc    edi
  40ea82:	lea    edx,[esp+eax*1-0x57]
  40ea86:	ja     0x40ea4e
  40ea88:	sbb    al,0xbb
  40ea8a:	and    BYTE PTR [esi],bh
  40ea8c:	mov    bl,0xff
  40ea8e:	mov    esi,0xd521bafe
  40ea93:	cwde   
  40ea94:	(bad)  
  40ea95:	enter  0x53f5,0xde
  40ea99:	and    ah,BYTE PTR [ebp+0x415cf2e5]
  40ea9f:	jp     0x40eaf9
  40eaa1:	icebp  
  40eaa2:	add    edi,esp
  40eaa4:	out    0x5e,eax
  40eaa6:	add    eax,0x1fb08e36
  40eaab:	bound  esi,QWORD PTR [ebx+0xddcdec6]
  40eab1:	push   ds
  40eab2:	jl     0x40ea57
  40eab4:	lods   al,BYTE PTR ds:[esi]
  40eab5:	xchg   edx,eax
  40eab6:	bnd ss ja 0x40ead4
  40eaba:	push   ebx
  40eabb:	dec    esp
  40eabc:	push   cs
  40eabd:	jmp    0x3067842f
  40eac2:	jbe    0x40eb2b
  40eac4:	pusha  
  40eac5:	mul    BYTE PTR [ebp-0x54]
  40eac8:	out    dx,eax
  40eac9:	inc    ebp
  40eaca:	cwde   
  40eacb:	fs xor eax,0xd01876de
  40ead1:	xchg   DWORD PTR [edi+0xae5cae0],ebx
  40ead7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ead8:	and    ebp,eax
  40eada:	add    ebx,DWORD PTR [edi+0x7a9dec57]
  40eae0:	xchg   ah,cl
  40eae2:	push   esp
  40eae3:	cmp    BYTE PTR [ebx+0x60],ch
  40eae6:	ret    0x2996
  40eae9:	imul   ebx,esp,0x5e
  40eaec:	mov    es:0x41e1c735,al
  40eaf2:	icebp  
  40eaf3:	adc    BYTE PTR [esi],bl
  40eaf5:	imul   ecx,esi,0x32
  40eaf8:	dec    eax
  40eaf9:	dec    edx
  40eafa:	cmp    BYTE PTR [eax],al
  40eafc:	jnp    0x40eb3e
  40eafe:	in     al,dx
  40eaff:	inc    edi
  40eb00:	pop    es
  40eb01:	dec    esi
  40eb02:	ds mov cl,0x37
  40eb05:	test   DWORD PTR [ecx],edi
  40eb07:	fsubr  QWORD PTR [ebx]
  40eb09:	loopne 0x40eb66
  40eb0b:	mov    DWORD PTR [ecx],ebx
  40eb0d:	mov    al,ds:0xec758bbb
  40eb12:	cmp    BYTE PTR [esi-0x7a8e6524],bh
  40eb18:	daa    
  40eb19:	pop    ebx
  40eb1a:	mov    eax,ds:0x62fff96c
  40eb1f:	fild   QWORD PTR [edx-0x245322db]
  40eb25:	dec    ecx
  40eb26:	stc    
  40eb27:	nop
  40eb28:	test   eax,0x4314a1e7
  40eb2d:	mov    eax,0x748c7728
  40eb32:	frstor [ebx-0x785c473c]
  40eb38:	push   ecx
  40eb39:	mov    eax,ds:0x8f581e4f
  40eb3e:	retf   0x6827
  40eb41:	test   BYTE PTR [ebx],0x7
  40eb44:	test   al,0x1f
  40eb46:	mov    esi,0x3ed44b1f
  40eb4b:	outs   dx,BYTE PTR ds:[esi]
  40eb4c:	or     eax,DWORD PTR [esi-0x433a3bf3]
  40eb52:	hlt    
  40eb53:	pop    ds
  40eb54:	push   esp
  40eb55:	inc    esp
  40eb56:	cmc    
  40eb57:	and    dl,al
  40eb59:	mov    BYTE PTR [ebx],ah
  40eb5b:	mov    cl,0x31
  40eb5d:	mov    bl,0x5d
  40eb5f:	xlat   BYTE PTR ds:[ebx]
  40eb60:	push   0x2b01ced1
  40eb65:	inc    edx
  40eb66:	inc    ebx
  40eb67:	leave  
  40eb68:	dec    esp
  40eb69:	loope  0x40eb55
  40eb6b:	cmp    eax,0xd0e009d4
  40eb70:	aad    0x9b
  40eb72:	lds    esp,FWORD PTR [eax+0x43]
  40eb75:	pushf  
  40eb76:	mov    esp,0xf683415c
  40eb7b:	xchg   esp,eax
  40eb7c:	mov    edx,DWORD PTR [esi+0x2a50c54a]
  40eb82:	push   0x39
  40eb84:	nop
  40eb85:	(bad)  
  40eb86:	push   ss
  40eb87:	call   0x8a61cd9a
  40eb8c:	clc    
  40eb8d:	(bad)  
  40eb8e:	mov    esp,0xae8a54fa
  40eb93:	sub    bp,si
  40eb96:	jns    0x40eb81
  40eb98:	and    BYTE PTR [esi],ah
  40eb9a:	clc    
  40eb9b:	adc    eax,0x5662f626
  40eba0:	jmp    0x72bc:0x2e532eb2
  40eba7:	ja     0x40ebf3
  40eba9:	(bad)  
  40ebaa:	ds iret 
  40ebac:	pop    ds
  40ebad:	adc    eax,0x8a676e03
  40ebb2:	pop    ebp
  40ebb3:	cmp    esi,DWORD PTR [ebx-0x29]
  40ebb6:	enter  0x4c0f,0xb9
  40ebba:	dec    ebx
  40ebbb:	fsubr  st(7),st
  40ebbd:	stc    
  40ebbe:	cdq    
  40ebbf:	mov    ds:0xb37e982f,al
  40ebc4:	add    ch,bh
  40ebc6:	adc    BYTE PTR [ecx+0x5c],0x16
  40ebca:	or     BYTE PTR [esi-0x64],dh
  40ebcd:	stos   BYTE PTR es:[edi],al
  40ebce:	jle    0x40ec15
  40ebd0:	mov    ds:0x1e742762,al
  40ebd5:	pop    edx
  40ebd6:	pop    edi
  40ebd7:	mov    ah,0x6d
  40ebd9:	clc    
  40ebda:	sub    ch,ah
  40ebdc:	je     0x40ec50
  40ebde:	enter  0x3c7a,0xf3
  40ebe2:	xchg   edx,eax
  40ebe3:	js     0x40ebef
  40ebe5:	add    DWORD PTR [esi],esp
  40ebe7:	xor    al,0x65
  40ebe9:	add    bl,ch
  40ebeb:	jle    0x40ebfd
  40ebed:	gs ret 
  40ebef:	and    DWORD PTR [esi+0xb],ebx
  40ebf2:	ficom  DWORD PTR [ebp+esi*2-0x1472d684]
  40ebf9:	mov    dh,0xf5
  40ebfb:	push   ss
  40ebfc:	inc    edi
  40ebfd:	xchg   esi,eax
  40ebfe:	rcr    dl,cl
  40ec00:	sub    al,dl
  40ec02:	mov    dl,0xb5
  40ec04:	cmc    
  40ec05:	adc    dl,BYTE PTR [edi]
  40ec07:	enter  0x3ff8,0x6c
  40ec0b:	inc    ebp
  40ec0c:	sahf   
  40ec0d:	imul   BYTE PTR [ecx-0x9]
  40ec10:	inc    ebp
  40ec11:	out    dx,eax
  40ec12:	call   0xb3cd:0xac66f4b6
  40ec19:	push   ecx
  40ec1a:	cld    
  40ec1b:	ss js  0x40ebe0
  40ec1e:	adc    eax,0xa06d451f
  40ec23:	pusha  
  40ec24:	jge    0x40eba6
  40ec26:	(bad)  
  40ec27:	rcr    ah,cl
  40ec29:	mov    cl,0xfd
  40ec2b:	push   es
  40ec2c:	in     al,dx
  40ec2d:	bound  edi,QWORD PTR [edx-0x5b]
  40ec30:	push   0x7b184511
  40ec35:	mov    cl,0x92
  40ec37:	les    ecx,FWORD PTR [eax+0x5d77c052]
  40ec3d:	cmp    DWORD PTR [ebp+eiz*1-0x456e3c53],ebx
  40ec44:	mul    DWORD PTR [ecx+0x184495a3]
  40ec4a:	add    esp,eax
  40ec4c:	(bad)  
  40ec4d:	push   ebx
  40ec4e:	adc    eax,0x65f63256
  40ec53:	adc    eax,0xcfc9d55b
  40ec58:	dec    edx
  40ec59:	ss xor dl,cl
  40ec5c:	xor    ah,BYTE PTR [esi]
  40ec5e:	(bad)  
  40ec60:	mov    eax,ds:0x7aa7490
  40ec65:	mov    ebp,0x74a0030a
  40ec6a:	xor    BYTE PTR [esi+0x236f53a2],bl
  40ec70:	xor    ch,BYTE PTR [edx]
  40ec72:	stos   BYTE PTR es:[edi],al
  40ec73:	shr    dl,cl
  40ec75:	xchg   DWORD PTR [edx+0x18],esi
  40ec78:	sbb    DWORD PTR [ebp+0x73],eax
  40ec7b:	cmc    
  40ec7c:	aas    
  40ec7d:	xchg   esp,eax
  40ec7e:	fdivr  DWORD PTR ds:0xbb77a85a
  40ec84:	shr    bh,1
  40ec86:	es nop
  40ec88:	sub    ebx,edx
  40ec8a:	int3   
  40ec8b:	xchg   DWORD PTR [edx-0x2c],esi
  40ec8e:	sub    DWORD PTR [edx+0x6f],ebx
  40ec91:	lock mov esi,ds
  40ec94:	xor    bh,bh
  40ec96:	and    ebx,DWORD PTR [ebx-0x69]
  40ec99:	mov    cl,0x56
  40ec9b:	mov    dh,0xda
  40ec9d:	rcl    ah,0x59
  40eca0:	push   0x40
  40eca2:	stc    
  40eca3:	or     al,0x7
  40eca5:	inc    eax
  40eca6:	scas   al,BYTE PTR es:[edi]
  40eca7:	mov    ds:0x9b2c264d,al
  40ecac:	sbb    bh,dl
  40ecae:	pop    edx
  40ecaf:	jecxz  0x40ecbc
  40ecb1:	lea    ebx,[ebx]
  40ecb3:	sbb    DWORD PTR [eax-0x690414d6],edi
  40ecb9:	ret    0xb71f
  40ecbc:	sbb    eax,0x63f19b6f
  40ecc1:	into   
  40ecc2:	dec    edi
  40ecc3:	cs or  al,0x89
  40ecc6:	and    ebx,esi
  40ecc8:	and    ebx,DWORD PTR [ebp-0x1dbaba67]
  40ecce:	dec    eax
  40eccf:	mov    ds:0x5508c03f,al
  40ecd4:	ins    DWORD PTR es:[edi],dx
  40ecd5:	rcl    BYTE PTR [esi-0x35d62c75],cl
  40ecdb:	cmp    al,0x40
  40ecdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecde:	sub    eax,DWORD PTR [eax]
  40ece0:	mov    eax,ds:0x6091c2c8
  40ece5:	adc    al,0xa7
  40ece7:	je     0x40ec71
  40ece9:	xlat   BYTE PTR ds:[ebx]
  40ecea:	sbb    ebp,edx
  40ecec:	ss xchg ebx,eax
  40ecee:	push   eax
  40ecef:	lahf   
  40ecf0:	xor    edi,DWORD PTR [ebx]
  40ecf2:	mov    ah,0x7c
  40ecf4:	mov    ecx,0x54fdcc75
  40ecf9:	add    edi,DWORD PTR [eax]
  40ecfb:	sbb    eax,0x556198a
  40ed00:	adc    al,0x60
  40ed02:	and    DWORD PTR [eax-0x1dd751c5],eax
  40ed08:	push   0x49e61932
  40ed0d:	data16 xor BYTE PTR [ebx+ebx*2],dl
  40ed11:	cs ins BYTE PTR es:[edi],dx
  40ed13:	jbe    0x40ed94
  40ed15:	adc    al,0x51
  40ed17:	popa   
  40ed18:	sub    al,BYTE PTR [bp-0x20]
  40ed1c:	pop    edi
  40ed1d:	cmp    BYTE PTR ds:0x2bd300ba,dl
  40ed23:	add    al,0x48
  40ed25:	rol    DWORD PTR [esi-0x63a448e3],0x71
  40ed2c:	gs ret 
  40ed2e:	sahf   
  40ed2f:	retf   0xe296
  40ed32:	jmp    0x40ed8f
  40ed34:	mov    ch,0xbc
  40ed36:	ds fs push esp
  40ed39:	push   ebx
  40ed3a:	imul   ebx,esp,0xffffffc9
  40ed3d:	mov    esp,0xa90ac0d
  40ed42:	jae    0x40ed7d
  40ed44:	push   0xffffffec
  40ed46:	call   0x18b0dcef
  40ed4b:	in     eax,dx
  40ed4c:	clc    
  40ed4d:	aaa    
  40ed4e:	inc    esi
  40ed4f:	enter  0xaf08,0x85
  40ed53:	div    ch
  40ed55:	cmp    dl,ah
  40ed57:	fcomip st,st(2)
  40ed59:	clc    
  40ed5a:	pusha  
  40ed5b:	mov    edx,0x1be92adf
  40ed60:	jle    0x40eddc
  40ed62:	sub    DWORD PTR [ecx],eax
  40ed64:	jle    0x40eda4
  40ed66:	pop    esi
  40ed67:	add    BYTE PTR [edx+0x4178d70b],0x7d
  40ed6e:	adc    al,0xd3
  40ed70:	cmc    
  40ed71:	and    al,0x5b
  40ed73:	call   FWORD PTR [ebx-0x1b039000]
  40ed79:	ret    
  40ed7a:	jl     0x40ed60
  40ed7c:	and    al,0xf1
  40ed7e:	push   ebp
  40ed7f:	mov    eax,0x5c29440
  40ed84:	xor    BYTE PTR [ecx],dl
  40ed86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed87:	jmp    0x316d:0xf1216628
  40ed8e:	outs   dx,BYTE PTR ds:[esi]
  40ed8f:	mov    cs,WORD PTR [ebp+0xae2f72e]
  40ed95:	retf   0x4009
  40ed98:	pop    ss
  40ed99:	mov    dl,0x9e
  40ed9b:	in     eax,0x91
  40ed9d:	mov    eax,0x1703f168
  40eda2:	cmp    al,0xf8
  40eda4:	jl     0x40edb2
  40eda6:	mov    bl,0x19
  40eda8:	mov    DWORD PTR [ecx+0x97465d8],ebp
  40edae:	es pop ds
  40edb0:	jle    0x40ee04
  40edb2:	adc    ah,BYTE PTR [edi-0x27c85a11]
  40edb8:	aad    0x4
  40edba:	or     cl,BYTE PTR [ebx-0x56]
  40edbd:	mov    eax,0xa1273b9f
  40edc2:	sbb    DWORD PTR [ecx],ebp
  40edc4:	xor    BYTE PTR [edi-0x289f5f99],bh
  40edca:	je     0x40edcd
  40edcc:	inc    esi
  40edcd:	jo     0x40ee1a
  40edcf:	dec    esi
  40edd0:	push   ebx
  40edd1:	mov    esp,0x8d7384f9
  40edd6:	xchg   esi,eax
  40edd7:	dec    esi
  40edd8:	aad    0xa4
  40edda:	mov    DWORD PTR [edx+0x24],edx
  40eddd:	pop    esp
  40edde:	call   0x2908:0x9e8f3499
  40ede5:	xor    BYTE PTR [edi+0x1a51c7d1],0xa0
  40edec:	icebp  
  40eded:	cmc    
  40edee:	ret    0x43a4
  40edf1:	rcl    dl,1
  40edf3:	add    al,0x4b
  40edf5:	ins    DWORD PTR es:[edi],dx
  40edf6:	xor    BYTE PTR [esp+ecx*1+0x11],dl
  40edfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edfb:	jb     0x40edfe
  40edfd:	retf   0x3815
  40ee00:	out    0xa0,al
  40ee02:	rcl    DWORD PTR [edi-0x4c],cl
  40ee05:	and    BYTE PTR [edi+esi*1],al
  40ee08:	repz jb 0x40ee7a
  40ee0b:	sbb    ebx,esp
  40ee0d:	mov    al,ds:0x1378ec13
  40ee12:	mov    bl,0xa8
  40ee14:	add    al,0x61
  40ee16:	imul   ebx,DWORD PTR [edi+0x1b],0x32
  40ee1a:	push   eax
  40ee1b:	ret    
  40ee1c:	imul   esp,DWORD PTR [ecx+0x16f4713e],0x6
  40ee23:	fwait
  40ee24:	int3   
  40ee25:	inc    edx
  40ee26:	imul   esi,DWORD PTR [ecx],0xfffffff7
  40ee29:	lea    ebp,[edx+0x18638af9]
  40ee2f:	ja     0x40ee39
  40ee31:	dec    edx
  40ee32:	sub    esp,DWORD PTR [esi]
  40ee34:	out    dx,eax
  40ee35:	in     al,dx
  40ee36:	call   0x10f5:0xc7ba648e
  40ee3d:	pop    es
  40ee3e:	mov    WORD PTR [ecx],ds
  40ee40:	dec    edx
  40ee41:	stc    
  40ee42:	mov    al,ds:0xf142abda
  40ee47:	es (bad) 
  40ee49:	rcr    DWORD PTR [ecx],cl
  40ee4b:	add    BYTE PTR [eax+ecx*8],al
  40ee4e:	inc    ecx
  40ee4f:	ja     0x40ee24
  40ee51:	(bad)  
  40ee52:	mov    dh,0xda
  40ee54:	popf   
  40ee55:	sub    eax,0x59c60072
  40ee5a:	inc    edi
  40ee5b:	or     al,0x38
  40ee5d:	(bad)  
  40ee5e:	int3   
  40ee5f:	in     eax,dx
  40ee60:	push   ecx
  40ee61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee62:	adc    ebp,esi
  40ee64:	aad    0x97
  40ee66:	loopne 0x40ee76
  40ee68:	push   esi
  40ee69:	mov    cl,0x27
  40ee6b:	mov    eax,ds:0xf4595a31
  40ee70:	add    DWORD PTR [ebx+edi*4+0x5a6e165b],0x5fede9da
  40ee7b:	xchg   ebx,eax
  40ee7c:	push   ss
  40ee7d:	and    eax,0x2e1f33f5
  40ee82:	mov    esp,0xc94f864f
  40ee87:	stos   BYTE PTR es:[edi],al
  40ee88:	mul    DWORD PTR [edi+0xa]
  40ee8b:	push   edx
  40ee8c:	jae    0x40eeca
  40ee8e:	and    DWORD PTR [ecx+0x1614c70],0xb2547ac3
  40ee98:	xor    DWORD PTR [edi-0x5],ebx
  40ee9b:	ret    
  40ee9c:	mov    eax,ds:0xd57d237e
  40eea1:	lods   al,BYTE PTR ds:[esi]
  40eea2:	xor    ah,BYTE PTR [edi-0xd]
  40eea5:	ss push ds
  40eea7:	neg    BYTE PTR [ebp-0x3c916b1e]
  40eead:	arpl   WORD PTR [ebx+0x273f547e],dx
  40eeb3:	jo     0x40ee70
  40eeb5:	fs pop es
  40eeb7:	sub    WORD PTR [eax-0x3c30c98e],ax
  40eebe:	scas   al,BYTE PTR es:[edi]
  40eebf:	sub    bh,dl
  40eec1:	idiv   DWORD PTR [edi]
  40eec3:	(bad)  
  40eec5:	stos   BYTE PTR es:[edi],al
  40eec6:	push   eax
  40eec7:	rol    BYTE PTR [esp+ebp*1],cl
  40eeca:	push   ebx
  40eecb:	xchg   ebx,eax
  40eecc:	sbb    al,0x5b
  40eece:	ins    DWORD PTR es:[edi],dx
  40eecf:	bnd jnp 0x40ef2a
  40eed2:	ins    DWORD PTR es:[edi],dx
  40eed3:	xor    eax,0xca795cec
  40eed8:	iret   
  40eed9:	xor    BYTE PTR [eax+0x2e6820],0x2f
  40eee0:	sbb    eax,0xe04e10da
  40eee5:	shr    BYTE PTR [esi+eax*2],1
  40eee8:	int3   
  40eee9:	or     DWORD PTR [ebp+0x1a01e663],ebx
  40eeef:	dec    ecx
  40eef0:	call   0x6130:0xa6e90d7c
  40eef7:	mov    BYTE PTR ss:[edx],al
  40eefa:	mov    bl,0xd0
  40eefc:	popa   
  40eefd:	(bad)  
  40eefe:	rcr    BYTE PTR [ecx+0xf],0x5c
  40ef02:	je     0x40eed7
  40ef04:	jmp    0xe46a:0xd7f5d98d
  40ef0b:	mov    ebp,0x948cd30a
  40ef10:	inc    ecx
  40ef11:	add    eax,0x688ad2a0
  40ef16:	fistp  QWORD PTR [edi+0x327fae23]
  40ef1c:	aad    0x2a
  40ef1e:	push   ebx
  40ef1f:	mov    WORD PTR [eax-0x408ac31a],?
  40ef25:	inc    edi
  40ef26:	jmp    0x40eebc
  40ef28:	pop    esp
  40ef29:	lock and edi,DWORD PTR [edi]
  40ef2c:	psubusw mm4,QWORD PTR [edi+esi*8-0x38]
  40ef31:	sbb    al,0xbe
  40ef33:	mov    dh,bh
  40ef35:	std    
  40ef36:	fmul   QWORD PTR ss:[eax]
  40ef39:	jg     0x40ef5a
  40ef3b:	bound  esp,QWORD PTR [edx+0x3a]
  40ef3e:	and    BYTE PTR [edi+0xe5e2bbe],bh
  40ef44:	jmp    0x65fcef57
  40ef49:	fsub   st,st(7)
  40ef4b:	lds    esi,FWORD PTR [ebx+eax*4-0x8e18162]
  40ef52:	push   0xb5137f49
  40ef57:	push   0x10a95ec4
  40ef5c:	lea    eax,[edx]
  40ef5e:	ds pop ds
  40ef60:	aam    0xfa
  40ef62:	pop    esi
  40ef63:	mov    ds:0xd392d8fe,eax
  40ef68:	clc    
  40ef69:	stos   DWORD PTR es:[edi],eax
  40ef6a:	and    BYTE PTR [eax+0x25c01b8b],ah
  40ef70:	outs   dx,BYTE PTR ds:[esi]
  40ef71:	push   es
  40ef72:	call   0x4db7e6cf
  40ef77:	or     BYTE PTR [esp+edi*4],cl
  40ef7a:	push   esi
  40ef7b:	xchg   DWORD PTR [ebx+0x2303f795],esi
  40ef81:	mov    edx,0xe8ef71d0
  40ef86:	cwde   
  40ef87:	pop    ebx
  40ef88:	cmp    ecx,DWORD PTR [ebx]
  40ef8a:	(bad)  
  40ef8b:	xor    eax,esi
  40ef8d:	mov    dl,ah
  40ef8f:	je     0x40efa4
  40ef91:	mov    edx,0xecdad99
  40ef96:	or     eax,0x661615c0
  40ef9b:	and    bh,BYTE PTR [ebx+0x7d02b45a]
  40efa1:	in     al,0x7a
  40efa3:	push   cs
  40efa4:	pop    ebp
  40efa5:	xchg   ebp,eax
  40efa6:	jb     0x40f008
  40efa8:	arpl   WORD PTR [edi+0xb],ax
  40efab:	(bad)  
  40efac:	dec    esp
  40efad:	adc    ah,ah
  40efaf:	mov    es,WORD PTR [esi-0x28]
  40efb2:	jo     0x40efd4
  40efb4:	out    0xe7,al
  40efb6:	idiv   BYTE PTR [ecx]
  40efb8:	(bad)  
  40efb9:	jmp    0x40ef83
  40efbb:	call   0xce6:0xd6ba07f9
  40efc2:	shl    BYTE PTR [edi+0x1476b1e9],cl
  40efc8:	hlt    
  40efc9:	out    0x15,al
  40efcb:	push   cs
  40efcc:	mov    cl,0x8
  40efce:	sbb    DWORD PTR [eax+0x209d7954],ecx
  40efd4:	or     al,0x4
  40efd6:	inc    edi
  40efd7:	jecxz  0x40f021
  40efd9:	jmp    0x40f03f
  40efdb:	arpl   WORD PTR [ebx],sp
  40efdd:	add    BYTE PTR [ecx-0x294e2cc0],bl
  40efe3:	repz jmp 0x40ef6c
  40efe6:	cdq    
  40efe7:	xchg   esp,eax
  40efe8:	dec    edi
  40efe9:	jge    0x40efe5
  40efeb:	and    al,bh
  40efed:	sbb    eax,DWORD PTR [ecx+0x36]
  40eff0:	inc    esi
  40eff1:	cdq    
  40eff2:	push   0xffffff8f
  40eff4:	mov    esp,ds
  40eff6:	pop    ebp
  40eff7:	pop    ebp
  40eff8:	into   
  40eff9:	mov    cl,0x9d
  40effb:	add    al,BYTE PTR [esp-0x7f18eb7b]
  40f002:	push   0xffffffbc
  40f004:	or     edi,ecx
  40f006:	daa    
  40f007:	xchg   edi,eax
  40f008:	jle    0x40ef9e
  40f00a:	cmp    bl,0x3a
  40f00d:	popf   
  40f00e:	out    dx,al
  40f00f:	fistp  QWORD PTR [edx+0x265fda7a]
  40f015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f016:	mov    ah,0x96
  40f018:	pop    esi
  40f019:	xor    eax,0x7835373
  40f01e:	sbb    ch,BYTE PTR [ebx+0x2a]
  40f021:	in     eax,dx
  40f022:	jmp    0x4a7069a7
  40f027:	xor    BYTE PTR [esi-0x22a94220],dh
  40f02d:	mov    DWORD PTR [ebx+0x2e],ecx
  40f030:	jb     0x40efdb
  40f032:	ret    
  40f033:	and    eax,0x1a965077
  40f038:	xchg   edx,eax
  40f039:	push   ebp
  40f03a:	sahf   
  40f03b:	xor    al,0x95
  40f03d:	addr16 cmp ebx,eax
  40f040:	imul   edi,DWORD PTR [edx-0x686903be],0x38
  40f047:	xchg   ch,cl
  40f049:	xchg   edx,eax
  40f04a:	in     eax,dx
  40f04b:	mov    ebp,0xb4e96126
  40f050:	out    0x4c,eax
  40f052:	push   ebp
  40f053:	addr16 test eax,0x36792676
  40f059:	(bad)  
  40f05a:	stc    
  40f05b:	adc    eax,DWORD PTR [eax-0x1904d917]
  40f061:	in     eax,0x3a
  40f063:	pusha  
  40f064:	xchg   BYTE PTR [ebx-0x1472b1a4],al
  40f06a:	test   eax,0xd94bb541
  40f06f:	repz popa 
  40f071:	jmp    0x90d91b04
  40f076:	cwde   
  40f077:	int3   
  40f078:	fs into 
  40f07a:	inc    esp
  40f07b:	pop    edi
  40f07c:	jo     0x40f046
  40f07e:	jmp    0xa178:0xd1a226bf
  40f085:	shr    DWORD PTR [esi],0x8a
  40f088:	cld    
  40f089:	sbb    ebx,DWORD PTR [eax]
  40f08b:	and    al,BYTE PTR [ecx+0x16838ca5]
  40f091:	add    cl,BYTE PTR [ebx-0x1c08c143]
  40f097:	jbe    0x40f0dc
  40f099:	sbb    bl,ch
  40f09b:	sbb    ecx,esi
  40f09d:	xchg   edx,eax
  40f09e:	mov    ah,0x86
  40f0a0:	ret    
  40f0a1:	(bad)
  40f0a4:	sub    ecx,esi
  40f0a6:	repnz lea edx,[eax+0x1d]
  40f0aa:	sbb    eax,ebx
  40f0ac:	loopne 0x40f0e1
  40f0ae:	jmp    0x40f0ac
  40f0b0:	adc    eax,0x7c048c2
  40f0b5:	stos   BYTE PTR es:[edi],al
  40f0b6:	pop    ebp
  40f0b7:	out    dx,eax
  40f0b8:	xchg   ebx,eax
  40f0b9:	and    ch,dh
  40f0bb:	inc    edx
  40f0bc:	(bad)  
  40f0bd:	mov    dh,0xa3
  40f0bf:	mov    bh,0x77
  40f0c1:	ss mov ch,0xe8
  40f0c4:	and    cl,BYTE PTR [ecx-0x29]
  40f0c7:	ret    0x2015
  40f0ca:	mov    ecx,0x76cb2672
  40f0cf:	mov    dh,0x2a
  40f0d1:	push   edi
  40f0d2:	dec    eax
  40f0d3:	dec    ebx
  40f0d4:	sar    BYTE PTR [ebx+0x47],1
  40f0d7:	xor    al,0xd6
  40f0d9:	xchg   eax,edi
  40f0db:	push   edx
  40f0dc:	fstp   QWORD PTR [ecx+0x15]
  40f0df:	mov    ebx,0xb41b1202
  40f0e4:	call   0x1932:0x2d04f204
  40f0eb:	fwait
  40f0ec:	ja     0x40f134
  40f0ee:	in     eax,dx
  40f0ef:	popf   
  40f0f0:	dec    ebx
  40f0f1:	in     al,dx
  40f0f2:	pusha  
  40f0f3:	sub    eax,0xeb065835
  40f0f8:	popa   
  40f0f9:	push   esp
  40f0fa:	xor    BYTE PTR [ebx+0x6f879d01],ch
  40f100:	push   0x16c5a044
  40f105:	(bad)  
  40f106:	xlat   BYTE PTR ds:[ebx]
  40f107:	into   
  40f108:	adc    DWORD PTR [ebx],0xc
  40f10b:	cmp    ah,BYTE PTR [esi]
  40f10d:	popf   
  40f10e:	je     0x40f090
  40f110:	inc    ebx
  40f111:	push   esi
  40f112:	es ins DWORD PTR es:[edi],dx
  40f114:	(bad)  
  40f115:	fisttp QWORD PTR [eax]
  40f117:	cld    
  40f118:	stos   BYTE PTR es:[edi],al
  40f119:	loope  0x40f168
  40f11b:	lahf   
  40f11c:	push   0x6f
  40f11e:	xchg   ebx,eax
  40f11f:	or     DWORD PTR [edi-0x2c],edx
  40f122:	add    esi,DWORD PTR [ecx+0x2]
  40f125:	jne    0x40f157
  40f127:	pop    edi
  40f128:	add    al,0xc8
  40f12a:	in     al,0x4a
  40f12c:	mov    BYTE PTR [ecx],cl
  40f12e:	pushf  
  40f12f:	(bad)  
  40f130:	pop    ebp
  40f131:	scas   al,BYTE PTR es:[edi]
  40f132:	mov    eax,0x2112df8
  40f137:	ss inc esp
  40f139:	inc    ebx
  40f13a:	and    DWORD PTR ds:[ebx-0x28],ebx
  40f13e:	ror    BYTE PTR [ecx],0xa9
  40f141:	cmp    eax,0x9759fbd5
  40f146:	push   ds
  40f147:	xchg   bl,bh
  40f149:	mov    al,ds:0x3adc6b86
  40f14e:	stos   BYTE PTR es:[edi],al
  40f14f:	sbb    ah,BYTE PTR [esi+esi*8+0x0]
  40f153:	mov    dl,0xf4
  40f155:	sub    BYTE PTR [esi],0x5b
  40f158:	fnstenv [ebx-0x1d]
  40f15b:	stos   BYTE PTR es:[edi],al
  40f15c:	xchg   ebx,eax
  40f15d:	arpl   WORD PTR ds:0xd46dfee7,dx
  40f163:	rcl    dl,0xa
  40f166:	mov    edx,0x3965569c
  40f16b:	in     eax,0x7b
  40f16d:	cmp    esp,edx
  40f16f:	dec    ebx
  40f170:	loop   0x40f1a4
  40f172:	mov    al,0x4a
  40f174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f175:	popa   
  40f176:	out    0x46,eax
  40f178:	or     esi,DWORD PTR [ebx]
  40f17a:	jle    0x40f14d
  40f17c:	outs   dx,DWORD PTR ds:[esi]
  40f17d:	imul   edx,DWORD PTR [edx-0x207a60d],0x2f
  40f184:	mov    ?,WORD PTR [edx-0x3c32700b]
  40f18a:	out    0x29,al
  40f18c:	stos   BYTE PTR es:[edi],al
  40f18d:	pushf  
  40f18e:	fimul  DWORD PTR [edi-0x5ae4794d]
  40f194:	rol    BYTE PTR cs:[esi+edx*1+0x196861bb],0x7a
  40f19d:	ficom  DWORD PTR [eax-0x38]
  40f1a0:	and    DWORD PTR ds:[esi-0x7a4a67a4],esp
  40f1a7:	xor    ah,al
  40f1a9:	inc    ecx
  40f1aa:	stos   DWORD PTR es:[edi],eax
  40f1ab:	mov    ah,0x5d
  40f1ad:	cmp    eax,0x82f27da2
  40f1b2:	mov    ds:0x1eedc2d8,al
  40f1b7:	push   0x76
  40f1b9:	pop    ecx
  40f1ba:	jmp    0x40f1dd
  40f1bc:	cwde   
  40f1bd:	mov    al,ds:0x4ed7486a
  40f1c2:	stc    
  40f1c3:	int    0xe4
  40f1c5:	mov    bh,0x7d
  40f1c7:	fs out dx,eax
  40f1c9:	(bad)  
  40f1ca:	pusha  
  40f1cb:	ins    BYTE PTR es:[edi],dx
  40f1cc:	jge    0x40f211
  40f1ce:	lahf   
  40f1cf:	jbe    0x40f1f8
  40f1d1:	mov    edx,0x76cff9be
  40f1d6:	popf   
  40f1d7:	and    BYTE PTR [esi],dh
  40f1d9:	gs inc edx
  40f1db:	outs   dx,BYTE PTR ds:[esi]
  40f1dc:	mov    edx,0xacd8fdc3
  40f1e1:	daa    
  40f1e2:	sub    ebp,DWORD PTR [edi-0x2807f2af]
  40f1e8:	push   es
  40f1e9:	cs mov ah,0x55
  40f1ec:	test   eax,0xcee80000
  40f1f1:	js     0x40f260
  40f1f3:	(bad)  
  40f1f4:	jns    0x40f1b8
  40f1f6:	or     BYTE PTR [ebx-0x428d1a91],cl
  40f1fc:	aaa    
  40f1fd:	xor    BYTE PTR [esi],cl
  40f1ff:	shl    DWORD PTR [eax-0x77],cl
  40f202:	inc    eax
  40f203:	mov    ch,ah
  40f205:	mov    al,ds:0x831a5f52
  40f20a:	popa   
  40f20b:	and    eax,esi
  40f20d:	(bad)  
  40f20e:	adc    al,cl
  40f210:	mov    ebx,0x8f3bc3be
  40f215:	push   ecx
  40f216:	or     al,BYTE PTR [edx+0x75781f0e]
  40f21c:	pusha  
  40f21d:	push   ds
  40f21e:	adc    al,0x27
  40f220:	mov    bl,0xf5
  40f222:	mov    ch,0x13
  40f224:	cmp    DWORD PTR [esi+eax*8-0x3f],esp
  40f228:	xchg   esi,eax
  40f229:	aaa    
  40f22a:	in     eax,0x29
  40f22c:	jp     0x40f284
  40f22e:	gs out dx,al
  40f230:	lods   al,BYTE PTR ds:[esi]
  40f231:	in     eax,0xf0
  40f233:	enter  0xcfef,0x9b
  40f237:	ja     0x40f297
  40f239:	out    dx,al
  40f23a:	repz das 
  40f23c:	ret    
  40f23d:	ss jne 0x40f24e
  40f240:	hlt    
  40f241:	imul   ecx,DWORD PTR [eax],0xd61eb28c
  40f247:	daa    
  40f248:	dec    edx
  40f249:	jle    0x40f2b6
  40f24b:	inc    esp
  40f24c:	sbb    BYTE PTR [ebx],ah
  40f24e:	mov    dl,0x3c
  40f250:	jnp    0x40f27d
  40f252:	cmp    BYTE PTR [ecx],ch
  40f254:	aas    
  40f255:	mov    bl,0xa3
  40f257:	neg    BYTE PTR [edx+0x3a]
  40f25a:	sbb    edx,DWORD PTR [esi-0x4e]
  40f25d:	pop    ecx
  40f25e:	cli    
  40f25f:	std    
  40f260:	pusha  
  40f261:	sub    DWORD PTR [ebp-0x5a],edx
  40f264:	adc    esp,DWORD PTR [esi-0x71]
  40f267:	xchg   ebx,eax
  40f268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f269:	popa   
  40f26a:	mov    dh,0xd6
  40f26c:	fdivr  DWORD PTR [esi+0x1ccf6fda]
  40f272:	es stos BYTE PTR es:[edi],al
  40f274:	int    0x7f
  40f276:	cmp    eax,0x4e8f1f24
  40f27b:	ss dec esp
  40f27d:	and    al,BYTE PTR [eax]
  40f27f:	xchg   esp,eax
  40f280:	mov    ch,0xa1
  40f282:	mov    cl,ah
  40f284:	and    ebx,eax
  40f286:	sbb    esp,edi
  40f288:	cdq    
  40f289:	(bad)  
  40f28b:	in     al,0xf
  40f28d:	rcr    BYTE PTR ds:0xcf71eb68,0x25
  40f294:	loop   0x40f21a
  40f296:	xchg   esp,eax
  40f297:	push   0x9de28cf9
  40f29c:	jmp    0x1fdc9d7d
  40f2a1:	push   ebx
  40f2a2:	cmc    
  40f2a3:	dec    ebx
  40f2a4:	xor    eax,0x2bf6e381
  40f2a9:	add    ecx,eax
  40f2ab:	xchg   ebx,eax
  40f2ac:	stc    
  40f2ad:	xor    DWORD PTR ds:0x367a635c,eax
  40f2b3:	das    
  40f2b4:	xchg   edx,eax
  40f2b5:	ss in  eax,0x6f
  40f2b8:	mov    bl,0xa8
  40f2ba:	sub    eax,0x7bc649bb
  40f2bf:	sbb    eax,0x58aa6866
  40f2c4:	push   cs
  40f2c5:	jne    0x40f30f
  40f2c7:	stos   BYTE PTR es:[edi],al
  40f2c8:	or     ecx,DWORD PTR [eax-0x3b03cd3e]
  40f2ce:	(bad)  
  40f2d0:	clc    
  40f2d1:	addr16 lock adc eax,0x69c2a7d8
  40f2d8:	pop    es
  40f2d9:	push   cs
  40f2da:	mov    esi,0xc7aa4087
  40f2df:	(bad)  
  40f2e1:	cmp    esp,DWORD PTR [edi]
  40f2e3:	retf   
  40f2e4:	adc    BYTE PTR [edi+0x63],al
  40f2e7:	cmp    eax,0x2475f82c
  40f2ec:	adc    eax,0xaac3f089
  40f2f1:	fiadd  DWORD PTR [ecx]
  40f2f3:	inc    esi
  40f2f4:	pop    ebp
  40f2f5:	sbb    DWORD PTR [edx-0x18b1e48],0x8c8d3fc0
  40f2ff:	int3   
  40f300:	jno    0x40f33a
  40f302:	lock add DWORD PTR [bx],edx
  40f306:	pop    edx
  40f307:	mov    ch,0xe5
  40f309:	push   es
  40f30a:	stos   BYTE PTR es:[edi],al
  40f30b:	and    bh,BYTE PTR [edi]
  40f30d:	mov    ds:0xd43cd248,al
  40f312:	inc    ebx
  40f313:	les    ecx,FWORD PTR [ebp+0x53]
  40f316:	xor    BYTE PTR [eax],al
  40f318:	sub    eax,0xc075d1d9
  40f31d:	cmc    
  40f31e:	cmp    BYTE PTR [edx+0x1425bf5c],bl
  40f324:	or     DWORD PTR [ecx-0xd2b65f0],eax
  40f32a:	mov    al,ds:0xc305a5b5
  40f32f:	and    BYTE PTR [ebx],ah
  40f331:	test   al,0x4a
  40f333:	loop   0x40f2d6
  40f335:	pop    ds
  40f336:	jbe    0x40f391
  40f338:	stos   DWORD PTR es:[edi],eax
  40f339:	inc    edi
  40f33a:	jg     0x40f388
  40f33c:	in     al,dx
  40f33d:	pop    eax
  40f33e:	sbb    BYTE PTR [esi+0x3abd3476],bh
  40f344:	ffree  st(1)
  40f346:	dec    edx
  40f347:	and    DWORD PTR [esi+ecx*1+0x6dc02d0d],ecx
  40f34e:	outs   dx,BYTE PTR ds:[esi]
  40f34f:	popa   
  40f350:	(bad)  
  40f351:	mov    ebp,0x1cf291e7
  40f356:	jns    0x40f3bb
  40f358:	dec    esp
  40f359:	mov    edx,0xac6597fa
  40f35e:	mov    al,0xc3
  40f360:	xchg   esi,eax
  40f361:	cmp    dh,BYTE PTR [edi+esi*8]
  40f364:	jbe    0x40f3c8
  40f366:	inc    ecx
  40f367:	test   DWORD PTR [edi+0xb5c2bf9],ecx
  40f36d:	mov    gs,WORD PTR [ebx+0x189c16d7]
  40f373:	push   esp
  40f374:	pop    ebp
  40f375:	sub    al,BYTE PTR [esi+0x40f7059b]
  40f37b:	scas   al,BYTE PTR es:[edi]
  40f37c:	mov    al,ds:0x2e916536
  40f381:	pushf  
  40f382:	test   BYTE PTR [eax+ecx*1+0x28],dl
  40f386:	daa    
  40f387:	push   esp
  40f388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f389:	sets   BYTE PTR [esi]
  40f38c:	(bad)  
  40f38d:	jl     0x40f3a4
  40f38f:	cdq    
  40f390:	pushf  
  40f391:	popf   
  40f392:	and    al,0x46
  40f394:	fstp   DWORD PTR [edx+0x43a95361]
  40f39a:	jmp    0x97b64422
  40f39f:	arpl   WORD PTR [edi+eiz*2],ax
  40f3a2:	(bad)  
  40f3a3:	(bad)  
  40f3a4:	ds xchg ecx,eax
  40f3a6:	cwde   
  40f3a7:	jge    0x40f423
  40f3a9:	lock pop ecx
  40f3ab:	xchg   edx,eax
  40f3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ad:	mov    al,ds:0x9e3799df
  40f3b2:	div    DWORD PTR [ecx+ebp*1]
  40f3b5:	js     0x40f3fd
  40f3b7:	adc    esp,DWORD PTR [eax]
  40f3b9:	inc    edi
  40f3ba:	imul   ebx,DWORD PTR [edx+0x55],0xffffffb5
  40f3be:	loopne 0x40f39b
  40f3c0:	sbb    dh,BYTE PTR [ecx-0x75]
  40f3c3:	xlat   BYTE PTR ds:[ebx]
  40f3c4:	shr    DWORD PTR [ebx-0x28],0xee
  40f3c8:	(bad)  
  40f3c9:	call   0xc959:0x11003069
  40f3d0:	or     BYTE PTR [edx],bl
  40f3d2:	push   0xffffffbe
  40f3d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3d5:	arpl   cx,bx
  40f3d7:	shr    BYTE PTR [esi],cl
  40f3d9:	xor    ecx,DWORD PTR [edx]
  40f3db:	inc    ebp
  40f3dc:	outs   dx,BYTE PTR ds:[esi]
  40f3dd:	ds icebp 
  40f3df:	sub    DWORD PTR [esi+0x5289432b],0x76
  40f3e6:	xchg   edi,eax
  40f3e7:	and    DWORD PTR [eax+0x48],ebx
  40f3ea:	repz bound ecx,QWORD PTR [esi+0x43c48a74]
  40f3f1:	xchg   esi,eax
  40f3f2:	inc    ebp
  40f3f3:	imul   BYTE PTR [ebp+0x30e51675]
  40f3f9:	pop    ds
  40f3fa:	test   al,0xae
  40f3fc:	inc    edi
  40f3fd:	and    eax,0x1c1214e2
  40f402:	into   
  40f403:	or     BYTE PTR [edi+0x34],dh
  40f406:	fs mov dl,0x93
  40f409:	stc    
  40f40a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40b:	inc    eax
  40f40c:	add    eax,DWORD PTR [esi+0x31]
  40f40f:	mov    cl,0xfa
  40f411:	or     al,0x10
  40f413:	clc    
  40f414:	cmp    eax,0x8a576619
  40f419:	call   0x4b6c:0x3eebcbe1
  40f420:	push   edx
  40f421:	imul   edx
  40f423:	out    0xe0,eax
  40f425:	and    BYTE PTR [ebp+0x327b5ddc],dh
  40f42b:	xor    al,BYTE PTR [edi+0x5]
  40f42e:	pop    ecx
  40f42f:	and    al,0x42
  40f431:	jle    0x40f429
  40f433:	jp     0x40f3f5
  40f435:	ror    BYTE PTR [esi+0xc],0x56
  40f439:	repnz sbb DWORD PTR [edi],esi
  40f43c:	rcr    DWORD PTR [edx+0x5c],cl
  40f43f:	js     0x40f474
  40f441:	das    
  40f442:	and    eax,0x81c963d3
  40f447:	cmp    DWORD PTR [ebx-0x66],edx
  40f44a:	jecxz  0x40f3db
  40f44c:	push   esp
  40f44d:	jb     0x40f3eb
  40f44f:	stos   BYTE PTR es:[edi],al
  40f450:	mov    edx,0x67350751
  40f455:	imul   ecx,esi,0x8b6ac1e2
  40f45b:	sub    BYTE PTR [ecx+0x2a668890],cl
  40f461:	xlat   BYTE PTR ds:[ebx]
  40f462:	js     0x40f4cb
  40f464:	inc    ecx
  40f465:	fs adc al,ch
  40f468:	jae    0x40f496
  40f46a:	(bad)  [edi]
  40f46c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f46d:	adc    BYTE PTR [ecx+0x4a4ee2fc],dh
  40f473:	sub    DWORD PTR [ecx+0x43],ecx
  40f476:	add    bh,dh
  40f478:	mov    ebp,0x46938061
  40f47d:	rcr    eax,cl
  40f47f:	xchg   bl,ch
  40f481:	inc    ecx
  40f482:	nop
  40f483:	jg     0x40f4e6
  40f485:	mov    edx,0xfab29f7a
  40f48a:	arpl   WORD PTR [ebx],bp
  40f48c:	scas   eax,DWORD PTR es:[edi]
  40f48d:	ins    BYTE PTR es:[edi],dx
  40f48e:	stos   BYTE PTR es:[edi],al
  40f48f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f490:	or     BYTE PTR [ebx+0x16],dh
  40f493:	loop   0x40f428
  40f495:	(bad)  
  40f496:	mov    ebp,0xe36591d
  40f49b:	or     eax,0xaa62372d
  40f4a0:	call   0xe046bd50
  40f4a5:	xchg   edi,eax
  40f4a6:	mov    edx,0x2069e862
  40f4ab:	outs   dx,BYTE PTR ds:[esi]
  40f4ac:	fcomip st,st(2)
  40f4ae:	addr16 mov bh,0x38
  40f4b1:	clc    
  40f4b2:	out    0xee,al
  40f4b4:	inc    edi
  40f4b5:	mov    eax,ds:0x78493e88
  40f4ba:	mov    dl,0xc9
  40f4bc:	sbb    BYTE PTR [ecx-0x6f5f5134],dh
  40f4c2:	jns    0x40f4d6
  40f4c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4c5:	jecxz  0x40f498
  40f4c7:	sub    DWORD PTR [eax-0x13e47f81],0xffffffee
  40f4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d0:	cmp    al,BYTE PTR [edx]
  40f4d2:	jge    0x40f51f
  40f4d4:	mov    ds,edx
  40f4d6:	hlt    
  40f4d7:	lock pop ebx
  40f4d9:	out    0x3e,al
  40f4db:	das    
  40f4dc:	lods   al,BYTE PTR ds:[esi]
  40f4dd:	icebp  
  40f4de:	jo     0x40f4d6
  40f4e0:	fs jne 0x40f4b2
  40f4e3:	dec    edi
  40f4e4:	adc    al,0x49
  40f4e6:	dec    ebp
  40f4e7:	xchg   ebx,eax
  40f4e8:	and    al,0x18
  40f4ea:	jo     0x40f531
  40f4ec:	xlat   BYTE PTR ds:[ebx]
  40f4ed:	hlt    
  40f4ee:	stos   DWORD PTR es:[edi],eax
  40f4ef:	rcl    dh,cl
  40f4f1:	lods   eax,DWORD PTR ds:[esi]
  40f4f2:	test   dl,bh
  40f4f4:	sub    ecx,DWORD PTR [ebx]
  40f4f6:	popa   
  40f4f7:	into   
  40f4f8:	sti    
  40f4f9:	jb     0x40f552
  40f4fb:	add    DWORD PTR [edi+0x276d1f42],eax
  40f501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f502:	lock xor BYTE PTR [edx+0x3d26239a],dl
  40f509:	xchg   esi,eax
  40f50a:	xchg   edi,eax
  40f50b:	xchg   esp,eax
  40f50c:	les    esi,FWORD PTR [ecx]
  40f50e:	xor    eax,0xdf091649
  40f513:	mov    dl,0x13
  40f515:	sbb    eax,0xc8574c0e
  40f51a:	icebp  
  40f51b:	inc    ecx
  40f51c:	xor    esp,DWORD PTR [ebp+0x631c3df7]
  40f522:	sub    eax,DWORD PTR [eax]
  40f524:	adc    DWORD PTR [edi+0x44],0xffffffcb
  40f528:	mov    dl,0x9
  40f52a:	call   0xc93f86a1
  40f52f:	sbb    BYTE PTR [edi+ebx*8-0x69bc188f],bl
  40f536:	sub    edi,DWORD PTR [ebp-0x41]
  40f539:	test   DWORD PTR [esi-0x5b132bfe],0x90f7c5a5
  40f543:	rol    BYTE PTR [edi-0x75d79e28],0x35
  40f54a:	sub    ebx,DWORD PTR [ebx]
  40f54c:	sbb    DWORD PTR [ebp-0xb52507a],0xffffffea
  40f553:	pop    ebx
  40f554:	inc    esp
  40f555:	je     0x40f5ca
  40f557:	and    BYTE PTR [edi-0x3a],dh
  40f55a:	cdq    
  40f55b:	orps   xmm3,XMMWORD PTR [ebp-0x5176532d]
  40f562:	sub    al,0xeb
  40f564:	clc    
  40f565:	and    ch,ch
  40f567:	sbb    eax,0x99f8673d
  40f56c:	or     edx,esi
  40f56e:	pop    esi
  40f56f:	out    0x88,al
  40f571:	fwait
  40f572:	(bad)  
  40f573:	stc    
  40f574:	scas   al,BYTE PTR es:[edi]
  40f575:	pusha  
  40f576:	push   0x5a
  40f578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f579:	in     eax,dx
  40f57a:	or     DWORD PTR [ebx],edi
  40f57c:	in     al,0x90
  40f57e:	inc    edi
  40f57f:	add    DWORD PTR [ebp-0x4e],esp
  40f582:	mov    ecx,0xaeecdb9
  40f587:	ret    0x9dbd
  40f58a:	es push cs
  40f58c:	add    eax,0xffb3018c
  40f591:	adc    BYTE PTR gs:[ecx+edx*4],bl
  40f595:	in     eax,dx
  40f596:	cs dec eax
  40f598:	loopne 0x40f5a7
  40f59a:	call   0x29ae5be0
  40f59f:	push   ebp
  40f5a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5a1:	pop    esi
  40f5a2:	jg     0x40f5ba
  40f5a4:	out    0x43,eax
  40f5a6:	adc    BYTE PTR ds:0x3fe35d63,dh
  40f5ac:	xor    BYTE PTR [edi+ebx*4+0x4d],cl
  40f5b0:	lds    ebp,FWORD PTR [ebx+0x711ec692]
  40f5b6:	cli    
  40f5b7:	push   cs
  40f5b8:	in     eax,0x7
  40f5ba:	dec    ebx
  40f5bb:	adc    al,0x4f
  40f5bd:	jns    0x40f63c
  40f5bf:	mov    esi,0x43f8a3d9
  40f5c4:	adc    esi,DWORD PTR [ecx+0x46]
  40f5c7:	sub    ebx,ebp
  40f5c9:	mov    bh,0xfc
  40f5cb:	xor    dh,BYTE PTR [esi-0x78]
  40f5ce:	js     0x40f593
  40f5d0:	pop    esp
  40f5d1:	mov    eax,ds:0x9b538858
  40f5d6:	or     al,0xf8
  40f5d8:	out    0x6b,eax
  40f5da:	inc    ebx
  40f5db:	pop    ebp
  40f5dc:	fiadd  DWORD PTR [esi-0xd]
  40f5df:	test   DWORD PTR [ebx-0x7e91dfc4],esi
  40f5e5:	push   cs
  40f5e6:	jb     0x40f60c
  40f5e8:	xchg   ebx,eax
  40f5e9:	inc    ebx
  40f5ea:	push   cs
  40f5eb:	add    ah,0x4
  40f5ee:	jl     0x40f5ec
  40f5f0:	cmp    edx,DWORD PTR [ecx+0xe]
  40f5f3:	ja     0x40f5f4
  40f5f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5f7:	retf   0x5363
  40f5fa:	(bad)  
  40f5fb:	stc    
  40f5fc:	popf   
  40f5fd:	sahf   
  40f5fe:	push   eax
  40f5ff:	pop    edi
  40f600:	outs   dx,DWORD PTR ds:[esi]
  40f601:	dec    edi
  40f602:	out    0x9,eax
  40f604:	mov    edx,0x9f995123
  40f609:	cmp    esp,DWORD PTR ds:0x34f59979
  40f60f:	push   ss
  40f610:	push   0xffffffdf
  40f612:	sub    al,0x29
  40f614:	mov    DWORD PTR [ebx],edi
  40f616:	in     eax,0x54
  40f618:	nop
  40f619:	pushf  
  40f61a:	or     BYTE PTR [edx-0x637efaf5],cl
  40f620:	in     al,dx
  40f621:	outs   dx,BYTE PTR ds:[esi]
  40f622:	or     BYTE PTR [edi+0x2bda2094],bl
  40f628:	xor    eax,0xebb98cdd
  40f62d:	inc    ebx
  40f62e:	mov    edi,0xe863b9fa
  40f633:	shr    DWORD PTR [eax],1
  40f635:	pusha  
  40f636:	sub    dh,dl
  40f638:	mov    ecx,0xcb2cf8cf
  40f63d:	mov    eax,ds:0x3c39ed7d
  40f642:	hlt    
  40f643:	repz je 0x40f605
  40f646:	xor    edi,DWORD PTR [ebx+0x56abe6]
  40f64c:	jmp    0x7b50d39b
  40f651:	push   ss
  40f652:	sub    BYTE PTR [esi+0x27],dl
  40f655:	dec    ecx
  40f656:	ins    BYTE PTR es:[edi],dx
  40f657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f658:	mov    eax,DWORD PTR [ecx]
  40f65a:	out    0xe2,eax
  40f65c:	mov    WORD PTR [edi],?
  40f65e:	dec    edi
  40f65f:	cmp    DWORD PTR [esi],esi
  40f661:	pop    ss
  40f662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f663:	sbb    dl,BYTE PTR [esi+0x599a6e31]
  40f669:	xor    DWORD PTR [ebx+edi*1+0x45],0xffffffd1
  40f66e:	pop    ss
  40f66f:	jns    0x40f606
  40f671:	fcomp  DWORD PTR [esi+0x404f30bd]
  40f677:	adc    bl,0xb6
  40f67a:	lods   eax,DWORD PTR ds:[esi]
  40f67b:	std    
  40f67c:	and    al,0x20
  40f67e:	inc    esp
  40f67f:	mov    cl,dl
  40f681:	jo     0x40f652
  40f683:	push   ecx
  40f684:	pop    ebp
  40f685:	fcomip st,st(7)
  40f687:	sub    ah,dl
  40f689:	setno  BYTE PTR [ebx+0x5cb81acd]
  40f690:	mov    ds:0x7d21b46b,eax
  40f695:	dec    ebp
  40f696:	and    eax,0x162a9b4e
  40f69b:	loope  0x40f6c7
  40f69d:	xchg   ebx,eax
  40f69e:	jmp    0xbe56e8fc
  40f6a3:	mov    al,ds:0xff626100
  40f6a8:	rcl    BYTE PTR [edx+0x5b213a1f],0x8a
  40f6af:	and    eax,DWORD PTR [edx+0x48]
  40f6b2:	repz mov ds:0xaefd2750,eax
  40f6b8:	pop    edx
  40f6b9:	sti    
  40f6ba:	icebp  
  40f6bb:	and    DWORD PTR ds:0x400fe6a4,ebp
  40f6c1:	lahf   
  40f6c2:	add    al,0x71
  40f6c4:	or     BYTE PTR [ecx],ch
  40f6c6:	cmp    BYTE PTR [esi+ebp*4-0xe],bh
  40f6ca:	mov    dl,0x8
  40f6cc:	das    
  40f6cd:	pop    ss
  40f6ce:	std    
  40f6cf:	imul   esp,DWORD PTR [eax-0x47],0x271c068c
  40f6d6:	mov    bl,0xc6
  40f6d8:	jae    0x40f703
  40f6da:	add    BYTE PTR [ebx-0x3ae66921],0x7c
  40f6e1:	inc    ebx
  40f6e2:	mov    ah,0x25
  40f6e4:	enter  0x46d9,0xbd
  40f6e8:	mov    esp,ecx
  40f6ea:	xlat   BYTE PTR ds:[ebx]
  40f6eb:	inc    ebp
  40f6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6ed:	mov    ds:0x4cae27f5,al
  40f6f2:	aaa    
  40f6f3:	xor    bl,al
  40f6f5:	xchg   edx,eax
  40f6f6:	dec    ebx
  40f6f7:	xchg   ebx,eax
  40f6f8:	cmp    eax,esi
  40f6fa:	arpl   WORD PTR [ebp-0x17a92fde],bx
  40f700:	mov    ch,0xd2
  40f702:	test   eax,0x993a92e
  40f707:	add    DWORD PTR [ebp+0x21],ecx
  40f70a:	iret   
  40f70b:	je     0x40f70c
  40f70d:	sub    ebx,edx
  40f70f:	mov    BYTE PTR [eax-0x20],0xc3
  40f713:	adc    dh,BYTE PTR [edi+0x37]
  40f716:	cmp    al,bh
  40f718:	mov    WORD PTR [ecx-0x1a26266f],cs
  40f71e:	adc    ebp,DWORD PTR [ebx]
  40f720:	mov    ecx,0xe23f9c1
  40f725:	out    0xef,al
  40f727:	in     eax,dx
  40f728:	or     BYTE PTR [edx+0x1a],dl
  40f72b:	stos   DWORD PTR es:[edi],eax
  40f72c:	jge    0x40f6df
  40f72e:	les    edx,FWORD PTR [edi]
  40f730:	jg     0x40f7a4
  40f732:	retf   
  40f733:	mov    eax,ds:0xe1961f50
  40f738:	shl    ah,cl
  40f73a:	and    ah,BYTE PTR [edx+0x6b]
  40f73d:	or     al,0x6f
  40f73f:	fisub  WORD PTR [bp+si+0x6e37]
  40f744:	jbe    0x40f7bf
  40f746:	add    al,0x7d
  40f748:	inc    esi
  40f749:	pop    ds
  40f74a:	mov    dl,0x4b
  40f74c:	jb     0x40f712
  40f74e:	cmp    BYTE PTR [eax+0x46194c1a],cl
  40f754:	push   es
  40f755:	sub    eax,0xf9ad8a97
  40f75a:	inc    eax
  40f75b:	push   ecx
  40f75c:	addr16 jne 0x40f7b9
  40f75f:	in     al,0xc5
  40f761:	jno    0x40f7a1
  40f763:	ins    BYTE PTR es:[edi],dx
  40f764:	leave  
  40f765:	leave  
  40f766:	jb     0x40f77f
  40f768:	gs addr16 xchg edx,eax
  40f76b:	jnp    0x40f788
  40f76d:	mov    bh,BYTE PTR [edi]
  40f76f:	aaa    
  40f770:	xchg   edi,esp
  40f772:	ficom  DWORD PTR [edx-0x6c]
  40f775:	js     0x40f790
  40f777:	test   BYTE PTR [ebx],0xec
  40f77a:	ins    DWORD PTR es:[edi],dx
  40f77b:	call   FWORD PTR [esi+eiz*8+0x451d5be8]
  40f782:	es addr16 call 0x50e7:0xfb8000ae
  40f78b:	les    edx,FWORD PTR [ecx-0x4b]
  40f78e:	xchg   edi,eax
  40f78f:	loopne 0x40f7ad
  40f791:	xor    ebp,DWORD PTR [ecx+0x9548869]
  40f797:	out    0xc,al
  40f799:	mov    ah,0xc0
  40f79b:	xchg   ebp,eax
  40f79c:	sbb    bl,ah
  40f79e:	and    ah,cl
  40f7a0:	pop    ds
  40f7a1:	adc    eax,0xfeb0fb68
  40f7a6:	xor    eax,0x8550509b
  40f7ab:	test   al,0x56
  40f7ad:	aam    0xd4
  40f7af:	cld    
  40f7b0:	cmp    dl,BYTE PTR [eax+0x4f9d3c55]
  40f7b6:	sub    al,0xae
  40f7b8:	mov    ebp,0xe5f21d22
  40f7bd:	repnz or BYTE PTR [eax],cl
  40f7c0:	push   0x84d01365
  40f7c5:	arpl   WORD PTR ds:0xce90a7dc,sp
  40f7cb:	mov    eax,ds:0x25dd0a24
  40f7d0:	bound  edx,QWORD PTR [eax-0x63f25878]
  40f7d6:	push   DWORD PTR [edi+0x327739a]
  40f7dc:	enter  0x7bbf,0x61
  40f7e0:	and    esp,ebp
  40f7e2:	mov    dh,0xf
  40f7e4:	out    dx,eax
  40f7e5:	and    BYTE PTR [ebx-0x43],dl
  40f7e8:	pop    esi
  40f7e9:	loopne 0x40f797
  40f7eb:	pop    ebx
  40f7ec:	out    0x39,al
  40f7ee:	add    ecx,esp
  40f7f0:	shl    DWORD PTR [esi+0x66dca0f1],1
  40f7f6:	fwait
  40f7f7:	sahf   
  40f7f8:	push   eax
  40f7f9:	daa    
  40f7fa:	outs   dx,DWORD PTR ds:[esi]
  40f7fb:	adc    BYTE PTR [edx+0x76],dh
  40f7fe:	imul   eax,DWORD PTR [eax-0x75],0xe405b10d
  40f805:	mov    edx,0x3757ea8b
  40f80a:	and    edi,DWORD PTR [ecx-0x24]
  40f80d:	retf   0x9882
  40f810:	push   ebp
  40f811:	inc    esp
  40f812:	in     eax,dx
  40f813:	xchg   ebp,eax
  40f814:	push   0x407e62ce
  40f819:	ins    DWORD PTR es:[edi],dx
  40f81a:	sub    eax,0x74f1d98b
  40f81f:	dec    ecx
  40f820:	stos   DWORD PTR es:[edi],eax
  40f821:	mov    al,ds:0xf1363ecc
  40f826:	stc    
  40f827:	add    al,0xba
  40f829:	mov    ds:0xf3793979,al
  40f82e:	ins    BYTE PTR es:[edi],dx
  40f82f:	nop
  40f830:	ins    DWORD PTR es:[edi],dx
  40f831:	mov    WORD PTR [ecx],ss
  40f833:	adc    BYTE PTR [eax-0x4c],bl
  40f836:	jnp    0x40f858
  40f838:	in     eax,dx
  40f839:	div    BYTE PTR [edx]
  40f83b:	sub    DWORD PTR [ebp-0x7f],edi
  40f83e:	scas   eax,DWORD PTR es:[edi]
  40f83f:	push   es
  40f840:	daa    
  40f841:	sbb    DWORD PTR [edi],esi
  40f843:	repz mov ebp,0x3ba31ea6
  40f849:	in     al,0x4e
  40f84b:	jae    0x40f889
  40f84d:	shr    bl,1
  40f84f:	lds    edi,FWORD PTR [ebx+0x6db87cf2]
  40f855:	cmc    
  40f856:	mov    ch,0x74
  40f858:	aas    
  40f859:	dec    ecx
  40f85a:	pop    esp
  40f85b:	ficomp DWORD PTR fs:[eax-0x72]
  40f85f:	out    0xc8,al
  40f861:	xor    esi,DWORD PTR [ebp-0x58]
  40f864:	pop    ebp
  40f865:	xchg   edx,eax
  40f866:	mov    esp,0xea1b4242
  40f86b:	inc    ecx
  40f86c:	and    al,0x1e
  40f86e:	inc    ebp
  40f86f:	xchg   BYTE PTR [esi+0x552e88f2],ch
  40f875:	xchg   esi,eax
  40f876:	arpl   WORD PTR [ebp+0x60f01f1b],sp
  40f87c:	or     dh,BYTE PTR [ebx+0x2d]
  40f87f:	mov    es,WORD PTR [ebp+0x63]
  40f882:	into   
  40f883:	ja     0x40f8d5
  40f885:	dec    ebp
  40f886:	stos   BYTE PTR es:[edi],al
  40f887:	jg     0x40f8ca
  40f889:	cwde   
  40f88a:	ins    DWORD PTR es:[edi],dx
  40f88b:	mov    dh,0x54
  40f88d:	pusha  
  40f88e:	mov    ch,0x82
  40f890:	mov    WORD PTR [eax],ss
  40f892:	pop    ss
  40f893:	mov    ds:0x669f6ea7,al
  40f898:	iret   
  40f899:	add    DWORD PTR ds:0xdf523a8e,esp
  40f89f:	les    ebp,FWORD PTR [edi-0x7f]
  40f8a2:	dec    ecx
  40f8a3:	cmp    dh,BYTE PTR [edi]
  40f8a5:	(bad)  
  40f8a6:	adc    al,0x98
  40f8a8:	nop
  40f8a9:	jge    0x40f83c
  40f8ab:	ss cmp ecx,ebx
  40f8ae:	cmp    bh,dl
  40f8b0:	sar    esp,1
  40f8b2:	cmp    al,cl
  40f8b4:	sub    ecx,edx
  40f8b6:	mov    WORD PTR [esi+eiz*8+0x54],es
  40f8ba:	dec    esi
  40f8bb:	mov    bl,0x60
  40f8bd:	or     dl,0x4e
  40f8c0:	push   ds
  40f8c1:	fisubr DWORD PTR [edx-0x67]
  40f8c4:	xchg   esi,eax
  40f8c5:	cwde   
  40f8c6:	shr    DWORD PTR [edx-0x3ac40408],0x79
  40f8cd:	jge    0x40f8c5
  40f8cf:	test   BYTE PTR [esi-0x74],bl
  40f8d2:	outs   dx,DWORD PTR ds:[esi]
  40f8d3:	mov    ch,0xee
  40f8d5:	mov    fs,ebx
  40f8d7:	in     eax,0x99
  40f8d9:	xchg   ebp,eax
  40f8da:	repz add eax,ecx
  40f8dd:	mov    dl,0x15
  40f8df:	jge    0x40f956
  40f8e1:	xor    bh,BYTE PTR [ecx-0x7bd3f09]
  40f8e7:	pop    ecx
  40f8e8:	sbb    esi,edx
  40f8ea:	jnp    0x40f934
  40f8ec:	sar    BYTE PTR [eax-0x178ae007],cl
  40f8f2:	jno    0x40f942
  40f8f4:	fidivr WORD PTR [eax-0x57555c3d]
  40f8fa:	lods   eax,DWORD PTR ds:[esi]
  40f8fb:	pop    es
  40f8fc:	mov    WORD PTR [edx],ss
  40f8fe:	jl     0x40f964
  40f900:	dec    eax
  40f901:	nop
  40f902:	dec    esi
  40f903:	or     BYTE PTR [esi+0x53bc6455],dl
  40f909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f90a:	mov    ecx,0x55db0375
  40f90f:	or     BYTE PTR [ecx-0x7aa86112],bh
  40f915:	mov    ds:0xdaa89fe9,al
  40f91a:	aad    0x2c
  40f91c:	imul   BYTE PTR [eax-0x70c3fa8d]
  40f922:	in     al,dx
  40f923:	sbb    BYTE PTR ds:0x11f272cc,ch
  40f929:	shr    DWORD PTR [edi],cl
  40f92b:	cmp    ecx,edx
  40f92d:	scas   al,BYTE PTR es:[edi]
  40f92e:	cmp    eax,0xcd2aa15a
  40f933:	mov    al,ds:0xe6fb979c
  40f938:	retf   0x7ea8
  40f93b:	pop    esi
  40f93c:	jnp    0x40f956
  40f93e:	out    dx,al
  40f93f:	and    DWORD PTR [ecx+0x7404c2a0],edx
  40f945:	sbb    BYTE PTR [edi+0x2cdacd2d],0x2d
  40f94c:	addr16 xor al,0x99
  40f94f:	push   ecx
  40f950:	inc    edi
  40f951:	and    eax,0xda57f423
  40f956:	xchg   esi,eax
  40f957:	add    eax,0x94a47aa7
  40f95c:	cwde   
  40f95d:	adc    al,0xe7
  40f95f:	or     DWORD PTR [edi-0x4],ecx
  40f962:	dec    ecx
  40f963:	cmp    bl,dl
  40f965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f966:	push   esi
  40f967:	mov    BYTE PTR [ebp+0x14541796],dl
  40f96d:	inc    esp
  40f96e:	mov    esp,0x8488ebf9
  40f973:	mov    esp,0x5e7ab9d6
  40f978:	das    
  40f979:	cdq    
  40f97a:	inc    eax
  40f97b:	out    dx,al
  40f97c:	mov    ebp,0xa79cd5ff
  40f981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f982:	xchg   BYTE PTR [ecx-0x10dd7dc7],dh
  40f988:	clc    
  40f989:	icebp  
  40f98a:	adc    al,al
  40f98c:	inc    eax
  40f98d:	xchg   esi,eax
  40f98e:	jecxz  0x40fa0e
  40f990:	stos   BYTE PTR es:[edi],al
  40f991:	cmp    eax,0x65aa0100
  40f996:	adc    BYTE PTR [edi+ebp*4+0x69],al
  40f99a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f99b:	mov    bl,BYTE PTR fs:[edx]
  40f99e:	loopne 0x40f979
  40f9a0:	setl   al
  40f9a3:	sbb    BYTE PTR ds:0x6f9cfb35,ch
  40f9a9:	dec    eax
  40f9aa:	out    0xab,eax
  40f9ac:	mov    dh,0xd9
  40f9ae:	cmp    BYTE PTR [esi-0x4c],cl
  40f9b1:	or     dh,BYTE PTR [eax-0x21703ed1]
  40f9b7:	mov    bl,0x4d
  40f9b9:	in     al,0x6c
  40f9bb:	loope  0x40fa30
  40f9bd:	ins    BYTE PTR es:[edi],dx
  40f9be:	repnz fisttp DWORD PTR [edi-0x3843889c]
  40f9c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9c6:	je     0x40f97e
  40f9c8:	stos   DWORD PTR es:[edi],eax
  40f9c9:	cmp    al,0x21
  40f9cb:	cld    
  40f9cc:	sbb    DWORD PTR [ecx+0x37],eax
  40f9cf:	add    DWORD PTR [edi-0x14],edi
  40f9d2:	sub    esi,DWORD PTR [edi]
  40f9d4:	sbb    dh,dl
  40f9d6:	and    esi,DWORD PTR [ecx]
  40f9d8:	mov    al,ds:0x89be5ad7
  40f9dd:	inc    ebx
  40f9de:	fdiv   QWORD PTR [esi+0x2d0491be]
  40f9e4:	retf   
  40f9e5:	adc    eax,0xec3bad5a
  40f9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9eb:	sub    DWORD PTR [ebp+0x76f0d040],ebp
  40f9f1:	repz clc 
  40f9f3:	push   ebx
  40f9f4:	inc    ebx
  40f9f5:	imul   eax,edi,0x3997da73
  40f9fb:	push   es
  40f9fc:	xchg   ecx,eax
  40f9fd:	push   0xbdc95e97
  40fa02:	push   ebp
  40fa03:	mov    gs,WORD PTR [eax-0x3a]
  40fa06:	cli    
  40fa07:	and    BYTE PTR [esi],cl
  40fa09:	add    BYTE PTR [edx+0x77],bh
  40fa0c:	push   ds
  40fa0d:	(bad)  
  40fa0e:	jmp    0x9824:0xdf71167c
  40fa15:	aad    0x3a
  40fa17:	add    DWORD PTR [ebx+0x2d],esi
  40fa1a:	jne    0x40fa40
  40fa1c:	ss xchg edx,eax
  40fa1e:	ds ret 
  40fa20:	add    bh,BYTE PTR [edx+esi*8+0x48]
  40fa24:	sti    
  40fa25:	jmp    0x40f9d8
  40fa27:	test   DWORD PTR [ebp+eiz*1-0x4dc00b94],esi
  40fa2e:	pop    ecx
  40fa2f:	aaa    
  40fa30:	(bad)  
  40fa31:	push   esp
  40fa32:	test   DWORD PTR [esi-0x22d6fda1],ebp
  40fa38:	xchg   ebx,eax
  40fa39:	sbb    edx,DWORD PTR [ebx+edi*2]
  40fa3c:	mov    esi,0xb3c9727a
  40fa41:	jae    0x40fa00
  40fa43:	sub    dl,BYTE PTR [ebp+0x37]
  40fa46:	fs jns 0x40fa31
  40fa49:	xor    eax,0x4370a961
  40fa4e:	in     eax,dx
  40fa4f:	outs   dx,BYTE PTR ds:[esi]
  40fa50:	xchg   ebp,eax
  40fa51:	adc    dh,ah
  40fa53:	js     0x40f9d8
  40fa55:	mov    al,ds:0x81e3d43
  40fa5a:	adc    esp,DWORD PTR [edx]
  40fa5c:	inc    edi
  40fa5d:	ins    DWORD PTR es:[edi],dx
  40fa5e:	sar    bl,cl
  40fa60:	test   al,0x71
  40fa62:	add    eax,0x7bd624df
  40fa67:	jne    0x40fa58
  40fa69:	retf   0xe11c
  40fa6c:	pop    edx
  40fa6d:	and    eax,0xc46825d9
  40fa72:	inc    esp
  40fa73:	pop    esi
  40fa74:	cs push ebx
  40fa76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa77:	mul    BYTE PTR [ebp+0x567dcb08]
  40fa7d:	(bad)  
  40fa7e:	iret   
  40fa7f:	leave  
  40fa80:	pop    edi
  40fa81:	(bad)  
  40fa82:	retf   0x4f19
  40fa85:	or     eax,esi
  40fa87:	jmp    0x40fa7c
  40fa89:	test   DWORD PTR [ebp+0x3b710c3e],edx
  40fa8f:	add    BYTE PTR [ebp+ecx*2-0x10ddc447],cl
  40fa96:	test   edx,ebx
  40fa98:	js     0x40faa6
  40fa9a:	push   ecx
  40fa9b:	xchg   edi,eax
  40fa9c:	mov    ecx,0x4948535a
  40faa1:	fwait
  40faa2:	sub    al,0x18
  40faa4:	(bad)  
  40faa5:	leave  
  40faa6:	mov    esi,0xf7e6aefa
  40faab:	push   ebx
  40faac:	std    
  40faad:	add    BYTE PTR [esi+0x63],0x82
  40fab1:	dec    esi
  40fab2:	inc    ebp
  40fab3:	inc    edx
  40fab4:	push   edx
  40fab5:	jbe    0x40fab5
  40fab7:	mov    bl,BYTE PTR [ebx]
  40fab9:	inc    edi
  40faba:	and    esp,DWORD PTR [esi]
  40fabc:	aaa    
  40fabd:	in     eax,dx
  40fabe:	rcl    BYTE PTR ds:0x60559684,1
  40fac4:	jl     0x40fa9c
  40fac6:	pop    edx
  40fac7:	xor    BYTE PTR ss:[edi],0x45
  40facb:	mul    BYTE PTR [bx]
  40face:	scas   eax,DWORD PTR es:[edi]
  40facf:	lds    ebp,FWORD PTR [edi-0x62]
  40fad2:	and    al,0x25
  40fad4:	ins    DWORD PTR es:[edi],dx
  40fad5:	push   es
  40fad6:	cmp    BYTE PTR [esi],dl
  40fad8:	ret    0x7962
  40fadb:	xor    dh,BYTE PTR [eax]
  40fadd:	aad    0xf8
  40fadf:	loope  0x40fb3a
  40fae1:	sahf   
  40fae2:	sti    
  40fae3:	mov    ds:0xff2dc4d3,eax
  40fae8:	fst    QWORD PTR [eax+0x4e]
  40faeb:	es mov ch,0x7b
  40faee:	pop    esp
  40faef:	test   al,0x6c
  40faf1:	dec    ebx
  40faf2:	mov    ecx,0x7d05880e
  40faf7:	das    
  40faf8:	dec    ebx
  40faf9:	mov    ds:0x405933c5,eax
  40fafe:	xchg   BYTE PTR [ecx],bh
  40fb00:	shr    DWORD PTR [edi-0x4a],0x84
  40fb04:	and    dl,BYTE PTR [ebx+0x34bb7409]
  40fb0a:	in     eax,0x3a
  40fb0c:	mov    esi,0xb89a9571
  40fb11:	out    dx,al
  40fb12:	pop    edx
  40fb13:	stos   BYTE PTR es:[edi],al
  40fb14:	adc    cl,BYTE PTR [edx]
  40fb16:	jno    0x40fad4
  40fb18:	xchg   ebp,eax
  40fb19:	dec    eax
  40fb1a:	sbb    eax,0x3c59f7d7
  40fb1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb20:	pushf  
  40fb21:	xor    BYTE PTR [ebp-0x22],ch
  40fb24:	xor    eax,0x85215a7b
  40fb29:	bound  edx,QWORD PTR [ecx+eiz*8]
  40fb2c:	out    0x76,eax
  40fb2e:	fisubr DWORD PTR [edi-0x41]
  40fb31:	and    al,0xa4
  40fb33:	dec    esp
  40fb34:	jecxz  0x40fae8
  40fb36:	fldcw  WORD PTR [esi+0x3e]
  40fb39:	mov    bh,0x60
  40fb3b:	mov    bl,0x43
  40fb3d:	inc    ebp
  40fb3e:	fist   WORD PTR [ebx-0x1acfa427]
  40fb44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb45:	das    
  40fb46:	fnstcw WORD PTR [eax+0x6df00a3d]
  40fb4c:	or     dl,BYTE PTR [ebp+0x38]
  40fb4f:	(bad)  
  40fb50:	mov    ebp,0x3393fd3d
  40fb55:	adc    DWORD PTR [edx+0x6fa206e8],edi
  40fb5b:	ret    
  40fb5c:	call   0x73855e5
  40fb61:	jmp    0x40fbe0
  40fb63:	add    eax,0x8d052915
  40fb68:	and    ebx,esi
  40fb6a:	inc    esi
  40fb6b:	sbb    DWORD PTR [edi-0x53],esp
  40fb6e:	mov    ebx,0x6722fa9c
  40fb73:	std    
  40fb74:	pusha  
  40fb75:	push   ds
  40fb76:	aam    0x65
  40fb78:	cdq    
  40fb79:	cdq    
  40fb7a:	adc    bh,BYTE PTR [ebp+0x109c96a8]
  40fb80:	fldlg2 
  40fb82:	jmp    0x214f4fd
  40fb87:	and    BYTE PTR [ecx],cl
  40fb89:	mov    bh,0x74
  40fb8b:	cwde   
  40fb8c:	daa    
  40fb8d:	stos   BYTE PTR es:[edi],al
  40fb8e:	jp     0x40fb6b
  40fb90:	jae    0x40fb27
  40fb92:	enter  0x214d,0x2f
  40fb96:	dec    ecx
  40fb97:	mov    al,0x2
  40fb99:	nop
  40fb9a:	push   edi
  40fb9b:	scas   eax,DWORD PTR es:[edi]
  40fb9c:	lods   eax,DWORD PTR ds:[esi]
  40fb9d:	ja     0x40fb34
  40fb9f:	sub    DWORD PTR [eax],edi
  40fba1:	jp     0x40fb9c
  40fba3:	fwait
  40fba4:	adc    BYTE PTR [esi],al
  40fba6:	inc    esp
  40fba7:	ret    
  40fba8:	imul   eax,DWORD PTR [edx],0x1f140993
  40fbae:	dec    edi
  40fbaf:	inc    ecx
  40fbb0:	adc    BYTE PTR [edi+0x4c],dl
  40fbb3:	mov    DWORD PTR [edx],0x60048263
  40fbb9:	push   ecx
  40fbba:	sbb    DWORD PTR [edx+0x1b],esp
  40fbbd:	pop    ds
  40fbbe:	mov    al,0x1f
  40fbc0:	lock imul eax,DWORD PTR [ecx-0x6d781df0],0x868da943
  40fbcb:	lahf   
  40fbcc:	sub    ah,BYTE PTR ds:0xa1ec59e4
  40fbd2:	hlt    
  40fbd3:	inc    edx
  40fbd4:	jp     0x40fc4c
  40fbd6:	icebp  
  40fbd7:	jns    0x40fbc1
  40fbd9:	dec    esp
  40fbda:	add    BYTE PTR [ecx+eiz*8+0x4f],cl
  40fbde:	les    esp,FWORD PTR [eax-0x71e9bf68]
  40fbe4:	jno    0x40fb8b
  40fbe6:	and    al,0xd1
  40fbe8:	lea    esp,[ebp+0x23]
  40fbeb:	push   ebx
  40fbec:	inc    edi
  40fbed:	push   eax
  40fbef:	aas    
  40fbf0:	sub    DWORD PTR [edi+0x75],ecx
  40fbf3:	add    eax,0xb4e892d5
  40fbf8:	fs jo  0x40fbd9
  40fbfb:	mov    ch,0x26
  40fbfd:	xlat   BYTE PTR ds:[ebx]
  40fbfe:	fwait
  40fbff:	test   cl,ah
  40fc01:	mov    ebp,0x6a1de209
  40fc06:	in     eax,dx
  40fc07:	in     al,dx
  40fc08:	popa   
  40fc09:	outs   dx,DWORD PTR ds:[esi]
  40fc0a:	mov    edx,0x34188349
  40fc0f:	push   edi
  40fc10:	push   ds
  40fc11:	push   esi
  40fc12:	sahf   
  40fc13:	push   ss
  40fc14:	rcl    DWORD PTR [edx],1
  40fc16:	xor    BYTE PTR [edx+0x5c3bab0e],dl
  40fc1c:	jge    0x40fc54
  40fc1e:	pop    ecx
  40fc1f:	call   0x91e9:0xb9fa7ff
  40fc26:	adc    cl,BYTE PTR [ecx-0x67f8aa9b]
  40fc2c:	hlt    
  40fc2d:	mov    ebp,0x8cfb2221
  40fc32:	sub    DWORD PTR [edi+0x49],edx
  40fc35:	out    0xa,eax
  40fc37:	scas   eax,DWORD PTR es:[edi]
  40fc38:	mov    dh,0xb2
  40fc3a:	sub    al,0xab
  40fc3c:	int3   
  40fc3d:	mov    WORD PTR [esi+0x5dc90e0a],ds
  40fc43:	jle    0x40fbcb
  40fc45:	outs   dx,BYTE PTR ds:[esi]
  40fc46:	push   edi
  40fc47:	mov    esi,0x2d524e15
  40fc4c:	xchg   DWORD PTR [ebx+0x69c72ddd],edi
  40fc52:	arpl   WORD PTR ss:[eax],sp
  40fc55:	inc    esp
  40fc56:	out    dx,eax
  40fc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc58:	and    bl,BYTE PTR [esi+eax*4-0x7808a73f]
  40fc5f:	mov    ebp,0xc31c6107
  40fc64:	fisttp QWORD PTR [ecx+edi*1+0x66214d40]
  40fc6b:	mov    ebp,0x5124c4db
  40fc70:	sbb    BYTE PTR [eax-0x1],cl
  40fc73:	data16 or ch,BYTE PTR [edx+0x7af1fd54]
  40fc7a:	imul   esp,esp,0x39
  40fc7d:	pusha  
  40fc7e:	pop    esp
  40fc7f:	mov    esi,0x844cab50
  40fc84:	mov    dl,0xab
  40fc86:	jp     0x40fc53
  40fc88:	fidivr WORD PTR [ebx-0x6b]
  40fc8b:	dec    ebx
  40fc8c:	cwde   
  40fc8d:	xchg   DWORD PTR ds:0x839f8dfd,edi
  40fc93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc94:	rol    eax,0x5e
  40fc97:	mov    al,ds:0x79889d05
  40fc9c:	push   ebp
  40fc9d:	fcom   DWORD PTR [eax]
  40fc9f:	iret   
  40fca0:	(bad)  
  40fca1:	mov    esi,0x371951d9
  40fca6:	inc    edx
  40fca7:	add    esi,DWORD PTR [edi]
  40fca9:	in     eax,dx
  40fcaa:	in     al,dx
  40fcab:	or     DWORD PTR [edi],edx
  40fcad:	shr    DWORD PTR [ebx-0x3d20959e],cl
  40fcb3:	popa   
  40fcb4:	xor    esp,ebx
  40fcb6:	push   0xd6b973b0
  40fcbb:	ret    
  40fcbc:	dec    ecx
  40fcbd:	pusha  
  40fcbe:	dec    edx
  40fcbf:	inc    ebx
  40fcc0:	push   cs
  40fcc1:	jns    0x40fcc6
  40fcc3:	scas   eax,DWORD PTR es:[edi]
  40fcc4:	(bad)  
  40fcc5:	adc    eax,0xcc09bd48
  40fcca:	fstp   TBYTE PTR [edx+0x20]
  40fccd:	inc    ebp
  40fcce:	in     al,0x16
  40fcd0:	and    eax,0x14a36f39
  40fcd5:	enter  0x3963,0x44
  40fcd9:	es mov edx,0xb0ec8a00
  40fcdf:	out    dx,eax
  40fce0:	push   ds
  40fce1:	ins    DWORD PTR es:[edi],dx
  40fce2:	fsubr  st,st(5)
  40fce4:	inc    edi
  40fce5:	xlat   BYTE PTR ds:[ebx]
  40fce6:	fisub  WORD PTR [eax-0x7b58c67c]
  40fcec:	shl    DWORD PTR [edi-0x22],cl
  40fcef:	loop   0x40fccc
  40fcf1:	add    BYTE PTR [edx+ebp*2],0x99
  40fcf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf6:	push   0xadc80e13
  40fcfb:	pop    ss
  40fcfc:	jp     0x40fd6d
  40fcfe:	addr16 aad 0xd1
  40fd01:	cmp    al,0x82
  40fd03:	dec    edx
  40fd04:	mov    ch,0x1d
  40fd06:	jno    0x40fd6f
  40fd08:	call   0xff2ba7ea
  40fd0d:	and    DWORD PTR [eax],0x1d
  40fd10:	inc    esi
  40fd11:	adc    BYTE PTR [edi+0x77],ch
  40fd14:	repz mov ch,0x77
  40fd17:	arpl   cx,sp
  40fd19:	in     al,dx
  40fd1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd1b:	or     bh,al
  40fd1d:	shl    DWORD PTR [eax+0x6f],0xa9
  40fd21:	aam    0x3e
  40fd23:	xor    edx,edi
  40fd25:	ret    0x7b77
  40fd28:	fisttp QWORD PTR [eax+0x26f5ddae]
  40fd2e:	mov    ds:0xdf4cdec4,al
  40fd33:	inc    esp
  40fd34:	jae    0x40fcd0
  40fd36:	or     eax,0xa267c37a
  40fd3b:	sbb    dl,dh
  40fd3d:	and    dl,dl
  40fd3f:	rcl    DWORD PTR [esi],cl
  40fd41:	push   edx
  40fd42:	call   0xddd851ed
  40fd47:	in     eax,0xff
  40fd49:	sahf   
  40fd4a:	ret    0x3f3a
  40fd4d:	mov    ch,0xb7
  40fd4f:	mov    ecx,0x51645447
  40fd54:	jns    0x40fcd7
  40fd56:	pop    esi
  40fd57:	add    al,0x80
  40fd59:	add    edi,esi
  40fd5b:	mov    esi,0xc4ed06ba
  40fd60:	lahf   
  40fd61:	xchg   ebx,eax
  40fd62:	ds ins BYTE PTR es:[edi],dx
  40fd64:	in     al,dx
  40fd65:	shl    BYTE PTR [edx+0x25],1
  40fd68:	mov    ebp,0x9d0accab
  40fd6d:	nop
  40fd6e:	repz push 0xffffffb8
  40fd71:	adc    DWORD PTR [edi-0x5d9e4a8d],0x8be543d4
  40fd7b:	bound  esp,QWORD PTR [ebx+0x62f6990]
  40fd81:	into   
  40fd82:	sbb    BYTE PTR [ecx-0x20c9e2bc],bl
  40fd88:	xor    ebp,DWORD PTR [ebp-0xbf44b0]
  40fd8e:	xor    BYTE PTR [edi+esi*1-0x6a],al
  40fd92:	sub    DWORD PTR [edi+0x77],0xffffffe0
  40fd96:	jb     0x40fd5e
  40fd98:	xchg   esp,eax
  40fd99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd9a:	rol    ch,1
  40fd9c:	and    ch,BYTE PTR [ecx+0x4340a9b3]
  40fda2:	sbb    ebp,DWORD PTR [esi+0x46]
  40fda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fda6:	stos   DWORD PTR es:[edi],eax
  40fda7:	data16 mov BYTE PTR [edi-0x202e83c],cl
  40fdae:	ss js  0x40fdea
  40fdb1:	pop    esi
  40fdb2:	cmc    
  40fdb3:	pushf  
  40fdb4:	inc    edi
  40fdb5:	mov    esp,0x31a2b0d
  40fdbb:	pop    edx
  40fdbc:	push   ds
  40fdbd:	jmp    0x40fdf1
  40fdbf:	les    ebx,FWORD PTR [ecx-0x63cb30a]
  40fdc5:	xor    dh,al
  40fdc7:	push   cs
  40fdc8:	scas   eax,DWORD PTR es:[edi]
  40fdc9:	scas   eax,DWORD PTR es:[edi]
  40fdca:	popa   
  40fdcb:	push   eax
  40fdcc:	(bad)  
  40fdce:	and    BYTE PTR gs:[edi],0x7d
  40fdd2:	pop    eax
  40fdd3:	inc    esi
  40fdd4:	mov    BYTE PTR [esi-0x489ebce5],cl
  40fdda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fddb:	xor    bl,BYTE PTR [esi-0x53b3c450]
  40fde1:	int3   
  40fde2:	mov    al,ds:0x95da4bc4
  40fde7:	cmp    BYTE PTR [eax],cl
  40fde9:	jmp    0x3aa734f
  40fdee:	mov    BYTE PTR [esi+0x18],bh
  40fdf1:	push   ebx
  40fdf3:	inc    esi
  40fdf4:	sbb    eax,0x16e2ea7f
  40fdf9:	retf   
  40fdfa:	test   eax,0x3e1ac4f2
  40fdff:	mov    ah,0x3f
  40fe01:	sub    esp,ecx
  40fe03:	popa   
  40fe04:	sbb    BYTE PTR [ebx-0x28c4bfd1],bl
  40fe0a:	adc    bl,BYTE PTR [eax]
  40fe0c:	or     ebp,ebp
  40fe0e:	mov    eax,ds:0x291c55fb
  40fe13:	mov    al,0xc0
  40fe15:	ret    0xccc
  40fe18:	rcr    DWORD PTR ds:0x94006e54,1
  40fe1e:	sbb    dh,BYTE PTR [eax-0x76]
  40fe21:	mov    al,ds:0xbd55b728
  40fe26:	ins    DWORD PTR es:[edi],dx
  40fe27:	cdq    
  40fe28:	or     al,0xc7
  40fe2a:	cmp    eax,0xd3cfa990
  40fe2f:	shr    DWORD PTR [ecx+0x2b],cl
  40fe32:	xchg   ecx,eax
  40fe33:	in     eax,0xd5
  40fe35:	test   BYTE PTR [esi+0xc4d7604],ah
  40fe3b:	mov    DWORD PTR [ebp-0x14],esi
  40fe3e:	js     0x40fe5f
  40fe40:	pop    edi
  40fe41:	mov    ds:0xcc87f09f,eax
  40fe46:	clc    
  40fe47:	dec    eax
  40fe48:	cld    
  40fe49:	and    ebx,ebp
  40fe4b:	sti    
  40fe4c:	test   esi,ebp
  40fe4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe4f:	in     eax,0x4a
  40fe51:	jl     0x40fe50
  40fe53:	mov    DWORD PTR ds:0x13e17a77,0x20529e11
  40fe5d:	inc    ebx
  40fe5e:	enter  0x7280,0x99
  40fe62:	mov    dh,BYTE PTR [ebx-0x3b]
  40fe65:	je     0x40fdf0
  40fe67:	mov    ds:0x51ed0a7e,al
  40fe6c:	fild   DWORD PTR [eax-0x2ddbe4c]
  40fe72:	stos   BYTE PTR es:[edi],al
  40fe73:	jo     0x40fe77
  40fe75:	mov    esi,0x5b8fcb9e
  40fe7a:	xor    bl,0xfc
  40fe7d:	(bad)  [ecx+0x248fafb9]
  40fe83:	hlt    
  40fe84:	scas   eax,DWORD PTR es:[edi]
  40fe85:	mov    ch,0xc6
  40fe87:	les    ecx,FWORD PTR [edx+0x28]
  40fe8a:	mov    edi,0x52d282cf
  40fe8f:	jp     0x40fec2
  40fe91:	push   ss
  40fe92:	stos   BYTE PTR es:[edi],al
  40fe93:	retf   
  40fe94:	jne    0x40fecf
  40fe96:	(bad)  
  40fe98:	js     0x40feea
  40fe9a:	cmp    ch,BYTE PTR [eax-0x4aa48d90]
  40fea0:	mov    edx,0x2fa81465
  40fea5:	add    eax,0xb25d3b0a
  40feaa:	jp     0x40fe64
  40feac:	or     al,0x7e
  40feae:	push   eax
  40feaf:	push   ebx
  40feb0:	es pop eax
  40feb2:	lea    ebx,[ebx+0x3a4270c7]
  40feb8:	fisub  DWORD PTR [edi+0x6affcf8a]
  40febe:	repz pushf 
  40fec0:	cmp    BYTE PTR [ebx+0x50],0x63
  40fec4:	adc    BYTE PTR [eax+ebx*8-0x6df77dc2],ch
  40fecb:	pop    es
  40fecc:	lea    esi,[eax+ebx*1+0x7b96e196]
  40fed3:	test   ah,dh
  40fed5:	frstpm(287 only) 
  40fed7:	and    al,0x54
  40fed9:	dec    ebx
  40feda:	jge    0x40ff37
  40fedc:	adc    eax,0xb9f47693
  40fee1:	mov    al,0x29
  40fee3:	and    edi,ebp
  40fee5:	dec    esi
  40fee6:	mov    ah,0x6
  40fee8:	cmp    ebp,esp
  40feea:	sbb    bh,BYTE PTR [eax]
  40feec:	push   esp
  40feed:	test   al,0x17
  40feef:	and    ch,ch
  40fef1:	hlt    
  40fef2:	add    eax,0xffffffcc
  40fef5:	sbb    al,0xa8
  40fef7:	jge    0x40fee7
  40fef9:	sbb    eax,0x8c82500b
  40fefe:	aam    0xc3
  40ff00:	(bad)  
  40ff01:	jl     0x40ff77
  40ff03:	div    dh
  40ff05:	rcl    ah,cl
  40ff07:	in     al,0xba
  40ff09:	xor    esp,DWORD PTR [esi+ebp*4]
  40ff0c:	xchg   esi,eax
  40ff0d:	and    BYTE PTR [ebx],ah
  40ff0f:	push   eax
  40ff10:	or     bl,cl
  40ff12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff14:	fs popa 
  40ff16:	add    al,0x40
  40ff18:	cdq    
  40ff19:	out    dx,eax
  40ff1a:	jae    0x40ff16
  40ff1c:	push   es
  40ff1d:	daa    
  40ff1e:	(bad)  
  40ff20:	sub    DWORD PTR [edx+eiz*1],ebp
  40ff23:	and    BYTE PTR [di+0x78de],0xab
  40ff29:	fist   DWORD PTR ds:0x73d27419
  40ff2f:	call   0xba7c209d
  40ff34:	(bad)  
  40ff35:	sub    edi,DWORD PTR [esi]
  40ff37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff38:	pop    ss
  40ff39:	jp     0x40ff5e
  40ff3b:	sar    DWORD PTR [esi-0x20],0x31
  40ff3f:	add    BYTE PTR [edx+0x20],0x6c
  40ff43:	inc    edx
  40ff44:	adc    dh,BYTE PTR [edx-0x5c]
  40ff47:	scas   al,BYTE PTR es:[edi]
  40ff48:	lds    edi,FWORD PTR [edx-0x57aae0db]
  40ff4e:	in     eax,dx
  40ff4f:	into   
  40ff50:	imul   ebp,DWORD PTR ss:[edi+0x387bfc0a],0xfffffff8
  40ff58:	xchg   esi,eax
  40ff59:	cmp    dh,cl
  40ff5b:	jl     0x40ff2a
  40ff5d:	and    esp,DWORD PTR [edi]
  40ff5f:	int3   
  40ff60:	pusha  
  40ff61:	js     0x40ff21
  40ff63:	into   
  40ff64:	out    dx,eax
  40ff65:	xor    eax,0xd1c545ae
  40ff6a:	mov    edx,DWORD PTR [edx-0x33]
  40ff6d:	cmp    DWORD PTR [eax+edx*2+0x38],edx
  40ff71:	ror    DWORD PTR [ebx-0x5f],1
  40ff74:	jmp    0xd35a2ad2
  40ff79:	sub    ecx,DWORD PTR [edi+0x27]
  40ff7c:	add    bl,BYTE PTR [edx+edx*1+0x5d2a55fb]
  40ff83:	cmp    dl,dl
  40ff85:	push   es
  40ff86:	xor    al,0x66
  40ff88:	mov    edx,DWORD PTR [esi+0x4d702bd6]
  40ff8e:	fmulp  st(7),st
  40ff90:	xchg   esp,eax
  40ff91:	pop    ebp
  40ff92:	add    eax,0x2e5a02ff
  40ff97:	loope  0x410004
  40ff99:	xor    ebx,DWORD PTR [ebx+0x7c]
  40ff9c:	sbb    BYTE PTR [edx-0x4aebb081],bh
  40ffa2:	cmc    
  40ffa3:	add    al,0xe6
  40ffa5:	sbb    BYTE PTR [esi-0x7d],dl
  40ffa8:	xchg   ebp,eax
  40ffa9:	ds push edi
  40ffab:	push   eax
  40ffac:	and    esi,DWORD PTR [ebx*4-0x479fcca2]
  40ffb3:	jb     0x410027
  40ffb5:	retf   0x5b35
  40ffb8:	(bad)
  40ffbb:	inc    ecx
  40ffbc:	cli    
  40ffbd:	inc    DWORD PTR [ecx+0x45]
  40ffc0:	push   es
  40ffc1:	dec    esi
  40ffc2:	inc    ebx
  40ffc3:	push   0x6e795f8e
  40ffc8:	scas   al,BYTE PTR es:[edi]
  40ffc9:	into   
  40ffca:	or     eax,esp
  40ffcc:	ds js  0x40ff7f
  40ffcf:	(bad)  
  40ffd0:	adc    al,0x10
  40ffd2:	ins    BYTE PTR es:[edi],dx
  40ffd3:	sub    eax,0xeec70fd
  40ffd8:	psllq  mm4,QWORD PTR [ebp-0x74735dbc]
  40ffdf:	addr16 cli 
  40ffe1:	pushf  
  40ffe2:	and    DWORD PTR [edi+eiz*2+0x25],ecx
  40ffe6:	pop    esi
  40ffe7:	and    BYTE PTR [ecx],ah
  40ffe9:	aas    
  40ffea:	sbb    bl,BYTE PTR [edi]
  40ffec:	loop   0x41000e
  40ffee:	in     al,0x56
  40fff0:	jge    0x40ffde
  40fff2:	xchg   ebx,eax
  40fff3:	outs   dx,DWORD PTR ds:[esi]
  40fff4:	mov    bl,0xe0
  40fff6:	mov    edi,0x9d43b27
  40fffb:	push   ss
  40fffc:	inc    ebp
  40fffd:	out    dx,al
  40fffe:	lods   eax,DWORD PTR ds:[esi]
  40ffff:	shr    DWORD PTR [eax+0x41bd386e],cl
  410005:	xor    ch,dh
  410007:	sub    DWORD PTR [edi],ebp
  410009:	pop    edi
  41000a:	adc    edx,esp
  41000c:	push   edx
  41000d:	mov    ds:0xc369cdd4,al
  410012:	sbb    esp,DWORD PTR [edx+0x52]
  410015:	dec    esi
  410016:	push   eax
  410017:	icebp  
  410018:	repnz xor eax,0xfea919f
  41001e:	tzcnt  ebp,DWORD PTR [edi-0x39]
  410023:	loopne 0x410074
  410025:	push   cs
  410026:	cdq    
  410027:	ds pop es
  410029:	adc    al,0xbe
  41002b:	inc    edi
  41002c:	xchg   BYTE PTR [ebp-0x700e7069],ch
  410032:	pop    ebp
  410033:	mov    ecx,0x26df1079
  410038:	mov    ah,0xa8
  41003a:	retf   0x6658
  41003d:	nop
  41003e:	sar    DWORD PTR [ecx+0x7e],cl
  410041:	push   ebx
  410042:	jns    0x410065
  410044:	shl    DWORD PTR [edx+0xeeb398b],cl
  41004a:	es xor eax,0x5fa01ddf
  410050:	jmp    0x808292eb
  410055:	imul   edi,DWORD PTR [esi+0x25108aba],0xfe241f71
  41005f:	repz iret 
  410061:	push   es
  410062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410063:	movhps QWORD PTR [ebp+0x40b0d4a6],xmm3
  41006a:	into   
  41006b:	pop    ecx
  41006c:	aam    0xe7
  41006e:	push   edi
  41006f:	add    ebx,ebx
  410071:	cmp    eax,edi
  410073:	and    ebp,DWORD PTR [edx-0x2c58649d]
  410079:	and    bh,BYTE PTR [eax]
  41007b:	cld    
  41007c:	mov    ah,0x3d
  41007e:	test   BYTE PTR [edi],ch
  410080:	daa    
  410081:	jb     0x410094
  410083:	fadd   QWORD PTR [ebp-0x10aec46f]
  410089:	mov    esi,DWORD PTR [ecx-0x32d484b3]
  41008f:	out    0x84,eax
  410091:	cmp    eax,0x3645a3df
  410096:	or     DWORD PTR [esi-0x26],esi
  410099:	sahf   
  41009a:	lock lds esi,FWORD PTR [edx+0x3d]
  41009e:	fcom   QWORD PTR [ebp-0x1d210c82]
  4100a4:	inc    ecx
  4100a5:	or     WORD PTR [ebp-0xe19ffa5],0x68
  4100ad:	out    0x68,al
  4100af:	and    bh,bl
  4100b1:	dec    esp
  4100b2:	and    al,0x93
  4100b4:	jb     0x41006e
  4100b6:	pop    ecx
  4100b7:	mov    DWORD PTR [edx+0x33],ecx
  4100ba:	xchg   ecx,eax
  4100bb:	mov    fs,WORD PTR [ebx+eiz*4-0x36]
  4100bf:	xchg   BYTE PTR [esp+ebx*2],ch
  4100c2:	add    edx,DWORD PTR [edi+0x34]
  4100c5:	xor    bh,BYTE PTR [eax+0x1a]
  4100c8:	sbb    dh,BYTE PTR [ebx-0xb]
  4100cb:	ins    BYTE PTR es:[edi],dx
  4100cc:	outs   dx,BYTE PTR ds:[esi]
  4100cd:	xor    bh,BYTE PTR [edx+0x10]
  4100d0:	enter  0x3719,0x3f
  4100d4:	inc    eax
  4100d5:	jmp    DWORD PTR [ebx-0x567d77c2]
  4100db:	sbb    BYTE PTR [ebx],cl
  4100dd:	aad    0xde
  4100df:	jmp    0x8336:0xc68c0eb0
  4100e6:	sbb    eax,0x8fe9cc2e
  4100eb:	jp     0x410162
  4100ed:	ins    BYTE PTR es:[edi],dx
  4100ee:	sar    BYTE PTR [eax-0x361d2377],cl
  4100f4:	xor    DWORD PTR [ebp-0x80],esi
  4100f7:	push   esi
  4100f8:	test   DWORD PTR [ebx],ebp
  4100fa:	jg     0x4100ce
  4100fc:	sbb    eax,0xaef1ca62
  410101:	dec    esp
  410102:	dec    ebp
  410103:	ror    DWORD PTR [edi+ebx*8],0x6e
  410107:	out    0x55,al
  410109:	inc    ecx
  41010a:	ret    
  41010b:	inc    edi
  41010c:	faddp  st(2),st
  41010e:	popf   
  41010f:	fwait
  410110:	or     BYTE PTR [edi],al
  410112:	pusha  
  410113:	mov    ah,BYTE PTR [ebx]
  410115:	xchg   esi,eax
  410116:	sbb    BYTE PTR [eax],bl
  410118:	jbe    0x410198
  41011a:	push   ebp
  41011b:	mov    DWORD PTR [edi-0x483b85c0],0x171dc45f
  410125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410126:	jno    0x410187
  410128:	stos   DWORD PTR es:[edi],eax
  410129:	and    eax,DWORD PTR [edx]
  41012b:	jb     0x4100e1
  41012d:	or     ebx,DWORD PTR ds:0x8ff7a6d3
  410133:	lock (bad) 
  410135:	retf   0x2111
  410138:	mul    BYTE PTR [eax+ecx*4-0x72]
  41013c:	dec    edx
  41013d:	sbb    DWORD PTR [ebx+0x2e],edx
  410140:	dec    ecx
  410141:	fcmovb st,st(4)
  410143:	lods   eax,DWORD PTR ds:[esi]
  410144:	pop    ebp
  410145:	pop    ds
  410146:	scas   al,BYTE PTR es:[edi]
  410147:	xor    eax,0xb4f01cc9
  41014c:	pushf  
  41014d:	inc    ecx
  41014e:	lods   eax,DWORD PTR ds:[esi]
  41014f:	mov    BYTE PTR [esi+0x45e996dc],ch
  410155:	adc    dl,bl
  410157:	pop    ds
  410158:	fild   QWORD PTR [esi-0xf]
  41015b:	shr    DWORD PTR [esi-0x67],0x33
  41015f:	hlt    
  410160:	mov    gs,WORD PTR [ebp+0x6da70402]
  410166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410167:	and    BYTE PTR [edx],ch
  410169:	add    esp,DWORD PTR [ebx]
  41016b:	sub    bl,BYTE PTR [edx+eax*2+0x70b3553e]
  410172:	fwait
  410173:	dec    ebp
  410174:	and    bh,BYTE PTR [esp+0x559c5499]
  41017b:	popa   
  41017c:	adc    esi,ebp
  41017e:	mov    bl,0xb7
  410180:	popf   
  410181:	mov    eax,0x83a508f0
  410186:	hlt    
  410187:	xor    bh,BYTE PTR [eax+0x6f2f55f9]
  41018d:	dec    ebp
  41018e:	sub    bh,BYTE PTR [edx]
  410190:	out    0x86,al
  410192:	mov    WORD PTR [ecx-0x6d],?
  410195:	jmp    0x4ecb1264
  41019a:	pop    edi
  41019b:	mov    ecx,0x8adc370b
  4101a0:	mov    al,ds:0x283afcf
  4101a5:	push   eax
  4101a6:	fmul   QWORD PTR [esi-0x6c]
  4101a9:	xchg   ecx,eax
  4101aa:	adc    bh,bh
  4101ac:	das    
  4101ad:	(bad)  
  4101ae:	mov    esi,0x1157952b
  4101b3:	and    eax,0xe9f014fc
  4101b8:	dec    esi
  4101b9:	mov    bl,0x89
  4101bb:	push   0x3e
  4101bd:	sub    DWORD PTR [esp+edx*1-0xa],0x53
  4101c2:	enter  0x47f0,0x9b
  4101c6:	jns    0x410190
  4101c8:	fdivr  DWORD PTR [eax]
  4101ca:	mov    BYTE PTR [esi+0x4427175e],ah
  4101d0:	sbb    dl,ah
  4101d2:	hlt    
  4101d3:	adc    BYTE PTR [esi-0x74],bh
  4101d6:	cmp    bl,BYTE PTR [eax-0x7d7318dc]
  4101dc:	(bad)  
  4101dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101de:	fldenv [esi]
  4101e0:	pop    ecx
  4101e1:	or     al,0x58
  4101e3:	ror    BYTE PTR [edi+0x61ffb691],cl
  4101e9:	js     0x41018c
  4101eb:	inc    esp
  4101ec:	cmp    eax,0x20be36cd
  4101f1:	push   es
  4101f2:	adc    eax,0x1f1efd2b
  4101f7:	and    dl,BYTE PTR [edi]
  4101f9:	or     DWORD PTR [esi],0x2147a942
  4101ff:	xor    esp,DWORD PTR ss:[eax+0x5d1d5810]
  410206:	push   edi
  410207:	std    
  410208:	cmc    
  410209:	xchg   ecx,eax
  41020a:	hlt    
  41020b:	test   DWORD PTR [edi-0x5741e52d],0xb667d017
  410215:	push   0x2da90bb0
  41021a:	push   cs
  41021b:	or     al,0x91
  41021d:	pop    ebp
  41021e:	cmc    
  41021f:	adc    bl,BYTE PTR [ebp+0x2d03a9a0]
  410225:	sub    BYTE PTR [edx],dl
  410227:	fs addr16 inc ecx
  41022a:	jge    0x41022b
  41022c:	xchg   cl,ah
  41022e:	sar    DWORD PTR [ecx-0x45],cl
  410231:	call   0xca8a:0x439f342
  410238:	push   edx
  410239:	fbld   TBYTE PTR [edx-0x6d801d7e]
  41023f:	inc    ecx
  410240:	sbb    BYTE PTR [ecx+edi*1+0x13c62442],ch
  410247:	mov    DWORD PTR [esi+0x79],esp
  41024a:	shl    BYTE PTR [ecx+esi*8],cl
  41024d:	mov    bh,0xac
  41024f:	repnz test DWORD PTR [ebx+0x6d],edx
  410253:	xor    dl,BYTE PTR [esi-0x77]
  410256:	cwde   
  410257:	sub    DWORD PTR ds:0xa017ef3d,0x4f
  41025e:	dec    ecx
  41025f:	test   BYTE PTR [esi-0x72079b6b],bl
  410265:	or     bh,ah
  410267:	cmp    ebx,DWORD PTR [esi+0x13275df8]
  41026d:	mov    esi,0xa83bb928
  410272:	stc    
  410273:	mov    ds:0x8ef414a2,eax
  410278:	cmp    al,0x94
  41027a:	jl     0x4102b3
  41027c:	sbb    dh,bh
  41027e:	clc    
  41027f:	inc    edi
  410280:	mov    ds:0xc6d88849,eax
  410285:	and    eax,0x14353bf8
  41028a:	push   esi
  41028b:	mov    ds:0x37479519,eax
  410290:	mov    ds:0x21b957a0,al
  410295:	inc    ebp
  410296:	adc    al,0x62
  410298:	push   cs
  410299:	xchg   esi,eax
  41029a:	add    eax,0x69639c67
  41029f:	push   edx
  4102a0:	pop    es
  4102a1:	fisubr DWORD PTR [esi-0x18]
  4102a4:	cwde   
  4102a5:	repz push edx
  4102a7:	add    DWORD PTR cs:[edi],ecx
  4102aa:	call   0x7ec364a8
  4102af:	dec    ebx
  4102b0:	mov    al,ds:0x658cb66
  4102b5:	mov    WORD PTR [eax+eiz*8-0x4c],?
  4102b9:	inc    esi
  4102ba:	xchg   esi,eax
  4102bb:	popa   
  4102bc:	sub    bh,BYTE PTR [eax-0x29]
  4102bf:	data16 lahf 
  4102c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102c3:	dec    edx
  4102c4:	aad    0x3e
  4102c6:	and    al,0x35
  4102c8:	cmp    edi,DWORD PTR [eax-0x30b9e67b]
  4102ce:	aam    0x3b
  4102d0:	imul   ebx,ebp,0xbc0551dc
  4102d6:	adc    DWORD PTR [ebx],ecx
  4102d8:	adc    dh,BYTE PTR [edi-0x5e30a3d1]
  4102de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102df:	mov    cl,0xb5
  4102e1:	mov    ds:0x26ba19f4,eax
  4102e6:	inc    edi
  4102e7:	out    dx,eax
  4102e8:	jp     0x410358
  4102ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102eb:	xor    dl,ch
  4102ed:	mov    cl,0x92
  4102ef:	xchg   edi,eax
  4102f0:	push   ss
  4102f1:	popf   
  4102f2:	xchg   BYTE PTR [eax],ch
  4102f4:	pop    ebp
  4102f5:	test   al,0xdc
  4102f7:	sbb    dl,BYTE PTR [ecx+0x14e6781f]
  4102fd:	repnz pop ecx
  4102ff:	das    
  410300:	sbb    al,0xfc
  410302:	inc    ebx
  410303:	aad    0x7
  410305:	mov    edx,0x45cb1e40
  41030a:	push   edx
  41030b:	mov    esp,0xc6c18c3b
  410310:	cli    
  410311:	cmc    
  410312:	sahf   
  410313:	cdq    
  410314:	jp     0x4102f0
  410316:	out    0x9e,al
  410318:	mov    dl,0xf5
  41031a:	pop    ebp
  41031b:	dec    esi
  41031c:	mov    ebp,0xfc386ab
  410321:	mov    cl,0xc5
  410323:	or     al,0x45
  410325:	lahf   
  410326:	inc    ebp
  410327:	inc    ebp
  410328:	pop    edx
  410329:	add    al,0x9a
  41032b:	mov    ?,eax
  41032d:	adc    ebx,DWORD PTR cs:[ecx]
  410330:	xor    al,0xe0
  410332:	push   ebx
  410333:	mov    al,0x82
  410335:	cdq    
  410336:	popf   
  410337:	jg     0x4102f8
  410339:	test   al,0xfa
  41033b:	jmp    0x410377
  41033d:	scas   eax,DWORD PTR es:[edi]
  41033e:	jl     0x410385
  410340:	mov    ds:0x1cee70a9,eax
  410345:	ret    
  410346:	jne    0x4103af
  410348:	and    BYTE PTR [edx+0x62],dl
  41034b:	cli    
  41034c:	push   ebp
  41034d:	fwait
  41034e:	aad    0xd6
  410350:	dec    ecx
  410351:	inc    edx
  410352:	inc    ebx
  410353:	nop
  410354:	fld    QWORD PTR [edx+0x3093b56a]
  41035a:	mov    ebx,0xc23e584e
  41035f:	inc    edi
  410360:	mov    esp,ebp
  410362:	pop    esi
  410363:	repz mov bl,0x71
  410366:	retf   0x99b
  410369:	push   edi
  41036a:	xchg   esp,eax
  41036b:	test   al,0x46
  41036d:	push   ecx
  41036e:	icebp  
  41036f:	shl    BYTE PTR [ecx-0x681ffeef],cl
  410375:	sbb    ch,BYTE PTR [edx-0x5ed5a49d]
  41037b:	pop    ebp
  41037c:	jno    0x4103df
  41037e:	pop    ss
  41037f:	js     0x41039e
  410381:	sub    bh,0x86
  410384:	aas    
  410385:	and    DWORD PTR [edi-0x72],0x1b
  410389:	and    DWORD PTR [ebp-0x55],ecx
  41038c:	sub    DWORD PTR [edx+0xf],esp
  41038f:	(bad)  
  410390:	out    dx,eax
  410391:	stc    
  410392:	jle    0x4103f7
  410394:	pop    es
  410395:	mov    dl,0xa
  410397:	or     eax,0x7a1cfc52
  41039c:	stos   BYTE PTR es:[edi],al
  41039d:	jno    0x410411
  41039f:	adc    al,0xd7
  4103a1:	cmp    al,al
  4103a3:	push   ss
  4103a4:	repz in eax,0xb6
  4103a7:	xor    BYTE PTR [ebx],ch
  4103a9:	push   esp
  4103aa:	aad    0xfa
  4103ac:	add    BYTE PTR [ecx-0x44],ch
  4103af:	int    0x94
  4103b1:	mov    eax,ds:0xdc76b8a2
  4103b6:	call   0xd970:0xf91be783
  4103bd:	and    DWORD PTR [esi-0x70],esi
  4103c0:	inc    ecx
  4103c1:	mov    ds:0x9cc02455,al
  4103c6:	jae    0x4103ed
  4103c8:	dec    esp
  4103c9:	mov    al,ds:0x3b5b7bc8
  4103ce:	jb     0x4103a1
  4103d0:	ftst   
  4103d2:	xlat   BYTE PTR ds:[ebx]
  4103d3:	fist   WORD PTR [edx]
  4103d5:	popa   
  4103d6:	hlt    
  4103d7:	xor    eax,0xe8eae596
  4103dc:	mov    ds:0x39a66560,eax
  4103e1:	sub    DWORD PTR [ebx-0x1e4a242b],ecx
  4103e7:	cwde   
  4103e8:	arpl   WORD PTR [edi+0x51],bx
  4103eb:	mov    ah,0x79
  4103ed:	pop    ecx
  4103ee:	into   
  4103ef:	push   edx
  4103f0:	data16 jg 0x410429
  4103f3:	cld    
  4103f4:	push   es
  4103f5:	call   0x708e:0x484a5624
  4103fc:	xor    esi,DWORD PTR [edx-0x32c7ad61]
  410402:	sahf   
  410403:	ja     0x410402
  410405:	mov    bl,0xb
  410407:	jg     0x41045f
  410409:	es fs pop ebp
  41040c:	mov    edx,0xb6a6e968
  410411:	adc    DWORD PTR [esi],edi
  410413:	leave  
  410414:	sbb    DWORD PTR ds:0x8b55aba0,edx
  41041a:	xor    bh,bh
  41041c:	cs pushf 
  41041e:	retf   
  41041f:	sub    al,0xe9
  410421:	xor    al,0x4
  410423:	push   ebx
  410424:	push   ecx
  410425:	sar    BYTE PTR gs:[esi],1
  410428:	sbb    esi,esp
  41042a:	inc    ecx
  41042b:	fstp   TBYTE PTR [ecx-0x13]
  41042e:	dec    ebp
  41042f:	out    0xc,al
  410431:	or     esi,DWORD PTR [ebx+0x37783162]
  410437:	push   ss
  410438:	shr    DWORD PTR [eax-0x502d60c5],cl
  41043e:	adc    dh,BYTE PTR [edi]
  410440:	es repnz (bad) 
  410443:	pop    ds
  410444:	dec    ebp
  410445:	repnz mov ds:0x3ce203a2,al
  41044b:	add    ebx,DWORD PTR [ebp-0x16]
  41044e:	jns    0x4104bc
  410450:	(bad)  
  410451:	dec    edx
  410452:	(bad)  
  410454:	sbb    bl,ch
  410456:	stos   BYTE PTR es:[edi],al
  410457:	and    edx,esp
  410459:	dec    ecx
  41045a:	mov    ecx,0x5a670c39
  41045f:	sti    
  410460:	mov    DWORD PTR [eax],esi
  410462:	(bad)  
  410463:	jns    0x4103eb
  410465:	bswap  ebx
  410467:	mov    ds:0xed5f11e5,al
  41046c:	daa    
  41046d:	fadd   QWORD PTR [ecx+0x58]
  410470:	nop
  410471:	out    0x74,al
  410473:	(bad)  
  410474:	popa   
  410475:	xchg   edx,eax
  410476:	lock pop ds
  410478:	lds    edi,FWORD PTR [ebx-0x1e32a61e]
  41047e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41047f:	jp     0x410405
  410481:	and    al,0x95
  410483:	(bad)  
  410484:	xor    eax,0x24f948b5
  410489:	pop    ss
  41048a:	jnp    0x41047b
  41048c:	fwait
  41048d:	out    dx,eax
  41048e:	pop    ss
  41048f:	retf   
  410490:	inc    ecx
  410491:	push   esi
  410492:	adc    eax,DWORD PTR [edi+eiz*2]
  410495:	or     BYTE PTR [edi-0x1025fde8],0x9c
  41049c:	mov    al,ds:0x8a8ce1e1
  4104a1:	and    dl,dh
  4104a3:	gs es mov dh,0x8
  4104a7:	je     0x4104f3
  4104a9:	mov    ebx,0xd0c67fb5
  4104ae:	or     DWORD PTR [ebx+0x53],eax
  4104b1:	jbe    0x410479
  4104b3:	ror    bh,1
  4104b5:	cmp    al,BYTE PTR [eax-0x548ea2d0]
  4104bb:	shl    edi,cl
  4104bd:	lahf   
  4104be:	sub    ah,BYTE PTR [ebp+edx*4-0x4fbacdfb]
  4104c5:	rcr    ecx,1
  4104c7:	sub    BYTE PTR [edx],dl
  4104c9:	xchg   edi,eax
  4104ca:	cmp    eax,0x8974aea0
  4104cf:	ret    
  4104d0:	ins    BYTE PTR es:[edi],dx
  4104d1:	and    edx,ebp
  4104d3:	push   0xa5ade11f
  4104d8:	popf   
  4104d9:	jae    0x41048b
  4104db:	fcomip st,st(7)
  4104dd:	add    dh,dl
  4104df:	dec    eax
  4104e0:	loop   0x4104aa
  4104e2:	mov    ecx,0xd2615a1f
  4104e7:	out    dx,eax
  4104e8:	es jno 0x41051e
  4104eb:	sub    al,0x7b
  4104ed:	(bad)  
  4104ee:	mov    dl,0xc2
  4104f0:	mov    al,ds:0xc4ca9a22
  4104f5:	cmp    DWORD PTR [esi-0x53a628e2],edi
  4104fb:	push   eax
  4104fc:	jp     0x4104ee
  4104fe:	call   0xf806606f
  410503:	adc    BYTE PTR [ebp-0x35071f85],ah
  410509:	sbb    esi,DWORD PTR [esp+edx*4-0x74af42a6]
  410510:	imul   esp,ecx,0xfffffffb
  410513:	fcmovne st,st(2)
  410515:	jg     0x4104e8
  410517:	sbb    al,0xef
  410519:	push   es
  41051a:	mov    ebx,esi
  41051c:	mov    al,ds:0xa374f97
  410521:	pop    esp
  410522:	dec    ebp
  410523:	cmp    ebx,DWORD PTR [eax+0x4c6eaf11]
  410529:	(bad)  
  41052a:	icebp  
  41052b:	cli    
  41052c:	fldl2e 
  41052e:	lods   eax,DWORD PTR ds:[esi]
  41052f:	call   FWORD PTR [edi-0x15]
  410532:	push   edi
  410533:	xchg   edi,eax
  410534:	xchg   ebx,eax
  410535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410536:	out    dx,al
  410537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410539:	jns    0x410510
  41053b:	mov    esp,0x2369f3b7
  410540:	out    0x80,al
  410542:	mov    bh,0xee
  410544:	jle    0x410506
  410546:	jo     0x410586
  410548:	mov    ebx,0xbe011ea5
  41054d:	xchg   edx,eax
  41054e:	jmp    0x41051f
  410550:	dec    esp
  410551:	stc    
  410552:	ds mov bh,0x8
  410555:	inc    edi
  410556:	jecxz  0x4105a7
  410558:	mov    ah,0xf2
  41055a:	lds    ecx,FWORD PTR [ebp-0x6e2dac97]
  410560:	scas   al,BYTE PTR es:[edi]
  410561:	sub    al,0x35
  410563:	call   FWORD PTR [ebp-0x6b1d6bae]
  410569:	lods   al,BYTE PTR ds:[esi]
  41056a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41056b:	mov    ch,0x8b
  41056d:	addr16 popa 
  41056f:	pop    es
  410570:	popa   
  410571:	push   es
  410572:	mov    edx,edx
  410574:	mov    bl,0xe8
  410576:	xchg   DWORD PTR [esi],ecx
  410578:	and    al,0xa0
  41057a:	pop    ds
  41057b:	pop    eax
  41057c:	dec    ebx
  41057d:	mov    dl,0xbc
  41057f:	stos   DWORD PTR es:[edi],eax
  410580:	in     eax,dx
  410581:	push   es
  410582:	pop    esi
  410583:	jb     0x410545
  410585:	jo     0x41051b
  410587:	or     esp,ebp
  410589:	in     al,dx
  41058a:	jns    0x41059e
  41058c:	sbb    eax,0xb5e43a3e
  410591:	fldcw  WORD PTR es:[ebp-0x3c3f4cc2]
  410598:	js     0x4105e3
  41059a:	pop    ds
  41059b:	mov    eax,0x7ddf136e
  4105a0:	test   DWORD PTR [ecx-0x6528f9b9],0x145189e0
  4105aa:	and    al,0x3e
  4105ac:	mov    ds:0xef08d7dc,eax
  4105b1:	imul   edi,DWORD PTR [edx-0x517c0b50],0xffffff9c
  4105b8:	lea    ebx,[esi-0x5fd72207]
  4105be:	push   0x3cfd7c13
  4105c3:	jle    0x41055a
  4105c5:	test   DWORD PTR [di+0xc],eax
  4105c9:	in     eax,0x37
  4105cb:	adc    al,0x82
  4105cd:	or     DWORD PTR ds:[eax-0x12d892b5],ebx
  4105d4:	sbb    ebp,DWORD PTR ds:0xbf8f10f7
  4105da:	sbb    DWORD PTR [ebp+ecx*1-0x9c4b86e],esi
  4105e1:	lods   eax,DWORD PTR ds:[esi]
  4105e2:	(bad)  
  4105e3:	rol    DWORD PTR [esi],1
  4105e5:	lods   al,BYTE PTR ds:[esi]
  4105e6:	xchg   DWORD PTR [edi],esp
  4105e8:	or     DWORD PTR [eax-0x12d72e],esp
  4105ee:	out    dx,al
  4105ef:	sbb    ebp,DWORD PTR [ecx]
  4105f1:	mov    al,ds:0xded22870
  4105f6:	mov    ch,0x5b
  4105f8:	mov    esi,0x50e2ce29
  4105fd:	mov    eax,ds:0xdb28bf96
  410602:	inc    edi
  410603:	aad    0x71
  410605:	sbb    DWORD PTR [esi],0x9f985266
  41060b:	sub    eax,0x2bd2474d
  410610:	xor    edx,ecx
  410612:	ds cmp ebx,eax
  410615:	aad    0xf
  410617:	or     eax,0x1713c47
  41061c:	(bad)  
  41061d:	jne    0x41063d
  41061f:	in     al,0x43
  410621:	iret   
  410622:	sub    esi,DWORD PTR [ebx+0x55]
  410625:	xchg   esp,eax
  410626:	push   ebp
  410627:	dec    ebp
  410628:	scas   al,BYTE PTR es:[edi]
  410629:	push   ecx
  41062a:	sbb    DWORD PTR [ecx],ebp
  41062c:	xor    eax,ebp
  41062e:	scas   al,BYTE PTR es:[edi]
  41062f:	jmp    0xe5094670
  410634:	mov    cl,ch
  410636:	shl    ecx,cl
  410638:	sbb    esi,DWORD PTR [ecx]
  41063a:	aad    0xeb
  41063c:	out    dx,al
  41063d:	xchg   ebp,eax
  41063e:	enter  0xd2b3,0x5e
  410642:	call   0xb6a3edab
  410647:	jo     0x41067e
  410649:	pop    edi
  41064a:	loopne 0x41068a
  41064c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41064d:	(bad)  
  41064e:	and    al,0x8a
  410650:	xchg   esi,eax
  410651:	ja     0x41064a
  410653:	cmp    BYTE PTR [ebx],ch
  410655:	push   cs
  410656:	in     eax,dx
  410657:	add    dh,ch
  410659:	mov    ds:0x5d5e3ad9,eax
  41065e:	xor    ch,ah
  410660:	jecxz  0x41069b
  410662:	xchg   ecx,eax
  410663:	fild   WORD PTR [ebx]
  410665:	add    DWORD PTR [edx],esp
  410667:	pop    ebp
  410668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410669:	xchg   esi,eax
  41066a:	and    eax,edi
  41066c:	xor    eax,0xc21f63f3
  410671:	mov    BYTE PTR [esi-0x4f06335f],cl
  410677:	imul   esi,DWORD PTR ds:0xcfb5c390,0x44
  41067e:	dec    esi
  41067f:	loopne 0x4106c6
  410681:	adc    al,0xa7
  410683:	jp     0x41066f
  410685:	imul   eax,DWORD PTR [ebx-0x3d],0xffffffbb
  410689:	inc    esp
  41068a:	or     al,0x7b
  41068c:	(bad)  
  41068d:	aam    0x58
  41068f:	int3   
  410690:	mov    eax,0xb1f260ac
  410695:	out    dx,al
  410696:	xor    eax,0x2cf20faf
  41069b:	mov    esi,0x1396ed2a
  4106a0:	xchg   ebp,eax
  4106a1:	push   0x3ecb85d1
  4106a6:	retf   
  4106a7:	mov    cs,esp
  4106a9:	inc    edx
  4106aa:	xchg   ebp,eax
  4106ab:	test   eax,0x15cb968b
  4106b0:	mov    WORD PTR [edx],ss
  4106b2:	mov    eax,ebx
  4106b4:	push   0x1e133f58
  4106b9:	enter  0x8339,0xd4
  4106bd:	bound  ebx,QWORD PTR [ebx*1+0x181d93cb]
  4106c4:	das    
  4106c5:	hlt    
  4106c6:	shl    DWORD PTR [edx-0x16],cl
  4106c9:	fmul   DWORD PTR [esi-0x5a]
  4106cc:	imul   ecx,esi,0x77
  4106cf:	in     eax,0xf4
  4106d1:	xchg   edi,eax
  4106d2:	mov    ebx,0x32c5a771
  4106d7:	inc    esi
  4106d8:	fwait
  4106d9:	(bad)  
  4106da:	push   ebx
  4106db:	lahf   
  4106dc:	or     DWORD PTR ds:[edx+eax*1+0x5d23bf73],ebx
  4106e4:	outs   dx,BYTE PTR ds:[esi]
  4106e5:	mov    dl,0xc
  4106e7:	add    BYTE PTR [esi],0x4f
  4106ea:	imul   eax,DWORD PTR [ebx-0x3f],0xffffff94
  4106ee:	add    bh,cl
  4106f0:	push   edx
  4106f1:	into   
  4106f2:	into   
  4106f3:	inc    eax
  4106f4:	mov    dh,0xce
  4106f6:	pusha  
  4106f7:	inc    esi
  4106f8:	ins    BYTE PTR es:[edi],dx
  4106f9:	inc    ecx
  4106fa:	call   0xf378:0x4060b34
  410701:	cmp    al,0xea
  410703:	jmp    0xac24:0x56ea3651
  41070a:	xchg   esi,eax
  41070b:	push   ebp
  41070c:	or     BYTE PTR [eax+0x378a6d23],al
  410712:	jle    0x4106a4
  410714:	ins    DWORD PTR es:[edi],dx
  410715:	call   0xaadacf7d
  41071a:	retf   0x2d33
  41071d:	add    eax,0xbf4490ee
  410722:	shl    dl,cl
  410724:	sub    ecx,DWORD PTR [ecx-0x6a5314ad]
  41072a:	into   
  41072b:	(bad)  
  41072c:	(bad)  
  41072d:	outs   dx,BYTE PTR ds:[esi]
  41072e:	rcl    BYTE PTR [edx+0x6a9d6361],1
  410734:	or     al,BYTE PTR [ebx-0x63]
  410737:	pop    ecx
  410738:	sbb    eax,0x14702d89
  41073d:	add    al,0xfa
  41073f:	or     BYTE PTR ds:0xca14eedb,dl
  410745:	mov    cs,WORD PTR [esi-0x482932c1]
  41074b:	xchg   edi,eax
  41074c:	dec    edx
  41074d:	pop    ebx
  41074e:	dec    eax
  41074f:	mul    BYTE PTR [eax+edx*2+0x1a]
  410753:	test   DWORD PTR [eax-0x6],ecx
  410756:	out    0xc9,al
  410758:	dec    ebp
  410759:	or     edi,DWORD PTR [ecx+0x12]
  41075c:	xchg   ebx,eax
  41075d:	(bad)  
  41075e:	lahf   
  41075f:	push   ds
  410760:	mov    eax,ds:0x4562a565
  410765:	mov    bl,0x25
  410767:	mov    edi,DWORD PTR [ebp+0x2c]
  41076a:	inc    edi
  41076b:	mov    cl,0x92
  41076d:	xor    DWORD PTR [ebx+0x2e],ebp
  410770:	xchg   ebx,eax
  410771:	retf   0x583f
  410774:	sbb    eax,0x994128b2
  410779:	mov    cl,0x29
  41077b:	(bad)  
  41077c:	data16 jp 0x41072c
  41077f:	out    dx,al
  410780:	cmp    eax,0xd404f915
  410785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410786:	jno    0x4107a8
  410788:	in     al,dx
  410789:	xor    esi,0x11bfb2c1
  41078f:	bound  ebp,QWORD PTR [ebx+0x48621f2]
  410795:	xchg   esi,eax
  410796:	add    eax,0x5e7f8a2a
  41079b:	push   ebp
  41079c:	daa    
  41079d:	sbb    ch,dl
  41079f:	(bad)  
  4107a0:	cmp    al,0xa0
  4107a2:	cdq    
  4107a3:	pop    edx
  4107a4:	mov    al,0x5
  4107a6:	sub    ebp,DWORD PTR [ecx-0x5]
  4107a9:	aad    0x31
  4107ab:	push   edi
  4107ac:	xor    BYTE PTR [eax],ch
  4107ae:	mov    esi,0xaff2ff37
  4107b3:	xchg   ebx,eax
  4107b4:	aad    0xb5
  4107b6:	cmc    
  4107b7:	dec    eax
  4107b8:	shl    BYTE PTR [ebx-0x2d],cl
  4107bb:	int    0x23
  4107bd:	sbb    ch,ah
  4107bf:	loop   0x4107bf
  4107c1:	adc    al,0x16
  4107c3:	add    ch,ah
  4107c5:	mov    cl,BYTE PTR [esi]
  4107c7:	or     eax,0xcd25bfd5
  4107cc:	gs push ebx
  4107ce:	repnz and ah,BYTE PTR [esp+ebp*4+0x36]
  4107d3:	mov    ch,0xed
  4107d5:	push   ss
  4107d6:	xchg   BYTE PTR [edi-0x332d8411],ah
  4107dc:	cli    
  4107dd:	jnp    0x410843
  4107df:	loope  0x4107ec
  4107e1:	enter  0x5274,0xd5
  4107e5:	and    DWORD PTR ds:0x44f3e863,ebx
  4107eb:	jb     0x410792
  4107ed:	jmp    0x41079d
  4107ef:	(bad)  
  4107f0:	fist   DWORD PTR [ecx-0x6d]
  4107f3:	dec    DWORD PTR [ecx+eax*2-0x77]
  4107f7:	addr16 jp 0x41080e
  4107fa:	push   ecx
  4107fb:	add    bl,dh
  4107fd:	inc    edx
  4107fe:	into   
  4107ff:	jno    0x410830
  410801:	iret   
  410802:	inc    ecx
  410803:	into   
  410804:	lods   al,BYTE PTR ds:[esi]
  410805:	or     eax,0x6e1f3525
  41080a:	and    BYTE PTR [ebp-0x11c0d45f],dl
  410810:	shl    BYTE PTR [ecx+0x1cffa06c],0x3f
  410817:	xchg   esi,eax
  410818:	pop    ebx
  410819:	in     eax,dx
  41081a:	out    dx,eax
  41081b:	add    ecx,ecx
  41081d:	fs push esi
  41081f:	fnstcw WORD PTR [eax]
  410821:	ja     0x410862
  410823:	fnsave [esi]
  410825:	js     0x4107b3
  410827:	xchg   esp,eax
  410829:	jl     0x4107c8
  41082b:	lods   al,BYTE PTR ds:[esi]
  41082c:	add    BYTE PTR [ecx+0x23],ch
  41082f:	fcomp  QWORD PTR [edx+0x5]
  410832:	inc    edi
  410833:	fimul  WORD PTR [ecx+0x6e6f8061]
  410839:	loopne 0x410820
  41083b:	shl    DWORD PTR [edx-0x3b],1
  41083e:	xor    edi,esi
  410840:	mov    eax,0x8ff749e0
  410845:	and    al,0xad
  410847:	or     eax,0xefc4696c
  41084c:	dec    edx
  41084d:	ins    DWORD PTR es:[edi],dx
  41084e:	mov    ebp,DWORD PTR [ecx-0x3b]
  410851:	xchg   BYTE PTR [ebx-0x49a1ac37],bl
  410857:	fiadd  DWORD PTR [esi-0x1a]
  41085a:	mov    edi,0xbd0f86cf
  41085f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410860:	hlt    
  410861:	pop    edi
  410862:	inc    ebx
  410863:	mov    cl,0x52
  410865:	push   edi
  410866:	adc    BYTE PTR [eax-0x3f5b2be6],ch
  41086c:	cmp    eax,0x799bdf2e
  410871:	mov    ch,0x4f
  410873:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410875:	and    al,BYTE PTR [edx+ebp*2]
  410878:	jo     0x410835
  41087a:	inc    ebx
  41087b:	outs   dx,BYTE PTR ds:[esi]
  41087c:	mov    WORD PTR [ecx],gs
  41087e:	dec    esp
  41087f:	and    ecx,DWORD PTR [edi]
  410881:	bound  ebx,QWORD PTR [esp+eiz*2-0x3698bb5c]
  410888:	add    al,BYTE PTR [esi+0x0]
  41088b:	xlat   BYTE PTR ds:[bx]
  41088d:	dec    edx
  41088e:	aas    
  41088f:	xlat   BYTE PTR ds:[ebx]
  410890:	loopne 0x410860
  410892:	or     dh,BYTE PTR [ebp+0x74339237]
  410898:	into   
  410899:	adc    ebx,DWORD PTR [esi+esi*1+0x2c]
  41089d:	sub    eax,0x1e70f403
  4108a2:	cs mov edx,0x9d512039
  4108a8:	xchg   ebx,eax
  4108a9:	repz adc BYTE PTR [esi+eax*2-0x4ce63a3f],dl
  4108b1:	jno    0x41086c
  4108b3:	loop   0x41084e
  4108b5:	mov    ecx,0xe0b9ee66
  4108ba:	scas   al,BYTE PTR es:[edi]
  4108bb:	xchg   ecx,eax
  4108bc:	shl    BYTE PTR [esi+0x7f],1
  4108bf:	cmp    eax,DWORD PTR [ecx-0x690d0a34]
  4108c5:	adc    cl,BYTE PTR [ebp-0x26]
  4108c8:	repnz adc BYTE PTR [ecx],cl
  4108cb:	jae    0x41084f
  4108cd:	add    BYTE PTR [ebx-0x35865620],al
  4108d3:	aaa    
  4108d4:	dec    ebx
  4108d5:	push   0xfffffff1
  4108d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d8:	out    dx,al
  4108d9:	in     al,dx
  4108da:	or     BYTE PTR [ecx-0x16],dl
  4108dd:	push   ds
  4108de:	test   al,0xf6
  4108e0:	inc    edx
  4108e1:	data16 ins BYTE PTR es:[edi],dx
  4108e3:	mov    ds:0x34984229,eax
  4108e8:	mov    ds:0x5aa67a7e,eax
  4108ed:	xor    al,0x12
  4108ef:	pop    ecx
  4108f0:	mov    eax,0x24b1d63d
  4108f5:	jne    0x4108e2
  4108f7:	xchg   BYTE PTR [edx],al
  4108f9:	fist   DWORD PTR [ecx+0x56ac4cb8]
  4108ff:	(bad)  
  410900:	jmp    0x420682aa
  410905:	adc    ebp,DWORD PTR [esi+eiz*8-0x4223fd82]
  41090c:	sbb    eax,0x4dfce4b8
  410911:	fld    QWORD PTR [edi-0x75]
  410914:	sbb    al,0x4d
  410916:	pop    esi
  410917:	call   0x8a79371
  41091c:	outs   dx,BYTE PTR ds:[esi]
  41091d:	scas   al,BYTE PTR es:[edi]
  41091e:	mov    ebx,0x2a5e2292
  410923:	cwde   
  410924:	(bad)  
  410925:	dec    esp
  410926:	push   esi
  410927:	mov    ah,0x5
  410929:	inc    edx
  41092a:	jmp    0x410943
  41092c:	mov    dh,0x2a
  41092e:	rcl    al,1
  410930:	nop
  410931:	psubd  mm1,QWORD PTR [ebx-0x52]
  410935:	setno  BYTE PTR [eax-0x6270afcd]
  41093c:	pop    ebx
  41093d:	icebp  
  41093e:	cs das 
  410940:	call   0x6307:0x7a7e7c8a
  410947:	mov    dl,0x76
  410949:	jmp    0x4108cd
  41094b:	jae    0x410987
  41094d:	arpl   di,cx
  41094f:	repz xor eax,0x1714bf60
  410955:	outs   dx,DWORD PTR ds:[esi]
  410956:	stc    
  410957:	jno    0x410951
  410959:	adc    bl,BYTE PTR [esi]
  41095b:	hlt    
  41095c:	jl     0x4109b8
  41095e:	scas   eax,DWORD PTR es:[edi]
  41095f:	sub    DWORD PTR [ebx-0x38],eax
  410962:	pop    ebp
  410963:	leave  
  410964:	fcmovu st,st(1)
  410966:	jl     0x4109b2
  410968:	dec    edi
  410969:	push   esp
  41096a:	sub    edi,ecx
  41096c:	cmp    dh,BYTE PTR [esi]
  41096e:	scas   eax,DWORD PTR es:[edi]
  41096f:	repnz scas al,BYTE PTR es:[edi]
  410971:	(bad)  
  410972:	jge    0x41094e
  410974:	xor    dl,BYTE PTR [ebx-0x3d]
  410977:	add    ebx,DWORD PTR [ecx+0x47a55fb5]
  41097d:	test   al,0x2a
  41097f:	leave  
  410980:	push   ss
  410981:	pop    es
  410982:	pusha  
  410983:	out    dx,eax
  410984:	xchg   ebx,eax
  410985:	mov    ebp,0xf59284ed
  41098a:	cmp    eax,0x2d8238aa
  41098f:	cmp    DWORD PTR [edx-0x68d11f09],edx
  410995:	icebp  
  410996:	test   al,0xdd
  410998:	push   ebp
  410999:	clc    
  41099a:	mov    cs,ebp
  41099c:	mov    al,0xc8
  41099e:	dec    ecx
  41099f:	inc    esi
  4109a0:	sbb    DWORD PTR [esp+ebp*2-0x4acdb22c],edi
  4109a7:	data16 std 
  4109a9:	retf   
  4109aa:	cmp    BYTE PTR [esi+0x7b42c02b],bh
  4109b0:	pop    ds
  4109b1:	repnz cdq 
  4109b3:	mov    BYTE PTR [esi-0x4e],0x1a
  4109b7:	jl     0x4109f4
  4109b9:	(bad)  
  4109ba:	int    0x7e
  4109bc:	iret   
  4109bd:	push   0xfffffff3
  4109bf:	dec    ebp
  4109c0:	xchg   DWORD PTR [ebx+0x21],esi
  4109c3:	cmp    BYTE PTR [ecx+ebp*2+0x48],bh
  4109c7:	enter  0xeda1,0xd2
  4109cb:	aaa    
  4109cc:	inc    ebp
  4109cd:	js     0x4109da
  4109cf:	push   ebp
  4109d0:	push   edi
  4109d1:	add    bl,dh
  4109d3:	test   BYTE PTR [esi-0x46],dl
  4109d6:	nop
  4109d7:	mov    al,0x4e
  4109d9:	add    BYTE PTR [edi+0x34],cl
  4109dc:	pusha  
  4109dd:	mov    ebx,0x1bcd5bf6
  4109e2:	and    edx,DWORD PTR [ebx-0x33]
  4109e5:	dec    eax
  4109e6:	cs and ecx,eax
  4109e9:	fwait
  4109ea:	int    0x96
  4109ec:	js     0x410982
  4109ee:	lea    esp,ds:[ebx-0x47a4b478]
  4109f5:	test   eax,0x414cae1e
  4109fa:	jno    0x4109ed
  4109fc:	loopne 0x4109ec
  4109fe:	shr    BYTE PTR [edx+ebp*1+0x3f787d36],cl
  410a05:	mov    esi,cs
  410a07:	loopne 0x410a6f
  410a09:	lock push ss
  410a0b:	pop    edx
  410a0c:	aaa    
  410a0d:	adc    cl,BYTE PTR [edx-0x64285fbb]
  410a13:	into   
  410a14:	dec    eax
  410a15:	les    edi,FWORD PTR [edi+0x2e]
  410a18:	pushf  
  410a19:	xor    dh,BYTE PTR [bx+si-0xd]
  410a1d:	dec    eax
  410a1e:	retf   
  410a1f:	outs   dx,BYTE PTR ds:[esi]
  410a20:	scas   eax,DWORD PTR es:[edi]
  410a21:	fnstenv [edi]
  410a23:	popf   
  410a24:	add    al,BYTE PTR [ebx-0x6a]
  410a27:	xor    al,0x6f
  410a29:	mov    dh,0xce
  410a2b:	cli    
  410a2c:	mov    ds,esi
  410a2e:	sbb    BYTE PTR [eax-0x501e170f],0x2d
  410a35:	not    DWORD PTR [esi]
  410a37:	sub    ch,0x3a
  410a3a:	push   esi
  410a3b:	mov    ds:0x887ec4aa,eax
  410a40:	mov    dh,0x31
  410a42:	outs   dx,BYTE PTR ds:[esi]
  410a43:	xlat   BYTE PTR ds:[ebx]
  410a44:	fucom  st(0)
  410a46:	arpl   WORD PTR ds:0x4f56f8db,dx
  410a4c:	add    BYTE PTR [ecx+0x54f421f8],dh
  410a52:	adc    al,0xe8
  410a54:	inc    ecx
  410a55:	pop    ebx
  410a56:	push   0x66303b81
  410a5b:	dec    esp
  410a5c:	jge    0x410a73
  410a5e:	add    DWORD PTR [eax],esp
  410a60:	jnp    0x410a31
  410a62:	arpl   WORD PTR [ebx+eiz*8+0x70648e13],bp
  410a69:	and    DWORD PTR [ecx-0x50],edx
  410a6c:	dec    eax
  410a6d:	or     ebx,DWORD PTR [eax]
  410a6f:	shr    BYTE PTR [eax+0x6e],cl
  410a72:	fs push ecx
  410a74:	inc    eax
  410a75:	jle    0x410ac3
  410a77:	xchg   DWORD PTR [edx+ebp*1+0x58dc302b],esi
  410a7e:	pop    ecx
  410a7f:	and    al,0x4c
  410a81:	test   eax,0x5e39b2b9
  410a86:	movd   DWORD PTR [ecx+0x66],mm2
  410a8a:	adc    bh,BYTE PTR [edi+0x2276fe9a]
  410a90:	inc    BYTE PTR fs:[esp+ecx*1+0x11df2247]
  410a98:	mov    bh,0xd4
  410a9a:	lgs    esi,FWORD PTR ss:[edx-0x16]
  410a9f:	dec    esi
  410aa0:	ins    BYTE PTR es:[edi],dx
  410aa1:	ja     0x410aba
  410aa3:	sahf   
  410aa4:	repz std 
  410aa6:	adc    ch,BYTE PTR [ecx+0x69]
  410aa9:	cs cwde 
  410aab:	das    
  410aac:	sub    al,0x44
  410aae:	sub    DWORD PTR gs:[edx-0x1c2bb877],ecx
  410ab5:	loop   0x410b26
  410ab7:	pop    edx
  410ab8:	dec    edi
  410ab9:	dec    ecx
  410aba:	jmp    0xc55e:0x645ffb06
  410ac1:	jge    0x410a96
  410ac3:	ret    
  410ac4:	or     al,0x39
  410ac6:	adc    ch,BYTE PTR [ecx-0x22f2216e]
  410acc:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  410ace:	sub    al,0xbe
  410ad0:	xchg   DWORD PTR [eax+0x763cdf88],ebx
  410ad6:	mov    ch,0x53
  410ad8:	adc    al,0x9d
  410ada:	ficom  WORD PTR [ebp-0x7983bd51]
  410ae0:	or     eax,0x2c822e88
  410ae5:	add    BYTE PTR [eax-0x7ae048b9],dh
  410aeb:	ins    BYTE PTR es:[edi],dx
  410aec:	aas    
  410aed:	dec    esp
  410aee:	pop    ecx
  410aef:	mov    ecx,0x3be71db6
  410af4:	xor    BYTE PTR [ebx],0x9d
  410af7:	push   esi
  410af8:	sbb    eax,0x5eeb001f
  410afd:	sbb    al,0x1b
  410aff:	imul   eax,DWORD PTR [edi+0x6fd23a17],0x3c
  410b06:	or     bh,BYTE PTR [esi-0x6691fc8c]
  410b0c:	or     eax,DWORD PTR ds:0xbfa2e491
  410b12:	jge    0x410b03
  410b14:	xor    al,0x52
  410b16:	xchg   edi,eax
  410b17:	test   eax,0xb62b6e5d
  410b1c:	and    eax,0xd57b8e4c
  410b21:	jnp    0x410ab6
  410b23:	mov    eax,ds:0x70da6d5b
  410b28:	lods   eax,DWORD PTR ds:[esi]
  410b29:	or     al,0xb
  410b2b:	xchg   edx,eax
  410b2c:	rol    DWORD PTR [edi+0x11],1
  410b2f:	fnstsw WORD PTR [eax+esi*8]
  410b32:	cmp    DWORD PTR [ebp-0x64e922a1],ebx
  410b38:	or     DWORD PTR [ebx+edi*8-0x37],edi
  410b3c:	lock outs dx,DWORD PTR ds:[esi]
  410b3e:	sub    ch,BYTE PTR [ecx+0x2]
  410b41:	mov    edx,ecx
  410b43:	adc    BYTE PTR [esi+0x7097bb95],ch
  410b49:	and    ebx,DWORD PTR [edx-0x58]
  410b4c:	xchg   ebx,eax
  410b4d:	xchg   ebp,eax
  410b4e:	popa   
  410b4f:	inc    esp
  410b50:	adc    eax,0x945fe29c
  410b55:	cwde   
  410b56:	outs   dx,DWORD PTR ds:[esi]
  410b57:	sbb    ah,al
  410b59:	push   ebp
  410b5a:	sub    ebx,DWORD PTR [eax-0x37]
  410b5d:	or     al,0xba
  410b5f:	cwde   
  410b60:	pop    ds
  410b61:	stos   BYTE PTR es:[edi],al
  410b62:	retf   0x70d7
  410b65:	rcr    DWORD PTR [edi-0x9565531],1
  410b6b:	outs   dx,BYTE PTR ds:[esi]
  410b6c:	and    BYTE PTR [esi],0xae
  410b6f:	xor    esp,DWORD PTR [ebp+ecx*2-0x3bae46fd]
  410b76:	int    0x5e
  410b78:	ins    DWORD PTR es:[edi],dx
  410b79:	jecxz  0x410b1b
  410b7b:	xor    BYTE PTR [ebp-0x75],bl
  410b7e:	cs ins BYTE PTR es:[edi],dx
  410b80:	test   al,0x56
  410b82:	cmp    esi,DWORD PTR [esi]
  410b84:	pop    es
  410b85:	add    DWORD PTR [eax+0x35],0xf1865e1b
  410b8c:	jne    0x410c02
  410b8e:	js     0x410bfa
  410b90:	popa   
  410b91:	inc    edi
  410b92:	sub    esi,esp
  410b94:	pop    esi
  410b95:	sbb    DWORD PTR [ecx+esi*8],0xd2d1e1e6
  410b9c:	sbb    al,0x85
  410b9e:	or     al,0xb9
  410ba0:	bound  ebx,QWORD PTR [edi+0x2d028e19]
  410ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba7:	das    
  410ba8:	cmp    eax,0x8a03e7e9
  410bad:	sub    al,0x9
  410baf:	mov    edi,0xc6ce0ec2
  410bb4:	clc    
  410bb5:	or     eax,0x49bb58b6
  410bba:	call   0x4b7c:0x45e655ae
  410bc1:	xor    ebx,ebx
  410bc3:	fsubr  DWORD PTR [ebx-0x22873b31]
  410bc9:	test   eax,0xc3858735
  410bce:	dec    edx
  410bcf:	mov    esp,esp
  410bd1:	mov    ecx,0x6634aaf4
  410bd6:	xor    al,0x4e
  410bd8:	sub    edx,DWORD PTR [edx-0x42]
  410bdb:	(bad)  
  410bdd:	wrmsr  
  410bdf:	rcl    ch,0xa
  410be2:	ins    DWORD PTR es:[edi],dx
  410be3:	sub    al,0x4
  410be6:	leave  
  410be7:	idiv   dl
  410be9:	sbb    DWORD PTR [eax+0x2],esp
  410bec:	xor    al,0x9
  410bee:	stc    
  410bef:	dec    edx
  410bf0:	ret    
  410bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf2:	in     al,0x9d
  410bf4:	dec    sp
  410bf6:	fwait
  410bf7:	cmp    DWORD PTR [esi-0x48],esi
  410bfa:	mov    ecx,0xb256d53e
  410bff:	repz daa 
  410c01:	rcl    DWORD PTR [eax],0x2c
  410c04:	ficom  DWORD PTR [ebp+0x38469cec]
  410c0a:	xchg   esp,eax
  410c0b:	sahf   
  410c0c:	and    BYTE PTR [edx+eax*8-0x25b66569],0x46
  410c14:	call   DWORD PTR [edx-0x69407ffd]
  410c1a:	les    ecx,FWORD PTR [esi]
  410c1c:	fisubr WORD PTR [esi+eiz*1+0x79]
  410c20:	push   cs
  410c21:	mov    esi,0xcb52ff5a
  410c26:	push   es
  410c27:	push   ebp
  410c28:	inc    esp
  410c29:	pop    esi
  410c2a:	xchg   ebx,eax
  410c2b:	or     eax,0xf0603f1a
  410c30:	xchg   esi,eax
  410c31:	test   al,0xc4
  410c33:	xchg   esp,eax
  410c34:	dec    ebp
  410c35:	test   al,0x8f
  410c37:	adc    DWORD PTR [edi+ebx*4-0x5d],esp
  410c3b:	xchg   ebx,eax
  410c3c:	sub    al,0x5
  410c3e:	icebp  
  410c3f:	ja     0x410cab
  410c41:	mov    dl,0xc8
  410c43:	dec    ebp
  410c44:	pop    ds
  410c45:	icebp  
  410c46:	ins    DWORD PTR es:[edi],dx
  410c47:	cmp    edi,ebp
  410c49:	mov    ah,0x4d
  410c4b:	or     edx,eax
  410c4d:	lods   eax,DWORD PTR ds:[esi]
  410c4e:	mov    ah,0x2a
  410c50:	mov    ah,0x49
  410c52:	add    DWORD PTR ds:0xbb3447c7,ebp
  410c58:	push   edx
  410c59:	and    BYTE PTR [ecx+0x509e4a15],bh
  410c5f:	jp     0x410c8f
  410c61:	cld    
  410c62:	jne    0x410c6a
  410c64:	cdq    
  410c65:	mov    bh,0x53
  410c67:	mov    al,0x73
  410c69:	pop    edi
  410c6a:	push   ebp
  410c6b:	shl    esp,cl
  410c6d:	pushf  
  410c6e:	jmp    0x6b89:0xa1c04e46
  410c75:	imul   ebp,DWORD PTR ds:0xf3f71aa3,0xcdfd5cf8
  410c7f:	pop    esp
  410c80:	cmp    eax,0xcbe4acd2
  410c85:	ret    
  410c86:	ss aam 0xc9
  410c89:	jne    0x410cdb
  410c8b:	jmp    0x195a6f50
  410c90:	push   ds
  410c91:	jno    0x410c27
  410c93:	imul   esi,DWORD PTR [ebp+0x32],0xfffffff5
  410c97:	xchg   DWORD PTR [esi+ecx*2-0x442c757b],esp
  410c9e:	arpl   WORD PTR [ebx+ebx*1],bx
  410ca1:	adc    bl,0x3
  410ca4:	xchg   esi,eax
  410ca5:	lods   eax,DWORD PTR ds:[esi]
  410ca6:	inc    edx
  410ca7:	mov    ds:0x66107fc8,al
  410cac:	dec    edx
  410cad:	lods   eax,DWORD PTR ds:[esi]
  410cae:	(bad)  
  410caf:	idiv   BYTE PTR [ebx-0x3046ad79]
  410cb5:	rcl    BYTE PTR [ebp-0x35ef24a],0xa
  410cbc:	and    al,0x8b
  410cbe:	iret   
  410cbf:	jmp    0x9182:0xc47c0555
  410cc6:	cmp    al,0x18
  410cc8:	hlt    
  410cc9:	mov    dh,0xf7
  410ccb:	cli    
  410ccc:	lock or esp,ebx
  410ccf:	mov    al,0x74
  410cd1:	mov    dh,0xc6
  410cd3:	popf   
  410cd4:	mov    dl,0xb7
  410cd6:	lock into 
  410cd8:	cmp    ecx,esp
  410cda:	(bad)  
  410cdb:	push   ecx
  410cdc:	push   ds
  410cdd:	int3   
  410cde:	mov    es,WORD PTR [esi]
  410ce0:	test   al,0xc0
  410ce2:	fld    DWORD PTR [ecx]
  410ce4:	cmp    dl,BYTE PTR [esi]
  410ce6:	mov    ds:0x7d24f1cf,eax
  410ceb:	xchg   edx,eax
  410cec:	data16 std 
  410cee:	push   esp
  410cef:	and    BYTE PTR [edi+0x48c46e69],bh
  410cf5:	push   eax
  410cf6:	int    0xb7
  410cf8:	adc    DWORD PTR es:[edi+0x75dc98f],edx
  410cff:	sbb    al,0x24
  410d01:	pop    edi
  410d02:	lock mov WORD PTR [ecx],gs
  410d05:	mov    ebx,0x75925298
  410d0a:	sub    eax,0x71221cd7
  410d0f:	adc    al,0xfa
  410d11:	lea    ebx,[edx-0x5a5e4d8d]
  410d17:	test   DWORD PTR [eax-0x6a],0x8b619896
  410d1e:	mov    BYTE PTR [ebp-0x511473f7],dl
  410d24:	and    ah,BYTE PTR [ecx-0x5cd64cec]
  410d2a:	movnti DWORD PTR [ebx],esi
  410d2d:	ror    dh,0x8a
  410d30:	mov    dh,0x90
  410d32:	add    al,BYTE PTR [ebp-0x691f5e91]
  410d38:	jne    0x410d5d
  410d3a:	sbb    al,0x23
  410d3c:	gs inc esi
  410d3e:	push   es
  410d3f:	pop    eax
  410d40:	enter  0x54e9,0x3
  410d44:	js     0x410cfc
  410d46:	ret    
  410d47:	popa   
  410d48:	mov    al,ds:0xa4da374
  410d4d:	sbb    DWORD PTR ds:0xd7d48f2f,edx
  410d53:	cmp    eax,0x6e2338bf
  410d58:	fs mov esp,0xe4b5a11f
  410d5e:	imul   ebx,DWORD PTR [esi-0x6bf68b4e],0x1e
  410d65:	dec    edi
  410d66:	sub    BYTE PTR [eax],dl
  410d68:	cli    
  410d69:	jmp    0xa3dfae92
  410d6e:	mov    esp,0xb6fd5273
  410d73:	mov    cl,0x42
  410d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d76:	push   ecx
  410d77:	jae    0x410d1d
  410d79:	cmp    BYTE PTR [edi-0x8756928],al
  410d7f:	jbe    0x410d92
  410d81:	test   BYTE PTR [si],0xd5
  410d85:	push   ecx
  410d86:	sahf   
  410d87:	cwde   
  410d88:	fcomp  DWORD PTR [ecx+0x14d08d11]
  410d8e:	(bad)  
  410d8f:	xor    eax,0x1013b76a
  410d94:	ret    0xbb40
  410d97:	mov    dl,0x91
  410d99:	and    eax,0xcbb44b5f
  410d9e:	push   eax
  410d9f:	test   BYTE PTR [ebx*8-0x3dbaf667],cl
  410da6:	mov    al,ds:0x89e41b15
  410dab:	adc    DWORD PTR ds:0x7504fc6a,esp
  410db1:	(bad)  
  410db2:	idiv   DWORD PTR [ecx-0x3a]
  410db5:	push   edx
  410db6:	cmc    
  410db7:	inc    ebp
  410db8:	les    esp,FWORD PTR [edi]
  410dba:	dec    edi
  410dbb:	in     al,0x90
  410dbd:	mov    ecx,0x5c41ba3d
  410dc2:	lea    edx,[esi+eiz*2+0x7cbb2414]
  410dc9:	mov    cl,0x8e
  410dcb:	call   FWORD PTR [esp+eiz*2-0x14]
  410dcf:	mov    esp,ecx
  410dd1:	cmp    al,0xf1
  410dd3:	xchg   esi,eax
  410dd4:	pop    eax
  410dd5:	cmp    al,0xc7
  410dd7:	retf   
  410dd8:	push   es
  410dd9:	bound  edi,QWORD PTR [edi]
  410ddb:	xchg   ecx,eax
  410ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ddd:	lds    edx,FWORD PTR [edi+0x18]
  410de0:	mov    ds,edx
  410de2:	push   ebx
  410de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410de4:	inc    eax
  410de5:	mov    ebx,ds
  410de7:	or     esp,ebp
  410de9:	dec    edi
  410dea:	xchg   edi,eax
  410deb:	mov    bh,0x91
  410ded:	push   esi
  410dee:	nop
  410def:	iret   
  410df0:	popf   
  410df1:	out    0x65,eax
  410df3:	xor    BYTE PTR [esi-0x719b7f27],al
  410df9:	sub    ebx,edi
  410dfb:	stc    
  410dfc:	inc    ecx
  410dfd:	loop   0x410dc0
  410dff:	jge    0x410e74
  410e01:	mov    ebx,0xcff8db08
  410e06:	in     eax,0x82
  410e08:	outs   dx,DWORD PTR ds:[esi]
  410e09:	add    dh,BYTE PTR [eax-0x126abe8f]
  410e0f:	out    dx,al
  410e10:	adc    bh,BYTE PTR [ecx-0x22]
  410e13:	lock icebp 
  410e15:	mov    ?,WORD PTR [ebp-0x5b]
  410e18:	inc    edi
  410e19:	imul   esp,ebp,0xffffffd2
  410e1c:	and    DWORD PTR [ecx-0x704544fe],edi
  410e22:	outs   dx,BYTE PTR ds:[esi]
  410e23:	bound  edi,QWORD PTR [edi-0x7399be5c]
  410e29:	ins    DWORD PTR es:[edi],dx
  410e2a:	cs mov bl,0x8e
  410e2d:	cmp    DWORD PTR [edx],edx
  410e2f:	inc    ecx
  410e30:	neg    BYTE PTR [ebp-0x1c]
  410e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e34:	test   eax,0xcc289293
  410e39:	sub    al,0x26
  410e3b:	addr16 call 0xc0c3:0xcadf2799
  410e43:	mov    cl,0xa1
  410e45:	xchg   ebx,eax
  410e46:	cmp    al,0x1b
  410e48:	dec    ebp
  410e49:	push   ebp
  410e4a:	mov    bl,0x1d
  410e4c:	pop    esi
  410e4d:	pop    ecx
  410e4e:	or     DWORD PTR [edx-0x7],edx
  410e51:	pusha  
  410e52:	dec    eax
  410e53:	or     al,BYTE PTR [eax+0x3e91a56f]
  410e59:	push   0x72f6f1a1
  410e5e:	mov    bh,0xf7
  410e60:	mov    ecx,0x4adbb5de
  410e65:	shr    DWORD PTR [eax+0x4ced337b],1
  410e6b:	cmp    dl,BYTE PTR [ebx+0x11a0369c]
  410e71:	(bad)  
  410e72:	xchg   al,cl
  410e74:	jb     0x410e98
  410e76:	cmp    al,0x27
  410e78:	clc    
  410e79:	(bad)  
  410e7a:	sbb    DWORD PTR [esp+eiz*2+0x65],0x77
  410e7f:	(bad)  
  410e81:	scas   eax,DWORD PTR es:[edi]
  410e82:	in     al,dx
  410e83:	popf   
  410e84:	repnz (bad) 
  410e87:	push   ds
  410e88:	inc    edi
  410e89:	fcmovbe st,st(0)
  410e8b:	adc    ah,BYTE PTR [ebx+0x3e64da50]
  410e91:	scas   al,BYTE PTR es:[edi]
  410e92:	pusha  
  410e93:	mov    esi,edi
  410e95:	sub    eax,0x33cb09e4
  410e9a:	pop    es
  410e9b:	sbb    edx,DWORD PTR [ebx-0xe75d5cf]
  410ea1:	pop    esp
  410ea2:	mov    ebp,0x50929a92
  410ea7:	dec    edx
  410ea8:	push   0xf47e2520
  410ead:	xor    BYTE PTR [eax],ch
  410eaf:	mov    esp,0xe9e05f06
  410eb4:	test   al,0xba
  410eb6:	imul   eax,eax,0x841d0aaf
  410ebc:	xchg   ebp,eax
  410ebd:	mov    ds:0x2b4ae569,eax
  410ec2:	sbb    DWORD PTR [ecx-0x6a],ebx
  410ec5:	idiv   esi
  410ec7:	mov    edx,0xcfd7ca91
  410ecc:	sbb    BYTE PTR [eax-0x62],dh
  410ecf:	cli    
  410ed0:	mov    bl,0xe1
  410ed2:	and    BYTE PTR [ebp+0x6a],0xb0
  410ed6:	jmp    0xcd18:0x2397145e
  410edd:	add    eax,eax
  410edf:	jbe    0x410f2a
  410ee1:	ins    BYTE PTR es:[edi],dx
  410ee2:	out    dx,al
  410ee3:	jl     0x410efa
  410ee5:	mov    edx,ebx
  410ee7:	mov    bh,0x31
  410ee9:	xor    eax,DWORD PTR [ecx-0x61]
  410eec:	xor    ah,BYTE PTR [ebx-0x64a9ac74]
  410ef2:	jecxz  0x410eef
  410ef4:	xchg   ecx,eax
  410ef5:	jle    0x410f2d
  410ef7:	mov    edx,0xbfab8639
  410efc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410efe:	inc    edi
  410f00:	xchg   BYTE PTR [ebx-0x19],ch
  410f03:	std    
  410f04:	mov    ds:0xbf4d64d5,eax
  410f09:	inc    ebp
  410f0a:	fdiv   QWORD PTR [edi+0x25c171e9]
  410f10:	retf   
  410f11:	fidivr DWORD PTR [ebx+ebp*1]
  410f14:	pop    ebp
  410f15:	jmp    0x2854:0x5cd62202
  410f1c:	popa   
  410f1d:	enter  0x24a4,0x4e
  410f21:	push   ss
  410f22:	push   ss
  410f23:	js     0x410f58
  410f25:	out    dx,eax
  410f26:	lock sub ch,BYTE PTR ds:0xbaf59cc4
  410f2d:	mov    ebx,0xa2bd35ca
  410f32:	cmp    cl,BYTE PTR [esi-0x2]
  410f35:	or     eax,0xbccf26c5
  410f3a:	bound  esi,QWORD PTR [ecx+0x6e5a976c]
  410f40:	repz call 0x8072:0x4ea1caef
  410f48:	clc    
  410f49:	add    al,0xc3
  410f4b:	outs   dx,DWORD PTR ds:[esi]
  410f4c:	add    eax,0xb475ef84
  410f51:	jle    0x410f85
  410f53:	and    eax,0x989f8759
  410f58:	mov    edi,esp
  410f5a:	mov    ah,0x82
  410f5c:	fwait
  410f5d:	sbb    al,0x4
  410f5f:	jmp    0xc4d1:0x60d0476b
  410f66:	dec    eax
  410f67:	int    0x3c
  410f69:	test   WORD PTR [eax+0xe5aacb0],si
  410f70:	and    eax,DWORD PTR [edx+0x27]
  410f73:	dec    esp
  410f74:	lods   eax,DWORD PTR ds:[esi]
  410f75:	gs push edx
  410f77:	fidivr WORD PTR [eax]
  410f79:	xchg   ecx,eax
  410f7a:	jg     0x410f41
  410f7c:	rol    DWORD PTR [edx+eax*4],1
  410f7f:	ss pop ebx
  410f81:	push   eax
  410f82:	xchg   ebx,eax
  410f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f84:	push   ebp
  410f85:	push   0xffffffb8
  410f87:	sub    BYTE PTR [ebx+0x3a82e93b],0xea
  410f8e:	fimul  DWORD PTR [ecx]
  410f90:	ret    
  410f91:	sbb    BYTE PTR [edx+edi*2],ah
  410f94:	stos   DWORD PTR es:[edi],eax
  410f95:	pop    es
  410f96:	ins    DWORD PTR es:[edi],dx
  410f97:	ret    0xf3c9
  410f9a:	sbb    dh,bh
  410f9c:	bound  esp,QWORD PTR [eax]
  410f9e:	sbb    al,0x30
  410fa0:	cld    
  410fa1:	inc    edx
  410fa2:	test   BYTE PTR ds:0xb0ab45c4,0xd8
  410fa9:	mov    DWORD PTR [ecx+0x487f8184],esi
  410faf:	mov    ch,BYTE PTR [eax]
  410fb1:	xchg   DWORD PTR [esi+0x69],eax
  410fb4:	jle    0x410fd4
  410fb6:	ret    0xd1ed
  410fb9:	cmp    edi,edi
  410fbb:	jle    0x411038
  410fbd:	inc    ecx
  410fbe:	fsubr  QWORD PTR [edi]
  410fc0:	add    al,0xe7
  410fc2:	repnz inc ecx
  410fc4:	nop
  410fc5:	cwde   
  410fc6:	inc    esp
  410fc7:	xchg   BYTE PTR [eax-0x7d],al
  410fca:	xor    ecx,DWORD PTR [eax-0x4dee281f]
  410fd0:	add    esp,ecx
  410fd2:	xlat   BYTE PTR ds:[ebx]
  410fd3:	loopne 0x410fdc
  410fd5:	xchg   esp,eax
  410fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fd7:	mov    edi,0x1efa7031
  410fdc:	lahf   
  410fdd:	cli    
  410fde:	ret    
  410fdf:	dec    edi
  410fe0:	push   0x58
  410fe2:	les    ebp,FWORD PTR [esi-0x65]
  410fe5:	xchg   edx,eax
  410fe6:	ret    0x365
  410fe9:	jmp    0xd201:0xb3b477f1
  410ff0:	mov    esi,0x8800c3a2
  410ff5:	arpl   WORD PTR [ebx+0x73d6bd7],dx
  410ffb:	call   0x778d:0x8aa3339a
  411002:	sub    esp,DWORD PTR [ecx-0x20d25279]
  411008:	jge    0x41106e
  41100a:	add    ebx,DWORD PTR [ecx+0x1727f606]
  411010:	sar    ah,cl
  411012:	in     eax,dx
  411013:	push   cs
  411014:	push   es
  411015:	out    dx,eax
  411016:	xor    bl,BYTE PTR [ebx+0x4c5b344b]
  41101c:	lahf   
  41101d:	fs inc ebx
  41101f:	push   0x683030f3
  411024:	rcl    ah,cl
  411026:	mov    eax,ds:0xef59b40a
  41102b:	lods   al,BYTE PTR ds:[esi]
  41102c:	and    al,0xa1
  41102e:	cmpps  xmm3,XMMWORD PTR [ebx+ebp*4-0x2fcf04da],0x69
  411037:	xchg   esp,eax
  411038:	dec    ebx
  411039:	sub    ebp,DWORD PTR [esi]
  41103b:	mov    cl,0x95
  41103d:	push   cs
  41103e:	stos   BYTE PTR es:[edi],al
  41103f:	cmp    BYTE PTR ds:0x32b31756,ch
  411045:	mov    eax,ds:0xdd67f46f
  41104a:	sahf   
  41104b:	aad    0x92
  41104d:	call   0x3b8e:0x6d553536
  411054:	and    BYTE PTR [edx+ebx*4],dl
  411057:	dec    edi
  411058:	adc    DWORD PTR [esi-0x7d75a81c],edi
  41105e:	fnsave [esi+0x2c8f52e9]
  411064:	and    ebx,DWORD PTR [edi+0x283da5b0]
  41106a:	inc    edx
  41106c:	adc    esp,DWORD PTR [ecx-0x7a]
  41106f:	mov    ds:0xf804ef98,al
  411074:	and    al,0x48
  411076:	mov    edx,0x5815b56c
  41107b:	scas   eax,DWORD PTR es:[edi]
  41107c:	outs   dx,BYTE PTR ds:[esi]
  41107d:	push   ecx
  41107e:	inc    ebp
  41107f:	push   esp
  411080:	rol    ebp,1
  411082:	out    dx,al
  411083:	lods   eax,DWORD PTR ds:[esi]
  411084:	call   0x124c:0x502bf6e5
  41108b:	inc    esp
  41108c:	imul   edi,DWORD PTR es:[edi],0x40512cfc
  411093:	push   0x962b3680
  411098:	lods   eax,DWORD PTR ds:[esi]
  411099:	xchg   edi,eax
  41109a:	mov    BYTE PTR [edi+0x33d24da1],dh
  4110a0:	ret    
  4110a1:	cld    
  4110a2:	mov    ds:0xaf1b7956,al
  4110a7:	(bad)  
  4110a8:	mov    ebp,0x4911cc5f
  4110ad:	inc    esp
  4110ae:	mov    bl,0xf2
  4110b0:	adc    BYTE PTR ss:[edi+ebx*8-0x16],bl
  4110b5:	inc    eax
  4110b6:	push   edx
  4110b7:	or     DWORD PTR [ecx-0xe3037bf],ebp
  4110bd:	leave  
  4110be:	outs   dx,BYTE PTR ds:[esi]
  4110bf:	xchg   edx,eax
  4110c0:	sbb    al,ch
  4110c2:	lahf   
  4110c3:	xlat   BYTE PTR ds:[ebx]
  4110c4:	or     al,0x5c
  4110c6:	fcomp  st(6)
  4110c8:	push   edx
  4110c9:	jge    0x411090
  4110cb:	add    eax,0xc5070d6
  4110d0:	out    dx,al
  4110d1:	mov    ebx,0xf67172e8
  4110d6:	dec    esi
  4110d7:	rol    dl,1
  4110d9:	xlat   BYTE PTR ds:[ebx]
  4110da:	inc    eax
  4110db:	push   esi
  4110dc:	jmp    0xd6eff76b
  4110e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110e2:	(bad)  
  4110e3:	(bad)  
  4110e5:	ins    DWORD PTR es:[edi],dx
  4110e6:	loope  0x411111
  4110e8:	mov    WORD PTR [ebx],?
  4110ea:	pop    ds
  4110eb:	mov    edx,0xaeda4912
  4110f0:	inc    edi
  4110f1:	in     al,0x6
  4110f3:	ins    BYTE PTR es:[edi],dx
  4110f4:	repz dec ebx
  4110f6:	sub    BYTE PTR ds:[edx-0x386fd95b],ah
  4110fd:	ja     0x41114a
  4110ff:	xchg   esp,eax
  411100:	inc    ebx
  411101:	fnstsw WORD PTR [edi+edx*8-0x7be16e91]
  411108:	(bad)  
  411109:	enter  0x624c,0x46
  41110d:	scas   al,BYTE PTR es:[edi]
  41110e:	mov    edx,0x1f790d73
  411113:	xor    al,0x9b
  411115:	push   edx
  411116:	jl     0x4110ae
  411118:	icebp  
  411119:	mov    ah,al
  41111b:	stos   DWORD PTR es:[edi],eax
  41111c:	jge    0x4110d6
  41111e:	push   edi
  41111f:	clc    
  411120:	adc    esp,DWORD PTR [edi-0x3]
  411123:	jmp    0x411135
  411125:	mov    ah,0x51
  411127:	mov    ecx,0x6ca8a884
  41112c:	add    al,0x28
  41112e:	pushf  
  41112f:	ret    
  411130:	in     eax,0x42
  411132:	(bad)  
  411135:	xchg   edi,eax
  411136:	out    0x1d,al
  411138:	add    BYTE PTR [ebp-0xdf981f4],al
  41113e:	dec    esp
  41113f:	out    dx,eax
  411140:	ror    DWORD PTR [ebx+0x31e23e7b],1
  411146:	bound  esi,QWORD PTR [eax-0x69]
  411149:	xchg   ebx,eax
  41114a:	or     eax,0xcc1016fb
  41114f:	pop    ss
  411150:	sahf   
  411151:	jne    0x4111af
  411153:	into   
  411154:	sub    edx,0x2c53c61b
  41115a:	pop    ebp
  41115b:	push   edi
  41115c:	out    0x29,eax
  41115e:	sar    DWORD PTR [edi+0x559f6790],1
  411164:	and    BYTE PTR [esi+0x71],ah
  411167:	test   eax,0x174f382d
  41116c:	clc    
  41116d:	jb     0x411127
  41116f:	fcmovu st,st(1)
  411171:	push   DWORD PTR [ebp+eax*4+0x5e40fdce]
  411178:	popa   
  411179:	mov    bh,0x3b
  41117b:	sub    BYTE PTR [ecx-0x45fd20dd],bl
  411181:	imul   ecx,DWORD PTR [ebx+edi*2],0xa73c85ec
  411188:	cmp    al,0x56
  41118a:	sub    esi,esi
  41118c:	push   esp
  41118d:	pusha  
  41118e:	test   BYTE PTR [esi],cl
  411190:	xor    eax,0x415e7406
  411195:	and    ebp,DWORD PTR [ecx-0x6fa8eda]
  41119b:	imul   edx,edi,0xffffff9a
  41119e:	jbe    0x411202
  4111a0:	ins    BYTE PTR es:[edi],dx
  4111a1:	(bad)  
  4111a2:	aam    0xf6
  4111a4:	xor    DWORD PTR [ebx-0xcfb8648],eax
  4111aa:	dec    ecx
  4111ab:	or     eax,0xee6e672c
  4111b0:	xchg   DWORD PTR [edx-0xfde5b98],edi
  4111b6:	cmp    DWORD PTR [ebx],ebx
  4111b8:	mov    ebx,ds
  4111ba:	jb     0x41121d
  4111bc:	xchg   edx,eax
  4111bd:	xor    ecx,ebx
  4111bf:	sub    edx,ecx
  4111c1:	mov    dh,0xf5
  4111c3:	shr    edi,1
  4111c5:	int    0xc
  4111c7:	and    ah,BYTE PTR [eax]
  4111c9:	nop
  4111ca:	jge    0x411226
  4111cc:	jp     0x4111d3
  4111ce:	outs   dx,BYTE PTR ds:[esi]
  4111cf:	popa   
  4111d0:	mov    cl,0xe1
  4111d2:	push   edx
  4111d3:	push   ebp
  4111d4:	mov    BYTE PTR [edi+ecx*1],0x15
  4111d8:	inc    edi
  4111d9:	ins    DWORD PTR es:[edi],dx
  4111da:	ficom  WORD PTR [ebx-0x1c]
  4111dd:	cwde   
  4111de:	inc    edx
  4111df:	mov    dl,BYTE PTR [eax-0x45]
  4111e2:	push   ds
  4111e3:	add    bh,ah
  4111e5:	push   ecx
  4111e6:	outs   dx,BYTE PTR ds:[esi]
  4111e7:	adc    eax,0xe914af47
  4111ec:	ins    DWORD PTR es:[edi],dx
  4111ed:	push   0x262f2fa6
  4111f2:	cmp    bh,BYTE PTR [esi]
  4111f4:	or     al,0x79
  4111f6:	jg     0x411202
  4111f8:	mov    bh,0xdd
  4111fa:	mov    BYTE PTR [ecx+edx*4+0x12e414ea],cl
  411201:	fld    DWORD PTR [esi+eiz*2+0x237d8651]
  411208:	(bad)  
  411209:	and    eax,0x499894b9
  41120e:	stc    
  41120f:	sub    dh,BYTE PTR [esi-0x62]
  411212:	int3   
  411213:	ins    BYTE PTR es:[edi],dx
  411214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411215:	fisttp DWORD PTR ds:0x4dbed6b8
  41121b:	jb     0x411233
  41121d:	sar    DWORD PTR [ebx+esi*8],cl
  411220:	dec    ebp
  411221:	ror    BYTE PTR [edx-0x14ce2ac1],0xe2
  411228:	popf   
  411229:	fdivp  st(3),st
  41122b:	pop    esp
  41122c:	jne    0x4111f5
  41122e:	fscale 
  411230:	jno    0x411288
  411232:	sbb    BYTE PTR [ecx+0x13],al
  411235:	sti    
  411236:	int    0x79
  411238:	mov    ?,WORD PTR [ebp+0x73effc1c]
  41123e:	loop   0x41121a
  411240:	mov    esp,0xcd370c99
  411245:	sub    dh,BYTE PTR [ebx-0x59d832f4]
  41124b:	push   ebp
  41124c:	mov    ch,0x9e
  41124e:	dec    esi
  41124f:	push   ebx
  411250:	or     bl,BYTE PTR [esi]
  411252:	cli    
  411253:	mul    BYTE PTR [eax-0x35777dce]
  411259:	and    DWORD PTR [edx-0x75],0xae436013
  411260:	call   0xce5c7868
  411265:	mov    ebp,0x3f56cb62
  41126a:	inc    edx
  41126b:	sbb    ch,ah
  41126d:	jmp    0xea3b:0x2bd225f4
  411274:	sub    BYTE PTR [esi+edi*8],dl
  411277:	out    dx,al
  411278:	add    ebp,DWORD PTR [eax]
  41127a:	or     ecx,DWORD PTR [esi+0x25]
  41127d:	sar    BYTE PTR [ebx],0x7a
  411280:	lods   al,BYTE PTR ds:[esi]
  411281:	cmp    al,0x66
  411283:	out    0x5a,eax
  411285:	cdq    
  411286:	mov    dl,0xff
  411288:	mov    ecx,DWORD PTR [esi+0x3b]
  41128b:	inc    ebx
  41128c:	js     0x411308
  41128e:	lods   eax,DWORD PTR ds:[esi]
  41128f:	push   es
  411290:	jno    0x4112c5
  411292:	(bad)  
  411293:	dec    esp
  411294:	ins    BYTE PTR es:[edi],dx
  411295:	mov    edx,0x23755c6f
  41129a:	xor    esp,esi
  41129c:	aad    0xec
  41129e:	jecxz  0x4112e6
  4112a0:	(bad)  
  4112a1:	jno    0x41126c
  4112a3:	es dec ebx
  4112a5:	retf   
  4112a6:	call   0x855c:0xf2b0aa4c
  4112ad:	shl    DWORD PTR [ecx+0x4e],0x23
  4112b1:	popf   
  4112b2:	push   0x4d
  4112b4:	in     eax,0xb
  4112b6:	push   edx
  4112b7:	or     esp,esp
  4112b9:	inc    esp
  4112ba:	cld    
  4112bb:	leave  
  4112bc:	in     al,0x6b
  4112be:	jns    0x4112e0
  4112c0:	jae    0x4112d8
  4112c2:	pop    esi
  4112c3:	dec    ebx
  4112c4:	ja     0x41133e
  4112c6:	add    ah,BYTE PTR [esi]
  4112c8:	inc    edx
  4112c9:	lods   al,BYTE PTR ds:[esi]
  4112ca:	test   eax,0xbb46d8ab
  4112cf:	or     al,0x8b
  4112d1:	push   esi
  4112d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112d3:	das    
  4112d4:	mov    eax,ds:0xf6bd7d9f
  4112d9:	ja     0x4112bf
  4112db:	dec    ebp
  4112dc:	cld    
  4112dd:	stc    
  4112de:	push   eax
  4112df:	inc    BYTE PTR ds:0x38baa5a1
  4112e5:	sti    
  4112e6:	sub    BYTE PTR [esi],bh
  4112e8:	ror    ch,1
  4112ea:	push   ss
  4112eb:	add    al,0x79
  4112ed:	push   edi
  4112ee:	jae    0x411297
  4112f0:	int3   
  4112f1:	sbb    edi,ebp
  4112f3:	aad    0x1f
  4112f5:	jo     0x41132e
  4112f7:	fs xchg esi,eax
  4112f9:	dec    eax
  4112fa:	inc    esi
  4112fb:	(bad)  
  4112fc:	addr16 sub eax,0xf9248e68
  411302:	adc    al,0xd2
  411304:	fwait
  411305:	xchg   ebx,eax
  411306:	and    eax,0x7c0654cc
  41130b:	iret   
  41130c:	sbb    dl,BYTE PTR [edx-0x30]
  41130f:	xor    dl,ch
  411311:	sub    DWORD PTR ds:0x26d822a7,edx
  411317:	pop    ebx
  411318:	mov    ebx,DWORD PTR [edx]
  41131a:	test   DWORD PTR [ebp+ebx*1+0x2c],edx
  41131e:	jmp    0x388767bf
  411323:	push   0x5d6a36f3
  411328:	repz adc esi,esp
  41132b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41132c:	inc    ecx
  41132d:	scas   eax,DWORD PTR es:[edi]
  41132e:	sub    DWORD PTR [edx+0x4a],ebx
  411331:	xchg   DWORD PTR [ebp+0x41],eax
  411334:	xchg   esp,eax
  411335:	mul    dl
  411337:	fiadd  WORD PTR [edx-0x5e]
  41133a:	adc    eax,edx
  41133c:	mov    ecx,0x80db5ff5
  411341:	mov    bh,0xfa
  411343:	hlt    
  411344:	cmp    ch,bh
  411346:	call   FWORD PTR [edx]
  411348:	dec    eax
  411349:	aas    
  41134a:	xchg   bl,dl
  41134c:	push   ss
  41134d:	(bad)  
  41134e:	in     al,0x82
  411350:	enter  0xc3a9,0x31
  411354:	inc    edi
  411355:	and    BYTE PTR [edi-0x77b9e1c],dh
  41135b:	adc    eax,0x8d386936
  411360:	or     bh,BYTE PTR [ebp+eax*4-0x71296427]
  411367:	call   0x91d5:0x154822af
  41136e:	mov    ebp,0x5c2f3606
  411373:	pushf  
  411374:	add    esi,DWORD PTR [ecx]
  411376:	mov    ds:0x85ddc442,al
  41137b:	jne    0x411369
  41137d:	add    DWORD PTR [ebp+0x234215cc],edx
  411383:	sub    eax,0xc42f431
  411388:	in     al,0x7a
  41138a:	dec    eax
  41138b:	jo     0x41135e
  41138d:	dec    eax
  41138e:	jae    0x411311
  411390:	sbb    DWORD PTR [eax],ebp
  411392:	mov    DWORD PTR [edi],esp
  411394:	sti    
  411395:	xchg   BYTE PTR [edi],bh
  411397:	pushf  
  411398:	cmc    
  411399:	int    0x7a
  41139b:	ret    
  41139c:	inc    esp
  41139d:	(bad)  
  41139f:	in     eax,0x4c
  4113a1:	adc    DWORD PTR ds:0x564cc223,edx
  4113a7:	cmp    al,0xba
  4113a9:	jo     0x41133c
  4113ab:	push   ecx
  4113ac:	loopne 0x4113fd
  4113ae:	arpl   WORD PTR [edi+0x1e],cx
  4113b1:	nop
  4113b2:	xchg   esp,eax
  4113b3:	mov    eax,0x29e5427d
  4113b8:	in     eax,0x85
  4113ba:	shl    ebx,cl
  4113bc:	ja     0x41135c
  4113be:	push   ss
  4113bf:	mov    WORD PTR [edi-0x4d675381],cs
  4113c5:	mov    edx,0x40b4a746
  4113ca:	push   eax
  4113cb:	xchg   ebx,eax
  4113cc:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4113ce:	sub    DWORD PTR [eax+ebx*4+0x5a6c7150],edi
  4113d5:	fisub  DWORD PTR [eax]
  4113d7:	pop    esp
  4113d8:	clc    
  4113d9:	push   edx
  4113da:	fnsave [eax+ecx*2]
  4113dd:	push   eax
  4113de:	into   
  4113df:	add    dh,BYTE PTR [eax+0xe103c3]
  4113e5:	(bad)  
  4113e6:	fnstsw WORD PTR [ebp+0x59e99b31]
  4113ec:	scas   al,BYTE PTR es:[edi]
  4113ed:	pop    ss
  4113ee:	and    al,BYTE PTR [edi]
  4113f0:	mov    al,ds:0x9e737294
  4113f5:	or     DWORD PTR [eax],edx
  4113f7:	xchg   ebx,eax
  4113f8:	fcomp  DWORD PTR [esp+ecx*1-0x32354463]
  4113ff:	xor    eax,0xd3fe10fe
  411404:	test   DWORD PTR [edx-0xf],edx
  411407:	inc    ecx
  411408:	and    al,0xe1
  41140a:	xor    eax,0x7910e4d3
  41140f:	xchg   esp,eax
  411410:	das    
  411411:	jg     0x411465
  411413:	xchg   ebp,eax
  411414:	outs   dx,DWORD PTR ds:[esi]
  411415:	in     al,dx
  411416:	mov    esp,0x8b100659
  41141b:	inc    ebx
  41141c:	or     DWORD PTR [edx],ebp
  41141e:	hlt    
  41141f:	loopne 0x4113fa
  411421:	rcr    DWORD PTR [ebp-0x43],cl
  411424:	mov    edx,0xf03ad1ab
  411429:	or     al,0xe8
  41142b:	mov    al,ds:0xa4961f78
  411430:	test   eax,0x8134f413
  411435:	(bad)  [esi]
  411437:	mov    bl,0x9b
  411439:	xchg   esi,eax
  41143a:	and    edi,DWORD PTR [edx]
  41143c:	arpl   WORD PTR [ebp-0x428d1457],dx
  411442:	das    
  411443:	push   edi
  411444:	call   DWORD PTR [ecx-0x5a49ec8f]
  41144a:	mov    WORD PTR [ebp-0x20],ss
  41144d:	mov    bh,0x90
  41144f:	xchg   ebx,eax
  411450:	mov    WORD PTR [edi-0x22],ds
  411453:	paddsb mm1,QWORD PTR [esi+esi*4+0x3a]
  411458:	bound  esp,QWORD PTR [edi+0x18]
  41145b:	xchg   edx,eax
  41145c:	ins    BYTE PTR es:[edi],dx
  41145d:	sbb    ebp,ebp
  41145f:	cdq    
  411460:	pop    eax
  411461:	stc    
  411462:	clc    
  411463:	xchg   ecx,eax
  411464:	inc    edi
  411465:	sbb    al,0x5e
  411467:	xor    ch,BYTE PTR [bx+si-0x58c2]
  41146c:	sub    eax,0xad677b58
  411471:	mov    dl,0xb
  411473:	pop    ss
  411474:	aas    
  411475:	test   DWORD PTR [edi],0x30de150d
  41147b:	mov    dl,0x86
  41147d:	adc    ch,bl
  41147f:	fadd   st,st(1)
  411481:	cmc    
  411482:	mov    bh,0x38
  411484:	mov    dh,0xe0
  411486:	call   0xc188701a
  41148b:	xlat   BYTE PTR ds:[ebx]
  41148c:	enter  0x9c57,0x16
  411490:	or     BYTE PTR [edx+edi*1-0x2b06a2eb],dl
  411497:	test   DWORD PTR [eax-0x30],eax
  41149a:	cmp    BYTE PTR [ebp+0x45],dh
  41149d:	xor    al,0x8b
  41149f:	jge    0x411465
  4114a1:	and    eax,DWORD PTR [ebp-0x57215840]
  4114a7:	push   0xe9e2c7cf
  4114ac:	xor    BYTE PTR [ebx],al
  4114ae:	adc    bl,bl
  4114b0:	std    
  4114b1:	xchg   esp,eax
  4114b2:	mov    fs,WORD PTR [esi]
  4114b4:	lea    eax,[edx+esi*8-0x15]
  4114b8:	fwait
  4114b9:	loop   0x4114be
  4114bb:	dec    edx
  4114bc:	mov    dh,0xc
  4114be:	dec    DWORD PTR [ecx]
  4114c0:	mov    ch,0x8b
  4114c2:	in     al,0xd6
  4114c4:	mov    dl,0xde
  4114c6:	jmp    0x411466
  4114c8:	das    
  4114c9:	and    DWORD PTR [edx-0x46],edi
  4114cc:	adc    edx,DWORD PTR [edx]
  4114ce:	or     DWORD PTR [ebx+0x69],edx
  4114d1:	mov    edi,0x72259d1c
  4114d6:	jns    0x41147a
  4114d8:	xchg   esi,eax
  4114d9:	lock dec ecx
  4114db:	(bad)  
  4114dc:	das    
  4114dd:	jl     0x41151d
  4114df:	cwde   
  4114e0:	fld    st(1)
  4114e2:	pop    esp
  4114e3:	ret    0xab78
  4114e6:	imul   edx,DWORD PTR [ebp-0x2d18ce4],0xffffffc7
  4114ed:	mov    DWORD PTR [edi+0xa8f2734],esp
  4114f3:	mov    ds:0xb0434dc5,eax
  4114f8:	xor    ch,BYTE PTR [eax-0x304f8f3d]
  4114fe:	adc    al,0xe9
  411500:	dec    eax
  411501:	out    dx,eax
  411502:	pop    ds
  411503:	dec    esi
  411504:	test   BYTE PTR [ebp+0x66ffa741],bh
  41150a:	mov    eax,0x876f1942
  41150f:	fmul   QWORD PTR [esi+0x55]
  411512:	test   al,0x76
  411514:	call   0xc05b:0x2fb92a8b
  41151b:	cmp    eax,0x9782fdbe
  411520:	xchg   esi,eax
  411521:	mov    ?,WORD PTR [esp+edi*1-0x4cd3b646]
  411528:	pop    es
  411529:	mov    ch,0x60
  41152b:	xchg   ecx,eax
  41152c:	fcomp  QWORD PTR [edi+0x22468c75]
  411532:	test   DWORD PTR [edi],0x2a6335d
  411538:	cmp    DWORD PTR [edi-0x24],0xffffffed
  41153c:	sbb    cl,BYTE PTR [ecx-0x3e15b0cc]
  411542:	fs loopne 0x4114fc
  411545:	adc    DWORD PTR [edx+0x5f],edi
  411548:	rcr    DWORD PTR [esi],cl
  41154a:	pop    ecx
  41154b:	jns    0x4114fd
  41154d:	jo     0x4114fc
  41154f:	xchg   DWORD PTR [edi],ebx
  411551:	mov    gs,edx
  411553:	outs   dx,BYTE PTR ds:[esi]
  411554:	hlt    
  411555:	js     0x4115bf
  411557:	sbb    BYTE PTR [ebp-0x80],cl
  41155a:	clc    
  41155b:	leave  
  41155c:	mov    eax,ds:0x2249be16
  411561:	ja     0x4114fa
  411563:	rcr    DWORD PTR [ebx+edx*8+0x32],1
  411567:	stc    
  411568:	lahf   
  411569:	pop    ecx
  41156a:	push   ebp
  41156b:	or     dh,BYTE PTR [ebp+0x32296518]
  411571:	std    
  411572:	jne    0x4115c1
  411574:	ss dec esi
  411576:	pop    ss
  411577:	idiv   BYTE PTR [edi-0x10]
  41157a:	push   edi
  41157b:	clc    
  41157c:	lods   eax,DWORD PTR ds:[esi]
  41157d:	or     al,0x6
  41157f:	inc    ecx
  411580:	jg     0x4115ff
  411582:	and    DWORD PTR [edx+0x1c],edx
  411585:	daa    
  411586:	hlt    
  411587:	pop    edx
  411588:	dec    ebp
  411589:	fabs   
  41158b:	lods   eax,DWORD PTR ds:[esi]
  41158c:	fmul   QWORD PTR [ebp+0x5c485659]
  411592:	mov    ebp,0x26800524
  411597:	pop    ss
  411598:	arpl   WORD PTR [ecx],cx
  41159a:	dec    ebp
  41159b:	push   cs
  41159c:	mov    dl,0xd8
  41159e:	loopne 0x4115ce
  4115a0:	jno    0x411527
  4115a2:	jns    0x4115c4
  4115a4:	das    
  4115a5:	daa    
  4115a6:	xor    BYTE PTR ds:[edi+0x1e32523b],dh
  4115ad:	xor    eax,DWORD PTR [ecx]
  4115af:	inc    edx
  4115b0:	in     al,dx
  4115b1:	stc    
  4115b2:	aam    0x73
  4115b4:	stos   BYTE PTR es:[edi],al
  4115b5:	popa   
  4115b6:	xlat   BYTE PTR ds:[ebx]
  4115b7:	sahf   
  4115b8:	mov    ds:0x6dc0fc1d,al
  4115bd:	mov    esi,0xd5379ad2
  4115c2:	and    DWORD PTR [ebx+0x2b],esp
  4115c5:	ins    BYTE PTR es:[edi],dx
  4115c6:	ret    0xf763
  4115c9:	repnz cmp ah,bl
  4115cc:	bound  ebp,QWORD PTR [esi]
  4115ce:	popf   
  4115cf:	lods   al,BYTE PTR ds:[esi]
  4115d0:	shr    ecx,cl
  4115d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d3:	test   al,0x54
  4115d5:	xchg   DWORD PTR [ebx],esi
  4115d7:	adc    al,0x17
  4115d9:	lock cmp cl,BYTE PTR [eax+0x92ddde9]
  4115e0:	nop
  4115e1:	lahf   
  4115e2:	and    cl,BYTE PTR [ebx-0x67]
  4115e5:	sub    al,0x1a
  4115e7:	xchg   ebp,eax
  4115e8:	pop    es
  4115e9:	call   0x8085:0x39ca8638
  4115f0:	pop    ss
  4115f1:	mov    esi,DWORD PTR [ebp+0x7a]
  4115f4:	dec    ebp
  4115f5:	pop    ecx
  4115f6:	mov    BYTE PTR [ebx+eiz*4-0x61c53a83],ah
  4115fd:	aad    0x82
  4115ff:	je     0x4115a9
  411601:	xchg   DWORD PTR [ecx+eax*8],edi
  411604:	stc    
  411605:	ds pop ecx
  411607:	inc    esp
  411608:	out    dx,al
  411609:	imul   edi,DWORD PTR [ebx+0x4e],0xfb946ec8
  411610:	loop   0x4115dd
  411612:	dec    eax
  411613:	cdq    
  411614:	arpl   WORD PTR [edx],dx
  411616:	jl     0x4115be
  411618:	sbb    al,0x61
  41161a:	outs   dx,DWORD PTR ds:[esi]
  41161b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41161c:	adc    edi,DWORD PTR [edx+ebx*4-0x7fb161a2]
  411623:	fbld   TBYTE PTR [ebx+0x5e]
  411626:	scas   al,BYTE PTR es:[edi]
  411627:	in     eax,dx
  411628:	fisttp WORD PTR [ecx-0x4b]
  41162b:	mov    dh,BYTE PTR [ebx+edi*1+0x4b123757]
  411632:	cdq    
  411633:	daa    
  411634:	dec    ebx
  411635:	and    BYTE PTR [esi],bl
  411637:	cmp    BYTE PTR [ebx-0x2b888a19],bh
  41163d:	neg    DWORD PTR [edx-0x5ccaaa94]
  411643:	jb     0x411681
  411645:	in     eax,dx
  411646:	push   edi
  411647:	pop    ebp
  411648:	add    al,0x2a
  41164a:	or     al,0xf0
  41164c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41164d:	aad    0x97
  41164f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411650:	in     al,dx
  411651:	fs repz in al,dx
  411654:	adc    bh,BYTE PTR [edi+eax*4]
  411657:	dec    esi
  411658:	dec    ecx
  411659:	adc    DWORD PTR [ebx-0x72a8fb62],ecx
  41165f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411660:	test   DWORD PTR [esi+eax*8+0x37],esi
  411664:	fimul  WORD PTR ds:0xff1cdd3
  41166a:	sahf   
  41166b:	pusha  
  41166c:	pop    ds
  41166d:	repnz test DWORD PTR [ecx],ebp
  411670:	push   eax
  411671:	stos   BYTE PTR es:[edi],al
  411672:	mov    ebp,DWORD PTR [eax]
  411674:	in     eax,dx
  411675:	(bad)  
  411676:	jb     0x41169b
  411678:	loopne 0x411686
  41167a:	jmp    0xbf25:0x58aa3a41
  411681:	cmp    DWORD PTR [eax-0x43],edx
  411684:	aas    
  411685:	dec    ebx
  411686:	fs push ebp
  411688:	cmc    
  411689:	fisub  DWORD PTR ds:0xded38873
  41168f:	inc    edi
  411690:	imul   BYTE PTR [ecx-0x1639e9c9]
  411696:	lods   al,BYTE PTR ds:[esi]
  411697:	sbb    eax,0xc4c55bb5
  41169c:	in     eax,dx
  41169d:	hlt    
  41169e:	cmc    
  41169f:	fstp   TBYTE PTR [eax]
  4116a1:	jae    0x4116b8
  4116a3:	(bad)  
  4116a4:	adc    DWORD PTR [edi+edi*4-0x36],edx
  4116a8:	pushf  
  4116a9:	jmp    0xc3f7b94a
  4116ae:	popa   
  4116af:	iret   
  4116b0:	dec    edx
  4116b1:	gs cs mov bh,0x57
  4116b5:	or     al,0x7c
  4116b7:	nop
  4116b8:	icebp  
  4116b9:	jnp    0x4116cd
  4116bb:	lahf   
  4116bc:	push   ecx
  4116bd:	dec    ebx
  4116be:	sub    DWORD PTR [ebx-0x1f075dcd],ebp
  4116c4:	adc    DWORD PTR [edx+0x362612ea],esp
  4116ca:	cmp    eax,edi
  4116cc:	push   esi
  4116cd:	lock mov bl,0x1
  4116d0:	lods   al,BYTE PTR ds:[esi]
  4116d1:	outs   dx,BYTE PTR ds:[esi]
  4116d2:	inc    esi
  4116d3:	iret   
  4116d4:	or     ebp,DWORD PTR [ebx+0x4662113f]
  4116da:	dec    ebp
  4116db:	dec    esi
  4116dc:	dec    ebx
  4116dd:	mov    ebp,0x87e9d20d
  4116e2:	inc    edx
  4116e3:	dec    ebp
  4116e4:	xchg   BYTE PTR [ebx],cl
  4116e6:	xlat   BYTE PTR ds:[ebx]
  4116e7:	or     al,0x5c
  4116e9:	adc    esp,ebx
  4116eb:	out    0x2f,eax
  4116ed:	add    eax,DWORD PTR [ebp-0x88dc0ba]
  4116f3:	iret   
  4116f4:	adc    al,0xac
  4116f6:	push   ds
  4116f7:	sub    ah,BYTE PTR [eax+0x0]
  4116fa:	mov    eax,0xc1313fd0
  4116ff:	jp     0x411701
  411701:	test   eax,0xbec49cf9
  411706:	add    edi,DWORD PTR ds:0x38e161ce
  41170c:	aas    
  41170d:	cld    
  41170e:	xchg   BYTE PTR [ecx],ah
  411710:	xchg   DWORD PTR [eax],eax
  411712:	or     dl,BYTE PTR [edx]
  411714:	inc    ebx
  411715:	outs   dx,BYTE PTR ds:[esi]
  411716:	xchg   esp,eax
  411717:	sub    eax,0x24b87ba5
  41171c:	sti    
  41171d:	mov    al,BYTE PTR [eax]
  41171f:	push   esi
  411720:	(bad)  
  411721:	les    edx,FWORD PTR [eax+0x3c]
  411724:	aam    0x5f
  411726:	and    cl,BYTE PTR [esi]
  411728:	aam    0x83
  41172a:	(bad)  
  41172b:	(bad)  
  41172e:	lds    ebp,FWORD PTR [ecx-0x1506b748]
  411734:	inc    ecx
  411735:	jmp    FWORD PTR ds:[edi]
  411738:	lahf   
  411739:	jmp    0x3690bee9
  41173e:	jp     0x41173c
  411740:	cmp    bl,ch
  411742:	mov    bl,0x4b
  411744:	fild   QWORD PTR [ebx]
  411746:	stos   DWORD PTR es:[edi],eax
  411747:	push   esi
  411748:	jae    0x411722
  41174a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41174b:	push   ss
  41174c:	xor    eax,0xf05732f2
  411751:	popf   
  411752:	je     0x4116f7
  411754:	pop    ss
  411755:	mov    WORD PTR [edx-0x59],?
  411758:	ret    0x4786
  41175b:	(bad)  
  41175c:	rol    BYTE PTR [ecx],cl
  41175e:	in     eax,0x7a
  411760:	aam    0x6b
  411762:	outs   dx,BYTE PTR ds:[esi]
  411763:	lods   eax,DWORD PTR ds:[esi]
  411764:	push   ebp
  411765:	pop    ss
  411766:	ret    0xba9e
  411769:	push   ss
  41176a:	test   DWORD PTR [eax],esp
  41176c:	sbb    DWORD PTR [eax],ecx
  41176e:	inc    esp
  41176f:	enter  0xfc25,0xab
  411773:	push   edx
  411774:	js     0x411776
  411776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411777:	pushf  
  411778:	call   0x5ead:0xb796a9cf
  41177f:	into   
  411780:	jge    0x41172a
  411782:	xchg   ebp,eax
  411783:	mov    cl,BYTE PTR [ebx+ecx*1+0x2ca19f7f]
  41178a:	xchg   esp,eax
  41178b:	dec    eax
  41178c:	mov    edi,0xb5f789bd
  411791:	mov    al,ds:0xd0325430
  411796:	outs   dx,BYTE PTR ds:[esi]
  411797:	or     dl,bh
  411799:	jle    0x411761
  41179b:	scas   eax,DWORD PTR es:[edi]
  41179c:	sbb    al,0xf4
  41179e:	outs   dx,BYTE PTR ds:[esi]
  41179f:	xchg   esp,eax
  4117a0:	dec    ebp
  4117a2:	mov    eax,0x41a99be5
  4117a7:	enter  0xe1cf,0x28
  4117ab:	mov    BYTE PTR [edx+0xe],dl
  4117ae:	pop    es
  4117af:	dec    ebp
  4117b0:	sub    DWORD PTR [ecx],esp
  4117b2:	iret   
  4117b3:	call   0xc989:0xb89c8d94
  4117ba:	mov    dh,0x1b
  4117bc:	jl     0x411833
  4117be:	dec    edx
  4117bf:	test   edi,ebp
  4117c1:	jp     0x4117a4
  4117c3:	push   esi
  4117c4:	pop    edi
  4117c5:	xor    DWORD PTR [edx+ebp*2+0x46bbc14f],edi
  4117cc:	mov    ecx,eax
  4117ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117cf:	push   eax
  4117d0:	and    ah,ah
  4117d2:	int3   
  4117d3:	cmc    
  4117d4:	pop    ds
  4117d5:	mov    ch,0xcf
  4117d7:	xor    esp,DWORD PTR [edx-0x6a8dbf3f]
  4117dd:	ret    
  4117de:	xchg   BYTE PTR [ebx+0x2236ff33],dl
  4117e4:	hlt    
  4117e5:	sub    DWORD PTR [ecx+edi*4],ebp
  4117e8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ea:	mov    al,0x5b
  4117ec:	scas   al,BYTE PTR es:[edi]
  4117ed:	cs sub eax,0xd0a43e8
  4117f3:	jo     0x411849
  4117f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117f6:	stos   DWORD PTR es:[edi],eax
  4117f7:	shld   DWORD PTR [esi],ecx,0x4f
  4117fb:	dec    eax
  4117fc:	into   
  4117fd:	rcl    BYTE PTR [ecx+0x78],1
  411800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411801:	shl    BYTE PTR [edi+0x6d7e985f],cl
  411807:	int    0x13
  411809:	mov    ebp,0x8ab3f9e1
  41180e:	jmp    0x2f4bf63e
  411813:	and    eax,0x420de963
  411818:	fbstp  TBYTE PTR [edx+eax*8]
  41181b:	push   0xffffff8a
  41181d:	or     BYTE PTR [ebp+0x40db4fa5],0xc4
  411824:	sbb    BYTE PTR [ebx-0x46],0x93
  411828:	inc    edi
  411829:	lea    ebx,[ebp-0x19]
  41182c:	mov    ebx,0xfc8a6d3c
  411831:	jo     0x4117ef
  411833:	add    al,BYTE PTR [edi]
  411835:	sbb    eax,0x4f1db82d
  41183a:	sbb    edi,ebp
  41183c:	mov    dh,al
  41183e:	dec    ebx
  41183f:	(bad)  
  411840:	jg     0x41184c
  411842:	pop    edx
  411843:	loop   0x4117e3
  411845:	push   eax
  411846:	inc    esp
  411847:	and    eax,esi
  411849:	aas    
  41184a:	jb     0x4117e6
  41184c:	std    
  41184d:	sbb    al,0xb2
  41184f:	pusha  
  411850:	rcr    BYTE PTR [ebx-0x4c],1
  411853:	fdiv   DWORD PTR [ecx-0x59a3dde4]
  411859:	xor    cl,al
  41185b:	sbb    BYTE PTR [ecx-0x65931981],al
  411861:	call   0x9ee24b90
  411866:	ins    BYTE PTR es:[edi],dx
  411867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411868:	cdq    
  411869:	inc    eax
  41186a:	xchg   BYTE PTR [esi+0x52],ah
  41186d:	push   esp
  41186e:	push   cs
  41186f:	add    ebp,DWORD PTR [ebx]
  411871:	add    edi,DWORD PTR [ebx-0x56d101d3]
  411877:	in     al,0xe4
  411879:	es pop ebx
  41187b:	push   eax
  41187c:	add    ebp,DWORD PTR [esi+0x618224b2]
  411882:	mov    esi,0xb72f1c8b
  411887:	dec    edi
  411888:	pop    ss
  411889:	adc    ah,BYTE PTR [esi-0x40]
  41188c:	sbb    BYTE PTR [ecx-0x79394bfd],dh
  411892:	or     dh,BYTE PTR [edi]
  411894:	sub    DWORD PTR [ecx+0x68],esp
  411897:	lods   eax,DWORD PTR ds:[esi]
  411898:	leave  
  411899:	mov    ?,WORD PTR [edx]
  41189b:	pop    esi
  41189c:	stos   DWORD PTR es:[edi],eax
  41189d:	mov    ecx,0x75785725
  4118a2:	loop   0x411839
  4118a4:	loope  0x411879
  4118a6:	bound  edi,QWORD PTR ds:0xea8f7616
  4118ac:	(bad)  
  4118ad:	jecxz  0x4118e6
  4118af:	aam    0x27
  4118b1:	cld    
  4118b2:	dec    ebp
  4118b3:	test   DWORD PTR [edi],edi
  4118b5:	out    0x96,eax
  4118b7:	ja     0x411925
  4118b9:	pop    ebx
  4118ba:	mov    cl,dh
  4118bc:	add    eax,0x5114f7ca
  4118c1:	hlt    
  4118c2:	mov    ebx,0xc59ba931
  4118c7:	stc    
  4118c8:	scas   al,BYTE PTR es:[edi]
  4118c9:	mov    bh,0x30
  4118cb:	inc    edx
  4118cc:	nop
  4118cd:	cmp    DWORD PTR [ebp-0xe],0x98cf4097
  4118d4:	add    BYTE PTR ds:0x5af0996f,cl
  4118da:	mov    edi,0xdf09635c
  4118df:	frstpm(287 only) 
  4118e1:	mov    ?,ebp
  4118e3:	int3   
  4118e4:	shl    DWORD PTR [ebx],0x86
  4118e7:	mov    cl,bh
  4118e9:	scas   al,BYTE PTR es:[edi]
  4118ea:	inc    ebx
  4118eb:	cmp    DWORD PTR [eax+0x4c9ee3ca],0x66a33092
  4118f5:	sub    esp,DWORD PTR [edx+0x60]
  4118f8:	push   ss
  4118f9:	mov    ah,0x11
  4118fb:	pop    esi
  4118fc:	ss into 
  4118fe:	pop    es
  4118ff:	cmp    eax,0xa83df903
  411904:	scas   eax,DWORD PTR es:[edi]
  411905:	or     DWORD PTR [esi-0x7e68742e],esi
  41190b:	xor    al,0xfa
  41190d:	jbe    0x4118e9
  41190f:	jg     0x4118ea
  411911:	test   DWORD PTR [esi+0x3b790a94],edx
  411917:	xor    eax,0xafa5180a
  41191c:	xchg   BYTE PTR [eax-0x255465b7],ch
  411922:	adc    esp,edx
  411924:	jl     0x411917
  411926:	in     eax,dx
  411927:	add    eax,0xd32cf36
  41192c:	cmp    dl,BYTE PTR [ebp-0x12]
  41192f:	push   esp
  411930:	push   esp
  411931:	ficom  WORD PTR [edi-0x19]
  411934:	pop    es
  411935:	arpl   WORD PTR [edx+edi*1],sp
  411938:	inc    esp
  411939:	jl     0x4118da
  41193b:	les    esi,FWORD PTR [ebp+0x7a]
  41193e:	cld    
  41193f:	jbe    0x41192e
  411941:	int3   
  411942:	mov    al,ds:0x1fce85f4
  411947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411948:	das    
  411949:	pop    edx
  41194a:	out    0x7f,eax
  41194c:	mov    edx,0x229f839
  411951:	cmp    ah,cl
  411953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411954:	mov    ecx,0x94341119
  411959:	pop    edi
  41195a:	neg    BYTE PTR [ebx]
  41195c:	sar    DWORD PTR [esi+0x7d],1
  41195f:	jne    0x4119ca
  411961:	xor    DWORD PTR [esi-0x6cd21c37],esi
  411967:	mov    al,0x6d
  411969:	inc    edi
  41196a:	jae    0x411905
  41196c:	popa   
  41196d:	lds    ebp,FWORD PTR [edi]
  41196f:	retf   0xb8b0
  411972:	clc    
  411973:	and    bl,BYTE PTR [ecx]
  411975:	mov    ah,0x63
  411977:	adc    DWORD PTR [edx],esi
  411979:	loope  0x41191b
  41197b:	ret    0xd524
  41197e:	cmp    dl,BYTE PTR [ecx+0x59926549]
  411984:	test   al,0x91
  411986:	xor    al,0x3e
  411988:	jbe    0x411961
  41198a:	jg     0x4119ef
  41198c:	fimul  DWORD PTR [ebp+0x26]
  41198f:	retf   0x7fed
  411992:	cs das 
  411994:	stos   DWORD PTR es:[edi],eax
  411995:	mov    ah,0x5a
  411997:	cmp    DWORD PTR [esi],edx
  411999:	iret   
  41199a:	mov    ch,0x43
  41199c:	mov    esp,0xb279df86
  4119a1:	ret    
  4119a2:	pop    eax
  4119a3:	pop    ss
  4119a4:	push   es
  4119a5:	add    eax,0xd29b0f3b
  4119aa:	sti    
  4119ab:	call   esi
  4119ad:	fwait
  4119ae:	test   cl,0xb
  4119b1:	call   0xc500:0xa75416f6
  4119b8:	imul   ebx,ebx,0xffffffda
  4119bb:	ins    BYTE PTR es:[edi],dx
  4119bc:	dec    edi
  4119bd:	in     eax,0x28
  4119bf:	bound  ecx,QWORD PTR [ebx-0x7fb87906]
  4119c5:	add    esp,ebx
  4119c7:	xor    al,0xbe
  4119c9:	and    eax,0x26bb935e
  4119ce:	sub    cl,dh
  4119d0:	(bad)  
  4119d1:	(bad)  
  4119d2:	retf   0xbfdf
  4119d5:	fnsave [esi+0x2a]
  4119d8:	inc    ebp
  4119d9:	std    
  4119da:	dec    ebx
  4119db:	push   ebp
  4119dc:	cs cs mov ebp,0x6cf02038
  4119e3:	loop   0x411a36
  4119e5:	xchg   esp,eax
  4119e6:	lahf   
  4119e7:	shr    ebp,0xc9
  4119ea:	das    
  4119eb:	fcmovbe st,st(3)
  4119ed:	mov    dh,BYTE PTR [esi+0x7f]
  4119f0:	or     eax,0xe7f032f4
  4119f5:	mov    dh,0x51
  4119f7:	rcl    BYTE PTR [ebx+0x7b210202],0x6c
  4119fe:	sbb    bl,al
  411a00:	push   ebp
  411a01:	lods   al,BYTE PTR ds:[esi]
  411a02:	in     al,0xe7
  411a04:	ja     0x4119ff
  411a06:	loop   0x4119b9
  411a08:	pop    esp
  411a09:	retf   0x384c
  411a0c:	xchg   edx,eax
  411a0d:	mov    bh,0x2f
  411a0f:	rol    ebp,1
  411a11:	(bad)  
  411a13:	cwde   
  411a14:	lds    edx,FWORD PTR [ecx-0x2465cd49]
  411a1a:	neg    DWORD PTR [ebp+edx*8+0x68ea40d1]
  411a21:	or     DWORD PTR [eax+ecx*4],edx
  411a24:	into   
  411a25:	mov    cl,0x83
  411a27:	leave  
  411a28:	xchg   esi,eax
  411a29:	repnz inc edx
  411a2b:	icebp  
  411a2c:	ins    BYTE PTR es:[edi],dx
  411a2d:	mov    al,ds:0xf7b0ec5d
  411a32:	pusha  
  411a33:	add    al,0xff
  411a35:	push   edi
  411a36:	sub    DWORD PTR ds:0xe09dc9b3,ecx
  411a3c:	xchg   DWORD PTR [esi],eax
  411a3e:	push   edx
  411a3f:	push   ecx
  411a40:	mov    edi,0xa8745bed
  411a45:	js     0x411a69
  411a47:	ins    DWORD PTR es:[edi],dx
  411a48:	push   edx
  411a49:	push   cs
  411a4a:	dec    esi
  411a4b:	test   BYTE PTR [esi+0x5b],0xb5
  411a4f:	xchg   ecx,eax
  411a50:	add    al,0xe5
  411a52:	inc    edx
  411a53:	push   0x24df60a8
  411a58:	inc    eax
  411a59:	sub    esi,DWORD PTR [edi+edi*1]
  411a5c:	sahf   
  411a5d:	or     al,0x60
  411a5f:	and    bh,bh
  411a61:	push   eax
  411a62:	gs cld 
  411a64:	sahf   
  411a65:	sub    bl,dl
  411a67:	sub    eax,0x35119efe
  411a6c:	push   cs
  411a6d:	lods   eax,DWORD PTR ds:[esi]
  411a6e:	test   DWORD PTR [edx+esi*1-0x3d],esp
  411a72:	sbb    dl,BYTE PTR [edx]
  411a74:	pushf  
  411a75:	ins    DWORD PTR es:[edi],dx
  411a76:	out    0xe6,al
  411a78:	lods   eax,DWORD PTR ds:[esi]
  411a79:	mov    al,0xb9
  411a7b:	imul   ah
  411a7d:	repnz pop ebp
  411a7f:	dec    ebp
  411a80:	lods   al,BYTE PTR ds:[esi]
  411a81:	jne    0x411acb
  411a83:	sub    edx,edi
  411a85:	shl    DWORD PTR [edx],0x1c
  411a88:	or     dh,BYTE PTR [ebp+0x2b]
  411a8b:	cmp    ebx,edi
  411a8d:	icebp  
  411a8e:	(bad)  
  411a8f:	(bad)  
  411a90:	pop    eax
  411a91:	das    
  411a92:	jmp    0x411a23
  411a94:	jecxz  0x411a87
  411a96:	add    BYTE PTR [edi+0x111546fc],cl
  411a9c:	lods   eax,DWORD PTR ds:[esi]
  411a9d:	test   eax,0xdcbec04c
  411aa2:	add    ah,ch
  411aa4:	call   0x6145:0xa995b4be
  411aab:	jge    0x411a33
  411aad:	mov    edi,0x6fddad66
  411ab2:	cmp    BYTE PTR [eax],dl
  411ab4:	pop    ebx
  411ab5:	repz fstp st(5)
  411ab8:	add    eax,0xd864bb5c
  411abd:	call   0x405d:0x1c356e38
  411ac4:	jb     0x411a51
  411ac6:	mov    dh,0xa4
  411ac8:	sub    al,dl
  411aca:	out    dx,al
  411acb:	sub    BYTE PTR [eax+0x59],ah
  411ace:	mov    ch,0xfe
  411ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ad1:	popf   
  411ad2:	or     BYTE PTR [ecx],ch
  411ad4:	or     DWORD PTR [ebx+0x1d],edx
  411ad7:	inc    BYTE PTR [ecx]
  411ad9:	inc    ecx
  411ada:	mov    DWORD PTR [ecx],esp
  411adc:	ss cwde 
  411ade:	loope  0x411b24
  411ae0:	rcr    ch,1
  411ae2:	cli    
  411ae3:	(bad)  
  411ae4:	(bad)  
  411ae5:	in     al,dx
  411ae6:	out    0x20,al
  411ae8:	in     al,0xff
  411aea:	ror    BYTE PTR [ebp-0x320eacab],1
  411af0:	xchg   esi,eax
  411af1:	call   0xa5f21284
  411af6:	push   ss
  411af7:	jb     0x411b66
  411af9:	popf   
  411afa:	pop    edx
  411afb:	int    0x62
  411afd:	mov    al,0x74
  411aff:	call   0x8013:0x372ca854
  411b06:	xchg   ebx,eax
  411b07:	xor    ebp,ebx
  411b09:	test   DWORD PTR [esi+edi*1+0x4a17b561],ecx
  411b10:	(bad)  
  411b11:	fdivr  DWORD PTR [esp+edi*4]
  411b14:	stos   DWORD PTR es:[edi],eax
  411b15:	es mov bh,0x9b
  411b18:	lea    edx,[ecx+0x564f1075]
  411b1e:	add    ecx,DWORD PTR [edi-0x78]
  411b21:	jmp    0x411b3e
  411b23:	pop    eax
  411b24:	dec    edi
  411b25:	sahf   
  411b26:	jb     0x411b3d
  411b28:	jno    0x411b58
  411b2a:	ins    BYTE PTR es:[edi],dx
  411b2b:	pop    DWORD PTR [eax+0x7d47f771]
  411b31:	add    al,0xfc
  411b33:	outs   dx,BYTE PTR ds:[esi]
  411b34:	out    0xbf,eax
  411b36:	inc    esi
  411b37:	adc    dh,dh
  411b39:	outs   dx,DWORD PTR ds:[esi]
  411b3a:	nop
  411b3b:	dec    ecx
  411b3c:	scas   eax,DWORD PTR es:[edi]
  411b3d:	jmp    0x798fa624
  411b42:	xchg   ecx,eax
  411b43:	push   esi
  411b44:	test   BYTE PTR [edi-0x6c],ah
  411b47:	ds xchg esi,eax
  411b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b4a:	lock cs popa 
  411b4d:	(bad)  
  411b4e:	fidiv  DWORD PTR [esi+0x1d]
  411b51:	mov    esi,0xc6e0530
  411b56:	js     0x411b2f
  411b58:	frndint 
  411b5a:	popf   
  411b5b:	ins    BYTE PTR es:[edi],dx
  411b5c:	mov    dh,0xfe
  411b5e:	inc    esp
  411b5f:	fwait
  411b60:	ja     0x411b72
  411b62:	pop    ds
  411b63:	pop    ebp
  411b64:	iret   
  411b65:	fcom   QWORD PTR [edi-0x36]
  411b68:	scas   al,BYTE PTR es:[edi]
  411b69:	xchg   ebx,eax
  411b6a:	(bad)  
  411b6b:	lock fwait
  411b6d:	stc    
  411b6e:	ja     0x411b11
  411b70:	stos   BYTE PTR es:[edi],al
  411b71:	pop    ebx
  411b72:	xor    dh,ah
  411b74:	loope  0x411b4c
  411b76:	cmp    al,0x2e
  411b78:	cmp    edi,esi
  411b7a:	inc    edx
  411b7b:	sbb    ch,ch
  411b7d:	push   eax
  411b7e:	retf   
  411b7f:	aad    0xf6
  411b81:	mov    eax,0xae86a15f
  411b86:	adc    BYTE PTR [edx],bh
  411b88:	dec    ebx
  411b89:	jge    0x411b4b
  411b8b:	pop    DWORD PTR [ecx]
  411b8d:	pop    ds
  411b8e:	hlt    
  411b8f:	or     DWORD PTR [ebx+0x43],eax
  411b92:	dec    ecx
  411b93:	push   esp
  411b94:	int3   
  411b95:	xor    BYTE PTR [edi-0x5741685],ah
  411b9b:	add    BYTE PTR [edi],cl
  411b9d:	popf   
  411b9e:	or     al,0xa2
  411ba0:	or     al,0xd0
  411ba2:	loop   0x411bc2
  411ba4:	jns    0x411bd3
  411ba6:	mov    bl,0xb
  411ba8:	xchg   ecx,eax
  411ba9:	mov    ecx,0xff30587e
  411bae:	cmp    dh,BYTE PTR [edi+0x52]
  411bb1:	cli    
  411bb2:	dec    esp
  411bb3:	stc    
  411bb4:	cmp    esi,DWORD PTR [esi+0x3011f6fb]
  411bba:	test   eax,0xd928cb0d
  411bbf:	(bad)  
  411bc1:	out    dx,eax
  411bc2:	mov    ah,0x83
  411bc4:	pop    edi
  411bc5:	ds addr16 leave 
  411bc8:	inc    esi
  411bc9:	pop    ecx
  411bca:	clc    
  411bcb:	xor    DWORD PTR [eax],esp
  411bcd:	inc    ecx
  411bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bcf:	dec    eax
  411bd0:	sub    BYTE PTR [ecx-0x12c75bdb],cl
  411bd6:	inc    ebp
  411bd7:	shl    DWORD PTR [edi+ecx*2-0x2b0cc017],cl
  411bde:	mov    al,0x81
  411be0:	nop
  411be1:	and    al,0xb
  411be3:	sub    BYTE PTR [ebx+0x2e0fa1fb],bl
  411be9:	mov    edi,0xe6562a1c
  411bee:	jmp    0x1a2f:0xcb956508
  411bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf6:	ins    BYTE PTR es:[edi],dx
  411bf7:	and    DWORD PTR [ebx+ebx*4-0x1f6ee582],eax
  411bfe:	stos   BYTE PTR es:[edi],al
  411bff:	ss mov edx,0x3cc4770f
  411c05:	inc    esi
  411c06:	imul   edx,ebx,0xbe0bd8e9
  411c0c:	mov    esi,0xca3f8a10
  411c11:	add    eax,0x28cd2025
  411c16:	cmp    BYTE PTR [esi-0x3d],ch
  411c19:	(bad)
  411c1c:	cdq    
  411c1d:	adc    ah,BYTE PTR [ebx]
  411c1f:	loop   0x411bf7
  411c21:	enter  0x6c09,0x78
  411c25:	mov    esp,0xd0a1ad2d
  411c2a:	mov    ah,0x6c
  411c2c:	mov    ebp,0x49dcf1ec
  411c31:	outs   dx,DWORD PTR ds:[esi]
  411c32:	je     0x411cab
  411c34:	sub    esp,DWORD PTR [edi]
  411c36:	dec    edx
  411c37:	pushf  
  411c38:	dec    edi
  411c39:	add    al,0xe5
  411c3b:	sbb    al,0x72
  411c3d:	in     al,dx
  411c3e:	jmp    0x411ca7
  411c40:	repnz int3 
  411c42:	loope  0x411bea
  411c44:	inc    edx
  411c45:	add    DWORD PTR [ebp-0x72],0x34
  411c49:	pop    edx
  411c4a:	enter  0xcddf,0xb3
  411c4e:	stos   DWORD PTR es:[edi],eax
  411c4f:	inc    ebp
  411c50:	push   ebx
  411c51:	push   edi
  411c52:	add    eax,0x29fc0a1e
  411c57:	inc    ebp
  411c58:	sub    ecx,DWORD PTR [ebp+0x34105ee5]
  411c5e:	inc    esi
  411c5f:	mov    ds:0xfd6d3d7d,al
  411c64:	xlat   BYTE PTR ds:[ebx]
  411c65:	pushf  
  411c66:	adc    al,0x68
  411c68:	int    0x15
  411c6a:	mov    edi,?
  411c6c:	and    DWORD PTR [ebp+0x5085dd0e],0xfaf57c19
  411c76:	call   0x11de:0x64391c93
  411c7d:	xchg   dh,bl
  411c7f:	sbb    ebx,ebx
  411c81:	loopne 0x411cb0
  411c83:	fsub   st,st(0)
  411c85:	js     0x411c20
  411c87:	mov    edx,DWORD PTR ds:0x17110950
  411c8d:	xchg   ebx,eax
  411c8e:	jmp    0xf0215fe2
  411c93:	mov    eax,0x5780fb11
  411c98:	push   ecx
  411c99:	pop    edi
  411c9a:	xlat   BYTE PTR ds:[ebx]
  411c9b:	sub    eax,0x75082172
  411ca0:	sbb    ch,bh
  411ca2:	out    0xcf,al
  411ca4:	cld    
  411ca5:	add    BYTE PTR [ebp+0x72],ah
  411ca8:	pop    edi
  411ca9:	push   eax
  411caa:	fwait
  411cab:	mov    ebp,0xe546abfb
  411cb0:	fcmovb st,st(7)
  411cb2:	and    BYTE PTR [eax+0x1edb9d92],dh
  411cb8:	xchg   ebp,eax
  411cb9:	inc    edx
  411cba:	pop    ebp
  411cbb:	clc    
  411cbc:	adc    al,0x9c
  411cbe:	sbb    cl,cl
  411cc0:	mov    ebp,0xca443dfe
  411cc5:	jge    0x411cc7
  411cc7:	mov    edx,0xea1d5863
  411ccc:	(bad)  
  411ccd:	repnz nop
  411ccf:	stos   DWORD PTR es:[edi],eax
  411cd0:	ror    DWORD PTR [edi+esi*1+0x8],0x4e
  411cd5:	pop    eax
  411cd6:	dec    eax
  411cd7:	inc    esp
  411cd8:	leave  
  411cd9:	pop    ds
  411cda:	sahf   
  411cdb:	jmp    0x60c16ab7
  411ce0:	int    0x4a
  411ce2:	rol    BYTE PTR [ebx+edx*1],1
  411ce5:	dec    ebp
  411ce6:	(bad)  
  411ce7:	or     ecx,DWORD PTR [edx+0x6aa117c1]
  411ced:	ja     0x411ce4
  411cef:	imul   esi,eax,0x4e
  411cf2:	or     al,0xf5
  411cf4:	pop    esi
  411cf5:	adc    BYTE PTR [esi+0x130123fa],0x6c
  411cfc:	pusha  
  411cfd:	xlat   BYTE PTR ds:[ebx]
  411cfe:	test   al,0x18
  411d00:	and    al,0x69
  411d02:	pop    eax
  411d03:	xchg   ebp,eax
  411d04:	fcmovb st,st(0)
  411d06:	outs   dx,BYTE PTR ds:[esi]
  411d07:	or     al,0x25
  411d09:	rol    BYTE PTR [eax+0x7d],cl
  411d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d0d:	pop    ebp
  411d0e:	pop    ebx
  411d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d10:	icebp  
  411d11:	call   0x5a31:0x203c0c08
  411d18:	push   edx
  411d19:	sub    BYTE PTR [ebx+0x711270a5],0xcc
  411d20:	faddp  st(5),st
  411d22:	inc    ebx
  411d23:	not    edx
  411d25:	mov    eax,0x9edc7051
  411d2a:	add    BYTE PTR [edi],0x65
  411d2d:	adc    esp,DWORD PTR ds:0x42582a3
  411d33:	mov    cl,0xf0
  411d35:	pop    ss
  411d36:	push   edi
  411d37:	pop    ebp
  411d38:	ficomp DWORD PTR [edi]
  411d3a:	and    edx,DWORD PTR [esi]
  411d3c:	retf   0xb478
  411d3f:	out    dx,al
  411d40:	push   es
  411d41:	xchg   ebp,eax
  411d42:	sub    bh,BYTE PTR [edi-0x678188f4]
  411d48:	xor    esp,esi
  411d4a:	add    dh,al
  411d4c:	adc    al,0x2f
  411d4e:	dec    edx
  411d4f:	mov    eax,0xb809db54
  411d54:	outs   dx,DWORD PTR ds:[esi]
  411d55:	xchg   edi,eax
  411d56:	adc    bh,bl
  411d58:	xchg   ebp,eax
  411d59:	push   ss
  411d5a:	(bad)  
  411d5b:	push   ds
  411d5c:	ret    
  411d5d:	stos   BYTE PTR es:[edi],al
  411d5e:	push   dx
  411d60:	mov    ecx,0x4df669fa
  411d65:	(bad)  
  411d66:	pop    edx
  411d67:	loop   0x411daf
  411d69:	fcom   QWORD PTR ds:0xf285ee97
  411d6f:	retf   0xe123
  411d72:	daa    
  411d73:	add    DWORD PTR [esi+0x348cb48f],esi
  411d79:	jecxz  0x411da3
  411d7b:	dec    esp
  411d7c:	jno    0x411deb
  411d7e:	inc    ecx
  411d7f:	inc    edx
  411d80:	inc    esp
  411d81:	sub    eax,0x3b2766bd
  411d86:	jmp    0xfc35:0xccc16d86
  411d8d:	mov    ch,0x15
  411d8f:	mov    edi,0x8871df7a
  411d94:	call   0x1fa84e06
  411d99:	mov    edi,0x3e7a62ea
  411d9e:	and    DWORD PTR [ebp-0x25],0x1ebc8101
  411da5:	pop    esp
  411da6:	out    0xdd,eax
  411da8:	stos   DWORD PTR es:[edi],eax
  411da9:	pop    ecx
  411daa:	das    
  411dab:	mov    ch,0xc3
  411dad:	outs   dx,DWORD PTR ds:[esi]
  411dae:	lea    ebp,[ecx-0x13]
  411db1:	call   0x2322a8e
  411db6:	rcl    DWORD PTR [ebp+0x5a1586eb],cl
  411dbc:	or     esi,esp
  411dbe:	xlat   BYTE PTR ds:[ebx]
  411dbf:	or     DWORD PTR [esi],edi
  411dc1:	pusha  
  411dc2:	pop    ss
  411dc3:	call   0xfea96a5b
  411dc8:	ja     0x411e39
  411dca:	sbb    edx,DWORD PTR es:[ebp+ebp*8-0xc5d0f63]
  411dd2:	adc    BYTE PTR [ecx+edx*8],cl
  411dd5:	inc    eax
  411dd6:	pop    ebx
  411dd7:	fucomi st,st(5)
  411dd9:	stc    
  411dda:	xchg   DWORD PTR [ebx-0x683c8827],esi
  411de0:	mov    dh,0x0
  411de2:	dec    eax
  411de3:	mov    dl,0x7f
  411de5:	mov    edi,0xc084c206
  411dea:	pop    edx
  411deb:	adc    DWORD PTR [ebx],esp
  411ded:	fild   WORD PTR [eax-0x37cd67fa]
  411df3:	xor    BYTE PTR [edi-0x18eac9ef],ch
  411df9:	in     al,dx
  411dfa:	xor    eax,0x105f8101
  411dff:	nop
  411e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e01:	(bad)  
  411e02:	jae    0x411e30
  411e04:	lods   al,BYTE PTR ds:[esi]
  411e05:	adc    ch,ch
  411e07:	mov    cl,0x6d
  411e09:	ins    BYTE PTR es:[edi],dx
  411e0a:	mov    eax,ds:0xdbe31ae6
  411e0f:	or     eax,esp
  411e11:	inc    ebx
  411e12:	jp     0x411e5c
  411e14:	mov    ebx,DWORD PTR [edx]
  411e16:	jns    0x411e39
  411e18:	sbb    eax,0x867f6e1c
  411e1d:	xchg   ebp,eax
  411e1e:	ins    DWORD PTR es:[edi],dx
  411e1f:	in     al,0xab
  411e21:	cdq    
  411e22:	sub    BYTE PTR [edi-0x7aefa72b],bl
  411e28:	jle    0x411e4d
  411e2a:	or     BYTE PTR [ebx-0x4b1243a5],cl
  411e30:	add    edi,DWORD PTR [ebx+eax*4]
  411e33:	shl    eax,1
  411e35:	jmp    0x411dc1
  411e37:	shl    bh,0x2d
  411e3a:	xlat   BYTE PTR ds:[ebx]
  411e3b:	xchg   esi,eax
  411e3c:	adc    eax,DWORD PTR [esi+0x1771dfd3]
  411e42:	daa    
  411e43:	arpl   cx,si
  411e45:	inc    edi
  411e46:	aam    0xf4
  411e48:	adc    al,0x83
  411e4a:	sub    cl,0xbb
  411e4d:	cmc    
  411e4e:	mov    WORD PTR [edx],ds
  411e50:	ins    BYTE PTR es:[edi],dx
  411e51:	cmp    BYTE PTR [esi+0x1d],ch
  411e54:	push   0x10
  411e56:	gs inc eax
  411e58:	and    ebp,ebp
  411e5a:	loope  0x411e62
  411e5c:	mov    edi,0x1a53c940
  411e61:	clc    
  411e62:	mov    bh,0xa0
  411e64:	xchg   ebp,eax
  411e65:	fisub  DWORD PTR [edx-0x7e6c30c1]
  411e6b:	jnp    0x411df8
  411e6d:	imul   esp,esi,0xffffffd3
  411e70:	xchg   esi,eax
  411e71:	adc    dh,BYTE PTR [ecx-0x19448728]
  411e77:	hlt    
  411e78:	pop    esp
  411e79:	sub    eax,0xa3936bd3
  411e7e:	lahf   
  411e7f:	std    
  411e80:	jnp    0x411ef7
  411e82:	add    al,0xa5
  411e84:	or     DWORD PTR [edi+0x5e],esi
  411e87:	call   FWORD PTR [esi+edi*4+0x1]
  411e8b:	push   cs
  411e8c:	pusha  
  411e8d:	push   ss
  411e8e:	xchg   ecx,eax
  411e8f:	add    al,0xb5
  411e91:	sub    eax,0xdbf185a5
  411e96:	cmp    al,0xd6
  411e98:	mov    ecx,0x495042f6
  411e9d:	push   0x3fd21b9d
  411ea2:	mov    eax,ds:0x5de3b0bd
  411ea7:	mov    esi,eax
  411ea9:	daa    
  411eaa:	push   es
  411eab:	pop    ecx
  411eac:	xor    eax,0x10f4477a
  411eb1:	sbb    ebx,DWORD PTR [edx+0x1ec6786a]
  411eb7:	and    ecx,ebp
  411eb9:	sub    esp,DWORD PTR [ebx+0x1cfcb666]
  411ebf:	gs ret 0x247f
  411ec3:	xchg   cl,ah
  411ec5:	mov    ecx,ebx
  411ec7:	pop    esi
  411ec8:	sti    
  411ec9:	xchg   BYTE PTR [edx-0x10],ah
  411ecc:	sbb    bh,BYTE PTR [ecx+ebx*1+0x31]
  411ed0:	lahf   
  411ed1:	jmp    0x7173:0x77a59e0e
  411ed8:	js     0x411ef9
  411eda:	mov    dh,0xc7
  411edc:	dec    ebp
  411edd:	enter  0xcb8e,0x4d
  411ee1:	cli    
  411ee2:	out    0x14,al
  411ee4:	jp     0x411e7d
  411ee6:	pop    ds
  411ee7:	retf   
  411ee8:	lea    eax,[ecx]
  411eea:	sbb    al,0x36
  411eec:	cmp    BYTE PTR [edi-0x27e2a1a6],0xa1
  411ef3:	retf   
  411ef4:	adc    dl,BYTE PTR [esi]
  411ef6:	add    DWORD PTR [edx-0x1f678b29],edi
  411efc:	push   edx
  411efd:	dec    ebx
  411efe:	cld    
  411eff:	and    dl,bl
  411f01:	xor    DWORD PTR [ebx-0x71],ebp
  411f04:	mov    edi,0x66a25fb
  411f09:	mov    ds:0x3e2ad155,eax
  411f0e:	cmp    al,0x30
  411f10:	push   ebx
  411f11:	push   ebp
  411f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f13:	push   ecx
  411f14:	and    eax,0x6893b656
  411f19:	bound  ebp,QWORD PTR [eax+0x4096f6ba]
  411f1f:	imul   ebx,DWORD PTR [edx],0x9557afa9
  411f25:	sbb    al,0x5
  411f27:	and    al,0xb4
  411f29:	xor    BYTE PTR [edi-0x23],ah
  411f2c:	jo     0x411fa9
  411f2e:	(bad)  
  411f2f:	jecxz  0x411eed
  411f31:	mov    dh,0x21
  411f33:	fwait
  411f34:	pushf  
  411f35:	repz inc ecx
  411f37:	arpl   WORD PTR [ebx+edx*8-0x40ec52ba],sp
  411f3e:	xchg   ebp,eax
  411f3f:	es scas al,BYTE PTR es:[edi]
  411f41:	jmp    0x411ed8
  411f43:	mov    BYTE PTR ds:0xebd61cd3,dh
  411f49:	add    ch,BYTE PTR [edi+ecx*1+0x5bb06159]
  411f50:	add    eax,0x517b46c3
  411f55:	sub    al,0xea
  411f57:	test   DWORD PTR [edx],0xdb8f4646
  411f5d:	cmp    BYTE PTR [eax-0x21],dl
  411f60:	sahf   
  411f61:	add    esp,DWORD PTR [edx]
  411f63:	push   ss
  411f64:	lods   eax,DWORD PTR ds:[esi]
  411f65:	ror    BYTE PTR [edi+0x2aba3420],1
  411f6b:	push   esp
  411f6c:	sbb    DWORD PTR [esi-0x30],esi
  411f6f:	push   esp
  411f70:	addr16 push 0xffffffcb
  411f73:	imul   ebx,ecx,0xcb7c1548
  411f79:	jecxz  0x411f72
  411f7b:	aas    
  411f7c:	xchg   esp,eax
  411f7d:	pop    edi
  411f7e:	aad    0x28
  411f80:	adc    BYTE PTR [esi+ebx*1+0x3c],ah
  411f84:	sub    cl,ch
  411f86:	icebp  
  411f87:	rcr    BYTE PTR [edx+ebx*1+0x6307b12],1
  411f8e:	in     eax,dx
  411f8f:	scas   al,BYTE PTR es:[edi]
  411f90:	xchg   edi,eax
  411f91:	cld    
  411f92:	add    al,0xa5
  411f94:	hlt    
  411f95:	pop    ebx
  411f96:	nop
  411f97:	ins    BYTE PTR es:[edi],dx
  411f98:	repz xchg ebp,eax
  411f9a:	mov    dh,0x33
  411f9c:	scas   eax,DWORD PTR es:[edi]
  411f9d:	mov    al,ds:0x6f647f29
  411fa2:	mov    al,ds:0xa72fe9ac
  411fa7:	pop    ecx
  411fa8:	std    
  411fa9:	mov    eax,ds:0x74dc9369
  411fae:	pushf  
  411faf:	into   
  411fb0:	out    0x29,eax
  411fb2:	cmp    al,0xa0
  411fb4:	cwde   
  411fb5:	std    
  411fb6:	dec    ebp
  411fb7:	les    eax,FWORD PTR [edi]
  411fb9:	out    0xb7,eax
  411fbb:	mov    WORD PTR [ecx],ss
  411fbd:	scas   al,BYTE PTR es:[edi]
  411fbe:	loop   0x411fbb
  411fc0:	inc    ecx
  411fc1:	pop    esp
  411fc2:	test   DWORD PTR [edx],0xce939697
  411fc8:	adc    DWORD PTR [ecx+0x36765c71],ebp
  411fce:	shr    BYTE PTR [eax+edx*2-0x16],1
  411fd2:	sub    dl,bl
  411fd4:	or     ecx,esp
  411fd6:	adc    bl,BYTE PTR ds:0xe8f68943
  411fdc:	mov    esi,0x55be3606
  411fe1:	mov    ds:0x7611d922,al
  411fe6:	mov    gs,WORD PTR [ebx+0x5d]
  411fe9:	imul   esp,DWORD PTR [ecx+0x5ea2462b],0x8272440b
  411ff3:	test   DWORD PTR [ecx+ebp*2+0x6e],ebx
  411ff7:	(bad)  
  411ff8:	stos   DWORD PTR es:[edi],eax
  411ff9:	mov    ch,0xb4
  411ffb:	(bad)  
  411ffc:	pop    ebx
  411ffd:	and    al,BYTE PTR [ecx+0x4bc25f65]
  412003:	jns    0x4eab12ba
  412009:	lds    edi,FWORD PTR [ebx]
  41200b:	mov    dh,0x55
  41200d:	cmp    al,0x39
  41200f:	sti    
  412010:	mov    al,ds:0x67433256
  412015:	or     eax,DWORD PTR [edi+0x24]
  412018:	jl     0x41205c
  41201a:	test   al,0xdf
  41201c:	stos   BYTE PTR es:[edi],al
  41201d:	test   eax,0xed7c7a9a
  412022:	adc    BYTE PTR cs:[ebx],ah
  412025:	mov    BYTE PTR [esi],dl
  412027:	mov    ch,0x1b
  412029:	stos   DWORD PTR es:[edi],eax
  41202a:	aas    
  41202b:	push   0x50e821cd
  412030:	lahf   
  412031:	int    0x9a
  412033:	sbb    al,0x4e
  412035:	data16 outs dx,BYTE PTR ds:[esi]
  412037:	repnz div DWORD PTR [edx]
  41203a:	xchg   edi,eax
  41203b:	cmp    DWORD PTR [eax+0x7f3ad546],0xffffffbd
  412042:	sbb    al,dl
  412044:	dec    ecx
  412045:	pop    ds
  412046:	and    dl,BYTE PTR [esi]
  412048:	rcr    BYTE PTR [edi+esi*1],1
  41204b:	jp     0x411fe0
  41204d:	imul   ecx,DWORD PTR [ecx+0x36e3f5fd],0xcf2219f4
  412057:	outs   dx,DWORD PTR ds:[esi]
  412058:	cld    
  412059:	push   ecx
  41205a:	sub    al,0xfc
  41205c:	outs   dx,DWORD PTR ds:[esi]
  41205d:	aaa    
  41205e:	in     al,0xde
  412060:	xor    DWORD PTR ds:0xaf2d9754,ecx
  412066:	xchg   ecx,eax
  412067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412068:	jl     0x412087
  41206a:	inc    eax
  41206b:	mov    edx,0xd8003e88
  412070:	add    DWORD PTR [eax-0x34058cc1],0xfffffff8
  412077:	mov    edx,0x672f9e0a
  41207c:	cmp    al,0x52
  41207e:	in     al,0x1b
  412080:	ins    DWORD PTR es:[edi],dx
  412081:	(bad)  
  412084:	lods   eax,DWORD PTR ds:[esi]
  412085:	dec    edi
  412086:	sahf   
  412087:	sbb    al,bh
  412089:	loopne 0x412081
  41208b:	in     eax,dx
  41208c:	inc    ebx
  41208d:	(bad)  
  41208e:	out    dx,al
  41208f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412090:	cwde   
  412091:	inc    ebx
  412092:	mov    esp,0x172d4cc7
  412097:	outs   dx,DWORD PTR ds:[esi]
  412098:	cmc    
  412099:	adc    DWORD PTR [eax],esi
  41209b:	sub    ah,BYTE PTR [edx+ebp*8+0x6784b18d]
  4120a2:	pop    edx
  4120a3:	xchg   ebp,eax
  4120a4:	cmp    DWORD PTR [edi-0x34],edx
  4120a7:	test   ch,dl
  4120a9:	add    esi,DWORD PTR [edi+eax*1+0x1abee1c9]
  4120b0:	call   DWORD PTR [ebp+0x66]
  4120b3:	sub    dh,bl
  4120b5:	sbb    eax,0x6f2feb77
  4120ba:	mov    esp,0x5b124f22
  4120bf:	stos   DWORD PTR es:[edi],eax
  4120c0:	xor    eax,0x281d9373
  4120c5:	call   0x8764a17c
  4120ca:	sbb    ch,BYTE PTR [ecx-0x77]
  4120cd:	test   eax,0x2e13c8de
  4120d2:	sbb    al,BYTE PTR [ebx]
  4120d4:	cmp    ebx,esp
  4120d6:	mov    ds:0xaf785422,eax
  4120db:	jge    0x4120be
  4120dd:	pop    edx
  4120de:	rol    BYTE PTR [esi+eiz*4],cl
  4120e1:	add    eax,0x26633322
  4120e6:	adc    ah,BYTE PTR [ebx+ebp*4+0x480095bf]
  4120ed:	fisubr WORD PTR [esi-0x12]
  4120f0:	xlat   BYTE PTR ds:[ebx]
  4120f1:	mov    BYTE PTR [ebx+0x57],ah
  4120f4:	cmc    
  4120f5:	or     edi,ebx
  4120f7:	iret   
  4120f8:	scas   eax,DWORD PTR es:[edi]
  4120f9:	push   esi
  4120fa:	mov    ebx,0x8d675535
  4120ff:	xchg   esi,eax
  412100:	xchg   edi,eax
  412101:	mov    DWORD PTR [esi+eiz*4+0x1c9dd3cd],ecx
  412108:	cli    
  412109:	mov    ah,ah
  41210b:	pop    edi
  41210c:	rcl    BYTE PTR [eax+0x1],cl
  41210f:	push   cs
  412110:	mov    DWORD PTR [ecx],esi
  412112:	stc    
  412113:	xchg   edi,eax
  412114:	jle    0x412138
  412116:	inc    ch
  412118:	sub    BYTE PTR [ebp+0x41],0xd5
  41211c:	and    BYTE PTR [edx-0x4b],al
  41211f:	int3   
  412120:	sub    al,0xbb
  412122:	test   dl,ch
  412124:	retf   0x70a3
  412127:	pop    ecx
  412128:	mov    DWORD PTR fs:[edx-0x5f],edi
  41212c:	sub    BYTE PTR [esi+0x36],ch
  41212f:	xor    eax,0xa0d3bb5c
  412134:	mov    ebx,0x74e1014b
  412139:	into   
  41213a:	stos   BYTE PTR es:[edi],al
  41213b:	xchg   BYTE PTR [eax+eiz*2],bl
  41213e:	or     al,0xf8
  412140:	(bad)
  412143:	sub    al,0x4f
  412145:	pushf  
  412146:	ja     0x4120df
  412148:	mov    cs,WORD PTR [esi]
  41214a:	mov    ds:0x4b999ea5,eax
  41214f:	fmul   QWORD PTR [edi-0x4a]
  412152:	(bad)  
  412153:	fs push es
  412155:	mov    BYTE PTR [ebp+0x641c1643],bh
  41215b:	out    dx,al
  41215c:	push   esp
  41215d:	ja     0x412171
  41215f:	xchg   DWORD PTR [esp+edi*1],eax
  412162:	int    0x4e
  412164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412165:	nop
  412166:	mov    ds:0xaa90329d,al
  41216b:	lods   eax,DWORD PTR ds:[esi]
  41216c:	(bad)  
  41216d:	retf   
  41216e:	lods   al,BYTE PTR ds:[esi]
  41216f:	nop
  412170:	lock pop edx
  412172:	jmp    0x346f:0xf67fba27
  412179:	es xchg edx,eax
  41217b:	sub    BYTE PTR [ecx+0x24],al
  41217e:	test   eax,0x3a43af34
  412183:	in     al,0x33
  412185:	mov    bh,0xc6
  412187:	inc    esi
  412188:	cmc    
  412189:	popa   
  41218a:	dec    esp
  41218b:	cmp    DWORD PTR cs:[ebx+0xa],edx
  41218f:	lahf   
  412190:	jecxz  0x41212c
  412192:	shl    BYTE PTR [edi+0x5454752b],0xba
  412199:	mov    dh,0x19
  41219b:	and    BYTE PTR [ebx-0xd68835c],0x1a
  4121a2:	ficomp DWORD PTR [ebx+0x354852b9]
  4121a8:	mov    fs,WORD PTR [ebp+0x50638715]
  4121ae:	xor    BYTE PTR [edi-0x63cada1d],dl
  4121b4:	push   esi
  4121b5:	sbb    eax,0xc7228cec
  4121ba:	push   eax
  4121bb:	fs out 0x23,eax
  4121be:	loopne 0x412179
  4121c0:	jecxz  0x41216c
  4121c2:	std    
  4121c3:	rcl    DWORD PTR [esi+0x20fbdf2d],0xde
  4121ca:	jb     0x412179
  4121cc:	lods   eax,DWORD PTR ds:[esi]
  4121cd:	outs   dx,DWORD PTR ds:[esi]
  4121ce:	scas   eax,DWORD PTR es:[edi]
  4121cf:	inc    edi
  4121d0:	inc    eax
  4121d1:	mov    BYTE PTR [ecx+0x6bd83fd],dl
  4121d7:	mov    edi,0x9708990a
  4121dc:	not    DWORD PTR [esi+ebx*8]
  4121df:	inc    esi
  4121e0:	stc    
  4121e1:	jmp    0x18b5:0xbfb2fded
  4121e8:	test   al,0xdf
  4121ea:	xchg   ebp,eax
  4121eb:	jae    0x412176
  4121ed:	into   
  4121ee:	xchg   edi,eax
  4121ef:	mov    BYTE PTR [edi+0x5a76de7c],bh
  4121f5:	add    dl,BYTE PTR [ebx]
  4121f7:	das    
  4121f8:	(bad)  
  4121f9:	mov    esp,0xb912b9f0
  4121fe:	and    eax,0x5374072d
  412204:	pop    ds
  412205:	stos   BYTE PTR es:[edi],al
  412206:	and    al,0x9f
  412208:	mov    ebx,0xc70c295c
  41220d:	cli    
  41220e:	sbb    cl,bh
  412210:	push   ds
  412211:	imul   eax,DWORD PTR [esi+0x7f],0xffffffd0
  412215:	dec    eax
  412216:	mov    WORD PTR [esp+eiz*8-0x7c],ss
  41221a:	stc    
  41221b:	push   es
  41221c:	fstp   TBYTE PTR [ecx+0x30823fe6]
  412222:	sub    DWORD PTR [ecx+0x47],edx
  412225:	rcr    BYTE PTR [edx-0x618c047b],cl
  41222b:	dec    esp
  41222c:	xor    dh,bh
  41222e:	rcr    DWORD PTR [ecx],cl
  412230:	js     0x4121d0
  412232:	(bad)  
  412233:	sbb    BYTE PTR [ecx-0x62],al
  412236:	inc    eax
  412237:	sahf   
  412238:	jg     0x41229a
  41223a:	pop    ss
  41223b:	xor    DWORD PTR [eax],ebx
  41223d:	mov    dh,0xdc
  41223f:	mov    edx,0x1e0a29d3
  412244:	fcom   QWORD PTR fs:[ebx-0x52f01684]
  41224b:	push   ecx
  41224c:	or     al,0x45
  41224e:	push   edi
  41224f:	shr    DWORD PTR [ecx+0x62],0x21
  412253:	inc    esi
  412254:	add    esi,DWORD PTR ds:0x36c6744d
  41225a:	je     0x4121ec
  41225c:	cs (bad) 
  41225e:	xor    bl,cl
  412260:	cmp    eax,0xa1916b7
  412265:	mov    ebp,0xe2ebe4c8
  41226a:	call   FWORD PTR [esi-0x55879e2c]
  412270:	jne    0x4121f4
  412272:	cs std 
  412274:	jle    0x4122e5
  412276:	adc    al,0x82
  412278:	pop    ds
  412279:	cmp    edx,DWORD PTR [ecx+0x75b888a8]
  41227f:	test   al,0x9a
  412281:	dec    ebp
  412282:	dec    edx
  412283:	pop    esi
  412284:	inc    esp
  412285:	outs   dx,BYTE PTR ds:[esi]
  412286:	(bad)  
  412287:	lods   al,BYTE PTR ds:[esi]
  412288:	xchg   ecx,eax
  412289:	loope  0x41225a
  41228b:	out    0x73,al
  41228d:	mov    dl,BYTE PTR [ecx+ebx*8-0x47]
  412291:	cmc    
  412292:	cmp    al,0xa3
  412294:	inc    eax
  412296:	test   al,0xac
  412298:	dec    edx
  412299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41229a:	adc    DWORD PTR [ecx-0x3f],ebp
  41229d:	lods   al,BYTE PTR ds:[esi]
  41229e:	pop    edx
  41229f:	inc    esi
  4122a0:	(bad)  
  4122a1:	jmp    0xafdd:0x2951e1ee
  4122a8:	cdq    
  4122a9:	jns    0x412310
  4122ab:	aaa    
  4122ac:	push   esi
  4122ad:	push   ebp
  4122ae:	inc    edx
  4122af:	int3   
  4122b0:	and    edx,ebx
  4122b2:	jmp    0xb24ab01f
  4122b7:	dec    edx
  4122b8:	rcl    DWORD PTR [eax+0x16adad33],1
  4122be:	xchg   edx,eax
  4122bf:	mov    ecx,DWORD PTR ds:0x1d8e0b5a
  4122c5:	pop    es
  4122c6:	(bad)  
  4122c7:	lahf   
  4122c8:	xlat   BYTE PTR ds:[ebx]
  4122c9:	xchg   esp,eax
  4122ca:	cdq    
  4122cb:	sti    
  4122cc:	xor    dl,al
  4122ce:	js     0x412268
  4122d0:	jmp    0x93d9e356
  4122d5:	jbe    0x41230b
  4122d7:	rcl    BYTE PTR [esi-0xc],cl
  4122da:	sbb    ah,dl
  4122dc:	cmp    bl,0x59
  4122df:	push   esp
  4122e0:	dec    edi
  4122e1:	fimul  DWORD PTR [esi+0x2f]
  4122e4:	jmp    FWORD PTR [edi-0x7c185b1e]
  4122ea:	call   0x160d8a8
  4122ef:	fnstcw WORD PTR [edx]
  4122f1:	scas   eax,DWORD PTR es:[edi]
  4122f2:	in     al,dx
  4122f3:	icebp  
  4122f4:	mov    dl,0xcf
  4122f6:	scas   eax,DWORD PTR es:[edi]
  4122f7:	adc    al,0xa
  4122f9:	(bad)  
  4122fb:	fcom   st(5)
  4122fd:	mov    WORD PTR [ebp+0x7caa2b07],?
  412303:	cmp    eax,0xf8f93c33
  412308:	add    BYTE PTR [edi],bl
  41230a:	or     ah,BYTE PTR [esi]
  41230c:	mov    bl,0x2e
  41230e:	adc    edi,DWORD PTR [esi-0x3]
  412311:	jge    0x412373
  412313:	ds cwde 
  412315:	iret   
  412316:	or     ebp,esp
  412318:	into   
  412319:	stos   BYTE PTR es:[edi],al
  41231a:	jnp    0x41230b
  41231c:	jmp    0x4122fd
  41231e:	jmp    0xce3dda25
  412323:	jb     0x412319
  412325:	pop    ebx
  412326:	shl    BYTE PTR [eax+0x53],cl
  412329:	mov    BYTE PTR [ecx-0x28],bh
  41232c:	cmc    
  41232d:	stos   DWORD PTR es:[edi],eax
  41232e:	stos   DWORD PTR es:[edi],eax
  41232f:	fs popf 
  412331:	hlt    
  412332:	push   0xa4b26eba
  412337:	push   ebx
  412338:	pusha  
  412339:	fiadd  WORD PTR [edx]
  41233b:	or     BYTE PTR [ebp-0x21],0xcf
  41233f:	cmp    ah,al
  412341:	pop    edx
  412342:	xor    cl,BYTE PTR [edi+0x66]
  412345:	xchg   edi,eax
  412346:	test   BYTE PTR [edx],ch
  412348:	inc    eax
  412349:	mov    ch,0x41
  41234b:	gs jns 0x4123a7
  41234e:	jae    0x4123a7
  412350:	jmp    0x8f12:0x8a99a957
  412357:	stos   DWORD PTR es:[edi],eax
  412358:	iret   
  412359:	mov    cl,0x21
  41235b:	in     eax,dx
  41235c:	stc    
  41235d:	jnp    0x41234a
  41235f:	sbb    BYTE PTR [esi],bh
  412361:	adc    dl,bh
  412363:	push   ecx
  412364:	jnp    0x41237e
  412366:	push   ebp
  412367:	push   0xffffffbc
  412369:	xchg   ecx,eax
  41236a:	pushf  
  41236b:	es push ds
  41236d:	adc    esi,ebx
  41236f:	sub    dh,BYTE PTR [ebp-0x2]
  412372:	imul   ebx,DWORD PTR [eax-0x6],0xef90a451
  412379:	xchg   edx,eax
  41237a:	mov    bl,0x5e
  41237c:	cwde   
  41237d:	adc    BYTE PTR [edi-0x76],ah
  412380:	xor    esp,ecx
  412382:	xchg   edx,eax
  412383:	dec    eax
  412384:	fstp   DWORD PTR [edx-0x7c954503]
  41238a:	ret    0xb286
  41238d:	jle    0x4123a4
  41238f:	pop    ds
  412390:	push   esi
  412391:	lock rcl esi,cl
  412394:	mov    dl,0xe6
  412396:	es cdq 
  412398:	mov    bl,0xce
  41239a:	dec    ebp
  41239b:	dec    esp
  41239c:	aad    0x77
  41239e:	mov    eax,0x1907d4bb
  4123a3:	ret    0x39b0
  4123a6:	scas   al,BYTE PTR es:[edi]
  4123a7:	fnstenv [ebx+0x24]
  4123aa:	xchg   esp,eax
  4123ab:	cld    
  4123ac:	cmp    ch,BYTE PTR [esi+0x2d6e4f6c]
  4123b2:	mov    bh,0xaa
  4123b4:	jle    0x41236a
  4123b6:	pusha  
  4123b7:	push   ebp
  4123b8:	(bad)  
  4123b9:	cli    
  4123ba:	sbb    al,0x40
  4123bc:	fwait
  4123bd:	or     eax,0x14265af7
  4123c3:	clc    
  4123c4:	sub    DWORD PTR [edx],edx
  4123c6:	jecxz  0x41240a
  4123c8:	out    0x82,al
  4123ca:	ret    
  4123cb:	ja     0x4123b0
  4123cd:	retf   0xbed8
  4123d0:	sub    edx,DWORD PTR [eax-0x5f]
  4123d3:	mov    al,0xb4
  4123d5:	jl     0x41235c
  4123d7:	mov    ecx,0xe462f850
  4123dc:	xchg   esp,eax
  4123dd:	pop    es
  4123de:	lock push ecx
  4123e0:	mov    WORD PTR [eax+eiz*4],ds
  4123e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123e4:	xchg   DWORD PTR [ebp-0x4fa5378c],ebp
  4123ea:	outs   dx,BYTE PTR ds:[esi]
  4123eb:	in     al,0x7e
  4123ed:	xchg   cl,ah
  4123ef:	pop    esp
  4123f0:	push   ecx
  4123f1:	inc    BYTE PTR [ebp-0x2705d15d]
  4123f7:	or     ebp,DWORD PTR [esi+0x37]
  4123fa:	jns    0x412477
  4123fc:	push   ebp
  4123fd:	mov    cl,0xde
  4123ff:	pop    ss
  412400:	cmp    ebp,eax
  412402:	rcr    DWORD PTR [edi+0x71],0x54
  412406:	mov    ss,esp
  412408:	mov    ecx,0x1f26371a
  41240d:	mov    edx,0x607e8ba3
  412412:	cmp    dh,BYTE PTR [esi+0x2e]
  412415:	out    dx,eax
  412416:	mov    ebx,0x4a3bc312
  41241b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41241c:	cmc    
  41241d:	add    eax,0x42b96ae9
  412422:	cli    
  412423:	xor    al,0x52
  412425:	stc    
  412426:	imul   esp,eax,0xffffffb2
  412429:	mul    BYTE PTR [edi+0x16873f21]
  41242f:	pop    ss
  412430:	enter  0x6b7d,0x8f
  412434:	jmp    0x4123d6
  412436:	xor    al,BYTE PTR [eax]
  412438:	dec    esp
  412439:	scas   al,BYTE PTR es:[edi]
  41243a:	adc    DWORD PTR [ecx-0x16b9236b],esp
  412440:	leave  
  412441:	fimul  WORD PTR [eax+0x60e19c84]
  412447:	jp     0x4124ab
  412449:	sbb    BYTE PTR [esi-0x2],ch
  41244c:	ss inc edx
  41244e:	mov    ebx,0xd3a26223
  412453:	jae    0x4123fb
  412455:	pop    ds
  412456:	popa   
  412457:	add    eax,0xfba1bd8e
  41245c:	jbe    0x4123e8
  41245e:	mov    BYTE PTR [esi+0x2a327db6],ch
  412464:	icebp  
  412465:	jbe    0x41242c
  412467:	out    0xa7,eax
  412469:	mov    ebx,eax
  41246b:	or     esi,DWORD PTR [bx+di+0x1252]
  412470:	add    bl,dl
  412472:	hlt    
  412473:	jg     0x412456
  412475:	ds retf 
  412477:	mov    al,0x7e
  412479:	jno    0x412454
  41247b:	test   eax,0xe7e56d2a
  412480:	in     eax,0x4c
  412482:	test   DWORD PTR [ecx],edi
  412484:	sbb    al,0x92
  412486:	or     bl,BYTE PTR [edi+ebx*1-0x71ddafed]
  41248d:	cdq    
  41248e:	ja     0x412458
  412490:	out    0x8e,al
  412492:	or     esi,DWORD PTR [ecx+edi*2-0x74337258]
  412499:	outs   dx,BYTE PTR ds:[esi]
  41249a:	push   ss
  41249b:	shr    BYTE PTR [ecx-0x1b],cl
  41249e:	push   ds
  41249f:	mov    dl,0xb5
  4124a1:	shl    DWORD PTR [edx],1
  4124a3:	or     eax,0x617fc943
  4124a8:	mov    WORD PTR [ecx],?
  4124aa:	jle    0x412521
  4124ac:	jecxz  0x41245c
  4124ae:	and    edi,DWORD PTR [edx+eax*2-0x1211f661]
  4124b5:	and    DWORD PTR [ebx],esi
  4124b7:	push   ebx
  4124b8:	hlt    
  4124b9:	cmc    
  4124ba:	and    edx,DWORD PTR [eax]
  4124bc:	and    bl,BYTE PTR [edx]
  4124be:	adc    al,0xce
  4124c0:	bound  edx,QWORD PTR [edx-0x7d]
  4124c3:	iret   
  4124c4:	push   cs
  4124c5:	clc    
  4124c6:	sbb    dh,al
  4124c8:	call   0x9ad8:0x62984d82
  4124cf:	aam    0xec
  4124d1:	mov    BYTE PTR [edi],0xf5
  4124d4:	ja     0x4124f2
  4124d6:	cld    
  4124d7:	js     0x41250a
  4124d9:	or     DWORD PTR [ebx-0xc972f3e],esp
  4124df:	sar    BYTE PTR [eax+0x47382a62],0xd9
  4124e6:	sub    BYTE PTR [edx-0xb0987a0],ch
  4124ec:	jp     0x4124d5
  4124ee:	jle    0x41249a
  4124f0:	jmp    0x24aa5b94
  4124f5:	fnstsw WORD PTR [esi-0x482f5946]
  4124fb:	add    edx,DWORD PTR [edx-0x6b3ff5fd]
  412501:	retf   0x3706
  412504:	mov    bl,0x4c
  412506:	xchg   bl,bh
  412508:	fdivr  QWORD PTR [eax-0x318a4ad0]
  41250e:	sub    al,0x55
  412510:	(bad)  
  412511:	mov    esp,0x85b846a7
  412516:	mov    ah,0x93
  412518:	int3   
  412519:	jne    0x4124bf
  41251b:	fsubr  st,st(7)
  41251d:	jae    0x41255c
  41251f:	rol    DWORD PTR [edi+0x3],1
  412522:	jae    0x412549
  412524:	and    DWORD PTR [ebp+0x47819241],esp
  41252a:	adc    esp,ebp
  41252c:	sub    ebx,ebx
  41252e:	pop    ecx
  41252f:	xor    DWORD PTR [eax-0x10],ecx
  412532:	mov    ch,0xf5
  412534:	nop    DWORD PTR [edi-0x29403bf6]
  41253b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41253c:	mov    WORD PTR [ebx+eax*2],?
  41253f:	test   cl,al
  412541:	das    
  412542:	push   ecx
  412543:	popf   
  412544:	xor    esp,DWORD PTR [esi-0x56a94026]
  41254a:	cwde   
  41254b:	or     DWORD PTR [esi],0x99207c7e
  412551:	pop    ss
  412552:	xchg   ebx,eax
  412553:	dec    ecx
  412554:	cmp    al,0x92
  412556:	into   
  412557:	xchg   esi,eax
  412558:	xor    DWORD PTR [edi-0x6ae5971f],eax
  41255e:	cmc    
  41255f:	mov    ebx,0x607fc4b9
  412564:	in     al,dx
  412565:	and    esp,ecx
  412567:	rcr    DWORD PTR [esi+esi*1+0x6d],cl
  41256b:	adc    DWORD PTR [ebp+0x150e175a],ecx
  412571:	dec    ecx
  412572:	sbb    BYTE PTR [ecx-0x67],bl
  412575:	and    ah,BYTE PTR [eax]
  412577:	arpl   WORD PTR [ebx],ax
  412579:	dec    ebp
  41257a:	ror    BYTE PTR [eax-0x4f],1
  41257d:	jg     0x4125a5
  41257f:	addr16 std 
  412581:	sbb    bl,cl
  412583:	lock inc ebp
  412585:	mov    BYTE PTR [edi],bl
  412587:	inc    ebx
  412588:	mov    cl,0x7f
  41258a:	push   esp
  41258b:	xor    al,0xe1
  41258d:	shl    BYTE PTR [edx+0x5f],1
  412590:	adc    al,0xb1
  412592:	ins    BYTE PTR es:[edi],dx
  412593:	test   BYTE PTR [ebx+0x46],ch
  412596:	xor    eax,0x9e4efad8
  41259b:	popf   
  41259c:	lock lods al,BYTE PTR ds:[esi]
  41259e:	das    
  41259f:	std    
  4125a0:	ins    BYTE PTR es:[edi],dx
  4125a1:	in     al,dx
  4125a2:	mov    ds:0xa65f9286,eax
  4125a7:	in     eax,dx
  4125a8:	mov    al,0x35
  4125aa:	push   esp
  4125ab:	call   FWORD PTR [ecx]
  4125ad:	ficomp DWORD PTR [eax-0xc]
  4125b0:	out    0xb,eax
  4125b2:	sub    edi,edi
  4125b4:	jae    0x4125d6
  4125b6:	mov    dl,BYTE PTR [esi-0x17]
  4125b9:	call   0x2ebb:0x6a398b9b
  4125c0:	pop    eax
  4125c1:	sub    eax,0x6a6550c9
  4125c6:	or     dh,BYTE PTR [edx-0x5db136b2]
  4125cc:	and    esp,DWORD PTR [edx+0xf7ceef0]
  4125d2:	outs   dx,BYTE PTR ds:[esi]
  4125d3:	or     DWORD PTR [ecx+0x13],eax
  4125d6:	fnstsw WORD PTR [ebx-0x10ed9fc7]
  4125dc:	inc    esp
  4125dd:	test   DWORD PTR [esi],eax
  4125df:	dec    edi
  4125e0:	and    eax,0xa64aa541
  4125e5:	div    BYTE PTR [ecx]
  4125e7:	dec    ebp
  4125e8:	inc    edi
  4125e9:	sbb    DWORD PTR [ecx+0x6c],esp
  4125ec:	inc    edx
  4125ed:	pop    eax
  4125ee:	cwde   
  4125ef:	(bad)  
  4125f0:	popa   
  4125f1:	aam    0xff
  4125f3:	xlat   BYTE PTR ds:[ebx]
  4125f4:	repnz add BYTE PTR ds:0xdacadf4f,0x86
  4125fc:	inc    eax
  4125fd:	daa    
  4125fe:	ret    
  4125ff:	sub    bl,BYTE PTR [ecx]
  412601:	mov    ebp,0x5fbe6bfe
  412606:	or     eax,eax
  412608:	mov    ds:0x58360464,eax
  41260d:	scas   al,BYTE PTR es:[edi]
  41260e:	pop    esi
  41260f:	xor    cl,BYTE PTR [eax+0x7042e5fa]
  412615:	jl     0x4125b0
  412617:	call   0x2bf3515a
  41261c:	sbb    eax,0x27a48979
  412621:	xlat   BYTE PTR ds:[ebx]
  412622:	loope  0x41261d
  412624:	test   eax,0x73c5df77
  412629:	daa    
  41262a:	and    DWORD PTR [esp+ecx*1-0x12d3e1cb],ebx
  412631:	xor    eax,0x35ce141
  412636:	sbb    ch,BYTE PTR [edx+0x7f]
  412639:	stc    
  41263a:	xor    eax,0xe0616421
  41263f:	mov    dh,0x12
  412641:	ret    
  412642:	and    al,0xe3
  412644:	sahf   
  412645:	icebp  
  412646:	mov    BYTE PTR [ecx-0x187693b4],dl
  41264c:	fist   DWORD PTR [edx-0xc]
  41264f:	dec    esp
  412650:	xchg   esp,eax
  412651:	mov    eax,0x50378f33
  412656:	fsubr  DWORD PTR [ecx+0x64]
  412659:	repnz mov bl,0x9f
  41265c:	dec    ebp
  41265d:	mov    DWORD PTR [edx],edi
  41265f:	scas   eax,DWORD PTR es:[edi]
  412660:	lock es jnp 0x41262c
  412664:	sar    ah,0x17
  412667:	and    DWORD PTR [esi+0x6fdfde1f],ebx
  41266d:	daa    
  41266e:	jge    0x4126c7
  412670:	cld    
  412671:	cmp    DWORD PTR [ebx-0x29],eax
  412674:	test   BYTE PTR [ebx],cl
  412676:	mov    ebx,0x434b3ad4
  41267b:	jp     0x412616
  41267d:	cmp    DWORD PTR [ebx+0x5762b4fb],0xbc0dcce
  412687:	add    dh,BYTE PTR ds:0x3c88c45e
  41268d:	cdq    
  41268e:	or     DWORD PTR [edi-0x577140d9],edi
  412694:	pusha  
  412695:	pop    ds
  412696:	ficomp DWORD PTR [ecx]
  412698:	es inc ecx
  41269a:	adc    edi,DWORD PTR [eax]
  41269c:	cmp    eax,0x6dcffbbc
  4126a1:	add    ch,BYTE PTR [ebp+0x1afbdf48]
  4126a7:	jle    0x41265e
  4126a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126aa:	scas   eax,DWORD PTR es:[edi]
  4126ab:	cmp    DWORD PTR [ebx+0x19],0x3e
  4126af:	mov    al,BYTE PTR [ebx]
  4126b1:	sbb    ch,dh
  4126b3:	mov    ah,0xe2
  4126b5:	sbb    BYTE PTR [ebx],ch
  4126b7:	test   al,0xdf
  4126b9:	ins    DWORD PTR es:[edi],dx
  4126ba:	pop    ebx
  4126bb:	sar    BYTE PTR [eax+0x54],1
  4126be:	fs jbe 0x41266a
  4126c1:	mov    eax,ds:0x544267d5
  4126c6:	push   edi
  4126c7:	dec    edx
  4126c8:	in     eax,dx
  4126c9:	cpuid  
  4126cb:	dec    edi
  4126cc:	mov    esi,0x7caca264
  4126d1:	fild   DWORD PTR [ebp-0x7027dbf0]
  4126d7:	pop    esi
  4126d8:	and    edx,DWORD PTR [ebp+0x1]
  4126db:	lahf   
  4126dc:	jmp    0xd393:0x51184cae
  4126e3:	mov    edi,0xac75aea1
  4126e8:	out    0x73,al
  4126ea:	ds ins DWORD PTR es:[edi],dx
  4126ec:	add    esi,DWORD PTR [ebx+0x7c3b85a8]
  4126f2:	fbstp  TBYTE PTR [eax-0x19]
  4126f5:	sbb    DWORD PTR [edx+edi*2-0x79],ecx
  4126f9:	pop    ss
  4126fa:	push   eax
  4126fb:	iret   
  4126fc:	sub    DWORD PTR [edx+ecx*4],0xfbb58f9e
  412703:	push   edx
  412704:	sub    eax,0xe4aea83f
  412709:	test   BYTE PTR [edx-0x12140ad0],al
  41270f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412710:	or     DWORD PTR [esi-0x2d],ebp
  412713:	sbb    bh,dh
  412715:	xchg   edi,eax
  412716:	sbb    eax,0x75e612ed
  41271b:	adc    ebx,0xfffffff6
  41271e:	sbb    DWORD PTR [ebp-0x39],0x1e
  412722:	fisttp DWORD PTR ds:0x6b59ca76
  412728:	xor    bh,dl
  41272a:	fst    QWORD PTR [edi]
  41272c:	cdq    
  41272d:	cs mov ebp,0x4540e07b
  412733:	mov    eax,ds:0x7078473e
  412738:	jl     0x41278e
  41273a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41273b:	mov    edx,0x7a1610ab
  412740:	ins    DWORD PTR es:[edi],dx
  412741:	mov    ecx,0x47061ef7
  412746:	jo     0x4126dd
  412748:	dec    esi
  412749:	sub    DWORD PTR [ebx+edi*1],ecx
  41274c:	imul   esp,esp,0xffffffa9
  41274f:	ror    BYTE PTR [edi],0x87
  412752:	pop    eax
  412753:	aas    
  412754:	push   0xffffffa3
  412756:	cmc    
  412757:	mov    bh,0xe2
  412759:	popf   
  41275a:	outs   dx,BYTE PTR ds:[esi]
  41275b:	stos   DWORD PTR es:[edi],eax
  41275c:	push   ebp
  41275d:	ficomp WORD PTR [edi]
  41275f:	jo     0x4127a0
  412761:	rol    DWORD PTR [ebx-0x2c],0xa0
  412765:	scas   al,BYTE PTR es:[edi]
  412766:	jl     0x4127aa
  412768:	mov    esp,0xf6a60c45
  41276d:	outs   dx,BYTE PTR ds:[esi]
  41276e:	sub    bh,cl
  412770:	adc    DWORD PTR [edx],0x4f3cd206
  412776:	arpl   WORD PTR [eax-0x2b],dx
  412779:	mov    eax,ds:0x5cc0f521
  41277e:	(bad)  
  41277f:	jbe    0x412730
  412781:	sub    eax,0xe2c4cae3
  412786:	jmp    0x426fd4b5
  41278b:	mov    WORD PTR [esi+0x4b],ds
  41278e:	stc    
  41278f:	inc    ecx
  412790:	sbb    eax,0xea992d2
  412795:	stos   DWORD PTR es:[edi],eax
  412796:	sahf   
  412797:	adc    BYTE PTR [edx],dl
  412799:	pop    ds
  41279a:	pop    edx
  41279b:	cld    
  41279c:	in     al,0x59
  41279e:	mov    DWORD PTR [edx-0x5907c347],ebp
  4127a4:	mov    ds,eax
  4127a6:	sub    dl,BYTE PTR [eax+edx*1]
  4127a9:	xor    bh,dh
  4127ab:	ins    DWORD PTR es:[edi],dx
  4127ac:	inc    esi
  4127ad:	out    dx,eax
  4127ae:	popf   
  4127af:	out    dx,eax
  4127b0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4127b2:	sbb    dh,bl
  4127b4:	mov    bh,0xb0
  4127b6:	scas   al,BYTE PTR es:[edi]
  4127b7:	aad    0xb5
  4127b9:	mov    ebx,0xf09e7ca0
  4127be:	mov    ah,0xfa
  4127c0:	xor    BYTE PTR [eax+0x6e],ah
  4127c3:	std    
  4127c4:	and    esi,0x397492d8
  4127ca:	inc    edx
  4127cb:	jae    0x41281b
  4127cd:	in     eax,dx
  4127ce:	sub    al,0x87
  4127d0:	sub    BYTE PTR [esi-0xc],bl
  4127d3:	jns    0x412783
  4127d5:	out    0xd7,eax
  4127d7:	jne    0x4127e3
  4127d9:	sub    eax,DWORD PTR ds:0x7781c15e
  4127e0:	scas   eax,DWORD PTR es:[edi]
  4127e1:	rcr    ebx,cl
  4127e3:	xchg   ecx,eax
  4127e4:	mov    DWORD PTR [ebp-0x7ef5bc5e],0x9a1644db
  4127ee:	dec    ecx
  4127ef:	(bad)  
  4127f0:	in     eax,0x2a
  4127f2:	in     al,dx
  4127f3:	shr    DWORD PTR [edi],cl
  4127f5:	or     ch,0xa0
  4127f8:	xor    eax,0xf9fa75c1
  4127fd:	and    cl,cl
  4127ff:	scas   eax,DWORD PTR es:[edi]
  412800:	cmp    eax,0x46ea5577
  412805:	aam    0x2b
  412807:	or     BYTE PTR [ecx],ah
  412809:	jp     0x412854
  41280b:	lea    ebx,[edi]
  41280d:	add    al,0x4d
  41280f:	ds cld 
  412811:	mov    bh,0x7c
  412813:	mov    cl,BYTE PTR [eax-0x2f66ca9f]
  412819:	loopne 0x412852
  41281b:	(bad)  
  41281c:	out    0x6b,al
  41281e:	sahf   
  41281f:	add    DWORD PTR [esi-0x74],ecx
  412822:	mov    esi,0xcef8ae76
  412827:	daa    
  412828:	jecxz  0x412899
  41282a:	inc    ebp
  41282b:	inc    ebx
  41282c:	les    ebx,FWORD PTR [esi+0x273ba34d]
  412832:	add    edi,edi
  412834:	pop    ebp
  412835:	lea    ecx,[eax-0x37]
  412838:	mov    edi,0xcae1781b
  41283d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41283e:	mov    ah,0x8a
  412840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412841:	fidiv  DWORD PTR [eax+0x53]
  412844:	xchg   ecx,eax
  412845:	stc    
  412846:	xchg   BYTE PTR [edx],ch
  412848:	mov    ebp,DWORD PTR [edi-0x79b88f69]
  41284e:	inc    esp
  41284f:	arpl   WORD PTR [edx-0x16],bx
  412852:	jo     0x412811
  412854:	frstor [edx+0x62]
  412857:	arpl   WORD PTR [ebx+edi*4-0x6c],dx
  41285b:	lds    esp,FWORD PTR [edi+edx*8-0x7802b43e]
  412862:	jge    0x412826
  412864:	and    BYTE PTR [bx+di-0x4d],0xd1
  412869:	enter  0xe684,0xb0
  41286d:	sbb    al,0x9f
  41286f:	xor    ah,0xa
  412872:	test   BYTE PTR [bp-0x18],dl
  412876:	push   ds
  412877:	loop   0x4128a1
  412879:	pop    ds
  41287a:	mov    ecx,0x93e137de
  41287f:	in     al,0xab
  412881:	push   0xffffffa5
  412883:	mov    ch,0xc7
  412885:	aad    0x4b
  412887:	jmp    0x6118:0xd07497bc
  41288e:	xor    ch,BYTE PTR cs:[ecx-0x44dd6dce]
  412895:	mov    al,0x5c
  412897:	jbe    0x41282f
  412899:	fnstenv [esi+0x63]
  41289c:	imul   esp,DWORD PTR [ecx+0x20e5c300],0x40
  4128a3:	mov    BYTE PTR [esi+eiz*1+0x662d16d8],bh
  4128aa:	aas    
  4128ab:	stos   BYTE PTR es:[edi],al
  4128ac:	dec    edx
  4128ad:	mov    WORD PTR [eax],ss
  4128af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b0:	stos   DWORD PTR es:[edi],eax
  4128b1:	mov    edx,0xc465d805
  4128b6:	call   0xb42e:0xc4122ac1
  4128bd:	inc    esi
  4128be:	and    ebp,esi
  4128c0:	ins    DWORD PTR es:[edi],dx
  4128c1:	push   cs
  4128c2:	out    dx,al
  4128c3:	enter  0x92bd,0x1f
  4128c7:	stc    
  4128c8:	iret   
  4128c9:	pop    ss
  4128ca:	or     al,bh
  4128cc:	aam    0x56
  4128ce:	dec    ecx
  4128cf:	pop    ebx
  4128d0:	pop    ebx
  4128d1:	xchg   edx,ebx
  4128d3:	cmp    esi,DWORD PTR ds:0xfbe21e12
  4128da:	jbe    0x4128c5
  4128dc:	pop    eax
  4128dd:	in     al,0xa4
  4128df:	jle    0x412870
  4128e1:	out    0x43,al
  4128e3:	test   al,0x3c
  4128e5:	adc    BYTE PTR [ecx],dl
  4128e7:	bound  esi,QWORD PTR [edx-0x127044f4]
  4128ed:	out    0x3c,eax
  4128ef:	(bad)  
  4128f0:	cdq    
  4128f1:	rcr    ebx,0x16
  4128f4:	xchg   edx,eax
  4128f5:	cmp    al,0x3c
  4128f7:	idiv   ch
  4128f9:	repnz mov gs,WORD PTR [edx+0x1]
  4128fd:	mov    cl,0x5a
  4128ff:	push   es
  412900:	les    esp,FWORD PTR [edx-0x2e]
  412903:	daa    
  412904:	sti    
  412905:	push   ebx
  412906:	loopne 0x41291e
  412908:	cmp    DWORD PTR [edi+0x233566c7],ebp
  41290e:	cmp    eax,0x808fcafd
  412913:	jb     0x41298a
  412915:	and    edi,esi
  412917:	addr16 popf 
  412919:	or     BYTE PTR [ecx-0x7438585d],cl
  41291f:	das    
  412920:	push   edi
  412921:	gs addr16 and eax,0xfa31c523
  412928:	xor    al,0xf4
  41292a:	jge    0x41291f
  41292c:	xchg   edi,eax
  41292d:	lea    ecx,[edx+ecx*2-0x7f]
  412931:	mov    ah,0xd7
  412933:	inc    esp
  412934:	xchg   edx,eax
  412935:	add    eax,0x9370cad3
  41293a:	sbb    al,0xb
  41293c:	xor    BYTE PTR [edi],cl
  41293e:	(bad)  
  41293f:	mov    ah,0x13
  412941:	jge    0x41298d
  412943:	and    eax,eax
  412945:	mov    bh,0xa5
  412947:	fistp  QWORD PTR [ebp+0x68d48916]
  41294d:	mov    BYTE PTR ds:0x2fe57bbd,ch
  412953:	mov    al,0x25
  412955:	xchg   ebp,eax
  412956:	jmp    0x4128ef
  412958:	or     dh,0x70
  41295b:	jbe    0x4128f7
  41295d:	leave  
  41295e:	xor    DWORD PTR [edx],edx
  412960:	and    BYTE PTR [esi+ebx*4+0x622dc573],bh
  412967:	cmc    
  412968:	ins    DWORD PTR es:[edi],dx
  412969:	lds    esi,FWORD PTR [esi]
  41296b:	dec    ebx
  41296c:	sub    esi,0x2400cbe9
  412972:	jle    0x4129ca
  412974:	es sub eax,0x6f62a963
  41297a:	jge    0x412947
  41297c:	or     edi,DWORD PTR [edi-0x209b0a84]
  412982:	loopne 0x41291b
  412984:	loop   0x412962
  412986:	push   esi
  412987:	stos   DWORD PTR es:[edi],eax
  412988:	ja     0x41290f
  41298a:	loopne 0x412994
  41298c:	mov    ds:0xdd189730,al
  412991:	cmc    
  412992:	out    dx,al
  412993:	inc    ebp
  412994:	mov    ah,0xc2
  412996:	scas   eax,DWORD PTR es:[edi]
  412997:	jecxz  0x412933
  412999:	call   0x18cf:0x81f909d7
  4129a0:	or     al,0x68
  4129a2:	dec    edx
  4129a3:	mov    esp,0x22a338af
  4129a8:	pushaw 
  4129aa:	push   cs
  4129ab:	xchg   ebp,eax
  4129ac:	lea    ebx,[esi+0x4d]
  4129af:	mov    al,ds:0xd8e59204
  4129b4:	or     bh,BYTE PTR [ebx]
  4129b6:	jp     0x4129fb
  4129b8:	xchg   eax,esp
  4129ba:	das    
  4129bb:	xor    DWORD PTR [ecx+0x5],ecx
  4129be:	or     cl,BYTE PTR [esi]
  4129c0:	inc    ecx
  4129c1:	rcr    DWORD PTR [ebp+0x15],1
  4129c4:	mov    bl,0x67
  4129c6:	mov    ebp,ss
  4129c8:	lahf   
  4129c9:	and    DWORD PTR [eax],0x17
  4129cc:	enter  0xa404,0xc7
  4129d0:	call   FWORD PTR [ebx+0x5f]
  4129d3:	mov    dh,0x40
  4129d5:	xchg   ecx,eax
  4129d6:	cli    
  4129d7:	mov    esp,0xa52e4fcd
  4129dc:	pop    esp
  4129dd:	mov    ah,0x44
  4129df:	sbb    BYTE PTR ds:0x893ecee1,0x38
  4129e6:	(bad)  
  4129e7:	xchg   edi,eax
  4129e8:	mov    bh,BYTE PTR [ecx+0x44]
  4129eb:	push   es
  4129ec:	(bad)  
  4129ed:	mov    ecx,0x6b6080a9
  4129f2:	and    eax,0xbead5ef
  4129f7:	xchg   edi,eax
  4129f8:	jmp    0x4129f6
  4129fa:	push   ebx
  4129fb:	jb     0x412a19
  4129fd:	mov    ds:0x27c61a7f,eax
  412a02:	inc    eax
  412a03:	test   eax,0xf8acd46c
  412a08:	xchg   BYTE PTR [edi-0x79],al
  412a0b:	out    dx,eax
  412a0c:	ins    BYTE PTR es:[edi],dx
  412a0d:	cmp    dh,BYTE PTR [eax+0x3f]
  412a10:	jb     0x4129b7
  412a12:	in     eax,0x13
  412a14:	aad    0x5e
  412a16:	or     DWORD PTR [edi-0x68fa6440],eax
  412a1c:	inc    esi
  412a1d:	mov    ch,0x1a
  412a1f:	leave  
  412a20:	aam    0xd9
  412a22:	push   esi
  412a23:	push   ss
  412a24:	nop
  412a25:	jg     0x4129c2
  412a27:	lds    ebx,FWORD PTR ds:0xbd62c946
  412a2d:	daa    
  412a2e:	mov    ds:0x40460770,al
  412a33:	mov    dh,0xe1
  412a35:	jge    0x4129cf
  412a37:	or     eax,0x436ed718
  412a3c:	mov    edx,0xd0ffd95e
  412a41:	xlat   BYTE PTR ds:[ebx]
  412a42:	adc    al,0x86
  412a44:	add    eax,0x1962dba
  412a49:	xchg   DWORD PTR [edi-0x187bb1a8],ebp
  412a4f:	in     al,dx
  412a50:	pop    ecx
  412a51:	mov    al,0x93
  412a53:	jle    0x412a83
  412a55:	push   ss
  412a56:	xor    eax,0x19e110d4
  412a5b:	mov    ch,0x8
  412a5d:	pop    ss
  412a5e:	test   BYTE PTR [ebx+edi*2+0x6c],al
  412a62:	test   DWORD PTR [ebx-0x571525f2],ebp
  412a68:	xlat   BYTE PTR ds:[ebx]
  412a69:	ret    0x1b47
  412a6c:	jmp    0x412ae9
  412a6e:	sbb    dl,BYTE PTR ds:0x6655a1f4
  412a74:	or     eax,0xf88bb70
  412a79:	je     0x412a38
  412a7b:	in     eax,dx
  412a7c:	mov    cl,0x72
  412a7e:	ret    0x7b94
  412a81:	(bad)  
  412a82:	xchg   ebx,eax
  412a83:	fs aaa 
  412a85:	mov    cl,0xcd
  412a87:	repnz xor ch,BYTE PTR [esp+ecx*2+0x3f8d4db4]
  412a8f:	add    ebp,DWORD PTR ds:[eax]
  412a92:	stos   BYTE PTR es:[edi],al
  412a93:	sbb    dh,BYTE PTR [edx-0x4d]
  412a96:	sbb    esi,DWORD PTR [ebx]
  412a98:	mov    ch,0x86
  412a9a:	fsub   QWORD PTR [edi+esi*1]
  412a9d:	scas   al,BYTE PTR es:[edi]
  412a9e:	push   edx
  412a9f:	sub    eax,0x1b3960b9
  412aa4:	dec    ebp
  412aa5:	fwait
  412aa6:	pop    ebx
  412aa7:	stos   BYTE PTR es:[edi],al
  412aa8:	fwait
  412aa9:	jno    0x412a4a
  412aab:	test   eax,0x1140a55a
  412ab0:	xor    esi,DWORD PTR [ecx+0x4421b99a]
  412ab6:	mov    eax,ds:0x4e351d28
  412abb:	xchg   ecx,eax
  412abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412abd:	sub    al,0xfd
  412abf:	lea    edi,[ebx]
  412ac1:	mov    esi,0x644b75ab
  412ac6:	or     al,0xc6
  412ac8:	push   ecx
  412ac9:	icebp  
  412aca:	xor    eax,0xfaae8eb7
  412acf:	pusha  
  412ad0:	xor    BYTE PTR ds:0x53817ac7,bh
  412ad6:	in     al,dx
  412ad7:	mov    eax,0xbdf1446b
  412adc:	rcl    ebp,1
  412ade:	ror    BYTE PTR [eax],cl
  412ae0:	mov    DWORD PTR [esi],esi
  412ae2:	cmc    
  412ae3:	xchg   esi,eax
  412ae4:	int    0x15
  412ae6:	scas   eax,DWORD PTR es:[edi]
  412ae7:	push   0x4f95e729
  412aec:	inc    eax
  412aed:	mov    cl,BYTE PTR [ecx]
  412aef:	mov    edx,DWORD PTR [esp+eax*1-0x6f]
  412af3:	dec    esp
  412af4:	sbb    al,0xe3
  412af6:	loopne 0x412b14
  412af8:	mov    esp,edi
  412afa:	add    ebp,esi
  412afc:	gs out dx,al
  412afe:	jmp    0x25c9:0xb6e02a8a
  412b05:	add    BYTE PTR [ebx],dl
  412b07:	leave  
  412b08:	cmp    al,0xe7
  412b0a:	hlt    
  412b0b:	int    0x8f
  412b0d:	jno    0x412b01
  412b0f:	jae    0x412b04
  412b11:	fadd   QWORD PTR ds:0x9f9771ce
  412b17:	xor    ebp,edi
  412b19:	cmp    al,0x86
  412b1b:	int    0xa1
  412b1d:	add    al,0x9a
  412b1f:	push   es
  412b20:	sbb    al,cl
  412b22:	gs xor bh,al
  412b25:	arpl   WORD PTR [eax+0x74],cx
  412b28:	add    al,0xaa
  412b2a:	sahf   
  412b2b:	mov    ebx,0x4571db9c
  412b30:	test   DWORD PTR [ebx],0x9e1770ac
  412b36:	mov    ecx,0x71790e6f
  412b3b:	jg     0x412b14
  412b3d:	adc    al,0xe
  412b3f:	xchg   edx,eax
  412b40:	stos   DWORD PTR es:[edi],eax
  412b41:	mov    WORD PTR [eax],?
  412b43:	mov    ?,WORD PTR [ebp-0x6d909b9d]
  412b49:	das    
  412b4a:	pop    ecx
  412b4b:	jns    0x412b3e
  412b4d:	ficomp WORD PTR [ebp+0x6c]
  412b50:	out    0xd3,al
  412b52:	(bad)  
  412b53:	addr16 adc bh,ch
  412b56:	xchg   ebp,eax
  412b57:	(bad)  
  412b58:	into   
  412b59:	push   edi
  412b5a:	push   ecx
  412b5b:	test   al,0x3a
  412b5d:	and    al,0x48
  412b5f:	sbb    bl,BYTE PTR [esi+ebx*8-0x50]
  412b63:	femms  
  412b65:	jno    0x412af0
  412b67:	dec    edx
  412b68:	daa    
  412b69:	ds mov ebx,0x939078f5
  412b6f:	xor    BYTE PTR [ebp-0x77ccabf4],ah
  412b75:	xor    DWORD PTR [ebx+0x7ff6289b],0x997cacea
  412b7f:	pop    ebp
  412b80:	enter  0x796f,0xc9
  412b84:	in     eax,0x9e
  412b86:	mul    DWORD PTR [eax-0x53]
  412b89:	lods   eax,DWORD PTR ds:[esi]
  412b8a:	mov    cl,0x90
  412b8c:	mov    edi,0xab31f111
  412b91:	mov    dh,0xfd
  412b93:	cmp    dl,cl
  412b95:	fwait
  412b96:	into   
  412b97:	loop   0x412b50
  412b99:	mov    ch,0xb
  412b9b:	int3   
  412b9c:	out    dx,al
  412b9d:	in     eax,dx
  412b9e:	push   esp
  412b9f:	jecxz  0x412b40
  412ba1:	mov    BYTE PTR [ecx-0x24],dh
  412ba4:	hlt    
  412ba5:	idiv   DWORD PTR [edx]
  412ba7:	call   0x8289:0xc17dd6b7
  412bae:	dec    edi
  412baf:	lock xor al,0x98
  412bb2:	inc    BYTE PTR [ebx+0x72eced84]
  412bb8:	and    eax,0xa66e51bd
  412bbd:	inc    esi
  412bbe:	mov    BYTE PTR [ebx],ah
  412bc0:	inc    ebp
  412bc1:	js     0x412b48
  412bc3:	mov    ebp,0xb59a5331
  412bc8:	sub    DWORD PTR [ebp+0x51],0x5ec2d950
  412bcf:	dec    edi
  412bd0:	retf   0xf526
  412bd3:	jne    0x412c53
  412bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd6:	push   ecx
  412bd7:	mov    edi,0x46036ee2
  412bdc:	push   ebp
  412bdd:	out    0xd3,eax
  412bdf:	(bad)  
  412be1:	neg    BYTE PTR [eax-0x6a]
  412be4:	jbe    0x412bcc
  412be6:	(bad)  
  412be7:	fsubr  QWORD PTR [ebp+0x46]
  412bea:	mov    ebp,0x57a0f3fd
  412bef:	lahf   
  412bf0:	xchg   edi,eax
  412bf1:	xchg   DWORD PTR [edx-0x3e],esi
  412bf4:	mov    ebx,0x5cad6018
  412bf9:	sahf   
  412bfa:	stos   BYTE PTR es:[edi],al
  412bfb:	push   ds
  412bfc:	outs   dx,BYTE PTR ds:[esi]
  412bfd:	in     al,dx
  412bfe:	sub    al,0x7c
  412c00:	dec    edx
  412c01:	pop    esp
  412c02:	outs   dx,BYTE PTR ds:[esi]
  412c03:	push   es
  412c04:	pop    ebp
  412c05:	aad    0x4e
  412c07:	dec    eax
  412c08:	jle    0x412c79
  412c0a:	ret    
  412c0b:	and    al,bh
  412c0d:	and    DWORD PTR [eax],esp
  412c0f:	mov    gs,WORD PTR [ebx]
  412c11:	pop    es
  412c12:	fnstsw WORD PTR [ecx]
  412c14:	fsub   st(4),st
  412c16:	mov    ds:0x683ae649,eax
  412c1b:	shl    BYTE PTR [edi],0xc4
  412c1e:	xchg   edx,eax
  412c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c20:	lods   eax,DWORD PTR ds:[esi]
  412c21:	sahf   
  412c22:	pop    edx
  412c23:	pop    ss
  412c24:	fs or  eax,0x29668cd0
  412c2a:	(bad)  
  412c2b:	scas   al,BYTE PTR es:[edi]
  412c2c:	rcl    BYTE PTR [edi+0x74],1
  412c2f:	or     DWORD PTR [ebp+0x27160584],esi
  412c35:	add    al,0xf
  412c37:	sar    BYTE PTR [edi],1
  412c39:	adc    DWORD PTR [esi],eax
  412c3b:	xchg   ecx,eax
  412c3c:	adc    DWORD PTR [edi-0x679589c4],ebp
  412c42:	fstp   DWORD PTR [eax+0x0]
  412c45:	cmp    BYTE PTR [eax+0x77999c58],ch
  412c4b:	fisub  DWORD PTR [edx+0x1a]
  412c4e:	mov    ch,0x26
  412c50:	mov    ch,0xb6
  412c52:	(bad)  
  412c53:	inc    ecx
  412c54:	sbb    al,0xc5
  412c56:	xchg   edx,eax
  412c57:	loop   0x412be6
  412c59:	(bad)  
  412c5a:	push   ecx
  412c5b:	xor    al,BYTE PTR [eax-0x67]
  412c5e:	clc    
  412c5f:	push   esp
  412c60:	inc    ebp
  412c61:	pop    ds
  412c62:	mov    edi,0x1b052f66
  412c67:	sti    
  412c68:	call   0x5357:0x58e0be15
  412c6f:	cmp    eax,0x4a792771
  412c74:	xchg   ecx,eax
  412c75:	sub    al,BYTE PTR [eax+0x5e435a25]
  412c7b:	sub    eax,esp
  412c7d:	lods   al,BYTE PTR ds:[esi]
  412c7e:	dec    edx
  412c7f:	fnstenv [eax+0x45]
  412c82:	adc    BYTE PTR [ecx],bh
  412c84:	stos   BYTE PTR es:[edi],al
  412c85:	push   ecx
  412c86:	imul   esi,DWORD PTR [ecx-0x53def553],0x5d8c2356
  412c90:	jbe    0x412c1c
  412c92:	sbb    cl,ah
  412c94:	jmp    0x939b:0x858f0463
  412c9b:	fistp  QWORD PTR [edx]
  412c9d:	jl     0x412cb8
  412c9f:	sahf   
  412ca0:	mov    BYTE PTR [ebp-0x30],ah
  412ca3:	mov    edx,0xa56cb61c
  412ca8:	int    0x61
  412caa:	mov    eax,0x1aeaa1e0
  412caf:	mov    bh,0xed
  412cb1:	rcl    DWORD PTR [eax-0x42],cl
  412cb4:	icebp  
  412cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb6:	adc    al,0xfd
  412cb8:	mov    edi,0x8a584b00
  412cbd:	adc    bl,ch
  412cbf:	(bad)  
  412cc0:	pop    ebx
  412cc1:	out    0xcc,al
  412cc3:	call   0x22ce:0xa62574c4
  412cca:	neg    eax
  412ccc:	loopne 0x412c98
  412cce:	pop    ebx
  412ccf:	sbb    al,0x9d
  412cd1:	jbe    0x412ccc
  412cd3:	es je  0x412d4d
  412cd6:	mov    dl,0xa0
  412cd8:	jae    0x412d56
  412cda:	mov    al,0xe1
  412cdc:	mov    ah,0xff
  412cde:	(bad)  
  412cdf:	imul   edx,DWORD PTR [ebp-0x712e582d],0x9fd7ea53
  412ce9:	xchg   edx,eax
  412cea:	inc    BYTE PTR [edi+0x24]
  412ced:	pusha  
  412cee:	cmp    DWORD PTR [ecx+eax*4],ebp
  412cf1:	popa   
  412cf2:	(bad)
  412cf5:	mov    eax,0xb15754bc
  412cfa:	push   eax
  412cfb:	dec    ebx
  412cfc:	mov    eax,ds:0x5320ee73
  412d01:	push   esp
  412d02:	jl     0x412cbb
  412d04:	or     cl,bl
  412d06:	ds push eax
  412d08:	cmp    edi,DWORD PTR [ecx+eiz*2+0x7b]
  412d0c:	and    edi,DWORD PTR [ebx]
  412d0e:	bound  edi,QWORD PTR [ebp+eiz*4+0x5b]
  412d12:	idiv   DWORD PTR [ecx]
  412d14:	push   eax
  412d15:	cmp    ah,BYTE PTR [edi]
  412d17:	mov    al,0x5f
  412d19:	in     al,0xfa
  412d1b:	out    0x1,eax
  412d1d:	and    eax,0xc096890a
  412d22:	addr16 mov ch,0x29
  412d25:	xchg   DWORD PTR [ecx-0x4f5f8624],esi
  412d2b:	rol    bl,1
  412d2d:	dec    eax
  412d2e:	xchg   DWORD PTR [esi+0x15],ecx
  412d31:	aas    
  412d32:	out    dx,eax
  412d33:	inc    edx
  412d34:	mov    eax,ds:0xfefff7c1
  412d39:	int    0x3c
  412d3b:	inc    eax
  412d3c:	lods   eax,DWORD PTR ds:[esi]
  412d3d:	enter  0x60eb,0x19
  412d41:	push   0x8891128
  412d46:	imul   eax,DWORD PTR [eax-0x6ea6330e],0x39caf1df
  412d50:	jecxz  0x412d7b
  412d52:	sub    cl,ah
  412d54:	or     al,0x36
  412d56:	cli    
  412d57:	inc    ebx
  412d58:	inc    edx
  412d59:	jecxz  0x412da6
  412d5b:	fiadd  WORD PTR [ecx-0x6f]
  412d5e:	enter  0xc41c,0xda
  412d62:	in     al,0x57
  412d64:	test   DWORD PTR [edx+edi*2+0x77dae85c],ebp
  412d6b:	push   eax
  412d6c:	xlat   BYTE PTR fs:[ebx]
  412d6e:	and    eax,0xbeca0404
  412d73:	iret   
  412d74:	dec    edi
  412d75:	push   edx
  412d76:	adc    al,0x2b
  412d78:	es fmul st,st(3)
  412d7b:	outs   dx,DWORD PTR ds:[esi]
  412d7c:	inc    esi
  412d7d:	mov    ds:0x693a2398,eax
  412d82:	xchg   ecx,eax
  412d83:	add    esp,DWORD PTR [edx-0x4e]
  412d86:	sbb    ah,BYTE PTR [esi-0x898820c]
  412d8c:	jl     0x412d23
  412d8e:	fs dec esi
  412d90:	aaa    
  412d91:	xor    ch,BYTE PTR [ebp+esi*1-0x2d]
  412d95:	cli    
  412d96:	icebp  
  412d97:	les    edx,FWORD PTR [esi]
  412d99:	adc    eax,0xa1db32ff
  412d9e:	pop    ebx
  412d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da0:	or     bh,ah
  412da2:	xchg   esp,eax
  412da3:	mov    dh,bl
  412da5:	fnstsw WORD PTR [ebx]
  412da7:	and    DWORD PTR [eax-0x20],eax
  412daa:	jb     0x412d7e
  412dac:	dec    esp
  412dad:	fnsave [esi]
  412daf:	xchg   ebx,eax
  412db0:	lock pop esi
  412db2:	sbb    al,0x84
  412db4:	mov    ds:0x737562fd,al
  412db9:	pop    eax
  412dba:	jge    0x412def
  412dbc:	sub    ebp,DWORD PTR [eax-0x2e]
  412dbf:	scas   eax,DWORD PTR es:[edi]
  412dc0:	out    dx,al
  412dc1:	jecxz  0x412e41
  412dc3:	push   0x71
  412dc5:	ror    BYTE PTR [eax+0x6f],1
  412dc8:	(bad)  
  412dc9:	jmp    0x412d87
  412dcb:	sar    DWORD PTR [esi+0x4],1
  412dce:	into   
  412dcf:	jl     0x412d52
  412dd1:	pop    ebp
  412dd2:	out    0xfa,al
  412dd4:	leave  
  412dd5:	mov    ebx,0x1996a6f0
  412dda:	pusha  
  412ddb:	(bad)  
  412ddc:	shr    BYTE PTR [eax-0x29370e3c],cl
  412de2:	shl    DWORD PTR [edi],1
  412de4:	pop    edx
  412de5:	add    bl,al
  412de7:	push   0xffffff8d
  412de9:	adc    DWORD PTR [ecx-0x35],esi
  412dec:	and    eax,0xa107f3f7
  412df1:	ficom  WORD PTR [edx-0x16]
  412df4:	clc    
  412df5:	fmul   QWORD PTR [ebx+0x48002599]
  412dfb:	dec    edi
  412dfc:	stos   DWORD PTR es:[edi],eax
  412dfd:	lahf   
  412dfe:	stos   DWORD PTR es:[edi],eax
  412dff:	jbe    0x412dc6
  412e01:	adc    eax,0xe180a291
  412e06:	mov    edx,0xf8199ba1
  412e0b:	or     DWORD PTR [edi],edi
  412e0d:	in     eax,0x26
  412e0f:	xchg   BYTE PTR [ebp+ebx*4-0x27],cl
  412e13:	add    eax,0xafc5364d
  412e18:	pop    ecx
  412e19:	xlat   BYTE PTR ds:[ebx]
  412e1a:	dec    edx
  412e1b:	cs mov bh,0xf7
  412e1e:	push   ds
  412e1f:	mov    eax,DWORD PTR [eax+0x3a]
  412e22:	in     eax,0xae
  412e24:	push   cs
  412e25:	add    al,0x78
  412e27:	dec    esi
  412e28:	xchg   edx,eax
  412e29:	in     eax,dx
  412e2a:	push   ebx
  412e2b:	gs add edx,esi
  412e2e:	pop    edi
  412e2f:	test   eax,0x7ac178cc
  412e34:	stos   DWORD PTR es:[edi],eax
  412e35:	mov    al,0xd3
  412e37:	jbe    0x412e76
  412e39:	sub    eax,0x2305529c
  412e3e:	icebp  
  412e3f:	cmp    edi,DWORD PTR [ecx+edx*2+0x2953828d]
  412e46:	scas   al,BYTE PTR es:[edi]
  412e47:	inc    esi
  412e48:	cmp    BYTE PTR [eax-0x6988582a],0x24
  412e4f:	mov    dh,0x9a
  412e51:	xor    ebp,DWORD PTR [eax]
  412e53:	xchg   ebx,eax
  412e54:	mov    ebx,0xec7367e5
  412e59:	fsubr  st(6),st
  412e5b:	mov    bh,0x7e
  412e5d:	jl     0x412e8c
  412e5f:	and    ah,BYTE PTR [esi+edi*1]
  412e62:	dec    ebp
  412e63:	adc    al,0xbc
  412e65:	sti    
  412e66:	repz pusha 
  412e68:	cmp    DWORD PTR [ecx+0x69],ebx
  412e6b:	sbb    dl,dl
  412e6d:	fnsavew [ecx-0x33929d06]
  412e74:	js     0x412e2b
  412e76:	adc    DWORD PTR [ebx+ebp*8-0x35ed52c3],0x6bd46e0d
  412e81:	call   0xd8de:0xb641e4e2
  412e88:	in     al,dx
  412e89:	push   esp
  412e8a:	sbb    BYTE PTR [edx+0x407645c9],0x27
  412e91:	mov    al,ds:0x9f09c48a
  412e96:	push   esp
  412e97:	dec    edx
  412e98:	addr16 push ebx
  412e9a:	pop    ebx
  412e9b:	test   al,0xb5
  412e9d:	jae    0x412e23
  412e9f:	cmp    ebx,DWORD PTR [edi]
  412ea1:	lahf   
  412ea2:	adc    BYTE PTR [ecx-0x7e4f10ea],dl
  412ea8:	xor    edx,0x60ed75fa
  412eae:	shl    eax,0x24
  412eb1:	mov    WORD PTR [ebx-0x53],?
  412eb4:	aas    
  412eb5:	add    eax,DWORD PTR [edx]
  412eb7:	fwait
  412eb8:	retf   
  412eb9:	nop
  412eba:	test   edi,0x2fc86ef1
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	jle    0x412e6c
  412ec3:	div    BYTE PTR es:[esi]
  412ec6:	and    al,0x18
  412ec8:	retf   
  412ec9:	(bad)  
  412eca:	outs   dx,DWORD PTR ds:[esi]
  412ecb:	push   ss
  412ecc:	test   DWORD PTR [edx-0x6b],edx
  412ecf:	cmp    al,0x2c
  412ed1:	push   ebx
  412ed2:	jle    0x412f00
  412ed4:	loop   0x412f14
  412ed6:	fwait
  412ed7:	pushf  
  412ed8:	retf   0xcb99
  412edb:	xlat   BYTE PTR ds:[ebx]
  412edc:	mov    ebx,0x5bbe47d3
  412ee1:	inc    ecx
  412ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee3:	or     eax,0xcb9c399d
  412ee8:	xor    al,0x15
  412eea:	jmp    0x6de52f6
  412eef:	mov    ds:0x1b2e4157,al
  412ef4:	cmp    esp,DWORD PTR [eax+0x7d]
  412ef7:	adc    al,0x98
  412ef9:	cmc    
  412efa:	jne    0x412ed1
  412efc:	(bad)
  412eff:	jb     0x412f12
  412f01:	mov    edi,0x5230309c
  412f06:	cdq    
  412f07:	adc    BYTE PTR [edi+0x62],dh
  412f0a:	fs jae 0x412f76
  412f0d:	(bad)  
  412f0e:	lock fisttp DWORD PTR [edi+0x5548ca9b]
  412f15:	xchg   edx,eax
  412f16:	pop    ds
  412f17:	popf   
  412f18:	jnp    0x412ef1
  412f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f1b:	add    BYTE PTR [eax+0x416109],ch
  412f21:	lods   eax,DWORD PTR ds:[esi]
  412f22:	jno    0x412edc
  412f24:	cld    
  412f25:	add    edx,DWORD PTR [edi+0x2487cb08]
  412f2b:	jae    0x412f7a
  412f2d:	repnz inc esp
  412f2f:	fdiv   QWORD PTR [eax]
  412f31:	cmc    
  412f32:	fild   WORD PTR [edx+0xfb47ca7]
  412f38:	dec    esp
  412f39:	test   BYTE PTR [ebx],dl
  412f3b:	(bad)  
  412f3c:	(bad)  
  412f3d:	leave  
  412f3e:	push   edx
  412f3f:	adc    ch,BYTE PTR [edi]
  412f41:	adc    BYTE PTR [ecx+0x15d8b342],bl
  412f47:	push   ss
  412f48:	loop   0x412fae
  412f4a:	inc    ebp
  412f4b:	push   ds
  412f4c:	mov    dl,0x80
  412f4e:	sub    al,ah
  412f50:	aam    0x35
  412f52:	adc    DWORD PTR [ecx-0x15e3a45c],edi
  412f58:	ins    DWORD PTR es:[edi],dx
  412f59:	les    esp,FWORD PTR [edi+0x1d083fc8]
  412f5f:	jnp    0x412f16
  412f61:	mov    cl,0x6
  412f63:	dec    ebp
  412f64:	outs   dx,BYTE PTR ds:[esi]
  412f65:	sub    dh,ch
  412f67:	fnsave [esi]
  412f69:	mov    dh,0x33
  412f6b:	sbb    eax,0xeace239
  412f70:	jge    0x412f17
  412f72:	ins    BYTE PTR es:[edi],dx
  412f73:	mov    eax,ds:0x2ee2e42
  412f78:	or     BYTE PTR [ecx-0x34e120fa],0x83
  412f7f:	push   0x57e774cc
  412f84:	aad    0x2a
  412f86:	(bad)  
  412f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f88:	rol    BYTE PTR [eax],1
  412f8a:	pop    edx
  412f8b:	jbe    0x412f4f
  412f8d:	jno    0x412f9e
  412f8f:	pop    edi
  412f90:	sub    eax,DWORD PTR [edi]
  412f92:	xchg   ebx,eax
  412f93:	sbb    eax,0x58f4bb5a
  412f98:	xchg   esi,eax
  412f99:	popa   
  412f9a:	adc    BYTE PTR [ebx-0x298ae6ad],0x1f
  412fa1:	and    DWORD PTR [edx+edx*8+0x49],ebx
  412fa5:	mov    al,ds:0x8e2786a
  412faa:	cmp    al,0xa3
  412fac:	inc    edi
  412fad:	fdiv   QWORD PTR [eax-0x37]
  412fb0:	pop    eax
  412fb1:	and    DWORD PTR [esi+edi*4-0x56],esp
  412fb5:	bound  ecx,QWORD PTR [eax-0x6f]
  412fb8:	cmp    edi,esi
  412fba:	pop    es
  412fbb:	bound  ebx,QWORD PTR [ecx+eiz*1+0x5f]
  412fbf:	and    bh,BYTE PTR [ecx]
  412fc1:	test   BYTE PTR [esi+0x27],dh
  412fc4:	jg     0x413045
  412fc6:	pop    edi
  412fc7:	pop    edi
  412fc8:	pop    esi
  412fc9:	and    DWORD PTR ds:0x5fa36ef7,ebp
  412fcf:	adc    al,BYTE PTR [esi+edi*8]
  412fd2:	out    dx,eax
  412fd3:	mov    eax,0x5a64dcda
  412fd8:	retf   0x9bfd
  412fdb:	out    0xa,al
  412fdd:	sar    ecx,1
  412fdf:	xor    eax,0x88bc39b
  412fe4:	mov    dh,0x1b
  412fe6:	cwde   
  412fe7:	xor    edi,DWORD PTR [edx-0xe]
  412fea:	sub    ebp,ecx
  412fec:	jecxz  0x412f7e
  412fee:	pop    ebp
  412fef:	into   
  412ff0:	cmp    DWORD PTR [esi+edx*1],esi
  412ff3:	outs   dx,BYTE PTR ds:[esi]
  412ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff5:	cwde   
  412ff6:	inc    ebp
  412ff7:	jl     0x413003
  412ff9:	pop    eax
  412ffa:	inc    edx
  412ffb:	or     edi,DWORD PTR [ebx-0x475f2290]
  413001:	jge    0x41304c
  413003:	or     ch,0x6
  413006:	inc    ebp
  413007:	add    DWORD PTR [eax-0x7b],edi
  41300a:	or     DWORD PTR [ecx],esp
  41300c:	xchg   DWORD PTR [edx+0x30],ebp
  41300f:	int3   
  413010:	xor    BYTE PTR [edi-0x62c406ad],al
  413016:	jle    0x413009
  413018:	addr16 enter 0xeb15,0x61
  41301d:	cld    
  41301e:	jno    0x41309d
  413020:	inc    ebx
  413021:	or     eax,0x15849df1
  413026:	pop    ebx
  413027:	ficom  WORD PTR [edi-0x127f59d8]
  41302d:	mov    ds:0x5a1e7dc0,al
  413032:	sysexit 
  413034:	mov    ecx,0x8deb6748
  413039:	ja     0x413070
  41303b:	outs   dx,DWORD PTR ds:[esi]
  41303c:	jecxz  0x412fcc
  41303e:	or     DWORD PTR [edx],eax
  413040:	(bad)  
  413041:	jb     0x4130c2
  413043:	xchg   edi,ecx
  413045:	dec    eax
  413046:	lods   al,BYTE PTR ds:[esi]
  413047:	jb     0x412feb
  413049:	fld    QWORD PTR [edx-0x3fd2c4d4]
  41304f:	(bad)  
  413050:	xchg   esp,eax
  413051:	repz jecxz 0x41301f
  413054:	mov    DWORD PTR [edi-0x6b837d47],esi
  41305a:	sbb    dh,BYTE PTR [eax-0x2741681c]
  413060:	cmp    eax,0xafa56c04
  413065:	(bad)  
  413066:	aaa    
  413067:	test   al,0x38
  413069:	leave  
  41306a:	out    0xb7,eax
  41306c:	shl    ecx,0x8c
  41306f:	jae    0x4130e8
  413071:	enter  0xd4b0,0xbf
  413075:	push   esp
  413076:	shr    BYTE PTR [edx-0x25],0xeb
  41307a:	adc    DWORD PTR [edx],esi
  41307c:	daa    
  41307d:	jbe    0x4130f8
  41307f:	add    cl,BYTE PTR [edi+0x6]
  413082:	sbb    BYTE PTR [edx],0x8
  413085:	sbb    al,dh
  413087:	cmp    DWORD PTR [eiz*1-0xa165827],eax
  41308e:	mov    edi,0xecdf51a7
  413093:	mov    esi,0xd30b3b8f
  413098:	aaa    
  413099:	pop    ss
  41309a:	sub    eax,edx
  41309c:	(bad)  
  41309d:	jecxz  0x413059
  41309f:	cmc    
  4130a0:	hlt    
  4130a1:	mov    al,0x8a
  4130a3:	pop    ebx
  4130a4:	pop    ecx
  4130a5:	inc    eax
  4130a6:	mov    eax,0x816f95ea
  4130ab:	cmp    al,0xf7
  4130ad:	add    eax,DWORD PTR [edx+0x317e7b2c]
  4130b3:	inc    ecx
  4130b4:	dec    ebp
  4130b5:	xor    eax,0x1601e2e9
  4130ba:	cmp    cl,BYTE PTR [edx-0x1a]
  4130bd:	push   0x7cfbf1ac
  4130c2:	sub    dh,bh
  4130c4:	inc    ecx
  4130c5:	cmp    BYTE PTR ds:0xf8841380,0x79
  4130cc:	sbb    ch,BYTE PTR [esp+eiz*2+0xf]
  4130d0:	cmp    dl,ch
  4130d2:	ret    0x7549
  4130d5:	mov    ds:0x902a7af3,al
  4130da:	adc    BYTE PTR [edx-0x38347d5],ch
  4130e0:	inc    edi
  4130e1:	push   es
  4130e2:	imul   dh
  4130e4:	and    ch,BYTE PTR [ebp+eiz*8-0x3c11b087]
  4130eb:	ins    DWORD PTR es:[edi],dx
  4130ec:	xchg   esi,eax
  4130ed:	or     eax,DWORD PTR [ebx+0x7ddf949b]
  4130f3:	jne    0x41316d
  4130f5:	mov    ds:0x6974ef8a,eax
  4130fa:	xor    ecx,ebx
  4130fc:	xor    eax,0xe3a24d0e
  413101:	nop
  413102:	bnd jno 0x4130c6
  413105:	dec    edi
  413106:	fisub  WORD PTR [esi]
  413108:	sub    eax,0x8a80f7ed
  41310d:	push   cs
  41310e:	push   0x34
  413110:	scas   al,BYTE PTR es:[edi]
  413111:	pop    esi
  413112:	cmp    DWORD PTR [ecx-0x37],ecx
  413115:	pop    ebx
  413116:	shl    DWORD PTR [ebp+0x47],cl
  413119:	mov    ah,0xf2
  41311b:	stos   BYTE PTR es:[edi],al
  41311c:	jmp    0x1adb009e
  413121:	mov    ds:0x3e4d753a,eax
  413126:	mov    edi,0x62044a79
  41312b:	mov    eax,ds:0x26631aa6
  413130:	pop    esp
  413131:	xchg   edx,eax
  413132:	addr16 dec eax
  413134:	sub    BYTE PTR [ecx-0x8],bh
  413137:	add    eax,0x36a83513
  41313c:	out    dx,eax
  41313d:	fild   WORD PTR [edi+0x4f]
  413140:	cmp    ah,0x18
  413143:	iret   
  413144:	mov    ds:0xc8cbf29d,al
  413149:	adc    al,BYTE PTR [ebp+esi*8-0x2d13acea]
  413150:	ins    BYTE PTR es:[edi],dx
  413151:	push   ds
  413152:	dec    ebx
  413153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413154:	ins    DWORD PTR es:[edi],dx
  413155:	pop    edi
  413156:	fnsave [ebx+0x74dabf36]
  41315c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41315d:	or     al,0xdf
  41315f:	stos   BYTE PTR es:[edi],al
  413160:	rcl    BYTE PTR [eax-0x41],0x1c
  413164:	push   ecx
  413165:	cmp    ebp,ebp
  413167:	aad    0xa4
  413169:	test   eax,0x6c3f5d5a
  41316e:	push   edi
  41316f:	pop    esp
  413170:	adc    BYTE PTR [ecx+0x47887cef],0x26
  413177:	into   
  413178:	push   ecx
  413179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41317a:	and    esp,DWORD PTR [esi+0x26]
  41317d:	mov    dl,0x29
  41317f:	bound  edi,QWORD PTR ds:0x8156e844
  413185:	mov    DWORD PTR ds:0x79717e0f,ebp
  41318b:	adc    BYTE PTR [ebp-0x97edad0],cl
  413191:	pop    ebx
  413192:	sub    al,0x9c
  413194:	pop    ebp
  413195:	mov    bh,0x8e
  413197:	sub    DWORD PTR [edx+eiz*2+0x60],edx
  41319b:	xchg   DWORD PTR [edx+0x50f32551],ebp
  4131a1:	loopne 0x4131f4
  4131a3:	mov    ebx,0x30a6f275
  4131a8:	adc    DWORD PTR [ebx],eax
  4131aa:	aas    
  4131ab:	pop    esp
  4131ac:	inc    ecx
  4131ad:	mov    WORD PTR [eax],gs
  4131af:	push   ds
  4131b0:	arpl   WORD PTR [ecx+0x3e],dx
  4131b3:	push   es
  4131b4:	fsubr  QWORD PTR [esp+eax*4+0x7c]
  4131b8:	xor    eax,DWORD PTR [ebx+0x57]
  4131bb:	dec    ebp
  4131bc:	push   ss
  4131bd:	fidiv  DWORD PTR [edx+ebp*2-0x1e]
  4131c1:	dec    ebx
  4131c2:	push   edi
  4131c3:	add    DWORD PTR [ebx-0x15],edi
  4131c6:	cmp    dh,bh
  4131c8:	and    eax,0x40b6503b
  4131cd:	pop    edx
  4131ce:	push   ebp
  4131cf:	ds mov ch,0x1f
  4131d2:	addr16 pop es
  4131d4:	outs   dx,DWORD PTR ds:[esi]
  4131d5:	xchg   sp,ax
  4131d7:	sub    BYTE PTR [ebx+0x75e60bbd],dl
  4131dd:	out    dx,eax
  4131de:	or     cl,BYTE PTR [edi+0x7ebc8dfd]
  4131e4:	jmp    0x58be58e9
  4131e9:	popa   
  4131ea:	xchg   ebx,eax
  4131eb:	cli    
  4131ec:	push   edi
  4131ed:	stos   DWORD PTR es:[di],eax
  4131ef:	(bad)  
  4131f0:	push   ebx
  4131f1:	xchg   cl,ch
  4131f3:	loope  0x41323d
  4131f5:	cmp    ebx,DWORD PTR [ecx-0x5b]
  4131f8:	mov    ch,0xfb
  4131fa:	and    dh,BYTE PTR [edi-0x10]
  4131fd:	lds    eax,FWORD PTR [edi]
  4131ff:	outs   dx,DWORD PTR ds:[esi]
  413200:	and    BYTE PTR cs:[edi+0x47],cl
  413204:	mov    ebx,0xf500b72
  413209:	pop    edi
  41320a:	fidiv  DWORD PTR [ebp-0x1aa8158e]
  413210:	sbb    eax,0x1a98644d
  413215:	cs stc 
  413217:	jge    0x413281
  413219:	cli    
  41321a:	fcom   QWORD PTR [edx+0x6a]
  41321d:	fdiv   QWORD PTR [esp+edx*8-0x433b9cb0]
  413224:	enter  0x3925,0xc5
  413228:	int    0x23
  41322a:	aam    0xa0
  41322c:	adc    DWORD PTR [edi+0x7b],0x1e
  413230:	and    DWORD PTR [esi+edi*4+0x4a],esp
  413234:	lods   eax,DWORD PTR ds:[esi]
  413235:	xchg   esi,eax
  413236:	xchg   edx,eax
  413237:	jp     0x41320d
  413239:	enter  0x5128,0x44
  41323d:	pop    ss
  41323e:	fucom  st(6)
  413240:	cmp    edx,DWORD PTR [edx-0x48]
  413243:	cmc    
  413244:	dec    ecx
  413245:	xchg   esp,eax
  413246:	cld    
  413247:	repnz aad 0x6c
  41324a:	adc    al,0xc7
  41324c:	cmp    al,0xbd
  41324e:	inc    ecx
  41324f:	ds push esp
  413251:	adc    eax,0x89472f0d
  413256:	xchg   edi,eax
  413257:	sahf   
  413258:	inc    edi
  413259:	ret    0xb66b
  41325c:	jecxz  0x413223
  41325e:	inc    edx
  41325f:	adc    BYTE PTR [esi-0x46],bh
  413262:	loop   0x4131e8
  413264:	retf   
  413265:	test   eax,0x24a06a2
  41326a:	jge    0x413250
  41326c:	ficomp DWORD PTR [edx+ecx*2+0x56]
  413270:	imul   DWORD PTR [ebp+0x284664ea]
  413276:	mov    esi,0x3737f015
  41327b:	cmp    BYTE PTR [edx],0xc4
  41327e:	fwait
  41327f:	loopne 0x4132ec
  413281:	in     al,0xf3
  413283:	pop    ebp
  413284:	mov    ?,WORD PTR [edi+0x60cbd5ef]
  41328a:	jne    0x413215
  41328c:	pop    eax
  41328d:	xchg   ebx,eax
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	stos   BYTE PTR es:[edi],al
  413290:	or     BYTE PTR [ecx],dh
  413292:	mov    ds:0xdd1dfe32,al
  413297:	test   al,0x50
  413299:	xor    BYTE PTR [eax+0x3f],cl
  41329c:	dec    eax
  41329d:	ins    BYTE PTR es:[edi],dx
  41329e:	sub    eax,0x8531c907
  4132a3:	nop/reserved BYTE PTR ds:0x82037a0f
  4132aa:	inc    ebx
  4132ab:	gs push esi
  4132ad:	sbb    al,0x4e
  4132af:	enter  0x99bc,0xb1
  4132b3:	cs mov ebx,0x66b0d1c7
  4132b9:	imul   edx,DWORD PTR [esi+ecx*2-0x5004c45b],0x41
  4132c1:	mov    WORD PTR [esi+0x3f],?
  4132c4:	ds mov dl,0x6c
  4132c7:	sbb    eax,0xdf6e3fb6
  4132cc:	ins    BYTE PTR es:[edi],dx
  4132cd:	into   
  4132ce:	adc    eax,0xa897c99c
  4132d3:	push   esi
  4132d4:	test   eax,0xcbd0fa32
  4132d9:	je     0x41327b
  4132db:	xchg   edi,eax
  4132dc:	jmp    0x4132d6
  4132de:	ror    BYTE PTR [esi],1
  4132e0:	scas   eax,DWORD PTR es:[edi]
  4132e1:	lock js 0x413334
  4132e4:	arpl   WORD PTR [ecx+esi*1],bx
  4132e7:	mov    WORD PTR [esi+eiz*2-0xf],?
  4132eb:	lahf   
  4132ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ed:	sbb    al,0xaf
  4132ef:	pop    es
  4132f0:	and    al,0x65
  4132f2:	ds stos BYTE PTR es:[edi],al
  4132f4:	or     dh,BYTE PTR es:[eax+0x46]
  4132f8:	dec    edx
  4132f9:	(bad)
  4132fd:	or     dh,dl
  4132ff:	(bad)
  413304:	into   
  413305:	leave  
  413306:	pop    esi
  413307:	mov    dh,0xd
  413309:	push   ss
  41330a:	mov    eax,ds:0x34fdcb1c
  41330f:	idiv   BYTE PTR [esi-0x4b]
  413312:	int3   
  413313:	(bad)  
  413314:	mov    al,ds:0xb10e21fc
  413319:	push   es
  41331a:	push   esi
  41331b:	das    
  41331c:	sbb    al,0x9f
  41331e:	fimul  WORD PTR [edi-0x2d]
  413321:	data16 sahf 
  413323:	adc    BYTE PTR [esi+0x56807b3],0x33
  41332a:	cli    
  41332b:	dec    ebx
  41332c:	mov    esi,DWORD PTR ds:[ebp+0x1a]
  413330:	ret    
  413331:	dec    esi
  413332:	jp     0x4132b9
  413334:	push   eax
  413335:	add    eax,0xe8e01030
  41333a:	cdq    
  41333b:	shr    DWORD PTR [ebx+edx*4-0x2a5a2029],0xc8
  413343:	js     0x41330f
  413345:	inc    eax
  413346:	pop    edx
  413347:	inc    eax
  413348:	push   cs
  413349:	push   cs
  41334a:	mov    ebx,0x9f251c52
  41334f:	les    ebx,FWORD PTR [eax+0x2]
  413352:	pop    eax
  413353:	ja     0x413336
  413355:	mov    ebx,0xaddc75d4
  41335a:	jecxz  0x4133d2
  41335c:	or     al,0x14
  41335e:	mov    ecx,0xa52983af
  413363:	jne    0x41337a
  413365:	mov    ebx,0xe28182ee
  41336a:	ins    BYTE PTR es:[edi],dx
  41336b:	lahf   
  41336c:	push   0xf1bc3ddd
  413371:	adc    DWORD PTR [edi-0x3440e58b],ebp
  413377:	cmp    BYTE PTR [edi-0x60e84334],dh
  41337d:	xchg   edi,eax
  41337e:	std    
  41337f:	test   BYTE PTR [ebp-0x3c],ch
  413382:	rol    DWORD PTR [esi-0x62],0xbd
  413386:	or     al,bl
  413388:	lds    esi,FWORD PTR [eax-0x620ffecd]
  41338e:	mov    ss,WORD PTR [ebp+0x18]
  413391:	ja     0x413391
  413393:	push   es
  413394:	jnp    0x413387
  413396:	and    al,0xac
  413398:	xchg   ebp,eax
  413399:	ins    DWORD PTR es:[edi],dx
  41339a:	icebp  
  41339b:	ret    0x516e
  41339e:	repz in eax,0x96
  4133a1:	outs   dx,DWORD PTR ds:[esi]
  4133a2:	test   eax,0x1bf96a92
  4133a7:	addr16 pop eax
  4133a9:	xor    DWORD PTR [ebp+eax*1+0x76d55e91],ebp
  4133b0:	xchg   ecx,eax
  4133b1:	mov    esi,0x357fd8fe
  4133b6:	loop   0x413409
  4133b8:	inc    ebp
  4133b9:	ja     0x41333b
  4133bb:	cld    
  4133bc:	jae    0x41341b
  4133be:	aam    0xfd
  4133c0:	cmp    al,0xc1
  4133c2:	fdiv   DWORD PTR [ebx-0x271c6180]
  4133c8:	xor    dh,BYTE PTR ds:0xf4375673
  4133ce:	and    edi,DWORD PTR [edi+0x33]
  4133d1:	gs jle 0x4133ef
  4133d4:	fild   DWORD PTR [ebx]
  4133d6:	jmp    0x444e:0xe2f6b939
  4133dd:	push   0x8d9578c0
  4133e2:	lods   eax,DWORD PTR ds:[esi]
  4133e3:	add    esi,DWORD PTR [esi+ecx*2]
  4133e6:	lods   al,BYTE PTR ds:[esi]
  4133e7:	rcl    BYTE PTR [ebp+0x4278f782],1
  4133ed:	pop    ebx
  4133ee:	cmp    DWORD PTR [ebp-0x4],ebp
  4133f1:	or     dh,ah
  4133f3:	mov    bh,0xb2
  4133f5:	sbb    DWORD PTR [esi+0x689fecc8],edi
  4133fb:	xor    DWORD PTR [edi-0x45],ebp
  4133fe:	xor    eax,0x42d904c
  413403:	and    al,0x3f
  413405:	xchg   DWORD PTR [esp+ebp*1+0x771018d8],esi
  41340c:	dec    edi
  41340d:	sbb    al,0xee
  41340f:	cwd    
  413411:	jne    0x41340f
  413413:	and    DWORD PTR [ecx],0xffffffea
  413416:	inc    ecx
  413417:	in     eax,dx
  413418:	retf   
  413419:	out    dx,eax
  41341a:	and    esp,DWORD PTR [esi-0x18]
  41341d:	mov    dl,0x14
  41341f:	fmul   st,st(4)
  413421:	retf   
  413422:	and    DWORD PTR [ebx+0x23],esp
  413425:	pop    ebp
  413426:	shl    DWORD PTR [ecx+0x5c],cl
  413429:	xor    edx,DWORD PTR [ecx+ecx*8-0x6c0224fd]
  413430:	out    0x4,eax
  413432:	popa   
  413433:	xor    DWORD PTR [ecx+0x7058c21d],edi
  413439:	ret    
  41343a:	ficom  DWORD PTR [esi+eiz*4+0x1379cb18]
  413441:	popf   
  413442:	ror    DWORD PTR [eax],1
  413444:	stc    
  413445:	jg     0x41341d
  413447:	in     al,dx
  413448:	iret   
  413449:	and    DWORD PTR [ebx],ebx
  41344b:	inc    eax
  41344c:	rcl    DWORD PTR [edi+0x60],0x77
  413450:	loopne 0x413438
  413452:	fisub  WORD PTR [edi-0x6169d35c]
  413458:	sbb    cl,BYTE PTR [edi+edx*2]
  41345b:	(bad)  
  41345c:	adc    bh,BYTE PTR [esi-0x6a]
  41345f:	fwait
  413460:	cdq    
  413461:	(bad)  
  413462:	jo     0x4134b3
  413464:	xchg   edx,eax
  413465:	popf   
  413466:	and    DWORD PTR [ecx],ebx
  413468:	dec    ebx
  413469:	not    BYTE PTR [ecx]
  41346b:	jmp    0x54cdca8a
  413470:	(bad)  
  413471:	out    dx,eax
  413472:	cmp    BYTE PTR [ebx-0x543a5257],dh
  413478:	add    eax,DWORD PTR [ecx+0x36]
  41347b:	sbb    al,0xda
  41347d:	fsubr  DWORD PTR [esi+0x856cd1e]
  413483:	xor    DWORD PTR [ecx-0x3815f845],0x56c4daa
  41348d:	and    DWORD PTR [ebx-0x61],edi
  413490:	loop   0x413457
  413492:	xchg   esi,eax
  413493:	pop    esi
  413494:	mov    DWORD PTR [eax-0x469fbaba],esp
  41349a:	inc    ebp
  41349b:	lahf   
  41349c:	push   esi
  41349d:	enter  0x172b,0x82
  4134a1:	adc    al,0xfa
  4134a3:	and    ebp,DWORD PTR [edx]
  4134a5:	cmp    al,0xc4
  4134a7:	sub    bh,bh
  4134a9:	mov    ch,0x71
  4134ab:	movq   QWORD PTR [esi-0x41f71a40],mm0
  4134b2:	xchg   ebp,eax
  4134b3:	sub    al,0xe4
  4134b5:	retf   0xaf3a
  4134b8:	sub    DWORD PTR [esi+ebp*4+0x69],esp
  4134bc:	js     0x4134d0
  4134be:	add    esi,DWORD PTR [eax-0x52]
  4134c1:	hlt    
  4134c2:	call   0x2e30:0xb328ef7
  4134c9:	pop    esp
  4134ca:	push   0xf4347c08
  4134cf:	or     DWORD PTR [esi],eax
  4134d1:	fcom   DWORD PTR [edi-0x64]
  4134d4:	mov    ds,WORD PTR [eax+0x52]
  4134d7:	pop    edx
  4134d8:	hlt    
  4134d9:	das    
  4134da:	call   0x9b6b4a84
  4134df:	fnstsw WORD PTR [ebx-0x2b]
  4134e2:	jg     0x4134b3
  4134e4:	lods   al,BYTE PTR ds:[esi]
  4134e5:	nop
  4134e6:	sbb    al,0x3d
  4134e8:	in     eax,dx
  4134e9:	cmp    al,0xb1
  4134eb:	sub    al,0x75
  4134ed:	xchg   esi,eax
  4134ee:	(bad)  
  4134ef:	adc    DWORD PTR [esp+ebp*1+0x37d6d16a],esp
  4134f6:	push   ebp
  4134f7:	shl    BYTE PTR [edx+eax*1],1
  4134fa:	add    eax,0xbba595e0
  4134ff:	push   ds
  413500:	daa    
  413501:	inc    esp
  413502:	mov    ds:0x75eb0aef,eax
  413507:	push   edx
  413508:	cmc    
  413509:	push   ebx
  41350a:	fwait
  41350b:	cld    
  41350c:	jp     0x41356d
  41350e:	arpl   bp,ax
  413510:	push   eax
  413511:	sub    eax,0xeeb67050
  413516:	and    al,0x1e
  413518:	sbb    DWORD PTR [ebp+0x26],0x59
  41351c:	lods   eax,DWORD PTR ds:[esi]
  41351d:	inc    esp
  41351e:	out    dx,eax
  41351f:	add    al,0x41
  413521:	sub    DWORD PTR [ebx+ebx*4-0x41],ecx
  413525:	nop
  413526:	xor    DWORD PTR [edx+0x4e1a01d5],ebx
  41352c:	xchg   edx,eax
  41352d:	push   ebx
  41352e:	xchg   edx,eax
  41352f:	sahf   
  413530:	push   ss
  413531:	(bad)  ds:0xa15d64ca
  413537:	outs   dx,DWORD PTR ds:[esi]
  413538:	dec    ebp
  413539:	dec    esp
  41353a:	in     eax,0x89
  41353c:	jmp    0x4134d9
  41353e:	inc    edx
  41353f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413540:	iret   
  413541:	and    ebp,esp
  413543:	fucomi st,st(2)
  413545:	jle    0x4134fc
  413547:	icebp  
  413548:	mov    eax,ds:0x244ab0b0
  41354d:	adc    al,0x41
  41354f:	dec    esi
  413550:	push   edx
  413551:	xchg   edx,eax
  413552:	inc    edi
  413553:	pusha  
  413554:	mov    BYTE PTR [edi-0x10],dh
  413557:	aas    
  413558:	cli    
  413559:	xlat   BYTE PTR ds:[ebx]
  41355a:	imul   eax,DWORD PTR [edi+0x42ee69d],0x50
  413561:	add    eax,0xd1b59c1
  413566:	pushf  
  413567:	pop    edx
  413568:	inc    esi
  413569:	pop    esi
  41356a:	sub    DWORD PTR ss:[edi+0x4d0d8c31],esi
  413571:	and    ah,BYTE PTR [edi-0x72]
  413574:	sti    
  413575:	sar    cl,0x48
  413578:	xchg   edx,eax
  413579:	aam    0xe1
  41357b:	xchg   ebp,eax
  41357c:	(bad)  
  41357d:	(bad)  [ecx]
  41357f:	lds    edi,FWORD PTR [edi]
  413581:	xchg   ecx,eax
  413582:	sahf   
  413583:	mov    BYTE PTR [edx],dl
  413585:	add    ax,0x238b
  413589:	sahf   
  41358a:	xor    al,0x9b
  41358c:	neg    BYTE PTR [ecx-0x55]
  41358f:	into   
  413590:	out    0x54,al
  413592:	pop    esp
  413593:	sbb    dl,BYTE PTR [eax-0x4d1392b1]
  413599:	retf   
  41359a:	sub    eax,0xb2e4e2a3
  41359f:	int    0xaf
  4135a1:	xor    al,BYTE PTR [eax]
  4135a3:	dec    esi
  4135a4:	inc    ecx
  4135a5:	adc    al,0xc2
  4135a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135a8:	hlt    
  4135a9:	scas   al,BYTE PTR es:[edi]
  4135aa:	adc    al,0x4d
  4135ac:	inc    ebx
  4135ad:	pop    ecx
  4135ae:	(bad)  
  4135af:	jae    0x4135cd
  4135b1:	rol    BYTE PTR [edx],0x65
  4135b4:	leave  
  4135b5:	cli    
  4135b6:	mov    al,ds:0xc2b00743
  4135bb:	dec    DWORD PTR [ecx+0x2b098de6]
  4135c1:	and    eax,0xf50613b6
  4135c6:	mov    eax,0x907dfc59
  4135cb:	jg     0x4135b9
  4135cd:	adc    bl,al
  4135cf:	outs   dx,DWORD PTR ds:[esi]
  4135d0:	stc    
  4135d1:	inc    esi
  4135d2:	sahf   
  4135d3:	adc    BYTE PTR [esp+esi*1+0x0],dl
  4135d7:	mov    edi,0xa3c875bf
  4135dc:	mov    cs,WORD PTR [edx+esi*2-0x2e71417f]
  4135e3:	jae    0x413629
  4135e5:	sahf   
  4135e6:	xor    eax,0x8e0acb9a
  4135eb:	jl     0x413629
  4135ed:	mov    ecx,0x4fb63215
  4135f2:	imul   esi,DWORD PTR [edx*2+0x726e89bc],0xdabe6c64
  4135fd:	aam    0x5e
  4135ff:	sub    al,BYTE PTR [ebx]
  413601:	fnstenv [eax+0x440466e2]
  413607:	(bad)  
  413608:	push   0xf90dfce8
  41360d:	lods   al,BYTE PTR ds:[esi]
  41360e:	shr    DWORD PTR [edx],cl
  413610:	bound  ecx,QWORD PTR [esi+0x750f2af9]
  413616:	cld    
  413617:	rcr    edx,cl
  413619:	add    bh,BYTE PTR [eax]
  41361b:	add    eax,0xda03a2b
  413620:	push   ebp
  413621:	mov    cl,0x37
  413623:	jns    0x4135c8
  413625:	push   cs
  413626:	or     al,0x9c
  413628:	lahf   
  413629:	sti    
  41362a:	fadd   QWORD PTR [eax+esi*2]
  41362d:	and    eax,0x5cb3aa57
  413632:	sbb    BYTE PTR [ebp+0x7c60a68b],ch
  413638:	fsub   DWORD PTR [eax]
  41363a:	out    0x44,eax
  41363c:	xchg   edi,eax
  41363d:	inc    ax
  41363f:	call   0x64df856e
  413644:	pop    es
  413645:	mov    ch,0xfc
  413647:	mov    ecx,ecx
  413649:	das    
  41364a:	cmp    DWORD PTR [esi],ecx
  41364c:	pop    ds
  41364d:	push   edx
  41364e:	push   edi
  41364f:	jb     0x413618
  413651:	pusha  
  413652:	stos   BYTE PTR es:[edi],al
  413653:	xchg   esp,eax
  413654:	sbb    bl,bh
  413656:	adc    bl,cl
  413658:	daa    
  413659:	mov    bh,0xf3
  41365b:	(bad)  [edx-0x1618cbdd]
  413661:	sti    
  413662:	jb     0x41362c
  413664:	ins    DWORD PTR es:[edi],dx
  413665:	jmp    0xfe57:0x8f514aa5
  41366c:	loope  0x413688
  41366e:	push   ebx
  41366f:	xchg   BYTE PTR [ecx],dl
  413671:	ja     0x413691
  413673:	mov    ds:0xf33cd56c,al
  413678:	int3   
  413679:	out    0xa5,al
  41367b:	jp     0x4136d6
  41367d:	mov    dh,0xac
  41367f:	lods   al,BYTE PTR ds:[esi]
  413680:	dec    esi
  413681:	mov    bh,0xc9
  413683:	test   DWORD PTR [edi+0x6d],edi
  413686:	(bad)  
  413687:	lods   eax,DWORD PTR ds:[esi]
  413688:	xchg   edi,eax
  413689:	aas    
  41368a:	idiv   DWORD PTR [eax+0x74]
  41368d:	inc    esi
  41368e:	push   esi
  41368f:	jmp    0x41368d
  413691:	repnz cmp DWORD PTR ds:0xd80ecbcb,0x13
  413699:	in     al,dx
  41369a:	jnp    0x41370c
  41369c:	addr16 jno 0x41366d
  41369f:	add    al,0xe6
  4136a1:	arpl   WORD PTR [esi],ax
  4136a3:	mov    DWORD PTR es:[eax+eiz*8+0x127ede20],ecx
  4136ab:	mov    dl,0xec
  4136ad:	mov    esi,0xc5650967
  4136b2:	test   DWORD PTR [esp+esi*4],edx
  4136b5:	xlat   BYTE PTR ds:[ebx]
  4136b6:	clc    
  4136b7:	(bad)  
  4136b8:	cwde   
  4136b9:	mov    ebx,0x612a0a75
  4136be:	fwait
  4136bf:	cs jle 0x413720
  4136c2:	ja     0x4136a5
  4136c4:	push   esi
  4136c5:	test   eax,0x13b0ecd2
  4136ca:	sub    al,0x91
  4136cc:	xor    al,0xa6
  4136ce:	js     0x413716
  4136d0:	leave  
  4136d1:	aas    
  4136d2:	pop    ecx
  4136d3:	hlt    
  4136d4:	scas   al,BYTE PTR es:[edi]
  4136d5:	cwde   
  4136d6:	mov    eax,0xe6314ba9
  4136db:	cmp    bh,al
  4136dd:	adc    BYTE PTR [edx-0x38749b3a],cl
  4136e3:	add    BYTE PTR [ebx-0xef38d6b],dh
  4136e9:	jl     0x4136f2
  4136eb:	xchg   edi,eax
  4136ec:	cld    
  4136ed:	fisubr DWORD PTR [ecx-0x558b2ada]
  4136f3:	mov    ah,0x77
  4136f5:	and    eax,0xf75dd758
  4136fa:	sbb    esi,DWORD PTR [eax-0x68]
  4136fd:	add    DWORD PTR [esi+0x37],esp
  413700:	and    ch,ah
  413702:	pusha  
  413703:	scas   eax,DWORD PTR es:[edi]
  413704:	mov    edi,0x5a5ff408
  413709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41370a:	jle    0x4136dc
  41370c:	inc    esi
  41370d:	pop    esp
  41370e:	das    
  41370f:	adc    DWORD PTR [eax+0x77],ecx
  413712:	ret    0x8738
  413715:	ret    0xa4b9
  413718:	xor    ebx,DWORD PTR ds:0xd6a8739a
  41371e:	leave  
  41371f:	mov    ah,0xa0
  413721:	jbe    0x413700
  413723:	sbb    edi,esi
  413725:	xor    bl,cl
  413727:	xchg   esp,eax
  413728:	adc    esi,DWORD PTR [ecx+0x1da19f76]
  41372e:	adc    al,BYTE PTR [ecx+0x5]
  413731:	(bad)  
  413733:	xor    ah,BYTE PTR [edi+0x28]
  413736:	in     al,dx
  413737:	jle    0x4136e1
  413739:	cld    
  41373a:	xchg   ecx,eax
  41373b:	out    0x3a,eax
  41373d:	outs   dx,BYTE PTR ds:[esi]
  41373e:	mov    ds:0x67b0e8b3,al
  413743:	mov    ebp,DWORD PTR [eax-0x57]
  413746:	or     DWORD PTR [ebx+esi*4+0x27],0x7b
  41374b:	mov    DWORD PTR [ecx],esp
  41374d:	jbe    0x41378d
  41374f:	cmc    
  413750:	or     DWORD PTR [ecx-0x5c],0x1e821e73
  413757:	into   
  413758:	mov    ecx,0x79969a96
  41375d:	sbb    bl,ah
  41375f:	or     eax,0xa1002f59
  413764:	stos   DWORD PTR es:[edi],eax
  413765:	inc    edx
  413766:	sbb    ebx,edi
  413768:	dec    esp
  413769:	or     dh,BYTE PTR [edx+0x8]
  41376c:	loop   0x4136ee
  41376e:	cwde   
  41376f:	sbb    ebp,DWORD PTR [ecx+ecx*2+0x22]
  413773:	out    dx,al
  413774:	aad    0xd6
  413776:	dec    ebx
  413777:	mov    al,ds:0x94c28065
  41377c:	adc    al,0x75
  41377e:	sub    esp,DWORD PTR [edx+0x3e5dd7e2]
  413784:	sbb    al,0xc2
  413786:	cmc    
  413787:	push   esi
  413788:	bound  esi,QWORD PTR [ebp+0x356b2960]
  41378e:	ins    DWORD PTR es:[edi],dx
  41378f:	sar    ecx,1
  413791:	or     ebp,esi
  413793:	fimul  WORD PTR [ebx-0x54]
  413796:	pop    ebx
  413797:	test   eax,0xb114b8dd
  41379c:	cmp    edi,esp
  41379e:	sahf   
  41379f:	dec    ebx
  4137a0:	lods   eax,DWORD PTR ds:[esi]
  4137a1:	pop    ebp
  4137a2:	cmc    
  4137a3:	ss xchg ebp,ecx
  4137a6:	adc    dl,BYTE PTR [ecx]
  4137a8:	scas   eax,DWORD PTR es:[edi]
  4137a9:	stos   BYTE PTR es:[edi],al
  4137aa:	and    edx,DWORD PTR ds:0xb133bfda
  4137b0:	xchg   esi,eax
  4137b1:	dec    ebp
  4137b2:	cli    
  4137b3:	mov    esi,0xca392690
  4137b8:	sub    al,0xcd
  4137ba:	ret    
  4137bb:	xlat   BYTE PTR ds:[ebx]
  4137bc:	cs nop
  4137be:	mov    eax,ds:0xdf66a47c
  4137c3:	das    
  4137c4:	pop    edx
  4137c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137c6:	lahf   
  4137c7:	dec    esi
  4137c8:	push   edi
  4137c9:	mov    al,ds:0x9323bb06
  4137ce:	mov    esi,0x87549e68
  4137d3:	cmp    dl,BYTE PTR [esi]
  4137d5:	pop    eax
  4137d6:	repz (bad) 
  4137d8:	lds    eax,FWORD PTR [ebx]
  4137da:	or     al,BYTE PTR [edx-0x2c]
  4137dd:	je     0x41376e
  4137df:	mov    al,0x65
  4137e1:	mov    dl,BYTE PTR [ecx+0x19c07d69]
  4137e7:	test   BYTE PTR [edx+eax*8-0x46330c6a],0xae
  4137ef:	xor    DWORD PTR [ebx],edx
  4137f1:	pop    ss
  4137f2:	aas    
  4137f3:	int    0x3e
  4137f5:	mov    eax,0xd7c7168
  4137fa:	shr    BYTE PTR [esi-0x3a],1
  4137fd:	xchg   bp,ax
  4137ff:	test   BYTE PTR [edx],ch
  413801:	int3   
  413802:	mov    BYTE PTR ds:0x32f3eafd,bl
  413808:	test   BYTE PTR [esi+ebx*1+0x1b],ch
  41380c:	cdq    
  41380d:	cld    
  41380e:	sar    DWORD PTR [ebx],1
  413810:	data16 into 
  413812:	out    0xb8,eax
  413814:	pop    ss
  413815:	loopne 0x41381c
  413817:	pop    es
  413818:	cmc    
  413819:	inc    esp
  41381a:	scas   eax,DWORD PTR es:[edi]
  41381b:	xor    eax,0xfafe8224
  413820:	cld    
  413821:	ds inc edi
  413823:	fistp  WORD PTR [edx]
  413825:	sbb    BYTE PTR [ecx+0x1723586f],al
  41382b:	inc    ebp
  41382c:	jmp    0x2ed11623
  413831:	das    
  413832:	jle    0x4137b4
  413834:	je     0x4137b7
  413836:	inc    ecx
  413837:	jl     0x41383b
  413839:	jmp    0x258b:0x857c30f0
  413840:	xchg   esi,eax
  413841:	pop    esi
  413842:	lock push ebp
  413844:	xchg   ecx,eax
  413845:	cwde   
  413846:	(bad)  [ebp+0x5d1dacbd]
  41384c:	xchg   ecx,eax
  41384d:	xchg   ebx,eax
  41384e:	cmp    esp,esi
  413850:	cs cld 
  413852:	push   ebx
  413853:	in     eax,dx
  413854:	mov    bl,BYTE PTR [esi+0x47]
  413857:	inc    esi
  413858:	xchg   esi,eax
  413859:	(bad)  
  41385a:	js     0x41387b
  41385c:	test   al,0xfa
  41385e:	call   0x3243:0x8c98641c
  413865:	leave  
  413866:	arpl   WORD PTR [ecx],ax
  413868:	ins    DWORD PTR es:[edi],dx
  413869:	jge    0x4137f6
  41386b:	mov    bh,dh
  41386d:	mov    al,BYTE PTR [esi]
  41386f:	gs xor ebx,ebp
  413872:	jns    0x4138cd
  413874:	push   ecx
  413875:	xor    ecx,eax
  413877:	rcl    dh,0x94
  41387a:	xchg   ecx,eax
  41387b:	mov    ecx,0x27ccae35
  413880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413881:	out    dx,al
  413882:	pop    ss
  413883:	cmp    esi,esi
  413885:	lods   al,BYTE PTR ds:[esi]
  413886:	jmp    0x2491:0x85a03278
  41388d:	mov    al,0x4b
  41388f:	push   ecx
  413890:	shr    BYTE PTR [edx+0xd99e7f6],0xa4
  413897:	stos   BYTE PTR es:[edi],al
  413898:	test   al,0xf3
  41389a:	sti    
  41389b:	sub    al,0x21
  41389d:	mov    dh,0x47
  41389f:	jmp    0x65f1:0xb46cf15f
  4138a6:	xor    al,0x4c
  4138a8:	inc    ebx
  4138a9:	and    eax,0xffe789bb
  4138ae:	adc    bh,bl
  4138b0:	pushf  
  4138b1:	enter  0x4b29,0x73
  4138b5:	int    0xd6
  4138b7:	test   DWORD PTR [edx+0x3d],esp
  4138ba:	mov    edx,0xd906eb4e
  4138bf:	sub    BYTE PTR [ecx+0x64b5679b],dh
  4138c5:	sbb    cl,ah
  4138c7:	enter  0x62ac,0xc6
  4138cb:	leave  
  4138cc:	xlat   BYTE PTR ds:[ebx]
  4138cd:	inc    edi
  4138ce:	push   cs
  4138cf:	enter  0xf4ec,0xa4
  4138d3:	outs   dx,DWORD PTR ds:[esi]
  4138d4:	(bad)  
  4138d5:	outs   dx,DWORD PTR ds:[esi]
  4138d6:	popa   
  4138d7:	not    DWORD PTR [ecx+0x1d21cc76]
  4138dd:	stc    
  4138de:	adc    edx,DWORD PTR [edx+0x54]
  4138e1:	inc    eax
  4138e2:	cli    
  4138e3:	arpl   WORD PTR [edi-0x7f],cx
  4138e6:	mov    DWORD PTR [ebx],esi
  4138e8:	push   0x57
  4138ea:	rol    DWORD PTR [ecx+0x1f],cl
  4138ed:	ins    BYTE PTR es:[edi],dx
  4138ee:	lods   al,BYTE PTR ds:[esi]
  4138ef:	xchg   esp,eax
  4138f0:	ret    
  4138f1:	rcl    BYTE PTR [ebx+0x39a0620c],0xc8
  4138f8:	pop    ds
  4138f9:	dec    ecx
  4138fa:	int    0x15
  4138fc:	cmp    DWORD PTR [edx],0xa0628a25
  413902:	push   edx
  413903:	ja     0x41397f
  413905:	mul    DWORD PTR [ecx+0x68]
  413908:	push   esp
  413909:	test   eax,0x6cb0c4cc
  41390e:	mov    ecx,0xff4330b0
  413913:	add    esp,edi
  413915:	mov    edx,DWORD PTR [ebx+0x59baeb02]
  41391b:	mov    ecx,0xcccd1ebc
  413920:	sbb    ebx,eax
  413922:	or     edi,esi
  413924:	popf   
  413925:	call   0x36b0:0xc9629827
  41392c:	mov    WORD PTR [esi+edx*2],ss
  41392f:	adc    al,0x1
  413931:	call   0x1142:0x93fc509e
  413938:	pop    esp
  413939:	repz mov ebx,0x7b497dc3
  41393f:	jne    0x41393c
  413941:	test   esi,0x4775a5c3
  413947:	cmp    bl,BYTE PTR [eax-0x31bc2fc9]
  41394d:	cmp    BYTE PTR ds:0xe61c419a,cl
  413953:	and    eax,0x752bab06
  413958:	jmp    0x413936
  41395a:	hlt    
  41395b:	outs   dx,BYTE PTR ds:[esi]
  41395c:	fwait
  41395d:	jbe    0x4139ac
  41395f:	(bad)  
  413960:	jnp    0x4139a6
  413962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413963:	mov    al,0xed
  413965:	xchg   BYTE PTR [eax+eiz*2-0x29],cl
  413969:	mov    eax,0x5ce369a1
  41396e:	push   0x77
  413970:	test   eax,0xfbd2a144
  413975:	test   DWORD PTR [esi-0x3],0xbeffd4cf
  41397c:	inc    ecx
  41397d:	lock push cs
  41397f:	rcr    dl,cl
  413981:	sbb    al,0x0
  413983:	rol    BYTE PTR [edi-0xa],cl
  413986:	cmp    dh,BYTE PTR [eax-0x30]
  413989:	test   DWORD PTR [eax],0x18397179
  41398f:	repnz int 0x76
  413992:	retf   0x623a
  413995:	scas   al,BYTE PTR es:[edi]
  413996:	data16 mov ds:0x21cb290b,al
  41399c:	dec    esi
  41399d:	loopne 0x4139e0
  41399f:	dec    ebp
  4139a0:	push   0xffffffa8
  4139a2:	cmp    eax,0xa0956e23
  4139a7:	pop    esi
  4139a8:	std    
  4139a9:	ror    ecx,1
  4139ab:	fist   WORD PTR [eax]
  4139ad:	cmp    DWORD PTR [edx+0x5f565624],ebp
  4139b3:	or     al,0xdf
  4139b5:	sar    DWORD PTR [esi+0x4e484fa8],0x66
  4139bc:	loopne 0x4139a2
  4139be:	fwait
  4139bf:	ret    
  4139c0:	cmp    DWORD PTR [edx-0x1869fff6],esi
  4139c6:	push   ebp
  4139c7:	sub    al,0x24
  4139c9:	cmp    DWORD PTR [esi],ebx
  4139cb:	sub    DWORD PTR [esi],0x5962b458
  4139d1:	rol    DWORD PTR [esi],1
  4139d3:	mov    ch,0xd8
  4139d5:	fs pop ebx
  4139d7:	pop    ebx
  4139d8:	lods   eax,DWORD PTR ds:[esi]
  4139d9:	retf   
  4139da:	jmp    FWORD PTR [ebp-0x68]
  4139dd:	dec    edi
  4139de:	outs   dx,DWORD PTR ds:[esi]
  4139df:	imul   edi,ecx,0x50
  4139e2:	or     eax,0xe5769138
  4139e7:	and    al,0x4a
  4139e9:	enter  0x7ea2,0x74
  4139ed:	jge    0x4139aa
  4139ef:	sbb    edx,DWORD PTR [edi-0x2f]
  4139f2:	fst    DWORD PTR [ebx+0x26006dcb]
  4139f8:	(bad)  ds:0xcef68c6b
  4139fe:	clc    
  4139ff:	outs   dx,BYTE PTR ds:[esi]
  413a00:	adc    ebx,DWORD PTR [edx-0x7548821d]
  413a06:	inc    ebp
  413a07:	dec    eax
  413a08:	jle    0x413a03
  413a0a:	call   FWORD PTR [ecx-0x46237105]
  413a10:	push   es
  413a11:	inc    eax
  413a12:	pop    edx
  413a13:	pop    ebx
  413a14:	push   ebx
  413a15:	shr    BYTE PTR [edx],1
  413a17:	pop    es
  413a18:	mov    al,ds:0x11d9e9d
  413a1d:	adc    BYTE PTR [esi-0x62],0x5a
  413a21:	adc    al,0x4f
  413a23:	int3   
  413a24:	fstp   QWORD PTR [esi]
  413a26:	inc    ebp
  413a27:	inc    ebp
  413a28:	dec    esi
  413a29:	nop
  413a2a:	jne    0x413a9c
  413a2c:	sub    DWORD PTR [esi-0x3205ad60],ecx
  413a32:	lock jmp 0xba39:0x1640eb5f
  413a3a:	jo     0x413a57
  413a3c:	jo     0x413a03
  413a3e:	popf   
  413a3f:	adc    ebx,DWORD PTR [ebx+0x74]
  413a42:	mov    bl,0x65
  413a44:	test   DWORD PTR [ebx],ecx
  413a46:	ins    DWORD PTR es:[edi],dx
  413a47:	es ret 
  413a49:	mov    ecx,0xf7a7c015
  413a4e:	add    al,0xe6
  413a50:	cmp    cl,ah
  413a52:	mov    eax,0xa1704d9a
  413a57:	mov    eax,ds:0xba94f8fa
  413a5c:	test   ch,dh
  413a5e:	cld    
  413a5f:	adc    bl,BYTE PTR [edx+0x18]
  413a62:	xlat   BYTE PTR ds:[ebx]
  413a63:	mov    bl,0xf2
  413a65:	or     al,0xc0
  413a67:	retf   0xa9ff
  413a6a:	imul   eax,edx,0xaae58fbc
  413a70:	pop    eax
  413a71:	pop    ss
  413a72:	mov    ebx,0xccbdba65
  413a77:	add    DWORD PTR [esi+eax*2],esi
  413a7a:	mov    ebx,0xc62519f6
  413a7f:	push   ds
  413a80:	rcl    cl,0xaf
  413a83:	ds jmp 0x413af5
  413a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a87:	and    al,0x22
  413a89:	loopne 0x413acf
  413a8b:	sub    DWORD PTR [edi+0x21],ebp
  413a8e:	xor    edx,DWORD PTR [edi-0x44fe427b]
  413a94:	mov    al,ds:0x30a39089
  413a99:	push   ds
  413a9a:	cli    
  413a9b:	and    al,0x50
  413a9d:	mov    cl,0xfb
  413a9f:	retf   0x3b70
  413aa2:	std    
  413aa3:	lods   eax,DWORD PTR ds:[esi]
  413aa4:	mov    esp,es
  413aa6:	out    dx,al
  413aa7:	lahf   
  413aa8:	iret   
  413aa9:	pop    ecx
  413aaa:	popf   
  413aab:	dec    edi
  413aad:	call   0x4cdb:0xc5af1995
  413ab4:	test   DWORD PTR [edi],ecx
  413ab6:	stos   BYTE PTR es:[edi],al
  413ab7:	enter  0xa0e0,0x0
  413abb:	sti    
  413abc:	or     DWORD PTR [ecx+0x1be4b48d],esp
  413ac2:	inc    edi
  413ac3:	push   0x4d
  413ac5:	add    al,0xec
  413ac7:	xlat   BYTE PTR ds:[ebx]
  413ac8:	xchg   ebx,eax
  413ac9:	push   DWORD PTR [ecx-0x4bc66a8c]
  413acf:	clc    
  413ad0:	fs mov ch,0xa6
  413ad3:	jo     0x413afa
  413ad5:	lahf   
  413ad6:	jge    0x413b51
  413ad8:	sbb    al,0x11
  413ada:	cwde   
  413adb:	repnz xchg ebp,eax
  413add:	(bad)  
  413ade:	div    ecx
  413ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ae1:	or     BYTE PTR [esi+0x7f],dh
  413ae4:	inc    ecx
  413ae5:	or     BYTE PTR [eax-0x30],dh
  413ae8:	jecxz  0x413b2e
  413aea:	and    al,0x12
  413aec:	cmp    ch,BYTE PTR [esi-0x2]
  413aef:	retf   0x78ea
  413af2:	ss sbb al,0x2b
  413af5:	fs shr eax,0x74
  413af9:	pop    ss
  413afa:	push   ecx
  413afb:	mov    ch,0xed
  413afd:	mov    al,ds:0x75468e0e
  413b02:	jmp    0x2d54:0xb45d041f
  413b09:	adc    eax,0x32751d4b
  413b0e:	jno    0x413b15
  413b10:	cmp    cl,BYTE PTR [eax-0x2d]
  413b13:	shl    BYTE PTR [edi-0x6e],0x45
  413b17:	(bad)  
  413b19:	mov    dh,0x62
  413b1b:	mov    ds:0xf5997ecf,eax
  413b20:	je     0x413ada
  413b22:	sahf   
  413b23:	xchg   ebp,eax
  413b24:	in     eax,0x8
  413b26:	retf   0x2e34
  413b29:	imul   esp,DWORD PTR [eax-0x446fba3],0xa87d99e5
  413b33:	xor    esp,DWORD PTR [edi+0x72108f96]
  413b39:	cmp    al,0x22
  413b3b:	fs mov edx,0x2b4150c3
  413b41:	jg     0x413b45
  413b43:	sti    
  413b44:	aam    0x5
  413b46:	int    0x28
  413b48:	mov    eax,ds:0x26b99b61
  413b4d:	mov    al,0xf6
  413b4f:	sub    al,0xc9
  413b51:	dec    ebp
  413b52:	or     edi,ecx
  413b54:	jno    0x413b71
  413b56:	and    BYTE PTR [ebx],cl
  413b58:	xlat   BYTE PTR ds:[ebx]
  413b59:	adc    eax,0xc0ce39d1
  413b5e:	adc    esp,edi
  413b60:	mov    ebx,0x1c31ee4c
  413b65:	nop
  413b66:	leave  
  413b67:	fisub  WORD PTR [ecx+0x0]
  413b6a:	retf   
  413b6b:	aaa    
  413b6c:	xchg   ebx,eax
  413b6d:	dec    ecx
  413b6e:	push   ss
  413b6f:	fcmovne st,st(6)
  413b71:	add    BYTE PTR [ecx],0xdc
  413b74:	cmp    bl,ch
  413b76:	sti    
  413b77:	sub    BYTE PTR [eax-0x3f3c6372],dl
  413b7d:	ins    BYTE PTR es:[di],dx
  413b7f:	je     0x413bb5
  413b81:	dec    edi
  413b82:	and    eax,0x719179ca
  413b87:	and    al,0xd7
  413b89:	daa    
  413b8a:	inc    ebx
  413b8b:	mov    fs,WORD PTR [esi-0x61]
  413b8e:	mov    edx,DWORD PTR [eax+eiz*1-0x7b8dec95]
  413b95:	imul   eax,DWORD PTR [esi-0x60],0x4f388391
  413b9c:	adc    DWORD PTR [edi-0x1db1e47f],0x249e8051
  413ba6:	popa   
  413ba7:	pop    ds
  413ba8:	in     eax,0xda
  413baa:	inc    ebp
  413bab:	push   es
  413bac:	cld    
  413bad:	out    dx,al
  413bae:	dec    ebx
  413baf:	ds daa 
  413bb1:	add    eax,0x3d2fa65f
  413bb6:	out    0xf5,eax
  413bb8:	push   0x21936c22
  413bbd:	jmp    0x413be6
  413bbf:	hlt    
  413bc0:	addr16 push ds
  413bc2:	add    eax,0x35537b86
  413bc7:	adc    esi,eax
  413bc9:	mov    ch,0x4c
  413bcb:	and    esp,ebp
  413bcd:	aam    0xfb
  413bcf:	add    BYTE PTR [ebx-0xe],0x9e
  413bd3:	icebp  
  413bd4:	cmp    ebp,esp
  413bd6:	mov    eax,0xd8d182e9
  413bdb:	and    DWORD PTR [edx],eax
  413bdd:	faddp  st(3),st
  413bdf:	cmp    BYTE PTR [ebx-0x250e705a],cl
  413be5:	call   0xef52:0x39fffb6d
  413bec:	xchg   edi,eax
  413bed:	(bad)  
  413bee:	(bad)  [ebx]
  413bf0:	pop    esp
  413bf1:	or     cl,BYTE PTR [edi+0x17e20ce5]
  413bf7:	sub    DWORD PTR [edi-0x5b46e861],esp
  413bfd:	jmp    0x413c10
  413bff:	xchg   edx,eax
  413c00:	and    BYTE PTR [edi+eax*1],al
  413c03:	fsubrp st(1),st
  413c05:	mov    esi,0x791f39a4
  413c0a:	icebp  
  413c0b:	and    BYTE PTR [esi],al
  413c0d:	test   BYTE PTR [esi],0x78
  413c10:	stos   DWORD PTR es:[edi],eax
  413c11:	fimul  DWORD PTR [eax+0x20]
  413c14:	mov    esp,0xa2124648
  413c19:	jns    0x413ba9
  413c1b:	jno    0x413c47
  413c1d:	cmp    dl,cl
  413c1f:	test   WORD PTR [ebx],bp
  413c22:	xor    al,0x28
  413c24:	outs   dx,BYTE PTR ds:[esi]
  413c25:	jo     0x413c27
  413c27:	cmp    bh,dh
  413c29:	outs   dx,DWORD PTR ds:[esi]
  413c2a:	std    
  413c2b:	jge    0x413c0e
  413c2d:	inc    edi
  413c2e:	loope  0x413bc2
  413c30:	lods   al,BYTE PTR ds:[esi]
  413c31:	loope  0x413bc2
  413c33:	inc    ebp
  413c34:	imul   eax,DWORD PTR [ebx+0x29e79f76],0xfffffff5
  413c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c3c:	mov    ds:0x27d2039e,eax
  413c41:	inc    edi
  413c42:	iret   
  413c43:	shl    DWORD PTR [eax+eiz*2],0xd2
  413c47:	fadd   DWORD PTR ds:0x24893ff0
  413c4d:	cmc    
  413c4e:	daa    
  413c4f:	ficomp WORD PTR [esi]
  413c51:	inc    esi
  413c52:	adc    ebx,DWORD PTR [ebx]
  413c54:	pusha  
  413c55:	xor    DWORD PTR [esi+ecx*4],esp
  413c58:	push   ds
  413c59:	gs push ds
  413c5b:	sub    DWORD PTR ds:0x2b62221e,edx
  413c61:	out    dx,al
  413c62:	lods   eax,DWORD PTR ds:[esi]
  413c63:	xchg   esp,eax
  413c64:	jnp    0x413bf7
  413c66:	and    ah,BYTE PTR [ebx+eax*8+0x45e329ad]
  413c6d:	mov    edi,0xd43e4fcf
  413c72:	push   ebp
  413c73:	add    esi,ebx
  413c75:	sbb    BYTE PTR [ecx-0x3f],dh
  413c78:	loopne 0x413c46
  413c7a:	pop    eax
  413c7b:	cmp    eax,0x9fb15adf
  413c80:	out    0xe2,al
  413c82:	ror    DWORD PTR [eax],1
  413c84:	inc    edx
  413c85:	inc    edi
  413c86:	bound  edi,QWORD PTR [esi-0x64f2b4e9]
  413c8c:	dec    ebx
  413c8d:	lds    edx,FWORD PTR [eax+0x5a948021]
  413c93:	jmp    0xfbd1:0xf0cbf51d
  413c9a:	jae    0x413c3a
  413c9c:	outs   dx,BYTE PTR ds:[esi]
  413c9d:	std    
  413c9e:	mov    esi,DWORD PTR [ebx+0x5d]
  413ca1:	mov    ch,0xfb
  413ca3:	xor    al,0x6e
  413ca5:	inc    esp
  413ca6:	int    0xdf
  413ca8:	rcl    DWORD PTR [eax],cl
  413caa:	pop    ebx
  413cab:	push   esi
  413cac:	(bad)  
  413cad:	arpl   WORD PTR [ecx-0x7416e38d],dx
  413cb3:	test   al,0xed
  413cb5:	(bad)
  413cb8:	inc    edx
  413cb9:	xchg   ebp,eax
  413cba:	xor    esp,DWORD PTR ds:0x5c2829cb
  413cc0:	inc    eax
  413cc1:	dec    edx
  413cc2:	and    bh,dh
  413cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cc5:	push   cs
  413cc6:	pusha  
  413cc7:	mov    esi,0x60aefc7c
  413ccc:	enter  0xdb66,0xc9
  413cd0:	pop    esp
  413cd1:	and    DWORD PTR gs:[edx],ecx
  413cd4:	mov    ch,0xae
  413cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cd7:	(bad)  
  413cd8:	lods   al,BYTE PTR ds:[esi]
  413cd9:	imul   eax,DWORD PTR [eax+0x286aeb20],0x19
  413ce0:	push   esp
  413ce1:	sbb    BYTE PTR [edi],bl
  413ce3:	pop    eax
  413ce4:	loop   0x413cf2
  413ce6:	aad    0x98
  413ce8:	mov    dh,0x7f
  413cea:	shl    BYTE PTR [edx+0x2535cf9d],1
  413cf0:	test   BYTE PTR [edx],0xb
  413cf3:	adc    ebx,DWORD PTR ds:0xf90b2f4f
  413cf9:	push   ebp
  413cfa:	shl    BYTE PTR [edx+0x78],0x58
  413cfe:	stc    
  413cff:	out    0x42,al
  413d01:	stos   DWORD PTR es:[edi],eax
  413d02:	rol    BYTE PTR [ebx+ebp*8],1
  413d05:	movntps XMMWORD PTR [esi+edx*2],xmm6
  413d09:	pop    edx
  413d0a:	pop    edi
  413d0b:	test   al,0x20
  413d0d:	retf   
  413d0e:	mov    ebp,esp
  413d10:	mov    ds:0xad55cf44,al
  413d15:	push   es
  413d16:	pop    ds
  413d17:	pshufw mm0,QWORD PTR [edx+ebp*1+0x52264426],0xdd
  413d20:	jl     0x413cd0
  413d22:	add    ch,BYTE PTR [edi-0x80]
  413d25:	inc    edx
  413d26:	sbb    eax,0x43aa0beb
  413d2b:	push   0xffffffd6
  413d2d:	sub    BYTE PTR [esi+0x28c7a741],al
  413d33:	in     eax,dx
  413d34:	out    0x94,eax
  413d36:	add    esi,ecx
  413d38:	bnd jnp 0x413d7c
  413d3b:	popa   
  413d3c:	sti    
  413d3d:	cmp    ch,BYTE PTR [ebx]
  413d3f:	mov    dh,0x7d
  413d41:	bound  ebx,QWORD PTR [ebx]
  413d43:	out    dx,eax
  413d44:	rol    bh,0x29
  413d47:	adc    eax,0x8241ddb7
  413d4c:	sbb    esi,DWORD PTR [ebx]
  413d4e:	mov    ds:0xc50e3b04,eax
  413d53:	int3   
  413d54:	ins    BYTE PTR es:[edi],dx
  413d55:	cmp    BYTE PTR [ecx-0x5de078b4],cl
  413d5b:	fs xchg esi,eax
  413d5d:	aas    
  413d5e:	aas    
  413d5f:	xchg   esp,eax
  413d60:	sbb    bl,BYTE PTR [ecx+ecx*8-0x7ca9fce8]
  413d67:	pusha  
  413d68:	inc    eax
  413d69:	add    BYTE PTR [edx-0x46],cl
  413d6c:	sub    BYTE PTR [edi+0x5f],ch
  413d6f:	sub    BYTE PTR [eax+0x41c803a7],cl
  413d75:	cmp    ebp,DWORD PTR [eax-0x5f]
  413d78:	adc    BYTE PTR [edx+0x2bfb8b1],0x58
  413d7f:	dec    esi
  413d80:	inc    esp
  413d81:	mov    ch,0xaa
  413d83:	and    eax,0x54019910
  413d88:	paddb  mm4,QWORD PTR [esi+0x3638d4b7]
  413d8f:	je     0x413df5
  413d91:	addr16 push edx
  413d93:	add    ebx,DWORD PTR [eax-0x2da864c8]
  413d99:	jmp    DWORD PTR [esi]
  413d9b:	popf   
  413d9c:	add    DWORD PTR [ebp+esi*2+0x6],esi
  413da0:	mov    edx,0x5f0055da
  413da5:	dec    edi
  413da6:	push   ecx
  413da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da8:	into   
  413da9:	lahf   
  413daa:	(bad)  
  413dab:	dec    esi
  413dac:	sub    ch,0x7
  413daf:	mov    ss,WORD PTR [ecx]
  413db1:	clc    
  413db2:	ret    
  413db3:	(bad)  
  413db4:	jmp    0x413d81
  413db6:	jne    0x413d5a
  413db8:	push   cs
  413db9:	jne    0x413e35
  413dbb:	stos   BYTE PTR es:[edi],al
  413dbc:	jo     0x413d83
  413dbe:	mov    al,0x23
  413dc0:	fiadd  WORD PTR [ebp+0x12]
  413dc3:	outs   dx,DWORD PTR ds:[esi]
  413dc4:	ret    
  413dc5:	jmp    0xf986:0x448a05d9
  413dcc:	dec    edi
  413dcd:	jae    0x413da5
  413dcf:	jmp    0x413d94
  413dd1:	adc    al,0x28
  413dd3:	fnsave ds:0x8b852b86
  413dd9:	cdq    
  413dda:	pushf  
  413ddb:	js     0x413db2
  413ddd:	sub    dh,dl
  413ddf:	xor    eax,0x844d91f3
  413de4:	test   BYTE PTR [edi+0x64],dl
  413de7:	pop    esp
  413de8:	xor    ah,BYTE PTR [ecx+0x6]
  413deb:	test   dh,ch
  413ded:	and    ebp,edx
  413def:	sbb    eax,0x4df5898f
  413df4:	fcomp  QWORD PTR [ecx*1-0x2510cd6c]
  413dfb:	sbb    DWORD PTR [ebx-0x10],esp
  413dfe:	repz or cl,BYTE PTR [ebx]
  413e01:	fcom   DWORD PTR [ebp+0x4f]
  413e04:	(bad)  
  413e05:	or     ch,BYTE PTR [esi+edx*4]
  413e08:	aad    0xc0
  413e0a:	adc    BYTE PTR [edi-0x393145c2],bh
  413e10:	test   eax,0x903815be
  413e15:	sub    dh,BYTE PTR [edi+0x2f8bbea3]
  413e1b:	dec    ecx
  413e1c:	sub    al,0xbc
  413e1e:	adc    ecx,DWORD PTR [esi]
  413e20:	mov    al,ds:0xa36a2bf9
  413e25:	fidivr DWORD PTR [ebx]
  413e27:	mov    al,gs:0x474b01b4
  413e2d:	push   ss
  413e2e:	int3   
  413e2f:	scas   eax,DWORD PTR es:[edi]
  413e30:	outs   dx,BYTE PTR ds:[esi]
  413e31:	bound  eax,QWORD PTR [ebx]
  413e33:	outs   dx,DWORD PTR ds:[esi]
  413e34:	push   esp
  413e35:	test   edi,ecx
  413e37:	sub    al,0x57
  413e39:	mov    BYTE PTR [ebx+0x8c3dea2],al
  413e3f:	xchg   DWORD PTR [edx+0x4d9d99a0],esi
  413e45:	dec    esi
  413e46:	adc    al,0xc8
  413e48:	jmp    0x2e421283
  413e4d:	fisub  DWORD PTR [esi+edx*4-0x3b]
  413e51:	add    al,0xe2
  413e53:	cmp    DWORD PTR [edi+ebx*1+0x2f],0xf7e75d0b
  413e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e5c:	xchg   BYTE PTR [edi+0x46],bl
  413e5f:	lea    ecx,[edi]
  413e61:	stos   BYTE PTR es:[edi],al
  413e62:	hlt    
  413e63:	or     bh,BYTE PTR [ecx+edi*1-0x1d]
  413e67:	es aaa 
  413e69:	add    ch,bh
  413e6b:	int    0xf
  413e6d:	add    ah,BYTE PTR [eax+0x18f6eab7]
  413e73:	adc    al,0xe2
  413e75:	gs xor cl,ch
  413e78:	dec    edi
  413e79:	sahf   
  413e7a:	dec    ebp
  413e7b:	fist   DWORD PTR ds:0x7168ba59
  413e81:	jg     0x413e7f
  413e83:	(bad)  
  413e84:	pop    ecx
  413e85:	xchg   esi,eax
  413e86:	jne    0x413e86
  413e88:	cmc    
  413e89:	rol    DWORD PTR [ebx],1
  413e8b:	or     DWORD PTR [eax],edx
  413e8d:	shr    DWORD PTR [edx+0x32204193],0x15
  413e94:	(bad)  
  413e95:	ds pushf 
  413e97:	pop    ebx
  413e98:	shl    DWORD PTR [edx],0xb9
  413e9b:	out    dx,eax
  413e9c:	leave  
  413e9d:	stos   DWORD PTR es:[edi],eax
  413e9e:	test   ah,dl
  413ea0:	ret    
  413ea1:	fcomp  st(0)
  413ea3:	inc    edi
  413ea4:	push   cs
  413ea5:	shl    BYTE PTR [ebx+0x4ec86857],cl
  413eab:	xchg   ebx,eax
  413eac:	cmp    al,0x36
  413eae:	stos   BYTE PTR es:[edi],al
  413eaf:	fwait
  413eb0:	jecxz  0x413ef9
  413eb2:	aam    0x50
  413eb4:	fs icebp 
  413eb6:	enter  0x1dc0,0x3a
  413eba:	shr    BYTE PTR [esi+ebp*2],1
  413ebd:	stos   DWORD PTR es:[edi],eax
  413ebe:	bound  ebp,QWORD PTR [esi-0x6c]
  413ec1:	bound  edi,QWORD PTR [esi+0x3248a2ed]
  413ec7:	dec    esi
  413ec8:	cmp    DWORD PTR [eax-0x3d9aa1ef],eax
  413ece:	out    0xe0,eax
  413ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ed1:	mov    cl,ch
  413ed3:	shl    DWORD PTR [ecx-0x5a46576c],cl
  413ed9:	or     al,0x46
  413edb:	lar    edx,WORD PTR [edx]
  413ede:	sbb    eax,0xe4191a9a
  413ee3:	lods   eax,DWORD PTR ds:[esi]
  413ee4:	clc    
  413ee5:	and    eax,0xcdf56829
  413eea:	inc    ebx
  413eeb:	or     DWORD PTR [edi+edi*4-0x4f],ebx
  413eef:	push   0xffffffd7
  413ef1:	mov    ebx,0xc0b4a554
  413ef6:	pop    edi
  413ef7:	leave  
  413ef8:	add    al,0x59
  413efa:	mov    edx,0x6c8b9cc3
  413eff:	pushf  
  413f00:	and    esp,DWORD PTR [edi+0x14]
  413f03:	mov    bl,0xbd
  413f05:	add    BYTE PTR [eax+0x62],ah
  413f08:	cmc    
  413f09:	add    BYTE PTR [eax-0x2b],ch
  413f0c:	fwait
  413f0d:	mov    al,ds:0x9ae7bafb
  413f12:	xchg   BYTE PTR [ebp+0x19],al
  413f15:	mov    cs,WORD PTR [edi+eax*4]
  413f18:	clc    
  413f19:	dec    ebp
  413f1a:	pop    ebx
  413f1b:	lock pushf 
  413f1d:	cmp    bl,BYTE PTR [ecx+0x54c93d1c]
  413f23:	mov    al,ds:0x26501c2f
  413f28:	es out 0x73,al
  413f2b:	scas   eax,DWORD PTR es:[edi]
  413f2c:	dec    ebx
  413f2d:	pop    eax
  413f2e:	push   ebx
  413f2f:	sub    BYTE PTR [esi+0x3ad0fdc3],al
  413f35:	test   DWORD PTR [edi-0x6cf8ae56],ebx
  413f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f3c:	sub    eax,0xf2f1f166
  413f41:	mov    dl,0x2b
  413f43:	jl     0x413f49
  413f45:	push   ss
  413f46:	push   ss
  413f47:	test   al,0xf4
  413f49:	pop    es
  413f4a:	xchg   ecx,eax
  413f4b:	cmp    DWORD PTR [edi-0x6de15ed3],0x6e7ae567
  413f55:	add    al,al
  413f57:	cmp    cl,al
  413f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f5a:	fdiv   QWORD PTR [eax]
  413f5c:	popf   
  413f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f5e:	call   0xd5e:0x987e22aa
  413f65:	cdq    
  413f66:	cmp    al,0x5e
  413f68:	and    eax,0x53cef5bf
  413f6d:	mul    DWORD PTR [eax+eiz*1-0x12]
  413f71:	sub    BYTE PTR [ebp+0x63635c68],0x0
  413f78:	clts   
  413f7a:	loop   0x413efe
  413f7c:	jl     0x413f2d
  413f7e:	sahf   
  413f7f:	or     eax,0x58e623b1
  413f84:	mov    edi,0xd035013c
  413f89:	inc    ebx
  413f8a:	mov    ebp,0xb440d84a
  413f8f:	lds    ecx,FWORD PTR [esi+0x4b34d045]
  413f95:	adc    ebp,DWORD PTR [ebp-0x78]
  413f98:	dec    esp
  413f99:	pop    esi
  413f9a:	mov    edx,0xa96e29a3
  413f9f:	adc    BYTE PTR [edi],ch
  413fa1:	scas   eax,DWORD PTR es:[edi]
  413fa2:	xchg   ebp,eax
  413fa3:	lahf   
  413fa4:	fstp   QWORD PTR [edx-0x34c7b1be]
  413faa:	mov    DWORD PTR [edx-0x28630dc6],eax
  413fb0:	add    DWORD PTR [ebp+0xa],ebx
  413fb3:	mov    al,0xb4
  413fb5:	cmp    ebp,DWORD PTR [eax]
  413fb7:	test   ah,ch
  413fb9:	sbb    eax,0x7bbc78c4
  413fbe:	dec    ebp
  413fbf:	popf   
  413fc0:	bound  esi,QWORD PTR [esi+0x5b]
  413fc3:	adc    ah,bh
  413fc5:	fcmovb st,st(5)
  413fc7:	repnz retf 0xfb99
  413fcb:	pusha  
  413fcc:	js     0x413fb2
  413fce:	daa    
  413fcf:	inc    ecx
  413fd0:	ins    BYTE PTR es:[di],dx
  413fd2:	fimul  DWORD PTR [ecx-0x7c04a712]
  413fd8:	jb     0x414012
  413fda:	dec    esp
  413fdb:	xchg   esi,eax
  413fdc:	repz cmp bh,al
  413fdf:	les    ecx,FWORD PTR [esp+ecx*1+0x5f5a6391]
  413fe6:	add    al,0xb
  413fe8:	cld    
  413fe9:	sub    al,0x2a
  413feb:	cmp    cl,dl
  413fed:	dec    ebx
  413fee:	mov    ds:0x5465877d,al
  413ff3:	jo     0x413ff4
  413ff5:	or     BYTE PTR [eax+0x79382988],ah
  413ffb:	test   cl,dl
  413ffd:	adc    DWORD PTR [edx+0x63],ebx
  414000:	stos   DWORD PTR es:[edi],eax
  414001:	sti    
  414002:	aad    0x1e
  414004:	inc    esp
  414005:	stos   DWORD PTR es:[edi],eax
  414006:	mov    dl,0xe1
  414008:	adc    edx,DWORD PTR [edx]
  41400a:	sbb    al,0xb0
  41400c:	pop    edx
  41400d:	sub    bh,BYTE PTR [ebx-0x1]
  414010:	jecxz  0x41408e
  414012:	lock shr BYTE PTR [edx],1
  414015:	gs push esi
  414017:	loope  0x413ff2
  414019:	(bad)  
  41401a:	bound  ebx,QWORD PTR [ebp+0x8]
  41401d:	stc    
  41401e:	fmul   st,st(3)
  414020:	pop    es
  414021:	ret    
  414022:	jp     0x41405b
  414024:	nop
  414025:	push   esi
  414027:	ins    DWORD PTR es:[edi],dx
  414028:	(bad)  
  414029:	call   0x73d8d50c
  41402e:	jmp    0x41406b
  414030:	sub    ebp,DWORD PTR [esi+0x4c6c94e6]
  414036:	dec    edx
  414037:	add    bl,BYTE PTR [ebx-0x76]
  41403a:	dec    edx
  41403b:	ins    DWORD PTR es:[edi],dx
  41403c:	pusha  
  41403d:	es mov edi,0xadb9aaa4
  414043:	and    al,0x5a
  414045:	pop    ebp
  414046:	hlt    
  414047:	pop    esp
  414048:	daa    
  414049:	cmc    
  41404a:	mov    esi,0x67f218b2
  41404f:	mov    al,0x3a
  414051:	jp     0x4140c3
  414053:	adc    BYTE PTR [esi],dh
  414055:	outs   dx,DWORD PTR ds:[esi]
  414056:	inc    esp
  414057:	mov    ecx,0xe4a14f48
  41405c:	pop    esi
  41405d:	in     eax,dx
  41405e:	(bad)  
  41405f:	mov    ebp,0x609e9cb6
  414064:	fist   DWORD PTR [edx-0x1acbce89]
  41406a:	jo     0x414026
  41406c:	(bad)  
  41406e:	shr    DWORD PTR [ecx-0x7c],0xa6
  414072:	pop    esp
  414073:	test   eax,0x86f63968
  414078:	sbb    eax,0x270e1194
  41407d:	inc    ebp
  41407e:	mov    DWORD PTR [eax-0x38e19e36],eax
  414084:	mov    dh,0x7e
  414086:	repnz pop edi
  414088:	push   ebx
  414089:	jp     0x414024
  41408b:	loopne 0x4140c2
  41408d:	mov    WORD PTR [ebp+0x70],ss
  414090:	fwait
  414091:	stos   BYTE PTR es:[edi],al
  414092:	ror    BYTE PTR [eax],cl
  414094:	sti    
  414095:	pop    es
  414096:	inc    ebx
  414097:	pop    edx
  414098:	inc    ebp
  414099:	push   ds
  41409a:	out    dx,eax
  41409b:	ret    
  41409c:	sub    BYTE PTR [ebx+0x4a],0x7b
  4140a0:	icebp  
  4140a1:	mov    ds:0xddda7a72,eax
  4140a6:	or     eax,0x74cca964
  4140ab:	clc    
  4140ac:	inc    ecx
  4140ad:	mov    dh,bl
  4140af:	add    cl,BYTE PTR [ecx+0x55]
  4140b2:	cmp    al,0x3b
  4140b4:	es hlt 
  4140b6:	dec    esi
  4140b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140b8:	(bad)  
  4140b9:	sub    esi,eax
  4140bb:	je     0x4140e5
  4140bd:	les    ecx,FWORD PTR [esp+edi*8+0x62beb5bd]
  4140c4:	push   eax
  4140c5:	inc    esi
  4140c6:	inc    edi
  4140c7:	pop    ecx
  4140c8:	shl    DWORD PTR [edi-0x59eaed80],1
  4140ce:	mov    eax,0x791d22a2
  4140d3:	ins    BYTE PTR es:[edi],dx
  4140d4:	xchg   DWORD PTR [edx-0x10],edx
  4140d7:	cmp    al,0x6
  4140d9:	dec    ecx
  4140da:	popf   
  4140db:	fstp   TBYTE PTR [ecx+0x55523b8c]
  4140e1:	mov    dl,0xd6
  4140e3:	xor    bl,BYTE PTR [edi+0x9]
  4140e6:	push   cs
  4140e7:	dec    esp
  4140e8:	jmp    0x4a61:0x9a788c51
  4140ef:	jecxz  0x414160
  4140f1:	push   ecx
  4140f2:	cmp    al,0xfe
  4140f4:	clc    
  4140f5:	imul   edx,DWORD PTR [esi+0x4edb1ce3],0x14
  4140fc:	adc    dl,BYTE PTR [edi]
  4140fe:	inc    edx
  4140ff:	inc    eax
  414100:	pop    edi
  414101:	xchg   DWORD PTR [edi+edi*4+0x22ea85d4],ebp
  414108:	mov    eax,ds:0x6eb72cd9
  41410d:	mov    edi,0x3d1044b0
  414112:	mov    al,ds:0x39a3ff4d
  414117:	mov    esi,0xe3de8f26
  41411c:	lock rcr BYTE PTR [edi],1
  41411f:	iret   
  414120:	test   BYTE PTR [ebx-0x39],bh
  414123:	pop    ecx
  414124:	mov    WORD PTR [edx-0x66],cs
  414127:	(bad)  
  414128:	in     al,dx
  414129:	out    dx,eax
  41412a:	jmp    0x41417e
  41412c:	lahf   
  41412d:	stc    
  41412e:	imul   ebx,DWORD PTR [ebp+0x2c],0xfb34047f
  414135:	push   ebx
  414136:	mov    eax,ds:0x9df7327e
  41413b:	sahf   
  41413c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41413d:	cwde   
  41413e:	cmc    
  41413f:	and    al,0xa7
  414141:	mov    ebp,0xcc063198
  414146:	leave  
  414147:	or     eax,0x2cc6db90
  41414c:	inc    eax
  41414d:	mov    ?,WORD PTR ds:0x3f323aa
  414153:	dec    edx
  414154:	jp     0x414175
  414156:	mov    esp,0x87d5f1cd
  41415b:	push   ss
  41415c:	rcr    cl,1
  41415e:	cmc    
  41415f:	aaa    
  414160:	das    
  414161:	jns    0x414174
  414163:	mov    ch,BYTE PTR [ebx]
  414165:	xor    eax,0x26d953e9
  41416a:	sbb    eax,0x90123ed7
  41416f:	and    eax,0x41aca6d9
  414174:	shl    DWORD PTR [edi-0x3c],cl
  414177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414178:	xor    al,0xd3
  41417a:	out    dx,al
  41417b:	dec    eax
  41417c:	adc    eax,0xaa5e7121
  414181:	or     al,0xb
  414183:	idiv   DWORD PTR [ebx]
  414185:	in     al,0x59
  414187:	jmp    0x414136
  414189:	adc    DWORD PTR [ebp-0x56e80660],esp
  41418f:	daa    
  414190:	inc    ebx
  414191:	inc    esp
  414192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414193:	sub    ebx,DWORD PTR [eax-0x20]
  414196:	adc    cl,BYTE PTR [edx-0x548d2eb5]
  41419c:	lds    ecx,FWORD PTR [edx+ebx*8]
  41419f:	(bad)  
  4141a0:	clc    
  4141a1:	retf   0xaa79
  4141a4:	out    0xad,eax
  4141a6:	repz pop eax
  4141a8:	add    edi,edi
  4141aa:	cwde   
  4141ab:	es pop ds
  4141ad:	jno    0x414224
  4141af:	inc    esi
  4141b0:	sbb    BYTE PTR [eax],cl
  4141b2:	inc    esi
  4141b3:	lahf   
  4141b4:	add    ebx,0xffffffe5
  4141b7:	sbb    al,0x78
  4141b9:	add    DWORD PTR [edi-0xdd01f94],ecx
  4141bf:	push   ebp
  4141c0:	and    eax,0xb45639a4
  4141c5:	pop    esi
  4141c6:	or     ch,BYTE PTR [ebp-0x5cb17fbb]
  4141cc:	mov    BYTE PTR ds:0xbc2ab2ac,cl
  4141d2:	jle    0x41418a
  4141d4:	xchg   esp,eax
  4141d5:	xchg   esp,eax
  4141d6:	push   ds
  4141d7:	aam    0x82
  4141d9:	mov    ebp,0x88ca20cb
  4141de:	in     al,0x22
  4141e0:	lock xor ah,ch
  4141e3:	xor    al,0xa7
  4141e5:	icebp  
  4141e6:	inc    ecx
  4141e7:	xchg   ebp,eax
  4141e8:	loope  0x41418c
  4141ea:	jge    0x4141a6
  4141ec:	jmp    0xa2b19b4a
  4141f1:	idiv   DWORD PTR [eax]
  4141f3:	(bad)  
  4141f4:	in     eax,dx
  4141f5:	sub    eax,0xd193d229
  4141fa:	jg     0x414196
  4141fc:	sub    esi,DWORD PTR [ecx+0xc552df4]
  414202:	mov    esi,0xdf8d235c
  414207:	fcomp  DWORD PTR [esi+ebx*4+0x4]
  41420b:	dec    esi
  41420c:	sub    eax,0xd25a4d9f
  414211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414212:	(bad)  
  414214:	scas   eax,DWORD PTR es:[edi]
  414215:	gs mov ecx,0xbdf118e3
  41421b:	int3   
  41421c:	out    dx,al
  41421d:	shl    eax,cl
  41421f:	fwait
  414220:	jnp    0x4141d1
  414222:	ret    
  414223:	mov    al,ds:0x1a30d7f2
  414228:	jmp    0xdb28:0x19858a6
  41422f:	pop    eax
  414230:	outs   dx,DWORD PTR ds:[esi]
  414231:	dec    esi
  414232:	xor    ch,BYTE PTR [ebx-0x3]
  414235:	push   edi
  414236:	or     al,0xcf
  414238:	pusha  
  414239:	inc    eax
  41423a:	lock sbb al,0x86
  41423d:	ja     0x41421b
  41423f:	mov    bl,0x33
  414241:	push   edi
  414242:	mov    eax,0x7b6e1708
  414247:	xor    cl,al
  414249:	and    al,0x2c
  41424b:	adc    eax,0x48cb6d95
  414250:	outs   dx,DWORD PTR ds:[esi]
  414251:	mov    bl,0xe2
  414253:	add    ch,BYTE PTR [esi+0x28]
  414256:	pop    es
  414257:	push   ss
  414258:	stos   DWORD PTR es:[edi],eax
  414259:	std    
  41425a:	adc    ebx,DWORD PTR [edx-0xe]
  41425d:	mov    dh,0xec
  41425f:	nop
  414260:	ds int3 
  414262:	jp     0x4142b4
  414264:	cmc    
  414265:	pop    ds
  414266:	scas   eax,DWORD PTR es:[edi]
  414267:	loopne 0x414267
  414269:	popa   
  41426a:	clc    
  41426b:	pusha  
  41426c:	pop    es
  41426d:	repz lea edx,[esi]
  414270:	cli    
  414271:	cmp    edx,DWORD PTR [edx-0x4b]
  414274:	mov    eax,ds:0x6c2809e
  414279:	push   esp
  41427a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41427b:	mov    ch,0xb4
  41427d:	data16 fdivr DWORD PTR [esp+ecx*8]
  414281:	pavgw  mm1,mm1
  414284:	dec    esp
  414285:	pop    esp
  414286:	cli    
  414287:	dec    esp
  414288:	push   0x56fcf4b9
  41428d:	mov    bl,0x3d
  41428f:	sahf   
  414290:	mov    ah,0xc2
  414292:	inc    ecx
  414293:	cld    
  414294:	pushf  
  414295:	jbe    0x414316
  414297:	pop    esi
  414298:	mov    ds,WORD PTR [ebp-0x61]
  41429b:	mov    al,ds:0x80e48929
  4142a0:	push   ss
  4142a1:	inc    esp
  4142a2:	or     ecx,DWORD PTR [ebx]
  4142a4:	add    dl,dh
  4142a6:	gs fcmovnu st,st(2)
  4142a9:	inc    eax
  4142aa:	pop    edi
  4142ab:	mov    edi,edi
  4142ad:	mov    ecx,0x6c6aeab5
  4142b2:	push   edx
  4142b3:	or     dl,BYTE PTR [edx]
  4142b5:	inc    esi
  4142b6:	push   0xc2dd28c
  4142bb:	test   eax,0x1d875ec1
  4142c0:	jnp    0x414310
  4142c2:	shl    edi,cl
  4142c4:	fsubrp st(0),st
  4142c6:	push   ebx
  4142c7:	loope  0x414278
  4142c9:	xchg   edi,eax
  4142ca:	mov    al,ds:0x8497402a
  4142cf:	inc    ecx
  4142d0:	pop    edx
  4142d1:	mov    esp,0x795eae7f
  4142d6:	out    0xbd,eax
  4142d8:	aad    0xa8
  4142da:	imul   ecx,DWORD PTR [edi+0x64],0xffffffb1
  4142de:	push   ecx
  4142df:	std    
  4142e0:	jne    0x41433f
  4142e2:	mov    ebp,0xcc2152e0
  4142e7:	cli    
  4142e8:	inc    eax
  4142e9:	push   ds
  4142ea:	add    DWORD PTR [eax],ebx
  4142ec:	arpl   WORD PTR [ebx-0x5d3e5250],di
  4142f2:	pop    edx
  4142f3:	mov    ds:0xdea3bf8b,eax
  4142f8:	inc    eax
  4142f9:	xchg   esi,eax
  4142fa:	inc    edi
  4142fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142fc:	dec    edi
  4142fd:	jne    0x41437e
  4142ff:	stc    
  414300:	aaa    
  414301:	test   eax,0xda06ca13
  414306:	sahf   
  414307:	bound  eax,QWORD PTR [ecx+0x3e]
  41430a:	mul    DWORD PTR [edx]
  41430c:	stc    
  41430d:	out    dx,eax
  41430e:	das    
  41430f:	mov    esi,0xd90c6428
  414314:	push   ecx
  414315:	mov    ecx,0x87df3afa
  41431a:	push   edx
  41431b:	cdq    
  41431c:	or     DWORD PTR [ebx-0x74],eax
  41431f:	int    0x5c
  414321:	and    esi,ecx
  414323:	pop    eax
  414324:	(bad)  
  414325:	into   
  414326:	lea    esi,[ecx+0x3d]
  414329:	loop   0x41438d
  41432b:	xor    eax,DWORD PTR [edx-0xa]
  41432e:	mov    al,ds:0xcf33cec7
  414333:	retf   
  414334:	and    eax,0x1ef8b872
  414339:	mov    esp,0x8770513d
  41433e:	adc    BYTE PTR [ecx+0x1c820219],al
  414344:	ins    BYTE PTR es:[edi],dx
  414345:	xor    eax,0x9c5bb008
  41434a:	pushf  
  41434b:	dec    edx
  41434c:	and    ecx,edi
  41434e:	dec    eax
  41434f:	fwait
  414350:	add    dh,BYTE PTR [ebp+eax*4-0x39135871]
  414357:	mov    ebp,0x8703edd1
  41435c:	js     0x414336
  41435e:	imul   eax,eax,0x25
  414361:	popa   
  414362:	inc    eax
  414363:	xchg   ebp,eax
  414364:	add    eax,0x299f2244
  414369:	dec    edi
  41436a:	jecxz  0x41434a
  41436c:	shr    BYTE PTR [edx-0x64],0x1a
  414370:	data16 fidiv WORD PTR ds:0x1e4ab823
  414377:	cs data16 icebp 
  41437a:	aam    0xfd
  41437c:	jmp    0x414354
  41437e:	jg     0x41435c
  414380:	or     BYTE PTR [edx+esi*8],dl
  414383:	push   ds
  414384:	jp     0x4143ed
  414386:	xchg   ebp,eax
  414387:	and    BYTE PTR [ecx+eiz*2+0x69211b7f],dh
  41438e:	hlt    
  41438f:	loope  0x41436e
  414391:	retf   
  414392:	push   edx
  414393:	dec    ebp
  414394:	inc    ecx
  414395:	popa   
  414396:	icebp  
  414397:	sbb    eax,0x3aedcb15
  41439c:	(bad)  
  41439d:	nop
  41439e:	es aas 
  4143a0:	dec    ecx
  4143a1:	sub    BYTE PTR [edx+0x79],0x3b
  4143a5:	push   es
  4143a6:	xor    BYTE PTR [ecx-0x3c7badd2],0x8
  4143ad:	cld    
  4143ae:	sbb    bl,BYTE PTR [ecx-0x3d255af3]
  4143b4:	inc    eax
  4143b5:	aas    
  4143b6:	(bad)  
  4143b7:	jmp    0xf0b83608
  4143bc:	mov    BYTE PTR [eax-0x79],ch
  4143bf:	mov    ds:0x59c002a9,eax
  4143c4:	lahf   
  4143c5:	sbb    al,0x23
  4143c7:	outs   dx,BYTE PTR ds:[esi]
  4143c8:	sar    BYTE PTR [esi-0x41],1
  4143cb:	(bad)  
  4143cc:	mov    edx,0x1a1a24b5
  4143d1:	cmp    ch,ch
  4143d3:	(bad)  
  4143d4:	pop    eax
  4143d5:	fcomp  DWORD PTR [eax+0x621ac104]
  4143db:	pop    ebx
  4143dc:	mov    ah,0xd3
  4143de:	or     BYTE PTR ds:0x14f5154f,al
  4143e4:	xlat   BYTE PTR ds:[ebx]
  4143e5:	xchg   edi,eax
  4143e6:	mov    ecx,0xbd783352
  4143eb:	jno    0x4143a4
  4143ed:	push   eax
  4143ee:	xchg   ebx,eax
  4143ef:	arpl   WORD PTR [ecx-0x7fc9cf2c],bx
  4143f5:	pop    eax
  4143f6:	pop    ss
  4143f7:	xchg   DWORD PTR [edi-0x8],esp
  4143fa:	sbb    cl,cl
  4143fc:	inc    ecx
  4143fd:	sar    DWORD PTR [edx-0x3e],1
  414400:	shl    DWORD PTR [edx+0x1f],cl
  414403:	cmp    eax,0xcd78d4ba
  414408:	inc    edx
  414409:	inc    esp
  41440a:	push   cs
  41440b:	lea    ebp,[edx]
  41440d:	aam    0x38
  41440f:	popf   
  414410:	nop
  414411:	adc    al,0x43
  414413:	das    
  414414:	mov    bl,0x9c
  414416:	mov    ch,0xd3
  414418:	cmp    bh,BYTE PTR [edi-0x4549703e]
  41441e:	push   ecx
  41441f:	mov    dl,BYTE PTR [ecx]
  414421:	cmp    DWORD PTR [edi+0x2886873b],esi
  414427:	aad    0x4a
  414429:	mov    al,ds:0x1ef19ec4
  41442e:	(bad)  
  41442f:	std    
  414430:	out    dx,ax
  414432:	add    bh,al
  414434:	shl    DWORD PTR [edx-0x63088e8],cl
  41443a:	push   es
  41443b:	imul   esp,esi,0x25b090ca
  414441:	test   al,0xd2
  414443:	ja     0x41443c
  414445:	add    BYTE PTR [ebp-0x5c],cl
  414448:	adc    ch,dh
  41444a:	mov    bh,0x42
  41444c:	aas    
  41444d:	pop    ecx
  41444e:	or     dl,0x33
  414451:	dec    ecx
  414452:	adc    eax,0x30cbafd1
  414457:	pop    edx
  414458:	fbstp  TBYTE PTR [esi]
  41445a:	adc    BYTE PTR [ebx+0x68],dl
  41445d:	sahf   
  41445e:	xchg   BYTE PTR ds:0x377eb456,ah
  414464:	mov    bh,0xde
  414466:	jbe    0x41447c
  414468:	lahf   
  414469:	jb     0x41444a
  41446b:	inc    DWORD PTR [ebp-0x1fa5bbfc]
  414471:	div    DWORD PTR [ebp-0x60]
  414474:	es jae 0x414452
  414477:	xlat   BYTE PTR ds:[ebx]
  414478:	sbb    BYTE PTR [edi+0x26b24a9c],0xba
  41447f:	push   ds
  414480:	xchg   edx,eax
  414481:	sub    ebx,DWORD PTR [edx]
  414483:	sub    eax,0xe770cccd
  414488:	mov    WORD PTR [ecx],?
  41448a:	pop    ds
  41448b:	pminsw mm4,mm4
  41448e:	imul   esi,DWORD PTR [ecx+0x51a7d534],0xbe0b4aed
  414498:	add    eax,0x1cb7e970
  41449d:	lock retf 0xc674
  4144a1:	loope  0x4144ea
  4144a3:	enter  0x133e,0xab
  4144a7:	fwait
  4144a8:	or     ch,BYTE PTR [ecx-0x8]
  4144ab:	ror    BYTE PTR [ecx+0x4b4356b9],1
  4144b1:	lds    esi,FWORD PTR [ebp+0x6a]
  4144b4:	or     cl,0xdf
  4144b7:	push   eax
  4144b8:	jns    0x41443a
  4144ba:	mov    dh,0xda
  4144bc:	gs js  0x4144e5
  4144bf:	icebp  
  4144c0:	inc    esp
  4144c1:	cmp    eax,0x7177b207
  4144c6:	dec    ecx
  4144c7:	clc    
  4144c8:	xor    BYTE PTR [esp+esi*8+0x4b],cl
  4144cc:	lods   eax,DWORD PTR ds:[esi]
  4144cd:	fwait
  4144ce:	jns    0x41451f
  4144d0:	cdq    
  4144d1:	(bad)  
  4144d2:	push   ecx
  4144d3:	out    dx,al
  4144d4:	bound  ebp,QWORD PTR [edx]
  4144d6:	das    
  4144d7:	data16 (bad) 
  4144d9:	loope  0x4144b9
  4144db:	leave  
  4144dc:	sar    BYTE PTR [ecx+0x53a3df45],0x45
  4144e3:	clc    
  4144e4:	mov    edx,0xdb157d23
  4144e9:	sub    eax,0x5a2ec2cf
  4144ee:	adc    cl,BYTE PTR [eax+eiz*8+0x5a14856b]
  4144f5:	sub    DWORD PTR [edi],0xffffffa4
  4144f8:	xchg   edi,eax
  4144f9:	dec    edi
  4144fa:	stos   DWORD PTR es:[edi],eax
  4144fb:	or     DWORD PTR [ebx-0x5b776414],edx
  414501:	out    dx,eax
  414502:	out    dx,eax
  414503:	cld    
  414504:	lahf   
  414505:	not    BYTE PTR [ecx+eax*4+0x4d]
  414509:	popa   
  41450a:	stos   DWORD PTR es:[edi],eax
  41450b:	xor    BYTE PTR [edx],0x5d
  41450e:	jle    0x41452d
  414510:	test   BYTE PTR [ecx+ebx*4-0x11],al
  414514:	fisubr DWORD PTR [edx-0x4dd68493]
  41451a:	mov    ah,0xf8
  41451c:	nop
  41451d:	dec    ebx
  41451e:	retf   0x74b4
  414521:	enter  0x8f81,0x93
  414525:	adc    ecx,DWORD PTR [esi-0x1e]
  414528:	inc    ebx
  414529:	sub    ah,dl
  41452b:	fist   DWORD PTR [eax+0x19754b3]
  414531:	or     al,0x92
  414533:	xor    eax,0x16832c46
  414538:	adc    al,0xde
  41453a:	fisub  DWORD PTR [edx]
  41453c:	mov    esi,edx
  41453e:	mov    al,0xfe
  414540:	mov    edx,0x8357c6d
  414545:	pop    edi
  414546:	cli    
  414547:	dec    edx
  414548:	mul    edx
  41454a:	sub    BYTE PTR [ebx],dh
  41454c:	dec    edi
  41454d:	pop    eax
  41454e:	jmp    0x414531
  414550:	call   0x6ef411b0
  414555:	je     0x414556
  414557:	jbe    0x41450e
  414559:	sbb    ecx,DWORD PTR [ebp-0x5b71d102]
  41455f:	adc    BYTE PTR [ecx+eiz*4-0x36750ded],ch
  414566:	es add al,0x29
  414569:	outs   dx,BYTE PTR ds:[esi]
  41456a:	outs   dx,DWORD PTR ds:[esi]
  41456b:	pop    ecx
  41456c:	dec    ecx
  41456d:	std    
  41456e:	dec    edi
  41456f:	cdq    
  414570:	mov    edi,0xe159bb63
  414575:	int3   
  414576:	and    eax,0xba20ff07
  41457b:	fild   QWORD PTR [ebx]
  41457d:	je     0x4145b3
  41457f:	in     al,0x8
  414581:	ja     0x4145b0
  414583:	add    ebx,DWORD PTR [edi+0x5710c1e9]
  414589:	sti    
  41458a:	dec    ebx
  41458b:	xchg   esi,eax
  41458c:	xchg   ah,dh
  41458e:	sub    ecx,DWORD PTR ds:0x74dc623
  414594:	loop   0x4145c4
  414596:	pop    es
  414597:	ins    DWORD PTR es:[edi],dx
  414598:	mov    gs,WORD PTR [ebx+0x2edbce87]
  41459e:	mov    eax,0x7f70e45d
  4145a3:	imul   edi,edx,0x27
  4145a6:	sub    BYTE PTR [edx],ch
  4145a8:	cmp    ecx,DWORD PTR [ebx-0x368fe7be]
  4145ae:	jb     0x4145e5
  4145b0:	in     al,0xa6
  4145b2:	cmp    al,dh
  4145b4:	dec    esi
  4145b5:	jne    0x41453b
  4145b7:	stos   DWORD PTR es:[edi],eax
  4145b8:	mov    ebx,0xa77d108c
  4145bd:	mov    bh,0x7d
  4145bf:	sbb    eax,0x783b1d2
  4145c4:	or     al,0x52
  4145c6:	push   ebx
  4145c7:	pop    ss
  4145c8:	add    DWORD PTR [eax],0xeec535b0
  4145ce:	stc    
  4145cf:	ret    
  4145d0:	ror    DWORD PTR [eax],0x4a
  4145d3:	icebp  
  4145d4:	and    DWORD PTR [ebx-0x54843df4],0x42b99f65
  4145de:	push   ebx
  4145df:	push   esp
  4145e0:	(bad)  
  4145e1:	aam    0x77
  4145e3:	lds    edx,FWORD PTR [edi+0x36370038]
  4145e9:	sub    ebx,DWORD PTR [edx+0x44]
  4145ec:	adc    DWORD PTR [ebp-0x10],eax
  4145ef:	or     al,0xaa
  4145f1:	lock cmp BYTE PTR [eax+esi*1],0x21
  4145f6:	mov    WORD PTR [eax-0x64],ds
  4145f9:	cwde   
  4145fa:	clc    
  4145fb:	mov    ds:0x3eeef1d,al
  414600:	push   ecx
  414601:	es pop ds
  414603:	fs js  0x41458c
  414606:	push   edi
  414607:	fidivr WORD PTR [ecx-0x21]
  41460a:	loop   0x414615
  41460c:	imul   BYTE PTR [edx+0x28]
  41460f:	jecxz  0x4145ff
  414611:	cwde   
  414612:	inc    edx
  414613:	or     al,0x8b
  414615:	jmp    0x4145b0
  414617:	mov    ecx,0xa5469209
  41461c:	jo     0x414621
  41461e:	inc    ebx
  41461f:	ja     0x414639
  414621:	(bad)  
  414622:	and    BYTE PTR [edi-0x6046f4d5],bl
  414628:	mov    ds:0x4cc0e382,al
  41462d:	call   0x2a6d:0xb6d36eab
  414634:	push   es
  414635:	dec    edi
  414636:	mov    bh,0x53
  414638:	xchg   esi,eax
  414639:	call   0xb2c1e9b8
  41463e:	test   al,0x94
  414640:	add    al,0x4e
  414642:	push   cs
  414643:	sub    DWORD PTR [edi],esi
  414645:	lahf   
  414646:	inc    esi
  414647:	pop    eax
  414648:	pop    ebp
  414649:	pop    edi
  41464a:	mov    bh,0xc5
  41464c:	jne    0x4146b9
  41464e:	jmp    0x2d720f09
  414653:	arpl   WORD PTR [edi-0x159147cb],dx
  414659:	sub    DWORD PTR [esi-0x745b8ae],0xa3be8017
  414663:	(bad)  
  414664:	in     eax,dx
  414665:	xor    eax,0x5c722ba6
  41466a:	pop    eax
  41466b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41466c:	push   ebx
  41466d:	cmp    DWORD PTR [eax-0x75a6d0c],edx
  414673:	add    DWORD PTR [edx],0x2f
  414676:	rcl    BYTE PTR [eax-0x77ac79d2],cl
  41467c:	lds    ebx,FWORD PTR [esi+0x794c1b4]
  414682:	push   0x33f0f026
  414687:	ins    BYTE PTR es:[edi],dx
  414688:	xor    BYTE PTR [esi],cl
  41468a:	jge    0x4146a7
  41468c:	inc    esp
  41468d:	xor    bh,BYTE PTR [edx+0x4f]
  414690:	cmp    al,0x18
  414692:	mov    ebp,0xa2dce11b
  414697:	pop    ebp
  414698:	sbb    eax,0xa762485b
  41469d:	aaa    
  41469e:	jno    0x4146e9
  4146a0:	cmp    ah,al
  4146a2:	hlt    
  4146a3:	pop    ds
  4146a4:	sbb    BYTE PTR [ebx-0x10],cl
  4146a7:	push   edx
  4146a8:	loope  0x414699
  4146aa:	mov    ds:0x12e08a22,al
  4146af:	pushf  
  4146b0:	fiadd  WORD PTR [esi]
  4146b2:	ror    DWORD PTR [ebp-0x3b],0x29
  4146b6:	std    
  4146b7:	pop    edx
  4146b8:	popa   
  4146b9:	pop    edi
  4146ba:	or     BYTE PTR [edx],0x9b
  4146bd:	dec    esp
  4146be:	or     eax,0xee95304b
  4146c3:	xor    DWORD PTR ds:0xa8608a73,0x45634c63
  4146cd:	ja     0x414690
  4146cf:	addr16 (bad) 
  4146d1:	mov    eax,ebp
  4146d3:	nop
  4146d4:	mov    ecx,0x428f1a63
  4146d9:	add    dl,BYTE PTR [ecx+0x27680100]
  4146df:	call   0xc4ccb9f6
  4146e4:	xlat   BYTE PTR ds:[ebx]
  4146e5:	ja     0x41473e
  4146e7:	adc    DWORD PTR [esi-0x78],0x19
  4146eb:	fs out dx,al
  4146ed:	add    bl,BYTE PTR [edx-0x44]
  4146f0:	popa   
  4146f1:	cld    
  4146f2:	add    DWORD PTR [ebx+0x5c8fa354],ebp
  4146f8:	stos   BYTE PTR es:[edi],al
  4146f9:	jbe    0x41470e
  4146fb:	push   0xffffffcc
  4146fd:	jmp    0xe91205e1
  414702:	sbb    ch,cl
  414704:	mov    eax,DWORD PTR [ebx-0x7d]
  414707:	jb     0x41477e
  414709:	daa    
  41470a:	push   ebp
  41470b:	mov    dh,0xd7
  41470d:	mov    ds:0xf3735b3e,al
  414712:	adc    DWORD PTR [ecx+0x75],ebp
  414715:	mov    ch,0xdc
  414717:	pop    ebx
  414718:	pop    esi
  414719:	retf   0x1055
  41471c:	inc    eax
  41471d:	push   0xb5b5debd
  414722:	ror    BYTE PTR [eax+0x4c],1
  414725:	inc    esp
  414726:	not    DWORD PTR ds:0x8eedf904
  41472c:	add    BYTE PTR [eax-0x52],bh
  41472f:	and    esi,esi
  414731:	fild   WORD PTR [eax-0x12]
  414734:	mov    edi,ebx
  414736:	call   0x50694700
  41473b:	dec    ebx
  41473c:	pop    eax
  41473d:	jns    0x414722
  41473f:	sbb    eax,0x7d96b919
  414744:	loope  0x4147ae
  414746:	push   cs
  414747:	loopne 0x4147af
  414749:	adc    bl,BYTE PTR [edi-0x37ee332d]
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	xchg   bh,bh
  414752:	pop    DWORD PTR ds:0x78a9025f
  414758:	daa    
  414759:	push   esp
  41475a:	mov    ecx,0x43966bd8
  41475f:	xor    al,0x9c
  414761:	mov    bh,0x6e
  414763:	gs (bad) 
  414765:	clc    
  414766:	or     DWORD PTR [eax+0x34],0xffffffcd
  41476a:	nop
  41476b:	mov    cl,0xfa
  41476d:	into   
  41476e:	das    
  41476f:	push   eax
  414770:	lahf   
  414771:	sub    al,0xeb
  414773:	gs push ss
  414775:	imul   ebx,DWORD PTR [ebp+edx*8+0x1e],0xe955086c
  41477d:	or     DWORD PTR [esi],edx
  41477f:	es call 0x64bf:0x96ce38cf
  414787:	loopne 0x414740
  414789:	sbb    dl,BYTE PTR ds:0xed958fd9
  41478f:	loope  0x414790
  414791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414792:	jne    0x41474a
  414794:	daa    
  414795:	add    BYTE PTR [eax+0x7c19adc2],0x7e
  41479c:	xchg   ebx,eax
  41479d:	inc    edi
  41479e:	and    ah,BYTE PTR [ebx-0x1ae7021]
  4147a4:	jo     0x41478c
  4147a6:	mov    al,ds:0x482bc97d
  4147ab:	push   ds
  4147ac:	imul   edi,DWORD PTR [ecx-0x1],0x156f54f8
  4147b3:	(bad)  
  4147b4:	in     eax,0xd5
  4147b6:	pop    eax
  4147b7:	push   eax
  4147b8:	push   ebx
  4147b9:	mov    ecx,esi
  4147bb:	adc    DWORD PTR [ecx-0x222d64eb],ebp
  4147c1:	jmp    0x5160:0x5c06c874
  4147c8:	cli    
  4147c9:	push   ds
  4147ca:	ficomp DWORD PTR [ebp-0x28]
  4147cd:	push   esi
  4147ce:	dec    edx
  4147cf:	outs   dx,DWORD PTR ds:[esi]
  4147d0:	shl    BYTE PTR [esi+0x6f17f430],0x59
  4147d7:	jmp    0x9541:0xb41971db
  4147de:	pop    esi
  4147df:	dec    esi
  4147e0:	test   al,0x82
  4147e2:	pop    esi
  4147e3:	mov    esi,0x87e0f399
  4147e8:	dec    esp
  4147e9:	cld    
  4147ea:	dec    esi
  4147eb:	mov    ds:0x9a03454,al
  4147f0:	pop    es
  4147f1:	pop    esp
  4147f2:	sub    BYTE PTR [ebx],ah
  4147f4:	pop    es
  4147f5:	arpl   WORD PTR [esi+0x3b1480c],ax
  4147fb:	(bad)  
  4147fd:	test   eax,0x196d39de
  414802:	lahf   
  414803:	push   esp
  414804:	or     esi,esp
  414806:	popf   
  414807:	xor    edx,DWORD PTR [ecx]
  414809:	adc    eax,DWORD PTR [esi-0xb]
  41480c:	loop   0x414848
  41480e:	push   0x44da5f80
  414813:	sbb    ecx,DWORD PTR [eax+0x5]
  414816:	mov    edx,0xd2600456
  41481b:	dec    ebx
  41481c:	aaa    
  41481d:	ret    
  41481e:	rcl    BYTE PTR [ebx],1
  414820:	loope  0x41480c
  414822:	mov    ah,0x30
  414824:	jg     0x4147e3
  414826:	shl    BYTE PTR [eax-0xe3677d0],0xef
  41482d:	xchg   esi,eax
  41482e:	lahf   
  41482f:	jp     0x41483e
  414831:	outs   dx,DWORD PTR ds:[esi]
  414832:	leave  
  414833:	scas   eax,DWORD PTR es:[edi]
  414834:	add    BYTE PTR [ebx*2+0x5103d0dc],0x8d
  41483c:	fwait
  41483d:	sbb    al,dl
  41483f:	rol    BYTE PTR [ecx],1
  414841:	out    dx,eax
  414842:	add    edi,esi
  414844:	(bad)  
  414846:	stos   BYTE PTR es:[edi],al
  414847:	inc    esp
  414848:	or     eax,eax
  41484a:	cli    
  41484b:	sahf   
  41484c:	xor    bl,0xc5
  41484f:	sbb    BYTE PTR [ebp+0x6324c3f5],0xd4
  414856:	or     eax,0x6d902d95
  41485b:	ret    
  41485c:	and    al,ch
  41485e:	and    bl,dl
  414860:	or     DWORD PTR [edi],eax
  414862:	mov    DWORD PTR [edi+0x6f],esp
  414865:	and    bl,BYTE PTR ds:0x78d01978
  41486b:	test   DWORD PTR [edi-0x5a],ecx
  41486e:	sub    al,0xb7
  414870:	ds test al,cl
  414873:	sahf   
  414874:	lds    ecx,FWORD PTR [edx+0x2e895515]
  41487a:	add    al,0x7a
  41487c:	xchg   ecx,eax
  41487d:	cld    
  41487e:	das    
  41487f:	ins    BYTE PTR es:[edi],dx
  414880:	outs   dx,DWORD PTR ds:[esi]
  414881:	ja     0x41484e
  414883:	pop    ecx
  414884:	aam    0x6e
  414886:	pop    eax
  414887:	cmc    
  414888:	pop    esp
  414889:	xor    ah,0x4c
  41488c:	cdq    
  41488d:	sti    
  41488e:	stc    
  41488f:	(bad)  
  414890:	push   edx
  414891:	fs add al,0xd6
  414894:	(bad)  
  414896:	jae    0x4148d9
  414898:	jle    0x414917
  41489a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41489c:	sbb    eax,0x5a5d0eb6
  4148a1:	xor    edi,DWORD PTR [ecx+0xd6f24be]
  4148a7:	jnp    0x4148c1
  4148a9:	sbb    eax,0xc4874433
  4148ae:	into   
  4148af:	clc    
  4148b0:	mov    esp,0x7dfac4a3
  4148b5:	cmp    ch,al
  4148b7:	shl    BYTE PTR [eax+0x63],cl
  4148ba:	xor    eax,0x1f8ea1ff
  4148bf:	clc    
  4148c0:	shl    ah,cl
  4148c2:	aas    
  4148c3:	arpl   WORD PTR [esi+0x5b9314ef],si
  4148c9:	lahf   
  4148ca:	mov    ds:0x19474a6b,al
  4148cf:	mov    edx,0x7ecca4ad
  4148d4:	out    0xa4,eax
  4148d6:	xchg   BYTE PTR [edi-0x77],dh
  4148d9:	xchg   esi,eax
  4148da:	mov    eax,0xdc111b64
  4148df:	sbb    al,0x53
  4148e1:	sub    dh,bh
  4148e3:	adc    al,0x74
  4148e5:	xchg   bh,bl
  4148e7:	(bad)  
  4148e8:	xchg   edx,eax
  4148e9:	pop    ss
  4148ea:	popf   
  4148eb:	ins    DWORD PTR es:[edi],dx
  4148ec:	pusha  
  4148ed:	xlat   BYTE PTR ds:[ebx]
  4148ee:	add    DWORD PTR [ebx],ebp
  4148f0:	mov    bl,0xaa
  4148f2:	repnz xlat BYTE PTR ds:[ebx]
  4148f4:	jp     0x414885
  4148f6:	sub    BYTE PTR [ecx-0x6d8ff105],ah
  4148fc:	mov    ds:0x6f832917,al
  414901:	out    0xd0,eax
  414903:	sti    
  414904:	sub    bl,BYTE PTR [edi-0x3f82d47f]
  41490a:	pop    ebx
  41490b:	and    eax,0x544a437d
  414910:	push   esp
  414911:	in     eax,0x2e
  414913:	call   DWORD PTR ds:0x1b1f937b
  414919:	xor    BYTE PTR [esp+ebx*1-0x78],ah
  41491d:	xor    dh,BYTE PTR [eax]
  41491f:	fisub  WORD PTR [edx-0xb]
  414922:	pop    esp
  414923:	inc    esp
  414924:	aaa    
  414925:	mov    cl,0x5e
  414927:	mov    edx,0x104d85ae
  41492c:	mov    bl,0x41
  41492e:	(bad)  [eax]
  414930:	add    esp,ebx
  414932:	enter  0x319,0xd8
  414936:	sbb    al,0xf2
  414938:	fisttp WORD PTR [esi+0x3e]
  41493b:	das    
  41493c:	ins    BYTE PTR es:[edi],dx
  41493d:	pop    ebx
  41493e:	clc    
  41493f:	add    BYTE PTR [ecx],al
  414941:	test   DWORD PTR [ebx],ebx
  414943:	addr16 iret 
  414945:	ret    
  414946:	or     al,0x30
  414948:	jge    0x414907
  41494a:	and    BYTE PTR [ebp-0x62],bl
  41494d:	dec    ecx
  41494e:	js     0x41494f
  414950:	add    ah,BYTE PTR [ecx]
  414952:	dec    esp
  414953:	sbb    al,0xb5
  414955:	stos   BYTE PTR es:[edi],al
  414956:	test   al,0x55
  414958:	bound  esi,QWORD PTR [ebx-0x62a1c551]
  41495e:	mov    ch,0xc6
  414960:	icebp  
  414961:	(bad)  
  414962:	out    0xea,al
  414964:	retf   0xbfb2
  414967:	xor    BYTE PTR [edi-0x4bb64ad9],dh
  41496d:	fild   QWORD PTR [eax]
  41496f:	out    dx,eax
  414970:	scas   al,BYTE PTR es:[di]
  414972:	loope  0x41498f
  414974:	xchg   ebp,eax
  414975:	retf   
  414976:	inc    ecx
  414977:	xchg   ebp,eax
  414978:	test   eax,0x3e6e3994
  41497d:	mov    al,ds:0x7872356b
  414982:	jae    0x414938
  414984:	outs   dx,DWORD PTR ds:[esi]
  414985:	sahf   
  414986:	shr    BYTE PTR [edx],cl
  414988:	or     al,BYTE PTR [eax+0x6ea99d19]
  41498e:	ret    
  41498f:	pop    ebx
  414990:	xlat   BYTE PTR ds:[ebx]
  414991:	cmp    BYTE PTR [esi-0x28],bl
  414994:	call   0xc642afd1
  414999:	imul   esp,DWORD PTR [edx+eiz*8-0x61dd5f7],0xb
  4149a1:	xchg   esi,eax
  4149a2:	sbb    eax,0xda0c6d8d
  4149a7:	pop    es
  4149a8:	clc    
  4149a9:	mov    esp,0xbd5577da
  4149ae:	(bad)  
  4149af:	arpl   dx,di
  4149b1:	push   ds
  4149b2:	call   FWORD PTR ds:[edx]
  4149b5:	das    
  4149b6:	xchg   ebx,eax
  4149b7:	test   DWORD PTR [eax*2+0x3163158c],0x296b02c8
  4149c2:	mov    al,0xfc
  4149c4:	fnstsw WORD PTR [edx-0x6d075e1e]
  4149ca:	pushf  
  4149cb:	sub    eax,0xc119d9cb
  4149d0:	jne    0x414957
  4149d2:	add    ebx,DWORD PTR [edi+esi*8+0x41776188]
  4149d9:	adc    BYTE PTR fs:[eax],ah
  4149dc:	mov    ah,0x5f
  4149de:	jge    0x41496d
  4149e0:	inc    esp
  4149e1:	mov    ecx,0x2a349b45
  4149e6:	popa   
  4149e7:	out    dx,al
  4149e8:	sbb    esp,esi
  4149ea:	or     ecx,DWORD PTR [esp+edi*1]
  4149ed:	or     BYTE PTR [ebx],bh
  4149ef:	nop
  4149f0:	pop    ebp
  4149f1:	or     ch,BYTE PTR [eax+0x53]
  4149f4:	add    bh,cl
  4149f6:	lds    ebx,FWORD PTR [ecx-0x43f75a6f]
  4149fc:	(bad)  
  4149fd:	xor    BYTE PTR [ebx+0x544f1ca],ch
  414a03:	loope  0x4149fc
  414a05:	mov    edx,0x58dbf038
  414a0a:	xor    al,0xb2
  414a0c:	xchg   edx,eax
  414a0d:	sub    bl,al
  414a0f:	enter  0x3a74,0xfb
  414a13:	add    edi,esp
  414a15:	imul   eax,DWORD PTR [ecx-0x60190043],0xf6788727
  414a1f:	outs   dx,DWORD PTR ds:[esi]
  414a20:	xchg   ecx,eax
  414a21:	xchg   ecx,eax
  414a22:	and    esi,edx
  414a24:	(bad)  
  414a25:	mov    ebx,0x637ec18
  414a2a:	js     0x4149c1
  414a2c:	mov    edx,0xae76fb8d
  414a31:	xchg   DWORD PTR [esi-0x36ca5dca],ecx
  414a37:	cmp    al,0xde
  414a39:	sbb    DWORD PTR [eax-0x71],ebp
  414a3c:	push   eax
  414a3d:	clc    
  414a3e:	pop    ecx
  414a3f:	loope  0x414a0d
  414a41:	push   ss
  414a42:	pop    eax
  414a43:	pop    es
  414a44:	enter  0xa80a,0x45
  414a48:	(bad)  
  414a49:	stc    
  414a4a:	inc    edx
  414a4b:	bound  ebp,QWORD PTR [eax-0x4efc407a]
  414a51:	xor    bh,BYTE PTR [edi*8+0x46fd6810]
  414a58:	cwde   
  414a59:	cmp    bl,BYTE PTR [eax-0x193d2e4a]
  414a5f:	jns    0x414a58
  414a61:	je     0x414a0a
  414a63:	pop    edx
  414a64:	jnp    0x414a6a
  414a66:	ror    dh,0x72
  414a69:	div    BYTE PTR [edx+0xe900ce3]
  414a6f:	jno    0x414a00
  414a71:	xlat   BYTE PTR ds:[ebx]
  414a72:	pop    ss
  414a73:	daa    
  414a74:	fdiv   QWORD PTR [eax+0x2d]
  414a77:	xchg   ebp,eax
  414a78:	and    ecx,DWORD PTR [esi-0x41]
  414a7b:	dec    edx
  414a7c:	lods   eax,DWORD PTR ds:[esi]
  414a7d:	dec    ebp
  414a7e:	dec    esi
  414a7f:	shl    DWORD PTR [eax],cl
  414a81:	popf   
  414a82:	inc    esp
  414a83:	rol    DWORD PTR [edx+edx*2-0x24],1
  414a87:	jg     0x414a4b
  414a89:	hlt    
  414a8a:	aam    0xde
  414a8c:	in     al,0x46
  414a8e:	(bad)
  414a92:	rol    BYTE PTR [esp+esi*2-0x257287c4],cl
  414a99:	das    
  414a9a:	and    BYTE PTR [edx-0x2abc57d3],al
  414aa0:	fst    QWORD PTR [esp+ebx*4+0x71]
  414aa4:	and    ch,ah
  414aa6:	mov    eax,ds:0x9baa10a9
  414aab:	jb     0x414a58
  414aad:	in     eax,0x1
  414aaf:	push   cs
  414ab0:	cwde   
  414ab1:	or     ebp,esi
  414ab3:	push   cs
  414ab4:	add    BYTE PTR [ecx-0x75414350],dh
  414aba:	add    dl,BYTE PTR [eax-0x51]
  414abd:	inc    ebx
  414abe:	setae  BYTE PTR [ebx+0x4b]
  414ac2:	out    0xe6,eax
  414ac4:	mov    cl,0x3d
  414ac6:	jmp    0x414ac9
  414ac8:	ret    0x8def
  414acb:	and    eax,0xd7ec9622
  414ad0:	clc    
  414ad1:	cs test eax,0xf16116c2
  414ad7:	push   esi
  414ad8:	ficomp DWORD PTR [ebx+0x4e]
  414adb:	push   ecx
  414adc:	in     al,dx
  414add:	mov    edi,0x5fde3940
  414ae2:	sub    dh,BYTE PTR [edx+0x35]
  414ae5:	push   0xffffffd2
  414ae7:	sub    ch,bl
  414ae9:	hlt    
  414aea:	add    eax,0x79f60ac7
  414aef:	xor    eax,0x54c6981e
  414af4:	xchg   BYTE PTR [eax],dl
  414af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af8:	(bad)  
  414afa:	inc    esi
  414afb:	int3   
  414afc:	repnz push edx
  414afe:	push   es
  414aff:	sbb    bl,0x8d
  414b02:	xor    bl,BYTE PTR [edi+0x54]
  414b05:	cmp    DWORD PTR fs:[edx-0x25],ecx
  414b09:	xchg   ecx,eax
  414b0a:	lods   al,BYTE PTR ds:[esi]
  414b0b:	test   eax,0x9fd82834
  414b10:	xchg   edi,eax
  414b11:	sbb    BYTE PTR ds:0x50cef75c,bl
  414b17:	xor    ecx,ebp
  414b19:	and    al,al
  414b1b:	cmp    bh,ah
  414b1d:	(bad)  
  414b1e:	je     0x414b19
  414b20:	jno    0x414b4d
  414b22:	or     ecx,DWORD PTR [esi-0x6f52672a]
  414b28:	stc    
  414b29:	and    ch,BYTE PTR ds:0x8d6bf9b5
  414b2f:	mov    eax,0xc2cc0424
  414b34:	dec    ecx
  414b35:	retf   
  414b36:	push   edi
  414b37:	push   ecx
  414b38:	jne    0x414abe
  414b3a:	pusha  
  414b3b:	cmp    BYTE PTR [edx],ch
  414b3d:	dec    esi
  414b3e:	mov    esi,0x35e25176
  414b43:	mov    bh,0xc1
  414b45:	les    edx,FWORD PTR [edx-0x4b45f714]
  414b4b:	sub    BYTE PTR ds:[edi-0x69],dl
  414b4f:	rcl    DWORD PTR [edx],cl
  414b51:	loopne 0x414b49
  414b53:	enter  0x18ad,0x3f
  414b57:	or     ecx,DWORD PTR [edi+0x51]
  414b5a:	dec    edi
  414b5b:	jg     0x414ae8
  414b5d:	or     BYTE PTR [eax],dh
  414b5f:	fsubp  st(6),st
  414b61:	sbb    ebx,0xab153c5f
  414b67:	cs adc eax,0x3315d361
  414b6d:	jg     0x414b1b
  414b6f:	mov    dh,0xf
  414b71:	jns    0x414bb5
  414b73:	mov    eax,ds:0x286be1d9
  414b78:	mov    al,0x58
  414b7a:	cdq    
  414b7b:	test   DWORD PTR [eax],0xa0c11602
  414b81:	and    DWORD PTR ds:0x9afb599b,edi
  414b87:	pop    edx
  414b88:	mov    ah,0x53
  414b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b8b:	aas    
  414b8c:	das    
  414b8d:	xchg   cl,ah
  414b8f:	(bad)  [ecx]
  414b91:	jecxz  0x414bec
  414b93:	sbb    eax,0xa07357d6
  414b98:	sbb    dh,ch
  414b9a:	xlat   BYTE PTR ds:[ebx]
  414b9b:	mov    al,0xe
  414b9d:	or     DWORD PTR [esi+0x29],ebx
  414ba0:	or     ebp,DWORD PTR [eax+ebp*2+0x35]
  414ba4:	int3   
  414ba5:	sbb    bl,BYTE PTR [ecx-0x7ef7912f]
  414bab:	jae    0x414bf8
  414bad:	jno    0x414c27
  414baf:	out    dx,al
  414bb0:	je     0x414b9f
  414bb2:	add    bl,al
  414bb4:	pop    ebx
  414bb5:	ror    BYTE PTR ds:0xcc66c008,0x24
  414bbc:	push   esi
  414bbd:	test   BYTE PTR [ecx-0x16b3a0b2],0x8a
  414bc4:	push   esi
  414bc5:	fwait
  414bc6:	daa    
  414bc7:	aas    
  414bc8:	add    esi,ebx
  414bca:	jp     0x414bed
  414bcc:	out    dx,al
  414bcd:	outs   dx,BYTE PTR ds:[esi]
  414bcf:	test   eax,0x2ed2ab68
  414bd4:	pop    si
  414bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd7:	sub    edi,0x4255ec84
  414bdd:	hlt    
  414bde:	cld    
  414bdf:	xchg   ebp,eax
  414be0:	cdq    
  414be1:	add    al,0x3a
  414be3:	jmp    0x5d7aeead
  414be8:	nop
  414be9:	jmp    0xedc4cf21
  414bee:	mov    edx,0x1fac1d6b
  414bf3:	call   0x36b9:0x9702bb8f
  414bfa:	aad    0x82
  414bfc:	inc    ecx
  414bfd:	(bad)  
  414bfe:	sti    
  414bff:	ins    BYTE PTR es:[edi],dx
  414c00:	lods   eax,DWORD PTR ds:[esi]
  414c01:	mov    cl,BYTE PTR [ebp+0x6de8890a]
  414c07:	cli    
  414c08:	mov    DWORD PTR [ebp+0x1189b91b],ecx
  414c0e:	lock test al,0xec
  414c11:	pop    ecx
  414c12:	fsubr  DWORD PTR [ebp-0x3a]
  414c15:	mov    cl,0xd1
  414c17:	sbb    edi,ecx
  414c19:	or     eax,0x66907602
  414c1e:	out    dx,eax
  414c1f:	not    edx
  414c21:	stc    
  414c22:	imul   esi,DWORD PTR [ebp-0x45],0xf8a748f9
  414c29:	es popf 
  414c2b:	lock add bl,BYTE PTR [edx]
  414c2e:	test   ebp,edi
  414c30:	jecxz  0x414c63
  414c32:	cs loope 0x414bfb
  414c35:	cmp    eax,DWORD PTR [ecx-0x6acdcabc]
  414c3b:	pop    ebp
  414c3c:	or     eax,0xea969556
  414c41:	xchg   esi,eax
  414c42:	adc    DWORD PTR [edx-0x5e],0x408674c3
  414c49:	xchg   DWORD PTR [ebx+0x2f],ebx
  414c4c:	push   ss
  414c4d:	cmp    al,0x93
  414c4f:	dec    esi
  414c50:	cmp    BYTE PTR [ebx-0x7],bl
  414c53:	xor    al,0x66
  414c55:	and    DWORD PTR ss:[ebp-0x7f8ab4d],ebp
  414c5c:	gs inc ebx
  414c5e:	(bad)  
  414c5f:	in     al,0x69
  414c61:	pop    esi
  414c62:	mov    ah,BYTE PTR [ecx+0x72]
  414c65:	mov    al,ds:0x88b52550
  414c6a:	int    0xc1
  414c6c:	sti    
  414c6d:	push   ecx
  414c6e:	gs cmp eax,0x6bdfcfd
  414c74:	pusha  
  414c75:	lods   al,BYTE PTR ds:[esi]
  414c76:	xchg   esi,eax
  414c77:	imul   ebx,DWORD PTR [edi+0x3fac409],0x5e767ff8
  414c81:	aas    
  414c82:	(bad)  
  414c83:	scas   eax,DWORD PTR es:[edi]
  414c84:	neg    BYTE PTR [ecx+ecx*4+0x9927530]
  414c8b:	dec    edx
  414c8c:	sbb    al,BYTE PTR [esp+ebx*1]
  414c8f:	pop    ebp
  414c90:	adc    BYTE PTR [eax+0x6e7b21ef],0xe
  414c97:	cmc    
  414c98:	xor    dh,dl
  414c9a:	daa    
  414c9b:	push   ebx
  414c9c:	enter  0x3099,0x8b
  414ca0:	sub    DWORD PTR [edx+0x56],edx
  414ca3:	repnz push es
  414ca5:	inc    edx
  414ca6:	mov    al,cl
  414ca8:	outs   dx,BYTE PTR ds:[esi]
  414ca9:	hlt    
  414caa:	inc    ch
  414cac:	enter  0xb63c,0x8b
  414cb0:	sbb    al,0x2d
  414cb2:	push   ss
  414cb3:	dec    edi
  414cb4:	stos   DWORD PTR es:[edi],eax
  414cb5:	(bad)  
  414cb6:	int3   
  414cb7:	std    
  414cb8:	test   al,0xf5
  414cba:	je     0x414cc6
  414cbc:	(bad)  
  414cbd:	(bad)  
  414cbe:	hlt    
  414cbf:	cli    
  414cc0:	(bad)  
  414cc1:	daa    
  414cc2:	mov    eax,edi
  414cc4:	aas    
  414cc5:	test   DWORD PTR ds:0xd72699fa,0x98a8e9c3
  414ccf:	sub    eax,DWORD PTR [edx+0x6b71d38c]
  414cd5:	test   BYTE PTR [edi-0x20],0xb7
  414cd9:	fcom   st(6)
  414cdb:	pop    es
  414cdc:	daa    
  414cdd:	sbb    DWORD PTR [eax+0xf],ebp
  414ce0:	dec    esi
  414ce1:	aam    0xca
  414ce3:	(bad)  
  414ce4:	test   BYTE PTR [edx],0x43
  414ce7:	sbb    al,0x4d
  414ce9:	push   edx
  414cea:	in     eax,0x47
  414cec:	push   0xcb1874ea
  414cf1:	pop    es
  414cf2:	mov    bh,0x62
  414cf4:	mov    esi,0x2495d891
  414cf9:	cmp    bh,al
  414cfb:	push   eax
  414cfc:	(bad)  
  414cfd:	je     0x414cdc
  414cff:	in     al,0xcb
  414d01:	prefetch BYTE PTR [esi+0x5]
  414d05:	test   BYTE PTR [eax+ebx*2-0x570cb59f],al
  414d0c:	sahf   
  414d0d:	xor    eax,edx
  414d0f:	jns    0x414cb0
  414d11:	ror    DWORD PTR [eax-0x157981a8],0x70
  414d18:	ret    
  414d19:	mov    esp,0x9bbc9a9
  414d1e:	cmp    BYTE PTR [edx+0x30],bh
  414d21:	mov    DWORD PTR [ecx+edi*4-0x61],ebx
  414d25:	push   0xffffffbb
  414d27:	cmc    
  414d28:	xor    BYTE PTR [edi-0x71],dh
  414d2b:	sbb    DWORD PTR [eax+0x37],ebx
  414d2e:	in     eax,dx
  414d2f:	sbb    esi,DWORD PTR [esi-0x7e]
  414d32:	sbb    DWORD PTR [eax-0x1b4bedf5],ebp
  414d38:	fld    DWORD PTR [edi-0x32]
  414d3b:	inc    ebp
  414d3c:	rol    BYTE PTR ds:0x64235b0b,cl
  414d42:	iret   
  414d43:	scas   eax,DWORD PTR es:[edi]
  414d44:	sub    al,0xff
  414d46:	aad    0xb1
  414d48:	sub    edi,0xffffffb2
  414d4b:	(bad)  
  414d4c:	jo     0x414db5
  414d4e:	mov    ebp,0xf62e49c5
  414d53:	sahf   
  414d54:	loop   0x414d52
  414d56:	mov    ebp,0xdbd78cf4
  414d5b:	lods   eax,DWORD PTR ds:[esi]
  414d5c:	aaa    
  414d5d:	push   ss
  414d5e:	mov    eax,ds:0x28262b65
  414d63:	push   0x9e71eac6
  414d68:	jl     0x414d40
  414d6a:	mov    ebp,0x351b64a
  414d6f:	std    
  414d70:	rol    eax,cl
  414d72:	loope  0x414d13
  414d74:	sub    al,0xb5
  414d76:	mov    dh,0x26
  414d78:	fsubr  st(1),st
  414d7a:	cmp    eax,0x31dec948
  414d7f:	dec    esi
  414d80:	mov    ds:0xf8cbcb29,al
  414d85:	das    
  414d86:	push   ecx
  414d87:	and    DWORD PTR [eax-0xe5e90fe],edx
  414d8d:	enter  0xb64b,0xe9
  414d91:	std    
  414d92:	(bad)  
  414d94:	lock pop ebx
  414d96:	push   ss
  414d97:	sbb    ecx,DWORD PTR [ebx-0x6b]
  414d9a:	imul   edi,ecx,0xfe122e98
  414da0:	nop
  414da1:	inc    ecx
  414da2:	fdiv   QWORD PTR [edi]
  414da4:	mov    eax,ds:0xce309d5c
  414da9:	lods   eax,DWORD PTR ds:[esi]
  414daa:	mov    BYTE PTR ss:[edi+0x53d566a2],bl
  414db1:	pop    ebx
  414db2:	mov    ecx,0xa3a4b1fd
  414db7:	pusha  
  414db8:	or     BYTE PTR [edi-0x4a],al
  414dbb:	mov    ecx,0x77337418
  414dc0:	and    BYTE PTR [esp+ecx*8+0x48],ah
  414dc4:	ret    0x9a26
  414dc7:	sbb    al,0x6a
  414dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dca:	aas    
  414dcb:	lods   al,BYTE PTR ds:[esi]
  414dcc:	sbb    al,ch
  414dce:	push   ebx
  414dcf:	xchg   ebx,eax
  414dd0:	xchg   DWORD PTR [eax+0x18],eax
  414dd3:	sbb    BYTE PTR ds:0xd9a86bb1,ah
  414dd9:	add    eax,0xad3fbd87
  414dde:	jl     0x414d82
  414de0:	inc    edx
  414de1:	leave  
  414de2:	push   ds
  414de3:	loop   0x414dfd
  414de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de6:	out    0x57,al
  414de8:	stos   DWORD PTR es:[edi],eax
  414de9:	push   ss
  414dea:	ds dec di
  414ded:	xor    dh,al
  414def:	(bad)  
  414df0:	pop    esp
  414df1:	jns    0x414d77
  414df3:	sbb    al,0x2e
  414df5:	jmp    0x7287:0xd8049aff
  414dfc:	jg     0x414e24
  414dfe:	out    dx,al
  414dff:	inc    esp
  414e00:	scas   al,BYTE PTR es:[edi]
  414e01:	cli    
  414e02:	scas   eax,DWORD PTR es:[edi]
  414e03:	scas   eax,DWORD PTR es:[edi]
  414e04:	les    edx,FWORD PTR [esi-0x26]
  414e07:	mov    bh,0xfa
  414e09:	fimul  WORD PTR [esi]
  414e0b:	cmp    al,0x51
  414e0d:	dec    esp
  414e0e:	sbb    edx,edi
  414e10:	retf   
  414e11:	or     edi,DWORD PTR ds:0x9f12e1af
  414e17:	sahf   
  414e18:	dec    ebx
  414e19:	or     DWORD PTR [esi],edx
  414e1b:	cmc    
  414e1c:	ds or  bl,dh
  414e1f:	lahf   
  414e20:	xchg   ecx,eax
  414e21:	and    al,0x65
  414e23:	sub    al,0x2e
  414e25:	loope  0x414e59
  414e27:	mov    ss,WORD PTR [esi+0x5bca162d]
  414e2d:	xchg   BYTE PTR [eax],ah
  414e2f:	shr    BYTE PTR [eax-0x4cae555f],0x8b
  414e36:	jge    0x414dd5
  414e38:	add    edx,DWORD PTR [eax+0x43]
  414e3b:	push   ebp
  414e3c:	and    ah,0xc3
  414e3f:	adc    BYTE PTR [ebx-0x27f8c611],ah
  414e45:	pushf  
  414e46:	nop
  414e47:	loop   0x414e1c
  414e49:	into   
  414e4a:	icebp  
  414e4b:	pop    es
  414e4c:	arpl   WORD PTR [ebx-0x1cd80822],di
  414e52:	pop    edx
  414e53:	push   0xffffffcd
  414e55:	inc    ebp
  414e56:	hlt    
  414e57:	mov    ecx,0x512727c2
  414e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e5d:	add    eax,0x2657428b
  414e62:	cmp    BYTE PTR ds:0x9a81b529,ah
  414e68:	fwait
  414e69:	dec    ebx
  414e6a:	jge    0x414e28
  414e6c:	mov    ebx,0x441511ed
  414e71:	pop    ebp
  414e72:	pop    ebp
  414e73:	ficom  WORD PTR [edx+0x3b4624c4]
  414e79:	nop
  414e7a:	inc    ebx
  414e7b:	or     ebx,esp
  414e7d:	mov    al,0x31
  414e7f:	sub    dl,cl
  414e81:	push   edi
  414e82:	mov    eax,ds:0x8e08a4d4
  414e87:	mov    bh,0x44
  414e89:	ja     0x414f03
  414e8b:	(bad)  
  414e8c:	loopne 0x414e50
  414e8e:	ins    DWORD PTR es:[edi],dx
  414e8f:	push   ss
  414e90:	adc    ebp,ebx
  414e92:	sbb    eax,0x918c4146
  414e97:	frstor [edx]
  414e99:	adc    eax,0x3e02ce79
  414e9e:	daa    
  414e9f:	cmc    
  414ea0:	push   esp
  414ea1:	out    0xbe,al
  414ea3:	mov    al,0x33
  414ea5:	xor    DWORD PTR [ecx+0x4686d009],eax
  414eab:	dec    ecx
  414eac:	imul   edi,edx,0x17b213b1
  414eb2:	add    DWORD PTR [edx+0x7],ebx
  414eb5:	in     eax,0xed
  414eb7:	sub    cl,BYTE PTR [ebx-0x4a920987]
  414ebd:	(bad)  
  414ebe:	sub    ecx,DWORD PTR [ecx+0x6b]
  414ec1:	pop    es
  414ec2:	sbb    ecx,DWORD PTR [ebp-0x37b38b28]
  414ec8:	adc    DWORD PTR [ebp-0x2e],ebx
  414ecb:	pop    esi
  414ecc:	sub    al,0xf5
  414ece:	mov    al,bh
  414ed0:	sahf   
  414ed1:	in     eax,0x67
  414ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ed4:	pop    ds
  414ed5:	fdivp  st(4),st
  414ed7:	retf   0xd04d
  414eda:	pop    es
  414edb:	adc    eax,0x73a2b044
  414ee0:	loopne 0x414e72
  414ee2:	rol    DWORD PTR [esi],1
  414ee4:	dec    ebx
  414ee5:	ret    0xb65e
  414ee8:	pop    ss
  414ee9:	jmp    0x469a:0x17f352a
  414ef0:	les    esp,FWORD PTR [eax]
  414ef2:	jge    0x414ec0
  414ef4:	xchg   ebp,eax
  414ef5:	rcr    DWORD PTR [eax],1
  414ef7:	lds    ebx,FWORD PTR [ebx-0x4b]
  414efa:	ss ins BYTE PTR es:[edi],dx
  414efc:	std    
  414efd:	js     0x414ebd
  414eff:	or     eax,0xfefc98a1
  414f04:	mov    DWORD PTR [eax+0x47905953],0x45754b5f
  414f0e:	and    eax,DWORD PTR [ebp-0x7a71a290]
  414f14:	mov    eax,ds:0xe91525f2
  414f19:	xchg   ecx,eax
  414f1a:	pushf  
  414f1b:	jecxz  0x414ee3
  414f1d:	ja     0x414edb
  414f1f:	push   esi
  414f20:	das    
  414f21:	retf   
  414f22:	cld    
  414f23:	mov    edx,DWORD PTR [esi+ebp*4]
  414f26:	cwde   
  414f27:	mov    cl,0xb7
  414f29:	loop   0x414f22
  414f2b:	aas    
  414f2c:	adc    eax,0x5a17cb9
  414f31:	(bad)  
  414f32:	jb     0x414f27
  414f34:	test   BYTE PTR [ecx+0x5d],ah
  414f37:	jge    0x414f04
  414f39:	int3   
  414f3a:	loop   0x414ef8
  414f3c:	vmread DWORD PTR [edi-0x14f7c8ed],edx
  414f43:	test   eax,0x4936b5a
  414f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f49:	push   ss
  414f4a:	hlt    
  414f4b:	adc    BYTE PTR [ebx],ch
  414f4d:	cs jmp 0x90da:0x9a4029ed
  414f55:	cwde   
  414f56:	pop    edi
  414f57:	or     BYTE PTR [ecx],ch
  414f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f5a:	mov    DWORD PTR [esi-0x4d],ebx
  414f5d:	idiv   DWORD PTR [eax]
  414f5f:	ss scas al,BYTE PTR es:[edi]
  414f61:	test   BYTE PTR [esi-0x35],0x32
  414f65:	xor    al,cl
  414f67:	xchg   DWORD PTR ds:0x568818b0,ebx
  414f6d:	sub    DWORD PTR [esi+0x4bb972c9],ebp
  414f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f74:	push   cs
  414f75:	xor    DWORD PTR [esi-0x7e5a919a],esp
  414f7b:	jp     0x414f62
  414f7d:	(bad)  
  414f7e:	mov    esi,0xc4878162
  414f83:	nop
  414f84:	adc    BYTE PTR [ebp+0x3abc7acc],ah
  414f8a:	mov    ds:0x44a6decd,eax
  414f8f:	enter  0x47dd,0x71
  414f93:	mov    al,0x69
  414f95:	cmc    
  414f96:	xor    ebx,DWORD PTR [ebx-0x24836153]
  414f9c:	aam    0x19
  414f9e:	jg     0x414fad
  414fa0:	enter  0x5c6,0x65
  414fa4:	dec    ebp
  414fa5:	or     BYTE PTR [ecx],dl
  414fa7:	jmp    0x6432bfce
  414fac:	(bad)  
  414fad:	sub    edi,DWORD PTR [edi+0x67]
  414fb0:	into   
  414fb1:	outs   dx,DWORD PTR ds:[esi]
  414fb2:	aas    
  414fb3:	gs ds pop es
  414fb6:	push   cs
  414fb7:	stos   BYTE PTR es:[edi],al
  414fb8:	inc    edi
  414fb9:	sub    DWORD PTR [esi],esi
  414fbb:	fdivr  QWORD PTR [edx+0x27]
  414fbe:	pop    edi
  414fbf:	cmp    cl,BYTE PTR [ebx-0x9e3fffe]
  414fc5:	loopne 0x414ff0
  414fc7:	fs cs mov bx,dx
  414fcc:	jbe    0x415012
  414fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fcf:	(bad)  [edx-0x6748fa86]
  414fd5:	(bad)  
  414fd6:	push   cs
  414fd7:	(bad)  
  414fd8:	jmp    0x44216d9c
  414fdd:	mov    dl,0x5
  414fdf:	stos   BYTE PTR es:[edi],al
  414fe0:	or     bl,BYTE PTR [edx+ecx*2]
  414fe3:	(bad)  
  414fe5:	outs   dx,BYTE PTR ds:[esi]
  414fe6:	in     al,dx
  414fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fe8:	aam    0x64
  414fea:	sbb    DWORD PTR [edi-0x13e0057a],ebx
  414ff0:	mov    cl,0xb2
  414ff2:	nop
  414ff3:	adc    ebp,DWORD PTR [edx]
  414ff5:	pop    ebp
  414ff6:	pop    esi
  414ff7:	pop    edx
  414ff8:	inc    ecx
  414ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ffb:	inc    ebx
  414ffc:	repz popf 
  414ffe:	mov    cl,0x50
  415000:	jnp    0x41503c
  415002:	pop    ss
  415003:	sub    eax,DWORD PTR [ebx-0x359e4224]
  415009:	(bad)  
  41500a:	jne    0x415033
  41500c:	or     al,0x8e
  41500e:	push   ds
  41500f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415010:	add    ebp,DWORD PTR [eax]
  415012:	push   ebx
  415013:	jne    0x414fe7
  415015:	inc    ebp
  415016:	push   0xb09b37ae
  41501b:	mov    ds:0x99b518b4,eax
  415020:	aaa    
  415021:	retf   0x8f2e
  415024:	push   edi
  415025:	cmp    BYTE PTR [edx-0x2fe136ac],al
  41502b:	in     eax,dx
  41502c:	mov    bh,0xd7
  41502e:	std    
  41502f:	stc    
  415030:	dec    DWORD PTR [eax]
  415032:	(bad)  
  415033:	fnsave [ebp+0x1475e789]
  415039:	stos   DWORD PTR es:[edi],eax
  41503a:	add    al,0x2f
  41503c:	(bad)  
  41503d:	sahf   
  41503e:	adc    BYTE PTR [eax-0x5694333],ch
  415044:	jbe    0x41503e
  415046:	cs ins DWORD PTR es:[edi],dx
  415048:	jle    0x41504d
  41504a:	addr16 cli 
  41504c:	or     BYTE PTR [ebx-0x2b],0xb
  415050:	cmp    ecx,esi
  415052:	enter  0xf069,0x6d
  415056:	pop    ebp
  415057:	mov    ah,0xf
  415059:	mov    BYTE PTR [esi-0x504d8708],al
  41505f:	dec    esi
  415060:	push   ecx
  415061:	pushf  
  415062:	push   esp
  415063:	popa   
  415064:	int    0x83
  415066:	add    esp,DWORD PTR [edi+0x72]
  415069:	inc    edx
  41506a:	pop    edi
  41506b:	lahf   
  41506c:	mov    ecx,0x76894af
  415071:	xchg   esp,eax
  415072:	test   DWORD PTR [ebx],0x249cac1c
  415078:	scas   al,BYTE PTR es:[edi]
  415079:	or     DWORD PTR [eax+ecx*8+0x6a],ecx
  41507d:	sub    dl,BYTE PTR [ebx+0x31]
  415080:	inc    edx
  415081:	sub    BYTE PTR [ecx],0x47
  415084:	les    ebp,FWORD PTR [edi-0x11]
  415087:	idiv   dl
  415089:	mov    WORD PTR [ebx],cs
  41508b:	sbb    edx,eax
  41508d:	jae    0x4150ad
  41508f:	cmp    al,0x55
  415091:	mov    WORD PTR [eax],fs
  415093:	xchg   ecx,eax
  415094:	cmp    BYTE PTR [ebx],0x8a
  415097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415098:	loop   0x415078
  41509a:	dec    edx
  41509b:	xchg   ebx,eax
  41509c:	fnstcw WORD PTR [edx]
  41509e:	mov    ebp,0xeda02608
  4150a3:	outs   dx,DWORD PTR ds:[esi]
  4150a4:	adc    al,0xc8
  4150a6:	dec    ebx
  4150a7:	ins    DWORD PTR es:[edi],dx
  4150a8:	js     0x415058
  4150aa:	gs jecxz 0x41503d
  4150ad:	lea    ebp,[esi+0x67]
  4150b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150b1:	gs sbb ch,dl
  4150b4:	pop    edx
  4150b5:	push   edx
  4150b6:	jno    0x4150f0
  4150b8:	adc    al,0xf8
  4150ba:	mov    al,0x71
  4150bc:	and    al,bh
  4150be:	stos   DWORD PTR es:[edi],eax
  4150bf:	push   esp
  4150c0:	repnz scas eax,DWORD PTR es:[edi]
  4150c2:	lods   eax,DWORD PTR ds:[esi]
  4150c3:	das    
  4150c4:	xchg   edi,eax
  4150c5:	mov    ch,0xde
  4150c7:	fstp   DWORD PTR [ebx+0x39ffc227]
  4150cd:	cs stos DWORD PTR es:[edi],eax
  4150cf:	imul   ebx,DWORD PTR [ecx+0x3c],0xffffff9e
  4150d3:	cmp    DWORD PTR [edi-0xe],0x25d9baa4
  4150da:	add    al,0x98
  4150dc:	retf   0x5a6f
  4150df:	inc    esp
  4150e0:	xor    ah,ah
  4150e2:	int3   
  4150e3:	test   ebp,ecx
  4150e5:	sub    eax,0x337f02a9
  4150ea:	(bad)  
  4150eb:	stc    
  4150ec:	fstp   QWORD PTR [edx+0x55cde316]
  4150f2:	out    dx,eax
  4150f3:	inc    ebp
  4150f4:	enter  0x17de,0x19
  4150f8:	dec    edx
  4150f9:	test   ch,0xec
  4150fc:	dec    edi
  4150fd:	lods   al,BYTE PTR ds:[esi]
  4150fe:	or     edi,DWORD PTR [edi+edi*1]
  415101:	cmp    eax,0x318ac5b8
  415106:	add    edx,DWORD PTR [edx-0x51]
  415109:	iret   
  41510a:	xchg   DWORD PTR [ecx-0xb],edx
  41510d:	jno    0x4150ae
  41510f:	fwait
  415110:	mov    dl,0x8f
  415112:	adc    esp,esi
  415114:	inc    ebp
  415115:	(bad)
  415119:	std    
  41511a:	lock inc ebx
  41511c:	lods   eax,DWORD PTR ds:[esi]
  41511d:	inc    ebp
  41511e:	sbb    edx,DWORD PTR [ecx+0x58532506]
  415124:	jmp    0x11da:0xeee017c6
  41512b:	ror    DWORD PTR [ebx+0x1cdde514],cl
  415131:	jno    0x4151a9
  415133:	mov    BYTE PTR [eax-0x67],bh
  415136:	ror    ebx,cl
  415138:	aad    0xe5
  41513a:	stos   BYTE PTR es:[edi],al
  41513b:	cmp    esi,esi
  41513d:	cdq    
  41513e:	xchg   ebp,eax
  41513f:	push   esi
  415140:	mov    cl,0x21
  415142:	aad    0xa1
  415144:	dec    ebx
  415145:	(bad)  
  415146:	mov    esp,0xf697443b
  41514b:	fcmovnu st,st(6)
  41514d:	fild   WORD PTR [edi+0x2a]
  415150:	sub    cl,BYTE PTR [eax]
  415152:	xchg   ebx,eax
  415153:	out    dx,al
  415154:	push   esp
  415155:	aaa    
  415156:	mov    eax,ds:0xa3aa74e1
  41515b:	mov    dh,0x3a
  41515d:	or     eax,0x3cdb7e23
  415162:	pushf  
  415163:	in     eax,dx
  415164:	jae    0x415101
  415166:	inc    ebp
  415167:	fisttp DWORD PTR [esi-0x11]
  41516a:	out    0x71,eax
  41516c:	cld    
  41516d:	mov    esi,0x1dd7cbe2
  415172:	das    
  415173:	dec    ecx
  415174:	xor    cl,dl
  415176:	push   0x79
  415178:	mov    bl,0xa3
  41517a:	iret   
  41517b:	pop    ebp
  41517c:	mov    WORD PTR [edx-0xd],cs
  41517f:	mov    bh,0x14
  415181:	mov    esp,0xa5fe0128
  415186:	(bad)  
  415187:	mov    ds:0x3c80fe23,eax
  41518c:	cmc    
  41518d:	mov    cl,0x1e
  41518f:	pushf  
  415190:	xchg   ebx,eax
  415191:	push   ds
  415192:	mov    edx,DWORD PTR [ecx-0x5510dac5]
  415198:	or     al,0xd4
  41519a:	in     eax,0x4b
  41519c:	mov    bh,0x63
  41519e:	sbb    eax,0x27a494df
  4151a3:	mov    edi,0x83ecc15e
  4151a8:	adc    eax,0x8b00e7c4
  4151ad:	xchg   ch,dl
  4151af:	mov    cl,0xa8
  4151b1:	out    0x12,eax
  4151b3:	stos   BYTE PTR es:[edi],al
  4151b4:	lods   eax,DWORD PTR ds:[esi]
  4151b5:	ss popf 
  4151b7:	(bad)  
  4151b8:	fdivp  st(6),st
  4151ba:	call   FWORD PTR ds:0xdf5ffba7
  4151c0:	jecxz  0x415188
  4151c2:	mov    esp,DWORD PTR [ecx]
  4151c4:	or     eax,0x7ab0b09d
  4151c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ca:	scas   al,BYTE PTR es:[edi]
  4151cb:	mov    WORD PTR [edi],?
  4151cd:	xor    al,0x23
  4151cf:	xor    dh,dh
  4151d1:	pop    ds
  4151d2:	pop    esp
  4151d3:	mov    eax,0xfb7b2ca
  4151d8:	or     eax,0x74e1adb6
  4151dd:	leave  
  4151de:	and    DWORD PTR fs:[ebx-0x4926a585],ebp
  4151e5:	cmp    BYTE PTR [edx],0xcc
  4151e8:	pop    es
  4151e9:	pop    ds
  4151ea:	adc    al,0x89
  4151ec:	jno    0x4151cf
  4151ee:	fld    QWORD PTR [esi]
  4151f0:	add    DWORD PTR [eax],esi
  4151f2:	dec    ebx
  4151f3:	lods   al,BYTE PTR ds:[esi]
  4151f4:	mov    DWORD PTR [ecx],0x22bda304
  4151fa:	in     eax,0x41
  4151fc:	mov    esp,0x82e4790b
  415201:	stos   BYTE PTR es:[edi],al
  415202:	fcmovne st,st(2)
  415204:	cmp    ah,al
  415206:	push   esp
  415207:	jg     0x4151e2
  415209:	fs inc eax
  41520b:	add    BYTE PTR [ecx+edi*8+0x35],0x89
  415210:	mov    eax,0x83087a6d
  415215:	xor    al,0x9
  415217:	sbb    al,0x7
  415219:	int3   
  41521a:	sti    
  41521b:	xor    BYTE PTR [ecx],bl
  41521d:	out    dx,eax
  41521e:	add    esp,ebp
  415220:	pop    edx
  415221:	icebp  
  415222:	(bad)  
  415223:	pop    ebx
  415224:	cwde   
  415225:	mov    BYTE PTR [edx+0x55],dl
  415228:	cdq    
  415229:	dec    edi
  41522a:	jo     0x415238
  41522c:	push   ebx
  41522d:	or     ebp,esp
  41522f:	add    eax,ebp
  415231:	or     al,0x28
  415233:	xchg   esp,eax
  415234:	jg     0x4151da
  415236:	enter  0xe2bc,0x35
  41523a:	in     al,0x2b
  41523c:	mov    dh,0xf2
  41523e:	sar    DWORD PTR [esi+0x2d0fa989],1
  415244:	and    eax,0x5ba9724c
  415249:	popa   
  41524a:	or     esi,DWORD PTR [ecx+0x720ff712]
  415250:	mov    esp,0xde595d8e
  415255:	call   0xa4a9:0x6933640b
  41525c:	cld    
  41525d:	push   0xcc1a8aed
  415262:	adc    ebp,DWORD PTR es:[edi-0x3a533b54]
  415269:	mov    bl,BYTE PTR ds:0xedd35065
  41526f:	mov    ebx,0xeb506a68
  415274:	xchg   edi,ebx
  415276:	data16 xor bl,al
  415279:	add    eax,0xc6433115
  41527e:	lods   eax,DWORD PTR ds:[esi]
  41527f:	icebp  
  415280:	stos   DWORD PTR es:[edi],eax
  415281:	cmp    al,0x9e
  415284:	or     BYTE PTR [ebp+0x4ceb646b],dl
  41528a:	mov    ds:0xe2c25703,eax
  41528f:	pusha  
  415290:	or     al,0x11
  415292:	push   cs
  415293:	iret   
  415294:	xor    DWORD PTR [esi],ecx
  415296:	data16 arpl WORD PTR [ecx+eiz*2+0x509cd1eb],ax
  41529e:	sbb    al,BYTE PTR [ecx+edx*1]
  4152a1:	add    al,0xae
  4152a3:	stos   DWORD PTR es:[edi],eax
  4152a4:	or     edi,ebx
  4152a6:	enter  0x21d2,0x52
  4152aa:	inc    esp
  4152ab:	inc    eax
  4152ac:	arpl   si,di
  4152ae:	jnp    0x415311
  4152b0:	mov    bl,0xab
  4152b2:	jle    0x415299
  4152b4:	ins    DWORD PTR es:[edi],dx
  4152b5:	mov    edi,0x985e166e
  4152ba:	xchg   esp,eax
  4152bb:	mov    edi,0x5fba7cc0
  4152c0:	or     ebp,ecx
  4152c2:	call   0x3c3a:0x188db0ca
  4152c9:	adc    al,0x15
  4152cb:	ret    
  4152cc:	aaa    
  4152cd:	loop   0x4152cc
  4152cf:	add    eax,0xe7d4efd9
  4152d4:	jmp    0x4170:0x1415ff90
  4152db:	add    BYTE PTR [ecx-0x48f02bbb],cl
  4152e1:	inc    ebp
  4152e2:	aam    0x3d
  4152e4:	cmp    DWORD PTR ds:0x2f750000,eax
  4152ea:	mov    DWORD PTR [ebp-0x14],0xe0d
  4152f1:	lea    ecx,[ebp-0x28]
  4152f4:	push   ecx
  4152f5:	call   DWORD PTR ds:0x417018
  4152fb:	mov    DWORD PTR [ebp-0x60],eax
  4152fe:	mov    DWORD PTR [ebp-0x54],0x3a
  415305:	mov    BYTE PTR [ebp-0x34],0x0
  415309:	mov    DWORD PTR [ebp-0x8],0xea1a9822
  415310:	mov    DWORD PTR [ebp-0x68],0x122d67
  415317:	jmp    0x41532e
  415319:	mov    BYTE PTR ds:0x417038,0x0
  415320:	push   0x42cfc8
  415325:	call   DWORD PTR ds:0x417018
  41532b:	mov    DWORD PTR [ebp-0x2c],eax
  41532e:	push   0x0
  415330:	call   DWORD PTR ds:0x417018
  415336:	mov    DWORD PTR [ebp-0x2c],eax
  415339:	push   DWORD PTR ds:0x417018
  41533f:	pop    edx
  415340:	mov    DWORD PTR [ebp-0x6c],edx
  415343:	lea    edx,[ebp-0x40]
  415346:	push   edx
  415347:	mov    eax,DWORD PTR [ebp-0x60]
  41534a:	push   eax
  41534b:	call   DWORD PTR ds:0x417024
  415351:	mov    DWORD PTR [ebp-0x44],eax
  415354:	push   DWORD PTR [ebp-0x30]
  415357:	push   0x1000
  41535c:	mov    eax,DWORD PTR [ebp-0x14]
  41535f:	add    eax,0x23
  415362:	add    eax,0x23
  415365:	push   eax
  415366:	xor    eax,eax
  415368:	push   eax
  415369:	mov    ecx,DWORD PTR [ebp-0x44]
  41536c:	call   ecx
  41536e:	push   eax
  41536f:	pop    ecx
  415370:	mov    DWORD PTR [ebp-0x4],ecx
  415373:	mov    ecx,DWORD PTR [ebp-0x68]
  415376:	sub    ecx,0xdae0b
  41537c:	mov    DWORD PTR [ebp-0x68],ecx
  41537f:	cmp    DWORD PTR [ebp-0x4],0x0
  415383:	jne    0x41539d
  415385:	push   0x0
  415387:	push   0x0
  415389:	call   0x416a5c
  41538e:	push   0x0
  415390:	call   DWORD PTR ds:0x41702c
  415396:	mov    BYTE PTR ds:0x447f40,0x0
  41539d:	mov    edx,DWORD PTR [ebp-0x4]
  4153a0:	add    edx,DWORD PTR [ebp-0x14]
  4153a3:	mov    eax,DWORD PTR [ebp-0x8]
  4153a6:	mov    DWORD PTR [edx],eax
  4153a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4153ab:	add    ecx,DWORD PTR [ebp-0x54]
  4153ae:	mov    DWORD PTR [ebp-0x5c],ecx
  4153b1:	mov    edx,DWORD PTR ds:0x417024
  4153b7:	mov    DWORD PTR [ebp-0x4c],edx
  4153ba:	mov    eax,DWORD PTR [ebp-0x4]
  4153bd:	add    eax,DWORD PTR [ebp-0x14]
  4153c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4153c3:	mov    DWORD PTR [eax+0x4],ecx
  4153c6:	mov    edx,DWORD PTR [ebp-0x4]
  4153c9:	add    edx,DWORD PTR [ebp-0x14]
  4153cc:	mov    DWORD PTR [ebp-0xc],edx
  4153cf:	cmp    DWORD PTR [ebp-0x68],0x0
  4153d3:	jbe    0x4153f0
  4153d5:	mov    eax,DWORD PTR [ebp-0xc]
  4153d8:	push   eax
  4153d9:	mov    ecx,DWORD PTR [ebp-0x14]
  4153dc:	push   ecx
  4153dd:	mov    edx,DWORD PTR [ebp-0x2c]
  4153e0:	add    edx,DWORD PTR [ebp-0x68]
  4153e3:	push   edx
  4153e4:	mov    eax,DWORD PTR [ebp-0x4]
  4153e7:	push   eax
  4153e8:	call   0x41696e
  4153ed:	add    esp,0x10
  4153f0:	cmp    DWORD PTR [ebp-0x5c],0x0
  4153f4:	je     0x415404
  4153f6:	push   DWORD PTR [ebp-0x4c]
  4153f9:	push   DWORD PTR [ebp-0x6c]
  4153fc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4153ff:	push   ecx
  415400:	jmp    ecx
  415402:	jmp    0x41540a
  415404:	mov    ecx,DWORD PTR [ebp+0x8]
  415407:	mov    DWORD PTR [ebp-0x18],ecx
  41540a:	mov    eax,0x1
  41540f:	mov    esp,ebp
  415411:	pop    ebp
  415412:	ret    
  415413:	push   ebp
  415414:	mov    ebp,esp
  415416:	pop    ebp
  415417:	ret    
  415418:	push   ebp
  415419:	mov    ebp,esp
  41541b:	sub    esp,0x54
  41541e:	mov    DWORD PTR [ebp-0x34],0x0
  415425:	mov    DWORD PTR [ebp-0x4],0x0
  41542c:	mov    DWORD PTR [ebp-0x50],0x0
  415433:	mov    DWORD PTR [ebp-0x4c],0x0
  41543a:	mov    DWORD PTR [ebp-0x30],0x0
  415441:	lea    eax,[ebp-0x38]
  415444:	push   eax
  415445:	push   0x8
  415447:	call   DWORD PTR ds:0x417020
  41544d:	call   DWORD PTR ds:0x417014
  415453:	mov    DWORD PTR [ebp-0x30],eax
  415456:	lea    ecx,[ebp-0x48]
  415459:	push   ecx
  41545a:	call   DWORD PTR ds:0x417010
  415460:	mov    edx,DWORD PTR [ebp-0x34]
  415463:	push   edx
  415464:	call   0x415493
  415469:	add    esp,0x4
  41546c:	call   0x41695f
  415471:	mov    DWORD PTR [ebp-0x54],0x0
  415478:	jmp    0x415483
  41547a:	mov    eax,DWORD PTR [ebp-0x54]
  41547d:	add    eax,0x1
  415480:	mov    DWORD PTR [ebp-0x54],eax
  415483:	cmp    DWORD PTR [ebp-0x54],0x64
  415487:	jae    0x41548b
  415489:	jmp    0x41547a
  41548b:	xor    eax,eax
  41548d:	mov    esp,ebp
  41548f:	pop    ebp
  415490:	ret    0x10
  415493:	push   ebp
  415494:	mov    ebp,esp
  415496:	sub    esp,0x3c
  415499:	push   esi
  41549a:	mov    DWORD PTR [ebp-0x3c],0x0
  4154a1:	mov    DWORD PTR [ebp-0x38],0x0
  4154a8:	mov    DWORD PTR [ebp-0x30],0x0
  4154af:	mov    DWORD PTR [ebp-0x24],0x0
  4154b6:	mov    DWORD PTR [ebp-0x1c],0x0
  4154bd:	mov    DWORD PTR [ebp-0x28],0x0
  4154c4:	mov    DWORD PTR [ebp-0x2c],0x448fc8
  4154cb:	mov    DWORD PTR [ebp-0x24],0xa13d3d93
  4154d2:	mov    DWORD PTR [ebp-0x34],0x0
  4154d9:	mov    eax,DWORD PTR [ebp-0x24]
  4154dc:	mov    DWORD PTR [ebp-0x20],eax
  4154df:	mov    DWORD PTR [ebp-0x4],0x0
  4154e6:	mov    ecx,DWORD PTR ds:0x417014
  4154ec:	mov    DWORD PTR [ebp-0x4],ecx
  4154ef:	push   0x0
  4154f1:	push   0x4e
  4154f3:	push   0x1e
  4154f5:	push   0x0
  4154f7:	push   0xffffffff
  4154f9:	call   DWORD PTR ds:0x41701c
  4154ff:	test   eax,eax
  415501:	je     0x41693e
  415507:	(bad)  
  415508:	mov    WORD PTR [edx+eiz*8],gs
  41550b:	hlt    
  41550c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41550d:	lock or BYTE PTR [esi+0x71],dh
  415511:	jg     0x4154b4
  415513:	push   ss
  415514:	fs (bad) 
  415516:	mov    esp,0xf0a6f75a
  41551b:	or     BYTE PTR [edx+0x71],dh
  41551e:	jg     0x415501
  415520:	jmp    0xe2fe2bc0
  415525:	mul    DWORD PTR [esi+0x717208f0]
  41552b:	jg     0x4154ce
  41552d:	jmp    0xe2fe2bcd
  415532:	mul    DWORD PTR [esi+0x717208f0]
  415538:	jg     0x4154db
  41553a:	jmp    0xe2fe2bda
  41553f:	mul    DWORD PTR [esi+0x707a08f0]
  415545:	jg     0x4154e8
  415547:	out    0x84,eax
  415549:	ins    BYTE PTR es:[edi],dx
  41554a:	mov    dl,0xe2
  41554c:	inc    ebx
  41554d:	scas   eax,DWORD PTR es:[edi]
  41554e:	cmp    eax,0x3370ca29
  415553:	ins    BYTE PTR es:[edi],dx
  415554:	enter  0xbecf,0xd5
  415558:	xchg   ecx,eax
  415559:	xlat   BYTE PTR ds:[ebx]
  41555a:	(bad)  
  41555b:	and    BYTE PTR [edi+0x15],0x3
  41555f:	push   ds
  415560:	int3   
  415561:	leave  
  415562:	clc    
  415563:	mov    bh,0xd2
  415565:	mov    WORD PTR [eax+0x176ad0d2],ds
  41556b:	push   ecx
  41556c:	or     eax,0xbfbb87d4
  415571:	rol    dl,cl
  415573:	mov    bl,0xe9
  415575:	mov    ds:0x1b1e1f28,eax
  41557a:	(bad)  
  41557b:	(bad)  
  41557c:	xchg   esi,eax
  41557d:	(bad)  [esi-0xf59083a]
  415583:	or     BYTE PTR [edx+0x71],dh
  415586:	jg     0x415563
  415588:	lea    ebx,es:[eax-0x7e]
  41558c:	dec    esp
  41558d:	(bad)  
  41558e:	jnp    0x41555e
  415590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415591:	or     ch,BYTE PTR [ecx+eax*2-0xcb96ef1]
  415598:	pop    DWORD PTR [edx+ebp*1]
  41559b:	test   BYTE PTR [esi+0x70],bl
  41559e:	scas   eax,DWORD PTR es:[edi]
  41559f:	push   esp
  4155a0:	dec    esp
  4155a1:	jae    0x4155d7
  4155a3:	and    al,0x78
  4155a5:	les    edi,FWORD PTR [edi]
  4155a7:	rcl    BYTE PTR [ebp-0x20982add],cl
  4155ad:	pop    es
  4155ae:	jl     0x415568
  4155b0:	inc    ebx
  4155b1:	add    eax,0xde59d961
  4155b6:	sub    eax,0xa28aa43f
  4155bb:	xchg   esi,eax
  4155bc:	inc    edi
  4155bd:	jecxz  0x4155ca
  4155bf:	mov    esi,DWORD PTR [esp+ebx*1]
  4155c2:	jnp    0x415599
  4155c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155c5:	or     ch,BYTE PTR [ecx+eax*2-0x60b96ff1]
  4155cc:	adc    ebx,DWORD PTR [edx+0x627e642a]
  4155d2:	scas   eax,DWORD PTR es:[edi]
  4155d3:	inc    ecx
  4155d4:	rcr    ecx,1
  4155d6:	xor    al,0xbe
  4155d8:	in     eax,0x6b
  4155da:	aas    
  4155db:	mov    cs,WORD PTR [eax]
  4155dd:	mov    ch,dl
  4155df:	push   edi
  4155e0:	inc    edx
  4155e1:	popf   
  4155e2:	jl     0x4155ba
  4155e4:	xor    eax,0xc4c761ae
  4155e9:	inc    ebx
  4155ea:	sub    eax,0xa209dc37
  4155ef:	repz cmp al,0xbe
  4155f3:	or     BYTE PTR [edi+ecx*4+0x7b],0xf0
  4155f8:	or     BYTE PTR [edx+0x71],dh
  4155fb:	jg     0x41559e
  4155fd:	jmp    0xe2fe2c9d
  415602:	mul    DWORD PTR [esi+0x717208f0]
  415608:	jg     0x4155ab
  41560a:	jmp    0xe2fe2caa
  41560f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415610:	jecxz  0x415602
  415612:	or     BYTE PTR [esi],bh
  415614:	jo     0x415692
  415616:	mov    eax,ds:0xf39bd58f
  41561b:	loop   0x415614
  41561d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41561e:	lock or BYTE PTR [edx+0x71],dh
  415622:	jg     0x415665
  415624:	jmp    0xe3f92dc2
  415629:	std    
  41562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41562b:	lock jmp 0x9bef:0x257f7176
  415633:	(bad)  
  415634:	mov    esp,0x4de5f7e2
  415639:	or     BYTE PTR [edx+0x71],dh
  41563c:	outs   dx,DWORD PTR ds:[esi]
  41563d:	mov    eax,ds:0xb9d69be9
  415642:	loop   0x41563b
  415644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415645:	mov    al,0x8
  415647:	jb     0x4156aa
  415649:	jg     0x4155ec
  41564b:	jmp    0xe7fe2ce9
  415650:	mul    DWORD PTR [edi+0x717208f0]
  415656:	jg     0x4155fc
  415658:	jmp    0xe2fe2cf7
  41565d:	mul    DWORD PTR [esi+0x717e38f0]
  415663:	jg     0x41560a
  415665:	jmp    0xe6843305
  41566a:	mul    DWORD PTR [eax+esi*8+0x7f71f348]
  415671:	mov    cl,0xe9
  415673:	fwait
  415674:	(bad)  
  415675:	mov    esp,0xe0a6f7e2
  41567a:	or     BYTE PTR [edx+0x61],dh
  41567d:	jg     0x415620
  41567f:	jmp    0xf2fe2d1f
  415684:	mul    DWORD PTR [esi+0x717208f0]
  41568a:	jg     0x41562d
  41568c:	jmp    0xe2fa2d2c
  415691:	sti    
  415692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415693:	test   eax,0x7f71720b
  415698:	popa   
  415699:	loop   0x415636
  41569b:	add    DWORD PTR [ebx-0xf59081e],0x8
  4156a2:	jb     0x415715
  4156a4:	jg     0x415647
  4156a6:	jmp    0xe2fe2d46
  4156ab:	mul    DWORD PTR [esi+0x517208f0]
  4156b1:	jae    0x415654
  4156b3:	icebp  
  4156b4:	fwait
  4156b5:	(bad)  
  4156b6:	mov    esp,0xf0a6f7e2
  4156bb:	or     BYTE PTR [edx+0x71],dh
  4156be:	jg     0x415661
  4156c0:	jmp    0xe2fe2d60
  4156c5:	mul    DWORD PTR [esi+0x717208f0]
  4156cb:	jg     0x41566e
  4156cd:	jmp    0xe2fe2d6d
  4156d2:	mul    DWORD PTR [esi+0x717208f0]
  4156d8:	jg     0x41567b
  4156da:	jmp    0xe2fe2d7a
  4156df:	mul    DWORD PTR [esi+0x717208f0]
  4156e5:	jg     0x415688
  4156e7:	jmp    0xe2fe2d87
  4156ec:	mul    DWORD PTR [esi+0x717208f0]
  4156f2:	jg     0x415695
  4156f4:	jmp    0xe2fe2d94
  4156f9:	mul    DWORD PTR [esi+0x717208f0]
  4156ff:	jg     0x4156a2
  415701:	jmp    0xe2fe2da1
  415706:	test   DWORD PTR [eax+0x50a6d84],0x9be9a17f
  415710:	data16 mov bh,0xe2
  415713:	div    DWORD PTR [esi+0x177208f0]
  415719:	jnp    0x4156bc
  41571b:	jmp    0xb2fe2dbf
  415720:	mov    dl,0xe5
  415722:	ret    0x3d5c
  415725:	jno    0x4157a6
  415727:	mov    eax,ds:0x9cd69be9
  41572c:	loop   0x415725
  41572e:	inc    esi
  41572f:	fidivr WORD PTR [edx+0x1]
  415732:	add    ebx,DWORD PTR [ecx+eiz*4]
  415735:	jmp    0xe31e2dd5
  41573a:	mul    DWORD PTR [esi+0x71720330]
  415740:	sub    eax,0xbc9be9a1
  415745:	mov    eax,0xf0a6f7e2
  41574a:	or     BYTE PTR [edx+0x71],dh
  41574d:	jg     0x4156f0
  41574f:	jmp    0xc2fe2def
  415754:	mul    DWORD PTR [esi+0x14002610]
  41575a:	adc    ecx,esi
  41575c:	mov    bl,BYTE PTR [ebx-0x81f432a]
  415762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415763:	lock sub BYTE PTR [esi+0x71],bh
  415767:	jg     0x41570c
  415769:	jmp    0xe6422e09
  41576e:	mul    DWORD PTR [esi+0x717208f0]
  415774:	jg     0x415717
  415776:	jmp    0xe2fe2e16
  41577b:	mov    bh,0xa6
  41577d:	lock enter 0x7172,0x7f
  415782:	mov    eax,ds:0xbcd69be9
  415787:	loop   0x415780
  415789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41578a:	lock or BYTE PTR [edx+0x71],dh
  41578e:	jg     0x415731
  415790:	jmp    0xe2fe2e30
  415795:	mul    DWORD PTR [esi+0x717208f0]
  41579b:	jg     0x41573e
  41579d:	jmp    0xe2fe2e3d
  4157a2:	mul    DWORD PTR [esi+0x717208f0]
  4157a8:	jg     0x41574b
  4157aa:	jmp    0xe2fe2e4a
  4157af:	mul    DWORD PTR [esi+0x717208f0]
  4157b5:	jg     0x415758
  4157b7:	jmp    0xe2fe2e57
  4157bc:	mul    DWORD PTR [esi+0x717208f0]
  4157c2:	jg     0x415765
  4157c4:	jmp    0xe2fe2e64
  4157c9:	mul    DWORD PTR [esi+0x717208f0]
  4157cf:	jg     0x415772
  4157d1:	jmp    0xe2fe2e71
  4157d6:	mul    DWORD PTR [esi+0x717208f0]
  4157dc:	jg     0x41577f
  4157de:	jmp    0xe2fe2e7e
  4157e3:	mul    DWORD PTR [esi+0x717208f0]
  4157e9:	jg     0x41578c
  4157eb:	jmp    0xe2fe2e8b
  4157f0:	mul    DWORD PTR [esi+0x717208f0]
  4157f6:	jg     0x415799
  4157f8:	jmp    0xe2fe2e98
  4157fd:	mul    DWORD PTR [esi+0x717208f0]
  415803:	jg     0x4157a6
  415805:	jmp    0xe2fe2ea5
  41580a:	mul    DWORD PTR [esi+0x717208f0]
  415810:	jg     0x4157b3
  415812:	jmp    0xe2fe2eb2
  415817:	mul    DWORD PTR [esi+0x717208f0]
  41581d:	jg     0x4157c0
  41581f:	jmp    0xe2fe2ebf
  415824:	mul    DWORD PTR [esi+0x717208f0]
  41582a:	jg     0x4157cd
  41582c:	jmp    0xe2fe2ecc
  415831:	mul    DWORD PTR [esi+0x717208f0]
  415837:	jg     0x4157da
  415839:	jmp    0xe2fe2ed9
  41583e:	mul    DWORD PTR [esi+0x717208f0]
  415844:	jg     0x4157e7
  415846:	jmp    0xe2fe2ee6
  41584b:	mul    DWORD PTR [esi+0x717208f0]
  415851:	jg     0x4157f4
  415853:	jmp    0xe2fe2ef3
  415858:	mul    DWORD PTR [esi+0x717208f0]
  41585e:	jg     0x415801
  415860:	jmp    0xe2fe2f00
  415865:	mul    DWORD PTR [esi+0x717208f0]
  41586b:	jg     0x41580e
  41586d:	jmp    0xe2fe2f0d
  415872:	mul    DWORD PTR [esi+0x717208f0]
  415878:	jg     0x41581b
  41587a:	jmp    0xe2fe2f1a
  41587f:	mul    DWORD PTR [esi+0x717208f0]
  415885:	jg     0x415828
  415887:	jmp    0xe2fe2f27
  41588c:	mul    DWORD PTR [esi+0x717208f0]
  415892:	jg     0x415835
  415894:	jmp    0xe2fe2f34
  415899:	mul    DWORD PTR [esi+0x717208f0]
  41589f:	jg     0x415842
  4158a1:	jmp    0xe2fe2f41
  4158a6:	mul    DWORD PTR [esi+0x717208f0]
  4158ac:	jg     0x41584f
  4158ae:	jmp    0xe2fe2f4e
  4158b3:	mul    DWORD PTR [esi+0x717208f0]
  4158b9:	jg     0x41585c
  4158bb:	jmp    0xe2fe2f5b
  4158c0:	mul    DWORD PTR [esi+0x717208f0]
  4158c6:	jg     0x415869
  4158c8:	jmp    0xe2fe2f68
  4158cd:	mul    DWORD PTR [esi+0x717208f0]
  4158d3:	jg     0x415876
  4158d5:	jmp    0xe2fe2f75
  4158da:	mul    DWORD PTR [esi+0x717208f0]
  4158e0:	jg     0x415883
  4158e2:	jmp    0xe2fe2f82
  4158e7:	mul    DWORD PTR [esi+0x717208f0]
  4158ed:	jg     0x415890
  4158ef:	jmp    0xe2fe2f8f
  4158f4:	mul    DWORD PTR [esi+0x717208f0]
  4158fa:	jg     0x41589d
  4158fc:	jmp    0xe2fe2f9c
  415901:	mul    DWORD PTR [esi+0x717208f0]
  415907:	aam    0xef
  415909:	loop   0x4158a6
  41590b:	stc    
  41590c:	mov    esp,0xf0a6e7e2
  415911:	and    dl,al
  415913:	stos   DWORD PTR es:[edi],eax
  415914:	or     ebx,DWORD PTR [esi+eiz*4]
  415917:	test   al,0xc4
  415919:	xchg   edi,eax
  41591a:	fxch   st(2)
  41591c:	dec    ecx
  41591d:	inc    ebp
  41591e:	call   0x2835:0x50263874
  415925:	(bad)  
  415928:	push   ds
  415929:	jle    0x4159a6
  41592b:	dec    edx
  41592c:	add    esi,DWORD PTR [ebx-0x3a81117b]
  415932:	or     DWORD PTR [eax-0x5e],ebp
  415935:	xchg   esp,eax
  415936:	retf   
  415937:	adc    esi,DWORD PTR [ebx-0x57c3ab5d]
  41593d:	popa   
  41593e:	sbb    eax,ecx
  415940:	inc    ecx
  415941:	ret    0x9ece
  415944:	mov    bl,0xa
  415946:	ds cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  415949:	cmp    eax,0xfe8d43e
  41594e:	adc    al,0x3
  415950:	mov    edi,0x238346e7
  415955:	adc    BYTE PTR ds:0x4c498b0e,bh
  41595b:	dec    eax
  41595c:	int    0xb
  41595e:	jne    0x4159a3
  415960:	mov    ds,ebx
  415962:	nop
  415963:	inc    edi
  415964:	enter  0xa0c,0x5d
  415968:	jns    0x41593a
  41596a:	hlt    
  41596b:	lds    ecx,FWORD PTR [edx+esi*1]
  41596e:	test   BYTE PTR [ecx-0x3b],bl
  415971:	push   esp
  415972:	je     0x41591f
  415974:	test   BYTE PTR [edi+0x598c5240],dh
  41597a:	push   0x69
  41597c:	push   0xffffffc4
  41597e:	dec    ebx
  41597f:	adc    edx,esi
  415981:	lahf   
  415982:	jo     0x415997
  415984:	cmp    eax,0x926b7392
  415989:	call   0x7d4d1613
  41598e:	dec    esi
  41598f:	jg     0x415916
  415991:	rcl    dh,0x5e
  415994:	in     al,dx
  415995:	cmc    
  415996:	jmp    0xc283:0xe26260e6
  41599d:	ins    DWORD PTR es:[edi],dx
  41599e:	rcr    ah,1
  4159a0:	sbb    eax,DWORD PTR [ecx-0xc70b55a]
  4159a6:	(bad)  
  4159a8:	inc    edi
  4159a9:	mov    edx,0xfb3f6f3d
  4159ae:	fdivr  DWORD PTR [edi-0x38228b6d]
  4159b4:	mov    ds:0x62caff7d,al
  4159b9:	(bad)  [ecx+0x2c97c51a]
  4159bf:	popa   
  4159c0:	pop    esi
  4159c1:	add    DWORD PTR [edi+0x5801c78e],ebx
  4159c7:	push   ecx
  4159c8:	rcl    DWORD PTR [esi-0x3ba6b314],1
  4159ce:	lds    esi,FWORD PTR [edi]
  4159d0:	leave  
  4159d1:	sub    cl,BYTE PTR [esi]
  4159d3:	sub    DWORD PTR [edi-0x45],edi
  4159d6:	and    ebp,eax
  4159d8:	xor    al,ch
  4159da:	push   ebx
  4159db:	mov    ch,0x1c
  4159dd:	data16 cli 
  4159df:	int    0x2
  4159e1:	or     eax,0x3b8b1e50
  4159e6:	add    ch,BYTE PTR [ebp+esi*4+0x2e1ea365]
  4159ed:	sbb    ah,al
  4159ef:	fisubr WORD PTR [esi-0x1]
  4159f2:	das    
  4159f3:	jno    0x415a72
  4159f5:	(bad)  
  4159f6:	cmp    bh,BYTE PTR [esi]
  4159f8:	retf   0x81e0
  4159fb:	(bad)  
  4159fc:	enter  0x14d6,0xd
  415a00:	and    edi,DWORD PTR [ebp-0x5]
  415a03:	arpl   dx,dx
  415a05:	and    eax,DWORD PTR [ebx-0x14635bcc]
  415a0b:	or     DWORD PTR [esi-0x24],0x8bdc534
  415a12:	cmc    
  415a13:	push   bp
  415a15:	mov    dh,0xb0
  415a17:	xchg   esp,eax
  415a18:	fbld   TBYTE PTR [ecx-0x50e54edd]
  415a1e:	fadd   QWORD PTR [eax+0x3fa32aef]
  415a24:	inc    esi
  415a25:	adc    bl,BYTE PTR [esi]
  415a27:	push   edi
  415a28:	dec    eax
  415a29:	or     BYTE PTR [ecx],ch
  415a2b:	aaa    
  415a2c:	xchg   edi,eax
  415a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a2e:	or     DWORD PTR [ecx-0x37304e4d],eax
  415a34:	dec    esp
  415a35:	xlat   BYTE PTR ds:[ebx]
  415a36:	mov    dl,0x66
  415a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a39:	sub    ch,BYTE PTR [esi+0x7710fea6]
  415a3f:	or     al,0x7d
  415a41:	jns    0x415a22
  415a43:	xor    eax,0xf21b134e
  415a48:	xchg   ch,al
  415a4a:	into   
  415a4b:	shr    BYTE PTR [edi+0x5b8df9d6],0x6f
  415a52:	pop    edx
  415a53:	pop    ss
  415a54:	xchg   edx,eax
  415a55:	ins    DWORD PTR es:[edi],dx
  415a56:	inc    ebx
  415a57:	ss mov bl,0x94
  415a5a:	setle  dh
  415a5d:	xor    al,0x5f
  415a5f:	mov    edx,0x27a87831
  415a64:	(bad)  
  415a65:	inc    DWORD PTR [ecx-0x2c]
  415a68:	inc    esp
  415a69:	inc    ebx
  415a6a:	dec    esi
  415a6b:	es mov dh,0xb3
  415a6e:	inc    eax
  415a6f:	sbb    al,0x7c
  415a71:	std    
  415a72:	call   FWORD PTR [eax-0x37]
  415a75:	mov    al,ds:0xad370600
  415a7a:	movups xmm1,XMMWORD PTR [eax-0x50d4b2cb]
  415a81:	add    DWORD PTR [esi-0x6011c78d],ecx
  415a87:	icebp  
  415a88:	dec    eax
  415a89:	mov    eax,ds:0xe4a1907c
  415a8e:	jl     0x415a8d
  415a90:	push   es
  415a91:	cmp    ecx,DWORD PTR [esi+0x4c]
  415a94:	mov    eax,0x81c5865b
  415a99:	and    DWORD PTR [edi+0x78],ecx
  415a9c:	or     eax,0x7b50f950
  415aa1:	or     BYTE PTR [eax-0x75],al
  415aa4:	fmul   st(2),st
  415aa6:	jb     0x415ae5
  415aa8:	imul   edx,DWORD PTR [edi+0x667f9f4a],0x30
  415aaf:	xor    al,0x3d
  415ab1:	(bad)  
  415ab2:	imul   BYTE PTR [eax+0x23]
  415ab5:	lds    eax,FWORD PTR [ebx-0x1]
  415ab8:	daa    
  415ab9:	adc    al,0x50
  415abb:	xor    al,0xd8
  415abd:	jae    0x415ab5
  415abf:	cwde   
  415ac0:	repz and bl,BYTE PTR [edi+0x4f]
  415ac4:	cdq    
  415ac5:	jb     0x415aab
  415ac7:	xchg   edi,eax
  415ac8:	xlat   BYTE PTR ds:[ebx]
  415ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aca:	and    eax,0x641625e2
  415acf:	mov    edi,0xc6892f9f
  415ad4:	mov    edi,0xb4d9785b
  415ad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ada:	jo     0x415b22
  415adc:	ja     0x415ae5
  415ade:	fcmovne st,st(5)
  415ae0:	shl    esi,cl
  415ae2:	and    ebx,DWORD PTR [eax-0x24]
  415ae5:	pop    esi
  415ae6:	mov    WORD PTR [esi+0x71],es
  415ae9:	test   eax,0x98ae0177
  415aee:	(bad)  
  415aef:	cmc    
  415af0:	mov    eax,0x64f6de3e
  415af5:	stos   BYTE PTR es:[edi],al
  415af6:	cli    
  415af7:	inc    ebx
  415af8:	lods   al,BYTE PTR ds:[esi]
  415af9:	les    esi,FWORD PTR [ebx-0x1b]
  415afc:	lea    ecx,[eax+esi*8-0x33]
  415b00:	pop    esi
  415b01:	sub    al,0xdc
  415b03:	mov    edi,0xc041c8ce
  415b08:	xor    cl,ch
  415b0a:	fnstenv ds:0xeac291fa
  415b10:	fs enter 0x26c8,0x66
  415b15:	imul   ebx,DWORD PTR [edx],0xa4f79047
  415b1b:	scas   al,BYTE PTR es:[edi]
  415b1c:	jp     0x415b3b
  415b1e:	mov    edx,0x8037ab23
  415b23:	int    0x92
  415b25:	stc    
  415b26:	mov    dl,0xe7
  415b28:	les    ebp,FWORD PTR [ebx+ebp*1-0x2efebd14]
  415b2f:	stc    
  415b30:	lods   al,BYTE PTR ds:[esi]
  415b31:	dec    esp
  415b32:	(bad)  
  415b33:	in     al,dx
  415b34:	xor    esi,ecx
  415b36:	pop    edx
  415b37:	jge    0x415b42
  415b39:	or     dl,BYTE PTR ds:0x75b6a274
  415b3f:	xor    BYTE PTR [ebx+0x2e],bh
  415b42:	ret    0x86c
  415b45:	push   ebx
  415b46:	xor    DWORD PTR [edx],ebp
  415b48:	inc    edi
  415b49:	ret    
  415b4a:	popa   
  415b4b:	js     0x415b3d
  415b4d:	jg     0x415b40
  415b4f:	push   ebp
  415b50:	jbe    0x415b9a
  415b52:	lods   al,BYTE PTR ds:[esi]
  415b53:	mov    al,0x70
  415b55:	(bad)  
  415b57:	dec    esp
  415b58:	cmp    edx,edi
  415b5a:	lahf   
  415b5b:	mov    edi,0x9a52c71e
  415b60:	jle    0x415ba1
  415b62:	cli    
  415b63:	xchg   edx,eax
  415b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b65:	push   eax
  415b66:	xchg   esp,eax
  415b67:	rol    DWORD PTR [esi],1
  415b69:	inc    ebx
  415b6a:	mov    esp,0xfbd5898c
  415b6f:	das    
  415b70:	pop    ds
  415b71:	or     ebx,DWORD PTR [edi]
  415b73:	dec    esp
  415b74:	sbb    eax,0x78e1b2c6
  415b79:	lahf   
  415b7a:	das    
  415b7b:	pushf  
  415b7c:	(bad)  
  415b7d:	rol    BYTE PTR [ebp-0x38464716],cl
  415b83:	hlt    
  415b84:	sbb    al,0x60
  415b86:	lds    ebx,FWORD PTR [ecx+0x47]
  415b89:	xlat   BYTE PTR ds:[ebx]
  415b8a:	in     eax,dx
  415b8b:	xchg   edx,eax
  415b8c:	pop    es
  415b8d:	xchg   ebp,eax
  415b8e:	dec    esp
  415b8f:	cs pop ebp
  415b91:	aas    
  415b92:	(bad)  
  415b93:	mov    ah,BYTE PTR [eax+0x4f3c9c51]
  415b99:	fs pop esi
  415b9b:	adc    dl,dl
  415b9d:	sbb    eax,0x59924fab
  415ba2:	stc    
  415ba3:	leave  
  415ba4:	add    DWORD PTR ss:[esi+0x4279fdaa],ebp
  415bab:	(bad)  
  415bac:	dec    edi
  415bad:	cli    
  415bae:	push   ecx
  415baf:	jnp    0x415b68
  415bb1:	jecxz  0x415b4a
  415bb3:	or     al,0xc8
  415bb5:	add    dl,BYTE PTR [ebp-0x6a]
  415bb8:	jnp    0x415b6a
  415bba:	bound  edi,QWORD PTR [eax]
  415bbc:	mov    edx,gs
  415bbe:	pop    ebp
  415bbf:	mov    cl,0x36
  415bc1:	(bad)  
  415bc2:	mov    ebp,0x4987e9bb
  415bc7:	test   BYTE PTR [esi],al
  415bc9:	mov    bl,BYTE PTR [edx-0x658b775f]
  415bcf:	fisub  DWORD PTR [ebp-0x24]
  415bd2:	mov    ebp,0x7d4b19d8
  415bd7:	xchg   ebx,eax
  415bd8:	call   0x8ee0ae63
  415bdd:	inc    edx
  415bde:	push   0x8
  415be0:	jmp    0x4d3051e5
  415be5:	sbb    al,BYTE PTR [ecx]
  415be7:	dec    edi
  415be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be9:	in     al,0x1a
  415beb:	mov    ds,WORD PTR [edi]
  415bed:	inc    eax
  415bee:	inc    eax
  415bef:	mov    bl,0x37
  415bf1:	add    ebp,DWORD PTR [edx]
  415bf3:	dec    ebx
  415bf4:	ja     0x415b83
  415bf6:	call   DWORD PTR ds:0x7bde182f
  415bfc:	push   0xffffffd9
  415bfe:	cmp    DWORD PTR [edi+0x2547354a],ebp
  415c04:	mov    ebx,0x3e14c688
  415c09:	mov    bl,0x57
  415c0b:	or     ebp,ebp
  415c0d:	rcr    BYTE PTR [eax-0x44],1
  415c10:	adc    DWORD PTR [ecx-0x6e5fc1a2],0xe07b9b72
  415c1a:	arpl   WORD PTR [edi-0x5a12a4e],cx
  415c20:	push   esp
  415c21:	leave  
  415c22:	es or  ebp,edi
  415c25:	adc    DWORD PTR [ebx+eiz*4],ecx
  415c28:	int    0x99
  415c2a:	sub    BYTE PTR ds:[eax+0x27],0xeb
  415c2f:	fwait
  415c30:	hlt    
  415c31:	jae    0x415be6
  415c33:	cdq    
  415c34:	sub    DWORD PTR [edi+0x19],ebx
  415c37:	cli    
  415c38:	jl     0x415cb4
  415c3a:	sti    
  415c3b:	call   0xd18a:0x6ca310d4
  415c42:	icebp  
  415c43:	sbb    bh,0x22
  415c46:	dec    ecx
  415c47:	push   ebx
  415c48:	push   ss
  415c49:	pop    eax
  415c4a:	aad    0x1d
  415c4c:	bound  edi,QWORD PTR [eax+0x47]
  415c4f:	call   0x6f28ca5e
  415c54:	jp     0x415c1a
  415c56:	out    0x4,al
  415c58:	pop    ss
  415c59:	daa    
  415c5a:	sbb    BYTE PTR [eax],dl
  415c5c:	popa   
  415c5d:	cli    
  415c5e:	nop
  415c5f:	aaa    
  415c60:	ret    0x4ae1
  415c63:	test   DWORD PTR [esi+0x52],esi
  415c66:	dec    edx
  415c67:	mov    ch,0xc8
  415c69:	ror    BYTE PTR [ebx-0x35305a7f],cl
  415c6f:	imul   edi,DWORD PTR [ebx+edi*4],0xffffffb5
  415c73:	pop    esp
  415c74:	jbe    0x415cd7
  415c76:	mov    ds:0x3cb87d92,al
  415c7b:	lahf   
  415c7c:	add    esi,DWORD PTR [edx+0x5d]
  415c7f:	out    dx,al
  415c80:	and    dl,BYTE PTR [eax+eax*8-0x46]
  415c84:	mov    edi,0x2b343cff
  415c89:	cld    
  415c8a:	stos   BYTE PTR es:[edi],al
  415c8b:	leave  
  415c8c:	movq   mm2,QWORD PTR [edi]
  415c8f:	push   ebx
  415c90:	(bad)  
  415c91:	jmp    0xcb49:0xf545e7b8
  415c98:	pusha  
  415c99:	jo     0x415c4d
  415c9b:	xor    eax,0xbde0ee21
  415ca0:	sahf   
  415ca1:	mov    dh,0xb
  415ca3:	cmc    
  415ca4:	inc    ebx
  415ca5:	push   cs
  415ca6:	sub    esp,DWORD PTR [eax+0x1]
  415ca9:	pop    esi
  415caa:	mov    ecx,0x8f637bd8
  415caf:	ins    DWORD PTR es:[edi],dx
  415cb0:	xor    dl,BYTE PTR [ecx+0x44239397]
  415cb6:	adc    eax,0xb115a302
  415cbb:	lahf   
  415cbc:	sub    eax,0xbefbbf0
  415cc1:	aas    
  415cc2:	lds    eax,FWORD PTR [ebx-0x9ec34dd]
  415cc8:	stos   DWORD PTR es:[edi],eax
  415cc9:	mov    ch,0x48
  415ccb:	sbb    ch,dh
  415ccd:	arpl   WORD PTR [ecx+0x1f],ax
  415cd0:	sbb    bl,BYTE PTR [ebx]
  415cd2:	jecxz  0x415c6e
  415cd4:	add    DWORD PTR [ecx-0x10988a24],edi
  415cda:	inc    eax
  415cdb:	push   edi
  415cdc:	shr    cl,0xce
  415cdf:	dec    edx
  415ce0:	push   ebx
  415ce1:	xchg   BYTE PTR [eax-0xbb990d4],bh
  415ce7:	xchg   edi,eax
  415ce8:	adc    bl,BYTE PTR [ebp+0x50]
  415ceb:	lods   eax,DWORD PTR ds:[esi]
  415cec:	xcrypt-cfb (bad)
  415ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cee:	mov    eax,ds:0x6a1af755
  415cf3:	ja     0x415cf4
  415cf5:	sbb    BYTE PTR [edx],ch
  415cf7:	stos   BYTE PTR es:[edi],al
  415cf8:	mov    WORD PTR [ebx],ss
  415cfa:	loope  0x415d2f
  415cfc:	mov    BYTE PTR [edx-0x2eaa6ca8],ch
  415d02:	fwait
  415d03:	push   cs
  415d04:	mov    edx,0x22ec3156
  415d09:	pop    esp
  415d0a:	jne    0x415d55
  415d0c:	jecxz  0x415d7f
  415d0e:	or     DWORD PTR [ecx],ebx
  415d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d11:	mov    dh,0x2f
  415d13:	call   FWORD PTR [edx]
  415d15:	(bad)  
  415d16:	shr    DWORD PTR [eax-0x19ad0d4b],1
  415d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d1d:	sbb    ecx,DWORD PTR [ecx-0x40405381]
  415d23:	add    eax,0xc5d97f71
  415d28:	xchg   ecx,eax
  415d29:	jg     0x415cf5
  415d2b:	mov    edx,0xbf636e6f
  415d30:	pop    edi
  415d31:	loop   0x415d29
  415d33:	jnp    0x415d0d
  415d35:	fld    DWORD PTR [ecx]
  415d37:	mov    dh,0x74
  415d39:	dec    edx
  415d3a:	push   ebp
  415d3b:	inc    ebx
  415d3c:	cmc    
  415d3d:	ror    DWORD PTR [edx+0x210194b2],cl
  415d43:	cld    
  415d44:	(bad)  
  415d46:	push   eax
  415d47:	rcr    BYTE PTR [edi+0x65],cl
  415d4a:	out    0x2,eax
  415d4c:	or     dl,0xa7
  415d4f:	or     DWORD PTR [esi],edi
  415d51:	mov    eax,ds:0x5f366b80
  415d56:	xlat   BYTE PTR ds:[ebx]
  415d57:	pop    ebp
  415d58:	and    BYTE PTR [edi-0x1b218af5],al
  415d5e:	pop    ebx
  415d5f:	inc    ebx
  415d60:	inc    edi
  415d61:	jg     0x415d93
  415d63:	xchg   ebx,eax
  415d64:	test   DWORD PTR [ecx],edx
  415d66:	mov    ah,0xd0
  415d68:	push   esi
  415d69:	outs   dx,DWORD PTR ds:[esi]
  415d6a:	cmp    ah,BYTE PTR [ecx]
  415d6c:	adc    al,BYTE PTR [ecx+esi*1-0x2d]
  415d70:	adc    ebp,esp
  415d72:	std    
  415d73:	stc    
  415d74:	stos   BYTE PTR es:[edi],al
  415d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d76:	popf   
  415d77:	mov    edi,0xadbd0060
  415d7c:	adc    BYTE PTR [edx-0x7d],dh
  415d7f:	imul   esp,DWORD PTR [ecx+0x2e],0xffffffa0
  415d83:	stos   DWORD PTR es:[edi],eax
  415d84:	or     bl,ch
  415d86:	int    0x6d
  415d88:	sbb    BYTE PTR [eax+0x1a],bl
  415d8b:	fst    DWORD PTR [edi+0x565b7642]
  415d91:	lods   ax,WORD PTR ds:[esi]
  415d93:	lea    esp,[esi]
  415d95:	rol    BYTE PTR [ecx+0x5a9c2b68],cl
  415d9b:	das    
  415d9c:	sub    eax,edx
  415d9e:	fdivr  st,st(0)
  415da0:	iret   
  415da1:	sub    eax,0xdc779e58
  415da6:	jmp    0x415da6
  415da8:	xor    ah,bl
  415daa:	dec    edi
  415dab:	sahf   
  415dac:	cmp    eax,0x933a3629
  415db1:	jle    0x415d5b
  415db3:	int    0x43
  415db5:	or     ecx,ebp
  415db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db8:	pop    esi
  415db9:	and    eax,0x8302d365
  415dbe:	sahf   
  415dbf:	out    0x80,eax
  415dc1:	sub    eax,0x36147fea
  415dc6:	outs   dx,BYTE PTR ds:[esi]
  415dc7:	and    DWORD PTR [esi+0x2e16e46a],ecx
  415dcd:	mov    eax,ds:0x6f8c72eb
  415dd2:	fdivr  QWORD PTR [esi-0x5f]
  415dd5:	int3   
  415dd6:	add    DWORD PTR [edi+0x7c677fd8],edi
  415ddc:	ror    eax,cl
  415dde:	add    eax,0x48b67c74
  415de3:	cmp    DWORD PTR [edi],edx
  415de5:	call   0xb462e2ad
  415dea:	fisttp QWORD PTR [ebp+0x6f]
  415ded:	repz push ebx
  415def:	push   ebp
  415df0:	ss jmp 0x7415:0xc127fa38
  415df8:	mov    fs,WORD PTR [ecx+0x6d8c2cb9]
  415dfe:	adc    BYTE PTR [edi-0x5a],ch
  415e01:	add    esp,ebx
  415e03:	and    al,0x9b
  415e05:	ja     0x415e40
  415e07:	call   0x9b30:0xc950615
  415e0e:	lock xchg edx,eax
  415e10:	ins    BYTE PTR es:[edi],dx
  415e11:	jmp    0xfafa:0x56df5d15
  415e18:	mov    edx,0xa6e16f2f
  415e1d:	arpl   WORD PTR [ebx-0xdd65984],cx
  415e23:	lods   eax,DWORD PTR ds:[esi]
  415e24:	std    
  415e25:	imul   ebx,DWORD PTR [ebp+0x3615e16c],0xffffffab
  415e2c:	test   BYTE PTR [eax],bl
  415e2e:	add    edx,DWORD PTR [esi+esi*4-0xb]
  415e32:	iret   
  415e33:	jmp    0x23ee:0x61eb6438
  415e3a:	mov    esp,0x7e7da5ab
  415e3f:	mov    ecx,0xeb34b980
  415e44:	(bad)  
  415e45:	cmc    
  415e46:	daa    
  415e47:	pop    ebp
  415e48:	dec    ebp
  415e49:	repnz adc dh,bl
  415e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e4d:	mov    dh,0x49
  415e4f:	mov    cs:0xaa1e07d4,al
  415e55:	scas   eax,DWORD PTR es:[edi]
  415e56:	punpcklbw mm2,DWORD PTR [ecx]
  415e59:	je     0x415e41
  415e5b:	and    DWORD PTR [eax],eax
  415e5d:	and    eax,eax
  415e5f:	loope  0x415e0d
  415e61:	jno    0x415ed5
  415e63:	scas   al,BYTE PTR es:[edi]
  415e64:	or     BYTE PTR [edx+0x78],al
  415e67:	inc    edx
  415e68:	lock popa 
  415e6a:	push   ebx
  415e6b:	test   eax,0xc8c6de84
  415e70:	dec    eax
  415e71:	rol    BYTE PTR [edi-0x7a60106a],0x2
  415e78:	inc    eax
  415e79:	sbb    BYTE PTR [edx],bh
  415e7b:	pushf  
  415e7c:	pushf  
  415e7d:	xchg   ebp,eax
  415e7f:	push   ebp
  415e80:	inc    ecx
  415e81:	adc    DWORD PTR [eax+esi*8-0x493c0506],edx
  415e88:	add    al,0xf6
  415e8a:	dec    edx
  415e8b:	mov    dh,0xed
  415e8d:	push   cs
  415e8e:	aas    
  415e8f:	fs mov cl,0xd7
  415e92:	gs aaa 
  415e94:	jmp    0xa33:0xf782e77d
  415e9b:	cmp    eax,0x17f4d003
  415ea0:	push   esi
  415ea1:	fs ret 
  415ea3:	aaa    
  415ea4:	mov    DWORD PTR [edi+0x55425a3e],edi
  415eaa:	mov    ebx,0x2c32651b
  415eaf:	mov    eax,ds:0x9b60613b
  415eb4:	and    esi,DWORD PTR [esi]
  415eb6:	and    al,0x2b
  415eb8:	clc    
  415eb9:	shl    al,1
  415ebb:	cmp    al,0x19
  415ebd:	fcom   DWORD PTR [ebx]
  415ebf:	mov    al,0x9b
  415ec1:	inc    esi
  415ec2:	(bad)  
  415ec3:	sub    edi,DWORD PTR [edi-0x2c53c720]
  415ec9:	sti    
  415eca:	(bad)  
  415ecb:	sbb    DWORD PTR [edi],esi
  415ecd:	push   edx
  415ece:	or     eax,0xba173792
  415ed3:	xor    ecx,esi
  415ed5:	popa   
  415ed6:	mov    esi,0xc72b0ff5
  415edb:	pushf  
  415edc:	repz adc ebp,DWORD PTR ds:0x31548262
  415ee3:	dec    eax
  415ee4:	and    cl,BYTE PTR [eax]
  415ee6:	repz and al,0xee
  415ee9:	sbb    al,BYTE PTR [esi+ecx*1+0x13b14b81]
  415ef0:	not    BYTE PTR [edx-0x69]
  415ef3:	sahf   
  415ef4:	mov    cl,0x4a
  415ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef7:	lock addr16 aaa 
  415efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415efb:	out    dx,al
  415efc:	inc    ecx
  415efd:	jbe    0x415e9f
  415eff:	cmp    eax,0x942773b7
  415f04:	jecxz  0x415f40
  415f06:	leave  
  415f07:	lahf   
  415f08:	push   esi
  415f09:	push   edi
  415f0a:	jae    0x415ea9
  415f0c:	inc    edi
  415f0d:	inc    esi
  415f0e:	cs das 
  415f10:	mov    DWORD PTR [edx-0x56b5a71c],esi
  415f16:	push   ebp
  415f17:	adc    al,0x4
  415f19:	adc    eax,0x400d60af
  415f1e:	fwait
  415f1f:	inc    edx
  415f20:	test   cl,bl
  415f22:	iret   
  415f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f24:	out    dx,al
  415f25:	sbb    al,0x86
  415f27:	dec    eax
  415f28:	pop    edx
  415f29:	idiv   ecx
  415f2b:	adc    eax,0x34ec2090
  415f30:	lods   al,BYTE PTR ds:[esi]
  415f31:	inc    edi
  415f32:	dec    ebx
  415f33:	(bad)  
  415f34:	cmp    al,0xb4
  415f36:	fdivp  st(5),st
  415f38:	jecxz  0x415f45
  415f3a:	repz jmp 0x1553:0xf3b665f7
  415f42:	mov    ecx,0x2dc07bfc
  415f47:	in     eax,dx
  415f48:	rcr    esp,cl
  415f4a:	or     al,0x21
  415f4c:	and    ch,dl
  415f4e:	adc    dl,BYTE PTR [edx+0x3]
  415f51:	adc    DWORD PTR [edi+0xf],eax
  415f54:	or     BYTE PTR ds:0x9e2ab1f,dh
  415f5a:	inc    esp
  415f5b:	mov    ebp,DWORD PTR [esi]
  415f5d:	dec    esp
  415f5e:	test   BYTE PTR [edx-0x2b],0xec
  415f62:	jne    0x415fd2
  415f64:	add    DWORD PTR [esi+esi*8+0x67],ebx
  415f68:	je     0x415f17
  415f6a:	loope  0x415fcf
  415f6c:	mov    ds:0x2fee296,eax
  415f71:	int3   
  415f72:	and    al,0x4a
  415f74:	inc    edi
  415f75:	push   edi
  415f76:	mov    al,ds:0x5c2c2a42
  415f7b:	pop    esi
  415f7c:	outs   dx,DWORD PTR ds:[esi]
  415f7d:	xchg   edi,eax
  415f7e:	inc    ebx
  415f7f:	or     BYTE PTR [eax-0x5e],al
  415f82:	popa   
  415f83:	push   esi
  415f84:	inc    edi
  415f85:	push   ss
  415f86:	out    0x5a,eax
  415f88:	into   
  415f89:	push   edx
  415f8a:	sbb    DWORD PTR [edx+0x5882e080],edx
  415f90:	cmp    DWORD PTR [ebx-0x4d],ebp
  415f93:	out    0xe4,eax
  415f95:	(bad)  [esi-0xe]
  415f98:	pop    es
  415f99:	test   eax,0x917d2594
  415f9e:	push   eax
  415f9f:	xor    esp,DWORD PTR [esi-0x30120b36]
  415fa5:	hlt    
  415fa6:	sbb    eax,edi
  415fa8:	std    
  415fa9:	les    ebp,FWORD PTR [ebx]
  415fab:	adc    BYTE PTR [edx-0x71],dh
  415fae:	in     eax,0x3a
  415fb0:	das    
  415fb1:	retf   
  415fb2:	inc    ebp
  415fb3:	ds xchg ebp,eax
  415fb5:	and    BYTE PTR [edx],bh
  415fb7:	inc    esp
  415fb8:	sbb    BYTE PTR [eax-0x5ff58edb],bh
  415fbe:	ret    0x8710
  415fc1:	mov    bl,0xaa
  415fc3:	into   
  415fc4:	fiadd  WORD PTR [edx-0x4129ab1b]
  415fca:	push   ss
  415fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fcc:	xlat   BYTE PTR ds:[ebx]
  415fcd:	adc    DWORD PTR [ebx],ebx
  415fcf:	iret   
  415fd0:	hlt    
  415fd1:	jp     0x415fca
  415fd3:	in     eax,dx
  415fd4:	clc    
  415fd5:	fisttp QWORD PTR [esi]
  415fd7:	fcmovu st,st(7)
  415fd9:	or     edx,0xffffffd4
  415fdc:	aam    0x69
  415fde:	cdq    
  415fdf:	adc    ecx,DWORD PTR [edx+0x2d]
  415fe2:	cmc    
  415fe3:	mov    ds:0xbe3172ae,al
  415fe8:	xchg   DWORD PTR [edi],edx
  415fea:	ret    0xcb73
  415fed:	dec    ecx
  415fee:	jl     0x415f89
  415ff0:	call   0x77e1e20b
  415ff5:	jle    0x415f98
  415ff7:	aam    0xb3
  415ff9:	loope  0x415f93
  415ffb:	retf   0xb001
  415ffe:	aas    
  415fff:	ja     0x416036
  416001:	(bad)  
  416002:	mov    ebx,0x44022238
  416007:	or     eax,0x3dfdfd57
  41600c:	outs   dx,BYTE PTR ds:[esi]
  41600d:	cmp    ah,cl
  41600f:	test   ch,cl
  416011:	int3   
  416012:	and    BYTE PTR [edi+0x6d],cl
  416015:	mov    BYTE PTR [edi-0x40dc7c85],ah
  41601b:	dec    esi
  41601c:	test   al,0x81
  41601e:	out    0xeb,al
  416020:	(bad)  
  416021:	mov    ds:0x6c711576,eax
  416026:	iret   
  416027:	call   0x9dfecf2a
  41602c:	cmc    
  41602d:	ds popf 
  41602f:	and    esp,edi
  416031:	mov    edx,0x68682c24
  416036:	mov    esp,0x37b0a16f
  41603b:	cmp    bl,dh
  41603d:	sbb    BYTE PTR [ebx],dh
  41603f:	hlt    
  416040:	xor    BYTE PTR [edx],0x9
  416043:	xchg   esi,eax
  416044:	or     eax,0xe58efc02
  416049:	sahf   
  41604a:	mov    ds:0xa04a038,al
  41604f:	sahf   
  416050:	jecxz  0x416077
  416052:	repz mov ch,0xf7
  416055:	loopne 0x416014
  416057:	pop    ecx
  416058:	mov    eax,esp
  41605a:	(bad)  
  41605b:	cmp    ecx,ebp
  41605d:	call   0xc4f0:0xc9d1d2b9
  416064:	int3   
  416065:	jb     0x416095
  416067:	callw  0x2b58
  41606b:	out    0xc3,eax
  41606d:	cmp    ebx,DWORD PTR ds:0xf8bc8217
  416073:	(bad)  
  416074:	in     eax,dx
  416075:	das    
  416076:	add    DWORD PTR [esp+edi*8+0x62c109e5],eax
  41607d:	cmp    ecx,DWORD PTR [ebp-0x25b6879f]
  416083:	test   eax,0x2ed97edc
  416089:	add    DWORD PTR [ecx],ebp
  41608b:	add    cl,ch
  41608d:	and    BYTE PTR ds:0x692d80a2,0xf1
  416094:	lods   al,BYTE PTR ds:[esi]
  416095:	adc    bl,BYTE PTR [ecx]
  416097:	retf   0x4db5
  41609a:	dec    esi
  41609b:	mov    ?,WORD PTR [edi+0x75]
  41609e:	mov    ch,ah
  4160a0:	push   0xffffffef
  4160a2:	mov    edx,0x8100cd11
  4160a7:	fwait
  4160a8:	lods   eax,DWORD PTR ds:[esi]
  4160a9:	or     DWORD PTR [edx-0x3],esi
  4160ac:	stos   BYTE PTR es:[edi],al
  4160ad:	jnp    0x4160de
  4160af:	mov    DWORD PTR [edx+0x7ba8698b],ecx
  4160b5:	xchg   edx,eax
  4160b6:	out    dx,al
  4160b7:	xchg   esi,eax
  4160b8:	mov    al,ds:0x3360349b
  4160bd:	pop    ecx
  4160be:	imul   esp,ecx,0x3d9f0860
  4160c4:	push   eax
  4160c5:	loope  0x4160fa
  4160c7:	fadd   DWORD PTR [edi-0x4c]
  4160ca:	je     0x4160e3
  4160cc:	cmp    ch,BYTE PTR [edi]
  4160ce:	loop   0x4160f4
  4160d0:	cli    
  4160d1:	mov    ebp,0xc46c3724
  4160d6:	(bad)  
  4160d7:	or     ah,BYTE PTR [edi]
  4160d9:	cmp    al,0xe3
  4160db:	or     al,0xdf
  4160dd:	gs jno 0x416137
  4160e0:	pop    es
  4160e1:	repnz add eax,0xecc068ea
  4160e7:	mov    bl,0x3
  4160e9:	hlt    
  4160ea:	adc    al,0xa6
  4160ec:	loope  0x41615d
  4160ee:	fs sahf 
  4160f0:	fistp  DWORD PTR [edi]
  4160f2:	(bad)  
  4160f3:	pusha  
  4160f4:	pop    es
  4160f5:	mov    ebp,0x92c9a3f1
  4160fa:	xor    al,0xf8
  4160fc:	aad    0x2a
  4160fe:	imul   edx,DWORD PTR [edx],0x68
  416101:	out    0x6d,eax
  416103:	jb     0x41608c
  416105:	fadd   DWORD PTR [ebp+0x8]
  416108:	sbb    DWORD PTR [edx-0x5e0bfeba],esp
  41610e:	pusha  
  41610f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416110:	loop   0x416146
  416112:	sahf   
  416113:	in     al,0x9a
  416115:	xor    BYTE PTR [ebx],0xb3
  416118:	adc    DWORD PTR ds:0x576dfc27,ebx
  41611e:	js     0x4160dc
  416120:	add    eax,0xa9254a94
  416125:	rcl    DWORD PTR ds:0xe5e20775,1
  41612b:	xchg   edi,eax
  41612c:	dec    ebx
  41612d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41612e:	pop    ebx
  41612f:	jns    0x416152
  416131:	gs mov ch,0xb4
  416134:	aas    
  416135:	punpckldq mm0,DWORD PTR [ebx+0x6ea99412]
  41613c:	inc    edx
  41613d:	xor    eax,0x11f2c5a8
  416142:	mov    bl,0xb4
  416144:	pop    ds
  416145:	xchg   esp,eax
  416146:	xchg   esi,eax
  416147:	daa    
  416148:	push   ebx
  416149:	cdq    
  41614a:	into   
  41614b:	sbb    bh,BYTE PTR [ebx]
  41614d:	push   ss
  41614e:	lods   eax,DWORD PTR ds:[esi]
  41614f:	push   ds
  416150:	popa   
  416151:	loope  0x416129
  416153:	adc    ebp,DWORD PTR [esi]
  416155:	adc    al,0x2e
  416157:	or     ecx,edx
  416159:	arpl   WORD PTR [esi+ecx*1-0x53e0ac07],dx
  416160:	mov    edx,0x7ad2425
  416165:	adc    BYTE PTR [edi+0x7f],0x5
  416169:	xor    esp,edx
  41616b:	inc    ecx
  41616c:	imul   ebx,eax,0x62
  41616f:	jmp    0x4c97eb88
  416174:	mov    cl,BYTE PTR [edx+0x7aa29bc4]
  41617a:	cmp    al,0x8f
  41617c:	int3   
  41617d:	pusha  
  41617e:	shl    BYTE PTR [ebp-0x54],cl
  416181:	pop    ss
  416182:	das    
  416183:	jecxz  0x4161ed
  416185:	mov    eax,ds:0x75a17cfd
  41618a:	and    dh,BYTE PTR [edx+0x8]
  41618d:	out    dx,al
  41618e:	lods   eax,DWORD PTR ds:[esi]
  41618f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416190:	mov    gs,ebx
  416192:	sub    BYTE PTR [edx-0x6482a491],0x69
  416199:	or     DWORD PTR [ecx],0xe4d585c2
  41619f:	pop    ds
  4161a0:	shl    DWORD PTR [ebp+ecx*4-0x4b],1
  4161a4:	or     DWORD PTR [eax+0x25def782],eax
  4161aa:	cs ins DWORD PTR es:[edi],dx
  4161ac:	lods   al,BYTE PTR ds:[esi]
  4161ad:	push   cs
  4161ae:	mov    esp,0x6fbfc8a1
  4161b3:	xor    ah,BYTE PTR [edi+0x77c26e1f]
  4161b9:	push   esp
  4161ba:	ror    eax,0x90
  4161bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161be:	mov    edi,esp
  4161c0:	scas   eax,DWORD PTR es:[edi]
  4161c1:	mov    bh,0xb8
  4161c3:	pop    ss
  4161c4:	inc    ecx
  4161c5:	scas   eax,DWORD PTR es:[edi]
  4161c6:	std    
  4161c7:	scas   al,BYTE PTR es:[edi]
  4161c8:	sar    BYTE PTR [ecx],1
  4161ca:	adc    bl,BYTE PTR [edi+0x5d]
  4161cd:	dec    ebx
  4161ce:	xchg   ebx,eax
  4161cf:	and    dl,BYTE PTR [edx]
  4161d1:	fistp  QWORD PTR [edi+0x39]
  4161d4:	add    BYTE PTR [edx-0x472050dd],ch
  4161da:	and    al,0x65
  4161dc:	out    dx,eax
  4161dd:	jmp    0xe5ae4084
  4161e2:	xchg   esi,eax
  4161e3:	inc    ebp
  4161e4:	test   al,0xdb
  4161e6:	(bad)  
  4161e7:	scas   al,BYTE PTR es:[edi]
  4161e8:	sbb    eax,0xe203ab47
  4161ed:	push   cs
  4161ee:	push   edi
  4161ef:	(bad)  
  4161f0:	cmp    eax,0x3269764e
  4161f5:	not    BYTE PTR [edi+0x30]
  4161f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161f9:	addr16 clc 
  4161fb:	push   edi
  4161fc:	popf   
  4161fd:	xor    al,0xc8
  4161ff:	ret    0x8953
  416202:	adc    DWORD PTR [edx-0x767545e2],0xffffffe4
  416209:	iret   
  41620a:	out    dx,al
  41620b:	lahf   
  41620c:	mov    dl,0xb8
  41620e:	inc    edx
  41620f:	push   esp
  416210:	xor    al,0x21
  416212:	test   eax,0xfa94fce
  416217:	sub    BYTE PTR [eax+0x66],bl
  41621a:	sbb    BYTE PTR [ecx-0x53fd3539],0x2a
  416221:	das    
  416222:	rcl    DWORD PTR [edx-0x64b28070],cl
  416228:	cmp    dh,BYTE PTR [edx+0x2b]
  41622b:	loope  0x416279
  41622d:	mov    ecx,0xb2faf58b
  416232:	stos   DWORD PTR es:[edi],eax
  416233:	xor    BYTE PTR ds:0xb8a696b5,0x92
  41623a:	push   eax
  41623b:	cmovl  edx,DWORD PTR [edi-0x1f]
  41623f:	mov    ch,dl
  416241:	fnstsw WORD PTR [edx+eax*2-0x64]
  416245:	inc    ecx
  416246:	(bad)  
  416247:	and    edx,DWORD PTR [eax]
  416249:	cwde   
  41624a:	mov    ds:0xb6c2004c,al
  41624f:	shr    DWORD PTR [eiz*2-0x3464cd6e],cl
  416256:	inc    edx
  416257:	mov    eax,0x6898b7bd
  41625c:	mov    esi,0xbce59b7c
  416261:	or     eax,ebx
  416263:	fistp  DWORD PTR [eax+esi*4-0x1f]
  416267:	fisubr WORD PTR [edx]
  416269:	xor    eax,0x6bb106cf
  41626e:	jmp    0x41624e
  416270:	mov    al,0x3e
  416272:	fldenv [edi-0x79]
  416275:	xlat   BYTE PTR ds:[ebx]
  416276:	add    ch,BYTE PTR [ebx+ebp*2-0x33]
  41627a:	pusha  
  41627b:	mov    ebp,0x10a37a5d
  416280:	fdiv   QWORD PTR [edi+0x0]
  416283:	mov    edx,0x3edb140c
  416288:	sub    esi,DWORD PTR [esi+eiz*1-0x60]
  41628c:	xchg   ecx,eax
  41628d:	dec    ebx
  41628e:	ret    
  41628f:	cmp    al,0xa4
  416291:	jg     0x4162ac
  416293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416294:	inc    ecx
  416295:	xchg   ebp,eax
  416296:	mov    dh,0xf1
  416298:	push   0xfe76363d
  41629d:	mov    BYTE PTR [ebx+0x7f],bl
  4162a0:	dec    ebx
  4162a1:	xor    BYTE PTR [ecx],bh
  4162a3:	into   
  4162a4:	xchg   BYTE PTR [eax-0x8a02c47],bh
  4162aa:	mov    al,ds:0x2df7c116
  4162af:	mov    bh,0x29
  4162b1:	lea    esi,[ebp+0x6fcf53ba]
  4162b7:	jl     0x4162e1
  4162b9:	idiv   BYTE PTR [ecx-0x77]
  4162bc:	shl    cl,cl
  4162be:	dec    eax
  4162bf:	test   BYTE PTR [esi],al
  4162c1:	mov    ah,0xaa
  4162c3:	cmp    BYTE PTR [ebx],dl
  4162c5:	and    cl,BYTE PTR [ebx+0x461fa35]
  4162cb:	cs clc 
  4162cd:	test   DWORD PTR [ebx+0x2b],ecx
  4162d0:	and    bl,0x54
  4162d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162d4:	fs sub eax,0x272ace05
  4162da:	aam    0xdc
  4162dc:	in     al,dx
  4162dd:	int3   
  4162de:	push   edi
  4162df:	xchg   esi,eax
  4162e0:	xor    eax,0xfb9f119d
  4162e5:	mov    edi,0xb750883c
  4162ea:	adc    al,0xd9
  4162ec:	jo     0x4162fc
  4162ee:	inc    ebx
  4162ef:	add    DWORD PTR [ebx+ebp*4+0x28948217],ecx
  4162f6:	add    DWORD PTR [ecx],esp
  4162f8:	jns    0x41627c
  4162fa:	xor    eax,0x48b96ab8
  4162ff:	cmp    al,0xe
  416301:	das    
  416302:	ins    BYTE PTR es:[edi],dx
  416303:	idiv   BYTE PTR ds:0x79981d8a
  416309:	outs   dx,BYTE PTR ds:[esi]
  41630a:	test   DWORD PTR [ecx],esi
  41630c:	ror    DWORD PTR [esi+0x48],1
  41630f:	(bad)  
  416310:	retf   0x759a
  416313:	xor    ebx,ecx
  416315:	jno    0x4162e9
  416317:	pop    ebp
  416318:	fnstenv [eax+0x58]
  41631b:	jp     0x416320
  41631d:	xchg   edx,eax
  41631e:	add    ah,cl
  416320:	js     0x416324
  416322:	popf   
  416323:	(bad)  
  416324:	div    DWORD PTR es:[ecx]
  416327:	ins    DWORD PTR es:[edi],dx
  416328:	push   ss
  416329:	jle    0x41633d
  41632b:	aas    
  41632c:	sub    ah,BYTE PTR [edi+0x3e]
  41632f:	ficomp WORD PTR [esi-0x18]
  416332:	bound  ebp,QWORD PTR [edi-0x6ca84179]
  416338:	sahf   
  416339:	scas   eax,DWORD PTR es:[edi]
  41633a:	mov    cl,0xf5
  41633c:	(bad)  
  41633d:	out    0x95,al
  41633f:	jp     0x416354
  416341:	cmp    DWORD PTR [ebx],ebp
  416343:	or     esp,esi
  416345:	out    0x79,eax
  416347:	call   0x4e29:0xbec64a13
  41634e:	dec    edx
  41634f:	test   al,0xf3
  416351:	and    al,0x44
  416353:	jo     0x416363
  416355:	repz push edi
  416357:	(bad)  
  416358:	out    0xc,al
  41635a:	jmp    0x41631b
  41635c:	lods   eax,DWORD PTR ds:[esi]
  41635d:	xchg   BYTE PTR [eax+0x3f],dh
  416360:	out    dx,al
  416361:	add    al,0x7c
  416363:	pop    ss
  416364:	adc    ebp,DWORD PTR [edx-0x71]
  416367:	dec    edx
  416368:	pop    edi
  416369:	pop    ecx
  41636a:	sbb    bh,BYTE PTR [ebp+0x6fb22e7c]
  416370:	pop    esi
  416371:	xor    eax,edi
  416373:	push   es
  416374:	(bad)  
  416375:	fidivr DWORD PTR [eax+0x3b3e4bd0]
  41637b:	imul   edx,DWORD PTR [edx-0x29b561db],0x7308e350
  416385:	pop    ebx
  416386:	cld    
  416387:	sbb    eax,0x4e69c7e5
  41638c:	daa    
  41638d:	aas    
  41638e:	int    0xf4
  416390:	push   esi
  416391:	(bad)  
  416392:	or     al,0x4
  416394:	sub    eax,0x82c532a
  416399:	dec    ebx
  41639a:	jns    0x4163ad
  41639c:	bound  ecx,QWORD PTR [ebx-0x2df0c96d]
  4163a2:	out    0xee,al
  4163a4:	push   0xbb4db186
  4163a9:	popf   
  4163aa:	int3   
  4163ab:	test   al,0x61
  4163ad:	pop    ss
  4163ae:	xor    al,0x5f
  4163b0:	scas   al,BYTE PTR es:[edi]
  4163b1:	mov    ebp,0x71830cea
  4163b6:	sbb    eax,0x4aa9404f
  4163bb:	mov    bl,0x8b
  4163bd:	ss in  eax,0x93
  4163c0:	add    al,0x53
  4163c3:	and    bl,BYTE PTR [eax-0x6b]
  4163c6:	jmp    0x41638f
  4163c8:	dec    esp
  4163c9:	into   
  4163ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163cb:	mov    ebx,0xb4c5ce0c
  4163d0:	ret    0xce81
  4163d3:	xchg   ecx,eax
  4163d4:	aad    0x5a
  4163d6:	or     eax,DWORD PTR [eax+0x7d]
  4163d9:	call   0x57c0:0x7407b2fe
  4163e0:	jmp    0x4163f4
  4163e2:	jp     0x4163fc
  4163e4:	(bad)  [ebp+0x655f0fc0]
  4163ea:	les    eax,FWORD PTR [eax+0x64ebc7c7]
  4163f0:	bound  edi,QWORD PTR [edx+0x523ec886]
  4163f6:	pop    eax
  4163f7:	nop
  4163f8:	xchg   edx,eax
  4163f9:	outs   dx,DWORD PTR ds:[esi]
  4163fa:	fstp   QWORD PTR [edx-0x53]
  4163fd:	in     eax,0xc2
  4163ff:	out    dx,al
  416400:	inc    eax
  416401:	xchg   ebp,eax
  416402:	cdq    
  416403:	push   cs
  416404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416405:	cwde   
  416406:	xor    DWORD PTR [ebx+0x4ba4593c],eax
  41640c:	clc    
  41640d:	push   esi
  41640e:	inc    edx
  41640f:	jp     0x4163df
  416411:	pop    esi
  416412:	mov    bh,0xaf
  416414:	aad    0xd8
  416416:	ret    0x6b53
  416419:	or     eax,0x9cad7561
  41641e:	xchg   BYTE PTR [eax+0x6c],cl
  416421:	adc    dl,bl
  416423:	push   cs
  416424:	push   ebx
  416425:	cmp    DWORD PTR ds:0x8cd5937f,edi
  41642b:	or     eax,0xe0eff26d
  416430:	cmc    
  416431:	sub    BYTE PTR [ecx-0x72],cl
  416434:	cmp    edi,DWORD PTR [esp+edi*4+0x48]
  416438:	pop    DWORD PTR [ebx]
  41643a:	outs   dx,BYTE PTR ds:[esi]
  41643b:	scas   al,BYTE PTR es:[edi]
  41643c:	jno    0x4163ca
  41643e:	shr    DWORD PTR [ecx+0x42af6e94],1
  416444:	(bad)  
  416446:	loope  0x416491
  416448:	jo     0x4164ac
  41644a:	shr    BYTE PTR [ecx-0x18],1
  41644d:	pop    es
  41644e:	mov    ds,WORD PTR [ecx+0x3591a6e2]
  416454:	test   al,0x27
  416456:	jne    0x416457
  416458:	cdq    
  416459:	jmp    0x8dda:0xd2a8ddc8
  416460:	xchg   esi,eax
  416461:	jno    0x416448
  416463:	and    DWORD PTR [ecx],ecx
  416465:	xchg   ebp,eax
  416466:	loopne 0x416484
  416468:	jle    0x41642b
  41646a:	std    
  41646b:	cli    
  41646c:	cli    
  41646d:	xor    BYTE PTR [edi],0x35
  416470:	add    al,0xfb
  416472:	cmp    bh,BYTE PTR [ebp+0x2a01a3d9]
  416478:	std    
  416479:	cli    
  41647a:	(bad)  
  41647b:	jo     0x4164a7
  41647d:	clc    
  41647e:	sbb    eax,esi
  416480:	mov    ah,0x70
  416482:	mov    al,ds:0xcd0f50a1
  416487:	xor    eax,0x3b2bebf1
  41648c:	ss cs je 0x41649e
  416490:	or     BYTE PTR [edi-0x359bf8d9],bh
  416496:	jb     0x41650e
  416498:	add    BYTE PTR [edx-0x1e],ah
  41649b:	push   cs
  41649c:	mov    edi,0x1b591872
  4164a1:	cmp    dh,BYTE PTR [edx-0x79c7c292]
  4164a7:	push   es
  4164a8:	leave  
  4164a9:	sbb    al,0xd4
  4164ab:	cdq    
  4164ac:	xor    bl,cl
  4164ae:	fucomp st(7)
  4164b0:	test   BYTE PTR [edi],ah
  4164b2:	scas   al,BYTE PTR es:[edi]
  4164b3:	pop    edx
  4164b4:	mov    ds:0x6875f0dd,eax
  4164b9:	and    ebx,DWORD PTR [eax+0x6c]
  4164bc:	mov    eax,ds:0x962b7115
  4164c1:	push   ss
  4164c2:	inc    edi
  4164c3:	mov    fs,WORD PTR ds:0x6f14025d
  4164c9:	and    eax,ebx
  4164cb:	lods   al,BYTE PTR ds:[esi]
  4164cc:	or     eax,0x33e4932a
  4164d1:	adc    ebx,esi
  4164d3:	das    
  4164d4:	jle    0x416461
  4164d6:	mov    ch,0xcb
  4164d8:	ds cmp edi,0xffffffe1
  4164dc:	mov    ds,WORD PTR [esi-0x11f61e8]
  4164e2:	loop   0x4164af
  4164e4:	xchg   esp,eax
  4164e5:	push   ebx
  4164e6:	cmp    eax,0xee2ce43c
  4164eb:	enter  0x5892,0xd9
  4164ef:	adc    bh,ah
  4164f1:	retf   0xb699
  4164f4:	xchg   ebx,eax
  4164f5:	mov    esi,0x503bdf0b
  4164fa:	pop    esi
  4164fb:	cmp    edx,eax
  4164fd:	ds jb  0x41649a
  416500:	sub    eax,0x7da41ad3
  416505:	and    BYTE PTR [ebx+0x8],ch
  416508:	dec    edx
  416509:	rcl    DWORD PTR [ebx+0x54],cl
  41650c:	cdq    
  41650d:	jbe    0x4164b9
  41650f:	out    0x7d,eax
  416511:	xor    BYTE PTR [ebx+0x5f],0x77
  416515:	popf   
  416516:	or     ax,0x292d
  41651a:	inc    eax
  41651b:	loop   0x416590
  41651d:	(bad)  
  41651e:	daa    
  41651f:	fimul  WORD PTR [edi+0x756eb387]
  416525:	loopne 0x416595
  416527:	pop    edx
  416528:	xlat   BYTE PTR ds:[ebx]
  416529:	aaa    
  41652a:	inc    eax
  41652b:	push   eax
  41652c:	mov    al,ds:0x536a95df
  416531:	add    ecx,DWORD PTR [edi+eax*4+0x36]
  416535:	(bad)  
  416536:	mov    dl,dl
  416538:	loope  0x416518
  41653a:	pop    edi
  41653b:	pop    ecx
  41653c:	jp     0x41659e
  41653e:	test   al,0xbd
  416540:	fdivr  st(7),st
  416542:	test   al,0x60
  416544:	test   BYTE PTR [esi-0x141d2df2],bh
  41654a:	and    BYTE PTR [edi+0x62f3e66a],cl
  416550:	mov    dl,0x3d
  416552:	inc    esi
  416553:	xor    eax,edx
  416555:	jp     0x4165be
  416557:	mov    dl,0x83
  416559:	mov    ecx,0xa3ac1d8e
  41655e:	jl     0x41655b
  416560:	and    BYTE PTR [edx+0x7a],al
  416563:	outs   dx,BYTE PTR ds:[esi]
  416564:	icebp  
  416565:	jmp    0x6423:0xa7ed2f9f
  41656c:	inc    esi
  41656d:	icebp  
  41656e:	int3   
  41656f:	push   cs
  416570:	adc    BYTE PTR [eax],dl
  416572:	and    eax,0xbd4019c2
  416577:	test   DWORD PTR [ebx+ebp*4],ecx
  41657a:	pop    ecx
  41657b:	lds    ecx,FWORD PTR [ebp+0xf9909b6]
  416581:	cmp    al,0xbf
  416583:	lods   al,BYTE PTR ds:[esi]
  416584:	outs   dx,BYTE PTR ds:[esi]
  416585:	mov    ebx,0x4ead201a
  41658a:	sbb    ah,dl
  41658c:	lds    ebx,FWORD PTR [eax+0x716e95cc]
  416592:	out    dx,al
  416593:	sub    DWORD PTR [edx],ecx
  416595:	call   0x7587:0xfac8649d
  41659c:	cmp    BYTE PTR ss:[edx-0x4ca47cc5],dl
  4165a3:	jno    0x41659f
  4165a5:	jns    0x416547
  4165a7:	fisubr WORD PTR [edx+esi*2-0x2eb06f60]
  4165ae:	and    BYTE PTR [ebp-0x25e3909f],dl
  4165b4:	sbb    BYTE PTR [edi],ah
  4165b6:	xchg   ecx,eax
  4165b7:	addr16 aam 0xbc
  4165ba:	cs mov ebx,0x816e05f
  4165c0:	pusha  
  4165c1:	mov    ecx,0x29e7f0d6
  4165c6:	and    eax,0xc89e7291
  4165cb:	fucomp st(5)
  4165cd:	outs   dx,BYTE PTR ds:[esi]
  4165ce:	fcomp  DWORD PTR [eax-0x4a]
  4165d1:	fistp  QWORD PTR ds:0xb3a439b7
  4165d7:	loop   0x41663c
  4165d9:	cmp    DWORD PTR [edi],ebx
  4165db:	das    
  4165dc:	and    DWORD PTR [ebx-0x51faf0ab],ebx
  4165e2:	sub    DWORD PTR [edx+0x4a724abd],0x1dfb797
  4165ec:	sbb    BYTE PTR [ebx-0x71],bl
  4165ef:	loop   0x41658e
  4165f1:	pop    esp
  4165f2:	dec    edx
  4165f3:	fs out dx,eax
  4165f5:	rcr    DWORD PTR [edi-0x2b42211d],0x42
  4165fc:	and    DWORD PTR [eax],edx
  4165fe:	push   esi
  4165ff:	es mov esp,0x20d63b80
  416605:	adc    BYTE PTR [ebx-0x41f2ff62],cl
  41660b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41660c:	in     eax,dx
  41660d:	pusha  
  41660e:	adc    bh,BYTE PTR [esi-0x5b]
  416611:	daa    
  416612:	mov    ds:0x3eb72503,al
  416617:	aas    
  416618:	cli    
  416619:	pop    ecx
  41661a:	jecxz  0x4165b6
  41661c:	cli    
  41661d:	lods   al,BYTE PTR ds:[esi]
  41661e:	mov    esp,0xe4ff8d3e
  416623:	cmp    BYTE PTR [esi],cl
  416625:	pop    edi
  416626:	lock push ss
  416628:	shl    esi,0x64
  41662b:	dec    edi
  41662c:	ret    
  41662d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41662e:	jb     0x416608
  416630:	pop    edx
  416631:	and    eax,0xfbe34371
  416636:	mov    cl,0x2c
  416638:	dec    edx
  416639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41663a:	data16 sar BYTE PTR [ebp-0x5126ecb],1
  416641:	cs aad 0xdc
  416644:	or     BYTE PTR [edi],cl
  416646:	xchg   DWORD PTR [edx-0x7e83dd03],edx
  41664c:	loope  0x4165e5
  41664e:	and    al,0x80
  416650:	add    esi,esp
  416652:	icebp  
  416653:	adc    BYTE PTR ds:0xa295c7c7,ah
  416659:	lock gs pop eax
  41665c:	xor    ebx,DWORD PTR [ebp+0xf]
  41665f:	mov    DWORD PTR [ebp-0x7cc6be4d],ebp
  416665:	out    dx,eax
  416666:	dec    edx
  416667:	jecxz  0x41661a
  416669:	cmp    DWORD PTR [edx+0x702f2dfc],edx
  41666f:	ror    edx,1
  416671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416672:	sbb    eax,0x8b396431
  416677:	sbb    al,BYTE PTR ds:0xdfb79143
  41667d:	push   esi
  41667e:	pushf  
  41667f:	mov    ebp,0x44b08452
  416684:	mov    ebx,0x4f17a8cf
  416689:	ret    0x96e5
  41668c:	sub    dh,dh
  41668e:	inc    edx
  41668f:	jmp    0xc120:0xd5693118
  416696:	je     0x416647
  416698:	jle    0x4166a8
  41669a:	gs mov ecx,0x710a3777
  4166a0:	cmp    dh,cl
  4166a2:	loopne 0x4166a0
  4166a4:	adc    edx,esi
  4166a6:	fbld   TBYTE PTR [esi-0x7a]
  4166a9:	sub    BYTE PTR [ebp-0x30fd1ed5],cl
  4166af:	push   edx
  4166b0:	push   cs
  4166b1:	push   edx
  4166b2:	scas   al,BYTE PTR es:[edi]
  4166b3:	mov    ebp,0x1bd74f69
  4166b8:	jmp    0xf8cca27e
  4166bd:	push   esi
  4166be:	pop    ebp
  4166bf:	cmp    al,0xe8
  4166c1:	scas   al,BYTE PTR es:[edi]
  4166c2:	pop    ebx
  4166c3:	mov    ecx,0x12f2d3f0
  4166c8:	and    ah,BYTE PTR [ebx]
  4166ca:	jbe    0x416710
  4166cc:	dec    edx
  4166cd:	pop    ebx
  4166ce:	arpl   WORD PTR [eax+eax*2],ax
  4166d1:	jo     0x4166eb
  4166d3:	mov    edi,0x493412f3
  4166d8:	stos   DWORD PTR es:[edi],eax
  4166d9:	pop    ss
  4166da:	repnz mov ch,0xd0
  4166dd:	sbb    ch,BYTE PTR [edx-0x31]
  4166e0:	(bad)  
  4166e1:	adc    esp,esi
  4166e3:	push   cs
  4166e4:	in     al,0xe6
  4166e6:	xchg   ebp,eax
  4166e7:	or     al,BYTE PTR [ebp-0x240117e6]
  4166ed:	add    al,0xef
  4166ef:	inc    esp
  4166f0:	xor    BYTE PTR [eax-0x3e],bl
  4166f3:	inc    BYTE PTR [eax-0x19]
  4166f6:	xchg   DWORD PTR [ecx],esp
  4166f8:	pop    edi
  4166f9:	imul   esi,esp,0x2dcd7d1d
  4166ff:	ss je  0x4166e8
  416702:	in     al,dx
  416703:	iret   
  416704:	adc    dl,BYTE PTR [eax-0x6e]
  416707:	mov    ds:0xbb84e497,al
  41670c:	sar    DWORD PTR [ebp-0x3f],1
  41670f:	fst    DWORD PTR [ebp+0x60]
  416712:	cs push eax
  416714:	stc    
  416715:	mov    ds:0x6c373fa0,eax
  41671a:	adc    DWORD PTR [edi+0x22fd117e],0x35
  416721:	aaa    
  416722:	add    BYTE PTR ds:0x7dad4087,ah
  416728:	test   DWORD PTR [ebp+0x64d0da0f],0xc41a336c
  416732:	ins    BYTE PTR es:[edi],dx
  416733:	xor    DWORD PTR ds:0xd967937a,esp
  416739:	push   0xfffffff0
  41673b:	lods   eax,DWORD PTR ds:[esi]
  41673c:	mov    ch,0x21
  41673e:	jle    0x4166d4
  416740:	fdivr  DWORD PTR [ecx+edx*4]
  416743:	add    bh,BYTE PTR [eax-0x53aeb799]
  416749:	adc    DWORD PTR [edx+0x37],edx
  41674c:	lods   eax,DWORD PTR ds:[esi]
  41674d:	sub    bh,BYTE PTR [edi+ebp*2+0x55661a3b]
  416754:	pop    esp
  416755:	xor    ch,BYTE PTR [esi]
  416757:	inc    edx
  416758:	(bad)  
  416759:	popf   
  41675a:	jle    0x4167d9
  41675c:	jl     0x4166ef
  41675e:	inc    esi
  41675f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416760:	icebp  
  416761:	lods   al,BYTE PTR ds:[esi]
  416762:	scas   al,BYTE PTR es:[edi]
  416763:	nop
  416764:	xchg   edi,eax
  416765:	or     eax,0x25fb1fda
  41676a:	cld    
  41676b:	xchg   ecx,eax
  41676c:	push   eax
  41676d:	sbb    eax,0xdde8a7e5
  416772:	inc    eax
  416773:	(bad)  
  416774:	mov    edx,0x8d19444a
  416779:	(bad)  
  41677a:	bound  ebx,QWORD PTR [ebx-0x19]
  41677d:	(bad)  
  41677e:	out    0xc0,al
  416780:	xor    ebp,DWORD PTR [eax+0x55f43927]
  416786:	pop    esi
  416787:	mov    eax,0x18da54e6
  41678c:	push   0x3bb99ed5
  416791:	lods   eax,DWORD PTR ds:[esi]
  416792:	or     ebx,esi
  416794:	daa    
  416795:	pop    es
  416796:	xor    ah,BYTE PTR [ebx+0x29431c3b]
  41679c:	mov    ds:0x162da512,al
  4167a1:	das    
  4167a2:	cmp    al,0x15
  4167a4:	push   ds
  4167a5:	xor    BYTE PTR [esi],dl
  4167a7:	mov    ecx,0x513c396b
  4167ac:	stos   BYTE PTR es:[edi],al
  4167ad:	lods   al,BYTE PTR ds:[esi]
  4167ae:	mov    DWORD PTR [edi+esi*1],edi
  4167b1:	pop    ss
  4167b2:	sbb    BYTE PTR [eax],dh
  4167b4:	hlt    
  4167b5:	sbb    DWORD PTR [ebx-0x699f51f7],edx
  4167bb:	sub    DWORD PTR [eax],esp
  4167bd:	push   eax
  4167be:	jle    0x416796
  4167c0:	std    
  4167c1:	aas    
  4167c2:	inc    eax
  4167c3:	fnstcw WORD PTR [esi]
  4167c5:	dec    ecx
  4167c6:	jne    0x4167f6
  4167c8:	ins    BYTE PTR es:[edi],dx
  4167c9:	in     eax,0xe1
  4167cb:	sbb    DWORD PTR [edi+0x6d],ecx
  4167ce:	nop
  4167cf:	dec    ecx
  4167d0:	inc    esp
  4167d1:	popa   
  4167d2:	mov    ebx,0x2ffd84d4
  4167d7:	push   edx
  4167d8:	xlat   BYTE PTR ds:[ebx]
  4167d9:	add    dl,BYTE PTR [eax-0x42fd7a83]
  4167df:	sub    al,0xd6
  4167e1:	fdivr  st(3),st
  4167e3:	cs push esp
  4167e5:	and    eax,0xaab28196
  4167ea:	bound  edi,QWORD PTR [esi+eiz*8-0x30552a3a]
  4167f1:	and    eax,0xb0609f3a
  4167f6:	jmp    0xb445:0x52f955cf
  4167fd:	cmp    ah,BYTE PTR [esi+0x6a]
  416800:	stos   DWORD PTR es:[edi],eax
  416801:	fidiv  DWORD PTR [esi-0x5853743]
  416807:	sbb    DWORD PTR [ebx],ebx
  416809:	(bad)  
  41680a:	ins    BYTE PTR es:[edi],dx
  41680b:	ds push ebp
  41680d:	ret    
  41680e:	test   al,0x53
  416810:	push   ds
  416811:	scas   eax,DWORD PTR es:[edi]
  416812:	mov    ch,0x5b
  416814:	sub    dh,bl
  416816:	ins    DWORD PTR es:[edi],dx
  416817:	aaa    
  416818:	je     0x4167d6
  41681a:	jecxz  0x41683c
  41681c:	adc    eax,0xe6167539
  416821:	adc    eax,0x34b33374
  416826:	daa    
  416827:	fstp   DWORD PTR [ebx]
  416829:	iret   
  41682a:	dec    edx
  41682b:	cmp    ebx,DWORD PTR [esi]
  41682d:	cmp    DWORD PTR [ebp-0x1b],ecx
  416830:	aas    
  416831:	das    
  416832:	mov    BYTE PTR [eax-0x384df45b],ch
  416838:	cmp    eax,0x7c5dfdda
  41683d:	xchg   DWORD PTR [edx+0x7d],esi
  416840:	dec    esp
  416841:	lahf   
  416842:	mov    bx,0x9dc0
  416846:	mov    eax,0x45199dd2
  41684b:	clc    
  41684c:	pop    ds
  41684d:	fidiv  WORD PTR [edx+0x2e6348ac]
  416853:	inc    ecx
  416854:	add    al,0x86
  416856:	inc    ebp
  416857:	ins    DWORD PTR es:[edi],dx
  416858:	int    0x9a
  41685a:	(bad)  
  41685b:	dec    edx
  41685c:	push   es
  41685d:	mov    esi,0xee541f7a
  416862:	pop    eax
  416863:	sahf   
  416864:	xchg   ebx,eax
  416865:	sbb    eax,DWORD PTR [edi+0x945fe9]
  41686b:	xchg   esp,eax
  41686c:	fneni(8087 only) 
  41686e:	repnz rcl BYTE PTR [eax-0x7d],0x48
  416873:	sbb    DWORD PTR [ebx-0x2a],0xffffffd6
  416877:	call   DWORD PTR [edi+0x46c13899]
  41687d:	test   eax,0x900913a
  416882:	int    0xeb
  416884:	add    al,0x89
  416886:	test   DWORD PTR [edi+0x3b],0xd0e588c5
  41688d:	jmp    0x2947f7e4
  416892:	inc    ebx
  416893:	inc    eax
  416894:	mov    ds:0x3f5ae734,al
  416899:	sahf   
  41689a:	int3   
  41689b:	jb     0x416910
  41689d:	call   0xbe09d597
  4168a2:	(bad)  [edx-0x40]
  4168a5:	pop    ebp
  4168a6:	mov    ecx,0xa1b4413f
  4168ab:	mov    eax,ds:0x95c31910
  4168b0:	push   ebx
  4168b1:	sar    DWORD PTR [edi+0x73ba87a2],0x7c
  4168b8:	pop    ss
  4168b9:	mov    ah,0xd8
  4168bb:	hlt    
  4168bc:	adc    eax,0x81f1a9ba
  4168c1:	out    dx,ax
  4168c3:	mov    ebx,0xb8e93714
  4168c8:	xchg   edi,eax
  4168c9:	adc    BYTE PTR [ebp-0x9],dl
  4168cc:	rol    DWORD PTR [edi],cl
  4168ce:	cmp    ebp,DWORD PTR [eax+0x24]
  4168d1:	dec    ebx
  4168d2:	xchg   edx,eax
  4168d3:	add    cl,ah
  4168d5:	sar    DWORD PTR [edi+0x6a7d7c9c],cl
  4168db:	jo     0x416916
  4168dd:	shl    BYTE PTR [edi+ebx*8],0x63
  4168e1:	mov    eax,ds:0x62f4bb0a
  4168e6:	inc    eax
  4168e7:	das    
  4168e8:	or     DWORD PTR [ecx+0x4fcbaf1b],ebp
  4168ee:	or     esp,DWORD PTR [esi-0x5b]
  4168f1:	dec    edx
  4168f2:	cmp    eax,0x88644933
  4168f7:	jl     0x416960
  4168f9:	add    esi,0xd441d3a7
  4168ff:	lods   al,BYTE PTR ds:[esi]
  416900:	hlt    
  416901:	and    di,WORD PTR [ebp-0x462617fe]
  416908:	add    eax,0x8206f9dc
  41690d:	xchg   DWORD PTR [esi-0x9],esp
  416910:	(bad)  ds:0xdc3727a0
  416916:	out    0x10,al
  416918:	aaa    
  416919:	pushf  
  41691a:	adc    DWORD PTR [eax+0x1c9d5090],0x33
  416921:	push   0xbe7de3eb
  416926:	test   DWORD PTR ds:0xb01750c2,edx
  41692c:	fsub   QWORD PTR [eax]
  41692e:	pop    ss
  41692f:	ds sahf 
  416931:	fwait
  416932:	sub    ecx,ebp
  416934:	cmp    cl,BYTE PTR [eax-0x72]
  416937:	repnz push edi
  416939:	xlat   BYTE PTR ds:[ebx]
  41693a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41693b:	adc    al,0x1b
  41693d:	inc    ebp
  41693e:	mov    esi,DWORD PTR [ebp-0x4]
  416941:	call   esi
  416943:	mov    DWORD PTR [ebp-0x38],eax
  416946:	cmp    DWORD PTR [ebp-0x38],0x57
  41694a:	jne    0x416958
  41694c:	mov    edx,DWORD PTR [ebp-0x20]
  41694f:	push   edx
  416950:	call   0x401000
  416955:	add    esp,0x4
  416958:	xor    eax,eax
  41695a:	pop    esi
  41695b:	mov    esp,ebp
  41695d:	pop    ebp
  41695e:	ret    
  41695f:	push   ebp
  416960:	mov    ebp,esp
  416962:	sub    esp,0x124
  416968:	xor    eax,eax
  41696a:	mov    esp,ebp
  41696c:	pop    ebp
  41696d:	ret    
  41696e:	push   ebp
  41696f:	mov    ebp,esp
  416971:	sub    esp,0x2c
  416974:	push   ebx
  416975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41697c:	mov    DWORD PTR [ebp-0xc],0x0
  416983:	mov    DWORD PTR [ebp-0x20],0x1
  41698a:	mov    DWORD PTR [ebp-0x10],0x0
  416991:	mov    eax,DWORD PTR [ebp+0xc]
  416994:	mov    DWORD PTR [ebp-0x1c],eax
  416997:	mov    DWORD PTR [ebp-0x18],0x0
  41699e:	mov    DWORD PTR [ebp-0x8],0x0
  4169a5:	mov    DWORD PTR [ebp-0x24],0x0
  4169ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4169af:	sub    ecx,0x1
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	mov    edx,DWORD PTR [ebp+0x8]
  4169b8:	mov    DWORD PTR [ebp-0x10],edx
  4169bb:	mov    DWORD PTR [ebp-0x28],0x1
  4169c2:	mov    eax,DWORD PTR [ebp-0x4]
  4169c5:	add    eax,0x2
  4169c8:	mov    DWORD PTR [ebp-0x4],eax
  4169cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4169ce:	add    ecx,DWORD PTR [ebp-0x4]
  4169d1:	mov    dl,BYTE PTR [ecx+0x1]
  4169d4:	mov    BYTE PTR [ebp-0x11],dl
  4169d7:	mov    eax,DWORD PTR [ebp-0x4]
  4169da:	add    eax,0x1
  4169dd:	mov    DWORD PTR [ebp-0x4],eax
  4169e0:	mov    cl,BYTE PTR [ebp-0x11]
  4169e3:	mov    BYTE PTR [ebp-0x29],cl
  4169e6:	push   edx
  4169e7:	pop    ebx
  4169e8:	mov    ecx,ebx
  4169ea:	mov    edx,DWORD PTR [ebp-0x10]
  4169ed:	add    edx,DWORD PTR [ebp-0x4]
  4169f0:	mov    al,BYTE PTR [ebp-0x29]
  4169f3:	mov    BYTE PTR [edx],al
  4169f5:	mov    ebx,esi
  4169f7:	mov    ecx,DWORD PTR [ebp+0x14]
  4169fa:	add    ecx,DWORD PTR [ebp-0x8]
  4169fd:	movzx  edx,BYTE PTR [ecx]
  416a00:	mov    DWORD PTR [ebp-0xc],edx
  416a03:	mov    eax,DWORD PTR [ebp-0x8]
  416a06:	mov    ecx,DWORD PTR [ebp-0x28]
  416a09:	add    eax,ecx
  416a0b:	mov    DWORD PTR [ebp-0x8],eax
  416a0e:	mov    eax,DWORD PTR [ebp-0x8]
  416a11:	shr    eax,0x3
  416a14:	mov    ecx,0x1
  416a19:	sub    ecx,eax
  416a1b:	mov    DWORD PTR [ebp-0x20],ecx
  416a1e:	shr    eax,cl
  416a20:	mov    edx,DWORD PTR [ebp-0x8]
  416a23:	imul   edx,DWORD PTR [ebp-0x20]
  416a27:	mov    DWORD PTR [ebp-0x8],edx
  416a2a:	shl    ebx,0x3
  416a2d:	mov    eax,DWORD PTR [ebp-0x10]
  416a30:	add    eax,DWORD PTR [ebp-0x4]
  416a33:	movzx  ecx,BYTE PTR [eax]
  416a36:	add    ecx,DWORD PTR [ebp-0xc]
  416a39:	mov    edx,DWORD PTR [ebp-0x10]
  416a3c:	add    edx,DWORD PTR [ebp-0x4]
  416a3f:	mov    BYTE PTR [edx],cl
  416a41:	mov    eax,DWORD PTR [ebp-0x4]
  416a44:	sub    eax,0x2
  416a47:	mov    DWORD PTR [ebp-0x4],eax
  416a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  416a4d:	cmp    ecx,DWORD PTR [ebp+0x10]
  416a50:	jl     0x4169c2
  416a56:	pop    ebx
  416a57:	mov    esp,ebp
  416a59:	pop    ebp
  416a5a:	ret    
  416a5b:	int3   
  416a5c:	jmp    DWORD PTR ds:0x417008
