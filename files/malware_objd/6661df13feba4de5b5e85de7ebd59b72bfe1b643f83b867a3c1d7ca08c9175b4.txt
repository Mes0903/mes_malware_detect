
6661df13feba4de5b5e85de7ebd59b72bfe1b643f83b867a3c1d7ca08c9175b4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	add    BYTE PTR cs:[edx],ah
  401171:	scas   eax,DWORD PTR es:[edi]
  401172:	fs sub eax,0x40d30ec1
  401178:	or     ah,cl
  40117a:	aas    
  40117b:	mov    ebx,0x2a86cfa4
  401180:	jno    0x401133
  401182:	push   eax
  401183:	inc    ebx
  401184:	sbb    cl,0xd5
  401187:	cmp    eax,0x9873f498
  40118c:	xor    DWORD PTR [esi+0x28],0xfffffff1
  401190:	fcomi  st,st(5)
  401192:	jl     0x401140
  401194:	cmp    eax,0xd1032635
  401199:	push   esi
  40119a:	jmp    0x103d4e39
  40119f:	loope  0x4011e7
  4011a1:	adc    al,0xae
  4011a3:	adc    DWORD PTR [esi+0x57ed8dff],ecx
  4011a9:	inc    ebx
  4011aa:	inc    edx
  4011ab:	xchg   ebp,eax
  4011ac:	add    esp,eax
  4011ae:	jae    0x4011e3
  4011b0:	dec    edi
  4011b1:	sbb    ch,BYTE PTR [eax+0x5a04b116]
  4011b7:	sahf   
  4011b8:	and    BYTE PTR [ebp+0x2e76588d],0xfa
  4011bf:	mov    ecx,0x7213755b
  4011c4:	cdq    
  4011c5:	mov    bh,0x98
  4011c7:	jmp    0x4011d6
  4011c9:	jge    0x40119d
  4011cb:	push   eax
  4011cc:	or     BYTE PTR [edx-0x6b116f38],al
  4011d2:	pop    edi
  4011d3:	mov    DWORD PTR ds:0xecde6e3e,edi
  4011d9:	mov    esp,0x3913b920
  4011de:	pop    es
  4011df:	je     0x4011df
  4011e1:	hlt    
  4011e2:	popa   
  4011e3:	mov    gs,WORD PTR [edi+ebp*4+0x1e]
  4011e7:	ffree  st(6)
  4011e9:	mov    al,ds:0x949dc249
  4011ee:	add    BYTE PTR [esi-0x3f355f36],bh
  4011f4:	mov    esp,0x57e06e09
  4011f9:	xchg   BYTE PTR [si+0x2e8e],dh
  4011fe:	inc    esi
  4011ff:	clc    
  401200:	shl    BYTE PTR [edi+edi*8+0x64c9ed25],1
  401207:	iret   
  401208:	in     al,0x28
  40120a:	test   eax,0xe24341f4
  40120f:	jne    0x4011cf
  401211:	jae    0x401222
  401213:	cmp    ebp,DWORD PTR [ebp-0x2d]
  401216:	repz call 0x9efb8ce2
  40121c:	push   ds
  40121d:	ja     0x4011dd
  40121f:	mov    dl,0x6
  401221:	mov    eax,ds:0xc8cefc53
  401226:	mov    esp,0x7823015b
  40122b:	cld    
  40122c:	adc    esp,DWORD PTR [edx+0x25]
  40122f:	push   ss
  401230:	or     ch,BYTE PTR [eax+0x266423c7]
  401236:	bt     DWORD PTR [edi+esi*2-0x5],esp
  40123b:	cwde   
  40123c:	mov    BYTE PTR [edx],ch
  40123e:	icebp  
  40123f:	lahf   
  401240:	inc    ebp
  401241:	sub    al,0xfc
  401243:	add    eax,0x441012f
  401248:	dec    esi
  401249:	cmp    ebx,DWORD PTR [ebx]
  40124b:	or     al,bl
  40124d:	mov    esp,0x4f08261b
  401252:	mov    BYTE PTR [ebp-0x2c],ch
  401255:	dec    eax
  401256:	test   BYTE PTR [ebx+0x5a],ah
  401259:	sar    DWORD PTR [edx-0x2ed0fcec],0x61
  401260:	out    dx,eax
  401261:	aaa    
  401262:	jb     0x4012cf
  401264:	and    al,0xe0
  401266:	test   eax,0xbe99dc8a
  40126b:	mov    al,0x72
  40126d:	mov    al,ds:0xe28214dc
  401272:	inc    ebp
  401273:	call   0x1de1:0xa1925af0
  40127a:	or     eax,0xdc24943
  40127f:	test   DWORD PTR [eax],ecx
  401281:	pop    esi
  401282:	mov    cl,0x47
  401284:	xchg   esi,eax
  401285:	(bad)  
  401287:	jne    0x401261
  401289:	mov    DWORD PTR [ecx+0x41],ebx
  40128c:	add    eax,0x6e54751d
  401291:	sub    al,0x62
  401293:	sub    bl,cl
  401295:	mov    ebp,0xf92767d4
  40129a:	cmp    BYTE PTR [edi-0x3221a8bd],dh
  4012a0:	sbb    BYTE PTR [ebx+0x1d],bh
  4012a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012a4:	rcr    BYTE PTR [ebx+0x28d18ba7],0xb9
  4012ab:	loopne 0x401267
  4012ad:	push   ebx
  4012ae:	push   cs
  4012af:	clc    
  4012b0:	ret    
  4012b1:	mov    al,ds:0x80efea9b
  4012b6:	xchg   edi,eax
  4012b7:	adc    eax,0x8048073a
  4012bc:	(bad)  
  4012bd:	jg     0x401265
  4012bf:	push   edi
  4012c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012c1:	cmp    BYTE PTR [eax+0x69],bh
  4012c4:	push   ss
  4012c5:	in     al,0x2d
  4012c7:	push   ss
  4012c8:	or     DWORD PTR ds:0x2d4ccd1f,edx
  4012ce:	shl    DWORD PTR [esi+0x1e],1
  4012d1:	or     eax,0x996cab05
  4012d6:	and    al,0xfc
  4012d8:	fstp   TBYTE PTR [edi+0x67076fc6]
  4012de:	pop    ss
  4012df:	or     ecx,ebp
  4012e1:	loop   0x4012d8
  4012e3:	out    dx,al
  4012e4:	xchg   esp,eax
  4012e5:	ror    BYTE PTR [eax+0x77],cl
  4012e8:	add    BYTE PTR [ebx+edi*2-0x78],ch
  4012ec:	mov    al,0x54
  4012ee:	les    edx,FWORD PTR [ebp-0x28]
  4012f1:	pushf  
  4012f2:	cmc    
  4012f3:	inc    edi
  4012f4:	mov    eax,0x47195975
  4012f9:	test   al,0xf9
  4012fb:	hlt    
  4012fc:	push   ss
  4012fd:	adc    dh,dl
  4012ff:	xor    bl,BYTE PTR [ecx]
  401301:	mov    esp,edi
  401303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401305:	popf   
  401306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401307:	mov    esi,edi
  401309:	nop
  40130a:	mov    bh,0x67
  40130c:	mov    al,0xd2
  40130e:	xlat   BYTE PTR ds:[ebx]
  40130f:	stc    
  401310:	push   ds
  401311:	mov    bh,0xf1
  401313:	daa    
  401314:	add    esi,edx
  401316:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  401318:	adc    esi,DWORD PTR [edx+eax*1+0x1fe018f9]
  40131f:	mov    ebx,0xf09f5516
  401324:	data16 es mov bl,0x1c
  401328:	repz sbb ebx,eax
  40132b:	fdiv   DWORD PTR [esp+eiz*4-0x18]
  40132f:	icebp  
  401330:	inc    esi
  401331:	and    eax,0x93c1066f
  401336:	dec    eax
  401337:	(bad)  [ecx]
  401339:	pop    ss
  40133a:	mov    ebp,0x64c492d2
  40133f:	pop    edx
  401340:	mov    ebx,0xc52edfae
  401345:	jecxz  0x4012d8
  401347:	add    al,0x85
  401349:	hlt    
  40134a:	xor    eax,0x56355e75
  40134f:	call   0x9f0f5e34
  401354:	cmp    al,0x50
  401356:	add    cl,BYTE PTR [edi+ebp*2]
  401359:	jae    0x4013a4
  40135b:	inc    esi
  40135c:	aam    0x6e
  40135e:	into   
  40135f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401360:	shl    BYTE PTR [ebx-0x44275e3a],cl
  401366:	data16 fstp QWORD PTR [eax]
  401369:	adc    ch,al
  40136b:	std    
  40136c:	mov    eax,ds:0x6a52b111
  401371:	fnsave [ecx]
  401373:	mov    cl,0x45
  401375:	dec    ebp
  401376:	xor    al,dh
  401378:	mov    ebx,0xef07791a
  40137d:	loopne 0x401357
  40137f:	mov    ebp,0xcc72b4c8
  401384:	mov    ah,0xd2
  401386:	test   eax,0x48a1e04a
  40138c:	les    eax,FWORD PTR [edi]
  40138e:	mov    dh,0x71
  401390:	push   ss
  401391:	xor    ebx,0xe8084bb9
  401397:	sub    al,0x89
  401399:	push   esi
  40139a:	cmp    eax,0x20d78435
  40139f:	xchg   DWORD PTR [ebx+esi*8+0x1b4a38],ebp
  4013a6:	adc    ebp,DWORD PTR [esi]
  4013a8:	pop    ecx
  4013a9:	push   edi
  4013aa:	outs   dx,BYTE PTR ds:[esi]
  4013ab:	mov    WORD PTR [ebx-0xa5233a2],es
  4013b1:	dec    edi
  4013b2:	and    BYTE PTR [eax+esi*8+0x4304ca19],cl
  4013b9:	std    
  4013ba:	shl    dh,0x2f
  4013bd:	retf   0xf783
  4013c0:	inc    edi
  4013c1:	popf   
  4013c2:	mov    ebp,0xeeace136
  4013c7:	sbb    al,0x8b
  4013c9:	lds    eax,FWORD PTR [edx]
  4013cb:	mov    edi,0x75b09fc9
  4013d0:	aam    0x81
  4013d2:	leave  
  4013d3:	bound  ecx,QWORD PTR [ebp-0x68]
  4013d6:	iret   
  4013d7:	and    dl,bl
  4013d9:	retf   
  4013da:	pop    esi
  4013db:	inc    esp
  4013dc:	mov    bl,BYTE PTR [eax+0x5a]
  4013df:	jb     0x4013b5
  4013e1:	sub    esi,edx
  4013e3:	enter  0xba83,0xe7
  4013e7:	inc    edi
  4013e8:	pop    ebx
  4013e9:	fcom   QWORD PTR [eax]
  4013eb:	fnsave [edx]
  4013ed:	fidivr DWORD PTR [edi]
  4013ef:	cmp    BYTE PTR [edx+0x6c],ah
  4013f2:	add    BYTE PTR [ebx+0x43],ah
  4013f5:	mov    eax,0x6dec09fc
  4013fa:	xor    cl,bh
  4013fc:	xchg   ebx,eax
  4013fd:	lea    ebp,[esi-0x155a7f9d]
  401403:	xchg   edx,eax
  401404:	and    al,0x19
  401406:	adc    eax,0x5cf24d27
  40140b:	ins    DWORD PTR es:[edi],dx
  40140c:	(bad)  
  40140e:	fs jnp 0x4013d0
  401411:	fnstsw WORD PTR [esi]
  401413:	sub    al,0xd8
  401415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401416:	data16 xor BYTE PTR [edi-0x536e00a],ah
  40141d:	int3   
  40141e:	xor    DWORD PTR [ebp-0x1c320667],ebx
  401424:	sub    ebx,DWORD PTR [edi-0x334e5f72]
  40142a:	jmp    FWORD PTR [ecx+edi*4+0x3d82c6c]
  401431:	pop    edx
  401432:	popf   
  401433:	pop    ss
  401434:	outs   dx,BYTE PTR ds:[esi]
  401435:	push   ecx
  401436:	add    bh,ch
  401438:	pop    esp
  401439:	lea    esi,ds:0x73ce88c6
  40143f:	ret    0x3e20
  401442:	lds    eax,FWORD PTR [ebx+0x7af95c6a]
  401448:	neg    cl
  40144a:	push   cs
  40144b:	jge    0x401489
  40144d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40144e:	pop    ebp
  40144f:	mov    edx,0x24cad57d
  401454:	xchg   esi,eax
  401455:	inc    esi
  401456:	push   edx
  401457:	outs   dx,BYTE PTR ds:[esi]
  401458:	cmc    
  401459:	cmp    dh,BYTE PTR [ebp+0x7a926d28]
  40145f:	pop    ebp
  401460:	mov    esi,0x176decea
  401465:	mov    al,BYTE PTR [ebx-0x3cae1cca]
  40146b:	hlt    
  40146c:	enter  0x2cc4,0x2a
  401470:	xchg   edx,eax
  401471:	dec    esi
  401472:	push   eax
  401473:	loope  0x401460
  401475:	aas    
  401476:	push   esi
  401477:	mov    al,ds:0xd86f0b07
  40147c:	pusha  
  40147d:	in     al,dx
  40147e:	sbb    DWORD PTR [ecx-0x2e],edx
  401481:	or     BYTE PTR [esi+0x17fd85e3],al
  401487:	out    0x4f,al
  401489:	int3   
  40148a:	xlat   BYTE PTR ds:[ebx]
  40148b:	mov    ah,0x96
  40148d:	popf   
  40148e:	add    bl,cl
  401490:	sub    BYTE PTR [ebp-0x3f],dh
  401493:	and    DWORD PTR [ebp+ebp*4-0xd],0x7233afdc
  40149b:	iret   
  40149c:	mov    ah,0xca
  40149e:	push   ds
  40149f:	sub    ebp,DWORD PTR [ebp+0x4]
  4014a2:	sub    al,0xd5
  4014a4:	cmp    al,0x11
  4014a6:	(bad)  
  4014a7:	das    
  4014a8:	jae    0x40150f
  4014aa:	pushf  
  4014ab:	push   cs
  4014ac:	mov    ebp,0x7d115078
  4014b1:	imul   edi,DWORD PTR [esi+ebx*8+0x52708722],0x39
  4014b9:	ficom  WORD PTR [ebp+0x21c1e7a5]
  4014bf:	adc    eax,0x128ba807
  4014c4:	mov    eax,ds:0x41a0b92e
  4014c9:	sub    al,0x9
  4014cb:	cwde   
  4014cc:	(bad)  
  4014cd:	adc    ecx,DWORD PTR [edi-0x37]
  4014d0:	repnz adc DWORD PTR [eax-0x70],eax
  4014d4:	retf   
  4014d5:	inc    ebp
  4014d6:	inc    ebx
  4014d7:	lods   eax,DWORD PTR ds:[esi]
  4014d8:	inc    ebp
  4014d9:	ficom  DWORD PTR [ecx]
  4014db:	clc    
  4014dc:	shl    DWORD PTR [ecx+0x0],1
  4014df:	cmp    BYTE PTR [esi-0x7532130d],0xff
  4014e6:	sub    cl,BYTE PTR [ebx+0x74]
  4014e9:	and    BYTE PTR [eax-0x2ad33bd7],dh
  4014ef:	jo     0x4014ec
  4014f1:	xor    BYTE PTR [edx+0x27],al
  4014f4:	dec    ebx
  4014f5:	xchg   edx,edi
  4014f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014f8:	in     al,0xf3
  4014fa:	(bad)  
  4014fb:	data16 jbe 0x4014b5
  4014fe:	jb     0x4014b5
  401500:	jp     0x40156d
  401502:	mov    ds:0x1c39f94,al
  401507:	sub    BYTE PTR [eax+0x3],al
  40150a:	pop    es
  40150b:	fisttp QWORD PTR [esi]
  40150d:	jg     0x401491
  40150f:	test   al,0x5d
  401511:	test   BYTE PTR [esi-0x6],ah
  401514:	jne    0x40154a
  401516:	xchg   ebp,eax
  401517:	add    ch,ah
  401519:	add    BYTE PTR ss:[ebx-0x21],ah
  40151d:	jp     0x401574
  40151f:	cmp    eax,0xec78fae7
  401524:	cdq    
  401525:	arpl   WORD PTR ds:0x98aabb3b,bx
  40152b:	sbb    ebx,DWORD PTR [edi+0x171b3f04]
  401531:	iret   
  401532:	inc    edi
  401533:	shl    bl,1
  401535:	ficom  WORD PTR [ebx+0x7c]
  401538:	ror    ah,0x31
  40153b:	pop    ds
  40153c:	add    ebx,eax
  40153e:	mov    cl,0x37
  401540:	mov    al,0xde
  401542:	rcr    DWORD PTR [ecx],1
  401544:	bound  ebp,QWORD PTR [ebp+0x9]
  401547:	mov    ecx,0x3152907
  40154c:	rcl    BYTE PTR [edx-0x76],cl
  40154f:	shr    DWORD PTR [ecx],cl
  401551:	mov    al,0xaf
  401553:	es pop ebx
  401555:	mov    ecx,DWORD PTR [ecx-0x30d45842]
  40155b:	jp     0x401512
  40155d:	aas    
  40155e:	aad    0x36
  401560:	mov    WORD PTR ds:0x6a0ca197,ds
  401566:	and    DWORD PTR [ebx+0x5b],esp
  401569:	mov    eax,ds:0x82fdd92a
  40156e:	mov    ds:0x682e4e11,al
  401573:	mov    bl,0x18
  401575:	es ins BYTE PTR es:[edi],dx
  401577:	xchg   DWORD PTR [ebp-0xaeb7ba1],esi
  40157d:	xchg   edx,eax
  40157e:	daa    
  40157f:	icebp  
  401580:	push   ecx
  401581:	xchg   esi,eax
  401582:	mov    ebp,edx
  401584:	push   edx
  401585:	pop    ss
  401586:	sub    BYTE PTR [eax-0x57ba32b6],cl
  40158c:	cmp    al,0x96
  40158e:	inc    ebx
  40158f:	jno    0x40156e
  401591:	mov    bh,0x1c
  401593:	sahf   
  401594:	push   ecx
  401595:	loopne 0x401590
  401597:	jne    0x401544
  401599:	daa    
  40159a:	jle    0x4015b7
  40159c:	mov    ecx,0x7176e650
  4015a1:	xchg   ebp,eax
  4015a2:	fcmovnu st,st(6)
  4015a4:	jne    0x40160f
  4015a6:	pop    esi
  4015a7:	imul   esi,DWORD PTR [edi+0x6cd36910],0x517f22f9
  4015b1:	adc    DWORD PTR [edi-0x70a31d25],edx
  4015b7:	sub    eax,edi
  4015b9:	jecxz  0x40157a
  4015bb:	jge    0x40162e
  4015bd:	pushf  
  4015be:	test   al,0xbd
  4015c0:	xchg   BYTE PTR [ebp+edx*4-0x656aab8f],dl
  4015c7:	mov    edx,0x37679e7e
  4015cc:	fbstp  TBYTE PTR [eax-0x11]
  4015cf:	nop
  4015d0:	leave  
  4015d1:	xchg   esi,eax
  4015d2:	popf   
  4015d3:	sahf   
  4015d4:	jmp    0x8c09:0x96120f58
  4015db:	adc    al,0xa7
  4015dd:	xchg   DWORD PTR [edi-0x72a2944a],ebp
  4015e3:	test   al,0x23
  4015e5:	adc    BYTE PTR [edi],ch
  4015e7:	lea    esp,[edx-0x79]
  4015ea:	mov    ebp,0x10baad06
  4015ef:	add    BYTE PTR [ebx],dh
  4015f1:	mov    al,BYTE PTR [ebx]
  4015f3:	fist   DWORD PTR [ebp+0x4a]
  4015f6:	int    0x44
  4015f8:	into   
  4015f9:	inc    esi
  4015fa:	push   ebx
  4015fb:	les    ebp,FWORD PTR [ebp-0x6c]
  4015fe:	mov    al,0xfc
  401600:	pop    ebp
  401601:	inc    esi
  401602:	xchg   edi,eax
  401603:	(bad)  [ebx]
  401605:	loope  0x4015e0
  401607:	jnp    0x401684
  401609:	addr16 mov ah,0x92
  40160c:	aaa    
  40160d:	inc    edi
  40160e:	adc    BYTE PTR [ebp+0x23012f8],0x7
  401615:	popa   
  401616:	inc    eax
  401617:	mov    esi,0x974dc519
  40161c:	repz daa 
  40161e:	loope  0x40163c
  401620:	gs dec edi
  401622:	mov    bh,0x95
  401624:	inc    ebx
  401625:	retf   
  401626:	(bad)  
  401627:	fbld   TBYTE PTR [esi+0x25]
  40162a:	leave  
  40162b:	sbb    cl,BYTE PTR [edi+0x5]
  40162e:	outs   dx,DWORD PTR ds:[esi]
  40162f:	mov    dh,0xa8
  401631:	jge    0x401652
  401633:	ret    0xc9f5
  401636:	and    bh,al
  401638:	mov    ebp,0xd7800c3
  40163d:	outs   dx,DWORD PTR ds:[esi]
  40163e:	outs   dx,DWORD PTR ds:[esi]
  40163f:	stc    
  401640:	ror    BYTE PTR [eax+0x75d3ab74],cl
  401646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401647:	add    al,0x87
  401649:	aad    0x56
  40164b:	aad    0x42
  40164d:	(bad)  
  40164e:	imul   ecx,esp,0x3fbf8e95
  401654:	lds    edx,FWORD PTR [ecx]
  401656:	jns    0x401659
  401658:	test   eax,0xc18052
  40165d:	jmp    0xe077d87d
  401662:	pop    eax
  401663:	mov    eax,ds:0x8dc2be6f
  401668:	or     eax,0x43b5aebe
  40166d:	jno    0x40165b
  40166f:	ficom  WORD PTR [esi-0x73]
  401672:	pop    ecx
  401673:	into   
  401674:	add    BYTE PTR [esi+0x69e189ce],al
  40167a:	pop    ecx
  40167b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40167c:	retf   
  40167d:	dec    edi
  40167e:	jecxz  0x4016d7
  401680:	push   ds
  401681:	jo     0x4016e4
  401683:	sub    BYTE PTR [esi-0x3c685758],dl
  401689:	mov    eax,ds:0xb1cdd136
  40168e:	sti    
  40168f:	pop    ds
  401690:	and    dh,bh
  401692:	mov    ss,WORD PTR [ebx]
  401694:	not    BYTE PTR [edi+ebp*4+0x195abdf]
  40169b:	mov    cl,0xba
  40169d:	xchg   esp,eax
  40169e:	push   DWORD PTR [esi-0x6cfdb829]
  4016a4:	push   ds
  4016a5:	sub    eax,esi
  4016a7:	cmp    BYTE PTR [ecx-0x31e15d72],cl
  4016ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ae:	mov    bh,0xc3
  4016b0:	stc    
  4016b1:	fistp  DWORD PTR [edi]
  4016b3:	or     al,0x61
  4016b5:	aas    
  4016b6:	pop    ds
  4016b7:	sub    BYTE PTR [ecx+0x44368658],al
  4016bd:	icebp  
  4016be:	adc    eax,0x96326a4e
  4016c3:	out    0xaf,eax
  4016c5:	pop    es
  4016c6:	jg     0x401735
  4016c8:	xchg   ebp,eax
  4016c9:	mov    ch,0x32
  4016cb:	push   ss
  4016cc:	jle    0x40171e
  4016ce:	sub    al,0xd
  4016d0:	test   DWORD PTR [esi-0x4f6f9122],eax
  4016d6:	jmp    0x889b0a9b
  4016db:	imul   eax,DWORD PTR [eax+edi*8-0x43],0x6e0cf433
  4016e3:	mov    eax,ds:0x829bb021
  4016e8:	repnz push es
  4016ea:	je     0x401708
  4016ec:	sbb    BYTE PTR [edi+eiz*1],al
  4016ef:	retf   
  4016f0:	add    BYTE PTR [ebx],0x35
  4016f3:	int3   
  4016f4:	ret    0x98aa
  4016f7:	mov    dl,0xca
  4016f9:	mov    dl,0xe
  4016fb:	aam    0xbc
  4016fd:	inc    eax
  4016fe:	lahf   
  4016ff:	sbb    BYTE PTR [edx],bh
  401701:	rcl    DWORD PTR [edx+0x43],1
  401704:	jge    0x401716
  401706:	mov    al,ds:0xc77dbd36
  40170b:	jg     0x4016e9
  40170d:	xor    BYTE PTR ds:0x77f0264e,al
  401713:	cmp    BYTE PTR [edi-0x42],ah
  401716:	stos   DWORD PTR es:[edi],eax
  401717:	inc    ebx
  401718:	jp     0x40176a
  40171a:	fsub   DWORD PTR [eax+0x43a73289]
  401720:	mov    ds:0x1467f60e,eax
  401725:	ficom  DWORD PTR [esi-0x7c794668]
  40172b:	arpl   WORD PTR [edi-0x7],sp
  40172e:	add    DWORD PTR [edx+0x12],eax
  401731:	clc    
  401732:	les    edx,FWORD PTR [edi+ebp*1]
  401735:	xchg   ebx,eax
  401736:	or     bh,al
  401738:	ins    BYTE PTR es:[edi],dx
  401739:	icebp  
  40173a:	test   eax,0xf86f64f1
  40173f:	retf   
  401740:	xchg   edx,eax
  401741:	out    dx,al
  401742:	xchg   ebp,eax
  401743:	push   ss
  401744:	or     BYTE PTR [esi],bl
  401746:	mov    edx,0x20316681
  40174b:	dec    esp
  40174c:	cmp    al,0x23
  40174e:	mov    bh,0xe
  401750:	mov    edx,DWORD PTR [eax+0xd]
  401753:	cmp    cl,BYTE PTR [ecx+ecx*2-0x15]
  401757:	test   BYTE PTR [eax-0x5a473292],bl
  40175d:	jbe    0x401731
  40175f:	pop    ds
  401760:	lods   al,BYTE PTR ds:[esi]
  401761:	push   0xfe5f43b6
  401766:	aas    
  401767:	mov    BYTE PTR [ebx+0x47],bh
  40176a:	jnp    0x401719
  40176c:	and    ebp,eax
  40176e:	nop
  40176f:	addr16 int3 
  401771:	jns    0x4017b2
  401773:	mul    DWORD PTR ds:0x654adde4
  401779:	iret   
  40177a:	ret    0x34dc
  40177d:	inc    eax
  40177e:	icebp  
  40177f:	bndldx (bad),[ebp-0x34]
  401783:	cmp    cl,BYTE PTR [ecx+0x1cf96093]
  401789:	xchg   edx,eax
  40178a:	mov    bh,0xf5
  40178c:	add    eax,0xe98824ff
  401791:	cld    
  401792:	pop    es
  401793:	das    
  401794:	out    dx,al
  401795:	rol    eax,cl
  401797:	xchg   ebx,eax
  401798:	sbb    BYTE PTR [esi+eiz*8+0x37],cl
  40179c:	adc    esp,DWORD PTR [eax]
  40179e:	inc    edx
  40179f:	mov    ah,0x2c
  4017a1:	mov    bh,0xe3
  4017a3:	inc    esp
  4017a4:	outs   dx,BYTE PTR ds:[esi]
  4017a5:	leave  
  4017a6:	push   eax
  4017a7:	in     eax,dx
  4017a8:	jae    0x4017a3
  4017aa:	and    bl,dh
  4017ac:	cmp    eax,0xcac986c2
  4017b1:	(bad)  
  4017b2:	aas    
  4017b3:	sub    al,0x5a
  4017b5:	(bad)  
  4017b6:	(bad)  [esi+0x7f789c0a]
  4017bc:	and    esi,DWORD PTR [ebp-0x77a55f4b]
  4017c2:	leave  
  4017c3:	sub    eax,0x859fc251
  4017c8:	clc    
  4017c9:	inc    ebp
  4017ca:	add    dl,ch
  4017cc:	shl    BYTE PTR [ebp-0x2e],cl
  4017cf:	push   esp
  4017d0:	or     DWORD PTR [esi+0x30],esp
  4017d3:	mov    ds:0x397efa5c,al
  4017d8:	fs ins DWORD PTR es:[edi],dx
  4017da:	mov    ds:0x1be9df90,eax
  4017df:	imul   ebx,DWORD PTR ds:0x6dc6f7dc,0xf45323b8
  4017e9:	push   0xffffffd7
  4017eb:	je     0x401805
  4017ed:	test   DWORD PTR [eax+0x30],0x27ffa2e3
  4017f4:	fistp  WORD PTR ds:0x1352be46
  4017fa:	and    eax,0x8ebb1827
  4017ff:	ins    BYTE PTR es:[edi],dx
  401800:	inc    eax
  401801:	jmp    0x571d8c20
  401806:	retf   
  401807:	xlat   BYTE PTR ds:[ebx]
  401808:	mov    ebp,0xd9f410c3
  40180d:	and    edx,esp
  40180f:	pop    edx
  401810:	fisttp WORD PTR [esi]
  401812:	imul   ecx,esp,0xffffffc1
  401815:	push   0xffffffc7
  401817:	out    dx,eax
  401818:	and    al,0xed
  40181a:	pop    ebp
  40181b:	sub    BYTE PTR [edx-0x30],0x2
  40181f:	fwait
  401820:	stos   BYTE PTR es:[edi],al
  401821:	lock (bad) 
  401823:	and    eax,0xd4dc4ce4
  401828:	adc    al,BYTE PTR [edx+0x4f]
  40182b:	mov    ch,0x53
  40182d:	jb     0x4017de
  40182f:	push   ss
  401830:	sub    al,bl
  401832:	outs   dx,DWORD PTR ds:[esi]
  401833:	scas   al,BYTE PTR es:[edi]
  401834:	adc    DWORD PTR [ebx-0x7aeb79f4],edx
  40183a:	and    esi,0x3
  40183d:	push   ebp
  40183e:	mov    edi,0x93308d97
  401843:	sub    al,BYTE PTR [edi]
  401845:	push   ecx
  401846:	push   ds
  401847:	dec    ecx
  401848:	cmp    al,0xe6
  40184a:	jns    0x401889
  40184c:	nop
  40184d:	jb     0x401845
  40184f:	je     0x401820
  401851:	jg     0x4017e8
  401853:	stos   BYTE PTR es:[edi],al
  401854:	add    eax,0x59b853db
  401859:	daa    
  40185a:	adc    al,0xd
  40185c:	fisub  DWORD PTR [ebx]
  40185e:	jl     0x401882
  401860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401861:	push   esi
  401862:	pop    ebx
  401863:	call   0xabe8:0xd457ca30
  40186a:	test   eax,ebp
  40186c:	inc    esi
  40186d:	repz fstp DWORD PTR [ebx]
  401870:	out    0x60,al
  401872:	gs test edx,eax
  401875:	das    
  401876:	sub    DWORD PTR [esi-0x69],esp
  401879:	push   eax
  40187a:	arpl   WORD PTR [eax-0xf],di
  40187d:	pop    eax
  40187e:	pop    ecx
  40187f:	jnp    0x40187c
  401881:	sub    eax,DWORD PTR [ecx+0x65ba4d04]
  401887:	push   edi
  401888:	inc    ebx
  401889:	imul   esp,DWORD PTR [eax+eax*2-0x6bf3812c],0x965232d3
  401894:	or     ah,dl
  401896:	push   eax
  401897:	and    edi,ecx
  401899:	sub    eax,0x5c3172ec
  40189e:	mov    bl,0x97
  4018a0:	and    DWORD PTR [esi],0xe9e0fdd8
  4018a6:	mov    bl,0x51
  4018a8:	stos   BYTE PTR es:[edi],al
  4018a9:	dec    esp
  4018aa:	ins    BYTE PTR es:[edi],dx
  4018ab:	push   edi
  4018ac:	cld    
  4018ad:	inc    edx
  4018ae:	xor    edi,ebp
  4018b0:	inc    ebx
  4018b1:	push   cs
  4018b2:	test   BYTE PTR [edi-0x72],ch
  4018b5:	mov    al,0xf3
  4018b7:	or     al,0xc4
  4018b9:	addr16 fsubrp st(0),st
  4018bc:	mov    ds:0xe4438462,eax
  4018c1:	call   0x84d2:0x7fc30438
  4018c8:	jnp    0x4018bb
  4018ca:	call   esi
  4018cc:	sub    al,0x9b
  4018ce:	cli    
  4018cf:	inc    edi
  4018d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018d1:	(bad)  
  4018d2:	int3   
  4018d3:	inc    ebp
  4018d4:	pop    ebx
  4018d5:	sbb    dh,ah
  4018d7:	sbb    eax,DWORD PTR [eax]
  4018d9:	inc    ebp
  4018da:	fs out dx,al
  4018dc:	iret   
  4018dd:	cmp    dl,ah
  4018df:	repz js 0x40187a
  4018e2:	stc    
  4018e3:	test   eax,0x721522c
  4018e8:	outs   dx,BYTE PTR ds:[esi]
  4018e9:	out    dx,al
  4018ea:	test   DWORD PTR [ebx],eax
  4018ec:	movq   QWORD PTR [edx-0x492be821],mm7
  4018f3:	adc    BYTE PTR [eax-0xf38f41c],dh
  4018f9:	ins    BYTE PTR es:[edi],dx
  4018fa:	push   eax
  4018fb:	aaa    
  4018fc:	and    edi,DWORD PTR [esi]
  4018fe:	addr16 into 
  401900:	test   al,0x2e
  401902:	loop   0x4018b0
  401904:	or     al,BYTE PTR [ebx+eiz*1-0x3f]
  401908:	daa    
  401909:	neg    edx
  40190b:	fisub  DWORD PTR [esi+0x11]
  40190e:	add    al,0x11
  401910:	sbb    cl,BYTE PTR [ecx+ebp*2-0x1d0a3aec]
  401917:	mov    esp,0xb5b1c0e1
  40191c:	les    edi,FWORD PTR [edi+0x5f]
  40191f:	fnsave [esi]
  401921:	out    0x70,eax
  401923:	and    BYTE PTR [ebx+ecx*1-0x5e],ch
  401927:	jl     0x4018f9
  401929:	and    BYTE PTR [edi-0x1f4c6aa0],ch
  40192f:	jo     0x401994
  401931:	cmp    DWORD PTR [ebp+0x3e02280b],eax
  401937:	jge    0x4018d3
  401939:	push   eax
  40193a:	pushf  
  40193b:	les    esp,FWORD PTR [edi-0x2d]
  40193e:	scas   al,BYTE PTR es:[edi]
  40193f:	retf   0x224
  401942:	mov    ecx,0x9056e753
  401947:	sub    BYTE PTR [ebx+0x57],bh
  40194a:	arpl   WORD PTR [ebx],cx
  40194c:	mov    bh,0xb7
  40194e:	std    
  40194f:	sbb    bl,bl
  401951:	cmp    al,ch
  401953:	outs   dx,DWORD PTR ds:[esi]
  401954:	mov    esp,0x3a15f2cf
  401959:	push   es
  40195a:	add    DWORD PTR [ebx-0x29d30448],eax
  401960:	inc    ecx
  401961:	dec    ecx
  401962:	pushf  
  401963:	fdivrp st(2),st
  401965:	mov    edx,0xcefe508
  40196a:	es and ecx,ebp
  40196d:	aam    0xa1
  40196f:	mov    bl,0x3b
  401971:	aaa    
  401972:	sbb    ebx,DWORD PTR [ecx]
  401974:	(bad)  
  401976:	stc    
  401977:	xor    BYTE PTR [ebx],cl
  401979:	or     ch,BYTE PTR [ecx+0x51]
  40197c:	mov    bh,0x11
  40197e:	cmp    al,0xd0
  401980:	ins    BYTE PTR es:[edi],dx
  401981:	or     al,0x8c
  401983:	xchg   edx,eax
  401984:	pop    ebp
  401985:	adc    eax,0xaf431288
  40198a:	repnz xor DWORD PTR [edx-0x17],esi
  40198e:	mov    ds:0xf56d3fba,al
  401993:	pop    eax
  401994:	dec    esi
  401995:	rcl    ah,0xbc
  401998:	cdq    
  401999:	lock aaa 
  40199b:	and    al,0xc1
  40199d:	jns    0x4019bc
  40199f:	lds    ebp,FWORD PTR [esi+ebp*1-0x55]
  4019a3:	mov    dl,0x78
  4019a5:	sub    al,BYTE PTR ds:0x4f3bce39
  4019ab:	iret   
  4019ac:	xchg   esi,eax
  4019ad:	dec    edi
  4019ae:	(bad)  
  4019af:	icebp  
  4019b0:	inc    ebp
  4019b1:	and    DWORD PTR [esi-0x2d],edx
  4019b4:	jge    0x4019a7
  4019b6:	add    DWORD PTR [edx],0xb89e013d
  4019bc:	push   esp
  4019bd:	jp     0x40197d
  4019bf:	pop    ss
  4019c0:	and    DWORD PTR [edi],ebp
  4019c2:	(bad)  
  4019c3:	cmp    eax,0x6918bc36
  4019c8:	fnsave [edi+0x318df02e]
  4019ce:	jo     0x401964
  4019d0:	out    0xab,al
  4019d2:	pop    esp
  4019d3:	dec    eax
  4019d4:	pop    ebp
  4019d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019d6:	mov    al,ds:0x19f8f532
  4019db:	mov    ebx,0x30cc62a4
  4019e0:	xchg   ebx,eax
  4019e1:	mov    edx,0x40e9ca2c
  4019e6:	mov    ah,0x9b
  4019e8:	fild   DWORD PTR [edi]
  4019ea:	lock cld 
  4019ec:	clc    
  4019ed:	cmp    esi,DWORD PTR [ecx+0x42429505]
  4019f3:	aad    0x8f
  4019f5:	inc    ecx
  4019f6:	xchg   ebx,eax
  4019f7:	sbb    BYTE PTR [eax-0x5d],cl
  4019fa:	adc    ah,BYTE PTR [ecx]
  4019fc:	mov    ebx,0x7ddc5d21
  401a01:	push   ebx
  401a02:	adc    BYTE PTR [eax-0x2f],dl
  401a05:	pop    ds
  401a06:	mov    DWORD PTR [ecx],esi
  401a08:	add    esp,eax
  401a0a:	jns    0x401a7b
  401a0c:	mov    bh,0x30
  401a0e:	add    edi,esi
  401a10:	popa   
  401a11:	aaa    
  401a12:	outs   dx,DWORD PTR ds:[esi]
  401a13:	push   ebp
  401a14:	ds jo  0x401a26
  401a17:	retf   0x3ac
  401a1a:	ins    DWORD PTR es:[edi],dx
  401a1b:	xchg   edx,eax
  401a1c:	jns    0x4019e3
  401a1e:	popf   
  401a1f:	inc    eax
  401a20:	(bad)  
  401a21:	sbb    eax,ebx
  401a23:	mov    ebp,0xadc630ff
  401a28:	out    0x53,al
  401a2a:	inc    esi
  401a2b:	pop    ebx
  401a2c:	cmp    bl,al
  401a2e:	std    
  401a2f:	xchg   esi,eax
  401a30:	xchg   edx,eax
  401a31:	aas    
  401a32:	int3   
  401a33:	data16 mov ah,0x5f
  401a36:	cmp    bh,BYTE PTR [edi+edi*4+0x3e]
  401a3a:	mov    WORD PTR [edi-0xf55cff],ds
  401a40:	mov    eax,ds:0xa638ca48
  401a45:	and    esp,ebx
  401a47:	mov    ebp,0x8f829a55
  401a4c:	pop    es
  401a4d:	rcr    BYTE PTR [esi],cl
  401a4f:	cli    
  401a50:	popf   
  401a51:	mov    ds:0x2bee0d9b,al
  401a56:	mov    bl,0x45
  401a58:	retf   0xe29c
  401a5b:	sbb    BYTE PTR [edi+0x8f213dc],cl
  401a61:	ror    eax,cl
  401a63:	mov    ah,0x1c
  401a65:	mov    cl,0xf5
  401a67:	ror    BYTE PTR [edx-0x14],cl
  401a6a:	inc    esp
  401a6b:	outs   dx,BYTE PTR ds:[esi]
  401a6c:	push   0xffffffbd
  401a6e:	mov    ds:0xc6b36a56,eax
  401a73:	inc    eax
  401a74:	arpl   WORD PTR [ebp-0x4673bc82],sp
  401a7a:	push   0xfffffff7
  401a7c:	or     dl,BYTE PTR [edx+edi*1-0x6e]
  401a80:	dec    ebp
  401a81:	cmp    esi,ecx
  401a83:	jmp    0x401a94
  401a85:	and    ebp,DWORD PTR [ebp-0x3234b024]
  401a8b:	push   0x7e
  401a8d:	inc    ecx
  401a8e:	out    dx,al
  401a8f:	cmp    eax,0x862a574a
  401a94:	inc    ecx
  401a95:	jecxz  0x401ad9
  401a97:	imul   ebx,DWORD PTR [ebx],0x5f
  401a9a:	push   cs
  401a9b:	mov    ebp,0x9b28abf7
  401aa0:	daa    
  401aa1:	sub    edx,DWORD PTR [ecx+0x55c31fe6]
  401aa7:	xchg   esp,eax
  401aa8:	mov    eax,0x259553b9
  401aad:	push   esi
  401aae:	cmp    bl,dh
  401ab0:	push   ebx
  401ab1:	test   ch,0x6a
  401ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ab5:	sahf   
  401ab6:	sbb    dl,ah
  401ab8:	xchg   DWORD PTR [edx-0x6d787021],eax
  401abe:	adc    al,0x50
  401ac0:	test   al,0x6d
  401ac2:	loopne 0x401ae9
  401ac4:	adc    al,0x71
  401ac6:	jmp    0xc1a1:0x3bccd36
  401acd:	int    0x2f
  401acf:	pop    ecx
  401ad0:	daa    
  401ad1:	or     DWORD PTR [ebx+0x7d],ebp
  401ad4:	pop    eax
  401ad5:	aas    
  401ad6:	shr    BYTE PTR [eax],cl
  401ad8:	test   DWORD PTR [ebp-0x64b9ffb0],ebx
  401ade:	in     eax,dx
  401adf:	mov    ah,0xd
  401ae1:	mov    edx,0xa6448400
  401ae6:	sub    cl,ah
  401ae8:	mov    fs,WORD PTR [ebx+0x19]
  401aeb:	mov    edx,0xcf9ae80e
  401af0:	pop    eax
  401af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401af2:	jns    0x401b2b
  401af4:	sahf   
  401af5:	in     eax,0x4e
  401af7:	dec    edi
  401af8:	addr16 mov eax,ds:0x59e8
  401afc:	popa   
  401afd:	inc    eax
  401afe:	xlat   BYTE PTR ds:[ebx]
  401aff:	dec    ebp
  401b00:	ins    DWORD PTR es:[edi],dx
  401b01:	adc    ebp,ebp
  401b03:	retf   
  401b04:	pop    es
  401b05:	loope  0x401acc
  401b07:	lea    ecx,[esi+0x7d814621]
  401b0d:	xchg   esp,eax
  401b0e:	icebp  
  401b0f:	push   ds
  401b10:	lods   eax,DWORD PTR ds:[esi]
  401b11:	mov    esi,0x7f76fb5a
  401b16:	pop    eax
  401b17:	pop    ecx
  401b18:	or     eax,0x28cad8a2
  401b1d:	shr    DWORD PTR [ebx-0x4e],0xd3
  401b21:	xlat   BYTE PTR ds:[ebx]
  401b22:	call   0x23e20cba
  401b27:	retf   0x57cd
  401b2a:	mov    ds:0xcac59920,al
  401b2f:	sub    dl,dl
  401b31:	add    al,0xda
  401b33:	inc    edx
  401b34:	fdivrp st(4),st
  401b36:	mov    ebp,edx
  401b38:	(bad)
  401b3b:	or     cl,dh
  401b3d:	shl    ecx,0x5f
  401b40:	rcl    BYTE PTR [ebp-0xe],cl
  401b43:	scas   al,BYTE PTR es:[edi]
  401b44:	ficom  DWORD PTR [ecx-0x18]
  401b47:	call   0x8494638d
  401b4c:	sub    BYTE PTR [esi+0x1a1b3b30],ch
  401b52:	or     DWORD PTR [edx+ebx*8+0x58],edi
  401b56:	les    esp,FWORD PTR ds:0x71804fa4
  401b5c:	pop    edi
  401b5d:	add    al,0x14
  401b5f:	sub    BYTE PTR [edx+edx*4+0x18],ah
  401b63:	call   0xa73b:0x34072581
  401b6a:	pop    ebp
  401b6b:	cli    
  401b6c:	push   edi
  401b6d:	and    esp,edx
  401b6f:	inc    edi
  401b70:	mov    WORD PTR [ebx],cs
  401b72:	push   ebp
  401b73:	adc    BYTE PTR [edi+ecx*4-0x5],al
  401b77:	arpl   sp,ax
  401b79:	inc    esi
  401b7a:	js     0x401bdf
  401b7c:	icebp  
  401b7d:	inc    ebx
  401b7e:	fidiv  DWORD PTR [edx]
  401b80:	sbb    eax,0x50bcf9af
  401b85:	je     0x401bf1
  401b87:	sbb    edi,edi
  401b89:	pop    edi
  401b8a:	push   0x3d
  401b8c:	bound  edx,QWORD PTR [ebx-0x3e94104c]
  401b92:	jp     0x401b91
  401b94:	cwde   
  401b95:	mov    bh,0xb2
  401b97:	xchg   ebx,eax
  401b98:	loop   0x401b40
  401b9a:	push   ebp
  401b9b:	(bad)  
  401b9c:	cs push edx
  401b9e:	jae    0x401b8e
  401ba0:	push   0xffffff86
  401ba2:	cli    
  401ba3:	pop    eax
  401ba4:	cmc    
  401ba5:	inc    eax
  401ba6:	test   eax,0x6037ba98
  401bab:	ss inc esp
  401bad:	(bad)  
  401bae:	push   cs
  401baf:	push   0xffffffe9
  401bb1:	adc    dh,BYTE PTR [edx]
  401bb3:	test   DWORD PTR [edi+0x4a5f910e],esp
  401bb9:	fist   DWORD PTR [eax+0x643ccc30]
  401bbf:	and    dl,BYTE PTR [edx+0x61d733d3]
  401bc5:	cmp    BYTE PTR [ebx+0x6c9a08bd],al
  401bcb:	imul   BYTE PTR [esi]
  401bcd:	pop    ebp
  401bce:	mov    ch,0x74
  401bd0:	cmp    al,BYTE PTR [eax+ebx*4-0x21]
  401bd4:	test   eax,0xf20d651f
  401bd9:	push   esp
  401bda:	mov    edx,0x7c76bff5
  401bdf:	push   esi
  401be0:	mov    fs,WORD PTR [ecx-0x1c]
  401be3:	sar    DWORD PTR [ebp-0x1cd784a9],0x40
  401bea:	repnz mov dh,0x2c
  401bed:	cli    
  401bee:	sbb    cl,bh
  401bf0:	fwait
  401bf1:	lods   eax,DWORD PTR ds:[esi]
  401bf2:	dec    ebp
  401bf3:	push   edi
  401bf4:	xchg   ecx,eax
  401bf5:	adc    al,0x44
  401bf7:	cli    
  401bf8:	imul   ebp,DWORD PTR [edi+0x34],0x489eb236
  401bff:	add    bh,BYTE PTR [edi]
  401c01:	xor    DWORD PTR [ebp-0x41],edi
  401c04:	mov    esp,0x302bcb62
  401c09:	pop    ecx
  401c0a:	stos   DWORD PTR es:[edi],eax
  401c0b:	pushw  0xffd2
  401c0e:	clc    
  401c0f:	jmp    0x23f7:0x5ca2b595
  401c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c17:	test   BYTE PTR [ebx+0x7],cl
  401c1a:	clc    
  401c1b:	pop    eax
  401c1c:	push   eax
  401c1d:	fs sub al,0x24
  401c20:	sbb    BYTE PTR [ecx],ch
  401c22:	dec    eax
  401c23:	fwait
  401c24:	push   edi
  401c25:	icebp  
  401c26:	mov    eax,0xb2e3a288
  401c2b:	xchg   esi,eax
  401c2c:	inc    BYTE PTR [ecx]
  401c2e:	adc    eax,0xe21caefd
  401c33:	pop    ebx
  401c34:	(bad)  
  401c35:	ret    0x4c8e
  401c38:	retf   0x7710
  401c3b:	loope  0x401c82
  401c3d:	sub    edx,DWORD PTR [esi]
  401c3f:	and    BYTE PTR [eax+0x28968084],bl
  401c45:	lahf   
  401c46:	js     0x401c17
  401c48:	cwde   
  401c49:	repnz cmp BYTE PTR [esi],bl
  401c4c:	push   edx
  401c4d:	pop    es
  401c4e:	xor    eax,0x7463e6cb
  401c53:	pop    cx
  401c55:	shr    DWORD PTR [edi],1
  401c57:	mov    bl,0xae
  401c59:	outs   dx,BYTE PTR ds:[esi]
  401c5a:	pop    ss
  401c5b:	mul    DWORD PTR [ebx]
  401c5d:	aaa    
  401c5e:	(bad)  
  401c5f:	sbb    edi,edi
  401c61:	in     al,0xbd
  401c63:	and    ecx,DWORD PTR [eax+0x7643567d]
  401c69:	mov    eax,0x21aef5b3
  401c6e:	dec    ebp
  401c6f:	shr    ecx,1
  401c71:	inc    esp
  401c72:	cdq    
  401c73:	fdivr  DWORD PTR [edx]
  401c75:	retf   
  401c76:	cmp    esi,ebp
  401c78:	jb     0x401c25
  401c7a:	pop    ebp
  401c7b:	outs   dx,BYTE PTR ds:[esi]
  401c7c:	mov    eax,0x959cf64a
  401c81:	inc    edi
  401c82:	imul   ebx,DWORD PTR [ecx],0xffffff9b
  401c85:	aas    
  401c86:	mov    ch,0x6
  401c88:	mov    dh,0x2d
  401c8a:	cmp    eax,0xa6ee7d74
  401c8f:	adc    ebp,DWORD PTR [ebx]
  401c91:	popf   
  401c92:	enter  0xb555,0xd9
  401c96:	loope  0x401cc1
  401c98:	out    dx,al
  401c99:	lods   al,BYTE PTR ds:[esi]
  401c9a:	and    al,0x21
  401c9c:	inc    eax
  401c9d:	mov    dh,0xf6
  401c9f:	into   
  401ca0:	(bad)  
  401ca1:	push   edx
  401ca2:	dec    ebx
  401ca3:	dec    esi
  401ca4:	(bad)  [ebp-0x5d]
  401ca7:	iret   
  401ca8:	cwde   
  401ca9:	jmp    0x3de3c8e0
  401cae:	xchg   esp,eax
  401caf:	and    DWORD PTR [ecx-0xe],ecx
  401cb2:	pop    ss
  401cb3:	mov    ebp,0xaca48182
  401cb8:	mov    ebp,ds
  401cba:	add    DWORD PTR [ebx+edi*8+0x11],0xb6f9c99b
  401cc2:	dec    eax
  401cc3:	push   ebp
  401cc4:	xor    DWORD PTR [ecx-0x789c3900],eax
  401cca:	popa   
  401ccb:	add    BYTE PTR [edi],al
  401ccd:	(bad)  
  401cce:	popf   
  401ccf:	or     bh,BYTE PTR [ebp+eiz*8-0x5b]
  401cd3:	jne    0x401ced
  401cd5:	popa   
  401cd6:	xchg   esi,eax
  401cd7:	pop    ebx
  401cd8:	or     DWORD PTR [ecx],0x72
  401cdb:	fs mov ebp,tr3
  401cdf:	(bad)  
  401ce0:	pushw  ds
  401ce2:	cmp    dl,BYTE PTR [ecx]
  401ce4:	jae    0x401d4e
  401ce6:	loopne 0x401d31
  401ce8:	enter  0x3b11,0x7f
  401cec:	xchg   esi,eax
  401ced:	iret   
  401cee:	pushf  
  401cef:	jl     0x401cb0
  401cf1:	xchg   edi,eax
  401cf2:	imul   eax,DWORD PTR [ebx+0x449374a1],0x22
  401cf9:	mov    bl,0x45
  401cfb:	or     DWORD PTR [ebx-0x4],0x4d6a87ae
  401d02:	outs   dx,BYTE PTR ds:[esi]
  401d03:	add    ebx,DWORD PTR [edi-0xc]
  401d06:	cdq    
  401d07:	xchg   BYTE PTR [esi],cl
  401d09:	or     eax,0x478959b
  401d0e:	jge    0x401d2a
  401d10:	xchg   edx,eax
  401d11:	dec    esp
  401d12:	jle    0x401d22
  401d14:	ins    BYTE PTR es:[edi],dx
  401d15:	in     eax,dx
  401d16:	mov    ch,0x49
  401d18:	stc    
  401d19:	enter  0x4e58,0x56
  401d1d:	dec    esi
  401d1e:	stos   BYTE PTR es:[edi],al
  401d1f:	int3   
  401d20:	jl     0x401d8f
  401d22:	mov    ebx,0xe89386c9
  401d27:	fistp  WORD PTR [ebx-0x58]
  401d2a:	pop    esi
  401d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d2c:	aaa    
  401d2d:	adc    al,0x73
  401d2f:	ins    BYTE PTR es:[edi],dx
  401d30:	arpl   WORD PTR [edi+0x4955ece2],ax
  401d36:	shr    dh,1
  401d38:	sbb    al,0x95
  401d3a:	pop    ds
  401d3b:	sub    eax,eax
  401d3d:	xchg   edi,eax
  401d3e:	and    ebp,DWORD PTR [ebp-0x503e76ea]
  401d44:	cmp    DWORD PTR [edi],ecx
  401d46:	outs   dx,DWORD PTR ds:[esi]
  401d47:	ins    DWORD PTR es:[edi],dx
  401d48:	mov    bh,0xa9
  401d4a:	jmp    0x7c8a83cd
  401d4f:	and    eax,0xd6f5f4a8
  401d54:	pop    edx
  401d55:	xchg   BYTE PTR [eax],cl
  401d57:	mov    al,ds:0xeea09a64
  401d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d5d:	jb     0x401d4d
  401d5f:	enter  0x5c3a,0xd9
  401d63:	ins    DWORD PTR es:[edi],dx
  401d64:	fs (bad) 
  401d66:	lock out 0x3d,al
  401d69:	pop    ds
  401d6a:	mov    DWORD PTR [ebx-0x15],edi
  401d6d:	call   0x7b60:0x5ccccc28
  401d74:	jnp    0x401d12
  401d76:	jmp    0xa9f8:0x812471ca
  401d7d:	into   
  401d7e:	test   eax,0x9c414e06
  401d83:	int    0x5d
  401d85:	mov    eax,ds:0xcddbdfff
  401d8a:	sub    ah,BYTE PTR [eax+0x20]
  401d8d:	jae    0x401dfc
  401d8f:	and    eax,0xfdb02d67
  401d94:	sbb    DWORD PTR [esi-0x24],ebp
  401d97:	push   es
  401d98:	xchg   bp,ax
  401d9a:	loop   0x401dfe
  401d9c:	push   ecx
  401d9d:	xchg   esi,eax
  401d9e:	mov    DWORD PTR [edx],edi
  401da0:	or     DWORD PTR [ebx+eiz*4],esp
  401da3:	jo     0x401d2b
  401da5:	mov    al,BYTE PTR [ebx-0xc]
  401da8:	pop    ds
  401da9:	test   cl,0xcf
  401dac:	popa   
  401dad:	js     0x401d59
  401daf:	xor    al,0x53
  401db1:	retf   0x2fff
  401db4:	test   BYTE PTR [eax+0x19976343],cl
  401dba:	sbb    edi,esp
  401dbc:	jg     0x401d86
  401dbe:	in     eax,0xd
  401dc0:	ret    0xd11c
  401dc3:	pushf  
  401dc4:	pop    ss
  401dc5:	outs   dx,DWORD PTR ds:[esi]
  401dc6:	lods   eax,DWORD PTR ds:[esi]
  401dc7:	mov    ds:0x314be74d,al
  401dcc:	and    edx,ecx
  401dce:	fdivrp st(3),st
  401dd1:	jmp    0x401e08
  401dd3:	push   ecx
  401dd4:	fcomi  st,st(2)
  401dd6:	es and al,0xe2
  401dd9:	cli    
  401dda:	sbb    dl,cl
  401ddc:	(bad)  
  401ddd:	jmp    0x3fdf826b
  401de2:	js     0x401db2
  401de4:	jmp    0x6548fce0
  401de9:	and    DWORD PTR [ecx-0x57],ebp
  401dec:	and    al,0x9f
  401dee:	inc    ebp
  401def:	fnstenv [edx+0x7e]
  401df2:	shl    DWORD PTR [edx],1
  401df4:	sub    BYTE PTR [eax-0x6c64dd48],ch
  401dfa:	push   ss
  401dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dfc:	cmp    al,0x4d
  401dfe:	push   ss
  401dff:	test   DWORD PTR [ebx],0x3e37f62
  401e05:	or     al,0xfd
  401e07:	pop    ebx
  401e08:	std    
  401e09:	stos   BYTE PTR es:[edi],al
  401e0a:	je     0x401e10
  401e0c:	loop   0x401dcf
  401e0e:	(bad)  
  401e0f:	inc    eax
  401e10:	jg     0x401dd1
  401e12:	jne    0x401e65
  401e14:	fbstp  TBYTE PTR [esi]
  401e16:	js     0x401e71
  401e18:	mov    ch,0x79
  401e1a:	xor    BYTE PTR [edi-0x79],cl
  401e1d:	mov    ebp,0xf67f834b
  401e22:	jbe    0x401df7
  401e24:	mov    eax,0xf748949c
  401e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e2a:	pop    ebx
  401e2b:	fild   QWORD PTR [ecx-0x745ab228]
  401e31:	aad    0x30
  401e33:	js     0x401de7
  401e35:	js     0x401df5
  401e37:	call   0x75e19288
  401e3c:	cmp    ah,0x15
  401e3f:	pop    esi
  401e40:	dec    esi
  401e41:	inc    esi
  401e42:	push   ebp
  401e43:	jo     0x401e18
  401e45:	sahf   
  401e46:	push   0x3
  401e48:	inc    edi
  401e49:	sahf   
  401e4a:	cmc    
  401e4b:	mov    bl,0xb0
  401e4d:	jle    0x401e3b
  401e4f:	ja     0x401e63
  401e51:	fnstsw WORD PTR [ecx-0x5071d458]
  401e57:	sahf   
  401e58:	repz repz arpl WORD PTR [edx+0x6b],ax
  401e5d:	inc    esi
  401e5e:	neg    ebx
  401e60:	push   0xffffffc9
  401e62:	or     dh,BYTE PTR [eax-0x21]
  401e65:	dec    ebp
  401e66:	lea    eax,[eax]
  401e68:	not    BYTE PTR [ebp+0x10]
  401e6b:	mov    al,ds:0x7dc5a492
  401e70:	xchg   ebp,eax
  401e71:	push   ebx
  401e72:	mov    bl,0x1c
  401e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e75:	mov    edx,0x3080931a
  401e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e7b:	inc    edx
  401e7c:	popa   
  401e7d:	outs   dx,DWORD PTR ds:[esi]
  401e7e:	mov    ah,0xbf
  401e80:	fs in  eax,0x2b
  401e83:	mov    edx,0xea47d3a9
  401e88:	sahf   
  401e89:	shr    BYTE PTR [ebx],cl
  401e8b:	inc    esp
  401e8c:	out    dx,al
  401e8d:	dec    eax
  401e8e:	dec    ecx
  401e8f:	inc    edx
  401e90:	inc    ecx
  401e91:	mov    ds:0x1952db5,eax
  401e96:	cmp    dh,al
  401e98:	aad    0xca
  401e9a:	das    
  401e9b:	dec    BYTE PTR [edx]
  401e9d:	xlat   BYTE PTR ds:[ebx]
  401e9e:	in     eax,dx
  401e9f:	rcr    dh,cl
  401ea1:	pop    ebp
  401ea2:	mov    dh,0xf1
  401ea4:	mov    ecx,DWORD PTR [eax]
  401ea6:	mov    eax,0xb811e107
  401eab:	call   0x9537c8fc
  401eb0:	sub    DWORD PTR [edx+0x73fb2d4b],ebx
  401eb6:	outs   dx,BYTE PTR ds:[esi]
  401eb7:	mov    al,ds:0x7a92d5c6
  401ebc:	mov    esi,0x1e426d6d
  401ec1:	and    al,0x4d
  401ec3:	sub    al,0xb8
  401ec5:	not    DWORD PTR [esi-0xc]
  401ec8:	pop    esp
  401ec9:	fdivr  st(5),st
  401ecb:	sti    
  401ecc:	ror    DWORD PTR [ebx],cl
  401ece:	in     eax,dx
  401ecf:	shl    BYTE PTR [esi],cl
  401ed1:	push   es
  401ed2:	fs mov bl,0x30
  401ed5:	cmp    DWORD PTR [edx-0x54],eax
  401ed8:	push   edi
  401ed9:	mov    edi,0xc54c8fe0
  401ede:	aad    0xfe
  401ee0:	push   0x8efd3b9f
  401ee5:	outs   dx,BYTE PTR ds:[esi]
  401ee6:	lods   eax,DWORD PTR ds:[esi]
  401ee7:	retf   
  401ee8:	or     bl,bh
  401eea:	jns    0x401e97
  401eec:	outs   dx,DWORD PTR ds:[esi]
  401eed:	push   0x1e
  401eef:	or     eax,0x555fdc92
  401ef4:	mov    BYTE PTR [ebp-0x18],bl
  401ef7:	(bad)  
  401ef8:	push   ebx
  401ef9:	mov    ebx,0xbd7ecbac
  401efe:	jmp    0x71ca:0x24bcf923
  401f05:	mov    al,0x48
  401f07:	xchg   esi,eax
  401f08:	adc    DWORD PTR [edx],ebp
  401f0a:	fist   DWORD PTR [edi]
  401f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f0d:	in     eax,0x34
  401f0f:	jmp    0xbfc2:0xffa91486
  401f16:	stos   BYTE PTR es:[edi],al
  401f17:	cmp    DWORD PTR [ecx-0x6f],0xdbfac3f
  401f1e:	cwde   
  401f1f:	cs pop ecx
  401f21:	lds    esp,FWORD PTR [ecx]
  401f23:	add    edx,DWORD PTR [edx-0x59]
  401f26:	rcl    dh,cl
  401f28:	adc    ebp,DWORD PTR [eax+eiz*4+0x7b]
  401f2c:	int3   
  401f2d:	inc    edx
  401f2e:	lahf   
  401f2f:	pop    edi
  401f30:	int3   
  401f31:	ret    
  401f32:	inc    edi
  401f33:	dec    ebp
  401f34:	mov    esp,0x3bb564da
  401f39:	ss (bad) 
  401f3b:	push   edi
  401f3c:	xchg   esp,eax
  401f3d:	push   cs
  401f3e:	adc    al,0x60
  401f40:	call   0x5ae33b55
  401f45:	sub    al,0xf1
  401f47:	imul   ebp,DWORD PTR ds:0xcc1854b6,0xffffffbc
  401f4e:	popa   
  401f4f:	sbb    eax,0x7a99a5fd
  401f54:	ficomp WORD PTR [ebp-0x73]
  401f57:	hlt    
  401f58:	ins    DWORD PTR es:[edi],dx
  401f59:	pmaxsw mm4,QWORD PTR [ebx-0x31]
  401f5d:	out    dx,al
  401f5e:	add    DWORD PTR [ebp-0x68],ebp
  401f61:	jmp    ebp
  401f63:	pop    ebp
  401f64:	sub    al,BYTE PTR [eax]
  401f66:	mov    eax,0xc1bb1d1a
  401f6b:	rcr    BYTE PTR [eax],1
  401f6d:	popa   
  401f6e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  401f70:	hlt    
  401f71:	lods   eax,DWORD PTR ds:[esi]
  401f72:	mov    gs,WORD PTR [esi+eax*1+0x74]
  401f76:	(bad)  
  401f77:	xchg   ecx,eax
  401f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f79:	test   al,0xa7
  401f7b:	push   eax
  401f7c:	test   BYTE PTR [eax],dh
  401f7e:	or     BYTE PTR [eax+0xf9414e7],0x81
  401f85:	fidivr DWORD PTR [ecx-0x30]
  401f88:	add    eax,0xdb852f0d
  401f8d:	out    dx,eax
  401f8e:	push   es
  401f8f:	in     al,dx
  401f90:	jmp    0x401f7b
  401f92:	lods   eax,DWORD PTR ds:[esi]
  401f93:	test   DWORD PTR [edi-0x48],0x125b095
  401f9a:	cmp    al,0xda
  401f9c:	aas    
  401f9d:	adc    esp,ebp
  401f9f:	mov    ah,0x7b
  401fa1:	pop    eax
  401fa2:	shr    BYTE PTR [edx+0x33],0xb9
  401fa6:	dec    ecx
  401fa7:	rcl    dl,1
  401fa9:	xchg   esi,eax
  401faa:	jmp    0x401fcc
  401fac:	cmp    eax,0xd68fe0b4
  401fb1:	push   ds
  401fb2:	iret   
  401fb3:	loop   0x402003
  401fb5:	in     eax,0x4d
  401fb7:	mov    WORD PTR [esi],?
  401fb9:	es inc edx
  401fbb:	int    0x1d
  401fbd:	dec    eax
  401fbe:	mul    BYTE PTR [edx+0x415b83d2]
  401fc4:	jmp    edx
  401fc6:	sbb    DWORD PTR [esi],ebp
  401fc8:	out    0x45,eax
  401fca:	pop    edx
  401fcb:	pop    ecx
  401fcc:	pop    es
  401fcd:	push   0xffffffce
  401fcf:	mov    edx,0xbaedc4f0
  401fd4:	and    edi,esp
  401fd6:	aad    0x75
  401fd8:	or     DWORD PTR [esi+0x22],esp
  401fdb:	xchg   edx,eax
  401fdc:	rcr    DWORD PTR ds:0xe0226dda,cl
  401fe2:	mov    ebx,0x7d1b3a1a
  401fe7:	lods   al,BYTE PTR ds:[esi]
  401fe8:	mov    ch,0xd6
  401fea:	jecxz  0x401f9f
  401fec:	stc    
  401fed:	retf   0x7c68
  401ff0:	adc    BYTE PTR [eax-0x2da206a0],bh
  401ff6:	jbe    0x401fb6
  401ff8:	fwait
  401ff9:	sti    
  401ffa:	xchg   DWORD PTR [eax+ebp*1],ebx
  401ffd:	pop    edx
  401ffe:	mov    eax,ds:0xdb3fa3ca
  402003:	fstp   QWORD PTR [esi]
  402005:	into   
  402006:	out    dx,eax
  402007:	add    al,0x4c
  402009:	sub    DWORD PTR [ebx+eiz*4-0x19ce0fbc],0x1d
  402011:	or     ch,BYTE PTR [esi-0x2d]
  402014:	xor    DWORD PTR [ebx+0x4c],esp
  402017:	jle    0x401fde
  402019:	lods   al,BYTE PTR ds:[esi]
  40201a:	mov    eax,ds:0xe9702da2
  40201f:	ret    0xed1b
  402022:	jecxz  0x40206b
  402024:	push   ds
  402025:	popa   
  402026:	in     al,dx
  402027:	xor    ebx,DWORD PTR [ebp+0x4e1acbca]
  40202d:	or     esp,ecx
  40202f:	fisub  DWORD PTR [ebx+0x20]
  402032:	shr    BYTE PTR [ecx+0x6382c5b2],cl
  402038:	mov    ecx,0xa99a5b92
  40203d:	pushf  
  40203e:	add    eax,0x59ea59e2
  402043:	xlat   BYTE PTR ds:[ebx]
  402044:	ins    DWORD PTR es:[edi],dx
  402045:	(bad)  
  402046:	test   BYTE PTR [esi-0x64],0xe2
  40204a:	mov    dh,cl
  40204c:	dec    ecx
  40204d:	rcr    DWORD PTR [eax+0x41bca224],cl
  402053:	pop    edx
  402054:	fidiv  WORD PTR [esi-0x7b]
  402057:	or     eax,0x8460c7a0
  40205c:	loope  0x402098
  40205e:	and    esi,ebx
  402060:	mov    BYTE PTR [edi-0x3aa62025],dh
  402066:	or     ah,BYTE PTR [ecx+0x5badcfee]
  40206c:	mov    bh,0xa9
  40206e:	mov    ebp,0x9218a654
  402073:	ins    BYTE PTR es:[edi],dx
  402074:	dec    BYTE PTR [ebp-0x49]
  402077:	jno    0x4020df
  402079:	dec    eax
  40207a:	fs inc ebp
  40207c:	cwde   
  40207d:	hlt    
  40207e:	fsubr  QWORD PTR [eax+0x2]
  402081:	mov    ds,ebx
  402083:	out    0xe2,al
  402085:	mov    eax,ds:0x21cfb792
  40208a:	aaa    
  40208b:	nop
  40208c:	int    0x63
  40208e:	inc    eax
  40208f:	out    0x9c,eax
  402091:	push   0x71
  402093:	cmp    al,0x8b
  402095:	sbb    BYTE PTR [ebp-0x2144221],al
  40209b:	xor    al,0xcd
  40209d:	jecxz  0x4020f2
  40209f:	mov    eax,DWORD PTR [edi+0x1ba956cc]
  4020a5:	(bad)  
  4020a6:	scas   al,BYTE PTR es:[edi]
  4020a7:	jbe    0x40202a
  4020a9:	out    0xc,al
  4020ab:	ret    0xc1a2
  4020ae:	aad    0xa3
  4020b0:	ins    BYTE PTR es:[edi],dx
  4020b1:	int    0x85
  4020b3:	in     al,0x28
  4020b5:	lahf   
  4020b6:	call   0x916e48c2
  4020bb:	xor    esp,esi
  4020bd:	lds    esp,FWORD PTR [ecx-0x319e40c]
  4020c3:	fmul   QWORD PTR [eax+0x5]
  4020c6:	das    
  4020c7:	ret    0x4eb3
  4020ca:	fwait
  4020cb:	jge    0x40206a
  4020cd:	or     ecx,DWORD PTR [edx-0x2f9b5838]
  4020d3:	sbb    DWORD PTR ds:0xb773fcf7,ecx
  4020d9:	mov    WORD PTR ds:0xb941c677,es
  4020df:	in     eax,dx
  4020e0:	pop    eax
  4020e1:	pop    esi
  4020e2:	mov    BYTE PTR [edi+edi*1+0x29],ch
  4020e6:	mov    dl,0x41
  4020e8:	repz cld 
  4020ea:	mov    dl,0x21
  4020ec:	adc    al,0x8c
  4020ee:	lods   al,BYTE PTR ds:[esi]
  4020ef:	ins    DWORD PTR es:[edi],dx
  4020f0:	or     al,0x5e
  4020f2:	test   ch,bl
  4020f4:	mov    dl,0xb1
  4020f6:	jmp    0x402108
  4020f8:	sbb    BYTE PTR [ebx-0x61ca9c3a],cl
  4020fe:	add    al,0x82
  402100:	bswap  eax
  402102:	ja     0x4020f7
  402104:	imul   edi,DWORD PTR [ecx+0x584c7cb4],0xa85db45b
  40210e:	mov    bh,0x9d
  402110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402111:	in     al,0x47
  402113:	not    DWORD PTR ds:0x6d7a2450
  402119:	sub    eax,0x344001d7
  40211e:	gs push edi
  402120:	cmc    
  402121:	and    esp,DWORD PTR [ebx+0x45]
  402124:	push   eax
  402125:	dec    esi
  402126:	ja     0x402155
  402128:	mov    BYTE PTR [edx],al
  40212a:	dec    esp
  40212b:	lea    esi,[esi-0x3c]
  40212e:	push   esp
  40212f:	jmp    0x402133
  402131:	pop    ss
  402132:	jg     0x4020c5
  402134:	push   eax
  402135:	pop    es
  402136:	sub    ebx,DWORD PTR [esi]
  402138:	mov    cl,0xaa
  40213a:	mov    WORD PTR [ecx],?
  40213c:	fist   WORD PTR ds:0xf7093730
  402142:	loopne 0x402189
  402144:	mov    edx,DWORD PTR [edx+edi*8+0x72]
  402148:	dec    eax
  402149:	dec    esi
  40214a:	mov    cl,0x5f
  40214c:	jge    0x40214f
  40214e:	loopne 0x40213a
  402150:	rcr    DWORD PTR ds:0x850b4bc6,cl
  402156:	in     al,dx
  402157:	cwde   
  402158:	or     BYTE PTR [esi],bl
  40215a:	sub    esp,eax
  40215c:	pop    ecx
  40215d:	pop    ds
  40215e:	pop    ebp
  40215f:	pop    eax
  402160:	lea    esi,[edx]
  402162:	fisubr WORD PTR [ebx]
  402164:	test   BYTE PTR [eax-0x4bea5e0b],al
  40216a:	loop   0x402171
  40216c:	xor    ebp,ebp
  40216e:	cli    
  40216f:	(bad)  
  402170:	cli    
  402171:	sbb    BYTE PTR [edi+0x57],al
  402174:	cmp    BYTE PTR [esi+0x238ff87f],ah
  40217a:	pop    ecx
  40217b:	xor    edi,edi
  40217d:	jnp    0x4021ee
  40217f:	mov    dl,BYTE PTR [edx]
  402181:	mov    bh,0x4a
  402183:	add    ax,bp
  402186:	mov    ecx,0x35b0bc1f
  40218b:	cmp    ebx,esp
  40218d:	jg     0x4021e8
  40218f:	inc    ecx
  402190:	mov    ebp,0x652172ac
  402195:	lods   al,BYTE PTR ds:[esi]
  402196:	jo     0x4021e8
  402198:	xor    BYTE PTR [eax-0x51],ch
  40219b:	nop
  40219c:	out    dx,eax
  40219d:	add    edx,DWORD PTR [ebx-0x3]
  4021a0:	xor    eax,0x94916d74
  4021a5:	push   ds
  4021a6:	inc    DWORD PTR [edx-0x29]
  4021a9:	push   0xffffffce
  4021ab:	cmp    ebx,edx
  4021ad:	fdiv   DWORD PTR [ecx-0x15bf69bc]
  4021b3:	mov    bh,0xa1
  4021b5:	ja     0x4021b6
  4021b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021b8:	inc    ebp
  4021b9:	pop    edi
  4021ba:	jne    0x40217c
  4021bc:	pop    eax
  4021bd:	call   0xec2cab7b
  4021c2:	pop    eax
  4021c3:	jmp    0x648f:0xe49c78ac
  4021ca:	add    BYTE PTR [edi-0x5d94547c],cl
  4021d0:	lods   eax,DWORD PTR ds:[esi]
  4021d1:	scas   al,BYTE PTR es:[edi]
  4021d2:	(bad)  [esi+0x35d5bd0e]
  4021d8:	mov    esi,0x813c7cb0
  4021dd:	loop   0x40218e
  4021df:	or     al,0xb0
  4021e1:	mov    BYTE PTR [esi-0x1fe4bacc],dl
  4021e7:	mov    bl,0xdc
  4021e9:	je     0x40216f
  4021eb:	icebp  
  4021ec:	adc    BYTE PTR [ebp-0x5f],al
  4021ef:	sub    DWORD PTR [edx-0x18],ebx
  4021f2:	cmp    al,0xa6
  4021f4:	in     al,0x6f
  4021f6:	std    
  4021f7:	mov    ds:0x94706697,eax
  4021fc:	popa   
  4021fd:	dec    ecx
  4021fe:	pusha  
  4021ff:	push   es
  402200:	push   ss
  402201:	cli    
  402202:	cs mov edx,0x5939f135
  402208:	scas   eax,DWORD PTR es:[edi]
  402209:	test   DWORD PTR [eax],ecx
  40220b:	or     DWORD PTR [esi-0x2f],eax
  40220e:	mov    ebx,0xe62f3b61
  402213:	mov    ecx,0x28b84354
  402218:	and    bl,BYTE PTR [ecx]
  40221a:	pop    es
  40221b:	adc    al,BYTE PTR [edi]
  40221d:	dec    esp
  40221e:	stos   BYTE PTR es:[edi],al
  40221f:	jns    0x40226f
  402221:	sub    eax,0x120df9b6
  402226:	ror    BYTE PTR [ecx+0x5de81595],1
  40222c:	dec    esp
  40222d:	or     BYTE PTR [eax+0x389845bb],dh
  402233:	ins    DWORD PTR es:[edi],dx
  402234:	sahf   
  402235:	aas    
  402236:	fist   DWORD PTR [edx-0x77]
  402239:	icebp  
  40223a:	mov    ebx,0xbf60253
  40223f:	fstp   DWORD PTR [ebx]
  402241:	pop    esi
  402242:	pop    ebx
  402243:	xor    al,0x50
  402245:	mov    ds:0xbae660f9,eax
  40224a:	mov    DWORD PTR [eax],eax
  40224c:	in     eax,0xf0
  40224e:	push   esi
  40224f:	arpl   WORD PTR [edi+0x6a],ax
  402252:	cmp    esp,0x49cbb6e2
  402258:	push   ebx
  402259:	loop   0x4022be
  40225b:	ins    DWORD PTR es:[edi],dx
  40225c:	stc    
  40225d:	imul   esp,DWORD PTR [eax],0xffffffec
  402260:	retf   0x1ce1
  402263:	paddusw mm7,mm7
  402266:	add    edi,DWORD PTR [esp+ebp*1+0x10768aae]
  40226d:	mov    esi,0x283eb134
  402272:	jns    0x40223c
  402274:	and    al,0x21
  402276:	inc    edx
  402277:	push   esp
  402278:	imul   eax,DWORD PTR [edx+eiz*1],0x41464590
  40227f:	aas    
  402280:	add    BYTE PTR [edi],dh
  402282:	mov    edi,0x2299b6fc
  402287:	in     al,dx
  402288:	adc    bh,BYTE PTR [eax+0x337037e6]
  40228e:	xor    BYTE PTR [ebp-0x7f],bl
  402291:	adc    ecx,edx
  402293:	rol    DWORD PTR [ecx+0x73],cl
  402296:	pop    edi
  402297:	or     eax,0xaedffcac
  40229c:	jnp    0x402277
  40229e:	push   esi
  40229f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022a0:	std    
  4022a1:	jnp    0x40226c
  4022a3:	jmp    0x402260
  4022a5:	icebp  
  4022a6:	or     eax,0x7cb32c44
  4022ab:	mov    ebx,0x34abdf10
  4022b0:	or     BYTE PTR [ebx],bh
  4022b2:	and    eax,0x170e5435
  4022b7:	or     BYTE PTR [edi],bl
  4022b9:	adc    ecx,DWORD PTR [eax+0x48]
  4022bc:	shl    ebx,0x8a
  4022bf:	inc    ebp
  4022c0:	(bad)  
  4022c1:	xchg   DWORD PTR [ecx+0x35],edx
  4022c4:	sbb    eax,0x8939614
  4022c9:	std    
  4022ca:	jle    0x4022e3
  4022cc:	iret   
  4022cd:	in     al,dx
  4022ce:	push   edx
  4022cf:	imul   ebx,DWORD PTR [ecx+0x1a],0xffffffa3
  4022d3:	add    eax,0x1a5c9384
  4022d8:	rsm    
  4022da:	dec    eax
  4022db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022dc:	rcl    DWORD PTR [ebx],0xec
  4022df:	mov    ecx,0x967617a4
  4022e4:	sar    BYTE PTR [edi-0x10],cl
  4022e7:	cs dec ebx
  4022e9:	mov    dh,0x40
  4022eb:	jno    0x4022d5
  4022ed:	fmul   QWORD PTR [eax]
  4022ef:	mov    cs,WORD PTR [edi-0x13]
  4022f2:	mov    edx,0xac8b5c53
  4022f7:	jno    0x40229e
  4022f9:	fptan  
  4022fb:	push   es
  4022fc:	rcl    ebp,cl
  4022fe:	ret    
  4022ff:	or     DWORD PTR [eax],esp
  402301:	nop
  402302:	popa   
  402303:	mov    cl,0xea
  402305:	push   ds
  402306:	outs   dx,DWORD PTR ds:[esi]
  402307:	addr16 inc edi
  402309:	cmp    esi,DWORD PTR [ebp+0x4bc4114f]
  40230f:	mov    esp,0xa63098df
  402314:	dec    edx
  402315:	add    al,0x7e
  402317:	(bad)  
  402319:	jp     0x784b941d
  40231f:	lock lds ecx,FWORD PTR [edi-0x200093e7]
  402326:	fs sbb al,0x83
  402329:	enter  0x4c92,0x3
  40232d:	mov    BYTE PTR [edi],bh
  40232f:	nop
  402330:	shr    edi,cl
  402332:	and    DWORD PTR [edi-0x6c384a14],ebx
  402338:	cmp    eax,0xfe227c80
  40233d:	rcr    DWORD PTR [ebx],0x30
  402340:	push   ecx
  402341:	cmp    al,0xc8
  402343:	retf   0x325f
  402346:	lahf   
  402347:	loop   0x402340
  402349:	push   edx
  40234a:	sbb    al,0x74
  40234c:	es push esi
  40234e:	das    
  40234f:	call   FWORD PTR [edx+0xe]
  402352:	ins    DWORD PTR es:[edi],dx
  402353:	ds inc edx
  402355:	add    eax,0xc601fdd0
  40235a:	push   0x3d
  40235c:	aam    0x84
  40235e:	clc    
  40235f:	push   edi
  402360:	xor    eax,edx
  402362:	push   esp
  402364:	int3   
  402365:	lock or al,0xbd
  402368:	push   ecx
  402369:	cmp    eax,0x50318086
  40236e:	add    BYTE PTR [esi],0x22
  402371:	das    
  402372:	and    BYTE PTR [esi],bh
  402374:	xchg   ebx,eax
  402375:	dec    esp
  402376:	test   BYTE PTR [edi],dl
  402378:	jmp    0x19df:0x9a25606
  40237f:	cmp    eax,0xdb822604
  402384:	xchg   edi,eax
  402385:	xor    DWORD PTR [esi],0xffffffd3
  402388:	jne    0x402350
  40238a:	cmp    eax,0xedc5c571
  40238f:	shl    DWORD PTR [edi-0x63],1
  402392:	jbe    0x40231e
  402394:	test   eax,0x7046fa3a
  402399:	inc    esp
  40239a:	das    
  40239b:	das    
  40239c:	or     dl,ah
  40239e:	enter  0xed2c,0x48
  4023a2:	iret   
  4023a3:	mov    ch,0x38
  4023a5:	jle    0x402379
  4023a7:	fisttp DWORD PTR [ecx+0x17196ff0]
  4023ad:	fisub  DWORD PTR ds:0x598a014d
  4023b3:	xchg   esp,eax
  4023b4:	jo     0x402372
  4023b6:	stc    
  4023b7:	xchg   esi,eax
  4023b8:	out    dx,eax
  4023b9:	addr16 pop es
  4023bb:	adc    ebx,ecx
  4023bd:	in     al,0x92
  4023bf:	cmc    
  4023c0:	pop    ds
  4023c1:	loope  0x402405
  4023c3:	xor    BYTE PTR [ecx],ch
  4023c5:	mov    esp,0xbbee29a9
  4023ca:	test   DWORD PTR [esi+ebx*4-0x61],edx
  4023ce:	mov    ds:0x488d6626,al
  4023d4:	test   DWORD PTR [ebx],ecx
  4023d6:	jae    0x402449
  4023d8:	xor    BYTE PTR [edx-0x7d],0xda
  4023dc:	shl    DWORD PTR [esi],cl
  4023de:	pusha  
  4023df:	into   
  4023e0:	jmp    0x7243:0xd223f46d
  4023e7:	jbe    0x402448
  4023e9:	add    ebx,DWORD PTR [esp+eax*1-0x28]
  4023ed:	or     dl,BYTE PTR fs:[ebp+0x70]
  4023f1:	adc    al,0x68
  4023f3:	or     esp,DWORD PTR [ebp-0x51]
  4023f6:	rol    ebx,1
  4023f8:	and    DWORD PTR [esi+0x42],edi
  4023fb:	sbb    DWORD PTR [esi+0x555d68d5],ecx
  402401:	stos   BYTE PTR es:[edi],al
  402402:	pop    edx
  402403:	xor    edi,esi
  402405:	cmp    DWORD PTR [esi+0x7a82f657],0xffffffb1
  40240c:	outs   dx,DWORD PTR ds:[esi]
  40240d:	sub    DWORD PTR [edx-0x3fda958a],esp
  402413:	pusha  
  402414:	scas   al,BYTE PTR es:[edi]
  402415:	inc    eax
  402416:	fidiv  DWORD PTR [edi+eiz*8-0x25f73f09]
  40241d:	aas    
  40241e:	stos   DWORD PTR es:[edi],eax
  40241f:	sbb    bl,dh
  402421:	call   0x2bae4e2e
  402426:	pop    esp
  402427:	out    dx,eax
  402428:	mov    dh,BYTE PTR [eax-0x2e]
  40242b:	mov    ecx,?
  40242d:	mov    ebx,DWORD PTR [esi]
  40242f:	iret   
  402430:	pusha  
  402431:	pusha  
  402432:	shr    BYTE PTR [esi+0x47],0xb3
  402436:	add    eax,0x76f2ff88
  40243b:	pop    ebp
  40243c:	xchg   esp,eax
  40243d:	fptan  
  40243f:	lahf   
  402440:	imul   edi,DWORD PTR [edx+eax*2-0x431a62f2],0xc619224b
  40244b:	retf   0x13f7
  40244e:	sbb    eax,0x3291f49
  402453:	aad    0x16
  402455:	cwde   
  402456:	push   es
  402457:	xchg   edi,eax
  402458:	inc    ecx
  402459:	dec    ebp
  40245a:	outs   dx,BYTE PTR ds:[esi]
  40245b:	inc    ebx
  40245c:	scas   eax,DWORD PTR es:[edi]
  40245d:	jo     0x402499
  40245f:	retf   0x6ac7
  402462:	mov    BYTE PTR [ecx*4-0x376e625b],dh
  402469:	pusha  
  40246a:	ror    DWORD PTR [edi],cl
  40246c:	cli    
  40246d:	ins    BYTE PTR es:[edi],dx
  40246e:	mov    ah,BYTE PTR [eax]
  402470:	dec    edi
  402471:	cmp    DWORD PTR [ebx+0x3d422967],ecx
  402477:	ss out dx,eax
  402479:	ror    dh,0x62
  40247c:	cld    
  40247d:	aas    
  40247e:	aam    0xb9
  402480:	and    eax,esi
  402482:	loop   0x4024ef
  402484:	pusha  
  402485:	lods   al,BYTE PTR cs:[esi]
  402487:	and    BYTE PTR [esi-0x34],cl
  40248a:	ret    0x9b2
  40248d:	xor    DWORD PTR [eax-0x24b1c5fe],edx
  402493:	call   0x7fdfede9
  402498:	ds in  eax,0x67
  40249b:	and    al,0x8a
  40249d:	loop   0x402471
  40249f:	xor    al,0x5d
  4024a1:	dec    eax
  4024a2:	cli    
  4024a3:	sub    DWORD PTR [ebx+0x56],ebx
  4024a6:	cmc    
  4024a7:	xchg   ecx,eax
  4024a8:	popf   
  4024a9:	lods   eax,DWORD PTR ds:[esi]
  4024aa:	stos   BYTE PTR es:[edi],al
  4024ab:	mov    dl,0x72
  4024ad:	dec    ebx
  4024ae:	cdq    
  4024af:	(bad)  
  4024b0:	les    ebx,FWORD PTR [ebp-0x4c9da26d]
  4024b6:	test   eax,0xef47372d
  4024bb:	popa   
  4024bc:	fistp  WORD PTR [ecx+0xe]
  4024bf:	repnz neg BYTE PTR [esi+esi*8]
  4024c3:	mov    eax,ds:0x6acc3da0
  4024c8:	jecxz  0x402492
  4024ca:	aaa    
  4024cb:	rcr    DWORD PTR [eax],1
  4024cd:	xchg   edi,eax
  4024ce:	sbb    DWORD PTR [ebp+0x738e229d],ebx
  4024d4:	in     eax,0xa
  4024d6:	lock mov esp,0x4480b529
  4024dc:	mov    cl,0x11
  4024de:	or     esi,ebx
  4024e0:	mov    al,0xc9
  4024e2:	pop    ds
  4024e3:	pop    ebp
  4024e4:	add    ecx,DWORD PTR [esi-0x7845b262]
  4024ea:	daa    
  4024eb:	xchg   esp,ecx
  4024ed:	cmp    BYTE PTR [edi],ch
  4024ef:	dec    esp
  4024f0:	inc    esi
  4024f1:	rcl    DWORD PTR [eax+0x2c],cl
  4024f4:	push   cs
  4024f5:	mov    ds,edx
  4024f7:	popf   
  4024f8:	daa    
  4024f9:	mov    dl,0xad
  4024fb:	sub    ah,BYTE PTR [ebx-0xd382975]
  402501:	mov    ch,0xc0
  402503:	jae    0x40256b
  402505:	add    BYTE PTR [edi],dl
  402507:	lods   al,BYTE PTR ds:[esi]
  402508:	xchg   ecx,eax
  402509:	mov    esp,0x5ec6f872
  40250e:	hlt    
  40250f:	rcr    edi,1
  402511:	pushf  
  402512:	pop    ss
  402513:	imul   esp,DWORD PTR [edi+0x19a2253f],0x44
  40251a:	push   esi
  40251b:	cmc    
  40251c:	xchg   ebx,eax
  40251d:	pop    esp
  40251e:	jae    0x402513
  402520:	or     BYTE PTR [ebx-0x2c],0xb4
  402524:	dec    edx
  402525:	adc    eax,0x85f4f969
  40252a:	adc    DWORD PTR [edx+esi*1-0x23],0xf590cb1a
  402532:	(bad)  
  402533:	mov    bl,0x4
  402535:	jp     0x40250a
  402537:	fnstsw WORD PTR [edi-0x16]
  40253a:	das    
  40253b:	pop    ecx
  40253c:	push   ds
  40253d:	enter  0xd994,0xed
  402541:	mov    al,0xb2
  402543:	std    
  402544:	dec    edi
  402545:	or     al,0xbb
  402547:	pusha  
  402548:	fprem  
  40254a:	test   al,0xef
  40254c:	outs   dx,DWORD PTR ds:[esi]
  40254d:	test   BYTE PTR ds:0xcc67da78,dl
  402553:	cmc    
  402554:	sbb    DWORD PTR [ebx-0x5fecaeef],0x5f
  40255b:	inc    ecx
  40255c:	lea    esi,[eax+edx*8+0x5be20673]
  402563:	sub    edx,DWORD PTR [ebx-0x7d425ff1]
  402569:	xor    BYTE PTR [ebp+eiz*2+0x6a],bh
  40256d:	call   0xf66:0xf793b9e5
  402574:	or     al,0x77
  402576:	push   cs
  402577:	outs   dx,DWORD PTR ds:[esi]
  402578:	or     edi,edx
  40257a:	retf   0xe08
  40257d:	fiadd  WORD PTR [edi+0x4a]
  402580:	ret    
  402581:	add    dh,BYTE PTR [edx-0x42c5f531]
  402587:	test   al,0x72
  402589:	mov    BYTE PTR [ebp+0x1daa55f2],0x81
  402590:	mov    WORD PTR [ebx+eiz*1-0x7228b33e],cs
  402597:	jecxz  0x40252c
  402599:	loopne 0x40252f
  40259b:	ins    DWORD PTR es:[edi],dx
  40259c:	push   ecx
  40259d:	sbb    ecx,edx
  40259f:	adc    esi,eax
  4025a1:	mov    ds:0x419ee752,eax
  4025a6:	fdivr  DWORD PTR [edx+0x80a1b2f]
  4025ac:	pop    ecx
  4025ad:	and    eax,0x9adb4de3
  4025b2:	and    ch,BYTE PTR [ebx+ebx*4+0x59d18931]
  4025b9:	pop    ecx
  4025ba:	ss xchg esp,eax
  4025bc:	cmp    eax,0x9c34c23f
  4025c1:	sub    al,0xc1
  4025c3:	in     al,0xfc
  4025c5:	jno    0x402594
  4025c7:	scas   al,BYTE PTR es:[edi]
  4025c8:	in     eax,dx
  4025c9:	pop    ebp
  4025ca:	add    al,0xa0
  4025cc:	push   esi
  4025cd:	push   0x55
  4025cf:	pop    edx
  4025d0:	(bad)  
  4025d2:	repnz fdivr DWORD PTR [ebx+0x7e]
  4025d6:	xor    al,0xed
  4025d8:	inc    eax
  4025d9:	(bad)  
  4025da:	jmp    0x18597066
  4025df:	loope  0x4025a1
  4025e1:	cmp    edi,eax
  4025e3:	in     eax,0xdd
  4025e5:	out    0x1f,eax
  4025e7:	add    al,0xf3
  4025e9:	pop    edi
  4025ea:	pop    ds
  4025eb:	inc    esp
  4025ec:	jp     0x40258c
  4025ee:	adc    DWORD PTR [edx-0x783a7ad7],edi
  4025f4:	cwde   
  4025f5:	cld    
  4025f6:	xchg   DWORD PTR [edi],ecx
  4025f8:	wrmsr  
  4025fa:	retf   0x6650
  4025fd:	xor    ebx,DWORD PTR [ebx-0x78c5c338]
  402603:	stos   DWORD PTR es:[edi],eax
  402604:	sub    edi,0x8
  402607:	mov    WORD PTR [edx+0x1f],gs
  40260a:	stc    
  40260b:	not    DWORD PTR [ebp+ebx*8+0x2b]
  40260f:	outs   dx,BYTE PTR ds:[esi]
  402610:	and    BYTE PTR [ecx],dh
  402612:	sbb    BYTE PTR [edi],ah
  402614:	test   BYTE PTR [ecx],ch
  402616:	cld    
  402617:	popf   
  402618:	cmp    ah,0xe8
  40261b:	scas   al,BYTE PTR es:[edi]
  40261c:	pop    ebp
  40261d:	scas   eax,DWORD PTR es:[edi]
  40261e:	ret    
  40261f:	(bad)
  402622:	xor    BYTE PTR [esp+eiz*2-0x32896090],0x76
  40262a:	(bad)  
  40262b:	adc    DWORD PTR [edi],eax
  40262d:	loopne 0x4025e6
  40262f:	mov    edx,0x60b746ba
  402634:	mov    ch,0xa7
  402636:	pop    es
  402637:	loopne 0x40260b
  402639:	sbb    eax,0xcc50c7e4
  40263e:	inc    eax
  40263f:	xchg   ecx,eax
  402640:	adc    eax,0xf533aa1
  402645:	lock push edx
  402647:	fimul  WORD PTR [esi-0x10]
  40264a:	dec    eax
  40264b:	clc    
  40264c:	dec    ebx
  40264d:	or     esi,DWORD PTR [edx]
  40264f:	dec    edi
  402650:	xchg   ecx,eax
  402651:	std    
  402652:	jne    0x2b0bcab7
  402658:	fild   WORD PTR [eax-0xe167dea]
  40265e:	stos   DWORD PTR es:[edi],eax
  40265f:	js     0x4025eb
  402661:	adc    edx,DWORD PTR [edx+0x6cb0e291]
  402667:	add    bh,BYTE PTR es:[ebp+0x47]
  40266b:	std    
  40266c:	push   ebx
  40266d:	(bad)  
  40266f:	ja     0x402614
  402671:	mov    ecx,0xce50d0eb
  402676:	leave  
  402677:	mov    ?,WORD PTR [edi]
  402679:	fist   WORD PTR [edi-0x38]
  40267c:	adc    BYTE PTR [edx-0x19417c83],0x77
  402683:	or     eax,0x7b547f5b
  402688:	xchg   edi,eax
  402689:	jg     0x40267c
  40268b:	data16 add BYTE PTR [edi-0x5ade50fc],0x53
  402693:	inc    eax
  402694:	inc    edi
  402695:	adc    DWORD PTR [esi-0x7fafecd2],esi
  40269b:	sbb    al,0xdc
  40269d:	adc    ebp,DWORD PTR [esi]
  40269f:	lods   al,BYTE PTR ds:[esi]
  4026a0:	add    al,bl
  4026a2:	push   esp
  4026a3:	cmp    dl,BYTE PTR [ecx]
  4026a5:	sub    BYTE PTR [edi+0x60ed378c],bl
  4026ab:	jo     0x4026c5
  4026ad:	jle    0x4026b5
  4026af:	jne    0x402697
  4026b1:	sub    DWORD PTR [ecx],0x33
  4026b4:	mov    edi,eax
  4026b6:	jbe    0x4026ed
  4026b8:	sub    esi,DWORD PTR [edx]
  4026ba:	xchg   esi,eax
  4026bb:	pop    ebx
  4026bc:	test   al,0x12
  4026be:	mov    edi,0xd2b3c6e4
  4026c3:	es mov edi,0x5e7a73de
  4026c9:	int3   
  4026ca:	lea    eax,[edi+0x4c]
  4026cd:	xchg   ebx,eax
  4026ce:	pop    ecx
  4026cf:	in     al,dx
  4026d0:	mov    BYTE PTR [eax-0x3d],bh
  4026d3:	popf   
  4026d4:	nop
  4026d5:	pop    edi
  4026d6:	je     0x4026ee
  4026d8:	mov    edx,0x424e1065
  4026dd:	stos   BYTE PTR es:[edi],al
  4026de:	sub    bl,bh
  4026e0:	(bad)  
  4026e1:	jecxz  0x40275e
  4026e3:	xchg   edx,eax
  4026e4:	imul   ebp,DWORD PTR [ebp+eax*8+0x1c],0x69f4390e
  4026ec:	cmp    DWORD PTR [esp+ebp*1-0x7b5bde20],esp
  4026f3:	dec    eax
  4026f4:	xchg   edx,eax
  4026f5:	inc    esi
  4026f6:	test   eax,0x241836fb
  4026fb:	out    dx,al
  4026fc:	call   0x9b30:0x1e6abcd5
  402703:	push   es
  402704:	push   ds
  402705:	outs   dx,BYTE PTR ds:[esi]
  402706:	jae    0x4026e0
  402708:	inc    edi
  402709:	sbb    esp,DWORD PTR [ebp-0xfb00e98]
  40270f:	ret    
  402710:	lahf   
  402711:	add    eax,0x3fada69f
  402716:	js     0x40274a
  402718:	xchg   edi,eax
  402719:	and    al,0x20
  40271b:	jle    0x4026ff
  40271d:	pusha  
  40271e:	push   ebx
  40271f:	push   es
  402720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402721:	mov    ebp,0x6b9fa899
  402726:	(bad)  
  402727:	fidiv  WORD PTR [edi-0x6b]
  40272a:	loope  0x40275c
  40272c:	jge    0x402766
  40272e:	mov    edx,0xc99462d1
  402733:	int3   
  402734:	mov    es:0xbbbbb7a8,eax
  40273a:	inc    ecx
  40273b:	imul   edi,DWORD PTR [eax+0x29],0x63b6e37d
  402742:	or     BYTE PTR [edx],0xea
  402745:	fld    DWORD PTR [esi-0x78ffe179]
  40274b:	push   esp
  40274c:	outs   dx,BYTE PTR ds:[esi]
  40274d:	mov    cl,0xd5
  40274f:	mov    ebp,0xacf56784
  402754:	popa   
  402755:	adc    ebp,DWORD PTR [edi]
  402757:	aaa    
  402758:	in     al,0x1
  40275a:	mov    dl,0xe9
  40275c:	aaa    
  40275d:	addr16 adc al,0x5
  402760:	mov    edi,0x7d763fab
  402765:	add    ebx,ebp
  402767:	lods   al,BYTE PTR ds:[esi]
  402768:	sahf   
  402769:	mov    edx,0x86ee69a8
  40276e:	lods   al,BYTE PTR ds:[esi]
  40276f:	pusha  
  402770:	mov    ebx,0x72d36b63
  402775:	dec    edx
  402776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402777:	stos   BYTE PTR es:[edi],al
  402778:	es cdq 
  40277a:	push   es
  40277b:	xor    DWORD PTR [esi-0x29],ebp
  40277e:	xchg   ecx,eax
  40277f:	adc    cl,al
  402781:	fcmovnb st,st(1)
  402783:	iret   
  402784:	sub    esi,eax
  402786:	push   0x41
  402788:	xchg   ebx,eax
  402789:	cwde   
  40278a:	dec    DWORD PTR [ebx-0x5606ef75]
  402790:	stc    
  402791:	add    DWORD PTR ds:0x24d277e1,ebp
  402797:	and    DWORD PTR ss:[ecx-0xe72efc4],ecx
  40279e:	jmp    0x402741
  4027a0:	or     al,0x1e
  4027a3:	push   ebx
  4027a4:	rcl    DWORD PTR [ecx-0x34],1
  4027a7:	and    eax,0xfe5d86d2
  4027ac:	call   0xa3f14009
  4027b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027b2:	xchg   edx,eax
  4027b3:	and    ch,bl
  4027b5:	or     edx,DWORD PTR [ebp-0x47]
  4027b8:	mov    edi,0xab142d6
  4027bd:	cmc    
  4027be:	nop
  4027bf:	sahf   
  4027c0:	mov    bl,0xde
  4027c2:	push   0x4df2dabf
  4027c7:	inc    eax
  4027c8:	pop    esi
  4027c9:	sbb    BYTE PTR [ebp+0xdbac2b9],dl
  4027cf:	xor    DWORD PTR [eax+eiz*8+0x78],0xffffffc3
  4027d4:	test   DWORD PTR ds:[esp],0xf06ed1e8
  4027dc:	scas   al,BYTE PTR es:[edi]
  4027dd:	mov    al,ds:0x3bc97890
  4027e2:	jge    0x402853
  4027e4:	int    0x84
  4027e6:	pop    ss
  4027e7:	mov    ah,0xdd
  4027e9:	push   esi
  4027ea:	xor    al,0xa
  4027ec:	or     BYTE PTR cs:[ecx-0x7846735],bh
  4027f3:	mov    ss,WORD PTR [ecx+ebp*8+0x163b304b]
  4027fa:	stos   DWORD PTR es:[edi],eax
  4027fb:	es jne 0x402787
  4027fe:	adc    ebx,0x6f
  402801:	or     al,0x44
  402803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402804:	cmp    DWORD PTR [ecx],edi
  402806:	lods   al,BYTE PTR ds:[esi]
  402807:	add    ah,0xd8
  40280a:	jae    0x40287c
  40280c:	jno    0x402810
  40280e:	or     DWORD PTR [ecx+0x109233a7],ebp
  402814:	cmp    al,0x27
  402816:	outs   dx,BYTE PTR ds:[esi]
  402817:	shl    eax,1
  402819:	mov    edx,0x72a9878e
  40281e:	jle    0x4027fa
  402820:	inc    ecx
  402821:	stc    
  402822:	in     eax,dx
  402823:	cwde   
  402824:	cmc    
  402825:	call   0xc60c:0xc4960dbc
  40282c:	push   ebx
  40282d:	mov    bl,0xbb
  40282f:	xchg   edi,eax
  402830:	stos   BYTE PTR es:[edi],al
  402831:	adc    ecx,esp
  402833:	sets   dl
  402836:	adc    dl,bl
  402838:	iret   
  402839:	aam    0xe2
  40283b:	leave  
  40283c:	jge    0x40280f
  40283e:	adc    al,0xde
  402840:	in     eax,0xe8
  402842:	mov    esi,0xd414ff54
  402847:	xchg   esi,eax
  402848:	sbb    al,0xed
  40284a:	add    al,0x6f
  40284c:	dec    esi
  40284d:	repnz retf 0xdddc
  402851:	sbb    ebp,ebp
  402853:	cdq    
  402854:	int    0x61
  402856:	fadd   DWORD PTR [ecx]
  402858:	test   BYTE PTR [ebp-0x29cddca],cl
  40285e:	and    BYTE PTR [eax+ecx*8],bh
  402861:	mov    dl,0x22
  402863:	cdq    
  402864:	cdq    
  402865:	daa    
  402866:	push   cs
  402867:	push   ebx
  402868:	sbb    ecx,DWORD PTR ss:[ecx-0x41]
  40286c:	cmp    esi,DWORD PTR [edx-0x70]
  40286f:	cli    
  402870:	adc    dh,ah
  402872:	daa    
  402873:	in     al,0x20
  402875:	mov    eax,0x9c9ecac5
  40287a:	sahf   
  40287b:	lds    ebp,FWORD PTR [edi]
  40287d:	aas    
  40287e:	inc    edx
  40287f:	mov    ds:0x61ff24bc,eax
  402884:	mov    edx,0x12452b4b
  402889:	les    eax,FWORD PTR [esi-0x492b192f]
  40288f:	sub    al,0x44
  402891:	dec    ebx
  402892:	enter  0x6acb,0x75
  402896:	push   ds
  402897:	fstp   DWORD PTR [edx]
  402899:	fbstp  TBYTE PTR [ebx-0x4b731382]
  40289f:	rcl    BYTE PTR [eax+0x6280bef6],cl
  4028a5:	or     DWORD PTR fs:[edx+ebp*2],0x5ca1c62c
  4028ad:	xchg   edx,eax
  4028ae:	cmp    al,0xda
  4028b0:	sub    BYTE PTR [eax+edi*1+0xf],dh
  4028b4:	mov    eax,0x61d9189c
  4028b9:	pop    ebx
  4028ba:	neg    BYTE PTR [ecx]
  4028bc:	ja     0x402862
  4028be:	mov    ah,0x77
  4028c0:	inc    BYTE PTR [ebx+0x24154bbb]
  4028c6:	cmp    al,0xfd
  4028c8:	fst    st(0)
  4028ca:	jp     0x402943
  4028cc:	into   
  4028cd:	push   0x27
  4028cf:	mov    eax,0x4cf9bc07
  4028d4:	clc    
  4028d5:	stos   BYTE PTR es:[edi],al
  4028d6:	pushf  
  4028d7:	cs inc ebx
  4028d9:	mov    bl,0xf8
  4028db:	aad    0xe6
  4028dd:	adc    DWORD PTR [edi],ebx
  4028df:	jb     0x402879
  4028e1:	push   es
  4028e2:	adc    dh,cl
  4028e4:	mov    ebp,0x8775bdb9
  4028e9:	lock mov gs:0x1fe816e3,al
  4028f0:	popa   
  4028f1:	push   esi
  4028f2:	jg     0x402936
  4028f4:	xor    ebp,edx
  4028f6:	mov    esi,0xdb445a79
  4028fb:	mov    bl,0xb0
  4028fd:	sub    BYTE PTR [ebx],ch
  4028ff:	aas    
  402900:	sub    cl,BYTE PTR [edi+eax*2+0x920703]
  402907:	mov    ebp,0x255f2b48
  40290c:	in     eax,dx
  40290d:	test   DWORD PTR [ecx],ebx
  40290f:	int    0x6e
  402911:	iretw  
  402913:	dec    ecx
  402914:	pop    ss
  402915:	(bad)  
  402917:	ror    BYTE PTR [ebx+eax*4+0x39],cl
  40291b:	adc    al,0xa0
  40291d:	fs mov esp,0x4ba41b9e
  402923:	sbb    BYTE PTR [esi+0x34],bl
  402926:	sub    ebp,eax
  402928:	fndisi(8087 only) 
  40292a:	int3   
  40292b:	inc    DWORD PTR [ebx]
  40292d:	lds    ecx,FWORD PTR [eax-0x62]
  402930:	gs ret 0x3647
  402934:	xchg   ecx,eax
  402935:	mov    edi,esi
  402937:	mov    bl,0xbf
  402939:	data16 mov bl,0x37
  40293c:	push   edx
  40293d:	int    0x30
  40293f:	and    al,0x3
  402941:	jae    0x402946
  402943:	arpl   WORD PTR [eax-0x7241edb7],sp
  402949:	repz fwait
  40294b:	add    ebx,ebx
  40294d:	leave  
  40294e:	push   0x153e3a03
  402953:	and    eax,eax
  402955:	push   edi
  402956:	hlt    
  402957:	in     al,dx
  402958:	mov    ebp,0xbc23ca7
  40295d:	push   0xffffffdf
  40295f:	in     al,dx
  402960:	mov    al,ds:0x291846b9
  402965:	inc    ebp
  402966:	jns    0x402909
  402968:	pop    DWORD PTR [ebp+0x49fe87ab]
  40296e:	cmp    al,0x4
  402970:	in     eax,dx
  402971:	test   al,0xf3
  402973:	std    
  402974:	mov    ds:0x897b2bb9,eax
  402979:	xchg   esi,eax
  40297a:	iret   
  40297b:	nop
  40297c:	in     eax,dx
  40297d:	mov    eax,ds:0xb7f9fc03
  402982:	subps  xmm3,XMMWORD PTR ds:0x96e82d9d
  402989:	add    eax,0xc9bab00
  40298e:	retf   
  40298f:	test   BYTE PTR [ecx+esi*8-0x224f2692],dl
  402996:	sahf   
  402997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402998:	es push es
  40299a:	in     al,0x4c
  40299c:	out    dx,al
  40299d:	mov    dh,BYTE PTR [esi]
  40299f:	pop    ebp
  4029a0:	shl    bl,0x79
  4029a3:	jmp    0xf8e84639
  4029a8:	adc    al,0x77
  4029aa:	aas    
  4029ab:	ror    BYTE PTR [ebx-0x6f],1
  4029ae:	mov    ebx,0xb2813b15
  4029b3:	sbb    al,0x40
  4029b5:	push   ecx
  4029b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029b7:	dec    ebp
  4029b8:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4029ba:	mov    eax,0x2be769dc
  4029bf:	jo     0x402a16
  4029c1:	and    al,0x53
  4029c3:	test   al,0x4c
  4029c5:	cld    
  4029c6:	or     bl,cl
  4029c8:	mov    WORD PTR ds:[ecx+ecx*4-0x71],ss
  4029cd:	in     al,0x92
  4029cf:	(bad)  
  4029d0:	add    al,0xea
  4029d2:	fdiv   st,st(1)
  4029d4:	leave  
  4029d5:	inc    esi
  4029d6:	std    
  4029d7:	mov    ecx,0x2608ff9e
  4029dc:	push   ds
  4029dd:	repz push ebx
  4029df:	out    0x82,eax
  4029e1:	jge    0x4029b4
  4029e3:	mov    dh,0xe3
  4029e5:	dec    edx
  4029e7:	push   ebx
  4029e8:	shl    BYTE PTR [ebx],cl
  4029ea:	xchg   esi,eax
  4029eb:	dec    ebp
  4029ec:	or     DWORD PTR [edx-0x65],ecx
  4029ef:	loopne 0x4029e1
  4029f1:	cdq    
  4029f2:	dec    edx
  4029f3:	lock xchg ebp,eax
  4029f5:	xor    al,0x62
  4029f7:	mov    ecx,0x252fe55c
  4029fc:	leave  
  4029fd:	arpl   WORD PTR [ebp-0x187dbe19],bp
  402a03:	ud1    esi,eax
  402a06:	out    dx,al
  402a07:	sub    dh,BYTE PTR [eax+0x67]
  402a0a:	popa   
  402a0b:	(bad)
  402a0e:	or     dl,BYTE PTR [edi]
  402a10:	xchg   edi,eax
  402a11:	and    eax,0x121aca8
  402a16:	fistp  DWORD PTR [esi+0x3fe8f71a]
  402a1c:	(bad)  
  402a1e:	enter  0x887d,0xc6
  402a22:	mov    esi,0x5048b226
  402a27:	div    bl
  402a29:	and    al,0x9f
  402a2b:	push   ebx
  402a2c:	sub    eax,0xad3f19e3
  402a31:	sbb    eax,0xb3df4987
  402a36:	cmp    DWORD PTR [edx],0x62b7d2f8
  402a3c:	and    edx,esi
  402a3e:	and    BYTE PTR [ecx],ah
  402a40:	mov    dh,0xcd
  402a42:	rol    bh,cl
  402a44:	push   es
  402a45:	sbb    esi,DWORD PTR [ebp+0x62e50726]
  402a4b:	adc    DWORD PTR ds:0xe7c0a586,esp
  402a51:	xchg   ebp,eax
  402a52:	and    eax,0xe43788a1
  402a57:	lahf   
  402a58:	mov    edx,0x7f49eaea
  402a5d:	(bad)  
  402a5e:	pop    edi
  402a5f:	call   DWORD PTR [ebp-0x37]
  402a62:	push   0x4561eb7
  402a67:	pop    es
  402a68:	xor    BYTE PTR [ebp*1-0xdd54a30],ch
  402a6f:	mov    ?,WORD PTR [ebp+edx*2+0x74480952]
  402a76:	or     esp,DWORD PTR [ebx+0x2bae5770]
  402a7c:	xchg   BYTE PTR [edi+0x13],bl
  402a7f:	cmp    esi,edx
  402a81:	xchg   ebx,eax
  402a82:	aad    0x2a
  402a84:	popa   
  402a85:	(bad)  
  402a86:	loope  0x402a21
  402a88:	push   ds
  402a89:	xor    edi,DWORD PTR [eax]
  402a8b:	outs   dx,BYTE PTR ds:[esi]
  402a8c:	aam    0xa9
  402a8e:	inc    esi
  402a8f:	mov    ch,0x6c
  402a91:	xchg   ebx,eax
  402a92:	mov    edi,0xefe5c7a1
  402a97:	mov    esi,0xd4d2836d
  402a9c:	ss loop 0x402a5b
  402a9f:	mov    ebp,0xd85a141f
  402aa4:	nop
  402aa5:	gs popa 
  402aa7:	jae    0x402a4a
  402aa9:	mov    WORD PTR [ebx-0x52],ds
  402aac:	ret    0x1db6
  402aaf:	imul   edi,DWORD PTR [ebp+esi*1+0x38ed68b5],0xffffffd7
  402ab7:	mov    edx,0x5287004a
  402abc:	xor    bh,BYTE PTR [edx]
  402abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402abf:	or     DWORD PTR [edx+0x29],ebp
  402ac2:	push   cs
  402ac3:	jecxz  0x402b3a
  402ac5:	ficomp WORD PTR [esp+eiz*2-0x136ca660]
  402acc:	popa   
  402acd:	jo     0x402aa1
  402acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ad0:	inc    esi
  402ad1:	sbb    DWORD PTR ds:0xb02bea5a,esp
  402ad7:	cmp    DWORD PTR [ebp+0x78],esi
  402ada:	mov    dl,0x18
  402adc:	inc    esi
  402add:	or     DWORD PTR [eax],ebp
  402adf:	adc    BYTE PTR [edx],dl
  402ae1:	or     edx,DWORD PTR [edx]
  402ae3:	int    0x1d
  402ae5:	bound  edx,QWORD PTR [ecx+0x1]
  402ae8:	fdivr  DWORD PTR [esi-0x12]
  402aeb:	mov    ds:0x30c8eba0,al
  402af0:	mov    ds:0xedbc8ddc,al
  402af5:	jae    0x402b53
  402af7:	je     0x402b0c
  402af9:	popf   
  402afa:	adc    BYTE PTR [ecx+0x7ae1de9e],dl
  402b00:	call   0x6567:0xdcb84fca
  402b07:	int3   
  402b08:	cld    
  402b09:	call   0xda08:0x18b628a5
  402b10:	nop
  402b11:	push   esp
  402b12:	or     BYTE PTR [ecx],cl
  402b14:	(bad)  
  402b16:	or     al,0x69
  402b18:	adc    DWORD PTR [eax],esi
  402b1a:	imul   DWORD PTR [ecx]
  402b1c:	jae    0x402b7c
  402b1e:	fisttp WORD PTR [eax-0x45]
  402b21:	push   0x31fe94aa
  402b26:	stos   DWORD PTR es:[edi],eax
  402b27:	fucomi st,st(6)
  402b29:	test   BYTE PTR [eax],dh
  402b2b:	bound  ecx,QWORD PTR [ecx]
  402b2d:	out    dx,eax
  402b2e:	fild   WORD PTR [esi-0x52]
  402b31:	aaa    
  402b32:	jae    0x402b3a
  402b34:	xchg   edi,eax
  402b35:	sbb    dl,BYTE PTR [ecx-0x3a]
  402b38:	outs   dx,BYTE PTR ds:[esi]
  402b39:	fstp   st(5)
  402b3b:	neg    ch
  402b3d:	aas    
  402b3e:	push   ds
  402b3f:	pop    esi
  402b40:	and    eax,0x318393ca
  402b45:	sub    DWORD PTR [ebx-0x1345b7ab],0x96fa1cb4
  402b4f:	fldcw  WORD PTR [eax-0x6c]
  402b52:	fadd   DWORD PTR [esi-0x6a8ecfed]
  402b58:	popa   
  402b59:	in     eax,0x21
  402b5b:	loopne 0x402bd7
  402b5d:	dec    edi
  402b5e:	popa   
  402b5f:	jo     0x402bc4
  402b61:	and    BYTE PTR [edi-0x44bd0c75],cl
  402b67:	mov    ds:0x87f312bc,al
  402b6c:	xchg   ecx,eax
  402b6d:	lods   eax,DWORD PTR ds:[esi]
  402b6e:	or     esp,DWORD PTR [edx-0x7ce66fd4]
  402b74:	sub    eax,edx
  402b76:	cld    
  402b77:	sbb    edi,DWORD PTR [edx+0x64c2d86c]
  402b7d:	sbb    al,0x87
  402b7f:	imul   edi,DWORD PTR ds:0x7ed2fb2b,0x750d9f26
  402b89:	mov    es,WORD PTR ds:0xb29fad2c
  402b8f:	lahf   
  402b90:	inc    edi
  402b91:	inc    ebp
  402b92:	mov    ch,0xa5
  402b94:	cmp    BYTE PTR ds:0xdfdee8b7,0x76
  402b9b:	icebp  
  402b9c:	cmp    eax,0x918751b
  402ba1:	bnd jmp 0x402c17
  402ba4:	cwde   
  402ba5:	jle    0x402b9a
  402ba7:	pushf  
  402ba8:	imul   esi,DWORD PTR [ecx+0x3e],0x3fe58b6d
  402baf:	jg     0x402c2f
  402bb1:	ret    0xa69a
  402bb4:	pop    ebx
  402bb5:	jne    0x402b9d
  402bb7:	cmp    esi,DWORD PTR [ecx+edx*8-0x4f9d53ee]
  402bbe:	and    DWORD PTR [ecx+0x2c2c1ac4],eax
  402bc4:	mov    eax,ds:0xb45d9343
  402bc9:	jne    0x402bd5
  402bcb:	ja     0x402c14
  402bcd:	ja     0x402c01
  402bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bd0:	sar    dl,0x11
  402bd3:	outs   dx,DWORD PTR ds:[esi]
  402bd4:	add    al,0x3
  402bd6:	pop    ebp
  402bd7:	retf   0x7f3e
  402bda:	or     DWORD PTR [ebx],esp
  402bdc:	data16 hlt 
  402bde:	stos   DWORD PTR es:[edi],eax
  402bdf:	ficomp DWORD PTR [esi-0x648afa5f]
  402be5:	jbe    0x402b70
  402be7:	adc    al,0x23
  402be9:	xchg   ebx,eax
  402bea:	(bad)  
  402beb:	cli    
  402bec:	jns    0x402b7b
  402bee:	iret   
  402bef:	scas   eax,DWORD PTR es:[edi]
  402bf0:	xchg   esp,eax
  402bf1:	pop    ebx
  402bf2:	mov    es,WORD PTR [esi+ecx*8+0x1c9a8954]
  402bf9:	sub    BYTE PTR [edi-0xdae44a2],bh
  402bff:	mov    eax,0xb57d0fb7
  402c04:	lea    ebp,[edx]
  402c06:	inc    ebp
  402c07:	add    al,0x17
  402c09:	fucomip st,st(5)
  402c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c0c:	mov    eax,ds:0xb1a695f9
  402c11:	adc    eax,0x1c440dd8
  402c16:	pusha  
  402c17:	cmp    BYTE PTR [ebx+edi*1],dl
  402c1a:	and    al,0xae
  402c1c:	fwait
  402c1d:	push   esi
  402c1e:	aas    
  402c1f:	int3   
  402c20:	mov    ch,0x39
  402c22:	addr16 pop edx
  402c24:	inc    edi
  402c25:	iret   
  402c26:	xor    al,0xda
  402c28:	dec    ebp
  402c29:	sti    
  402c2a:	ins    BYTE PTR es:[edi],dx
  402c2b:	mov    bh,0x2f
  402c2d:	cmp    DWORD PTR [edx-0x75cecbd6],ebp
  402c33:	data16 mov al,0x4c
  402c36:	cmc    
  402c37:	xor    DWORD PTR [ebx+0x54],edi
  402c3a:	(bad)  
  402c3b:	cmp    eax,0x8309b221
  402c40:	mov    dh,0x17
  402c42:	adc    ebp,DWORD PTR [ebx-0x11]
  402c45:	and    DWORD PTR ds:0xd01803a9,edi
  402c4b:	push   ss
  402c4c:	loopne 0x402caf
  402c4e:	es addr16 push edx
  402c52:	fs pusha 
  402c54:	bound  ebx,QWORD PTR [edx-0x54714dcc]
  402c5a:	fwait
  402c5b:	repnz mov esp,0xfa1e39b3
  402c61:	sub    BYTE PTR [edi-0x6c],bl
  402c64:	cmp    al,BYTE PTR [esi-0x1]
  402c67:	lea    esp,[edi+0xaf43281]
  402c6d:	fcomp  DWORD PTR [edx+0x24]
  402c70:	dec    esi
  402c71:	sub    dh,bh
  402c73:	lods   al,BYTE PTR ds:[esi]
  402c74:	xlat   BYTE PTR ds:[ebx]
  402c75:	sub    al,0xfc
  402c77:	sbb    edi,DWORD PTR [ebp-0x74]
  402c7a:	mov    al,ds:0xc06eaf9e
  402c7f:	arpl   WORD PTR [edx],bp
  402c81:	mov    dh,0xe9
  402c83:	mov    ds:0x1470eae5,eax
  402c88:	cmp    al,0x92
  402c8a:	mov    dh,0x53
  402c8c:	sub    DWORD PTR [eax],esi
  402c8e:	dec    ebp
  402c8f:	out    dx,al
  402c90:	pop    esp
  402c91:	xor    esi,edi
  402c93:	pop    es
  402c94:	mov    esi,0x8a5c6e0d
  402c99:	and    BYTE PTR [ebx],dh
  402c9b:	cmp    ebp,DWORD PTR [eax+0x2e]
  402c9e:	dec    ecx
  402c9f:	jns    0x402cbf
  402ca1:	lock pop esp
  402ca3:	xor    edi,esi
  402ca5:	mov    al,ds:0xa80dda71
  402caa:	jo     0x402ce2
  402cac:	mov    bh,cl
  402cae:	adc    BYTE PTR [esi-0x12],dl
  402cb1:	adc    edx,DWORD PTR [ebp-0x1f0d2a10]
  402cb7:	(bad)  
  402cb8:	sbb    DWORD PTR [eax-0x70],ecx
  402cbb:	xor    ah,ah
  402cbd:	pusha  
  402cbe:	mov    eax,0xb51fef78
  402cc3:	loopne 0x402c57
  402cc5:	push   ebp
  402cc6:	and    ah,BYTE PTR [ebx+esi*1+0x6f]
  402cca:	int3   
  402ccb:	cmovl  edx,edx
  402cce:	push   cs
  402ccf:	std    
  402cd0:	mov    bh,0x34
  402cd2:	jle    0x402cdb
  402cd4:	inc    eax
  402cd5:	data16 mov WORD PTR [eax+0x2a],ss
  402cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cda:	out    0x1b,al
  402cdc:	add    BYTE PTR [ebp+edx*4+0x31faa2d1],bh
  402ce3:	jbe    0x402cb6
  402ce5:	enter  0x71c4,0x6c
  402ce9:	jg     0x402ceb
  402ceb:	jmp    0xafc0a887
  402cf0:	push   esi
  402cf1:	xlat   BYTE PTR ds:[ebx]
  402cf2:	xor    DWORD PTR [edx-0x1b2d7c3b],0xfffffff3
  402cf9:	jge    0x402c87
  402cfb:	ror    BYTE PTR [esp+ebp*8-0x9],cl
  402cff:	mov    ds:0xac0532ff,eax
  402d04:	jo     0x402d45
  402d06:	add    dl,BYTE PTR [ebx]
  402d08:	in     al,0xe
  402d0a:	or     BYTE PTR [esi],bh
  402d0c:	mov    ecx,0xd80d77df
  402d11:	shl    DWORD PTR [ecx],cl
  402d13:	jmp    0x664057fe
  402d18:	or     bh,BYTE PTR [edi-0x53038a0c]
  402d1e:	jmp    0x195e1a91
  402d23:	xchg   edi,eax
  402d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d25:	jmp    0x402d52
  402d27:	popf   
  402d28:	ja     0x402d32
  402d2a:	mov    al,0x4
  402d2c:	out    dx,al
  402d2d:	mov    BYTE PTR [edx+0x38],ch
  402d30:	push   ebx
  402d31:	pushf  
  402d32:	cs inc ecx
  402d34:	push   ebx
  402d35:	(bad)  
  402d36:	or     cl,ah
  402d38:	or     BYTE PTR [ebp+ecx*2+0x49],0xa4
  402d3d:	test   DWORD PTR [esi+0x4bb4dba0],0x46673cdd
  402d47:	jmp    0x6500:0x65827950
  402d4e:	jmp    0xde1e:0x2dae369c
  402d55:	or     ecx,DWORD PTR [ebx+0x4c6b09e3]
  402d5b:	sbb    BYTE PTR fs:[ebx+0x65],bh
  402d5f:	cmp    al,0x87
  402d61:	sar    BYTE PTR [ecx-0x619aaff3],cl
  402d67:	cmp    BYTE PTR [edi+ebx*1-0x6c],ch
  402d6b:	xor    eax,0x28615d5d
  402d70:	adc    DWORD PTR [eax+0x4ffa4742],edx
  402d76:	cld    
  402d77:	ret    
  402d78:	imul   DWORD PTR [edx-0x1e]
  402d7b:	(bad)  
  402d7c:	loopne 0x402d58
  402d7e:	xlat   BYTE PTR ds:[ebx]
  402d80:	stos   BYTE PTR es:[edi],al
  402d81:	adc    ah,0xb8
  402d84:	mov    dl,0x96
  402d86:	out    0x4f,eax
  402d88:	and    DWORD PTR [eax+0x3e23b6fe],esp
  402d8e:	xor    edi,ecx
  402d90:	idiv   DWORD PTR [ebx-0x4c95897f]
  402d96:	push   ds
  402d97:	ss dec edi
  402d99:	int    0x86
  402d9b:	pop    esp
  402d9c:	icebp  
  402d9d:	outs   dx,DWORD PTR ds:[esi]
  402d9e:	sahf   
  402d9f:	push   cs
  402da0:	js     0x402d51
  402da2:	mov    ?,WORD PTR ds:0xca1b493d
  402da8:	test   eax,0xc500bf1c
  402dad:	lods   eax,DWORD PTR ds:[esi]
  402dae:	arpl   WORD PTR [ebx],di
  402db0:	add    BYTE PTR ds:0xdceee173,0xbf
  402db7:	popf   
  402db8:	sub    dl,BYTE PTR [esi-0x46]
  402dbb:	rcr    DWORD PTR [esi+ebx*8],0x88
  402dbf:	pop    esp
  402dc0:	cmc    
  402dc1:	movaps xmm1,XMMWORD PTR [edx+ebp*1]
  402dc5:	xchg   ebp,eax
  402dc6:	or     al,0xf
  402dc8:	cdq    
  402dc9:	push   0x1d158f5d
  402dce:	adc    DWORD PTR ds:0xa1c71dad,edx
  402dd4:	mov    al,0x56
  402dd6:	aaa    
  402dd7:	enter  0x9be4,0x7b
  402ddb:	(bad)  
  402ddc:	push   esp
  402ddd:	jo     0x402d70
  402ddf:	sbb    BYTE PTR [edx],bh
  402de1:	sbb    DWORD PTR [ebx],eax
  402de3:	loope  0x402e12
  402de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402de6:	ds leave 
  402de8:	push   es
  402de9:	ins    BYTE PTR es:[edi],dx
  402dea:	mov    ds:0x29849192,al
  402def:	mov    ah,0x37
  402df1:	xchg   DWORD PTR [edi],esp
  402df3:	mov    eax,0x66c6e1bf
  402df8:	imul   esi
  402dfa:	and    dl,al
  402dfc:	das    
  402dfd:	push   edi
  402dfe:	loope  0x402db6
  402e00:	jle    0x402e37
  402e02:	mov    DWORD PTR [edi],ecx
  402e04:	mov    cs,edx
  402e06:	push   ebp
  402e07:	jbe    0x402ded
  402e09:	into   
  402e0a:	push   ebx
  402e0b:	loopne 0x402ddf
  402e0d:	and    al,0xe5
  402e0f:	dec    edi
  402e10:	outs   dx,DWORD PTR ds:[esi]
  402e11:	cmp    esp,ebx
  402e13:	adc    BYTE PTR [ebx-0x1],cl
  402e16:	adc    BYTE PTR [ebx-0x3c4b5c26],cl
  402e1c:	inc    ecx
  402e1d:	add    DWORD PTR [edx-0x2a],0xf2ddd883
  402e24:	pop    esp
  402e25:	jmp    0x402e99
  402e27:	mov    ds:0xac1d54de,al
  402e2c:	cmp    ch,ch
  402e2e:	jmp    0xfcce5811
  402e33:	mov    eax,0x24877f0
  402e38:	dec    ebx
  402e39:	test   DWORD PTR [esi+0x7d6971d6],edi
  402e3f:	idiv   BYTE PTR [eax+0x49bc10e]
  402e45:	mov    ah,0x1f
  402e47:	add    edx,DWORD PTR [esi+ebp*8-0x4c1a78fd]
  402e4e:	adc    DWORD PTR [ecx-0x3a],esp
  402e51:	mov    ecx,0xcb1721aa
  402e56:	cmp    esi,edx
  402e58:	mov    ds:0xe3c72d45,eax
  402e5d:	dec    esi
  402e5e:	pusha  
  402e5f:	loop   0x402e12
  402e61:	je     0x402ebb
  402e63:	cs (bad) 
  402e65:	loopne 0x402ded
  402e67:	or     DWORD PTR [edi],edx
  402e69:	mov    edi,0x376e1e18
  402e6e:	mov    ?,WORD PTR [edi]
  402e70:	cmp    ebp,DWORD PTR [ebx+0x5a]
  402e73:	pop    edx
  402e74:	jp     0x402eae
  402e76:	jmp    0x28229295
  402e7b:	into   
  402e7c:	ret    
  402e7d:	frstor [edi]
  402e7f:	scas   al,BYTE PTR es:[edi]
  402e80:	cld    
  402e81:	stos   BYTE PTR es:[edi],al
  402e82:	add    ebx,esi
  402e84:	ror    DWORD PTR [edx-0x55c6b562],1
  402e8a:	sub    ebp,DWORD PTR [ebx-0x6a]
  402e8d:	loop   0x402e15
  402e8f:	mov    BYTE PTR ds:[edi-0x2001f90b],al
  402e96:	les    eax,FWORD PTR [ecx-0x34]
  402e99:	repz mov ebp,0xa146196b
  402e9f:	add    BYTE PTR [edi+esi*8-0x3de14dbb],cl
  402ea6:	enter  0x472a,0x17
  402eaa:	jbe    0x402eb3
  402eac:	enter  0x4d2a,0x7a
  402eb0:	mov    ebp,0xa9569e47
  402eb5:	xor    eax,0x2524459
  402eba:	mov    al,ds:0xc4a8220c
  402ebf:	jle    0x402e70
  402ec1:	jo     0x402ea5
  402ec3:	pusha  
  402ec4:	xchg   edi,eax
  402ec5:	push   esp
  402ec6:	adc    dh,BYTE PTR [eax+0x75]
  402ec9:	scas   eax,DWORD PTR es:[edi]
  402eca:	dec    edx
  402ecb:	(bad)  
  402ecc:	popf   
  402ecd:	push   esp
  402ece:	addr16 js 0x402edf
  402ed1:	adc    DWORD PTR [edx],edi
  402ed3:	aam    0x48
  402ed5:	(bad)  
  402ed6:	jmp    0xbd24b512
  402edb:	jae    0x402e9d
  402edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ede:	sub    al,0x8a
  402ee0:	(bad)  [ebx+0x22cf3dfc]
  402ee6:	mov    ss,WORD PTR [eax+0x25258f75]
  402eec:	mov    al,ds:0xa88e097
  402ef1:	cmc    
  402ef2:	or     DWORD PTR ds:[esi-0x72353596],0x10
  402efa:	lahf   
  402efb:	xor    bh,BYTE PTR [ebx+0x3]
  402efe:	mov    ds:0xc5460bcb,eax
  402f03:	inc    esi
  402f04:	and    al,0xf
  402f06:	fist   WORD PTR [ecx]
  402f08:	rcl    BYTE PTR [esi],1
  402f0a:	aam    0x9a
  402f0c:	cmp    DWORD PTR [esi+0x70],edx
  402f0f:	ja     0x402ef0
  402f11:	dec    ebp
  402f12:	mov    edi,0x12a69fa
  402f17:	ret    
  402f18:	cmp    DWORD PTR [edx-0x5ef04c82],eax
  402f1e:	inc    esp
  402f1f:	jbe    0x402eaf
  402f21:	dec    esi
  402f22:	loope  0x402f37
  402f24:	arpl   ax,di
  402f26:	gs cdq 
  402f28:	pushf  
  402f29:	push   edi
  402f2a:	(bad)  
  402f2b:	dec    edx
  402f2c:	push   edx
  402f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f2e:	or     esp,DWORD PTR [ebx+0x1b4f0fba]
  402f34:	mov    DWORD PTR [ebx],ebx
  402f36:	sar    BYTE PTR [esi+edx*8+0x20],cl
  402f3a:	mov    ds:0xffff817b,al
  402f3f:	repz cmp bl,bh
  402f42:	mov    eax,ds:0xaf3ff974
  402f47:	sub    ah,BYTE PTR [esi+0x37]
  402f4a:	adc    DWORD PTR [ebp+0x28b4d4f1],ecx
  402f50:	mov    ebx,0x67ea325d
  402f55:	or     cl,BYTE PTR [ebx-0x507b8860]
  402f5b:	mov    ecx,0x5adafceb
  402f60:	jg     0x402f91
  402f62:	test   DWORD PTR [edi+ebp*1+0x5d075eae],edx
  402f69:	dec    ebx
  402f6a:	mov    ebx,0xa45d0f98
  402f6f:	js     0x402fbd
  402f71:	outs   dx,BYTE PTR ds:[esi]
  402f72:	nop
  402f73:	inc    ebp
  402f74:	xchg   edi,eax
  402f75:	cli    
  402f76:	in     al,0x8e
  402f78:	scas   al,BYTE PTR es:[edi]
  402f79:	cmc    
  402f7a:	xchg   BYTE PTR [edx],ah
  402f7c:	sbb    ecx,DWORD PTR [edi+0x9]
  402f7f:	fild   WORD PTR [edx-0x526c0175]
  402f85:	jle    0x402f25
  402f87:	mov    eax,gs
  402f89:	cdq    
  402f8a:	(bad)  
  402f8b:	retf   
  402f8c:	pop    ebp
  402f8d:	shl    DWORD PTR [eax+ebx*2],0xb8
  402f91:	or     DWORD PTR [edi-0x3],ebp
  402f94:	int    0x8d
  402f96:	cmp    DWORD PTR gs:[eax-0x59],esp
  402f9a:	xor    eax,0xfe10dc5f
  402f9f:	jne    0x402f53
  402fa1:	std    
  402fa2:	retf   
  402fa3:	repnz sbb eax,0xeb166962
  402fa9:	js     0x403023
  402fab:	out    0xe7,al
  402fad:	repnz xor eax,0xe8c6403f
  402fb3:	adc    edx,DWORD PTR [edx]
  402fb5:	stos   BYTE PTR es:[edi],al
  402fb6:	lds    ebx,FWORD PTR [ebp+0x1f]
  402fb9:	popa   
  402fba:	pop    ss
  402fbb:	dec    edi
  402fbc:	std    
  402fbd:	call   0x1b3d2103
  402fc2:	rol    DWORD PTR [ebx],0x31
  402fc5:	mov    ebx,edi
  402fc7:	jns    0x402f5e
  402fc9:	enter  0xe98,0xaf
  402fcd:	hlt    
  402fce:	aam    0x99
  402fd0:	add    bl,BYTE PTR [ebx+ebp*8]
  402fd3:	jnp    0x403031
  402fd5:	jno    0x402fcc
  402fd7:	shr    DWORD PTR ds:0x10154839,1
  402fdd:	mov    ebx,0x4d2853d9
  402fe2:	pop    ebp
  402fe3:	sub    DWORD PTR [ebx-0x5],edi
  402fe6:	pop    edi
  402fe7:	fsub   QWORD PTR [esi+0x585f48af]
  402fed:	cmp    BYTE PTR [edi],cl
  402fef:	or     edi,DWORD PTR [esi-0x5e]
  402ff2:	push   edi
  402ff3:	popf   
  402ff4:	call   0x26fb:0x4f8574b0
  402ffb:	add    eax,0xabcb2af4
  403000:	dec    edx
  403001:	hlt    
  403002:	mov    ah,0xeb
  403004:	sbb    al,dl
  403006:	daa    
  403007:	imul   esp,DWORD PTR [ebp+0x3b],0x154692d8
  40300e:	adc    esi,ebp
  403010:	ins    DWORD PTR es:[edi],dx
  403011:	pop    ebp
  403012:	sbb    ah,BYTE PTR [edx]
  403014:	(bad)  
  403015:	int    0x88
  403017:	sub    eax,0x1f9eacbf
  40301c:	popf   
  40301d:	xchg   esi,eax
  40301e:	std    
  40301f:	or     BYTE PTR [ebp+edx*1-0x65],ah
  403023:	pop    ss
  403024:	out    dx,al
  403025:	xchg   BYTE PTR [ebx],bh
  403027:	or     bl,ah
  403029:	aad    0x37
  40302b:	inc    eax
  40302c:	push   es
  40302d:	adc    BYTE PTR [ecx-0x15],bl
  403030:	inc    ebx
  403031:	add    BYTE PTR [edx+0xd],cl
  403034:	loop   0x40307d
  403036:	mov    ch,0x2c
  403038:	lahf   
  403039:	cmp    al,0x63
  40303b:	imul   esi,DWORD PTR [edx-0x74],0xfffffff2
  40303f:	sbb    al,0x42
  403041:	or     al,0xe2
  403043:	test   BYTE PTR [edi-0xc],bl
  403046:	fdiv   st,st(6)
  403048:	push   esp
  403049:	dec    edi
  40304a:	iret   
  40304b:	cmp    DWORD PTR [ebx+0x43f7db57],0x2eb00ab8
  403055:	les    ecx,FWORD PTR ds:0x99e4656b
  40305b:	bound  edi,QWORD PTR [edi+0x5ee7836b]
  403061:	mov    ecx,0x1ca5dea
  403066:	fs add BYTE PTR cs:[edx+0x5fead0ac],dl
  40306e:	inc    edx
  40306f:	loop   0x4030a0
  403071:	mov    dl,0x68
  403073:	nop
  403074:	xchg   ecx,eax
  403075:	sti    
  403076:	push   ss
  403077:	pop    esi
  403078:	clc    
  403079:	jmp    0x32487f6
  40307e:	jb     0x4030f7
  403080:	rcl    bh,cl
  403082:	hlt    
  403083:	push   esp
  403084:	ins    BYTE PTR es:[edi],dx
  403085:	inc    eax
  403086:	cmc    
  403087:	ror    ecx,1
  403089:	loope  0x403076
  40308b:	push   ebx
  40308c:	mov    edx,0x29e6e9d0
  403091:	pushf  
  403092:	loope  0x403087
  403094:	imul   edx,DWORD PTR [edx+0x57498610],0xc8ece4d0
  40309e:	pop    edi
  40309f:	fs jg  0x403027
  4030a2:	les    edi,FWORD PTR [edi-0x32]
  4030a5:	iret   
  4030a6:	daa    
  4030a7:	ss scas al,BYTE PTR es:[edi]
  4030a9:	scas   eax,DWORD PTR es:[edi]
  4030aa:	dec    ebp
  4030ab:	(bad)  
  4030ac:	(bad)  
  4030ad:	rcr    DWORD PTR [ebx+0x1ec7cfd2],1
  4030b3:	retf   
  4030b4:	call   0x2a09f31c
  4030b9:	xlat   BYTE PTR ds:[ebx]
  4030ba:	leave  
  4030bb:	xlat   BYTE PTR gs:[ebx]
  4030bd:	js     0x40308d
  4030bf:	and    eax,0xe97d354d
  4030c4:	add    BYTE PTR [edi+0x45],0x45
  4030c8:	lods   al,BYTE PTR ds:[esi]
  4030c9:	sbb    edx,DWORD PTR [eax-0x4e]
  4030cc:	and    al,0x4c
  4030ce:	add    BYTE PTR [ebx],bh
  4030d0:	push   0x5d1f9f05
  4030d5:	sub    esp,ecx
  4030d7:	les    edi,FWORD PTR gs:[edx-0x2a]
  4030db:	iret   
  4030dc:	xor    eax,0xe3096d9c
  4030e1:	inc    esp
  4030e2:	rol    ah,0xa3
  4030e5:	imul   esi,DWORD PTR [eax],0x8901d4b
  4030eb:	hlt    
  4030ec:	(bad)  
  4030ed:	mov    WORD PTR [ebx],es
  4030ef:	leave  
  4030f0:	pusha  
  4030f1:	mov    ds:0xee2adf36,eax
  4030f6:	popa   
  4030f7:	dec    eax
  4030f8:	shl    BYTE PTR [edi+0x16],0xb8
  4030fc:	cmc    
  4030fd:	mov    bl,0x31
  4030ff:	test   eax,0xb245d98c
  403104:	jbe    0x40313e
  403106:	and    BYTE PTR [edx+0xaea2a4a],al
  40310c:	push   eax
  40310d:	ja     0x403136
  40310f:	sbb    cl,0x51
  403112:	popa   
  403113:	mov    ecx,0xc612f15
  403118:	push   0x6b5f70df
  40311d:	jecxz  0x403142
  40311f:	mov    ebx,0x1c366708
  403124:	daa    
  403125:	(bad)  
  403127:	mov    ch,ch
  403129:	push   ecx
  40312a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40312b:	jno    0x40312f
  40312d:	cmp    eax,0x42bbc3d2
  403132:	add    dh,BYTE PTR [ebp+0x5e]
  403135:	mov    ecx,0xb8455f49
  40313a:	repz pop edi
  40313c:	aad    0x8b
  40313e:	imul   esi,DWORD PTR [ebp-0x2095f550],0x75
  403145:	in     eax,0x4e
  403147:	cs enter 0x40f1,0x90
  40314c:	mov    al,0x25
  40314e:	in     eax,dx
  40314f:	shr    bl,1
  403151:	data16 sbb BYTE PTR [eax-0x65],dh
  403155:	push   esi
  403156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403157:	test   BYTE PTR [ebp+0x783b6e95],0x8f
  40315e:	jl     0x40316d
  403160:	xor    DWORD PTR [eax],0x42316ad6
  403166:	inc    eax
  403167:	imul   esp,DWORD PTR [eax-0x3fe63d7d],0xffffffd2
  40316e:	fs or  al,0x93
  403171:	pop    ecx
  403172:	xchg   ecx,eax
  403173:	out    0xff,eax
  403175:	fsubrp st(6),st
  403177:	loop   0x4031d1
  403179:	into   
  40317a:	sub    DWORD PTR [ebx+0x4e3b5f80],ebx
  403180:	mov    ebp,0xee2fc86b
  403185:	jecxz  0x403175
  403187:	loop   0x403182
  403189:	sbb    DWORD PTR [ebx+0x1c],esi
  40318c:	shl    ecx,cl
  40318e:	fdiv   DWORD PTR [eax]
  403190:	sub    ah,BYTE PTR [edi+0x18]
  403193:	test   BYTE PTR [esi+0x2f86e41c],0x62
  40319a:	shl    ecx,0xf
  40319d:	or     BYTE PTR [ebp+0x28b11c49],ah
  4031a3:	pop    esi
  4031a4:	inc    edx
  4031a5:	jmp    0x136f2701
  4031aa:	jne    0x40319a
  4031ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031ad:	pushf  
  4031ae:	cmp    DWORD PTR [ebp+edi*1+0x64e74fbf],eax
  4031b5:	mov    ebx,0x98df422c
  4031ba:	sbb    cl,BYTE PTR [eax]
  4031bc:	xchg   ebp,eax
  4031bd:	sub    eax,0x1367b9e3
  4031c2:	outs   dx,BYTE PTR ds:[esi]
  4031c3:	inc    esi
  4031c4:	inc    ebx
  4031c5:	pop    edx
  4031c6:	xor    eax,0xcbe9134b
  4031cb:	inc    esi
  4031cc:	xchg   edi,eax
  4031cd:	sub    esi,DWORD PTR [ebp-0x15ca6cc9]
  4031d3:	inc    eax
  4031d4:	test   al,0x92
  4031d6:	push   edx
  4031d7:	push   es
  4031d8:	dec    esp
  4031d9:	xor    BYTE PTR [esi+0x53],bl
  4031dc:	adc    eax,0x94a5aae3
  4031e1:	xlat   BYTE PTR ds:[ebx]
  4031e2:	data16 stos BYTE PTR es:[edi],al
  4031e4:	ds lahf 
  4031e6:	inc    ecx
  4031e7:	pop    ebp
  4031e8:	pusha  
  4031e9:	or     al,0x81
  4031eb:	mov    esp,0xdc54cda0
  4031f0:	mov    ecx,0xfb804793
  4031f5:	xchg   edi,eax
  4031f6:	int    0x4a
  4031f8:	pop    esp
  4031f9:	call   0xfa60c864
  4031fe:	sbb    al,0x3a
  403200:	lods   al,BYTE PTR ds:[esi]
  403201:	push   0x9bb39040
  403206:	in     eax,dx
  403207:	jg     0x403217
  403209:	mov    ch,BYTE PTR [esp+ebp*2]
  40320c:	rcr    edi,0x71
  40320f:	cmp    ah,BYTE PTR [edx+edi*2-0x2a62e2e7]
  403216:	icebp  
  403217:	or     ecx,DWORD PTR [ebp-0x5bce0dcb]
  40321d:	mov    DWORD PTR [ebx-0x10],ebx
  403220:	sbb    ah,cl
  403222:	mov    ah,0x4c
  403224:	xor    edx,DWORD PTR [edx-0x3]
  403227:	pop    es
  403228:	(bad)  
  403229:	pop    ebx
  40322a:	hlt    
  40322b:	retf   
  40322c:	imul   ebx,DWORD PTR [ecx],0x1b
  40322f:	ret    0x836f
  403232:	loopne 0x40322c
  403234:	push   edi
  403235:	inc    esi
  403236:	mov    cl,0xa3
  403238:	xor    eax,0xece9cb28
  40323d:	pop    es
  40323e:	mov    ah,0xa6
  403240:	leave  
  403241:	jns    0x4032a2
  403243:	sbb    al,0x9e
  403245:	ret    0x3cfc
  403248:	cmp    al,0x5b
  40324a:	arpl   WORD PTR [ecx],si
  40324c:	mov    ds:0xdb3a99fd,al
  403251:	adc    ebx,DWORD PTR [esi+0x4b]
  403254:	in     al,dx
  403255:	popf   
  403256:	in     eax,dx
  403257:	jmp    0x9b4e:0xcf90d680
  40325e:	retf   0xc36
  403261:	bound  ebx,QWORD PTR [ebp-0xb]
  403264:	sub    DWORD PTR [ebp-0x6d],ebp
  403267:	push   ebp
  403268:	fdivr  QWORD PTR [ecx-0x3b]
  40326b:	xchg   ebp,eax
  40326c:	inc    edx
  40326d:	jae    0x403209
  40326f:	nop
  403270:	cs in  eax,0xb9
  403273:	mov    bh,0xc9
  403275:	cdq    
  403276:	push   ss
  403277:	inc    ebx
  403278:	lock dec edx
  40327a:	in     eax,0xd8
  40327c:	enter  0x6ca3,0xb
  403280:	adc    DWORD PTR [edx+0x17],ebx
  403283:	icebp  
  403284:	fdiv   QWORD PTR [esi]
  403286:	lods   al,BYTE PTR ds:[esi]
  403287:	mov    bh,0x6a
  403289:	inc    ecx
  40328a:	arpl   bp,si
  40328c:	pusha  
  40328d:	mov    bh,0xb3
  40328f:	mov    cl,0xdf
  403291:	les    ebp,FWORD PTR [edi-0x300f4593]
  403297:	fcomp  DWORD PTR [ebx]
  403299:	imul   edi,DWORD PTR [edx+ebp*1-0x2e224d6e],0x2c
  4032a1:	mov    dl,0x73
  4032a3:	xor    BYTE PTR [eax],0x76
  4032a6:	test   eax,0x4daeb927
  4032ab:	push   0x44
  4032ad:	and    ecx,ebp
  4032af:	inc    eax
  4032b0:	arpl   WORD PTR [esi+eiz*1+0x7b],di
  4032b4:	aam    0xc5
  4032b6:	xchg   esi,eax
  4032b7:	lock inc esp
  4032b9:	xchg   ecx,eax
  4032ba:	nop
  4032bb:	sbb    eax,0x955e572
  4032c0:	sub    edx,DWORD PTR [ebx-0x44742542]
  4032c6:	mov    eax,ds:0x6b667265
  4032cb:	frstor [ebx+0x3498ca50]
  4032d1:	sub    al,0xc1
  4032d3:	out    dx,eax
  4032d4:	push   edi
  4032d5:	pusha  
  4032d6:	add    al,0x4a
  4032d8:	loop   0x403322
  4032da:	fstp   QWORD PTR [edi+0x3e5e8ed]
  4032e0:	sar    BYTE PTR [edi],cl
  4032e2:	scas   eax,DWORD PTR es:[edi]
  4032e3:	jo     0x4032b1
  4032e5:	or     al,BYTE PTR [eax+0x5cc380f0]
  4032eb:	inc    edi
  4032ec:	jp     0x4032dd
  4032ee:	arpl   cx,dx
  4032f0:	xchg   BYTE PTR [ebx-0x38],al
  4032f3:	mov    edx,0xcec88f5d
  4032f8:	int3   
  4032f9:	repnz mov ch,0xfd
  4032fc:	nop
  4032fd:	jle    0x403345
  4032ff:	sahf   
  403300:	push   ds
  403301:	ins    BYTE PTR es:[edi],dx
  403302:	loop   0x403320
  403304:	jno    0x403359
  403306:	(bad)  
  403307:	inc    ah
  403309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40330a:	xor    eax,0xb6185d9a
  40330f:	mov    ebp,0xb1c9d184
  403314:	push   edi
  403315:	dec    eax
  403316:	enter  0x9be2,0xb5
  40331a:	dec    esi
  40331b:	xor    al,0x29
  40331d:	ja     0x40337c
  40331f:	stos   BYTE PTR es:[edi],al
  403320:	inc    esp
  403321:	(bad)  
  403322:	daa    
  403323:	push   esp
  403324:	jle    0x40330f
  403326:	loop   0x40330c
  403328:	sti    
  403329:	sbb    edi,0xb6d18ab9
  40332f:	pop    esp
  403330:	not    DWORD PTR [esi-0x48]
  403333:	fldcw  WORD PTR [edi-0x62]
  403336:	or     ebp,edx
  403338:	jmp    0x4032da
  40333a:	xor    dh,BYTE PTR [ebx]
  40333c:	adc    eax,0xa798e8e3
  403341:	mov    bh,0x6e
  403343:	gs sub eax,0x55aaa709
  403349:	adc    BYTE PTR [eax-0xc619734],al
  40334f:	and    BYTE PTR ds:0x84499e7,al
  403355:	hlt    
  403356:	xchg   edx,eax
  403357:	test   eax,0x49f8f0cb
  40335c:	fwait
  40335d:	or     DWORD PTR [edx-0x69],eax
  403360:	push   edx
  403361:	mov    edi,0xe4f66b07
  403366:	arpl   WORD PTR [edx+0x921986e],ax
  40336c:	dec    ecx
  40336d:	xchg   esi,eax
  40336e:	or     al,0xbc
  403370:	call   0xc7bbab22
  403375:	les    esp,FWORD PTR [esi+0x67]
  403378:	je     0x4033a5
  40337a:	jo     0x403348
  40337c:	cmp    BYTE PTR [ebp+eiz*2-0x4a390dad],bl
  403383:	xchg   ecx,eax
  403384:	push   es
  403385:	sahf   
  403386:	lods   al,BYTE PTR ds:[esi]
  403387:	movsx  ebx,BYTE PTR [eax]
  40338a:	fbld   TBYTE PTR [ebx-0x30]
  40338d:	inc    esp
  40338e:	mov    esp,0xb5dd902f
  403393:	jb     0x40335d
  403395:	cmp    BYTE PTR [ecx+0xee7d780],ch
  40339b:	pop    eax
  40339c:	sub    al,0xcb
  40339e:	dec    esp
  40339f:	jae    0x403376
  4033a1:	dec    ebp
  4033a2:	cmp    al,0x9b
  4033a4:	jne    0x40333d
  4033a6:	mov    ch,0x36
  4033a8:	and    eax,0x61ae50f3
  4033ad:	xor    al,0x6e
  4033af:	loop   0x4033aa
  4033b1:	jmp    0x45cd:0x6845c250
  4033b8:	cmp    eax,0x441204f2
  4033bd:	dec    esp
  4033be:	cmp    cl,BYTE PTR [edi-0x14]
  4033c1:	or     al,0x9d
  4033c3:	cld    
  4033c4:	(bad)  
  4033c6:	inc    ebx
  4033c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033c8:	popa   
  4033c9:	xchg   ecx,eax
  4033ca:	add    DWORD PTR [eax+eiz*2],esp
  4033cd:	in     eax,dx
  4033ce:	cs (bad) 
  4033d0:	xor    al,0x3a
  4033d2:	push   es
  4033d3:	jg     0x403438
  4033d5:	mov    bl,0xf3
  4033d7:	and    al,0xe5
  4033d9:	(bad)  
  4033da:	sbb    DWORD PTR [esi-0x73d23b02],0x29b71f1a
  4033e4:	fstp   TBYTE PTR [eax+0x26504414]
  4033ea:	int3   
  4033eb:	stc    
  4033ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ed:	pop    ebx
  4033ee:	inc    esp
  4033ef:	cmp    BYTE PTR [edx+0x23],dl
  4033f2:	lods   eax,DWORD PTR ds:[esi]
  4033f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033f4:	or     al,0x1e
  4033f6:	in     al,dx
  4033f7:	sub    ebp,DWORD PTR ds:0xf5941a5f
  4033fd:	push   ebp
  4033fe:	adc    al,0x9f
  403400:	mov    ebx,0x6a286d81
  403405:	inc    esi
  403406:	and    DWORD PTR [edi+ebp*4],ebp
  403409:	in     eax,0xaf
  40340b:	xchg   ebp,eax
  40340c:	cmp    al,0x51
  40340e:	inc    esp
  40340f:	or     BYTE PTR [edi],0xfb
  403412:	loopne 0x40346d
  403414:	iret   
  403415:	xchg   esp,eax
  403416:	mov    ?,WORD PTR [ecx]
  403418:	pop    edi
  403419:	out    0x97,al
  40341b:	test   eax,0xd0e814a1
  403420:	mov    ss,WORD PTR [ebx+ebp*4+0x6d795cf3]
  403427:	test   eax,0x5a35cf7e
  40342c:	adc    bl,BYTE PTR [edi]
  40342e:	mov    esi,0x5caa177a
  403433:	mov    ecx,0x4edba963
  403438:	fcomp  DWORD PTR [ebx+ebp*4+0x72]
  40343c:	jecxz  0x4034b6
  40343e:	sbb    esp,DWORD PTR [esi]
  403440:	aad    0xf9
  403442:	mov    eax,0x4c7a20d3
  403447:	xor    eax,0x72aeae1b
  40344c:	dec    esp
  40344d:	test   BYTE PTR [edx-0x70],al
  403450:	stos   BYTE PTR es:[edi],al
  403451:	addr16 jns 0x4034ad
  403454:	jle    0x40346c
  403456:	hlt    
  403457:	ffree  st(7)
  403459:	jg     0x403411
  40345b:	adc    BYTE PTR [eax],ah
  40345d:	xor    dh,BYTE PTR [ebp-0x562da34c]
  403463:	test   eax,0x6f9e0de6
  403468:	cmp    BYTE PTR [ebx+0x16b97fb9],0xdb
  40346f:	iret   
  403470:	test   DWORD PTR [ecx],0xfc0261c6
  403476:	stos   BYTE PTR es:[edi],al
  403477:	ss aam 0x17
  40347a:	ja     0x4034f5
  40347c:	shr    DWORD PTR ds:0x4a4be888,1
  403482:	push   ds
  403483:	jno    0x40348e
  403485:	imul   edx,DWORD PTR ds:0xff73ef8c,0xfffffffb
  40348c:	or     dh,BYTE PTR [edx]
  40348e:	ins    BYTE PTR es:[edi],dx
  40348f:	call   0x4f52:0xcd4b26f3
  403496:	gs inc esi
  403498:	mov    bh,0x75
  40349a:	jge    0x403476
  40349c:	mov    esp,fs
  40349e:	test   DWORD PTR [ebx+0x6f],esi
  4034a1:	sub    ch,BYTE PTR [ecx+0x6b]
  4034a4:	clc    
  4034a5:	icebp  
  4034a6:	pop    esp
  4034a7:	mov    ebp,DWORD PTR [ebp+esi*2-0x68]
  4034ab:	add    DWORD PTR [ebp+0x52],edx
  4034ae:	adc    DWORD PTR [eax-0x45],edi
  4034b1:	cmp    al,0x98
  4034b3:	dec    ebp
  4034b4:	push   0x2c
  4034b6:	mov    dl,0x59
  4034b8:	sub    al,BYTE PTR [ebx+ebp*1+0x61bd990b]
  4034bf:	das    
  4034c0:	fistp  QWORD PTR ds:[esi-0x9e2d886]
  4034c7:	push   es
  4034c8:	push   esp
  4034c9:	or     ecx,ebp
  4034cb:	add    bl,dh
  4034cd:	loope  0x4034b8
  4034cf:	test   al,0xbb
  4034d1:	sti    
  4034d2:	jge    0x40350c
  4034d4:	jle    0x403504
  4034d6:	ret    
  4034d7:	cwde   
  4034d8:	xor    DWORD PTR [eax+0x5cc75059],eax
  4034de:	pushf  
  4034df:	dec    edi
  4034e0:	test   BYTE PTR [ebp-0x422536b4],al
  4034e6:	les    ebp,FWORD PTR [edi]
  4034e8:	(bad)  
  4034e9:	cvtps2pi mm7,QWORD PTR [edi]
  4034ec:	push   0xdd22e887
  4034f1:	das    
  4034f2:	in     al,dx
  4034f3:	jge    0x4034f3
  4034f5:	retf   
  4034f6:	push   eax
  4034f7:	sub    eax,0xaaeda3ff
  4034fc:	daa    
  4034fd:	daa    
  4034fe:	fsub   QWORD PTR [ebx-0x4dd819fd]
  403504:	mov    al,0xef
  403506:	sub    al,0x73
  403508:	inc    edi
  403509:	xchg   ecx,eax
  40350a:	push   cs
  40350b:	dec    eax
  40350c:	out    0xd4,al
  40350e:	outs   dx,BYTE PTR ds:[esi]
  40350f:	cmp    BYTE PTR [edx+0x58],al
  403512:	pusha  
  403513:	aam    0x3b
  403515:	mov    edx,0xd70ddf43
  40351a:	dec    esi
  40351b:	inc    ecx
  40351c:	(bad)  
  40351d:	stc    
  40351e:	fimul  WORD PTR [ecx+ebp*4-0x4c6e0a5]
  403525:	and    DWORD PTR [edx-0x1760bea7],edx
  40352b:	cli    
  40352c:	jne    0x4034c0
  40352e:	(bad)  
  40352f:	mov    ebx,0xf44d59b3
  403534:	shl    DWORD PTR [edi+ebx*1+0x1b],cl
  403538:	mov    esp,0x313aa2ca
  40353d:	add    ebp,DWORD PTR [eax]
  40353f:	mov    ebx,0xdad2007c
  403544:	jmp    0xaf6c:0x6d24dc2
  40354b:	jns    0x40357f
  40354d:	cmp    DWORD PTR [ebx+eax*1],0x53
  403551:	xchg   ebp,eax
  403552:	aad    0x0
  403554:	iret   
  403555:	bound  edx,QWORD PTR [ebp-0x2e]
  403558:	xor    al,0x0
  40355a:	dec    esp
  40355b:	fadd   QWORD PTR [edi-0x60b441a5]
  403561:	and    DWORD PTR [esi+0x4a662902],edx
  403567:	fnstenv [ebp-0x35]
  40356a:	retf   0x5d81
  40356d:	sub    ah,dh
  40356f:	loop   0x4035a8
  403571:	test   BYTE PTR [esi-0x9f5a58b],cl
  403577:	cld    
  403578:	loop   0x4034fa
  40357a:	ror    bl,0x97
  40357d:	fild   WORD PTR [edx+eax*4+0x46]
  403581:	add    ebp,DWORD PTR [ebx+ecx*4+0x75]
  403585:	shr    DWORD PTR [edi+0x67d2a76c],cl
  40358b:	sub    DWORD PTR [ebx-0x4fd4243c],esp
  403591:	fcom   QWORD PTR [ebp+0x27789833]
  403597:	inc    ebx
  403598:	fisttp WORD PTR [ebp+0x2370b4f3]
  40359e:	loope  0x4035c4
  4035a0:	popa   
  4035a1:	mov    ah,0x59
  4035a3:	imul   ebx,DWORD PTR [edx+0x69630d17],0x46
  4035aa:	(bad)  
  4035ab:	cmp    al,0x5d
  4035ad:	jae    0x4035ef
  4035af:	sub    al,0x32
  4035b1:	ins    DWORD PTR es:[edi],dx
  4035b2:	bound  esp,QWORD PTR [esi-0x30]
  4035b5:	cdq    
  4035b6:	jmp    0x403582
  4035b8:	sub    DWORD PTR [ebp+eiz*1-0x72f0e767],ebx
  4035bf:	lods   eax,DWORD PTR ds:[esi]
  4035c0:	jnp    0x403615
  4035c2:	mov    DWORD PTR ds:0x820ceaa0,eax
  4035c8:	ss dec ebx
  4035ca:	cmp    edx,esp
  4035cc:	and    edx,DWORD PTR [eax]
  4035ce:	xor    edi,DWORD PTR [ecx+0x33]
  4035d1:	stos   DWORD PTR es:[edi],eax
  4035d2:	adc    ebx,DWORD PTR [ebx-0x5c4b91fb]
  4035d8:	add    bh,bl
  4035da:	cmc    
  4035db:	push   eax
  4035dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035dd:	out    dx,eax
  4035de:	test   BYTE PTR [edi+0x615caa1f],cl
  4035e4:	fldenv [ebp-0x43]
  4035e7:	in     al,0xa
  4035e9:	sub    ah,bl
  4035eb:	in     al,dx
  4035ec:	pushf  
  4035ed:	stos   BYTE PTR es:[edi],al
  4035ee:	mov    ch,0xa
  4035f0:	outs   dx,DWORD PTR ds:[esi]
  4035f1:	sub    DWORD PTR [ebx+0x1142bab3],ebp
  4035f7:	fimul  DWORD PTR [ecx-0x3f69a8c8]
  4035fd:	cs and al,0x1f
  403600:	pop    eax
  403601:	adc    al,0x6a
  403603:	(bad)
  403606:	stos   BYTE PTR es:[edi],al
  403607:	sar    BYTE PTR [edi+eiz*4+0x2],1
  40360b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40360c:	cmp    DWORD PTR [esi],esp
  40360e:	sbb    edi,eax
  403610:	gs jecxz 0x403655
  403613:	jne    0x403685
  403615:	mov    eax,0x5087627b
  40361a:	push   ebp
  40361b:	push   ss
  40361c:	xchg   bh,bl
  40361e:	stc    
  40361f:	adc    ecx,0xb1dcbc01
  403625:	dec    edi
  403626:	ja     0x40369b
  403628:	inc    ecx
  403629:	mov    eax,0x73828006
  40362e:	retf   0xbe
  403631:	(bad)  
  403632:	xor    eax,0xfdaac92e
  403637:	sbb    BYTE PTR ds:0x64a734a0,cl
  40363d:	(bad)  
  40363e:	int    0x3a
  403640:	adc    DWORD PTR [ebx],ecx
  403642:	jno    0x403694
  403644:	and    eax,edx
  403646:	sahf   
  403647:	out    0x84,eax
  403649:	enter  0x7b24,0x9a
  40364d:	loope  0x403678
  40364f:	clc    
  403650:	lds    edi,FWORD PTR ds:0x1ccfc5bd
  403656:	or     edx,0xdd508484
  40365c:	mov    ebp,0x93d9c056
  403661:	repnz sbb ebp,DWORD PTR [ecx+0x15]
  403665:	jbe    0x40364a
  403667:	mov    al,0xa
  403669:	lahf   
  40366a:	inc    esi
  40366b:	mov    esp,0x5b0381d8
  403670:	into   
  403671:	jmp    0x403688
  403673:	mov    dh,0x5b
  403675:	and    ch,BYTE PTR [ecx+0x2f568893]
  40367b:	jmp    0x3faa:0x49d84a2e
  403682:	test   DWORD PTR cs:[ecx+0x45b58867],ecx
  403689:	mov    esp,0xc7f0741e
  40368e:	mov    BYTE PTR [eax],bl
  403690:	jge    0x403635
  403692:	mov    ch,0xbc
  403694:	mov    ds:0xfc36a679,al
  403699:	adc    al,0x94
  40369b:	and    BYTE PTR [ebp-0x7bdeb4b],0x45
  4036a2:	mov    eax,0x28781109
  4036a7:	cdq    
  4036a8:	dec    edi
  4036a9:	xor    DWORD PTR [edx-0x68100eec],esp
  4036af:	and    ebx,edx
  4036b1:	cmp    BYTE PTR [edx+0x5a],ah
  4036b4:	inc    ecx
  4036b5:	dec    ebx
  4036b6:	nop
  4036b7:	jmp    0x403650
  4036b9:	adc    eax,0x649d064d
  4036be:	imul   edi,DWORD PTR [edi-0x39a5beac],0x193b5d52
  4036c8:	add    ch,BYTE PTR [ebx]
  4036ca:	shl    DWORD PTR [ebx],1
  4036cc:	dec    ebx
  4036cd:	pop    ds
  4036ce:	jmp    0x59aadd7f
  4036d3:	mov    ebx,DWORD PTR [ecx+0x31050ef7]
  4036d9:	jmp    0x40365d
  4036db:	cmp    al,0x2
  4036dd:	inc    ebx
  4036de:	cmp    bl,BYTE PTR [ecx+0x6d]
  4036e1:	lods   eax,DWORD PTR ds:[esi]
  4036e2:	pop    ds
  4036e3:	push   0xffffffb9
  4036e5:	sub    DWORD PTR [ecx+0x566ad47a],0x51
  4036ec:	mov    ecx,0xf2e16da2
  4036f1:	and    al,0x88
  4036f3:	stos   BYTE PTR es:[edi],al
  4036f4:	ficom  WORD PTR [ebx]
  4036f6:	push   edi
  4036f7:	(bad)  
  4036f8:	and    al,0x39
  4036fa:	js     0x4036d9
  4036fc:	outs   dx,BYTE PTR ds:[esi]
  4036fd:	pop    eax
  4036fe:	push   edi
  4036ff:	mul    BYTE PTR [ebx-0x35]
  403702:	aad    0xb0
  403704:	pop    esi
  403705:	adc    eax,0x109e8e5c
  40370a:	ja     0x403700
  40370c:	rcr    BYTE PTR [esi],1
  40370e:	add    bh,BYTE PTR ds:0x7b27926b
  403714:	sbb    ah,BYTE PTR [ebp-0x4a]
  403717:	gs sbb al,0x4a
  40371a:	adc    eax,0x8f3d6e5a
  40371f:	fild   WORD PTR [esi+0x25]
  403722:	cmp    BYTE PTR [esi],cl
  403724:	outs   dx,DWORD PTR ds:[esi]
  403725:	icebp  
  403726:	repz push edi
  403728:	imul   esp,ecx,0xcc7dbc35
  40372e:	mov    ebp,0x8239dbc8
  403733:	test   eax,0x32de2cfa
  403738:	inc    ch
  40373a:	cmp    cl,ch
  40373c:	out    0x8c,al
  40373e:	xchg   DWORD PTR [ecx],esi
  403740:	sbb    al,0x84
  403742:	ja     0x40378b
  403744:	js     0x4037bd
  403746:	pop    eax
  403747:	iret   
  403748:	(bad)  
  403749:	dec    esi
  40374a:	jge    0x4036ee
  40374c:	sub    bl,ah
  40374e:	cdq    
  40374f:	inc    ecx
  403750:	cld    
  403751:	cmc    
  403752:	rcl    BYTE PTR [eax],cl
  403754:	inc    esi
  403755:	mov    eax,ebx
  403757:	push   ebp
  403758:	rcr    BYTE PTR [edx+eax*4+0x79081884],cl
  40375f:	fmul   st(7),st
  403761:	mov    BYTE PTR [edx+0x2bcb2a3e],cl
  403767:	push   esi
  403768:	xchg   esp,eax
  403769:	push   ss
  40376a:	mov    DWORD PTR es:[ebp-0x749bb431],edx
  403771:	sub    eax,0x18699844
  403776:	and    al,0xd9
  403778:	mov    edx,0x866b040a
  40377d:	pop    edx
  40377e:	jbe    0x403746
  403780:	push   edi
  403781:	pop    esp
  403782:	int    0x91
  403784:	int3   
  403785:	xlat   BYTE PTR ds:[ebx]
  403786:	dec    esi
  403787:	jmp    0xf42:0xbd314803
  40378e:	cmp    BYTE PTR [edx-0x16938b88],al
  403794:	in     al,dx
  403795:	or     DWORD PTR [eax+esi*8-0x53],ebp
  403799:	or     DWORD PTR [ebp+0x27218d14],ebx
  40379f:	push   cs
  4037a0:	scas   eax,DWORD PTR es:[edi]
  4037a1:	mov    edx,0xd2b17ba0
  4037a6:	pop    ebx
  4037a7:	and    ah,ah
  4037a9:	out    0xa7,eax
  4037ab:	jp     0x403818
  4037ad:	(bad)  [ecx]
  4037af:	push   eax
  4037b0:	push   ds
  4037b1:	mov    ah,BYTE PTR [eax]
  4037b3:	lods   eax,DWORD PTR ds:[esi]
  4037b4:	mov    BYTE PTR [ebx],al
  4037b6:	rol    BYTE PTR ds:0x30af2b95,0x45
  4037bd:	adc    al,0x10
  4037bf:	sub    al,bh
  4037c1:	or     bl,BYTE PTR [ecx]
  4037c3:	repnz enter 0x2ee8,0xa1
  4037c8:	jbe    0x403845
  4037ca:	mov    al,0xfe
  4037cc:	pop    esp
  4037cd:	pop    ss
  4037ce:	mov    ds:0xf5dc1534,al
  4037d3:	cwde   
  4037d4:	dec    edx
  4037d5:	or     eax,0x89defd28
  4037da:	test   ebx,ebp
  4037dc:	jb     0x4037ca
  4037de:	dec    ebp
  4037df:	pop    ebx
  4037e0:	lods   eax,DWORD PTR ds:[esi]
  4037e1:	add    eax,edx
  4037e3:	in     al,0x85
  4037e5:	(bad)  
  4037e6:	dec    ebx
  4037e7:	jmp    0x35aac143
  4037ec:	xchg   ebx,eax
  4037ed:	jle    0x403801
  4037ef:	inc    ebp
  4037f0:	jnp    0x403813
  4037f2:	jo     0x40378b
  4037f4:	inc    eax
  4037f5:	(bad)  
  4037f6:	xchg   edx,eax
  4037f7:	(bad)  
  4037f8:	and    DWORD PTR [esi],ebp
  4037fa:	jmp    0x25d429b
  4037ff:	adc    al,0xdf
  403801:	mov    eax,0x48de715b
  403806:	lods   eax,DWORD PTR ds:[esi]
  403807:	js     0x4037b0
  403809:	loop   0x40382b
  40380b:	scas   eax,DWORD PTR es:[edi]
  40380c:	push   eax
  40380d:	imul   DWORD PTR [ebp+0x9]
  403810:	std    
  403811:	sbb    DWORD PTR [eax],ebx
  403813:	lea    edi,[ebx-0x2438b6de]
  403819:	xlat   BYTE PTR ds:[ebx]
  40381a:	fild   WORD PTR [edx]
  40381c:	scas   al,BYTE PTR es:[edi]
  40381d:	or     BYTE PTR [ebp-0x260c676f],cl
  403823:	cld    
  403824:	adc    ecx,eax
  403826:	(bad)  
  403827:	cmp    eax,0x6311d405
  40382c:	pop    ds
  40382d:	jne    0x40380c
  40382f:	dec    esi
  403830:	scas   eax,DWORD PTR es:[edi]
  403831:	adc    al,bl
  403833:	xchg   ebp,eax
  403834:	dec    eax
  403835:	mov    bh,0x4
  403837:	sbb    al,BYTE PTR [esi-0x2f6323e7]
  40383d:	inc    esp
  40383e:	iret   
  40383f:	inc    esp
  403840:	dec    esp
  403841:	mov    ebx,0xbf7884e4
  403846:	(bad)  
  403847:	call   0x824f:0x15eddb31
  40384e:	mov    cl,0xc0
  403850:	dec    edx
  403851:	pushf  
  403852:	mov    al,ds:0x2c9a2601
  403857:	out    0xee,eax
  403859:	mov    DWORD PTR ds:0x5d6ce766,ebx
  40385f:	sub    dh,BYTE PTR ds:0x10a00de9
  403865:	cpuid  
  403867:	leave  
  403868:	sbb    esi,DWORD PTR [edx+0x3fe79eb0]
  40386e:	or     edx,DWORD PTR [eax-0x5a]
  403871:	fimul  WORD PTR [ebp+0x5ee2b4eb]
  403877:	push   0xeef47d19
  40387c:	sbb    al,dl
  40387e:	sub    BYTE PTR gs:[edx],ch
  403881:	aas    
  403882:	xchg   ebp,eax
  403883:	into   
  403884:	in     al,dx
  403885:	mov    ebx,0x999ba5aa
  40388a:	cwde   
  40388b:	inc    ecx
  40388c:	or     DWORD PTR ds:0x66347891,ebp
  403892:	mov    ebx,0x4b76914e
  403897:	jnp    0x4038ac
  403899:	mov    ds:0x4fdbc1b3,al
  40389e:	lock xchg BYTE PTR [esi+0x52e8cef4],bh
  4038a5:	mov    eax,edx
  4038a7:	adc    esp,DWORD PTR [esi+0x53]
  4038aa:	jbe    0x40387e
  4038ac:	(bad)
  4038b0:	hlt    
  4038b1:	mov    WORD PTR [ebx],ss
  4038b3:	mov    al,ds:0x2a5f8eee
  4038b8:	xchg   edx,eax
  4038b9:	jb     0x403844
  4038bb:	xor    bl,BYTE PTR [edi+eax*4-0x344c184a]
  4038c2:	sahf   
  4038c3:	div    cl
  4038c5:	jmp    0xf110754a
  4038ca:	test   eax,0x1e6777aa
  4038cf:	xchg   esi,eax
  4038d0:	sub    ebp,DWORD PTR [ecx+edi*1]
  4038d3:	mov    ebp,0xfcb90437
  4038d8:	ds das 
  4038da:	idiv   BYTE PTR [ebp-0x14]
  4038dd:	popa   
  4038de:	enter  0xdf2f,0xd2
  4038e2:	ret    
  4038e3:	sbb    eax,0xbae24064
  4038e8:	push   ecx
  4038e9:	xchg   esp,eax
  4038ea:	popa   
  4038eb:	xor    al,0xb8
  4038ed:	cwde   
  4038ee:	mov    ah,0xd9
  4038f0:	out    dx,al
  4038f1:	mov    al,0x8a
  4038f3:	ja     0x4038dc
  4038f5:	enter  0x98c8,0x5c
  4038f9:	das    
  4038fa:	mov    eax,ds:0xad1b6c3e
  4038ff:	repz adc DWORD PTR [ebx-0x301c6074],esi
  403906:	retf   0x4e
  403909:	mov    al,0x62
  40390b:	xchg   esp,eax
  40390c:	fdiv   QWORD PTR [ebp+0x7a5268d6]
  403912:	out    dx,eax
  403913:	mov    edx,0xfe92f3f9
  403918:	xchg   ah,dl
  40391a:	scas   eax,DWORD PTR es:[edi]
  40391b:	add    ecx,DWORD PTR [edi-0x48]
  40391e:	nop
  40391f:	sbb    BYTE PTR [ebx],ah
  403921:	adc    al,0x27
  403923:	leave  
  403924:	mov    edi,0x2432dc70
  403929:	jmp    0xbcc7:0x6971cdd0
  403930:	jne    0x4038bc
  403932:	stc    
  403933:	xor    BYTE PTR [edi-0x53],ch
  403936:	mov    dl,0x9e
  403938:	inc    ecx
  403939:	xchg   esi,eax
  40393a:	and    BYTE PTR [esi],0xbb
  40393d:	out    0xe3,al
  40393f:	adc    dh,BYTE PTR [eax+eiz*1]
  403942:	(bad)  
  403943:	mov    dl,0x7
  403945:	cmp    al,0x20
  403947:	in     al,0xe0
  403949:	out    dx,al
  40394a:	inc    eax
  40394b:	add    ah,dl
  40394d:	out    dx,al
  40394e:	add    al,0xb0
  403950:	int3   
  403951:	or     eax,0xf80581de
  403956:	dec    edi
  403957:	sub    ebp,DWORD PTR [ecx]
  403959:	enter  0x9af9,0xd0
  40395d:	dec    edx
  40395e:	pop    edx
  40395f:	fstp   QWORD PTR [esi+0x2b]
  403962:	xor    edx,edx
  403964:	je     0x4039e1
  403966:	jbe    0x403920
  403968:	xchg   DWORD PTR [esi+0xc7e97ee],ecx
  40396e:	fldenv [edi-0x6ed9f964]
  403974:	shr    eax,1
  403976:	mov    ecx,0x188f350e
  40397b:	outs   dx,BYTE PTR ds:[esi]
  40397c:	rcr    BYTE PTR [edx+0x5851520e],1
  403982:	sub    bh,BYTE PTR [esi]
  403984:	inc    ebx
  403985:	loop   0x4039d6
  403987:	lock (bad) [edi-0xc]
  40398b:	imul   edi,DWORD PTR [eax],0xffffff86
  40398e:	dec    eax
  40398f:	sbb    DWORD PTR [edx],ebx
  403991:	lods   eax,DWORD PTR ds:[esi]
  403992:	add    BYTE PTR [ebp+0x7d],dh
  403995:	pop    eax
  403996:	jnp    0x40399f
  403998:	pop    esp
  403999:	cli    
  40399a:	and    cl,BYTE PTR [edx-0x1acd3beb]
  4039a0:	fs dec edx
  4039a2:	mov    DWORD PTR [ebp+0x6b639431],esp
  4039a8:	jmp    0x584d:0xef27158d
  4039af:	hlt    
  4039b0:	cmp    ebx,DWORD PTR [ecx+0x52f6b6b4]
  4039b6:	repnz xchg ecx,eax
  4039b8:	fidivr WORD PTR es:[eax+esi*8]
  4039bc:	idiv   dh
  4039be:	outs   dx,BYTE PTR ds:[esi]
  4039bf:	xchg   esi,eax
  4039c0:	in     al,dx
  4039c1:	in     eax,0xe9
  4039c3:	sub    eax,0x70428ee9
  4039c8:	pusha  
  4039c9:	inc    esp
  4039ca:	mov    cl,bl
  4039cc:	mov    esp,0x29af2971
  4039d1:	call   0x646a:0x64a32504
  4039d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039d9:	leave  
  4039da:	cmc    
  4039db:	ds je  0x4039c2
  4039de:	mov    cl,0xfa
  4039e0:	popa   
  4039e1:	rol    DWORD PTR [edx+0x77],cl
  4039e4:	or     eax,0x74
  4039e7:	inc    eax
  4039e8:	mov    al,ss:0xcc3b083d
  4039ee:	adc    BYTE PTR [ecx+0x22b8c3ec],bh
  4039f4:	(bad)  
  4039f5:	(bad)  
  4039f6:	in     al,dx
  4039f7:	push   ss
  4039f8:	xor    dl,bh
  4039fa:	jg     0x403a2c
  4039fc:	rcr    BYTE PTR [ecx-0x27],cl
  4039ff:	mov    ch,0xc2
  403a01:	aam    0x79
  403a03:	xor    BYTE PTR [ebx],cl
  403a05:	and    DWORD PTR [ebx],edi
  403a07:	out    dx,al
  403a08:	scas   eax,DWORD PTR es:[edi]
  403a09:	sub    eax,DWORD PTR [ecx+0x5d]
  403a0c:	out    0x52,eax
  403a0e:	push   ds
  403a0f:	mov    edx,DWORD PTR [edi-0x28]
  403a12:	gs jae 0x403a66
  403a15:	jp     0x4039c8
  403a17:	xchg   ebx,eax
  403a18:	test   BYTE PTR [ebx+edx*4],ah
  403a1b:	mov    ds:0xe9344ac9,al
  403a20:	test   al,0xa8
  403a22:	jbe    0x403a6c
  403a24:	jmp    0x403a5b
  403a26:	xor    DWORD PTR [ebx],ebp
  403a28:	xchg   ebp,eax
  403a29:	xlat   BYTE PTR ds:[ebx]
  403a2a:	or     DWORD PTR [ebp-0x2c],0xfffffffd
  403a2e:	jno    0x4039b5
  403a30:	xor    eax,0xe6d60bf0
  403a35:	cdq    
  403a36:	jno    0x403a53
  403a38:	lds    eax,FWORD PTR [esi+0x25]
  403a3b:	or     ch,BYTE PTR [ebp+0x394db52c]
  403a41:	iret   
  403a42:	or     esp,DWORD PTR [esi]
  403a44:	dec    esi
  403a45:	mov    dh,0x91
  403a47:	pushf  
  403a48:	adc    eax,0x472da27f
  403a4d:	enter  0xb11f,0x2f
  403a51:	push   ecx
  403a52:	cmc    
  403a53:	cld    
  403a54:	cli    
  403a55:	int3   
  403a56:	iret   
  403a57:	pop    es
  403a58:	and    eax,DWORD PTR [ebx+0x6a012aad]
  403a5e:	loop   0x4039e7
  403a60:	push   esp
  403a61:	lods   eax,DWORD PTR ds:[esi]
  403a62:	nop
  403a63:	data16 or bl,BYTE PTR ds:0xe0387e39
  403a6a:	mov    ah,0x75
  403a6c:	jmp    DWORD PTR [eax+0x1b83c949]
  403a72:	xchg   ecx,eax
  403a73:	jle    0x403a62
  403a75:	and    dl,BYTE PTR ds:0xee329229
  403a7b:	mov    ah,bh
  403a7d:	lods   eax,DWORD PTR ds:[esi]
  403a7e:	jge    0x403a67
  403a80:	retf   0x32a3
  403a83:	mov    al,0x61
  403a85:	int3   
  403a86:	jecxz  0x403acf
  403a88:	mov    ch,BYTE PTR [ecx+0x6a0b7da0]
  403a8e:	cdq    
  403a8f:	push   0xf0aded9e
  403a94:	nop
  403a95:	sahf   
  403a96:	jbe    0x403ae8
  403a98:	add    DWORD PTR [ebx-0x373acbec],eax
  403a9e:	cwde   
  403a9f:	sahf   
  403aa0:	les    edi,FWORD PTR [edi]
  403aa2:	mov    esi,0xdaca0bfe
  403aa7:	adc    BYTE PTR [ebp+ebp*2+0x262855fc],bh
  403aae:	mov    dh,0x7
  403ab0:	xor    bl,BYTE PTR [edi+0x6]
  403ab3:	int    0x77
  403ab5:	test   eax,0xc13b98f5
  403aba:	add    esp,DWORD PTR [eax+0x7947657e]
  403ac0:	mov    ds:0xfb051d77,eax
  403ac5:	jecxz  0x403b35
  403ac7:	out    0xb,al
  403ac9:	ins    DWORD PTR es:[edi],dx
  403aca:	lahf   
  403acb:	cli    
  403acc:	jae    0x403b33
  403ace:	sahf   
  403acf:	push   ds
  403ad0:	int3   
  403ad1:	sbb    al,0xa7
  403ad3:	mov    bl,0x5f
  403ad5:	in     al,0x65
  403ad7:	adc    BYTE PTR [eax+0x1f4e96ec],dl
  403add:	xchg   esi,eax
  403ade:	stos   DWORD PTR es:[edi],eax
  403adf:	inc    edx
  403ae0:	pop    esp
  403ae1:	lds    eax,FWORD PTR [edx+0x2702648b]
  403ae7:	lods   eax,DWORD PTR ds:[esi]
  403ae8:	imul   ebx,DWORD PTR ds:0x4f8b8e09,0xa7e808ca
  403af2:	outs   dx,BYTE PTR ds:[esi]
  403af3:	add    al,0x59
  403af5:	mov    edx,0xd003d03d
  403afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403afb:	sar    DWORD PTR [ecx+0xc],0x5a
  403aff:	sbb    BYTE PTR [ebx+0x57],dh
  403b02:	push   ds
  403b03:	das    
  403b04:	add    al,0x92
  403b06:	and    BYTE PTR [edi],ch
  403b08:	pusha  
  403b09:	pop    edi
  403b0a:	push   0xfffffff6
  403b0c:	ins    DWORD PTR es:[edi],dx
  403b0d:	xchg   dl,ch
  403b0f:	js     0x403ac0
  403b11:	jne    0x403b3f
  403b13:	push   ss
  403b14:	fs ja  0x403ac7
  403b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b18:	jmp    0x403acc
  403b1a:	mov    eax,ds:0x14eac350
  403b1f:	adc    edi,DWORD PTR es:[esi+0x4dedb86a]
  403b26:	inc    ebp
  403b27:	test   al,0xc
  403b29:	loopne 0x403b1a
  403b2b:	mov    dh,0x4e
  403b2d:	mov    bh,0xbc
  403b2f:	jae    0x403b34
  403b31:	lock (bad) 
  403b33:	jecxz  0x403b45
  403b35:	mov    ds:0xf3fee65f,al
  403b3a:	stos   BYTE PTR es:[edi],al
  403b3b:	stos   DWORD PTR es:[edi],eax
  403b3c:	js     0x403b41
  403b3e:	sbb    al,0x20
  403b40:	ror    BYTE PTR [ebx],1
  403b42:	cmp    al,0x8c
  403b44:	sahf   
  403b45:	mov    edi,0x1c2da17a
  403b4a:	rcl    DWORD PTR [ebp+0x1cb73ccf],cl
  403b50:	adc    ecx,ebp
  403b52:	xchg   BYTE PTR [ebx+0x280a78dc],dl
  403b58:	stos   BYTE PTR es:[edi],al
  403b59:	out    dx,eax
  403b5a:	gs in  al,0xc6
  403b5d:	pop    ds
  403b5e:	pop    esi
  403b5f:	xor    DWORD PTR [ebx],edi
  403b61:	(bad)  
  403b62:	sti    
  403b63:	cmc    
  403b64:	cli    
  403b65:	xchg   BYTE PTR [ebp-0x339abb59],dh
  403b6b:	inc    edx
  403b6c:	sub    al,0x7
  403b6e:	scas   eax,DWORD PTR es:[edi]
  403b6f:	stc    
  403b70:	stc    
  403b71:	sub    edx,edi
  403b73:	inc    eax
  403b74:	fsubr  DWORD PTR [ecx+0x2a]
  403b77:	into   
  403b78:	push   esp
  403b79:	push   ebx
  403b7a:	lahf   
  403b7b:	mov    bl,0xbd
  403b7d:	sbb    DWORD PTR [ecx-0x79],edx
  403b80:	(bad)  
  403b81:	mov    ebp,0x638a3baf
  403b86:	push   ss
  403b87:	loop   0x403beb
  403b89:	and    ch,BYTE PTR [edi+0x79]
  403b8c:	inc    eax
  403b8d:	mov    bh,0xb2
  403b8f:	shr    DWORD PTR [edx+edx*1-0x5f59d51],cl
  403b96:	outs   dx,DWORD PTR ds:[esi]
  403b97:	(bad)  
  403b98:	stos   BYTE PTR es:[edi],al
  403b99:	and    eax,0x3f22108c
  403b9e:	ret    0x9bc
  403ba1:	stc    
  403ba2:	fsubr  st,st(0)
  403ba4:	inc    ecx
  403ba5:	ja     0x403bff
  403ba7:	mov    esi,0xc2c1f748
  403bac:	mov    WORD PTR [ebp+edi*4+0xb],ss
  403bb0:	test   dl,ch
  403bb2:	retf   
  403bb3:	ficomp WORD PTR [edi-0x29]
  403bb6:	jo     0x403c21
  403bb8:	iret   
  403bb9:	push   edi
  403bba:	pop    ss
  403bbb:	repz pop edi
  403bbd:	jecxz  0x403bb8
  403bbf:	in     eax,dx
  403bc0:	gs push esi
  403bc2:	leave  
  403bc3:	sub    edx,DWORD PTR [edi]
  403bc5:	inc    ebx
  403bc6:	call   0x2f7b2864
  403bcb:	lea    edx,[eax]
  403bcd:	adc    al,0x68
  403bcf:	pop    esi
  403bd0:	cmp    esi,ebx
  403bd2:	rol    BYTE PTR [ebp+0x2e],1
  403bd5:	xlat   BYTE PTR ds:[ebx]
  403bd6:	pushf  
  403bd7:	fwait
  403bd8:	ror    esp,0x2f
  403bdb:	cmp    BYTE PTR [ebx+0x49],0x8c
  403bdf:	push   ds
  403be0:	inc    esi
  403be1:	dec    ecx
  403be2:	fstp   st(3)
  403be4:	push   DWORD PTR [edi-0x3]
  403be7:	xchg   esp,edx
  403be9:	iret   
  403bea:	push   eax
  403beb:	enter  0xf989,0xd8
  403bef:	inc    edi
  403bf0:	cdq    
  403bf1:	scas   al,BYTE PTR es:[edi]
  403bf2:	fldenv [eax]
  403bf4:	scas   eax,DWORD PTR es:[edi]
  403bf5:	in     eax,dx
  403bf6:	mov    fs,WORD PTR [eax+0x31e792ab]
  403bfc:	or     al,0x11
  403bff:	xchg   ebp,eax
  403c00:	adc    al,0x78
  403c02:	aas    
  403c03:	xchg   ebx,eax
  403c04:	lock (bad) 
  403c06:	jmp    0x403bad
  403c08:	jl     0x403c06
  403c0a:	jnp    0x403bef
  403c0c:	call   0xbaba1884
  403c11:	jo     0x403c24
  403c13:	fiadd  DWORD PTR ds:0x4e9360d6
  403c19:	add    al,BYTE PTR [ecx]
  403c1b:	div    BYTE PTR [ebx]
  403c1d:	retf   0x7548
  403c20:	rcr    al,0x13
  403c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c24:	jbe    0x403bdd
  403c26:	outs   dx,BYTE PTR ds:[esi]
  403c27:	jmp    0x403c4a
  403c29:	sbb    al,0xe5
  403c2b:	fiadd  DWORD PTR [ebp-0x5f0129e]
  403c31:	xor    al,0xf0
  403c33:	repz push cs
  403c35:	fbld   TBYTE PTR [edi+0x6cdc934b]
  403c3b:	lock shl dh,0x88
  403c3f:	dec    esp
  403c40:	sbb    DWORD PTR [eax+ebp*1-0x3a],edi
  403c44:	out    0xc3,al
  403c46:	adc    DWORD PTR [ebp-0x70],ecx
  403c49:	xchg   DWORD PTR [eax-0x4a7991c8],esp
  403c4f:	(bad)  
  403c50:	xor    dh,BYTE PTR [edx+0x6e230034]
  403c56:	push   0xffffff8a
  403c58:	call   0xd6b6f641
  403c5d:	push   0x34
  403c5f:	or     ah,BYTE PTR [ebx+0x40a66efe]
  403c65:	out    0xb8,eax
  403c67:	mov    BYTE PTR [edi+0x12ba0993],dl
  403c6d:	sub    BYTE PTR [edx],bl
  403c6f:	or     DWORD PTR [ebp+0x2742e344],ebx
  403c75:	shl    dl,cl
  403c77:	pop    esi
  403c78:	arpl   WORD PTR [esi+0x7d],di
  403c7b:	or     eax,0xc48463ab
  403c80:	fild   QWORD PTR [esi-0x47]
  403c83:	sti    
  403c84:	lods   al,BYTE PTR ds:[esi]
  403c85:	and    eax,0x82fcd041
  403c8a:	push   esi
  403c8b:	in     eax,0x88
  403c8d:	call   0xa3b7c680
  403c92:	and    al,0xfb
  403c94:	dec    esi
  403c95:	sbb    eax,0xcb0f02ee
  403c9a:	mov    ebp,0x78265544
  403c9f:	test   DWORD PTR [edx-0x2ff4f6c],ecx
  403ca5:	add    DWORD PTR [esi],edx
  403ca7:	(bad)  
  403ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ca9:	xchg   edx,eax
  403caa:	jecxz  0x403c71
  403cac:	jmp    0x2191:0x39f7b59
  403cb3:	pop    ebp
  403cb4:	mov    dh,0x7e
  403cb6:	lock jg 0x403d2c
  403cb9:	std    
  403cba:	por    mm0,QWORD PTR ds:[ebp+0x3a6cd4ca]
  403cc2:	ds ins DWORD PTR es:[edi],dx
  403cc4:	ret    
  403cc5:	add    BYTE PTR [ecx],bl
  403cc7:	ja     0x403d0e
  403cc9:	cs jne 0x403c51
  403ccc:	xor    DWORD PTR [edi+edi*8],0xf8c90abb
  403cd3:	fwait
  403cd4:	shr    BYTE PTR [esi-0x6],cl
  403cd7:	aaa    
  403cd8:	or     al,0xfd
  403cda:	or     al,0x46
  403cdc:	xor    edi,DWORD PTR [ebx+0x678a8cc5]
  403ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce3:	ja     0x403d46
  403ce5:	push   edx
  403ce6:	xchg   BYTE PTR [edx+edx*4],al
  403ce9:	and    eax,0x854b1dc0
  403cee:	hlt    
  403cef:	clc    
  403cf0:	test   al,0x6a
  403cf2:	sbb    eax,DWORD PTR [eax]
  403cf4:	stos   BYTE PTR es:[edi],al
  403cf5:	add    ebp,ebx
  403cf7:	jecxz  0x403ca4
  403cf9:	push   ds
  403cfa:	inc    edi
  403cfb:	ds cdq 
  403cfd:	int3   
  403cfe:	daa    
  403cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d00:	mov    ?,ecx
  403d02:	data16 aas 
  403d04:	leave  
  403d05:	test   ch,dh
  403d07:	(bad)  
  403d08:	rol    bl,0xe6
  403d0b:	loop   0x403d70
  403d0d:	mov    ah,0x9d
  403d0f:	or     al,0x86
  403d11:	scas   eax,DWORD PTR es:[edi]
  403d12:	dec    edx
  403d13:	jo     0x403cb5
  403d15:	stc    
  403d16:	in     eax,dx
  403d17:	jbe    0x403d6e
  403d19:	daa    
  403d1a:	(bad)  
  403d1b:	push   ebp
  403d1c:	mov    dh,ah
  403d1e:	dec    ecx
  403d1f:	and    ch,cl
  403d21:	jp     0x403d17
  403d23:	or     ebp,DWORD PTR [ecx]
  403d25:	cmp    DWORD PTR [eax-0x80],0x6e
  403d29:	sbb    edi,DWORD PTR [eax-0x5a]
  403d2c:	cdq    
  403d2d:	add    eax,0x50
  403d30:	and    al,0xe5
  403d32:	cmp    al,0xaa
  403d34:	outs   dx,BYTE PTR ds:[esi]
  403d35:	jo     0x403db3
  403d37:	jle    0x403d13
  403d39:	in     eax,dx
  403d3a:	push   esp
  403d3b:	mov    esp,0x8b10e019
  403d40:	lock adc ebx,edi
  403d43:	or     al,0xd8
  403d45:	cmp    al,0x47
  403d47:	pop    edx
  403d48:	xor    eax,0xca65bd2c
  403d4d:	add    eax,0x536b788f
  403d52:	(bad)  
  403d53:	rol    bl,cl
  403d55:	mov    ecx,0xb7aedd35
  403d5a:	dec    ecx
  403d5b:	cli    
  403d5c:	add    esp,ecx
  403d5e:	adc    BYTE PTR [esi+0x5c],ah
  403d61:	and    al,BYTE PTR [ebx+eax*2]
  403d64:	mov    ah,ch
  403d66:	and    cl,BYTE PTR [edx-0x67b32fe5]
  403d6c:	and    eax,0x65aeaff2
  403d71:	add    edx,edx
  403d73:	cwde   
  403d74:	xchg   DWORD PTR [edx+0x22],esp
  403d77:	mov    BYTE PTR [esi],cl
  403d79:	sub    bl,BYTE PTR [ecx+eax*4+0x68efba1a]
  403d80:	jge    0x403de7
  403d82:	pop    esp
  403d83:	stos   BYTE PTR es:[edi],al
  403d84:	jp     0x403db4
  403d86:	stos   BYTE PTR es:[edi],al
  403d87:	unpckhps xmm7,XMMWORD PTR [eax]
  403d8a:	ja     0x403dd5
  403d8c:	bound  edx,QWORD PTR [esi]
  403d8e:	adc    al,0x75
  403d90:	xor    eax,0xb8ecdbf7
  403d95:	push   eax
  403d96:	jnp    0x403de1
  403d98:	push   ss
  403d99:	in     al,0x54
  403d9b:	into   
  403d9c:	mov    esp,0x881066d5
  403da1:	test   BYTE PTR [eax+0x73],bl
  403da4:	cmp    DWORD PTR [eax-0x3f2f5d32],ecx
  403daa:	jg     0x403e1b
  403dac:	sbb    bl,dh
  403dae:	sub    DWORD PTR [ebp+0x42],edx
  403db1:	adc    al,0x2a
  403db3:	aaa    
  403db4:	(bad)
  403db8:	inc    esp
  403db9:	pop    ds
  403dba:	popf   
  403dbb:	test   al,0x77
  403dbd:	int    0x24
  403dbf:	mov    edx,0x89801bc
  403dc4:	xchg   esi,eax
  403dc5:	jmp    0xc3ac:0x2b24a481
  403dcc:	xor    al,BYTE PTR [esp+edi*1-0xdf6ffc5]
  403dd3:	ins    BYTE PTR es:[di],dx
  403dd5:	loope  0x403e22
  403dd7:	or     eax,0xa94b1d18
  403ddc:	call   0x35e25fb0
  403de1:	sti    
  403de2:	dec    eax
  403de3:	dec    esi
  403de4:	loop   0x403dd6
  403de6:	mov    bl,0x62
  403de8:	pop    esp
  403de9:	jmp    0x3a13:0x1c07666d
  403df0:	xchg   esp,eax
  403df1:	outs   dx,DWORD PTR ds:[esi]
  403df2:	daa    
  403df3:	push   0x77
  403df5:	lahf   
  403df6:	(bad)  
  403df8:	xor    al,0x51
  403dfa:	sub    eax,DWORD PTR [edx+edi*4+0x3d]
  403dfe:	aaa    
  403dff:	pop    eax
  403e00:	sub    al,0x9f
  403e02:	pop    edi
  403e03:	dec    ecx
  403e04:	bound  edx,QWORD PTR [eax-0x42]
  403e07:	in     al,0x7b
  403e09:	popf   
  403e0a:	add    al,0xdc
  403e0c:	mov    ss,eax
  403e0e:	mov    BYTE PTR [ecx+0x2b59bb3d],0x50
  403e15:	and    BYTE PTR cs:[edx],bh
  403e18:	pop    edi
  403e19:	fwait
  403e1a:	in     al,0x4c
  403e1c:	test   DWORD PTR [edx],esp
  403e1e:	dec    edx
  403e1f:	xchg   DWORD PTR [edi],esp
  403e21:	push   0xffffffee
  403e23:	into   
  403e24:	push   esi
  403e25:	es pop edi
  403e27:	add    DWORD PTR [edx-0x1d043e3f],0xecca07b1
  403e31:	pop    ebx
  403e32:	sub    DWORD PTR [edi-0x74adf16],ebp
  403e38:	xchg   BYTE PTR [ebp+0x2413fbb2],cl
  403e3e:	in     eax,0xc8
  403e40:	adc    DWORD PTR [esi-0x6e],eax
  403e43:	int3   
  403e44:	push   0xb2cdfc85
  403e49:	rcl    BYTE PTR [ecx],0x42
  403e4c:	xlat   BYTE PTR ds:[ebx]
  403e4d:	cmc    
  403e4e:	in     al,dx
  403e4f:	sub    al,0x4d
  403e51:	ret    
  403e52:	mov    esi,0x520a32d4
  403e57:	loopne 0x403e6b
  403e59:	das    
  403e5a:	test   eax,0x481fb405
  403e5f:	jp     0x403ec8
  403e61:	js     0x403de3
  403e63:	xchg   esp,eax
  403e64:	(bad)  
  403e66:	loopne 0x403e82
  403e68:	cmp    ebx,DWORD PTR [ebp-0x79c1320e]
  403e6e:	adc    cl,BYTE PTR [edi]
  403e70:	icebp  
  403e71:	inc    esp
  403e72:	mov    eax,?
  403e74:	(bad)  
  403e75:	stc    
  403e76:	pushf  
  403e77:	pop    ss
  403e78:	shufps xmm1,xmm4,0x9e
  403e7c:	push   esi
  403e7d:	lods   eax,DWORD PTR ds:[esi]
  403e7e:	mov    cl,0x46
  403e80:	adc    esp,DWORD PTR [ebx+0x1e]
  403e83:	outs   dx,BYTE PTR ds:[esi]
  403e84:	aad    0x86
  403e86:	mov    dl,BYTE PTR [edi+0x176d435b]
  403e8c:	sub    ah,ah
  403e8e:	mov    bh,BYTE PTR ds:0xd60355f8
  403e94:	leave  
  403e95:	inc    ebx
  403e96:	out    0x46,al
  403e98:	mov    bh,cl
  403e9a:	cmp    eax,0xe133fb13
  403e9f:	stos   BYTE PTR es:[edi],al
  403ea0:	xchg   ebp,eax
  403ea1:	(bad)  
  403ea3:	test   BYTE PTR [edx],bl
  403ea5:	cmp    DWORD PTR [edi+0x1a],edi
  403ea8:	pop    ss
  403ea9:	int    0x3d
  403eab:	aam    0xf6
  403ead:	fsubr  QWORD PTR [edx+0x1695aade]
  403eb3:	fcom   st(1)
  403eb5:	cs jmp 0x7b99:0x7faf7fc1
  403ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ebe:	add    BYTE PTR [edi],0x6
  403ec1:	dec    ebx
  403ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ec3:	(bad)  
  403ec4:	(bad)  
  403ec5:	shl    eax,1
  403ec7:	aad    0x61
  403ec9:	pop    esp
  403eca:	loopne 0x403f36
  403ecc:	stos   BYTE PTR es:[edi],al
  403ecd:	sub    cl,BYTE PTR [ecx-0x64429695]
  403ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed4:	and    esp,DWORD PTR [ebx]
  403ed6:	xor    edi,esp
  403ed8:	call   0xb458:0xfc767235
  403edf:	add    al,0x14
  403ee1:	jl     0x403eb8
  403ee3:	pop    edi
  403ee4:	cwde   
  403ee5:	iret   
  403ee6:	ds lock std 
  403ee9:	sti    
  403eea:	and    eax,0x82259e37
  403eef:	retf   0xcf7d
  403ef2:	test   BYTE PTR [esi+0x4],dh
  403ef5:	mov    esp,0x64b56f5d
  403efa:	pushf  
  403efb:	ins    BYTE PTR es:[edi],dx
  403efc:	add    edx,esp
  403efe:	mov    ds:0x27730708,al
  403f03:	add    al,0x58
  403f05:	pop    eax
  403f06:	jecxz  0x403f42
  403f08:	stos   BYTE PTR es:[edi],al
  403f09:	mov    ?,WORD PTR ds:0x66020243
  403f0f:	push   0xffffffee
  403f11:	stos   BYTE PTR es:[edi],al
  403f12:	mov    ds:0xc1f0f8a,al
  403f17:	add    edx,ebp
  403f19:	mov    esp,esi
  403f1b:	test   BYTE PTR [esp+esi*8-0x62a83afc],0x5d
  403f23:	or     al,0x4b
  403f25:	loope  0x403f74
  403f27:	mov    esp,0xfa596c19
  403f2c:	out    0x3b,al
  403f2e:	das    
  403f2f:	leave  
  403f30:	mov    cl,0xdd
  403f32:	jnp    0x403eda
  403f34:	(bad)  
  403f35:	mov    eax,0x77d27a1f
  403f3a:	mov    ebx,0xdd00154b
  403f3f:	sub    BYTE PTR [ebx],bh
  403f41:	cmp    BYTE PTR [edx+0x1b],bl
  403f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f45:	mov    ebx,0x1e21f978
  403f4a:	clc    
  403f4b:	(bad)  
  403f4c:	loop   0x403f2d
  403f4e:	xchg   ebp,eax
  403f4f:	jmp    0x403f0e
  403f51:	rol    DWORD PTR [ebx],cl
  403f53:	cmp    al,0x2f
  403f55:	jle    0x403f0d
  403f57:	rcl    DWORD PTR [ebx-0x50c7935d],cl
  403f5d:	fstp   DWORD PTR [edi-0x28]
  403f60:	jl     0x403f4a
  403f62:	mov    ebp,0xc7bad873
  403f67:	pop    esp
  403f68:	dec    ebp
  403f69:	lea    ebp,[edx-0x5c210496]
  403f6f:	push   ebp
  403f70:	addr16 and eax,0xcf1af83e
  403f76:	enter  0x7546,0x10
  403f7a:	(bad)  
  403f7b:	out    dx,eax
  403f7c:	outs   dx,DWORD PTR ds:[esi]
  403f7d:	mov    al,0x2
  403f7f:	sub    eax,0x80d2f6e3
  403f84:	or     eax,0xe40d3d64
  403f89:	in     al,0x3f
  403f8b:	sbb    dl,ah
  403f8d:	push   es
  403f8e:	out    dx,eax
  403f8f:	fstp   QWORD PTR [eax-0x1296a115]
  403f95:	mov    bl,0xb6
  403f97:	sub    esp,DWORD PTR [ecx-0x57]
  403f9a:	and    edi,ecx
  403f9c:	ret    
  403f9d:	popf   
  403f9e:	cmp    BYTE PTR [ebp-0x1d7ac8],cl
  403fa4:	mov    ch,0xd3
  403fa6:	int3   
  403fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fa8:	sub    edx,DWORD PTR [ecx]
  403faa:	cmp    DWORD PTR [ecx+0x34342df0],0x7c152c6b
  403fb4:	data16 jne 0x403f3e
  403fb7:	mov    ecx,DWORD PTR [edi-0x4a]
  403fba:	mov    ds:0x1cbae31f,eax
  403fbf:	add    edx,DWORD PTR [ebp-0x1e]
  403fc2:	repnz stc 
  403fc4:	inc    ebp
  403fc5:	push   ecx
  403fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fc7:	and    ecx,ebp
  403fc9:	mov    ds:0x4735ad4,al
  403fce:	dec    ebp
  403fcf:	lahf   
  403fd0:	popf   
  403fd1:	pop    edi
  403fd2:	jmp    0xfe4f:0xcde6a22d
  403fd9:	add    al,0xfc
  403fdb:	cld    
  403fdc:	aas    
  403fdd:	mov    BYTE PTR [ebx+0x249e0473],al
  403fe3:	pop    ecx
  403fe4:	jb     0x40401a
  403fe6:	ficom  WORD PTR [ebp-0xa9e3b4f]
  403fec:	jge    0x404037
  403fee:	shl    DWORD PTR [esp+0x66bd7aec],cl
  403ff5:	aaa    
  403ff6:	xor    eax,DWORD PTR [ebp-0x35]
  403ff9:	nop
  403ffa:	mov    dh,ch
  403ffc:	and    DWORD PTR [edx*2-0x2403fa23],eax
  404003:	xchg   ebx,eax
  404004:	push   esi
  404005:	shr    DWORD PTR [ebp-0x8],cl
  404008:	xchg   ebx,eax
  404009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40400a:	cmp    al,0x79
  40400c:	sub    dh,al
  40400e:	xchg   edx,eax
  40400f:	xor    ch,BYTE PTR [esi-0x7]
  404012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404013:	ins    BYTE PTR es:[edi],dx
  404014:	mov    bh,0xb3
  404016:	cs scas al,BYTE PTR es:[edi]
  404018:	sbb    DWORD PTR [edx-0x37],ecx
  40401b:	sbb    ebp,DWORD PTR [ebp-0x2ab0c065]
  404021:	mov    al,ds:0xa3b699dd
  404026:	sub    dl,bh
  404028:	pop    ebp
  404029:	mov    ecx,0xf36c192b
  40402e:	inc    ebx
  40402f:	fcmovb st,st(2)
  404031:	xchg   esi,eax
  404032:	push   ecx
  404033:	pop    edi
  404034:	fnstcw WORD PTR [ebx-0x29]
  404037:	jecxz  0x404091
  404039:	test   BYTE PTR [ebp-0x7e95dc9e],0x20
  404040:	inc    ebx
  404041:	sbb    BYTE PTR [eax],cl
  404043:	mov    ah,0x14
  404045:	and    bh,BYTE PTR [ecx*4-0x75eaa4b0]
  40404c:	mov    eax,0x4c05ddd3
  404051:	scas   al,BYTE PTR es:[edi]
  404052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404053:	adc    al,0x20
  404055:	push   0xffffff80
  404057:	mov    ecx,0xcf6c5bac
  40405c:	jo     0x403fff
  40405e:	sbb    al,0xd9
  404060:	sahf   
  404061:	out    0x3c,eax
  404063:	inc    edx
  404064:	js     0x404002
  404066:	outs   dx,DWORD PTR ds:[esi]
  404067:	push   ecx
  404068:	shr    BYTE PTR [edi+eiz*1-0x3e5b1a3b],1
  40406f:	inc    edx
  404070:	jp     0x403ffc
  404072:	and    BYTE PTR [esi-0x3fa8c189],0x1c
  404079:	fidiv  WORD PTR [edi]
  40407b:	pop    DWORD PTR [edx+0x76deeec6]
  404081:	jae    0x404088
  404083:	imul   esi,ebp,0xbd876fde
  404089:	daa    
  40408a:	lods   eax,DWORD PTR ds:[esi]
  40408b:	pop    ebp
  40408c:	enter  0xefad,0x8a
  404090:	ins    DWORD PTR es:[edi],dx
  404091:	cdq    
  404092:	inc    edi
  404093:	push   0x68
  404095:	or     BYTE PTR [edx+0x6057cbe9],ah
  40409b:	xor    DWORD PTR [edi],edi
  40409d:	lods   eax,DWORD PTR ds:[esi]
  40409e:	(bad)  
  40409f:	in     al,0x4c
  4040a1:	pushf  
  4040a2:	leave  
  4040a3:	push   0x40b51479
  4040a8:	adc    al,dh
  4040aa:	lea    ecx,ds:0x6a78eefa
  4040b0:	sbb    ch,0x7f
  4040b3:	or     ch,dl
  4040b5:	in     al,dx
  4040b6:	das    
  4040b7:	xor    edx,DWORD PTR [ecx+0x5e338ce3]
  4040bd:	(bad)  
  4040be:	or     BYTE PTR [edx-0x2fe484f6],ch
  4040c4:	fmulp  st(7),st
  4040c6:	fld    TBYTE PTR [edx+0x4cec0712]
  4040cc:	xchg   ecx,eax
  4040cd:	(bad)  
  4040ce:	xor    bh,ah
  4040d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040d1:	mov    ebx,0x24f4e787
  4040d6:	fidivr WORD PTR [ebp-0x3e]
  4040d9:	arpl   dx,sp
  4040db:	inc    ebp
  4040dc:	pop    eax
  4040dd:	mul    DWORD PTR [ecx-0x52]
  4040e0:	sar    DWORD PTR [edi+0x3],cl
  4040e3:	inc    eax
  4040e4:	mov    al,0xb2
  4040e6:	and    eax,DWORD PTR [ebp+0x4b]
  4040e9:	mov    ?,ecx
  4040eb:	(bad)  
  4040ec:	mov    al,ds:0xb6b8c807
  4040f1:	neg    ecx
  4040f3:	pop    esp
  4040f4:	push   edi
  4040f5:	(bad)  
  4040f6:	pop    esp
  4040f7:	pusha  
  4040f8:	(bad)  
  4040f9:	jnp    0x404140
  4040fb:	stos   BYTE PTR es:[edi],al
  4040fc:	test   BYTE PTR [esi],al
  4040fe:	out    dx,eax
  4040ff:	or     BYTE PTR [eax],0x9a
  404102:	inc    eax
  404103:	stos   DWORD PTR es:[edi],eax
  404104:	repz (bad) 
  404106:	js     0x4040cc
  404108:	jg     0x4040ff
  40410a:	pop    edx
  40410b:	in     eax,dx
  40410c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40410d:	(bad)  
  40410e:	mov    eax,0xb60cd9
  404113:	add    bh,bl
  404115:	dec    ebp
  404116:	mov    al,ds:0xfae36f50
  40411b:	lods   al,BYTE PTR ds:[esi]
  40411c:	adc    bl,BYTE PTR [edx+0x12]
  40411f:	and    bh,ah
  404121:	js     0x404101
  404123:	adc    DWORD PTR [edi+0x62ea7057],edi
  404129:	arpl   bp,cx
  40412b:	call   0x47620bf2
  404130:	pop    ds
  404131:	mov    eax,ds:0xe25c9617
  404136:	lahf   
  404137:	lea    esi,[eax+ebp*8-0x4874a8c6]
  40413e:	and    ebx,ebx
  404140:	sub    ebx,eax
  404142:	mov    BYTE PTR [ebx+0x77],ch
  404145:	aad    0xd6
  404147:	hlt    
  404148:	xchg   ebp,eax
  404149:	push   0x2cd578c9
  40414e:	inc    esp
  40414f:	inc    edx
  404150:	ins    BYTE PTR es:[edi],dx
  404151:	xor    eax,0xb0f7a3d6
  404156:	adc    al,0x2b
  404158:	mov    dl,0x1b
  40415a:	mov    al,0xa3
  40415c:	sbb    esp,DWORD PTR [esi+eiz*1]
  40415f:	add    eax,0x5eb5e396
  404164:	lahf   
  404165:	xor    al,0xa6
  404167:	mov    bh,0x31
  404169:	lods   al,BYTE PTR ds:[esi]
  40416a:	retf   0x7343
  40416d:	xor    DWORD PTR [ecx+0x53],esp
  404170:	pushf  
  404171:	mov    dl,bh
  404173:	xchg   edx,eax
  404174:	cli    
  404175:	xchg   esi,eax
  404176:	dec    ecx
  404177:	jecxz  0x40412b
  404179:	and    bh,BYTE PTR [di]
  40417c:	push   0xffffffbb
  40417e:	xchg   edi,eax
  40417f:	ins    DWORD PTR es:[edi],dx
  404180:	mov    cl,0x22
  404182:	fsubr  st,st(1)
  404184:	rdmsr  
  404186:	or     BYTE PTR fs:[edi-0xe],cl
  40418a:	dec    edx
  40418b:	sub    ch,BYTE PTR [ebx-0x26]
  40418e:	pusha  
  40418f:	bound  ebx,QWORD PTR ds:0x8063e672
  404195:	call   0x875d50c6
  40419a:	push   ebx
  40419b:	shl    DWORD PTR [edi+0x454b19a4],0xc
  4041a2:	mov    ch,0x2b
  4041a4:	mov    al,0x3f
  4041a6:	pop    ebp
  4041a7:	aad    0xe5
  4041a9:	clc    
  4041aa:	pop    edi
  4041ab:	mov    ch,0x12
  4041ad:	inc    ecx
  4041ae:	ret    
  4041af:	xchg   edx,eax
  4041b0:	pop    esi
  4041b1:	dec    ebx
  4041b2:	mov    bl,0xb
  4041b4:	pop    esi
  4041b5:	push   ebp
  4041b6:	enter  0x43b8,0x68
  4041ba:	ret    
  4041bb:	jle    0x404190
  4041bd:	xchg   DWORD PTR [edx],eax
  4041bf:	xlat   BYTE PTR ds:[ebx]
  4041c0:	into   
  4041c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041c2:	sub    BYTE PTR [ecx+0x77],ah
  4041c5:	sub    edi,DWORD PTR [edi-0x4a]
  4041c8:	aam    0x99
  4041ca:	fdivp  st(1),st
  4041cc:	mov    bh,0xcd
  4041ce:	lea    ebp,[ecx-0x2cfc49ac]
  4041d4:	scas   eax,DWORD PTR es:[edi]
  4041d5:	pop    edi
  4041d6:	inc    edi
  4041d7:	arpl   WORD PTR [edx+0x2512ccef],si
  4041dd:	jb     0x404174
  4041df:	ds daa 
  4041e1:	xchg   BYTE PTR [esi],dh
  4041e3:	icebp  
  4041e4:	fisttp WORD PTR [ebx]
  4041e6:	jae    0x40422a
  4041e8:	scas   eax,DWORD PTR es:[edi]
  4041e9:	sub    eax,0xb63cd6bf
  4041ee:	xchg   esi,eax
  4041ef:	push   0xc0e78419
  4041f4:	xchg   ebx,eax
  4041f5:	jb     0x40418f
  4041f7:	int    0x88
  4041f9:	ffreep st(1)
  4041fb:	fnstsw ax
  4041fd:	test   BYTE PTR [ecx],0x30
  404200:	dec    eax
  404201:	inc    edi
  404202:	push   esp
  404203:	ret    0x7ec7
  404206:	stc    
  404207:	pop    ds
  404208:	sbb    al,0xdf
  40420a:	pop    esp
  40420b:	push   cs
  40420c:	cwde   
  40420d:	sbb    eax,0x6e0126a9
  404212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404213:	pop    edx
  404214:	dec    edi
  404215:	jno    0x404246
  404217:	sub    dl,dh
  404219:	inc    eax
  40421a:	dec    ecx
  40421b:	je     0x40420a
  40421d:	ja     0x40423b
  40421f:	jmp    0x190f359c
  404224:	arpl   bx,bp
  404226:	loopne 0x4041f7
  404228:	mov    ch,0xe2
  40422a:	imul   eax,DWORD PTR [edi+0x1d664e70],0xfc9fa8e8
  404234:	jmp    0xcb38db53
  404239:	pop    ebp
  40423a:	das    
  40423b:	jno    0x40428e
  40423d:	xchg   esp,eax
  40423e:	daa    
  40423f:	jbe    0x40422f
  404241:	imul   ebp,DWORD PTR [ebx+0x56c92a41],0x42
  404248:	mov    ah,0x4f
  40424a:	push   0x70
  40424c:	add    al,0xe8
  40424e:	mov    bh,0xbf
  404250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404251:	adc    edx,DWORD PTR [eax]
  404253:	dec    esi
  404254:	cmp    BYTE PTR [edi+0x7417e117],0x8e
  40425b:	push   ebp
  40425c:	iret   
  40425d:	xor    eax,0x514b3748
  404262:	aam    0x54
  404264:	jl     0x404200
  404266:	imul   esp,DWORD PTR [edi-0x2a093fef],0xb9ffaf59
  404270:	mov    DWORD PTR [esi+0x46c464c9],esp
  404276:	stc    
  404277:	(bad)  
  404278:	js     0x404220
  40427a:	push   edi
  40427b:	dec    ecx
  40427c:	shr    BYTE PTR [edx-0x6],0x3d
  404280:	lods   al,BYTE PTR ds:[esi]
  404281:	adc    ah,BYTE PTR [edx]
  404283:	ror    eax,1
  404285:	test   cl,ch
  404287:	or     ebx,DWORD PTR [eax-0x9]
  40428a:	rol    BYTE PTR [ecx-0x47c15f0e],cl
  404290:	outs   dx,BYTE PTR ds:[esi]
  404291:	call   0xe685f733
  404296:	and    al,0xaf
  404298:	dec    esi
  404299:	push   es
  40429a:	arpl   WORD PTR ds:0xefde43ff,bx
  4042a0:	ret    0xfdc8
  4042a3:	xor    BYTE PTR ds:0x694fee40,ah
  4042a9:	out    dx,eax
  4042aa:	pushf  
  4042ab:	mov    ds,WORD PTR [ebx+0x5c2ab3f7]
  4042b1:	sub    al,0xb1
  4042b3:	lock dec edi
  4042b5:	cdq    
  4042b6:	mov    DWORD PTR [ecx+eiz*2-0x26e18f1b],edi
  4042bd:	stc    
  4042be:	jmp    0x64d5:0x4f988009
  4042c5:	xchg   esi,eax
  4042c6:	mov    ah,0x87
  4042c8:	enter  0xc448,0x10
  4042cc:	push   di
  4042ce:	xor    BYTE PTR [esi-0x6c8487c1],al
  4042d4:	xchg   edx,eax
  4042d5:	add    bl,bl
  4042d7:	retf   
  4042d8:	xlat   BYTE PTR ds:[ebx]
  4042d9:	sti    
  4042da:	sub    al,0x83
  4042dc:	test   DWORD PTR [edi-0x73],0x57d49cfb
  4042e3:	shl    DWORD PTR [esi+eiz*4+0x4307b63c],0xb1
  4042eb:	push   eax
  4042ec:	pop    ebp
  4042ed:	dec    esi
  4042ee:	loope  0x40428d
  4042f0:	mov    ah,0x5b
  4042f2:	adc    ah,BYTE PTR [ebx]
  4042f4:	xor    ah,al
  4042f6:	xchg   ebx,eax
  4042f7:	or     DWORD PTR [edi],ebx
  4042f9:	sbb    DWORD PTR [esi+0x4b209567],edx
  4042ff:	xor    dl,BYTE PTR [esi]
  404301:	pop    eax
  404302:	or     eax,edx
  404304:	lods   al,BYTE PTR ds:[esi]
  404305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404306:	shl    edi,cl
  404308:	ins    BYTE PTR es:[edi],dx
  404309:	inc    edi
  40430a:	xor    edi,0xbc315718
  404310:	int3   
  404311:	mov    esp,0x786e6199
  404316:	cwde   
  404317:	jne    0x4042a3
  404319:	js     0x4042c0
  40431b:	mov    eax,ds:0xf768ae75
  404320:	aad    0x73
  404322:	test   BYTE PTR [edx],dl
  404324:	xchg   BYTE PTR [eax+0x53],cl
  404327:	mov    BYTE PTR [eax+0x156b250d],dl
  40432d:	sub    esp,DWORD PTR [eax+0x7acd92b4]
  404333:	push   ds
  404334:	push   ecx
  404335:	cli    
  404336:	cmp    DWORD PTR [ebx+0x7a],edx
  404339:	loop   0x404383
  40433b:	push   esi
  40433c:	push   cs
  40433d:	jno    0x404305
  40433f:	(bad)  
  404340:	push   ss
  404341:	mov    eax,0x75d55f8d
  404346:	push   0xc1983665
  40434b:	xchg   ecx,eax
  40434c:	cmp    DWORD PTR [ecx],esp
  40434e:	add    DWORD PTR [esi+0x1c7051ad],esp
  404354:	pushf  
  404355:	mov    ebx,0x5ebeda92
  40435a:	aaa    
  40435b:	sbb    edx,DWORD PTR [edx]
  40435d:	rcr    ebx,1
  40435f:	enter  0x93ef,0x91
  404363:	xchg   ebp,eax
  404364:	sub    ecx,DWORD PTR [eax]
  404366:	stos   BYTE PTR es:[edi],al
  404367:	fisttp QWORD PTR [edi*4+0x4848ec75]
  40436e:	jle    0x4043e2
  404370:	ret    0x8449
  404373:	jp     0x4043c1
  404375:	mov    esi,0x49d88c4b
  40437a:	in     eax,dx
  40437b:	add    dh,dl
  40437d:	jns    0x4043cb
  40437f:	je     0x404346
  404381:	retf   
  404382:	adc    dl,al
  404384:	lods   al,BYTE PTR ds:[esi]
  404385:	fwait
  404386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404387:	fimul  DWORD PTR [edi+0x31]
  40438a:	sub    esp,edx
  40438c:	add    dh,ch
  40438e:	and    eax,0x4d3ffa1d
  404393:	retf   
  404394:	and    esp,0xffffff8d
  404397:	fldenv [edi-0x5917ed83]
  40439d:	push   ecx
  40439e:	adc    BYTE PTR [edi],cl
  4043a0:	cmp    eax,0x9620c741
  4043a5:	cmp    dh,BYTE PTR [edx]
  4043a7:	inc    edx
  4043a8:	mov    DWORD PTR ds:0x510726d1,esp
  4043ae:	ret    0x2059
  4043b1:	das    
  4043b2:	jmp    0xccb7:0x23f69bd8
  4043b9:	sub    eax,DWORD PTR [edi+eax*4+0x565bd3d1]
  4043c0:	push   0x95729fd
  4043c5:	xor    eax,0x7887e8d0
  4043ca:	jmp    0xb721b5d7
  4043cf:	(bad)  
  4043d0:	xlat   BYTE PTR ds:[ebx]
  4043d1:	xchg   esp,eax
  4043d2:	xor    esi,ecx
  4043d4:	dec    ecx
  4043d5:	adc    eax,0xd80968c6
  4043da:	cmp    bl,BYTE PTR [edi]
  4043dc:	xchg   BYTE PTR es:[ebp-0x5b7159c1],dh
  4043e3:	mov    dh,BYTE PTR [edi-0x59]
  4043e6:	enter  0x11e6,0xc6
  4043ea:	jns    0x4043a7
  4043ec:	inc    esi
  4043ed:	and    BYTE PTR [esi-0x37b1def9],al
  4043f3:	pop    ebx
  4043f4:	pop    edi
  4043f5:	add    al,0xc7
  4043f7:	sub    al,0xcf
  4043f9:	mov    ebp,0xc05d3699
  4043fe:	outs   dx,BYTE PTR ds:[esi]
  4043ff:	xlat   BYTE PTR ds:[ebx]
  404400:	push   ebp
  404401:	adc    DWORD PTR [edx],edi
  404403:	scas   eax,DWORD PTR es:[edi]
  404404:	dec    ecx
  404405:	inc    edx
  404406:	inc    ecx
  404407:	or     BYTE PTR [edx+ebp*8-0x7f],cl
  40440b:	push   cs
  40440c:	lock mov ds:0x400d0306,al
  404412:	add    eax,0x7801a304
  404417:	retf   
  404418:	dec    ecx
  404419:	daa    
  40441a:	jns    0x4043e8
  40441c:	and    ch,cl
  40441e:	mov    DWORD PTR [edx+0xe],esp
  404421:	xchg   ebp,eax
  404422:	std    
  404423:	sahf   
  404424:	jmp    0x4043dd
  404426:	lds    esp,FWORD PTR [eax+eax*1+0x46]
  40442a:	push   ebx
  40442b:	cmp    eax,0x7d4f32ea
  404430:	imul   ebp,DWORD PTR [edi],0xffffff8e
  404433:	inc    ecx
  404434:	dec    esp
  404435:	or     esp,edi
  404437:	les    ecx,FWORD PTR [ecx-0x1e]
  40443a:	mov    eax,DWORD PTR [ebp-0x15a65320]
  404440:	into   
  404441:	imul   ebp,DWORD PTR [ecx-0x4f],0x5b
  404445:	lods   eax,DWORD PTR ds:[esi]
  404446:	(bad)  
  404447:	push   ss
  404448:	mov    esp,0xe35a2e09
  40444d:	les    esi,FWORD PTR ds:[edi+0x7b9dd239]
  404454:	neg    DWORD PTR [edx+0x3bed846]
  40445a:	adc    eax,0xcaf9295e
  40445f:	pop    ss
  404460:	inc    edx
  404461:	mov    dh,0x1d
  404463:	pop    eax
  404464:	inc    edx
  404465:	outs   dx,BYTE PTR ds:[esi]
  404466:	mov    al,0x58
  404468:	jge    0x4044da
  40446a:	fisttp WORD PTR [ecx+0x39efd5ad]
  404470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404471:	xchg   ebx,eax
  404472:	jmp    0x3024:0x6c15e938
  404479:	sti    
  40447a:	mov    bh,0x56
  40447c:	pop    ss
  40447d:	push   ebp
  40447e:	mov    bl,0x3a
  404480:	sub    DWORD PTR [ebp+0x188cfd88],edx
  404486:	aas    
  404487:	mov    bl,BYTE PTR [edx]
  404489:	jg     0x4044d3
  40448b:	popa   
  40448c:	out    dx,al
  40448d:	jbe    0x4044a3
  40448f:	add    BYTE PTR [ebp+0x62],cl
  404492:	dec    ecx
  404493:	stos   DWORD PTR es:[edi],eax
  404494:	xchg   edi,eax
  404495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404496:	sbb    eax,0x132d2bde
  40449b:	(bad)  
  40449c:	pop    ss
  40449d:	push   ss
  40449e:	jns    0x404509
  4044a0:	jmp    0x39776cd5
  4044a5:	pusha  
  4044a6:	jns    0x4044b8
  4044a8:	pop    esp
  4044a9:	out    0x12,eax
  4044ab:	ins    DWORD PTR es:[edi],dx
  4044ac:	xchg   ebp,eax
  4044ad:	leave  
  4044ae:	jmp    0x96262d8a
  4044b3:	and    BYTE PTR [esi-0x22],ah
  4044b6:	outs   dx,BYTE PTR ds:[esi]
  4044b7:	xor    DWORD PTR [ebx-0x30d86417],0x1c8ee921
  4044c1:	jge    0x40446c
  4044c3:	(bad)  [edx-0x1c06957e]
  4044c9:	test   al,0x97
  4044cb:	push   ecx
  4044cc:	scas   eax,DWORD PTR es:[edi]
  4044cd:	daa    
  4044ce:	iret   
  4044cf:	mov    eax,0x507c3bb7
  4044d4:	jb     0x404533
  4044d6:	clc    
  4044d7:	xchg   esp,eax
  4044d8:	leave  
  4044d9:	mov    dl,0x3a
  4044db:	(bad)  
  4044dc:	hlt    
  4044dd:	and    ebp,DWORD PTR [edi]
  4044df:	xchg   ebx,eax
  4044e0:	add    al,0xe9
  4044e2:	xchg   ebx,eax
  4044e3:	ja     0x4044e6
  4044e5:	add    ebp,DWORD PTR [edx-0x23]
  4044e8:	int3   
  4044e9:	popf   
  4044ea:	addr16 pop esp
  4044ec:	dec    BYTE PTR [ebp+eiz*1+0x24319d78]
  4044f3:	pop    ss
  4044f4:	out    0xcd,al
  4044f6:	pushf  
  4044f7:	and    dh,BYTE PTR [edi+0x200c9fe7]
  4044fd:	dec    ecx
  4044fe:	sbb    BYTE PTR [ebx+0x778293da],al
  404504:	jle    0x404543
  404506:	in     eax,dx
  404507:	mov    ds:0x6f4376ed,al
  40450c:	fs test al,0x3e
  40450f:	cs jne 0x40455b
  404512:	sbb    eax,0x573ea195
  404517:	sub    edi,ebx
  404519:	adc    al,0xc3
  40451b:	mov    eax,0x603b5f7a
  404520:	adc    al,0x85
  404522:	cmp    al,0xb8
  404524:	lds    esp,FWORD PTR [edi-0x5e8b4381]
  40452a:	sbb    al,0x85
  40452c:	push   0xcd38708c
  404531:	shr    DWORD PTR [eax+0x19c07bc5],0x54
  404538:	retf   0xc249
  40453b:	xor    dl,BYTE PTR [ecx]
  40453d:	test   al,0xb4
  40453f:	mov    ecx,0xb7258898
  404544:	dec    esi
  404545:	(bad)  
  404546:	dec    ecx
  404547:	xor    eax,0x6b67518b
  40454c:	inc    edi
  40454d:	cs lahf 
  40454f:	popa   
  404550:	fild   DWORD PTR [ebp-0x54427d9b]
  404556:	mov    DWORD PTR [edx],ecx
  404558:	rol    ch,1
  40455a:	call   0xf26e:0xf8c74023
  404561:	dec    esi
  404562:	mov    edi,0x1269932a
  404567:	mov    esp,0x341c5a2a
  40456c:	cmp    eax,0xdda28017
  404571:	pop    ds
  404572:	adc    eax,0xff1a731a
  404577:	repz dec ebp
  404579:	scas   eax,DWORD PTR es:[edi]
  40457a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40457b:	pop    ebp
  40457c:	jo     0x4045a7
  40457e:	pop    esp
  40457f:	setp   BYTE PTR [ecx+0x59c70d68]
  404586:	int3   
  404587:	sti    
  404588:	jns    0x404542
  40458a:	fwait
  40458b:	push   ds
  40458c:	das    
  40458d:	mov    ebx,0x2ea8a269
  404592:	ss mov edi,0x51780096
  404598:	scas   al,BYTE PTR es:[edi]
  404599:	js     0x40459e
  40459b:	sbb    ebx,DWORD PTR [eax-0x38]
  40459e:	mov    ebx,0x6fb553c0
  4045a3:	in     eax,0xac
  4045a5:	out    dx,eax
  4045a6:	cld    
  4045a7:	mov    dh,0x4c
  4045a9:	enter  0x3df2,0x79
  4045ad:	inc    ecx
  4045ae:	cmp    al,0x3c
  4045b0:	shr    DWORD PTR [ecx],0x6b
  4045b3:	push   ecx
  4045b4:	loope  0x4045e3
  4045b6:	xchg   BYTE PTR [eax],bl
  4045b8:	sti    
  4045b9:	xchg   ecx,eax
  4045ba:	test   eax,0x6033a8e8
  4045bf:	mov    esi,0xf32cbbd4
  4045c4:	jne    0x404562
  4045c6:	pop    eax
  4045c7:	push   ecx
  4045c8:	fsubr  QWORD PTR [esi-0x57]
  4045cb:	(bad)  
  4045cd:	ret    
  4045ce:	shl    dl,0x92
  4045d1:	fsub   DWORD PTR [ecx]
  4045d3:	add    al,0x8
  4045d5:	push   edi
  4045d6:	les    edi,FWORD PTR [esi]
  4045d8:	pop    ecx
  4045d9:	mov    BYTE PTR [edi],cl
  4045db:	das    
  4045dc:	arpl   WORD PTR [ebx+edx*1+0x40857d07],si
  4045e3:	dec    ebp
  4045e4:	pusha  
  4045e5:	(bad)  
  4045e6:	int    0xb4
  4045e8:	icebp  
  4045e9:	fwait
  4045ea:	sub    esi,eax
  4045ec:	jne    0x404645
  4045ee:	push   ds
  4045ef:	jae    0x4045e6
  4045f1:	pop    ebp
  4045f2:	es popa 
  4045f4:	inc    edi
  4045f5:	cld    
  4045f6:	and    dh,BYTE PTR [ecx-0x323ba9c6]
  4045fc:	mov    ah,0x81
  4045fe:	rcr    DWORD PTR [eax-0x57],1
  404601:	and    al,0x8a
  404603:	xor    cl,dl
  404605:	cdq    
  404606:	rol    BYTE PTR [ebx],0x27
  404609:	cmp    ebx,DWORD PTR [ecx+0x4a23059a]
  40460f:	jo     0x404664
  404611:	sbb    eax,0x8490f52
  404616:	loopne 0x404659
  404618:	jg     0x404684
  40461a:	cli    
  40461b:	icebp  
  40461c:	int    0xf0
  40461e:	and    ecx,DWORD PTR ds:0xd097c244
  404624:	addr16 pop edi
  404626:	ret    0x4b43
  404629:	sbb    BYTE PTR [ebx],0x5
  40462c:	xchg   DWORD PTR [ecx-0x7e],ecx
  40462f:	sbb    eax,0xf5895fca
  404634:	repz cmp edi,eax
  404637:	out    dx,eax
  404638:	push   edi
  404639:	pop    ebx
  40463a:	fnstcw WORD PTR [ebx+0x498a2326]
  404640:	mov    esp,0xfca878be
  404645:	inc    edi
  404646:	adc    eax,0xa81c4922
  40464b:	pop    ebx
  40464c:	inc    edx
  40464d:	sub    DWORD PTR [esi+edx*4],edi
  404650:	(bad)  
  404651:	push   ds
  404652:	sbb    eax,eax
  404654:	aad    0x64
  404656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404657:	nop
  404658:	pop    ss
  404659:	xchg   edi,eax
  40465a:	mov    esp,0x47b2c4f8
  40465f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404660:	mov    al,ds:0xb58a7988
  404665:	inc    edx
  404666:	scas   al,BYTE PTR es:[edi]
  404667:	push   ebx
  404668:	enter  0x895b,0x47
  40466c:	mov    ds,WORD PTR [edx]
  40466e:	dec    ebx
  40466f:	je     0x404693
  404671:	call   0xb07f:0x95f50896
  404678:	ret    
  404679:	sub    al,0x21
  40467b:	adc    ah,BYTE PTR [ebx]
  40467d:	(bad)  [edi-0x80]
  404680:	dec    ebp
  404681:	jmp    0x36e5c62a
  404686:	into   
  404687:	sub    edi,esi
  404689:	pop    edx
  40468a:	mov    ebx,DWORD PTR [eax-0x54]
  40468d:	mov    ecx,DWORD PTR [ebp-0x71b17296]
  404693:	xor    eax,0x7a34049a
  404698:	mov    DWORD PTR [ebx-0x15466e67],edx
  40469e:	xchg   ebp,eax
  40469f:	rcr    edx,1
  4046a1:	fld    DWORD PTR [ecx]
  4046a3:	xor    bl,dl
  4046a5:	leave  
  4046a6:	jge    0x4046ef
  4046a8:	push   0x14
  4046aa:	inc    ebp
  4046ab:	fwait
  4046ac:	loop   0x4046e3
  4046ae:	stc    
  4046af:	push   edx
  4046b0:	sbb    BYTE PTR [eax],0xbb
  4046b3:	mov    eax,0xa02f7b68
  4046b8:	or     al,0x50
  4046ba:	repz xlat BYTE PTR ds:[ebx]
  4046bc:	push   ecx
  4046bd:	popa   
  4046be:	fisubr DWORD PTR [eax+0x65]
  4046c1:	pushf  
  4046c2:	std    
  4046c3:	sub    ah,BYTE PTR [ebp-0x21]
  4046c6:	pop    ebx
  4046c7:	dec    eax
  4046c8:	push   ss
  4046c9:	add    BYTE PTR [edi],cl
  4046cb:	xor    eax,0x1157bf5d
  4046d0:	mov    al,ds:0xaa01e858
  4046d5:	outs   dx,DWORD PTR ds:[esi]
  4046d6:	mov    eax,ds:0xf7f8bb12
  4046db:	jge    0x40468e
  4046dd:	sbb    eax,0xf6fbb415
  4046e2:	out    dx,al
  4046e3:	aad    0x8f
  4046e5:	mov    ebp,0x2cb0075d
  4046ea:	(bad)  
  4046eb:	cdq    
  4046ec:	push   edx
  4046ed:	inc    ebp
  4046ee:	lock xchg BYTE PTR [edx+0x29360905],dh
  4046f5:	mov    edx,0xdbc3aec7
  4046fa:	sub    eax,0x77185c0
  4046ff:	pop    esi
  404700:	jle    0x4046fe
  404702:	retf   0xa9d8
  404705:	stos   DWORD PTR es:[edi],eax
  404706:	sub    DWORD PTR [eax],esp
  404708:	mov    eax,0xe8634ae7
  40470d:	jo     0x4046d1
  40470f:	mov    ds:0x8762a3de,eax
  404714:	ins    BYTE PTR es:[edi],dx
  404715:	jmp    0xbe81:0x5a5e22f4
  40471c:	inc    esi
  40471d:	add    eax,0xaad7915e
  404722:	mov    ch,0x91
  404724:	or     DWORD PTR [esp+ebx*8-0x5e],0x64
  404729:	cmp    DWORD PTR [esi+0x3e],ebx
  40472c:	mov    ebx,0x4602aa4d
  404731:	sub    ah,BYTE PTR [edx-0x51ddfcaf]
  404737:	push   ecx
  404738:	adc    ah,ch
  40473a:	dec    edi
  40473b:	std    
  40473c:	out    dx,eax
  40473d:	arpl   WORD PTR [ebx+ebp*1+0x4b520be0],ax
  404744:	xlat   BYTE PTR ds:[ebx]
  404745:	mov    DWORD PTR [ecx+ecx*1],esp
  404748:	jb     0x40478c
  40474a:	sbb    dl,BYTE PTR [esi+ebp*2+0x4f]
  40474e:	inc    esi
  40474f:	jge    0x40475a
  404751:	jne    0x4047c6
  404753:	addr16 and al,0xf1
  404756:	daa    
  404757:	dec    esp
  404758:	cmp    al,0xaa
  40475a:	or     DWORD PTR [edx-0x47],edi
  40475d:	adc    al,0x9f
  40475f:	mov    eax,0x5e3c2281
  404764:	add    ebp,esp
  404766:	mov    eax,ds:0x6f5b2b60
  40476b:	mov    cl,0x1c
  40476d:	mov    ds:0xadda9c8d,al
  404772:	mov    eax,0x86117890
  404777:	xchg   edx,eax
  404778:	aam    0x8d
  40477a:	aas    
  40477b:	aad    0x91
  40477d:	mov    ds:0xf981c46a,al
  404782:	stc    
  404783:	test   ah,bl
  404785:	adc    BYTE PTR [ebp+0xc],bl
  404788:	dec    ecx
  404789:	cs inc ecx
  40478b:	rol    BYTE PTR [edi-0x237bac2f],0x65
  404792:	imul   ecx
  404794:	cmc    
  404795:	test   al,0xd0
  404797:	mov    ecx,0x65c7242b
  40479c:	xchg   BYTE PTR [edi],bh
  40479e:	fucom  st(1)
  4047a0:	gs (bad) 
  4047a3:	cmp    dl,BYTE PTR [esi+0x2d]
  4047a6:	dec    eax
  4047a7:	mov    BYTE PTR [eax-0x4c],ah
  4047aa:	mov    ah,0xd2
  4047ac:	call   0xd05e:0x701401eb
  4047b3:	sub    ebx,DWORD PTR [edi+0x38]
  4047b6:	push   ecx
  4047b7:	call   0xea27555b
  4047bc:	ficom  WORD PTR [edi+0x74]
  4047bf:	outs   dx,DWORD PTR ds:[esi]
  4047c0:	fcomp  DWORD PTR [eax+0x7125cd0e]
  4047c6:	add    eax,0x8efa6cae
  4047cb:	pop    edi
  4047cc:	fsub   DWORD PTR [edx-0x15]
  4047cf:	inc    edi
  4047d0:	fcom   DWORD PTR [ecx]
  4047d2:	lds    esp,FWORD PTR [esi+0x60]
  4047d5:	jmp    0x57f0:0x62101a04
  4047dc:	cs jecxz 0x4047f6
  4047df:	add    ecx,DWORD PTR [ecx+ebp*8-0x6f5b184a]
  4047e6:	mov    cl,0xb6
  4047e8:	stos   BYTE PTR es:[edi],al
  4047e9:	jge    0x4047f2
  4047eb:	pop    esi
  4047ec:	loopne 0x40486b
  4047ee:	les    edi,FWORD PTR [ebx-0xf5f6e96]
  4047f4:	outs   dx,DWORD PTR ds:[esi]
  4047f5:	xor    BYTE PTR [eax-0x24288a82],0x63
  4047fc:	ins    DWORD PTR es:[edi],dx
  4047fd:	rcl    bl,1
  4047ff:	out    0x38,eax
  404801:	sub    ch,al
  404803:	add    edi,DWORD PTR [eax]
  404805:	adc    ecx,DWORD PTR ds:0x54f44590
  40480b:	out    dx,al
  40480c:	sub    DWORD PTR [edx],ebp
  40480e:	data16 jo 0x4047f5
  404811:	fld    DWORD PTR [esi+0x2e]
  404814:	fldcw  WORD PTR [ebx+ecx*8+0x50]
  404818:	pop    edi
  404819:	xchg   edi,esi
  40481b:	inc    esi
  40481c:	pop    esp
  40481d:	dec    ecx
  40481e:	dec    esp
  40481f:	gs cwde 
  404821:	inc    ebx
  404822:	ds inc esp
  404824:	xor    BYTE PTR [edi+edx*4],dl
  404827:	mov    ss,WORD PTR [eax+0xf]
  40482a:	mov    ds:0x284b242,eax
  40482f:	fidiv  DWORD PTR [ecx-0xf0dc60a]
  404835:	mov    eax,ds:0x96af2db2
  40483a:	mov    ds:0x73ae2861,al
  40483f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404840:	jge    0x404826
  404842:	fs mov cl,al
  404845:	inc    ebx
  404846:	push   eax
  404847:	xchg   DWORD PTR [eax],ecx
  404849:	jle    0x4048b7
  40484b:	scas   eax,DWORD PTR es:[edi]
  40484c:	mov    gs,WORD PTR [esi-0x50]
  40484f:	adc    al,0xdb
  404851:	shr    ch,cl
  404853:	repz enter 0xcd48,0x14
  404858:	mov    bh,ah
  40485a:	les    ebp,FWORD PTR [eax]
  40485c:	repz not DWORD PTR [ebx]
  40485f:	add    al,0x80
  404861:	gs xor esi,edx
  404864:	fcomip st,st(6)
  404866:	mov    al,ch
  404868:	push   cs
  404869:	push   esi
  40486a:	neg    BYTE PTR [eax+0x6ac776bf]
  404870:	sub    esp,DWORD PTR [edi-0x2dc85850]
  404876:	fldenv [ebx]
  404878:	sub    cl,BYTE PTR [ecx]
  40487a:	repz mov eax,0xd320938b
  404880:	jmp    0x404842
  404882:	ror    BYTE PTR [eax+0xb],0x95
  404886:	leave  
  404887:	mov    edi,0x14d9e117
  40488c:	cli    
  40488d:	pop    esi
  40488e:	stos   DWORD PTR es:[edi],eax
  40488f:	loop   0x4048d6
  404891:	outs   dx,BYTE PTR ds:[esi]
  404892:	icebp  
  404893:	(bad)  
  404894:	push   ebx
  404895:	push   ebx
  404896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404897:	stos   DWORD PTR es:[edi],eax
  404898:	sub    BYTE PTR fs:[eax+0x23],ah
  40489c:	or     bl,BYTE PTR [ebp+0x60c09872]
  4048a2:	cs (bad) 
  4048a4:	leave  
  4048a5:	sti    
  4048a6:	mov    eax,0xb3a42b50
  4048ab:	imul   ebx,DWORD PTR [ecx+0x3e74dcbb],0x1f8bfd81
  4048b5:	out    dx,al
  4048b6:	mov    ecx,0x7b44e058
  4048bb:	fisttp WORD PTR [ecx]
  4048bd:	cmp    ah,0xb0
  4048c0:	or     BYTE PTR [ecx],ah
  4048c2:	test   DWORD PTR [esi],esi
  4048c4:	js     0x40493a
  4048c6:	sti    
  4048c7:	das    
  4048c8:	popa   
  4048c9:	imul   edx,DWORD PTR [edx-0x13],0x6749d382
  4048d0:	ds xchg ecx,eax
  4048d2:	mov    ecx,0xfb070550
  4048d7:	mov    dh,0x67
  4048d9:	loop   0x404887
  4048db:	mov    edi,DWORD PTR ds:0x374d6624
  4048e1:	ins    BYTE PTR es:[edi],dx
  4048e2:	xchg   DWORD PTR [esi+0x467ab33a],esi
  4048e8:	cmp    bh,cl
  4048ea:	out    0x5f,al
  4048ec:	adc    BYTE PTR ds:0x46e16bfa,dl
  4048f2:	int    0x29
  4048f4:	sbb    BYTE PTR [ebp+0x5f],dl
  4048f7:	dec    edx
  4048f8:	int3   
  4048f9:	cmp    DWORD PTR [eax+0x647c71b1],0x12
  404900:	fmul   QWORD PTR [edi]
  404902:	cmp    BYTE PTR [eax],bl
  404904:	dec    ecx
  404905:	imul   eax,DWORD PTR ds:0xb8bd46bd,0xd813a08e
  40490f:	sbb    BYTE PTR [ebx],bl
  404911:	mov    al,ds:0x8c14d0da
  404916:	cwde   
  404917:	enter  0x90bc,0xd9
  40491b:	jb     0x404932
  40491d:	scas   eax,DWORD PTR es:[edi]
  40491e:	lods   eax,DWORD PTR ds:[esi]
  40491f:	cmp    bl,0xf
  404922:	in     eax,0x69
  404924:	aas    
  404925:	cmc    
  404926:	or     esp,edx
  404928:	pushf  
  404929:	cdq    
  40492a:	jg     0x40498c
  40492c:	xchg   esi,eax
  40492d:	ins    DWORD PTR es:[edi],dx
  40492e:	adc    BYTE PTR [esi],ch
  404930:	inc    esp
  404931:	xchg   ebp,eax
  404932:	jl     0x4048f5
  404934:	jl     0x4048e3
  404936:	or     al,0xcf
  404938:	outs   dx,DWORD PTR es:[esi]
  40493a:	pop    ecx
  40493b:	sbb    bh,BYTE PTR [ebx+eiz*4+0x2f]
  40493f:	xlat   BYTE PTR ds:[ebx]
  404940:	dec    esp
  404941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404942:	lea    ebp,[edi+0x267d2ec7]
  404948:	jmp    0x40491c
  40494a:	fistp  WORD PTR [eax-0x3b]
  40494d:	cmp    al,0x10
  40494f:	fadd   DWORD PTR [eax]
  404951:	adc    ch,bl
  404953:	xor    BYTE PTR [ecx+0x75],0x37
  404957:	dec    ecx
  404958:	mov    esp,0x91394d72
  40495d:	cwde   
  40495e:	mov    cl,0x2b
  404960:	neg    BYTE PTR [eax-0x540c0bd3]
  404966:	or     cl,BYTE PTR [ebx+ebx*1+0x2dd3e9f1]
  40496d:	aas    
  40496e:	push   edi
  40496f:	cdq    
  404970:	adc    al,0xfa
  404972:	cmp    al,0x43
  404974:	ss hlt 
  404976:	mov    BYTE PTR [ecx+0x79],ah
  404979:	fst    QWORD PTR [esi+eiz*8]
  40497c:	leave  
  40497d:	ins    DWORD PTR es:[edi],dx
  40497e:	loop   0x4049bb
  404980:	mov    DWORD PTR [ecx+0x4e310458],edx
  404986:	data16 out 0x6,al
  404989:	sub    cl,BYTE PTR [eax+0x5b]
  40498c:	dec    ebp
  40498d:	sub    BYTE PTR [edx-0x2180291a],al
  404993:	or     al,0x9e
  404995:	or     al,0x57
  404997:	mov    dh,0x4b
  404999:	dec    esp
  40499a:	xchg   ebx,eax
  40499b:	gs inc ebx
  40499d:	xor    edi,DWORD PTR [eax]
  40499f:	mov    al,ds:0x48ab7338
  4049a4:	fwait
  4049a5:	adc    bh,dh
  4049a7:	jl     0x40492f
  4049a9:	xchg   esp,eax
  4049aa:	ss cmp al,0xf8
  4049ad:	mov    bl,0xbb
  4049af:	(bad)  
  4049b0:	push   DWORD PTR [esp+edi*4-0x5c]
  4049b4:	div    DWORD PTR [ebx]
  4049b6:	or     BYTE PTR [edx-0x1116b98f],dl
  4049bc:	lea    esp,[edi]
  4049be:	lods   al,BYTE PTR ds:[esi]
  4049bf:	loopne 0x4049b3
  4049c1:	jmp    0x4049f5
  4049c3:	mov    esp,cs
  4049c5:	pop    ebx
  4049c6:	dec    ebx
  4049c7:	aaa    
  4049c8:	mov    edi,0x9d1a376c
  4049cd:	adc    eax,0x357c9194
  4049d2:	test   eax,0x80b027f9
  4049d7:	xor    eax,0xcb09f2f1
  4049dc:	icebp  
  4049dd:	lds    esi,FWORD PTR [edi]
  4049df:	and    eax,0x66a3a2b7
  4049e4:	ret    
  4049e5:	lods   al,BYTE PTR ds:[esi]
  4049e6:	js     0x404994
  4049e8:	ins    BYTE PTR es:[edi],dx
  4049e9:	pop    ds
  4049ea:	mov    al,ds:0x8fed9ec0
  4049ef:	ficomp DWORD PTR [edi-0x532b4fbd]
  4049f5:	adc    ebp,DWORD PTR [ebx+0x4a3e04ba]
  4049fb:	test   DWORD PTR [edi+eiz*8+0x24],edx
  4049ff:	pop    ebp
  404a00:	aaa    
  404a01:	mov    dl,0x71
  404a03:	in     eax,dx
  404a04:	inc    esp
  404a05:	test   al,0x6e
  404a07:	leave  
  404a08:	int3   
  404a09:	xor    eax,0x855c9f82
  404a0e:	push   ebx
  404a0f:	repz loopne 0x4049f4
  404a12:	mov    bl,BYTE PTR [edi-0x1f84caf9]
  404a18:	leave  
  404a19:	sub    eax,0x55208754
  404a1e:	vmread edi,esi
  404a21:	mov    ds:0xe21b0233,al
  404a26:	dec    ebx
  404a27:	mov    DWORD PTR [ebx+0x10cefa19],eax
  404a2d:	imul   ebx,DWORD PTR [eax+edx*2],0xd01458e3
  404a34:	lods   eax,DWORD PTR ds:[esi]
  404a35:	cmc    
  404a36:	dec    eax
  404a37:	inc    esi
  404a38:	aas    
  404a39:	xor    ecx,DWORD PTR [edx+0x76cf02b2]
  404a3f:	push   ecx
  404a40:	mov    esp,0xa5c743ba
  404a45:	adc    ecx,DWORD PTR [edx]
  404a47:	jae    0x404a21
  404a49:	pop    edx
  404a4a:	adc    ebp,DWORD PTR [edi]
  404a4c:	pop    es
  404a4d:	std    
  404a4e:	stc    
  404a4f:	mov    ebp,0x4cd5e16
  404a54:	jae    0x404a69
  404a56:	sub    cl,BYTE PTR [ecx-0x4e]
  404a59:	dec    esi
  404a5a:	jne    0x404ab5
  404a5c:	sub    ch,BYTE PTR [esi+0x60]
  404a5f:	mov    edx,0x891f32f9
  404a64:	ror    DWORD PTR es:[ecx],1
  404a67:	and    eax,0xe8db31cb
  404a6c:	xchg   bh,bh
  404a6e:	into   
  404a6f:	pushf  
  404a70:	scas   eax,DWORD PTR es:[edi]
  404a71:	stc    
  404a72:	lahf   
  404a73:	push   esp
  404a74:	adc    edx,DWORD PTR ds:0x17203836
  404a7a:	dec    ecx
  404a7b:	pushw  ds
  404a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a7e:	push   esi
  404a7f:	std    
  404a80:	cmp    ah,ch
  404a82:	pop    edi
  404a83:	pop    esp
  404a84:	dec    edi
  404a85:	sti    
  404a86:	sub    al,0xc6
  404a88:	mov    al,ds:0x55693933
  404a8d:	mov    bh,0x31
  404a8f:	sbb    BYTE PTR [ebp+0x8],bl
  404a92:	cli    
  404a93:	div    BYTE PTR [ebp-0x586fbc31]
  404a99:	cmp    DWORD PTR [esi-0x20e99862],edx
  404a9f:	mov    ah,0x20
  404aa1:	fisub  DWORD PTR [ecx-0x40]
  404aa4:	jmp    0x404af2
  404aa6:	stos   BYTE PTR es:[edi],al
  404aa7:	xor    eax,0x2318821e
  404aac:	movzx  edx,BYTE PTR [edi+eiz*1]
  404ab0:	in     eax,0x46
  404ab2:	je     0x404abc
  404ab4:	in     al,dx
  404ab5:	mov    eax,DWORD PTR ss:[ebx+0x474f01fe]
  404abc:	jmp    0x404ad7
  404abe:	mov    ch,0x7
  404ac0:	pop    ebp
  404ac1:	xchg   esp,eax
  404ac2:	nop
  404ac3:	shl    BYTE PTR [ebx-0x2969de0d],1
  404ac9:	rcl    BYTE PTR [ecx],cl
  404acb:	dec    ebp
  404acc:	mov    bh,0x7e
  404ace:	fld    QWORD PTR ss:[edi+0x5c]
  404ad2:	adc    al,0xb6
  404ad4:	jle    0x404ac8
  404ad6:	push   0x34b96465
  404adb:	mov    WORD PTR [ecx-0x38],ds
  404ade:	dec    esp
  404adf:	pop    ebp
  404ae0:	xchg   esp,eax
  404ae1:	xlat   BYTE PTR ds:[ebx]
  404ae2:	add    BYTE PTR [ebx+0x60],0xf1
  404ae6:	dec    ebp
  404ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ae8:	fs mov bh,0xe
  404aeb:	rol    DWORD PTR [eax-0x28c15987],0x14
  404af2:	jo     0x404ad0
  404af4:	add    al,0x81
  404af6:	stos   DWORD PTR es:[edi],eax
  404af7:	jmp    0xca0d:0x846e94d9
  404afe:	ror    BYTE PTR [eax-0x59feb8ac],cl
  404b04:	mov    esp,0x565f39f2
  404b09:	pop    ecx
  404b0a:	jge    0x404af1
  404b0c:	aas    
  404b0d:	mov    ds:0x797de797,al
  404b12:	cdq    
  404b13:	icebp  
  404b14:	aam    0x7a
  404b16:	adc    esp,ebp
  404b18:	jbe    0x404b49
  404b1a:	and    eax,DWORD PTR [ebx+0x4d197ca]
  404b20:	sbb    eax,0x4e969b6a
  404b25:	mov    ah,0x1c
  404b27:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b29:	lods   eax,DWORD PTR ds:[esi]
  404b2a:	sti    
  404b2b:	cmc    
  404b2c:	cmp    eax,DWORD PTR [esi]
  404b2e:	ja     0x404ade
  404b30:	and    esp,DWORD PTR [edi+0x6b]
  404b33:	dec    edx
  404b34:	sbb    al,BYTE PTR [edi+ebx*4-0x68]
  404b38:	out    dx,al
  404b39:	pop    ebp
  404b3a:	ror    dl,0x62
  404b3d:	mov    ds:0x7bc59566,al
  404b42:	cli    
  404b43:	pushf  
  404b44:	inc    ebx
  404b45:	mov    al,ds:0xa72d3c96
  404b4a:	adc    BYTE PTR ds:0xa030dc23,0xae
  404b51:	dec    di
  404b53:	fisub  WORD PTR ds:0x3d1d2564
  404b59:	pop    esi
  404b5a:	hlt    
  404b5b:	mov    bl,0xfc
  404b5d:	and    BYTE PTR [ecx-0x180d3b79],cl
  404b63:	sbb    bh,BYTE PTR [ecx]
  404b65:	xchg   ebp,eax
  404b66:	xlat   BYTE PTR ds:[ebx]
  404b67:	mov    bh,bl
  404b69:	dec    esp
  404b6a:	sbb    BYTE PTR [edi-0x5f],dh
  404b6d:	icebp  
  404b6e:	pop    ds
  404b6f:	lea    esp,[edx-0x44]
  404b72:	sahf   
  404b73:	sbb    eax,edi
  404b75:	imul   edi,DWORD PTR [edi+0x21],0x4b653328
  404b7c:	ins    BYTE PTR es:[edi],dx
  404b7d:	mov    edi,0x2999509c
  404b82:	xchg   esp,eax
  404b83:	out    0x99,al
  404b85:	cmp    dh,BYTE PTR [edx+ecx*4]
  404b88:	pusha  
  404b89:	les    ebx,FWORD PTR [esi-0x21768c3d]
  404b8f:	arpl   WORD PTR [ebp+0x5418e670],bp
  404b95:	push   0x4d
  404b97:	mov    BYTE PTR [ebp-0x759e454],cl
  404b9d:	jns    0x404bbf
  404b9f:	pop    es
  404ba0:	scas   al,BYTE PTR es:[edi]
  404ba1:	outs   dx,BYTE PTR ds:[esi]
  404ba2:	leave  
  404ba3:	test   DWORD PTR [ecx],ecx
  404ba5:	(bad)  
  404ba7:	enter  0xc252,0x7
  404bab:	inc    ecx
  404bac:	mov    ch,0xb2
  404bae:	push   gs
  404bb0:	icebp  
  404bb1:	push   es
  404bb2:	sub    DWORD PTR [ecx+0x7f],esp
  404bb5:	cmp    bh,BYTE PTR [edx-0x56597f1e]
  404bbb:	aaa    
  404bbc:	mov    dh,dl
  404bbe:	sbb    cl,BYTE PTR [ebp-0x75a806bd]
  404bc4:	pop    ecx
  404bc5:	mov    BYTE PTR ds:0x1b949723,bl
  404bcb:	stos   DWORD PTR es:[edi],eax
  404bcc:	pop    ss
  404bcd:	cs repnz mov dl,0xd8
  404bd1:	jecxz  0x404c4e
  404bd3:	or     esp,DWORD PTR [esi+0x4d]
  404bd6:	not    BYTE PTR [ecx+ebx*4]
  404bd9:	sbb    ebp,DWORD PTR [esi-0xb]
  404bdc:	and    eax,0x6d4820cd
  404be1:	dec    ebx
  404be2:	mov    WORD PTR [ecx+0x65],gs
  404be5:	mov    ebp,0xdcf6c650
  404bea:	int3   
  404beb:	jmp    0x404b6d
  404bed:	push   ecx
  404bee:	cmp    al,0xbe
  404bf0:	jle    0x404bfa
  404bf2:	addr16 push esi
  404bf4:	sub    ch,dl
  404bf6:	aad    0xb3
  404bf8:	xchg   ebx,eax
  404bf9:	aad    0xe4
  404bfb:	xchg   eax,ebp
  404bfd:	call   0xf758f032
  404c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c03:	mov    dh,0x1e
  404c05:	mov    al,ds:0x25977610
  404c0a:	add    ch,BYTE PTR [edx+0xd]
  404c0d:	pop    es
  404c0e:	adc    cl,BYTE PTR [edx-0x4b3aba94]
  404c14:	retf   0x4988
  404c17:	fld    DWORD PTR [edx]
  404c19:	xchg   esp,eax
  404c1a:	ja     0x404c34
  404c1c:	xchg   ebx,eax
  404c1d:	test   ebp,edx
  404c1f:	les    ebx,FWORD PTR [edx-0x614b75a7]
  404c25:	sti    
  404c26:	inc    esp
  404c27:	sar    eax,1
  404c29:	(bad)  
  404c2b:	add    al,0xd2
  404c2d:	pop    ebp
  404c2e:	arpl   WORD PTR [ebx-0x26],si
  404c31:	stos   DWORD PTR es:[edi],eax
  404c32:	sub    al,0xde
  404c34:	stos   DWORD PTR es:[edi],eax
  404c35:	clc    
  404c36:	xor    ecx,DWORD PTR [esi+0x3937619f]
  404c3c:	dec    ebx
  404c3d:	loope  0x404c4a
  404c3f:	and    eax,0x87b2fee1
  404c44:	mov    ds:0x5bd559d8,eax
  404c49:	or     al,0x2f
  404c4b:	mov    edi,ecx
  404c4d:	mov    edi,0xc5719048
  404c52:	xchg   BYTE PTR [ebx+edx*4+0x56],bh
  404c56:	add    al,0x8
  404c58:	mov    bl,0xea
  404c5a:	mov    bh,BYTE PTR [eax-0x45]
  404c5d:	xor    BYTE PTR [esi],al
  404c5f:	fdiv   DWORD PTR [edi+0x40]
  404c62:	lds    edx,FWORD PTR [esi-0x2b]
  404c65:	xor    bl,BYTE PTR [edx+0x60c75d4d]
  404c6b:	int    0x93
  404c6d:	inc    edx
  404c6e:	dec    ecx
  404c6f:	dec    edi
  404c70:	scas   al,BYTE PTR es:[edi]
  404c71:	repz inc ebp
  404c73:	sbb    esp,DWORD PTR [esi]
  404c75:	loop   0x404c49
  404c77:	(bad)  
  404c78:	dec    ebp
  404c79:	in     eax,0xc7
  404c7b:	adc    DWORD PTR [ebx+0xe09c932],ebx
  404c81:	loopne 0x404cec
  404c83:	in     eax,0x1
  404c85:	xor    BYTE PTR es:[eax],bh
  404c88:	(bad)  
  404c8a:	xlat   BYTE PTR ds:[ebx]
  404c8b:	dec    edi
  404c8c:	pop    es
  404c8d:	or     al,0x4
  404c8f:	fnstsw WORD PTR [eax-0x19b3d5aa]
  404c95:	out    dx,al
  404c96:	fiadd  WORD PTR [eax]
  404c98:	cwde   
  404c99:	das    
  404c9a:	test   eax,0x54e9ce02
  404c9f:	stos   DWORD PTR es:[edi],eax
  404ca0:	push   eax
  404ca1:	cmp    ebp,DWORD PTR [edx+eiz*8]
  404ca4:	push   edx
  404ca5:	ja     0x404c5e
  404ca7:	sti    
  404ca8:	pop    ss
  404ca9:	pop    ecx
  404caa:	test   cl,dh
  404cac:	or     ebp,DWORD PTR [esi]
  404cae:	loop   0x404d14
  404cb0:	fdiv   QWORD PTR [edi+ebp*4]
  404cb3:	sub    ecx,DWORD PTR [eax-0x69]
  404cb6:	lea    edi,[ebx-0x33]
  404cb9:	mov    al,0x99
  404cbb:	lahf   
  404cbc:	xchg   ebp,eax
  404cbd:	and    al,0xa7
  404cbf:	pop    edx
  404cc0:	mov    al,ds:0x152b7caa
  404cc5:	sbb    DWORD PTR [esi],0xd3244f43
  404ccb:	jmp    0x404c68
  404ccd:	push   ds
  404cce:	ds ror cl,1
  404cd1:	mov    esi,0x9b6c84d9
  404cd6:	outs   dx,BYTE PTR ds:[esi]
  404cd7:	adc    BYTE PTR [esi+0x75],dh
  404cda:	xor    DWORD PTR [esp+eax*4+0x9],ebp
  404cde:	leave  
  404cdf:	push   0x503fbd76
  404ce4:	xchg   ebp,eax
  404ce5:	mov    dl,0x14
  404ce7:	pop    ebp
  404ce8:	cld    
  404ce9:	fldenv [ebx-0x2ad8afde]
  404cef:	test   al,0x6f
  404cf1:	in     al,0xb9
  404cf3:	loop   0x404c9d
  404cf5:	out    dx,eax
  404cf6:	xor    DWORD PTR [edi-0x69],ebp
  404cf9:	aam    0x45
  404cfb:	test   BYTE PTR [edx+eiz*4+0x39],dl
  404cff:	test   BYTE PTR [ebp+0x3e],cl
  404d02:	push   ecx
  404d03:	imul   edx,DWORD PTR ds:0xde1061b0,0x6c7da3a2
  404d0d:	(bad)  
  404d0e:	xchg   edx,eax
  404d0f:	dec    DWORD PTR [eax-0x59]
  404d12:	int3   
  404d13:	js     0x404c9d
  404d15:	adc    eax,0xaf4dc56f
  404d1a:	cmp    al,0xfa
  404d1c:	mov    eax,0x7eb4c686
  404d21:	ds bnd ret 
  404d24:	ins    BYTE PTR es:[edi],dx
  404d25:	adc    BYTE PTR [eax-0x91b58aa],0xc
  404d2c:	(bad)  
  404d2d:	loopne 0x404d33
  404d2f:	and    ebx,DWORD PTR ds:0x70bbade7
  404d35:	inc    edx
  404d36:	test   eax,0x1a840aea
  404d3b:	enter  0xe6cf,0xdf
  404d3f:	mov    bh,0xe3
  404d41:	mov    edi,0x74ffb008
  404d46:	cwde   
  404d47:	in     al,0x5a
  404d49:	stos   DWORD PTR es:[edi],eax
  404d4a:	push   es
  404d4b:	iret   
  404d4c:	jbe    0x404d61
  404d4e:	xchg   edx,eax
  404d4f:	fcom   QWORD PTR [ebp+0x36290a86]
  404d55:	pop    ecx
  404d56:	and    eax,0x167e4a6f
  404d5b:	or     edx,DWORD PTR [ebx-0x53]
  404d5e:	ins    BYTE PTR es:[edi],dx
  404d5f:	sub    al,0xe9
  404d61:	xchg   edi,eax
  404d62:	fldenv [eax]
  404d64:	shl    ecx,cl
  404d66:	sub    eax,0xed238a40
  404d6b:	lea    esp,[esi-0xd]
  404d6e:	mov    DWORD PTR [ecx],ebp
  404d70:	sbb    ebx,DWORD PTR [ebx+edi*4+0x470c69b9]
  404d77:	jmp    0x404d44
  404d79:	or     ecx,ecx
  404d7b:	sub    al,0xc
  404d7d:	and    BYTE PTR [edx-0x3e40f476],dh
  404d83:	jo     0x404d58
  404d85:	push   0xd0efa65a
  404d8a:	jmp    0x404d64
  404d8c:	mov    bl,0x20
  404d8e:	loop   0x404d77
  404d90:	icebp  
  404d91:	add    al,0xfa
  404d93:	arpl   WORD PTR [esi-0x3ac5b396],bx
  404d99:	in     al,0x3c
  404d9b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  404d9d:	push   edi
  404d9e:	sbb    eax,0x14c00ce9
  404da3:	add    BYTE PTR [edx-0x3],bh
  404da6:	and    eax,0x37cdf842
  404dab:	retf   0xa0cd
  404dae:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404db0:	rol    BYTE PTR [esi+0x75b529af],1
  404db6:	xor    al,0x42
  404db8:	dec    ebp
  404db9:	je     0x404de8
  404dbb:	push   eax
  404dbc:	jecxz  0x404df1
  404dbe:	test   bl,bl
  404dc0:	add    eax,DWORD PTR [ecx]
  404dc2:	push   0xffffffd0
  404dc4:	add    al,BYTE PTR [ebp+0x1]
  404dc7:	pop    esi
  404dc8:	mov    ?,WORD PTR [edx]
  404dca:	sub    esp,DWORD PTR [ecx+ecx*8+0x3fb42945]
  404dd1:	sbb    al,0xdf
  404dd3:	xor    edi,esp
  404dd5:	cli    
  404dd6:	popf   
  404dd7:	sub    BYTE PTR [ecx],cl
  404dd9:	fs int3 
  404ddb:	dec    ecx
  404ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ddd:	xchg   edx,eax
  404dde:	xor    eax,0x1563d82c
  404de3:	cmp    ebp,0x60
  404de6:	add    al,0x3a
  404de8:	addr16 push cs
  404dea:	add    BYTE PTR [eax-0x312d61b9],0xf7
  404df1:	div    BYTE PTR [edx+esi*4-0x5b]
  404df5:	aaa    
  404df6:	add    BYTE PTR [ebp+0x436871f3],ch
  404dfc:	pop    ebx
  404dfd:	push   0xffffffec
  404dff:	push   ebp
  404e00:	pop    ebx
  404e01:	sbb    ch,BYTE PTR [ebp-0x40]
  404e04:	cmp    ah,BYTE PTR [ebx]
  404e06:	add    eax,0x3fe86aac
  404e0b:	aad    0xf2
  404e0d:	dec    ebp
  404e0e:	sbb    al,0xdf
  404e10:	sub    DWORD PTR [esi-0x5ede04bf],ebp
  404e16:	test   al,0xe5
  404e18:	mov    esp,0xc7b7cfeb
  404e1d:	mov    eax,DWORD PTR [edi]
  404e1f:	push   esi
  404e20:	xor    BYTE PTR [edi+0x7e],ch
  404e23:	xchg   edx,eax
  404e24:	mov    esp,0x8b746a19
  404e29:	xchg   edi,eax
  404e2a:	sbb    al,0x5
  404e2c:	push   edx
  404e2d:	fmul   DWORD PTR [eax+0x6c595f20]
  404e33:	loopne 0x404de1
  404e35:	and    al,0x23
  404e37:	fadd   QWORD PTR [ebx]
  404e39:	adc    BYTE PTR [ebx],bl
  404e3b:	add    ecx,DWORD PTR [eax]
  404e3d:	div    eax
  404e3f:	adc    DWORD PTR [ebp+0x78],edx
  404e42:	mov    eax,0x52221979
  404e47:	push   ebx
  404e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e49:	jne    0x404e7c
  404e4b:	loop   0x404e0f
  404e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e4e:	lea    ecx,[edx]
  404e50:	push   0xffffffdb
  404e52:	out    dx,eax
  404e53:	sti    
  404e54:	inc    eax
  404e55:	dec    esp
  404e56:	pop    ss
  404e57:	jae    0x404e3d
  404e59:	sbb    ah,BYTE PTR [edx+0x74]
  404e5c:	mov    eax,ds:0x3227caf6
  404e61:	ret    
  404e62:	and    DWORD PTR [edi+eax*2],esi
  404e65:	add    edx,DWORD PTR [ebp-0x57]
  404e68:	inc    edi
  404e69:	fdivr  QWORD PTR [bx+di+0x7f]
  404e6d:	jns    0x404e91
  404e6f:	in     eax,dx
  404e70:	or     BYTE PTR ds:[edi+0x5b],ah
  404e74:	test   BYTE PTR [edi-0x63],ah
  404e77:	and    bl,bl
  404e79:	pusha  
  404e7a:	cdq    
  404e7b:	je     0x404e5f
  404e7d:	sbb    eax,0x6b32d0d2
  404e82:	push   edi
  404e83:	mov    bh,BYTE PTR [edx-0x31b585bd]
  404e89:	(bad)  
  404e8a:	and    ebp,DWORD PTR [ebx-0x4b]
  404e8d:	cdq    
  404e8e:	ja     0x404ec7
  404e90:	pop    ss
  404e91:	repnz fadd st,st(4)
  404e94:	mov    eax,ds:0x911d6ba9
  404e99:	jmp    0x404e7c
  404e9b:	shl    DWORD PTR [edi+edx*8],cl
  404e9e:	push   cs
  404e9f:	push   esi
  404ea0:	lods   al,BYTE PTR ds:[esi]
  404ea1:	xlat   BYTE PTR ds:[ebx]
  404ea2:	add    bl,bl
  404ea4:	add    al,BYTE PTR [ebx+eiz*1+0x9c3054a]
  404eab:	sar    DWORD PTR ds:0x97916337,0x2c
  404eb2:	cwde   
  404eb3:	sub    al,0xbf
  404eb5:	in     eax,0xd8
  404eb7:	ficom  DWORD PTR [esi-0x2ca9454f]
  404ebd:	mov    eax,0x98fc353
  404ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ec3:	xor    edx,DWORD PTR [ebx+0x41]
  404ec6:	xor    BYTE PTR [edi],ah
  404ec8:	into   
  404ec9:	jmp    0x404f41
  404ecb:	jnp    0x404ed2
  404ecd:	js     0x404ee6
  404ecf:	xor    eax,0x5fa4a9b5
  404ed4:	jo     0x404eb9
  404ed6:	dec    ebx
  404ed7:	js     0x404f2b
  404ed9:	les    ecx,FWORD PTR [esi-0x6b988371]
  404edf:	neg    DWORD PTR [eax-0x2ed57b1e]
  404ee5:	pop    ss
  404ee6:	mov    ah,0xc5
  404ee8:	push   ds
  404ee9:	loop   0x404ed4
  404eeb:	push   ebp
  404eec:	xor    BYTE PTR [ebx+ebp*4-0x5092d92c],0xd0
  404ef4:	mov    esi,0xa7cdd874
  404ef9:	xor    eax,0xc3cae1c0
  404efe:	lea    esp,[ebp+0x438abb19]
  404f04:	ja     0x404f75
  404f06:	jnp    0x404f21
  404f08:	mov    bl,0x7
  404f0a:	mov    DWORD PTR [ecx-0x15],eax
  404f0d:	fstp   TBYTE PTR [ecx+eax*1]
  404f10:	lds    ebp,FWORD PTR [ebp+0x78f0bf3e]
  404f16:	sbb    al,0xa4
  404f18:	rcl    BYTE PTR [esi],cl
  404f1a:	jns    0x404f8a
  404f1c:	data16 adc al,0x29
  404f1f:	mov    dl,0x82
  404f21:	mov    al,ds:0xecb705c9
  404f26:	loopne 0x404f0d
  404f28:	pusha  
  404f29:	push   edi
  404f2a:	push   edi
  404f2b:	dec    esi
  404f2c:	adc    eax,0x8a083932
  404f31:	stos   DWORD PTR es:[edi],eax
  404f32:	(bad)  
  404f33:	fidivr WORD PTR [eax-0x3e]
  404f36:	sub    bl,BYTE PTR [ebx+eiz*8+0xb6f907d]
  404f3d:	lea    edx,[esi]
  404f3f:	xchg   DWORD PTR ds:0x33939063,esp
  404f45:	push   es
  404f46:	es aas 
  404f48:	or     BYTE PTR [ecx+0x72],bl
  404f4b:	fisubr WORD PTR [esi+ecx*4]
  404f4e:	(bad)  
  404f4f:	fistp  WORD PTR [esi+0x41]
  404f52:	xor    esi,DWORD PTR [edx+0x5b91573d]
  404f58:	and    BYTE PTR [ebx+edi*4-0x48],cl
  404f5c:	cs jae 0x404f05
  404f5f:	add    BYTE PTR [edx+0x4e],ch
  404f62:	out    0xfb,eax
  404f64:	ret    0xd8e9
  404f67:	sbb    eax,0x586be545
  404f6c:	jno    0x404f13
  404f6e:	jecxz  0x404f11
  404f70:	test   DWORD PTR [esp+ebx*1+0x23],ebp
  404f74:	gs in  eax,0x2
  404f77:	pop    esp
  404f78:	std    
  404f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f7a:	push   ss
  404f7b:	sbb    ebp,DWORD PTR [ebx+0x1b5259fc]
  404f81:	xchg   ebx,eax
  404f82:	mov    cs,WORD PTR [ebx]
  404f84:	add    ch,BYTE PTR [edx-0x5a403146]
  404f8a:	div    BYTE PTR [edi-0x5c]
  404f8d:	or     DWORD PTR [edi],eax
  404f8f:	xor    BYTE PTR [ebp+0x50],dh
  404f92:	pop    ecx
  404f93:	cdq    
  404f94:	push   eax
  404f95:	xor    dl,bl
  404f97:	mov    eax,0x485cfa48
  404f9c:	mov    eax,0xacaa8733
  404fa1:	outs   dx,DWORD PTR ds:[esi]
  404fa2:	fcmovu st,st(1)
  404fa4:	mov    edi,0xfb9749f7
  404fa9:	pushf  
  404faa:	sbb    ebp,DWORD PTR [ebp+0x53182250]
  404fb0:	push   ds
  404fb1:	mov    cs,WORD PTR [esi-0x35]
  404fb4:	in     al,0xfa
  404fb6:	leave  
  404fb7:	cwde   
  404fb8:	rol    DWORD PTR [ebx+eiz*8+0x52408a51],cl
  404fbf:	ret    
  404fc0:	imul   edx,DWORD PTR [esp-0x1fec1ce],0xb19eb4c2
  404fcb:	icebp  
  404fcc:	xchg   edx,eax
  404fcd:	and    BYTE PTR [edi+eax*4],ah
  404fd0:	and    eax,0x565e31f0
  404fd5:	mov    ecx,0x7fc9211e
  404fda:	cmp    eax,0xcb68abad
  404fdf:	fild   DWORD PTR [edx+ebp*1]
  404fe2:	push   esi
  404fe3:	push   esp
  404fe4:	fadd   QWORD PTR [edi-0x76]
  404fe7:	push   0xd9933aa1
  404fec:	repz out 0xfa,al
  404fef:	(bad)  
  404ff0:	aad    0xbd
  404ff2:	scas   eax,DWORD PTR es:[edi]
  404ff3:	daa    
  404ff4:	xchg   ebp,eax
  404ff5:	add    dh,BYTE PTR [ecx]
  404ff7:	lock jmp 0x1214:0xe3dd0e37
  404fff:	sbb    esi,DWORD PTR [esi-0xd]
  405002:	clc    
  405003:	push   es
  405004:	pop    edx
  405005:	inc    edi
  405006:	sbb    ch,BYTE PTR [edi+0x39937e58]
  40500c:	jg     0x404fc1
  40500e:	jmp    0x38b804b2
  405013:	pop    ss
  405014:	dec    ebp
  405015:	in     eax,dx
  405016:	and    cl,ch
  405018:	shr    DWORD PTR [esi+esi*8-0x24],1
  40501c:	fdiv   st,st(2)
  40501e:	inc    ebp
  40501f:	push   edx
  405020:	sbb    esp,DWORD PTR [ebx-0x66]
  405023:	lock pop ds
  405025:	sbb    BYTE PTR [eax-0x42ad81af],0xc4
  40502c:	mov    al,ds:0x75fb8b34
  405031:	ja     0x404fb8
  405033:	sub    edx,eax
  405035:	jno    0x40505f
  405037:	out    0xc5,eax
  405039:	mov    ebp,0xf7843a0c
  40503e:	jge    0x4050ae
  405040:	(bad)  
  405041:	jo     0x4050b6
  405043:	push   esi
  405044:	lahf   
  405045:	mov    dl,0xf3
  405047:	mov    esi,0x8810aec0
  40504c:	add    DWORD PTR [esi],0xfffffff5
  40504f:	daa    
  405050:	imul   ecx,DWORD PTR [esi+0x761c9259],0xc2475d77
  40505a:	pushf  
  40505b:	mov    ?,edi
  40505d:	jle    0x405004
  40505f:	and    DWORD PTR [ebx],esp
  405061:	push   esi
  405062:	push   es
  405063:	add    BYTE PTR [eax-0x3098400b],ch
  405069:	jne    0x4050bd
  40506b:	dec    esi
  40506c:	pop    eax
  40506d:	add    bh,ah
  40506f:	int3   
  405070:	mov    dl,0x54
  405072:	ret    0xb69b
  405075:	jmp    0x4050ea
  405077:	xchg   edx,eax
  405078:	clc    
  405079:	cmp    al,0x99
  40507b:	push   es
  40507c:	add    edi,DWORD PTR [ebx+edi*8+0x32]
  405080:	dec    esp
  405081:	dec    ecx
  405082:	clc    
  405083:	add    esp,DWORD PTR [esi]
  405085:	jg     0x4050bd
  405087:	jge    0x405047
  405089:	cmp    edi,DWORD PTR [eax-0xf384d30]
  40508f:	daa    
  405090:	mov    ebx,0xccb1a442
  405095:	push   eax
  405096:	fisub  WORD PTR [esi-0x1c]
  405099:	and    cl,ch
  40509b:	sbb    DWORD PTR [esi-0x59],ebx
  40509e:	js     0x405112
  4050a0:	push   esp
  4050a1:	add    eax,0xccf441f1
  4050a6:	or     dh,0x6f
  4050a9:	push   edx
  4050aa:	jecxz  0x40507b
  4050ac:	pop    edi
  4050ad:	pop    edx
  4050ae:	and    eax,0x65880ba2
  4050b3:	inc    eax
  4050b4:	(bad)  
  4050b7:	push   0xffffffce
  4050b9:	int3   
  4050ba:	sbb    esi,DWORD PTR [ebp+0x7f]
  4050bd:	push   0xf144b6e
  4050c2:	retf   0x464f
  4050c5:	mov    ebx,0xda595720
  4050ca:	or     DWORD PTR [ecx-0x77665a5],ecx
  4050d0:	pop    esp
  4050d1:	cli    
  4050d2:	ror    BYTE PTR ds:0x9663703,0xb4
  4050d9:	mov    ecx,0x4e4bf1b5
  4050de:	sbb    eax,0xa13b76ec
  4050e3:	int    0xe
  4050e5:	(bad)  
  4050e6:	dec    ebx
  4050e7:	bound  esp,QWORD PTR [esi-0x37]
  4050ea:	inc    esp
  4050eb:	shl    DWORD PTR [ebx-0x38],0x52
  4050ef:	xor    al,0xb7
  4050f1:	(bad)  
  4050f2:	(bad)  
  4050f3:	and    BYTE PTR [ebx],ah
  4050f5:	out    dx,eax
  4050f6:	jmp    0x8326:0xc0bf1d79
  4050fd:	dec    edx
  4050fe:	enter  0x2530,0x1
  405102:	or     esi,ebx
  405104:	adc    esi,DWORD PTR [esi-0x46]
  405107:	imul   edx,ebp,0xf6fafc30
  40510d:	xchg   ecx,eax
  40510e:	mov    bl,0xb5
  405110:	push   edi
  405111:	mov    edi,0x77cc30ae
  405116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405117:	pop    esp
  405118:	(bad)  
  405119:	mov    esi,0xc37cc435
  40511e:	out    dx,al
  40511f:	or     eax,0x37cf45db
  405124:	xchg   edx,eax
  405125:	dec    ebp
  405126:	cmp    edi,DWORD PTR [eax-0x36c3b393]
  40512c:	test   al,0x86
  40512e:	inc    esi
  40512f:	cld    
  405130:	sub    al,0x20
  405132:	stc    
  405133:	shr    edi,cl
  405135:	ret    
  405136:	pop    ds
  405137:	es leave 
  405139:	mov    bl,0xf4
  40513b:	push   edi
  40513c:	mov    edi,0x86f7439b
  405141:	retf   
  405142:	inc    edi
  405143:	or     BYTE PTR ds:0xa895d595,cl
  405149:	test   BYTE PTR [edi],dh
  40514b:	int3   
  40514c:	jmp    0x7d79:0xd96929b0
  405153:	or     BYTE PTR [ecx+0x753cb508],bl
  405159:	xchg   BYTE PTR [edx-0x5c332026],ah
  40515f:	pop    ds
  405160:	and    al,BYTE PTR [edi+0x4287d31e]
  405166:	into   
  405167:	hlt    
  405168:	inc    eax
  405169:	ja     0x40514f
  40516b:	add    edi,edx
  40516d:	mov    bl,0xe0
  40516f:	xchg   esi,eax
  405170:	pop    esp
  405171:	stos   DWORD PTR es:[edi],eax
  405172:	pushf  
  405173:	mov    esi,0x6f2927d9
  405178:	xor    BYTE PTR [ecx-0x7f],0x25
  40517c:	mov    ebx,DWORD PTR ss:[ebx]
  40517f:	repz pop ss
  405181:	or     BYTE PTR [esi+0x11e20de9],bh
  405187:	add    eax,0x6b163045
  40518c:	dec    esi
  40518d:	add    dh,0xe6
  405190:	(bad)  
  405191:	push   ecx
  405192:	dec    eax
  405193:	cmp    al,0x82
  405195:	imul   ebx,DWORD PTR [esi-0x5a],0x2c
  405199:	mov    dh,0xc2
  40519b:	or     BYTE PTR [edi+0x50],bh
  40519e:	imul   edx,DWORD PTR es:[ecx],0xf41f602f
  4051a5:	jle    0x4051b7
  4051a7:	iret   
  4051a8:	adc    dh,BYTE PTR ds:0xa53ef8d9
  4051ae:	icebp  
  4051af:	loop   0x4051d3
  4051b1:	repz mov dl,0xf2
  4051b4:	addr16 ss sub al,0xfa
  4051b8:	das    
  4051b9:	test   BYTE PTR [ecx],ah
  4051bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051bc:	push   ss
  4051bd:	xor    ah,bl
  4051bf:	pop    ds
  4051c0:	mov    eax,0x91977d6f
  4051c5:	xchg   DWORD PTR [ebx],ebx
  4051c7:	fnstsw ax
  4051c9:	mov    ebx,0xa9ed8314
  4051ce:	push   ebx
  4051cf:	adc    eax,0x3a675d17
  4051d4:	inc    ecx
  4051d5:	push   edi
  4051d6:	push   edi
  4051d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051d8:	mov    ebp,0xdf3c768d
  4051dd:	sbb    esi,esi
  4051df:	(bad)  [ebp+0x58fa0fb9]
  4051e5:	push   0x16
  4051e7:	cli    
  4051e8:	sub    ch,al
  4051ea:	popf   
  4051eb:	gs pop esp
  4051ed:	cmc    
  4051ee:	adc    DWORD PTR [edx],ebp
  4051f0:	wbinvd 
  4051f2:	or     eax,0xc9fe10a5
  4051f7:	push   cs
  4051f8:	(bad)  
  4051f9:	xchg   esp,eax
  4051fa:	xor    eax,0x784cb257
  4051ff:	mov    ds:0xa467801a,eax
  405204:	leave  
  405205:	xchg   ebp,eax
  405206:	(bad)  
  405208:	repnz out 0x7e,eax
  40520b:	jnp    0x405223
  40520d:	xor    eax,0x6c50d2e1
  405212:	stos   BYTE PTR es:[edi],al
  405213:	inc    esi
  405214:	jnp    0x4051b1
  405216:	repz out 0x32,al
  405219:	sbb    dl,BYTE PTR [ebp-0x1956692c]
  40521f:	out    0x39,eax
  405221:	mov    al,ds:0x8b819e60
  405226:	adc    edi,DWORD PTR [ebp-0x34d43a25]
  40522c:	adc    BYTE PTR ss:[ebx-0x580f65ab],0x4d
  405234:	adc    edx,esp
  405236:	ins    DWORD PTR es:[edi],dx
  405237:	ds cmp al,0xaa
  40523a:	xchg   al,al
  40523c:	xchg   BYTE PTR [edi],dh
  40523e:	into   
  40523f:	inc    eax
  405240:	xchg   BYTE PTR [eax+ebx*4],cl
  405243:	or     DWORD PTR [esi-0x4bb63760],ebp
  405249:	and    eax,0x67239332
  40524e:	clc    
  40524f:	aad    0xd5
  405251:	(bad)  
  405252:	or     al,0x1e
  405254:	frstor [edi]
  405256:	inc    ebp
  405257:	rcl    DWORD PTR [edi+0x2a821014],1
  40525d:	fist   DWORD PTR [eax-0x136a6366]
  405263:	out    0x2e,al
  405265:	enter  0x2e60,0xd
  405269:	scas   eax,DWORD PTR es:[edi]
  40526a:	adc    al,0xfa
  40526c:	adc    esi,DWORD PTR [esi]
  40526e:	in     eax,dx
  40526f:	test   al,0xb6
  405271:	imul   ebx,DWORD PTR [edi+ecx*4-0x77],0x2ed8c577
  405279:	sbb    edx,DWORD PTR [eax]
  40527b:	test   eax,0xc4e1bf53
  405280:	pop    ecx
  405281:	sub    DWORD PTR [edx],ebp
  405283:	inc    esp
  405284:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  405286:	addr16 add eax,0x87f55818
  40528c:	cmp    esi,DWORD PTR [eax]
  40528e:	pop    edi
  40528f:	bound  edi,QWORD PTR [ecx-0x4f4a3048]
  405295:	stos   BYTE PTR es:[edi],al
  405296:	(bad)  
  405297:	pop    edi
  405298:	retf   
  405299:	sub    ch,BYTE PTR [edx+0x64]
  40529c:	mov    ds:0xbfe82af1,al
  4052a1:	jecxz  0x405268
  4052a3:	out    dx,al
  4052a4:	jl     0x405242
  4052a6:	pop    ebx
  4052a8:	(bad)  
  4052a9:	jle    0x40531f
  4052ab:	dec    esi
  4052ac:	add    DWORD PTR [ebx],edx
  4052ae:	jae    0x40530e
  4052b0:	cmp    eax,0x1475e30e
  4052b5:	in     eax,dx
  4052b6:	sub    DWORD PTR [esp+edx*8-0x78],eax
  4052ba:	mov    esp,0x5543fbf5
  4052bf:	(bad)  
  4052c0:	xchg   ebx,eax
  4052c1:	sub    eax,0xa5027c3
  4052c6:	adc    ebp,DWORD PTR [edi-0x2fd3e0c4]
  4052cc:	jbe    0x4052ef
  4052ce:	xor    cl,al
  4052d0:	sbb    al,0x4e
  4052d2:	and    eax,0x3a1df878
  4052d7:	add    ebp,esp
  4052d9:	ds cli 
  4052db:	lea    esp,[ebx-0x2b51c5a4]
  4052e1:	pop    esp
  4052e2:	sti    
  4052e3:	jecxz  0x405291
  4052e5:	cmp    BYTE PTR [ebp-0x54909f91],cl
  4052eb:	add    edx,DWORD PTR [ebp+edi*2-0x54]
  4052ef:	lods   al,BYTE PTR cs:[esi]
  4052f1:	(bad)  
  4052f2:	xchg   edx,eax
  4052f3:	mov    dh,0x42
  4052f5:	loope  0x4052db
  4052f7:	pusha  
  4052f8:	inc    ebp
  4052f9:	sub    bl,0x60
  4052fc:	sub    esp,DWORD PTR [edi]
  4052fe:	xchg   ecx,eax
  4052ff:	mov    eax,0x34d9ea60
  405304:	daa    
  405305:	adc    DWORD PTR [edx],ecx
  405307:	sub    DWORD PTR [ebx],0x1b40827c
  40530d:	in     ax,0x10
  405310:	cld    
  405311:	or     DWORD PTR [ecx+0x39],eax
  405314:	test   BYTE PTR [ecx+0x5e],0x73
  405318:	rcl    edi,0x36
  40531b:	pop    es
  40531c:	adc    al,0x8c
  40531e:	xor    eax,0x50fc05
  405323:	push   0x8ff0d15f
  405328:	mov    al,0x45
  40532a:	sub    eax,DWORD PTR [edx-0x72bb81b3]
  405330:	retfw  
  405332:	add    ah,dl
  405334:	push   edi
  405335:	jo     0x40537d
  405337:	inc    edx
  405338:	nop
  405339:	adc    al,0x36
  40533b:	cmp    bh,BYTE PTR [ecx+0x6e]
  40533e:	mov    WORD PTR [ecx-0x3c],ds
  405341:	bound  ecx,QWORD PTR [edx+0x57]
  405344:	xlat   BYTE PTR ds:[ebx]
  405345:	jb     0x405352
  405347:	fimul  DWORD PTR [ebp-0x41]
  40534a:	push   es
  40534b:	mov    al,0xa9
  40534d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534e:	mov    ah,0x97
  405350:	ficom  DWORD PTR [ebp-0x3b687513]
  405356:	sbb    eax,0x1584d799
  40535b:	es mov eax,0x51a771a0
  405361:	sbb    DWORD PTR [edi+0x702f9504],0xffffffc9
  405368:	or     BYTE PTR [edx],0xcd
  40536b:	ins    DWORD PTR es:[edi],dx
  40536c:	jae    0x405309
  40536e:	pushf  
  40536f:	adc    BYTE PTR [esi+eiz*1+0x1e8b542],al
  405376:	and    eax,0xf339e71b
  40537b:	bound  eax,QWORD PTR [eax-0x5193da41]
  405381:	and    al,0x44
  405383:	fiadd  DWORD PTR [eax]
  405385:	sub    BYTE PTR [edx+0x4b5e4c],ch
  40538b:	add    ebp,DWORD PTR [ebp-0x68fdf24e]
  405391:	jmp    0xec7f7da3
  405396:	data16 mov ah,0x41
  405399:	inc    edi
  40539a:	test   eax,0x4d7f639
  40539f:	icebp  
  4053a0:	aas    
  4053a1:	pop    es
  4053a2:	sub    DWORD PTR [esp+edi*4+0x7d],ebx
  4053a6:	aaa    
  4053a7:	pusha  
  4053a8:	idiv   DWORD PTR [esi]
  4053aa:	dec    eax
  4053ab:	pushf  
  4053ac:	jne    0x405419
  4053ae:	push   edi
  4053af:	data16 aad 0xcd
  4053b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053b3:	pop    ds
  4053b4:	test   BYTE PTR [ecx-0x38],bl
  4053b7:	fcmovu st,st(6)
  4053b9:	mov    bh,0x82
  4053bb:	push   cs
  4053bc:	inc    ebx
  4053bd:	mov    dl,0x4e
  4053bf:	fist   WORD PTR [ecx+esi*2-0x20]
  4053c3:	jmp    0xe770:0xd49b9695
  4053ca:	and    al,BYTE PTR [eax]
  4053cc:	test   BYTE PTR [esi-0xf],ch
  4053cf:	add    ecx,ebp
  4053d1:	inc    ecx
  4053d2:	push   ds
  4053d3:	push   ss
  4053d4:	cmp    eax,0x160a5408
  4053d9:	cwde   
  4053da:	ins    DWORD PTR es:[edi],dx
  4053db:	retf   0xeaaa
  4053de:	add    eax,0xe7c36847
  4053e3:	inc    esi
  4053e4:	sub    DWORD PTR cs:[edx-0x4f9f4666],ebx
  4053eb:	fdivr  QWORD PTR [edi-0x6a]
  4053ee:	idiv   BYTE PTR [esi]
  4053f0:	jne    0x4053d6
  4053f2:	lahf   
  4053f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053f4:	enter  0x9342,0xf8
  4053f8:	(bad)  
  4053f9:	out    dx,eax
  4053fa:	jmp    0x2a823168
  4053ff:	mov    dh,0xba
  405401:	es push 0x3c
  405404:	jmp    0x40538c
  405406:	stos   DWORD PTR es:[edi],eax
  405407:	(bad)  
  405408:	int3   
  405409:	or     al,0x33
  40540b:	int    0x48
  40540d:	pop    ecx
  40540e:	dec    ecx
  40540f:	sbb    ebp,DWORD PTR [eax+eiz*8-0x7aaadc0d]
  405416:	ins    DWORD PTR es:[edi],dx
  405417:	out    0xc0,al
  405419:	addr16 sahf 
  40541b:	and    al,0xe
  40541d:	mov    ebp,fs
  40541f:	jns    0x405413
  405421:	push   0x1305f341
  405426:	or     eax,0x59e05bdc
  40542b:	pop    ss
  40542c:	addr16 mov dh,0x25
  40542f:	push   edx
  405430:	mov    ch,0x4c
  405432:	retf   0x3c5b
  405435:	push   ebx
  405436:	mov    esp,0xf4d93b8a
  40543b:	pop    ss
  40543c:	adc    BYTE PTR [esp+ecx*8+0x45cb7bda],dl
  405443:	or     dl,BYTE PTR [edx+0x90add1e]
  405449:	push   ebx
  40544a:	ins    BYTE PTR es:[edi],dx
  40544b:	xchg   ch,ch
  40544d:	sub    eax,0x6a33c0d1
  405452:	push   edx
  405453:	cs push cs
  405455:	push   esp
  405456:	inc    edi
  405457:	mov    esi,0xdc9fb0d6
  40545c:	xchg   BYTE PTR [edi-0x18da522d],ch
  405462:	mov    dl,0xb6
  405464:	xchg   edi,ecx
  405466:	rol    ebx,1
  405468:	mov    dh,0x86
  40546a:	xor    bh,BYTE PTR [edi]
  40546c:	repnz push ecx
  40546e:	and    esp,esi
  405470:	cwde   
  405471:	repnz pop esi
  405473:	icebp  
  405474:	int    0x11
  405476:	or     BYTE PTR [ecx-0x6c],bl
  405479:	(bad)  
  40547a:	dec    esp
  40547b:	stc    
  40547c:	mov    ah,0x1d
  40547e:	mov    ebp,0xcf8731da
  405483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405484:	lfs    ecx,FWORD PTR [edi+edx*2]
  405488:	inc    esp
  405489:	mov    ch,0x54
  40548b:	add    ebp,DWORD PTR ds:[esi-0xf97d20]
  405492:	fistp  QWORD PTR [ecx+0x48c810c2]
  405498:	mov    edi,DWORD PTR [edx-0x68]
  40549b:	pusha  
  40549c:	jecxz  0x4054c3
  40549e:	cmp    BYTE PTR [edx+eiz*1-0x30],cl
  4054a2:	ja     0x405475
  4054a4:	xlat   BYTE PTR ds:[ebx]
  4054a5:	les    ecx,FWORD PTR [ecx]
  4054a7:	xor    DWORD PTR gs:[esi+0x6b],0x18
  4054ac:	xchg   BYTE PTR ds:0x99d23d9d,al
  4054b2:	sub    eax,0x53cb5212
  4054b7:	in     eax,dx
  4054b8:	xchg   edi,eax
  4054b9:	leave  
  4054ba:	jg     0xc8df6d6d
  4054c0:	sti    
  4054c1:	adc    BYTE PTR [ebp+0x43],ch
  4054c4:	xor    ecx,edx
  4054c6:	jnp    0x405532
  4054c8:	pop    ebp
  4054c9:	xlat   BYTE PTR ds:[ebx]
  4054ca:	mov    esi,DWORD PTR [ebp+0x553f311b]
  4054d0:	ins    DWORD PTR es:[edi],dx
  4054d1:	out    0x9d,eax
  4054d3:	cld    
  4054d4:	out    dx,al
  4054d5:	test   al,0x57
  4054d7:	neg    DWORD PTR [eax-0x179efa16]
  4054dd:	pop    ds
  4054de:	sub    eax,0x52c79245
  4054e3:	cmp    al,BYTE PTR [ecx-0xcb99133]
  4054e9:	fsubr  DWORD PTR [ecx]
  4054eb:	fbld   TBYTE PTR [ebp+0x4f]
  4054ee:	dec    ecx
  4054ef:	mov    WORD PTR [ecx],?
  4054f1:	xchg   edx,eax
  4054f2:	jno    0x40555d
  4054f4:	add    eax,0x4bc87c42
  4054f9:	mov    al,0xa7
  4054fb:	jne    0x40548e
  4054fd:	out    0x83,eax
  4054ff:	lods   al,BYTE PTR ds:[esi]
  405500:	sbb    dh,BYTE PTR [eax]
  405502:	and    ecx,edx
  405504:	fnstenv [edi-0x44]
  405507:	not    DWORD PTR [esi+0x1502be51]
  40550d:	daa    
  40550e:	dec    eax
  40550f:	hlt    
  405510:	pop    esi
  405511:	retf   0x75b7
  405514:	jno    0x405539
  405516:	jp     0x405563
  405518:	push   eax
  405519:	dec    ebx
  40551a:	in     al,0xd2
  40551c:	sub    dh,bh
  40551e:	push   edx
  40551f:	bound  ebp,QWORD PTR [ebp+0x42804171]
  405525:	out    dx,eax
  405526:	nop
  405527:	add    bh,bl
  405529:	popa   
  40552a:	adc    ebx,DWORD PTR [ebp-0x6dd99815]
  405530:	adc    al,0xb5
  405532:	push   ds
  405533:	mov    al,0x43
  405535:	jnp    0x405593
  405537:	imul   ecx,eax,0x65018ded
  40553d:	sbb    eax,0xff8be548
  405542:	lds    eax,FWORD PTR [edx+0x15]
  405545:	fistp  DWORD PTR [ecx]
  405547:	and    dl,cl
  405549:	lods   eax,DWORD PTR ds:[esi]
  40554a:	or     al,0xc4
  40554c:	lds    ebx,FWORD PTR [ecx+0x6902e2d8]
  405552:	lahf   
  405553:	ins    BYTE PTR es:[edi],dx
  405554:	cmp    BYTE PTR [ebx+0x33],dh
  405557:	loop   0x405559
  405559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40555a:	push   esp
  40555b:	cs mov ecx,0x70a658fe
  405561:	lods   al,BYTE PTR ds:[esi]
  405562:	dec    esi
  405563:	jb     0x40552c
  405565:	or     esp,ecx
  405567:	aas    
  405568:	fist   DWORD PTR [esi-0x7286653a]
  40556e:	ins    DWORD PTR es:[edi],dx
  40556f:	lods   eax,DWORD PTR ds:[esi]
  405570:	xchg   ebp,eax
  405571:	cld    
  405572:	stos   DWORD PTR es:[edi],eax
  405573:	int3   
  405574:	stos   BYTE PTR es:[edi],al
  405575:	mov    ch,0x95
  405577:	push   0x61d16b1c
  40557c:	inc    esi
  40557d:	mov    fs,eax
  40557f:	inc    eax
  405580:	mov    ds:0x343481,eax
  405585:	add    bh,BYTE PTR [esi]
  405587:	scas   al,BYTE PTR es:[edi]
  405588:	jle    0x405514
  40558a:	push   ecx
  40558b:	ror    bl,cl
  40558d:	mov    ecx,0x3d1c753e
  405592:	cmp    ecx,DWORD PTR [ebp+0x33a0b21c]
  405598:	push   edx
  405599:	je     0x405587
  40559b:	dec    eax
  40559c:	call   0xa51d:0xb01ef245
  4055a3:	mov    al,0x61
  4055a5:	fwait
  4055a6:	ds jecxz 0x405617
  4055a9:	inc    esi
  4055aa:	sahf   
  4055ab:	pop    ds
  4055ac:	jecxz  0x405566
  4055ae:	xchg   esi,eax
  4055af:	dec    esp
  4055b0:	in     al,dx
  4055b1:	lahf   
  4055b2:	into   
  4055b3:	push   0x1071e400
  4055b8:	push   cs
  4055b9:	mov    bh,0x8
  4055bb:	cdq    
  4055bc:	call   0x4182a1c7
  4055c1:	sbb    eax,0x948e998a
  4055c6:	ret    0xbcf3
  4055c9:	cdq    
  4055ca:	cld    
  4055cb:	(bad)  
  4055cc:	(bad)  
  4055cd:	fisttp QWORD PTR [ecx-0x4e]
  4055d0:	inc    edi
  4055d1:	adc    DWORD PTR [ebx],ecx
  4055d3:	shl    ch,1
  4055d5:	sub    DWORD PTR [ecx],edx
  4055d7:	sub    esi,DWORD PTR [ebp-0x332f46c8]
  4055dd:	jmp    0x405643
  4055df:	mov    ecx,0x90a38475
  4055e4:	cwde   
  4055e5:	mov    esi,0x888318cf
  4055ea:	and    ecx,DWORD PTR [esi-0x45]
  4055ed:	add    DWORD PTR [edx*2+0x34f837c1],edx
  4055f4:	or     BYTE PTR [edx-0x56],ah
  4055f7:	dec    edi
  4055f8:	dec    esi
  4055f9:	in     al,dx
  4055fa:	push   esi
  4055fb:	clc    
  4055fc:	aam    0x63
  4055fe:	lock jmp 0x4bad:0x1e08e35c
  405606:	or     BYTE PTR [edi+esi*1],dl
  405609:	jl     0x4055ce
  40560b:	and    DWORD PTR [edx-0x8],esp
  40560e:	sti    
  40560f:	mov    esp,0x59aadcf4
  405614:	inc    ecx
  405615:	add    al,0xa8
  405617:	fstp   QWORD PTR fs:[edx-0x76]
  40561b:	dec    esp
  40561c:	mov    bh,0xb6
  40561e:	mov    cl,0x17
  405620:	sar    ah,0xab
  405623:	push   cs
  405624:	mov    esi,0xfbbc72d2
  405629:	cmc    
  40562a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40562b:	adc    eax,0x1970cf42
  405630:	das    
  405631:	push   eax
  405632:	fcomi  st,st(2)
  405634:	outs   dx,BYTE PTR ds:[esi]
  405635:	push   esi
  405636:	ja     0x405693
  405638:	es addr16 add edi,eax
  40563c:	fist   DWORD PTR [ecx]
  40563e:	push   es
  40563f:	add    bl,bh
  405641:	in     al,dx
  405642:	jo     0x405687
  405644:	pop    ds
  405645:	cs sbb al,0xb7
  405648:	(bad)  
  405649:	mov    bh,0x3a
  40564b:	sub    ebp,DWORD PTR [ebp+0x2b0cebde]
  405651:	dec    edi
  405652:	adc    DWORD PTR [ebx+0x6c],ebx
  405655:	mov    ebx,0x9766157f
  40565a:	adc    eax,0xa887753d
  40565f:	(bad)  
  405660:	aam    0xb9
  405662:	rol    BYTE PTR [ecx-0x27f8c433],cl
  405668:	call   0x9b5f:0xf86739b6
  40566f:	or     al,0x26
  405671:	cmp    BYTE PTR [eax],dl
  405673:	add    ecx,ecx
  405675:	or     ebp,DWORD PTR [eax+0xb]
  405678:	mov    cl,bl
  40567a:	jmp    FWORD PTR [di-0x74c8]
  40567f:	adc    cl,BYTE PTR [edi]
  405681:	ret    
  405682:	imul   eax,DWORD PTR [edx+eax*4],0xffffff86
  405686:	int    0xaf
  405688:	std    
  405689:	out    0x98,al
  40568b:	sub    al,bh
  40568d:	pop    esi
  40568e:	out    0xdf,eax
  405690:	jecxz  0x4056c9
  405692:	stos   DWORD PTR es:[edi],eax
  405693:	and    ah,ch
  405695:	sbb    al,0xc8
  405697:	sbb    DWORD PTR [esi-0x53],0x786a76f0
  40569e:	test   BYTE PTR [esi+0x43829638],cl
  4056a4:	mov    cl,BYTE PTR [ebx+0x2dbae413]
  4056aa:	in     eax,0x78
  4056ac:	mov    edi,0x86a4d9aa
  4056b1:	sub    DWORD PTR [esi+0x3fffd0a3],edi
  4056b7:	xlat   BYTE PTR ds:[ebx]
  4056b8:	and    al,0x6a
  4056ba:	sub    eax,0x6100873f
  4056bf:	mov    edi,0x40adc166
  4056c4:	push   ebp
  4056c5:	int3   
  4056c6:	sub    DWORD PTR [esi-0xa8790c8],0x361f7604
  4056d0:	xlat   BYTE PTR ds:[ebx]
  4056d1:	shl    DWORD PTR [edi+eax*1+0x5aa3fa4d],cl
  4056d8:	inc    esp
  4056d9:	outs   dx,DWORD PTR ds:[esi]
  4056da:	or     DWORD PTR [edx-0x6c],0x50fb391
  4056e1:	pop    DWORD PTR [esi+0x6]
  4056e4:	jp     0x405722
  4056e6:	div    DWORD PTR [eax-0x3c]
  4056e9:	dec    ebx
  4056ea:	rcr    BYTE PTR [eax],1
  4056ec:	xchg   BYTE PTR [ebx],dl
  4056ee:	aam    0xc3
  4056f0:	mov    ah,BYTE PTR [ecx+0x76]
  4056f3:	mov    WORD PTR [edi-0x56],cs
  4056f6:	test   DWORD PTR [edi-0x75ac669a],ecx
  4056fc:	js     0x405724
  4056fe:	into   
  4056ff:	pop    edx
  405700:	mov    al,0xa4
  405702:	mov    al,BYTE PTR [edx]
  405704:	dec    edi
  405705:	mov    bl,BYTE PTR [edi]
  405707:	mov    ebp,0xca8a4f04
  40570c:	cmc    
  40570d:	or     cl,BYTE PTR [ecx-0x23d3c61b]
  405713:	jno    0x405704
  405715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405716:	sbb    dh,BYTE PTR [ebx+0x406f8511]
  40571c:	push   ebp
  40571d:	pop    ebx
  40571e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40571f:	sti    
  405720:	(bad)  
  405721:	mov    bh,0xc5
  405723:	pushf  
  405724:	shl    BYTE PTR [ecx+0x246907],cl
  40572a:	adc    cl,BYTE PTR [ebx]
  40572c:	jne    0x405772
  40572e:	pop    ebp
  40572f:	xchg   edx,eax
  405730:	xchg   edi,eax
  405731:	lods   eax,DWORD PTR ds:[esi]
  405732:	clc    
  405733:	movups XMMWORD PTR [eax-0x13790381],xmm0
  40573a:	jo     0x4056e7
  40573c:	std    
  40573d:	shr    BYTE PTR [edx+0x50],1
  405740:	inc    ecx
  405741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405742:	stc    
  405743:	jns    0x40575c
  405745:	push   ecx
  405746:	mov    al,ds:0xb50f8ff2
  40574b:	dec    ebx
  40574c:	xor    ax,0x7b39
  405750:	lahf   
  405751:	or     DWORD PTR [esi+edx*1+0x74],esi
  405755:	inc    ebp
  405756:	jae    0x405722
  405758:	mov    ebp,0xb52dc7c5
  40575d:	arpl   WORD PTR [esi+0x34],di
  405760:	mov    bl,0x9c
  405762:	rcl    DWORD PTR [ecx],0x9
  405765:	sbb    ch,BYTE PTR [ebx]
  405767:	js     0x4056ec
  405769:	and    dl,cl
  40576b:	mov    ds:0xf8f6fd67,al
  405770:	mov    DWORD PTR [edx],0x39edf51f
  405776:	cmc    
  405777:	das    
  405778:	jmp    0x8a81:0xb9c23d9b
  40577f:	or     DWORD PTR [ecx],ecx
  405781:	pop    ss
  405782:	mov    esi,edx
  405784:	hlt    
  405785:	cmp    al,dh
  405787:	xchg   edi,eax
  405788:	popf   
  405789:	loope  0x4057d2
  40578b:	mov    BYTE PTR [edx-0x4d7291d7],bl
  405791:	repz dec ebp
  405793:	je     0x405734
  405795:	lahf   
  405796:	fistp  WORD PTR [ebp+0x211c1fe3]
  40579c:	dec    ebx
  40579d:	push   ds
  40579e:	sbb    DWORD PTR [edi-0x72dd775f],ebx
  4057a4:	call   0xcf4c:0xef2440b
  4057ab:	sub    DWORD PTR [esi-0x30d3ab3e],0x43
  4057b2:	add    BYTE PTR [edx+0x5296f7b3],bl
  4057b8:	div    DWORD PTR [edi-0x5e]
  4057bb:	mov    WORD PTR [ecx-0x65],fs
  4057be:	out    dx,al
  4057bf:	sti    
  4057c0:	mov    eax,DWORD PTR ss:[esi]
  4057c3:	sub    DWORD PTR [esi],edi
  4057c5:	mov    WORD PTR [ecx],ds
  4057c7:	enter  0x834b,0xb9
  4057cb:	xor    esi,DWORD PTR [ebx]
  4057cd:	mov    al,0x10
  4057cf:	scas   al,BYTE PTR es:[edi]
  4057d0:	aaa    
  4057d1:	xchg   edx,eax
  4057d2:	and    DWORD PTR [edi+eiz*4+0x53],ebx
  4057d6:	cmp    al,0x15
  4057d8:	js     0x405835
  4057da:	pop    es
  4057db:	cmp    dh,BYTE PTR [esp+edx*4+0x3e786102]
  4057e2:	jns    0x4057d2
  4057e4:	or     DWORD PTR [ebx],ebx
  4057e6:	cmp    BYTE PTR [esp+esi*1],dl
  4057e9:	pop    ebx
  4057ea:	lock mov esi,0xf24c6f50
  4057f0:	cwde   
  4057f1:	js     0x4057b7
  4057f3:	in     al,0xaf
  4057f5:	xchg   DWORD PTR [edx-0x2e7210dd],edi
  4057fb:	jnp    0x4057f8
  4057fd:	cmc    
  4057fe:	das    
  4057ff:	fld    DWORD PTR [edi-0x1c]
  405802:	and    ch,bl
  405804:	mov    WORD PTR [esp+eiz*2+0x79],cs
  405808:	idiv   BYTE PTR [ecx+eax*4-0x7]
  40580c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40580d:	mov    ch,0xbb
  40580f:	xor    esp,DWORD PTR [esi]
  405811:	jne    0x4057db
  405813:	pop    edx
  405814:	mov    ebp,0x52f5d8cd
  405819:	sub    DWORD PTR [eax-0x54c2c786],eax
  40581f:	shl    DWORD PTR [ebp+0x4e],cl
  405822:	cmp    BYTE PTR [edi-0x3deb2020],dl
  405828:	sbb    BYTE PTR [eax-0x36714ccb],dl
  40582e:	ret    
  40582f:	jmp    0x39ded909
  405834:	jp     0x40581c
  405836:	jmp    0x405840
  405838:	lds    edi,FWORD PTR [eax+edi*2]
  40583b:	call   0x9235:0x75a25188
  405842:	ret    
  405843:	out    0xeb,al
  405845:	sub    ah,BYTE PTR [ebp-0x420b7a7f]
  40584b:	(bad)  
  40584c:	cdq    
  40584d:	fisttp QWORD PTR [edi+0x50]
  405850:	xchg   ecx,eax
  405851:	jle    0x4058a0
  405853:	dec    eax
  405854:	aam    0xd2
  405856:	hlt    
  405857:	rcr    DWORD PTR ds:0x1e1508a4,1
  40585d:	jo     0x405870
  40585f:	add    eax,esp
  405861:	add    BYTE PTR [edx+0x2053ce01],ch
  405867:	mov    edi,0x3c91b6ae
  40586c:	mov    ebx,0x22730341
  405871:	sub    bl,BYTE PTR ds:0x827497ab
  405877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405878:	imul   edi,edx,0x4d
  40587b:	push   esp
  40587c:	call   FWORD PTR [eax-0x63f7784c]
  405882:	add    eax,ebx
  405884:	push   ebp
  405885:	out    0x40,eax
  405887:	test   eax,0x57f9bdc
  40588c:	int3   
  40588d:	cmp    BYTE PTR [eax],dh
  40588f:	adc    al,0x40
  405891:	inc    edx
  405892:	mov    eax,0x9f58c3e5
  405897:	out    dx,al
  405898:	lock neg al
  40589b:	rol    DWORD PTR [ecx+0x40],0x1a
  40589f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058a0:	sahf   
  4058a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058a2:	(bad)  
  4058a3:	jecxz  0x4058b0
  4058a5:	into   
  4058a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a7:	test   BYTE PTR [ebx],dh
  4058a9:	pushf  
  4058aa:	lods   al,BYTE PTR ds:[esi]
  4058ab:	jmp    0x3d00:0x12a27902
  4058b2:	jbe    0x405918
  4058b4:	not    DWORD PTR ds:0x2ca765ee
  4058ba:	test   DWORD PTR [edx+0x74fac65e],edx
  4058c0:	pop    ebp
  4058c1:	sub    BYTE PTR [ebp+0xd],dh
  4058c4:	push   ebx
  4058c5:	jg     0x4058f7
  4058c7:	push   edi
  4058c8:	int3   
  4058c9:	lds    edi,FWORD PTR [ebp+0x1c185c21]
  4058cf:	cmp    BYTE PTR [ebp+0x18e0369c],0xc8
  4058d6:	pop    edx
  4058d7:	xor    eax,DWORD PTR [ecx+0xf26a772]
  4058dd:	ins    DWORD PTR es:[edi],dx
  4058de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058df:	loopne 0x4058cb
  4058e1:	mov    ch,0x3b
  4058e3:	pushf  
  4058e4:	mov    gs,WORD PTR [eax]
  4058e6:	jge    0x4058df
  4058e8:	iret   
  4058e9:	frstor [esi+0x5a]
  4058ec:	inc    esi
  4058ed:	mov    dh,0x2d
  4058ef:	cwde   
  4058f0:	or     DWORD PTR [ebx-0x37],ebp
  4058f3:	std    
  4058f4:	jg     0x40589c
  4058f6:	pop    ebx
  4058f7:	sbb    ebp,ecx
  4058f9:	pop    ss
  4058fa:	add    BYTE PTR [ecx+0x72c6fec3],0xb8
  405901:	jb     0x405887
  405903:	inc    ebx
  405904:	daa    
  405905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405906:	or     BYTE PTR ds:0x9564b549,dh
  40590c:	call   0x50dd7f8b
  405911:	in     al,0x83
  405913:	mov    DWORD PTR [edi-0x67f133a6],eax
  405919:	push   ebp
  40591a:	sbb    al,0xc
  40591c:	mov    ah,0x9e
  40591e:	repnz loopne 0x405933
  405921:	jmp    0x78c8e124
  405926:	push   ebx
  405927:	test   eax,0xfb1656a5
  40592c:	sbb    eax,0x3c830ee8
  405931:	jmp    0xc441:0xe2aa0fc4
  405938:	(bad)  
  405939:	or     bl,BYTE PTR [edx]
  40593b:	(bad)  
  40593d:	hlt    
  40593e:	inc    esp
  40593f:	add    al,0x45
  405941:	push   ebp
  405942:	pop    esp
  405943:	xor    esp,DWORD PTR [eax-0x435dac42]
  405949:	repz and al,0x20
  40594c:	cmc    
  40594d:	lods   eax,DWORD PTR ds:[esi]
  40594e:	or     DWORD PTR [edx],0xfffffff7
  405951:	loop   0x405963
  405953:	stos   BYTE PTR es:[edi],al
  405954:	adc    edi,DWORD PTR [esp+eiz*8-0x6c]
  405958:	arpl   cx,bx
  40595a:	cdq    
  40595b:	clc    
  40595c:	sar    DWORD PTR [edx+esi*8],0xe4
  405960:	jmp    0x4058f6
  405962:	mov    cl,BYTE PTR [ebp+0x4bf6ebce]
  405968:	not    BYTE PTR [esp+ebp*2]
  40596b:	push   ebp
  40596c:	sbb    BYTE PTR [ecx],0x29
  40596f:	imul   esp,DWORD PTR [edx+0x0],0xb8868865
  405976:	jae    0x40595f
  405978:	jl     0x405999
  40597a:	cmp    BYTE PTR gs:[edx],cl
  40597d:	scas   eax,DWORD PTR es:[edi]
  40597e:	(bad)  
  40597f:	xchg   bx,ax
  405981:	lahf   
  405982:	pop    ss
  405983:	loopne 0x4059cb
  405985:	fs out 0xe6,al
  405988:	pop    ebp
  405989:	inc    eax
  40598a:	dec    edi
  40598b:	adc    al,0x8b
  40598d:	fild   DWORD PTR [esi]
  40598f:	js     0x4059f7
  405991:	(bad)  [eax-0x20]
  405994:	sti    
  405995:	dec    esp
  405996:	xor    dl,BYTE PTR [ecx+0x2489b9fd]
  40599c:	aaa    
  40599d:	jmp    0xf353:0xcb78d18a
  4059a4:	scas   al,BYTE PTR es:[edi]
  4059a5:	xchg   BYTE PTR [esi-0x67],ch
  4059a8:	clc    
  4059a9:	push   DWORD PTR [ebx-0x7b621dee]
  4059af:	in     al,0x1e
  4059b1:	xor    DWORD PTR [ecx],0x9e932772
  4059b7:	sbb    ebp,edx
  4059b9:	sar    BYTE PTR [edi-0x38],1
  4059bc:	mov    eax,ds:0x81c0ab0f
  4059c1:	dec    ecx
  4059c2:	pop    es
  4059c3:	mov    ah,0x7c
  4059c5:	mov    esp,0xd7f0d86b
  4059ca:	scas   al,BYTE PTR es:[edi]
  4059cb:	arpl   WORD PTR [ebp+0x69],di
  4059ce:	imul   eax,DWORD PTR [ebx+0xe230fc],0xfffffff8
  4059d5:	out    dx,al
  4059d6:	gs xchg ebp,eax
  4059d8:	cli    
  4059d9:	push   0x4e1c0aa2
  4059de:	je     0x405a0e
  4059e0:	repz addr16 dec eax
  4059e3:	inc    esi
  4059e4:	push   0xeaf70753
  4059e9:	std    
  4059ea:	fwait
  4059eb:	adc    ah,BYTE PTR [edi+0xeaabcbc]
  4059f1:	pushf  
  4059f2:	ret    
  4059f3:	outs   dx,DWORD PTR ds:[esi]
  4059f4:	cmp    bl,BYTE PTR [ecx*1-0x31be60eb]
  4059fb:	add    DWORD PTR [ebx+0x3aa7ce15],edx
  405a01:	mov    eax,ds:0xedb75a99
  405a06:	adc    BYTE PTR [ecx-0x5d],cl
  405a09:	daa    
  405a0a:	jnp    0x405a7a
  405a0c:	pop    esp
  405a0d:	pop    esi
  405a0e:	pop    esi
  405a0f:	dec    esp
  405a10:	sahf   
  405a11:	or     edx,ebx
  405a13:	test   BYTE PTR ds:0xd4274718,cl
  405a19:	sbb    ebp,DWORD PTR [ecx-0x6c]
  405a1c:	push   ebp
  405a1d:	lods   eax,DWORD PTR ds:[esi]
  405a1e:	ficomp WORD PTR [eax+esi*1+0x4f]
  405a22:	or     eax,0xff906515
  405a27:	xchg   ecx,eax
  405a28:	adc    DWORD PTR [eax-0x43],esp
  405a2b:	jl     0x405a13
  405a2d:	or     ebx,ebp
  405a2f:	ja     0x405a5c
  405a31:	(bad)  
  405a32:	enter  0x7f5f,0x45
  405a36:	sbb    DWORD PTR [eax+0xe936399],ecx
  405a3c:	push   0x30
  405a3e:	mov    ebp,DWORD PTR [eax+0x423c19f2]
  405a44:	add    bh,BYTE PTR [eax]
  405a46:	(bad)  
  405a47:	mov    DWORD PTR [edi-0x7a],ebx
  405a4a:	mov    DWORD PTR [edx+ebx*1],0x534e4503
  405a51:	(bad)  
  405a52:	test   eax,0x5192e9fd
  405a57:	test   DWORD PTR [ecx],edi
  405a59:	pop    ebx
  405a5a:	int    0x72
  405a5c:	bound  edi,QWORD PTR [ecx-0x3e]
  405a5f:	sbb    esi,DWORD PTR [edi+0x33952ca1]
  405a65:	inc    ecx
  405a66:	outs   dx,BYTE PTR ds:[esi]
  405a67:	in     eax,0x25
  405a69:	xchg   edi,eax
  405a6a:	and    BYTE PTR [edi-0x5c],dh
  405a6d:	and    al,0x4f
  405a6f:	popf   
  405a70:	loope  0x405aec
  405a72:	dec    ebx
  405a73:	loop   0x405abc
  405a75:	repz sub eax,0xd6f5c4ff
  405a7b:	test   BYTE PTR [ebp+0x3],cl
  405a7e:	jl     0x405ae8
  405a80:	aas    
  405a81:	mov    edx,0x5b0867
  405a86:	mov    ecx,0x3aa381bb
  405a8b:	outs   dx,DWORD PTR ds:[esi]
  405a8c:	add    eax,eax
  405a8e:	pop    es
  405a8f:	rcr    DWORD PTR [ecx+edx*1+0x6bb84c31],cl
  405a96:	inc    esi
  405a97:	into   
  405a98:	jp     0x405a8e
  405a9a:	inc    esi
  405a9b:	xor    edx,ecx
  405a9d:	sbb    dl,al
  405a9f:	mov    WORD PTR [edi+0x1f3f059b],es
  405aa5:	ins    BYTE PTR es:[edi],dx
  405aa6:	mov    edx,0xf20ef544
  405aab:	ror    BYTE PTR [ecx-0x34ed857],0xf9
  405ab2:	aam    0xf3
  405ab4:	out    0xb9,eax
  405ab6:	in     al,dx
  405ab7:	or     BYTE PTR [edx+0x39],ah
  405aba:	ja     0x405ab6
  405abc:	aaa    
  405abd:	test   DWORD PTR [esi],edx
  405abf:	sub    al,0x61
  405ac1:	pushf  
  405ac2:	aas    
  405ac3:	icebp  
  405ac4:	dec    edx
  405ac5:	repz xor bl,BYTE PTR [ebx+0x429703e3]
  405acc:	dec    eax
  405acd:	imul   BYTE PTR [ebp+0x6ee7963c]
  405ad3:	out    dx,eax
  405ad4:	fist   DWORD PTR [ecx-0xa]
  405ad7:	add    eax,0xa8f6c422
  405adc:	jo     0x405ae6
  405ade:	push   edi
  405adf:	nop
  405ae0:	push   ecx
  405ae1:	imul   ebx,DWORD PTR [eax+0x4725ea7e],0x63
  405ae8:	test   dl,dh
  405aea:	sbb    al,0xb6
  405aec:	lock in al,0x3
  405aef:	fbld   TBYTE PTR [ebx+ecx*4]
  405af2:	pop    es
  405af3:	mov    WORD PTR es:0x12ff08d4,?
  405afa:	xchg   ebp,eax
  405afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405afc:	xor    al,0x4e
  405afe:	mov    dl,0xed
  405b00:	jae    0x405b18
  405b02:	and    al,0x7a
  405b04:	ins    DWORD PTR es:[edi],dx
  405b05:	mov    al,dl
  405b07:	mov    ch,0xfb
  405b09:	jne    0x405b80
  405b0b:	adc    ch,BYTE PTR [edx]
  405b0d:	and    bh,BYTE PTR ds:0x4b871180
  405b13:	mov    edi,0x90e80e62
  405b18:	shl    BYTE PTR [esi+0xcb2e149],cl
  405b1e:	or     al,0xc5
  405b20:	into   
  405b21:	dec    esp
  405b22:	and    DWORD PTR [edx-0x5f],edx
  405b25:	xchg   edi,eax
  405b26:	sar    dh,0xe4
  405b29:	out    dx,eax
  405b2a:	sbb    esp,DWORD PTR [edi+ebp*1-0x2909baa0]
  405b31:	mov    ds:0x3659abfd,eax
  405b36:	push   0xd64095e8
  405b3b:	sbb    cl,bl
  405b3d:	popf   
  405b3e:	and    al,0xe7
  405b40:	mov    edx,0xec876b97
  405b45:	pop    es
  405b46:	add    al,0x17
  405b48:	cli    
  405b49:	stc    
  405b4a:	adc    dh,dl
  405b4c:	stos   BYTE PTR es:[edi],al
  405b4d:	push   esp
  405b4e:	cmp    BYTE PTR [esi],ch
  405b50:	inc    ecx
  405b51:	scas   eax,DWORD PTR es:[edi]
  405b52:	mov    edi,0x61530877
  405b57:	call   0xde18ab0a
  405b5c:	int3   
  405b5d:	add    al,0x3b
  405b5f:	sbb    eax,0x5e73d2ab
  405b64:	lea    esi,[eax+0x36dafd0e]
  405b6a:	pop    eax
  405b6b:	test   eax,0x8ecf3820
  405b70:	daa    
  405b71:	jb     0x405b93
  405b73:	and    eax,DWORD PTR [ebp+0x74]
  405b76:	push   ds
  405b77:	jb     0x405b07
  405b79:	out    0x18,al
  405b7b:	dec    edx
  405b7c:	in     al,0x3c
  405b7e:	or     BYTE PTR [ebp+ecx*8-0x4272e89b],bl
  405b85:	iret   
  405b86:	or     ecx,DWORD PTR [ebx-0x5fe6cf2f]
  405b8c:	outs   dx,BYTE PTR ds:[esi]
  405b8d:	pop    esp
  405b8e:	adc    ecx,0xffffffd4
  405b91:	loopne 0x405bb2
  405b93:	dec    eax
  405b94:	mov    dl,0xca
  405b96:	repnz sbb DWORD PTR [eax-0x51e1d29a],eax
  405b9d:	mov    al,ds:0x44df5d65
  405ba2:	mov    bl,0x32
  405ba4:	sbb    al,0x6b
  405ba6:	rcl    dl,0x7
  405ba9:	xor    BYTE PTR [edx-0x2],ah
  405bac:	rcl    DWORD PTR [esi+0x40],1
  405baf:	push   edi
  405bb0:	push   ebp
  405bb1:	outs   dx,BYTE PTR ds:[esi]
  405bb2:	(bad)  
  405bb3:	(bad)  
  405bb4:	mov    esi,0xda9157a1
  405bb9:	aas    
  405bba:	xor    ebx,edi
  405bbc:	arpl   WORD PTR [eax+ecx*8],cx
  405bbf:	pop    esp
  405bc0:	retf   
  405bc1:	aad    0x31
  405bc3:	sbb    ecx,ecx
  405bc5:	cmp    BYTE PTR [ebp-0x8],ah
  405bc8:	repnz xor BYTE PTR ds:0x817975a4,cl
  405bcf:	dec    edi
  405bd0:	pop    esp
  405bd1:	mov    DWORD PTR [edx+edi*4-0xf],edi
  405bd5:	mov    ebp,0xbd4f9104
  405bda:	int3   
  405bdb:	sbb    esp,DWORD PTR [ebx+0x329f0d5a]
  405be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405be2:	das    
  405be3:	shl    BYTE PTR [edx+0x16dfc68f],0x7b
  405bea:	loop   0x405c42
  405bec:	or     DWORD PTR ss:[eax-0xb],0xffffffa1
  405bf1:	stc    
  405bf2:	push   ecx
  405bf3:	xchg   esp,eax
  405bf4:	ss lock (bad) 
  405bf7:	mov    edx,0x85732801
  405bfc:	ds stos BYTE PTR es:[edi],al
  405bfe:	add    BYTE PTR [esi],al
  405c00:	outs   dx,DWORD PTR ds:[esi]
  405c01:	dec    eax
  405c02:	cs jb  0x405bd2
  405c05:	xor    DWORD PTR [eax+0x7a],esi
  405c08:	xchg   edi,eax
  405c09:	sub    al,0x79
  405c0b:	dec    edi
  405c0c:	out    0xc6,eax
  405c0e:	addr16 add al,0x30
  405c11:	mov    ds:0x6256732a,eax
  405c16:	add    eax,0xca1a49c1
  405c1b:	or     al,0x66
  405c1d:	nop
  405c1e:	mov    dl,0xd6
  405c20:	(bad)  
  405c21:	jmp    0x7686:0x6e9a7fa1
  405c28:	mov    es,edx
  405c2a:	inc    ecx
  405c2b:	repz mov bh,0x46
  405c2e:	push   ebp
  405c2f:	scas   eax,DWORD PTR es:[edi]
  405c30:	xor    eax,0x416db746
  405c35:	jl     0x405c58
  405c37:	daa    
  405c38:	and    esi,esp
  405c3a:	scas   al,BYTE PTR es:[edi]
  405c3b:	fidivr DWORD PTR [edx]
  405c3d:	xor    eax,0x271fb744
  405c42:	xchg   BYTE PTR [esi+0x3b],bl
  405c45:	stos   DWORD PTR es:[edi],eax
  405c46:	cs mov esi,0x5e9abf99
  405c4c:	mov    al,0xd9
  405c4e:	jae    0x405c5b
  405c50:	cld    
  405c51:	fdiv   st(6),st
  405c53:	call   0x7cfa827b
  405c58:	repz sub ch,BYTE PTR [ebx-0x28a26d2b]
  405c5f:	popa   
  405c60:	setnp  BYTE PTR [ebx+esi*1]
  405c64:	enter  0xd4b9,0x8
  405c68:	push   ecx
  405c69:	cmc    
  405c6a:	pop    edx
  405c6b:	pushf  
  405c6c:	es sahf 
  405c6e:	jmp    0x405ca3
  405c70:	mov    BYTE PTR [edx],dh
  405c72:	pop    ebp
  405c73:	adc    BYTE PTR [ebp+0x5ca46393],bl
  405c79:	repnz cmp BYTE PTR [esi-0x4c],cl
  405c7d:	test   DWORD PTR [esi+esi*2],ecx
  405c80:	adc    al,0x6e
  405c82:	(bad)  
  405c83:	jecxz  0x405c7f
  405c85:	lods   eax,DWORD PTR ds:[esi]
  405c86:	sbb    DWORD PTR [eax],0xffffffb8
  405c89:	cmp    edi,ebx
  405c8b:	pop    eax
  405c8c:	in     al,dx
  405c8d:	std    
  405c8e:	push   es
  405c8f:	or     eax,0x2b0bb3a2
  405c94:	fsub   DWORD PTR [ebp-0x78b2f944]
  405c9a:	jne    0x405c85
  405c9c:	or     ebx,ebx
  405c9e:	es push ss
  405ca0:	dec    edx
  405ca1:	mov    al,0x81
  405ca3:	std    
  405ca4:	dec    ebx
  405ca5:	xchg   ecx,eax
  405ca6:	xchg   ebp,eax
  405ca7:	push   ds
  405ca8:	mov    eax,ecx
  405caa:	push   esi
  405cab:	mov    esp,0x6ff8f6ff
  405cb0:	dec    ebx
  405cb1:	enter  0x3345,0x7e
  405cb5:	mov    WORD PTR [eax+0x76a8418f],ss
  405cbb:	std    
  405cbc:	gs inc ecx
  405cbe:	lahf   
  405cbf:	sti    
  405cc0:	jp     0x405c7d
  405cc2:	inc    edx
  405cc3:	pop    ebp
  405cc4:	loop   0x405d31
  405cc6:	lea    edx,[esp+ecx*4-0x49]
  405cca:	test   cl,ch
  405ccc:	mov    ebp,0x283bc78e
  405cd1:	outs   dx,DWORD PTR ds:[esi]
  405cd2:	out    0x33,eax
  405cd4:	sub    dh,BYTE PTR [edi-0xb]
  405cd7:	cmp    edx,DWORD PTR [ecx+ecx*8]
  405cda:	in     eax,0xa6
  405cdc:	and    al,0xf8
  405cde:	or     eax,DWORD PTR [edi+0x44]
  405ce1:	in     eax,dx
  405ce2:	pushw  0x6f83
  405ce6:	mov    al,0x48
  405ce8:	push   ds
  405ce9:	(bad)  
  405cea:	inc    edx
  405ceb:	jle    0x405cb6
  405ced:	loope  0x405d18
  405cef:	mov    edx,0xd54f5b8d
  405cf4:	nop
  405cf5:	mov    al,ds:0xeeb926b9
  405cfa:	xor    eax,0xabfbb15a
  405cff:	push   esi
  405d00:	adc    al,0xd1
  405d02:	adc    dh,ch
  405d04:	int    0xf1
  405d06:	xchg   DWORD PTR [ebx-0x63],ecx
  405d09:	test   eax,0x140097f8
  405d0e:	mov    ds:0x991de9c3,al
  405d13:	pushf  
  405d14:	es inc ecx
  405d16:	stc    
  405d17:	dec    BYTE PTR [bp+di]
  405d1a:	cwde   
  405d1b:	adc    bl,BYTE PTR [edi]
  405d1d:	icebp  
  405d1e:	test   eax,edx
  405d20:	mov    WORD PTR [esi],cs
  405d22:	icebp  
  405d23:	sbb    ebx,DWORD PTR ds:0x471ad4b
  405d29:	pop    ebx
  405d2a:	jnp    0x405cbe
  405d2c:	lds    esi,FWORD PTR [eax+0x7]
  405d2f:	stc    
  405d30:	stc    
  405d31:	lds    ebp,FWORD PTR [edx-0x1e7f5d6e]
  405d37:	jecxz  0x405cf6
  405d39:	shl    DWORD PTR [esi-0x71],1
  405d3c:	mov    al,0x16
  405d3e:	(bad)  
  405d3f:	leave  
  405d40:	push   0xffffffe8
  405d42:	mov    ch,BYTE PTR [ebx+0x3d]
  405d45:	fwait
  405d46:	xor    al,0x37
  405d48:	jmp    0x405d13
  405d4a:	adc    dl,BYTE PTR [edi+0xb24ffc2]
  405d50:	sbb    eax,0xc6d53a88
  405d55:	xchg   ebp,eax
  405d56:	imul   esp,DWORD PTR [edi],0xe75a0819
  405d5c:	popa   
  405d5d:	push   0xffffff82
  405d5f:	cmp    DWORD PTR [esi+ebx*8-0x50c038bd],ebx
  405d66:	cmp    edx,DWORD PTR [ebx]
  405d68:	test   DWORD PTR [edx],ebx
  405d6a:	mov    ecx,0x5d66ebe8
  405d6f:	inc    ebp
  405d70:	fdiv   QWORD PTR [ebx+0x4e]
  405d73:	loop   0x405d8c
  405d75:	jbe    0x405d36
  405d77:	pop    es
  405d78:	test   DWORD PTR [ebx+edx*1],0xcbbc971c
  405d7f:	out    dx,eax
  405d80:	cmp    eax,0x7097d695
  405d85:	leave  
  405d86:	in     eax,0x2
  405d88:	mov    ds:0xd2422e87,al
  405d8d:	cmp    eax,0x36dc3c8
  405d92:	out    0xdf,eax
  405d94:	pop    ecx
  405d95:	cmp    DWORD PTR [eax],ecx
  405d97:	push   ebx
  405d98:	scas   al,BYTE PTR es:[edi]
  405d99:	add    al,0x7a
  405d9b:	cwde   
  405d9c:	or     BYTE PTR [edi+ebp*8-0x70e798e],0xe9
  405da4:	imul   ecx,ebx,0x52
  405da7:	mov    esi,0x18685f4f
  405dac:	aas    
  405dad:	lds    ebx,FWORD PTR [ebp+0x474a6c79]
  405db3:	dec    ebx
  405db4:	cs dec edx
  405db6:	pop    edx
  405db7:	pop    es
  405db8:	retf   0x2023
  405dbb:	retf   
  405dbc:	sub    BYTE PTR [edx+0x4e664f29],0xa0
  405dc3:	retf   0xd699
  405dc6:	and    dh,BYTE PTR [ecx]
  405dc8:	inc    ebx
  405dc9:	or     ecx,DWORD PTR [edx+0x1e]
  405dcc:	mov    edi,0x7d80b619
  405dd1:	mov    ds:0x94d00a2,al
  405dd6:	icebp  
  405dd7:	xor    dh,BYTE PTR [eax]
  405dd9:	mov    cl,ch
  405ddb:	adc    al,0x19
  405ddd:	jae    0x405e46
  405ddf:	jmp    0x405d65
  405de1:	push   cs
  405de2:	adc    eax,DWORD PTR [ecx+edx*4]
  405de5:	retf   
  405de6:	pop    edi
  405de7:	and    eax,0xcd4ddf1a
  405dec:	add    ah,BYTE PTR [esi-0x2145a9f9]
  405df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405df3:	jle    0x405dec
  405df5:	fidiv  WORD PTR gs:[edi*2+0x75ba0208]
  405dfd:	dec    edi
  405dfe:	scas   al,BYTE PTR es:[edi]
  405dff:	mov    dl,0xb4
  405e01:	mov    ebp,0x161cdea9
  405e06:	sbb    al,0x5b
  405e08:	inc    ebp
  405e09:	xchg   edi,eax
  405e0a:	pop    esi
  405e0b:	inc    ebp
  405e0c:	hlt    
  405e0d:	adc    DWORD PTR [ebp+0x6],esi
  405e10:	(bad)
  405e13:	call   0x531a:0xebba298a
  405e1a:	jge    0x405e39
  405e1c:	dec    ebx
  405e1d:	cdq    
  405e1e:	repnz mov bl,0xab
  405e21:	cmp    WORD PTR [edi-0x54],0x4c
  405e26:	ds lahf 
  405e28:	fsub   DWORD PTR [edi-0xd41e35a]
  405e2e:	pushf  
  405e2f:	stos   DWORD PTR es:[edi],eax
  405e30:	in     al,dx
  405e31:	jmp    0xaea2:0x341a23f4
  405e38:	enter  0x53e1,0x4f
  405e3c:	jb     0x405ead
  405e3e:	stos   DWORD PTR es:[edi],eax
  405e3f:	xlat   BYTE PTR ds:[ebx]
  405e40:	nop
  405e41:	mov    al,ds:0x29622a79
  405e46:	cmp    DWORD PTR [esi-0x8882bc9],ebx
  405e4c:	inc    eax
  405e4d:	pop    edi
  405e4e:	int    0xa3
  405e50:	fsub   st(1),st
  405e52:	xchg   esi,eax
  405e53:	outs   dx,DWORD PTR ds:[esi]
  405e54:	in     al,0xbf
  405e56:	repnz xor DWORD PTR [esi-0x2f],esp
  405e5a:	lock push ds
  405e5c:	jae    0x405e24
  405e5e:	cmp    BYTE PTR [edi],al
  405e60:	lods   al,BYTE PTR ds:[esi]
  405e61:	test   DWORD PTR [ecx],edi
  405e63:	gs jnp 0x405df3
  405e66:	dec    edi
  405e67:	adc    DWORD PTR [edi+0x79],eax
  405e6a:	int    0x33
  405e6c:	dec    ebp
  405e6d:	aam    0x7b
  405e6f:	jnp    0x405e1c
  405e71:	stos   BYTE PTR es:[edi],al
  405e72:	aas    
  405e73:	mov    DWORD PTR [eax+0x4570f758],eax
  405e79:	dec    esi
  405e7a:	test   DWORD PTR [eax],eax
  405e7c:	inc    esi
  405e7d:	mov    edi,0xa17b937e
  405e82:	jg     0x405ed1
  405e84:	call   0x4e0d:0xcb3a99f
  405e8b:	mov    eax,0x716ce655
  405e90:	dec    BYTE PTR [edx]
  405e92:	xchg   esp,eax
  405e93:	dec    edi
  405e94:	xchg   edi,eax
  405e95:	mov    ecx,0xcaab387b
  405e9a:	sub    eax,0x8052435b
  405e9f:	or     DWORD PTR [esi-0x72f0727e],0x44b6bc0c
  405ea9:	mov    esp,0x9b74443e
  405eae:	and    DWORD PTR [edi-0x3687c509],edi
  405eb4:	call   esi
  405eb6:	fidivr DWORD PTR [edi]
  405eb8:	frstor [ebx-0x48]
  405ebb:	or     al,0xf9
  405ebd:	cmp    al,0x8a
  405ebf:	ror    BYTE PTR [ebp+eiz*2+0x136c5a02],1
  405ec6:	shl    ebx,cl
  405ec8:	and    eax,0x974fc34e
  405ecd:	sub    BYTE PTR [eax-0x1cdb3a50],dh
  405ed3:	pop    es
  405ed4:	pop    ecx
  405ed5:	jns    0x405eda
  405ed7:	std    
  405ed8:	adc    BYTE PTR [ebp+0xcf5093a],dl
  405ede:	push   0x71c23ec2
  405ee3:	out    dx,al
  405ee4:	into   
  405ee5:	stc    
  405ee6:	dec    ebp
  405ee7:	xor    edx,DWORD PTR [edx+0x7a23beb5]
  405eed:	add    DWORD PTR [ebp+0x57],esp
  405ef0:	cmp    bl,ch
  405ef2:	pusha  
  405ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ef4:	adc    di,WORD PTR [ebp+ebx*1-0x6d0aede7]
  405efc:	xchg   edi,eax
  405efd:	mov    edx,0xa94485ec
  405f02:	leave  
  405f03:	retw   
  405f05:	into   
  405f06:	outs   dx,DWORD PTR ds:[esi]
  405f07:	arpl   WORD PTR [ecx+0x4d],ax
  405f0a:	mov    ebp,0x31d0abcc
  405f0f:	sbb    bl,cl
  405f11:	(bad)  
  405f12:	xor    BYTE PTR [edi+0x21],ch
  405f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f16:	jmp    0xdb2b5e93
  405f1b:	xchg   ebx,eax
  405f1c:	in     al,dx
  405f1d:	pop    ds
  405f1e:	mov    ecx,esp
  405f20:	fld    st(0)
  405f22:	cmp    esp,DWORD PTR [edx-0x8]
  405f25:	jmp    0x405f69
  405f27:	aas    
  405f28:	dec    eax
  405f29:	sub    al,0x27
  405f2b:	ret    
  405f2c:	imul   DWORD PTR [edi-0x21]
  405f2f:	adc    BYTE PTR [eax-0x6],dh
  405f32:	sub    ebp,DWORD PTR [ecx+0x35]
  405f35:	xchg   esi,eax
  405f36:	mov    DWORD PTR [ebx+0x73e2a324],edx
  405f3c:	sbb    dh,BYTE PTR [edi-0x4a]
  405f3f:	imul   ecx,DWORD PTR [esi-0x1c1659ac],0xffffff80
  405f46:	call   0x4727:0x27615e22
  405f4d:	out    dx,al
  405f4e:	lods   eax,DWORD PTR ds:[esi]
  405f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f50:	and    ch,BYTE PTR [ebp+0x5d]
  405f53:	add    al,0x92
  405f55:	arpl   WORD PTR [edi+0x246ce9fe],cx
  405f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f5c:	push   es
  405f5d:	push   cs
  405f5e:	add    BYTE PTR [esi],ah
  405f60:	bound  edi,QWORD PTR [ecx]
  405f62:	into   
  405f63:	gs push eax
  405f65:	cmc    
  405f66:	jnp    0x405f98
  405f68:	pop    ebp
  405f69:	mov    ebx,0x98ccec09
  405f6e:	or     al,0xa5
  405f70:	ins    DWORD PTR es:[edi],dx
  405f71:	mov    esi,DWORD PTR ds:0xb6027a73
  405f77:	rcl    DWORD PTR [eax],1
  405f79:	dec    esi
  405f7a:	ins    DWORD PTR es:[edi],dx
  405f7b:	mov    cs,WORD PTR es:[ebp-0x3cea2a46]
  405f82:	jae    0x405f7d
  405f84:	inc    ebp
  405f85:	inc    ebx
  405f86:	and    eax,0x7467042a
  405f8b:	mov    ebp,0xf4e8595b
  405f90:	cmp    DWORD PTR [eax+esi*4],0x0
  405f94:	loope  0x405f6e
  405f96:	xor    dl,BYTE PTR [ebp+ebp*4+0x78648ddb]
  405f9d:	push   ss
  405f9e:	jne    0x405f29
  405fa0:	in     al,dx
  405fa1:	je     0x405fb6
  405fa3:	jnp    0x405f5c
  405fa5:	nop
  405fa6:	outs   dx,DWORD PTR ds:[esi]
  405fa7:	outs   dx,BYTE PTR ds:[esi]
  405fa8:	cli    
  405fa9:	ja     0x405f6a
  405fab:	fldcw  WORD PTR [eax+0xe35d29f]
  405fb1:	cs ds stc 
  405fb4:	sub    esi,DWORD PTR [eax-0x4d]
  405fb7:	pop    ecx
  405fb8:	pusha  
  405fb9:	call   0xd89650fe
  405fbe:	and    eax,0x5d661d6e
  405fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fc4:	pop    ss
  405fc5:	inc    esi
  405fc6:	out    0x6a,al
  405fc8:	out    dx,al
  405fc9:	lahf   
  405fca:	add    eax,DWORD PTR [eax-0x44bd582a]
  405fd0:	sbb    edi,DWORD PTR [edi+0x794b8782]
  405fd6:	xchg   edi,eax
  405fd7:	xor    al,0x2b
  405fd9:	add    dl,BYTE PTR [eax]
  405fdb:	xor    al,0x3f
  405fdd:	(bad)  
  405fde:	aad    0x11
  405fe0:	xor    eax,0x22aded4
  405fe5:	daa    
  405fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fe7:	stos   BYTE PTR es:[edi],al
  405fe8:	rol    DWORD PTR [edi],0xe4
  405feb:	sub    bh,BYTE PTR [ebp+0x51]
  405fee:	dec    di
  405ff0:	repz and BYTE PTR [esi+0x102fddc1],bl
  405ff7:	ret    0xf6c
  405ffa:	push   esp
  405ffb:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  405ffd:	outs   dx,DWORD PTR ds:[esi]
  405ffe:	mov    dh,0xd5
  406000:	ficom  WORD PTR ds:0x70e07ae0
  406006:	cmp    al,0x59
  406008:	nop
  406009:	ds xchg ecx,eax
  40600b:	pop    edx
  40600c:	inc    esp
  40600d:	or     BYTE PTR [ecx-0x68],ah
  406010:	inc    eax
  406011:	retf   
  406012:	(bad)  [ebp-0x78]
  406015:	(bad)  
  406016:	and    BYTE PTR [esi],al
  406018:	pop    ebp
  406019:	int3   
  40601a:	repz repnz and BYTE PTR [ebx-0x14],bh
  40601f:	sbb    esi,esi
  406021:	or     DWORD PTR [ebp-0x3c],0xaf57e1ed
  406028:	test   DWORD PTR ds:[esi-0x10b2bb87],edi
  40602f:	aas    
  406030:	fucomp st(0)
  406032:	fdivp  st(5),st
  406034:	out    dx,al
  406035:	hlt    
  406036:	hlt    
  406037:	fidivr DWORD PTR ds:0xa3912388
  40603d:	adc    DWORD PTR [ecx-0x19],ebp
  406040:	dec    ebp
  406041:	sbb    al,0x72
  406043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406044:	mov    ch,0x55
  406046:	xor    esp,0xd979ef58
  40604c:	vpmacsswd ymm10,ymm2,YMMWORD PTR [esi],ymm4
  406052:	test   eax,0xba61de79
  406057:	cmp    eax,0xdd4fbddc
  40605c:	lods   eax,DWORD PTR ds:[esi]
  40605d:	arpl   WORD PTR [eax+0x12096e17],ax
  406063:	push   cs
  406064:	repz lock cmp al,0xea
  406068:	add    edi,DWORD PTR [edi-0x5dca1ba0]
  40606e:	outs   dx,BYTE PTR ds:[esi]
  40606f:	add    dl,BYTE PTR [ebx-0x18]
  406072:	(bad)  
  406073:	xchg   esi,eax
  406074:	mov    ch,0xb4
  406076:	xchg   edx,eax
  406077:	rcl    DWORD PTR [ebx-0x2a],cl
  40607a:	sub    esi,DWORD PTR [ecx+edx*8]
  40607d:	mov    ds:0x10ae4b9e,eax
  406082:	fsubr  DWORD PTR [eax]
  406084:	inc    esi
  406085:	sbb    DWORD PTR [ecx],0x44
  406088:	jnp    0x40602a
  40608a:	into   
  40608b:	mov    ebp,0x25b0c0f
  406090:	ss xchg ah,bl
  406093:	hlt    
  406094:	pop    edi
  406095:	and    BYTE PTR [ebp+0xa330656],dl
  40609b:	and    eax,0xbf697932
  4060a0:	mov    ch,0x95
  4060a2:	jns    0x4060ed
  4060a4:	sbb    eax,0x50cc5a1b
  4060a9:	into   
  4060aa:	and    bh,BYTE PTR [ecx+0x4b]
  4060ad:	sbb    ch,BYTE PTR [ecx]
  4060af:	(bad)  
  4060b0:	or     BYTE PTR [ecx],bl
  4060b2:	stos   BYTE PTR es:[edi],al
  4060b3:	push   0x26
  4060b5:	ficom  DWORD PTR [edi]
  4060b7:	mov    esp,cs
  4060b9:	or     eax,0x3b9354e0
  4060be:	pop    es
  4060bf:	stc    
  4060c0:	xchg   edx,eax
  4060c1:	jmp    0xaea4ccf8
  4060c6:	push   edi
  4060c7:	imul   ebp,ecx,0xbf571ee5
  4060cd:	pop    edx
  4060ce:	sar    ch,cl
  4060d0:	jb     0x40609e
  4060d2:	aam    0xa1
  4060d4:	mov    ch,0x68
  4060d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d7:	xchg   ecx,eax
  4060d8:	sbb    edx,ebp
  4060da:	addr16 bswap ecx
  4060dd:	mov    dl,0xb9
  4060df:	mov    ebp,DWORD PTR [ecx+ebx*2+0x70]
  4060e3:	mov    ch,0x5e
  4060e5:	adc    edi,esi
  4060e7:	cmp    dh,BYTE PTR [edx-0x7a]
  4060ea:	lock cmp eax,0x4ec26ed8
  4060f0:	ds jmp 0xac60493b
  4060f6:	sbb    eax,0xc98ccb13
  4060fb:	call   0xee8e:0x47bc9996
  406102:	call   0x3b38132c
  406107:	mov    gs,WORD PTR [ebx]
  406109:	xchg   ebp,eax
  40610a:	fsubr  QWORD PTR [eax-0x6f9c5cd2]
  406110:	popf   
  406111:	push   esp
  406112:	cli    
  406113:	fwait
  406114:	xchg   ebp,eax
  406115:	mov    ds:0x38cf4228,al
  40611a:	addr16 mov eax,0xb8a03191
  406120:	mov    edi,0x25812393
  406125:	add    esp,DWORD PTR [ecx]
  406127:	or     edx,DWORD PTR [esi-0x5a]
  40612a:	test   DWORD PTR [edx],esi
  40612c:	mov    ah,0xb5
  40612e:	mov    edi,0x67e0564
  406133:	not    BYTE PTR ds:[eax+0x433c6943]
  40613a:	enter  0x1cc1,0xf4
  40613e:	mov    WORD PTR [ebp+0xf],cs
  406141:	out    0x15,eax
  406143:	idiv   BYTE PTR [ecx-0x502dae20]
  406149:	popa   
  40614a:	stos   DWORD PTR es:[edi],eax
  40614b:	ret    0x4101
  40614e:	sub    al,0x76
  406150:	sbb    BYTE PTR [esi+0x13],ch
  406153:	mov    ah,0xe3
  406155:	(bad)  
  406156:	hlt    
  406157:	aaa    
  406158:	clc    
  406159:	mov    ch,0x9a
  40615b:	repz dec edx
  40615d:	out    0x5e,eax
  40615f:	xlat   BYTE PTR ds:[ebx]
  406160:	pop    ebx
  406161:	cs jg  0x406177
  406164:	dec    edx
  406165:	push   ds
  406166:	ins    DWORD PTR es:[edi],dx
  406167:	jnp    0x406108
  406169:	xor    DWORD PTR [edi-0x54],esi
  40616c:	pop    edi
  40616d:	and    eax,0x4ec1af7
  406172:	aas    
  406173:	push   ds
  406174:	cmp    BYTE PTR [ebp*2-0x21c8cc16],al
  40617b:	js     0x4061ea
  40617d:	cmp    esi,DWORD PTR [ebx-0x66]
  406180:	clc    
  406181:	lahf   
  406182:	or     DWORD PTR [ebp-0x2a6bb412],0x35af059b
  40618c:	mov    al,cl
  40618e:	cdq    
  40618f:	sub    dh,BYTE PTR [ebp*2+0xa7850c8]
  406196:	inc    edx
  406197:	les    ecx,FWORD PTR [ebp-0xde72595]
  40619d:	aaa    
  40619e:	repz mov cl,0x8a
  4061a1:	repnz mov ds:0x42729df4,eax
  4061a7:	inc    ebx
  4061a8:	loopne 0x406222
  4061aa:	sbb    cl,BYTE PTR [edi-0x5b]
  4061ad:	test   DWORD PTR [esi-0x22],0x4d62042
  4061b4:	push   esi
  4061b5:	and    edi,eax
  4061b7:	sbb    BYTE PTR [esi-0x1b],0xd
  4061bb:	jg     0x4061e1
  4061bd:	popa   
  4061be:	xor    BYTE PTR ds:0xfefa5f3e,dl
  4061c4:	xchg   BYTE PTR [esp+esi*2+0x31],dh
  4061c8:	push   es
  4061c9:	xchg   ecx,eax
  4061ca:	out    0xad,al
  4061cc:	push   ebp
  4061cd:	pop    edi
  4061ce:	push   0xffffff8c
  4061d0:	jns    0x4061a8
  4061d2:	or     eax,DWORD PTR es:[ebp-0x1b635eb2]
  4061d9:	sub    BYTE PTR [ebx+esi*4-0x6e],cl
  4061dd:	inc    esp
  4061de:	dec    edx
  4061df:	retf   
  4061e0:	push   0x3795a9fe
  4061e5:	out    0x6b,al
  4061e7:	mov    ecx,0xb94520b3
  4061ec:	push   ebx
  4061ed:	jns    0x4061f2
  4061ef:	shl    BYTE PTR [eax+0x13],1
  4061f2:	cdq    
  4061f3:	pop    eax
  4061f4:	repnz xchg edx,eax
  4061f6:	push   0x76
  4061f8:	mov    ds:0xbee9d827,al
  4061fd:	scas   al,BYTE PTR es:[edi]
  4061fe:	mov    bh,0x2d
  406200:	int    0x46
  406202:	fs adc edx,ecx
  406205:	inc    esi
  406206:	pop    edi
  406207:	popa   
  406208:	outs   dx,BYTE PTR ds:[esi]
  406209:	push   edx
  40620a:	(bad)  
  40620b:	scas   eax,DWORD PTR es:[edi]
  40620c:	add    cl,BYTE PTR [bx+di]
  40620f:	(bad)  
  406210:	(bad)  
  406211:	pusha  
  406212:	or     BYTE PTR [edi-0x4de3d62d],al
  406218:	xchg   BYTE PTR [ecx+0x7ea3d2a6],ah
  40621e:	stos   DWORD PTR es:[edi],eax
  40621f:	pop    ds
  406220:	sub    eax,0xa201ffa3
  406225:	call   FWORD PTR [edx+0x72da269a]
  40622b:	ficom  WORD PTR [edi]
  40622d:	outs   dx,BYTE PTR ds:[esi]
  40622e:	mov    ebx,esi
  406230:	add    DWORD PTR [eax],ebp
  406232:	inc    esp
  406233:	jae    0x4062ae
  406235:	add    eax,0x6aaf8c77
  40623a:	and    BYTE PTR [edx-0xe],0x38
  40623e:	xchg   esi,eax
  40623f:	in     eax,dx
  406240:	pop    ebx
  406241:	mov    edx,0x76ce39eb
  406246:	aas    
  406247:	es jns 0x406283
  40624a:	mov    edx,0x76bc0838
  40624f:	cmp    BYTE PTR [edi-0x495ae74b],dh
  406255:	and    BYTE PTR [ecx+0xd10d3ab],cl
  40625b:	test   DWORD PTR [esi+0x2],ebp
  40625e:	mov    ecx,DWORD PTR [ecx]
  406260:	nop
  406261:	(bad)  
  406262:	and    bh,BYTE PTR [ecx+0x7b9404fd]
  406268:	pusha  
  406269:	add    eax,DWORD PTR [ebx+0x24]
  40626c:	inc    BYTE PTR [ebx]
  40626e:	popa   
  40626f:	xor    BYTE PTR [ebx-0x3c],dl
  406272:	or     esp,esp
  406274:	mov    al,0x2e
  406276:	mov    al,BYTE PTR [edx]
  406278:	jge    0x406209
  40627a:	psadbw mm0,QWORD PTR [eax*4+0x73d5cdcb]
  406282:	clc    
  406283:	(bad)  
  406284:	lock in al,dx
  406286:	inc    eax
  406287:	aas    
  406288:	shl    DWORD PTR [edx-0x1b],cl
  40628b:	mov    ds:0xc5e4bed7,al
  406290:	dec    DWORD PTR [edi-0xf0b95d4]
  406296:	or     edi,DWORD PTR [ebp+0x4f]
  406299:	inc    eax
  40629a:	xchg   edi,eax
  40629b:	cdq    
  40629c:	push   edx
  40629d:	add    DWORD PTR [ecx-0x66],0x3f8ef210
  4062a4:	push   es
  4062a5:	(bad)  
  4062a6:	cmp    bl,dl
  4062a8:	sub    eax,0x2c3d5555
  4062ad:	outs   dx,DWORD PTR ds:[esi]
  4062ae:	xlat   BYTE PTR ds:[ebx]
  4062af:	imul   edi,DWORD PTR [eax],0x5d4014b
  4062b5:	push   esi
  4062b6:	inc    ecx
  4062b7:	xchg   DWORD PTR [ebp-0x7f],ecx
  4062ba:	lods   al,BYTE PTR ds:[esi]
  4062bb:	sti    
  4062bc:	inc    eax
  4062bd:	dec    esp
  4062be:	cli    
  4062bf:	xor    BYTE PTR [esi+eax*2-0x8b8364b],bl
  4062c6:	aam    0xf7
  4062c8:	push   ebx
  4062c9:	add    BYTE PTR [edx],dh
  4062cb:	jmp    FWORD PTR [ebp+0x2e]
  4062ce:	sub    esi,DWORD PTR [esi]
  4062d0:	or     ebx,DWORD PTR [edx-0xf]
  4062d3:	push   esp
  4062d4:	inc    edi
  4062d5:	xchg   edi,eax
  4062d6:	pushf  
  4062d7:	call   0x9332:0x8aea2f43
  4062de:	inc    esp
  4062df:	loopne 0x4062c1
  4062e1:	and    edi,ebp
  4062e3:	pop    ebp
  4062e4:	ror    ebp,0x1d
  4062e7:	hlt    
  4062e8:	out    0xa0,al
  4062ea:	ja     0x40635f
  4062ec:	enter  0xc656,0x82
  4062f0:	lods   eax,DWORD PTR ds:[esi]
  4062f1:	sbb    DWORD PTR [esi+0x50],ebp
  4062f4:	retf   0x2331
  4062f7:	dec    ecx
  4062f8:	push   ss
  4062f9:	jmp    0x33c5b1c8
  4062fe:	mov    esp,0xda0c2311
  406303:	inc    edi
  406304:	xchg   edi,eax
  406305:	scas   al,BYTE PTR es:[edi]
  406306:	and    dl,BYTE PTR [eax-0x5dd75ec9]
  40630c:	in     eax,dx
  40630d:	pop    esp
  40630e:	cmp    edx,DWORD PTR [edi]
  406310:	xchg   ebx,eax
  406311:	iret   
  406312:	and    al,0x29
  406314:	mov    esi,0x6b18fca3
  406319:	imul   esp,DWORD PTR [edx],0xffffff9f
  40631c:	mov    DWORD PTR [eax-0x7e],esp
  40631f:	je     0x406301
  406321:	push   cs
  406322:	mov    eax,0xc697be7c
  406327:	(bad)  
  406328:	into   
  406329:	xlat   BYTE PTR ds:[ebx]
  40632a:	xor    al,0xd3
  40632c:	add    dh,ah
  40632e:	mov    bh,0x2e
  406330:	jo     0x4062bd
  406332:	scas   eax,DWORD PTR es:[edi]
  406333:	pop    esi
  406334:	adc    DWORD PTR ds:0xf5034a1d,ebp
  40633a:	addr16 jns 0x406334
  40633d:	cmp    esp,DWORD PTR [eax]
  40633f:	mov    dl,0x93
  406341:	imul   edi,DWORD PTR [ebx-0x248dc90b],0x70
  406348:	sbb    ch,bl
  40634a:	not    dl
  40634c:	push   0x3d
  40634e:	(bad)  
  40634f:	dec    edx
  406350:	(bad)  
  406351:	cs cmp esi,esi
  406354:	sahf   
  406355:	jg     0x4062fa
  406357:	dec    esp
  406358:	mov    al,al
  40635a:	loope  0x4063bb
  40635c:	jge    0x406308
  40635e:	sbb    BYTE PTR [ecx+0x5d],bl
  406361:	mov    cl,0x7d
  406363:	dec    eax
  406364:	ss push esi
  406366:	js     0x4063cb
  406368:	pop    ebp
  406369:	outs   dx,DWORD PTR ds:[esi]
  40636a:	dec    esi
  40636b:	inc    edx
  40636c:	and    dh,BYTE PTR [ebp+0xc371d68]
  406372:	int3   
  406373:	cs jg  0x406351
  406376:	retf   0x8a13
  406379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40637a:	xchg   edx,eax
  40637b:	lahf   
  40637c:	and    eax,0x4f279557
  406381:	stos   DWORD PTR es:[edi],eax
  406382:	(bad)  
  406383:	dec    ebp
  406384:	cs (bad) 
  406386:	call   0xb094b0e0
  40638b:	mov    dh,al
  40638d:	push   0x16
  40638f:	jae    0x40638c
  406391:	pop    ds
  406392:	nop
  406393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406394:	outs   dx,BYTE PTR ds:[esi]
  406395:	ins    BYTE PTR es:[edi],dx
  406396:	ja     0x406330
  406398:	sbb    eax,0x2e6a4573
  40639d:	and    BYTE PTR [eax+0x5ba89380],al
  4063a3:	fdiv   DWORD PTR [ebx]
  4063a5:	inc    ecx
  4063a6:	xor    BYTE PTR [edx],ah
  4063a8:	shl    BYTE PTR [edx],0xdc
  4063ab:	adc    BYTE PTR [ebp+0x74],al
  4063ae:	jmp    0x1e9:0xa708f7ec
  4063b5:	mov    esp,0x6e3de84
  4063ba:	cdq    
  4063bb:	cmp    al,0x2b
  4063bd:	test   ah,ch
  4063bf:	pop    edi
  4063c0:	rol    ebp,cl
  4063c2:	push   edi
  4063c3:	xchg   esp,eax
  4063c4:	das    
  4063c5:	mov    al,ds:0x897ebaef
  4063ca:	or     esp,0x6b
  4063cd:	inc    ecx
  4063ce:	add    cl,BYTE PTR [edx]
  4063d0:	sbb    cl,BYTE PTR [ecx]
  4063d2:	mov    ecx,DWORD PTR [edi]
  4063d4:	add    dl,BYTE PTR [ebx-0x29]
  4063d7:	pop    ss
  4063d8:	xor    ah,BYTE PTR [edi+0x7e]
  4063db:	or     al,0x5
  4063dd:	lds    ebx,FWORD PTR [esi]
  4063df:	cwde   
  4063e0:	xchg   edi,eax
  4063e1:	or     al,0xef
  4063e3:	scas   eax,DWORD PTR es:[edi]
  4063e4:	xor    eax,0x7c37a459
  4063e9:	dec    edx
  4063ea:	rcl    BYTE PTR [ecx],0x97
  4063ed:	es fs add ebp,esi
  4063f1:	pop    ebp
  4063f2:	pop    ebp
  4063f4:	and    eax,ecx
  4063f6:	pop    eax
  4063f7:	dec    ecx
  4063f8:	sbb    al,0x79
  4063fa:	popa   
  4063fb:	clc    
  4063fc:	iret   
  4063fd:	mov    ds:0x897e72c5,eax
  406402:	push   ebx
  406403:	mov    ah,0xe1
  406405:	dec    edx
  406406:	fcmove st,st(0)
  406408:	jnp    0x40645f
  40640a:	push   es
  40640b:	pop    ebx
  40640c:	pop    edx
  40640d:	ror    DWORD PTR [edx],0x9b
  406410:	sbb    BYTE PTR [edi],dl
  406412:	test   BYTE PTR [ebp+0x8],al
  406415:	push   0xfffffff4
  406417:	loope  0x406498
  406419:	cmp    bh,BYTE PTR [esi]
  40641b:	shr    BYTE PTR [edi+ebx*2-0x34],cl
  40641f:	clc    
  406420:	xor    dx,0xffd7
  406424:	mov    DWORD PTR [ebp-0x38],edx
  406427:	call   0xb1916afe
  40642c:	aad    0x95
  40642e:	xchg   esp,eax
  40642f:	xchg   BYTE PTR [edx+0x354763b0],dh
  406435:	iret   
  406436:	fbstp  TBYTE PTR [ecx]
  406438:	mov    ds:0xa289da36,al
  40643d:	lock lods al,BYTE PTR ds:[esi]
  40643f:	aaa    
  406440:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406442:	inc    edi
  406443:	das    
  406444:	cld    
  406445:	inc    ecx
  406446:	dec    esi
  406447:	dec    eax
  406448:	mov    bh,0x2e
  40644a:	and    eax,0x8bb0929e
  40644f:	mov    edi,0x2a9505c3
  406454:	xchg   DWORD PTR [esi],ebp
  406456:	icebp  
  406457:	add    al,0xd8
  406459:	adc    esp,DWORD PTR [edx+0x1f9143e6]
  40645f:	lods   al,BYTE PTR ds:[esi]
  406460:	mov    edx,DWORD PTR fs:[edi+0x36]
  406464:	loopne 0x40649c
  406466:	mov    al,ds:0xd7b4a98f
  40646b:	or     eax,0xf8bf4461
  406470:	or     esp,DWORD PTR [ecx+ecx*1]
  406473:	(bad)  
  406474:	je     0x4064de
  406476:	sbb    dl,BYTE PTR [edx+0x58a0adea]
  40647c:	adc    al,0xe7
  40647e:	out    dx,eax
  40647f:	mov    ah,0x2a
  406481:	je     0x406487
  406483:	xchg   edi,eax
  406484:	add    ch,BYTE PTR [edx]
  406486:	fisttp QWORD PTR [ebp-0x28]
  406489:	ds in  al,dx
  40648b:	jle    0x40646a
  40648d:	xor    cl,BYTE PTR [edx+0x63]
  406490:	push   esi
  406491:	mov    dl,0x56
  406493:	call   0x6e08d0b5
  406498:	jmp    0x8d30d100
  40649d:	cdq    
  40649e:	ret    0x86ea
  4064a1:	scas   al,BYTE PTR es:[edi]
  4064a2:	jae    0x4064d2
  4064a4:	in     al,dx
  4064a5:	sbb    esi,ecx
  4064a7:	mov    ebx,0xaf05aeff
  4064ac:	push   DWORD PTR [edi+0x29]
  4064af:	rcr    BYTE PTR [edx],1
  4064b1:	xor    eax,0xfe2780ca
  4064b6:	or     ecx,0xeb5ec01
  4064bc:	cmp    ebx,esi
  4064be:	and    edx,0xffffff9c
  4064c1:	out    dx,eax
  4064c2:	pop    edx
  4064c3:	cmp    eax,0x30cc03cf
  4064c8:	jmp    0xc600ca7c
  4064cd:	xor    al,al
  4064cf:	mov    BYTE PTR [ecx+ecx*2],bh
  4064d2:	push   ds
  4064d3:	pop    esi
  4064d4:	push   0x46b0e82
  4064d9:	popa   
  4064da:	les    esp,FWORD PTR [ebp+0x4e]
  4064dd:	icebp  
  4064de:	aad    0x9c
  4064e0:	xor    eax,0x92ea78de
  4064e5:	sub    al,0x42
  4064e7:	push   ebp
  4064e8:	sti    
  4064e9:	adc    bl,dh
  4064eb:	adc    BYTE PTR [ebx+edi*4+0x82ce617],al
  4064f2:	and    dh,BYTE PTR [eax]
  4064f4:	stc    
  4064f5:	jl     0x40650c
  4064f7:	iret   
  4064f8:	das    
  4064f9:	xor    BYTE PTR [esi],bh
  4064fb:	cmp    al,0x1a
  4064fd:	mov    ebx,eax
  4064ff:	enter  0x9a76,0xfe
  406503:	ss test al,0xc2
  406506:	push   0xffffffea
  406508:	es inc edx
  40650a:	sbb    ecx,DWORD PTR [esi]
  40650c:	fdiv   QWORD PTR [edx]
  40650e:	out    dx,eax
  40650f:	and    DWORD PTR [eax],ecx
  406511:	ror    ebx,1
  406513:	repnz xchg ebp,eax
  406515:	sbb    dl,BYTE PTR [edi-0x6ddefe60]
  40651b:	mov    ch,0xa6
  40651d:	mov    bh,0x4a
  40651f:	shl    DWORD PTR ss:[esp+edi*1+0x16],0x4b
  406525:	add    BYTE PTR [ecx+eax*2-0x19],0xa6
  40652a:	cmp    BYTE PTR [esi],ah
  40652c:	lahf   
  40652d:	imul   ebp,DWORD PTR [esi-0x65],0xfffffffd
  406531:	out    dx,al
  406532:	test   eax,0xf7b67f3
  406537:	push   edi
  406538:	sub    DWORD PTR ds:0x12fa210c,edx
  40653e:	add    ebx,DWORD PTR [edi-0x26]
  406541:	push   ss
  406542:	mov    edi,DWORD PTR [edx-0x66afdb1]
  406548:	cmp    BYTE PTR [ebx+edi*2+0x10ccf735],dl
  40654f:	mov    eax,ds:0x27aa3a98
  406554:	retf   
  406555:	pop    edi
  406556:	push   edi
  406557:	shr    BYTE PTR [esi-0x6f],1
  40655a:	push   cs
  40655b:	pop    esp
  40655c:	lock mov ds:0x4edb408a,al
  406562:	mov    ds:0xb4137033,al
  406567:	or     bl,BYTE PTR [ebp-0x5]
  40656a:	arpl   WORD PTR [eax+0x5e],dx
  40656d:	aad    0xa8
  40656f:	sub    BYTE PTR [eax],al
  406571:	jge    0x406585
  406573:	dec    ebx
  406574:	fidiv  DWORD PTR ds:0x9bd8d990
  40657a:	cmc    
  40657b:	dec    edi
  40657c:	sub    al,BYTE PTR [ecx]
  40657e:	or     ch,bh
  406580:	mov    bl,0xb0
  406582:	fadd   QWORD PTR [edx+0x16]
  406585:	push   ds
  406586:	shl    DWORD PTR [ecx-0x456249f2],1
  40658c:	cmp    cl,BYTE PTR [ebx-0x1d]
  40658f:	popa   
  406590:	popf   
  406591:	scas   eax,DWORD PTR es:[edi]
  406592:	test   DWORD PTR [esp+eax*4],esi
  406595:	fcom   st(7)
  406597:	xor    ebp,DWORD PTR gs:[esi]
  40659a:	sub    esp,eax
  40659c:	mov    ah,0x12
  40659e:	adc    BYTE PTR [edx],0x9e
  4065a1:	mov    cl,0xbc
  4065a3:	add    al,0x8a
  4065a5:	add    dh,dh
  4065a7:	xor    DWORD PTR [ebp-0x47d7a642],ecx
  4065ad:	jle    0x4065b8
  4065af:	pop    ds
  4065b0:	test   al,0xae
  4065b2:	lock imul edi,DWORD PTR [ebp+ecx*8+0x3191bd18],0x19
  4065bb:	mov    dl,BYTE PTR [esi]
  4065bd:	js     0x406586
  4065bf:	pop    eax
  4065c0:	loope  0x406557
  4065c2:	int3   
  4065c3:	sub    edx,ecx
  4065c5:	mov    edi,0xa219e9f2
  4065ca:	call   0x2c47:0xc4479d73
  4065d1:	addr16 cmp al,0xc6
  4065d4:	sbb    BYTE PTR [edx],0x7
  4065d7:	shl    BYTE PTR [ecx-0x45],cl
  4065da:	ss xchg ebx,eax
  4065dc:	aaa    
  4065dd:	int    0x14
  4065df:	in     al,0x12
  4065e1:	pop    ecx
  4065e2:	cli    
  4065e3:	mov    al,0x89
  4065e5:	fadd   DWORD PTR [edx+ebp*2-0x65]
  4065e9:	jo     0x4065f7
  4065eb:	(bad)  
  4065ec:	xchg   edi,eax
  4065ed:	pop    ecx
  4065ee:	call   0xe3a0de76
  4065f3:	jns    0x4065b3
  4065f5:	lods   al,BYTE PTR ds:[esi]
  4065f7:	push   ss
  4065f8:	push   cs
  4065f9:	mov    al,0x2d
  4065fb:	pop    esp
  4065fc:	xor    eax,DWORD PTR [ebx+esi*2]
  4065ff:	nop
  406600:	cmp    BYTE PTR [edi+0x39e778c5],ch
  406606:	fstp   TBYTE PTR [esi+0x51]
  406609:	push   ds
  40660a:	mov    dh,0x2b
  40660c:	sbb    al,0x3d
  40660e:	pushf  
  40660f:	call   0x1662d6d1
  406614:	sahf   
  406615:	add    eax,0x3caf4780
  40661a:	repz jge 0x40661e
  40661d:	mov    cl,BYTE PTR [ebp-0x65]
  406620:	jae    0x4065d8
  406622:	cmc    
  406623:	hlt    
  406624:	sub    eax,ecx
  406626:	inc    esi
  406627:	push   es
  406628:	retf   0x14c5
  40662b:	push   ss
  40662c:	arpl   bx,dx
  40662e:	mov    cl,0x14
  406630:	arpl   cx,dx
  406632:	stos   DWORD PTR es:[edi],eax
  406633:	add    ah,ah
  406635:	cmp    al,0xcf
  406637:	sub    al,0xe9
  406639:	jle    0x406600
  40663b:	sbb    al,0x30
  40663d:	les    esp,FWORD PTR [esi-0x54]
  406640:	adc    bh,al
  406642:	aad    0xf8
  406644:	jg     0x40661b
  406646:	pop    ebp
  406647:	das    
  406648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406649:	adc    bh,dl
  40664b:	push   ds
  40664c:	not    DWORD PTR [eax+ecx*4]
  40664f:	push   eax
  406650:	sub    eax,0x7863098c
  406655:	jb     0x4065ef
  406657:	retf   0x9e0e
  40665a:	dec    ebp
  40665b:	imul   ebx,DWORD PTR [eax-0x80],0xffffffa9
  40665f:	mov    esp,0xda99b2f1
  406664:	ja     0x406633
  406666:	jb     0x4065e9
  406668:	test   eax,0xdaab6a7
  40666d:	pop    ecx
  40666e:	jmp    0x406627
  406670:	push   ebx
  406671:	adc    eax,esi
  406673:	imul   esp,DWORD PTR [edi+0x1f721678],0xffffffef
  40667a:	add    BYTE PTR [ecx+0x3c],bl
  40667d:	fadd   DWORD PTR [ebx]
  40667f:	sar    DWORD PTR [ebx+ebx*8],0xda
  406683:	arpl   cx,bp
  406685:	fsubr  QWORD PTR [edx-0x30]
  406688:	ss (bad) 
  40668b:	jecxz  0x406625
  40668d:	adc    BYTE PTR [ecx+0x72],al
  406690:	loopne 0x4066e2
  406692:	mov    esi,esp
  406694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406695:	mov    edi,cs
  406697:	(bad)  
  406698:	lods   eax,DWORD PTR ds:[esi]
  406699:	add    DWORD PTR [ebx-0x5],esi
  40669c:	add    ebx,DWORD PTR [edx]
  40669e:	pop    esi
  40669f:	idiv   DWORD PTR [eax-0x62]
  4066a2:	xor    cl,bl
  4066a4:	(bad)  
  4066a5:	leave  
  4066a6:	lods   al,BYTE PTR ds:[esi]
  4066a7:	inc    esi
  4066a8:	scas   eax,DWORD PTR es:[edi]
  4066a9:	(bad)  
  4066aa:	pop    ebx
  4066ab:	jmp    0x4066dc
  4066ad:	retf   0xb98c
  4066b0:	cmp    eax,0x415d8dd9
  4066b5:	fmulp  st(4),st
  4066b7:	fst    DWORD PTR [ecx]
  4066b9:	adc    bl,BYTE PTR [ebx+0x12]
  4066bc:	popf   
  4066bd:	clc    
  4066be:	call   0x1c6777f4
  4066c3:	imul   eax,DWORD PTR [edi+ebx*1-0x77697d11],0x3c6aa786
  4066ce:	xor    al,bh
  4066d0:	push   0x80a60e5
  4066d5:	push   ss
  4066d6:	sub    BYTE PTR [edx],bh
  4066d8:	aam    0xe0
  4066da:	adc    bh,BYTE PTR [ebp-0x57fae7a8]
  4066e0:	jne    0x4066f8
  4066e2:	out    0xe5,eax
  4066e4:	pop    ss
  4066e5:	jg     0x4066ec
  4066e7:	(bad)  
  4066e8:	jecxz  0x4066c0
  4066ea:	bound  esi,QWORD PTR [esp+eax*1-0x98887c5]
  4066f1:	test   DWORD PTR [ebx],esi
  4066f3:	leave  
  4066f4:	ficomp DWORD PTR [eax-0x70cd0999]
  4066fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066fb:	cwde   
  4066fc:	lods   eax,DWORD PTR ds:[esi]
  4066fd:	outs   dx,DWORD PTR ds:[esi]
  4066fe:	test   DWORD PTR [eax],ebx
  406700:	les    edx,FWORD PTR [esp+eax*2]
  406703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406704:	ja     0x406723
  406706:	mov    edi,0x93d41e08
  40670b:	add    DWORD PTR [esi+0x51c9ef31],ebp
  406711:	pop    esi
  406712:	lea    edi,[esi-0x6]
  406715:	ss enter 0x79a9,0xc9
  40671a:	add    eax,0x1386ff56
  40671f:	sub    al,0x63
  406721:	pusha  
  406722:	mov    ch,0x70
  406724:	mov    ebx,0xe322cc98
  406729:	jle    0x406711
  40672b:	xor    DWORD PTR [bx+0x3857],esp
  406730:	cld    
  406731:	pop    edx
  406732:	pop    edi
  406733:	push   ebp
  406734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406735:	imul   edi,DWORD PTR [edi-0x5abc5c67],0xffffff92
  40673c:	mov    bh,0x7
  40673e:	pop    eax
  40673f:	jae    0x4066dc
  406741:	jb     0x406701
  406743:	js     0x40677d
  406745:	into   
  406746:	adc    eax,0xbfef98eb
  40674b:	sub    BYTE PTR [ebx+0x11],dh
  40674e:	daa    
  40674f:	dec    ecx
  406750:	and    DWORD PTR [edi-0x3b303f67],eax
  406756:	fwait
  406757:	push   ebx
  406758:	in     al,0x62
  40675a:	test   eax,0x7d57e603
  40675f:	gs iret 
  406761:	pop    ebp
  406762:	ins    DWORD PTR es:[edi],dx
  406763:	push   ds
  406764:	adc    BYTE PTR ds:0x6249e42e,dl
  40676a:	mov    ds:0x7ad0b22f,al
  40676f:	or     al,0xc9
  406771:	mov    dh,0xa2
  406773:	(bad)  
  406774:	or     DWORD PTR [ecx+0x314a8fcf],esi
  40677a:	dec    ebx
  40677b:	mov    esi,0x8855b0af
  406780:	inc    ebx
  406781:	adc    al,0x89
  406783:	ins    BYTE PTR es:[edi],dx
  406784:	pusha  
  406785:	dec    esi
  406786:	int    0xf
  406788:	(bad)  
  406789:	addr16 mov edx,0x7dac868a
  40678f:	add    bh,BYTE PTR [edx]
  406791:	xchg   ebx,eax
  406792:	cmp    edi,DWORD PTR [ebx-0x1246e655]
  406798:	push   ds
  406799:	mov    ds:0xcfcdaa81,al
  40679e:	jns    0x406818
  4067a0:	add    edx,DWORD PTR [ebx-0x52c66f9c]
  4067a6:	mov    WORD PTR [esi+0x3f],?
  4067a9:	cmp    al,0x3b
  4067ab:	aas    
  4067ac:	lds    eax,FWORD PTR [ebp+0xe272c4c]
  4067b2:	popa   
  4067b3:	scas   eax,DWORD PTR es:[edi]
  4067b4:	les    esi,FWORD PTR [ebp-0x34a3ec2a]
  4067ba:	push   ss
  4067bb:	sti    
  4067bc:	popf   
  4067bd:	xchg   bl,dl
  4067bf:	jmp    0x58ff34c
  4067c4:	sub    DWORD PTR [edx+0x7b41c9a4],esi
  4067ca:	push   edx
  4067cb:	jnp    0x406816
  4067cd:	push   ecx
  4067ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067cf:	sbb    bh,BYTE PTR ds:0xd7b62141
  4067d5:	loop   0x40682f
  4067d7:	sub    al,0x21
  4067d9:	aaa    
  4067da:	pop    eax
  4067db:	in     eax,dx
  4067dc:	dec    ebp
  4067dd:	icebp  
  4067de:	inc    eax
  4067df:	xchg   ebx,eax
  4067e0:	ins    BYTE PTR es:[edi],dx
  4067e1:	gs xchg ebx,eax
  4067e3:	out    0xf7,eax
  4067e5:	ins    BYTE PTR es:[edi],dx
  4067e6:	inc    ebx
  4067e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067e8:	(bad)  
  4067e9:	xchg   edi,eax
  4067ea:	jnp    0x406806
  4067ec:	pop    ebp
  4067ed:	pop    edx
  4067ee:	sbb    BYTE PTR [ebx],0xde
  4067f1:	dec    ebp
  4067f2:	jnp    0x406783
  4067f4:	xchg   BYTE PTR [eax],ah
  4067f6:	mov    bh,al
  4067f8:	fsubp  st(2),st
  4067fa:	ins    BYTE PTR es:[edi],dx
  4067fb:	das    
  4067fc:	mov    BYTE PTR fs:[eax-0x6a],0x6
  406801:	leave  
  406802:	mov    ds:0xfb7edc87,al
  406807:	mov    edi,0x20ae86c0
  40680c:	xor    eax,0x4790ba4f
  406811:	jo     0x4067fc
  406813:	test   BYTE PTR [esi+0x67],cl
  406816:	inc    ecx
  406817:	pop    edx
  406818:	(bad)  
  40681a:	addr16 add eax,0x2814f7f1
  406820:	push   edi
  406821:	lods   eax,DWORD PTR ds:[esi]
  406822:	retf   
  406823:	cld    
  406824:	cmp    edx,eax
  406826:	add    BYTE PTR [edx+0x4ecd9607],0x2d
  40682d:	sbb    BYTE PTR [ecx-0x27985bbe],ah
  406833:	or     DWORD PTR [ebx],0x363869af
  406839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40683a:	or     al,0xe9
  40683c:	adc    edi,DWORD PTR [esp+eiz*2+0x60]
  406840:	cmp    al,0x37
  406842:	fadd   QWORD PTR [ebx]
  406844:	lds    ebx,FWORD PTR [edi+ecx*1+0x777237a3]
  40684b:	push   edx
  40684c:	sub    DWORD PTR [ebx-0x22],eax
  40684f:	bound  edi,QWORD PTR [ecx+eiz*8]
  406852:	addr16 cmp al,0xe0
  406855:	jae    0x406811
  406857:	outs   dx,DWORD PTR ds:[esi]
  406858:	(bad)  
  406859:	dec    esi
  40685a:	sahf   
  40685b:	cmp    eax,0x9c58d8ba
  406860:	cmp    BYTE PTR [edi],cl
  406862:	daa    
  406863:	cwde   
  406864:	xchg   ebx,eax
  406865:	add    BYTE PTR [ebx],bh
  406867:	cli    
  406868:	stos   DWORD PTR es:[edi],eax
  406869:	in     eax,0xf7
  40686b:	fwait
  40686c:	and    ah,al
  40686e:	sbb    BYTE PTR [esi-0x25],ah
  406871:	in     al,0xb4
  406873:	outs   dx,DWORD PTR ds:[esi]
  406874:	xchg   ebp,eax
  406875:	push   edx
  406876:	retf   
  406877:	cmp    ecx,DWORD PTR [edi]
  406879:	pop    eax
  40687a:	mov    DWORD PTR [ebx],ebx
  40687c:	add    al,0xc8
  40687e:	mov    bl,BYTE PTR [edi-0x67]
  406881:	xchg   ah,ah
  406883:	mov    ebx,0x46571ef9
  406888:	in     al,dx
  406889:	add    bl,BYTE PTR [edi+0x73bf16e1]
  40688f:	adc    ecx,DWORD PTR [edx]
  406891:	jnp    0x40685b
  406893:	call   FWORD PTR [ecx+0x3a787fa6]
  406899:	mov    ebp,0x8121bfb2
  40689e:	pop    es
  40689f:	aad    0xeb
  4068a1:	es adc BYTE PTR ss:[esi+0x75],bh
  4068a6:	xor    ah,BYTE PTR [edx]
  4068a8:	mov    edx,0x5f011a6a
  4068ad:	dec    esi
  4068ae:	xor    eax,0xf8c3d646
  4068b3:	icebp  
  4068b4:	inc    ebx
  4068b5:	lods   eax,DWORD PTR ds:[esi]
  4068b6:	mov    al,0x2e
  4068b8:	push   eax
  4068b9:	jmp    0xe1188a2
  4068be:	sub    eax,0xd45cce1d
  4068c3:	rol    DWORD PTR [edi+ebx*4+0x3b3ba5d9],cl
  4068ca:	mov    esp,0xfdf11554
  4068cf:	add    edi,edi
  4068d1:	cmp    DWORD PTR ds:[edx-0x3b],edi
  4068d5:	push   0x1d568a41
  4068da:	mov    ds:0x5218ec87,eax
  4068df:	data16 jl 0x406889
  4068e2:	fdivr  st(6),st
  4068e4:	cmp    al,BYTE PTR [edi-0x7d]
  4068e7:	inc    ecx
  4068e8:	out    0x2c,al
  4068ea:	mov    eax,0x7c63caa1
  4068ef:	xchg   esp,eax
  4068f0:	rcl    ecx,0x98
  4068f3:	xor    eax,0x1173cad7
  4068f8:	cmp    al,0x37
  4068fa:	jmp    0x3bfddf3f
  4068ff:	cmp    dl,bl
  406901:	sub    eax,0x89d7ba72
  406906:	fidiv  WORD PTR [edi]
  406908:	jmp    0x406971
  40690a:	cmp    eax,0x8d8b374e
  40690f:	repz int 0xf2
  406912:	adc    eax,0x15f4da20
  406917:	mov    ds:0xede9eab5,eax
  40691c:	lea    esi,[ecx]
  40691e:	sub    DWORD PTR [edx+0x2c24950d],esi
  406924:	loop   0x406913
  406926:	fcomip st,st(7)
  406928:	jbe    0x406974
  40692a:	ret    0x66ab
  40692d:	xchg   ebx,eax
  40692e:	push   0xbb5ee24c
  406933:	adc    eax,0xf1a22d0c
  406938:	dec    edx
  406939:	lods   eax,DWORD PTR ds:[esi]
  40693a:	es cs push cs
  40693d:	pop    ss
  40693e:	ss dec esp
  406940:	ficomp DWORD PTR [eax]
  406942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406943:	and    BYTE PTR ds:0xf98bd56,bh
  406949:	mov    ecx,0xef3eaa46
  40694e:	inc    ecx
  40694f:	or     ebp,ebx
  406951:	jl     0x4068e3
  406953:	icebp  
  406954:	rol    DWORD PTR [ecx+ebx*1+0x4f55872d],cl
  40695b:	mov    eax,0xcf1fe694
  406960:	pop    ebp
  406961:	jnp    0x40691d
  406963:	or     ah,bh
  406965:	mov    gs,WORD PTR [ebx+0x74a9922]
  40696b:	ins    DWORD PTR es:[edi],dx
  40696c:	dec    esi
  40696d:	dec    esi
  40696e:	in     al,0x8f
  406970:	adc    bl,bl
  406972:	loop   0x406943
  406974:	dec    ecx
  406975:	rcr    ch,1
  406977:	dec    ebp
  406978:	ss xor al,0xbf
  40697b:	in     al,dx
  40697c:	out    dx,al
  40697d:	jbe    0x4069db
  40697f:	aad    0x53
  406981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406982:	xchg   BYTE PTR [eax-0x5f],ah
  406985:	outs   dx,BYTE PTR ds:[esi]
  406986:	xchg   esp,eax
  406987:	fstp   QWORD PTR [esi]
  406989:	mov    bh,0x82
  40698b:	cwde   
  40698c:	sbb    al,BYTE PTR [edi-0x13]
  40698f:	stos   DWORD PTR es:[edi],eax
  406990:	(bad)  
  406991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406992:	pop    eax
  406993:	test   al,0x89
  406995:	dec    esi
  406996:	mov    dl,0x6a
  406998:	retf   
  406999:	mov    dh,0x56
  40699b:	sub    al,0xe
  40699d:	aad    0xa0
  40699f:	lahf   
  4069a0:	(bad)  
  4069a1:	jl     0x406a0e
  4069a3:	push   esi
  4069a4:	stc    
  4069a5:	mov    cl,dh
  4069a7:	jnp    0x40695b
  4069a9:	aaa    
  4069aa:	fsub   st,st(0)
  4069ac:	xlat   BYTE PTR ds:[ebx]
  4069ad:	inc    ebp
  4069ae:	mov    ?,eax
  4069b0:	mov    BYTE PTR [eax+0x53],cl
  4069b3:	mov    dl,0x94
  4069b5:	loopne 0x406962
  4069b7:	pop    edx
  4069b8:	out    dx,al
  4069b9:	ret    0xd2f7
  4069bc:	ret    0x6b2f
  4069bf:	(bad)  
  4069c0:	fwait
  4069c1:	and    BYTE PTR [eax-0xe],bh
  4069c4:	outs   dx,BYTE PTR ds:[esi]
  4069c5:	adc    al,0xb4
  4069c7:	pushf  
  4069c8:	xchg   ebx,eax
  4069c9:	adc    BYTE PTR [ecx],0x65
  4069cc:	(bad)  
  4069cd:	fdivr  st,st(2)
  4069cf:	mov    ch,0x7e
  4069d1:	imul   ebp,DWORD PTR [edx],0x58
  4069d4:	sbb    BYTE PTR [ecx+edi*4+0x32d4d37f],dl
  4069db:	dec    edx
  4069dc:	push   edx
  4069dd:	jmp    0x406a19
  4069df:	inc    ebx
  4069e0:	dec    ebp
  4069e1:	xor    bh,BYTE PTR [ecx+0x3b]
  4069e4:	push   ebp
  4069e5:	div    DWORD PTR [esi-0x3fd6a614]
  4069eb:	push   edi
  4069ec:	in     eax,0x22
  4069ee:	jne    0x4069bd
  4069f0:	push   cs
  4069f1:	jmp    0x406a47
  4069f3:	jmp    0x4069a7
  4069f5:	pop    ebp
  4069f6:	(bad)  
  4069f7:	scas   al,BYTE PTR es:[edi]
  4069f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069f9:	das    
  4069fa:	cld    
  4069fb:	add    ebp,edi
  4069fd:	sub    BYTE PTR [edi-0x31],0xad
  406a01:	pop    ecx
  406a02:	jo     0x406a0e
  406a04:	enter  0x241a,0xc
  406a08:	dec    ebp
  406a09:	setae  BYTE PTR [edi-0x20]
  406a0d:	aad    0xf8
  406a0f:	fild   QWORD PTR [ecx]
  406a11:	jmp    0x54c5fa15
  406a16:	les    eax,FWORD PTR [edi+0x76fd2967]
  406a1c:	push   ebx
  406a1d:	inc    ebx
  406a1e:	and    esi,DWORD PTR [ecx]
  406a20:	aad    0x7e
  406a22:	dec    esi
  406a23:	or     ch,BYTE PTR [eax+ecx*4+0x52]
  406a27:	cld    
  406a28:	inc    ebx
  406a29:	pop    edi
  406a2a:	inc    edx
  406a2b:	xlat   BYTE PTR ds:[ebx]
  406a2c:	and    al,0x40
  406a2e:	inc    esp
  406a2f:	daa    
  406a30:	mov    esp,0xcd0802d0
  406a35:	xchg   edx,eax
  406a36:	aas    
  406a37:	out    dx,al
  406a38:	add    DWORD PTR [ecx-0xa75baaa],ebp
  406a3e:	in     eax,0x15
  406a40:	loope  0x406abe
  406a42:	mov    ebp,0xafd6e62b
  406a47:	jmp    0xc6a5:0x44de98cd
  406a4e:	mov    ebx,0x8f06ecac
  406a53:	fimul  DWORD PTR [esi-0xf267dd4]
  406a59:	push   ebp
  406a5a:	iret   
  406a5b:	sbb    BYTE PTR [eax-0x79],bl
  406a5e:	xor    DWORD PTR ds:0xbe6e9ddb,ecx
  406a64:	add    cl,bh
  406a66:	or     dh,ch
  406a68:	adc    bh,BYTE PTR [ebx+0x19]
  406a6b:	or     dh,ch
  406a6d:	sbb    dl,bl
  406a6f:	dec    edx
  406a70:	ins    DWORD PTR es:[edi],dx
  406a71:	push   esp
  406a72:	dec    ecx
  406a73:	push   esi
  406a74:	xchg   esp,eax
  406a75:	test   al,0x12
  406a77:	test   al,0xf7
  406a79:	mov    esi,ds
  406a7b:	pushf  
  406a7c:	xor    al,0xc1
  406a7e:	inc    edx
  406a7f:	idiv   edi
  406a81:	repz fisttp QWORD PTR [edi+0x5e]
  406a85:	xchg   ah,dh
  406a87:	in     eax,dx
  406a88:	push   edi
  406a89:	imul   edi,DWORD PTR [edx-0x72],0xbb015ef1
  406a90:	cmp    DWORD PTR [edx],0x2e8c4ff4
  406a96:	xor    ebp,esp
  406a98:	add    DWORD PTR [ecx+0xb],esi
  406a9b:	hlt    
  406a9c:	jno    0x406aed
  406a9e:	arpl   WORD PTR ds:0x1ea48480,dx
  406aa4:	sub    al,0x94
  406aa6:	push   esp
  406aa7:	pop    si
  406aa9:	nop
  406aaa:	sbb    edi,eax
  406aac:	xor    eax,0x57b00f5d
  406ab1:	dec    esp
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	icebp  
  406ab4:	test   DWORD PTR [edi-0x80],edi
  406ab7:	and    al,0x2e
  406ab9:	lahf   
  406aba:	scas   al,BYTE PTR es:[edi]
  406abb:	mul    cl
  406abd:	jl     0x406ac4
  406abf:	cmc    
  406ac0:	pop    ecx
  406ac1:	retf   0x7f1f
  406ac4:	gs sahf 
  406ac6:	push   ecx
  406ac7:	mov    cl,0x31
  406ac9:	mov    dl,bh
  406acb:	xor    al,0x1a
  406acd:	imul   eax,DWORD PTR [esi],0xffffffa0
  406ad0:	enter  0x7293,0x4f
  406ad4:	mov    esi,0x9fca20f6
  406ad9:	test   bh,cl
  406adb:	mov    bh,0x2a
  406add:	mov    DWORD PTR [esi+0x77cce382],ecx
  406ae3:	(bad)  
  406ae5:	out    dx,eax
  406ae6:	mov    esp,edx
  406ae8:	std    
  406ae9:	cmp    eax,0x49d776dd
  406aee:	mov    al,BYTE PTR ds:0x670fb016
  406af4:	test   BYTE PTR [eax+0x5b1cac71],bh
  406afa:	fbld   TBYTE PTR [edx-0xf]
  406afd:	lahf   
  406afe:	pop    ecx
  406aff:	call   0x1209c71a
  406b04:	add    eax,edi
  406b06:	les    edi,FWORD PTR [ebp+0x7c]
  406b09:	xchg   esi,eax
  406b0a:	pop    es
  406b0b:	jae    0x406ac4
  406b0d:	setg   BYTE PTR ds:0x8b2409f0
  406b14:	(bad)  
  406b15:	ds dec ebx
  406b17:	inc    ecx
  406b18:	ins    BYTE PTR es:[edi],dx
  406b19:	call   0x96f55faa
  406b1e:	jno    0x406aef
  406b20:	inc    ebx
  406b21:	aaa    
  406b22:	call   0xb500:0x151cbadd
  406b29:	add    eax,0x35e1e4be
  406b2e:	dec    esi
  406b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b30:	shl    edi,cl
  406b32:	test   al,0x6a
  406b34:	push   ebx
  406b35:	bound  esp,QWORD PTR [ecx+0x48]
  406b38:	iret   
  406b39:	iret   
  406b3a:	js     0x406b2f
  406b3c:	(bad)  
  406b3d:	sbb    al,0x1d
  406b3f:	ss add ch,al
  406b42:	or     ebp,DWORD PTR [edx-0x775c4069]
  406b48:	sub    dl,BYTE PTR [edx+ebp*4-0x3fea2344]
  406b4f:	hlt    
  406b50:	leave  
  406b51:	jge    0x406b3c
  406b53:	jmp    0xde89:0x6d65d74f
  406b5a:	fwait
  406b5b:	push   ecx
  406b5c:	xchg   ebp,eax
  406b5d:	cwde   
  406b5e:	cmp    bh,bl
  406b60:	into   
  406b61:	into   
  406b62:	test   al,0x50
  406b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b65:	dec    edx
  406b66:	mov    WORD PTR [ecx],ds
  406b68:	sub    dh,BYTE PTR [edi]
  406b6a:	jmp    0x88f7:0x5f63389e
  406b71:	mov    ecx,0x267f5d49
  406b76:	cmp    DWORD PTR [ebp+ecx*1-0x58],edx
  406b7a:	inc    edx
  406b7b:	js     0x406bdc
  406b7d:	jnp    0x406b7e
  406b7f:	stos   DWORD PTR es:[edi],eax
  406b80:	push   ebx
  406b81:	add    esp,DWORD PTR [esi]
  406b83:	or     cl,BYTE PTR [edi-0x64fc9559]
  406b89:	arpl   sp,sp
  406b8b:	jg     0x406b2c
  406b8d:	cli    
  406b8e:	clc    
  406b8f:	jecxz  0x406bae
  406b91:	imul   ecx,DWORD PTR [ebp-0x452929b7],0xffffffda
  406b98:	(bad)  
  406b99:	out    0x7,al
  406b9b:	mul    dl
  406b9d:	pusha  
  406b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b9f:	adc    al,0xa1
  406ba1:	mov    dh,bh
  406ba3:	mov    ds:0xb102ba8,al
  406ba8:	aaa    
  406ba9:	cmp    al,0x3d
  406bab:	jae    0x406b30
  406bad:	ja     0x406b45
  406baf:	outs   dx,DWORD PTR ds:[esi]
  406bb0:	adc    DWORD PTR [edx],edi
  406bb2:	inc    esi
  406bb3:	cmp    ebp,DWORD PTR [edi+0xe]
  406bb6:	sbb    dh,BYTE PTR [esi-0x65]
  406bb9:	xchg   DWORD PTR [ebp+0x355e5533],ebp
  406bbf:	mov    ecx,0x7e79addd
  406bc4:	mov    ecx,esi
  406bc6:	jo     0x406c37
  406bc8:	or     eax,0x922cd848
  406bcd:	out    dx,eax
  406bce:	cmp    DWORD PTR [eax+0x10],esp
  406bd1:	inc    edx
  406bd2:	repz leave 
  406bd4:	das    
  406bd5:	push   cs
  406bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd7:	or     al,0x3a
  406bd9:	or     esi,DWORD PTR [edi]
  406bdb:	dec    esi
  406bdc:	pop    es
  406bdd:	ret    0xeae6
  406be0:	or     BYTE PTR ds:0x6c91fce4,bl
  406be6:	mov    ecx,DWORD PTR [ebx]
  406be8:	push   ebx
  406be9:	jno    0x406bf3
  406beb:	(bad)  
  406bec:	pop    esi
  406bed:	jns    0x406c38
  406bef:	sub    BYTE PTR [edx-0x6bd6d76b],dl
  406bf5:	push   cs
  406bf6:	fwait
  406bf7:	lds    ebp,FWORD PTR [eax+0x45f9fcda]
  406bfd:	fdiv   DWORD PTR [ebp-0x10]
  406c00:	cmc    
  406c01:	mov    al,ds:0x594bbc52
  406c06:	mov    eax,0x5dbd91cd
  406c0b:	inc    edi
  406c0c:	mov    dl,BYTE PTR [ecx+0x7b]
  406c0f:	stos   BYTE PTR es:[edi],al
  406c10:	mov    ecx,0xa7ef8ff7
  406c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c16:	xchg   ebx,eax
  406c17:	call   0xd9e64f2b
  406c1c:	push   esp
  406c1d:	and    ecx,DWORD PTR [eax]
  406c1f:	push   ecx
  406c20:	xor    BYTE PTR [esi+0x6c17ac83],0xcb
  406c27:	mov    dh,0x2d
  406c29:	mov    al,0x59
  406c2b:	js     0x406beb
  406c2d:	in     eax,0xda
  406c2f:	inc    esp
  406c30:	push   eax
  406c31:	ja     0x406beb
  406c33:	pusha  
  406c34:	imul   ecx,ecx,0xe9bec514
  406c3a:	aam    0x13
  406c3c:	add    BYTE PTR [ecx+0x0],0x43
  406c40:	ins    DWORD PTR es:[edi],dx
  406c41:	inc    ebp
  406c42:	pop    esp
  406c43:	addr16 (bad) 
  406c45:	popa   
  406c46:	push   0x37
  406c48:	sub    al,0xb6
  406c4a:	stc    
  406c4b:	pop    ebp
  406c4c:	jmp    0x406cc1
  406c4e:	mov    DWORD PTR [ebp-0x9],ebp
  406c51:	int    0x6b
  406c53:	stos   DWORD PTR es:[edi],eax
  406c54:	div    ah
  406c56:	push   eax
  406c57:	into   
  406c58:	push   eax
  406c59:	sbb    al,0x7f
  406c5b:	pop    es
  406c5c:	es push edi
  406c5e:	bound  esp,QWORD PTR [ebx+0x1807292c]
  406c64:	fistp  WORD PTR [edx+ebp*4-0x3d]
  406c68:	mov    dh,0xb3
  406c6a:	xchg   esp,eax
  406c6b:	add    BYTE PTR [eax+0x49d61bb6],0x25
  406c72:	loopne 0x406c6b
  406c74:	adc    al,0xaf
  406c76:	in     eax,dx
  406c77:	xor    al,0x77
  406c79:	repz and eax,0xdd834433
  406c7f:	add    eax,DWORD PTR [eax+0x69fb64b1]
  406c85:	or     bh,BYTE PTR [edx]
  406c87:	lock ret 
  406c89:	rcr    DWORD PTR [eax],0x64
  406c8c:	lods   eax,DWORD PTR ds:[esi]
  406c8d:	jo     0x406ce6
  406c8f:	stos   BYTE PTR es:[edi],al
  406c90:	sub    DWORD PTR [edi+0x4bb1b12c],ebx
  406c96:	popa   
  406c97:	or     BYTE PTR [ecx+0x16],cl
  406c9a:	adc    DWORD PTR [ebp-0x1e40503d],edx
  406ca0:	loope  0x406ca9
  406ca2:	mov    bh,0x75
  406ca4:	stc    
  406ca5:	push   ds
  406ca6:	les    ebp,FWORD PTR [edi+0x57]
  406ca9:	pop    esp
  406caa:	inc    ecx
  406cab:	into   
  406cac:	jge    0x406c48
  406cae:	imul   ebx,DWORD PTR [edx-0x30],0xe0086e8b
  406cb5:	aad    0x5b
  406cb7:	sbb    BYTE PTR [edi],dh
  406cb9:	or     eax,0x44eb14da
  406cbe:	into   
  406cbf:	test   eax,0xa50cc9e9
  406cc4:	add    eax,0xf56742f2
  406cc9:	mov    ds:0xfa5ea3f6,al
  406cce:	loope  0x406c87
  406cd0:	inc    ecx
  406cd1:	gs jp  0x406cf9
  406cd4:	push   0xef084036
  406cd9:	test   eax,0xaa09f5bd
  406cde:	xor    esi,edi
  406ce0:	jmp    0x9571a112
  406ce5:	inc    edx
  406ce6:	scas   eax,DWORD PTR es:[edi]
  406ce7:	adc    eax,0x89f124cf
  406cec:	fnsave [ebx-0x3b432366]
  406cf2:	icebp  
  406cf3:	mov    ebp,0xeeb21d45
  406cf8:	lock xchg esp,eax
  406cfa:	mov    eax,ds:0x8da71252
  406cff:	jecxz  0x406d69
  406d01:	call   0xbd6e:0xb6ee4dab
  406d08:	mov    eax,0xe8aebcda
  406d0d:	or     al,0x95
  406d0f:	loope  0x406d72
  406d11:	inc    edx
  406d12:	push   eax
  406d13:	ja     0x406d8b
  406d15:	sbb    BYTE PTR [edi],al
  406d17:	push   0x4
  406d19:	mov    ds:0x873df06a,eax
  406d1e:	mov    ss,WORD PTR [edx]
  406d20:	jne    0x406cda
  406d22:	jns    0x406caf
  406d24:	push   esp
  406d25:	outs   dx,BYTE PTR ds:[esi]
  406d26:	or     al,0x66
  406d28:	sbb    eax,0xa46b1bae
  406d2d:	add    ebp,ebx
  406d2f:	mov    BYTE PTR [ebx],dl
  406d31:	xchg   esp,eax
  406d32:	aas    
  406d33:	dec    esi
  406d34:	(bad)  
  406d35:	fdivrp st(2),st
  406d37:	sbb    ecx,0xce5887e
  406d3d:	rcl    ebp,1
  406d3f:	mov    ah,0xc8
  406d41:	jmp    FWORD PTR [edi-0x5a580df2]
  406d47:	inc    eax
  406d48:	test   BYTE PTR [edi],dl
  406d4a:	sub    esi,edx
  406d4c:	inc    edx
  406d4d:	sub    eax,0xb94206da
  406d52:	gs loop 0x406d91
  406d55:	sub    eax,0x5e7167e7
  406d5a:	loopne 0x406cfe
  406d5c:	pop    ebx
  406d5d:	mov    ds:0xa9b6aebe,eax
  406d62:	push   ebx
  406d63:	dec    esp
  406d64:	mov    bl,0xbd
  406d66:	mov    dl,0xaf
  406d68:	scas   eax,DWORD PTR es:[edi]
  406d69:	sub    BYTE PTR [ebx],ah
  406d6b:	mov    dl,0x5e
  406d6d:	loope  0x406d02
  406d6f:	or     al,0x96
  406d71:	mov    ss,WORD PTR [ebx]
  406d73:	mov    eax,0x71df17ef
  406d78:	aaa    
  406d79:	jp     0x406d38
  406d7b:	sbb    al,0x2c
  406d7d:	das    
  406d7e:	ins    DWORD PTR es:[edi],dx
  406d7f:	push   esi
  406d80:	dec    esp
  406d81:	test   eax,0x8b38f7fd
  406d86:	lods   al,BYTE PTR ds:[esi]
  406d87:	push   esp
  406d88:	pop    ss
  406d89:	adc    dh,BYTE PTR [edi+ebp*2-0x11]
  406d8d:	push   cs
  406d8e:	xchg   ebx,eax
  406d8f:	add    DWORD PTR [edx],edx
  406d91:	retf   
  406d92:	repnz adc al,BYTE PTR [eax-0x79a512e0]
  406d99:	xchg   ebp,eax
  406d9a:	(bad)  
  406d9c:	hlt    
  406d9d:	jne    0x406e12
  406d9f:	jnp    0x406d5b
  406da1:	fisttp WORD PTR [ebp+0x19486c99]
  406da7:	mov    esp,DWORD PTR [ebx-0x374ddb77]
  406dad:	and    cl,bh
  406daf:	sbb    eax,0xe
  406db2:	or     eax,0xf4a3b41e
  406db7:	jae    0x406e35
  406db9:	cmp    ebp,DWORD PTR [edi+0x6bf62950]
  406dbf:	adc    ebp,DWORD PTR [ebx]
  406dc1:	push   eax
  406dc2:	sub    edi,edx
  406dc4:	mov    ?,edx
  406dc6:	or     DWORD PTR [edx],ebp
  406dc8:	shr    DWORD PTR [ebx+0x4af91998],cl
  406dce:	cdq    
  406dcf:	aad    0x71
  406dd1:	pop    ds
  406dd2:	nop
  406dd3:	jb     0x406d58
  406dd5:	jmp    0x406e4e
  406dd7:	hlt    
  406dd8:	jbe    0x406ddc
  406dda:	and    BYTE PTR [eax+0x62],bl
  406ddd:	in     eax,dx
  406dde:	hlt    
  406ddf:	cmp    ecx,eax
  406de1:	(bad)  
  406de2:	(bad)  
  406de3:	stos   BYTE PTR es:[edi],al
  406de4:	cmp    al,0xff
  406de6:	lahf   
  406de7:	scas   eax,DWORD PTR es:[edi]
  406de8:	mov    ch,0xf4
  406dea:	mov    ebp,0xbe78d565
  406def:	(bad)  
  406df1:	dec    ebx
  406df2:	push   esi
  406df3:	imul   edx,DWORD PTR [edx+0x3e],0x8742b33b
  406dfa:	mov    ch,0x77
  406dfc:	fld    st(2)
  406dfe:	test   al,0x15
  406e00:	popf   
  406e01:	stos   DWORD PTR es:[edi],eax
  406e02:	stc    
  406e03:	and    BYTE PTR [ebx+0x5bf37cd9],dl
  406e09:	(bad)  
  406e0a:	fld    TBYTE PTR [ecx+0x3a]
  406e0d:	sub    esp,DWORD PTR [eax-0x10]
  406e10:	xor    DWORD PTR [eax+0x63],edx
  406e13:	mov    edi,0x7ec3f9d8
  406e18:	fisub  WORD PTR [edx]
  406e1a:	sub    BYTE PTR [ebp-0x502932b3],bh
  406e20:	in     al,0x7e
  406e22:	cmp    BYTE PTR [eax-0x23b18583],0x68
  406e29:	and    BYTE PTR [edx-0x29],dh
  406e2c:	push   esp
  406e2d:	mov    esi,0x91f1f8d5
  406e32:	clc    
  406e33:	(bad)  
  406e34:	mov    ebx,ebx
  406e36:	call   0xa67f:0x82c4f921
  406e3d:	add    BYTE PTR ds:0x51b0ee6,dl
  406e43:	mov    al,ds:0x3f36ae0b
  406e48:	or     DWORD PTR [esi-0x10f21da6],edx
  406e4e:	jmp    0xeb08:0xec37171
  406e55:	or     esp,DWORD PTR [edi-0x1704096a]
  406e5b:	(bad)  
  406e5c:	jp     0x406e42
  406e5e:	icebp  
  406e5f:	fcom   QWORD PTR [ecx]
  406e61:	dec    ecx
  406e62:	mov    dh,0xad
  406e64:	sub    BYTE PTR [esi+0x6b69de62],bl
  406e6a:	dec    eax
  406e6b:	xor    BYTE PTR [esi],dl
  406e6d:	push   eax
  406e6e:	sub    BYTE PTR [eax+ebp*2],bl
  406e71:	mul    ebp
  406e73:	cmc    
  406e74:	sub    esi,DWORD PTR [ebp-0x8]
  406e77:	cmp    BYTE PTR [ecx-0x68],dh
  406e7a:	sar    DWORD PTR [edi],0x46
  406e7d:	add    DWORD PTR [esi],edi
  406e7f:	(bad)  
  406e80:	adc    eax,0x2f0c0d85
  406e85:	sbb    bl,BYTE PTR [ebp+esi*4+0x1b52d44]
  406e8c:	or     ebx,DWORD PTR [edx+0x528eeb74]
  406e92:	jmp    0x406e17
  406e94:	fimul  WORD PTR [ecx-0x7e]
  406e97:	pop    es
  406e98:	add    bl,BYTE PTR [ebp-0x66]
  406e9b:	aad    0x43
  406e9d:	repnz inc ecx
  406e9f:	dec    ebp
  406ea0:	ja     0x406e55
  406ea2:	rol    DWORD PTR [ebx-0x20c53562],cl
  406ea8:	inc    edi
  406ea9:	in     eax,dx
  406eaa:	inc    esp
  406eab:	mov    ds:0xcb5262c,eax
  406eb0:	push   ss
  406eb1:	push   eax
  406eb2:	inc    esi
  406eb3:	ror    BYTE PTR [ebx],0xff
  406eb6:	aam    0x50
  406eb8:	iret   
  406eb9:	adc    al,bh
  406ebb:	and    BYTE PTR [esi],ch
  406ebd:	push   esp
  406ebe:	xchg   edi,eax
  406ebf:	in     al,dx
  406ec0:	ja     0x406e7e
  406ec2:	enter  0x82a1,0xe5
  406ec6:	cwde   
  406ec7:	and    bl,BYTE PTR [eax+0x6faa417d]
  406ecd:	xlat   BYTE PTR ds:[ebx]
  406ece:	out    dx,al
  406ecf:	mov    ds:0x93411733,al
  406ed4:	and    ebp,ebx
  406ed6:	sub    DWORD PTR [ebp+0x1c],edi
  406ed9:	pop    ebx
  406eda:	(bad)  [edi-0x72]
  406edd:	bound  eax,QWORD PTR [ecx]
  406edf:	fsub   QWORD PTR [edx-0x3832e79f]
  406ee5:	mov    cl,0x39
  406ee7:	mov    edi,0x23e59b92
  406eec:	das    
  406eed:	je     0x406e84
  406eef:	test   ecx,ebx
  406ef1:	aas    
  406ef2:	mov    DWORD PTR [edx+eax*4-0x79b7d6bc],esp
  406ef9:	xor    DWORD PTR [edx],eax
  406efb:	cmp    DWORD PTR [eax+ebx*1-0x5c],esi
  406eff:	pop    ebp
  406f00:	adc    DWORD PTR [ecx+eiz*1+0x4a],edx
  406f04:	sbb    al,0x15
  406f06:	das    
  406f07:	and    ebp,edx
  406f09:	stos   DWORD PTR es:[edi],eax
  406f0a:	lea    ecx,[ebx-0x19e7d7ec]
  406f10:	xchg   edx,eax
  406f11:	ins    BYTE PTR es:[edi],dx
  406f12:	xlat   BYTE PTR ds:[ebx]
  406f13:	cmp    DWORD PTR [esp+ecx*4],esi
  406f16:	ds loope 0x406ef2
  406f19:	test   BYTE PTR [ebx-0x27],ah
  406f1c:	sub    BYTE PTR [esi+edi*2-0x57f5c2de],0x79
  406f24:	cmp    edi,DWORD PTR [esi+eiz*2+0x57]
  406f28:	call   0x3903:0xf44e7aa9
  406f2f:	inc    ebx
  406f30:	ja     0x406f26
  406f32:	dec    eax
  406f33:	lds    eax,FWORD PTR [edi-0x37]
  406f36:	and    eax,0xf97aa2c1
  406f3b:	jbe    0x406ec4
  406f3d:	jae    0x406f1b
  406f3f:	stos   DWORD PTR es:[edi],eax
  406f40:	leave  
  406f41:	add    cl,bl
  406f43:	in     eax,0xa
  406f45:	popa   
  406f46:	jle    0x406fb0
  406f48:	dec    ecx
  406f49:	pop    edx
  406f4a:	adc    esp,DWORD PTR [edi+0x2e41e8e6]
  406f50:	js     0x406f9e
  406f52:	or     ecx,edi
  406f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f55:	sbb    BYTE PTR [esi+eax*4+0x35fe8f75],al
  406f5c:	aam    0x46
  406f5e:	(bad)  
  406f5f:	(bad)  
  406f60:	inc    ebx
  406f61:	and    DWORD PTR [edi-0xe9bcc6],ebp
  406f67:	repz fcom DWORD PTR [eax+0x5fe18f6b]
  406f6e:	test   eax,0x3761e380
  406f73:	adc    al,0x9c
  406f75:	sbb    DWORD PTR [eax-0x78995cb1],eax
  406f7b:	adc    al,0x5c
  406f7d:	xlat   BYTE PTR ds:[ebx]
  406f7e:	sahf   
  406f7f:	scas   al,BYTE PTR es:[edi]
  406f80:	cmp    edi,DWORD PTR [edi-0x3d4924d4]
  406f86:	fdiv   st(1),st
  406f88:	sub    eax,0xab21805f
  406f8d:	iret   
  406f8e:	in     al,dx
  406f8f:	int3   
  406f90:	add    edi,ebx
  406f92:	retf   0x6706
  406f95:	mov    dl,0xee
  406f97:	aaa    
  406f98:	mov    dl,0x75
  406f9a:	sar    BYTE PTR gs:[esi],0x6f
  406f9e:	fisub  WORD PTR [ebx]
  406fa0:	jmp    0x407001
  406fa2:	jecxz  0x406f57
  406fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fa5:	aaa    
  406fa6:	jnp    0x406f75
  406fa8:	inc    esp
  406fa9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  406fab:	xchg   edx,eax
  406fac:	pop    esi
  406fad:	mov    ds:0xdca095f1,eax
  406fb2:	outs   dx,DWORD PTR ds:[esi]
  406fb3:	and    BYTE PTR [si+0xb],dh
  406fb7:	imul   DWORD PTR [esi+0x408d95b7]
  406fbd:	iret   
  406fbe:	neg    DWORD PTR [ecx+0x23623740]
  406fc4:	icebp  
  406fc5:	mov    ds:0x512673c3,eax
  406fca:	adc    dl,bh
  406fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fcd:	les    edi,FWORD PTR [ebx+0x1f]
  406fd0:	adc    DWORD PTR ds:0xaa42c89c,esi
  406fd6:	in     al,dx
  406fd7:	(bad)  
  406fd9:	(bad)  
  406fda:	in     al,dx
  406fdb:	xor    eax,esp
  406fdd:	jmp    0x2229:0x258c60c6
  406fe4:	loopne 0x406fef
  406fe6:	retf   
  406fe7:	lods   al,BYTE PTR ds:[esi]
  406fe8:	not    al
  406fea:	jecxz  0x406fed
  406fec:	imul   edx,DWORD PTR [edi+0x3f],0xffffff97
  406ff0:	xchg   ebp,eax
  406ff1:	pushf  
  406ff2:	loopne 0x406fd1
  406ff4:	(bad)  
  406ff5:	in     eax,0x92
  406ff7:	dec    esp
  406ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ff9:	sub    al,0xb3
  406ffb:	sub    eax,0xb31ea0ed
  407000:	adc    ebp,DWORD PTR [eax+0x39]
  407003:	or     eax,0x9fdecff0
  407008:	popa   
  407009:	pop    edx
  40700a:	mov    dh,0x1b
  40700c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40700d:	inc    edi
  40700e:	je     0x40703f
  407010:	mov    esi,0x2135392e
  407015:	fs push edx
  407017:	mov    BYTE PTR [esi],ch
  407019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40701a:	stos   BYTE PTR es:[edi],al
  40701b:	and    bh,BYTE PTR [edi]
  40701d:	ds out 0x6c,al
  407020:	push   ds
  407021:	addr16 xchg esp,eax
  407023:	pop    es
  407024:	and    eax,0x839cad59
  407029:	sahf   
  40702a:	test   al,0x3c
  40702c:	add    esi,DWORD PTR ds:0x83d05698
  407032:	xor    BYTE PTR [edx+eiz*4+0x141c2150],ch
  407039:	test   DWORD PTR [ebp+0x2a65d69b],ecx
  40703f:	bound  edi,QWORD PTR gs:[eax-0x55]
  407043:	jbe    0x407022
  407045:	imul   edi,DWORD PTR ds:[edi-0x4dc45968],0x6e
  40704d:	dec    ebx
  40704e:	add    ch,BYTE PTR [ecx-0x1e]
  407051:	sub    ch,BYTE PTR [ebx]
  407053:	xchg   esi,eax
  407054:	add    BYTE PTR [esi-0x2c6cf7de],bl
  40705a:	dec    esp
  40705b:	cdq    
  40705c:	ret    
  40705d:	pop    edx
  40705e:	pusha  
  40705f:	out    dx,al
  407060:	adc    BYTE PTR [esi+0x1b],ah
  407063:	jg     0x40704a
  407065:	pop    eax
  407066:	mov    ds:0xa1c8fd38,al
  40706b:	ins    BYTE PTR es:[edi],dx
  40706c:	pop    esi
  40706d:	out    dx,eax
  40706e:	data16 (bad) 
  407070:	std    
  407071:	(bad)  
  407072:	(bad)  
  407073:	in     al,dx
  407074:	sub    eax,0x4ebf7ad7
  407079:	ret    0xad35
  40707c:	jmp    0x6e30aace
  407081:	loop   0x407009
  407083:	or     DWORD PTR [ecx-0x5e],edi
  407086:	ds dec edi
  407088:	lock not dh
  40708b:	inc    esi
  40708c:	(bad)  
  40708d:	jmp    0x34ed58f4
  407092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407093:	mov    eax,0x6cd778fa
  407098:	cmp    ebx,DWORD PTR [ebp-0x3c290b53]
  40709e:	jo     0x407043
  4070a0:	push   ebp
  4070a1:	lods   eax,DWORD PTR ds:[esi]
  4070a2:	dec    edi
  4070a3:	les    esp,FWORD PTR [ebp+0x19]
  4070a6:	mov    ebx,0x374d7272
  4070ab:	mov    al,0xa4
  4070ad:	xchg   ebp,eax
  4070ae:	out    dx,al
  4070af:	dec    ebp
  4070b0:	and    eax,0x527937e
  4070b5:	mov    ecx,0x4ea3e545
  4070ba:	adc    eax,0x5691ca51
  4070bf:	cmp    BYTE PTR [edi],0x63
  4070c2:	cdq    
  4070c3:	push   edx
  4070c4:	lods   al,BYTE PTR ds:[esi]
  4070c5:	sub    DWORD PTR [eax-0x24],esi
  4070c8:	sti    
  4070c9:	mov    ebx,eax
  4070cb:	pop    esi
  4070cc:	xchg   esi,eax
  4070cd:	or     dl,BYTE PTR [ecx+0x51e9b427]
  4070d3:	rol    DWORD PTR [esi+ebp*8-0x5f],1
  4070d7:	mov    ah,0x1f
  4070d9:	mul    BYTE PTR [edi]
  4070db:	adc    dh,BYTE PTR [edi+0x4f]
  4070de:	jne    0x4070da
  4070e0:	inc    eax
  4070e1:	imul   ecx,esp,0xffffffb2
  4070e4:	daa    
  4070e5:	psrlw  mm0,QWORD PTR [ecx-0x48]
  4070e9:	sub    eax,DWORD PTR [esi]
  4070eb:	sub    DWORD PTR [edx-0x10d974d9],eax
  4070f1:	fbld   TBYTE PTR [edi-0x25]
  4070f4:	repnz jecxz 0x40708a
  4070f7:	jno    0x40714b
  4070f9:	inc    edi
  4070fa:	dec    ebx
  4070fb:	cmp    al,0x3e
  4070fd:	mov    BYTE PTR [eax-0x66dbf55c],0x27
  407104:	(bad)  
  407105:	jne    0x4070e4
  407107:	mov    bh,0x75
  407109:	mov    esi,DWORD PTR [eax+0x31]
  40710c:	popf   
  40710d:	out    0x60,al
  40710f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407110:	lahf   
  407111:	xchg   esp,eax
  407112:	add    dh,BYTE PTR [ebx-0x29]
  407115:	daa    
  407116:	shl    ch,1
  407118:	mov    ah,0xde
  40711a:	ja     0x4070ae
  40711c:	repz daa 
  40711e:	or     ah,cl
  407120:	pop    ebp
  407121:	add    eax,0x1b013351
  407126:	pop    ds
  407127:	fiadd  DWORD PTR [ecx+0x73a88ee3]
  40712d:	sub    al,0x56
  40712f:	rcr    DWORD PTR [esi+ebp*4+0xff2e35d],1
  407136:	je     0x4070c8
  407138:	je     0x407126
  40713a:	enter  0x9a40,0xd1
  40713e:	push   ebx
  40713f:	stc    
  407140:	xchg   esi,eax
  407141:	(bad)  
  407142:	lock retf 0x3c3
  407146:	lock test BYTE PTR [eax-0xc],bl
  40714a:	stos   DWORD PTR es:[edi],eax
  40714b:	sbb    BYTE PTR [ebx+esi*2+0x6b73b7cd],bh
  407152:	shr    DWORD PTR [esp+edx*2],1
  407155:	cmc    
  407156:	cmp    al,0x7b
  407158:	arpl   si,bp
  40715a:	or     cl,ah
  40715c:	shl    eax,1
  40715e:	xchg   edi,eax
  40715f:	fs mov ebp,0x40f4ca86
  407165:	mov    ch,0x66
  407167:	retf   
  407168:	push   edx
  407169:	es mov dh,0x33
  40716c:	je     0x40710e
  40716e:	pop    ds
  40716f:	and    al,0x44
  407171:	test   al,dh
  407173:	xchg   edi,eax
  407174:	stos   BYTE PTR es:[edi],al
  407175:	xor    ah,BYTE PTR [edi-0x7f3363aa]
  40717b:	pop    DWORD PTR [edx]
  40717d:	mov    bh,BYTE PTR [edi]
  40717f:	out    0x82,al
  407181:	js     0x407109
  407183:	inc    esi
  407184:	test   DWORD PTR [edx],eax
  407186:	mov    bh,0xec
  407188:	jo     0x40717f
  40718a:	mov    bh,0x7
  40718c:	mov    al,0xa3
  40718e:	sub    DWORD PTR [ecx+0x1980f31f],0x52b5d04a
  407198:	ja     0x40718f
  40719a:	fisubr DWORD PTR [esi]
  40719c:	cmp    ch,BYTE PTR [eax+0x4ab6454b]
  4071a2:	js     0x407218
  4071a4:	ds retf 0x2526
  4071a8:	out    dx,al
  4071a9:	sub    al,0xca
  4071ab:	scas   al,BYTE PTR es:[edi]
  4071ac:	cmp    bh,al
  4071ae:	and    DWORD PTR [ebx],ebx
  4071b0:	fild   QWORD PTR [ecx+0x20]
  4071b3:	push   cs
  4071b4:	(bad)  
  4071b5:	sar    BYTE PTR [ebx-0x15],1
  4071b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071b9:	hlt    
  4071ba:	test   BYTE PTR [eax-0x29],0x49
  4071be:	xor    DWORD PTR [eax+0x7361eca8],edx
  4071c4:	or     ebp,DWORD PTR [edi]
  4071c6:	inc    ebp
  4071c7:	aam    0x78
  4071c9:	mov    ah,bh
  4071cb:	xchg   esp,eax
  4071cc:	dec    edx
  4071cd:	and    eax,0x634c5e61
  4071d2:	aaa    
  4071d3:	push   0x19fc0108
  4071d8:	scas   eax,DWORD PTR es:[edi]
  4071d9:	pop    ebx
  4071da:	stc    
  4071db:	add    ebx,DWORD PTR [esi+eiz*8]
  4071de:	inc    ebp
  4071df:	stos   BYTE PTR es:[edi],al
  4071e0:	add    cl,BYTE PTR [ecx-0x6c068a47]
  4071e6:	add    bh,BYTE PTR [esi]
  4071e8:	daa    
  4071e9:	cmp    BYTE PTR [edx],bl
  4071eb:	cmp    eax,0xa9f02a52
  4071f0:	mov    ebp,0xf6025bfb
  4071f5:	inc    ecx
  4071f6:	mov    DWORD PTR [ebp-0x42],edx
  4071f9:	lods   eax,DWORD PTR ds:[esi]
  4071fa:	mov    dh,0x6c
  4071fc:	mov    edi,0x726f27a1
  407201:	ins    DWORD PTR es:[edi],dx
  407202:	fs xchg ecx,eax
  407204:	in     al,0xfc
  407206:	outs   dx,DWORD PTR ds:[esi]
  407207:	push   ecx
  407208:	or     BYTE PTR [edx+0x7e46bd8f],0xf
  40720f:	jl     0x407235
  407211:	pop    ss
  407212:	add    BYTE PTR [esi+0x70],al
  407215:	rcr    BYTE PTR [edi-0x32],0x28
  407219:	dec    ebp
  40721a:	pop    ebp
  40721b:	xchg   ebp,eax
  40721c:	add    al,ch
  40721e:	inc    esi
  40721f:	add    eax,0x2e774f01
  407224:	xor    al,0xb5
  407226:	jmp    0x407214
  407228:	mov    cl,0xef
  40722a:	pop    ss
  40722b:	mov    ebp,0xcfecec75
  407230:	test   BYTE PTR [edi],dh
  407232:	(bad)  
  407234:	je     0x40726f
  407236:	mov    esi,0xe93bf21b
  40723b:	jmp    0xef4f:0xe0b1d511
  407242:	jp     0x40727d
  407244:	dec    DWORD PTR [edx+0x3377b505]
  40724a:	arpl   bx,bx
  40724c:	adc    ch,BYTE PTR [edx]
  40724e:	and    BYTE PTR [ebx],dh
  407250:	(bad)  
  407251:	fisubr DWORD PTR [ecx+0x1a]
  407254:	sub    DWORD PTR [ebp-0x52],eax
  407257:	adc    al,0xc6
  407259:	test   al,0x36
  40725b:	xchg   esp,eax
  40725c:	sbb    al,0xcc
  40725e:	dec    esi
  40725f:	call   0xe15cb2f8
  407264:	jae    0x4072c0
  407266:	sub    al,0x9
  407268:	lea    esi,[edi+0x40e810a0]
  40726e:	add    cl,BYTE PTR [edi]
  407270:	int    0x97
  407272:	push   ebx
  407273:	push   ebp
  407274:	adc    esi,DWORD PTR [edx]
  407276:	xor    eax,0xdee6fa2f
  40727b:	or     eax,0xa33602f8
  407280:	push   es
  407281:	ficom  DWORD PTR [eax+ecx*1+0x1a]
  407285:	mov    ch,0xcc
  407287:	daa    
  407288:	or     al,0xc0
  40728a:	mov    bh,0x7e
  40728c:	and    eax,0x99f66937
  407291:	mov    ah,0x18
  407293:	mov    dh,0x20
  407295:	adc    edi,ecx
  407297:	aaa    
  407298:	je     0x4072e5
  40729a:	and    BYTE PTR [ebp+0x64801ee6],0x2d
  4072a1:	mov    esp,0xf01e6fc5
  4072a6:	nop
  4072a7:	push   esi
  4072a8:	(bad)  
  4072aa:	test   DWORD PTR [ecx],esi
  4072ac:	cmp    DWORD PTR [edx+0x60],ecx
  4072af:	int    0x9b
  4072b1:	bound  edx,QWORD PTR [ebx-0x5df22f69]
  4072b7:	mov    edi,0xe1c90e09
  4072bc:	add    DWORD PTR ds:0x3ff5,ebx
  4072c1:	std    
  4072c2:	lods   eax,DWORD PTR ds:[esi]
  4072c3:	repnz aam 0x43
  4072c6:	das    
  4072c7:	mov    WORD PTR [edi+ebx*4+0x28],gs
  4072cb:	cdq    
  4072cc:	fdivr  DWORD PTR [ebp+0x65606b7f]
  4072d2:	jecxz  0x4072c1
  4072d4:	ficomp WORD PTR [eax+0x5c]
  4072d7:	pop    edi
  4072d8:	cmp    dh,ah
  4072da:	xor    esp,edi
  4072dc:	pop    ebp
  4072dd:	mov    al,0xa5
  4072df:	scas   eax,DWORD PTR es:[edi]
  4072e0:	jne    0x4072d2
  4072e2:	shl    DWORD PTR [edx],0xc9
  4072e5:	repz dec ebx
  4072e7:	bound  esp,QWORD PTR [ecx-0x5a16e4e]
  4072ed:	sub    ch,dl
  4072ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072f0:	(bad)  
  4072f1:	ins    DWORD PTR es:[edi],dx
  4072f2:	push   ecx
  4072f3:	push   eax
  4072f4:	out    0xa8,eax
  4072f6:	jo     0x4072b9
  4072f8:	push   ebx
  4072f9:	mov    al,0x3f
  4072fb:	dec    ebx
  4072fc:	mov    esi,DWORD PTR [esi-0x5]
  4072ff:	adc    eax,DWORD PTR [eax]
  407301:	mov    edx,0x8671d127
  407306:	dec    esi
  407307:	(bad)  
  407308:	dec    eax
  407309:	jg     0x40729c
  40730b:	inc    esp
  40730c:	out    0xda,al
  40730e:	xchg   esi,eax
  40730f:	xor    cl,BYTE PTR [edx+0x20]
  407312:	push   ss
  407313:	pop    ds
  407314:	inc    ecx
  407315:	shl    DWORD PTR [eax],cl
  407317:	lahf   
  407318:	jge    0x4072b1
  40731a:	push   ss
  40731b:	jbe    0x4072fe
  40731d:	std    
  40731e:	inc    esp
  40731f:	stc    
  407320:	test   al,0xd1
  407322:	pop    ss
  407323:	fidiv  WORD PTR [ecx-0x77]
  407326:	push   ss
  407327:	ins    DWORD PTR es:[edi],dx
  407328:	bnd jae 0x407329
  40732b:	mov    ds:0xec8e22b7,al
  407330:	jg     0x407336
  407332:	xchg   DWORD PTR [ebx+0x4f],ebp
  407335:	fadd   st(3),st
  407337:	or     al,0x46
  407339:	out    0x69,al
  40733b:	inc    eax
  40733c:	fsubr  st(2),st
  40733e:	shl    DWORD PTR [ebx-0x18],1
  407341:	mov    bh,0xb1
  407343:	pmaddwd mm2,QWORD PTR [edi-0x53]
  407347:	jnp    0x407337
  407349:	outs   dx,DWORD PTR ds:[esi]
  40734a:	addr16 xchg esi,eax
  40734c:	mov    al,ds:0x517a11ac
  407351:	mov    ebp,0xcb5d8c1d
  407356:	push   edx
  407357:	rcl    BYTE PTR [ecx+0x1ddf69ea],0xc7
  40735e:	daa    
  40735f:	add    al,0xa8
  407361:	sbb    eax,0x3c9745f9
  407366:	pop    ds
  407367:	aas    
  407368:	test   eax,0x778ee08b
  40736d:	jno    0x4073c3
  40736f:	jb     0x40739d
  407371:	mov    ecx,0x37d08d7
  407376:	in     al,dx
  407377:	jo     0x407393
  407379:	sub    al,0xe1
  40737b:	(bad)  
  40737c:	jnp    0x4073c8
  40737e:	test   BYTE PTR [esi+ebp*2+0x5a],0x2b
  407383:	(bad)  
  407384:	leave  
  407385:	mov    BYTE PTR [eax+0x67],bh
  407388:	jbe    0x4073e0
  40738a:	and    ecx,ebp
  40738c:	stos   BYTE PTR es:[edi],al
  40738d:	lock dec eax
  40738f:	xor    DWORD PTR [ebx-0x4e],edx
  407392:	test   al,0xde
  407394:	push   0xffffff91
  407396:	mov    al,ds:0xe170d51
  40739b:	cmp    BYTE PTR [eax+eiz*8+0x3f],bl
  40739f:	retf   0x1b2b
  4073a2:	push   esi
  4073a3:	cwde   
  4073a4:	cs inc edx
  4073a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073a7:	mov    esi,0x891932d0
  4073ac:	xor    al,0x10
  4073ae:	fisub  DWORD PTR [ecx+0x4c307eb1]
  4073b4:	pop    es
  4073b5:	cmc    
  4073b6:	test   al,0xcf
  4073b8:	xchg   ebp,eax
  4073b9:	ret    0x25a
  4073bc:	xchg   ebx,eax
  4073bd:	jo     0x4073d6
  4073bf:	xchg   bl,al
  4073c1:	bt     DWORD PTR [ebx-0x53],esi
  4073c5:	push   ecx
  4073c6:	jb     0x4073c3
  4073c8:	daa    
  4073c9:	jmp    0xbf06:0xf3fd1832
  4073d0:	lods   eax,DWORD PTR ds:[esi]
  4073d1:	icebp  
  4073d2:	push   ebx
  4073d3:	jp     0x40740e
  4073d5:	mov    ebx,0x23232d52
  4073da:	push   cs
  4073db:	dec    edx
  4073dc:	cld    
  4073dd:	mov    WORD PTR [eax+0x18b3a215],ss
  4073e3:	das    
  4073e4:	push   0xffffffb9
  4073e6:	je     0x4073a6
  4073e8:	pushf  
  4073e9:	jb     0x407447
  4073eb:	inc    esi
  4073ec:	popa   
  4073ed:	push   esi
  4073ee:	pop    ds
  4073ef:	cmp    eax,0x51d6a960
  4073f4:	jl     0x40746d
  4073f6:	ja     0x4073a7
  4073f8:	lds    eax,FWORD PTR [eax]
  4073fa:	xor    DWORD PTR [edi+0x41fddbe0],esi
  407400:	and    BYTE PTR [ecx],ch
  407402:	fwait
  407403:	rcl    dl,0xde
  407406:	scas   eax,DWORD PTR es:[edi]
  407407:	mov    ebp,0xf0bd6923
  40740c:	fs or  al,0xa7
  40740f:	sahf   
  407410:	mov    ebp,0x9084b29c
  407415:	mov    al,0xf8
  407417:	add    ecx,0x7f787586
  40741d:	mov    DWORD PTR [esi+0x68d5cc41],0xbc6f9b13
  407427:	aad    0x5d
  407429:	iret   
  40742a:	sar    DWORD PTR [ebp+0x2d7d1fe],0x8d
  407431:	arpl   WORD PTR [esi],bx
  407433:	sub    BYTE PTR [ebp+ecx*1+0x51151961],al
  40743a:	imul   ebp,edx,0xee397e84
  407440:	fldcw  WORD PTR [ebp+0x1]
  407443:	cmc    
  407444:	out    0xd5,al
  407446:	out    dx,al
  407447:	out    0x6b,eax
  407449:	add    dh,BYTE PTR [edi-0x45fd8783]
  40744f:	out    0xa2,ax
  407452:	and    al,0x55
  407454:	adc    eax,esi
  407456:	shr    DWORD PTR [edi-0x70],cl
  407459:	xchg   ebp,eax
  40745a:	out    0xc1,eax
  40745c:	repnz and BYTE PTR [ecx+eiz*8+0x12],dh
  407461:	pop    ss
  407462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407463:	dec    ebp
  407464:	pop    edi
  407465:	push   ebx
  407466:	ret    
  407467:	xchg   esp,eax
  407468:	pop    DWORD PTR [edx+0x4baca93b]
  40746e:	test   DWORD PTR [edi-0x1b3415da],eax
  407474:	rol    DWORD PTR ds:0x17e2e37b,cl
  40747a:	fsub   QWORD PTR ds:0xc794dcf9
  407480:	xor    dl,al
  407482:	or     DWORD PTR [esi+0x3a],edi
  407485:	lock or esp,DWORD PTR [ebp+0x5e13aa0a]
  40748c:	repz popf 
  40748e:	cli    
  40748f:	push   0xffffffb7
  407491:	repz xor esi,DWORD PTR [esi+edi*2+0x6b]
  407496:	pusha  
  407497:	push   0x4ebb01b4
  40749c:	xchg   ebx,eax
  40749d:	aam    0xcf
  40749f:	xchg   edx,eax
  4074a0:	mov    ss,ebx
  4074a2:	cld    
  4074a3:	xlat   BYTE PTR ds:[ebx]
  4074a4:	jae    0x4074c9
  4074a6:	loopne 0x4074b4
  4074a8:	in     al,dx
  4074a9:	addr16 cwde 
  4074ab:	(bad)  
  4074ac:	mov    edi,0xe54cb3c6
  4074b1:	int3   
  4074b2:	inc    edi
  4074b3:	dec    ebp
  4074b4:	sbb    edi,DWORD PTR [eax-0xf]
  4074b7:	imul   ecx,eax,0xaa363704
  4074bd:	mov    esi,esi
  4074bf:	fptan  
  4074c1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4074c3:	xlat   BYTE PTR ds:[ebx]
  4074c4:	in     eax,dx
  4074c5:	inc    edx
  4074c6:	and    eax,0xfd12c743
  4074cb:	mov    ebx,0x4604e7be
  4074d0:	cmp    bh,BYTE PTR [ecx+eiz*2]
  4074d3:	and    bl,BYTE PTR [ecx]
  4074d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074d6:	sbb    eax,0x7471c665
  4074db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074dd:	cmp    eax,0x75c73e58
  4074e2:	jne    0x407534
  4074e4:	adc    eax,DWORD PTR [edx+0xc]
  4074e7:	fdivrp st(7),st
  4074e9:	ror    BYTE PTR [edx+0x7efbbc83],1
  4074ef:	sbb    ah,BYTE PTR [eax-0x5c7778f7]
  4074f5:	fst    st(7)
  4074f7:	cmc    
  4074f8:	xor    al,0x7f
  4074fa:	icebp  
  4074fb:	jge    0x407574
  4074fd:	dec    ebp
  4074fe:	xor    al,0x1b
  407500:	xchg   ecx,eax
  407501:	mov    bl,0xc
  407503:	jnp    0x4074d4
  407505:	xchg   DWORD PTR fs:[edx-0x739e05cc],ebp
  40750c:	icebp  
  40750d:	add    dl,bh
  40750f:	xlat   BYTE PTR fs:[ebx]
  407511:	sbb    cl,BYTE PTR [ecx-0x24a7e7ab]
  407517:	xor    al,0xac
  407519:	ret    
  40751a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40751b:	inc    edi
  40751c:	bound  edi,QWORD PTR [edi+0x20]
  40751f:	add    al,0x1f
  407521:	adc    eax,0xc9caf259
  407526:	jnp    0x40751d
  407528:	loopne 0x40753d
  40752a:	sub    BYTE PTR [ebx],dl
  40752c:	dec    esi
  40752d:	cmp    DWORD PTR [eiz*8-0x3679765],0x15
  407535:	test   BYTE PTR ds:0x8195c1d1,ah
  40753b:	inc    edi
  40753c:	int    0x79
  40753e:	fild   DWORD PTR [edi+ebx*4+0x40]
  407542:	nop
  407543:	push   0xfc1b427
  407548:	fmulp  st(2),st
  40754a:	(bad)  
  40754b:	repnz sbb esp,DWORD PTR [eax+0x474b0667]
  407552:	sti    
  407553:	ds sahf 
  407555:	(bad)  
  407556:	into   
  407557:	add    BYTE PTR [eax],ch
  407559:	add    DWORD PTR [ebp+0x3a2e0fa9],esp
  40755f:	xchg   esp,eax
  407560:	inc    esp
  407561:	mov    edi,DWORD PTR [ebx]
  407563:	mov    ds:0xd8aa31f8,eax
  407568:	xchg   esi,eax
  407569:	dec    eax
  40756a:	icebp  
  40756b:	jl     0x40758b
  40756d:	fcmovu st,st(6)
  40756f:	push   ss
  407570:	mov    ebx,eax
  407572:	and    al,0x65
  407574:	in     eax,0x6d
  407576:	gs popf 
  407578:	icebp  
  407579:	mov    bh,0x17
  40757b:	mov    DWORD PTR [edi+0x55],ebp
  40757e:	(bad)  
  40757f:	mov    ch,BYTE PTR [edi-0x6b8af9ab]
  407585:	ins    DWORD PTR es:[edi],dx
  407586:	jb     0x4075b0
  407588:	dec    edx
  407589:	push   ss
  40758a:	xchg   edi,eax
  40758b:	int    0x54
  40758d:	push   ds
  40758e:	(bad)  
  407590:	cmp    dh,bl
  407592:	add    DWORD PTR [ebp-0x4d],ebx
  407595:	push   eax
  407596:	daa    
  407597:	in     al,dx
  407598:	addr16 add al,0xae
  40759b:	(bad)  
  40759c:	inc    esp
  40759d:	push   ss
  40759e:	fisubr WORD PTR [edi+ebx*4+0x126fc6f6]
  4075a5:	popa   
  4075a6:	dec    ebp
  4075a7:	or     edx,edi
  4075a9:	jge    0x40759d
  4075ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ac:	jnp    0x4075ef
  4075ae:	mov    cl,0xe9
  4075b0:	in     eax,dx
  4075b1:	das    
  4075b2:	mov    esp,0x7d933acb
  4075b7:	cmp    DWORD PTR [edx],0xf7561446
  4075bd:	fsubr  QWORD PTR [ebp+0xf]
  4075c0:	and    BYTE PTR [edi+0x77ea7687],bl
  4075c6:	fistp  WORD PTR [ebp+0x33a4bd7]
  4075cc:	test   BYTE PTR [ebp-0x183d4f3a],0x89
  4075d3:	test   al,0x92
  4075d5:	call   0xb672:0xd1bbf55a
  4075dc:	(bad)  
  4075dd:	lea    edi,[edx]
  4075df:	movsx  edx,bl
  4075e2:	adc    cl,ah
  4075e4:	jae    0x407610
  4075e6:	ds icebp 
  4075e8:	fdiv   QWORD PTR [esi+0x3cef610a]
  4075ee:	(bad)  
  4075f0:	mov    bh,0xae
  4075f2:	adc    BYTE PTR [ebx+0x25],dl
  4075f5:	cmp    DWORD PTR [ecx],0xb3600924
  4075fb:	mov    bl,BYTE PTR [edi+0x624a1b1f]
  407601:	outs   dx,BYTE PTR ds:[esi]
  407602:	fisub  WORD PTR ds:0xd967992
  407608:	mov    al,ds:0xc30b9a5a
  40760d:	xor    eax,0xc2672a63
  407612:	fdivr  DWORD PTR [edx-0x2b]
  407615:	hlt    
  407616:	xchg   ebp,eax
  407617:	jge    0x4075bc
  407619:	push   edx
  40761a:	std    
  40761b:	sbb    ecx,DWORD PTR [esi-0x444d7f6a]
  407621:	adc    al,BYTE PTR [ebx+0x54889b87]
  407627:	sahf   
  407628:	das    
  407629:	jno    0x4075f8
  40762b:	mov    bl,0x73
  40762d:	rcl    BYTE PTR [ebx-0x2c],0x52
  407631:	cld    
  407632:	(bad)  
  407634:	add    DWORD PTR [ecx],ebx
  407636:	ja     0x40764f
  407638:	add    eax,0xcb40fe11
  40763d:	inc    ecx
  40763e:	cmp    esi,DWORD PTR [eax]
  407640:	add    eax,0x6e87b575
  407645:	les    esp,FWORD PTR [edi]
  407647:	pop    eax
  407648:	mov    ch,0xec
  40764a:	inc    edx
  40764b:	jbe    0x407688
  40764d:	add    BYTE PTR [esp+eax*1-0x4b8ce863],cl
  407654:	je     0x4075f8
  407656:	add    DWORD PTR [edx-0x40e25e27],eax
  40765c:	xchg   esp,eax
  40765d:	scas   eax,DWORD PTR es:[edi]
  40765e:	(bad)  
  407661:	or     al,0xd4
  407663:	ss ins DWORD PTR es:[di],dx
  407666:	add    al,0x6e
  407668:	jl     0x40766e
  40766a:	(bad)  
  40766b:	lods   eax,DWORD PTR ds:[esi]
  40766c:	pop    es
  40766d:	sub    DWORD PTR [edx-0x63],edx
  407670:	fadd   DWORD PTR [edi-0x40]
  407673:	sbb    ebp,esi
  407675:	popa   
  407676:	idiv   DWORD PTR [ebx]
  407678:	int3   
  407679:	xor    DWORD PTR [edi+ebp*1-0x1f],ebx
  40767d:	sub    eax,0x65c4d5d1
  407682:	jo     0x407682
  407684:	test   eax,ecx
  407686:	in     al,dx
  407687:	icebp  
  407688:	ds int 0x4b
  40768b:	in     eax,dx
  40768c:	jge    0x407698
  40768e:	lock push esi
  407690:	cli    
  407691:	out    0x1,al
  407693:	repz std 
  407695:	add    esp,DWORD PTR [esi+ebp*4-0x72]
  407699:	test   eax,0xb8686397
  40769e:	or     esi,DWORD PTR [ecx+0x0]
  4076a1:	inc    esi
  4076a2:	inc    ebp
  4076a3:	(bad)  
  4076a4:	imul   ebx,edx,0x42
  4076a7:	xchg   esp,eax
  4076a8:	and    edx,ebx
  4076aa:	or     BYTE PTR [eax+edi*4],al
  4076ad:	fild   WORD PTR [edi+eiz*4+0x56a9e736]
  4076b4:	fcmovnu st,st(3)
  4076b6:	push   0x6d
  4076b8:	jae    0x40765d
  4076ba:	inc    ebp
  4076bb:	mov    BYTE PTR [edx+0x6f9debb3],bh
  4076c1:	mov    DWORD PTR [edx-0x6e],eax
  4076c4:	push   esi
  4076c5:	retf   
  4076c6:	mov    al,ds:0x1864e92a
  4076cb:	retf   0x9f54
  4076ce:	xchg   ecx,eax
  4076cf:	sub    bl,bh
  4076d1:	(bad)  
  4076d2:	sbb    eax,0x172c0ddd
  4076d7:	push   cs
  4076d8:	sar    DWORD PTR [ecx],1
  4076da:	mov    edx,0xbd157050
  4076df:	aam    0x7c
  4076e1:	shl    BYTE PTR [ebx+eiz*4+0x1a2e8f3b],0x90
  4076e9:	daa    
  4076ea:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076ec:	adc    esp,DWORD PTR [edi+0x196a3857]
  4076f2:	pop    ss
  4076f3:	or     edi,DWORD PTR [eax+0x68]
  4076f6:	mov    dh,0x9a
  4076f8:	sub    ecx,DWORD PTR [edi-0x5f]
  4076fb:	add    eax,edx
  4076fd:	cs mov esp,0x1f6845e3
  407703:	out    dx,eax
  407704:	iret   
  407705:	fistp  DWORD PTR [ebp+0x38f5670c]
  40770b:	push   esi
  40770c:	mov    DWORD PTR [edx+0x5],ecx
  40770f:	ja     0x407765
  407711:	fadd   QWORD PTR [ebx+0x3]
  407714:	lods   eax,DWORD PTR ds:[esi]
  407715:	dec    ecx
  407716:	out    0x36,al
  407718:	cdq    
  407719:	rcr    DWORD PTR [ecx],cl
  40771b:	or     bh,cl
  40771d:	cmp    DWORD PTR [edx+ecx*1],esi
  407720:	cdq    
  407721:	adc    eax,0xbc8d036e
  407726:	dec    ax
  407728:	sub    ebx,esi
  40772a:	aas    
  40772b:	sub    eax,0x12675b2a
  407730:	std    
  407731:	icebp  
  407732:	xchg   ecx,eax
  407733:	mov    ss,WORD PTR [ecx]
  407735:	fwait
  407736:	xor    DWORD PTR [eax+0x3a],esp
  407739:	push   ecx
  40773a:	add    esi,DWORD PTR es:[ebp-0x5c1df6d1]
  407741:	xchg   ebp,eax
  407742:	in     eax,0x9
  407744:	and    al,0xc5
  407746:	test   DWORD PTR [edx],ebp
  407748:	ss into 
  40774a:	inc    eax
  40774b:	std    
  40774c:	out    0x4b,al
  40774e:	push   eax
  40774f:	xor    BYTE PTR [esp+eiz*8-0x31dfba31],ch
  407756:	fstp   QWORD PTR [edi+0x785a24df]
  40775c:	fcomi  st,st(4)
  40775e:	fldcw  WORD PTR [edi+0xd4946d4]
  407764:	jbe    0x4077d3
  407766:	loope  0x4077b5
  407768:	into   
  407769:	push   esp
  40776a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40776b:	adc    edi,edx
  40776d:	test   al,0xe4
  40776f:	fdivr  st(4),st
  407771:	int    0x5d
  407773:	sub    al,BYTE PTR [eax-0xf0e32c6]
  407779:	sub    BYTE PTR [ebx-0xa39866],bh
  40777f:	ret    
  407780:	push   ss
  407781:	jmp    0x40776a
  407783:	jns    0x4077a7
  407785:	or     edx,esi
  407787:	inc    eax
  407788:	aaa    
  407789:	push   ds
  40778a:	mov    ch,dh
  40778c:	stos   DWORD PTR es:[edi],eax
  40778d:	aas    
  40778e:	aad    0x81
  407790:	push   ecx
  407791:	aaa    
  407792:	jae    0x4077f9
  407794:	scas   al,BYTE PTR es:[edi]
  407795:	clc    
  407796:	and    DWORD PTR [ebx+0x17],edx
  407799:	push   ds
  40779a:	cs sti 
  40779c:	(bad)  
  40779d:	in     al,0xe8
  40779f:	je     0x4077de
  4077a1:	push   ecx
  4077a2:	jnp    0x407822
  4077a4:	sub    BYTE PTR [ebx+0x491e1808],ch
  4077aa:	imul   esi,DWORD PTR [ebp-0x4c],0xac3f0cbc
  4077b1:	push   ecx
  4077b2:	fdecstp 
  4077b4:	lahf   
  4077b5:	mov    cl,0x49
  4077b7:	adc    al,0x53
  4077b9:	adc    bh,BYTE PTR [eax+0x9bc2faf]
  4077bf:	dec    esp
  4077c0:	pusha  
  4077c1:	push   0x23b59f4c
  4077c6:	jmp    0x8f34aa55
  4077cb:	jne    0x407790
  4077cd:	adc    al,al
  4077cf:	lock or BYTE PTR [eax-0x2cb8923b],bh
  4077d6:	sbb    bl,bh
  4077d8:	popa   
  4077d9:	pop    esp
  4077da:	and    eax,0x358d84fc
  4077df:	scas   al,BYTE PTR es:[edi]
  4077e0:	dec    ecx
  4077e1:	ret    0x3db3
  4077e4:	mov    ds:0x9a981585,al
  4077e9:	ja     0x40778e
  4077eb:	cli    
  4077ec:	xor    edx,DWORD PTR [eax+ebx*4+0x6e5ccb9]
  4077f3:	and    edi,DWORD PTR [esi]
  4077f5:	fidiv  WORD PTR [edx+eax*2]
  4077f8:	rcl    DWORD PTR [ebx],cl
  4077fa:	out    0xc7,eax
  4077fc:	stc    
  4077fd:	sahf   
  4077fe:	call   0x7dcf:0x2c28
  407804:	mov    esp,0x9a07d3c7
  407809:	(bad)  
  40780a:	popa   
  40780b:	mov    ?,ebx
  40780d:	jbe    0x40779e
  40780f:	push   ss
  407810:	or     ebp,eax
  407812:	mov    ebx,0x44383e9
  407817:	cmp    al,0x52
  407819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40781a:	pop    esp
  40781b:	xor    al,0xa6
  40781d:	sub    esp,DWORD PTR [esp+eax*4]
  407820:	test   BYTE PTR [ecx+0x33737d2],0xa5
  407827:	sbb    eax,0x3635276d
  40782c:	dec    eax
  40782d:	loop   0x407857
  40782f:	ror    BYTE PTR [eax],cl
  407831:	jo     0x40785b
  407833:	bound  eax,QWORD PTR [ecx]
  407835:	ficomp DWORD PTR [eax+0x66]
  407838:	out    dx,eax
  407839:	xchg   edi,eax
  40783a:	mov    bh,BYTE PTR [eax]
  40783c:	addr16 push 0x9
  40783f:	sbb    DWORD PTR [edx+0x5b],ebp
  407842:	mov    ch,0xfd
  407844:	dec    eax
  407845:	pop    es
  407846:	sahf   
  407847:	sbb    DWORD PTR [ecx+0x7f560616],0x69
  40784e:	stos   DWORD PTR es:[edi],eax
  40784f:	xlat   BYTE PTR ds:[ebx]
  407850:	ja     0x4078cf
  407852:	adc    ch,BYTE PTR [ebp+0x32]
  407855:	adc    al,0xcd
  407857:	int3   
  407858:	jno    0x40782a
  40785a:	ret    0xc0d7
  40785d:	pop    ecx
  40785e:	inc    esi
  40785f:	sahf   
  407860:	jns    0x4078c9
  407862:	push   esi
  407863:	sub    ch,al
  407865:	nop
  407866:	call   0x21ed0942
  40786b:	pop    eax
  40786c:	loopne 0x407810
  40786e:	test   eax,0x7d820cd
  407873:	jns    0x40780a
  407875:	jg     0x4078c7
  407877:	mov    ds:0x6eecf5ab,al
  40787c:	pop    ds
  40787d:	aad    0xa8
  40787f:	jl     0x4078e5
  407881:	inc    ebp
  407882:	mov    edx,0xe924de9f
  407887:	push   esp
  407888:	mov    dl,BYTE PTR [esp+esi*2-0x79226db3]
  40788f:	pop    ds
  407890:	dec    ecx
  407891:	nop
  407892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407893:	cld    
  407894:	xchg   edi,eax
  407895:	jge    0x40787e
  407897:	das    
  407898:	or     al,0x2b
  40789a:	push   esp
  40789b:	out    0xe8,eax
  40789d:	xchg   ah,ch
  40789f:	mov    ecx,gs
  4078a1:	add    eax,DWORD PTR [esp-0x4d131f17]
  4078a8:	pop    ebx
  4078a9:	and    BYTE PTR [ecx-0x49],0xc6
  4078ad:	js     0x4078ea
  4078af:	enter  0x8281,0xc3
  4078b3:	int    0xb5
  4078b5:	(bad)  
  4078b6:	retf   
  4078b7:	cmc    
  4078b8:	adc    ecx,DWORD PTR [esp+ebp*1-0x37dbb7cd]
  4078bf:	jnp    0x4078da
  4078c1:	out    dx,al
  4078c2:	aam    0x8c
  4078c4:	cdq    
  4078c5:	xchg   ebp,eax
  4078c6:	push   ds
  4078c7:	scas   eax,DWORD PTR es:[edi]
  4078c8:	jle    0x4078a8
  4078ca:	shr    BYTE PTR [ebx+eax*8],cl
  4078cd:	mov    WORD PTR [eax],ss
  4078cf:	adc    eax,0xddbee22f
  4078d4:	dec    edx
  4078d5:	mov    dl,0x5b
  4078d7:	xor    DWORD PTR ds:0x3adc9f1e,ebp
  4078dd:	out    0xf1,al
  4078df:	neg    BYTE PTR [edx]
  4078e1:	(bad)  
  4078e3:	cmp    eax,0x806863cd
  4078e8:	dec    ecx
  4078e9:	or     al,0xe5
  4078eb:	leave  
  4078ec:	add    dh,BYTE PTR [ebx]
  4078ee:	aam    0x54
  4078f0:	add    DWORD PTR [esi],ebp
  4078f2:	mov    dl,BYTE PTR ds:0xcd842d42
  4078f8:	cli    
  4078f9:	jg     0x4078ce
  4078fb:	xlat   BYTE PTR ds:[ebx]
  4078fc:	shl    DWORD PTR [ebx],cl
  4078fe:	sub    eax,0x580f8fa4
  407903:	dec    ebx
  407904:	mov    eax,0x8387a47a
  407909:	in     eax,0x53
  40790b:	sbb    DWORD PTR [ecx-0x2c],0x76
  40790f:	mov    ebx,0x2edd625a
  407914:	jno    0x4078c2
  407916:	aam    0x8
  407918:	jge    0x407942
  40791a:	sbb    al,0x8
  40791c:	js     0x4078e9
  40791e:	dec    esp
  40791f:	xor    dh,dl
  407921:	push   esp
  407922:	mov    DWORD PTR [ebx+0xa],edi
  407925:	mov    WORD PTR [ecx],cs
  407927:	sub    al,0x8b
  407929:	pop    edi
  40792a:	out    dx,al
  40792b:	retf   0x665d
  40792e:	or     eax,0xf7d0e0bc
  407933:	mov    ds:0xe99e3d69,eax
  407938:	test   eax,0x8e39970a
  40793d:	in     al,0xd5
  40793f:	(bad)  
  407940:	lods   al,BYTE PTR ds:[esi]
  407941:	dec    esp
  407942:	adc    DWORD PTR [ecx-0x6b28984a],ebx
  407948:	iret   
  407949:	imul   esi,DWORD PTR [edx+eiz*1+0x78],0xffffffbc
  40794e:	sbb    eax,0x2cfbc567
  407953:	mov    dh,0x1d
  407955:	(bad)  
  407956:	add    esp,DWORD PTR [edx]
  407958:	xor    BYTE PTR [eax-0x718f71f6],bh
  40795e:	and    bl,dh
  407960:	aam    0x55
  407962:	(bad)  
  407963:	jle    0x407960
  407965:	add    al,0xe7
  407967:	jbe    0x4079e0
  407969:	push   ecx
  40796a:	(bad)  
  40796c:	mov    DWORD PTR [ecx-0xca885d9],ecx
  407972:	pop    edi
  407973:	push   0xaa1c0a49
  407978:	imul   ebx,DWORD PTR [eax-0x44],0x4cda4d88
  40797f:	or     BYTE PTR [eax-0x474bde4],cl
  407985:	sub    eax,DWORD PTR [eax+0x3aee39c4]
  40798b:	cmp    esi,DWORD PTR [ebx]
  40798d:	mov    BYTE PTR [ebp-0x67],ah
  407990:	cmp    al,0x58
  407992:	fbld   TBYTE PTR [edi-0x536dceb8]
  407998:	imul   esi,DWORD PTR [edi-0x34],0xea872ee5
  40799f:	out    dx,al
  4079a0:	repz mov bh,0xb4
  4079a3:	popa   
  4079a4:	sahf   
  4079a5:	add    esp,DWORD PTR [ebp+0x7e156e9f]
  4079ab:	xchg   ebp,eax
  4079ac:	data16 loopne 0x407995
  4079af:	in     al,0xc4
  4079b1:	jns    0x407a1b
  4079b3:	test   esp,edi
  4079b5:	xchg   DWORD PTR [edx-0x3e],edi
  4079b8:	adc    ecx,DWORD PTR [ecx+0x54]
  4079bb:	xchg   edx,eax
  4079bc:	sbb    eax,ebp
  4079be:	adc    eax,0x3973d51b
  4079c3:	cwde   
  4079c4:	xor    BYTE PTR [ebp-0x19],bh
  4079c7:	inc    DWORD PTR [esi]
  4079c9:	jmp    0x407963
  4079cb:	xchg   ecx,eax
  4079cc:	dec    ebx
  4079cd:	js     0x4079a9
  4079cf:	fld    st(7)
  4079d1:	mov    ds:0x9ccae5db,eax
  4079d6:	cmp    eax,0x802f17a1
  4079db:	mov    edx,0xd4879300
  4079e0:	jmp    0xdb17cab2
  4079e5:	sbb    bh,bh
  4079e7:	and    al,0xce
  4079e9:	mov    bh,0x37
  4079eb:	cld    
  4079ec:	mov    al,0x70
  4079ee:	fsubp  st(3),st
  4079f0:	dec    ecx
  4079f1:	sub    DWORD PTR [edx],edi
  4079f3:	in     al,dx
  4079f4:	dec    esi
  4079f5:	fisub  WORD PTR [ecx-0x273f09e9]
  4079fb:	mov    es,WORD PTR [eax]
  4079fd:	cdq    
  4079fe:	push   ss
  4079ff:	retf   
  407a00:	popf   
  407a01:	xor    BYTE PTR [esi],bl
  407a03:	ins    DWORD PTR es:[edi],dx
  407a04:	mov    bh,0xa2
  407a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a07:	(bad)  
  407a09:	inc    ebx
  407a0a:	repnz in eax,0xd3
  407a0d:	jns    0x4079dd
  407a0f:	enter  0x4dd2,0x53
  407a13:	fldcw  WORD PTR [edx]
  407a15:	(bad)  
  407a16:	cmovo  edx,DWORD PTR [eax-0xd]
  407a1a:	and    ah,bh
  407a1c:	cli    
  407a1d:	jbe    0x4079f2
  407a1f:	xor    eax,0xfbe07638
  407a24:	sub    eax,0x55708e31
  407a29:	sahf   
  407a2a:	xchg   edi,eax
  407a2b:	es inc esi
  407a2d:	dec    eax
  407a2e:	aam    0x59
  407a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a31:	add    al,BYTE PTR [esi+0x3dafab4a]
  407a37:	sub    dl,al
  407a39:	xor    ah,BYTE PTR [edx+0x7e]
  407a3c:	xchg   ecx,eax
  407a3d:	inc    ebp
  407a3e:	pop    ds
  407a3f:	dec    esp
  407a40:	repz call 0x448484e3
  407a46:	test   dl,bh
  407a48:	and    edx,edi
  407a4a:	stos   BYTE PTR es:[edi],al
  407a4b:	xchg   edi,eax
  407a4c:	sub    dl,BYTE PTR [edi]
  407a4e:	push   edx
  407a4f:	adc    DWORD PTR [ebx],eax
  407a51:	xor    eax,0xb61a6918
  407a56:	rcr    BYTE PTR [edi],1
  407a58:	push   cs
  407a59:	das    
  407a5a:	inc    ebx
  407a5b:	push   edx
  407a5c:	dec    esi
  407a5d:	push   esi
  407a5e:	dec    esp
  407a5f:	xchg   esi,eax
  407a60:	(bad)  
  407a61:	push   ebp
  407a62:	inc    ecx
  407a63:	sbb    al,0xaa
  407a65:	mov    ebp,0x27cf8b01
  407a6a:	retf   
  407a6b:	fistp  DWORD PTR [edi+0x3554bc4b]
  407a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a72:	or     DWORD PTR ds:0x73b0d7fc,esi
  407a78:	mov    esi,0x904c2fb6
  407a7d:	cmp    bl,BYTE PTR [eax]
  407a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a80:	out    0xae,al
  407a82:	popa   
  407a83:	push   ss
  407a84:	cmp    esi,DWORD PTR ds:0xd407ad22
  407a8a:	punpckldq mm6,mm0
  407a8d:	adc    DWORD PTR [eax],ebx
  407a8f:	dec    edx
  407a90:	dec    ebp
  407a91:	mov    ds:0x2df830ed,eax
  407a96:	or     cl,BYTE PTR [edi]
  407a98:	mov    al,ds:0xefb9379c
  407a9d:	js     0x407a6f
  407a9f:	mov    WORD PTR [esi+0x1f2eb7a1],?
  407aa5:	mov    ecx,DWORD PTR [ebp+0x6971d4bd]
  407aab:	sbb    edx,esi
  407aad:	push   eax
  407aae:	fnstenv [ecx+0x31]
  407ab1:	xchg   edx,eax
  407ab2:	(bad)  
  407ab3:	js     0x407b00
  407ab5:	jne    0x407a8d
  407ab7:	fdiv   QWORD PTR [ebx]
  407ab9:	daa    
  407aba:	xor    DWORD PTR [eax],eax
  407abc:	inc    ecx
  407abd:	jmp    0x733:0xe7348fef
  407ac4:	icebp  
  407ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ac6:	rcl    dh,1
  407ac8:	retf   0x40d5
  407acb:	jae    0x407afa
  407acd:	test   DWORD PTR [ebx],edi
  407acf:	dec    ecx
  407ad0:	(bad)  
  407ad1:	pop    es
  407ad2:	das    
  407ad3:	ret    0x4b74
  407ad6:	sbb    eax,0xc9e87a26
  407adb:	mov    al,0xb1
  407add:	in     eax,dx
  407ade:	in     al,0x73
  407ae0:	mov    al,ds:0x7001712
  407ae5:	xchg   ebx,eax
  407ae6:	inc    ebp
  407ae7:	push   es
  407ae8:	xor    bl,BYTE PTR [ecx]
  407aea:	xchg   ebx,eax
  407aeb:	pop    edx
  407aec:	lahf   
  407aed:	fisttp WORD PTR [eax+0x72]
  407af0:	mov    ds:0xb2bbebf3,eax
  407af5:	call   0x18c2:0x2fbb266
  407afc:	pop    eax
  407afd:	test   BYTE PTR [esi],ch
  407aff:	adc    BYTE PTR [ecx+0x1f],ah
  407b02:	ret    0x13b4
  407b05:	push   0xfffffffa
  407b07:	sbb    al,0x7
  407b09:	pop    ss
  407b0a:	out    0xd5,eax
  407b0c:	aam    0xf2
  407b0e:	adc    dh,BYTE PTR [ecx+0x65]
  407b11:	outs   dx,DWORD PTR ds:[esi]
  407b12:	jnp    0x407ab7
  407b14:	sub    cl,al
  407b16:	test   BYTE PTR [edx],al
  407b18:	mov    esi,0x2eed4a64
  407b1d:	sti    
  407b1e:	popa   
  407b1f:	push   eax
  407b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b22:	sahf   
  407b23:	mov    bh,ch
  407b25:	xor    al,0x54
  407b27:	addr16 add dl,al
  407b2a:	dec    edx
  407b2b:	jmp    0x407ad0
  407b2d:	cmp    edx,ebp
  407b2f:	(bad)  
  407b30:	and    bl,ah
  407b32:	sub    dh,dl
  407b34:	(bad)  
  407b35:	in     eax,0x83
  407b37:	hlt    
  407b38:	mov    al,ds:0xdabd93fc
  407b3d:	push   ds
  407b3e:	pop    edi
  407b3f:	test   DWORD PTR [ecx-0x4edff33],0x43dd8c0a
  407b49:	pop    ecx
  407b4a:	dec    edx
  407b4b:	mov    WORD PTR [edi+edx*4],ds
  407b4e:	sub    BYTE PTR [eax-0x47ed7267],bl
  407b54:	sti    
  407b55:	(bad)  
  407b56:	mov    ecx,0x299f79ea
  407b5b:	and    eax,0x74e0a64b
  407b60:	sub    eax,0xb0e0e209
  407b65:	xrelease xchg DWORD PTR [edi+0x52],eax
  407b69:	cmp    DWORD PTR [esi-0x5bad0db7],edi
  407b6f:	xchg   edi,eax
  407b70:	xchg   edx,eax
  407b71:	cmp    eax,0xe7f88287
  407b76:	ret    0xf24
  407b79:	xor    BYTE PTR [esi+0x7503333d],dh
  407b7f:	mov    eax,ds:0x90fb8dd4
  407b84:	mov    gs,ebx
  407b86:	nop
  407b87:	popa   
  407b88:	inc    esp
  407b89:	nop
  407b8a:	outs   dx,BYTE PTR ds:[esi]
  407b8b:	int    0x81
  407b8d:	mov    dl,0x49
  407b8f:	cdq    
  407b90:	neg    DWORD PTR [eax]
  407b92:	inc    ebp
  407b93:	jecxz  0x407b90
  407b95:	fld    QWORD PTR [ecx-0x3727d36a]
  407b9b:	jecxz  0x407b6b
  407b9d:	pop    edx
  407b9e:	bound  ecx,QWORD PTR [ebx]
  407ba0:	sbb    DWORD PTR [esi-0x54],ecx
  407ba3:	and    BYTE PTR [edi],cl
  407ba5:	xchg   ecx,eax
  407ba6:	sub    al,0xc8
  407ba8:	les    eax,FWORD PTR [ebp-0xdbc580c]
  407bae:	stos   DWORD PTR es:[edi],eax
  407baf:	ins    BYTE PTR es:[edi],dx
  407bb0:	lahf   
  407bb1:	push   ds
  407bb2:	cdq    
  407bb3:	push   es
  407bb4:	enter  0x9780,0x5e
  407bb8:	and    esi,DWORD PTR [edx]
  407bba:	out    0xf9,eax
  407bbc:	fld    QWORD PTR [ecx]
  407bbe:	and    DWORD PTR [esi-0x7cd8dcef],ebp
  407bc4:	test   al,0x58
  407bc6:	test   al,0xe9
  407bc8:	jmp    ebx
  407bca:	mov    ebp,0xc2221dee
  407bcf:	sbb    eax,0x5f12d765
  407bd4:	xchg   edi,eax
  407bd5:	pop    es
  407bd6:	mov    bh,0x9b
  407bd8:	push   ebp
  407bd9:	dec    ebx
  407bda:	and    DWORD PTR [eax+0x7e02c5bf],ecx
  407be0:	add    ebx,DWORD PTR [edx-0x7a1b935d]
  407be6:	sub    DWORD PTR [edx+0x5156424e],eax
  407bec:	call   DWORD PTR [edi]
  407bee:	lds    eax,FWORD PTR [edx+0x3a2feede]
  407bf4:	cmp    BYTE PTR [ecx],al
  407bf6:	imul   ecx,edi,0xffffffb4
  407bf9:	mov    ah,0xe5
  407bfb:	push   esi
  407bfc:	ins    BYTE PTR es:[edi],dx
  407bfd:	test   DWORD PTR [esi],ecx
  407bff:	stos   DWORD PTR es:[edi],eax
  407c00:	cmp    BYTE PTR fs:[ebx+0x7d],dh
  407c04:	cdq    
  407c05:	mov    fs,WORD PTR [ebp-0x17b6eb8f]
  407c0b:	pusha  
  407c0c:	ret    
  407c0d:	jmp    0x407c28
  407c0f:	or     DWORD PTR [edi+0x1d184007],0x49
  407c16:	dec    edx
  407c17:	mov    cl,0x20
  407c19:	jg     0x407bc1
  407c1b:	clc    
  407c1c:	(bad)  
  407c1d:	xlat   BYTE PTR ds:[ebx]
  407c1e:	rol    DWORD PTR [ecx],cl
  407c20:	ds pop edi
  407c22:	stos   DWORD PTR es:[edi],eax
  407c23:	push   esp
  407c24:	int3   
  407c25:	xor    eax,0xcfcf4bee
  407c2a:	mov    cs,WORD PTR [ebx]
  407c2c:	pop    ebx
  407c2d:	sahf   
  407c2e:	pop    esp
  407c2f:	outs   dx,DWORD PTR ds:[esi]
  407c30:	inc    esp
  407c31:	cs mov bl,0xec
  407c34:	dec    esp
  407c35:	pusha  
  407c36:	cdq    
  407c37:	dec    edi
  407c38:	popf   
  407c39:	fldenv [esp+ebp*1]
  407c3c:	loopne 0x407c08
  407c3e:	loopne 0x407c05
  407c40:	js     0x407c85
  407c42:	addr16 in al,dx
  407c44:	out    dx,eax
  407c45:	pop    ds
  407c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c47:	push   ebx
  407c48:	mov    al,ds:0x40a7838b
  407c4d:	call   0x8efb:0x2d0d2d82
  407c54:	jmp    0x8b79:0xc15f9eef
  407c5b:	jns    0x407caf
  407c5d:	sbb    DWORD PTR [esi+ebp*8-0x61],ecx
  407c61:	sbb    al,0x7b
  407c63:	pop    esp
  407c64:	int3   
  407c65:	mov    ds:0xf71e913f,eax
  407c6a:	or     BYTE PTR [ecx-0x2bdca016],bh
  407c70:	loop   0x407ce4
  407c72:	mov    dh,0xef
  407c74:	test   DWORD PTR ds:0xfd1ebaa5,eax
  407c7a:	rcr    BYTE PTR [ebp-0xffabaa6],1
  407c80:	dec    eax
  407c81:	les    edi,FWORD PTR [esi+0x7a]
  407c84:	fist   DWORD PTR [eax-0x5491c42]
  407c8a:	dec    ebx
  407c8b:	imul   ebx,DWORD PTR [edx-0x62d6face],0xe530512f
  407c95:	xlat   BYTE PTR ds:[ebx]
  407c96:	sbb    al,0x8
  407c98:	adc    eax,DWORD PTR [esp+ebx*8-0x55ae4a62]
  407c9f:	into   
  407ca0:	xchg   ebx,eax
  407ca1:	imul   ebx,DWORD PTR [edx],0xffffffa2
  407ca4:	test   bl,ch
  407ca6:	sub    eax,0x34f74ea7
  407cab:	add    esi,DWORD PTR [ebp+0x58]
  407cae:	mov    WORD PTR [edi+ebx*4-0x23],?
  407cb2:	js     0x407c54
  407cb4:	mov    eax,0x1d4271c9
  407cb9:	sahf   
  407cba:	or     BYTE PTR [ecx],bh
  407cbc:	cli    
  407cbd:	test   al,0x69
  407cbf:	test   al,0x52
  407cc1:	push   esp
  407cc2:	popa   
  407cc3:	out    0x11,eax
  407cc5:	mov    cl,0xd6
  407cc7:	stc    
  407cc8:	inc    ecx
  407cc9:	or     dh,bh
  407ccb:	in     al,dx
  407ccc:	push   ds
  407ccd:	add    BYTE PTR [ebx+0x5ddc8e26],ah
  407cd3:	adc    al,0x82
  407cd5:	hlt    
  407cd6:	xchg   ecx,eax
  407cd7:	outs   dx,BYTE PTR ds:[esi]
  407cd8:	pop    ds
  407cd9:	test   BYTE PTR [eax+0x104d5862],bl
  407cdf:	inc    edi
  407ce0:	fstp   QWORD PTR [ecx-0x21e9d685]
  407ce6:	add    eax,0xa4efc690
  407ceb:	xor    eax,0xe4255636
  407cf0:	in     al,0x4
  407cf2:	and    DWORD PTR [edi+0x3f50d434],edi
  407cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cf9:	dec    esp
  407cfa:	jg     0x407c8b
  407cfc:	push   DWORD PTR [edi]
  407cfe:	cld    
  407cff:	psubsb mm1,mm7
  407d02:	push   es
  407d03:	sub    al,0x72
  407d05:	std    
  407d06:	xor    BYTE PTR [edx-0x5],al
  407d09:	adc    DWORD PTR [eax-0x67],esp
  407d0c:	out    dx,al
  407d0d:	xchg   ecx,eax
  407d0e:	jp     0x407ca6
  407d10:	int3   
  407d11:	jmp    0x407cbf
  407d13:	repnz dec edi
  407d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d16:	or     ebp,DWORD PTR [ebx]
  407d18:	gs out 0xdf,al
  407d1b:	jmp    FWORD PTR [esi+edi*2]
  407d1e:	fs stos BYTE PTR es:[edi],al
  407d20:	pop    ds
  407d21:	dec    ebp
  407d22:	push   ds
  407d23:	aam    0xc3
  407d25:	fs in  eax,0x79
  407d28:	sbb    al,0x1a
  407d2a:	inc    edi
  407d2b:	mov    cl,0xbc
  407d2d:	pop    eax
  407d2e:	sbb    al,0xb7
  407d30:	sub    BYTE PTR [edx+0xb36541],0xd7
  407d37:	pop    DWORD PTR [edi-0x1]
  407d3a:	add    eax,0x970a43ec
  407d3f:	mov    ecx,0x215b0380
  407d44:	cmp    dl,BYTE PTR [ebx]
  407d46:	out    dx,eax
  407d47:	loopne 0x407d36
  407d49:	pop    es
  407d4a:	cmp    eax,0x50ef31c3
  407d4f:	js     0x407d20
  407d51:	cwde   
  407d52:	jb     0x407cd4
  407d54:	clc    
  407d55:	mov    ds:0xe3192ea6,al
  407d5a:	sbb    edi,DWORD PTR [edx+0x46]
  407d5d:	out    0x9c,al
  407d5f:	xor    BYTE PTR [edi+0x46],dl
  407d62:	cmp    edx,DWORD PTR [ebx-0x1c4b6ff5]
  407d68:	into   
  407d69:	xor    al,0xdb
  407d6b:	loopne 0x407ddd
  407d6d:	xchg   DWORD PTR [ecx],eax
  407d6f:	jbe    0x407da2
  407d71:	inc    ebp
  407d72:	jmp    0x625933b8
  407d77:	in     al,0xca
  407d79:	inc    eax
  407d7a:	popf   
  407d7b:	je     0x407d44
  407d7d:	add    eax,0x8c9635a0
  407d82:	sbb    dh,0x29
  407d85:	loopne 0x407d7e
  407d87:	nop    DWORD PTR [ebp+esi*2+0x66a471b7]
  407d8f:	inc    ecx
  407d90:	pop    ebx
  407d91:	aas    
  407d92:	fist   WORD PTR [edi+ebp*2]
  407d95:	es mov esp,0xbc177ac3
  407d9b:	push   ebp
  407d9c:	cmp    ch,ch
  407d9e:	and    DWORD PTR ds:0x66259647,0xaed5fb4d
  407da8:	lods   eax,DWORD PTR ds:[esi]
  407da9:	jp     0x407d5b
  407dab:	clc    
  407dac:	pop    ecx
  407dad:	out    dx,eax
  407dae:	mov    cl,0xa2
  407db0:	js     0x407df0
  407db2:	sub    al,0x7e
  407db4:	and    al,0x5c
  407db6:	aam    0x9e
  407db8:	add    al,0xae
  407dba:	and    edx,DWORD PTR [ebp+0x4c]
  407dbd:	cmp    dh,bh
  407dbf:	lahf   
  407dc0:	(bad)  
  407dc1:	push   eax
  407dc2:	clc    
  407dc3:	inc    eax
  407dc4:	and    esp,DWORD PTR [edx+0x324a43f2]
  407dca:	sbb    BYTE PTR [esi-0x1c],dl
  407dcd:	nop    esi
  407dd0:	add    al,0x36
  407dd2:	mov    eax,ds:0xcef2f7b4
  407dd7:	and    BYTE PTR [edx+0x37],ch
  407dda:	sbb    BYTE PTR [edi],bl
  407ddc:	dec    edi
  407ddd:	into   
  407dde:	pop    ss
  407ddf:	mov    dh,0x76
  407de1:	lds    ebp,FWORD PTR [ebx-0x46be24f3]
  407de7:	cdq    
  407de8:	jo     0x407e2e
  407dea:	jnp    0x407de7
  407dec:	adc    DWORD PTR [ebp-0x16593747],esi
  407df2:	in     eax,dx
  407df3:	sub    esi,DWORD PTR [eax]
  407df5:	outs   dx,DWORD PTR ds:[esi]
  407df6:	dec    ebp
  407df7:	dec    ebx
  407df8:	xchg   ecx,eax
  407df9:	jle    0x407d8d
  407dfb:	out    0xc3,eax
  407dfd:	sub    DWORD PTR [ebp+eiz*8-0x4bf7955a],ecx
  407e04:	test   BYTE PTR [edx-0x1],dh
  407e07:	mov    esp,ecx
  407e09:	sub    eax,DWORD PTR [edi]
  407e0b:	js     0x407dee
  407e0d:	pushf  
  407e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e0f:	add    DWORD PTR [ebx],ebx
  407e11:	push   ss
  407e12:	jnp    0x407d9e
  407e14:	call   0x9d21f20a
  407e19:	add    ah,cl
  407e1b:	pop    ss
  407e1c:	imul   edi,ebx,0x6c
  407e1f:	mov    cl,0x1
  407e21:	ja     0x407dd4
  407e23:	or     eax,0x63a904e2
  407e28:	outs   dx,DWORD PTR ds:[esi]
  407e29:	sti    
  407e2a:	test   BYTE PTR [esp+ecx*4-0x5b],bh
  407e2e:	test   BYTE PTR [eax],al
  407e30:	scas   eax,DWORD PTR es:[edi]
  407e31:	jns    0x407db6
  407e33:	loope  0x407e1f
  407e35:	inc    esp
  407e36:	mov    ch,BYTE PTR [eax-0x53092157]
  407e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e3d:	popa   
  407e3e:	push   ds
  407e3f:	clc    
  407e40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e41:	js     0x407e96
  407e43:	push   edi
  407e44:	repz xchg ecx,eax
  407e46:	mov    ebp,0x2a25f361
  407e4b:	or     DWORD PTR [edi-0x31],esp
  407e4e:	or     DWORD PTR cs:0x99fac86b,edi
  407e55:	jge    0x407e93
  407e57:	je     0x407e78
  407e59:	retf   0xff02
  407e5c:	pop    esp
  407e5d:	pop    ebp
  407e5e:	pushf  
  407e5f:	mov    ebx,0xc4841091
  407e64:	dec    edi
  407e65:	sar    DWORD PTR [ebp+0x31],cl
  407e68:	repz test eax,0xb14cd96a
  407e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e6f:	or     edx,DWORD PTR [eax]
  407e71:	call   0xc086c02f
  407e76:	or     bl,BYTE PTR [ebx+esi*1]
  407e79:	add    BYTE PTR [ecx-0x51],al
  407e7c:	push   edx
  407e7d:	retf   
  407e7e:	fnstenv [esi+ebx*2]
  407e81:	test   BYTE PTR [esi-0x3e8fc46f],al
  407e87:	adc    eax,0x5f1f94b5
  407e8c:	add    al,0x1c
  407e8e:	fwait
  407e8f:	daa    
  407e90:	sbb    al,dl
  407e92:	lea    ebp,[eax-0x5529590e]
  407e98:	mov    ch,0x96
  407e9a:	sar    BYTE PTR [ecx+0x487e34f4],cl
  407ea0:	and    BYTE PTR [ebp-0xb],al
  407ea3:	inc    ebp
  407ea4:	xor    eax,0xfb9448b3
  407ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eaa:	jecxz  0x407e3f
  407eac:	add    DWORD PTR [ecx],ecx
  407eae:	xor    eax,0x3d5c5761
  407eb3:	dec    esp
  407eb4:	aad    0x43
  407eb6:	ror    DWORD PTR [ebx+0x5b],0xe2
  407eba:	cwde   
  407ebb:	fild   DWORD PTR [edx]
  407ebd:	sub    esp,ecx
  407ebf:	fild   QWORD PTR [ebx-0x3f]
  407ec2:	cmp    eax,0xd7e023c6
  407ec7:	loopne 0x407eda
  407ec9:	jmp    0xa11a8ad0
  407ece:	cmp    al,0x1f
  407ed0:	inc    esp
  407ed1:	push   ebp
  407ed2:	sbb    edx,DWORD PTR [edx-0x21926af5]
  407ed8:	sbb    BYTE PTR [edi-0x1b],ah
  407edb:	fsubr  QWORD PTR [edx]
  407edd:	jno    0x407e6e
  407edf:	ins    DWORD PTR es:[edi],dx
  407ee0:	ins    DWORD PTR es:[edi],dx
  407ee1:	sbb    esi,DWORD PTR [esi+0x5a6d0da1]
  407ee7:	xor    BYTE PTR [eax],dh
  407ee9:	call   0xdc1c:0xa7e804ae
  407ef0:	ror    BYTE PTR es:[ecx],0x70
  407ef4:	mov    bl,0x53
  407ef6:	data16 jge 0x407efc
  407ef9:	pop    eax
  407efa:	cld    
  407efb:	xor    BYTE PTR [ebx],cl
  407efd:	cmp    BYTE PTR [ecx],cl
  407eff:	xchg   ecx,eax
  407f00:	xchg   BYTE PTR [ebp+0x42ba66c],dl
  407f06:	add    bh,ah
  407f08:	cmc    
  407f09:	xchg   DWORD PTR [esi],edx
  407f0b:	fld    DWORD PTR [ebx+0x2e]
  407f0e:	lds    ecx,FWORD PTR [edi+eax*8]
  407f11:	jae    0x407e98
  407f13:	xchg   DWORD PTR [ebx],ebp
  407f15:	cmp    eax,eax
  407f17:	mov    ah,0x91
  407f19:	cld    
  407f1a:	push   esp
  407f1b:	mov    ah,0x12
  407f1d:	push   cs
  407f1e:	adc    ah,BYTE PTR [eax+ebp*1]
  407f21:	arpl   WORD PTR [ecx-0x5bebcc43],si
  407f27:	push   ecx
  407f28:	(bad)
  407f2d:	fs enter 0xb055,0xd5
  407f32:	out    dx,al
  407f33:	pop    ss
  407f34:	je     0x407efc
  407f36:	cmp    DWORD PTR [edx+0x22],edi
  407f39:	call   0x4630aa66
  407f3e:	xor    eax,esp
  407f40:	xor    eax,0xd5ea3cec
  407f45:	je     0x407ed6
  407f47:	repnz xadd dl,bl
  407f4b:	scas   eax,DWORD PTR es:[edi]
  407f4c:	jae    0x407fcb
  407f4e:	int    0xc9
  407f50:	mov    ebp,0x7fb491d9
  407f55:	jmp    0xdc951e30
  407f5a:	add    DWORD PTR [edx-0x562fc1d0],edi
  407f60:	repz iret 
  407f62:	ror    DWORD PTR [ebp-0x38],1
  407f65:	ss retf 0x4858
  407f69:	jne    0x407fbb
  407f6b:	add    al,0x8f
  407f6d:	add    DWORD PTR [ecx],ebp
  407f6f:	xchg   edx,eax
  407f70:	jge    0x407f1f
  407f72:	sub    BYTE PTR [edi-0x67061d7d],bh
  407f78:	mov    bh,0xbc
  407f7a:	int    0x9d
  407f7c:	lahf   
  407f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f7e:	or     eax,0xaf32fe76
  407f83:	ins    DWORD PTR es:[edi],dx
  407f84:	and    dl,BYTE PTR [ebp-0x29a77070]
  407f8a:	in     al,dx
  407f8b:	jnp    0x407f27
  407f8d:	pop    ecx
  407f8e:	clc    
  407f8f:	xor    eax,0x68f00532
  407f94:	hlt    
  407f95:	push   edi
  407f96:	cwde   
  407f97:	dec    edi
  407f98:	int    0x65
  407f9a:	and    al,0xad
  407f9c:	or     BYTE PTR [edx+0xf1b15e8],bl
  407fa2:	shl    bl,1
  407fa4:	div    DWORD PTR [ecx+0x67]
  407fa7:	repz jle 0x407fde
  407faa:	dec    dl
  407fac:	outs   dx,DWORD PTR ds:[esi]
  407fad:	jnp    0x407fc5
  407faf:	add    esp,esi
  407fb1:	inc    eax
  407fb2:	xchg   edx,eax
  407fb3:	out    dx,eax
  407fb4:	inc    eax
  407fb5:	or     eax,esi
  407fb7:	gs pop ebx
  407fb9:	jmp    DWORD PTR [eax-0x7e]
  407fbc:	pop    ds
  407fbd:	call   0x67d6fc57
  407fc2:	ret    0x4ad2
  407fc5:	push   edi
  407fc6:	pop    ecx
  407fc7:	and    DWORD PTR [edi-0x47],edx
  407fca:	jmp    FWORD PTR [ebp+esi*2-0x1002212d]
  407fd1:	inc    edi
  407fd2:	loopne 0x40802f
  407fd4:	or     ebp,DWORD PTR [ecx]
  407fd6:	jae    0x408037
  407fd8:	sbb    eax,0x2b8e1a1c
  407fdd:	les    edx,FWORD PTR [edi+0x44]
  407fe0:	fidivr DWORD PTR [edx+edx*2+0x1d0227b]
  407fe7:	add    WORD PTR [eax-0x2c],di
  407feb:	sti    
  407fec:	ss je  0x407f88
  407fef:	push   esi
  407ff0:	repnz mov ebp,DWORD PTR [ebp-0x32bc4c3a]
  407ff7:	push   ebp
  407ff8:	sub    dh,BYTE PTR [edi+ebp*1+0x27]
  407ffc:	pop    ecx
  407ffd:	fdivr  QWORD PTR [esi+0x40feaaac]
  408003:	aaa    
  408004:	mov    BYTE PTR [ecx-0x7e],ah
  408007:	pop    eax
  408008:	pop    edx
  408009:	cld    
  40800a:	and    eax,0x6f4d29fb
  40800f:	aas    
  408010:	add    BYTE PTR [esi-0x355e4ef9],ah
  408016:	jnp    0x408021
  408018:	je     0x408025
  40801a:	popa   
  40801b:	fsubr  QWORD PTR ds:0xd520f37e
  408021:	in     al,dx
  408022:	pop    eax
  408023:	xor    ecx,DWORD PTR [ebp-0xd]
  408026:	dec    ebp
  408027:	sbb    eax,0x95da0608
  40802c:	pushw  es
  40802e:	pop    ebp
  40802f:	fdivr  QWORD PTR [eax]
  408031:	mov    bh,0x63
  408033:	in     eax,0xa4
  408035:	or     ch,bh
  408037:	xchg   esi,eax
  408038:	sbb    edx,DWORD PTR [ebx-0x7bf66b53]
  40803e:	call   0x5f79874c
  408043:	loope  0x407fc5
  408045:	push   esp
  408046:	mov    edi,0x35d10608
  40804b:	int3   
  40804c:	jmp    0x10db3a2f
  408051:	mov    dl,BYTE PTR [edx-0x4ad51cb7]
  408057:	cmp    cl,ch
  408059:	cld    
  40805a:	mov    dl,0x23
  40805c:	xor    BYTE PTR [edx+0x72],dl
  40805f:	mov    dh,0x65
  408061:	repnz xchg esi,eax
  408063:	sub    esi,DWORD PTR [esi-0x1]
  408066:	cmp    DWORD PTR [edi+0x5cc66640],ecx
  40806c:	iret   
  40806d:	pop    ds
  40806e:	xchg   BYTE PTR [ecx+0x3e],bl
  408071:	mov    ebx,0x58d893bd
  408076:	push   DWORD PTR [ecx-0x1e117c7e]
  40807c:	mov    bl,0xb1
  40807e:	bound  esi,QWORD PTR [edx]
  408080:	loope  0x40800f
  408082:	adc    ebp,DWORD PTR [eax+0x4e]
  408085:	ja     0x408024
  408087:	jb     0x408053
  408089:	add    al,0x50
  40808b:	pop    esi
  40808c:	dec    esi
  40808d:	and    eax,edi
  40808f:	jbe    0x40801e
  408091:	retf   0x3e3d
  408094:	sub    eax,0xd647bc06
  408099:	fild   WORD PTR [edx-0x1e90e310]
  40809f:	loop   0x4080c0
  4080a1:	push   eax
  4080a2:	xor    al,0x8b
  4080a4:	adc    BYTE PTR [ecx-0x7],ch
  4080a7:	xchg   esp,eax
  4080a8:	mov    BYTE PTR [ecx-0x33],ah
  4080ab:	pushf  
  4080ac:	sbb    BYTE PTR ds:[ebx-0x68cc3d28],dh
  4080b3:	(bad)  
  4080b4:	(bad)  [ebp+0x2e]
  4080b7:	loope  0x40807b
  4080b9:	rcl    DWORD PTR [edi-0x3d1a4895],0x30
  4080c0:	xchg   edx,eax
  4080c1:	data16 arpl WORD PTR [esp+eax*8],bx
  4080c5:	stos   BYTE PTR es:[edi],al
  4080c6:	pop    edx
  4080c7:	call   DWORD PTR [edi+0x608538f1]
  4080cd:	jp     0x4080d6
  4080cf:	int3   
  4080d0:	xor    dl,BYTE PTR [edi-0x68]
  4080d3:	dec    BYTE PTR [eax+0x5dd9223a]
  4080d9:	fwait
  4080da:	sub    edi,DWORD PTR [eax-0x229b0d84]
  4080e0:	mov    ecx,DWORD PTR [bp+si-0xd58]
  4080e5:	mov    eax,ds:0xa322e3b4
  4080ea:	call   0xf65d6632
  4080ef:	fwait
  4080f0:	cmp    ch,BYTE PTR [ebp-0x79]
  4080f3:	jnp    0x408125
  4080f5:	push   ebx
  4080f6:	(bad)  
  4080f7:	out    dx,eax
  4080f8:	cld    
  4080f9:	imul   esi
  4080fb:	mov    esi,0xc408310d
  408100:	retf   0xeab2
  408103:	enter  0x66f9,0xe5
  408107:	retf   0xec12
  40810a:	in     al,0x5b
  40810c:	stos   DWORD PTR es:[edi],eax
  40810d:	ret    
  40810e:	aaa    
  40810f:	mov    ebp,0xc223e70c
  408114:	sbb    DWORD PTR [esi-0xffaac50],esi
  40811a:	(bad)  
  40811c:	retf   0xb457
  40811f:	cmp    al,0x71
  408121:	scas   al,BYTE PTR es:[edi]
  408122:	cmp    BYTE PTR [edx+0x24],al
  408125:	xlat   BYTE PTR ds:[ebx]
  408126:	sbb    eax,0x87b044f0
  40812b:	(bad)  
  40812c:	lea    ecx,[esi-0x543a4c6]
  408132:	push   ds
  408133:	call   0xaa52d849
  408138:	gs stos DWORD PTR es:[edi],eax
  40813a:	sbb    bh,bl
  40813c:	or     dh,BYTE PTR [eax+0x622919b9]
  408142:	adc    DWORD PTR [esi],ecx
  408144:	mov    cl,0xec
  408146:	test   DWORD PTR fs:[ebp+0x5783a6b5],0x32cdea92
  408151:	jo     0x4081a1
  408153:	out    0x40,eax
  408155:	ins    BYTE PTR es:[edi],dx
  408156:	ret    0x1fa6
  408159:	inc    edx
  40815a:	in     eax,dx
  40815b:	mov    esp,0xd1752602
  408160:	jmp    0xc98a:0xfe9e2c1b
  408167:	mov    BYTE PTR [edi-0x69],dl
  40816a:	adc    ebp,esp
  40816c:	lods   eax,DWORD PTR ds:[esi]
  40816d:	xor    edi,ecx
  40816f:	cmp    BYTE PTR [ecx],al
  408171:	dec    edx
  408172:	arpl   dx,cx
  408174:	push   edx
  408175:	pop    esp
  408176:	push   ss
  408177:	out    0x4a,eax
  408179:	sbb    ebp,esi
  40817b:	into   
  40817c:	pop    eax
  40817d:	jecxz  0x4081c3
  40817f:	outs   dx,BYTE PTR ds:[esi]
  408180:	out    dx,al
  408181:	in     eax,0x3
  408183:	loope  0x4081e7
  408185:	jnp    0x4081d6
  408187:	ins    DWORD PTR es:[edi],dx
  408188:	lea    eax,[edi]
  40818a:	mov    DWORD PTR [ebp+ebx*2-0x74b4e1ab],ecx
  408191:	icebp  
  408192:	outs   dx,BYTE PTR ds:[esi]
  408193:	push   ebp
  408194:	sub    dl,dh
  408196:	mov    ebp,0x4d486df2
  40819b:	test   al,0xe8
  40819d:	pop    es
  40819e:	or     dh,ch
  4081a0:	jns    0x4081f1
  4081a2:	fmul   st,st(4)
  4081a4:	ins    BYTE PTR es:[edi],dx
  4081a5:	rcr    eax,cl
  4081a7:	fcomi  st,st(3)
  4081a9:	(bad)  
  4081aa:	out    0x5e,al
  4081ac:	push   0xac7c813b
  4081b1:	cli    
  4081b2:	lea    edi,[esp+edx*2-0x10]
  4081b6:	ja     0x408208
  4081b8:	gs xor al,0x7e
  4081bb:	fwait
  4081bc:	stos   DWORD PTR es:[edi],eax
  4081bd:	ins    BYTE PTR es:[edi],dx
  4081be:	mov    edi,0x58fe7500
  4081c3:	and    DWORD PTR [esi+ecx*8+0x4f],esi
  4081c7:	out    dx,al
  4081c8:	mov    eax,0x8d0a6682
  4081cd:	out    0xca,eax
  4081cf:	lds    ebp,FWORD PTR [ebx+0x4f]
  4081d2:	test   eax,0x91c7b4a2
  4081d7:	mov    bl,0x77
  4081d9:	adc    DWORD PTR [eax+0x5d],ebx
  4081dc:	aam    0xdd
  4081de:	xchg   ecx,eax
  4081df:	or     al,0x95
  4081e1:	jbe    0x40819a
  4081e3:	inc    eax
  4081e4:	fcom   st(7)
  4081e6:	jno    0x408233
  4081e8:	retf   
  4081e9:	jno    0x4081b7
  4081eb:	loop   0x408179
  4081ed:	test   ebx,eax
  4081ef:	sbb    al,al
  4081f1:	mov    ds:0x4e2e15c,eax
  4081f6:	sbb    ecx,DWORD PTR [eax+ebx*2+0x2d69558b]
  4081fd:	push   edx
  4081fe:	retf   
  4081ff:	je     0x408196
  408201:	mov    eax,0x4d44af0c
  408206:	popf   
  408207:	push   0x5ca5c6f4
  40820c:	jecxz  0x4081ca
  40820e:	hlt    
  40820f:	dec    eax
  408210:	xor    al,0xf4
  408212:	sub    edi,DWORD PTR [edi-0x5c]
  408215:	imul   ebp,DWORD PTR [edi+0x36dfd05a],0x6d
  40821c:	dec    esp
  40821d:	cwde   
  40821e:	leave  
  40821f:	dec    ecx
  408220:	ins    BYTE PTR es:[edi],dx
  408221:	cmp    ebx,ebp
  408223:	scas   al,BYTE PTR es:[edi]
  408224:	mov    ebx,0x11efc9cf
  408229:	cmp    al,0x45
  40822b:	push   0x6e
  40822d:	jns    0x408213
  40822f:	aam    0x72
  408231:	sbb    al,0x4d
  408233:	js     0x4081bc
  408235:	cwde   
  408236:	sbb    al,BYTE PTR cs:[eax]
  408239:	in     eax,0xf5
  40823b:	mov    eax,ds:0x80ed60fe
  408240:	jae    0x408232
  408242:	push   edi
  408243:	mov    esp,0xf27d013f
  408248:	ja     0x408239
  40824a:	pop    edx
  40824b:	ins    DWORD PTR es:[edi],dx
  40824c:	mov    ds:0x2f0f895a,al
  408251:	jl     0x408219
  408253:	mov    ebp,0xf104b862
  408258:	adc    ebp,DWORD PTR [eax-0x33b40ab5]
  40825e:	jg     0x40821b
  408260:	bnd jae 0x4082c4
  408263:	add    dl,BYTE PTR [edi+0x228fa023]
  408269:	stos   DWORD PTR es:[edi],eax
  40826a:	mov    cl,0xaf
  40826c:	push   cs
  40826d:	clc    
  40826e:	inc    ecx
  40826f:	lods   eax,DWORD PTR ds:[esi]
  408270:	pushf  
  408271:	dec    ecx
  408272:	in     eax,dx
  408273:	repnz or dl,BYTE PTR [eax-0x7c0181f2]
  40827a:	test   BYTE PTR [ebx+eax*1+0x54571678],al
  408281:	sahf   
  408282:	fisub  DWORD PTR [edx-0x1bb16325]
  408288:	fist   DWORD PTR [ecx+0x4186081b]
  40828e:	dec    ebx
  40828f:	loope  0x408229
  408291:	jle    0x408266
  408293:	mov    esp,0xc7f0cb33
  408298:	hlt    
  408299:	sub    edx,DWORD PTR [ebx]
  40829b:	push   0xcd80a22
  4082a0:	stc    
  4082a1:	mov    cl,0x3d
  4082a3:	push   ds
  4082a4:	mov    edi,0x6b62aa20
  4082a9:	mov    ds:0x246d0b6,al
  4082ae:	lea    ebp,[ebx]
  4082b0:	jae    0x408250
  4082b2:	mov    al,ds:0x5b757cf0
  4082b7:	add    edi,DWORD PTR [eax+0x0]
  4082ba:	shl    al,0xb6
  4082bd:	mov    al,ds:0xcfc60019
  4082c2:	jecxz  0x4082b9
  4082c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082c5:	and    eax,0x176eff52
  4082ca:	nop
  4082cb:	dec    edi
  4082cc:	frstor [edi]
  4082ce:	mov    bh,0xa
  4082d0:	aad    0x4e
  4082d2:	js     0x408334
  4082d4:	xchg   edi,eax
  4082d5:	(bad)  
  4082d7:	loope  0x40828a
  4082d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082da:	and    eax,0xd656966f
  4082df:	push   edi
  4082e0:	arpl   WORD PTR [eax-0x3f565a97],ax
  4082e6:	inc    ebx
  4082e7:	aaa    
  4082e8:	je     0x40826d
  4082ea:	sbb    BYTE PTR [esi+0x1f],ah
  4082ed:	je     0x408298
  4082ef:	dec    ecx
  4082f0:	xchg   bl,dl
  4082f2:	call   0x438a:0x471d3033
  4082f9:	pop    es
  4082fa:	popf   
  4082fb:	cmp    BYTE PTR [edi],ch
  4082fd:	dec    ebp
  4082fe:	fwait
  4082ff:	jl     0x40833a
  408301:	test   BYTE PTR [ebx],cl
  408303:	pop    ss
  408304:	mov    ?,WORD PTR [eax-0x1a]
  408307:	mov    al,0x98
  408309:	imul   ecx,DWORD PTR [eax],0x55d2b882
  40830f:	and    cl,BYTE PTR [ebx+0x27]
  408312:	in     eax,dx
  408313:	mov    ebp,0x154b9f7a
  408318:	call   0x12564b31
  40831d:	std    
  40831e:	inc    esp
  40831f:	outs   dx,DWORD PTR ds:[esi]
  408320:	loop   0x4082cc
  408322:	das    
  408323:	push   es
  408324:	jle    0x4082fb
  408326:	sub    edx,DWORD PTR [ebx]
  408328:	cwde   
  408329:	push   esi
  40832a:	pushf  
  40832b:	lock test eax,0x6aaa6110
  408331:	lds    ecx,FWORD PTR [esi-0x6d]
  408334:	pushf  
  408335:	pop    ds
  408336:	mov    bl,0x61
  408338:	lds    edx,FWORD PTR [edx-0x6a5326dc]
  40833e:	out    dx,al
  40833f:	es jmp 0xc3e3d1e8
  408345:	imul   DWORD PTR [edi+0x75f6122d]
  40834b:	push   esi
  40834c:	repz push es
  40834e:	imul   edi,DWORD PTR [edx+0x6c4da425],0x3f64ad16
  408358:	jl     0x4082fe
  40835a:	(bad)  
  40835b:	sbb    al,0x74
  40835d:	or     eax,0x2bf5834a
  408362:	fcomp  DWORD PTR ds:0xd889e8be
  408368:	loope  0x4083d7
  40836a:	(bad)  
  40836b:	pushf  
  40836c:	pop    esi
  40836d:	sub    DWORD PTR [ecx+0x7f],ecx
  408370:	mov    ah,0xea
  408372:	mov    al,ds:0x6d69c7c8
  408377:	in     al,dx
  408378:	scas   eax,DWORD PTR es:[edi]
  408379:	mov    ecx,ss
  40837b:	mov    dl,0x3b
  40837d:	sub    dh,al
  40837f:	arpl   sp,di
  408381:	xchg   bl,dl
  408383:	push   ss
  408384:	inc    ebx
  408385:	ins    DWORD PTR es:[edi],dx
  408386:	loope  0x408322
  408388:	sbb    edi,DWORD PTR [edi-0x4e]
  40838b:	add    BYTE PTR [ebp+0x1ff9b1af],bh
  408391:	mov    eax,ds:0x44bbd880
  408396:	jbe    0x40832e
  408398:	fcmovbe st,st(5)
  40839a:	mov    ecx,0x43632d2a
  40839f:	sub    esp,ebp
  4083a1:	xor    DWORD PTR [ebx-0x5e57f808],ecx
  4083a7:	inc    edx
  4083a8:	xchg   ebx,eax
  4083a9:	xor    DWORD PTR [ebx-0xc036a81],esp
  4083af:	pusha  
  4083b0:	les    ebp,FWORD PTR [ecx]
  4083b2:	cmp    edx,0x6f21c322
  4083b8:	xchg   ebx,eax
  4083b9:	push   edx
  4083ba:	dec    eax
  4083bb:	and    eax,0x9d9f30e9
  4083c0:	shl    DWORD PTR [ecx],0xf5
  4083c3:	or     esp,0xb7e45cea
  4083c9:	outs   dx,BYTE PTR ds:[esi]
  4083ca:	or     BYTE PTR [edx+0x7c353024],al
  4083d0:	in     eax,dx
  4083d1:	in     eax,0xc6
  4083d3:	int3   
  4083d4:	mov    DWORD PTR [edx-0x4c],esi
  4083d7:	or     eax,ebp
  4083d9:	clc    
  4083da:	pop    esp
  4083db:	fistp  DWORD PTR [eax]
  4083dd:	add    eax,0xccd1d897
  4083e2:	xchg   DWORD PTR [edx-0x7bb71feb],eax
  4083e8:	inc    edi
  4083e9:	mov    ecx,0x9f419df6
  4083ee:	mov    ecx,0x7c2cf376
  4083f3:	mov    eax,0x8d2b44b4
  4083f8:	lds    edx,FWORD PTR [edi]
  4083fa:	ret    
  4083fb:	jge    0x408463
  4083fd:	xchg   cl,ch
  4083ff:	mov    bl,0xd8
  408401:	cmp    BYTE PTR [edi],ah
  408403:	inc    ecx
  408404:	cmp    edx,DWORD PTR [ecx+0x2e5139cf]
  40840a:	xchg   edi,eax
  40840b:	imul   eax,DWORD PTR [edi+0x36f9363],0xb9c61d9
  408415:	dec    edx
  408416:	cmp    eax,edi
  408418:	stos   BYTE PTR es:[edi],al
  408419:	outs   dx,BYTE PTR ds:[esi]
  40841a:	ins    BYTE PTR es:[edi],dx
  40841b:	xchg   edx,eax
  40841c:	test   al,0xd3
  40841e:	sub    DWORD PTR [ecx],eax
  408420:	cmc    
  408421:	mov    edx,0x139550e7
  408426:	jae    0x40844d
  408428:	test   DWORD PTR [esp+eax*1+0x9],edx
  40842c:	addr16 mov dh,0x5a
  40842f:	jnp    0x4083ff
  408431:	gs pop ss
  408433:	sub    edx,DWORD PTR [eax-0x7dbea783]
  408439:	mov    ds:0x1360a396,eax
  40843e:	rol    BYTE PTR [ebx+0x4c],0x2f
  408442:	xor    DWORD PTR [ebx+0x3f],0x7b
  408446:	bound  esp,QWORD PTR ds:0x88c49408
  40844c:	sub    al,0x13
  40844e:	push   edx
  40844f:	call   0x6f07dda3
  408454:	xchg   ch,al
  408456:	jb     0x40848c
  408458:	inc    esp
  408459:	(bad)  
  40845a:	xor    eax,0x616cc9aa
  40845f:	call   0x8e48:0xb9b5a01c
  408466:	aam    0x0
  408468:	scas   al,BYTE PTR es:[edi]
  408469:	adc    eax,ebx
  40846b:	out    0xac,eax
  40846d:	add    al,BYTE PTR [esi+0x37]
  408470:	xchg   ebx,eax
  408471:	retf   0x5778
  408474:	jmp    0x4084e4
  408476:	out    0x8f,eax
  408478:	rcr    ebp,1
  40847a:	jge    0x4084d1
  40847c:	push   ss
  40847d:	into   
  40847e:	repnz mov ecx,esp
  408481:	dec    eax
  408482:	push   0x4
  408484:	pop    edx
  408485:	mov    ds:0x4f9f59d0,eax
  40848a:	push   eax
  40848b:	ins    BYTE PTR es:[edi],dx
  40848c:	ja     0x4084cd
  40848e:	adc    BYTE PTR [esi-0x4],0x19
  408492:	gs scas al,BYTE PTR es:[edi]
  408494:	add    BYTE PTR [edx],bl
  408496:	pop    edx
  408497:	cmova  eax,DWORD PTR [esi+0x42]
  40849b:	inc    edx
  40849c:	jecxz  0x4084ee
  40849e:	dec    eax
  40849f:	dec    BYTE PTR [ecx]
  4084a1:	mov    ebx,0x1b3350ee
  4084a6:	clc    
  4084a7:	dec    ebp
  4084a8:	jbe    0x40845a
  4084aa:	mov    bl,0x2
  4084ac:	dec    esp
  4084ad:	loopne 0x40850f
  4084af:	mov    edx,0x9e6074d7
  4084b4:	sbb    eax,0x3ecc9c44
  4084b9:	inc    eax
  4084ba:	loop   0x4084f4
  4084bc:	and    DWORD PTR [ebp-0x29],eax
  4084bf:	popf   
  4084c0:	adc    ebp,DWORD PTR [eax+0x1a]
  4084c3:	pop    eax
  4084c4:	push   edx
  4084c5:	ins    BYTE PTR es:[edi],dx
  4084c6:	test   eax,0x48a42cfb
  4084cb:	inc    esi
  4084cc:	fsub   QWORD PTR [eax-0x48]
  4084cf:	loop   0x4084cf
  4084d1:	or     eax,0xef6d3bab
  4084d6:	jmp    0x4084f4
  4084d8:	mov    eax,ds:0x36700880
  4084dd:	dec    eax
  4084de:	jecxz  0x408549
  4084e0:	aaa    
  4084e1:	mov    DWORD PTR [ebx+0x7550ffec],esi
  4084e7:	cwde   
  4084e8:	mov    bh,0xa3
  4084ea:	cs dec ebx
  4084ec:	out    dx,eax
  4084ed:	mov    edi,0x8a7f08ce
  4084f2:	fld    QWORD PTR [edi-0x67]
  4084f5:	test   eax,0x8455cc00
  4084fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084fb:	pushf  
  4084fc:	(bad)  
  4084fd:	js     0x4084da
  4084ff:	daa    
  408500:	sub    eax,0x85b4b58e
  408505:	mov    esi,edi
  408507:	pop    ebp
  408508:	in     eax,0x4d
  40850a:	add    dl,BYTE PTR [ecx]
  40850c:	shl    DWORD PTR [eax],1
  40850e:	lock adc eax,ecx
  408511:	push   edx
  408512:	es sti 
  408514:	and    eax,DWORD PTR [edx-0x44]
  408517:	fbstp  TBYTE PTR [eax]
  408519:	mov    ds:0xeec3c39e,eax
  40851e:	jle    0x4084b6
  408520:	xchg   edi,eax
  408521:	(bad)  [ebx+ecx*2+0x26]
  408525:	xor    BYTE PTR [edx-0x62d86784],al
  40852b:	psubd  mm1,QWORD PTR [ecx-0x74]
  40852f:	push   eax
  408530:	cwde   
  408531:	shr    BYTE PTR [edx-0x24],0x1d
  408535:	cs jne 0x40857c
  408538:	inc    esi
  408539:	jns    0x4085b6
  40853b:	in     al,0x38
  40853d:	pop    ebx
  40853e:	cmp    DWORD PTR [eax+0xd],edx
  408541:	mov    fs,ecx
  408543:	inc    eax
  408544:	loopne 0x408526
  408546:	and    eax,0xf26806ff
  40854b:	icebp  
  40854c:	dec    esi
  40854d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40854e:	shl    BYTE PTR [esi+0x7e22dda3],0x8c
  408555:	cmp    DWORD PTR [edx-0x14],ebx
  408558:	aad    0xa3
  40855a:	fidivr WORD PTR es:[eax-0x7b]
  40855e:	(bad)  
  40855f:	bound  edx,QWORD PTR [ebx]
  408561:	daa    
  408562:	add    al,0x93
  408564:	fld    st(6)
  408566:	mov    ecx,0xd4516486
  40856b:	icebp  
  40856c:	outs   dx,DWORD PTR ds:[esi]
  40856d:	pusha  
  40856e:	adc    al,0x2e
  408570:	adc    dl,ah
  408572:	cmp    eax,0x7734dfe6
  408577:	fsub   QWORD PTR [eax+0x17]
  40857a:	jp     0x40852e
  40857c:	mov    edi,0xcb6d506c
  408581:	stos   DWORD PTR es:[edi],eax
  408582:	mov    DWORD PTR [eax+0x75188c32],esp
  408588:	imul   ebx,DWORD PTR [eax],0x49
  40858b:	and    DWORD PTR cs:[edi],esp
  40858e:	scas   eax,DWORD PTR es:[edi]
  40858f:	mov    ebp,0x804fa26a
  408594:	dec    ebp
  408595:	and    DWORD PTR [ebp+0xb],eax
  408598:	pop    ss
  408599:	add    eax,0xf264b95e
  40859e:	rcr    ecx,cl
  4085a0:	ret    
  4085a1:	out    0xe9,eax
  4085a3:	dec    eax
  4085a4:	add    DWORD PTR [esi],0xffffff98
  4085a7:	cmp    esi,DWORD PTR [ecx+0x8]
  4085aa:	pop    ebp
  4085ab:	and    DWORD PTR [ecx+edi*1+0x2d],0x76
  4085b0:	xchg   esp,eax
  4085b1:	ds ins BYTE PTR es:[edi],dx
  4085b3:	cli    
  4085b4:	(bad)  
  4085b5:	cmp    BYTE PTR [edi],ch
  4085b7:	repnz dec eax
  4085b9:	into   
  4085ba:	addr16 stc 
  4085bc:	jne    0x4085d0
  4085be:	jle    0x40860d
  4085c0:	(bad)  
  4085c1:	pop    esi
  4085c2:	sub    al,0xf4
  4085c4:	xor    eax,0x1fe31889
  4085c9:	stos   DWORD PTR es:[edi],eax
  4085ca:	xor    DWORD PTR [esi],eax
  4085cc:	adc    eax,0x9299183a
  4085d1:	mov    edx,DWORD PTR [ebx]
  4085d3:	dec    eax
  4085d4:	jae    0x408593
  4085d6:	syscall 
  4085d8:	pop    es
  4085d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085da:	push   ebp
  4085db:	lea    ecx,[ebp+0x6c]
  4085de:	dec    ebx
  4085df:	ss jge 0x40858c
  4085e2:	cmp    BYTE PTR [ebp+0x717aca46],0xc
  4085e9:	inc    esp
  4085ea:	das    
  4085eb:	sub    eax,0x96bc9344
  4085f0:	inc    eax
  4085f1:	mov    dl,0x4f
  4085f3:	pop    esi
  4085f4:	fsub   DWORD PTR [esi+edx*2+0xd]
  4085f8:	xlat   BYTE PTR ds:[ebx]
  4085f9:	xchg   ecx,eax
  4085fa:	dec    ebx
  4085fb:	and    al,0xf5
  4085fd:	xchg   ebx,eax
  4085fe:	dec    ebp
  4085ff:	mov    edx,0xaaf89680
  408604:	fldenv [eax-0x1a10903c]
  40860a:	add    eax,0xf185a55b
  40860f:	or     bh,0xe9
  408612:	pop    edi
  408613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408614:	push   es
  408615:	cmp    ebp,ecx
  408617:	loop   0x4085c0
  408619:	and    al,BYTE PTR [edi-0x2b]
  40861c:	aam    0xae
  40861e:	inc    esp
  40861f:	add    BYTE PTR ds:0xbf449f1b,dl
  408625:	dec    edi
  408626:	mov    esp,0xd90fb840
  40862b:	or     eax,0x9e28f788
  408630:	inc    edx
  408631:	sbb    DWORD PTR [ecx],esi
  408633:	dec    ebx
  408634:	mov    eax,ds:0x5a90d6b
  408639:	jae    0x408666
  40863b:	fistp  DWORD PTR [ebx+0x43b256f7]
  408641:	push   ebp
  408642:	test   eax,0x136f6fc9
  408647:	call   0xedc974ee
  40864c:	ds jle 0x40869d
  40864f:	or     al,0x35
  408651:	jnp    0x4085da
  408653:	xchg   edi,eax
  408654:	mov    ebp,0xcb16208d
  408659:	pop    edx
  40865a:	iret   
  40865b:	fcom   QWORD PTR [ebx-0x59]
  40865e:	retf   
  40865f:	imul   esp,DWORD PTR [esi+0x31bc9a3f],0xfffffff1
  408666:	xor    eax,0x2b8d4b7f
  40866b:	add    bh,dl
  40866d:	xchg   BYTE PTR [edx+0x404b47de],bl
  408673:	push   ebx
  408674:	out    0xe4,al
  408676:	aas    
  408677:	(bad)  
  408678:	push   ds
  408679:	aad    0x0
  40867b:	push   edx
  40867c:	repz cmp al,0x88
  40867f:	push   ebx
  408680:	clc    
  408681:	fs retf 
  408683:	cmp    dh,BYTE PTR [ebp-0x4d]
  408686:	cli    
  408687:	std    
  408688:	jp     0x4086f6
  40868a:	adc    DWORD PTR [ebp-0x25583ee7],0xaeb60ace
  408694:	sbb    BYTE PTR [ebx-0x73096d57],al
  40869a:	push   0x88215ff2
  40869f:	cmp    ecx,ecx
  4086a1:	jmp    0x4de52108
  4086a6:	push   ss
  4086a7:	ss repnz hlt 
  4086aa:	dec    ebx
  4086ab:	xchg   DWORD PTR [ecx-0x182a2fc3],ecx
  4086b1:	fidiv  DWORD PTR [ebx+0x4d28e9a3]
  4086b7:	sub    al,0xb6
  4086b9:	mov    ?,WORD PTR [edi-0x41fdb343]
  4086bf:	jle    0x408735
  4086c1:	xor    al,0x33
  4086c3:	ja     0x408729
  4086c5:	mov    ds:0x9a494829,al
  4086ca:	lods   eax,DWORD PTR ds:[esi]
  4086cb:	add    esp,DWORD PTR [esi+0x58107416]
  4086d1:	stos   DWORD PTR es:[edi],eax
  4086d2:	mov    ah,0xb2
  4086d4:	int    0xa7
  4086d6:	icebp  
  4086d7:	sub    esp,ecx
  4086d9:	sbb    eax,0x7f3c63f9
  4086de:	or     eax,0x5e49d2d6
  4086e3:	xchg   BYTE PTR [esi+0x2a],dl
  4086e6:	cld    
  4086e7:	or     al,0xa9
  4086e9:	and    BYTE PTR [ebp+0x74],ch
  4086ec:	je     0x408683
  4086ee:	or     bl,BYTE PTR [ecx-0x72]
  4086f1:	loopne 0x408747
  4086f3:	add    BYTE PTR [ebx+0x4d],dl
  4086f6:	jle    0x40872d
  4086f8:	fwait
  4086f9:	mov    dl,BYTE PTR [eax+0x62]
  4086fc:	mov    ss,esi
  4086fe:	call   0xf202b209
  408703:	retf   0x470d
  408706:	and    DWORD PTR [ebp+0x5d77223b],edx
  40870c:	mov    esi,0xfedbd6f3
  408711:	or     cl,0x47
  408714:	fbld   TBYTE PTR [edx+ecx*8+0x1a95f8cd]
  40871b:	push   ebx
  40871c:	mov    ecx,0x5fc94bb7
  408721:	xchg   edx,eax
  408722:	pop    edx
  408723:	mov    eax,eax
  408725:	call   0xaba25052
  40872a:	cwde   
  40872b:	push   ebp
  40872c:	sbb    eax,0xdd919c81
  408731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408732:	jnp    0x40879c
  408734:	mov    esi,0x86fcb4af
  408739:	mov    eax,0xacb53ebf
  40873e:	enter  0x1213,0x9e
  408742:	xchg   ebx,eax
  408743:	mov    edx,0x79b88bcf
  408748:	sub    BYTE PTR [esi],bh
  40874a:	dec    esi
  40874b:	dec    edx
  40874c:	mov    esp,0x9261cb0b
  408751:	mov    ebx,0x1c43f0c7
  408756:	push   0xffffff99
  408758:	int    0x8a
  40875a:	int3   
  40875b:	(bad)  
  40875c:	call   0x3e68976d
  408761:	sub    al,0x2d
  408763:	ss leave 
  408765:	sub    edx,edx
  408767:	add    dh,BYTE PTR [edx]
  408769:	loope  0x40877a
  40876b:	xlat   BYTE PTR ds:[ebx]
  40876c:	add    al,0x81
  40876e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40876f:	std    
  408770:	mov    bl,0x92
  408772:	cmp    BYTE PTR [ebx-0x4f],ch
  408775:	mov    dl,0x56
  408777:	in     eax,dx
  408778:	mov    dh,0xf5
  40877a:	call   0x81f2:0x9c36ff96
  408781:	aaa    
  408782:	pop    ebx
  408783:	retf   0xc9f4
  408786:	xor    DWORD PTR ds:0x4cb2c569,esi
  40878c:	pushf  
  40878d:	nop
  40878e:	xchg   ebx,eax
  40878f:	jbe    0x40877e
  408791:	aas    
  408792:	cwde   
  408793:	fsubr  DWORD PTR [edx]
  408795:	dec    ebx
  408796:	xor    al,0xdc
  408798:	mov    dh,0x91
  40879a:	sub    esp,eax
  40879c:	dec    edi
  40879d:	sub    al,0xc4
  40879f:	cmp    al,0x39
  4087a1:	stos   BYTE PTR es:[edi],al
  4087a2:	test   BYTE PTR [ecx+0x26],ah
  4087a5:	fist   DWORD PTR [edi-0x5a]
  4087a8:	push   cs
  4087a9:	adc    eax,0xe2d7a83e
  4087ae:	outs   dx,DWORD PTR ss:[esi]
  4087b0:	push   edx
  4087b1:	jb     0x40879a
  4087b3:	or     al,0x18
  4087b5:	mov    al,ds:0x8d5e6535
  4087ba:	inc    edx
  4087bb:	cmp    eax,0x9fdd0eb6
  4087c0:	or     al,0x59
  4087c2:	int3   
  4087c3:	rcl    DWORD PTR [esi-0x63],0x2b
  4087c7:	(bad)  
  4087c8:	ja     0x4087cc
  4087ca:	gs pop ds
  4087cc:	or     ch,BYTE PTR [eax+0x27]
  4087cf:	mov    cl,0x4a
  4087d1:	add    DWORD PTR [edi-0x51d7871c],edi
  4087d7:	shr    BYTE PTR [eax-0x62679d48],cl
  4087dd:	js     0x408799
  4087df:	push   0x74
  4087e1:	or     eax,0xbbbf500
  4087e6:	neg    BYTE PTR [eax-0x1d9fba7b]
  4087ec:	xor    al,bl
  4087ee:	lock pushf 
  4087f0:	or     al,0x8
  4087f2:	scas   al,BYTE PTR es:[edi]
  4087f3:	mov    al,ds:0xe6658adf
  4087f8:	mov    DWORD PTR [edx+edx*1],ebx
  4087fb:	mov    bl,0xf0
  4087fd:	jp     0x4087ce
  4087ff:	push   ss
  408800:	fmul   DWORD PTR [ecx+0x33a6db7b]
  408806:	and    al,cl
  408808:	shl    edi,0xc4
  40880b:	cld    
  40880c:	outs   dx,DWORD PTR ds:[esi]
  40880d:	xor    ebp,DWORD PTR [ebx-0xb28e2a]
  408813:	(bad)  
  408814:	retf   0x12e2
  408817:	pop    edx
  408818:	pop    esp
  408819:	(bad)  
  40881a:	(bad)  
  40881b:	adc    ch,bl
  40881d:	stc    
  40881e:	xor    eax,0x9304ba
  408823:	inc    esi
  408824:	arpl   dx,sp
  408826:	repz aas 
  408828:	or     DWORD PTR [edi+0x38463e18],0x39d19bf6
  408832:	and    DWORD PTR [edx+0x2c],eax
  408835:	mov    esp,0xc806e23c
  40883a:	sbb    eax,ebp
  40883c:	pop    esp
  40883d:	jmp    0x40887c
  40883f:	stos   BYTE PTR es:[edi],al
  408840:	jmp    0x383fe7f
  408845:	lods   eax,DWORD PTR ds:[esi]
  408846:	adc    dh,dh
  408848:	rol    BYTE PTR [edi],cl
  40884a:	(bad)  
  40884b:	dec    esi
  40884c:	push   esp
  40884d:	lds    eax,FWORD PTR [ecx+0x769c92b7]
  408853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408854:	xchg   DWORD PTR [eax-0xf],edi
  408857:	mov    ah,0x1e
  408859:	les    ebp,FWORD PTR [edi+0x59e458af]
  40885f:	mov    eax,ds:0xddb515d9
  408864:	aaa    
  408865:	lea    edx,[edx+0x77]
  408868:	sub    ecx,edi
  40886a:	inc    edi
  40886b:	or     BYTE PTR [edi+0x60],al
  40886e:	inc    ebx
  40886f:	push   es
  408870:	jns    0x408821
  408872:	test   eax,0x517abb85
  408877:	jp     0x40880d
  408879:	jmp    0x4088b0
  40887b:	mov    al,0xc9
  40887d:	fdivp  st(0),st
  40887f:	adc    al,0x2e
  408881:	inc    ecx
  408882:	lahf   
  408883:	inc    edx
  408884:	shl    BYTE PTR [ecx*4-0x331782e1],1
  40888b:	dec    esi
  40888c:	cmp    bl,BYTE PTR [esi-0x100e16c3]
  408892:	test   DWORD PTR [edi+0x4],ecx
  408895:	test   BYTE PTR [esi+edx*2],cl
  408898:	jp     0x408849
  40889a:	jmp    0x408877
  40889c:	pop    ds
  40889d:	jle    0x408834
  40889f:	rcr    DWORD PTR [ebx-0x27],0x18
  4088a3:	std    
  4088a4:	lds    ecx,FWORD PTR ds:0x22fffd89
  4088aa:	push   ebx
  4088ab:	adc    esp,DWORD PTR [ecx+ebx*1+0x46]
  4088af:	sti    
  4088b0:	ss xor al,0x3a
  4088b3:	mov    al,ds:0xf40ed13a
  4088b8:	xadd   DWORD PTR [edx+0x148b1994],esp
  4088bf:	loope  0x4088df
  4088c1:	xchg   esi,eax
  4088c2:	test   al,0x4c
  4088c4:	aad    0xf1
  4088c6:	mov    ebp,0x4d9db1dc
  4088cb:	mov    esi,0x3117d4b9
  4088d0:	sub    DWORD PTR ds:0x688a4b6,ecx
  4088d6:	lahf   
  4088d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088d8:	mov    cl,0x9
  4088da:	and    DWORD PTR [esi+0x2bebce38],ebp
  4088e0:	leave  
  4088e1:	push   esi
  4088e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e3:	inc    edi
  4088e4:	xchg   esi,eax
  4088e5:	popa   
  4088e6:	in     eax,0x51
  4088e8:	fs stc 
  4088ea:	pop    es
  4088eb:	in     al,dx
  4088ec:	push   ebx
  4088ed:	add    edx,edi
  4088ef:	jae    0x408883
  4088f1:	mov    WORD PTR [ebx+ebp*8-0x5dbd4233],ss
  4088f8:	test   al,0xfc
  4088fa:	xor    al,0x8f
  4088fc:	add    al,0xc
  4088fe:	sbb    al,0x79
  408900:	pushf  
  408901:	xchg   ebp,eax
  408902:	jbe    0x408952
  408904:	mov    ah,0x5d
  408906:	rcr    eax,1
  408908:	dec    edi
  408909:	dec    ecx
  40890a:	xlat   BYTE PTR ds:[ebx]
  40890b:	loope  0x408966
  40890d:	popa   
  40890e:	hlt    
  40890f:	fwait
  408910:	pop    ecx
  408912:	ins    DWORD PTR es:[edi],dx
  408913:	mov    BYTE PTR [ebx+0x7b],0xfb
  408917:	push   0x13531533
  40891c:	data16 cmp bh,ah
  40891f:	and    BYTE PTR [eax+0x59],bl
  408922:	into   
  408923:	mov    al,0x93
  408925:	cmp    BYTE PTR [edi+0x6e],al
  408928:	ficomp DWORD PTR [ebp+0x7e]
  40892b:	int    0xb8
  40892d:	xor    eax,0x914cd133
  408932:	xchg   edi,eax
  408933:	loope  0x4088e7
  408935:	hlt    
  408936:	lods   eax,DWORD PTR ds:[esi]
  408937:	ins    DWORD PTR es:[edi],dx
  408938:	ret    
  408939:	cbw    
  40893b:	add    eax,0x2652c967
  408940:	mov    ch,0x8f
  408942:	inc    ebx
  408943:	xor    cl,BYTE PTR [ecx-0x2b]
  408946:	jnp    0x408914
  408948:	outs   dx,DWORD PTR ds:[esi]
  408949:	jmp    0x7b74:0x99e07897
  408950:	push   esi
  408951:	loope  0x4088db
  408953:	outs   dx,BYTE PTR ds:[esi]
  408954:	add    eax,0x6d5cdaea
  408959:	xlat   BYTE PTR cs:[ebx]
  40895b:	es cli 
  40895d:	jmp    0xeab4:0xa6d671a6
  408964:	and    al,0xef
  408966:	repz in eax,dx
  408968:	loop   0x40899d
  40896a:	dec    ebp
  40896b:	loop   0x4088fc
  40896d:	sub    eax,0xf59558
  408972:	imul   eax,eax,0x1d0fa7bb
  408978:	fs inc esi
  40897a:	pop    ebp
  40897b:	clc    
  40897c:	add    bl,dh
  40897e:	gs and bh,al
  408981:	loope  0x408975
  408983:	dec    ch
  408985:	mov    ds:0x50d947cf,eax
  40898a:	mov    al,ds:0xf3f8fed7
  40898f:	aas    
  408990:	out    dx,eax
  408991:	js     0x4089d3
  408993:	cs into 
  408995:	push   esp
  408996:	test   eax,0xdf085faf
  40899b:	nop
  40899c:	test   BYTE PTR [eax+ecx*2+0x6e],dh
  4089a0:	fstp   TBYTE PTR [edx-0x13970f7c]
  4089a6:	enter  0xc4be,0xe4
  4089aa:	mov    edi,0xe7d3a2cf
  4089af:	pop    es
  4089b0:	retf   
  4089b1:	cwde   
  4089b2:	(bad)  
  4089b3:	es out dx,al
  4089b5:	mov    DWORD PTR [ecx+0x4cabd57e],ebx
  4089bb:	pop    esp
  4089bc:	in     al,0x89
  4089be:	mov    eax,0x180a7998
  4089c3:	repz inc esp
  4089c5:	int    0x53
  4089c7:	(bad)  
  4089c8:	pop    esi
  4089c9:	repz add al,0x29
  4089cc:	jecxz  0x408a0a
  4089ce:	out    dx,eax
  4089cf:	stc    
  4089d0:	xor    BYTE PTR [edx+0x728f4e07],0x3c
  4089d7:	ja     0x408a34
  4089d9:	sbb    dl,BYTE PTR es:[esi+0x0]
  4089dd:	test   BYTE PTR [ecx+0x50],bl
  4089e0:	mov    dh,0xcc
  4089e2:	rcl    DWORD PTR [ebx],1
  4089e4:	imul   DWORD PTR [ebp+0x2c2f4861]
  4089ea:	inc    esi
  4089eb:	out    0xd5,eax
  4089ed:	mov    esp,0x28f0ddf6
  4089f3:	xor    eax,DWORD PTR [ebx+0x32]
  4089f6:	pop    ss
  4089f7:	xor    BYTE PTR [ebx-0x3d],al
  4089fa:	sbb    al,cl
  4089fc:	fs push ds
  4089fe:	fdivr  QWORD PTR [eax-0x7a]
  408a01:	fnstenv [ebx]
  408a03:	bound  ebp,QWORD PTR [ebx]
  408a05:	adc    DWORD PTR [ebx+0xe],edx
  408a08:	test   eax,0x8b875ce2
  408a0d:	mov    ds:0x7d420ff0,eax
  408a12:	mov    al,ds:0x67af631a
  408a17:	mov    edx,DWORD PTR [eax+0x78]
  408a1a:	das    
  408a1b:	fbstp  TBYTE PTR [esp+ebx*8-0x60e0ae66]
  408a22:	xlat   BYTE PTR ds:[ebx]
  408a23:	fxch   st(6)
  408a25:	shr    BYTE PTR [ebx-0x53],0x82
  408a29:	inc    edi
  408a2a:	rcl    ebx,1
  408a2c:	hlt    
  408a2d:	arpl   WORD PTR [esi+0x10270e0e],dx
  408a33:	jecxz  0x4089fd
  408a35:	xor    DWORD PTR [edi-0x1b637dc2],0xda04ca66
  408a3f:	fiadd  WORD PTR [esi-0x51ca1ce5]
  408a45:	or     al,0x59
  408a47:	test   al,0xd8
  408a49:	out    dx,eax
  408a4a:	jbe    0x408ac5
  408a4c:	mov    bh,0x8a
  408a4e:	jge    0x408a71
  408a50:	jae    0x408a37
  408a52:	stos   DWORD PTR es:[edi],eax
  408a53:	ret    0x4047
  408a56:	fcom   QWORD PTR [edi]
  408a58:	daa    
  408a59:	mov    DWORD PTR [eax-0x66f20e18],edx
  408a5f:	lahf   
  408a60:	fcmovnbe st,st(6)
  408a62:	cmp    bl,BYTE PTR [edi]
  408a64:	mov    al,ds:0x90747ee5
  408a69:	mov    esi,0x8fea0d05
  408a6e:	mov    eax,DWORD PTR [edi-0x7e]
  408a71:	gs or  edx,eax
  408a74:	sub    bl,BYTE PTR [ecx]
  408a76:	leave  
  408a77:	inc    esp
  408a78:	xor    bl,dl
  408a7a:	push   eax
  408a7b:	sbb    dh,BYTE PTR [edx+0x4e]
  408a7e:	cmp    al,0xbc
  408a80:	dec    ebx
  408a81:	cwde   
  408a82:	cmp    eax,0xd01ce761
  408a87:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a89:	sar    BYTE PTR [esi-0x44],0x69
  408a8d:	loope  0x408a3e
  408a8f:	das    
  408a90:	rcl    edi,1
  408a92:	mov    esp,DWORD PTR [esp+esi*1+0x393af6e6]
  408a99:	jmp    0xf38f:0x2e8ce2d0
  408aa0:	push   ecx
  408aa1:	add    BYTE PTR [edx+0x27],dl
  408aa4:	sbb    DWORD PTR [edi],ebx
  408aa6:	xchg   ebx,eax
  408aa7:	jmp    0x426e:0x61017e2e
  408aae:	xchg   DWORD PTR [ebp+0x29],ebp
  408ab1:	in     al,0x3b
  408ab3:	dec    edi
  408ab4:	popf   
  408ab5:	add    edx,ebx
  408ab7:	out    0xbc,al
  408ab9:	lods   al,BYTE PTR ds:[esi]
  408aba:	retf   0xd02f
  408abd:	sub    DWORD PTR [ebx+0x78662be0],ebx
  408ac3:	std    
  408ac4:	mov    ah,BYTE PTR [edi+0x66]
  408ac7:	fidivr DWORD PTR [esi+ebp*2]
  408aca:	pop    ecx
  408acb:	xchg   edi,eax
  408acc:	and    eax,0xfb9f6adb
  408ad1:	cmp    DWORD PTR ss:[edx],ebp
  408ad4:	jne    0x408aca
  408ad6:	jns    0x408b51
  408ad8:	mov    cl,0x42
  408ada:	xlat   BYTE PTR ds:[ebx]
  408adb:	jne    0x408b1b
  408add:	mov    edx,0x5c77b3bc
  408ae2:	dec    ebp
  408ae3:	repz mov ds:0x9cdb68a,al
  408ae9:	mov    edi,DWORD PTR [ebx+ebp*2-0x77]
  408aed:	sti    
  408aee:	std    
  408aef:	out    0x64,eax
  408af1:	in     eax,0x4d
  408af3:	cwde   
  408af4:	ins    DWORD PTR es:[edi],dx
  408af5:	xlat   BYTE PTR gs:[ebx]
  408af7:	lods   eax,DWORD PTR ds:[esi]
  408af8:	and    DWORD PTR [esi],ecx
  408afa:	mov    edx,?
  408afc:	xchg   esi,ebp
  408afe:	rcl    BYTE PTR gs:[ecx+esi*1],1
  408b02:	add    BYTE PTR [esi+0x4243b0d9],bh
  408b08:	xor    eax,DWORD PTR ds:0xf9b00818
  408b0e:	iret   
  408b0f:	inc    ebx
  408b10:	mov    esi,0x1d346df5
  408b15:	or     esp,DWORD PTR [ecx]
  408b17:	out    0x88,al
  408b19:	sbb    al,0x77
  408b1b:	dec    esp
  408b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b1d:	xchg   ebx,eax
  408b1e:	adc    DWORD PTR [edi+0x28bb8fc2],edi
  408b24:	push   0x1a
  408b26:	push   ebx
  408b27:	(bad)  
  408b28:	jnp    0x408acf
  408b2a:	adc    dl,BYTE PTR [eax]
  408b2c:	stos   DWORD PTR es:[edi],eax
  408b2d:	lds    edi,FWORD PTR [esi-0x79539cf3]
  408b33:	xor    DWORD PTR [eax+0x2be148d7],ebx
  408b39:	push   edi
  408b3a:	and    bh,BYTE PTR [edx]
  408b3c:	(bad)  
  408b3d:	stc    
  408b3e:	sbb    bl,BYTE PTR [esi]
  408b40:	ss push esp
  408b42:	xor    BYTE PTR [ecx+0x48],dl
  408b45:	sub    ebx,DWORD PTR gs:[edi-0x792486fd]
  408b4c:	dec    ecx
  408b4d:	mov    ah,0x1c
  408b4f:	add    eax,0x726b45a9
  408b54:	sahf   
  408b55:	xor    eax,0xfa4b2bda
  408b5a:	in     al,0x64
  408b5c:	imul   edi,DWORD PTR [esp+edi*2+0x6c],0xef1392d6
  408b64:	sbb    DWORD PTR [ecx+ebx*1+0x6433d29f],ebx
  408b6b:	icebp  
  408b6c:	cmp    BYTE PTR [esi],bl
  408b6e:	pop    ecx
  408b6f:	aas    
  408b70:	lock in eax,0x75
  408b73:	push   ebx
  408b74:	or     bl,bh
  408b76:	inc    esp
  408b77:	idiv   BYTE PTR [esi-0x58]
  408b7a:	mov    dh,0x5e
  408b7c:	dec    esi
  408b7d:	pop    es
  408b7e:	xchg   ebp,eax
  408b7f:	fcom   QWORD PTR [esi]
  408b81:	sub    eax,0x31be3d0d
  408b86:	jmp    0x3ba5:0x59c5f55
  408b8d:	cld    
  408b8e:	inc    eax
  408b8f:	sbb    esi,edi
  408b91:	sub    bl,BYTE PTR [ecx+ebp*4+0x43]
  408b95:	loopne 0x408bc2
  408b97:	inc    eax
  408b98:	cmp    ebp,DWORD PTR ds:0x3b0f24d7
  408b9e:	adc    BYTE PTR [ebx*2+0xb08cbd2],al
  408ba5:	lahf   
  408ba6:	add    BYTE PTR [esi+0x65],ah
  408ba9:	adc    eax,0x7b
  408bac:	nop
  408bad:	loop   0x408b6d
  408baf:	push   edi
  408bb0:	xor    eax,0x12e8fe38
  408bb5:	stos   BYTE PTR es:[edi],al
  408bb6:	frstor [eax]
  408bb8:	mov    fs,WORD PTR ds:0xc26433cb
  408bbe:	imul   esi,DWORD PTR [esi-0x124765da],0x6dab4a4f
  408bc8:	pop    eax
  408bc9:	push   ecx
  408bca:	popf   
  408bcb:	mov    bh,0xd1
  408bcd:	imul   DWORD PTR [ecx]
  408bcf:	jae    0x408bcd
  408bd1:	push   0xffffffda
  408bd3:	mov    dl,0xb1
  408bd5:	into   
  408bd6:	dec    esp
  408bd7:	add    eax,DWORD PTR es:[edx-0xa]
  408bdb:	mov    DWORD PTR [ebx],edi
  408bdd:	push   ebp
  408bde:	or     al,0xf7
  408be0:	gs xor al,0x82
  408be3:	nop
  408be4:	mov    WORD PTR [edx+eax*4-0x189e1d69],fs
  408beb:	inc    ebx
  408bec:	pushf  
  408bed:	cs jg  0x408b80
  408bf0:	or     eax,0x7fbc36a4
  408bf5:	xlat   BYTE PTR ds:[ebx]
  408bf6:	iret   
  408bf7:	out    dx,eax
  408bf8:	in     eax,dx
  408bf9:	test   DWORD PTR [edi],esi
  408bfb:	rcr    ebx,cl
  408bfd:	leave  
  408bfe:	cmp    DWORD PTR [ecx],esp
  408c00:	out    0x3f,eax
  408c02:	repz jmp 0xfa38:0x4a6f1e87
  408c0a:	neg    DWORD PTR [eax-0x2600036f]
  408c10:	stc    
  408c11:	aam    0x32
  408c13:	push   esi
  408c14:	ins    BYTE PTR es:[edi],dx
  408c15:	push   es
  408c16:	ins    BYTE PTR es:[edi],dx
  408c17:	inc    ecx
  408c18:	mov    ds:0x134098d6,eax
  408c1d:	push   esi
  408c1e:	scas   al,BYTE PTR es:[edi]
  408c1f:	sub    ebp,0xffffffe9
  408c22:	pop    esp
  408c23:	ds mov dl,0xf6
  408c26:	fnsave [eax+0x40ec6419]
  408c2c:	xchg   ecx,eax
  408c2d:	mov    edi,0xa3d6aeb9
  408c32:	jo     0x408c95
  408c34:	mov    ds:0xff2f60cc,al
  408c39:	xor    al,0x54
  408c3b:	(bad)  
  408c3c:	pop    ds
  408c3d:	fsub   QWORD PTR gs:[edi+eiz*4-0x7a6263c2]
  408c45:	xor    DWORD PTR ds:0xf2df94f4,0xffffffa9
  408c4c:	or     dh,BYTE PTR [ecx-0x28768c84]
  408c52:	jp     0x408c30
  408c54:	ror    al,0xf3
  408c57:	xchg   ebx,eax
  408c58:	inc    edi
  408c59:	mov    bl,0xd1
  408c5b:	dec    esp
  408c5c:	inc    edx
  408c5d:	jge    0x408c18
  408c5f:	cmp    eax,0x39f6b8a2
  408c64:	mov    BYTE PTR [edi],0x64
  408c67:	jge    0x408c88
  408c69:	cmc    
  408c6a:	call   0x3c85903e
  408c6f:	repnz push 0x7172b483
  408c75:	lods   eax,DWORD PTR ds:[esi]
  408c76:	retf   
  408c77:	jmp    0x16c9:0xa4a6ad5
  408c7e:	(bad)  
  408c7f:	push   0xffffff9f
  408c81:	pop    eax
  408c82:	adc    DWORD PTR [esi+0xd],ecx
  408c85:	dec    DWORD PTR ds:0x45a278d6
  408c8b:	inc    edx
  408c8c:	repz pop ds
  408c8e:	inc    esp
  408c8f:	sti    
  408c90:	dec    ecx
  408c91:	(bad)  
  408c92:	pop    DWORD PTR [esi-0x72]
  408c95:	lods   al,BYTE PTR ds:[esi]
  408c96:	or     edi,esi
  408c98:	or     eax,0x1e7eade
  408c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c9e:	cdq    
  408c9f:	and    DWORD PTR [ebx+0x73],edi
  408ca2:	push   es
  408ca3:	jne    0x408c75
  408ca5:	in     al,dx
  408ca6:	push   ecx
  408ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ca8:	push   ebx
  408ca9:	jl     0x408c7f
  408cab:	mov    ch,0x8c
  408cad:	and    ch,BYTE PTR [esi-0x1]
  408cb0:	cmp    al,0x64
  408cb2:	inc    BYTE PTR [ebx]
  408cb4:	xor    esp,DWORD PTR [ebp+eax*1-0x4d73b1]
  408cbb:	mov    edx,0x5e5cba02
  408cc0:	es sub dh,cl
  408cc3:	xor    bl,al
  408cc5:	mov    ds:0xd683b9f4,al
  408cca:	push   esp
  408ccb:	cdq    
  408ccc:	sub    al,0x91
  408cce:	clc    
  408ccf:	mov    gs,eax
  408cd1:	mov    cl,ch
  408cd3:	cs jns 0x408d53
  408cd6:	mov    esp,0x2d964414
  408cdb:	mov    ch,0xb6
  408cdd:	and    cl,BYTE PTR [edi-0x3e348297]
  408ce3:	in     al,0x3d
  408ce5:	out    0x81,al
  408ce7:	mov    BYTE PTR [ebx-0x44],al
  408cea:	xchg   esp,eax
  408ceb:	pushf  
  408cec:	mov    eax,0x7cebbbe0
  408cf1:	rol    bh,0x98
  408cf4:	into   
  408cf5:	dec    ebx
  408cf6:	test   DWORD PTR [esi+ebx*8],0x6bb7fa97
  408cfd:	fsubr  DWORD PTR ds:0x7c57402d
  408d03:	out    0x79,eax
  408d05:	sub    bl,bh
  408d07:	nop
  408d08:	or     DWORD PTR [esi],0xffffffa5
  408d0b:	push   esi
  408d0c:	pop    ecx
  408d0d:	cmp    dl,BYTE PTR [edx]
  408d0f:	sub    BYTE PTR [ebp-0x6f321e6a],bl
  408d15:	jle    0x408cb1
  408d17:	push   esi
  408d18:	jp     0x408d3a
  408d1a:	mov    eax,ds:0x8f5bad36
  408d1f:	push   0xe
  408d21:	dec    edi
  408d22:	aam    0x41
  408d24:	push   edi
  408d25:	outs   dx,BYTE PTR ds:[esi]
  408d26:	cmp    BYTE PTR [eax+0x72],ah
  408d29:	mov    dh,0x49
  408d2b:	dec    edx
  408d2c:	xchg   ebp,eax
  408d2d:	dec    eax
  408d2e:	pop    ebx
  408d2f:	icebp  
  408d30:	xor    ecx,DWORD PTR [esi]
  408d32:	out    dx,eax
  408d33:	mov    al,ds:0x593bc2b4
  408d38:	fwait
  408d39:	jno    0x408cff
  408d3b:	pop    esp
  408d3c:	pop    esi
  408d3d:	pop    ebp
  408d3e:	cs popf 
  408d40:	adc    cl,ah
  408d42:	and    edx,ebx
  408d44:	jo     0x408d51
  408d46:	add    eax,0x5663a685
  408d4b:	loope  0x408d93
  408d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d4e:	inc    ebx
  408d4f:	xlat   BYTE PTR ds:[ebx]
  408d50:	popa   
  408d51:	xor    esp,eax
  408d53:	es xchg edx,eax
  408d55:	out    dx,al
  408d56:	fdiv   QWORD PTR [edx]
  408d58:	fwait
  408d59:	test   eax,0xd9a6d68d
  408d5e:	nop
  408d5f:	jmp    DWORD PTR [eax-0x39]
  408d62:	dec    edx
  408d63:	hlt    
  408d64:	or     esp,DWORD PTR [ecx]
  408d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d67:	xchg   edi,eax
  408d68:	fstp   TBYTE PTR [esi]
  408d6a:	rol    BYTE PTR [eax+0x3d],1
  408d6d:	dec    esi
  408d6e:	sbb    dh,al
  408d70:	or     eax,0x8fac68c9
  408d75:	lea    edx,[esi+0x16b2a7e8]
  408d7b:	in     eax,dx
  408d7c:	lock dec edi
  408d7e:	xor    DWORD PTR [ecx],0x4ac678c
  408d84:	sub    dl,BYTE PTR [ecx]
  408d86:	(bad)  
  408d87:	frstor [ebx+0xa982814]
  408d8d:	adc    ecx,DWORD PTR ds:0xbd68079
  408d93:	es js  0x408d7b
  408d96:	push   esp
  408d97:	push   cs
  408d98:	mov    cl,0x2a
  408d9a:	inc    eax
  408d9b:	jb     0x408dbd
  408d9d:	and    eax,0x7087a4ae
  408da2:	mov    al,ds:0x21aaee5d
  408da7:	loopne 0x408e24
  408da9:	(bad)  
  408daa:	sbb    BYTE PTR [edi],ah
  408dac:	int3   
  408dad:	(bad)  
  408dae:	mov    eax,0x16e9233
  408db3:	sbb    ecx,DWORD PTR [eax]
  408db5:	dec    edx
  408db6:	fs push esp
  408db8:	or     bh,BYTE PTR [edi]
  408dba:	neg    al
  408dbc:	cmp    al,0x3
  408dbe:	ror    dl,cl
  408dc0:	cs pop ss
  408dc2:	pop    ebx
  408dc3:	lods   al,BYTE PTR ds:[esi]
  408dc4:	(bad)  
  408dc5:	or     DWORD PTR [edx],ebp
  408dc7:	pusha  
  408dc8:	jl     0x408df5
  408dca:	ss aaa 
  408dcc:	inc    edi
  408dcd:	push   esp
  408dce:	fs imul edi,ecx,0xd156f505
  408dd5:	cmp    DWORD PTR [edx],esp
  408dd7:	jns    0x408d94
  408dd9:	cmp    dl,BYTE PTR [esi]
  408ddb:	lock jo 0x408d6e
  408dde:	cmp    al,0x38
  408de0:	sar    DWORD PTR [ebx+edi*4+0x26e8cab],cl
  408de7:	jae    0x408e59
  408de9:	mov    edi,0x5df36820
  408dee:	or     edx,DWORD PTR [ecx]
  408df0:	pushf  
  408df1:	ins    BYTE PTR es:[edi],dx
  408df2:	and    al,0x1a
  408df4:	out    0xf4,eax
  408df6:	sbb    eax,0xad073cbc
  408dfb:	lds    edi,FWORD PTR [eax+eax*8]
  408dfe:	mov    ch,0xe3
  408e00:	scas   al,BYTE PTR es:[edi]
  408e01:	jg     0x408df9
  408e03:	sub    BYTE PTR [esi],0xe4
  408e06:	cmp    BYTE PTR [esi+0x188a6bc1],bh
  408e0c:	fnstsw WORD PTR [ebp+0x46]
  408e0f:	cmp    ecx,esi
  408e11:	and    al,0xe2
  408e13:	sub    al,0xa8
  408e15:	pop    esp
  408e16:	and    al,BYTE PTR [esi-0x1a]
  408e19:	and    DWORD PTR [esi+0x24],edi
  408e1c:	mov    ds:0x37b15844,al
  408e21:	ins    DWORD PTR es:[edi],dx
  408e22:	jb     0x408e14
  408e24:	xor    DWORD PTR [edx-0x7d],ecx
  408e27:	jge    0x408e56
  408e29:	mov    edi,0x7c412bf2
  408e2e:	hlt    
  408e2f:	mov    eax,0x9283c348
  408e34:	jne    0x408e7d
  408e36:	cwde   
  408e37:	adc    DWORD PTR ds:0x3302e1c9,eax
  408e3d:	mov    fs,WORD PTR [ecx+0x22da5533]
  408e43:	loop   0x408ea4
  408e45:	xchg   esi,eax
  408e46:	loop   0x408e9e
  408e48:	(bad)
  408e4b:	dec    ebp
  408e4c:	stos   DWORD PTR es:[edi],eax
  408e4d:	ror    DWORD PTR [edx+0x3d],0x88
  408e51:	bswap  ebx
  408e53:	stc    
  408e54:	leave  
  408e55:	mov    BYTE PTR [ebp-0x42ab4aa1],ah
  408e5b:	jnp    0x408e06
  408e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e5e:	cmp    ebx,DWORD PTR [eax+0x6ef3ad2a]
  408e64:	push   edx
  408e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e66:	mov    ds:0xf612bb77,eax
  408e6b:	xchg   BYTE PTR [ebp+edx*4-0xd9a3487],ch
  408e72:	dec    esp
  408e73:	mov    ecx,0x1234114c
  408e78:	sbb    eax,DWORD PTR [eax+edx*1-0x7]
  408e7c:	iret   
  408e7d:	mov    ?,ebx
  408e7f:	add    ah,ch
  408e81:	sbb    al,0xcc
  408e83:	(bad)  
  408e85:	scas   al,BYTE PTR es:[edi]
  408e86:	and    BYTE PTR [ebx-0x19f5cb7e],dh
  408e8c:	xor    al,0x96
  408e8e:	cmp    al,0xdb
  408e91:	push   edx
  408e92:	lea    eax,[edx]
  408e94:	gs mov esp,0xb40cc8d6
  408e9a:	sti    
  408e9b:	push   0x9e0b4c6c
  408ea0:	dec    edi
  408ea1:	test   eax,0xf574ea5d
  408ea6:	enter  0xcb4c,0xd5
  408eaa:	cmc    
  408eab:	xor    esi,DWORD PTR [ecx-0x10]
  408eae:	hlt    
  408eaf:	sub    al,0xa1
  408eb2:	mov    bl,0x1f
  408eb4:	popf   
  408eb5:	jns    0x408e46
  408eb7:	(bad)  
  408eb8:	sub    dh,BYTE PTR [edi]
  408eba:	out    dx,eax
  408ebb:	jno    0x408f26
  408ebd:	jge    0x408f03
  408ebf:	daa    
  408ec0:	pusha  
  408ec1:	push   0x51573aef
  408ec6:	push   0xab3e5df2
  408ecb:	xor    eax,0x361a4058
  408ed0:	or     eax,0x792f997
  408ed5:	ss pop eax
  408ed7:	test   BYTE PTR [ebx],ah
  408ed9:	jo     0x408ed9
  408edb:	push   eax
  408edc:	inc    ebx
  408edd:	aad    0xd
  408edf:	jmp    0x40e1c2d5
  408ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ee5:	pop    esi
  408ee6:	jns    0x408edf
  408ee8:	mov    ds:0x3724d0d7,eax
  408eed:	cmp    BYTE PTR [ebp+0x790ae714],0x17
  408ef4:	(bad)  
  408ef5:	cmp    BYTE PTR [edx-0x49],dh
  408ef8:	add    bh,BYTE PTR [ecx+0x77]
  408efb:	popf   
  408efc:	xor    bh,BYTE PTR [edi+0xe]
  408eff:	cmp    DWORD PTR ds:0xa907513a,esi
  408f05:	pop    ebx
  408f06:	popf   
  408f07:	ret    
  408f08:	fisubr WORD PTR [eax-0x764ceb16]
  408f0e:	or     DWORD PTR [edx-0x78],ebp
  408f11:	inc    esp
  408f12:	push   es
  408f13:	sub    esp,ecx
  408f15:	fdivp  st(7),st
  408f17:	push   ecx
  408f18:	push   esp
  408f19:	cmp    al,0x21
  408f1b:	sti    
  408f1c:	jae    0x408f91
  408f1e:	push   ecx
  408f1f:	pop    ebx
  408f20:	inc    ebp
  408f21:	mov    dl,0x13
  408f23:	shl    BYTE PTR gs:[edx+0x1305a75a],1
  408f2a:	sbb    al,0x64
  408f2c:	pand   mm2,mm0
  408f2f:	jg     0x408f4d
  408f31:	or     esp,esi
  408f33:	mov    ch,0x83
  408f35:	jp     0x408ee1
  408f37:	pop    es
  408f38:	jo     0x408ec8
  408f3a:	push   ds
  408f3b:	jge    0x408f73
  408f3d:	mov    ds:0xef1ac075,eax
  408f42:	jbe    0x408f37
  408f44:	js     0x408f26
  408f46:	push   cs
  408f47:	call   0x7127:0x928dc39c
  408f4e:	pop    ecx
  408f4f:	clc    
  408f50:	fsubr  QWORD PTR [edx]
  408f52:	push   esi
  408f53:	xchg   edx,eax
  408f54:	and    dl,BYTE PTR [ebp-0x95ff5bb]
  408f5a:	xchg   esp,eax
  408f5b:	cmp    al,0x28
  408f5d:	mov    ecx,0xb6dd6963
  408f62:	inc    ebx
  408f63:	(bad)  
  408f65:	dec    edx
  408f66:	dec    ebp
  408f67:	push   0xffffffd7
  408f69:	lods   al,BYTE PTR gs:[esi]
  408f6b:	sub    ecx,ecx
  408f6d:	int3   
  408f6e:	mov    edi,0x1b70f391
  408f73:	jmp    0x408f26
  408f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f76:	inc    ebx
  408f77:	rcr    BYTE PTR [esi+edi*8],cl
  408f7a:	mov    WORD PTR [esi],?
  408f7c:	fsubr  DWORD PTR [edx+0x1463c29b]
  408f82:	jnp    0x408f34
  408f84:	jmp    0xb504:0x5e7cddb1
  408f8b:	stos   DWORD PTR es:[edi],eax
  408f8c:	retf   0x4fbf
  408f8f:	adc    DWORD PTR [esi-0x68],ebp
  408f92:	cmp    esi,edx
  408f94:	mov    bl,0x30
  408f96:	out    dx,eax
  408f97:	mov    ebx,0xe17a6e30
  408f9c:	cdq    
  408f9d:	pop    es
  408f9e:	push   ebx
  408f9f:	add    eax,ebx
  408fa1:	shld   ebx,eax,cl
  408fa4:	mov    ds:0x9d660416,al
  408fa9:	mov    eax,ds:0xbb2edb36
  408fae:	rcl    BYTE PTR [edx-0x35d6d88a],0xc1
  408fb5:	push   0xffffffd8
  408fb7:	adc    ebp,ecx
  408fb9:	ficomp DWORD PTR [ecx-0x2456dd22]
  408fbf:	and    BYTE PTR [edx-0x5b],0x72
  408fc3:	xchg   bl,ah
  408fc5:	hlt    
  408fc6:	into   
  408fc7:	test   al,0x1c
  408fc9:	mov    al,0xde
  408fcb:	outs   dx,BYTE PTR ds:[esi]
  408fcc:	adc    eax,0xc8dffba
  408fd1:	lock ss ffree st(6)
  408fd5:	ins    BYTE PTR es:[edi],dx
  408fd6:	and    edx,DWORD PTR [ebx]
  408fd8:	mov    esi,es
  408fda:	sahf   
  408fdb:	mov    al,0xeb
  408fdd:	cwde   
  408fde:	icebp  
  408fdf:	sbb    bh,dl
  408fe1:	mul    DWORD PTR [edi]
  408fe3:	lods   eax,DWORD PTR ds:[esi]
  408fe4:	mov    bh,0xfa
  408fe6:	ins    DWORD PTR es:[edi],dx
  408fe7:	fcom   st(3)
  408fe9:	mov    ds:0xae1bab37,eax
  408fee:	imul   BYTE PTR [eax-0x67]
  408ff1:	mov    DWORD PTR [edi+0x7f],ebp
  408ff4:	dec    ecx
  408ff5:	int3   
  408ff6:	(bad)  [ebx-0x3d]
  408ff9:	mov    ah,ah
  408ffb:	jmp    0xe76d3645
  409000:	cmp    edx,DWORD PTR [ecx]
  409002:	cmp    esp,ebx
  409004:	jb     0x408ff6
  409006:	mov    ds:0xb9fcc4a3,eax
  40900b:	aas    
  40900c:	retf   
  40900d:	es dec ebp
  40900f:	mov    esi,0x2d4e3f9e
  409014:	repz pop edi
  409016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409017:	mov    esp,0x100e6b8e
  40901c:	push   0xedeba879
  409021:	sub    al,0x4e
  409023:	rcl    BYTE PTR [ecx],1
  409025:	mov    bl,0x78
  409027:	data16 jne 0x409046
  40902a:	mov    esp,edi
  40902c:	pop    ebx
  40902d:	sbb    al,0xb9
  40902f:	rcr    DWORD PTR [ecx+ecx*1+0x7b],1
  409033:	mov    dl,0x48
  409035:	mov    ds:0xc71fa58c,al
  40903a:	stos   BYTE PTR es:[edi],al
  40903b:	xchg   cl,al
  40903d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40903e:	pop    es
  40903f:	ins    DWORD PTR es:[edi],dx
  409040:	lock aad 0x3a
  409043:	mov    ds:0x5e9f1274,al
  409048:	fiadd  WORD PTR [ebp-0x366db7b]
  40904e:	adc    DWORD PTR [edx],0xa59a4611
  409054:	add    bl,0x18
  409057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409058:	mov    esi,0x5a334ae9
  40905d:	pop    ebx
  40905e:	loop   0x40902a
  409060:	cdq    
  409061:	mov    dh,0x35
  409063:	xchg   esi,eax
  409064:	sub    eax,DWORD PTR [edi-0x7a102e02]
  40906a:	cmp    esp,DWORD PTR [edx-0x579f49f2]
  409070:	pop    ds
  409071:	not    BYTE PTR [esi]
  409073:	mov    cl,BYTE PTR [esi]
  409075:	adc    DWORD PTR ds:0xc9d374be,ebp
  40907b:	sub    eax,0x14c639bf
  409080:	cs mov edi,ebp
  409083:	xor    DWORD PTR [ebx+0x322f8ccb],edx
  409089:	cli    
  40908a:	fcmovbe st,st(0)
  40908c:	je     0x409020
  40908e:	cmp    al,0x75
  409090:	jmp    DWORD PTR [ebx]
  409092:	push   esi
  409093:	mov    esi,0xcad126cd
  409098:	sti    
  409099:	xor    eax,0xef9c30f8
  40909e:	sub    al,0x17
  4090a0:	fnsave [ebp+0x567a1dba]
  4090a6:	lods   eax,DWORD PTR ds:[esi]
  4090a7:	icebp  
  4090a8:	and    al,0xc9
  4090aa:	jmp    0x5a8b:0x4bdf893
  4090b1:	jns    0x409119
  4090b3:	ins    BYTE PTR es:[edi],dx
  4090b4:	push   esi
  4090b5:	jo     0x40907a
  4090b7:	mov    esp,0x1bc3012f
  4090bc:	enter  0x3694,0x48
  4090c0:	call   0xc5f444fe
  4090c5:	inc    esp
  4090c6:	xchg   ebx,eax
  4090c7:	(bad)  
  4090c8:	stc    
  4090c9:	in     al,dx
  4090ca:	mov    bl,0xaa
  4090cc:	or     cl,BYTE PTR [ebx]
  4090ce:	xchg   DWORD PTR [ebp+0x56908216],edx
  4090d4:	pop    es
  4090d5:	outs   dx,DWORD PTR ds:[esi]
  4090d6:	in     al,dx
  4090d7:	sar    DWORD PTR [ebx],cl
  4090d9:	into   
  4090da:	cmp    BYTE PTR [ebp-0x3bb7e79d],cl
  4090e0:	jp     0x409108
  4090e2:	sub    BYTE PTR [ebp+0x79],dl
  4090e5:	fist   DWORD PTR [ebp-0x6a]
  4090e8:	xlat   BYTE PTR ds:[ebx]
  4090e9:	xchg   edi,eax
  4090ea:	dec    edx
  4090eb:	mov    ebx,0xea04904f
  4090f0:	ret    0xd6e0
  4090f3:	jmp    0x409120
  4090f5:	inc    esi
  4090f6:	hlt    
  4090f7:	out    dx,al
  4090f8:	push   ebp
  4090f9:	stos   DWORD PTR es:[edi],eax
  4090fa:	cmp    BYTE PTR [edi],0xa5
  4090fd:	popa   
  4090fe:	jae    0x4090c6
  409100:	mov    bh,0x43
  409102:	xor    esi,eax
  409104:	leave  
  409105:	push   ebx
  409106:	in     al,dx
  409107:	jb     0x4090b6
  409109:	mov    bh,0x80
  40910b:	add    DWORD PTR [eax],esi
  40910d:	jnp    0x40911e
  40910f:	ror    ecx,1
  409111:	push   ebx
  409112:	xchg   ebx,eax
  409113:	jg     0x4090ea
  409115:	cmp    eax,DWORD PTR [eax]
  409117:	or     esp,DWORD PTR [edx+0x14]
  40911a:	jbe    0x40914e
  40911c:	shl    DWORD PTR [edx+0x3d2c6604],1
  409122:	and    al,0x53
  409124:	push   cs
  409125:	mov    ebx,0x36b3ad2
  40912a:	sahf   
  40912b:	into   
  40912c:	sbb    ah,cl
  40912e:	or     DWORD PTR [ebp-0x48],ebx
  409131:	mov    al,ah
  409133:	jle    0x409103
  409135:	stc    
  409136:	loop   0x4091a9
  409138:	jg     0x409193
  40913a:	cmp    BYTE PTR [eax-0xf3e05fc],0x9d
  409141:	mov    ah,0x8f
  409143:	dec    ecx
  409144:	cmp    edx,ebx
  409146:	mov    al,0x70
  409148:	icebp  
  409149:	enter  0xae43,0xd1
  40914d:	push   ds
  40914e:	fucomp st(0)
  409150:	sub    edi,DWORD PTR [eax+0x35c967a3]
  409156:	stc    
  409157:	aad    0xf7
  409159:	ret    0x4bad
  40915c:	mov    eax,0xf3b5d508
  409161:	cdq    
  409162:	mov    cl,0x72
  409164:	mov    edi,DWORD PTR [ebp*1-0x3b940e5b]
  40916b:	test   eax,0x609d79bd
  409170:	adc    DWORD PTR fs:[esi+0x54],0x50
  409175:	and    BYTE PTR [ecx-0x298d8652],bl
  40917b:	sub    DWORD PTR [edi-0x45],esp
  40917e:	lahf   
  40917f:	int    0x41
  409181:	in     eax,dx
  409182:	dec    ecx
  409183:	pop    ss
  409184:	xlat   BYTE PTR ds:[ebx]
  409185:	les    ecx,FWORD PTR [esi-0x37]
  409188:	adc    eax,0x3f1af18
  40918d:	mov    dl,0x31
  40918f:	xchg   ecx,eax
  409190:	pusha  
  409191:	mov    ds:0x49595a6c,eax
  409196:	mov    cl,0x3a
  409198:	lock cmp al,0x75
  40919b:	and    bh,0x18
  40919e:	mov    eax,0x19fd7213
  4091a3:	or     DWORD PTR [esi+0x5d],ebx
  4091a6:	lods   al,BYTE PTR ds:[esi]
  4091a7:	leave  
  4091a8:	js     0x40920d
  4091aa:	xor    al,0x1a
  4091ac:	mov    dl,0x3f
  4091ae:	hlt    
  4091af:	ss dec ebx
  4091b1:	bound  edi,QWORD PTR [eax]
  4091b3:	scas   eax,DWORD PTR es:[edi]
  4091b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091b5:	jae    0x40917c
  4091b7:	jle    0x409168
  4091b9:	(bad)  
  4091ba:	sahf   
  4091bb:	je     0x409166
  4091bd:	push   es
  4091be:	ds push eax
  4091c0:	fimul  WORD PTR [esi-0x60dc08d3]
  4091c6:	loope  0x4091e8
  4091c8:	xor    DWORD PTR [ebx+0x5d],edx
  4091cb:	pop    esi
  4091cc:	mul    BYTE PTR [esi-0x20]
  4091cf:	(bad)  
  4091d0:	jp     0x4091a8
  4091d2:	xor    esi,DWORD PTR [edx-0x7c]
  4091d5:	and    dl,BYTE PTR [edi+0x21]
  4091d8:	jae    0x40921b
  4091da:	ret    0x32f
  4091dd:	xor    ah,ch
  4091df:	test   BYTE PTR [eax-0x54],ah
  4091e2:	fidiv  WORD PTR [esi+0xf286fca]
  4091e8:	in     al,dx
  4091e9:	dec    eax
  4091ea:	dec    ecx
  4091eb:	sub    dh,BYTE PTR [ecx-0x617fc715]
  4091f1:	xor    BYTE PTR [edi+0xd009cce],dl
  4091f7:	(bad)  
  4091f8:	xchg   si,ax
  4091fa:	repnz fisub DWORD PTR [edx]
  4091fd:	icebp  
  4091fe:	adc    esi,DWORD PTR [eax]
  409200:	mov    ebx,0xd787b460
  409205:	cli    
  409206:	scas   eax,DWORD PTR es:[edi]
  409207:	ss push edx
  409209:	adc    bl,bh
  40920b:	inc    eax
  40920c:	push   0xbb1bfe9d
  409211:	mov    ebp,0x851da41f
  409216:	ret    
  409217:	clc    
  409218:	lock xlat BYTE PTR es:[ebx]
  40921b:	jb     0x4091a0
  40921d:	jns    0x40926d
  40921f:	aam    0xf0
  409221:	adc    eax,0x9adcd441
  409226:	ret    0xb109
  409229:	fxch   st(5)
  40922b:	fidiv  DWORD PTR [edx]
  40922d:	lods   al,BYTE PTR ds:[esi]
  40922e:	inc    eax
  40922f:	outs   dx,DWORD PTR ds:[esi]
  409230:	jbe    0x4091e2
  409232:	add    al,0x67
  409234:	xchg   eax,esp
  409236:	xlat   BYTE PTR ds:[ebx]
  409237:	fstp   DWORD PTR [ebx]
  409239:	pushf  
  40923a:	cmp    esi,esi
  40923c:	add    eax,0x5edc3fd
  409241:	data16 mov ch,BYTE PTR [eax+0x2a34fa1]
  409248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409249:	cli    
  40924a:	cli    
  40924b:	fild   QWORD PTR [eax]
  40924d:	out    dx,eax
  40924e:	lea    edi,[edi+esi*1+0x4]
  409252:	mov    edi,edi
  409254:	inc    edi
  409255:	icebp  
  409256:	ror    DWORD PTR [esi+0x2d],cl
  409259:	aam    0x39
  40925b:	cmp    ebp,esi
  40925d:	es xchg edx,eax
  40925f:	adc    BYTE PTR [ebp+0x5e4cc7de],ch
  409265:	lods   al,BYTE PTR ds:[esi]
  409266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409267:	xchg   DWORD PTR [ebp+0xe2748f4],esp
  40926d:	js     0x409223
  40926f:	mov    ecx,0x45a1c498
  409274:	leave  
  409275:	sbb    BYTE PTR [edx],cl
  409277:	nop
  409278:	and    eax,0xe373918
  40927d:	dec    BYTE PTR [edi+0x59]
  409280:	push   es
  409281:	out    dx,eax
  409282:	jle    0x409252
  409284:	mov    BYTE PTR [esi+ecx*1],dl
  409287:	cmp    BYTE PTR [edx-0x2c],al
  40928a:	into   
  40928b:	mov    eax,ds:0x51db3331
  409290:	push   eax
  409291:	lock dec esi
  409293:	std    
  409294:	ss push esp
  409296:	fsubr  QWORD PTR [edx]
  409298:	mov    esi,0x2233a25c
  40929d:	rol    BYTE PTR [edi],1
  40929f:	outs   dx,BYTE PTR ds:[esi]
  4092a0:	fldenv [esi]
  4092a2:	(bad)  
  4092a3:	dec    ebp
  4092a4:	leave  
  4092a5:	jbe    0x40930d
  4092a7:	sbb    ebp,DWORD PTR [eax-0x725454d2]
  4092ad:	jl     0x4092ab
  4092af:	adc    eax,0x2cc7feda
  4092b4:	in     al,dx
  4092b5:	jmp    0x17ea6be8
  4092ba:	xchg   DWORD PTR [edi+0x66bb91cb],edi
  4092c0:	jge    0x409310
  4092c2:	fidivr DWORD PTR [ebx-0x737227d]
  4092c8:	inc    eax
  4092c9:	cli    
  4092ca:	add    eax,0x702872c8
  4092cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092d0:	cwde   
  4092d1:	jecxz  0x4092b8
  4092d3:	and    eax,0x825f1810
  4092d8:	sbb    al,0x6d
  4092da:	sub    eax,0x5314a6bb
  4092df:	aas    
  4092e0:	adc    ah,al
  4092e2:	repz fld TBYTE PTR [ecx+0x68d238f8]
  4092e9:	mov    al,ds:0x2d02bb7b
  4092ee:	scas   al,BYTE PTR es:[edi]
  4092ef:	add    ah,BYTE PTR [ebx+0x74]
  4092f2:	mov    ebx,DWORD PTR [ecx-0x23]
  4092f5:	fdivr  st,st(4)
  4092f7:	mov    ah,0x49
  4092f9:	and    eax,DWORD PTR [edi+0x53b5973e]
  4092ff:	push   edi
  409300:	add    edi,edi
  409302:	daa    
  409303:	sbb    BYTE PTR [ebx+0x31],0x4b
  409307:	lahf   
  409308:	dec    edx
  409309:	mov    ds:0x3e0ea936,eax
  40930e:	xchg   ebp,eax
  40930f:	out    0x2e,al
  409311:	call   0xa3564b83
  409316:	test   esp,eax
  409318:	mov    dh,0xd1
  40931a:	sub    BYTE PTR [ebx],bl
  40931c:	inc    eax
  40931d:	aaa    
  40931e:	add    al,0x3d
  409320:	jne    0x4092a7
  409322:	ror    BYTE PTR [ebx-0x349dd54f],cl
  409328:	jecxz  0x409330
  40932a:	sar    bh,1
  40932c:	dec    ecx
  40932d:	mov    al,ds:0x50d1549e
  409332:	mov    gs,WORD PTR [edi]
  409334:	jl     0x409399
  409336:	mov    ch,0x10
  409338:	js     0x409398
  40933a:	aam    0xd1
  40933c:	lods   eax,DWORD PTR ds:[esi]
  40933d:	mov    ds:0xbc8cc33c,al
  409342:	pop    eax
  409343:	mov    ds:0x519b57dd,al
  409348:	sar    DWORD PTR [ebx+eax*4],1
  40934b:	adc    BYTE PTR [edi+0x54520374],bh
  409351:	enter  0x15b4,0xfe
  409355:	fdiv   st,st(4)
  409357:	je     0x40939e
  409359:	test   al,0xaa
  40935b:	(bad)  
  40935d:	jp     0x409302
  40935f:	frstor [eax]
  409361:	or     al,0x1c
  409363:	push   edx
  409364:	data16 sbb BYTE PTR [ebp+0x25],ah
  409368:	dec    esp
  409369:	sbb    eax,0x39744467
  40936e:	icebp  
  40936f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409370:	and    al,0xb7
  409372:	dec    ebp
  409373:	(bad)  
  409374:	mov    edx,0x340eb513
  409379:	pop    eax
  40937a:	mov    ecx,0xf75708e6
  40937f:	test   eax,0x4453db61
  409384:	jmp    0x43a7e3c3
  409389:	pop    edx
  40938a:	frstor [edx+ecx*1-0x3f]
  40938e:	aas    
  40938f:	lock test BYTE PTR [ebx],ah
  409392:	retf   
  409393:	pop    ss
  409394:	push   ecx
  409395:	popa   
  409396:	or     dl,al
  409398:	daa    
  409399:	xchg   ebp,eax
  40939a:	xchg   ecx,eax
  40939b:	pop    esi
  40939c:	push   ebp
  40939d:	push   ebx
  40939e:	cs jnp 0x409328
  4093a1:	sbb    DWORD PTR [si-0x43],eax
  4093a5:	cmp    DWORD PTR [esi+0x5f98420b],ebx
  4093ab:	leave  
  4093ac:	clc    
  4093ad:	mov    ds:0x903446c2,al
  4093b2:	dec    esp
  4093b3:	aad    0x6e
  4093b5:	inc    eax
  4093b6:	xor    ebp,DWORD PTR [esp+edi*4+0x70ebf5c5]
  4093bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093be:	or     DWORD PTR [edx+ecx*8],0xa0a8ed3c
  4093c5:	sub    dl,BYTE PTR [esi-0x339065c3]
  4093cb:	fcomi  st,st(5)
  4093cd:	xor    eax,0x2b942511
  4093d2:	sbb    edx,DWORD PTR [ebp+0x7682c753]
  4093d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093d9:	mov    edi,0x7fc068aa
  4093de:	retf   
  4093df:	mov    ds:0x150a3b37,eax
  4093e4:	(bad)  
  4093e5:	fstp   DWORD PTR [esi]
  4093e7:	mov    ds:0xd25dd9d0,al
  4093ec:	jno    0x4093fb
  4093ee:	fsub   DWORD PTR [ecx]
  4093f0:	out    0xee,eax
  4093f2:	enter  0x8eb1,0xbb
  4093f6:	push   edx
  4093f7:	mov    DWORD PTR [ecx+0x2054600e],edi
  4093fd:	arpl   WORD PTR [esi-0x7f],bp
  409400:	and    DWORD PTR [ebx-0x3],0xc4e668c6
  409407:	add    DWORD PTR [edx],edi
  409409:	mov    dh,0x16
  40940b:	jecxz  0x4093b9
  40940d:	mov    DWORD PTR [eax-0x57],esp
  409410:	call   0xeff4a652
  409415:	int    0x9b
  409417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409418:	cmp    al,0xc
  40941a:	adc    edi,DWORD PTR [edi-0x7ffe6927]
  409420:	add    ah,bh
  409422:	cmc    
  409423:	jg     0x409480
  409425:	and    esi,edi
  409427:	xchg   edi,eax
  409428:	pop    ecx
  409429:	das    
  40942a:	rcl    esp,1
  40942c:	mov    al,0xea
  40942e:	jae    0x4093f8
  409430:	test   eax,0xef0ba8ea
  409435:	xor    edi,DWORD PTR [ebp-0x7b767127]
  40943b:	add    al,0xe7
  40943d:	icebp  
  40943e:	mov    dh,dl
  409440:	xchg   DWORD PTR [eax],ebx
  409442:	std    
  409443:	pop    edx
  409444:	xor    cl,BYTE PTR [ebx-0x6d]
  409447:	pop    ss
  409448:	and    eax,0x2da43792
  40944d:	and    eax,0xdbf9c25f
  409452:	loop   0x409477
  409454:	sub    BYTE PTR [edx],al
  409456:	icebp  
  409457:	xchg   edi,eax
  409458:	jo     0x4094c7
  40945a:	mov    dh,0xc1
  40945c:	pop    edx
  40945d:	mov    fs,WORD PTR [edx+0x6c]
  409460:	xchg   ebx,eax
  409461:	rcr    BYTE PTR ds:0xa482aafb,0x33
  409468:	dec    esi
  409469:	mov    edi,0xda41a13b
  40946e:	pop    esp
  40946f:	pop    edi
  409470:	pop    eax
  409471:	bound  ecx,QWORD PTR [esi-0x66]
  409474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409475:	out    dx,al
  409476:	push   edx
  409477:	ins    BYTE PTR es:[edi],dx
  409478:	sub    edi,DWORD PTR [ecx]
  40947a:	pop    esi
  40947b:	int3   
  40947c:	repnz (bad) 
  40947e:	int    0x12
  409480:	mov    ds:0x68cc80a5,al
  409485:	int    0xfc
  409487:	inc    ebp
  409488:	pushf  
  409489:	xchg   edi,eax
  40948a:	inc    ecx
  40948b:	outs   dx,DWORD PTR ds:[esi]
  40948c:	pop    ss
  40948d:	jge    0x4094da
  40948f:	retf   
  409490:	add    BYTE PTR [ecx-0x3bfdba3e],ah
  409496:	hlt    
  409497:	cmp    cl,BYTE PTR ds:0x10a241b5
  40949d:	lods   al,BYTE PTR ds:[esi]
  40949e:	(bad)  
  40949f:	mov    edi,0x8d7ce1dc
  4094a4:	fldcw  WORD PTR [ebx+ecx*2-0x2d]
  4094a8:	push   ebp
  4094a9:	lahf   
  4094aa:	mov    al,ds:0xe8f28e7a
  4094af:	jns    0x409495
  4094b1:	jle    0x40943d
  4094b3:	sub    eax,ecx
  4094b5:	imul   eax,DWORD PTR [ecx-0x5ef8f9a6],0xffffff99
  4094bc:	fsubr  QWORD PTR [ecx-0x6f]
  4094bf:	fadd   QWORD PTR [ecx+0xd]
  4094c2:	inc    esp
  4094c3:	jmp    0x3235207c
  4094c8:	es inc eax
  4094ca:	popf   
  4094cb:	jmp    0xa68b:0xda53a94f
  4094d2:	scas   eax,DWORD PTR es:[edi]
  4094d3:	fdiv   QWORD PTR [edi+edi*1-0x45]
  4094d7:	icebp  
  4094d8:	cli    
  4094d9:	cwde   
  4094da:	jns    0x40953a
  4094dc:	jns    0x409532
  4094de:	sbb    al,al
  4094e0:	push   cs
  4094e1:	or     eax,0xb558d1c5
  4094e7:	push   esi
  4094e8:	punpckldq mm0,DWORD PTR [edi+0x36734f8d]
  4094ef:	popa   
  4094f0:	add    ebp,DWORD PTR [edx+0x67ef1f6f]
  4094f6:	mov    dl,0xf4
  4094f8:	mov    DWORD PTR [esi+0x6da250b3],eax
  4094fe:	into   
  4094ff:	dec    edi
  409500:	imul   eax
  409502:	sbb    DWORD PTR [ebx],ebx
  409504:	idiv   edx
  409506:	jo     0x409564
  409508:	jp     0x4094bd
  40950a:	(bad)  
  40950b:	test   ah,dl
  40950d:	xchg   esp,eax
  40950e:	lods   eax,DWORD PTR ds:[esi]
  40950f:	cmp    ebx,DWORD PTR [ebx+0x7e]
  409512:	dec    esp
  409513:	adc    DWORD PTR [ebx+0x13f0c14c],ebx
  409519:	cmp    al,0xfa
  40951b:	mov    ch,BYTE PTR [ebx+edi*2]
  40951e:	mov    bl,0x13
  409520:	dec    esp
  409521:	outs   dx,DWORD PTR ds:[esi]
  409522:	xchg   DWORD PTR [eax],esp
  409524:	add    DWORD PTR [ebx+0x176eced],0x61
  40952b:	jl     0x409578
  40952d:	lods   eax,DWORD PTR ds:[esi]
  40952e:	cmp    DWORD PTR [eax],ebp
  409530:	(bad)  [ecx-0x55e747bb]
  409536:	in     al,dx
  409537:	fsubr  QWORD PTR [eax]
  409539:	cmp    esp,esi
  40953b:	xchg   DWORD PTR [ecx-0x2a],edx
  40953e:	cmp    bl,BYTE PTR [ebx+0x4548f164]
  409544:	icebp  
  409545:	lods   eax,DWORD PTR ds:[esi]
  409546:	shld   DWORD PTR [ebx],edx,0x0
  40954a:	dec    ebx
  40954b:	aas    
  40954c:	jb     0x4095b4
  40954e:	add    BYTE PTR [edi-0x68],dl
  409551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409552:	enter  0x12fb,0xc9
  409556:	cmp    BYTE PTR [ecx-0x2c24d4d4],bl
  40955c:	add    edi,esp
  40955e:	(bad)  
  409560:	xchg   ecx,eax
  409561:	call   0xf9afa49b
  409566:	inc    edx
  409567:	xor    BYTE PTR [edx+0x3c837874],bl
  40956d:	test   al,0x4
  40956f:	ror    DWORD PTR [eax],cl
  409571:	(bad)  
  409572:	(bad)
  409575:	fisttp WORD PTR [esi]
  409577:	scas   al,BYTE PTR es:[edi]
  409578:	push   eax
  409579:	or     al,BYTE PTR [edx]
  40957b:	push   ss
  40957c:	mov    eax,0xa821724b
  409581:	mov    eax,ds:0xa945ef83
  409586:	ja     0x4095b9
  409588:	sub    ecx,DWORD PTR [edx-0x8]
  40958b:	push   es
  40958c:	push   es
  40958d:	and    cl,dl
  40958f:	stc    
  409590:	out    dx,eax
  409591:	lahf   
  409592:	shr    ecx,1
  409594:	jp     0x4095e9
  409596:	and    BYTE PTR [edx-0x57f43d9a],ah
  40959c:	aas    
  40959d:	(bad)  
  40959f:	retf   0xe16c
  4095a2:	dec    esi
  4095a3:	add    ecx,DWORD PTR [edx]
  4095a5:	aam    0xac
  4095a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095a8:	push   edi
  4095a9:	jge    0x409606
  4095ab:	dec    eax
  4095ac:	arpl   WORD PTR [esi],bp
  4095ae:	dec    esp
  4095af:	push   ecx
  4095b0:	inc    ecx
  4095b1:	lds    edi,FWORD PTR [eax-0x582cb1c4]
  4095b7:	sbb    cl,dl
  4095b9:	stos   BYTE PTR es:[edi],al
  4095ba:	mul    BYTE PTR [ebp-0x50]
  4095bd:	jle    0x409601
  4095bf:	or     al,0x26
  4095c1:	sub    BYTE PTR [eax+0x78e6f579],al
  4095c7:	mov    ch,0x49
  4095c9:	sbb    al,0x14
  4095cb:	mov    eax,0x705d4f12
  4095d0:	mov    esi,0xe2fa4c73
  4095d5:	mov    al,0x9b
  4095d7:	sub    esi,edx
  4095d9:	xor    eax,0x36fc978
  4095de:	loopne 0x409572
  4095e0:	xchg   ebp,eax
  4095e1:	jp     0x40959b
  4095e3:	in     eax,0xf1
  4095e5:	arpl   bx,dx
  4095e7:	jnp    0x40957e
  4095e9:	rol    BYTE PTR [eax-0x69],0x1b
  4095ed:	rcr    BYTE PTR [ebp-0x21],0x65
  4095f1:	add    BYTE PTR [edi],0x20
  4095f4:	xchg   edi,eax
  4095f5:	inc    edi
  4095f6:	ins    BYTE PTR es:[edi],dx
  4095f7:	push   edi
  4095f8:	iret   
  4095f9:	in     eax,0x9c
  4095fb:	add    eax,0x69471be2
  409600:	cld    
  409601:	jno    0x40963a
  409603:	adc    esp,edi
  409605:	icebp  
  409606:	xchg   ebp,eax
  409608:	mov    edi,DWORD PTR [ecx+0x6d]
  40960b:	call   0x8579:0xd8eb81a0
  409612:	fcmovu st,st(3)
  409614:	sub    al,0xf6
  409616:	mov    BYTE PTR [ebp-0x47b2fa50],bh
  40961c:	dec    ebp
  40961d:	std    
  40961e:	sbb    DWORD PTR [ebx+ebp*2],ebx
  409621:	xchg   ebx,eax
  409622:	jmp    0x40960e
  409624:	push   0xb1fee8e1
  409629:	aam    0x58
  40962b:	into   
  40962c:	and    eax,0xd4308ba7
  409631:	xor    ch,BYTE PTR [eax-0x67]
  409634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409635:	jae    0x409655
  409637:	fsubp  st(0),st
  409639:	push   0xffffff80
  40963b:	mov    esp,0x85437791
  409640:	outs   dx,BYTE PTR ds:[esi]
  409641:	xchg   ecx,eax
  409642:	shr    BYTE PTR [ebx-0x6e],0x8
  409646:	pop    esp
  409647:	and    bl,BYTE PTR [ebp+0x1b450b5b]
  40964d:	mov    ebx,0x62a4ec17
  409652:	fldlg2 
  409654:	or     cl,BYTE PTR [edx-0x294f9027]
  40965a:	je     0x4096db
  40965c:	sbb    edi,eax
  40965e:	sub    eax,0xbe4e07d8
  409663:	push   esi
  409664:	sbb    edi,DWORD PTR [eax-0x24f701b4]
  40966a:	sub    eax,0xc806963b
  40966f:	fcomp  DWORD PTR [ecx-0xb]
  409672:	adc    ebx,DWORD PTR [ebx-0x712e6d4e]
  409678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409679:	xchg   DWORD PTR [ebx],edi
  40967b:	jne    0x4096bf
  40967d:	ja     0x409669
  40967f:	aad    0x46
  409681:	or     ah,BYTE PTR gs:[edx-0x45]
  409685:	cmp    eax,0x3871fad6
  40968a:	xchg   DWORD PTR [ebx+0x79302131],eax
  409690:	push   0xffffff8a
  409692:	or     al,BYTE PTR [ebp+0xe]
  409695:	add    BYTE PTR [ecx+ebp*1],0xf2
  409699:	pop    ebx
  40969a:	mov    ds:0x41c457d0,al
  40969f:	ret    
  4096a0:	or     ebp,ebx
  4096a2:	push   0x1c
  4096a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096a5:	add    eax,0xce912f44
  4096aa:	arpl   WORD PTR [ebx+0x4b],bx
  4096ad:	ds cmp eax,0x45d3a6d7
  4096b3:	mov    ebp,0x5840255d
  4096b8:	idiv   BYTE PTR [esi-0x5a]
  4096bb:	bound  esp,QWORD PTR [ecx+eiz*4+0x3f]
  4096bf:	adc    eax,esi
  4096c1:	and    eax,0xdd71ea1f
  4096c6:	outs   dx,DWORD PTR ds:[esi]
  4096c7:	popa   
  4096c8:	jecxz  0x4096e7
  4096ca:	mov    edx,0x6796dd7a
  4096cf:	inc    eax
  4096d0:	shl    BYTE PTR [esi+0xd],0xc
  4096d4:	xchg   ebx,eax
  4096d5:	jmp    0x68b1:0x1b61048c
  4096dc:	cmp    eax,0x253759f9
  4096e1:	push   ecx
  4096e2:	rcr    BYTE PTR [ecx],0x5a
  4096e5:	imul   eax,DWORD PTR [eax-0x5e],0xffffffba
  4096e9:	ins    BYTE PTR es:[edi],dx
  4096ea:	jmp    FWORD PTR [ecx-0x1f51bb78]
  4096f0:	test   eax,0x571d5946
  4096f5:	popa   
  4096f6:	in     eax,0x4d
  4096f8:	mov    esi,DWORD PTR [edi-0x7b515642]
  4096fe:	jmp    0x40968a
  409700:	jle    0x4096c6
  409702:	mov    edi,0x79130984
  409707:	icebp  
  409708:	fwait
  409709:	pusha  
  40970a:	adc    al,0xbc
  40970c:	ds push ds
  40970e:	push   ecx
  40970f:	cmc    
  409710:	or     BYTE PTR [edx-0x5d],dl
  409713:	iret   
  409714:	jle    0x409727
  409716:	cmp    eax,0xf0515d98
  40971b:	lods   eax,DWORD PTR ds:[esi]
  40971c:	test   eax,0x51bdbae2
  409721:	mov    esp,0xb311e7ea
  409726:	sub    edx,DWORD PTR [ecx-0x42b06922]
  40972c:	inc    edx
  40972d:	lods   eax,DWORD PTR ds:[esi]
  40972e:	lea    esi,[ebx-0x4e8e1790]
  409734:	xchg   esi,eax
  409735:	xchg   esp,eax
  409736:	or     DWORD PTR [esi],ebx
  409738:	jne    0x409756
  40973a:	mov    ah,0xed
  40973c:	cmp    BYTE PTR [ebp-0x70e83019],cl
  409742:	in     eax,dx
  409743:	sbb    al,0x93
  409745:	aad    0x1f
  409747:	jle    0x4096ef
  409749:	jnp    0x4097b3
  40974b:	and    DWORD PTR [edi-0x656d1170],esp
  409751:	push   cs
  409752:	push   0x2c4a1470
  409757:	in     eax,dx
  409758:	jo     0x409726
  40975a:	cmp    al,0xab
  40975c:	dec    ebx
  40975d:	mov    dh,0xf4
  40975f:	add    bh,BYTE PTR [edx-0x34]
  409762:	adc    bh,BYTE PTR [ebx]
  409764:	hlt    
  409765:	aaa    
  409766:	fs push ss
  409768:	adc    esi,ebx
  40976a:	jge    0x4097b3
  40976c:	test   BYTE PTR [edx-0x54],dl
  40976f:	xor    BYTE PTR [edx+edi*2+0x33],dh
  409773:	arpl   WORD PTR [edi-0x47c92898],di
  409779:	repnz mov edi,esp
  40977c:	jbe    0x4097c7
  40977e:	xchg   esi,eax
  40977f:	mov    cl,0x30
  409781:	jo     0x4097f2
  409783:	and    DWORD PTR [ebx+0x6b],eax
  409786:	idiv   ebp
  409788:	fisub  DWORD PTR [ebx-0x2a8757e1]
  40978e:	and    BYTE PTR [edx-0x5b],0xbe
  409792:	cmc    
  409793:	xor    eax,DWORD PTR [ebx]
  409795:	retf   
  409796:	push   edx
  409797:	adc    BYTE PTR [ecx],cl
  409799:	xor    BYTE PTR [edi],0x1f
  40979c:	mov    al,ds:0x1a4c6c18
  4097a1:	jae    0x409749
  4097a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097a4:	mov    cl,0x86
  4097a6:	cs leave 
  4097a8:	bound  ecx,QWORD PTR [eax+0x755f74a5]
  4097ae:	xchg   edx,eax
  4097af:	in     eax,dx
  4097b0:	test   al,0x81
  4097b2:	dec    edx
  4097b3:	(bad)  
  4097b4:	cld    
  4097b5:	inc    ebx
  4097b6:	outs   dx,DWORD PTR ds:[esi]
  4097b7:	or     eax,0x1927367e
  4097bc:	test   DWORD PTR [edi+ebx*1+0x14f658c1],eax
  4097c3:	adc    al,BYTE PTR [ebx-0x72f59d0]
  4097c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ca:	cmp    bh,BYTE PTR [ebx]
  4097cc:	jmp    0x12dc9c91
  4097d1:	mov    es,ebp
  4097d3:	or     DWORD PTR [ebx+0x5f1082cd],0x19
  4097da:	dec    ebx
  4097db:	push   eax
  4097dc:	cmp    BYTE PTR [eax],ah
  4097de:	sub    dh,BYTE PTR [edx]
  4097e0:	pop    esi
  4097e1:	jnp    0x4097d7
  4097e3:	ficom  WORD PTR [edi]
  4097e5:	dec    eax
  4097e6:	sub    eax,0xd237ce94
  4097eb:	dec    ebp
  4097ec:	js     0x40982e
  4097ee:	(bad)  
  4097ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f0:	aad    0x37
  4097f2:	mov    ss,WORD PTR [eax+0x47]
  4097f5:	(bad)  
  4097f6:	mul    BYTE PTR [ebp-0x76]
  4097f9:	inc    esi
  4097fa:	adc    al,0xca
  4097fc:	jg     0x409873
  4097fe:	and    bl,BYTE PTR [edx]
  409800:	ins    BYTE PTR es:[edi],dx
  409801:	pop    edi
  409802:	xor    DWORD PTR [ebx-0x26a8c7a2],ebp
  409808:	dec    ebp
  409809:	pop    ecx
  40980a:	ja     0x409796
  40980c:	mov    al,0x3b
  40980e:	lods   eax,DWORD PTR ds:[esi]
  40980f:	mov    WORD PTR [eax-0x6e],ss
  409812:	retf   
  409813:	sbb    eax,0x215150d8
  409818:	hlt    
  409819:	mov    eax,0xb5917b2d
  40981e:	push   es
  40981f:	pop    esi
  409820:	sbb    al,0x37
  409822:	xor    BYTE PTR [esi],al
  409824:	cli    
  409825:	push   esp
  409826:	dec    ebx
  409827:	mov    ebp,0x13aa9217
  40982c:	or     eax,0x5f8a5b8d
  409831:	sub    al,dl
  409833:	xchg   esp,eax
  409834:	loopne 0x40987a
  409836:	jo     0x40986b
  409838:	sbb    eax,0xc55fae98
  40983d:	or     eax,esp
  40983f:	pop    edx
  409840:	push   ds
  409841:	sbb    al,0x7a
  409843:	cmp    al,0xc8
  409845:	mov    ds:0x29d65542,al
  40984a:	xchg   edx,eax
  40984b:	xor    BYTE PTR [esi-0x79e65b93],ch
  409851:	or     ah,cl
  409853:	clc    
  409854:	fistp  DWORD PTR [esi]
  409856:	dec    edx
  409857:	mov    eax,DWORD PTR [ebx+ebp*8+0x4d]
  40985b:	call   0x3daf8d7e
  409860:	jp     0x409867
  409862:	mov    eax,ds:0x202a2b95
  409867:	xlat   BYTE PTR ds:[ebx]
  409868:	inc    esi
  409869:	(bad)  
  40986a:	sar    DWORD PTR [edi],1
  40986c:	shr    dh,0xbc
  40986f:	jg     0x409820
  409871:	sahf   
  409872:	js     0x40987b
  409874:	call   0xa79cb9dc
  409879:	jp     0x409810
  40987b:	mov    ebx,cr2
  40987e:	in     al,0xf9
  409880:	inc    edi
  409881:	add    eax,0xb3ea09d0
  409886:	pop    eax
  409887:	call   0xd82a4f8b
  40988c:	enter  0x64c5,0x35
  409890:	mov    ds:0xfa033095,al
  409895:	add    eax,DWORD PTR [ecx]
  409897:	push   ebp
  409898:	sbb    al,0xfc
  40989a:	xor    ch,BYTE PTR [edi-0x7bd4075c]
  4098a0:	outs   dx,DWORD PTR ds:[esi]
  4098a1:	push   ebx
  4098a2:	repz adc DWORD PTR [ebx+0x77],ebp
  4098a6:	jmp    0x32be:0x262851b2
  4098ad:	adc    al,0x86
  4098af:	leave  
  4098b0:	xor    al,0x5f
  4098b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098b3:	in     al,0x64
  4098b5:	outs   dx,DWORD PTR ds:[esi]
  4098b6:	repz jae 0x409849
  4098b9:	out    0xaa,al
  4098bb:	mov    eax,ds:0xff385562
  4098c0:	jne    0x4098e9
  4098c2:	test   eax,0xa15d22da
  4098c7:	sbb    al,0xeb
  4098c9:	cdq    
  4098ca:	out    0x15,al
  4098cc:	cdq    
  4098cd:	add    DWORD PTR [ebx-0x23d2bd6e],edi
  4098d3:	pop    esp
  4098d4:	scas   eax,DWORD PTR es:[edi]
  4098d5:	xchg   ebp,eax
  4098d6:	out    dx,eax
  4098d7:	sahf   
  4098d8:	icebp  
  4098d9:	sbb    ecx,DWORD PTR [ebp-0x2e]
  4098dc:	(bad)  
  4098dd:	dec    esp
  4098de:	sub    dl,dl
  4098e0:	mov    dh,0x1b
  4098e2:	out    dx,al
  4098e3:	fs inc esi
  4098e5:	rcr    BYTE PTR [bp+0x5282],1
  4098ea:	mov    bh,0x79
  4098ec:	aam    0xed
  4098ee:	mov    esp,edx
  4098f0:	pop    ds
  4098f1:	retf   0x95e8
  4098f4:	mov    esi,0xf3cdfb3
  4098f9:	int3   
  4098fa:	pop    esi
  4098fb:	sub    DWORD PTR [ebx+0x29],eax
  4098fe:	mov    cl,0x3b
  409900:	mov    edx,0x53d93bd6
  409905:	iret   
  409906:	sub    eax,0x4adcdd5
  40990b:	fwait
  40990c:	mov    ebp,DWORD PTR [edi+eax*2]
  40990f:	mov    ebx,0x95104bbe
  409914:	add    DWORD PTR ss:[ecx-0x15],0xdbfb3db5
  40991c:	dec    edi
  40991d:	mov    BYTE PTR [eax],dh
  40991f:	enter  0x39da,0x2a
  409923:	mov    WORD PTR [edx-0x33a2615],cs
  409929:	and    al,0x95
  40992b:	out    dx,eax
  40992c:	cmp    al,0x9a
  40992e:	fst    QWORD PTR [ebp-0x76]
  409931:	cmp    al,0xb6
  409933:	jno    0x409970
  409935:	fsin   
  409937:	dec    esp
  409938:	mov    al,ds:0x76d23f8e
  40993d:	fmul   DWORD PTR [ecx-0x24846d16]
  409943:	fsub   QWORD PTR [edi+0x11]
  409946:	push   0xca8e98fc
  40994b:	pop    esp
  40994c:	call   0x49454d21
  409951:	mov    esi,0x3d0ad8cd
  409956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409957:	or     al,bl
  409959:	int3   
  40995a:	daa    
  40995b:	and    esi,esi
  40995d:	stos   BYTE PTR es:[edi],al
  40995e:	stos   BYTE PTR es:[edi],al
  40995f:	into   
  409960:	jbe    0x409934
  409962:	jmp    0x8dcf:0xc1dc9b8a
  409969:	mov    ds:0x5c32f185,al
  40996e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996f:	outs   dx,DWORD PTR ds:[esi]
  409970:	out    dx,eax
  409971:	rcl    cl,cl
  409973:	ins    BYTE PTR es:[edi],dx
  409974:	fst    QWORD PTR [ecx-0x40]
  409977:	jecxz  0x40997a
  409979:	cmp    eax,ecx
  40997b:	gs ret 
  40997d:	outs   dx,DWORD PTR ds:[esi]
  40997e:	sub    BYTE PTR [esi],ah
  409980:	cmp    eax,ebp
  409982:	xchg   esi,eax
  409983:	add    eax,0x6f4376f8
  409988:	clc    
  409989:	stos   BYTE PTR es:[edi],al
  40998a:	outs   dx,BYTE PTR ds:[esi]
  40998b:	clc    
  40998c:	xchg   BYTE PTR [edx+esi*4+0xd205bf3],dl
  409993:	cli    
  409994:	inc    ebp
  409995:	mov    bl,0xf8
  409997:	sbb    edx,DWORD PTR [ebx+ebx*2-0x1e]
  40999b:	xchg   esp,ecx
  40999d:	js     0x40992e
  40999f:	shl    DWORD PTR [edi+0x44122ebd],1
  4099a5:	sbb    ah,BYTE PTR [ebp+ebx*2+0x6c]
  4099a9:	jno    0x4099fc
  4099ab:	fcomp  st(2)
  4099ad:	or     BYTE PTR [edi-0x6336e20f],ah
  4099b3:	bound  edi,QWORD PTR [esp+edx*1+0x58688b3a]
  4099ba:	adc    BYTE PTR ds:0xdf0a69ee,0xd7
  4099c1:	lods   eax,DWORD PTR ds:[esi]
  4099c2:	pop    esp
  4099c3:	addr16 gs loopne 0x40995d
  4099c7:	test   eax,0x8e617065
  4099cc:	xor    BYTE PTR [esi+eax*2-0x7f],dh
  4099d0:	sub    al,ch
  4099d2:	mov    al,ds:0x6e6e15fb
  4099d7:	call   0xb05ddd21
  4099dc:	inc    eax
  4099dd:	xchg   ebp,eax
  4099de:	sub    BYTE PTR [ebx-0xa],al
  4099e1:	mov    ecx,0x481468e
  4099e6:	jb     0x4099ea
  4099e8:	pop    ss
  4099e9:	in     al,0xb9
  4099eb:	call   FWORD PTR [esp+edi*8-0xd]
  4099ef:	pusha  
  4099f0:	cmp    bl,BYTE PTR [edx-0x73854958]
  4099f6:	stc    
  4099f7:	sahf   
  4099f8:	scas   al,BYTE PTR es:[edi]
  4099f9:	sub    eax,edx
  4099fb:	pop    ecx
  4099fc:	or     eax,0x4d40d7e5
  409a01:	ret    0xaeb0
  409a04:	push   ds
  409a05:	ret    0x6029
  409a08:	pop    esi
  409a09:	sbb    cl,BYTE PTR [esi+edi*4-0x32]
  409a0d:	int    0xd9
  409a0f:	sub    eax,0x5530a635
  409a14:	mov    esi,0xb2494c53
  409a19:	ret    
  409a1a:	into   
  409a1b:	xacquire xchg BYTE PTR [edi],bl
  409a1e:	call   0x9d88:0xfaf4f743
  409a25:	sub    ebp,esi
  409a27:	inc    eax
  409a28:	sub    BYTE PTR [ebx-0x8301060],ah
  409a2e:	test   BYTE PTR [esp+ebx*2+0x4131bb5b],bl
  409a35:	loop   0x409ab0
  409a37:	or     eax,0x35d774ff
  409a3c:	mov    dh,BYTE PTR [esi+ebx*4]
  409a3f:	das    
  409a40:	sar    BYTE PTR [edx+ebx*4],0x8d
  409a44:	push   cs
  409a45:	repnz mov al,ds:0x65cc1d2c
  409a4b:	mov    dh,0x88
  409a4d:	adc    BYTE PTR [ebx-0x69],ch
  409a50:	mov    al,0x8b
  409a52:	test   BYTE PTR [ebx],bl
  409a54:	(bad)  
  409a55:	mov    al,ds:0xfd1dc69e
  409a5a:	(bad)  
  409a5b:	iret   
  409a5c:	ss stc 
  409a5e:	rol    ch,cl
  409a60:	ret    
  409a61:	mov    al,0x10
  409a63:	mov    bh,0x98
  409a65:	pop    edx
  409a66:	or     bh,BYTE PTR [esi]
  409a68:	clc    
  409a69:	mov    BYTE PTR [edi+0x33],bl
  409a6c:	jp     0x409a3d
  409a6e:	leave  
  409a6f:	pop    edx
  409a70:	pushf  
  409a71:	sbb    DWORD PTR [edi-0x47],ebx
  409a74:	push   eax
  409a75:	sbb    esp,esp
  409a77:	cmp    DWORD PTR [edi-0x439f96eb],0xffffff91
  409a7e:	jmp    0x409acc
  409a80:	retf   0x39a
  409a83:	inc    ebp
  409a84:	mov    ebx,0x88623b22
  409a89:	stos   DWORD PTR es:[edi],eax
  409a8a:	setle  bl
  409a8d:	hlt    
  409a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a8f:	shl    bl,cl
  409a91:	jmp    0x409a2e
  409a93:	jp     0x409a6c
  409a95:	cld    
  409a96:	jmp    0x409a64
  409a98:	and    DWORD PTR [edx],esi
  409a9a:	call   0xe6863ec1
  409a9f:	int    0xfb
  409aa1:	xchg   esi,eax
  409aa2:	push   eax
  409aa3:	xchg   esi,eax
  409aa4:	sub    eax,0x3eac4572
  409aa9:	xchg   esi,eax
  409aaa:	add    esp,DWORD PTR [edi-0x5d]
  409aad:	(bad)  [edi]
  409aaf:	add    BYTE PTR [edi-0x7c],0xa9
  409ab3:	(bad)  
  409ab4:	sahf   
  409ab5:	out    0xb7,al
  409ab7:	pop    ebp
  409ab8:	call   0xa466:0x35c6d0fa
  409abf:	mov    DWORD PTR ds:0x5474129b,eax
  409ac5:	fstp   TBYTE PTR [edx+0x5a33445d]
  409acb:	gs jl  0x409a78
  409ace:	call   0xcd813492
  409ad3:	dec    esp
  409ad4:	mov    edi,DWORD PTR [ebp+0x59]
  409ad7:	pop    es
  409ad8:	(bad)  
  409ad9:	js     0x409b10
  409adb:	data16 into 
  409add:	lock or DWORD PTR [ebp+0x2a],edi
  409ae1:	shl    DWORD PTR [edi-0x34e67696],1
  409ae7:	xchg   edx,ecx
  409ae9:	xor    dh,ah
  409aeb:	fsub   st(3),st
  409aed:	or     BYTE PTR [esi-0x1d],dl
  409af0:	stos   DWORD PTR es:[edi],eax
  409af1:	jecxz  0x409b4c
  409af3:	pop    edi
  409af4:	cmp    al,0x8d
  409af6:	push   ds
  409af7:	addr16 aad 0xe4
  409afa:	lods   al,BYTE PTR ds:[esi]
  409afb:	(bad)  
  409afc:	daa    
  409afd:	int    0xc8
  409aff:	dec    esi
  409b00:	cwde   
  409b01:	and    BYTE PTR [ebp-0x7e474b7a],0x24
  409b08:	xchg   BYTE PTR [esi+0x39],ch
  409b0b:	rol    DWORD PTR [ebp-0x71],cl
  409b0e:	sbb    esi,eax
  409b10:	nop
  409b11:	pop    ebx
  409b12:	mov    bh,0x76
  409b14:	sbb    dl,bl
  409b16:	sub    DWORD PTR [esi],eax
  409b18:	rcr    BYTE PTR [esi+0x56],cl
  409b1b:	mov    esi,DWORD PTR [edi+eiz*2-0x4d3c78e4]
  409b22:	mov    dh,0x83
  409b24:	mov    al,0xc9
  409b26:	fwait
  409b27:	les    ebx,FWORD PTR [eax]
  409b29:	jp     0x409b4e
  409b2b:	cdq    
  409b2c:	xchg   DWORD PTR [ecx+0x643c8526],ecx
  409b32:	(bad)  [edi]
  409b34:	sub    bh,BYTE PTR [ebp-0x3c]
  409b37:	xlat   BYTE PTR ds:[ebx]
  409b38:	call   0x6fd4:0x4768d222
  409b3f:	ror    DWORD PTR [esi],0xfb
  409b42:	sbb    BYTE PTR [edi-0x843d7ed],ah
  409b48:	addr16 popa 
  409b4a:	push   ebx
  409b4b:	xchg   esi,eax
  409b4c:	xchg   edx,eax
  409b4d:	xor    al,0x14
  409b50:	out    dx,eax
  409b51:	pop    ebx
  409b52:	mov    BYTE PTR [esi],dl
  409b54:	push   ebx
  409b55:	stc    
  409b56:	test   al,0x8e
  409b58:	int3   
  409b59:	pop    ds
  409b5a:	push   edx
  409b5b:	xchg   edi,eax
  409b5c:	dec    esi
  409b5d:	lds    eax,FWORD PTR [ebp-0x6d]
  409b60:	rol    DWORD PTR [esi+esi*2],cl
  409b63:	test   DWORD PTR [edx-0x685dfb4d],ecx
  409b69:	and    al,0xdd
  409b6b:	or     al,0x5
  409b6d:	xchg   ebp,eax
  409b6e:	jle    0x409b1d
  409b70:	loopne 0x409b60
  409b72:	mov    dh,0x9f
  409b74:	mov    ecx,0xdf5fdead
  409b79:	or     cl,BYTE PTR [ebp-0x17d47ece]
  409b7f:	push   cs
  409b80:	lock or DWORD PTR [ebp-0x6e],eax
  409b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b85:	sub    DWORD PTR [ebx],0x60e0e0a7
  409b8b:	sub    ebp,esi
  409b8d:	mov    bh,0x86
  409b8f:	dec    ebx
  409b90:	aam    0x43
  409b92:	rcr    BYTE PTR [edi-0x4ad60e89],cl
  409b98:	inc    ebp
  409b99:	push   ss
  409b9a:	rcl    BYTE PTR [ebp+0x6d],cl
  409b9d:	adc    ebx,eax
  409b9f:	div    DWORD PTR [esi]
  409ba1:	xor    DWORD PTR [ecx],ecx
  409ba3:	(bad)  
  409ba4:	div    DWORD PTR [eax]
  409ba6:	sub    DWORD PTR [edx+0x13d8ac7],ebp
  409bac:	stos   DWORD PTR es:[edi],eax
  409bad:	lock enter 0xf4ea,0x6c
  409bb2:	lock cld 
  409bb4:	leave  
  409bb5:	fbstp  TBYTE PTR [ebp-0x7f]
  409bb8:	call   0x5f9e19d9
  409bbd:	ins    BYTE PTR es:[edi],dx
  409bbe:	mov    cl,0xf9
  409bc0:	push   ebx
  409bc1:	pop    edx
  409bc2:	jnp    0x409b77
  409bc4:	aam    0x4e
  409bc6:	mov    esp,0xb3b44054
  409bcb:	sub    BYTE PTR [eax-0x600e7de0],al
  409bd1:	test   DWORD PTR [edi-0x6bab28fc],ecx
  409bd7:	jnp    0x409baa
  409bd9:	adc    ebp,DWORD PTR [ebp-0x149b35f]
  409bdf:	and    al,BYTE PTR [edi+0x55]
  409be2:	and    al,0xc5
  409be4:	jecxz  0x409c59
  409be6:	outs   dx,DWORD PTR ds:[esi]
  409be7:	push   edx
  409be8:	loop   0x409b86
  409bea:	xlat   BYTE PTR ds:[ebx]
  409beb:	arpl   ax,si
  409bed:	fidiv  WORD PTR [edx-0x7a5c5303]
  409bf3:	pop    ds
  409bf4:	daa    
  409bf5:	aas    
  409bf6:	out    0xb1,eax
  409bf8:	cmp    BYTE PTR [esi-0x77],bh
  409bfb:	retf   0x55e3
  409bfe:	xchg   ebx,eax
  409bff:	fidivr DWORD PTR ds:0x1c2e8018
  409c05:	ins    DWORD PTR es:[edi],dx
  409c06:	popa   
  409c07:	jg     0x409c31
  409c09:	mov    WORD PTR [esi-0x7f],es
  409c0c:	push   eax
  409c0d:	outs   dx,DWORD PTR ds:[esi]
  409c0e:	pushw  0x66
  409c11:	mov    eax,0x90e3177a
  409c16:	xchg   edi,eax
  409c17:	pop    ds
  409c18:	push   eax
  409c19:	jge    0x409bf9
  409c1b:	jne    0x409c06
  409c1d:	in     eax,dx
  409c1e:	test   DWORD PTR [ecx+0x3d7d0275],esp
  409c24:	repz xchg dx,ax
  409c27:	lods   eax,DWORD PTR ds:[esi]
  409c28:	(bad)  
  409c29:	xlat   BYTE PTR ds:[ebx]
  409c2a:	stos   BYTE PTR es:[edi],al
  409c2b:	and    BYTE PTR [ebx-0x79],dh
  409c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c2f:	(bad)  
  409c30:	pop    ebp
  409c31:	bound  ebp,QWORD PTR [ecx]
  409c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c34:	dec    ecx
  409c35:	xor    ebx,ebp
  409c37:	(bad)  [eax-0x63]
  409c3a:	and    eax,0xf3b20aa5
  409c3f:	popf   
  409c40:	mov    ecx,0x31895517
  409c45:	push   ebp
  409c46:	imul   edi,DWORD PTR [eax-0x22],0xfffffff5
  409c4a:	test   al,0xb
  409c4c:	mov    cl,0xb7
  409c4e:	mov    dl,0xf4
  409c50:	xchg   BYTE PTR [esi-0x1da69f0a],bl
  409c56:	cmp    al,0x2e
  409c58:	pop    ebp
  409c59:	push   eax
  409c5a:	not    BYTE PTR [eax+0x3a19e486]
  409c60:	jns    0x409c0c
  409c62:	jle    0x409c49
  409c64:	inc    BYTE PTR [ebp-0x6e77838d]
  409c6a:	adc    DWORD PTR [ebp-0x796398c9],esp
  409c70:	cmp    al,0x5
  409c72:	mov    ds:0x3c0560a7,al
  409c77:	aad    0x74
  409c79:	and    eax,0xeb6c6d9c
  409c7e:	inc    ebx
  409c7f:	adc    edi,DWORD PTR [ebx+esi*4-0x166589ef]
  409c86:	sbb    BYTE PTR [esi],al
  409c88:	push   esp
  409c89:	mov    ch,0x1d
  409c8b:	mov    edi,DWORD PTR [edi+0x56ff13a7]
  409c91:	inc    esi
  409c92:	push   0x260bc922
  409c97:	push   ebp
  409c98:	push   esp
  409c99:	jnp    0x409c4f
  409c9b:	jne    0x409cb9
  409c9d:	in     eax,dx
  409c9e:	sbb    eax,0x2e019385
  409ca3:	idiv   bh
  409ca5:	addr16 and al,0x13
  409ca8:	pop    edx
  409ca9:	imul   ebp,DWORD PTR [edi+0x16b98dc2],0xace15adb
  409cb3:	test   BYTE PTR [eax-0x4f],al
  409cb6:	sar    BYTE PTR [esi-0x23e0a57],1
  409cbc:	mov    dh,0x8d
  409cbe:	sub    ch,BYTE PTR [eax+0x4d]
  409cc1:	out    dx,eax
  409cc2:	pop    es
  409cc3:	pusha  
  409cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cc5:	mov    eax,ds:0xae9e73eb
  409cca:	lock ror DWORD PTR [eax+0x28],1
  409cce:	sub    ebp,DWORD PTR fs:[ecx]
  409cd1:	mov    ecx,DWORD PTR [edx+0x7f]
  409cd4:	sub    dh,BYTE PTR [edx-0x2b]
  409cd7:	jle    0x409d03
  409cd9:	int    0x26
  409cdb:	inc    ebp
  409cdc:	outs   dx,BYTE PTR ds:[esi]
  409cdd:	mov    ebx,0xe00bd626
  409ce2:	sti    
  409ce3:	std    
  409ce4:	pop    ss
  409ce5:	push   ss
  409ce6:	loope  0x409ca1
  409ce8:	js     0x409ceb
  409cea:	leave  
  409ceb:	inc    eax
  409cec:	pop    es
  409ced:	pop    ebx
  409cee:	in     eax,dx
  409cef:	dec    ecx
  409cf0:	icebp  
  409cf1:	xchg   BYTE PTR [edi],dl
  409cf3:	and    eax,0x16b1b18
  409cf8:	popf   
  409cf9:	sbb    al,BYTE PTR [esp+esi*1-0x68cee060]
  409d00:	push   0xa86afe0c
  409d05:	fmul   DWORD PTR [eax+0x54]
  409d08:	or     eax,0x2326a8c3
  409d0d:	stos   BYTE PTR es:[edi],al
  409d0e:	jb     0x409cac
  409d10:	cmp    esp,0xa837da57
  409d16:	icebp  
  409d17:	cmp    BYTE PTR [edx],ah
  409d19:	dec    ebx
  409d1a:	popa   
  409d1b:	mov    eax,0x13f126a4
  409d20:	stos   BYTE PTR es:[edi],al
  409d21:	sar    cl,cl
  409d23:	ja     0x409d1c
  409d25:	popf   
  409d26:	cmp    esp,DWORD PTR [ebp+0x3e]
  409d29:	and    DWORD PTR [edx+0xc],esp
  409d2c:	xlat   BYTE PTR ds:[ebx]
  409d2d:	arpl   WORD PTR [ecx+0x70760b7e],ax
  409d33:	out    0xd0,eax
  409d35:	imul   edi,DWORD PTR [edi],0xffffffeb
  409d38:	mov    ds:0xbd0c2986,eax
  409d3d:	(bad)  
  409d3e:	pop    esi
  409d3f:	popf   
  409d40:	push   0xffffffaf
  409d42:	rcr    DWORD PTR ss:[edx],0x72
  409d46:	inc    esp
  409d47:	div    ecx
  409d49:	sub    BYTE PTR [ebx-0x25],ch
  409d4c:	das    
  409d4d:	mov    eax,ds:0xc01a78ba
  409d52:	loopne 0x409d27
  409d54:	inc    ecx
  409d55:	sub    al,0x8b
  409d57:	pusha  
  409d58:	or     ecx,DWORD PTR [ebp-0x146740bc]
  409d5e:	dec    edx
  409d5f:	pop    edi
  409d60:	stos   DWORD PTR es:[edi],eax
  409d61:	jnp    0x409d25
  409d63:	mov    BYTE PTR [eax+esi*2],ah
  409d66:	xor    ecx,eax
  409d68:	pop    eax
  409d69:	dec    ebp
  409d6a:	stc    
  409d6b:	iret   
  409d6c:	repnz and eax,DWORD PTR [eax+0x7d29a95b]
  409d73:	repnz test BYTE PTR [ebx+eiz*8-0x6fbd5335],ah
  409d7b:	mov    bh,0x8
  409d7d:	sahf   
  409d7e:	arpl   WORD PTR [esi+0x2f],bp
  409d81:	dec    ebp
  409d82:	cmc    
  409d83:	mov    ds:0xdb48b734,al
  409d88:	xchg   esi,eax
  409d89:	xor    ebp,DWORD PTR [ebx]
  409d8b:	retf   0xccec
  409d8e:	leave  
  409d8f:	in     al,dx
  409d90:	pop    es
  409d91:	cld    
  409d92:	call   0xe918046a
  409d97:	repz cmc 
  409d99:	cmp    DWORD PTR [ebx*4+0x5fde2862],0xaa287f2d
  409da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409da5:	ss inc ecx
  409da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409da8:	or     al,0xea
  409daa:	or     BYTE PTR [edi-0x78],0xcc
  409dae:	dec    eax
  409daf:	fcom   QWORD PTR [ebx+0x7e9f88cb]
  409db5:	leave  
  409db6:	loope  0x409e23
  409db8:	std    
  409db9:	or     dl,ch
  409dbb:	jg     0x409de7
  409dbd:	(bad)  
  409dbe:	or     eax,0xdc6b8842
  409dc3:	pop    eax
  409dc4:	retf   
  409dc5:	arpl   WORD PTR [ecx],sp
  409dc7:	sub    eax,0x66a15725
  409dcc:	xchg   edi,eax
  409dcd:	out    dx,eax
  409dce:	retf   
  409dcf:	sub    eax,0x24d99350
  409dd4:	mov    ebp,DWORD PTR [eax]
  409dd6:	stc    
  409dd7:	iret   
  409dd8:	test   eax,0x12588a25
  409ddd:	mov    ah,0x6c
  409ddf:	or     eax,0x6e0df5bc
  409de4:	les    eax,FWORD PTR ds:0xb47ab850
  409dea:	inc    ebp
  409deb:	xor    eax,0x1eb1df2b
  409df0:	and    cl,BYTE PTR [ecx+0x56]
  409df3:	(bad)  
  409df4:	enter  0x4f32,0x21
  409df8:	mov    dl,0x67
  409dfa:	dec    ecx
  409dfb:	es mov ebp,0xb7933519
  409e01:	sbb    BYTE PTR [ecx+ebp*1-0x76],0xd5
  409e06:	call   0xafd5:0x6819e504
  409e0d:	jmp    0x409e04
  409e0f:	sub    bh,ah
  409e11:	mov    bh,0xfa
  409e13:	push   0xffffffc4
  409e15:	sbb    dl,0x35
  409e18:	jle    0x409e0e
  409e1a:	cmp    eax,0x5270ba65
  409e1f:	cli    
  409e20:	mov    es,ecx
  409e22:	jmp    0x409e1b
  409e24:	call   0x57a4:0x959158c6
  409e2b:	xchg   BYTE PTR [eax],dl
  409e2d:	push   es
  409e2e:	popf   
  409e2f:	mov    bh,BYTE PTR [esi-0x11]
  409e32:	out    0x2a,al
  409e34:	dec    esi
  409e35:	ficom  WORD PTR [ebx]
  409e37:	pusha  
  409e38:	mov    esp,0x2196592b
  409e3d:	imul   edi,edx,0xcd7a6c24
  409e43:	dec    esp
  409e44:	daa    
  409e45:	or     DWORD PTR [ebp+0x4c08b22e],ebx
  409e4b:	jbe    0x409ec1
  409e4d:	and    eax,ecx
  409e4f:	mov    edx,0xfbbfd1e0
  409e54:	arpl   sp,sp
  409e56:	sub    al,BYTE PTR [edi-0x32708f24]
  409e5c:	or     al,BYTE PTR [esi]
  409e5e:	icebp  
  409e5f:	inc    esp
  409e60:	pop    ds
  409e61:	stos   DWORD PTR es:[edi],eax
  409e62:	pop    ds
  409e63:	aad    0x7f
  409e65:	popa   
  409e66:	cli    
  409e67:	or     BYTE PTR [eax],0xe4
  409e6a:	jmp    0x70776cf
  409e6f:	lock lock les ebp,FWORD PTR [edx-0x44ee9fee]
  409e77:	std    
  409e78:	and    eax,0x66436d24
  409e7d:	out    0xe6,al
  409e7f:	vpor   xmm6,xmm5,XMMWORD PTR [ebx+edi*1-0x63]
  409e85:	int3   
  409e86:	(bad)  
  409e87:	and    al,0x32
  409e89:	pop    ebx
  409e8a:	out    dx,eax
  409e8b:	jl     0x409e84
  409e8d:	mov    ch,0x94
  409e8f:	xor    eax,0x3b92017f
  409e94:	or     bh,dh
  409e96:	pop    edx
  409e97:	fmul   DWORD PTR [eax+0x28]
  409e9a:	dec    eax
  409e9b:	and    al,BYTE PTR [eax-0x66]
  409e9e:	(bad)  
  409e9f:	or     BYTE PTR [eax+0x8],ch
  409ea2:	or     al,0x34
  409ea4:	mov    edx,0x5d2b666d
  409ea9:	popa   
  409eaa:	xor    BYTE PTR [eax-0x2f73d11f],ah
  409eb0:	inc    edx
  409eb1:	ss (bad) 
  409eb3:	add    al,0x78
  409eb5:	lods   eax,DWORD PTR ds:[esi]
  409eb6:	es or  cl,bh
  409eb9:	dec    bx
  409ebb:	and    al,0xf3
  409ebd:	xor    DWORD PTR [edx-0x44],edi
  409ec0:	xor    bh,BYTE PTR [ecx-0x36]
  409ec3:	xor    DWORD PTR [ecx],esp
  409ec5:	or     DWORD PTR [eax+edi*1+0x3b],0xffffffb1
  409eca:	xchg   esi,eax
  409ecb:	test   eax,0x97afe101
  409ed0:	lahf   
  409ed1:	jae    0x409eff
  409ed3:	xlat   BYTE PTR ds:[ebx]
  409ed4:	data16 jb 0x409f4d
  409ed7:	sbb    al,BYTE PTR [ebx]
  409ed9:	pop    ebp
  409eda:	pop    ebp
  409edb:	fbld   TBYTE PTR [edi]
  409edd:	sbb    al,0x21
  409edf:	sbb    bh,ah
  409ee1:	jecxz  0x409f35
  409ee3:	sti    
  409ee4:	cwde   
  409ee5:	push   edx
  409ee6:	xor    BYTE PTR [edx-0x6],ah
  409ee9:	bound  ebx,QWORD PTR [esi]
  409eeb:	scas   al,BYTE PTR es:[edi]
  409eec:	mov    esi,0x32b2c080
  409ef1:	ins    DWORD PTR es:[edi],dx
  409ef2:	jnp    0x409ebb
  409ef4:	jae    0x409f58
  409ef6:	js     0x409f3c
  409ef8:	daa    
  409ef9:	retf   
  409efa:	add    ah,ch
  409efc:	adc    DWORD PTR [esi+0x1e],0xc21544d0
  409f03:	jmp    FWORD PTR [eax+0x55]
  409f06:	fwait
  409f07:	and    al,0x39
  409f09:	mov    dl,BYTE PTR [ecx+esi*1+0x6]
  409f0d:	scas   eax,DWORD PTR es:[edi]
  409f0e:	pop    ebx
  409f0f:	mov    esp,0x663fc1ab
  409f14:	jno    0x409eb1
  409f16:	fild   DWORD PTR [edx]
  409f18:	inc    edx
  409f19:	inc    edx
  409f1a:	xchg   edi,eax
  409f1b:	icebp  
  409f1c:	icebp  
  409f1d:	loop   0x409f47
  409f1f:	std    
  409f20:	in     al,0x39
  409f22:	outs   dx,DWORD PTR ds:[esi]
  409f23:	stc    
  409f24:	(bad)
  409f27:	call   ebp
  409f29:	mov    ds:0xc8a7d8f9,eax
  409f2e:	icebp  
  409f2f:	mov    edx,eax
  409f31:	test   eax,0xa686e7dd
  409f36:	jmp    0x409f7a
  409f38:	repz push edi
  409f3a:	or     BYTE PTR [edx-0xc],0x40
  409f3e:	inc    eax
  409f3f:	ja     0x409f06
  409f41:	pop    ss
  409f42:	repz mov ebp,gs
  409f45:	add    BYTE PTR [edx+0x7a],ah
  409f48:	sub    eax,0x729f3b42
  409f4d:	mov    edi,0x617a3902
  409f52:	inc    esi
  409f53:	shl    ah,cl
  409f55:	push   esp
  409f56:	pushf  
  409f57:	or     DWORD PTR [ebp-0x3],0xdb1c77dc
  409f5e:	out    0xa,eax
  409f60:	pushf  
  409f61:	int    0x23
  409f63:	add    bl,ch
  409f65:	sub    cl,BYTE PTR [ebp-0x7ddb6d27]
  409f6b:	jle    0x409f83
  409f6d:	dec    edx
  409f6e:	xor    DWORD PTR [esi],eax
  409f70:	sub    eax,ebp
  409f72:	jp     0x409f48
  409f74:	add    DWORD PTR [eiz*8+0x509e7be7],ebp
  409f7b:	or     esi,0xc0b615bd
  409f81:	ror    BYTE PTR [esi-0x32e982fb],cl
  409f87:	mul    BYTE PTR [eax+0x2ecf0d0f]
  409f8d:	in     eax,dx
  409f8e:	inc    ebp
  409f8f:	test   al,0x6e
  409f91:	cld    
  409f92:	lahf   
  409f93:	adc    BYTE PTR [eax-0x2d9517ea],dh
  409f99:	xchg   ecx,eax
  409f9a:	mov    ebx,0xcd9a1d2d
  409f9f:	lds    esi,FWORD PTR cs:[ecx+0x6db30a8b]
  409fa6:	sbb    BYTE PTR [ecx-0x80],dl
  409fa9:	rol    BYTE PTR [eax+0x54412c55],1
  409faf:	rcl    DWORD PTR fs:[edi+0x65],1
  409fb3:	jg     0x409fb8
  409fb5:	xchg   BYTE PTR [ebp+0x4cc223e3],dl
  409fbb:	in     eax,0x52
  409fbd:	mov    ebp,0xf274a7f3
  409fc2:	cmp    esi,edx
  409fc4:	adc    eax,0x4ac48a9b
  409fc9:	outs   dx,BYTE PTR ds:[esi]
  409fca:	cmc    
  409fcb:	fnstenv [ecx]
  409fcd:	cmp    esp,DWORD PTR [ebx-0x5f]
  409fd0:	sub    BYTE PTR [ebx-0x692be67c],ah
  409fd6:	xchg   ecx,eax
  409fd7:	bound  ebp,QWORD PTR [ebp-0x412b6dfb]
  409fdd:	outs   dx,DWORD PTR ds:[esi]
  409fde:	mov    eax,ds:0x82dac183
  409fe3:	jae    0x40a016
  409fe5:	cmp    bh,BYTE PTR [ecx+0x28]
  409fe8:	lahf   
  409fe9:	lods   eax,DWORD PTR ds:[esi]
  409fea:	lods   eax,DWORD PTR ds:[esi]
  409feb:	icebp  
  409fec:	sbb    cl,ch
  409fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fef:	mov    edi,0xc244b1a3
  409ff4:	gs xor al,0xa4
  409ff7:	and    DWORD PTR [esp+ebp*1],ecx
  409ffa:	cmp    dh,BYTE PTR [ebx]
  409ffc:	out    dx,al
  409ffd:	or     al,0x63
  409fff:	adc    ecx,ebx
  40a001:	test   DWORD PTR [bx+di-0x7105],edx
  40a006:	mov    DWORD PTR [edx],ebp
  40a008:	scas   al,BYTE PTR es:[edi]
  40a009:	stos   BYTE PTR es:[edi],al
  40a00a:	xlat   BYTE PTR ds:[ebx]
  40a00b:	push   ebp
  40a00c:	mov    ah,0x84
  40a00e:	pop    ebx
  40a00f:	popa   
  40a010:	cmp    dh,al
  40a012:	add    DWORD PTR [eax-0x4041511c],0xffffff87
  40a019:	and    BYTE PTR [eax+0x23],cl
  40a01c:	xchg   edi,eax
  40a01d:	adc    dl,bl
  40a01f:	inc    ebx
  40a020:	scas   eax,DWORD PTR es:[edi]
  40a021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a022:	cld    
  40a023:	jle    0x40a024
  40a025:	call   0x5785:0x8bb943de
  40a02c:	imul   di,bp,0xff97
  40a030:	xchg   ecx,eax
  40a031:	adc    eax,0x197397eb
  40a036:	xor    eax,0x47587704
  40a03b:	and    BYTE PTR [esi+0xb],dh
  40a03e:	adc    ch,BYTE PTR [ebp+0x5e]
  40a041:	retf   0x6cbc
  40a044:	mov    ebp,0xf3d64b2b
  40a049:	jo     0x40a06a
  40a04b:	mov    dh,BYTE PTR [edi+0x8]
  40a04e:	xchg   ecx,eax
  40a04f:	mov    bx,WORD PTR [ebx]
  40a052:	push   0x83aab1c9
  40a057:	inc    ecx
  40a058:	inc    DWORD PTR [esi-0x4e]
  40a05b:	stos   BYTE PTR es:[edi],al
  40a05c:	sbb    dl,BYTE PTR [esi-0x7a]
  40a05f:	popf   
  40a060:	je     0x409ff8
  40a062:	addr16 ds ja 0x40a041
  40a066:	icebp  
  40a067:	cmp    ecx,edi
  40a069:	xor    eax,0xb64eac3f
  40a06e:	mov    ebp,0x5016dff3
  40a073:	aas    
  40a074:	push   esp
  40a075:	shr    edi,cl
  40a077:	pop    edi
  40a078:	sub    esp,DWORD PTR [edx]
  40a07a:	shl    BYTE PTR [ecx+ebp*2-0x523d67b2],cl
  40a081:	add    eax,DWORD PTR [esi+0x1527baae]
  40a087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a088:	aad    0x98
  40a08a:	add    edx,DWORD PTR [edi]
  40a08c:	xor    dh,ah
  40a08e:	ds mov esi,0xfc7557e8
  40a094:	dec    eax
  40a095:	ficomp WORD PTR [ebp+0x50]
  40a098:	imul   ebx,DWORD PTR [ebx+0x38],0xffffff8f
  40a09c:	into   
  40a09d:	jo     0x40a04d
  40a09f:	mov    eax,ds:0xf6d31332
  40a0a4:	cwde   
  40a0a5:	js     0x40a083
  40a0a7:	add    bh,BYTE PTR [edx+0x11e35fd4]
  40a0ad:	cmc    
  40a0ae:	not    DWORD PTR ds:0x3f2d0651
  40a0b4:	mov    ds:0x5784f5af,al
  40a0b9:	cmp    al,0x4a
  40a0bb:	cmp    BYTE PTR [ecx-0x234b0661],dl
  40a0c1:	cwde   
  40a0c2:	cwde   
  40a0c3:	popf   
  40a0c4:	lods   eax,DWORD PTR ds:[esi]
  40a0c5:	into   
  40a0c6:	popf   
  40a0c7:	popf   
  40a0c8:	xor    BYTE PTR [edi-0x7b],0xf2
  40a0cc:	xchg   ecx,eax
  40a0cd:	in     al,dx
  40a0ce:	jmp    0xda6f:0x8f1e2694
  40a0d5:	jae    0x40a0c0
  40a0d7:	in     eax,0x7d
  40a0d9:	inc    ebp
  40a0da:	add    DWORD PTR [ebp+0x6a],ebx
  40a0dd:	stos   DWORD PTR es:[edi],eax
  40a0de:	repnz shl DWORD PTR [edx],1
  40a0e1:	inc    ecx
  40a0e2:	std    
  40a0e3:	adc    BYTE PTR [edi-0x5b],ah
  40a0e6:	pop    edi
  40a0e7:	and    bl,BYTE PTR [ebx+ebp*2-0x42b66c49]
  40a0ee:	xchg   edx,eax
  40a0ef:	(bad)  
  40a0f0:	scas   eax,DWORD PTR es:[edi]
  40a0f1:	mov    esi,0x13ae2bf2
  40a0f6:	lock mov eax,ds:0xc88713cf
  40a0fc:	and    esi,DWORD PTR [esi]
  40a0fe:	xor    DWORD PTR [eax],ebx
  40a100:	int3   
  40a101:	pop    edi
  40a102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a103:	sub    ebp,edx
  40a105:	push   ss
  40a106:	(bad)  
  40a107:	cli    
  40a108:	(bad)  
  40a10a:	repnz ins BYTE PTR es:[edi],dx
  40a10c:	stc    
  40a10d:	add    BYTE PTR [edx],ch
  40a10f:	sub    al,0x6f
  40a111:	jno    0x40a0ac
  40a113:	data16 jns 0x40a0b9
  40a116:	fmul   DWORD PTR [ebp+0x31]
  40a119:	arpl   WORD PTR [ebx+0x46fd6b85],cx
  40a11f:	in     eax,0x7a
  40a121:	mov    ah,0x48
  40a123:	xor    BYTE PTR [edx],dl
  40a125:	in     eax,dx
  40a126:	jl     0x40a105
  40a128:	add    dl,BYTE PTR [ebx-0x5b410ca8]
  40a12e:	(bad)  
  40a12f:	in     eax,dx
  40a130:	rol    BYTE PTR [ebx],0x84
  40a133:	call   0xbb0e:0x3f1b2349
  40a13a:	adc    bl,BYTE PTR [ebx]
  40a13c:	inc    eax
  40a13d:	ins    BYTE PTR es:[edi],dx
  40a13e:	in     al,dx
  40a13f:	jg     0x40a112
  40a141:	mov    es,WORD PTR [ebp*1+0x2fc861f5]
  40a148:	adc    al,0x70
  40a14a:	add    eax,0xf93c4bd3
  40a14f:	or     DWORD PTR [ecx-0x4d],eax
  40a152:	sbb    al,0x65
  40a154:	fwait
  40a155:	hlt    
  40a156:	in     al,0x20
  40a158:	mov    ds:0x51ba62b1,al
  40a15d:	push   ebp
  40a15e:	inc    esp
  40a15f:	xor    dh,BYTE PTR [ebx-0x686c6a7]
  40a165:	adc    eax,ebx
  40a167:	outs   dx,DWORD PTR ds:[esi]
  40a168:	cmc    
  40a169:	xchg   WORD PTR [esi-0x65],di
  40a16d:	or     al,0x81
  40a16f:	dec    ebp
  40a170:	sub    ecx,DWORD PTR [ebp+edx*1+0x3ba579f0]
  40a177:	mov    ebp,0x9dcdb112
  40a17c:	push   cs
  40a17d:	pop    ecx
  40a17e:	hlt    
  40a17f:	inc    esp
  40a180:	scas   eax,DWORD PTR es:[edi]
  40a181:	pop    esi
  40a182:	jb     0x40a132
  40a184:	gs loop 0x40a17c
  40a187:	mov    ds:0x24200fef,eax
  40a18c:	es sti 
  40a18e:	sbb    al,0x4b
  40a190:	(bad)  
  40a192:	cmc    
  40a193:	in     al,0x7c
  40a195:	jg     0x40a178
  40a197:	sbb    BYTE PTR [ecx],0x3b
  40a19a:	jns    0x40a126
  40a19c:	in     eax,dx
  40a19d:	hlt    
  40a19e:	lahf   
  40a19f:	popf   
  40a1a0:	or     DWORD PTR [ebp-0x24],esp
  40a1a3:	xchg   esp,eax
  40a1a4:	frstor [edi-0x6eac2f1d]
  40a1aa:	repz jno 0x40a177
  40a1ad:	icebp  
  40a1ae:	(bad)  
  40a1b0:	xchg   DWORD PTR [ecx-0x55],edi
  40a1b3:	adc    DWORD PTR [ebx-0x43f1c587],esi
  40a1b9:	ror    BYTE PTR [ebp-0x7a2ec674],1
  40a1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1c0:	aad    0xe0
  40a1c2:	in     al,0x62
  40a1c4:	mov    esi,ds
  40a1c6:	arpl   WORD PTR [esi+ebx*1+0x43],sp
  40a1ca:	lods   al,BYTE PTR ds:[esi]
  40a1cb:	sti    
  40a1cc:	adc    ch,ah
  40a1ce:	add    eax,0x11356ad7
  40a1d3:	lahf   
  40a1d4:	mov    ds:0x4ff80eca,al
  40a1d9:	and    eax,0x163bccc7
  40a1de:	inc    esp
  40a1df:	mov    ah,0x8f
  40a1e1:	mov    edx,0xda3b50fd
  40a1e6:	fwait
  40a1e7:	sub    dh,ch
  40a1e9:	daa    
  40a1ea:	or     DWORD PTR ds:0xfa360978,eax
  40a1f0:	sbb    al,0x2a
  40a1f2:	sub    ebp,DWORD PTR [eax+eiz*4]
  40a1f5:	mov    ds:0x7576379,al
  40a1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1fb:	ret    0xa68b
  40a1fe:	xchg   edx,eax
  40a1ff:	fmul   st(0),st
  40a201:	mov    es,edx
  40a203:	repz jle 0x40a221
  40a206:	inc    esi
  40a207:	jns    0x40a27c
  40a209:	adc    BYTE PTR [ebx],0x30
  40a20c:	jb     0x40a25c
  40a20e:	mov    dl,0x6e
  40a210:	push   DWORD PTR [edx]
  40a212:	rol    BYTE PTR [eax+ebp*1-0x4f2129a0],cl
  40a219:	cli    
  40a21a:	and    al,0xa7
  40a21c:	ret    0x39c1
  40a21f:	(bad)  [ecx]
  40a221:	xor    al,0xdb
  40a224:	stos   DWORD PTR es:[edi],eax
  40a225:	mov    eax,0x62e6b976
  40a22a:	jb     0x40a239
  40a22c:	test   BYTE PTR [ebp+0x24],0x85
  40a230:	push   es
  40a231:	sbb    eax,0x42a58bd4
  40a236:	mov    BYTE PTR [esi+0x50],dl
  40a239:	popa   
  40a23a:	mov    ch,0xd7
  40a23c:	and    BYTE PTR [eax+ebx*8+0x6e],bh
  40a240:	sbb    al,0x84
  40a242:	mov    dl,0x7c
  40a244:	jle    0x40a20e
  40a246:	dec    esp
  40a247:	or     eax,DWORD PTR [eax+edi*1]
  40a24a:	xchg   edx,eax
  40a24b:	popf   
  40a24c:	or     BYTE PTR [eax+0x128eebdc],ah
  40a252:	cmp    DWORD PTR [edx+eax*8+0x39],ebp
  40a256:	hlt    
  40a257:	(bad)  
  40a258:	xor    bl,BYTE PTR [eax]
  40a25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a25b:	sti    
  40a25c:	pusha  
  40a25d:	and    BYTE PTR [edx-0x4],al
  40a260:	hlt    
  40a261:	sbb    ecx,DWORD PTR gs:[ebx]
  40a264:	push   esp
  40a265:	adc    edi,DWORD PTR [ebp-0x7e34381d]
  40a26b:	adc    DWORD PTR [edx-0x32],ebp
  40a26e:	les    ecx,FWORD PTR [edx+0x31e9a713]
  40a274:	icebp  
  40a275:	adc    BYTE PTR [ecx+edi*1-0x32],0xb4
  40a27a:	popa   
  40a27b:	xor    al,0xf6
  40a27d:	sbb    bh,BYTE PTR [eax-0x75]
  40a280:	adc    BYTE PTR [ecx-0x64a3f8d8],bh
  40a286:	xor    al,0xd4
  40a288:	mov    edi,0xb93e28e0
  40a28d:	inc    esi
  40a28e:	rcl    DWORD PTR [eax+0x56],1
  40a291:	push   ss
  40a292:	xor    al,0xd5
  40a294:	adc    ch,BYTE PTR [ecx+0x72]
  40a297:	jp     0x40a2df
  40a299:	(bad)  
  40a29a:	xor    esp,DWORD PTR [ecx-0x62]
  40a29d:	sub    ebp,DWORD PTR [ecx+0x4ee0dc24]
  40a2a3:	mov    WORD PTR [edx+0x0],es
  40a2a6:	dec    edx
  40a2a7:	mov    ebx,eax
  40a2a9:	test   al,0x93
  40a2ab:	mov    ecx,edx
  40a2ad:	add    al,bh
  40a2af:	mov    ds:0xbbfe8ff8,al
  40a2b4:	jo     0x40a24b
  40a2b6:	repz adc eax,0x1d703ba4
  40a2bc:	loope  0x40a27d
  40a2be:	sub    BYTE PTR [ebp-0x7cc7ad92],bh
  40a2c4:	add    eax,0x6767da36
  40a2c9:	stos   DWORD PTR es:[edi],eax
  40a2ca:	add    BYTE PTR [ebx+0xc],al
  40a2cd:	and    al,0xa4
  40a2cf:	stos   BYTE PTR es:[edi],al
  40a2d0:	dec    edi
  40a2d1:	bound  esi,QWORD PTR [esi]
  40a2d3:	shl    bl,cl
  40a2d5:	loop   0x40a293
  40a2d7:	call   0xa24aaf44
  40a2dc:	add    ch,al
  40a2de:	xchg   DWORD PTR [eax],ebx
  40a2e0:	push   esp
  40a2e1:	stos   BYTE PTR es:[edi],al
  40a2e2:	inc    eax
  40a2e3:	jae    0x40a324
  40a2e5:	push   ss
  40a2e6:	clc    
  40a2e7:	and    ebx,edx
  40a2e9:	lea    eax,[ebx]
  40a2eb:	stc    
  40a2ec:	cmp    DWORD PTR [esi-0x74],ebx
  40a2ef:	or     al,0xd9
  40a2f1:	xlat   BYTE PTR ds:[ebx]
  40a2f2:	imul   edx,DWORD PTR [ebx-0x4d85cc71],0x7b52faf7
  40a2fc:	add    edx,esi
  40a2fe:	fnstsw ax
  40a300:	pop    edx
  40a301:	outs   dx,DWORD PTR ds:[esi]
  40a302:	cmp    ecx,DWORD PTR [edi+0x7d]
  40a305:	xor    DWORD PTR [eax-0x392b6166],eax
  40a30b:	or     ebx,DWORD PTR [edx+0x59cb8c3c]
  40a311:	sub    ch,cl
  40a313:	jmp    0xa0dffbee
  40a318:	push   edx
  40a319:	ret    0x5ad7
  40a31c:	xor    eax,0x440b6f6
  40a321:	adc    esp,DWORD PTR [edi+0x2f9b98cc]
  40a327:	nop
  40a328:	xchg   bl,cl
  40a32a:	xchg   ebx,eax
  40a32b:	sbb    ch,BYTE PTR [ecx-0x73]
  40a32e:	add    DWORD PTR [edx+0x6],edi
  40a331:	add    ah,ah
  40a333:	mov    cl,0x6a
  40a335:	ins    BYTE PTR es:[edi],dx
  40a336:	add    eax,0x55cfa55
  40a33b:	retf   0xd26
  40a33e:	inc    edi
  40a33f:	scas   eax,DWORD PTR es:[edi]
  40a340:	test   DWORD PTR [eax],esi
  40a342:	mov    ds:0xd703a6a3,al
  40a347:	xor    eax,0x2d317dcd
  40a34c:	push   cs
  40a34d:	jl     0x40a31e
  40a34f:	and    ecx,DWORD PTR [ecx+0xc9e758e]
  40a355:	mov    ebp,0xd696c8f9
  40a35a:	xor    eax,0x57151c41
  40a35f:	daa    
  40a360:	adc    BYTE PTR [esi+0x4534aeb],dh
  40a366:	xchg   esp,eax
  40a367:	mov    al,ds:0x7f44624f
  40a36c:	xchg   ebx,eax
  40a36d:	dec    edi
  40a36e:	js     0x40a311
  40a370:	mov    al,0xc3
  40a372:	fisttp DWORD PTR [esi+0xc]
  40a375:	cmp    esi,DWORD PTR [ebp-0x1a2da965]
  40a37b:	fdiv   DWORD PTR [ecx+0x73]
  40a37e:	mov    ah,0xbd
  40a380:	in     eax,dx
  40a381:	repnz in eax,dx
  40a383:	fadd   DWORD PTR [ebx-0x6889579d]
  40a389:	test   eax,0x9ca12077
  40a38e:	icebp  
  40a38f:	cmp    DWORD PTR [ecx],edi
  40a391:	ja     0x40a3e7
  40a393:	cmp    ah,BYTE PTR [ebx-0x37]
  40a396:	pushf  
  40a397:	inc    eax
  40a398:	je     0x40a3a5
  40a39a:	adc    ch,dl
  40a39c:	adc    eax,0x9ec6bd87
  40a3a1:	addr16 cmp al,0x32
  40a3a4:	fstp   QWORD PTR [edx-0x64]
  40a3a7:	in     eax,dx
  40a3a8:	inc    ebp
  40a3a9:	je     0x40a40b
  40a3ab:	scas   al,BYTE PTR es:[di]
  40a3ad:	sahf   
  40a3ae:	adc    esi,DWORD PTR [edi]
  40a3b0:	pop    ebp
  40a3b1:	cmp    esi,DWORD PTR [eax+0x57]
  40a3b4:	mov    bh,0x12
  40a3b6:	push   0xeb081488
  40a3bb:	shl    BYTE PTR [esi],cl
  40a3bd:	repnz or BYTE PTR [edx+0x3943035d],0xb6
  40a3c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3c7:	not    DWORD PTR [ebp+0x5c]
  40a3ca:	fbld   TBYTE PTR [ebp+0x7f]
  40a3cd:	js     0x40a3d0
  40a3cf:	test   al,0x76
  40a3d1:	(bad)  
  40a3d2:	jns    0x40a388
  40a3d4:	xchg   esi,eax
  40a3d5:	or     cl,cl
  40a3d7:	fld    QWORD PTR [edi-0x37]
  40a3da:	pop    edx
  40a3db:	pop    ecx
  40a3dc:	jmp    0x10d2:0x30b491eb
  40a3e3:	ss dec edi
  40a3e5:	call   0x43eb:0x73d53a9d
  40a3ec:	into   
  40a3ed:	pop    ds
  40a3ee:	jmp    0xcf7c:0x9394a951
  40a3f5:	inc    cx
  40a3f7:	sub    dh,BYTE PTR [ecx+0x21]
  40a3fa:	call   0xef753a2f
  40a3ff:	mov    al,ds:0xa69503f2
  40a404:	shl    BYTE PTR [ebp+ebx*2-0x3e],cl
  40a408:	or     BYTE PTR [ecx],bl
  40a40a:	into   
  40a40b:	mov    bl,0x56
  40a40d:	sub    BYTE PTR [esi],0x3f
  40a410:	inc    ebx
  40a411:	iret   
  40a412:	jle    0x40a3d8
  40a414:	adc    bh,BYTE PTR [edx+0x26]
  40a417:	jb     0x40a422
  40a419:	xor    DWORD PTR [esi+eax*8],esp
  40a41c:	or     eax,0x1b100c0
  40a421:	jmp    0xc845302f
  40a426:	fdiv   DWORD PTR [edx+eax*1-0x26]
  40a42a:	adc    ch,BYTE PTR [ecx+0x17]
  40a42d:	jp     0x40a496
  40a42f:	cwde   
  40a430:	mov    al,ds:0xfe155074
  40a435:	adc    ecx,DWORD PTR [esi-0x78]
  40a438:	les    ecx,FWORD PTR [edi+eiz*8-0x49]
  40a43c:	in     eax,dx
  40a43d:	mov    eax,0xbdee0b6d
  40a442:	out    0x97,eax
  40a444:	jecxz  0x40a4ba
  40a446:	aas    
  40a447:	mov    cl,0xf7
  40a449:	scas   eax,DWORD PTR es:[edi]
  40a44a:	pushf  
  40a44b:	xor    edi,eax
  40a44d:	mov    bl,0xb6
  40a44f:	push   edi
  40a450:	mov    dl,0xea
  40a452:	mov    ebx,DWORD PTR [edx*2-0x32efeb21]
  40a459:	inc    edi
  40a45a:	outs   dx,BYTE PTR ds:[esi]
  40a45b:	loop   0x40a467
  40a45d:	inc    edi
  40a45f:	test   eax,0xa55b0e2f
  40a464:	mov    ebx,0x7b582073
  40a469:	sbb    cl,ch
  40a46b:	fisubr DWORD PTR [ebx]
  40a46d:	in     al,dx
  40a46e:	fnsave [ecx-0x3]
  40a471:	jns    0x40a41f
  40a473:	sahf   
  40a474:	adc    al,0x6
  40a476:	xchg   BYTE PTR [edx],bl
  40a478:	addr16 add ch,ch
  40a47b:	push   esp
  40a47c:	pop    ss
  40a47d:	adc    BYTE PTR [ebp+0x74],al
  40a480:	push   0x49a1e099
  40a485:	jp     0x40a411
  40a487:	and    al,0xe6
  40a489:	push   edi
  40a48a:	jbe    0x40a504
  40a48c:	fs in  eax,dx
  40a48e:	ret    
  40a48f:	push   edi
  40a490:	out    dx,eax
  40a491:	js     0x40a4ac
  40a493:	mov    ds:0x9c08535d,eax
  40a498:	jmp    0x276dc612
  40a49d:	dec    esp
  40a49e:	add    eax,0x7e47306f
  40a4a3:	(bad)  
  40a4a4:	fld    QWORD PTR [edx+0x67889598]
  40a4aa:	xchg   esi,eax
  40a4ab:	in     eax,0x98
  40a4ad:	rcr    DWORD PTR [edx],0x57
  40a4b0:	in     eax,0x37
  40a4b2:	sub    al,0xd7
  40a4b4:	jg     0xdddaa65c
  40a4ba:	aad    0xdb
  40a4bc:	push   esp
  40a4bd:	out    dx,al
  40a4be:	pop    ebp
  40a4bf:	xor    bh,BYTE PTR [ecx+0xb]
  40a4c2:	cmp    DWORD PTR [ecx+0x4d],0xffffff9a
  40a4c6:	arpl   WORD PTR [edx],ax
  40a4c8:	xor    dl,cl
  40a4ca:	cmp    edx,DWORD PTR [esi-0x14]
  40a4cd:	dec    eax
  40a4ce:	outs   dx,DWORD PTR ds:[esi]
  40a4cf:	push   ebp
  40a4d0:	mov    dh,0x8f
  40a4d2:	add    esp,DWORD PTR ds:0xfd64b9f7
  40a4d8:	add    eax,eax
  40a4da:	mov    dh,0x19
  40a4dc:	mov    dl,0x7d
  40a4de:	dec    edx
  40a4df:	mov    es,WORD PTR [eax+ebx*8+0x8]
  40a4e3:	mov    ds:0x89d61cba,eax
  40a4e8:	jl     0x40a498
  40a4ea:	(bad)  
  40a4eb:	out    0xda,al
  40a4ed:	and    eax,0x48743a43
  40a4f2:	out    dx,al
  40a4f3:	ja     0x40a527
  40a4f5:	add    edi,DWORD PTR [ecx]
  40a4f7:	mov    esi,0x54079895
  40a4fc:	push   edi
  40a4fd:	xchg   ebx,eax
  40a4fe:	retf   
  40a4ff:	cmp    al,0xf4
  40a501:	or     eax,0x1c37fcd3
  40a506:	(bad)  
  40a507:	and    esi,DWORD PTR [esi-0x77]
  40a50a:	mov    cl,0x6e
  40a50c:	ja     0x40a51d
  40a50e:	push   ss
  40a50f:	xor    ebp,DWORD PTR [ebx-0x799e6b0f]
  40a515:	pop    edx
  40a516:	mov    dh,0x77
  40a518:	mov    ah,0xc
  40a51a:	jo     0x40a4b8
  40a51c:	push   cs
  40a51d:	loopne 0x40a567
  40a51f:	dec    esi
  40a520:	mov    eax,ds:0x37fd0475
  40a525:	in     eax,0xbf
  40a527:	cmpps  xmm5,XMMWORD PTR [ebx-0x729c1d5c],0x6c
  40a52f:	mov    ds:0x5cac1658,al
  40a534:	push   es
  40a535:	cmp    eax,0x4eabc987
  40a53a:	test   DWORD PTR [edx-0x438be089],ecx
  40a540:	ficom  DWORD PTR [ebx+0x59]
  40a543:	xor    eax,0xcfaa679e
  40a548:	jmp    0x40a513
  40a54a:	sahf   
  40a54b:	loopne 0x40a532
  40a54d:	push   ecx
  40a54e:	les    edi,FWORD PTR [edx-0x677122b7]
  40a554:	mov    dh,0x23
  40a556:	mov    ds:0xf1793390,eax
  40a55b:	(bad)  
  40a55c:	dec    ebx
  40a55d:	add    DWORD PTR [esi+0xe],ecx
  40a560:	div    BYTE PTR [edi]
  40a562:	stos   BYTE PTR es:[edi],al
  40a563:	mov    ecx,0xc561faa1
  40a568:	xlat   BYTE PTR ds:[ebx]
  40a569:	scas   eax,DWORD PTR es:[edi]
  40a56a:	mov    esp,0x638720fd
  40a56f:	(bad)  
  40a570:	and    bh,BYTE PTR [esi-0x214c18ae]
  40a576:	jg     0x40a58d
  40a578:	int3   
  40a579:	sbb    cl,dl
  40a57b:	xlat   BYTE PTR ds:[ebx]
  40a57c:	xor    BYTE PTR [edi-0x1b8bbc7f],bh
  40a582:	jno    0x40a530
  40a584:	cmp    ecx,edx
  40a586:	mov    ecx,0x7489d58a
  40a58b:	in     eax,dx
  40a58c:	mov    esi,0x62413900
  40a591:	add    bh,cl
  40a593:	rcr    DWORD PTR [edx+esi*2],0x81
  40a597:	out    0x89,eax
  40a599:	push   ss
  40a59a:	jns    0x40a5b8
  40a59c:	adc    eax,0x571117f9
  40a5a1:	std    
  40a5a2:	popf   
  40a5a3:	shr    BYTE PTR [ebx+ecx*8-0x787164c7],1
  40a5aa:	push   eax
  40a5ab:	push   cs
  40a5ac:	ret    0x80de
  40a5af:	ss lahf 
  40a5b1:	adc    esi,edx
  40a5b3:	mov    es,WORD PTR [ebx]
  40a5b5:	fsub   DWORD PTR [eax+0x3c]
  40a5b8:	jb     0x40a582
  40a5ba:	das    
  40a5bb:	add    DWORD PTR [edi-0x52],edx
  40a5be:	adc    BYTE PTR [esi+0x4],0xa7
  40a5c2:	scas   al,BYTE PTR es:[edi]
  40a5c3:	in     eax,dx
  40a5c4:	repnz pop esi
  40a5c6:	adc    al,BYTE PTR [ebp-0x56]
  40a5c9:	sbb    DWORD PTR [ebx+esi*2],ebp
  40a5cc:	leave  
  40a5cd:	and    dl,BYTE PTR [ebx]
  40a5cf:	push   edi
  40a5d0:	lea    ebx,[ecx]
  40a5d2:	jg     0x40a5bd
  40a5d4:	(bad)  
  40a5d5:	sbb    esi,eax
  40a5d7:	(bad)  
  40a5d8:	sbb    eax,ecx
  40a5da:	aad    0x1c
  40a5dc:	mov    BYTE PTR [edx+0x7e9e2455],0x7f
  40a5e3:	sub    ebx,DWORD PTR [ebx+0x29]
  40a5e6:	xor    eax,0x9563630f
  40a5eb:	gs fndisi(8087 only) 
  40a5ee:	mov    edx,0x9577806a
  40a5f3:	iret   
  40a5f4:	add    al,0xd4
  40a5f6:	mov    edx,DWORD PTR [ebx]
  40a5f8:	fisubr WORD PTR [esi+0x50563e5a]
  40a5fe:	imul   ebp,ebp,0xfc32fae
  40a604:	mov    BYTE PTR [edx+eax*1-0x5],bl
  40a608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a609:	(bad)  
  40a60a:	sub    al,0x4c
  40a60c:	imul   ebp,DWORD PTR [ecx+0x54],0x4309d00e
  40a613:	add    DWORD PTR [ebx-0x59],esi
  40a616:	adc    esp,DWORD PTR [esi]
  40a618:	mov    al,BYTE PTR [eax+0x3d791a72]
  40a61e:	jo     0x40a5c1
  40a620:	pop    esi
  40a621:	pusha  
  40a622:	cmp    ah,BYTE PTR [ecx]
  40a624:	cs aaa 
  40a626:	xchg   esp,eax
  40a627:	das    
  40a628:	(bad)  
  40a629:	mov    WORD PTR [esi-0x3a6638d0],es
  40a62f:	test   al,0xc1
  40a631:	mov    ah,0x65
  40a633:	loop   0x40a5b6
  40a635:	test   eax,0x51793ddc
  40a63a:	xor    ebp,DWORD PTR [edx-0x24c72910]
  40a640:	ret    
  40a641:	add    BYTE PTR [ebx-0x6cac38fa],0xa9
  40a648:	(bad)  
  40a649:	mov    al,0x9b
  40a64b:	push   esi
  40a64c:	into   
  40a64d:	mov    ah,0xbd
  40a64f:	or     dl,BYTE PTR [eax+0x36]
  40a652:	xchg   edx,eax
  40a653:	xchg   BYTE PTR [esi-0x129cb1e4],ah
  40a659:	es in  al,dx
  40a65b:	cld    
  40a65c:	cmp    DWORD PTR [edx+0x2f],0xdd40afb8
  40a663:	dec    ebp
  40a664:	or     al,BYTE PTR [eax-0x7e710cab]
  40a66a:	or     eax,0xc9e6415a
  40a66f:	out    0x8,al
  40a671:	imul   ebp,DWORD PTR [ecx],0xe6dac8fd
  40a677:	lock mov ds:0x3d222f65,al
  40a67d:	fwait
  40a67e:	inc    ebp
  40a67f:	loope  0x40a667
  40a681:	mov    dl,0x2d
  40a683:	inc    eax
  40a684:	mov    es,ebx
  40a686:	loop   0x40a6b2
  40a688:	pop    esi
  40a689:	jae    0x40a613
  40a68b:	out    0x94,al
  40a68d:	inc    esp
  40a68e:	ins    BYTE PTR es:[edi],dx
  40a68f:	cmp    BYTE PTR [edi+0x9800bd],bl
  40a695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a696:	paddw  mm7,QWORD PTR [ebp-0x49]
  40a69a:	or     eax,0x91bbc913
  40a69f:	cli    
  40a6a0:	arpl   WORD PTR [edi],si
  40a6a2:	(bad)  
  40a6a3:	addr16 xchg esi,eax
  40a6a5:	pop    esi
  40a6a6:	mov    al,0xa9
  40a6a8:	and    DWORD PTR [esi-0x67],edx
  40a6ab:	push   ss
  40a6ac:	enter  0x134c,0x86
  40a6b0:	xchg   DWORD PTR [edi],ebx
  40a6b2:	cld    
  40a6b3:	fdiv   QWORD PTR [edi-0x1320df47]
  40a6b9:	fsubp  st(1),st
  40a6bb:	push   edi
  40a6bc:	in     al,0x8e
  40a6be:	mul    BYTE PTR [eax-0x71b4e62]
  40a6c4:	jbe    0x40a66d
  40a6c6:	pop    esi
  40a6c7:	inc    esi
  40a6c8:	push   edx
  40a6c9:	push   edx
  40a6ca:	mov    ah,0x7c
  40a6cc:	sahf   
  40a6cd:	fld    DWORD PTR [ebx-0x5ca2762d]
  40a6d3:	js     0x40a713
  40a6d5:	aaa    
  40a6d6:	lods   eax,DWORD PTR ds:[esi]
  40a6d7:	mov    bl,0xfe
  40a6d9:	das    
  40a6da:	xchg   ecx,eax
  40a6db:	jge    0x40a72c
  40a6dd:	retf   0xdbb0
  40a6e0:	mov    DWORD PTR [ebp-0x11385a94],edx
  40a6e6:	nop
  40a6e7:	daa    
  40a6e8:	bound  edi,QWORD PTR [edx]
  40a6ea:	repz int3 
  40a6ec:	das    
  40a6ed:	shr    BYTE PTR [edi],1
  40a6ef:	mov    DWORD PTR [esp+edx*1+0x7f],ecx
  40a6f3:	icebp  
  40a6f4:	pop    es
  40a6f5:	jbe    0x40a6c2
  40a6f7:	or     dl,BYTE PTR [eax]
  40a6f9:	jno    0x40a67f
  40a6fb:	xchg   esp,eax
  40a6fc:	dec    esp
  40a6fd:	adc    al,0x23
  40a6ff:	mov    ds:0xd9766227,al
  40a704:	inc    esp
  40a705:	dec    ecx
  40a706:	retf   0x3dfd
  40a709:	add    DWORD PTR [ebp-0x3feb9fb2],0x6
  40a710:	inc    ecx
  40a711:	adc    cl,BYTE PTR [eax+0x1779f85b]
  40a717:	jb     0x40a717
  40a719:	jnp    0x40a6e0
  40a71b:	pop    ebp
  40a71c:	mov    edi,0xa93a118b
  40a721:	cld    
  40a722:	mov    al,0xd5
  40a724:	inc    ecx
  40a725:	aaa    
  40a726:	int    0xe
  40a728:	les    eax,FWORD PTR [edx+eax*8+0x72]
  40a72c:	stos   BYTE PTR es:[edi],al
  40a72d:	xchg   ebp,eax
  40a72e:	scas   eax,DWORD PTR es:[edi]
  40a72f:	cmp    eax,0x98948ff8
  40a734:	inc    edi
  40a735:	mov    esp,0xdc808351
  40a73a:	retf   
  40a73b:	mov    eax,0x8d6723f2
  40a740:	hlt    
  40a741:	cmp    BYTE PTR [ecx+0x4906ef8e],ah
  40a747:	bound  edi,QWORD PTR [ebx+0x6462cf96]
  40a74d:	stc    
  40a74e:	hlt    
  40a74f:	enter  0x4f65,0xf8
  40a753:	xchg   edi,eax
  40a754:	js     0x40a7c0
  40a756:	pop    ecx
  40a757:	jb     0x40a783
  40a759:	xchg   esp,eax
  40a75a:	mov    ds:0x2d0c0766,al
  40a75f:	cld    
  40a760:	outs   dx,DWORD PTR ds:[esi]
  40a761:	xor    DWORD PTR [ebx-0x44],edi
  40a764:	sub    DWORD PTR [eax],0x6d69d20d
  40a76a:	push   ecx
  40a76b:	arpl   WORD PTR [ecx-0xa],ax
  40a76e:	fwait
  40a76f:	mov    esp,DWORD PTR [eax]
  40a771:	xlat   BYTE PTR ds:[ebx]
  40a772:	jne    0x40a71c
  40a774:	enter  0x925,0x1f
  40a778:	dec    ebx
  40a779:	lock or eax,0x5d2266a7
  40a77f:	std    
  40a780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a781:	mov    eax,0x8364b397
  40a786:	call   0x241212e4
  40a78b:	test   BYTE PTR [edx+0x6],0xc8
  40a78f:	adc    al,0x94
  40a791:	ret    0x8e47
  40a794:	lods   eax,DWORD PTR ds:[esi]
  40a795:	and    ch,bh
  40a797:	iret   
  40a798:	cmp    eax,0x1732cf23
  40a79d:	cmp    edi,DWORD PTR [eax+ebx*1]
  40a7a0:	imul   edi,DWORD PTR [ecx-0x446e9783],0x78
  40a7a7:	adc    ebp,DWORD PTR [edi+0x57]
  40a7aa:	push   esp
  40a7ab:	out    0xcd,al
  40a7ad:	xor    bh,al
  40a7af:	mov    esp,0x16fa40d9
  40a7b4:	dec    eax
  40a7b5:	pop    ss
  40a7b6:	loopne 0x40a73c
  40a7b8:	xchg   ebp,eax
  40a7b9:	jns    0x40a803
  40a7bb:	pop    edx
  40a7bc:	sbb    dh,BYTE PTR [ecx]
  40a7be:	push   0x7a
  40a7c0:	add    BYTE PTR [edi+0xc],al
  40a7c3:	xchg   esi,eax
  40a7c4:	sbb    ebx,ebx
  40a7c6:	aas    
  40a7c7:	scas   eax,DWORD PTR es:[edi]
  40a7c8:	mov    ds:0x110964bb,al
  40a7cd:	jg     0x40a758
  40a7cf:	test   BYTE PTR [ebx],dh
  40a7d1:	das    
  40a7d2:	xchg   esp,eax
  40a7d3:	and    bh,ah
  40a7d5:	pop    es
  40a7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7d7:	mov    ecx,0x6cbd95a2
  40a7dc:	outs   dx,BYTE PTR ds:[esi]
  40a7dd:	adc    al,0x60
  40a7df:	mov    DWORD PTR ds:0x39e3a047,ebp
  40a7e5:	ja     0x40a816
  40a7e7:	mov    edi,0x57097464
  40a7ec:	mov    edi,0x2e631c3a
  40a7f1:	jge    0x40a81d
  40a7f3:	jmp    0xf99a:0xdcb9d48e
  40a7fa:	cmp    edx,DWORD PTR [esi]
  40a7fc:	into   
  40a7fd:	call   0x8151:0xa0a33bdc
  40a804:	dec    ebx
  40a805:	cmp    BYTE PTR [ebp+0xf],0x3f
  40a809:	mov    ds:0xf1a74b2e,al
  40a80e:	pop    ss
  40a80f:	fsub   DWORD PTR [ecx+0x53]
  40a812:	scas   al,BYTE PTR es:[edi]
  40a813:	out    dx,al
  40a814:	or     BYTE PTR [edx],cl
  40a816:	mov    ch,0x46
  40a818:	mov    ch,0x36
  40a81a:	es sub al,0x66
  40a81d:	(bad)  
  40a81e:	dec    ecx
  40a81f:	les    edi,FWORD PTR [ebx-0x7e882a11]
  40a825:	cmp    al,0x37
  40a827:	dec    esp
  40a828:	mov    ecx,DWORD PTR [edi]
  40a82a:	mov    esp,0x167b2f51
  40a82f:	jecxz  0x40a89d
  40a831:	test   BYTE PTR [esi+ecx*1+0x3ae26a85],dl
  40a838:	mov    ds:0x3e8164d7,al
  40a83d:	jmp    0x40a836
  40a83f:	std    
  40a840:	stos   BYTE PTR es:[edi],al
  40a841:	jg     0x40a88f
  40a843:	sub    eax,0x1519cbc
  40a848:	shr    DWORD PTR [eax],0xa5
  40a84b:	mov    ds:0xe0b7473d,al
  40a850:	push   cs
  40a851:	mov    eax,ds:0x8ea8c94
  40a856:	dec    ecx
  40a857:	push   es
  40a858:	fcom   QWORD PTR [eax+esi*2]
  40a85b:	mov    ebp,0x76d63295
  40a860:	arpl   WORD PTR [ecx+0x38],di
  40a863:	bnd jnp 0x40a7e8
  40a866:	or     eax,0x6abed22a
  40a86b:	and    eax,ecx
  40a86d:	loopne 0x40a80b
  40a86f:	sub    eax,0x406564d9
  40a874:	or     DWORD PTR [esi-0x1f],0x37
  40a878:	loopne 0x40a8f6
  40a87a:	cmp    DWORD PTR [esi+0x3b9bca07],eax
  40a880:	adc    eax,0xff6b961e
  40a885:	test   BYTE PTR [edi],0xee
  40a888:	xlat   BYTE PTR ds:[ebx]
  40a889:	(bad)  
  40a88a:	ffree  st(4)
  40a88c:	fwait
  40a88d:	cmp    BYTE PTR [ebx-0x3708cf7d],al
  40a893:	push   0xffffffe5
  40a895:	xchg   ebp,eax
  40a896:	mov    BYTE PTR ds:0xcada33af,0x62
  40a89d:	inc    edx
  40a89e:	dec    ebx
  40a89f:	push   eax
  40a8a0:	icebp  
  40a8a1:	inc    ecx
  40a8a2:	cmp    cl,BYTE PTR [esi+0x6c92ff74]
  40a8a8:	lods   eax,DWORD PTR ds:[esi]
  40a8a9:	imul   BYTE PTR [edi-0x5425a919]
  40a8af:	pop    ds
  40a8b0:	xchg   DWORD PTR [ebx+0x3c],ebx
  40a8b3:	or     BYTE PTR [edi+0x3a3b2e03],cl
  40a8b9:	sti    
  40a8ba:	pop    edx
  40a8bb:	outs   dx,DWORD PTR ds:[esi]
  40a8bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8bd:	aam    0x41
  40a8bf:	mov    ecx,esp
  40a8c1:	enter  0xacc2,0x8b
  40a8c5:	(bad)  
  40a8c6:	push   cs
  40a8c7:	scas   al,BYTE PTR es:[edi]
  40a8c8:	gs xchg edx,eax
  40a8ca:	push   ecx
  40a8cb:	(bad)  
  40a8cc:	sub    cl,cl
  40a8ce:	pop    ecx
  40a8cf:	dec    esi
  40a8d0:	jne    0x40a8e2
  40a8d2:	stos   BYTE PTR es:[edi],al
  40a8d3:	in     al,dx
  40a8d4:	or     ah,cl
  40a8d6:	and    esp,DWORD PTR [esi-0x77]
  40a8d9:	sub    al,BYTE PTR [eax+eax*1+0x3d]
  40a8dd:	dec    esp
  40a8de:	int3   
  40a8df:	dec    ebx
  40a8e0:	push   0x76
  40a8e2:	mov    BYTE PTR es:[ebp-0x58],al
  40a8e6:	leave  
  40a8e7:	jnp    0x40a8ad
  40a8e9:	cmp    ecx,edi
  40a8eb:	(bad)  
  40a8ed:	rcr    BYTE PTR [ebp-0x40f11bb7],1
  40a8f3:	jmp    0xa54b:0x81fd1056
  40a8fa:	adc    eax,DWORD PTR [edi-0x4c]
  40a8fd:	add    al,0xe2
  40a8ff:	in     eax,dx
  40a900:	jns    0x40a955
  40a902:	push   ds
  40a903:	dec    edx
  40a904:	mov    eax,0xa7b5e6e5
  40a909:	mov    dl,0xa5
  40a90b:	cmp    BYTE PTR [ebx],dl
  40a90d:	(bad)  
  40a90e:	je     0x40a902
  40a910:	sub    BYTE PTR [esi],0x26
  40a913:	rcl    al,1
  40a915:	push   es
  40a916:	add    bl,dh
  40a918:	enter  0xf999,0x3b
  40a91c:	leave  
  40a91d:	jns    0x40a979
  40a91f:	pop    esp
  40a920:	mov    esp,0xcd329e58
  40a925:	cld    
  40a926:	dec    ebx
  40a927:	shl    DWORD PTR [edx-0x45],0xcb
  40a92b:	and    ch,dl
  40a92d:	mov    ecx,0x16584f60
  40a932:	int3   
  40a933:	neg    edi
  40a935:	aam    0x67
  40a937:	sar    ebp,cl
  40a939:	outs   dx,BYTE PTR ds:[esi]
  40a93a:	clc    
  40a93b:	test   BYTE PTR [ecx+eax*1+0x4632954b],bh
  40a942:	cmp    eax,0xc3565228
  40a947:	xchg   esp,eax
  40a948:	adc    ch,bl
  40a94a:	and    al,0x7f
  40a94c:	adc    ah,ah
  40a94e:	in     eax,0xb8
  40a950:	mov    bh,0xf7
  40a952:	and    DWORD PTR [esi-0x47],0xe6ceb6ac
  40a959:	push   0xf92e6508
  40a95e:	cmp    edx,DWORD PTR [ebx+0x61]
  40a961:	sbb    al,dl
  40a963:	mov    cl,0x7f
  40a965:	push   esp
  40a966:	mov    dh,0xff
  40a968:	jo     0x40a96a
  40a96a:	inc    edx
  40a96b:	lds    esi,FWORD PTR [edi+0x47]
  40a96e:	dec    eax
  40a96f:	xchg   esi,eax
  40a970:	push   0xffffff8a
  40a972:	shl    DWORD PTR [esi-0x5c35c8cf],cl
  40a978:	mov    dh,0x1e
  40a97a:	mov    eax,0x8c700606
  40a97f:	popf   
  40a980:	dec    edx
  40a981:	xchg   esp,eax
  40a982:	jmp    0x357c:0xce7ef5ee
  40a989:	fdiv   DWORD PTR [edx-0x313b3e2b]
  40a98f:	push   ecx
  40a990:	fs push eax
  40a992:	jle    0x40a9f7
  40a994:	mov    cl,BYTE PTR [esi-0x3a]
  40a997:	sbb    DWORD PTR [ebp+0x20],0x15
  40a99b:	push   cs
  40a99c:	in     al,0x59
  40a99e:	ret    0x211c
  40a9a1:	sub    BYTE PTR [edi+ecx*1+0x47d51207],al
  40a9a8:	jno    0x40a950
  40a9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ab:	gs (bad) 
  40a9ae:	loop   0x40aa17
  40a9b0:	fwait
  40a9b1:	loope  0x40a9b6
  40a9b3:	call   0x153a07b7
  40a9b8:	lahf   
  40a9b9:	pop    esi
  40a9ba:	pop    esi
  40a9bb:	add    esp,esi
  40a9bd:	sbb    ch,BYTE PTR [esi]
  40a9bf:	loop   0x40a97c
  40a9c1:	ja     0x40aa37
  40a9c3:	fcmovne st,st(7)
  40a9c5:	addr16 inc ecx
  40a9c7:	push   edx
  40a9c8:	(bad)  
  40a9c9:	lds    edi,FWORD PTR [esi+0x3c]
  40a9cc:	xor    eax,0x6fc25c59
  40a9d1:	xchg   DWORD PTR [esi+0x18],ecx
  40a9d4:	lahf   
  40a9d5:	xchg   DWORD PTR [ecx-0x18c2c633],esi
  40a9db:	ret    
  40a9dc:	mov    dh,0x34
  40a9de:	mov    edx,0xb2d25a63
  40a9e3:	cli    
  40a9e4:	aam    0x3f
  40a9e6:	in     al,0x36
  40a9e8:	fnsave [ecx-0x59805166]
  40a9ee:	xchg   DWORD PTR [esp+ecx*1],edx
  40a9f1:	dec    esp
  40a9f2:	outs   dx,DWORD PTR ds:[esi]
  40a9f3:	mov    ecx,0x23fe603c
  40a9f8:	xor    bl,BYTE PTR [ecx-0x1b]
  40a9fb:	ja     0x40aa17
  40a9fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9fe:	cwde   
  40a9ff:	xor    eax,0xac6dc1dc
  40aa04:	mov    ds:0x6e5952c0,al
  40aa09:	or     DWORD PTR [eax-0x75],0xffffffce
  40aa0d:	and    BYTE PTR [edx+edi*4],0xae
  40aa11:	out    dx,al
  40aa12:	das    
  40aa13:	dec    edx
  40aa14:	adc    eax,0x6fa61941
  40aa19:	mov    ebx,0x596f6493
  40aa1e:	pop    edx
  40aa1f:	(bad)  
  40aa20:	pushf  
  40aa21:	cmc    
  40aa22:	fbstp  TBYTE PTR [ebp+0x59]
  40aa25:	fs xchg esp,eax
  40aa27:	lea    ecx,[esi-0x2b]
  40aa2a:	dec    ecx
  40aa2b:	inc    esp
  40aa2c:	stos   DWORD PTR es:[edi],eax
  40aa2d:	retf   
  40aa2e:	mov    ebx,0x42dffe56
  40aa33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa34:	test   eax,0xe43c1962
  40aa39:	xor    al,0x5f
  40aa3b:	(bad)  [bx+di+0x7078]
  40aa40:	lahf   
  40aa41:	mov    al,ds:0xfab0bdc2
  40aa46:	ds mov bh,0x38
  40aa49:	mov    al,0xc3
  40aa4b:	aaa    
  40aa4c:	mov    eax,ds:0xf0196d75
  40aa51:	mov    edx,0x28b39cf0
  40aa56:	dec    ebp
  40aa57:	pop    ecx
  40aa58:	xor    BYTE PTR [edx],cl
  40aa5a:	dec    ebp
  40aa5b:	inc    edx
  40aa5c:	aaa    
  40aa5d:	xchg   ecx,eax
  40aa5e:	daa    
  40aa5f:	or     bh,BYTE PTR [eax-0x3c3ace04]
  40aa65:	stc    
  40aa66:	(bad)  
  40aa68:	jl     0x40aaad
  40aa6a:	push   0xffffffb1
  40aa6c:	xchg   ebx,eax
  40aa6d:	add    al,bl
  40aa6f:	sub    DWORD PTR [esi+0x7b],0x28
  40aa73:	fs sub eax,0x80430816
  40aa79:	pushf  
  40aa7a:	rcr    DWORD PTR [edx-0x16],0xa5
  40aa7e:	mov    ecx,0xde27408e
  40aa83:	ss jmp 0x721fc752
  40aa89:	push   cs
  40aa8a:	mov    ecx,0x829c110b
  40aa8f:	jle    0x40aa9d
  40aa91:	jmp    0x40aa17
  40aa93:	mov    DWORD PTR [eax],edx
  40aa95:	jecxz  0x40aafa
  40aa97:	cli    
  40aa98:	mov    dh,0x2c
  40aa9a:	jecxz  0x40aa93
  40aa9c:	pop    esi
  40aa9d:	sbb    al,0x32
  40aa9f:	sbb    ebx,DWORD PTR [esi+0x58]
  40aaa2:	(bad)  
  40aaa3:	in     al,dx
  40aaa4:	nop
  40aaa5:	jge    0x40aa77
  40aaa7:	mov    ds:0xc7161ec5,eax
  40aaac:	loope  0x40aae3
  40aaae:	ror    BYTE PTR [ebx-0x5344ceb4],1
  40aab4:	mov    esi,0x3f3a87b8
  40aab9:	or     eax,0x6d6065d4
  40aabe:	fmulp  st(7),st
  40aac0:	call   0x2771:0xd0921622
  40aac7:	sahf   
  40aac8:	out    0x70,al
  40aaca:	stos   DWORD PTR es:[edi],eax
  40aacb:	repz pop edi
  40aacd:	aaa    
  40aace:	or     al,0xcb
  40aad0:	pop    edi
  40aad1:	xchg   DWORD PTR [ecx-0x16],eax
  40aad4:	imul   esi,DWORD PTR [edx+edi*2],0xc447e037
  40aadb:	or     BYTE PTR [ebp+0x48],ah
  40aade:	xchg   edi,eax
  40aadf:	cdq    
  40aae0:	fdiv   DWORD PTR [ecx+0x380b89cc]
  40aae6:	mov    DWORD PTR [edi+0x2b],esp
  40aae9:	test   DWORD PTR [edi+0x3b],0x7562e419
  40aaf0:	scas   eax,DWORD PTR es:[edi]
  40aaf1:	inc    esp
  40aaf2:	push   0xffffffce
  40aaf4:	imul   ebp,DWORD PTR [ecx+0x37],0xf
  40aaf8:	jmp    0x1953:0xe72dff83
  40aaff:	les    eax,FWORD PTR [ecx]
  40ab01:	(bad)  
  40ab03:	out    dx,al
  40ab04:	rol    DWORD PTR [edx],cl
  40ab06:	pop    esi
  40ab07:	adc    DWORD PTR [ebp+0x59],edx
  40ab0a:	ja     0x40ab66
  40ab0c:	stos   DWORD PTR es:[edi],eax
  40ab0d:	stos   DWORD PTR es:[edi],eax
  40ab0e:	inc    ebp
  40ab0f:	rol    ebx,cl
  40ab11:	fimul  DWORD PTR [edx-0x3]
  40ab14:	retf   0x98f7
  40ab17:	popf   
  40ab18:	adc    al,0xf1
  40ab1a:	and    al,0xd8
  40ab1c:	(bad)  
  40ab1d:	jp     0x40ab8e
  40ab1f:	cli    
  40ab20:	mov    cs,WORD PTR [esi+ebx*2]
  40ab23:	rcr    DWORD PTR [edi+0x62],0xc9
  40ab27:	in     al,dx
  40ab28:	cld    
  40ab29:	cmp    BYTE PTR [ebx+0xb],ah
  40ab2c:	xchg   ecx,eax
  40ab2d:	sub    al,0x33
  40ab2f:	dec    esp
  40ab30:	mov    esi,DWORD PTR [ebx-0x5e]
  40ab33:	xor    eax,0x21879fa2
  40ab38:	push   eax
  40ab39:	xchg   edi,eax
  40ab3a:	jne    0x40ab2b
  40ab3c:	xchg   ebp,eax
  40ab3d:	sbb    eax,0x7d83120c
  40ab42:	mov    bh,0xf
  40ab44:	cmp    bh,bh
  40ab46:	xchg   ecx,eax
  40ab47:	xchg   BYTE PTR [ebp+0xd04e628],bl
  40ab4d:	les    edi,FWORD PTR [eax]
  40ab4f:	inc    esi
  40ab50:	cli    
  40ab51:	repnz clc 
  40ab53:	enter  0xbe4c,0x89
  40ab57:	idiv   BYTE PTR [edi-0x5]
  40ab5a:	mov    ecx,0x7fa4c363
  40ab5f:	imul   esp,DWORD PTR [edx+0x5bd85622],0xac5d24eb
  40ab69:	scas   al,BYTE PTR es:[edi]
  40ab6a:	les    ecx,FWORD PTR [eax+0x53fb8050]
  40ab70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab71:	test   BYTE PTR [edx-0x3963d147],ch
  40ab77:	inc    ebx
  40ab78:	popa   
  40ab79:	cwde   
  40ab7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab7b:	cmp    al,0x59
  40ab7d:	mov    edx,0x74d9d365
  40ab82:	xor    DWORD PTR [eax+eiz*8],ebp
  40ab85:	ins    BYTE PTR es:[edi],dx
  40ab86:	ror    DWORD PTR [edi+0x35f7ad67],cl
  40ab8c:	inc    edi
  40ab8d:	jne    0x40abb1
  40ab8f:	stos   DWORD PTR es:[edi],eax
  40ab90:	shr    DWORD PTR [ecx-0x77],1
  40ab93:	bound  eax,QWORD PTR [eax+0x4a35dedd]
  40ab99:	mov    ds:0x4008a072,al
  40ab9e:	enter  0x9ecd,0xdd
  40aba2:	in     al,dx
  40aba3:	and    bh,BYTE PTR [ecx-0x71dc90aa]
  40aba9:	jno    0x40abbb
  40abab:	pop    esp
  40abac:	dec    esi
  40abad:	jg     0x40abdc
  40abaf:	dec    edi
  40abb0:	jl     0x40ab3a
  40abb2:	ss jmp 0x5d8795c5
  40abb8:	mov    ebp,0xcc1f66a9
  40abbd:	fdiv   st,st(0)
  40abbf:	stos   DWORD PTR es:[edi],eax
  40abc0:	mov    dl,0xc7
  40abc2:	and    al,0x68
  40abc4:	pusha  
  40abc5:	ins    DWORD PTR es:[edi],dx
  40abc6:	mov    eax,ds:0xe9d5ef6c
  40abcb:	fsub   QWORD PTR [edx+esi*1+0x2ac4f1f1]
  40abd2:	adc    eax,0x3cae1a6f
  40abd7:	mov    eax,0x92d24c71
  40abdc:	ror    DWORD PTR [esi-0x43],1
  40abdf:	sub    ah,BYTE PTR [ebx]
  40abe1:	scas   al,BYTE PTR es:[edi]
  40abe2:	out    0x9,al
  40abe4:	jbe    0x40abec
  40abe6:	imul   eax,DWORD PTR [ebp+0x6a],0xfffffffc
  40abea:	mov    bh,0xd9
  40abec:	shl    esi,1
  40abee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abef:	mov    dh,0x26
  40abf1:	add    al,0x2a
  40abf3:	xchg   ebx,eax
  40abf4:	xchg   ebx,eax
  40abf5:	push   es
  40abf6:	jmp    0xfbeaa02
  40abfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abfc:	out    0x6a,eax
  40abfe:	mov    bh,bh
  40ac00:	aad    0x18
  40ac02:	leave  
  40ac03:	sbb    BYTE PTR [ecx-0x3b],bl
  40ac06:	mov    al,ds:0xb4ebde27
  40ac0b:	(bad)  
  40ac0c:	add    eax,0x75af30f4
  40ac11:	(bad)  
  40ac12:	frstor [eax+0x31aa6f16]
  40ac18:	pcmpgtw mm7,QWORD PTR [edx]
  40ac1b:	push   DWORD PTR [ebx-0x5e4c5542]
  40ac21:	shr    DWORD PTR [ecx+0x3592d212],0x90
  40ac28:	test   ebx,edx
  40ac2a:	cmp    bh,bl
  40ac2c:	cmp    esi,DWORD PTR [esi-0x43]
  40ac2f:	cmp    DWORD PTR [ecx+0x17e711f1],esp
  40ac35:	loopne 0x40ac25
  40ac37:	lods   al,BYTE PTR ds:[esi]
  40ac38:	mov    ebx,0xaa9ef34e
  40ac3d:	dec    ebx
  40ac3e:	jmp    0x40ac9a
  40ac40:	enter  0x984c,0x66
  40ac44:	add    eax,0x9c6eec2e
  40ac49:	sbb    DWORD PTR [edx-0x72],0x37
  40ac4d:	ficom  WORD PTR [eiz*1+0x4a8aeebd]
  40ac54:	ror    BYTE PTR [ebx+0x714da7fc],0x81
  40ac5b:	adc    al,0xfd
  40ac5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac5e:	aaa    
  40ac5f:	or     BYTE PTR [edx],ah
  40ac61:	mov    ch,0x13
  40ac63:	xor    eax,0x8e5971f2
  40ac68:	movaps xmm0,XMMWORD PTR [ecx-0x3afeb0b2]
  40ac6f:	in     al,dx
  40ac70:	jno    0x40ac00
  40ac72:	inc    esp
  40ac73:	retf   0xca70
  40ac76:	pop    ebx
  40ac77:	lods   al,BYTE PTR ds:[esi]
  40ac78:	xchg   BYTE PTR [edi+0x7f],ah
  40ac7b:	mov    ecx,0xd433ee4c
  40ac80:	fnstenv [esi-0x59d41036]
  40ac86:	repnz stos DWORD PTR es:[edi],eax
  40ac88:	mov    WORD PTR [ebp-0x2d],ss
  40ac8b:	dec    edi
  40ac8c:	mov    esi,DWORD PTR [ebx-0x6d]
  40ac8f:	ins    DWORD PTR es:[edi],dx
  40ac90:	(bad)  
  40ac91:	test   BYTE PTR [ebp+0x72e1a96e],0x15
  40ac98:	mov    esp,0x3efb51ce
  40ac9d:	arpl   WORD PTR [ecx-0x7c],ax
  40aca0:	sbb    edx,DWORD PTR [esp+ebp*4]
  40aca3:	jle    0x40ad0d
  40aca5:	aaa    
  40aca6:	push   edx
  40aca7:	jle    0x40acf1
  40aca9:	mov    ds:0xb8e25529,al
  40acae:	sbb    BYTE PTR [ebp+0x13e6e89b],bh
  40acb4:	adc    BYTE PTR [esi+edi*8],ch
  40acb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acb8:	jbe    0x40ac3a
  40acba:	stos   BYTE PTR es:[edi],al
  40acbb:	je     0x40acff
  40acbd:	mov    eax,0xa48e8f50
  40acc2:	pop    ds
  40acc3:	inc    esi
  40acc4:	retf   0x86e7
  40acc7:	xor    DWORD PTR [ebx],esp
  40acc9:	jecxz  0x40acc4
  40accb:	sbb    DWORD PTR [esi],edi
  40accd:	fldcw  WORD PTR [ebx]
  40accf:	out    dx,al
  40acd0:	jge    0x40ace8
  40acd2:	gs pop esp
  40acd4:	lahf   
  40acd5:	adc    al,0x83
  40acd7:	jne    0x40ad1d
  40acd9:	ja     0x40ad22
  40acdb:	mov    DWORD PTR [eax-0x65937aa5],eax
  40ace1:	sbb    al,0xa4
  40ace3:	sub    eax,0x14d5a4a
  40ace8:	mov    cl,0x33
  40acea:	sbb    eax,0x27e8b72c
  40acef:	mov    eax,0x4cd6b75f
  40acf4:	add    cl,BYTE PTR [edi+0x779ca970]
  40acfa:	je     0x40acce
  40acfc:	pop    es
  40acfd:	push   cs
  40acfe:	lea    edi,ss:[ebx+esi*1-0x63]
  40ad03:	xor    al,BYTE PTR [ebp-0x1b]
  40ad06:	and    eax,0xa04cc876
  40ad0b:	cmp    DWORD PTR [edx*1+0x761d69a2],0x46
  40ad13:	xor    ah,0x2
  40ad16:	sbb    al,0x21
  40ad18:	hlt    
  40ad19:	mov    dl,0xd8
  40ad1b:	ins    DWORD PTR es:[edi],dx
  40ad1c:	inc    esp
  40ad1d:	xchg   ax,ax
  40ad1f:	in     al,dx
  40ad20:	fcompp 
  40ad22:	push   ebp
  40ad23:	or     DWORD PTR [edi+0x1f625707],ebp
  40ad29:	or     al,0x43
  40ad2b:	xor    BYTE PTR fs:[ecx+0x7e],ch
  40ad2f:	je     0x40ad8f
  40ad31:	or     eax,0xa8824b2a
  40ad36:	shl    DWORD PTR [ebx+0x349a3d21],1
  40ad3c:	fwait
  40ad3d:	shl    edx,cl
  40ad3f:	dec    ebp
  40ad40:	cmp    ebp,ecx
  40ad42:	mov    ch,0xa1
  40ad44:	mov    eax,ds:0xb61ed388
  40ad49:	jle    0x40ad64
  40ad4b:	fidivr WORD PTR [esi]
  40ad4d:	inc    eax
  40ad4e:	pop    es
  40ad4f:	sub    BYTE PTR [edi-0x7],cl
  40ad52:	mov    cl,0x71
  40ad54:	jmp    0x40ad52
  40ad56:	pushf  
  40ad57:	leave  
  40ad58:	mov    ds:0xab931004,al
  40ad5d:	int    0xcc
  40ad5f:	mov    al,0x44
  40ad61:	jns    0x40ad36
  40ad63:	cmp    DWORD PTR [ebp+0x5349f71e],ebp
  40ad69:	inc    ebx
  40ad6a:	das    
  40ad6b:	repz fdivr QWORD PTR [ecx]
  40ad6e:	sub    BYTE PTR [ebx+0xe],bl
  40ad71:	icebp  
  40ad72:	push   0xffffffbc
  40ad74:	cli    
  40ad75:	inc    esp
  40ad76:	push   edx
  40ad77:	sbb    eax,0x179180b5
  40ad7c:	test   BYTE PTR [ebp+0x70947ed1],bh
  40ad82:	cmc    
  40ad83:	mul    ecx
  40ad85:	cmovb  esp,esi
  40ad88:	or     al,0x8d
  40ad8a:	mul    DWORD PTR [ecx+0x190523af]
  40ad90:	addr16 jbe 0x40adb4
  40ad93:	sbb    DWORD PTR [ebp-0x6f],ebx
  40ad96:	or     BYTE PTR gs:[edi+0xe1924fc],cl
  40ad9d:	dec    edx
  40ad9e:	and    DWORD PTR [ebx+0x7b],ebx
  40ada1:	xor    bl,BYTE PTR [edi+0x62]
  40ada4:	dec    eax
  40ada5:	jns    0x40ad57
  40ada7:	into   
  40ada8:	adc    BYTE PTR [eax],0x5f
  40adab:	bound  edi,QWORD PTR [ebx+0x35]
  40adae:	into   
  40adaf:	pop    ss
  40adb0:	pop    ss
  40adb1:	sbb    BYTE PTR [edi+0x21],bl
  40adb4:	xlat   BYTE PTR ds:[ebx]
  40adb5:	shl    ah,1
  40adb7:	jecxz  0x40ad42
  40adb9:	test   BYTE PTR [ebx-0x2acd1fdb],0x10
  40adc0:	mov    ebx,0x2e2c1d86
  40adc5:	les    eax,FWORD PTR [ebx]
  40adc7:	int    0xf
  40adc9:	loope  0x40ae40
  40adcb:	adc    BYTE PTR [ebx],cl
  40adcd:	and    eax,0x69b1c61c
  40add2:	or     DWORD PTR [edx+0x79],0x50c593c2
  40add9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adda:	pop    edx
  40addb:	outs   dx,BYTE PTR ds:[esi]
  40addc:	loope  0x40adaf
  40adde:	stc    
  40addf:	cmp    eax,0x2ea5799e
  40ade4:	test   bl,al
  40ade6:	int3   
  40ade7:	(bad)  
  40ade8:	fnstenv [esp+ebx*8+0x5c69109]
  40adef:	rcr    BYTE PTR [edx+0x106aca4d],1
  40adf5:	(bad)  
  40adf7:	pop    eax
  40adf8:	xchg   edi,eax
  40adf9:	xor    dh,BYTE PTR [ebx]
  40adfb:	jns    0x40adea
  40adfd:	cmp    ebx,edx
  40adff:	imul   ebp,esp,0xdde74366
  40ae05:	jae    0x40ae2c
  40ae07:	dec    ebx
  40ae08:	mov    ds:0x9dffe0e7,eax
  40ae0d:	xor    edx,DWORD PTR [ebp-0x41d0de6]
  40ae13:	adc    ecx,DWORD PTR [eax-0x1cbb9a85]
  40ae19:	leave  
  40ae1a:	xor    al,0x5c
  40ae1c:	inc    edx
  40ae1d:	neg    ebp
  40ae1f:	xlat   BYTE PTR ds:[ebx]
  40ae20:	in     eax,dx
  40ae21:	cmp    eax,0xbf2750d5
  40ae26:	sbb    DWORD PTR [eax+0x52],ecx
  40ae29:	or     cl,ah
  40ae2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae2c:	xchg   ecx,eax
  40ae2d:	mov    al,ds:0x55a9bfe4
  40ae32:	xor    BYTE PTR [edi+0x32],al
  40ae35:	test   BYTE PTR [ebx],dl
  40ae37:	imul   edi,DWORD PTR [eax],0x258c20f7
  40ae3d:	pop    ecx
  40ae3e:	mov    ebp,esp
  40ae40:	test   al,0xb5
  40ae42:	and    ebp,DWORD PTR ds:0xc4bfd597
  40ae48:	push   ss
  40ae49:	pushf  
  40ae4a:	leave  
  40ae4b:	outs   dx,DWORD PTR ds:[esi]
  40ae4c:	ret    
  40ae4d:	fadd   DWORD PTR [ecx+eax*4]
  40ae50:	daa    
  40ae51:	shr    ebx,cl
  40ae53:	xchg   edx,eax
  40ae54:	mov    ah,0xcc
  40ae56:	mov    esi,0x4c5afbd9
  40ae5b:	add    eax,0xce6577e7
  40ae60:	pop    esp
  40ae61:	jle    0x40aec3
  40ae63:	ja     0x40ae63
  40ae65:	out    dx,al
  40ae66:	test   DWORD PTR [esi+0x646abf4f],esp
  40ae6c:	scas   eax,DWORD PTR es:[edi]
  40ae6d:	ins    BYTE PTR es:[edi],dx
  40ae6e:	imul   ecx,edi,0xffffffb1
  40ae71:	arpl   bx,sp
  40ae73:	jne    0x40ae0c
  40ae75:	ins    BYTE PTR es:[edi],dx
  40ae76:	int3   
  40ae77:	sub    DWORD PTR [edi],esi
  40ae79:	mov    edi,0x85ef8eb8
  40ae7e:	lds    esp,FWORD PTR [eax-0x7b854eda]
  40ae84:	mov    ch,0xa8
  40ae86:	hlt    
  40ae87:	mov    fs:0xf0c5c9c5,eax
  40ae8d:	inc    edx
  40ae8e:	jge    0x40ae1f
  40ae90:	or     eax,0x43b1f8bd
  40ae95:	inc    ebp
  40ae96:	lea    edi,[ecx+0x7c3693a4]
  40ae9c:	dec    edi
  40ae9d:	js     0x40ae61
  40ae9f:	mov    ah,BYTE PTR [ebx+0x74968d55]
  40aea5:	jno    0x40ae69
  40aea7:	call   0xc1d4:0x285c634e
  40aeae:	fs xchg esi,eax
  40aeb0:	sub    ebp,DWORD PTR [ebx+0x50]
  40aeb3:	add    eax,0x675375b3
  40aeb8:	fbstp  TBYTE PTR [ebx+0x1873f25b]
  40aebe:	clc    
  40aebf:	arpl   WORD PTR [ecx-0x5e],cx
  40aec2:	and    eax,0x573f85bf
  40aec7:	leave  
  40aec8:	dec    eax
  40aec9:	mov    esp,0x2af89c34
  40aecf:	mov    al,ds:0x4ad0efe3
  40aed4:	retf   0xf476
  40aed7:	pop    ss
  40aed8:	mov    ebx,0xedd36476
  40aedd:	xor    al,0x9a
  40aedf:	out    0x5a,al
  40aee1:	int    0xbc
  40aee3:	add    bl,BYTE PTR [edi+0x10]
  40aee6:	fcomip st,st(2)
  40aee8:	lods   eax,DWORD PTR ds:[esi]
  40aee9:	xor    ecx,DWORD PTR [eax]
  40aeeb:	jecxz  0x40aec4
  40aeed:	pop    edx
  40aeee:	sahf   
  40aeef:	in     eax,0x6f
  40aef1:	cmp    eax,0x8480db1c
  40aef6:	xor    eax,esi
  40aef8:	aaa    
  40aef9:	cwde   
  40aefa:	repnz lock or eax,0xae10363d
  40af01:	xor    DWORD PTR [ecx],esp
  40af03:	cmc    
  40af04:	loope  0x40aec1
  40af06:	mov    bh,0xb9
  40af08:	push   es
  40af09:	clc    
  40af0a:	sbb    dl,BYTE PTR ds:0xf93204b3
  40af10:	dec    eax
  40af11:	mov    ecx,0xaf1f472d
  40af16:	xlat   BYTE PTR ds:[ebx]
  40af17:	sub    ebx,ebp
  40af19:	mov    bh,0xaa
  40af1b:	sbb    ebx,esp
  40af1d:	xchg   esi,eax
  40af1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af20:	jnp    0x40af9a
  40af22:	push   esp
  40af23:	jnp    0x40aeae
  40af25:	xchg   edx,eax
  40af26:	jmp    0x40aeba
  40af28:	inc    ebp
  40af29:	xchg   BYTE PTR [eax-0xc],al
  40af2c:	out    dx,al
  40af2d:	clc    
  40af2e:	rol    BYTE PTR [ecx+eiz*8],cl
  40af31:	or     eax,0xb8c6b390
  40af36:	mov    eax,ds:0x6a38fe49
  40af3b:	outs   dx,BYTE PTR ds:[esi]
  40af3c:	pop    es
  40af3d:	icebp  
  40af3e:	pop    ebx
  40af3f:	mov    ecx,0x13e2aa79
  40af44:	lods   al,BYTE PTR ds:[esi]
  40af45:	pop    esi
  40af46:	shl    DWORD PTR [esi],0x32
  40af49:	sbb    dl,BYTE PTR [ecx]
  40af4b:	aad    0x67
  40af4d:	jmp    0x369c0feb
  40af52:	xchg   ebp,eax
  40af53:	mov    esp,0x1aa892eb
  40af58:	test   ecx,edi
  40af5a:	ror    BYTE PTR [esi+0x1c],0xfb
  40af5e:	inc    edx
  40af5f:	and    DWORD PTR [eax+0x56],esp
  40af62:	dec    ecx
  40af63:	mov    ecx,0x9eb5dc04
  40af68:	xor    dh,BYTE PTR [edx+0x50]
  40af6b:	xor    BYTE PTR [eax+ebp*8],bh
  40af6e:	retf   0x695e
  40af71:	ins    DWORD PTR es:[edi],dx
  40af72:	in     al,dx
  40af73:	outs   dx,DWORD PTR ds:[esi]
  40af74:	xor    dl,bl
  40af76:	jle    0x40af5c
  40af78:	pop    ebp
  40af79:	xor    ebp,DWORD PTR [ebx]
  40af7b:	fst    DWORD PTR [ebp-0x20]
  40af7e:	ss iret 
  40af80:	inc    edx
  40af81:	fs ret 
  40af83:	adc    ebx,DWORD PTR [ebx]
  40af85:	cdq    
  40af86:	aas    
  40af87:	jmp    0xf68f:0x5ab9697a
  40af8e:	mov    ds:0x4bf76e03,eax
  40af93:	not    cl
  40af95:	sbb    BYTE PTR [ebx],bl
  40af97:	repnz out 0x80,eax
  40af9a:	in     eax,dx
  40af9b:	cmp    BYTE PTR [edi+0x6db90a7f],al
  40afa1:	push   ebp
  40afa2:	push   edx
  40afa3:	adc    edi,DWORD PTR [edi-0x44e75bf4]
  40afa9:	ja     0x40afab
  40afab:	jl     0x40b010
  40afad:	push   0xafed4c6b
  40afb2:	in     eax,0x81
  40afb4:	push   es
  40afb5:	leave  
  40afb6:	cmp    bl,dl
  40afb8:	test   BYTE PTR [eax-0x50],0xc7
  40afbc:	aad    0x7
  40afbe:	ret    0xf27
  40afc1:	pop    edx
  40afc2:	adc    cl,BYTE PTR [edx+0x6b]
  40afc5:	add    BYTE PTR [edx],al
  40afc7:	mov    dl,0xb8
  40afc9:	xlat   BYTE PTR ds:[ebx]
  40afca:	mov    esi,0x1c57866e
  40afcf:	dec    ecx
  40afd0:	repz adc ch,bh
  40afd3:	cmp    ebp,ebp
  40afd5:	jmp    0x40af82
  40afd7:	pop    edx
  40afd8:	call   0xf0ea8377
  40afdd:	test   BYTE PTR ds:[edi+0x62],bl
  40afe1:	push   eax
  40afe2:	loopne 0x40afda
  40afe4:	imul   ecx,DWORD PTR [edi-0x26d146db],0xd6bcd942
  40afee:	bound  ecx,QWORD PTR [edx+0xdb386a0]
  40aff4:	jmp    0x40b029
  40aff6:	jae    0x40b043
  40aff8:	int    0x15
  40affa:	adc    BYTE PTR [esp+ebx*1+0x21be3e27],0x38
  40b002:	test   BYTE PTR [ecx-0x1c],0x99
  40b006:	rcl    BYTE PTR [ebx],cl
  40b008:	out    0xaf,al
  40b00a:	jno    0x40afbe
  40b00c:	and    esi,DWORD PTR [edx-0x26]
  40b00f:	das    
  40b010:	cdq    
  40b011:	mov    ch,0x25
  40b013:	sbb    bh,dh
  40b015:	mov    esp,0x39ba1356
  40b01a:	retf   0x2f12
  40b01d:	cmp    al,ch
  40b01f:	inc    esi
  40b020:	pop    es
  40b021:	push   cs
  40b022:	sub    eax,0x8a3187cc
  40b027:	push   ebp
  40b028:	ins    DWORD PTR es:[edi],dx
  40b029:	dec    edx
  40b02a:	dec    esp
  40b02b:	clc    
  40b02c:	retf   
  40b02d:	mov    ds:0x68b6750b,al
  40b032:	(bad)  
  40b033:	in     eax,dx
  40b034:	mov    esp,0xc6bb774a
  40b039:	sub    esp,DWORD PTR ss:[edx]
  40b03c:	mov    ds:0x389a7e69,eax
  40b041:	mov    al,0x13
  40b043:	in     al,dx
  40b044:	dec    edi
  40b045:	mov    gs,ecx
  40b047:	or     dh,bl
  40b049:	sub    eax,0xe2a3f7e8
  40b04e:	xchg   edi,eax
  40b04f:	leave  
  40b050:	sbb    bl,bh
  40b052:	mov    dh,0x8e
  40b054:	xchg   DWORD PTR [ebx],eax
  40b056:	dec    edx
  40b057:	push   ss
  40b058:	sub    BYTE PTR [edx*2+0x63c87e22],ah
  40b05f:	adc    BYTE PTR [edx+edi*2-0x30208130],ch
  40b066:	rsqrtps xmm6,XMMWORD PTR [ebp+0x23430e87]
  40b06d:	dec    eax
  40b06e:	push   ds
  40b06f:	jge    0x40b0a7
  40b071:	pop    esi
  40b072:	jl     0x40aff8
  40b074:	sbb    bl,BYTE PTR [eax-0x479477bc]
  40b07a:	xchg   bh,bh
  40b07c:	jmp    0x40b06d
  40b07e:	jge    0x40b0af
  40b080:	pop    esp
  40b081:	and    al,0x3c
  40b083:	sub    al,0x4c
  40b085:	sbb    eax,0xd03be7f7
  40b08a:	jl     0x40b0d7
  40b08c:	and    BYTE PTR [eax],cl
  40b08e:	sub    al,0x23
  40b090:	les    edx,FWORD PTR [ecx-0x6c679e70]
  40b096:	lods   eax,DWORD PTR ds:[esi]
  40b097:	(bad)  
  40b098:	cdq    
  40b099:	inc    edi
  40b09a:	nop
  40b09b:	sub    eax,0x49d787df
  40b0a0:	js     0x40b0fe
  40b0a2:	leave  
  40b0a3:	cmp    edi,ecx
  40b0a5:	mov    esi,0x41cd336e
  40b0aa:	enter  0xf2c6,0x2e
  40b0ae:	push   ecx
  40b0af:	sub    eax,0x90dc245b
  40b0b4:	sub    al,BYTE PTR [esi+ecx*8-0x3c74727b]
  40b0bb:	imul   ebx,edx,0x34
  40b0be:	out    0x90,eax
  40b0c0:	mov    al,0x9e
  40b0c2:	stos   DWORD PTR es:[edi],eax
  40b0c3:	test   BYTE PTR ds:0xf4eafefc,dl
  40b0c9:	arpl   WORD PTR [esi+eax*1-0x323a87fe],bx
  40b0d0:	fnstsw WORD PTR [edx-0x34]
  40b0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0d4:	(bad)  
  40b0d5:	and    ebp,DWORD PTR [esi-0x7f]
  40b0d8:	and    bh,BYTE PTR [edx+0x3342a692]
  40b0de:	xchg   esp,eax
  40b0df:	cmp    edi,DWORD PTR [esi+0x5]
  40b0e2:	(bad)  
  40b0e4:	cdq    
  40b0e5:	ja     0x40b0c1
  40b0e7:	xchg   esp,eax
  40b0e8:	in     al,dx
  40b0e9:	and    eax,0x43a3985f
  40b0ee:	ja     0x40b0a3
  40b0f0:	int    0xf0
  40b0f2:	xchg   DWORD PTR [eax],esp
  40b0f4:	daa    
  40b0f5:	lods   eax,DWORD PTR ds:[esi]
  40b0f6:	xor    BYTE PTR [ebx],al
  40b0f8:	(bad)  
  40b0f9:	popf   
  40b0fa:	out    0xcb,al
  40b0fc:	jp     0x40b10f
  40b0fe:	fcom   QWORD PTR [esi]
  40b100:	adc    edx,edx
  40b102:	enter  0xffcd,0x25
  40b106:	clc    
  40b107:	push   ss
  40b108:	xor    eax,0xc7e3b9af
  40b10d:	ins    DWORD PTR es:[edi],dx
  40b10e:	pop    ss
  40b10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b110:	in     eax,dx
  40b111:	loopne 0x40b0a6
  40b113:	pop    esi
  40b114:	xor    edi,ecx
  40b116:	inc    esi
  40b117:	hlt    
  40b118:	mov    bh,0xd5
  40b11a:	stos   BYTE PTR es:[edi],al
  40b11b:	cwde   
  40b11c:	xchg   ecx,eax
  40b11d:	nop
  40b11e:	cdq    
  40b11f:	lods   eax,DWORD PTR ds:[esi]
  40b120:	push   esi
  40b121:	mov    bh,0xea
  40b123:	std    
  40b124:	jle    0x40b133
  40b126:	lahf   
  40b127:	test   eax,0x4a860720
  40b12c:	push   0x8fe73c17
  40b131:	inc    edi
  40b132:	stos   BYTE PTR es:[edi],al
  40b133:	adc    BYTE PTR [esi],bh
  40b135:	das    
  40b136:	or     BYTE PTR [eax-0x2db85637],bh
  40b13c:	cmp    BYTE PTR [edx-0x3f3238c7],ch
  40b142:	xchg   ebp,eax
  40b143:	jbe    0x40b15c
  40b145:	inc    eax
  40b146:	sub    dl,dl
  40b148:	mov    bh,0x77
  40b14a:	fadd   DWORD PTR ds:0x8f91a0e8
  40b150:	fisub  WORD PTR [esi+0x23]
  40b153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b154:	test   al,0xe2
  40b156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b157:	jnp    0x40b19e
  40b159:	pusha  
  40b15a:	les    ebx,FWORD PTR [ebp+0x1a]
  40b15d:	in     al,dx
  40b15e:	fs push ebp
  40b160:	sub    DWORD PTR [ebp+0x57],ecx
  40b163:	stos   DWORD PTR es:[edi],eax
  40b164:	push   esi
  40b165:	retf   
  40b166:	mov    ds:0xd14c6e93,al
  40b16b:	or     cl,BYTE PTR [edi+0x38]
  40b16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b16f:	fnstcw WORD PTR [esi-0x5f]
  40b172:	es jl  0x40b1a6
  40b175:	push   edi
  40b176:	push   eax
  40b177:	cmp    BYTE PTR [esi-0x64e94fb9],cl
  40b17d:	jnp    0x40b165
  40b17f:	dec    esp
  40b180:	mov    edi,0xd490804
  40b185:	and    ah,BYTE PTR ds:0x84252f32
  40b18b:	inc    edx
  40b18c:	inc    ebp
  40b18d:	aad    0x7e
  40b18f:	push   es
  40b190:	jne    0x40b15d
  40b192:	push   cs
  40b193:	and    DWORD PTR [edx-0x7bc533d6],ecx
  40b199:	fild   WORD PTR [eax+0x381c88e8]
  40b19f:	cmp    al,0xff
  40b1a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1a2:	pop    esp
  40b1a3:	pusha  
  40b1a4:	add    DWORD PTR [ebp+0x11a815f0],ebx
  40b1aa:	test   al,0x36
  40b1ac:	rcr    BYTE PTR [edx-0x14],1
  40b1af:	push   ss
  40b1b0:	shl    BYTE PTR [eax+0x5551d4db],cl
  40b1b6:	xchg   ebp,eax
  40b1b7:	out    dx,al
  40b1b8:	pop    ss
  40b1b9:	cmp    eax,0x1848b5b4
  40b1be:	stc    
  40b1bf:	inc    edi
  40b1c0:	cli    
  40b1c1:	xchg   BYTE PTR [ebx+0x65],dh
  40b1c4:	imul   BYTE PTR [edx-0x36ad2f58]
  40b1ca:	ins    DWORD PTR es:[edi],dx
  40b1cb:	(bad)  
  40b1cc:	stc    
  40b1cd:	repnz push ebp
  40b1cf:	or     ah,BYTE PTR [ecx]
  40b1d1:	sar    BYTE PTR [eax+0x67ec7b47],0x7d
  40b1d8:	mov    BYTE PTR [esp+esi*1],dl
  40b1db:	(bad)  
  40b1dc:	xchg   ecx,eax
  40b1dd:	inc    esp
  40b1de:	push   0x2d9e5e48
  40b1e3:	pusha  
  40b1e4:	pop    ss
  40b1e5:	add    al,0x8a
  40b1e7:	mov    gs,esp
  40b1e9:	jb     0x40b1ec
  40b1eb:	pop    edx
  40b1ec:	fsub   DWORD PTR [ebx-0x64]
  40b1ef:	mov    eax,0x6b5fcfd2
  40b1f4:	and    al,0xd9
  40b1f6:	out    0x5,al
  40b1f8:	stos   DWORD PTR es:[edi],eax
  40b1f9:	das    
  40b1fa:	dec    esi
  40b1fb:	addr16 and al,0xde
  40b1fe:	pop    eax
  40b1ff:	or     al,0xc1
  40b201:	or     BYTE PTR [ebx+0x5c80ea47],dl
  40b207:	mov    al,0x81
  40b209:	mov    dh,0xfc
  40b20b:	jnp    0x40b1f7
  40b20d:	mov    esp,0x282ac371
  40b212:	addr16 js 0x40b1db
  40b215:	fistp  WORD PTR [ebp+0x43]
  40b218:	jnp    0x40b1a2
  40b21a:	xchg   ecx,eax
  40b21b:	mov    eax,0x43cc7adb
  40b220:	mov    BYTE PTR [ebx],ch
  40b222:	jno    0x40b275
  40b224:	out    dx,eax
  40b225:	cwde   
  40b226:	aaa    
  40b227:	xchg   ebx,eax
  40b228:	add    esp,DWORD PTR [edi+0x2209d703]
  40b22e:	fst    DWORD PTR [edi-0x4adc24f7]
  40b234:	mov    ds,eax
  40b236:	adc    DWORD PTR [edx-0x2c4f8f84],0xe30e4731
  40b240:	adc    DWORD PTR [ecx],edx
  40b242:	in     al,0x52
  40b244:	inc    edi
  40b245:	jne    0x40b29f
  40b247:	pop    ebx
  40b248:	(bad)  
  40b249:	ret    
  40b24a:	outs   dx,DWORD PTR ds:[esi]
  40b24b:	xlat   BYTE PTR ds:[ebx]
  40b24c:	jbe    0x40b1d0
  40b24e:	adc    BYTE PTR [edx-0x1f],al
  40b251:	mov    edi,0x65964f1e
  40b256:	daa    
  40b257:	jmp    0x3777:0xea758dd0
  40b25e:	jmp    0xcca4c7a0
  40b263:	test   ch,al
  40b265:	gs xchg esi,eax
  40b267:	popa   
  40b268:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b26a:	jmp    eax
  40b26c:	(bad)  
  40b26e:	jo     0x40b252
  40b270:	enter  0x9cf1,0xa9
  40b274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b275:	xchg   esi,eax
  40b276:	dec    esp
  40b277:	imul   ecx,DWORD PTR [esi+0x5d],0xe890b03e
  40b27e:	ins    BYTE PTR es:[edi],dx
  40b27f:	sbb    edi,DWORD PTR [edx+edi*1]
  40b282:	arpl   WORD PTR [ebx+eiz*1],sp
  40b285:	iret   
  40b286:	scas   al,BYTE PTR es:[edi]
  40b287:	(bad)  
  40b288:	dec    ecx
  40b289:	jnp    0x40b2fa
  40b28b:	es mov ecx,0x94fc230c
  40b291:	(bad)  
  40b292:	cli    
  40b293:	mov    ah,BYTE PTR [edi+0x16c29a02]
  40b299:	xor    dh,cl
  40b29b:	rep ins BYTE PTR es:[edi],dx
  40b29d:	ret    0x8980
  40b2a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2a1:	es cs ret 
  40b2a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2a5:	pop    edi
  40b2a6:	iret   
  40b2a7:	mov    WORD PTR [eax+0x799d7059],ss
  40b2ad:	gs in  al,dx
  40b2af:	dec    edx
  40b2b0:	pop    ebp
  40b2b1:	xchg   si,ax
  40b2b3:	stc    
  40b2b4:	xor    al,0x8
  40b2b6:	pop    ebp
  40b2b7:	push   es
  40b2b8:	jmp    0xb443:0xdd98119e
  40b2bf:	fadd   QWORD PTR ds:0x20eba2c6
  40b2c5:	pop    esp
  40b2c6:	cmp    BYTE PTR [ebx],0xe
  40b2c9:	fsubr  st(4),st
  40b2cb:	xor    BYTE PTR [ebx+ebp*4+0x2fc9eacd],bh
  40b2d2:	pop    ebp
  40b2d3:	sub    BYTE PTR [ebx+0x6e],cl
  40b2d6:	xchg   esi,eax
  40b2d7:	lods   eax,DWORD PTR ds:[esi]
  40b2d8:	arpl   WORD PTR [edx-0x77e9c83b],cx
  40b2de:	pop    edi
  40b2df:	lahf   
  40b2e0:	cmp    eax,0x459a1def
  40b2e5:	fiadd  WORD PTR [esi]
  40b2e7:	xchg   edx,ebx
  40b2e9:	xchg   ebx,eax
  40b2ea:	sbb    esp,DWORD PTR [esi+ecx*1]
  40b2ed:	push   ecx
  40b2ee:	push   es
  40b2ef:	cmp    DWORD PTR ss:[edx],eax
  40b2f2:	loopne 0x40b307
  40b2f4:	imul   esi,DWORD PTR [ecx-0x75],0x48
  40b2f8:	add    DWORD PTR [eax+0xeb6652f],ecx
  40b2fe:	xlat   BYTE PTR ds:[ebx]
  40b2ff:	test   BYTE PTR [eax+0x7e48a271],dl
  40b305:	fisttp WORD PTR [ebp+0x1]
  40b308:	(bad)  
  40b30a:	jge    0x40b2a2
  40b30c:	mov    ebx,0x13aeba9d
  40b311:	push   ebx
  40b312:	les    ebp,FWORD PTR [edi-0x19]
  40b315:	inc    edx
  40b316:	or     al,0x7b
  40b318:	adc    al,BYTE PTR [ecx]
  40b31a:	out    dx,al
  40b31b:	sub    BYTE PTR [bx+si+0x55],ch
  40b31f:	aad    0x9c
  40b321:	xlat   BYTE PTR ds:[ebx]
  40b322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b323:	mov    esi,0xf857de05
  40b328:	dec    esp
  40b32a:	addr16 lock dec ebx
  40b32d:	and    al,0xf1
  40b32f:	gs and eax,0xb820639b
  40b335:	inc    esp
  40b336:	into   
  40b337:	pop    esp
  40b338:	or     eax,0x6d52b223
  40b33d:	dec    ecx
  40b33e:	cmc    
  40b33f:	clc    
  40b340:	mov    ecx,0xc1b91aa4
  40b345:	daa    
  40b346:	pop    ecx
  40b347:	xchg   edi,eax
  40b348:	pop    DWORD PTR ss:[ecx]
  40b34b:	xor    BYTE PTR [ebp+0x4fdea44f],bl
  40b351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b352:	(bad)  
  40b353:	sbb    edx,ebx
  40b355:	int    0xce
  40b357:	std    
  40b358:	inc    ebx
  40b359:	jnp    0x40b3bf
  40b35b:	inc    edi
  40b35c:	and    al,0xae
  40b35e:	xor    BYTE PTR [esi+0x5a551d80],ch
  40b364:	bound  edi,QWORD PTR [esi+ecx*1]
  40b367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b368:	addr16 mov ds:0x1fb7,al
  40b36d:	inc    edx
  40b36e:	push   ecx
  40b36f:	stos   BYTE PTR es:[edi],al
  40b370:	mov    fs,WORD PTR [ecx+ecx*4+0x67]
  40b374:	mov    ebx,DWORD PTR [ecx-0x1d]
  40b377:	cs adc al,0xef
  40b37a:	or     ah,BYTE PTR [eax-0x53]
  40b37d:	xchg   esp,eax
  40b37e:	std    
  40b37f:	xor    bl,bl
  40b381:	aaa    
  40b382:	cmp    al,0x90
  40b384:	test   BYTE PTR [edx+0x8],dh
  40b387:	fisttp QWORD PTR [eax+0x7b185d78]
  40b38d:	mov    bl,0x66
  40b38f:	xlat   BYTE PTR ds:[ebx]
  40b390:	sub    al,0xd
  40b392:	rcr    BYTE PTR [ebp+eax*8+0x48],0xfd
  40b397:	sbb    esi,DWORD PTR [ebp+0x2eb5509d]
  40b39d:	nop
  40b39e:	jae    0x40b3ce
  40b3a0:	in     al,dx
  40b3a1:	call   0x17670755
  40b3a6:	jb     0x3ad6fa3
  40b3ac:	ins    DWORD PTR es:[edi],dx
  40b3ad:	test   DWORD PTR [esi+0x7c],ecx
  40b3b0:	xchg   DWORD PTR [edi-0x44],ebp
  40b3b3:	xchg   esp,eax
  40b3b4:	fcomp  QWORD PTR [edi-0x42]
  40b3b7:	jl     0x40b41b
  40b3b9:	jge    0x40b378
  40b3bb:	lods   eax,DWORD PTR ds:[esi]
  40b3bc:	mov    BYTE PTR [ebx+esi*4+0x2b51c630],bh
  40b3c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3c4:	fs push 0xb1a77786
  40b3ca:	lds    eax,FWORD PTR [eax]
  40b3cc:	sar    al,1
  40b3ce:	cdq    
  40b3cf:	out    dx,eax
  40b3d0:	push   ebp
  40b3d1:	mov    al,ds:0x6e9dc138
  40b3d6:	cmp    dh,BYTE PTR [ebx+0x7f]
  40b3d9:	fstp   TBYTE PTR [edi]
  40b3db:	mov    eax,ds:0x69e14fc3
  40b3e0:	push   es
  40b3e1:	cld    
  40b3e2:	adc    al,0x3
  40b3e4:	in     eax,0x8e
  40b3e6:	jnp    0x40b379
  40b3e8:	test   BYTE PTR [ebp-0xd6f4084],bh
  40b3ee:	es lock test eax,0x57792627
  40b3f5:	cld    
  40b3f6:	sbb    eax,0x8e8861f0
  40b3fb:	jne    0x40b424
  40b3fd:	mov    WORD PTR [edi+eax*4+0x2f390789],?
  40b404:	sbb    dh,dl
  40b406:	test   eax,0xec4e7c85
  40b40b:	cwde   
  40b40c:	push   ebx
  40b40d:	shl    BYTE PTR ds:[edx+0x1d],0xfd
  40b412:	mov    edi,0x3487fe07
  40b417:	shr    BYTE PTR [edi-0x43e4978e],0x2c
  40b41e:	inc    edx
  40b41f:	sbb    ecx,DWORD PTR [ecx]
  40b421:	loope  0x40b3b9
  40b423:	dec    esi
  40b424:	and    eax,0xc8bbae59
  40b429:	cmp    al,0x8b
  40b42b:	mov    bh,0x23
  40b42d:	test   BYTE PTR [eax-0x17893ba0],ah
  40b433:	out    dx,al
  40b434:	rcr    BYTE PTR [edx-0x22],0x51
  40b438:	sbb    BYTE PTR [edi+0x6d9e3da1],cl
  40b43e:	pusha  
  40b43f:	xchg   ebp,eax
  40b440:	imul   ecx,DWORD PTR [esi-0x29],0x5c
  40b444:	leave  
  40b445:	iret   
  40b446:	pop    esp
  40b447:	jnp    0x40b4c1
  40b449:	xor    dl,al
  40b44b:	sbb    BYTE PTR [edx+0x13],cl
  40b44e:	stos   BYTE PTR es:[edi],al
  40b44f:	icebp  
  40b450:	repnz dec edi
  40b452:	mov    ebx,0x39778530
  40b457:	jge    0x40b4bb
  40b459:	gs mov dh,0x19
  40b45c:	mov    dl,0xdc
  40b45e:	loope  0x40b4b3
  40b460:	mov    al,ds:0x6ad6074b
  40b465:	inc    edx
  40b466:	add    DWORD PTR [edi-0x69f9dfd8],edi
  40b46c:	pop    ss
  40b46d:	adc    al,0xd3
  40b46f:	add    cl,al
  40b471:	pop    edi
  40b472:	imul   ebp,DWORD PTR [esi-0x57],0x54688436
  40b479:	adc    al,0x7e
  40b47b:	repnz retf 
  40b47d:	cmp    BYTE PTR [ebx-0x62],0xb9
  40b481:	jg     0x40b454
  40b483:	repz dec ecx
  40b485:	sbb    edx,DWORD PTR [edx]
  40b487:	sbb    al,0xe2
  40b489:	outs   dx,BYTE PTR ds:[esi]
  40b48a:	pop    edx
  40b48b:	dec    edi
  40b48c:	repnz fs push 0xf10e7688
  40b493:	pop    esi
  40b494:	fldenv [edi]
  40b496:	(bad)  
  40b497:	jne    0x40b46d
  40b499:	add    al,0x30
  40b49b:	dec    edx
  40b49c:	faddp  st(5),st
  40b49e:	(bad)  
  40b49f:	pop    ds
  40b4a0:	fsubr  st(4),st
  40b4a2:	push   ds
  40b4a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a4:	jge    0x40b4de
  40b4a6:	ja     0x40b4c7
  40b4a8:	loope  0x40b454
  40b4aa:	or     cl,BYTE PTR [esi]
  40b4ac:	sahf   
  40b4ad:	nop
  40b4ae:	adc    bl,bl
  40b4b0:	jge    0x40b43d
  40b4b2:	or     BYTE PTR [edx+0x45],dh
  40b4b5:	in     al,0xae
  40b4b7:	fisub  WORD PTR [ebx-0xd]
  40b4ba:	inc    esp
  40b4bb:	popa   
  40b4bc:	add    DWORD PTR [eax-0x73],edx
  40b4bf:	jne    0x40b472
  40b4c1:	jb     0x40b515
  40b4c3:	mov    al,ds:0xccb217dc
  40b4c8:	dec    edx
  40b4c9:	cmp    edi,ebp
  40b4cb:	xor    al,0x25
  40b4cd:	fnstsw WORD PTR [edi-0x5e]
  40b4d0:	stos   BYTE PTR es:[edi],al
  40b4d1:	mov    dh,bh
  40b4d3:	out    dx,eax
  40b4d4:	out    0x27,al
  40b4d6:	add    ah,BYTE PTR [eax+ecx*2+0x70999c07]
  40b4dd:	xchg   ebx,eax
  40b4de:	stc    
  40b4df:	ins    BYTE PTR es:[edi],dx
  40b4e0:	push   0xb0c6153d
  40b4e5:	push   ds
  40b4e6:	dec    edx
  40b4e7:	mov    WORD PTR ss:[edx],es
  40b4ea:	pusha  
  40b4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ec:	addr16 ja 0x40b4f4
  40b4ef:	and    al,0x73
  40b4f1:	mov    bh,0xc1
  40b4f3:	int    0x47
  40b4f5:	jmp    0x96fe8f1a
  40b4fa:	das    
  40b4fb:	cwde   
  40b4fc:	pop    eax
  40b4fd:	adc    al,0xba
  40b4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b500:	scas   al,BYTE PTR es:[edi]
  40b501:	out    dx,eax
  40b502:	sub    al,0xe8
  40b504:	mov    ds:0xc420e161,eax
  40b509:	adc    DWORD PTR [ebx+edx*4],ecx
  40b50c:	sub    al,0xcd
  40b50e:	lds    ebp,FWORD PTR fs:[ebp+0x4439f3e4]
  40b515:	dec    ecx
  40b516:	fistp  DWORD PTR [eax+0x68]
  40b519:	loopne 0x40b581
  40b51b:	daa    
  40b51c:	ss jmp 0xe424:0x26ad4f17
  40b524:	xchg   BYTE PTR [ecx],bl
  40b526:	cmp    eax,0x1356e45e
  40b52b:	sbb    eax,0x34ea6eb0
  40b530:	or     ecx,DWORD PTR [eax]
  40b532:	jo     0x40b5a9
  40b534:	mov    dl,0x87
  40b536:	push   ss
  40b537:	shr    DWORD PTR ds:0x2ebb7605,1
  40b53d:	imul   ebp,eax,0xaea4d7ae
  40b543:	popa   
  40b544:	aam    0x1c
  40b546:	pop    es
  40b547:	inc    ebx
  40b548:	test   DWORD PTR [eax],ebp
  40b54a:	out    0xaa,al
  40b54c:	jecxz  0x40b4dd
  40b54e:	popa   
  40b54f:	mov    al,0xd4
  40b551:	jp     0x40b5c1
  40b553:	sub    cl,BYTE PTR [esi-0x5f801b09]
  40b559:	jle    0x40b4fc
  40b55b:	icebp  
  40b55c:	pop    ebp
  40b55d:	ret    0xab34
  40b560:	cld    
  40b561:	pop    esi
  40b562:	sbb    al,0x83
  40b564:	inc    esp
  40b565:	add    BYTE PTR [ebp+0x616a54b4],0xde
  40b56c:	push   ecx
  40b56d:	stos   DWORD PTR es:[edi],eax
  40b56e:	shr    edi,0xf6
  40b571:	dec    ecx
  40b572:	in     eax,0x29
  40b574:	ins    BYTE PTR es:[edi],dx
  40b575:	adc    dh,BYTE PTR [edx+edx*1-0x79]
  40b579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b57a:	jmp    0x47b6ecdd
  40b57f:	sub    eax,0x43777d01
  40b584:	xchg   ebx,eax
  40b585:	mov    bl,0x36
  40b587:	or     eax,0x86c751b9
  40b58c:	mov    edx,0x37fdaa34
  40b591:	sub    BYTE PTR [edx-0xe7787ca],ch
  40b597:	lods   eax,DWORD PTR ds:[esi]
  40b598:	add    ah,BYTE PTR [ecx]
  40b59a:	retf   0xd4a6
  40b59d:	xor    ecx,ebx
  40b59f:	xchg   DWORD PTR [edi+0x4539a88b],eax
  40b5a5:	mov    bh,0xcd
  40b5a7:	cmp    BYTE PTR [ecx+0x7f],ah
  40b5aa:	ret    
  40b5ab:	lds    edx,FWORD PTR [eax+esi*2+0x6c44516d]
  40b5b2:	inc    edx
  40b5b3:	call   0x8f78eaf5
  40b5b8:	jno    0x40b5c0
  40b5ba:	mul    BYTE PTR [edx]
  40b5bc:	jnp    0x40b5ea
  40b5be:	rcl    DWORD PTR [edx+0x690db959],cl
  40b5c4:	stos   DWORD PTR es:[edi],eax
  40b5c5:	dec    esp
  40b5c6:	loop   0x40b5e6
  40b5c8:	xor    BYTE PTR [esi],dh
  40b5ca:	test   DWORD PTR [esp+eax*1-0x101eddf7],ebx
  40b5d1:	repz pop ebx
  40b5d3:	(bad)  
  40b5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d5:	in     al,0x48
  40b5d7:	ja     0x40b63e
  40b5d9:	enter  0x4202,0x1c
  40b5dd:	in     eax,dx
  40b5de:	xor    ah,BYTE PTR [esi+0x70]
  40b5e1:	mov    WORD PTR [ebx],cs
  40b5e3:	and    BYTE PTR [esi-0x4b0d8546],bl
  40b5e9:	or     BYTE PTR cs:[ebp+ecx*1-0x1c9a8dba],cl
  40b5f1:	loopne 0x40b5d9
  40b5f3:	(bad)  
  40b5f4:	lock xchg ebp,eax
  40b5f6:	arpl   WORD PTR [esi+edi*1],dx
  40b5f9:	scas   eax,DWORD PTR es:[edi]
  40b5fa:	int    0xc9
  40b5fc:	je     0x40b665
  40b5fe:	inc    ebp
  40b5ff:	adc    ecx,DWORD PTR [edi]
  40b601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b602:	fwait
  40b603:	dec    edi
  40b604:	stc    
  40b605:	nop
  40b606:	dec    eax
  40b607:	adc    edx,ebx
  40b609:	xor    esp,DWORD PTR [eax+0x5b8eebcd]
  40b60f:	jb     0x40b667
  40b611:	cmp    bl,BYTE PTR [eax+0x5f]
  40b614:	popa   
  40b615:	jo     0x40b5ea
  40b617:	pop    ebx
  40b618:	push   es
  40b619:	add    DWORD PTR [ebx-0x49],ebp
  40b61c:	pusha  
  40b61d:	dec    eax
  40b61e:	xchg   BYTE PTR [edx-0x1],cl
  40b621:	pusha  
  40b622:	and    ah,BYTE PTR [ecx]
  40b624:	fsubrp st(5),st
  40b626:	mov    dl,0x74
  40b628:	dec    esp
  40b629:	adc    BYTE PTR [esi+0x5d],0xe9
  40b62d:	mov    gs,WORD PTR [edi-0x44f94ccf]
  40b633:	(bad)  
  40b634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b635:	imul   ebp,DWORD PTR [edx],0x67
  40b638:	js     0x40b5e4
  40b63a:	inc    ebp
  40b63b:	cmp    DWORD PTR [ebp+0xe],edi
  40b63e:	jecxz  0x40b5f2
  40b640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b641:	pop    es
  40b642:	aaa    
  40b643:	add    ah,BYTE PTR [ecx]
  40b645:	mov    ds:0x57c66b64,eax
  40b64a:	in     al,0xb7
  40b64c:	loop   0x40b61f
  40b64e:	call   0x5ff8:0xc3f20600
  40b655:	mov    edx,0x64b18855
  40b65a:	sub    DWORD PTR [ecx-0x111a4fca],ebp
  40b660:	scas   al,BYTE PTR es:[edi]
  40b661:	xor    al,0x0
  40b663:	aam    0xdc
  40b665:	adc    al,0x2f
  40b667:	dec    edi
  40b668:	push   ebx
  40b669:	mov    esi,0xc8d083e3
  40b66e:	sbb    BYTE PTR [eax-0x4a],dh
  40b671:	fsub   QWORD PTR [ecx-0x6c1c3d92]
  40b677:	into   
  40b678:	loopne 0x40b6da
  40b67a:	mov    ah,0xa6
  40b67c:	xchg   ebx,eax
  40b67d:	aaa    
  40b67e:	or     al,0x97
  40b680:	mov    BYTE PTR [ebx-0x74],cl
  40b683:	pop    esi
  40b684:	cld    
  40b685:	fxch   st(4)
  40b687:	mov    ch,0x47
  40b689:	icebp  
  40b68a:	out    dx,eax
  40b68b:	rcr    DWORD PTR [ebx],0xc2
  40b68e:	hlt    
  40b68f:	xchg   edx,eax
  40b690:	retf   0xdc6a
  40b693:	pop    esi
  40b694:	pop    eax
  40b695:	xchg   bl,al
  40b697:	mov    al,0x17
  40b699:	sub    al,0x2
  40b69b:	cmp    eax,0x48d978d0
  40b6a0:	sbb    BYTE PTR [ecx],dl
  40b6a2:	push   ebx
  40b6a3:	mov    bh,0x42
  40b6a5:	and    eax,DWORD PTR [ebx+edx*1-0x260861b4]
  40b6ac:	mov    dl,0x89
  40b6ae:	sbb    al,0x4e
  40b6b0:	outs   dx,DWORD PTR ds:[esi]
  40b6b1:	adc    DWORD PTR [eax-0x5626e02f],0x89d10924
  40b6bb:	(bad)  
  40b6bc:	lods   al,BYTE PTR ds:[esi]
  40b6bd:	cmp    al,0xa3
  40b6bf:	mov    esp,0xf0be9de1
  40b6c4:	sti    
  40b6c5:	jne    0x40b72c
  40b6c7:	xchg   ecx,eax
  40b6c8:	aad    0xd
  40b6ca:	sub    esi,DWORD PTR [ebp+0x58bf848d]
  40b6d0:	adc    BYTE PTR [edx-0x3e90f0dc],cl
  40b6d6:	push   ebx
  40b6d7:	inc    edi
  40b6d8:	lods   al,BYTE PTR ds:[esi]
  40b6d9:	jl     0x40b67c
  40b6db:	mov    cl,0x73
  40b6dd:	mov    DWORD PTR ds:0x9b7e3c5a,ecx
  40b6e3:	imul   DWORD PTR [ebx-0x2f4fea2c]
  40b6e9:	and    dh,BYTE PTR [ecx+ebp*8-0xe]
  40b6ed:	jl     0x40b6bd
  40b6ef:	retf   0x5344
  40b6f2:	dec    edx
  40b6f3:	ja     0x40b774
  40b6f5:	add    bl,BYTE PTR [ebp+0x72]
  40b6f8:	push   edi
  40b6f9:	(bad)  
  40b6fa:	pop    ds
  40b6fb:	ret    0x42af
  40b6fe:	js     0x40b6fb
  40b700:	loope  0x40b68a
  40b702:	and    BYTE PTR [eax-0x768e32ae],0x41
  40b709:	add    dl,BYTE PTR [edx+0x22]
  40b70c:	sub    bh,BYTE PTR [ebx+0x5a]
  40b70f:	mov    bl,0x22
  40b711:	into   
  40b712:	scas   eax,DWORD PTR es:[edi]
  40b713:	(bad)  
  40b714:	lock mov WORD PTR es:[esi+edx*8],?
  40b719:	aaa    
  40b71a:	sub    eax,0x18437051
  40b71f:	dec    esi
  40b720:	cwde   
  40b721:	jne    0x40b6f8
  40b723:	or     dh,BYTE PTR [eax+0x1e]
  40b726:	mov    bh,0x1f
  40b728:	mov    ebp,0x516aa742
  40b72d:	shr    DWORD PTR [edx],cl
  40b72f:	popf   
  40b730:	(bad)  
  40b731:	xor    eax,0x5f14e62d
  40b736:	stos   DWORD PTR es:[edi],eax
  40b737:	daa    
  40b738:	dec    esp
  40b739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b73a:	mov    ch,0xdd
  40b73c:	add    edi,DWORD PTR [ebp-0x45]
  40b73f:	ds jecxz 0x40b745
  40b742:	push   ss
  40b743:	mov    bh,dh
  40b745:	add    al,0x8b
  40b747:	mov    esi,0x63ef4f85
  40b74c:	inc    esi
  40b74d:	mul    edx
  40b74f:	jle    0x40b73e
  40b751:	mov    al,BYTE PTR [ebx-0x60e1c60e]
  40b757:	aas    
  40b758:	shl    ebx,1
  40b75a:	cmp    ch,0x24
  40b75d:	sub    al,0x78
  40b75f:	inc    edx
  40b760:	mov    ecx,0x4f6a52e1
  40b765:	jmp    0xb4ead543
  40b76a:	fwait
  40b76b:	jg     0x40b6f5
  40b76d:	and    al,0xbf
  40b76f:	jl     0x40b72d
  40b771:	pop    edi
  40b772:	push   esp
  40b773:	fwait
  40b774:	jp     0x40b790
  40b776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b777:	xor    ecx,edi
  40b779:	and    DWORD PTR [eax-0x346ae74c],ebx
  40b77f:	lods   al,BYTE PTR ds:[esi]
  40b780:	ja     0x40b7f1
  40b782:	pop    ds
  40b783:	jl     0x40b786
  40b785:	stos   BYTE PTR es:[edi],al
  40b786:	inc    eax
  40b787:	inc    edi
  40b788:	mov    WORD PTR [edi+0x493a7424],ss
  40b78e:	in     eax,0xe8
  40b790:	les    ecx,FWORD PTR [edi+edx*4-0x49]
  40b794:	sub    eax,0xf51be42
  40b799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b79a:	ja     0x40b7d4
  40b79c:	mov    esp,?
  40b79e:	jmp    0xb86c5d67
  40b7a3:	fld    QWORD PTR [esi]
  40b7a5:	sbb    BYTE PTR [edi-0x7de51a9f],bl
  40b7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ac:	xor    eax,0x67ff8da1
  40b7b1:	push   0xffffffbb
  40b7b3:	popf   
  40b7b4:	mov    BYTE PTR [bx+0x52a2],bh
  40b7b9:	pop    edx
  40b7ba:	pusha  
  40b7bb:	andnps xmm6,xmm1
  40b7be:	mov    BYTE PTR [ecx-0x72],dl
  40b7c1:	lea    edi,[ecx-0x33]
  40b7c4:	enter  0xaa78,0xf2
  40b7c8:	sahf   
  40b7c9:	(bad)  [ebx-0x65e39e9f]
  40b7cf:	cwde   
  40b7d0:	fsub   QWORD PTR [edi]
  40b7d2:	add    eax,0x84d4b8fb
  40b7d7:	cmp    bh,BYTE PTR [edi+0x619c580c]
  40b7dd:	xchg   esp,eax
  40b7de:	lods   al,BYTE PTR ds:[esi]
  40b7df:	(bad)  
  40b7e0:	sbb    esi,ebp
  40b7e2:	pop    esi
  40b7e3:	dec    ebx
  40b7e4:	add    eax,0x8fa772b7
  40b7e9:	or     dl,al
  40b7eb:	jae    0x40b82c
  40b7ed:	add    al,0x4
  40b7ef:	xchg   ecx,eax
  40b7f0:	or     eax,0x3507d3e6
  40b7f5:	and    cl,BYTE PTR [edx-0xa011fc8]
  40b7fb:	cmp    eax,0xe5de8557
  40b800:	dec    edi
  40b801:	mov    esi,DWORD PTR [ebx-0x70]
  40b804:	cld    
  40b805:	and    dh,BYTE PTR [ecx+0x5ebbd6d0]
  40b80b:	push   ss
  40b80c:	mov    ds:0xcad54ac4,al
  40b811:	lock add ecx,edi
  40b814:	iret   
  40b815:	xchg   edx,eax
  40b816:	mov    edi,DWORD PTR [eax+0x7caacc0b]
  40b81c:	jp     0x40b7c9
  40b81e:	jl     0x40b803
  40b820:	mov    eax,0xd5082353
  40b825:	inc    eax
  40b826:	xor    BYTE PTR [edi+0x3020d69a],cl
  40b82c:	popf   
  40b82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b82e:	repz jae 0x40b84e
  40b831:	test   DWORD PTR [ecx-0x80],esi
  40b834:	test   ch,0x11
  40b837:	fs mov esp,0x1e4773b0
  40b83d:	or     ebx,0x737bd2
  40b843:	out    dx,eax
  40b844:	mov    esi,0xda40b6fd
  40b849:	xchg   edx,eax
  40b84a:	and    al,0x86
  40b84c:	adc    al,0x51
  40b84e:	pop    ebx
  40b84f:	(bad)
  40b852:	aam    0xc8
  40b854:	cmp    al,0x38
  40b856:	jae    0x40b852
  40b858:	inc    edi
  40b859:	test   DWORD PTR [ecx],edi
  40b85b:	iret   
  40b85c:	sbb    BYTE PTR [ecx-0x77],0xb5
  40b860:	cli    
  40b861:	push   es
  40b862:	pop    ds
  40b863:	add    al,0xb4
  40b865:	and    eax,0xdd7f2afd
  40b86a:	xor    eax,0x96a40b68
  40b86f:	push   0x8da711df
  40b874:	(bad)  
  40b875:	jne    0x40b8cd
  40b877:	sar    DWORD PTR [ebx-0x26],1
  40b87a:	retf   0x5b95
  40b87d:	stc    
  40b87e:	(bad)  
  40b87f:	sub    eax,0x50f4779
  40b884:	inc    esp
  40b885:	mov    edi,0x9a843b19
  40b88a:	dec    dh
  40b88c:	cmp    eax,ebp
  40b88e:	dec    ecx
  40b88f:	daa    
  40b890:	pop    es
  40b891:	xlat   BYTE PTR es:[ebx]
  40b893:	outs   dx,BYTE PTR ds:[esi]
  40b894:	(bad)
  40b897:	jo     0x7b217ba
  40b89d:	cmp    ecx,DWORD PTR [edi+0x4d]
  40b8a0:	les    edx,FWORD PTR [edi]
  40b8a2:	cmp    BYTE PTR [esi-0x64eb0c24],bl
  40b8a8:	mov    ds:0x50b36e04,eax
  40b8ad:	leave  
  40b8ae:	mov    BYTE PTR [esi+0x1d],ch
  40b8b1:	into   
  40b8b2:	dec    esi
  40b8b3:	push   ss
  40b8b4:	xor    edi,ecx
  40b8b6:	pusha  
  40b8b7:	in     eax,0x32
  40b8b9:	outs   dx,BYTE PTR ds:[esi]
  40b8ba:	stc    
  40b8bb:	sbb    dh,ah
  40b8bd:	mov    DWORD PTR [ebx-0xf5f778f],esp
  40b8c3:	ins    DWORD PTR es:[edi],dx
  40b8c4:	ret    0x9587
  40b8c7:	xchg   ecx,eax
  40b8c8:	mov    ds:0x5264c6ec,al
  40b8cd:	push   cs
  40b8ce:	cmc    
  40b8cf:	push   cs
  40b8d0:	daa    
  40b8d1:	jb     0x40b945
  40b8d3:	sub    ch,dh
  40b8d5:	ins    DWORD PTR es:[edi],dx
  40b8d6:	jp     0x40b8f3
  40b8d8:	mov    ?,esp
  40b8da:	jmp    0x13c6:0x8b9734ef
  40b8e1:	adc    DWORD PTR [eax],ebx
  40b8e3:	fstp   QWORD PTR [ecx+0x67]
  40b8e6:	cs out 0x7b,al
  40b8e9:	loopne 0x40b92d
  40b8eb:	imul   eax,DWORD PTR [ecx+ebx*4-0x20],0x5a9ded1b
  40b8f3:	pop    esi
  40b8f4:	xor    eax,0x941a2373
  40b8f9:	arpl   WORD PTR [ebx],si
  40b8fb:	adc    ah,al
  40b8fd:	add    edi,DWORD PTR [ebx-0x3b]
  40b900:	dec    ebp
  40b901:	push   ds
  40b902:	in     al,0x45
  40b904:	add    al,0xe7
  40b906:	in     al,dx
  40b907:	add    ch,bl
  40b909:	jmp    0xf843:0x9b76dfc1
  40b910:	mov    eax,0x996a2846
  40b915:	xor    edx,ebp
  40b917:	pop    ss
  40b918:	mov    ebx,0x20f59acf
  40b91d:	gs inc ecx
  40b91f:	push   ebp
  40b920:	or     bl,bh
  40b922:	clc    
  40b923:	or     dh,BYTE PTR [eax-0x54]
  40b926:	nop
  40b927:	xchg   edx,eax
  40b928:	xor    DWORD PTR [eax+0x20],ebp
  40b92b:	jg     0x40b999
  40b92d:	pusha  
  40b92e:	pop    ss
  40b92f:	lock in eax,dx
  40b931:	fsubr  DWORD PTR [ebx-0x4062cf68]
  40b937:	sti    
  40b938:	pop    ebp
  40b939:	sub    eax,0x5e1c3284
  40b93e:	icebp  
  40b93f:	popa   
  40b940:	sub    ah,BYTE PTR [edi+edi*1+0x78cccf28]
  40b947:	mov    DWORD PTR [ebx],ebx
  40b949:	inc    ebp
  40b94a:	pop    ecx
  40b94b:	fidivr WORD PTR [edx+0xa]
  40b94e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b94f:	in     eax,0xbd
  40b951:	retf   0x918f
  40b954:	cmc    
  40b955:	scas   eax,DWORD PTR es:[edi]
  40b956:	ss out dx,eax
  40b958:	mov    bh,0x97
  40b95a:	sub    dh,BYTE PTR [eax]
  40b95c:	gs ss dec eax
  40b95f:	retf   0xa2e6
  40b962:	sub    eax,0x53113f7e
  40b967:	frstor [ecx-0x60]
  40b96a:	sub    eax,0x3af9e57
  40b96f:	mov    ds:0xb50dd128,eax
  40b974:	mov    ch,0xcb
  40b976:	pop    ss
  40b977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b978:	aam    0x52
  40b97a:	sub    ch,BYTE PTR [eax]
  40b97c:	stc    
  40b97d:	pop    edx
  40b97e:	out    dx,al
  40b97f:	cmp    DWORD PTR [eax+0x59ee2545],0x75
  40b986:	icebp  
  40b987:	hlt    
  40b988:	xchg   ecx,eax
  40b989:	sub    bl,ah
  40b98b:	pop    esp
  40b98c:	fwait
  40b98d:	jecxz  0x40b9c2
  40b98f:	push   ds
  40b990:	push   ss
  40b991:	daa    
  40b992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b993:	ror    DWORD PTR [edx-0x26],0x75
  40b997:	mov    bl,0x93
  40b999:	jo     0x40b9a4
  40b99b:	jnp    0x40b937
  40b99d:	mov    bh,0x84
  40b99f:	mov    eax,0xfa18fef7
  40b9a4:	cwde   
  40b9a5:	rcr    edx,0x7
  40b9a8:	hlt    
  40b9a9:	shl    BYTE PTR [edx+0x33dc96bf],0x27
  40b9b0:	mov    DWORD PTR [edx+0x4b],esp
  40b9b3:	xchg   esi,eax
  40b9b4:	(bad)  
  40b9b5:	push   edx
  40b9b6:	cmp    DWORD PTR [ecx+0xb],eax
  40b9b9:	dec    ebp
  40b9ba:	outs   dx,DWORD PTR ds:[esi]
  40b9bb:	inc    ebx
  40b9bc:	fdivr  st,st(0)
  40b9be:	aad    0x12
  40b9c0:	out    0xf0,al
  40b9c2:	and    ebp,DWORD PTR [edx]
  40b9c4:	cwde   
  40b9c5:	retf   0x149d
  40b9c8:	mov    DWORD PTR [ebp+0x55],esp
  40b9cb:	cs lock inc eax
  40b9ce:	js     0x40b98a
  40b9d0:	clc    
  40b9d1:	jmp    0x8e0dae9d
  40b9d6:	xchg   BYTE PTR [ecx+0x2043308b],bh
  40b9dc:	test   DWORD PTR [ecx+0x74],esp
  40b9df:	imul   edi,DWORD PTR [ebp+0x29],0xffffff80
  40b9e3:	add    eax,0xcb34f35f
  40b9e8:	stc    
  40b9e9:	pop    es
  40b9ea:	add    DWORD PTR [esi+ebp*2],eax
  40b9ed:	dec    ecx
  40b9ee:	sbb    ah,BYTE PTR [eax+0x7a]
  40b9f1:	xor    dl,al
  40b9f3:	in     al,0xfc
  40b9f5:	xor    esi,ebp
  40b9f7:	test   al,0x17
  40b9f9:	sahf   
  40b9fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9fb:	scas   al,BYTE PTR es:[edi]
  40b9fc:	mov    ebp,0x1a56c931
  40ba01:	fidiv  DWORD PTR ds:0x27ac7615
  40ba07:	ja     0x40ba2f
  40ba09:	adc    eax,0x18db7c6e
  40ba0e:	je     0x40ba5e
  40ba10:	outs   dx,DWORD PTR ds:[esi]
  40ba11:	ins    BYTE PTR es:[edi],dx
  40ba12:	dec    ecx
  40ba13:	jmp    0x40ba89
  40ba15:	retf   0xcd53
  40ba18:	mov    ebp,edx
  40ba1a:	xchg   BYTE PTR [ebp-0x68],ch
  40ba1d:	push   ds
  40ba1e:	daa    
  40ba1f:	pop    ebp
  40ba20:	xchg   ecx,eax
  40ba21:	outs   dx,DWORD PTR fs:[esi]
  40ba23:	or     DWORD PTR [ebx],0xffffffdf
  40ba26:	movlhps xmm7,xmm6
  40ba29:	adc    al,0x4c
  40ba2b:	ds test eax,0xad0c2436
  40ba31:	adc    ah,dh
  40ba33:	jge    0x40baac
  40ba35:	adc    BYTE PTR [eax+edi*1+0x2467ed65],bl
  40ba3c:	les    ecx,FWORD PTR [esi-0x5341cb99]
  40ba42:	mov    BYTE PTR [esi+ebx*8],al
  40ba45:	cmp    DWORD PTR ds:0x2ece0142,edx
  40ba4b:	in     al,0x1c
  40ba4d:	cld    
  40ba4e:	pusha  
  40ba4f:	nop
  40ba50:	jno    0x40ba41
  40ba52:	ss pop esi
  40ba54:	jbe    0x40ba21
  40ba56:	inc    ecx
  40ba57:	scas   eax,DWORD PTR es:[edi]
  40ba58:	sbb    BYTE PTR [edi+eiz*4+0x77],dl
  40ba5c:	cmp    ebx,DWORD PTR [edi-0x7e933745]
  40ba62:	adc    DWORD PTR [edi-0x2ae35e26],ebp
  40ba68:	int    0x64
  40ba6a:	push   ebx
  40ba6b:	outs   dx,DWORD PTR ds:[esi]
  40ba6c:	scas   eax,DWORD PTR es:[edi]
  40ba6d:	jno    0x40bace
  40ba6f:	inc    eax
  40ba70:	inc    edx
  40ba71:	dec    esp
  40ba72:	mov    DWORD PTR [esi+edi*4+0x1c29d96a],esi
  40ba79:	popa   
  40ba7a:	out    dx,eax
  40ba7b:	in     eax,dx
  40ba7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba7d:	mov    al,0x36
  40ba7f:	pop    ecx
  40ba80:	inc    edi
  40ba81:	ds add al,0x84
  40ba84:	sub    cl,BYTE PTR [ecx-0x5a]
  40ba87:	mov    esi,0x604dc5cb
  40ba8c:	lock mov esp,0xb874c768
  40ba92:	mov    ebx,0x684b201b
  40ba97:	mov    ch,0x83
  40ba99:	test   eax,0x1c95c845
  40ba9e:	std    
  40ba9f:	xor    eax,0xaed5e28c
  40baa4:	out    dx,al
  40baa5:	jns    0x40bad4
  40baa7:	outs   dx,BYTE PTR ds:[esi]
  40baa8:	and    al,0x4a
  40baaa:	mov    bl,BYTE PTR [edi-0x4f]
  40baad:	out    0x80,al
  40baaf:	cmp    al,0x67
  40bab1:	push   eax
  40bab2:	cld    
  40bab3:	cwde   
  40bab4:	cmc    
  40bab5:	cmp    BYTE PTR [esi-0x22],0x41
  40bab9:	jg     0x40badc
  40babb:	and    BYTE PTR [ebx-0x28c0eea7],cl
  40bac1:	sti    
  40bac2:	repz iret 
  40bac4:	pop    esi
  40bac5:	pusha  
  40bac6:	arpl   di,bx
  40bac8:	cmp    eax,ebp
  40baca:	sbb    eax,esi
  40bacc:	ins    BYTE PTR es:[edi],dx
  40bacd:	push   es
  40bace:	adc    ebp,ecx
  40bad0:	retf   0xd80c
  40bad3:	pop    es
  40bad4:	dec    ebp
  40bad5:	dec    esi
  40bad6:	test   eax,0x295beabd
  40badb:	into   
  40badc:	out    0x2,eax
  40bade:	(bad)  
  40badf:	(bad)  
  40bae0:	stc    
  40bae1:	inc    ecx
  40bae2:	fistp  QWORD PTR [edx+0x1d]
  40bae5:	imul   DWORD PTR [ebp+0x124936ee]
  40baeb:	mov    al,0xd2
  40baed:	aas    
  40baee:	test   eax,0xe471c3ae
  40baf3:	jmp    0xc2aabad2
  40baf8:	fdiv   QWORD PTR [ecx+0x64fb2c82]
  40bafe:	mov    ah,0x3d
  40bb00:	repz pop ebx
  40bb02:	shr    BYTE PTR [ebx],1
  40bb04:	mov    WORD PTR [ecx+0x1d],cs
  40bb07:	test   DWORD PTR ds:0x90d21cdc,eax
  40bb0d:	(bad)  
  40bb0f:	cld    
  40bb10:	mov    fs,bp
  40bb13:	test   al,0xde
  40bb15:	push   eax
  40bb16:	dec    eax
  40bb17:	jge    0x40baab
  40bb19:	adc    edx,DWORD PTR [esi-0x2d]
  40bb1c:	xor    cl,bl
  40bb1e:	popa   
  40bb1f:	adc    ch,BYTE PTR fs:[edx+0xb]
  40bb23:	dec    ebp
  40bb24:	mov    ds:0xf6e668d8,al
  40bb29:	repnz inc esp
  40bb2b:	mov    cl,0xaa
  40bb2d:	inc    ebx
  40bb2e:	shl    ebp,0x0
  40bb31:	push   eax
  40bb32:	stos   DWORD PTR es:[edi],eax
  40bb33:	push   eax
  40bb34:	pop    ebx
  40bb35:	fwait
  40bb36:	sub    ecx,DWORD PTR [esi]
  40bb38:	dec    ebp
  40bb39:	push   ds
  40bb3a:	in     eax,0xb
  40bb3c:	call   0x467db891
  40bb41:	inc    esp
  40bb42:	fsub   st(0),st
  40bb44:	jo     0x40bba6
  40bb46:	hlt    
  40bb47:	pop    ebp
  40bb48:	cmp    DWORD PTR [di-0x6f],edi
  40bb4c:	jns    0x40bb14
  40bb4e:	cmp    eax,DWORD PTR [edx]
  40bb50:	mov    cl,0x5
  40bb52:	or     eax,0xe6d54187
  40bb57:	jae    0x40bb40
  40bb59:	jge    0x40bb72
  40bb5b:	jno    0x40bbc1
  40bb5d:	add    al,0x56
  40bb5f:	and    eax,0x1845a017
  40bb64:	jo     0x40bb8c
  40bb66:	jl     0x40baf8
  40bb68:	and    edi,DWORD PTR [esi-0x2e]
  40bb6b:	rcl    bh,0xda
  40bb6e:	xchg   esi,eax
  40bb6f:	js     0x40bb7d
  40bb71:	sub    eax,DWORD PTR [ecx+esi*4]
  40bb74:	lods   eax,DWORD PTR ds:[esi]
  40bb75:	ret    0xd43d
  40bb78:	rol    DWORD PTR [ebx+0x291039dc],cl
  40bb7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb7f:	test   BYTE PTR [ecx+edx*2-0x347cfb1e],bl
  40bb86:	jg     0x40bb7b
  40bb88:	jge    0x40bbc2
  40bb8a:	mov    eax,0x39cecc11
  40bb8f:	inc    ebx
  40bb90:	xchg   edi,eax
  40bb91:	cli    
  40bb92:	sbb    dl,dh
  40bb94:	pop    esi
  40bb95:	lods   eax,DWORD PTR ds:[esi]
  40bb96:	das    
  40bb97:	sbb    edi,DWORD PTR [ecx+0xe87e8de]
  40bb9d:	xor    DWORD PTR [ebp-0x45bf915d],esp
  40bba3:	mov    dh,0x1
  40bba5:	sbb    al,0x67
  40bba7:	inc    ebx
  40bba8:	add    eax,0x6cecf0e8
  40bbad:	test   BYTE PTR ds:0xb1e13c16,al
  40bbb3:	push   cs
  40bbb4:	pop    ebx
  40bbb5:	fisubr WORD PTR es:[ecx+0x57e2f033]
  40bbbc:	push   ds
  40bbbd:	mov    al,0x11
  40bbbf:	(bad)
  40bbc3:	dec    ecx
  40bbc4:	push   0x275e3bae
  40bbc9:	and    ebx,DWORD PTR [eax+0x55945bdb]
  40bbcf:	test   DWORD PTR [edi+0xd],edi
  40bbd2:	and    al,0x99
  40bbd4:	ds pop esi
  40bbd6:	mov    bl,0x3
  40bbd8:	mov    eax,0x3f56f63d
  40bbdd:	sahf   
  40bbde:	mov    WORD PTR [ebx],?
  40bbe0:	stos   BYTE PTR es:[edi],al
  40bbe1:	xor    esi,ebx
  40bbe3:	les    ebx,FWORD PTR [esi-0x8]
  40bbe6:	xchg   ebp,eax
  40bbe7:	outs   dx,BYTE PTR ds:[esi]
  40bbe8:	leave  
  40bbe9:	(bad)  
  40bbeb:	jns    0x40bbc9
  40bbed:	sbb    ebp,esi
  40bbef:	sbb    al,BYTE PTR [ebx-0x1541a69e]
  40bbf5:	into   
  40bbf6:	xlat   BYTE PTR ds:[ebx]
  40bbf7:	mov    esi,0xa32dab64
  40bbfc:	adc    edx,DWORD PTR [si+0x1e9c]
  40bc01:	mov    ds:0x93fed242,al
  40bc06:	jg     0x40bc7e
  40bc08:	jge    0x40bbb0
  40bc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc0b:	push   eax
  40bc0c:	sbb    dh,bh
  40bc0e:	or     DWORD PTR [edi],edi
  40bc10:	mov    esp,0x79b6f569
  40bc15:	mov    bl,0xcd
  40bc17:	inc    ebx
  40bc18:	rol    BYTE PTR [eax-0x6e20110f],cl
  40bc1e:	sub    ebp,DWORD PTR [eax-0x3366540c]
  40bc24:	in     eax,0xd6
  40bc26:	jg     0x40bc0f
  40bc28:	nop
  40bc29:	sbb    ecx,edx
  40bc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc2c:	cmp    al,0x14
  40bc2e:	dec    ebx
  40bc2f:	push   edx
  40bc30:	pop    eax
  40bc31:	ret    0xf67a
  40bc34:	xchg   DWORD PTR [esp+esi*2-0xa61dec6],eax
  40bc3b:	idiv   BYTE PTR [edi]
  40bc3d:	mov    ah,BYTE PTR [eax]
  40bc3f:	mov    cl,BYTE PTR [ebx]
  40bc41:	and    BYTE PTR [ebx-0x41],0xce
  40bc45:	outs   dx,DWORD PTR ds:[esi]
  40bc46:	push   0x32
  40bc48:	stc    
  40bc49:	push   esp
  40bc4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc4b:	adc    al,0x76
  40bc4d:	xlat   BYTE PTR ds:[ebx]
  40bc4e:	out    0x19,al
  40bc50:	jno    0x40bbdc
  40bc52:	push   cs
  40bc53:	in     eax,dx
  40bc54:	aas    
  40bc55:	and    bh,bl
  40bc57:	xchg   edi,eax
  40bc58:	mov    esp,0x1e0eb3ff
  40bc5d:	sbb    ah,0xc9
  40bc60:	dec    ecx
  40bc61:	sti    
  40bc62:	xchg   esp,eax
  40bc63:	retf   0x6673
  40bc66:	or     eax,0xec074fe1
  40bc6b:	push   es
  40bc6c:	mov    ch,0x5a
  40bc6e:	push   ss
  40bc6f:	pop    esp
  40bc70:	or     eax,0x8249b413
  40bc75:	or     BYTE PTR [ecx-0x37],0x5e
  40bc79:	ficom  DWORD PTR [ebp-0x43]
  40bc7c:	add    al,BYTE PTR [eax]
  40bc7e:	xchg   DWORD PTR [ebp-0x40],edi
  40bc81:	sbb    bl,BYTE PTR [ebx+0x3223691d]
  40bc87:	sbb    esi,edi
  40bc89:	aas    
  40bc8a:	fcom   DWORD PTR [ebx]
  40bc8c:	ss pop es
  40bc8e:	push   edx
  40bc8f:	push   ebp
  40bc90:	jmp    0x7127d08
  40bc95:	test   eax,0xf4d595e6
  40bc9a:	mov    eax,ds:0x3bc8129
  40bc9f:	(bad)  
  40bca0:	mov    bl,0xd
  40bca2:	fwait
  40bca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bca4:	dec    ebp
  40bca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca6:	xor    BYTE PTR [edx-0x19e77279],0x43
  40bcad:	and    ecx,eax
  40bcaf:	fs std 
  40bcb1:	xchg   ebp,eax
  40bcb2:	sbb    DWORD PTR [edi-0x4ba0ab57],esp
  40bcb8:	push   esi
  40bcb9:	dec    esp
  40bcba:	jmp    0xedc8409d
  40bcbf:	lea    eax,[ecx-0x4342f7a1]
  40bcc5:	hlt    
  40bcc6:	loope  0x40bc69
  40bcc8:	cmp    eax,0x2b62c16f
  40bccd:	jp     0x40bcc7
  40bccf:	sbb    eax,0xbb541f28
  40bcd4:	arpl   WORD PTR [edi],di
  40bcd6:	mov    ecx,edx
  40bcd8:	rcl    DWORD PTR [ecx],1
  40bcda:	cmp    bl,BYTE PTR [eax]
  40bcdc:	mov    bh,0xd3
  40bcde:	cs es xchg edx,eax
  40bce1:	jg     0x40bcf6
  40bce3:	inc    ebp
  40bce4:	xchg   edi,eax
  40bce5:	pop    edx
  40bce6:	test   BYTE PTR [edi-0x7b],0xb1
  40bcea:	mov    esi,0x68c6243b
  40bcef:	mov    ah,0x94
  40bcf1:	pop    ebp
  40bcf2:	dec    ebx
  40bcf3:	mov    edx,0xc24aafac
  40bcf8:	pop    ebp
  40bcf9:	int3   
  40bcfa:	jo     0x40bccb
  40bcfc:	dec    esi
  40bcfd:	sahf   
  40bcfe:	imul   eax,DWORD PTR [esi+0x59],0xffffffa5
  40bd02:	fild   DWORD PTR [ecx+0x63b2a60c]
  40bd08:	fist   WORD PTR [edi+esi*2]
  40bd0b:	(bad)  
  40bd0c:	out    dx,al
  40bd0d:	jbe    0x40bc9f
  40bd0f:	shl    DWORD PTR [edi-0x952860e],0xf4
  40bd16:	cmp    BYTE PTR ds:0x550c23de,ch
  40bd1c:	sub    eax,0x305e1a70
  40bd21:	xor    al,0x34
  40bd23:	cmp    al,0x54
  40bd25:	shl    DWORD PTR [esi-0x13],0x5
  40bd29:	dec    edi
  40bd2a:	sub    eax,0xe155b3c7
  40bd2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd30:	cwde   
  40bd31:	push   ebx
  40bd32:	or     BYTE PTR [edx+0x2c7f2285],bl
  40bd38:	inc    ebx
  40bd39:	(bad)  
  40bd3b:	and    bl,BYTE PTR [esi+0x32412c6c]
  40bd41:	sbb    BYTE PTR [esi+0x59],0xe3
  40bd45:	stos   BYTE PTR es:[edi],al
  40bd46:	out    dx,al
  40bd47:	lahf   
  40bd48:	fs add ecx,ecx
  40bd4b:	into   
  40bd4c:	bnd jg 0x40bd6e
  40bd4f:	and    ch,dh
  40bd51:	xchg   ebx,eax
  40bd52:	adc    eax,0xca3812
  40bd57:	out    dx,al
  40bd58:	jp     0x40bdb1
  40bd5a:	sbb    BYTE PTR [esi+eiz*8+0xd],0x9f
  40bd5f:	add    ch,BYTE PTR ds:0xbfe11704
  40bd65:	add    edx,DWORD PTR [esi-0x68]
  40bd68:	or     ah,BYTE PTR [esi-0x1f]
  40bd6b:	mov    edx,0x89b6ec84
  40bd70:	rcl    cl,1
  40bd72:	jge    0x40bcf4
  40bd74:	lods   al,BYTE PTR ds:[esi]
  40bd75:	test   DWORD PTR [esi+0x699811f5],eax
  40bd7b:	daa    
  40bd7c:	mov    ds:0x4c3d76f7,eax
  40bd81:	jg     0x40bdc5
  40bd83:	add    BYTE PTR ds:0xf8353b14,0x63
  40bd8a:	inc    edi
  40bd8b:	add    al,0x9b
  40bd8d:	xor    eax,0xbccefd19
  40bd92:	es ds cdq 
  40bd95:	(bad)  
  40bd96:	aas    
  40bd97:	xor    BYTE PTR [ecx-0x19],al
  40bd9a:	fstp   TBYTE PTR [ebp+0x23]
  40bd9d:	js     0x40bd73
  40bd9f:	cld    
  40bda0:	fiadd  WORD PTR [ebp+0x2f857b2a]
  40bda6:	sbb    BYTE PTR [esi],al
  40bda8:	mov    bh,0x2e
  40bdaa:	push   esi
  40bdab:	and    al,0x30
  40bdad:	in     eax,dx
  40bdae:	hlt    
  40bdaf:	or     al,0x20
  40bdb1:	push   esi
  40bdb2:	loope  0x40bdb6
  40bdb4:	adc    al,0x31
  40bdb6:	jae    0x40bde4
  40bdb8:	jecxz  0x40bd65
  40bdba:	mov    esp,0x9d4163ba
  40bdbf:	push   ecx
  40bdc0:	xchg   DWORD PTR [ebp+0x1dcccb84],edi
  40bdc6:	xor    eax,0x81008ffc
  40bdcb:	mov    DWORD PTR [edi-0x5ff1cf00],eax
  40bdd1:	push   0x6f
  40bdd3:	mov    dl,0x3c
  40bdd5:	jp     0x40bdb6
  40bdd7:	push   cs
  40bdd8:	add    eax,0xb761a57c
  40bddd:	call   0x55f37140
  40bde2:	inc    ebp
  40bde3:	sbb    dh,BYTE PTR [esi+0x41a1a7fa]
  40bde9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdea:	ja     0x40bdd5
  40bdec:	lahf   
  40bded:	ror    DWORD PTR [eax+ebx*4],0x9b
  40bdf1:	xchg   ebx,eax
  40bdf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdf3:	inc    BYTE PTR [edx]
  40bdf5:	sub    edx,DWORD PTR [ecx+ecx*4-0x8]
  40bdf9:	cmp    ebx,DWORD PTR [ecx+edx*2-0x736c626c]
  40be00:	xor    DWORD PTR [edx-0x2e],esp
  40be03:	cmp    dh,BYTE PTR [ecx]
  40be05:	fsubr  DWORD PTR [edx+0x3ac14b9b]
  40be0b:	sub    esp,DWORD PTR [esi+0x3ef8633d]
  40be11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be12:	sahf   
  40be13:	jmp    0x40be15
  40be15:	out    0x55,al
  40be17:	xor    ecx,DWORD PTR [edi+0x736ecda2]
  40be1d:	es mov edi,0xffa4b431
  40be23:	cmp    ebx,DWORD PTR [eax+0x5afcce95]
  40be29:	retf   0x1321
  40be2c:	cmp    DWORD PTR [esi-0x3f],ebp
  40be2f:	call   0x3f58e25a
  40be34:	fisttp QWORD PTR [eax+0x4e7b2eaf]
  40be3a:	int3   
  40be3b:	pop    esi
  40be3c:	fwait
  40be3d:	scas   al,BYTE PTR es:[edi]
  40be3e:	adc    DWORD PTR [eax+0x23],0x4d
  40be42:	sbb    al,0x99
  40be44:	int    0x69
  40be46:	dec    ebx
  40be47:	ja     0x40bdce
  40be49:	xor    al,bh
  40be4b:	inc    esi
  40be4c:	jno    0x40be5f
  40be4e:	jl     0x40be60
  40be50:	mov    esi,0x675bcdbc
  40be55:	test   edx,0x7b1b7b83
  40be5b:	(bad)  
  40be5c:	pop    ebx
  40be5d:	fisttp DWORD PTR [ebx-0x6d884d93]
  40be63:	xchg   ebx,eax
  40be64:	lods   eax,DWORD PTR ds:[esi]
  40be65:	cmp    DWORD PTR [ecx-0x3727ed58],0x33
  40be6c:	(bad)  
  40be6d:	ja     0x40becf
  40be6f:	mov    ebx,0x71db1d2b
  40be74:	sti    
  40be75:	push   0x7124c8f4
  40be7a:	xchg   edi,eax
  40be7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be7c:	mov    gs:0xc47cbe20,eax
  40be82:	gs mov ah,0xc8
  40be85:	inc    esp
  40be86:	and    eax,0x9ba90f06
  40be8b:	stos   BYTE PTR es:[edi],al
  40be8c:	lock in eax,dx
  40be8e:	mov    dh,0x19
  40be90:	adc    BYTE PTR [edx-0x41],dh
  40be93:	lahf   
  40be94:	es inc ebx
  40be96:	and    eax,0x84fdd8d0
  40be9b:	test   esi,esi
  40be9d:	sub    eax,DWORD PTR [ecx-0x5a]
  40bea0:	add    ch,ch
  40bea2:	popa   
  40bea3:	addr16 in eax,0x59
  40bea6:	adc    al,0x62
  40bea8:	push   eax
  40bea9:	out    0x61,al
  40beab:	lea    ebx,[edx-0x3f]
  40beae:	pop    eax
  40beaf:	sbb    dh,BYTE PTR [ebx+0x13c96333]
  40beb5:	push   ebx
  40beb6:	or     al,0x53
  40beb8:	mov    ebp,0x61fd8085
  40bebd:	cmp    BYTE PTR ds:[esi-0x62],cl
  40bec1:	mov    ebx,0xf558cf73
  40bec6:	xor    DWORD PTR [edi+edi*2+0x47ce1960],ecx
  40becd:	jmp    0x32d75b19
  40bed2:	(bad)  
  40bed3:	aad    0x7b
  40bed5:	rep outs dx,BYTE PTR ds:[esi]
  40bed7:	dec    ebp
  40bed8:	and    al,0x95
  40beda:	push   ss
  40bedb:	inc    esp
  40bedc:	pop    esi
  40bedd:	lods   eax,DWORD PTR ds:[esi]
  40bede:	sub    ch,bl
  40bee0:	mov    esi,0x27b88abf
  40bee5:	rcr    DWORD PTR [edx+ebx*2+0x6842dc0c],0x72
  40beed:	mov    eax,ds:0x5317e070
  40bef2:	jp     0x40bf56
  40bef4:	ja     0x40bf4d
  40bef6:	stos   DWORD PTR es:[edi],eax
  40bef7:	ffree  st(3)
  40bef9:	dec    esi
  40befa:	cli    
  40befb:	dec    eax
  40befc:	neg    DWORD PTR [eax+0x46a983e6]
  40bf02:	xor    eax,0x93b36610
  40bf07:	adc    DWORD PTR [edx],ebp
  40bf09:	sub    al,0x7c
  40bf0b:	popa   
  40bf0c:	push   ss
  40bf0d:	dec    ebp
  40bf0e:	mov    esi,0x62289a64
  40bf13:	jne    0x40bf3c
  40bf15:	jp     0x40bf3d
  40bf17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf19:	fistp  DWORD PTR [ecx-0x2a]
  40bf1c:	and    bl,BYTE PTR [esi]
  40bf1e:	add    al,0x5
  40bf20:	push   0xffffffb8
  40bf22:	test   al,0x35
  40bf24:	inc    eax
  40bf25:	ret    0x8653
  40bf28:	dec    ecx
  40bf29:	xchg   ebx,eax
  40bf2a:	xchg   edi,eax
  40bf2b:	mov    ebx,0x6d16802a
  40bf30:	js     0x40befe
  40bf32:	and    eax,0x9228122c
  40bf37:	fwait
  40bf38:	cmp    edx,eax
  40bf3a:	adc    dh,BYTE PTR [esi+eiz*1+0x17c9e162]
  40bf41:	sbb    BYTE PTR [esi-0x71d48f79],al
  40bf47:	inc    edi
  40bf48:	add    bl,BYTE PTR [esi-0x1b]
  40bf4b:	popf   
  40bf4c:	dec    esp
  40bf4d:	xor    al,0x2a
  40bf4f:	jp     0x40bf13
  40bf51:	xchg   esi,eax
  40bf52:	mov    ?,edx
  40bf54:	dec    edx
  40bf55:	jb     0x40bf0c
  40bf57:	jo     0x40bf25
  40bf59:	stos   BYTE PTR es:[edi],al
  40bf5a:	pop    ecx
  40bf5b:	dec    esi
  40bf5c:	gs std 
  40bf5e:	test   al,0xd6
  40bf60:	pop    esi
  40bf61:	fsub   QWORD PTR [ebp-0x10]
  40bf64:	jecxz  0x40bf97
  40bf66:	int3   
  40bf67:	stc    
  40bf68:	ds sub al,0x4f
  40bf6b:	outs   dx,DWORD PTR ds:[esi]
  40bf6c:	pop    edx
  40bf6d:	mov    BYTE PTR [esi],bh
  40bf6f:	les    ebp,FWORD PTR ds:0x483b3a2b
  40bf75:	inc    edx
  40bf76:	xchg   edx,eax
  40bf77:	nop
  40bf78:	loope  0x40bf2a
  40bf7a:	cmp    bl,BYTE PTR [edi+0x21]
  40bf7d:	and    al,0x97
  40bf7f:	mov    ah,0xb0
  40bf81:	scas   al,BYTE PTR es:[edi]
  40bf82:	xlat   BYTE PTR ds:[ebx]
  40bf83:	call   0x5a3d:0x3e7b0458
  40bf8a:	(bad)  
  40bf8b:	dec    eax
  40bf8c:	ret    0xc68b
  40bf8f:	inc    ebp
  40bf90:	mov    ss,WORD PTR [edi-0x5c1c4844]
  40bf96:	mov    dl,bh
  40bf98:	inc    ebp
  40bf99:	popf   
  40bf9a:	add    BYTE PTR [ebx+0x6b96c094],dh
  40bfa0:	pusha  
  40bfa1:	aas    
  40bfa2:	or     bl,BYTE PTR [esi-0x27154a89]
  40bfa8:	(bad)  
  40bfa9:	ins    DWORD PTR es:[edi],dx
  40bfaa:	mov    ds,WORD PTR [eax]
  40bfac:	push   ss
  40bfad:	repnz popf 
  40bfaf:	xchg   edi,eax
  40bfb0:	mov    ecx,0xd2cefab
  40bfb5:	push   edi
  40bfb6:	int    0x8a
  40bfb8:	popf   
  40bfb9:	xchg   esp,eax
  40bfba:	mov    edx,0x498657e3
  40bfbf:	jle    0x40bf5e
  40bfc1:	xchg   BYTE PTR [edx-0x20],ch
  40bfc4:	gs sub edi,edi
  40bfc7:	rcr    BYTE PTR [esi+0x4c],1
  40bfca:	in     eax,0xe2
  40bfcc:	jmp    0x40c049
  40bfce:	(bad)  
  40bfd0:	dec    edx
  40bfd1:	mov    ebp,0xcd6ac480
  40bfd6:	jmp    0x1669:0xb12c9dc0
  40bfdd:	shl    bl,1
  40bfdf:	and    edx,0x4f7bd25e
  40bfe5:	cmc    
  40bfe6:	lods   eax,DWORD PTR ds:[esi]
  40bfe7:	jmp    0x40c03f
  40bfe9:	cdq    
  40bfea:	cmp    BYTE PTR [ebx+edx*8-0x3dda0664],0xea
  40bff2:	loope  0x40bfc3
  40bff4:	add    dh,BYTE PTR [ecx-0x3c]
  40bff7:	mov    dl,BYTE PTR [ebp-0xf]
  40bffa:	push   edi
  40bffb:	into   
  40bffc:	add    cl,BYTE PTR [ebp-0x5c]
  40bfff:	push   edi
  40c000:	shr    BYTE PTR [ebx+0x48],1
  40c003:	icebp  
  40c004:	lods   eax,DWORD PTR ds:[esi]
  40c005:	test   al,0x8a
  40c007:	sbb    BYTE PTR [edx+eax*2],dl
  40c00a:	cmp    bh,BYTE PTR [esi+esi*1]
  40c00d:	mov    ebp,0x3ce27473
  40c012:	xchg   DWORD PTR [edx-0x24],eax
  40c015:	push   eax
  40c016:	adc    BYTE PTR [ebp-0x1009b273],dh
  40c01c:	xchg   ebx,eax
  40c01d:	add    BYTE PTR [edi-0x4f],0x9b
  40c021:	call   0x61d59b7b
  40c026:	inc    eax
  40c027:	loop   0x40bfd8
  40c029:	add    ch,BYTE PTR [esi-0x3eedbd3f]
  40c02f:	test   al,0xb1
  40c031:	int3   
  40c032:	es inc ecx
  40c034:	leave  
  40c035:	pop    ebp
  40c036:	lock mov edx,0xe3c58df2
  40c03c:	shr    DWORD PTR [edi+0x5bacfdb2],0x1c
  40c043:	xor    DWORD PTR [esi-0x48],edi
  40c046:	inc    eax
  40c047:	fld    QWORD PTR [eax-0x58d08035]
  40c04d:	pop    es
  40c04e:	jnp    0x40c0be
  40c050:	sbb    bh,BYTE PTR [esi]
  40c052:	pop    ss
  40c053:	stos   BYTE PTR es:[edi],al
  40c054:	pushf  
  40c055:	mov    ebx,0x8f2690cd
  40c05a:	test   DWORD PTR ds:0xf2a033a5,edx
  40c060:	cwde   
  40c061:	fmul   QWORD PTR [edi+0x275d717b]
  40c067:	les    eax,FWORD PTR [eax+0x7bc0cc20]
  40c06d:	aad    0xd2
  40c06f:	ret    
  40c070:	xchg   ebx,eax
  40c071:	popf   
  40c072:	(bad)  
  40c073:	mov    bl,0xab
  40c075:	cs repz ja 0x40c066
  40c079:	dec    esp
  40c07a:	and    DWORD PTR [edx],esi
  40c07c:	mov    al,ds:0xa388cf32
  40c081:	pop    ecx
  40c082:	mov    edx,0x5cf08be1
  40c087:	cli    
  40c088:	int    0x91
  40c08a:	sahf   
  40c08b:	xor    DWORD PTR ds:0x5da7e6cb,0x1cb418c9
  40c095:	cmc    
  40c096:	out    dx,al
  40c097:	test   DWORD PTR [edi+0x5d719bfa],edx
  40c09d:	test   esp,edi
  40c09f:	push   edx
  40c0a0:	sbb    DWORD PTR [eax-0x22],edi
  40c0a3:	jnp    0x40c05f
  40c0a5:	and    bl,BYTE PTR [edx+0x1eb1ac88]
  40c0ab:	shl    DWORD PTR [eax+0x2e],cl
  40c0ae:	mov    ebp,ebx
  40c0b0:	xor    eax,edi
  40c0b2:	(bad)  
  40c0b3:	push   edx
  40c0b4:	sti    
  40c0b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b6:	xchg   esp,eax
  40c0b7:	xchg   ecx,eax
  40c0b8:	cli    
  40c0b9:	adc    eax,0xacd66d3
  40c0be:	sbb    DWORD PTR [ebx+ebx*2-0x415de66f],ebx
  40c0c5:	mov    esi,0xc3f02e16
  40c0ca:	fbld   TBYTE PTR [ecx+0x43c5a8d8]
  40c0d0:	xor    ax,0x11a1
  40c0d4:	pusha  
  40c0d5:	xchg   ebp,eax
  40c0d6:	fsubr  DWORD PTR [edi]
  40c0d8:	cli    
  40c0d9:	push   eax
  40c0db:	aas    
  40c0dc:	pop    ecx
  40c0dd:	push   edi
  40c0de:	fsubr  QWORD PTR [edx+0x13]
  40c0e1:	sub    eax,0xb86adf46
  40c0e6:	xor    al,0x69
  40c0e8:	icebp  
  40c0e9:	fwait
  40c0ea:	mov    cl,0x85
  40c0ec:	cmp    edx,ebx
  40c0ee:	mov    eax,0x72fe4599
  40c0f3:	popw   es
  40c0f5:	mov    eax,ds:0x4723fd9e
  40c0fa:	mov    esp,0xf8eeea7b
  40c0ff:	out    dx,eax
  40c100:	push   ecx
  40c101:	in     al,dx
  40c102:	dec    esi
  40c103:	jle    0x40c0c9
  40c105:	and    DWORD PTR [ebx+0x705bc24d],ecx
  40c10b:	cmovl  ecx,DWORD PTR [ebx-0x4daa7ce9]
  40c112:	neg    BYTE PTR [edi-0x1f]
  40c115:	add    al,0x31
  40c117:	sbb    al,0xe7
  40c119:	(bad)  
  40c11a:	lds    edi,FWORD PTR [ebx+0x48]
  40c11d:	and    al,0xef
  40c11f:	jp     0x40c184
  40c121:	jbe    0x40c189
  40c123:	popa   
  40c124:	push   es
  40c125:	clc    
  40c126:	das    
  40c127:	lods   eax,DWORD PTR ds:[esi]
  40c128:	test   DWORD PTR [ebp-0x187e9741],esi
  40c12e:	and    DWORD PTR [edx],ebp
  40c130:	pop    es
  40c131:	stos   BYTE PTR es:[edi],al
  40c132:	fcom   QWORD PTR [ebp+0x1]
  40c135:	push   0x77
  40c137:	sbb    ecx,DWORD PTR [ecx-0x2ba07557]
  40c13d:	pop    ss
  40c13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c13f:	push   0x3b
  40c141:	mov    eax,ds:0xa9fc75ce
  40c146:	fdiv   st,st(7)
  40c148:	std    
  40c149:	cli    
  40c14a:	jo     0x40c104
  40c14c:	sub    DWORD PTR [edi-0x31],edx
  40c14f:	and    edx,DWORD PTR [edi]
  40c151:	mov    ah,0xc0
  40c153:	jp     0x40c181
  40c155:	push   edi
  40c156:	int3   
  40c157:	gs jmp 0xd4711767
  40c15d:	inc    ecx
  40c15e:	adc    eax,0xa6634579
  40c163:	sub    ecx,edx
  40c165:	add    edx,DWORD PTR [eax+eax*8-0x27]
  40c169:	jo     0x40c154
  40c16b:	ds cmp al,0xfc
  40c16e:	sbb    dl,BYTE PTR [edi+0x6904d7ed]
  40c174:	xor    al,0x40
  40c176:	sub    DWORD PTR [ebp-0x4913a2d0],edx
  40c17c:	iret   
  40c17d:	jecxz  0x40c1b2
  40c17f:	push   esp
  40c180:	dec    ebp
  40c181:	cmp    BYTE PTR [ecx-0x64d4b6f8],al
  40c187:	test   edx,edi
  40c189:	dec    edi
  40c18a:	pop    esi
  40c18b:	and    BYTE PTR [edi],bh
  40c18d:	js     0x40c14b
  40c18f:	sbb    al,0x78
  40c191:	out    0xde,eax
  40c193:	stos   BYTE PTR es:[edi],al
  40c194:	lods   al,BYTE PTR ds:[esi]
  40c195:	xchg   ebx,eax
  40c196:	jae    0x40c17e
  40c198:	or     BYTE PTR [esi-0x40c90307],bh
  40c19e:	adc    al,0x65
  40c1a0:	cmp    al,BYTE PTR [edi-0x7d]
  40c1a3:	loope  0x40c12a
  40c1a5:	or     BYTE PTR [eax+0x212fa862],dh
  40c1ab:	mov    ds:0x325be80c,al
  40c1b0:	daa    
  40c1b1:	sti    
  40c1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1b3:	add    al,0xb6
  40c1b5:	add    BYTE PTR [bx+di-0x500],ah
  40c1ba:	es dec ebp
  40c1bc:	or     al,0x6e
  40c1be:	sbb    eax,0xadeaa435
  40c1c3:	adc    BYTE PTR [edx],ch
  40c1c5:	xchg   esp,eax
  40c1c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c7:	daa    
  40c1c8:	sbb    esi,DWORD PTR [edi+0x2d2180c0]
  40c1ce:	mov    ebx,0x1fb788c
  40c1d3:	pop    es
  40c1d4:	fnstenv [ebx-0x34581510]
  40c1da:	dec    eax
  40c1db:	in     al,0xfc
  40c1dd:	push   0x49806339
  40c1e2:	lds    esi,FWORD PTR [esp+esi*8-0x6bf3d090]
  40c1e9:	dec    esi
  40c1ea:	ins    DWORD PTR es:[edi],dx
  40c1eb:	mov    esp,0x63855aa3
  40c1f0:	jl     0x40c191
  40c1f2:	sub    eax,0x81dbd143
  40c1f7:	mov    DWORD PTR ds:0x19b89236,eax
  40c1fd:	dec    dx
  40c1ff:	jg     0x40c18f
  40c201:	jb     0x40c279
  40c203:	jo     0x40c258
  40c205:	ss jge 0x40c1ff
  40c208:	jns    0x40c251
  40c20a:	push   eax
  40c20b:	push   ds
  40c20c:	int    0xa6
  40c20e:	in     al,dx
  40c20f:	adc    edx,DWORD PTR [edi-0x20]
  40c212:	mov    edx,ss
  40c214:	jmp    0x40c1a7
  40c216:	fwait
  40c217:	xchg   ebx,eax
  40c218:	xchg   ecx,eax
  40c219:	and    DWORD PTR [esi+0xe],ebx
  40c21c:	or     eax,0x218599f1
  40c221:	mov    esi,0x71d0109
  40c226:	in     al,dx
  40c227:	cmp    eax,0xd66b3424
  40c22c:	cmp    DWORD PTR fs:[eax],ebx
  40c22f:	sbb    DWORD PTR ss:[esi+0x3d],0x47
  40c234:	sbb    bl,BYTE PTR [ebx-0x1bb1e666]
  40c23a:	inc    eax
  40c23b:	cli    
  40c23c:	adc    BYTE PTR [eax],0xae
  40c23f:	xlat   BYTE PTR ds:[ebx]
  40c240:	adc    ch,BYTE PTR [edx]
  40c242:	or     ch,al
  40c244:	mov    al,0x28
  40c246:	mov    eax,0xd477112f
  40c24b:	cmp    al,0x76
  40c24d:	xchg   edx,eax
  40c24e:	inc    eax
  40c24f:	jns    0x40c25c
  40c251:	sub    DWORD PTR [ebp-0x11],edx
  40c254:	or     DWORD PTR [edx-0x66da5a76],ecx
  40c25a:	cli    
  40c25b:	add    eax,ecx
  40c25d:	xchg   edx,eax
  40c25e:	je     0x40c1f5
  40c260:	mov    al,0x72
  40c262:	xor    cl,BYTE PTR [edx+edx*1+0x10945977]
  40c269:	jo     0x40c222
  40c26b:	or     DWORD PTR [edx+0x0],edi
  40c26e:	fwait
  40c26f:	mov    eax,ds:0xe6062b54
  40c274:	ret    0x1e20
  40c277:	cli    
  40c278:	mov    BYTE PTR [ebx-0x56e77e34],0x43
  40c27f:	dec    ebp
  40c280:	sub    al,BYTE PTR [ecx]
  40c282:	les    ecx,FWORD PTR [eax-0x6635aaf1]
  40c288:	dec    esp
  40c289:	repz adc BYTE PTR [edx+0x31],ch
  40c28d:	ds adc al,0x7e
  40c290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c291:	or     ah,BYTE PTR [edx+0x45]
  40c294:	cmp    dh,BYTE PTR [ebx]
  40c296:	jmp    0x968e:0xad1bd553
  40c29d:	cmp    eax,0x82d946dc
  40c2a2:	fwait
  40c2a3:	in     eax,0xfd
  40c2a5:	jmp    0xb97b9e70
  40c2aa:	add    bh,dl
  40c2ac:	enter  0x307b,0xa
  40c2b0:	mov    DWORD PTR [ecx+0x71f9de21],ebx
  40c2b6:	iret   
  40c2b7:	in     eax,dx
  40c2b8:	pop    esp
  40c2b9:	iret   
  40c2ba:	es sbb cl,bh
  40c2bd:	outs   dx,DWORD PTR ds:[esi]
  40c2be:	div    DWORD PTR [ebp+0x1cc3f8d]
  40c2c4:	fdiv   DWORD PTR [eax]
  40c2c6:	stc    
  40c2c7:	(bad)  
  40c2c8:	in     al,0xc4
  40c2ca:	dec    ecx
  40c2cb:	jbe    0x40c2a0
  40c2cd:	aam    0x16
  40c2cf:	and    al,dl
  40c2d1:	sub    ch,BYTE PTR [esi-0x2c4f8ee9]
  40c2d7:	jg     0x40c2d4
  40c2d9:	cmp    esp,DWORD PTR [eax]
  40c2db:	shr    DWORD PTR [edx+edi*1-0x32b9c60f],0x70
  40c2e3:	sub    eax,0x18a741af
  40c2e8:	pop    esi
  40c2e9:	fmul   QWORD PTR [ecx+0x64fb5040]
  40c2ef:	into   
  40c2f0:	sub    al,0x1b
  40c2f2:	dec    edi
  40c2f3:	idiv   edx
  40c2f5:	and    dl,ch
  40c2f7:	cmp    BYTE PTR [edx+ebx*8-0x47],al
  40c2fb:	inc    edx
  40c2fc:	cmp    BYTE PTR [esi+0x15094f73],0x80
  40c303:	xor    ebx,DWORD PTR gs:[ebp-0x7cebe518]
  40c30a:	fist   WORD PTR [esi+0x45]
  40c30d:	jmp    0x86ffeb51
  40c312:	daa    
  40c313:	dec    esi
  40c314:	jg     0x40c34b
  40c316:	dec    edx
  40c317:	cmc    
  40c318:	push   ss
  40c319:	int3   
  40c31a:	fsubr  DWORD PTR [edx-0x7aa22cf3]
  40c320:	fcomp  QWORD PTR ds:0x70d50832
  40c326:	pop    edx
  40c327:	mov    dh,BYTE PTR [esi]
  40c329:	jo     0x40c305
  40c32b:	imul   BYTE PTR [edi+0xd3dee87]
  40c331:	div    BYTE PTR [eax]
  40c333:	loope  0x40c2f4
  40c335:	in     eax,0x92
  40c337:	loope  0x40c324
  40c339:	and    eax,0xf844aa90
  40c33e:	add    esi,DWORD PTR [ecx+0x4b]
  40c341:	int3   
  40c342:	std    
  40c343:	jmp    0x701bdf6c
  40c348:	out    0xbd,al
  40c34a:	or     ebp,DWORD PTR [ecx-0x14423a9d]
  40c350:	and    al,0x8a
  40c352:	(bad)  
  40c353:	in     eax,0xe4
  40c355:	pop    ss
  40c356:	inc    edi
  40c357:	mov    esp,?
  40c359:	ins    BYTE PTR es:[edi],dx
  40c35a:	mov    cs,WORD PTR [eax+0x7c]
  40c35d:	jmp    0x40c31a
  40c35f:	jae    0x40c326
  40c361:	enter  0xccff,0x3d
  40c365:	xor    bl,BYTE PTR [ebx]
  40c367:	lahf   
  40c368:	jb     0x40c37d
  40c36a:	sub    eax,0xbf6606d5
  40c36f:	jae    0x40c328
  40c371:	not    DWORD PTR [edi-0xa19b78]
  40c377:	(bad)  
  40c378:	push   edi
  40c379:	push   cs
  40c37a:	inc    ecx
  40c37b:	(bad)  
  40c37c:	sbb    ebx,DWORD PTR [edi-0x49416b5c]
  40c382:	in     eax,dx
  40c383:	mov    esp,0x8f6b43fe
  40c388:	mov    eax,0xc0852f60
  40c38d:	test   al,0x80
  40c38f:	mov    dl,0x45
  40c391:	sub    DWORD PTR [esi],0x3f
  40c394:	pop    ebp
  40c395:	and    ah,BYTE PTR [esi+eiz*8+0x35]
  40c399:	div    BYTE PTR [ecx+0x35]
  40c39c:	and    eax,DWORD PTR [eax+edi*2]
  40c39f:	dec    ecx
  40c3a0:	add    al,0xc3
  40c3a2:	not    BYTE PTR [ebx+0x48b47dd7]
  40c3a8:	ja     0x40c3c0
  40c3aa:	test   DWORD PTR [edi+0x6b],0x90968521
  40c3b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3b2:	repnz xchg cl,ch
  40c3b5:	pop    edi
  40c3b6:	in     al,dx
  40c3b7:	std    
  40c3b8:	ss sub ch,ch
  40c3bb:	es daa 
  40c3bd:	call   0xb33a9f3a
  40c3c2:	popf   
  40c3c3:	mov    ah,0xf7
  40c3c5:	inc    edx
  40c3c6:	ret    0x81fd
  40c3c9:	mov    DWORD PTR [ebp+edx*8-0x5d],ebp
  40c3cd:	jae    0x40c365
  40c3cf:	push   0xffffff8d
  40c3d1:	pop    ebp
  40c3d2:	push   ecx
  40c3d3:	aad    0x1
  40c3d5:	add    al,0xf4
  40c3d7:	les    ebx,FWORD PTR [edx]
  40c3d9:	push   0xffffffd4
  40c3db:	inc    ecx
  40c3dc:	push   esp
  40c3dd:	mov    ds:0xd875bb21,eax
  40c3e2:	das    
  40c3e3:	in     eax,0x86
  40c3e5:	js     0x40c3e6
  40c3e7:	lock or ecx,DWORD PTR [eax]
  40c3ea:	mov    dh,0x94
  40c3ec:	das    
  40c3ed:	dec    esp
  40c3ee:	ret    0xdffb
  40c3f1:	rcl    BYTE PTR [ebp+0x5e],0xd2
  40c3f5:	out    0xc8,eax
  40c3f7:	inc    cl
  40c3f9:	loopne 0x40c46b
  40c3fb:	mov    esp,0x47a2629e
  40c400:	mov    BYTE PTR [edx-0xa],dh
  40c403:	and    bh,BYTE PTR [esi+esi*1]
  40c406:	arpl   WORD PTR [edi+0x47267018],cx
  40c40c:	jg     0x40c3e5
  40c40e:	lea    ebp,[esi+0xc]
  40c411:	sbb    eax,0x707171e1
  40c416:	xchg   ecx,eax
  40c417:	les    ebx,FWORD PTR [ecx]
  40c419:	std    
  40c41a:	push   eax
  40c41b:	lock je 0x40c3b1
  40c41e:	and    DWORD PTR [eax-0x4c],edx
  40c421:	(bad)  
  40c422:	lods   al,BYTE PTR ds:[esi]
  40c423:	repz and BYTE PTR ds:0xf800a24,bh
  40c42a:	in     al,dx
  40c42b:	push   eax
  40c42c:	sahf   
  40c42d:	dec    ebp
  40c42e:	js     0x40c418
  40c430:	jb     0x40c417
  40c432:	nop
  40c433:	sub    edx,DWORD PTR [ebx+0x5ed9f1ec]
  40c439:	mov    ds:0x53b85040,eax
  40c43e:	xchg   esi,eax
  40c43f:	xchg   ebx,eax
  40c440:	or     al,0x83
  40c442:	dec    ecx
  40c443:	adc    DWORD PTR [ebp-0x4095f262],ecx
  40c449:	xor    ecx,esp
  40c44b:	add    DWORD PTR [edi+0x49ba3e9d],edi
  40c451:	pop    edi
  40c452:	and    BYTE PTR [ebx+0x33b13485],dh
  40c458:	or     bh,BYTE PTR [eax+edi*2-0x776353cd]
  40c45f:	pop    esp
  40c460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c461:	push   edx
  40c462:	and    edi,DWORD PTR [ebp+ebx*4-0x58562f47]
  40c469:	les    ebp,FWORD PTR [ebx+0x614a3c42]
  40c46f:	call   0xfa3d:0xfd54e5c1
  40c476:	imul   eax,DWORD PTR [edi-0x73b70eae],0xf289b985
  40c480:	in     eax,0xb8
  40c482:	push   ds
  40c483:	cli    
  40c484:	sbb    BYTE PTR [ecx+0x3778fbfb],0x0
  40c48b:	fbld   TBYTE PTR [eax-0x322d63c8]
  40c491:	dec    ebp
  40c492:	sbb    ah,BYTE PTR ds:0x528fa6a0
  40c498:	sbb    DWORD PTR [eax-0xd0245b6],0xc73f65a8
  40c4a2:	dec    esp
  40c4a3:	loopne 0x40c458
  40c4a5:	mov    al,ds:0x8339685a
  40c4aa:	mov    ch,0x8a
  40c4ac:	std    
  40c4ad:	jg     0x40c4d9
  40c4af:	mov    edi,DWORD PTR [esi+eiz*4]
  40c4b2:	loope  0x40c459
  40c4b4:	pop    eax
  40c4b5:	ret    
  40c4b6:	jg     0x40c454
  40c4b8:	retf   0xb665
  40c4bb:	jmp    0x719e43df
  40c4c0:	in     eax,0xc7
  40c4c2:	ins    BYTE PTR es:[edi],dx
  40c4c3:	aad    0xe4
  40c4c5:	dec    edx
  40c4c6:	inc    ecx
  40c4c7:	push   eax
  40c4c8:	and    eax,0x4629646d
  40c4cd:	inc    ecx
  40c4ce:	das    
  40c4cf:	sub    cl,BYTE PTR gs:0x865a7017
  40c4d6:	and    eax,eax
  40c4d8:	in     al,0x5e
  40c4da:	add    bh,ch
  40c4dc:	dec    esi
  40c4dd:	mov    bh,0x54
  40c4df:	mov    ebp,0x3a415813
  40c4e4:	push   ebp
  40c4e5:	pop    ebx
  40c4e6:	rcr    al,1
  40c4e8:	dec    ebx
  40c4e9:	mov    esi,0xe705bc4e
  40c4ee:	sti    
  40c4ef:	xchg   esp,eax
  40c4f0:	fcmovu st,st(2)
  40c4f2:	popa   
  40c4f3:	push   ebp
  40c4f4:	leave  
  40c4f5:	pop    edi
  40c4f6:	or     cl,ah
  40c4f8:	in     eax,dx
  40c4f9:	xor    al,0x4e
  40c4fb:	ins    DWORD PTR es:[edi],dx
  40c4fc:	adc    al,0x23
  40c4fe:	cwde   
  40c4ff:	lahf   
  40c500:	or     esp,eax
  40c502:	mov    fs,esp
  40c504:	push   esi
  40c505:	mov    ch,0xda
  40c507:	xchg   ebx,eax
  40c508:	jmp    ecx
  40c50a:	pop    edi
  40c50b:	in     eax,0x7d
  40c50d:	int3   
  40c50e:	push   esp
  40c50f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c510:	dec    ebp
  40c511:	outs   dx,DWORD PTR ds:[esi]
  40c512:	es (bad) 
  40c514:	loop   0x40c55f
  40c516:	push   esp
  40c517:	pop    ss
  40c518:	sbb    bh,BYTE PTR [esi]
  40c51a:	jne    0x40c515
  40c51c:	div    BYTE PTR [ebp-0x7f]
  40c51f:	iret   
  40c520:	(bad)  [ebx-0x7addde76]
  40c526:	enter  0xb95e,0xeb
  40c52a:	fsubr  st(3),st
  40c52c:	xchg   edx,eax
  40c52d:	ss repz push edi
  40c530:	pop    ss
  40c531:	repz xor dh,BYTE PTR [esi]
  40c534:	jmp    0x1eb6f66b
  40c539:	jae    0x40c554
  40c53b:	mov    eax,ds:0xeab84996
  40c540:	lahf   
  40c541:	push   ds
  40c542:	mov    eax,0x984227c3
  40c547:	xchg   DWORD PTR [esi],ebx
  40c549:	cli    
  40c54a:	test   BYTE PTR [edx-0x495b1bea],al
  40c550:	xor    cl,BYTE PTR [esi]
  40c552:	add    ch,BYTE PTR [ebx-0x7edf9bb4]
  40c558:	retf   0x86ae
  40c55b:	lods   al,BYTE PTR ds:[esi]
  40c55c:	cmp    cl,dh
  40c55e:	js     0x40c579
  40c560:	dec    edi
  40c561:	test   ch,bl
  40c563:	lahf   
  40c564:	int3   
  40c565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c566:	cld    
  40c567:	icebp  
  40c568:	inc    ebx
  40c569:	bound  edi,QWORD PTR [eax]
  40c56b:	inc    ecx
  40c56c:	sub    DWORD PTR [edi+eiz*8+0x4d],ebp
  40c570:	sub    DWORD PTR ds:[ebp+ecx*4+0x25],esi
  40c575:	jae    0x40c4f9
  40c577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c578:	inc    ebp
  40c579:	les    ebx,FWORD PTR [ebx+0x62e510ea]
  40c57f:	add    al,0xa9
  40c581:	mov    ebp,eax
  40c583:	mov    DWORD PTR [ebx+0x72],ebp
  40c586:	lods   eax,DWORD PTR ds:[esi]
  40c587:	call   0x127e3634
  40c58c:	add    ch,BYTE PTR [ecx]
  40c58e:	mov    ecx,esp
  40c590:	dec    dh
  40c592:	jp     0x40c552
  40c594:	sbb    DWORD PTR [esi+0x65acf1df],ecx
  40c59a:	and    eax,DWORD PTR [esi+0x7e]
  40c59d:	or     BYTE PTR [esi-0x122f5caa],cl
  40c5a3:	inc    esi
  40c5a4:	repnz sbb al,0x50
  40c5a7:	mov    ds:0x6bef50b6,eax
  40c5ac:	xlat   BYTE PTR ds:[ebx]
  40c5ad:	aam    0x36
  40c5af:	std    
  40c5b0:	loop   0x40c550
  40c5b2:	in     al,dx
  40c5b3:	sbb    edi,esp
  40c5b5:	inc    ch
  40c5b7:	loope  0x40c553
  40c5b9:	cmp    DWORD PTR [edx],ebx
  40c5bb:	dec    esp
  40c5bc:	cmp    bl,BYTE PTR [esp+eiz*2]
  40c5bf:	jns    0x40c5b7
  40c5c1:	adc    esi,eax
  40c5c3:	mov    bh,BYTE PTR [ebx+ebx*1]
  40c5c6:	loopne 0x40c574
  40c5c8:	in     eax,0x8f
  40c5ca:	in     al,dx
  40c5cb:	xchg   ebp,eax
  40c5cc:	clc    
  40c5cd:	cmp    DWORD PTR [edi],edx
  40c5cf:	daa    
  40c5d0:	or     BYTE PTR [esi],al
  40c5d2:	aas    
  40c5d3:	dec    edi
  40c5d4:	mov    al,ds:0xd7b3fcae
  40c5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5da:	mov    esi,0xd0bd6fee
  40c5df:	jp     0x40c631
  40c5e1:	hlt    
  40c5e2:	ins    BYTE PTR es:[edi],dx
  40c5e3:	push   cs
  40c5e4:	fist   WORD PTR [esi+edi*4]
  40c5e7:	in     al,dx
  40c5e8:	sbb    BYTE PTR cs:0xd531875f,0x70
  40c5f0:	daa    
  40c5f1:	les    ecx,FWORD PTR ds:0xd7077ca0
  40c5f7:	out    dx,eax
  40c5f8:	sbb    ch,BYTE PTR ds:[eax+0x7becfe0a]
  40c5ff:	pop    ds
  40c600:	or     al,bl
  40c602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c603:	cdq    
  40c604:	loopne 0x40c602
  40c606:	sbb    DWORD PTR [eax-0x1251b42e],ecx
  40c60c:	sub    ecx,edx
  40c60e:	imul   edi,DWORD PTR [ebp+ebp*1+0x1a8a153f],0xffffffdc
  40c616:	rol    BYTE PTR [eax-0x15515d51],cl
  40c61c:	repz pop esp
  40c61e:	loope  0x40c602
  40c620:	aam    0x86
  40c622:	leave  
  40c623:	and    edi,eax
  40c625:	add    eax,0xc4d81f3b
  40c62a:	jnp    0x40c5c5
  40c62c:	loop   0x40c674
  40c62e:	add    edx,DWORD PTR [ecx+ecx*2-0x6d]
  40c632:	push   ebp
  40c633:	in     al,dx
  40c634:	pop    ds
  40c635:	inc    DWORD PTR [ebp+eiz*1-0x170d065b]
  40c63c:	(bad)  
  40c63e:	int3   
  40c63f:	mov    al,ds:0xd443679b
  40c644:	outs   dx,BYTE PTR ds:[esi]
  40c645:	cmp    edx,DWORD PTR [edx-0x6ff705fc]
  40c64b:	pop    ebx
  40c64c:	jg     0x40c69b
  40c64e:	imul   ah
  40c650:	mov    cl,0x51
  40c652:	stos   DWORD PTR es:[edi],eax
  40c653:	xchg   ebx,eax
  40c654:	in     eax,0x20
  40c656:	mov    edx,0x29ebcaa0
  40c65b:	sub    DWORD PTR [ebp+0x3b],eax
  40c65e:	dec    ecx
  40c65f:	sub    eax,0xb7a148c6
  40c664:	enter  0x7520,0xc
  40c668:	mov    esi,0x27b44292
  40c66d:	sar    DWORD PTR [ecx+0x7decaab4],0x4b
  40c674:	xor    DWORD PTR [ecx+0x37742d9c],ecx
  40c67a:	xchg   ebx,eax
  40c67b:	sbb    cl,bh
  40c67d:	inc    edi
  40c67e:	les    ebp,FWORD PTR [edi]
  40c680:	sub    BYTE PTR [edx-0x72],bl
  40c683:	push   ecx
  40c684:	or     ebp,DWORD PTR [esi+0x48]
  40c687:	xor    BYTE PTR [edx],0x3d
  40c68a:	(bad)  [edx-0x7f]
  40c68d:	scas   al,BYTE PTR es:[edi]
  40c68e:	sbb    ebp,edi
  40c690:	loop   0x40c658
  40c692:	ja     0x40c6d2
  40c694:	call   0x365bcd25
  40c699:	ins    BYTE PTR es:[edi],dx
  40c69a:	sub    al,0x71
  40c69c:	jl     0x40c6ba
  40c69e:	jbe    0x40c63a
  40c6a0:	sti    
  40c6a1:	ret    
  40c6a2:	leave  
  40c6a3:	daa    
  40c6a4:	hlt    
  40c6a5:	add    ecx,ecx
  40c6a7:	adc    al,0x35
  40c6a9:	push   0xffffff81
  40c6ab:	out    0xcd,al
  40c6ad:	mov    gs,esp
  40c6af:	sbb    eax,0x5e03f0ec
  40c6b4:	sbb    BYTE PTR [edx-0x47],cl
  40c6b7:	inc    ebx
  40c6b8:	push   eax
  40c6b9:	dec    esp
  40c6ba:	popf   
  40c6bb:	xor    al,0xea
  40c6bd:	add    esi,DWORD PTR [ebx-0x15]
  40c6c0:	mov    ch,al
  40c6c2:	pusha  
  40c6c3:	dec    ebp
  40c6c4:	jo     0x40c71e
  40c6c6:	cmp    eax,edx
  40c6c8:	fst    DWORD PTR [edi-0x4cc565f2]
  40c6ce:	(bad)  
  40c6cf:	dec    edx
  40c6d0:	jmp    0x40c707
  40c6d2:	pop    esp
  40c6d3:	push   eax
  40c6d4:	test   al,0xf
  40c6d6:	adc    DWORD PTR [ecx],edi
  40c6d8:	repz jmp 0x40c67c
  40c6db:	lahf   
  40c6dc:	int3   
  40c6dd:	rol    BYTE PTR [ebp-0xf942c27],0xb4
  40c6e4:	scas   eax,DWORD PTR es:[edi]
  40c6e5:	xchg   ecx,eax
  40c6e6:	es jae 0x40c737
  40c6e9:	mov    al,ds:0xf628b80c
  40c6ee:	repnz int 0x3e
  40c6f1:	lahf   
  40c6f2:	pop    edi
  40c6f3:	popa   
  40c6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6f5:	cmp    eax,edi
  40c6f7:	popa   
  40c6f8:	cld    
  40c6f9:	mov    dl,0x9e
  40c6fb:	mov    ebx,0xabbbf9b0
  40c700:	cld    
  40c701:	clc    
  40c702:	mov    al,ds:0x958c69b1
  40c707:	ret    
  40c708:	or     eax,0x6761232b
  40c70d:	loopne 0x40c6f0
  40c70f:	je     0x40c6e6
  40c711:	jle    0x40c757
  40c713:	push   cs
  40c714:	mov    bh,0x18
  40c716:	push   es
  40c717:	cwde   
  40c718:	fcmovbe st,st(2)
  40c71a:	sbb    BYTE PTR [edi],dh
  40c71c:	loopne 0x40c751
  40c71e:	jl     0x40c6f2
  40c720:	das    
  40c721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c722:	(bad)  
  40c723:	ficomp WORD PTR [edi+ecx*4+0x6f0a86a]
  40c72a:	add    ah,bl
  40c72c:	mov    edx,0xab8faeba
  40c731:	dec    ebp
  40c732:	cmp    al,bh
  40c734:	repnz shl DWORD PTR [ebp-0x45caf04f],0xa3
  40c73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73d:	test   eax,0x356488d3
  40c742:	push   0xffffffb7
  40c744:	mov    edx,0xf7c9335b
  40c749:	repnz mov ecx,0x465bdb5
  40c74f:	adc    BYTE PTR [edi+0x1f],ch
  40c752:	(bad)  
  40c753:	cli    
  40c754:	sbb    dl,BYTE PTR [ebp-0x36]
  40c757:	and    eax,0xfe833ff2
  40c75c:	les    ebp,FWORD PTR [esi]
  40c75e:	test   eax,0x3716a73f
  40c763:	mov    al,BYTE PTR [eax]
  40c765:	in     eax,dx
  40c766:	mov    al,0x6a
  40c768:	pusha  
  40c769:	add    BYTE PTR [esi-0xc8aface],ch
  40c76f:	hlt    
  40c770:	mov    bl,0x3e
  40c772:	sbb    esp,edx
  40c774:	hlt    
  40c775:	mov    cl,0x3c
  40c777:	mov    DWORD PTR ds:0xc1e286fa,esi
  40c77d:	mov    ebx,ecx
  40c77f:	mov    eax,ds:0xe77eda2
  40c784:	push   eax
  40c785:	in     eax,0x7
  40c787:	xor    esi,esi
  40c789:	push   ss
  40c78a:	xchg   edx,edx
  40c78c:	push   ds
  40c78d:	xchg   BYTE PTR [ecx],ah
  40c78f:	cld    
  40c790:	cmp    ah,ah
  40c792:	rol    DWORD PTR [esi],cl
  40c794:	and    esp,DWORD PTR [eax+eax*8]
  40c797:	mov    cl,0x74
  40c799:	sbb    eax,0x90ac2b9b
  40c79e:	cmc    
  40c79f:	jbe    0x40c81c
  40c7a1:	je     0x40c74a
  40c7a3:	cmp    DWORD PTR [esi+0x3fa5e17b],ebx
  40c7a9:	push   cs
  40c7aa:	out    dx,al
  40c7ab:	aam    0x54
  40c7ad:	(bad)  
  40c7ae:	iret   
  40c7af:	sbb    DWORD PTR [eax-0x47],eax
  40c7b2:	mov    ecx,0x440cee7
  40c7b7:	xchg   esi,eax
  40c7b8:	int3   
  40c7b9:	sub    al,0x3c
  40c7bb:	sbb    al,0xf1
  40c7bd:	inc    edx
  40c7be:	mov    al,0x1a
  40c7c0:	xchg   esi,eax
  40c7c1:	adc    bl,0xef
  40c7c4:	jp     0x40c803
  40c7c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7c7:	stos   BYTE PTR es:[edi],al
  40c7c8:	pop    ss
  40c7c9:	stos   DWORD PTR es:[edi],eax
  40c7ca:	or     BYTE PTR [edx+0xfecfeb],bh
  40c7d0:	mul    BYTE PTR [edi-0x1b]
  40c7d3:	(bad)  
  40c7d4:	imul   edx,DWORD PTR [edi+0x37],0xf6d97cc
  40c7db:	(bad)  
  40c7dc:	outs   dx,BYTE PTR ds:[esi]
  40c7dd:	inc    edi
  40c7de:	rcpps  xmm6,XMMWORD PTR [edx]
  40c7e1:	sub    eax,0x2e93a01d
  40c7e6:	pusha  
  40c7e7:	lea    edx,ds:0xaeff8318
  40c7ed:	dec    esi
  40c7ee:	push   edi
  40c7ef:	mov    DWORD PTR [edx+0x4ff581cb],esi
  40c7f5:	and    BYTE PTR [edx],cl
  40c7f7:	pushf  
  40c7f8:	popa   
  40c7f9:	(bad)  
  40c7fa:	mov    ecx,0x4633d465
  40c7ff:	pop    ss
  40c800:	sar    cl,cl
  40c802:	push   edi
  40c803:	ins    DWORD PTR es:[edi],dx
  40c804:	call   0x66a2324e
  40c809:	mov    cl,0xeb
  40c80b:	jmp    0x40c791
  40c80d:	loopne 0x40c7ad
  40c80f:	pop    ecx
  40c810:	scas   al,BYTE PTR es:[edi]
  40c811:	sub    DWORD PTR [edi],eax
  40c813:	sti    
  40c814:	and    DWORD PTR [edi],esi
  40c816:	add    DWORD PTR [ebx+eiz*1-0x5d],ebx
  40c81a:	mov    ds:0xb0136e40,eax
  40c81f:	into   
  40c820:	int3   
  40c821:	ins    BYTE PTR es:[edi],dx
  40c822:	mov    ah,0xe5
  40c824:	push   edx
  40c825:	push   edi
  40c826:	fs aaa 
  40c828:	pop    esi
  40c829:	shl    BYTE PTR [edi+0xc],1
  40c82c:	mov    al,ds:0x32939676
  40c831:	imul   ecx,ebp,0x52
  40c834:	sti    
  40c835:	and    BYTE PTR [ebp-0x6b],dl
  40c838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c839:	daa    
  40c83a:	cmp    al,0x11
  40c83c:	sub    DWORD PTR [esi+0x39dbf633],edx
  40c842:	mov    eax,ds:0x2f29f007
  40c847:	jns    0x40c82a
  40c849:	mov    ebp,0x745423a4
  40c84e:	adc    al,0x5e
  40c850:	(bad)  
  40c851:	mov    DWORD PTR ds:0x90ece396,ecx
  40c857:	outs   dx,DWORD PTR ds:[esi]
  40c858:	adc    al,0xa2
  40c85a:	fs xor al,0xf3
  40c85d:	add    bh,al
  40c85f:	gs inc edi
  40c861:	cmp    al,0xb0
  40c863:	xlat   BYTE PTR ds:[ebx]
  40c864:	jno    0x40c8be
  40c866:	pop    edi
  40c867:	in     al,0x15
  40c869:	ja     0x40c851
  40c86b:	(bad)  
  40c86c:	sar    edi,cl
  40c86e:	inc    ebp
  40c86f:	add    edi,DWORD PTR [ecx-0x16b36a1f]
  40c875:	retf   
  40c876:	popf   
  40c877:	std    
  40c878:	jmp    0x40c832
  40c87a:	inc    edi
  40c87b:	mov    ebp,DWORD PTR [edi-0x3a26c68e]
  40c881:	xor    eax,0x2ba48b8
  40c886:	mov    bl,0xe
  40c888:	lds    edx,FWORD PTR ss:[ecx]
  40c88b:	(bad)  
  40c88c:	cmp    al,0x49
  40c88e:	out    0x72,al
  40c890:	mov    bh,0x67
  40c892:	add    BYTE PTR [ebx],dl
  40c894:	xchg   edi,eax
  40c895:	fild   WORD PTR [edi+0x778de03d]
  40c89b:	ins    DWORD PTR es:[edi],dx
  40c89c:	mov    bh,0x6c
  40c89e:	and    bl,BYTE PTR [eax+0x7ffbac13]
  40c8a4:	mov    WORD PTR [esi+0x78],es
  40c8a7:	mov    edi,0xb4a66d97
  40c8ac:	rcr    dh,0xa3
  40c8af:	mov    eax,ds:0xba5b944c
  40c8b4:	adc    DWORD PTR [esi-0x6d],edi
  40c8b7:	jle    0x40c927
  40c8b9:	mov    dl,0x13
  40c8bb:	stos   BYTE PTR es:[edi],al
  40c8bc:	dec    esp
  40c8bd:	sub    edi,ebp
  40c8bf:	enter  0x5960,0x67
  40c8c3:	fist   DWORD PTR [eax-0x4c]
  40c8c6:	inc    ecx
  40c8c7:	push   cs
  40c8c8:	jns    0x40c8c6
  40c8ca:	stos   DWORD PTR es:[edi],eax
  40c8cb:	xchg   edx,eax
  40c8cc:	jp     0x40c8b9
  40c8ce:	addr16 or edi,esi
  40c8d1:	or     BYTE PTR [esi+0x43],bl
  40c8d4:	xor    al,bh
  40c8d6:	lahf   
  40c8d7:	mov    WORD PTR [esi+0x17c617fe],ds
  40c8dd:	bound  ebp,QWORD PTR [edx-0x2c]
  40c8e0:	ss ins BYTE PTR es:[edi],dx
  40c8e2:	inc    esi
  40c8e3:	repz enter 0x8f7,0x74
  40c8e8:	in     eax,dx
  40c8e9:	sbb    edi,ebx
  40c8eb:	imul   edx,DWORD PTR [edx],0xac4a2b44
  40c8f1:	cmp    BYTE PTR [ecx+0x62],al
  40c8f4:	nop
  40c8f5:	imul   ebx,DWORD PTR [edi+0x3c93d478],0x702939aa
  40c8ff:	mov    ds:0xc22a42e9,al
  40c904:	xchg   ebp,eax
  40c905:	out    0xf8,eax
  40c907:	pop    esi
  40c908:	sbb    DWORD PTR [ecx],0xffffffac
  40c90b:	pusha  
  40c90c:	int3   
  40c90d:	pop    esi
  40c90e:	pop    ebp
  40c90f:	rol    esi,1
  40c911:	sbb    al,0x47
  40c913:	pop    es
  40c914:	jns    0x40c92c
  40c916:	shl    DWORD PTR [ebp+0x5448b88d],1
  40c91c:	push   ds
  40c91d:	pop    eax
  40c91e:	mov    eax,ds:0xafc57d91
  40c923:	sbb    DWORD PTR [edx+ebx*1-0x5168369f],edi
  40c92a:	pop    ss
  40c92b:	inc    ecx
  40c92c:	in     eax,dx
  40c92d:	test   eax,0xd9676df1
  40c932:	jmp    0x40c912
  40c934:	sbb    ah,BYTE PTR [esi-0x37db12da]
  40c93a:	retf   
  40c93b:	add    al,0xb3
  40c93d:	retf   
  40c93e:	popa   
  40c93f:	inc    eax
  40c940:	retf   0xbba3
  40c943:	inc    esi
  40c944:	ret    0x3204
  40c947:	call   DWORD PTR [esi-0x5517a483]
  40c94d:	mov    dh,BYTE PTR ds:0x2fac353f
  40c953:	out    dx,eax
  40c954:	mov    edi,0xf7796797
  40c959:	lods   eax,DWORD PTR ds:[esi]
  40c95a:	xor    bh,BYTE PTR [eax-0x31fbcf6e]
  40c960:	mov    DWORD PTR [esp+edx*1],edi
  40c963:	or     dh,BYTE PTR [ecx+0x5f]
  40c966:	dec    eax
  40c967:	mov    al,ds:0xe6a4ad1e
  40c96c:	add    esi,DWORD PTR [edx]
  40c96e:	daa    
  40c96f:	cmp    DWORD PTR [ebx+eax*2+0x6c],edi
  40c973:	jmp    0x40c9cd
  40c975:	jns    0x40c91c
  40c977:	and    ebp,DWORD PTR [edx-0x37]
  40c97a:	mov    eax,ds:0x797e9130
  40c97f:	cdq    
  40c980:	nop
  40c981:	add    bh,BYTE PTR [edi]
  40c983:	adc    edi,ebx
  40c985:	nop
  40c986:	test   BYTE PTR [eax],dh
  40c988:	loopne 0x40c93c
  40c98a:	cmp    eax,0x34ca2b39
  40c98f:	test   eax,0x9e5da98
  40c994:	adc    al,0xa9
  40c996:	mov    dl,ah
  40c998:	mov    WORD PTR [eax-0x39cbb850],ds
  40c99e:	sub    al,dl
  40c9a0:	pop    esi
  40c9a1:	and    DWORD PTR [esp+eiz*2-0xf6f7144],esp
  40c9a8:	xchg   edi,eax
  40c9a9:	push   ebx
  40c9aa:	adc    al,0xa9
  40c9ac:	xor    ebp,esi
  40c9ae:	mov    bh,0xeb
  40c9b0:	xchg   esi,eax
  40c9b1:	jge    0x40c9d5
  40c9b3:	mov    ah,0xf0
  40c9b5:	mov    edi,0xafa5ee2d
  40c9ba:	imul   edi,DWORD PTR [ebx+0x5d82e38e],0x2e
  40c9c1:	outs   dx,BYTE PTR ds:[esi]
  40c9c2:	aas    
  40c9c3:	xor    ebp,eax
  40c9c5:	jg     0x40c99d
  40c9c7:	mov    ecx,0x37ec82d
  40c9cc:	pop    ecx
  40c9cd:	iret   
  40c9ce:	jnp    0x40c9f3
  40c9d0:	pop    esp
  40c9d1:	inc    esp
  40c9d2:	bound  ebp,QWORD PTR [ebp+0x67]
  40c9d5:	std    
  40c9d6:	mov    al,ds:0xcb4ed5e1
  40c9db:	jnp    0x40ca3b
  40c9dd:	mov    ebp,0x4710feeb
  40c9e2:	repnz sub al,0x75
  40c9e5:	ins    DWORD PTR es:[edi],dx
  40c9e6:	nop
  40c9e7:	mov    bh,0x6
  40c9e9:	add    eax,0xe9a16979
  40c9ef:	mov    cl,0xa5
  40c9f1:	out    0xba,al
  40c9f3:	int3   
  40c9f4:	not    DWORD PTR [ebx-0x1fcad2d6]
  40c9fa:	fadd   QWORD PTR [edx-0x18]
  40c9fd:	inc    esp
  40c9fe:	js     0x40ca72
  40ca00:	lods   al,BYTE PTR ds:[esi]
  40ca01:	push   esi
  40ca02:	fwait
  40ca03:	push   eax
  40ca04:	pop    ss
  40ca05:	aas    
  40ca06:	add    eax,0xc7c0527e
  40ca0b:	add    eax,0x82e6fb4e
  40ca10:	or     al,0x92
  40ca12:	inc    esp
  40ca13:	mov    BYTE PTR [ebx],0x66
  40ca16:	lds    ecx,FWORD PTR [ecx+0x20]
  40ca19:	out    dx,al
  40ca1a:	sbb    al,0x64
  40ca1c:	popf   
  40ca1d:	aas    
  40ca1e:	jns    0x40ca7e
  40ca20:	ja     0x40ca7f
  40ca22:	(bad)
  40ca25:	mov    ah,0xa7
  40ca27:	fs jmp 0x4ea26c0d
  40ca2d:	lds    esp,FWORD PTR [edx]
  40ca2f:	nop
  40ca30:	mov    ecx,0x494e5084
  40ca35:	out    0xe8,eax
  40ca37:	dec    ebx
  40ca38:	jne    0x40ca72
  40ca3a:	xor    DWORD PTR [esi+0x60f74b9b],esi
  40ca40:	daa    
  40ca41:	fbld   TBYTE PTR [ecx]
  40ca43:	mov    ds:0x9e4c63e8,eax
  40ca48:	inc    eax
  40ca49:	xlat   BYTE PTR ds:[ebx]
  40ca4a:	mov    dh,0x40
  40ca4c:	sahf   
  40ca4d:	and    edi,esi
  40ca4f:	or     eax,0xbf5208e
  40ca54:	dec    ebp
  40ca55:	push   edx
  40ca56:	les    edx,FWORD PTR [ecx]
  40ca58:	fstp   DWORD PTR ds:0xf136bcb2
  40ca5e:	hlt    
  40ca5f:	and    BYTE PTR [edi-0x361547e2],ah
  40ca65:	das    
  40ca66:	cld    
  40ca67:	fwait
  40ca68:	inc    edi
  40ca69:	mov    al,ds:0xd65562ed
  40ca6e:	mov    ds:0x141cf0c6,al
  40ca73:	dec    bl
  40ca75:	daa    
  40ca76:	rol    BYTE PTR [edi+edi*4+0x192bda4a],1
  40ca7d:	pop    ss
  40ca7e:	xchg   BYTE PTR [eax],dh
  40ca80:	push   ebp
  40ca81:	inc    ebp
  40ca82:	(bad)  [eax]
  40ca84:	dec    ebx
  40ca85:	fwait
  40ca86:	or     eax,0xf2da0f45
  40ca8b:	jmp    0x2e5096de
  40ca90:	in     al,dx
  40ca91:	scas   al,BYTE PTR es:[edi]
  40ca92:	cmp    BYTE PTR [edi],dh
  40ca94:	adc    ecx,edi
  40ca96:	push   esp
  40ca97:	rcl    DWORD PTR [esi+0xf82e940],0x4a
  40ca9e:	xchg   sp,ax
  40caa0:	rcl    DWORD PTR [eax],1
  40caa2:	jne    0x40ca67
  40caa4:	adc    ebx,DWORD PTR ds:0x6d160ffb
  40caaa:	jp     0x40cac9
  40caac:	dec    esi
  40caad:	pushf  
  40caae:	xlat   BYTE PTR ds:[ebx]
  40caaf:	jge    0x40ca37
  40cab1:	pop    edi
  40cab2:	dec    ebp
  40cab3:	sahf   
  40cab4:	aas    
  40cab5:	pop    esi
  40cab6:	push   edx
  40cab7:	lods   eax,DWORD PTR ds:[esi]
  40cab8:	lahf   
  40cab9:	mov    DWORD PTR [edi],ebp
  40cabb:	xchg   edi,eax
  40cabc:	sbb    BYTE PTR [edx+0x2eca08ad],ch
  40cac2:	xor    BYTE PTR [edi+edi*1+0xb],bl
  40cac6:	cmp    BYTE PTR [edx-0x5d],bh
  40cac9:	push   esp
  40caca:	ret    
  40cacb:	sbb    eax,0x72b3ba3
  40cad0:	test   edx,esi
  40cad2:	xor    eax,0x1cb80cd
  40cad7:	jne    0x40caca
  40cad9:	aam    0x5b
  40cadb:	mov    eax,ds:0x1964f12d
  40cae0:	repnz and DWORD PTR ds:0x26e794f7,ecx
  40cae7:	aaa    
  40cae8:	int    0x65
  40caea:	cld    
  40caeb:	push   ds
  40caec:	and    ah,BYTE PTR [eax-0xb]
  40caef:	loope  0x40cb0e
  40caf1:	jno    0x40ca8d
  40caf3:	mov    ds,WORD PTR [ebx]
  40caf5:	mov    edx,0x612a17fb
  40cafa:	arpl   WORD PTR [ebp-0x2fba34e6],bx
  40cb00:	cs inc esi
  40cb02:	rol    DWORD PTR [edx+ecx*8+0x5f7bbb2f],cl
  40cb09:	mov    ds:0xd0605c3a,eax
  40cb0e:	jle    0x40caa4
  40cb10:	stos   BYTE PTR es:[edi],al
  40cb11:	jns    0x40cb18
  40cb13:	or     DWORD PTR [edx-0x21f7c06a],edi
  40cb19:	jp     0x40cb5c
  40cb1b:	cmp    al,0x89
  40cb1d:	jno    0x40cacf
  40cb1f:	mov    ds:0xa9064cf0,eax
  40cb24:	jne    0x40cad7
  40cb26:	in     eax,dx
  40cb27:	fisub  WORD PTR [ecx+edi*8-0xd]
  40cb2b:	int    0xc6
  40cb2d:	mov    ebp,0x589caba5
  40cb32:	aas    
  40cb33:	inc    edi
  40cb34:	repnz and esi,DWORD PTR [ebx+edi*2-0x3e]
  40cb39:	daa    
  40cb3a:	ficomp DWORD PTR [ecx-0x628403c0]
  40cb40:	in     al,dx
  40cb41:	jmp    0xcd5a:0x1f775052
  40cb48:	dec    ebp
  40cb49:	jo     0x40cb08
  40cb4b:	pusha  
  40cb4c:	lahf   
  40cb4d:	out    0xe0,al
  40cb4f:	imul   ebx,DWORD PTR [edx+0x52497b24],0x550eb9eb
  40cb59:	adc    al,0xe7
  40cb5b:	in     eax,0x82
  40cb5d:	pop    ebp
  40cb5e:	push   edi
  40cb5f:	adc    ecx,ebp
  40cb61:	mov    ds:0x310b1d06,eax
  40cb66:	pop    edx
  40cb67:	xor    edx,DWORD PTR [eax]
  40cb69:	and    ah,bl
  40cb6b:	fimul  WORD PTR [ebx+0x28b2cdb7]
  40cb71:	sub    bh,dl
  40cb73:	scas   al,BYTE PTR es:[edi]
  40cb74:	add    BYTE PTR [eax-0x65aebc56],dh
  40cb7a:	adc    ebx,DWORD PTR [esi+eiz*8-0x76]
  40cb7e:	cs jns 0x40cba4
  40cb81:	or     esi,ecx
  40cb83:	sbb    bl,BYTE PTR [ecx+0x7c]
  40cb86:	or     edx,DWORD PTR [ebp+0x4b]
  40cb89:	inc    edx
  40cb8a:	int    0x2f
  40cb8c:	je     0x40cb33
  40cb8e:	leave  
  40cb8f:	dec    ebx
  40cb90:	cli    
  40cb91:	mov    WORD PTR [esp+ebx*4+0x6c8ee7c4],es
  40cb98:	pop    ds
  40cb99:	arpl   WORD PTR [ebx],si
  40cb9b:	rol    DWORD PTR [ebp-0x31],cl
  40cb9e:	dec    esi
  40cb9f:	xchg   ecx,eax
  40cba0:	inc    esi
  40cba1:	popa   
  40cba2:	fs mov ebp,0x111b1826
  40cba8:	ret    0x49cc
  40cbab:	std    
  40cbac:	inc    esp
  40cbad:	cmp    eax,0xc83ac6d8
  40cbb2:	in     eax,dx
  40cbb3:	mov    eax,ds:0xc5f246e3
  40cbb8:	int3   
  40cbb9:	stos   DWORD PTR es:[edi],eax
  40cbba:	stos   BYTE PTR es:[edi],al
  40cbbb:	dec    esp
  40cbbc:	mov    esp,0x90de6b3b
  40cbc1:	out    0xee,al
  40cbc3:	mov    eax,0x7e923f32
  40cbc8:	or     ebp,DWORD PTR [ecx-0x6c]
  40cbcb:	xlat   BYTE PTR ds:[ebx]
  40cbcc:	in     eax,dx
  40cbcd:	lds    ecx,FWORD PTR [eax+0x248864e6]
  40cbd3:	xor    eax,0x3729f004
  40cbd8:	mov    ebx,0xbb48f1eb
  40cbdd:	mov    cl,BYTE PTR [eax+eax*1+0x354be7c4]
  40cbe4:	pop    edi
  40cbe5:	sar    DWORD PTR [edx],0x3a
  40cbe8:	ins    BYTE PTR es:[edi],dx
  40cbe9:	sub    DWORD PTR [ecx+0xf],ebp
  40cbec:	xchg   DWORD PTR [esp+edi*1+0x73579422],ebx
  40cbf3:	push   ebx
  40cbf4:	xor    DWORD PTR [ebx+ecx*2],ebp
  40cbf7:	lods   eax,DWORD PTR ds:[esi]
  40cbf8:	leave  
  40cbf9:	loope  0x40cc21
  40cbfb:	xchg   esp,eax
  40cbfc:	cmp    eax,0x3a862887
  40cc01:	cwde   
  40cc02:	mov    BYTE PTR [edx+0x3],ch
  40cc05:	addr16 test esi,ecx
  40cc08:	aas    
  40cc09:	daa    
  40cc0a:	daa    
  40cc0b:	sbb    al,0xce
  40cc0d:	out    0x8f,eax
  40cc0f:	pop    eax
  40cc10:	jb     0x40cbb4
  40cc12:	sub    al,0xe0
  40cc14:	mov    ch,0xe2
  40cc16:	jmp    0x4f8f:0xa212e29c
  40cc1d:	fs out dx,al
  40cc1f:	pop    esi
  40cc20:	test   al,0x7a
  40cc22:	push   es
  40cc23:	retf   0xfd94
  40cc26:	repnz push cs
  40cc28:	adc    DWORD PTR [ebp-0x56a2bae6],esp
  40cc2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc2f:	jmp    0x40cc44
  40cc31:	xor    al,0xcb
  40cc33:	inc    edi
  40cc34:	and    cl,BYTE PTR ds:0x5e42e1e7
  40cc3a:	ja     0x40cc47
  40cc3c:	ja     0x40cc51
  40cc3e:	xor    al,bl
  40cc40:	inc    esp
  40cc41:	xor    ebx,DWORD PTR [eax-0x54]
  40cc44:	enter  0x2608,0xc4
  40cc48:	pop    eax
  40cc49:	repz xlat BYTE PTR ds:[ebx]
  40cc4b:	out    dx,eax
  40cc4c:	push   ecx
  40cc4d:	mov    cl,0x77
  40cc4f:	xor    eax,0xcd383d4f
  40cc54:	adc    DWORD PTR [edi-0x5c],ebp
  40cc57:	cmp    esp,DWORD PTR [esi+ebp*4-0x3aee949a]
  40cc5e:	xchg   BYTE PTR [ebx+0x13],ah
  40cc61:	(bad)  
  40cc62:	xchg   edx,eax
  40cc63:	inc    ebp
  40cc64:	cmp    BYTE PTR [eax+esi*1-0x37],dl
  40cc68:	inc    ebx
  40cc69:	dec    ebp
  40cc6a:	cld    
  40cc6b:	call   0x54324ed9
  40cc70:	call   DWORD PTR [eax-0x6844b82b]
  40cc76:	cwde   
  40cc77:	in     al,dx
  40cc78:	shr    BYTE PTR ds:0xdf317264,0x8b
  40cc7f:	call   0x7e252cf4
  40cc84:	mov    eax,0x36107ff6
  40cc89:	xor    BYTE PTR [ebp+0x17775ba1],bl
  40cc8f:	adc    dl,BYTE PTR [edi+0x51]
  40cc92:	cli    
  40cc93:	pop    ecx
  40cc94:	pop    esp
  40cc95:	or     BYTE PTR [eax],0x52
  40cc98:	ins    BYTE PTR es:[edi],dx
  40cc99:	mov    bh,0x16
  40cc9b:	jl     0x40cc94
  40cc9d:	xchg   ebp,eax
  40cc9e:	jge    0x40ccd9
  40cca0:	sti    
  40cca1:	jne    0x40ccd1
  40cca3:	mov    bh,0x9b
  40cca5:	call   0xf4af481b
  40ccaa:	cli    
  40ccab:	mov    ebx,0x4fded0ac
  40ccb0:	in     ax,0x4d
  40ccb3:	cmp    BYTE PTR [ecx],0xba
  40ccb6:	adc    al,0x9e
  40ccb8:	push   ebx
  40ccb9:	xchg   esp,eax
  40ccba:	jb     0x40ccd4
  40ccbc:	imul   edi,DWORD PTR [edx-0x25],0x28fe36c7
  40ccc3:	jo     0x40cd00
  40ccc5:	jb     0x40ccbf
  40ccc7:	adc    cl,BYTE PTR [eax]
  40ccc9:	xlat   BYTE PTR ds:[ebx]
  40ccca:	lds    ecx,FWORD PTR [edi+ecx*2+0x52783c89]
  40ccd1:	rcr    DWORD PTR [ebx+0x6b],cl
  40ccd4:	jle    0x40cd3a
  40ccd6:	xchg   esp,eax
  40ccd7:	lods   eax,DWORD PTR ds:[esi]
  40ccd8:	out    dx,eax
  40ccd9:	push   cs
  40ccda:	ds and dh,dh
  40ccdd:	(bad)  
  40ccde:	push   ebp
  40ccdf:	jg     0x40cd41
  40cce1:	add    BYTE PTR [edx-0x37],dh
  40cce4:	pop    edi
  40cce5:	pop    ebx
  40cce6:	cmp    edi,DWORD PTR [edi-0x54a73f39]
  40ccec:	mov    dl,dl
  40ccee:	imul   edx,DWORD PTR [esi],0x9b2f1705
  40ccf4:	mov    ebx,0xd91492e8
  40ccf9:	cmp    ecx,DWORD PTR [esi+eiz*4]
  40ccfc:	mov    eax,ds:0x19238633
  40cd01:	mov    ds:0x3f82978,al
  40cd06:	sbb    esi,DWORD PTR [edi-0x4b39bc73]
  40cd0c:	xchg   ebp,eax
  40cd0d:	xor    BYTE PTR [esp+ebp*8],cl
  40cd10:	stos   DWORD PTR es:[edi],eax
  40cd11:	cdq    
  40cd12:	jo     0x40cd0b
  40cd14:	lock jle 0x40cd21
  40cd17:	and    eax,0x2faefc6f
  40cd1c:	sbb    BYTE PTR [ebp-0x7e],0xe8
  40cd20:	call   0xc09d:0x6fc6616f
  40cd27:	jle    0x40cd79
  40cd29:	cmp    esi,edx
  40cd2b:	sahf   
  40cd2c:	test   DWORD PTR [edi],edi
  40cd2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd2f:	inc    esp
  40cd30:	mov    edi,DWORD PTR [edx-0x71]
  40cd33:	jno    0x40cd0a
  40cd35:	shl    dh,0x11
  40cd38:	xor    BYTE PTR ds:0x8f9d712d,0x3d
  40cd3f:	mov    eax,ds:0xc1ca2e85
  40cd44:	dec    ebx
  40cd45:	test   eax,0x18d58c15
  40cd4a:	inc    ebp
  40cd4b:	dec    ebp
  40cd4c:	jmp    0xd6dbde12
  40cd51:	sub    ebx,edx
  40cd53:	arpl   WORD PTR [edx-0x1],bp
  40cd56:	or     al,0x8
  40cd58:	lods   al,BYTE PTR ds:[esi]
  40cd59:	ficomp DWORD PTR [ebx-0x751054d9]
  40cd5f:	test   eax,edi
  40cd61:	retf   
  40cd62:	and    ebx,DWORD PTR [esi+0x10]
  40cd65:	imul   esp,DWORD PTR [ebx+0x365684c],0xe6ae2063
  40cd6f:	push   edi
  40cd70:	leave  
  40cd71:	pop    esi
  40cd72:	shl    BYTE PTR [esi],0x55
  40cd75:	xor    ebx,DWORD PTR [ecx+0x41]
  40cd78:	xchg   esi,eax
  40cd79:	loop   0x40cd12
  40cd7b:	xchg   esi,eax
  40cd7c:	xor    DWORD PTR [ebx],edx
  40cd7e:	mov    dl,0x5c
  40cd80:	adc    ch,BYTE PTR [edi]
  40cd82:	cdq    
  40cd83:	inc    edi
  40cd84:	cmc    
  40cd85:	and    ecx,DWORD PTR [ecx]
  40cd87:	add    ebx,DWORD PTR [esi+0x2ca61510]
  40cd8d:	jae    0x40cda6
  40cd8f:	jge    0x40cd36
  40cd91:	push   0xffffffe6
  40cd93:	test   edi,0x570a43f3
  40cd99:	aas    
  40cd9a:	mov    esi,es
  40cd9c:	fisub  WORD PTR [ecx+ecx*8]
  40cd9f:	jb     0x614750e1
  40cda5:	cmp    BYTE PTR [edi-0x73],ch
  40cda8:	xchg   ecx,eax
  40cda9:	shl    DWORD PTR [ebx],cl
  40cdab:	ja     0x40ce13
  40cdad:	retf   0xc0b5
  40cdb0:	dec    ecx
  40cdb1:	xchg   edx,eax
  40cdb2:	xchg   esp,eax
  40cdb3:	push   ds
  40cdb4:	xor    al,0xfb
  40cdb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdb7:	mov    esp,0x3fb80ced
  40cdbc:	jno    0x40cde1
  40cdbe:	mov    ah,0x75
  40cdc0:	or     DWORD PTR [ecx+0x53d170e4],eax
  40cdc6:	jae    0x40cd7e
  40cdc8:	(bad)  
  40cdc9:	push   0x66
  40cdcb:	add    al,0x4a
  40cdcd:	outs   dx,DWORD PTR ds:[esi]
  40cdce:	stos   DWORD PTR es:[edi],eax
  40cdcf:	fwait
  40cdd0:	or     BYTE PTR [edx],dh
  40cdd2:	enter  0xa242,0x7
  40cdd6:	or     al,0x5a
  40cdd8:	mov    fs,edi
  40cdda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cddb:	loope  0x40cd97
  40cddd:	cwde   
  40cdde:	mov    BYTE PTR [edi-0x53],bl
  40cde1:	sbb    ch,BYTE PTR [edi+0x3472ee15]
  40cde7:	dec    ebx
  40cde8:	jb     0x40ce0f
  40cdea:	xor    eax,0x4234770f
  40cdef:	in     al,dx
  40cdf0:	cmp    al,0xd6
  40cdf2:	jbe    0x40ce15
  40cdf4:	and    eax,0xd272cdaa
  40cdf9:	retf   0x5397
  40cdfc:	push   ds
  40cdfd:	into   
  40cdfe:	cwde   
  40cdff:	pusha  
  40ce00:	jne    0x40ce0c
  40ce02:	adc    BYTE PTR [ecx+0x55630b6c],dl
  40ce08:	lahf   
  40ce09:	push   edi
  40ce0a:	(bad)  
  40ce0b:	aam    0xe9
  40ce0d:	retf   
  40ce0e:	mov    esi,0xa8650b77
  40ce13:	mov    ds:0x35d6e1ec,eax
  40ce18:	sbb    ebp,edx
  40ce1a:	dec    ebx
  40ce1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce1c:	cli    
  40ce1d:	scas   al,BYTE PTR es:[edi]
  40ce1e:	xchg   esp,eax
  40ce1f:	fs push eax
  40ce21:	outs   dx,DWORD PTR ds:[esi]
  40ce22:	sbb    eax,0x444b607
  40ce27:	pop    ebx
  40ce28:	fcmovnbe st,st(1)
  40ce2a:	rcr    DWORD PTR [eax],cl
  40ce2c:	daa    
  40ce2d:	and    dh,BYTE PTR [ecx+0x73607059]
  40ce33:	ror    BYTE PTR [ebx-0x28],cl
  40ce36:	out    0xee,al
  40ce38:	sub    cl,cl
  40ce3a:	sub    ah,BYTE PTR [edx+ecx*8-0x65]
  40ce3e:	cmp    eax,0x8c948d9
  40ce43:	xor    eax,0x116176
  40ce48:	sub    dl,0xc
  40ce4b:	push   0x9
  40ce4d:	test   BYTE PTR [ecx],ah
  40ce4f:	mov    ecx,0x2e2ab7a8
  40ce54:	inc    edi
  40ce55:	dec    esp
  40ce56:	jecxz  0x40ce4d
  40ce58:	out    dx,eax
  40ce59:	icebp  
  40ce5a:	add    dl,BYTE PTR ds:0x88729d1c
  40ce60:	jle    0x40ce45
  40ce62:	call   0x57964546
  40ce67:	jns    0x40cec5
  40ce69:	mov    ds:0xb8ffaa2f,al
  40ce6e:	rol    BYTE PTR [eax+ebx*4-0x3b71bd3f],1
  40ce75:	bound  esi,QWORD PTR [eax]
  40ce77:	lahf   
  40ce78:	out    0xed,eax
  40ce7a:	retf   0xbf8f
  40ce7d:	stc    
  40ce7e:	inc    ebx
  40ce7f:	sti    
  40ce80:	retf   0xaa18
  40ce83:	push   edx
  40ce84:	inc    edi
  40ce85:	mov    dh,0x6c
  40ce87:	pop    ebx
  40ce88:	mov    ecx,0x211ee976
  40ce8d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40ce8f:	nop
  40ce90:	sbb    DWORD PTR [ecx+ebx*2],esp
  40ce93:	mov    eax,0xade15325
  40ce98:	bound  eax,QWORD PTR [eax+ecx*2]
  40ce9b:	mov    WORD PTR [ebp+0x450acd91],ds
  40cea1:	mov    cl,0x45
  40cea3:	and    BYTE PTR [ecx+0x7c970de1],0x21
  40ceaa:	test   eax,edi
  40ceac:	xchg   ecx,eax
  40cead:	mov    bl,0x91
  40ceaf:	mov    ebx,0x266a1c28
  40ceb4:	les    eax,FWORD PTR [edx-0x22]
  40ceb7:	jnp    0x40ce5e
  40ceb9:	adc    bh,BYTE PTR [esi+0x42]
  40cebc:	pop    ds
  40cebd:	sti    
  40cebe:	ds ds cmp al,0x24
  40cec2:	cmp    eax,0xe66c7187
  40cec7:	sub    ecx,esp
  40cec9:	fiadd  WORD PTR [ebp-0x7200ca3e]
  40cecf:	add    BYTE PTR [edx],ch
  40ced1:	fcomp  QWORD PTR [edi]
  40ced3:	push   ss
  40ced4:	jns    0x40cee0
  40ced6:	mov    al,0xa0
  40ced8:	mov    al,ds:0x2c9fb121
  40cedd:	sbb    ecx,DWORD PTR [edi+eax*8+0x799501ae]
  40cee4:	mov    al,BYTE PTR [ebx+0x6450d487]
  40ceea:	add    BYTE PTR ds:0xff6aae35,dl
  40cef0:	aam    0xfd
  40cef2:	stos   BYTE PTR es:[edi],al
  40cef3:	mov    edi,0x1945de51
  40cef8:	shl    ah,0x5d
  40cefb:	mov    ah,0xb5
  40cefd:	out    dx,eax
  40cefe:	inc    esp
  40ceff:	jle    0x40cf5c
  40cf01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf03:	pop    ebp
  40cf04:	cs sbb eax,0x42497c9
  40cf0a:	mov    esi,0xd5b2d489
  40cf0f:	int3   
  40cf10:	add    bh,BYTE PTR ds:0xa63b1fd1
  40cf16:	scas   eax,DWORD PTR es:[edi]
  40cf17:	aaa    
  40cf18:	add    dh,BYTE PTR [ebx]
  40cf1a:	mov    ds:0x7b527772,al
  40cf1f:	sub    eax,0x4511bc43
  40cf24:	dec    eax
  40cf25:	arpl   WORD PTR [ebx-0x58],si
  40cf28:	pop    ebx
  40cf29:	jb     0x40cf85
  40cf2b:	out    dx,al
  40cf2c:	ins    DWORD PTR es:[edi],dx
  40cf2d:	mul    BYTE PTR [ecx+ebp*8-0x1d]
  40cf31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf32:	push   ecx
  40cf33:	inc    edi
  40cf34:	dec    ebp
  40cf35:	push   ss
  40cf36:	mov    ebx,0x47999da1
  40cf3b:	aas    
  40cf3c:	fidivr WORD PTR [edi-0xa]
  40cf3f:	aas    
  40cf40:	(bad)  
  40cf41:	xlat   BYTE PTR ds:[ebx]
  40cf42:	shr    DWORD PTR [ecx+ebx*4],cl
  40cf45:	pop    edi
  40cf46:	sub    eax,0x418be801
  40cf4b:	call   0x78b2:0xad6cd705
  40cf52:	xor    eax,0xf1d77f58
  40cf57:	sub    al,BYTE PTR [eax-0x29]
  40cf5a:	lahf   
  40cf5b:	jnp    0x40cf35
  40cf5d:	xchg   esp,eax
  40cf5e:	ror    esp,0x5a
  40cf61:	pop    eax
  40cf62:	fs cs xchg ebp,eax
  40cf65:	not    DWORD PTR [eax]
  40cf67:	fild   QWORD PTR [ebx+0x6b]
  40cf6a:	loopne 0x40cf62
  40cf6c:	mov    dh,0x86
  40cf6e:	fiadd  DWORD PTR [edi]
  40cf70:	mov    esp,0x8bd9aa22
  40cf75:	repnz data16 xor BYTE PTR [edx+0x52],cl
  40cf7a:	sub    al,0xb0
  40cf7c:	fwait
  40cf7d:	rol    BYTE PTR [edi+0xd2624e1],0xf9
  40cf84:	pop    esp
  40cf85:	xor    BYTE PTR [edi],dh
  40cf87:	nop
  40cf88:	std    
  40cf89:	sub    al,0xd9
  40cf8b:	imul   edi,DWORD PTR [edx-0x34],0xffffff9a
  40cf8f:	popf   
  40cf90:	jae    0x40d000
  40cf92:	lahf   
  40cf93:	xor    al,0x93
  40cf95:	mov    eax,ds:0x4471468
  40cf9a:	retf   0xe450
  40cf9d:	mov    ebp,0x1dc61df1
  40cfa2:	push   es
  40cfa3:	or     al,0x76
  40cfa5:	mov    ecx,0xd66789dd
  40cfaa:	or     DWORD PTR [ebx-0xd],esi
  40cfad:	and    DWORD PTR [ebp+0x6a],ecx
  40cfb0:	hlt    
  40cfb1:	mov    eax,ds:0xb88b7879
  40cfb6:	add    edx,DWORD PTR [edx]
  40cfb8:	jecxz  0x40cf49
  40cfba:	xor    ecx,DWORD PTR [ebp+esi*8-0x50efc114]
  40cfc1:	cmp    edi,edi
  40cfc3:	or     ch,BYTE PTR [ebx-0x6de5338c]
  40cfc9:	addr16 daa 
  40cfcb:	(bad)  
  40cfcc:	in     eax,dx
  40cfcd:	ja     0x40cfca
  40cfcf:	out    dx,al
  40cfd0:	stos   BYTE PTR es:[edi],al
  40cfd1:	and    eax,0x9283a272
  40cfd6:	pusha  
  40cfd7:	in     eax,dx
  40cfd8:	xlat   BYTE PTR ds:[ebx]
  40cfd9:	jns    0x40cfae
  40cfdb:	ds ret 
  40cfdd:	pop    edi
  40cfde:	repz jmp 0x40cfc4
  40cfe1:	add    esi,ecx
  40cfe3:	mov    ah,0x4a
  40cfe5:	ficomp DWORD PTR ds:0x72f9193c
  40cfeb:	adc    al,0xce
  40cfed:	lds    edi,FWORD PTR [ecx]
  40cfef:	dec    BYTE PTR [esi+0x524ad0d2]
  40cff5:	pop    eax
  40cff6:	out    0xf1,al
  40cff8:	test   DWORD PTR [ecx-0x6c],ebx
  40cffb:	sub    DWORD PTR [ecx-0x54],esp
  40cffe:	mov    dh,0x4b
  40d000:	inc    ecx
  40d001:	fs dec ecx
  40d003:	shl    DWORD PTR [ecx-0x11],1
  40d006:	push   edx
  40d007:	add    dh,BYTE PTR [edx]
  40d009:	and    eax,0xe6359446
  40d00e:	pusha  
  40d00f:	adc    eax,0x7fe1d01f
  40d014:	(bad)  
  40d015:	jno    0x40cf9a
  40d017:	cmp    DWORD PTR [esi+0x53091e08],esp
  40d01d:	ret    0x6885
  40d020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d021:	pop    ecx
  40d022:	div    ch
  40d024:	out    dx,al
  40d025:	outs   dx,BYTE PTR ds:[esi]
  40d026:	push   0x18
  40d028:	push   edi
  40d029:	xchg   ebp,eax
  40d02a:	adc    DWORD PTR [esi-0x62c10740],0x7d1bafe5
  40d034:	clc    
  40d035:	mov    WORD PTR [esi+ebx*8-0x7540bfdb],es
  40d03c:	lea    eax,[ebp+0x22]
  40d03f:	dec    esp
  40d040:	lods   al,BYTE PTR ds:[esi]
  40d041:	sub    ebp,DWORD PTR [edi+0x5599735c]
  40d047:	in     al,dx
  40d048:	sbb    al,0xfd
  40d04a:	sub    dh,BYTE PTR [edx]
  40d04c:	adc    ebp,DWORD PTR [eax]
  40d04e:	mov    es,WORD PTR [ecx+eax*1-0x24]
  40d052:	div    BYTE PTR [eax+0x2b911fc0]
  40d058:	lea    ecx,[esi-0x274bcc60]
  40d05e:	adc    eax,0xa953bcc4
  40d063:	push   edx
  40d064:	and    al,0x59
  40d066:	xor    edx,ebx
  40d068:	add    DWORD PTR [esi-0x53b931ce],esp
  40d06e:	sub    BYTE PTR [ecx],bl
  40d070:	sub    al,0x17
  40d072:	retf   0x844b
  40d075:	mov    es,esp
  40d077:	push   edx
  40d078:	push   ebx
  40d079:	mov    edx,0x27415382
  40d07e:	dec    esp
  40d07f:	jb     0x40d024
  40d081:	ins    BYTE PTR es:[edi],dx
  40d082:	mov    DWORD PTR [ebx],ebx
  40d084:	sbb    dl,BYTE PTR [eax-0x26]
  40d087:	sbb    ah,BYTE PTR [esi+0x12]
  40d08a:	xor    BYTE PTR [ebx],dl
  40d08c:	ins    DWORD PTR es:[edi],dx
  40d08d:	int3   
  40d08e:	stos   DWORD PTR es:[edi],eax
  40d08f:	pop    ebp
  40d090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d091:	imul   ax,WORD PTR [edx+0xecc628f],0x4e
  40d099:	jb     0x40d108
  40d09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d09c:	add    ch,BYTE PTR [bx+0x45f7]
  40d0a1:	ss (bad) 
  40d0a3:	mov    ch,0xc7
  40d0a5:	mov    ds:0x933c8087,al
  40d0aa:	lss    ecx,FWORD PTR [edx-0x42]
  40d0ae:	or     esp,DWORD PTR [esi+edx*1+0x1f]
  40d0b2:	out    dx,eax
  40d0b3:	in     eax,0xa6
  40d0b5:	(bad)  
  40d0b6:	mov    ds:0x2597526d,al
  40d0bb:	push   cs
  40d0bc:	sti    
  40d0bd:	leave  
  40d0be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0bf:	fisubr WORD PTR [edx-0x2fb9eaab]
  40d0c5:	mov    bh,0xb5
  40d0c7:	lea    ecx,ds:0xea3c72a8
  40d0cd:	(bad)  
  40d0ce:	pop    ecx
  40d0cf:	or     ebx,ebp
  40d0d1:	ret    0xdf56
  40d0d4:	cmp    eax,0x40333620
  40d0d9:	sbb    eax,0x2463d4cd
  40d0de:	mov    cl,0xa2
  40d0e0:	pusha  
  40d0e1:	cld    
  40d0e2:	jmp    0x409e:0x9182543b
  40d0e9:	adc    DWORD PTR [ebp-0x5c],edi
  40d0ec:	add    eax,0x73057028
  40d0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0f2:	retf   
  40d0f3:	jg     0x40d0a4
  40d0f5:	js     0x40d147
  40d0f7:	xchg   BYTE PTR [ebp+0x615726cc],cl
  40d0fd:	mov    ecx,0xfcc23f51
  40d102:	xchg   esi,eax
  40d103:	inc    esi
  40d104:	sbb    WORD PTR [esi+edx*1],cx
  40d108:	jl     0x40d171
  40d10a:	adc    cl,BYTE PTR [ecx+eax*2+0x290e7cfb]
  40d111:	dec    ebp
  40d112:	rcr    ah,cl
  40d114:	jecxz  0x40d179
  40d116:	adc    dl,al
  40d118:	xchg   edi,eax
  40d119:	pop    eax
  40d11a:	push   ebp
  40d11b:	xchg   edx,eax
  40d11c:	xchg   ebx,eax
  40d11d:	push   ebx
  40d11e:	test   ecx,ecx
  40d120:	pop    esp
  40d121:	sub    dh,BYTE PTR [ecx-0x6909cf85]
  40d127:	ss ror dh,1
  40d12a:	jo     0x40d0fc
  40d12c:	hlt    
  40d12d:	jge    0x40d1aa
  40d12f:	mov    al,ds:0x892fdd40
  40d134:	dec    esp
  40d135:	mov    edi,0x79d418ab
  40d13a:	pop    ss
  40d13b:	adc    esi,DWORD PTR [edx+0x3f]
  40d13e:	sbb    BYTE PTR [ebx+ecx*2-0x4],bh
  40d142:	inc    ebx
  40d143:	rol    DWORD PTR [edi],1
  40d145:	pop    ds
  40d146:	mov    al,ds:0x9548c114
  40d14b:	dec    ebp
  40d14c:	sub    al,0xfd
  40d14e:	mov    bh,0x6
  40d150:	scas   al,BYTE PTR es:[edi]
  40d151:	retf   0x6cf0
  40d154:	pop    esp
  40d155:	(bad)  
  40d156:	in     eax,0xc1
  40d158:	pop    ss
  40d159:	push   esi
  40d15a:	sub    al,0x77
  40d15c:	outs   dx,BYTE PTR ds:[esi]
  40d15d:	shr    ebx,1
  40d15f:	mov    dh,0x55
  40d161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d163:	adc    BYTE PTR ds:0x20328545,0x1d
  40d16a:	xor    bh,dh
  40d16c:	push   0xffffffc0
  40d16e:	jle    0x40d1c4
  40d170:	push   eax
  40d171:	cmp    BYTE PTR [edx],0xbd
  40d174:	into   
  40d175:	nop
  40d176:	cli    
  40d177:	mov    ds:0xe239e7df,eax
  40d17c:	inc    edx
  40d17d:	call   0xd325:0x6d572684
  40d184:	icebp  
  40d185:	jb     0x40d1a1
  40d187:	jns    0x40d193
  40d189:	lods   eax,DWORD PTR ds:[esi]
  40d18a:	xchg   BYTE PTR [eax],ch
  40d18c:	inc    ebp
  40d18d:	or     DWORD PTR [ecx+0x5e],ecx
  40d190:	push   ebx
  40d191:	mov    ebx,0x2ddc1076
  40d196:	out    0x72,eax
  40d198:	sbb    ecx,ebx
  40d19a:	test   BYTE PTR [eax+edi*2],0x8e
  40d19e:	push   DWORD PTR [esi+0x89329d3]
  40d1a4:	sbb    bh,BYTE PTR [edi+ecx*1-0xab404d2]
  40d1ab:	ficom  DWORD PTR [eax]
  40d1ad:	clc    
  40d1ae:	out    dx,eax
  40d1af:	loope  0x40d134
  40d1b1:	jbe    0x40d200
  40d1b3:	add    dh,BYTE PTR [ebx-0x5d]
  40d1b6:	sub    al,dh
  40d1b8:	or     ah,BYTE PTR [edx-0x2feca88d]
  40d1be:	stc    
  40d1bf:	mul    DWORD PTR [ebp+0x59]
  40d1c2:	jg     0x40d23b
  40d1c4:	div    BYTE PTR [ecx-0x16821408]
  40d1ca:	xchg   ebx,eax
  40d1cb:	mov    ah,0x15
  40d1cd:	sbb    eax,0xf330a0fb
  40d1d2:	mov    al,0x88
  40d1d4:	loope  0x40d1ca
  40d1d6:	cmp    eax,0xa2c2dbb
  40d1db:	sbb    BYTE PTR [edi+0x14],dh
  40d1de:	or     ecx,DWORD PTR [eax]
  40d1e0:	inc    edx
  40d1e1:	(bad)  
  40d1e2:	push   eax
  40d1e3:	fist   WORD PTR ds:0xc6f93681
  40d1e9:	cmp    BYTE PTR [ebx],cl
  40d1eb:	out    dx,al
  40d1ec:	test   al,0xf
  40d1ee:	adc    esp,esp
  40d1f0:	cmc    
  40d1f1:	xchg   edi,eax
  40d1f2:	push   ss
  40d1f3:	pop    ebp
  40d1f4:	push   0xeffa6146
  40d1f9:	sub    DWORD PTR [edi+0x2b],eax
  40d1fc:	sub    BYTE PTR [eax],bh
  40d1fe:	daa    
  40d1ff:	rol    BYTE PTR [eax+0x10],cl
  40d202:	das    
  40d203:	dec    eax
  40d204:	push   0x51a2c3c1
  40d209:	dec    ebx
  40d20a:	les    eax,FWORD PTR [edi+ebx*2+0x75a71e92]
  40d211:	dec    ebp
  40d212:	add    WORD PTR [esi+edx*1+0x4d66915e],bp
  40d21a:	dec    ebp
  40d21b:	mov    eax,DWORD PTR [edi+0x527543b5]
  40d221:	out    dx,al
  40d222:	outs   dx,BYTE PTR ds:[esi]
  40d223:	xlat   BYTE PTR ds:[ebx]
  40d224:	popa   
  40d225:	jns    0x40d22a
  40d227:	mov    ebx,0x37782851
  40d22c:	mov    bh,0x2c
  40d22e:	mov    eax,0xcafcba3b
  40d233:	rol    ebx,cl
  40d235:	push   0xbc356a36
  40d23a:	xor    DWORD PTR [ecx+0x7a1f4f3d],esp
  40d240:	cmp    DWORD PTR [eax],esi
  40d242:	retf   0x36fa
  40d245:	push   ebp
  40d246:	push   eax
  40d247:	test   eax,0x3ef96884
  40d24c:	xlat   BYTE PTR ds:[ebx]
  40d24d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d24e:	xor    eax,0xcd0fc53
  40d253:	cmc    
  40d254:	sub    ch,BYTE PTR [eax+eiz*8]
  40d257:	(bad)  
  40d258:	cmc    
  40d259:	push   ebp
  40d25a:	and    eax,0x38a9d3af
  40d25f:	mov    dl,BYTE PTR [esi+0x10]
  40d262:	mov    ds:0x3f143a4b,eax
  40d267:	cld    
  40d268:	test   al,0x4e
  40d26a:	test   eax,0x351604c6
  40d26f:	mov    ds:0x8619a9f1,eax
  40d274:	fidiv  DWORD PTR [eax-0x63]
  40d277:	stc    
  40d278:	sbb    eax,0x913b2180
  40d27d:	adc    DWORD PTR [eax-0x59],edi
  40d280:	mov    edi,0xb8e7cbf2
  40d285:	ror    dl,1
  40d287:	scas   eax,DWORD PTR es:[edi]
  40d288:	xor    DWORD PTR [ebp-0x445b43d9],0xffffffaa
  40d28f:	cmp    eax,edi
  40d291:	jp     0x40d213
  40d293:	add    bh,BYTE PTR [edi*2+0x1dc7f97f]
  40d29a:	jl     0x40d23a
  40d29c:	inc    ebp
  40d29d:	test   al,0x2c
  40d29f:	icebp  
  40d2a0:	push   edi
  40d2a1:	lea    eax,[ebx]
  40d2a3:	push   0xffffffb4
  40d2a5:	mov    ebx,0xcc5e0327
  40d2aa:	rcr    ah,1
  40d2ac:	ins    BYTE PTR es:[edi],dx
  40d2ad:	into   
  40d2ae:	out    dx,eax
  40d2af:	shr    BYTE PTR [edx+0x2641b14],cl
  40d2b5:	cmp    al,0x64
  40d2b7:	adc    cl,BYTE PTR ds:0xaec3ea23
  40d2bd:	or     al,0x5c
  40d2bf:	std    
  40d2c0:	cmp    DWORD PTR [ecx],ebx
  40d2c2:	add    edi,DWORD PTR [ebx-0x2e]
  40d2c5:	jnp    0x40d2f2
  40d2c7:	jne    0x40d33e
  40d2c9:	and    bl,BYTE PTR [eax-0x64b79f29]
  40d2cf:	xor    ah,BYTE PTR [ecx+0x28c51ccb]
  40d2d5:	test   esp,edi
  40d2d7:	ja     0x40d25e
  40d2d9:	xchg   ebx,eax
  40d2da:	or     BYTE PTR [edx+0x35969319],cl
  40d2e0:	int    0x45
  40d2e2:	dec    eax
  40d2e3:	adc    ah,dh
  40d2e5:	ins    BYTE PTR es:[edi],dx
  40d2e6:	pop    ebx
  40d2e7:	mov    dl,0xb1
  40d2e9:	and    edx,DWORD PTR [ebp-0x68c630be]
  40d2ef:	or     ch,BYTE PTR [esi+0x42d18382]
  40d2f5:	adc    edi,DWORD PTR [edi-0x44]
  40d2f8:	mov    eax,ds:0xb359b05d
  40d2fd:	lods   al,BYTE PTR ds:[esi]
  40d2fe:	inc    esp
  40d2ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d300:	adc    DWORD PTR [ebx+edx*1-0x15cc0940],edi
  40d307:	ror    DWORD PTR [esp+esi*4+0x7a733a8d],1
  40d30e:	jae    0x40d294
  40d310:	jmp    0x40d368
  40d312:	data16 int 0xbc
  40d315:	pop    ds
  40d316:	or     BYTE PTR [esi-0x44286d87],al
  40d31c:	sub    edi,esi
  40d31e:	inc    edi
  40d31f:	stos   BYTE PTR es:[edi],al
  40d320:	jnp    0x40d2ff
  40d322:	push   eax
  40d323:	dec    ebx
  40d324:	dec    eax
  40d325:	xchg   edi,eax
  40d326:	ror    BYTE PTR [edi-0x45],0x12
  40d32a:	outs   dx,DWORD PTR ds:[esi]
  40d32b:	int    0xc9
  40d32d:	lds    edi,FWORD PTR [edx]
  40d32f:	mov    DWORD PTR [esi+ebp*8],edi
  40d332:	jbe    0x40d332
  40d334:	dec    edx
  40d335:	cmp    eax,0xb948a19a
  40d33a:	call   0x5ad:0xab892ec6
  40d341:	imul   edi,DWORD PTR [ebx-0x9],0xffffffd0
  40d345:	daa    
  40d346:	ficomp WORD PTR [edx+0x58]
  40d349:	jecxz  0x40d2ea
  40d34b:	adc    al,0xb3
  40d34d:	jle    0x40d3c1
  40d34f:	(bad)  
  40d350:	fidiv  DWORD PTR [ebx+0x42a64cab]
  40d356:	int    0xa5
  40d358:	repnz cli 
  40d35a:	or     DWORD PTR [ecx+0x3f6c01d3],ecx
  40d360:	icebp  
  40d361:	and    DWORD PTR [ebx],0xffffffb1
  40d364:	jg     0x40d2e9
  40d366:	fsubr  DWORD PTR [ecx]
  40d368:	leave  
  40d369:	inc    esi
  40d36a:	xchg   BYTE PTR [edx],cl
  40d36c:	rcr    DWORD PTR [edx+0x71],0x3b
  40d370:	push   ss
  40d371:	test   DWORD PTR [ebx],edx
  40d373:	xlat   BYTE PTR ds:[ebx]
  40d374:	or     DWORD PTR [ebx-0x22],ecx
  40d377:	push   0x15
  40d379:	je     0x40d306
  40d37b:	mov    al,0xe7
  40d37d:	jne    0x40d39a
  40d37f:	cli    
  40d380:	pop    esi
  40d381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d382:	fiadd  WORD PTR [ebp+0x79]
  40d385:	lea    esi,[ecx]
  40d387:	lods   eax,DWORD PTR ds:[esi]
  40d388:	es scas al,BYTE PTR es:[edi]
  40d38a:	icebp  
  40d38b:	jmp    0xf7ed9244
  40d390:	rcr    bl,1
  40d392:	pop    ecx
  40d393:	rcl    bl,cl
  40d395:	and    esp,DWORD PTR fs:[eax+eax*8+0x2f7512b1]
  40d39d:	jmp    0x9925d765
  40d3a2:	test   al,0xc0
  40d3a4:	mov    al,0x7e
  40d3a6:	jb     0x40d3cc
  40d3a8:	add    BYTE PTR [esi+0x13],bl
  40d3ab:	xor    BYTE PTR [ecx+0x52],dh
  40d3ae:	cs popa 
  40d3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b1:	pop    eax
  40d3b2:	mov    ebx,0x9b1972d5
  40d3b7:	and    DWORD PTR [ebp+0x0],0xffffffa6
  40d3bb:	test   al,0xed
  40d3bd:	mov    eax,0x6e2511b4
  40d3c2:	jbe    0x40d38e
  40d3c4:	jge    0x40d406
  40d3c6:	cli    
  40d3c7:	push   0xc00ddbf2
  40d3cc:	xchg   edx,eax
  40d3cd:	inc    BYTE PTR [edi]
  40d3cf:	mov    eax,0x188330e9
  40d3d4:	dec    edx
  40d3d5:	fisub  WORD PTR [esi-0x4071389a]
  40d3db:	imul   ecx,DWORD PTR [ecx+0xe],0xffffffea
  40d3df:	inc    ebx
  40d3e0:	jae    0x40d3e8
  40d3e2:	dec    edx
  40d3e3:	fdiv   st(2),st
  40d3e5:	add    ecx,edx
  40d3e7:	pop    es
  40d3e8:	jge    0x40d424
  40d3ea:	popa   
  40d3eb:	adc    eax,0x4eb23ed
  40d3f0:	ins    DWORD PTR es:[edi],dx
  40d3f1:	popf   
  40d3f2:	xchg   BYTE PTR [edx-0x46],bh
  40d3f5:	inc    eax
  40d3f6:	sub    BYTE PTR [esi+ebp*4-0x35],0x56
  40d3fb:	iret   
  40d3fc:	sbb    DWORD PTR [ebx+0x33811209],esp
  40d402:	inc    esi
  40d403:	or     al,0x50
  40d405:	hlt    
  40d406:	cli    
  40d407:	cmp    eax,0xf7a4948a
  40d40c:	data16 sti 
  40d40e:	xchg   edi,eax
  40d40f:	dec    ebp
  40d410:	shr    DWORD PTR [ecx],1
  40d412:	and    al,BYTE PTR [ebx-0x676cc3c2]
  40d418:	mov    edx,0x1d6eeb65
  40d41d:	call   0x853:0x381e998e
  40d424:	mov    dh,BYTE PTR fs:[edi+0x63d9ff9a]
  40d42b:	jp     0x40d45b
  40d42d:	push   ds
  40d42e:	sub    eax,0xa5b25876
  40d433:	fld    DWORD PTR ds:0x72f6c3cb
  40d439:	add    al,BYTE PTR [eax]
  40d43b:	sar    BYTE PTR [esi+0x4f963ff3],1
  40d441:	or     BYTE PTR ds:0x5e6e97d1,dl
  40d447:	dec    eax
  40d448:	les    ebp,FWORD PTR [ebp-0xbbcdfa2]
  40d44e:	shl    edx,cl
  40d450:	aam    0x7a
  40d452:	adc    DWORD PTR [ebx],0x36
  40d455:	mov    ebx,0x58d7c1c5
  40d45a:	retf   0x5bcc
  40d45d:	and    eax,0x47f4aa03
  40d462:	jecxz  0x40d40a
  40d464:	arpl   si,dx
  40d466:	adc    DWORD PTR [eax*4+0x449bb0e1],edi
  40d46d:	in     eax,dx
  40d46e:	js     0x40d499
  40d470:	and    ecx,ebx
  40d472:	inc    ebp
  40d473:	fiadd  WORD PTR [esi+0x76222c4c]
  40d479:	inc    esi
  40d47a:	sbb    dh,BYTE PTR [esi]
  40d47c:	or     bl,BYTE PTR [ebx+0x404c4b17]
  40d482:	xor    eax,0x3e994a2e
  40d487:	cmp    al,0xce
  40d489:	(bad)  [edi-0x6]
  40d48c:	aad    0x47
  40d48e:	int3   
  40d48f:	imul   ebp,DWORD PTR ds:0x60b7ffd7,0xffffffcc
  40d496:	jne    0x40d499
  40d498:	(bad)  
  40d499:	mov    al,ds:0x26b52709
  40d49e:	imul   DWORD PTR [esi]
  40d4a0:	add    DWORD PTR [ecx-0x3255d69a],edi
  40d4a6:	or     ecx,edx
  40d4a8:	and    ebp,DWORD PTR [ebx-0x3e]
  40d4ab:	xchg   esi,eax
  40d4ac:	aas    
  40d4ad:	(bad)  
  40d4ae:	nop
  40d4af:	je     0x40d468
  40d4b1:	imul   edx,edi,0xe3e345bd
  40d4b7:	mov    dl,0x8c
  40d4b9:	in     eax,0xc3
  40d4bb:	jne    0x40d43d
  40d4bd:	fwait
  40d4be:	or     DWORD PTR [eax+0xc],edx
  40d4c1:	imul   ax,WORD PTR [esi-0x33d0ed16],0x655
  40d4ca:	push   cs
  40d4cb:	mov    fs,WORD PTR [edx-0xe4901b1]
  40d4d1:	cmp    edi,edi
  40d4d3:	mov    edx,DWORD PTR [eax+0x19739ebe]
  40d4d9:	rcl    edi,0xa0
  40d4dc:	cmp    DWORD PTR [edi],ecx
  40d4de:	(bad)  
  40d4df:	out    dx,al
  40d4e0:	adc    DWORD PTR [esi],esp
  40d4e2:	or     al,0x2c
  40d4e4:	jmp    0x40d52c
  40d4e6:	push   esi
  40d4e7:	jno    0x40d548
  40d4e9:	jo     0x40d481
  40d4eb:	test   eax,0x898e2ca5
  40d4f0:	popf   
  40d4f1:	push   esp
  40d4f2:	std    
  40d4f3:	mov    esp,0x78863452
  40d4f8:	jl     0x40d4ff
  40d4fa:	lahf   
  40d4fb:	pop    ds
  40d4fc:	lahf   
  40d4fd:	(bad)  
  40d4fe:	sub    al,0x6
  40d500:	fcom   DWORD PTR ss:[ebx-0x17a145d]
  40d507:	scas   al,BYTE PTR es:[edi]
  40d508:	add    eax,0x8496842e
  40d50d:	xchg   ebx,eax
  40d50e:	mov    ebp,0x92de296e
  40d513:	out    0x70,eax
  40d515:	popa   
  40d516:	push   ss
  40d517:	push   esp
  40d518:	dec    edi
  40d519:	push   esp
  40d51a:	pop    esp
  40d51b:	ret    0x8c15
  40d51e:	jno    0x40d518
  40d520:	xor    DWORD PTR [ecx],eax
  40d522:	fdiv   QWORD PTR [edx+0x65]
  40d525:	jmp    0xd195c601
  40d52a:	int3   
  40d52b:	fst    QWORD PTR [esi]
  40d52d:	popf   
  40d52e:	fcomp  QWORD PTR [esi+0x1f]
  40d531:	aam    0x10
  40d533:	enter  0xd666,0x2e
  40d537:	cld    
  40d538:	ins    DWORD PTR es:[edi],dx
  40d539:	outs   dx,BYTE PTR ds:[esi]
  40d53a:	and    BYTE PTR [edx+0x66ff9337],al
  40d540:	mov    eax,0x6f83aa74
  40d545:	das    
  40d546:	pop    es
  40d547:	pop    ecx
  40d548:	outs   dx,DWORD PTR ds:[esi]
  40d549:	cmovno ebx,DWORD PTR [ebx-0x4c]
  40d54d:	out    0x9d,eax
  40d54f:	test   esi,edi
  40d551:	mov    ds:0x8d83d76d,al
  40d556:	or     BYTE PTR [edi],al
  40d558:	pop    ds
  40d559:	cwde   
  40d55a:	push   ds
  40d55b:	add    edi,DWORD PTR [ecx+0x5318523]
  40d561:	pop    ss
  40d562:	mov    ebp,edi
  40d564:	push   esi
  40d565:	test   DWORD PTR [edi+ecx*2],0xcb703850
  40d56c:	scas   al,BYTE PTR es:[edi]
  40d56d:	daa    
  40d56e:	cld    
  40d56f:	adc    ch,al
  40d571:	jmp    0x3548bc3e
  40d576:	call   0xdd4d89c7
  40d57b:	std    
  40d57c:	ins    BYTE PTR es:[edi],dx
  40d57d:	pop    ss
  40d57e:	jge    0x40d5b4
  40d580:	or     DWORD PTR [edi-0x69ae1238],ebx
  40d586:	pop    ecx
  40d587:	js     0x40d5ec
  40d589:	cmp    dl,cl
  40d58b:	and    edi,edx
  40d58d:	mov    ebp,0x14c89c9d
  40d592:	mov    eax,ds:0xc5cff71c
  40d597:	push   cs
  40d598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d599:	push   esp
  40d59a:	test   al,0x61
  40d59c:	shr    edi,0xcd
  40d59f:	and    al,0x3a
  40d5a1:	stos   BYTE PTR es:[edi],al
  40d5a2:	xchg   edi,eax
  40d5a3:	inc    edx
  40d5a4:	and    al,0x4b
  40d5a6:	sub    eax,0xa2a74cf6
  40d5ab:	xor    esp,edi
  40d5ad:	outs   dx,DWORD PTR ds:[esi]
  40d5ae:	out    0x7f,al
  40d5b0:	cli    
  40d5b1:	popf   
  40d5b2:	loop   0x40d579
  40d5b4:	int3   
  40d5b5:	dec    ebp
  40d5b6:	addr16 dec ebp
  40d5b8:	sbb    eax,0x6cc50642
  40d5bd:	pop    ds
  40d5be:	imul   ebp,DWORD PTR [ecx],0xe88f75db
  40d5c4:	jl     0x40d620
  40d5c6:	lods   al,BYTE PTR ds:[esi]
  40d5c7:	inc    ecx
  40d5c8:	out    0xa9,eax
  40d5ca:	retf   0x55e3
  40d5cd:	out    0xd3,al
  40d5cf:	js     0x40d638
  40d5d1:	mov    BYTE PTR [eax+0x7],bh
  40d5d4:	mov    ds:0x1ca79267,al
  40d5d9:	cmp    DWORD PTR [ebx+0x15916373],esi
  40d5df:	jge    0x40d5f3
  40d5e1:	or     ecx,DWORD PTR [esi]
  40d5e3:	dec    edx
  40d5e4:	aam    0x0
  40d5e6:	ins    DWORD PTR es:[edi],dx
  40d5e7:	out    0x1,al
  40d5e9:	ffree  st(6)
  40d5eb:	test   DWORD PTR [ebp-0x3697c689],ecx
  40d5f1:	dec    edi
  40d5f2:	(bad)  
  40d5f3:	adc    eax,0x78443a12
  40d5f8:	imul   edi,DWORD PTR [esi],0xffffffed
  40d5fb:	jnp    0x40d63f
  40d5fd:	jmp    0x40d5d3
  40d5ff:	jo     0x40d5bf
  40d601:	(bad)
  40d604:	out    dx,al
  40d605:	push   ebx
  40d606:	jp     0x40d647
  40d608:	xchg   ebp,eax
  40d609:	mov    ecx,0x71c6caae
  40d60e:	xchg   edx,eax
  40d60f:	cmp    dl,BYTE PTR [esi+0x2f]
  40d612:	pusha  
  40d613:	into   
  40d614:	mov    ebx,0xa4bd30e1
  40d619:	mov    edi,0x403e7d69
  40d61e:	sbb    al,0x1d
  40d620:	adc    BYTE PTR [edx],bl
  40d622:	xchg   ebp,eax
  40d623:	or     edx,DWORD PTR [ebx-0x32]
  40d626:	cld    
  40d627:	push   0x25
  40d629:	inc    ecx
  40d62a:	sbb    BYTE PTR [esi-0x49dab141],bl
  40d630:	int    0x70
  40d632:	stos   DWORD PTR es:[edi],eax
  40d633:	ror    BYTE PTR [ecx-0x40],0x20
  40d637:	sub    dh,al
  40d639:	and    DWORD PTR [ebp+0x3df90eae],eax
  40d63f:	stc    
  40d640:	shl    DWORD PTR [edi-0x79eaa6d1],1
  40d646:	out    dx,eax
  40d647:	inc    edx
  40d648:	sti    
  40d649:	pop    ss
  40d64a:	jbe    0x40d5ea
  40d64c:	mov    ecx,0x276f92c7
  40d651:	cmp    esi,DWORD PTR [ecx-0x507ec616]
  40d657:	out    dx,al
  40d658:	sub    ebx,DWORD PTR ds:0x2f339d9d
  40d65e:	or     dl,BYTE PTR [esi-0x1a]
  40d661:	je     0x40d656
  40d663:	mov    bl,0x97
  40d665:	jg     0x40d6cc
  40d667:	(bad)  
  40d668:	(bad)
  40d66b:	rcr    DWORD PTR [ebx+0x16],1
  40d66e:	sub    ah,BYTE PTR [ebp-0x177f37e6]
  40d674:	xchg   BYTE PTR [esi+0x17],bl
  40d677:	xor    BYTE PTR [edi-0x14],ch
  40d67a:	or     esp,DWORD PTR [edx-0xadeb21a]
  40d680:	mov    ds:0xae47b746,eax
  40d685:	push   ebx
  40d686:	cwde   
  40d687:	or     cl,BYTE PTR ds:0x839c1158
  40d68d:	xchg   bl,ch
  40d68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d690:	ficomp WORD PTR [ebx]
  40d692:	pop    ss
  40d693:	in     al,dx
  40d694:	inc    eax
  40d695:	ror    BYTE PTR [eax],1
  40d697:	cdq    
  40d698:	mov    esi,0x79075a98
  40d69d:	jle    0x40d634
  40d69f:	(bad)  
  40d6a0:	arpl   bx,di
  40d6a2:	cmc    
  40d6a3:	add    bl,bl
  40d6a5:	jo     0x40d647
  40d6a7:	loopne 0x40d6d1
  40d6a9:	fstp   DWORD PTR [ecx+0x5b]
  40d6ac:	out    dx,eax
  40d6ad:	adc    al,0xee
  40d6af:	pusha  
  40d6b0:	or     ebp,ecx
  40d6b2:	mov    bl,0x92
  40d6b4:	adc    al,0x2e
  40d6b6:	outs   dx,DWORD PTR ds:[esi]
  40d6b7:	xchg   edi,eax
  40d6b8:	hlt    
  40d6b9:	push   esi
  40d6ba:	outs   dx,BYTE PTR ds:[esi]
  40d6bb:	je     0x40d6d4
  40d6bd:	xchg   esp,eax
  40d6be:	fistp  QWORD PTR [ebp+0x7c]
  40d6c1:	mov    esi,gs
  40d6c3:	push   edx
  40d6c4:	add    ecx,DWORD PTR [esi+esi*8]
  40d6c7:	mov    bh,dl
  40d6c9:	sbb    eax,0xb7ddb271
  40d6ce:	sbb    BYTE PTR [esp+ebp*2],al
  40d6d1:	xor    al,cl
  40d6d3:	jl     0x40d745
  40d6d5:	out    0x2a,eax
  40d6d7:	inc    ebp
  40d6d8:	pop    ecx
  40d6d9:	fld    st(7)
  40d6db:	(bad)  
  40d6dc:	pop    edi
  40d6dd:	cmc    
  40d6de:	lods   al,BYTE PTR ds:[esi]
  40d6df:	cmpps  xmm2,XMMWORD PTR [ecx+0x1d6bf5e],0x42
  40d6e7:	cmp    edi,0xc9b8c395
  40d6ed:	dec    ebp
  40d6ee:	imul   edi,DWORD PTR [ecx+edx*1],0x7f51ad77
  40d6f5:	xchg   ebp,eax
  40d6f6:	xchg   DWORD PTR [eax],edx
  40d6f8:	fwait
  40d6f9:	lods   eax,DWORD PTR ds:[esi]
  40d6fa:	ds or  eax,0x42d8767e
  40d700:	mov    al,ds:0xe69d60b9
  40d705:	ins    DWORD PTR es:[edi],dx
  40d706:	call   0xe555:0xac9cfaf0
  40d70d:	push   edi
  40d70e:	inc    ebx
  40d70f:	inc    eax
  40d710:	add    ebp,esp
  40d712:	jg     0x40d6ac
  40d714:	jno    0x40d6d9
  40d716:	push   ecx
  40d717:	in     eax,0x5
  40d719:	sbb    al,0x65
  40d71c:	in     al,0x41
  40d71e:	test   DWORD PTR [edx],esi
  40d720:	sbb    dl,ah
  40d722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d723:	ror    DWORD PTR [ebx-0x28],1
  40d726:	xchg   esp,esp
  40d728:	or     BYTE PTR [esi-0x53],ah
  40d72b:	xor    al,0xec
  40d72d:	out    dx,eax
  40d72e:	leave  
  40d72f:	inc    ebp
  40d730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d731:	mov    dl,BYTE PTR [edi]
  40d733:	ins    DWORD PTR es:[edi],dx
  40d734:	push   ebx
  40d735:	fst    QWORD PTR [edx+ecx*2-0x5818c7be]
  40d73c:	popf   
  40d73d:	out    0xc4,eax
  40d73f:	and    BYTE PTR [edx+0x76af0877],ch
  40d745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d746:	pop    es
  40d747:	mov    ebx,0x62134eec
  40d74c:	inc    ecx
  40d74d:	push   esp
  40d74e:	fmulp  st(7),st
  40d750:	mov    al,ds:0x72dabd4
  40d755:	popa   
  40d756:	or     cl,BYTE PTR [ecx+0x47]
  40d759:	lock sbb cl,al
  40d75c:	inc    eax
  40d75d:	(bad)  
  40d75e:	cmp    eax,0x6b91f628
  40d763:	adc    DWORD PTR [esi+0x3d8e44d5],ebp
  40d769:	or     eax,0x6750ee63
  40d76e:	mov    edi,DWORD PTR [ecx+0x46b3ddc7]
  40d774:	mov    bl,0xb
  40d776:	stos   BYTE PTR es:[edi],al
  40d777:	jnp    0x40d748
  40d779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d77a:	add    al,0x55
  40d77c:	push   edi
  40d77d:	cld    
  40d77e:	ror    dl,1
  40d780:	add    DWORD PTR [edx],ebp
  40d782:	sbb    bl,BYTE PTR [edx+0x31]
  40d785:	and    eax,0x1375a7d5
  40d78a:	xor    esi,DWORD PTR [edi]
  40d78c:	rol    edi,1
  40d78e:	sub    ebx,0x18
  40d791:	stos   DWORD PTR es:[edi],eax
  40d792:	js     0x40d80c
  40d794:	jecxz  0x40d743
  40d796:	add    al,0xae
  40d798:	mov    esi,0xecc27828
  40d79d:	mov    ah,0x19
  40d79f:	(bad)
  40d7a3:	cmp    eax,0x903a5ffb
  40d7a8:	push   ds
  40d7a9:	xchg   edx,eax
  40d7aa:	cmp    ecx,DWORD PTR [ecx]
  40d7ac:	mov    al,0xf5
  40d7ae:	or     al,0x5e
  40d7b0:	sbb    al,0x4a
  40d7b2:	fcmovne st,st(5)
  40d7b4:	test   DWORD PTR [ebp+0x95f63c5],esp
  40d7ba:	add    DWORD PTR [ecx-0x39c9c6c6],ecx
  40d7c0:	xchg   esp,eax
  40d7c1:	cld    
  40d7c2:	icebp  
  40d7c3:	xor    eax,0x55197116
  40d7c8:	inc    ebp
  40d7c9:	fs mov dl,BYTE PTR es:0x41569ab1
  40d7d1:	jg     0x40d80e
  40d7d3:	pop    edx
  40d7d4:	dec    esp
  40d7d5:	mov    edi,0x3f951763
  40d7da:	int    0x60
  40d7dc:	inc    eax
  40d7dd:	push   cs
  40d7de:	int    0x1f
  40d7e0:	fcomp  QWORD PTR [eax]
  40d7e2:	(bad)  
  40d7e3:	push   ds
  40d7e4:	push   ss
  40d7e5:	daa    
  40d7e6:	mov    ds:0x2e689110,eax
  40d7eb:	inc    esi
  40d7ec:	cmp    ebx,ebx
  40d7ee:	push   esi
  40d7ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7f0:	fwait
  40d7f1:	out    dx,al
  40d7f2:	pushf  
  40d7f3:	(bad)  
  40d7f4:	outs   dx,BYTE PTR ds:[esi]
  40d7f5:	adc    al,0xda
  40d7f7:	inc    ebx
  40d7f8:	dec    edx
  40d7f9:	pop    ebx
  40d7fa:	cmp    al,BYTE PTR [edi]
  40d7fc:	test   DWORD PTR [ecx-0x7f],ebx
  40d7ff:	cmp    al,0x1
  40d801:	in     eax,0x6e
  40d803:	das    
  40d804:	dec    ecx
  40d805:	sub    dl,0x33
  40d808:	outs   dx,BYTE PTR ds:[esi]
  40d809:	mov    BYTE PTR [eax+0x25],bh
  40d80c:	push   esp
  40d80d:	mov    ch,0x48
  40d80f:	rcr    DWORD PTR [eax-0x3e1182e9],cl
  40d815:	mov    edx,0x6c81eb2d
  40d81a:	mov    esp,0xc91ad936
  40d81f:	(bad)  
  40d820:	sbb    DWORD PTR [edi],eax
  40d822:	mov    ch,0xb7
  40d824:	jmp    0xe24e65ef
  40d829:	adc    BYTE PTR [ecx+0x65],cl
  40d82c:	jbe    0x40d8a5
  40d82e:	cdq    
  40d82f:	scas   eax,DWORD PTR es:[edi]
  40d830:	adc    eax,0xb2330a0d
  40d835:	addr16 in eax,dx
  40d837:	add    eax,0xed17a7e2
  40d83c:	test   BYTE PTR [ebx],dh
  40d83e:	cmp    ebx,esp
  40d840:	aam    0x1c
  40d842:	mov    cl,0x42
  40d844:	addr16 nop
  40d846:	out    0xb8,al
  40d848:	push   edi
  40d849:	lds    ecx,FWORD PTR [ecx]
  40d84b:	adc    al,0xe
  40d84d:	xor    DWORD PTR [edi],0xa4855fb
  40d853:	jmp    0x40d7fa
  40d855:	cli    
  40d856:	int3   
  40d857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d858:	fisub  WORD PTR [edx-0x39]
  40d85b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d85c:	or     ah,BYTE PTR [ebp+0x56]
  40d85f:	inc    ebp
  40d860:	fimul  WORD PTR [edx+edi*1+0x6342267]
  40d867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d868:	mov    dh,0xec
  40d86a:	sbb    BYTE PTR [esi+edx*1-0x57],ah
  40d86e:	mov    edx,0x73f9571e
  40d873:	add    esp,DWORD PTR [edi+0x6fd79cdb]
  40d879:	xchg   BYTE PTR [edi],al
  40d87b:	out    0x20,al
  40d87d:	test   BYTE PTR ds:0xf6d2927c,0xb2
  40d884:	shl    DWORD PTR [ecx+0x78],cl
  40d887:	add    eax,0xc253b7d1
  40d88c:	sbb    al,0x27
  40d88e:	nop
  40d88f:	(bad)  [ebx]
  40d891:	jmp    0xc936874e
  40d896:	stos   BYTE PTR es:[edi],al
  40d897:	xor    esp,DWORD PTR [esi-0x51]
  40d89a:	ror    BYTE PTR [edx-0x7bc03ec5],cl
  40d8a0:	sbb    BYTE PTR [ebp+0x45],al
  40d8a3:	jle    0x40d8bb
  40d8a5:	cmp    esi,DWORD PTR [edx-0x441bca8c]
  40d8ab:	js     0x40d8ad
  40d8ad:	push   ds
  40d8ae:	pop    ecx
  40d8af:	mov    esi,0xbda66d4
  40d8b4:	xchg   esi,eax
  40d8b5:	mov    edx,0x37ae9e2e
  40d8ba:	push   eax
  40d8bb:	mov    al,fs:0x868d12dc
  40d8c1:	in     al,dx
  40d8c2:	cmp    BYTE PTR [eax],dl
  40d8c4:	adc    al,0x1b
  40d8c6:	ret    0x5d6c
  40d8c9:	mov    bh,0xa9
  40d8cb:	mov    ah,0x69
  40d8cd:	sbb    ebp,DWORD PTR [edx]
  40d8cf:	shr    cl,cl
  40d8d1:	lods   al,BYTE PTR ds:[esi]
  40d8d2:	mov    WORD PTR [esp+esi*1-0x35a52e2],es
  40d8d9:	mov    ebx,0xc3ec062f
  40d8de:	dec    eax
  40d8e0:	imul   esp,DWORD PTR [ebx],0xffffffce
  40d8e3:	dec    esi
  40d8e4:	and    BYTE PTR [ebx],dh
  40d8e6:	pop    esp
  40d8e7:	push   cs
  40d8e8:	outs   dx,DWORD PTR ds:[esi]
  40d8e9:	xor    BYTE PTR ss:[eax-0x35],bl
  40d8ed:	outs   dx,BYTE PTR ds:[esi]
  40d8ee:	shl    BYTE PTR [esi+eax*1],cl
  40d8f1:	std    
  40d8f2:	arpl   di,dx
  40d8f4:	les    esp,FWORD PTR [eax-0x10cdb03c]
  40d8fa:	cmp    BYTE PTR [ecx],bl
  40d8fc:	mov    al,BYTE PTR [edi+0x348a091b]
  40d902:	cmp    eax,0x697a1e03
  40d907:	jl     0x40d91f
  40d909:	dec    ebx
  40d90a:	mov    ds:0x36f49b6c,eax
  40d90f:	sub    eax,0x221347ea
  40d914:	mov    dh,0xdc
  40d916:	xchg   ebp,eax
  40d917:	loopne 0x40d90b
  40d919:	gs pop ebx
  40d91b:	cdq    
  40d91c:	inc    esp
  40d91d:	dec    eax
  40d91e:	sbb    DWORD PTR [edx],ebx
  40d920:	jle    0x40d8fe
  40d922:	pop    ecx
  40d923:	shl    dl,1
  40d925:	and    BYTE PTR [esi-0xc],0xe9
  40d929:	pop    esi
  40d92a:	pop    esp
  40d92b:	adc    dl,BYTE PTR [esi-0x6288bfe8]
  40d931:	lea    ebx,[ecx]
  40d933:	xor    BYTE PTR [esi],dl
  40d935:	and    bl,BYTE PTR cs:[ebp+edx*2+0x75ab98a]
  40d93d:	shufps xmm6,xmm5,0xa0
  40d941:	in     eax,dx
  40d942:	pop    esi
  40d943:	mov    ecx,0xd21d22fb
  40d948:	stos   DWORD PTR es:[edi],eax
  40d949:	jmp    0xbd41:0xbaa6b087
  40d950:	xchg   edx,eax
  40d951:	sub    bh,dh
  40d953:	pushf  
  40d954:	lods   eax,DWORD PTR ds:[esi]
  40d955:	fcomip st,st(0)
  40d957:	jge    0x40d945
  40d959:	cmc    
  40d95a:	mov    edx,DWORD PTR [ebp-0x6593296b]
  40d960:	fwait
  40d961:	icebp  
  40d962:	mov    esi,0x3224600c
  40d967:	lods   eax,DWORD PTR ds:[esi]
  40d968:	hlt    
  40d969:	scas   eax,DWORD PTR es:[edi]
  40d96a:	sbb    eax,0x39f03865
  40d96f:	js     0x40d974
  40d971:	mov    bl,0x8e
  40d973:	xchg   BYTE PTR [edi+0x46],cl
  40d976:	sahf   
  40d977:	retf   0x1535
  40d97a:	ret    0x22e0
  40d97d:	jp     0x40d979
  40d97f:	mov    ds:0x93b72cb6,al
  40d984:	arpl   bx,ax
  40d986:	aaa    
  40d987:	lea    esp,[ecx-0x2b]
  40d98a:	pop    eax
  40d98b:	sbb    eax,DWORD PTR [ecx+0x58]
  40d98e:	rcr    DWORD PTR [ebx],cl
  40d990:	xchg   ebp,eax
  40d991:	loope  0x40da10
  40d993:	loope  0x40d926
  40d995:	sti    
  40d996:	mov    dh,BYTE PTR [esi-0x6f]
  40d999:	je     0x40d9a1
  40d99b:	cdq    
  40d99c:	sub    eax,0xed76bccd
  40d9a1:	outs   dx,BYTE PTR ds:[esi]
  40d9a2:	retf   
  40d9a3:	(bad)  
  40d9a4:	shl    BYTE PTR [edx+0x36f38942],1
  40d9aa:	jle    0x40d9bc
  40d9ac:	xchg   esi,eax
  40d9ad:	fst    DWORD PTR [ebx+ecx*8-0x6d]
  40d9b1:	(bad)  
  40d9b2:	retf   
  40d9b3:	mov    dl,0xdb
  40d9b5:	cmp    eax,0x165e9eaa
  40d9ba:	mov    fs,ebx
  40d9bc:	mov    ds:0xb51a9e57,al
  40d9c1:	mov    ebx,0x6bb75177
  40d9c6:	inc    ecx
  40d9c7:	and    DWORD PTR [eax],0x38
  40d9ca:	loopne 0x40d9b9
  40d9cc:	out    0x37,al
  40d9ce:	pop    ds
  40d9cf:	cdq    
  40d9d0:	into   
  40d9d1:	push   cs
  40d9d2:	mov    eax,0x72992857
  40d9d7:	test   al,0x49
  40d9d9:	clc    
  40d9da:	jae    0x40da45
  40d9dc:	adc    ecx,DWORD PTR [edx-0x5]
  40d9df:	loope  0x40da2c
  40d9e1:	pop    edx
  40d9e2:	jmp    0x40d9d6
  40d9e4:	lods   eax,DWORD PTR ds:[esi]
  40d9e5:	inc    ebp
  40d9e6:	xchg   ebp,eax
  40d9e7:	xor    DWORD PTR [ebx+edi*8-0x6c],esi
  40d9eb:	daa    
  40d9ec:	cld    
  40d9ed:	out    dx,eax
  40d9ee:	adc    eax,0x627a131d
  40d9f3:	shr    BYTE PTR [ebp-0x4ed21ef4],cl
  40d9f9:	xor    esp,eax
  40d9fb:	push   eax
  40d9fc:	cmc    
  40d9fd:	xlat   BYTE PTR ds:[ebx]
  40d9fe:	xlat   BYTE PTR ds:[ebx]
  40d9ff:	shl    DWORD PTR [eax],0xf8
  40da02:	xchg   esp,eax
  40da03:	ficomp WORD PTR [ebp-0x3f]
  40da06:	adc    DWORD PTR [ebx+0x27c9829d],0xaa18062d
  40da10:	outs   dx,BYTE PTR ds:[esi]
  40da11:	and    cl,BYTE PTR [ecx+0x6a6c8779]
  40da17:	and    edx,esp
  40da19:	mov    edi,0x9f120b09
  40da1e:	mov    bl,0x3a
  40da20:	mov    gs,WORD PTR [esi+0x25]
  40da23:	sbb    dl,BYTE PTR [edi-0x1f95f97b]
  40da29:	pop    ebx
  40da2a:	ret    
  40da2b:	jmp    0x704e4cef
  40da30:	pushf  
  40da31:	rol    BYTE PTR [esi+0xb536ce8],0x3
  40da38:	clc    
  40da39:	push   0x26
  40da3b:	hlt    
  40da3c:	popaw  
  40da3e:	inc    edx
  40da3f:	xor    bl,BYTE PTR [ebx+ebp*2-0x1a]
  40da43:	in     al,0x85
  40da45:	fmul   st(6),st
  40da47:	mov    bl,0x7e
  40da49:	ror    BYTE PTR [ebx+0x35],cl
  40da4c:	(bad)  
  40da4d:	outs   dx,BYTE PTR ds:[esi]
  40da4e:	adc    dl,bl
  40da50:	add    eax,0x4db5e73a
  40da55:	cli    
  40da56:	pop    eax
  40da57:	mov    WORD PTR [edx-0x1b],?
  40da5a:	or     ebp,DWORD PTR [eax+0x7801570e]
  40da60:	sub    BYTE PTR [ebx],dh
  40da62:	test   al,0xe6
  40da64:	cmc    
  40da65:	inc    ecx
  40da66:	popf   
  40da67:	fist   WORD PTR ds:0x66f26237
  40da6d:	pop    ebx
  40da6e:	popf   
  40da6f:	add    dh,al
  40da71:	pop    ebp
  40da72:	lods   al,BYTE PTR ds:[esi]
  40da73:	sub    dh,BYTE PTR [ebp-0x44b3405a]
  40da79:	mov    bh,0xbe
  40da7b:	ret    
  40da7c:	lods   eax,DWORD PTR ds:[esi]
  40da7d:	in     eax,dx
  40da7e:	outs   dx,DWORD PTR ds:[esi]
  40da7f:	jl     0x40dad8
  40da81:	sub    dh,al
  40da83:	sub    BYTE PTR [ebx],ch
  40da85:	into   
  40da86:	aas    
  40da87:	push   es
  40da88:	mov    bh,0x30
  40da8a:	ror    DWORD PTR [edi+eax*1],cl
  40da8d:	aaa    
  40da8e:	push   ds
  40da8f:	xlat   BYTE PTR ds:[ebx]
  40da90:	push   edi
  40da91:	add    al,0x2a
  40da93:	sub    eax,edx
  40da95:	jle    0x40da6f
  40da97:	pop    es
  40da98:	and    BYTE PTR [edi+0x7d],ch
  40da9b:	adc    al,0xb7
  40da9d:	fwait
  40da9e:	sub    BYTE PTR [ebp-0x53],ah
  40daa1:	dec    ebx
  40daa2:	mov    al,ds:0x54be7c08
  40daa7:	pop    edx
  40daa8:	add    eax,0x4704bb72
  40daad:	es std 
  40daaf:	jnp    0x40daca
  40dab1:	lods   al,BYTE PTR ds:[esi]
  40dab2:	loopne 0x40daef
  40dab4:	cmp    eax,0xddec1084
  40dab9:	mov    eax,ds:0xe518d286
  40dabe:	(bad)  
  40dabf:	and    dh,cl
  40dac1:	int    0x81
  40dac3:	mov    edx,0x8b39555f
  40dac8:	icebp  
  40dac9:	mov    WORD PTR [eax],es
  40dacb:	(bad)  
  40dacc:	sahf   
  40dacd:	movq   QWORD PTR [ecx+0x5],mm2
  40dad1:	jmp    0x40da7c
  40dad3:	repz push ecx
  40dad5:	push   esi
  40dad6:	div    DWORD PTR [esi+esi*1-0x74bd6bdc]
  40dadd:	fdivr  DWORD PTR [ecx+0x49]
  40dae0:	fcmovbe st,st(6)
  40dae2:	sub    ebp,esi
  40dae4:	push   edx
  40dae5:	inc    edi
  40dae6:	push   eax
  40dae7:	mov    ah,0x82
  40dae9:	push   esi
  40daea:	add    BYTE PTR [eax],bh
  40daec:	dec    ebx
  40daed:	mov    dl,0xd6
  40daef:	loopne 0x40dae7
  40daf1:	ror    BYTE PTR [eax-0x66],1
  40daf4:	cwde   
  40daf5:	sbb    al,0xc4
  40daf7:	mov    cs,WORD PTR [edx-0x6a1331c9]
  40dafd:	cs mov ebp,0xa19232a6
  40db03:	aaa    
  40db04:	cdq    
  40db05:	and    al,0xd2
  40db07:	and    eax,0xffffffb8
  40db0a:	nop
  40db0b:	(bad)  
  40db0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db0e:	and    BYTE PTR [ebp-0xf3bd9c1],0x6
  40db15:	test   DWORD PTR [eax+0x23],edi
  40db18:	and    eax,eax
  40db1a:	aam    0x19
  40db1c:	pop    edi
  40db1d:	mov    bh,0x75
  40db1f:	imul   ebx,DWORD PTR [eax+0x1da37aa7],0x28
  40db26:	push   ebp
  40db27:	cld    
  40db28:	mov    DWORD PTR [esi-0x11],ecx
  40db2b:	aas    
  40db2c:	dec    esp
  40db2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db2e:	mov    ds:0xb5f527e8,al
  40db33:	lods   al,BYTE PTR ds:[esi]
  40db34:	mov    ds,WORD PTR [ebx-0x49cae83b]
  40db3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db3b:	dec    esi
  40db3c:	ficomp WORD PTR [esi-0x7efeeb23]
  40db42:	aas    
  40db43:	mov    ebp,0x4cee4974
  40db48:	xchg   DWORD PTR [ebx+0x3],ebp
  40db4b:	jmp    0xcb76:0x76eb9206
  40db52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db53:	jg     0x40db9c
  40db55:	nop
  40db56:	push   ss
  40db57:	push   cs
  40db58:	pop    ebp
  40db59:	xlat   BYTE PTR ds:[ebx]
  40db5a:	jae    0x40db63
  40db5c:	imul   eax,esp,0xa90b33cc
  40db62:	mov    bl,0x8e
  40db64:	(bad)  
  40db66:	std    
  40db67:	jl     0x40db15
  40db69:	(bad)  
  40db6a:	push   ecx
  40db6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db6c:	lds    esp,FWORD PTR [eax+0x27]
  40db6f:	lods   eax,DWORD PTR ds:[esi]
  40db70:	mov    eax,ds:0x3a1a8a09
  40db75:	into   
  40db76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db77:	in     eax,0x52
  40db79:	cmp    eax,0x21aa6c57
  40db7e:	mov    ds:0xcff1a96b,eax
  40db83:	pushf  
  40db84:	stc    
  40db85:	(bad)  
  40db86:	dec    eax
  40db87:	std    
  40db88:	in     eax,0x34
  40db8a:	inc    ecx
  40db8b:	sti    
  40db8c:	cmp    al,al
  40db8e:	cwde   
  40db8f:	daa    
  40db90:	or     cl,BYTE PTR [ebx-0x13a58142]
  40db96:	adc    DWORD PTR [ebp-0x69358aa1],ebp
  40db9c:	xor    al,0x54
  40db9e:	and    eax,0xa8d9b0c3
  40dba3:	ins    DWORD PTR es:[edi],dx
  40dba4:	push   esp
  40dba5:	lods   eax,DWORD PTR ds:[esi]
  40dba6:	scas   eax,DWORD PTR es:[edi]
  40dba7:	lds    edi,FWORD PTR [ecx+0x4d]
  40dbaa:	mov    al,0xb2
  40dbac:	fidiv  DWORD PTR [esi+0x53b9da41]
  40dbb2:	jg     0x40db5a
  40dbb4:	push   edi
  40dbb5:	lds    ebx,FWORD PTR [ebx+0xb0f1baf]
  40dbbb:	dec    esp
  40dbbc:	cmp    DWORD PTR [ebx-0x3edb70c5],edx
  40dbc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbc3:	xor    ebx,DWORD PTR [si-0x5a]
  40dbc7:	inc    bl
  40dbc9:	ret    
  40dbca:	or     edi,esi
  40dbcc:	popa   
  40dbcd:	nop
  40dbce:	loopne 0x40db6d
  40dbd0:	mov    ah,0xea
  40dbd2:	xor    dh,BYTE PTR [edx]
  40dbd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbd5:	mov    bh,0x4a
  40dbd7:	fisubr WORD PTR [eax+eiz*4-0x4e]
  40dbdb:	cli    
  40dbdc:	jns    0x40dbdf
  40dbde:	fnstenv [ebx-0x450b5d02]
  40dbe4:	jb     0x40dbb6
  40dbe6:	add    DWORD PTR [ebx+eiz*2],esp
  40dbe9:	mov    edx,0x93a7ab59
  40dbee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbef:	pop    es
  40dbf0:	lea    esp,[eax+0x221ff145]
  40dbf6:	push   cs
  40dbf7:	push   ss
  40dbf8:	out    dx,al
  40dbf9:	mov    WORD PTR [esi+0x69],fs
  40dbfc:	jecxz  0x40dc61
  40dbfe:	xor    ecx,DWORD PTR [edx*4+0x15a71a00]
  40dc05:	or     DWORD PTR [edi],0x62
  40dc08:	sbb    DWORD PTR [edx+0x3bcff8ef],0xffffffb4
  40dc0f:	and    DWORD PTR [edi+0x45907a00],ecx
  40dc15:	cwde   
  40dc16:	jmp    0x5e7cbc6e
  40dc1b:	xchg   ebx,eax
  40dc1d:	dec    esi
  40dc1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc1f:	push   ecx
  40dc20:	ficomp WORD PTR [esp+edi*8-0x4b]
  40dc24:	pminsw mm6,mm6
  40dc27:	mov    dh,0x2d
  40dc29:	sbb    eax,0x27569e73
  40dc2e:	add    ecx,eax
  40dc30:	push   esi
  40dc31:	ja     0x40dc65
  40dc33:	out    dx,eax
  40dc34:	jns    0x40dc40
  40dc36:	ret    0x43b0
  40dc39:	add    eax,0x3bae92f
  40dc3e:	push   ebp
  40dc3f:	and    DWORD PTR [esi+0x2f],esp
  40dc42:	add    DWORD PTR [eax-0x11],eax
  40dc45:	mov    ebx,0xfd2e8578
  40dc4a:	fcomp  DWORD PTR [eax+0x56]
  40dc4d:	cmp    ch,BYTE PTR [edi]
  40dc4f:	mov    edx,0x95d0af61
  40dc54:	push   edx
  40dc55:	icebp  
  40dc56:	sbb    BYTE PTR [ebx],bh
  40dc58:	jns    0x40dc75
  40dc5a:	adc    eax,0x45b6ea88
  40dc5f:	ffree  st(3)
  40dc61:	test   al,0xba
  40dc63:	sub    dl,BYTE PTR [esi-0x23]
  40dc66:	sub    ecx,DWORD PTR [edi+0x4]
  40dc69:	nop
  40dc6a:	in     eax,dx
  40dc6b:	out    0xf1,eax
  40dc6d:	mov    bl,0x62
  40dc6f:	cmp    eax,0xb4ee4f7b
  40dc74:	sub    ch,0x8b
  40dc77:	jmp    0x755:0xe80f5e38
  40dc7e:	mov    ebx,0xf914d5df
  40dc83:	xchg   BYTE PTR fs:[esi],bl
  40dc86:	jg     0x40dc27
  40dc88:	pop    ebx
  40dc89:	sub    ah,ch
  40dc8b:	push   ds
  40dc8c:	xchg   ecx,eax
  40dc8d:	jnp    0x40dc6b
  40dc8f:	sbb    esi,DWORD PTR [esi]
  40dc91:	xchg   ebx,eax
  40dc92:	loope  0x40dc95
  40dc94:	test   eax,0x7d78bfb
  40dc99:	xchg   ecx,eax
  40dc9a:	scas   al,BYTE PTR es:[edi]
  40dc9b:	loop   0x40dc46
  40dc9d:	jmp    DWORD PTR cs:[eax+0x2b]
  40dca1:	loope  0x40dcda
  40dca3:	or     DWORD PTR [eax],esi
  40dca5:	push   esp
  40dca6:	xor    eax,0x99831e1
  40dcab:	push   ecx
  40dcac:	gs in  al,dx
  40dcae:	ret    
  40dcaf:	sbb    al,0x22
  40dcb1:	rol    BYTE PTR [edi],cl
  40dcb3:	clc    
  40dcb4:	dec    eax
  40dcb5:	push   0x2eb11f2b
  40dcba:	push   eax
  40dcbb:	pop    esi
  40dcbc:	pusha  
  40dcbd:	sbb    ebx,edx
  40dcbf:	ror    BYTE PTR [edi+0x5d],cl
  40dcc2:	clc    
  40dcc3:	mov    edx,0xb1881c61
  40dcc8:	jne    0x40dcdb
  40dcca:	pop    esp
  40dccb:	test   al,0xd9
  40dccd:	jno    0x40dd23
  40dccf:	jno    0x40dcea
  40dcd1:	mov    ecx,0xe911b224
  40dcd7:	iret   
  40dcd8:	push   esp
  40dcd9:	imul   eax,DWORD PTR [ebx+0x7e],0xffffff83
  40dcdd:	ja     0x40dc9b
  40dcdf:	jno    0x40dcad
  40dce1:	shr    BYTE PTR [ebx-0x7d8d24d6],cl
  40dce7:	push   ds
  40dce8:	fmul   QWORD PTR ds:0xed9f018f
  40dcee:	mov    ebp,0x7d388e4b
  40dcf3:	mov    al,0x83
  40dcf5:	clc    
  40dcf6:	jl     0x40dd44
  40dcf8:	add    ah,al
  40dcfa:	jns    0x40dd00
  40dcfc:	clc    
  40dcfd:	xor    eax,0xc2044933
  40dd02:	cld    
  40dd03:	outs   dx,BYTE PTR ds:[esi]
  40dd04:	sub    DWORD PTR [edx-0x4916d146],edi
  40dd0a:	(bad)  
  40dd0b:	outs   dx,BYTE PTR ds:[esi]
  40dd0c:	sub    bl,ah
  40dd0e:	fs icebp 
  40dd10:	repnz pop ebp
  40dd12:	clc    
  40dd13:	je     0x40dcb9
  40dd15:	jmp    0xeda78b7c
  40dd1a:	xchg   edi,eax
  40dd1b:	and    cl,dl
  40dd1d:	push   esi
  40dd1e:	aam    0x9b
  40dd20:	mov    DWORD PTR [esi-0x62],edi
  40dd23:	enter  0x647e,0x45
  40dd27:	aaa    
  40dd28:	mov    eax,ds:0xe108b2e5
  40dd2d:	jne    0x40dd6d
  40dd2f:	test   DWORD PTR [edx],0x64947b46
  40dd35:	mov    ch,0x31
  40dd37:	scas   eax,DWORD PTR es:[edi]
  40dd38:	out    0xb7,al
  40dd3a:	push   ebx
  40dd3b:	cmp    cl,dl
  40dd3d:	stos   DWORD PTR es:[edi],eax
  40dd3e:	arpl   WORD PTR [edi+esi*1],bx
  40dd41:	je     0x40dd09
  40dd43:	dec    edx
  40dd44:	mov    ch,0x2d
  40dd46:	add    al,ch
  40dd48:	fiadd  WORD PTR [esi]
  40dd4a:	lods   al,BYTE PTR ds:[esi]
  40dd4b:	pop    esp
  40dd4c:	sbb    DWORD PTR [ecx-0x7434a3c2],esi
  40dd52:	out    0xd5,al
  40dd54:	add    al,0x8
  40dd56:	std    
  40dd57:	adc    ecx,DWORD PTR [edi+esi*2-0x48f9e745]
  40dd5e:	xchg   ecx,eax
  40dd5f:	(bad)  
  40dd60:	imul   esp,ecx,0xd3bbd653
  40dd66:	in     eax,0x43
  40dd68:	cdq    
  40dd69:	xchg   BYTE PTR [edi+0xaef08f1],dh
  40dd6f:	ins    BYTE PTR es:[edi],dx
  40dd70:	mov    cs,WORD PTR [ecx]
  40dd72:	and    BYTE PTR [edi+0x20],cl
  40dd75:	mov    ebx,eax
  40dd77:	les    eax,FWORD PTR [ebx-0x3c]
  40dd7a:	fdivrp st(2),st
  40dd7c:	sti    
  40dd7d:	add    DWORD PTR [ebx],ebp
  40dd7f:	and    esp,DWORD PTR [edx-0x2f]
  40dd82:	retf   
  40dd83:	jmp    0x6d91:0x6550150f
  40dd8a:	add    ebx,esi
  40dd8c:	pop    esp
  40dd8d:	les    edx,FWORD PTR [edi+eiz*4]
  40dd90:	push   ds
  40dd91:	xchg   edx,eax
  40dd92:	sbb    DWORD PTR [ecx],0x2c3e8f0d
  40dd98:	sbb    eax,0xe6f27504
  40dd9d:	mov    BYTE PTR [ebx-0x7907cd48],bl
  40dda3:	mov    al,ds:0x781d1903
  40dda8:	dec    esi
  40dda9:	pop    ds
  40ddaa:	mov    al,0x79
  40ddac:	ds or  ecx,eax
  40ddaf:	pop    eax
  40ddb0:	dec    esp
  40ddb1:	not    BYTE PTR [esi]
  40ddb3:	xchg   BYTE PTR [eax+0x70],dl
  40ddb6:	dec    edx
  40ddb8:	push   bx
  40ddba:	mov    ds:0xec561a10,al
  40ddbf:	je     0x40de25
  40ddc1:	cld    
  40ddc2:	stos   DWORD PTR es:[edi],eax
  40ddc3:	or     eax,0xf5810449
  40ddc8:	lods   eax,DWORD PTR ds:[esi]
  40ddc9:	arpl   WORD PTR [eax+eax*8+0x19],di
  40ddcd:	mov    ecx,0x40caa986
  40ddd2:	popf   
  40ddd3:	mov    bl,0x23
  40ddd5:	fisttp WORD PTR [edx+0x6114fa99]
  40dddb:	jae    0x40ddbd
  40dddd:	mov    DWORD PTR [edx],edx
  40dddf:	and    esp,DWORD PTR [ebp-0x16]
  40dde2:	aad    0x7e
  40dde4:	push   0x648bbd6a
  40dde9:	pop    ss
  40ddea:	mov    al,0x76
  40ddec:	mov    edx,0x275e5025
  40ddf1:	test   ah,ch
  40ddf3:	pop    ss
  40ddf4:	push   0xbdfb6eeb
  40ddf9:	xor    dh,BYTE PTR [ecx+0x65cf69e1]
  40ddff:	jle    0x40de45
  40de01:	ss xchg ecx,eax
  40de03:	(bad)  
  40de04:	(bad)  
  40de05:	out    dx,al
  40de06:	(bad)  
  40de07:	jle    0x40de67
  40de09:	inc    ebx
  40de0a:	push   esp
  40de0b:	adc    ebp,ebx
  40de0d:	xor    al,0x8
  40de0f:	mov    DWORD PTR [esi-0x3f],edx
  40de12:	push   esp
  40de13:	jg     0x40ddeb
  40de15:	sbb    eax,0x52b7159
  40de1a:	imul   ecx,DWORD PTR ds:0x86a9ad5b,0xffffffda
  40de21:	sub    dh,BYTE PTR [eax+edx*8-0x28c401b8]
  40de28:	call   0xf8913ff7
  40de2d:	ficomp DWORD PTR [eax+ebx*8-0x4adc48d4]
  40de34:	daa    
  40de35:	pushf  
  40de36:	sbb    DWORD PTR [eax+0x7d],edx
  40de39:	mov    al,ds:0xbf9a21e3
  40de3e:	and    DWORD PTR [eax-0x54],esp
  40de41:	jne    0x40de08
  40de43:	dec    esi
  40de44:	pop    es
  40de45:	pop    es
  40de46:	mov    ?,WORD PTR [ecx]
  40de48:	pop    ebx
  40de49:	fadd   DWORD PTR [eax]
  40de4b:	jl     0x40de1e
  40de4d:	lods   al,BYTE PTR ds:[esi]
  40de4e:	sbb    DWORD PTR [esp+edi*4+0x20157eb3],ebx
  40de55:	xchg   ebx,eax
  40de56:	add    BYTE PTR ds:0xfc1d27bf,cl
  40de5c:	neg    ch
  40de5e:	lods   al,BYTE PTR ds:[esi]
  40de5f:	sbb    esi,DWORD PTR [edi-0x24bfdc8d]
  40de65:	dec    ebp
  40de66:	sub    DWORD PTR [esi],ecx
  40de68:	mov    ds:0xf36c6cb6,eax
  40de6d:	adc    esi,DWORD PTR [edi]
  40de6f:	(bad)  [ebp-0x78]
  40de72:	xchg   DWORD PTR [ebp+0x37],edi
  40de75:	or     cl,BYTE PTR [edx-0x53265673]
  40de7b:	cld    
  40de7c:	push   es
  40de7d:	and    cl,BYTE PTR [esi-0x23]
  40de80:	push   0xbefa03b
  40de85:	(bad)
  40de88:	movsx  edx,WORD PTR [ebx+0x1c38231]
  40de8f:	cmp    eax,ecx
  40de91:	jle    0x40de7a
  40de93:	ja     0x40de3e
  40de95:	xchg   edi,eax
  40de96:	cwde   
  40de97:	or     al,0x4a
  40de99:	pop    edi
  40de9a:	mov    ebx,DWORD PTR [ebp+0x29]
  40de9d:	scas   al,BYTE PTR es:[edi]
  40de9e:	push   edx
  40de9f:	and    DWORD PTR [eax-0x4d],ebx
  40dea2:	push   cs
  40dea3:	sbb    BYTE PTR [esp+ebx*4-0x3e],dl
  40dea7:	ret    
  40dea8:	and    edx,esp
  40deaa:	mov    ch,0x7
  40deac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dead:	fidivr DWORD PTR [edi+ebp*8-0x78dd0aa2]
  40deb4:	sbb    eax,0x580c6ed6
  40deb9:	sub    ch,BYTE PTR [ecx+0x245aed66]
  40debf:	cwde   
  40dec0:	mov    BYTE PTR [edi+0xad2fbdc],0x68
  40dec7:	(bad)  
  40dec8:	inc    esi
  40dec9:	scas   eax,DWORD PTR es:[edi]
  40deca:	pop    ebp
  40decb:	pop    ds
  40decc:	or     al,0x8d
  40dece:	inc    esi
  40decf:	or     ebp,DWORD PTR [edx]
  40ded1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ded2:	dec    ebx
  40ded3:	jns    0x40dec1
  40ded5:	pop    esi
  40ded6:	gs mov cl,0xd4
  40ded9:	mov    esi,eax
  40dedb:	or     eax,0x83bab827
  40dee0:	jg     0x40ded0
  40dee2:	sub    DWORD PTR [ecx-0x62],eax
  40dee5:	in     eax,0x49
  40dee7:	nop
  40dee8:	test   BYTE PTR [ebx-0x7d],ah
  40deeb:	mov    ecx,0x94a37510
  40def0:	bnd jnp 0x40ded9
  40def3:	cli    
  40def4:	add    al,dh
  40def6:	push   cs
  40def7:	popf   
  40def8:	mov    edx,0x29d3c76e
  40defd:	pusha  
  40defe:	add    ebp,eax
  40df00:	adc    DWORD PTR [ebx-0x354b6939],esi
  40df06:	sub    eax,0x9dd22567
  40df0b:	push   ebp
  40df0c:	fstp   TBYTE PTR [ebx]
  40df0e:	dec    ebp
  40df0f:	(bad)  
  40df10:	and    cl,BYTE PTR [ebp-0x43]
  40df13:	mov    ah,0xc6
  40df15:	stos   BYTE PTR es:[edi],al
  40df16:	pop    ebp
  40df17:	pop    ds
  40df18:	das    
  40df19:	unpckhps xmm2,XMMWORD PTR ss:[ebx-0x3f]
  40df1e:	mov    ds:0xc8a33d15,eax
  40df23:	mov    DWORD PTR [eax-0x12e5bbd4],ecx
  40df29:	dec    ecx
  40df2a:	vmwrite esp,DWORD PTR [edx+esi*8+0x53239f60]
  40df32:	leave  
  40df33:	fmul   DWORD PTR [ecx-0x55]
  40df36:	mov    ecx,0xf1d3e4a3
  40df3b:	test   BYTE PTR [edx+eiz*1-0x4a],dh
  40df3f:	dec    ecx
  40df40:	lods   eax,DWORD PTR ds:[esi]
  40df41:	(bad)  
  40df43:	shl    dh,0xdf
  40df46:	stc    
  40df47:	xor    ah,BYTE PTR [eax+0x3d]
  40df4a:	mov    ecx,0x926d01f1
  40df4f:	dec    DWORD PTR [esp+ebx*4-0x20ffdda7]
  40df56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df57:	je     0x40df2a
  40df59:	call   0xee93:0xd5eac5b4
  40df60:	sub    al,0x85
  40df62:	rcr    DWORD PTR [edx],0x8c
  40df65:	mov    edx,0x470e722d
  40df6a:	shl    BYTE PTR [edi+0x7f212672],cl
  40df70:	outs   dx,DWORD PTR ds:[esi]
  40df71:	mov    bh,0x86
  40df73:	dec    edx
  40df74:	push   eax
  40df75:	mov    bl,0xa3
  40df77:	ucomiss xmm1,DWORD PTR [edi+0x1]
  40df7b:	dec    esi
  40df7c:	sub    bl,ch
  40df7e:	jo     0x40df4b
  40df80:	jmp    0xda54:0x27b28d76
  40df87:	mov    eax,0x6404ef94
  40df8c:	jbe    0x40df3f
  40df8e:	inc    di
  40df90:	or     al,0x12
  40df92:	and    dh,BYTE PTR [ecx]
  40df94:	(bad)  
  40df95:	int3   
  40df96:	or     BYTE PTR [esi+0x1127762f],dh
  40df9c:	cmp    ebx,esp
  40df9e:	(bad)  
  40df9f:	int3   
  40dfa0:	add    ecx,DWORD PTR [esp+ebp*4-0x1263db57]
  40dfa7:	ror    DWORD PTR [esi+0x28],1
  40dfaa:	jae    0x40dfaa
  40dfac:	or     dl,ah
  40dfae:	in     eax,0x80
  40dfb0:	sbb    al,0xa6
  40dfb2:	push   0xffffffd8
  40dfb4:	imul   edi,DWORD PTR [eax],0xffffffc0
  40dfb7:	test   BYTE PTR [ecx+edi*2-0xeaae383],bh
  40dfbe:	or     esp,ebp
  40dfc0:	js     0x40dfaf
  40dfc2:	push   esp
  40dfc3:	js     0x40df6d
  40dfc5:	sub    eax,0x1f5e1ac4
  40dfca:	and    eax,0xb232f33c
  40dfcf:	(bad)  
  40dfd0:	jmp    0x40df7c
  40dfd2:	sbb    al,0x7c
  40dfd4:	xor    dh,BYTE PTR [ecx]
  40dfd6:	(bad)  
  40dfd8:	in     al,0xe0
  40dfda:	push   edx
  40dfdb:	lods   al,BYTE PTR ds:[esi]
  40dfdc:	sub    eax,0xd2711414
  40dfe1:	xchg   esi,eax
  40dfe2:	mov    ch,0x59
  40dfe4:	out    dx,eax
  40dfe5:	mov    bh,0xe7
  40dfe7:	iret   
  40dfe8:	(bad)  
  40dfe9:	dec    ecx
  40dfea:	sub    ah,dh
  40dfec:	add    DWORD PTR [edi+0x3af48011],ebp
  40dff2:	sbb    eax,0x8c7eb88a
  40dff7:	mov    dl,0xe
  40dff9:	inc    esp
  40dffa:	add    DWORD PTR [ebp+0x6c34c181],esi
  40e000:	cmp    al,0x44
  40e002:	fild   WORD PTR [esi+0x285da4f2]
  40e008:	aaa    
  40e009:	xchg   edx,eax
  40e00a:	add    ecx,esi
  40e00c:	mov    edi,0x17677cee
  40e011:	cmc    
  40e012:	ret    0x9968
  40e015:	push   ds
  40e016:	xor    DWORD PTR [ecx+edi*1],esp
  40e019:	out    0x23,eax
  40e01b:	stos   DWORD PTR es:[edi],eax
  40e01c:	outs   dx,DWORD PTR ds:[esi]
  40e01d:	fistp  QWORD PTR [edi+eiz*1+0xadf4d7f]
  40e024:	dec    ebp
  40e025:	or     eax,0xb554cedb
  40e02a:	mov    ?,WORD PTR [edi-0x74]
  40e02d:	inc    esp
  40e02e:	aam    0x1
  40e030:	sbb    dh,ch
  40e032:	out    dx,eax
  40e033:	xchg   edi,eax
  40e034:	je     0x40e02e
  40e036:	push   0x55
  40e038:	shl    BYTE PTR [edi+0x48],1
  40e03b:	add    ah,BYTE PTR [edi+eax*8+0x50]
  40e03f:	pushf  
  40e040:	pushf  
  40e041:	sbb    BYTE PTR [ebx+0x64],0x58
  40e045:	loope  0x40dfe5
  40e047:	pop    DWORD PTR [edi+0x22]
  40e04a:	or     ch,BYTE PTR [edi+0xe]
  40e04d:	mov    ds:0x836d5554,al
  40e052:	pop    ebx
  40e053:	std    
  40e054:	mov    edx,0xb585c81a
  40e059:	sub    esi,DWORD PTR [edi+eax*2]
  40e05c:	aad    0xac
  40e05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e05f:	pop    ebp
  40e060:	faddp  st(5),st
  40e062:	sub    DWORD PTR [esi],edx
  40e064:	and    al,0xd0
  40e066:	cmp    DWORD PTR [esi-0x3e],0xffffffbf
  40e06a:	sbb    ah,BYTE PTR [ecx]
  40e06c:	mov    ebx,0x96e51928
  40e071:	or     bl,BYTE PTR [ecx-0xb104c60]
  40e077:	add    BYTE PTR [ebp+ebx*2-0x5a],dh
  40e07b:	sbb    esp,DWORD PTR [ecx+0x16a7ea09]
  40e081:	xchg   ebp,eax
  40e082:	lahf   
  40e083:	cmp    eax,0x9851bebb
  40e088:	jmp    0xc18e8b8e
  40e08d:	mov    bh,0x67
  40e08f:	or     DWORD PTR [ecx],ebx
  40e091:	xchg   ebp,eax
  40e092:	adc    al,0xb3
  40e094:	inc    ebp
  40e095:	push   esp
  40e096:	test   BYTE PTR [edx],ch
  40e098:	jecxz  0x40e10e
  40e09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e09b:	xchg   esi,eax
  40e09c:	add    eax,0x3eff75e6
  40e0a1:	mov    DWORD PTR [esi],ebx
  40e0a3:	xchg   BYTE PTR [ebx],al
  40e0a5:	fbstp  TBYTE PTR [ebx-0x35]
  40e0a8:	in     eax,0x9f
  40e0aa:	in     al,dx
  40e0ab:	aas    
  40e0ac:	cmp    DWORD PTR [esi+0x31a6e85],ebx
  40e0b2:	cmp    DWORD PTR [eax+eiz*2-0x12],0xffffffab
  40e0b7:	or     eax,0xf0b9518
  40e0bc:	xchg   edi,eax
  40e0bd:	(bad)  
  40e0be:	outs   dx,DWORD PTR ds:[esi]
  40e0bf:	sar    BYTE PTR [ebp+0x53],0x4d
  40e0c3:	mov    DWORD PTR gs:[edi+ebx*2],ebx
  40e0c7:	ror    DWORD PTR [eax],1
  40e0c9:	or     DWORD PTR [esi+ebp*1-0x23861ac3],esi
  40e0d0:	ret    0xdc7f
  40e0d3:	mov    esi,0xe78c0a09
  40e0d8:	shl    BYTE PTR [edi-0x47507a5c],1
  40e0de:	push   ebx
  40e0df:	aas    
  40e0e0:	inc    ecx
  40e0e1:	sbb    eax,0x82083014
  40e0e6:	sbb    BYTE PTR [edx+0x939fbab],0x77
  40e0ed:	jge    0x40e088
  40e0ef:	in     eax,0x2a
  40e0f1:	mov    esp,0x207716a6
  40e0f6:	sbb    dl,BYTE PTR [eax+0x37]
  40e0f9:	popa   
  40e0fa:	pop    ebp
  40e0fb:	jbe    0x40e111
  40e0fd:	ds push ebp
  40e0ff:	fcomp  QWORD PTR [ecx]
  40e101:	loope  0x40e0af
  40e103:	dec    ecx
  40e104:	outs   dx,DWORD PTR ds:[esi]
  40e105:	test   eax,0xcbd8362c
  40e10b:	in     eax,0x47
  40e10d:	mov    edx,0x2d6eb9b4
  40e112:	mov    bl,0x30
  40e114:	scas   al,BYTE PTR es:[edi]
  40e115:	jp     0x40e0a4
  40e117:	jp     0x40e0f5
  40e119:	pop    edi
  40e11a:	lods   eax,DWORD PTR ds:[esi]
  40e11b:	and    ebx,DWORD PTR [edi+0x2a004e34]
  40e121:	inc    esp
  40e122:	or     BYTE PTR [ecx+eiz*8-0x34809d52],0x8b
  40e12a:	inc    esp
  40e12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e12c:	ret    
  40e12d:	int3   
  40e12e:	pop    ds
  40e12f:	call   0xfdca80fa
  40e134:	or     eax,0xd6abea5b
  40e139:	adc    dl,0xa4
  40e13c:	hlt    
  40e13d:	mov    esp,DWORD PTR [ebp+0x2e7e33f8]
  40e143:	icebp  
  40e144:	mov    ecx,0x7fa74f73
  40e149:	in     al,dx
  40e14a:	or     DWORD PTR [ecx+0x1c],edi
  40e14d:	std    
  40e14e:	ja     0x40e1cf
  40e150:	stos   BYTE PTR es:[edi],al
  40e151:	int    0xe1
  40e153:	pop    ss
  40e154:	stos   DWORD PTR es:[edi],eax
  40e155:	xor    al,0x5b
  40e157:	mov    ch,0xe7
  40e159:	push   edx
  40e15a:	call   0xa62:0xaf6a6f01
  40e161:	in     al,0x26
  40e163:	pop    ss
  40e164:	cmp    al,0xf7
  40e166:	ins    DWORD PTR es:[edi],dx
  40e167:	xor    eax,0xa0273328
  40e16c:	cmp    DWORD PTR [edi+eax*4],ebp
  40e16f:	popa   
  40e170:	and    BYTE PTR [esi],bl
  40e172:	mov    eax,0xfd76be05
  40e177:	jmp    0xf777:0xb876865d
  40e17e:	dec    eax
  40e17f:	jle    0x40e143
  40e181:	retf   
  40e182:	cs leave 
  40e184:	cmc    
  40e185:	iret   
  40e186:	fst    DWORD PTR [edx-0x402a806d]
  40e18c:	lods   al,BYTE PTR ds:[esi]
  40e18d:	ja     0x40e18a
  40e18f:	fisttp QWORD PTR [ebp-0x16ac89ea]
  40e195:	imul   edi,DWORD PTR [ebx+0x4f5bb9b0],0x6
  40e19c:	and    ch,BYTE PTR [edx-0x7a]
  40e19f:	popa   
  40e1a0:	popf   
  40e1a1:	cmp    al,0xab
  40e1a3:	push   ebp
  40e1a4:	out    dx,al
  40e1a5:	mov    ah,0xaf
  40e1a7:	sub    eax,0x4f53f8e3
  40e1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1ad:	adc    eax,0xade86188
  40e1b2:	xor    dl,bh
  40e1b4:	jb     0x40e13c
  40e1b6:	sahf   
  40e1b7:	xlat   BYTE PTR ds:[ebx]
  40e1b8:	sub    al,0x9c
  40e1ba:	(bad)  [eax]
  40e1bc:	push   ss
  40e1bd:	adc    ah,0xdc
  40e1c0:	inc    esi
  40e1c1:	rcr    edx,0x37
  40e1c4:	mov    edx,0xc37e8a91
  40e1c9:	inc    edi
  40e1ca:	sbb    eax,0x68be7330
  40e1cf:	cli    
  40e1d0:	xchg   DWORD PTR [eax],edx
  40e1d2:	je     0x40e200
  40e1d4:	gs (bad) 
  40e1d6:	mov    dl,dh
  40e1d8:	imul   esi,DWORD PTR [edi+ebx*8],0xfaad3d3
  40e1df:	push   edx
  40e1e0:	outs   dx,BYTE PTR ds:[esi]
  40e1e1:	mov    edx,0x5cd4eaa1
  40e1e6:	xchg   bh,cl
  40e1e8:	and    al,0xd8
  40e1ea:	ja     0x40e1c5
  40e1ec:	(bad)  
  40e1ed:	xchg   ebx,eax
  40e1ee:	mov    eax,ds:0x3701a34c
  40e1f3:	lahf   
  40e1f4:	cdq    
  40e1f5:	lods   eax,DWORD PTR ds:[esi]
  40e1f6:	mov    ebx,DWORD PTR [ebx-0x456f9c7d]
  40e1fc:	mov    ecx,0x819b2003
  40e201:	sti    
  40e202:	jecxz  0x40e1d4
  40e204:	aad    0xab
  40e206:	fnstcw WORD PTR [edi+edi*2-0x8]
  40e20a:	mov    edx,DWORD PTR [ebx]
  40e20c:	xchg   DWORD PTR [ebx-0x5a],ebp
  40e20f:	aaa    
  40e210:	hlt    
  40e211:	inc    ebx
  40e212:	mov    ecx,0x782bd7f9
  40e217:	sar    cl,1
  40e219:	aaa    
  40e21a:	retf   
  40e21b:	jo     0x40e208
  40e21d:	pop    es
  40e21e:	mov    ecx,0x7bd5d9fe
  40e223:	es dec esp
  40e225:	mov    eax,0x4810282c
  40e22a:	nop
  40e22b:	cwde   
  40e22c:	clc    
  40e22d:	retf   
  40e22e:	outs   dx,BYTE PTR ds:[esi]
  40e22f:	daa    
  40e230:	ins    DWORD PTR es:[edi],dx
  40e231:	stos   DWORD PTR es:[edi],eax
  40e232:	jae    0x40e21a
  40e234:	pop    DWORD PTR [edx]
  40e236:	dec    edx
  40e237:	test   al,0xf8
  40e239:	or     ecx,ebx
  40e23b:	push   eax
  40e23c:	ja     0x40e28e
  40e23e:	ds xchg cl,al
  40e241:	rcl    BYTE PTR [ebx+eiz*1],1
  40e244:	dec    esi
  40e245:	jns    0x40e209
  40e247:	(bad)  
  40e248:	mov    ds:0x50bb840c,eax
  40e24d:	out    0x30,al
  40e24f:	jle    0x40e29d
  40e251:	sub    ebp,DWORD PTR [ecx+0xd]
  40e254:	mov    eax,0x53a6b283
  40e259:	(bad)  
  40e25b:	mov    ?,WORD PTR [esi]
  40e25d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e25e:	lea    edi,[eax]
  40e260:	out    0x3d,eax
  40e262:	xchg   ecx,eax
  40e263:	icebp  
  40e264:	in     eax,0xd2
  40e266:	jbe    0x40e2b4
  40e268:	rcl    DWORD PTR ds:0x7e5427b9,cl
  40e26e:	cmp    eax,0x84582694
  40e273:	cmp    esi,DWORD PTR [edx+0x33]
  40e276:	add    ch,ah
  40e278:	ss rol esp,cl
  40e27b:	das    
  40e27c:	ds inc esi
  40e27e:	mov    ebp,0xb1146a5f
  40e283:	mov    edx,0xbdff5578
  40e288:	arpl   cx,si
  40e28a:	pop    esp
  40e28b:	sub    bl,BYTE PTR [edi+0x1f]
  40e28e:	push   ebx
  40e28f:	out    0x98,eax
  40e291:	push   ds
  40e292:	cmp    eax,DWORD PTR gs:[ecx+eiz*2]
  40e296:	out    dx,al
  40e297:	add    DWORD PTR [ebp-0x65],edx
  40e29a:	lock adc BYTE PTR fs:[esi+esi*2],dh
  40e29f:	sbb    ebx,DWORD PTR [ecx+ecx*8+0x2235037b]
  40e2a6:	sbb    BYTE PTR [edi],bl
  40e2a8:	mov    cl,0x9f
  40e2aa:	mov    ?,WORD PTR [ebx+0x63]
  40e2ad:	inc    ecx
  40e2ae:	pop    esp
  40e2af:	adc    DWORD PTR [eax+0x6c3bee26],edx
  40e2b5:	mov    eax,ds:0x5615678d
  40e2ba:	jne    0x40e2a0
  40e2bc:	rep stos BYTE PTR es:[edi],al
  40e2be:	pop    edi
  40e2bf:	aas    
  40e2c0:	xchg   ebx,eax
  40e2c1:	(bad)  
  40e2c2:	retf   0x4f89
  40e2c5:	dec    esp
  40e2c6:	mov    edi,0x7bae6aa9
  40e2cb:	std    
  40e2cc:	repnz push edx
  40e2ce:	rcl    BYTE PTR [ebx+edx*8+0x3d07a538],0x4f
  40e2d6:	es pop ebx
  40e2d8:	mov    al,BYTE PTR [esi-0x173f17ce]
  40e2de:	dec    DWORD PTR [ebx]
  40e2e0:	push   esi
  40e2e1:	xchg   ebp,eax
  40e2e2:	test   BYTE PTR [ebx+0x50],bh
  40e2e5:	ins    DWORD PTR es:[edi],dx
  40e2e6:	mov    eax,0xd3960f94
  40e2eb:	adc    esp,0xe0a6bffd
  40e2f1:	and    DWORD PTR [ebp-0x4b],ebx
  40e2f4:	neg    edi
  40e2f6:	loopne 0x40e374
  40e2f8:	mov    edx,0x276cebac
  40e2fd:	pop    esi
  40e2fe:	(bad)  
  40e2ff:	out    dx,eax
  40e300:	jmp    0x96fdc8f5
  40e305:	fidiv  WORD PTR [esi+0x6b]
  40e308:	pop    esi
  40e309:	repnz mov bh,BYTE PTR ds:0x3af25d6c
  40e310:	repz jmp 0xf4fd4ce2
  40e316:	dec    esp
  40e317:	add    al,0x3e
  40e319:	cmp    DWORD PTR [ebp+0x46ffe2ba],edi
  40e31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e320:	loopne 0x40e2b7
  40e322:	stos   BYTE PTR es:[edi],al
  40e323:	and    ch,dh
  40e325:	mov    eax,ebp
  40e327:	xchg   BYTE PTR [edi],bh
  40e329:	dec    edx
  40e32a:	lea    ebp,[esi]
  40e32c:	and    al,0x3b
  40e32e:	push   esp
  40e32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e330:	lock enter 0xd4f7,0xc3
  40e335:	sbb    al,0x97
  40e337:	inc    ebp
  40e338:	pop    edi
  40e339:	or     DWORD PTR [edx+0x385fb39d],edi
  40e33f:	and    BYTE PTR [edi-0x79ba42b9],dh
  40e345:	push   esp
  40e346:	hlt    
  40e347:	inc    edi
  40e348:	adc    al,0x1a
  40e34a:	and    BYTE PTR [esi-0x2e04ee0e],0x41
  40e351:	pop    DWORD PTR [ecx+0x57]
  40e354:	sbb    BYTE PTR [ebp+0x4f],bh
  40e357:	mov    ebx,0x596277a9
  40e35c:	icebp  
  40e35d:	jg     0x40e3b6
  40e35f:	jecxz  0x40e2fa
  40e361:	mov    ch,0xaa
  40e363:	xchg   esp,eax
  40e364:	fnstcw WORD PTR [edx-0x79e39fbb]
  40e36a:	sub    DWORD PTR [ecx],ecx
  40e36c:	nop
  40e36d:	test   BYTE PTR [ecx+0x452dc65d],al
  40e373:	xchg   BYTE PTR [ecx],dh
  40e375:	jbe    0x40e307
  40e377:	inc    ecx
  40e378:	out    0x62,eax
  40e37a:	div    bl
  40e37c:	(bad)  
  40e37d:	retf   
  40e37e:	pop    ebp
  40e37f:	fld    DWORD PTR [esi]
  40e381:	add    DWORD PTR [edi-0x2370faad],edx
  40e387:	(bad)  
  40e389:	test   DWORD PTR [edx+0x72],esp
  40e38c:	sub    BYTE PTR [esi-0x42],al
  40e38f:	or     esp,DWORD PTR [ebp-0x4f]
  40e392:	mov    ebx,?
  40e394:	cmp    eax,0x7a2bc890
  40e399:	loop   0x40e3eb
  40e39b:	or     al,0x5b
  40e39d:	inc    edi
  40e39e:	loop   0x40e330
  40e3a0:	pop    ebx
  40e3a1:	shr    al,0x54
  40e3a4:	xchg   edi,eax
  40e3a5:	mov    ds:0xa21d663a,eax
  40e3aa:	push   ebp
  40e3ab:	je     0x40e357
  40e3ad:	xor    dh,ah
  40e3af:	mov    al,0xfe
  40e3b1:	es fadd st,st(5)
  40e3b4:	(bad)  
  40e3b5:	clc    
  40e3b6:	out    0xb1,al
  40e3b8:	and    BYTE PTR [esi+0x11f5f7ba],cl
  40e3be:	mov    bh,0x23
  40e3c0:	jl     0x40e408
  40e3c2:	in     eax,dx
  40e3c3:	cmp    eax,0xa1be596a
  40e3c8:	iret   
  40e3c9:	pop    ebx
  40e3ca:	jl     0x40e40d
  40e3cc:	arpl   WORD PTR [ebx],bp
  40e3ce:	inc    edi
  40e3cf:	or     al,0x19
  40e3d1:	mov    cl,0xb3
  40e3d3:	test   dh,cl
  40e3d5:	mov    edx,0xc860ff57
  40e3da:	popa   
  40e3db:	push   ebp
  40e3dc:	loopne 0x40e41d
  40e3de:	xor    al,0x74
  40e3e0:	sbb    edi,DWORD PTR [edi-0x6a]
  40e3e3:	sub    eax,0x20368ae4
  40e3e8:	jb     0x40e3fa
  40e3ea:	sbb    al,cl
  40e3ec:	xchg   edx,eax
  40e3ed:	and    al,0x7c
  40e3ef:	jae    0x40e3d5
  40e3f1:	mov    WORD PTR [edi-0x26],ds
  40e3f4:	cmp    eax,0xb182dac5
  40e3f9:	and    al,0x25
  40e3fb:	push   esi
  40e3fc:	dec    edx
  40e3fd:	repz das 
  40e3ff:	jge    0x40e3d8
  40e401:	xchg   esp,eax
  40e402:	aad    0xc0
  40e404:	add    BYTE PTR [esi+0x5d],bl
  40e407:	in     eax,dx
  40e408:	scas   al,BYTE PTR es:[edi]
  40e409:	adc    al,0xbe
  40e40b:	mov    ebp,0x6a0bbe8e
  40e410:	push   ebx
  40e411:	das    
  40e412:	and    esi,DWORD PTR [esi-0x3c5943bf]
  40e418:	or     WORD PTR [esi-0xdfab7d0],sp
  40e41f:	dec    edx
  40e420:	push   ecx
  40e421:	mov    al,ds:0x518907a
  40e426:	or     cl,BYTE PTR [ebx+0x70]
  40e429:	cdq    
  40e42a:	in     eax,0x33
  40e42c:	fadd   QWORD PTR [edi-0x7f]
  40e42f:	and    BYTE PTR [ebx+0x791c0502],dh
  40e435:	cdq    
  40e436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e437:	nop
  40e438:	fcmovnbe st,st(5)
  40e43a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e43b:	clc    
  40e43c:	ds and eax,0x7290cba8
  40e442:	out    0x6,al
  40e444:	je     0x40e47b
  40e446:	int    0xb4
  40e448:	pop    ss
  40e449:	dec    edi
  40e44a:	dec    ecx
  40e44b:	or     al,0x46
  40e44d:	test   BYTE PTR [esp+edi*8],dl
  40e450:	ja     0x40e478
  40e452:	outs   dx,BYTE PTR ds:[esi]
  40e453:	xor    DWORD PTR [edi+0x4d9b03d8],eax
  40e459:	or     edi,esp
  40e45b:	bt     DWORD PTR [edx+0x7397c367],esi
  40e462:	sahf   
  40e463:	push   edx
  40e464:	ins    BYTE PTR es:[edi],dx
  40e465:	inc    ebx
  40e466:	inc    ebx
  40e467:	mov    ebp,0x752a2c20
  40e46c:	icebp  
  40e46d:	mov    dl,0xe3
  40e46f:	pop    ss
  40e470:	xchg   edi,eax
  40e471:	inc    esp
  40e472:	pop    eax
  40e473:	lea    ebp,[ebx]
  40e475:	ds xor al,0x21
  40e478:	das    
  40e479:	or     eax,0x3cc5ab14
  40e47e:	sub    BYTE PTR [edx],dl
  40e480:	sub    eax,DWORD PTR [ebx+0x49]
  40e483:	mov    ecx,0xcd6f96c3
  40e488:	lods   eax,DWORD PTR ds:[esi]
  40e489:	rcr    edx,0xe0
  40e48c:	adc    eax,0xbe764bdd
  40e491:	and    edi,DWORD PTR ds:0x83e02ee8
  40e497:	mov    ah,0x60
  40e499:	out    dx,al
  40e49a:	jp     0x40e4d2
  40e49c:	leave  
  40e49d:	addr16 or al,0x9
  40e4a1:	mov    esp,0x69018abf
  40e4a6:	cdq    
  40e4a7:	imul   esi,edi,0xfcc40e4f
  40e4ad:	cwde   
  40e4ae:	and    ebp,ebp
  40e4b0:	xor    cl,BYTE PTR [edx]
  40e4b2:	aam    0x29
  40e4b4:	mov    es,edi
  40e4b6:	imul   eax,DWORD PTR ds:0xf59e6125,0xda1f8188
  40e4c0:	(bad)  
  40e4c1:	mov    al,0x6c
  40e4c3:	jns    0x40e4ec
  40e4c5:	push   ebp
  40e4c6:	jecxz  0x40e4d1
  40e4c8:	push   ds
  40e4c9:	fistp  DWORD PTR [ecx+eax*2]
  40e4cc:	xor    al,0xa2
  40e4ce:	sbb    BYTE PTR [esi-0x70022020],al
  40e4d4:	imul   edi,DWORD PTR [edx+0x441032e5],0x0
  40e4db:	outs   dx,BYTE PTR ds:[esi]
  40e4dc:	jle    0x40e471
  40e4de:	pop    ebx
  40e4df:	add    al,0x97
  40e4e1:	sub    BYTE PTR [ebx],bh
  40e4e3:	iret   
  40e4e4:	xchg   esi,eax
  40e4e5:	push   ebp
  40e4e6:	mov    ds:0xfe7e808d,eax
  40e4eb:	es cld 
  40e4ed:	jp     0x40e4c2
  40e4ef:	cmp    bh,BYTE PTR [ebx]
  40e4f1:	mov    edi,0xa6e92299
  40e4f6:	inc    esi
  40e4f7:	aas    
  40e4f8:	sar    BYTE PTR [ebp-0x4c3449cb],0x75
  40e4ff:	mov    al,ds:0x4c4c759c
  40e504:	in     eax,0xe8
  40e506:	jp     0x40e508
  40e508:	sti    
  40e509:	jg     0x40e58a
  40e50b:	fistp  QWORD PTR ds:0xab9ada16
  40e511:	in     al,dx
  40e512:	out    dx,eax
  40e513:	add    ah,cl
  40e515:	sbb    al,0xa3
  40e517:	(bad)  
  40e518:	lods   al,BYTE PTR ds:[esi]
  40e519:	and    dh,BYTE PTR [ecx]
  40e51b:	mov    ah,BYTE PTR [eax-0xc]
  40e51e:	xor    ebx,DWORD PTR [eax-0x4355811d]
  40e524:	adc    edi,DWORD PTR [edi-0x37]
  40e527:	xor    edi,ecx
  40e529:	(bad)  
  40e52a:	aas    
  40e52b:	sbb    DWORD PTR [esi],ebx
  40e52d:	sahf   
  40e52e:	fnstsw WORD PTR [edi]
  40e530:	scas   eax,DWORD PTR es:[edi]
  40e531:	jns    0x40e59b
  40e533:	mov    cl,0xc4
  40e535:	jmp    0x80cc:0x418a193f
  40e53c:	inc    edx
  40e53d:	xchg   ecx,eax
  40e53e:	push   es
  40e53f:	cmp    eax,0x97a4c67a
  40e544:	ficom  WORD PTR [eax+0x2e2fa901]
  40e54a:	pop    ebx
  40e54b:	test   BYTE PTR cs:[ecx],cl
  40e54e:	div    DWORD PTR [eax+0x1094c61d]
  40e554:	or     al,0x99
  40e556:	int3   
  40e557:	int    0x1b
  40e559:	mov    ah,0x84
  40e55b:	test   BYTE PTR [edi],ch
  40e55d:	ins    DWORD PTR es:[edi],dx
  40e55e:	push   ebx
  40e55f:	int    0x17
  40e561:	ret    0xca49
  40e564:	test   DWORD PTR [ebx-0x5cb50d8b],ecx
  40e56a:	adc    al,0xc6
  40e56c:	jmp    0x27c0:0x635e384a
  40e573:	mov    DWORD PTR [ebx+0x6ec05b24],esp
  40e579:	push   ebx
  40e57a:	jno    0x40e5d8
  40e57c:	jne    0x40e50b
  40e57e:	cli    
  40e57f:	xchg   ecx,eax
  40e580:	rcr    ah,1
  40e582:	imul   esp,DWORD PTR [ebx-0x63846082],0xa89cde53
  40e58c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e58d:	sti    
  40e58e:	add    al,0x86
  40e590:	loope  0x40e54a
  40e592:	aas    
  40e593:	jp     0x40e5bb
  40e595:	hlt    
  40e596:	fimul  DWORD PTR [edx]
  40e598:	xor    DWORD PTR [ebx-0x4d],edi
  40e59b:	push   edi
  40e59c:	int3   
  40e59d:	jne    0x40e5a2
  40e59f:	fadd   QWORD PTR [edi+0x17392cc6]
  40e5a5:	push   cs
  40e5a6:	pop    eax
  40e5a7:	mov    ch,0x76
  40e5a9:	xchg   BYTE PTR ds:0x9f0c0f5d,ah
  40e5af:	mov    fs,esi
  40e5b1:	imul   ebp,esp,0x81db1af8
  40e5b7:	sti    
  40e5b8:	test   dh,0x3e
  40e5bb:	mov    edi,0xdcfff5bd
  40e5c0:	push   ss
  40e5c1:	out    dx,eax
  40e5c2:	or     DWORD PTR [ebx],eax
  40e5c4:	adc    DWORD PTR [ebp+0x36],ebp
  40e5c7:	mov    esp,0x65a871c0
  40e5cc:	mov    gs,WORD PTR [ebx+0x70]
  40e5cf:	mov    esi,0xe6d42a2d
  40e5d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5d5:	fnsave [ebx]
  40e5d7:	scas   al,BYTE PTR es:[edi]
  40e5d8:	adc    BYTE PTR [eax+0x42f426b2],ch
  40e5de:	or     al,cl
  40e5e0:	stc    
  40e5e1:	mov    al,0x4f
  40e5e3:	adc    edx,esp
  40e5e5:	sbb    DWORD PTR [edx-0x66faeceb],eax
  40e5eb:	sbb    al,0xfc
  40e5ed:	int    0x6f
  40e5ef:	cli    
  40e5f0:	xchg   ebp,eax
  40e5f1:	or     DWORD PTR [ebx+0x68466c44],ecx
  40e5f7:	ror    BYTE PTR [ebx],cl
  40e5f9:	jne    0x40e5c4
  40e5fb:	add    al,0x48
  40e5fd:	sub    DWORD PTR ds:0x1294cca8,esp
  40e603:	iret   
  40e604:	int3   
  40e605:	sub    al,dh
  40e607:	stc    
  40e608:	dec    edx
  40e609:	shl    DWORD PTR [ebx],0x33
  40e60c:	mov    ds:0x265dd6dc,eax
  40e611:	in     al,dx
  40e612:	jmp    0x45c379e7
  40e617:	mov    cl,0x8
  40e619:	imul   ecx,DWORD PTR [ebx-0x7eb08386],0xffffffb9
  40e620:	repz fcom st(6)
  40e623:	(bad)  
  40e624:	aam    0x4e
  40e626:	retf   
  40e627:	jmp    0x1c07:0x350f61d4
  40e62e:	jg     0x40e5f7
  40e630:	mov    cs,WORD PTR [edi+0x768a6b67]
  40e636:	cld    
  40e637:	and    bl,ch
  40e639:	xor    BYTE PTR [edx],al
  40e63b:	jne    0x40e627
  40e63d:	mov    ch,0xfc
  40e63f:	adc    eax,0xb017d49e
  40e644:	xor    DWORD PTR [ebp+0x7034eba0],esi
  40e64a:	es cmp esp,ecx
  40e64d:	adc    DWORD PTR [ebx],ecx
  40e64f:	mov    eax,ds:0x68691ed2
  40e654:	sbb    eax,0xd4d458cd
  40e659:	iret   
  40e65a:	outs   dx,BYTE PTR ds:[esi]
  40e65b:	imul   ecx,esi,0x6cf07da3
  40e661:	mov    DWORD PTR [ebx+0x4e],ecx
  40e664:	sbb    esp,ebp
  40e666:	jnp    0x40e61d
  40e668:	adc    al,0x65
  40e66a:	les    ecx,FWORD PTR [edx]
  40e66c:	loope  0x40e6d0
  40e66e:	jo     0x40e672
  40e670:	pop    es
  40e671:	jmp    0x1060:0x2fd44ab0
  40e678:	mov    ch,0x52
  40e67a:	sub    al,0xfa
  40e67c:	jp     0x40e6f6
  40e67e:	push   cs
  40e67f:	pushf  
  40e680:	dec    edx
  40e681:	add    DWORD PTR [ecx+edi*2],ebx
  40e684:	xchg   ecx,eax
  40e685:	xchg   esp,eax
  40e686:	sar    cl,1
  40e688:	xchg   ebx,eax
  40e689:	or     BYTE PTR [edx+0x6ad4105c],dh
  40e68f:	jbe    0x40e679
  40e691:	inc    ebp
  40e692:	jg     0x40e6d1
  40e694:	lock jmp 0x40e711
  40e697:	jns    0x40e6ee
  40e699:	(bad)  
  40e69b:	ficom  DWORD PTR [edx-0xb04132f]
  40e6a1:	sub    eax,0x2cf9aa90
  40e6a6:	and    DWORD PTR [edx],ecx
  40e6a8:	sbb    ecx,DWORD PTR ds:0x1dd38127
  40e6ae:	clc    
  40e6af:	outs   dx,BYTE PTR ds:[esi]
  40e6b0:	je     0x40e71f
  40e6b2:	or     DWORD PTR [edx],esp
  40e6b4:	mov    eax,ds:0x42238541
  40e6b9:	pop    esp
  40e6ba:	shr    BYTE PTR [ebp+eax*2+0x7f],1
  40e6be:	sub    al,0x54
  40e6c0:	(bad)  
  40e6c1:	xchg   si,ax
  40e6c3:	add    eax,0x41e0af14
  40e6c8:	sahf   
  40e6c9:	mov    ds:0x3ea0ab9b,eax
  40e6ce:	cld    
  40e6cf:	cmp    BYTE PTR [ebx+0x3bd81c98],bl
  40e6d5:	lock rcl edx,0xbd
  40e6d9:	pop    esp
  40e6da:	icebp  
  40e6db:	scas   eax,DWORD PTR es:[edi]
  40e6dc:	or     BYTE PTR [edx-0x1e4acba5],cl
  40e6e2:	cmp    bh,0x34
  40e6e5:	inc    ebp
  40e6e6:	mov    ch,0x7a
  40e6e8:	pop    eax
  40e6e9:	into   
  40e6ea:	mov    ebx,0x533d138c
  40e6ef:	loope  0x40e6f5
  40e6f1:	pop    ss
  40e6f2:	jb     0x40e6f0
  40e6f4:	call   0x7063:0x83d4292e
  40e6fb:	pop    eax
  40e6fc:	mov    esp,0x4bf31a51
  40e701:	mov    fs,WORD PTR [edi]
  40e703:	rcl    BYTE PTR [eax+ebp*2],0x56
  40e707:	or     al,0x18
  40e709:	inc    DWORD PTR [esi+0x6f]
  40e70c:	mov    dh,0x98
  40e70e:	inc    esp
  40e70f:	pop    ds
  40e710:	push   DWORD PTR [edi]
  40e712:	push   esi
  40e713:	ret    0x6170
  40e716:	pop    ecx
  40e717:	ror    edx,cl
  40e719:	sub    eax,DWORD PTR [eax+0xed39ab0]
  40e71f:	sbb    BYTE PTR [edx],0x23
  40e722:	add    dl,BYTE PTR [esi]
  40e724:	sub    ah,BYTE PTR [ecx+0x3c513dc3]
  40e72a:	add    esi,DWORD PTR [ebx-0x47bec341]
  40e730:	hlt    
  40e731:	xor    dl,ch
  40e733:	shl    BYTE PTR [esi-0x7f5ff859],0x4c
  40e73a:	inc    edx
  40e73b:	jge    0x40e76a
  40e73d:	pop    edx
  40e73e:	pop    ds
  40e73f:	push   ds
  40e740:	xchg   ecx,eax
  40e741:	mov    dl,0xd0
  40e743:	jecxz  0x40e705
  40e745:	nop
  40e746:	jg     0x40e765
  40e748:	jnp    0x40e781
  40e74a:	pushw  ss
  40e74c:	repnz repz push 0x5088f3aa
  40e753:	xor    BYTE PTR [esi],dh
  40e755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e756:	shl    DWORD PTR [eax-0x64b27062],0x3d
  40e75d:	dec    ebp
  40e75e:	cmc    
  40e75f:	into   
  40e760:	inc    ebx
  40e761:	sbb    esp,DWORD PTR [edx]
  40e763:	ja     0x40e788
  40e765:	sbb    cl,bh
  40e767:	vpcmpeqd xmm6,xmm3,XMMWORD PTR [eax-0x49]
  40e76c:	cmp    eax,0xa7e36eb1
  40e771:	xlat   BYTE PTR ds:[ebx]
  40e772:	xor    al,0x74
  40e774:	test   al,0xd1
  40e776:	test   BYTE PTR [esi],dl
  40e778:	int3   
  40e779:	xor    ecx,DWORD PTR [eax]
  40e77b:	data16 and ah,ch
  40e77e:	jb     0x40e7e3
  40e780:	loope  0x40e7b0
  40e782:	jo     0x40e7d9
  40e784:	enter  0x2a34,0xae
  40e788:	dec    ebp
  40e789:	jle    0x40e785
  40e78b:	add    ebx,DWORD PTR [eax]
  40e78d:	sub    bl,BYTE PTR [esi]
  40e78f:	lods   eax,DWORD PTR ds:[esi]
  40e790:	mov    esi,0xdfa1b475
  40e795:	ja     0x40e784
  40e797:	mov    al,ds:0x8bc07169
  40e79c:	jns    0x40e7fd
  40e79e:	jge    0x40e77c
  40e7a0:	inc    esi
  40e7a1:	retf   0xe31f
  40e7a4:	ins    DWORD PTR es:[edi],dx
  40e7a5:	adc    al,0x53
  40e7a7:	sub    eax,0x7b402258
  40e7ac:	retf   
  40e7ad:	iret   
  40e7ae:	fwait
  40e7af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b0:	pop    esp
  40e7b1:	je     0x40e76a
  40e7b3:	cwde   
  40e7b4:	enter  0x6285,0xea
  40e7b8:	xchg   bx,ax
  40e7ba:	lea    ebx,[eax+0x35d459db]
  40e7c0:	push   cs
  40e7c1:	loope  0x40e775
  40e7c3:	addr16 sti 
  40e7c5:	lahf   
  40e7c6:	test   eax,0xdfcb0bd2
  40e7cb:	nop
  40e7cc:	push   esp
  40e7cd:	mov    DWORD PTR [edi+edi*4],esp
  40e7d0:	call   0x8398e07c
  40e7d5:	mov    esi,0x9baaeef0
  40e7da:	sti    
  40e7db:	adc    DWORD PTR [ebp+eax*8+0x4e501627],0x76290d33
  40e7e6:	fistp  QWORD PTR [ecx+0x78313ee7]
  40e7ec:	add    BYTE PTR [ebx],dl
  40e7ee:	cmp    esp,esi
  40e7f0:	mov    cx,0xe36d
  40e7f4:	mov    ds:0x1336c224,al
  40e7f9:	fisttp WORD PTR ds:0x3c832aa7
  40e7ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e800:	ret    0xc0a8
  40e803:	dec    ebx
  40e804:	push   ebx
  40e805:	xor    al,0x6c
  40e807:	sar    DWORD PTR [esi],cl
  40e809:	push   ebx
  40e80a:	cmp    ebx,edx
  40e80c:	add    eax,0x9872850a
  40e811:	mov    al,0x98
  40e813:	push   es
  40e814:	mov    ds:0xc194202,al
  40e819:	punpckhbw mm0,mm7
  40e81c:	nop
  40e81d:	sub    ebp,esp
  40e81f:	es popa 
  40e821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e822:	xor    bl,BYTE PTR [esi-0x28]
  40e825:	repz ss and al,0xfe
  40e829:	mov    ebx,0xef3cede
  40e82e:	jne    0x40e804
  40e830:	into   
  40e831:	pop    ebx
  40e832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e833:	cwde   
  40e834:	push   ss
  40e835:	add    DWORD PTR [ebp-0x6aa73cba],esi
  40e83b:	sub    BYTE PTR [eax],ch
  40e83d:	and    ah,BYTE PTR [esi-0x58663e85]
  40e843:	xchg   esp,eax
  40e844:	scas   eax,DWORD PTR es:[edi]
  40e845:	into   
  40e846:	xchg   edi,eax
  40e847:	js     0x40e876
  40e849:	push   0x8e3f1455
  40e84e:	nop
  40e84f:	push   ebx
  40e850:	sub    al,0x51
  40e852:	inc    eax
  40e853:	call   0x6cc8:0xa8b65742
  40e85a:	xchg   DWORD PTR [edx+eiz*1-0x57dbef21],esp
  40e861:	iret   
  40e862:	push   cs
  40e863:	push   edx
  40e864:	pusha  
  40e865:	gs ja  0x40e88c
  40e868:	(bad)  
  40e86a:	fisubr WORD PTR [eax+0x13]
  40e86d:	enter  0x2d85,0x73
  40e871:	push   0xffffff95
  40e873:	aas    
  40e874:	cmp    eax,DWORD PTR [edx]
  40e876:	pop    ds
  40e877:	cwde   
  40e878:	adc    ecx,0x684f1efb
  40e87e:	inc    esi
  40e87f:	fsubr  DWORD PTR [ebx+0x1a]
  40e882:	imul   ebp,DWORD PTR ds:0xaa433928,0x12026051
  40e88c:	rcl    BYTE PTR [ecx+0x121fdfac],cl
  40e892:	xchg   ecx,eax
  40e893:	imul   esi,DWORD PTR [eax],0x338de151
  40e899:	xchg   ebx,eax
  40e89a:	cmc    
  40e89b:	fiadd  WORD PTR [esi-0x6e5df533]
  40e8a1:	inc    edi
  40e8a2:	jb     0x40e905
  40e8a4:	cmc    
  40e8a5:	push   ebx
  40e8a6:	out    0x33,eax
  40e8a8:	push   ds
  40e8a9:	jo     0x40e8bf
  40e8ab:	shl    BYTE PTR [esi-0x7ae3fe],1
  40e8b1:	cmp    ebx,DWORD PTR [esi+0x5a]
  40e8b4:	scas   eax,DWORD PTR es:[edi]
  40e8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8b6:	shl    DWORD PTR es:[esi+0x1ca7a269],cl
  40e8bd:	call   0x7f3d5800
  40e8c2:	add    edi,DWORD PTR [edi]
  40e8c4:	mov    WORD PTR [ebx-0x64],cs
  40e8c7:	or     DWORD PTR [esi-0x724d6488],esp
  40e8cd:	cmp    BYTE PTR [eax+eiz*1-0x51a22950],ch
  40e8d4:	ss sub eax,ecx
  40e8d7:	adc    edx,DWORD PTR ds:0xa68d8eac
  40e8dd:	jge    0x40e8d6
  40e8df:	push   esi
  40e8e0:	in     al,0xc5
  40e8e2:	jo     0x40e961
  40e8e4:	jp     0x40e963
  40e8e6:	in     al,0xc0
  40e8e8:	pusha  
  40e8e9:	xchg   edx,eax
  40e8ea:	call   0xb873:0x21e6b640
  40e8f1:	test   al,0xb9
  40e8f3:	add    esi,esp
  40e8f5:	mov    esi,esp
  40e8f7:	xchg   BYTE PTR [ecx+0x7c],bl
  40e8fa:	jp     0x40e927
  40e8fc:	fcmovne st,st(5)
  40e8fe:	push   ebp
  40e8ff:	es in  eax,0xc5
  40e902:	inc    esp
  40e903:	push   esp
  40e904:	pop    eax
  40e905:	fwait
  40e906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e907:	imul   eax,esp,0xffffffe7
  40e90a:	push   ecx
  40e90b:	aad    0x5f
  40e90d:	je     0x40e918
  40e90f:	cmp    BYTE PTR [edi+0x58],cl
  40e912:	fmul   QWORD PTR [edi-0x20]
  40e915:	(bad)  
  40e917:	cli    
  40e918:	std    
  40e919:	shl    DWORD PTR [ebx+0x5a59b549],cl
  40e91f:	mov    bl,0x72
  40e921:	push   0xdf72ef17
  40e926:	ret    0xbda9
  40e929:	sti    
  40e92a:	pusha  
  40e92b:	dec    edx
  40e92c:	sbb    BYTE PTR [esi-0x1963caff],0xcf
  40e933:	mov    edx,0x339732e0
  40e938:	lods   al,BYTE PTR ds:[esi]
  40e939:	mov    dl,0x79
  40e93b:	addr16 dec edi
  40e93d:	enter  0xc742,0xc5
  40e941:	rcr    BYTE PTR [eax-0x2e],0x47
  40e945:	mov    ebx,0x1404b461
  40e94a:	push   es
  40e94b:	add    al,0x72
  40e94d:	cmovne edi,ebx
  40e950:	lods   al,BYTE PTR ds:[esi]
  40e951:	sbb    al,BYTE PTR [ebp+0x7b4b35b8]
  40e957:	(bad)  
  40e958:	enter  0x2cd7,0x64
  40e95c:	addr16 push es
  40e95e:	pop    ebp
  40e95f:	sahf   
  40e960:	lods   al,BYTE PTR ds:[esi]
  40e961:	out    0xb5,eax
  40e963:	xor    eax,0x973b2223
  40e968:	(bad)  
  40e969:	ret    
  40e96a:	push   ebp
  40e96b:	push   es
  40e96c:	sub    al,0x5a
  40e96e:	imul   edi,esp,0xb6e711ce
  40e974:	pop    ss
  40e975:	or     al,0x8d
  40e977:	outs   dx,BYTE PTR ds:[esi]
  40e978:	stc    
  40e979:	test   eax,0x253fd8fa
  40e97e:	aad    0x60
  40e980:	lock in eax,dx
  40e982:	cmc    
  40e983:	in     eax,dx
  40e984:	xor    al,0x3a
  40e986:	and    esp,DWORD PTR [ecx-0x2bd39a04]
  40e98c:	in     al,dx
  40e98d:	out    0x21,al
  40e98f:	sahf   
  40e990:	adc    bl,dh
  40e992:	push   0xffffffa6
  40e994:	add    ebp,edi
  40e996:	lahf   
  40e997:	jmp    0x7da7:0xc44985fb
  40e99e:	and    esi,ebp
  40e9a0:	jp     0x40e955
  40e9a2:	imul   esp,DWORD PTR [ecx+0x79],0x18
  40e9a6:	fst    DWORD PTR [edx-0x58]
  40e9a9:	xor    eax,0xdecaca14
  40e9ae:	jmp    0x40e9d0
  40e9b0:	mov    al,0x51
  40e9b2:	xchg   esp,eax
  40e9b3:	je     0x40ea08
  40e9b5:	lods   al,BYTE PTR ds:[esi]
  40e9b6:	pusha  
  40e9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b8:	inc    edx
  40e9b9:	or     edi,DWORD PTR [ecx]
  40e9bb:	mov    edi,0x2d7a11c2
  40e9c0:	(bad)  
  40e9c1:	ffreep st(3)
  40e9c3:	in     eax,0x3f
  40e9c5:	push   eax
  40e9c6:	jae    0x40e96f
  40e9c8:	xchg   ecx,eax
  40e9c9:	inc    ebx
  40e9ca:	iret   
  40e9cb:	call   0xa195:0xb819c0be
  40e9d2:	imul   ecx,DWORD PTR ds:0x2e1f36ac,0x43
  40e9d9:	mov    cl,0x1f
  40e9db:	es adc eax,0x912fd5b6
  40e9e1:	rcr    esi,cl
  40e9e3:	xchg   BYTE PTR [esi+0x2a],dh
  40e9e6:	sahf   
  40e9e7:	add    DWORD PTR [edi+0x27],edx
  40e9ea:	mov    esp,0x44ed5f17
  40e9ef:	jo     0x40e9db
  40e9f1:	std    
  40e9f2:	int3   
  40e9f3:	fld    QWORD PTR [ebx]
  40e9f5:	pop    esp
  40e9f6:	call   0xd34a:0xc45702ee
  40e9fd:	mov    al,0xae
  40e9ff:	add    al,0xde
  40ea01:	dec    edx
  40ea02:	jge    0x40e9cb
  40ea04:	xchg   ecx,eax
  40ea05:	cmc    
  40ea06:	push   edx
  40ea07:	out    dx,al
  40ea08:	js     0x40e996
  40ea0a:	mov    bh,0xcc
  40ea0c:	sub    edx,DWORD PTR [ebx+ebp*1-0x69]
  40ea10:	pop    eax
  40ea11:	add    esp,DWORD PTR [edx-0x54]
  40ea14:	jge    0x40e9a2
  40ea16:	xchg   ecx,eax
  40ea17:	dec    esi
  40ea18:	(bad)  
  40ea1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea1b:	js     0x40ea4b
  40ea1d:	cli    
  40ea1e:	sbb    BYTE PTR [edi+0x261355c1],dl
  40ea24:	popa   
  40ea25:	gs xchg edi,eax
  40ea27:	lds    eax,FWORD PTR [ebx+0x2e98eb54]
  40ea2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea2e:	inc    edi
  40ea2f:	inc    ebp
  40ea30:	scas   eax,DWORD PTR es:[edi]
  40ea31:	sbb    eax,0x7f1869dc
  40ea36:	verw   WORD PTR ds:[esi]
  40ea3a:	xor    DWORD PTR [esi],ebx
  40ea3c:	ror    BYTE PTR [ebp-0x2066a5ce],1
  40ea42:	or     al,0x3e
  40ea44:	outs   dx,DWORD PTR ds:[esi]
  40ea45:	xchg   ecx,eax
  40ea46:	fdiv   QWORD PTR [edi-0x2]
  40ea49:	cld    
  40ea4a:	xchg   edx,eax
  40ea4b:	sbb    eax,0x10a22f7e
  40ea50:	fld    TBYTE PTR [edi+0x5c]
  40ea53:	dec    esp
  40ea54:	test   al,0xc8
  40ea56:	outs   dx,DWORD PTR ds:[esi]
  40ea57:	ins    DWORD PTR es:[edi],dx
  40ea58:	repz call 0xf0b3:0x6fc4500a
  40ea60:	lods   eax,DWORD PTR ds:[esi]
  40ea61:	and    DWORD PTR [edx],esi
  40ea63:	aad    0xc1
  40ea65:	xchg   esp,eax
  40ea66:	(bad)  
  40ea67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea68:	mov    ecx,0x9f548f1
  40ea6d:	sbb    DWORD PTR [ebp+0x55],ecx
  40ea70:	add    eax,0x79acafb1
  40ea75:	popa   
  40ea76:	cmp    al,0x67
  40ea78:	outs   dx,DWORD PTR ds:[esi]
  40ea79:	jmp    0x40eab2
  40ea7b:	jmp    0x40ea3e
  40ea7d:	shr    DWORD PTR [esi],0xe6
  40ea80:	scas   al,BYTE PTR es:[edi]
  40ea81:	pop    ebp
  40ea82:	rcl    DWORD PTR [edx-0x53c63950],cl
  40ea88:	div    al
  40ea8a:	cmp    edx,DWORD PTR [edi]
  40ea8c:	dec    edx
  40ea8d:	xchg   ah,bl
  40ea8f:	outs   dx,BYTE PTR ds:[esi]
  40ea90:	jg     0x40eaa8
  40ea92:	pusha  
  40ea93:	pushf  
  40ea94:	mov    ss,esi
  40ea96:	mov    eax,0xd19e711
  40ea9b:	inc    ebx
  40ea9c:	or     cl,BYTE PTR [ebx+0x39bdc702]
  40eaa2:	je     0x40ead7
  40eaa4:	sub    dh,BYTE PTR [edx-0x20]
  40eaa7:	push   ss
  40eaa8:	fisubr DWORD PTR [ecx+0x2cc6bbe7]
  40eaae:	cmc    
  40eaaf:	and    BYTE PTR [ecx-0x4b],0x97
  40eab3:	mov    ch,0x22
  40eab5:	adc    ebx,DWORD PTR [edx]
  40eab7:	xor    eax,0x348b7256
  40eabc:	mov    esi,0xc1f88ef3
  40eac1:	rol    DWORD PTR ds:0x1e7e49f0,0xb2
  40eac8:	or     dl,BYTE PTR ds:0xb5e0e5a3
  40eace:	clc    
  40eacf:	cmc    
  40ead0:	jb     0x40eacd
  40ead2:	int3   
  40ead3:	pop    ebx
  40ead4:	xor    esp,esi
  40ead6:	jmp    0xac2d:0x62ef9240
  40eadd:	shr    BYTE PTR [edx+0x7ea4ca41],0xd2
  40eae4:	or     eax,0x468b0a2c
  40eae9:	xchg   ebp,eax
  40eaea:	sbb    ah,ah
  40eaec:	shl    cl,cl
  40eaee:	out    0x30,al
  40eaf0:	int3   
  40eaf1:	data16 (bad) 
  40eaf4:	sbb    al,0x36
  40eaf6:	fcom   DWORD PTR ds:0x3851f724
  40eafc:	mov    al,0x3
  40eafe:	add    bh,BYTE PTR [ebx+0x13]
  40eb01:	jns    0x40ead2
  40eb03:	stos   DWORD PTR es:[edi],eax
  40eb04:	sti    
  40eb05:	add    DWORD PTR [ebx+0x4d6439be],ecx
  40eb0b:	jno    0x40eaa8
  40eb0d:	and    BYTE PTR [ebx],0x94
  40eb10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb11:	sbb    eax,0xf7e2461
  40eb16:	scas   eax,DWORD PTR es:[edi]
  40eb17:	inc    esp
  40eb18:	lds    ebx,FWORD PTR [ebx]
  40eb1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb1b:	mov    al,0xff
  40eb1d:	in     eax,0x5e
  40eb1f:	inc    edx
  40eb20:	in     eax,dx
  40eb21:	loopne 0x40eb43
  40eb23:	jo     0x40eada
  40eb25:	cmp    al,0x39
  40eb27:	add    ebp,DWORD PTR [edx]
  40eb29:	jecxz  0x40ead2
  40eb2b:	ja     0x40eb84
  40eb2d:	inc    esp
  40eb2e:	jne    0x40eae2
  40eb30:	mov    ds:0x86dc4f51,al
  40eb35:	mov    dh,0x7
  40eb37:	xor    ah,BYTE PTR [ecx]
  40eb39:	(bad)  
  40eb3a:	cmp    ecx,DWORD PTR [edx+0x4620e911]
  40eb40:	jo     0x40ebc0
  40eb42:	lock imul eax,DWORD PTR [ebp-0x1341403a],0x31ca61b
  40eb4d:	and    BYTE PTR [ebx-0x2346d9e7],0x5a
  40eb54:	fsubr  st,st(2)
  40eb56:	stos   BYTE PTR es:[edi],al
  40eb57:	xchg   esp,eax
  40eb58:	rol    DWORD PTR [edx-0x79],cl
  40eb5b:	ss scas eax,DWORD PTR es:[edi]
  40eb5d:	sbb    cl,BYTE PTR [ecx+0x13fc061f]
  40eb63:	cmp    DWORD PTR [ebp-0x7],ecx
  40eb66:	rcl    DWORD PTR [ebp-0x42],cl
  40eb69:	in     eax,dx
  40eb6a:	mov    edi,0x666a0967
  40eb6f:	es test esp,ebp
  40eb72:	push   esp
  40eb73:	gs inc edx
  40eb75:	out    dx,al
  40eb76:	mov    eax,0x19c462c0
  40eb7b:	or     BYTE PTR ds:0x3b31f71e,0xe5
  40eb82:	sbb    ecx,DWORD PTR ds:0x9e79b904
  40eb88:	cmp    BYTE PTR [edi+ecx*4-0x1b8660d7],0xcc
  40eb90:	jg     0x40eb20
  40eb92:	aaa    
  40eb93:	sahf   
  40eb94:	mov    bh,BYTE PTR [ebx-0x5]
  40eb97:	push   edx
  40eb98:	ja     0x40eb8b
  40eb9a:	fcmovnbe st,st(5)
  40eb9c:	or     DWORD PTR [ecx-0x30],esp
  40eb9f:	inc    ecx
  40eba0:	add    bl,BYTE PTR [eax-0x278dae8a]
  40eba6:	add    DWORD PTR gs:[ecx+0x4f62518],0x7e406fe0
  40ebb1:	jno    0x40ec19
  40ebb3:	lahf   
  40ebb4:	dec    edx
  40ebb5:	mov    bl,0xab
  40ebb7:	sbb    ecx,0x153fff4a
  40ebbd:	repnz rol dl,0xb3
  40ebc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc2:	dec    eax
  40ebc3:	fs inc ebx
  40ebc5:	int    0xa1
  40ebc7:	pop    esi
  40ebc8:	je     0x40ebe4
  40ebca:	rcr    esi,cl
  40ebcc:	outs   dx,BYTE PTR ds:[esi]
  40ebcd:	xor    BYTE PTR [ecx],al
  40ebcf:	hlt    
  40ebd0:	xchg   ecx,eax
  40ebd1:	xor    eax,0xf129822c
  40ebd6:	nop
  40ebd7:	daa    
  40ebd8:	aad    0xee
  40ebda:	sti    
  40ebdb:	jmp    0x40ebe6
  40ebdd:	inc    ecx
  40ebde:	ins    BYTE PTR es:[edi],dx
  40ebdf:	dec    esp
  40ebe0:	or     DWORD PTR [eax-0x40],0x6965f38e
  40ebe7:	fsub   DWORD PTR [ecx-0x27]
  40ebea:	sbb    al,0xda
  40ebec:	xor    dh,dl
  40ebee:	mov    bh,0xb4
  40ebf0:	aad    0xb0
  40ebf2:	mov    ah,0x69
  40ebf4:	call   0x16da1b01
  40ebf9:	inc    BYTE PTR [ebx-0x57]
  40ebfc:	cs mov esp,0x6e547406
  40ec02:	sahf   
  40ec03:	mov    edi,0x33df0cf4
  40ec08:	push   0xdecf27d5
  40ec0d:	mov    al,BYTE PTR [eax+0x37]
  40ec10:	arpl   WORD PTR [esi-0x1c],dx
  40ec13:	daa    
  40ec14:	mov    edi,0x80d0ef3
  40ec19:	inc    edx
  40ec1a:	fmulp  st(7),st
  40ec1c:	push   0x6e499e93
  40ec21:	inc    eax
  40ec22:	inc    edx
  40ec23:	dec    esi
  40ec24:	cmp    DWORD PTR [ebx+eiz*4-0x720a3469],ebp
  40ec2b:	scas   eax,DWORD PTR es:[edi]
  40ec2c:	retf   0x1ec8
  40ec2f:	popf   
  40ec30:	(bad)  
  40ec31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec32:	mov    edi,0x5c20835c
  40ec37:	mul    BYTE PTR [eax+0x1d04f17b]
  40ec3d:	ss push esi
  40ec3f:	push   eax
  40ec40:	bound  eax,QWORD PTR [esi]
  40ec42:	(bad)  
  40ec43:	addr16 out 0xc2,eax
  40ec46:	mov    eax,ds:0x7f1b4b05
  40ec4b:	jmp    0x3756:0x5486064b
  40ec52:	push   0xd3a64dfc
  40ec57:	pop    eax
  40ec58:	push   esp
  40ec59:	daa    
  40ec5a:	fcomp  DWORD PTR [eax-0x2151dd23]
  40ec60:	xchg   esi,eax
  40ec61:	adc    al,0x96
  40ec63:	pusha  
  40ec64:	jle    0x40ecbb
  40ec66:	cld    
  40ec67:	push   0xffffffd9
  40ec69:	les    ecx,FWORD PTR [ebx]
  40ec6b:	enter  0x304b,0x84
  40ec6f:	inc    ebx
  40ec70:	push   es
  40ec71:	mov    dh,0x8c
  40ec73:	cld    
  40ec74:	aam    0x6e
  40ec76:	or     dl,BYTE PTR [edi-0x466e4d50]
  40ec7c:	lods   eax,DWORD PTR ds:[esi]
  40ec7d:	jle    0x40eccb
  40ec7f:	sbb    edi,DWORD PTR [eax+0x674fc508]
  40ec85:	stos   BYTE PTR es:[edi],al
  40ec86:	cmp    dh,BYTE PTR [eax]
  40ec88:	test   DWORD PTR [ebx],esi
  40ec8a:	in     eax,dx
  40ec8b:	in     eax,dx
  40ec8c:	in     eax,dx
  40ec8d:	ja     0x40ec91
  40ec8f:	call   0x1cc3:0xbf50e0c0
  40ec96:	cmc    
  40ec97:	and    DWORD PTR [ebp-0x22],ebx
  40ec9a:	loope  0x40ecc8
  40ec9c:	jo     0x40eca7
  40ec9e:	fild   WORD PTR [ebx+0x4c]
  40eca1:	in     al,0xb
  40eca3:	lock sub DWORD PTR [ecx],esi
  40eca6:	sbb    edi,DWORD PTR [esi]
  40eca8:	test   DWORD PTR ds:0xf2cde62a,ebx
  40ecae:	inc    esi
  40ecaf:	push   es
  40ecb0:	or     BYTE PTR [eax-0x44],bh
  40ecb3:	jnp    0x40ec40
  40ecb5:	cmp    eax,0xe4d5023d
  40ecba:	add    edx,DWORD PTR [ebx]
  40ecbc:	xor    eax,0xd1e4404d
  40ecc1:	jne    0x40ecae
  40ecc3:	cli    
  40ecc4:	mov    dl,ah
  40ecc6:	and    BYTE PTR [ebp-0x71635b23],dh
  40eccc:	push   0x68
  40ecce:	push   ss
  40eccf:	xor    al,0x9e
  40ecd1:	sahf   
  40ecd2:	clc    
  40ecd3:	mov    esi,0xff051601
  40ecd8:	inc    esi
  40ecd9:	popf   
  40ecda:	push   esp
  40ecdb:	and    eax,0xbc88d85e
  40ece0:	out    0xf3,eax
  40ece2:	jmp    0x8aac5439
  40ece7:	mov    esp,cs
  40ece9:	jns    0x40ecc9
  40eceb:	mov    al,ds:0x73d3003b
  40ecf0:	dec    esi
  40ecf1:	rcr    DWORD PTR [ecx-0x7671fbe3],0x17
  40ecf8:	push   0xaf3063cd
  40ecfd:	mov    ds:0x8a52c699,al
  40ed02:	shld   ebx,eax,0x48
  40ed06:	scas   al,BYTE PTR es:[edi]
  40ed07:	fwait
  40ed08:	xchg   edx,eax
  40ed09:	jns    0x40ed5d
  40ed0b:	push   cs
  40ed0c:	(bad)  
  40ed0d:	xchg   ecx,eax
  40ed0e:	or     BYTE PTR [eax+0x7b6c6c24],dl
  40ed14:	das    
  40ed15:	loopne 0x40ed96
  40ed17:	jge    0x40ed6b
  40ed19:	add    DWORD PTR [esi-0x7f279404],ecx
  40ed1f:	and    edi,DWORD PTR [edx]
  40ed21:	xchg   edx,eax
  40ed22:	cli    
  40ed23:	gs jp  0x40ecfe
  40ed26:	pop    edx
  40ed27:	cmp    esi,esp
  40ed29:	or     al,0x15
  40ed2b:	push   edi
  40ed2c:	cs loopne 0x40ed89
  40ed2f:	pop    ss
  40ed30:	fwait
  40ed31:	push   ds
  40ed32:	into   
  40ed33:	mov    al,0x43
  40ed35:	nop
  40ed36:	imul   edx,eax,0x9b0131a0
  40ed3c:	sbb    DWORD PTR [ebx],0xffffffe8
  40ed3f:	adc    BYTE PTR [edx+eax*8],al
  40ed42:	push   ss
  40ed43:	test   cl,al
  40ed45:	ins    BYTE PTR es:[edi],dx
  40ed46:	mov    al,0x77
  40ed48:	sub    BYTE PTR [edx+0x10],dh
  40ed4b:	cli    
  40ed4c:	xchg   BYTE PTR [eax-0x16],ch
  40ed4f:	bound  esp,QWORD PTR [esi+0x5b]
  40ed52:	xchg   DWORD PTR [eax+0x17628d83],edi
  40ed58:	adc    DWORD PTR [ecx-0x1a],eax
  40ed5b:	push   esp
  40ed5c:	(bad)  
  40ed5d:	icebp  
  40ed5e:	out    0x79,eax
  40ed60:	mov    ?,WORD PTR [ecx+0x4ab53f15]
  40ed66:	loope  0x40eda5
  40ed68:	cdq    
  40ed69:	sub    ebp,edx
  40ed6b:	add    edi,eax
  40ed6d:	mov    ebx,0x9f2a581a
  40ed72:	daa    
  40ed73:	push   eax
  40ed74:	push   ebp
  40ed75:	inc    eax
  40ed76:	jg     0x40ed1e
  40ed78:	lds    eax,FWORD PTR [edx]
  40ed7a:	nop
  40ed7b:	shr    BYTE PTR ds:0x1c979f92,0x27
  40ed82:	adc    BYTE PTR [edx+0x7d],cl
  40ed85:	rol    al,1
  40ed87:	into   
  40ed88:	pop    ebp
  40ed89:	push   ecx
  40ed8a:	icebp  
  40ed8b:	out    0x16,eax
  40ed8d:	jg     0x40ed96
  40ed8f:	rol    BYTE PTR [ecx],0x1e
  40ed92:	jmp    0x40edaa
  40ed94:	mov    eax,0xcea46ef1
  40ed99:	mov    al,0xd3
  40ed9b:	pop    esp
  40ed9c:	xchg   edi,eax
  40ed9d:	add    eax,0x7bc98fba
  40eda2:	mov    esp,0x9a64368f
  40eda7:	push   cs
  40eda8:	hlt    
  40eda9:	pushf  
  40edaa:	pusha  
  40edab:	inc    edx
  40edac:	stos   BYTE PTR es:[edi],al
  40edad:	call   ebx
  40edaf:	dec    BYTE PTR [esp+ebx*1+0x4bc5dd8b]
  40edb6:	push   ebx
  40edb7:	addr16 dec esp
  40edb9:	adc    al,BYTE PTR [esp+ebx*1-0x33]
  40edbd:	sub    bh,BYTE PTR [eax+0x762896b]
  40edc3:	call   0x5abc771e
  40edc8:	dec    ebp
  40edc9:	sbb    ah,BYTE PTR [edi+0x3589747f]
  40edcf:	sti    
  40edd0:	push   DWORD PTR [edi+ecx*8-0x1b]
  40edd4:	rol    dl,cl
  40edd6:	or     eax,DWORD PTR [esi+ebx*8-0x48]
  40edda:	das    
  40eddb:	aad    0xc3
  40eddd:	sub    ecx,DWORD PTR [ecx-0x532e40a2]
  40ede3:	icebp  
  40ede4:	mov    al,0x84
  40ede6:	fisttp QWORD PTR [esi-0x5dafbe32]
  40edec:	ret    0xd03d
  40edef:	pop    esp
  40edf0:	push   es
  40edf1:	mov    ah,0xf5
  40edf3:	ds xor ecx,eax
  40edf6:	and    DWORD PTR ds:0x4659376e,0xffffff90
  40edfd:	inc    esp
  40edfe:	fs push ecx
  40ee00:	jmp    0x40ee42
  40ee02:	cmp    ecx,edi
  40ee04:	lods   eax,DWORD PTR ds:[esi]
  40ee05:	jo     0x40edd8
  40ee07:	sbb    al,0xa6
  40ee09:	jb     0x40ee36
  40ee0b:	add    eax,0xb0ef34b7
  40ee10:	rcr    BYTE PTR [eax-0x440228ca],1
  40ee16:	test   dl,bl
  40ee18:	cmp    DWORD PTR [ebp+esi*1-0x7172398],ebp
  40ee1f:	cmp    edx,DWORD PTR [edx-0x9]
  40ee22:	mov    ah,BYTE PTR [edi+0x21b2175c]
  40ee28:	sahf   
  40ee29:	lock jbe 0x40ee24
  40ee2c:	mov    esp,DWORD PTR [edx]
  40ee2e:	hlt    
  40ee2f:	out    0x12,eax
  40ee31:	call   0x684c:0xd0a19bda
  40ee38:	adc    cl,ah
  40ee3a:	inc    ecx
  40ee3b:	pop    esi
  40ee3c:	int3   
  40ee3d:	outs   dx,DWORD PTR ds:[esi]
  40ee3e:	push   esi
  40ee3f:	inc    esp
  40ee40:	out    0xf6,al
  40ee42:	cmp    bl,BYTE PTR [ebx]
  40ee44:	adc    bl,BYTE PTR [edi+eiz*4+0x2e218da2]
  40ee4b:	ins    BYTE PTR es:[edi],dx
  40ee4c:	nop
  40ee4d:	add    al,0xf
  40ee4f:	and    esi,DWORD PTR [ecx+0x1d]
  40ee52:	mov    edx,0x327112c7
  40ee57:	mov    al,0xb
  40ee59:	lds    edx,FWORD PTR [edi]
  40ee5b:	push   edi
  40ee5c:	mov    dh,0x4
  40ee5e:	pop    ebx
  40ee5f:	sub    BYTE PTR [edi-0x4f7c32d],0xf2
  40ee66:	xchg   edi,eax
  40ee67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee68:	int    0x1c
  40ee6a:	gs adc eax,0x8c814f2c
  40ee70:	lods   eax,DWORD PTR ds:[esi]
  40ee71:	jb     0x40eeaa
  40ee73:	jge    0x40eebb
  40ee75:	mov    es:0x5a00f502,al
  40ee7b:	adc    DWORD PTR ds:0xa63bd7de,ecx
  40ee81:	add    BYTE PTR [ebp-0x6cadd263],dl
  40ee87:	mul    BYTE PTR [edx]
  40ee89:	lahf   
  40ee8a:	(bad)  
  40ee8b:	out    0x39,eax
  40ee8d:	ja     0x40ee7f
  40ee8f:	inc    ebp
  40ee90:	sbb    dh,ah
  40ee92:	jg     0x40eee5
  40ee94:	stos   BYTE PTR es:[edi],al
  40ee95:	xor    al,bh
  40ee97:	aaa    
  40ee98:	je     0x40eefa
  40ee9a:	cs xchg ecx,eax
  40ee9c:	jno    0x40ee9a
  40ee9e:	(bad)  
  40ee9f:	mov    eax,0x893e3daa
  40eea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea5:	repnz or DWORD PTR [ebx+0x4f],esp
  40eea9:	push   0xffffffeb
  40eeab:	(bad)  ds:0xeed3999a
  40eeb1:	stos   DWORD PTR es:[edi],eax
  40eeb2:	xor    al,0x3b
  40eeb4:	mulps  xmm4,XMMWORD PTR [esi]
  40eeb7:	stos   DWORD PTR es:[edi],eax
  40eeb8:	inc    BYTE PTR [ebx]
  40eeba:	sar    DWORD PTR [eax-0x10],1
  40eebd:	sub    eax,0x8d26b8b5
  40eec2:	loope  0x40eeb5
  40eec4:	mov    ds:0xc3faf7ab,al
  40eec9:	or     ecx,DWORD PTR [esp+ebp*4-0x53fd8482]
  40eed0:	mov    esi,0x71ac99fc
  40eed5:	stc    
  40eed6:	aaa    
  40eed7:	or     edi,DWORD PTR [ecx+0x2f]
  40eeda:	ret    0xf64b
  40eedd:	aaa    
  40eede:	push   esi
  40eedf:	hlt    
  40eee0:	jo     0x40ef5c
  40eee2:	pop    es
  40eee3:	sar    BYTE PTR [edi+0x28],cl
  40eee6:	add    edi,DWORD PTR [ecx+0x53]
  40eee9:	into   
  40eeea:	fsubr  QWORD PTR [ebx-0x32805344]
  40eef0:	xor    bl,bl
  40eef2:	pop    ecx
  40eef3:	mov    edi,DWORD PTR ds:0xf7c91c6b
  40eef9:	sbb    cl,BYTE PTR [eax-0xbbe5676]
  40eeff:	dec    bl
  40ef01:	push   ds
  40ef02:	les    eax,FWORD PTR [ecx]
  40ef04:	idiv   BYTE PTR ds:0x24e34034
  40ef0a:	jb     0x40ef58
  40ef0c:	popf   
  40ef0d:	out    0xd9,eax
  40ef0f:	xchg   BYTE PTR [ecx],al
  40ef11:	clc    
  40ef12:	push   edx
  40ef13:	sub    BYTE PTR [esp+ecx*4-0x65f2be94],dl
  40ef1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1b:	aam    0xd8
  40ef1d:	inc    edx
  40ef1e:	adc    bl,BYTE PTR [edi]
  40ef20:	xchg   esi,eax
  40ef21:	and    dh,BYTE PTR [ebx-0x743e8de0]
  40ef27:	enter  0x2199,0xa7
  40ef2b:	loopne 0x40ef85
  40ef2d:	aad    0x33
  40ef2f:	push   ss
  40ef30:	xchg   ecx,eax
  40ef31:	in     eax,0x50
  40ef33:	test   BYTE PTR [edi-0x2b],ch
  40ef36:	jp     0x40efb1
  40ef38:	popa   
  40ef39:	fild   DWORD PTR ds:0x75722493
  40ef3f:	ins    DWORD PTR es:[edi],dx
  40ef40:	mov    al,0xe3
  40ef42:	dec    edi
  40ef43:	mov    bh,0xdb
  40ef45:	ficomp WORD PTR [eax+eiz*2]
  40ef48:	lods   eax,DWORD PTR ds:[esi]
  40ef49:	jl     0x40ef72
  40ef4b:	in     al,dx
  40ef4c:	xor    DWORD PTR [esi],ebp
  40ef4e:	or     BYTE PTR [edx],al
  40ef50:	sub    eax,0x485e868e
  40ef55:	fwait
  40ef56:	xor    BYTE PTR [eax],dl
  40ef58:	(bad)  
  40ef59:	cs cmp dh,0xee
  40ef5d:	dec    esp
  40ef5e:	cmp    eax,0x5b5497e5
  40ef63:	imul   eax,esp,0x1e45f35a
  40ef69:	adc    ah,BYTE PTR [esi+edx*4]
  40ef6c:	push   cs
  40ef6d:	jae    0x40ef55
  40ef6f:	xchg   ecx,eax
  40ef70:	inc    ecx
  40ef71:	cmp    al,0xe6
  40ef73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef74:	mov    ds:0x4a9656e4,eax
  40ef79:	or     ebp,DWORD PTR [eax-0x45b56960]
  40ef7f:	fwait
  40ef80:	hlt    
  40ef81:	jg     0x40efb7
  40ef83:	mov    dh,0x4
  40ef85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef86:	mov    es:0xe1ff29df,eax
  40ef8c:	add    eax,0xf78ad350
  40ef91:	outs   dx,DWORD PTR ds:[esi]
  40ef92:	repz or cl,cl
  40ef95:	mov    bl,0x7d
  40ef97:	push   ebp
  40ef98:	loope  0x40effb
  40ef9a:	adc    eax,0x66d2e438
  40ef9f:	lahf   
  40efa0:	mov    DWORD PTR [eax+0x42e8b631],ebp
  40efa6:	cwde   
  40efa7:	jbe    0x40effb
  40efa9:	inc    ebp
  40efaa:	adc    al,0x99
  40efac:	test   al,0xf9
  40efae:	outs   dx,BYTE PTR ds:[esi]
  40efaf:	aaa    
  40efb0:	and    ebx,DWORD PTR [edx]
  40efb2:	jle    0x40ef4d
  40efb4:	inc    eax
  40efb5:	xchg   esi,esp
  40efb7:	sub    al,0xac
  40efb9:	scas   al,BYTE PTR es:[edi]
  40efba:	xchg   ch,cl
  40efbc:	xor    BYTE PTR [ecx+0x7d929bc7],bl
  40efc2:	xor    al,dh
  40efc4:	cmp    al,0xb2
  40efc6:	enter  0xecf,0x46
  40efca:	hlt    
  40efcb:	dec    eax
  40efcc:	call   0x7b20:0x35bc5778
  40efd3:	mov    edi,0xe20b8b52
  40efd8:	fiadd  WORD PTR [esi+0x13542db4]
  40efde:	add    ah,ch
  40efe0:	sub    ebx,DWORD PTR [ebp+0x262f70b1]
  40efe6:	mov    dh,0x7e
  40efe8:	or     edx,ebx
  40efea:	cmc    
  40efeb:	sub    cl,BYTE PTR [ecx+0x1c]
  40efee:	shl    dh,1
  40eff0:	out    0xd4,al
  40eff2:	xlat   BYTE PTR ds:[ebx]
  40eff3:	pop    ebp
  40eff4:	add    eax,0xcdc97c44
  40eff9:	lods   eax,DWORD PTR ds:[esi]
  40effa:	cmp    ch,bl
  40effc:	dec    edx
  40effd:	pop    esi
  40effe:	mov    edi,0x2aacae11
  40f003:	fsubr  DWORD PTR [ebx+0x4b0ddc98]
  40f009:	jg     0x40f063
  40f00b:	xor    DWORD PTR ds:0x17dc4048,0xdd4796e2
  40f015:	bound  ecx,QWORD PTR [ebx]
  40f017:	pop    ebx
  40f018:	sbb    al,0xb5
  40f01a:	sub    al,0x46
  40f01c:	popf   
  40f01d:	jmp    0x40efd2
  40f01f:	lods   eax,DWORD PTR ds:[esi]
  40f020:	or     DWORD PTR [edx-0x66ec009e],esi
  40f026:	push   eax
  40f027:	jle    0x40efe9
  40f029:	sbb    DWORD PTR [edx-0x7f],ebx
  40f02c:	scas   eax,DWORD PTR es:[edi]
  40f02d:	scas   al,BYTE PTR es:[edi]
  40f02e:	push   0xfb52881c
  40f033:	idiv   BYTE PTR [eax+0x511b2c2a]
  40f039:	xchg   ebx,eax
  40f03a:	xor    esi,DWORD PTR [edx+esi*2-0x6eb0bf69]
  40f041:	push   esi
  40f042:	aas    
  40f043:	jbe    0x40f03d
  40f045:	sar    DWORD PTR [edi+0x3682ac65],0xb6
  40f04c:	or     ebx,ecx
  40f04e:	cmp    al,BYTE PTR [ebp-0x23]
  40f051:	lods   al,BYTE PTR ds:[esi]
  40f052:	and    DWORD PTR [edx-0x6a],esp
  40f055:	adc    DWORD PTR [eax-0x7e],edx
  40f058:	mov    esi,0x69cab9c7
  40f05d:	adc    DWORD PTR [esi-0x66],0xffffffe5
  40f061:	pop    esi
  40f062:	loope  0x40f014
  40f064:	aaa    
  40f065:	int3   
  40f066:	sub    ebp,DWORD PTR [edi-0xe5c052e]
  40f06c:	jbe    0x40f001
  40f06e:	fsub   DWORD PTR [edx+0x55d05502]
  40f074:	(bad)  
  40f075:	fimul  WORD PTR [edx+eax*2-0x5b]
  40f079:	ja     0x40f080
  40f07b:	rcr    dh,cl
  40f07d:	adc    dh,bl
  40f07f:	scas   al,BYTE PTR es:[edi]
  40f080:	jnp    0x40f03f
  40f082:	mov    al,0xf9
  40f084:	inc    esp
  40f085:	(bad)  
  40f086:	bound  edi,QWORD PTR [ebp+0x63]
  40f089:	add    al,0x32
  40f08b:	out    0xb,eax
  40f08d:	je     0x40f0e2
  40f08f:	or     eax,0xd3b6f9a5
  40f094:	or     BYTE PTR [eax+0x7a080649],ch
  40f09a:	or     edx,DWORD PTR [eax]
  40f09c:	call   0x663b3467
  40f0a1:	stos   DWORD PTR es:[edi],eax
  40f0a2:	push   cs
  40f0a3:	mov    ?,esp
  40f0a5:	fcom   DWORD PTR [esi-0x4ff1a89c]
  40f0ab:	in     al,0x3e
  40f0ad:	in     eax,dx
  40f0ae:	mov    esp,0x48e13571
  40f0b3:	xchg   esi,eax
  40f0b4:	sub    bl,BYTE PTR [edx+0x3b68da1c]
  40f0ba:	and    BYTE PTR [eax+ecx*4+0x73cc6b32],0x20
  40f0c2:	leave  
  40f0c3:	jmp    0x338b:0xdff9b2c1
  40f0ca:	xchg   bh,bh
  40f0cc:	inc    edi
  40f0cd:	xchg   ebx,eax
  40f0ce:	mov    eax,0xd8cfde33
  40f0d3:	push   edi
  40f0d4:	pop    esi
  40f0d5:	(bad)  
  40f0d6:	jg     0x40f098
  40f0d8:	add    dl,dh
  40f0da:	or     DWORD PTR [edi],ecx
  40f0dc:	lods   eax,DWORD PTR ds:[esi]
  40f0dd:	mov    ch,0x8f
  40f0df:	mov    edi,0xb6fbf319
  40f0e4:	shr    DWORD PTR [edi-0x1],0x7f
  40f0e8:	fnstenv [eax+0x629aeac6]
  40f0ee:	cld    
  40f0ef:	jge    0x40f126
  40f0f1:	push   0xe373ce6c
  40f0f6:	icebp  
  40f0f7:	xchg   DWORD PTR es:[edi],edi
  40f0fa:	xor    BYTE PTR [edx],0xde
  40f0fd:	pop    esi
  40f0fe:	mov    eax,0xcdf0f0a4
  40f103:	mov    ds:0x11752448,eax
  40f108:	xchg   ch,dl
  40f10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f10b:	(bad)  
  40f10c:	lds    ebp,FWORD PTR [ecx-0x42]
  40f10f:	pop    edx
  40f110:	out    dx,al
  40f111:	int3   
  40f112:	xchg   edx,eax
  40f113:	js     0x40f184
  40f115:	jge    0x40f0d9
  40f117:	ja     0x40f0a4
  40f119:	dec    eax
  40f11a:	sbb    eax,0x11
  40f11d:	cmp    eax,0x9f1ee545
  40f122:	push   ebx
  40f123:	ficom  WORD PTR [eax+0x62]
  40f126:	into   
  40f127:	mov    cl,0x52
  40f129:	jmp    0x40f1a8
  40f12b:	mov    cl,0xb5
  40f12d:	ficomp WORD PTR [ecx-0x6]
  40f130:	lods   eax,DWORD PTR ds:[esi]
  40f131:	repz add esi,DWORD PTR [ecx]
  40f134:	push   es
  40f135:	arpl   sp,si
  40f137:	enter  0x6f7c,0x29
  40f13b:	outs   dx,BYTE PTR ds:[esi]
  40f13c:	lods   eax,DWORD PTR ds:[esi]
  40f13d:	add    bh,ah
  40f13f:	shl    BYTE PTR [eax+0xaf723ba],cl
  40f145:	or     DWORD PTR [esi-0x4b],ebp
  40f148:	jl     0x40f10d
  40f14a:	gs jno 0x40f1c3
  40f14d:	add    DWORD PTR [ecx+0x4b799c07],ecx
  40f153:	popf   
  40f154:	cld    
  40f155:	mov    esi,0xa4df96a3
  40f15a:	je     0x40f1d1
  40f15c:	js     0x40f1d1
  40f15e:	cmp    ebp,eax
  40f160:	push   ecx
  40f161:	mov    eax,0xa9692541
  40f166:	shr    BYTE PTR [ebx-0x34b8f2bc],0x3f
  40f16d:	jb     0x40f13d
  40f16f:	pop    es
  40f170:	mov    ecx,0xeecfc2bf
  40f175:	xor    eax,0x9a3684f5
  40f17a:	icebp  
  40f17b:	xor    BYTE PTR [edi],ch
  40f17d:	stos   DWORD PTR es:[edi],eax
  40f17e:	cs jg  0x40f107
  40f181:	sbb    eax,DWORD PTR ds:0x787602d5
  40f187:	dec    ebx
  40f188:	add    DWORD PTR [ecx-0x50],esi
  40f18b:	fsubp  st(7),st
  40f18d:	inc    ecx
  40f18e:	retf   
  40f18f:	out    dx,al
  40f190:	aas    
  40f191:	cs mov bl,0x57
  40f194:	jno    0x40f1c0
  40f196:	scas   eax,DWORD PTR es:[edi]
  40f197:	leave  
  40f198:	and    BYTE PTR [eax],dh
  40f19a:	nop
  40f19b:	fnstenv [ebp-0x63]
  40f19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f19f:	push   0xffffffd6
  40f1a1:	das    
  40f1a2:	bound  esp,QWORD PTR [ebx]
  40f1a4:	in     eax,0x8c
  40f1a6:	std    
  40f1a7:	pop    eax
  40f1a8:	stos   DWORD PTR es:[edi],eax
  40f1a9:	pusha  
  40f1aa:	push   edi
  40f1ab:	ja     0x40f211
  40f1ad:	sbb    eax,0x60f7df18
  40f1b2:	loop   0x40f200
  40f1b4:	or     DWORD PTR [ebx-0x48e7515c],edi
  40f1ba:	inc    eax
  40f1bb:	mov    al,ds:0x493e0c05
  40f1c0:	cdq    
  40f1c1:	call   0xec20:0xb7316b2c
  40f1c8:	sar    BYTE PTR [esi-0x7e],cl
  40f1cb:	jecxz  0x40f1c8
  40f1cd:	ss inc ebx
  40f1cf:	sub    al,0xe2
  40f1d1:	ss push esp
  40f1d3:	(bad)  
  40f1d4:	mov    al,ds:0x6a6c2a4b
  40f1d9:	sub    bh,bh
  40f1db:	cmp    al,0xd0
  40f1dd:	adc    al,0x6c
  40f1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e0:	pop    ebx
  40f1e1:	les    esi,FWORD PTR gs:[ebp+0xf928a4e]
  40f1e8:	add    al,0xe7
  40f1ea:	xchg   esi,eax
  40f1eb:	adc    ecx,DWORD PTR [edx+0x13]
  40f1ee:	and    bh,dh
  40f1f0:	xchg   ecx,eax
  40f1f1:	(bad)  
  40f1f2:	sub    dl,cl
  40f1f4:	sbb    al,0x58
  40f1f6:	jnp    0x40f256
  40f1f8:	fcomi  st,st(3)
  40f1fa:	aad    0xd1
  40f1fc:	jmp    0x40f23b
  40f1fe:	dec    edx
  40f1ff:	xchg   ecx,eax
  40f200:	mov    cl,bl
  40f202:	jp     0x40f20d
  40f204:	ret    0x5ad3
  40f207:	test   DWORD PTR [eax-0x1a],esi
  40f20a:	jp     0x40f1c6
  40f20c:	add    eax,DWORD PTR [ebx+0x2d]
  40f20f:	mov    ecx,0x8905abfc
  40f214:	push   ds
  40f215:	jg     0x40f197
  40f217:	mov    ds:0x77a70d34,al
  40f21c:	inc    eax
  40f21d:	(bad)  
  40f21e:	(bad)  
  40f220:	sbb    al,0x1d
  40f222:	cld    
  40f223:	pop    ebx
  40f224:	or     al,0x2e
  40f226:	sbb    bh,dl
  40f228:	xchg   DWORD PTR [ebp-0x68],ecx
  40f22b:	sbb    esp,DWORD PTR [ebx]
  40f22d:	sbb    bl,cl
  40f22f:	jg     0x40f1ef
  40f231:	pop    esi
  40f232:	(bad)  
  40f233:	lock cmc 
  40f235:	or     ebx,DWORD PTR [ecx+0x4b]
  40f238:	xchg   ebp,eax
  40f239:	loop   0x40f277
  40f23b:	inc    esp
  40f23c:	mov    cl,0xd8
  40f23e:	sahf   
  40f23f:	rol    ch,0x61
  40f242:	fcmovbe st,st(6)
  40f244:	mov    eax,ds:0xefb8ebcb
  40f249:	sub    BYTE PTR [ebx+0x60dd9ade],bh
  40f24f:	sub    ebx,DWORD PTR [edx]
  40f251:	inc    ebp
  40f252:	mov    WORD PTR [ebp-0x768af813],cs
  40f258:	scas   eax,DWORD PTR es:[edi]
  40f259:	mov    eax,ds:0x8e43f540
  40f25e:	xor    ah,BYTE PTR [esp+edi*8]
  40f261:	inc    ecx
  40f262:	and    BYTE PTR [esi+0x7ec186e8],dh
  40f268:	pop    ebx
  40f269:	xchg   DWORD PTR [eax+0x33b01e0d],ebp
  40f26f:	popf   
  40f270:	imul   edx,DWORD PTR [esi],0xabd87ff0
  40f276:	add    eax,0x7d16328
  40f27b:	push   ds
  40f27c:	cmp    bl,ch
  40f27e:	inc    edi
  40f27f:	fistp  WORD PTR [esi+edi*2+0x32]
  40f283:	lea    ebx,[ebx]
  40f285:	cmp    BYTE PTR [edx+0x5471ce6e],dh
  40f28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28c:	lock mov bl,0xc0
  40f28f:	push   edi
  40f290:	and    eax,0xe65692be
  40f295:	mov    ah,0x95
  40f297:	dec    ebp
  40f298:	pop    ds
  40f299:	call   0xaf45:0x72b4796a
  40f2a0:	or     eax,DWORD PTR [ebx]
  40f2a2:	and    al,0xce
  40f2a4:	bnd ret 
  40f2a6:	push   cs
  40f2a7:	fs push edi
  40f2a9:	in     eax,dx
  40f2aa:	(bad)  
  40f2ac:	fcomp  DWORD PTR [edi+0x68e36ea6]
  40f2b2:	push   ebx
  40f2b3:	lock pop eax
  40f2b5:	shr    DWORD PTR [edx],1
  40f2b7:	leave  
  40f2b8:	adc    bl,BYTE PTR [eax+0x5e0b72a7]
  40f2be:	xor    eax,0xa8fe662
  40f2c3:	push   ds
  40f2c4:	mov    edi,DWORD PTR ds:[esi-0x7c0d95a8]
  40f2cb:	test   al,0x7c
  40f2cd:	les    esi,FWORD PTR [edi+0x5a1c90ee]
  40f2d3:	jnp    0x40f2e6
  40f2d5:	jl     0x40f2eb
  40f2d7:	xchg   BYTE PTR [ebp+0x40],cl
  40f2da:	jno    0x40f31b
  40f2dc:	sbb    al,0x43
  40f2de:	repz jbe 0x40f33f
  40f2e1:	iret   
  40f2e2:	(bad)  
  40f2e3:	cs out dx,eax
  40f2e5:	inc    edx
  40f2e6:	add    BYTE PTR [ecx+eiz*2-0x39],dl
  40f2ea:	pop    ds
  40f2eb:	popa   
  40f2ec:	mov    edi,0xd633f09
  40f2f1:	add    bl,BYTE PTR [esi-0x4e]
  40f2f4:	dec    ebx
  40f2f5:	or     eax,0x7866c330
  40f2fa:	lahf   
  40f2fb:	(bad)  
  40f2fc:	int3   
  40f2fd:	dec    esi
  40f2fe:	lock mov edx,0xd0b13e29
  40f304:	leave  
  40f305:	xor    al,0x6f
  40f307:	mov    ds:0x48d5d193,eax
  40f30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f30d:	stos   BYTE PTR es:[edi],al
  40f30e:	sbb    al,0x31
  40f310:	push   ecx
  40f311:	(bad)  
  40f312:	out    dx,eax
  40f313:	cmp    ebx,DWORD PTR [ecx+0x150aa022]
  40f319:	ffreep st(5)
  40f31b:	or     BYTE PTR [edi+0x59d6eabb],al
  40f321:	mov    bh,0x74
  40f323:	or     DWORD PTR [edx],esp
  40f325:	pop    edx
  40f326:	push   0x5d9a6c09
  40f32b:	dec    ebp
  40f32c:	test   BYTE PTR [eax],0xab
  40f32f:	retf   0x871c
  40f332:	pop    ebx
  40f333:	inc    ebx
  40f334:	inc    eax
  40f335:	xchg   esi,eax
  40f336:	push   es
  40f337:	loopne 0x40f365
  40f339:	xor    al,ch
  40f33b:	sub    al,0x7a
  40f33d:	fld    QWORD PTR [ebx+0x20e2a212]
  40f343:	je     0x40f385
  40f345:	inc    ebp
  40f346:	mov    ch,0xb5
  40f348:	pop    esi
  40f349:	(bad)  
  40f34a:	xchg   edi,eax
  40f34b:	sub    BYTE PTR [edi],ah
  40f34d:	push   eax
  40f34e:	cwde   
  40f34f:	jns    0x40f33d
  40f351:	adc    ah,ch
  40f353:	call   0x6751:0x9e56bd58
  40f35a:	cmp    eax,0xcd54d21b
  40f35f:	push   es
  40f360:	push   eax
  40f361:	sub    DWORD PTR [esi-0x4e],esi
  40f364:	call   FWORD PTR [ebx+0x7f7b1821]
  40f36a:	ss add bl,al
  40f36d:	xor    DWORD PTR [esi+0x46],ebx
  40f370:	dec    esi
  40f371:	fmul   st,st(5)
  40f373:	in     al,dx
  40f374:	das    
  40f375:	push   ds
  40f376:	push   cs
  40f377:	retf   
  40f378:	mov    ecx,0x63151f35
  40f37d:	ja     0x40f37e
  40f37f:	arpl   WORD PTR [edi],bx
  40f381:	cld    
  40f382:	outs   dx,BYTE PTR ds:[esi]
  40f383:	sub    al,0x90
  40f385:	ins    BYTE PTR es:[edi],dx
  40f386:	popa   
  40f387:	sub    ebp,0x6c5541d5
  40f38d:	stc    
  40f38e:	(bad)  
  40f38f:	push   ebx
  40f390:	ds pop ecx
  40f392:	cmp    BYTE PTR [eax+0x65a31f19],0x5c
  40f399:	shl    BYTE PTR [eax],0xc4
  40f39c:	repnz or al,0xc
  40f39f:	or     eax,0xa6634087
  40f3a4:	push   edx
  40f3a5:	std    
  40f3a6:	or     eax,edx
  40f3a8:	(bad)  
  40f3a9:	cmp    DWORD PTR [eax+0x3a6513f5],ecx
  40f3af:	in     al,dx
  40f3b0:	push   0x29
  40f3b2:	dec    ebp
  40f3b3:	call   DWORD PTR [esi+0x6a]
  40f3b6:	fwait
  40f3b7:	les    esi,FWORD PTR [ecx+0x79]
  40f3ba:	push   0x7c882c64
  40f3bf:	js     0x40f342
  40f3c1:	dec    ebp
  40f3c2:	xor    BYTE PTR [edi+0x1],al
  40f3c5:	adc    DWORD PTR [edi-0x4d],ebx
  40f3c8:	mov    bh,0xbc
  40f3ca:	call   DWORD PTR [edx]
  40f3cc:	sbb    ebx,edi
  40f3ce:	fcmove st,st(1)
  40f3d0:	inc    ebx
  40f3d1:	push   edx
  40f3d2:	sbb    al,0x7b
  40f3d4:	mov    ah,0x7f
  40f3d6:	xchg   esp,eax
  40f3d7:	jno    0x40f3e0
  40f3d9:	aaa    
  40f3da:	add    BYTE PTR [ebp-0xf2a202f],ah
  40f3e0:	mov    bl,0xac
  40f3e2:	out    dx,al
  40f3e3:	ja     0x40f375
  40f3e5:	in     eax,dx
  40f3e6:	dec    ebp
  40f3e7:	adc    eax,0x65a0747d
  40f3ec:	test   eax,0xeb624f
  40f3f1:	mov    al,0x14
  40f3f3:	les    ebp,FWORD PTR [edi-0x44]
  40f3f6:	fidiv  DWORD PTR [edx-0xa]
  40f3f9:	test   BYTE PTR [edi+0x1eafe076],bl
  40f3ff:	pop    edi
  40f400:	stos   DWORD PTR es:[edi],eax
  40f401:	cmp    eax,0x63bac735
  40f406:	mov    dh,bh
  40f408:	sti    
  40f409:	ffreep st(1)
  40f40b:	aad    0xd8
  40f40d:	push   ss
  40f40e:	test   al,0xa3
  40f410:	push   cs
  40f411:	push   ebx
  40f412:	imul   ecx,edi,0x66c845bc
  40f418:	mov    eax,0x5a3ccde0
  40f41d:	scas   al,BYTE PTR es:[edi]
  40f41e:	jg     0x40f48c
  40f420:	or     BYTE PTR [eax],bl
  40f422:	std    
  40f423:	fcom   QWORD PTR [edi+0x68618618]
  40f429:	pop    eax
  40f42a:	sbb    BYTE PTR ds:0x78d3ebde,dh
  40f430:	adc    BYTE PTR ds:0x304faa66,dl
  40f436:	stos   DWORD PTR es:[edi],eax
  40f437:	mov    edi,esp
  40f439:	xchg   ebp,eax
  40f43a:	je     0x40f492
  40f43c:	lods   eax,DWORD PTR ds:[esi]
  40f43d:	(bad)  
  40f43f:	mov    dh,0x71
  40f441:	inc    esp
  40f442:	sbb    cl,ch
  40f444:	push   esi
  40f445:	cmp    al,0x94
  40f447:	adc    bl,BYTE PTR [esi]
  40f449:	inc    ecx
  40f44a:	pushf  
  40f44b:	jb     0x40f3f5
  40f44d:	inc    edx
  40f44e:	pop    edi
  40f44f:	add    al,0x4e
  40f451:	pusha  
  40f452:	xlat   BYTE PTR ds:[ebx]
  40f453:	jge    0x40f457
  40f455:	xchg   ebx,eax
  40f456:	popa   
  40f457:	int3   
  40f458:	repnz lock out 0x74,al
  40f45c:	sbb    DWORD PTR [eax-0x53],ebp
  40f45f:	inc    esp
  40f460:	jo     0x40f43a
  40f462:	xor    ah,dh
  40f464:	push   es
  40f465:	ss ret 
  40f467:	xchg   eax,edi
  40f469:	xor    al,0x36
  40f46b:	mov    ebx,0x1604e116
  40f470:	gs pusha 
  40f472:	inc    edx
  40f473:	xchg   edx,eax
  40f474:	arpl   WORD PTR [ecx-0x71],cx
  40f477:	sub    BYTE PTR [ecx],ch
  40f479:	adc    bl,BYTE PTR [edx-0x1f24d4e2]
  40f47f:	loopne 0x40f406
  40f481:	aaa    
  40f482:	lock ficom DWORD PTR fs:[edx+0x36]
  40f487:	push   es
  40f488:	xchg   ecx,eax
  40f489:	mov    eax,ds:0x1c2a1244
  40f48e:	nop
  40f48f:	sahf   
  40f490:	stos   BYTE PTR es:[edi],al
  40f491:	push   ds
  40f492:	xor    ch,BYTE PTR [ebp-0x54]
  40f495:	pop    ebx
  40f496:	push   edx
  40f497:	lds    esp,FWORD PTR [ebp+0x8ad3380]
  40f49d:	cmp    dl,BYTE PTR [edx]
  40f49f:	ins    BYTE PTR es:[edi],dx
  40f4a0:	popa   
  40f4a1:	sti    
  40f4a2:	cmc    
  40f4a3:	pushf  
  40f4a4:	pusha  
  40f4a5:	cmp    edx,DWORD PTR [esi-0x4]
  40f4a8:	mov    cl,0x95
  40f4aa:	cvttps2pi mm1,QWORD PTR [eax]
  40f4ad:	aam    0xe7
  40f4af:	fwait
  40f4b0:	imul   edi,DWORD PTR [eax+0x19],0xffffffd8
  40f4b4:	mov    ch,0x5e
  40f4b6:	jo     0x40f44a
  40f4b8:	inc    ebx
  40f4b9:	xchg   edi,eax
  40f4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4bb:	(bad)  
  40f4bc:	jmp    DWORD PTR [edx]
  40f4be:	ror    edx,0xf4
  40f4c1:	hlt    
  40f4c2:	in     eax,dx
  40f4c3:	(bad)  
  40f4c4:	sti    
  40f4c5:	jno    0x40f520
  40f4c7:	adc    ebx,DWORD PTR [ecx-0x7b3f893b]
  40f4cd:	retf   0x590d
  40f4d0:	(bad)  
  40f4d2:	test   al,0x38
  40f4d4:	or     al,0x29
  40f4d6:	aam    0xdf
  40f4d8:	arpl   WORD PTR [ecx],sp
  40f4da:	mov    al,0x6e
  40f4dc:	add    bh,BYTE PTR [ecx-0x64]
  40f4df:	psubd  mm6,QWORD PTR [esi]
  40f4e2:	dec    edi
  40f4e3:	push   eax
  40f4e4:	pop    edx
  40f4e5:	ins    BYTE PTR es:[edi],dx
  40f4e6:	jns    0xbf9827bb
  40f4ec:	popf   
  40f4ed:	aas    
  40f4ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4ef:	ins    DWORD PTR es:[edi],dx
  40f4f0:	jmp    0xe1c7:0x4bc3fa6b
  40f4f7:	sub    ah,BYTE PTR [eax]
  40f4f9:	call   0x9db:0x564cb924
  40f500:	jmp    0x3632:0x5dd52ccc
  40f507:	mov    esp,0xa51138b5
  40f50c:	jnp    0x40f581
  40f50e:	scas   al,BYTE PTR es:[edi]
  40f50f:	mov    ebx,DWORD PTR [edx+eiz*2+0x23]
  40f513:	mov    dh,BYTE PTR [esi+0x58a9368d]
  40f519:	mov    ch,0xff
  40f51b:	ret    0x186e
  40f51e:	jne    0x40f54f
  40f520:	jmp    FWORD PTR [ecx+eax*2-0x3bbf6bb7]
  40f527:	stos   DWORD PTR es:[edi],eax
  40f528:	out    0x27,eax
  40f52a:	stc    
  40f52b:	imul   ecx,DWORD PTR [eax],0x58
  40f52e:	in     al,dx
  40f52f:	out    dx,eax
  40f530:	out    0x1d,al
  40f532:	je     0x40f4c0
  40f534:	in     eax,0x30
  40f536:	jmp    DWORD PTR [ebx-0xf]
  40f539:	mov    ds:0x818eddf1,al
  40f53e:	sub    al,0xa3
  40f540:	into   
  40f541:	stos   DWORD PTR es:[edi],eax
  40f542:	pop    es
  40f543:	and    cl,BYTE PTR [ebx+0x57]
  40f546:	cmp    al,0x6b
  40f548:	sar    ah,1
  40f54a:	or     bl,BYTE PTR [ebx+eiz*8-0x3c]
  40f54e:	jnp    0x40f4df
  40f550:	sub    al,BYTE PTR [eax+0x2b44b725]
  40f556:	jmp    0x7032ae0c
  40f55b:	(bad)  
  40f55c:	test   BYTE PTR [esi-0x2b69efff],bl
  40f562:	cmc    
  40f563:	hlt    
  40f564:	sub    BYTE PTR [ecx],al
  40f566:	cmp    al,0xd8
  40f568:	outs   dx,BYTE PTR ds:[esi]
  40f569:	stos   DWORD PTR es:[edi],eax
  40f56a:	out    0xbf,eax
  40f56c:	scas   al,BYTE PTR es:[edi]
  40f56d:	xor    esi,DWORD PTR [edi+0x5f]
  40f570:	mov    eax,ds:0x5d5b3bc
  40f575:	loopne 0x40f5c7
  40f577:	mov    dh,0xe3
  40f579:	iret   
  40f57a:	bound  eax,QWORD PTR [esi]
  40f57c:	arpl   WORD PTR [eax+0x137c3869],si
  40f582:	jo     0x40f56d
  40f584:	nop
  40f585:	js     0x40f511
  40f587:	repz xor eax,DWORD PTR [ebx+0x28]
  40f58b:	mov    dl,0xfb
  40f58d:	jo     0x40f562
  40f58f:	add    al,0x93
  40f591:	and    eax,DWORD PTR [esi+0x75435d68]
  40f597:	es jge 0x40f595
  40f59a:	cld    
  40f59b:	jmp    0x3af9f97
  40f5a0:	les    edi,FWORD PTR [edi+0x21ba46e8]
  40f5a6:	fstp   QWORD PTR [edi+0x61]
  40f5a9:	ror    DWORD PTR [ebx-0x305d3105],cl
  40f5af:	and    cl,BYTE PTR [edx+0x7d095aca]
  40f5b5:	aad    0xd5
  40f5b7:	pusha  
  40f5b8:	add    DWORD PTR [ecx+0x6baa6934],ebp
  40f5be:	or     eax,0xa4252fe5
  40f5c3:	jmp    0x5405:0xe9b720d
  40f5ca:	sub    eax,0x216a8906
  40f5cf:	sub    eax,0xdd553d13
  40f5d4:	fsub   st(7),st
  40f5d6:	or     al,0xb5
  40f5d8:	(bad)  
  40f5da:	inc    ecx
  40f5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5dc:	pop    ds
  40f5dd:	and    bl,BYTE PTR [eax+0x1f]
  40f5e0:	jp     0x40f565
  40f5e2:	pop    ds
  40f5e3:	(bad)  
  40f5e4:	(bad)  
  40f5e5:	mov    ebp,0x42165539
  40f5ea:	das    
  40f5eb:	cli    
  40f5ec:	and    ebx,DWORD PTR [esp+ebx*2+0x61cec47a]
  40f5f3:	dec    ecx
  40f5f5:	or     bl,BYTE PTR [ebx+0x7b686dfc]
  40f5fb:	xchg   edi,eax
  40f5fc:	cld    
  40f5fd:	mov    ebp,0x20fb2878
  40f602:	mov    ecx,0x96c5ba91
  40f607:	ins    DWORD PTR es:[edi],dx
  40f608:	les    ebp,FWORD PTR [esi+ecx*1+0x44f3c616]
  40f60f:	stc    
  40f610:	inc    esp
  40f611:	sub    BYTE PTR [ecx+0x3e0bd6d3],cl
  40f617:	ss mov ecx,0xdb99ee65
  40f61d:	jg     0x40f5c5
  40f61f:	lahf   
  40f620:	mov    dh,0x3d
  40f622:	retf   0xe50c
  40f625:	cmc    
  40f626:	mov    ah,0x38
  40f628:	mov    dl,0xc9
  40f62a:	fmul   DWORD PTR [ebx+0x45]
  40f62d:	cmp    DWORD PTR [edx],0x23590e41
  40f633:	cwde   
  40f634:	daa    
  40f635:	cmovo  esp,DWORD PTR [ecx+0x56]
  40f639:	rol    eax,1
  40f63b:	pop    edx
  40f63c:	mov    dh,dh
  40f63e:	fsubr  QWORD PTR [eax+edx*2+0x76]
  40f642:	aam    0x7b
  40f644:	jle    0x40f62a
  40f646:	clc    
  40f647:	push   cs
  40f648:	and    cl,dh
  40f64a:	dec    ebp
  40f64b:	fdivr  DWORD PTR [ecx+0x62f1bd4d]
  40f651:	fs mov dh,0x25
  40f654:	xor    eax,0xa12f754d
  40f659:	push   eax
  40f65a:	push   esp
  40f65b:	fidivr DWORD PTR [edi]
  40f65d:	sti    
  40f65e:	sub    al,0xc5
  40f660:	or     BYTE PTR fs:0x50717aa9,0x51
  40f668:	add    DWORD PTR [ebx],ecx
  40f66a:	push   ds
  40f66b:	call   0x8883e996
  40f670:	enter  0x70df,0x1
  40f674:	dec    ecx
  40f675:	mov    cl,0x4b
  40f677:	mov    cl,0x98
  40f679:	data16 icebp 
  40f67b:	pop    ds
  40f67c:	out    dx,al
  40f67d:	outs   dx,BYTE PTR ds:[esi]
  40f67e:	fs pop ecx
  40f680:	(bad)  
  40f681:	ror    edx,cl
  40f683:	mov    edx,0x8969fdd2
  40f688:	cmovp  esi,DWORD PTR [eax+0x2ec2b015]
  40f68f:	je     0x40f638
  40f691:	mov    ebp,0xe84cd9a3
  40f696:	jns    0x40f662
  40f698:	aad    0x0
  40f69a:	test   BYTE PTR ds:0x9b3471cb,cl
  40f6a0:	scas   al,BYTE PTR es:[edi]
  40f6a1:	jecxz  0x40f6dc
  40f6a3:	mov    ebp,esp
  40f6a5:	and    cl,al
  40f6a7:	(bad)  
  40f6a8:	push   cs
  40f6a9:	sahf   
  40f6aa:	xchg   BYTE PTR [edx-0x65],cl
  40f6ad:	mov    bl,BYTE PTR [eax-0x56]
  40f6b0:	mov    edx,0x67cd3cf4
  40f6b5:	sbb    cl,BYTE PTR [edx]
  40f6b7:	pop    edi
  40f6b8:	int3   
  40f6b9:	popf   
  40f6ba:	jbe    0x40f6d7
  40f6bc:	pusha  
  40f6bd:	fiadd  DWORD PTR [ebx]
  40f6bf:	inc    ecx
  40f6c0:	leave  
  40f6c1:	adc    al,0xfb
  40f6c3:	icebp  
  40f6c4:	xlat   BYTE PTR ds:[ebx]
  40f6c5:	scas   al,BYTE PTR es:[edi]
  40f6c6:	or     dl,BYTE PTR [ebx]
  40f6c8:	xchg   edi,ecx
  40f6ca:	sbb    eax,0xb921caf3
  40f6cf:	les    esi,FWORD PTR [edx-0x6d]
  40f6d2:	neg    DWORD PTR [ebx]
  40f6d4:	jae    0x40f68d
  40f6d6:	and    DWORD PTR [ebx-0x3d],ebp
  40f6d9:	jo     0x40f729
  40f6db:	les    edi,FWORD PTR [edi+0x7d]
  40f6de:	fadd   DWORD PTR [ebx-0x486b99]
  40f6e4:	in     al,0x8d
  40f6e6:	fistp  WORD PTR [ebp+0x2cbe696e]
  40f6ec:	imul   edx,DWORD PTR [eax+ebp*8+0x1151a25d],0xffffffc9
  40f6f4:	icebp  
  40f6f5:	cs jmp 0xd5a8e8aa
  40f6fb:	ins    DWORD PTR es:[edi],dx
  40f6fc:	je     0x40f687
  40f6fe:	loopne 0x40f6de
  40f700:	mov    WORD PTR [edx],?
  40f702:	out    0x7a,al
  40f704:	pop    ebp
  40f705:	(bad)  
  40f706:	or     al,0x3
  40f708:	cmp    ch,ch
  40f70a:	mov    ds:0x366bce3f,eax
  40f70f:	mov    edi,0xe1456d0c
  40f714:	rcl    BYTE PTR [eax+0x1e],1
  40f717:	es jno 0x40f74e
  40f71a:	and    ebx,edi
  40f71c:	sahf   
  40f71d:	mov    ah,0xe1
  40f71f:	xchg   esi,eax
  40f720:	cdq    
  40f721:	jns    0x40f6f2
  40f723:	add    esp,0x39
  40f726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f727:	loop   0x40f799
  40f729:	jns    0x40f706
  40f72b:	push   eax
  40f72c:	test   BYTE PTR [ebx-0x2d],0x64
  40f730:	lea    esp,[edx]
  40f732:	xchg   edi,eax
  40f733:	pop    edx
  40f734:	add    DWORD PTR [edi-0x7a09a8a6],edi
  40f73a:	sbb    BYTE PTR [esi-0x15],0x52
  40f73e:	xor    al,0x79
  40f740:	jp     0x40f798
  40f742:	fnsave [edi]
  40f744:	inc    esi
  40f745:	inc    edi
  40f746:	and    BYTE PTR [esi+0x4013623e],bh
  40f74c:	add    bh,BYTE PTR [ebx+eax*8-0x5d]
  40f750:	xor    DWORD PTR [eax+0x61c469e7],0xa84e85f1
  40f75a:	adc    edi,esp
  40f75c:	stos   DWORD PTR es:[edi],eax
  40f75d:	mov    edi,0x1a08bbf1
  40f762:	xlat   BYTE PTR ds:[ebx]
  40f763:	bound  ecx,QWORD PTR [esi]
  40f765:	retf   0x6746
  40f768:	cdq    
  40f769:	mov    dl,0x15
  40f76b:	mov    ch,0xc5
  40f76d:	push   0xffffffdb
  40f76f:	mov    edi,0x99d07067
  40f774:	loopne 0x40f709
  40f776:	mov    DWORD PTR [eax-0x71],esi
  40f779:	ins    DWORD PTR es:[edi],dx
  40f77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f77b:	mov    ecx,0xf26f646f
  40f780:	mov    ?,WORD PTR [esi-0x65]
  40f783:	out    0x1e,al
  40f785:	(bad)  
  40f786:	cmp    eax,0x7d15cfbe
  40f78b:	pop    eax
  40f78c:	or     bh,al
  40f78e:	les    ebx,FWORD PTR [eax-0x2aca4407]
  40f794:	adc    eax,0xae66db79
  40f799:	pusha  
  40f79a:	sahf   
  40f79b:	mov    eax,0x8d447249
  40f7a0:	sbb    DWORD PTR ds:0xd23a357c,0x4d
  40f7a7:	rol    BYTE PTR ds:0xf4bfb65e,1
  40f7ad:	sbb    cl,BYTE PTR [esi-0x30b6b626]
  40f7b3:	loope  0x40f764
  40f7b5:	div    DWORD PTR [esi+0x4e]
  40f7b8:	sub    BYTE PTR [edi-0x6],bl
  40f7bb:	sar    esi,1
  40f7bd:	cmp    eax,0xb5f4ebf7
  40f7c2:	ins    DWORD PTR es:[edi],dx
  40f7c3:	leave  
  40f7c4:	cmp    dl,BYTE PTR [edx]
  40f7c6:	aas    
  40f7c7:	mov    eax,0xcfb595aa
  40f7cc:	or     eax,0x2604317f
  40f7d1:	push   ebp
  40f7d2:	add    al,0xc2
  40f7d4:	cmp    ebx,ebp
  40f7d6:	xchg   BYTE PTR [esi-0x74],cl
  40f7d9:	imul   esi,esp,0xb2263066
  40f7df:	and    eax,0x8f93743d
  40f7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7e5:	mov    ds:0x2de5d47a,al
  40f7ea:	pop    eax
  40f7eb:	(bad)  
  40f7ec:	push   ebp
  40f7ed:	retf   0x5393
  40f7f0:	and    al,0xc4
  40f7f2:	lods   eax,DWORD PTR ds:[esi]
  40f7f3:	sti    
  40f7f4:	fwait
  40f7f5:	xor    al,0x73
  40f7f7:	es mov edx,0x577e26f0
  40f7fd:	pop    edi
  40f7fe:	jb     0x40f781
  40f800:	icebp  
  40f801:	xor    esp,esi
  40f803:	mov    ch,0x5d
  40f805:	adc    esi,edi
  40f807:	dec    edi
  40f808:	jbe    0x40f802
  40f80a:	mov    cl,0xc4
  40f80c:	dec    ecx
  40f80d:	adc    al,0x46
  40f80f:	in     al,0x4d
  40f811:	mov    ds:0xeb39bf02,al
  40f816:	les    eax,FWORD PTR [ebx-0x6e]
  40f819:	mov    ebx,0x5211d95
  40f81e:	les    ecx,FWORD PTR [eax+0x502af208]
  40f824:	xor    BYTE PTR [edx+0x3e1b9c10],0x79
  40f82b:	out    dx,eax
  40f82c:	popf   
  40f82d:	jl     0x40f86a
  40f82f:	or     al,0x49
  40f831:	dec    edx
  40f832:	sub    cl,BYTE PTR [ebp-0x38]
  40f835:	jecxz  0x40f899
  40f837:	test   ebp,eax
  40f839:	inc    ebx
  40f83a:	jnp    0x40f836
  40f83c:	pop    ecx
  40f83d:	cmp    al,0x76
  40f83f:	and    DWORD PTR [ecx-0x56],0x5b
  40f843:	push   esp
  40f844:	aaa    
  40f845:	shr    DWORD PTR [eax+0x53622bf9],1
  40f84b:	(bad)  
  40f84d:	xchg   DWORD PTR ss:[ebp+0x413aeab9],eax
  40f854:	jg     0x40f820
  40f856:	dec    eax
  40f857:	mov    ds:0x1d160257,eax
  40f85c:	fcom   DWORD PTR [ecx+0x67c61af9]
  40f862:	and    eax,0xd31e7d32
  40f867:	in     eax,0x7c
  40f869:	loopne 0x40f855
  40f86b:	retf   
  40f86c:	adc    DWORD PTR [edi],eax
  40f86e:	xor    DWORD PTR [esi],esi
  40f870:	mov    edx,ds
  40f872:	shl    DWORD PTR [edx-0x32],1
  40f875:	lods   eax,DWORD PTR ds:[esi]
  40f876:	aaa    
  40f877:	je     0x40f82a
  40f879:	sti    
  40f87a:	stos   DWORD PTR es:[edi],eax
  40f87b:	mov    ah,0x71
  40f87d:	leave  
  40f87e:	pop    ecx
  40f880:	dec    BYTE PTR [edi+0x11241e22]
  40f886:	lods   al,BYTE PTR ds:[esi]
  40f887:	mov    ch,0x36
  40f889:	call   0x5039cb2a
  40f88e:	push   0x21805f2b
  40f893:	or     BYTE PTR [ebx-0x653f1502],cl
  40f899:	dec    ecx
  40f89a:	fild   DWORD PTR [ecx+0x1a]
  40f89d:	and    al,0x8
  40f89f:	ins    BYTE PTR es:[edi],dx
  40f8a0:	cmp    bl,dl
  40f8a2:	xor    dh,BYTE PTR [esi+0x32a92093]
  40f8a8:	sbb    eax,0xb851fd14
  40f8ad:	mov    bh,0x12
  40f8af:	ja     0x40f90c
  40f8b1:	jg     0x40f8b6
  40f8b3:	mov    esi,0x75975c05
  40f8b8:	int3   
  40f8b9:	repz pop edi
  40f8bb:	and    DWORD PTR [ebp-0x3e],0xffffffb0
  40f8bf:	fild   WORD PTR [edx+esi*8-0x7cc29a52]
  40f8c6:	sub    ecx,edi
  40f8c8:	dec    ebp
  40f8c9:	stos   DWORD PTR es:[edi],eax
  40f8ca:	xchg   ebx,eax
  40f8cb:	mov    dl,BYTE PTR [ebx+0x7a217ef1]
  40f8d1:	fdivp  st(7),st
  40f8d3:	mov    bl,0x89
  40f8d5:	adc    ebp,DWORD PTR [ebx]
  40f8d7:	mov    fs,WORD PTR [ebx+0x760043e]
  40f8dd:	mov    ebx,0x5f71306c
  40f8e2:	fmul   DWORD PTR gs:[eax+0x7796240c]
  40f8e9:	rol    ebx,cl
  40f8eb:	and    ebp,DWORD PTR [edx+0x4a]
  40f8ee:	mov    cl,0x40
  40f8f0:	push   esp
  40f8f1:	push   ebp
  40f8f2:	shl    DWORD PTR [edx],cl
  40f8f4:	std    
  40f8f5:	inc    ecx
  40f8f6:	mov    edx,edi
  40f8f8:	(bad)  
  40f8f9:	cmp    al,0xff
  40f8fb:	ds popa 
  40f8fd:	(bad)  
  40f8fe:	dec    ebx
  40f8ff:	dec    eax
  40f900:	clc    
  40f901:	fcom   DWORD PTR [edi+0x66962cc7]
  40f907:	mul    esi
  40f909:	dec    esi
  40f90a:	rol    DWORD PTR [eax+0x31],0xad
  40f90e:	popf   
  40f90f:	lods   al,BYTE PTR ds:[esi]
  40f910:	jg     0x40f904
  40f912:	pop    ecx
  40f913:	mov    ch,0x3a
  40f915:	shr    BYTE PTR [ecx+0x64],0x11
  40f919:	sub    BYTE PTR [eax+0x3138b220],bh
  40f91f:	mov    al,0x4a
  40f921:	sahf   
  40f922:	jnp    0x40f8fe
  40f924:	(bad)  
  40f925:	fcmovb st,st(6)
  40f927:	fs xchg ebx,eax
  40f929:	call   0x25a1ddf7
  40f92e:	sbb    esi,edx
  40f930:	inc    eax
  40f931:	fsub   st(4),st
  40f933:	mov    al,0xb2
  40f935:	bound  ecx,QWORD PTR [eax-0x24]
  40f938:	ss push ds
  40f93a:	mov    al,0xff
  40f93c:	mov    ecx,0x87e365db
  40f941:	ror    DWORD PTR [esi-0x5a],1
  40f944:	sbb    ebp,DWORD PTR [ecx+ebp*8]
  40f947:	les    edi,FWORD PTR [ebx-0x40443c31]
  40f94d:	imul   ebx,DWORD PTR [edi-0x45],0xffffffe3
  40f951:	div    DWORD PTR [ebp-0x798fb05]
  40f957:	xlat   BYTE PTR ds:[ebx]
  40f958:	sahf   
  40f959:	fs push es
  40f95b:	cmc    
  40f95c:	mov    ds:0x54e83ed0,eax
  40f961:	leave  
  40f962:	lods   al,BYTE PTR ds:[esi]
  40f963:	pop    esi
  40f964:	push   ebp
  40f965:	mov    dh,0x57
  40f967:	mov    al,0x72
  40f969:	add    cl,ah
  40f96b:	out    0xa,al
  40f96d:	fcom   QWORD PTR cs:[edx-0x33]
  40f971:	xor    ah,BYTE PTR [edx]
  40f973:	inc    edx
  40f974:	mov    dh,0x3c
  40f976:	imul   BYTE PTR [edx]
  40f978:	shl    ebp,cl
  40f97a:	loop   0x40f949
  40f97c:	push   es
  40f97d:	in     al,0x99
  40f97f:	sub    esp,DWORD PTR ds:0x9bb0f925
  40f985:	stos   DWORD PTR es:[edi],eax
  40f986:	ds shl esp,1
  40f989:	imul   DWORD PTR [eax+0x2bfcf6bf]
  40f98f:	or     BYTE PTR [esi-0x76],0x36
  40f993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f994:	mov    edx,0xd59b9fe
  40f999:	xchg   edx,eax
  40f99a:	push   esp
  40f99b:	or     al,0xbd
  40f99d:	imul   ecx,DWORD PTR ds:0x4c28717c,0xf
  40f9a4:	loopne 0x40f9b0
  40f9a6:	xchg   ebx,eax
  40f9a7:	xchg   BYTE PTR [edx+0x3b],ah
  40f9aa:	inc    ebx
  40f9ab:	les    ecx,FWORD PTR [edi+0x2e2ff808]
  40f9b1:	pop    ecx
  40f9b2:	into   
  40f9b3:	jg     0x40f96c
  40f9b5:	pop    esi
  40f9b6:	outs   dx,BYTE PTR ds:[esi]
  40f9b7:	mov    esp,0xab3fc556
  40f9bc:	mov    esp,0x390d6d8f
  40f9c1:	adc    ah,BYTE PTR [edi-0x3]
  40f9c4:	inc    DWORD PTR [edi]
  40f9c6:	push   sp
  40f9c8:	shr    DWORD PTR [ebx+0x248744c3],1
  40f9ce:	sub    BYTE PTR [edx+0x34],0xac
  40f9d2:	lds    ecx,FWORD PTR [edi+ebp*8+0x7a]
  40f9d6:	cmp    BYTE PTR [edi-0x65],ch
  40f9d9:	xchg   DWORD PTR [eax],ecx
  40f9db:	scas   al,BYTE PTR es:[edi]
  40f9dc:	imul   edi,DWORD PTR [edx],0xffffffaf
  40f9df:	jbe    0x40fa32
  40f9e1:	in     al,0x3a
  40f9e3:	mov    BYTE PTR [esi-0xf1d5b37],bh
  40f9e9:	inc    edi
  40f9ea:	(bad)  
  40f9eb:	out    0xd,al
  40f9ed:	fsubr  st(0),st
  40f9ef:	push   0xbc94aacc
  40f9f4:	stc    
  40f9f5:	cmp    BYTE PTR [eax+0x1d],0x81
  40f9f9:	mov    al,ds:0x807e4f67
  40f9fe:	inc    edi
  40f9ff:	and    DWORD PTR [eax-0x38],0x850680c5
  40fa06:	and    al,BYTE PTR [edx+ecx*1-0x1d]
  40fa0a:	popa   
  40fa0b:	adc    esi,ebp
  40fa0d:	dec    ecx
  40fa0e:	cli    
  40fa0f:	inc    edx
  40fa10:	je     0x40f9c8
  40fa12:	pop    eax
  40fa13:	sti    
  40fa14:	dec    edx
  40fa15:	cmp    al,0x6e
  40fa17:	imul   edi,DWORD PTR [eax+0x74],0xb649c2db
  40fa1e:	dec    ebx
  40fa1f:	adc    edx,DWORD PTR [esp+ebx*4+0x5fc5c898]
  40fa26:	icebp  
  40fa27:	setg   BYTE PTR [ecx-0x390ae0e0]
  40fa2e:	sub    DWORD PTR [ecx-0xb],eax
  40fa31:	sbb    eax,0x3aaf9aa7
  40fa36:	push   ecx
  40fa37:	inc    edx
  40fa38:	imul   ebx,DWORD PTR [edi],0x56
  40fa3b:	repz or edi,DWORD PTR [edx+0x6158a950]
  40fa42:	imul   esp,DWORD PTR [edi],0x15934081
  40fa48:	pop    ebp
  40fa49:	jbe    0x40f9f0
  40fa4b:	inc    eax
  40fa4c:	cmc    
  40fa4d:	xchg   esi,eax
  40fa4e:	jp     0x40fa30
  40fa50:	scas   eax,DWORD PTR es:[edi]
  40fa51:	mov    ebp,0xd49c0e70
  40fa56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa57:	stos   DWORD PTR es:[edi],eax
  40fa58:	mov    edx,0x658d1b40
  40fa5d:	retf   0x855a
  40fa60:	adc    eax,0xf0509562
  40fa65:	sub    BYTE PTR [ebp-0x1ec89cee],0x8d
  40fa6c:	jbe    0x40fa9d
  40fa6e:	sbb    eax,DWORD PTR [ebx+0x31]
  40fa71:	out    dx,al
  40fa72:	out    0xb,al
  40fa74:	mov    BYTE PTR [ebp+0x6a96a80b],bl
  40fa7a:	inc    edx
  40fa7b:	add    cl,BYTE PTR [ebx-0x60]
  40fa7e:	cld    
  40fa7f:	push   es
  40fa80:	dec    ebx
  40fa81:	and    ecx,edx
  40fa83:	and    dh,BYTE PTR [eax]
  40fa85:	(bad)  
  40fa86:	jae    0x40fa24
  40fa88:	mov    edx,0x2879a90
  40fa8d:	js     0x40fac3
  40fa8f:	add    al,0x68
  40fa91:	mov    ah,0xc0
  40fa93:	outs   dx,DWORD PTR ds:[esi]
  40fa94:	mov    edx,0x7de8b75e
  40fa99:	call   0xa4a:0x7b94c4e4
  40faa0:	xchg   ebx,eax
  40faa1:	or     bh,BYTE PTR [ebx+0x72]
  40faa4:	addr16 shl ah,cl
  40faa7:	sti    
  40faa8:	push   ds
  40faa9:	and    dh,BYTE PTR [edi-0x5]
  40faac:	ins    DWORD PTR es:[edi],dx
  40faad:	mov    bh,0xac
  40faaf:	pop    ecx
  40fab0:	sti    
  40fab1:	(bad)  
  40fab3:	mov    eax,0x749d32e6
  40fab8:	jae    0x40fa83
  40faba:	enter  0xcac1,0x70
  40fabe:	shr    DWORD PTR [edi],0x1
  40fac1:	push   ss
  40fac2:	lods   al,BYTE PTR ds:[esi]
  40fac3:	dec    esi
  40fac4:	retf   
  40fac5:	xor    al,0xa
  40fac7:	aam    0x3b
  40fac9:	add    BYTE PTR [esi],0x9d
  40facc:	cwde   
  40facd:	jns    0x40fb15
  40facf:	arpl   WORD PTR [edi+0x33],sp
  40fad2:	hlt    
  40fad3:	add    eax,0x9a27c904
  40fad8:	test   BYTE PTR [eax+0xa],dl
  40fadb:	and    BYTE PTR [esi-0x5b38bd16],ch
  40fae1:	mov    DWORD PTR [ecx+0x7],esp
  40fae4:	sub    eax,0x7b2fc264
  40fae9:	adc    al,BYTE PTR [edi+0x67f683a8]
  40faef:	lds    esi,FWORD PTR [eax+ecx*8+0x6f]
  40faf3:	dec    edi
  40faf4:	cs aaa 
  40faf6:	mov    edi,DWORD PTR [ecx]
  40faf8:	adc    DWORD PTR ds:0xa74b4738,ebp
  40fafe:	rcr    BYTE PTR [esi+0x416e008a],1
  40fb04:	lods   al,BYTE PTR ds:[esi]
  40fb05:	adc    ebx,DWORD PTR [edi-0x58a8713b]
  40fb0b:	lahf   
  40fb0c:	fmul   DWORD PTR [edx+0x7af8c220]
  40fb12:	or     eax,0x9437b76e
  40fb17:	cmp    al,BYTE PTR [edx-0x474c797]
  40fb1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb1e:	xlat   BYTE PTR ds:[ebx]
  40fb1f:	or     eax,0xdbea7cdb
  40fb24:	mov    al,ds:0x23c4e50b
  40fb29:	and    edi,DWORD PTR [edi-0x229eba56]
  40fb2f:	mov    cl,BYTE PTR [edi+0x2b595cf]
  40fb35:	out    0x0,eax
  40fb37:	and    DWORD PTR [eax+ecx*4+0x7c],ebx
  40fb3b:	enter  0x8f2e,0x67
  40fb3f:	and    dl,BYTE PTR [esi-0x5f]
  40fb42:	ficom  WORD PTR [eax+0x37abe2e]
  40fb48:	xchg   ebx,eax
  40fb49:	stos   BYTE PTR es:[edi],al
  40fb4a:	xor    BYTE PTR [edi+eax*4],0xc2
  40fb4e:	inc    DWORD PTR [ebx+0x65]
  40fb51:	xchg   esp,eax
  40fb52:	fdivr  DWORD PTR [edi+0x1b57607f]
  40fb58:	icebp  
  40fb59:	or     DWORD PTR [ebp+0xf05ac79],0xa25deb06
  40fb63:	add    al,0xd4
  40fb65:	imul   edi,esp,0x28740eae
  40fb6b:	outs   dx,BYTE PTR ds:[esi]
  40fb6c:	imul   edi,ebp,0xffffffe3
  40fb6f:	int    0xf5
  40fb71:	clc    
  40fb72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb73:	jl     0x40fbd6
  40fb75:	jmp    0xb3a4cd41
  40fb7a:	push   edi
  40fb7b:	push   edx
  40fb7c:	inc    ebp
  40fb7d:	cwde   
  40fb7e:	pop    ebp
  40fb7f:	sbb    bl,bh
  40fb81:	rcl    DWORD PTR [ebx],1
  40fb83:	jmp    0x40fb72
  40fb85:	scas   eax,DWORD PTR es:[edi]
  40fb86:	jp     0x40fb7c
  40fb88:	xor    al,0xf4
  40fb8a:	fld    QWORD PTR [edi+esi*4]
  40fb8d:	or     eax,0xc8651bd
  40fb92:	jge    0x40fb18
  40fb94:	ret    0x9316
  40fb97:	jb     0x40fb26
  40fb99:	pop    ecx
  40fb9a:	pop    ds
  40fb9b:	add    DWORD PTR [ebx],0xc7a04113
  40fba1:	sub    ah,bh
  40fba3:	xchg   ecx,eax
  40fba4:	adc    ebx,DWORD PTR [esi+eax*4-0x57cbbcf7]
  40fbab:	cmp    edi,DWORD PTR [edi-0x69]
  40fbae:	ds xchg ebp,eax
  40fbb0:	mov    ebp,0x9cb167e9
  40fbb5:	sti    
  40fbb6:	mov    dh,0x94
  40fbb8:	lock outs dx,BYTE PTR ds:[esi]
  40fbba:	stc    
  40fbbb:	out    0x1b,al
  40fbbd:	hlt    
  40fbbe:	pop    esp
  40fbbf:	aad    0x28
  40fbc1:	adc    BYTE PTR [eax-0x439733f7],bl
  40fbc7:	mov    bl,0x6d
  40fbc9:	aaa    
  40fbca:	inc    esp
  40fbcb:	inc    esp
  40fbcc:	mov    esi,0x6e632a80
  40fbd1:	cmc    
  40fbd2:	movzx  esp,BYTE PTR [esi]
  40fbd5:	mov    ch,0x5b
  40fbd7:	sti    
  40fbd8:	mov    ecx,0x81c82791
  40fbdd:	jne    0x40fc16
  40fbdf:	dec    esp
  40fbe0:	es (bad) 
  40fbe2:	in     eax,0xba
  40fbe4:	add    al,0x8e
  40fbe6:	(bad)  
  40fbe8:	and    eax,0xcc1452be
  40fbed:	fdiv   DWORD PTR [edx]
  40fbef:	jecxz  0x40fb7f
  40fbf1:	push   0xa9fba830
  40fbf6:	dec    ecx
  40fbf7:	lock mov BYTE PTR [esi-0x6ea8ffc0],al
  40fbfe:	mov    dh,BYTE PTR [edi+ebx*4]
  40fc01:	mov    BYTE PTR [edi],bh
  40fc03:	jnp    0x40fbfa
  40fc05:	in     al,0x9d
  40fc07:	or     al,0x1
  40fc09:	jno    0x40fc7a
  40fc0b:	dec    esi
  40fc0c:	scas   al,BYTE PTR es:[edi]
  40fc0d:	sub    BYTE PTR [ebp-0x16],dh
  40fc10:	or     eax,0x797ce4f1
  40fc15:	pop    edx
  40fc16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc17:	mov    ebp,0xe1fcaaee
  40fc1c:	sub    al,0xa2
  40fc1e:	adc    eax,0x6f5e4178
  40fc23:	pop    ds
  40fc24:	ss test eax,0x26207fe0
  40fc2a:	and    al,BYTE PTR [edx+0x42580411]
  40fc30:	inc    ebp
  40fc31:	cmp    DWORD PTR [esi-0x4d],ecx
  40fc34:	dec    eax
  40fc35:	dec    ebx
  40fc36:	les    esi,FWORD PTR [eax+0x2c7f664]
  40fc3c:	mov    ebx,edx
  40fc3e:	mov    al,ds:0xc69d8661
  40fc43:	sbb    al,0x4c
  40fc45:	daa    
  40fc46:	test   DWORD PTR [edi],edx
  40fc48:	cmp    edx,DWORD PTR [esi-0x51]
  40fc4b:	pop    edi
  40fc4c:	push   ss
  40fc4d:	loopne 0x40fc07
  40fc4f:	outs   dx,BYTE PTR ds:[esi]
  40fc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc51:	out    dx,eax
  40fc52:	inc    edx
  40fc53:	ror    ebp,1
  40fc55:	add    DWORD PTR [esi],esi
  40fc57:	rcl    BYTE PTR [edi+0x5b],1
  40fc5a:	mov    BYTE PTR [ecx-0x51],ch
  40fc5d:	and    BYTE PTR [ebx-0x4e55c92b],al
  40fc63:	pop    ds
  40fc64:	ja     0x40fccf
  40fc66:	mov    ebp,DWORD PTR [ecx+0x14adb06d]
  40fc6c:	loop   0x40fc6f
  40fc6e:	mov    esi,esp
  40fc70:	push   es
  40fc71:	mov    DWORD PTR [ebp+0x2b054d7a],edi
  40fc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc78:	mov    ebp,0x20b99cec
  40fc7d:	dec    edi
  40fc7e:	in     al,0x6f
  40fc80:	jge    0x40fc36
  40fc82:	mov    WORD PTR [ebp+0x5b],?
  40fc85:	neg    BYTE PTR [eax]
  40fc87:	test   BYTE PTR [bp+di+0x10],dl
  40fc8b:	int3   
  40fc8c:	sub    BYTE PTR [ebp-0x69],dl
  40fc8f:	in     al,0x5f
  40fc91:	jae    0x40fc8c
  40fc93:	sbb    al,0x8e
  40fc95:	repnz fisubr WORD PTR [ebx]
  40fc98:	mov    bh,0xb7
  40fc9a:	in     al,dx
  40fc9b:	and    eax,0x384277dd
  40fca0:	jb     0x40fc6e
  40fca2:	je     0x40fd07
  40fca4:	fcmovnbe st,st(2)
  40fca6:	pop    gs
  40fca8:	in     eax,0x5f
  40fcaa:	sub    dl,ch
  40fcac:	push   ss
  40fcad:	xor    al,0x5d
  40fcaf:	dec    BYTE PTR [ebp-0xfd33f54]
  40fcb5:	gs in  eax,0x5c
  40fcb8:	ret    
  40fcb9:	into   
  40fcba:	ror    edi,1
  40fcbc:	inc    eax
  40fcbd:	(bad)  
  40fcbf:	jae    0x40fc62
  40fcc1:	inc    ebp
  40fcc2:	jno    0x40fc59
  40fcc4:	in     eax,0x2c
  40fcc6:	xchg   esi,eax
  40fcc7:	in     eax,0x51
  40fcc9:	adc    DWORD PTR [esi+0x78ba7c87],ebp
  40fccf:	ins    DWORD PTR es:[edi],dx
  40fcd0:	loopne 0x40fca7
  40fcd2:	ret    0x811d
  40fcd5:	adc    BYTE PTR [ecx-0x7e],cl
  40fcd8:	std    
  40fcd9:	rcr    BYTE PTR [edi],cl
  40fcdb:	mov    esi,0xf84499e1
  40fce0:	jnp    0x40fd24
  40fce2:	push   ebp
  40fce3:	add    al,0x59
  40fce5:	push   0x6f440a1
  40fcea:	in     al,dx
  40fceb:	fbstp  TBYTE PTR [edx+ebx*8+0x216c95ed]
  40fcf2:	jl     0x40fcd4
  40fcf4:	jbe    0x40fd4b
  40fcf6:	loopne 0x40fd34
  40fcf8:	nop
  40fcf9:	out    dx,al
  40fcfa:	fimul  DWORD PTR [ebp-0x51]
  40fcfd:	cs aam 0x6b
  40fd00:	(bad)  
  40fd01:	mov    eax,ds:0xbd3551c3
  40fd06:	mov    BYTE PTR ds:0xe10bb147,0x25
  40fd0d:	ret    
  40fd0e:	scas   al,BYTE PTR es:[edi]
  40fd0f:	xchg   ecx,edi
  40fd11:	pusha  
  40fd12:	xor    cl,BYTE PTR [edx+0x4a8385e]
  40fd18:	pop    eax
  40fd19:	pop    ss
  40fd1a:	sbb    al,0x25
  40fd1c:	leave  
  40fd1d:	inc    ecx
  40fd1e:	push   esp
  40fd1f:	sub    edx,DWORD PTR [edx+0x73]
  40fd22:	sub    eax,0xe29e3f13
  40fd27:	aas    
  40fd28:	adc    eax,0x5108c41d
  40fd2d:	cld    
  40fd2e:	jbe    0x40fd75
  40fd30:	cmp    BYTE PTR ds:0x5f50630b,dh
  40fd36:	std    
  40fd37:	add    eax,DWORD PTR [esi+0x37]
  40fd3a:	or     eax,0x8ebd8f1d
  40fd3f:	cmp    eax,DWORD PTR [eax]
  40fd41:	sbb    eax,edx
  40fd43:	call   0xe68e7ed1
  40fd48:	mov    ah,0x4e
  40fd4a:	adc    ch,BYTE PTR [ebp+eax*1+0x6]
  40fd4e:	in     al,0x26
  40fd50:	je     0x40fd92
  40fd52:	or     ch,cl
  40fd54:	pop    ebx
  40fd55:	int    0x5e
  40fd57:	pushf  
  40fd58:	adc    dl,BYTE PTR [esi-0x385d0102]
  40fd5e:	or     edi,DWORD PTR [ecx+esi*8]
  40fd61:	and    bh,BYTE PTR [esi+0x64]
  40fd64:	stos   BYTE PTR es:[edi],al
  40fd65:	xlat   BYTE PTR ds:[ebx]
  40fd66:	inc    ebp
  40fd67:	dec    edx
  40fd68:	mov    DWORD PTR [edx-0x1549406a],0x1efcb7e8
  40fd72:	xor    dl,BYTE PTR [ecx+esi*8+0x19b4a462]
  40fd79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd7a:	push   ebx
  40fd7b:	and    cl,BYTE PTR [eax+0x5b]
  40fd7e:	fstp   TBYTE PTR [edi+0x3b7ea3bf]
  40fd84:	mov    eax,0xb655d7bc
  40fd89:	adc    eax,0xadb412f1
  40fd8e:	xchg   DWORD PTR [esi-0x1f],edx
  40fd91:	aas    
  40fd92:	int3   
  40fd93:	xlat   BYTE PTR ds:[ebx]
  40fd94:	mov    edx,DWORD PTR [ecx-0x68744862]
  40fd9a:	ss pop ebx
  40fd9c:	sub    DWORD PTR [esi+0x44d7150],0xffffffe7
  40fda3:	fs pop eax
  40fda5:	cmp    eax,0xc453058a
  40fdaa:	sub    eax,DWORD PTR [edi+ebp*2+0x765f80df]
  40fdb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdb2:	mov    ds:0xb6725786,eax
  40fdb7:	sub    BYTE PTR [edx-0x45389ac5],0x3e
  40fdbe:	inc    esp
  40fdbf:	dec    ebx
  40fdc0:	push   0xfffffff4
  40fdc2:	xchg   edi,eax
  40fdc3:	out    0x61,eax
  40fdc5:	stos   BYTE PTR es:[edi],al
  40fdc6:	enter  0x5be9,0xc4
  40fdca:	inc    BYTE PTR [edx-0x6149ab0f]
  40fdd0:	in     al,0x20
  40fdd2:	adc    ebp,DWORD PTR [eax+0x27]
  40fdd5:	mov    cl,0x7b
  40fdd7:	int3   
  40fdd8:	push   0xffffffa1
  40fdda:	daa    
  40fddb:	fs popf 
  40fddd:	cmc    
  40fdde:	jmp    0x182f:0xd12831f4
  40fde5:	pop    es
  40fde6:	out    0x26,al
  40fde8:	hlt    
  40fde9:	inc    ecx
  40fdea:	cld    
  40fdeb:	repnz mov ebp,0xe6403349
  40fdf1:	xor    bh,ch
  40fdf3:	pop    esi
  40fdf4:	push   ebx
  40fdf5:	(bad)  
  40fdf6:	cmp    bh,al
  40fdf8:	(bad)  
  40fdfa:	call   0x313d:0xf0e81167
  40fe01:	stos   BYTE PTR es:[edi],al
  40fe02:	jno    0x40fe68
  40fe04:	imul   esi,DWORD PTR [eax-0x3d303c83],0xd5126637
  40fe0e:	test   DWORD PTR [edx+eax*1-0x13a86a09],eax
  40fe15:	sti    
  40fe16:	cmp    DWORD PTR [ebx],ebp
  40fe18:	out    0x23,al
  40fe1a:	fidiv  DWORD PTR [ebx]
  40fe1c:	leave  
  40fe1d:	scas   eax,DWORD PTR es:[edi]
  40fe1e:	call   0x7c5a:0x8e510331
  40fe25:	(bad)  
  40fe26:	jae    0x40fe15
  40fe28:	adc    al,BYTE PTR [esi-0x1bf2ac1c]
  40fe2e:	scas   eax,DWORD PTR es:[edi]
  40fe2f:	loop   0x40fe6d
  40fe31:	scas   al,BYTE PTR es:[edi]
  40fe32:	xchg   edx,eax
  40fe33:	inc    edx
  40fe34:	call   0xa8240bdc
  40fe39:	push   ss
  40fe3a:	cmp    BYTE PTR [edx-0xfdb72e9],ah
  40fe40:	pop    ecx
  40fe41:	mov    esi,DWORD PTR [eax]
  40fe43:	rol    DWORD PTR [edi],0x23
  40fe46:	jle    0x40fe00
  40fe48:	and    al,0x36
  40fe4a:	cmp    DWORD PTR [esi],eax
  40fe4c:	shl    DWORD PTR [ecx],0xd7
  40fe4f:	fist   WORD PTR [bx+si+0x6a65]
  40fe54:	push   edx
  40fe55:	pusha  
  40fe56:	sbb    dh,ah
  40fe58:	push   cs
  40fe59:	jp     0x40fe6e
  40fe5b:	dec    ecx
  40fe5c:	pop    ebp
  40fe5d:	test   al,0x41
  40fe5f:	sub    ecx,DWORD PTR [edi-0x3]
  40fe62:	and    al,0xc6
  40fe64:	cmp    bh,BYTE PTR [edx+0x2a6cc053]
  40fe6a:	stos   DWORD PTR es:[edi],eax
  40fe6b:	ret    0xed48
  40fe6e:	push   edi
  40fe6f:	pop    esi
  40fe70:	jl     0x40feaa
  40fe72:	jnp    0x40fe88
  40fe74:	mov    ecx,0x3820b45a
  40fe79:	lds    ecx,FWORD PTR [ecx]
  40fe7b:	mov    esi,0x5d306f97
  40fe80:	test   eax,0x14aed06b
  40fe85:	cmp    al,0x77
  40fe87:	xchg   esi,eax
  40fe88:	outs   dx,BYTE PTR ds:[esi]
  40fe8a:	je     0x40feba
  40fe8c:	xchg   esp,eax
  40fe8d:	mov    ebp,0xd5551fd2
  40fe92:	cmp    ch,BYTE PTR [esi]
  40fe94:	lods   al,BYTE PTR ds:[esi]
  40fe95:	pop    esi
  40fe96:	test   BYTE PTR [edi],cl
  40fe98:	ja     0x40fe92
  40fe9a:	int    0x1f
  40fe9c:	jge    0x40fe30
  40fe9e:	jl     0x40fe50
  40fea0:	imul   ecx
  40fea2:	sub    eax,0xd409d17f
  40fea7:	inc    ebp
  40fea8:	push   ebx
  40fea9:	cmc    
  40feaa:	repz inc ebp
  40feac:	push   esi
  40fead:	adc    ebp,DWORD PTR [edx]
  40feaf:	ja     0x40fe8a
  40feb1:	push   esp
  40feb2:	pop    edx
  40feb3:	pop    edx
  40feb4:	jmp    DWORD PTR ds:0xecc6a5ee
  40feba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40febb:	outs   dx,BYTE PTR ds:[esi]
  40febc:	add    cl,BYTE PTR [edi+0x4ec0d965]
  40fec2:	and    BYTE PTR [edi+ebx*1+0x2399dd3d],dl
  40fec9:	mov    esi,edx
  40fecb:	pop    ecx
  40fecc:	xor    DWORD PTR [esi+edi*1-0x2c],edx
  40fed0:	push   ecx
  40fed1:	push   ss
  40fed2:	mov    DWORD PTR [eax-0x208b40d4],esp
  40fed8:	jge    0x40ff30
  40feda:	int3   
  40fedb:	add    bh,al
  40fedd:	jnp    0x40fe97
  40fedf:	adc    bl,bh
  40fee1:	ficom  WORD PTR [edx-0x77ba7141]
  40fee7:	xor    eax,0x9eef38a2
  40feec:	into   
  40feed:	jnp    0x40fecb
  40feef:	aad    0x2
  40fef1:	ja     0x40ff0c
  40fef3:	fwait
  40fef4:	jmp    0xe6f4:0xfa85a22f
  40fefb:	call   0x97a0:0x7713d66c
  40ff02:	repnz cld 
  40ff04:	inc    eax
  40ff05:	inc    ebx
  40ff06:	jmp    0x40fef3
  40ff08:	sub    ebx,DWORD PTR [edi]
  40ff0a:	pushf  
  40ff0b:	dec    edi
  40ff0c:	shl    BYTE PTR [edx+0x7f],0x8
  40ff10:	test   BYTE PTR [ebx],0xe
  40ff13:	hlt    
  40ff14:	call   0x28bd:0x8356323b
  40ff1b:	jle    0x40ff1a
  40ff1d:	xor    al,0xb
  40ff1f:	in     eax,dx
  40ff20:	dec    ebp
  40ff21:	pop    esi
  40ff22:	push   cs
  40ff23:	jne    0x40fefd
  40ff25:	hlt    
  40ff26:	xor    eax,0xc4d082b9
  40ff2b:	dec    ebx
  40ff2c:	(bad)  
  40ff2d:	out    0xaa,al
  40ff2f:	xchg   ecx,eax
  40ff30:	fst    DWORD PTR [edi+ebx*2-0xfc15ddc]
  40ff37:	in     eax,0x61
  40ff39:	stc    
  40ff3a:	cdq    
  40ff3b:	push   ds
  40ff3c:	fsubr  QWORD PTR [esi]
  40ff3e:	ins    BYTE PTR es:[edi],dx
  40ff3f:	stos   DWORD PTR es:[edi],eax
  40ff40:	xor    eax,0x67365d96
  40ff45:	out    0x2e,eax
  40ff47:	(bad)
  40ff4a:	ret    
  40ff4b:	(bad)  
  40ff4d:	repz pop edi
  40ff4f:	push   ds
  40ff50:	mov    ch,0x15
  40ff52:	pop    es
  40ff53:	mov    eax,ds:0x57790f8
  40ff58:	add    esp,edx
  40ff5a:	or     al,0x24
  40ff5c:	jle    0x40ffaa
  40ff5e:	pushf  
  40ff5f:	dec    ecx
  40ff60:	add    ecx,ebp
  40ff62:	aaa    
  40ff63:	jle    0x40ff30
  40ff65:	or     ch,BYTE PTR [edi]
  40ff67:	js     0x40ff57
  40ff69:	pop    ecx
  40ff6a:	or     bl,bh
  40ff6c:	lahf   
  40ff6d:	dec    eax
  40ff6e:	dec    edx
  40ff6f:	jo     0x40ff4d
  40ff71:	stos   BYTE PTR es:[edi],al
  40ff72:	sub    ch,BYTE PTR [edi+0x37]
  40ff75:	pop    esi
  40ff76:	xor    DWORD PTR [esi+0x70],edx
  40ff79:	mov    ds:0x6d9aa581,eax
  40ff7e:	add    dl,BYTE PTR [eax+0x3a]
  40ff81:	cwde   
  40ff82:	add    DWORD PTR ds:0xf0d75faa,edx
  40ff88:	and    eax,0x67665a41
  40ff8d:	inc    ebx
  40ff8e:	retf   
  40ff8f:	fadd   DWORD PTR [ebx-0x79]
  40ff92:	pop    ebx
  40ff93:	mov    bh,BYTE PTR [ebp+ebp*2+0x2]
  40ff97:	cmp    DWORD PTR [ebx+ebx*2-0x61763f8e],esp
  40ff9e:	mov    ch,0x9f
  40ffa0:	add    eax,0x37c83287
  40ffa5:	pop    es
  40ffa6:	lds    edx,FWORD PTR [esi]
  40ffa8:	jg     0x40ffb3
  40ffaa:	jnp    0x40ffb1
  40ffac:	xchg   ecx,eax
  40ffad:	or     esi,DWORD PTR [esi-0x80]
  40ffb0:	pop    esi
  40ffb1:	mov    esi,0x98ee7c17
  40ffb6:	dec    esi
  40ffb7:	pop    es
  40ffb8:	mov    dl,0xf4
  40ffba:	aad    0xfb
  40ffbc:	test   BYTE PTR [edx+0x4ab397b],bl
  40ffc2:	push   ebp
  40ffc3:	in     al,dx
  40ffc4:	jae    0x40ff91
  40ffc6:	sub    DWORD PTR [ebx-0x57],edi
  40ffc9:	cmp    bl,BYTE PTR [eax]
  40ffcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffcc:	mov    al,0xc6
  40ffce:	(bad)  
  40ffcf:	(bad)  
  40ffd0:	out    dx,eax
  40ffd1:	xchg   WORD PTR [edx+0x11],cx
  40ffd5:	sub    eax,0x13b1eeff
  40ffda:	push   eax
  40ffdb:	jmp    0xf30ff35d
  40ffe0:	dec    ebx
  40ffe1:	dec    eax
  40ffe2:	add    DWORD PTR [ecx],edx
  40ffe4:	sbb    BYTE PTR [edi-0x1ebaa093],cl
  40ffea:	or     DWORD PTR [ebx+esi*2-0x53],ebx
  40ffee:	ds jb  0x410034
  40fff1:	mov    esp,0x86abdd4c
  40fff6:	in     eax,0x1a
  40fff8:	xchg   edi,eax
  40fff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fffa:	mov    dl,0x17
  40fffc:	(bad)  
  40fffe:	div    BYTE PTR [ebp+0x56]
  410001:	mov    bl,0x72
  410003:	ja     0x40ffbb
  410005:	sbb    BYTE PTR [ebp+0x6f0f7379],ah
  41000b:	shl    DWORD PTR ds:0xa0d0a515,0x98
  410012:	cmp    ch,bh
  410014:	xchg   edx,eax
  410015:	les    esp,FWORD PTR [eax+0x7046c645]
  41001b:	jge    0x410056
  41001d:	xchg   BYTE PTR [ebp+0x15],dh
  410020:	xor    DWORD PTR [edx+0x40720bec],0xffffffe6
  410027:	push   esp
  410028:	mov    WORD PTR [esi-0x73],fs
  41002b:	jns    0x40ffad
  41002d:	inc    ebp
  41002e:	mov    ds:0x61beaf30,eax
  410033:	sbb    esp,DWORD PTR [eax]
  410035:	mov    al,0xef
  410037:	shr    BYTE PTR [edx+ebx*1-0x64201727],1
  41003e:	dec    eax
  41003f:	shl    BYTE PTR [eax+0x5e],0x4e
  410043:	jp     0x40fff1
  410045:	xor    ch,BYTE PTR [ecx]
  410047:	lea    edi,[ebx+0x1]
  41004a:	mov    ecx,0x83ad2f4f
  41004f:	mov    edx,0x22a9340e
  410054:	pop    edx
  410055:	sbb    dl,BYTE PTR [eax+0x19]
  410058:	es add eax,0x93df0600
  41005e:	mov    ds:0x6280a73d,al
  410063:	daa    
  410064:	sub    BYTE PTR [ebp+0x1e9531b3],ch
  41006a:	adc    ebx,DWORD PTR [edi-0x6f566ee7]
  410070:	xor    al,0xbb
  410072:	in     al,dx
  410073:	repz test BYTE PTR [eax-0x3a],0x11
  410078:	stc    
  410079:	adc    BYTE PTR [ebx+0x462ea989],ch
  41007f:	xchg   ebp,eax
  410080:	jb     0x41007e
  410082:	repnz xor eax,ebp
  410085:	jnp    0x4100c0
  410087:	daa    
  410088:	repnz enter 0xa421,0xb3
  41008d:	adc    eax,0xa314b7c1
  410092:	dec    ebx
  410093:	sub    eax,0x9141cff9
  410098:	sbb    cl,BYTE PTR [edi-0x47]
  41009b:	pusha  
  41009c:	and    edx,ebp
  41009e:	adc    bh,bh
  4100a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100a1:	call   0xdac109dd
  4100a6:	sbb    al,0x99
  4100a8:	daa    
  4100a9:	and    DWORD PTR ss:[edx-0x77075f4],ecx
  4100b0:	loopne 0x410093
  4100b2:	xchg   BYTE PTR [eax],bh
  4100b4:	pop    esi
  4100b5:	or     eax,0x1a7fdf5f
  4100ba:	test   eax,0x57884b7c
  4100bf:	pusha  
  4100c0:	sahf   
  4100c1:	cmp    eax,0x3a1779fe
  4100c6:	sub    ah,BYTE PTR [ebx-0x3b]
  4100c9:	leave  
  4100ca:	cmp    bl,cl
  4100cc:	fist   WORD PTR [ecx+0x5]
  4100cf:	das    
  4100d0:	cmp    edx,ebx
  4100d2:	push   edx
  4100d3:	dec    ebx
  4100d4:	in     eax,dx
  4100d5:	inc    ebx
  4100d6:	add    al,0x89
  4100d8:	enterw 0xf4e7,0xee
  4100dd:	data16 xor ch,dh
  4100e0:	ins    BYTE PTR es:[edi],dx
  4100e1:	lds    edx,FWORD PTR [edx]
  4100e3:	mov    ds:0x62ad485d,eax
  4100e8:	mov    bh,BYTE PTR ds:0x9a7f59bd
  4100ee:	sbb    bh,BYTE PTR [ecx+0x7af5bb14]
  4100f4:	push   dx
  4100f6:	dec    edi
  4100f7:	cli    
  4100f8:	jnp    0x410137
  4100fa:	xor    DWORD PTR [ebx-0x56],0x2b
  4100fe:	aaa    
  4100ff:	cmp    al,0x2e
  410101:	push   0xffffffed
  410103:	mov    ecx,0x1b73c3a2
  410108:	addr16 jae 0x4100b4
  41010b:	lock stos DWORD PTR es:[edi],eax
  41010d:	retf   
  41010e:	mov    cl,0xe5
  410110:	sub    al,0x1b
  410112:	and    bh,BYTE PTR [ecx]
  410114:	(bad)  
  410115:	rcr    DWORD PTR [ebx-0x29e838be],1
  41011b:	int3   
  41011c:	jnp    0x41017c
  41011e:	ror    BYTE PTR [edi],0xc4
  410121:	pop    esi
  410122:	dec    edx
  410123:	gs jg  0x4100f0
  410126:	push   ebp
  410127:	(bad)  
  410128:	xor    ebx,DWORD PTR [eax-0x604b50f9]
  41012e:	sub    DWORD PTR [ecx+eiz*1+0x79f74c03],ebp
  410135:	sbb    eax,0xcc120923
  41013a:	aam    0xa2
  41013c:	cmp    BYTE PTR [esi],dh
  41013e:	push   ebp
  41013f:	jmp    0x3f96:0x303b671f
  410146:	leave  
  410147:	xchg   ebx,eax
  410148:	clc    
  410149:	fucom  st(6)
  41014b:	sahf   
  41014c:	push   cs
  41014d:	repz cld 
  41014f:	pop    ecx
  410150:	sub    ecx,DWORD PTR [ebx-0x49e3eb08]
  410156:	scas   al,BYTE PTR es:[edi]
  410157:	adc    DWORD PTR [esi-0x728493fb],0xffffffc9
  41015e:	rcr    DWORD PTR [ebx+ecx*4-0x40],1
  410162:	push   0xffffff9a
  410164:	int3   
  410165:	jl     0x4101cb
  410167:	mov    eax,0x8a03464
  41016c:	mov    ds:0x3f6ad3d5,eax
  410171:	daa    
  410172:	push   0x77
  410174:	fistp  WORD PTR [ecx]
  410176:	or     al,0xe1
  410178:	push   edx
  410179:	stc    
  41017a:	nop
  41017b:	dec    edx
  41017c:	in     eax,dx
  41017d:	arpl   WORD PTR [esi-0x374ca719],ax
  410183:	fisubr DWORD PTR [eax]
  410185:	pop    ecx
  410186:	inc    esi
  410187:	je     0x410118
  410189:	cmp    bl,BYTE PTR cs:[ebp-0x2a]
  41018d:	clc    
  41018e:	and    al,0x92
  410190:	(bad)  
  410191:	pusha  
  410192:	and    al,0xe2
  410194:	dec    ecx
  410195:	repz jl 0x4101d7
  410198:	push   edx
  410199:	push   es
  41019a:	imul   DWORD PTR [esi]
  41019c:	(bad)  
  41019d:	bound  esp,QWORD PTR [edx]
  41019f:	sub    al,0x92
  4101a1:	cmc    
  4101a2:	mov    cl,0x6b
  4101a4:	test   BYTE PTR [edx-0x604889d1],dh
  4101aa:	push   eax
  4101ab:	add    DWORD PTR [eax-0xddd89be],ebp
  4101b1:	cmp    edx,DWORD PTR [esi]
  4101b3:	mov    cs,edi
  4101b5:	stos   DWORD PTR es:[edi],eax
  4101b6:	xchg   ecx,eax
  4101b7:	in     al,dx
  4101b8:	jge    0x4101fb
  4101ba:	mov    bl,cl
  4101bc:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4101be:	shl    cl,cl
  4101c0:	cmp    al,0xc7
  4101c2:	(bad)  
  4101c4:	out    dx,eax
  4101c5:	cld    
  4101c6:	enter  0xbbcf,0xbc
  4101ca:	bound  edi,QWORD PTR ds:0xb077ce9a
  4101d0:	cmp    ebx,eax
  4101d2:	adc    ebp,DWORD PTR [edx-0x4351ac58]
  4101d8:	test   DWORD PTR [eax],ebp
  4101da:	add    al,0xa6
  4101dc:	pop    ebx
  4101dd:	push   esi
  4101de:	bound  ecx,QWORD PTR [edx]
  4101e0:	ret    0xc064
  4101e3:	stc    
  4101e4:	or     edx,DWORD PTR [edx-0x22]
  4101e7:	in     eax,dx
  4101e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101e9:	int    0x71
  4101eb:	fdiv   DWORD PTR [edx+eax*8+0x73]
  4101ef:	lahf   
  4101f0:	mov    edi,0x3df2914d
  4101f5:	sbb    DWORD PTR ds:[ebp-0x1c],0x4614aaa3
  4101fd:	push   ebp
  4101fe:	in     eax,dx
  4101ff:	or     eax,0x4baced2a
  410204:	mov    bl,0xc7
  410206:	lods   al,BYTE PTR ds:[esi]
  410207:	daa    
  410208:	mov    ch,0x17
  41020a:	data16 test al,0xa8
  41020d:	or     edi,edi
  41020f:	aas    
  410210:	jp     0x410274
  410212:	popf   
  410213:	stos   BYTE PTR es:[edi],al
  410214:	(bad)  
  410215:	jmp    0x72fb316b
  41021a:	cdq    
  41021b:	out    dx,al
  41021c:	adc    ah,al
  41021e:	inc    ebp
  41021f:	mov    esi,0xd598d10f
  410224:	cmp    edi,ebp
  410226:	xor    esp,DWORD PTR [eax+0x5c]
  410229:	xchg   edx,eax
  41022a:	cmp    DWORD PTR [edi+ecx*1-0x3fb3286d],0xb336d42f
  410235:	repz dec esi
  410237:	adc    DWORD PTR [edx],0xfe9659da
  41023d:	(bad)  
  41023e:	and    al,0x1e
  410240:	jl     0x410294
  410242:	xchg   edx,eax
  410244:	imul   eax,DWORD PTR [ecx-0x55dfcf4b],0xffffffc4
  41024b:	xor    al,0x9c
  41024d:	(bad)
  410250:	or     esp,edx
  410252:	mov    WORD PTR [edi+0x79],fs
  410255:	push   edx
  410256:	jle    0x410284
  410258:	and    ebp,DWORD PTR [ecx]
  41025a:	xchg   esp,eax
  41025b:	mov    edx,0x11d0fec1
  410260:	jl     0x41024f
  410262:	push   0xadaade98
  410267:	or     DWORD PTR [eax+0x425399be],edi
  41026d:	shr    BYTE PTR [esi],0x1c
  410270:	(bad)  
  410271:	mov    ecx,0xe5118e8d
  410276:	mov    al,0xde
  410278:	ins    BYTE PTR es:[edi],dx
  410279:	or     BYTE PTR [esi],dl
  41027b:	(bad)  [ebx+0x3f5b0ab7]
  410281:	icebp  
  410282:	pop    edi
  410283:	push   ds
  410284:	test   WORD PTR cs:[esi],sp
  410288:	xchg   esi,eax
  410289:	ss xchg esi,eax
  41028b:	cmc    
  41028c:	add    eax,0x31492c95
  410291:	fild   DWORD PTR [edi+eax*2+0x25f780dc]
  410298:	rol    DWORD PTR [edx+ebp*4-0x41eddba],cl
  41029f:	mov    ss,ebx
  4102a1:	mov    al,ds:0x649d27f3
  4102a6:	out    dx,al
  4102a7:	dec    ebx
  4102a8:	sbb    eax,DWORD PTR [ecx+0x2a]
  4102ab:	dec    esp
  4102ac:	and    ecx,DWORD PTR [edx+0x59bca2e3]
  4102b2:	ins    BYTE PTR es:[edi],dx
  4102b3:	in     eax,dx
  4102b4:	mov    al,ds:0xa2e27c8e
  4102b9:	mov    bh,0x46
  4102bb:	enter  0x2746,0xf4
  4102bf:	ficomp DWORD PTR [ebp+0xf]
  4102c2:	mov    ?,WORD PTR [edi+0x671cd525]
  4102c8:	pop    ss
  4102c9:	test   eax,0x91d3a5c6
  4102ce:	push   edi
  4102cf:	xor    eax,0xf5cfefe5
  4102d4:	retf   
  4102d5:	aam    0x44
  4102d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102d8:	stos   DWORD PTR es:[edi],eax
  4102d9:	hlt    
  4102da:	push   eax
  4102db:	cmp    DWORD PTR [ebp+edi*4-0x149d5e03],0x69
  4102e3:	cdq    
  4102e4:	mov    es,WORD PTR gs:[edi]
  4102e7:	bndldx (bad),[esi]
  4102ea:	mov    cl,0x2e
  4102ec:	mov    edx,0x3a7629e5
  4102f1:	test   eax,0xf10fb9de
  4102f6:	stos   BYTE PTR es:[edi],al
  4102f7:	popf   
  4102f8:	mov    ds:0x34746e89,ax
  4102fe:	or     BYTE PTR [ebp+0x15ff39e7],al
  410304:	out    0x0,eax
  410306:	ror    eax,1
  410308:	je     0x41030e
  41030a:	xor    al,0x3c
  41030c:	sub    BYTE PTR [eax-0x57],ch
  41030f:	fistp  QWORD PTR [esi+0x76d4c926]
  410315:	(bad)  
  410316:	das    
  410317:	enter  0xd5c6,0xac
  41031b:	cmp    BYTE PTR [ecx-0x18a652d3],0xf3
  410322:	sub    ecx,DWORD PTR [edx]
  410324:	cmp    BYTE PTR [eax],0xed
  410327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410328:	stos   BYTE PTR es:[edi],al
  410329:	xor    al,0x5e
  41032b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41032c:	adc    al,0xc0
  41032e:	out    0x34,eax
  410330:	imul   ebx,DWORD PTR [eax-0x77],0x40
  410334:	popa   
  410335:	or     DWORD PTR ds:0xa29e9068,ebx
  41033b:	inc    esp
  41033c:	outs   dx,BYTE PTR ds:[esi]
  41033d:	stc    
  41033e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41033f:	inc    edi
  410340:	pusha  
  410341:	xor    DWORD PTR [eax-0x7d],edi
  410344:	dec    ebx
  410345:	cwde   
  410346:	jl     0x41031f
  410348:	je     0x410333
  41034a:	push   eax
  41034b:	sub    ecx,DWORD PTR [ecx+edx*4-0x2f]
  41034f:	lock ja 0x4102d5
  410352:	loop   0x410365
  410354:	xor    edx,edx
  410356:	mov    eax,ds:0x61789a58
  41035b:	adc    esi,edx
  41035d:	(bad)  
  41035e:	xchg   DWORD PTR [edi+0x75],esi
  410361:	aaa    
  410362:	jecxz  0x410326
  410364:	push   edi
  410365:	mov    ebp,0x4a30ed8
  41036a:	fs cmp ah,dl
  41036d:	mov    edi,0xb34197fe
  410372:	jns    0x4103e5
  410374:	cmp    al,BYTE PTR [edx]
  410376:	out    dx,eax
  410377:	ins    DWORD PTR es:[edi],dx
  410378:	and    eax,0xba98e0ff
  41037d:	adc    BYTE PTR [ebx],dl
  41037f:	pushf  
  410380:	gs stos BYTE PTR es:[edi],al
  410382:	aas    
  410383:	push   0x42
  410385:	xlat   BYTE PTR ds:[ebx]
  410386:	fstp   TBYTE PTR [ecx]
  410388:	cld    
  410389:	stos   DWORD PTR es:[edi],eax
  41038a:	mov    bl,0xdf
  41038c:	xchg   edx,eax
  41038d:	stos   DWORD PTR es:[edi],eax
  41038e:	jnp    0x410340
  410390:	adc    DWORD PTR [ebx],edx
  410392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410393:	xchg   BYTE PTR [edi+0x459b437],ch
  410399:	mov    edi,0xa8a4631b
  41039e:	and    ch,BYTE PTR [ebp+esi*4+0x6168958e]
  4103a5:	mov    eax,ds:0x67a4ee73
  4103aa:	xor    edi,eax
  4103ac:	popf   
  4103ad:	in     eax,dx
  4103ae:	pop    edx
  4103af:	ins    DWORD PTR es:[edi],dx
  4103b0:	dec    ebx
  4103b1:	cli    
  4103b2:	cmp    eax,0x8e8ffd65
  4103b7:	inc    edx
  4103b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103b9:	loope  0x4103eb
  4103bb:	(bad)  
  4103bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103bd:	and    esi,DWORD PTR [edi]
  4103bf:	mov    ebx,0x28f3c575
  4103c4:	in     eax,0xfa
  4103c6:	popa   
  4103c7:	aad    0x7d
  4103c9:	add    al,0x1b
  4103cb:	loopne 0x41039f
  4103cd:	adc    ch,ah
  4103cf:	push   0x657a92a6
  4103d4:	into   
  4103d5:	inc    ebp
  4103d6:	fadd   DWORD PTR [edx-0x3a15cf1a]
  4103dc:	das    
  4103dd:	test   eax,0x14641038
  4103e2:	push   ecx
  4103e3:	push   esp
  4103e4:	rol    BYTE PTR [eax+eax*2-0x40],0xc9
  4103e9:	cmp    al,0x54
  4103eb:	iret   
  4103ec:	jecxz  0x4103f6
  4103ee:	in     al,0xfd
  4103f0:	not    DWORD PTR [eax]
  4103f2:	inc    edx
  4103f3:	cmp    DWORD PTR ds:0x9378c9de,edi
  4103f9:	cmp    eax,DWORD PTR [ebp-0x35]
  4103fc:	mov    ebx,0x68fe3ca7
  410401:	inc    edx
  410402:	push   ecx
  410403:	lock adc DWORD PTR [ebp-0x3a],edx
  410407:	inc    ecx
  410408:	inc    edx
  410409:	adc    cl,BYTE PTR [esp+edi*2+0x243cbd07]
  410410:	mov    WORD PTR [edi+0x7df5acde],cs
  410416:	pusha  
  410417:	nop
  410418:	xor    BYTE PTR [eax+0x727510f7],0x2b
  41041f:	push   esi
  410420:	mov    eax,0x126df94b
  410425:	shl    bh,1
  410427:	stc    
  410428:	push   esi
  410429:	cmp    BYTE PTR [ebp+edi*2+0x35dba34b],0x79
  410431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410432:	pop    es
  410433:	lds    eax,FWORD PTR [eax]
  410435:	or     BYTE PTR [ebx],0x2
  410438:	ds xor bl,cl
  41043b:	pop    es
  41043c:	or     DWORD PTR [eax],eax
  41043e:	dec    esi
  41043f:	or     cl,BYTE PTR [esi]
  410441:	jp     0x410495
  410443:	(bad)  
  410444:	call   FWORD PTR [edx]
  410446:	jnp    0x4104af
  410448:	xor    BYTE PTR [esp+edx*2],ah
  41044b:	mov    bl,0xe7
  41044d:	mov    al,0xab
  41044f:	enter  0x46fd,0x9b
  410453:	or     al,BYTE PTR [ecx+0x5d75ce0b]
  410459:	les    esi,FWORD PTR [ecx+ebx*8+0x4a770143]
  410460:	aad    0xe1
  410462:	in     al,dx
  410463:	pop    ss
  410464:	(bad)  
  410465:	stc    
  410466:	inc    edi
  410467:	test   eax,0x707aba47
  41046c:	mov    ah,0xe4
  41046e:	ss push edx
  410470:	jbe    0x410484
  410472:	sbb    DWORD PTR [ebx],esp
  410474:	ins    DWORD PTR es:[edi],dx
  410475:	mov    WORD PTR [esi-0x58b224d7],?
  41047b:	(bad)  
  41047c:	je     0x4104e1
  41047e:	(bad)  
  41047f:	fcmovne st,st(3)
  410481:	cmp    eax,0x37e886a8
  410486:	shl    BYTE PTR [ebp-0x5f],0x37
  41048a:	in     eax,0xb
  41048c:	sar    edx,cl
  41048e:	gs mov esi,0xd2edc20e
  410494:	inc    ebp
  410495:	mov    WORD PTR [esi],fs
  410497:	push   ss
  410498:	icebp  
  410499:	jecxz  0x41043c
  41049b:	imul   ebx,DWORD PTR [edx-0x2c],0x1f
  41049f:	std    
  4104a0:	xchg   DWORD PTR [ecx-0xb],eax
  4104a3:	les    ecx,FWORD PTR [ecx-0x55]
  4104a6:	xor    eax,0x17396413
  4104ab:	dec    eax
  4104ac:	cmc    
  4104ad:	push   esi
  4104ae:	xchg   edi,eax
  4104af:	daa    
  4104b0:	lock jmp 0x3fbf:0xa757b1b2
  4104b8:	adc    edx,esp
  4104ba:	pop    esp
  4104bb:	push   cs
  4104bc:	mov    ebx,0xdba379c0
  4104c1:	fwait
  4104c2:	sub    al,0x2d
  4104c4:	out    0x14,eax
  4104c6:	sti    
  4104c7:	or     al,0xb6
  4104c9:	mov    BYTE PTR gs:[edx+eax*2-0x31],ah
  4104ce:	enter  0x4d6c,0x47
  4104d2:	add    al,0xdd
  4104d4:	ja     0x410472
  4104d6:	jle    0x410533
  4104d8:	ret    
  4104d9:	scas   eax,DWORD PTR es:[edi]
  4104da:	dec    ebp
  4104db:	shl    DWORD PTR [eax+0x1b37f50],cl
  4104e1:	and    ch,ch
  4104e3:	loopne 0x410497
  4104e5:	mov    ds:0xc71078d4,eax
  4104ea:	mov    cl,0x3f
  4104ec:	fwait
  4104ed:	popf   
  4104ee:	sbb    al,0xf5
  4104f0:	jne    0x4104b5
  4104f2:	loope  0x4104ce
  4104f4:	add    dl,BYTE PTR [ebp-0x40]
  4104f7:	xchg   DWORD PTR ds:0x88076eeb,edx
  4104fd:	scas   eax,DWORD PTR es:[edi]
  4104fe:	pop    ecx
  4104ff:	stos   BYTE PTR es:[edi],al
  410500:	cmp    ebp,DWORD PTR [ecx+0x66]
  410503:	sahf   
  410504:	add    BYTE PTR [esi+0x4d],dh
  410507:	and    bl,BYTE PTR [ecx+0x473a372e]
  41050d:	jp     0x410578
  41050f:	in     eax,dx
  410510:	cmc    
  410511:	mov    al,ds:0xdeacd2c1
  410516:	pop    esi
  410517:	fld    QWORD PTR [ebx+esi*8]
  41051a:	test   al,0xf2
  41051c:	cmp    ebp,esi
  41051e:	hlt    
  41051f:	pop    edi
  410520:	cwde   
  410521:	div    bh
  410523:	out    dx,eax
  410524:	jmp    0x41057a
  410526:	xor    DWORD PTR [eax+0x49],0x4b
  41052a:	aad    0x71
  41052c:	jge    0x41055d
  41052e:	lea    ebp,ds:0xe108275b
  410534:	xor    eax,0xf1104383
  410539:	icebp  
  41053a:	xchg   DWORD PTR [esi],ecx
  41053c:	in     al,dx
  41053d:	cmp    eax,DWORD PTR [ebp+0xfd4eb82]
  410543:	mov    dl,0x39
  410545:	pusha  
  410546:	retf   0x3936
  410549:	pop    ds
  41054a:	add    DWORD PTR ds:0x591036bf,ebx
  410550:	xchg   BYTE PTR [edi-0x4d],dl
  410553:	push   0xb347eebc
  410558:	loop   0x41059d
  41055a:	xchg   edi,eax
  41055b:	dec    edi
  41055c:	mov    al,ds:0x5b6d6600
  410561:	mov    al,ds:0x9a0c3c94
  410566:	mov    eax,0xcfbf648f
  41056b:	dec    ebx
  41056c:	xchg   esi,eax
  41056d:	jns    0x410561
  41056f:	jbe    0x4104f5
  410571:	pop    esp
  410572:	push   eax
  410573:	dec    esi
  410574:	push   ds
  410575:	gs jno 0x4105d9
  410578:	lock cmp al,al
  41057b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41057c:	in     al,dx
  41057d:	in     eax,0x18
  41057f:	sub    al,0x78
  410581:	clc    
  410582:	lock or eax,0xfbbab41a
  410588:	xchg   esp,eax
  410589:	pop    ecx
  41058a:	das    
  41058b:	mov    al,0x57
  41058d:	and    al,0xce
  41058f:	jle    0x4105b7
  410591:	out    0x1a,al
  410593:	jbe    0x4105bf
  410595:	add    ch,BYTE PTR [ebx-0x3b]
  410598:	xor    al,0xa9
  41059a:	lea    ebp,[ebx]
  41059c:	in     al,dx
  41059d:	push   eax
  41059e:	sub    BYTE PTR [edi-0x260c3568],0xa1
  4105a5:	inc    edi
  4105a6:	out    dx,eax
  4105a7:	mov    ch,0xd6
  4105a9:	pop    es
  4105aa:	push   0xf538f34f
  4105af:	loop   0x410542
  4105b1:	or     eax,0xc5c49bc5
  4105b6:	pop    ss
  4105b7:	push   0x1e31950f
  4105bc:	in     eax,0x83
  4105be:	loopne 0x41056d
  4105c0:	push   es
  4105c1:	mov    al,0xae
  4105c3:	outs   dx,DWORD PTR ds:[esi]
  4105c4:	retf   0x6b88
  4105c7:	imul   BYTE PTR [eax]
  4105c9:	sbb    ebp,eax
  4105cb:	mov    cl,0x18
  4105cd:	dec    edx
  4105ce:	out    0xc8,eax
  4105d0:	leave  
  4105d1:	aad    0xa3
  4105d3:	(bad)  
  4105d4:	out    dx,eax
  4105d5:	or     al,0x6b
  4105d7:	fldenv [ebx-0x2]
  4105da:	sub    al,0xc0
  4105dc:	ror    DWORD PTR [ecx+eiz*1],1
  4105df:	(bad)  
  4105e0:	fisub  WORD PTR [esi]
  4105e2:	inc    ecx
  4105e3:	pop    ecx
  4105e4:	inc    edi
  4105e5:	clc    
  4105e6:	and    eax,0x27ad916a
  4105eb:	mov    BYTE PTR [ebp-0xb],dl
  4105ee:	pop    esi
  4105ef:	js     0x410606
  4105f1:	xchg   esp,eax
  4105f2:	inc    edx
  4105f3:	pop    es
  4105f4:	push   ebp
  4105f5:	and    al,0x1b
  4105f7:	rol    BYTE PTR [esi+0x1],cl
  4105fa:	ror    DWORD PTR [eax-0x34],0xb2
  4105fe:	pop    edi
  4105ff:	in     al,dx
  410600:	mov    cl,0x86
  410602:	sbb    BYTE PTR [ecx-0x7575feb],ah
  410608:	jg     0x41059d
  41060a:	sahf   
  41060b:	in     eax,0x86
  41060d:	in     eax,0xa7
  41060f:	call   0xc0a2:0xc59b32b
  410616:	addr16 pop eax
  410618:	icebp  
  410619:	fs dec esp
  41061b:	xor    DWORD PTR [ebx+0x51],esi
  41061e:	test   BYTE PTR [eax+0x289689d2],bh
  410624:	mov    cl,0x4d
  410626:	inc    esp
  410627:	sbb    al,0x4c
  410629:	mov    eax,ds:0xef0b3ceb
  41062e:	lods   al,BYTE PTR ds:[esi]
  41062f:	pushf  
  410630:	or     dh,bh
  410632:	dec    esi
  410633:	in     eax,dx
  410634:	rol    BYTE PTR [ebp+0x1e],1
  410637:	cmp    esi,DWORD PTR ds:0x4d10f4e1
  41063d:	lds    ebp,FWORD PTR [ecx+0x32]
  410640:	jl     0x4105d4
  410642:	mov    cl,0xba
  410644:	push   cs
  410645:	int    0xa1
  410647:	pushf  
  410648:	dec    esi
  410649:	ins    BYTE PTR es:[edi],dx
  41064a:	xlat   BYTE PTR ds:[ebx]
  41064b:	dec    esi
  41064c:	test   eax,0x2f0cb541
  410651:	xlat   BYTE PTR ds:[ebx]
  410652:	out    0xbd,eax
  410654:	xchg   eax,edi
  410656:	test   ecx,esi
  410658:	pop    eax
  410659:	mov    bh,BYTE PTR [ecx-0x75]
  41065c:	mov    cl,0x82
  41065e:	xchg   edi,eax
  41065f:	mov    BYTE PTR [ebx-0x72],ch
  410662:	mov    ebx,0x56fe095a
  410667:	(bad)  
  410668:	jle    0x4106d0
  41066a:	xchg   edi,eax
  41066b:	push   ds
  41066c:	push   ds
  41066d:	scas   eax,DWORD PTR es:[edi]
  41066e:	mov    edi,0xc88111b7
  410673:	cdq    
  410674:	(bad)  
  410675:	ja     0x410676
  410677:	div    DWORD PTR [ecx+eiz*1]
  41067a:	cwde   
  41067b:	pop    ss
  41067c:	pop    es
  41067d:	fnstcw WORD PTR [edi+0x7eb96b73]
  410683:	xchg   ebx,eax
  410684:	adc    DWORD PTR [esi+ebx*4+0x4e80a9bd],edx
  41068b:	sub    eax,0xad8f1a19
  410690:	jle    0x4106e9
  410692:	pop    ebx
  410693:	inc    esp
  410694:	lds    edi,FWORD PTR [esi-0x358acd82]
  41069a:	jae    0x41064f
  41069c:	add    ch,cl
  41069e:	cmp    ebp,DWORD PTR [ecx+edx*4+0x6e]
  4106a2:	fistp  QWORD PTR [ebp+edi*2+0x76c29660]
  4106a9:	inc    ebp
  4106aa:	imul   eax,ebx,0x5e
  4106ad:	xchg   ecx,eax
  4106ae:	push   ebx
  4106af:	call   0xa0f4:0xede8d4bb
  4106b6:	inc    esp
  4106b7:	fadd   st(5),st
  4106b9:	daa    
  4106ba:	push   ss
  4106bb:	test   BYTE PTR [edx+ecx*1-0x5f],0x1e
  4106c0:	stc    
  4106c1:	loope  0x41069d
  4106c3:	es cs push ebp
  4106c6:	mov    dl,0x98
  4106c8:	lods   eax,DWORD PTR ds:[esi]
  4106c9:	jg     0x410683
  4106cb:	inc    ecx
  4106cc:	into   
  4106cd:	std    
  4106ce:	inc    esp
  4106d0:	repnz in eax,0x12
  4106d3:	mov    al,ds:0x8ae0bf43
  4106d8:	inc    edx
  4106d9:	and    DWORD PTR [ebx+edi*2+0x5a],edi
  4106dd:	cmp    bl,BYTE PTR [ebx-0x1aac8f1b]
  4106e3:	outs   dx,BYTE PTR ds:[esi]
  4106e4:	xchg   edi,eax
  4106e5:	leave  
  4106e6:	scas   al,BYTE PTR es:[edi]
  4106e7:	(bad)  
  4106e8:	jmp    0x63d5:0x17d31c07
  4106ef:	xor    edi,DWORD PTR [esi+0x1bc00f11]
  4106f5:	xor    bl,BYTE PTR [ecx-0x2a]
  4106f8:	push   edx
  4106f9:	dec    ecx
  4106fa:	push   es
  4106fb:	arpl   WORD PTR ds:0xe63a5935,di
  410701:	mov    bh,BYTE PTR [esi+0x32]
  410704:	adc    al,0x14
  410706:	inc    edx
  410707:	mov    bh,0x11
  410709:	push   0xd24efa44
  41070e:	jb     0x4106a8
  410710:	aam    0x41
  410712:	cs xor eax,edx
  410715:	enter  0xf457,0x9e
  410719:	jg     0x410706
  41071b:	shr    dl,1
  41071d:	mov    esp,0xd3a91139
  410722:	imul   edx,DWORD PTR [ebx-0x737b803],0x36
  410729:	jle    0x4106ec
  41072b:	mov    edi,0x237ceaa6
  410730:	push   edx
  410731:	adc    ecx,DWORD PTR [ecx+0x5c]
  410734:	jmp    0x410703
  410736:	cmp    esp,esi
  410738:	or     DWORD PTR [ecx+esi*8+0x37],0x4a
  41073d:	pop    esi
  41073e:	aas    
  41073f:	repz sub ch,dh
  410742:	sub    ebx,eax
  410744:	or     bh,BYTE PTR [ebx]
  410746:	add    edx,DWORD PTR [ebx-0x1e]
  410749:	gs mov ah,0x37
  41074c:	into   
  41074d:	xchg   DWORD PTR [ebx-0x3f],esi
  410750:	sbb    bh,dh
  410752:	xor    BYTE PTR [edx-0x247c05af],bh
  410758:	pop    ds
  410759:	out    0x4d,eax
  41075b:	mov    ds:0xef956958,al
  410760:	jns    0x410718
  410762:	inc    edi
  410763:	pop    ecx
  410764:	aam    0xbf
  410766:	fwait
  410767:	add    DWORD PTR [esi-0x3f47b970],edx
  41076d:	stc    
  41076e:	mov    eax,0x7580ab71
  410773:	sub    eax,0xccb41cb2
  410778:	scas   eax,DWORD PTR es:[edi]
  410779:	call   0x2410:0xc617452
  410780:	pop    ebp
  410781:	rol    DWORD PTR [ebx],0x33
  410784:	lods   al,BYTE PTR ds:[esi]
  410785:	leave  
  410786:	shr    BYTE PTR [eax],cl
  410788:	dec    edi
  410789:	lods   eax,DWORD PTR ds:[esi]
  41078a:	ret    
  41078b:	dec    esi
  41078c:	call   0x73549390
  410791:	and    edx,DWORD PTR [eax]
  410793:	cmp    al,0xfc
  410795:	popf   
  410796:	xchg   edi,eax
  410797:	inc    edx
  410798:	lods   eax,DWORD PTR ds:[esi]
  410799:	clc    
  41079a:	push   es
  41079b:	stos   BYTE PTR es:[edi],al
  41079c:	mov    ebx,cs
  41079e:	call   0xf3177216
  4107a3:	xlat   BYTE PTR ds:[ebx]
  4107a4:	shl    ebp,0xec
  4107a7:	aas    
  4107a8:	dec    ebx
  4107a9:	arpl   bx,ax
  4107ab:	jg     0x410790
  4107ad:	and    eax,0xa4515295
  4107b2:	jl     0x41082d
  4107b4:	inc    eax
  4107b5:	call   0x8722:0x70ec4ace
  4107bc:	out    dx,eax
  4107bd:	xchg   ebx,eax
  4107be:	pop    ss
  4107bf:	adc    DWORD PTR [ebx],edi
  4107c1:	push   cs
  4107c2:	or     esi,edx
  4107c4:	cmp    dh,BYTE PTR [esi-0x1c]
  4107c7:	sub    eax,esi
  4107c9:	fsub   DWORD PTR [ebx+0x2c7acb69]
  4107cf:	push   ebx
  4107d0:	mov    bl,0x98
  4107d2:	mov    ecx,0x87dd0de0
  4107d7:	daa    
  4107d8:	in     eax,0x35
  4107da:	push   esp
  4107db:	fidivr WORD PTR [esp+ecx*1]
  4107de:	sbb    DWORD PTR [edi+0xcd39d6c],edx
  4107e4:	(bad)  
  4107e5:	push   0xffffffb9
  4107e7:	sub    DWORD PTR [eax-0xd],ecx
  4107ea:	or     BYTE PTR [edi],bl
  4107ec:	mov    edi,0x446e854f
  4107f1:	aas    
  4107f2:	or     eax,0xb8404c68
  4107f7:	and    al,0x8a
  4107f9:	or     DWORD PTR [edi-0x4c5cab74],0x44ce3461
  410803:	and    ecx,DWORD PTR [ebx-0x5787f854]
  410809:	cs daa 
  41080b:	outs   dx,DWORD PTR ds:[esi]
  41080c:	sub    bh,cl
  41080e:	das    
  41080f:	add    BYTE PTR [esi+0x3a],ah
  410812:	mov    ah,0xd9
  410814:	ret    0x210c
  410817:	js     0x41080e
  410819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41081a:	lods   eax,DWORD PTR ds:[esi]
  41081b:	sbb    BYTE PTR [esi+0x16091194],ch
  410821:	(bad)  
  410822:	adc    cl,BYTE PTR [edi+0x150fb7dd]
  410828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410829:	loopne 0x4107df
  41082b:	push   0x612d558c
  410830:	fwait
  410831:	cmp    ah,BYTE PTR [eax+0x43657842]
  410837:	inc    ebx
  410838:	int3   
  410839:	aam    0x28
  41083b:	repz jns 0x410845
  41083e:	pop    es
  41083f:	mov    ch,al
  410841:	aad    0x83
  410843:	ja     0x41086a
  410845:	mov    WORD PTR [eax-0x6d],gs
  410848:	adc    edi,DWORD PTR [edx-0x24557ac2]
  41084e:	push   esp
  41084f:	mov    ebp,0xbf443aaf
  410854:	sub    eax,0xf7ead836
  410859:	fs mov ebp,0x5a699e5
  41085f:	push   edx
  410860:	sti    
  410861:	int    0x50
  410863:	and    DWORD PTR [ebx+0x73],esp
  410866:	(bad)  
  410867:	pop    edi
  410868:	retf   0xdc30
  41086b:	es pop edx
  41086d:	dec    edx
  41086e:	ja     0x41086e
  410870:	pop    edi
  410871:	cli    
  410872:	in     al,dx
  410873:	xor    al,0x8f
  410875:	dec    ecx
  410876:	xor    BYTE PTR [ebx+0x137b2ded],bl
  41087c:	loope  0x410840
  41087e:	cwde   
  41087f:	mov    bh,0xe4
  410881:	mov    edi,DWORD PTR [ecx+0x4cf0959f]
  410887:	(bad)  
  410888:	(bad)  
  41088a:	xchg   ebx,eax
  41088b:	cs jns 0x410836
  41088e:	dec    edi
  41088f:	test   DWORD PTR [eax+0x66f91731],edi
  410895:	push   ecx
  410896:	shl    DWORD PTR [ecx-0x72],0x5a
  41089a:	leave  
  41089b:	daa    
  41089c:	inc    edx
  41089d:	or     eax,0x3720edc8
  4108a2:	add    eax,0x65bdf622
  4108a7:	fwait
  4108a8:	sub    edi,esp
  4108aa:	icebp  
  4108ab:	cmp    ch,BYTE PTR [edi]
  4108ad:	sar    BYTE PTR [ebx-0x74966309],0xdc
  4108b4:	std    
  4108b5:	inc    eax
  4108b6:	iret   
  4108b7:	xchg   dl,bl
  4108b9:	lea    edx,gs:[ebx+0x4a]
  4108bd:	xchg   edi,eax
  4108be:	push   0x2b286857
  4108c3:	out    dx,eax
  4108c4:	mov    ah,0xd3
  4108c6:	fucompp 
  4108c8:	or     eax,0xfe764878
  4108cd:	(bad)  
  4108ce:	cli    
  4108cf:	outs   dx,DWORD PTR ds:[esi]
  4108d0:	add    BYTE PTR [esi-0x18],bh
  4108d3:	out    0xd4,eax
  4108d5:	add    DWORD PTR [ebp+0x4f],esp
  4108d8:	(bad)  
  4108d9:	out    dx,eax
  4108da:	xor    ch,ch
  4108dc:	mov    edx,0x7c95d552
  4108e1:	push   cs
  4108e2:	cmp    DWORD PTR [ebp-0x2e08e679],0x1b8282e3
  4108ec:	and    eax,0xaa3063fa
  4108f1:	xlat   BYTE PTR ds:[ebx]
  4108f2:	loopne 0x41088f
  4108f4:	sub    eax,0xd5e23c27
  4108f9:	adc    DWORD PTR [esi],esp
  4108fb:	jmp    0xcc3f695c
  410900:	outs   dx,DWORD PTR ds:[esi]
  410901:	push   0xbf66777a
  410906:	pop    edi
  410907:	hlt    
  410908:	pop    ss
  410909:	int3   
  41090a:	adc    eax,0x7eab628a
  41090f:	jae    0x41089d
  410911:	stos   DWORD PTR es:[edi],eax
  410912:	jb     0x4108b5
  410914:	xor    DWORD PTR [esi],edi
  410916:	jo     0x4108b4
  410918:	(bad)  
  410919:	mov    ecx,gs
  41091b:	mov    edi,0xe59653d6
  410920:	adc    eax,DWORD PTR [eax-0x706ab81b]
  410926:	adc    eax,0xc6fcbb5a
  41092b:	push   0xb1efb5c8
  410930:	mov    es,WORD PTR [eax-0x7f]
  410933:	xchg   edi,eax
  410934:	cmp    esi,ebp
  410936:	mov    al,0x52
  410938:	adc    BYTE PTR [ebx+0x18],ah
  41093b:	fwait
  41093c:	ror    BYTE PTR [esi+0x2f],cl
  41093f:	lea    ebp,[esi]
  410941:	mov    eax,0xff09a5a1
  410946:	mov    ebx,0xaf4a0a62
  41094b:	adc    BYTE PTR [eax],0x40
  41094e:	mov    al,0x73
  410950:	scas   eax,DWORD PTR es:[edi]
  410951:	mov    esi,0x2717872e
  410956:	dec    esp
  410957:	std    
  410958:	bsf    esi,DWORD PTR [esp+ecx*4]
  41095c:	cmp    DWORD PTR [ebx],0x612b20da
  410962:	push   ebx
  410963:	jns    0x41094b
  410965:	sbb    ebp,DWORD PTR [eax]
  410967:	sbb    eax,0x26ae579c
  41096c:	test   BYTE PTR [edx-0xd93063c],ch
  410972:	jo     0x410975
  410974:	inc    ebp
  410975:	sbb    eax,0x95e1805b
  41097a:	fnsave [ebx-0x647dddc1]
  410980:	jecxz  0x410996
  410982:	pop    esp
  410983:	fimul  WORD PTR [eax]
  410985:	jge    0x410948
  410987:	cli    
  410988:	dec    ecx
  410989:	or     al,0x7e
  41098b:	mov    dh,0x73
  41098d:	je     0x410959
  41098f:	mov    al,0x4c
  410991:	jmp    0x4109ae
  410993:	adc    al,0x53
  410995:	or     ebp,DWORD PTR [ebx-0x48]
  410998:	shr    DWORD PTR [edx-0x58],1
  41099b:	sbb    BYTE PTR [ebp+0x30b7ae60],bh
  4109a1:	pop    ebx
  4109a2:	test   DWORD PTR [ecx-0x4a23ae50],edx
  4109a8:	add    dh,BYTE PTR [edi-0x296c2a4d]
  4109ae:	dec    al
  4109b0:	sbb    dl,cl
  4109b2:	jo     0x4109bd
  4109b4:	fs les ebx,FWORD PTR es:[edi+edi*1-0x59]
  4109ba:	in     eax,0xc3
  4109bc:	and    ebp,DWORD PTR [edx-0x62e3d25e]
  4109c2:	arpl   WORD PTR [ebx+0x17],cx
  4109c5:	and    eax,0x3a66921f
  4109ca:	mov    eax,0xe034a651
  4109cf:	pop    eax
  4109d0:	les    edi,FWORD PTR [eax-0x16]
  4109d3:	mov    ebp,eax
  4109d5:	mov    ecx,0x87fa8808
  4109da:	pop    edx
  4109db:	mov    ah,0xe3
  4109dd:	in     al,dx
  4109de:	or     DWORD PTR [edx+ebx*4-0x10582150],edi
  4109e5:	fbld   TBYTE PTR [ebx]
  4109e7:	cld    
  4109e8:	int3   
  4109e9:	(bad)  
  4109ea:	jnp    0x410a0d
  4109ec:	fcom   QWORD PTR ds:0xe912d4d9
  4109f2:	or     dl,BYTE PTR [edi+0x57ccf930]
  4109f8:	mov    cl,0xf8
  4109fa:	dec    ebp
  4109fb:	add    ah,bl
  4109fd:	mov    al,ds:0xa4668a7c
  410a02:	rcl    DWORD PTR [ebp-0x715a2ad6],cl
  410a08:	adc    DWORD PTR [eax-0x598a6303],eax
  410a0e:	test   al,0x33
  410a10:	sbb    al,0x70
  410a12:	imul   eax,DWORD PTR [ebx],0xffffffb9
  410a15:	cmp    bl,BYTE PTR ds:0xeb120c81
  410a1b:	inc    eax
  410a1c:	add    esp,DWORD PTR [edi-0x80]
  410a1f:	pushf  
  410a20:	outs   dx,BYTE PTR ds:[esi]
  410a21:	pusha  
  410a22:	les    ecx,FWORD PTR [edx]
  410a24:	dec    edx
  410a25:	mov    bl,0xb9
  410a27:	cwde   
  410a28:	pusha  
  410a29:	dec    esp
  410a2a:	mov    dh,0xc4
  410a2c:	sbb    edx,ecx
  410a2e:	ins    DWORD PTR es:[edi],dx
  410a2f:	clc    
  410a30:	mov    esi,0xd96db23f
  410a35:	push   ebp
  410a36:	fist   WORD PTR [esp+eax*8+0x27680d4b]
  410a3d:	pushf  
  410a3e:	xchg   DWORD PTR [esi+0x65],esi
  410a41:	es sub eax,0xd1b8fbab
  410a47:	shl    esi,0x3c
  410a4a:	loope  0x410a31
  410a4c:	mov    ecx,cr2
  410a4f:	adc    bl,BYTE PTR [esi-0x7786b1e9]
  410a55:	mov    ebx,0x99822a5
  410a5a:	push   cs
  410a5b:	jg     0x410a44
  410a5d:	gs popa 
  410a5f:	cs pop edx
  410a61:	rcr    DWORD PTR [esi+0xaddd20b],1
  410a67:	jnp    0x410a4f
  410a69:	(bad)  
  410a6a:	loopne 0x410a6e
  410a6c:	hlt    
  410a6d:	arpl   WORD PTR [ecx+edx*2],si
  410a70:	data16 lahf 
  410a72:	xchg   ebp,ebp
  410a74:	or     ch,BYTE PTR [eax+0x5b]
  410a77:	xchg   BYTE PTR [ebx-0x395a13cc],dl
  410a7d:	jbe    0x410ae6
  410a7f:	pcmpeqd mm6,QWORD PTR [edx]
  410a82:	aam    0x63
  410a84:	pop    esi
  410a85:	jnp    0x410aaa
  410a87:	in     al,dx
  410a88:	or     eax,0xc95ff964
  410a8d:	adc    ch,BYTE PTR es:[esi]
  410a90:	aad    0xb6
  410a92:	addr16 (bad) 
  410a94:	lea    ebx,[edi+edx*4-0x28e98ce5]
  410a9b:	adc    al,0x31
  410a9d:	nop
  410a9e:	xor    BYTE PTR [esi+0x36],dl
  410aa1:	cld    
  410aa2:	(bad)  
  410aa3:	cmp    BYTE PTR [edi-0x67],dh
  410aa6:	mov    ah,0xee
  410aa8:	or     eax,0x417c30a9
  410aad:	xor    BYTE PTR [esi+eiz*8+0xa],0x42
  410ab2:	paddusw mm6,mm7
  410ab5:	adc    DWORD PTR [eax],esi
  410ab7:	icebp  
  410ab8:	and    ecx,DWORD PTR [ebx+ebx*8+0x37]
  410abc:	sahf   
  410abd:	pop    eax
  410abe:	sar    BYTE PTR [esi],1
  410ac0:	push   ebp
  410ac1:	lock fdivr DWORD PTR [edi-0x2e]
  410ac5:	stos   BYTE PTR es:[edi],al
  410ac6:	mov    eax,0xc81e6350
  410acb:	pop    es
  410acc:	dec    edx
  410acd:	gs daa 
  410acf:	ins    BYTE PTR es:[edi],dx
  410ad0:	and    esi,DWORD PTR [ebx]
  410ad2:	dec    DWORD PTR [ebx+eax*8+0x650c26ed]
  410ad9:	(bad)  
  410ada:	(bad)  ds:0x4e777f50
  410ae0:	in     al,0xb3
  410ae2:	cmp    dl,BYTE PTR [edi+0x415e8c8]
  410ae8:	add    DWORD PTR [esi+0x12],ebx
  410aeb:	mov    eax,ds:0x1293864a
  410af0:	cdq    
  410af1:	clc    
  410af2:	fist   WORD PTR [ebp+0x19]
  410af5:	call   0xa060f793
  410afa:	mov    ds:0xb22373c6,eax
  410aff:	cmp    ebx,ebp
  410b01:	stos   DWORD PTR es:[edi],eax
  410b02:	aaa    
  410b03:	add    bh,BYTE PTR [edx]
  410b05:	fdivr  DWORD PTR [edx-0x60]
  410b08:	inc    DWORD PTR [eax]
  410b0a:	call   0x954e:0x63a531b1
  410b11:	sub    al,0xcc
  410b13:	mov    al,0xc0
  410b15:	iret   
  410b16:	xor    eax,0x637b53db
  410b1b:	cmp    al,0x28
  410b1d:	push   cs
  410b1e:	(bad)  
  410b1f:	or     edx,edx
  410b21:	call   0x2a101703
  410b26:	shl    DWORD PTR [ebp+0x44fa3b6],0x69
  410b2d:	mov    bh,0x46
  410b2f:	mov    esi,0xd8c41ad9
  410b34:	mov    ah,0x28
  410b36:	xchg   edx,eax
  410b37:	jecxz  0x410b8b
  410b39:	pop    ds
  410b3a:	in     al,dx
  410b3b:	add    eax,0x7d48fc2a
  410b40:	mov    al,0xd5
  410b42:	jns    0x410b43
  410b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b45:	(bad)  
  410b46:	scas   al,BYTE PTR es:[edi]
  410b47:	and    DWORD PTR [eax-0x4be96832],edx
  410b4d:	sbb    ebp,DWORD PTR [edi+0x2262eec0]
  410b53:	mov    al,ds:0xa09624f3
  410b58:	imul   esp,DWORD PTR [eax+0x5ee23636],0xb21932a5
  410b62:	cmc    
  410b63:	add    DWORD PTR [eax+ebx*2+0x66f1bd47],edx
  410b6a:	fdiv   QWORD PTR [esi+0x43]
  410b6d:	cmp    esi,edi
  410b6f:	inc    edi
  410b70:	out    0x3e,al
  410b72:	pop    esi
  410b73:	retf   
  410b74:	add    DWORD PTR [esi+0x6f],esp
  410b77:	xchg   ebx,eax
  410b78:	dec    edi
  410b79:	bound  ebp,QWORD PTR [eax+eax*2]
  410b7c:	fdivr  DWORD PTR [ebx-0x7c5423b4]
  410b82:	loopne 0x410b35
  410b84:	jecxz  0x410b25
  410b86:	and    ecx,ecx
  410b88:	retf   0x2ffe
  410b8b:	mov    ebx,DWORD PTR [eax]
  410b8d:	into   
  410b8e:	lods   eax,DWORD PTR ds:[esi]
  410b8f:	(bad)  
  410b90:	jo     0x410b9f
  410b92:	scas   al,BYTE PTR es:[edi]
  410b93:	and    eax,0x193f85f3
  410b98:	jns    0x410bc2
  410b9a:	jp     0x410b92
  410b9c:	fcomp  QWORD PTR [ecx+0x4a]
  410b9f:	mov    dl,0x8f
  410ba1:	popa   
  410ba2:	out    dx,eax
  410ba3:	jno    0x410b29
  410ba5:	sar    BYTE PTR [ebp+edi*1-0x27],cl
  410ba9:	lods   al,BYTE PTR ds:[esi]
  410baa:	inc    ebx
  410bab:	fisubr DWORD PTR [ecx]
  410bad:	and    bl,ch
  410baf:	aaa    
  410bb0:	pop    esp
  410bb1:	xlat   BYTE PTR ds:[ebx]
  410bb2:	or     BYTE PTR [edx+eiz*4],ch
  410bb5:	btc    DWORD PTR [ebp-0x11],eax
  410bb9:	mov    ch,0xe5
  410bbb:	mov    cl,0x8e
  410bbd:	(bad)  
  410bbe:	loop   0x410b4a
  410bc0:	(bad)  
  410bc1:	xor    eax,0xdd4035e7
  410bc6:	ret    0xb201
  410bc9:	retw   
  410bcb:	mov    ds:0xde8b10c2,al
  410bd0:	mov    eax,0x41b8fb59
  410bd5:	mov    WORD PTR [ebx+edi*2],?
  410bd8:	enter  0xdaf3,0x6f
  410bdc:	sub    al,0xd8
  410bde:	mov    ds:0x8878a22f,eax
  410be3:	int    0x8
  410be5:	cmc    
  410be6:	and    esp,edi
  410be8:	icebp  
  410be9:	inc    edx
  410bea:	mov    esp,0xfec32c0b
  410bef:	push   ss
  410bf0:	mov    ds:0xed4e9627,eax
  410bf5:	idiv   BYTE PTR [ebp+0x60c05247]
  410bfb:	imul   edi,DWORD PTR ds:0x57492aa0,0x31
  410c02:	fsubr  st,st(4)
  410c04:	adc    BYTE PTR [edx],dl
  410c06:	push   0xffffffd4
  410c08:	add    BYTE PTR [edi-0x3ca1a21e],ah
  410c0e:	xchg   esp,eax
  410c0f:	jb     0x410bab
  410c11:	hlt    
  410c12:	pop    ecx
  410c13:	clc    
  410c14:	inc    edx
  410c15:	sar    DWORD PTR [edi],0x70
  410c18:	scas   al,BYTE PTR es:[edi]
  410c19:	xchg   ebp,eax
  410c1a:	xchg   BYTE PTR [edx-0x63],ch
  410c1d:	outs   dx,DWORD PTR ds:[esi]
  410c1e:	xchg   esi,eax
  410c1f:	push   esi
  410c20:	retf   
  410c21:	or     al,0x57
  410c23:	cdq    
  410c24:	cmp    al,0xa2
  410c26:	jbe    0x410c0c
  410c28:	mov    ebp,0xee2930ad
  410c2d:	or     BYTE PTR [edx-0x16e78c10],bh
  410c33:	les    ebp,FWORD PTR [ecx+0x74]
  410c36:	jnp    0x410c96
  410c38:	ficomp DWORD PTR [edx-0x707ca77b]
  410c3e:	retf   
  410c3f:	sub    edi,DWORD PTR ds:0x62290fe1
  410c45:	enter  0xeba1,0x14
  410c49:	cmp    BYTE PTR [edx],dl
  410c4b:	mov    al,0x87
  410c4d:	jmp    0x9541:0x896f989c
  410c54:	xchg   esp,eax
  410c55:	sub    dh,BYTE PTR [ebx]
  410c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c58:	push   ss
  410c59:	test   al,0x71
  410c5b:	aam    0xbf
  410c5d:	mov    ecx,0x486173e6
  410c62:	fst    DWORD PTR [eiz*8+0x4425485b]
  410c69:	or     DWORD PTR [ebx],edi
  410c6b:	mov    edi,0x1ef8ed07
  410c70:	mov    esi,DWORD PTR [eax+0x4c]
  410c73:	pop    edi
  410c74:	lahf   
  410c75:	jecxz  0x410ccc
  410c77:	mov    WORD PTR [esp+eiz*8-0x47],ds
  410c7b:	frstor [esi+0x66]
  410c7e:	mov    dl,0x60
  410c80:	cs sbb al,0xe0
  410c83:	sar    BYTE PTR [edx],cl
  410c85:	iret   
  410c86:	stos   DWORD PTR es:[edi],eax
  410c87:	adc    edi,DWORD PTR [esi+0x41a65db2]
  410c8d:	cmp    bh,BYTE PTR [esp+ebp*1-0x65]
  410c91:	int3   
  410c92:	mov    al,ds:0x7aff5b08
  410c97:	mov    eax,ds:0xedaa3574
  410c9c:	sbb    si,WORD PTR [ebx]
  410c9f:	mov    ebp,DWORD PTR [ebx+0x6a]
  410ca2:	and    eax,edx
  410ca4:	enter  0x3a8e,0x38
  410ca8:	cmc    
  410ca9:	mov    cl,dl
  410cab:	mov    cl,0xe2
  410cad:	out    dx,al
  410cae:	not    dl
  410cb0:	or     al,0x5b
  410cb2:	xlat   BYTE PTR ds:[ebx]
  410cb3:	mov    esi,eax
  410cb5:	or     ch,dl
  410cb7:	or     BYTE PTR [edi-0x4391e389],bh
  410cbd:	xchg   esp,eax
  410cbe:	adc    ebp,DWORD PTR [edi]
  410cc0:	cmp    al,0x1
  410cc2:	or     al,0x8
  410cc4:	icebp  
  410cc5:	jmp    0x6d36951
  410cca:	adc    al,0xe5
  410ccc:	je     0x410cac
  410cce:	adc    eax,0xf0db68ad
  410cd3:	cld    
  410cd4:	pop    edi
  410cd5:	test   eax,0x91c72634
  410cda:	lods   eax,DWORD PTR ds:[esi]
  410cdb:	sbb    al,0xcb
  410cdd:	jge    0x410cef
  410cdf:	jae    0x410d53
  410ce1:	in     eax,dx
  410ce2:	mov    edi,0x879e6e07
  410ce7:	ja     0x410cb0
  410ce9:	ror    DWORD PTR [edi],1
  410ceb:	out    0xba,al
  410ced:	jno    0x410c71
  410cef:	lods   eax,DWORD PTR ds:[esi]
  410cf0:	sbb    eax,0xc37a93dd
  410cf5:	jle    0x410d0b
  410cf7:	(bad)  
  410cf8:	mov    fs,WORD PTR [ebx-0x50]
  410cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cfc:	pushf  
  410cfd:	xor    al,0x70
  410cff:	mov    bh,0xe6
  410d01:	pushf  
  410d02:	mov    ch,0xa1
  410d04:	cmp    al,0x34
  410d06:	xor    al,0xed
  410d08:	add    al,0x67
  410d0a:	mov    ah,0xa7
  410d0c:	cli    
  410d0d:	push   0x996b267b
  410d12:	es mov esp,0x4286f19d
  410d18:	mov    dh,0xf3
  410d1a:	fs pop esp
  410d1c:	fs (bad) 
  410d1e:	xor    ah,BYTE PTR [ebx]
  410d20:	jmp    0xca7:0xfaa3a72b
  410d27:	lahf   
  410d28:	xor    DWORD PTR [ebp+ebp*1-0x6c],ebp
  410d2c:	dec    eax
  410d2d:	add    DWORD PTR [edx+0x7b],edi
  410d30:	jno    0x410cfc
  410d32:	out    dx,eax
  410d33:	mov    ah,0x73
  410d35:	sti    
  410d36:	sar    BYTE PTR [eax+eiz*4-0x2c],1
  410d3a:	pushf  
  410d3b:	sahf   
  410d3c:	test   ebx,esp
  410d3e:	mov    dh,0xda
  410d40:	scas   al,BYTE PTR es:[edi]
  410d41:	sub    eax,0x94cc1c1d
  410d46:	cmp    DWORD PTR ds:0x8fa5c634,0x1b
  410d4d:	xchg   edx,eax
  410d4e:	lock scas eax,DWORD PTR es:[edi]
  410d50:	mov    dl,0x74
  410d52:	lods   al,BYTE PTR ds:[esi]
  410d53:	inc    ebx
  410d54:	or     BYTE PTR [esi-0x58],al
  410d57:	push   esp
  410d58:	jnp    0x410d90
  410d5a:	std    
  410d5b:	jmp    0xb106956f
  410d60:	and    ebx,DWORD PTR [ebp-0x2e]
  410d63:	push   ecx
  410d64:	jmp    0x61ae:0x6e9a4e28
  410d6b:	(bad)  
  410d6d:	push   esp
  410d6e:	aaa    
  410d6f:	or     DWORD PTR [eax+0x7a3c4608],edi
  410d75:	jns    0x410d85
  410d77:	and    BYTE PTR [ecx+0x14f2dd99],dl
  410d7d:	add    al,0x78
  410d7f:	xchg   esi,eax
  410d80:	cmp    al,0x7c
  410d82:	push   edi
  410d83:	jmp    0x2712:0x36b83556
  410d8a:	aam    0xa2
  410d8c:	add    DWORD PTR [esi+0x279fbec8],esi
  410d92:	xor    BYTE PTR [edi-0x2092d3b4],dh
  410d98:	ja     0x410d7a
  410d9a:	xor    al,0xed
  410d9c:	minps  xmm4,XMMWORD PTR [ebx+0x6e85117b]
  410da3:	or     al,0xc7
  410da5:	lds    eax,FWORD PTR [ebx-0x5b]
  410da8:	xor    DWORD PTR [edi+0x1cd3a1e],eax
  410dae:	pop    ecx
  410daf:	and    ebx,0x37
  410db2:	push   ebx
  410db3:	sbb    eax,ebp
  410db5:	mov    bh,0x72
  410db7:	std    
  410db8:	aam    0xe
  410dba:	loope  0x410de0
  410dbc:	add    dl,dh
  410dbe:	rcr    BYTE PTR [eax],cl
  410dc0:	dec    ebx
  410dc1:	cmp    DWORD PTR [ebx+0x9],ecx
  410dc4:	jno    0x410e3e
  410dc6:	outs   dx,DWORD PTR ds:[esi]
  410dc7:	pop    ds
  410dc8:	cli    
  410dc9:	cwde   
  410dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dcb:	pop    ds
  410dcc:	xor    ebp,edi
  410dce:	aas    
  410dcf:	call   DWORD PTR [ebx-0x6fd938e6]
  410dd5:	xor    DWORD PTR [ecx+0x691a6f12],ebp
  410ddb:	xor    BYTE PTR [edi+ecx*8-0x7ed9f226],ah
  410de2:	stc    
  410de3:	rcl    esp,cl
  410de5:	mov    ebx,fs
  410de7:	lock (bad) 
  410de9:	cli    
  410dea:	ja     0x410d79
  410dec:	or     BYTE PTR [eax+0xc369da5],al
  410df2:	xchg   BYTE PTR [ebx],ah
  410df4:	push   eax
  410df5:	inc    edi
  410df6:	test   al,0x2a
  410df8:	sub    edi,ebp
  410dfa:	es mov edx,0xfc97399d
  410e00:	test   DWORD PTR [ebp-0x51],edx
  410e03:	imul   ecx,DWORD PTR [ecx+ecx*2-0x41],0xffffffa8
  410e08:	loopne 0x410e0f
  410e0a:	sbb    esi,DWORD PTR [eax+eiz*8]
  410e0d:	jo     0x410e2d
  410e0f:	imul   ebp,edx,0xffffffed
  410e12:	scas   al,BYTE PTR es:[edi]
  410e13:	sub    BYTE PTR [edi+edi*8-0x4c3c5624],dh
  410e1a:	cmc    
  410e1b:	push   esp
  410e1c:	cmp    edi,DWORD PTR [edx-0x2d761051]
  410e22:	fiadd  WORD PTR [ecx-0x2b]
  410e25:	inc    edx
  410e26:	xchg   BYTE PTR [edi+eax*4],ch
  410e29:	jb     0x410dd6
  410e2b:	arpl   WORD PTR [edx],di
  410e2d:	mov    esi,edi
  410e2f:	(bad)  
  410e30:	aad    0x19
  410e32:	mov    ebx,0xad1d14cb
  410e37:	retf   0xea40
  410e3a:	mov    BYTE PTR [ebx],al
  410e3c:	pop    esi
  410e3d:	hlt    
  410e3e:	cs jns 0x410e6e
  410e41:	xor    DWORD PTR [ebp+0xf1a92a9],ebp
  410e47:	cmp    ah,al
  410e49:	push   ds
  410e4a:	sub    BYTE PTR [ebx-0x80],0x13
  410e4e:	push   0xffffffd0
  410e50:	xchg   BYTE PTR [ebx+0x6222e671],bl
  410e56:	jno    0x410e38
  410e58:	loopne 0x410e64
  410e5a:	stos   BYTE PTR es:[edi],al
  410e5b:	pop    esp
  410e5c:	lods   eax,DWORD PTR ds:[esi]
  410e5d:	outs   dx,DWORD PTR ds:[esi]
  410e5e:	leave  
  410e5f:	xchg   ecx,eax
  410e60:	outs   dx,DWORD PTR ds:[esi]
  410e61:	cli    
  410e62:	sub    ch,ch
  410e64:	fadd   DWORD PTR [edi-0x1d]
  410e67:	inc    ecx
  410e68:	rcr    DWORD PTR [eax-0x2a57c560],cl
  410e6e:	jae    0x410eb1
  410e70:	arpl   WORD PTR [edi-0x11fd049f],sp
  410e76:	dec    ecx
  410e77:	sti    
  410e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e79:	jmp    0x21183c99
  410e7e:	cmc    
  410e7f:	rol    edi,1
  410e81:	in     al,0xb8
  410e83:	scas   eax,DWORD PTR es:[edi]
  410e84:	xor    ah,BYTE PTR [edi]
  410e86:	clc    
  410e87:	push   cs
  410e88:	pop    ebp
  410e89:	ss pop edi
  410e8b:	loopne 0x410e74
  410e8d:	in     eax,dx
  410e8e:	xchg   esp,eax
  410e8f:	xchg   DWORD PTR [eax-0x67],esp
  410e92:	pop    esp
  410e93:	popf   
  410e94:	inc    esp
  410e95:	and    edx,esi
  410e97:	inc    eax
  410e98:	cli    
  410e99:	add    al,0xc7
  410e9b:	pop    ss
  410e9c:	fldcw  WORD PTR [esi+ecx*1]
  410e9f:	in     eax,dx
  410ea0:	test   al,0xc7
  410ea2:	mov    esi,0x4418d4f9
  410ea7:	and    eax,ebx
  410ea9:	(bad)  
  410eaa:	ror    DWORD PTR [eax],cl
  410eac:	xchg   edx,eax
  410ead:	or     bl,al
  410eaf:	retf   
  410eb0:	and    bh,BYTE PTR [ebx-0x4db3809e]
  410eb6:	xchg   ebp,eax
  410eb7:	lock or ebp,0xede1e51a
  410ebe:	xchg   ecx,eax
  410ebf:	pop    eax
  410ec0:	(bad)  
  410ec1:	fistp  QWORD PTR [eax+0x7]
  410ec4:	mov    eax,0x7e2c1640
  410ec9:	ret    
  410eca:	sbb    eax,0x27c87bb3
  410ecf:	and    BYTE PTR [ebx-0x605668cd],0x20
  410ed6:	sbb    DWORD PTR [ebx+0x68],esp
  410ed9:	xchg   esp,eax
  410eda:	or     ch,bh
  410edc:	inc    edx
  410edd:	mov    eax,0xbacd1a0d
  410ee2:	enter  0xa90c,0xf4
  410ee6:	ret    
  410ee7:	push   0x666953f4
  410eec:	fmul   DWORD PTR [eax-0x22375d5b]
  410ef2:	push   ebp
  410ef3:	call   0xfab3:0xc89d295c
  410efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410efb:	cmp    BYTE PTR [ecx-0x19cf978a],bh
  410f01:	lock pop esp
  410f03:	adc    eax,0xd740ef6b
  410f08:	fcom   st(3)
  410f0a:	dec    eax
  410f0b:	mov    cl,0xe9
  410f0d:	jbe    0x410eb6
  410f0f:	popf   
  410f10:	loop   0x410f76
  410f12:	imul   ebp,DWORD PTR [edx+0x3e437aaf],0x22
  410f19:	mov    al,0x15
  410f1b:	jmp    0x6ed4:0x3f7051ee
  410f22:	push   cs
  410f23:	inc    edx
  410f24:	stos   BYTE PTR es:[edi],al
  410f25:	out    0xc2,eax
  410f27:	lods   al,BYTE PTR ds:[esi]
  410f28:	or     BYTE PTR [eax+ebx*1],bh
  410f2b:	xchg   ebp,eax
  410f2c:	out    dx,al
  410f2d:	sub    al,BYTE PTR [ebx-0x5e]
  410f30:	imul   ecx,DWORD PTR [edi],0xffffffd1
  410f33:	(bad)  
  410f34:	jnp    0xb70437d9
  410f3a:	fsubrp st(4),st
  410f3c:	mov    bh,0x34
  410f3e:	jnp    0x410fb7
  410f40:	cmp    dh,BYTE PTR ds:0xb4c27c3e
  410f46:	rol    DWORD PTR [ebp+0x34],0x96
  410f4a:	adc    al,0xf2
  410f4c:	lods   al,BYTE PTR ds:[esi]
  410f4d:	mov    ch,0x66
  410f4f:	mov    eax,0x3795704b
  410f54:	imul   esi,DWORD PTR [edx],0x31b982c8
  410f5a:	clc    
  410f5b:	repnz xchg ecx,eax
  410f5d:	mov    ch,0x30
  410f5f:	retf   0x8373
  410f62:	shl    BYTE PTR [ebp-0x58],cl
  410f65:	aaa    
  410f66:	pop    ebx
  410f67:	(bad)  
  410f69:	fidiv  WORD PTR [eax-0x74389335]
  410f6f:	loope  0x410f46
  410f71:	pop    edx
  410f72:	push   ebx
  410f73:	jg     0x410f19
  410f75:	cs inc edi
  410f77:	jnp    0x410f4b
  410f79:	and    BYTE PTR ds:0x2263e16d,0x1b
  410f80:	push   ecx
  410f81:	push   ebx
  410f82:	test   BYTE PTR [ebp+0x6a69ab4d],al
  410f88:	jge    0x410f3e
  410f8a:	and    al,0xdc
  410f8c:	jp     0x410f72
  410f8e:	jbe    0x410ffd
  410f90:	ror    DWORD PTR [esi-0x2b],0x71
  410f94:	(bad)  
  410f96:	dec    eax
  410f97:	pop    esi
  410f98:	int    0x43
  410f9a:	dec    eax
  410f9b:	or     BYTE PTR [eax+0x64],ch
  410f9e:	sbb    al,BYTE PTR [edi+ebp*8-0x64941506]
  410fa5:	pop    esp
  410fa6:	xchg   esi,eax
  410fa7:	neg    ah
  410fa9:	dec    eax
  410faa:	mov    al,gs:0x9123e9be
  410fb0:	xor    dh,BYTE PTR [ecx-0x47b43d5c]
  410fb6:	stos   BYTE PTR es:[edi],al
  410fb7:	push   0x27
  410fb9:	aas    
  410fba:	daa    
  410fbb:	rcr    eax,0x5a
  410fbe:	in     eax,0x91
  410fc0:	test   eax,0x1430cd3c
  410fc5:	clc    
  410fc6:	inc    ebx
  410fc7:	jo     0x410fe1
  410fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fca:	sar    DWORD PTR [esi-0x5ff3af8b],0xde
  410fd1:	mov    esp,0x63e9b82
  410fd6:	lock idiv DWORD PTR ds:[edx]
  410fda:	in     al,0x75
  410fdc:	push   ds
  410fdd:	and    esp,DWORD PTR ds:0x1bf9c136
  410fe3:	cs jge 0x41104a
  410fe6:	fchs   
  410fe8:	adc    eax,0xbe7e1747
  410fed:	loopne 0x411019
  410fef:	test   cl,dh
  410ff1:	pop    edx
  410ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ff3:	enter  0xe8f7,0xb1
  410ff7:	loopne 0x410fee
  410ff9:	in     al,dx
  410ffa:	leave  
  410ffb:	aad    0xea
  410ffd:	sbb    esi,DWORD PTR [edi+0x6246c4a4]
  411003:	sub    eax,DWORD PTR [esi-0x1f45d48]
  411009:	inc    esi
  41100a:	dec    ebp
  41100b:	pushf  
  41100c:	out    dx,eax
  41100d:	or     eax,0x65404fb6
  411012:	mov    esp,0xb7178db6
  411017:	and    eax,0x1c55639a
  41101c:	pusha  
  41101d:	stos   DWORD PTR es:[edi],eax
  41101e:	hlt    
  41101f:	and    al,0x7
  411021:	push   cs
  411022:	sbb    eax,0x60d908cb
  411027:	xchg   edi,eax
  411028:	shl    BYTE PTR [esi-0x428e5720],cl
  41102e:	mov    gs,WORD PTR [ebx]
  411030:	cmp    ah,BYTE PTR [ecx-0x7e]
  411033:	or     edx,edi
  411035:	dec    ebx
  411036:	dec    edx
  411037:	arpl   bp,dx
  411039:	cmp    dl,al
  41103b:	not    DWORD PTR ds:0xc7d613c2
  411041:	sub    DWORD PTR [ebp+0x7789230a],edi
  411047:	data16 jbe 0x41100b
  41104a:	in     al,0x9f
  41104c:	outs   dx,DWORD PTR ds:[esi]
  41104d:	push   esi
  41104e:	add    al,0xb2
  411050:	daa    
  411051:	fadd   DWORD PTR [esi-0x6ed61311]
  411057:	das    
  411058:	mov    ebx,0xaf9be4cc
  41105d:	push   edx
  41105e:	shl    DWORD PTR [edx],cl
  411060:	adc    al,0x35
  411062:	jo     0x410feb
  411064:	inc    DWORD PTR [edx-0x3089d963]
  41106a:	sub    esi,ebp
  41106c:	cs popf 
  41106e:	sub    ebx,0xd48372cf
  411074:	stos   DWORD PTR es:[edi],eax
  411075:	mov    DWORD PTR [edi-0x72175ae7],eax
  41107b:	pop    ecx
  41107c:	or     al,0x31
  41107e:	inc    edx
  41107f:	mov    ecx,0xbbd9d058
  411084:	push   0xffffffde
  411086:	test   al,0xae
  411088:	sbb    BYTE PTR [esi+0x6a6bda67],0x7d
  41108f:	mov    dl,0x33
  411091:	fsub   QWORD PTR [ecx+0x2d]
  411094:	push   ebx
  411095:	mov    dh,0x41
  411097:	cmp    eax,0x2cfff493
  41109c:	dec    edx
  41109d:	cmc    
  41109e:	push   edi
  41109f:	mov    fs,WORD PTR [ecx+0x1]
  4110a2:	mov    DWORD PTR [ebx-0x5af91537],esi
  4110a8:	push   ss
  4110a9:	lds    ebp,FWORD PTR cs:[ecx+ebp*2]
  4110ad:	outs   dx,BYTE PTR ds:[esi]
  4110ae:	mov    ?,WORD PTR [edi]
  4110b0:	in     al,0x5b
  4110b2:	jmp    0x4110cc
  4110b4:	jae    0x411126
  4110b6:	jmp    0x2ac49ada
  4110bb:	push   esp
  4110bc:	loope  0x41106a
  4110be:	retf   
  4110bf:	xchg   esp,eax
  4110c0:	mov    dl,0xc4
  4110c2:	adc    bl,cl
  4110c4:	stc    
  4110c5:	aad    0xac
  4110c7:	jle    0x411049
  4110c9:	xchg   edx,eax
  4110ca:	jmp    0x4110e6
  4110cc:	push   eax
  4110cd:	sahf   
  4110ce:	mov    edx,0x652e7471
  4110d3:	xchg   esp,eax
  4110d4:	lods   al,BYTE PTR ds:[esi]
  4110d5:	repnz or DWORD PTR [ebp+0x76],ebx
  4110d9:	ficom  WORD PTR [eax+0x53d61bfb]
  4110df:	jp     0x411112
  4110e1:	and    al,0x26
  4110e3:	and    al,0xe9
  4110e5:	mov    edx,0x6e7ad845
  4110ea:	inc    esp
  4110eb:	ror    BYTE PTR ds:0xe80f1d37,0x20
  4110f2:	adc    BYTE PTR ds:0x53c89bf1,dl
  4110f8:	ss pop ebp
  4110fa:	aam    0x6e
  4110fc:	lock retf 0x1163
  411100:	addr16 dec ecx
  411102:	popa   
  411103:	fcmovbe st,st(2)
  411105:	std    
  411106:	clc    
  411107:	dec    edx
  411108:	lds    edx,FWORD PTR [esi-0x29071853]
  41110e:	test   al,0xe9
  411110:	xchg   DWORD PTR [ebx-0x461e7482],esi
  411116:	add    dl,al
  411118:	or     BYTE PTR [esi-0x12],cl
  41111b:	(bad)  
  41111d:	jns    0x411151
  41111f:	mov    ebp,0x52f666f1
  411124:	mov    al,0x61
  411126:	or     DWORD PTR [esi-0x88be136],ebx
  41112c:	add    eax,0x518aeaf9
  411131:	dec    edi
  411132:	pop    ds
  411133:	(bad)  
  411134:	pop    ecx
  411135:	enter  0xf1c1,0xf2
  411139:	lock pusha 
  41113b:	cld    
  41113c:	pop    ss
  41113d:	fld    QWORD PTR [ebx+0x74]
  411140:	xor    DWORD PTR [ecx],0x70
  411143:	push   edx
  411144:	enter  0x4445,0xca
  411148:	push   ebx
  411149:	mov    bl,0xee
  41114b:	push   esi
  41114c:	mov    bl,0x82
  41114e:	add    DWORD PTR [esi-0x49],esi
  411151:	lods   al,BYTE PTR ds:[esi]
  411152:	sbb    BYTE PTR [edx],al
  411154:	outs   dx,BYTE PTR ds:[esi]
  411155:	xchg   edx,ecx
  411157:	jns    0x4111b9
  411159:	sbb    al,0xb4
  41115b:	push   0x443965ac
  411160:	mov    esi,0xe7ebf8f1
  411165:	bound  esi,QWORD PTR [edi+0x39]
  411168:	mov    dl,0x6b
  41116a:	pusha  
  41116b:	push   cs
  41116c:	pop    esp
  41116d:	or     DWORD PTR [esi-0x32287d4e],ebx
  411173:	in     eax,0x16
  411175:	pushf  
  411176:	pushf  
  411177:	mov    DWORD PTR [ecx+0x6f],ecx
  41117a:	mov    dl,0x3c
  41117c:	inc    eax
  41117d:	(bad)  
  41117e:	in     al,dx
  41117f:	in     al,0x37
  411181:	sti    
  411182:	sti    
  411183:	push   ebx
  411184:	push   ebx
  411185:	pop    edi
  411186:	loope  0x411120
  411188:	and    esi,DWORD PTR [eax+0x39]
  41118b:	ss ja  0x411187
  41118e:	xchg   ecx,eax
  41118f:	jmp    0xdfbf:0x671e65d
  411196:	fild   QWORD PTR [esi-0x13dfcd50]
  41119c:	lds    ecx,FWORD PTR [eax-0x7b05b50a]
  4111a2:	and    al,0xe1
  4111a4:	mov    al,ds:0x518e43e2
  4111a9:	(bad)  
  4111aa:	mov    BYTE PTR [ebx+0x26],0x7b
  4111ae:	mov    al,ds:0xecb724c6
  4111b3:	imul   esp,DWORD PTR [eax-0x43e1c522],0x2fdc9c17
  4111bd:	mov    cl,0x48
  4111bf:	pop    ebx
  4111c0:	nop
  4111c1:	popa   
  4111c2:	cdq    
  4111c3:	push   esi
  4111c4:	mov    esi,0x2d307a2b
  4111c9:	push   edx
  4111ca:	cmp    DWORD PTR [ebx+0x22caaf3],eax
  4111d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111d1:	or     DWORD PTR [edi+0x27cb6e99],ecx
  4111d7:	ja     0x41123e
  4111d9:	(bad)  
  4111da:	neg    eax
  4111dc:	js     0x411257
  4111de:	outs   dx,DWORD PTR ds:[esi]
  4111df:	dec    ecx
  4111e0:	fimul  WORD PTR [esp+edx*1+0x14bafb62]
  4111e7:	add    edi,DWORD PTR [edi+0x3f7e01a8]
  4111ed:	xchg   ecx,eax
  4111ee:	lds    eax,FWORD PTR [ecx+eiz*1+0x3ca29a01]
  4111f5:	sbb    BYTE PTR [ecx+0x3a],bl
  4111f8:	int3   
  4111f9:	fistp  DWORD PTR [edx]
  4111fb:	pop    ecx
  4111fc:	nop
  4111fd:	out    dx,al
  4111fe:	or     esi,DWORD PTR [ebx+0x5bf5e6f4]
  411204:	je     0x41122c
  411206:	sub    bh,BYTE PTR [eax-0x41]
  411209:	(bad)  
  41120a:	adc    DWORD PTR [esp+esi*1],eax
  41120d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41120e:	jg     0x41122a
  411210:	sbb    bl,0x56
  411213:	cmp    al,0x4a
  411215:	cmp    BYTE PTR [eax+0x4e],bh
  411218:	adc    eax,esi
  41121a:	sbb    bh,bh
  41121c:	jne    0x4111c4
  41121e:	or     BYTE PTR ds:0x42904172,ch
  411224:	aas    
  411225:	cwde   
  411226:	sub    eax,0x6c81a704
  41122b:	pop    edx
  41122c:	lods   al,BYTE PTR ds:[esi]
  41122d:	test   DWORD PTR [edi+ebx*4+0x3e],edx
  411231:	mov    ebx,edi
  411233:	ins    BYTE PTR es:[edi],dx
  411234:	push   0x30
  411236:	test   BYTE PTR [esi+ebp*4-0x21fbad13],al
  41123d:	cmp    al,0xc5
  41123f:	js     0x411280
  411241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411242:	call   0x72e1f657
  411247:	or     esp,eax
  411249:	cli    
  41124a:	mov    ds:0x7e2865ad,eax
  41124f:	aad    0x95
  411251:	int    0x3
  411253:	stos   BYTE PTR es:[edi],al
  411254:	push   cs
  411255:	popf   
  411256:	loopne 0x411206
  411258:	inc    esp
  411259:	jae    0x411286
  41125b:	mov    ch,0xc1
  41125d:	fiadd  WORD PTR [ecx-0x58]
  411260:	dec    ebp
  411261:	ss adc cl,0x83
  411265:	sahf   
  411266:	sbb    BYTE PTR [ebx-0x54],bh
  411269:	dec    DWORD PTR [esi]
  41126b:	pop    edi
  41126c:	idiv   ch
  41126e:	(bad)  
  41126f:	stos   BYTE PTR es:[edi],al
  411270:	outs   dx,DWORD PTR ds:[esi]
  411271:	inc    esi
  411272:	lods   al,BYTE PTR ds:[esi]
  411273:	(bad)  
  411274:	push   edi
  411275:	jns    0x411279
  411277:	pop    ss
  411278:	add    al,0xc7
  41127a:	pop    ebp
  41127b:	jge    0x41125d
  41127d:	fist   DWORD PTR ds:0x590cba2c
  411283:	lods   al,BYTE PTR ds:[esi]
  411284:	pop    es
  411285:	retf   
  411286:	lea    ecx,[eax+edi*8-0x3]
  41128a:	repz adc al,0x6e
  41128d:	pushf  
  41128e:	or     dl,dl
  411290:	nop
  411291:	mov    ds:0x9e6db269,al
  411296:	lods   al,BYTE PTR ds:[esi]
  411297:	sar    DWORD PTR [ecx-0x77],0xc9
  41129b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41129c:	cmp    eax,0x34098a58
  4112a1:	out    0x87,eax
  4112a3:	fisttp DWORD PTR [edi+0x5663a0fa]
  4112a9:	pop    ebx
  4112aa:	dec    ebx
  4112ab:	or     bl,bl
  4112ad:	cld    
  4112ae:	cmp    al,0xa2
  4112b0:	leave  
  4112b1:	lea    ecx,[esi+0x62]
  4112b4:	sahf   
  4112b5:	fsubr  QWORD PTR [ecx+esi*4+0x2cf27fbc]
  4112bc:	xchg   ebx,eax
  4112bd:	add    DWORD PTR [eax-0x7],ebx
  4112c0:	or     eax,0x8cf30bbc
  4112c5:	outs   dx,DWORD PTR ds:[esi]
  4112c6:	scas   eax,DWORD PTR es:[edi]
  4112c7:	mov    bh,0x80
  4112c9:	ins    BYTE PTR es:[edi],dx
  4112ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112cb:	jbe    0x411333
  4112cd:	cmp    DWORD PTR [eax-0x32],eax
  4112d0:	mov    bl,0xe6
  4112d2:	xor    bh,bl
  4112d4:	test   eax,0x303d3823
  4112d9:	adc    edx,ebx
  4112db:	jmp    0x6c05b1f3
  4112e0:	mov    ecx,0xf47bd4ab
  4112e5:	aad    0x97
  4112e7:	push   edx
  4112e8:	or     dl,BYTE PTR [ecx+0x5e]
  4112eb:	push   0x6e4a7d72
  4112f0:	jnp    0x4112d8
  4112f2:	vunpcklps ymm3,ymm5,YMMWORD PTR [esi]
  4112f6:	and    eax,DWORD PTR [edi-0x24]
  4112f9:	call   0x10ecd1e5
  4112fe:	sbb    eax,0x8fc2d4bd
  411303:	inc    ebx
  411304:	shl    DWORD PTR [ebp-0x65d2e659],1
  41130a:	xor    DWORD PTR [edx-0x75],edi
  41130d:	(bad)  
  41130e:	mov    eax,esp
  411310:	nop
  411311:	dec    esp
  411312:	gs aaa 
  411314:	fidiv  DWORD PTR [eax]
  411316:	jmp    0x36768093
  41131b:	hlt    
  41131c:	mov    ch,dh
  41131e:	push   edx
  41131f:	(bad)  
  411321:	xchg   esp,eax
  411322:	xor    BYTE PTR [esi+0x7d],ch
  411325:	mov    ebx,0x295de194
  41132a:	pop    ss
  41132b:	test   eax,0x88a93562
  411330:	les    esi,FWORD PTR ds:0xaedfde5f
  411336:	jl     0x411346
  411338:	xlat   BYTE PTR ds:[ebx]
  411339:	(bad)  
  41133a:	jae    0x4113af
  41133c:	add    ecx,DWORD PTR [edi+esi*8+0x3ea268d]
  411343:	cs into 
  411345:	mul    BYTE PTR [edx]
  411347:	pop    esi
  411348:	hlt    
  411349:	ficomp WORD PTR [ebp-0x1d]
  41134c:	ror    BYTE PTR [ecx-0x43210ab8],1
  411352:	lock js 0x4113c9
  411355:	hlt    
  411356:	in     al,0x9a
  411358:	data16 fst st(6)
  41135b:	xchg   edx,eax
  41135c:	push   0xffa453ef
  411361:	es es out 0xec,al
  411365:	inc    ebp
  411366:	fld    TBYTE PTR [ebx]
  411368:	mov    bl,0xc8
  41136a:	adc    eax,0x37ce3621
  41136f:	stos   DWORD PTR es:[edi],eax
  411370:	es or  eax,0x55daa836
  411376:	lods   al,BYTE PTR ds:[esi]
  411377:	lock fidiv WORD PTR [ebx]
  41137a:	mov    ds:0x5c4701bd,eax
  41137f:	xchg   ecx,eax
  411380:	cmp    al,0xac
  411382:	jl     0x41130e
  411384:	imul   DWORD PTR [ebp+esi*4+0x21]
  411388:	push   ebx
  411389:	lea    esp,[edi+0x7b]
  41138c:	aad    0x3c
  41138e:	jnp    0x411388
  411390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411391:	push   cs
  411392:	lods   al,BYTE PTR ds:[esi]
  411393:	cmp    al,0xd2
  411395:	aaa    
  411396:	ins    DWORD PTR es:[edi],dx
  411397:	sub    ebx,edx
  411399:	push   0xa95fa34c
  41139e:	(bad)
  4113a2:	pop    eax
  4113a3:	ud2    
  4113a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113a6:	sbb    esp,DWORD PTR [edi+0x6a]
  4113a9:	pop    edx
  4113aa:	pop    edx
  4113ab:	cld    
  4113ac:	pop    es
  4113ad:	add    dl,BYTE PTR [ebp+0x7fb4ecb3]
  4113b3:	test   DWORD PTR [esi+0x1a4c5649],esp
  4113b9:	mov    eax,0x6a399c5f
  4113be:	(bad)  
  4113bf:	repz dec eax
  4113c1:	loope  0x4113dd
  4113c3:	cs jo  0x411351
  4113c6:	xchg   BYTE PTR [ecx-0x5a1dae3f],dl
  4113cc:	inc    ecx
  4113cd:	fcmovu st,st(6)
  4113cf:	jmp    0x41136b
  4113d1:	rcr    DWORD PTR [edx],1
  4113d3:	enter  0x3aaa,0xf4
  4113d7:	mov    edx,ds
  4113d9:	not    al
  4113db:	mov    esp,0x37f08e51
  4113e0:	nop
  4113e1:	xor    DWORD PTR [ebx],edi
  4113e3:	ja     0x411448
  4113e5:	outs   dx,BYTE PTR ds:[esi]
  4113e6:	jl     0x4113aa
  4113e8:	and    eax,0xe6fa0ecf
  4113ed:	cwde   
  4113ee:	and    eax,0xd4549df3
  4113f3:	in     al,dx
  4113f4:	dec    ebx
  4113f5:	fld    QWORD PTR fs:[ecx-0x53f82977]
  4113fc:	bound  ecx,QWORD PTR [ebx]
  4113fe:	sbb    eax,0x5516f131
  411403:	jg     0x4113ba
  411405:	nop
  411406:	stos   DWORD PTR es:[edi],eax
  411407:	bound  ebx,QWORD PTR [ebx+0x0]
  41140a:	dec    esi
  41140b:	leave  
  41140c:	mov    ah,0xed
  41140e:	and    al,0xe5
  411410:	mov    edx,0x9c76d70
  411415:	mov    cl,0x93
  411417:	push   edx
  411418:	xchg   edi,eax
  411419:	or     eax,0x8e9c6276
  41141e:	cmp    eax,0xc30ac2e9
  411423:	leave  
  411424:	outs   dx,DWORD PTR ds:[esi]
  411425:	(bad)
  411428:	and    esp,DWORD PTR [ebx+ebx*1-0x7b]
  41142c:	pop    ebp
  41142d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41142e:	xchg   esi,eax
  41142f:	inc    ebx
  411430:	icebp  
  411431:	out    dx,eax
  411432:	inc    ebx
  411433:	int    0xaf
  411435:	and    DWORD PTR [edx+0x64021e66],ecx
  41143b:	loop   0x411451
  41143d:	(bad)  
  41143e:	and    esi,eax
  411440:	test   DWORD PTR [bx-0x66],esi
  411444:	data16 cld 
  411446:	leave  
  411447:	dec    esi
  411448:	pop    ds
  411449:	jp     0x4113f1
  41144b:	sub    eax,0x6afd13ad
  411450:	outs   dx,BYTE PTR ds:[esi]
  411451:	scas   al,BYTE PTR es:[edi]
  411452:	bound  edi,QWORD PTR [edx+0x67a38692]
  411458:	jno    0x411405
  41145a:	pushf  
  41145b:	popf   
  41145c:	outs   dx,DWORD PTR ds:[esi]
  41145d:	mov    ebp,0x3516f517
  411462:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  411464:	es in  eax,0x27
  411467:	xor    bh,BYTE PTR [esi+0x746d3657]
  41146d:	and    al,0x2e
  41146f:	fcomp  DWORD PTR [ebx]
  411471:	dec    esp
  411472:	mov    esp,0xa030bf60
  411477:	cmc    
  411478:	jnp    0x411478
  41147a:	dec    ecx
  41147b:	arpl   WORD PTR [ecx+0x41],sp
  41147e:	mov    bl,0xa2
  411480:	mov    cl,0x51
  411482:	pop    ecx
  411483:	retf   0x8109
  411486:	(bad)  
  411487:	sub    eax,0xdf1ca94d
  41148c:	ja     0x4114d3
  41148e:	retf   0x5763
  411491:	or     al,0xa
  411493:	dec    esp
  411494:	popa   
  411495:	icebp  
  411496:	sbb    BYTE PTR ds:0x7b84da3c,bl
  41149c:	rcl    BYTE PTR [edx-0x32],1
  41149f:	pop    esi
  4114a0:	aam    0xa7
  4114a2:	mov    ah,0xe1
  4114a4:	or     DWORD PTR [ebp-0x43f9e7b],edx
  4114aa:	push   0x9b3a6595
  4114af:	sbb    BYTE PTR [esi],ah
  4114b1:	xor    eax,0xfc279a2f
  4114b6:	wbinvd 
  4114b8:	fldcw  WORD PTR [edi-0x23]
  4114bb:	stos   DWORD PTR es:[edi],eax
  4114bc:	xchg   esp,eax
  4114bd:	loopne 0x4114eb
  4114bf:	rcl    DWORD PTR [ecx-0x2d4c2e1e],cl
  4114c5:	jns    0x4114e7
  4114c7:	mov    ds:0x9af36e54,eax
  4114cc:	in     al,0x16
  4114ce:	dec    ebp
  4114cf:	ror    DWORD PTR [edi+eax*2-0x35],cl
  4114d3:	addr16 hlt 
  4114d5:	inc    ecx
  4114d6:	fcmovbe st,st(4)
  4114d8:	out    0x9a,eax
  4114da:	das    
  4114db:	xor    dh,BYTE PTR [ebx-0x78]
  4114de:	pusha  
  4114df:	adc    ebx,0xe845c3f4
  4114e5:	adc    cl,BYTE PTR [ebp+0x27b66a66]
  4114eb:	push   ebx
  4114ec:	xor    esp,DWORD PTR [eax]
  4114ee:	pushf  
  4114ef:	or     ah,BYTE PTR [edi+edx*2-0x5f4fa1b5]
  4114f6:	neg    BYTE PTR [eax]
  4114f8:	call   0xe3642bc3
  4114fd:	test   BYTE PTR gs:[edi+0x4e],dh
  411501:	es leave 
  411503:	push   edi
  411504:	sub    dl,cl
  411506:	sbb    al,0xeb
  411508:	icebp  
  411509:	inc    ecx
  41150a:	test   al,0xe0
  41150d:	push   esi
  41150e:	dec    ecx
  41150f:	and    BYTE PTR [esp+edx*1],al
  411512:	aad    0x5b
  411514:	cmp    cl,BYTE PTR [edi+0x7ee2e23d]
  41151a:	sbb    DWORD PTR cs:[edx+0x16b7c286],ebx
  411521:	std    
  411522:	mov    esi,0x2ed1df63
  411527:	mov    al,ds:0xcbb311fc
  41152c:	(bad)
  41152f:	out    0xe,al
  411531:	cs mov edx,0xb1fa33a9
  411537:	xchg   edi,eax
  411538:	xchg   edx,eax
  411539:	or     ch,0x60
  41153c:	sbb    DWORD PTR [ecx-0x6b4c00a8],0x78
  411543:	push   es
  411544:	sub    BYTE PTR [edi-0x212444be],bl
  41154a:	rol    DWORD PTR [eax-0x4930af2d],0x7a
  411551:	cmp    eax,0x3fffc61e
  411556:	lock jp 0x4115b3
  411559:	out    dx,al
  41155a:	retf   
  41155b:	adc    ebp,DWORD PTR [ebp+0x26]
  41155e:	outs   dx,DWORD PTR ds:[esi]
  41155f:	fstp   QWORD PTR [ecx-0x6067a651]
  411565:	lods   eax,DWORD PTR ds:[esi]
  411566:	dec    edi
  411567:	add    eax,DWORD PTR [ebx+0x3c]
  41156a:	push   ss
  41156b:	icebp  
  41156c:	adc    dh,dh
  41156e:	in     eax,0x8e
  411570:	sbb    al,0x77
  411572:	lods   al,BYTE PTR ss:[esi]
  411574:	call   0xc55c83e2
  411579:	popf   
  41157a:	pop    ds
  41157b:	add    DWORD PTR [ecx],0x5c6000ca
  411581:	iret   
  411582:	add    DWORD PTR [ebp+0x2888141b],ebp
  411588:	mov    esp,0xd018675
  41158d:	push   ds
  41158e:	pusha  
  41158f:	mov    ebx,0xb7c3a8cf
  411594:	enter  0x4aa8,0x90
  411598:	add    ch,BYTE PTR [ebx+0x69]
  41159b:	adc    eax,DWORD PTR [ecx-0x32fca3c]
  4115a1:	rcl    DWORD PTR [ebx+0x72],0xea
  4115a5:	call   0x57d7:0xb5fd4ad5
  4115ac:	ret    0x825f
  4115af:	retf   
  4115b0:	in     al,0x25
  4115b2:	mov    WORD PTR [ebp-0x51],gs
  4115b5:	popa   
  4115b6:	loop   0x411549
  4115b8:	loop   0x41160a
  4115ba:	pop    edx
  4115bb:	add    ebp,esi
  4115bd:	loopne 0x4115b4
  4115bf:	rcl    DWORD PTR [edx+0x6e010d35],0xdb
  4115c6:	stos   DWORD PTR es:[edi],eax
  4115c7:	dec    esi
  4115c8:	stos   BYTE PTR es:[edi],al
  4115c9:	pop    esi
  4115ca:	xchg   esi,eax
  4115cb:	mov    ah,0xf5
  4115cd:	mov    ds:0x672769bd,al
  4115d2:	jmp    0x4115dc
  4115d4:	add    ch,BYTE PTR [ecx]
  4115d6:	mov    cl,0x2f
  4115d8:	lock imul edx,DWORD PTR [eax],0xffffffbc
  4115dc:	aas    
  4115dd:	fbld   TBYTE PTR [edi+ebx*2]
  4115e0:	hlt    
  4115e1:	cmp    BYTE PTR [ebx],bh
  4115e3:	bswap  esp
  4115e5:	push   ecx
  4115e6:	int    0x6f
  4115e8:	jae    0x4115d8
  4115ea:	xchg   ecx,eax
  4115eb:	xchg   DWORD PTR [edx],ebp
  4115ed:	mov    cl,0x77
  4115ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115f0:	mov    esi,edx
  4115f2:	stos   BYTE PTR es:[edi],al
  4115f3:	stc    
  4115f4:	pop    ebp
  4115f5:	cmp    BYTE PTR [ecx-0x4a8d922c],al
  4115fb:	jp     0x411610
  4115fd:	call   FWORD PTR [edi]
  4115ff:	add    DWORD PTR [edi+ebp*4+0x1c],esp
  411603:	test   dh,0x2d
  411606:	call   0x11f3b70
  41160b:	jmp    0x4bb0c7df
  411610:	adc    bl,BYTE PTR [esi-0x6f]
  411613:	jnp    0x411645
  411615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411616:	daa    
  411617:	push   es
  411618:	ror    DWORD PTR [ebx-0x640ded7a],1
  41161e:	aam    0x43
  411620:	dec    ebx
  411621:	jb     0x411644
  411623:	sbb    al,0xca
  411625:	pop    es
  411626:	js     0x4115f3
  411628:	mov    BYTE PTR [edi+esi*2],ah
  41162b:	sbb    bl,dl
  41162d:	dec    eax
  41162e:	mov    ebp,0x2c9833e0
  411633:	ss (bad) 
  411635:	mul    DWORD PTR [ebx+eax*8-0x53]
  411639:	sbb    eax,0xacd72297
  41163e:	push   ds
  41163f:	and    cl,dh
  411641:	xchg   esi,eax
  411642:	mov    edi,0xd46f73e9
  411647:	std    
  411648:	adc    eax,0xe9326da7
  41164d:	pop    esp
  41164e:	sub    BYTE PTR [edx+0x78ab7dac],0xc5
  411655:	fiadd  WORD PTR [edx]
  411657:	adc    eax,0x2db6d2bf
  41165c:	and    eax,0xbb0098df
  411661:	ins    BYTE PTR es:[edi],dx
  411662:	les    esp,FWORD PTR [eax-0x297452b7]
  411668:	cmc    
  411669:	jnp    0x411638
  41166b:	add    al,0x25
  41166d:	or     al,0x90
  41166f:	jnp    0x41162f
  411671:	mov    esp,DWORD PTR [edx+ecx*4-0x7be1c0fc]
  411678:	pop    ecx
  411679:	mov    eax,0x49af1128
  41167e:	and    eax,0x2cc23668
  411683:	fldenv [edi+0x36e8ce6b]
  411689:	push   ebx
  41168a:	pop    esp
  41168b:	clc    
  41168c:	cmp    bl,BYTE PTR [edi-0x6cee03d]
  411692:	cmp    bl,al
  411694:	out    dx,eax
  411695:	sbb    eax,ecx
  411697:	(bad)  
  411698:	cmp    eax,0x67415078
  41169d:	imul   esi,eax,0x2a
  4116a0:	xor    cl,BYTE PTR [edx+0x2]
  4116a3:	jbe    0x4116d7
  4116a5:	adc    eax,0x98e7d9bf
  4116aa:	cmp    al,0x7d
  4116ac:	sbb    esp,DWORD PTR [ecx+0x4]
  4116af:	and    dl,BYTE PTR [ebp-0x54b53b29]
  4116b5:	cdq    
  4116b6:	sbb    edx,DWORD PTR [eax+0x79]
  4116b9:	dec    ebp
  4116ba:	shr    DWORD PTR [ecx+edx*2],1
  4116bd:	imul   ebp,DWORD PTR [esi+ebp*4],0xffffff82
  4116c1:	sub    edi,DWORD PTR [ebx]
  4116c3:	pop    ds
  4116c4:	into   
  4116c5:	and    DWORD PTR [ebx+0x6a],edx
  4116c8:	arpl   WORD PTR [ecx-0x3a],bp
  4116cb:	outs   dx,BYTE PTR ds:[esi]
  4116cc:	pop    ss
  4116cd:	aaa    
  4116ce:	jne    0x411702
  4116d0:	mov    esp,0x306c875
  4116d5:	add    eax,0x53fe7693
  4116da:	cmc    
  4116db:	xor    ebx,DWORD PTR [ebp-0x49]
  4116de:	mov    esp,0xf474bf25
  4116e3:	jl     0x4116f6
  4116e5:	mov    dl,ch
  4116e7:	push   cs
  4116e8:	adc    edx,DWORD PTR [edx-0x36]
  4116eb:	add    DWORD PTR [ebp+0x6f306cac],esp
  4116f1:	jmp    0x41176b
  4116f3:	jnp    0x41168e
  4116f5:	(bad)  
  4116f6:	cld    
  4116f7:	add    eax,0xd3c40e1d
  4116fc:	test   BYTE PTR [edi-0xa29ac9c],cl
  411702:	and    bl,ch
  411704:	dec    esi
  411705:	mov    esi,DWORD PTR [edx-0x4a]
  411708:	inc    eax
  411709:	cwde   
  41170a:	stc    
  41170b:	pop    esp
  41170c:	xchg   ebp,eax
  41170d:	add    eax,0x4c413ae3
  411712:	xlat   BYTE PTR ds:[ebx]
  411713:	sahf   
  411714:	cwde   
  411715:	cmc    
  411716:	fs xchg ebx,eax
  411718:	push   eax
  411719:	je     0x4116fc
  41171b:	in     al,dx
  41171c:	bound  eax,QWORD PTR [ebp+0x24]
  41171f:	xor    bl,0x63
  411722:	out    0xbe,eax
  411724:	pop    ds
  411725:	and    al,0xe
  411727:	jmp    0x2912099d
  41172c:	sar    DWORD PTR [esi],cl
  41172e:	mov    dl,0x19
  411730:	and    BYTE PTR [esi],bl
  411732:	push   0x6846d8b
  411737:	dec    esp
  411738:	test   eax,0xa0b2af80
  41173d:	inc    edi
  41173e:	outs   dx,BYTE PTR ds:[esi]
  41173f:	xchg   BYTE PTR [esi-0x52],dh
  411742:	xchg   ebp,eax
  411743:	inc    DWORD PTR [eax]
  411745:	(bad)  
  411746:	mov    ch,BYTE PTR fs:[ebx+0x23444e2d]
  41174d:	adc    bp,WORD PTR [eax-0x4b]
  411751:	adc    DWORD PTR [ebp-0x3bd85310],esi
  411757:	cmp    al,0xd3
  411759:	dec    edx
  41175a:	not    DWORD PTR [edx+0x7a]
  41175d:	out    dx,eax
  41175e:	jo     0x4117bf
  411760:	or     eax,0x4ec02546
  411765:	daa    
  411766:	mov    dh,0xef
  411768:	dec    edx
  411769:	mov    ah,al
  41176b:	xchg   al,bl
  41176d:	and    bh,ch
  41176f:	jo     0x41172a
  411771:	inc    eax
  411772:	xchg   esp,eax
  411773:	cmp    esp,DWORD PTR [eax]
  411775:	neg    edi
  411777:	bound  ebp,QWORD PTR [eax+0x6]
  41177a:	and    DWORD PTR [eax+0x6e],edi
  41177d:	out    0x90,eax
  41177f:	ins    DWORD PTR es:[edi],dx
  411780:	jle    0x41175e
  411782:	fadd   DWORD PTR [edi]
  411784:	jns    0x411732
  411786:	mov    dl,0x30
  411788:	push   es
  411789:	into   
  41178a:	adc    bl,BYTE PTR [eax+esi*8+0x3a]
  41178e:	cwde   
  41178f:	jp     0x41176e
  411791:	je     0x41173f
  411793:	out    dx,al
  411794:	out    0x81,al
  411796:	lock mov edx,0x2e630aa5
  41179c:	mov    ah,BYTE PTR [ebp+0xb80a328]
  4117a2:	or     BYTE PTR [ecx],0x3e
  4117a5:	cmp    DWORD PTR [ebx+ebp*4-0x2e269f9f],ebp
  4117ac:	xor    edx,DWORD PTR [ecx-0x77]
  4117af:	loop   0x4117a0
  4117b1:	mov    al,0xb
  4117b3:	test   eax,0x6dedfd7b
  4117b8:	and    DWORD PTR [edi+0x78367413],eax
  4117be:	and    BYTE PTR [edi+0x60],ah
  4117c1:	mov    bl,0x12
  4117c3:	or     esi,edx
  4117c5:	arpl   ax,bx
  4117c7:	sbb    esi,DWORD PTR ds:0xb321d2c9
  4117cd:	rol    DWORD PTR [esi],cl
  4117cf:	scas   eax,DWORD PTR es:[edi]
  4117d0:	mov    WORD PTR [edi],fs
  4117d2:	sbb    edx,esi
  4117d4:	ins    BYTE PTR es:[edi],dx
  4117d5:	dec    ecx
  4117d6:	sub    ecx,DWORD PTR ds:0xdf9766d3
  4117dc:	call   0x66b0:0xb5dea348
  4117e3:	lea    eax,[ebp+0x3907da7a]
  4117e9:	and    al,bh
  4117eb:	mov    edx,0xb4116364
  4117f0:	repnz or eax,0xe928bfd8
  4117f6:	mov    ch,0xd4
  4117f8:	stos   BYTE PTR es:[edi],al
  4117f9:	cmc    
  4117fa:	shl    DWORD PTR [edi],cl
  4117fc:	sub    DWORD PTR [ecx+0x34],0xffffffce
  411800:	into   
  411801:	call   0x872cefce
  411806:	into   
  411807:	clc    
  411808:	mov    dh,dl
  41180a:	sub    ebp,DWORD PTR [edx-0x116cf0af]
  411810:	cmp    al,0xaa
  411812:	dec    eax
  411813:	push   0x53
  411815:	jne    0x4117b1
  411817:	mov    al,ds:0x9d302f3b
  41181c:	mov    es,ecx
  41181e:	jbe    0x4117ce
  411820:	lods   al,BYTE PTR ds:[esi]
  411821:	mov    ds:0x816c6fbf,al
  411826:	dec    ecx
  411827:	jmp    0x4117ea
  411829:	int3   
  41182a:	mov    esp,0x1a37afe6
  41182f:	mov    ds:0x3ea305e,eax
  411834:	sahf   
  411835:	das    
  411836:	mov    al,ds:0x42170176
  41183b:	(bad)  
  41183c:	mul    ebx
  41183e:	(bad)  
  41183f:	out    0xf,al
  411841:	mov    al,0xf2
  411843:	adc    DWORD PTR [eax],eax
  411845:	mov    edx,0xdb30bea
  41184a:	in     eax,dx
  41184b:	jbe    0x41184f
  41184d:	inc    edi
  41184e:	xor    DWORD PTR [edi],esp
  411850:	aam    0xe3
  411852:	fdiv   DWORD PTR [ebp+0x8e53cd]
  411858:	mov    cl,0x89
  41185a:	stos   BYTE PTR es:[edi],al
  41185b:	enter  0xe4a6,0x90
  41185f:	add    eax,0x5081d088
  411864:	popa   
  411865:	dec    edi
  411866:	lods   eax,DWORD PTR ds:[esi]
  411867:	mul    BYTE PTR ds:0xfa2feaf1
  41186d:	sub    BYTE PTR [ecx+0x14f276e4],dh
  411873:	fsub   DWORD PTR [ebx]
  411875:	mov    ds:0x20b81ef2,eax
  41187a:	dec    ebx
  41187b:	xor    edi,DWORD PTR [edi+0x13bcc305]
  411881:	or     al,0x98
  411883:	jle    0x411824
  411885:	sub    dh,BYTE PTR [ecx+0x3]
  411888:	popf   
  411889:	inc    ebp
  41188a:	mov    ch,0x60
  41188c:	call   0xadc3:0xdf1b4494
  411893:	sti    
  411894:	imul   esp,DWORD PTR ds:0x1ea27cec,0xd836151a
  41189e:	sbb    al,0xc7
  4118a0:	in     eax,0x1a
  4118a2:	xchg   ebx,eax
  4118a3:	es inc esp
  4118a5:	push   edx
  4118a6:	stc    
  4118a7:	mov    ds:0xf9786c81,al
  4118ac:	cmp    eax,0x26113f11
  4118b1:	dec    eax
  4118b2:	imul   ecx,edx,0xb72b8cdf
  4118b8:	fbstp  TBYTE PTR [eax+0x1a]
  4118bb:	add    eax,0xb8ca9338
  4118c0:	mov    eax,0x851134bc
  4118c5:	sbb    dl,BYTE PTR [esi+eax*4-0x1b711d69]
  4118cc:	test   BYTE PTR [edi+0x68],dh
  4118cf:	sahf   
  4118d0:	lock sub ah,BYTE PTR [edi-0x2b313bb4]
  4118d7:	lahf   
  4118d8:	sbb    DWORD PTR [ecx+ebp*1-0x2ccee0fc],edi
  4118df:	daa    
  4118e0:	jb     0x4118ec
  4118e2:	sub    ch,bh
  4118e4:	xchg   DWORD PTR [ebx-0x57a19767],edi
  4118ea:	fdiv   DWORD PTR [ecx+0x760506a5]
  4118f0:	std    
  4118f1:	add    cl,BYTE PTR [edx]
  4118f3:	push   es
  4118f4:	mov    ecx,0x6e49fa38
  4118fa:	xchg   edi,eax
  4118fb:	adc    DWORD PTR [ecx],esi
  4118fd:	in     al,dx
  4118fe:	retf   0x3a78
  411901:	hlt    
  411902:	mov    ds:0x4bd3b732,eax
  411907:	pop    ss
  411908:	ja     0x411951
  41190a:	xchg   esi,eax
  41190b:	add    DWORD PTR [ecx-0x54],esi
  41190e:	jg     0x41190e
  411910:	sub    eax,0x581670c8
  411915:	sub    eax,esp
  411917:	imul   ecx,DWORD PTR [ebp+0x6b],0x40
  41191b:	js     0x4118d3
  41191d:	lock (bad) 
  41191f:	mov    edi,0xf269c3ce
  411924:	fst    DWORD PTR [eax-0xb]
  411927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411928:	jp     0x411971
  41192a:	adc    BYTE PTR [esi],al
  41192c:	cmp    DWORD PTR [edx],ebx
  41192e:	stos   BYTE PTR es:[edi],al
  41192f:	nop
  411930:	and    esi,DWORD PTR [ebx+ebx*2]
  411933:	lods   al,BYTE PTR ds:[esi]
  411934:	jae    0x4118e7
  411936:	sbb    esi,DWORD PTR [edi-0x267b3128]
  41193c:	lock xchg ecx,eax
  41193e:	into   
  41193f:	out    dx,al
  411940:	sub    BYTE PTR [ebx+0x31115238],ah
  411946:	call   0x5c67:0x495320d9
  41194d:	loop   0x4118ec
  41194f:	sbb    ebx,eax
  411951:	(bad)  
  411952:	scas   al,BYTE PTR es:[edi]
  411953:	mov    fs,WORD PTR [esi+ebp*4-0x70c01555]
  41195a:	ds stos BYTE PTR es:[edi],al
  41195c:	mov    esp,0xedf0c50e
  411961:	mov    eax,ebx
  411963:	shr    BYTE PTR [edx+0x6c],0x9c
  411967:	sbb    eax,DWORD PTR [esi+ebp*2-0x3e]
  41196b:	out    0x67,al
  41196d:	loope  0x4119bf
  41196f:	jle    0x4119d9
  411971:	call   0xdbfcab6f
  411976:	js     0x411980
  411978:	sub    DWORD PTR [eax-0x1d],edi
  41197b:	xchg   ebx,eax
  41197c:	stos   DWORD PTR es:[edi],eax
  41197d:	leave  
  41197e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41197f:	retf   0xce56
  411982:	clc    
  411983:	cmp    bh,BYTE PTR [ecx+0x3]
  411986:	out    0xc1,eax
  411988:	dec    ebx
  411989:	pop    ecx
  41198a:	gs adc esi,esp
  41198d:	mov    ah,0x1d
  41198f:	(bad)  
  411990:	ret    
  411991:	or     bh,cl
  411993:	jmp    0x411993
  411995:	fwait
  411996:	xor    DWORD PTR [edx-0x42bef0a6],ecx
  41199c:	adc    al,0x8a
  41199e:	xchg   edx,eax
  41199f:	mov    ecx,DWORD PTR [ebx+0x0]
  4119a2:	scas   eax,DWORD PTR es:[edi]
  4119a3:	je     0x4119af
  4119a5:	clc    
  4119a6:	test   eax,0x6141bf4b
  4119ab:	call   0x2455:0x85ca0dc2
  4119b2:	fimul  DWORD PTR [eax-0x4e7d8bbf]
  4119b8:	and    eax,0x6ef36e48
  4119bd:	jp     0x411978
  4119bf:	pop    ecx
  4119c0:	inc    esp
  4119c1:	xchg   ebp,eax
  4119c2:	inc    eax
  4119c3:	or     eax,DWORD PTR [edi-0x68]
  4119c6:	dec    edx
  4119c7:	(bad)  
  4119c8:	in     al,dx
  4119c9:	pop    eax
  4119ca:	xor    DWORD PTR [edx-0x4e],ebp
  4119cd:	mov    eax,ds:0x3bf3a35a
  4119d2:	(bad)  
  4119d4:	sbb    BYTE PTR [edi+esi*8-0x17],ah
  4119d8:	mov    ebp,0xd51c6d0b
  4119dd:	gs ss cmp edi,esp
  4119e1:	mov    ah,0x7a
  4119e3:	mov    edx,DWORD PTR [eax-0x4a23211a]
  4119e9:	or     al,0x41
  4119eb:	push   esp
  4119ec:	xchg   edx,eax
  4119ed:	rcl    DWORD PTR [bx-0xa9b],1
  4119f2:	fs mov bh,0xb7
  4119f5:	leave  
  4119f6:	sub    bh,BYTE PTR [ebx-0x13]
  4119f9:	xor    DWORD PTR [edx+0x5f96234f],esi
  4119ff:	cmp    eax,0x728ab3fc
  411a04:	iret   
  411a05:	cmp    cl,BYTE PTR [esi+0x1be1daa9]
  411a0b:	sbb    DWORD PTR [eax-0x17],ecx
  411a0e:	dec    ebx
  411a0f:	out    dx,eax
  411a10:	add    al,0xa4
  411a12:	call   0x2656:0xdb234d9
  411a19:	pop    ebx
  411a1a:	sbb    eax,0xd96a37f1
  411a1f:	mov    edx,0x9c871d76
  411a24:	dec    edx
  411a25:	mov    edx,0xbaa30a8
  411a2a:	mov    eax,0x5c7b2ee7
  411a2f:	sbb    eax,0x3c08a41a
  411a34:	lods   eax,DWORD PTR ds:[esi]
  411a35:	add    al,0x2a
  411a37:	jmp    DWORD PTR [edx-0x304d83bc]
  411a3d:	jo     0x411a5e
  411a3f:	mov    bl,0xe5
  411a41:	add    ah,dl
  411a43:	bound  ebp,QWORD PTR [esi-0x1a]
  411a46:	(bad)  
  411a47:	jg     0x411a82
  411a49:	lods   al,BYTE PTR ds:[esi]
  411a4a:	and    ebp,DWORD PTR [ebx+0x65]
  411a4d:	mov    ds:0x9682ab6d,eax
  411a52:	lahf   
  411a53:	jge    0x4119d5
  411a55:	jbe    0x411a74
  411a57:	mov    bh,0x10
  411a59:	mov    ah,0xc1
  411a5b:	out    0x13,eax
  411a5d:	gs xchg edi,eax
  411a5f:	clc    
  411a60:	xchg   esi,eax
  411a61:	sub    dh,al
  411a63:	push   cs
  411a64:	pop    eax
  411a65:	mov    ch,0x12
  411a67:	scas   al,BYTE PTR es:[edi]
  411a68:	ror    DWORD PTR [eax-0x3],0x78
  411a6c:	mov    cl,0x47
  411a6e:	mov    ds:0x59390aa7,al
  411a73:	jecxz  0x411a80
  411a75:	mov    bl,BYTE PTR [edx]
  411a77:	dec    ebx
  411a78:	iret   
  411a79:	(bad)  [edi+0x19bbda11]
  411a7f:	jns    0x411a33
  411a81:	jmp    0x62aa498f
  411a86:	(bad)  
  411a88:	gs pop ss
  411a8a:	(bad)  
  411a8b:	addr16 (bad) 
  411a8e:	test   eax,0xf87d2bba
  411a93:	enter  0xa92d,0x92
  411a97:	stc    
  411a98:	fwait
  411a99:	lock mov ds:0xee0cb097,eax
  411a9f:	dec    ecx
  411aa0:	dec    esi
  411aa1:	in     eax,0xfd
  411aa3:	push   0xffffffc1
  411aa5:	mov    ds:0x71a12421,al
  411aaa:	xlat   BYTE PTR ds:[ebx]
  411aab:	mov    eax,ds:0x40d8eb0b
  411ab0:	add    DWORD PTR [edi+0x7],esi
  411ab3:	adc    BYTE PTR [edi+0x48a7db3],bl
  411ab9:	rol    BYTE PTR [eax],0x28
  411abc:	repnz mov BYTE PTR [edi],bh
  411abf:	mov    ds:0xb7eb7b0f,eax
  411ac4:	cli    
  411ac5:	dec    ecx
  411ac6:	cli    
  411ac7:	dec    edx
  411ac8:	in     eax,dx
  411ac9:	rcr    BYTE PTR [ecx+0x55],0x15
  411acd:	push   0x14
  411acf:	popa   
  411ad0:	mov    eax,0xdd98ccf2
  411ad5:	adc    eax,0x7fef7ac5
  411ada:	fwait
  411adb:	or     eax,0x99efb8a0
  411ae0:	mov    dh,0x8f
  411ae2:	rol    ah,0xb4
  411ae5:	mov    dl,0x4f
  411ae7:	push   ebx
  411ae8:	mov    esp,0x118c033
  411aed:	or     BYTE PTR [ebx+0x2c744cb3],bl
  411af3:	sbb    ch,ch
  411af5:	push   ebp
  411af6:	push   ss
  411af7:	or     eax,0x3e8a6d29
  411afc:	dec    edi
  411afd:	aad    0xad
  411aff:	dec    edx
  411b00:	mov    dh,BYTE PTR [eax-0x2e816753]
  411b06:	inc    edi
  411b07:	aaa    
  411b08:	shl    DWORD PTR [eax+eiz*4+0x54138d09],0x31
  411b10:	repz (bad) 
  411b12:	mov    dl,0x6c
  411b14:	push   es
  411b15:	inc    BYTE PTR [ebp+0x4c]
  411b18:	sbb    al,0xcf
  411b1a:	loope  0x411af0
  411b1c:	mov    DWORD PTR [ebx],ebx
  411b1e:	inc    edi
  411b1f:	sub    DWORD PTR [edx],0x7
  411b22:	inc    esp
  411b23:	call   0x458b04a5
  411b28:	sbb    dl,bl
  411b2a:	cmp    ebx,0xfffffffb
  411b2d:	lock add eax,DWORD PTR [esi-0x63]
  411b31:	cmp    bh,BYTE PTR [esi+0x7d5d601f]
  411b37:	push   ds
  411b38:	push   esp
  411b39:	jne    0x411b55
  411b3b:	sbb    al,0xa
  411b3d:	xchg   ebp,eax
  411b3e:	dec    esi
  411b3f:	scas   al,BYTE PTR es:[edi]
  411b40:	adc    DWORD PTR [esp+esi*8],ecx
  411b43:	fdivp  st(3),st
  411b45:	mov    ebx,0x71b185f6
  411b4a:	pop    eax
  411b4b:	pop    esi
  411b4c:	xchg   DWORD PTR [eax],esi
  411b4e:	fsub   QWORD PTR [eax+0x16]
  411b51:	mov    bh,0xba
  411b54:	jl     0x411bbb
  411b56:	fmul   st,st(0)
  411b58:	pop    edi
  411b59:	push   0xffffff97
  411b5b:	jne    0x411b02
  411b5d:	fisttp WORD PTR [esi+0x49ffabab]
  411b63:	out    dx,eax
  411b64:	ror    DWORD PTR [eax+0x8],cl
  411b67:	xchg   ch,ah
  411b69:	in     al,0x36
  411b6b:	sub    al,0x4b
  411b6d:	arpl   si,si
  411b6f:	jne    0x411bb1
  411b71:	cmc    
  411b72:	aam    0x1c
  411b74:	and    eax,0x4d176dfd
  411b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b7a:	ins    DWORD PTR es:[edi],dx
  411b7b:	lahf   
  411b7c:	push   ebx
  411b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b7e:	leave  
  411b7f:	sahf   
  411b80:	out    0xc4,eax
  411b82:	inc    edx
  411b83:	or     esp,esi
  411b85:	xchg   BYTE PTR [edx],bl
  411b87:	inc    edx
  411b88:	pop    es
  411b89:	sahf   
  411b8a:	xchg   ebp,eax
  411b8b:	fisubr WORD PTR ds:0xe450417
  411b91:	jbe    0x411bf0
  411b93:	imul   esi,DWORD PTR [esi+0x47],0x3e0a7aa3
  411b9a:	hlt    
  411b9b:	fs and al,0x6f
  411b9e:	dec    esp
  411b9f:	shl    DWORD PTR [esi+0x5fff5b8f],1
  411ba5:	inc    ecx
  411ba6:	pop    esp
  411ba7:	call   0x32490642
  411bac:	test   al,0x49
  411bae:	outs   dx,BYTE PTR ds:[esi]
  411baf:	in     eax,0x17
  411bb1:	retf   
  411bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bb3:	sub    cl,al
  411bb5:	or     ah,al
  411bb7:	pop    ss
  411bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb9:	cmp    DWORD PTR [edx-0x2de1c540],esi
  411bbf:	imul   eax,ecx,0x40
  411bc2:	stos   DWORD PTR es:[edi],eax
  411bc3:	and    ebx,DWORD PTR [esi+ebx*4+0x6e]
  411bc7:	and    edx,DWORD PTR [eax-0x630a3f60]
  411bcd:	pop    esp
  411bce:	sbb    ebx,DWORD PTR ds:0xc564bfe3
  411bd4:	push   ecx
  411bd5:	out    dx,al
  411bd6:	mov    bl,0xe5
  411bd8:	in     eax,dx
  411bd9:	cdq    
  411bda:	test   DWORD PTR [edi+ebx*8-0x3a],0xdfc5d023
  411be2:	mov    DWORD PTR ds:0x54777912,ecx
  411be8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  411bea:	imul   ebp,DWORD PTR [edi+0x1b],0x41e464a0
  411bf1:	call   0x3e97acdf
  411bf6:	cs hlt 
  411bf8:	(bad)  
  411bf9:	mov    cs,WORD PTR [esi+0x1c]
  411bfc:	mov    ch,0xd1
  411bfe:	js     0x411bad
  411c00:	inc    esp
  411c01:	mov    edi,0x2167872
  411c06:	imul   ecx,DWORD PTR [edx],0xc30bceea
  411c0c:	retf   
  411c0d:	into   
  411c0e:	pop    edx
  411c0f:	xchg   BYTE PTR [esi-0x38],bh
  411c12:	dec    ebp
  411c13:	adc    BYTE PTR [edx-0xa],0x1c
  411c17:	mov    dl,0xc1
  411c19:	psadbw mm5,QWORD PTR [ebx+0x192bc817]
  411c20:	adc    BYTE PTR [ecx+0x42fe891c],ah
  411c26:	outs   dx,BYTE PTR ds:[esi]
  411c27:	mov    esp,0xa38a309b
  411c2c:	push   eax
  411c2d:	adc    bh,dh
  411c2f:	sub    esi,DWORD PTR ds:0xa3f96184
  411c35:	dec    edi
  411c36:	xor    dh,dl
  411c38:	or     bh,BYTE PTR [edi+0x47]
  411c3b:	xchg   edi,eax
  411c3c:	pusha  
  411c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c3e:	push   esp
  411c3f:	mov    DWORD PTR [edx],eax
  411c41:	add    al,0x6
  411c43:	into   
  411c44:	pop    ecx
  411c45:	fsub   QWORD PTR [esp+eax*4+0x66]
  411c49:	retf   
  411c4a:	mov    ebx,0xac6d0c7f
  411c4f:	lahf   
  411c50:	jne    0x411bf7
  411c52:	in     eax,0xc0
  411c54:	mov    al,0x7a
  411c56:	sub    eax,0x834337d6
  411c5b:	dec    edx
  411c5c:	mov    ?,WORD PTR [ecx]
  411c5e:	ins    DWORD PTR es:[edi],dx
  411c5f:	jg     0x411c78
  411c61:	(bad)  
  411c62:	mov    ah,0x2e
  411c64:	fwait
  411c65:	cmp    DWORD PTR [ebx+0xd],esi
  411c68:	pop    edi
  411c69:	add    al,0xea
  411c6b:	push   eax
  411c6c:	rcr    edx,1
  411c6e:	pop    esi
  411c6f:	inc    esp
  411c70:	mov    bh,0x1e
  411c72:	push   es
  411c73:	mov    ds,WORD PTR [eax+0x4d42d74a]
  411c79:	adc    ebp,DWORD PTR [eax]
  411c7b:	repz mov bh,0xfe
  411c7e:	cmc    
  411c7f:	adc    al,BYTE PTR [esi]
  411c81:	xor    cl,bh
  411c83:	lahf   
  411c84:	dec    esp
  411c85:	je     0x411cf7
  411c87:	popa   
  411c88:	in     eax,dx
  411c89:	jbe    0x411ca9
  411c8b:	nop
  411c8c:	outs   dx,DWORD PTR ds:[esi]
  411c8d:	jge    0x411c50
  411c8f:	add    edi,DWORD PTR [ecx]
  411c91:	xchg   esp,eax
  411c92:	push   edx
  411c93:	mov    bh,0x97
  411c95:	call   0x10c766f1
  411c9a:	xchg   ebp,eax
  411c9b:	(bad)  
  411c9c:	in     al,0x70
  411c9e:	xor    bl,BYTE PTR ds:0x82d1ade8
  411ca4:	outs   dx,DWORD PTR ds:[esi]
  411ca5:	xchg   ecx,eax
  411ca6:	fmul   st,st(7)
  411ca8:	or     DWORD PTR [edx-0x16],esp
  411cab:	sbb    bh,BYTE PTR [esi]
  411cad:	push   ecx
  411cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411caf:	cmp    al,0x2c
  411cb1:	retf   0xcb15
  411cb4:	dec    edx
  411cb5:	out    dx,al
  411cb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cb7:	push   es
  411cb8:	(bad)  
  411cb9:	repnz adc bh,cl
  411cbc:	adc    al,0x4
  411cbe:	out    dx,al
  411cbf:	and    DWORD PTR [ecx+0xb],esp
  411cc2:	mov    DWORD PTR [eax],eax
  411cc4:	repz shl DWORD PTR [ebx+ecx*2+0x4b],1
  411cc9:	fdiv   QWORD PTR [edi+0x63]
  411ccc:	aad    0x21
  411cce:	pop    ebp
  411ccf:	jl     0x411d26
  411cd1:	xchg   esp,eax
  411cd2:	rcl    bl,0x28
  411cd5:	jl     0x411d24
  411cd7:	mov    ds:0xd0b862f1,eax
  411cdc:	out    dx,eax
  411cdd:	push   eax
  411cde:	sub    al,0x71
  411ce0:	lock lock dec edi
  411ce3:	std    
  411ce4:	(bad)  [esi-0x19]
  411ce7:	ror    BYTE PTR [ebp-0x28],1
  411cea:	fbstp  TBYTE PTR [ebx]
  411cec:	call   0xf8d8:0x319f3148
  411cf3:	out    0x77,eax
  411cf5:	pop    eax
  411cf6:	setge  BYTE PTR [eax-0x2]
  411cfa:	call   0x57b171dd
  411cff:	aaa    
  411d00:	jmp    0x6ae6e44
  411d05:	inc    eax
  411d06:	imul   ecx,ecx,0x9a0ba44
  411d0c:	ja     0x411caf
  411d0e:	jnp    0x411ca5
  411d10:	push   eax
  411d11:	fs test al,0xf3
  411d14:	imul   ebp,DWORD PTR [eax+0x26a2efa7],0x72e7de9b
  411d1e:	ficomp WORD PTR ds:0xa413da7d
  411d24:	cli    
  411d25:	cdq    
  411d26:	push   es
  411d27:	dec    esi
  411d28:	ds and eax,0xc4355bf9
  411d2e:	sub    al,0xad
  411d30:	push   ebp
  411d31:	mov    esp,0x5243ef44
  411d36:	test   DWORD PTR [esi-0x71],esp
  411d39:	fld    QWORD PTR [esi+0x3d1936cb]
  411d3f:	mov    ah,0xab
  411d41:	or     al,0x3c
  411d43:	adc    esp,ebx
  411d45:	or     DWORD PTR [edi+0x90d3f8e],edx
  411d4b:	fs xchg edi,eax
  411d4d:	cmp    DWORD PTR [eax+0x45],esp
  411d50:	outs   dx,DWORD PTR ds:[esi]
  411d51:	outs   dx,DWORD PTR ds:[esi]
  411d52:	(bad)
  411d55:	cmp    eax,DWORD PTR [ebp-0x56ecccbb]
  411d5b:	cmc    
  411d5c:	es jns 0x411d94
  411d5f:	in     al,0xca
  411d61:	icebp  
  411d62:	test   BYTE PTR [esi],bh
  411d64:	mov    cl,0x6e
  411d66:	push   edx
  411d67:	shl    DWORD PTR [eax+0x66d82e2e],cl
  411d6d:	mov    eax,ds:0x96351d95
  411d72:	mov    BYTE PTR [esi+0x2],al
  411d75:	xchg   edi,eax
  411d76:	hlt    
  411d77:	sub    eax,0x8ace85f8
  411d7c:	push   esp
  411d7d:	xchg   DWORD PTR [ecx],eax
  411d7f:	pop    ebp
  411d80:	sti    
  411d81:	jnp    0x411d28
  411d83:	or     cl,BYTE PTR [ecx-0x48]
  411d86:	dec    ebp
  411d87:	lods   al,BYTE PTR ds:[esi]
  411d88:	mov    edx,0x721b6451
  411d8d:	fimul  WORD PTR [ebp+0x53aadc5b]
  411d93:	mov    DWORD PTR [esi+0x43],edi
  411d96:	xor    ah,BYTE PTR [edx+0x560f9893]
  411d9c:	and    dh,BYTE PTR [edx]
  411d9e:	cmp    BYTE PTR ds:0xd2a3b320,ah
  411da4:	xlat   BYTE PTR ds:[ebx]
  411da5:	fs and al,0xef
  411da8:	(bad)  
  411da9:	jmp    0x5b3a03a9
  411dae:	adc    DWORD PTR [eax-0x310ad245],0x58
  411db5:	mov    bl,0xd4
  411db7:	adc    esi,DWORD PTR [ebp+edx*2-0x684ac7c5]
  411dbe:	push   edi
  411dbf:	mov    cl,0x34
  411dc1:	jno    0x411e2f
  411dc3:	inc    esi
  411dc4:	clc    
  411dc5:	arpl   WORD PTR [ebx],bp
  411dc7:	std    
  411dc8:	iret   
  411dc9:	adc    DWORD PTR [ecx-0x76],esp
  411dcc:	aam    0x36
  411dce:	cdq    
  411dcf:	cmp    BYTE PTR ds:0xfc70de06,bh
  411dd5:	pop    edx
  411dd6:	out    dx,eax
  411dd7:	xchg   DWORD PTR [eax],ebx
  411dd9:	xchg   DWORD PTR [edx-0x44],edi
  411ddc:	pusha  
  411ddd:	and    bh,BYTE PTR [ecx+0x52c0cc2f]
  411de3:	dec    esp
  411de4:	push   edx
  411de5:	mov    ah,0x66
  411de7:	and    eax,ebp
  411de9:	test   eax,0xc18c204a
  411dee:	ins    DWORD PTR es:[edi],dx
  411def:	in     al,dx
  411df0:	neg    DWORD PTR [esp+edx*1]
  411df3:	add    esp,DWORD PTR [ebx+esi*2-0x65]
  411df7:	cwde   
  411df8:	mov    eax,DWORD PTR [ebx+0x47cdc3c8]
  411dfe:	mov    ebp,0x4b95bd60
  411e03:	cdq    
  411e04:	test   BYTE PTR [ebx-0x37],dh
  411e07:	stos   BYTE PTR es:[edi],al
  411e08:	lods   eax,DWORD PTR ds:[esi]
  411e09:	int    0xb6
  411e0b:	push   ss
  411e0c:	dec    edx
  411e0d:	dec    dl
  411e0f:	cmp    al,0x5c
  411e11:	shr    BYTE PTR ds:0x2144f9dd,0x3a
  411e18:	outs   dx,DWORD PTR ds:[esi]
  411e19:	or     DWORD PTR [esi-0x2e800a03],esp
  411e1f:	sbb    DWORD PTR [ebx+0x4d],edi
  411e22:	enter  0x6bc9,0x99
  411e26:	lea    ecx,[ebp-0x2f]
  411e29:	pop    edi
  411e2a:	cmc    
  411e2b:	imul   eax,DWORD PTR [edi+0x3e],0x37
  411e2f:	pop    ds
  411e30:	test   eax,0x7f5ca660
  411e35:	inc    eax
  411e36:	dec    ecx
  411e37:	into   
  411e38:	ins    DWORD PTR es:[edi],dx
  411e39:	loopne 0x411e0b
  411e3b:	fdiv   QWORD PTR [edx]
  411e3d:	iret   
  411e3e:	mov    al,ds:0xbdacc16a
  411e43:	scas   al,BYTE PTR es:[edi]
  411e44:	test   BYTE PTR ds:0x5f3b4bc,cl
  411e4a:	sti    
  411e4b:	pop    ebp
  411e4c:	pushf  
  411e4d:	lods   al,BYTE PTR ds:[esi]
  411e4e:	(bad)  
  411e4f:	xchg   ebx,eax
  411e50:	xchg   DWORD PTR [ecx+0x3d],edx
  411e53:	cmp    ecx,DWORD PTR [esi]
  411e55:	and    cl,BYTE PTR ds:0x53cef912
  411e5b:	and    DWORD PTR [esi+ebx*4+0x678fef7c],0xffffffa2
  411e63:	inc    ebx
  411e64:	cmp    BYTE PTR [ecx+edi*4+0x6831ee65],dh
  411e6b:	xor    ebx,DWORD PTR [ecx]
  411e6d:	inc    eax
  411e6e:	lea    esp,[ebx]
  411e70:	(bad)  
  411e71:	call   DWORD PTR [esi+0x53cef2e1]
  411e77:	jb     0x411e03
  411e79:	in     al,dx
  411e7a:	inc    ecx
  411e7b:	or     DWORD PTR [edi+0x29],ecx
  411e7e:	add    DWORD PTR [eax+0x6b],esp
  411e81:	mov    dh,0x9a
  411e83:	sub    ebx,DWORD PTR [edx+0x33e48465]
  411e89:	cmp    BYTE PTR [ecx+eax*4],bh
  411e8c:	fwait
  411e8d:	ins    DWORD PTR es:[edi],dx
  411e8e:	cmp    edi,DWORD PTR [esi]
  411e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e91:	retf   
  411e92:	dec    ebx
  411e93:	sbb    al,BYTE PTR [edi]
  411e95:	and    DWORD PTR [edx],ecx
  411e97:	fidiv  DWORD PTR [ebp-0x22]
  411e9a:	popa   
  411e9b:	sar    BYTE PTR [edi],1
  411e9d:	add    edx,DWORD PTR [esi-0x53]
  411ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea1:	adc    BYTE PTR [ebp-0x6a],dl
  411ea4:	inc    esi
  411ea5:	pushf  
  411ea6:	add    eax,0xaaaaa5a0
  411eab:	sahf   
  411eac:	rcl    ebx,1
  411eae:	jnp    0x411ede
  411eb0:	xor    ebx,eax
  411eb2:	jae    0x411f0d
  411eb4:	add    BYTE PTR [edx+0x66],al
  411eb7:	inc    ebx
  411eb8:	scas   eax,DWORD PTR es:[edi]
  411eb9:	popa   
  411eba:	sub    bl,BYTE PTR [eax-0x54]
  411ebd:	mov    eax,ds:0x843d49c5
  411ec2:	fstp   DWORD PTR [ebx+0x4c]
  411ec5:	dec    ax
  411ec7:	jecxz  0x411e8f
  411ec9:	test   al,0x47
  411ecb:	add    eax,0x53906b81
  411ed0:	(bad)  
  411ed1:	pusha  
  411ed2:	xchg   edi,eax
  411ed3:	jne    0x411eb9
  411ed5:	push   esp
  411ed6:	jb     0x4e6599ac
  411edc:	call   0x4a95:0xad25a1d2
  411ee3:	imul   esi,DWORD PTR [edi+edx*2-0x11f6a1ef],0xffffffa7
  411eeb:	aam    0x2
  411eed:	or     ebp,DWORD PTR ds:0xda812bc7
  411ef3:	pop    ebp
  411ef4:	std    
  411ef5:	add    al,0x51
  411ef7:	in     al,0x29
  411ef9:	sub    DWORD PTR [eax+0x1],edi
  411efc:	lock push es
  411efe:	and    ecx,DWORD PTR [ebx-0x40]
  411f01:	nop
  411f02:	loopne 0x411f55
  411f04:	hlt    
  411f05:	or     eax,0x770fa3fb
  411f0a:	test   ah,dh
  411f0c:	cld    
  411f0d:	push   esi
  411f0e:	les    esp,FWORD PTR [ecx]
  411f10:	sbb    al,0x29
  411f12:	mov    ebp,0xdc1f445
  411f17:	add    eax,0xffda692
  411f1c:	mov    bh,0x72
  411f1e:	inc    edi
  411f1f:	jns    0x411f8c
  411f21:	pop    esp
  411f22:	mov    ecx,0xdf39a858
  411f27:	retf   0xb7fe
  411f2a:	dec    ebx
  411f2b:	pusha  
  411f2c:	leave  
  411f2d:	jne    0x411eb4
  411f2f:	cwde   
  411f30:	sbb    al,BYTE PTR [esi+edi*1+0x20]
  411f34:	(bad)  
  411f35:	stc    
  411f36:	push   ebp
  411f37:	shl    DWORD PTR [eax+0x57895ab],cl
  411f3d:	sub    bl,dl
  411f3f:	rcr    BYTE PTR [edi-0x24],cl
  411f42:	lahf   
  411f43:	inc    eax
  411f44:	retf   0x2eab
  411f47:	rol    BYTE PTR [ebx+0x5ac9df89],0x5a
  411f4e:	push   ss
  411f4f:	inc    ecx
  411f50:	cmp    al,0x9d
  411f52:	iret   
  411f53:	jmp    0x411f68
  411f55:	fcomp  QWORD PTR [eax]
  411f57:	mov    eax,0x6b5ab5c2
  411f5c:	or     esi,DWORD PTR [eax+0x49]
  411f5f:	ja     0x411f01
  411f61:	loope  0x411fdf
  411f63:	mov    al,ds:0x8e8360b1
  411f68:	mov    dl,0x90
  411f6a:	jo     0x411f5b
  411f6c:	xchg   esi,eax
  411f6d:	push   esp
  411f6e:	mov    dh,0xac
  411f71:	out    0x44,eax
  411f73:	add    bl,BYTE PTR [edi-0x1501126f]
  411f79:	mov    edx,0x5d203405
  411f7e:	stc    
  411f7f:	imul   ecx,DWORD PTR [eax],0x22b69c7b
  411f85:	add    ch,ah
  411f87:	jno    0x412004
  411f89:	jo     0x411fd3
  411f8b:	aas    
  411f8c:	rol    BYTE PTR [eax-0x13],1
  411f8f:	sbb    dh,BYTE PTR [eax-0x19]
  411f92:	adc    eax,0x89f73a28
  411f97:	test   eax,0x6127a439
  411f9c:	adc    al,0xb6
  411f9e:	push   ss
  411f9f:	mov    BYTE PTR [ecx],dh
  411fa1:	pop    ebx
  411fa2:	cwde   
  411fa3:	lds    eax,FWORD PTR [edx+0x1a]
  411fa6:	cdq    
  411fa7:	mov    ecx,0x12c753d9
  411fac:	icebp  
  411fad:	xchg   edx,eax
  411fae:	repz xor ax,0x3941
  411fb3:	sahf   
  411fb4:	mov    WORD PTR [esi-0x79bbf1cb],gs
  411fba:	pop    ebp
  411fbb:	div    BYTE PTR [ebp-0x1e5caddc]
  411fc1:	inc    ebx
  411fc2:	cmc    
  411fc3:	sti    
  411fc4:	xor    DWORD PTR [edx+0x72713a13],0xffffffcc
  411fcb:	or     DWORD PTR [esi+0x7bca64fe],ebp
  411fd1:	mov    esi,0x23df8a21
  411fd6:	jl     0x412008
  411fd8:	push   ebx
  411fd9:	jl     0x412012
  411fdb:	add    dh,BYTE PTR [ecx+0x1a]
  411fde:	lods   al,BYTE PTR ds:[esi]
  411fdf:	and    eax,0xaf0374c
  411fe4:	inc    ecx
  411fe5:	xchg   esp,eax
  411fe6:	addr16 sar ebx,1
  411fe9:	or     eax,0xb6bafab5
  411fee:	mov    dh,0x1f
  411ff0:	retf   0x2b79
  411ff3:	test   BYTE PTR [eax-0x5163a4ba],ch
  411ff9:	cwde   
  411ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ffb:	xchg   ecx,eax
  411ffc:	mov    esp,0x9c853444
  412001:	mov    esi,0x7a37ebcf
  412006:	jne    0x411ff8
  412008:	mov    ch,0x7b
  41200a:	into   
  41200b:	dec    edx
  41200c:	or     eax,0xea110e39
  412011:	add    BYTE PTR [edi-0x7fd1cef2],ch
  412017:	repnz iret 
  412019:	ror    DWORD PTR [ebx],1
  41201b:	loope  0x411ffc
  41201d:	in     al,0xc9
  41201f:	adc    eax,0xeedd21ad
  412024:	mov    ecx,0x200cc20f
  412029:	fisttp WORD PTR [eax]
  41202b:	adc    DWORD PTR fs:[esi-0xfce321e],0xe4ed05c4
  412036:	aad    0x47
  412038:	aaa    
  412039:	adc    dl,ah
  41203b:	fwait
  41203c:	push   eax
  41203d:	mov    DWORD PTR [edi],ebp
  41203f:	jp     0x411fc9
  412041:	call   0xabae:0x4a154e68
  412048:	pop    esp
  412049:	mov    al,ds:0x77654332
  41204e:	pop    edx
  41204f:	push   eax
  412050:	pushf  
  412051:	inc    ebx
  412052:	xchg   esi,eax
  412053:	cmp    BYTE PTR [edi+esi*8],ah
  412056:	arpl   cx,di
  412058:	dec    edi
  412059:	push   eax
  41205a:	jo     0x412023
  41205c:	in     eax,0x4b
  41205e:	in     al,0x8b
  412060:	rcl    bl,0xb
  412063:	dec    edx
  412064:	fs sub al,0xa4
  412067:	jnp    0x412059
  412069:	ror    DWORD PTR [ebx+edi*4+0xb],1
  41206d:	xor    eax,ebp
  41206f:	xchg   edx,eax
  412070:	sbb    al,BYTE PTR [edx]
  412072:	fild   WORD PTR [ebx-0x5f]
  412075:	outs   dx,BYTE PTR ds:[esi]
  412076:	repz sub eax,0x187411cc
  41207c:	sbb    eax,DWORD PTR [ebx+ebx*1-0x6a3d8c18]
  412083:	inc    ebx
  412084:	adc    BYTE PTR [ebx],0x92
  412087:	lds    edx,FWORD PTR [esi]
  412089:	pop    esi
  41208a:	push   es
  41208b:	add    al,0x22
  41208d:	fs push esi
  41208f:	jae    0x4120a3
  412091:	mov    ebx,edi
  412093:	(bad)  
  412095:	pushf  
  412096:	jnp    0x4120e9
  412098:	add    edx,esi
  41209a:	xor    BYTE PTR [ebx-0x49],cl
  41209d:	adc    ebx,DWORD PTR ds:0x99a76d2d
  4120a3:	add    eax,0x3ac4edde
  4120a8:	mov    al,0xca
  4120aa:	(bad)  
  4120ab:	shl    BYTE PTR [edx-0x120dee6e],1
  4120b1:	pop    es
  4120b2:	cmc    
  4120b3:	fs pop ecx
  4120b5:	inc    ebx
  4120b6:	mov    dh,0x7a
  4120b8:	imul   ebx,DWORD PTR [edx-0x7e],0xffffff90
  4120bc:	mov    eax,ds:0xcd5a7649
  4120c1:	dec    edi
  4120c2:	ja     0x412115
  4120c4:	dec    ebp
  4120c5:	shl    DWORD PTR [ebx+0x54],0x9f
  4120c9:	push   ebx
  4120ca:	call   0xc302:0xa0fdc2e
  4120d1:	pop    esi
  4120d3:	fwait
  4120d4:	xchg   ecx,eax
  4120d5:	mov    esp,DWORD PTR ds:0xcf8f6cc2
  4120db:	add    DWORD PTR [edx-0x3267074f],0xffffff9e
  4120e2:	xchg   BYTE PTR [ecx+0x2d1fc1d6],ch
  4120e8:	fdiv   QWORD PTR ds:0xdb280254
  4120ee:	(bad)  
  4120ef:	loope  0x41213e
  4120f1:	pop    es
  4120f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120f3:	cmp    esi,DWORD PTR [ebx]
  4120f5:	jecxz  0x4120fd
  4120f7:	mov    dl,BYTE PTR ds:0x41badb6d
  4120fd:	xchg   ecx,eax
  4120fe:	mov    ds:0xc89a63ac,eax
  412103:	pop    ebx
  412104:	xor    al,0xfb
  412106:	sahf   
  412107:	sub    ah,0xab
  41210a:	data16 cmp dh,BYTE PTR [ecx+esi*1+0x465a0c6e]
  412112:	xor    eax,0xdcc7c193
  412117:	in     al,0x6c
  412119:	push   ss
  41211a:	in     al,dx
  41211b:	(bad)  
  41211d:	std    
  41211e:	sbb    BYTE PTR [edi-0x63e15b15],bh
  412124:	mov    es,WORD PTR [eax]
  412126:	daa    
  412127:	or     BYTE PTR [eax-0x68b876c5],al
  41212d:	dec    ebp
  41212e:	stc    
  41212f:	or     cl,0x63
  412132:	push   cs
  412133:	jmp    0x5084:0xe3b52d15
  41213a:	nop
  41213b:	lds    eax,FWORD PTR [ebx-0x37c394ff]
  412141:	mov    DWORD PTR [eax-0x5d7d1212],eax
  412147:	and    DWORD PTR [ebx+eax*2+0x25],edi
  41214b:	push   ebx
  41214c:	add    DWORD PTR [ecx],edi
  41214e:	(bad)  
  41214f:	and    eax,edi
  412151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412152:	jle    0x412110
  412154:	test   BYTE PTR [eax-0x7e],al
  412157:	mov    ch,0x12
  412159:	jae    0x4121ae
  41215b:	test   ch,dh
  41215d:	cdq    
  41215e:	imul   ebp,DWORD PTR [eax+esi*8+0x514e2bfc],0xfffffff9
  412166:	ss push ss
  412168:	aad    0x55
  41216a:	fnsave [ecx]
  41216c:	add    ebp,esi
  41216e:	cdq    
  41216f:	jo     0x412166
  412171:	loope  0x41216f
  412173:	ret    
  412174:	(bad)  
  412175:	test   eax,0x7f3380d2
  41217a:	and    eax,0x622abf3e
  41217f:	xchg   DWORD PTR cs:[ecx],edx
  412182:	and    DWORD PTR [eax-0x51],edx
  412185:	iret   
  412186:	push   ebp
  412187:	das    
  412188:	pop    esp
  412189:	addr16 pop esi
  41218b:	inc    ebx
  41218c:	repz cmp BYTE PTR [eax],al
  41218f:	cmc    
  412190:	jle    0x4121f6
  412192:	dec    ebx
  412193:	pusha  
  412194:	xchg   esp,eax
  412195:	cdq    
  412196:	ror    DWORD PTR [edx+0x4c],0xd2
  41219a:	and    eax,0x5cd74418
  41219f:	pop    edi
  4121a0:	test   dh,dl
  4121a2:	adc    al,0x70
  4121a4:	cld    
  4121a5:	cmp    eax,0x6bfaf5a2
  4121aa:	pop    edi
  4121ab:	(bad)  
  4121ac:	mov    ah,BYTE PTR [edx+0x12]
  4121af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121b0:	pop    ecx
  4121b1:	ror    BYTE PTR [edx+0x32859089],0x72
  4121b8:	imul   esp,DWORD PTR [edx-0x25],0x34bac2f
  4121bf:	and    ebp,edi
  4121c1:	int3   
  4121c2:	or     bh,ah
  4121c4:	adc    DWORD PTR [eax-0x554137c8],edx
  4121ca:	clc    
  4121cb:	jecxz  0x41215d
  4121cd:	ins    DWORD PTR es:[edi],dx
  4121ce:	xor    DWORD PTR [edi+0x79342974],ebp
  4121d4:	test   al,0x84
  4121d6:	out    dx,eax
  4121d7:	or     eax,DWORD PTR [esi]
  4121d9:	push   ss
  4121da:	ror    eax,cl
  4121dc:	jae    0x41218e
  4121de:	hlt    
  4121df:	mov    esi,DWORD PTR [ecx+0x67]
  4121e2:	adc    al,0xb2
  4121e4:	mov    ch,0xfa
  4121e6:	ins    BYTE PTR es:[edi],dx
  4121e7:	push   esi
  4121e8:	out    dx,eax
  4121e9:	ds (bad) 
  4121eb:	xor    DWORD PTR [edx],edx
  4121ed:	fdivr  DWORD PTR [esi]
  4121ef:	nop
  4121f0:	arpl   WORD PTR [ecx+0x9],sp
  4121f3:	mov    dl,0xde
  4121f5:	push   ss
  4121f6:	jnp    0x4121bc
  4121f8:	ins    DWORD PTR es:[edi],dx
  4121f9:	xchg   ecx,eax
  4121fa:	cmp    dl,ch
  4121fc:	dec    ebp
  4121fd:	inc    ebx
  4121fe:	or     DWORD PTR [esi-0x21a0dd41],ecx
  412204:	ret    
  412205:	(bad)  
  412206:	out    0x59,al
  412208:	xchg   ebp,ecx
  41220a:	jbe    0x41221d
  41220c:	sbb    dh,BYTE PTR [eax]
  41220e:	push   0x2284e2d5
  412213:	mov    cl,0xc
  412215:	mov    dh,0x62
  412217:	mov    ecx,0x44cef2fc
  41221c:	fnsetpm(287 only) 
  41221e:	xor    eax,0x9cae45d9
  412223:	das    
  412224:	shl    DWORD PTR [eax-0x6b],0x1a
  412228:	daa    
  412229:	dec    eax
  41222a:	lods   eax,DWORD PTR ds:[esi]
  41222b:	lods   al,BYTE PTR ds:[esi]
  41222c:	jl     0x41220f
  41222e:	scas   al,BYTE PTR es:[edi]
  41222f:	enter  0x15f,0xa5
  412233:	sbb    DWORD PTR [ebp-0x25],esp
  412236:	test   al,0x80
  412238:	mov    dh,0x73
  41223a:	stc    
  41223b:	add    eax,0xe850668c
  412240:	or     eax,0x112dee9
  412245:	test   al,0xcf
  412247:	fstp   TBYTE PTR [ebp+0x11]
  41224a:	mov    esi,0x8e394f9d
  41224f:	out    0xa2,al
  412251:	push   ebp
  412252:	(bad)  
  412253:	sbb    bh,bl
  412255:	adc    al,0x41
  412257:	inc    ebp
  412258:	nop
  412259:	cli    
  41225a:	adc    eax,0xd48ad99e
  41225f:	push   ebx
  412260:	xlat   BYTE PTR ds:[ebx]
  412261:	call   0x5e4846cf
  412266:	fwait
  412267:	(bad)  
  412268:	fdiv   QWORD PTR [ebx+0x46]
  41226b:	outs   dx,BYTE PTR ds:[esi]
  41226c:	out    0xe2,al
  41226e:	(bad)  
  41226f:	inc    edi
  412270:	mov    esi,0x8da5a301
  412275:	add    DWORD PTR ds:0x7a8a5e06,0x91f045b9
  41227f:	sbb    BYTE PTR cs:[edx-0x62],0x88
  412284:	dec    ebx
  412285:	sub    ah,BYTE PTR [esi+0x21]
  412288:	div    BYTE PTR [esi-0x3e3913e0]
  41228e:	pop    ecx
  41228f:	sub    BYTE PTR [edx-0x23e05814],0x16
  412296:	xlat   BYTE PTR ds:[ebx]
  412297:	std    
  412298:	push   eax
  41229a:	fbld   TBYTE PTR ds:0xdcb027d
  4122a0:	adc    BYTE PTR [eax+0x26d4e7f5],ah
  4122a6:	in     eax,0x5d
  4122a8:	loope  0x4122c2
  4122aa:	xor    ebx,ecx
  4122ac:	ds inc eax
  4122ae:	dec    ecx
  4122af:	pop    ss
  4122b0:	out    0x1a,al
  4122b2:	fs cwde 
  4122b4:	xchg   esi,eax
  4122b5:	mov    DWORD PTR [edi+ebp*2+0x22b39d31],ecx
  4122bc:	iret   
  4122bd:	icebp  
  4122be:	add    ecx,ebp
  4122c0:	cs add bh,dh
  4122c3:	inc    edi
  4122c4:	sbb    BYTE PTR [edi],dh
  4122c6:	pusha  
  4122c7:	pop    bp
  4122c9:	adc    esi,DWORD PTR [ebx+0x31147ed8]
  4122cf:	xor    BYTE PTR [eax+0x1d8a65b7],ch
  4122d5:	jmp    0x5e80a0a
  4122da:	jmp    0x95cb:0x8e644ba1
  4122e1:	inc    ecx
  4122e2:	mov    WORD PTR es:[ebx+0x3bdf962e],cs
  4122e9:	iret   
  4122ea:	xchg   edx,eax
  4122eb:	repz dec edx
  4122ed:	jp     0x4122a0
  4122ef:	imul   BYTE PTR [esi-0x47ef26ba]
  4122f5:	or     dl,ch
  4122f7:	fdiv   DWORD PTR ds:0xcf8c873b
  4122fd:	(bad)  
  4122fe:	xor    DWORD PTR [edx-0x35],ecx
  412301:	test   al,0x11
  412303:	jns    0x412344
  412305:	test   BYTE PTR [ecx-0x1e],ch
  412308:	fistp  WORD PTR [esi+0x1de6528e]
  41230e:	xor    ebp,DWORD PTR [ecx+eiz*2]
  412311:	sub    ch,BYTE PTR [ebx]
  412313:	adc    edi,DWORD PTR [esi-0x50384f36]
  412319:	test   DWORD PTR [ebp-0x73],esp
  41231c:	(bad)  
  41231e:	jecxz  0x412366
  412320:	add    edx,DWORD PTR [edx+eiz*2]
  412323:	xchg   edx,eax
  412324:	pop    es
  412325:	and    al,0x45
  412327:	shr    BYTE PTR [edi-0x5f33edb4],1
  41232d:	lds    esi,FWORD PTR [edx-0x73]
  412330:	repz xor BYTE PTR [edi+eiz*1-0x4b],ch
  412335:	js     0x412385
  412337:	cs fwait
  412339:	jbe    0x4122e6
  41233b:	fdivrp st(7),st
  41233d:	retf   0x5bf
  412340:	pushf  
  412341:	jp     0x41239d
  412343:	fisttp QWORD PTR [ecx+0x7]
  412346:	mov    cl,0xcd
  412348:	rcl    BYTE PTR [esi+0x6a],cl
  41234b:	hlt    
  41234c:	test   al,0x58
  41234e:	mov    al,ds:0xdf5bc7f6
  412353:	and    eax,0x716e9b1a
  412358:	fst    DWORD PTR [ecx+0x4e]
  41235b:	sbb    al,0xc5
  41235d:	(bad)  
  41235e:	dec    eax
  41235f:	aas    
  412360:	les    ecx,FWORD PTR [edx+0x40]
  412363:	stc    
  412364:	mov    DWORD PTR fs:[edx],edx
  412367:	pop    ebp
  412368:	or     ch,ch
  41236a:	jmp    0xf599:0xafab8cb4
  412371:	rcr    BYTE PTR [ebx+0x5e1287f9],cl
  412377:	js     0x41230c
  412379:	mov    edx,0x3f41ad88
  41237e:	push   esp
  41237f:	add    BYTE PTR [ebp-0x7e],cl
  412382:	stos   DWORD PTR es:[edi],eax
  412383:	pop    esp
  412384:	mov    eax,0xcd4fe6dd
  412389:	mov    gs,WORD PTR [ecx]
  41238b:	mov    ebx,0x57d754e8
  412390:	leave  
  412391:	call   0x528c:0xa9c68449
  412398:	stos   BYTE PTR es:[edi],al
  412399:	jge    0x4123c7
  41239b:	fsub   st(3),st
  41239d:	stos   BYTE PTR es:[edi],al
  41239e:	cmp    al,0x78
  4123a0:	jae    0x41237c
  4123a2:	(bad)  
  4123a3:	and    eax,0x444eaabd
  4123a8:	ret    0x860a
  4123ab:	push   ss
  4123ac:	rcr    BYTE PTR [eax+0x73],0xd5
  4123b0:	or     al,0xff
  4123b2:	xchg   ecx,eax
  4123b3:	push   ds
  4123b4:	cmp    dh,dh
  4123b6:	mov    ch,BYTE PTR [ebp+0x23]
  4123b9:	aaa    
  4123ba:	add    bl,BYTE PTR [ebx+0x15]
  4123bd:	hlt    
  4123be:	popa   
  4123bf:	cmp    ebx,DWORD PTR [edi-0x59]
  4123c2:	fucomip st,st(7)
  4123c4:	enter  0x912,0x1f
  4123c8:	sti    
  4123c9:	inc    edi
  4123ca:	into   
  4123cb:	mov    edx,DWORD PTR [ecx+0x4141df97]
  4123d1:	pop    ecx
  4123d2:	scas   al,BYTE PTR es:[edi]
  4123d3:	mov    eax,0x108263b8
  4123d8:	pop    ebx
  4123d9:	inc    esi
  4123da:	jae    0x412370
  4123dc:	adc    BYTE PTR [ecx],ch
  4123de:	mov    esi,0x8295be63
  4123e3:	jg     0x412419
  4123e5:	fidiv  WORD PTR [edi]
  4123e7:	jle    0x4123ed
  4123e9:	std    
  4123ea:	sbb    al,0xb2
  4123ec:	stos   BYTE PTR es:[edi],al
  4123ed:	xor    dh,BYTE PTR ds:0x4751cd2f
  4123f3:	aam    0x17
  4123f5:	xor    bh,BYTE PTR [esi]
  4123f7:	lock sti 
  4123f9:	fistp  WORD PTR [ebp+0x3c]
  4123fc:	sbb    edx,esi
  4123fe:	and    DWORD PTR [esi-0x4c14a714],0xffffffee
  412405:	rcl    BYTE PTR [esi+0x73973476],cl
  41240b:	fcom   DWORD PTR [ebx+0x79b26b90]
  412411:	iret   
  412412:	call   0xf197:0x688174fe
  412419:	sbb    eax,esi
  41241b:	dec    DWORD PTR [ebp+0x7fde2c88]
  412421:	push   cs
  412422:	jmp    0x58f4:0x976c3b3e
  412429:	dec    edx
  41242a:	int3   
  41242b:	in     eax,dx
  41242c:	inc    eax
  41242d:	mov    edi,0xd4eac6bc
  412432:	mov    edi,edx
  412434:	add    al,0x0
  412436:	jmp    0x60e2:0xa6309154
  41243d:	repz xchg esi,eax
  41243f:	ss ret 
  412441:	xchg   esp,eax
  412442:	inc    BYTE PTR [eax-0x79]
  412445:	call   0xfa5619cd
  41244a:	hlt    
  41244b:	in     al,dx
  41244c:	adc    eax,ebx
  41244e:	cmp    al,0xc2
  412450:	push   0xffffffab
  412452:	dec    eax
  412453:	jae    0x41241e
  412455:	mov    esp,0xecd2d426
  41245a:	push   esp
  41245b:	xchg   esi,eax
  41245c:	jl     0x4124ac
  41245e:	ret    0x5c5c
  412461:	ret    
  412462:	inc    ecx
  412463:	fisub  DWORD PTR [eax]
  412465:	stos   DWORD PTR es:[edi],eax
  412466:	les    eax,FWORD PTR [ebx-0x58d92390]
  41246c:	(bad)  
  41246d:	adc    eax,0xc0d3db3c
  412472:	mov    edx,DWORD PTR [esi+0x19]
  412475:	fwait
  412476:	out    0xa1,eax
  412478:	fucomp st(4)
  41247a:	lods   al,BYTE PTR ds:[esi]
  41247b:	xchg   ecx,eax
  41247c:	sbb    DWORD PTR [esi+eax*2-0x265a18d],ebx
  412483:	lods   eax,DWORD PTR ds:[esi]
  412484:	or     ah,0x82
  412487:	push   esp
  412488:	imul   ecx,DWORD PTR [edi+0x3d],0x63
  41248c:	xchg   esi,eax
  41248d:	jp     0x4124f9
  41248f:	clc    
  412490:	sar    ebx,cl
  412492:	inc    ebp
  412493:	rcr    BYTE PTR [ebx+0x23b25a07],cl
  412499:	lods   al,BYTE PTR ds:[esi]
  41249a:	sub    al,al
  41249c:	in     al,dx
  41249d:	rcr    BYTE PTR [ecx-0x73],1
  4124a0:	xchg   DWORD PTR [ebp+0xc4eb753],esp
  4124a6:	ds into 
  4124a8:	retf   
  4124a9:	(bad)  
  4124aa:	adc    al,0xfe
  4124ac:	loopne 0x4124c4
  4124ae:	xor    esp,esp
  4124b0:	xor    eax,0x88bc375a
  4124b5:	(bad)  
  4124b6:	(bad)  
  4124b7:	mov    ds:0x58d84d62,al
  4124bc:	daa    
  4124bd:	mov    eax,0x3638fe8
  4124c2:	fwait
  4124c3:	jge    0x412509
  4124c5:	pop    esp
  4124c6:	jg     0x412493
  4124c8:	test   BYTE PTR [edx-0x3f],bl
  4124cb:	cmp    edi,0xffffffe8
  4124ce:	loopne 0x4124ab
  4124d0:	sub    BYTE PTR [esi+esi*2+0x775f0e02],ch
  4124d7:	mov    dh,BYTE PTR [edi+0x7]
  4124da:	nop
  4124db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124dc:	xchg   edi,edx
  4124de:	in     eax,0x99
  4124e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124e1:	or     DWORD PTR [eax+0x57],esi
  4124e4:	mov    al,ds:0xa02a8555
  4124e9:	push   ds
  4124ea:	xchg   ebp,eax
  4124eb:	xchg   esi,eax
  4124ec:	sbb    ch,0x61
  4124ef:	mov    ebp,DWORD PTR [edi-0x33]
  4124f2:	arpl   WORD PTR [esi+0x67a50db0],dx
  4124f8:	cmp    ch,BYTE PTR [esi+eiz*4+0x24]
  4124fc:	cmp    eax,0xffa4f056
  412501:	int3   
  412502:	ss call 0x1936cdc0
  412508:	ror    DWORD PTR [edx+0x1f0d6cc8],0x43
  41250f:	xchg   ebx,eax
  412510:	dec    ecx
  412511:	mov    ebx,0x69194c38
  412516:	add    BYTE PTR [eax-0x1d],cl
  412519:	dec    edi
  41251a:	push   cs
  41251b:	xor    al,0xcd
  41251d:	adc    DWORD PTR [eax],esp
  41251f:	push   ebx
  412520:	sbb    eax,0x79e9b02
  412525:	aas    
  412526:	(bad)  
  412527:	lahf   
  412528:	mov    eax,0xd20d1360
  41252d:	or     ecx,DWORD PTR [edi-0x4ba0ff58]
  412533:	dec    eax
  412534:	adc    eax,DWORD PTR [edi]
  412536:	ret    0x50ef
  412539:	fsubrp st(4),st
  41253b:	pop    esp
  41253c:	and    ah,BYTE PTR [eax-0x561bc7f8]
  412542:	iret   
  412543:	xchg   ebp,eax
  412544:	int3   
  412545:	cwde   
  412546:	and    DWORD PTR [ebx],ecx
  412548:	(bad)  [esi+ebx*8-0x2d706ec3]
  41254f:	xchg   edi,eax
  412550:	xchg   ecx,eax
  412551:	dec    eax
  412552:	lods   eax,DWORD PTR ds:[esi]
  412553:	out    0x46,al
  412555:	into   
  412556:	xchg   edx,eax
  412557:	sbb    al,BYTE PTR [edx]
  412559:	jns    0x412509
  41255b:	(bad)  ds:0x5caad639
  412561:	sbb    edx,edx
  412563:	adc    cl,bl
  412565:	ficom  DWORD PTR [esi-0x77aa11]
  41256b:	call   0x212a:0xaf49f6f8
  412572:	dec    edi
  412573:	pusha  
  412574:	adc    bh,BYTE PTR [ebx+0x12937653]
  41257a:	mov    al,ds:0x12007005
  41257f:	lock aad 0x48
  412582:	pop    ebp
  412583:	add    dh,cl
  412585:	pushf  
  412586:	stc    
  412587:	pusha  
  412588:	inc    esi
  412589:	sub    DWORD PTR [ecx+esi*4],ecx
  41258c:	mov    ebp,edx
  41258e:	and    ch,BYTE PTR [ecx-0x70e2cd46]
  412594:	popa   
  412595:	std    
  412596:	fistp  WORD PTR [ebp+0x14e1e003]
  41259c:	lock adc dl,BYTE PTR [eax-0x34]
  4125a0:	jne    0x41259f
  4125a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125a3:	popf   
  4125a4:	lock shl al,cl
  4125a7:	push   ebp
  4125a8:	mov    DWORD PTR [eax-0x16],ebp
  4125ab:	dec    ebx
  4125ac:	in     al,0xe1
  4125ae:	lock pop edx
  4125b0:	and    BYTE PTR [ecx+eiz*2+0x20a961c1],cl
  4125b7:	enter  0x8672,0x84
  4125bb:	cdq    
  4125bc:	test   al,0x5
  4125be:	and    BYTE PTR [ebx+0x51fade4b],ah
  4125c4:	int3   
  4125c5:	push   esi
  4125c6:	mov    bl,0x17
  4125c8:	sbb    ch,BYTE PTR [edx+eiz*2+0x2e]
  4125cc:	adc    eax,edx
  4125ce:	inc    ecx
  4125cf:	out    dx,al
  4125d0:	imul   eax,eax,0xffffffb4
  4125d3:	fwait
  4125d4:	out    0xe2,eax
  4125d6:	or     esp,0x73a40154
  4125dc:	fiadd  DWORD PTR [edi+0x38]
  4125df:	push   eax
  4125e0:	lods   eax,DWORD PTR ds:[esi]
  4125e1:	add    al,0x31
  4125e3:	lock mov ecx,0x391c3af1
  4125e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ea:	push   ecx
  4125eb:	ss inc edx
  4125ed:	ins    DWORD PTR es:[edi],dx
  4125ee:	mov    gs,WORD PTR [esi+0x4f]
  4125f1:	rcr    DWORD PTR [esi+0x5fbab845],cl
  4125f7:	adc    DWORD PTR [eax],0x971d3fc9
  4125fd:	cmp    eax,0xd295c38c
  412603:	fldenv [ebp-0x1c]
  412606:	sub    eax,0xcb6035a4
  41260b:	je     0x41264f
  41260d:	ins    BYTE PTR es:[edi],dx
  41260e:	fstp   TBYTE PTR ds:0xbc7add76
  412614:	dec    esp
  412615:	mov    dl,0x85
  412617:	js     0x412657
  412619:	out    0x84,eax
  41261b:	test   al,0x10
  41261d:	mov    bl,0x25
  41261f:	stos   BYTE PTR es:[edi],al
  412620:	pop    eax
  412621:	cli    
  412622:	push   es
  412623:	rcr    BYTE PTR [ecx],cl
  412625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412626:	xchg   ebx,eax
  412627:	fnsave [esi]
  412629:	or     BYTE PTR [edi+eiz*1],0xbc
  41262d:	fstp   TBYTE PTR [ebx+0x17941fd5]
  412633:	xchg   esi,eax
  412634:	jp     0x41269e
  412636:	imul   edx,esi,0x924b3f14
  41263c:	adc    bh,ch
  41263e:	mov    al,0xe
  412640:	fwait
  412641:	xor    BYTE PTR [ebp+0x3b7efa4e],0x48
  412648:	popa   
  412649:	dec    ebp
  41264a:	sti    
  41264b:	inc    ebp
  41264c:	xchg   ebp,eax
  41264d:	fdiv   DWORD PTR [eax]
  41264f:	stos   BYTE PTR es:[edi],al
  412650:	in     al,0x3
  412652:	ja     0x41266e
  412654:	fs popa 
  412656:	sti    
  412657:	ins    BYTE PTR es:[edi],dx
  412658:	pop    eax
  412659:	pop    edx
  41265a:	mov    DWORD PTR [edi+0x2],ebp
  41265d:	mov    ecx,0x19171de7
  412662:	mov    eax,0x532a47d1
  412667:	outs   dx,DWORD PTR ds:[esi]
  412668:	rol    bh,1
  41266a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41266b:	leave  
  41266c:	scas   al,BYTE PTR es:[edi]
  41266d:	lahf   
  41266e:	fwait
  41266f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412670:	push   ds
  412671:	add    DWORD PTR ds:0xbb9fa186,edi
  412677:	retf   
  412678:	cmp    BYTE PTR [esi],ch
  41267a:	pop    esi
  41267b:	add    DWORD PTR [ebx-0xb37ddc6],0x28777c16
  412685:	jl     0x41261b
  412687:	pop    ss
  412688:	xor    DWORD PTR [edi+eax*8-0x32],ebx
  41268c:	rol    BYTE PTR [edi-0x26a7f6f6],0xf
  412693:	aad    0x72
  412695:	xchg   esi,eax
  412696:	shl    DWORD PTR [edi+0x7d73898f],0x51
  41269d:	bound  eax,QWORD PTR [ecx+0x5f607d1a]
  4126a3:	or     al,0xb3
  4126a5:	adc    edi,DWORD PTR [edi+0x5f21e44d]
  4126ab:	retf   0x88f9
  4126ae:	pusha  
  4126af:	pusha  
  4126b0:	inc    esp
  4126b1:	aas    
  4126b2:	(bad)  
  4126b3:	dec    eax
  4126b4:	mov    esi,0x3ea6067b
  4126b9:	ja     0x4126b4
  4126bb:	les    ecx,FWORD PTR ds:0x25c1d74c
  4126c1:	dec    BYTE PTR [esi+ebp*2-0x2f]
  4126c5:	sbb    BYTE PTR [ebp-0x7ee9d02],dh
  4126cb:	aaa    
  4126cc:	inc    edx
  4126cd:	or     al,0x1f
  4126cf:	daa    
  4126d0:	outs   dx,DWORD PTR ds:[esi]
  4126d1:	int3   
  4126d2:	call   0x9ee8:0x3a738129
  4126d9:	fucompp 
  4126db:	lea    esp,[esi]
  4126dd:	cmp    eax,0x56e97f9b
  4126e2:	sub    BYTE PTR [esi],dl
  4126e4:	fsub   QWORD PTR [edi+0x65]
  4126e7:	sub    DWORD PTR [eax],ebp
  4126e9:	mov    bl,0x99
  4126eb:	xchg   ecx,eax
  4126ec:	call   0xe5a1:0xd82f32cd
  4126f3:	fisttp QWORD PTR [edx-0x32]
  4126f6:	out    dx,eax
  4126f7:	in     al,dx
  4126f8:	cdq    
  4126f9:	pusha  
  4126fa:	lea    esi,[ebx+0x60]
  4126fd:	pop    ds
  4126fe:	in     al,0xd6
  412700:	sbb    ah,BYTE PTR [edi-0x5b]
  412703:	pop    es
  412704:	add    eax,0x112e2efa
  412709:	dec    edx
  41270a:	fwait
  41270b:	cmp    DWORD PTR [eax+0x67],edi
  41270e:	in     eax,dx
  41270f:	xchg   esp,eax
  412710:	test   DWORD PTR [esi+0x73eb6fbe],ebx
  412716:	clc    
  412717:	or     edi,edi
  412719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41271a:	cmp    al,0x80
  41271c:	sbb    DWORD PTR [ecx*4+0x4f9fdbc6],ebx
  412723:	fild   WORD PTR [edx+0x38]
  412726:	stos   DWORD PTR es:[edi],eax
  412727:	xchg   edx,eax
  412728:	sbb    al,0xb4
  41272a:	xchg   ebx,eax
  41272b:	mov    bl,BYTE PTR [edx+0x2da1ddcd]
  412731:	adc    eax,0x5f8f2844
  412736:	jns    0x412717
  412738:	pusha  
  412739:	adc    edi,esi
  41273b:	int3   
  41273c:	pushf  
  41273d:	pop    edx
  41273e:	jecxz  0x4127af
  412740:	loopne 0x412784
  412742:	pop    esp
  412743:	add    ah,al
  412745:	stc    
  412746:	shl    BYTE PTR [eax+0x1fdaa9a2],0x3
  41274d:	or     esp,DWORD PTR [edi]
  41274f:	popa   
  412750:	inc    esi
  412751:	push   ss
  412752:	outs   dx,BYTE PTR ds:[esi]
  412753:	pop    ebp
  412754:	icebp  
  412755:	adc    eax,0x8ee0eaa2
  41275a:	sub    ecx,DWORD PTR [edx+0x4f86df18]
  412760:	inc    esi
  412761:	adc    ebp,DWORD PTR [esi]
  412763:	hlt    
  412764:	outs   dx,BYTE PTR ds:[esi]
  412765:	cmp    eax,0xe7c12eff
  41276a:	loopne 0x41272e
  41276c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41276d:	push   edx
  41276e:	lock dec ecx
  412770:	lock jns 0x41273e
  412773:	mov    esi,0xfe0593d1
  412778:	xchg   ebp,eax
  412779:	sbb    eax,0xf5620eed
  41277e:	xlat   BYTE PTR ds:[ebx]
  41277f:	jno    0x412756
  412781:	mov    ch,0xcb
  412783:	pop    edx
  412784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412785:	(bad)  
  412786:	icebp  
  412787:	pop    edi
  412788:	pop    esi
  412789:	adc    DWORD PTR [eax+edi*4+0x53],ebp
  41278d:	(bad)  
  41278e:	sub    esp,DWORD PTR [ebp+0x7f3b5a2d]
  412794:	cmp    BYTE PTR [esi-0x74dc83a3],0x79
  41279b:	xor    eax,0xaf712916
  4127a0:	mov    ebx,0x91fd1d6b
  4127a5:	adc    eax,0x61608104
  4127aa:	xchg   ah,bl
  4127ac:	les    esi,FWORD PTR [esi-0x20]
  4127af:	sbb    ch,BYTE PTR ds:0x4d3b4361
  4127b5:	out    0xd1,eax
  4127b7:	loopne 0x412763
  4127b9:	call   DWORD PTR [edx-0x30]
  4127bc:	out    dx,al
  4127bd:	scas   eax,DWORD PTR es:[edi]
  4127be:	jge    0x41282e
  4127c0:	sub    al,ah
  4127c2:	mul    esi
  4127c4:	icebp  
  4127c5:	sub    esp,eax
  4127c7:	sbb    eax,0xc673032f
  4127cc:	mov    bh,0xdc
  4127ce:	dec    esi
  4127cf:	cmc    
  4127d0:	jae    0x4127f2
  4127d2:	mov    bl,0xc8
  4127d4:	sbb    eax,0xd152e384
  4127d9:	sti    
  4127da:	cmp    eax,0xf263e262
  4127df:	or     cl,BYTE PTR [esi+0x4c]
  4127e2:	outs   dx,DWORD PTR ds:[esi]
  4127e3:	pop    ecx
  4127e4:	pop    es
  4127e5:	arpl   WORD PTR [ebx-0x6d],dx
  4127e8:	sbb    al,0x11
  4127ea:	inc    ebp
  4127eb:	scas   al,BYTE PTR es:[edi]
  4127ec:	jns    0x412807
  4127ee:	add    esi,DWORD PTR [eax+0x23feda60]
  4127f4:	out    dx,al
  4127f5:	or     eax,0x4e3aecbd
  4127fa:	push   ecx
  4127fb:	or     al,ch
  4127fd:	mov    es,esp
  4127ff:	std    
  412800:	or     ecx,DWORD PTR [edx]
  412802:	fstp   DWORD PTR [edi]
  412804:	cmp    ebp,DWORD PTR [esi+edi*1]
  412807:	adc    DWORD PTR [esi+ebp*8],ebp
  41280a:	ds xchg esi,eax
  41280c:	arpl   WORD PTR [edx+0x1b],cx
  41280f:	fdivr  QWORD PTR [edx+0x106777f]
  412815:	push   ds
  412816:	mov    ebp,0x7fa90806
  41281b:	push   ebp
  41281c:	xor    BYTE PTR [esi-0x2f],ch
  41281f:	xchg   ebx,eax
  412820:	jmp    0x6b21:0xc6aabf57
  412827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412828:	not    BYTE PTR [eax+0x174bf3f0]
  41282e:	sbb    BYTE PTR [esi-0x25],bl
  412831:	push   eax
  412832:	xor    cl,BYTE PTR [ebx-0x5cb1de9b]
  412838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412839:	sbb    BYTE PTR [edx+ebp*1+0x56],dh
  41283d:	jl     0x412821
  41283f:	cmc    
  412840:	aas    
  412841:	mov    eax,0x7876a76d
  412846:	or     dl,ch
  412848:	push   ss
  412849:	lds    edx,FWORD PTR [edx+0x7e4f8cd5]
  41284f:	inc    esp
  412850:	jle    0x4127f1
  412852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412853:	mov    DWORD PTR [ebx],eax
  412855:	imul   edi,ecx,0xffffffd4
  412858:	addr16 add edx,ebx
  41285b:	push   ss
  41285c:	dec    ebx
  41285d:	mov    eax,ds:0x36e86285
  412862:	icebp  
  412863:	in     al,0xa0
  412865:	mov    ch,BYTE PTR [edx-0x5e]
  412868:	jp     0x41282d
  41286a:	in     eax,dx
  41286b:	(bad)  
  41286c:	adc    edi,DWORD PTR [edi]
  41286e:	fld    DWORD PTR [edx-0x25]
  412871:	imul   ebp,DWORD PTR [bx+di],0xca14224c
  412878:	sbb    dl,dh
  41287a:	aad    0xa4
  41287c:	cdq    
  41287d:	pop    eax
  41287e:	or     al,0x2d
  412880:	cdq    
  412881:	jne    0x41289b
  412883:	jg     0x412861
  412885:	jmp    0xd9659ce4
  41288a:	pop    ss
  41288b:	fdiv   QWORD PTR [eax+0x66]
  41288e:	inc    esi
  41288f:	and    DWORD PTR [edi-0x4fd83fb5],0x20
  412896:	push   es
  412897:	push   esp
  412898:	jmp    0x4128f2
  41289a:	dec    eax
  41289b:	push   esi
  41289c:	mov    dh,0x2e
  41289e:	gs sbb eax,0x1be160e2
  4128a4:	sbb    DWORD PTR [edx-0x5f],esp
  4128a7:	jns    0x4128d5
  4128a9:	fmul   DWORD PTR [ecx]
  4128ab:	jmp    0x4dc76691
  4128b0:	jb     0x412837
  4128b2:	icebp  
  4128b3:	sub    ah,BYTE PTR [ebx]
  4128b5:	stos   DWORD PTR es:[edi],eax
  4128b6:	and    eax,0xa0a7b112
  4128bb:	aam    0x27
  4128bd:	pop    ss
  4128be:	mov    ch,0x35
  4128c0:	out    0x0,eax
  4128c2:	xor    eax,0x2eca1b36
  4128c7:	fwait
  4128c8:	and    ecx,esi
  4128ca:	fiadd  DWORD PTR [ecx+0x11]
  4128cd:	sbb    edx,DWORD PTR [edx]
  4128cf:	mov    ah,0xf1
  4128d1:	xchg   esi,eax
  4128d2:	loop   0x4128e9
  4128d4:	fstp   TBYTE PTR [ecx-0x2f]
  4128d7:	jp     0x41291e
  4128d9:	(bad)
  4128dc:	mov    al,ds:0xeec6c59d
  4128e1:	cmp    ah,BYTE PTR [ecx+0x2c]
  4128e4:	dec    esp
  4128e5:	sub    BYTE PTR [edx],ah
  4128e7:	and    al,0xd0
  4128e9:	cdq    
  4128ea:	dec    ebx
  4128eb:	mov    ds:0x209f4108,eax
  4128f0:	fwait
  4128f1:	pop    ecx
  4128f2:	mov    cl,0xa1
  4128f4:	or     ebp,esp
  4128f6:	aam    0xe0
  4128f8:	xchg   ch,dh
  4128fa:	adc    eax,0xcc3b42cc
  4128ff:	repnz pop ebp
  412901:	shr    DWORD PTR [eax-0x4d8c03bd],0x7c
  412908:	popf   
  412909:	dec    esi
  41290a:	lock into 
  41290c:	mov    ah,0x9c
  41290e:	(bad)  
  41290f:	in     eax,0x1a
  412911:	hlt    
  412912:	inc    ecx
  412913:	jecxz  0x4128d0
  412915:	push   es
  412916:	mov    esi,0x9d040424
  41291b:	mov    dh,0xab
  41291d:	pop    ss
  41291e:	push   0xffffffeb
  412920:	push   0xffffffd2
  412922:	ss pop ecx
  412924:	pop    es
  412925:	add    ah,BYTE PTR [edi]
  412927:	popf   
  412928:	lds    eax,FWORD PTR [edx-0x15]
  41292b:	xchg   esp,eax
  41292c:	imul   esi,DWORD PTR [edx],0xffffff9a
  41292f:	or     BYTE PTR [edx-0x16],cl
  412932:	cdq    
  412933:	xlat   BYTE PTR ds:[ebx]
  412934:	sub    BYTE PTR [esi-0x2c174698],ch
  41293a:	aas    
  41293b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41293c:	jmp    0xf681ce2a
  412941:	adc    ebp,ecx
  412943:	(bad)  [edx]
  412945:	rcr    BYTE PTR [ebx-0x13ec9ae2],cl
  41294b:	mov    dl,0x5a
  41294d:	fnstenv [ebx]
  41294f:	dec    ecx
  412950:	ficom  WORD PTR [ebp-0x4750c00f]
  412956:	gs push esi
  412958:	nop
  412959:	test   al,0x33
  41295b:	daa    
  41295c:	adc    cl,BYTE PTR [edx-0x38532536]
  412962:	(bad)
  412967:	xor    al,0xd7
  412969:	pushf  
  41296a:	mov    edx,0xaeb3a887
  41296f:	xor    al,0x27
  412971:	dec    edi
  412972:	idiv   BYTE PTR [esi-0x5e8dd81a]
  412978:	mov    al,BYTE PTR [esi]
  41297a:	mov    eax,ds:0x39896736
  41297f:	retf   0x18d
  412982:	js     0x4129e1
  412984:	dec    esp
  412985:	(bad)  
  412986:	aad    0x33
  412988:	push   ebp
  412989:	jge    0x412963
  41298b:	cdq    
  41298c:	xor    DWORD PTR [eax+0x4107e6ab],esi
  412992:	cli    
  412993:	jp     0x4129ab
  412995:	inc    ebp
  412996:	cmp    DWORD PTR [ebx],eax
  412998:	(bad)  [ecx-0x77]
  41299b:	fdiv   DWORD PTR [ecx+0x54]
  41299e:	sti    
  41299f:	add    dl,0xcc
  4129a2:	ins    BYTE PTR es:[edi],dx
  4129a3:	adc    al,0xa7
  4129a5:	dec    edx
  4129a6:	jnp    0x4129a4
  4129a8:	mov    al,0x40
  4129aa:	jae    0x4129f8
  4129ac:	add    esi,eax
  4129ae:	pop    ebp
  4129af:	sub    ebp,DWORD PTR [esi+0x29]
  4129b2:	cmp    BYTE PTR [eax],bl
  4129b4:	stos   DWORD PTR es:[edi],eax
  4129b5:	pop    edi
  4129b6:	jae    0x9f31f002
  4129bc:	popf   
  4129bd:	dec    eax
  4129be:	scas   eax,DWORD PTR es:[edi]
  4129bf:	sub    al,ah
  4129c1:	xor    BYTE PTR [edi],cl
  4129c3:	clc    
  4129c4:	(bad)  [ebx+0x5e]
  4129c7:	in     eax,0x64
  4129c9:	mov    ch,0xb5
  4129cb:	mov    cl,0x7c
  4129cd:	(bad)  
  4129ce:	enter  0xdf54,0x69
  4129d2:	mov    bh,0x63
  4129d4:	jne    0x4129d3
  4129d6:	mov    esi,0xced3e32d
  4129db:	dec    ebp
  4129dc:	dec    edi
  4129dd:	adc    BYTE PTR [esi-0x57440f33],0xeb
  4129e4:	pop    esi
  4129e5:	add    al,BYTE PTR [eax+0x260f9efa]
  4129eb:	or     esp,esp
  4129ed:	push   ds
  4129ee:	sub    BYTE PTR [edx+0xb5ae12b],cl
  4129f4:	enter  0xc267,0xd2
  4129f8:	inc    edx
  4129f9:	pop    edx
  4129fa:	daa    
  4129fb:	(bad)  
  4129fc:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4129fe:	mov    esi,0x2f9c5c2e
  412a03:	cmp    bl,BYTE PTR [eax-0x1ecb97ab]
  412a09:	or     DWORD PTR [edi+0x7b64bcbd],0xffffffb1
  412a10:	fcmovnb st,st(4)
  412a12:	outs   dx,DWORD PTR ds:[esi]
  412a13:	sahf   
  412a14:	jge    0x412a53
  412a16:	or     ebx,DWORD PTR [ecx+esi*8-0x2171a2e2]
  412a1d:	inc    edx
  412a1e:	dec    ebx
  412a1f:	xor    eax,0xe1182f0b
  412a24:	and    al,0xcc
  412a26:	ret    
  412a27:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  412a29:	sbb    DWORD PTR [eax+0x6],0x27
  412a2d:	pop    si
  412a2f:	or     BYTE PTR fs:0x7dbf2854,ah
  412a36:	in     eax,0x37
  412a38:	test   bh,0xa
  412a3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a3c:	retf   0xc2
  412a3f:	dec    ecx
  412a40:	out    dx,al
  412a41:	cli    
  412a42:	or     BYTE PTR [edi-0x23],bh
  412a45:	push   ds
  412a46:	push   DWORD PTR [eax]
  412a48:	xor    esp,eax
  412a4a:	mov    ebx,0xd069939c
  412a4f:	or     esp,esp
  412a51:	xchg   esi,eax
  412a52:	add    DWORD PTR [eax],esp
  412a54:	fwait
  412a55:	nop
  412a56:	fwait
  412a57:	jg     0x412a02
  412a59:	test   ax,0x2669
  412a5d:	shl    DWORD PTR [esi+0x43],0x5e
  412a61:	aas    
  412a62:	fcom   st(5)
  412a64:	and    DWORD PTR [ebx+0x7b],ecx
  412a67:	leave  
  412a68:	sub    eax,DWORD PTR [esi-0x4d]
  412a6b:	mov    ch,0xae
  412a6d:	pop    esp
  412a6e:	aad    0x3
  412a70:	dec    ecx
  412a71:	loop   0x412ad2
  412a73:	inc    esp
  412a74:	loopne 0x412a4f
  412a76:	in     al,dx
  412a77:	adc    DWORD PTR [esi-0x6f],ecx
  412a7a:	or     al,0x7e
  412a7c:	not    DWORD PTR [edx]
  412a7e:	(bad)  
  412a7f:	iret   
  412a80:	xor    bl,BYTE PTR [esi+ecx*4]
  412a83:	xchg   ebx,eax
  412a84:	retf   0xa087
  412a87:	mov    bl,0x53
  412a89:	das    
  412a8a:	pop    esp
  412a8b:	(bad)  
  412a8c:	loopne 0x412a53
  412a8e:	and    ebp,DWORD PTR [ecx-0x16]
  412a91:	or     eax,0x5f748c38
  412a96:	daa    
  412a97:	inc    ebx
  412a98:	rcr    DWORD PTR [edi-0x3b],1
  412a9b:	jecxz  0x412a80
  412a9d:	jmp    0x124:0x87f84071
  412aa4:	push   edx
  412aa5:	pop    es
  412aa6:	pusha  
  412aa7:	call   0xb575ae73
  412aac:	cmp    dl,BYTE PTR [edx+0xbcbc5ce]
  412ab2:	cwde   
  412ab3:	fisttp WORD PTR [esi-0x42d5150f]
  412ab9:	cwde   
  412aba:	push   0xfaf68736
  412abf:	sbb    DWORD PTR [esi-0x26],ebp
  412ac2:	rcl    DWORD PTR [edx],0xf5
  412ac5:	or     BYTE PTR [ecx+0x44908e3b],dh
  412acb:	adc    DWORD PTR [ecx-0x3f],0xbbf69347
  412ad2:	cmp    al,0x66
  412ad4:	ds int3 
  412ad6:	add    ebx,edx
  412ad8:	pop    ebx
  412ad9:	fwait
  412ada:	retf   0xf1f6
  412add:	cmp    al,0xeb
  412adf:	mov    ds:0x93ba3ec9,eax
  412ae4:	test   esp,esi
  412ae6:	adc    al,0x46
  412ae8:	push   ebx
  412ae9:	push   esi
  412aea:	inc    ebp
  412aeb:	and    al,0xb7
  412aed:	push   esi
  412aee:	clc    
  412aef:	dec    ebp
  412af0:	aaa    
  412af1:	add    edx,DWORD PTR [edi-0x4a5fa42b]
  412af7:	call   0x2a92:0xb7ef099b
  412afe:	cmp    eax,0x61ad0ce1
  412b03:	sbb    ch,bh
  412b05:	test   BYTE PTR [edx],dl
  412b07:	cmp    BYTE PTR [edi],dh
  412b09:	adc    ebx,DWORD PTR [ebp-0x3381fbe]
  412b0f:	jp     0x412b22
  412b11:	push   eax
  412b12:	(bad)  
  412b13:	xchg   ebp,eax
  412b14:	fwait
  412b15:	and    eax,0xce3c9d99
  412b1a:	sbb    cl,BYTE PTR [edx+0x56157c5]
  412b20:	loop   0x412aa9
  412b22:	add    eax,0xcfc0b5b1
  412b27:	clc    
  412b28:	add    DWORD PTR [edx],ebx
  412b2a:	xchg   esi,edx
  412b2c:	mov    cl,0x8d
  412b2e:	ins    BYTE PTR es:[edi],dx
  412b2f:	aam    0x5
  412b31:	stos   BYTE PTR es:[edi],al
  412b32:	mov    eax,ds
  412b34:	jp     0x412ad4
  412b36:	cmc    
  412b37:	push   ebx
  412b38:	mov    ch,0xc8
  412b3a:	mov    ah,0xe4
  412b3c:	adc    al,0x51
  412b3e:	mov    bl,0xc6
  412b40:	fucomi st,st(7)
  412b42:	fidivr DWORD PTR [esi]
  412b44:	push   ss
  412b45:	ret    
  412b46:	imul   eax,edx,0xffffffa3
  412b49:	push   ss
  412b4a:	dec    esp
  412b4b:	sbb    dl,BYTE PTR ds:[ecx]
  412b4e:	mov    al,0x9d
  412b50:	(bad)  
  412b51:	repz sub al,0xa4
  412b54:	xor    DWORD PTR [eax+esi*4],edx
  412b57:	ss dec ebx
  412b59:	fs cli 
  412b5b:	sub    DWORD PTR [ecx],ecx
  412b5d:	mov    ecx,0x32ecb1b3
  412b62:	sub    ecx,esi
  412b64:	hlt    
  412b65:	and    al,0x19
  412b68:	pop    ebp
  412b69:	ret    
  412b6a:	mov    esi,0xb94b753a
  412b6f:	xlat   BYTE PTR ds:[ebx]
  412b70:	and    BYTE PTR [esi+0x6c],cl
  412b73:	sti    
  412b74:	jg     0x412b17
  412b76:	xchg   esi,eax
  412b77:	xchg   edi,eax
  412b78:	add    edi,esi
  412b7a:	mov    edi,0x54a21e71
  412b7f:	dec    ebx
  412b80:	(bad)  
  412b81:	and    al,0xb3
  412b83:	push   ebx
  412b84:	lods   eax,DWORD PTR ds:[esi]
  412b85:	cli    
  412b86:	sti    
  412b87:	(bad)  
  412b88:	leave  
  412b89:	mov    ch,0xda
  412b8b:	xchg   ebx,eax
  412b8c:	imul   ecx,DWORD PTR [ebp-0x2d],0xbc5a818c
  412b93:	clc    
  412b94:	mov    ah,0x70
  412b96:	inc    edi
  412b97:	ja     0x412bf1
  412b99:	in     eax,0x39
  412b9b:	and    DWORD PTR [ebp-0x76],eax
  412b9e:	rcr    BYTE PTR [ebp+0x67c97762],0xb2
  412ba5:	stos   DWORD PTR es:[edi],eax
  412ba6:	sub    al,BYTE PTR [ecx]
  412ba8:	inc    edx
  412ba9:	fistp  WORD PTR [ecx-0x2278d7cf]
  412baf:	(bad)  
  412bb0:	cmc    
  412bb1:	push   ecx
  412bb2:	scas   al,BYTE PTR es:[edi]
  412bb3:	adc    al,0xda
  412bb5:	fnstenv [ecx-0x52]
  412bb8:	jmp    0x412bff
  412bba:	call   0x77d9:0x1c0d2ac3
  412bc1:	scas   eax,DWORD PTR es:[edi]
  412bc2:	or     BYTE PTR ds:0x99e08dc6,ch
  412bc8:	mov    esp,0x6ec8b757
  412bcd:	shl    DWORD PTR [eax],1
  412bcf:	std    
  412bd0:	jnp    0x412bd6
  412bd2:	push   ss
  412bd3:	cmp    al,0xa2
  412bd5:	jb     0x412bdf
  412bd7:	sub    eax,0x3b0fd14b
  412bdc:	jb     0x412c5d
  412bde:	fwait
  412bdf:	stos   DWORD PTR es:[edi],eax
  412be0:	pop    esi
  412be1:	outs   dx,BYTE PTR ds:[esi]
  412be2:	aas    
  412be3:	mov    BYTE PTR [edi-0x64a0bb7],al
  412be9:	aam    0xf2
  412beb:	mov    ebx,0x4681d076
  412bf0:	adc    al,0x5e
  412bf2:	fdiv   st(5),st
  412bf4:	dec    esi
  412bf5:	push   ds
  412bf6:	sub    al,0x88
  412bf8:	(bad)
  412bfb:	sahf   
  412bfc:	add    DWORD PTR ds:0x971fd593,edx
  412c02:	and    BYTE PTR [edx+ebp*8-0x6a],0xa3
  412c07:	sbb    al,0x2f
  412c09:	aaa    
  412c0a:	jbe    0x412bcc
  412c0c:	repnz adc eax,0xacbbbd8d
  412c12:	je     0x412bd1
  412c14:	mov    ecx,0xd664dd76
  412c19:	mov    dl,0x9a
  412c1b:	sbb    al,0xc6
  412c1d:	cmp    DWORD PTR [ecx+eiz*8],0xffffffd7
  412c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c22:	mov    cl,0x5c
  412c24:	mov    WORD PTR [edx-0x63fddc45],?
  412c2a:	mov    ecx,0x77e30533
  412c2f:	nop
  412c30:	or     bh,dh
  412c32:	stos   BYTE PTR es:[edi],al
  412c33:	in     ax,0xfe
  412c36:	hlt    
  412c37:	call   0x94059fac
  412c3c:	jg     0x412bff
  412c3e:	jmp    0xd8a3c8b5
  412c43:	ds lahf 
  412c45:	addr16 aad 0x2b
  412c48:	pop    eax
  412c49:	pop    eax
  412c4a:	std    
  412c4b:	pop    es
  412c4c:	shr    BYTE PTR [ebx],0xa3
  412c4f:	shl    BYTE PTR [edx+esi*4],0x92
  412c53:	std    
  412c54:	xchg   ecx,eax
  412c55:	shl    BYTE PTR [esi-0x373b31c6],1
  412c5b:	jl     0x412c48
  412c5d:	aaa    
  412c5e:	call   0x7240001f
  412c63:	popa   
  412c64:	cmp    edi,DWORD PTR [edi]
  412c66:	push   eax
  412c67:	xchg   DWORD PTR [ebx],ebx
  412c69:	sahf   
  412c6a:	adc    eax,edi
  412c6c:	sbb    eax,0x9038f4be
  412c71:	inc    eax
  412c72:	xchg   esp,eax
  412c73:	pop    esi
  412c74:	paddb  mm5,mm0
  412c77:	ja     0x412c81
  412c79:	xchg   esp,eax
  412c7a:	outs   dx,BYTE PTR ds:[esi]
  412c7b:	push   ss
  412c7c:	pop    eax
  412c7d:	xchg   ecx,eax
  412c7e:	outs   dx,DWORD PTR ds:[esi]
  412c7f:	cwde   
  412c80:	fisub  DWORD PTR [eax+eax*4+0x8]
  412c84:	pop    edx
  412c85:	push   edx
  412c86:	pushf  
  412c87:	sbb    DWORD PTR [edx+0x5ee55dca],eax
  412c8d:	sbb    BYTE PTR ds:0xc7b5b160,ch
  412c93:	in     eax,0x8d
  412c95:	sar    BYTE PTR [ecx+ebp*8-0x38],0xb5
  412c9a:	repnz leave 
  412c9c:	(bad)  
  412c9d:	scas   eax,DWORD PTR es:[edi]
  412c9e:	mov    dh,0xfb
  412ca0:	xchg   ecx,eax
  412ca1:	ja     0x412ccd
  412ca3:	das    
  412ca4:	dec    ebx
  412ca5:	sub    BYTE PTR [ebp-0x765b9dcc],bh
  412cab:	mov    eax,ds:0xcf26506a
  412cb0:	aaa    
  412cb1:	push   ecx
  412cb2:	nop
  412cb3:	into   
  412cb4:	dec    eax
  412cb5:	fnstsw WORD PTR [ecx-0x22]
  412cb8:	jno    0x412d27
  412cba:	jmp    0x8a00ef37
  412cbf:	jbe    0x412c9b
  412cc1:	cmp    al,dh
  412cc3:	xchg   BYTE PTR [ebx],dh
  412cc5:	mov    DWORD PTR [ebx-0x4b64c400],0x737e211c
  412ccf:	ja     0x412cb1
  412cd1:	pop    ds
  412cd2:	mov    DWORD PTR [ecx],eax
  412cd4:	add    al,0x3f
  412cd6:	loope  0x412d18
  412cd8:	shr    DWORD PTR [ecx-0x4a20265d],1
  412cde:	cmp    BYTE PTR [ecx+0x6373160d],dl
  412ce4:	push   edi
  412ce5:	(bad)  
  412ce7:	repnz mov bl,0x6f
  412cea:	and    BYTE PTR [ebx+0x91f162b],ah
  412cf0:	mov    esi,0xc875b48a
  412cf5:	addr16 push ebp
  412cf7:	cdq    
  412cf8:	sub    al,0x20
  412cfa:	cmp    al,0xf0
  412cfc:	lea    edx,[edi+eax*1+0x52]
  412d00:	cli    
  412d01:	fwait
  412d02:	scas   al,BYTE PTR es:[edi]
  412d03:	sbb    dh,dl
  412d05:	or     al,0x6b
  412d07:	cdq    
  412d08:	stos   DWORD PTR es:[edi],eax
  412d09:	inc    ebx
  412d0a:	pop    edx
  412d0b:	test   eax,0xfd2b377b
  412d10:	jg     0x412cee
  412d12:	lahf   
  412d13:	out    dx,eax
  412d14:	frstor [eax+esi*8]
  412d17:	in     al,0x3a
  412d19:	dec    eax
  412d1a:	rcr    BYTE PTR ds:0x661824ef,0xd0
  412d21:	mov    edi,0xf5b3975b
  412d26:	scas   al,BYTE PTR es:[edi]
  412d27:	adc    cl,BYTE PTR [ecx-0x7a]
  412d2a:	push   ecx
  412d2b:	pop    ebp
  412d2c:	cmp    DWORD PTR [ecx+0x1e],esi
  412d2f:	sbb    DWORD PTR [edx-0x88e32b2],ebp
  412d35:	pop    esi
  412d36:	out    dx,al
  412d37:	fbld   TBYTE PTR [edx+esi*8+0x54]
  412d3b:	repz pop DWORD PTR [edx]
  412d3e:	test   eax,0xe3661efe
  412d43:	ds fcom st(6)
  412d46:	jg     0x412d9f
  412d48:	and    DWORD PTR [esi],esi
  412d4a:	xchg   edx,eax
  412d4b:	(bad)  
  412d4c:	push   ebp
  412d4d:	sbb    BYTE PTR [ecx+ebx*2],0x96
  412d51:	mov    edx,0x86e4ef67
  412d56:	out    0xf1,al
  412d58:	shl    BYTE PTR [ebp+0x14],1
  412d5b:	jnp    0x412d84
  412d5d:	mov    al,0xbb
  412d5f:	out    0xa2,eax
  412d61:	adc    DWORD PTR [ebp+ebp*2-0x5f],ebp
  412d65:	aas    
  412d66:	jecxz  0x412da7
  412d68:	mov    WORD PTR [eax],es
  412d6a:	sahf   
  412d6b:	adc    edi,esi
  412d6d:	aaa    
  412d6e:	and    DWORD PTR [esi],ebx
  412d70:	loopne 0x412dc5
  412d72:	mov    al,0x6
  412d74:	lods   eax,DWORD PTR ds:[esi]
  412d75:	clc    
  412d76:	les    edx,FWORD PTR [ebp+0x21b8794d]
  412d7c:	outs   dx,BYTE PTR ds:[esi]
  412d7d:	cmp    eax,0xc5052541
  412d82:	into   
  412d83:	les    eax,FWORD PTR [edi+0x21bf571e]
  412d89:	outs   dx,DWORD PTR ds:[esi]
  412d8a:	xchg   ax,ax
  412d8c:	add    edx,eax
  412d8e:	add    al,0x4b
  412d90:	mov    ecx,0x10294f07
  412d95:	mov    cl,0x32
  412d97:	hlt    
  412d98:	or     ecx,ebx
  412d9a:	xchg   edi,eax
  412d9b:	and    dl,ch
  412d9d:	sbb    BYTE PTR [edx-0x9319c6b],dl
  412da3:	sbb    edx,DWORD PTR [edi+ebx*1-0x4f]
  412da7:	fs pop edi
  412da9:	ins    DWORD PTR es:[edi],dx
  412daa:	dec    edi
  412dab:	fnstsw WORD PTR [ebx-0x7ce4593]
  412db1:	mov    ebx,ecx
  412db3:	ds aas 
  412db5:	xchg   esi,eax
  412db6:	test   BYTE PTR [ecx+0x6c94dab],ch
  412dbc:	sbb    DWORD PTR [ecx-0x287e4ee8],0x34
  412dc3:	xchg   ebp,eax
  412dc4:	pop    ebx
  412dc5:	or     ebp,DWORD PTR [edi+0x6c]
  412dc8:	mov    al,BYTE PTR [edi-0x51]
  412dcb:	add    ah,BYTE PTR [edx-0x43]
  412dce:	ins    DWORD PTR es:[edi],dx
  412dcf:	and    ch,ch
  412dd1:	sub    edx,ebp
  412dd3:	pop    ecx
  412dd4:	fs pop esp
  412dd6:	xchg   ebp,eax
  412dd7:	add    al,ah
  412dd9:	mov    WORD PTR [edx+edi*2],fs
  412ddc:	push   ss
  412ddd:	jbe    0x412dae
  412ddf:	jb     0x412e02
  412de1:	ja     0x412d86
  412de3:	jne    0x412e36
  412de5:	mov    ebx,DWORD PTR [esi-0x4753966f]
  412deb:	xchg   ebx,eax
  412dec:	add    al,0x9d
  412dee:	imul   ebp,ecx,0x37
  412df1:	neg    cl
  412df3:	add    esp,DWORD PTR [edi+ecx*2+0x6f]
  412df7:	scas   eax,DWORD PTR es:[edi]
  412df8:	ficom  DWORD PTR [eax+0xc72065f]
  412dfe:	xor    dh,BYTE PTR [esi-0x4fbd34a4]
  412e04:	fwait
  412e05:	mov    cl,BYTE PTR [esi+0x70]
  412e08:	jae    0x412e86
  412e0a:	adc    BYTE PTR [ecx+0x14a13557],0x25
  412e11:	or     eax,0x474d86e3
  412e16:	adc    bh,bl
  412e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e19:	pushf  
  412e1a:	sbb    edi,DWORD PTR [edi+0x66]
  412e1d:	push   ds
  412e1e:	fisubr WORD PTR [edx+0x6e]
  412e21:	cwde   
  412e22:	xchg   esi,eax
  412e23:	adc    eax,0xa45d0b81
  412e28:	cld    
  412e29:	fistp  DWORD PTR [ecx+ebx*8-0x6cc78535]
  412e30:	lods   eax,DWORD PTR ds:[esi]
  412e31:	sbb    DWORD PTR [edi+0x58bdceee],eax
  412e37:	xchg   esp,eax
  412e38:	(bad)  [eax+0x6a]
  412e3b:	sub    ch,BYTE PTR [edi]
  412e3d:	ins    DWORD PTR es:[edi],dx
  412e3e:	int    0x84
  412e40:	aas    
  412e41:	and    al,0x90
  412e43:	pop    edx
  412e44:	jg     0x412e37
  412e46:	pop    esi
  412e47:	fmul   DWORD PTR [ebx+ebx*1+0x58c3d776]
  412e4e:	inc    eax
  412e4f:	mov    al,ds:0x496856f4
  412e54:	jmp    0x9957:0x2bb17193
  412e5b:	dec    edx
  412e5c:	shl    DWORD PTR [edi],cl
  412e5e:	(bad)  
  412e5f:	addr16 popf 
  412e61:	aad    0xb6
  412e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e64:	daa    
  412e65:	scas   eax,DWORD PTR es:[edi]
  412e66:	pop    es
  412e67:	stos   DWORD PTR es:[edi],eax
  412e68:	fadd   DWORD PTR [edx-0x47769853]
  412e6e:	push   0xa
  412e70:	or     ebx,DWORD PTR [ecx]
  412e72:	fisub  DWORD PTR [ebx]
  412e74:	test   BYTE PTR ds:0x4d7e84cf,dh
  412e7a:	add    al,BYTE PTR [ebx+0x787eb9de]
  412e80:	push   0xffffffa4
  412e82:	push   es
  412e83:	fsubr  DWORD PTR [edx+0x63]
  412e86:	jne    0x412e45
  412e88:	outs   dx,DWORD PTR ds:[esi]
  412e89:	jae    0x412ef0
  412e8b:	sub    DWORD PTR [eax],ebp
  412e8d:	or     BYTE PTR [ebx],0xe
  412e90:	jmp    0xf8690f66
  412e95:	sbb    BYTE PTR [eax+0x2d75880e],ah
  412e9b:	lss    esi,FWORD PTR [ebx+0x4aad9b75]
  412ea2:	jge    0x412e90
  412ea4:	ins    BYTE PTR es:[edi],dx
  412ea5:	(bad)  
  412ea6:	mov    al,0x2f
  412ea8:	jmp    0x2481:0xc3508d90
  412eaf:	jo     0x412ef1
  412eb1:	xor    DWORD PTR [edi+0x4a],0xffffffe9
  412eb5:	adc    BYTE PTR [ebp+0x2d775dc],ch
  412ebb:	(bad)  
  412ebc:	mov    ds:0x62176fd,al
  412ec1:	ret    
  412ec2:	gs xchg esi,eax
  412ec4:	les    edx,FWORD PTR ds:0xc7033fd6
  412eca:	and    dl,bl
  412ecc:	push   0xffffffad
  412ece:	mov    bl,0xf6
  412ed0:	pop    esi
  412ed1:	and    cl,BYTE PTR [ebx]
  412ed3:	fmul   QWORD PTR [eax+0x1c516f86]
  412ed9:	jge    0x412e5d
  412edb:	xor    eax,0x3e377978
  412ee0:	sub    al,0xca
  412ee2:	gs xchg ebx,eax
  412ee4:	mov    edi,0x2dbdebc2
  412ee9:	hlt    
  412eea:	mov    eax,ds:0x1c3cdca
  412eef:	stos   BYTE PTR es:[edi],al
  412ef0:	call   0x1a93fd3d
  412ef5:	iret   
  412ef6:	mov    ds:0x20901fc4,eax
  412efb:	je     0x412f51
  412efd:	jbe    0x412ec6
  412eff:	cmp    cl,BYTE PTR [edi+0x34]
  412f02:	and    eax,DWORD PTR [ecx]
  412f04:	pop    es
  412f05:	(bad)  
  412f06:	lods   al,BYTE PTR ds:[esi]
  412f07:	cmp    ah,BYTE PTR [ebp-0x38f089d9]
  412f0d:	aad    0x2a
  412f0f:	std    
  412f10:	hlt    
  412f11:	push   ebx
  412f12:	ficomp DWORD PTR ds:0xb3a833e1
  412f18:	push   ebx
  412f19:	dec    edi
  412f1a:	ss lock aam 0xb3
  412f1e:	fisubr DWORD PTR [ebx]
  412f20:	retf   
  412f21:	sahf   
  412f22:	ins    DWORD PTR es:[edi],dx
  412f23:	pop    eax
  412f24:	push   es
  412f25:	leave  
  412f26:	fld    TBYTE PTR [ebx]
  412f28:	dec    esi
  412f29:	push   esi
  412f2a:	inc    ebx
  412f2b:	mov    ebx,0x6b09b695
  412f30:	dec    ecx
  412f31:	dec    esp
  412f32:	lea    ecx,[edi+0x67fc0fea]
  412f38:	(bad)  
  412f39:	push   0x7f67e602
  412f3e:	dec    ebp
  412f3f:	push   ebx
  412f40:	and    eax,0x6d69e4d4
  412f45:	jae    0x412f67
  412f47:	or     bl,BYTE PTR [edx+edx*4]
  412f4a:	and    edi,DWORD PTR [esi-0x59b2c671]
  412f50:	out    dx,al
  412f51:	xchg   edx,eax
  412f52:	addr16 loopne 0x412fd2
  412f55:	mov    edi,0x7cbfb50a
  412f5a:	cmp    al,0x4d
  412f5c:	inc    ebp
  412f5d:	inc    eax
  412f5e:	test   al,0x27
  412f60:	jp     0x412f1d
  412f62:	clc    
  412f63:	push   cs
  412f64:	out    dx,eax
  412f65:	arpl   WORD PTR [ebx-0x45],bp
  412f68:	mov    ebp,0xb8552811
  412f6d:	stos   DWORD PTR es:[edi],eax
  412f6e:	push   ebx
  412f6f:	sub    ebp,DWORD PTR [ecx+0x75]
  412f72:	ins    DWORD PTR es:[edi],dx
  412f73:	aaa    
  412f74:	mov    cl,0x39
  412f76:	in     eax,dx
  412f77:	gs jno 0x412fec
  412f7a:	(bad)  
  412f7b:	ss mov esi,ecx
  412f7e:	fcom   QWORD PTR [ecx+0x2c]
  412f81:	pop    esi
  412f82:	jbe    0x412f2e
  412f84:	fcmovu st,st(2)
  412f86:	jmp    0x5925:0xb36c7316
  412f8d:	xchg   edx,eax
  412f8e:	pop    es
  412f8f:	xchg   cl,bl
  412f91:	pop    esp
  412f92:	and    BYTE PTR [ecx+0x5e],ah
  412f95:	mov    ecx,DWORD PTR [edi-0x2ddebbec]
  412f9b:	test   al,0x4d
  412f9d:	div    BYTE PTR [ecx+0x32]
  412fa0:	ins    DWORD PTR es:[edi],dx
  412fa1:	lods   al,BYTE PTR ds:[esi]
  412fa2:	bound  esp,QWORD PTR [edx]
  412fa4:	pushf  
  412fa5:	dec    ebp
  412fa6:	std    
  412fa7:	mov    DWORD PTR [edi],0xd5ac5fa
  412fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fae:	dec    ebp
  412faf:	loopne 0x413024
  412fb1:	gs jmp 0xe633:0x1fb06a30
  412fb9:	cdq    
  412fba:	xor    eax,0xe99ac448
  412fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fc0:	nop
  412fc1:	lds    ecx,FWORD PTR [edx+0x5060a542]
  412fc7:	cdq    
  412fc8:	cli    
  412fc9:	jge    0x412fad
  412fcb:	inc    esi
  412fcc:	aad    0xe6
  412fce:	loop   0x413038
  412fd0:	mov    ecx,0x953a4879
  412fd5:	out    dx,eax
  412fd6:	and    BYTE PTR [ebx-0x67336f3e],dh
  412fdc:	xchg   esi,eax
  412fdd:	xor    BYTE PTR [edx+0x48],al
  412fe0:	js     0x412fa4
  412fe2:	repnz sub BYTE PTR [ebx+0x783d409],al
  412fe9:	mov    gs,WORD PTR [eax+0x73]
  412fec:	aad    0xc8
  412fee:	cmp    DWORD PTR es:[eax],0xeed02f35
  412ff5:	xor    DWORD PTR [edi-0x2f],eax
  412ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ff9:	jg     0x412fba
  412ffb:	test   DWORD PTR [esi+0x7adaa426],ecx
  413001:	push   ebx
  413002:	dec    edx
  413003:	jmp    FWORD PTR [ebp+0x7a5cc676]
  413009:	in     eax,0xd2
  41300b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41300c:	cmp    bl,cl
  41300e:	mov    ds:0x49ff3d6,al
  413013:	sbb    DWORD PTR [esi+0x1],0x2
  413017:	hlt    
  413018:	mov    bh,0xc
  41301a:	rcr    BYTE PTR [edx-0x59],cl
  41301d:	test   al,0xba
  41301f:	rcl    BYTE PTR [edx],cl
  413021:	popf   
  413022:	push   eax
  413023:	xchg   edi,eax
  413024:	jle    0x413005
  413026:	enter  0x8806,0x27
  41302a:	call   0x46e37846
  41302f:	inc    edx
  413030:	add    al,BYTE PTR [edi]
  413032:	mov    eax,ds:0x33a6818e
  413037:	xchg   ecx,edi
  413039:	push   cs
  41303a:	or     bl,BYTE PTR [esi]
  41303c:	jle    0x4130bd
  41303e:	or     ecx,DWORD PTR [ecx]
  413040:	ret    0x7d1b
  413043:	push   edi
  413044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413045:	js     0x412fe5
  413047:	in     eax,dx
  413048:	fwait
  413049:	cld    
  41304a:	cmp    bh,BYTE PTR [esp+esi*1+0x51]
  41304e:	and    eax,esp
  413050:	dec    edi
  413051:	jno    0x4130d2
  413053:	inc    esp
  413054:	into   
  413055:	sub    BYTE PTR [ebx+0x34e59056],0x8b
  41305c:	pop    eax
  41305d:	mov    bh,0x8b
  41305f:	outs   dx,DWORD PTR ds:[esi]
  413060:	xchg   edx,eax
  413061:	lds    ebx,FWORD PTR [esi+ebp*8]
  413064:	addr16 adc ch,al
  413067:	ret    0xba1d
  41306a:	add    ah,bl
  41306c:	mov    WORD PTR [ecx],gs
  41306e:	pop    ss
  41306f:	dec    edx
  413070:	fwait
  413071:	cs sti 
  413073:	pop    esi
  413074:	adc    al,0xc5
  413076:	imul   eax,ebp,0x6d
  413079:	xor    BYTE PTR [esp+edx*2],0x39
  41307d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41307e:	push   edi
  41307f:	pop    es
  413080:	jns    0x413048
  413082:	mov    dh,ch
  413084:	jne    0x4130ad
  413086:	aad    0x88
  413088:	outs   dx,BYTE PTR ds:[esi]
  413089:	fcomp  QWORD PTR [esi-0x51]
  41308c:	inc    ecx
  41308d:	ss mov ecx,0xd1b94353
  413093:	sti    
  413094:	xor    bl,BYTE PTR [eax-0x50]
  413097:	mov    ebp,0x72a533da
  41309c:	das    
  41309d:	or     ah,bl
  41309f:	and    BYTE PTR [ebx-0x2d],ch
  4130a2:	xchg   ebp,eax
  4130a3:	cmp    al,0x3e
  4130a5:	add    al,0x29
  4130a7:	retf   
  4130a8:	adc    eax,0x2dae45f0
  4130ad:	icebp  
  4130ae:	inc    esp
  4130af:	cmp    ah,BYTE PTR [edx+0x392457ae]
  4130b5:	faddp  st(7),st
  4130b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130b8:	mov    ch,al
  4130ba:	sub    al,BYTE PTR [ebx]
  4130bc:	neg    DWORD PTR [edx+eiz*4+0x6cd31d72]
  4130c3:	aaa    
  4130c4:	mov    dh,0xb6
  4130c6:	inc    ebx
  4130c7:	dec    ebp
  4130c8:	clc    
  4130c9:	loop   0x4130c3
  4130cb:	mov    ds:0x1ce4b222,al
  4130d0:	pop    esp
  4130d1:	mov    ch,0xfb
  4130d3:	js     0x413090
  4130d5:	jne    0x413110
  4130d7:	in     al,0x8f
  4130d9:	cdq    
  4130da:	adc    DWORD PTR [esi-0x6c],edx
  4130dd:	jno    0x4130a4
  4130df:	repnz popa 
  4130e1:	ja     0x4130e0
  4130e3:	es ss call 0xf88323d8
  4130ea:	js     0x413134
  4130ec:	sahf   
  4130ed:	dec    ebx
  4130ee:	xchg   edi,eax
  4130ef:	inc    ebx
  4130f0:	jb     0x413129
  4130f2:	pop    ecx
  4130f3:	pop    esp
  4130f4:	imul   edi,eax,0x5f2aa22e
  4130fa:	mov    di,0x7075
  4130fe:	cwde   
  4130ff:	xchg   DWORD PTR [edi-0x16f4be2d],esi
  413105:	std    
  413106:	test   eax,0x5e4a091e
  41310b:	xchg   edx,eax
  41310c:	pop    ss
  41310d:	dec    ecx
  41310e:	ucomiss xmm4,DWORD PTR [ebx]
  413111:	pop    ebx
  413112:	cwde   
  413113:	mov    al,0x54
  413115:	ss sti 
  413117:	push   cs
  413118:	sbb    BYTE PTR [eax-0x1a],ah
  41311b:	int3   
  41311c:	imul   eax,ebx,0x39
  41311f:	push   ds
  413120:	mov    dl,0xa3
  413122:	add    al,0x5d
  413124:	cs aas 
  413126:	adc    DWORD PTR [edi],ebx
  413128:	imul   ecx,ebx,0x45
  41312b:	pop    edx
  41312c:	and    edx,DWORD PTR [ebx-0x66]
  41312f:	int3   
  413130:	xchg   edi,eax
  413131:	cmp    eax,0x5aa5d1ed
  413136:	(bad)  
  413137:	push   edx
  413138:	stc    
  413139:	mov    ds:0xf5952078,al
  41313e:	lods   eax,DWORD PTR ds:[esi]
  41313f:	cmp    BYTE PTR [edx],bh
  413141:	xor    al,BYTE PTR [edx-0xf]
  413144:	xchg   esi,eax
  413145:	ins    DWORD PTR es:[edi],dx
  413146:	loopne 0x413154
  413148:	aad    0x24
  41314a:	sub    BYTE PTR [edi],0x6b
  41314d:	mov    al,0x4e
  41314f:	mov    ebp,ss
  413151:	adc    al,0xc4
  413153:	fiadd  WORD PTR [edx]
  413155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413156:	jo     0x4130f7
  413158:	ja     0x413147
  41315a:	lds    esp,FWORD PTR [edi]
  41315c:	imul   edx,DWORD PTR [eax],0x4eb4d56f
  413162:	and    ebx,DWORD PTR ds:0x553c8ae5
  413168:	test   DWORD PTR es:[ebx+eax*2-0x34],esi
  41316d:	dec    ebx
  41316e:	jbe    0x4131db
  413170:	mov    bl,0x7f
  413172:	sbb    bl,ah
  413174:	ret    
  413175:	into   
  413176:	aam    0x8f
  413178:	ins    DWORD PTR es:[edi],dx
  413179:	idiv   esp
  41317b:	arpl   WORD PTR [ebp-0x342a7995],cx
  413181:	cs xor al,0x12
  413184:	push   eax
  413185:	repnz sub DWORD PTR [ebx-0x74],0x121455fb
  41318d:	cmc    
  41318e:	shl    ah,cl
  413190:	iret   
  413191:	and    DWORD PTR [ebx+0x21],0x38
  413195:	out    0x9a,al
  413197:	repz cmp al,0x6b
  41319a:	(bad)  
  41319b:	pop    ecx
  41319c:	adc    al,0x22
  41319e:	pushf  
  41319f:	or     eax,0x8626381e
  4131a4:	(bad)  
  4131a6:	xor    cl,BYTE PTR [ecx]
  4131a8:	or     BYTE PTR [edi],ah
  4131aa:	fdivp  st(3),st
  4131ac:	mov    edi,0x4f738a8d
  4131b1:	pop    ecx
  4131b2:	ss sbb al,cl
  4131b5:	fadd   QWORD PTR [esi-0x17]
  4131b8:	pop    esp
  4131b9:	xor    DWORD PTR [edx-0x17],ecx
  4131bc:	lea    esi,[edx+0x12438402]
  4131c2:	int3   
  4131c3:	mov    WORD PTR [edx-0x20],cs
  4131c6:	out    0x1d,eax
  4131c8:	dec    edi
  4131c9:	sbb    bh,BYTE PTR [ebp+0x35]
  4131cc:	inc    edi
  4131cd:	jmp    0x621:0x2af8549b
  4131d4:	js     0x413248
  4131d6:	cli    
  4131d7:	mov    esp,0x94b84ad7
  4131dc:	test   bh,dh
  4131de:	jl     0x413183
  4131e0:	xchg   ebx,eax
  4131e1:	aam    0x75
  4131e3:	sbb    DWORD PTR [eax],esp
  4131e5:	pop    ss
  4131e6:	sahf   
  4131e7:	sub    ecx,ecx
  4131e9:	addr16 js 0x4131d4
  4131ec:	scas   eax,DWORD PTR es:[edi]
  4131ed:	or     ebx,DWORD PTR [ebx-0x50ed9cbc]
  4131f3:	adc    ebp,DWORD PTR [eax+0x5]
  4131f6:	enter  0xa708,0x77
  4131fa:	xor    DWORD PTR [edi-0x6926cba4],0xa16465fc
  413204:	test   al,0x7d
  413206:	shl    BYTE PTR [eax],cl
  413208:	in     eax,0x95
  41320a:	retf   
  41320b:	mov    edx,edx
  41320d:	adc    esi,DWORD PTR ds:0x30f8ac6
  413213:	or     eax,0xfe7358fc
  413218:	aad    0x74
  41321a:	xlat   BYTE PTR ds:[ebx]
  41321b:	gs push eax
  41321d:	and    esp,DWORD PTR [ecx+0x7a]
  413220:	mov    edi,0x263c9020
  413225:	icebp  
  413226:	mov    eax,0xa42d8977
  41322b:	and    dl,BYTE PTR ds:0x34f5fbbd
  413231:	lahf   
  413232:	aam    0xec
  413234:	xchg   ebx,eax
  413235:	push   ds
  413236:	push   ss
  413237:	and    DWORD PTR ds:0x9d5bc4cd,esp
  41323d:	sbb    DWORD PTR ds:0x2bc616,edx
  413243:	jg     0x4131da
  413245:	inc    ecx
  413246:	inc    ecx
  413247:	stc    
  413248:	ret    
  413249:	fidiv  WORD PTR [esi+0x7a3b336d]
  41324f:	mov    bl,0x34
  413251:	iret   
  413252:	push   esp
  413253:	test   eax,0x5c042103
  413258:	lods   al,BYTE PTR ds:[esi]
  413259:	mov    al,ds:0x200d0ca1
  41325e:	mov    bl,0xa4
  413260:	jno    0x4131fb
  413262:	pop    es
  413263:	inc    esi
  413264:	jno    0x413229
  413266:	dec    ecx
  413267:	cmp    DWORD PTR [bp+0x18],ebp
  41326b:	test   ebx,ebp
  41326d:	fstp   st(4)
  41326f:	fisttp DWORD PTR [eax-0x19]
  413272:	inc    edx
  413273:	iret   
  413274:	test   al,0x51
  413276:	sbb    al,BYTE PTR [esi]
  413278:	fwait
  413279:	sub    al,0x2d
  41327b:	scas   al,BYTE PTR es:[edi]
  41327c:	mov    ds:0xd2f0f8e7,eax
  413281:	ins    BYTE PTR es:[edi],dx
  413282:	es mov al,0x5c
  413285:	ins    DWORD PTR es:[edi],dx
  413286:	cmp    bh,BYTE PTR [esi+0x5f4182e4]
  41328c:	sub    eax,0x3f235a5a
  413291:	popf   
  413292:	xchg   esp,eax
  413293:	mov    dh,BYTE PTR [esi-0x63]
  413296:	push   0x9960ea04
  41329b:	inc    ebx
  41329c:	mov    esp,0xdd809576
  4132a1:	jno    0x413228
  4132a3:	mov    dl,0x99
  4132a5:	inc    esi
  4132a6:	sti    
  4132a7:	jmp    0x96f4:0x3bc7e72b
  4132ae:	push   cs
  4132af:	scas   eax,DWORD PTR es:[edi]
  4132b0:	call   0x9be53264
  4132b5:	aam    0xc9
  4132b7:	mov    al,ds:0xd4a2b408
  4132bc:	sub    eax,eax
  4132be:	lods   al,BYTE PTR ds:[esi]
  4132bf:	in     eax,0x79
  4132c1:	sbb    eax,0x54014fc7
  4132c6:	sub    eax,0x3b776171
  4132cb:	es gs xchg ebx,ecx
  4132cf:	xor    BYTE PTR [edx+0x20300390],dl
  4132d5:	pushf  
  4132d6:	sbb    al,0x28
  4132d8:	jae    0x413265
  4132da:	out    0xa6,eax
  4132dc:	int3   
  4132dd:	jae    0x413307
  4132df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e0:	cli    
  4132e1:	add    ch,BYTE PTR [eax+ebp*4+0x5b]
  4132e5:	adc    eax,0xaee621c8
  4132ea:	iret   
  4132eb:	inc    eax
  4132ec:	mov    cl,0x17
  4132ee:	imul   esp,DWORD PTR [esi-0x3ddc973c],0x2c75442e
  4132f8:	(bad)  
  4132fa:	iret   
  4132fb:	mov    ebp,ebp
  4132fd:	sahf   
  4132fe:	fnstenv [ecx]
  413300:	jp     0x4132d8
  413302:	iret   
  413303:	sub    al,0x79
  413305:	fs jecxz 0x41331a
  413308:	mov    al,ds:0xe804233b
  41330d:	adc    cl,BYTE PTR ds:0x781dce9f
  413313:	inc    esi
  413314:	jmp    0xb532d688
  413319:	popf   
  41331a:	sub    eax,0x3204a33f
  41331f:	xor    BYTE PTR [edi],dl
  413321:	cmp    al,0x10
  413323:	out    dx,al
  413324:	inc    edx
  413325:	xor    eax,0x67fe0c09
  41332a:	push   edi
  41332b:	shl    DWORD PTR [ebx],0x2a
  41332e:	mov    ah,0x10
  413330:	add    ebp,0x57
  413333:	pop    ss
  413334:	arpl   cx,cx
  413336:	fidivr WORD PTR [ecx+0x3d2de74f]
  41333c:	call   0xd4b4c35a
  413341:	in     al,dx
  413342:	push   eax
  413343:	cmp    al,0x4f
  413345:	out    0xfd,al
  413347:	pop    ss
  413348:	mov    DWORD PTR [esp+ebx*8+0x2e],ebp
  41334c:	addr16 int3 
  41334e:	adc    dl,0x4b
  413351:	jle    0x4132f4
  413353:	pop    ebx
  413354:	out    dx,al
  413355:	shl    BYTE PTR [esi],1
  413357:	jbe    0x4132f6
  413359:	mov    al,0x89
  41335b:	scas   al,BYTE PTR es:[edi]
  41335c:	xor    esi,eax
  41335e:	ja     0x41334e
  413360:	icebp  
  413361:	pop    ebp
  413362:	(bad)  
  413363:	pop    ecx
  413364:	add    bl,BYTE PTR [ebx+0x4f041292]
  41336a:	rol    al,1
  41336c:	cmp    ebx,edx
  41336e:	dec    ecx
  41336f:	mov    ah,0x2c
  413371:	sub    al,0xc
  413373:	into   
  413374:	pop    ecx
  413375:	outs   dx,BYTE PTR ds:[esi]
  413376:	pop    ebx
  413377:	out    0x48,eax
  413379:	mov    eax,0x482df70b
  41337e:	xchg   edx,esp
  413380:	addr16 inc ebp
  413382:	push   ss
  413383:	mov    bl,0xde
  413385:	xor    edi,DWORD PTR [ebp+0x7fdce193]
  41338b:	sub    BYTE PTR [edi-0x56],cl
  41338e:	out    dx,al
  41338f:	or     eax,0x3e583f59
  413394:	xchg   BYTE PTR [edi],ah
  413396:	mov    esi,0xab4db0dc
  41339b:	shl    BYTE PTR [edi],1
  41339d:	jbe    0x4133f9
  41339f:	int    0x4f
  4133a1:	fidiv  WORD PTR [edx+edi*1]
  4133a4:	popf   
  4133a5:	push   0x27e82984
  4133aa:	jne    0x41335c
  4133ac:	cwd    
  4133ae:	int3   
  4133af:	or     BYTE PTR [ebp+ecx*8+0x6d0921f1],0xea
  4133b7:	cmp    eax,0x152bc66a
  4133bc:	dec    edi
  4133bd:	cs in  eax,0x74
  4133c0:	loop   0x41334b
  4133c2:	daa    
  4133c3:	out    0x1d,al
  4133c5:	mov    ds:0xfab406de,al
  4133ca:	hlt    
  4133cb:	sub    edi,edx
  4133cd:	push   ebx
  4133ce:	dec    edi
  4133cf:	into   
  4133d0:	cs push ecx
  4133d2:	sbb    DWORD PTR [ecx],ebp
  4133d4:	bnd jl 0x4133bb
  4133d7:	push   ebp
  4133d8:	dec    ebx
  4133d9:	popf   
  4133da:	adc    BYTE PTR [esi],ch
  4133dc:	cmp    eax,eax
  4133de:	sub    DWORD PTR [edi],edi
  4133e0:	out    dx,al
  4133e1:	lods   al,BYTE PTR ds:[esi]
  4133e2:	push   0x894fd1fd
  4133e7:	mov    esi,DWORD PTR [esi+0x177de907]
  4133ed:	dec    edx
  4133ee:	int    0x42
  4133f0:	fidiv  WORD PTR [edi+0x6893a2a3]
  4133f6:	jns    0x41345c
  4133f8:	fistp  DWORD PTR ds:0xf190a98e
  4133fe:	adc    ebx,DWORD PTR [edi-0x2a]
  413401:	arpl   WORD PTR [edx],sp
  413403:	in     eax,dx
  413404:	cmp    dh,BYTE PTR [edx]
  413406:	pop    esi
  413407:	or     BYTE PTR [edx],0xa4
  41340a:	gs mov ebx,cs
  41340d:	dec    ebx
  41340e:	movd   mm2,esi
  413411:	jae    0x4133c9
  413413:	inc    ebp
  413414:	adc    BYTE PTR [esi],bl
  413416:	cld    
  413417:	ror    DWORD PTR [edx-0x59],cl
  41341a:	cmp    eax,0x8e89f499
  41341f:	inc    eax
  413420:	xor    eax,ebx
  413422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413423:	and    edx,eax
  413425:	sahf   
  413426:	mov    al,ds:0x5a9981fe
  41342b:	jae    0x41342d
  41342d:	xlat   BYTE PTR ds:[ebx]
  41342e:	push   es
  41342f:	lea    esp,[esi]
  413431:	sbb    al,0xf4
  413433:	mov    ds:0xb743f1a,eax
  413438:	mov    ds:0x435e43db,al
  41343d:	pusha  
  41343e:	xor    dh,BYTE PTR [esi+0x69]
  413441:	rcr    ch,cl
  413443:	ror    DWORD PTR [ebx+0x5dbb3b47],cl
  413449:	jb     0x41340a
  41344b:	js     0x4133e6
  41344d:	test   al,0xc4
  41344f:	mov    al,0xe8
  413451:	shl    dl,1
  413453:	cmp    eax,0x56dc0b35
  413458:	jne    0x4134c8
  41345a:	repnz imul BYTE PTR [ebx+0x2e]
  41345e:	dec    edi
  41345f:	pop    edx
  413460:	pop    es
  413461:	sti    
  413462:	mov    edi,0xc649a91c
  413467:	jmp    0x70541c00
  41346c:	into   
  41346d:	fcmove st,st(0)
  41346f:	mov    bh,0x1e
  413471:	out    dx,al
  413472:	je     0x4134e0
  413474:	into   
  413475:	or     edi,edx
  413477:	mov    BYTE PTR [edi+0x5e8cf1a5],al
  41347d:	imul   eax,DWORD PTR [ebp+0x36],0x98c8426f
  413484:	xor    eax,0x81c6decd
  413489:	ins    BYTE PTR es:[edi],dx
  41348a:	xor    BYTE PTR [eax+0x407dcf8a],bh
  413490:	push   ss
  413491:	push   ds
  413492:	lods   al,BYTE PTR ds:[esi]
  413493:	cli    
  413494:	mov    DWORD PTR [ebx-0x59],ebp
  413497:	adc    dh,BYTE PTR [esi+0x1c]
  41349a:	repz das 
  41349c:	jp     0x41346b
  41349e:	cmp    BYTE PTR [ecx+0x21],dh
  4134a1:	sahf   
  4134a2:	pop    ebp
  4134a3:	adc    eax,0x11205196
  4134a8:	out    0x3b,eax
  4134aa:	cmp    al,0xf4
  4134ac:	enter  0x9fe1,0x34
  4134b0:	and    BYTE PTR [ecx-0x62],ch
  4134b3:	cmp    BYTE PTR [ebx],dh
  4134b5:	ret    
  4134b6:	div    esi
  4134b8:	push   ebp
  4134b9:	(bad)  
  4134ba:	hlt    
  4134bb:	test   eax,0x156aa76f
  4134c0:	xor    BYTE PTR [edi+0x3e],0x51
  4134c4:	push   ds
  4134c5:	dec    edx
  4134c6:	test   cx,sp
  4134c9:	mov    WORD PTR [eax],ss
  4134cb:	out    dx,eax
  4134cc:	dec    edi
  4134cd:	dec    ebp
  4134ce:	ja     0x413468
  4134d0:	xor    al,0x80
  4134d2:	cmp    ah,BYTE PTR [ebx]
  4134d4:	mov    ebx,0xe3c9d0ca
  4134d9:	enter  0x3960,0x15
  4134dd:	shr    bh,1
  4134df:	inc    ebp
  4134e0:	mov    ds:0x9f4c9b4,al
  4134e5:	sahf   
  4134e6:	ins    DWORD PTR es:[edi],dx
  4134e7:	repnz mov ebx,esi
  4134ea:	jecxz  0x413541
  4134ec:	scas   eax,DWORD PTR es:[edi]
  4134ed:	stc    
  4134ee:	adc    al,0x59
  4134f0:	jp     0x413550
  4134f2:	fisttp WORD PTR [ebx-0x74]
  4134f5:	jbe    0x41354d
  4134f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f8:	dec    edi
  4134f9:	pop    ss
  4134fa:	mov    edi,0xcb0a82c8
  4134ff:	sbb    eax,0xc15b6050
  413504:	les    edi,FWORD PTR [ebx]
  413506:	cmp    ah,dh
  413508:	stos   DWORD PTR es:[edi],eax
  413509:	in     eax,0xe6
  41350b:	ret    
  41350c:	adc    esp,ebp
  41350e:	add    al,0xbf
  413510:	or     dh,ch
  413512:	aad    0xbb
  413514:	cmp    dh,BYTE PTR [esi]
  413516:	mov    edi,0x914dac83
  41351b:	imul   ebx,edi,0xffffffeb
  41351e:	push   edi
  41351f:	icebp  
  413520:	sar    DWORD PTR [esi],cl
  413522:	loop   0x4134c4
  413524:	test   al,0x38
  413526:	in     al,0x79
  413528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413529:	jmp    0x4b16:0xc8d78964
  413530:	cmp    eax,0xfb0185b2
  413535:	mov    ch,0xba
  413537:	test   eax,0x88a7cca8
  41353c:	or     al,0x19
  41353e:	enter  0xd8e,0x61
  413542:	mov    ch,0x29
  413544:	pop    eax
  413545:	(bad)  
  413546:	test   eax,0x177a3630
  41354b:	cli    
  41354c:	jb     0x4135ac
  41354e:	mov    ebp,0xbd7435e4
  413553:	and    edx,edi
  413555:	ins    DWORD PTR es:[edi],dx
  413556:	pop    ebp
  413557:	mov    cl,BYTE PTR [esi+edx*1]
  41355a:	ins    DWORD PTR es:[edi],dx
  41355b:	push   0xaef1cac
  413560:	mov    edi,DWORD PTR [edx]
  413562:	outs   dx,BYTE PTR ds:[esi]
  413563:	xor    esp,ecx
  413565:	mov    esp,gs
  413567:	mov    al,ds:0x8e757683
  41356c:	add    bh,ah
  41356e:	test   eax,0x1be0b758
  413573:	cwde   
  413574:	push   esi
  413575:	adc    edx,esp
  413577:	iret   
  413578:	push   esp
  413579:	int    0x8b
  41357b:	dec    BYTE PTR [ebp+0x71]
  41357e:	ficomp WORD PTR [esp+edi*8+0x2e]
  413582:	test   BYTE PTR ss:[eax+0x73],dh
  413586:	jbe    0x413516
  413588:	sbb    dl,BYTE PTR [esi+0x6]
  41358b:	pop    ebx
  41358c:	and    ebx,ebx
  41358e:	push   edi
  41358f:	or     al,0xec
  413591:	fs mov cl,0x22
  413594:	mov    edi,0xfab9f485
  413599:	xor    BYTE PTR [edi+0x3a4080eb],dh
  41359f:	adc    BYTE PTR [ebp+ebp*4-0x67cbd9c2],dh
  4135a6:	lea    ecx,[ebp+edx*1+0x8]
  4135aa:	loopne 0x4135fb
  4135ac:	adc    ebp,DWORD PTR [edx+0x1b]
  4135af:	and    eax,0x407b953
  4135b4:	dec    ecx
  4135b5:	push   eax
  4135b6:	mov    al,0x9a
  4135b8:	retf   0x9320
  4135bb:	prefetchw BYTE PTR [eax]
  4135be:	xchg   edx,eax
  4135bf:	je     0x135c6657
  4135c5:	mov    dl,0x19
  4135c7:	inc    esi
  4135c8:	jbe    0x4135a5
  4135ca:	dec    eax
  4135cb:	sbb    eax,0xf6ed77bf
  4135d0:	enter  0xea7,0x5a
  4135d4:	jbe    0x4135d1
  4135d6:	ins    DWORD PTR es:[edi],dx
  4135d7:	loope  0x413612
  4135d9:	dec    eax
  4135da:	cmp    al,0xdc
  4135dc:	aaa    
  4135dd:	or     esi,DWORD PTR [edi+0x9]
  4135e0:	jmp    0xf5e2a7fc
  4135e5:	add    BYTE PTR [edx],ah
  4135e7:	cs jge 0x41359b
  4135ea:	lods   al,BYTE PTR ds:[esi]
  4135eb:	or     DWORD PTR [edx+0x6b6bc78a],esi
  4135f1:	or     eax,DWORD PTR gs:[eax-0x2210e861]
  4135f8:	push   ebx
  4135f9:	inc    esi
  4135fa:	pop    ebx
  4135fb:	lods   eax,DWORD PTR ds:[esi]
  4135fc:	fnsave [edx]
  4135fe:	mov    WORD PTR [ecx-0x40d2064d],?
  413604:	mov    bl,0x15
  413606:	jl     0x41364c
  413608:	mov    dh,0xb1
  41360a:	rcl    DWORD PTR [eax+edx*4-0x72],0x8d
  41360f:	and    eax,0xedf3b193
  413614:	icebp  
  413615:	adc    al,0xfe
  413617:	loop   0x413612
  413619:	xchg   DWORD PTR ss:[esi],eax
  41361c:	jb     0x4135fd
  41361e:	inc    ecx
  41361f:	or     al,0x63
  413621:	pop    es
  413622:	loopne 0x4135b1
  413624:	mov    al,0x78
  413626:	and    BYTE PTR [eax],ah
  413628:	imul   edi,DWORD PTR [ecx+edx*8+0x16],0xd99c9046
  413630:	ja     0x41367c
  413632:	xor    eax,0x30856e2b
  413637:	bound  edx,QWORD PTR [ebx-0x4c]
  41363a:	cwde   
  41363b:	pop    es
  41363c:	fiadd  DWORD PTR [ebx+0x55cec73c]
  413642:	arpl   cx,bp
  413644:	mov    BYTE PTR [ebx],dl
  413646:	fbstp  TBYTE PTR [eax]
  413648:	or     dl,BYTE PTR [edx]
  41364a:	(bad)  
  41364b:	adc    eax,DWORD PTR [edi]
  41364d:	push   edi
  41364e:	lea    eax,[ebx]
  413650:	or     ch,bh
  413652:	daa    
  413653:	rcr    BYTE PTR [esi-0x17720830],0x26
  41365a:	pop    ss
  41365b:	fild   QWORD PTR [ebx-0x74]
  41365e:	jmp    FWORD PTR [ecx]
  413660:	jge    0x4135fb
  413662:	dec    ebx
  413663:	adc    al,0x48
  413665:	jecxz  0x413638
  413667:	push   ss
  413668:	adc    BYTE PTR [edi+ecx*1],bl
  41366b:	pop    ds
  41366c:	daa    
  41366d:	and    eax,0x2afce04c
  413672:	repnz xchg edx,eax
  413674:	and    DWORD PTR [eax+edx*1+0x5511764],ebx
  41367b:	fidiv  WORD PTR [esi]
  41367d:	into   
  41367e:	add    ah,BYTE PTR [ecx-0x756971bf]
  413684:	in     al,0xff
  413686:	lods   al,BYTE PTR ds:[esi]
  413687:	imul   ebp,DWORD PTR [edi],0x2b
  41368a:	fisubr DWORD PTR ds:0x401aba76
  413690:	mov    edi,DWORD PTR [ecx+edx*8+0x69911458]
  413697:	pop    edi
  413698:	pop    ebp
  413699:	mov    ds:0x5bdabeb4,al
  41369e:	pop    edx
  41369f:	jne    0x4136c6
  4136a1:	fs ja  0x413698
  4136a4:	xchg   ebp,eax
  4136a5:	mov    ds:0xe3a915b4,al
  4136aa:	sar    dl,0xa9
  4136ad:	jne    0x413655
  4136af:	fs leave 
  4136b1:	inc    eax
  4136b2:	mov    esi,0xdb6d9244
  4136b7:	les    eax,FWORD PTR [ecx-0x1635563c]
  4136bd:	jno    0x4136de
  4136bf:	lock mov bl,0xea
  4136c2:	jne    0x4136fb
  4136c4:	addr16 out 0xdb,al
  4136c7:	rcr    DWORD PTR [ebx-0x1],0x4e
  4136cb:	in     eax,dx
  4136cc:	fstp   DWORD PTR [ebx]
  4136ce:	dec    ebx
  4136cf:	stc    
  4136d0:	out    0x83,eax
  4136d2:	mov    dl,0x96
  4136d4:	mov    esp,0x4b9652ba
  4136d9:	adc    al,0x9
  4136db:	bnd jae 0x4136a8
  4136de:	idiv   DWORD PTR [eax-0x70]
  4136e1:	dec    edi
  4136e2:	adc    ah,BYTE PTR [esi+0xee0514f]
  4136e8:	aam    0xf7
  4136ea:	jns    0x41373f
  4136ec:	dec    edx
  4136ed:	xchg   edi,eax
  4136ee:	lock cmp edi,DWORD PTR [ecx-0x18]
  4136f2:	mov    dl,BYTE PTR [edx-0x1e]
  4136f5:	por    mm0,mm0
  4136f8:	fucomip st,st(3)
  4136fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136fb:	clc    
  4136fc:	(bad)  
  4136fd:	pop    ds
  4136fe:	test   eax,0xeeea8a5e
  413703:	leave  
  413704:	mov    ecx,0x9e4c0552
  413709:	mov    ch,BYTE PTR [esi]
  41370b:	xchg   BYTE PTR ds:0x45c8d712,dh
  413711:	xor    al,0x6e
  413713:	adc    BYTE PTR [edi-0x28f9b8ca],0xaa
  41371a:	push   ds
  41371b:	mov    WORD PTR [esi+0x5c],fs
  41371e:	push   edi
  41371f:	adc    ch,BYTE PTR [edx-0x31]
  413722:	xor    cl,BYTE PTR [eax+0x45]
  413725:	fwait
  413726:	mov    ds:0xda6f18ea,eax
  41372b:	cmp    BYTE PTR [eax],0x3d
  41372e:	add    al,0x5f
  413730:	imul   eax,DWORD PTR [ecx-0x3b],0x8
  413734:	xor    dl,0xcf
  413737:	ret    
  413738:	adc    ecx,DWORD PTR [ecx]
  41373a:	push   esp
  41373b:	popf   
  41373c:	in     eax,0x52
  41373e:	or     al,0xcf
  413740:	adc    bl,BYTE PTR [eax-0x2c]
  413743:	(bad)  
  413744:	jmp    0x4137c0
  413746:	stc    
  413747:	jb     0x413728
  413749:	int    0xf9
  41374b:	mov    DWORD PTR ds:0x40961817,edx
  413751:	xor    cl,bh
  413753:	data16 loop 0x413750
  413756:	xchg   edx,eax
  413757:	inc    ecx
  413758:	xchg   ebx,eax
  413759:	retf   
  41375a:	push   esp
  41375b:	repnz pop ebp
  41375d:	les    esp,FWORD PTR ds:0xd85c5cd2
  413763:	jae    0x4136f9
  413765:	push   esp
  413766:	hlt    
  413767:	xchg   edx,eax
  413768:	mov    DWORD PTR [ecx+0x5718f5e0],ecx
  41376e:	popf   
  41376f:	add    ebp,ecx
  413771:	inc    eax
  413772:	inc    esi
  413773:	imul   eax,DWORD PTR [esi],0x9d17cc1b
  413779:	dec    ebp
  41377a:	push   esp
  41377b:	fldcw  WORD PTR [ebx]
  41377d:	repz aas 
  41377f:	lock sbb BYTE PTR [edx-0x2f],bh
  413783:	mov    ebp,0x988755f0
  413788:	add    DWORD PTR [ebx+0x4313e5ec],esi
  41378e:	mov    esp,0xeb6e048d
  413793:	icebp  
  413794:	add    al,dh
  413796:	lods   al,BYTE PTR ds:[esi]
  413797:	dec    esp
  413798:	mov    dh,0x12
  41379a:	xchg   DWORD PTR [edx-0x4231e213],esi
  4137a0:	in     al,0xbd
  4137a2:	xchg   esp,eax
  4137a3:	xor    BYTE PTR [eax-0x66],dl
  4137a6:	fisubr DWORD PTR [ecx+eax*2-0x2a]
  4137aa:	inc    eax
  4137ab:	(bad)  
  4137ac:	mov    bh,BYTE PTR [ecx+0x3b4b6131]
  4137b2:	jecxz  0x413747
  4137b4:	mov    dh,0x96
  4137b6:	cdq    
  4137b7:	daa    
  4137b8:	ror    BYTE PTR [ebx+0x5635ecc6],1
  4137be:	cs enter 0x2801,0x18
  4137c3:	or     ebp,DWORD PTR ds:0xbe3686f1
  4137c9:	add    al,0x6f
  4137cb:	fwait
  4137cc:	clc    
  4137cd:	mov    dh,0xc4
  4137cf:	mov    al,0x87
  4137d1:	mov    dh,0x64
  4137d3:	das    
  4137d4:	sbb    al,0x8f
  4137d6:	xchg   al,dl
  4137d8:	inc    BYTE PTR [ebx]
  4137da:	cmp    DWORD PTR [ebp-0x4f210b96],esp
  4137e0:	rol    ch,0x38
  4137e3:	popf   
  4137e4:	sbb    eax,0x8bce631c
  4137e9:	lock mov ch,0xc
  4137ec:	frstor [edx+0x4923487]
  4137f2:	jle    0x4137d7
  4137f4:	ret    0x7b89
  4137f7:	shl    BYTE PTR [eax-0x3dec2886],0x33
  4137fe:	adc    DWORD PTR [edx+ebp*1+0x15],edi
  413802:	xor    esi,edi
  413804:	pop    es
  413805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413806:	push   esi
  413807:	cld    
  413808:	push   cs
  413809:	or     al,0xdd
  41380b:	fmul   DWORD PTR [eax+0x1def34f9]
  413811:	add    dh,BYTE PTR [edx]
  413813:	repz (bad) 
  413815:	sbb    BYTE PTR [ebp-0x50],dl
  413818:	neg    BYTE PTR [eax-0x730ecead]
  41381e:	fnstsw WORD PTR [ecx+0x11769d62]
  413824:	adc    BYTE PTR [edi+ebp*4],bh
  413827:	push   DWORD PTR [eax-0x7fcbe088]
  41382d:	jne    0x413810
  41382f:	xchg   edx,eax
  413830:	mov    ss,WORD PTR [esi]
  413832:	shr    BYTE PTR [ecx],1
  413834:	in     eax,0x46
  413836:	or     DWORD PTR [ecx],0x6c2709a4
  41383c:	adc    al,BYTE PTR [eax]
  41383e:	or     dl,0x76
  413841:	rcr    BYTE PTR [esi+0x2baab836],cl
  413847:	xor    BYTE PTR [ebx*1+0x56b45053],0x4b
  41384f:	bound  ecx,QWORD PTR [edx-0x22e38eae]
  413855:	test   al,0xd4
  413857:	leave  
  413858:	sti    
  413859:	mov    cl,0x4c
  41385b:	mov    bh,0xac
  41385d:	pushf  
  41385e:	mov    al,0xd
  413860:	pusha  
  413861:	add    DWORD PTR [esp+esi*2-0x67b16e4d],ecx
  413868:	jg     0x413802
  41386a:	ss push edi
  41386c:	and    BYTE PTR [ecx-0x397cb398],0x13
  413873:	cmc    
  413874:	jg     0x413803
  413876:	test   al,0x43
  413878:	fist   DWORD PTR [edi+ebx*2]
  41387b:	mov    ah,BYTE PTR [esi-0x176241d7]
  413881:	test   eax,0xe8381b90
  413886:	sbb    DWORD PTR [edi+ebp*4],edx
  413889:	ret    0xa740
  41388c:	jae    0x4138c3
  41388e:	cli    
  41388f:	je     0x413895
  413891:	(bad)  
  413893:	add    al,0x50
  413895:	xchg   BYTE PTR [ebp-0x66],ah
  413898:	mov    edx,0x193af09e
  41389d:	add    ecx,DWORD PTR [ecx+0x63]
  4138a0:	pop    ss
  4138a1:	pop    esi
  4138a2:	lods   eax,DWORD PTR gs:[esi]
  4138a4:	imul   ecx,DWORD PTR [edi-0x3fde0e08],0x61
  4138ab:	and    ah,BYTE PTR [esp+edx*1]
  4138ae:	pop    esp
  4138af:	mov    BYTE PTR [esi-0x40],bl
  4138b2:	sub    esp,DWORD PTR [ebx+0x75b10be7]
  4138b8:	iret   
  4138b9:	mov    esi,0x8e050925
  4138be:	pop    eax
  4138bf:	std    
  4138c0:	pop    ss
  4138c1:	loop   0x413931
  4138c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138c4:	push   cs
  4138c5:	mov    ds:0xe6261375,al
  4138ca:	add    esi,DWORD PTR gs:[esi]
  4138cd:	inc    ecx
  4138ce:	or     DWORD PTR [edx-0x17],ecx
  4138d1:	fcmovb st,st(4)
  4138d3:	cmp    bl,BYTE PTR [edx+0x77613434]
  4138d9:	imul   esp,ebp,0xab3c3870
  4138df:	(bad)  
  4138e0:	shl    DWORD PTR [edx+ebp*4-0x23],1
  4138e4:	adc    DWORD PTR [eax+0x6420dfd9],ebx
  4138ea:	and    al,0x88
  4138ed:	mov    dl,0x6f
  4138ef:	adc    eax,0x87898c8d
  4138f4:	and    BYTE PTR [edi-0xd2985be],bl
  4138fa:	int3   
  4138fb:	xchg   BYTE PTR [esi-0x7b2b58e8],bl
  413901:	cmp    al,BYTE PTR ss:[ecx+eax*4]
  413905:	mov    ch,BYTE PTR [eax+0x1ca167c1]
  41390b:	mov    ch,ch
  41390d:	push   ebx
  41390e:	jge    0x41396d
  413910:	je     0x413909
  413912:	addr16 mov ah,0x79
  413915:	xadd   BYTE PTR [ebx+edx*8],cl
  413919:	and    BYTE PTR [edx+ecx*8-0x56058fce],dl
  413920:	mov    ecx,0x2457ecd9
  413925:	jmp    0xc483:0xbcf5eb6c
  41392c:	inc    edx
  41392d:	arpl   WORD PTR [eax+esi*4+0x6dfbbe47],bx
  413934:	adc    DWORD PTR ds:0x3825e016,ebx
  41393a:	mov    edi,0x7ece52ee
  41393f:	jmp    0x4138d3
  413941:	out    0x88,eax
  413943:	mov    ecx,0x3184b5b9
  413948:	loopne 0x4138db
  41394a:	int    0x4f
  41394c:	mov    bl,0x33
  41394e:	ins    BYTE PTR es:[edi],dx
  41394f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413950:	ins    BYTE PTR es:[edi],dx
  413951:	lods   al,BYTE PTR ds:[esi]
  413952:	push   edx
  413953:	jb     0x41395f
  413955:	data16 add al,0xcf
  413958:	mul    DWORD PTR [ebx+0x26ec93cc]
  41395e:	xchg   BYTE PTR [eax],al
  413960:	aas    
  413961:	xor    cl,BYTE PTR [edx-0x4e879096]
  413967:	dec    ecx
  413968:	ret    0x4826
  41396b:	popf   
  41396c:	pop    esi
  41396d:	imul   edx,DWORD PTR [ebx-0x626980cd],0xd40027a8
  413977:	push   es
  413978:	das    
  413979:	mov    dh,0x41
  41397b:	ss jb  0x4139d5
  41397e:	pusha  
  41397f:	jl     0x413913
  413981:	sub    DWORD PTR [ecx],ebx
  413983:	ss inc ecx
  413985:	push   ss
  413986:	mov    esi,0x6dadb923
  41398b:	scas   al,BYTE PTR es:[edi]
  41398c:	push   ebx
  41398d:	cwde   
  41398e:	sbb    al,0x19
  413990:	cmp    ch,BYTE PTR [edi-0x68]
  413993:	lea    edi,[ebx]
  413995:	xchg   BYTE PTR [edi],ch
  413997:	or     DWORD PTR [ecx],esi
  413999:	and    al,BYTE PTR ds:0xc14fc2dd
  41399f:	arpl   bp,cx
  4139a1:	xor    al,0x8
  4139a3:	xor    bh,bh
  4139a5:	ss es jb 0x413962
  4139a9:	xor    eax,esp
  4139ab:	pusha  
  4139ac:	or     DWORD PTR [edx-0x48a46265],esi
  4139b2:	xlat   BYTE PTR ds:[ebx]
  4139b3:	int    0xd9
  4139b5:	mov    dl,0x6e
  4139b7:	inc    ebp
  4139b8:	aam    0x20
  4139ba:	push   es
  4139bb:	sbb    al,dh
  4139bd:	adc    DWORD PTR [esi],ebp
  4139bf:	out    dx,eax
  4139c0:	jbe    0x4139dc
  4139c2:	dec    eax
  4139c3:	cmp    al,bh
  4139c5:	ins    DWORD PTR es:[edi],dx
  4139c6:	mov    bl,0x64
  4139c8:	es cmc 
  4139ca:	or     eax,0xd664478b
  4139cf:	sub    edi,DWORD PTR [ebx]
  4139d1:	lock cmp al,0x83
  4139d4:	cmp    ah,BYTE PTR [ecx+edi*8-0x6a]
  4139d8:	adc    ebp,DWORD PTR [edx]
  4139da:	hlt    
  4139db:	inc    edx
  4139dc:	xchg   edx,eax
  4139dd:	sbb    BYTE PTR [edi],ah
  4139df:	sbb    BYTE PTR [esi-0x70d6b5e3],dh
  4139e5:	mov    edx,0xb2d96a0d
  4139ea:	out    0x7b,al
  4139ec:	mov    esi,0x1f9ebe81
  4139f1:	(bad)  
  4139f2:	lock jle 0x413a57
  4139f5:	ds inc ebp
  4139f7:	jb     0x4139ba
  4139f9:	xchg   DWORD PTR [edi+0x31],ebp
  4139fc:	lock test eax,0x81dd872e
  413a02:	cmp    dh,BYTE PTR [edi+0x6fbbf06d]
  413a08:	and    ecx,DWORD PTR [esi-0x7a0a7bc8]
  413a0e:	jae    0x413a13
  413a10:	or     eax,DWORD PTR [eax-0x39]
  413a13:	cmp    al,0x3f
  413a15:	jmp    0x6b89b737
  413a1a:	or     al,0xe6
  413a1c:	fist   WORD PTR [ecx+ebp*2-0x14939ea7]
  413a23:	add    al,0x8
  413a25:	jo     0x4139c8
  413a27:	mov    al,ds:0x8fbe367
  413a2c:	leave  
  413a2d:	cmp    DWORD PTR [ebx],ebx
  413a2f:	daa    
  413a30:	sar    BYTE PTR [edx+0xa953dbd],0x28
  413a37:	inc    ebp
  413a38:	ss popa 
  413a3a:	and    al,0x79
  413a3c:	sbb    DWORD PTR gs:[eax-0x59],eax
  413a40:	shl    ah,1
  413a42:	or     al,0x40
  413a44:	sbb    al,0x71
  413a46:	add    ah,0x8d
  413a49:	and    eax,0x358b057b
  413a4e:	push   ebx
  413a4f:	aad    0xba
  413a51:	or     cl,bh
  413a53:	in     eax,dx
  413a54:	mov    BYTE PTR ds:0x50cf184c,al
  413a5a:	sbb    ecx,DWORD PTR [eax-0x2118150e]
  413a60:	repnz or al,0xee
  413a63:	pop    edx
  413a64:	ja     0x4139f5
  413a66:	jmp    FWORD PTR [ebp+0x67]
  413a69:	aad    0x22
  413a6b:	arpl   WORD PTR [ebx-0x4d],di
  413a6e:	sbb    bl,cl
  413a70:	mov    bh,0xee
  413a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a73:	dec    eax
  413a74:	in     eax,dx
  413a75:	ss pop ebx
  413a77:	pop    edi
  413a78:	repnz sub al,bl
  413a7b:	cmp    DWORD PTR [ebx],ebp
  413a7d:	mov    eax,0x70ddc7df
  413a82:	jo     0x413a85
  413a84:	and    al,0x5
  413a86:	cli    
  413a87:	frstor [edx]
  413a89:	test   DWORD PTR [ebx+0x27],ebp
  413a8c:	(bad)  
  413a8d:	mov    ebx,0xa2b9b160
  413a92:	adc    edi,DWORD PTR [esi]
  413a94:	fsub   QWORD PTR [ebp+0x1a]
  413a97:	(bad)  
  413a98:	std    
  413a99:	inc    eax
  413a9a:	arpl   WORD PTR [ebx+0x355728e2],di
  413aa0:	mov    DWORD PTR [eax],ecx
  413aa2:	rol    DWORD PTR [edi],1
  413aa4:	mov    ebx,0xa1ccaeed
  413aa9:	inc    edi
  413aaa:	clc    
  413aab:	xor    al,0x7c
  413aad:	sbb    dh,dh
  413aaf:	push   0x25
  413ab1:	test   BYTE PTR [ebp+0x1f8a7d4d],bh
  413ab7:	frstor [edi-0x4d5f32b2]
  413abd:	in     al,dx
  413abe:	push   esp
  413abf:	loopne 0x413aba
  413ac1:	sar    edx,1
  413ac3:	dec    edx
  413ac4:	add    bl,0xfd
  413ac7:	cmp    cl,bl
  413ac9:	add    esp,esi
  413acb:	loopne 0x413aa7
  413acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ace:	mov    dl,0x44
  413ad0:	sub    BYTE PTR [ebp-0x22],cl
  413ad3:	push   edi
  413ad4:	cli    
  413ad5:	sahf   
  413ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ad7:	out    0xb3,al
  413ad9:	sub    al,0x9e
  413adb:	in     al,dx
  413adc:	add    DWORD PTR ds:0x2ff9e0d1,eax
  413ae2:	arpl   bx,bx
  413ae4:	or     eax,0x9c3b9b56
  413ae9:	inc    ebx
  413aea:	pusha  
  413aeb:	mov    ecx,0x701b0316
  413af0:	push   0x9e3e8770
  413af5:	not    DWORD PTR [ecx-0x6e]
  413af8:	push   ebx
  413af9:	dec    ebp
  413afa:	loop   0x413a80
  413afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413afd:	xchg   ecx,eax
  413afe:	adc    DWORD PTR [eax+0x4f],ebp
  413b01:	jg     0x413b18
  413b03:	imul   ebp,DWORD PTR [ecx],0xfe2305
  413b09:	psraw  mm6,mm6
  413b0c:	jno    0x413b4c
  413b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b0f:	add    ch,BYTE PTR [esi+0x35e8431d]
  413b15:	fwait
  413b16:	jnp    0x413af4
  413b18:	fld    DWORD PTR [ebp-0x58163e32]
  413b1e:	xor    DWORD PTR [edi-0x13],eax
  413b21:	fbstp  TBYTE PTR ds:0x9a90de9f
  413b27:	ins    BYTE PTR es:[edi],dx
  413b28:	fld    TBYTE PTR [ecx]
  413b2a:	push   esp
  413b2b:	fs pop eax
  413b2d:	add    BYTE PTR [ebp+0x5b],0x8f
  413b31:	rcr    al,1
  413b33:	cmc    
  413b34:	les    eax,FWORD PTR [ebp+0x61]
  413b37:	xchg   esp,eax
  413b38:	loope  0x413af6
  413b3a:	into   
  413b3b:	xchg   edx,eax
  413b3c:	xor    edi,DWORD PTR [ecx-0x40]
  413b3f:	and    esp,edx
  413b41:	sbb    edx,ebp
  413b43:	ficomp WORD PTR [edx+0x60521e19]
  413b49:	aas    
  413b4a:	sti    
  413b4b:	or     BYTE PTR [ecx+0x50],cl
  413b4e:	mov    eax,0x5b00b3ac
  413b53:	dec    ecx
  413b54:	test   DWORD PTR [ebp-0x2a],ecx
  413b57:	stc    
  413b58:	xor    BYTE PTR [ebp+0x31],bl
  413b5b:	lock mov ebp,0x82beda62
  413b61:	dec    esp
  413b62:	mov    ebx,0x63096c6a
  413b67:	pop    ebp
  413b68:	or     edi,DWORD PTR [edx]
  413b6a:	out    0x16,eax
  413b6c:	fsubr  DWORD PTR [edi+0x264df073]
  413b72:	jg     0x413b4f
  413b74:	pop    es
  413b75:	push   ebp
  413b76:	mov    ah,0x39
  413b78:	cli    
  413b79:	icebp  
  413b7a:	or     al,0x76
  413b7c:	push   0x206ccdb5
  413b81:	jae    0x413bd4
  413b83:	pop    ebx
  413b84:	sbb    al,0xb6
  413b86:	jg     0x413c00
  413b88:	inc    ebp
  413b89:	xlat   BYTE PTR ds:[ebx]
  413b8a:	in     eax,0x89
  413b8c:	add    esp,ebx
  413b8e:	and    eax,DWORD PTR [ebx+0x59675891]
  413b94:	int3   
  413b95:	call   0x759f:0x796335db
  413b9c:	push   cs
  413b9d:	aaa    
  413b9e:	xchg   BYTE PTR [ebx-0x5f26fe58],ah
  413ba4:	cmp    ebx,edi
  413ba6:	fldenv [esi-0x1a]
  413ba9:	mov    dh,0xd1
  413bab:	mov    WORD PTR ss:[eax+0x63ff469a],ss
  413bb2:	(bad)  
  413bb3:	xor    BYTE PTR [esi+0x3e],bh
  413bb6:	and    ah,BYTE PTR [ebp-0x6f9e040e]
  413bbc:	and    DWORD PTR [ebx+edi*1],0x3f
  413bc0:	push   edi
  413bc1:	in     eax,0xb7
  413bc3:	or     al,0x97
  413bc5:	imul   esi,ebp,0x55
  413bc8:	leave  
  413bc9:	cmp    DWORD PTR [ebp-0x55],esp
  413bcc:	push   ecx
  413bcd:	test   BYTE PTR fs:[eax-0x12],bh
  413bd1:	sahf   
  413bd2:	xor    eax,0xccf41719
  413bd7:	je     0x413b95
  413bd9:	push   ss
  413bda:	mov    eax,0x9520208b
  413bdf:	adc    DWORD PTR [ebp-0x1b],ebp
  413be2:	scas   al,BYTE PTR es:[edi]
  413be3:	stc    
  413be4:	mov    esp,DWORD PTR [eax]
  413be6:	xchg   DWORD PTR [ebp+0x76dbaa6d],ebp
  413bec:	mov    dh,0x70
  413bee:	xor    BYTE PTR [ebx-0x1e],bh
  413bf1:	and    cl,ah
  413bf3:	repnz inc ebp
  413bf5:	sbb    ah,BYTE PTR [edx+ebp*8+0x27]
  413bf9:	mov    bh,0x8f
  413bfb:	mov    BYTE PTR [edi+0x5],ch
  413bfe:	push   es
  413bff:	cs loopne 0x413bf0
  413c02:	(bad)  
  413c04:	add    BYTE PTR ds:0xd1288c35,dh
  413c0a:	fs in  eax,0x31
  413c0d:	add    eax,0xb7c01a49
  413c12:	fistp  QWORD PTR ds:0xa2e94eb0
  413c18:	fild   DWORD PTR [edi+eiz*8+0x659bb06e]
  413c1f:	pop    eax
  413c20:	ficom  DWORD PTR [eax]
  413c22:	out    0x86,eax
  413c24:	add    eax,0x5e20ff40
  413c29:	push   0x436d5a6
  413c2e:	xchg   edx,eax
  413c2f:	aas    
  413c30:	cdq    
  413c31:	leave  
  413c32:	bound  edx,QWORD PTR [ecx+eiz*8+0x6f]
  413c36:	push   eax
  413c37:	(bad)  
  413c38:	pop    ebx
  413c39:	or     eax,0xd5ced13
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	inc    bp
  413c41:	push   edx
  413c42:	mov    dl,ch
  413c44:	add    dl,dl
  413c46:	rcl    bh,0xc5
  413c49:	inc    eax
  413c4a:	add    bl,cl
  413c4c:	(bad)  
  413c4d:	jno    0x413cad
  413c4f:	push   eax
  413c50:	push   edi
  413c51:	lahf   
  413c52:	jecxz  0x413cba
  413c54:	lods   eax,DWORD PTR ds:[esi]
  413c55:	pop    eax
  413c56:	and    ecx,DWORD PTR [ecx-0x8]
  413c59:	(bad)  
  413c5b:	jge    0x413beb
  413c5d:	ins    BYTE PTR es:[edi],dx
  413c5e:	adc    ecx,edi
  413c60:	leave  
  413c61:	fsub   DWORD PTR ds:0xca28e48f
  413c67:	inc    ebp
  413c68:	mov    dl,BYTE PTR [ebx-0x3e7897be]
  413c6e:	xor    DWORD PTR [edi+0x8],eax
  413c71:	push   ebx
  413c72:	xor    edx,edi
  413c74:	add    BYTE PTR [edx-0x615f748a],0xfa
  413c7b:	pop    ds
  413c7c:	loope  0x413c53
  413c7e:	dec    ecx
  413c7f:	add    al,BYTE PTR [ebx+0x56]
  413c82:	or     BYTE PTR [ecx],0xfe
  413c85:	fwait
  413c86:	push   0xeab69a7e
  413c8b:	stos   BYTE PTR es:[edi],al
  413c8c:	cmp    BYTE PTR [esi+ebp*1],0xf7
  413c90:	pop    ebx
  413c91:	ins    DWORD PTR es:[edi],dx
  413c92:	mov    eax,DWORD PTR [esi-0x25]
  413c95:	or     eax,0x52d684ca
  413c9a:	inc    ebp
  413c9b:	call   0x19c1:0x3ca81e78
  413ca2:	(bad)  
  413ca3:	ins    BYTE PTR es:[edi],dx
  413ca4:	add    BYTE PTR [ecx-0x53],bl
  413ca7:	add    bl,cl
  413ca9:	add    eax,0x9a6ca07
  413cae:	stos   DWORD PTR es:[edi],eax
  413caf:	sbb    DWORD PTR [ebp+0x32],0xffffffbb
  413cb3:	lock (bad) 
  413cb5:	out    0x49,eax
  413cb7:	mov    al,0x71
  413cb9:	and    edx,esi
  413cbb:	xchg   BYTE PTR [ebx],ah
  413cbd:	push   cs
  413cbe:	xchg   ebx,eax
  413cbf:	xor    DWORD PTR [esi],eax
  413cc1:	mov    al,0x87
  413cc3:	pop    eax
  413cc4:	outs   dx,DWORD PTR ds:[esi]
  413cc5:	adc    edx,DWORD PTR [edx+0x3b]
  413cc8:	ds pop ss
  413cca:	fisub  DWORD PTR [edx]
  413ccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ccd:	inc    edi
  413cce:	pop    ebx
  413ccf:	mov    DWORD PTR [ebx+0xb23776f],edx
  413cd5:	mov    al,0x8b
  413cd7:	push   0xffffffd7
  413cd9:	sub    DWORD PTR [eax],eax
  413cdb:	loope  0x413d40
  413cdd:	sub    ebx,DWORD PTR [eax-0x4a]
  413ce0:	add    al,0x9f
  413ce2:	xchg   ecx,eax
  413ce3:	imul   eax,eax,0xb621ed78
  413ce9:	mov    eax,0x8db5b0f7
  413cee:	js     0x413d53
  413cf0:	stc    
  413cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf2:	sbb    eax,0x71a7c427
  413cf7:	mov    ?,WORD PTR [ebx]
  413cf9:	adc    ah,BYTE PTR [ebx]
  413cfb:	sahf   
  413cfc:	dec    ecx
  413cfd:	ins    DWORD PTR es:[edi],dx
  413cfe:	repz aaa 
  413d00:	repz out 0xd5,eax
  413d03:	add    DWORD PTR [esi],0x3dab0fe5
  413d09:	stos   DWORD PTR es:[edi],eax
  413d0a:	in     eax,dx
  413d0b:	push   cs
  413d0c:	jge    0x413d51
  413d0e:	push   ecx
  413d0f:	fcmovne st,st(6)
  413d11:	jnp    0x413d0d
  413d13:	es sbb al,0x95
  413d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d17:	adc    dl,BYTE PTR [eax-0x69028a18]
  413d1d:	mov    al,0xdd
  413d1f:	daa    
  413d20:	xchg   ebx,eax
  413d21:	and    dh,BYTE PTR [ecx+0x27173a2d]
  413d27:	adc    bh,cl
  413d29:	xor    BYTE PTR [ebp+0x1f],0x33
  413d2d:	shl    BYTE PTR [edx+0x5],0x95
  413d31:	(bad)  
  413d33:	lock clc 
  413d35:	push   0x7f225e67
  413d3a:	xor    eax,0x88a25cff
  413d3f:	sahf   
  413d40:	fs fdivp st(1),st
  413d43:	mov    esp,?
  413d45:	jecxz  0x413d97
  413d47:	pop    edi
  413d48:	hlt    
  413d49:	mov    ?,eax
  413d4b:	fcom   DWORD PTR [edx-0x39]
  413d4e:	cmp    BYTE PTR [edx],al
  413d50:	scas   al,BYTE PTR es:[edi]
  413d51:	retf   0x68ae
  413d54:	add    DWORD PTR [ecx+0x3f],ebx
  413d57:	push   es
  413d58:	(bad)  
  413d59:	bnd jns 0x413d7c
  413d5c:	xchg   esp,eax
  413d5d:	cmp    dh,BYTE PTR [eax+0x34]
  413d60:	in     al,dx
  413d61:	call   0xbff5:0x24a80574
  413d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d69:	ins    DWORD PTR es:[edi],dx
  413d6a:	push   0xffffffab
  413d6c:	jg     0x413d92
  413d6e:	xchg   ebp,eax
  413d6f:	and    ebx,DWORD PTR [eax+0x6]
  413d72:	fistp  WORD PTR [eax]
  413d74:	out    dx,al
  413d75:	adc    esi,edx
  413d77:	inc    ecx
  413d78:	dec    ebx
  413d79:	mov    DWORD PTR [edx+0x61],ebx
  413d7c:	pop    ss
  413d7d:	jp     0x413d80
  413d7f:	mov    ds,esi
  413d81:	addr16 xor edi,eax
  413d84:	out    0xe4,eax
  413d86:	dec    ecx
  413d87:	and    al,0xf8
  413d89:	inc    edi
  413d8a:	aas    
  413d8b:	push   ecx
  413d8c:	push   esi
  413d8d:	jp     0x413d15
  413d8f:	sahf   
  413d90:	data16 arpl dx,si
  413d93:	pop    ebx
  413d94:	or     eax,0xde4f43fb
  413d99:	fs jecxz 0x413de3
  413d9c:	mov    bl,0x88
  413d9e:	push   es
  413d9f:	retf   0x5950
  413da2:	rol    DWORD PTR [eax],cl
  413da4:	xchg   DWORD PTR [ecx+0x2c4b130e],ebx
  413daa:	and    ecx,DWORD PTR [ebx+0x3430fd52]
  413db0:	mov    edx,0x8390751a
  413db5:	into   
  413db6:	mov    ds:0xaf6785cd,eax
  413dbb:	fs loop 0x413d5a
  413dbe:	popa   
  413dbf:	fdivr  QWORD PTR ds:0x19bc0fcd
  413dc5:	dec    ebx
  413dc6:	gs dec edx
  413dc8:	sbb    eax,0xd96cc86d
  413dcd:	cmp    DWORD PTR [eax+ecx*8+0x2e],ebx
  413dd1:	sbb    eax,0xed9c347a
  413dd6:	pushf  
  413dd7:	pop    ecx
  413dd8:	and    ecx,DWORD PTR [eax]
  413dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ddb:	sahf   
  413ddc:	in     al,dx
  413ddd:	mov    eax,0xe988ff68
  413de2:	cs jge 0x413dae
  413de5:	xchg   DWORD PTR [ebp-0x12],ebx
  413de8:	mov    edi,0xc783d097
  413ded:	xor    dh,BYTE PTR [edi]
  413def:	leave  
  413df0:	jmp    0x64b:0x62107843
  413df7:	popf   
  413df8:	xor    bl,ah
  413dfa:	mov    eax,ds:0xe7a97ed2
  413dff:	xchg   edi,eax
  413e00:	mov    bl,BYTE PTR [esi]
  413e02:	enter  0xdcd8,0x45
  413e06:	pop    ss
  413e07:	mov    ds:0x16ce491e,eax
  413e0c:	repnz mov eax,ds:0xccad6300
  413e12:	push   edi
  413e13:	inc    ebx
  413e14:	sbb    bl,BYTE PTR [esp+0x55]
  413e18:	push   ds
  413e19:	outs   dx,DWORD PTR ds:[esi]
  413e1a:	jb     0x6cc07150
  413e20:	(bad)  
  413e21:	dec    ebp
  413e22:	cmp    edi,0xa0e3b944
  413e28:	int    0x35
  413e2a:	fstp   DWORD PTR [edx]
  413e2c:	sub    al,0x30
  413e2e:	fisubr DWORD PTR [ecx+eax*1]
  413e31:	nop
  413e32:	icebp  
  413e33:	add    eax,DWORD PTR [eax+0x7bc3ec63]
  413e39:	enter  0xa59c,0xc
  413e3d:	xor    eax,0x2d6fb8d3
  413e42:	lock adc eax,0x980aac6f
  413e48:	xchg   ebp,eax
  413e49:	add    BYTE PTR [edx-0x30],bl
  413e4c:	retf   0xc2b9
  413e4f:	pop    esi
  413e50:	sub    eax,DWORD PTR [esi+0x31b6174a]
  413e56:	retf   
  413e57:	cmc    
  413e58:	rcl    DWORD PTR [esi],1
  413e5a:	inc    esp
  413e5b:	add    dl,BYTE PTR [edi+ebx*4]
  413e5e:	stos   BYTE PTR es:[edi],al
  413e5f:	cmp    al,0xcc
  413e61:	dec    dx
  413e63:	fwait
  413e64:	(bad)  
  413e65:	fdiv   QWORD PTR [ebp+ebp*2+0x38f33a82]
  413e6c:	mov    cl,ch
  413e6e:	lahf   
  413e6f:	mov    ecx,0x4ba681e5
  413e74:	sub    eax,DWORD PTR [esi-0x4d854e8d]
  413e7a:	push   cs
  413e7b:	shl    DWORD PTR [ebp+0x46],cl
  413e7e:	popa   
  413e7f:	jmp    0x1257:0xe0909a7f
  413e86:	lods   eax,DWORD PTR ds:[esi]
  413e87:	sbb    dl,ch
  413e89:	mov    dh,BYTE PTR [ecx]
  413e8b:	shr    bl,cl
  413e8d:	retf   0x170f
  413e90:	or     al,BYTE PTR [edx-0x41]
  413e93:	mov    dh,0x82
  413e95:	mov    esp,0x8fd2ec8b
  413e9a:	jp     0x413ee1
  413e9c:	(bad)  
  413e9d:	xchg   edx,eax
  413e9e:	jmp    edi
  413ea0:	push   DWORD PTR [ecx+ecx*4]
  413ea3:	psubsb mm2,QWORD PTR [ebx]
  413ea6:	push   esi
  413ea7:	cs je  0x413e85
  413eaa:	jmp    0xa1723a81
  413eaf:	out    0x7e,eax
  413eb1:	inc    ebp
  413eb2:	jns    0x413e86
  413eb4:	repz add bh,0xbb
  413eb8:	mov    bl,0xe2
  413eba:	lods   al,BYTE PTR ds:[esi]
  413ebb:	jmp    0x9b7b:0x715296ac
  413ec2:	inc    esp
  413ec3:	enter  0xfae3,0x4e
  413ec7:	cmp    DWORD PTR [esi+0x5a],ebx
  413eca:	(bad)  
  413ecb:	lea    ebp,[edx+esi*4]
  413ece:	mov    dh,0x85
  413ed0:	fdivr  DWORD PTR [ecx-0x48]
  413ed3:	and    DWORD PTR [edi-0x5554e78],esi
  413ed9:	dec    eax
  413eda:	mov    dh,0x67
  413edc:	pop    ss
  413edd:	pop    esp
  413ede:	leave  
  413edf:	xor    esp,DWORD PTR [ebx+0x4af282ba]
  413ee5:	jo     0x413f50
  413ee7:	inc    ecx
  413ee8:	mov    ds:0xb1eb6c45,eax
  413eed:	xor    dh,ch
  413eef:	stc    
  413ef0:	push   eax
  413ef1:	stc    
  413ef2:	cmp    al,0x19
  413ef4:	and    al,0x3e
  413ef6:	fcomp  QWORD PTR [ecx+0x46d9687f]
  413efc:	xlat   BYTE PTR ds:[ebx]
  413efd:	xchg   esp,eax
  413efe:	mov    ds:0xeb94618f,eax
  413f03:	mov    bl,0x1f
  413f05:	push   es
  413f06:	int3   
  413f07:	mov    ecx,0xfbd91c7e
  413f0c:	inc    edi
  413f0d:	push   ebx
  413f0e:	in     al,dx
  413f0f:	scas   al,BYTE PTR es:[edi]
  413f10:	jmp    0x6f6be20a
  413f15:	pusha  
  413f16:	cli    
  413f17:	add    ch,BYTE PTR [esi+0x2902c254]
  413f1d:	call   0x9b03f432
  413f22:	adc    bh,BYTE PTR [ecx+0x2152e7a6]
  413f28:	xor    DWORD PTR [eax-0x3bc46118],esi
  413f2e:	jl     0x413ec4
  413f30:	dec    esp
  413f31:	out    dx,al
  413f32:	ret    0xe5e8
  413f35:	aaa    
  413f36:	dec    ebp
  413f38:	cld    
  413f39:	outs   dx,BYTE PTR ds:[esi]
  413f3a:	int3   
  413f3b:	loop   0x413ebe
  413f3d:	mov    ds:0xb3e3fe54,al
  413f42:	mov    dl,0xa1
  413f44:	test   esi,edx
  413f46:	iret   
  413f47:	sub    eax,0xfc8a2c1d
  413f4c:	add    eax,0x435a378a
  413f51:	xor    al,BYTE PTR [ebx-0x44]
  413f54:	in     al,0xb5
  413f56:	pop    esp
  413f57:	(bad)  
  413f58:	mov    ebp,0xa019af85
  413f5d:	mov    WORD PTR [ebx+0x57],fs
  413f60:	jp     0x413fa3
  413f62:	sbb    eax,0xf4fef5d2
  413f67:	and    eax,ebp
  413f69:	xchg   ebp,eax
  413f6a:	push   ds
  413f6b:	jmp    0x6f85beca
  413f70:	and    al,0xa9
  413f72:	sub    DWORD PTR [eiz*4-0x620dbeea],edi
  413f79:	pop    esi
  413f7a:	inc    esi
  413f7b:	pushf  
  413f7c:	pop    ecx
  413f7d:	mov    eax,0x263b904a
  413f82:	mov    ch,bh
  413f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f85:	mov    edx,0x22e763d8
  413f8a:	mov    ah,0xa5
  413f8c:	mov    ebp,0xc981dded
  413f91:	jnp    0x413f4c
  413f93:	inc    edx
  413f94:	sbb    esi,DWORD PTR [edi]
  413f96:	clc    
  413f97:	sbb    BYTE PTR ds:0x57a0f059,cl
  413f9d:	mov    bl,0x32
  413f9f:	(bad)  
  413fa0:	adc    eax,0x3e84ad7e
  413fa5:	loope  0x413f5f
  413fa7:	jo     0x413f65
  413fa9:	hlt    
  413faa:	retf   0x71eb
  413fad:	pop    ecx
  413fae:	mov    ch,0x59
  413fb0:	sbb    esi,0x3452b4d3
  413fb6:	pop    edx
  413fb7:	sub    DWORD PTR [ebp+0x36],eax
  413fba:	dec    eax
  413fbb:	mov    cs,WORD PTR [edx]
  413fbd:	stos   DWORD PTR es:[edi],eax
  413fbe:	sub    DWORD PTR [ebx+0x6f278dfa],esp
  413fc4:	(bad)  
  413fc5:	lds    esp,FWORD PTR es:[eax+ecx*2]
  413fc9:	(bad)  
  413fca:	ins    BYTE PTR es:[edi],dx
  413fcb:	and    bl,0xe2
  413fce:	jl     0x413f86
  413fd0:	in     al,dx
  413fd1:	icebp  
  413fd2:	fisttp DWORD PTR [edx-0xd99a784]
  413fd8:	mov    ch,0xbb
  413fda:	jns    0x413fda
  413fdc:	mov    ds:0x738fa0ce,eax
  413fe1:	test   eax,0x3a42de42
  413fe6:	(bad)  
  413fe7:	sub    eax,0x5512e5fc
  413fec:	dec    esi
  413fed:	es mov esp,0x260382a4
  413ff3:	das    
  413ff4:	hlt    
  413ff5:	and    DWORD PTR [eax+0x29],0xffffffea
  413ff9:	jge    0x41401c
  413ffb:	imul   esi,esi,0xffffffbd
  413ffe:	adc    edx,esi
  414000:	cli    
  414001:	add    eax,0x10ff4314
  414006:	xchg   ecx,eax
  414007:	adc    al,0x15
  414009:	xor    eax,0x7cf42493
  41400e:	inc    DWORD PTR [ebx]
  414010:	scas   eax,DWORD PTR es:[edi]
  414011:	pop    ds
  414012:	cld    
  414013:	push   ecx
  414014:	psllw  mm6,QWORD PTR [ebx+0x60227161]
  41401b:	or     ebx,DWORD PTR [eax+0x7bd7f84d]
  414021:	rol    dl,cl
  414023:	icebp  
  414024:	push   ecx
  414026:	mov    dl,0x92
  414028:	icebp  
  414029:	fwait
  41402a:	scas   al,BYTE PTR es:[edi]
  41402b:	cmc    
  41402c:	mov    ecx,0x9a26e45c
  414031:	test   ecx,esp
  414033:	and    eax,0x94fb3340
  414038:	xchg   esi,eax
  414039:	pop    DWORD PTR [edx+edx*8-0x33fa406c]
  414040:	rol    dh,0x62
  414043:	loope  0x414026
  414045:	sbb    eax,0x6cec88f
  41404a:	fnstsw WORD PTR [ebp-0x22]
  41404d:	sub    BYTE PTR [esi-0x2d],0x53
  414051:	mov    esi,0x2ccd91b6
  414056:	iret   
  414057:	inc    ebp
  414058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414059:	repz mov esp,0xac8cb929
  41405f:	dec    ebx
  414060:	lahf   
  414061:	or     al,BYTE PTR [edx-0x7645edd]
  414067:	enter  0x4ddd,0x0
  41406b:	push   cs
  41406c:	pop    eax
  41406d:	ins    DWORD PTR es:[edi],dx
  41406e:	cmp    BYTE PTR [edi+ecx*4+0x13cfa437],ah
  414075:	fst    DWORD PTR [eax-0x18253d42]
  41407b:	mov    al,ds:0x4e3a4c33
  414080:	not    BYTE PTR [edx-0x5bc45a7]
  414086:	add    DWORD PTR [ebp-0x38f7ba95],0x7fda6b27
  414090:	dec    ebp
  414091:	pop    ecx
  414092:	pop    esi
  414093:	mov    edx,0x695a8252
  414098:	mov    dh,0x1
  41409a:	pop    edx
  41409b:	aad    0xdc
  41409d:	lods   eax,DWORD PTR ds:[esi]
  41409e:	jle    0x4140b2
  4140a0:	out    0x26,al
  4140a2:	stos   BYTE PTR es:[edi],al
  4140a3:	sbb    esi,DWORD PTR [ebp-0x78]
  4140a6:	sbb    BYTE PTR [eax],bh
  4140a8:	aam    0x6e
  4140aa:	cpuid  
  4140ac:	(bad)  
  4140ae:	pop    ds
  4140af:	sub    al,0x40
  4140b1:	js     0x41404c
  4140b3:	pop    edx
  4140b4:	push   es
  4140b5:	add    DWORD PTR [edi-0x7a24059f],ecx
  4140bb:	or     DWORD PTR [esi-0x2b],esp
  4140be:	loopne 0x414054
  4140c0:	out    0x5e,al
  4140c2:	fist   WORD PTR [edx+0x61f6da7f]
  4140c8:	arpl   WORD PTR [esi],bp
  4140ca:	fs out 0x6e,eax
  4140cd:	mov    cl,0xd
  4140cf:	pop    esp
  4140d0:	jl     0x41407a
  4140d2:	das    
  4140d3:	cmp    eax,edi
  4140d5:	leave  
  4140d6:	fild   WORD PTR [eax-0x7b]
  4140d9:	mov    ah,0x89
  4140db:	popf   
  4140dc:	mov    edi,es
  4140de:	xor    eax,0x94b8591a
  4140e3:	sub    BYTE PTR [eax+edi*8-0x7e3ba886],ah
  4140ea:	aam    0xc3
  4140ec:	mov    ebp,0x665b6012
  4140f1:	xlat   BYTE PTR gs:[ebx]
  4140f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140f4:	xor    al,0xcd
  4140f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140f7:	in     eax,0xf3
  4140f9:	fidiv  WORD PTR [esi+ebp*1+0x6]
  4140fd:	cmp    edi,DWORD PTR [ecx-0x68dec42]
  414103:	enter  0xefb9,0x72
  414107:	mov    cs,WORD PTR [edx+0x1b7a0252]
  41410d:	cmp    BYTE PTR [ecx],dl
  41410f:	outs   dx,DWORD PTR ds:[esi]
  414110:	cmp    cl,BYTE PTR [ecx+0xf]
  414113:	(bad)  [edi-0x2e]
  414116:	daa    
  414117:	cmp    edi,edx
  414119:	sub    DWORD PTR [ebx],0xffffff9a
  41411c:	add    eax,0xe1bd5674
  414121:	push   cs
  414122:	scas   eax,DWORD PTR es:[edi]
  414123:	push   edi
  414124:	or     BYTE PTR [ebp+0x62],dh
  414127:	sbb    eax,0x84f658d8
  41412c:	or     DWORD PTR [ebx-0x7a82fa8a],0xffffffac
  414133:	mov    ds:0xda124b9b,al
  414138:	jb     0x41413d
  41413a:	out    0xdf,eax
  41413c:	mov    al,ds:0x4b32c1f2
  414141:	add    BYTE PTR [esi+0xe],0x9a
  414145:	aas    
  414146:	cmp    al,0xcc
  414148:	add    DWORD PTR [ebx],esp
  41414a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41414b:	jge    0x414173
  41414d:	pop    ss
  41414e:	mov    ebx,0x19341525
  414153:	pop    ss
  414154:	cmc    
  414155:	xor    al,0xa7
  414157:	addr16 push ds
  414159:	sub    DWORD PTR [eax+0x6a],edx
  41415c:	adc    al,0xfd
  41415e:	xor    al,0x5a
  414160:	ffreep st(1)
  414162:	int3   
  414163:	xchg   edx,eax
  414164:	cmp    dl,BYTE PTR [eax]
  414166:	sbb    al,0xa0
  414168:	ficom  WORD PTR [ebp-0x61c1a4c6]
  41416e:	out    dx,al
  41416f:	xchg   edx,eax
  414170:	arpl   WORD PTR [edx+0x3],ax
  414173:	pusha  
  414174:	add    DWORD PTR [ecx-0x5893ecae],esp
  41417a:	scas   eax,DWORD PTR es:[edi]
  41417b:	and    BYTE PTR [edi],0xa8
  41417e:	jns    0x414176
  414180:	dec    esi
  414181:	loope  0x414119
  414183:	mov    edx,0x88285bc
  414188:	pop    edi
  414189:	and    eax,0xaf67eb48
  41418e:	add    ch,0xe
  414191:	jl     0x41413a
  414193:	in     eax,dx
  414194:	rcr    ebx,0x41
  414197:	sub    cl,bl
  414199:	or     edi,DWORD PTR [edx+0x4711cad3]
  41419f:	jmp    0x2a5d:0xdbc9bcbd
  4141a6:	inc    ebp
  4141a7:	adc    al,0xa5
  4141a9:	jne    0x41420a
  4141ab:	ror    BYTE PTR [edx+0x213ed8d5],cl
  4141b1:	jmp    0xe3c8a756
  4141b6:	mov    esi,0xeb74aacf
  4141bb:	dec    eax
  4141bc:	xor    BYTE PTR [ebp-0x49],bl
  4141bf:	jns    0x4141c2
  4141c1:	scas   al,BYTE PTR es:[edi]
  4141c2:	arpl   WORD PTR [ebp+ebx*8+0x3f68bb5f],cx
  4141c9:	mov    edi,0x94a4bc3a
  4141ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141cf:	dec    eax
  4141d0:	mul    BYTE PTR [edi]
  4141d2:	pop    ecx
  4141d3:	(bad)  
  4141d4:	or     eax,0x5a0cb13c
  4141d9:	pusha  
  4141da:	test   al,0x73
  4141dc:	xchg   DWORD PTR [eax],eax
  4141de:	jecxz  0x41425b
  4141e0:	xchg   BYTE PTR [eax],dh
  4141e2:	aad    0x85
  4141e4:	pop    edi
  4141e5:	xlat   BYTE PTR ds:[ebx]
  4141e6:	stc    
  4141e7:	add    bl,dh
  4141e9:	cmp    edx,esp
  4141eb:	pop    ecx
  4141ec:	cwde   
  4141ed:	imul   ecx,esp,0xd
  4141f0:	mov    ch,0xa7
  4141f2:	add    BYTE PTR [ebx],cl
  4141f4:	jmp    0x414222
  4141f6:	push   ebp
  4141f7:	rol    ebp,1
  4141f9:	dec    eax
  4141fa:	loope  0x4141c5
  4141fc:	call   0xad1265b2
  414201:	push   esi
  414202:	mov    DWORD PTR [ecx+0x65],edi
  414205:	mov    edx,0xa57a930b
  41420a:	mov    dl,0xc
  41420c:	cmp    al,BYTE PTR [ebx+esi*1+0x242a9b8b]
  414213:	push   0xa3ce840
  414218:	popa   
  414219:	fsub   QWORD PTR [esi-0x415edee7]
  41421f:	fdiv   DWORD PTR [ebx-0x47fca837]
  414225:	mov    ?,WORD PTR [edi]
  414227:	retf   0xe3c2
  41422a:	mov    ebx,0x37ad863a
  41422f:	dec    esi
  414230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414231:	(bad)  
  414232:	je     0x414258
  414234:	jo     0x41421b
  414236:	sbb    DWORD PTR [eax],ecx
  414238:	xchg   edx,eax
  414239:	mov    al,ds:0xc56715a6
  41423e:	out    dx,al
  41423f:	and    eax,0x92ed58f9
  414244:	je     0x4141e0
  414246:	sbb    BYTE PTR [edx],0x2c
  414249:	mov    dh,0x5b
  41424b:	je     0x414251
  41424d:	int3   
  41424e:	sahf   
  41424f:	popa   
  414250:	jmp    0xc78a:0x5cdcc2d6
  414257:	jno    0x414260
  414259:	ja     0x41428b
  41425b:	shl    BYTE PTR [eax+0x179c2382],0xf5
  414262:	loope  0x4142b6
  414264:	out    0x57,eax
  414266:	mov    esi,0x96cb8b5
  41426b:	mov    WORD PTR [ebp+0x922d32f],?
  414271:	hlt    
  414272:	push   esp
  414273:	stos   DWORD PTR es:[edi],eax
  414274:	and    al,0x59
  414276:	(bad)  
  414277:	jl     0x4142f6
  414279:	stos   DWORD PTR es:[edi],eax
  41427a:	and    DWORD PTR [esp+eiz*8-0x44],esi
  41427e:	inc    ecx
  41427f:	out    dx,al
  414280:	stos   DWORD PTR es:[edi],eax
  414281:	out    dx,al
  414282:	sbb    BYTE PTR [ebx],bl
  414284:	repnz sti 
  414286:	sub    edx,esi
  414288:	add    ebx,ebp
  41428a:	fwait
  41428b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41428c:	mov    eax,0xaf99cc77
  414291:	repz mov esi,0x7b0385bd
  414297:	xor    BYTE PTR [edi-0x40944989],0xe7
  41429e:	js     0x414266
  4142a0:	daa    
  4142a1:	(bad)  
  4142a2:	ja     0x414284
  4142a4:	dec    ebp
  4142a5:	or     edx,DWORD PTR [edx+0x4d028ced]
  4142ab:	out    dx,eax
  4142ac:	ds pushw cs
  4142af:	mov    al,0x3e
  4142b1:	push   ebp
  4142b2:	cdq    
  4142b3:	adc    esi,DWORD PTR [ebp+0x3749ed26]
  4142b9:	xor    BYTE PTR [ebp-0x34],bl
  4142bc:	fs pushf 
  4142be:	push   cs
  4142bf:	push   eax
  4142c0:	xor    eax,0x2e1dbaeb
  4142c5:	xchg   ebx,eax
  4142c6:	mov    esp,0xbf849024
  4142cb:	xor    al,0xee
  4142cd:	pop    ebp
  4142ce:	xchg   ebp,eax
  4142cf:	sub    esp,DWORD PTR [edi+0x18ceccf7]
  4142d5:	xor    dl,dh
  4142d7:	call   0x66509db3
  4142dc:	(bad)  
  4142dd:	xor    al,0xb9
  4142df:	inc    eax
  4142e0:	pop    ecx
  4142e1:	aad    0x73
  4142e3:	mov    edx,0x15171942
  4142e8:	daa    
  4142e9:	out    dx,eax
  4142ea:	aad    0x83
  4142ec:	or     al,BYTE PTR es:[ecx-0x521e7b5]
  4142f3:	jns    0x414361
  4142f5:	mov    DWORD PTR [edx-0x5b83f264],edx
  4142fb:	push   0xffffff96
  4142fd:	adc    eax,0x1313de4c
  414302:	mov    ebx,0x6183e1ef
  414307:	mov    ds:0xe6d388ba,al
  41430c:	lods   al,BYTE PTR ds:[esi]
  41430d:	sbb    BYTE PTR [edi],bh
  41430f:	es pop eax
  414311:	fsub   QWORD PTR [ebp-0xa9db760]
  414317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414318:	mov    eax,0x5c7b20d0
  41431d:	xor    DWORD PTR [edx],ecx
  41431f:	enter  0xe7df,0x93
  414323:	adc    al,0xc6
  414325:	aam    0x70
  414327:	dec    edi
  414328:	mov    dl,0xc0
  41432a:	sbb    ecx,ebx
  41432c:	xchg   ebx,eax
  41432d:	or     eax,0xf23f8f52
  414332:	aas    
  414333:	aas    
  414334:	ds out dx,al
  414336:	push   ebp
  414337:	xchg   BYTE PTR [ebx-0x76408c5f],cl
  41433d:	imul   ecx,DWORD PTR [edx+edx*4],0xc724d262
  414344:	sub    ebp,ecx
  414346:	mov    es,WORD PTR ds:[eax]
  414349:	pop    edi
  41434a:	sbb    DWORD PTR [ecx],edx
  41434c:	ins    DWORD PTR es:[edi],dx
  41434d:	mov    ch,BYTE PTR [esi]
  41434f:	out    dx,eax
  414350:	loop   0x414312
  414352:	add    al,0xbc
  414354:	push   ebp
  414355:	add    ebx,DWORD PTR [ebx-0x116601e2]
  41435b:	mov    edi,0x4d7098e0
  414360:	and    bl,BYTE PTR [ebx+0xe3f8bee]
  414366:	loop   0x4142e9
  414368:	into   
  414369:	pop    ds
  41436a:	and    eax,0x67d715af
  41436f:	sti    
  414370:	imul   ecx,DWORD PTR [ebx-0x13eabe2d],0x8f774cb3
  41437a:	fild   WORD PTR [edx+0x1f]
  41437d:	sbb    BYTE PTR [ecx],cl
  41437f:	mov    es,WORD PTR [ecx-0x33]
  414382:	push   0x1e
  414384:	scas   al,BYTE PTR es:[edi]
  414385:	adc    eax,0xe7719859
  41438a:	fadd   st(4),st
  41438c:	jae    0x4143cd
  41438e:	jo     0x41436c
  414390:	test   eax,0x1d98fdc5
  414395:	add    ebp,DWORD PTR [edi+0x3562387e]
  41439b:	push   ebx
  41439c:	js     0x4143e0
  41439e:	in     al,0x42
  4143a0:	pop    ss
  4143a1:	mov    bh,0x80
  4143a3:	cdq    
  4143a4:	call   0x7b4a776
  4143a9:	aaa    
  4143aa:	sbb    BYTE PTR [esi+0x6f],bh
  4143ad:	jmp    0xa16fb52e
  4143b2:	out    dx,al
  4143b3:	sub    eax,0xbcc720a1
  4143b8:	jmp    0xbac2:0x7bf15d44
  4143bf:	mov    ah,0x8f
  4143c1:	ja     0x41442d
  4143c3:	fisub  WORD PTR [edx-0x19250bce]
  4143c9:	int3   
  4143ca:	cwde   
  4143cb:	fwait
  4143cc:	das    
  4143cd:	inc    ecx
  4143ce:	mov    ebx,0xed783da5
  4143d3:	mov    cl,0x70
  4143d5:	and    BYTE PTR [eax-0x35],ah
  4143d8:	and    edi,DWORD PTR [edx+0xa0b278e]
  4143de:	inc    ebx
  4143df:	pop    eax
  4143e0:	mov    cl,0x3f
  4143e2:	fnstsw WORD PTR [edx]
  4143e4:	cmp    al,bh
  4143e6:	retf   
  4143e7:	pop    DWORD PTR [eax]
  4143e9:	push   0x80e08e5b
  4143ee:	cmp    DWORD PTR [ebx+ecx*8-0x5bdda678],0xda5bd0ac
  4143f9:	loope  0x4143df
  4143fb:	jne    0x4143f2
  4143fd:	inc    ecx
  4143fe:	and    DWORD PTR ds:0xc34cc5df,edi
  414404:	cwde   
  414405:	imul   edx,esp,0x3c
  414408:	adc    al,0x20
  41440a:	rol    DWORD PTR [ebx+0x33],1
  41440d:	xor    eax,0xd5e58241
  414412:	xchg   BYTE PTR [ecx+0x592bd538],bh
  414418:	and    BYTE PTR gs:[ebp+ebx*1-0x6a],bh
  41441d:	jo     0x4143e0
  41441f:	arpl   WORD PTR [esi+0x2dd84f8d],cx
  414425:	sti    
  414426:	cld    
  414427:	cmp    al,0xec
  414429:	xchg   esp,ebx
  41442b:	lods   al,BYTE PTR ds:[esi]
  41442c:	in     al,dx
  41442d:	je     0x414436
  41442f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414430:	leave  
  414431:	dec    eax
  414432:	fld    DWORD PTR [ebp+0x7b78ae57]
  414438:	fidivr DWORD PTR [ebp+eiz*4-0x60c07ae1]
  41443f:	mov    al,ds:0xa2884b9c
  414444:	cmp    BYTE PTR [edi+0x4d],bh
  414447:	or     DWORD PTR [ecx],ebp
  414449:	(bad)  
  41444a:	fldenv [edi+ebx*4]
  41444d:	cmp    al,0x9c
  41444f:	test   DWORD PTR [ecx+esi*8],0x64c9a54d
  414456:	mov    al,ds:0x9fc9f755
  41445b:	lods   al,BYTE PTR ds:[esi]
  41445c:	lahf   
  41445d:	rcr    BYTE PTR [edi-0x1d29e8cc],0x36
  414464:	fdiv   st,st(4)
  414466:	outs   dx,BYTE PTR ds:[esi]
  414467:	adc    BYTE PTR [esi-0xc],bh
  41446a:	scas   eax,DWORD PTR es:[edi]
  41446b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41446c:	and    bl,BYTE PTR [eax-0x64]
  41446f:	mov    eax,0x9c5a9014
  414474:	cmc    
  414475:	pushf  
  414476:	mov    bl,0x85
  414478:	cwde   
  414479:	xchg   ecx,eax
  41447a:	fmul   DWORD PTR [ebx+0x33]
  41447d:	adc    DWORD PTR [edi-0x53],ecx
  414480:	je     0x414474
  414482:	(bad)  
  414483:	xor    DWORD PTR [eax],ebp
  414485:	ss push es
  414487:	(bad)  
  414488:	xor    eax,0x1a92e0ed
  41448d:	loope  0x414473
  41448f:	jno    0x4144ab
  414491:	add    dh,BYTE PTR [ebx-0x31]
  414494:	mov    cl,0xbf
  414496:	(bad)  
  414497:	outs   dx,BYTE PTR ds:[esi]
  414498:	(bad)  
  414499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41449a:	jbe    0x41448f
  41449c:	mov    ah,0xc
  41449e:	jl     0x41445c
  4144a0:	mov    ah,0xbe
  4144a2:	or     ecx,DWORD PTR [ebx+esi*1-0xa66df52]
  4144a9:	pop    esp
  4144aa:	mov    ah,0xcf
  4144ac:	in     eax,dx
  4144ad:	mov    esp,0x9f97efa6
  4144b2:	rcl    DWORD PTR [eax-0x24d37185],1
  4144b8:	dec    edi
  4144b9:	and    cl,BYTE PTR [eax]
  4144bb:	add    al,0x94
  4144bd:	lahf   
  4144be:	loop   0x4144c3
  4144c0:	pop    ds
  4144c1:	pop    es
  4144c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144c3:	xor    al,0x9f
  4144c5:	icebp  
  4144c6:	aaa    
  4144c7:	xchg   esp,eax
  4144c8:	cmovge eax,DWORD PTR [ecx+0xf]
  4144cc:	sahf   
  4144cd:	push   ss
  4144ce:	dec    esi
  4144cf:	jne    0x414467
  4144d1:	xor    bh,BYTE PTR [esi]
  4144d3:	pop    es
  4144d4:	adc    edx,DWORD PTR [eax+edi*8]
  4144d7:	inc    esi
  4144d8:	loop   0x414479
  4144da:	push   esi
  4144db:	dec    edx
  4144dc:	mov    ecx,0xa747738c
  4144e1:	inc    ecx
  4144e2:	in     al,0xdc
  4144e4:	xchg   ecx,eax
  4144e5:	mov    ds:0x55788034,al
  4144ea:	and    eax,0xd9bd3a7b
  4144ef:	jmp    0x75b2:0x5fef5734
  4144f6:	cmp    al,0xd3
  4144f8:	popa   
  4144f9:	je     0x41454d
  4144fb:	mov    ds:0x5a6ebf2c,al
  414500:	stos   DWORD PTR es:[edi],eax
  414501:	les    esi,FWORD PTR [edi]
  414503:	xchg   edi,eax
  414504:	retf   0x1f79
  414507:	jae    0x4144b1
  414509:	jmp    0xe9c9:0x3150cf8d
  414510:	cmp    cl,BYTE PTR [esi]
  414512:	data16 int3 
  414514:	in     al,0xa4
  414516:	out    0x4e,eax
  414518:	dec    edi
  414519:	inc    esi
  41451a:	jmp    0x317c:0x64f54bb
  414521:	fwait
  414522:	adc    esp,ebx
  414524:	int    0xb4
  414526:	and    BYTE PTR [ebx],ch
  414528:	mov    ds:0xd5aef997,al
  41452d:	cmp    BYTE PTR [edi+ebx*4-0x5ba8013b],dl
  414534:	add    eax,0x8994591d
  414539:	(bad)  
  41453b:	fidiv  DWORD PTR [ebp-0x14]
  41453e:	jb     0x41457a
  414540:	clc    
  414541:	ficomp DWORD PTR [ecx+0x11]
  414544:	mov    edi,0x4056fd39
  414549:	outs   dx,DWORD PTR ds:[esi]
  41454a:	(bad)  
  41454b:	loopne 0x414504
  41454d:	mov    ah,0x9f
  41454f:	jmp    0x73fce4f2
  414554:	sbb    esi,DWORD PTR [ecx+0x0]
  414557:	pop    eax
  414558:	cmp    al,0x52
  41455a:	sub    BYTE PTR [ebx+edi*8+0x73],dl
  41455e:	jmp    0x3123c79f
  414563:	leave  
  414564:	inc    eax
  414565:	in     eax,dx
  414566:	hlt    
  414567:	inc    ecx
  414568:	sbb    esp,DWORD PTR [ebx-0x1c967d8f]
  41456e:	adc    ebp,DWORD PTR [ebx]
  414570:	(bad)  
  414571:	dec    esp
  414572:	sbb    eax,0xcfaef1f9
  414577:	mov    ds:0x39f808b9,al
  41457c:	outs   dx,DWORD PTR ds:[esi]
  41457d:	and    al,0xb
  41457f:	push   es
  414580:	inc    ebx
  414581:	or     BYTE PTR [edi],bh
  414583:	cmp    eax,0x436762da
  414588:	bound  ecx,QWORD PTR [eax-0x3c5024d8]
  41458e:	loope  0x414549
  414590:	mov    al,0x15
  414592:	in     al,dx
  414593:	dec    edx
  414594:	fdiv   DWORD PTR [eax-0x5d]
  414597:	retf   0x9533
  41459a:	aas    
  41459b:	mov    bh,0x2
  41459d:	or     BYTE PTR [edx-0x13e09103],cl
  4145a3:	mov    ch,0x44
  4145a5:	lods   al,BYTE PTR ds:[esi]
  4145a6:	adc    al,0x44
  4145a8:	adc    ebp,DWORD PTR [ebp-0x5d]
  4145ab:	dec    eax
  4145ac:	xor    ah,BYTE PTR [eax]
  4145ae:	jbe    0x41454a
  4145b0:	stos   DWORD PTR es:[edi],eax
  4145b1:	xchg   ebx,eax
  4145b2:	adc    BYTE PTR [eax-0x35],bh
  4145b5:	cmp    BYTE PTR ds:0x4795615,bh
  4145bb:	out    0x4f,al
  4145bd:	shr    BYTE PTR [ebp-0x6d],0xc9
  4145c1:	sub    DWORD PTR [esi-0x15fa3760],edi
  4145c7:	dec    esp
  4145c8:	ret    0xddcc
  4145cb:	xor    edx,DWORD PTR ds:0x6fabfc9d
  4145d1:	scas   al,BYTE PTR es:[edi]
  4145d2:	cli    
  4145d3:	ss push edx
  4145d5:	or     eax,0x69cfd0ab
  4145da:	mov    al,ds:0x4f2f7c75
  4145df:	pop    es
  4145e0:	outs   dx,DWORD PTR ds:[esi]
  4145e1:	add    esp,ebx
  4145e3:	and    DWORD PTR [ebp-0x6f20e4da],ebx
  4145e9:	cdq    
  4145ea:	fs daa 
  4145ec:	mov    eax,ds:0x93734406
  4145f1:	push   esi
  4145f2:	jno    0x414638
  4145f4:	mov    es,WORD PTR [esi]
  4145f6:	js     0x41463a
  4145f8:	mov    edi,0xfbeee7b7
  4145fd:	inc    ebx
  4145fe:	imul   edx,ebx,0x585a7226
  414604:	(bad)  
  414605:	out    0x13,al
  414607:	and    DWORD PTR [edx+eax*4],ebx
  41460a:	mov    edi,0x10bcb4f
  41460f:	mov    edi,0x3986f8e
  414614:	ret    0xd38e
  414617:	rcr    eax,cl
  414619:	bound  ecx,QWORD PTR [eax+0x3de4aac]
  41461f:	cmp    BYTE PTR [esi],ch
  414621:	out    dx,eax
  414622:	mov    WORD PTR [ecx+0x667f845c],ds
  414628:	enter  0xd104,0xea
  41462c:	fwait
  41462d:	shl    BYTE PTR [esi],cl
  41462f:	or     DWORD PTR [ebx],0xf
  414632:	pop    edi
  414633:	pop    eax
  414634:	jb     0x41466d
  414636:	repnz push edx
  414638:	dec    ebp
  414639:	jb     0x414648
  41463b:	xor    DWORD PTR [edi-0x54],edi
  41463e:	or     BYTE PTR [edi],dl
  414640:	or     BYTE PTR [esi+0x7f],0xb2
  414644:	xchg   esp,eax
  414645:	dec    ecx
  414646:	push   0xffffffaf
  414648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414649:	pop    ebp
  41464a:	mov    al,ds:0xc5ee597a
  41464f:	sbb    eax,ecx
  414651:	pop    ss
  414652:	adc    dh,BYTE PTR [ecx+ebx*4-0xe]
  414656:	mov    DWORD PTR [ecx+0x2f],ebp
  414659:	sbb    al,BYTE PTR [ebp-0x69]
  41465c:	mov    al,0x5a
  41465e:	syscall 
  414660:	xor    DWORD PTR [ebx],ebx
  414662:	(bad)  
  414663:	repnz push es
  414665:	dec    eax
  414666:	mov    al,ds:0xfda79079
  41466b:	or     eax,0x84a6b8dd
  414670:	jecxz  0x4146b5
  414672:	push   esi
  414673:	and    DWORD PTR [esi+eax*4],edx
  414676:	cdq    
  414677:	adc    eax,0x8077c72d
  41467c:	pop    edi
  41467d:	and    DWORD PTR [esi-0x4f],ecx
  414680:	aam    0x2f
  414682:	mov    BYTE PTR [ebp-0x61],ah
  414685:	int    0x3
  414687:	sub    al,0xd5
  414689:	int    0x67
  41468b:	adc    eax,0x503b0b1
  414690:	div    BYTE PTR [edx+0x16]
  414693:	cmp    BYTE PTR ss:[ecx-0x4c789efa],bl
  41469a:	fiadd  DWORD PTR [edx]
  41469d:	add    al,0x92
  41469f:	xchg   ebp,eax
  4146a0:	or     eax,0x2d48f5ba
  4146a5:	sbb    dl,ch
  4146a7:	or     BYTE PTR [ebx-0x11],al
  4146aa:	xor    DWORD PTR [edx],esp
  4146ac:	ret    
  4146ad:	test   eax,0x4ca6fd5a
  4146b2:	add    al,0x2c
  4146b4:	or     ebp,DWORD PTR es:[esi+0x7ca46af]
  4146bb:	js     0x4146c0
  4146bd:	jns    0x414708
  4146bf:	imul   ecx,ebp,0x4e16ac49
  4146c5:	inc    ecx
  4146c6:	js     0x4146ea
  4146c8:	mov    bh,0x6b
  4146ca:	sahf   
  4146cb:	nop
  4146cc:	inc    esi
  4146cd:	cmp    DWORD PTR [edi+edx*1+0x42893ce7],ecx
  4146d4:	rcr    DWORD PTR [esi-0x66ec0f03],0x1e
  4146db:	or     DWORD PTR [edi],esi
  4146dd:	cld    
  4146de:	(bad)  
  4146e0:	push   es
  4146e1:	js     0x414693
  4146e3:	stos   BYTE PTR es:[edi],al
  4146e4:	mov    ah,0x5b
  4146e6:	push   esp
  4146e7:	cmp    esp,DWORD PTR [eax]
  4146e9:	push   0x72
  4146eb:	push   ss
  4146ec:	pop    edi
  4146ed:	rcl    DWORD PTR [edx],cl
  4146ef:	test   al,0x9b
  4146f1:	mov    eax,0x252c6d4a
  4146f6:	sub    eax,0x66817686
  4146fb:	sub    eax,0xe55b5010
  414700:	call   0x9c4b9f8f
  414705:	sahf   
  414706:	int3   
  414707:	dec    esi
  414708:	mov    al,ds:0xe37bfcfc
  41470d:	div    eax
  41470f:	inc    eax
  414710:	loop   0x4146a9
  414712:	idiv   DWORD PTR [eax]
  414714:	outs   dx,DWORD PTR ds:[esi]
  414715:	mov    eax,ds:0xb53e41d4
  41471a:	pop    esp
  41471b:	jmp    0xb5fb:0xa402aac3
  414722:	push   ebx
  414723:	mov    esp,0xe13f2080
  414728:	jge    0x414735
  41472a:	mov    eax,0xd52ee7fa
  41472f:	dec    ebx
  414730:	mov    ebx,0x9cb52b12
  414735:	sub    eax,0xf595c4cc
  41473a:	sti    
  41473b:	xor    eax,0x451243e9
  414740:	mov    ebx,0x824579db
  414745:	sub    eax,DWORD PTR [ebx-0x1f]
  414748:	in     al,dx
  414749:	and    bh,BYTE PTR [edx]
  41474b:	shl    DWORD PTR [esp+edi*8+0x3d],1
  41474f:	mov    eax,0x6e872d23
  414754:	arpl   WORD PTR [esi],sp
  414756:	retf   0x89e4
  414759:	push   ecx
  41475a:	test   eax,0x5caaee2f
  41475f:	les    ebp,FWORD PTR [eax+0x73]
  414762:	paddw  mm0,QWORD PTR [ecx-0x5e]
  414766:	daa    
  414767:	push   ebp
  414768:	clc    
  414769:	sbb    ebp,DWORD PTR [ebp+0x62f00a19]
  41476f:	aas    
  414770:	(bad)  
  414771:	leave  
  414772:	sbb    DWORD PTR [eax-0x345dbbd2],0x305e3ce
  41477c:	and    BYTE PTR [esi+0x75],ah
  41477f:	call   0xe3d3a475
  414784:	push   ecx
  414785:	mov    dh,0xb1
  414787:	out    dx,eax
  414788:	add    al,0xe0
  41478a:	popf   
  41478b:	jnp    0x41478d
  41478d:	in     al,dx
  41478e:	stos   DWORD PTR es:[edi],eax
  41478f:	mov    esp,0x7ef84af8
  414794:	xor    eax,esp
  414796:	test   DWORD PTR [ecx],ecx
  414798:	ins    BYTE PTR es:[edi],dx
  414799:	sbb    dl,cl
  41479b:	jmp    0x414745
  41479d:	inc    ecx
  41479e:	iret   
  41479f:	retf   
  4147a0:	mov    al,ds:0xb776dffe
  4147a5:	call   FWORD PTR [esi]
  4147a7:	enter  0x7377,0x50
  4147ab:	out    0xba,eax
  4147ad:	xchg   esi,edx
  4147af:	cmp    cl,BYTE PTR ds:0x3f43c338
  4147b5:	inc    edi
  4147b6:	cmp    al,ch
  4147b8:	ret    
  4147b9:	sub    eax,0x471766ae
  4147be:	fdivrp st(3),st
  4147c0:	xchg   edx,eax
  4147c1:	aaa    
  4147c2:	sar    BYTE PTR ss:[esi],0xdd
  4147c6:	retf   0xd9a5
  4147c9:	jae    0x4147c7
  4147cb:	cmp    DWORD PTR [edi],eax
  4147cd:	or     bl,BYTE PTR [edi+0x612ec726]
  4147d3:	jno    0x414811
  4147d5:	xor    DWORD PTR [edi],ebx
  4147d7:	xor    BYTE PTR [edi-0x35912228],bh
  4147dd:	popa   
  4147de:	sub    BYTE PTR [ebx+0x21a96ebf],dl
  4147e4:	retf   0xcb6d
  4147e7:	cmp    esi,DWORD PTR [eax]
  4147e9:	xchg   edi,eax
  4147ea:	lock ins DWORD PTR es:[edi],dx
  4147ec:	cmp    al,0x29
  4147ee:	test   al,0xd3
  4147f0:	cwde   
  4147f1:	pop    esp
  4147f2:	push   edi
  4147f3:	push   es
  4147f4:	(bad)  
  4147f5:	jmp    0x9d6faac0
  4147fa:	and    DWORD PTR [eax+0x31],eax
  4147fd:	imul   eax,DWORD PTR [eax-0x68],0xffffffaf
  414801:	retf   
  414802:	retf   
  414803:	pop    ds
  414804:	push   ebx
  414805:	push   ds
  414806:	push   edi
  414807:	xrelease xchg DWORD PTR [ecx+esi*8],eax
  41480b:	xchg   edi,eax
  41480c:	in     al,dx
  41480d:	cmp    DWORD PTR [edx],esp
  41480f:	pop    eax
  414810:	ins    DWORD PTR es:[edi],dx
  414811:	jmp    0x4147ad
  414813:	sbb    DWORD PTR [edx+0x258fd72f],0xef2380a7
  41481d:	aad    0xe4
  41481f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414820:	dec    ebx
  414821:	cmp    al,0x5f
  414823:	jle    0x41484a
  414825:	cmp    dl,BYTE PTR [edx+eax*2-0x45]
  414829:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41482b:	cld    
  41482c:	jmp    0x4147d7
  41482e:	mov    esi,DWORD PTR [ecx-0x6c319bd1]
  414834:	std    
  414835:	mov    ah,0x52
  414837:	ss stos BYTE PTR es:[edi],al
  414839:	in     al,0x42
  41483b:	adc    al,0x5a
  41483d:	cwde   
  41483e:	stos   DWORD PTR es:[edi],eax
  41483f:	or     BYTE PTR [ecx+0x3e491476],bl
  414845:	or     cl,BYTE PTR [eax-0x2030ad2a]
  41484b:	fwait
  41484c:	mov    ?,WORD PTR [eax]
  41484e:	cmp    edx,ebp
  414850:	addr16 imul esi,edx,0xfffffff6
  414854:	mov    al,bh
  414856:	(bad)  
  414857:	cmp    al,ch
  414859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41485a:	mov    eax,ds:0xb0da12a7
  41485f:	push   cs
  414860:	in     al,dx
  414861:	push   ss
  414862:	in     eax,0xa9
  414864:	sub    DWORD PTR ds:0x3d27627d,0x9e4f2a0
  41486e:	and    DWORD PTR [edx-0x7c],ecx
  414871:	das    
  414872:	scas   eax,DWORD PTR es:[edi]
  414873:	ins    BYTE PTR es:[edi],dx
  414874:	sub    al,0x39
  414876:	shl    DWORD PTR [edx-0x9],0x4a
  41487a:	and    eax,0xc0b35411
  41487f:	test   BYTE PTR [edi+0x79de487b],dh
  414885:	and    al,0xe8
  414887:	mov    ds:0xd01a406a,eax
  41488c:	jne    0x4148c3
  41488e:	xchg   ebx,eax
  41488f:	imul   ebp,DWORD PTR [ecx-0x1b],0x2e
  414893:	mov    edi,0x90f1c859
  414898:	stc    
  414899:	int3   
  41489a:	xchg   ebp,eax
  41489b:	icebp  
  41489c:	adc    dh,dl
  41489e:	out    dx,eax
  41489f:	cmovae ebp,DWORD PTR [esi]
  4148a2:	mov    ebp,0xb8e9ad3f
  4148a7:	cli    
  4148a8:	shl    DWORD PTR [ebx+eax*1],0xfa
  4148ac:	cs scas eax,DWORD PTR es:[edi]
  4148ae:	jmp    0x44fc2762
  4148b3:	mov    eax,ds:0xa921ae54
  4148b8:	cld    
  4148b9:	adc    eax,DWORD PTR [esi]
  4148bb:	cld    
  4148bc:	sub    DWORD PTR [ebp-0x590ce7a6],eax
  4148c2:	test   BYTE PTR [edx-0x77c22c3d],ah
  4148c8:	fcomi  st,st(6)
  4148ca:	dec    eax
  4148cb:	xor    eax,0x8238e1ab
  4148d0:	add    bl,BYTE PTR [ebx-0x405ad2fa]
  4148d6:	stos   DWORD PTR es:[edi],eax
  4148d7:	and    cl,bh
  4148d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148da:	ins    BYTE PTR es:[edi],dx
  4148db:	sub    eax,0xa326f058
  4148e0:	mov    cl,0xa
  4148e2:	xchg   esp,eax
  4148e3:	xchg   ebp,eax
  4148e4:	jnp    0x41490a
  4148e6:	dec    esi
  4148e7:	out    dx,eax
  4148e8:	nop
  4148e9:	retf   
  4148ea:	xor    eax,0xa8d0af0b
  4148ef:	ret    0xb9b3
  4148f2:	(bad)
  4148f6:	mov    bh,BYTE PTR [ecx-0x76]
  4148f9:	dec    eax
  4148fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148fb:	pop    ecx
  4148fc:	in     al,0xa0
  4148fe:	mov    cl,0xec
  414900:	pop    ds
  414901:	mov    ch,BYTE PTR [esi+ecx*8+0x28223a72]
  414908:	jae    0x414971
  41490a:	push   ecx
  41490b:	add    al,0xde
  41490d:	sti    
  41490e:	adc    eax,0x50965cf1
  414913:	jnp    0x4148b9
  414915:	lahf   
  414916:	add    DWORD PTR [ecx+eiz*2+0x4d0a8bcf],ebx
  41491d:	pop    esp
  41491e:	adc    ebx,DWORD PTR [edx]
  414920:	mov    eax,ds:0x9e40623a
  414925:	out    0x64,al
  414927:	jl     0x414935
  414929:	ins    DWORD PTR es:[edi],dx
  41492a:	test   dl,dh
  41492c:	ds inc ebp
  41492e:	retf   
  41492f:	push   ebx
  414930:	sbb    DWORD PTR [edx+ebx*2+0x6a855458],ebp
  414937:	and    dl,BYTE PTR [esi-0x892cd4f]
  41493d:	daa    
  41493e:	sub    BYTE PTR [esi],0xea
  414941:	shr    DWORD PTR [eax-0x11],0xec
  414945:	test   BYTE PTR [edx+0x3e081958],dl
  41494b:	push   ebp
  41494c:	int3   
  41494d:	ss ds adc eax,0x42fc504e
  414954:	jne    0x41492c
  414956:	push   edx
  414957:	lods   al,BYTE PTR ds:[esi]
  414958:	push   esi
  414959:	ret    
  41495a:	jg     0x414965
  41495c:	jecxz  0x4149a0
  41495e:	fmul   QWORD PTR [ebp+0x3e]
  414961:	icebp  
  414962:	inc    DWORD PTR [edi+0x77b7880b]
  414968:	cld    
  414969:	(bad)  
  41496a:	jge    0x41494c
  41496c:	fist   DWORD PTR [eax+0x56]
  41496f:	ins    BYTE PTR es:[edi],dx
  414970:	push   cs
  414971:	scas   eax,DWORD PTR es:[edi]
  414972:	or     eax,esi
  414974:	iret   
  414975:	popa   
  414976:	mov    eax,ds:0xdfbf6bae
  41497b:	or     eax,0x7e36c83
  414980:	cmp    bl,ah
  414982:	int3   
  414983:	and    eax,0xa10ea401
  414988:	xor    eax,DWORD PTR [ebp+0x7539a73f]
  41498e:	les    ebx,FWORD PTR [edx-0x18e9807]
  414994:	cmp    al,0xd3
  414996:	mov    ds:0x1b938fe8,al
  41499b:	sbb    ch,BYTE PTR [eax]
  41499d:	hlt    
  41499e:	sbb    BYTE PTR [ecx-0x6d],dl
  4149a1:	pop    ds
  4149a2:	sti    
  4149a3:	(bad)  
  4149a4:	scas   eax,DWORD PTR es:[edi]
  4149a5:	pop    ebx
  4149a6:	jmp    0x9ea7:0x6d5ea35c
  4149ad:	outs   dx,BYTE PTR ds:[esi]
  4149ae:	pusha  
  4149af:	or     DWORD PTR [edx+0x442240f7],edx
  4149b5:	and    eax,0x829a169d
  4149ba:	sub    al,0x6e
  4149bc:	pop    ebx
  4149bd:	inc    ebx
  4149be:	mov    ebp,fs
  4149c0:	mov    esp,0x7379d80c
  4149c5:	je     0x4149d4
  4149c7:	cmp    al,0xeb
  4149c9:	mov    WORD PTR [esi-0x7],ss
  4149cc:	ficom  DWORD PTR [ecx-0x13276516]
  4149d2:	loopne 0x41495b
  4149d4:	rcr    DWORD PTR [ecx+0xa6614c0],1
  4149da:	popf   
  4149db:	jne    0x4149f4
  4149dd:	mov    eax,ds:0xfff51cc4
  4149e2:	jbe    0x4149ad
  4149e4:	cdq    
  4149e5:	add    bl,BYTE PTR [ecx+0x39]
  4149e8:	shr    BYTE PTR [ebx-0x39],1
  4149eb:	in     al,0xfc
  4149ed:	aad    0x19
  4149ef:	xor    BYTE PTR [eax],bl
  4149f1:	pop    esi
  4149f2:	(bad)  
  4149f3:	lea    edx,[eax+0x3d]
  4149f6:	shl    DWORD PTR [edx],cl
  4149f8:	push   ds
  4149f9:	retf   
  4149fa:	xchg   ebx,eax
  4149fb:	or     dl,BYTE PTR [esi+eiz*4-0x19]
  4149ff:	xor    DWORD PTR [ecx],edx
  414a01:	dec    esp
  414a02:	xchg   bl,bh
  414a04:	push   ecx
  414a05:	dec    ecx
  414a06:	or     ebx,DWORD PTR [ecx-0xbf9938]
  414a0c:	push   0xffffffd3
  414a0e:	xchg   BYTE PTR [edi-0x536c5357],ah
  414a14:	dec    edx
  414a15:	mov    dh,0x43
  414a17:	stos   DWORD PTR es:[edi],eax
  414a18:	xchg   ebx,eax
  414a19:	mov    al,ds:0x1cbd2562
  414a1e:	pop    esp
  414a1f:	push   es
  414a20:	add    ah,bh
  414a22:	out    0x3d,al
  414a24:	fsubr  st(0),st
  414a26:	xchg   edx,eax
  414a27:	inc    edi
  414a28:	cmp    BYTE PTR [edx+0x33],ch
  414a2b:	jno    0x414aa2
  414a2d:	adc    ch,cl
  414a2f:	xor    eax,0xae36173d
  414a34:	ror    DWORD PTR [ebx],cl
  414a36:	cmc    
  414a37:	pop    esp
  414a38:	pop    ebx
  414a39:	retf   
  414a3a:	mov    bh,0xe0
  414a3c:	fmul   st,st(4)
  414a3e:	mov    edx,0x3b6167d3
  414a43:	test   ch,dl
  414a45:	add    esi,DWORD PTR [edx-0x37]
  414a48:	mov    dh,0xa8
  414a4a:	aas    
  414a4b:	push   ecx
  414a4c:	mov    edi,0xf102a8c8
  414a51:	(bad)  
  414a52:	sti    
  414a53:	cld    
  414a54:	adc    eax,edi
  414a56:	lds    edx,FWORD PTR gs:[edx]
  414a59:	aam    0xcd
  414a5b:	push   esi
  414a5c:	cmp    esi,DWORD PTR [ecx+0x5d4d8aab]
  414a62:	jp     0x414a14
  414a64:	add    ebp,DWORD PTR [esi+edx*4]
  414a67:	(bad)  
  414a68:	mov    eax,0x173980ed
  414a6d:	aam    0x5d
  414a6f:	std    
  414a70:	out    0x6e,eax
  414a72:	lea    esi,[ebx*2+0x57a427fc]
  414a79:	cmp    al,0x49
  414a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a7c:	call   0x6086:0x6c946a78
  414a83:	jmp    0x28b2:0x707d9a31
  414a8a:	mov    eax,ds:0x3318d9e3
  414a8f:	lahf   
  414a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a91:	cmp    eax,0xc4e0e956
  414a96:	pusha  
  414a97:	not    cl
  414a99:	popf   
  414a9a:	out    0x40,al
  414a9c:	(bad)  
  414a9d:	and    al,0x3d
  414a9f:	xor    eax,0x37aefc3c
  414aa4:	mov    ds,ecx
  414aa6:	test   al,0xc8
  414aa8:	push   cs
  414aa9:	(bad)  
  414aaa:	jmp    0x414b25
  414aac:	jle    0x414a4d
  414aae:	sbb    edx,ebx
  414ab0:	adc    eax,ebx
  414ab2:	pop    es
  414ab3:	(bad)  
  414ab4:	xor    bh,BYTE PTR [edx-0x5572da20]
  414aba:	cs xor al,0xab
  414abd:	mov    eax,0x788e3c62
  414ac2:	adc    edi,DWORD PTR [ebx+0x7b9c7793]
  414ac8:	popa   
  414ac9:	cmp    eax,0x1cc666bc
  414ace:	data16 sbb ch,BYTE PTR [ecx-0x20]
  414ad2:	mov    ds:0xf20571d9,eax
  414ad7:	sbb    ebx,DWORD PTR [ebx+0x5a]
  414ada:	out    0x30,al
  414adc:	fimul  WORD PTR [esi-0x70]
  414adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae0:	lods   al,BYTE PTR ds:[esi]
  414ae1:	push   ss
  414ae2:	jg     0x414b08
  414ae4:	into   
  414ae5:	test   DWORD PTR [ecx+0x1],0xb795dc22
  414aec:	data16 out dx,al
  414aee:	cmp    DWORD PTR [ebx],edi
  414af0:	clc    
  414af1:	or     al,0x6e
  414af3:	lea    eax,[esi]
  414af5:	arpl   ax,bp
  414af7:	imul   esp,DWORD PTR [esi+0x17],0xa1b3f97c
  414afe:	xchg   ebp,eax
  414aff:	(bad)  
  414b00:	mov    edx,0x2c4e3a60
  414b05:	std    
  414b06:	xchg   edi,eax
  414b07:	and    al,0xf2
  414b09:	dec    ebp
  414b0a:	sub    eax,0x671facc
  414b0f:	jl     0x414a92
  414b11:	adc    BYTE PTR [ecx-0x70],ah
  414b14:	jge    0x414ae8
  414b16:	in     eax,dx
  414b17:	and    al,0x61
  414b19:	(bad)  
  414b1c:	out    dx,al
  414b1d:	push   es
  414b1e:	and    edx,DWORD PTR [eax-0x12]
  414b21:	inc    ebp
  414b22:	xchg   DWORD PTR [edi-0x33],edi
  414b25:	dec    edx
  414b26:	into   
  414b27:	push   eax
  414b28:	es dec edi
  414b2a:	sbb    al,0x4
  414b2c:	pushf  
  414b2d:	iret   
  414b2e:	mov    ds:0x4e16ded6,al
  414b33:	mov    bl,0xd
  414b35:	ins    DWORD PTR es:[edi],dx
  414b36:	sbb    DWORD PTR [edx+0x9],ecx
  414b39:	pop    ds
  414b3a:	scas   al,BYTE PTR es:[edi]
  414b3b:	mov    eax,ds:0x64d89e44
  414b40:	add    cl,al
  414b42:	retf   0x5429
  414b45:	xchg   esi,eax
  414b46:	mov    eax,DWORD PTR [edi+0x380e7b6]
  414b4c:	fwait
  414b4d:	jnp    0x414b5f
  414b4f:	ja     0x414b63
  414b51:	adc    edi,eax
  414b53:	sbb    ebx,DWORD PTR [ebx+0x6003acff]
  414b59:	sub    esi,edx
  414b5b:	je     0x414b2a
  414b5d:	or     ch,BYTE PTR [ecx-0x264cd781]
  414b63:	mov    bl,0x6f
  414b65:	int    0x87
  414b67:	je     0x414b41
  414b69:	ss pop ebx
  414b6b:	or     DWORD PTR [ebx-0x27],esp
  414b6e:	add    ebp,DWORD PTR [esp+esi*2+0x23]
  414b72:	push   ebx
  414b73:	sar    ebx,0xd3
  414b76:	adc    al,0xa1
  414b78:	clc    
  414b79:	fcomp  QWORD PTR [ebx]
  414b7b:	(bad)  
  414b7d:	pop    ss
  414b7e:	(bad)  
  414b80:	jne    0x414b8a
  414b82:	xchg   BYTE PTR [ecx+0x7ea5b469],bh
  414b88:	mov    dl,0x6e
  414b8a:	(bad)  
  414b8b:	inc    eax
  414b8c:	mov    esp,0xda64e061
  414b91:	cmp    eax,ebx
  414b93:	inc    ecx
  414b94:	push   ebx
  414b95:	outs   dx,BYTE PTR ds:[esi]
  414b96:	stos   DWORD PTR es:[edi],eax
  414b97:	or     BYTE PTR [edi-0x584f1333],ah
  414b9d:	add    al,0xd3
  414b9f:	sbb    DWORD PTR [ecx+0x49],eax
  414ba2:	enter  0xa218,0x75
  414ba6:	cdq    
  414ba7:	sub    DWORD PTR [ecx-0x6b],0x71
  414bab:	scas   eax,DWORD PTR es:[edi]
  414bac:	fnstcw WORD PTR [edx+eax*2]
  414baf:	jge    0x414b3b
  414bb1:	enter  0x23cf,0x10
  414bb5:	ret    0x916b
  414bb8:	aas    
  414bb9:	push   0x1a4dce2a
  414bbe:	xor    cl,BYTE PTR [edi+0x7d]
  414bc1:	push   ss
  414bc2:	mov    bh,0x8d
  414bc4:	xor    al,0x1e
  414bc6:	pop    edx
  414bc7:	jo     0x414b58
  414bc9:	pop    ebp
  414bca:	lahf   
  414bcb:	lea    edi,[esi]
  414bcd:	add    al,0xe
  414bcf:	pop    edi
  414bd0:	aad    0x2e
  414bd2:	into   
  414bd3:	jb     0x414c2b
  414bd5:	mov    ds:0x64baff9e,eax
  414bda:	(bad)  
  414bdb:	outs   dx,DWORD PTR ds:[esi]
  414bdc:	xor    eax,0x9febf53f
  414be1:	(bad)  
  414be2:	mov    ?,ebx
  414be4:	scas   eax,DWORD PTR es:[edi]
  414be5:	push   DWORD PTR [ebx]
  414be7:	hlt    
  414be8:	cwde   
  414be9:	shl    DWORD PTR ds:0x21f44e0e,0xd5
  414bf0:	inc    ebp
  414bf1:	mov    ds:0x60f5b090,al
  414bf6:	sbb    eax,0x36057fc5
  414bfb:	loop   0x414b93
  414bfd:	push   ss
  414bfe:	add    eax,0xa0d35eb9
  414c03:	sti    
  414c04:	jg     0x414bcb
  414c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c07:	mov    cl,0x6e
  414c09:	jne    0x414c41
  414c0b:	add    BYTE PTR [esi+0x2ef1829f],bl
  414c11:	push   edi
  414c12:	js     0x414beb
  414c14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c15:	aam    0x4a
  414c17:	jo     0x414c85
  414c19:	pushf  
  414c1a:	call   0xdf697ba3
  414c1f:	push   ebp
  414c20:	mov    ch,0xdd
  414c22:	ror    ah,0x31
  414c25:	dec    ebp
  414c26:	xchg   BYTE PTR [edx+0x562d810e],dh
  414c2c:	out    0x98,al
  414c2e:	pusha  
  414c2f:	pushf  
  414c30:	je     0x414be5
  414c32:	and    eax,ecx
  414c34:	sbb    DWORD PTR cs:[eax-0x2642f756],ebp
  414c3b:	xchg   ebx,eax
  414c3c:	mov    ebx,0x68813fd1
  414c41:	dec    edi
  414c42:	cmp    ebp,eax
  414c44:	dec    eax
  414c45:	cmc    
  414c46:	hlt    
  414c47:	ror    dl,1
  414c49:	out    0x84,al
  414c4b:	les    ecx,FWORD PTR [edi+0x2]
  414c4e:	popf   
  414c4f:	add    BYTE PTR [ebx],al
  414c51:	aam    0xa2
  414c53:	mov    bl,0x67
  414c55:	test   al,0x82
  414c57:	retf   
  414c58:	add    BYTE PTR [edx],0xbf
  414c5b:	sub    al,0xc5
  414c5d:	test   al,0x13
  414c5f:	frstor [ebp+0x3fd31613]
  414c65:	jmp    0xef3f6929
  414c6a:	inc    ebx
  414c6b:	mov    bh,0xe7
  414c6d:	adc    BYTE PTR [ebx],ch
  414c6f:	cs stc 
  414c71:	hlt    
  414c72:	mov    esi,0xd8fb2bcc
  414c77:	dec    ebx
  414c78:	test   eax,0x25044bb6
  414c7d:	xor    eax,0x9729fc39
  414c82:	cmp    ebp,0x4b8679ad
  414c88:	cmp    BYTE PTR ds:0xadbc3969,bl
  414c8e:	test   BYTE PTR [edi],al
  414c90:	lds    esp,FWORD PTR [edi]
  414c92:	iret   
  414c93:	test   eax,0xcdc507f4
  414c98:	cdq    
  414c99:	mov    esp,0x738921e8
  414c9e:	(bad)  
  414ca0:	pop    esp
  414ca1:	cmp    al,0x7b
  414ca3:	push   ecx
  414ca4:	pop    ebx
  414ca5:	adc    ebp,DWORD PTR [ebx+0x41]
  414ca8:	inc    eax
  414ca9:	dec    edx
  414caa:	aam    0x5
  414cac:	adc    eax,0xa1a3b36c
  414cb1:	out    dx,al
  414cb2:	mov    bh,0xd3
  414cb4:	dec    edx
  414cb5:	adc    al,dh
  414cb7:	pop    es
  414cb8:	jecxz  0x414c9d
  414cba:	sub    ah,BYTE PTR [eax+0xde32bbe]
  414cc0:	push   ebx
  414cc1:	pushf  
  414cc2:	adc    eax,0xd91a6d3f
  414cc7:	push   0x40
  414cc9:	enter  0x158d,0x91
  414ccd:	adc    DWORD PTR [edi-0x31e9eb82],esp
  414cd3:	les    esi,FWORD PTR [edi]
  414cd5:	js     0x414d4b
  414cd7:	int    0xca
  414cd9:	adc    BYTE PTR ds:0x98f93385,0x80
  414ce0:	fisttp DWORD PTR [edi]
  414ce2:	inc    ebx
  414ce3:	ret    
  414ce4:	push   ecx
  414ce5:	inc    esp
  414ce6:	lahf   
  414ce7:	inc    ebx
  414ce8:	shr    BYTE PTR [edx],0xe7
  414ceb:	cmp    al,0xde
  414ced:	sub    DWORD PTR [edx-0x38ab0224],ebx
  414cf3:	push   esp
  414cf4:	sbb    ebx,DWORD PTR [edi-0x225c2188]
  414cfa:	test   eax,0xa56c536e
  414cff:	repnz cmp BYTE PTR [ecx-0x44],al
  414d03:	fcomi  st,st(1)
  414d05:	lds    ebp,FWORD PTR [esi-0xfb7daff]
  414d0b:	pop    ecx
  414d0c:	mov    dl,al
  414d0e:	(bad)
  414d13:	retf   0xc09
  414d16:	jo     0x414d24
  414d18:	stos   BYTE PTR es:[edi],al
  414d19:	cli    
  414d1a:	test   al,0x84
  414d1c:	into   
  414d1d:	jb     0x414cae
  414d1f:	nop
  414d20:	mov    DWORD PTR [eax+ebp*8],ebx
  414d23:	lods   eax,DWORD PTR ds:[esi]
  414d24:	loop   0x414ca7
  414d26:	scas   al,BYTE PTR es:[edi]
  414d27:	ins    DWORD PTR es:[edi],dx
  414d28:	out    dx,al
  414d29:	jbe    0x414d75
  414d2b:	mov    ebp,?
  414d2d:	mov    ah,0x54
  414d2f:	push   esp
  414d30:	loop   0x414d5a
  414d32:	pop    eax
  414d33:	inc    edx
  414d34:	in     al,0x62
  414d36:	sub    DWORD PTR [esi+0x4e],edi
  414d39:	mov    ds:0xc7da44,al
  414d3e:	sub    DWORD PTR [edi+0x51],ebp
  414d41:	mov    bl,ch
  414d43:	mov    eax,DWORD PTR [edi*8-0x57b4cf7a]
  414d4a:	imul   ebx,DWORD PTR [esi],0x42f4601b
  414d50:	xchg   DWORD PTR [edi-0xbf0a5e7],ebx
  414d56:	xchg   esp,eax
  414d57:	fmul   DWORD PTR [eax]
  414d59:	scas   al,BYTE PTR es:[edi]
  414d5a:	sti    
  414d5b:	ds or  dl,dh
  414d5e:	arpl   WORD PTR [esi],si
  414d60:	cmp    eax,0xed4654ab
  414d65:	stc    
  414d66:	sbb    ebx,edx
  414d68:	pushf  
  414d69:	aam    0x78
  414d6b:	adc    edx,DWORD PTR [ebp+0x6d]
  414d6e:	xchg   BYTE PTR [eax-0x2f],dh
  414d71:	push   edx
  414d72:	and    ecx,DWORD PTR [eax+0x73]
  414d75:	sub    eax,0xf583fe48
  414d7a:	rcr    DWORD PTR [ecx],1
  414d7c:	inc    ecx
  414d7d:	adc    al,0xd5
  414d7f:	push   esi
  414d80:	xor    cl,BYTE PTR [ecx+0x473f3cf2]
  414d86:	stc    
  414d87:	or     eax,0x56b4a63f
  414d8c:	cmp    eax,0xfeeb1110
  414d91:	test   eax,0xc8650bbe
  414d96:	jl     0x414d7f
  414d98:	mov    ecx,0x124d1794
  414d9d:	xor    ch,BYTE PTR [edi]
  414d9f:	lahf   
  414da0:	sub    DWORD PTR [edx-0x54],esp
  414da3:	cmp    ebp,DWORD PTR [eax]
  414da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414da6:	out    0x4,eax
  414da8:	mov    bl,0x30
  414daa:	icebp  
  414dab:	inc    esp
  414dac:	pop    edi
  414dad:	ss fwait
  414daf:	add    al,0xf2
  414db1:	pop    ebx
  414db2:	sub    eax,0xeddc8fa5
  414db7:	jmp    0xcfc2:0xe4a4798c
  414dbe:	in     al,dx
  414dbf:	loope  0x414d4f
  414dc1:	retf   
  414dc2:	add    eax,0x708e0ce7
  414dc7:	out    dx,eax
  414dc8:	mov    bh,0xbd
  414dca:	popf   
  414dcb:	stos   BYTE PTR es:[edi],al
  414dcc:	stos   BYTE PTR es:[edi],al
  414dcd:	sub    DWORD PTR [edi+0x15],esi
  414dd0:	adc    eax,0x5ae30153
  414dd5:	jae    0x414e40
  414dd7:	dec    eax
  414dd8:	cwde   
  414dd9:	int3   
  414dda:	(bad)  
  414ddb:	xor    al,ah
  414ddd:	hlt    
  414dde:	clc    
  414ddf:	jmp    0x9ef3:0xbc562030
  414de6:	(bad)  
  414de7:	popa   
  414de8:	or     BYTE PTR ds:0x677c6394,0x4c
  414def:	sbb    eax,0x686ffe88
  414df4:	pop    esp
  414df5:	test   DWORD PTR [ebx-0x17],esi
  414df8:	mov    ebp,0xc550d78f
  414dfd:	inc    ebx
  414dfe:	dec    edi
  414dff:	call   edi
  414e01:	ss out 0xe,eax
  414e04:	retf   
  414e05:	mov    eax,0xe817a7d
  414e0a:	push   edi
  414e0b:	cmp    edx,DWORD PTR ds:0x205597b3
  414e11:	or     al,0x57
  414e13:	pop    esi
  414e14:	push   ss
  414e15:	xor    BYTE PTR [ecx-0x44fd7e8a],cl
  414e1b:	into   
  414e1c:	bound  edx,QWORD PTR ds:0x243fcd14
  414e22:	pop    ss
  414e23:	adc    BYTE PTR [edx],0x7b
  414e26:	out    0xdb,eax
  414e28:	dec    edi
  414e29:	or     BYTE PTR [ebx],bl
  414e2b:	inc    edx
  414e2c:	dec    ebp
  414e2d:	out    0x30,eax
  414e2f:	enter  0x354d,0x13
  414e33:	sub    DWORD PTR [esi],eax
  414e35:	call   0x9a3a:0x63e0f060
  414e3c:	sbb    esi,ecx
  414e3e:	jle    0x414dcc
  414e40:	inc    esp
  414e41:	jecxz  0x414df0
  414e43:	aas    
  414e44:	aas    
  414e45:	bound  ebx,QWORD PTR [ebp-0x48]
  414e48:	mov    ds:0xf9e93ec0,eax
  414e4d:	pop    ebx
  414e4e:	mov    eax,ds:0x5e159343
  414e53:	out    0xe2,eax
  414e55:	dec    edi
  414e56:	outs   dx,DWORD PTR ds:[esi]
  414e57:	mov    bh,0x59
  414e59:	xchg   BYTE PTR [eax-0x2145aa8f],bh
  414e5f:	sbb    al,0xa
  414e61:	xchg   edx,eax
  414e62:	jbe    0x414df3
  414e64:	or     DWORD PTR [eax],edi
  414e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e67:	inc    edx
  414e68:	or     BYTE PTR [ebx+edx*2],dl
  414e6b:	and    ah,BYTE PTR [esi]
  414e6d:	popf   
  414e6e:	daa    
  414e6f:	hlt    
  414e70:	push   cs
  414e71:	jae    0x414e22
  414e73:	lock fcom QWORD PTR fs:[ecx+0x3]
  414e78:	jl     0x414eee
  414e7a:	lahf   
  414e7b:	pop    ss
  414e7c:	jl     0x414e2d
  414e7e:	pop    ebx
  414e7f:	jge    0x414ef2
  414e81:	adc    bh,BYTE PTR [edi]
  414e83:	add    al,0x67
  414e85:	mov    bl,0x1f
  414e87:	jmp    0x290a:0xcbee9441
  414e8e:	dec    eax
  414e8f:	rol    eax,cl
  414e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e92:	dec    ebx
  414e93:	mov    ebp,0x5de384d4
  414e98:	jnp    0x414e3a
  414e9a:	adc    dl,al
  414e9c:	mov    al,0xd3
  414e9e:	mov    edx,0x80c37972
  414ea3:	inc    esi
  414ea4:	fxtract 
  414ea6:	jmp    0x414f19
  414ea8:	in     eax,dx
  414ea9:	lods   eax,DWORD PTR ds:[esi]
  414eaa:	xor    DWORD PTR [ecx],0xffffffbb
  414ead:	jb     0x414eb5
  414eaf:	cmc    
  414eb0:	push   es
  414eb1:	xchg   ebp,eax
  414eb2:	xchg   esi,eax
  414eb3:	push   ecx
  414eb4:	xor    DWORD PTR [ecx+0x2474f91f],0xffffffb2
  414ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ebc:	jae    0x414f06
  414ebe:	adc    BYTE PTR [edx+0x22],0x9b
  414ec2:	adc    cl,0xd9
  414ec5:	dec    edi
  414ec6:	loop   0x414f10
  414ec8:	mov    ch,ah
  414eca:	jb     0x414e94
  414ecc:	xchg   edi,eax
  414ecd:	popw   es
  414ecf:	jo     0x763b76d0
  414ed5:	arpl   WORD PTR [eax-0x3f1fa75d],bx
  414edb:	mov    edx,0x10836dc5
  414ee0:	add    ecx,edi
  414ee2:	push   esp
  414ee3:	mov    ch,0xc2
  414ee5:	sub    al,0x8
  414ee7:	lahf   
  414ee8:	mov    dl,0x9a
  414eea:	add    bh,BYTE PTR [eax+0x4e612897]
  414ef0:	jl     0x414f28
  414ef2:	inc    eax
  414ef3:	jge    0x414e80
  414ef5:	ja     0x414ef6
  414ef7:	repnz pop edx
  414ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414efa:	ss xchg ebp,eax
  414efc:	add    edi,edx
  414efe:	(bad)  
  414eff:	cld    
  414f00:	mov    ch,0x83
  414f02:	dec    ebp
  414f03:	dec    eax
  414f04:	aaa    
  414f05:	and    esi,DWORD PTR [ecx+0x31c963fe]
  414f0b:	pop    ebx
  414f0c:	push   ebx
  414f0d:	inc    eax
  414f0e:	cmp    dh,ch
  414f10:	pop    esp
  414f11:	sbb    cl,bl
  414f13:	pop    ecx
  414f14:	in     al,dx
  414f15:	(bad)  
  414f16:	sti    
  414f17:	adc    BYTE PTR [ebp-0xfb72bc0],dh
  414f1d:	fsub   DWORD PTR [eax-0x49]
  414f20:	lds    eax,FWORD PTR [edx-0x6d]
  414f23:	push   esi
  414f24:	adc    dl,BYTE PTR [ecx-0x3ab9f090]
  414f2a:	mov    bl,0xc
  414f2c:	jne    0x414f03
  414f2e:	dec    esi
  414f2f:	dec    edi
  414f30:	lock jbe 0x414ee0
  414f33:	cmp    BYTE PTR [esi],bh
  414f35:	inc    esi
  414f36:	cmp    edx,ebx
  414f38:	dec    BYTE PTR [edx+0x183370e0]
  414f3e:	jb     0x414f18
  414f40:	pop    ebp
  414f41:	mov    al,ds:0xc3c0e7cb
  414f46:	cdq    
  414f47:	or     esp,DWORD PTR [edi-0x34954604]
  414f4d:	mov    eax,ds:0xee645452
  414f52:	test   BYTE PTR [ebp+0x43f3284c],cl
  414f58:	jmp    0x414f9e
  414f5a:	das    
  414f5b:	jecxz  0x414fb3
  414f5d:	retf   0x1374
  414f60:	sub    DWORD PTR [ebp-0x7f7e9bde],0x90c0bdfb
  414f6a:	cmp    BYTE PTR [ebx-0x2b65b483],bl
  414f70:	fistp  QWORD PTR ds:0xcdd08b1e
  414f76:	mov    ebp,0xada699de
  414f7b:	cmc    
  414f7c:	sub    BYTE PTR [ebp+0x1a],ah
  414f7f:	jmp    0x414f74
  414f81:	xor    al,0x76
  414f83:	les    edx,FWORD PTR [eax+0x3]
  414f86:	test   al,0x7b
  414f88:	or     eax,0x4950074a
  414f8d:	pop    ss
  414f8e:	in     eax,dx
  414f8f:	mov    dh,0x87
  414f91:	push   edi
  414f92:	loop   0x415004
  414f94:	shl    DWORD PTR [edi+0x44],1
  414f97:	test   eax,0xc01e0e51
  414f9c:	loop   0x414f41
  414f9e:	xlat   BYTE PTR ds:[ebx]
  414f9f:	popa   
  414fa0:	xor    eax,DWORD PTR [edi-0x30]
  414fa3:	sbb    DWORD PTR [edi],esp
  414fa5:	retf   0x75d2
  414fa8:	cmc    
  414fa9:	xor    al,0x1c
  414fab:	pop    ebp
  414fac:	xchg   ebp,eax
  414fad:	jmp    0xb3d2:0x5ab7101c
  414fb4:	mov    cl,0x79
  414fb6:	mov    esi,0xb5357ae8
  414fbb:	cli    
  414fbc:	or     ebp,DWORD PTR [esi-0x5774aa2a]
  414fc2:	fwait
  414fc3:	mov    eax,0xfcc46068
  414fc8:	outs   dx,BYTE PTR ds:[esi]
  414fc9:	xor    al,0xe7
  414fcb:	sub    ch,BYTE PTR [esi+eax*1+0xf]
  414fcf:	das    
  414fd0:	out    0xb6,al
  414fd2:	sbb    BYTE PTR [eax-0x78],ch
  414fd5:	or     dl,ah
  414fd7:	jae    0x414fe9
  414fd9:	ja     0x41503c
  414fdb:	add    DWORD PTR [ebp+eiz*8+0x59],ebp
  414fdf:	test   al,0x8
  414fe1:	(bad)  
  414fe3:	gs retf 0xe9b
  414fe7:	pop    es
  414fe8:	mov    BYTE PTR [eax-0xd],al
  414feb:	daa    
  414fec:	dec    esi
  414fed:	sti    
  414fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fef:	test   BYTE PTR [ecx+0x37],cl
  414ff2:	pushf  
  414ff3:	daa    
  414ff4:	and    DWORD PTR [ecx],eax
  414ff6:	mov    ch,0xc5
  414ff8:	push   ecx
  414ff9:	test   DWORD PTR [edx+0x1b96425c],edx
  414fff:	out    dx,eax
  415000:	fwait
  415001:	push   es
  415002:	ret    0x88b9
  415005:	push   es
  415006:	push   ecx
  415007:	out    dx,al
  415008:	dec    edi
  415009:	or     ebx,DWORD PTR [edi-0x232470dd]
  41500f:	pop    ebp
  415010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415011:	dec    esp
  415012:	ds sub eax,0xc9fbe096
  415018:	cmc    
  415019:	sub    dl,BYTE PTR [ecx+ecx*2-0x5c]
  41501d:	add    DWORD PTR [edx+eiz*1-0x66a68a22],esp
  415024:	(bad)  
  415025:	xlat   BYTE PTR ds:[ebx]
  415026:	sbb    eax,0x7f819e20
  41502b:	inc    DWORD PTR [esi]
  41502d:	or     DWORD PTR [eax-0x6],ebp
  415030:	test   BYTE PTR [ebx-0x5d31e719],cl
  415036:	xchg   BYTE PTR [ebp-0x5d],ch
  415039:	mov    eax,ds:0xd0423809
  41503e:	daa    
  41503f:	bound  edx,QWORD PTR [ecx+eax*1+0x6]
  415043:	pop    ebx
  415044:	fld    TBYTE PTR [edi]
  415046:	inc    esp
  415047:	xchg   edi,eax
  415048:	(bad)  
  415049:	lock lock into 
  41504c:	push   ecx
  41504d:	popf   
  41504e:	pop    eax
  41504f:	inc    eax
  415050:	(bad)
  415053:	jmp    0x41507f
  415055:	inc    edx
  415056:	ins    BYTE PTR es:[edi],dx
  415057:	and    ebx,DWORD PTR [ebp-0x2a]
  41505a:	into   
  41505b:	loop   0x4150d1
  41505d:	loop   0x4150c7
  41505f:	retf   0xdac7
  415062:	inc    ecx
  415063:	retf   0x1e4f
  415066:	sub    BYTE PTR [ecx],dh
  415068:	outs   dx,DWORD PTR ds:[esi]
  415069:	std    
  41506a:	fsubr  DWORD PTR [ebx]
  41506c:	adc    al,0xe6
  41506e:	xchg   DWORD PTR ds:0xe81d63d5,ebx
  415074:	pop    ecx
  415075:	jg     0x41502e
  415077:	lods   eax,DWORD PTR ds:[esi]
  415078:	repnz mov esp,edi
  41507b:	inc    ecx
  41507c:	xchg   esp,eax
  41507d:	fmul   DWORD PTR [ebx+0x5bacb48b]
  415083:	add    al,0x85
  415085:	pop    ecx
  415086:	push   es
  415087:	xor    al,0xf2
  415089:	sbb    ecx,DWORD PTR [esi+0x50]
  41508c:	fwait
  41508d:	and    edx,DWORD PTR [edx-0x3b61eb1a]
  415093:	int3   
  415094:	jbe    0x415080
  415096:	jo     0x415041
  415098:	test   eax,0x8c763a94
  41509d:	mov    esi,0x96e29c56
  4150a2:	frstor [edi+0x656af6d9]
  4150a8:	xchg   edi,eax
  4150a9:	int3   
  4150aa:	inc    edi
  4150ab:	repz inc BYTE PTR gs:[ebp+0xf]
  4150b0:	cwde   
  4150b1:	mov    eax,0x9e7504ee
  4150b6:	rcr    DWORD PTR [edx-0x10],cl
  4150b9:	mov    DWORD PTR [ebx+0x2c],edi
  4150bc:	pop    esi
  4150bd:	pop    ebp
  4150be:	inc    ecx
  4150bf:	add    al,0x2e
  4150c1:	repz test DWORD PTR [esi-0x65],0xb13cb948
  4150c9:	dec    ebp
  4150ca:	add    edx,DWORD PTR [edx-0x25c1db0f]
  4150d0:	cmp    eax,0x43f2912
  4150d5:	fnsave [edi+edi*1-0x15]
  4150d9:	jge    0x41508a
  4150db:	fist   WORD PTR [eax+0x7]
  4150de:	call   FWORD PTR [ecx]
  4150e0:	enter  0xd5fa,0x48
  4150e4:	pop    ecx
  4150e5:	mov    dl,0x9
  4150e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150e9:	mov    ds,ecx
  4150eb:	test   BYTE PTR [eax],ch
  4150ed:	js     0x415108
  4150ef:	mov    DWORD PTR [edx+0x74],ecx
  4150f2:	jne    0x4150c3
  4150f4:	out    dx,al
  4150f5:	cmp    BYTE PTR [ebx],cl
  4150f7:	add    ah,BYTE PTR [ecx+ebp*8-0x62]
  4150fb:	mov    ds:0x3f55acbb,eax
  415100:	cmp    al,0xdf
  415102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415103:	push   ds
  415104:	adc    BYTE PTR [esi+eiz*4],ch
  415107:	loopne 0x4150de
  415109:	jp     0x4150b5
  41510b:	sti    
  41510c:	les    esp,FWORD PTR [eax]
  41510e:	out    0x2b,al
  415110:	sti    
  415111:	jg     0x415130
  415113:	mov    ss,WORD PTR [edi-0xb]
  415116:	lods   al,BYTE PTR ds:[esi]
  415117:	dec    edi
  415118:	dec    edx
  415119:	out    dx,al
  41511a:	mov    ch,0xc1
  41511c:	ror    BYTE PTR [eax+eiz*1+0x3bfc1643],0x26
  415124:	xchg   BYTE PTR [ebx],bh
  415126:	cmp    al,0x14
  415128:	imul   dl
  41512a:	push   ebx
  41512b:	jge    0x4150e1
  41512d:	jle    0x4150f0
  41512f:	and    al,0x63
  415131:	out    0xf5,eax
  415133:	jb     0x415141
  415135:	add    edx,DWORD PTR ds:0x5815d20d
  41513b:	test   al,0xce
  41513d:	data16 loop 0x4150e1
  415140:	pop    ds
  415141:	rol    BYTE PTR [edi],1
  415143:	sar    DWORD PTR [ebx+0x79],cl
  415146:	ds pop es
  415148:	push   cs
  415149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41514a:	in     eax,0x9a
  41514c:	xchg   DWORD PTR [ebx],eax
  41514e:	cli    
  41514f:	xor    al,0x72
  415151:	dec    ebp
  415152:	pop    ds
  415153:	in     al,0xb4
  415155:	xchg   ebp,eax
  415156:	cdq    
  415157:	(bad)  
  415158:	in     eax,dx
  415159:	jae    0x4150ea
  41515b:	cld    
  41515c:	ror    DWORD PTR [ebx+0x1c7dbcad],cl
  415162:	addr16 mov dh,0x8c
  415165:	jne    0x415118
  415167:	arpl   WORD PTR [esi],si
  415169:	jb     0x41511a
  41516b:	cmp    ecx,DWORD PTR [edi]
  41516d:	push   esi
  41516e:	dec    ebx
  41516f:	popf   
  415170:	sbb    ch,ch
  415172:	sub    esp,DWORD PTR [edx+0x19]
  415175:	ret    
  415176:	adc    al,0x7d
  415178:	test   al,0x74
  41517a:	mov    ds:0xc69aded4,eax
  41517f:	jno    0x41512c
  415181:	push   edi
  415182:	popa   
  415183:	aaa    
  415184:	or     ch,BYTE PTR [ebp-0x13cabac]
  41518a:	fucomip st,st(3)
  41518c:	jmp    0x1ff2834
  415191:	std    
  415192:	cmp    esp,edx
  415194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415195:	mov    ds:0xe6ab0d22,eax
  41519a:	dec    ecx
  41519b:	(bad)  
  41519c:	adc    BYTE PTR [esi-0x57],dh
  41519f:	icebp  
  4151a0:	into   
  4151a1:	mov    ah,0x63
  4151a3:	lods   al,BYTE PTR ds:[esi]
  4151a4:	dec    ecx
  4151a5:	xor    BYTE PTR [esi-0x2a],dl
  4151a8:	pop    esi
  4151a9:	addr16 jg 0x41521f
  4151ac:	mul    DWORD PTR [eax-0x337840f6]
  4151b2:	aam    0x76
  4151b4:	out    dx,eax
  4151b5:	pop    es
  4151b6:	sub    ecx,DWORD PTR ds:0x9bf9dcf3
  4151bc:	ret    0xa3e6
  4151bf:	call   0xb086:0xd46181fe
  4151c6:	mov    cl,0xab
  4151c8:	hlt    
  4151c9:	mov    cl,0xd0
  4151cb:	mov    ah,0x35
  4151cd:	mov    bh,ch
  4151cf:	nop
  4151d0:	les    esp,FWORD PTR [ecx-0x6361a365]
  4151d6:	sbb    bl,BYTE PTR [esi+eiz*1+0x688565da]
  4151dd:	adc    DWORD PTR [ebx-0x37],ecx
  4151e0:	fdivp  st(3),st
  4151e2:	inc    edx
  4151e3:	dec    ebp
  4151e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151e5:	dec    eax
  4151e6:	outs   dx,BYTE PTR ds:[esi]
  4151e7:	imul   ebp,DWORD PTR [esp+ebp*8-0x6c],0x8a810bd5
  4151ef:	std    
  4151f0:	or     bh,BYTE PTR [ebx]
  4151f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f3:	div    BYTE PTR [edx+eiz*8]
  4151f6:	push   cs
  4151f7:	call   DWORD PTR [edx+0x1d]
  4151fa:	in     eax,0xe6
  4151fc:	cmp    DWORD PTR [eax-0xf],0x69
  415200:	mov    ah,0x91
  415202:	inc    eax
  415203:	mov    edx,0xb333b26d
  415208:	jle    0x41518f
  41520a:	imul   ebx,ebx,0x15c59559
  415210:	xchg   ecx,eax
  415211:	popf   
  415212:	mov    cl,0x67
  415214:	mov    dh,0xe1
  415216:	xchg   DWORD PTR [ecx],edi
  415218:	das    
  415219:	xchg   esp,eax
  41521a:	lods   eax,DWORD PTR ds:[esi]
  41521b:	mov    ds:0xac19e24b,eax
  415220:	xor    esp,DWORD PTR [eax+edx*4+0x47962e11]
  415227:	jmp    0x4151b6
  415229:	push   0x467200bb
  41522e:	fstp   QWORD PTR [eax+0x7]
  415231:	jge    0x415261
  415233:	mov    ah,BYTE PTR [edx-0xcf82a1a]
  415239:	xor    DWORD PTR [eax],ecx
  41523b:	xchg   edx,eax
  41523c:	aas    
  41523d:	add    eax,0x756afd28
  415242:	add    ebp,DWORD PTR [esi-0x30]
  415245:	loope  0x415237
  415247:	add    al,ch
  415249:	not    DWORD PTR [edi]
  41524b:	mov    DWORD PTR [ebx+eiz*8-0x14],edi
  41524f:	shr    DWORD PTR [edx],0xef
  415252:	call   0x3079:0x1f59138d
  415259:	rep outs dx,DWORD PTR ds:[esi]
  41525b:	lea    esp,[edi]
  41525d:	inc    ecx
  41525e:	xor    dh,BYTE PTR [edi-0x23]
  415261:	pop    ecx
  415262:	inc    DWORD PTR [ebx-0x5f]
  415265:	mov    dh,0x3a
  415267:	stc    
  415268:	xchg   BYTE PTR [ecx],ah
  41526a:	pop    edx
  41526b:	test   DWORD PTR [ebx-0x72],eax
  41526e:	pop    ebp
  41526f:	arpl   cx,di
  415271:	stos   DWORD PTR es:[edi],eax
  415272:	call   DWORD PTR [ebp-0x6b041429]
  415278:	push   ds
  415279:	cmp    bh,al
  41527b:	(bad)  
  41527c:	sti    
  41527d:	and    eax,esp
  41527f:	push   es
  415280:	xor    eax,0xe6a974ac
  415285:	dec    ebx
  415286:	test   BYTE PTR [ebx+edi*1-0x7e43b3ea],ah
  41528d:	mov    ebp,0xb13971ae
  415292:	and    eax,0xe449f61b
  415297:	push   ds
  415298:	cmp    BYTE PTR [esi],cl
  41529a:	and    eax,DWORD PTR [eax]
  41529c:	fsubr  DWORD PTR [edi+0x2e]
  41529f:	sub    ch,BYTE PTR [ebp-0x7fdeab59]
  4152a5:	lods   al,BYTE PTR ds:[esi]
  4152a6:	scas   al,BYTE PTR es:[edi]
  4152a7:	in     eax,0x2a
  4152a9:	in     eax,0xe8
  4152ab:	loop   0x415271
  4152ad:	retf   
  4152ae:	dec    eax
  4152af:	xchg   ebx,eax
  4152b0:	xchg   esp,eax
  4152b1:	mov    bh,0x71
  4152b3:	cmp    al,bh
  4152b5:	cld    
  4152b6:	dec    esi
  4152b7:	or     eax,0x58c6a7b
  4152bc:	jecxz  0x415301
  4152be:	dec    esi
  4152bf:	adc    DWORD PTR [esi+eax*4-0x2f63cca6],edx
  4152c6:	jnp    0x41526f
  4152c8:	jb     0x4152ec
  4152ca:	sub    DWORD PTR [ecx],esp
  4152cc:	xchg   ebx,eax
  4152cd:	out    dx,eax
  4152ce:	fdiv   st,st(1)
  4152d0:	mov    ebp,0xe4acb348
  4152d5:	pusha  
  4152d6:	sahf   
  4152d7:	xor    edx,ebp
  4152d9:	or     al,0x42
  4152db:	fst    QWORD PTR [eax+0x763b3dcb]
  4152e1:	sub    eax,0x2f4a0341
  4152e6:	lock ins DWORD PTR es:[edi],dx
  4152e8:	test   BYTE PTR [edx+0x239d1027],0xeb
  4152ef:	popf   
  4152f0:	sti    
  4152f1:	in     al,0xe8
  4152f3:	push   ecx
  4152f4:	sub    eax,0x28dfadf3
  4152f9:	retf   
  4152fa:	dec    ebp
  4152fb:	call   0x44f7:0x4681f447
  415302:	xchg   ebx,eax
  415303:	xor    eax,0xe950314d
  415308:	iret   
  415309:	mov    ds:0xc1c141de,al
  41530e:	ins    DWORD PTR es:[edi],dx
  41530f:	mov    al,ds:0x5a3a11c9
  415314:	aaa    
  415315:	cli    
  415316:	add    dl,BYTE PTR [ebx]
  415318:	sub    ebx,DWORD PTR [edx+0x7505468]
  41531e:	add    eax,0x85d83d60
  415323:	int    0xb
  415325:	mov    DWORD PTR [ebx],edi
  415327:	inc    ebp
  415328:	jmp    0x4152f8
  41532a:	cmp    edx,DWORD PTR [edi+0x7e]
  41532d:	(bad)  
  41532e:	mov    dl,0x41
  415330:	ins    BYTE PTR es:[edi],dx
  415331:	les    ebx,FWORD PTR [eax-0x14b456e6]
  415337:	lahf   
  415338:	icebp  
  415339:	lods   eax,DWORD PTR ds:[esi]
  41533a:	inc    esi
  41533b:	sbb    al,0xc2
  41533d:	mov    eax,0x4272e1ad
  415342:	jnp    0x4153b8
  415344:	mov    WORD PTR [esi+0x6eccb9f4],gs
  41534a:	call   DWORD PTR ds:0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0xdb4939f
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0xf96ebe10
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	mov    BYTE PTR [edx-0x7bb3b12e],ch
  41555e:	mov    ch,0xa8
  415560:	lock add BYTE PTR [edx],ch
  415563:	loopne 0x41559b
  415565:	cmp    dh,al
  415567:	inc    edx
  415568:	test   BYTE PTR [edi-0x7c],0xb5
  41556c:	test   al,0xf4
  41556e:	add    BYTE PTR [edx],ch
  415570:	mov    al,ds:0x42f0c5c9
  415575:	dec    esi
  415576:	dec    edi
  415577:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41557d:	loopne 0x415548
  41557f:	(bad)
  415582:	dec    esi
  415583:	dec    edi
  415584:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41558a:	loopne 0x415555
  41558c:	(bad)
  41558f:	dec    esi
  415590:	dec    edi
  415591:	test   BYTE PTR [ebp+0x2a01fca8],dh
  415597:	loopne 0x415560
  415599:	fimul  DWORD PTR [edx+0x4c]
  41559c:	dec    esi
  41559d:	sti    
  41559e:	lea    edi,[eax-0x77]
  4155a1:	dec    esp
  4155a2:	add    DWORD PTR [esi+0x2d],esp
  4155a5:	call   0x3d6cee3b
  4155aa:	outs   dx,DWORD PTR ds:[esi]
  4155ab:	hlt    
  4155ac:	mov    edi,0x8d4b7293
  4155b2:	jmp    0x206de75d
  4155b7:	and    al,dh
  4155b9:	xchg   ebp,eax
  4155ba:	retf   0x2091
  4155bd:	pop    eax
  4155be:	xchg   ebp,eax
  4155bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155c0:	in     eax,0x99
  4155c2:	sub    al,0x6e
  4155c4:	or     ecx,ebx
  4155c6:	out    0x88,al
  4155c8:	cdq    
  4155c9:	outs   dx,DWORD PTR ds:[esi]
  4155ca:	dec    esi
  4155cb:	test   edi,esp
  4155cd:	enter  0x48fd,0x6a
  4155d1:	dec    edi
  4155d2:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4155d8:	call   0x37e0:0x7c7ed306
  4155df:	pop    ecx
  4155e0:	mov    eax,DWORD PTR [esi]
  4155e2:	mov    ebp,ds
  4155e4:	adc    al,0x4e
  4155e6:	mov    cl,0x18
  4155e8:	aad    0x71
  4155ea:	test   al,0x92
  4155ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155ed:	sbb    edx,eax
  4155ef:	sub    DWORD PTR ds:0x7a143219,esp
  4155f5:	pop    esi
  4155f6:	cmp    dl,BYTE PTR [ebx+0x7566b76a]
  4155fc:	loope  0x4155ac
  4155fe:	push   edx
  4155ff:	cmp    eax,0x9f231d98
  415604:	jne    0x4155e7
  415606:	cld    
  415607:	push   0xf7fb229f
  41560c:	xlat   BYTE PTR ds:[ebx]
  41560d:	addr16 mov ebp,0xa498752d
  415613:	pop    ecx
  415614:	nop
  415615:	push   es
  415616:	mov    ebp,ds
  415618:	adc    al,0x4e
  41561a:	mov    al,0x18
  41561c:	mov    ecx,0x469236ed
  415621:	cmp    eax,edx
  415623:	sub    DWORD PTR [eax],esi
  415625:	test   BYTE PTR [eax-0x6a3c1fec],bl
  41562b:	xchg   ebx,eax
  41562c:	ss sub cl,ch
  41562f:	jne    0x415602
  415631:	xor    ecx,eax
  415633:	cmp    eax,0x9f886bf6
  415638:	imul   edi,DWORD PTR [ecx+eiz*2+0x68],0xffffff97
  41563d:	pop    edx
  41563e:	js     0x415637
  415640:	mov    dl,0xa0
  415642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415643:	cwde   
  415644:	jl     0x415626
  415646:	aaa    
  415647:	pop    ecx
  415648:	mov    ch,0xa8
  41564a:	hlt    
  41564b:	add    BYTE PTR [edx],ch
  41564d:	loopne 0x415618
  41564f:	(bad)
  415652:	dec    esi
  415653:	dec    edi
  415654:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41565a:	loopne 0x415625
  41565c:	(bad)
  41565f:	dec    esi
  415660:	pop    ds
  415661:	shl    DWORD PTR [ebp+0x2901b8a8],0xe0
  415668:	scas   eax,DWORD PTR es:[edi]
  415669:	mov    edi,DWORD PTR [ebp-0x7bb0b1f3]
  41566f:	mov    ch,0xa8
  415671:	hlt    
  415672:	add    BYTE PTR [edx],ch
  415674:	add    cl,cl
  415676:	(bad)  
  415677:	icebp  
  415678:	dec    ecx
  415679:	dec    edi
  41567a:	inc    ebp
  41567b:	test   BYTE PTR [ebp+0x2a00f04a],dh
  415681:	fs iret 
  415683:	(bad)
  415686:	dec    esi
  415687:	dec    edi
  415688:	(bad)  
  415689:	or     BYTE PTR [eax-0x1fc5ff0c],ch
  41568f:	leave  
  415690:	(bad)
  415693:	dec    esi
  415694:	dec    edi
  415695:	test   ch,dh
  415697:	test   al,0xf4
  415699:	adc    BYTE PTR [edx],ch
  41569b:	loopne 0x415666
  41569d:	(bad)  
  41569e:	lock inc edx
  4156a0:	dec    ebx
  4156a1:	dec    edi
  4156a2:	test   DWORD PTR [ebp+0x2a00f4a8],esi
  4156a8:	in     eax,0xc9
  4156aa:	(bad)  
  4156ab:	lock inc edx
  4156ad:	dec    esi
  4156ae:	dec    edi
  4156af:	test   BYTE PTR [ebp+0x2a00f898],dh
  4156b5:	in     al,0xc9
  4156b7:	(bad)  
  4156ba:	dec    edx
  4156bb:	dec    edi
  4156bc:	xchg   BYTE PTR [ebp+0x2a0075e8],dh
  4156c2:	lock leave 
  4156c4:	(bad)
  4156c7:	dec    esi
  4156c8:	dec    edi
  4156c9:	test   BYTE PTR [ebp+0x2a10f4a8],ah
  4156cf:	loopne 0x41569a
  4156d1:	(bad)
  4156d4:	pop    esi
  4156d5:	dec    edi
  4156d6:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4156dc:	loopne 0x4156a7
  4156de:	(bad)
  4156e1:	dec    esi
  4156e2:	inc    ebx
  4156e3:	test   ah,ch
  4156e5:	stos   DWORD PTR es:[edi],eax
  4156e6:	hlt    
  4156e7:	add    BYTE PTR [edx],ch
  4156e9:	and    dl,al
  4156eb:	lds    esp,FWORD PTR [ebp-0x7bb0b183]
  4156f1:	mov    ch,0xa8
  4156f3:	hlt    
  4156f4:	add    BYTE PTR [edx],ch
  4156f6:	loopne 0x4156c1
  4156f8:	(bad)
  4156fb:	dec    esi
  4156fc:	dec    edi
  4156fd:	test   BYTE PTR [ebp+0x2620f4a8],dh
  415703:	loopne 0x4156d6
  415705:	(bad)
  415708:	dec    esi
  415709:	dec    edi
  41570a:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415710:	loopne 0x4156db
  415712:	(bad)
  415715:	dec    esi
  415716:	dec    edi
  415717:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41571d:	loopne 0x4156e8
  41571f:	(bad)
  415722:	dec    esi
  415723:	dec    edi
  415724:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41572a:	loopne 0x4156f5
  41572c:	(bad)
  41572f:	dec    esi
  415730:	dec    edi
  415731:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415737:	loopne 0x415702
  415739:	(bad)
  41573c:	dec    esi
  41573d:	dec    edi
  41573e:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415744:	loopne 0x41570f
  415746:	(bad)
  415749:	dec    esi
  41574a:	dec    edi
  41574b:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415751:	loopne 0x41571c
  415753:	(bad)
  415756:	dec    esi
  415757:	dec    edi
  415758:	stos   BYTE PTR es:[edi],al
  415759:	ror    ebp,0x8c
  41575c:	je     0x415788
  41575e:	loopne 0x415729
  415760:	lds    eax,FWORD PTR [eax+0x49]
  415763:	dec    esi
  415764:	dec    edi
  415765:	xchg   esp,eax
  415766:	mov    ch,0xa8
  415768:	hlt    
  415769:	data16 cs loopne 0x415736
  41576d:	shl    eax,0x42
  415770:	push   ds
  415771:	or     al,bh
  415773:	xchg   esp,edi
  415775:	mov    ebx,0xc9e02a00
  41577a:	(bad)
  41577d:	dec    esi
  41577e:	dec    edi
  41577f:	fiadd  DWORD PTR fs:[edi-0x361fb68e]
  415787:	(bad)
  41578a:	dec    esi
  41578b:	dec    edi
  41578c:	test   BYTE PTR [ebp-0x5d],dh
  41578f:	hlt    
  415790:	add    BYTE PTR [eax-0x20],bh
  415793:	leave  
  415794:	lds    ebx,FWORD PTR [edx-0x7bb0b1ba]
  41579a:	mov    ch,0xa8
  41579c:	hlt    
  41579d:	add    BYTE PTR [edx],ch
  41579f:	loopne 0x41576a
  4157a1:	(bad)
  4157a4:	outs   dx,BYTE PTR ds:[esi]
  4157a5:	dec    edi
  4157a6:	test   BYTE PTR [ebp-0x7a],dl
  4157a9:	xchg   BYTE PTR [ebp+0x46],ah
  4157ac:	(bad)
  4157b0:	inc    edx
  4157b1:	dec    esp
  4157b2:	dec    edi
  4157b3:	test   BYTE PTR [ebp+0x2a00f888],dh
  4157b9:	loop   0x415784
  4157bb:	(bad)
  4157be:	dec    edx
  4157bf:	dec    edi
  4157c0:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4157c6:	loopne 0x415791
  4157c8:	(bad)
  4157cb:	dec    esi
  4157cc:	je     0x135c087
  4157d2:	sub    ah,al
  4157d4:	leave  
  4157d5:	(bad)
  4157d8:	dec    esi
  4157d9:	dec    edi
  4157da:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4157e0:	loopne 0x4157ab
  4157e2:	(bad)
  4157e5:	dec    esi
  4157e6:	dec    edi
  4157e7:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4157ed:	loopne 0x4157b8
  4157ef:	(bad)
  4157f2:	dec    esi
  4157f3:	dec    edi
  4157f4:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4157fa:	loopne 0x4157c5
  4157fc:	(bad)
  4157ff:	dec    esi
  415800:	dec    edi
  415801:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415807:	loopne 0x4157d2
  415809:	(bad)
  41580c:	dec    esi
  41580d:	dec    edi
  41580e:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415814:	loopne 0x4157df
  415816:	(bad)
  415819:	dec    esi
  41581a:	dec    edi
  41581b:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415821:	loopne 0x4157ec
  415823:	(bad)
  415826:	dec    esi
  415827:	dec    edi
  415828:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41582e:	loopne 0x4157f9
  415830:	(bad)
  415833:	dec    esi
  415834:	dec    edi
  415835:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41583b:	loopne 0x415806
  41583d:	(bad)
  415840:	dec    esi
  415841:	dec    edi
  415842:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415848:	loopne 0x415813
  41584a:	(bad)
  41584d:	dec    esi
  41584e:	dec    edi
  41584f:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415855:	loopne 0x415820
  415857:	(bad)
  41585a:	dec    esi
  41585b:	dec    edi
  41585c:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415862:	loopne 0x41582d
  415864:	(bad)
  415867:	dec    esi
  415868:	dec    edi
  415869:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41586f:	loopne 0x41583a
  415871:	(bad)
  415874:	dec    esi
  415875:	dec    edi
  415876:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41587c:	loopne 0x415847
  41587e:	(bad)
  415881:	dec    esi
  415882:	dec    edi
  415883:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415889:	loopne 0x415854
  41588b:	(bad)
  41588e:	dec    esi
  41588f:	dec    edi
  415890:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415896:	loopne 0x415861
  415898:	(bad)
  41589b:	dec    esi
  41589c:	dec    edi
  41589d:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4158a3:	loopne 0x41586e
  4158a5:	(bad)
  4158a8:	dec    esi
  4158a9:	dec    edi
  4158aa:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4158b0:	loopne 0x41587b
  4158b2:	(bad)
  4158b5:	dec    esi
  4158b6:	dec    edi
  4158b7:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4158bd:	loopne 0x415888
  4158bf:	(bad)
  4158c2:	dec    esi
  4158c3:	dec    edi
  4158c4:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4158ca:	loopne 0x415895
  4158cc:	(bad)
  4158cf:	dec    esi
  4158d0:	dec    edi
  4158d1:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4158d7:	loopne 0x4158a2
  4158d9:	(bad)
  4158dc:	dec    esi
  4158dd:	dec    edi
  4158de:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4158e4:	loopne 0x4158af
  4158e6:	(bad)
  4158e9:	dec    esi
  4158ea:	dec    edi
  4158eb:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4158f1:	loopne 0x4158bc
  4158f3:	(bad)
  4158f6:	dec    esi
  4158f7:	dec    edi
  4158f8:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  4158fe:	loopne 0x4158c9
  415900:	(bad)
  415903:	dec    esi
  415904:	dec    edi
  415905:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41590b:	loopne 0x4158d6
  41590d:	(bad)
  415910:	dec    esi
  415911:	dec    edi
  415912:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415918:	loopne 0x4158e3
  41591a:	(bad)
  41591d:	dec    esi
  41591e:	dec    edi
  41591f:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415925:	loopne 0x4158f0
  415927:	(bad)
  41592a:	dec    esi
  41592b:	dec    edi
  41592c:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  415932:	loopne 0x4158fd
  415934:	(bad)
  415937:	dec    esi
  415938:	dec    edi
  415939:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41593f:	loopne 0x41590a
  415941:	(bad)
  415944:	dec    esi
  415945:	dec    edi
  415946:	test   BYTE PTR [ebp+0x2a00f4a8],dh
  41594c:	loopne 0x415917
  41594e:	(bad)
  415951:	dec    esi
  415952:	dec    edi
  415953:	test   BYTE PTR [ebp-0x7eff0b58],dh
  415959:	scas   al,BYTE PTR es:[edi]
  41595a:	ret    0xdfc5
  41595d:	inc    edx
  41595e:	dec    esi
  41595f:	pop    edi
  415960:	test   BYTE PTR [ebp+0x5eda5682],dh
  415966:	pop    ebp
  415967:	xchg   dh,dh
  415969:	loop   0x4159d4
  41596b:	jne    0x4159df
  41596d:	imul   eax,DWORD PTR [eax],0x3a
  415970:	repnz dec ecx
  415972:	jae    0x415985
  415974:	adc    eax,0x7505e376
  415979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41597a:	pop    esp
  41597b:	ds jmp 0x9b5e:0xafd0c285
  415983:	das    
  415984:	xchg   esi,eax
  415985:	push   cs
  415986:	sub    al,0xe9
  415988:	push   esi
  415989:	adc    esp,DWORD PTR ds:0x41e96925
  41598f:	inc    ebp
  415990:	out    0xbf,eax
  415992:	outs   dx,BYTE PTR ds:[esi]
  415993:	jbe    0x415951
  415995:	imul   BYTE PTR [edx+0x7cf247b8]
  41599b:	push   ds
  41599c:	mov    cl,dh
  41599e:	icebp  
  41599f:	mov    eax,0xe6a29dbb
  4159a4:	add    eax,0x2e7c4552
  4159a9:	aad    0x6f
  4159ab:	mov    dl,0xe4
  4159ad:	jne    0x4159d8
  4159af:	xor    bl,ah
  4159b1:	or     BYTE PTR [edx+0x52e806c5],ch
  4159b7:	sub    al,0xa3
  4159b9:	aad    0x68
  4159bb:	(bad)  
  4159bc:	sub    BYTE PTR [esp+esi*4+0x74840cf5],0x2a
  4159c4:	lea    edi,[edx+0x1b]
  4159c7:	clc    
  4159c8:	jo     0x415993
  4159ca:	stc    
  4159cb:	in     al,dx
  4159cc:	sbb    BYTE PTR [edi],bh
  4159ce:	test   DWORD PTR [ebx+0x4f],ebp
  4159d1:	aam    0x61
  4159d3:	fsubr  QWORD PTR [ebx-0x122c28e1]
  4159d9:	jecxz  0x415998
  4159db:	les    ebx,FWORD PTR [ebp+edx*2+0x3dd3b05b]
  4159e2:	loop   0x415977
  4159e4:	(bad)  
  4159e5:	push   0xffffff84
  4159e7:	mov    edi,0xc43c40a7
  4159ec:	jge    0x415a5c
  4159ee:	aad    0xf2
  4159f0:	cdq    
  4159f1:	mov    ebx,0xce1fd707
  4159f6:	rol    DWORD PTR [ebx-0x7ae9462e],cl
  4159fc:	dec    ebp
  4159fd:	jp     0x415a5a
  4159ff:	pop    esi
  415a00:	into   
  415a01:	(bad)  
  415a02:	xor    eax,0x838499fd
  415a07:	push   ebx
  415a08:	jb     0x415a4a
  415a0a:	sahf   
  415a0b:	add    DWORD PTR [esp+esi*4+0x416dc2],ebx
  415a12:	daa    
  415a13:	popa   
  415a14:	and    bh,BYTE PTR [edi+0x23]
  415a17:	sbb    eax,0xb9e757f1
  415a1c:	or     eax,0xc9e39a79
  415a21:	gs xchg edx,eax
  415a23:	sub    al,0x6c
  415a25:	fistp  QWORD PTR ds:0xc8719050
  415a2b:	or     eax,0x42cae293
  415a30:	out    dx,eax
  415a31:	inc    edi
  415a32:	lods   eax,DWORD PTR ds:[esi]
  415a33:	(bad)  
  415a34:	outs   dx,DWORD PTR ds:[esi]
  415a35:	fidivr WORD PTR [edx+0x22]
  415a38:	repnz xchg ebx,eax
  415a3a:	fwait
  415a3b:	xsha1  (bad)
  415a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a3d:	or     al,0x5d
  415a3f:	fs pop eax
  415a41:	pop    ds
  415a42:	stos   BYTE PTR es:[edi],al
  415a43:	outs   dx,BYTE PTR ds:[esi]
  415a44:	push   ecx
  415a45:	and    ebx,eax
  415a47:	les    edx,FWORD PTR [edx+0x66c4c272]
  415a4d:	dec    esi
  415a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a4f:	inc    ecx
  415a50:	dec    esp
  415a51:	add    esp,DWORD PTR [ebx]
  415a53:	fstp   QWORD PTR [ebp+0x71a19b7e]
  415a59:	add    al,0x1a
  415a5b:	call   0x43e3:0x6afc0fd4
  415a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a63:	dec    ebp
  415a64:	inc    esp
  415a65:	adc    BYTE PTR [esi],dl
  415a67:	ss in  eax,0x8a
  415a6a:	loopne 0x415a6f
  415a6c:	out    dx,eax
  415a6d:	cmp    al,0x51
  415a6f:	jo     0x415aa9
  415a71:	int    0x6f
  415a73:	add    edi,DWORD PTR [ecx+0x775f4737]
  415a79:	push   ss
  415a7a:	xlat   BYTE PTR cs:[ebx]
  415a7c:	fwait
  415a7d:	das    
  415a7e:	test   DWORD PTR [ecx+eiz*1+0x35],ecx
  415a82:	rcr    BYTE PTR [edx-0x6b769377],0x98
  415a89:	or     DWORD PTR [edx-0x69a11c74],edx
  415a8f:	push   es
  415a90:	pop    ecx
  415a91:	cmp    al,0x59
  415a93:	adc    DWORD PTR [ebx],0xd0a3bfb0
  415a99:	ret    
  415a9a:	gs dec eax
  415a9c:	mov    cl,0xfa
  415a9e:	xchg   edi,eax
  415a9f:	(bad)  
  415aa1:	jge    0x415a34
  415aa3:	imul   BYTE PTR [edi-0x4f1cd750]
  415aa9:	ret    0x4ec1
  415aac:	mov    esi,0x16a112b0
  415ab1:	mov    DWORD PTR [edx-0x13],ebx
  415ab4:	xchg   DWORD PTR [ecx-0x72],edi
  415ab7:	adc    al,0x95
  415ab9:	fs sbb eax,0xb1ad868
  415abf:	bound  ebx,QWORD PTR [ecx-0x24]
  415ac2:	jnp    0x415a52
  415ac4:	or     eax,0x205e8088
  415ac9:	leave  
  415aca:	add    DWORD PTR [edi-0x346a32ce],esi
  415ad0:	pop    edx
  415ad1:	cli    
  415ad2:	inc    eax
  415ad3:	scas   al,BYTE PTR es:[edi]
  415ad4:	sub    eax,0x4933101e
  415ad9:	push   0xffffffe4
  415adb:	fcom   QWORD PTR [esi]
  415add:	shl    BYTE PTR [ecx+0x1d58dd3d],1
  415ae3:	mov    al,0xe0
  415ae5:	add    BYTE PTR [ecx-0x3d],bh
  415ae8:	gs pop es
  415aea:	push   eax
  415aeb:	sbb    bh,BYTE PTR [ecx]
  415aed:	sub    eax,0xd7aedf0e
  415af2:	mov    al,0x62
  415af4:	into   
  415af5:	jl     0x415b43
  415af7:	add    ebp,DWORD PTR [eax+0x2a]
  415afa:	mov    bh,0x14
  415afc:	mov    ecx,0x1688ca81
  415b01:	js     0x415b32
  415b03:	jo     0x415b1e
  415b05:	jbe    0x415a8b
  415b07:	arpl   WORD PTR [ecx-0x730315ff],sp
  415b0d:	cli    
  415b0e:	ss push esi
  415b10:	push   ds
  415b11:	xor    BYTE PTR [edi+0x1e],0x6f
  415b15:	(bad)  
  415b16:	push   esp
  415b17:	sbb    bh,BYTE PTR [ebx]
  415b19:	outs   dx,DWORD PTR ds:[esi]
  415b1a:	test   BYTE PTR [eax+0x42],ah
  415b1d:	mov    ds:0xbffe3167,eax
  415b22:	jno    0x415ad3
  415b24:	cmp    BYTE PTR [ebx],dl
  415b26:	jecxz  0x415b82
  415b28:	pushf  
  415b29:	adc    al,0x23
  415b2b:	add    DWORD PTR [ebx],edx
  415b2d:	ss daa 
  415b2f:	test   ebx,ebp
  415b31:	sub    eax,0x997a9b5a
  415b36:	dec    BYTE PTR [edx]
  415b38:	aaa    
  415b39:	and    al,0xe8
  415b3b:	push   edi
  415b3c:	pop    edi
  415b3d:	mov    BYTE PTR [esi-0x32],ah
  415b40:	dec    ebp
  415b41:	call   0xbbff:0x15707e7b
  415b48:	arpl   dx,si
  415b4a:	loop   0x415ad9
  415b4c:	dec    ecx
  415b4d:	xor    eax,0xd86db56e
  415b52:	pop    ebp
  415b53:	mov    esi,edi
  415b55:	out    dx,al
  415b56:	xchg   esi,eax
  415b57:	addr16 ds sahf 
  415b5a:	jne    0x415b57
  415b5c:	jo     0x415bb8
  415b5e:	pop    ss
  415b5f:	mov    bl,0xbf
  415b61:	and    eax,0x980096e8
  415b66:	lds    esp,FWORD PTR [edx+0x2257d565]
  415b6c:	fild   QWORD PTR [edi]
  415b6e:	pop    esp
  415b6f:	call   0xb075:0x2cc98d7d
  415b76:	mov    esp,0xf9b56112
  415b7b:	push   0xffffffcc
  415b7d:	sbb    al,0x27
  415b7f:	das    
  415b80:	push   ebp
  415b81:	adc    al,0x6e
  415b83:	mov    edx,0xfbfb74c
  415b88:	cmp    al,0x29
  415b8a:	push   esp
  415b8b:	xor    ecx,DWORD PTR [edx+0x75570e0e]
  415b91:	fld    TBYTE PTR [eax+0x734939b3]
  415b97:	outs   dx,DWORD PTR ds:[esi]
  415b98:	or     al,0xb9
  415b9a:	outs   dx,DWORD PTR ds:[esi]
  415b9b:	fstp   DWORD PTR [edx-0x4b]
  415b9e:	fbstp  TBYTE PTR [edi+0x24]
  415ba1:	and    ecx,DWORD PTR [ecx]
  415ba3:	mov    esi,gs
  415ba5:	push   esi
  415ba6:	icebp  
  415ba7:	(bad)  
  415ba8:	hlt    
  415ba9:	sbb    DWORD PTR [edx-0x6d90c6c1],edx
  415baf:	adc    edi,DWORD PTR [edx+0x3e041920]
  415bb5:	sbb    eax,0x8071d172
  415bba:	xor    ch,cl
  415bbc:	int    0xa9
  415bbe:	mov    ebx,ebp
  415bc0:	shl    DWORD PTR [ebx-0x42f6c24d],1
  415bc6:	inc    eax
  415bc7:	ret    
  415bc8:	mov    ah,0x39
  415bca:	mov    edi,0x7e28ba71
  415bcf:	cmp    eax,0x4119fdc8
  415bd4:	test   DWORD PTR [ecx+0x21],ecx
  415bd7:	in     eax,0x7
  415bd9:	popa   
  415bda:	sub    DWORD PTR [ecx+0x2a],eax
  415bdd:	and    eax,0x2ca8ecd0
  415be2:	push   0xffffff97
  415be4:	stos   BYTE PTR es:[edi],al
  415be5:	(bad)  
  415be6:	ja     0x415c4a
  415be8:	nop
  415be9:	test   DWORD PTR [esi+0x1b],0xfe6c54b0
  415bf0:	push   cs
  415bf1:	mov    dl,0x7
  415bf3:	fbstp  TBYTE PTR [edi]
  415bf5:	call   0x33ff:0x5def8cb9
  415bfc:	fimul  DWORD PTR [esi]
  415bfe:	fimul  DWORD PTR [edi]
  415c00:	pop    ebp
  415c01:	dec    ecx
  415c02:	dec    edi
  415c03:	das    
  415c04:	lea    esp,cs:[edx-0xed1182d]
  415c0b:	inc    edx
  415c0c:	data16 stos BYTE PTR es:[edi],al
  415c0e:	adc    al,0xf1
  415c10:	or     DWORD PTR [ebx+edx*4],edx
  415c13:	sbb    eax,0x8d2983d
  415c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c19:	pop    eax
  415c1a:	lods   al,BYTE PTR ds:[esi]
  415c1b:	fs or  eax,0x7adf5630
  415c21:	jecxz  0x415bd0
  415c23:	call   0x5b5695c1
  415c28:	ins    DWORD PTR es:[edi],dx
  415c29:	inc    esp
  415c2a:	ds jo  0x415c07
  415c2d:	les    ebx,FWORD PTR cs:[ebx]
  415c30:	pop    ebp
  415c31:	test   al,0x20
  415c33:	test   al,0xc8
  415c35:	mov    dl,0xb6
  415c37:	mov    ecx,0x9c44e16d
  415c3c:	dec    DWORD PTR [edx+0x1]
  415c3f:	pusha  
  415c40:	in     eax,dx
  415c41:	adc    ebp,edi
  415c43:	xchg   bl,dh
  415c45:	push   ebp
  415c46:	enter  0x935f,0x5e
  415c4a:	dec    ebp
  415c4b:	lahf   
  415c4c:	pop    ebx
  415c4d:	xor    al,0xff
  415c4f:	mov    DWORD PTR [ebx],0x850217f2
  415c55:	cmp    eax,0x1e5593f9
  415c5a:	in     eax,dx
  415c5b:	jno    0x415c52
  415c5d:	inc    ecx
  415c5e:	push   0x1721f97a
  415c63:	das    
  415c64:	imul   esp,ecx,0xffffffb1
  415c67:	sub    al,0xbd
  415c69:	test   DWORD PTR [ebx+ebx*8-0x53],ecx
  415c6d:	div    DWORD PTR [ebp-0x28]
  415c70:	mov    eax,DWORD PTR [ecx]
  415c72:	mov    BYTE PTR [esi],al
  415c74:	push   ebp
  415c75:	leave  
  415c76:	out    dx,eax
  415c77:	mov    al,ds:0x9edcef1b
  415c7c:	add    al,0x19
  415c7e:	jb     0x415c2a
  415c80:	mov    ebx,0x354d55aa
  415c85:	xchg   ecx,eax
  415c86:	jge    0x415ce4
  415c88:	pop    edx
  415c89:	cli    
  415c8a:	or     ebp,DWORD PTR [esi-0x7ab10b25]
  415c90:	xchg   edx,eax
  415c91:	es imul edx,ebx,0x38a47fc5
  415c98:	push   es
  415c99:	push   edi
  415c9a:	js     0x415c27
  415c9c:	cmp    ebx,DWORD PTR [esp+edx*8-0x31b03501]
  415ca3:	popa   
  415ca4:	pop    ds
  415ca5:	das    
  415ca6:	test   esi,eax
  415ca8:	pop    edx
  415ca9:	xor    ecx,ebx
  415cab:	mov    ah,0xa8
  415cad:	inc    ebx
  415cae:	mov    edi,0xb4b3b130
  415cb3:	or     esp,DWORD PTR [ebp+0x19b47428]
  415cb9:	jo     0x415cab
  415cbb:	into   
  415cbc:	and    DWORD PTR [ebx],esp
  415cbe:	mov    esi,0xe51c2a9f
  415cc3:	xchg   ebx,eax
  415cc4:	mov    ds:0xd780d9da,al
  415cc9:	fnstsw WORD PTR [esi]
  415ccb:	dec    ebp
  415ccc:	retf   0x5242
  415ccf:	add    ecx,eax
  415cd1:	fdiv   st(0),st
  415cd3:	js     0x415c6d
  415cd5:	cli    
  415cd6:	pop    edi
  415cd7:	mov    edx,0x8abd7e45
  415cdc:	xchg   edi,eax
  415cdd:	sub    DWORD PTR [ecx-0x50501445],edx
  415ce3:	sbb    BYTE PTR [ecx+0x34],ah
  415ce6:	mov    al,ds:0x563eeb08
  415ceb:	dec    esp
  415cec:	cdq    
  415ced:	cdq    
  415cee:	int3   
  415cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cf0:	sbb    eax,0xb45ec718
  415cf5:	arpl   WORD PTR [eax+0xd],dx
  415cf8:	sahf   
  415cf9:	lods   eax,DWORD PTR ds:[esi]
  415cfa:	out    0x9b,al
  415cfc:	popf   
  415cfd:	frstpm(287 only) 
  415cff:	(bad)  
  415d00:	cmp    BYTE PTR [ebx-0x4f],dh
  415d03:	leave  
  415d04:	mov    ch,0xdd
  415d06:	call   0xb6277db8
  415d0b:	aaa    
  415d0c:	out    dx,al
  415d0d:	js     0x415cc0
  415d0f:	fwait
  415d10:	mov    cl,0x2d
  415d12:	shr    DWORD PTR [ecx+0x3b],0x1
  415d16:	mov    ?,WORD PTR [ebx+0x9e0da70]
  415d1c:	cmp    dh,BYTE PTR [eax-0x5d4c40bb]
  415d22:	cmp    DWORD PTR [esi-0x763778c6],esp
  415d28:	xor    al,0x47
  415d2a:	mov    cl,0x66
  415d2c:	test   eax,0xfec516c
  415d31:	repz add cl,cl
  415d34:	jns    0x415d64
  415d36:	data16 stos BYTE PTR es:[edi],al
  415d38:	mov    cl,0xec
  415d3a:	icebp  
  415d3b:	call   0x2748a7cf
  415d40:	and    al,0xa2
  415d42:	pop    ebx
  415d43:	dec    edx
  415d44:	sub    ecx,ebx
  415d46:	out    0x86,al
  415d48:	adc    ch,BYTE PTR [esi-0x64abeaa]
  415d4e:	call   FWORD PTR [ecx]
  415d50:	mov    bl,0xb
  415d52:	mul    DWORD PTR [ebp-0x5e]
  415d55:	add    dh,BYTE PTR [esp+esi*2+0x4c]
  415d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d5a:	sub    eax,0x2fc30820
  415d5f:	das    
  415d60:	out    0xb,eax
  415d62:	push   cs
  415d63:	or     eax,0xa009baba
  415d68:	std    
  415d69:	hlt    
  415d6a:	ror    BYTE PTR [eax+eax*8],cl
  415d6d:	pop    eax
  415d6e:	mov    bh,0x31
  415d70:	pop    ebp
  415d71:	jmp    0x24b59695
  415d76:	ds stc 
  415d78:	fwait
  415d79:	mov    bh,0x81
  415d7b:	data16 add cl,BYTE PTR [ebp+0x2b]
  415d7f:	ret    
  415d80:	cmp    DWORD PTR [esi],ebp
  415d82:	mov    bh,0xb7
  415d84:	pop    ebx
  415d85:	xchg   bh,bh
  415d87:	call   FWORD PTR [edx]
  415d89:	int3   
  415d8a:	push   0xa273e310
  415d8f:	fcomip st,st(3)
  415d91:	mov    ah,0x5f
  415d93:	pop    es
  415d94:	add    dh,BYTE PTR [ebx+0x68]
  415d97:	jb     0x415d30
  415d99:	jmp    ebx
  415d9b:	xchg   esi,eax
  415d9c:	push   edi
  415d9d:	ret    
  415d9e:	jmp    0x4938:0xdc02ff9
  415da5:	jae    0x415da6
  415da7:	push   ecx
  415da8:	sub    al,0x75
  415daa:	(bad)  
  415dab:	sub    ebp,DWORD PTR [ebx]
  415dad:	clc    
  415dae:	sbb    dh,bh
  415db0:	sti    
  415db1:	cmp    dl,BYTE PTR gs:[eax-0xabb0beb]
  415db8:	lock or BYTE PTR [ecx-0x3c],cl
  415dbc:	lea    ebp,[edx-0x688c8b9a]
  415dc2:	xchg   esp,eax
  415dc3:	test   al,0xb8
  415dc5:	mov    bh,dl
  415dc7:	mov    ebx,0x9fb8cc41
  415dcc:	call   0x3f345281
  415dd1:	and    BYTE PTR [esi],cl
  415dd3:	dec    BYTE PTR [ebp+0x4f7547f6]
  415dd9:	pop    ebp
  415dda:	clc    
  415ddb:	pushf  
  415ddc:	test   al,0xc2
  415dde:	add    edx,DWORD PTR [esi+0x5]
  415de1:	jo     0x415d7b
  415de3:	add    DWORD PTR ds:0xee219704,esi
  415de9:	pop    edx
  415dea:	leave  
  415deb:	sbb    ecx,DWORD PTR [edi]
  415ded:	jne    0x415dd3
  415def:	es push esp
  415df1:	ja     0x415e02
  415df3:	sbb    eax,0xbeadf13e
  415df8:	mov    edi,0x6069bd12
  415dfd:	xchg   ecx,eax
  415dfe:	xchg   ecx,eax
  415dff:	adc    al,0x7f
  415e01:	xor    edi,eax
  415e03:	fstp   DWORD PTR [eax-0x7e48d6fe]
  415e09:	mov    al,ds:0x47f1dd89
  415e0e:	and    ebx,DWORD PTR [eax]
  415e10:	xchg   esi,eax
  415e11:	aad    0x6c
  415e13:	retf   0x3221
  415e16:	enter  0x99c2,0xac
  415e1a:	das    
  415e1b:	inc    esp
  415e1c:	nop
  415e1d:	pop    edi
  415e1e:	hlt    
  415e1f:	stos   BYTE PTR es:[edi],al
  415e20:	push   edx
  415e21:	ror    BYTE PTR [ecx+0x22],cl
  415e24:	rcr    BYTE PTR [ecx],cl
  415e26:	out    dx,al
  415e27:	inc    esp
  415e28:	pop    ds
  415e29:	pop    esi
  415e2a:	push   cs
  415e2b:	xor    bh,BYTE PTR ds:0x8a2396f3
  415e31:	ror    BYTE PTR [esi],1
  415e33:	push   0x7c
  415e35:	mov    bh,0x6e
  415e37:	mov    dl,0xd1
  415e39:	pusha  
  415e3a:	xchg   esp,eax
  415e3b:	sub    DWORD PTR [ebx-0x6f],0x5f
  415e3f:	jmp    0x415eb8
  415e41:	jae    0x415e8d
  415e43:	mov    esi,0x3580728b
  415e48:	sub    ch,BYTE PTR [eax-0x516beaa1]
  415e4e:	sub    BYTE PTR [eax-0x62ab2817],dh
  415e54:	add    al,0xc5
  415e56:	push   ecx
  415e57:	(bad)  
  415e58:	lods   eax,DWORD PTR ss:[esi]
  415e5a:	and    al,0xd0
  415e5c:	lods   al,BYTE PTR ds:[esi]
  415e5d:	mov    dh,0xea
  415e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e60:	ror    DWORD PTR [esp+esi*4+0x33],cl
  415e64:	mov    ds:0xbfd8ee73,eax
  415e69:	sbb    ch,BYTE PTR [ecx+0x43e7b41e]
  415e6f:	aad    0x5a
  415e71:	pop    eax
  415e72:	test   DWORD PTR [edx-0x71],ecx
  415e75:	mov    eax,0xb41d1bcb
  415e7a:	push   esp
  415e7b:	push   ss
  415e7c:	cmc    
  415e7d:	mov    ds:0x94ecafe6,al
  415e82:	mov    al,0x6f
  415e84:	ins    BYTE PTR es:[edi],dx
  415e85:	dec    ecx
  415e86:	xor    DWORD PTR [edx+0x4205b041],ebp
  415e8c:	pop    es
  415e8d:	sbb    eax,0x6193b5f
  415e92:	enter  0xaa61,0xaf
  415e96:	stos   DWORD PTR es:[edi],eax
  415e97:	add    DWORD PTR [ebx-0x49cfb51f],esp
  415e9d:	add    al,0x30
  415e9f:	cmp    BYTE PTR [ebx-0x1d],bh
  415ea2:	hlt    
  415ea3:	pop    ecx
  415ea4:	cmp    BYTE PTR [ebx+eax*1-0x49],dl
  415ea8:	inc    edx
  415ea9:	push   esp
  415eaa:	aam    0x60
  415eac:	push   eax
  415ead:	push   ebp
  415eae:	pusha  
  415eaf:	loopne 0x415e70
  415eb1:	mov    cl,BYTE PTR [edi+0x72a16de]
  415eb7:	fadd   st,st(4)
  415eb9:	xor    DWORD PTR [edx+edx*1],0x38f8da89
  415ec0:	fs lock loop 0x415e86
  415ec4:	ss imul ebp,esi,0x466043d0
  415ecb:	sbb    al,0x62
  415ecd:	xor    BYTE PTR [edi],bh
  415ecf:	out    0x10,eax
  415ed1:	loope  0x415e6a
  415ed3:	in     eax,0xa5
  415ed5:	mov    ebx,0xfa909dda
  415eda:	pop    edx
  415edb:	repnz xchg esp,eax
  415edd:	test   al,0xae
  415edf:	mov    ecx,0x4596e415
  415ee4:	imul   ecx,esp,0xd53a4b83
  415eea:	jbe    0x415e96
  415eec:	mov    ebx,0x37b58572
  415ef1:	or     BYTE PTR [edx+0x3d],al
  415ef4:	fwait
  415ef5:	xor    DWORD PTR [ebp+0x24c4fa7b],ebx
  415efb:	out    dx,al
  415efc:	pop    edx
  415efd:	inc    ebp
  415efe:	ins    BYTE PTR es:[edi],dx
  415eff:	or     bl,BYTE PTR [edi-0x69]
  415f02:	fld    DWORD PTR [edx-0x22]
  415f05:	xor    DWORD PTR [eax-0xf4681ab],0xffffffae
  415f0c:	sbb    ah,bh
  415f0e:	je     0x415ebb
  415f10:	xchg   edx,eax
  415f11:	fsubrp st(6),st
  415f13:	or     DWORD PTR [edx-0x16],ebx
  415f16:	mov    eax,ds:0x5f5f218
  415f1b:	and    esp,DWORD PTR [ecx+0x14ad1715]
  415f21:	inc    esi
  415f22:	inc    edx
  415f23:	sti    
  415f24:	adc    edx,DWORD PTR [eax-0x48a6bfb9]
  415f2a:	or     DWORD PTR [edx+0x7862753c],eax
  415f30:	and    esp,DWORD PTR [edx-0x7149e8f6]
  415f36:	mov    al,0xd1
  415f38:	popa   
  415f39:	dec    esi
  415f3a:	pushf  
  415f3b:	cmc    
  415f3c:	pop    ebx
  415f3d:	shr    BYTE PTR [ebx-0x11],0x35
  415f41:	or     dh,bh
  415f43:	das    
  415f44:	mov    esp,0x8122eaf4
  415f49:	xor    dh,BYTE PTR [esi-0x79]
  415f4c:	mov    al,0x67
  415f4e:	mov    BYTE PTR [eax*4+0x12873695],cl
  415f55:	xchg   edx,eax
  415f56:	outs   dx,DWORD PTR ds:[esi]
  415f57:	mov    BYTE PTR [edi+0x318d7108],bh
  415f5d:	jmp    DWORD PTR [ebx+ebp*2-0x71]
  415f61:	movnti DWORD PTR [ecx+0x73f76a19],esi
  415f68:	jmp    0xc6ad:0x258dada8
  415f6f:	jmp    0x1080:0x91f9c517
  415f76:	mov    al,0x3e
  415f78:	push   0x1f
  415f7a:	push   edi
  415f7b:	jg     0x415fe1
  415f7d:	lds    esp,FWORD PTR [ecx-0x34]
  415f80:	push   0xffffff8a
  415f82:	mov    ecx,0xf11e6ee7
  415f87:	jle    0x416004
  415f89:	xchg   edx,eax
  415f8a:	pop    esi
  415f8b:	mov    dl,0xca
  415f8d:	test   eax,0xeb5f4843
  415f92:	aaa    
  415f93:	cld    
  415f94:	pop    esp
  415f95:	std    
  415f96:	mov    cl,0x78
  415f98:	lods   al,BYTE PTR ds:[esi]
  415f99:	repz sub BYTE PTR [edx],0xdf
  415f9d:	mov    WORD PTR [ebp+0x30],gs
  415fa0:	pop    ss
  415fa1:	mov    ds:0x495a3697,eax
  415fa6:	adc    eax,0xa51c8d41
  415fab:	cld    
  415fac:	test   eax,0x3b70ec6b
  415fb1:	sub    BYTE PTR [ebp-0x5dd8cfab],0x5a
  415fb8:	fist   WORD PTR [esi-0x18]
  415fbb:	inc    ecx
  415fbc:	in     eax,0xd2
  415fbe:	ret    
  415fbf:	mov    ds:0xdaea5cde,eax
  415fc4:	out    0xff,al
  415fc6:	jne    0x415fad
  415fc8:	loop   0x415f76
  415fca:	pop    ebp
  415fcb:	or     DWORD PTR [edi],ebx
  415fcd:	dec    edi
  415fce:	leave  
  415fcf:	gs imul ah
  415fd2:	sbb    al,BYTE PTR [ebx+0x13]
  415fd5:	out    0x90,eax
  415fd7:	xchg   esi,eax
  415fd8:	jg     0x7ef5a750
  415fde:	dec    esp
  415fdf:	cmp    bh,BYTE PTR [edx+0x7c]
  415fe2:	retf   
  415fe3:	xor    eax,0x4e9cb196
  415fe8:	lods   al,BYTE PTR ds:[esi]
  415fe9:	and    DWORD PTR [edi+0x38],edx
  415fec:	popf   
  415fed:	pop    edi
  415fee:	aam    0xf0
  415ff0:	mov    ch,0xd7
  415ff2:	lahf   
  415ff3:	mov    ch,0xcd
  415ff5:	xchg   ecx,eax
  415ff6:	shl    ch,cl
  415ff8:	imul   eax,DWORD PTR [ebp-0x1a],0x6e
  415ffc:	mov    al,0xf4
  415ffe:	(bad)  
  415fff:	mov    al,0x7b
  416001:	setne  BYTE PTR [ebx-0x40]
  416005:	cmp    DWORD PTR [eax+0x3eb80118],ebx
  41600b:	push   esp
  41600c:	and    al,0x4b
  41600e:	sbb    BYTE PTR [esi+esi*1-0x13ede087],0x9b
  416016:	and    ah,BYTE PTR [ebx+0x25]
  416019:	cmp    edi,0x36
  41601c:	clc    
  41601d:	icebp  
  41601e:	out    dx,eax
  41601f:	mov    bh,0x77
  416021:	(bad)  
  416022:	aas    
  416023:	push   edi
  416024:	imul   ecx,DWORD PTR [ecx-0x7e05b078],0xffffffa5
  41602b:	xor    al,0x78
  41602d:	ins    BYTE PTR es:[edi],dx
  41602e:	dec    ebx
  41602f:	fdiv   QWORD PTR [ebx-0x1c5fa334]
  416035:	mov    gs,WORD PTR [edi+edx*1]
  416038:	inc    eax
  416039:	sub    ebp,DWORD PTR [edi-0x3094c920]
  41603f:	or     eax,0xdc36a9cc
  416044:	xchg   BYTE PTR [ecx-0x909e62e],cl
  41604a:	inc    ecx
  41604b:	push   ds
  41604c:	mov    ebx,0x291ff154
  416051:	adc    edi,DWORD PTR [ecx]
  416053:	pop    ss
  416054:	add    BYTE PTR [eax],0x47
  416057:	in     al,0x8b
  416059:	es test al,0xbc
  41605c:	sbb    eax,0x28321e30
  416061:	jne    0x416051
  416063:	gs out dx,eax
  416065:	jmp    0x416060
  416067:	repnz cmp ah,BYTE PTR [ebx+0x4b0997d]
  41606e:	cmp    esp,eax
  416070:	scas   al,BYTE PTR es:[edi]
  416071:	pop    esi
  416072:	and    eax,0x4c304007
  416077:	xchg   ecx,eax
  416078:	into   
  416079:	add    dl,al
  41607b:	add    eax,0x1b9eb0bf
  416080:	push   eax
  416081:	test   eax,0x4e7204fb
  416086:	xchg   esi,eax
  416087:	adc    bh,dl
  416089:	xor    ebp,0xffffff97
  41608c:	mov    esp,0xd4724daf
  416091:	ficom  WORD PTR [edi+esi*8]
  416094:	cmp    dh,BYTE PTR [ebp+0x632eb920]
  41609a:	out    dx,eax
  41609b:	idiv   DWORD PTR [ecx-0x80]
  41609e:	pop    edx
  41609f:	sub    al,0x60
  4160a1:	dec    edi
  4160a2:	popf   
  4160a3:	shl    eax,1
  4160a5:	push   edi
  4160a6:	data16 int3 
  4160a8:	or     al,0xc8
  4160aa:	shl    BYTE PTR [eax+0x136171f],0xf0
  4160b1:	xchg   esp,eax
  4160b2:	imul   esi,DWORD PTR [esi-0x4b],0x380e3399
  4160b9:	into   
  4160ba:	adc    esp,DWORD PTR [esi+0x5f]
  4160bd:	loope  0x41613d
  4160bf:	mov    ebp,0xb9e9f391
  4160c4:	fidiv  WORD PTR [ebx+0x4428ff09]
  4160ca:	(bad)  
  4160cb:	dec    esp
  4160cc:	popa   
  4160cd:	in     al,0x4a
  4160cf:	fsub   DWORD PTR [eax]
  4160d1:	pop    eax
  4160d2:	pop    ss
  4160d3:	cld    
  4160d4:	or     DWORD PTR [esp+eiz*2+0x5c],ebp
  4160d8:	pushf  
  4160d9:	mov    es,WORD PTR [edi-0x5d57aaa8]
  4160df:	jnp    0x416065
  4160e1:	jle    0x416064
  4160e3:	rcl    ebx,1
  4160e5:	jmp    0xe0fd009c
  4160ea:	or     al,0x6e
  4160ec:	rcl    BYTE PTR [ecx-0x75],1
  4160ef:	es push esp
  4160f1:	dec    eax
  4160f2:	stos   BYTE PTR es:[edi],al
  4160f3:	sbb    dl,BYTE PTR [edi-0x443faa44]
  4160f9:	repz das 
  4160fb:	mov    WORD PTR [ecx+0x12],ss
  4160fe:	pop    ecx
  4160ff:	push   0x29
  416101:	or     al,0xfa
  416103:	cmp    al,0xe9
  416105:	pop    ebx
  416106:	int3   
  416107:	enter  0xc68,0x23
  41610b:	push   ss
  41610c:	and    eax,0xb418df93
  416111:	and    DWORD PTR [eax],ebp
  416113:	rcr    DWORD PTR [ebx],0xae
  416116:	dec    ebp
  416117:	mov    edi,edx
  416119:	add    dl,BYTE PTR [edx+esi*8]
  41611c:	outs   dx,WORD PTR ds:[esi]
  41611e:	outs   dx,BYTE PTR ds:[esi]
  41611f:	ret    0xdc7a
  416122:	inc    ebx
  416123:	mov    BYTE PTR [edi-0x73987eb2],cl
  416129:	push   esi
  41612a:	imul   esp,DWORD PTR [edx-0x70bc7ed4],0x40d0bffb
  416134:	dec    edx
  416135:	out    dx,al
  416136:	mov    cl,0xb9
  416138:	repnz and ebp,DWORD PTR [edx-0x28b2a7ce]
  41613f:	inc    esi
  416140:	fstp   TBYTE PTR [ebx-0x67]
  416143:	mov    bh,0x35
  416145:	inc    esi
  416146:	popf   
  416147:	scas   eax,DWORD PTR es:[edi]
  416148:	test   DWORD PTR [edi],esi
  41614a:	ds mov edx,ds
  41614d:	nop
  41614e:	mov    ch,ch
  416150:	arpl   WORD PTR ds:0xa12c4da6,di
  416156:	es jmp 0xe7289d0c
  41615c:	xchg   DWORD PTR [ebp-0x4379de0c],eax
  416162:	adc    ah,BYTE PTR [eax+0x48]
  416165:	and    ah,BYTE PTR [eax+0x6c971376]
  41616b:	jb     0x41612a
  41616d:	dec    ebp
  41616e:	or     DWORD PTR [esi+0x42],ebx
  416171:	test   eax,0x960682c
  416176:	push   edi
  416177:	and    BYTE PTR fs:[esi-0x3e],al
  41617b:	mov    ebx,0xe30ab5b1
  416180:	pop    ebx
  416181:	lds    esi,FWORD PTR fs:[ebx]
  416184:	lds    ebp,FWORD PTR [edx+0x4e]
  416187:	inc    edx
  416188:	fnsave [edx+ebp*2]
  41618b:	add    eax,0x87060d6
  416190:	inc    ebx
  416191:	add    DWORD PTR [edx+esi*8-0x6c],0x41
  416196:	mov    dl,0x68
  416198:	mov    ebp,ebx
  41619a:	mov    ebx,0x67bdba8b
  41619f:	clc    
  4161a0:	pop    edi
  4161a1:	inc    ecx
  4161a2:	mov    edi,0xac82edf0
  4161a7:	or     al,0x4e
  4161a9:	push   0xffffffe5
  4161ab:	in     eax,0x5b
  4161ad:	mov    eax,0x448a4173
  4161b2:	mov    DWORD PTR [edi+ecx*4+0xed12242],ebx
  4161b9:	push   eax
  4161ba:	jb     0x41617e
  4161bc:	pop    ds
  4161bd:	dec    ebp
  4161be:	es into 
  4161c0:	push   ecx
  4161c1:	ss iret 
  4161c3:	test   dl,0xfb
  4161c6:	fild   WORD PTR [ebp-0x3da30345]
  4161cc:	and    esi,DWORD PTR [edx+eax*2-0x69]
  4161d0:	lds    ebp,FWORD PTR [edx]
  4161d2:	data16 jp 0x416177
  4161d5:	dec    eax
  4161d6:	(bad)  
  4161d7:	fild   DWORD PTR [edx+0x3700cd0d]
  4161dd:	test   al,0x68
  4161df:	fdivr  st(0),st
  4161e1:	iret   
  4161e2:	retf   
  4161e3:	fmul   QWORD PTR [ecx+edx*4+0x2cb9c5f7]
  4161ea:	and    DWORD PTR [edi-0x3b6b2f4d],ecx
  4161f0:	inc    ecx
  4161f1:	test   DWORD PTR [edx-0x3ad4f2df],0x70af7122
  4161fb:	outs   dx,DWORD PTR ds:[esi]
  4161fc:	dec    ebp
  4161fd:	repnz sub BYTE PTR [edx+0xd],al
  416201:	jo     0x4161a0
  416203:	sub    dl,BYTE PTR [edx-0x7cc491df]
  416209:	push   edi
  41620a:	or     ah,bh
  41620c:	ss cmp al,0x1d
  41620f:	test   eax,0xc9310fb9
  416214:	inc    edx
  416215:	add    BYTE PTR [edi-0x6ad1775d],cl
  41621b:	stos   BYTE PTR es:[edi],al
  41621c:	jge    0x416236
  41621e:	jmp    0x416235
  416220:	push   ebx
  416221:	inc    edi
  416222:	sahf   
  416223:	pop    edi
  416224:	addr16 es push esp
  416227:	(bad)  
  416228:	pop    ss
  416229:	std    
  41622a:	std    
  41622b:	test   bl,ah
  41622d:	sahf   
  41622e:	mov    esp,0xc332fee3
  416233:	push   0x83f910e9
  416238:	push   cs
  416239:	fwait
  41623a:	inc    BYTE PTR ss:[edx-0x3e]
  41623e:	push   eax
  41623f:	jno    0x41627a
  416241:	xchg   ecx,eax
  416242:	not    BYTE PTR [esp+ebp*1-0x6e]
  416246:	jo     0x41626e
  416248:	gs out 0x47,eax
  41624b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41624c:	jno    0x4162b1
  41624e:	cwde   
  41624f:	jo     0x416231
  416251:	push   ss
  416252:	sub    DWORD PTR ds:0xaafb4be3,eax
  416258:	xlat   BYTE PTR ds:[ebx]
  416259:	ret    0x4231
  41625c:	daa    
  41625d:	nop
  41625e:	std    
  41625f:	loop   0x416233
  416261:	inc    ebp
  416262:	je     0x41624c
  416264:	out    dx,al
  416265:	adc    DWORD PTR [edi+0x44e084f1],ecx
  41626b:	lds    edi,FWORD PTR [ecx]
  41626d:	inc    ecx
  41626e:	mov    ebx,0x710aed57
  416273:	cmc    
  416274:	ins    BYTE PTR es:[edi],dx
  416275:	cmp    al,0xc7
  416277:	outs   dx,DWORD PTR ds:[esi]
  416278:	ficomp WORD PTR [edx+0xdb45af4]
  41627e:	cdq    
  41627f:	aad    0xd3
  416281:	add    al,0x1e
  416283:	adc    esp,DWORD PTR [edx-0x28efea90]
  416289:	in     eax,dx
  41628a:	shl    DWORD PTR [eax+0x51],cl
  41628d:	push   0xffffffa9
  41628f:	dec    ebp
  416290:	xor    bh,dh
  416292:	cwde   
  416293:	fadd   st(4),st
  416295:	in     eax,dx
  416296:	adc    al,0xce
  416298:	add    ecx,DWORD PTR [esi-0x42]
  41629b:	pop    esp
  41629c:	loopne 0x416256
  41629e:	loopne 0x416293
  4162a0:	jae    0x41624c
  4162a2:	adc    al,0xc7
  4162a4:	jae    0x416261
  4162a6:	xchg   ebp,eax
  4162a7:	fs inc esi
  4162a9:	adc    DWORD PTR [edi],ecx
  4162ab:	mov    edx,0xeafa1e2d
  4162b0:	mov    al,0xfd
  4162b2:	sub    ebx,DWORD PTR [ebp+0x591ca2fd]
  4162b8:	cld    
  4162b9:	outs   dx,DWORD PTR ds:[esi]
  4162ba:	xchg   ebp,eax
  4162bb:	dec    ecx
  4162bc:	ja     0x4162a2
  4162be:	sub    cl,bl
  4162c0:	adc    BYTE PTR [esi-0x5a208a40],0x92
  4162c7:	mov    ds:0x21981aea,al
  4162cc:	popf   
  4162cd:	add    ebx,DWORD PTR [ebp+ebx*2-0x44]
  4162d1:	fs push ebp
  4162d3:	inc    ebp
  4162d4:	sbb    cl,BYTE PTR [edx+0xb7f8e65]
  4162da:	sub    al,BYTE PTR [eax]
  4162dc:	pop    esi
  4162dd:	cmp    eax,0x479e1f3
  4162e2:	stc    
  4162e3:	push   0xe8b500f1
  4162e8:	xlat   BYTE PTR ds:[ebx]
  4162e9:	xchg   esi,eax
  4162ea:	xchg   ecx,eax
  4162eb:	mov    ss,WORD PTR [ebx+edi*4+0x28]
  4162ef:	fisttp QWORD PTR [esi]
  4162f1:	push   ds
  4162f2:	jno    0x41630d
  4162f4:	nop
  4162f5:	mov    al,ds:0x7d6b1546
  4162fa:	mov    dl,0x0
  4162fc:	nop
  4162fd:	mov    al,0xa2
  4162ff:	ins    BYTE PTR es:[edi],dx
  416300:	xchg   edi,eax
  416301:	ja     0x4162ae
  416303:	dec    ebx
  416304:	push   ss
  416305:	jmp    0x4162f4
  416307:	sub    bl,ah
  416309:	scas   al,BYTE PTR es:[edi]
  41630a:	xchg   DWORD PTR [eax+ecx*8],ebp
  41630d:	repnz mov edi,0xcaa7a6e
  416313:	mov    BYTE PTR [ebp-0x4d],bh
  416316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416317:	cli    
  416318:	pusha  
  416319:	mov    ebx,0x6085a41
  41631e:	sub    ebx,esi
  416320:	or     ebp,eax
  416322:	inc    ebx
  416323:	rcl    dh,cl
  416325:	xor    DWORD PTR [ebp+eiz*1-0x70],ebp
  416329:	or     al,0xd9
  41632b:	js     0x416391
  41632d:	into   
  41632e:	mov    edi,esi
  416330:	adc    BYTE PTR [eax+ecx*8+0x50],al
  416334:	mov    edi,0x24c299a5
  416339:	call   0xf6bab4d3
  41633e:	jg     0x416356
  416340:	inc    eax
  416341:	lods   al,BYTE PTR ds:[esi]
  416342:	cmc    
  416343:	xor    DWORD PTR [eax+edi*1-0x70],edi
  416347:	and    esp,DWORD PTR [ecx+ebx*8+0x4]
  41634b:	inc    esp
  41634c:	in     eax,dx
  41634d:	sub    ebx,DWORD PTR [ecx-0x7c0fe5ea]
  416353:	aam    0xd4
  416355:	js     0x416381
  416357:	fwait
  416358:	jmp    0x6fe69289
  41635d:	div    DWORD PTR [eax-0x2017911c]
  416363:	aad    0xb7
  416365:	mov    edx,0x877d9324
  41636a:	push   esi
  41636b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41636c:	(bad)  
  41636d:	mov    ebx,0xfe6c45b0
  416372:	jae    0x41633c
  416374:	xchg   edi,eax
  416375:	push   es
  416376:	test   eax,0xc6ba9317
  41637b:	xor    BYTE PTR [edx-0x76],bh
  41637e:	loope  0x4163cf
  416380:	mov    ebx,DWORD PTR [edi]
  416382:	enter  0x893c,0x79
  416386:	adc    ch,bh
  416388:	mov    cl,0xdb
  41638a:	getsec 
  41638c:	test   BYTE PTR [ebx+0x3524b5a7],al
  416392:	mov    DWORD PTR [edi-0x265d294f],0x871f621c
  41639c:	sahf   
  41639d:	ja     0x416407
  41639f:	mov    ah,0x4
  4163a1:	dec    ebx
  4163a2:	push   es
  4163a3:	add    eax,edx
  4163a5:	mov    BYTE PTR [edx+0x52c6cc02],al
  4163ab:	int    0x41
  4163ad:	add    DWORD PTR [esi],edi
  4163af:	push   edx
  4163b0:	jp     0x416400
  4163b2:	or     BYTE PTR ds:0xd14a5242,0x6c
  4163b9:	mov    eax,ds:0x399fa2f5
  4163be:	mov    ?,WORD PTR [esi+ebx*1]
  4163c1:	or     esi,DWORD PTR [eax-0x28]
  4163c4:	pop    eax
  4163c5:	stos   DWORD PTR es:[edi],eax
  4163c6:	and    al,0x14
  4163c8:	push   0xef9b7b69
  4163cd:	jecxz  0x41643f
  4163cf:	fild   QWORD PTR [edx-0x78]
  4163d2:	jbe    0x4163f1
  4163d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163d5:	retf   
  4163d6:	jns    0x416391
  4163d8:	mov    ebp,0xf3cb663
  4163dd:	pop    es
  4163de:	popa   
  4163df:	jmp    0x4163eb
  4163e1:	cli    
  4163e2:	aaa    
  4163e3:	cs inc ecx
  4163e5:	lea    ebp,[edx+eiz*1+0x276b4979]
  4163ec:	aaa    
  4163ed:	pushf  
  4163ee:	daa    
  4163ef:	sub    edx,DWORD PTR [edx+ecx*2]
  4163f2:	jb     0x416454
  4163f4:	lahf   
  4163f5:	cmp    eax,0x9d1391c7
  4163fa:	arpl   WORD PTR [eax+0x10],sp
  4163fd:	inc    ebx
  4163fe:	push   edx
  4163ff:	xchg   esp,eax
  416400:	(bad)  
  416402:	call   0x581e90b2
  416407:	jecxz  0x4163ec
  416409:	clc    
  41640a:	mov    ecx,DWORD PTR [edi]
  41640c:	adc    ecx,DWORD PTR ds:0xa0d2b047
  416412:	sahf   
  416413:	jne    0x4163f1
  416415:	hlt    
  416416:	sub    eax,0x48ec82c9
  41641b:	aam    0xee
  41641d:	dec    ebp
  41641e:	out    dx,al
  41641f:	fwait
  416420:	xchg   edx,eax
  416421:	cmp    al,0x2d
  416423:	jbe    0x4163d8
  416425:	nop
  416426:	cli    
  416427:	lea    esi,[ecx]
  416429:	sub    bl,bl
  41642b:	fsubp  st(4),st
  41642d:	and    DWORD PTR [edx+0x57c9ef6c],ecx
  416433:	ficomp DWORD PTR [esi+0x2f81e0aa]
  416439:	add    DWORD PTR [ebx+0x3a],eax
  41643c:	sub    al,0x7f
  41643e:	in     eax,0xae
  416440:	(bad)  
  416441:	in     al,0xcb
  416443:	ror    DWORD PTR [ecx+0x6e7e0c1e],cl
  416449:	xlat   BYTE PTR ds:[ebx]
  41644b:	call   FWORD PTR [edi]
  41644d:	or     eax,0x1bbb363
  416452:	mov    ch,0xc7
  416454:	sub    BYTE PTR [ecx+0x34],bl
  416457:	mov    DWORD PTR [ecx+0x3a22f979],esp
  41645d:	lods   eax,DWORD PTR ds:[esi]
  41645e:	pop    ss
  41645f:	bound  esp,QWORD PTR [eax+ebp*8]
  416462:	mov    al,ds:0x9df7171b
  416467:	(bad)  
  416468:	aad    0x1a
  41646a:	pop    eax
  41646b:	and    BYTE PTR [ebp-0xd],dl
  41646e:	mov    edx,0x30d4e478
  416473:	xchg   esi,eax
  416474:	scas   al,BYTE PTR es:[edi]
  416475:	aad    0x48
  416477:	push   0xaa8bb33e
  41647c:	repz ror DWORD PTR [edx-0x33],0xa5
  416481:	push   ebp
  416482:	scas   al,BYTE PTR es:[edi]
  416483:	cmp    bl,bl
  416485:	jp     0x4164e3
  416487:	loop   0x4164f7
  416489:	jno    0x41643a
  41648b:	(bad)  
  41648c:	mov    WORD PTR [esp+ebp*1],?
  41648f:	push   edi
  416490:	fadd   st,st(1)
  416492:	das    
  416493:	(bad)  
  416494:	sbb    al,0x29
  416496:	hlt    
  416497:	dec    ebp
  416498:	icebp  
  416499:	push   edx
  41649a:	daa    
  41649b:	jo     0x41648c
  41649d:	cdq    
  41649e:	push   edx
  41649f:	iret   
  4164a0:	mov    ecx,0x996f80bc
  4164a5:	adc    BYTE PTR ds:0x9b1f5f30,al
  4164ab:	popf   
  4164ac:	pushf  
  4164ad:	mov    BYTE PTR [esp+edi*8-0x3836c58d],cl
  4164b4:	fs test eax,0x3f499113
  4164ba:	loope  0x41645f
  4164bc:	fadd   QWORD PTR [esp+ebp*1]
  4164bf:	(bad)  
  4164c0:	pop    ss
  4164c1:	inc    ecx
  4164c2:	pop    ebx
  4164c3:	mov    esp,0x21e28ccc
  4164c8:	je     0x4164a5
  4164ca:	add    al,0x7a
  4164cc:	enter  0xbd08,0xbb
  4164d0:	inc    eax
  4164d1:	lds    esp,FWORD PTR ds:0x290e81e1
  4164d7:	xor    ebx,DWORD PTR [ecx-0x649136b7]
  4164dd:	mov    al,0x5f
  4164df:	and    DWORD PTR [edi+0x28],ecx
  4164e2:	loope  0x4164e5
  4164e4:	stc    
  4164e5:	enter  0x5072,0x33
  4164e9:	mov    al,ds:0xfe5b93e4
  4164ee:	push   edx
  4164ef:	inc    esi
  4164f0:	jg     0x4164d7
  4164f2:	xchg   esi,eax
  4164f3:	or     cl,BYTE PTR [eax+edi*2-0x68]
  4164f7:	add    BYTE PTR [edi-0x64],dh
  4164fa:	pop    ebp
  4164fb:	hlt    
  4164fc:	(bad)  
  4164fd:	push   ss
  4164fe:	xor    eax,0x62a65771
  416503:	push   cs
  416504:	(bad)  
  416506:	mov    BYTE PTR [ecx-0x59fac9ab],dh
  41650c:	rcr    BYTE PTR [ecx],0x37
  41650f:	xor    al,0x8b
  416511:	adc    BYTE PTR [edi+0x12],ah
  416514:	iret   
  416515:	add    eax,0xc3ea2403
  41651a:	fwait
  41651b:	loope  0x416506
  41651d:	lods   eax,DWORD PTR ds:[esi]
  41651e:	lods   al,BYTE PTR ds:[esi]
  41651f:	loop   0x4164d2
  416521:	jb     0x416556
  416523:	or     BYTE PTR [ecx],0x80
  416526:	daa    
  416527:	or     eax,0x79237be9
  41652c:	nop
  41652d:	fcmovnu st,st(7)
  41652f:	cmp    al,al
  416531:	mov    BYTE PTR [eax],0x4e
  416534:	jae    0x4164ec
  416536:	push   ss
  416537:	popf   
  416538:	mov    edx,0xe8af7995
  41653d:	int3   
  41653e:	jle    0x416567
  416540:	mov    esp,0x16dce85f
  416545:	adc    eax,0x1b9e5ecf
  41654a:	push   cs
  41654b:	js     0x416514
  41654d:	outs   dx,BYTE PTR ds:[esi]
  41654e:	xchg   BYTE PTR [eax-0x21],dl
  416551:	lea    edx,[ebp+0x6b]
  416554:	icebp  
  416555:	cmp    al,0x0
  416557:	xor    eax,0xeb7fb42e
  41655c:	jbe    0x41653a
  41655e:	(bad)  
  41655f:	sub    al,0x96
  416561:	sub    bl,al
  416563:	push   ebx
  416564:	add    DWORD PTR [ecx+0x63],edx
  416567:	retf   0xfb5
  41656a:	ins    BYTE PTR es:[edi],dx
  41656b:	loopne 0x4165d1
  41656d:	add    dl,BYTE PTR [ebx-0x5e2e019a]
  416573:	dec    ebp
  416574:	ret    0xc2cd
  416577:	sub    edi,edx
  416579:	push   ecx
  41657a:	inc    esi
  41657b:	adc    eax,0xb3818011
  416580:	xchg   esp,eax
  416581:	(bad)  
  416582:	mov    ebx,0x4096c26e
  416587:	stc    
  416588:	xchg   DWORD PTR [eax-0x7b80fe02],esp
  41658e:	int3   
  41658f:	adc    BYTE PTR [edi+0x112e5799],bl
  416595:	sar    edi,1
  416597:	cs mov esp,es
  41659a:	adc    eax,0xa348378c
  41659f:	push   ebx
  4165a0:	in     al,0xc3
  4165a2:	push   0x5c8e1107
  4165a7:	cdq    
  4165a8:	push   ds
  4165a9:	cmp    ebx,DWORD PTR [ebx-0x2dd54235]
  4165af:	sub    DWORD PTR [edx-0x6fa3e400],edi
  4165b5:	pop    ebp
  4165b6:	push   edx
  4165b7:	mov    ebp,0x52214d6a
  4165bc:	xor    DWORD PTR [edi],eax
  4165be:	rcl    DWORD PTR [edx-0x624311d8],1
  4165c4:	loopne 0x416622
  4165c6:	loopne 0x416603
  4165c8:	hlt    
  4165c9:	pop    ecx
  4165ca:	jmp    0x21a5:0x48ab9b79
  4165d1:	sub    eax,0x1f2a1f79
  4165d6:	out    dx,al
  4165d7:	pop    ebx
  4165d8:	add    bl,dh
  4165da:	push   0xba7d78e6
  4165df:	mov    DWORD PTR ds:0x68bb00e8,esi
  4165e5:	sub    al,ah
  4165e7:	mov    ebx,0xa542649a
  4165ec:	xor    BYTE PTR [esi-0x3d911c42],dl
  4165f2:	jnp    0x4165e1
  4165f4:	push   edi
  4165f5:	add    al,0xd5
  4165f7:	sbb    ah,bh
  4165f9:	jmp    0x1b228cd0
  4165fe:	nop
  4165ff:	add    bl,cl
  416601:	inc    edi
  416602:	xchg   ecx,eax
  416603:	mov    al,0x62
  416605:	cmp    ah,BYTE PTR [edx+0x31]
  416608:	loope  0x4165af
  41660a:	jmp    0xc643017e
  41660f:	call   0x93dd3eb8
  416614:	push   eax
  416615:	popa   
  416616:	pop    eax
  416617:	jo     0x4165e9
  416619:	push   edx
  41661a:	shr    dh,0x23
  41661d:	inc    ecx
  41661e:	(bad)  
  41661f:	cli    
  416620:	sbb    eax,0xe24c5916
  416625:	js     0x4165ab
  416627:	in     eax,dx
  416628:	les    ebx,FWORD PTR [ebp+0x640da795]
  41662e:	cmp    edx,ebx
  416630:	jle    0x416682
  416632:	out    dx,eax
  416633:	mov    eax,ds:0xdeb49bf4
  416638:	repnz mov ch,0xf2
  41663b:	jg     0x4165c4
  41663d:	imul   ecx,DWORD PTR [esi],0x7ac3c2ce
  416643:	mov    ah,0xc8
  416645:	push   edi
  416646:	jecxz  0x416622
  416648:	inc    ebx
  416649:	pop    eax
  41664a:	int3   
  41664b:	add    DWORD PTR [ebx],0xd8704e01
  416651:	adc    BYTE PTR [eax],bh
  416653:	sbb    DWORD PTR [ebx-0x34056980],edx
  416659:	inc    ecx
  41665a:	sub    eax,0xcc1380e0
  41665f:	stos   BYTE PTR es:[edi],al
  416660:	pop    esp
  416661:	loopne 0x4165ea
  416663:	and    al,0x72
  416665:	jo     0x41665d
  416667:	push   ds
  416668:	popa   
  416669:	fsub   QWORD PTR [edi-0x1627ddb1]
  41666f:	sbb    al,0xb8
  416671:	cld    
  416672:	stos   BYTE PTR es:[edi],al
  416673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416674:	sbb    BYTE PTR [eax+0x79],dl
  416677:	push   cs
  416678:	mov    edx,0xef21c479
  41667d:	inc    ebp
  41667e:	xlat   BYTE PTR ds:[ebx]
  41667f:	daa    
  416680:	cdq    
  416681:	jp     0x4166fe
  416683:	push   edi
  416684:	mov    ebp,0x6993434f
  416689:	jmp    0xcf15:0xfc851721
  416690:	retf   
  416691:	add    al,0x82
  416693:	ins    DWORD PTR es:[edi],dx
  416694:	dec    BYTE PTR [ebp-0x51]
  416697:	add    ebx,esp
  416699:	test   al,0x63
  41669b:	pop    esp
  41669c:	ffreep st(7)
  41669e:	imul   ecx,DWORD PTR [eax+0x51a32338],0x86925496
  4166a8:	mov    ch,0xfc
  4166aa:	(bad)  
  4166ab:	fwait
  4166ac:	hlt    
  4166ad:	mov    edi,DWORD PTR [edi+0x4a]
  4166b0:	sub    DWORD PTR [ebx],ebp
  4166b2:	ret    0x7814
  4166b5:	mov    ds:0x1d1d6cb1,eax
  4166ba:	xor    DWORD PTR [eax+0x1a98db9],0x43858b84
  4166c4:	pop    ss
  4166c5:	call   0x17e3:0x40383395
  4166cc:	(bad)  
  4166cd:	mov    dl,BYTE PTR [edi]
  4166cf:	mov    esp,0x1c7a74e3
  4166d4:	cld    
  4166d5:	cdq    
  4166d6:	mov    cl,BYTE PTR [eax]
  4166d8:	xchg   ecx,eax
  4166d9:	ds xchg edi,eax
  4166db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166dc:	mov    dh,0x76
  4166de:	sar    BYTE PTR [esi+eax*2+0x752c13a0],1
  4166e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e6:	mov    al,0x21
  4166e8:	out    dx,al
  4166e9:	pop    esi
  4166ea:	push   eax
  4166eb:	inc    ebx
  4166ec:	inc    edi
  4166ed:	fisttp DWORD PTR [edi+0x779a3428]
  4166f3:	xchg   ecx,eax
  4166f4:	test   eax,0x4081f652
  4166f9:	js     0x41667f
  4166fb:	xor    eax,0x49a2a409
  416700:	and    ebx,DWORD PTR [ebx+0x13]
  416703:	mov    fs,ebx
  416705:	dec    edi
  416706:	mov    cl,0x7b
  416708:	mov    ds:0xd9b84cb,eax
  41670d:	mov    DWORD PTR [ebx],eax
  41670f:	sbb    al,0x1c
  416711:	mov    dh,0x88
  416713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416714:	adc    eax,0xb2b7f148
  416719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41671a:	push   edx
  41671b:	and    eax,DWORD PTR ds:0xfa45056a
  416721:	in     al,dx
  416722:	enter  0xfa3a,0x53
  416726:	xchg   esp,eax
  416727:	inc    ebp
  416728:	sbb    al,0xea
  41672a:	aaa    
  41672b:	lods   al,BYTE PTR ds:[esi]
  41672c:	xchg   ebx,eax
  41672d:	cs mov dh,0xd2
  416730:	in     eax,dx
  416731:	xchg   ebx,eax
  416732:	mov    bl,0x60
  416734:	jg     0x4166e7
  416736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416737:	mov    ch,0x54
  416739:	mov    ds:0xf94644e4,eax
  41673e:	inc    ecx
  41673f:	dec    edi
  416740:	ret    0xd41
  416743:	sbb    esi,0x1e
  416746:	sar    DWORD PTR [ecx-0x73],0xe7
  41674a:	dec    ebx
  41674b:	mov    cl,0xbd
  41674d:	sti    
  41674e:	mov    esp,0xb8547778
  416753:	retf   0xbe31
  416756:	call   0x62794f0b
  41675b:	cmc    
  41675c:	out    dx,al
  41675d:	nop
  41675e:	pop    ebp
  41675f:	lahf   
  416760:	jmp    FWORD PTR [ebx-0x438d6934]
  416766:	add    esp,DWORD PTR [esi]
  416768:	dec    esi
  416769:	bound  ebp,QWORD PTR ds:0xef58c9a3
  41676f:	push   ecx
  416770:	call   0x15f6:0xa3a07217
  416777:	in     al,dx
  416778:	pop    ebp
  416779:	test   eax,0x6876f1a3
  41677e:	inc    esi
  41677f:	sub    DWORD PTR [ebx+0x7039b59c],edx
  416785:	add    eax,0x7599b524
  41678a:	rcl    dl,cl
  41678c:	call   0xc1510ea6
  416791:	cdq    
  416792:	sbb    al,0xcf
  416794:	and    al,0x46
  416796:	retf   
  416797:	lock jae 0x416783
  41679a:	mov    cl,0xd4
  41679c:	inc    esi
  41679d:	clc    
  41679e:	imul   ebx,DWORD PTR [ecx+esi*1-0x12351be3],0x7e
  4167a6:	ja     0x416736
  4167a8:	(bad)  
  4167a9:	dec    al
  4167ab:	aas    
  4167ac:	pop    ebp
  4167ad:	and    dh,BYTE PTR [edi-0x71b6f548]
  4167b3:	jmp    0x4167e5
  4167b5:	adc    DWORD PTR [edi+ecx*4+0x5e],edi
  4167b9:	fstp   TBYTE PTR [ebx-0x26]
  4167bc:	outs   dx,DWORD PTR ds:[esi]
  4167bd:	cld    
  4167be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167bf:	(bad)  
  4167c0:	loop   0x41680a
  4167c2:	pop    ebx
  4167c3:	xor    DWORD PTR [ebx+0x3f1a6afb],edx
  4167c9:	jae    0x41681d
  4167cb:	fidivr DWORD PTR [ecx-0x5e]
  4167ce:	addr16 pusha 
  4167d0:	mov    cl,0x66
  4167d2:	jmp    0xac13cede
  4167d7:	repnz add ah,al
  4167da:	adc    DWORD PTR [edx-0x62],edi
  4167dd:	sbb    DWORD PTR [eax-0x749a6621],eax
  4167e3:	neg    DWORD PTR [edi-0x61]
  4167e6:	and    eax,0x6dbd0377
  4167eb:	push   ss
  4167ec:	push   0xd3834c82
  4167f1:	mov    edx,0xbe501e97
  4167f6:	mov    dh,0x67
  4167f8:	in     al,dx
  4167f9:	sub    bl,BYTE PTR [ecx]
  4167fb:	bound  esi,QWORD PTR [edi+0x54]
  4167fe:	add    BYTE PTR [ecx],dh
  416800:	push   ds
  416801:	jb     0x4167ba
  416803:	sahf   
  416804:	inc    ecx
  416805:	mov    eax,ds:0x8857b358
  41680a:	sahf   
  41680b:	cmp    dl,BYTE PTR [ecx+0x50de1502]
  416811:	mov    WORD PTR [edx+0x1],gs
  416814:	stc    
  416815:	pusha  
  416816:	outs   dx,DWORD PTR ds:[esi]
  416817:	mov    eax,DWORD PTR [edx-0x465b382c]
  41681d:	leave  
  41681e:	sbb    al,0xc5
  416820:	or     BYTE PTR [edi+edi*1-0x63],ah
  416824:	sub    ch,BYTE PTR [eax]
  416826:	inc    ebp
  416827:	or     eax,0xe1847717
  41682c:	sub    ah,al
  41682e:	and    ah,bl
  416830:	or     ch,BYTE PTR [eax]
  416832:	jo     0x41687f
  416834:	or     al,0x11
  416836:	test   DWORD PTR [eax],edx
  416838:	lock out 0xeb,eax
  41683b:	inc    edx
  41683c:	loop   0x4167fe
  41683e:	cmp    BYTE PTR [ecx+0x12],bh
  416841:	in     eax,dx
  416842:	pusha  
  416843:	call   0xbef:0xabe51119
  41684a:	fild   QWORD PTR [ecx+ebp*8-0x35dce7f4]
  416851:	sub    eax,0xe8fce3ab
  416856:	and    al,0xdc
  416858:	out    0xb7,eax
  41685a:	outs   dx,BYTE PTR ds:[esi]
  41685b:	dec    esi
  41685c:	jnp    0x416853
  41685e:	inc    ebp
  41685f:	fld    DWORD PTR [esi]
  416861:	pop    edi
  416862:	(bad)  
  416863:	jmp    0x4168e2
  416865:	aam    0x5f
  416867:	aad    0x15
  416869:	xor    DWORD PTR [eiz*2+0x55784051],ebx
  416870:	dec    eax
  416871:	shr    bl,0xd8
  416874:	mov    edx,DWORD PTR [ecx+0x6a5f8771]
  41687a:	call   0x49b3:0x1f401b0b
  416881:	xchg   DWORD PTR ds:0x7a2308cd,ecx
  416887:	out    0x86,eax
  416889:	sbb    eax,0xd0a3db84
  41688e:	aas    
  41688f:	push   eax
  416890:	cmp    ah,ch
  416892:	sbb    DWORD PTR [edi],edx
  416894:	out    dx,al
  416895:	cmp    DWORD PTR [ebp-0x4a9c0b1a],0x7e5adafd
  41689f:	xor    al,0xdd
  4168a1:	sbb    eax,0x221f0e22
  4168a6:	js     0x416891
  4168a8:	aad    0xef
  4168aa:	fbld   TBYTE PTR [edi-0x34]
  4168ad:	ja     0x41689a
  4168af:	cmp    edi,DWORD PTR [edi]
  4168b1:	or     cl,al
  4168b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b4:	xor    ch,BYTE PTR [ebx]
  4168b6:	cmp    edx,eax
  4168b8:	dec    ecx
  4168b9:	fxam   
  4168bb:	push   ebp
  4168bc:	aad    0xfb
  4168be:	mov    esi,0x3bfc3ed4
  4168c3:	push   0xffffffc6
  4168c5:	sti    
  4168c6:	push   eax
  4168c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c8:	stos   BYTE PTR es:[edi],al
  4168c9:	(bad)  
  4168ca:	mov    ecx,0x5b8e766
  4168cf:	xor    BYTE PTR [ebx-0x65b456bb],0x51
  4168d6:	enter  0x11d7,0x1d
  4168da:	cmp    esp,DWORD PTR [ebx*2+0x9f2acf2]
  4168e1:	ja     0x41695f
  4168e3:	add    ah,BYTE PTR [eax-0x4]
  4168e6:	adc    bl,BYTE PTR [ecx]
  4168e8:	test   BYTE PTR [edi-0xa2d7644],0x99
  4168ef:	mov    al,ds:0xfde3e82d
  4168f4:	pushf  
  4168f5:	ins    BYTE PTR es:[edi],dx
  4168f6:	in     eax,0x9b
  4168f8:	jp     0x4168db
  4168fa:	xor    dl,al
  4168fc:	hlt    
  4168fd:	push   ecx
  4168fe:	cmp    DWORD PTR [ebp+0x76dadb3],ebx
  416904:	add    dl,0x1a
  416907:	cmc    
  416908:	or     eax,0xaaf8f542
  41690d:	xor    eax,DWORD PTR [ebp+eax*1+0x49]
  416911:	mov    ds:0x653d4f23,eax
  416916:	bound  ebp,QWORD PTR [eax-0x54c93668]
  41691c:	pop    ebx
  41691d:	imul   esp,DWORD PTR ds:0x3aa2c87e,0xffffffc7
  416924:	inc    ebx
  416925:	in     al,dx
  416926:	lea    ebx,[ecx+0x48c5d062]
  41692c:	xor    eax,0x8a554699
  416931:	and    al,BYTE PTR [ecx-0x31f562ac]
  416937:	clc    
  416938:	or     eax,0xde9d094c
  41693d:	sahf   
  41693e:	push   cs
  41693f:	sub    edi,DWORD PTR [eax]
  416941:	xor    DWORD PTR [ecx+edx*4+0x28216b8b],0xfffffffa
  416949:	push   ss
  41694a:	aam    0x87
  41694c:	xchg   DWORD PTR [ebp+0x4c002a67],ecx
  416952:	inc    esp
  416953:	sbb    ax,0x9984
  416957:	mov    eax,?
  416959:	and    eax,0x2ef8df82
  41695e:	aas    
  41695f:	inc    esp
  416960:	mov    dl,0x79
  416962:	mov    edx,ecx
  416964:	jb     0x4169dc
  416966:	cld    
  416967:	mov    eax,0x3b30c936
  41696c:	mov    dl,0xd5
  41696e:	lock sbb ebp,DWORD PTR [ebp+0x66]
  416972:	sub    ebx,ecx
  416974:	mov    ebp,0xad29405b
  416979:	loopne 0x416990
  41697b:	mov    bh,0x36
  41697d:	lods   eax,DWORD PTR ds:[esi]
  41697e:	jne    0x4169d6
  416980:	push   ds
  416981:	sar    BYTE PTR [ebp+0x6a8261d5],0xcb
  416988:	push   edx
  416989:	shl    DWORD PTR [esi+0x1b3b55f0],1
  41698f:	mov    esi,DWORD PTR [ebp-0x4]
  416992:	call   esi
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
