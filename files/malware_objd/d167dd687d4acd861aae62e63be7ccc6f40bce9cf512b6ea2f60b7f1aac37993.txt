
d167dd687d4acd861aae62e63be7ccc6f40bce9cf512b6ea2f60b7f1aac37993.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	add    dl,BYTE PTR [edi+eiz*2-0x7c7c7ce4]
  4018de:	or     DWORD PTR [ebx+0x5e],0xffffff83
  4018e2:	sub    DWORD PTR [eax],0x31
  4018e5:	es cmp al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	nop
  4018f0:	jo     0x401962
  4018f2:	jae    0x401964
  4018f4:	dec    ebx
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	and    BYTE PTR [eiz*1-0x37e8dbc],al
  40198d:	loope  0x4019ec
  40198f:	pushf  
  401990:	xor    eax,0x793f5a2f
  401995:	clc    
  401996:	loope  0x40196b
  401998:	mov    dl,0x2
  40199a:	pop    ss
  40199b:	add    eax,0xe0c74aad
  4019a0:	xchg   ebp,eax
  4019a1:	mov    edx,DWORD PTR [eax-0x2f46d01f]
  4019a7:	ja     0x4019e4
  4019a9:	(bad)  
  4019aa:	lods   al,BYTE PTR ds:[esi]
  4019ab:	mov    ds:0xb26fde7f,eax
  4019b0:	ret    
  4019b1:	js     0x4019a8
  4019b3:	cmc    
  4019b4:	rol    DWORD PTR [edi],1
  4019b6:	mov    dh,0xbc
  4019b8:	dec    ecx
  4019b9:	addr16 sbb al,0x35
  4019bc:	cmc    
  4019bd:	fwait
  4019be:	out    0x99,al
  4019c0:	(bad)  
  4019c1:	leave  
  4019c2:	adc    al,0x8a
  4019c4:	and    BYTE PTR [ecx+0x30],bl
  4019c7:	mov    bl,0x76
  4019c9:	sbb    BYTE PTR [ebp-0x3855f221],bh
  4019cf:	mov    edx,0x1acc90ec
  4019d4:	sbb    DWORD PTR [esi+0x5a122d3b],edi
  4019da:	push   es
  4019db:	inc    eax
  4019dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019dd:	into   
  4019de:	sub    DWORD PTR [ecx+0x791868fd],esi
  4019e4:	ins    DWORD PTR es:[edi],dx
  4019e5:	je     0x401a54
  4019e7:	setb   bh
  4019ea:	into   
  4019eb:	fiadd  WORD PTR [eax-0x1e]
  4019ee:	test   eax,0x89f566b9
  4019f3:	ror    DWORD PTR [ebx-0x30],0x6c
  4019f7:	pop    esi
  4019f8:	pop    edx
  4019f9:	xchg   al,ah
  4019fb:	add    BYTE PTR [ebp+0x4d],bh
  4019fe:	ret    
  4019ff:	in     al,0x2e
  401a01:	mov    bh,0xd0
  401a03:	xor    cl,BYTE PTR [edi-0x39]
  401a06:	mov    BYTE PTR [esp+eax*2],bh
  401a09:	mov    ch,0xb3
  401a0b:	xchg   ecx,eax
  401a0c:	pop    ebp
  401a0d:	or     al,0x70
  401a0f:	mov    bh,0xbe
  401a11:	add    DWORD PTR [edi-0x47717d51],esp
  401a17:	cmp    DWORD PTR [eax],0x237daa08
  401a1d:	cmp    eax,DWORD PTR [ecx]
  401a1f:	je     0x401a50
  401a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a22:	and    esp,edx
  401a24:	add    dh,dh
  401a26:	dec    esi
  401a27:	cmp    eax,0x89eb797c
  401a2c:	or     al,0x73
  401a2e:	gs in  al,dx
  401a30:	rol    DWORD PTR [eax+0x770b7298],1
  401a36:	cmp    DWORD PTR ds:[ebx],edi
  401a39:	lock ret 0xe70d
  401a3d:	or     BYTE PTR [esi],ch
  401a3f:	pop    ecx
  401a40:	cmp    dl,dh
  401a42:	ret    
  401a43:	shr    BYTE PTR [edx],0x66
  401a46:	mov    ch,0xe1
  401a48:	add    BYTE PTR [edi+0x1a7e473b],0x8d
  401a4f:	rol    BYTE PTR [ecx],1
  401a51:	gs inc eax
  401a53:	jg     0x401a27
  401a55:	cwde   
  401a56:	gs ret 
  401a58:	fcomp  DWORD PTR [ecx-0x7c4fa2a5]
  401a5e:	stc    
  401a5f:	ja     0x401a97
  401a61:	cmp    al,0x42
  401a63:	jae    0x401a16
  401a65:	add    al,0x6c
  401a67:	jns    0x401aab
  401a69:	xchg   ecx,eax
  401a6a:	mov    al,ds:0x6a7a63f0
  401a6f:	loope  0x401a97
  401a71:	inc    edi
  401a72:	sbb    DWORD PTR [ebx+0x3e],esp
  401a75:	push   ss
  401a76:	cmp    dl,BYTE PTR [eax]
  401a78:	mov    al,ds:0xc43210b0
  401a7d:	test   eax,0xd4c13b49
  401a82:	mov    ebx,0xeb2727d0
  401a87:	in     eax,0x22
  401a89:	aad    0xad
  401a8b:	js     0x401a98
  401a8d:	pop    ebx
  401a8e:	mov    ch,0x9b
  401a90:	mov    edi,0xf7320ae9
  401a95:	sbb    DWORD PTR [ecx],ecx
  401a97:	loop   0x401adf
  401a99:	sbb    edx,DWORD PTR [esi-0x6b812b4]
  401a9f:	mov    bl,0x56
  401aa1:	jbe    0x401ae2
  401aa3:	adc    DWORD PTR [ebx-0x50],esp
  401aa6:	std    
  401aa7:	jp     0x401a95
  401aa9:	mov    edx,0xc2e00680
  401aae:	and    DWORD PTR [bx+si+0x7d08],edi
  401ab3:	lods   eax,DWORD PTR ds:[esi]
  401ab4:	add    ah,al
  401ab6:	sbb    ah,BYTE PTR [eax]
  401ab8:	mov    DWORD PTR [esi+ebx*1+0x74187d77],eax
  401abf:	xor    al,0x36
  401ac1:	dec    edx
  401ac2:	mov    cs,WORD PTR [eax]
  401ac4:	add    eax,0x6a1019af
  401ac9:	and    al,0xd1
  401acb:	in     eax,dx
  401acc:	in     al,dx
  401acd:	retf   
  401ace:	sub    dh,BYTE PTR [edi-0x1c]
  401ad1:	fidivr WORD PTR [ebx+0x1d]
  401ad4:	xlat   BYTE PTR ds:[ebx]
  401ad5:	and    al,0x95
  401ad7:	lods   al,BYTE PTR ds:[esi]
  401ad8:	add    al,0xbe
  401ada:	jge    0x401a5c
  401adc:	xor    BYTE PTR [edi],dl
  401ade:	mov    edi,0x8d3bda06
  401ae3:	push   edx
  401ae4:	inc    ebp
  401ae5:	ret    0xf542
  401ae8:	pop    es
  401ae9:	jb     0x401b4e
  401aeb:	xchg   edx,eax
  401aec:	sti    
  401aed:	pop    edi
  401aee:	jns    0x401b19
  401af0:	sbb    DWORD PTR [edi],0x9cad402
  401af6:	div    DWORD PTR ds:0xedeba4fb
  401afc:	push   esp
  401afd:	es adc bh,dl
  401b00:	imul   DWORD PTR [ebp+0x24]
  401b03:	pop    esp
  401b04:	leave  
  401b05:	punpcklwd mm5,DWORD PTR [esi+0x4f]
  401b09:	dec    ebp
  401b0a:	fst    DWORD PTR [edx+0x7b]
  401b0d:	sbb    al,0x8b
  401b0f:	out    dx,eax
  401b10:	sar    dl,cl
  401b12:	mov    ds:0xf72a5ac4,eax
  401b17:	js     0x401af5
  401b19:	out    0x3f,eax
  401b1b:	or     DWORD PTR [eax-0x5ba4dfff],eax
  401b21:	test   al,0xd1
  401b23:	mov    BYTE PTR [edx+0x53],dl
  401b26:	scas   al,BYTE PTR es:[edi]
  401b27:	leave  
  401b28:	popa   
  401b29:	stos   BYTE PTR es:[edi],al
  401b2a:	push   es
  401b2b:	enter  0x429,0x2
  401b2f:	retf   0x3fc8
  401b32:	pushw  0x70
  401b35:	dec    ebx
  401b36:	dec    esp
  401b37:	iret   
  401b38:	xor    BYTE PTR [ebx+0x442c3d4b],bh
  401b3e:	and    cl,BYTE PTR [edx+0x42]
  401b41:	pop    ebp
  401b42:	out    dx,eax
  401b43:	lock mov ah,0xac
  401b46:	pushf  
  401b47:	jae    0x401b28
  401b49:	int    0x46
  401b4b:	fucom  st(6)
  401b4d:	mov    ecx,0xa5030e2a
  401b52:	jl     0x401b8b
  401b54:	jmp    0x401bd4
  401b56:	pop    esi
  401b57:	fistp  QWORD PTR [eax-0xc]
  401b5a:	sub    ecx,DWORD PTR [ecx+0x7755beb4]
  401b60:	jmp    0x6490:0xf0e0934f
  401b67:	push   eax
  401b68:	rcr    BYTE PTR [edx+eax*4-0x4f37d6e5],cl
  401b6f:	mov    ecx,0x91d18a9a
  401b74:	dec    eax
  401b75:	xchg   edi,eax
  401b76:	push   DWORD PTR [edx]
  401b78:	daa    
  401b79:	lds    eax,FWORD PTR [esi-0x3a1c4db6]
  401b7f:	sbb    bh,al
  401b81:	(bad)  
  401b82:	push   ebp
  401b83:	loop   0x401b15
  401b85:	mov    al,ds:0x4c4631ca
  401b8a:	pop    ebx
  401b8b:	sbb    BYTE PTR [ebx+0x47],bl
  401b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b8f:	pop    es
  401b90:	jp     0x401b62
  401b92:	xor    DWORD PTR [eax],esp
  401b94:	test   DWORD PTR [eax-0x35],esi
  401b97:	and    ah,cl
  401b99:	xchg   ebp,eax
  401b9a:	inc    esp
  401b9b:	and    bl,BYTE PTR [eax+ebp*4+0x51]
  401b9f:	stos   BYTE PTR es:[edi],al
  401ba0:	pusha  
  401ba1:	add    BYTE PTR [edx+0x70],0xcf
  401ba5:	in     eax,dx
  401ba6:	aad    0x37
  401ba8:	jns    0x401bc3
  401baa:	stos   BYTE PTR es:[edi],al
  401bab:	(bad)  
  401bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bad:	imul   edx,DWORD PTR [ebx+0x1b],0xda6edebd
  401bb4:	xchg   BYTE PTR [ebx+edi*8],ah
  401bb7:	icebp  
  401bb8:	jl     0x401bf2
  401bba:	loop   0x401bae
  401bbc:	(bad)  
  401bbd:	iret   
  401bbe:	int3   
  401bbf:	in     al,dx
  401bc0:	add    eax,DWORD PTR [ebp+ebx*8+0x46c338d2]
  401bc7:	inc    ebx
  401bc8:	or     eax,0xb1462b92
  401bcd:	imul   esp,DWORD PTR [edx+eiz*8+0x4],0xffffffa5
  401bd2:	sar    DWORD PTR [ebx],cl
  401bd4:	rcr    DWORD PTR [eax-0x36df25ca],0x78
  401bdb:	cmp    eax,edx
  401bdd:	mov    ?,WORD PTR [ecx+0x79]
  401be0:	test   al,0x15
  401be2:	(bad)  
  401be3:	sub    ah,BYTE PTR [edx+ebp*2-0x73231c26]
  401bea:	add    al,al
  401bec:	cmp    DWORD PTR [edx-0x6aa24e03],eax
  401bf2:	jecxz  0x401bb4
  401bf4:	ss fsubr st(2),st
  401bf7:	pop    eax
  401bf8:	mov    dl,0x7a
  401bfa:	leave  
  401bfb:	jno    0x401ba6
  401bfd:	frstor ss:[esi+0x1fb5b692]
  401c04:	mov    edx,esp
  401c06:	jmp    0x6ec3766f
  401c0b:	ffree  st(1)
  401c0d:	cs mov ch,0x6e
  401c10:	add    ebp,DWORD PTR [edi-0x2121b028]
  401c16:	leave  
  401c17:	cmp    ecx,eax
  401c19:	sbb    BYTE PTR ds:0xc1676d5e,al
  401c1f:	nop
  401c20:	shl    DWORD PTR [ebp-0x6c06a581],cl
  401c26:	je     0x401ca2
  401c28:	les    edi,FWORD PTR [esp+edx*4+0x7f44fd4]
  401c2f:	and    al,0x6b
  401c31:	mov    al,0x8a
  401c33:	fwait
  401c34:	lods   eax,DWORD PTR ds:[esi]
  401c35:	adc    al,0xe6
  401c37:	daa    
  401c38:	xor    al,0xa0
  401c3a:	retf   0x22b9
  401c3d:	stc    
  401c3e:	fisttp QWORD PTR [ebp+0x6d]
  401c41:	or     dl,bl
  401c43:	cld    
  401c44:	push   eax
  401c45:	xchg   ecx,eax
  401c46:	loop   0x401cbf
  401c48:	jnp    0x401c59
  401c4a:	shl    DWORD PTR [edi+ecx*8+0x55],cl
  401c4e:	popa   
  401c4f:	rol    cl,0x10
  401c52:	into   
  401c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c54:	sub    edx,edx
  401c56:	mov    edx,0xb8c3f3f0
  401c5b:	scas   eax,DWORD PTR es:[edi]
  401c5c:	(bad)  
  401c5d:	and    cl,al
  401c5f:	pop    ds
  401c60:	sbb    BYTE PTR [esi],0xc5
  401c63:	mov    dl,0x5a
  401c65:	push   ebp
  401c66:	bound  ecx,QWORD PTR [edx+eax*4]
  401c69:	sbb    al,0x63
  401c6b:	and    al,0x7a
  401c6d:	shl    BYTE PTR [edi],0xe1
  401c70:	mov    cl,0x71
  401c72:	popw   es
  401c74:	arpl   WORD PTR [ecx],dx
  401c76:	dec    ebp
  401c77:	rcl    ch,cl
  401c79:	push   ebp
  401c7a:	rol    BYTE PTR [ebp-0x44dcf2c3],cl
  401c80:	mov    al,0xf
  401c82:	inc    esp
  401c83:	sub    ebp,edi
  401c85:	push   es
  401c86:	rcl    BYTE PTR [eax],1
  401c88:	xor    edi,DWORD PTR ds:0xc6c87b43
  401c8f:	push   0x1b7ea149
  401c94:	rcr    BYTE PTR [edi-0x10d35c88],0x4a
  401c9b:	xchg   esi,eax
  401c9c:	adc    al,0x44
  401c9e:	xchg   esi,eax
  401c9f:	je     0x401c2a
  401ca1:	pop    ebp
  401ca2:	inc    eax
  401ca3:	(bad)  
  401ca4:	xor    ebp,DWORD PTR [esi]
  401ca6:	aas    
  401ca7:	cmp    ch,BYTE PTR [edi-0x321c514d]
  401cad:	cdq    
  401cae:	addr16 mov al,0x84
  401cb1:	jnp    0x401ced
  401cb3:	scas   eax,DWORD PTR es:[edi]
  401cb4:	jb     0x401d22
  401cb6:	std    
  401cb7:	je     0x401c98
  401cb9:	hlt    
  401cba:	xor    cl,BYTE PTR [edx]
  401cbc:	aad    0x97
  401cbe:	cmp    al,0xe
  401cc0:	aaa    
  401cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cc2:	fistp  QWORD PTR ds:0x5c5e97b3
  401cc8:	add    DWORD PTR [ebx-0x1],esi
  401ccb:	jp     0x401d42
  401ccd:	out    0x77,al
  401ccf:	jecxz  0x401cdc
  401cd1:	sbb    bl,BYTE PTR ds:0xf618e694
  401cd7:	icebp  
  401cd8:	pop    ecx
  401cd9:	cli    
  401cda:	mov    ebx,0x99841aff
  401cdf:	test   eax,0x44ffbef0
  401ce4:	fcom   QWORD PTR [esi-0x13]
  401ce7:	stos   BYTE PTR es:[edi],al
  401ce8:	adc    eax,DWORD PTR [edi+0x6a089204]
  401cee:	push   ebp
  401cef:	mov    ds:0x5168f8f3,al
  401cf4:	jns    0x401d6f
  401cf6:	mov    ?,eax
  401cf8:	cld    
  401cf9:	jle    0x401c7d
  401cfb:	add    DWORD PTR [eax-0x2fa8e864],ebp
  401d01:	sbb    edx,DWORD PTR [ebp+eax*4-0x1d]
  401d05:	mov    esp,0x343c8eb6
  401d0a:	retf   0x3935
  401d0d:	adc    cl,ch
  401d0f:	sar    DWORD PTR [ecx+0x4f74aca6],1
  401d15:	loopne 0x401d4a
  401d17:	shr    DWORD PTR [edx],1
  401d19:	sub    esp,DWORD PTR [edi]
  401d1b:	mov    ch,0x6c
  401d1d:	xchg   DWORD PTR [edx],eax
  401d1f:	mov    esp,DWORD PTR [ebp+edi*4+0x25]
  401d23:	cmp    esi,DWORD PTR [esi+0x1a]
  401d26:	inc    esp
  401d27:	push   cs
  401d28:	cmp    eax,0x3f541402
  401d2d:	int    0x80
  401d2f:	call   0x23b0:0xb869ed96
  401d36:	cmp    BYTE PTR [edi+0x432a8fe0],0xe0
  401d3d:	jg     0x401dbb
  401d3f:	push   ds
  401d40:	sub    BYTE PTR [edi],bl
  401d42:	mov    ds:0x4e0d2e23,al
  401d47:	mov    al,0x17
  401d49:	test   al,0xd8
  401d4b:	es pop ecx
  401d4d:	leave  
  401d4e:	scas   eax,DWORD PTR es:[edi]
  401d4f:	cli    
  401d50:	rcl    DWORD PTR [edx],cl
  401d52:	mov    bl,0x89
  401d54:	jg     0x401d88
  401d56:	jmp    0x401d86
  401d58:	hlt    
  401d59:	fstp   QWORD PTR [esi+0x27bce195]
  401d5f:	mov    cl,BYTE PTR [eax]
  401d61:	ror    BYTE PTR [ecx-0x79],cl
  401d64:	scas   eax,DWORD PTR es:[edi]
  401d65:	fnsave [esi]
  401d67:	das    
  401d68:	or     al,0x21
  401d6a:	dec    ebp
  401d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d6c:	hlt    
  401d6d:	pushf  
  401d6e:	mov    ch,0xd4
  401d70:	shr    BYTE PTR [edi+0x38],0xce
  401d74:	mov    esi,0x8e75eddd
  401d79:	dec    edi
  401d7a:	add    al,BYTE PTR [eax-0x6390d672]
  401d80:	es pusha 
  401d82:	(bad)  
  401d83:	sub    eax,0xfced757b
  401d88:	pop    es
  401d89:	push   es
  401d8a:	dec    sp
  401d8c:	leave  
  401d8d:	or     edi,DWORD PTR [eax+0x12]
  401d90:	mov    esi,0xa04f46c0
  401d95:	push   0x60
  401d97:	inc    eax
  401d98:	inc    edi
  401d99:	push   ebx
  401d9a:	aad    0x4e
  401d9c:	mul    DWORD PTR [ebp-0x7082c23e]
  401da2:	data16 aas 
  401da4:	mov    dh,0x44
  401da6:	mov    eax,ds:0xa9f5e6f
  401dab:	sahf   
  401dac:	adc    BYTE PTR [eax-0x34],dl
  401daf:	nop
  401db0:	loopne 0x401d39
  401db2:	and    bl,BYTE PTR [esi-0x3e377bed]
  401db8:	cdq    
  401db9:	dec    esi
  401dba:	pop    esp
  401dbb:	jne    0x401d60
  401dbd:	fs je  0x401df8
  401dc0:	sbb    ebp,DWORD PTR [edi]
  401dc2:	scas   al,BYTE PTR es:[edi]
  401dc3:	test   BYTE PTR [ebx+esi*4],0xcb
  401dc7:	mov    WORD PTR [ebx-0xed14d28],ds
  401dcd:	jne    0x401e03
  401dcf:	inc    ebp
  401dd0:	ficomp WORD PTR [edx]
  401dd2:	or     bh,bh
  401dd4:	sti    
  401dd5:	ret    
  401dd6:	mov    eax,0xa7ade11e
  401ddb:	xor    BYTE PTR [edi+0x17],ah
  401dde:	xchg   edi,eax
  401ddf:	ret    
  401de0:	push   edx
  401de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401de2:	lock push edx
  401de4:	pop    ebp
  401de5:	in     eax,dx
  401de6:	(bad)
  401dea:	das    
  401deb:	pop    ebx
  401dec:	and    al,0x3e
  401dee:	arpl   WORD PTR [eax+ecx*8],bx
  401df1:	ja     0x401dbe
  401df3:	icebp  
  401df4:	cmp    BYTE PTR [ebx+0x5b],0x84
  401df8:	and    ebp,0x64
  401dfb:	pop    esp
  401dfc:	in     eax,0x34
  401dfe:	sbb    ecx,DWORD PTR [eax+0x76c53dcb]
  401e04:	(bad)  
  401e05:	cmp    esp,ebp
  401e07:	jb     0x401d8c
  401e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e0a:	mov    cl,0x29
  401e0c:	mov    ebx,0xd7a5a3c2
  401e11:	mov    ebp,ecx
  401e13:	xchg   DWORD PTR ds:[edx],edi
  401e16:	jns    0x401e13
  401e18:	pop    ebx
  401e19:	add    BYTE PTR [ecx-0x5e1add93],al
  401e1f:	xchg   DWORD PTR [edx+0x50],esi
  401e22:	test   ebx,ebx
  401e24:	pop    es
  401e25:	jns    0x401e59
  401e27:	adc    edx,DWORD PTR [ebp+esi*1+0x392e1a14]
  401e2e:	aad    0x65
  401e30:	mov    esp,0x1934fa72
  401e35:	cs jge 0x401de4
  401e38:	or     al,0x60
  401e3a:	xor    BYTE PTR [esi],bl
  401e3c:	add    al,0xa9
  401e3e:	mov    eax,ds:0x705cccf
  401e43:	push   0xf4a74f5e
  401e48:	test   BYTE PTR [edi+0x3f],ch
  401e4b:	lock out dx,eax
  401e4d:	ja     0x401eb1
  401e4f:	imul   ecx,DWORD PTR [edx+0x4aac42a5],0x3f54ebc3
  401e59:	push   edi
  401e5a:	adc    dl,BYTE PTR [edi+0x30]
  401e5d:	cwde   
  401e5e:	mov    dl,0x3d
  401e60:	push   0x23
  401e62:	or     al,0xe
  401e64:	shl    BYTE PTR [ebp+0x4b873716],1
  401e6a:	aad    0xcf
  401e6c:	xchg   esp,eax
  401e6d:	out    0x7f,eax
  401e6f:	sahf   
  401e70:	idiv   BYTE PTR [edx]
  401e72:	sbb    ebx,DWORD PTR [edi-0x5d]
  401e75:	dec    edi
  401e76:	sbb    al,ah
  401e78:	sub    BYTE PTR [edx-0x23bccbe3],cl
  401e7e:	ffree  st(0)
  401e80:	adc    edx,DWORD PTR [esi+0x14]
  401e83:	fimul  WORD PTR [ebp+0x5f0c53ea]
  401e89:	jge    0x401ec5
  401e8b:	xchg   ebx,eax
  401e8c:	dec    edi
  401e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8f:	xchg   esp,eax
  401e90:	pop    esp
  401e91:	jl     0x401e8c
  401e93:	xchg   esi,eax
  401e94:	push   eax
  401e95:	pop    edx
  401e96:	in     al,0x34
  401e98:	mov    ebx,0x9176fb66
  401e9d:	into   
  401e9e:	dec    ecx
  401e9f:	data16 into 
  401ea1:	lock jne 0x401ee2
  401ea4:	(bad)  
  401ea5:	les    eax,FWORD PTR cs:[esi+edx*8]
  401ea9:	or     edi,edi
  401eab:	jmp    0xf7dea87f
  401eb0:	jae    0x401f00
  401eb2:	icebp  
  401eb3:	xchg   ebx,eax
  401eb4:	scas   al,BYTE PTR es:[edi]
  401eb5:	cmp    BYTE PTR [eax+0x46c8694a],dh
  401ebb:	and    bh,ch
  401ebd:	mov    dl,0x23
  401ebf:	nop
  401ec0:	add    ebx,esp
  401ec2:	mov    bh,0x4
  401ec4:	loopne 0x401ee8
  401ec6:	fsub   st,st(3)
  401ec8:	int3   
  401ec9:	adc    DWORD PTR [edi+0x53],0x3c
  401ecd:	test   ebx,esi
  401ecf:	inc    ebx
  401ed0:	shl    DWORD PTR [edi],0xe4
  401ed3:	jecxz  0x401f42
  401ed5:	add    al,0xcf
  401ed7:	pop    DWORD PTR [edi+0x183833e5]
  401edd:	out    0x50,al
  401edf:	inc    ebx
  401ee0:	mov    edx,0xd6ddfd33
  401ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ee6:	inc    esi
  401ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ee8:	stos   DWORD PTR es:[edi],eax
  401ee9:	(bad)  
  401eea:	sub    ecx,DWORD PTR [ecx]
  401eec:	or     al,0x29
  401eee:	call   0xe7f6:0x4895104b
  401ef5:	popa   
  401ef6:	and    al,0x56
  401ef8:	fwait
  401ef9:	xor    al,0x32
  401efb:	shr    BYTE PTR [eax],1
  401efd:	aam    0x55
  401eff:	fist   DWORD PTR [edx]
  401f01:	rcl    BYTE PTR [esi-0x1d],cl
  401f04:	mov    dh,0x40
  401f06:	mov    al,0x8b
  401f08:	pop    ds
  401f09:	mov    ebx,0x6a3fc5bb
  401f0e:	xchg   edx,eax
  401f0f:	mov    dh,ah
  401f11:	cmp    eax,0x628a0433
  401f16:	push   0x37ac4919
  401f1b:	scas   al,BYTE PTR es:[edi]
  401f1c:	rcl    BYTE PTR ds:0x4eace4e2,cl
  401f22:	jmp    0x55b28264
  401f27:	retf   0xa027
  401f2a:	push   edx
  401f2b:	les    ebx,FWORD PTR [eax+0x15d4dfa3]
  401f31:	pop    DWORD PTR [ebx-0x6dc3e470]
  401f37:	out    dx,eax
  401f38:	or     esp,DWORD PTR [ebx]
  401f3a:	dec    ebx
  401f3b:	in     eax,0x57
  401f3d:	paddusb mm5,QWORD PTR [ebx+0x3541dbba]
  401f44:	or     eax,0xc36e723b
  401f49:	out    dx,al
  401f4a:	adc    eax,0x48920328
  401f4f:	jmp    0x9116:0xb9558f64
  401f56:	lods   al,BYTE PTR ds:[esi]
  401f57:	call   FWORD PTR [ebx]
  401f59:	inc    edx
  401f5a:	daa    
  401f5b:	push   es
  401f5c:	adc    edx,DWORD PTR [edi-0x6beb72bf]
  401f62:	or     eax,0x2f3db8b2
  401f67:	jae    0x401fe6
  401f69:	jb     0x401f36
  401f6b:	cmp    esp,DWORD PTR [edi+0x6c]
  401f6e:	aam    0xd6
  401f70:	enter  0x2edc,0xa1
  401f74:	mov    ch,0x99
  401f76:	xor    DWORD PTR [ecx],eax
  401f78:	or     al,0x34
  401f7a:	int    0x43
  401f7c:	test   eax,0xd768da05
  401f81:	retf   
  401f82:	mov    ecx,0x4a2afadf
  401f87:	dec    ebx
  401f88:	fisubr DWORD PTR [esi]
  401f8a:	mov    BYTE PTR [ecx+0x5c],ch
  401f8d:	mov    bh,0xda
  401f8f:	fild   WORD PTR [ebx-0x481e84c6]
  401f95:	fld    TBYTE PTR [eax+0xe]
  401f98:	lahf   
  401f99:	mov    esp,0x17a4e712
  401f9e:	inc    esi
  401f9f:	jp     0x401fa5
  401fa1:	rcl    DWORD PTR [edi],0x4b
  401fa4:	shl    DWORD PTR [esi+0x6eb34d5],cl
  401faa:	repnz (bad) 
  401fac:	mov    ch,0xde
  401fae:	(bad)  
  401faf:	loop   0x401fe5
  401fb1:	dec    esp
  401fb2:	addr16 inc eax
  401fb4:	and    al,0x4e
  401fb6:	cs xchg esp,eax
  401fb8:	add    DWORD PTR ds:0xc29d954f,edx
  401fbe:	mov    bh,0xd8
  401fc0:	lods   eax,DWORD PTR ds:[esi]
  401fc1:	(bad)  
  401fc2:	fcom   DWORD PTR [eax+0x27]
  401fc5:	outs   dx,DWORD PTR ds:[esi]
  401fc6:	sti    
  401fc7:	cmp    BYTE PTR [eax],dl
  401fc9:	cmp    DWORD PTR [ebp-0x14e52d80],edx
  401fcf:	(bad)  
  401fd0:	fwait
  401fd1:	test   al,0xa6
  401fd3:	jl     0x401fb8
  401fd5:	xor    DWORD PTR [edx],0xffffff91
  401fd8:	aad    0x3f
  401fda:	jmp    0x869467fd
  401fdf:	push   0x78
  401fe1:	push   0xfffffffc
  401fe3:	mov    edi,0x49644c9f
  401fe8:	mov    ds:0xbd8c078f,eax
  401fed:	int3   
  401fee:	in     al,dx
  401fef:	push   edx
  401ff0:	fwait
  401ff1:	in     al,0xe4
  401ff3:	inc    eax
  401ff4:	cdq    
  401ff5:	inc    edx
  401ff6:	mov    ebx,0x6a22eb52
  401ffb:	or     al,0x94
  401ffd:	or     edx,esi
  401fff:	add    BYTE PTR [esi+0x4e3864bc],al
  402005:	shr    DWORD PTR [edx-0x11],0x25
  402009:	stc    
  40200a:	jge    0x402043
  40200c:	lahf   
  40200d:	mov    ebx,0x5d9748ba
  402012:	jl     0x402057
  402014:	xor    eax,0xff39506c
  402019:	rol    esp,cl
  40201b:	pop    ecx
  40201c:	nop
  40201d:	mov    esi,0xd62ccd2f
  402022:	sub    eax,0x5f41c886
  402027:	stos   DWORD PTR es:[edi],eax
  402028:	push   ebp
  402029:	sbb    eax,0x1e1992a
  40202e:	sahf   
  40202f:	inc    esi
  402030:	add    eax,0xab429497
  402035:	shl    BYTE PTR [eax-0x19],1
  402038:	ja     0x402027
  40203a:	pusha  
  40203b:	test   DWORD PTR [esi-0x4b7a8a31],esp
  402041:	and    DWORD PTR [eax],0x5f36e70
  402047:	pop    ds
  402048:	adc    al,0x3
  40204a:	push   edx
  40204b:	mov    edx,0x44d6ad1c
  402050:	aad    0xd0
  402052:	fdiv   st,st(0)
  402054:	dec    ecx
  402055:	scas   eax,DWORD PTR es:[edi]
  402056:	or     BYTE PTR [eax-0x3df8d859],bl
  40205c:	shl    BYTE PTR [edi-0xb76a192],0xd7
  402063:	cdq    
  402064:	mov    al,0xc6
  402066:	mov    edi,0x5c76f73
  40206b:	jecxz  0x401ff0
  40206d:	jmp    0x1d635c8f
  402072:	cmp    edi,DWORD PTR [esi+0x12545096]
  402078:	loope  0x401ffc
  40207a:	ja     0x40208d
  40207c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40207d:	nop
  40207e:	and    WORD PTR [ecx+0x5a518fe9],di
  402085:	xchg   esp,eax
  402086:	addr16 loopne 0x4020d9
  402089:	call   0x1d8e6663
  40208e:	jmp    0x402042
  402090:	adc    dh,dh
  402092:	mov    dl,0x5a
  402094:	pop    ecx
  402095:	xor    BYTE PTR [esi-0x73],dh
  402098:	out    0x68,eax
  40209a:	repnz sar BYTE PTR [edx-0x6df560d6],cl
  4020a1:	enter  0x104f,0x32
  4020a5:	adc    eax,0xd82b5721
  4020aa:	push   esp
  4020ab:	aaa    
  4020ac:	out    dx,al
  4020ad:	mov    al,ds:0xd6f97af4
  4020b2:	mov    eax,DWORD PTR [edi+eiz*8]
  4020b5:	sbb    al,0x9
  4020b7:	sub    BYTE PTR ss:[eax],dh
  4020ba:	mov    ebp,0x3ae23633
  4020bf:	dec    ebp
  4020c0:	ret    
  4020c1:	push   ss
  4020c2:	and    al,0x46
  4020c4:	loop   0x40207a
  4020c6:	ss or  al,0xdf
  4020c9:	mov    edx,0xbeca861d
  4020ce:	or     BYTE PTR [edx-0xffe0396],dh
  4020d4:	push   eax
  4020d5:	lods   eax,DWORD PTR ds:[esi]
  4020d6:	stc    
  4020d7:	nop
  4020d8:	push   edi
  4020d9:	pop    ebx
  4020da:	sub    esi,esp
  4020dc:	jecxz  0x4020cf
  4020de:	inc    ebx
  4020df:	ficom  DWORD PTR [edx]
  4020e1:	shl    DWORD PTR [edi+0x1b],1
  4020e4:	xchg   ebx,eax
  4020e5:	cld    
  4020e6:	inc    edx
  4020e7:	jle    0x40212c
  4020e9:	fistp  QWORD PTR [esi]
  4020eb:	mov    al,ds:0xfc778fa7
  4020f0:	xor    al,0xf2
  4020f2:	adc    esp,DWORD PTR [ebx+ebx*1-0x74]
  4020f6:	shr    bh,1
  4020f8:	cmc    
  4020f9:	out    0x57,al
  4020fb:	xlat   BYTE PTR ds:[ebx]
  4020fc:	mov    esp,0xac1e51bd
  402101:	cli    
  402102:	test   al,0x82
  402104:	ins    BYTE PTR es:[edi],dx
  402105:	mov    WORD PTR [esi+0x55],?
  402108:	sbb    DWORD PTR cs:[esi],esi
  40210b:	icebp  
  40210c:	mov    ds:0xfd55f676,eax
  402111:	lods   eax,DWORD PTR ds:[esi]
  402112:	aas    
  402113:	jno    0x402161
  402115:	mov    esi,0x13689b59
  40211a:	dec    edx
  40211b:	inc    esp
  40211c:	or     eax,esp
  40211e:	out    dx,eax
  40211f:	xchg   esi,eax
  402120:	fs push es
  402122:	add    al,BYTE PTR [ebx-0x6b190793]
  402128:	fdivrp st(4),st
  40212a:	dec    esi
  40212b:	into   
  40212c:	adc    edx,edi
  40212e:	data16 loop 0x40213b
  402131:	in     eax,dx
  402132:	sbb    edi,ebp
  402134:	jl     0x40217d
  402136:	jo     0x4020c9
  402138:	fwait
  402139:	mov    edi,0xa945b3bd
  40213e:	xchg   esp,eax
  40213f:	mov    al,ah
  402141:	xchg   ecx,eax
  402142:	or     eax,0xe9c71a32
  402147:	lock sbb al,0x18
  40214a:	dec    edx
  40214b:	sub    DWORD PTR [eax-0x6a0db223],0xfffffff4
  402152:	dec    edi
  402153:	test   BYTE PTR [esi],bh
  402155:	jne    0x4020fd
  402157:	mov    edx,0x6086907f
  40215c:	mov    eax,ds:0xaf4e27cd
  402161:	aam    0xb
  402163:	scas   eax,DWORD PTR es:[edi]
  402164:	jmp    0x921fc153
  402169:	shl    DWORD PTR [ebx],cl
  40216b:	adc    ah,BYTE PTR [esi+0x1b4a0c7]
  402171:	and    al,0xed
  402173:	lods   al,BYTE PTR ds:[esi]
  402174:	je     0x4021e2
  402176:	and    dl,BYTE PTR [ecx-0x7f]
  402179:	sub    al,0x5c
  40217b:	sub    esp,DWORD PTR ss:[edi]
  40217e:	push   esp
  40217f:	xchg   edi,eax
  402180:	mov    al,0x73
  402182:	aaa    
  402183:	jb     0x4021ae
  402185:	jle    0x402201
  402187:	popf   
  402188:	icebp  
  402189:	mov    eax,ds:0x4b689b0e
  40218e:	mov    DWORD PTR [eax],eax
  402190:	push   ebp
  402191:	pop    ecx
  402192:	test   al,0x29
  402194:	cmp    DWORD PTR [eax+edx*2-0x4e],esi
  402198:	sbb    eax,0xa15e9af1
  40219d:	pop    edx
  40219e:	push   ebx
  40219f:	push   edx
  4021a0:	std    
  4021a1:	dec    edx
  4021a2:	data16 sar BYTE PTR [esi+0x64127944],1
  4021a9:	add    eax,0x9c491797
  4021ae:	ret    
  4021af:	sub    ebp,esp
  4021b1:	data16 in al,0x65
  4021b4:	xor    dl,BYTE PTR [edx]
  4021b6:	inc    ebx
  4021b7:	mov    cl,0x68
  4021b9:	sub    esp,0x6cf6492f
  4021bf:	xor    DWORD PTR [edx-0x44],esi
  4021c2:	xor    esi,ebx
  4021c4:	ds retf 
  4021c6:	and    BYTE PTR [edi+ebx*8+0x50],ah
  4021ca:	dec    edx
  4021cb:	pop    edi
  4021cc:	jmp    0x402198
  4021ce:	call   ecx
  4021d0:	xchg   bl,dl
  4021d2:	jbe    0x402193
  4021d4:	fxch   st(4)
  4021d6:	nop
  4021d7:	(bad)  
  4021d8:	xor    al,0xa9
  4021da:	adc    DWORD PTR [ecx],ebp
  4021dc:	push   0xc30be412
  4021e1:	or     esp,edi
  4021e3:	mov    eax,0x40c79711
  4021e8:	sbb    eax,0xcfcbbcf5
  4021ed:	mov    ah,0x1a
  4021ef:	jg     0x402230
  4021f1:	stos   DWORD PTR es:[edi],eax
  4021f2:	stc    
  4021f3:	mov    ebp,DWORD PTR [edx+ebx*4-0x47dfb4ac]
  4021fa:	xor    BYTE PTR [edi+eax*4-0x22f6ef45],dh
  402201:	setle  BYTE PTR [edi-0x55caa586]
  402208:	xchg   esi,eax
  402209:	lea    eax,[esi-0x6097e324]
  40220f:	and    DWORD PTR [edi-0x46],0x1
  402213:	mov    BYTE PTR [edx+0x1],bh
  402216:	repnz stos BYTE PTR es:[edi],al
  402218:	lock dec edi
  40221a:	cdq    
  40221b:	push   0x610cfefe
  402220:	sbb    BYTE PTR [edi-0x23],cl
  402223:	push   ebp
  402224:	and    ah,BYTE PTR [edx+0x346ba12d]
  40222a:	mov    dh,0x4c
  40222c:	aas    
  40222d:	pop    esp
  40222e:	pop    ds
  40222f:	loope  0x402271
  402231:	nop
  402232:	mov    al,ds:0x999bc26e
  402237:	xor    eax,0x9a9a90d1
  40223c:	jns    0x4021cd
  40223e:	and    eax,0x514f5472
  402243:	dec    DWORD PTR [ecx]
  402245:	mov    bl,0xc5
  402247:	dec    edx
  402248:	sbb    DWORD PTR [esp+ebx*4-0x3d],esi
  40224c:	ret    0xe604
  40224f:	xchg   ebx,eax
  402250:	jae    0x402245
  402252:	jp     0x402230
  402254:	xchg   ebp,eax
  402255:	std    
  402256:	cmp    eax,0x58449985
  40225b:	xchg   bx,ax
  40225d:	ja     0x40229a
  40225f:	add    ch,ch
  402261:	out    dx,al
  402262:	dec    ebx
  402263:	mov    es,WORD PTR [esi+0x798515f9]
  402269:	sbb    al,BYTE PTR [edx]
  40226b:	dec    edx
  40226c:	inc    esp
  40226d:	mov    eax,ds:0x6a355c63
  402272:	test   al,0x92
  402274:	pusha  
  402275:	mov    ebp,?
  402277:	aaa    
  402278:	shl    esp,cl
  40227a:	bound  ebx,QWORD PTR [ebx+0x28]
  40227d:	adc    al,0xc9
  40227f:	std    
  402280:	xchg   DWORD PTR [edi+0xb7cce16],ebp
  402286:	and    DWORD PTR [ebx],ecx
  402288:	fwait
  402289:	mov    eax,0xe56a5052
  40228e:	bound  ecx,QWORD PTR [esi+0x4c]
  402291:	adc    DWORD PTR [ebx-0x47],esp
  402294:	dec    esp
  402295:	push   es
  402296:	push   esi
  402297:	mov    ch,cl
  402299:	add    BYTE PTR [ecx-0xff183f4],dl
  40229f:	out    dx,al
  4022a0:	and    ebx,edi
  4022a2:	push   esp
  4022a3:	sti    
  4022a4:	rcl    BYTE PTR [edx+0x7fd435e4],cl
  4022aa:	outs   dx,BYTE PTR ds:[esi]
  4022ab:	scas   al,BYTE PTR es:[edi]
  4022ac:	dec    edx
  4022ad:	retf   
  4022ae:	inc    esp
  4022af:	leave  
  4022b0:	jge    0x402302
  4022b2:	(bad)  [ebx+edi*8-0x535bb277]
  4022b9:	or     ch,BYTE PTR [ecx]
  4022bb:	mov    ch,0xd7
  4022bd:	jl     0x4022cc
  4022bf:	test   DWORD PTR [edi],0xc816bf6c
  4022c5:	mov    ds:0xf9eb27f,al
  4022ca:	sahf   
  4022cb:	out    0xa7,eax
  4022cd:	pop    edx
  4022ce:	les    edi,FWORD PTR [esi+0x7]
  4022d1:	dec    ecx
  4022d2:	ret    0x4e0d
  4022d5:	pop    edi
  4022d6:	sbb    al,0xf2
  4022d8:	(bad)  
  4022d9:	addr16 add al,0xe1
  4022dc:	cmp    DWORD PTR es:[edx-0x4292a048],ebp
  4022e3:	cmc    
  4022e4:	daa    
  4022e5:	rcl    BYTE PTR [ecx],0x3b
  4022e8:	and    BYTE PTR [edx-0x33],ah
  4022eb:	cmp    BYTE PTR [eax+0x2c2cdfc5],bh
  4022f1:	push   edi
  4022f2:	mov    dh,0xd
  4022f4:	inc    ebp
  4022f5:	sti    
  4022f6:	sbb    esi,DWORD PTR [esi+eax*2]
  4022f9:	sahf   
  4022fa:	push   esi
  4022fb:	and    BYTE PTR [eax],dl
  4022fd:	inc    esi
  4022fe:	fist   DWORD PTR [eax]
  402300:	daa    
  402301:	leave  
  402302:	mov    ds:0x51056ba5,al
  402307:	(bad)  
  402309:	ja     0x402378
  40230b:	push   edi
  40230c:	in     eax,0x5e
  40230e:	dec    ebx
  40230f:	(bad)  
  402310:	cmp    BYTE PTR [edi-0x31],ah
  402313:	imul   edx,DWORD PTR [esi],0x34
  402316:	sub    DWORD PTR [esi],0x5e19c57c
  40231c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40231d:	cmp    DWORD PTR [eax+ebx*2+0x57],esi
  402321:	mov    eax,0x3f468aae
  402326:	sti    
  402327:	popa   
  402328:	(bad)
  40232b:	push   esi
  40232c:	fnstsw WORD PTR [eax]
  40232e:	(bad)  
  40232f:	mov    ecx,0x2fa5373b
  402334:	jb     0x402349
  402336:	xor    al,0x7d
  402338:	mov    fs,eax
  40233a:	xchg   eax,edi
  40233c:	add    eax,0xff2177a4
  402341:	imul   eax,DWORD PTR [esi],0x4f66ccae
  402347:	and    edx,DWORD PTR [esi-0x157bc10d]
  40234d:	lahf   
  40234e:	sub    eax,0xbbbd9b9f
  402353:	push   esp
  402354:	mov    eax,0xf7ac71e2
  402359:	or     ch,ch
  40235b:	shl    BYTE PTR [edi],cl
  40235d:	sti    
  40235e:	stc    
  40235f:	es dec esi
  402361:	test   DWORD PTR [edi+0x60],edx
  402364:	push   ebp
  402365:	daa    
  402366:	retf   
  402367:	addr16 cdq 
  402369:	dec    ebp
  40236a:	pop    ebp
  40236b:	or     eax,DWORD PTR ds:0x279ea1f9
  402371:	fs adc al,0x6a
  402374:	clc    
  402375:	xor    al,0xc8
  402377:	inc    ecx
  402378:	idiv   BYTE PTR [ecx-0x58]
  40237b:	shl    DWORD PTR [ebp+0x46749f6f],1
  402381:	sbb    BYTE PTR [ecx+0x8],dl
  402384:	xchg   esi,eax
  402385:	push   ss
  402386:	fadd   DWORD PTR [ecx-0x72]
  402389:	pop    edi
  40238a:	fwait
  40238b:	repz mov bl,0x60
  40238e:	popa   
  40238f:	pop    edx
  402390:	mov    dh,0x35
  402392:	loop   0x4023d4
  402394:	sub    ebp,edx
  402396:	push   edi
  402397:	xor    BYTE PTR [esi],0xd4
  40239a:	jmp    0x4023f8
  40239c:	sub    edi,DWORD PTR ds:0xbce29455
  4023a2:	jl     0x4023f2
  4023a4:	and    al,0x3
  4023a6:	enter  0xbc28,0x2c
  4023aa:	jl     0x402374
  4023ac:	ja     0x4023d6
  4023ae:	xchg   ebp,eax
  4023af:	cmp    eax,0xa36a4ebd
  4023b4:	pop    ds
  4023b5:	jge    0x40238a
  4023b7:	mov    al,0x34
  4023b9:	jg     0x402423
  4023bb:	std    
  4023bc:	lods   ax,WORD PTR ds:[esi]
  4023be:	in     eax,0x1d
  4023c0:	mov    ch,0xca
  4023c2:	lahf   
  4023c3:	ss sub eax,0xd070e964
  4023c9:	stc    
  4023ca:	shr    BYTE PTR [ecx-0x441bbc7e],0x1a
  4023d1:	cdq    
  4023d2:	retf   0x28cc
  4023d5:	stos   DWORD PTR es:[edi],eax
  4023d6:	and    edi,eax
  4023d8:	popa   
  4023d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023da:	dec    esp
  4023db:	shr    eax,0xf
  4023de:	add    ecx,DWORD PTR [esi]
  4023e0:	loopne 0x40237d
  4023e2:	into   
  4023e3:	jae    0x4023b1
  4023e5:	ins    BYTE PTR es:[edi],dx
  4023e6:	ds xchg esp,eax
  4023e8:	adc    DWORD PTR ds:[edx-0x4d],eax
  4023ec:	rep gs stos DWORD PTR es:[edi],eax
  4023ef:	pusha  
  4023f0:	sbb    al,0xc
  4023f2:	scas   eax,DWORD PTR es:[edi]
  4023f3:	in     al,0xfd
  4023f5:	pushf  
  4023f6:	push   esp
  4023f7:	push   esi
  4023f8:	loopne 0x40243f
  4023fa:	(bad)  
  4023fb:	mov    dh,0x78
  4023fd:	stos   DWORD PTR es:[edi],eax
  4023fe:	add    edi,DWORD PTR [edx]
  402400:	mov    al,ds:0x7523381f
  402405:	sti    
  402406:	xor    eax,0x482f433
  40240b:	mov    DWORD PTR [esi+0x67718c3a],esp
  402411:	push   ebp
  402412:	in     eax,0x8
  402414:	xchg   esi,eax
  402415:	xor    dh,BYTE PTR [esi]
  402417:	xor    eax,0x7834c5f0
  40241c:	adc    al,0x37
  40241e:	(bad)  [edx]
  402420:	gs mov cl,0x7b
  402423:	jae    0x402444
  402425:	imul   esi,DWORD PTR ds:0xc75a062e,0xf2e17e28
  40242f:	mov    bl,0xbc
  402431:	add    BYTE PTR [ebp-0x39339c7a],al
  402437:	scas   al,BYTE PTR es:[edi]
  402438:	adc    eax,0xfe65e8ca
  40243d:	mov    bl,BYTE PTR [edi+0x22]
  402440:	enter  0x9dd1,0xc2
  402444:	or     eax,0x3738b311
  402449:	fs push ebp
  40244b:	xchg   BYTE PTR [eax+ecx*8-0x1b19abfe],bl
  402452:	sub    BYTE PTR [edi],0xdf
  402455:	mov    edi,0x81cd5fe2
  40245a:	cdq    
  40245b:	or     al,0xba
  40245d:	call   0x8d5:0x2188cd4e
  402464:	jmp    0x4024df
  402466:	inc    eax
  402467:	adc    al,0x8f
  402469:	xor    bh,bh
  40246b:	test   eax,0xa63d47a5
  402470:	stos   BYTE PTR es:[edi],al
  402471:	mov    bl,0x94
  402473:	add    ebp,0x72
  402476:	retf   0x3a71
  402479:	inc    ebx
  40247a:	or     al,0xba
  40247c:	mov    DWORD PTR [ebx-0x47284d1d],ebp
  402482:	lods   eax,DWORD PTR ds:[esi]
  402483:	mov    ah,0x20
  402485:	sbb    DWORD PTR [eax+ebx*8+0x5],ebp
  402489:	inc    eax
  40248a:	mov    WORD PTR [esp+ebp*1-0x1933cf5f],?
  402491:	shl    al,cl
  402493:	xchg   ebp,eax
  402494:	lods   eax,DWORD PTR ds:[esi]
  402495:	inc    ebp
  402496:	add    al,0xed
  402498:	leave  
  402499:	xchg   esp,eax
  40249a:	jo     0x402508
  40249c:	pop    esp
  40249d:	ins    DWORD PTR es:[edi],dx
  40249e:	adc    esp,DWORD PTR [edx]
  4024a0:	test   al,0x72
  4024a2:	or     ebp,ebx
  4024a4:	es sbb al,0x98
  4024a7:	pop    es
  4024a8:	jp     0x4024f7
  4024aa:	in     al,0xbc
  4024ac:	sahf   
  4024ad:	hlt    
  4024ae:	adc    BYTE PTR [ebx+0x2c],dl
  4024b1:	cmp    al,BYTE PTR [esi+0x5d]
  4024b4:	push   esi
  4024b5:	xor    eax,0x176fe1bd
  4024ba:	test   BYTE PTR [esi+ebp*8-0x4419809f],al
  4024c1:	and    BYTE PTR [edx+eiz*8],ah
  4024c4:	add    ebx,esi
  4024c6:	push   ebx
  4024c7:	push   cs
  4024c8:	xor    eax,0x290ce1d4
  4024cd:	mov    db1,esi
  4024d0:	mov    WORD PTR [edx-0x24],?
  4024d3:	add    eax,0x7a51a749
  4024d8:	es cwde 
  4024da:	(bad)  
  4024db:	adc    BYTE PTR [edi-0x2],dl
  4024de:	sub    al,0x94
  4024e0:	in     eax,0x3c
  4024e2:	cmp    ebp,edx
  4024e4:	je     0x40254e
  4024e6:	shl    BYTE PTR [eax+0x771d4c02],1
  4024ec:	sbb    dh,bh
  4024ee:	add    BYTE PTR [eax-0x49],bl
  4024f1:	jmp    0xd98b:0x63ddd377
  4024f8:	mov    BYTE PTR [eax],bl
  4024fa:	aam    0x39
  4024fc:	jno    0x402561
  4024fe:	jo     0x402552
  402500:	sbb    ah,ah
  402502:	dec    esp
  402503:	enter  0xccec,0xdf
  402507:	cmp    BYTE PTR [esi-0x55],ch
  40250a:	mov    bl,0x5
  40250c:	pop    ebp
  40250d:	pop    ds
  40250e:	add    ah,BYTE PTR [edi-0x792a0873]
  402514:	repz aaa 
  402516:	inc    ecx
  402517:	mov    esp,0xb9fbe64d
  40251c:	pop    ebx
  40251d:	mov    ecx,0xd36ec0fd
  402522:	mov    cl,0x62
  402524:	je     0x40256d
  402526:	jne    0x40250c
  402528:	int    0x2d
  40252a:	and    BYTE PTR [eax],bl
  40252c:	outs   dx,DWORD PTR ds:[esi]
  40252d:	pop    esi
  40252e:	jmp    0x22f149d0
  402533:	xor    al,0x48
  402535:	fbld   TBYTE PTR [edx-0x661336a1]
  40253b:	loope  0x402549
  40253d:	mov    ds:0xac8a101f,al
  402542:	mov    ecx,0xe71cf2a
  402547:	(bad)  
  402548:	leave  
  402549:	cmp    esp,DWORD PTR [edi+0x36489671]
  40254f:	push   edx
  402550:	dec    ebp
  402551:	pop    es
  402552:	stc    
  402553:	mov    al,ds:0xba60dc9e
  402558:	push   eax
  402559:	mov    esp,0xe7d899d5
  40255e:	pushf  
  40255f:	imul   edx,DWORD PTR [edi],0xb9242c9f
  402565:	(bad)  
  402566:	inc    ebx
  402567:	int3   
  402568:	outs   dx,BYTE PTR ds:[esi]
  402569:	push   cs
  40256a:	out    dx,eax
  40256b:	push   esp
  40256c:	popw   es
  40256e:	jbe    0x4025dd
  402570:	std    
  402571:	pop    eax
  402572:	sbb    dl,BYTE PTR [edi+0x2406cf05]
  402578:	imul   ecx,DWORD PTR [ebx],0xffffffe0
  40257b:	adc    eax,0xb26e729e
  402580:	(bad)  
  402581:	fs mov ebx,0x98114270
  402587:	xchg   BYTE PTR [edx+ebp*1],dh
  40258a:	mov    eax,ds:0xd5615572
  40258f:	mov    eax,ds:0x8d7e6358
  402594:	or     al,0x8c
  402596:	test   al,0x23
  402598:	fwait
  402599:	mov    ds:0xfd777c57,al
  40259e:	out    0x5,al
  4025a0:	pop    es
  4025a1:	cmp    al,0xd6
  4025a3:	pusha  
  4025a4:	retf   
  4025a5:	sub    BYTE PTR [esi+0x439a05d3],bh
  4025ab:	and    bl,BYTE PTR [esi+0x64]
  4025ae:	dec    ebp
  4025af:	int3   
  4025b0:	loop   0x40253d
  4025b2:	and    al,0xb2
  4025b4:	out    0x6b,al
  4025b6:	and    esi,DWORD PTR [esi+edx*2+0x7ee69a3a]
  4025bd:	sub    esp,DWORD PTR [edi-0x27]
  4025c0:	scas   al,BYTE PTR es:[edi]
  4025c1:	mov    eax,0x649d8e7f
  4025c6:	loopne 0x402568
  4025c8:	mov    ecx,0xc0823f42
  4025cd:	mov    dh,0xca
  4025cf:	pusha  
  4025d0:	push   ecx
  4025d1:	dec    edx
  4025d2:	cdq    
  4025d3:	adc    esi,DWORD PTR [eax]
  4025d5:	xor    DWORD PTR [ecx+0x4c],ecx
  4025d8:	rol    BYTE PTR [eax-0x6f],0xca
  4025dc:	mov    bl,BYTE PTR [ecx+0x777d4940]
  4025e2:	in     al,0x7e
  4025e4:	sbb    al,0xfc
  4025e6:	xchg   ebx,eax
  4025e7:	stos   BYTE PTR es:[edi],al
  4025e8:	or     eax,0xfdb3e37c
  4025ed:	mov    esp,0x251a679f
  4025f2:	aaa    
  4025f3:	sbb    eax,DWORD PTR [edx-0x2472a7b2]
  4025f9:	lods   eax,DWORD PTR ds:[esi]
  4025fa:	imul   eax,DWORD PTR [edx+0x24c1cfba],0xffffff92
  402601:	adc    al,0x6d
  402603:	icebp  
  402604:	xchg   DWORD PTR [ebx+0x4541d9e6],eax
  40260a:	outs   dx,DWORD PTR ds:[esi]
  40260b:	bound  ebp,QWORD PTR [ebp-0x7c11d82d]
  402611:	adc    bh,BYTE PTR [esi-0x16e18ed2]
  402617:	lock cld 
  402619:	sub    bl,ah
  40261b:	daa    
  40261c:	sub    BYTE PTR [eax],ah
  40261e:	fist   DWORD PTR ds:0x6bc666b8
  402624:	dec    ebp
  402625:	jmp    0x9551:0xd03ba484
  40262c:	cwde   
  40262d:	repnz fnstenv [esp+edx*2]
  402631:	and    DWORD PTR [ecx+0x25c0e25a],edi
  402637:	and    DWORD PTR [esi-0x28775470],ebp
  40263d:	in     eax,dx
  40263e:	push   ebx
  40263f:	xchg   ebp,eax
  402640:	mov    esi,es
  402642:	fwait
  402643:	imul   edx,edi,0xffffffad
  402646:	(bad)  
  402648:	cmc    
  402649:	mov    es,WORD PTR [eax]
  40264b:	imul   eax,DWORD PTR [edx+edx*4-0x4d5e562],0x9b6983ad
  402656:	loopne 0x40263c
  402658:	xchg   ebp,eax
  402659:	out    dx,eax
  40265a:	inc    ebp
  40265b:	dec    eax
  40265c:	(bad)  
  40265d:	or     DWORD PTR [eax],esi
  40265f:	(bad)  
  402660:	pop    eax
  402661:	leave  
  402662:	lea    edi,[edx+edi*2+0x0]
  402666:	cmp    DWORD PTR [edi-0x41764e6c],ebp
  40266c:	push   cs
  40266d:	div    edi
  40266f:	aad    0x48
  402671:	jp     0x40265c
  402673:	adc    BYTE PTR [edi+eax*8],ah
  402676:	repz dec edi
  402678:	ds inc esp
  40267a:	arpl   si,bp
  40267c:	cld    
  40267d:	jl     0x4026f2
  40267f:	loop   0x4026d8
  402681:	xchg   edi,eax
  402682:	lock sbb dh,BYTE PTR [edi-0x217e242]
  402689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40268a:	call   0x5ce13d20
  40268f:	popf   
  402690:	dec    ebx
  402691:	adc    BYTE PTR [ebp+0x1508863a],0x5d
  402698:	sbb    eax,0x3ce5ff45
  40269d:	je     0x402705
  40269f:	popf   
  4026a0:	mov    esi,0x6f879dce
  4026a5:	fidivr DWORD PTR [edi]
  4026a7:	xor    DWORD PTR [ebp-0x7e112012],esp
  4026ad:	pop    esi
  4026ae:	out    dx,eax
  4026af:	jmp    0x27c:0x4eab98d6
  4026b6:	or     BYTE PTR [esi+0x3a],ch
  4026b9:	outs   dx,BYTE PTR ds:[esi]
  4026ba:	ja     0x402730
  4026bc:	inc    edx
  4026bd:	add    BYTE PTR [esp+ebp*4],dl
  4026c0:	pop    ss
  4026c1:	out    0x9d,al
  4026c3:	xor    ch,BYTE PTR [ebx+0x23]
  4026c6:	cmp    al,0x34
  4026c8:	xor    edx,esp
  4026ca:	xor    eax,0xab0ac4a
  4026cf:	and    ecx,DWORD PTR [esi]
  4026d1:	cmp    BYTE PTR [ebp-0x54],ch
  4026d4:	mov    ds:0xbfd9a03a,eax
  4026d9:	lods   eax,DWORD PTR ds:[esi]
  4026da:	push   0x5e1440d6
  4026df:	(bad)  
  4026e0:	les    esi,FWORD PTR [edx-0x2fc69d9]
  4026e6:	and    BYTE PTR [eax],cl
  4026e8:	sub    dl,al
  4026ea:	enter  0xd98d,0x14
  4026ee:	inc    eax
  4026ef:	jp     0x402695
  4026f1:	mov    ds:0xe65f2cb9,eax
  4026f6:	jae    0x4026e1
  4026f8:	jle    0x402696
  4026fa:	(bad)  
  4026fb:	arpl   WORD PTR [esi-0x3744a295],ax
  402701:	clc    
  402702:	pop    edx
  402703:	mov    esi,0x55a99c67
  402708:	and    BYTE PTR [edx+0x9],ch
  40270b:	pop    es
  40270c:	or     al,0xfc
  40270e:	cld    
  40270f:	je     0x4026fd
  402711:	or     esi,ecx
  402713:	retf   0x3086
  402716:	stc    
  402717:	out    0x9,al
  402719:	dec    edx
  40271a:	shl    DWORD PTR [edx-0x1435caab],1
  402720:	mov    ebx,0x59ef9055
  402725:	jmp    0xaeca:0x7ad1df1a
  40272c:	hlt    
  40272d:	pop    eax
  40272e:	adc    BYTE PTR [edi+0x11a63bf8],0x3
  402735:	mov    eax,0x5816d294
  40273b:	xchg   esp,eax
  40273c:	repnz sbb eax,0xab2c0f96
  402742:	lock pop edx
  402744:	fimul  DWORD PTR [ebp+0x2e85a0d0]
  40274a:	inc    ebp
  40274b:	iret   
  40274c:	mov    edx,0x88cf94a8
  402751:	pop    ds
  402752:	mov    edi,0xd247deae
  402757:	push   0xd38c2e24
  40275c:	or     eax,0x60b67696
  402761:	mov    ?,ebx
  402763:	inc    ebp
  402764:	outs   dx,DWORD PTR ds:[esi]
  402765:	rol    BYTE PTR ds:0x4f9dfb7c,cl
  40276b:	ins    DWORD PTR es:[edi],dx
  40276c:	and    BYTE PTR [eax+0x63],cl
  40276f:	pop    es
  402770:	lea    esp,[ecx]
  402772:	add    BYTE PTR [ebx+eiz*2-0x1f],0xbd
  402777:	xor    cl,bh
  402779:	retf   
  40277a:	and    DWORD PTR [ecx],ebx
  40277c:	sub    eax,0x20ef33d8
  402781:	dec    edx
  402782:	enter  0x16cd,0x60
  402786:	and    eax,0xfd2995f7
  40278b:	xchg   esi,eax
  40278c:	dec    esi
  40278d:	add    DWORD PTR [ecx*4+0x67526a89],esp
  402794:	xchg   ecx,eax
  402795:	outs   dx,BYTE PTR ds:[esi]
  402796:	(bad)  
  402798:	pop    edx
  402799:	sub    edx,esp
  40279b:	sub    edx,eax
  40279d:	mov    bh,BYTE PTR [edx]
  40279f:	push   0xffffffb2
  4027a1:	xchg   ecx,eax
  4027a2:	adc    al,0x6b
  4027a4:	push   es
  4027a5:	sub    ebx,DWORD PTR [edx]
  4027a7:	mov    eax,0xec0fcfb6
  4027ac:	ror    BYTE PTR [eax+0x7d],1
  4027af:	push   esi
  4027b0:	lods   al,BYTE PTR ds:[esi]
  4027b1:	cs int3 
  4027b3:	push   esi
  4027b4:	cs ret 0x8168
  4027b8:	fisubr WORD PTR [ecx]
  4027ba:	or     BYTE PTR [ebp-0x44fb4d10],0xd6
  4027c1:	repz mov ebp,DWORD PTR [edi-0x43]
  4027c5:	shl    DWORD PTR [ecx-0x41897281],cl
  4027cb:	jmp    0x402806
  4027cd:	add    ebp,DWORD PTR [ecx]
  4027cf:	sub    DWORD PTR [edi+0x1e32ab77],0x2d
  4027d6:	mov    dh,0x1d
  4027d8:	push   cs
  4027d9:	icebp  
  4027da:	popf   
  4027db:	pop    ss
  4027dc:	push   esp
  4027dd:	and    eax,0x23af49f7
  4027e2:	and    DWORD PTR [edi-0x7c798ee],edi
  4027e8:	push   DWORD PTR [ecx-0x1d]
  4027eb:	inc    esp
  4027ec:	hlt    
  4027ed:	mov    ds:0x5584c3bd,al
  4027f2:	dec    esp
  4027f3:	dec    ebp
  4027f4:	cli    
  4027f5:	sub    DWORD PTR [edx+edx*4+0x62],ebx
  4027f9:	lock inc esi
  4027fb:	fnstsw WORD PTR [eax+0x6e]
  4027fe:	adc    ebx,DWORD PTR [esi]
  402800:	add    al,0x49
  402802:	(bad)  
  402803:	jmp    0xcf83:0x560f528d
  40280a:	jmp    0x4a59:0x66ba298e
  402811:	sbb    DWORD PTR [ebp+0x5],0xffffff88
  402815:	pusha  
  402816:	adc    edi,esi
  402818:	mov    esp,0x9b00ea1e
  40281d:	test   bh,bh
  40281f:	mov    esp,0xbc04916f
  402824:	sub    al,0x81
  402826:	cmp    eax,0xe7350690
  40282b:	in     eax,dx
  40282c:	test   BYTE PTR [ebp+0xd],ch
  40282f:	ret    
  402830:	sbb    ecx,eax
  402832:	sub    al,0x82
  402834:	imul   edi,ecx,0xf1a4cdb6
  40283a:	cs cmp eax,0xb3661cb3
  402840:	mov    cl,0x5a
  402842:	data16 fsub DWORD PTR [ecx]
  402845:	out    dx,eax
  402846:	pop    edi
  402847:	in     al,0x97
  402849:	aas    
  40284a:	push   esi
  40284b:	ds jmp 0x4028ab
  40284e:	inc    ebx
  40284f:	jg     0x4027fb
  402851:	stos   DWORD PTR es:[edi],eax
  402852:	inc    ebp
  402853:	add    DWORD PTR [eax+eax*2+0x507ae413],esp
  40285a:	imul   eax,ecx,0x5e671bf0
  402860:	into   
  402861:	loop   0x40288a
  402863:	inc    ebp
  402864:	ins    DWORD PTR es:[edi],dx
  402865:	loop   0x402866
  402867:	cld    
  402868:	(bad)  
  402869:	hlt    
  40286a:	(bad)  
  40286b:	fcomp  QWORD PTR [edx]
  40286d:	popa   
  40286e:	in     eax,dx
  40286f:	shl    BYTE PTR [ebx-0x2f071e93],0xb4
  402876:	lods   al,BYTE PTR ds:[esi]
  402877:	sub    ebx,DWORD PTR [ebp+0x41]
  40287a:	not    DWORD PTR [edx-0x44]
  40287d:	stos   DWORD PTR es:[edi],eax
  40287e:	mov    ecx,0xae0cd479
  402883:	mov    WORD PTR [eax+0x12],es
  402886:	fidivr DWORD PTR [ebx]
  402888:	sub    eax,0x52ccf582
  40288d:	cld    
  40288e:	data16 mov al,0xc3
  402891:	cli    
  402892:	xor    cl,BYTE PTR [ecx-0x6ac5024]
  402898:	pushf  
  402899:	mov    edi,0xe374d4f1
  40289e:	mov    dh,0x83
  4028a0:	xchg   esi,eax
  4028a1:	fbld   TBYTE PTR [edx+0x40aa7e12]
  4028a7:	jle    0x4028f6
  4028a9:	inc    esi
  4028aa:	rcl    BYTE PTR [edx-0x74],cl
  4028ad:	enter  0x8830,0x79
  4028b1:	cld    
  4028b2:	enter  0x960,0x70
  4028b6:	dec    ebx
  4028b7:	cmp    eax,0xe8fbc502
  4028bc:	(bad)  [eax+0x77]
  4028bf:	mov    cl,0xd4
  4028c1:	inc    esi
  4028c2:	jmp    0x5843:0x1e1043c9
  4028c9:	inc    edi
  4028ca:	push   esi
  4028cb:	mov    cl,0x58
  4028cd:	repz mov cl,0x25
  4028d0:	mov    bl,0xde
  4028d2:	sub    BYTE PTR [esi+ecx*8+0x12],bl
  4028d6:	fimul  WORD PTR [eax+0x524baa4c]
  4028dc:	sar    BYTE PTR [edi],cl
  4028de:	mov    WORD PTR [ebp-0x57df05e],?
  4028e4:	push   ecx
  4028e5:	inc    ecx
  4028e6:	xchg   esi,eax
  4028e7:	and    esp,ebp
  4028e9:	inc    edi
  4028ea:	aam    0x8f
  4028ec:	push   ebp
  4028ed:	test   eax,0xabfab935
  4028f2:	(bad)  
  4028f4:	xor    BYTE PTR [esi],ah
  4028f6:	neg    DWORD PTR [edi-0x1d]
  4028f9:	cmp    DWORD PTR [ebp+0x795d6ae7],ebp
  4028ff:	and    al,dl
  402901:	icebp  
  402902:	in     eax,0xfa
  402904:	dec    esp
  402905:	lods   al,BYTE PTR ds:[esi]
  402906:	xor    DWORD PTR [eax-0x4a],edi
  402909:	imul   ebx,edi,0xfffffff9
  40290c:	and    BYTE PTR [edx+edx*2-0x146f9978],cl
  402913:	call   0x6cf0cbcd
  402918:	push   esp
  402919:	out    dx,al
  40291a:	fidiv  DWORD PTR [ebx+0x15]
  40291d:	loope  0x402968
  40291f:	xchg   DWORD PTR [ebp-0x2],eax
  402922:	mov    ch,0xcb
  402924:	lds    esp,FWORD PTR ds:0x95117ecb
  40292a:	and    eax,0xac543c0c
  40292f:	push   es
  402930:	dec    ebx
  402931:	(bad)  
  402932:	js     0x402985
  402934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402935:	add    edi,DWORD PTR [esi+0x114a252]
  40293b:	imul   esp,DWORD PTR [edi+0x1200732d],0x1a
  402942:	data16 adc BYTE PTR [ecx],ah
  402945:	test   al,0xa7
  402947:	mov    edx,es
  402949:	ds pop esi
  40294b:	je     0x4029a3
  40294d:	inc    esi
  40294e:	imul   ebp,esi,0xfffffffd
  402951:	out    dx,al
  402952:	into   
  402953:	push   0xfffffffd
  402955:	(bad)  
  402956:	mov    DWORD PTR [ecx+0x52],esi
  402959:	jge    0x4028db
  40295b:	cs sub eax,0x312b7122
  402961:	or     al,ch
  402963:	jecxz  0x402941
  402965:	hlt    
  402966:	mov    ds:0x6ccf316f,eax
  40296b:	jnp    0x402940
  40296d:	cmc    
  40296e:	mov    edi,0xde57770c
  402973:	(bad)  
  402974:	xor    al,0x55
  402976:	leave  
  402977:	ja     0x402906
  402979:	xchg   edx,eax
  40297a:	sbb    al,0x2
  40297c:	jecxz  0x402976
  40297e:	mov    ecx,gs
  402980:	shl    BYTE PTR [edi],1
  402982:	jg     0x4029ea
  402984:	push   es
  402985:	(bad)  
  402988:	out    dx,eax
  402989:	shl    BYTE PTR [edi+esi*2-0x58],1
  40298d:	mov    dl,0x27
  40298f:	jno    0x40297c
  402991:	scas   eax,DWORD PTR es:[edi]
  402992:	in     al,0x13
  402994:	jge    0x4029e1
  402996:	sub    eax,0xb2661c34
  40299b:	shr    BYTE PTR [ebp+0x3140e4c5],0x9f
  4029a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029a4:	add    esp,DWORD PTR [ebp-0x378b8f44]
  4029aa:	rcr    DWORD PTR [edi+0x79],cl
  4029ad:	adc    al,0xd1
  4029af:	xlat   BYTE PTR ds:[ebx]
  4029b0:	sub    dh,BYTE PTR [edx]
  4029b2:	icebp  
  4029b3:	mov    esi,eax
  4029b5:	push   0xae860d45
  4029ba:	fld    st(2)
  4029bc:	retf   0xee74
  4029bf:	cld    
  4029c0:	xor    dh,BYTE PTR [ebx]
  4029c2:	push   ss
  4029c3:	add    eax,0x502a0e4d
  4029c8:	mov    ecx,0x42b787b2
  4029cd:	push   ds
  4029ce:	push   ecx
  4029cf:	ret    0xca0f
  4029d2:	into   
  4029d3:	out    0xd9,eax
  4029d5:	addr16 inc eax
  4029d7:	call   0xec03b467
  4029dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029dd:	rol    BYTE PTR [eax-0x73ac6e36],cl
  4029e3:	enter  0x8ccf,0xef
  4029e7:	sbb    BYTE PTR [ecx],ch
  4029e9:	pop    esi
  4029ea:	inc    esi
  4029eb:	sbb    DWORD PTR [ebx-0x57e6e9cb],eax
  4029f1:	or     ah,BYTE PTR [ebp-0x5f]
  4029f4:	(bad)  
  4029f5:	aad    0x87
  4029f7:	ss in  al,0xb0
  4029fa:	jns    0x402a50
  4029fc:	mov    edi,0x354d4a82
  402a01:	stos   DWORD PTR es:[edi],eax
  402a02:	aam    0x25
  402a04:	mov    WORD PTR [eax+0x117ca99f],gs
  402a0a:	mov    al,ds:0xccb9960
  402a0f:	and    ch,BYTE PTR [edi]
  402a11:	jae    0x4029fb
  402a13:	dec    eax
  402a14:	mov    dh,0xf
  402a16:	add    al,0xc6
  402a18:	pop    edi
  402a19:	into   
  402a1a:	fisttp DWORD PTR [ecx+0x45]
  402a1d:	dec    ecx
  402a1e:	loopne 0x4029c6
  402a20:	fucomi st,st(6)
  402a22:	add    esp,DWORD PTR [eax]
  402a24:	mov    edi,0x114044b8
  402a29:	ret    0x870c
  402a2c:	(bad)
  402a2f:	bound  edi,QWORD PTR [ecx-0x5c]
  402a32:	pusha  
  402a33:	(bad)  
  402a34:	mov    ecx,0x5fac5f59
  402a39:	mov    cl,0x4c
  402a3b:	or     al,0xcf
  402a3d:	mov    BYTE PTR [ecx+edx*4+0x7596fa47],bl
  402a44:	xchg   ebx,eax
  402a45:	jmp    0xd368:0xbd6e0644
  402a4c:	xchg   edi,eax
  402a4d:	outs   dx,DWORD PTR ds:[esi]
  402a4e:	inc    ebx
  402a4f:	dec    edi
  402a50:	mov    cl,0x3e
  402a52:	jne    0x402aae
  402a54:	mov    al,0xf6
  402a56:	shl    BYTE PTR [ebx-0x3a6db1ab],cl
  402a5c:	and    eax,0x4d5caf41
  402a61:	je     0x4029e4
  402a63:	adc    DWORD PTR [eax],esi
  402a65:	int    0xcc
  402a67:	or     ch,BYTE PTR [edi+0x74]
  402a6a:	or     DWORD PTR [ecx-0x7f73e023],ebp
  402a70:	push   es
  402a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a72:	or     al,0x5f
  402a74:	sub    al,0x17
  402a76:	je     0x402aab
  402a78:	push   es
  402a79:	fstp   DWORD PTR [eax+0x36d3fc8d]
  402a7f:	jle    0x402a6a
  402a81:	mov    ?,WORD PTR [edx+0x26]
  402a84:	push   0x6b41a91c
  402a89:	imul   eax,DWORD PTR [eax+esi*1-0x46bcdb71],0xffffff96
  402a91:	xchg   esp,eax
  402a92:	jl     0x402ae9
  402a94:	(bad)  
  402a95:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  402a97:	inc    esp
  402a98:	add    DWORD PTR [eax+0x57],esi
  402a9b:	int3   
  402a9c:	rcr    DWORD PTR [ecx],cl
  402a9e:	ja     0x402a87
  402aa0:	mov    ch,0xa
  402aa2:	sbb    al,cl
  402aa4:	(bad)  
  402aa5:	push   0xb84c1440
  402aaa:	pop    ebp
  402aab:	dec    ebp
  402aac:	dec    esp
  402aad:	sbb    DWORD PTR [edi-0x78db6ad3],edi
  402ab3:	and    edx,DWORD PTR [ebp+0x4d031c00]
  402ab9:	mov    edi,0x844c0499
  402abe:	push   eax
  402abf:	(bad)  
  402ac0:	and    edi,DWORD PTR [ebp-0x2]
  402ac3:	ret    0xf55c
  402ac6:	jmp    0x58ce:0x973fa9f9
  402acd:	retf   0xbc00
  402ad0:	stos   BYTE PTR es:[edi],al
  402ad1:	mov    ds:0xa611beb5,eax
  402ad6:	mov    esi,0x53c67ab6
  402adb:	daa    
  402adc:	sub    eax,0xe7a1b486
  402ae1:	fstp   TBYTE PTR ds:0x62fbf904
  402ae7:	push   cs
  402ae8:	data16 sub al,0xce
  402aeb:	out    dx,al
  402aec:	lds    ebp,FWORD PTR [ebp+esi*4+0x4f3b0057]
  402af3:	(bad)  
  402af4:	loope  0x402a82
  402af6:	lods   al,BYTE PTR ds:[esi]
  402af7:	jns    0x402b70
  402af9:	sub    ecx,eax
  402afb:	sbb    ecx,esp
  402afd:	aas    
  402afe:	iret   
  402aff:	dec    ecx
  402b00:	fnstsw WORD PTR ds:0x8e577bb9
  402b06:	loope  0x402aa5
  402b08:	xlat   BYTE PTR ss:[ebx]
  402b0a:	xchg   DWORD PTR [ecx+edx*1-0x4b2f843b],esp
  402b11:	add    bh,BYTE PTR [esi+0x552c30e0]
  402b17:	pop    ecx
  402b18:	push   ebx
  402b19:	scas   al,BYTE PTR es:[edi]
  402b1a:	xchg   edx,eax
  402b1b:	fidiv  DWORD PTR [ecx+0x69]
  402b1e:	mov    esi,0x239bdf92
  402b23:	push   0xffffffd8
  402b25:	retf   0xb462
  402b28:	inc    ebx
  402b29:	or     eax,0xbc52d6c8
  402b2e:	enter  0x4c52,0x78
  402b32:	or     eax,0x6b307bb6
  402b37:	imul   edx,DWORD PTR [ecx],0xffffffcc
  402b3a:	pop    ss
  402b3b:	clc    
  402b3c:	addr16 rcl esp,1
  402b3f:	xchg   BYTE PTR [esi-0x14e89c8f],ch
  402b45:	repnz gs xor al,0x82
  402b49:	mov    dh,BYTE PTR ds:0xbf7deee4
  402b4f:	fwait
  402b50:	push   es
  402b51:	jmp    0x8adf:0xbe31047
  402b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b59:	retf   0xb88e
  402b5c:	xchg   ebx,eax
  402b5d:	ficom  WORD PTR [edx+edi*4]
  402b60:	test   eax,0xe588c882
  402b65:	mov    ah,0xa9
  402b67:	xchg   DWORD PTR [ebx-0x71f8ff6e],edi
  402b6d:	or     BYTE PTR [esi-0x1e],cl
  402b70:	cmc    
  402b71:	fsub   DWORD PTR [ebp-0x7a]
  402b74:	lahf   
  402b75:	bound  ebp,QWORD PTR [esi-0x42]
  402b78:	push   0xad18492e
  402b7d:	pusha  
  402b7e:	jge    0x402b69
  402b80:	fs mov dl,0x16
  402b83:	and    ebp,DWORD PTR [eax+edx*4-0x1a]
  402b87:	xor    BYTE PTR [edx],bl
  402b89:	pop    ecx
  402b8a:	sub    eax,0x43f0386a
  402b8f:	mov    eax,ds:0x233c2eaf
  402b94:	xchg   ebp,eax
  402b95:	cdq    
  402b96:	jp     0x402b27
  402b98:	adc    eax,0xb3555c35
  402b9d:	fidiv  DWORD PTR [edx-0x6ab1cdd]
  402ba3:	jmp    0x8406f965
  402ba8:	mov    esp,0x881bc7c9
  402bad:	mov    dl,0x96
  402baf:	ret    0x3223
  402bb2:	in     al,0x73
  402bb4:	cmp    ch,0x8d
  402bb7:	test   eax,0xb1248f12
  402bbc:	les    ebp,FWORD PTR [ecx]
  402bbe:	test   al,0x71
  402bc0:	push   ecx
  402bc1:	aad    0x8f
  402bc3:	and    eax,0x4393b438
  402bc8:	dec    ecx
  402bc9:	sbb    eax,0xda327209
  402bce:	add    DWORD PTR [ebp+ebx*8-0xa6baec4],0xa24ddb34
  402bd9:	mov    eax,DWORD PTR [ebp+ecx*1-0x38]
  402bdd:	and    al,0x6d
  402bdf:	mov    edx,DWORD PTR [eax+eax*1]
  402be2:	xor    eax,0x9fcef3c9
  402be7:	inc    eax
  402be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402be9:	push   ebp
  402bea:	cmp    BYTE PTR [ebx-0x4de96292],0x4e
  402bf1:	out    dx,eax
  402bf2:	rcr    DWORD PTR [edx+0x1b],cl
  402bf5:	xchg   esp,eax
  402bf6:	aas    
  402bf7:	dec    esp
  402bf8:	arpl   WORD PTR [eax+0x44],dx
  402bfb:	scas   al,BYTE PTR es:[edi]
  402bfc:	jns    0x402c30
  402bfe:	aaa    
  402bff:	xchg   edx,eax
  402c00:	push   esi
  402c01:	mov    esp,0xf8459a15
  402c06:	xchg   esp,eax
  402c07:	scas   eax,DWORD PTR es:[edi]
  402c08:	cmp    ecx,edi
  402c0a:	or     eax,0xcacd8ef5
  402c0f:	xchg   edi,eax
  402c10:	icebp  
  402c11:	sbb    eax,0x1b424b2
  402c16:	pop    ecx
  402c17:	sbb    eax,DWORD PTR [ecx+0x176fd705]
  402c1d:	mov    eax,ds:0x92db2594
  402c22:	sub    esi,DWORD PTR [eax]
  402c24:	scas   eax,DWORD PTR es:[edi]
  402c25:	mov    dh,0xc6
  402c27:	fcmovnb st,st(7)
  402c29:	jne    0x402c8c
  402c2b:	and    BYTE PTR [esi],dh
  402c2d:	or     eax,0x2d3e2f71
  402c32:	in     eax,0x4a
  402c34:	push   esi
  402c35:	das    
  402c36:	xchg   edx,ecx
  402c38:	jg     0x402be1
  402c3a:	retf   
  402c3b:	outs   dx,DWORD PTR ds:[esi]
  402c3c:	and    al,BYTE PTR [esp+esi*8]
  402c3f:	out    dx,eax
  402c40:	pushf  
  402c41:	mov    ah,0xda
  402c43:	jl     0x402bfb
  402c45:	inc    eax
  402c46:	out    dx,eax
  402c47:	add    ecx,DWORD PTR cs:[eax+0x6]
  402c4b:	pop    edi
  402c4c:	ret    
  402c4d:	adc    al,0x5f
  402c4f:	(bad)  
  402c50:	js     0x402cba
  402c52:	in     al,0xf3
  402c54:	push   edx
  402c55:	add    al,BYTE PTR ds:[edx+0x53]
  402c59:	xchg   edx,eax
  402c5a:	cdq    
  402c5b:	test   al,0xab
  402c5d:	cmc    
  402c5e:	or     BYTE PTR [ecx-0x24],ch
  402c61:	fyl2xp1 
  402c63:	out    dx,al
  402c64:	cmp    dl,al
  402c66:	adc    al,0x4e
  402c68:	stos   DWORD PTR es:[edi],eax
  402c69:	div    esp
  402c6b:	pop    esi
  402c6c:	add    al,0x51
  402c6e:	inc    esp
  402c6f:	inc    eax
  402c70:	pop    ds
  402c71:	test   eax,0x9346b831
  402c76:	data16 (bad) 
  402c78:	in     eax,0xf9
  402c7a:	adc    al,0xd7
  402c7c:	test   al,0x9f
  402c7e:	add    bl,ah
  402c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c81:	fwait
  402c82:	mov    ch,0xa6
  402c84:	ins    DWORD PTR es:[edi],dx
  402c85:	out    0x19,eax
  402c87:	mov    BYTE PTR [edi+0x1c],al
  402c8a:	fnstenv [esi-0xc]
  402c8d:	xor    BYTE PTR [ebp-0x5],bh
  402c90:	sub    BYTE PTR [ebx],bl
  402c92:	jle    0x402cce
  402c94:	fsub   QWORD PTR [ecx-0x1]
  402c97:	push   cs
  402c98:	jmp    0xc92d:0x4de04fd9
  402c9f:	fdivr  st(6),st
  402ca1:	mov    ebx,0x68d43186
  402ca6:	dec    eax
  402ca7:	or     al,0x14
  402ca9:	in     eax,0xa4
  402cab:	(bad)  
  402cac:	mov    esp,0x434991d1
  402cb1:	jno    0x402d17
  402cb3:	idiv   DWORD PTR [eax+0x617942f5]
  402cb9:	jbe    0x402ce5
  402cbb:	into   
  402cbc:	(bad)  
  402cbd:	gs scas al,BYTE PTR es:[edi]
  402cbf:	push   ebp
  402cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cc1:	pop    ebx
  402cc2:	jnp    0x402cb8
  402cc4:	es jg  0x402cd9
  402cc7:	clc    
  402cc8:	popa   
  402cc9:	lock inc ecx
  402ccb:	stos   DWORD PTR es:[edi],eax
  402ccc:	out    dx,eax
  402ccd:	daa    
  402cce:	mov    bl,0x53
  402cd0:	add    BYTE PTR [esi-0x69357754],0x21
  402cd7:	or     eax,DWORD PTR [eax-0x781d513a]
  402cdd:	pop    ebx
  402cde:	adc    dh,BYTE PTR [ebp+0x19]
  402ce1:	js     0x402ce3
  402ce3:	mov    al,BYTE PTR [eax+0x2b]
  402ce6:	mov    esp,DWORD PTR [eax]
  402ce8:	jbe    0x402d37
  402cea:	(bad)  
  402ceb:	not    BYTE PTR [ecx-0x25]
  402cee:	mov    bh,0xd2
  402cf0:	dec    esi
  402cf1:	mov    edx,cs
  402cf3:	ret    
  402cf4:	mov    eax,ds:0x3dbe6587
  402cf9:	cs mov ah,bh
  402cfc:	push   esp
  402cfd:	(bad)  [edx]
  402cff:	inc    ecx
  402d00:	inc    edx
  402d01:	loop   0x402d20
  402d03:	adc    DWORD PTR [edx+0x4d8355e5],esp
  402d09:	mov    ah,0x5e
  402d0b:	cmc    
  402d0c:	sub    esp,esi
  402d0e:	sbb    al,0xe6
  402d10:	arpl   WORD PTR [ebp-0x52],bx
  402d13:	in     eax,dx
  402d14:	aam    0x7
  402d16:	sbb    BYTE PTR [eax],0x97
  402d19:	adc    BYTE PTR [edx],ch
  402d1b:	cmp    BYTE PTR [edx-0x9],bl
  402d1e:	lahf   
  402d1f:	daa    
  402d20:	push   ss
  402d21:	mov    dl,0x38
  402d23:	hlt    
  402d24:	cmp    DWORD PTR [eax],edx
  402d26:	and    BYTE PTR [esi-0x6a],bl
  402d29:	xchg   ecx,eax
  402d2a:	ret    
  402d2b:	inc    edi
  402d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d2d:	ret    
  402d2e:	cmp    ebx,ebx
  402d30:	and    ah,dh
  402d32:	cdq    
  402d33:	fucomi st,st(6)
  402d35:	sbb    dl,dh
  402d37:	jns    0x402cf5
  402d39:	pop    esi
  402d3a:	aam    0x1f
  402d3c:	loope  0x402d92
  402d3e:	pop    edi
  402d3f:	pushf  
  402d40:	rcl    DWORD PTR gs:[ebp+0x528d07d1],0xcc
  402d48:	sub    DWORD PTR [eax],eax
  402d4a:	and    bh,BYTE PTR cs:[edx]
  402d4d:	(bad)  
  402d4e:	cld    
  402d4f:	daa    
  402d50:	leave  
  402d51:	lods   al,BYTE PTR ds:[esi]
  402d52:	jge    0x402cde
  402d54:	fcom   DWORD PTR [edi]
  402d56:	enter  0xa244,0x19
  402d5a:	(bad)  
  402d5c:	enter  0x94c5,0x1f
  402d60:	(bad)  
  402d61:	mov    dl,0xe7
  402d63:	and    al,0x7e
  402d65:	je     0x402dbd
  402d67:	lods   eax,DWORD PTR ds:[esi]
  402d68:	and    edx,ecx
  402d6a:	mov    ch,0x6b
  402d6c:	inc    ebx
  402d6d:	add    ebx,DWORD PTR [ebx]
  402d6f:	fidivr WORD PTR [ebx+ecx*8]
  402d72:	dec    ebx
  402d73:	fsub   QWORD PTR [eax+0x2c]
  402d76:	int    0xd0
  402d78:	mov    dh,BYTE PTR [edx+0x2b25b42e]
  402d7e:	mov    dl,0xd7
  402d80:	in     eax,dx
  402d81:	mov    WORD PTR [ecx+0x6b],cs
  402d84:	test   al,0xb6
  402d86:	out    dx,eax
  402d87:	nop
  402d88:	inc    edx
  402d89:	cld    
  402d8a:	jle    0x402d83
  402d8c:	xchg   esp,eax
  402d8d:	mov    WORD PTR [ebp+0x2c3a850e],cs
  402d93:	sub    eax,0xc7b00814
  402d98:	jecxz  0x402de6
  402d9a:	push   0xab7ba579
  402d9f:	xor    eax,DWORD PTR [ecx-0x63fed005]
  402da5:	pop    ds
  402da6:	and    BYTE PTR [edx],ch
  402da8:	mov    ah,BYTE PTR [edi+esi*2]
  402dab:	push   ss
  402dac:	xchg   esi,eax
  402dad:	dec    ebp
  402dae:	xor    DWORD PTR [ebp-0x1f0bb8ba],edx
  402db4:	sbb    BYTE PTR [ebp-0x54],0x9f
  402db8:	push   ecx
  402db9:	sub    BYTE PTR gs:[esi+0x52],0xab
  402dbe:	sbb    eax,0x6b96d4e8
  402dc3:	or     al,BYTE PTR ds:0x3e515c8d
  402dc9:	mov    esi,0x9986d3bf
  402dce:	jl     0x402d50
  402dd0:	stos   BYTE PTR es:[edi],al
  402dd1:	call   0xad3c:0x4c36f6ad
  402dd8:	mov    edx,0x3c6a449e
  402ddd:	ret    
  402dde:	inc    edx
  402ddf:	outs   dx,BYTE PTR ds:[esi]
  402de0:	add    BYTE PTR [ecx],bh
  402de2:	jae    0x402e32
  402de4:	pop    ecx
  402de5:	add    BYTE PTR [edi+0x1ce53daf],dh
  402deb:	jb     0x402e3a
  402ded:	dec    eax
  402dee:	iret   
  402def:	clc    
  402df0:	ja     0x402d75
  402df2:	jmp    0xb999:0x7d3a44cc
  402df9:	sar    bl,0x98
  402dfc:	in     eax,dx
  402dfd:	pop    ebx
  402dfe:	mov    al,ds:0x97f3a192
  402e03:	scas   eax,DWORD PTR es:[edi]
  402e04:	sahf   
  402e05:	xchg   esp,eax
  402e06:	std    
  402e07:	inc    edx
  402e08:	push   esi
  402e09:	jmp    0x1b9c8e5f
  402e0e:	pop    edx
  402e0f:	pushf  
  402e10:	jmp    0xc2f:0x572f2d33
  402e17:	pop    edx
  402e18:	aaa    
  402e19:	push   esi
  402e1a:	jmp    FWORD PTR ds:0x97ff797b
  402e20:	sbb    BYTE PTR [eax+esi*8],cl
  402e23:	ja     0x402e68
  402e25:	cmp    ah,dh
  402e27:	enter  0x1899,0x64
  402e2b:	cmp    DWORD PTR [edi],0x41
  402e2e:	sub    al,0x2d
  402e30:	data16 sub al,0x89
  402e33:	out    0xa1,al
  402e35:	xchg   esi,eax
  402e36:	cmp    al,0xc
  402e38:	fiadd  WORD PTR [esi-0x80d010]
  402e3e:	cmc    
  402e3f:	and    ebp,edx
  402e41:	and    DWORD PTR [edx+0x24],ebx
  402e44:	add    BYTE PTR [edi-0x6312584d],dl
  402e4a:	or     al,0xd6
  402e4c:	out    dx,al
  402e4d:	mov    ebx,0x4fad86fc
  402e52:	ret    0x973b
  402e55:	dec    eax
  402e56:	lock push ecx
  402e58:	(bad)  
  402e5a:	ror    BYTE PTR [edi+0x173ac2c7],cl
  402e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e61:	aad    0xfa
  402e63:	lods   al,BYTE PTR ds:[esi]
  402e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e65:	fwait
  402e66:	into   
  402e67:	fst    DWORD PTR [ecx+0x72e0f399]
  402e6d:	mov    dl,0x2b
  402e6f:	ins    BYTE PTR es:[edi],dx
  402e70:	imul   ecx,ecx,0x7cb373b6
  402e76:	push   edi
  402e77:	jecxz  0x402ec4
  402e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e7a:	jnp    0x402e8f
  402e7c:	aam    0x90
  402e7e:	ror    DWORD PTR [ebx-0x1b],1
  402e81:	mov    ah,0x1a
  402e83:	cwde   
  402e84:	leave  
  402e85:	and    al,0xf8
  402e87:	inc    edx
  402e88:	mov    al,0x50
  402e8a:	xchg   ecx,eax
  402e8b:	sbb    al,0x86
  402e8d:	push   ss
  402e8e:	cmp    al,0xfa
  402e90:	push   eax
  402e91:	fs sub al,0x99
  402e94:	mov    dl,0x48
  402e96:	adc    ecx,DWORD PTR [ecx+0x52]
  402e99:	or     BYTE PTR [ecx+0x4c],dl
  402e9c:	pop    ebp
  402e9d:	mov    edx,0xfa7597
  402ea2:	test   dl,dl
  402ea4:	sub    eax,0x8dd0ce26
  402ea9:	in     eax,dx
  402eaa:	lods   eax,DWORD PTR ds:[esi]
  402eab:	(bad)  [edx+ebx*4+0x58de3aee]
  402eb2:	inc    edi
  402eb3:	std    
  402eb4:	xchg   edx,eax
  402eb5:	push   eax
  402eb6:	sahf   
  402eb7:	mov    eax,0x7133f745
  402ebc:	pop    ds
  402ebd:	pop    ecx
  402ebe:	sahf   
  402ebf:	pop    edx
  402ec0:	mov    dl,dl
  402ec2:	add    edx,edi
  402ec4:	mov    bl,0x2b
  402ec6:	xor    ah,BYTE PTR [edx]
  402ec8:	fisub  DWORD PTR [edi]
  402eca:	jg     0x402ed0
  402ecc:	push   0xffffffbf
  402ece:	jle    0x402e64
  402ed0:	lods   eax,DWORD PTR ds:[esi]
  402ed1:	add    ecx,DWORD PTR [ebp+0x74eac912]
  402ed7:	push   edi
  402ed8:	mov    ds:0x34fa8cd6,eax
  402edd:	sbb    BYTE PTR [ebp-0x4],ch
  402ee0:	xchg   ebp,eax
  402ee1:	shl    DWORD PTR [eax],1
  402ee3:	sbb    BYTE PTR [edx+edx*4-0x2f5a50b4],dh
  402eea:	mov    al,ds:0x6bc78e06
  402eef:	push   es
  402ef0:	xchg   edi,eax
  402ef1:	sub    BYTE PTR [edx+0x70934f34],dh
  402ef7:	mov    esp,0xe868b2b8
  402efc:	xor    ah,BYTE PTR [eax-0xf]
  402eff:	js     0x402f5b
  402f01:	stos   BYTE PTR es:[edi],al
  402f02:	mov    bh,0x8f
  402f04:	mov    ecx,0x3197774a
  402f09:	dec    ebx
  402f0a:	fdiv   QWORD PTR [esi+esi*8]
  402f0d:	ss xor eax,0x8c4da306
  402f13:	das    
  402f14:	fiadd  WORD PTR [edi]
  402f16:	cmp    bl,BYTE PTR [esp+edi*8]
  402f19:	cld    
  402f1a:	fwait
  402f1b:	mov    DWORD PTR [ebx],0x8c4e8110
  402f21:	in     eax,0x8b
  402f23:	adc    DWORD PTR [eax],ebx
  402f25:	lds    edx,FWORD PTR [esi]
  402f27:	mov    ebx,0xe7377022
  402f2c:	mov    es,WORD PTR [edx-0x46]
  402f2f:	inc    esi
  402f30:	(bad)  
  402f32:	es cli 
  402f34:	sbb    esp,esp
  402f36:	scas   al,BYTE PTR es:[edi]
  402f37:	sbb    al,0x69
  402f39:	adc    al,0xf2
  402f3b:	sub    ah,BYTE PTR ds:[esi]
  402f3e:	ret    
  402f3f:	pop    eax
  402f40:	scas   eax,DWORD PTR es:[edi]
  402f41:	(bad)  
  402f42:	mov    ebx,0xcbc2e351
  402f47:	(bad)  
  402f48:	std    
  402f49:	out    dx,al
  402f4a:	xor    ah,bl
  402f4c:	or     eax,0xa007efcb
  402f51:	ret    0xc831
  402f54:	shl    DWORD PTR [eax],cl
  402f56:	dec    esp
  402f57:	lods   eax,DWORD PTR ds:[esi]
  402f58:	adc    BYTE PTR [ecx+0x69],cl
  402f5b:	mov    ebx,0x6c3893d0
  402f60:	push   esp
  402f61:	mov    ecx,0xcb25382
  402f66:	lahf   
  402f67:	out    0x66,al
  402f69:	outs   dx,DWORD PTR ds:[esi]
  402f6a:	cmp    edx,eax
  402f6c:	cs push ebp
  402f6e:	ss test al,0x23
  402f71:	xchg   edx,eax
  402f72:	aaa    
  402f73:	sbb    eax,0x28971fcc
  402f78:	add    BYTE PTR [ebx-0x27900aa1],ch
  402f7e:	(bad)  
  402f7f:	into   
  402f80:	mov    bl,0x3a
  402f82:	push   ebp
  402f83:	cmp    al,0x1c
  402f85:	push   0x48
  402f87:	and    eax,ebx
  402f89:	test   DWORD PTR [eax],ecx
  402f8b:	jns    0x403000
  402f8d:	push   edx
  402f8e:	or     BYTE PTR [ecx-0x21],bl
  402f91:	pop    ebx
  402f92:	cwde   
  402f93:	pusha  
  402f94:	je     0x402fa2
  402f96:	ds mov al,0x5a
  402f99:	test   al,0xc8
  402f9b:	jmp    0x78a:0xf60cad7e
  402fa2:	mov    bh,0x6c
  402fa4:	and    ch,BYTE PTR [edx-0x2e036025]
  402faa:	cdq    
  402fab:	dec    edi
  402fad:	mov    gs,WORD PTR [ecx]
  402faf:	sti    
  402fb0:	mov    ebp,0xae795067
  402fb5:	popa   
  402fb6:	and    BYTE PTR [edi+0x596e47be],dh
  402fbc:	and    ecx,DWORD PTR [esi-0x7c]
  402fbf:	inc    ebp
  402fc0:	out    0x96,al
  402fc2:	out    0x51,al
  402fc4:	stos   DWORD PTR es:[edi],eax
  402fc5:	add    DWORD PTR [eax],edi
  402fc7:	cs mov esi,0x153b4a16
  402fcd:	mov    bh,0x4a
  402fcf:	mov    DWORD PTR [ecx+0x402f7fbe],esp
  402fd5:	(bad)  
  402fd6:	jmp    0xc3c6:0x9b604d93
  402fdd:	pop    ecx
  402fde:	(bad)  [eax+0x4ab6269e]
  402fe4:	push   ebp
  402fe5:	mov    ebp,ebp
  402fe7:	and    al,ah
  402fe9:	sub    DWORD PTR [edi+0x49],ecx
  402fec:	cmp    eax,0x2354daac
  402ff1:	stos   BYTE PTR es:[edi],al
  402ff2:	add    dh,dl
  402ff4:	adc    DWORD PTR [ecx],ebp
  402ff6:	fdivp  st(6),st
  402ff8:	aaa    
  402ff9:	mov    eax,0xd08ad82a
  402ffe:	mov    ch,0xe6
  403000:	imul   ebp,DWORD PTR [ebx+0x37fb28ca],0xb2c55db2
  40300a:	sub    BYTE PTR [eax],dh
  40300c:	jno    0x402ff8
  40300e:	mov    eax,ds:0x891837b6
  403013:	iret   
  403014:	or     eax,DWORD PTR [ebx]
  403016:	outs   dx,BYTE PTR ds:[esi]
  403017:	xchg   ebp,eax
  403018:	sub    DWORD PTR [edx],0xffffffa1
  40301b:	stc    
  40301c:	or     bl,dh
  40301e:	fwait
  40301f:	icebp  
  403020:	mov    ebp,0x9ec9a2c5
  403025:	mov    eax,DWORD PTR [edi+ecx*8]
  403028:	in     eax,0xb0
  40302a:	mov    ah,0xb0
  40302c:	(bad)  
  40302d:	cld    
  40302e:	scas   eax,DWORD PTR es:[edi]
  40302f:	mov    ?,WORD PTR cs:[eax]
  403032:	test   al,0x23
  403034:	shr    BYTE PTR [edx+0x6e],cl
  403037:	xchg   esi,eax
  403038:	daa    
  403039:	mov    esp,0x8e1246a1
  40303e:	mov    bh,0xcc
  403040:	cmp    dh,BYTE PTR [eax+0x68032571]
  403046:	jne    0x403099
  403048:	test   DWORD PTR ds:0xb810af7,ebp
  40304e:	imul   ecx,DWORD PTR [eax-0x4b],0xf099efa1
  403055:	adc    DWORD PTR [edi],0xaa028d8e
  40305b:	stc    
  40305c:	sbb    DWORD PTR [eax+ebx*8+0x14],esp
  403060:	mov    bh,0xc4
  403062:	mov    ch,0xe0
  403064:	ret    
  403065:	pusha  
  403066:	mov    WORD PTR [esi-0x3e0115a2],fs
  40306c:	data16 cmc 
  40306e:	pop    ds
  40306f:	(bad)
  403072:	out    dx,al
  403073:	stos   BYTE PTR es:[edi],al
  403074:	sbb    eax,0x34391d0f
  403079:	jle    0x4030c8
  40307b:	pop    ebx
  40307c:	lods   al,BYTE PTR ds:[esi]
  40307d:	in     eax,dx
  40307e:	call   0xa356d866
  403083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403084:	mov    esp,0x1eca6054
  403089:	ja     0x403032
  40308b:	cwde   
  40308c:	jns    0x40301b
  40308e:	and    eax,0x175fdd81
  403093:	(bad)  [ebp-0x66ab0a06]
  403099:	iret   
  40309a:	loopne 0x403084
  40309c:	mov    dh,0x18
  40309e:	lods   eax,DWORD PTR ds:[esi]
  40309f:	xchg   edi,eax
  4030a0:	or     BYTE PTR [edi+0xa5fd282],dh
  4030a6:	adc    BYTE PTR [ebp-0x3b],dl
  4030a9:	mov    dh,0x68
  4030ab:	xlat   BYTE PTR ds:[ebx]
  4030ac:	mov    al,ds:0x511beecd
  4030b1:	jmp    DWORD PTR [edi-0x7eca260]
  4030b7:	pushf  
  4030b8:	jle    0x40308d
  4030ba:	push   es
  4030bb:	(bad)  
  4030bc:	sbb    dh,BYTE PTR [eax+0x26f84a44]
  4030c2:	pop    ds
  4030c3:	(bad)  
  4030c4:	(bad)  
  4030c5:	pop    edi
  4030c6:	clc    
  4030c7:	bound  ebx,QWORD PTR [esi]
  4030c9:	mov    al,ds:0x6515d115
  4030ce:	mul    DWORD PTR [eax+0x74d4568b]
  4030d4:	sar    BYTE PTR [esi+0x3213f765],1
  4030da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030db:	or     BYTE PTR [edx+0x1d],dh
  4030de:	clc    
  4030df:	loopne 0x4030e2
  4030e1:	mov    BYTE PTR [ecx],al
  4030e3:	icebp  
  4030e4:	in     eax,0x81
  4030e6:	jmp    0x40cc:0x50ac94aa
  4030ed:	rcl    DWORD PTR [ecx-0x17],cl
  4030f0:	sub    al,0xb2
  4030f2:	adc    BYTE PTR [eax-0x221f14f2],bh
  4030f8:	cmp    al,0x18
  4030fa:	(bad)  
  4030fb:	imul   eax,DWORD PTR ds:0xad3d5bb2,0x3b
  403102:	shl    edi,cl
  403104:	pop    ds
  403105:	pusha  
  403106:	pop    esp
  403107:	mov    al,0x76
  403109:	jp     0x40309d
  40310b:	jmp    0x403148
  40310d:	and    DWORD PTR ds:0xb2fc21d,edi
  403113:	pop    esp
  403114:	xor    esp,DWORD PTR cs:[edi]
  403117:	xchg   BYTE PTR [eax],ah
  403119:	inc    ebp
  40311a:	(bad)  
  40311b:	sti    
  40311c:	jo     0x4030be
  40311e:	pop    esp
  40311f:	popa   
  403120:	icebp  
  403121:	lods   al,BYTE PTR ds:[esi]
  403122:	push   edx
  403123:	loopne 0x4030ef
  403125:	(bad)  
  403127:	cmc    
  403128:	xor    esi,DWORD PTR [edx-0x1e]
  40312b:	mov    eax,0xf744737f
  403130:	daa    
  403131:	into   
  403132:	add    BYTE PTR [edx+0x62f999e5],cl
  403138:	inc    edi
  403139:	inc    ebp
  40313a:	(bad)  [esi-0x54]
  40313d:	(bad)  
  40313e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40313f:	and    eax,0x77fbe6b1
  403144:	cmp    BYTE PTR [ecx],0xdb
  403147:	ret    0x8321
  40314a:	shl    DWORD PTR [edi],0x58
  40314d:	into   
  40314e:	mov    dh,0x51
  403150:	inc    edx
  403151:	mov    ch,0x25
  403153:	test   BYTE PTR [ebx+0x3df80e47],cl
  403159:	and    bl,bl
  40315b:	mov    esi,0xdf287523
  403160:	dec    edx
  403161:	sbb    eax,0x3b1b738b
  403166:	test   al,0xac
  403168:	add    ecx,ecx
  40316a:	xchg   ebx,eax
  40316b:	not    ebp
  40316d:	int3   
  40316e:	jmp    0x403175
  403170:	out    0x28,eax
  403172:	icebp  
  403173:	ud0    ebp,DWORD PTR [esi-0x38466a0f]
  40317a:	cmpxchg BYTE PTR [edx-0x631dfc82],ah
  403181:	lea    esp,[esi+ebp*8]
  403184:	xchg   ecx,eax
  403185:	iret   
  403186:	add    DWORD PTR [esi-0x18e9f9a5],ebx
  40318c:	mov    eax,ds:0xf28c7a8
  403191:	ret    0xdd27
  403194:	mov    al,ds:0xe6e283ed
  403199:	icebp  
  40319a:	mov    edi,0xb47f558d
  40319f:	out    0xd1,al
  4031a1:	mov    ebx,0x5130d55d
  4031a6:	into   
  4031a7:	and    al,0x90
  4031a9:	(bad)  
  4031aa:	or     eax,0xc8fff0a
  4031af:	dec    edx
  4031b0:	(bad)  
  4031b1:	enter  0xda46,0x70
  4031b5:	ret    0x71f6
  4031b8:	or     edx,DWORD PTR [esi+0x19b7759b]
  4031be:	in     eax,0x16
  4031c0:	xor    dh,dl
  4031c2:	push   ecx
  4031c3:	rcl    WORD PTR [edi-0x21],cl
  4031c7:	jae    0x403211
  4031c9:	(bad)  
  4031cb:	xor    eax,0x1c145fdf
  4031d0:	ja     0x40322b
  4031d2:	dec    esi
  4031d3:	jmp    0x4031c4
  4031d5:	daa    
  4031d6:	push   eax
  4031d7:	jnp    0x4031a5
  4031d9:	dec    edx
  4031da:	sti    
  4031db:	dec    ebx
  4031dc:	out    dx,al
  4031dd:	mov    ah,0x8d
  4031df:	lock jns 0x403223
  4031e2:	push   esp
  4031e3:	icebp  
  4031e4:	outs   dx,BYTE PTR ds:[esi]
  4031e5:	fs push esi
  4031e7:	cs int 0xbe
  4031ea:	add    dh,dh
  4031ec:	sar    dl,0x8a
  4031ef:	jg     0x403246
  4031f1:	sub    eax,0xae230114
  4031f6:	ret    0x1a5f
  4031f9:	cwde   
  4031fa:	in     al,dx
  4031fb:	xor    ecx,edx
  4031fd:	sub    edi,DWORD PTR [ebp-0x2055f69d]
  403203:	fcmovu st,st(1)
  403205:	jl     0x403202
  403207:	int    0xa2
  403209:	fstp   QWORD PTR [ebp-0x33]
  40320c:	call   0x59f5:0x38246048
  403213:	icebp  
  403214:	push   eax
  403215:	(bad)  
  403216:	xor    eax,0x705b9aaf
  40321b:	jmp    0x26f5:0x531096ad
  403222:	push   cs
  403223:	jb     0x4031d3
  403225:	sub    ebx,edi
  403227:	sahf   
  403228:	mov    ds:0x9d7dc23,al
  40322d:	xor    DWORD PTR fs:[ebp-0x3c],0xffffff94
  403232:	and    BYTE PTR [ecx-0xf19c15b],bl
  403238:	sub    eax,0xa9af26bb
  40323d:	inc    esi
  40323e:	dec    esp
  40323f:	and    DWORD PTR [ecx-0x448889d8],edi
  403245:	dec    edx
  403246:	xchg   ebx,eax
  403247:	xchg   edi,eax
  403248:	stos   BYTE PTR es:[edi],al
  403249:	(bad)  
  40324a:	mov    ch,0x2d
  40324c:	(bad)  
  40324e:	lahf   
  40324f:	in     eax,0x90
  403251:	mov    bl,0x8c
  403253:	adc    BYTE PTR [eax+0x2ad1f18d],dh
  403259:	scas   eax,DWORD PTR es:[edi]
  40325a:	xor    eax,0xf228fb77
  40325f:	mov    ds:0xc7d21229,eax
  403264:	enter  0x5666,0x54
  403268:	loope  0x4032b6
  40326a:	lea    ebx,es:0x89187a18
  403271:	(bad)  
  403272:	std    
  403273:	icebp  
  403274:	jl     0x4032eb
  403276:	pusha  
  403277:	mov    bh,0xac
  403279:	lods   eax,DWORD PTR ds:[esi]
  40327a:	sub    eax,0x56eabe07
  40327f:	arpl   WORD PTR [ebx],dx
  403281:	aad    0x26
  403283:	cld    
  403284:	jae    0x403283
  403286:	mov    ds:0x388460bf,eax
  40328b:	ja     0x403275
  40328d:	pop    ss
  40328e:	aad    0xff
  403290:	gs retf 0x6b09
  403294:	rcl    DWORD PTR [ecx],1
  403296:	sbb    ecx,ebx
  403298:	mov    al,ds:0x709dc33c
  40329d:	rcr    DWORD PTR [eax],1
  40329f:	dec    esi
  4032a0:	dec    ebx
  4032a1:	loop   0x4032fc
  4032a3:	xchg   esi,eax
  4032a4:	je     0x403280
  4032a6:	mov    edx,0xfda23a9c
  4032ab:	cmp    al,0x92
  4032ad:	mov    ds:0x200a0ccb,al
  4032b2:	lahf   
  4032b3:	test   al,0x21
  4032b5:	adc    al,BYTE PTR [ecx+ebp*2+0x4c82d4b2]
  4032bc:	loope  0x403257
  4032be:	jg     0x4032ee
  4032c0:	xchg   ecx,eax
  4032c1:	fwait
  4032c2:	scas   eax,DWORD PTR es:[edi]
  4032c3:	dec    ecx
  4032c4:	sti    
  4032c5:	mov    ?,WORD PTR [edx+0x9]
  4032c8:	mov    DWORD PTR [ecx-0x14c6c634],ecx
  4032ce:	add    DWORD PTR [edx],edx
  4032d0:	mov    ds:0x61b2a6c4,eax
  4032d5:	int3   
  4032d6:	in     eax,dx
  4032d7:	mov    cs,WORD PTR [edi-0x34a34539]
  4032dd:	(bad)  
  4032df:	hlt    
  4032e0:	add    BYTE PTR [ecx],dh
  4032e2:	jnp    0x40328a
  4032e4:	rcl    DWORD PTR [ebp+0x6e],0x26
  4032e8:	out    dx,al
  4032e9:	mov    DWORD PTR [edx+0x316fcdf],edi
  4032ef:	xchg   esi,eax
  4032f0:	loop   0x403312
  4032f2:	jbe    0x4032e1
  4032f4:	jge    0x40332f
  4032f6:	sar    DWORD PTR [edi-0x30],cl
  4032f9:	loopne 0x403303
  4032fb:	sbb    edx,DWORD PTR [ebx+ebx*1]
  4032fe:	push   0xf5363277
  403303:	ror    al,cl
  403305:	xor    ch,BYTE PTR [ebp+0x68]
  403308:	add    DWORD PTR [edi],eax
  40330a:	imul   ecx,DWORD PTR [ebp-0x149dc3b3]
  403311:	cs xchg esp,eax
  403313:	stos   BYTE PTR es:[edi],al
  403314:	inc    ebp
  403315:	sbb    DWORD PTR [ebx-0x48],0x1c
  403319:	jl     0x403397
  40331b:	and    dh,BYTE PTR [edx-0x15]
  40331e:	inc    edx
  40331f:	sbb    eax,0xe207a372
  403324:	pop    eax
  403325:	ins    BYTE PTR es:[edi],dx
  403326:	mov    edi,cs
  403328:	mov    ecx,0x94be4b3c
  40332d:	sub    ebp,ebp
  40332f:	sub    esi,DWORD PTR [ebx-0x3a72440c]
  403335:	outs   dx,BYTE PTR ds:[esi]
  403336:	add    eax,0xf44df3fb
  40333b:	inc    ebx
  40333c:	retf   0xef09
  40333f:	jmp    0x4032ed
  403341:	or     esp,DWORD PTR [edi-0x47]
  403344:	stc    
  403345:	sub    eax,0xc6291918
  40334a:	jns    0x4032d8
  40334c:	sbb    dh,BYTE PTR [ebp-0x4657e177]
  403352:	dec    ebp
  403353:	cwde   
  403354:	sub    DWORD PTR [eax-0x1d823060],eax
  40335a:	add    BYTE PTR [ecx-0x136c8067],ch
  403360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403361:	and    esi,DWORD PTR [edx-0x8f5fa75]
  403367:	cwde   
  403368:	repnz cmp BYTE PTR ds:0xaf10b325,0x94
  403370:	xor    BYTE PTR [ecx-0x44],0x59
  403374:	outs   dx,BYTE PTR ds:[esi]
  403375:	stc    
  403376:	jne    0x4033d7
  403378:	dec    esi
  403379:	or     dl,ah
  40337b:	and    ecx,edx
  40337d:	int3   
  40337e:	shl    DWORD PTR [edx+0x68],0x61
  403382:	fidivr DWORD PTR [esi+ebp*4-0x2]
  403386:	in     eax,dx
  403387:	call   FWORD PTR [ebp+edi*1+0x31a6e50d]
  40338e:	mov    ds,WORD PTR [ebp+edi*2-0x5df7dd6c]
  403395:	(bad)  
  403396:	cmc    
  403397:	(bad)  
  403398:	dec    eax
  403399:	sub    DWORD PTR [ebp-0x7c],ebx
  40339c:	sub    al,0xea
  40339e:	mov    ?,WORD PTR [edx-0x191f5c0a]
  4033a4:	pushf  
  4033a5:	hlt    
  4033a6:	mov    bl,0x26
  4033a8:	sub    ebx,DWORD PTR ds:0xd11a345f
  4033ae:	mov    bh,0x90
  4033b0:	fwait
  4033b1:	nop
  4033b2:	dec    edi
  4033b3:	nop
  4033b4:	sahf   
  4033b5:	and    DWORD PTR ds:0xb6ac4bbe,ebx
  4033bb:	mov    BYTE PTR ds:0xfc88bc73,cl
  4033c1:	dec    ebx
  4033c2:	adc    DWORD PTR [edx-0x77b0a475],eax
  4033c8:	xchg   bp,ax
  4033ca:	aad    0x6e
  4033cc:	shl    DWORD PTR [esi+eax*4+0x7470373a],1
  4033d3:	dec    esp
  4033d4:	loope  0x403390
  4033d6:	and    esi,DWORD PTR [ebp-0x4e]
  4033d9:	xchg   edx,eax
  4033da:	push   eax
  4033db:	mov    al,0xe6
  4033dd:	xor    al,0x17
  4033df:	ret    
  4033e0:	sbb    DWORD PTR [edi],esi
  4033e2:	sub    al,al
  4033e4:	push   esp
  4033e5:	mov    edx,DWORD PTR [edx+0x11a0623a]
  4033eb:	ja     0x40341b
  4033ed:	outs   dx,DWORD PTR ds:[esi]
  4033ee:	pop    ds
  4033ef:	pop    ebx
  4033f0:	cmp    al,BYTE PTR [edi+0x74]
  4033f3:	inc    edi
  4033f4:	fiadd  DWORD PTR [ebp+0x73]
  4033f7:	ins    BYTE PTR es:[edi],dx
  4033f8:	cmp    DWORD PTR [edx-0x6b9fceb2],ebx
  4033fe:	pusha  
  4033ff:	or     DWORD PTR [eax-0x1eb00641],eax
  403405:	sub    DWORD PTR [esp+ebp*4],esi
  403408:	sub    al,0xb6
  40340a:	mov    DWORD PTR [esi+0x4e78f55b],ebp
  403410:	push   ecx
  403411:	push   ecx
  403412:	stos   BYTE PTR es:[edi],al
  403413:	sbb    bl,BYTE PTR [ebx]
  403415:	mov    bl,BYTE PTR [edx+0x4d82a8ee]
  40341b:	sar    bl,cl
  40341d:	pop    esp
  40341e:	push   esp
  40341f:	xlat   BYTE PTR ds:[ebx]
  403420:	jp     0x4034a0
  403422:	pop    ebx
  403423:	or     eax,0xa9bd2a8c
  403428:	dec    ebx
  403429:	in     al,0x22
  40342b:	stc    
  40342c:	jle    0x4033e7
  40342e:	fdivr  st(2),st
  403430:	test   bh,ah
  403432:	out    dx,eax
  403433:	cdq    
  403434:	push   0x5a
  403436:	in     eax,dx
  403437:	pushf  
  403438:	xchg   BYTE PTR [edi+ebp*1-0x5ebdde7d],dl
  40343f:	xor    bl,ah
  403441:	push   ds
  403442:	pop    esp
  403443:	dec    ebx
  403444:	sti    
  403445:	inc    eax
  403446:	rol    BYTE PTR [ebp+edx*1+0x6970bf9e],1
  40344d:	push   ecx
  40344e:	les    edx,FWORD PTR [ebp-0x60f473b2]
  403454:	xor    eax,0x46931736
  403459:	cmp    eax,0xd63c3acd
  40345e:	jbe    0x403465
  403460:	sar    BYTE PTR [edi],0x66
  403463:	out    0xa0,al
  403465:	and    DWORD PTR [edx],esp
  403467:	sahf   
  403468:	popa   
  403469:	mov    eax,ds:0x919bca7d
  40346e:	retf   
  40346f:	adc    al,0x76
  403471:	mov    ds:0xfcf265ec,eax
  403476:	ss pop ss
  403478:	cdq    
  403479:	push   edi
  40347a:	inc    ebp
  40347b:	(bad)  
  40347c:	pushf  
  40347d:	jmp    0x40347f
  40347f:	pop    es
  403480:	jne    0x40347e
  403482:	mov    cl,0xdd
  403484:	lds    esi,FWORD PTR [edi-0x7f]
  403487:	push   ss
  403488:	jmp    0xd064f752
  40348d:	imul   DWORD PTR [eax]
  40348f:	jle    0x4034a5
  403491:	push   ebx
  403492:	(bad)  
  403493:	mov    esp,0x56e04d6
  403498:	dec    ebx
  403499:	mov    edx,0x22f466c
  40349e:	sti    
  40349f:	les    eax,FWORD PTR [ecx-0x39]
  4034a2:	xor    DWORD PTR [eax-0x4a3b82fa],esp
  4034a8:	loope  0x40346e
  4034aa:	add    DWORD PTR [edi-0x771b2b87],eax
  4034b0:	pop    ds
  4034b1:	nop
  4034b2:	jmp    0xc243:0x7a86c6c3
  4034b9:	mov    ah,0x4
  4034bb:	ret    
  4034bc:	dec    ecx
  4034bd:	and    dl,0xd9
  4034c0:	and    BYTE PTR [esi+0x42da467a],bh
  4034c6:	cld    
  4034c7:	(bad)
  4034cb:	aam    0x5
  4034cd:	loop   0x403548
  4034cf:	mov    al,ds:0x3617f33
  4034d4:	scas   eax,DWORD PTR es:[edi]
  4034d5:	aas    
  4034d6:	stos   BYTE PTR es:[edi],al
  4034d7:	xchg   edx,eax
  4034d8:	out    dx,eax
  4034d9:	test   al,0x98
  4034db:	mov    eax,ds:0x462d751a
  4034e0:	lods   al,BYTE PTR ds:[esi]
  4034e1:	stos   BYTE PTR es:[edi],al
  4034e2:	les    ebx,FWORD PTR [eax+edx*8+0x63]
  4034e6:	sub    eax,0xda93529b
  4034eb:	push   0xbfd61674
  4034f0:	in     al,dx
  4034f1:	aam    0x32
  4034f3:	out    dx,al
  4034f4:	mov    BYTE PTR [edx+0x50],dl
  4034f7:	mov    esi,0xee028e2
  4034fc:	stc    
  4034fd:	add    BYTE PTR [eax],dl
  4034ff:	lahf   
  403500:	repnz cmp eax,DWORD PTR [di-0x54]
  403505:	jno    0x4034b4
  403507:	fcomp  DWORD PTR [ebx+0x4d]
  40350a:	sti    
  40350b:	lods   al,BYTE PTR ds:[esi]
  40350c:	jb     0x40351b
  40350e:	jmp    0xd45a26d0
  403513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403514:	sbb    dl,BYTE PTR [ebx]
  403516:	mov    dh,0xe5
  403518:	push   edi
  403519:	xchg   ebx,eax
  40351a:	(bad)  [edx-0x3bfbd9be]
  403520:	lods   eax,DWORD PTR ds:[esi]
  403521:	xchg   esp,eax
  403522:	fsubr  QWORD PTR [ebx+0x20]
  403525:	xchg   esi,eax
  403526:	pop    esi
  403527:	std    
  403528:	dec    DWORD PTR [esi+0x1383da30]
  40352e:	lods   al,BYTE PTR ds:[esi]
  40352f:	aas    
  403530:	test   eax,0x8f7cb2b5
  403535:	jbe    0x40354d
  403537:	shr    dl,1
  403539:	mov    eax,0xc3d039a7
  40353e:	or     DWORD PTR [ecx],0xffffffe1
  403541:	outs   dx,BYTE PTR ds:[esi]
  403542:	arpl   WORD PTR [edi-0x23122887],di
  403548:	xchg   ebx,eax
  403549:	or     BYTE PTR [ebx+0x56],ah
  40354c:	(bad)  
  40354e:	lea    edx,[eax+0x26514477]
  403554:	mov    DWORD PTR [edi+eiz*4-0xec77af4],esi
  40355b:	adc    BYTE PTR [ebx-0x53],dl
  40355e:	and    BYTE PTR [edi],ah
  403560:	push   0xffffff8b
  403562:	xchg   edi,eax
  403563:	ror    DWORD PTR [ecx],1
  403565:	cmp    bl,BYTE PTR [esp+edi*8+0x27]
  403569:	cwde   
  40356a:	xlat   BYTE PTR ds:[ebx]
  40356b:	xlat   BYTE PTR ds:[ebx]
  40356c:	mov    ?,WORD PTR [edx-0x2e]
  40356f:	sub    BYTE PTR [edi-0x731bec60],ah
  403575:	loopne 0x40351d
  403577:	retf   
  403578:	inc    ebx
  403579:	ins    BYTE PTR es:[edi],dx
  40357a:	xchg   esi,eax
  40357b:	out    dx,eax
  40357c:	dec    ebp
  40357d:	mov    esp,0x3851b2cd
  403582:	mov    ds:0xcf26f96b,eax
  403587:	(bad)  
  403589:	cmp    bh,BYTE PTR [ebp+0x1b]
  40358c:	ret    
  40358d:	out    0xb5,eax
  40358f:	pop    ds
  403590:	fst    DWORD PTR [esi+0x70]
  403593:	mov    fs,ebx
  403595:	mov    ds:0xb368a768,eax
  40359a:	jnp    0x13f2d38a
  4035a0:	shl    BYTE PTR [ebx-0x4c],cl
  4035a3:	ret    0x3442
  4035a6:	rcr    ecx,0xf6
  4035a9:	scas   eax,DWORD PTR es:[edi]
  4035aa:	inc    edx
  4035ab:	loope  0x40360e
  4035ad:	sub    edi,DWORD PTR [esi+0x41429fc5]
  4035b3:	mov    esi,0xc7da0d63
  4035b8:	inc    edi
  4035b9:	push   eax
  4035ba:	(bad)  
  4035bb:	mov    eax,ds:0xea8dd683
  4035c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035c1:	cwde   
  4035c2:	test   DWORD PTR [ecx+0x4f],esi
  4035c5:	and    BYTE PTR [eax+eax*2-0x72],al
  4035c9:	out    dx,eax
  4035ca:	jg     0x403556
  4035cc:	and    BYTE PTR [edx-0x49641d0a],al
  4035d2:	(bad)  
  4035d3:	mov    dl,0xb9
  4035d5:	xchg   esp,eax
  4035d6:	mov    esi,0x3af9fcc6
  4035db:	pushf  
  4035dc:	(bad)  
  4035dd:	cmp    bl,bl
  4035df:	mov    esi,gs
  4035e1:	not    DWORD PTR [ecx]
  4035e3:	sbb    BYTE PTR [eax],ah
  4035e5:	sbb    eax,0x9936be16
  4035ea:	push   esi
  4035eb:	fimul  DWORD PTR [ecx]
  4035ed:	js     0x4035e1
  4035ef:	in     al,0x9
  4035f1:	js     0x40362c
  4035f3:	jp     0x403602
  4035f5:	mov    edx,DWORD PTR [ecx+0x4dcfb903]
  4035fb:	and    eax,0xc3675ce1
  403600:	add    esp,DWORD PTR [eax+0x16093237]
  403606:	stos   DWORD PTR es:[edi],eax
  403607:	push   esi
  403608:	push   edx
  403609:	or     esp,DWORD PTR [ebx+0x53fb31a1]
  40360f:	sub    eax,0xec7196c7
  403614:	(bad)  
  403615:	fnsave [edx-0x7b]
  403618:	(bad)  
  403619:	push   ecx
  40361a:	dec    edi
  40361b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40361c:	mov    al,ds:0xcc094bbc
  403621:	ret    0x486e
  403624:	outs   dx,DWORD PTR ds:[esi]
  403625:	jmp    0x4035ac
  403627:	das    
  403628:	in     eax,dx
  403629:	jg     0x403625
  40362b:	aam    0xc3
  40362d:	loop   0x40362a
  40362f:	jae    0x403626
  403631:	test   al,0xa3
  403633:	jle    0x40366d
  403635:	adc    BYTE PTR [edx+0x70],al
  403638:	sub    dl,BYTE PTR [ebx]
  40363a:	dec    eax
  40363b:	jge    0x4035f1
  40363d:	mov    ebp,0x19c16ec6
  403642:	inc    eax
  403643:	aas    
  403644:	fwait
  403645:	jns    0x4035e3
  403647:	add    esi,DWORD PTR [eax]
  403649:	daa    
  40364a:	out    0x9a,eax
  40364c:	ds arpl si,di
  40364f:	mov    eax,ebx
  403651:	pop    ss
  403652:	fsub   DWORD PTR [edx+edx*1-0x6b]
  403656:	dec    edi
  403657:	mov    al,BYTE PTR [eax]
  403659:	mov    cl,0x84
  40365b:	loope  0x403646
  40365d:	mov    WORD PTR [eax],es
  40365f:	popf   
  403660:	xchg   ebp,eax
  403661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403662:	sbb    eax,DWORD PTR [eax]
  403664:	test   DWORD PTR [eax],ebx
  403666:	mov    ebp,0x98d1006e
  40366b:	dec    esp
  40366c:	pop    ss
  40366d:	outs   dx,DWORD PTR ds:[esi]
  40366e:	out    dx,al
  40366f:	loop   0x403619
  403671:	pop    ebx
  403672:	retf   0xae41
  403675:	jns    0x4035fa
  403677:	mov    esp,0xaa1db61d
  40367c:	xlat   BYTE PTR ds:[ebx]
  40367d:	push   ecx
  40367e:	aas    
  40367f:	xchg   ch,al
  403681:	push   0x727cd040
  403686:	nop
  403687:	push   0x5c
  403689:	xchg   edi,eax
  40368a:	cmp    al,0xe6
  40368c:	fsubrp st(7),st
  40368e:	sti    
  40368f:	xor    BYTE PTR [ebp+0x5f],0x56
  403693:	stc    
  403694:	push   0x39
  403696:	int    0x4d
  403698:	xrelease xchg DWORD PTR ds:0x383a70d8,ebx
  40369f:	mov    BYTE PTR [esi],cl
  4036a1:	mov    ebx,0xf2990332
  4036a6:	and    edx,edx
  4036a8:	sbb    al,0xe9
  4036aa:	jnp    0x403655
  4036ac:	lahf   
  4036ad:	jge    0x403678
  4036af:	pop    ds
  4036b0:	loope  0x4036a6
  4036b2:	imul   esp,DWORD PTR [ebx-0x60eaf856],0x9
  4036b9:	adc    eax,0xcf53cc3f
  4036be:	add    BYTE PTR [ecx+0x3c],bl
  4036c1:	ins    DWORD PTR es:[edi],dx
  4036c2:	push   ss
  4036c3:	mov    ah,0x8
  4036c5:	or     DWORD PTR [esi],0xf
  4036c8:	sbb    cl,dl
  4036ca:	xchg   esi,eax
  4036cb:	cmp    DWORD PTR [esi-0x12],0xffffff9f
  4036cf:	mov    BYTE PTR [ebp+0x355e0969],bh
  4036d5:	or     al,BYTE PTR [ecx]
  4036d7:	xchg   esp,eax
  4036d8:	(bad)  
  4036d9:	mov    ?,WORD PTR [ecx+edi*1-0x55bf17ab]
  4036e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036e1:	ror    DWORD PTR [ecx-0x77],0x51
  4036e5:	pop    ecx
  4036e6:	cwde   
  4036e7:	push   cs
  4036e8:	loope  0x4036c1
  4036ea:	add    eax,0xc1cc782d
  4036ef:	or     edx,0x1b
  4036f2:	arpl   WORD PTR [ebp-0x746aefe8],si
  4036f8:	add    ebx,esp
  4036fa:	jle    0x4036b9
  4036fc:	mov    ah,0xcf
  4036fe:	imul   eax,DWORD PTR [eax+ecx*8-0x3afb23c7],0x62
  403706:	cs pop edx
  403708:	dec    edx
  403709:	mov    DWORD PTR [ebx+0x2e],esi
  40370c:	jb     0x4036e4
  40370e:	inc    esp
  40370f:	push   esp
  403710:	fnstsw WORD PTR [edi]
  403712:	jbe    0x4036a0
  403714:	jbe    0x403769
  403716:	adc    eax,0x1fdfa182
  40371b:	sub    al,0x73
  40371d:	(bad)  
  40371e:	mov    edi,0xf47fa724
  403723:	xor    bl,bh
  403725:	jmp    0x403773
  403727:	cmp    BYTE PTR [ebp+0x1605c6ab],cl
  40372d:	pop    edi
  40372e:	into   
  40372f:	pop    ss
  403730:	ins    DWORD PTR es:[edi],dx
  403731:	js     0x4036d2
  403733:	push   edx
  403734:	pop    ss
  403735:	push   ebp
  403736:	dec    ebx
  403737:	in     eax,0x1d
  403739:	out    dx,eax
  40373a:	repnz push esp
  40373c:	jmp    0x3bf0:0xcad80391
  403743:	cdq    
  403744:	idiv   BYTE PTR ds:0x37bbdfdc
  40374a:	push   cs
  40374b:	xchg   esi,eax
  40374c:	mov    edx,0x93007be6
  403751:	or     edx,esp
  403753:	and    DWORD PTR [esi+edi*1],ebp
  403756:	ins    DWORD PTR es:[edi],dx
  403757:	loope  0x403722
  403759:	adc    al,0x44
  40375b:	xor    BYTE PTR [ebp+0x6aa7f902],ch
  403761:	scas   eax,DWORD PTR es:[edi]
  403762:	ds jle 0x4037ca
  403765:	mov    WORD PTR [edi-0x5a96c032],?
  40376b:	sub    al,0xe2
  40376d:	scas   al,BYTE PTR es:[edi]
  40376e:	lds    ebx,FWORD PTR [edi]
  403770:	enter  0x492a,0xaa
  403774:	dec    edx
  403775:	adc    ecx,ebp
  403777:	push   es
  403778:	dec    esi
  403779:	xchg   esi,eax
  40377a:	in     eax,0xc7
  40377c:	test   DWORD PTR [esi-0x5abda88f],eax
  403782:	loopne 0x403788
  403784:	adc    DWORD PTR [edi],ebx
  403786:	inc    DWORD PTR ds:0x48db8e32
  40378c:	mov    edx,0x59b3af20
  403791:	jg     0x40375c
  403793:	or     edx,DWORD PTR cs:0x158d0ec1
  40379a:	scas   al,BYTE PTR es:[edi]
  40379b:	jae    0x403792
  40379d:	mov    ds:0x36298327,al
  4037a2:	xor    ch,BYTE PTR [esi+0x2c]
  4037a5:	(bad)  
  4037a6:	pushf  
  4037a7:	out    0xe0,al
  4037a9:	in     eax,0xe0
  4037ab:	cld    
  4037ac:	push   ecx
  4037ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ae:	(bad)  [ebx-0x4f]
  4037b1:	ret    0x37f6
  4037b4:	push   eax
  4037b5:	xchg   edx,eax
  4037b6:	jmp    0x1683:0x248c5b90
  4037bd:	cmp    DWORD PTR [eax+eax*2],esi
  4037c0:	es in  al,dx
  4037c2:	jmp    0x40376f
  4037c4:	dec    DWORD PTR [edi-0x6316a1cd]
  4037ca:	sbb    edi,DWORD PTR [eax+ebp*8]
  4037cd:	jno    0x403785
  4037cf:	je     0x40382c
  4037d1:	pop    ss
  4037d2:	or     BYTE PTR [ecx+0x6742f812],ch
  4037d8:	jnp    0x4037ed
  4037da:	xor    ebx,edx
  4037dc:	jl     0x403767
  4037de:	out    0x60,al
  4037e0:	scas   eax,DWORD PTR es:[edi]
  4037e1:	loope  0x40383f
  4037e3:	aaa    
  4037e4:	in     eax,dx
  4037e5:	shl    DWORD PTR [ecx+0x64ae3288],1
  4037eb:	pop    edx
  4037ec:	mov    bh,0x56
  4037ee:	mov    eax,0x4ece27b2
  4037f3:	es push esi
  4037f5:	jbe    0x40378d
  4037f7:	sbb    BYTE PTR [ebp-0x22318795],dh
  4037fd:	fidivr DWORD PTR [ebx-0x216573f]
  403803:	dec    ebx
  403804:	cmp    eax,0xb21fcf5c
  403809:	rcl    BYTE PTR [eax],0x26
  40380c:	mov    edx,DWORD PTR ds:0x832453c8
  403812:	xor    ebp,DWORD PTR [ebx-0x62]
  403815:	cmp    DWORD PTR [eax+eax*2+0xa],ebp
  403819:	mov    al,0x77
  40381b:	sub    ebx,DWORD PTR [esi+0x6]
  40381e:	mov    dh,0xfa
  403820:	mov    ecx,cr6
  403823:	adc    al,0x1b
  403825:	mov    ch,BYTE PTR [ebx]
  403827:	adc    eax,0xadb27f60
  40382c:	jno    0x403847
  40382e:	jle    0x4037fd
  403830:	aad    0x1e
  403832:	stc    
  403833:	aad    0x7c
  403835:	pop    esi
  403836:	pop    eax
  403837:	pop    es
  403838:	ret    
  403839:	fimul  WORD PTR [ebx]
  40383b:	fs dec ebx
  40383d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40383e:	adc    al,0xc9
  403840:	lds    ecx,FWORD PTR ds:0xb7f0b503
  403846:	xchg   ebx,eax
  403847:	hlt    
  403848:	ret    0x77e9
  40384b:	jae    0x4038b1
  40384d:	jnp    0x4038cc
  40384f:	pop    ebp
  403850:	inc    eax
  403851:	cwde   
  403852:	mov    ebp,0x6f36eda3
  403857:	loope  0x403869
  403859:	sti    
  40385a:	sbb    al,bl
  40385c:	test   DWORD PTR [edi-0x4d],eax
  40385f:	popa   
  403860:	repnz inc ecx
  403862:	jg     0x4037ee
  403864:	loopne 0x4037ed
  403866:	mov    ebp,0xfa8a23b2
  40386b:	ret    
  40386c:	in     eax,dx
  40386d:	mov    eax,ds:0x7e986a5f
  403872:	adc    edi,ebx
  403874:	es jl  0x403813
  403877:	test   eax,0x644f3e82
  40387c:	fwait
  40387d:	jbe    0x403859
  40387f:	fldenv [edx]
  403881:	gs jnp 0x403871
  403884:	adc    BYTE PTR ds:0x92b26e57,ch
  40388a:	pop    esp
  40388b:	div    DWORD PTR [esp+ebx*2+0x1dc69c7c]
  403892:	mov    bl,0xb8
  403894:	mul    BYTE PTR [edx+esi*2-0x56]
  403898:	mov    edi,0xed2f8a
  40389d:	(bad)
  4038a0:	xor    esp,DWORD PTR [edx-0x35745dd]
  4038a6:	add    BYTE PTR [edi+0x5c947b96],ch
  4038ac:	mov    gs,ebp
  4038ae:	jp     0x40391f
  4038b0:	je     0x4038a7
  4038b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038b3:	inc    ebx
  4038b4:	(bad)  
  4038b5:	xchg   edx,eax
  4038b6:	arpl   dx,di
  4038b8:	jne    0x4038a1
  4038ba:	add    BYTE PTR [ebx],ch
  4038bc:	and    ch,dl
  4038be:	mov    ecx,0xdf1b7ae
  4038c3:	cs stc 
  4038c5:	sub    BYTE PTR [esi],bh
  4038c7:	std    
  4038c8:	dec    esi
  4038c9:	cmovp  ebp,DWORD PTR [eax+ebp*2-0x15eaca6]
  4038d1:	and    edx,DWORD PTR [ebx]
  4038d3:	sbb    DWORD PTR [eax+edx*4-0x52],0x31
  4038d8:	(bad)  
  4038d9:	mov    esi,0xb8daaec2
  4038de:	cdq    
  4038df:	add    al,0x44
  4038e1:	push   0x7a
  4038e3:	aad    0x7d
  4038e5:	jge    0x403869
  4038e7:	pop    ebp
  4038e8:	(bad)  
  4038e9:	mov    eax,0xf697e17d
  4038ee:	add    al,0x26
  4038f0:	add    ecx,DWORD PTR [esi+0x50]
  4038f3:	pop    ss
  4038f4:	js     0x4038b2
  4038f6:	or     ebx,DWORD PTR [ebx+0x37129008]
  4038fc:	pusha  
  4038fd:	fxch   st(2)
  4038ff:	xor    BYTE PTR [esi],al
  403901:	ret    
  403902:	xlat   BYTE PTR ds:[ebx]
  403903:	fnstenv [ecx-0x5fba2705]
  403909:	pop    eax
  40390a:	push   ds
  40390b:	add    al,0xdb
  40390d:	mov    al,ds:0xfd554b9a
  403912:	jno    0x403895
  403914:	into   
  403915:	in     al,0xbe
  403917:	in     al,0xf0
  403919:	xor    al,0x78
  40391b:	mov    al,0xea
  40391d:	cmc    
  40391e:	call   0x14e8:0xdc2d9d4
  403925:	push   es
  403926:	nop
  403927:	mov    ds:0xaa0a540b,eax
  40392c:	jecxz  0x4039a6
  40392e:	push   ebx
  40392f:	xchg   ebx,eax
  403930:	jge    0x403977
  403932:	xchg   ebp,eax
  403933:	xor    DWORD PTR [esi+0x58],edx
  403936:	mov    bl,0x7f
  403938:	add    cl,BYTE PTR [edi-0x46]
  40393b:	inc    ebx
  40393c:	out    dx,al
  40393d:	pop    ds
  40393e:	xor    al,0xdc
  403940:	(bad)  
  403942:	scas   eax,DWORD PTR es:[edi]
  403943:	adc    eax,0xb20e68fa
  403948:	xchg   ebp,eax
  403949:	jmp    0xc28507c7
  40394e:	adc    BYTE PTR [ebp-0x32],0x8c
  403952:	fwait
  403953:	lods   eax,DWORD PTR ds:[esi]
  403954:	add    DWORD PTR [ebx],edx
  403956:	fild   DWORD PTR [ebx+0x70]
  403959:	add    DWORD PTR [eax+edi*2],ecx
  40395c:	mov    cl,0x39
  40395e:	mul    DWORD PTR [edx+0x20f7c0b1]
  403964:	shl    BYTE PTR [edi],cl
  403966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403967:	or     DWORD PTR [ecx+ebx*2-0x49],ebp
  40396b:	(bad)  
  40396c:	scas   al,BYTE PTR es:[edi]
  40396d:	adc    eax,0xafa9a9b8
  403972:	out    dx,eax
  403973:	mov    ds:0xfa495cce,eax
  403978:	jmp    0xce6b:0x307252c2
  40397f:	fcom   QWORD PTR [ecx]
  403981:	aam    0x22
  403983:	sbb    al,0x54
  403985:	inc    ecx
  403986:	xchg   edx,eax
  403987:	mov    ebx,0x519e4a6b
  40398c:	adc    bl,BYTE PTR [ecx-0x3a2cd907]
  403992:	lods   al,BYTE PTR ds:[esi]
  403993:	push   esp
  403994:	in     al,dx
  403995:	rol    BYTE PTR [edx-0x1d989ed2],1
  40399b:	mov    ch,cl
  40399d:	jg     0x4039be
  40399f:	ret    
  4039a0:	ret    0x5577
  4039a3:	and    DWORD PTR [esi-0x6723f549],edx
  4039a9:	std    
  4039aa:	dec    eax
  4039ab:	(bad)  
  4039ac:	rcl    BYTE PTR [esi],cl
  4039ae:	fld    TBYTE PTR [eax+0x308ba26a]
  4039b4:	jl     0x40397b
  4039b6:	ins    BYTE PTR es:[edi],dx
  4039b7:	mov    esi,0xc43a6661
  4039bc:	mov    dh,0xb8
  4039be:	call   FWORD PTR [ebp-0x57]
  4039c1:	push   eax
  4039c2:	xor    bh,BYTE PTR [edx+0x5c19fb4c]
  4039c8:	rcl    al,cl
  4039ca:	mul    DWORD PTR [esi-0x452c7a02]
  4039d0:	sub    eax,0x662136a4
  4039d5:	cs xor al,0xb1
  4039d8:	ins    DWORD PTR es:[edi],dx
  4039d9:	add    edi,edi
  4039db:	dec    ebx
  4039dc:	or     DWORD PTR [ebx-0x67],edx
  4039df:	sub    al,0xb
  4039e1:	xor    ecx,esp
  4039e3:	adc    BYTE PTR [ebp+0x6219f9a9],dh
  4039e9:	or     DWORD PTR [esi+0x252684ca],ebp
  4039ef:	jmp    0x40399a
  4039f1:	jecxz  0x403a31
  4039f3:	ret    
  4039f4:	mov    dl,0x4e
  4039f6:	or     BYTE PTR [ecx+0x6a],0x98
  4039fa:	xor    eax,0x899ba811
  4039ff:	adc    al,0x63
  403a01:	mov    edi,0x19d77dcc
  403a06:	lods   eax,DWORD PTR ds:[esi]
  403a07:	or     al,0x1a
  403a09:	call   0x7521dbc0
  403a0e:	mov    eax,cs:0xf7533dd2
  403a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a15:	outs   dx,BYTE PTR ds:[esi]
  403a16:	test   DWORD PTR [esi+0x2a],ecx
  403a19:	adc    DWORD PTR [eax-0xf],edx
  403a1c:	and    edi,esp
  403a1e:	sbb    al,0xd4
  403a20:	mov    ds:0x716bee9a,eax
  403a25:	popa   
  403a26:	imul   BYTE PTR [edi-0xc]
  403a29:	fdivp  st(7),st
  403a2b:	mov    ds:0xc7f6d040,eax
  403a30:	fldpi  
  403a32:	pop    esp
  403a33:	retf   0x6351
  403a36:	ret    
  403a37:	not    dh
  403a39:	mov    edi,0xa2eca83f
  403a3e:	clc    
  403a3f:	adc    eax,esp
  403a41:	mov    al,0x84
  403a43:	pop    ebx
  403a44:	ret    
  403a45:	repz adc BYTE PTR ds:[ecx+0xc3644d8],ah
  403a4d:	in     eax,0xc9
  403a4f:	inc    edi
  403a50:	sbb    BYTE PTR [ebx+0x358fc78c],0x78
  403a57:	stos   DWORD PTR es:[edi],eax
  403a58:	enter  0x3a1,0xb2
  403a5c:	xchg   esp,eax
  403a5d:	push   ecx
  403a5e:	pop    edx
  403a5f:	in     al,0x10
  403a61:	popw   es
  403a63:	jmp    0xfc5aadc3
  403a68:	ins    BYTE PTR es:[edi],dx
  403a69:	sbb    ecx,edi
  403a6b:	pop    ds
  403a6c:	mov    esi,ss
  403a6e:	adc    BYTE PTR [ecx],dl
  403a70:	pushf  
  403a71:	mov    ds:0xf02a4861,eax
  403a76:	sbb    edi,esi
  403a78:	pop    ebx
  403a79:	or     al,0x13
  403a7b:	out    dx,eax
  403a7c:	call   0x8016:0x6dcc5ff1
  403a83:	test   BYTE PTR [edi],cl
  403a85:	xor    eax,0xe593e6d1
  403a8a:	out    0xdf,eax
  403a8c:	aas    
  403a8d:	leave  
  403a8e:	shr    BYTE PTR [esp+ecx*8],cl
  403a91:	call   0xd573:0x6e053396
  403a98:	inc    edx
  403a99:	add    cl,BYTE PTR [eax+0x4df9ac49]
  403a9f:	ins    BYTE PTR es:[edi],dx
  403aa0:	jmp    0x6be282d7
  403aa5:	pop    esp
  403aa6:	outs   dx,DWORD PTR ds:[esi]
  403aa7:	or     al,0x13
  403aa9:	pop    esp
  403aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aab:	jns    0x403a56
  403aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aae:	add    DWORD PTR [esi],esi
  403ab0:	adc    BYTE PTR [eax+0x58485d7],bh
  403ab6:	jno    0x403a5a
  403ab8:	cmp    eax,0x63fa3b30
  403abd:	int3   
  403abe:	lea    eax,[edi]
  403ac0:	xor    edi,DWORD PTR [edi-0x62]
  403ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ac4:	push   esi
  403ac5:	je     0x403ad2
  403ac7:	mov    ebx,0xdc2f3f32
  403acc:	loopne 0x403a58
  403ace:	or     DWORD PTR ss:[edx-0x57ad139b],ebp
  403ad5:	loopne 0x403b16
  403ad7:	push   ebp
  403ad8:	addr16 mov dh,0x9b
  403adb:	ja     0x403b28
  403add:	add    BYTE PTR [edx-0x52],bl
  403ae0:	jle    0x403aa3
  403ae2:	mov    ah,0x1f
  403ae4:	ret    
  403ae5:	int3   
  403ae6:	push   ds
  403ae7:	pop    ebx
  403ae8:	stos   DWORD PTR es:[edi],eax
  403ae9:	stos   BYTE PTR es:[edi],al
  403aea:	mov    eax,0xfca9743f
  403aef:	xchg   DWORD PTR cs:[eax-0x63],ebx
  403af3:	dec    eax
  403af4:	scas   eax,DWORD PTR es:[edi]
  403af5:	or     eax,0x100ded6
  403afa:	jl     0x403b5c
  403afc:	or     al,0x78
  403afe:	xor    edi,DWORD PTR [eiz*1-0x187e5b43]
  403b05:	aaa    
  403b06:	fimul  DWORD PTR ds:0xad6cce78
  403b0c:	sbb    dh,BYTE PTR [ebx]
  403b0e:	add    al,0x9
  403b10:	and    BYTE PTR [ebx-0x1b],dl
  403b13:	out    dx,eax
  403b14:	dec    ecx
  403b15:	jnp    0x403b2a
  403b17:	popf   
  403b18:	add    BYTE PTR [edi-0x4c],cl
  403b1b:	leave  
  403b1c:	pop    ecx
  403b1d:	ja     0x403b1b
  403b1f:	imul   edi,edi,0xd64e8ad8
  403b25:	and    ch,BYTE PTR [ecx-0x76]
  403b28:	mov    eax,0x831677f6
  403b2d:	sbb    ebp,ebp
  403b2f:	and    al,0xb4
  403b31:	fdivr  DWORD PTR ds:[ebx]
  403b34:	mov    ah,0x67
  403b36:	xor    DWORD PTR [ecx+0x6732aa4b],eax
  403b3c:	xor    al,0x5e
  403b3e:	dec    eax
  403b3f:	inc    edi
  403b40:	xor    DWORD PTR [edi+0x7],ebx
  403b43:	outs   dx,BYTE PTR ds:[esi]
  403b44:	pushf  
  403b45:	xor    esp,DWORD PTR [esi]
  403b47:	dec    edi
  403b48:	into   
  403b49:	(bad)  
  403b4a:	(bad)  
  403b4b:	loopne 0x403b3d
  403b4d:	xchg   ebp,eax
  403b4e:	mul    DWORD PTR [ebx+0x101384bb]
  403b54:	mov    esi,0x3acf64cb
  403b59:	cwde   
  403b5a:	pop    esi
  403b5b:	jge    0x403aec
  403b5d:	test   eax,0x10d99e35
  403b62:	daa    
  403b63:	jmp    0xce5d:0x1ff8ab
  403b6a:	rcl    DWORD PTR [ecx+0xc],0x6a
  403b6e:	(bad)  
  403b6f:	hlt    
  403b70:	mov    bh,0x3d
  403b72:	cmc    
  403b73:	jmp    0x9606:0xe79d46dd
  403b7a:	lahf   
  403b7b:	and    DWORD PTR [esi-0xc6f15b6],eax
  403b81:	aas    
  403b82:	push   esi
  403b83:	lock dec ecx
  403b85:	test   al,0x7b
  403b87:	push   edx
  403b88:	mov    esp,DWORD PTR [edi+0x74cd874c]
  403b8e:	push   cs
  403b8f:	xchg   ecx,eax
  403b90:	arpl   sp,sp
  403b92:	test   BYTE PTR [esi+0x1a],cl
  403b95:	pop    ecx
  403b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b97:	mov    ds:0xabebad,eax
  403b9c:	inc    esp
  403b9d:	mov    al,ds:0x4f55f0e1
  403ba2:	sbb    DWORD PTR [ebp+0x5d],eax
  403ba5:	fsubr  QWORD PTR [ebx-0xdd15570]
  403bab:	inc    eax
  403bac:	jo     0x403bbd
  403bae:	(bad)  
  403baf:	pop    esi
  403bb0:	out    0x83,eax
  403bb2:	test   al,0x4
  403bb4:	xchg   edx,eax
  403bb5:	pop    ebp
  403bb6:	lock mov esp,0x6d4bfbe4
  403bbc:	xchg   ecx,eax
  403bbd:	enter  0xfe87,0x5b
  403bc1:	or     BYTE PTR [esi-0x2643c926],ch
  403bc7:	or     DWORD PTR [edx+0x102af461],ebx
  403bcd:	jo     0x403b5a
  403bcf:	outs   dx,BYTE PTR ds:[esi]
  403bd0:	jne    0x403be4
  403bd2:	fisub  DWORD PTR [esi-0x38]
  403bd5:	les    esi,FWORD PTR [ecx+0x50]
  403bd8:	loopne 0x403bb9
  403bda:	les    ebx,FWORD PTR [ebx]
  403bdc:	gs retf 0xd151
  403be0:	cmp    BYTE PTR [edi+0x55],0xcc
  403be4:	test   BYTE PTR [ebp+0x2d],0xb6
  403be8:	inc    esp
  403be9:	push   ds
  403bea:	cmp    DWORD PTR [edx+0x40],esi
  403bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bee:	pop    eax
  403bef:	sbb    DWORD PTR [ebx+ecx*1+0x76],ecx
  403bf3:	pushf  
  403bf4:	inc    edx
  403bf5:	mov    edx,0x6f1df6d7
  403bfa:	xor    BYTE PTR ds:0x50e7841c,0x83
  403c01:	push   0x9e6712dd
  403c06:	adc    ecx,DWORD PTR [edi+eiz*8]
  403c09:	in     eax,0x70
  403c0b:	mov    esi,0x72791de
  403c10:	and    dh,BYTE PTR [ebx]
  403c12:	(bad)  
  403c13:	shl    DWORD PTR [esi+0x5d7cdf11],cl
  403c19:	mov    al,ds:0xbc45c7e1
  403c1e:	mov    esp,0x8bf89c85
  403c23:	inc    ebp
  403c24:	enter  0x558b,0xec
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0xe3dd8915
  403dc4:	mov    BYTE PTR [ecx-0x1e],bh
  403dc7:	dec    ebx
  403dc8:	pop    esi
  403dc9:	add    DWORD PTR [ebx-0x7c7ca1b5],0x19
  403dd0:	sub    DWORD PTR [edx+0xd53dd9c],edi
  403dd6:	xchg   esp,eax
  403dd7:	jp     0x403dbc
  403dd9:	cli    
  403dda:	sti    
  403ddb:	pop    esp
  403ddc:	or     DWORD PTR [edx],edx
  403dde:	or     al,0x1b
  403de0:	dec    edx
  403de1:	mov    esi,0x167c3994
  403de6:	fs addr16 pop esp
  403de9:	mov    ebp,0x170bf266
  403dee:	xchg   edx,eax
  403def:	clc    
  403df0:	mov    dh,0xe
  403df2:	enter  0x5769,0xd2
  403df6:	jno    0x403da2
  403df8:	adc    dh,cl
  403dfa:	or     cl,ah
  403dfc:	jo     0x403def
  403dfe:	mov    es,eax
  403e00:	and    DWORD PTR [ecx+0x12],0x3f
  403e04:	rcl    edi,1
  403e06:	ss in  eax,dx
  403e08:	jg     0x403dbe
  403e0a:	xor    BYTE PTR [esi+eax*1-0x494c0463],0xc5
  403e12:	stos   BYTE PTR es:[edi],al
  403e13:	jmp    FWORD PTR [eax-0x4117a62f]
  403e19:	call   0xc81e:0x5591eac5
  403e20:	popa   
  403e21:	lods   eax,DWORD PTR ds:[esi]
  403e22:	mov    eax,0xc74b579f
  403e27:	xchg   ecx,eax
  403e28:	je     0x403e84
  403e2a:	cmp    ebx,DWORD PTR [esi]
  403e2c:	leave  
  403e2d:	inc    eax
  403e2e:	mov    BYTE PTR [ecx+ebp*1-0x45],bh
  403e32:	inc    ecx
  403e33:	mov    eax,DWORD PTR [esi-0xe]
  403e36:	dec    esi
  403e37:	or     DWORD PTR [eax],edx
  403e39:	xlat   BYTE PTR ds:[ebx]
  403e3a:	lock fld QWORD PTR [edx-0x23]
  403e3e:	mov    edx,0xe73630b2
  403e43:	inc    edx
  403e44:	test   DWORD PTR [ecx],esp
  403e46:	sub    eax,0xca4c9285
  403e4b:	jmp    0xc458:0x8b2fae8e
  403e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e53:	jns    0x403ebe
  403e55:	dec    edx
  403e56:	sbb    eax,0x8ad91eaf
  403e5b:	out    0xa9,eax
  403e5d:	jmp    0x403e76
  403e5f:	cmp    BYTE PTR [ebx*4-0x4d4f8424],ch
  403e66:	out    dx,al
  403e67:	in     eax,0x52
  403e69:	xchg   edi,eax
  403e6a:	adc    BYTE PTR [esi],bh
  403e6c:	cmp    ah,BYTE PTR [edi]
  403e6e:	mov    dh,0x39
  403e70:	push   ebp
  403e71:	push   0x2d
  403e73:	sub    BYTE PTR [ebp+0x5a],ch
  403e76:	push   es
  403e77:	mov    ?,WORD PTR [esi]
  403e79:	in     eax,dx
  403e7a:	dec    ebx
  403e7b:	jno    0x403eef
  403e7d:	dec    edi
  403e7e:	cmc    
  403e7f:	inc    edx
  403e80:	enter  0xf03a,0x33
  403e84:	and    al,BYTE PTR [esi+0xc]
  403e87:	mov    ebp,0xa38abae
  403e8c:	jp     0x403e6f
  403e8e:	pop    ebp
  403e8f:	cmp    esp,DWORD PTR [ecx-0x11204205]
  403e95:	inc    ecx
  403e96:	pop    ds
  403e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e98:	cmp    ch,bh
  403e9a:	xor    eax,0xdf34675e
  403e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea0:	xor    BYTE PTR [ebx],bh
  403ea2:	push   0xffffff9d
  403ea4:	inc    esi
  403ea5:	test   al,0x6f
  403ea7:	dec    edi
  403ea8:	pusha  
  403ea9:	daa    
  403eaa:	dec    ecx
  403eab:	idiv   BYTE PTR [edi+0x623ae483]
  403eb1:	push   ds
  403eb2:	jae    0x403f1e
  403eb4:	xchg   ecx,eax
  403eb5:	lock dec edi
  403eb7:	inc    esi
  403eb8:	cld    
  403eb9:	out    dx,eax
  403eba:	gs cwde 
  403ebc:	imul   ecx
  403ebe:	inc    edi
  403ebf:	pop    edi
  403ec0:	xlat   BYTE PTR ds:[ebx]
  403ec1:	push   edi
  403ec2:	push   edi
  403ec3:	mov    ah,dl
  403ec5:	daa    
  403ec6:	mov    ah,0x5f
  403ec8:	mov    dl,0xba
  403eca:	les    edx,FWORD PTR [ebp+0x542fc63c]
  403ed0:	cwde   
  403ed1:	jno    0x403f00
  403ed3:	in     al,dx
  403ed4:	jne    0x403e7f
  403ed6:	outs   dx,BYTE PTR ds:[esi]
  403ed7:	test   esi,ebx
  403ed9:	int    0xac
  403edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403edc:	mov    ds:0xe65b0b8a,al
  403ee1:	xor    eax,0xd0c7af02
  403ee6:	mov    esp,0xe86e6bd
  403eeb:	mov    edx,0x370706f8
  403ef0:	sbb    BYTE PTR [eax-0x50],bh
  403ef3:	and    dl,BYTE PTR [edx]
  403ef5:	popa   
  403ef6:	xchg   ebx,eax
  403ef7:	das    
  403ef8:	jl     0x403f41
  403efa:	imul   esi,DWORD PTR [eax],0xc4fad3fc
  403f00:	pop    ecx
  403f01:	sahf   
  403f02:	push   ebx
  403f03:	xlat   BYTE PTR ds:[ebx]
  403f04:	cmc    
  403f05:	mov    cs,WORD PTR [ebx-0x4c]
  403f08:	push   es
  403f09:	adc    eax,edx
  403f0b:	inc    ecx
  403f0c:	push   ecx
  403f0d:	push   edi
  403f0e:	repz jno 0x403f1b
  403f11:	jnp    0x403eeb
  403f13:	fild   QWORD PTR ds:0x594bb17e
  403f19:	mov    al,BYTE PTR [edx+0x2a]
  403f1c:	jb     0x403ee5
  403f1e:	and    DWORD PTR [ebp*2-0x531fd201],edx
  403f25:	in     al,0xfd
  403f27:	mov    esp,DWORD PTR [ecx-0x6a]
  403f2a:	jl     0x403ebe
  403f2c:	lods   al,BYTE PTR ds:[esi]
  403f2d:	iret   
  403f2e:	test   DWORD PTR [ecx-0x1e0956c],esi
  403f34:	adc    BYTE PTR [ecx+0x1f93abf4],0x42
  403f3b:	into   
  403f3c:	pop    es
  403f3d:	cmp    al,0x11
  403f3f:	mov    ch,0x5c
  403f41:	pop    ebx
  403f42:	ss popa 
  403f44:	jnp    0x403f8d
  403f46:	inc    eax
  403f47:	mov    esp,0x3db173b2
  403f4c:	lea    edx,[edx+0x5d]
  403f4f:	rol    BYTE PTR [edi-0x74],0xeb
  403f53:	and    cl,al
  403f55:	push   esi
  403f56:	pop    ecx
  403f57:	and    eax,0x43895391
  403f5c:	rol    DWORD PTR [edx+ebp*8+0x34],1
  403f60:	test   bh,al
  403f62:	mov    ebx,0x66eece3
  403f67:	push   0x21443f8c
  403f6c:	retf   0x2ea2
  403f6f:	call   0xd2275b83
  403f74:	stos   BYTE PTR es:[edi],al
  403f75:	mov    esi,0x719a019c
  403f7a:	cmp    ecx,DWORD PTR [eax-0x10]
  403f7d:	cdq    
  403f7e:	(bad)  
  403f7f:	and    DWORD PTR [esi],ebp
  403f81:	popa   
  403f82:	retf   
  403f83:	ss inc esp
  403f85:	lock test eax,0x5804a323
  403f8b:	or     BYTE PTR [ecx+edx*4],ch
  403f8e:	out    0xfa,eax
  403f90:	mov    cl,0x51
  403f92:	mov    dl,0xf3
  403f94:	call   0x4d6d439f
  403f99:	jns    0x403fce
  403f9b:	test   BYTE PTR [esi],0x3b
  403f9e:	mov    ebx,0xe7c1af17
  403fa3:	dec    edi
  403fa4:	push   eax
  403fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa6:	mov    dl,0x14
  403fa8:	fs leave 
  403faa:	retf   
  403fab:	adc    eax,0xc1be0926
  403fb0:	fmul   DWORD PTR [edi]
  403fb2:	scas   al,BYTE PTR es:[edi]
  403fb3:	adc    bl,BYTE PTR [eax]
  403fb5:	loopne 0x404013
  403fb7:	in     eax,dx
  403fb8:	out    0xab,eax
  403fba:	push   ss
  403fbb:	in     eax,dx
  403fbc:	inc    ecx
  403fbd:	int    0x0
  403fbf:	sbb    al,0x15
  403fc1:	test   cl,0x79
  403fc4:	je     0x404000
  403fc6:	mov    edx,0x5a4d02c0
  403fcb:	xor    DWORD PTR [ebx+0x462ed84a],eax
  403fd1:	jl     0x40401d
  403fd3:	lock push ss
  403fd5:	dec    ebp
  403fd6:	ret    0xa71b
  403fd9:	or     ch,BYTE PTR [ebx]
  403fdb:	clc    
  403fdc:	inc    edx
  403fdd:	sub    ecx,0xffffffa9
  403fe0:	(bad)  
  403fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fe2:	adc    ah,BYTE PTR [eax]
  403fe4:	or     DWORD PTR ds:[esp+edi*1+0xfa52f3c],edi
  403fec:	lods   eax,DWORD PTR ds:[esi]
  403fed:	cs leave 
  403fef:	lods   al,BYTE PTR ds:[esi]
  403ff0:	dec    ebx
  403ff1:	shr    al,cl
  403ff3:	add    eax,edx
  403ff5:	sbb    BYTE PTR [edx],0x27
  403ff8:	fwait
  403ff9:	dec    ebx
  403ffa:	sub    BYTE PTR [esi],ah
  403ffc:	jo     0x403fe2
  403ffe:	ficom  DWORD PTR [ebx]
  404000:	aaa    
  404001:	stc    
  404002:	test   BYTE PTR [ecx+0x52],ah
  404005:	mov    esi,0xc1ae0b9b
  40400a:	xchg   esi,eax
  40400b:	ins    BYTE PTR es:[edi],dx
  40400c:	add    eax,0x99b6d00b
  404011:	fwait
  404012:	xchg   DWORD PTR [eax-0x5bc25b8e],esi
  404018:	push   es
  404019:	sti    
  40401a:	cs retf 0x18f7
  40401e:	xor    DWORD PTR [eax+0x723cf5ce],edi
  404024:	add    ah,cl
  404026:	inc    ebx
  404027:	call   0x34437d31
  40402c:	jmp    0x5d24ea49
  404031:	xchg   ecx,eax
  404032:	test   DWORD PTR [eax],0x97afdb7
  404038:	inc    ebp
  404039:	push   edx
  40403a:	fldenv [edi-0x57dc1304]
  404040:	jae    0x40403b
  404042:	rcl    DWORD PTR [ecx],0xcb
  404045:	sahf   
  404046:	adc    esp,ecx
  404048:	mov    ebx,0xa95613b9
  40404d:	xlat   BYTE PTR ds:[ebx]
  40404e:	(bad)  
  40404f:	(bad)  
  404051:	stos   BYTE PTR es:[edi],al
  404052:	loopne 0x4040b2
  404054:	je     0x403fe8
  404056:	retf   
  404057:	pop    ss
  404058:	inc    ecx
  404059:	pop    ebp
  40405a:	xlat   BYTE PTR ds:[ebx]
  40405b:	inc    edi
  40405c:	mov    ds:0xbfe61fb8,al
  404061:	(bad)  [esi+edi*2]
  404064:	ins    DWORD PTR es:[edi],dx
  404065:	xchg   esp,eax
  404066:	test   al,0xfb
  404068:	out    0xdc,al
  40406a:	xchg   ebp,eax
  40406b:	adc    ah,0xde
  40406e:	pop    es
  40406f:	ins    DWORD PTR es:[edi],dx
  404070:	repnz mov edi,0x828ad74a
  404076:	mov    WORD PTR [ebx+0x27b48576],fs
  40407c:	mov    ebx,0xe21b680c
  404081:	dec    bx
  404083:	mov    WORD PTR [esi+edi*2],?
  404086:	retf   
  404087:	int3   
  404088:	xor    dh,ch
  40408a:	addr16 and eax,0xd93bf2d1
  404090:	(bad)  
  404092:	imul   edi,DWORD PTR [edx],0xffffff82
  404095:	out    0xf3,al
  404097:	das    
  404098:	and    dl,BYTE PTR [esi+0x4c10da5e]
  40409e:	retf   
  40409f:	and    BYTE PTR [edx+ebp*2+0x79],ah
  4040a3:	outs   dx,BYTE PTR ds:[esi]
  4040a4:	mov    ds:0x7a2a30bb,al
  4040a9:	cmp    BYTE PTR [edx+eax*8-0xe],dl
  4040ad:	cdq    
  4040ae:	(bad)  
  4040af:	jmp    0x5fb7:0x23aeec11
  4040b6:	pop    edx
  4040b7:	xor    edx,0xbd9c5a87
  4040bd:	xor    BYTE PTR fs:[ecx+0x67882bfa],al
  4040c4:	leave  
  4040c5:	mov    ds:0xf4b6c99d,al
  4040ca:	iret   
  4040cb:	xor    bh,ch
  4040cd:	retf   0x53a6
  4040d0:	ss jne 0x4040a5
  4040d3:	pop    esp
  4040d4:	test   al,0xc2
  4040d6:	or     DWORD PTR [eax+0x74aeb7b5],edi
  4040dc:	gs or  dl,0x98
  4040e0:	ja     0x404151
  4040e2:	pop    edx
  4040e3:	dec    edi
  4040e4:	add    ch,BYTE PTR [esp+ecx*4+0x44d4fe2e]
  4040eb:	mov    BYTE PTR [ecx],cl
  4040ed:	hlt    
  4040ee:	outs   dx,BYTE PTR ds:[esi]
  4040ef:	sub    BYTE PTR [edx+0x1],ah
  4040f2:	les    ebp,FWORD PTR [edi-0x82b40a6]
  4040f8:	push   es
  4040f9:	dec    esp
  4040fa:	outs   dx,DWORD PTR ds:[esi]
  4040fb:	jbe    0x40408c
  4040fd:	jp     0x404121
  4040ff:	jbe    0x404096
  404101:	or     ecx,eax
  404103:	rcl    cl,cl
  404105:	in     eax,0x3e
  404107:	or     BYTE PTR [ebx+0x5c],cl
  40410a:	mov    BYTE PTR [esi+0x28],dl
  40410d:	or     al,cl
  40410f:	inc    esp
  404110:	add    DWORD PTR [ebx],ecx
  404112:	aad    0xd7
  404114:	stos   BYTE PTR es:[edi],al
  404115:	push   edi
  404116:	mov    bl,0x64
  404118:	pop    ebx
  404119:	pop    ecx
  40411a:	mov    dh,BYTE PTR [eax-0x2e14cd4b]
  404120:	repnz out 0xb4,al
  404123:	jmp    0x99ac38e9
  404128:	out    dx,eax
  404129:	in     al,dx
  40412a:	sub    bh,BYTE PTR [esi+0x5e8cfc5c]
  404130:	or     eax,0x4cff7a01
  404135:	and    dh,BYTE PTR [ebx+0x53d50222]
  40413b:	mov    gs,esi
  40413d:	and    BYTE PTR [eax],bh
  40413f:	call   0x35ce:0x62016bf
  404146:	pop    esi
  404147:	pop    edi
  404148:	cmp    ah,cl
  40414a:	adc    eax,0x768ce65d
  40414f:	inc    DWORD PTR [ebx-0x6b16d527]
  404155:	dec    edi
  404156:	sbb    ebp,DWORD PTR [ebp-0x431444a9]
  40415c:	push   ecx
  40415d:	mov    esp,0xb65ed71e
  404162:	nop
  404163:	cmp    DWORD PTR [eax+0x42],edx
  404166:	out    0x63,eax
  404168:	inc    edi
  404169:	jg     0x404138
  40416b:	mov    bl,0x20
  40416d:	dec    ebp
  40416e:	ins    DWORD PTR es:[edi],dx
  40416f:	adc    ebx,ebx
  404171:	cmp    ebx,esi
  404173:	adc    al,0x4c
  404175:	add    al,BYTE PTR [edi-0x2deb9f48]
  40417b:	xchg   BYTE PTR [ebp+ebx*8+0x38eb6962],bl
  404182:	or     edi,DWORD PTR [ebx+ebp*1]
  404185:	and    cl,BYTE PTR [edx+0x36]
  404188:	aaa    
  404189:	(bad)  
  40418a:	enter  0xad8f,0xdf
  40418e:	pop    ds
  40418f:	cmove  edx,ebx
  404192:	dec    BYTE PTR [ebp-0x161a4bbe]
  404198:	fisttp DWORD PTR [edi-0x22b14550]
  40419e:	adc    eax,DWORD PTR [edx-0x34]
  4041a1:	sub    bl,bl
  4041a3:	dec    ebx
  4041a4:	lods   eax,DWORD PTR ds:[esi]
  4041a5:	add    DWORD PTR [ecx],esp
  4041a7:	mov    ecx,0x2403d8a4
  4041ac:	enter  0xcb06,0xd
  4041b0:	hlt    
  4041b1:	pop    ecx
  4041b2:	fisub  WORD PTR [edx-0x54]
  4041b5:	bnd lock jne 0x4041c1
  4041b9:	add    ah,BYTE PTR [ebx+0x5b]
  4041bc:	sbb    eax,ebp
  4041be:	mov    ds:0xcbc20497,eax
  4041c3:	push   edx
  4041c4:	icebp  
  4041c5:	repnz (bad) 
  4041c7:	jmp    0xd64570e4
  4041cc:	xchg   esp,eax
  4041cd:	retf   0xbced
  4041d0:	adc    dl,bh
  4041d2:	mov    ebx,0x8a97b443
  4041d7:	(bad)  
  4041d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041d9:	fs jmp 0x40423d
  4041dc:	mov    eax,ds:0xfac8e229
  4041e1:	dec    ecx
  4041e2:	pushf  
  4041e3:	pop    esp
  4041e4:	ja     0x40419e
  4041e6:	inc    ebx
  4041e7:	xchg   esi,eax
  4041e8:	xchg   ecx,eax
  4041e9:	lds    esi,FWORD PTR [eax+ebx*8]
  4041ec:	inc    esi
  4041ed:	ret    
  4041ee:	(bad)  
  4041ef:	test   eax,0x33e2207d
  4041f4:	pop    edx
  4041f5:	call   0xf996:0xae7a7d94
  4041fc:	push   0x25
  4041fe:	popa   
  4041ff:	or     dh,dh
  404201:	adc    eax,0x56486c84
  404206:	xchg   edx,eax
  404207:	push   0xffffffe8
  404209:	loopne 0x404196
  40420b:	fisubr WORD PTR [eax+0x69]
  40420e:	ret    0x52ca
  404211:	or     BYTE PTR [edi-0x1c9fc509],cl
  404217:	test   BYTE PTR [eax],al
  404219:	push   cs
  40421a:	cmp    dl,BYTE PTR [ecx+ecx*8+0x465357d]
  404221:	stos   BYTE PTR es:[edi],al
  404222:	and    BYTE PTR [ecx-0x4a],0xb2
  404226:	push   edi
  404227:	jbe    0x4042a5
  404229:	jg     0x4041ec
  40422b:	fisttp DWORD PTR [ebp-0x26]
  40422e:	imul   ebx,DWORD PTR [edi],0x62d98afa
  404234:	mov    ds,WORD PTR [ecx-0x20e8adc5]
  40423a:	jno    0x40420a
  40423c:	in     eax,dx
  40423d:	xlat   BYTE PTR ds:[ebx]
  40423e:	inc    edi
  40423f:	mov    esi,0xc3ced4ab
  404244:	into   
  404245:	sbb    DWORD PTR [ebx-0x32],0xf890c998
  40424c:	daa    
  40424d:	inc    ebp
  40424e:	push   edi
  40424f:	mov    cl,0x95
  404251:	jns    0x40422f
  404253:	xor    eax,0xfca8fe28
  404258:	std    
  404259:	mov    ds:0xcc57787a,eax
  40425e:	or     ebp,eax
  404260:	fsubr  QWORD PTR [eax+0x7af5a866]
  404266:	add    ah,BYTE PTR [edx+0x49]
  404269:	add    DWORD PTR [esi+ebp*4-0x10],eax
  40426d:	popf   
  40426e:	(bad)  
  404270:	jne    0x40422d
  404272:	pop    eax
  404273:	xor    bh,BYTE PTR [ecx-0x2a]
  404276:	loop   0x4042e4
  404278:	bnd js 0x404205
  40427b:	shl    BYTE PTR [edi],0x9e
  40427e:	mov    ds:0xa36cbf8e,al
  404283:	retf   
  404284:	imul   esi,DWORD PTR [edi+0x4a],0xe7a8dad2
  40428b:	aam    0xe7
  40428d:	pop    edi
  40428e:	push   0x8
  404290:	cmp    DWORD PTR [esi],eax
  404292:	js     0x404308
  404294:	(bad)  
  404295:	hlt    
  404296:	aas    
  404297:	mov    esp,0x5593407e
  40429c:	lahf   
  40429d:	aaa    
  40429e:	sbb    BYTE PTR [ebp+0x34],dl
  4042a1:	in     eax,0x4e
  4042a3:	aad    0xb0
  4042a5:	xchg   eax,ebx
  4042a7:	jno    0x40430b
  4042a9:	push   ebx
  4042aa:	(bad)  
  4042ac:	cdq    
  4042ad:	cmp    al,dl
  4042af:	inc    esi
  4042b0:	in     eax,dx
  4042b1:	pushf  
  4042b2:	or     eax,0x84ec3635
  4042b7:	adc    al,0x6d
  4042b9:	push   esp
  4042ba:	dec    ecx
  4042bb:	std    
  4042bc:	in     al,dx
  4042bd:	in     eax,0xef
  4042bf:	fisubr WORD PTR [ecx-0x1128cce8]
  4042c5:	mov    ah,0xe2
  4042c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042c8:	sbb    al,BYTE PTR [esi]
  4042ca:	out    0x39,al
  4042cc:	push   ebx
  4042cd:	ja     0x404270
  4042cf:	outs   dx,BYTE PTR ds:[esi]
  4042d0:	aaa    
  4042d1:	mov    esi,0x10c1f2f9
  4042d6:	jae    0x404324
  4042d8:	sub    eax,0x5f130d0c
  4042dd:	hlt    
  4042de:	loope  0x404358
  4042e0:	add    DWORD PTR [edx+0x45],ebx
  4042e3:	adc    al,0x26
  4042e5:	sub    DWORD PTR [edx-0x7fcd2a6a],esp
  4042eb:	xchg   ecx,eax
  4042ec:	aas    
  4042ed:	ins    DWORD PTR es:[edi],dx
  4042ee:	sbb    ebp,0xffffff99
  4042f1:	jnp    0x40434a
  4042f3:	scas   eax,DWORD PTR es:[edi]
  4042f4:	in     al,dx
  4042f5:	lahf   
  4042f6:	fmul   DWORD PTR [ebx+0x13c070e6]
  4042fc:	gs jg  0x4042b2
  4042ff:	shl    BYTE PTR [esi+ebp*8+0x24],1
  404303:	sar    DWORD PTR [ebx+ecx*4],cl
  404306:	and    BYTE PTR [ecx],dh
  404308:	jmp    0x706fa33f
  40430d:	fwait
  40430e:	repnz in eax,dx
  404310:	sbb    edi,DWORD PTR [ebx]
  404312:	rcr    BYTE PTR [bx+si-0x201a],1
  404317:	aam    0xe5
  404319:	dec    esp
  40431a:	jb     0x40438c
  40431c:	addr16 std 
  40431e:	mov    esi,0xdb2c8c0c
  404323:	xchg   esp,eax
  404324:	ds or  al,0x0
  404327:	dec    eax
  404328:	pushf  
  404329:	mov    edx,0xbae1c9bd
  40432e:	jns    0x404394
  404330:	adc    DWORD PTR [edi+0x6d118ec1],0xffffffbc
  404337:	sbb    esp,DWORD PTR [edx+0x4f907d14]
  40433d:	and    edi,DWORD PTR [ebx+ebx*8+0x20]
  404341:	lea    esp,[ebp+0xa]
  404344:	lods   al,BYTE PTR ds:[esi]
  404345:	pop    ecx
  404346:	xchg   esp,eax
  404347:	cmp    al,0xd5
  404349:	popa   
  40434a:	test   al,0x3d
  40434c:	shl    BYTE PTR [ebp+0x45],cl
  40434f:	repz mov ebx,0x7c4a0ea
  404355:	xor    bl,ch
  404357:	in     al,dx
  404358:	push   cs
  404359:	mov    ds:0xe41e4045,al
  40435e:	mov    ecx,0xe9457cd8
  404363:	aas    
  404364:	ret    
  404365:	scas   eax,DWORD PTR es:[edi]
  404366:	cld    
  404367:	loope  0x404375
  404369:	or     ch,BYTE PTR [ecx-0x710e9647]
  40436f:	mov    esi,0x9885ad95
  404374:	pop    ss
  404375:	leave  
  404376:	lods   al,BYTE PTR ds:[esi]
  404377:	fmul   QWORD PTR [ebx-0x6]
  40437a:	pop    ds
  40437b:	cmp    eax,DWORD PTR [edi+0x34c5229e]
  404381:	push   0xb
  404383:	pushf  
  404384:	outs   dx,DWORD PTR ds:[esi]
  404385:	jmp    0xd66d2b81
  40438a:	xor    edx,DWORD PTR [eax]
  40438c:	mov    edx,0xe423a4c4
  404391:	sub    eax,eax
  404393:	cwde   
  404394:	sub    DWORD PTR [edi+0x62],esi
  404397:	pushf  
  404398:	sub    ecx,DWORD PTR [ebp-0x3e]
  40439b:	inc    esi
  40439c:	push   ds
  40439d:	lds    edi,FWORD PTR [ebx-0x349af5e0]
  4043a3:	mov    DWORD PTR ss:[edx+0x1],ebx
  4043a7:	push   edi
  4043a8:	inc    eax
  4043a9:	cwde   
  4043aa:	je     0x404362
  4043ac:	dec    eax
  4043ad:	pop    ebp
  4043ae:	popa   
  4043af:	cmp    dl,BYTE PTR [ebp+0x688967e8]
  4043b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043b6:	sub    ch,BYTE PTR [ebx]
  4043b8:	mov    eax,0x44258215
  4043bd:	frstor [edx-0x68f3e902]
  4043c3:	sub    ch,dl
  4043c5:	ins    DWORD PTR es:[edi],dx
  4043c6:	rol    DWORD PTR [ecx],1
  4043c8:	mov    esp,DWORD PTR [edx+0x606305f0]
  4043ce:	bswap  esp
  4043d0:	pushw  ss
  4043d2:	pop    ss
  4043d3:	inc    esp
  4043d4:	call   0xcc4d1391
  4043d9:	(bad)  
  4043da:	pop    ds
  4043db:	adc    eax,0xa838e46b
  4043e0:	mov    ss,WORD PTR ds:0x3124f119
  4043e6:	push   esp
  4043e7:	xchg   ebx,eax
  4043e8:	or     esi,DWORD PTR [edx]
  4043ea:	pop    ss
  4043eb:	test   eax,0x96425ede
  4043f0:	lahf   
  4043f1:	push   ebx
  4043f2:	jbe    0x40443a
  4043f4:	pop    esp
  4043f5:	cli    
  4043f6:	arpl   WORD PTR [ebp+0x3c],cx
  4043f9:	dec    edx
  4043fa:	loope  0x4043d4
  4043fc:	call   0x79c47fda
  404401:	sub    ch,BYTE PTR [eax+0x17]
  404404:	sub    cl,ch
  404406:	jmp    0xc507:0xc9619519
  40440d:	xchg   ecx,eax
  40440e:	shl    BYTE PTR [ebp+0x53],0x1b
  404412:	shl    BYTE PTR [edi],1
  404414:	xchg   ebx,eax
  404415:	jp     0x404451
  404417:	xchg   esp,eax
  404418:	push   eax
  404419:	dec    ebx
  40441a:	shl    DWORD PTR [eax],cl
  40441c:	es inc esp
  40441e:	test   eax,0x6f22ca05
  404423:	outs   dx,BYTE PTR ds:[esi]
  404424:	xchg   ecx,eax
  404425:	call   FWORD PTR [esi+0x1c91fa02]
  40442b:	(bad)  
  40442c:	mov    ah,0x6d
  40442e:	or     ah,BYTE PTR [ebx+edx*4]
  404431:	fcmovnbe st,st(4)
  404433:	xor    esp,ecx
  404435:	jb     0x404421
  404437:	das    
  404438:	sub    BYTE PTR [edi],cl
  40443a:	sbb    DWORD PTR [edi-0x6c9f95ab],esi
  404440:	add    DWORD PTR [ebx+eiz*8+0x14],ebx
  404444:	and    edx,DWORD PTR [esi]
  404446:	rcr    al,0x90
  404449:	stos   BYTE PTR es:[edi],al
  40444a:	fild   WORD PTR [edx-0x23]
  40444d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40444e:	sub    al,0xb1
  404450:	adc    BYTE PTR [edx],0xc9
  404453:	and    bl,BYTE PTR [ebx+0x755e4ad9]
  404459:	xchg   edi,eax
  40445a:	leave  
  40445b:	js     0x404470
  40445d:	sub    DWORD PTR [ebx-0x3b8f99cf],ecx
  404463:	xchg   ebx,eax
  404464:	dec    esp
  404465:	das    
  404466:	sahf   
  404467:	jl     0x40446c
  404469:	divps  xmm7,XMMWORD PTR [edi]
  40446c:	add    al,0xae
  40446e:	jmp    0x404498
  404470:	das    
  404471:	fldcw  WORD PTR [ecx-0x45]
  404474:	jno    0x4044eb
  404476:	cmp    DWORD PTR [ecx-0x48227e17],eax
  40447c:	popa   
  40447d:	dec    ebx
  40447e:	test   esp,eax
  404480:	pop    edi
  404481:	jge    0x40442f
  404483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404484:	dec    eax
  404485:	fsubr  st,st(2)
  404487:	pop    ebx
  404488:	rcl    BYTE PTR [esi],1
  40448a:	push   es
  40448b:	(bad)  
  40448c:	sbb    esi,DWORD PTR [eax-0x5]
  40448f:	mov    cl,0xa4
  404491:	xchg   BYTE PTR [edi-0x4d02ba8],al
  404497:	mov    bl,0xac
  404499:	js     0x404444
  40449b:	add    al,al
  40449d:	imul   ecx,DWORD PTR [ecx+0x137ba160],0x52acea79
  4044a7:	rol    BYTE PTR [ebp-0x4de8bc31],cl
  4044ad:	xor    eax,0x188db7
  4044b2:	sti    
  4044b3:	ret    0xe4da
  4044b6:	retf   0x27a1
  4044b9:	arpl   WORD PTR [ebp-0x3cc49ef2],sp
  4044bf:	mov    ebx,0xc04f04e2
  4044c4:	or     al,0xc1
  4044c6:	sahf   
  4044c7:	adc    ch,BYTE PTR [esi-0x3be45f33]
  4044cd:	jns    0x404505
  4044cf:	mov    cl,0x5d
  4044d1:	int    0x9b
  4044d3:	fiadd  WORD PTR [esp+eiz*8+0x25]
  4044d7:	inc    ebp
  4044d8:	aam    0x41
  4044da:	or     esi,0x60b9b31a
  4044e0:	es mov al,0xd3
  4044e3:	test   al,0x32
  4044e5:	ins    BYTE PTR es:[edi],dx
  4044e6:	pop    ds
  4044e7:	sub    eax,0x495c0616
  4044ec:	mov    ebx,0xa8cb465b
  4044f1:	xchg   ebx,eax
  4044f2:	cmp    ecx,DWORD PTR [edi]
  4044f4:	mov    edx,0x7de13b2e
  4044f9:	push   edi
  4044fa:	stos   BYTE PTR es:[edi],al
  4044fb:	ins    DWORD PTR es:[edi],dx
  4044fc:	repnz or DWORD PTR [eax-0x54789411],edi
  404503:	fisttp QWORD PTR [eax+0x4afae6dd]
  404509:	sub    esi,DWORD PTR [esi+0x7e80166f]
  40450f:	stos   DWORD PTR es:[edi],eax
  404510:	aam    0x81
  404512:	mov    al,ds:0xcac890f5
  404517:	sbb    eax,0xf356e697
  40451c:	mov    ebp,DWORD PTR [ebx+0x21b5b248]
  404522:	loopne 0x4044a8
  404524:	inc    esp
  404525:	test   DWORD PTR ds:0x43048725,esi
  40452b:	inc    edx
  40452c:	inc    ebx
  40452d:	sahf   
  40452e:	leave  
  40452f:	pop    ebp
  404530:	fs jp  0x40451e
  404533:	pavgb  mm4,QWORD PTR [edx-0x44877dcb]
  40453a:	mov    DWORD PTR [esp+esi*8+0x2bd7f797],edi
  404541:	adc    eax,0x8acde82d
  404546:	push   ebp
  404547:	into   
  404548:	loope  0x404502
  40454a:	in     eax,0xab
  40454c:	sub    DWORD PTR [edi-0x6f],ecx
  40454f:	push   ss
  404550:	pop    ss
  404551:	jae    0x404502
  404553:	fild   QWORD PTR [edx]
  404555:	fild   QWORD PTR [eax+ebx*2]
  404558:	aam    0x4a
  40455a:	cld    
  40455b:	clc    
  40455c:	jbe    0x404593
  40455e:	scas   eax,DWORD PTR es:[edi]
  40455f:	sub    al,0x98
  404561:	es add al,0xbc
  404564:	xchg   edi,eax
  404565:	out    dx,al
  404566:	in     al,dx
  404567:	fwait
  404568:	std    
  404569:	jbe    0x4044f0
  40456b:	or     BYTE PTR [eax-0x60a55f03],cl
  404571:	cld    
  404572:	dec    edi
  404573:	xchg   ebx,eax
  404574:	fcomp  QWORD PTR [ecx-0x76]
  404577:	mov    al,0x4f
  404579:	and    BYTE PTR [esi],bl
  40457b:	jmp    0x7921794e
  404580:	adc    DWORD PTR [esi-0x1411bd50],ebp
  404586:	out    dx,eax
  404587:	mov    esi,ecx
  404589:	push   ebx
  40458a:	ds adc al,0x74
  40458d:	call   0x15a83da4
  404592:	jns    0x4045f6
  404594:	call   0x1537b112
  404599:	sbb    al,0x57
  40459b:	inc    edx
  40459c:	mov    ds:0xb7af4122,al
  4045a1:	jge    0x4045bf
  4045a3:	(bad)  
  4045a4:	sar    BYTE PTR [esi-0x7a84193f],cl
  4045aa:	int    0xe5
  4045ac:	inc    ebp
  4045ad:	pop    edi
  4045ae:	adc    dl,BYTE PTR [edx]
  4045b0:	sub    eax,0x63d5a469
  4045b5:	mov    edx,0xd31b600f
  4045ba:	push   0x9
  4045bc:	test   DWORD PTR [edx-0x1],esp
  4045bf:	ror    BYTE PTR [eax+edi*4],cl
  4045c2:	lds    ebx,FWORD PTR [edx+edx*2-0x13]
  4045c6:	jp     0x4045d3
  4045c8:	adc    al,0xac
  4045ca:	out    0xcf,al
  4045cc:	adc    eax,0x9499174e
  4045d1:	fdiv   DWORD PTR [ebp-0x33]
  4045d4:	pop    esi
  4045d5:	mov    eax,ds:0xdb7d8992
  4045da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045db:	(bad)  
  4045dc:	pop    edi
  4045dd:	call   0x321d:0x85926ea6
  4045e4:	aas    
  4045e5:	std    
  4045e6:	test   eax,0x25a9ba89
  4045eb:	popa   
  4045ec:	push   ebx
  4045ed:	mov    cl,0x88
  4045ef:	mov    bh,0x4a
  4045f1:	int3   
  4045f2:	jmp    0x4246b339
  4045f7:	xor    dh,BYTE PTR [ebx+eiz*4]
  4045fa:	mov    bl,0xcd
  4045fc:	mov    cl,0x67
  4045fe:	jg     0x40465f
  404600:	fild   QWORD PTR [edx-0x3320e00c]
  404606:	nop
  404607:	jns    0x40461b
  404609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40460a:	out    0x56,eax
  40460c:	rol    DWORD PTR [eax],0x1e
  40460f:	xchg   esi,eax
  404610:	(bad)
  404614:	add    ah,BYTE PTR [eax+0x2e]
  404617:	popa   
  404618:	xor    al,cl
  40461a:	je     0x404699
  40461c:	xor    ah,BYTE PTR [ebp-0x2c]
  40461f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404620:	mov    BYTE PTR [esi-0x47],al
  404623:	sti    
  404624:	adc    al,0x70
  404626:	inc    ecx
  404627:	and    BYTE PTR [ebp-0xb68ce6b],cl
  40462d:	hlt    
  40462e:	push   cs
  40462f:	pop    ebx
  404630:	mov    esi,0x9fb07fc
  404635:	outs   dx,BYTE PTR ds:[esi]
  404636:	fisttp WORD PTR [edx]
  404638:	lods   al,BYTE PTR ds:[esi]
  404639:	mov    al,0xa2
  40463b:	bnd jae 0x40465e
  40463e:	cmp    BYTE PTR [ebx],ah
  404640:	in     eax,dx
  404641:	loop   0x404689
  404643:	imul   ebp,DWORD PTR [ebx+0x3f],0xc127e69f
  40464a:	out    dx,al
  40464b:	push   esi
  40464c:	mov    WORD PTR [ecx-0x324f5e54],fs
  404652:	idiv   BYTE PTR [esi+0x13]
  404655:	mov    al,ds:0xbf18156d
  40465a:	sahf   
  40465b:	std    
  40465c:	pop    ss
  40465d:	jg     0x404692
  40465f:	in     al,0xfb
  404661:	push   edx
  404662:	test   eax,0x9e7dfbfc
  404667:	nop
  404668:	retf   
  404669:	mov    eax,DWORD PTR ds:[ebx-0x25aa135f]
  404670:	jne    0x404603
  404672:	jns    0x404628
  404674:	sbb    al,0x63
  404676:	inc    ebp
  404677:	out    dx,al
  404678:	sar    BYTE PTR [ecx],cl
  40467a:	outs   dx,BYTE PTR ds:[esi]
  40467b:	dec    edi
  40467c:	push   es
  40467d:	jae    0x4046bd
  40467f:	jns    0x4046f5
  404681:	pop    ecx
  404682:	jae    0x404653
  404684:	add    eax,0x5d3d2705
  404689:	mov    ds:0x3802f169,al
  40468e:	sbb    al,0xc7
  404690:	(bad)  
  404691:	stos   DWORD PTR es:[edi],eax
  404692:	jmp    0x1d6a379c
  404697:	mov    ch,0x3c
  404699:	popf   
  40469a:	sbb    esp,edx
  40469c:	cs test edi,ebx
  40469f:	mov    ds,esi
  4046a1:	xor    DWORD PTR [edx-0x200a5f92],esi
  4046a7:	add    al,0x53
  4046a9:	lea    edx,[ebp-0x4bd35033]
  4046af:	cdq    
  4046b0:	pop    esp
  4046b1:	shl    dh,cl
  4046b3:	or     ecx,ebx
  4046b5:	mov    ah,0xc8
  4046b7:	adc    DWORD PTR [edx],ebx
  4046b9:	nop
  4046ba:	mov    al,0x72
  4046bc:	sbb    al,0xa8
  4046be:	int    0xcb
  4046c0:	test   al,0xe3
  4046c2:	rcl    DWORD PTR [edi],cl
  4046c4:	ins    DWORD PTR es:[edi],dx
  4046c5:	sub    eax,DWORD PTR [ebp+0x53]
  4046c8:	push   esp
  4046c9:	pop    ebx
  4046ca:	popf   
  4046cb:	push   ss
  4046cc:	dec    edx
  4046cd:	mov    ds:0x43876b54,al
  4046d2:	mov    ds:0x1fe3a80f,eax
  4046d7:	xor    cl,BYTE PTR [eax+0x43adaf80]
  4046dd:	cmp    BYTE PTR [edx-0x76989537],ch
  4046e3:	mov    ecx,0xac72363d
  4046e8:	leave  
  4046e9:	ret    
  4046ea:	hlt    
  4046eb:	xchg   esp,eax
  4046ec:	pop    edx
  4046ed:	mov    WORD PTR [edx-0x67c55793],es
  4046f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046f4:	dec    BYTE PTR [ecx]
  4046f6:	leave  
  4046f7:	test   ch,cl
  4046f9:	ffreep st(6)
  4046fb:	inc    ebp
  4046fc:	not    BYTE PTR [ebx]
  4046fe:	ss cdq 
  404700:	int    0x17
  404702:	mov    esp,0x3a3f341a
  404707:	xchg   esi,eax
  404708:	add    BYTE PTR [edi+ebx*2+0x11974a41],cl
  40470f:	mov    dl,ch
  404711:	push   ecx
  404712:	enter  0xa0fd,0xc7
  404716:	mov    dh,0x23
  404718:	mov    bl,0xdb
  40471a:	loopne 0x404797
  40471c:	repz and ecx,DWORD PTR ds:0xc2819572
  404723:	dec    esi
  404724:	mov    BYTE PTR [esi-0xa1fd10c],0x7d
  40472b:	and    eax,0x825f369e
  404730:	cmp    BYTE PTR [esi+0xf],0xe6
  404734:	loope  0x4046cf
  404736:	mov    eax,ds:0x6f50134e
  40473b:	shr    BYTE PTR [ecx+0x7d],cl
  40473e:	xchg   BYTE PTR [ebp+0x1c],dh
  404741:	jo     0x4047b5
  404743:	arpl   ax,sp
  404745:	(bad)  
  404746:	jmp    0x4047c3
  404748:	pop    ecx
  404749:	movq   mm1,mm6
  40474c:	dec    eax
  40474d:	in     al,dx
  40474e:	outs   dx,BYTE PTR ds:[esi]
  40474f:	gs sbb eax,0xb8e09335
  404755:	dec    ebp
  404756:	push   ss
  404757:	(bad)  
  404758:	dec    esi
  404759:	ds xchg esi,eax
  40475b:	mov    eax,0x125009fc
  404760:	jmp    0x2c6f:0xcd873c16
  404767:	sbb    eax,0x1f9bad8e
  40476c:	loope  0x40479f
  40476e:	inc    ebx
  40476f:	(bad)  
  404770:	popf   
  404771:	fisttp WORD PTR [ebx]
  404773:	jnp    0x4047dc
  404775:	in     al,dx
  404776:	xchg   edi,eax
  404777:	and    al,0xc9
  404779:	pop    edx
  40477a:	mov    esi,0xb3519daf
  40477f:	push   ds
  404780:	push   0x5fde9574
  404785:	stc    
  404786:	shl    DWORD PTR [edi-0x201cb68a],cl
  40478c:	sbb    edi,esp
  40478e:	mov    WORD PTR [eax],ds
  404790:	leave  
  404791:	in     al,dx
  404792:	mov    edx,0x34efd889
  404797:	mov    ds:0x4e7528da,al
  40479c:	idiv   dh
  40479e:	push   ebp
  40479f:	mov    cl,0x39
  4047a1:	test   al,0x9a
  4047a3:	lidtd  [edx]
  4047a6:	add    BYTE PTR [edi+0x51],dl
  4047a9:	ficom  WORD PTR [ebp-0x37]
  4047ac:	push   0xffffffc1
  4047ae:	in     al,dx
  4047af:	test   ch,ah
  4047b1:	pop    ecx
  4047b2:	xchg   esi,eax
  4047b3:	or     eax,ebx
  4047b5:	int3   
  4047b6:	test   esi,0xb6e1201
  4047bc:	xchg   edi,eax
  4047bd:	mov    ds:0x83a08909,eax
  4047c2:	push   cs
  4047c3:	xor    BYTE PTR [edx],dl
  4047c5:	push   cs
  4047c6:	xchg   ebx,eax
  4047c7:	mov    al,0x47
  4047c9:	adc    BYTE PTR [eax],bl
  4047cb:	iret   
  4047cc:	test   eax,0xc80925a6
  4047d1:	or     BYTE PTR [ebp-0x4a11b19c],ah
  4047d7:	sbb    eax,0x4791a2e3
  4047dc:	push   0x6cfc8210
  4047e1:	mov    edx,0x6653b912
  4047e6:	jb     0x404857
  4047e8:	jmp    0x40483b
  4047ea:	fwait
  4047eb:	sbb    bl,BYTE PTR [ecx*1-0x4a06f0ea]
  4047f2:	xor    eax,0x2d6ed761
  4047f7:	mov    ecx,esp
  4047f9:	mov    edx,0xd2993908
  4047fe:	(bad)  
  4047ff:	lahf   
  404800:	mov    al,al
  404802:	and    al,0x32
  404804:	mov    edi,0x3bf6facc
  404809:	sbb    eax,0x2b237466
  40480e:	sar    BYTE PTR [eax+0x719e1827],0x3e
  404815:	fcomp  QWORD PTR [ebx+0x1c]
  404818:	sub    DWORD PTR [ebp-0x7b],0x13
  40481c:	or     ecx,DWORD PTR [edi-0xd31b6cd]
  404822:	das    
  404823:	pop    ds
  404824:	stos   BYTE PTR es:[edi],al
  404825:	dec    edi
  404826:	add    cl,BYTE PTR ds:0x341157dc
  40482c:	mov    DWORD PTR [eax-0x9],eax
  40482f:	xor    bh,BYTE PTR [edx+0x2f]
  404832:	cs cs mov esp,edi
  404836:	dec    eax
  404837:	xchg   BYTE PTR [ecx+0x26],cl
  40483a:	mov    bl,0x5b
  40483c:	mov    ebp,0x5ace04d8
  404841:	ins    BYTE PTR es:[edi],dx
  404842:	xor    eax,0x79228c61
  404847:	sub    cl,BYTE PTR [eax+0x20190fc9]
  40484d:	dec    ch
  40484f:	(bad)  
  404850:	mov    cl,BYTE PTR [ebp+0x7a]
  404853:	jmp    FWORD PTR [edx-0x6d]
  404856:	sub    esp,DWORD PTR [edx+0x5c]
  404859:	sub    bh,dh
  40485b:	outs   dx,BYTE PTR ds:[esi]
  40485c:	retf   
  40485d:	iret   
  40485e:	cmp    BYTE PTR [edi+0x4d46fe68],ch
  404864:	lahf   
  404865:	xor    esp,esi
  404867:	bound  ecx,QWORD PTR [edx]
  404869:	jg     0x4048e6
  40486b:	or     BYTE PTR [edx-0x54987120],0xf8
  404872:	rol    esi,0xea
  404875:	daa    
  404876:	and    dl,BYTE PTR [edi]
  404878:	jne    0x404862
  40487a:	enter  0xdc09,0x4b
  40487e:	in     al,0x7c
  404880:	jnp    0x404847
  404882:	fnstenv [ecx]
  404884:	adc    DWORD PTR [ebx+0x6761e3ca],eax
  40488a:	cmp    DWORD PTR [ebx+0x230d4a9a],0xfc25a337
  404894:	jae    0x40490a
  404896:	mov    bh,0x4f
  404898:	mov    cs,WORD PTR [esi]
  40489a:	in     al,0x1e
  40489c:	or     eax,0x4914d7ff
  4048a1:	jno    0x4048f6
  4048a3:	cmc    
  4048a4:	outs   dx,BYTE PTR gs:[esi]
  4048a6:	jb     0x404921
  4048a8:	push   esi
  4048a9:	jnp    0x404845
  4048ab:	imul   ebp,DWORD PTR [ebp-0x8066eb3],0xffffffe5
  4048b2:	mov    esi,0xa251883a
  4048b7:	mov    bl,0xd1
  4048b9:	push   es
  4048ba:	dec    esp
  4048bb:	jle    0x4048f4
  4048bd:	test   al,0x20
  4048bf:	sub    al,0x8b
  4048c1:	push   es
  4048c2:	aaa    
  4048c3:	push   eax
  4048c4:	addr16 into 
  4048c6:	mov    dl,0x10
  4048c8:	test   al,0x5c
  4048ca:	rcr    DWORD PTR [eax-0x4a4f670a],1
  4048d0:	push   eax
  4048d1:	pop    edi
  4048d2:	dec    DWORD PTR [eax]
  4048d4:	sar    BYTE PTR [eax],0xa2
  4048d7:	les    esp,FWORD PTR ds:0xa8c2dfb3
  4048dd:	arpl   WORD PTR [ecx],dx
  4048df:	adc    BYTE PTR ds:0x6419ce30,dh
  4048e5:	lock enter 0xc2e2,0xa0
  4048ea:	(bad)  
  4048eb:	les    edx,FWORD PTR [edx]
  4048ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ee:	inc    edx
  4048ef:	mov    dh,0x94
  4048f1:	mov    al,ds:0x4b16cadb
  4048f6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4048f8:	fwait
  4048f9:	xchg   BYTE PTR [edx+0x33],dh
  4048fc:	ja     0x4cd6af51
  404902:	mov    cl,0xed
  404904:	adc    BYTE PTR gs:[eax-0x1e4d581b],0x54
  40490c:	sbb    al,0x13
  40490e:	dec    esi
  40490f:	push   ecx
  404910:	inc    esi
  404911:	cwde   
  404912:	ds gs sbb al,0x3e
  404916:	pushf  
  404917:	mov    cl,0x5a
  404919:	mov    DWORD PTR [edi+eiz*1-0x37],esp
  40491d:	or     ebx,DWORD PTR [edi-0x5d3bc121]
  404923:	ins    BYTE PTR es:[edi],dx
  404924:	popf   
  404925:	mov    ch,0x11
  404927:	adc    eax,0x47ee0871
  40492c:	mov    al,bl
  40492e:	or     bh,bl
  404930:	dec    eax
  404931:	mov    dl,0xc8
  404933:	sbb    ecx,DWORD PTR [ecx]
  404935:	xor    BYTE PTR [eax-0x5],bh
  404938:	jle    0x404989
  40493a:	int3   
  40493b:	(bad)  
  40493c:	loopne 0x404901
  40493e:	push   ebp
  40493f:	jecxz  0x4048ca
  404941:	bound  esp,QWORD PTR [edi-0x578a77a9]
  404947:	or     al,0x21
  404949:	pop    ecx
  40494a:	dec    esi
  40494b:	arpl   WORD PTR [eax-0x2d],cx
  40494e:	leave  
  40494f:	mov    bl,0x18
  404951:	pop    eax
  404952:	enter  0x9551,0x40
  404956:	shl    DWORD PTR [edx-0x56],1
  404959:	sbb    ch,BYTE PTR [edi+0x0]
  40495c:	mov    ch,0x8c
  40495e:	or     DWORD PTR [esi-0x47],0xffffffdc
  404962:	mov    ch,0x9d
  404964:	xor    al,0xd
  404966:	mov    eax,ds:0x7a9bf9d1
  40496b:	rcr    DWORD PTR [ecx+ebp*1],1
  40496e:	aam    0xbb
  404970:	pop    ds
  404971:	mov    BYTE PTR [edx+0x62],cl
  404974:	fst    QWORD PTR es:[edi]
  404977:	jb     0x4049ef
  404979:	sub    ebx,DWORD PTR [eax+0x22fdec5d]
  40497f:	push   es
  404980:	sbb    al,0xb2
  404982:	pop    eax
  404983:	sbb    DWORD PTR [esi-0x2e2d0807],esi
  404989:	and    DWORD PTR [eax],edx
  40498b:	data16 sub ah,al
  40498e:	xor    al,0x67
  404990:	adc    BYTE PTR [ebx],dh
  404992:	dec    eax
  404993:	imul   esp,esi,0x17eb9141
  404999:	push   ss
  40499a:	cmp    eax,0x3e5f81b9
  40499f:	push   ebp
  4049a0:	in     eax,dx
  4049a1:	xor    eax,0x959f66b9
  4049a6:	adc    BYTE PTR [ebx+esi*8-0x67015c61],ch
  4049ad:	cmp    dl,BYTE PTR [ebp+ebp*2+0x55]
  4049b1:	adc    BYTE PTR [ebp-0xc],bh
  4049b4:	das    
  4049b5:	rcr    DWORD PTR [edx-0x67c67899],0xcc
  4049bc:	ret    0x806c
  4049bf:	iret   
  4049c0:	aad    0xe0
  4049c2:	js     0x404965
  4049c4:	mov    DWORD PTR [eax+0x3c],esp
  4049c7:	dec    edx
  4049c8:	mov    edx,0x3b739588
  4049cd:	ror    DWORD PTR [eax],1
  4049cf:	mov    cl,dh
  4049d1:	mov    al,0x6e
  4049d3:	mov    ah,BYTE PTR [ecx]
  4049d5:	add    dh,BYTE PTR [edi+0xd16618a]
  4049db:	into   
  4049dc:	jg     0x404a3d
  4049de:	xchg   edi,eax
  4049df:	jno    0x404a54
  4049e1:	mov    dl,0xa7
  4049e3:	push   eax
  4049e4:	push   cs
  4049e5:	les    ebx,FWORD PTR [edi+eiz*4-0x128e65f7]
  4049ec:	es jg  0x404a25
  4049ef:	push   cs
  4049f0:	jnp    0x404979
  4049f2:	dec    esp
  4049f3:	mov    ebx,0x5bd69394
  4049f8:	repz or BYTE PTR [esi+0x6d5381ef],cl
  4049ff:	rcl    DWORD PTR [ebx],cl
  404a01:	cli    
  404a02:	or     bh,ah
  404a04:	ins    DWORD PTR es:[edi],dx
  404a05:	fcomp  st(1)
  404a07:	dec    eax
  404a08:	pop    edx
  404a09:	int3   
  404a0a:	sbb    cl,BYTE PTR [edi+ebp*2-0x6d]
  404a0e:	fwait
  404a0f:	cmp    DWORD PTR [ecx+0x6c],esp
  404a12:	in     eax,dx
  404a13:	jle    0x404a77
  404a15:	out    0xe2,al
  404a17:	push   ds
  404a18:	fsubr  DWORD PTR [ecx]
  404a1a:	out    0x8c,al
  404a1c:	xchg   esp,eax
  404a1d:	neg    BYTE PTR [ecx+0x39da6ec2]
  404a23:	ins    DWORD PTR es:[edi],dx
  404a24:	sbb    DWORD PTR [esi],eax
  404a26:	sub    ebp,DWORD PTR [ebp-0x23d4abcc]
  404a2c:	leave  
  404a2d:	jns    0x404a28
  404a2f:	inc    edi
  404a30:	bound  eax,QWORD PTR [ebp-0x7f3dfa7b]
  404a36:	dec    edi
  404a37:	repnz in al,0xa7
  404a3a:	mov    al,0xc0
  404a3c:	jo     0x404a52
  404a3e:	jno    0x404a4a
  404a40:	outs   dx,WORD PTR ds:[esi]
  404a42:	retf   
  404a43:	call   0x8c851aa5
  404a48:	xchg   BYTE PTR [ecx-0xb],dl
  404a4b:	xor    DWORD PTR [ebx-0x72],esi
  404a4e:	ins    BYTE PTR es:[edi],dx
  404a4f:	mov    dl,0x90
  404a51:	inc    ecx
  404a52:	xor    ebx,DWORD PTR es:[eax-0x22]
  404a56:	sbb    edi,DWORD PTR [edi-0x54]
  404a59:	lea    ecx,[ebp-0x6603936b]
  404a5f:	lods   eax,DWORD PTR ds:[esi]
  404a60:	mov    ebx,0xf9b816b
  404a65:	xchg   ebp,eax
  404a66:	dec    esp
  404a67:	and    DWORD PTR [edx],ebp
  404a69:	add    DWORD PTR ds:0xdd77a77b,ecx
  404a6f:	fs stc 
  404a71:	xor    eax,0x8b5910f1
  404a76:	lods   eax,DWORD PTR ds:[esi]
  404a77:	enter  0x74a1,0x66
  404a7b:	test   al,0xe
  404a7d:	xchg   ebx,eax
  404a7e:	hlt    
  404a7f:	popf   
  404a80:	adc    BYTE PTR [ecx+ecx*2],0xe3
  404a84:	pushf  
  404a85:	pop    ecx
  404a86:	int    0xb
  404a88:	pop    eax
  404a89:	and    dh,cl
  404a8b:	add    DWORD PTR [eax+0x4],ecx
  404a8e:	sbb    BYTE PTR [esi+0x1d],ah
  404a91:	inc    edi
  404a92:	add    BYTE PTR [ecx],ch
  404a94:	add    esi,esp
  404a96:	mov    bh,dh
  404a98:	ds jle 0x404acd
  404a9b:	call   0xbb02bbe8
  404aa0:	sar    esi,1
  404aa2:	and    BYTE PTR [eax+0x725fc981],ah
  404aa8:	xchg   esi,eax
  404aa9:	push   0xedca8b2a
  404aae:	maskmovq mm2,mm5
  404ab1:	repz jmp 0x404b32
  404ab4:	push   edx
  404ab5:	lds    esp,FWORD PTR [eax]
  404ab7:	xchg   esi,eax
  404ab8:	idiv   DWORD PTR [ecx+0x4f3aed18]
  404abe:	sbb    eax,0x9e0a4fa0
  404ac3:	mov    edx,0x6d140a89
  404ac8:	data16 and al,0x2
  404acb:	pushf  
  404acc:	mov    al,ds:0x3ad3775
  404ad1:	add    ah,BYTE PTR [edx+0x77]
  404ad4:	jmp    0x404a76
  404ad6:	dec    BYTE PTR [edi+0x7c21f56c]
  404adc:	test   eax,0x3f7298ea
  404ae1:	fstp   TBYTE PTR [ecx+0x59a1390b]
  404ae7:	adc    eax,0x7b5a4000
  404aec:	inc    esp
  404aed:	in     al,dx
  404aee:	adc    al,0x3a
  404af0:	cmp    DWORD PTR [eax],eax
  404af2:	ss div ebx
  404af5:	lock jae 0x404a7d
  404af8:	sbb    al,0x4a
  404afa:	leave  
  404afb:	pop    esp
  404afc:	stc    
  404afd:	pushf  
  404afe:	fist   DWORD PTR ds:0x69b106d
  404b04:	shr    BYTE PTR [ecx],0xd
  404b07:	lock and BYTE PTR [edx],dl
  404b0a:	fdivr  DWORD PTR [ebp-0x59]
  404b0d:	int    0x7e
  404b0f:	int3   
  404b10:	lods   eax,DWORD PTR ds:[esi]
  404b11:	xchg   edi,eax
  404b12:	stc    
  404b13:	inc    esp
  404b14:	es sub ch,ah
  404b17:	(bad)  
  404b18:	jo     0x404b50
  404b1a:	mov    ds:0x62576661,eax
  404b1f:	stos   BYTE PTR es:[edi],al
  404b20:	push   ss
  404b21:	lods   al,BYTE PTR ds:[esi]
  404b22:	das    
  404b23:	les    ebx,FWORD PTR [esi]
  404b25:	iret   
  404b26:	pop    edx
  404b27:	cs or  edx,esi
  404b2a:	and    dl,BYTE PTR [edx+esi*8+0x6e5b72e4]
  404b31:	out    dx,eax
  404b32:	ja     0x404b46
  404b34:	xor    BYTE PTR [ebx-0xf],0x12
  404b38:	dec    esp
  404b39:	(bad)  
  404b3a:	sbb    bh,BYTE PTR [eax-0x141cb7f1]
  404b40:	or     edx,ebx
  404b42:	aad    0x2c
  404b44:	push   ds
  404b45:	push   0xb0c15bfd
  404b4a:	sbb    al,0xdf
  404b4c:	mov    dl,0x85
  404b4e:	lahf   
  404b4f:	lock sub BYTE PTR [esp+ebx*4+0x207520ff],ch
  404b57:	out    dx,eax
  404b58:	sub    DWORD PTR [eax],ecx
  404b5a:	aaa    
  404b5b:	jmp    0x404b96
  404b5d:	xor    eax,0x7d7ca178
  404b62:	(bad)  
  404b64:	les    edx,FWORD PTR [ebx-0x4471023c]
  404b6a:	push   esi
  404b6b:	dec    edx
  404b6c:	mov    ebx,0x8af50e02
  404b71:	lods   eax,DWORD PTR ds:[esi]
  404b72:	pop    ebp
  404b73:	and    ch,BYTE PTR [ebp+0x4c]
  404b76:	jo     0x404bd1
  404b78:	inc    esp
  404b79:	xchg   ecx,eax
  404b7a:	xlat   BYTE PTR ds:[ebx]
  404b7b:	pop    ds
  404b7c:	inc    edx
  404b7d:	scas   eax,DWORD PTR es:[edi]
  404b7e:	icebp  
  404b7f:	add    ebx,ebx
  404b81:	fld    DWORD PTR [edi+ecx*2]
  404b84:	das    
  404b85:	pop    edx
  404b86:	mov    ebp,0xdb580078
  404b8b:	pop    edx
  404b8c:	sbb    al,0x1f
  404b8e:	inc    edi
  404b8f:	push   ecx
  404b90:	rcr    DWORD PTR [ebp+0x1d939c0e],cl
  404b96:	mov    dl,0xe2
  404b98:	mov    dh,0x5c
  404b9a:	(bad)  
  404b9b:	mov    WORD PTR [ecx-0x42],cs
  404b9e:	repz add cl,BYTE PTR [ecx]
  404ba1:	push   ss
  404ba2:	xor    esp,DWORD PTR [edx]
  404ba4:	add    eax,0x50f84854
  404ba9:	call   0x2fff:0x85c35ed7
  404bb0:	or     DWORD PTR [ecx+0x28157a1d],eax
  404bb6:	std    
  404bb7:	mov    BYTE PTR [eax+0x596a6b87],dl
  404bbd:	mov    WORD PTR [ebx+ecx*8+0x72ea177],cs
  404bc4:	mov    ebx,0x7a45b3b5
  404bc9:	es ror bh,cl
  404bcc:	(bad)  
  404bcd:	pop    ebx
  404bce:	jno    0x404b90
  404bd0:	aad    0x32
  404bd2:	lds    esp,FWORD PTR [eax+0x3f13b34d]
  404bd8:	fld    TBYTE PTR [ebp+0x6a]
  404bdb:	mov    ecx,0xe73f76ee
  404be0:	pop    edx
  404be1:	fnsave [esi+0x3723e8d0]
  404be7:	arpl   WORD PTR [ebp-0x5caa34db],di
  404bed:	push   esi
  404bee:	js     0x404b90
  404bf0:	js     0x404c63
  404bf2:	sub    dl,BYTE PTR [ebx+ecx*1]
  404bf5:	scas   al,BYTE PTR es:[edi]
  404bf6:	cdq    
  404bf7:	xor    DWORD PTR [edx-0x63ecfcc1],ecx
  404bfd:	les    ecx,FWORD PTR [ebx-0x3db30a3a]
  404c03:	mov    ch,0x22
  404c05:	test   ch,0x3b
  404c08:	jns    0x404b94
  404c0a:	dec    esi
  404c0b:	daa    
  404c0c:	out    dx,al
  404c0d:	sbb    BYTE PTR [ebx],bl
  404c0f:	sub    BYTE PTR [ebp-0x39],ch
  404c12:	add    ecx,edx
  404c14:	repz jmp 0x404bac
  404c17:	jp     0x404bcf
  404c19:	mov    dh,0x7b
  404c1b:	mov    ch,0xc
  404c1d:	inc    ah
  404c1f:	jp     0x404c76
  404c21:	and    BYTE PTR [ebx+eiz*4+0x1e19d96c],bl
  404c28:	push   0x3d
  404c2a:	sub    al,0xcf
  404c2c:	pop    ds
  404c2d:	cwde   
  404c2e:	cld    
  404c2f:	or     bl,bl
  404c31:	jns    0x404bd4
  404c33:	mov    ebp,0x6f5ca493
  404c38:	and    bl,bh
  404c3a:	cmp    al,0x3f
  404c3c:	(bad)  
  404c3d:	mov    eax,ds:0x3df31d0a
  404c42:	neg    cl
  404c44:	add    al,0x6
  404c46:	xchg   esp,eax
  404c47:	or     DWORD PTR [ecx+0x46],ecx
  404c4a:	aad    0xf7
  404c4c:	in     al,dx
  404c4d:	dec    eax
  404c4e:	arpl   WORD PTR [ebx],sp
  404c50:	ins    DWORD PTR es:[edi],dx
  404c51:	stos   BYTE PTR es:[edi],al
  404c52:	stos   DWORD PTR es:[edi],eax
  404c53:	sbb    eax,DWORD PTR [ebp-0x2004f5f4]
  404c59:	push   edi
  404c5a:	sti    
  404c5b:	xor    eax,0x278fb9a0
  404c60:	or     eax,ecx
  404c62:	inc    ebp
  404c63:	add    eax,DWORD PTR [ecx+0x7a]
  404c66:	outs   dx,DWORD PTR ds:[esi]
  404c67:	(bad)  
  404c68:	dec    esp
  404c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c6a:	cmp    eax,DWORD PTR [ecx-0x2c]
  404c6d:	rcr    BYTE PTR ds:0x549459e0,0x24
  404c74:	jecxz  0x404c15
  404c76:	add    ebp,0x4
  404c79:	inc    esp
  404c7a:	jb     0x404c22
  404c7c:	cmp    eax,0x6c38dfc6
  404c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c82:	cmp    eax,0xd7cc4f06
  404c87:	bound  esi,QWORD PTR [ecx-0x581684c8]
  404c8d:	and    BYTE PTR [ebp-0x1d59c7],0xb8
  404c94:	or     esp,ebp
  404c96:	sub    bh,BYTE PTR [ebx-0x95b0556]
  404c9c:	cld    
  404c9d:	xor    ecx,ebp
  404c9f:	inc    edx
  404ca0:	test   DWORD PTR [ecx-0x674743c9],esi
  404ca6:	jle    0x404cac
  404ca8:	mov    BYTE PTR ds:0x5f12046,cl
  404cae:	ret    0xa2d7
  404cb1:	fmul   DWORD PTR [edx-0x17]
  404cb4:	je     0x404d06
  404cb6:	nop
  404cb7:	ja     0x404cde
  404cb9:	lea    eax,[esi+0xa248838]
  404cbf:	aaa    
  404cc0:	push   0x4b536ef2
  404cc5:	leave  
  404cc6:	dec    edx
  404cc7:	stos   DWORD PTR es:[edi],eax
  404cc8:	lea    di,ds:0x75add3c
  404ccf:	repz xlat BYTE PTR ds:[ebx]
  404cd1:	sbb    ah,bh
  404cd3:	jmp    0x404cd7
  404cd5:	icebp  
  404cd6:	mov    eax,ds:0xf33d9261
  404cdb:	cli    
  404cdc:	sub    BYTE PTR [eax+0x11],0x9f
  404ce0:	test   BYTE PTR [ecx+0x53],cl
  404ce3:	add    BYTE PTR [ebx-0x4722b988],al
  404ce9:	shl    ah,cl
  404ceb:	sahf   
  404cec:	mov    eax,ds:0xcec09e2
  404cf1:	adc    BYTE PTR [ecx-0x49],bl
  404cf4:	outs   dx,DWORD PTR ds:[esi]
  404cf5:	mov    eax,ds:0x28473ed6
  404cfa:	jne    0x404cba
  404cfc:	sti    
  404cfd:	cli    
  404cfe:	dec    edi
  404cff:	pop    ecx
  404d00:	aaa    
  404d01:	jl     0x404d34
  404d03:	sbb    al,0x60
  404d05:	retf   0x1d16
  404d08:	adc    al,0xb5
  404d0a:	xchg   ebx,eax
  404d0b:	adc    al,0x52
  404d0d:	outs   dx,BYTE PTR ds:[esi]
  404d0e:	stc    
  404d0f:	sbb    al,0x60
  404d11:	push   edi
  404d12:	adc    al,0x7c
  404d14:	lahf   
  404d15:	sub    eax,0x475b8160
  404d1a:	add    al,0xaf
  404d1c:	or     al,0xb5
  404d1e:	sar    BYTE PTR [ebx+0x7e],0xe3
  404d22:	mov    bl,0xb1
  404d24:	mov    al,ds:0x284e012c
  404d29:	ins    BYTE PTR es:[edi],dx
  404d2a:	cmp    eax,0x275edddf
  404d2f:	fs lahf 
  404d31:	xor    BYTE PTR [ebx-0x16],0x14
  404d35:	push   ds
  404d36:	and    dh,BYTE PTR [ebx]
  404d38:	into   
  404d39:	(bad)  
  404d3a:	(bad)  
  404d3b:	(bad)  
  404d3d:	pop    esp
  404d3e:	mov    ch,BYTE PTR [ecx+0x39]
  404d41:	loope  0x404cf1
  404d43:	mov    DWORD PTR [ecx+eiz*1-0x2c],ebp
  404d47:	daa    
  404d48:	xchg   ecx,eax
  404d49:	shl    BYTE PTR [ecx+0x7ebec594],cl
  404d4f:	mov    edi,0x24fbf7de
  404d54:	int    0x81
  404d56:	aaa    
  404d57:	adc    bl,ah
  404d59:	or     BYTE PTR [edi-0x4eee6600],dl
  404d5f:	mov    ecx,0x63e825a3
  404d64:	out    dx,eax
  404d65:	sbb    cl,BYTE PTR [ecx+0x2f]
  404d68:	xchg   ebx,eax
  404d69:	push   ebp
  404d6a:	loopne 0x404d1e
  404d6c:	inc    esp
  404d6d:	jne    0x404d79
  404d6f:	xor    ebp,DWORD PTR ds:0xb697dc20
  404d75:	adc    al,0xc4
  404d77:	fild   QWORD PTR [edx]
  404d79:	and    ch,BYTE PTR [esp+ecx*8]
  404d7c:	shr    DWORD PTR [edi+0x7d8e88b0],0x28
  404d83:	adc    DWORD PTR [edi],esi
  404d85:	xor    ebp,DWORD PTR [eax-0x54f2638e]
  404d8b:	scas   eax,DWORD PTR es:[edi]
  404d8c:	jns    0x404d4f
  404d8e:	mov    ebp,ecx
  404d90:	mov    ebp,DWORD PTR [ebx+0x2e497ccf]
  404d96:	pop    ebx
  404d97:	call   0x893a690e
  404d9c:	mov    bh,0xc0
  404d9e:	out    0xda,al
  404da0:	shr    BYTE PTR [edx+0x64b742df],cl
  404da6:	scas   al,BYTE PTR es:[edi]
  404da7:	cli    
  404da8:	xor    BYTE PTR [edx-0x1dabc90c],dl
  404dae:	push   edi
  404daf:	rcr    BYTE PTR [ebx*2+0x5cbb25a9],cl
  404db6:	xchg   DWORD PTR [ecx],ecx
  404db8:	sbb    BYTE PTR [edx],ah
  404dba:	iret   
  404dbb:	je     0x404d8b
  404dbd:	aas    
  404dbe:	pop    ebx
  404dbf:	stc    
  404dc0:	pusha  
  404dc1:	aaa    
  404dc2:	jnp    0x404d7e
  404dc4:	mov    edi,0x33e607e9
  404dc9:	cmp    edx,edx
  404dcb:	lahf   
  404dcc:	out    dx,eax
  404dcd:	ins    DWORD PTR es:[edi],dx
  404dce:	or     DWORD PTR [edx],0x760eab06
  404dd4:	sti    
  404dd5:	sbb    edx,DWORD PTR [eax+0x147bb0ed]
  404ddb:	xchg   esp,eax
  404ddc:	dec    esi
  404ddd:	mov    ah,0x58
  404ddf:	inc    ebp
  404de0:	stc    
  404de1:	jecxz  0x404d6a
  404de3:	nop
  404de4:	mov    ch,0xbb
  404de6:	jp     0x404e04
  404de8:	cwde   
  404de9:	mov    ch,al
  404deb:	xchg   ebx,eax
  404dec:	es cdq 
  404dee:	sbb    eax,0x53bafdd9
  404df3:	mov    eax,0x395735f6
  404df8:	ds mov ebp,0x68735315
  404dfe:	cdq    
  404dff:	adc    al,0xe5
  404e01:	lds    esp,FWORD PTR [edx-0x4a]
  404e04:	xlat   BYTE PTR ds:[ebx]
  404e05:	push   ecx
  404e06:	rcr    DWORD PTR [edi-0xfd630d0],1
  404e0c:	popf   
  404e0d:	icebp  
  404e0e:	lods   eax,DWORD PTR ds:[esi]
  404e0f:	pop    ds
  404e10:	xchg   ebx,eax
  404e11:	out    dx,eax
  404e12:	or     edi,ebx
  404e14:	shl    esp,0x71
  404e17:	dec    esi
  404e18:	jge    0x404e90
  404e1a:	sti    
  404e1b:	inc    eax
  404e1c:	test   DWORD PTR [eax-0x5bb7864d],edx
  404e22:	fs out dx,eax
  404e24:	mov    DWORD PTR ds:0xfcc0412c,ebx
  404e2a:	aas    
  404e2b:	push   ds
  404e2c:	mov    ch,0x44
  404e2e:	fld    TBYTE PTR [ecx-0x5f]
  404e31:	mov    DWORD PTR [ecx],ecx
  404e33:	jb     0x404e08
  404e35:	inc    edi
  404e36:	fnstenv [eax-0x59519606]
  404e3c:	lock es xchg esi,eax
  404e3f:	(bad)  
  404e40:	mov    eax,DWORD PTR [edx+eiz*4-0x1800c04e]
  404e47:	jecxz  0x404e3a
  404e49:	xchg   ecx,eax
  404e4a:	call   0xf0abbe54
  404e4f:	test   BYTE PTR [ebx],ah
  404e51:	cmp    al,0xd3
  404e53:	repnz mov esi,ecx
  404e56:	call   FWORD PTR [ebp-0x37]
  404e59:	ins    DWORD PTR es:[edi],dx
  404e5a:	push   edx
  404e5b:	or     DWORD PTR [edi],esi
  404e5d:	sub    cl,BYTE PTR [edi+edx*1]
  404e60:	cmp    bh,0xd9
  404e63:	stos   DWORD PTR es:[edi],eax
  404e64:	ins    DWORD PTR es:[edi],dx
  404e65:	aas    
  404e66:	sar    BYTE PTR [edx-0x118cc17e],1
  404e6c:	sar    dh,cl
  404e6e:	add    BYTE PTR [eax],bl
  404e70:	inc    ecx
  404e71:	test   BYTE PTR [ebx-0x74edebc7],bl
  404e77:	sti    
  404e78:	mov    ds:0x844d9ec5,al
  404e7d:	pop    ss
  404e7e:	shl    DWORD PTR [edx-0x37e95f5a],0x4e
  404e85:	out    dx,al
  404e86:	add    DWORD PTR [ecx-0x58],edi
  404e89:	(bad)  
  404e8a:	test   DWORD PTR [ebp+0x7],0xede4e467
  404e91:	lock push ds
  404e93:	dec    esi
  404e94:	sbb    BYTE PTR [eax-0xdafffa4],0xe2
  404e9b:	neg    cl
  404e9d:	or     eax,0xd097212a
  404ea2:	mov    esi,0xdfe6ce39
  404ea7:	dec    ebx
  404ea8:	imul   ebx,DWORD PTR [ebp-0x1e],0x5
  404eac:	icebp  
  404ead:	stc    
  404eae:	imul   ebx,DWORD PTR [edi+0x2c],0x38
  404eb2:	sahf   
  404eb3:	jmp    0x404e93
  404eb5:	push   0xdcf60598
  404eba:	test   eax,0x4e27f3d1
  404ebf:	jmp    0x6044bd96
  404ec4:	and    al,0xed
  404ec6:	xor    BYTE PTR [edx+0x32],al
  404ec9:	sbb    DWORD PTR [edi-0x3d],esi
  404ecc:	push   esp
  404ecd:	retf   0xe32d
  404ed0:	and    eax,0xcca5ab14
  404ed5:	retf   0x7c95
  404ed8:	ja     0x404e86
  404eda:	idiv   BYTE PTR [ebp*2-0x69b9c41d]
  404ee1:	mov    eax,DWORD PTR [eax-0x2a8c7ecf]
  404ee7:	into   
  404ee8:	in     al,0x37
  404eea:	das    
  404eeb:	jae    0x404ec9
  404eed:	xchg   ebp,eax
  404eee:	add    eax,0x110421a
  404ef3:	ins    BYTE PTR es:[edi],dx
  404ef4:	push   0x3c0f7824
  404ef9:	popf   
  404efa:	(bad)  [ebp+0x1fe95b97]
  404f00:	mov    ch,0xea
  404f02:	and    bl,ch
  404f04:	fbld   TBYTE PTR [ecx-0x36]
  404f07:	jno    0x404efa
  404f09:	sub    al,0xc5
  404f0b:	xor    eax,0xbf927ec5
  404f10:	cli    
  404f11:	sahf   
  404f12:	jo     0x404e96
  404f14:	mov    ecx,0x3662f7c9
  404f19:	call   ecx
  404f1b:	aam    0xe8
  404f1d:	adc    al,0xb0
  404f1f:	cwde   
  404f20:	or     cl,BYTE PTR [esi]
  404f22:	test   al,0x16
  404f24:	shr    DWORD PTR [ebx+ecx*8-0x1c],cl
  404f28:	adc    al,0x3e
  404f2a:	bound  edx,QWORD PTR [ebx+0x28d2d30e]
  404f30:	push   cs
  404f31:	stos   BYTE PTR es:[edi],al
  404f32:	cmp    bh,bl
  404f34:	push   edx
  404f35:	jmp    0xbe396786
  404f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f3b:	cmp    al,0xce
  404f3d:	out    0xd2,eax
  404f3f:	mov    ebp,0xeedb3dff
  404f44:	dec    edi
  404f45:	mov    eax,ds:0x410848fc
  404f4a:	out    0x37,al
  404f4c:	xchg   ebx,eax
  404f4d:	sub    al,0xec
  404f4f:	or     al,0x3b
  404f51:	add    al,0xcf
  404f53:	ficom  DWORD PTR [esi+0x2f]
  404f56:	mov    al,0x65
  404f58:	(bad)  
  404f59:	pop    edx
  404f5a:	mov    DWORD PTR [edx+0x29],edi
  404f5d:	daa    
  404f5e:	xchg   esp,eax
  404f5f:	shr    DWORD PTR ss:[eax+0x23],1
  404f63:	add    eax,esp
  404f65:	adc    al,0x88
  404f67:	mov    esi,0xdb60294f
  404f6c:	(bad)  
  404f6d:	enter  0x3ab0,0x74
  404f71:	and    eax,0xb1a1781d
  404f76:	cmp    edx,DWORD PTR [di]
  404f79:	mov    ecx,0xfe8b36f2
  404f7e:	popf   
  404f7f:	jbe    0x404f97
  404f81:	(bad)  
  404f82:	xor    DWORD PTR [ebp+0x48],eax
  404f85:	or     al,0xd1
  404f87:	call   0xfa11:0xb146083e
  404f8e:	mov    ebx,0xa1761376
  404f93:	or     al,0x5d
  404f95:	and    BYTE PTR [ecx+0x58],ch
  404f98:	clc    
  404f99:	inc    ebp
  404f9a:	sub    esp,DWORD PTR [ebx+0x4e]
  404f9d:	pop    ds
  404f9e:	add    esi,DWORD PTR [ebx+0x76d8852b]
  404fa4:	dec    esp
  404fa5:	rcr    BYTE PTR [ecx+0x8],cl
  404fa8:	xor    al,0x3a
  404faa:	cld    
  404fab:	(bad)  
  404fad:	mov    ah,BYTE PTR [ebx]
  404faf:	mov    eax,0x8e76cbe3
  404fb4:	xor    al,0x17
  404fb6:	inc    ecx
  404fb7:	div    eax
  404fb9:	fcmovu st,st(7)
  404fbb:	pushf  
  404fbc:	xor    ah,dl
  404fbe:	pop    ss
  404fbf:	(bad)  
  404fc0:	shl    BYTE PTR [ecx],1
  404fc2:	sahf   
  404fc3:	jne    0x9b6445bd
  404fc9:	into   
  404fca:	xor    BYTE PTR [bp+di+0x23],bh
  404fce:	out    0x4,eax
  404fd0:	xchg   esp,eax
  404fd1:	(bad)  [eax+esi*2-0x7c]
  404fd5:	lods   al,BYTE PTR ds:[esi]
  404fd6:	outs   dx,BYTE PTR ds:[esi]
  404fd7:	repz stc 
  404fd9:	push   edx
  404fda:	scas   eax,DWORD PTR es:[edi]
  404fdb:	rol    DWORD PTR [ebp+eax*4-0x157d45dd],1
  404fe2:	cmp    DWORD PTR [esi],edx
  404fe4:	xlat   BYTE PTR ds:[ebx]
  404fe5:	push   0x8f5cdb8e
  404fea:	push   eax
  404feb:	outs   dx,DWORD PTR ds:[esi]
  404fec:	adc    eax,0xa72adb82
  404ff1:	loope  0x40503f
  404ff3:	call   0xdd10:0xa725eab6
  404ffa:	mov    DWORD PTR [edi+0x75da592e],0xa229c6e0
  405004:	stc    
  405005:	mov    ebx,0x65fde9aa
  40500a:	arpl   WORD PTR ds:0xd4ace3de,di
  405010:	test   BYTE PTR ds:0x23d12713,bh
  405016:	sub    al,0x29
  405018:	into   
  405019:	out    0xa2,al
  40501b:	ret    0xdd9f
  40501e:	inc    edi
  40501f:	jne    0x404fb9
  405021:	shl    DWORD PTR [esi],1
  405023:	les    edx,FWORD PTR [esi+0x34]
  405026:	dec    esi
  405027:	loop   0x404fe7
  405029:	fild   WORD PTR [edi-0x25]
  40502c:	lahf   
  40502d:	rol    DWORD PTR [ebp-0x77],cl
  405030:	into   
  405031:	int3   
  405032:	mov    ecx,0x6a7fa1ac
  405037:	cmp    DWORD PTR [ecx],esi
  405039:	sbb    DWORD PTR [edx+ebp*8+0x71],0x6631ca69
  405041:	cmp    esi,DWORD PTR [ecx]
  405043:	pop    esi
  405044:	leave  
  405045:	pushf  
  405046:	jb     0x404fce
  405048:	std    
  405049:	(bad)  
  40504a:	scas   al,BYTE PTR es:[edi]
  40504b:	repnz bswap ebx
  40504e:	fwait
  40504f:	xor    ecx,DWORD PTR [esi+eiz*8-0xf]
  405053:	xchg   ebp,eax
  405054:	ja     0x405045
  405056:	test   DWORD PTR [ebp+0x2f],edi
  405059:	cmp    al,0xea
  40505b:	nop
  40505c:	xor    eax,0x6062f8d
  405061:	xchg   ecx,eax
  405062:	mov    al,0x26
  405064:	out    dx,eax
  405065:	retf   0x72c5
  405068:	aad    0x2c
  40506a:	or     BYTE PTR [edx-0xb7faed8],0xc8
  405071:	push   ss
  405072:	or     al,0xa0
  405074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405075:	data16 into 
  405077:	(bad)  
  405078:	fisub  DWORD PTR [ecx+0x7c]
  40507b:	cdq    
  40507c:	rcl    BYTE PTR [edi],1
  40507e:	ret    
  40507f:	pusha  
  405080:	int    0xbc
  405082:	mov    edi,0x5d619489
  405087:	jo     0x405018
  405089:	clc    
  40508a:	inc    esi
  40508b:	or     BYTE PTR [esi+0x7923cc6e],al
  405091:	lods   eax,DWORD PTR ds:[esi]
  405092:	or     ebx,DWORD PTR ds:0xb0a5a385
  405098:	nop
  405099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40509a:	xor    al,0xb8
  40509c:	(bad)  
  40509d:	push   0xfffffffc
  40509f:	mov    ecx,0xe0aac0b8
  4050a4:	add    bh,BYTE PTR [esi+esi*8-0x510f7f04]
  4050ab:	int3   
  4050ac:	push   0x66
  4050ae:	shl    DWORD PTR [edx+0x13],0x81
  4050b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050b3:	in     al,dx
  4050b4:	ret    
  4050b5:	mov    eax,DWORD PTR [edi]
  4050b7:	xor    DWORD PTR [ebp-0x53],ecx
  4050ba:	fcmovbe st,st(5)
  4050bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050bd:	push   0x25bdfbed
  4050c2:	mov    ch,0x88
  4050c4:	ins    DWORD PTR es:[edi],dx
  4050c5:	jne    0x405100
  4050c7:	dec    ebx
  4050c9:	fiadd  WORD PTR [ebp+0x19]
  4050cc:	inc    esi
  4050cd:	(bad)  
  4050ce:	xor    BYTE PTR [esp+eax*8+0x189dbe6],al
  4050d5:	mov    ebp,ds
  4050d7:	out    0x5e,al
  4050d9:	xor    bh,BYTE PTR [ebx-0x63]
  4050dc:	sahf   
  4050dd:	sahf   
  4050de:	push   ebp
  4050df:	push   cs
  4050e0:	sub    DWORD PTR [edx],esi
  4050e2:	or     al,0x6e
  4050e4:	leave  
  4050e5:	push   ecx
  4050e6:	call   0xb343:0xee6bdccb
  4050ed:	shl    ch,1
  4050ef:	xchg   BYTE PTR [eax-0x66],cl
  4050f2:	ror    ebx,0x3b
  4050f5:	cld    
  4050f6:	test   al,0xbc
  4050f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050f9:	adc    eax,0x104f1aa4
  4050fe:	pop    esp
  4050ff:	popf   
  405100:	mov    esi,0x5d0f9a47
  405105:	pushf  
  405106:	sub    eax,0xf83ce17e
  40510b:	jno    0x405171
  40510d:	rcl    BYTE PTR [ebx+0x47398ed6],1
  405113:	out    0x5f,eax
  405115:	cli    
  405116:	inc    esp
  405117:	push   edi
  405118:	cmp    al,0xc2
  40511a:	aam    0xe9
  40511c:	jno    0x40518a
  40511e:	fnstcw WORD PTR [ecx-0x67695d6a]
  405124:	out    0x53,al
  405126:	clc    
  405127:	jo     0x405113
  405129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40512a:	fdivrp st(0),st
  40512c:	stos   DWORD PTR es:[edi],eax
  40512d:	ror    BYTE PTR [edi+0x688c3d12],cl
  405133:	push   es
  405134:	pop    edx
  405135:	mov    ds:0x6e048241,al
  40513a:	repnz shl BYTE PTR [ebx+0x6c829cd1],1
  405141:	das    
  405142:	mov    edi,DWORD PTR [ebx]
  405144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405145:	std    
  405146:	push   0x78
  405148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405149:	dec    ebp
  40514a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40514c:	aas    
  40514d:	shl    DWORD PTR [edi-0x76],0x38
  405151:	ret    
  405152:	iret   
  405153:	jmp    0x2cd5:0x4ddb80d5
  40515a:	sbb    eax,0xb4f7e3bd
  40515f:	stos   DWORD PTR es:[edi],eax
  405160:	mov    esi,0x7dfe6c03
  405165:	fmulp  st(4),st
  405167:	cmp    BYTE PTR [eax-0x4b88d0f1],bl
  40516d:	xchg   esi,eax
  40516e:	enter  0x64e9,0xa5
  405172:	fiadd  DWORD PTR [ebp+0x23ed1a17]
  405178:	xchg   edi,eax
  405179:	lods   al,BYTE PTR ds:[esi]
  40517a:	and    al,0xf
  40517c:	mov    WORD PTR [ebx-0x34],ds
  40517f:	pusha  
  405180:	in     eax,0xbe
  405182:	addr16 retf 0x3970
  405186:	out    0x5c,eax
  405188:	mov    ecx,0x45389812
  40518d:	(bad)  
  40518e:	push   cs
  40518f:	nop
  405190:	in     eax,0x86
  405192:	mov    esp,0xfff45ce7
  405197:	mov    dl,0x4
  405199:	fsub   QWORD PTR [ebx-0x637e0a6b]
  40519f:	cmp    ebx,0x42f5dcbc
  4051a5:	pop    edi
  4051a6:	cs xchg ebx,eax
  4051a8:	pop    edi
  4051a9:	cli    
  4051aa:	adc    eax,0xb112f990
  4051af:	pop    ecx
  4051b0:	push   cs
  4051b1:	retf   
  4051b2:	and    al,0x21
  4051b4:	dec    ebx
  4051b5:	dec    ecx
  4051b6:	push   esi
  4051b7:	pushf  
  4051b8:	inc    eax
  4051b9:	popa   
  4051ba:	xor    DWORD PTR [ebp+0x4e],edx
  4051bd:	jbe    0x405168
  4051bf:	test   al,0x92
  4051c1:	push   edx
  4051c2:	call   0x45159ea5
  4051c7:	pop    esp
  4051c8:	call   0x4d096f4f
  4051cd:	sahf   
  4051ce:	jno    0x405225
  4051d0:	ret    0x7f5a
  4051d3:	data16 je 0x405156
  4051d6:	adc    DWORD PTR [ecx+0x6d],edi
  4051d9:	jae    0x405242
  4051db:	xchg   ebp,eax
  4051dc:	ret    0x2dda
  4051df:	in     al,0x73
  4051e1:	in     eax,dx
  4051e2:	aad    0x29
  4051e4:	hlt    
  4051e5:	stos   BYTE PTR es:[edi],al
  4051e6:	fwait
  4051e7:	sbb    BYTE PTR [edi+0x1c],0x73
  4051eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051ec:	into   
  4051ed:	xchg   ecx,eax
  4051ee:	xchg   ebx,eax
  4051ef:	imul   ebp,DWORD PTR [ebx-0x47],0xedf1de86
  4051f6:	inc    ebp
  4051f7:	adc    al,0xc4
  4051f9:	ffreep st(2)
  4051fb:	push   ss
  4051fc:	adc    DWORD PTR [esi],esp
  4051fe:	scas   eax,DWORD PTR es:[edi]
  4051ff:	mov    ebx,0xcb2ff3a3
  405204:	clc    
  405205:	jl     0x4051ac
  405207:	mov    DWORD PTR [ecx-0x27],0xd20bfe55
  40520e:	or     ah,0xd
  405211:	dec    ebp
  405212:	ins    DWORD PTR es:[edi],dx
  405213:	shl    edx,0xed
  405216:	push   0x9b4daa67
  40521b:	gs xchg bl,ah
  40521e:	mov    edi,0xa9d8a33e
  405223:	dec    DWORD PTR [ebx+0x26bd88e1]
  405229:	pop    esp
  40522a:	pop    esi
  40522b:	stos   BYTE PTR es:[edi],al
  40522c:	ror    dh,1
  40522e:	imul   edx,DWORD PTR [ecx-0x5cf4641f],0x4e100215
  405238:	pop    esi
  405239:	inc    edx
  40523a:	mov    al,ds:0xaa9870e6
  40523f:	or     al,BYTE PTR [edx+0x5d]
  405242:	out    0xac,al
  405244:	push   es
  405245:	inc    ebx
  405246:	or     ebp,edx
  405248:	push   es
  405249:	push   ss
  40524a:	idiv   DWORD PTR [eax]
  40524c:	dec    ebx
  40524d:	(bad)  
  40524e:	jbe    0x405223
  405250:	out    0x86,eax
  405252:	test   al,0x80
  405254:	pop    ds
  405255:	or     edi,edx
  405257:	push   cs
  405258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405259:	mov    DWORD PTR [ebp+0x1f],esp
  40525c:	shl    BYTE PTR [edi+0x2fb3699e],0xe8
  405263:	cmp    ecx,edx
  405265:	cmp    edi,eax
  405267:	fsub   DWORD PTR [eax]
  405269:	or     esi,DWORD PTR [edi]
  40526b:	ins    BYTE PTR es:[edi],dx
  40526c:	xchg   ebx,eax
  40526d:	jmp    0x59ea:0x30a21917
  405274:	aas    
  405275:	iret   
  405276:	gs repz inc ebx
  405279:	inc    esp
  40527a:	and    al,0x1f
  40527c:	cmp    bl,bl
  40527e:	dec    ebx
  40527f:	and    eax,0xfe470145
  405284:	dec    ebp
  405285:	or     ebx,DWORD PTR [edi]
  405287:	icebp  
  405288:	in     al,dx
  405289:	inc    edi
  40528a:	int    0xae
  40528c:	fs inc esp
  40528e:	push   0xd95b7517
  405293:	or     eax,0x498c6a71
  405298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405299:	xchg   ebx,eax
  40529a:	sbb    al,al
  40529c:	js     0x405286
  40529e:	dec    ebp
  40529f:	and    al,0x14
  4052a1:	ret    
  4052a2:	popf   
  4052a3:	and    eax,0xa98e2e9a
  4052a8:	mov    ebp,0xe6b0a42c
  4052ad:	loop   0x4052b8
  4052af:	and    al,0x8e
  4052b1:	mov    ch,0x13
  4052b3:	cdq    
  4052b4:	std    
  4052b5:	or     DWORD PTR [edi-0x15],0xffffffd9
  4052b9:	aaa    
  4052ba:	mov    ebx,0x446d8d7a
  4052bf:	and    esi,DWORD PTR [edx]
  4052c1:	repz cli 
  4052c3:	xchg   esp,eax
  4052c4:	stc    
  4052c5:	dec    esi
  4052c6:	sahf   
  4052c7:	(bad)  
  4052c8:	lahf   
  4052c9:	cwde   
  4052ca:	stos   BYTE PTR es:[edi],al
  4052cb:	out    0xd5,eax
  4052cd:	sub    DWORD PTR [edx-0x51],edx
  4052d0:	jno    0x4052be
  4052d2:	test   DWORD PTR [ecx],0xa2b44c74
  4052d8:	jecxz  0x405295
  4052da:	or     dl,BYTE PTR [edx]
  4052dc:	jae    0x405344
  4052de:	in     eax,0xd1
  4052e0:	mov    dh,0xba
  4052e2:	mov    dh,0x1a
  4052e4:	lock add al,0x96
  4052e7:	cmp    DWORD PTR [edx],ecx
  4052e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ea:	cmc    
  4052eb:	outs   dx,BYTE PTR ds:[esi]
  4052ec:	mov    es,eax
  4052ee:	dec    ebp
  4052ef:	fild   DWORD PTR [eax+0x6535a3d6]
  4052f5:	je     0x40534d
  4052f7:	hlt    
  4052f8:	dec    edi
  4052f9:	cwde   
  4052fa:	popf   
  4052fb:	jmp    0x4052e1
  4052fd:	dec    ecx
  4052fe:	pop    ds
  4052ff:	(bad)  
  405300:	mov    al,BYTE PTR [eax+0x1757576f]
  405306:	stc    
  405307:	push   es
  405308:	push   ss
  405309:	push   cs
  40530a:	mov    eax,ds:0xab2abb48
  40530f:	hlt    
  405310:	sbb    dl,al
  405312:	push   edi
  405313:	ret    
  405314:	add    cl,dl
  405316:	mov    esi,0xe46589f2
  40531b:	jo     0x405353
  40531d:	imul   BYTE PTR [edi+0x76963613]
  405323:	idiv   bl
  405325:	dec    esp
  405326:	lods   eax,DWORD PTR ds:[esi]
  405327:	sbb    ch,bh
  405329:	push   ds
  40532a:	(bad)  
  40532b:	mov    al,0xb3
  40532d:	pop    es
  40532e:	mov    ebp,esp
  405330:	aaa    
  405331:	test   ebx,edi
  405333:	jecxz  0x4053b0
  405335:	and    al,0xb0
  405337:	xchg   ebx,eax
  405338:	push   ecx
  405339:	and    al,0xdc
  40533b:	push   0xffffffdb
  40533d:	mov    eax,0xc5f49a34
  405342:	dec    ebp
  405343:	push   cs
  405344:	pop    edi
  405345:	mov    ch,0x7b
  405347:	neg    DWORD PTR [edx-0x350a19ab]
  40534d:	sbb    eax,0x443b1987
  405352:	neg    DWORD PTR [esi-0x5f]
  405355:	mov    eax,DWORD PTR [esi-0x3675eb17]
  40535b:	jl     0x4053ac
  40535d:	mov    ds:0xd824e242,al
  405362:	rcr    bh,0xf4
  405365:	ins    DWORD PTR es:[edi],dx
  405366:	add    eax,ecx
  405368:	inc    eax
  405369:	into   
  40536a:	ins    DWORD PTR es:[edi],dx
  40536b:	jge    0x405306
  40536d:	hlt    
  40536e:	fcmovb st,st(6)
  405370:	outs   dx,BYTE PTR ds:[esi]
  405371:	jp     0x405353
  405373:	fwait
  405374:	lahf   
  405375:	je     0x40537c
  405377:	mov    eax,ds:0x1c57cfbf
  40537c:	push   ebp
  40537d:	popa   
  40537e:	cdq    
  40537f:	lea    edx,[ebx-0x80]
  405382:	pop    ebp
  405383:	out    dx,al
  405384:	cmc    
  405385:	mov    ebp,0xd59721d8
  40538a:	js     0x4053cf
  40538c:	sbb    ebx,esi
  40538e:	addr16 hlt 
  405390:	neg    DWORD PTR [esi-0x9f883f]
  405396:	hlt    
  405397:	xchg   esp,eax
  405398:	mov    bh,0xe1
  40539a:	adc    DWORD PTR ds:0x9129afb9,0x55f83c26
  4053a4:	add    BYTE PTR gs:[esi],0xb5
  4053a8:	and    ebp,DWORD PTR [ecx-0x79]
  4053ab:	cmp    BYTE PTR [di],ah
  4053ae:	xor    bl,BYTE PTR [esi-0xe182860]
  4053b4:	xchg   ebx,eax
  4053b5:	sub    dh,BYTE PTR [esi]
  4053b7:	inc    ecx
  4053b8:	(bad)  
  4053b9:	(bad)  
  4053ba:	(bad)  [edi-0x6100a3d4]
  4053c0:	sahf   
  4053c1:	jl     0x40543d
  4053c3:	mov    dl,BYTE PTR [ecx]
  4053c5:	jb     0x405383
  4053c7:	arpl   ax,si
  4053c9:	mov    ebp,0x2c24b1f9
  4053ce:	cmc    
  4053cf:	int    0xdd
  4053d1:	inc    edi
  4053d2:	pushf  
  4053d3:	xchg   ebx,eax
  4053d4:	push   es
  4053d5:	xor    bl,dh
  4053d7:	or     edx,DWORD PTR [ecx+0x54]
  4053da:	xor    cl,BYTE PTR [ebx-0x22165d2d]
  4053e0:	cmp    eax,0x90dec56c
  4053e5:	cs sahf 
  4053e7:	int3   
  4053e8:	(bad)  
  4053e9:	mov    edx,0xa60e6442
  4053ee:	enter  0x4404,0x6d
  4053f2:	pop    edx
  4053f3:	jnp    0x4053c2
  4053f5:	mov    eax,ds:0x5f7d53fd
  4053fa:	daa    
  4053fb:	jle    0x405393
  4053fd:	fnstenv [ebx]
  4053ff:	sub    eax,DWORD PTR [esi]
  405401:	clc    
  405402:	call   0x7086:0x9db8846d
  405409:	sbb    BYTE PTR [ebx-0x21],0xed
  40540d:	mov    eax,DWORD PTR [edx-0x78]
  405410:	scas   eax,DWORD PTR es:[edi]
  405411:	into   
  405412:	cmp    DWORD PTR [edx],ecx
  405414:	mov    ebx,0x850b62cc
  405419:	out    0x62,al
  40541b:	or     DWORD PTR [ebx+eax*2-0xd81bc61],edi
  405422:	adc    bh,dh
  405424:	dec    ebp
  405425:	xor    ebx,DWORD PTR [edi]
  405427:	mov    cl,0x49
  405429:	mov    eax,0xcb1bcfdd
  40542e:	gs jmp 0x771c826
  405434:	shl    DWORD PTR [eax-0x3c],0xed
  405438:	cmp    BYTE PTR [ebx],cl
  40543a:	pushf  
  40543b:	dec    edi
  40543c:	(bad)
  405440:	pop    ds
  405441:	add    eax,0xca134d5
  405446:	cmc    
  405447:	xchg   DWORD PTR [ecx-0x578b5c18],esp
  40544d:	aaa    
  40544e:	xchg   ecx,eax
  40544f:	sub    eax,0x71981972
  405454:	daa    
  405455:	mov    dl,0x22
  405457:	add    BYTE PTR [ecx],cl
  405459:	xor    al,BYTE PTR [edx]
  40545b:	xchg   edx,eax
  40545c:	shl    BYTE PTR [ebx],cl
  40545e:	sub    esi,DWORD PTR [edi+0x6cfb1ca4]
  405464:	and    al,0x81
  405466:	pushw  es
  405468:	xchg   bh,ah
  40546a:	adc    esi,eax
  40546c:	mov    al,0x3b
  40546e:	xor    eax,0x7932ea4
  405473:	je     0x405447
  405475:	mov    dh,0xae
  405477:	adc    ebx,0xffffffea
  40547a:	xor    DWORD PTR [ecx-0x65],esi
  40547d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40547e:	sbb    edx,DWORD PTR [edi+0x79eded65]
  405484:	neg    DWORD PTR [ecx+0x15f730ef]
  40548a:	sbb    al,BYTE PTR [esi-0x5fc1e2e9]
  405490:	jmp    0x40542c
  405492:	shl    eax,1
  405494:	jle    0x40545d
  405496:	ret    
  405497:	outs   dx,DWORD PTR ds:[esi]
  405498:	int    0xc
  40549a:	jnp    0x405457
  40549c:	inc    ecx
  40549d:	mov    edi,0x82ce4b9c
  4054a2:	pop    edi
  4054a3:	pusha  
  4054a4:	cdq    
  4054a5:	call   0x312b90f6
  4054aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054ab:	sub    al,0xcc
  4054ad:	rcr    BYTE PTR [esp+eax*4+0x4fb690d4],0x20
  4054b5:	push   ds
  4054b6:	xor    al,0x50
  4054b8:	fst    QWORD PTR ds:0xcdfddd1d
  4054be:	mov    ah,0x71
  4054c0:	cld    
  4054c1:	inc    edx
  4054c2:	fisub  DWORD PTR [eax+0x291588ff]
  4054c8:	dec    BYTE PTR fs:[ecx+0x3a]
  4054cc:	nop
  4054cd:	retf   0xe980
  4054d0:	push   ecx
  4054d1:	xchg   esp,eax
  4054d2:	xor    eax,0x4c5b2b7d
  4054d7:	jmp    0x6427:0xb26991
  4054de:	(bad)  
  4054df:	pushf  
  4054e0:	add    al,0x29
  4054e2:	sub    DWORD PTR [esi-0x4],ecx
  4054e5:	pusha  
  4054e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054e7:	shr    BYTE PTR [eax+0x3b080697],1
  4054ed:	loop   0x4054d2
  4054ef:	xchg   ecx,eax
  4054f0:	jbe    0x405496
  4054f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054f3:	cld    
  4054f4:	mov    bl,0x6a
  4054f6:	jns    0x4054fd
  4054f8:	rol    DWORD PTR [eax-0x54],cl
  4054fb:	xor    edi,DWORD PTR ds:0x81ad7c4a
  405501:	pop    esp
  405502:	sbb    al,0x2e
  405504:	fwait
  405505:	cli    
  405506:	add    esi,ecx
  405508:	pop    eax
  405509:	je     0x4054cc
  40550b:	sub    DWORD PTR [ecx-0x6b4bf19f],0x63
  405512:	call   0xbd0c:0x280a8876
  405519:	cli    
  40551a:	fdiv   st,st(7)
  40551c:	out    0x2c,al
  40551e:	repnz and DWORD PTR [ebx+0x7f2b1718],ecx
  405525:	sub    edi,ebp
  405527:	push   ebx
  405528:	loope  0x4054c3
  40552a:	inc    eax
  40552b:	fiadd  DWORD PTR es:[eax]
  40552e:	jl     0x4054b2
  405530:	and    DWORD PTR [edx],ebp
  405532:	es (bad) 
  405534:	imul   esi,DWORD PTR [edi+eiz*4],0x2e
  405538:	inc    edx
  405539:	jbe    0x4054fb
  40553b:	ja     0x4055af
  40553d:	sub    al,0x38
  40553f:	adc    BYTE PTR ds:0x50f227e2,ch
  405545:	sub    DWORD PTR [ebp-0x1a873deb],edi
  40554b:	iret   
  40554c:	push   edx
  40554d:	(bad)  
  40554e:	sub    DWORD PTR [edx+eax*2],esp
  405551:	call   0x8254:0xa7490ba1
  405558:	dec    eax
  405559:	pop    ebp
  40555a:	lahf   
  40555b:	or     eax,0x892919e5
  405560:	xchg   edi,eax
  405561:	fwait
  405562:	ret    
  405563:	inc    ecx
  405564:	and    ch,BYTE PTR [ecx+0x2cef2777]
  40556a:	add    DWORD PTR [ecx-0x7dc66f4c],ecx
  405570:	sub    edi,DWORD PTR [esi+0x76]
  405573:	sahf   
  405574:	xchg   esi,eax
  405575:	dec    edx
  405576:	push   cs
  405577:	mov    esp,eax
  405579:	mov    eax,ds:0x4af7fe83
  40557e:	cmp    bl,BYTE PTR [edx+0x235629ce]
  405584:	adc    al,BYTE PTR [ebx-0x8]
  405587:	or     al,0x26
  405589:	add    al,0x27
  40558b:	test   dh,cl
  40558d:	adc    edi,edx
  40558f:	mov    eax,ds:0x83945131
  405594:	or     al,0x62
  405596:	pusha  
  405597:	mov    ah,0x3e
  405599:	(bad)  
  40559a:	pop    esi
  40559b:	mov    ah,BYTE PTR [edx]
  40559d:	nop
  40559e:	ins    DWORD PTR es:[edi],dx
  40559f:	mov    esi,DWORD PTR [edi]
  4055a1:	dec    edi
  4055a2:	loope  0x4055cb
  4055a4:	xchg   DWORD PTR [edx+0x2a20e767],esp
  4055aa:	aam    0x16
  4055ac:	push   eax
  4055ad:	dec    ebp
  4055ae:	sub    eax,0xea228ba0
  4055b3:	jge    0x4055ad
  4055b5:	sub    DWORD PTR [ebx],edi
  4055b7:	jb     0x405612
  4055b9:	adc    DWORD PTR [eax],ebx
  4055bb:	(bad)  
  4055bd:	aaa    
  4055be:	xor    BYTE PTR [edx-0x2c],0xf9
  4055c2:	jle    0x405640
  4055c4:	inc    eax
  4055c5:	pop    ebp
  4055c6:	daa    
  4055c7:	mov    es,WORD PTR [eax-0x11]
  4055ca:	imul   eax,DWORD PTR [esi+0x510be575],0x2f
  4055d1:	xchg   esp,eax
  4055d2:	dec    ecx
  4055d3:	pop    esp
  4055d4:	enter  0x7152,0x1b
  4055d8:	xor    eax,0x2953dbac
  4055dd:	mov    bl,0xbf
  4055df:	push   ecx
  4055e0:	outs   dx,BYTE PTR ds:[esi]
  4055e1:	fsubr  DWORD PTR ds:0x4e776f87
  4055e7:	(bad)  
  4055e8:	pop    esp
  4055e9:	inc    esi
  4055ea:	and    al,0x2
  4055ec:	std    
  4055ed:	loopne 0x40558b
  4055ef:	sbb    DWORD PTR [ebx+0x73e4df0e],eax
  4055f5:	(bad)  
  4055f6:	les    edx,FWORD PTR [edi+0x376d827d]
  4055fc:	popa   
  4055fd:	bound  ecx,QWORD PTR [eax]
  4055ff:	aad    0x92
  405601:	scas   al,BYTE PTR es:[edi]
  405602:	test   DWORD PTR [edx+0x401be459],0x7f4d643a
  40560c:	inc    ebp
  40560d:	call   0x14bd:0x5016dc58
  405614:	inc    ebp
  405615:	aas    
  405616:	sbb    ebx,DWORD PTR [edx+0x6121e00]
  40561c:	push   es
  40561d:	(bad)  
  40561e:	out    0x21,eax
  405620:	adc    DWORD PTR [edx+0x4910f906],ebx
  405626:	addr16 pop ecx
  405628:	pop    es
  405629:	mov    DWORD PTR [eax-0x17],ebp
  40562c:	sub    al,0xf1
  40562e:	imul   BYTE PTR [ebx]
  405630:	ss mov ebx,0x4b9e375a
  405636:	mov    DWORD PTR [edx+0x3cf3cf4c],esp
  40563c:	cmp    al,0x13
  40563e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40563f:	add    ebx,ebp
  405641:	sbb    BYTE PTR [edi+0x21],bl
  405644:	dec    ebx
  405645:	pop    edx
  405646:	fadd   st(5),st
  405648:	rcr    BYTE PTR [ecx-0x111a9d03],0x9
  40564f:	mov    bl,dl
  405651:	inc    edi
  405652:	sub    eax,0xceeed2af
  405657:	jecxz  0x405649
  405659:	mov    ch,0x20
  40565b:	test   al,0xdb
  40565d:	sub    ecx,DWORD PTR [ecx]
  40565f:	scas   al,BYTE PTR es:[edi]
  405660:	jg     0x4056a8
  405662:	adc    eax,0xc8458307
  405667:	pop    esi
  405668:	push   0x4a4f27e1
  40566d:	leave  
  40566e:	icebp  
  40566f:	ret    0x1f8e
  405672:	push   0x1c8d523d
  405677:	imul   edi,DWORD PTR ds:0xc0e5f993,0x48
  40567e:	dec    eax
  40567f:	cmp    bh,BYTE PTR [esi+0x6]
  405682:	bound  ecx,QWORD PTR [ebx]
  405684:	or     cl,bl
  405686:	js     0x40569d
  405688:	add    al,0x99
  40568a:	loopne 0x40570a
  40568c:	in     eax,dx
  40568d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40568e:	jg     0x4056fe
  405690:	lods   eax,DWORD PTR ds:[esi]
  405691:	adc    BYTE PTR [ebp-0x1f],ch
  405694:	(bad)
  405698:	mov    eax,0x32ff5025
  40569d:	inc    eax
  40569e:	(bad)
  4056a2:	std    
  4056a3:	dec    edx
  4056a4:	aam    0xe2
  4056a6:	xchg   ecx,eax
  4056a8:	ins    DWORD PTR es:[edi],dx
  4056a9:	pop    ds
  4056aa:	push   esp
  4056ab:	adc    eax,0xd486e16f
  4056b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056b1:	sub    eax,0xde2004e4
  4056b6:	add    eax,0xbcb54fb0
  4056bb:	stos   DWORD PTR es:[edi],eax
  4056bc:	rcr    dl,0xff
  4056bf:	outs   dx,BYTE PTR ds:[esi]
  4056c0:	and    dl,BYTE PTR cs:0xa064f9b1
  4056c7:	pop    esp
  4056c8:	mov    dl,0x1d
  4056ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056cb:	push   0xffffff89
  4056cd:	ficomp WORD PTR [esi+0x5002b07b]
  4056d3:	push   0xffffffd7
  4056d5:	call   0xd7d8:0x456b6a66
  4056dc:	sbb    ch,BYTE PTR [bp+0x6ae8]
  4056e1:	xchg   ecx,eax
  4056e2:	retf   
  4056e3:	sbb    eax,0xb8dc7936
  4056e8:	outs   dx,BYTE PTR ds:[esi]
  4056e9:	arpl   bp,sp
  4056eb:	fdivr  QWORD PTR fs:[edx-0x4b5e47b3]
  4056f2:	mov    DWORD PTR [ebx-0x40],esp
  4056f5:	pop    es
  4056f6:	jmp    0x5c50:0xe1f7ffc0
  4056fd:	leave  
  4056fe:	(bad)  
  4056ff:	out    0xfa,al
  405701:	std    
  405702:	shl    DWORD PTR [eax],1
  405704:	iret   
  405705:	lea    edi,[ebx+esi*1]
  405708:	inc    eax
  405709:	sbb    ebp,DWORD PTR [ebx]
  40570b:	xlat   BYTE PTR ds:[ebx]
  40570c:	inc    ebx
  40570d:	mov    bl,BYTE PTR [edx-0x2bcfdb9e]
  405713:	push   edx
  405714:	lds    ebx,FWORD PTR [edi]
  405716:	test   edx,ecx
  405718:	mov    dh,0x2c
  40571a:	pop    ebp
  40571b:	mov    ds:0x8e38a103,al
  405720:	in     eax,0x27
  405722:	call   0xcc4f0706
  405727:	push   ebx
  405728:	mov    cl,BYTE PTR cs:[ebp+0x8]
  40572c:	lods   al,BYTE PTR ds:[esi]
  40572d:	cmc    
  40572e:	mov    ebp,DWORD PTR [eax]
  405730:	in     eax,dx
  405731:	(bad)  
  405732:	cmp    BYTE PTR [ecx],al
  405734:	mov    ah,BYTE PTR [eax-0x55]
  405737:	pusha  
  405738:	cs das 
  40573a:	or     eax,0x21a7cc38
  40573f:	pop    esi
  405740:	add    al,0x85
  405742:	call   0xbd35c041
  405747:	jg     0x40571f
  405749:	pushf  
  40574a:	xchg   DWORD PTR [edx],esi
  40574c:	mov    DWORD PTR [ecx+ebp*2-0x3d3308f5],0xc5763b49
  405757:	cli    
  405758:	adc    eax,0x302104a8
  40575d:	ja     0x405703
  40575f:	test   DWORD PTR [edi+0x17],ebx
  405762:	dec    ebp
  405763:	fs repz shr edx,cl
  405767:	in     al,dx
  405768:	bnd ret 
  40576a:	rol    DWORD PTR [edi-0x5d07fa40],1
  405770:	xchg   edx,eax
  405771:	mov    bl,0x72
  405773:	dec    ebp
  405774:	mov    ah,0xf3
  405776:	shl    BYTE PTR [edi],cl
  405778:	or     dl,BYTE PTR [edx]
  40577a:	mov    esp,DWORD PTR [edx]
  40577c:	stos   BYTE PTR es:[edi],al
  40577d:	push   edi
  40577e:	sbb    ch,BYTE PTR [esi-0x15178f4e]
  405784:	cld    
  405785:	jo     0x4057aa
  405787:	pop    ebp
  405788:	xchg   edx,eax
  405789:	ds iret 
  40578b:	sub    al,0x1d
  40578d:	push   0x7
  40578f:	test   DWORD PTR [ebx+edi*8],eax
  405792:	dec    ebp
  405793:	popa   
  405794:	push   eax
  405795:	add    al,0x15
  405797:	mov    BYTE PTR ds:0x6e1eac54,ch
  40579d:	and    BYTE PTR fs:[eax],bl
  4057a0:	add    al,0x2e
  4057a2:	pop    ebp
  4057a3:	add    edi,esp
  4057a5:	adc    al,0x32
  4057a7:	pop    ds
  4057a8:	mov    ah,ah
  4057aa:	cwde   
  4057ab:	aaa    
  4057ac:	das    
  4057ad:	adc    al,0xe6
  4057af:	and    BYTE PTR [edi+0x32],bl
  4057b2:	pop    ebx
  4057b3:	inc    ecx
  4057b4:	into   
  4057b5:	das    
  4057b6:	inc    ebp
  4057b7:	ret    0x4f1d
  4057ba:	pop    ecx
  4057bb:	push   ds
  4057bc:	popf   
  4057bd:	ds pop esp
  4057bf:	adc    DWORD PTR [edi+0x78],edi
  4057c2:	dec    esp
  4057c3:	lods   al,BYTE PTR ds:[esi]
  4057c4:	pop    ecx
  4057c5:	mov    BYTE PTR [esi+ebx*2+0x35bb6509],al
  4057cc:	push   ebx
  4057cd:	int3   
  4057ce:	aad    0xcd
  4057d0:	aas    
  4057d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057d2:	(bad)  
  4057d3:	cmp    ch,cl
  4057d5:	push   edx
  4057d6:	stc    
  4057d7:	arpl   WORD PTR [ebx],cx
  4057d9:	lea    ebx,[ebx+eax*8-0x1d92b4b5]
  4057e0:	adc    ecx,esp
  4057e2:	not    eax
  4057e4:	jl     0x40583c
  4057e6:	sahf   
  4057e7:	inc    ebp
  4057e8:	jae    0x4057ad
  4057ea:	cmp    eax,0xc4b4f9b4
  4057ef:	ficom  DWORD PTR [esi]
  4057f1:	jns    0x405841
  4057f3:	jne    0x405837
  4057f5:	test   DWORD PTR ds:0xcf4eb650,eax
  4057fb:	mov    ds:0x5df7962a,al
  405800:	ret    
  405801:	pop    esp
  405802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405803:	sbb    al,0x56
  405805:	sbb    esp,DWORD PTR [edx-0x7f86a058]
  40580b:	rcr    edi,1
  40580d:	and    eax,0x63595967
  405812:	test   DWORD PTR [eax],esp
  405814:	jge    0x4057d5
  405816:	cmp    BYTE PTR ds:0xefd8daee,0x9c
  40581d:	cmp    DWORD PTR [ecx+0x14],0xffffff86
  405821:	ret    
  405822:	mov    al,0xa2
  405824:	mov    al,0x3
  405826:	fnstsw WORD PTR [esi]
  405828:	call   0xed2dd046
  40582d:	push   edx
  40582e:	scas   al,BYTE PTR es:[edi]
  40582f:	sbb    dh,ah
  405831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405832:	adc    esi,ebp
  405834:	sti    
  405835:	inc    edx
  405836:	gs loope 0x4057de
  405839:	dec    ecx
  40583a:	xchg   ecx,eax
  40583b:	mov    WORD PTR [di-0x6114],gs
  405840:	jo     0x4057cb
  405842:	out    dx,eax
  405843:	adc    ebp,esp
  405845:	inc    edx
  405846:	sar    BYTE PTR [eax],0x14
  405849:	push   esi
  40584a:	into   
  40584b:	sbb    ch,BYTE PTR [edi+eax*4-0x55]
  40584f:	mov    ds:0x6e84bf93,al
  405854:	leave  
  405855:	adc    ecx,DWORD PTR [esi-0x18]
  405858:	int    0x9b
  40585a:	sbb    DWORD PTR [esi],ebx
  40585c:	mov    BYTE PTR [esi],bh
  40585e:	mov    ch,0x2f
  405860:	leave  
  405861:	fcom   DWORD PTR [esi-0x6]
  405864:	mov    al,ds:0xdf89508b
  405869:	pushf  
  40586a:	pop    es
  40586b:	mov    ecx,0x5ed66e57
  405870:	icebp  
  405871:	test   edx,ebp
  405873:	jmp    0x6a26:0x62bcacde
  40587a:	add    ecx,esp
  40587c:	ret    0x3a14
  40587f:	jp     0x405830
  405881:	cmp    al,0x3f
  405883:	sub    al,0xe0
  405885:	(bad)  
  405886:	scas   eax,DWORD PTR es:[edi]
  405887:	xchg   ebx,eax
  405888:	(bad)  
  405889:	mov    cl,0x54
  40588b:	shl    dh,1
  40588d:	test   BYTE PTR [edx+0x203f9019],dl
  405893:	cwde   
  405894:	jl     0x405880
  405896:	xchg   esi,eax
  405897:	jbe    0x405847
  405899:	sub    DWORD PTR [ebx+0x61893cc4],esi
  40589f:	sbb    eax,0x509a859a
  4058a4:	mov    esp,0x2a4c3263
  4058a9:	fcomip st,st(0)
  4058ab:	xchg   esi,eax
  4058ac:	mov    ecx,0x515441c8
  4058b1:	mov    ch,0xf5
  4058b3:	std    
  4058b4:	pop    ebx
  4058b5:	repnz sahf 
  4058b7:	ret    0xb761
  4058ba:	lea    ebp,[esi-0x392d4138]
  4058c0:	fwait
  4058c1:	pop    esi
  4058c2:	out    0x2c,eax
  4058c4:	sbb    DWORD PTR [ebp+0x7d0be4cb],eax
  4058ca:	mov    esp,0x6849a7f3
  4058cf:	clc    
  4058d0:	jno    0x40592f
  4058d2:	js     0x4058e4
  4058d4:	pop    ebx
  4058d5:	imul   ebp,ebp,0x422312b1
  4058db:	jb     0x405956
  4058dd:	inc    esp
  4058de:	inc    edi
  4058df:	mov    ds:0xc27d3cfd,eax
  4058e4:	je     0x4058d8
  4058e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058e7:	inc    ecx
  4058e8:	(bad)  
  4058eb:	cs in  eax,0xcd
  4058ee:	add    al,0xd4
  4058f0:	push   ecx
  4058f1:	sbb    ecx,DWORD PTR [edi+0x14c7c9b3]
  4058f7:	test   DWORD PTR [edx-0x315df9bc],ecx
  4058fd:	fimul  DWORD PTR [edi-0x2f]
  405900:	out    0x32,al
  405902:	test   BYTE PTR [esi-0x2878fc56],ah
  405908:	lahf   
  405909:	push   0x1cbe8683
  40590e:	or     ah,BYTE PTR [edx+0x2c]
  405911:	div    DWORD PTR [edx+edi*8]
  405914:	mov    edx,0xb92914d8
  405919:	jmp    DWORD PTR [edx+eiz*4-0x198e5588]
  405920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405921:	xchg   edi,eax
  405922:	test   BYTE PTR [eax+0x63483a38],bh
  405928:	mov    WORD PTR [ebp+0x7d],ss
  40592b:	shr    BYTE PTR [esi+edx*8+0x4bd4037c],1
  405932:	popa   
  405933:	ds xor eax,0x78817797
  405939:	dec    edx
  40593a:	pop    edx
  40593b:	jmp    0x405912
  40593d:	jge    0x40590c
  40593f:	dec    ebx
  405940:	into   
  405941:	lods   al,BYTE PTR ds:[esi]
  405942:	scas   eax,DWORD PTR es:[edi]
  405943:	jmp    0x8c31:0x9e45d04b
  40594a:	sub    DWORD PTR [esi+0x59226b],esi
  405950:	cmc    
  405951:	pop    ebp
  405952:	add    BYTE PTR ds:0xdd48632a,ch
  405958:	shl    DWORD PTR [edi-0xb],cl
  40595b:	jp     0x405981
  40595d:	and    eax,0x591d9fe2
  405962:	shr    dl,cl
  405964:	call   FWORD PTR [eax+ebp*1-0x6306ee0]
  40596b:	cwde   
  40596c:	pop    ebx
  40596d:	(bad)  
  40596e:	xor    al,al
  405970:	lds    esi,FWORD PTR [edi+0x5d543864]
  405976:	jne    0x716294a7
  40597c:	test   al,0x5b
  40597e:	(bad)  
  40597f:	fisubr WORD PTR [edx]
  405981:	adc    ax,0xda67
  405985:	pop    esp
  405986:	dec    edi
  405987:	push   cs
  405988:	add    BYTE PTR [edx],bh
  40598a:	jmp    0xe6688cf0
  40598f:	cli    
  405990:	scas   al,BYTE PTR es:[edi]
  405991:	pop    ss
  405992:	call   0xc1eaba1
  405997:	cwde   
  405998:	pop    ebx
  405999:	add    BYTE PTR [edi],cl
  40599b:	es mov edx,0xfe5a932a
  4059a1:	aaa    
  4059a2:	add    BYTE PTR ds:0x38d119ff,bh
  4059a8:	mov    edi,0x3f957e83
  4059ad:	daa    
  4059ae:	sbb    ecx,DWORD PTR [ebp+0x16]
  4059b1:	lds    edi,FWORD PTR [edi]
  4059b3:	mov    al,0x9f
  4059b5:	inc    edi
  4059b6:	out    dx,al
  4059b7:	cmp    edx,DWORD PTR [ebx+ebx*8+0x51]
  4059bb:	repnz mov ebx,0xf734f462
  4059c1:	push   ebp
  4059c2:	mov    dl,0x5
  4059c4:	and    DWORD PTR [eax+0x47b1a40a],edi
  4059ca:	xchg   edi,ebx
  4059cc:	fcmovnu st,st(5)
  4059ce:	int    0xa8
  4059d0:	push   edx
  4059d1:	clc    
  4059d2:	not    BYTE PTR [ecx-0x22]
  4059d5:	add    bh,BYTE PTR [esi]
  4059d7:	ss ja  0x405a35
  4059da:	cmp    esp,ecx
  4059dc:	jmp    0x1776:0xf89f2217
  4059e3:	int    0xf8
  4059e5:	es sahf 
  4059e7:	(bad)  
  4059e8:	sub    ax,0xfc18
  4059ec:	imul   edi,DWORD PTR ds:0x3142b450,0xffffffaa
  4059f3:	push   ecx
  4059f4:	es into 
  4059f6:	mov    bl,0x70
  4059f8:	inc    ebx
  4059f9:	shl    BYTE PTR [eax-0xd17bcd4],cl
  4059ff:	dec    edx
  405a00:	out    dx,eax
  405a01:	and    ecx,DWORD PTR [esi+0x4abf94a3]
  405a07:	push   edi
  405a08:	es inc edi
  405a0a:	jns    0x405a47
  405a0c:	sbb    bl,BYTE PTR [esi]
  405a0e:	adc    cl,BYTE PTR [ecx+0xe7d3c66]
  405a14:	jo     0x4059ee
  405a16:	or     edi,esi
  405a18:	xor    ch,BYTE PTR [edi-0x48721abd]
  405a1e:	mov    ebp,ecx
  405a20:	jnp    0x405a7b
  405a22:	rcl    DWORD PTR [edx-0x4d332e27],cl
  405a28:	cli    
  405a29:	mov    edx,0x5d72849e
  405a2e:	stc    
  405a2f:	sub    bl,BYTE PTR [edi]
  405a31:	and    BYTE PTR [ebx],dh
  405a33:	in     al,dx
  405a34:	or     BYTE PTR [eax-0x14],0xb7
  405a38:	inc    edi
  405a39:	ss mov esi,0xfe0a38f6
  405a3f:	mov    ds:0x495a30ef,al
  405a44:	dec    esp
  405a45:	mov    ch,0x34
  405a47:	sbb    eax,DWORD PTR ds:0xdac8950
  405a4d:	dec    ecx
  405a4e:	mov    bh,0xf5
  405a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a51:	and    DWORD PTR [ebx],edx
  405a53:	sbb    BYTE PTR [ebx-0x457d052a],0x56
  405a5a:	fnstenv [ebx+0x2f]
  405a5d:	mov    ds:0xa582003e,al
  405a62:	inc    edi
  405a63:	lds    edi,FWORD PTR [ebx+0x195ed466]
  405a69:	jmp    0x5cf710d7
  405a6e:	ret    
  405a6f:	inc    ecx
  405a70:	mov    eax,0x63601f93
  405a75:	sahf   
  405a76:	xlat   BYTE PTR ds:[ebx]
  405a77:	cmp    ebx,DWORD PTR cs:[edi-0x10808a36]
  405a7e:	cmp    esp,DWORD PTR [edi]
  405a80:	icebp  
  405a81:	add    al,0x6f
  405a83:	pop    edi
  405a84:	mov    dh,0x6f
  405a86:	sbb    BYTE PTR [edx],ah
  405a88:	or     bl,BYTE PTR [edx-0x1fb4f992]
  405a8e:	pop    es
  405a8f:	push   0xf6108b70
  405a94:	hlt    
  405a95:	test   DWORD PTR [ecx+0x4d],esp
  405a98:	fldcw  WORD PTR [ecx-0x767370bc]
  405a9e:	mov    bl,0xe0
  405aa0:	repz out 0x5a,al
  405aa3:	es mov ebp,0x807bc888
  405aa9:	mov    bh,0xfc
  405aab:	cmp    eax,0xab47bc6d
  405ab0:	or     BYTE PTR [ecx-0x437f970f],bh
  405ab6:	mov    esi,0x3e61b7e2
  405abb:	and    ah,BYTE PTR ds:0x1e08648b
  405ac1:	pop    es
  405ac2:	cmc    
  405ac3:	icebp  
  405ac4:	mov    ecx,0x85f0fcfe
  405ac9:	std    
  405aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405acb:	mov    cl,0x33
  405acd:	pop    ds
  405ace:	stc    
  405acf:	lahf   
  405ad0:	inc    edx
  405ad1:	or     DWORD PTR [esi],esi
  405ad3:	adc    cl,BYTE PTR [eax]
  405ad5:	cmp    al,bh
  405ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad8:	cli    
  405ad9:	sub    dh,BYTE PTR [edx+ecx*1+0x70]
  405add:	std    
  405ade:	dec    ebx
  405adf:	repnz push eax
  405ae1:	adc    ah,bl
  405ae3:	cwde   
  405ae4:	cmp    DWORD PTR [eax+0x66d3c8c6],esi
  405aea:	shl    DWORD PTR [eax],0xc4
  405aed:	xor    BYTE PTR [ebp+esi*4-0x742f913],bh
  405af4:	and    esp,esi
  405af6:	adc    eax,0x617df229
  405afb:	pop    es
  405afc:	gs dec edi
  405afe:	jmp    0x3626:0x3ddcae40
  405b05:	add    al,0x31
  405b07:	fisttp QWORD PTR [eax+0x59907e5a]
  405b0d:	lods   al,BYTE PTR ds:[esi]
  405b0e:	jo     0x405b14
  405b10:	inc    ecx
  405b11:	cli    
  405b12:	add    al,0xb0
  405b14:	ret    
  405b15:	xchg   esp,eax
  405b16:	(bad)  
  405b17:	push   ecx
  405b18:	cwde   
  405b19:	or     DWORD PTR [edi+eiz*8+0x11],esp
  405b1d:	add    DWORD PTR [edi],0x58525529
  405b23:	mov    ecx,0x1a613302
  405b28:	add    eax,0x8e108c67
  405b2d:	sahf   
  405b2e:	xchg   ecx,eax
  405b2f:	(bad)  
  405b31:	iret   
  405b32:	repnz rcr eax,cl
  405b35:	mov    ebx,0x21ef66f
  405b3a:	lods   al,BYTE PTR ds:[esi]
  405b3b:	dec    ecx
  405b3c:	pop    eax
  405b3d:	stc    
  405b3e:	sub    DWORD PTR [esi+0x6f],0xffffff97
  405b42:	pop    edi
  405b43:	dec    esp
  405b44:	lea    ebp,[edx+0x4f08fefb]
  405b4a:	hlt    
  405b4b:	gs inc ebx
  405b4d:	aam    0xa2
  405b4f:	push   ebp
  405b50:	or     al,0xaf
  405b52:	lahf   
  405b53:	xlat   BYTE PTR ds:[ebx]
  405b54:	jo     0x405b57
  405b56:	inc    esi
  405b57:	xchg   ebp,eax
  405b58:	sbb    al,0x3e
  405b5a:	ins    BYTE PTR es:[edi],dx
  405b5b:	jbe    0x405aeb
  405b5d:	fcmovnb st,st(0)
  405b5f:	out    dx,al
  405b60:	sub    eax,0xf68aca40
  405b65:	mov    cs,WORD PTR cs:[ecx]
  405b68:	idiv   DWORD PTR [eax-0x38]
  405b6b:	inc    edx
  405b6c:	cmp    BYTE PTR [ecx+0x68],0xeb
  405b70:	(bad)  
  405b71:	aas    
  405b72:	xchg   ebx,eax
  405b73:	(bad)  
  405b74:	icebp  
  405b75:	mov    bh,0x6b
  405b77:	push   ecx
  405b78:	xor    DWORD PTR ds:0x929a6992,esi
  405b7e:	inc    edi
  405b7f:	je     0x405bfc
  405b81:	fsub   QWORD PTR [edx+0x56]
  405b84:	and    DWORD PTR [ebp+0x55],0x989509ee
  405b8b:	push   0x4b
  405b8d:	mov    bl,0xed
  405b8f:	retf   0xa795
  405b92:	add    ebx,eax
  405b94:	sub    al,0xbc
  405b96:	popf   
  405b97:	dec    edi
  405b98:	push   0xa
  405b9a:	dec    edi
  405b9b:	shl    DWORD PTR [esi],0x4a
  405b9e:	and    dh,ch
  405ba0:	push   ds
  405ba1:	sbb    dl,BYTE PTR [eax]
  405ba3:	adc    DWORD PTR [edi],eax
  405ba5:	bound  edx,QWORD PTR [ebx+0x31]
  405ba8:	and    bl,BYTE PTR [ecx+edi*2-0x43b57ec5]
  405baf:	dec    ebx
  405bb0:	fs ins BYTE PTR es:[edi],dx
  405bb2:	cmc    
  405bb3:	dec    ecx
  405bb4:	adc    esi,ebp
  405bb6:	sar    DWORD PTR [eax-0x31],cl
  405bb9:	out    dx,eax
  405bba:	xor    DWORD PTR [ecx-0x68],0xd49caa04
  405bc1:	jne    0x405bd8
  405bc3:	shr    BYTE PTR [ebp-0x6a],1
  405bc6:	add    esi,ebp
  405bc8:	sahf   
  405bc9:	aam    0xdf
  405bcb:	es pop ebp
  405bcd:	pushf  
  405bce:	add    DWORD PTR [esi],ebx
  405bd0:	lods   eax,DWORD PTR ds:[esi]
  405bd1:	inc    eax
  405bd2:	cmp    edx,DWORD PTR [esi+ebp*1-0x63]
  405bd6:	scas   eax,DWORD PTR es:[edi]
  405bd7:	aad    0x15
  405bd9:	xchg   esi,eax
  405bda:	xor    BYTE PTR [ebx+0x5d06f278],dh
  405be0:	stos   DWORD PTR es:[edi],eax
  405be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405be2:	xchg   edi,eax
  405be3:	jle    0x405c38
  405be5:	loop   0x405bb6
  405be7:	retf   0x69b7
  405bea:	mov    bh,0x69
  405bec:	mov    al,ds:0xef01682f
  405bf1:	aad    0x4c
  405bf3:	pushf  
  405bf4:	and    eax,0x3878410d
  405bf9:	adc    BYTE PTR [eiz*2+0x36d28b16],ah
  405c00:	inc    edx
  405c01:	pop    edi
  405c02:	call   FWORD PTR [ecx]
  405c04:	arpl   bx,ax
  405c06:	lea    esi,[ecx]
  405c08:	add    edx,edx
  405c0a:	sbb    al,BYTE PTR [ebx+0x2b]
  405c0d:	cmp    ebp,DWORD PTR [eax-0x24e12304]
  405c13:	scas   eax,DWORD PTR es:[edi]
  405c14:	xor    ecx,ecx
  405c16:	popf   
  405c17:	sahf   
  405c18:	jge    0x405bc2
  405c1a:	fcmovnu st,st(3)
  405c1c:	push   esi
  405c1d:	dec    ecx
  405c1e:	out    dx,al
  405c1f:	pop    ecx
  405c20:	iret   
  405c21:	adc    BYTE PTR [ebx+edx*1-0x4c8cf161],bl
  405c28:	pop    esi
  405c29:	and    ah,BYTE PTR [ecx+0x779020c9]
  405c2f:	mov    edx,cs
  405c31:	mov    ebx,0x601344fa
  405c36:	mov    WORD PTR [ebp-0x43],es
  405c39:	or     ebp,ecx
  405c3b:	ficomp DWORD PTR fs:[eax+0x706bc084]
  405c42:	mov    eax,0x3f14fdd
  405c47:	pop    es
  405c48:	cmp    dh,ah
  405c4a:	aaa    
  405c4b:	mov    ds:0xf03eac22,eax
  405c50:	mov    bh,0x4c
  405c52:	daa    
  405c53:	nop
  405c54:	push   ecx
  405c55:	push   ecx
  405c56:	xor    al,ch
  405c58:	cmc    
  405c59:	and    eax,0xbfda0424
  405c5e:	jae    0x405cac
  405c60:	cmp    DWORD PTR [esi+0x1d],esp
  405c63:	imul   esi,DWORD PTR [edx],0x77
  405c66:	ja     0x405cab
  405c68:	xchg   edx,eax
  405c69:	sub    al,al
  405c6b:	imul   edi
  405c6d:	xchg   edi,eax
  405c6e:	cmp    eax,0x7f72f959
  405c73:	xor    DWORD PTR [ecx-0x1218db29],esi
  405c79:	dec    eax
  405c7a:	in     eax,dx
  405c7b:	jmp    0x164cebe1
  405c80:	sti    
  405c81:	mov    bh,0xce
  405c83:	mov    DWORD PTR [ebp+0x4b4547fa],ebp
  405c89:	lds    esp,FWORD PTR [edx]
  405c8b:	mov    eax,esp
  405c8d:	pop    es
  405c8e:	mov    al,ds:0x462b4610
  405c93:	icebp  
  405c94:	loope  0x405c61
  405c96:	mov    ?,eax
  405c98:	cld    
  405c99:	jecxz  0x405c7b
  405c9b:	popa   
  405c9c:	cmp    BYTE PTR [edi+0x31],dh
  405c9f:	bound  esp,QWORD PTR [ecx+0x52]
  405ca2:	out    0x8,eax
  405ca4:	xchg   edx,eax
  405ca5:	test   al,0x31
  405ca7:	mov    dh,0x19
  405ca9:	shl    BYTE PTR [edx],cl
  405cab:	adc    eax,0xac12749d
  405cb0:	add    ebx,DWORD PTR [eax+0x59]
  405cb3:	(bad)  
  405cb5:	cmp    al,0x74
  405cb7:	fisubr WORD PTR [ebx]
  405cb9:	loopne 0x405d0b
  405cbb:	fldenv [ebx+ecx*8]
  405cbe:	in     al,0x4b
  405cc0:	stos   BYTE PTR es:[edi],al
  405cc1:	pop    ss
  405cc2:	in     eax,dx
  405cc3:	adc    cl,BYTE PTR [esi]
  405cc5:	cli    
  405cc6:	xor    al,0x4b
  405cc8:	dec    eax
  405cc9:	mov    DWORD PTR [edx-0x54],eax
  405ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ccd:	call   0xcce294de
  405cd2:	and    ebx,DWORD PTR [esi-0x4b6683d9]
  405cd8:	push   ebx
  405cd9:	inc    ebp
  405cda:	pusha  
  405cdb:	jne    0x405ccc
  405cdd:	in     al,0x2b
  405cdf:	inc    esp
  405ce0:	pop    ds
  405ce1:	daa    
  405ce2:	fsubr  st(3),st
  405ce4:	sbb    al,0x94
  405ce6:	std    
  405ce7:	push   edx
  405ce8:	jbe    0x405cb0
  405cea:	ret    0xe41f
  405ced:	inc    ebx
  405cee:	jmp    0x405d57
  405cf0:	je     0x405c89
  405cf2:	imul   ecx,DWORD PTR [ebp-0xf],0x3f
  405cf6:	mov    ds:0x800e2ffb,al
  405cfb:	jmp    0x405cef
  405cfd:	psrad  mm5,0x7d
  405d01:	inc    eax
  405d02:	ja     0x405d2a
  405d04:	jno    0x405d24
  405d06:	fsubr  DWORD PTR [ecx+0x26]
  405d09:	jno    0x405d76
  405d0b:	jge    0x405cff
  405d0d:	xor    BYTE PTR [ecx+0x79],bh
  405d10:	sbb    al,0xd5
  405d12:	mov    ebp,edi
  405d14:	cmc    
  405d15:	sbb    ecx,DWORD PTR [ecx-0x7a]
  405d18:	lods   al,BYTE PTR ds:[esi]
  405d19:	inc    ecx
  405d1a:	add    ah,ah
  405d1c:	bound  esi,QWORD PTR ds:0xd433dffd
  405d22:	imul   ecx,ecx,0x1fcdb7fd
  405d28:	mov    dh,dl
  405d2a:	jmp    0x405cf4
  405d2c:	inc    esp
  405d2d:	fldenv [ebx+0x3c8b8703]
  405d34:	cmc    
  405d35:	into   
  405d36:	jge    0x405d49
  405d38:	cmp    DWORD PTR [edi],esi
  405d3a:	sbb    ebx,esi
  405d3c:	mov    eax,0x3a5a6ed8
  405d41:	rol    dh,0xb1
  405d44:	or     ah,ah
  405d46:	retf   0x4c6e
  405d49:	push   ebp
  405d4a:	stc    
  405d4b:	dec    eax
  405d4c:	outs   dx,BYTE PTR ds:[esi]
  405d4d:	adc    edi,DWORD PTR [ebx+0x1bcad367]
  405d53:	sbb    BYTE PTR [ebp+0x2a],al
  405d56:	aad    0x9
  405d58:	fwait
  405d59:	gs (bad) 
  405d5b:	mov    edx,?
  405d5d:	cdq    
  405d5e:	mov    esi,0x7e4d011e
  405d63:	je     0x405d4b
  405d65:	not    DWORD PTR [esi]
  405d67:	pop    ebp
  405d68:	mov    ah,0xa1
  405d6a:	nop
  405d6b:	mov    esi,0x10e7cfb7
  405d70:	(bad)  
  405d71:	sar    DWORD PTR [esi+0x1340ede2],cl
  405d77:	dec    esi
  405d78:	retf   
  405d79:	or     al,BYTE PTR [eax+0x5451edc4]
  405d7f:	push   es
  405d80:	std    
  405d81:	fnstcw WORD PTR [ecx]
  405d83:	mov    eax,0xbd344f56
  405d88:	push   ecx
  405d89:	inc    ebx
  405d8a:	fcmovb st,st(2)
  405d8c:	add    BYTE PTR ds:[ebp-0x15],ch
  405d90:	pop    ds
  405d91:	pop    ss
  405d92:	jmp    0x1c0365ca
  405d97:	test   DWORD PTR [edx+0x0],ebx
  405d9a:	out    0x2a,al
  405d9c:	and    ebx,DWORD PTR ds:0x3f6b3ca9
  405da2:	(bad)  ds:0xfe853545
  405da8:	add    al,0xf6
  405daa:	cmp    al,0x1b
  405dac:	or     al,0xc
  405dae:	into   
  405daf:	mov    al,ds:0xa0d3c17
  405db4:	ins    DWORD PTR es:[edi],dx
  405db5:	aaa    
  405db6:	pop    eax
  405db7:	fidiv  WORD PTR [edx+0xa]
  405dba:	xchg   esi,eax
  405dbb:	and    esp,edi
  405dbd:	mov    ds:0xd4babf79,eax
  405dc2:	mov    al,0xd5
  405dc4:	pop    ss
  405dc5:	pop    esi
  405dc6:	fdiv   DWORD PTR [ebx-0x1ef1661c]
  405dcc:	leave  
  405dcd:	adc    DWORD PTR [esi+0x59],ebp
  405dd0:	pop    ds
  405dd1:	mov    edx,0x78cef8dd
  405dd6:	and    ch,dh
  405dd8:	out    dx,al
  405dd9:	cld    
  405dda:	dec    ebx
  405ddb:	cmp    dh,dh
  405ddd:	ret    
  405dde:	sti    
  405ddf:	inc    edx
  405de0:	sub    al,BYTE PTR [edx-0x3fca5ed1]
  405de6:	pop    ecx
  405de7:	inc    ebx
  405de8:	jecxz  0x405d6c
  405dea:	and    edx,DWORD PTR [ebp-0x22a8a86]
  405df0:	inc    ecx
  405df1:	icebp  
  405df2:	fmulp  st(1),st
  405df4:	inc    ecx
  405df5:	xchg   esp,eax
  405df6:	repnz xor edx,DWORD PTR [edx-0x7b]
  405dfa:	retf   0x15b5
  405dfd:	add    eax,0xb5da135a
  405e02:	cli    
  405e03:	pop    ds
  405e04:	sub    al,dl
  405e06:	push   esp
  405e07:	data16 jge 0x405e58
  405e0a:	jl     0x405e2e
  405e0c:	mov    WORD PTR [eax-0xb],?
  405e0f:	mov    esi,0x7eaa758a
  405e14:	mov    bl,BYTE PTR [eax+0x35]
  405e17:	push   ds
  405e18:	retf   
  405e19:	xchg   ebp,eax
  405e1a:	loopne 0x405dfa
  405e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e1d:	inc    esi
  405e1e:	xlat   BYTE PTR ds:[ebx]
  405e1f:	shl    esi,cl
  405e21:	xchg   esp,eax
  405e22:	(bad)  
  405e23:	fisubr DWORD PTR [esi]
  405e25:	mov    ds:0xf1b1f9a0,eax
  405e2a:	xchg   edi,eax
  405e2b:	add    al,0x32
  405e2d:	std    
  405e2e:	jnp    0x405e4c
  405e30:	xchg   BYTE PTR [ebx+0x4ef1a4d2],dh
  405e36:	int    0xf7
  405e38:	shl    DWORD PTR [ecx-0xc],cl
  405e3b:	rol    ebx,cl
  405e3d:	out    0x5e,al
  405e3f:	pop    edi
  405e40:	sbb    esp,DWORD PTR [edx-0x40fb51d4]
  405e46:	in     eax,0xbc
  405e48:	aas    
  405e49:	hlt    
  405e4a:	jl     0x405de4
  405e4c:	fstp   TBYTE PTR [edx]
  405e4e:	xor    esi,DWORD PTR [ecx+0x172dccba]
  405e54:	jge    0x405ddf
  405e56:	push   0x7
  405e58:	sub    eax,0xc04e1437
  405e5d:	inc    esi
  405e5e:	lahf   
  405e5f:	enter  0xb09c,0x17
  405e63:	jb     0x405e2e
  405e65:	pop    ebx
  405e66:	and    ebx,edi
  405e68:	pop    edx
  405e69:	cmp    BYTE PTR ss:[ebp-0x76],0xed
  405e6e:	mov    esi,DWORD PTR [edx+0x35]
  405e71:	loop   0x405e9e
  405e73:	mov    edx,0x90194194
  405e78:	pop    esi
  405e79:	mov    al,ds:0xf6108020
  405e7e:	xchg   ebx,eax
  405e7f:	mov    bl,0x67
  405e81:	pop    edx
  405e82:	not    ah
  405e84:	sub    ebx,eax
  405e86:	mov    ds:0x3b81ae70,eax
  405e8b:	nop
  405e8c:	sbb    edx,DWORD PTR [ebx]
  405e8e:	xchg   edi,eax
  405e8f:	jo     0x405e7f
  405e91:	popw   es
  405e93:	push   esi
  405e94:	mov    esi,0x764e66f0
  405e99:	mov    edi,0x6fa8c706
  405e9e:	pop    ss
  405e9f:	es pop esi
  405ea1:	in     al,dx
  405ea2:	aam    0x30
  405ea4:	cmc    
  405ea5:	mov    ebp,0xa348deef
  405eaa:	aam    0xa0
  405eac:	and    DWORD PTR [ebx+0x6e824a43],edi
  405eb2:	mov    eax,ds:0xae3ff417
  405eb7:	jge    0x405e5a
  405eb9:	jae    0x405e5a
  405ebb:	neg    BYTE PTR [edi-0x2626d890]
  405ec1:	stos   DWORD PTR es:[edi],eax
  405ec2:	mov    gs,edx
  405ec4:	pushf  
  405ec5:	xchg   ecx,eax
  405ec6:	mov    dh,0x40
  405ec8:	jmp    0x405eab
  405eca:	sub    dh,BYTE PTR [eax]
  405ecc:	daa    
  405ecd:	or     eax,0xc5ef7d0b
  405ed2:	mov    WORD PTR ds:0xe9a4ef68,ss
  405ed8:	jle    0x405ef8
  405eda:	ret    0xc03c
  405edd:	call   0x8dbefbe6
  405ee2:	xor    DWORD PTR [edi+0x33640ae0],edx
  405ee8:	loopne 0x405ee1
  405eea:	js     0x405e89
  405eec:	js     0x405ec5
  405eee:	and    eax,ebx
  405ef0:	push   ds
  405ef1:	bound  esi,QWORD PTR [edx]
  405ef3:	std    
  405ef4:	push   edx
  405ef5:	or     BYTE PTR ds:[esi],ah
  405ef8:	inc    edi
  405ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405efb:	in     eax,0xf1
  405efd:	mov    ecx,0x165e3012
  405f02:	dec    ecx
  405f03:	pop    ss
  405f04:	rcl    DWORD PTR [edx],1
  405f06:	in     eax,dx
  405f07:	aas    
  405f08:	iret   
  405f09:	imul   esi,DWORD PTR [esi],0x1346fd37
  405f0f:	mov    dl,0xb5
  405f11:	popa   
  405f12:	pop    ebx
  405f13:	add    BYTE PTR fs:[esi],al
  405f16:	cmp    ebx,DWORD PTR [eax+0x55ca9e83]
  405f1c:	inc    edx
  405f1d:	repnz or eax,0x2a82813
  405f23:	adc    ebp,edx
  405f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f26:	inc    esi
  405f27:	mov    eax,gs:0x23d88f8d
  405f2d:	pop    edi
  405f2e:	(bad)  
  405f2f:	pop    eax
  405f30:	sar    bh,1
  405f32:	je     0x405f1e
  405f34:	adc    dh,BYTE PTR [edx+0x4e]
  405f37:	addr16 (bad) 
  405f39:	jle    0x405f07
  405f3b:	addr16 sbb al,0x88
  405f3e:	mov    ecx,0x6a77184b
  405f43:	add    DWORD PTR [eax+0x6e25ed1f],0xfffffff3
  405f4a:	jbe    0x405f9c
  405f4c:	pop    ecx
  405f4d:	adc    cl,bl
  405f4f:	mov    BYTE PTR [ebx-0x1d],cl
  405f52:	and    bl,ah
  405f54:	repz mov esp,0x955f66d4
  405f5a:	dec    ecx
  405f5b:	push   esi
  405f5c:	ret    
  405f5d:	(bad)  
  405f5e:	cmc    
  405f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f60:	int3   
  405f61:	jne    0x405fdd
  405f63:	xchg   DWORD PTR ds:0x2d65700c,eax
  405f69:	cdq    
  405f6a:	pop    eax
  405f6b:	retf   0x1add
  405f6e:	bound  edi,QWORD PTR [ecx]
  405f70:	hlt    
  405f71:	xor    edx,DWORD PTR [esi-0x7732873]
  405f77:	pushf  
  405f78:	xor    al,0xa3
  405f7a:	je     0x405f9e
  405f7c:	clc    
  405f7d:	test   BYTE PTR [eax+0x49952077],bl
  405f83:	push   esp
  405f84:	adc    eax,0x824c9fd1
  405f89:	aas    
  405f8a:	in     eax,0xea
  405f8c:	in     eax,dx
  405f8d:	xchg   edi,eax
  405f8e:	test   BYTE PTR [esi-0x58],cl
  405f91:	out    dx,eax
  405f92:	mov    esp,0x69ffd80
  405f97:	pop    ss
  405f98:	mov    esi,0x1081850c
  405f9d:	loop   0x405f3d
  405f9f:	sti    
  405fa0:	inc    edx
  405fa1:	repz test DWORD PTR ds:[ebp+0x78ca6f1f],eax
  405fa9:	mov    dl,0xa
  405fab:	rol    ecx,1
  405fad:	scas   al,BYTE PTR es:[edi]
  405fae:	cmp    ah,BYTE PTR [edi-0x79195d7b]
  405fb4:	or     al,0x4
  405fb6:	mov    eax,ds:0x74b77c56
  405fbb:	scas   eax,DWORD PTR es:[edi]
  405fbc:	mov    cl,0x51
  405fbe:	loopne 0x406020
  405fc0:	fbstp  TBYTE PTR [ebp-0xe]
  405fc3:	xor    BYTE PTR [ebx+esi*4+0x7b2031b5],al
  405fca:	adc    al,0x2a
  405fcc:	loop   0x405f9c
  405fce:	shl    BYTE PTR [edi+0x36],1
  405fd1:	sub    BYTE PTR [ebp+ebx*8-0x773a39f8],bh
  405fd8:	add    ch,BYTE PTR [ebx+eax*2+0x1a]
  405fdc:	into   
  405fdd:	lock xor cl,BYTE PTR [edx+edi*4]
  405fe1:	sbb    al,0xf0
  405fe3:	(bad)  
  405fe4:	mov    esi,0xaa929077
  405fe9:	adc    ebx,ebp
  405feb:	fimul  WORD PTR [edi-0x59]
  405fee:	xchg   BYTE PTR [edx],cl
  405ff0:	fisttp WORD PTR [esi-0x55]
  405ff3:	push   eax
  405ff4:	mov    eax,0xa4d31a41
  405ff9:	xor    al,0x4d
  405ffb:	(bad)  
  405ffd:	add    eax,DWORD PTR [ebx+0x5]
  406000:	mov    ah,0x19
  406002:	(bad)  [edx]
  406004:	pop    eax
  406005:	lock das 
  406007:	int3   
  406008:	jo     0x40604e
  40600a:	or     bh,BYTE PTR [eax+0x22]
  40600d:	add    al,0x69
  40600f:	jmp    0x9f3a:0x421c70bd
  406016:	sbb    esi,esi
  406018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406019:	out    dx,al
  40601a:	mov    BYTE PTR [eax-0x462cfa92],ah
  406020:	pop    ebx
  406021:	mov    ds:0x94280efb,eax
  406026:	in     al,0xaf
  406028:	(bad)  
  406029:	mov    bh,0x6a
  40602b:	js     0x406021
  40602d:	pop    ebp
  40602e:	sti    
  40602f:	pop    eax
  406030:	inc    ebp
  406031:	sti    
  406032:	jmp    0x58c01b07
  406037:	push   ds
  406038:	sbb    al,0xb8
  40603a:	xor    edi,DWORD PTR [ebx+0x3d]
  40603d:	mov    ch,0xb2
  40603f:	ret    
  406040:	lock mov al,ds:0xdd533a7f
  406046:	dec    ebp
  406047:	call   edi
  406049:	push   edi
  40604a:	jnp    0x4060c1
  40604c:	push   ds
  40604d:	or     al,0xc1
  40604f:	sbb    DWORD PTR [edi+edx*2],ebp
  406052:	sub    eax,0xbdeb5182
  406057:	sahf   
  406058:	stc    
  406059:	loop   0x40600e
  40605b:	adc    eax,DWORD PTR [ebx]
  40605d:	cmp    eax,0x8b2de291
  406062:	neg    BYTE PTR [ebx+ecx*8-0x76]
  406066:	mov    al,0x8f
  406068:	add    eax,0xfb24c183
  40606d:	push   eax
  40606e:	cmp    BYTE PTR [edi],al
  406070:	in     eax,0x0
  406072:	dec    esp
  406073:	sbb    BYTE PTR [ebx-0x33],ch
  406076:	xchg   esp,eax
  406077:	inc    ecx
  406078:	or     eax,0x313271fa
  40607d:	xor    esp,DWORD PTR [esi]
  40607f:	jno    0x4060b3
  406081:	inc    eax
  406082:	jne    0x40603a
  406084:	jbe    0x406011
  406086:	add    al,0x0
  406088:	mov    al,ds:0x806ef882
  40608d:	in     eax,dx
  40608e:	mov    dl,0x5e
  406090:	cld    
  406091:	lds    edx,FWORD PTR [ebx+0x426e09b4]
  406097:	jmp    0x5ee956fc
  40609c:	outs   dx,BYTE PTR ds:[esi]
  40609d:	mov    ah,0xd8
  40609f:	sbb    BYTE PTR [ebp+0x3b811c8d],0x8c
  4060a6:	lods   al,BYTE PTR ds:[esi]
  4060a7:	aad    0x44
  4060a9:	test   al,0x92
  4060ab:	not    DWORD PTR [eax-0x22b2cc75]
  4060b1:	lods   al,BYTE PTR ds:[esi]
  4060b2:	sahf   
  4060b3:	test   BYTE PTR [ebx+0xe],0x24
  4060b7:	push   0x2ad53b2c
  4060bc:	jmp    0xb9afe37
  4060c1:	mov    ch,0x7b
  4060c3:	push   edi
  4060c4:	out    0x94,al
  4060c6:	dec    eax
  4060c7:	imul   edx,DWORD PTR [edi+0x7478286f],0xffffffe1
  4060ce:	mov    ebp,0x6e1994d5
  4060d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060d4:	inc    edi
  4060d5:	adc    BYTE PTR [esi+edi*2],ch
  4060d8:	(bad)  
  4060d9:	cwde   
  4060da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060db:	out    0x59,al
  4060dd:	out    dx,eax
  4060de:	xchg   BYTE PTR [edx-0x44],bl
  4060e1:	dec    BYTE PTR [edi]
  4060e3:	sahf   
  4060e4:	xor    DWORD PTR [ecx+0x4f821294],esp
  4060ea:	push   ss
  4060eb:	add    BYTE PTR [eax-0x74eebc0d],bh
  4060f1:	imul   edi,DWORD PTR [edi+0x65]
  4060f5:	lahf   
  4060f6:	mov    ebp,0x7806d2d7
  4060fb:	(bad)
  4060ff:	scas   al,BYTE PTR es:[edi]
  406100:	mov    esi,0xfdf92e6a
  406105:	ror    DWORD PTR [ebp-0x74e5fb78],cl
  40610b:	inc    ebp
  40610c:	ror    BYTE PTR [ebx-0x39cc27ab],0x33
  406113:	(bad)  
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	xor    eax,0x13dfdf30
  406891:	cmp    eax,0x5e0c8383
  406896:	add    DWORD PTR [ebx-0x1dc0509c],0xffffffa9
  40689d:	(bad)  
  40689e:	das    
  40689f:	fs out dx,al
  4068a1:	dec    ebx
  4068a2:	push   ds
  4068a3:	fidiv  DWORD PTR [esi-0x4a9484b0]
  4068a9:	xchg   ebx,eax
  4068aa:	push   0x641ff9ff
  4068af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068b0:	cli    
  4068b1:	mov    eax,ds:0x1a0ba3ab
  4068b6:	adc    eax,0x6e679a23
  4068bb:	aam    0x15
  4068bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068be:	(bad)  
  4068c0:	(bad)  
  4068c1:	jnp    0x406879
  4068c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068c4:	inc    esp
  4068c5:	inc    eax
  4068c6:	sbb    al,0x4
  4068c8:	mov    cl,0xea
  4068ca:	stos   BYTE PTR es:[edi],al
  4068cb:	clc    
  4068cc:	out    dx,al
  4068cd:	popf   
  4068ce:	mov    dh,0x39
  4068d0:	dec    ecx
  4068d1:	js     0x4068ed
  4068d3:	in     eax,0x87
  4068d5:	mov    esp,0xcf82222
  4068da:	test   eax,0x86ada579
  4068df:	out    0x4d,eax
  4068e1:	out    dx,eax
  4068e2:	and    ecx,DWORD PTR [esi-0x1e70d4b3]
  4068e8:	sub    esp,0x113b4344
  4068ee:	aad    0x87
  4068f0:	or     eax,0x7b4182a2
  4068f5:	xor    ecx,DWORD PTR [ebx]
  4068f7:	jmp    0xacaebb66
  4068fc:	jb     0x406887
  4068fe:	fsubr  QWORD PTR [ebx+0x66]
  406901:	mov    eax,0x269b4cca
  406906:	adc    ah,BYTE PTR [eax+ebx*2-0x5a]
  40690a:	je     0x40696c
  40690c:	cli    
  40690d:	imul   ebp,DWORD PTR [ecx+esi*1+0x4d],0x29
  406912:	lahf   
  406913:	ins    BYTE PTR es:[edi],dx
  406914:	or     ecx,DWORD PTR [edi+0x60afdd01]
  40691a:	sbb    dh,BYTE PTR ds:0x7b59473e
  406920:	xchg   BYTE PTR [esp+edx*4+0x3447373f],dh
  406927:	rcl    BYTE PTR [eax-0x10f8b7dd],1
  40692d:	pop    ds
  40692e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40692f:	dec    esi
  406930:	fimul  WORD PTR [ecx+0x4c437471]
  406936:	mov    ds:0xb62ece3c,eax
  40693b:	mov    bl,0x91
  40693d:	call   0x6a2cda0f
  406942:	inc    ebx
  406943:	fwait
  406944:	sub    edi,edi
  406946:	pop    ebp
  406947:	mov    cl,0xa9
  406949:	jmp    0xb743da48
  40694e:	jl     0x406946
  406950:	mov    eax,0x1cfc06e7
  406955:	cmc    
  406956:	sbb    ecx,eax
  406958:	cmp    edi,DWORD PTR [eax]
  40695a:	pop    eax
  40695b:	adc    DWORD PTR [edx-0x302a47f7],esp
  406961:	loopne 0x406953
  406963:	mov    WORD PTR [edx-0x62],gs
  406966:	add    bl,BYTE PTR [ecx+eiz*8-0x4a]
  40696a:	pop    ds
  40696b:	imul   esp,DWORD PTR [ecx],0xab60f62e
  406971:	cld    
  406972:	cmp    ebp,eax
  406974:	icebp  
  406975:	loopne 0x4069bc
  406977:	fsubr  QWORD PTR [eax]
  406979:	dec    ebp
  40697a:	add    BYTE PTR [esi+eax*4],0x82
  40697e:	mov    al,0x45
  406980:	pop    esi
  406981:	stos   BYTE PTR es:[edi],al
  406982:	mov    ah,0x9b
  406984:	jl     0x4069fd
  406986:	pop    ebp
  406987:	fwait
  406988:	push   es
  406989:	or     al,0xb5
  40698b:	gs adc al,0xa0
  40698e:	gs push ebx
  406990:	(bad)  
  406991:	xor    al,0x27
  406993:	mov    DWORD PTR [ebx+0x5d673cfe],0x854d5f44
  40699d:	push   cs
  40699e:	mov    ebp,0xcdba146b
  4069a3:	pop    esi
  4069a4:	mov    edx,0x23289799
  4069a9:	test   DWORD PTR [ebx+0x59],esi
  4069ac:	jmp    0xdd8c589
  4069b1:	loop   0x4069f4
  4069b3:	test   eax,0x44371486
  4069b8:	inc    esi
  4069b9:	(bad)  
  4069ba:	pop    ecx
  4069bb:	mov    bl,0x66
  4069bd:	cmp    eax,eax
  4069bf:	pop    eax
  4069c0:	ret    
  4069c1:	retf   0x10b2
  4069c4:	shl    BYTE PTR [esp+ebp*1-0x40baec6b],cl
  4069cb:	mov    ch,0xfd
  4069cd:	jecxz  0x406960
  4069cf:	jl     0x406a2f
  4069d1:	mov    DWORD PTR [edx],ebp
  4069d3:	lods   al,BYTE PTR ds:[esi]
  4069d4:	jo     0x406a48
  4069d6:	xchg   bl,ch
  4069d8:	(bad)  
  4069da:	mov    edx,0x87d864c1
  4069df:	ja     0x406980
  4069e1:	sahf   
  4069e2:	ja     0x406988
  4069e4:	mov    bl,0x7d
  4069e6:	les    ebx,FWORD PTR [edi+0xb]
  4069e9:	push   edi
  4069eb:	dec    edi
  4069ec:	mov    esp,0xe38b3444
  4069f1:	(bad)  
  4069f2:	pusha  
  4069f3:	rcr    BYTE PTR [ecx+0x23],cl
  4069f6:	push   cs
  4069f7:	(bad)  
  4069f9:	jl     0x4069e1
  4069fb:	mov    ds:0x3a8a4ac2,al
  406a00:	mov    cl,0xd3
  406a02:	(bad)  
  406a03:	xor    edi,DWORD PTR [edi]
  406a05:	xchg   BYTE PTR [edx],ah
  406a07:	int3   
  406a08:	scas   eax,DWORD PTR es:[edi]
  406a09:	test   eax,0xf4806fb
  406a0e:	ret    
  406a0f:	pop    ebx
  406a10:	(bad)  
  406a12:	mov    cl,bl
  406a14:	jp     0x406a15
  406a16:	add    al,0xee
  406a18:	pop    ecx
  406a19:	push   esi
  406a1a:	mov    ecx,0x50cbc37f
  406a1f:	mov    ebx,0xf698142e
  406a24:	retf   0x2507
  406a27:	mov    ebp,0x4e3fcd3c
  406a2d:	push   esi
  406a2e:	dec    edi
  406a2f:	pop    ecx
  406a30:	movntq QWORD PTR ds:0xc75f1719,mm6
  406a37:	xor    BYTE PTR [bp-0x3e],bl
  406a3b:	mov    BYTE PTR [ecx],0xc2
  406a3e:	cwde   
  406a3f:	pop    ecx
  406a40:	mov    eax,ds:0x80411e60
  406a45:	mov    al,ds:0xf2dea424
  406a4a:	gs cdq 
  406a4c:	outs   dx,BYTE PTR ds:[esi]
  406a4d:	gs hlt 
  406a4f:	sub    BYTE PTR [edx],bh
  406a51:	das    
  406a52:	scas   eax,DWORD PTR es:[edi]
  406a53:	add    ebp,edi
  406a55:	xor    edi,DWORD PTR [ecx+0x6c]
  406a58:	dec    eax
  406a59:	mov    ebp,es
  406a5b:	fs shr esp,cl
  406a5e:	cmp    DWORD PTR [esi-0x3c],esp
  406a61:	add    BYTE PTR [edi],ah
  406a63:	xchg   edi,eax
  406a64:	and    al,0x28
  406a66:	mov    ebx,0x92026298
  406a6b:	inc    edi
  406a6c:	cwde   
  406a6d:	inc    edi
  406a6e:	push   esi
  406a6f:	pop    esp
  406a70:	dec    ebx
  406a71:	xchg   ebx,eax
  406a72:	xor    eax,0xeca7ba90
  406a77:	mov    edi,0x9dde669c
  406a7c:	ror    DWORD PTR [edx-0x3130391e],1
  406a82:	pop    edx
  406a83:	call   0x297e898b
  406a88:	(bad)  
  406a89:	in     eax,dx
  406a8a:	aas    
  406a8b:	mov    edi,0x2e440120
  406a90:	mov    WORD PTR [eax],gs
  406a92:	sub    eax,DWORD PTR [ecx]
  406a94:	ret    0x74b0
  406a97:	xor    eax,0xbc77ea80
  406a9c:	xor    esp,DWORD PTR [ecx]
  406a9e:	or     bh,BYTE PTR [ebp+0x4e8d8a1d]
  406aa4:	outs   dx,BYTE PTR ds:[esi]
  406aa5:	outs   dx,BYTE PTR ds:[esi]
  406aa6:	mov    ds:0xc3c6a3c3,al
  406aab:	jle    0x406aa3
  406aad:	add    eax,0x1d0be279
  406ab2:	sti    
  406ab3:	nop
  406ab4:	dec    esi
  406ab5:	sub    ebp,edi
  406ab7:	outs   dx,BYTE PTR ds:[esi]
  406ab8:	mov    eax,ds:0xf58631eb
  406abd:	jmp    0xcf36e9e9
  406ac2:	ss pop ebp
  406ac4:	outs   dx,BYTE PTR ds:[esi]
  406ac5:	jns    0x406a5f
  406ac7:	sbb    BYTE PTR [edx],bh
  406ac9:	push   ss
  406aca:	ss inc edi
  406acc:	out    dx,eax
  406acd:	jo     0x406aed
  406acf:	push   ebx
  406ad0:	push   esp
  406ad1:	call   0x23ba:0xbb2dced4
  406ad8:	addr16 data16 das 
  406adb:	jns    0x406aa7
  406add:	mov    ds:0xce24a893,al
  406ae2:	push   cs
  406ae3:	leave  
  406ae4:	or     BYTE PTR [ebx-0x66],dh
  406ae7:	mov    DWORD PTR [esi],ecx
  406ae9:	mov    BYTE PTR [esi],ch
  406aeb:	push   ss
  406aec:	mov    ecx,0xd7050714
  406af1:	dec    ecx
  406af2:	shl    DWORD PTR [ebx+0x1c3ebefe],1
  406af8:	push   cs
  406af9:	push   esp
  406afa:	mov    edi,0x25a86271
  406aff:	in     al,0xc5
  406b01:	mov    esp,0x921a8bc6
  406b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b07:	loop   0x406ad4
  406b09:	cmp    al,BYTE PTR [edi+0x30a3147c]
  406b0f:	loope  0x406b31
  406b11:	lock lea esp,[ecx+0x6b]
  406b15:	sbb    eax,0x18d7165e
  406b1a:	xchg   edx,eax
  406b1b:	mov    cl,BYTE PTR [edi-0x36]
  406b1e:	aad    0xfa
  406b20:	aas    
  406b21:	int    0x8e
  406b23:	not    edi
  406b25:	dec    edi
  406b26:	mov    edx,0x392cc89a
  406b2b:	xchg   ecx,eax
  406b2c:	fisubr WORD PTR [esi]
  406b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2f:	mov    eax,0xead77e31
  406b34:	or     eax,0xb8e743d2
  406b39:	mov    ebp,DWORD PTR [ebx+0x2e]
  406b3c:	push   0xf586bd71
  406b41:	mov    edx,0xd75eee5
  406b46:	pop    eax
  406b47:	and    al,0x4e
  406b49:	sbb    DWORD PTR [edx-0x3e7d4c88],ebx
  406b4f:	push   0xcb890009
  406b54:	xchg   esp,eax
  406b55:	pop    ebx
  406b56:	das    
  406b57:	std    
  406b58:	mov    esp,0xff3ba05e
  406b5d:	rcr    DWORD PTR ds:0x33b95cd3,cl
  406b63:	data16 cli 
  406b65:	xchg   bx,ax
  406b67:	mov    al,0xb7
  406b69:	out    0xc4,al
  406b6b:	test   eax,0xe9d779bd
  406b70:	pop    esi
  406b71:	and    DWORD PTR [ecx-0x47],ebx
  406b74:	inc    ebx
  406b75:	test   eax,0x9de052df
  406b7a:	nop
  406b7b:	cmp    BYTE PTR [edx+ebp*4],dl
  406b7e:	jmp    0x406bbb
  406b80:	imul   ebp,edi,0xffffffa6
  406b83:	pop    eax
  406b84:	fisttp DWORD PTR [edi+0x49]
  406b87:	xchg   ebx,eax
  406b88:	mov    bh,0x8b
  406b8a:	imul   esi,esp,0x21
  406b8d:	dec    eax
  406b8e:	inc    eax
  406b8f:	inc    esp
  406b90:	fidiv  WORD PTR [ecx]
  406b92:	fsub   st,st(4)
  406b94:	pop    ss
  406b95:	lahf   
  406b96:	sbb    ebp,ecx
  406b98:	sbb    eax,DWORD PTR [ecx]
  406b9a:	dec    esp
  406b9b:	push   0xffffffa4
  406b9d:	rcr    DWORD PTR [edx],1
  406b9f:	lock jge 0x406c12
  406ba2:	mov    dl,0xb3
  406ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ba5:	mov    DWORD PTR [edi+0x4e],ebp
  406ba8:	mov    eax,eax
  406baa:	jmp    0x7eb9:0x7272dc6a
  406bb1:	jle    0x406be9
  406bb3:	je     0x406b42
  406bb5:	and    bl,bh
  406bb7:	cmp    al,0x3b
  406bb9:	jnp    0x406c1e
  406bbb:	xor    esp,esi
  406bbd:	jmp    0x703f:0x91029468
  406bc4:	scas   al,BYTE PTR es:[edi]
  406bc5:	mov    WORD PTR [edi+0x4a34286f],cs
  406bcb:	nop
  406bcc:	add    DWORD PTR [ebx+0xc191c3e],0xc8fe465
  406bd6:	out    0xe4,al
  406bd8:	ins    BYTE PTR es:[edi],dx
  406bd9:	(bad)  
  406bda:	xchg   esi,eax
  406bdb:	xor    dh,BYTE PTR [ebp-0x2f5bef9a]
  406be1:	shr    dl,1
  406be3:	push   0x109fc707
  406be8:	loope  0x406bba
  406bea:	jmp    0x406c10
  406bec:	jmp    0x406c08
  406bee:	dec    edi
  406bef:	in     eax,dx
  406bf0:	adc    BYTE PTR [edi],ch
  406bf2:	aam    0x8
  406bf4:	pop    esi
  406bf5:	push   cs
  406bf6:	mov    eax,ds:0x8565b143
  406bfb:	and    BYTE PTR [edi],bl
  406bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bfe:	pop    ss
  406bff:	repnz fsub DWORD PTR [ecx]
  406c02:	jnp    0x406bb4
  406c04:	add    esp,DWORD PTR [edx]
  406c06:	cdq    
  406c07:	xor    BYTE PTR [esi-0x1455d33e],0xa0
  406c0e:	popa   
  406c0f:	push   cs
  406c10:	aam    0x3d
  406c12:	ins    DWORD PTR es:[edi],dx
  406c13:	out    0x4b,eax
  406c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c16:	inc    ebx
  406c17:	lock sti 
  406c19:	imul   ecx,DWORD PTR [ecx+ebp*2+0x5908504],0xffffff8d
  406c21:	cmp    BYTE PTR [ebp+0x12aa2aae],0x23
  406c28:	out    dx,al
  406c29:	ins    DWORD PTR es:[edi],dx
  406c2a:	fadd   QWORD PTR [eax+eiz*4+0x0]
  406c2e:	not    edi
  406c30:	outs   dx,BYTE PTR ds:[esi]
  406c31:	into   
  406c32:	rol    BYTE PTR [ecx+0x6c],cl
  406c35:	setnp  BYTE PTR [edi-0x3]
  406c39:	mov    eax,0x28dbde95
  406c3e:	push   edx
  406c3f:	inc    edx
  406c40:	mov    edi,0x844e63fa
  406c45:	sbb    BYTE PTR [ebx-0x6e8897f],dl
  406c4b:	push   ss
  406c4c:	push   esp
  406c4d:	hlt    
  406c4e:	in     eax,0x5b
  406c50:	test   eax,0x531f5007
  406c55:	ds leave 
  406c57:	popf   
  406c58:	inc    esi
  406c59:	xchg   DWORD PTR [edi-0x6a31918d],ebp
  406c5f:	inc    esi
  406c60:	jne    0x406c30
  406c62:	std    
  406c63:	xchg   esi,eax
  406c64:	test   BYTE PTR [ebx],bl
  406c66:	pop    ds
  406c67:	xor    BYTE PTR [ecx],bh
  406c69:	add    al,0xe0
  406c6b:	adc    eax,0xb8d85b73
  406c70:	xchg   edi,eax
  406c71:	pmaxsw mm1,QWORD PTR [esp+eax*4-0x71]
  406c76:	addr16 mov ah,0x75
  406c79:	adc    ebp,DWORD PTR [ecx+0x18]
  406c7c:	jae    0x406cf6
  406c7e:	cwde   
  406c7f:	mov    al,ds:0xcb7fac1e
  406c84:	mov    bh,0x2b
  406c86:	(bad)  
  406c87:	repz inc ebp
  406c89:	ins    BYTE PTR es:[edi],dx
  406c8a:	pop    es
  406c8b:	and    ch,BYTE PTR [ecx]
  406c8d:	push   ebx
  406c8e:	and    BYTE PTR [ebx],ah
  406c90:	mov    bl,bh
  406c92:	mov    ebp,DWORD PTR [ecx+0x600c1f59]
  406c98:	adc    ebx,DWORD PTR [edi-0x7e]
  406c9b:	sub    BYTE PTR [ebx-0x39],dh
  406c9e:	fisubr DWORD PTR [ecx-0x79]
  406ca1:	xchg   edi,eax
  406ca2:	xor    al,0xa9
  406ca4:	pop    esi
  406ca5:	mov    esi,0x86e809b2
  406caa:	add    cl,dh
  406cac:	shl    BYTE PTR gs:[edi+0x63],0x5d
  406cb1:	sub    DWORD PTR [ebx+0x58],edi
  406cb4:	or     al,0x2a
  406cb6:	jnp    0x406cb7
  406cb8:	adc    DWORD PTR [ebx],ebx
  406cba:	fnstenv [esi+edi*2-0x30eec700]
  406cc1:	ja     0x406ca0
  406cc3:	std    
  406cc4:	cmp    al,0x43
  406cc6:	pop    eax
  406cc7:	shl    BYTE PTR [ebx],cl
  406cc9:	fild   DWORD PTR [esi-0x62]
  406ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ccd:	das    
  406cce:	aaa    
  406ccf:	(bad)  
  406cd0:	mov    dl,0xb8
  406cd2:	ss jle 0x406c82
  406cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd6:	clc    
  406cd7:	fstp   TBYTE PTR [ebp-0x5b87cbdb]
  406cdd:	jb     0x406ce5
  406cdf:	cld    
  406ce0:	ret    0xa52d
  406ce3:	ret    
  406ce4:	or     BYTE PTR [esi-0x1664250e],bl
  406cea:	lods   al,BYTE PTR ds:[esi]
  406ceb:	les    eax,FWORD PTR [esi+0x26]
  406cee:	mov    ch,0x6
  406cf0:	call   0x42df8dfe
  406cf5:	sub    eax,0x4ee1bf74
  406cfa:	fwait
  406cfb:	inc    ecx
  406cfc:	xchg   ebp,eax
  406cfd:	pop    ebp
  406cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cff:	sbb    eax,0xf5cc1ce4
  406d04:	or     eax,0x5fec47b3
  406d09:	or     eax,esi
  406d0b:	adc    eax,0x203e94e6
  406d10:	fucom  st(0)
  406d12:	push   ebx
  406d13:	jge    0x406d1e
  406d15:	fdiv   QWORD PTR [ecx]
  406d17:	cmp    esi,DWORD PTR [eax]
  406d19:	pop    es
  406d1a:	xor    al,0x44
  406d1c:	xchg   BYTE PTR [ecx],dh
  406d1e:	repz test eax,0x5487767d
  406d24:	xor    al,0x63
  406d26:	xchg   edi,eax
  406d27:	pop    es
  406d28:	loop   0x406d14
  406d2a:	lea    esi,[eax+edi*2+0x27]
  406d2e:	les    ebx,FWORD PTR [edi+0x5bfbf3ea]
  406d34:	xlat   BYTE PTR ds:[ebx]
  406d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d36:	out    0x94,al
  406d38:	adc    al,0xf3
  406d3a:	xor    al,0x1a
  406d3c:	adc    BYTE PTR [ecx-0x6dee8abd],0x67
  406d43:	test   al,0xb3
  406d45:	cdq    
  406d46:	and    DWORD PTR [esi+0x31],ebp
  406d49:	cmp    eax,0xc56fa8b1
  406d4e:	sbb    edi,DWORD PTR [eax]
  406d50:	mov    bh,BYTE PTR [ebx-0x1a]
  406d53:	dec    ebx
  406d54:	dec    eax
  406d55:	push   edx
  406d56:	es test eax,0x93b8500d
  406d5c:	sbb    al,BYTE PTR [ebp+eiz*8+0xb6bcb12]
  406d63:	or     DWORD PTR [ebx-0x18],esi
  406d66:	call   0x9cb4e559
  406d6b:	int3   
  406d6c:	mov    dh,0x9
  406d6e:	or     dl,ch
  406d70:	mov    ah,bl
  406d72:	ret    0xabe6
  406d75:	aaa    
  406d76:	outs   dx,DWORD PTR ds:[esi]
  406d77:	sub    edx,edx
  406d79:	(bad)  
  406d7b:	test   al,0xca
  406d7d:	sbb    al,0xe9
  406d7f:	aam    0x2d
  406d81:	shl    DWORD PTR [esi],1
  406d83:	inc    eax
  406d84:	add    eax,0xca0473c2
  406d89:	xchg   BYTE PTR [esp+ecx*2-0xf],ah
  406d8d:	ins    DWORD PTR es:[edi],dx
  406d8e:	mov    edi,0xbf77a0c0
  406d93:	out    dx,al
  406d94:	xchg   ebp,eax
  406d95:	mov    ebp,0x126f3436
  406d9a:	retf   0x16b1
  406d9d:	test   eax,0xf4d6fb22
  406da2:	aad    0xee
  406da4:	(bad)  
  406da5:	cmp    al,0x7a
  406da7:	cwde   
  406da8:	cmp    al,0xb6
  406daa:	mov    ah,0x7b
  406dac:	sbb    al,0x4a
  406dae:	in     eax,dx
  406daf:	aam    0x64
  406db1:	jge    0x406d99
  406db3:	(bad)  [ecx-0x6c888ec3]
  406db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dba:	sti    
  406dbb:	mov    eax,ds:0xd720abd3
  406dc0:	aas    
  406dc1:	int    0xc8
  406dc3:	or     DWORD PTR [ecx-0x20],ebx
  406dc6:	lea    eax,[ebx-0x6]
  406dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dca:	je     0x406dbb
  406dcc:	sbb    ecx,DWORD PTR [eax+0x62]
  406dcf:	test   al,0xcf
  406dd1:	push   es
  406dd2:	nop
  406dd3:	div    DWORD PTR [ebp+ecx*2-0x6]
  406dd7:	mov    al,cl
  406dd9:	rep outs dx,DWORD PTR ds:[esi]
  406ddb:	push   eax
  406ddc:	cmp    ah,BYTE PTR [ecx+eiz*8+0x72]
  406de0:	jne    0x406def
  406de2:	icebp  
  406de3:	jae    0x406d79
  406de5:	js     0x406d8c
  406de7:	push   edi
  406de8:	ret    0xf21a
  406deb:	fs or  ch,al
  406dee:	into   
  406def:	scas   al,BYTE PTR es:[edi]
  406df0:	xlat   BYTE PTR ds:[ebx]
  406df1:	adc    bl,0x44
  406df4:	xor    al,0xa2
  406df6:	pop    di
  406df8:	adc    al,0x30
  406dfa:	(bad)  
  406dfc:	mov    eax,0xf14f649f
  406e01:	fcom   QWORD PTR [esi]
  406e03:	(bad)  
  406e04:	out    dx,eax
  406e05:	inc    edi
  406e06:	xor    al,0x8a
  406e08:	inc    edi
  406e09:	or     BYTE PTR [edi+0xf],bl
  406e0c:	xchg   edx,eax
  406e0d:	cmp    bh,BYTE PTR ds:0x308ecebe
  406e13:	in     al,dx
  406e14:	pop    ebx
  406e15:	inc    eax
  406e16:	dec    ebp
  406e17:	add    bx,0x98f6
  406e1c:	jae    0x406e1d
  406e1e:	inc    eax
  406e1f:	jne    0x406dea
  406e21:	sbb    BYTE PTR [ebp-0x2315a19b],al
  406e27:	mov    ?,WORD PTR [eax+edi*8-0x1d]
  406e2b:	or     ecx,DWORD PTR [ebx]
  406e2d:	cmc    
  406e2e:	test   al,0xd6
  406e30:	loop   0x406dfc
  406e32:	bound  edi,QWORD PTR [edi+0xa933fd]
  406e38:	jmp    0x4aa01020
  406e3d:	fidivr DWORD PTR [eax-0x83dc2e2]
  406e43:	xor    edi,DWORD PTR [ecx+0xe]
  406e46:	adc    eax,0xcb9553d0
  406e4b:	pop    ebp
  406e4c:	jle    0x406e45
  406e4e:	and    DWORD PTR [ebx],ebx
  406e50:	sbb    cl,al
  406e52:	sub    al,BYTE PTR [ebp+0x210fca7a]
  406e58:	repz push ss
  406e5a:	not    DWORD PTR [esi-0x39]
  406e5d:	arpl   WORD PTR [ecx-0x38],bp
  406e60:	stc    
  406e61:	cs dec eax
  406e63:	(bad)  
  406e64:	xchg   ebp,eax
  406e65:	mov    al,ds:0x7929ea1b
  406e6a:	mov    ah,0xef
  406e6c:	mov    eax,ds:0x7f641fe8
  406e71:	fadd   DWORD PTR [eax+0x379f8]
  406e77:	or     cl,BYTE PTR [edi+ebx*8+0x9d85c1]
  406e7e:	pop    eax
  406e7f:	add    BYTE PTR [eax],dl
  406e81:	imul   esp,ecx,0xffffff82
  406e84:	loope  0x406e3c
  406e86:	or     DWORD PTR [ecx-0x32cd8ec7],eax
  406e8c:	push   edi
  406e8d:	div    DWORD PTR [eax+0x13]
  406e90:	xlat   BYTE PTR ds:[ebx]
  406e91:	mov    al,0xb2
  406e93:	adc    DWORD PTR ds:0x194e91ec,ebp
  406e99:	inc    eax
  406e9a:	mov    edi,0x712c9afc
  406e9f:	sub    eax,0xc33561c7
  406ea4:	das    
  406ea5:	pop    ecx
  406ea6:	push   ds
  406ea7:	mov    dl,0xb3
  406ea9:	jo     0x406e84
  406eab:	clc    
  406eac:	mov    edx,0x12866909
  406eb1:	or     BYTE PTR [ebp+0x56d2804f],dh
  406eb7:	cmp    cl,BYTE PTR [edi]
  406eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eba:	adc    DWORD PTR [edx-0x1b0d76cd],esp
  406ec0:	cli    
  406ec1:	cmc    
  406ec2:	or     eax,0xe275c9a3
  406ec7:	and    DWORD PTR [edx-0x543875e],0x138b66d0
  406ed1:	xchg   edx,eax
  406ed2:	jmp    0x406eeb
  406ed4:	or     al,0x8a
  406ed6:	jo     0x406f27
  406ed8:	inc    edx
  406ed9:	and    dh,BYTE PTR [ecx+0x1f]
  406edc:	sahf   
  406edd:	cli    
  406ede:	and    DWORD PTR [edi],esi
  406ee0:	jne    0x406f28
  406ee2:	fcomi  st,st(1)
  406ee4:	mov    cl,0xf0
  406ee6:	cmp    ah,BYTE PTR [edi-0x27]
  406ee9:	sbb    BYTE PTR [ebx-0x69ddfcb4],al
  406eef:	gs inc esi
  406ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ef2:	daa    
  406ef3:	lock jecxz 0x406f31
  406ef6:	fmul   st,st(4)
  406ef8:	xor    al,0x79
  406efa:	ror    esp,cl
  406efc:	jbe    0x406f2c
  406efe:	xchg   ebp,eax
  406eff:	cmp    ebx,DWORD PTR [edi-0x33]
  406f02:	(bad)  [esi]
  406f04:	imul   ebx,DWORD PTR [edi+0x58],0x2f
  406f08:	sahf   
  406f09:	pusha  
  406f0a:	mov    BYTE PTR [ebx],bh
  406f0c:	lahf   
  406f0d:	xchg   edi,eax
  406f0e:	ja     0x406f31
  406f10:	cmp    al,0xac
  406f12:	fcom   DWORD PTR [ebx]
  406f14:	pop    ebp
  406f15:	and    DWORD PTR [edi],0xe4af7696
  406f1b:	cmc    
  406f1c:	out    0x66,al
  406f1e:	add    bl,BYTE PTR [esi+eax*2+0x4f]
  406f22:	mov    bl,0x46
  406f24:	popa   
  406f25:	gs mov dh,0x75
  406f28:	pop    ebx
  406f29:	adc    al,0xf5
  406f2b:	cmp    eax,0x88c7fdfa
  406f30:	test   eax,0x5ad34975
  406f35:	retf   0xea28
  406f38:	mov    ch,0xfa
  406f3a:	jecxz  0x406f23
  406f3c:	sub    BYTE PTR ds:0xcba735aa,0x2a
  406f43:	mov    dl,ch
  406f45:	mov    cl,0x0
  406f47:	xchg   edx,eax
  406f48:	pusha  
  406f49:	mov    WORD PTR [edi+eiz*4+0x539d83c1],?
  406f50:	or     DWORD PTR ds:0xf3358fab,esi
  406f56:	mov    ch,0x40
  406f58:	mov    esp,0x73f89374
  406f5d:	xor    ebp,eax
  406f5f:	ret    0x4cd2
  406f62:	adc    edi,DWORD PTR [edi+0x3b]
  406f65:	sbb    eax,0x30205b84
  406f6a:	aad    0xb8
  406f6c:	xor    eax,0xc2f192bb
  406f71:	out    0x27,al
  406f73:	sbb    BYTE PTR ds:0x131ca2e3,0xe1
  406f7a:	aad    0x77
  406f7c:	mov    ds:0x27d222d4,al
  406f81:	fisub  DWORD PTR [edi]
  406f83:	push   es
  406f84:	pop    es
  406f85:	fistp  WORD PTR [esi-0x76]
  406f88:	jbe    0x406f21
  406f8a:	mov    dl,0xfb
  406f8c:	mov    dh,0xe0
  406f8e:	test   eax,0x9f11d77f
  406f93:	addr16 (bad) 
  406f97:	jg     0x406fb5
  406f99:	and    eax,0xef4c3272
  406f9e:	or     BYTE PTR [ebx],ch
  406fa0:	pop    ss
  406fa1:	test   al,0xab
  406fa3:	mov    bh,0x6d
  406fa5:	xor    edi,DWORD PTR [esi+0x53]
  406fa8:	jbe    0x406fc9
  406faa:	mov    cl,0x98
  406fac:	push   ebx
  406fad:	js     0x406f95
  406faf:	xor    DWORD PTR [edx+0x1b],ebx
  406fb2:	fst    st(6)
  406fb4:	xor    DWORD PTR [esi+0x28d9e778],ecx
  406fba:	stos   BYTE PTR es:[edi],al
  406fbb:	jno    0x406f89
  406fbd:	add    al,0x2f
  406fbf:	jo     0x406f75
  406fc1:	js     0x406f74
  406fc3:	jnp    0x406f72
  406fc5:	call   0x287fafbd
  406fca:	xor    al,0x27
  406fcc:	stos   DWORD PTR es:[edi],eax
  406fcd:	outs   dx,DWORD PTR ds:[esi]
  406fce:	aam    0xfb
  406fd0:	jle    0x406fbb
  406fd2:	cmp    al,0x70
  406fd4:	push   edx
  406fd5:	retf   0x65a0
  406fd8:	ds scas al,BYTE PTR es:[edi]
  406fda:	mov    al,ds:0x8fee67b6
  406fdf:	bound  ecx,QWORD PTR [ecx-0x55a3737]
  406fe5:	loop   0x406fbe
  406fe7:	cmp    DWORD PTR [edx+0x39],edi
  406fea:	push   eax
  406feb:	fbstp  TBYTE PTR ds:0x2b9db55a
  406ff1:	not    bh
  406ff3:	retf   0xcdbd
  406ff6:	mov    ds:0xb6c5359f,al
  406ffb:	cmp    eax,0x7a7b6ab6
  407000:	push   ebp
  407001:	sbb    eax,0xe1210615
  407006:	jbe    0x40702e
  407008:	aas    
  407009:	sub    al,0xad
  40700b:	sbb    al,BYTE PTR [edx+0x18859b51]
  407011:	xor    dh,BYTE PTR [ebp+0x30c953be]
  407017:	and    BYTE PTR [edi-0x1c],cl
  40701a:	xchg   edi,eax
  40701b:	push   ebp
  40701c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40701d:	mov    edi,0x44a5a661
  407022:	and    DWORD PTR [edi-0x75224cbf],edx
  407028:	cld    
  407029:	(bad)  
  40702a:	jnp    0x407097
  40702c:	loopne 0x40700e
  40702e:	cs pop ds
  407030:	enter  0x7ca6,0x1
  407034:	or     al,0x2c
  407036:	ds int3 
  407038:	rol    DWORD PTR [esi],1
  40703a:	enter  0x5678,0xb9
  40703e:	sub    DWORD PTR [esi+0x44],esi
  407041:	adc    BYTE PTR [eax+0x6f],dh
  407044:	mov    ds:0x9d6ed3fd,al
  407049:	inc    ecx
  40704a:	cmp    DWORD PTR [ebp+0x1780ab76],ecx
  407050:	div    ebx
  407052:	ja     0x4070b8
  407054:	push   cs
  407055:	inc    esi
  407056:	aam    0x92
  407058:	lahf   
  407059:	add    ebx,ebx
  40705b:	cli    
  40705c:	xor    WORD PTR [ebx-0x54],si
  407060:	call   0x4984:0xee96f768
  407067:	mov    ebp,0x17b2c9b9
  40706c:	cdq    
  40706d:	inc    ebp
  40706e:	fcomip st,st(5)
  407070:	(bad)  
  407072:	jmp    0x4070b4
  407074:	mov    dh,0x59
  407076:	sbb    BYTE PTR [ebx+0x3af100ce],dh
  40707c:	mov    dh,0x4a
  40707e:	cmp    eax,0x69586368
  407083:	sub    esp,DWORD PTR [esi]
  407085:	lods   eax,DWORD PTR ds:[esi]
  407086:	ret    0xae48
  407089:	bound  ecx,QWORD PTR [esi-0xc52f45c]
  40708f:	mov    ebx,0x2b5920e5
  407094:	push   0xffffffd4
  407096:	loop   0x4070d5
  407098:	loope  0x4070b1
  40709a:	pop    ecx
  40709b:	cld    
  40709c:	inc    ecx
  40709d:	xor    eax,DWORD PTR [esi+0x6581ba0f]
  4070a3:	fwait
  4070a4:	add    DWORD PTR [eax+0x61],0xffffff91
  4070a8:	add    eax,0x1b96f2ac
  4070ad:	push   esi
  4070ae:	mov    DWORD PTR ds:0x92ad8869,esi
  4070b4:	mov    al,0x83
  4070b6:	mov    edi,0x1dd1de47
  4070bb:	or     al,0x37
  4070bd:	out    0xa7,al
  4070bf:	xchg   ebx,eax
  4070c0:	ror    BYTE PTR [ebx-0x3067dce4],1
  4070c6:	clc    
  4070c7:	rol    BYTE PTR [ebx-0x5d],1
  4070ca:	sbb    ecx,ebx
  4070cc:	add    eax,0xa83acb1a
  4070d1:	in     al,0x1e
  4070d3:	push   ss
  4070d4:	test   eax,0xc81bb322
  4070d9:	cmp    eax,0x6cdc59f2
  4070de:	inc    esp
  4070df:	cmp    BYTE PTR [eax+edx*1-0x3f],bh
  4070e3:	xor    eax,0x91704bab
  4070e8:	push   edx
  4070e9:	sahf   
  4070ea:	xor    DWORD PTR [esi-0x69],ecx
  4070ed:	lods   al,BYTE PTR ds:[esi]
  4070ee:	xor    eax,0xd7a52ed3
  4070f3:	and    DWORD PTR [ecx-0x1c],edx
  4070f6:	sbb    eax,0x69f0d4e9
  4070fb:	test   eax,0xd237fc6
  407100:	mov    esp,0xb4ebcfa4
  407105:	scas   eax,DWORD PTR es:[edi]
  407106:	push   ebp
  407107:	je     0x40712a
  407109:	sbb    ecx,0xc7244d05
  40710f:	dec    esi
  407110:	fld    DWORD PTR [eax]
  407112:	mov    eax,0x7fed186f
  407117:	(bad)  
  407118:	je     0x407182
  40711a:	inc    esi
  40711b:	mov    esp,0xa3c37d8d
  407120:	call   0x258c:0x518ba43
  407127:	mov    al,0xe8
  407129:	or     cl,dh
  40712b:	push   ds
  40712c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40712d:	or     eax,0xadec7949
  407132:	icebp  
  407133:	ret    0xbf1c
  407136:	(bad)  
  407137:	(bad)  
  407138:	cmp    eax,0x83d8f115
  40713d:	jo     0x407102
  40713f:	cld    
  407140:	sbb    DWORD PTR [edx+0xf],esi
  407143:	imul   ebx,DWORD PTR [eax],0xac4cb93a
  407149:	xor    ch,bl
  40714b:	out    0xd5,al
  40714d:	ins    BYTE PTR es:[edi],dx
  40714e:	ins    BYTE PTR es:[edi],dx
  40714f:	mov    eax,ds:0x267d57f6
  407154:	cmp    al,0x5
  407156:	xlat   BYTE PTR ds:[ebx]
  407157:	xchg   eax,ecx
  407159:	cmp    ch,BYTE PTR [edi-0x5e2fed89]
  40715f:	jns    0x407113
  407161:	pop    es
  407162:	(bad)  
  407163:	pop    edi
  407164:	add    ecx,0xbd071e9e
  40716a:	hlt    
  40716b:	(bad)  
  40716c:	push   eax
  40716d:	inc    ecx
  40716e:	add    BYTE PTR [edi+0x5a66eee3],0xfb
  407175:	sar    BYTE PTR [esi+0x2b],cl
  407178:	int3   
  407179:	ret    
  40717a:	ror    DWORD PTR [ebx],1
  40717c:	push   0xdf3f5ef1
  407181:	adc    al,0x4c
  407183:	dec    edx
  407184:	cmp    al,BYTE PTR [ebx-0x71b4b71d]
  40718a:	fs daa 
  40718c:	push   ecx
  40718d:	cmp    cl,BYTE PTR [edx-0x60463e2a]
  407193:	jl     0x4071fd
  407195:	dec    esp
  407196:	dec    ecx
  407197:	pop    es
  407198:	jecxz  0x407123
  40719a:	inc    edi
  40719b:	pop    ecx
  40719c:	mov    ch,0x95
  40719e:	je     0x407141
  4071a0:	sub    al,0x2b
  4071a2:	je     0x4071d5
  4071a4:	pushf  
  4071a5:	sbb    BYTE PTR [ebx],0x73
  4071a8:	xchg   esi,eax
  4071a9:	cdq    
  4071aa:	pop    es
  4071ab:	sbb    bh,ch
  4071ad:	xor    al,0x3b
  4071af:	stos   DWORD PTR es:[edi],eax
  4071b0:	cld    
  4071b1:	mul    DWORD PTR [eax]
  4071b3:	aaa    
  4071b4:	fistp  DWORD PTR [eax]
  4071b6:	push   ss
  4071b7:	cmp    al,BYTE PTR ds:0x9f99f10
  4071bd:	jno    0x40716f
  4071bf:	mov    esp,0x75f5af7
  4071c4:	add    DWORD PTR [eax+0x3c],ebx
  4071c7:	aaa    
  4071c8:	and    ch,BYTE PTR [edi+0x6956c232]
  4071ce:	xor    DWORD PTR [ebp-0x35696803],0x6e
  4071d5:	iret   
  4071d6:	push   0x7d2a2b7d
  4071db:	push   esp
  4071dc:	rol    BYTE PTR [edi+0x7ae8ff14],1
  4071e2:	or     al,0x9
  4071e4:	inc    edi
  4071e5:	jg     0x407218
  4071e7:	sbb    al,0xcb
  4071e9:	cmc    
  4071ea:	test   al,0x93
  4071ec:	jae    0x407226
  4071ee:	or     eax,DWORD PTR [ebx]
  4071f0:	sbb    bh,BYTE PTR [ebx]
  4071f2:	add    BYTE PTR [ecx],dl
  4071f4:	(bad)  
  4071f7:	(bad)
  4071fa:	mov    edx,0x88dd29cd
  4071ff:	lods   al,BYTE PTR ds:[esi]
  407200:	fwait
  407201:	push   0x932909ae
  407206:	xchg   esi,eax
  407207:	pop    esi
  407208:	mov    esp,0xa35f83cb
  40720d:	call   0x9205:0x1f2c6065
  407214:	shr    al,0xe4
  407217:	mov    ch,0x3a
  407219:	sub    DWORD PTR [edi+0x2b297496],esp
  40721f:	mov    eax,ds:0x8233c9b3
  407224:	fistp  WORD PTR [eax]
  407226:	cwde   
  407227:	nop
  407228:	sub    BYTE PTR [ecx+0x27],bl
  40722b:	dec    edx
  40722c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40722e:	mov    bl,0x5d
  407230:	out    0xcf,al
  407232:	mov    bh,0x18
  407234:	mov    edx,0x9c5d137c
  407239:	pop    ebx
  40723a:	sub    eax,0xec6ed26
  40723f:	and    bh,bl
  407241:	scas   al,BYTE PTR es:[edi]
  407242:	(bad)  
  407243:	stos   DWORD PTR es:[edi],eax
  407244:	xchg   BYTE PTR [eax-0x63060cc8],cl
  40724a:	jne    0x4072b7
  40724c:	retf   
  40724d:	sub    ebx,0x5b6ecb13
  407253:	lods   al,BYTE PTR ds:[esi]
  407254:	adc    al,BYTE PTR [eax+0xeaeec6a]
  40725a:	nop
  40725b:	loop   0x407216
  40725d:	stc    
  40725e:	(bad)  
  40725f:	pop    esi
  407260:	push   edi
  407261:	clc    
  407262:	adc    al,0x15
  407264:	aam    0xa3
  407266:	out    dx,al
  407267:	adc    al,0xb3
  407269:	push   ss
  40726a:	sub    al,0xec
  40726c:	mov    ds:0xaf5d1c7e,al
  407271:	xchg   edi,eax
  407272:	daa    
  407273:	pop    ecx
  407274:	jb     0x40724b
  407276:	pusha  
  407277:	aad    0xbd
  407279:	out    dx,al
  40727a:	jne    0x407208
  40727c:	pop    ss
  40727d:	(bad)  [edx]
  40727f:	and    dl,ah
  407281:	cmc    
  407282:	out    dx,eax
  407283:	inc    ebp
  407284:	jnp    0x40725e
  407286:	mov    WORD PTR [ecx],ds
  407288:	enter  0x7950,0xf3
  40728c:	iret   
  40728d:	lods   eax,DWORD PTR ds:[esi]
  40728e:	push   ss
  40728f:	or     DWORD PTR [eax-0x38],0x4c
  407293:	sub    eax,0x3f4f7ec1
  407298:	push   ds
  407299:	add    BYTE PTR [edi],dl
  40729b:	lds    edx,FWORD PTR [esi]
  40729d:	std    
  40729e:	xor    al,0x96
  4072a0:	xchg   edx,eax
  4072a1:	rcl    BYTE PTR [ecx],0x99
  4072a4:	push   ebx
  4072a5:	retf   
  4072a6:	ds stc 
  4072a8:	ficomp WORD PTR [edx+0x18c2a5b5]
  4072ae:	xchg   edx,eax
  4072af:	xchg   ebx,eax
  4072b0:	or     BYTE PTR [edx],ch
  4072b2:	ds cmp al,0xad
  4072b5:	out    0xd7,al
  4072b7:	xor    DWORD PTR ds:0x2458cb22,ecx
  4072bd:	int    0x16
  4072bf:	or     BYTE PTR [edx],dl
  4072c1:	fwait
  4072c2:	sbb    BYTE PTR [ebx],al
  4072c4:	shl    bl,cl
  4072c6:	lods   eax,DWORD PTR ds:[esi]
  4072c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c8:	cmp    eax,0xcccdc4e0
  4072cd:	mov    ch,0x64
  4072cf:	or     ebx,DWORD PTR [edi-0x28b54cd6]
  4072d5:	adc    ecx,DWORD PTR [ebp+0x50fc6ac9]
  4072db:	mov    ds:0xa54eff41,al
  4072e0:	lea    esp,[edx]
  4072e2:	(bad)  
  4072e3:	push   eax
  4072e4:	rcl    dh,1
  4072e6:	mov    cl,0x20
  4072e8:	imul   edi,DWORD PTR [ebx-0x626e3d92],0xffffffb4
  4072ef:	enter  0x8e2,0x8d
  4072f3:	mov    ds:0xb4900e3,al
  4072f8:	mov    ebp,0x2b4c1a0e
  4072fd:	sbb    bh,al
  4072ff:	or     DWORD PTR [eax+0x739be9b3],edx
  407305:	test   al,0xe1
  407307:	jge    0x40734a
  407309:	punpckhdq mm5,mm3
  40730c:	mov    ebx,0x5f8d2072
  407311:	fwait
  407312:	stos   DWORD PTR es:[edi],eax
  407313:	stos   BYTE PTR es:[edi],al
  407314:	arpl   WORD PTR [ecx-0x59c3b849],cx
  40731a:	test   DWORD PTR [edx-0x6abc9497],eax
  407320:	jb     0x407323
  407322:	push   es
  407323:	inc    edi
  407324:	xchg   edx,eax
  407325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407326:	retf   
  407327:	(bad)  
  407328:	scas   eax,DWORD PTR es:[edi]
  407329:	dec    esp
  40732a:	mov    bl,BYTE PTR [eax]
  40732c:	xchg   esi,eax
  40732d:	scas   eax,DWORD PTR es:[edi]
  40732e:	sti    
  40732f:	retf   0xc2ec
  407332:	jg     0x40734b
  407334:	jmp    0x1c60:0x12635504
  40733b:	and    ch,ch
  40733d:	add    eax,0xba094083
  407342:	adc    bl,bh
  407344:	stos   BYTE PTR es:[edi],al
  407345:	(bad)  
  407347:	(bad)  
  407348:	push   ebx
  407349:	maskmovq mm0,(bad)
  40734a:	test   DWORD PTR [edx+0x7597eb88],0xf137f55
  407354:	dec    ebx
  407355:	add    BYTE PTR [edi],bl
  407357:	addr16 xor ebx,0x70
  40735b:	mov    esi,DWORD PTR [ebx-0x700aba6f]
  407361:	loop   0x40736f
  407363:	jecxz  0x407329
  407365:	aas    
  407366:	div    DWORD PTR [edx+0x18]
  407369:	sbb    eax,0x387c697
  40736e:	jmp    0x4073e0
  407370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407371:	cs cli 
  407373:	cmp    DWORD PTR [esi+ebx*8-0x15],eax
  407377:	push   ebx
  407378:	and    eax,0x62827214
  40737d:	inc    ebx
  40737e:	jmp    0xdc3ec698
  407383:	inc    edx
  407384:	cld    
  407385:	pusha  
  407386:	fdiv   st,st(3)
  407388:	xchg   ebp,eax
  407389:	push   esi
  40738a:	std    
  40738b:	add    al,0xfc
  40738d:	jne    0x4073f9
  40738f:	push   esi
  407390:	push   ss
  407391:	and    cl,BYTE PTR [ebp+0x4e]
  407394:	sbb    bh,BYTE PTR [ebx+0x7aa1c89a]
  40739a:	xchg   edx,eax
  40739b:	test   eax,0xf89ab4a6
  4073a0:	pop    esi
  4073a1:	mov    ds:0xe5e02df8,al
  4073a6:	dec    edx
  4073a7:	add    esi,esi
  4073a9:	mov    bh,0xff
  4073ab:	mov    al,es:0x63366820
  4073b1:	repnz sti 
  4073b3:	sub    eax,0xb75e1c2e
  4073b8:	aas    
  4073b9:	loopne 0x407434
  4073bb:	inc    ebx
  4073bc:	int    0xa1
  4073be:	inc    eax
  4073bf:	mov    esi,0x21e1276f
  4073c4:	xor    eax,0xfa7cd66f
  4073c9:	out    dx,eax
  4073ca:	mov    ebx,0x24a298be
  4073cf:	pop    ds
  4073d0:	mov    cl,0xae
  4073d2:	inc    edx
  4073d3:	jecxz  0x407431
  4073d5:	aam    0x1e
  4073d7:	sahf   
  4073d8:	(bad)  
  4073da:	mov    ecx,DWORD PTR [ebp-0x2f]
  4073dd:	cmp    ch,dh
  4073df:	into   
  4073e0:	add    dl,BYTE PTR [ebp+0x6e]
  4073e3:	push   edi
  4073e4:	jae    0x407455
  4073e6:	xchg   ebp,eax
  4073e7:	xchg   esi,eax
  4073e8:	push   ss
  4073e9:	out    0xf1,al
  4073eb:	mov    ds:0x20dc6a9c,eax
  4073f0:	pop    es
  4073f1:	adc    cl,BYTE PTR [esi+0x2d]
  4073f4:	sub    BYTE PTR [ebx],bl
  4073f6:	imul   esp,DWORD PTR [edx+0x53],0x2c
  4073fa:	rcl    DWORD PTR [ebx+0x1e],1
  4073fd:	jb     0x4073ab
  4073ff:	push   eax
  407400:	js     0x40742d
  407402:	fnsave [ebx]
  407404:	arpl   bx,ax
  407406:	pop    esp
  407407:	and    DWORD PTR [ebx],esi
  407409:	out    0x80,al
  40740b:	neg    BYTE PTR ds:0x8ddf18c7
  407411:	sub    al,0xfd
  407413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407414:	es retf 0x85af
  407418:	jns    0x4073c8
  40741a:	es fucomip st,st(3)
  40741d:	popa   
  40741e:	adc    BYTE PTR [esi+esi*2],ah
  407421:	cmp    al,0x51
  407424:	mov    ecx,0xac13dd18
  407429:	shl    BYTE PTR [ebx-0x19cf26bd],cl
  40742f:	or     ah,BYTE PTR [ebp-0x6d]
  407432:	pop    ecx
  407433:	les    edx,FWORD PTR [esp+esi*1-0x52]
  407437:	add    eax,0x71218c7
  40743c:	jb     0x4073db
  40743e:	and    DWORD PTR [eax+0x35b2c081],esi
  407444:	stc    
  407445:	mov    cl,0x75
  407447:	aaa    
  407448:	dec    ebp
  407449:	pop    es
  40744a:	pop    eax
  40744b:	xor    BYTE PTR [ecx+eiz*4-0x641f367],ah
  407452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407453:	mov    edi,0x1bf66802
  407458:	ficom  DWORD PTR ds:0xca4ce4de
  40745e:	inc    ecx
  40745f:	into   
  407460:	nop
  407461:	fsubrp st(4),st
  407463:	sbb    ch,BYTE PTR ds:[eax]
  407466:	imul   ebp,esp,0x6b56cc37
  40746c:	mov    ecx,0xc2a7db3c
  407471:	cmp    edi,ebp
  407473:	push   ecx
  407474:	mov    DWORD PTR [edx+0x1d],0xa2752d6b
  40747b:	adc    ebx,DWORD PTR ds:0x5d2c9b20
  407481:	aad    0x4a
  407483:	xor    DWORD PTR [edx-0x60e37db6],ebp
  407489:	sbb    edi,ebx
  40748b:	lahf   
  40748c:	sub    eax,0xef2aebaf
  407491:	adc    DWORD PTR [edx-0x3ad35164],ebx
  407497:	pop    ds
  407498:	xchg   edx,eax
  407499:	pop    eax
  40749a:	xor    al,0xb
  40749c:	jno    0x4074a6
  40749e:	outs   dx,DWORD PTR ds:[esi]
  40749f:	pop    esi
  4074a0:	adc    dl,bh
  4074a2:	es mov al,0x4e
  4074a5:	xchg   edx,eax
  4074a6:	ins    DWORD PTR es:[edi],dx
  4074a7:	xchg   esi,eax
  4074a8:	mov    BYTE PTR [edx-0x3e024bf3],bh
  4074ae:	mov    esi,0x98587813
  4074b3:	adc    bh,BYTE PTR [ecx-0x2ce2ffb0]
  4074b9:	(bad)  
  4074ba:	xor    BYTE PTR [esi+0x46],dh
  4074bd:	jecxz  0x407518
  4074bf:	ror    DWORD PTR [edx*8-0x4ab2721f],1
  4074c6:	push   esp
  4074c7:	and    edx,esi
  4074c9:	popf   
  4074ca:	inc    edx
  4074cb:	jo     0x4074a5
  4074cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074ce:	(bad)  
  4074cf:	lahf   
  4074d0:	fwait
  4074d1:	in     eax,0xf4
  4074d3:	imul   ecx,DWORD PTR [esi-0x53],0x4f849f9b
  4074da:	add    eax,ecx
  4074dc:	xor    al,0xf4
  4074de:	es ins DWORD PTR es:[edi],dx
  4074e0:	cmp    BYTE PTR [edi],ch
  4074e2:	sub    DWORD PTR [edi-0x4bc7c75e],ebx
  4074e8:	std    
  4074e9:	mov    BYTE PTR [esi],bl
  4074eb:	mov    edx,0x42b32b82
  4074f0:	je     0x4074dd
  4074f2:	mov    dh,0xc
  4074f4:	mov    edx,0x1b12700c
  4074f9:	es jns 0x4074fe
  4074fc:	pop    ecx
  4074fd:	or     al,0xc0
  4074ff:	icebp  
  407500:	enter  0x4ee5,0xb4
  407504:	mov    eax,0x106d279e
  407509:	shl    BYTE PTR [esi-0x5d10a65c],cl
  40750f:	(bad)  
  407510:	pop    esi
  407511:	push   0x5b6d5f8f
  407516:	sbb    ch,BYTE PTR [esi+0x7bb1d99f]
  40751c:	cmp    edx,DWORD PTR [edi+0x26]
  40751f:	popa   
  407520:	enter  0x79ce,0x89
  407524:	xlat   BYTE PTR ds:[ebx]
  407525:	xchg   ecx,eax
  407526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407527:	and    dl,ch
  407529:	test   DWORD PTR [ecx+0x68],eax
  40752c:	das    
  40752d:	pop    ebx
  40752e:	mov    eax,ds:0x9e4ffd1a
  407533:	jne    0x4074f2
  407535:	jnp    0x407543
  407537:	shl    BYTE PTR [ebx-0xba1d4db],0x63
  40753e:	xor    DWORD PTR [edx],ebp
  407540:	xchg   DWORD PTR [edi+0x290e1293],eax
  407546:	mul    BYTE PTR [esi+0x4def9f51]
  40754c:	xchg   ebx,eax
  40754d:	push   ebp
  40754e:	mov    al,0x92
  407550:	cwde   
  407551:	mov    cl,0x48
  407553:	mov    dh,0x55
  407555:	cmp    ah,bl
  407557:	dec    edi
  407558:	or     eax,DWORD PTR [ebx+0x14]
  40755b:	push   ecx
  40755c:	ins    DWORD PTR es:[edi],dx
  40755d:	fild   QWORD PTR [ebx-0x66d81cf1]
  407563:	outs   dx,DWORD PTR ds:[esi]
  407564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407565:	dec    eax
  407566:	push   es
  407567:	rol    DWORD PTR ds:0x915ab591,cl
  40756d:	lea    ebx,[esi+0x391d98f4]
  407573:	add    ebp,edx
  407575:	or     ch,BYTE PTR [ebp-0x7095fc8b]
  40757b:	call   0x24de:0xb43e508a
  407582:	push   es
  407583:	(bad)  
  407584:	xchg   edx,eax
  407585:	mov    bh,0xab
  407587:	sub    ecx,0x3d
  40758a:	loopne 0x40754b
  40758c:	je     0x4075f0
  40758e:	outs   dx,DWORD PTR ds:[esi]
  40758f:	pop    esi
  407590:	xor    BYTE PTR [ecx+0x1521d72f],cl
  407596:	xchg   ebx,eax
  407597:	lds    ebp,FWORD PTR [eax+0x14]
  40759a:	inc    edx
  40759b:	call   0xa03bc913
  4075a0:	inc    edi
  4075a1:	xchg   ebp,eax
  4075a2:	push   es
  4075a3:	inc    eax
  4075a4:	test   DWORD PTR [ebx+eiz*4],ebx
  4075a7:	daa    
  4075a8:	imul   ecx,DWORD PTR [esi-0x67feb7d8],0xffffffae
  4075af:	jnp    0x4075ce
  4075b1:	mov    edx,0xc5a6916c
  4075b6:	add    al,0x78
  4075b8:	out    dx,eax
  4075b9:	retf   
  4075ba:	gs xlat BYTE PTR es:[ebx]
  4075bd:	addr16 push ss
  4075bf:	pop    ecx
  4075c0:	mov    ds:0x6ebe7155,al
  4075c5:	lahf   
  4075c6:	sbb    BYTE PTR [edx-0x1e6fcd36],bl
  4075cc:	(bad)  
  4075cd:	je     0x4075a2
  4075cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075d0:	jae    0x407635
  4075d2:	addr16 xchg ebp,eax
  4075d4:	inc    ecx
  4075d5:	xor    eax,0x30cee808
  4075da:	mov    ebx,0x9c56ec5f
  4075df:	iret   
  4075e0:	and    esp,DWORD PTR [esi-0x39]
  4075e3:	call   0xe72c:0x2420821
  4075ea:	pop    ecx
  4075eb:	cmp    eax,0x834d2d6d
  4075f0:	pop    esp
  4075f1:	fcmovu st,st(7)
  4075f3:	jo     0x407639
  4075f5:	push   0x5a5eca9d
  4075fa:	and    al,0xc0
  4075fc:	aad    0x81
  4075fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075ff:	in     al,dx
  407600:	push   edi
  407601:	jb     0x407612
  407603:	add    ch,BYTE PTR [edi]
  407605:	js     0x40764a
  407607:	dec    eax
  407608:	cmp    DWORD PTR [ebx-0x1143b04e],esp
  40760e:	or     bh,BYTE PTR [edi]
  407610:	pop    eax
  407611:	jecxz  0x4075e2
  407613:	aad    0xef
  407615:	push   edi
  407616:	mov    bh,0xc5
  407618:	and    al,0x8b
  40761a:	dec    ebp
  40761b:	(bad)  
  40761d:	cmp    eax,0x671d33ec
  407622:	sub    BYTE PTR [edx+0x702cf0ea],0xf2
  407629:	repz mov bh,0xb7
  40762c:	sar    esp,1
  40762e:	mov    ebx,0x862e6b6a
  407633:	sub    bl,dl
  407635:	jae    0x407697
  407637:	xchg   ebx,eax
  407638:	gs in  al,dx
  40763a:	push   ds
  40763b:	stc    
  40763c:	dec    DWORD PTR ds:0x79f71fac
  407642:	xchg   ecx,eax
  407643:	mov    eax,0x5ac3f7b9
  407648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407649:	rcr    DWORD PTR [edi+0x4b],1
  40764c:	sub    al,0x56
  40764e:	shr    BYTE PTR [esi-0x7c],0x2f
  407652:	loopne 0x407689
  407654:	jp     0x407604
  407656:	cmp    al,0xe
  407658:	(bad)  
  40765b:	dec    eax
  40765c:	pop    ds
  40765d:	and    al,0x6f
  40765f:	in     al,dx
  407660:	mov    ebx,0xb23b7ab5
  407665:	pop    esi
  407666:	(bad)  
  407667:	sub    eax,0xdbc4f09
  40766c:	sbb    BYTE PTR [esi+ebp*2],cl
  40766f:	cmp    DWORD PTR [ecx+0x13],ecx
  407672:	pop    ds
  407673:	pop    edi
  407674:	adc    dl,BYTE PTR [ebp-0x6b3bcec8]
  40767a:	cdq    
  40767b:	pop    ds
  40767c:	and    ch,BYTE PTR [ebp-0x545e5eb6]
  407682:	sub    bh,ch
  407684:	push   cs
  407685:	dec    esi
  407686:	test   eax,0x58a62872
  40768b:	sub    eax,0xec25cb5e
  407690:	mov    ecx,0x9aec2a
  407695:	fild   WORD PTR [esi]
  407697:	clc    
  407698:	lock scas eax,DWORD PTR es:[edi]
  40769a:	into   
  40769b:	adc    dh,BYTE PTR [eax+0x3b]
  40769e:	mov    ds:0x6c066401,eax
  4076a3:	push   ds
  4076a4:	xchg   ecx,eax
  4076a5:	aaa    
  4076a6:	iret   
  4076a7:	cmp    esp,DWORD PTR [ecx+0x23]
  4076aa:	out    dx,eax
  4076ab:	jmp    0x9a78:0xcd43645
  4076b2:	xor    cl,ah
  4076b4:	addr16 jns 0x407670
  4076b7:	nop
  4076b8:	cmp    eax,0xa3e08f86
  4076bd:	lds    edx,FWORD PTR [ebx+0x1a750c3]
  4076c3:	cmp    eax,0x41cb5082
  4076c8:	dec    ebx
  4076c9:	mov    esi,DWORD PTR [edx+0x37]
  4076cc:	inc    eax
  4076cd:	neg    BYTE PTR [ebx-0x215236fa]
  4076d3:	mov    dh,BYTE PTR [esi-0x57]
  4076d6:	daa    
  4076d7:	push   ds
  4076d8:	mov    ch,0x2c
  4076da:	fs das 
  4076dc:	push   cs
  4076dd:	in     al,0x47
  4076df:	sbb    DWORD PTR es:[ecx-0x31a0532b],ebp
  4076e6:	xor    eax,0xd7bcecc9
  4076eb:	mov    cl,0x65
  4076ed:	retf   
  4076ee:	jmp    0x836ab231
  4076f3:	sahf   
  4076f4:	fild   DWORD PTR [edx-0x38c12b52]
  4076fa:	add    eax,0xb36889e8
  4076ff:	dec    ecx
  407700:	enter  0xdbcc,0x5d
  407704:	xor    DWORD PTR [edx+0x65cef8cd],edx
  40770a:	inc    esi
  40770b:	jo     0x407755
  40770d:	and    DWORD PTR [eax+0x32d75b1b],edx
  407713:	out    0x55,al
  407715:	(bad)  
  407716:	and    DWORD PTR [esi+0x4d80e079],edi
  40771c:	cmp    ebx,DWORD PTR [edi+edi*8+0x5f0c7587]
  407723:	inc    edi
  407724:	xchg   edi,eax
  407725:	enter  0x7a02,0x8d
  407729:	in     al,0x11
  40772b:	fadd   QWORD PTR [ecx-0x15]
  40772e:	adc    dl,BYTE PTR [edi+eiz*4+0x5f7aef1c]
  407735:	jno    0x40779e
  407737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407738:	aaa    
  407739:	push   esp
  40773a:	sbb    al,0xc6
  40773c:	and    DWORD PTR [edx+eax*2-0x78709493],ebx
  407743:	pop    ebp
  407744:	out    dx,eax
  407745:	jbe    0x4076fd
  407747:	sbb    al,BYTE PTR es:[edi+0x9]
  40774b:	xor    ah,bh
  40774d:	or     dh,BYTE PTR [ebx-0xbccd04a]
  407753:	jmp    0x3e18c0b0
  407758:	cmp    dl,BYTE PTR [edx]
  40775a:	jle    0x407741
  40775c:	dec    edx
  40775d:	clc    
  40775e:	fs call 0x8b3c:0x245912e7
  407766:	sub    al,BYTE PTR [edi-0x3fd83b45]
  40776c:	neg    BYTE PTR ds:0x1c58a74e
  407772:	std    
  407773:	pop    esp
  407774:	mov    ds:0x17b8766a,eax
  407779:	mov    bh,0x53
  40777b:	test   eax,0xc594c0fa
  407780:	call   0xc494705e
  407785:	fldcw  WORD PTR [ebp-0xd667bcd]
  40778b:	xor    eax,0xe25a4cff
  407790:	pop    edi
  407791:	sub    al,0xf4
  407793:	test   eax,0xc04d6356
  407798:	or     esp,DWORD PTR [eax+0x2b]
  40779b:	or     BYTE PTR [eax+0x76],dh
  40779e:	lahf   
  40779f:	lock in eax,dx
  4077a1:	cdq    
  4077a2:	sub    dl,BYTE PTR [ebx]
  4077a4:	ret    0x716d
  4077a7:	cmp    al,0x14
  4077a9:	push   0xffffffea
  4077ab:	aad    0x17
  4077ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ae:	push   edx
  4077af:	iret   
  4077b0:	aad    0xc8
  4077b2:	push   edx
  4077b3:	push   ebp
  4077b4:	jo     0x4077c5
  4077b6:	ins    BYTE PTR es:[edi],dx
  4077b7:	popf   
  4077b8:	mov    ebx,0xeef15767
  4077bd:	inc    ebp
  4077be:	gs xchg esi,eax
  4077c0:	repz cmp al,0xf9
  4077c3:	sub    al,0xa1
  4077c5:	and    bh,al
  4077c7:	in     eax,dx
  4077c8:	popf   
  4077c9:	mov    eax,ds:0xfb73ba50
  4077ce:	mov    al,ds:0x4b5de5b0
  4077d3:	mov    ds:0x37bddeed,al
  4077d8:	int3   
  4077d9:	addr16 ss ss pop ecx
  4077dd:	addr16 in al,dx
  4077df:	test   al,0x69
  4077e1:	adc    al,0xe8
  4077e3:	(bad)  
  4077e5:	cli    
  4077e6:	out    dx,eax
  4077e7:	(bad)  
  4077e8:	lock rol BYTE PTR [ecx],cl
  4077eb:	or     BYTE PTR [ebx+0x16],bl
  4077ee:	div    al
  4077f0:	in     al,dx
  4077f1:	int    0x57
  4077f3:	outs   dx,DWORD PTR ds:[esi]
  4077f4:	fisttp WORD PTR [bp+si+0x1435]
  4077f9:	and    al,BYTE PTR ds:0x3091d72b
  4077ff:	mov    ch,0x21
  407801:	pop    esi
  407802:	scas   eax,DWORD PTR es:[edi]
  407803:	movsx  esi,WORD PTR [eax]
  407806:	shl    DWORD PTR [ebp+0x21],0xca
  40780a:	call   0x9c4e8caa
  40780f:	and    al,0xc1
  407811:	dec    eax
  407812:	lods   al,BYTE PTR ds:[esi]
  407813:	mov    al,ds:0x240f7a2b
  407818:	mov    edi,DWORD PTR [edx-0x26513ab7]
  40781e:	pop    es
  40781f:	in     eax,dx
  407820:	xchg   ebp,eax
  407821:	jb     0x407808
  407823:	pop    ebp
  407824:	push   0xffffffbd
  407826:	scas   al,BYTE PTR es:[edi]
  407827:	xor    DWORD PTR [ebp+0x7a45a28e],ecx
  40782d:	and    BYTE PTR [ebx+esi*2-0x54],0xc7
  407832:	jo     0x407870
  407834:	in     al,dx
  407835:	inc    edx
  407836:	mov    bl,0xac
  407838:	push   cs
  407839:	push   edx
  40783a:	lods   al,BYTE PTR ds:[esi]
  40783b:	pop    eax
  40783c:	mov    esp,0xc86dddc6
  407841:	ret    
  407842:	fstp   DWORD PTR [ecx+0x7e]
  407845:	mov    dl,0xe6
  407847:	mov    bl,0x9c
  407849:	xor    bl,dl
  40784b:	pop    es
  40784c:	mov    al,ds:0xd1e8ffb
  407851:	int3   
  407852:	in     eax,0x22
  407854:	mov    WORD PTR [eax-0x1a],?
  407857:	shl    ebx,0x7e
  40785a:	mov    al,0x4
  40785c:	hlt    
  40785d:	inc    edx
  40785e:	in     al,0xfe
  407860:	jo     0x407863
  407862:	nop
  407863:	xor    al,0x61
  407865:	cmp    al,0x63
  407867:	push   ss
  407868:	jmp    0x407854
  40786a:	enter  0x322f,0x98
  40786e:	call   0xc89c:0xfc4a038c
  407875:	out    dx,al
  407876:	out    0x99,eax
  407878:	mov    ch,0xed
  40787a:	sahf   
  40787b:	push   edx
  40787c:	mov    bl,0x13
  40787e:	sbb    eax,0x739e0cfb
  407883:	xor    eax,0x2cf44985
  407888:	test   DWORD PTR [ebx-0x5c59fab6],edi
  40788e:	arpl   WORD PTR [eax+0x3b180d14],sp
  407894:	pop    edx
  407895:	cdq    
  407896:	sbb    eax,0xf65c5e09
  40789b:	dec    edi
  40789c:	mov    ds:0xeed2cc98,al
  4078a1:	mov    esp,eax
  4078a3:	test   al,0x6c
  4078a5:	mov    ecx,DWORD PTR [edi+0x6e]
  4078a8:	mov    eax,ds:0xa6a36427
  4078ad:	jmp    0xbcd2721c
  4078b2:	or     edx,DWORD PTR [edx]
  4078b4:	imul   ecx,DWORD PTR [edi+0x6fcaa611],0x3f6c353c
  4078be:	dec    edi
  4078bf:	pop    ebx
  4078c0:	ret    0x3c22
  4078c3:	ds int 0xf8
  4078c6:	jmp    DWORD PTR [edx+0x4]
  4078c9:	arpl   WORD PTR [ebx],cx
  4078cb:	rcl    BYTE PTR [eax-0x1e],0x52
  4078cf:	push   cs
  4078d0:	dec    esi
  4078d1:	ja     0x4078bc
  4078d3:	enter  0x45b5,0xc9
  4078d7:	push   0x5a63d63
  4078dc:	or     DWORD PTR [ecx-0x7eaa2fcc],ebp
  4078e2:	or     DWORD PTR [esi+0x5473eac9],ebp
  4078e8:	lahf   
  4078e9:	sar    esp,cl
  4078eb:	xor    BYTE PTR [ecx],dl
  4078ed:	test   al,0x7
  4078ef:	jmp    0xa562:0xf671bcb1
  4078f6:	fcom   DWORD PTR [edx]
  4078f8:	lods   eax,DWORD PTR ds:[esi]
  4078f9:	call   0xd6d9:0x96db351c
  407900:	icebp  
  407901:	fmul   QWORD PTR ds:0xa7337ec4
  407907:	or     eax,0xbe6bee62
  40790c:	arpl   bp,sp
  40790e:	xchg   esi,eax
  40790f:	add    eax,0xe02b259d
  407914:	mov    esp,eax
  407916:	push   ds
  407917:	inc    eax
  407918:	inc    edx
  407919:	sub    ch,BYTE PTR [ebx-0x14d8b40]
  40791f:	scas   eax,DWORD PTR es:[edi]
  407920:	stos   BYTE PTR es:[edi],al
  407921:	daa    
  407922:	sub    eax,0x4ae63732
  407927:	add    BYTE PTR [esi+0x76],dh
  40792a:	(bad)  
  40792b:	adc    edi,DWORD PTR [edx-0x64]
  40792e:	pop    eax
  40792f:	mov    edi,0x1b3f6c11
  407934:	cs addr16 fs inc edi
  407938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407939:	test   eax,0x9d7e6114
  40793e:	cmp    eax,0xf85b3c6f
  407943:	mov    ecx,0x6f4b8133
  407948:	and    eax,0xad2f3626
  40794d:	popf   
  40794e:	call   0x47589f19
  407953:	sbb    BYTE PTR [ebp+0x17e916aa],dl
  407959:	xchg   ecx,eax
  40795a:	mov    ebp,0x437e1688
  40795f:	sahf   
  407960:	sub    BYTE PTR [edx+0x660ca48b],bh
  407966:	mov    eax,0xbf420cf8
  40796b:	sahf   
  40796c:	add    esi,ebx
  40796e:	push   eax
  40796f:	push   edx
  407970:	stos   DWORD PTR es:[edi],eax
  407971:	and    DWORD PTR [eax+0x13],ebx
  407974:	push   ss
  407975:	(bad)  
  407976:	lock pop es
  407978:	mov    edx,0xaf169a31
  40797d:	xchg   esi,eax
  40797e:	jne    0x407984
  407980:	pop    ebx
  407981:	jg     0x407937
  407983:	aad    0x50
  407985:	cdq    
  407986:	test   DWORD PTR [edx+0x1974f25a],0x4f957474
  407990:	mov    eax,edx
  407992:	sbb    eax,0x32856a00
  407997:	inc    esp
  407998:	neg    BYTE PTR [edi-0x71e11aba]
  40799e:	dec    esi
  40799f:	in     eax,dx
  4079a0:	or     DWORD PTR [edi],ebp
  4079a2:	jbe    0x4079cb
  4079a4:	out    dx,eax
  4079a5:	pop    ecx
  4079a6:	(bad)  
  4079a8:	push   ecx
  4079a9:	push   eax
  4079aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079ab:	xor    esi,DWORD PTR ds:0x79bebb79
  4079b1:	std    
  4079b2:	call   0x80f8:0x677bec81
  4079b9:	inc    DWORD PTR [eax-0x55]
  4079bc:	pop    ecx
  4079bd:	push   ds
  4079be:	mov    esi,0x94858b29
  4079c3:	test   al,0x59
  4079c5:	rcr    BYTE PTR [esi],1
  4079c7:	fild   DWORD PTR [ebp+0x5c342896]
  4079cd:	push   ds
  4079ce:	or     ah,dh
  4079d0:	dec    ebx
  4079d1:	inc    esi
  4079d2:	mov    ah,BYTE PTR [ebp+0x46]
  4079d5:	call   0xeacc:0xccf61d6
  4079dc:	(bad)  
  4079de:	or     edi,ebp
  4079e0:	clc    
  4079e1:	popa   
  4079e2:	adc    eax,DWORD PTR [edi]
  4079e4:	xchg   ebx,eax
  4079e5:	imul   eax,DWORD PTR [ecx-0x2cab9f10],0x1886011e
  4079ef:	scas   al,BYTE PTR es:[edi]
  4079f0:	inc    ecx
  4079f1:	gs push ecx
  4079f3:	cwde   
  4079f4:	into   
  4079f5:	sbb    al,dh
  4079f7:	movzx  ebp,si
  4079fa:	cdq    
  4079fb:	ss hlt 
  4079fd:	and    BYTE PTR es:[ebx+0x1bd2bcf8],cl
  407a04:	aas    
  407a05:	inc    ebx
  407a06:	fcomip st,st(6)
  407a08:	mov    WORD PTR [edx+ebp*4-0x14],es
  407a0c:	(bad)  
  407a0d:	jne    0x407a3a
  407a0f:	test   DWORD PTR [esp+edx*1],esp
  407a12:	retf   0x5f52
  407a15:	pop    ss
  407a16:	push   ebp
  407a17:	repz or edi,0x8881a0df
  407a1e:	es ss adc eax,0x3f247ec4
  407a25:	push   esp
  407a26:	ret    
  407a27:	imul   BYTE PTR ds:0xfbebe1b2
  407a2d:	push   0xffffffd1
  407a2f:	sub    BYTE PTR [edx-0x4a5074ff],al
  407a35:	sti    
  407a36:	pop    eax
  407a37:	mov    eax,ds:0x8170df0d
  407a3c:	and    ebp,ebp
  407a3e:	cs repz jmp 0x407a4e
  407a42:	test   BYTE PTR [ebx+0xa],al
  407a45:	pushf  
  407a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a47:	jmp    DWORD PTR [edx+ecx*4]
  407a4a:	and    BYTE PTR [edx],cl
  407a4c:	add    dl,BYTE PTR [edi+0x2a]
  407a4f:	popa   
  407a50:	ret    
  407a51:	out    0xc6,eax
  407a53:	or     al,0xfe
  407a55:	cld    
  407a56:	pop    ebx
  407a57:	mov    ecx,0xd7689e0b
  407a5c:	jmp    0x8a73:0x4d10ef60
  407a63:	pop    edx
  407a64:	add    cl,BYTE PTR [eax+0x4b]
  407a67:	pop    ebp
  407a68:	mov    ebx,0x78cbf0a9
  407a6d:	push   esi
  407a6e:	ret    
  407a6f:	xchg   ebx,eax
  407a70:	xor    eax,0x89c880d2
  407a75:	jns    0x407a7c
  407a77:	push   eax
  407a78:	pop    eax
  407a79:	scas   al,BYTE PTR es:[edi]
  407a7a:	cmp    DWORD PTR [ebp+0x2b],edx
  407a7d:	adc    BYTE PTR [ebp+0x78038140],bh
  407a83:	mov    ecx,0x84bb0f23
  407a88:	pop    edi
  407a89:	pop    edi
  407a8a:	jo     0x407a59
  407a8c:	popf   
  407a8d:	retf   0xa75a
  407a90:	icebp  
  407a91:	outs   dx,DWORD PTR ds:[esi]
  407a92:	push   edx
  407a93:	popa   
  407a94:	lods   eax,DWORD PTR ds:[esi]
  407a95:	jl     0x407a51
  407a97:	push   eax
  407a98:	pop    ebx
  407a99:	and    al,BYTE PTR [edx-0x65cbc7d6]
  407a9f:	inc    edi
  407aa0:	(bad)  
  407aa1:	aad    0xe9
  407aa3:	mov    ds:0x2f50eaab,eax
  407aa8:	xchg   ecx,eax
  407aa9:	jp     0x407a73
  407aab:	xor    BYTE PTR [ebp-0x6a06e95a],dl
  407ab1:	sti    
  407ab2:	jl     0x407ab6
  407ab4:	call   0x86137dc2
  407ab9:	push   cs
  407aba:	or     eax,0xf58d7802
  407abf:	scas   al,BYTE PTR es:[edi]
  407ac0:	jge    0x407ad2
  407ac2:	cwde   
  407ac3:	daa    
  407ac4:	in     al,dx
  407ac5:	rol    DWORD PTR [esi+0x7c9358d4],1
  407acb:	jecxz  0x407b33
  407acd:	pop    edx
  407ace:	mov    edx,DWORD PTR [ebx+0x35]
  407ad1:	xchg   edi,eax
  407ad2:	adc    DWORD PTR [ecx-0x85bdca6],esi
  407ad8:	cmp    eax,0x655c6695
  407add:	lahf   
  407ade:	push   ebp
  407adf:	pop    es
  407ae0:	cmp    eax,0x7878780a
  407ae5:	fucomip st,st(5)
  407ae7:	add    BYTE PTR [ebx],dl
  407ae9:	mov    edi,0xdb684630
  407aee:	or     eax,0x8cb3ac70
  407af3:	test   BYTE PTR [ebx-0x47fcc2cb],al
  407af9:	(bad)  
  407afb:	lahf   
  407afc:	cs ins DWORD PTR es:[edi],dx
  407afe:	scas   al,BYTE PTR es:[edi]
  407aff:	ss hlt 
  407b01:	add    al,0x6b
  407b03:	xchg   esi,eax
  407b04:	xchg   edx,eax
  407b05:	cmp    dl,BYTE PTR [edi+0x7086de7c]
  407b0b:	popf   
  407b0c:	sti    
  407b0d:	out    dx,eax
  407b0e:	in     al,0xdb
  407b10:	das    
  407b11:	or     ecx,0xffffffe3
  407b14:	les    ecx,FWORD PTR [ebp+0x61]
  407b17:	dec    ebx
  407b18:	cmp    al,0xce
  407b1a:	ss xchg ebp,eax
  407b1c:	sti    
  407b1d:	repnz sbb bh,BYTE PTR [edi-0x72080fdc]
  407b24:	or     edx,0xdb24364
  407b2a:	int    0x55
  407b2c:	and    eax,0x7b4c9ab9
  407b31:	int3   
  407b32:	pop    esp
  407b33:	or     edi,edx
  407b35:	out    dx,al
  407b36:	out    dx,al
  407b37:	push   edx
  407b38:	stos   DWORD PTR es:[edi],eax
  407b39:	std    
  407b3a:	adc    DWORD PTR [edx+0x741fbd42],0xfbf78d2b
  407b44:	and    dl,bh
  407b46:	add    DWORD PTR [edi+0x6],0x37
  407b4a:	mov    al,BYTE PTR [esi+esi*2-0x76c7aa18]
  407b51:	lods   al,BYTE PTR ds:[esi]
  407b52:	fwait
  407b53:	jl     0x407b1c
  407b55:	out    0xca,eax
  407b57:	jo     0x407b7a
  407b59:	pop    cx
  407b5b:	jg     0x407bd2
  407b5d:	push   ebp
  407b5e:	add    DWORD PTR [esi-0x7081ef68],edi
  407b64:	in     al,dx
  407b65:	in     al,dx
  407b66:	dec    ebx
  407b67:	and    DWORD PTR [eax+0xb],ebx
  407b6a:	in     al,0x51
  407b6c:	cmp    al,0xfa
  407b6e:	jbe    0x407b12
  407b70:	nop
  407b71:	add    eax,edi
  407b73:	shl    BYTE PTR [edi-0x40],cl
  407b76:	adc    eax,0x74b87aad
  407b7b:	dec    ah
  407b7d:	ja     0x407bc1
  407b7f:	xchg   esi,eax
  407b80:	mov    es,WORD PTR [bx+di+0x4f]
  407b84:	arpl   WORD PTR [ebx+ebx*1],ax
  407b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b88:	aas    
  407b89:	jne    0x407b64
  407b8b:	test   eax,0x10169ffe
  407b90:	and    ebp,esp
  407b92:	or     ch,BYTE PTR [esi+0x1c]
  407b95:	cmc    
  407b96:	mov    eax,ds:0xca02e42e
  407b9b:	pushf  
  407b9c:	mov    ah,ch
  407b9e:	mul    BYTE PTR [ebx]
  407ba0:	pushf  
  407ba1:	mov    ds:0x7173c897,al
  407ba6:	add    BYTE PTR [esi+0x50ab8099],bh
  407bac:	into   
  407bad:	aaa    
  407bae:	jb     0x407bcd
  407bb0:	xchg   edx,eax
  407bb1:	or     al,0xae
  407bb3:	fbld   TBYTE PTR [ebx]
  407bb5:	mov    bl,0x4e
  407bb7:	and    al,0xd7
  407bb9:	mov    esi,0xa2ac63c0
  407bbe:	js     0x407bef
  407bc0:	jne    0x407b44
  407bc2:	jmp    FWORD PTR [ebx-0x62]
  407bc5:	(bad)  
  407bc6:	daa    
  407bc7:	test   al,0xc9
  407bc9:	push   0x55
  407bcb:	(bad)  
  407bcc:	imul   esi,ebx,0x78
  407bcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bd0:	imul   BYTE PTR [esi+edi*1-0x1e024ee1]
  407bd7:	gs ja  0x407c3a
  407bda:	bound  esi,QWORD PTR [ebp+0x84bbfd9]
  407be0:	push   ss
  407be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be2:	imul   ecx,DWORD PTR [ebp-0x7a678f67],0x4f650c50
  407bec:	pop    esp
  407bed:	mov    bl,0x18
  407bef:	rcl    DWORD PTR [edx+eiz*1-0x29f7d72],0x1d
  407bf7:	stos   BYTE PTR es:[edi],al
  407bf8:	add    ah,BYTE PTR [eax+0x73eb73fe]
  407bfe:	repz inc esi
  407c00:	out    dx,al
  407c01:	mov    cl,0x13
  407c03:	pushf  
  407c04:	mov    bh,0xe8
  407c06:	or     eax,0x99d91b5
  407c0b:	out    dx,eax
  407c0c:	mov    dl,0x94
  407c0e:	mov    edi,DWORD PTR [ebp+0x225b3807]
  407c14:	hlt    
  407c15:	fistp  DWORD PTR [eax]
  407c17:	dec    ecx
  407c18:	adc    DWORD PTR [ebp-0x39],ebx
  407c1b:	(bad)  
  407c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c1d:	add    al,al
  407c1f:	add    DWORD PTR [eax+0x129deeba],ebp
  407c25:	mov    bh,0xa
  407c27:	ret    
  407c28:	jmp    0x407beb
  407c2a:	mov    ds:0xe0644da4,al
  407c2f:	cmc    
  407c30:	(bad)  
  407c31:	sbb    DWORD PTR [edx],eax
  407c33:	enter  0x4dbc,0xac
  407c37:	inc    esi
  407c38:	push   0xffffffe9
  407c3a:	mov    bl,0x6
  407c3c:	test   BYTE PTR [ebx],ch
  407c3e:	mov    esp,0x387c7c12
  407c43:	adc    dl,BYTE PTR [esp+eax*8-0x35f165dd]
  407c4a:	pop    eax
  407c4b:	lock outs dx,BYTE PTR ds:[esi]
  407c4d:	sub    bl,BYTE PTR [edx]
  407c4f:	out    0x8f,al
  407c51:	cmp    DWORD PTR [edi+0x0],edi
  407c54:	xor    BYTE PTR [eax+0x66],ah
  407c57:	mov    ss,WORD PTR [ebx-0x4d]
  407c5a:	jle    0x407c2c
  407c5c:	sub    BYTE PTR [ecx-0x36],al
  407c5f:	fs push ds
  407c61:	les    ebp,FWORD PTR [esi]
  407c63:	inc    edi
  407c64:	and    ah,al
  407c66:	stc    
  407c67:	pop    ss
  407c68:	ror    DWORD PTR [esi+edi*8+0x49],cl
  407c6c:	xor    eax,0xe15f0a9b
  407c71:	jae    0x407c0c
  407c73:	mov    eax,0xd9e7f807
  407c78:	rcr    BYTE PTR [ebx+eiz*1-0x33],0xd0
  407c7d:	sub    al,BYTE PTR [ebp-0x1d]
  407c80:	push   0x89e84d42
  407c85:	es dec ecx
  407c87:	scas   eax,DWORD PTR es:[edi]
  407c88:	call   0x7e86:0x960cb0f1
  407c8f:	mov    ds,WORD PTR [edx+0x3d]
  407c92:	xor    eax,0xe3de0cc8
  407c97:	data16 mov BYTE PTR [esi-0x7d9b6b96],bh
  407c9e:	mov    bl,0x33
  407ca0:	or     DWORD PTR [esp+edi*4-0x80],0xffffff87
  407ca5:	adc    eax,0xb8bbe5ea
  407caa:	fs test eax,0x1fcbaff4
  407cb0:	and    esi,ecx
  407cb2:	inc    esp
  407cb3:	fld    DWORD PTR [edi-0x2fcca925]
  407cb9:	dec    edx
  407cba:	loope  0x407c72
  407cbc:	jp     0x407c86
  407cbe:	add    bl,bl
  407cc0:	mov    ebx,0xbf1edc53
  407cc5:	mov    DWORD PTR [ebp+0x6c0e6d9e],ebp
  407ccb:	sbb    DWORD PTR es:[ebx-0x1e549d5e],ecx
  407cd2:	adc    bl,BYTE PTR [ebx+0x56]
  407cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd6:	jle    0x407d17
  407cd8:	push   ebp
  407cd9:	mov    dl,BYTE PTR [ebp+0x1339f8a6]
  407cdf:	mov    edi,0x84ca8537
  407ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce5:	cli    
  407ce6:	xor    BYTE PTR [ecx-0x138b9916],cl
  407cec:	into   
  407ced:	adc    al,0x4f
  407cef:	(bad)  
  407cf0:	loope  0x407d59
  407cf2:	mov    ebp,0x8daca4a1
  407cf7:	dec    ecx
  407cf8:	adc    eax,0xf660b3df
  407cfd:	cld    
  407cfe:	mov    bh,0x5a
  407d00:	sub    al,0x4a
  407d02:	jae    0x407c9a
  407d04:	adc    DWORD PTR [eax+0x1f91b86e],edi
  407d0a:	jecxz  0x407d76
  407d0c:	fwait
  407d0d:	inc    esp
  407d0e:	xchg   cl,bh
  407d10:	add    ch,bl
  407d12:	add    ebp,DWORD PTR [ebx+edx*8]
  407d15:	fscale 
  407d17:	dec    ecx
  407d18:	pop    edi
  407d19:	dec    ebx
  407d1a:	lahf   
  407d1b:	pusha  
  407d1c:	xchg   ecx,eax
  407d1d:	jmp    0x3dc3:0xeaa2e7ba
  407d24:	mov    esp,0xb75d19ce
  407d29:	aas    
  407d2a:	mov    dh,0x92
  407d2c:	test   cl,ch
  407d2e:	pop    ebp
  407d2f:	in     eax,dx
  407d30:	mov    ah,0x0
  407d32:	js     0x407da5
  407d34:	pushf  
  407d35:	adc    BYTE PTR ds:0xe01118e8,ch
  407d3b:	int    0xb8
  407d3d:	push   cs
  407d3e:	add    eax,0x483e1aac
  407d43:	cmp    eax,edi
  407d45:	sbb    BYTE PTR [ecx],dl
  407d47:	das    
  407d48:	pop    edx
  407d49:	xor    edi,DWORD PTR [edi+eiz*1+0x269d0be1]
  407d50:	aas    
  407d51:	hlt    
  407d52:	push   eax
  407d53:	xchg   BYTE PTR [ebp-0x18eb0aa6],bl
  407d59:	cmp    dl,bl
  407d5b:	cs push edi
  407d5d:	test   eax,0xc94f0739
  407d62:	cmc    
  407d63:	push   es
  407d64:	push   edx
  407d65:	jb     0x407d6b
  407d67:	fild   QWORD PTR [edi+0x8]
  407d6a:	add    eax,0x1921644d
  407d6f:	mov    bl,0xba
  407d71:	xchg   ebp,eax
  407d72:	pushf  
  407d73:	xchg   edx,eax
  407d74:	xchg   ebx,eax
  407d75:	daa    
  407d76:	xlat   BYTE PTR ds:[ebx]
  407d77:	ja     0x407d58
  407d79:	cmp    eax,0xb3e0d3cd
  407d7e:	push   cs
  407d7f:	xor    BYTE PTR [eax-0x12],0x3f
  407d83:	adc    al,0xba
  407d85:	shr    DWORD PTR [edi],0x1e
  407d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d89:	test   BYTE PTR [ebx-0x3a],ah
  407d8c:	fwait
  407d8d:	push   ss
  407d8e:	outs   dx,BYTE PTR ds:[esi]
  407d8f:	mov    DWORD PTR [ecx-0x48],eax
  407d92:	xor    ecx,DWORD PTR [esi]
  407d94:	dec    edi
  407d95:	test   eax,0xb0dec3be
  407d9a:	lea    esi,[ecx+0x4e]
  407d9d:	enter  0x5bdd,0x75
  407da1:	push   es
  407da2:	xor    BYTE PTR [edi+0x53],ch
  407da5:	pusha  
  407da6:	push   esi
  407da7:	out    0xd5,eax
  407da9:	xchg   ecx,eax
  407daa:	mov    esp,0xb7897b2f
  407daf:	push   esp
  407db0:	mov    ch,0xef
  407db2:	sbb    BYTE PTR [ecx+edx*4+0x1fa6eb7f],dh
  407db9:	shl    edx,1
  407dbb:	into   
  407dbc:	bound  esi,QWORD PTR [eax]
  407dbe:	sub    DWORD PTR [edx+0xd],0x35067c45
  407dc5:	pop    edi
  407dc6:	ud0    edi,DWORD PTR [ebp-0x28eb34d]
  407dcd:	jae    0x407dd7
  407dcf:	ret    0xe86d
  407dd2:	jl     0x407df8
  407dd4:	dec    edi
  407dd5:	xor    al,0xa7
  407dd7:	mul    DWORD PTR [esi+ebp*1]
  407dda:	leave  
  407ddb:	in     eax,dx
  407ddc:	mov    WORD PTR [ebp+0x19f37646],?
  407de2:	ror    BYTE PTR [eax-0x5f],cl
  407de5:	adc    bh,BYTE PTR [edx]
  407de7:	gs dec ebp
  407de9:	jge    0x407d8d
  407deb:	dec    ebx
  407dec:	ins    DWORD PTR es:[edi],dx
  407ded:	sub    eax,0x8648dd2d
  407df2:	test   BYTE PTR [esi],al
  407df4:	cmp    ebx,ecx
  407df6:	ins    DWORD PTR es:[edi],dx
  407df7:	and    DWORD PTR [ebx-0x32],edx
  407dfa:	mov    esp,0x40d6a640
  407dff:	mov    dh,0xe2
  407e01:	add    al,BYTE PTR [ebp-0x41]
  407e04:	xlat   BYTE PTR ds:[ebx]
  407e05:	(bad)  
  407e06:	fistp  QWORD PTR [esi+0x74]
  407e09:	scas   eax,DWORD PTR es:[edi]
  407e0a:	bound  edx,QWORD PTR [ebx+0x52d075b1]
  407e10:	(bad)  
  407e11:	xor    DWORD PTR [ebp+0x478677fd],edi
  407e17:	dec    eax
  407e18:	dec    esi
  407e19:	ss mov dh,0x87
  407e1c:	arpl   WORD PTR [edx-0x2],bx
  407e1f:	sbb    eax,0x605e21c3
  407e24:	sub    ebx,DWORD PTR [ecx-0x1fe3fdd4]
  407e2a:	xchg   ebx,eax
  407e2b:	or     al,0x7b
  407e2d:	push   ecx
  407e2e:	test   BYTE PTR [ebx+0x55dbc769],ah
  407e34:	jno    0x407ea2
  407e36:	cmp    bh,BYTE PTR [esi*1-0x3947fd50]
  407e3d:	fcmovnu st,st(2)
  407e3f:	(bad)  
  407e40:	call   0x930c:0x4e0b3871
  407e47:	cld    
  407e48:	out    dx,eax
  407e49:	cwde   
  407e4a:	mov    ds:0xe701866a,al
  407e4f:	jns    0x407ebe
  407e51:	sbb    eax,0xfe126690
  407e56:	shl    BYTE PTR [eax],1
  407e58:	ja     0x407e06
  407e5a:	adc    DWORD PTR [esi+0x44cab986],esi
  407e60:	add    DWORD PTR [edx],edx
  407e62:	xchg   edi,eax
  407e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e64:	je     0x407e3f
  407e66:	mov    ecx,0x121dc635
  407e6b:	mov    dh,0xf0
  407e6d:	pushf  
  407e6e:	scas   al,BYTE PTR es:[edi]
  407e6f:	in     eax,0x55
  407e71:	addr16 fucomip st,st(5)
  407e74:	lea    ebx,[eax]
  407e76:	cwde   
  407e77:	jo     0x407eca
  407e79:	retf   0xd540
  407e7c:	repnz out dx,eax
  407e7e:	mov    bl,0x2
  407e80:	test   al,0x85
  407e82:	pop    edi
  407e83:	pop    esi
  407e84:	mov    eax,0x812a4965
  407e89:	inc    edi
  407e8a:	xchg   ebx,eax
  407e8b:	imul   edi,DWORD PTR ss:[ebp-0x45],0xf593b4ea
  407e93:	pop    ds
  407e94:	or     eax,esi
  407e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e97:	rol    DWORD PTR [edi-0x54328832],cl
  407e9d:	mov    DWORD PTR [ebx+ecx*8-0x21],eax
  407ea1:	jmp    0x3616:0x8e7c5b54
  407ea8:	popf   
  407ea9:	jge    0x407e92
  407eab:	or     DWORD PTR [esp+ebp*2-0x3a],esp
  407eaf:	mov    edi,0xe988a057
  407eb4:	cmp    al,0x44
  407eb6:	jo     0x407ea8
  407eb8:	jecxz  0x407e43
  407eba:	adc    BYTE PTR [esi-0x3a],ah
  407ebd:	push   ebp
  407ebe:	sub    ah,0x66
  407ec1:	mov    al,0x76
  407ec3:	cdq    
  407ec4:	jnp    0x407f02
  407ec6:	xchg   BYTE PTR [ebx+ecx*8-0x2e],bh
  407eca:	js     0x407ee8
  407ecc:	inc    esi
  407ecd:	mov    edx,0xa80692c3
  407ed2:	jnp    0x407f3e
  407ed4:	or     al,0x83
  407ed6:	mov    eax,0xb33b26f0
  407edb:	dec    ecx
  407edc:	inc    ecx
  407edd:	imul   esi,ebx,0x27
  407ee0:	imul   ch
  407ee2:	mov    ebx,0xc33be64e
  407ee7:	xor    DWORD PTR [esi+eax*2],edi
  407eea:	mov    DWORD PTR [esi],0xb01c8d8f
  407ef0:	pop    ecx
  407ef1:	out    dx,eax
  407ef2:	sbb    BYTE PTR [edx-0x6b],0x94
  407ef6:	sbb    edi,DWORD PTR [ebp+0x6b]
  407ef9:	ret    0x60c8
  407efc:	jmp    0x407edd
  407efe:	retf   
  407eff:	or     dl,BYTE PTR ds:0x8ac83343
  407f05:	fild   DWORD PTR [edx]
  407f07:	jge    0x407f12
  407f09:	sbb    al,0x80
  407f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f0c:	jb     0x407f41
  407f0e:	add    ah,BYTE PTR [ebp+0x73]
  407f11:	out    0x6c,al
  407f13:	sbb    esi,eax
  407f15:	pop    ds
  407f16:	sahf   
  407f17:	dec    eax
  407f18:	das    
  407f19:	rol    DWORD PTR [edx-0x6b],cl
  407f1c:	adc    ebx,0xffffffd7
  407f1f:	mov    dl,0xed
  407f21:	push   ds
  407f22:	mov    ds:0x6ba426a1,al
  407f27:	enter  0x9b49,0x79
  407f2b:	inc    ebx
  407f2c:	(bad)  
  407f2d:	repnz rcl BYTE PTR [eax+edi*8-0x6de12c01],0x47
  407f36:	test   eax,0x427bd524
  407f3b:	add    eax,0x585cecdb
  407f40:	and    ebp,edi
  407f42:	clc    
  407f43:	xor    eax,0x5c4c49a8
  407f48:	in     al,0x66
  407f4a:	xchg   BYTE PTR [ebp+0x55],cl
  407f4d:	adc    eax,0xb10fe9af
  407f52:	cs dec ebp
  407f54:	inc    edi
  407f55:	mov    ds:0x1a37ce0a,al
  407f5a:	out    0x11,eax
  407f5c:	lods   al,BYTE PTR ds:[esi]
  407f5d:	mov    dl,0x5
  407f5f:	sahf   
  407f60:	scas   eax,DWORD PTR es:[edi]
  407f61:	pop    ebx
  407f62:	mov    ds:0x2eae8dd1,al
  407f67:	dec    ecx
  407f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f69:	mov    ecx,0xd4ee0253
  407f6e:	mov    ebp,0xe9c73462
  407f73:	fwait
  407f74:	into   
  407f75:	outs   dx,DWORD PTR ds:[esi]
  407f76:	sub    al,0x91
  407f78:	add    eax,0xc3cedbaa
  407f7d:	test   al,0x2a
  407f7f:	mov    ah,0x8f
  407f81:	pop    edi
  407f82:	mov    esi,0x7ce6a914
  407f87:	dec    ebx
  407f88:	pop    esp
  407f89:	jge    0x407f58
  407f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f8c:	dec    ebp
  407f8d:	aad    0x0
  407f8f:	add    al,0x1b
  407f91:	cmp    BYTE PTR [edi+eax*4-0x3e],dh
  407f95:	mov    cl,0x1a
  407f97:	cld    
  407f98:	iret   
  407f99:	xor    al,0xbb
  407f9b:	test   BYTE PTR [ecx*4-0x317bfeb7],ch
  407fa2:	dec    esp
  407fa3:	sbb    edx,edx
  407fa5:	mov    edi,0xcc32b360
  407faa:	stos   DWORD PTR es:[edi],eax
  407fab:	mov    al,BYTE PTR [ebp+0x5e10f967]
  407fb1:	jnp    0x408022
  407fb3:	into   
  407fb4:	int3   
  407fb5:	fild   WORD PTR [eax-0x5c]
  407fb8:	stc    
  407fb9:	nop
  407fba:	add    DWORD PTR [eax+0x30],ebx
  407fbd:	adc    ch,BYTE PTR [edx]
  407fbf:	sub    eax,0x86cd4923
  407fc4:	pop    es
  407fc5:	fidiv  DWORD PTR [eax-0x73]
  407fc8:	fild   WORD PTR [ecx-0x5f6adbd9]
  407fce:	push   ecx
  407fcf:	dec    edi
  407fd0:	arpl   bp,bp
  407fd2:	ret    
  407fd3:	sahf   
  407fd4:	dec    esi
  407fd5:	and    dl,BYTE PTR [ebx]
  407fd7:	jl     0x40804b
  407fd9:	shl    DWORD PTR [ebx],cl
  407fdb:	jmp    0x2b62:0xcdf1cac3
  407fe2:	test   al,0xa9
  407fe4:	sub    bl,0xd3
  407fe7:	dec    BYTE PTR [edx]
  407fe9:	mov    eax,ds:0xbe1c20be
  407fee:	or     ebx,esi
  407ff0:	adc    ah,BYTE PTR [esi+0x371be2aa]
  407ff6:	mov    bh,0x6c
  407ff8:	mov    al,ds:0x226b4834
  407ffd:	in     eax,0x21
  407fff:	push   edx
  408000:	lock cmp DWORD PTR [eax],eax
  408003:	xor    DWORD PTR [esi+0x7e],ecx
  408006:	call   0xa0ee:0xdc58ecde
  40800d:	xlat   BYTE PTR ds:[ebx]
  40800e:	push   cs
  40800f:	cmp    al,0xf5
  408011:	dec    esp
  408012:	inc    eax
  408013:	stos   BYTE PTR es:[edi],al
  408014:	jge    0x408041
  408016:	imul   eax,DWORD PTR [edi+0x17],0x413c1769
  40801d:	cmp    BYTE PTR [eax-0x21],bh
  408020:	add    BYTE PTR [ecx],0xb7
  408023:	and    eax,0xb0bb28fa
  408028:	dec    ecx
  408029:	adc    eax,0xa015a24c
  40802e:	lahf   
  40802f:	imul   esp,DWORD PTR [edx+0x6bd9b67],0x282edcd4
  408039:	push   esi
  40803a:	retf   0x9bbf
  40803d:	sub    cl,bl
  40803f:	adc    DWORD PTR [esi-0x1254ab6],ebp
  408045:	mul    BYTE PTR [esi+eiz*1+0x3073dc84]
  40804c:	and    ebx,edi
  40804e:	scas   al,BYTE PTR es:[edi]
  40804f:	jp     0x408075
  408051:	add    al,0x36
  408053:	repnz adc eax,0x6665eab
  408059:	ja     0x40802d
  40805b:	cmc    
  40805c:	aaa    
  40805d:	pop    ebp
  40805e:	mov    ch,0x1e
  408060:	xor    ebx,esi
  408062:	cmp    eax,0x1bed1016
  408067:	popa   
  408068:	int3   
  408069:	lods   al,BYTE PTR ds:[esi]
  40806a:	xor    al,0x4b
  40806c:	ret    0xd364
  40806f:	cmp    dh,BYTE PTR [eax]
  408071:	les    ebp,FWORD PTR ds:0xfa9202e1
  408077:	call   0x5ce3:0x75cb8c8b
  40807e:	xchg   ebp,eax
  40807f:	mov    bh,0xc4
  408081:	ins    BYTE PTR es:[edi],dx
  408082:	pop    edi
  408083:	dec    ebp
  408084:	fbld   TBYTE PTR [edi-0x13d1af5e]
  40808a:	mov    ds:0xb7bd581c,al
  40808f:	in     al,0xaa
  408091:	pop    eax
  408092:	mov    esi,0x5ed2fbcd
  408097:	mov    ch,bh
  408099:	mov    ebp,0xd496fcfd
  40809e:	or     DWORD PTR [esi-0x222aeb82],edx
  4080a4:	jmp    0xd967:0xc90d8f72
  4080ab:	sar    DWORD PTR [ecx-0x30],0xa6
  4080af:	shl    DWORD PTR [ecx],0x61
  4080b2:	mov    bh,0x29
  4080b4:	daa    
  4080b5:	ja     0x408042
  4080b7:	test   eax,0xbccc6840
  4080bc:	sar    bh,0x9
  4080bf:	mov    bh,0x9d
  4080c1:	dec    eax
  4080c2:	jb     0x4080a4
  4080c4:	mov    bh,0xca
  4080c6:	imul   eax,DWORD PTR [ebx+ebp*1],0x37
  4080ca:	scas   al,BYTE PTR es:[edi]
  4080cb:	dec    ecx
  4080cc:	xchg   DWORD PTR [edx+eax*2-0x56ba5578],esp
  4080d3:	add    al,0x86
  4080d5:	jnp    0x408060
  4080d7:	enter  0xe3ed,0xd5
  4080db:	iret   
  4080dc:	arpl   WORD PTR [ebx],sp
  4080de:	mov    ds:0xf236f020,eax
  4080e3:	xchg   esi,edi
  4080e5:	mov    DWORD PTR [ebx+edi*4+0x30],ebp
  4080e9:	add    DWORD PTR [ebx-0x30434290],0xf9b617d4
  4080f3:	mov    edi,0xce63cfa4
  4080f8:	fld    QWORD PTR [ebp+0x78183912]
  4080fe:	adc    eax,DWORD PTR [edx+ecx*8]
  408101:	dec    edx
  408102:	ja     0x40814c
  408104:	(bad)  
  408105:	cli    
  408106:	adc    eax,0x78a3f5a
  40810b:	cmc    
  40810c:	mov    ch,0x1d
  40810e:	outs   dx,BYTE PTR ds:[esi]
  40810f:	mov    dl,BYTE PTR [esi+0x71]
  408112:	cmp    al,0xff
  408114:	lock (bad) [edi]
  408117:	pop    ebx
  408118:	inc    ebp
  408119:	xor    bl,al
  40811b:	(bad)  
  40811c:	ja     0x408168
  40811e:	(bad)  
  40811f:	xlat   BYTE PTR ds:[ebx]
  408120:	scas   eax,DWORD PTR es:[edi]
  408121:	dec    ebx
  408122:	int    0xed
  408124:	(bad)  
  408125:	cmp    al,0x9e
  408127:	xchg   dh,bh
  408129:	xlat   BYTE PTR ds:[ebx]
  40812a:	mov    dl,BYTE PTR [ebx]
  40812c:	mov    edx,0xe15a2690
  408131:	cmp    al,0x4d
  408133:	pop    ds
  408134:	dec    edi
  408135:	enter  0x12a,0x54
  408139:	push   0xd60de783
  40813e:	mov    edi,0xbbb96d65
  408143:	or     esi,DWORD PTR [edx]
  408145:	jle    0x4080d0
  408147:	push   0xffffff80
  408149:	adc    cl,BYTE PTR [ebp-0x2]
  40814c:	aas    
  40814d:	mov    ebx,0xf90ada54
  408152:	mov    BYTE PTR [ecx-0x42],bl
  408155:	xor    dh,al
  408157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408158:	and    al,BYTE PTR [edi+0x7]
  40815b:	je     0x408166
  40815d:	sbb    eax,0x764a23f5
  408162:	inc    esi
  408163:	dec    ebp
  408164:	add    al,0xe2
  408166:	sbb    BYTE PTR [ebp+0x1abeffa4],al
  40816c:	pop    ebp
  40816d:	daa    
  40816e:	cli    
  40816f:	ror    DWORD PTR [ecx],1
  408171:	add    al,0xc0
  408173:	iret   
  408174:	dec    ebp
  408175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408176:	les    ecx,FWORD PTR [esi]
  408178:	rcr    BYTE PTR [edx-0x783def94],1
  40817e:	outs   dx,DWORD PTR ds:[esi]
  40817f:	add    BYTE PTR [ecx+0x44752527],al
  408185:	push   ds
  408186:	cmc    
  408187:	pop    ds
  408188:	and    al,0x81
  40818a:	mov    al,ds:0xbdc43571
  40818f:	jl     0x40814c
  408191:	xchg   edx,eax
  408192:	lock cwde 
  408194:	lock test al,0xac
  408197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408198:	in     eax,dx
  408199:	imul   eax,DWORD PTR [edx-0x62ba3e15],0xf51f1aa4
  4081a3:	jmp    0x40820b
  4081a5:	mov    cl,0x7c
  4081a7:	and    BYTE PTR [edx+0x1a],0x88
  4081ab:	test   bh,bh
  4081ad:	add    cl,BYTE PTR [eax-0x31]
  4081b0:	(bad)  
  4081b1:	push   cs
  4081b2:	pop    es
  4081b3:	inc    ebp
  4081b4:	nop
  4081b5:	aam    0xd1
  4081b7:	aam    0x18
  4081b9:	xchg   edx,eax
  4081ba:	xchg   BYTE PTR [ecx-0x4152018b],al
  4081c0:	mov    bl,0x64
  4081c2:	and    ecx,DWORD PTR [edi-0x2616312e]
  4081c8:	(bad)  
  4081c9:	adc    DWORD PTR [ebx],ebx
  4081cb:	jge    0x4081c0
  4081cd:	pop    eax
  4081ce:	sbb    BYTE PTR [edi-0x37],dl
  4081d1:	pop    eax
  4081d2:	nop
  4081d3:	add    DWORD PTR [eax],eax
  4081d5:	add    DWORD PTR [ecx+0x579ab938],0x41
  4081dc:	jns    0x4081d8
  4081de:	jmp    0xba8e63a0
  4081e3:	and    eax,0x5e8709fe
  4081e8:	and    BYTE PTR [ebx-0x2b],cl
  4081eb:	cmp    BYTE PTR [ebx+0x29],al
  4081ee:	lods   eax,DWORD PTR ds:[esi]
  4081ef:	arpl   WORD PTR [ebx+eiz*8],bp
  4081f2:	pop    es
  4081f3:	dec    edi
  4081f4:	aad    0xc1
  4081f6:	and    al,0xd2
  4081f8:	mov    al,ds:0xb6ccd909
  4081fd:	mov    BYTE PTR [ebp+0x9],ah
  408200:	jnp    0x408242
  408202:	shr    dl,cl
  408204:	outs   dx,DWORD PTR ds:[esi]
  408205:	sbb    BYTE PTR [edi-0x6],ah
  408208:	mov    bl,0xa9
  40820a:	add    BYTE PTR [edi+0x3e07c3d6],dl
  408210:	dec    eax
  408211:	jo     0x408204
  408213:	sub    eax,0xede583fd
  408218:	sar    BYTE PTR [ebp+0x1ec18d6a],0x2b
  40821f:	and    BYTE PTR [ecx+0x5d7379d9],bh
  408225:	push   0x2f
  408227:	clc    
  408228:	cwde   
  408229:	mov    ds:0xa0a56f63,al
  40822e:	mov    ds:0x3d8b52d5,al
  408233:	imul   edx,DWORD PTR [ecx],0xa8fbbb87
  408239:	or     esp,DWORD PTR ds:0xbf307565
  40823f:	jg     0x408200
  408241:	add    esi,esi
  408243:	mov    ds:0x56359488,al
  408248:	in     eax,0x96
  40824a:	std    
  40824b:	scas   al,BYTE PTR es:[edi]
  40824c:	mov    ecx,0x79be0b80
  408251:	or     bh,cl
  408253:	in     eax,dx
  408254:	mov    WORD PTR [edx+0x35],?
  408257:	stos   DWORD PTR es:[edi],eax
  408258:	pop    ss
  408259:	add    eax,0x43d95967
  40825e:	ret    
  40825f:	or     eax,0x789aa7d3
  408264:	and    ah,bh
  408266:	mov    ch,0xcd
  408268:	sbb    al,0x5e
  40826a:	iret   
  40826b:	mov    dh,BYTE PTR [ebx+0x76]
  40826e:	jmp    0x4082c6
  408270:	es lahf 
  408272:	jae    0x40828f
  408274:	push   esp
  408275:	fild   WORD PTR [edi-0x80]
  408278:	dec    esp
  408279:	(bad)
  40827c:	add    eax,0x1f95c6a6
  408281:	pop    edx
  408282:	rcl    DWORD PTR [eax],0x52
  408285:	(bad)  
  408286:	and    eax,0x3ff84e9
  40828b:	pop    edx
  40828c:	cli    
  40828d:	jmp    0x4082c3
  40828f:	retf   0x520c
  408292:	and    al,0x23
  408294:	adc    eax,0xc2c7949a
  408299:	in     al,dx
  40829a:	inc    ebx
  40829b:	clc    
  40829c:	cld    
  40829d:	cmp    DWORD PTR [edx],ecx
  40829f:	sub    cl,BYTE PTR [esi+0x4]
  4082a2:	ror    BYTE PTR [ebx-0x5eab9e80],0x75
  4082a9:	shr    DWORD PTR [edi],0x3a
  4082ac:	jle    0x4082bd
  4082ae:	ds rcr bh,0x90
  4082b2:	or     esi,DWORD PTR [eax+eax*2-0x3e873976]
  4082b9:	push   ss
  4082ba:	sbb    dl,bh
  4082bc:	adc    eax,0x155813a2
  4082c1:	mov    esp,0xdd81a664
  4082c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c7:	loope  0x40831c
  4082c9:	adc    al,0xa9
  4082cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082cc:	sub    bl,0xf5
  4082cf:	test   BYTE PTR [eax+0x57],bl
  4082d2:	idiv   ebx
  4082d4:	in     al,dx
  4082d5:	add    ecx,DWORD PTR [ecx+0x5f]
  4082d8:	sar    BYTE PTR [edx],0xd1
  4082db:	mov    dh,0xac
  4082dd:	stc    
  4082de:	aas    
  4082df:	das    
  4082e0:	adc    al,0x2c
  4082e2:	aam    0x18
  4082e4:	jnp    0x40835f
  4082e6:	loopne 0x408291
  4082e8:	cs mov DWORD PTR ds:[ecx],ecx
  4082ec:	fisubr WORD PTR [edi]
  4082ee:	pop    esp
  4082ef:	dec    ebp
  4082f0:	xlat   BYTE PTR gs:[ebx]
  4082f2:	add    eax,0xa9b40a95
  4082f7:	addr16 lock pop ecx
  4082fa:	jbe    0x4082a6
  4082fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082fd:	add    DWORD PTR [eax-0x13c14e4d],edi
  408303:	cmp    edx,0x6e
  408306:	and    eax,0x8f678a5c
  40830b:	hlt    
  40830c:	lahf   
  40830d:	es pop ebp
  40830f:	push   ds
  408310:	cdq    
  408311:	adc    BYTE PTR [edi+0x6814d061],al
  408317:	jo     0x408392
  408319:	pop    ebp
  40831a:	test   BYTE PTR [esi+edx*1-0x431ed2a1],0x8
  408322:	ret    
  408323:	jne    0x40833d
  408325:	mov    WORD PTR [edi-0x19d577ce],?
  40832b:	sub    cl,BYTE PTR [eax+0x1b]
  40832e:	ror    BYTE PTR [ecx-0x6a],1
  408331:	mov    ch,0x82
  408333:	(bad)  
  408334:	out    0x46,eax
  408336:	xor    esp,esi
  408338:	imul   esi,DWORD PTR [edi+0x35],0x5f
  40833c:	cmp    esp,DWORD PTR [ebp-0x53]
  40833f:	into   
  408340:	add    DWORD PTR [ebp+0x76f1e62a],edx
  408346:	dec    edi
  408347:	inc    edi
  408348:	stos   DWORD PTR es:[edi],eax
  408349:	mov    ds:0x310fd904,eax
  40834e:	cmp    DWORD PTR [edx],esi
  408350:	sub    al,0xd4
  408352:	cmc    
  408353:	mov    ecx,0xb7f7cce6
  408358:	rol    DWORD PTR [edi],cl
  40835a:	sub    DWORD PTR [ebx-0x6a335e04],ebp
  408360:	adc    BYTE PTR [eax],ch
  408362:	inc    eax
  408363:	lahf   
  408364:	inc    eax
  408365:	sahf   
  408366:	neg    BYTE PTR [edi]
  408368:	adc    bl,bl
  40836a:	aam    0x57
  40836c:	jmp    0x4d7bfc8b
  408371:	jp     0x408345
  408373:	add    BYTE PTR [ebx+0x760e116d],al
  408379:	push   edi
  40837a:	cwde   
  40837b:	call   FWORD PTR ds:0xa913ef6d
  408381:	js     0x408402
  408383:	scas   al,BYTE PTR es:[edi]
  408384:	stos   DWORD PTR es:[edi],eax
  408385:	push   edx
  408386:	xor    eax,0x23b66d8a
  40838b:	ins    DWORD PTR es:[edi],dx
  40838c:	mov    eax,0xe8d0bb2f
  408391:	jmp    0xf4ab1dd5
  408396:	cs sahf 
  408398:	cwde   
  408399:	pop    ds
  40839a:	dec    ebp
  40839b:	cmp    edx,edx
  40839d:	int    0x2b
  40839f:	je     0x408410
  4083a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083a2:	and    dl,BYTE PTR [esi+0x193467ba]
  4083a8:	std    
  4083a9:	xchg   ebp,eax
  4083aa:	sbb    dl,ah
  4083ac:	push   eax
  4083ad:	pusha  
  4083ae:	inc    esi
  4083af:	dec    ebp
  4083b0:	mov    ?,ebp
  4083b2:	xchg   ebx,eax
  4083b3:	xor    ebx,ecx
  4083b5:	inc    eax
  4083b6:	loopne 0x408339
  4083b8:	js     0x40833b
  4083ba:	adc    eax,0xeb54ec52
  4083bf:	fdivr  DWORD PTR [edx]
  4083c2:	mov    ebx,0xb975e357
  4083c7:	cmp    BYTE PTR [eax],0x8c
  4083ca:	mov    bh,BYTE PTR [ecx+0x79e8f033]
  4083d0:	lods   al,BYTE PTR ds:[esi]
  4083d1:	jns    0x408426
  4083d3:	dec    esi
  4083d4:	retf   0x49cb
  4083d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083d8:	cwde   
  4083d9:	dec    ebx
  4083da:	imul   esp,ecx,0x19a8a570
  4083e0:	cmp    al,0xb2
  4083e2:	xchg   edx,eax
  4083e3:	mov    cl,0xb2
  4083e5:	sub    dl,BYTE PTR [esi]
  4083e7:	jno    0x408443
  4083e9:	dec    edi
  4083ea:	add    bh,dh
  4083ec:	cmp    ah,BYTE PTR [ebx+eax*1]
  4083ef:	jnp    0x408386
  4083f1:	xchg   edi,eax
  4083f2:	add    eax,DWORD PTR [ebx]
  4083f4:	mov    cl,0x5a
  4083f6:	push   edx
  4083f7:	jb     0x408388
  4083f9:	(bad)
  4083fc:	enter  0x2905,0xee
  408400:	jmp    DWORD PTR [edi+0x4d]
  408403:	mov    dl,0xf1
  408405:	or     BYTE PTR [edx-0x47f2ec58],bh
  40840b:	ja     0x4083cc
  40840d:	xchg   edx,eax
  40840e:	sbb    al,BYTE PTR [edi+ebp*8]
  408411:	sbb    bh,BYTE PTR ds:0x39e8d584
  408417:	jp     0x4083ef
  408419:	dec    eax
  40841a:	sbb    al,0x25
  40841c:	ins    DWORD PTR es:[edi],dx
  40841d:	fld    TBYTE PTR [ecx+0x7e3579c]
  408423:	(bad)
  408427:	cdq    
  408428:	in     al,0x65
  40842a:	xlat   BYTE PTR ds:[ebx]
  40842b:	inc    edx
  40842c:	pop    es
  40842d:	mov    esp,ebx
  40842f:	ss in  al,dx
  408431:	pop    eax
  408432:	test   DWORD PTR [ecx+0x67598f7b],edi
  408438:	jo     0x408449
  40843a:	sti    
  40843b:	push   ebp
  40843c:	inc    esp
  40843d:	loop   0x4083f2
  40843f:	mov    eax,0x7e2e0ff2
  408444:	cmp    eax,0x18729c0c
  408449:	jl     0x40845c
  40844b:	test   DWORD PTR [ecx+0x7d],0x298fbd6
  408452:	dec    edx
  408453:	(bad)  
  408454:	out    0x10,al
  408456:	mov    ebp,0xea98fdac
  40845b:	outs   dx,DWORD PTR ds:[esi]
  40845c:	pop    ds
  40845d:	lea    edx,[esi-0x68]
  408460:	sbb    DWORD PTR [ebx+0x18],esp
  408463:	dec    esp
  408464:	mov    eax,ds:0x4ced8f48
  408469:	fcmovnbe st,st(6)
  40846b:	mov    bh,0xa9
  40846d:	test   esp,0x3900a407
  408473:	pusha  
  408474:	ja     0x4084c5
  408476:	add    ecx,DWORD PTR [ebx+0x29fca3c1]
  40847c:	hlt    
  40847d:	mov    edx,0x442af295
  408482:	or     DWORD PTR [edi+0x5b7e89fc],ebx
  408488:	jnp    0x408494
  40848a:	loope  0x408491
  40848c:	jmp    0x4084be
  40848e:	sub    esp,edx
  408490:	xchg   ebp,eax
  408491:	loope  0x408422
  408493:	jmp    0xe4e9:0xd7f6f3f1
  40849a:	fld    TBYTE PTR [esi]
  40849c:	ja     0x4084c4
  40849e:	jecxz  0x408463
  4084a0:	out    dx,eax
  4084a1:	dec    edi
  4084a2:	ins    BYTE PTR es:[edi],dx
  4084a3:	js     0x408488
  4084a5:	ds cmp edx,ecx
  4084a8:	les    edx,FWORD PTR [edx]
  4084aa:	lahf   
  4084ab:	xchg   BYTE PTR [eax-0x1a451b44],bh
  4084b1:	push   ds
  4084b2:	leave  
  4084b3:	mul    ah
  4084b5:	sub    cl,BYTE PTR [eax+0x17c3c249]
  4084bb:	(bad)  
  4084bc:	in     al,0xc0
  4084be:	and    eax,0x1602d028
  4084c3:	cmc    
  4084c4:	pop    esp
  4084c5:	push   ebp
  4084c6:	sbb    BYTE PTR [ebx-0x45927b39],dh
  4084cc:	xor    cl,BYTE PTR ss:[esi]
  4084cf:	icebp  
  4084d0:	cmp    ebp,eax
  4084d2:	mov    ebp,DWORD PTR [edx-0xc693368]
  4084d8:	rcl    DWORD PTR [edx+0xc],cl
  4084db:	ja     0x40846d
  4084dd:	es jmp 0x86b8da7c
  4084e3:	fistp  WORD PTR [eax-0x31349ccd]
  4084e9:	inc    edi
  4084ea:	sar    BYTE PTR [edi],0x3
  4084ed:	retf   
  4084ee:	jae    0x408565
  4084f0:	xchg   edx,eax
  4084f1:	outs   dx,BYTE PTR ds:[esi]
  4084f2:	test   DWORD PTR [edi],ecx
  4084f4:	or     eax,0xdd86b727
  4084f9:	shl    ah,cl
  4084fb:	mov    edi,0xe24b6737
  408500:	pop    esi
  408501:	(bad)  
  408502:	inc    BYTE PTR [esp+esi*8]
  408505:	test   BYTE PTR [ebp-0x43],0xb4
  408509:	dec    edi
  40850a:	xchg   ebp,eax
  40850b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40850c:	xor    ebx,DWORD PTR ds:0xa660a741
  408512:	dec    eax
  408513:	dec    ecx
  408514:	adc    cl,dl
  408516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408517:	sub    eax,0xae3fec30
  40851c:	add    dl,BYTE PTR [esi]
  40851e:	or     eax,0xea6e1e96
  408523:	call   0x939bdac5
  408528:	adc    al,BYTE PTR [edx+0x7d]
  40852b:	rcr    BYTE PTR [edi+0x78],cl
  40852e:	stos   BYTE PTR es:[edi],al
  40852f:	sahf   
  408530:	pop    es
  408531:	sub    eax,0x7bd66655
  408536:	inc    ecx
  408537:	adc    ah,BYTE PTR [edx-0x31]
  40853a:	push   ds
  40853b:	xchg   edx,eax
  40853c:	mov    BYTE PTR [ebx],al
  40853e:	mov    bh,0xa0
  408540:	es jp  0x408579
  408543:	hlt    
  408544:	test   al,cl
  408546:	xor    bh,bl
  408548:	push   edx
  408549:	xchg   DWORD PTR [ecx-0x77],ebp
  40854c:	xor    DWORD PTR [edx-0x5aea5110],ecx
  408552:	xor    al,0xb6
  408554:	aad    0xd2
  408556:	sbb    DWORD PTR ds:0xe0b2f3be,0x9f5c24a6
  408560:	pop    ebp
  408561:	test   DWORD PTR [ecx+0x17e3de89],esi
  408567:	out    dx,al
  408568:	ret    
  408569:	out    0x93,al
  40856b:	ret    
  40856c:	pop    ebp
  40856d:	enter  0xafe1,0x93
  408571:	js     0x4085b6
  408573:	icebp  
  408574:	jae    0x408591
  408576:	ss (bad) 
  408578:	jae    0x40857e
  40857a:	(bad)  
  40857b:	adc    DWORD PTR [esi],esp
  40857d:	push   edi
  40857e:	and    eax,0xe04a17de
  408583:	hlt    
  408584:	mov    ebp,0x9ee565f7
  408589:	cmp    BYTE PTR [ebx-0x7e0bbc31],ch
  40858f:	aaa    
  408590:	push   ebp
  408591:	jbe    0x408560
  408593:	dec    ebp
  408594:	pop    edi
  408595:	cmp    cl,BYTE PTR [edx-0x5c]
  408598:	in     al,dx
  408599:	pop    ebp
  40859a:	and    ecx,ecx
  40859c:	inc    esp
  40859d:	int    0x7a
  40859f:	ins    BYTE PTR es:[edi],dx
  4085a0:	cdq    
  4085a1:	inc    ebp
  4085a2:	pop    ecx
  4085a3:	push   ebp
  4085a4:	xor    ebp,DWORD PTR [ecx+edx*1+0x55]
  4085a8:	neg    BYTE PTR [ebp+0x2962e5a4]
  4085ae:	add    eax,0x95b4bbd0
  4085b3:	or     cl,BYTE PTR [ecx-0x21f2d1e3]
  4085b9:	cmp    eax,DWORD PTR [esp+edi*8]
  4085bc:	add    ch,dh
  4085be:	popf   
  4085bf:	in     eax,0x7
  4085c1:	adc    edx,eax
  4085c3:	ja     0x4085c7
  4085c5:	xchg   ebp,eax
  4085c6:	lea    esi,[eax+0x2ae78ac2]
  4085cc:	in     al,0x17
  4085ce:	icebp  
  4085cf:	leave  
  4085d0:	test   ah,dl
  4085d2:	pop    ecx
  4085d3:	imul   edx,edx,0xfcd26627
  4085d9:	cdq    
  4085da:	jae    0x40855e
  4085dc:	int3   
  4085dd:	dec    DWORD PTR [ebx]
  4085df:	shl    esi,1
  4085e1:	and    bh,ah
  4085e3:	cdq    
  4085e4:	cs pop ds
  4085e6:	cdq    
  4085e7:	push   ss
  4085e8:	rol    DWORD PTR [edi+0x13],cl
  4085eb:	inc    eax
  4085ec:	lea    eax,[edi+0x59ce6eaf]
  4085f2:	gs jns 0x408631
  4085f5:	ins    DWORD PTR es:[edi],dx
  4085f6:	jne    0x408673
  4085f8:	jp     0x408670
  4085fa:	aaa    
  4085fb:	fild   WORD PTR [ecx]
  4085fd:	inc    ebx
  4085fe:	jg     0x408656
  408600:	cmp    al,0x52
  408602:	nop
  408603:	(bad)  
  408604:	sub    eax,0xd122b124
  408609:	imul   esp,esp,0xffffff9b
  40860c:	dec    esi
  40860d:	pop    edx
  40860e:	int3   
  40860f:	mov    al,0xa2
  408611:	mov    ebx,0x739d9d2c
  408616:	in     al,dx
  408617:	mov    WORD PTR [ecx-0x5e],?
  40861a:	loope  0x408638
  40861c:	add    al,0x3f
  40861e:	clc    
  40861f:	sub    BYTE PTR cs:[eax],0x17
  408623:	mov    esp,0xfb8128b4
  408628:	jnp    0x40864c
  40862a:	xor    al,0xcb
  40862c:	xor    eax,0x7b02f9fb
  408631:	dec    ecx
  408632:	xchg   esi,eax
  408633:	mov    ds:0x2b926e64,al
  408638:	rcl    BYTE PTR [esi-0xbdea06b],cl
  40863e:	inc    esi
  40863f:	add    BYTE PTR [ebp-0x3430073b],cl
  408645:	or     eax,0xdf7f2c3e
  40864a:	add    BYTE PTR [edi],0xac
  40864d:	inc    edi
  40864e:	out    dx,eax
  40864f:	fld    DWORD PTR [edi+0x44a12ee3]
  408655:	adc    DWORD PTR [ebp-0xb],edx
  408658:	fnsave [ebp-0x26]
  40865b:	dec    eax
  40865c:	and    DWORD PTR [edx-0x39f6a2bb],ebx
  408662:	push   edi
  408663:	popf   
  408664:	jp     0x408670
  408666:	cmp    ch,ch
  408668:	icebp  
  408669:	les    ecx,FWORD PTR [ebp+0x57]
  40866c:	sahf   
  40866d:	lds    ecx,FWORD PTR [eax-0x5f48829f]
  408673:	loopne 0x4086ca
  408675:	outs   dx,DWORD PTR ds:[esi]
  408676:	sbb    cl,0x90
  408679:	sahf   
  40867a:	fild   QWORD PTR [ebx-0x3e]
  40867d:	mov    cl,0xcd
  40867f:	ror    BYTE PTR [ebx-0x1a3e13e0],0x15
  408686:	add    al,BYTE PTR [edi+ebp*8]
  408689:	mov    bl,0x5c
  40868b:	nop
  40868c:	mov    ecx,0x1876dbfa
  408691:	adc    al,0x1c
  408693:	ins    BYTE PTR es:[edi],dx
  408694:	fstp   DWORD PTR [esi-0x69f950cb]
  40869a:	jb     0x408641
  40869c:	jmp    0x963f:0xdf195df
  4086a3:	dec    esp
  4086a4:	aas    
  4086a5:	cs jmp 0x4086a0
  4086a8:	out    dx,eax
  4086a9:	idiv   BYTE PTR [ebx-0x5b]
  4086ac:	xchg   DWORD PTR ds:0xfeffd084,eax
  4086b2:	out    0xb8,eax
  4086b4:	push   ecx
  4086b5:	dec    edi
  4086b6:	dec    esp
  4086b7:	dec    esp
  4086b8:	inc    edx
  4086b9:	out    dx,eax
  4086ba:	mov    BYTE PTR [ecx],bh
  4086bc:	ss stos BYTE PTR es:[edi],al
  4086be:	hlt    
  4086bf:	xor    eax,0xbf3c425d
  4086c4:	fnsave [edx+0x28]
  4086c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086c8:	ins    DWORD PTR es:[edi],dx
  4086c9:	inc    esi
  4086ca:	mov    cl,0xb4
  4086cc:	sub    eax,0x9381bea5
  4086d1:	push   edx
  4086d2:	jecxz  0x4086d1
  4086d4:	retf   0xeaa3
  4086d7:	fld    QWORD PTR [esi-0x56]
  4086da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086db:	cmp    DWORD PTR [ebx],ebx
  4086dd:	jp     0x4086bb
  4086df:	mov    esp,DWORD PTR [eax]
  4086e1:	jbe    0x40867d
  4086e3:	sub    ecx,ebp
  4086e5:	clc    
  4086e6:	sub    al,BYTE PTR [ecx+0x57]
  4086e9:	mov    ah,0x44
  4086eb:	xchg   esi,eax
  4086ec:	mov    bh,0x8e
  4086ee:	jo     0x40870a
  4086f0:	inc    ecx
  4086f1:	xchg   DWORD PTR [edi+0x2bbe063d],eax
  4086f7:	inc    eax
  4086f8:	sub    dl,BYTE PTR [esp+ecx*4-0x1e]
  4086fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086fd:	and    dh,0x35
  408700:	or     cl,dl
  408702:	popa   
  408703:	mov    al,ch
  408705:	inc    esi
  408706:	aam    0xa7
  408708:	in     eax,dx
  408709:	jne    0x4086b3
  40870b:	addr16 push ebp
  40870d:	adc    DWORD PTR [ecx-0x1a],edx
  408710:	shl    ah,0x54
  408713:	scas   al,BYTE PTR es:[edi]
  408714:	xchg   DWORD PTR [ebx+0x208484e3],ebx
  40871a:	inc    ebx
  40871b:	push   0x29f2cade
  408720:	mov    bl,0xe0
  408722:	ficomp WORD PTR [ecx-0x5f]
  408725:	sub    BYTE PTR [edi+0x53],bl
  408728:	(bad)  
  408729:	pop    ebp
  40872a:	jb     0x4086ef
  40872c:	addr16 and ebp,ebx
  40872f:	loopne 0x408765
  408731:	fidivr DWORD PTR [edi+ecx*8]
  408734:	bound  esp,QWORD PTR [eax+edi*2+0x67]
  408738:	cwde   
  408739:	jle    0x408712
  40873b:	jp     0x408703
  40873d:	arpl   WORD PTR [eax+0x640b2e9e],dx
  408743:	xchg   DWORD PTR [eax],eax
  408745:	mov    ah,0x54
  408747:	cmp    al,0x61
  408749:	dec    ecx
  40874a:	mov    ecx,0xca322a44
  40874f:	xchg   edi,eax
  408750:	cmp    DWORD PTR [ebx-0x92c9cc2],eax
  408756:	in     eax,0x18
  408758:	pusha  
  408759:	es inc edi
  40875b:	retf   
  40875c:	pop    esi
  40875d:	shl    esp,cl
  40875f:	push   0xfffffff4
  408761:	or     al,BYTE PTR [ebx+0x6ec2cb5b]
  408767:	in     eax,0x8d
  408769:	mov    edi,0x29a6b68c
  40876e:	or     dl,BYTE PTR [edi-0x25b890b6]
  408774:	cmp    dh,BYTE PTR [edi+edx*2]
  408777:	pop    ds
  408778:	or     BYTE PTR [esi+0xb],cl
  40877b:	push   edx
  40877c:	dec    eax
  40877d:	xchg   DWORD PTR [ebp-0x2eca4080],ecx
  408783:	test   eax,0xbc5ba5fc
  408788:	mov    BYTE PTR [edi+0x6e],bh
  40878b:	mov    edi,0xcfb3c6a8
  408790:	cmp    ebx,DWORD PTR [edi+0x31]
  408793:	rol    DWORD PTR [ecx],1
  408795:	sbb    dl,ch
  408797:	test   DWORD PTR [eax-0x4f],edx
  40879a:	sbb    al,0x8b
  40879c:	fmulp  st(5),st
  40879e:	popa   
  40879f:	daa    
  4087a0:	pop    es
  4087a1:	jmp    ebp
  4087a3:	add    al,0x4a
  4087a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087a6:	dec    ebp
  4087a7:	cs push 0xffffffba
  4087aa:	test   BYTE PTR [ebx+edi*1],0x3f
  4087ae:	dec    edi
  4087af:	pop    edx
  4087b0:	mov    eax,ds:0xf75098aa
  4087b5:	sahf   
  4087b6:	inc    eax
  4087b7:	bound  ecx,QWORD PTR [esi+edx*8-0x52a09cdf]
  4087be:	inc    edx
  4087bf:	push   ss
  4087c0:	fisubr WORD PTR [edx]
  4087c2:	xchg   BYTE PTR [esi],dl
  4087c4:	jne    0x4087de
  4087c6:	mov    dh,bh
  4087c8:	rol    DWORD PTR [ebx],cl
  4087ca:	dec    eax
  4087cb:	push   edx
  4087cc:	(bad)  
  4087cd:	(bad)  
  4087ce:	sti    
  4087cf:	xchg   BYTE PTR [esi-0x5138e4cf],dl
  4087d5:	pop    es
  4087d6:	push   eax
  4087d7:	inc    ecx
  4087d8:	int    0x1a
  4087da:	cli    
  4087db:	sbb    ch,BYTE PTR [edx]
  4087dd:	(bad)  
  4087de:	jmp    DWORD PTR [ecx+0x91b4d53]
  4087e4:	ins    BYTE PTR es:[edi],dx
  4087e5:	fmul   st,st(5)
  4087e7:	xchg   ebx,eax
  4087e8:	dec    ebx
  4087e9:	mov    WORD PTR [ebx+0x7a],es
  4087ec:	jns    0x408838
  4087ee:	push   ss
  4087ef:	push   ebp
  4087f0:	mov    edi,0x630659ad
  4087f5:	mov    ch,0xff
  4087f7:	sti    
  4087f8:	pusha  
  4087f9:	jge    0x40881a
  4087fb:	xchg   edi,eax
  4087fc:	lods   eax,DWORD PTR ds:[esi]
  4087fd:	ins    DWORD PTR es:[edi],dx
  4087fe:	sbb    esi,ebp
  408800:	cli    
  408801:	ins    BYTE PTR es:[edi],dx
  408802:	jmp    0x40883a
  408804:	daa    
  408805:	ins    DWORD PTR es:[edi],dx
  408806:	jmp    0x82dbb3a7
  40880b:	push   ebx
  40880c:	xor    edi,DWORD PTR [edx]
  40880e:	ror    BYTE PTR [ebx-0x37c09b49],cl
  408814:	cmp    BYTE PTR [esi-0x42500996],ah
  40881a:	(bad)  
  40881b:	leave  
  40881c:	cwde   
  40881d:	dec    edi
  40881e:	mov    eax,ds:0x69d1af82
  408823:	mov    al,0xfc
  408825:	xchg   edx,eax
  408826:	cmp    bh,al
  408828:	adc    dl,ch
  40882a:	xchg   esi,eax
  40882b:	pop    DWORD PTR [edx-0x1e]
  40882e:	xchg   DWORD PTR [ebx+esi*4+0x17],edx
  408832:	cmp    al,0xae
  408834:	jmp    0xa50:0xc34300c3
  40883b:	call   0x1e5b241c
  408840:	adc    DWORD PTR [esi-0x7a],edx
  408843:	pop    edx
  408844:	xchg   ecx,eax
  408845:	jecxz  0x4088b6
  408847:	int3   
  408848:	mov    bh,0x7d
  40884a:	cmp    al,0xd3
  40884c:	mov    al,0x95
  40884e:	cmp    eax,0x41af43d0
  408853:	fimul  WORD PTR [edi-0x5fdc6cc8]
  408859:	pop    edx
  40885a:	adc    ch,cl
  40885c:	data16 icebp 
  40885e:	mov    WORD PTR [ebx-0x1c],?
  408861:	mov    ds:0xb15f5b52,eax
  408866:	das    
  408867:	inc    ebp
  408868:	and    eax,0x72290a79
  40886d:	jl     0x4088c5
  40886f:	adc    bh,0xf6
  408872:	stc    
  408873:	(bad)  
  408874:	aas    
  408875:	pandn  mm7,mm6
  408878:	xchg   ebp,eax
  408879:	loopne 0x40882d
  40887b:	in     al,0x73
  40887d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40887e:	adc    esi,DWORD PTR [ecx-0x7c31f87a]
  408884:	xchg   edi,eax
  408885:	mov    al,fs:0x6c51ed5b
  40888b:	loopne 0x40887e
  40888d:	sub    esp,DWORD PTR [edi]
  40888f:	pop    edi
  408890:	cmp    ch,BYTE PTR [edx-0x56239fe0]
  408896:	inc    eax
  408897:	(bad)  [edx-0x447621ed]
  40889d:	or     BYTE PTR [edi],ch
  40889f:	mov    edi,DWORD PTR [ebp+0x47]
  4088a2:	xchg   edx,ecx
  4088a4:	push   edx
  4088a5:	cld    
  4088a6:	add    DWORD PTR [ecx-0x3f],ecx
  4088a9:	cmp    DWORD PTR [ebx],esi
  4088ab:	enter  0x59c2,0xda
  4088af:	mov    al,0x3e
  4088b1:	jnp    0x4088c7
  4088b3:	lds    ebp,FWORD PTR [esi+esi*4-0x27259f2a]
  4088ba:	mov    dl,0x42
  4088bc:	(bad)  
  4088bd:	and    al,BYTE PTR [eax]
  4088bf:	mov    edi,0x3dd4f77d
  4088c4:	mov    ebp,0x6db06963
  4088c9:	sbb    al,BYTE PTR [ecx+0x3a]
  4088cc:	or     BYTE PTR [ebx-0x437ea75b],bh
  4088d2:	ins    DWORD PTR es:[edi],dx
  4088d3:	inc    esi
  4088d4:	mov    ebp,0x2ff1df83
  4088d9:	fistp  QWORD PTR [ecx]
  4088db:	mov    ch,0x50
  4088dd:	gs (bad) 
  4088df:	int3   
  4088e0:	jmp    0xc5fca96d
  4088e5:	lock leave 
  4088e7:	add    BYTE PTR [eax+0x72],dl
  4088ea:	push   0xce6bf3fa
  4088ef:	cmp    ebp,DWORD PTR [ebx]
  4088f1:	mov    ch,0x94
  4088f3:	and    ah,BYTE PTR [ecx-0x4ab2d5]
  4088f9:	inc    edx
  4088fa:	inc    ecx
  4088fb:	dec    ecx
  4088fc:	loop   0x4088fb
  4088fe:	repz pop edi
  408900:	lods   eax,DWORD PTR ds:[esi]
  408901:	rcl    BYTE PTR [ebp+0x29],cl
  408904:	pop    esi
  408905:	test   DWORD PTR [edi],ecx
  408907:	scas   eax,DWORD PTR es:[edi]
  408908:	mov    ?,WORD PTR [edi-0x7ef5971a]
  40890e:	scas   eax,DWORD PTR es:[edi]
  40890f:	mov    ah,BYTE PTR [ecx+eiz*2-0xa99583]
  408916:	in     al,0xa7
  408918:	jo     0x4088a2
  40891a:	test   al,0x3f
  40891c:	out    0x15,eax
  40891e:	push   edi
  40891f:	sub    al,0xc7
  408921:	mov    cl,0xd8
  408923:	inc    esp
  408924:	mov    BYTE PTR [esi],dl
  408926:	bound  eax,QWORD PTR es:[esi-0x5d]
  40892a:	ficomp DWORD PTR [ebx-0x33]
  40892d:	stos   DWORD PTR es:[edi],eax
  40892e:	inc    ecx
  40892f:	inc    edi
  408930:	out    dx,eax
  408931:	je     0x408959
  408933:	inc    ebx
  408934:	and    eax,0xe39707c1
  408939:	mov    ds:0xca34fb37,al
  40893e:	xor    bh,BYTE PTR [eax]
  408940:	or     DWORD PTR [ebp+ecx*2-0x69],ebp
  408944:	aas    
  408945:	inc    ebp
  408946:	sub    al,0x18
  408948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408949:	call   0x12a3:0x8d592dbb
  408950:	std    
  408951:	test   al,0x13
  408953:	into   
  408954:	ror    BYTE PTR [esi-0x4f],cl
  408957:	pop    es
  408958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408959:	out    0x44,eax
  40895b:	xor    al,0xba
  40895d:	retf   0x39e7
  408960:	or     eax,0xff5e4443
  408965:	fldcw  WORD PTR [ebx-0x38c3f378]
  40896b:	jbe    0x40898a
  40896d:	jae    0x408973
  40896f:	(bad)  
  408971:	js     0x408952
  408973:	push   ebp
  408974:	sbb    BYTE PTR [edi+0x18],bl
  408977:	mov    edx,0x39e0dd49
  40897c:	xor    esp,0x60
  40897f:	push   esi
  408980:	enter  0x3b18,0xdb
  408984:	fidivr WORD PTR [edi-0x37506517]
  40898a:	dec    edx
  40898b:	fadd   st(0),st
  40898d:	xchg   DWORD PTR [ecx],ebp
  40898f:	pop    esp
  408990:	add    ebx,DWORD PTR [ebp-0x21f81f40]
  408996:	mov    eax,0x1eed9a8c
  40899b:	out    0xae,al
  40899d:	scas   eax,DWORD PTR es:[edi]
  40899e:	xchg   edi,eax
  40899f:	or     esi,DWORD PTR [ecx-0x4c63f3b5]
  4089a5:	shld   DWORD PTR [ecx+0x395e86cd],ebx,cl
  4089ac:	out    dx,al
  4089ad:	mov    dl,0xf
  4089af:	mov    ds:0x1c3ada60,al
  4089b4:	jmp    0xb8ad:0x3a8bcf17
  4089bb:	xchg   DWORD PTR [eax],eax
  4089bd:	push   ebp
  4089be:	sbb    eax,0x6936cb60
  4089c3:	repnz and BYTE PTR [ebp+0x7],0x5a
  4089c8:	cs enter 0xd71a,0x31
  4089cd:	ss add al,0xc6
  4089d0:	(bad)  
  4089d1:	cmp    bl,dl
  4089d3:	mov    WORD PTR [ecx-0x37d3cbd5],gs
  4089d9:	sahf   
  4089da:	mov    ebp,0x755d6070
  4089df:	xor    esp,DWORD PTR [ebp-0x2fd2abae]
  4089e5:	int    0x61
  4089e7:	loope  0x408a5a
  4089e9:	or     eax,DWORD PTR [ebx+0x408b6c96]
  4089ef:	cld    
  4089f0:	jmp    0x408a6d
  4089f2:	fadd   DWORD PTR [edi]
  4089f4:	inc    ebx
  4089f5:	mov    bh,0x15
  4089f7:	out    0x6e,eax
  4089f9:	iret   
  4089fa:	push   eax
  4089fb:	ss je  0x408a5a
  4089fe:	hlt    
  4089ff:	dec    edx
  408a00:	inc    edi
  408a01:	push   edi
  408a02:	xor    ah,BYTE PTR [esi+edx*1]
  408a05:	sbb    BYTE PTR [eax+0x3a9f507a],dh
  408a0b:	mov    ebx,0x35e621b3
  408a10:	rcr    BYTE PTR [eax],1
  408a12:	add    eax,0x599e6a34
  408a17:	mov    dh,BYTE PTR [edx]
  408a19:	in     al,dx
  408a1a:	retf   0x2e50
  408a1d:	(bad)  
  408a1f:	push   edi
  408a20:	add    BYTE PTR [ebx-0x6c],bh
  408a23:	mov    edx,0x6abfe51
  408a28:	xchg   ebp,eax
  408a29:	addr16 and eax,0x1550816b
  408a2f:	std    
  408a30:	xor    al,0x5e
  408a33:	sub    DWORD PTR [esi],ecx
  408a35:	repnz cmp edx,eax
  408a38:	arpl   WORD PTR [edx-0x15],cx
  408a3b:	arpl   WORD PTR es:[edx-0xa],dx
  408a3f:	cmp    eax,0x8839072e
  408a44:	gs xchg esp,eax
  408a46:	sahf   
  408a47:	mov    ds:0x891908f,al
  408a4c:	in     eax,dx
  408a4d:	stc    
  408a4e:	pop    eax
  408a4f:	sub    eax,DWORD PTR ds:[eax]
  408a52:	mov    ah,0x19
  408a54:	or     BYTE PTR [esi+0x505f46cf],bh
  408a5a:	inc    ecx
  408a5b:	cmp    BYTE PTR [esi-0x45],0x81
  408a5f:	out    dx,eax
  408a60:	inc    eax
  408a61:	jns    0x408ad6
  408a63:	add    al,0xe
  408a65:	jg     0x408a6a
  408a67:	gs mov dh,0x48
  408a6a:	dec    ebp
  408a6b:	xor    dl,ch
  408a6d:	(bad)  
  408a6e:	fmul   QWORD PTR [ebx+0x40]
  408a71:	push   es
  408a72:	test   al,0xe
  408a74:	rol    ecx,0x58
  408a77:	enter  0xb331,0xe4
  408a7b:	rol    dl,0x35
  408a7e:	nop
  408a7f:	fsub   QWORD PTR [ebp+0x13]
  408a82:	inc    ebp
  408a83:	inc    eax
  408a84:	sahf   
  408a85:	cmc    
  408a86:	fsubr  DWORD PTR [eax+0x4a]
  408a89:	out    0x99,eax
  408a8b:	sbb    DWORD PTR [edi-0x7d],edx
  408a8e:	push   eax
  408a8f:	or     bl,ch
  408a91:	je     0x408b0c
  408a93:	inc    esi
  408a94:	xlat   BYTE PTR ds:[ebx]
  408a95:	cmp    BYTE PTR [esi+0x7e9d87],cl
  408a9b:	ins    BYTE PTR es:[edi],dx
  408a9c:	xor    al,0xf9
  408a9e:	sbb    cl,BYTE PTR [edi]
  408aa0:	adc    edi,DWORD PTR [edi+esi*1-0x10]
  408aa4:	sahf   
  408aa5:	into   
  408aa6:	fnsave [ebp-0x78]
  408aa9:	daa    
  408aaa:	fisttp WORD PTR [eax-0xf]
  408aad:	repnz arpl WORD PTR [ebx+0x42e439ca],dx
  408ab4:	mov    dl,0x78
  408ab6:	push   eax
  408ab7:	bound  esi,QWORD PTR [edi]
  408ab9:	mov    bh,0x80
  408abb:	in     eax,dx
  408abc:	adc    bl,BYTE PTR [eax+0x601d16aa]
  408ac2:	mov    edx,0xa32b8c06
  408ac7:	stos   DWORD PTR es:[edi],eax
  408ac8:	inc    esi
  408ac9:	pop    edx
  408aca:	xchg   BYTE PTR [eax],ah
  408acc:	dec    ebp
  408acd:	adc    DWORD PTR [ecx-0x27fe59e0],0x4f48fdfb
  408ad7:	nop
  408ad8:	shr    ebp,1
  408ada:	push   ss
  408adb:	mov    dh,0x8a
  408add:	fdivr  st(5),st
  408adf:	in     eax,0x4d
  408ae1:	fucomp st(0)
  408ae3:	add    eax,0x8fe4940a
  408ae8:	dec    esp
  408ae9:	in     al,0x8b
  408aeb:	jmp    0x5d6a213a
  408af0:	lods   al,BYTE PTR ds:[esi]
  408af1:	jl     0x408b43
  408af3:	popa   
  408af4:	shl    DWORD PTR ds:0xb1bcdaac,cl
  408afa:	lock mov esp,0x302e4eb3
  408b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b01:	cwde   
  408b02:	icebp  
  408b03:	mov    eax,0xbae7f94e
  408b08:	cmp    al,0xa3
  408b0a:	fucom  st(5)
  408b0c:	sub    ecx,DWORD PTR [esp+ebp*4]
  408b0f:	test   eax,0x594caec1
  408b14:	add    DWORD PTR [esi],0x5b1f9259
  408b1a:	mov    eax,ds:0xcce293c7
  408b1f:	les    esi,FWORD PTR [ecx-0x4d12ba5a]
  408b25:	mov    bh,0xeb
  408b27:	jo     0x408ab6
  408b29:	jge    0x408b1a
  408b2b:	sbb    al,BYTE PTR [esi-0x5c]
  408b2e:	inc    eax
  408b2f:	mov    ds:0x69362ee0,al
  408b34:	xchg   ebx,eax
  408b35:	push   ss
  408b36:	retf   0x4ea5
  408b39:	xor    ah,dh
  408b3b:	pop    es
  408b3c:	adc    edx,ebx
  408b3e:	cli    
  408b3f:	mov    eax,0xee2e0c57
  408b44:	pop    ebx
  408b45:	jmp    DWORD PTR [edi-0x4f]
  408b48:	cmp    bh,BYTE PTR [esi+edx*1-0x31]
  408b4c:	js     0x408b10
  408b4e:	inc    eax
  408b4f:	imul   cl
  408b51:	scas   eax,DWORD PTR es:[edi]
  408b52:	ficom  WORD PTR [ecx+esi*2+0x64]
  408b56:	jno    0x408add
  408b58:	push   es
  408b59:	mov    ebp,0x8a7c7ed8
  408b5e:	xchg   BYTE PTR [esi],dl
  408b60:	inc    ebx
  408b61:	in     eax,dx
  408b62:	jne    0x408bcd
  408b64:	int3   
  408b65:	dec    ebx
  408b66:	sub    esp,DWORD PTR [ebx]
  408b68:	mov    bh,0xc6
  408b6a:	adc    eax,0xd7e7e5df
  408b6f:	ror    DWORD PTR [eax+0x3a],0xec
  408b73:	shr    BYTE PTR [esp+ecx*1],cl
  408b76:	int    0xc5
  408b78:	dec    ebx
  408b79:	xchg   esi,eax
  408b7a:	fldlg2 
  408b7c:	and    eax,DWORD PTR [ebx+0x369e4a46]
  408b82:	or     DWORD PTR ds:0x6bf71c60,ebx
  408b88:	sbb    BYTE PTR [edi+edi*2],dl
  408b8b:	push   eax
  408b8c:	xchg   esp,eax
  408b8d:	add    eax,DWORD PTR [esi]
  408b8f:	sbb    DWORD PTR es:[eax],0xffffffd5
  408b93:	imul   esi,DWORD PTR [esi],0xffffffef
  408b96:	cmp    DWORD PTR [ebx+eax*8-0x5a],0x73a2501a
  408b9e:	jg     0x408c0f
  408ba0:	lahf   
  408ba1:	sub    ah,BYTE PTR [esi+ecx*1-0x7b36fec8]
  408ba8:	cdq    
  408ba9:	in     eax,dx
  408baa:	shr    dl,0xc3
  408bad:	sub    ebp,esi
  408baf:	inc    esi
  408bb0:	jge    0x408c31
  408bb2:	pop    ds
  408bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bb4:	outs   dx,DWORD PTR ds:[esi]
  408bb5:	jnp    0x408b90
  408bb7:	les    edx,FWORD PTR [esi]
  408bb9:	mov    ebx,0xf1a13702
  408bbe:	out    dx,eax
  408bbf:	fnstcw WORD PTR [edx-0x18071ef4]
  408bc5:	aas    
  408bc6:	test   eax,0x5351ca20
  408bcb:	add    DWORD PTR [edi],ecx
  408bcd:	test   BYTE PTR [edx-0x76d5a344],ch
  408bd3:	hlt    
  408bd4:	hlt    
  408bd5:	mov    cl,0xff
  408bd7:	cmp    DWORD PTR [ebp-0x5e54ece7],esi
  408bdd:	mov    esi,0x570de7d0
  408be2:	pop    esp
  408be3:	cmp    eax,0x2b0e3397
  408be8:	mov    edi,0x621bcf67
  408bed:	pop    ebx
  408bee:	repnz mov ds:0xd319e5c2,al
  408bf4:	cs (bad) 
  408bf6:	adc    edi,DWORD PTR [ecx]
  408bf8:	test   ah,bl
  408bfa:	cmp    DWORD PTR [ebx+0x56996062],eax
  408c00:	aam    0x74
  408c02:	in     eax,dx
  408c03:	mov    al,0x23
  408c05:	xchg   BYTE PTR [ecx+0x286b6a3d],ah
  408c0b:	fdivrp st(0),st
  408c0d:	lea    eax,[eax+ecx*1+0x3272f5]
  408c14:	mov    DWORD PTR [ebp+0x8],eax
  408c17:	mov    eax,DWORD PTR [ebp-0xc]
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0xfe30932a
  408c4f:	xlat   BYTE PTR ds:[ebx]
  408c50:	pushf  
  408c51:	sbb    BYTE PTR [ebx-0x7ca1f37d],al
  408c57:	xor    DWORD PTR ds:0x2e472ef,0x30
  408c5e:	push   edx
  408c5f:	aad    0xe1
  408c61:	lea    ecx,[edi-0x30]
  408c64:	mov    ecx,0xfef58eac
  408c69:	rol    ah,1
  408c6b:	cs push 0x51b32aae
  408c71:	mov    edi,0x75e0005
  408c76:	ja     0x408ce8
  408c78:	dec    BYTE PTR [edx]
  408c7a:	dec    esp
  408c7b:	adc    dh,0x0
  408c7e:	icebp  
  408c7f:	and    DWORD PTR [ecx],ebx
  408c81:	les    ebx,FWORD PTR [edx+0x4a]
  408c84:	pusha  
  408c85:	(bad)  [edi+0xd]
  408c88:	xor    ebp,DWORD PTR [edi+0x7105400c]
  408c8e:	nop
  408c8f:	in     eax,dx
  408c90:	mov    cl,BYTE PTR [eax-0x2157825d]
  408c96:	xchg   al,cl
  408c98:	adc    al,0x9a
  408c9a:	jge    0x408c3a
  408c9c:	fild   DWORD PTR [ebx]
  408c9e:	mov    edi,0x157a5475
  408ca3:	cli    
  408ca4:	out    0xf5,eax
  408ca6:	iret   
  408ca7:	pop    ebp
  408ca8:	inc    ebx
  408ca9:	adc    edx,DWORD PTR [edi-0x7959634e]
  408caf:	mov    ecx,0x1cf194b6
  408cb4:	push   ecx
  408cb5:	mov    ?,WORD PTR [ebx+ebx*1+0x19]
  408cb9:	retf   
  408cba:	pushf  
  408cbb:	xor    eax,0x120c6af9
  408cc0:	dec    ebx
  408cc1:	mov    ds:0x148853b5,al
  408cc6:	jp     0x408c81
  408cc8:	mov    cl,0xd9
  408cca:	jno    0x408d19
  408ccc:	sub    ecx,DWORD PTR [ebx]
  408cce:	xor    eax,eax
  408cd0:	xchg   ecx,eax
  408cd1:	and    DWORD PTR ds:0xe057eec4,edi
  408cd7:	fsubr  QWORD PTR [ecx+0x7789c628]
  408cdd:	cli    
  408cde:	test   BYTE PTR [esi+ebp*2],bh
  408ce1:	enter  0x310,0xce
  408ce5:	call   0x7761:0x3eca5744
  408cec:	test   bl,0xc4
  408cef:	outs   dx,DWORD PTR ds:[esi]
  408cf0:	jne    0x408ca1
  408cf2:	pop    ebx
  408cf3:	jae    0x408d4d
  408cf5:	jl     0x408d74
  408cf7:	cmp    DWORD PTR [ebx+0x629e915a],ebx
  408cfd:	inc    eax
  408cfe:	(bad)
  408d02:	mov    WORD PTR [ebx],es
  408d04:	inc    ebp
  408d05:	jbe    0x408c93
  408d07:	pop    ss
  408d08:	jecxz  0x408cca
  408d0a:	mov    bl,0xbb
  408d0c:	lds    ebp,FWORD PTR [ecx+ecx*4]
  408d0f:	and    al,0x81
  408d11:	(bad)  
  408d12:	xor    BYTE PTR [edx-0x23],bl
  408d15:	xchg   esp,eax
  408d16:	bound  edx,QWORD PTR [edi-0xc]
  408d19:	lar    esp,sp
  408d1c:	pusha  
  408d1d:	xor    ebx,DWORD PTR [esi-0x11f3e5a7]
  408d23:	mov    DWORD PTR [eax],ecx
  408d25:	shl    DWORD PTR [edx],1
  408d27:	push   edi
  408d28:	cmp    eax,0x6ca60413
  408d2d:	imul   BYTE PTR [eax-0x4ab65e86]
  408d33:	in     eax,0xa0
  408d35:	mov    ds,WORD PTR [eax]
  408d37:	lods   eax,DWORD PTR ds:[esi]
  408d38:	sbb    ch,BYTE PTR [esi-0x55a1b420]
  408d3e:	dec    esi
  408d3f:	into   
  408d40:	adc    al,0x56
  408d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d43:	mov    bl,0xac
  408d45:	xor    BYTE PTR [edx-0x5789c2b6],bh
  408d4b:	push   0x1bb02def
  408d50:	adc    ebp,edx
  408d52:	inc    edx
  408d53:	jo     0x408d3c
  408d55:	jl     0x408d25
  408d57:	(bad)  
  408d59:	loope  0x408d3b
  408d5b:	cmp    DWORD PTR [edi],edi
  408d5d:	jmp    0x408ce0
  408d5f:	xor    DWORD PTR [edi-0x57f9cbba],edx
  408d65:	in     eax,dx
  408d66:	(bad)  
  408d67:	jecxz  0x408dbb
  408d69:	inc    DWORD PTR [eax+eiz*2+0x6c]
  408d6d:	movntps XMMWORD PTR [edx+0x60eee427],xmm0
  408d74:	cmp    DWORD PTR [ecx-0x7],esp
  408d77:	adc    DWORD PTR ds:0x356a60d9,ebp
  408d7d:	mov    ds:0xf64a9f1,eax
  408d82:	jl     0x408ded
  408d84:	fiadd  DWORD PTR [edi+0x12]
  408d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d88:	mov    dh,0xc4
  408d8a:	fst    st(5)
  408d8c:	aam    0x34
  408d8e:	cmp    BYTE PTR [eax+0x4d],dl
  408d91:	je     0x408d6a
  408d93:	sub    bl,dl
  408d95:	mov    WORD PTR [ebx+ecx*4],fs
  408d98:	neg    eax
  408d9a:	jnp    0x408dc1
  408d9c:	jae    0x408dc1
  408d9e:	push   ebp
  408d9f:	imul   ebx,DWORD PTR [edx+ecx*2],0xffffffe4
  408da3:	cwde   
  408da4:	rcr    edi,cl
  408da6:	add    eax,0xba1403cc
  408dab:	popa   
  408dac:	jmp    0x2119d835
  408db1:	inc    edx
  408db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408db3:	addr16 pop eax
  408db5:	lds    edx,FWORD PTR [edx]
  408db7:	shl    ah,1
  408db9:	xchg   esi,eax
  408dba:	jl     0x408d76
  408dbc:	loop   0x408d51
  408dbe:	jg     0x408e3f
  408dc0:	fistp  WORD PTR [eax-0x6331e292]
  408dc6:	or     eax,0x5fbaffaa
  408dcb:	fisubr WORD PTR [edi+0x1d591c1d]
  408dd1:	add    DWORD PTR [esi],0xf337a192
  408dd7:	cld    
  408dd8:	ja     0x408d7c
  408dda:	and    DWORD PTR [edi-0x6f7c3cb6],eax
  408de0:	push   ss
  408de1:	mov    ah,0xcf
  408de3:	aad    0x57
  408de5:	fdivr  DWORD PTR [esi+0x77]
  408de8:	or     ebp,edx
  408dea:	addr16 pop ebx
  408dec:	inc    edx
  408ded:	les    edx,FWORD PTR [ecx-0x49]
  408df0:	jecxz  0x408e60
  408df2:	or     ch,dh
  408df4:	(bad)  
  408df5:	imul   edi,DWORD PTR [esi],0xa75871d9
  408dfb:	push   edx
  408dfc:	enter  0xece3,0x69
  408e00:	mov    eax,ds:0x919b2677
  408e05:	jp     0x408da7
  408e07:	mov    bl,0xe6
  408e09:	jno    0x408d9a
  408e0b:	and    al,0x62
  408e0d:	jbe    0x408de0
  408e0f:	lds    esi,FWORD PTR cs:[eax]
  408e12:	jne    0x408dae
  408e14:	adc    al,0x3e
  408e16:	sub    al,0x8d
  408e18:	ins    BYTE PTR es:[edi],dx
  408e19:	ror    BYTE PTR ds:[edx+0x7d],cl
  408e1d:	mov    DWORD PTR [ecx],0xf2aa94c3
  408e23:	out    0x9a,al
  408e25:	repnz and bh,BYTE PTR [ecx]
  408e28:	cmp    dh,dl
  408e2a:	loopne 0x408def
  408e2c:	in     eax,0xde
  408e2e:	arpl   bx,sp
  408e30:	addr16 jno 0x408ea0
  408e33:	stos   BYTE PTR es:[edi],al
  408e34:	loopne 0x408dc9
  408e36:	inc    esi
  408e37:	iret   
  408e38:	sub    eax,0x446bb44f
  408e3d:	push   ecx
  408e3e:	ret    
  408e3f:	push   ds
  408e40:	xchg   edi,eax
  408e41:	push   es
  408e42:	outs   dx,BYTE PTR ds:[esi]
  408e43:	or     eax,0xc673b6c8
  408e48:	mov    edi,0xe3e0cce0
  408e4d:	aad    0xf5
  408e4f:	jb     0x408e7a
  408e51:	inc    ebp
  408e52:	or     eax,DWORD PTR [ecx-0x1d0ec55f]
  408e58:	adc    ah,BYTE PTR [eax+0x59b92bc0]
  408e5e:	out    0xc1,eax
  408e60:	das    
  408e61:	(bad)  
  408e62:	(bad)  
  408e64:	mov    al,0x96
  408e66:	cmp    DWORD PTR [edi-0x500a2baa],eax
  408e6c:	lock mov cl,0x5c
  408e6f:	push   ebx
  408e70:	popa   
  408e71:	jmp    0x408e06
  408e73:	ins    BYTE PTR es:[edi],dx
  408e74:	rol    DWORD PTR [edx-0xf],1
  408e77:	push   edi
  408e78:	int3   
  408e79:	or     BYTE PTR [ebx-0x16495c5a],0xcf
  408e80:	enter  0xa758,0x31
  408e84:	js     0x408e7a
  408e86:	into   
  408e87:	push   0x85e6060b
  408e8c:	daa    
  408e8d:	gs cmp esi,ebp
  408e90:	add    DWORD PTR [eax],ecx
  408e92:	and    eax,0x79d08074
  408e97:	daa    
  408e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e99:	sbb    edi,DWORD PTR [esi]
  408e9b:	pop    esi
  408e9c:	call   FWORD PTR [eax]
  408e9e:	inc    edx
  408e9f:	inc    ecx
  408ea0:	xor    eax,DWORD PTR [ecx+0x6d711763]
  408ea6:	cmp    al,0x9a
  408ea8:	mov    ecx,0x59585f7d
  408ead:	xchg   esi,eax
  408eae:	out    dx,al
  408eaf:	mov    dl,BYTE PTR [eax+0x1ff8a320]
  408eb5:	aam    0x1b
  408eb7:	inc    ebx
  408eb8:	jl     0x408ece
  408eba:	out    dx,al
  408ebb:	cwde   
  408ebc:	or     esi,DWORD PTR [edi+edi*4]
  408ebf:	mov    al,ds:0x1226d01f
  408ec4:	pop    edx
  408ec5:	dec    edi
  408ec6:	pop    ss
  408ec7:	push   0x66e6343b
  408ecc:	sbb    al,0xdf
  408ece:	pop    edx
  408ecf:	mov    eax,ds:0xb2a08119
  408ed4:	aaa    
  408ed5:	pop    es
  408ed6:	retf   0xbac4
  408ed9:	data16 aaa 
  408edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408edc:	xchg   ebx,eax
  408edd:	(bad)  
  408edf:	repnz or BYTE PTR [esi+0x8],ch
  408ee3:	dec    ebx
  408ee4:	mul    DWORD PTR [ebx-0x58]
  408ee7:	jmp    0xb36d:0x4a49259a
  408eee:	data16 out 0x2d,al
  408ef1:	div    DWORD PTR [eax-0x30]
  408ef4:	lock dec ebp
  408ef6:	push   ds
  408ef7:	or     ebp,DWORD PTR [esi+0x772b18f1]
  408efd:	jle    0x408f7c
  408eff:	or     al,0x6c
  408f01:	mov    WORD PTR [edx-0x4f],ds
  408f04:	fild   DWORD PTR [ebx+0x9d9b949]
  408f0a:	pop    eax
  408f0b:	cmp    BYTE PTR [edi-0x40dbdc74],dh
  408f11:	je     0x408f07
  408f13:	and    eax,ebp
  408f15:	enter  0xbe35,0xf7
  408f19:	(bad)  
  408f1a:	and    eax,0x795d815a
  408f1f:	cmc    
  408f20:	pop    esp
  408f21:	enter  0x91d1,0xd6
  408f25:	xor    BYTE PTR [ebx-0x3d87b2d6],0x9b
  408f2c:	cld    
  408f2d:	gs ins BYTE PTR es:[edi],dx
  408f2f:	ins    BYTE PTR es:[edi],dx
  408f30:	hlt    
  408f31:	and    eax,0xf9467440
  408f36:	add    ecx,DWORD PTR [ebx+eiz*4]
  408f39:	iret   
  408f3a:	xor    DWORD PTR [esi],edi
  408f3c:	pop    eax
  408f3d:	outs   dx,BYTE PTR ds:[esi]
  408f3e:	mov    al,ds:0x39797d58
  408f43:	jno    0x408f9a
  408f45:	jbe    0x408fc6
  408f47:	pop    esp
  408f48:	pop    edx
  408f49:	clc    
  408f4a:	add    al,0x6d
  408f4c:	test   DWORD PTR [edx+0x503b0ce9],0x88aa6cb7
  408f56:	in     al,dx
  408f57:	add    eax,0x66f6f0ec
  408f5c:	push   esi
  408f5d:	ds dec esi
  408f5f:	sbb    BYTE PTR [ecx+0x79],dh
  408f62:	or     eax,0xd84c6460
  408f67:	sub    eax,0x9401bed8
  408f6c:	mov    bl,0x9
  408f6e:	mov    ds:0x5d4413e5,al
  408f73:	xchg   bl,ch
  408f75:	add    dh,BYTE PTR [ebp*1-0x5d47649f]
  408f7c:	je     0x408fd9
  408f7e:	cs ins DWORD PTR es:[edi],dx
  408f80:	lods   al,BYTE PTR ds:[esi]
  408f81:	out    0x1b,al
  408f83:	call   0x6dfd7177
  408f88:	das    
  408f89:	mov    eax,0x332068ae
  408f8e:	sbb    eax,0x28a47f73
  408f93:	cmp    edx,DWORD PTR [edi+0x23]
  408f96:	jmp    0x408f4a
  408f98:	lds    esp,FWORD PTR [ebx-0x2c1e9ede]
  408f9e:	loope  0x409001
  408fa0:	imul   edx,DWORD PTR [edi-0xd],0xffffffb6
  408fa4:	dec    ecx
  408fa5:	test   DWORD PTR [esi],eax
  408fa7:	jno    0x408f6f
  408fa9:	sbb    eax,0x6a086b2
  408fae:	mov    ebx,0x39b47d2b
  408fb3:	cld    
  408fb4:	adc    BYTE PTR [esi+0x753d1cfe],0x8a
  408fbb:	hlt    
  408fbc:	lods   eax,DWORD PTR ds:[esi]
  408fbd:	aaa    
  408fbe:	mov    ds:0x756cf161,al
  408fc3:	ins    BYTE PTR es:[edi],dx
  408fc4:	or     al,0xb6
  408fc7:	cmp    BYTE PTR [ecx-0x70718013],cl
  408fcd:	sahf   
  408fce:	sub    al,0xf0
  408fd0:	cmp    eax,0x14458dde
  408fd5:	push   cs
  408fd6:	cmp    DWORD PTR [ebx],edi
  408fd8:	pop    esp
  408fd9:	(bad)  
  408fdb:	push   ds
  408fdc:	test   eax,0xf02c1003
  408fe1:	ror    ecx,0xa4
  408fe4:	mov    al,0x58
  408fe6:	jl     0x409012
  408fe8:	add    edi,ecx
  408fea:	adc    DWORD PTR [edx+0x7888590e],ebx
  408ff0:	scas   al,BYTE PTR es:[edi]
  408ff1:	cmc    
  408ff2:	fisub  WORD PTR es:[edi]
  408ff5:	pop    esi
  408ff6:	cwde   
  408ff7:	mov    al,ds:0x19e496f4
  408ffc:	xchg   BYTE PTR [edx],bh
  408ffe:	aam    0xc6
  409000:	add    al,0x51
  409002:	add    al,0x1e
  409004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409005:	xor    eax,0xb6478f46
  40900a:	and    al,0x70
  40900c:	cmp    BYTE PTR [edi+eiz*8-0x11],cl
  409010:	jl     0x408ff6
  409012:	fadd   DWORD PTR [ebx+esi*4]
  409015:	mov    cs,WORD PTR [edi-0x77]
  409018:	push   eax
  409019:	repnz mov edi,0x4c4abb3a
  40901f:	int    0x53
  409021:	dec    edx
  409022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409023:	mov    al,ds:0x234af3ec
  409028:	add    edi,ecx
  40902a:	stos   BYTE PTR es:[edi],al
  40902b:	shl    DWORD PTR [ebx],cl
  40902d:	pushf  
  40902e:	jnp    0x40906e
  409030:	call   0xae49:0x1a38bcaf
  409037:	(bad)
  40903a:	mov    edi,0x5207c133
  40903f:	or     eax,0xebe20f76
  409044:	dec    esp
  409045:	inc    ebx
  409046:	push   edi
  409047:	sbb    al,0xeb
  409049:	call   DWORD PTR [ebp+ebp*8-0x77ee3154]
  409050:	ret    0x1027
  409053:	sub    eax,0xc8d14d5a
  409058:	imul   esi,eax,0xf0dcacdb
  40905e:	pop    ds
  40905f:	mov    ebp,0x7c4df680
  409064:	dec    ebx
  409065:	jo     0x40906d
  409067:	jl     0x40902e
  409069:	call   0xbdf3ca41
  40906e:	sti    
  40906f:	xchg   edi,eax
  409070:	dec    esi
  409071:	inc    edx
  409072:	pop    ds
  409073:	repz ret 
  409075:	mov    eax,0xff167919
  40907a:	hlt    
  40907b:	mov    dl,0xb1
  40907d:	into   
  40907e:	push   es
  40907f:	mov    dh,0x69
  409081:	test   DWORD PTR [edx-0x55a502f],edi
  409087:	inc    ebp
  409088:	clc    
  409089:	mov    bl,0xaf
  40908b:	sti    
  40908c:	neg    DWORD PTR [edx]
  40908e:	jg     0x40909d
  409090:	add    BYTE PTR [ebx],cl
  409092:	aad    0x86
  409094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409095:	into   
  409096:	not    BYTE PTR [esi]
  409098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409099:	jmp    0x409032
  40909b:	sar    cl,cl
  40909d:	mov    al,0x75
  40909f:	enter  0x7fa1,0xb3
  4090a3:	ror    bl,0xdb
  4090a6:	xor    al,0xfb
  4090a8:	mov    esi,0xdaff885
  4090ad:	or     BYTE PTR [esi+ebx*1-0x4],dl
  4090b1:	in     al,dx
  4090b2:	inc    BYTE PTR [esi+0x2b]
  4090b5:	xlat   BYTE PTR ds:[ebx]
  4090b6:	arpl   WORD PTR [ecx+0x75],di
  4090b9:	lock cs loop 0x409067
  4090bd:	adc    dh,dl
  4090bf:	addr16 imul edi,ebx,0xc8422d37
  4090c6:	pop    eax
  4090c7:	test   DWORD PTR [ebx-0x7983a5f2],0xc6722809
  4090d1:	mov    ds:0xeb779aeb,al
  4090d6:	scas   al,BYTE PTR es:[edi]
  4090d7:	lock ja 0x4090fe
  4090da:	mov    ?,WORD PTR [ebx-0x7]
  4090dd:	jmp    0xc523e91f
  4090e2:	fistp  DWORD PTR fs:[edx-0x3a]
  4090e6:	popa   
  4090e7:	dec    ebx
  4090e8:	pop    edi
  4090e9:	adc    BYTE PTR [esi],bl
  4090eb:	pop    esi
  4090ec:	pop    ds
  4090ed:	jnp    0x40915b
  4090ef:	jno    0x4090a3
  4090f1:	in     al,0xce
  4090f3:	mov    WORD PTR [eax+0x74],?
  4090f6:	retf   0x31c4
  4090f9:	adc    bl,al
  4090fb:	mov    al,ds:0x4440be25
  409100:	mov    eax,0x87d60df5
  409105:	aad    0x8d
  409107:	xor    DWORD PTR [edx-0x1b5e3eb4],esi
  40910d:	ins    BYTE PTR es:[edi],dx
  40910e:	dec    ebp
  40910f:	pop    es
  409110:	lock adc ah,BYTE PTR [ebp-0x1e636039]
  409117:	inc    edi
  409118:	inc    ecx
  409119:	mov    BYTE PTR [eax],bh
  40911b:	add    BYTE PTR [ecx-0x5983bd38],ah
  409121:	adc    edi,DWORD PTR [eax+esi*1-0x754aed46]
  409128:	fsubrp st(5),st
  40912a:	jne    0x40912b
  40912c:	into   
  40912d:	and    dl,BYTE PTR [edi]
  40912f:	pop    eax
  409130:	jb     0x4090c3
  409132:	sar    DWORD PTR [edx],cl
  409134:	jo     0x409165
  409136:	(bad)  
  409137:	test   al,0x68
  409139:	nop
  40913a:	mov    bh,0xd5
  40913c:	or     edx,ebx
  40913e:	pop    es
  40913f:	mov    ebp,0x5cb5432f
  409144:	pusha  
  409145:	test   BYTE PTR [ecx-0x6c],al
  409148:	fs push 0xfffffff4
  40914b:	xor    BYTE PTR [eax-0x6b],al
  40914e:	xor    eax,0xc1a49185
  409153:	xchg   ecx,eax
  409154:	rcr    BYTE PTR [edi-0x442a1d46],1
  40915a:	pop    edx
  40915b:	stos   DWORD PTR es:[edi],eax
  40915c:	daa    
  40915d:	fild   DWORD PTR [eax-0x45]
  409160:	push   eax
  409161:	aad    0x53
  409163:	xchg   ecx,eax
  409164:	mov    al,ds:0xccd6636a
  409169:	sbb    eax,0x9dd95542
  40916e:	stos   DWORD PTR es:[edi],eax
  40916f:	adc    BYTE PTR [edx-0x297dc407],ah
  409175:	mov    BYTE PTR [esi-0x1a],al
  409178:	sub    dh,cl
  40917a:	imul   ecx,DWORD PTR [ecx],0x32
  40917d:	mov    al,ss:0x300dff9
  409183:	das    
  409184:	leave  
  409185:	iret   
  409186:	adc    eax,0x5f1a67f2
  40918b:	jns    0x40913e
  40918d:	sub    al,0xad
  40918f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409190:	enter  0xb30c,0x71
  409194:	xchg   ebp,eax
  409195:	test   DWORD PTR ds:[edi+0x57ed1883],ebx
  40919c:	cmp    eax,0x714012dd
  4091a1:	fstp   TBYTE PTR [ecx]
  4091a3:	dec    DWORD PTR ss:[ebx-0x37]
  4091a7:	jp     0x40915b
  4091a9:	iret   
  4091aa:	adc    BYTE PTR [ebx],dl
  4091ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091ad:	jl     0x409139
  4091af:	inc    ebp
  4091b0:	sbb    DWORD PTR [edx-0x78],edx
  4091b3:	sub    BYTE PTR [ebx+eiz*4],dl
  4091b6:	pop    ds
  4091b7:	dec    edi
  4091b8:	mov    esi,0xd50f36c5
  4091bd:	sub    eax,0xe41607c9
  4091c2:	icebp  
  4091c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091c4:	scas   al,BYTE PTR es:[edi]
  4091c5:	shl    BYTE PTR [edi],cl
  4091c7:	fist   WORD PTR [edx]
  4091c9:	xor    BYTE PTR [edx+0x77],0x2a
  4091cd:	retf   
  4091ce:	push   ecx
  4091cf:	xchg   edi,eax
  4091d0:	lods   al,BYTE PTR ds:[esi]
  4091d1:	sbb    al,0x63
  4091d3:	shl    DWORD PTR [ebx-0x40],0x35
  4091d7:	fisttp DWORD PTR [ebx+0x3f]
  4091da:	xor    al,0x46
  4091dc:	ds cs push es
  4091df:	ds gs adc cl,al
  4091e3:	mov    esi,0x3f0b8f01
  4091e8:	push   esp
  4091e9:	imul   ebp,DWORD PTR [ebx+eax*1+0x77],0xffffffca
  4091ee:	das    
  4091ef:	add    eax,DWORD PTR [ebp+eiz*4+0x12]
  4091f3:	add    BYTE PTR [edi],0xd5
  4091f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091f7:	popa   
  4091f8:	dec    eax
  4091f9:	xchg   edi,eax
  4091fa:	mov    ebp,DWORD PTR [esi]
  4091fc:	dec    ebp
  4091fd:	arpl   WORD PTR [ebp+0xb4c69ff],si
  409203:	gs mov esp,0xadd55cad
  409209:	push   eax
  40920a:	sbb    DWORD PTR [edx+ebp*2+0x51],ecx
  40920e:	inc    ebx
  40920f:	dec    ecx
  409210:	adc    DWORD PTR [ebx],0x9dc47496
  409216:	bound  eax,QWORD PTR [ecx+0x35]
  409219:	push   edx
  40921a:	test   al,0xd0
  40921c:	fwait
  40921d:	mov    eax,ds:0xe3af64cf
  409222:	inc    esp
  409223:	cmp    WORD PTR [eax],di
  409226:	ror    BYTE PTR [edi],0xcc
  409229:	xchg   ah,bl
  40922b:	test   DWORD PTR [edx],0x3a871bd4
  409231:	push   ecx
  409232:	repz jecxz 0x4092b1
  409235:	stos   BYTE PTR es:[edi],al
  409236:	ror    WORD PTR [edx],0xf9
  40923a:	pop    es
  40923b:	sub    bh,ch
  40923d:	push   ds
  40923e:	in     eax,dx
  40923f:	aam    0xc8
  409241:	add    DWORD PTR [ecx+eiz*1],eax
  409244:	imul   BYTE PTR [ebx-0x7d]
  409247:	mov    ah,0x84
  409249:	add    DWORD PTR [ecx],edi
  40924b:	add    DWORD PTR [esp+eiz*2-0x47fdcb10],esp
  409252:	push   esp
  409253:	add    ah,BYTE PTR [ecx]
  409255:	test   al,0x36
  409257:	and    DWORD PTR [esi],0xee9bb239
  40925d:	push   es
  40925e:	add    esi,ebp
  409260:	pop    edi
  409261:	nop
  409262:	dec    eax
  409263:	ins    BYTE PTR es:[edi],dx
  409264:	ss and eax,0xf12aece6
  40926a:	push   edi
  40926b:	and    ebx,DWORD PTR [esi+eiz*4+0x2]
  40926f:	adc    BYTE PTR [ecx+0x28],dh
  409272:	and    ecx,DWORD PTR [ecx+0x1c39c024]
  409278:	popa   
  409279:	mov    ecx,0x5a46aada
  40927e:	dec    ecx
  40927f:	nop
  409280:	push   edi
  409281:	repz sbb cl,BYTE PTR [eax-0x46]
  409285:	in     al,dx
  409286:	adc    BYTE PTR [ebx-0x5b68eb2e],bl
  40928c:	mov    cl,0xbe
  40928e:	inc    esi
  40928f:	push   ebx
  409290:	and    eax,0x8643dd03
  409295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409296:	shl    DWORD PTR [ebp+0x23b49b8b],cl
  40929c:	jmp    0x409284
  40929e:	leave  
  40929f:	pop    ss
  4092a0:	mov    cl,0xdc
  4092a2:	or     eax,DWORD PTR [ebp-0x28]
  4092a5:	pop    es
  4092a6:	pop    ebp
  4092a7:	adc    edi,edi
  4092a9:	out    dx,al
  4092aa:	pop    esp
  4092ab:	add    ch,bl
  4092ad:	inc    edx
  4092ae:	push   ds
  4092af:	push   esp
  4092b0:	sub    eax,0x636d7b28
  4092b5:	cmp    ebp,DWORD PTR [ecx-0x12]
  4092b8:	mov    eax,0x79b87cf1
  4092bd:	clc    
  4092be:	popf   
  4092bf:	jg     0x4092af
  4092c1:	xchg   BYTE PTR [ebp+eax*1+0x1e],dl
  4092c5:	sahf   
  4092c6:	sbb    bh,ch
  4092c8:	sbb    al,0xa5
  4092ca:	scas   eax,DWORD PTR es:[edi]
  4092cb:	pop    ebx
  4092cc:	jne    0x409297
  4092ce:	xor    al,0xa4
  4092d0:	mov    bh,0x78
  4092d2:	jg     0x4092b7
  4092d4:	mov    dl,0x7d
  4092d6:	(bad)  
  4092d7:	inc    edi
  4092d8:	fdiv   QWORD PTR [ebx-0x7d]
  4092db:	lahf   
  4092dc:	neg    DWORD PTR [edx-0x4b]
  4092df:	adc    dl,BYTE PTR [ecx]
  4092e1:	mov    ecx,0xf686e076
  4092e6:	sub    esi,DWORD PTR [esi-0x1c]
  4092e9:	xchg   esp,eax
  4092ea:	mov    al,ds:0x428ccc05
  4092ef:	dec    ebx
  4092f0:	popa   
  4092f1:	icebp  
  4092f2:	xor    eax,0x7e215f5f
  4092f7:	push   esp
  4092f8:	out    0x1b,eax
  4092fa:	and    BYTE PTR [eax],ch
  4092fc:	pusha  
  4092fd:	stos   BYTE PTR es:[edi],al
  4092fe:	nop
  4092ff:	push   ss
  409300:	(bad)  
  409301:	sub    BYTE PTR [esi+0x51],ah
  409304:	fstp   DWORD PTR [esi]
  409306:	fcomp  DWORD PTR [edx+0x6282dc2b]
  40930c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40930d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40930e:	sub    BYTE PTR [edi+0x27411f00],ah
  409314:	out    0x43,al
  409316:	in     al,0x41
  409318:	ret    0x472e
  40931b:	jp     0x4092da
  40931d:	hlt    
  40931e:	call   0x2d62:0x91966282
  409325:	xchg   ecx,eax
  409326:	out    dx,al
  409327:	mov    bh,0x14
  409329:	pop    edi
  40932a:	dec    ecx
  40932b:	push   eax
  40932c:	and    edx,edi
  40932e:	cmp    edi,DWORD PTR es:[eax]
  409331:	mov    bl,0x8c
  409333:	leave  
  409334:	inc    esi
  409335:	pusha  
  409336:	and    esi,DWORD PTR fs:[ebp+0x29]
  40933a:	pop    edx
  40933b:	bound  esi,QWORD PTR [ebp-0x660e7a94]
  409341:	dec    esp
  409342:	out    0xf3,al
  409344:	adc    edi,0x6f86f7e7
  40934a:	xor    esp,esi
  40934c:	leave  
  40934d:	adc    eax,0xe1ff9606
  409352:	pop    eax
  409353:	mov    al,ds:0xe105aa77
  409358:	pushf  
  409359:	pop    DWORD PTR [ebp-0x66]
  40935c:	mov    WORD PTR [esi-0x5b],ds
  40935f:	iret   
  409360:	sti    
  409361:	dec    esi
  409362:	or     DWORD PTR [ebx],ecx
  409364:	fwait
  409365:	jp     0x409358
  409367:	pop    esp
  409368:	ret    0xbd51
  40936b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40936c:	mov    ds:0x4e990107,al
  409371:	xchg   ebp,eax
  409372:	cmp    eax,0x3bf73c8b
  409377:	into   
  409378:	les    esp,FWORD PTR [edi]
  40937a:	sub    al,0xb3
  40937c:	fwait
  40937d:	pop    esi
  40937e:	aas    
  40937f:	push   eax
  409380:	inc    esi
  409381:	jns    0x4093ae
  409383:	pop    esi
  409384:	hlt    
  409385:	repnz or al,0x3e
  409388:	int    0xa4
  40938a:	shl    BYTE PTR [edx+0x4b7366b9],cl
  409390:	ins    DWORD PTR es:[edi],dx
  409391:	pop    eax
  409392:	add    bh,BYTE PTR [edx+edx*8]
  409395:	inc    eax
  409396:	fwait
  409397:	cmp    eax,eax
  409399:	out    0x68,al
  40939b:	aaa    
  40939c:	pop    edi
  40939d:	sar    DWORD PTR [edi+eiz*4],1
  4093a0:	and    al,0x80
  4093a2:	rol    ah,1
  4093a4:	repz std 
  4093a6:	jno    0x409419
  4093a8:	mov    al,ds:0xa54df1f9
  4093ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ae:	fwait
  4093af:	xor    eax,DWORD PTR [edx+0xf]
  4093b2:	sub    cl,BYTE PTR [ebp-0x59]
  4093b5:	pop    ebp
  4093b6:	mov    cl,0x68
  4093b8:	sub    BYTE PTR [edx-0x61],al
  4093bb:	mov    edi,0xe21b7e52
  4093c0:	cld    
  4093c1:	xchg   esi,eax
  4093c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c3:	add    dl,BYTE PTR [ebx-0x3b]
  4093c6:	xor    eax,0x861a8c46
  4093cb:	jl     0x40940f
  4093cd:	mov    bl,0xd1
  4093cf:	cmp    DWORD PTR [esi-0x67],eax
  4093d2:	and    al,0x6b
  4093d4:	push   esi
  4093d5:	(bad)
  4093d8:	(bad)  
  4093da:	aaa    
  4093db:	rol    DWORD PTR [ebp+0x649a3cc8],cl
  4093e1:	or     eax,edx
  4093e3:	cld    
  4093e4:	call   0x8e70619e
  4093e9:	sbb    eax,0x7bcf1fd3
  4093ee:	mov    dl,0x33
  4093f0:	and    al,0x69
  4093f2:	push   0x5b5a4752
  4093f7:	fsubr  DWORD PTR [eax]
  4093f9:	aam    0x80
  4093fb:	push   ecx
  4093fc:	into   
  4093fd:	bnd je 0x40944c
  409400:	xor    eax,0x3cbf4f94
  409405:	jecxz  0x4093d4
  409407:	jns    0x4093d2
  409409:	ins    DWORD PTR es:[edi],dx
  40940a:	xchg   ebx,eax
  40940b:	sub    DWORD PTR [edi-0x8b08c25],eax
  409411:	jmp    0x838a5c06
  409416:	clc    
  409417:	ds pop esp
  409419:	fist   DWORD PTR [ecx-0x4836d04e]
  40941f:	xchg   ebp,eax
  409420:	and    al,0xb1
  409422:	test   BYTE PTR [eax-0x77],dh
  409425:	(bad)  
  409427:	sbb    esi,DWORD PTR [edx-0x3ca8bd29]
  40942d:	cmp    eax,0xbdfab590
  409432:	sti    
  409433:	jge    0x40944e
  409435:	adc    dh,ah
  409437:	lea    edi,[edi-0xc2eeee0]
  40943d:	or     DWORD PTR [esi+esi*4],ecx
  409440:	sar    dh,1
  409442:	cdq    
  409443:	loope  0x4093d5
  409445:	(bad)  
  409446:	fcom   DWORD PTR [edi-0x780ddf33]
  40944c:	ja     0x40942d
  40944e:	dec    edx
  40944f:	jns    0x4093e7
  409451:	mov    fs,edx
  409453:	inc    BYTE PTR [edx]
  409455:	in     al,dx
  409456:	test   al,0xd9
  409458:	mov    esi,0xf65a9aa0
  40945d:	xchg   esi,eax
  40945e:	rcl    DWORD PTR [ecx-0x7d],cl
  409461:	and    eax,0x390f98d3
  409466:	sbb    al,0xbc
  409468:	lods   al,BYTE PTR ds:[esi]
  409469:	pop    ss
  40946a:	sub    cl,dh
  40946c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40946e:	adc    esi,edi
  409470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409471:	xor    eax,DWORD PTR [edx+0x45a31de1]
  409477:	inc    edx
  409478:	dec    ebx
  409479:	pop    esp
  40947a:	xchg   ecx,eax
  40947b:	mov    al,0xf7
  40947d:	shr    DWORD PTR [ebx-0x74],1
  409480:	imul   bp,WORD PTR [esi+edx*4],0x2751
  409486:	and    dl,dh
  409488:	add    al,0x64
  40948a:	stc    
  40948b:	enter  0xa7e0,0x0
  40948f:	jo     0x4094e2
  409491:	pop    ebx
  409492:	push   ebx
  409493:	in     eax,0xdd
  409495:	out    dx,eax
  409496:	(bad)  
  409497:	lods   al,BYTE PTR ds:[esi]
  409498:	xchg   edi,eax
  409499:	sbb    eax,0xb75b9500
  40949e:	arpl   ax,di
  4094a0:	push   esp
  4094a1:	xchg   ebx,eax
  4094a2:	std    
  4094a3:	test   al,0x62
  4094a5:	popf   
  4094a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094a7:	xor    ecx,edi
  4094a9:	pop    es
  4094aa:	iret   
  4094ab:	stos   DWORD PTR es:[edi],eax
  4094ac:	sti    
  4094ad:	cmp    al,0x90
  4094af:	mov    WORD PTR [ebx+0x71fa8512],ss
  4094b5:	jle    0x409464
  4094b7:	push   ebx
  4094b8:	hlt    
  4094b9:	adc    eax,0x139c5ad3
  4094be:	jmp    0x409530
  4094c0:	es pop ecx
  4094c2:	rcl    BYTE PTR [ebx-0x29],1
  4094c5:	loope  0x409471
  4094c7:	sbb    BYTE PTR [esi],ch
  4094c9:	imul   ecx,DWORD PTR [ebx-0x61],0xffffff80
  4094cd:	stos   DWORD PTR es:[edi],eax
  4094ce:	mov    ecx,DWORD PTR [ecx+ecx*4-0x3baa03cc]
  4094d5:	adc    dh,dl
  4094d7:	aad    0xcc
  4094d9:	mov    ds:0x8de8401,eax
  4094de:	sbb    ebp,DWORD PTR [edi]
  4094e0:	aaa    
  4094e1:	aaa    
  4094e2:	and    al,0x39
  4094e4:	jmp    0x409499
  4094e6:	xor    eax,0xb10022ec
  4094eb:	adc    DWORD PTR [ebp+0x7d],ebx
  4094ee:	pop    esi
  4094ef:	mov    eax,ds:0xb2a37f6
  4094f4:	in     eax,dx
  4094f5:	cmp    al,0x49
  4094f7:	pop    edi
  4094f8:	dec    edi
  4094f9:	xchg   esp,eax
  4094fa:	das    
  4094fb:	(bad)
  4094fe:	sbb    al,0x30
  409500:	repz ret 0x67f
  409504:	xchg   esp,eax
  409505:	lea    esp,[ecx-0x11]
  409508:	mov    edi,0xa3fb4d1d
  40950d:	sub    eax,0x2dd0176a
  409512:	(bad)  
  409513:	sub    bh,ah
  409515:	mov    ebx,0xec13bd28
  40951a:	aam    0xc0
  40951c:	xor    al,0x91
  40951e:	aas    
  40951f:	push   ecx
  409520:	dec    edi
  409521:	hlt    
  409522:	inc    ebx
  409523:	stos   BYTE PTR es:[edi],al
  409524:	or     BYTE PTR [ebx+ecx*4-0x7abe333e],0x4b
  40952c:	mov    esp,0xe3c1666a
  409531:	rcl    DWORD PTR [edi-0x2def407d],0xd0
  409538:	xchg   ebp,eax
  409539:	xchg   esp,eax
  40953a:	cld    
  40953b:	jmp    0xfd9f:0x8e70195
  409542:	clc    
  409543:	and    edx,ebx
  409545:	aam    0x18
  409547:	inc    ebx
  409548:	in     eax,0x2e
  40954a:	or     al,0x96
  40954c:	and    DWORD PTR ss:[ecx-0x58e72412],0xf8a16bf3
  409557:	cmp    eax,0xbd3a3202
  40955c:	pop    edi
  40955d:	test   BYTE PTR [ebx-0x79],dl
  409560:	sar    al,0xe9
  409563:	add    BYTE PTR [edx+esi*4+0x20222c84],al
  40956a:	pop    ds
  40956b:	inc    ebp
  40956c:	fwait
  40956d:	and    eax,0xdb871d7f
  409572:	scas   al,BYTE PTR es:[edi]
  409573:	stc    
  409574:	sbb    ecx,DWORD PTR [ebp-0x624b1c2]
  40957a:	sbb    BYTE PTR [ecx],0x3
  40957d:	cmp    dl,BYTE PTR es:[edx-0x61]
  409581:	jle    0x409567
  409583:	retf   0x989d
  409586:	js     0x4095f4
  409588:	mov    ebp,0xfc6b8f99
  40958d:	popf   
  40958e:	jnp    0x4095b0
  409590:	(bad)  
  409591:	push   cs
  409592:	mov    esp,0xd6f2593
  409597:	and    eax,0xd5cf83b8
  40959c:	or     eax,0x130d7bc
  4095a1:	in     eax,dx
  4095a2:	lods   al,BYTE PTR ds:[esi]
  4095a3:	push   ss
  4095a4:	cmp    eax,0x24632c8f
  4095a9:	jg     0x4095fc
  4095ab:	xchg   ebp,eax
  4095ac:	sbb    BYTE PTR [ecx-0x4467c0ad],al
  4095b2:	call   0x6540:0x3fe1a705
  4095b9:	mov    ds:0x9ca020be,al
  4095be:	or     eax,0x4bb49b4c
  4095c3:	pop    edi
  4095c4:	ds in  eax,0xdd
  4095c7:	sbb    ebp,esi
  4095c9:	push   ebx
  4095ca:	mov    dl,0x4e
  4095cc:	(bad)  
  4095cd:	xchg   edi,eax
  4095ce:	pop    es
  4095cf:	adc    DWORD PTR [ecx-0x6f],eax
  4095d2:	leave  
  4095d3:	adc    al,BYTE PTR [esi-0x5e]
  4095d6:	xchg   ebx,eax
  4095d7:	ins    DWORD PTR es:[edi],dx
  4095d8:	add    esp,DWORD PTR [edx]
  4095da:	loop   0x4095c3
  4095dc:	push   cs
  4095dd:	mov    ch,0x12
  4095df:	(bad)  
  4095e0:	jno    0x4095b3
  4095e2:	push   0x944e33ba
  4095e7:	mov    ds:0xd6f4c1ae,al
  4095ec:	hlt    
  4095ed:	ins    DWORD PTR es:[edi],dx
  4095ee:	rol    DWORD PTR [eax+0x2d],cl
  4095f1:	mov    bh,0x3b
  4095f3:	int    0x9a
  4095f5:	sub    cl,bh
  4095f7:	fbld   TBYTE PTR [edi+0x54]
  4095fa:	mov    BYTE PTR [ebp-0x41],al
  4095fd:	add    al,0x6c
  4095ff:	adc    ebp,DWORD PTR [ebx-0x28a9276b]
  409605:	or     BYTE PTR [ebx],bh
  409607:	out    dx,al
  409608:	dec    ebp
  409609:	xor    al,0xbc
  40960b:	inc    esi
  40960c:	or     eax,0x1461682d
  409611:	cmp    dh,BYTE PTR [eax-0x980093c]
  409617:	ficomp WORD PTR [edi+0x30ab41d9]
  40961d:	outs   dx,DWORD PTR ds:[esi]
  40961e:	sbb    BYTE PTR [edi],0x2d
  409621:	add    DWORD PTR [eax-0x25df5cc4],ecx
  409627:	popa   
  409628:	jmp    0xf5ad:0xa437cdde
  40962f:	jmp    0x3dce:0xd990159a
  409636:	fadd   QWORD PTR [esi+0x34a56c89]
  40963c:	and    al,0xc4
  40963e:	push   ecx
  40963f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409640:	(bad)  
  409641:	pop    ds
  409642:	mov    BYTE PTR [edi],ah
  409644:	ds pop esi
  409646:	pusha  
  409647:	aad    0x56
  409649:	jnp    0x4095ff
  40964b:	mov    BYTE PTR [ebx],ah
  40964d:	js     0x4096b7
  40964f:	rcl    BYTE PTR [ecx-0x24],1
  409652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409653:	pop    ss
  409654:	push   ds
  409655:	mov    cl,0xd9
  409657:	mov    dl,0x67
  409659:	dec    ebx
  40965a:	jecxz  0x409659
  40965c:	shl    ecx,0x8
  40965f:	test   eax,esp
  409661:	mov    cl,ah
  409663:	loopne 0x4096de
  409665:	fsub   DWORD PTR [ebx]
  409667:	push   cs
  409668:	inc    ebx
  409669:	jo     0x409686
  40966b:	enter  0xc5ce,0x7d
  40966f:	(bad)
  409672:	xchg   ebp,eax
  409673:	cmc    
  409674:	or     eax,0x7da25116
  409679:	xchg   BYTE PTR [esi+eiz*2-0x6bc9a55e],bh
  409680:	inc    eax
  409681:	inc    esi
  409682:	sbb    BYTE PTR [ecx+0x37],0x32
  409686:	nop
  409687:	push   ebp
  409688:	daa    
  409689:	ror    BYTE PTR [esp+ebx*2+0x4dd9a977],cl
  409690:	jmp    0x315b:0xa55503ff
  409697:	or     eax,eax
  409699:	lods   eax,DWORD PTR ds:[esi]
  40969a:	repz ja 0x409699
  40969d:	(bad)  
  40969f:	mov    al,ds:0x9abc62c0
  4096a4:	dec    ebp
  4096a5:	iret   
  4096a6:	sbb    al,0xf4
  4096a8:	outs   dx,BYTE PTR ds:[esi]
  4096a9:	push   ecx
  4096aa:	out    dx,eax
  4096ab:	test   eax,0x257fb687
  4096b0:	push   edx
  4096b1:	gs aaa 
  4096b3:	mov    es,eax
  4096b5:	or     al,0xd6
  4096b7:	sub    dh,BYTE PTR [ebx+0x6299db4f]
  4096bd:	sub    al,0xc4
  4096bf:	push   cs
  4096c0:	xchg   DWORD PTR [eax+0xb],edx
  4096c3:	(bad)  
  4096c4:	adc    esi,DWORD PTR [ebp-0xc4d090b]
  4096ca:	mov    ebx,0x906d6cc5
  4096cf:	xor    bh,BYTE PTR [edx]
  4096d1:	test   al,0xcd
  4096d3:	adc    ch,cl
  4096d5:	cmp    ebp,0xd8db0ca8
  4096db:	sub    DWORD PTR [edi],edx
  4096dd:	or     eax,0x907d600d
  4096e2:	xor    DWORD PTR [ebp-0x40],0x64a4c6f1
  4096e9:	(bad)  
  4096eb:	sbb    bh,BYTE PTR [edx+0x3c]
  4096ee:	pop    es
  4096ef:	sbb    esp,DWORD PTR [esi+0x29]
  4096f2:	sbb    al,0xd8
  4096f4:	into   
  4096f5:	jne    0x4096a9
  4096f7:	and    esp,esi
  4096f9:	push   cs
  4096fa:	pop    ebx
  4096fb:	lods   al,BYTE PTR ds:[esi]
  4096fc:	shl    DWORD PTR ds:0x29cee623,cl
  409702:	xor    eax,0xa5f42644
  409707:	mov    eax,0xa1988f35
  40970c:	xchg   edx,eax
  40970d:	jecxz  0x4096ca
  40970f:	jecxz  0x409762
  409711:	mov    ds:0x53d0a2c8,al
  409716:	loopne 0x409750
  409718:	lods   eax,DWORD PTR ds:[esi]
  409719:	inc    ebx
  40971a:	aad    0x6a
  40971c:	int3   
  40971d:	pop    ecx
  40971e:	xchg   edx,eax
  40971f:	jb     0x40976b
  409721:	add    BYTE PTR [ecx+0x8c4e874],ch
  409727:	pop    ds
  409728:	fs in  eax,0x40
  40972b:	fwait
  40972c:	pop    es
  40972d:	add    esi,DWORD PTR ss:[esi+ecx*8+0x74b17ca5]
  409735:	or     al,0x60
  409737:	ja     0x40971f
  409739:	daa    
  40973a:	inc    ebp
  40973b:	mov    esi,0x19d4c507
  409740:	dec    ebp
  409741:	dec    eax
  409742:	ds push edi
  409744:	fs adc dl,cl
  409747:	push   esi
  409748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409749:	xchg   ebx,eax
  40974a:	sub    al,0x8b
  40974c:	shl    BYTE PTR [eax-0x49],1
  40974f:	mov    esp,DWORD PTR [esi]
  409751:	rol    BYTE PTR ds:0xa8f845ec,0x79
  409758:	leave  
  409759:	retf   0x742e
  40975c:	pop    esp
  40975d:	stc    
  40975e:	fs mov al,0x25
  409761:	cmp    bh,bl
  409763:	push   edx
  409764:	adc    eax,DWORD PTR [ecx-0x28]
  409767:	mov    eax,0xd4a24fd7
  40976c:	and    dl,BYTE PTR [esi-0x2c2dcd7]
  409772:	test   DWORD PTR [eax+0x65],eax
  409775:	pop    ebp
  409776:	fadd   QWORD PTR [edx]
  409778:	std    
  409779:	xor    al,0xfb
  40977b:	repz shr BYTE PTR [eax],0x72
  40977f:	adc    al,0x2
  409781:	adc    al,0x2d
  409783:	dec    esp
  409784:	push   eax
  409785:	push   ds
  409786:	or     al,0x41
  409789:	enter  0xc68b,0xa3
  40978d:	mov    esi,0x9bd4431e
  409792:	pop    eax
  409793:	in     al,0x61
  409795:	repnz pop edx
  409797:	pop    esi
  409798:	xor    al,0x42
  40979a:	add    DWORD PTR [edi+0x68],edx
  40979d:	push   ss
  40979e:	push   es
  40979f:	mov    eax,ds:0x85868feb
  4097a4:	sbb    BYTE PTR [ebx],cl
  4097a6:	ss (bad) 
  4097a8:	call   0x48a:0x2d260807
  4097af:	mov    BYTE PTR [ecx],bh
  4097b1:	cmp    DWORD PTR ds:0x5422366,edx
  4097b7:	or     DWORD PTR [edx],edi
  4097b9:	xor    eax,0x619a965e
  4097be:	or     DWORD PTR [ecx],esp
  4097c0:	shl    BYTE PTR [ebx-0x79fc7abc],cl
  4097c6:	imul   ebx,esp,0xffffffc3
  4097c9:	ss pop eax
  4097cb:	mov    bl,bl
  4097cd:	mov    ecx,0xe51cf929
  4097d2:	cwde   
  4097d3:	fld    QWORD PTR [edx-0x56]
  4097d6:	fimul  WORD PTR [ebx+0x631fbf1c]
  4097dc:	add    ch,ch
  4097de:	dec    ecx
  4097df:	cmp    ecx,DWORD PTR [ebx-0x5]
  4097e2:	jne    0x40981e
  4097e4:	and    DWORD PTR ds:0x612216ef,esp
  4097ea:	scas   al,BYTE PTR es:[edi]
  4097eb:	add    edi,DWORD PTR [edi]
  4097ed:	scas   al,BYTE PTR es:[edi]
  4097ee:	mov    ebx,0xa4c5551a
  4097f3:	test   al,0x67
  4097f5:	sbb    edx,esp
  4097f7:	mov    esi,0x79d3591b
  4097fc:	jmp    0x409851
  4097fe:	icebp  
  4097ff:	dec    edx
  409800:	xlat   BYTE PTR ds:[ebx]
  409801:	sahf   
  409802:	pop    edi
  409803:	sub    DWORD PTR [edx+0x70a02c50],0x48
  40980a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40980b:	jae    0x409827
  40980d:	js     0x40982d
  40980f:	xchg   ecx,eax
  409810:	or     DWORD PTR [ebx+0x3205cc0e],esi
  409816:	iret   
  409817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409818:	cmc    
  409819:	cmp    eax,DWORD PTR [ebx+esi*8]
  40981c:	dec    edx
  40981d:	mov    eax,0x87a7657f
  409822:	mov    BYTE PTR [esi+eax*2-0x65],bh
  409826:	fcmovu st,st(3)
  409828:	xchg   DWORD PTR [ecx-0x1a],eax
  40982b:	cmp    ah,BYTE PTR [esi]
  40982d:	mov    cl,0x4c
  40982f:	xor    ch,BYTE PTR [ebp+0x1e]
  409832:	sub    eax,0xf0d25410
  409837:	pop    ebx
  409838:	loopne 0x40987c
  40983a:	js     0x40988b
  40983c:	icebp  
  40983d:	inc    edx
  40983e:	data16 (bad) 
  409840:	jns    0x4098a6
  409842:	push   0xd7a9a2ac
  409847:	cmp    ebx,DWORD PTR [ebx+0x48]
  40984a:	and    esi,eax
  40984c:	adc    eax,0x3b7845b3
  409851:	jae    0x409860
  409853:	jb     0x4097dd
  409855:	addr16 mov dh,0xff
  409858:	scas   eax,DWORD PTR es:[edi]
  409859:	out    0xf6,al
  40985b:	call   0x402:0x1d726738
  409862:	cmc    
  409863:	push   esp
  409864:	xor    DWORD PTR [ebx],ecx
  409866:	std    
  409867:	mov    gs,WORD PTR [ebx]
  409869:	mov    ebx,cs
  40986b:	or     al,0x16
  40986d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40986e:	mov    edx,0x2008bac4
  409873:	pop    es
  409874:	mov    edi,0x44a9b62b
  409879:	popa   
  40987a:	sub    BYTE PTR [edx+0x45],0xe8
  40987e:	add    al,0x17
  409880:	cmp    BYTE PTR [ebx],al
  409882:	push   ebp
  409883:	loopne 0x409808
  409885:	cmp    dl,BYTE PTR ds:0x248abfa6
  40988b:	push   esi
  40988c:	mov    al,0x49
  40988e:	addr16 retf 
  409890:	jns    0x40986b
  409892:	stc    
  409893:	jns    0x40985d
  409895:	xor    eax,0xbb16e45
  40989a:	lea    edi,ds:0x5d893c6b
  4098a0:	in     al,dx
  4098a1:	push   cs
  4098a2:	test   DWORD PTR [esi+0x66],esp
  4098a5:	cmp    al,0x27
  4098a7:	outs   dx,BYTE PTR ds:[esi]
  4098a8:	adc    al,0x1
  4098aa:	(bad)  
  4098ab:	retf   
  4098ac:	addr16 or al,0x78
  4098af:	(bad)  [ecx+0x2b]
  4098b2:	dec    eax
  4098b3:	push   eax
  4098b4:	push   es
  4098b5:	mov    ebp,0xacf5205a
  4098ba:	or     BYTE PTR [eax-0x38],0xf9
  4098be:	cmp    DWORD PTR [ecx+0x5d],0x8a491d26
  4098c5:	push   ecx
  4098c6:	gs lock jp 0x409870
  4098ca:	mov    ch,0x80
  4098cc:	pop    edx
  4098cd:	out    dx,al
  4098ce:	sub    DWORD PTR [esi+eiz*1-0x6a068799],edi
  4098d5:	mov    ds:0x89b93404,eax
  4098da:	or     dl,BYTE PTR [ebp+0x531b0553]
  4098e0:	pop    DWORD PTR [eax+eiz*2]
  4098e3:	push   esp
  4098e4:	retf   0xa13b
  4098e7:	ret    
  4098e8:	xor    esi,edi
  4098ea:	inc    eax
  4098eb:	icebp  
  4098ec:	rcl    DWORD PTR [ecx+0x5ff433eb],0x87
  4098f3:	mov    ss,WORD PTR [ecx+0x1fc78084]
  4098f9:	jg     0x40996e
  4098fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098fc:	push   ebp
  4098fd:	ss inc edi
  4098ff:	lahf   
  409900:	lods   al,BYTE PTR cs:[esi]
  409902:	cmc    
  409903:	mov    bh,0x9e
  409905:	sub    al,0xd0
  409907:	cli    
  409908:	loopne 0x409989
  40990a:	lods   eax,DWORD PTR ds:[esi]
  40990b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40990c:	inc    edi
  40990d:	inc    esp
  40990e:	jl     0x4098fc
  409910:	sti    
  409911:	outs   dx,DWORD PTR ds:[esi]
  409912:	mov    WORD PTR [edi-0x67],cs
  409915:	ret    
  409916:	test   al,0x1
  409918:	pop    ebp
  409919:	int3   
  40991a:	push   ecx
  40991b:	or     al,0x7b
  40991d:	in     al,dx
  40991e:	fidivr WORD PTR [eax+0x2e]
  409921:	pop    edx
  409922:	shl    BYTE PTR [ecx],cl
  409924:	adc    DWORD PTR [esp+ecx*8],eax
  409927:	xchg   DWORD PTR [eax+eiz*4+0x6a],edi
  40992b:	push   ss
  40992c:	cmp    eax,0xd84871b9
  409931:	inc    esi
  409932:	push   0x7f
  409934:	and    bl,ah
  409936:	loop   0x40992c
  409938:	fisub  WORD PTR [ebp+0x5182344]
  40993e:	sbb    eax,0x36304c7d
  409943:	pop    es
  409944:	sbb    eax,0x177ddcbd
  409949:	je     0x409921
  40994b:	pop    edx
  40994c:	inc    ebp
  40994d:	jge    0x409954
  40994f:	mov    ch,0x52
  409951:	inc    edx
  409952:	and    dl,0x8d
  409955:	xchg   ebx,eax
  409956:	pop    bx
  409958:	jnp    0x4099c2
  40995a:	xlat   BYTE PTR ds:[ebx]
  40995b:	test   BYTE PTR [ebx],dh
  40995d:	hlt    
  40995e:	sahf   
  40995f:	push   esi
  409960:	ret    0xc99b
  409963:	cmp    al,0x2c
  409965:	inc    esp
  409966:	cmp    bh,BYTE PTR [eax+0x66]
  409969:	push   esp
  40996a:	xchg   ecx,eax
  40996b:	dec    eax
  40996c:	xchg   edi,eax
  40996d:	cdq    
  40996e:	jne    0x40990f
  409970:	stc    
  409971:	push   ebp
  409972:	retw   0xcad9
  409976:	cli    
  409977:	push   ecx
  409978:	mov    dl,0x5d
  40997a:	inc    ebp
  40997b:	lahf   
  40997c:	jns    0x409940
  40997e:	xchg   edx,eax
  40997f:	add    eax,0x1a5d4ba3
  409984:	leave  
  409985:	popf   
  409986:	jle    0x409a01
  409988:	adc    al,0x44
  40998a:	jmp    DWORD PTR [eax-0x75]
  40998d:	imul   ebp,DWORD PTR [ecx],0x5b
  409990:	shr    DWORD PTR [eax],cl
  409992:	inc    esi
  409993:	jmp    0x7ce80d38
  409998:	mov    dh,0x61
  40999a:	sbb    ecx,DWORD PTR [ebx+0x7873ebea]
  4099a0:	retf   0x6b87
  4099a3:	cli    
  4099a4:	mov    ds,WORD PTR [esi-0x22325ae2]
  4099aa:	jbe    0x4099cf
  4099ac:	sbb    bh,bl
  4099ae:	mov    cl,0x1e
  4099b0:	test   BYTE PTR [ebp+0x69cd8c6d],0xeb
  4099b7:	xchg   edx,eax
  4099b8:	(bad)  
  4099b9:	mov    al,0x3c
  4099bb:	in     al,dx
  4099bc:	mov    edx,0xee23a7e6
  4099c1:	pop    ebp
  4099c2:	dec    ebp
  4099c3:	mov    ebx,0xb4115742
  4099c8:	enter  0x5fbf,0xa4
  4099cc:	cmp    ch,BYTE PTR ds:0xfb6a2b31
  4099d2:	loopne 0x4099d5
  4099d4:	push   edi
  4099d5:	and    bh,BYTE PTR [ebx-0x2f]
  4099d8:	enter  0x338e,0x66
  4099dc:	pop    ebx
  4099dd:	loope  0x409996
  4099df:	add    eax,0xe1c3bbfc
  4099e4:	mov    dl,0x6b
  4099e6:	test   DWORD PTR [edx],esp
  4099e8:	loop   0x409a4a
  4099ea:	xchg   ebp,eax
  4099eb:	cli    
  4099ec:	nop
  4099ed:	xchg   esp,eax
  4099ee:	sbb    DWORD PTR [edx+0x66539849],0xd8df1611
  4099f8:	dec    edx
  4099f9:	fistp  WORD PTR [ebp-0xa44394b]
  4099ff:	clc    
  409a00:	rcl    ebp,1
  409a02:	aad    0xa2
  409a04:	retf   
  409a05:	or     al,0x17
  409a07:	or     BYTE PTR [edx-0x4b187a2b],dh
  409a0d:	cmp    dh,BYTE PTR [edx+0x7ba621f9]
  409a13:	hlt    
  409a14:	pop    eax
  409a15:	sar    edx,1
  409a17:	out    dx,al
  409a18:	mov    edx,0x5d8627e5
  409a1d:	mov    esp,0x63b975b7
  409a22:	repnz lds ecx,FWORD PTR [edi-0x5e]
  409a26:	retf   0xb42f
  409a29:	inc    esp
  409a2a:	xchg   ebp,eax
  409a2b:	ja     0x4099f0
  409a2d:	jo     0x409aac
  409a2f:	dec    eax
  409a30:	pop    edi
  409a31:	fmul   DWORD PTR [esi+edx*2]
  409a34:	or     al,0xc0
  409a36:	mov    ds,WORD PTR [edi-0x2c]
  409a39:	rol    edx,cl
  409a3b:	xor    BYTE PTR [edi+0xf3fa9f3],dl
  409a41:	shr    DWORD PTR [esp+ebp*8-0x30],0xf8
  409a46:	pop    edx
  409a47:	pop    es
  409a48:	cs ret 
  409a4a:	and    ch,BYTE PTR [edx-0x4302783d]
  409a50:	test   eax,0x6f01cf25
  409a55:	popa   
  409a56:	loop   0x409a67
  409a58:	out    0xc1,al
  409a5a:	out    dx,eax
  409a5b:	out    0xc6,al
  409a5d:	neg    esi
  409a5f:	mov    dl,BYTE PTR [esp+eax*1]
  409a62:	cld    
  409a63:	sub    al,0x45
  409a65:	fnstsw WORD PTR [ebx+eax*4]
  409a68:	mov    bh,BYTE PTR [esi+0x67c4e609]
  409a6e:	and    bh,BYTE PTR [edx+0x4e]
  409a71:	cmp    al,0x78
  409a73:	test   edx,edi
  409a75:	ret    0xcfd2
  409a78:	adc    al,0xc9
  409a7a:	sub    eax,0xecddbc95
  409a7f:	icebp  
  409a80:	mov    edx,0x7315330c
  409a85:	pop    ds
  409a86:	loope  0x409b04
  409a88:	mov    fs,WORD PTR [edx]
  409a8a:	sub    edx,DWORD PTR [esi-0x30]
  409a8d:	jno    0x409a4e
  409a8f:	outs   dx,DWORD PTR ds:[esi]
  409a90:	repz cmp DWORD PTR [ebp+edi*1-0x60078c33],esi
  409a98:	in     al,0x76
  409a9a:	xor    dx,0x9389
  409a9f:	or     BYTE PTR [edi],ah
  409aa1:	imul   edi,DWORD PTR ds:0xe0e18a78,0x4837d0b3
  409aab:	adc    DWORD PTR [eax],edi
  409aad:	push   esp
  409aae:	rcl    DWORD PTR [eax-0x54],cl
  409ab1:	popa   
  409ab2:	cmp    edi,DWORD PTR [ecx+edx*1-0x44]
  409ab6:	pop    edx
  409ab7:	in     al,0xfc
  409ab9:	mov    ds:0x974d90e7,al
  409abe:	out    0xd4,al
  409ac0:	push   esp
  409ac1:	or     eax,0x32617599
  409ac6:	xchg   ebp,eax
  409ac7:	mov    esp,DWORD PTR [esi+eax*1]
  409aca:	fmul   QWORD PTR [edx+0x1e]
  409acd:	ins    BYTE PTR es:[edi],dx
  409ace:	int    0x84
  409ad0:	jnp    0x409ab1
  409ad2:	pop    es
  409ad3:	call   0xd8e9efd3
  409ad8:	mov    ecx,edi
  409ada:	cmp    eax,0xdf8d3eac
  409adf:	ds fsubrp st(4),st
  409ae2:	dec    ebp
  409ae3:	add    al,BYTE PTR [esi+0x33]
  409ae6:	stos   DWORD PTR es:[edi],eax
  409ae7:	outs   dx,BYTE PTR ds:[esi]
  409ae8:	push   0xe2d62b0f
  409aed:	mov    al,ds:0x5996d499
  409af2:	or     al,0xa6
  409af4:	arpl   bx,sp
  409af6:	fldcw  WORD PTR [edx+0x47]
  409af9:	mov    ecx,0x7e662bd4
  409afe:	add    dh,bl
  409b00:	rcr    cl,cl
  409b02:	add    al,0xd3
  409b04:	xchg   DWORD PTR [edi],eax
  409b06:	scas   eax,DWORD PTR es:[edi]
  409b07:	ror    DWORD PTR [ebp+0x7ce11a24],1
  409b0d:	mov    edx,0x744556a7
  409b12:	sbb    eax,0xdabd6c4
  409b17:	adc    DWORD PTR ds:0x5d990bfe,ebp
  409b1d:	aaa    
  409b1e:	aaa    
  409b1f:	sbb    bh,al
  409b21:	push   edx
  409b22:	pop    edx
  409b23:	mov    ch,0xbb
  409b25:	push   0x702482c7
  409b2a:	mov    cl,cl
  409b2c:	dec    esi
  409b2d:	sbb    bl,al
  409b2f:	stos   BYTE PTR es:[edi],al
  409b30:	mov    ds:0x4e7c14c2,al
  409b35:	pushf  
  409b36:	push   ebp
  409b37:	pushf  
  409b38:	mov    DWORD PTR [edi+0x75cdc0f9],ebp
  409b3e:	dec    edi
  409b3f:	or     eax,0x9a9b3b9
  409b44:	push   ecx
  409b45:	pop    edi
  409b46:	jl     0x409ad2
  409b48:	mov    ebx,0x1fa56847
  409b4d:	cmc    
  409b4e:	js     0x409b37
  409b50:	in     al,dx
  409b51:	or     BYTE PTR [esp+edi*4-0x2d4c8dd5],bh
  409b58:	jmp    0xb48b:0x8bb7a51d
  409b5f:	adc    eax,0xf7fe1e0d
  409b64:	mov    al,0xaa
  409b66:	push   ecx
  409b67:	mov    eax,0xd0c20f11
  409b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b6d:	lds    ecx,FWORD PTR [ecx-0x69cbc484]
  409b73:	pushf  
  409b74:	jge    0x409bec
  409b76:	xchg   BYTE PTR [esi+edx*8],bl
  409b79:	frstor [bx-0x6d]
  409b7d:	iret   
  409b7e:	mov    al,ds:0x59d790a1
  409b83:	ds fs jle 0x409be7
  409b87:	fdiv   st(0),st
  409b89:	dec    eax
  409b8a:	aam    0xc0
  409b8c:	shr    BYTE PTR [edi],cl
  409b8e:	xor    BYTE PTR [esi+ecx*2],dh
  409b91:	jns    0x409b8a
  409b93:	inc    esi
  409b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b95:	test   al,0xb1
  409b97:	sbb    BYTE PTR [edx+0x2b],bh
  409b9a:	jnp    0x409b54
  409b9c:	sti    
  409b9d:	mov    edx,0x1c1172c6
  409ba2:	pop    ecx
  409ba3:	and    ebx,DWORD PTR [ecx+0x45923941]
  409ba9:	ja     0x409b36
  409bab:	call   0x54b03f8e
  409bb0:	mov    esp,0x8cf9f8aa
  409bb5:	ja     0x409b71
  409bb7:	mov    ah,0xd4
  409bb9:	add    eax,0x22d97867
  409bbe:	retf   
  409bbf:	ins    BYTE PTR es:[edi],dx
  409bc0:	(bad)  
  409bc1:	jae    0x409b47
  409bc3:	retf   0x79ad
  409bc6:	xchg   DWORD PTR [eax],esp
  409bc8:	add    al,0xe5
  409bca:	sub    bh,BYTE PTR [eax-0x37]
  409bcd:	jmp    DWORD PTR [ebx]
  409bcf:	arpl   WORD PTR [esi-0x78bb70fd],di
  409bd5:	imul   ecx,ecx,0x5b6053e4
  409bdb:	mov    edx,0x81cfd395
  409be0:	pop    ebx
  409be1:	jns    0x409b99
  409be3:	xor    edi,0xd7f6e818
  409be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bea:	push   edi
  409beb:	cmp    eax,0x38afee7e
  409bf0:	sti    
  409bf1:	dec    edi
  409bf2:	or     dh,0x4c
  409bf5:	xor    al,0x39
  409bf7:	stc    
  409bf8:	ret    
  409bf9:	jle    0x409c5c
  409bfb:	adc    BYTE PTR [ebp+0x43],dl
  409bfe:	jl     0x409c26
  409c00:	jl     0x409c20
  409c02:	mov    bl,0x3
  409c04:	fnstcw WORD PTR [edi-0x4d]
  409c07:	mov    eax,0xa09b61f8
  409c0c:	mov    WORD PTR [ecx-0x7a],cs
  409c0f:	add    edx,DWORD PTR [edx-0x50e571cd]
  409c15:	mov    esp,0x4f7d297e
  409c1a:	ds inc ebp
  409c1c:	xchg   ecx,eax
  409c1d:	mov    cl,0x41
  409c1f:	sbb    cl,BYTE PTR [edx]
  409c21:	loope  0x409bef
  409c23:	push   0x7b
  409c25:	push   0x18aec6ab
  409c2a:	div    BYTE PTR [edi]
  409c2c:	in     al,dx
  409c2d:	mov    esi,DWORD PTR [esi-0x10]
  409c30:	sub    ebp,eax
  409c32:	cmc    
  409c33:	sahf   
  409c34:	test   al,0x72
  409c36:	dec    esp
  409c37:	pop    ss
  409c38:	push   ss
  409c39:	sub    edx,DWORD PTR [ebx-0x6]
  409c3c:	jle    0x409c63
  409c3e:	in     eax,dx
  409c3f:	jle    0x409bff
  409c41:	inc    esp
  409c42:	xor    dh,BYTE PTR [ebp-0x33349898]
  409c48:	inc    edx
  409c49:	lods   eax,DWORD PTR ds:[esi]
  409c4a:	and    DWORD PTR [eax+edx*1],ecx
  409c4d:	sbb    al,0xdb
  409c4f:	jb     0x409c85
  409c51:	add    DWORD PTR [eax],edi
  409c53:	out    0x78,eax
  409c55:	leave  
  409c56:	fwait
  409c57:	mov    ds:0xfa630590,al
  409c5c:	cmp    BYTE PTR [esp+esi*1],bh
  409c5f:	mov    eax,ds:0xe7093240
  409c64:	xor    dh,BYTE PTR [esi-0x7a]
  409c67:	daa    
  409c68:	aaa    
  409c69:	xchg   esi,eax
  409c6a:	mov    al,0x76
  409c6c:	jmp    0x32f:0xe76c1bff
  409c73:	inc    esi
  409c74:	jg     0x409cd8
  409c76:	cmp    bh,BYTE PTR [ebp+0x8]
  409c79:	in     eax,dx
  409c7a:	cmp    esp,DWORD PTR [ecx]
  409c7c:	inc    edx
  409c7d:	mov    ch,0xdf
  409c7f:	iret   
  409c80:	ds mov edi,gs
  409c83:	cmp    bh,BYTE PTR [ecx+ebp*4]
  409c86:	mov    edi,0xe3aa323e
  409c8b:	mov    ds:0x12fbc994,eax
  409c90:	imul   ecx,DWORD PTR [esi+0x3fdf7111],0x2
  409c97:	xor    edx,0xa09540d3
  409c9d:	(bad)  
  409c9e:	loop   0x409d08
  409ca0:	and    al,0x24
  409ca2:	(bad)  
  409ca3:	cmc    
  409ca4:	xchg   ebp,eax
  409ca5:	mov    WORD PTR [ebx+0x0],?
  409ca8:	in     eax,dx
  409ca9:	sub    dl,BYTE PTR [esi+0x6a]
  409cac:	loop   0x409c83
  409cae:	std    
  409caf:	pop    ss
  409cb0:	imul   ebp,edi,0xffffffc2
  409cb3:	and    eax,0x5193f1c
  409cb8:	and    DWORD PTR [eax],eax
  409cba:	add    eax,0x7d7fc6e9
  409cbf:	pop    eax
  409cc0:	stos   DWORD PTR es:[edi],eax
  409cc1:	lea    ecx,[ebx+0x59d4369c]
  409cc7:	(bad)  
  409cc9:	cs sbb al,0xab
  409ccc:	adc    eax,0x9f787c57
  409cd1:	xchg   ecx,eax
  409cd2:	push   ss
  409cd3:	xchg   BYTE PTR [ebx+0x35],bh
  409cd6:	call   0xa5809032
  409cdb:	jne    0x409c7c
  409cdd:	sub    bh,ch
  409cdf:	sub    edi,DWORD PTR [ebx-0x470047cc]
  409ce5:	mov    al,0xce
  409ce7:	setle  BYTE PTR [esi]
  409cea:	mov    edi,0x39db25f2
  409cef:	sub    DWORD PTR [ebp+0x57395ecc],0xffffffbf
  409cf6:	sbb    ebx,DWORD PTR [edi+0x27]
  409cf9:	bound  ebp,QWORD PTR ds:0xe0bad1ff
  409cff:	pop    ss
  409d00:	lods   eax,DWORD PTR ds:[esi]
  409d01:	pushf  
  409d02:	or     eax,0x6aa4803f
  409d07:	outs   dx,DWORD PTR ds:[esi]
  409d08:	sub    eax,eax
  409d0a:	or     BYTE PTR [eax-0x1c9b3326],ah
  409d10:	cmp    DWORD PTR [edx],0x29
  409d13:	loope  0x409d16
  409d15:	inc    ebp
  409d16:	test   eax,0xfb5cc00c
  409d1b:	xchg   ebx,eax
  409d1c:	push   ss
  409d1d:	sar    BYTE PTR [edx-0x50561b0],0x29
  409d24:	lds    ebx,FWORD PTR [edx-0x3c]
  409d27:	daa    
  409d28:	adc    al,0xdb
  409d2a:	(bad)  
  409d2b:	mov    esi,0xa67154f8
  409d30:	icebp  
  409d31:	add    bh,ch
  409d33:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  409d35:	ins    DWORD PTR es:[edi],dx
  409d36:	sub    al,0xc8
  409d38:	xor    ecx,DWORD PTR [eax+0x1a]
  409d3b:	shl    DWORD PTR [ecx],0x6a
  409d3e:	xor    DWORD PTR [eax-0x64],edi
  409d41:	sahf   
  409d42:	repz fiadd DWORD PTR [esi]
  409d45:	fwait
  409d46:	mov    dl,0x8b
  409d48:	lds    ebx,FWORD PTR [ecx-0x41]
  409d4b:	lods   al,BYTE PTR ds:[esi]
  409d4c:	repz push eax
  409d4e:	mov    ebp,0xeb85c381
  409d53:	sub    eax,0xd227c702
  409d58:	pop    edx
  409d59:	sbb    edx,DWORD PTR [esi+0x55c22be8]
  409d5f:	sbb    dl,dh
  409d61:	lods   eax,DWORD PTR ds:[esi]
  409d62:	fdecstp 
  409d64:	mov    ds:0x350da506,eax
  409d69:	test   BYTE PTR [edi+0x2c1d3b63],bl
  409d6f:	or     dh,BYTE PTR [eax-0x96aaaa6]
  409d75:	sub    esp,DWORD PTR [ecx]
  409d77:	xchg   ebp,eax
  409d78:	dec    ecx
  409d79:	and    al,0xb0
  409d7b:	clc    
  409d7c:	stos   DWORD PTR es:[edi],eax
  409d7d:	dec    edx
  409d7e:	or     ecx,0x1cdc3d14
  409d84:	mov    bh,0xce
  409d86:	push   ss
  409d87:	mov    esp,0x91f4278e
  409d8c:	aad    0xcc
  409d8e:	test   BYTE PTR [edx],bh
  409d90:	push   0x6a1737b0
  409d95:	cmp    BYTE PTR ss:[edi],bl
  409d98:	jnp    0x409dab
  409d9a:	mov    ds:0xe77a336c,eax
  409d9f:	imul   esi,DWORD PTR [ebx+0x56144718],0xffffffdf
  409da6:	push   ds
  409da7:	cmc    
  409da8:	(bad)  
  409da9:	outs   dx,BYTE PTR ds:[esi]
  409daa:	adc    BYTE PTR [eax-0x7bbcf4b9],dl
  409db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409db1:	data16 or ah,BYTE PTR [esi-0x35]
  409db5:	push   edx
  409db6:	mov    ds:0x90b7a106,al
  409dbb:	push   esp
  409dbc:	jns    0x409ddf
  409dbe:	addr16 dec ecx
  409dc0:	sub    esp,DWORD PTR [ebp+0xe]
  409dc3:	xlat   BYTE PTR ds:[ebx]
  409dc4:	inc    DWORD PTR [ecx+0x1fde7265]
  409dca:	sub    eax,ebx
  409dcc:	xlat   BYTE PTR ds:[ebx]
  409dcd:	mov    ds:0xc418f9a8,al
  409dd2:	or     al,0xca
  409dd4:	or     ebp,DWORD PTR [eax+0x7d]
  409dd7:	ds mov ebp,0xa29d9fa8
  409ddd:	jmp    FWORD PTR [edx+0x536fc029]
  409de3:	fist   DWORD PTR [esi]
  409de5:	fcomp  QWORD PTR [eax-0x3a41aeb0]
  409deb:	test   ebp,ebx
  409ded:	gs out 0x84,al
  409df0:	call   0x87d0dfde
  409df5:	pop    si
  409df7:	or     eax,0xcb748595
  409dfc:	ins    BYTE PTR es:[edi],dx
  409dfd:	iret   
  409dfe:	fiadd  DWORD PTR [esp+ebp*1-0x780adc2a]
  409e05:	push   ecx
  409e06:	(bad)  
  409e07:	aad    0x7a
  409e09:	mov    edx,0x97a04d97
  409e0e:	jmp    0xae98:0x2451623a
  409e15:	sbb    eax,0x3a45d228
  409e1a:	xchg   ecx,eax
  409e1b:	int3   
  409e1c:	aad    0x2c
  409e1e:	in     al,dx
  409e1f:	in     al,dx
  409e20:	jmp    0xddef:0xa34ffd52
  409e27:	push   ebp
  409e28:	mov    bh,0xa8
  409e2a:	mov    edx,?
  409e2c:	(bad)  
  409e2d:	mov    al,ds:0xd5c57559
  409e32:	les    edx,FWORD PTR [eax+0x6416eae7]
  409e38:	sbb    al,0x69
  409e3a:	or     ebp,DWORD PTR [eax]
  409e3c:	jl     0x409e48
  409e3e:	pop    ebx
  409e3f:	outs   dx,BYTE PTR ds:[esi]
  409e40:	pop    esp
  409e41:	out    0x5d,eax
  409e43:	test   BYTE PTR [esi-0x47],ch
  409e46:	addr16 and al,0x28
  409e49:	jl     0x409ead
  409e4b:	push   edx
  409e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e4d:	jecxz  0x409dd1
  409e4f:	jge    0x409e4c
  409e51:	push   ss
  409e52:	shr    DWORD PTR [ebp-0x57],cl
  409e55:	ds jb  0x409ead
  409e58:	jo     0x409ed9
  409e5a:	js     0x409e91
  409e5c:	aam    0x64
  409e5e:	xchg   BYTE PTR [esi],ch
  409e60:	dec    eax
  409e61:	in     al,0x79
  409e63:	push   es
  409e64:	xlat   BYTE PTR ds:[ebx]
  409e65:	aas    
  409e66:	mov    ds:0xfc4d4012,eax
  409e6b:	iret   
  409e6c:	ins    BYTE PTR es:[edi],dx
  409e6d:	sub    eax,0x376c6b6
  409e72:	sub    DWORD PTR [ecx],eax
  409e74:	aaa    
  409e75:	test   eax,0x2b4f254
  409e7b:	mov    esi,0xf511222c
  409e80:	and    BYTE PTR [esp+ebx*4],ch
  409e83:	fisub  DWORD PTR [ecx]
  409e85:	cmp    eax,0x702ccc53
  409e8a:	retf   
  409e8b:	inc    ebx
  409e8c:	dec    esi
  409e8d:	div    DWORD PTR [ebp+ebp*8+0x19]
  409e91:	dec    ecx
  409e92:	sub    eax,eax
  409e94:	dec    ebx
  409e95:	xchg   edi,eax
  409e96:	idiv   DWORD PTR [eax]
  409e98:	mov    ch,0xfa
  409e9a:	add    esi,DWORD PTR [edi]
  409e9c:	ins    BYTE PTR es:[edi],dx
  409e9d:	sbb    eax,0x23b35855
  409ea2:	add    al,0xed
  409ea4:	les    ecx,FWORD PTR [edi+0x69c5e347]
  409eaa:	push   es
  409eab:	push   edx
  409eac:	ret    0x7740
  409eaf:	ret    
  409eb0:	jb     0x409eab
  409eb2:	std    
  409eb3:	xchg   ebp,eax
  409eb4:	sbb    al,0x9c
  409eb6:	pop    ss
  409eb7:	adc    ah,dh
  409eb9:	js     0x409ea3
  409ebb:	mov    edi,0x8d84622e
  409ec0:	test   DWORD PTR [edi+0x4],esp
  409ec3:	pop    ds
  409ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec5:	fs jno 0x409eb3
  409ec8:	dec    esp
  409ec9:	aaa    
  409eca:	jle    0x409ee2
  409ecc:	adc    BYTE PTR [esi+0xa],0x75
  409ed0:	dec    edi
  409ed1:	ror    BYTE PTR [eax+0x75c90084],1
  409ed7:	aaa    
  409ed8:	gs arpl bp,cx
  409edb:	pusha  
  409edc:	dec    ecx
  409edd:	lock fsubr QWORD PTR [eax+0x4360dc55]
  409ee4:	mov    dl,0x9c
  409ee6:	out    0x91,eax
  409ee8:	mov    ds:0x3efc8b2a,eax
  409eed:	lods   eax,DWORD PTR ds:[esi]
  409eee:	cmp    eax,0xf594c65c
  409ef3:	mov    dh,0xf0
  409ef5:	fbstp  TBYTE PTR [esi]
  409ef7:	push   0xffffffef
  409ef9:	idiv   BYTE PTR [eax+0x26]
  409efc:	push   esi
  409efd:	pop    edi
  409efe:	call   0xb7743145
  409f03:	sbb    di,WORD PTR [ecx+0x60740759]
  409f0a:	pop    edx
  409f0b:	neg    DWORD PTR [esi]
  409f0d:	clc    
  409f0e:	pop    ebp
  409f0f:	fild   QWORD PTR [ecx+0x4f5d1b00]
  409f15:	daa    
  409f16:	adc    eax,0x31133151
  409f1b:	mov    DWORD PTR [eax+0x390bb183],0xc0b615d1
  409f25:	mov    bl,BYTE PTR [eax+edx*4]
  409f28:	hlt    
  409f29:	push   edi
  409f2a:	xor    bh,ah
  409f2c:	dec    eax
  409f2d:	scas   al,BYTE PTR es:[edi]
  409f2e:	in     al,0x31
  409f30:	dec    eax
  409f31:	fst    DWORD PTR gs:0x79c47c54
  409f38:	dec    eax
  409f39:	mov    BYTE PTR [ebp-0x7e],cl
  409f3c:	cmp    eax,DWORD PTR [edi]
  409f3e:	pop    es
  409f3f:	sbb    BYTE PTR [edx],cl
  409f41:	fild   DWORD PTR [esi+esi*8]
  409f44:	and    DWORD PTR [edi],eax
  409f46:	int    0xab
  409f48:	js     0x409fc6
  409f4a:	xor    cl,0x82
  409f4d:	mov    bl,0xb5
  409f4f:	loopne 0x409f1c
  409f51:	ins    DWORD PTR es:[edi],dx
  409f52:	call   0x33b57139
  409f57:	add    eax,0xd49697d8
  409f5c:	dec    edx
  409f5d:	mov    BYTE PTR [esi+0x24c2e40d],dl
  409f63:	fs es push 0x288c10a4
  409f6a:	(bad)  
  409f6b:	mov    dl,0xa8
  409f6d:	in     al,dx
  409f6e:	xlat   BYTE PTR ds:[ebx]
  409f6f:	and    eax,0x70add30
  409f74:	pusha  
  409f75:	les    edi,FWORD PTR [ebp-0x53]
  409f78:	out    0xf8,al
  409f7a:	int3   
  409f7b:	xchg   DWORD PTR [ebx+0x23],esp
  409f7e:	les    edx,FWORD PTR [ecx]
  409f80:	icebp  
  409f81:	out    0x1c,al
  409f83:	(bad)  
  409f84:	adc    eax,0x6239854c
  409f89:	and    DWORD PTR [edx-0x5d],ebp
  409f8c:	and    edi,0xb4e843f6
  409f92:	arpl   bx,si
  409f94:	je     0x409f66
  409f96:	fwait
  409f97:	xchg   esp,eax
  409f98:	fisub  DWORD PTR [edx+ecx*2]
  409f9b:	dec    ecx
  409f9c:	int3   
  409f9d:	out    dx,al
  409f9e:	sbb    ebp,DWORD PTR [eax]
  409fa0:	inc    edi
  409fa1:	pop    ecx
  409fa2:	sbb    al,0xd2
  409fa4:	xor    bl,BYTE PTR ds:0xa826ad9d
  409faa:	lds    ecx,FWORD PTR es:[eax-0x5a17cd69]
  409fb1:	dec    esi
  409fb2:	jo     0x409fb5
  409fb4:	retf   
  409fb5:	lods   al,BYTE PTR ds:[esi]
  409fb6:	mov    ch,0xd5
  409fb8:	or     eax,0x8ef9cd2b
  409fbd:	adc    eax,0x33d6da9a
  409fc2:	pop    esp
  409fc3:	(bad)  
  409fc4:	and    edi,ebp
  409fc6:	jmp    0x5ab4:0xa3bd3f35
  409fcd:	(bad)  
  409fcf:	stos   BYTE PTR es:[edi],al
  409fd0:	inc    esi
  409fd1:	in     al,dx
  409fd2:	or     al,BYTE PTR [eax]
  409fd4:	ficomp WORD PTR [eax]
  409fd6:	push   ss
  409fd7:	shl    ecx,1
  409fd9:	ficom  DWORD PTR [esi-0x57]
  409fdc:	sbb    dl,BYTE PTR [eax-0x58]
  409fdf:	(bad)  
  409fe0:	add    ch,ah
  409fe2:	fdiv   DWORD PTR [ecx+eax*4+0x18]
  409fe6:	mov    ss,WORD PTR es:[esi-0x1c]
  409fea:	add    eax,0x6f245336
  409fef:	sbb    BYTE PTR [ebp+edi*2-0x1c],ah
  409ff3:	push   ebx
  409ff4:	mov    eax,0xe4804f80
  409ff9:	mov    WORD PTR [ecx-0x44],gs
  409ffc:	mov    al,ds:0x6553c4cd
  40a001:	adc    al,0x6a
  40a003:	cwde   
  40a004:	lahf   
  40a005:	cli    
  40a006:	dec    edx
  40a007:	push   esi
  40a008:	(bad)  
  40a009:	cld    
  40a00a:	nop
  40a00b:	jmp    0x550f7bbf
  40a010:	shl    BYTE PTR [eax],cl
  40a012:	arpl   WORD PTR [ecx],bp
  40a014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a015:	mov    ebx,0xb1689e7b
  40a01a:	cli    
  40a01b:	or     DWORD PTR [edi],ecx
  40a01d:	sbb    BYTE PTR [edi-0x2d],bh
  40a020:	stos   BYTE PTR es:[edi],al
  40a021:	cdq    
  40a022:	std    
  40a023:	retf   
  40a024:	(bad)  
  40a025:	and    al,0x41
  40a027:	mov    edi,0x3611bd1d
  40a02c:	xchg   ebx,eax
  40a02d:	xor    bh,BYTE PTR [edi+0x74fe0664]
  40a033:	mov    ah,0xd8
  40a035:	jns    0x40a072
  40a037:	enter  0x9310,0xd1
  40a03b:	add    cl,BYTE PTR [edx]
  40a03d:	mov    dh,0xc9
  40a03f:	sbb    BYTE PTR [edi+0xb],dl
  40a042:	pop    edi
  40a044:	mov    dh,0xba
  40a046:	shl    BYTE PTR [ecx-0x421f87c6],0x58
  40a04d:	outs   dx,DWORD PTR ds:[esi]
  40a04e:	in     eax,dx
  40a04f:	stos   DWORD PTR es:[edi],eax
  40a050:	ja     0x40a037
  40a052:	ins    DWORD PTR es:[edi],dx
  40a053:	sub    BYTE PTR [ecx-0x10],al
  40a056:	mov    eax,ds:0x65cd48c0
  40a05b:	push   0x37bd09ed
  40a060:	sbb    DWORD PTR [edi+0x6fd80238],0x90d9be21
  40a06a:	fwait
  40a06b:	mov    bl,0x4a
  40a06d:	sbb    ch,BYTE PTR [ebx]
  40a06f:	(bad)  
  40a070:	retf   
  40a071:	pop    edi
  40a072:	fnsave [edi]
  40a074:	retf   
  40a075:	in     eax,0xe0
  40a077:	and    eax,DWORD PTR [ecx+0x7948d0e9]
  40a07d:	mov    ds:0xd19c8011,al
  40a082:	rcr    ebp,0xca
  40a085:	dec    eax
  40a086:	enter  0xf1be,0x89
  40a08a:	cdq    
  40a08b:	push   0xffffff94
  40a08d:	scas   al,BYTE PTR es:[edi]
  40a08e:	dec    edi
  40a08f:	adc    ch,0x4a
  40a092:	add    eax,0x44a9726f
  40a097:	int3   
  40a098:	mov    bh,0x9f
  40a09a:	(bad)  
  40a09c:	test   eax,0xb40bded6
  40a0a1:	jle    0x40a090
  40a0a3:	dec    ebp
  40a0a4:	in     al,dx
  40a0a5:	push   0x58
  40a0a7:	test   al,0xb8
  40a0a9:	and    DWORD PTR [edi+0x4d463cc0],ebx
  40a0af:	mov    esi,0x549c7e78
  40a0b4:	pop    edi
  40a0b5:	jae    0x40a0e3
  40a0b7:	test   DWORD PTR [ecx+esi*8-0x54],esi
  40a0bb:	dec    edi
  40a0bc:	sbb    eax,0xb6a6b8c5
  40a0c1:	push   0x3220164a
  40a0c6:	mov    ah,0xbe
  40a0c8:	out    dx,al
  40a0c9:	adc    DWORD PTR [edx+ebx*4+0x73],ebx
  40a0cd:	fistp  DWORD PTR [ebp-0x238e7046]
  40a0d3:	(bad)  
  40a0d4:	jae    0x40a0ef
  40a0d6:	mov    esi,0xa7e1dd8b
  40a0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0dc:	popa   
  40a0dd:	and    dl,dh
  40a0df:	xor    esp,ebp
  40a0e1:	sbb    dh,BYTE PTR fs:[ebx+ebp*1-0x5f634784]
  40a0e9:	push   ecx
  40a0ea:	loope  0x40a107
  40a0ec:	not    DWORD PTR [ebp-0x61]
  40a0ef:	cld    
  40a0f0:	loopne 0x40a113
  40a0f2:	sub    esi,DWORD PTR es:[eax-0x6a]
  40a0f6:	push   0xfffffffd
  40a0f8:	loopne 0x40a0be
  40a0fa:	scas   eax,DWORD PTR es:[edi]
  40a0fb:	cwde   
  40a0fc:	mov    esi,0x6ca147d3
  40a101:	call   FWORD PTR [ecx+0x4ad3c18f]
  40a107:	xchg   ebp,eax
  40a108:	js     0x40a0d1
  40a10a:	jmp    0xc4ef:0x10b3e169
  40a111:	gs loopne 0x40a0f1
  40a114:	in     al,dx
  40a115:	js     0x40a09b
  40a117:	int3   
  40a118:	jp     0x40a0b8
  40a11a:	test   BYTE PTR es:[ebx-0x75],ah
  40a11e:	jle    0x40a18c
  40a120:	mov    WORD PTR [ebx-0x3d29dd32],gs
  40a126:	dec    ecx
  40a127:	dec    esi
  40a128:	jmp    DWORD PTR ds:0x58e72f30
  40a12e:	jne    0x40a144
  40a130:	leave  
  40a131:	inc    esi
  40a132:	fidivr WORD PTR [ecx+eax*1-0x7ba84c2e]
  40a139:	or     DWORD PTR [ecx+ebx*1+0x38],ecx
  40a13d:	jae    0x40a1ae
  40a13f:	idiv   BYTE PTR [ebx+0x6d]
  40a142:	mov    WORD PTR [edi-0x3db18bf1],cs
  40a148:	mov    edx,0x6c7f1a82
  40a14d:	out    dx,eax
  40a14e:	test   BYTE PTR ds:0x7ca99bcc,cl
  40a154:	pop    ebx
  40a155:	dec    eax
  40a156:	std    
  40a157:	out    0x2,eax
  40a159:	int    0xd5
  40a15b:	jae    0x40a0f5
  40a15d:	xchg   edi,eax
  40a15e:	or     edi,DWORD PTR [esi]
  40a160:	xor    DWORD PTR [ebp-0x38],esp
  40a163:	sti    
  40a164:	xor    DWORD PTR [edx-0x5],eax
  40a167:	hlt    
  40a168:	inc    ebp
  40a169:	cld    
  40a16a:	dec    ebp
  40a16b:	xor    bl,dh
  40a16d:	das    
  40a16e:	pop    esp
  40a16f:	and    edx,DWORD PTR [ebx+0x62d9adc3]
  40a175:	xchg   ecx,eax
  40a176:	xlat   BYTE PTR ds:[ebx]
  40a177:	mov    ch,0xc
  40a179:	xor    al,0x83
  40a17b:	xor    eax,ecx
  40a17d:	jb     0x40a1f5
  40a17f:	fs push 0x407eb371
  40a185:	cdq    
  40a186:	not    BYTE PTR [ebx-0x634b6087]
  40a18c:	sbb    ebx,DWORD PTR [edx+0x31871b7]
  40a192:	imul   eax,ebp,0xffffff97
  40a195:	icebp  
  40a196:	jg     0x40a162
  40a198:	mov    ebx,0xad563a4d
  40a19d:	sahf   
  40a19e:	out    dx,eax
  40a19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1a0:	cmp    cl,BYTE PTR [edi-0x5]
  40a1a3:	add    BYTE PTR [edx-0x8],dl
  40a1a6:	xchg   BYTE PTR [ecx],ch
  40a1a8:	and    BYTE PTR fs:[esi-0x1e2d7c10],ah
  40a1af:	pop    ebx
  40a1b0:	xor    BYTE PTR [ecx+0x313a830d],cl
  40a1b6:	ret    0x37dd
  40a1b9:	pop    ss
  40a1ba:	cmp    ecx,edx
  40a1bc:	pop    ebp
  40a1bd:	xor    BYTE PTR [edx+0x3aba1f9b],al
  40a1c3:	mov    ch,0x6c
  40a1c5:	ficomp DWORD PTR [esi-0x7a]
  40a1c8:	lahf   
  40a1c9:	daa    
  40a1ca:	jmp    0xa216:0xb164669f
  40a1d1:	push   ss
  40a1d2:	pop    es
  40a1d3:	in     al,0xfb
  40a1d5:	sbb    eax,0x1e2449a3
  40a1da:	inc    ebx
  40a1db:	pop    esi
  40a1dc:	gs jmp 0x413c:0xf8287a75
  40a1e4:	or     al,0x5b
  40a1e6:	xchg   DWORD PTR [ebp+0x4e520ce9],eax
  40a1ec:	pop    ebp
  40a1ed:	outs   dx,BYTE PTR ds:[esi]
  40a1ee:	sub    DWORD PTR [eax+eax*1],edx
  40a1f1:	inc    ecx
  40a1f2:	adc    al,0xc2
  40a1f4:	ds jp  0x40a240
  40a1f7:	sbb    dh,BYTE PTR [edx+0x4d10735d]
  40a1fd:	int    0xa5
  40a1ff:	or     ah,al
  40a201:	or     al,0x43
  40a203:	push   ebp
  40a204:	adc    edi,DWORD PTR [edi+0x20]
  40a207:	mov    dh,0x48
  40a209:	jle    0x40a1d2
  40a20b:	dec    ecx
  40a20c:	into   
  40a20d:	outs   dx,BYTE PTR ds:[esi]
  40a20e:	inc    edi
  40a20f:	xor    DWORD PTR [edi],ebx
  40a211:	cmp    edi,DWORD PTR [ecx+0x1091c1d2]
  40a217:	and    BYTE PTR [eax],bl
  40a219:	cmp    al,0x3
  40a21b:	xchg   DWORD PTR [edx+esi*8+0x7cd42cc6],ecx
  40a222:	cmp    ebx,DWORD PTR [eax-0x3d]
  40a225:	xor    cl,bl
  40a227:	jmp    0x40a1ae
  40a229:	push   ss
  40a22a:	sub    al,BYTE PTR [ebx+0x7e0aa074]
  40a230:	add    DWORD PTR [edx+0x7abf41b6],ebp
  40a236:	xor    eax,0x5e107b4
  40a23b:	sbb    ah,bh
  40a23d:	push   es
  40a23e:	xchg   esi,eax
  40a23f:	xchg   esp,ebp
  40a241:	inc    edx
  40a242:	jns    0x40a263
  40a244:	icebp  
  40a245:	bound  ebp,QWORD PTR [ecx]
  40a247:	ja     0x40a201
  40a249:	add    ecx,0x9f805f60
  40a24f:	cmp    al,0x21
  40a251:	popf   
  40a252:	or     ecx,eax
  40a254:	cmp    DWORD PTR [ecx+0x6b],eax
  40a257:	jbe    0x40a26d
  40a259:	mov    esi,0x6d143607
  40a25e:	test   BYTE PTR [esi-0x6c],dl
  40a261:	jg     0x40a2b8
  40a263:	or     BYTE PTR [esi-0x4c18bfa0],al
  40a269:	loope  0x40a2dd
  40a26b:	daa    
  40a26c:	jl     0x40a26b
  40a26e:	add    dl,cl
  40a270:	pop    edx
  40a271:	retf   0xa6b7
  40a274:	mov    esi,0x15e026d8
  40a279:	fsub   st(7),st
  40a27b:	in     eax,dx
  40a27c:	fucom  st(2)
  40a27e:	retf   
  40a27f:	loope  0x40a2c9
  40a281:	xor    bh,BYTE PTR ds:0x1869551b
  40a287:	mov    bh,0x41
  40a289:	(bad)  
  40a28a:	sbb    BYTE PTR ds:0x84d0f347,bl
  40a290:	inc    DWORD PTR [ebp+0x1]
  40a293:	mov    esp,0xea420f28
  40a298:	(bad)  
  40a299:	sub    eax,0xbdb50ca
  40a29e:	pop    esp
  40a29f:	repz jge 0x40a2a8
  40a2a2:	rcl    DWORD PTR [edx+ebp*4-0x23],1
  40a2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2a7:	cwde   
  40a2a8:	sbb    ebx,ecx
  40a2aa:	rol    DWORD PTR [ebx],1
  40a2ac:	aam    0xf4
  40a2ae:	popf   
  40a2af:	xchg   ecx,eax
  40a2b0:	test   eax,0x5ec262e
  40a2b5:	jbe    0xde137fa2
  40a2bb:	xor    BYTE PTR [edx],bl
  40a2bd:	jae    0x40a266
  40a2bf:	adc    DWORD PTR [eax-0x2747a7bb],edi
  40a2c5:	push   0xffffffd8
  40a2c7:	fcmovnbe st,st(7)
  40a2c9:	repnz mov edx,0xe51e154e
  40a2cf:	dec    esp
  40a2d0:	adc    edx,DWORD PTR [ecx-0x33]
  40a2d3:	mov    esp,0x5ace3ff2
  40a2d8:	sbb    DWORD PTR [edi-0x79],ecx
  40a2db:	xchg   ecx,eax
  40a2dc:	mov    BYTE PTR [eax+ebx*1],bl
  40a2df:	xchg   esp,eax
  40a2e0:	cmp    ah,BYTE PTR [esi+0x3d]
  40a2e3:	cmp    dh,dl
  40a2e5:	xchg   ecx,eax
  40a2e6:	in     eax,0x2c
  40a2e8:	stos   DWORD PTR es:[edi],eax
  40a2e9:	mov    edi,0x42338e0d
  40a2ee:	xchg   edi,eax
  40a2ef:	addr16 jge 0x40a32b
  40a2f2:	stos   DWORD PTR es:[edi],eax
  40a2f3:	mov    ecx,0x752a6784
  40a2f8:	popa   
  40a2f9:	jne    0x40a2c6
  40a2fb:	sbb    dl,BYTE PTR [ebp-0x42]
  40a2fe:	pop    es
  40a2ff:	in     eax,0xe
  40a301:	push   ebx
  40a302:	stc    
  40a303:	into   
  40a304:	lea    edx,[eax]
  40a306:	shr    BYTE PTR [esi-0x63d3d87b],cl
  40a30c:	or     BYTE PTR [ecx],cl
  40a30e:	adc    bh,BYTE PTR [ebp+0x0]
  40a311:	and    edx,edx
  40a313:	mov    ch,0xc8
  40a315:	in     al,0x18
  40a317:	sub    BYTE PTR cs:[eax-0x619ce700],ch
  40a31e:	dec    esi
  40a31f:	xchg   ecx,eax
  40a320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a321:	dec    ebx
  40a322:	add    BYTE PTR [ebx-0x1605e807],0x8f
  40a329:	inc    edx
  40a32a:	popa   
  40a32b:	inc    edx
  40a32c:	pop    ebp
  40a32e:	or     DWORD PTR [ecx+edx*4],edi
  40a331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a332:	fwait
  40a333:	jmp    0x40a399
  40a335:	add    eax,0x331b4fb5
  40a33a:	push   0x2e
  40a33c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a33d:	mov    dl,BYTE PTR [ebp+0x59]
  40a340:	mov    al,ds:0xe9c1b681
  40a345:	out    0x6d,eax
  40a347:	sub    al,BYTE PTR [esp+edi*1]
  40a34a:	add    edx,ebp
  40a34c:	push   ecx
  40a34d:	pop    esp
  40a34e:	push   esp
  40a350:	mov    eax,ds:0x3be5ce0f
  40a355:	loop   0x40a3cd
  40a357:	aas    
  40a358:	mov    edi,0x524a0afd
  40a35d:	pushf  
  40a35e:	and    ebp,DWORD PTR [eax+0x44]
  40a361:	lods   eax,DWORD PTR ds:[esi]
  40a362:	jl     0x40a39c
  40a364:	lods   al,BYTE PTR ds:[esi]
  40a365:	and    bl,BYTE PTR [ecx-0x2e]
  40a368:	cmp    dh,cl
  40a36a:	out    0x54,eax
  40a36c:	lods   al,BYTE PTR ds:[esi]
  40a36d:	mov    ?,WORD PTR [eax-0xc]
  40a370:	sub    ah,BYTE PTR [edx]
  40a372:	aaa    
  40a373:	and    ebp,DWORD PTR [ebx+0x3]
  40a376:	and    BYTE PTR [eax+0x4b],ch
  40a379:	mov    ds:0xeaaae46a,al
  40a37e:	mov    ch,0xf1
  40a380:	test   BYTE PTR [ebp+0x39fdf0c5],0x8e
  40a387:	std    
  40a388:	idiv   BYTE PTR [edi+0x1c]
  40a38b:	in     al,0xbf
  40a38d:	sub    BYTE PTR [eax-0x33],bh
  40a390:	aas    
  40a391:	imul   edi,DWORD PTR [ebp+0x60],0x4c3982d5
  40a398:	or     al,0xb1
  40a39a:	adc    BYTE PTR [ecx-0x7c],bh
  40a39d:	in     al,0x83
  40a39f:	dec    edi
  40a3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3a1:	inc    esi
  40a3a2:	fstp   QWORD PTR [edi]
  40a3a4:	jno    0x40a413
  40a3a6:	addr16 dec ecx
  40a3a8:	jmp    0xad3a:0xa16e421e
  40a3af:	jbe    0x40a40d
  40a3b1:	out    0xf6,al
  40a3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3b4:	imul   BYTE PTR [edi+0x70]
  40a3b7:	ficom  DWORD PTR [edx]
  40a3b9:	das    
  40a3ba:	scas   al,BYTE PTR es:[edi]
  40a3bb:	rcl    bh,cl
  40a3bd:	xchg   ebx,eax
  40a3be:	fwait
  40a3bf:	sbb    al,0xcf
  40a3c1:	adc    eax,0x35699232
  40a3c6:	cli    
  40a3c7:	outs   dx,DWORD PTR ds:[esi]
  40a3c8:	mov    WORD PTR [eax+0x1b],cs
  40a3cb:	mov    WORD PTR [esi+0x1c],gs
  40a3ce:	or     edx,DWORD PTR [eax]
  40a3d0:	es jne 0x40a384
  40a3d3:	cmp    al,0x1e
  40a3d5:	sbb    dl,BYTE PTR [esi-0x32]
  40a3d8:	jnp    0x40a42d
  40a3da:	cmp    DWORD PTR [eax+ebx*1+0x19],eax
  40a3de:	pop    ecx
  40a3df:	call   0xedfa493d
  40a3e4:	push   cs
  40a3e5:	sbb    eax,0x818b52e3
  40a3ea:	xchg   BYTE PTR [edi],dh
  40a3ec:	and    ah,BYTE PTR [esp+ebx*4]
  40a3ef:	inc    ecx
  40a3f0:	add    al,0xc5
  40a3f2:	aam    0xd9
  40a3f4:	sar    ebx,cl
  40a3f6:	std    
  40a3f7:	ret    0xb30d
  40a3fa:	dec    esp
  40a3fb:	jmp    FWORD PTR [edx-0x5e968e64]
  40a401:	(bad)  
  40a402:	pushf  
  40a403:	pusha  
  40a404:	or     cl,dl
  40a406:	dec    edx
  40a407:	test   edi,0x43f15c17
  40a40d:	mov    esi,0xb85e4d2
  40a412:	xchg   edi,eax
  40a413:	test   BYTE PTR [edi+0x6b36410f],dl
  40a419:	mov    eax,ds:0x24423e30
  40a41e:	js     0x40a3f5
  40a420:	loop   0x40a49c
  40a422:	(bad)  
  40a423:	ja     0x40a3d2
  40a425:	push   0x60
  40a427:	ret    0xc45a
  40a42a:	sahf   
  40a42b:	mov    eax,0x6082f657
  40a430:	(bad)  
  40a431:	pop    ebp
  40a432:	sub    eax,0xb3af6566
  40a437:	or     esi,DWORD PTR [ebx-0x41483fe8]
  40a43d:	cmp    BYTE PTR [ebx],ch
  40a43f:	gs sbb al,0x8b
  40a442:	outs   dx,DWORD PTR ds:[esi]
  40a443:	das    
  40a444:	jg     0x40a440
  40a446:	js     0x40a3e3
  40a448:	dec    esi
  40a449:	ret    0xdf87
  40a44c:	xor    DWORD PTR [ecx+0x5e],edx
  40a44f:	adc    BYTE PTR [ecx+0x17],dh
  40a452:	add    bl,cl
  40a454:	cld    
  40a455:	ret    0x793d
  40a458:	enter  0xf03d,0xeb
  40a45c:	inc    edi
  40a45d:	dec    esi
  40a45e:	mov    ecx,DWORD PTR [edi-0x72c2c964]
  40a464:	test   dl,ch
  40a466:	inc    eax
  40a467:	adc    edi,esp
  40a469:	push   esi
  40a46a:	imul   ah
  40a46c:	test   bl,ah
  40a46e:	pop    ebx
  40a46f:	mov    eax,0x40d1f2eb
  40a474:	ret    
  40a475:	xor    al,0xb8
  40a477:	add    al,BYTE PTR [edx+ebx*2]
  40a47a:	push   cs
  40a47b:	sub    eax,0xcbbb8af4
  40a480:	jbe    0x40a420
  40a482:	data16 sahf 
  40a484:	xor    eax,DWORD PTR [edx-0x4b3b9000]
  40a48a:	inc    ebx
  40a48b:	sub    al,0x9c
  40a48d:	mov    ah,0x5b
  40a48f:	push   es
  40a490:	mov    eax,ds:0xc74c9772
  40a495:	out    dx,eax
  40a496:	cmp    al,0xe1
  40a498:	(bad)  
  40a49a:	add    esp,ebx
  40a49c:	cli    
  40a49d:	push   esp
  40a49e:	mov    ecx,0xd5fd0cc5
  40a4a3:	inc    ecx
  40a4a4:	dec    esi
  40a4a5:	(bad)  
  40a4a6:	mov    ch,0xe1
  40a4a8:	loope  0x40a459
  40a4aa:	cmp    eax,0xe14f80f7
  40a4af:	mov    cs,WORD PTR ss:[ecx]
  40a4b2:	sti    
  40a4b3:	push   eax
  40a4b4:	mov    al,ds:0x10b78841
  40a4b9:	hlt    
  40a4ba:	test   eax,0x9c666755
  40a4bf:	pop    es
  40a4c0:	add    ebp,esi
  40a4c2:	push   edi
  40a4c3:	std    
  40a4c4:	lea    esp,[ebp-0x1d]
  40a4c7:	(bad)  
  40a4c8:	jle    0x40a530
  40a4ca:	ja     0x40a4d2
  40a4cc:	jecxz  0x40a4cf
  40a4ce:	(bad)  
  40a4d0:	pop    eax
  40a4d1:	mov    DWORD PTR [edi],eax
  40a4d3:	mov    bx,0x3339
  40a4d7:	out    dx,eax
  40a4d8:	jae    0x40a4a5
  40a4da:	xchg   ecx,eax
  40a4db:	adc    al,0xf7
  40a4dd:	dec    ebx
  40a4de:	mov    eax,0xedc1f987
  40a4e3:	dec    esp
  40a4e4:	(bad)
  40a4e8:	cmp    ebp,DWORD PTR [esi+ebp*8-0x1012afcf]
  40a4ef:	ret    0xecb8
  40a4f2:	mov    eax,ds:0x7b43b0d8
  40a4f7:	call   0xfe727192
  40a4fc:	cdq    
  40a4fd:	dec    ebx
  40a4fe:	shl    BYTE PTR [eax+eiz*4+0x3721f378],0xb
  40a506:	inc    esp
  40a507:	xchg   edi,eax
  40a508:	sbb    BYTE PTR ds:0x8d1d40bf,bl
  40a50e:	add    ebx,esp
  40a510:	repnz pop es
  40a512:	inc    ecx
  40a513:	mov    bh,0xda
  40a515:	fsubrp st(3),st
  40a517:	push   ss
  40a518:	adc    eax,0x3207bf95
  40a51d:	or     eax,0x50d12a18
  40a522:	xchg   edx,eax
  40a523:	add    eax,0xdbb37458
  40a528:	out    dx,eax
  40a529:	gs scas eax,DWORD PTR es:[edi]
  40a52b:	test   eax,ebp
  40a52d:	jns    0x40a53e
  40a52f:	in     al,0xf5
  40a531:	xor    ebp,DWORD PTR [ebx-0x4add088e]
  40a537:	out    0xf8,al
  40a539:	in     eax,0x25
  40a53b:	popa   
  40a53c:	shr    BYTE PTR [ecx-0x77],0x9f
  40a540:	loop   0x40a4cd
  40a542:	adc    BYTE PTR [edi+0x26],dl
  40a545:	ret    
  40a546:	iret   
  40a547:	sub    al,0xb8
  40a549:	in     eax,0xa1
  40a54b:	dec    esp
  40a54c:	sub    ecx,DWORD PTR [esi-0x733d9f5a]
  40a552:	and    ah,BYTE PTR [edx+ecx*2]
  40a555:	push   ss
  40a556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a557:	sahf   
  40a558:	out    0x5d,al
  40a55a:	dec    edi
  40a55b:	(bad)  
  40a55c:	xor    DWORD PTR [edi*1-0x735de6bb],edx
  40a563:	in     eax,dx
  40a564:	clc    
  40a565:	(bad)  
  40a566:	jmp    0x40a50a
  40a568:	mov    al,ds:0x9abfc6bb
  40a56d:	stc    
  40a56e:	sub    ebp,ebp
  40a570:	push   es
  40a571:	jl     0x40a5cf
  40a573:	out    dx,eax
  40a574:	and    ah,BYTE PTR [esp+ecx*8+0x43]
  40a578:	add    eax,0xe7f4cfaf
  40a57d:	(bad)  
  40a57e:	out    dx,eax
  40a57f:	clc    
  40a580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a581:	mov    edx,0x91245ecc
  40a586:	lock dec eax
  40a588:	rcl    al,1
  40a58a:	adc    BYTE PTR cs:[ebp+0x12],ch
  40a58e:	inc    ecx
  40a58f:	jl     0x40a52d
  40a591:	ja     0x40a5a7
  40a593:	inc    esi
  40a594:	and    edi,esi
  40a596:	dec    esp
  40a597:	dec    eax
  40a598:	loope  0x40a5a6
  40a59a:	scas   al,BYTE PTR es:[edi]
  40a59b:	mov    ds:0x6a906304,eax
  40a5a0:	mov    dh,0xb1
  40a5a2:	and    cl,dh
  40a5a4:	push   eax
  40a5a5:	shl    BYTE PTR [ecx+0x4c],cl
  40a5a8:	scas   eax,DWORD PTR es:[edi]
  40a5a9:	test   DWORD PTR [ecx],eax
  40a5ab:	out    dx,al
  40a5ac:	pushf  
  40a5ad:	test   al,0x4c
  40a5af:	cmc    
  40a5b0:	or     ch,dh
  40a5b2:	sub    eax,0x25bd0a4
  40a5b7:	jg     0x40a5f3
  40a5b9:	addr16 push 0xffffffcb
  40a5bc:	addr16 sahf 
  40a5be:	jo     0x40a5de
  40a5c0:	jns    0x40a5a6
  40a5c2:	jecxz  0x40a59f
  40a5c4:	movnti DWORD PTR [ecx+0x68f0d4b2],edx
  40a5cb:	les    ebp,FWORD PTR [esi+0x39f2df8c]
  40a5d1:	loop   0x40a5aa
  40a5d3:	bound  ebx,QWORD PTR [ebp+esi*8-0x63]
  40a5d7:	out    0xf2,al
  40a5d9:	adc    ah,al
  40a5db:	int3   
  40a5dc:	std    
  40a5dd:	pushf  
  40a5de:	pushf  
  40a5df:	aas    
  40a5e0:	and    eax,0xc76b57f4
  40a5e5:	loope  0x40a633
  40a5e7:	jbe    0x40a60e
  40a5e9:	mov    ds:0xfc573e5b,al
  40a5ee:	mov    ecx,0x426c351e
  40a5f3:	adc    al,0xc8
  40a5f5:	outs   dx,DWORD PTR ds:[esi]
  40a5f6:	jmp    0xe96bbc94
  40a5fb:	cmp    edx,DWORD PTR [eax]
  40a5fd:	cmp    DWORD PTR [eax-0x39c54ec6],0x626dfb95
  40a607:	mov    ah,0xd
  40a609:	pop    eax
  40a60a:	xchg   esi,eax
  40a60b:	(bad)  
  40a60c:	pop    ecx
  40a60d:	pop    edi
  40a60e:	ret    0x9af5
  40a611:	in     al,dx
  40a612:	add    ebx,DWORD PTR [edx-0x16dc3fa0]
  40a618:	out    dx,eax
  40a619:	das    
  40a61a:	pop    ds
  40a61b:	mov    bl,0xef
  40a61d:	je     0x40a5a2
  40a61f:	xor    ch,al
  40a621:	xchg   BYTE PTR [ecx],ah
  40a623:	jle    0x40a692
  40a625:	cs inc ebx
  40a627:	dec    ecx
  40a628:	jo     0x40a668
  40a62a:	(bad)  
  40a62b:	fcom   QWORD PTR [ebp-0x1f]
  40a62e:	xchg   edx,eax
  40a62f:	sar    DWORD PTR [edx],0xbe
  40a632:	fisttp WORD PTR [edi-0x14]
  40a635:	sti    
  40a636:	push   edi
  40a637:	cld    
  40a638:	adc    ch,BYTE PTR ds:0x72c633cb
  40a63e:	aad    0x89
  40a640:	xor    ah,cl
  40a642:	push   0xfffffffb
  40a644:	xor    BYTE PTR [ecx],0xb8
  40a647:	mov    edi,0x846a6f54
  40a64c:	jmp    FWORD PTR [ebp+0x480ee863]
  40a652:	push   eax
  40a653:	loope  0x40a5dd
  40a655:	push   es
  40a656:	pushf  
  40a657:	frstor [eax-0x53]
  40a65a:	test   DWORD PTR [edi],esp
  40a65c:	mov    ch,0x10
  40a65e:	xor    DWORD PTR [edx],0x54
  40a661:	test   dl,0x5
  40a664:	xor    eax,0xf47f23ad
  40a669:	mov    eax,ds:0xe7dc60f2
  40a66e:	fnsave [ecx-0x3b]
  40a671:	adc    DWORD PTR [edx+0x5e0c6e3c],edi
  40a677:	jmp    0xbc9a:0xcc6f2fcb
  40a67e:	dec    ebp
  40a67f:	shl    BYTE PTR [ebp+0x2d],cl
  40a682:	cmc    
  40a683:	xor    eax,0xea640849
  40a688:	lahf   
  40a689:	add    eax,DWORD PTR [eax]
  40a68b:	scas   eax,DWORD PTR es:[edi]
  40a68c:	outs   dx,DWORD PTR ds:[esi]
  40a68d:	mov    BYTE PTR [ebp-0x6a],dl
  40a690:	retf   
  40a691:	je     0x40a6bb
  40a693:	cmp    esp,DWORD PTR [eax-0x4e]
  40a696:	mov    esi,0x2ae7bf0b
  40a69b:	sbb    ecx,ecx
  40a69d:	les    eax,FWORD PTR [esi+0x7b4fc3b4]
  40a6a3:	sub    al,0x70
  40a6a5:	jge    0x40a64a
  40a6a7:	mov    edx,0x57acfdab
  40a6ac:	std    
  40a6ad:	or     dh,ah
  40a6af:	bound  ebp,QWORD PTR [edx+0x7a]
  40a6b2:	es mov ebx,0x10fa4a86
  40a6b8:	sub    bl,cl
  40a6ba:	sub    DWORD PTR [ebx-0x10362a73],eax
  40a6c0:	mov    eax,ds:0x87880108
  40a6c5:	cmp    eax,0xdfe63f0f
  40a6ca:	jge    0x40a746
  40a6cc:	sbb    DWORD PTR [eax],esi
  40a6ce:	xchg   BYTE PTR [eax+ebp*8-0x7eac292a],dl
  40a6d5:	adc    cl,BYTE PTR [esi+0x62]
  40a6d8:	xor    BYTE PTR [edx+0x7a71b4f],bl
  40a6de:	cmp    al,0x1f
  40a6e0:	sbb    BYTE PTR [ecx+0x7bbc69d2],dl
  40a6e6:	or     eax,0x131ad499
  40a6eb:	push   es
  40a6ec:	rcr    dh,0xde
  40a6ef:	pop    es
  40a6f0:	lods   eax,DWORD PTR ds:[esi]
  40a6f1:	mov    ds:0x55d99d45,al
  40a6f6:	push   ds
  40a6f7:	and    al,0xf
  40a6f9:	int3   
  40a6fa:	scas   eax,DWORD PTR es:[edi]
  40a6fb:	jmp    0x2abcca18
  40a700:	adc    cl,bl
  40a702:	stc    
  40a703:	loop   0x40a716
  40a705:	mov    bh,0x80
  40a707:	xchg   DWORD PTR [ecx+0x32a8e9e9],ecx
  40a70d:	xchg   esi,eax
  40a70e:	mov    eax,DWORD PTR [edx-0x3210c95f]
  40a714:	retf   
  40a715:	dec    edi
  40a716:	adc    eax,0xb001af70
  40a71b:	mov    edi,0x36953a0e
  40a720:	lods   al,BYTE PTR ds:[esi]
  40a721:	xchg   esp,eax
  40a722:	jbe    0x40a6ff
  40a724:	test   BYTE PTR [edx],ah
  40a726:	dec    eax
  40a727:	push   ebp
  40a728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a729:	(bad)  
  40a72a:	call   0xfa047201
  40a72f:	pop    esi
  40a730:	mov    dh,0xbb
  40a732:	test   al,0xff
  40a734:	ja     0x40a6bb
  40a736:	ss (bad) 
  40a738:	js     0x40a799
  40a73a:	add    DWORD PTR [edx],edx
  40a73c:	jl     0x40a777
  40a73e:	add    edi,DWORD PTR [ecx-0x11]
  40a741:	xlat   BYTE PTR ds:[ebx]
  40a742:	inc    esp
  40a743:	push   ebx
  40a744:	test   eax,0x23e78234
  40a749:	xor    al,0x5d
  40a74b:	cs pop esi
  40a74d:	and    DWORD PTR [eax-0x15997e7a],0x4a4391a9
  40a757:	fadd   QWORD PTR [ebx]
  40a759:	add    dl,BYTE PTR [eax-0x50db06b0]
  40a75f:	or     eax,0xb755fa12
  40a764:	test   DWORD PTR ds:0x8e562905,0x27b7e2fd
  40a76e:	cmp    BYTE PTR fs:[edi-0x3a83347a],al
  40a775:	mov    esp,ss
  40a777:	jb     0x40a7d8
  40a779:	sub    al,0x3
  40a77b:	and    dh,0x6a
  40a77e:	lock jecxz 0x40a727
  40a781:	dec    ebp
  40a782:	hlt    
  40a783:	mov    ebp,edi
  40a785:	sub    ecx,DWORD PTR [edx+0x6d]
  40a788:	shl    BYTE PTR [ebx-0x4599265a],1
  40a78e:	pusha  
  40a78f:	xor    bp,sp
  40a792:	out    0x7b,al
  40a794:	popa   
  40a795:	jno    0x40a723
  40a797:	test   DWORD PTR [edx],0x320d0cfe
  40a79d:	push   cs
  40a79e:	(bad)  
  40a79f:	into   
  40a7a0:	sbb    al,0x33
  40a7a2:	jns    0x40a7b0
  40a7a4:	jmp    0x5b48:0xab1c65a8
  40a7ab:	adc    cl,BYTE PTR [ebp+0x785469c5]
  40a7b1:	or     bh,dh
  40a7b3:	mov    al,bh
  40a7b5:	shr    DWORD PTR [esp+ebx*8+0x5d286acd],1
  40a7bc:	sub    ebx,DWORD PTR ds:[eax-0x50]
  40a7c0:	ss push ebp
  40a7c2:	xchg   DWORD PTR [edi-0x34e50bda],ebp
  40a7c8:	pop    esp
  40a7c9:	test   ch,al
  40a7cb:	mov    BYTE PTR [edi*2+0x7017d959],ch
  40a7d2:	addr16 clc 
  40a7d4:	jecxz  0x40a84f
  40a7d6:	retf   0x7326
  40a7d9:	pop    es
  40a7da:	sub    eax,0x9cee6e9b
  40a7df:	mov    edi,0xf642c9ef
  40a7e4:	in     al,0x98
  40a7e6:	xchg   ebp,eax
  40a7e7:	in     eax,0xac
  40a7e9:	retf   
  40a7ea:	mov    edx,DWORD PTR [edx-0x468d828a]
  40a7f0:	add    esi,esi
  40a7f2:	cs ds push 0x36e2b5ab
  40a7f9:	jmp    0x40a845
  40a7fb:	adc    cl,BYTE PTR [esi-0x7e]
  40a7fe:	pop    esi
  40a7ff:	popa   
  40a800:	or     bl,cl
  40a802:	inc    edi
  40a803:	outs   dx,BYTE PTR ds:[esi]
  40a804:	push   ds
  40a805:	sub    DWORD PTR [ebp-0x13030434],0xffffffa8
  40a80c:	pop    ds
  40a80d:	mov    dl,0xb
  40a80f:	in     eax,0xe4
  40a811:	je     0x40a7b1
  40a813:	loop   0x40a7d0
  40a815:	(bad)  
  40a816:	jl     0x40a7f8
  40a818:	mov    DWORD PTR [ebp-0x79],esp
  40a81b:	or     edi,DWORD PTR [esi]
  40a81d:	ss ret 
  40a81f:	pop    ss
  40a820:	lock fmul st,st(7)
  40a823:	jb     0x40a810
  40a825:	fnop   
  40a827:	(bad)  
  40a828:	dec    ebp
  40a829:	mov    al,0x31
  40a82b:	es lods eax,DWORD PTR gs:[esi]
  40a82e:	push   ecx
  40a82f:	aaa    
  40a830:	xchg   esi,eax
  40a831:	mov    bh,0xa3
  40a833:	in     al,dx
  40a834:	mov    dl,0xb7
  40a836:	add    DWORD PTR [edi-0x502bc834],edi
  40a83c:	call   0x138c89a8
  40a841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a842:	daa    
  40a843:	daa    
  40a844:	push   cs
  40a845:	stos   BYTE PTR es:[edi],al
  40a846:	int3   
  40a847:	ret    0x5cc1
  40a84a:	sahf   
  40a84b:	retf   
  40a84c:	mov    ?,WORD PTR [edi+0x641cf1f2]
  40a852:	pop    es
  40a853:	push   ecx
  40a854:	push   esi
  40a855:	cli    
  40a856:	and    BYTE PTR [esi+0x53],ch
  40a859:	jne    0x40a7e3
  40a85b:	mov    ecx,0xd7c735d4
  40a860:	aad    0xed
  40a862:	les    ebp,FWORD PTR [esp+eiz*2]
  40a865:	push   0x71
  40a867:	out    0xce,al
  40a869:	ret    0x954f
  40a86c:	add    al,0xec
  40a86e:	fwait
  40a86f:	aaa    
  40a870:	lock cmp bl,BYTE PTR [edi+0x462d64b5]
  40a877:	mov    ebp,0x877295a0
  40a87c:	or     al,al
  40a87e:	push   ebp
  40a87f:	aad    0x6f
  40a881:	xor    al,0x18
  40a883:	(bad)
  40a886:	pop    ebx
  40a887:	xor    BYTE PTR [ecx+ecx*2+0x5c4c2333],cl
  40a88e:	data16 adc BYTE PTR [ebx+0x44978e78],0x38
  40a896:	adc    al,0x85
  40a898:	cmp    dl,BYTE PTR [esp+ebp*4+0x55]
  40a89c:	pushf  
  40a89d:	push   esp
  40a89e:	jmp    0x755f:0x7def29db
  40a8a5:	xchg   ebx,eax
  40a8a6:	jb     0x40a8b9
  40a8a8:	jo     0x40a8ef
  40a8aa:	ja     0x40a8a1
  40a8ac:	mov    ch,0x74
  40a8ae:	lods   al,BYTE PTR ds:[esi]
  40a8af:	dec    eax
  40a8b0:	sub    ch,BYTE PTR [edx-0x68]
  40a8b3:	adc    al,0x21
  40a8b5:	mov    ebp,0xc2aadad0
  40a8ba:	pop    edi
  40a8bb:	inc    esp
  40a8bc:	xor    al,BYTE PTR ds:0x58bc41a8
  40a8c2:	sbb    eax,edi
  40a8c4:	leave  
  40a8c5:	pop    ebp
  40a8c6:	test   BYTE PTR [ebp-0x43942cd8],al
  40a8cc:	cmp    eax,0x3f417550
  40a8d1:	retf   0xd7e6
  40a8d4:	sar    BYTE PTR [ecx+0x53c753],cl
  40a8da:	iret   
  40a8db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8dc:	and    eax,0x9c8adaca
  40a8e1:	icebp  
  40a8e2:	lods   eax,DWORD PTR ds:[esi]
  40a8e3:	push   edx
  40a8e4:	shl    BYTE PTR [ecx],0x5e
  40a8e7:	mov    eax,0xcd59f9d3
  40a8ec:	dec    esi
  40a8ed:	hlt    
  40a8ee:	retf   0xf919
  40a8f1:	or     BYTE PTR [esi+ebx*2],ah
  40a8f4:	sbb    BYTE PTR ds:0x3e40e3bb,al
  40a8fa:	js     0x40a8e2
  40a8fc:	popf   
  40a8fd:	push   ss
  40a8fe:	and    al,0x2d
  40a900:	mov    ds:0x56397535,al
  40a905:	jae    0x40a8b4
  40a907:	jno    0x40a970
  40a909:	pusha  
  40a90a:	mov    dl,0x3a
  40a90c:	xchg   esp,eax
  40a90d:	mov    al,ds:0xef20a4cb
  40a912:	sti    
  40a913:	test   BYTE PTR [ebx-0x38],0xfb
  40a917:	push   edi
  40a918:	call   0xab41:0x5a8b8260
  40a91f:	les    edi,FWORD PTR ds:0x20a9d575
  40a925:	jb     0x40a8f2
  40a927:	mov    dh,0xaa
  40a929:	inc    eax
  40a92a:	retf   
  40a92b:	mov    ebx,0xce3675c5
  40a930:	cli    
  40a931:	add    bh,BYTE PTR [edi+0x39]
  40a934:	jns    0x40a8fa
  40a936:	dec    edx
  40a937:	(bad)  
  40a938:	push   edx
  40a939:	adc    ebp,DWORD PTR [edx]
  40a93b:	cld    
  40a93c:	retf   
  40a93d:	rcl    BYTE PTR [edx-0x6],0x39
  40a941:	mov    ecx,0xc93df83e
  40a946:	dec    eax
  40a947:	scas   eax,DWORD PTR es:[edi]
  40a948:	cmp    al,dl
  40a94a:	arpl   WORD PTR [eax+0x4bc7b808],cx
  40a950:	xchg   esi,eax
  40a951:	enter  0x702c,0xb2
  40a955:	in     eax,dx
  40a956:	push   cs
  40a957:	(bad)  
  40a958:	add    DWORD PTR [edx-0x73],0xe
  40a95c:	cmp    eax,0xa62d87e9
  40a961:	jg     0x40a948
  40a963:	push   es
  40a964:	cwde   
  40a965:	call   0xeb45716
  40a96a:	adc    BYTE PTR [edi-0x49],bh
  40a96d:	imul   edx,DWORD PTR [ebx+0xd],0x14
  40a971:	fld    TBYTE PTR [ebx-0xaa24b7b]
  40a977:	lds    esi,FWORD PTR [ecx]
  40a979:	mov    bh,0xd9
  40a97b:	cmp    eax,0xc3fffdc5
  40a980:	jae    0x40a9f8
  40a982:	in     al,dx
  40a983:	add    esi,DWORD PTR [edi]
  40a985:	jbe    0x40a9dd
  40a987:	mov    bl,0x43
  40a989:	cmp    ch,cl
  40a98b:	ja     0x40a92b
  40a98d:	mov    esi,0x6192aa20
  40a992:	mov    BYTE PTR [eax],cl
  40a994:	jmp    0xba244650
  40a999:	iret   
  40a99a:	add    edx,ecx
  40a99c:	sbb    al,0x55
  40a99e:	sub    edi,0xffffffb9
  40a9a1:	push   edi
  40a9a2:	cmp    eax,0x7c14e9b4
  40a9a7:	mov    al,0xb0
  40a9a9:	push   esp
  40a9aa:	aam    0x1b
  40a9ac:	push   ss
  40a9ad:	xchg   ecx,eax
  40a9ae:	push   ebx
  40a9af:	cdq    
  40a9b0:	inc    ebp
  40a9b1:	aad    0x58
  40a9b3:	pop    ss
  40a9b4:	adc    ebp,DWORD PTR [esi]
  40a9b6:	loop   0x40aa22
  40a9b8:	push   eax
  40a9b9:	push   eax
  40a9ba:	jg     0x40a9eb
  40a9bc:	inc    ebx
  40a9bd:	or     esi,DWORD PTR ds:0x515b5300
  40a9c3:	scas   al,BYTE PTR es:[edi]
  40a9c4:	iret   
  40a9c5:	ja     0x40a988
  40a9c7:	jae    0x40a95b
  40a9c9:	outs   dx,DWORD PTR ds:[esi]
  40a9ca:	outs   dx,DWORD PTR ds:[esi]
  40a9cb:	mov    esi,0xe11968ca
  40a9d0:	aaa    
  40a9d1:	cli    
  40a9d2:	inc    eax
  40a9d3:	mov    ch,0xdd
  40a9d5:	sbb    al,0xf0
  40a9d7:	xchg   esp,eax
  40a9d8:	adc    DWORD PTR [esi],0xe13143a9
  40a9de:	jbe    0x40a9a6
  40a9e0:	and    eax,DWORD PTR [esi-0x4eec91f1]
  40a9e6:	mov    esi,0xffc14e0c
  40a9eb:	in     eax,0x24
  40a9ed:	std    
  40a9ee:	stc    
  40a9ef:	jmp    0x7e6470d5
  40a9f4:	adc    al,0xc2
  40a9f6:	scas   al,BYTE PTR es:[edi]
  40a9f7:	out    dx,eax
  40a9f8:	xor    BYTE PTR [ecx+0x60],0x50
  40a9fc:	mov    eax,ds:0xfc7ac5ba
  40aa01:	push   edx
  40aa02:	sahf   
  40aa03:	cmp    esp,edi
  40aa05:	aad    0xa9
  40aa07:	test   BYTE PTR [ebx],cl
  40aa09:	pushf  
  40aa0a:	mov    al,ds:0x3cc15eca
  40aa0f:	jecxz  0x40aa2a
  40aa11:	pop    ds
  40aa12:	fisttp DWORD PTR [ecx]
  40aa14:	push   ebp
  40aa15:	inc    ecx
  40aa16:	ds pop ecx
  40aa18:	fild   DWORD PTR [ebp-0x26]
  40aa1b:	inc    edx
  40aa1c:	cmp    esp,ecx
  40aa1e:	clc    
  40aa1f:	xchg   ecx,eax
  40aa20:	aam    0x4e
  40aa22:	sub    DWORD PTR [edi-0x4071a555],esi
  40aa28:	sbb    BYTE PTR [eax-0x73],ah
  40aa2b:	test   al,0xe1
  40aa2d:	mov    al,BYTE PTR [edx-0x67]
  40aa30:	nop
  40aa31:	and    DWORD PTR [ecx],esi
  40aa33:	jmp    0x9b54:0xaeb3f135
  40aa3a:	aad    0x41
  40aa3c:	out    0x18,eax
  40aa3e:	push   ebx
  40aa3f:	jmp    DWORD PTR [ebx-0x5f96bee8]
  40aa45:	shr    DWORD PTR [edx+0x55],cl
  40aa48:	data16 mov WORD PTR [ebx+0x1e022848],ds
  40aa4f:	lds    ebp,FWORD PTR [edi+0x6995b31c]
  40aa55:	call   DWORD PTR [eax]
  40aa57:	mov    ds:0x637161b2,eax
  40aa5c:	mov    fs,WORD PTR [bx+di+0x7fd8]
  40aa61:	outs   dx,DWORD PTR ds:[esi]
  40aa62:	mov    ah,0x94
  40aa64:	and    edi,DWORD PTR [edx+0x3ee17dd9]
  40aa6a:	mov    ah,0xb1
  40aa6c:	idiv   BYTE PTR [esi+0x3f]
  40aa6f:	and    esi,DWORD PTR ds:[ebx+0x5b58d0b0]
  40aa76:	out    dx,al
  40aa77:	in     al,0x34
  40aa79:	fcom   DWORD PTR [ebp-0x19]
  40aa7c:	out    dx,al
  40aa7d:	mov    ch,0x98
  40aa7f:	cmp    DWORD PTR [eax+0x2f],esp
  40aa82:	scas   eax,DWORD PTR es:[edi]
  40aa83:	mov    bh,0x2c
  40aa85:	into   
  40aa86:	dec    ebp
  40aa87:	jg     0x40aa0a
  40aa89:	sbb    ebx,DWORD PTR [edx-0x45]
  40aa8c:	push   ecx
  40aa8d:	sbb    al,0x9c
  40aa8f:	ret    0x9b67
  40aa92:	mov    ch,0xba
  40aa94:	test   eax,0xf34fadc3
  40aa99:	dec    esi
  40aa9a:	rcl    DWORD PTR [esp+edx*4],cl
  40aa9d:	iret   
  40aa9e:	mov    al,0xbb
  40aaa0:	fadd   QWORD PTR [ebx]
  40aaa2:	jns    0x40ab02
  40aaa4:	std    
  40aaa5:	ss popf 
  40aaa7:	mov    esp,0xa02e385c
  40aaac:	add    BYTE PTR [esi+0x23cf8a32],dl
  40aab2:	sbb    al,0x8a
  40aab4:	cli    
  40aab5:	mov    al,0x32
  40aab7:	retf   
  40aab8:	mov    ecx,0xa5369633
  40aabd:	and    edx,edx
  40aabf:	pop    ss
  40aac0:	mov    ebx,0xdbdc2b1
  40aac5:	xchg   esi,eax
  40aac6:	adc    eax,0x183447d7
  40aacb:	repnz xchg esp,eax
  40aacd:	jmp    0x40aad2
  40aacf:	gs pop edi
  40aad1:	add    al,0x89
  40aad3:	(bad)  
  40aad4:	or     eax,0x1bf88cc7
  40aad9:	dec    ebx
  40aada:	dec    esp
  40aadb:	repnz dec ebp
  40aadd:	dec    ebx
  40aade:	push   ebx
  40aadf:	out    dx,al
  40aae0:	mov    ds:0xf91374dc,al
  40aae5:	retf   0xd3ac
  40aae8:	and    DWORD PTR [ebp-0x1a],edi
  40aaeb:	and    DWORD PTR [ecx+ebp*2+0x3f3f1547],0x9f61f527
  40aaf6:	fisttp QWORD PTR [edx]
  40aaf8:	adc    eax,ebx
  40aafa:	xchg   esi,eax
  40aafb:	out    0xae,eax
  40aafd:	daa    
  40aafe:	sbb    ecx,DWORD PTR [ebx-0x2a1e82f9]
  40ab04:	mov    al,0xbd
  40ab06:	icebp  
  40ab07:	cmp    dl,BYTE PTR [esi+0x21e8ab56]
  40ab0d:	push   cs
  40ab0e:	push   edi
  40ab0f:	sub    DWORD PTR [esi],0xffffff87
  40ab12:	test   eax,0x9d022dbb
  40ab17:	mov    ah,0x2a
  40ab19:	add    eax,0xbe612a9f
  40ab1e:	je     0x40aaf2
  40ab20:	mov    eax,0xea333b80
  40ab25:	mov    esi,DWORD PTR ss:[edx]
  40ab28:	jae    0x40ab21
  40ab2a:	dec    ebp
  40ab2b:	int3   
  40ab2c:	xchg   ecx,eax
  40ab2d:	cmc    
  40ab2e:	add    esi,ebp
  40ab30:	test   dl,ch
  40ab32:	(bad)  
  40ab33:	cmp    eax,0x3fea7679
  40ab38:	mov    esi,0xae6bbd0c
  40ab3d:	dec    edx
  40ab3e:	or     al,0x3c
  40ab40:	icebp  
  40ab41:	or     al,0x90
  40ab43:	add    al,0x95
  40ab45:	or     dh,BYTE PTR [ebx+0x29]
  40ab48:	aam    0xd2
  40ab4a:	sbb    ecx,edx
  40ab4c:	scas   al,BYTE PTR es:[edi]
  40ab4d:	rcr    ebx,cl
  40ab4f:	ds pusha 
  40ab51:	aas    
  40ab52:	and    al,0x16
  40ab54:	repnz or DWORD PTR [ecx-0x416c19d7],eax
  40ab5b:	outs   dx,DWORD PTR ds:[esi]
  40ab5c:	mov    edx,0xaa2bbf95
  40ab61:	and    al,0x27
  40ab63:	gs mov ch,0x8c
  40ab66:	pop    ss
  40ab67:	sbb    ah,BYTE PTR [eax-0x54]
  40ab6a:	(bad)  
  40ab6b:	push   ebx
  40ab6c:	and    BYTE PTR [edx+edi*1+0x6b],dl
  40ab70:	rcr    DWORD PTR [ecx-0x70],0xde
  40ab74:	sub    al,0x34
  40ab76:	cmp    BYTE PTR [eax],dh
  40ab78:	xor    eax,0x8506707e
  40ab7d:	stc    
  40ab7e:	cs dec ebp
  40ab80:	mov    ebx,0x6283ab4d
  40ab85:	jge    0x40ab8a
  40ab87:	jle    0x40ab1a
  40ab89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab8a:	cmp    ch,ch
  40ab8c:	outs   dx,DWORD PTR ds:[esi]
  40ab8d:	out    0xa,eax
  40ab8f:	sbb    DWORD PTR [ecx],edi
  40ab91:	dec    esp
  40ab92:	sbb    DWORD PTR [edx],esp
  40ab94:	int    0x57
  40ab96:	leave  
  40ab97:	fisttp WORD PTR [edx+0x2b]
  40ab9a:	and    al,0xe3
  40ab9c:	jp     0x40ab7c
  40ab9e:	ja     0x40ab5e
  40aba0:	test   eax,0xd66e754d
  40aba5:	push   0x16adbd5f
  40abaa:	mov    eax,ds:0xcf17c191
  40abaf:	mov    esi,0xbadf32ab
  40abb4:	fabs   
  40abb6:	jb     0x40ac13
  40abb8:	cmovle ebx,ebx
  40abbb:	mov    ch,0x98
  40abbd:	dec    eax
  40abbe:	rcr    DWORD PTR [ebp+0x1c],1
  40abc1:	dec    ecx
  40abc2:	jge    0x40ac08
  40abc4:	mov    ch,0xef
  40abc6:	mov    eax,ds:0x242b906a
  40abcb:	jns    0x40ab68
  40abcd:	loopne 0x40ac04
  40abcf:	leave  
  40abd0:	xchg   ecx,eax
  40abd1:	test   al,0x7f
  40abd3:	sbb    bh,bl
  40abd5:	mov    esi,0xec0b8f24
  40abda:	xor    DWORD PTR [edi-0x5f18aef1],ecx
  40abe0:	test   al,0x27
  40abe2:	ds jle 0x40ac03
  40abe5:	xlat   BYTE PTR ds:[ebx]
  40abe6:	pop    edi
  40abe7:	dec    ebx
  40abe8:	out    dx,eax
  40abe9:	pop    eax
  40abea:	or     esp,ebx
  40abec:	dec    esp
  40abed:	jmp    0xe84a3bac
  40abf2:	(bad)  
  40abf3:	aam    0x77
  40abf5:	lahf   
  40abf6:	pop    es
  40abf7:	loope  0x40ac5b
  40abf9:	pop    DWORD PTR [eax+edi*1+0x20]
  40abfd:	clc    
  40abfe:	test   DWORD PTR [esi],0x1839d294
  40ac04:	scas   al,BYTE PTR es:[edi]
  40ac05:	adc    eax,0xbc912eab
  40ac0a:	repnz xchg ebp,eax
  40ac0c:	and    DWORD PTR [edi],ecx
  40ac0e:	(bad)  
  40ac0f:	xchg   ebx,eax
  40ac10:	out    0xb6,al
  40ac12:	mov    cl,0xa6
  40ac14:	add    DWORD PTR [eax-0x44ad0fc0],ebp
  40ac1a:	add    BYTE PTR [ecx+0x5107107c],al
  40ac20:	mov    ds:0xd882f1,al
  40ac25:	sub    ebp,DWORD PTR [esi]
  40ac27:	inc    esp
  40ac28:	add    eax,DWORD PTR [esi+0x71]
  40ac2b:	je     0x40ac47
  40ac2d:	pop    edx
  40ac2e:	out    dx,al
  40ac2f:	test   al,dh
  40ac31:	retf   0x20cc
  40ac34:	lods   eax,DWORD PTR ds:[esi]
  40ac35:	mov    esi,0x9abd1fdd
  40ac3a:	push   cs
  40ac3b:	mov    ah,0xb3
  40ac3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac3e:	cmp    bh,BYTE PTR [ebx]
  40ac40:	adc    DWORD PTR [ebx+ecx*2],ebp
  40ac43:	add    al,0xc8
  40ac45:	ss push edi
  40ac47:	inc    ebx
  40ac48:	inc    ecx
  40ac49:	mov    al,0xc0
  40ac4b:	loope  0x40ac4e
  40ac4d:	jns    0x40ac9f
  40ac4f:	inc    esp
  40ac50:	adc    ebp,DWORD PTR [ebp-0x66e6ab60]
  40ac56:	jne    0x40abe4
  40ac58:	fidiv  DWORD PTR [edx+0x24]
  40ac5b:	dec    ecx
  40ac5c:	push   0xffffff99
  40ac5e:	add    eax,0x91aa8955
  40ac63:	fwait
  40ac64:	xor    ch,BYTE PTR [esi+0x36218fcc]
  40ac6a:	stos   DWORD PTR es:[edi],eax
  40ac6b:	adc    cl,0x74
  40ac6e:	cmp    al,0x6b
  40ac70:	outs   dx,BYTE PTR ds:[esi]
  40ac71:	pop    ss
  40ac72:	cmc    
  40ac73:	loop   0x40acce
  40ac75:	xchg   ebp,eax
  40ac76:	mov    edx,0xfe13965
  40ac7b:	mov    ch,0x14
  40ac7e:	push   0x64
  40ac80:	dec    edi
  40ac81:	and    BYTE PTR [edx-0x2b],al
  40ac84:	adc    al,0xf1
  40ac86:	mov    ebx,DWORD PTR [ebp+ebx*1-0x3d]
  40ac8a:	jns    0x40ac6f
  40ac8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac8d:	inc    edi
  40ac8e:	arpl   WORD PTR [eax-0x302576b1],sp
  40ac94:	jnp    0x40aca5
  40ac96:	push   ebx
  40ac97:	adc    edi,DWORD PTR [ecx+edx*1]
  40ac9a:	xor    DWORD PTR [eax+0x28],eax
  40ac9d:	xchg   esi,eax
  40ac9f:	or     BYTE PTR [edi],0x5b
  40aca2:	in     eax,0xa5
  40aca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aca5:	inc    edx
  40aca6:	ins    BYTE PTR es:[edi],dx
  40aca7:	outs   dx,BYTE PTR ds:[esi]
  40aca8:	xor    DWORD PTR [ebp-0x7aff42c5],edx
  40acae:	add    ch,0x76
  40acb1:	or     bl,BYTE PTR [ecx]
  40acb3:	fucom  st(0)
  40acb5:	sbb    eax,0x27acfff0
  40acba:	pop    ss
  40acbb:	fld    DWORD PTR [ecx]
  40acbd:	bound  esp,QWORD PTR ss:0x67ab7973
  40acc4:	pop    es
  40acc5:	out    dx,al
  40acc6:	dec    edi
  40acc7:	add    al,0x5f
  40acc9:	xor    ebp,ebp
  40accb:	mov    eax,ds:0x84fd46eb
  40acd0:	ds fwait
  40acd2:	jle    0x40ace5
  40acd4:	pop    ds
  40acd5:	cmp    al,0x23
  40acd7:	sub    eax,0x8847adc9
  40acdc:	mov    dh,al
  40acde:	dec    ah
  40ace0:	and    al,0xfa
  40ace2:	(bad)  
  40ace4:	and    DWORD PTR [ecx-0x73],esi
  40ace7:	pop    edi
  40ace8:	leave  
  40ace9:	(bad)  
  40acea:	and    edi,esp
  40acec:	shl    BYTE PTR [edi+ebx*8+0x545809b3],cl
  40acf3:	out    dx,al
  40acf4:	bound  esi,QWORD PTR [esi+0x6462c9f9]
  40acfa:	fs loop 0x40acac
  40acfd:	rcl    DWORD PTR [eax],1
  40acff:	xchg   ecx,eax
  40ad00:	xchg   ebp,ebx
  40ad02:	sbb    DWORD PTR [eax+0x1],esi
  40ad05:	fcmovnu st,st(1)
  40ad07:	sti    
  40ad08:	adc    DWORD PTR [esi+0x77874071],esp
  40ad0e:	jae    0x40ad22
  40ad10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad11:	cli    
  40ad12:	fstp   DWORD PTR [eax+0x5ec4c0c0]
  40ad18:	sub    al,0xc2
  40ad1a:	sti    
  40ad1b:	(bad)  [ecx+0x58]
  40ad1e:	fldcw  WORD PTR [ebx+0x70]
  40ad21:	push   eax
  40ad22:	in     eax,dx
  40ad23:	sbb    DWORD PTR [ebp+0x2495af8a],esi
  40ad29:	int3   
  40ad2a:	test   BYTE PTR [ebp-0x55],bl
  40ad2d:	add    al,0xed
  40ad2f:	fadd   DWORD PTR [edx-0x9]
  40ad32:	hlt    
  40ad33:	push   0x8049a069
  40ad38:	and    dl,BYTE PTR [eax+0x32]
  40ad3b:	stos   DWORD PTR es:[edi],eax
  40ad3c:	ds xchg ebp,eax
  40ad3e:	test   al,0xc8
  40ad40:	mov    BYTE PTR [edi+0x28],bh
  40ad43:	cmp    eax,esp
  40ad45:	int3   
  40ad46:	adc    bh,ah
  40ad48:	jb     0x40ace4
  40ad4a:	fisttp WORD PTR [edi-0x7bbac005]
  40ad50:	ret    0xb93a
  40ad53:	ins    DWORD PTR es:[edi],dx
  40ad54:	das    
  40ad55:	mov    bh,bh
  40ad57:	aam    0x69
  40ad59:	pop    edx
  40ad5a:	xchg   edx,eax
  40ad5b:	iret   
  40ad5c:	jns    0x40ace6
  40ad5e:	int3   
  40ad5f:	adc    DWORD PTR [esi-0x26dc0e16],ecx
  40ad65:	jns    0x40acf0
  40ad67:	daa    
  40ad68:	jnp    0x40ad2c
  40ad6a:	and    al,0x19
  40ad6c:	out    dx,al
  40ad6d:	mov    ds:0x2ae4c956,eax
  40ad72:	jns    0x40ad16
  40ad74:	out    dx,eax
  40ad75:	in     al,0xff
  40ad77:	and    ch,0x9e
  40ad7a:	jg     0x40adc5
  40ad7c:	ins    BYTE PTR es:[edi],dx
  40ad7d:	mov    cl,0x79
  40ad7f:	aaa    
  40ad80:	icebp  
  40ad81:	js     0x40ad6d
  40ad83:	and    bl,ch
  40ad85:	jae    0x40ad9b
  40ad87:	fcom   DWORD PTR [edx+0x6f891893]
  40ad8d:	mov    al,0xb1
  40ad8f:	scas   al,BYTE PTR es:[edi]
  40ad90:	mov    ecx,DWORD PTR [edx+0x3d631f2c]
  40ad96:	jmp    0xf1b92152
  40ad9b:	mov    eax,0x57697e48
  40ada0:	mov    cl,BYTE PTR [edi]
  40ada2:	adc    BYTE PTR [di+0x2c],al
  40ada6:	push   esp
  40ada7:	pop    ebp
  40ada8:	xor    esi,DWORD PTR [eax-0x472055a8]
  40adae:	test   cl,ah
  40adb0:	enter  0x8531,0x63
  40adb4:	adc    al,0x4c
  40adb6:	in     eax,0x8f
  40adb8:	dec    ebp
  40adb9:	jmp    0x3991:0x81815fe1
  40adc0:	fiadd  DWORD PTR [ecx+0x34]
  40adc3:	xchg   BYTE PTR [ebx+0x551e1fe6],dl
  40adc9:	fs in  al,dx
  40adcb:	fild   DWORD PTR [edx+0x40d763c5]
  40add1:	lock clc 
  40add3:	(bad)  
  40add4:	and    DWORD PTR [ebx+eiz*8],eax
  40add7:	loopne 0x40ae38
  40add9:	mov    ch,BYTE PTR [ebx-0x62]
  40addc:	inc    ebx
  40addd:	ror    BYTE PTR [ecx-0x1debb1af],cl
  40ade3:	int3   
  40ade4:	pop    edx
  40ade5:	enter  0x5f12,0x8
  40ade9:	sub    eax,0x3c8e85a
  40adee:	shr    bl,cl
  40adf0:	or     esp,ecx
  40adf2:	ins    BYTE PTR es:[edi],dx
  40adf3:	inc    eax
  40adf4:	fisttp WORD PTR [ecx+0x39]
  40adf7:	sahf   
  40adf8:	mov    al,ds:0xd54051aa
  40adfd:	push   edi
  40adfe:	jne    0x40adf1
  40ae00:	mov    eax,0x4cc8e5d5
  40ae05:	loope  0x40adcc
  40ae07:	cli    
  40ae08:	jge    0x40adf5
  40ae0a:	push   cs
  40ae0b:	popa   
  40ae0c:	in     al,0x2a
  40ae0e:	stos   BYTE PTR es:[edi],al
  40ae0f:	test   BYTE PTR [esi+esi*1-0x263f863c],cl
  40ae16:	and    eax,0x2ed94bca
  40ae1b:	test   eax,0x2aedecc0
  40ae20:	or     esi,DWORD PTR [ebx-0xd]
  40ae23:	push   0x4a
  40ae25:	push   ss
  40ae26:	mov    bl,0xd9
  40ae28:	adc    al,0x71
  40ae2a:	mov    ds:0x30cdf9a9,eax
  40ae2f:	(bad)  
  40ae31:	movaps XMMWORD PTR [ebp-0x5d529508],xmm3
  40ae38:	div    BYTE PTR [edi+ebx*8+0x3a]
  40ae3c:	pop    ebp
  40ae3d:	push   edx
  40ae3e:	out    dx,al
  40ae3f:	out    dx,eax
  40ae40:	loopne 0x40ae03
  40ae42:	jge    0x40add8
  40ae44:	(bad)  
  40ae45:	mov    ch,0x2d
  40ae47:	loope  0x40aea1
  40ae49:	jnp    0x40adf3
  40ae4b:	xchg   edi,eax
  40ae4c:	dec    esi
  40ae4d:	xchg   edx,eax
  40ae4e:	or     al,0xba
  40ae50:	xchg   ebx,eax
  40ae51:	dec    edi
  40ae52:	sbb    dh,dl
  40ae54:	jae    0x40ae55
  40ae56:	mov    ds,WORD PTR [ebp-0x4d]
  40ae59:	and    BYTE PTR [ebx],ch
  40ae5b:	out    0x26,eax
  40ae5d:	xchg   edi,edi
  40ae5f:	push   ss
  40ae60:	call   0x5b4f:0x7dbbdc1a
  40ae67:	fwait
  40ae68:	cmp    al,0x90
  40ae6a:	xchg   edi,eax
  40ae6b:	xchg   ebx,eax
  40ae6c:	in     eax,dx
  40ae6d:	xor    eax,0x9c2b035a
  40ae72:	xor    BYTE PTR [esi+0x62],ch
  40ae75:	inc    dh
  40ae77:	sub    esi,DWORD PTR [edx-0x619dbe8a]
  40ae7d:	gs push cs
  40ae7f:	shl    DWORD PTR [eax+esi*8],1
  40ae82:	fwait
  40ae83:	push   esp
  40ae84:	test   BYTE PTR [ebx-0x7696bb1b],bh
  40ae8a:	sbb    DWORD PTR [edi],esi
  40ae8c:	pop    es
  40ae8d:	(bad)  
  40ae8e:	rol    eax,0x1b
  40ae91:	mov    ebx,0xb62c77f0
  40ae96:	cwde   
  40ae97:	icebp  
  40ae98:	cmp    eax,0xce0ab61b
  40ae9d:	dec    BYTE PTR [eax]
  40ae9f:	sti    
  40aea0:	mov    es,WORD PTR [ebp+0x61ee5d2f]
  40aea6:	xor    esi,ebx
  40aea8:	sub    al,BYTE PTR [ecx+eiz*1]
  40aeab:	jbe    0x40aef2
  40aead:	mov    eax,ds:0x49eb2104
  40aeb2:	mov    esi,esi
  40aeb4:	loope  0x40ae5b
  40aeb6:	or     bl,ch
  40aeb8:	and    al,0x78
  40aeba:	lock and BYTE PTR [edi],ah
  40aebd:	les    edx,FWORD PTR [ebp+0x5f62562c]
  40aec3:	xchg   esi,eax
  40aec4:	hlt    
  40aec5:	add    ebp,DWORD PTR ds:0x45d62ce
  40aecb:	shr    BYTE PTR [ebx+0x27],0x56
  40aecf:	cs (bad) 
  40aed1:	lahf   
  40aed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aed3:	jge    0x40aefc
  40aed5:	sbb    al,0xd6
  40aed7:	mov    edx,esi
  40aed9:	test   BYTE PTR [ebx],dh
  40aedb:	cmc    
  40aedc:	sbb    esp,ebp
  40aede:	fisubr WORD PTR [edx-0x6e]
  40aee1:	mov    fs,WORD PTR [edi]
  40aee3:	ds mov eax,es
  40aee6:	mov    ebp,0x27d359b4
  40aeeb:	dec    esp
  40aeec:	ror    BYTE PTR [eax-0x5e715b47],cl
  40aef2:	push   cs
  40aef3:	jmp    0xc326:0x82677970
  40aefa:	cld    
  40aefb:	xchg   ebp,eax
  40aefc:	aad    0x3b
  40aefe:	inc    ebx
  40aeff:	xor    eax,0x93a99fa7
  40af04:	adc    ah,BYTE PTR [edx]
  40af06:	inc    edi
  40af07:	mov    ebp,0x7a8ae26
  40af0c:	jg     0x40af06
  40af0e:	inc    esi
  40af0f:	jbe    0x40aeeb
  40af11:	and    al,0x18
  40af13:	ins    DWORD PTR es:[edi],dx
  40af14:	popa   
  40af15:	call   0xc181:0x7032b730
  40af1c:	aas    
  40af1d:	mov    edx,ebp
  40af1f:	pop    edi
  40af20:	mov    dl,0xe1
  40af22:	xlat   BYTE PTR ds:[ebx]
  40af23:	or     dh,BYTE PTR [edi]
  40af25:	xchg   ecx,eax
  40af26:	sbb    BYTE PTR [ebp-0x731ba7f],bl
  40af2c:	popf   
  40af2d:	loope  0x40af52
  40af2f:	ffreep st(3)
  40af31:	adc    DWORD PTR [eax+0x2cffac7],ebx
  40af37:	sub    edx,DWORD PTR [ebx+edi*2-0x7c]
  40af3b:	and    al,ah
  40af3d:	mov    ecx,?
  40af3f:	repnz rcr DWORD PTR [esi+0x1c],1
  40af43:	cli    
  40af44:	call   0x3211659c
  40af49:	mov    al,0x87
  40af4b:	push   ds
  40af4c:	dec    esp
  40af4d:	and    ecx,0x44e622cf
  40af53:	mov    ?,WORD PTR [ecx-0x78]
  40af56:	xor    esi,DWORD PTR [edi]
  40af58:	fld    QWORD PTR [esi-0x50]
  40af5b:	in     al,0x92
  40af5d:	push   ebp
  40af5e:	mov    dl,0xd3
  40af60:	jne    0x40af3e
  40af62:	inc    ebx
  40af63:	icebp  
  40af64:	or     DWORD PTR [ecx+0x79],0xa8be7687
  40af6b:	sub    DWORD PTR [edi],0xffffffb5
  40af6e:	stos   BYTE PTR es:[edi],al
  40af6f:	aam    0xa5
  40af71:	lods   eax,DWORD PTR ds:[esi]
  40af72:	div    BYTE PTR [esi]
  40af74:	mov    edx,0xb8cd6b12
  40af79:	inc    esp
  40af7a:	or     DWORD PTR [ebp+0x5f],esp
  40af7d:	mov    dh,0xd5
  40af7f:	xlat   BYTE PTR ds:[ebx]
  40af80:	jle    0x40af63
  40af82:	mov    eax,es
  40af84:	or     cl,BYTE PTR [ebx-0xc9e92a5]
  40af8a:	or     BYTE PTR ds:0x59778582,ah
  40af90:	(bad)  
  40af91:	mov    bh,0x1e
  40af93:	call   0x4c11:0x41484ae3
  40af9a:	push   cs
  40af9b:	xchg   edx,eax
  40af9c:	int    0x50
  40af9e:	push   esp
  40af9f:	retf   0x9d5a
  40afa2:	sub    al,0x96
  40afa4:	xchg   ebp,eax
  40afa5:	inc    ebx
  40afa6:	test   DWORD PTR [esi],eax
  40afa8:	sbb    dh,al
  40afaa:	cmp    eax,esi
  40afac:	in     eax,dx
  40afad:	enter  0xb91a,0xa3
  40afb1:	les    edx,FWORD PTR [edi+0x2c]
  40afb4:	stos   DWORD PTR es:[edi],eax
  40afb5:	xchg   edx,eax
  40afb6:	jns    0x40afa1
  40afb8:	or     BYTE PTR [eax-0x60],cl
  40afbb:	out    dx,al
  40afbc:	rcl    DWORD PTR [esi-0xe],1
  40afbf:	push   edx
  40afc0:	mov    fs,WORD PTR [ebx+0x58]
  40afc3:	add    eax,0x6a4a2cd0
  40afc8:	mov    ch,0xe6
  40afca:	jge    0x40af5b
  40afcc:	mov    bl,0x8b
  40afce:	inc    ebp
  40afcf:	cld    
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0x9529b0d0,0xd6
  40afff:	enter  0x298d,0xf4
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffd9
  40b00a:	adc    BYTE PTR [eax],ch
  40b00c:	outs   dx,DWORD PTR ds:[si]
  40b00e:	lods   al,BYTE PTR ds:[esi]
  40b00f:	scas   eax,DWORD PTR es:[edi]
  40b010:	(bad)  
  40b011:	sbb    eax,0xd0fa9ce1
  40b016:	pop    edi
  40b017:	lock xor BYTE PTR [ebp+0x3dcf1178],al
  40b01e:	hlt    
  40b01f:	sub    eax,0x7a88a5a
  40b024:	jge    0x40b040
  40b026:	xchg   ebp,eax
  40b027:	into   
  40b028:	and    BYTE PTR [ebx+esi*4],al
  40b02b:	pop    ds
  40b02c:	pop    ebp
  40b02d:	mov    WORD PTR [ecx],gs
  40b02f:	test   eax,0x1df6007
  40b034:	adc    al,0x9e
  40b036:	dec    ebx
  40b037:	iret   
  40b038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b039:	cwde   
  40b03a:	xchg   DWORD PTR [esi+0x5d],edx
  40b03d:	pop    ecx
  40b03e:	mov    al,ds:0x7a033f1e
  40b043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b044:	outs   dx,DWORD PTR ds:[esi]
  40b045:	mov    eax,ds:0x1fe9faa1
  40b04a:	fist   WORD PTR [edi+0x6d]
  40b04d:	jg     0x40b0c7
  40b04f:	(bad)  
  40b051:	xrelease xchg DWORD PTR [esi],edi
  40b054:	mov    ecx,DWORD PTR [esp+ecx*4]
  40b057:	lahf   
  40b058:	call   0x735e:0x9dcd5851
  40b05f:	mov    edx,ebx
  40b061:	pop    ebx
  40b062:	jo     0x40afeb
  40b064:	cdq    
  40b065:	adc    BYTE PTR [edi+0x65],ch
  40b068:	xchg   ebx,eax
  40b069:	sub    eax,0xb654fd69
  40b06e:	xchg   DWORD PTR [ebx+0x1c90d7f4],edi
  40b074:	fsubrp st(5),st
  40b076:	push   ss
  40b077:	lds    esp,FWORD PTR [edx-0x42]
  40b07a:	push   ds
  40b07b:	adc    dl,al
  40b07d:	shl    BYTE PTR [edi+0x31f122be],0x64
  40b084:	add    ebx,DWORD PTR [eax-0x3b]
  40b087:	cs dec ebp
  40b089:	xor    BYTE PTR [edx+0xc],cl
  40b08c:	loope  0x40b083
  40b08e:	sub    BYTE PTR [edi-0x59a228db],0xae
  40b095:	cmp    esp,DWORD PTR [eax+edi*1+0x5d]
  40b099:	xchg   DWORD PTR [edx+0x60b3c82d],ebx
  40b09f:	add    dl,BYTE PTR [edx+0x154962]
  40b0a5:	mov    eax,ds:0x6eb2ea20
  40b0aa:	int    0x98
  40b0ac:	ret    
  40b0ad:	sbb    dl,BYTE PTR ds:0x2a3e93e1
  40b0b3:	int3   
  40b0b4:	repz sub al,0x47
  40b0b7:	imul   edi,DWORD PTR [ebp+0x7d60a1b1],0x75e18dd1
  40b0c1:	into   
  40b0c2:	dec    ebp
  40b0c3:	sbb    DWORD PTR [eax-0x3f12e4fe],ebx
  40b0c9:	jmp    0xbd51:0x62995780
  40b0d0:	mov    edx,esi
  40b0d2:	hlt    
  40b0d3:	adc    DWORD PTR [esi],edi
  40b0d5:	in     al,0x48
  40b0d7:	sbb    al,bl
  40b0d9:	jmp    0x40b14e
  40b0db:	sub    al,0x63
  40b0dd:	xor    edx,DWORD PTR [edx]
  40b0df:	mov    ebx,0x32a3d39e
  40b0e4:	(bad)  
  40b0e5:	push   ebx
  40b0e6:	sbb    DWORD PTR [edi-0x56e171db],ebp
  40b0ec:	dec    ecx
  40b0ed:	loopne 0x40b0a2
  40b0ef:	mov    ds:0xf9239ffc,eax
  40b0f4:	das    
  40b0f5:	push   0xffffff9e
  40b0f7:	leave  
  40b0f8:	enter  0xc7e9,0x11
  40b0fc:	aas    
  40b0fd:	mov    eax,ds:0x5a7b559f
  40b102:	push   ss
  40b103:	lods   al,BYTE PTR ds:[esi]
  40b104:	cmp    eax,0x9fbf30be
  40b109:	jo     0x40b12e
  40b10b:	imul   esi,DWORD PTR [esi],0xffffff98
  40b10e:	outs   dx,DWORD PTR ds:[esi]
  40b10f:	and    DWORD PTR [esi+ebp*4+0x15b97f19],ebx
  40b116:	(bad)  
  40b117:	into   
  40b118:	inc    edi
  40b119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b11a:	push   eax
  40b11b:	lods   eax,DWORD PTR ds:[esi]
  40b11c:	repnz mov al,dh
  40b11f:	push   eax
  40b120:	sub    al,0x67
  40b122:	mov    gs,WORD PTR [edi]
  40b124:	ret    
  40b125:	pusha  
  40b126:	retf   0x1cc9
  40b129:	repnz (bad) 
  40b12b:	jecxz  0x40b104
  40b12d:	dec    esp
  40b12e:	mov    eax,ds:0xe6fd329c
  40b133:	aam    0x15
  40b135:	sub    dl,BYTE PTR [esi+0x2bc4ab88]
  40b13b:	arpl   WORD PTR [ebp+edx*4+0x26],di
  40b13f:	inc    esp
  40b140:	mov    eax,0x8f2d228e
  40b145:	sub    eax,esp
  40b147:	xchg   ebp,eax
  40b148:	(bad)  
  40b149:	mov    edi,0x2b21e7a9
  40b14e:	push   ecx
  40b14f:	cli    
  40b150:	in     al,dx
  40b151:	in     eax,dx
  40b152:	sbb    esi,DWORD PTR [esi+0x36]
  40b155:	mov    al,0x60
  40b157:	xor    al,0x0
  40b159:	or     dh,BYTE PTR es:[edi]
  40b15c:	dec    esi
  40b15d:	mov    edx,0xcab8984c
  40b162:	cwde   
  40b163:	ret    0x5350
  40b166:	and    al,0x7b
  40b168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b169:	je     0x40b147
  40b16b:	lahf   
  40b16c:	mov    ebx,0x6bd8fa8d
  40b171:	xor    bh,BYTE PTR [esi+0x7752a74]
  40b177:	fidiv  DWORD PTR [edi-0xbaf5e0b]
  40b17d:	test   eax,0xc3f41ebf
  40b182:	sbb    eax,0x4eb9f637
  40b187:	stc    
  40b188:	and    eax,0x16c911c1
  40b18d:	push   edx
  40b18e:	xor    bh,dh
  40b190:	push   esi
  40b191:	jecxz  0x40b1b2
  40b193:	in     al,0xd
  40b195:	mov    ebp,0xf33bbeb0
  40b19a:	mov    fs,edx
  40b19c:	pusha  
  40b19d:	cdq    
  40b19e:	pop    ebx
  40b19f:	adc    edi,DWORD PTR [ebp+0x62]
  40b1a2:	jg     0x40b131
  40b1a4:	fiadd  WORD PTR [edi-0x7a]
  40b1a7:	out    dx,eax
  40b1a8:	fild   QWORD PTR [edi]
  40b1aa:	xchg   esi,eax
  40b1ab:	(bad)  
  40b1ac:	cli    
  40b1ad:	lahf   
  40b1ae:	stos   BYTE PTR es:[edi],al
  40b1af:	dec    esp
  40b1b0:	add    ebx,DWORD PTR ds:0xea0f1512
  40b1b6:	xchg   BYTE PTR ds:0x863cc159,ah
  40b1bc:	xchg   ebx,eax
  40b1bd:	push   ebp
  40b1be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1bf:	cld    
  40b1c0:	call   0x83e33434
  40b1c5:	retf   
  40b1c6:	jmp    0x40b14c
  40b1c8:	pop    esi
  40b1c9:	in     eax,0xe3
  40b1cb:	xor    eax,0xff35a525
  40b1d0:	les    ecx,FWORD PTR [edi-0x6f]
  40b1d3:	xchg   DWORD PTR [edi+0x1af473c2],edi
  40b1d9:	cmp    eax,0x3c8484bc
  40b1de:	aaa    
  40b1df:	arpl   WORD PTR [ebp+eiz*4+0x30],di
  40b1e3:	sbb    eax,0x7d792f12
  40b1e8:	cs pop eax
  40b1ea:	inc    ecx
  40b1eb:	push   esp
  40b1ec:	out    dx,eax
  40b1ed:	(bad)  
  40b1ee:	push   cs
  40b1ef:	pop    edx
  40b1f0:	cdq    
  40b1f1:	jmp    0x31c59237
  40b1f6:	adc    eax,0x147ac904
  40b1fb:	push   0xfffffffe
  40b1fd:	mov    dh,0x36
  40b1ff:	push   ecx
  40b200:	jl     0x40b1c5
  40b202:	push   ss
  40b203:	mov    eax,0x97dc6fca
  40b208:	out    dx,eax
  40b209:	repnz lods eax,DWORD PTR ds:[esi]
  40b20b:	mov    eax,ds:0xb7cce702
  40b210:	add    edi,DWORD PTR [ecx]
  40b212:	dec    ecx
  40b213:	or     al,0x91
  40b215:	cmp    DWORD PTR [edi-0x3688fee8],ecx
  40b21b:	push   ebp
  40b21c:	adc    edi,DWORD PTR [edx+0x29ede8b]
  40b222:	xor    esi,eax
  40b224:	iret   
  40b225:	pop    ebx
  40b226:	cmc    
  40b227:	fwait
  40b228:	int3   
  40b229:	mov    WORD PTR [ebp-0x5b64958b],gs
  40b22f:	mov    dl,0x20
  40b231:	xor    edi,DWORD PTR [eax]
  40b233:	or     bh,cl
  40b235:	popa   
  40b236:	push   ebp
  40b237:	dec    ebp
  40b238:	ja     0x40b21a
  40b23a:	mov    al,ds:0x7cba7bcb
  40b23f:	add    DWORD PTR [edi-0x7a],ebp
  40b242:	dec    edx
  40b243:	jge    0x40b1fc
  40b245:	scas   eax,DWORD PTR es:[edi]
  40b246:	fst    DWORD PTR [ebx]
  40b248:	aad    0xbb
  40b24a:	imul   edi,DWORD PTR [eax+0x32],0x95491599
  40b251:	jbe    0x40b245
  40b253:	(bad)  
  40b254:	repz lahf 
  40b256:	mov    BYTE PTR [esi-0x1a],dh
  40b259:	xchg   DWORD PTR [ebx+eax*4],ebp
  40b25c:	push   cs
  40b25d:	aaa    
  40b25e:	fstp   TBYTE PTR es:[ecx+edi*1]
  40b262:	stc    
  40b263:	cmc    
  40b264:	mov    al,ds:0xbcb1f8bc
  40b269:	pushf  
  40b26a:	pop    ds
  40b26b:	rcr    DWORD PTR [esi+0x7f3c8c25],0xd5
  40b272:	inc    eax
  40b273:	jno    0x40b252
  40b275:	jl     0x40b23a
  40b277:	mov    dl,0x5b
  40b279:	imul   ebx,ebp,0x4a54d71
  40b27f:	and    al,0xb1
  40b281:	fmul   QWORD PTR [edx+0x267a8d7f]
  40b287:	fist   WORD PTR [edx]
  40b289:	je     0x40b218
  40b28b:	fild   WORD PTR [edx+0x6d0cb213]
  40b291:	adc    esi,DWORD PTR [ebp-0x12]
  40b294:	push   esi
  40b295:	mov    BYTE PTR [edi],bl
  40b297:	ja     0x40b284
  40b299:	sbb    eax,0xc92a249
  40b29e:	cmp    eax,0x3959f40a
  40b2a3:	mov    eax,ds:0x2f1e65ed
  40b2a8:	jnp    0x40b282
  40b2aa:	das    
  40b2ab:	or     al,0xed
  40b2ad:	das    
  40b2ae:	xchg   ebp,eax
  40b2af:	sar    BYTE PTR [esi-0x3d7a3d1],0x23
  40b2b6:	js     0x40b2aa
  40b2b8:	cmp    edx,DWORD PTR [esi-0x92801a8]
  40b2be:	fcmovne st,st(5)
  40b2c0:	cmc    
  40b2c1:	dec    esp
  40b2c2:	nop
  40b2c3:	out    dx,al
  40b2c4:	bound  ebx,QWORD PTR [edx]
  40b2c6:	stc    
  40b2c7:	adc    esp,0xffffffe1
  40b2ca:	dec    ebx
  40b2cb:	xor    edx,esp
  40b2cd:	push   esi
  40b2ce:	mov    ch,0x4e
  40b2d0:	js     0x40b2c1
  40b2d2:	xchg   edx,eax
  40b2d3:	pop    edx
  40b2d4:	mov    ds:0x5e762ab,eax
  40b2d9:	les    edi,FWORD PTR [edi-0x29]
  40b2dc:	fld    DWORD PTR [ebp+esi*4+0x4c795d1]
  40b2e3:	push   ss
  40b2e4:	xlat   BYTE PTR ds:[ebx]
  40b2e5:	mov    ah,BYTE PTR [edx-0x3b2c0758]
  40b2eb:	dec    ebx
  40b2ec:	in     eax,0x2f
  40b2ee:	fst    DWORD PTR [edx+0x78]
  40b2f1:	or     ah,BYTE PTR [ebx-0x1]
  40b2f4:	popa   
  40b2f5:	fstcw  WORD PTR [ebp-0x1a85ad14]
  40b2fc:	mov    BYTE PTR [edi+0x1a],0x58
  40b300:	loope  0x40b31d
  40b302:	imul   esp,DWORD PTR [ebp-0x24742cf],0xe00a4de9
  40b30c:	lods   al,BYTE PTR ds:[esi]
  40b30d:	stc    
  40b30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b30f:	fsubr  DWORD PTR [eax+0x1b]
  40b312:	push   edi
  40b313:	sub    BYTE PTR [ebx+0x10],dl
  40b316:	dec    edx
  40b317:	ror    BYTE PTR [edi-0x3e172923],cl
  40b31d:	pop    eax
  40b31e:	dec    esp
  40b31f:	mov    edx,0x31da0911
  40b324:	stos   BYTE PTR es:[edi],al
  40b325:	or     BYTE PTR [esi+0x48],cl
  40b328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b329:	rcr    edi,cl
  40b32b:	out    0x71,eax
  40b32d:	mov    esi,0x95077728
  40b332:	xlat   BYTE PTR ds:[ebx]
  40b333:	xchg   ebx,eax
  40b334:	stos   BYTE PTR es:[edi],al
  40b335:	or     al,0x33
  40b337:	lods   al,BYTE PTR ds:[esi]
  40b338:	mul    BYTE PTR [esi]
  40b33a:	(bad)  
  40b33c:	je     0x40b35a
  40b33e:	xor    BYTE PTR [ecx-0x6b],0xc4
  40b342:	cmp    DWORD PTR [edi+0x53f9c8d3],0xa4c3d24f
  40b34c:	mov    bl,0xcf
  40b34e:	mov    ecx,0x58f3925d
  40b353:	sub    eax,0x5d502847
  40b358:	or     edx,DWORD PTR gs:[edi-0xd]
  40b35c:	xchg   ebp,eax
  40b35d:	test   BYTE PTR [ebx*8+0x33cfaaae],dh
  40b364:	cdq    
  40b365:	rol    BYTE PTR [edx+0x5c91505a],1
  40b36b:	mov    DWORD PTR [edx],0xb80b7e78
  40b371:	mov    ?,WORD PTR [ecx-0x18]
  40b374:	pop    esi
  40b375:	mov    esi,0xe22452f7
  40b37a:	es xor al,0x6
  40b37d:	add    dh,BYTE PTR [edx+0x45fa3c6e]
  40b383:	jb     0x40b324
  40b385:	adc    al,0xe1
  40b387:	cmp    DWORD PTR [edi-0x32],esp
  40b38a:	pop    ebp
  40b38b:	mov    bl,0x2e
  40b38d:	jge    0x40b409
  40b38f:	add    bh,bl
  40b391:	inc    ebx
  40b392:	adc    al,0x35
  40b394:	or     ebx,DWORD PTR [eax]
  40b396:	imul   ebp,DWORD PTR [eax+0x7e55b7d8],0x6346952d
  40b3a0:	push   cs
  40b3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3a2:	pop    edx
  40b3a3:	xchg   ebp,eax
  40b3a4:	repnz push cs
  40b3a6:	push   edx
  40b3a7:	mov    ebx,0xfacfede9
  40b3ac:	bnd jo 0x40b3d3
  40b3af:	out    dx,al
  40b3b0:	xchg   esp,eax
  40b3b1:	xor    esp,edi
  40b3b3:	je     0x40b37d
  40b3b5:	cmp    ecx,DWORD PTR [edi-0x852f8db]
  40b3bb:	inc    esi
  40b3bc:	shr    DWORD PTR [eax+0x760a938],1
  40b3c2:	mov    al,0xcf
  40b3c4:	js     0x40b36a
  40b3c6:	mov    edx,0xf12e94c4
  40b3cb:	nop
  40b3cc:	push   0x50462c8b
  40b3d1:	xchg   edi,eax
  40b3d2:	cmovs  edx,DWORD PTR [esi]
  40b3d5:	test   al,0x34
  40b3d7:	xor    edi,DWORD PTR [edx+0x31ed5db3]
  40b3dd:	cmp    eax,ebp
  40b3df:	push   esi
  40b3e0:	hlt    
  40b3e1:	mov    BYTE PTR [ebx],al
  40b3e3:	test   al,0x17
  40b3e5:	sar    DWORD PTR [eax-0x2f],1
  40b3e8:	adc    al,0xe3
  40b3ea:	pop    ss
  40b3eb:	test   BYTE PTR [edi],ch
  40b3ed:	imul   esp,DWORD PTR ds:0xbf06fd92,0xffffff85
  40b3f4:	popa   
  40b3f5:	cmp    eax,0xaae86819
  40b3fa:	int    0x5f
  40b3fc:	or     eax,0x19d06f0c
  40b401:	jp     0x40b3df
  40b403:	mov    esp,esi
  40b405:	ds jbe 0x40b460
  40b408:	mov    esp,DWORD PTR [eax+0x74]
  40b40b:	xchg   edx,eax
  40b40c:	adc    DWORD PTR [ecx],0x65
  40b40f:	test   DWORD PTR [eax-0x87ca0d3],edi
  40b415:	popa   
  40b416:	cwde   
  40b417:	pop    ds
  40b418:	out    dx,al
  40b419:	xchg   DWORD PTR ds:0xe8b13699,esp
  40b41f:	push   0x37aee8c4
  40b424:	jmp    0xc7ed26b5
  40b429:	hlt    
  40b42a:	(bad)  
  40b42b:	pop    es
  40b42c:	outs   dx,BYTE PTR ds:[esi]
  40b42d:	dec    ebx
  40b42e:	fidiv  WORD PTR [esi+0x51]
  40b431:	and    eax,0x9c2ca10e
  40b436:	(bad)  
  40b437:	mov    dh,0xaa
  40b439:	and    esi,DWORD PTR [esi-0x67dd8758]
  40b43f:	cli    
  40b440:	hlt    
  40b441:	mov    ah,0x1a
  40b443:	jbe    0x40b423
  40b445:	xchg   cl,al
  40b447:	xor    DWORD PTR [edx+0xb],edx
  40b44a:	aam    0x8e
  40b44c:	shr    BYTE PTR [edx+0x7bdb6add],0x8d
  40b453:	mov    eax,0x5b80e503
  40b458:	jl     0x40b42b
  40b45a:	sub    DWORD PTR [ebx-0x27],ecx
  40b45d:	push   ebx
  40b45e:	nop
  40b45f:	lock mov WORD PTR [ebx+ebx*8],es
  40b463:	(bad)  
  40b465:	es pop ebp
  40b467:	jmp    0x40b3f3
  40b469:	sbb    DWORD PTR [edx+0x42af4a2],eax
  40b46f:	fdivr  QWORD PTR [edi]
  40b471:	mov    esp,0xe524da77
  40b476:	lds    edx,FWORD PTR ds:0x1fdd7a15
  40b47c:	aad    0x28
  40b47e:	loope  0x40b45c
  40b480:	jl     0x40b4fe
  40b482:	lds    ebp,FWORD PTR [ecx]
  40b484:	repz sub edx,esi
  40b487:	call   0x9d63ef02
  40b48c:	xor    dl,bh
  40b48e:	(bad)  
  40b48f:	mov    al,ds:0x9326b03
  40b494:	stos   DWORD PTR es:[edi],eax
  40b495:	dec    ecx
  40b496:	add    DWORD PTR [ebx-0x3e],ebp
  40b499:	shl    DWORD PTR [ebx+0x2aac2a50],cl
  40b49f:	fisttp DWORD PTR [ebp-0x608a1555]
  40b4a5:	add    ebx,0x4f
  40b4a8:	(bad)  
  40b4a9:	lock pop esi
  40b4ab:	sbb    eax,DWORD PTR [edx+0x1cd29f11]
  40b4b1:	xchg   esp,eax
  40b4b2:	aam    0xf1
  40b4b4:	mov    cl,0xdd
  40b4b6:	inc    cl
  40b4b8:	jmp    0xf79dce15
  40b4bd:	popa   
  40b4be:	in     eax,0xf9
  40b4c0:	fidiv  WORD PTR [ebx]
  40b4c2:	arpl   WORD PTR [edx],bp
  40b4c4:	ss pop ebx
  40b4c6:	jbe    0x40b449
  40b4c8:	outs   dx,DWORD PTR ds:[esi]
  40b4c9:	call   0xe628:0xb26a41ed
  40b4d0:	(bad)  
  40b4d2:	frstor ds:0xcec3d9d9
  40b4d8:	and    DWORD PTR [ebx],ecx
  40b4da:	xor    ch,cl
  40b4dc:	mov    eax,ds:0x3fd34a5a
  40b4e1:	push   edi
  40b4e2:	cmc    
  40b4e3:	ret    
  40b4e4:	push   edi
  40b4e5:	loopne 0x40b4ee
  40b4e7:	fild   WORD PTR [eax-0x47]
  40b4ea:	pusha  
  40b4eb:	(bad)  
  40b4ec:	(bad)  
  40b4ed:	out    0xe4,eax
  40b4ef:	daa    
  40b4f0:	imul   edx,DWORD PTR [esi+esi*4],0xea96be60
  40b4f7:	loopne 0x40b575
  40b4f9:	inc    ebp
  40b4fa:	sbb    BYTE PTR [edi-0xb],bh
  40b4fd:	stos   DWORD PTR es:[edi],eax
  40b4fe:	out    0xe0,eax
  40b500:	cdq    
  40b501:	jecxz  0x40b576
  40b503:	jne    0x40b562
  40b505:	mov    ss,WORD PTR [ebp+0x32]
  40b508:	bnd jle 0x40b50e
  40b50b:	enter  0x796,0x6b
  40b50f:	sar    dh,0x31
  40b512:	sbb    DWORD PTR [esi],ebp
  40b514:	fisttp DWORD PTR [esi-0x54]
  40b517:	gs pop esi
  40b519:	jae    0x40b575
  40b51b:	dec    esi
  40b51c:	jmp    0x7834a1fe
  40b521:	push   ecx
  40b522:	ja     0x40b4b2
  40b524:	je     0x40b4df
  40b526:	jb     0x40b506
  40b528:	aaa    
  40b529:	cld    
  40b52a:	das    
  40b52b:	mov    ebx,0x3f48db69
  40b530:	and    bh,cl
  40b532:	retf   
  40b533:	mov    gs,WORD PTR [edx]
  40b535:	cli    
  40b536:	fdiv   st,st(2)
  40b538:	inc    esp
  40b539:	jns    0x40b58d
  40b53b:	dec    eax
  40b53c:	rol    BYTE PTR [edi+eax*8-0x6d],cl
  40b540:	addr16 out 0xd8,eax
  40b543:	js     0x40b59c
  40b545:	stos   BYTE PTR es:[edi],al
  40b546:	mov    edx,0x6342cada
  40b54b:	add    BYTE PTR [esi+0xd],ah
  40b54e:	mov    esp,esi
  40b550:	arpl   WORD PTR [ebp+0x60],ax
  40b553:	fs pop edx
  40b555:	(bad)  
  40b556:	arpl   bp,bx
  40b558:	inc    esp
  40b559:	mov    ecx,0x47138cc4
  40b55e:	fldcw  WORD PTR [edi-0x4a]
  40b561:	inc    ebp
  40b562:	jg     0x40b589
  40b564:	enter  0x474c,0x1f
  40b568:	scas   eax,DWORD PTR es:[edi]
  40b569:	dec    ebx
  40b56a:	sub    ecx,DWORD PTR [edx-0x3a]
  40b56d:	imul   eax,DWORD PTR gs:[ebx-0x2e1db8f1],0x30
  40b575:	or     eax,0xa2628390
  40b57a:	pop    esi
  40b57b:	clc    
  40b57c:	ja     0x40b52c
  40b57e:	jns    0x40b527
  40b580:	inc    ecx
  40b581:	aas    
  40b582:	dec    edi
  40b583:	jbe    0x40b5c3
  40b585:	ret    
  40b586:	dec    esi
  40b587:	inc    esp
  40b588:	push   ebp
  40b589:	je     0x40b54c
  40b58b:	test   ch,0x95
  40b58e:	push   eax
  40b58f:	enter  0x692b,0x38
  40b593:	xor    dx,WORD PTR [esi]
  40b596:	in     eax,0x9d
  40b598:	out    0x84,eax
  40b59a:	xchg   edi,eax
  40b59b:	out    0xa7,al
  40b59d:	mov    ah,0x94
  40b59f:	shl    BYTE PTR [edx+0x77318dcb],1
  40b5a5:	gs fcmovne st,st(3)
  40b5a8:	xor    al,0x8a
  40b5aa:	arpl   WORD PTR [edi+ebp*2],sp
  40b5ad:	mov    al,0xec
  40b5af:	fs stos BYTE PTR es:[edi],al
  40b5b1:	cmp    DWORD PTR [edi+0x35],esp
  40b5b4:	mov    edx,0x9f0c8bb7
  40b5b9:	lea    edx,[edi]
  40b5bb:	stc    
  40b5bc:	js     0x40b5c5
  40b5be:	in     eax,dx
  40b5bf:	daa    
  40b5c0:	nop
  40b5c1:	sub    edx,edi
  40b5c3:	mov    ebp,DWORD PTR [eax+eiz*8-0x79]
  40b5c7:	std    
  40b5c8:	xchg   esp,eax
  40b5c9:	fsubr  st,st(2)
  40b5cb:	xchg   edi,eax
  40b5cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5cd:	jne    0x40b5e8
  40b5cf:	aad    0x77
  40b5d1:	cmp    al,0x15
  40b5d3:	pop    ecx
  40b5d4:	inc    ebx
  40b5d5:	jno    0x40b5e9
  40b5d7:	in     al,0x86
  40b5d9:	add    eax,0x8da61c38
  40b5de:	mov    ds:0x114d2077,al
  40b5e3:	shl    BYTE PTR [eax],cl
  40b5e5:	call   0x89392815
  40b5ea:	outs   dx,BYTE PTR ds:[esi]
  40b5eb:	jmp    0x40b5c6
  40b5ed:	iret   
  40b5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ef:	(bad)
  40b5f3:	call   0x9228d028
  40b5f8:	popf   
  40b5f9:	mul    BYTE PTR [ecx+0x3d78e56]
  40b5ff:	inc    edi
  40b600:	clc    
  40b601:	jl     0x40b639
  40b603:	xor    eax,0xf8654fff
  40b608:	and    DWORD PTR [esp+edx*8],edx
  40b60b:	jl     0x40b67d
  40b60d:	pop    ebp
  40b60e:	pusha  
  40b60f:	(bad)  
  40b610:	and    bl,BYTE PTR [ecx-0x41ac1f47]
  40b616:	test   BYTE PTR [edx],ch
  40b618:	ja     0x40b642
  40b61a:	(bad)  
  40b61b:	iret   
  40b61c:	adc    DWORD PTR [ebx-0x7e3931ed],eax
  40b622:	addr16 bnd je 0x40b5b7
  40b626:	mov    bl,0xb
  40b628:	mov    ah,al
  40b62a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62b:	gs stos BYTE PTR es:[edi],al
  40b62d:	stos   DWORD PTR es:[edi],eax
  40b62e:	push   es
  40b62f:	fiadd  DWORD PTR [ebx-0x3efa9e03]
  40b635:	hlt    
  40b636:	mov    edx,0xd790657c
  40b63b:	push   ds
  40b63c:	stc    
  40b63d:	mov    ecx,0x5f59624c
  40b642:	mov    ecx,0xac2ef479
  40b647:	xor    edx,DWORD PTR [ebp-0x1]
  40b64a:	popf   
  40b64b:	int3   
  40b64c:	and    esp,DWORD PTR ds:0xdab8c25d
  40b652:	push   cs
  40b653:	nop
  40b654:	imul   edi,DWORD PTR [eax+ebp*1+0x3284f5f],0xffffffec
  40b65c:	jp     0x40b631
  40b65e:	test   DWORD PTR [eax+0x15],esi
  40b661:	push   ebp
  40b662:	xchg   DWORD PTR [ebx+edx*8-0x7e],ebp
  40b666:	into   
  40b667:	jo     0x40b66b
  40b669:	xor    eax,0xf65011d4
  40b66e:	stc    
  40b66f:	retf   0x995a
  40b672:	jecxz  0x40b63c
  40b674:	jmp    0x8ff7:0x9c9a106c
  40b67b:	loope  0x40b6c0
  40b67d:	mov    esi,0xc8ccbb81
  40b682:	jne    0x40b609
  40b684:	test   eax,0xc1533e3
  40b689:	cwde   
  40b68a:	ret    0xfe9d
  40b68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b68e:	xchg   BYTE PTR [esi-0x2c],bh
  40b691:	int    0x4c
  40b693:	add    ax,0x1e37
  40b697:	aam    0xbb
  40b699:	mov    bh,0xc8
  40b69b:	jle    0x40b6a9
  40b69d:	das    
  40b69e:	sar    esi,1
  40b6a0:	mul    DWORD PTR [eax+ebp*8-0x3d]
  40b6a4:	push   0xdd4624ae
  40b6a9:	mov    cl,cl
  40b6ab:	cmp    eax,0x5a4de5cb
  40b6b0:	pop    es
  40b6b1:	je     0x40b648
  40b6b3:	stc    
  40b6b4:	sar    BYTE PTR [eax+0x29bb4d89],0x6f
  40b6bb:	shl    BYTE PTR [ebx-0x6],cl
  40b6be:	lds    edi,FWORD PTR [edx+0x78]
  40b6c1:	or     al,0xbd
  40b6c3:	mov    bh,0x7c
  40b6c5:	(bad)  
  40b6c6:	mov    edx,0x2ebf7d4e
  40b6cb:	pop    edx
  40b6cc:	sbb    al,0xac
  40b6ce:	cwde   
  40b6cf:	mov    ah,0xf3
  40b6d1:	daa    
  40b6d2:	dec    ebx
  40b6d3:	cs ins DWORD PTR es:[edi],dx
  40b6d5:	into   
  40b6d6:	loop   0x40b748
  40b6d8:	and    eax,0xa585e4a0
  40b6dd:	cmp    BYTE PTR [ecx],bh
  40b6df:	out    0x7,eax
  40b6e1:	clc    
  40b6e2:	and    eax,DWORD PTR [ecx]
  40b6e4:	sbb    BYTE PTR [edi+eax*1],dh
  40b6e7:	xchg   esi,eax
  40b6e8:	idiv   DWORD PTR [eax+ecx*1+0x1391508f]
  40b6ef:	adc    dl,BYTE PTR [eax]
  40b6f1:	xchg   ebp,eax
  40b6f2:	add    edx,ecx
  40b6f4:	add    ah,BYTE PTR [edi+0x553d5fe1]
  40b6fa:	into   
  40b6fb:	and    BYTE PTR [edx+0x43920206],al
  40b701:	xchg   esp,eax
  40b702:	lahf   
  40b703:	cmc    
  40b704:	shr    DWORD PTR [ebx-0x3b6edc9e],0x3e
  40b70b:	pusha  
  40b70c:	or     BYTE PTR [esi+0x44],dh
  40b70f:	xor    ebp,DWORD PTR [ecx]
  40b711:	add    eax,0x73cadbbe
  40b716:	sbb    al,0xa7
  40b718:	aam    0x88
  40b71a:	in     eax,0xb5
  40b71c:	ret    
  40b71d:	fs lahf 
  40b71f:	or     ebp,DWORD PTR [edi-0x5d]
  40b722:	inc    ebp
  40b723:	xchg   esi,eax
  40b724:	ins    BYTE PTR es:[edi],dx
  40b725:	aaa    
  40b726:	jmp    0x40b6fa
  40b728:	push   es
  40b729:	mov    ecx,0xaf63a66d
  40b72e:	mov    edi,0x8cee8f40
  40b733:	cs or  ecx,ebp
  40b736:	outs   dx,BYTE PTR ds:[esi]
  40b737:	cmp    esi,eax
  40b739:	mov    ds:0x89b216cb,eax
  40b73e:	dec    edx
  40b73f:	icebp  
  40b740:	test   DWORD PTR [esi-0x36],esp
  40b743:	jne    0x40b7c3
  40b745:	mov    ecx,0xf890b9e7
  40b74a:	mov    gs,WORD PTR [ebx]
  40b74c:	fisttp WORD PTR [ebp-0x4864b262]
  40b752:	xchg   BYTE PTR [ebp-0x3f],cl
  40b755:	rol    ah,cl
  40b757:	bound  ebp,QWORD PTR es:[edx+0x685b4feb]
  40b75e:	sub    eax,0xb4f6ab03
  40b763:	push   cs
  40b764:	or     ch,BYTE PTR [ecx]
  40b766:	rcl    BYTE PTR [esi+ecx*4-0x50831bc6],0x7
  40b76e:	jae    0x40b794
  40b770:	cmc    
  40b771:	pop    edx
  40b772:	inc    edx
  40b773:	rol    BYTE PTR [edx],0x61
  40b776:	pop    eax
  40b777:	mov    ds:0x9a1f882c,eax
  40b77c:	sbb    DWORD PTR [edi+0xf],ebp
  40b77f:	push   eax
  40b780:	pop    esp
  40b781:	(bad)  
  40b782:	or     DWORD PTR [bp-0x17e],edx
  40b787:	sub    BYTE PTR [ecx+ecx*8+0x50],0x12
  40b78c:	(bad)  
  40b78d:	and    dh,BYTE PTR [ecx+0x775de352]
  40b793:	out    0xcd,al
  40b795:	or     al,BYTE PTR [edx+0x69a99ee0]
  40b79b:	inc    edx
  40b79c:	lods   al,BYTE PTR ds:[esi]
  40b79d:	mov    ecx,0x9dc5610e
  40b7a2:	dec    edi
  40b7a3:	dec    eax
  40b7a4:	and    al,0xdf
  40b7a6:	mov    ebp,0xbc30ece
  40b7ab:	psubd  mm7,mm6
  40b7ae:	dec    edi
  40b7af:	fcomi  st,st(2)
  40b7b1:	sbb    al,0xb4
  40b7b3:	push   0xffffffa2
  40b7b5:	mov    WORD PTR [edi+0x19],?
  40b7b8:	test   DWORD PTR [edi],edx
  40b7ba:	and    al,0xb3
  40b7bc:	mov    ecx,0x6127c59b
  40b7c1:	lods   eax,DWORD PTR ds:[esi]
  40b7c2:	(bad)  [ecx]
  40b7c4:	push   esp
  40b7c5:	aaa    
  40b7c6:	cmp    BYTE PTR [edx-0x2f362df2],dl
  40b7cc:	leave  
  40b7cd:	(bad)  
  40b7ce:	outs   dx,DWORD PTR ds:[esi]
  40b7cf:	or     DWORD PTR [ecx+0x64],edx
  40b7d2:	daa    
  40b7d3:	stos   BYTE PTR es:[edi],al
  40b7d4:	push   0x6a343c1b
  40b7d9:	retf   
  40b7da:	pop    esp
  40b7db:	fwait
  40b7dc:	ret    
  40b7dd:	adc    al,0xef
  40b7df:	inc    ecx
  40b7e0:	jno    0x40b779
  40b7e2:	mov    DWORD PTR [ecx*2-0x4f94acbc],esp
  40b7e9:	scas   eax,DWORD PTR es:[edi]
  40b7ea:	push   ecx
  40b7eb:	retf   0xa358
  40b7ee:	xchg   DWORD PTR [ebp+0x13],edx
  40b7f1:	out    0x17,eax
  40b7f3:	and    al,0xbd
  40b7f5:	cmp    ebx,ecx
  40b7f7:	xchg   edi,eax
  40b7f8:	cmp    BYTE PTR [ebx+eax*8+0x70],dh
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	fs sbb eax,0xa8d5db36
  40b803:	repnz xchg esi,eax
  40b805:	scas   eax,DWORD PTR es:[edi]
  40b806:	jmp    0x9cbf2a76
  40b80b:	mov    al,0x5a
  40b80d:	call   0x4547:0xf70e8c9c
  40b814:	xchg   DWORD PTR [esi-0x9d83509],eax
  40b81a:	push   0xffffff99
  40b81c:	enter  0xa785,0x1b
  40b820:	mov    BYTE PTR [eax+0x50],ah
  40b823:	mov    ds:0xe036d4ae,eax
  40b828:	repnz ins BYTE PTR es:[edi],dx
  40b82a:	iret   
  40b82b:	cmp    DWORD PTR [ecx+0x4b],eax
  40b82e:	ds ins BYTE PTR es:[edi],dx
  40b830:	mov    eax,ds:0x8b78ebd6
  40b835:	dec    dh
  40b837:	and    esi,DWORD PTR [edx-0x54]
  40b83a:	fst    DWORD PTR [edi-0x25567e89]
  40b840:	or     esp,0xfffffff5
  40b843:	mov    al,0xf9
  40b845:	out    0x9c,al
  40b847:	sbb    DWORD PTR [edx-0x6d15d34c],eax
  40b84d:	pop    ebp
  40b84e:	test   eax,0x2057494b
  40b853:	pop    ecx
  40b854:	ja     0x40b867
  40b856:	leave  
  40b857:	gs cmp edx,esp
  40b85a:	cmp    BYTE PTR [ecx],ah
  40b85c:	jb     0x40b805
  40b85e:	and    DWORD PTR [esi],0x14
  40b861:	cld    
  40b862:	or     DWORD PTR [eax+0x32],ebp
  40b865:	shl    BYTE PTR ds:0x47b40cd6,cl
  40b86b:	ficom  WORD PTR [ecx]
  40b86d:	cld    
  40b86e:	xchg   edx,eax
  40b86f:	cs enter 0x7abc,0x4b
  40b874:	mov    al,0xd8
  40b876:	xor    BYTE PTR [ebp+0x7a],al
  40b879:	cdq    
  40b87a:	sub    eax,0x9b74d713
  40b87f:	idiv   BYTE PTR [ebx-0x36721f6]
  40b885:	fcmovu st,st(4)
  40b887:	aas    
  40b888:	xchg   DWORD PTR [edx+eax*8-0x71425c3e],ebx
  40b88f:	(bad)  
  40b890:	lods   al,BYTE PTR ds:[esi]
  40b891:	and    ebx,DWORD PTR [edx-0x5f1b6c0c]
  40b897:	(bad)  
  40b898:	popa   
  40b899:	outs   dx,BYTE PTR ds:[esi]
  40b89a:	mov    cl,0x6a
  40b89c:	fs xchg esp,eax
  40b89e:	xor    al,0xda
  40b8a0:	sub    eax,0x27164a87
  40b8a5:	or     BYTE PTR [edx-0x67282b57],0x51
  40b8ac:	imul   ebp,DWORD PTR [esi],0x80a51985
  40b8b2:	call   0x48d5:0x6e6b9743
  40b8b9:	push   ebx
  40b8ba:	xchg   ebp,eax
  40b8bb:	retf   
  40b8bc:	push   ds
  40b8bd:	fstp   TBYTE PTR ds:0x17626e52
  40b8c3:	cdq    
  40b8c4:	adc    esp,DWORD PTR [edi]
  40b8c6:	add    bh,BYTE PTR ds:0xb02ea158
  40b8cc:	mov    ah,0x4e
  40b8ce:	and    ch,bl
  40b8d0:	scas   eax,DWORD PTR es:[edi]
  40b8d1:	push   cs
  40b8d2:	in     eax,0x5d
  40b8d4:	mov    ecx,0xabfd5b4e
  40b8d9:	adc    al,dl
  40b8db:	retf   0xb03
  40b8de:	mov    BYTE PTR [esi+0x76],bh
  40b8e1:	(bad)  ds:0x99fd7656
  40b8e7:	mov    ds:0x453b31c5,al
  40b8ec:	sbb    al,0x39
  40b8ee:	rdtsc  
  40b8f0:	or     al,0x53
  40b8f2:	lods   al,BYTE PTR ds:[esi]
  40b8f3:	or     ah,ch
  40b8f5:	jae    0x40b8b8
  40b8f7:	pop    eax
  40b8f8:	neg    cl
  40b8fa:	and    ebx,ecx
  40b8fc:	pop    esp
  40b8fd:	jo     0x40b95f
  40b8ff:	imul   ebx,DWORD PTR [edx+0x42976867],0x55897143
  40b909:	clc    
  40b90a:	inc    edx
  40b90b:	lea    edx,[ecx-0x1e]
  40b90e:	mov    ah,0x90
  40b910:	jae    0x40b97f
  40b912:	and    dl,BYTE PTR [esi-0x7d889f7f]
  40b918:	in     al,0x1e
  40b91a:	sub    esp,DWORD PTR [eax-0x3b1b3e3c]
  40b920:	push   ecx
  40b921:	inc    edi
  40b922:	ds cli 
  40b924:	into   
  40b925:	xor    eax,0xa0e1f82a
  40b92a:	test   al,0x21
  40b92c:	mov    eax,ds:0xd73026c2
  40b931:	inc    eax
  40b932:	nop
  40b933:	sti    
  40b934:	xor    bl,0xaa
  40b937:	in     eax,dx
  40b938:	cmp    al,0x7f
  40b93a:	and    BYTE PTR [ebx],0x98
  40b93d:	xor    dh,bl
  40b93f:	das    
  40b940:	or     edx,DWORD PTR [ebp+0xd6f7b19]
  40b946:	or     eax,0x2026501e
  40b94b:	push   cs
  40b94c:	xor    BYTE PTR [edx+esi*4+0x62],bh
  40b950:	jns    0x40b98c
  40b952:	outs   dx,DWORD PTR ds:[esi]
  40b953:	and    ebp,esi
  40b955:	gs xor eax,0x5ac023c9
  40b95b:	jl     0x40b9b1
  40b95d:	mov    ah,0xe5
  40b95f:	hlt    
  40b960:	mov    ?,WORD PTR [edx-0x7d]
  40b963:	std    
  40b964:	scas   al,BYTE PTR es:[edi]
  40b965:	dec    ecx
  40b966:	loop   0x40b974
  40b968:	jae    0x40b9e6
  40b96a:	sub    ebp,edi
  40b96c:	add    al,BYTE PTR [edi+0x10991f0e]
  40b972:	mul    bh
  40b974:	leave  
  40b975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b976:	(bad)  
  40b977:	in     al,dx
  40b978:	push   ss
  40b979:	scas   al,BYTE PTR es:[edi]
  40b97a:	ins    BYTE PTR es:[edi],dx
  40b97b:	mov    ds:0xd57f6a1f,eax
  40b980:	jns    0x40b948
  40b982:	jne    0x40b94f
  40b984:	mov    ebx,0xedfc954b
  40b989:	sub    edi,DWORD PTR ds:0x978790fa
  40b98f:	and    al,BYTE PTR [eax]
  40b991:	ffree  st(5)
  40b993:	je     0x40b9d3
  40b995:	jle    0x40b998
  40b997:	pop    eax
  40b998:	repz sub ecx,eax
  40b99b:	ins    DWORD PTR es:[edi],dx
  40b99c:	cmp    eax,0xfcbe8271
  40b9a1:	test   eax,0x15ad18da
  40b9a6:	pop    es
  40b9a7:	fidiv  WORD PTR [edx]
  40b9a9:	retf   
  40b9aa:	push   0x8104ac33
  40b9af:	xchg   edx,eax
  40b9b0:	in     eax,0x73
  40b9b2:	jp     0x40b9b6
  40b9b4:	enter  0xb9c6,0xdd
  40b9b8:	jb     0x40b9d8
  40b9ba:	les    esi,FWORD PTR [ecx]
  40b9bc:	pusha  
  40b9bd:	addr16 and dl,bh
  40b9c0:	test   ebx,ecx
  40b9c2:	xchg   DWORD PTR [esi],edi
  40b9c4:	loope  0x40b9f6
  40b9c6:	jg     0x40b9ca
  40b9c8:	push   0x4f
  40b9ca:	std    
  40b9cb:	and    ecx,DWORD PTR ds:0xcfd5434e
  40b9d1:	cld    
  40b9d2:	(bad)  
  40b9d3:	test   eax,0x4d21c092
  40b9d8:	or     esp,DWORD PTR [eax+0x54aa9323]
  40b9de:	mov    ebx,0x8f5a38d
  40b9e3:	les    ebp,FWORD PTR [ebp+0x41]
  40b9e6:	aad    0xc
  40b9e8:	ret    0xb24e
  40b9eb:	stos   DWORD PTR es:[edi],eax
  40b9ec:	scas   eax,DWORD PTR es:[edi]
  40b9ed:	mov    esp,0x839450ab
  40b9f2:	or     ebx,DWORD PTR [edx+0x7e6e8af6]
  40b9f8:	xchg   esp,eax
  40b9f9:	in     eax,0x66
  40b9fb:	jae    0x40b9fe
  40b9fd:	inc    edi
  40b9fe:	or     dl,BYTE PTR [ebp-0x1f]
  40ba01:	xor    DWORD PTR [esi-0x36972e6b],0xfffffff2
  40ba08:	sbb    dh,BYTE PTR [edi-0x69]
  40ba0b:	mov    dh,0xd3
  40ba0d:	icebp  
  40ba0e:	jo     0x40ba41
  40ba10:	out    0x80,al
  40ba12:	mov    DWORD PTR [ebx+0x52],ebp
  40ba15:	xor    DWORD PTR [ebx],0x9446acb7
  40ba1b:	xor    BYTE PTR [edx-0x16],bh
  40ba1e:	jmp    0x347:0x489da801
  40ba25:	push   ds
  40ba26:	stc    
  40ba27:	(bad)  
  40ba28:	and    edx,DWORD PTR [ecx+ebp*1]
  40ba2b:	xor    eax,0x3d3ce45a
  40ba30:	cmp    ebx,0xffffffa5
  40ba33:	dec    ebp
  40ba34:	ds gs mov ch,0x1
  40ba38:	or     DWORD PTR [ebx-0x4c2f8944],edi
  40ba3e:	pusha  
  40ba3f:	out    dx,eax
  40ba40:	shl    edx,1
  40ba42:	test   DWORD PTR [eax],edx
  40ba44:	add    al,bh
  40ba46:	aaa    
  40ba47:	ins    BYTE PTR es:[edi],dx
  40ba48:	sahf   
  40ba49:	push   esi
  40ba4a:	outs   dx,DWORD PTR ds:[esi]
  40ba4b:	or     ebp,edx
  40ba4d:	mov    esi,0x50a8087b
  40ba52:	minps  xmm2,xmm7
  40ba55:	and    ch,BYTE PTR [esi-0x58]
  40ba58:	ror    DWORD PTR [ecx+edi*2-0x1bcaae1e],1
  40ba5f:	sbb    al,BYTE PTR [ebx-0xe]
  40ba62:	push   esi
  40ba63:	out    0xf8,eax
  40ba65:	pushf  
  40ba66:	mov    ah,0xfd
  40ba68:	xchg   ebp,eax
  40ba69:	(bad)  [edx]
  40ba6b:	push   esp
  40ba6c:	ror    ebp,cl
  40ba6e:	div    al
  40ba70:	clc    
  40ba71:	push   cs
  40ba72:	test   bl,cl
  40ba74:	mov    eax,0xfd8cd03
  40ba79:	sbb    edx,DWORD PTR [edi+0x22]
  40ba7c:	or     al,0x32
  40ba7e:	icebp  
  40ba7f:	in     al,0x90
  40ba81:	add    BYTE PTR [ecx],ch
  40ba83:	pop    es
  40ba84:	or     DWORD PTR [eax-0x51556ce4],0xffffff8e
  40ba8b:	dec    esp
  40ba8c:	mov    dh,0x97
  40ba8e:	cwde   
  40ba8f:	jmp    0x2e93e8d1
  40ba94:	push   0x4d120c26
  40ba99:	int3   
  40ba9a:	jp     0x40ba3a
  40ba9c:	xor    cl,BYTE PTR [edi-0x4e]
  40ba9f:	xchg   esp,eax
  40baa0:	sbb    DWORD PTR [eax-0x4b42a211],edx
  40baa6:	imul   ecx,DWORD PTR [edx+ebp*8],0x66a96627
  40baad:	stos   DWORD PTR es:[edi],eax
  40baae:	out    dx,eax
  40baaf:	or     DWORD PTR [edx-0x6fc8063e],esi
  40bab5:	aas    
  40bab6:	xor    DWORD PTR [ecx+0x2d7d60d2],edx
  40babc:	push   edx
  40babd:	fwait
  40babe:	xchg   al,ch
  40bac0:	lds    edi,FWORD PTR [ebx]
  40bac2:	mov    ebp,0x3a457f6b
  40bac7:	(bad)  
  40bac8:	jg     0x40bb32
  40baca:	xor    esi,esp
  40bacc:	sbb    al,BYTE PTR [esi-0x7464873c]
  40bad2:	pop    eax
  40bad3:	push   edx
  40bad4:	sbb    al,0xa1
  40bad6:	stos   BYTE PTR es:[edi],al
  40bad7:	mov    ch,0x37
  40bad9:	fnstcw WORD PTR [eax+ebp*2]
  40badc:	pusha  
  40badd:	mov    dl,0x56
  40badf:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40bae1:	(bad)  
  40bae3:	cmp    esi,edx
  40bae5:	ds inc edi
  40bae7:	xor    eax,0x18b02c44
  40baec:	fisttp WORD PTR [esi+0x64188368]
  40baf2:	test   DWORD PTR [esi-0x6bad117],ecx
  40baf8:	imul   ebp,ecx,0xfffffffd
  40bafb:	imul   eax,DWORD PTR [esi+0x6a],0x37
  40baff:	fs pop ecx
  40bb01:	shl    ebp,1
  40bb03:	push   edx
  40bb04:	jne    0x40bb01
  40bb06:	sub    eax,0xfaecf276
  40bb0b:	loopne 0x40bb86
  40bb0d:	sbb    eax,0x864e05a9
  40bb12:	add    al,0xfa
  40bb14:	push   edx
  40bb15:	xor    eax,0x475286ab
  40bb1a:	mov    ah,0xfe
  40bb1c:	xchg   ecx,eax
  40bb1d:	push   es
  40bb1e:	dec    ecx
  40bb1f:	fmul   QWORD PTR [ecx-0x79]
  40bb22:	ficom  WORD PTR [edx-0x1b7d4164]
  40bb28:	aas    
  40bb29:	and    al,0xd4
  40bb2b:	adc    al,0x15
  40bb2d:	push   edx
  40bb2e:	in     al,0xbd
  40bb30:	fsub   QWORD PTR [eax+0x486ac1c4]
  40bb36:	popa   
  40bb37:	sbb    BYTE PTR [ebp+ebp*8+0x22],bh
  40bb3b:	cmp    ebp,eax
  40bb3d:	add    BYTE PTR [ebp+eiz*1-0x6b],bl
  40bb41:	jle    0x40bb34
  40bb43:	dec    esp
  40bb44:	add    BYTE PTR [eax+0x6e],dl
  40bb47:	cld    
  40bb48:	std    
  40bb49:	mov    bh,ah
  40bb4b:	int3   
  40bb4c:	in     al,dx
  40bb4d:	outs   dx,BYTE PTR ds:[esi]
  40bb4e:	es (bad) 
  40bb50:	sahf   
  40bb51:	aam    0x27
  40bb53:	add    eax,0x178ac9c7
  40bb58:	mov    al,ds:0x80d842
  40bb5d:	pop    ecx
  40bb5e:	jmp    0x40bbde
  40bb60:	pop    ebx
  40bb61:	add    BYTE PTR [ecx-0x5ebcef3f],cl
  40bb67:	bound  ecx,QWORD PTR [eax+0x47]
  40bb6a:	lea    edx,[eiz*2+0x10d79410]
  40bb71:	cdq    
  40bb72:	or     dh,bl
  40bb74:	pop    ds
  40bb75:	aad    0x91
  40bb77:	jno    0x40bbb1
  40bb79:	aam    0x16
  40bb7b:	pop    es
  40bb7c:	cmp    DWORD PTR [edi-0x1d],0x9d2ffc37
  40bb83:	mov    ah,0x6a
  40bb85:	jge    0x40bb55
  40bb87:	call   0x78e7d1c4
  40bb8c:	cmp    BYTE PTR es:[ebx-0x61],al
  40bb90:	dec    esp
  40bb91:	mov    ebp,0xcbf28d88
  40bb96:	xchg   edx,eax
  40bb97:	out    0xef,eax
  40bb99:	mov    ebx,DWORD PTR [esi]
  40bb9b:	or     eax,0x8f6937d4
  40bba0:	into   
  40bba1:	ins    DWORD PTR es:[edi],dx
  40bba2:	ret    0x4f37
  40bba5:	popf   
  40bba6:	mov    DWORD PTR [eax],esi
  40bba8:	inc    eax
  40bba9:	sub    eax,0x1f48c695
  40bbae:	stos   DWORD PTR es:[edi],eax
  40bbaf:	pop    ds
  40bbb0:	sar    BYTE PTR [eax+0x5a7f128f],0x85
  40bbb7:	or     eax,0x36d1e14a
  40bbbc:	add    al,0x38
  40bbbe:	shr    DWORD PTR [ecx],1
  40bbc0:	(bad)  
  40bbc1:	ins    BYTE PTR es:[edi],dx
  40bbc2:	pop    ebp
  40bbc3:	pop    ds
  40bbc4:	mov    edi,0xf6ce6581
  40bbc9:	sbb    al,0xc1
  40bbcb:	xor    al,0x16
  40bbcd:	pop    ebx
  40bbce:	mov    ecx,0x299b9a82
  40bbd3:	js     0x40bbc4
  40bbd5:	jae    0x40bbb6
  40bbd7:	sbb    dh,BYTE PTR [eax]
  40bbd9:	(bad)  
  40bbda:	mov    ds:0x952b387,eax
  40bbdf:	jle    0x40bbeb
  40bbe1:	xchg   ecx,eax
  40bbe2:	test   BYTE PTR [eax+0x86f7a24],al
  40bbe8:	inc    ebx
  40bbe9:	nop
  40bbea:	lea    esp,[edi+0x400f480c]
  40bbf0:	adc    esi,DWORD PTR [ebp+0x12f2469f]
  40bbf6:	xor    eax,0x56791570
  40bbfb:	out    0xfc,eax
  40bbfd:	das    
  40bbfe:	in     eax,dx
  40bbff:	mov    eax,0xac933983
  40bc04:	push   ecx
  40bc05:	jle    0x40bc84
  40bc07:	shr    DWORD PTR [ebx],cl
  40bc09:	sbb    BYTE PTR [ecx],al
  40bc0b:	dec    edi
  40bc0c:	sbb    al,0x2
  40bc0e:	push   esp
  40bc0f:	adc    edi,DWORD PTR [edx-0x217d3681]
  40bc15:	xchg   ecx,eax
  40bc16:	xchg   edi,eax
  40bc17:	xor    eax,0xe1c5203f
  40bc1c:	jp     0x40bc8a
  40bc1e:	jbe    0x40bc12
  40bc20:	lods   al,BYTE PTR ds:[esi]
  40bc21:	xor    eax,DWORD PTR [edx+eiz*8-0x56]
  40bc25:	pushw  ss
  40bc27:	fstp   DWORD PTR [ebx-0x4f]
  40bc2a:	push   ds
  40bc2b:	in     eax,dx
  40bc2c:	jno    0x40bc8e
  40bc2e:	sbb    BYTE PTR [edx+0x45edb453],0x89
  40bc35:	sub    ecx,0xffffffef
  40bc38:	fwait
  40bc39:	je     0x40bc0a
  40bc3b:	cli    
  40bc3c:	arpl   ax,dx
  40bc3e:	repz test BYTE PTR [esi-0x3e3ee129],cl
  40bc45:	inc    ebp
  40bc46:	pop    ebx
  40bc47:	fiadd  DWORD PTR [eax+0x6615b509]
  40bc4d:	and    eax,ebx
  40bc4f:	add    al,0xf6
  40bc51:	imul   ecx,DWORD PTR [ebp-0x2cde6379],0x0
  40bc58:	outs   dx,BYTE PTR ds:[esi]
  40bc59:	imul   esp,DWORD PTR [edi],0xfaa1108
  40bc5f:	aaa    
  40bc60:	or     edx,esp
  40bc62:	ret    0x745d
  40bc65:	push   esp
  40bc66:	stos   DWORD PTR es:[edi],eax
  40bc67:	xchg   esi,eax
  40bc68:	mov    ebx,DWORD PTR [eax]
  40bc6a:	into   
  40bc6b:	loopne 0x40bc87
  40bc6d:	ffreep st(2)
  40bc6f:	push   es
  40bc70:	mov    dh,0x98
  40bc72:	loope  0x40bcb1
  40bc74:	cwde   
  40bc75:	jge    0x40bcd1
  40bc77:	xor    edx,ebp
  40bc79:	outs   dx,BYTE PTR ds:[esi]
  40bc7a:	xchg   DWORD PTR ss:[edi],edx
  40bc7d:	cmp    eax,DWORD PTR [esi]
  40bc7f:	jns    0x40bcc6
  40bc81:	pop    edi
  40bc82:	xchg   DWORD PTR [ebx-0x47],ecx
  40bc85:	inc    edi
  40bc86:	fs jl  0x40bc37
  40bc89:	es std 
  40bc8b:	cmp    BYTE PTR [ebp+0x72],cl
  40bc8e:	icebp  
  40bc8f:	push   esp
  40bc90:	xchg   ebx,eax
  40bc91:	jp     0x40bceb
  40bc93:	inc    ebx
  40bc94:	mov    cl,0x26
  40bc96:	int3   
  40bc97:	mov    ebx,0x38eb91b6
  40bc9c:	xchg   edx,eax
  40bc9d:	jmp    0x7374:0x3cfdb797
  40bca4:	loop   0x40bcff
  40bca6:	push   ebp
  40bca7:	iret   
  40bca8:	mov    ebp,0xafcbd73b
  40bcad:	xor    cl,0x60
  40bcb0:	sbb    dl,BYTE PTR [eax+0x64]
  40bcb3:	xchg   DWORD PTR [edx+0x69],ecx
  40bcb6:	inc    esi
  40bcb7:	leave  
  40bcb8:	pop    ss
  40bcb9:	sbb    eax,0x146f01e9
  40bcbe:	shl    edi,cl
  40bcc0:	jnp    0x40bd29
  40bcc2:	sbb    DWORD PTR [edi+ebp*4+0x54],edx
  40bcc6:	xchg   ebx,eax
  40bcc7:	sbb    al,0xe7
  40bcc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcca:	adc    eax,0xf9d85c08
  40bccf:	dec    esi
  40bcd0:	sbb    ah,BYTE PTR [ebx]
  40bcd2:	and    DWORD PTR [ebx+0x7f32c7c3],esp
  40bcd8:	sub    al,0x67
  40bcda:	pop    esp
  40bcdb:	rcl    DWORD PTR [edx+0x3d77ee33],1
  40bce1:	cmp    al,dl
  40bce3:	les    eax,FWORD PTR [ebp+0x39678000]
  40bce9:	lds    edx,FWORD PTR [eax-0x27051b6]
  40bcef:	xchg   ecx,eax
  40bcf0:	outs   dx,BYTE PTR ds:[esi]
  40bcf1:	jle    0x40bd1b
  40bcf3:	idiv   BYTE PTR [esi+0xc]
  40bcf6:	daa    
  40bcf7:	jecxz  0x40bcb8
  40bcf9:	(bad)  
  40bcfa:	sar    BYTE PTR ds:[edi-0x1b7fd76f],1
  40bd01:	inc    ecx
  40bd02:	push   eax
  40bd03:	adc    eax,0x38b3476f
  40bd08:	popf   
  40bd09:	adc    al,0x19
  40bd0b:	fidiv  WORD PTR [ebx]
  40bd0d:	jge    0x40bd2f
  40bd0f:	call   0xa24fc4de
  40bd14:	dec    esi
  40bd15:	pop    edi
  40bd16:	add    DWORD PTR [eax],esp
  40bd18:	loopne 0x40bd14
  40bd1a:	out    dx,eax
  40bd1b:	test   al,0xc5
  40bd1d:	leave  
  40bd1e:	ins    BYTE PTR es:[edi],dx
  40bd1f:	adc    al,0x6b
  40bd21:	adc    BYTE PTR [edi],bl
  40bd23:	(bad)  
  40bd25:	leave  
  40bd26:	or     DWORD PTR [ebx+edi*4-0x6ceac1cc],eax
  40bd2d:	xchg   BYTE PTR [edi+0x6c5754e6],cl
  40bd33:	pop    ecx
  40bd34:	mov    edx,0xd3e3ec29
  40bd39:	sub    al,BYTE PTR ds:0x6606cc03
  40bd3f:	lea    esp,[edi-0x11]
  40bd42:	(bad)  
  40bd43:	int3   
  40bd44:	mov    ds:0x30fd388b,al
  40bd49:	xlat   BYTE PTR ds:[ebx]
  40bd4a:	cwde   
  40bd4b:	lods   al,BYTE PTR ds:[esi]
  40bd4c:	add    edi,eax
  40bd4e:	sbb    dh,0x3c
  40bd51:	mov    edi,DWORD PTR [edi-0x163973f]
  40bd57:	sar    al,1
  40bd59:	aam    0xac
  40bd5b:	outs   dx,BYTE PTR ds:[esi]
  40bd5c:	lahf   
  40bd5d:	adc    DWORD PTR [eax+ebp*2+0x2d],esp
  40bd61:	adc    cl,BYTE PTR [ebp-0x21cf032a]
  40bd67:	in     al,dx
  40bd68:	push   0xffffffcd
  40bd6a:	xchg   ecx,eax
  40bd6b:	inc    esi
  40bd6c:	leave  
  40bd6d:	xor    BYTE PTR [ecx+0x26],0x92
  40bd71:	xchg   esi,eax
  40bd72:	mov    bh,0x28
  40bd74:	jns    0x40bd48
  40bd76:	ds push ebx
  40bd78:	imul   ecx,edi,0x1c
  40bd7b:	arpl   WORD PTR [eax-0x52],sp
  40bd7e:	je     0x40bd2d
  40bd80:	inc    edx
  40bd81:	cmp    DWORD PTR [ecx],ecx
  40bd83:	(bad)  
  40bd84:	inc    edi
  40bd85:	push   0xffffffe2
  40bd87:	ja     0x40bd12
  40bd89:	ja     0x40bd38
  40bd8b:	hlt    
  40bd8c:	push   cs
  40bd8d:	inc    ecx
  40bd8e:	jg     0x40bd93
  40bd90:	inc    edi
  40bd91:	aad    0x94
  40bd93:	aaa    
  40bd94:	sbb    al,0xfa
  40bd96:	or     BYTE PTR [eax+edi*2+0x4507f2d7],dh
  40bd9d:	cmp    ah,ah
  40bd9f:	sahf   
  40bda0:	aaa    
  40bda1:	push   ebx
  40bda2:	sub    dl,bh
  40bda4:	je     0x40bd3a
  40bda6:	dec    ecx
  40bda7:	fcmovne st,st(0)
  40bda9:	stos   BYTE PTR es:[edi],al
  40bdaa:	push   ds
  40bdab:	adc    BYTE PTR [eax+0x15],0x1e
  40bdaf:	retf   0x4a62
  40bdb2:	bsf    ebx,DWORD PTR [esi-0x5c14a8d3]
  40bdb9:	ficomp DWORD PTR [esi+0x3d5cd6cc]
  40bdbf:	scas   al,BYTE PTR es:[edi]
  40bdc0:	clc    
  40bdc1:	fld    TBYTE PTR [eax]
  40bdc3:	or     al,BYTE PTR [eax+0x69]
  40bdc6:	mov    esp,DWORD PTR [edi-0x15]
  40bdc9:	jb     0x40be3e
  40bdcb:	stos   DWORD PTR es:[edi],eax
  40bdcc:	xor    ecx,ecx
  40bdce:	xchg   esp,eax
  40bdcf:	add    eax,0xbf9dc2ee
  40bdd4:	call   0x5ed3:0x10a2b256
  40bddb:	xor    BYTE PTR [eax+0x3d],bl
  40bdde:	jae    0x40bd73
  40bde0:	cdq    
  40bde1:	xor    dl,BYTE PTR [ebx+ecx*4+0x7ddb3647]
  40bde8:	in     al,0xf7
  40bdea:	in     eax,dx
  40bdeb:	or     al,0xa2
  40bded:	jb     0x40bdd3
  40bdef:	mov    dh,0x36
  40bdf1:	mov    eax,0xab5d006a
  40bdf6:	mov    al,0xef
  40bdf8:	or     BYTE PTR [esp+ebx*2],0x26
  40bdfc:	and    bl,BYTE PTR [ebp+0xb889f5b]
  40be02:	mov    dl,0xe
  40be04:	int    0xd9
  40be06:	inc    edi
  40be07:	cmp    DWORD PTR [ebx+0x49],edi
  40be0a:	cmp    cl,BYTE PTR [edi]
  40be0c:	in     al,0xb1
  40be0e:	xchg   BYTE PTR [esi],bl
  40be10:	or     BYTE PTR [ecx-0x18a25bfe],dh
  40be16:	nop
  40be17:	xor    DWORD PTR [eax+0xe6316c8],esp
  40be1d:	add    dh,ah
  40be1f:	iret   
  40be20:	out    dx,al
  40be21:	stos   DWORD PTR es:[edi],eax
  40be22:	mov    dh,0x88
  40be24:	or     DWORD PTR [edx-0x7],0x2d
  40be28:	frstor [ebx+eax*8-0x1665a75e]
  40be2f:	jae    0x40bde6
  40be31:	xchg   DWORD PTR [edx],esp
  40be33:	into   
  40be34:	ins    BYTE PTR es:[edi],dx
  40be35:	mov    al,ds:0xe26116a7
  40be3a:	jecxz  0x40be81
  40be3c:	adc    al,0x9c
  40be3e:	les    ebp,FWORD PTR [edx+ebx*4+0x7]
  40be42:	and    edx,ebx
  40be44:	rol    BYTE PTR [ecx],0x69
  40be47:	jno    0x40be4a
  40be49:	inc    esp
  40be4a:	scas   al,BYTE PTR es:[edi]
  40be4b:	enter  0xa08e,0x84
  40be4f:	or     edx,ebx
  40be51:	mov    dh,0xc
  40be53:	pushf  
  40be54:	cs das 
  40be56:	cld    
  40be57:	inc    ebx
  40be58:	sub    eax,0x640961ee
  40be5d:	dec    edx
  40be5e:	mov    DWORD PTR [eax+0x59],edi
  40be61:	(bad)  
  40be62:	push   0xffffffed
  40be64:	push   edi
  40be65:	out    dx,al
  40be66:	fcom   st(1)
  40be68:	mov    edx,0xdf04ce4a
  40be6d:	fnstsw WORD PTR [ebx+eiz*2]
  40be70:	stc    
  40be71:	ins    DWORD PTR es:[edi],dx
  40be72:	adc    BYTE PTR [eax-0x50],0xc1
  40be76:	and    al,0xe8
  40be78:	rcl    ebx,1
  40be7a:	pop    ebp
  40be7b:	sub    eax,0x5ca7a0fd
  40be80:	push   ss
  40be81:	push   ecx
  40be82:	jns    0x40be12
  40be84:	mov    ecx,0x8896eef8
  40be89:	fist   DWORD PTR [esi+ecx*4-0x1a6af8fd]
  40be90:	mov    edx,edi
  40be92:	ficom  DWORD PTR [eax-0x23]
  40be95:	(bad)  
  40be96:	fsub   QWORD PTR [eax]
  40be98:	mov    eax,0xa15c7f24
  40be9d:	mov    eax,0xc4dbc815
  40bea2:	pop    ebp
  40bea3:	sub    BYTE PTR [ecx-0x28fc15ef],ah
  40bea9:	xor    esp,DWORD PTR [ecx]
  40beab:	cs mov bh,0x67
  40beae:	jle    0x40beff
  40beb0:	fs loopne 0x40be3f
  40beb3:	push   eax
  40beb4:	dec    eax
  40beb5:	mov    al,ds:0xce165b1d
  40beba:	jne    0x40beaf
  40bebc:	add    ah,BYTE PTR [ebp+eiz*1+0x3b]
  40bec0:	mov    eax,ds:0x78353721
  40bec5:	jae    0x40bef2
  40bec7:	push   edi
  40bec8:	js     0x40be84
  40beca:	inc    ebp
  40becb:	pop    edi
  40becc:	or     ch,BYTE PTR [ebx+0xbe99e6d]
  40bed2:	mov    BYTE PTR ds:0x28576827,bl
  40bed8:	inc    esi
  40bed9:	add    eax,0x978fb5eb
  40bede:	mov    BYTE PTR [edx+esi*2+0x6fc67ddc],dl
  40bee5:	mov    al,ds:0xf4b83e03
  40beea:	fwait
  40beeb:	outs   dx,BYTE PTR ds:[esi]
  40beec:	xchg   ebx,eax
  40beed:	ret    
  40beee:	mov    ecx,0x8cba54b9
  40bef3:	dec    esi
  40bef4:	(bad)  
  40bef5:	in     eax,0x61
  40bef7:	dec    ecx
  40bef8:	pop    ecx
  40bef9:	test   al,0xd5
  40befb:	call   0x86dd:0x977662cf
  40bf02:	mov    ds:0xe3f02190,al
  40bf07:	fbstp  TBYTE PTR [eax]
  40bf09:	into   
  40bf0a:	stos   BYTE PTR es:[edi],al
  40bf0b:	mov    ds:0xd0979331,al
  40bf10:	mov    bh,0x4c
  40bf12:	sub    ah,cl
  40bf14:	mov    ds,WORD PTR [ecx+edi*4-0xa03a6d8]
  40bf1b:	(bad)  
  40bf1c:	enter  0x17f4,0xd7
  40bf20:	adc    eax,0x6ed91414
  40bf25:	mov    bl,0xd
  40bf27:	pusha  
  40bf28:	stc    
  40bf29:	nop
  40bf2a:	push   ds
  40bf2b:	push   0xa7d78b90
  40bf30:	sub    ah,BYTE PTR [edi-0x32]
  40bf33:	ds sub eax,0x760c6159
  40bf39:	sub    BYTE PTR [ecx+0x15],bl
  40bf3c:	shr    BYTE PTR [ecx+ecx*4-0x15],cl
  40bf40:	inc    esi
  40bf41:	fcom   DWORD PTR [eax+0x3567b356]
  40bf47:	mov    dl,0x79
  40bf49:	push   eax
  40bf4a:	nop
  40bf4b:	add    esp,edi
  40bf4d:	lods   al,BYTE PTR ds:[esi]
  40bf4e:	cmp    DWORD PTR [ebx+0x1bcb631b],0x7ad481cb
  40bf58:	rcl    DWORD PTR [esi-0xa],0x42
  40bf5c:	sub    DWORD PTR [ecx-0x71],esi
  40bf5f:	pushf  
  40bf60:	sbb    al,0x3c
  40bf62:	jne    0x40bfc9
  40bf64:	fld    DWORD PTR [esi+0x40ce3831]
  40bf6a:	xor    ebx,edi
  40bf6c:	mov    ch,0xf0
  40bf6e:	fsub   QWORD PTR ds:0x5f10b165
  40bf74:	pop    ebp
  40bf75:	pop    edi
  40bf76:	inc    esp
  40bf77:	out    dx,al
  40bf78:	xor    DWORD PTR [edx-0x6a],0xe5a6bbaf
  40bf7f:	dec    esp
  40bf80:	fdiv   DWORD PTR [ecx+0xc]
  40bf83:	mov    cl,ah
  40bf85:	push   ebx
  40bf86:	jnp    0x40bfb3
  40bf88:	call   0xbc2d:0x4fb56644
  40bf8f:	mov    bl,BYTE PTR fs:0x9dd6b8bd
  40bf96:	sub    eax,0xbc3511cc
  40bf9b:	mov    WORD PTR [ecx+0x58],fs
  40bf9e:	lods   eax,DWORD PTR ds:[esi]
  40bf9f:	mov    ebp,0xa0b82415
  40bfa4:	and    BYTE PTR [edi],al
  40bfa6:	inc    ebx
  40bfa7:	xchg   esi,eax
  40bfa8:	test   al,0x3
  40bfaa:	adc    BYTE PTR [eax],0xfe
  40bfad:	jmp    0x81eb:0xc00c60bb
  40bfb4:	hlt    
  40bfb5:	aad    0xb1
  40bfb7:	popa   
  40bfb8:	frstor [edi-0x1a]
  40bfbb:	sub    DWORD PTR [eax],ebx
  40bfbd:	ins    DWORD PTR es:[edi],dx
  40bfbe:	test   eax,0xaf1ed2a7
  40bfc3:	(bad)  
  40bfc4:	push   0xef7e1857
  40bfc9:	sbb    edx,DWORD PTR [edx+0x722eda04]
  40bfcf:	xchg   ecx,ebx
  40bfd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfd2:	and    DWORD PTR [ebp+0x14101c9b],ebx
  40bfd8:	jmp    0x577b4ebf
  40bfdd:	aad    0x24
  40bfdf:	jg     0x40bffa
  40bfe1:	mov    ecx,0x22bd7a91
  40bfe6:	shl    BYTE PTR cs:[ebx-0x7516d94b],0x3
  40bfee:	addr16 pop es
  40bff0:	or     al,BYTE PTR [eax+ebp*4+0x64]
  40bff4:	pusha  
  40bff5:	or     DWORD PTR [edx+edx*4+0x21],ebp
  40bff9:	sub    al,0xde
  40bffb:	jo     0x40c038
  40bffd:	hlt    
  40bffe:	sub    BYTE PTR [esi+0x1c210b4d],ah
  40c004:	cmp    BYTE PTR [ebp+0x7b],ah
  40c007:	jne    0x40bfa0
  40c009:	pop    ds
  40c00a:	sbb    al,0xb8
  40c00c:	in     eax,0x9f
  40c00e:	jno    0x40bfae
  40c010:	icebp  
  40c011:	ja     0x40c073
  40c013:	int    0x92
  40c015:	sti    
  40c016:	ja     0x40c077
  40c018:	mov    eax,0xddc60222
  40c01d:	cmp    al,al
  40c01f:	lahf   
  40c020:	(bad)  
  40c023:	dec    eax
  40c024:	or     ebp,DWORD PTR [esi+0x71]
  40c027:	mov    BYTE PTR [eax+0x10],dl
  40c02a:	lea    ebp,[esi-0x36]
  40c02d:	pusha  
  40c02e:	xor    al,0x57
  40c030:	jg     0x40bfeb
  40c032:	cmp    BYTE PTR [esi+eiz*4-0x54],dl
  40c036:	dec    eax
  40c037:	rcl    BYTE PTR [edi-0x45ffa281],cl
  40c03d:	adc    al,0xcd
  40c03f:	mov    WORD PTR [esi-0x66],cs
  40c042:	cmp    eax,0xe060649c
  40c047:	inc    eax
  40c048:	pop    ss
  40c049:	push   ecx
  40c04a:	sub    BYTE PTR [ecx+0x4f3322ed],dh
  40c050:	inc    ecx
  40c051:	push   es
  40c052:	xchg   esi,eax
  40c053:	(bad)  
  40c055:	in     eax,0x6d
  40c057:	and    BYTE PTR ds:0x9466f517,0x29
  40c05e:	ret    
  40c05f:	out    dx,eax
  40c060:	add    esp,esp
  40c062:	xchg   ebx,eax
  40c063:	push   ebx
  40c064:	inc    ecx
  40c065:	int3   
  40c066:	pusha  
  40c067:	sub    ebp,DWORD PTR [esi+0xd]
  40c06a:	dec    eax
  40c06b:	adc    eax,0x156a0e5f
  40c070:	jns    0x40bff9
  40c072:	jmp    0xff48:0x189b4d8e
  40c079:	push   DWORD PTR [eax+0x5aa6207]
  40c07f:	cmc    
  40c080:	jecxz  0x40c052
  40c082:	adc    edi,DWORD PTR [ebp+eax*4-0xcd19790]
  40c089:	mov    ebx,0x7ef7bdcf
  40c08e:	aad    0x7b
  40c090:	retf   
  40c091:	adc    al,0x6f
  40c093:	sbb    eax,0xa16165cb
  40c098:	inc    edi
  40c099:	lea    ebp,[edi-0x72]
  40c09c:	fucomip st,st(4)
  40c09e:	outs   dx,DWORD PTR ds:[esi]
  40c09f:	push   esp
  40c0a0:	test   DWORD PTR [edx-0x70e79a7a],esp
  40c0a6:	icebp  
  40c0a7:	xchg   esi,eax
  40c0a8:	mov    BYTE PTR [ebp+0x26024e0b],cl
  40c0ae:	test   eax,0x34e1c9fd
  40c0b3:	cld    
  40c0b4:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40c0b6:	pop    es
  40c0b7:	xor    al,0x14
  40c0b9:	repnz cwde 
  40c0bb:	or     ebp,edx
  40c0bd:	(bad)
  40c0c0:	mov    BYTE PTR [eax-0x7e469d6d],cl
  40c0c6:	push   cs
  40c0c7:	mov    cs,WORD PTR [edx-0x77]
  40c0ca:	rcr    DWORD PTR [edx+0x655a797a],1
  40c0d0:	adc    DWORD PTR [eax+0x51],esi
  40c0d3:	fisttp DWORD PTR [ebp+0x54c511b1]
  40c0d9:	adc    ecx,esp
  40c0db:	inc    ebp
  40c0dc:	lods   al,BYTE PTR ds:[esi]
  40c0dd:	dec    edx
  40c0de:	add    BYTE PTR [edi],dl
  40c0e0:	pushf  
  40c0e1:	jbe    0x40c079
  40c0e3:	ds push ebx
  40c0e5:	ret    0xe482
  40c0e8:	xchg   edx,eax
  40c0e9:	jnp    0x40c13c
  40c0eb:	inc    ecx
  40c0ec:	stos   BYTE PTR es:[edi],al
  40c0ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0ee:	ds out 0xff,eax
  40c0f1:	push   ebx
  40c0f2:	jg     0x40c0f4
  40c0f4:	dec    eax
  40c0f5:	mov    dh,0xff
  40c0f7:	lds    esp,FWORD PTR [eax-0x40846621]
  40c0fd:	popf   
  40c0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0ff:	addr16 mov dh,0xfe
  40c102:	out    0x32,eax
  40c104:	in     al,0x4b
  40c106:	dec    eax
  40c107:	jg     0x40c17b
  40c109:	(bad)  
  40c10a:	sub    eax,0x1e4009c0
  40c10f:	test   al,0x30
  40c111:	mov    al,0xe2
  40c113:	enter  0x82e,0xe3
  40c117:	pop    ds
  40c118:	les    esp,FWORD PTR [ecx+0x6cc9dbaf]
  40c11e:	pop    ebx
  40c11f:	stos   BYTE PTR es:[edi],al
  40c120:	(bad)  
  40c121:	or     DWORD PTR [ebx],esp
  40c123:	adc    ecx,DWORD PTR [edx+0x16]
  40c126:	not    BYTE PTR [edi-0x3ac6f74a]
  40c12c:	push   ebp
  40c12d:	out    dx,eax
  40c12e:	push   edi
  40c12f:	pushf  
  40c130:	loop   0x40c1a1
  40c132:	(bad)  
  40c133:	or     DWORD PTR [ebp*8-0x7f47b217],ebp
  40c13a:	into   
  40c13b:	add    BYTE PTR [edx],0x31
  40c13e:	scas   eax,DWORD PTR es:[edi]
  40c13f:	sub    bl,BYTE PTR [esi-0x7c667aec]
  40c145:	(bad)  
  40c146:	jmp    0x40c125
  40c148:	ds out 0x43,eax
  40c14b:	adc    al,BYTE PTR [ecx+0x4f1adc2a]
  40c151:	xor    eax,0x21ee5d73
  40c156:	clc    
  40c157:	push   edi
  40c158:	ja     0x40c144
  40c15a:	mov    ah,0xdc
  40c15c:	fadd   DWORD PTR [eax]
  40c15e:	xlat   BYTE PTR ds:[ebx]
  40c15f:	cmp    BYTE PTR [ecx+0x21],cl
  40c162:	sbb    eax,0xa327ea7f
  40c167:	push   0x9d94b6a
  40c16c:	cdq    
  40c16d:	add    DWORD PTR [ebx-0x1a],ebp
  40c170:	les    edi,FWORD PTR [esi-0x70f0203e]
  40c176:	mov    ch,0x1b
  40c178:	jbe    0x40c116
  40c17a:	xor    edi,edx
  40c17c:	add    BYTE PTR [ecx-0x7a],dh
  40c17f:	mov    ch,BYTE PTR [esi-0xe03bf4e]
  40c185:	or     eax,0x36bb5b64
  40c18a:	repnz pushf 
  40c18c:	xchg   DWORD PTR [esi+0x34],esp
  40c18f:	jl     0x40c111
  40c191:	xchg   ebx,eax
  40c192:	add    BYTE PTR [eax-0x13],bh
  40c195:	imul   ebp,esp,0xa7f14b5e
  40c19b:	xchg   BYTE PTR [edi-0x39b7b328],ch
  40c1a1:	and    BYTE PTR [eax-0x6a],ah
  40c1a4:	aam    0x17
  40c1a6:	and    ch,ch
  40c1a8:	mov    eax,0x18c430c8
  40c1ad:	push   ds
  40c1ae:	push   es
  40c1af:	jmp    DWORD PTR [esi]
  40c1b1:	popa   
  40c1b2:	jecxz  0x40c1d3
  40c1b4:	retf   
  40c1b5:	mov    ds:0x903cd49a,al
  40c1ba:	jbe    0x40c18b
  40c1bc:	aas    
  40c1bd:	xor    esp,DWORD PTR [esi+edi*1]
  40c1c0:	sbb    al,0x19
  40c1c2:	or     al,0x2b
  40c1c4:	scas   al,BYTE PTR es:[edi]
  40c1c5:	mov    al,ds:0xdd644b7
  40c1ca:	mov    WORD PTR [ebx+esi*1+0x23020178],ds
  40c1d1:	sub    BYTE PTR [ecx-0x79853947],ah
  40c1d7:	push   cs
  40c1d8:	xchg   BYTE PTR ds:0xcbe25020,dh
  40c1de:	xchg   ecx,eax
  40c1df:	adc    DWORD PTR [ebx+0x1f41f6e],ebp
  40c1e5:	scas   al,BYTE PTR es:[edi]
  40c1e6:	xchg   ecx,eax
  40c1e7:	sbb    BYTE PTR [edi],bl
  40c1e9:	or     DWORD PTR [ebp-0x26],esp
  40c1ec:	xor    DWORD PTR [eax-0x21dcbfb8],eax
  40c1f2:	xchg   ebx,eax
  40c1f3:	and    al,0x53
  40c1f5:	ret    0x714a
  40c1f8:	or     DWORD PTR [edi+0x8],ebp
  40c1fb:	push   cs
  40c1fc:	pop    eax
  40c1fd:	stc    
  40c1fe:	pusha  
  40c1ff:	add    dh,BYTE PTR ds:0xe40f2d78
  40c205:	cmp    dl,bl
  40c207:	adc    al,0x30
  40c209:	xchg   BYTE PTR [edi],ch
  40c20b:	push   ds
  40c20c:	cmp    esi,DWORD PTR [esi+edi*2-0x254d472a]
  40c213:	push   es
  40c214:	leave  
  40c215:	inc    eax
  40c216:	fcmovbe st,st(7)
  40c218:	or     eax,0x99e43efb
  40c21d:	(bad)  
  40c21f:	popa   
  40c220:	pop    ebx
  40c221:	mov    ecx,0xe14ab621
  40c226:	push   cs
  40c227:	ffreep st(1)
  40c229:	adc    BYTE PTR [edi+0x31a966ee],al
  40c22f:	out    0xf0,al
  40c231:	push   cs
  40c232:	sar    BYTE PTR [ebx-0xfd8dc66],cl
  40c238:	mov    edx,cs
  40c23a:	xor    al,0xd8
  40c23c:	jp     0x40c249
  40c23e:	fistp  DWORD PTR [edi+0x437c56d8]
  40c244:	inc    eax
  40c245:	aam    0x37
  40c247:	fxam   
  40c249:	jae    0x40c2b5
  40c24b:	pop    ebp
  40c24c:	push   ss
  40c24d:	jbe    0x40c241
  40c24f:	xor    BYTE PTR [ebx+0x55],ch
  40c252:	retf   
  40c253:	arpl   WORD PTR [ebx],ax
  40c255:	mov    cl,0xae
  40c258:	rcr    BYTE PTR [ecx-0x75089e1d],1
  40c25e:	inc    esp
  40c25f:	sub    DWORD PTR [ebx],0x4cfb29f1
  40c265:	jb     0x40c1ea
  40c267:	(bad)  
  40c268:	enter  0xe2f3,0x9d
  40c26c:	mov    eax,0xd3131d2c
  40c271:	push   ebx
  40c272:	cmp    BYTE PTR [edi+0x7f612d2],0x7e
  40c279:	fiadd  DWORD PTR [ebx-0x508b2449]
  40c27f:	cmp    ah,bl
  40c281:	fld    TBYTE PTR [ebx+ebp*1-0x12]
  40c285:	int    0xd6
  40c287:	fld1   
  40c289:	pop    ebx
  40c28a:	jg     0x40c2d2
  40c28c:	ret    0x971b
  40c28f:	dec    ecx
  40c290:	jns    0x40c2e9
  40c292:	imul   ebx,DWORD PTR [edi],0xdebf059e
  40c298:	imul   ebx,edi,0x60
  40c29b:	xchg   ebp,eax
  40c29c:	in     eax,dx
  40c29d:	sbb    ch,dl
  40c29f:	mov    esi,0x80e02fd
  40c2a4:	lea    ebx,[esi+0x74869170]
  40c2aa:	retf   0x1315
  40c2ad:	jns    0x40c2ca
  40c2af:	dec    esp
  40c2b0:	mov    esp,0x4dddb5f4
  40c2b5:	inc    edx
  40c2b6:	loop   0x40c283
  40c2b8:	ins    BYTE PTR es:[edi],dx
  40c2b9:	or     ebx,DWORD PTR [eax]
  40c2bb:	stc    
  40c2bc:	rcl    DWORD PTR [ebp+0x48],1
  40c2bf:	jg     0x40c24f
  40c2c1:	xor    eax,0xb3ba8b57
  40c2c6:	pop    esp
  40c2c7:	sbb    eax,0x926a66b3
  40c2cc:	or     al,dl
  40c2ce:	cmp    eax,0x2c4f59fa
  40c2d3:	cmp    eax,0xdb2921f7
  40c2d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2d9:	adc    ch,BYTE PTR fs:[ebp-0x1b4d0167]
  40c2e0:	jp     0x40c2f2
  40c2e2:	hlt    
  40c2e3:	fs (bad) 
  40c2e5:	fmulp  st(5),st
  40c2e7:	add    esi,DWORD PTR [ebp+0x50]
  40c2ea:	inc    ebp
  40c2eb:	cmp    ebx,DWORD PTR [ebp+0xb]
  40c2ee:	add    eax,0xd6c8cd69
  40c2f3:	(bad)  
  40c2f5:	mov    ecx,0x1571de15
  40c2fa:	and    DWORD PTR [esi-0x28dd9b79],ecx
  40c300:	inc    DWORD PTR [ebx]
  40c302:	(bad)  
  40c303:	jmp    0x40c34c
  40c305:	into   
  40c306:	sbb    DWORD PTR [ecx],ebp
  40c308:	push   ss
  40c309:	or     ch,0xdc
  40c30c:	sahf   
  40c30d:	mov    edi,0x9bf93e1a
  40c312:	out    0xe6,eax
  40c314:	jmp    FWORD PTR [eax+ebx*4+0x28]
  40c318:	or     BYTE PTR [ebp-0x191298d4],dl
  40c31e:	hlt    
  40c31f:	xchg   BYTE PTR [edx],dh
  40c321:	pop    ds
  40c322:	mov    al,ds:0x968c2bda
  40c327:	mov    ss,WORD PTR [edx+esi*8]
  40c32a:	fwait
  40c32b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c32c:	sbb    ah,BYTE PTR [eax+0x6c]
  40c32f:	loope  0x40c317
  40c331:	or     eax,0xef7217fe
  40c336:	rol    BYTE PTR [ebp+0x5407bb4a],0xa2
  40c33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c33e:	ror    edx,1
  40c340:	mov    bh,0x9f
  40c342:	rcl    DWORD PTR [ebx+0x6],cl
  40c345:	xchg   edx,eax
  40c346:	cli    
  40c347:	mov    dh,0x8f
  40c349:	pop    eax
  40c34a:	out    0x1d,al
  40c34c:	xchg   esp,eax
  40c34d:	(bad)  
  40c34e:	xchg   edx,eax
  40c34f:	pop    ebx
  40c350:	cld    
  40c351:	outs   dx,DWORD PTR ds:[esi]
  40c352:	lods   eax,DWORD PTR ds:[esi]
  40c353:	xchg   DWORD PTR [esi+eax*2-0x56],esp
  40c357:	(bad)
  40c35c:	dec    esp
  40c35d:	or     DWORD PTR [edi+0x3e],ecx
  40c360:	dec    ebp
  40c361:	push   cs
  40c362:	sub    ebp,DWORD PTR [edi]
  40c364:	mov    ebp,0xe5713611
  40c369:	pop    ebp
  40c36a:	scas   eax,DWORD PTR es:[edi]
  40c36b:	ja     0x40c2f5
  40c36d:	in     eax,0xbe
  40c36f:	call   0xd347:0xaf086610
  40c376:	icebp  
  40c377:	mov    edi,0x8148230a
  40c37c:	pop    esp
  40c37d:	and    al,0x1c
  40c37f:	mov    ds:0x330fc8cd,al
  40c384:	xchg   esi,eax
  40c385:	jne    0x40c3b7
  40c387:	sub    eax,DWORD PTR [ebp-0x6c]
  40c38a:	js     0x40c343
  40c38c:	ror    BYTE PTR [edi-0x66f110ec],0x0
  40c393:	ret    
  40c394:	pop    ebx
  40c395:	pop    edx
  40c396:	sbb    eax,DWORD PTR [edi]
  40c398:	dec    ecx
  40c399:	out    dx,al
  40c39a:	test   eax,0x9c8968f5
  40c39f:	xchg   edx,eax
  40c3a0:	iret   
  40c3a1:	repz push eax
  40c3a3:	mov    ebx,0x7aa9372a
  40c3a8:	pop    edi
  40c3a9:	bound  ebp,QWORD PTR [ecx+eiz*2]
  40c3ac:	mov    bh,0xcd
  40c3ae:	repnz retf 0x883a
  40c3b2:	aam    0x51
  40c3b4:	xchg   ch,bl
  40c3b6:	mov    bh,0xd7
  40c3b8:	inc    ebx
  40c3ba:	jge    0x40c380
  40c3bc:	mov    al,ds:0x2ee7364e
  40c3c1:	(bad)  
  40c3c2:	dec    edx
  40c3c3:	cmp    DWORD PTR [edi],ebx
  40c3c5:	fidivr WORD PTR [ebx+ebx*1+0x72]
  40c3c9:	pop    ds
  40c3ca:	das    
  40c3cb:	mov    ebx,0xc9552333
  40c3d0:	test   al,0x64
  40c3d2:	xor    BYTE PTR [bp-0x6e],dl
  40c3d6:	das    
  40c3d7:	(bad)  
  40c3d8:	cdq    
  40c3d9:	mov    edx,0x80663502
  40c3de:	(bad)  
  40c3df:	call   0x679a89b4
  40c3e4:	mov    eax,0x5b041ecf
  40c3e9:	xchg   DWORD PTR [ecx],ebx
  40c3eb:	or     ch,BYTE PTR [ecx+eax*1-0x44]
  40c3ef:	push   cs
  40c3f0:	shr    DWORD PTR cs:[edx+0x4],0xb4
  40c3f5:	jns    0x40c38f
  40c3f7:	xchg   ecx,eax
  40c3f8:	adc    al,0x96
  40c3fa:	sbb    cl,BYTE PTR [edi]
  40c3fc:	cmp    al,0xcd
  40c3fe:	div    BYTE PTR [ebp-0x6119c3f]
  40c404:	push   ecx
  40c405:	dec    ebp
  40c406:	mov    WORD PTR [ebp+0x67],ds
  40c409:	xor    al,0xee
  40c40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c40c:	les    eax,FWORD PTR [ebx-0x4e]
  40c40f:	inc    ebx
  40c410:	mov    fs,WORD PTR [ebx]
  40c412:	xor    BYTE PTR [ebp-0x56907bc2],0x33
  40c419:	test   BYTE PTR [ebx],0x9
  40c41c:	clc    
  40c41d:	mov    WORD PTR [edx-0x13fb18a3],es
  40c423:	pop    es
  40c424:	std    
  40c425:	cmp    ebx,eax
  40c427:	aaa    
  40c428:	xchg   esp,eax
  40c429:	xchg   esp,eax
  40c42a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c42b:	(bad)  
  40c42c:	rcl    edx,cl
  40c42e:	dec    esp
  40c42f:	jmp    0x807a:0x89bba3b2
  40c436:	daa    
  40c437:	mov    al,0x18
  40c439:	clc    
  40c43a:	scas   eax,DWORD PTR es:[edi]
  40c43b:	addr16 es cmp al,0x9f
  40c43f:	sub    eax,0xd9b1767a
  40c444:	ror    DWORD PTR [eax-0x245a5e1e],0xc4
  40c44b:	out    0x62,al
  40c44d:	xlat   BYTE PTR ds:[ebx]
  40c44e:	add    eax,DWORD PTR [ebx-0x11]
  40c451:	sbb    DWORD PTR [ebx],ecx
  40c453:	lds    edi,FWORD PTR [ecx]
  40c455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c456:	xor    BYTE PTR [ecx],cl
  40c458:	mov    ebp,0xe2f09297
  40c45d:	aas    
  40c45e:	mov    ebp,ecx
  40c460:	cmp    al,al
  40c462:	adc    cl,BYTE PTR [ebp+0x32ec00ee]
  40c468:	mov    bl,0xe4
  40c46a:	(bad)  
  40c46b:	push   ebx
  40c46c:	test   BYTE PTR [ecx+ebx*8],bl
  40c46f:	bound  esi,QWORD PTR [eax*4-0x63d603ed]
  40c476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c477:	dec    ebx
  40c478:	lahf   
  40c479:	call   0x5bf8:0xb1aa6fe6
  40c480:	jl     0x40c465
  40c482:	lock xor DWORD PTR es:[edx+0x7b6de294],ebp
  40c48a:	stc    
  40c48b:	inc    esi
  40c48c:	sub    cl,al
  40c48e:	jg     0x40c4a4
  40c490:	cmp    BYTE PTR [edx+ebp*4-0x8],ch
  40c494:	loopne 0x40c4db
  40c496:	icebp  
  40c497:	mov    ds:0x6ac8fbab,al
  40c49c:	loope  0x40c4e9
  40c49e:	xchg   edi,eax
  40c49f:	mov    ecx,0x4997d7fd
  40c4a4:	cwde   
  40c4a5:	sub    eax,0x4a2c640d
  40c4aa:	xchg   esp,eax
  40c4ab:	popf   
  40c4ac:	loopne 0x40c522
  40c4ae:	repnz pusha 
  40c4b0:	xchg   DWORD PTR [edx+ecx*4+0x542b0887],esp
  40c4b7:	loopne 0x40c45d
  40c4b9:	lds    esp,FWORD PTR [esi+esi*8]
  40c4bc:	ret    
  40c4bd:	leave  
  40c4be:	cmp    DWORD PTR [ebx+ebx*1-0x37],ecx
  40c4c2:	fmul   st,st(1)
  40c4c4:	xchg   esi,eax
  40c4c5:	mov    ds:0xc051b9c2,eax
  40c4cb:	pop    ds
  40c4cc:	ins    BYTE PTR es:[edi],dx
  40c4cd:	arpl   WORD PTR [ecx+0x16aa4f04],sp
  40c4d3:	xor    eax,DWORD PTR [edi]
  40c4d5:	mov    edi,0x8213d954
  40c4da:	mov    eax,ds:0xf5b48252
  40c4df:	hlt    
  40c4e0:	and    edi,ebx
  40c4e2:	daa    
  40c4e3:	daa    
  40c4e4:	mov    esp,0x278b2a7a
  40c4e9:	int3   
  40c4ea:	push   edi
  40c4eb:	xor    dl,BYTE PTR [ecx-0x46c83820]
  40c4f1:	inc    ebp
  40c4f2:	jmp    0x714d:0xd46df5a
  40c4f9:	mov    edx,0xf3dd03b5
  40c4fe:	sti    
  40c4ff:	or     DWORD PTR [eax-0x60],eax
  40c502:	dec    ebx
  40c503:	rol    DWORD PTR [ebp-0x1c],1
  40c506:	add    edx,DWORD PTR [esi]
  40c508:	mov    edx,0x8ff15d19
  40c50d:	imul   ecx,DWORD PTR [ecx+0x224aa6f2],0x49f83278
  40c517:	mov    ch,0xca
  40c519:	lods   eax,DWORD PTR ds:[esi]
  40c51a:	add    al,0x74
  40c51c:	retf   0x410f
  40c51f:	or     DWORD PTR [ecx-0x54],esp
  40c522:	nop
  40c523:	fdivp  st(1),st
  40c525:	or     ah,BYTE PTR ss:[edx]
  40c528:	test   BYTE PTR [esi+0x6275dfe4],bl
  40c52e:	xchg   ebx,eax
  40c52f:	add    BYTE PTR [edi+0x7b],bl
  40c532:	fld    DWORD PTR [ebx+0x78d0bbe]
  40c538:	xchg   ecx,eax
  40c539:	mov    esp,0xa3fc6c51
  40c53e:	into   
  40c53f:	xchg   edx,eax
  40c540:	das    
  40c541:	mov    eax,0x9fa916f1
  40c546:	xchg   ebp,eax
  40c547:	xchg   BYTE PTR [ebx-0x7a],bl
  40c54a:	mov    BYTE PTR [edi+0x34],cl
  40c54d:	fcom   st(0)
  40c54f:	fist   DWORD PTR [ebp+0x11]
  40c552:	pop    esi
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	push   0x38ae0e7d
  40c559:	and    eax,0x558a60fe
  40c55e:	xor    eax,0xc4af803e
  40c563:	lahf   
  40c564:	sbb    esp,DWORD PTR [edi]
  40c566:	adc    bl,bh
  40c568:	cli    
  40c569:	fnsave [eax+ebp*8-0x6f65af7c]
  40c570:	sub    DWORD PTR ds:[esi],eax
  40c573:	pop    esp
  40c574:	in     eax,0x2
  40c576:	das    
  40c577:	lahf   
  40c578:	icebp  
  40c579:	cmc    
  40c57a:	stc    
  40c57b:	in     al,0xe2
  40c57d:	inc    ebx
  40c57e:	call   0xcd39535d
  40c583:	out    dx,al
  40c584:	xchg   ebp,eax
  40c585:	mov    WORD PTR [edi],cs
  40c587:	mov    ds:0x389cadb0,al
  40c58c:	aas    
  40c58d:	cld    
  40c58e:	inc    ebx
  40c58f:	mov    edi,0xf0c84ac4
  40c594:	in     al,dx
  40c595:	jge    0x40c58f
  40c597:	jecxz  0x40c578
  40c599:	fstp   QWORD PTR [edx]
  40c59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c59c:	adc    BYTE PTR [esi],ch
  40c59e:	lock mov esi,0x5ed293d7
  40c5a4:	add    BYTE PTR [edx+0x74380caf],cl
  40c5aa:	pop    es
  40c5ab:	test   al,0xb5
  40c5ad:	call   0xd89206dd
  40c5b2:	not    DWORD PTR [ebx-0x5b]
  40c5b5:	mov    eax,ds:0xaca56007
  40c5ba:	adc    al,0xd5
  40c5bc:	rcl    DWORD PTR [ebx+0x179d3ae4],0xb7
  40c5c3:	mov    edi,0x5d37d6c8
  40c5c8:	lods   al,BYTE PTR ds:[esi]
  40c5c9:	jmp    0xc3f767ea
  40c5ce:	cmc    
  40c5cf:	sbb    edx,ecx
  40c5d1:	add    al,0x37
  40c5d3:	dec    edi
  40c5d4:	out    dx,al
  40c5d5:	sub    ebx,0x88451611
  40c5db:	test   al,0x7c
  40c5dd:	push   ss
  40c5de:	ror    DWORD PTR [esi],cl
  40c5e0:	int    0xa9
  40c5e2:	cmp    DWORD PTR [edi+0x7c289cfb],eax
  40c5e8:	sub    dh,BYTE PTR [esp+edi*2]
  40c5eb:	sti    
  40c5ec:	aaa    
  40c5ed:	pop    esp
  40c5ee:	pop    esi
  40c5ef:	repz shl BYTE PTR gs:[edx],1
  40c5f3:	cmp    dh,bl
  40c5f5:	mov    dh,0xe9
  40c5f7:	mov    al,ds:0xaafb15b
  40c5fc:	retf   
  40c5fd:	fmul   st,st(3)
  40c5ff:	adc    al,0x8d
  40c601:	push   0x43b20311
  40c606:	xchg   edi,eax
  40c607:	push   edx
  40c608:	das    
  40c609:	iret   
  40c60a:	cmp    BYTE PTR [edx],ch
  40c60c:	jp     0x40c657
  40c60e:	popf   
  40c60f:	jnp    0x40c5d4
  40c611:	jns    0x40c5d3
  40c613:	mov    cl,0x3
  40c615:	or     al,al
  40c617:	xor    DWORD PTR [esi+0x6bfedb0e],ebx
  40c61d:	fsub   QWORD PTR [ebp-0x4857c1d0]
  40c623:	aas    
  40c624:	jge    0x40c5b9
  40c626:	ins    DWORD PTR es:[edi],dx
  40c627:	jns    0x40c674
  40c629:	(bad)  
  40c62a:	sahf   
  40c62b:	jae    0x40c5ef
  40c62d:	je     0x40c687
  40c62f:	rcl    DWORD PTR [eax-0x5671d7bd],1
  40c635:	aam    0x2c
  40c637:	jnp    0x40c668
  40c639:	ds jp  0x40c635
  40c63c:	or     edi,DWORD PTR [ecx-0x1]
  40c63f:	ja     0x40c5c3
  40c641:	push   ss
  40c642:	scas   al,BYTE PTR es:[edi]
  40c643:	inc    ecx
  40c644:	xchg   edi,eax
  40c645:	out    0xaa,eax
  40c647:	or     ah,BYTE PTR [edi+0x23]
  40c64a:	dec    eax
  40c64b:	add    esp,DWORD PTR [edi-0x5e]
  40c64e:	xlat   BYTE PTR ds:[ebx]
  40c64f:	es inc eax
  40c651:	imul   ebx,DWORD PTR [edi+0x2a],0x6abe89fc
  40c658:	leave  
  40c659:	or     eax,0x83fd9f36
  40c65e:	mov    eax,ds:0x6cad94af
  40c663:	cwde   
  40c664:	add    dl,BYTE PTR [edx]
  40c666:	adc    edi,DWORD PTR [esi-0x632a4c0a]
  40c66c:	xchg   esi,eax
  40c66d:	push   edx
  40c66e:	sub    eax,0x4deab534
  40c673:	inc    esp
  40c674:	jbe    0x40c6d3
  40c676:	ror    DWORD PTR [eax],1
  40c678:	mov    DWORD PTR [edi+0x6c526476],esi
  40c67e:	loop   0x40c6e8
  40c680:	sub    al,0x2
  40c682:	stc    
  40c683:	arpl   WORD PTR [ebx+0x4996eac4],si
  40c689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c68a:	(bad)  
  40c68b:	movsx  eax,dh
  40c68e:	fwait
  40c68f:	in     al,0xc7
  40c691:	hlt    
  40c692:	pop    ds
  40c693:	dec    eax
  40c694:	mov    BYTE PTR ds:0x59c36990,ch
  40c69a:	sti    
  40c69b:	jmp    0x40c62f
  40c69d:	dec    esp
  40c69e:	sar    edx,1
  40c6a0:	daa    
  40c6a1:	and    DWORD PTR [eax],edi
  40c6a3:	xchg   esi,eax
  40c6a4:	fwait
  40c6a5:	push   edx
  40c6a6:	mov    eax,0x757a7d02
  40c6ab:	rcr    DWORD PTR [ecx+0x3886c654],1
  40c6b1:	jnp    0x40c670
  40c6b3:	or     BYTE PTR [edx+esi*1],bh
  40c6b6:	les    ebx,FWORD PTR [ebx-0x3a]
  40c6b9:	hlt    
  40c6ba:	add    BYTE PTR [ebx-0x20],bh
  40c6bd:	pop    ebx
  40c6be:	int3   
  40c6bf:	jae    0x40c663
  40c6c1:	(bad)  
  40c6c2:	shl    DWORD PTR [ebx],cl
  40c6c4:	mov    edx,edi
  40c6c6:	std    
  40c6c7:	popf   
  40c6c8:	dec    BYTE PTR [esi+0x7328cf21]
  40c6ce:	aaa    
  40c6cf:	hlt    
  40c6d0:	sbb    al,0x79
  40c6d2:	mov    ah,0x21
  40c6d4:	mov    ch,BYTE PTR [edx-0x54]
  40c6d7:	(bad)  
  40c6d8:	adc    BYTE PTR [edi-0x4ccdf685],dl
  40c6de:	iret   
  40c6df:	sti    
  40c6e0:	pusha  
  40c6e1:	lahf   
  40c6e2:	add    BYTE PTR [edi],ch
  40c6e4:	leave  
  40c6e5:	pop    ebx
  40c6e6:	mov    ch,0xbb
  40c6e8:	xchg   DWORD PTR [esi-0x6b],ebp
  40c6eb:	sbb    ebp,DWORD PTR [esi-0x74bb441b]
  40c6f1:	pop    es
  40c6f2:	xor    al,0x74
  40c6f4:	adc    BYTE PTR [edx],bl
  40c6f6:	in     eax,dx
  40c6f7:	repnz sbb BYTE PTR [eax+0x97b499f],ah
  40c6fe:	add    BYTE PTR [esi],bh
  40c700:	and    cl,BYTE PTR [eax-0x6a]
  40c703:	push   ebx
  40c704:	test   BYTE PTR [ebx+0x10be438d],dh
  40c70a:	mov    edx,0x488aa7f6
  40c70f:	pop    eax
  40c710:	addr16 mov esp,0x914c37c
  40c716:	out    dx,eax
  40c717:	adc    BYTE PTR [ebp-0x517b04a],dl
  40c71d:	mov    bl,0x8
  40c71f:	popf   
  40c720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c721:	pop    esp
  40c722:	fsub   QWORD PTR [esi]
  40c724:	adc    DWORD PTR [eax],ecx
  40c726:	sbb    DWORD PTR [edi-0x1ca49d0c],ecx
  40c72c:	cmp    al,0x15
  40c72e:	shr    BYTE PTR [edi],cl
  40c730:	adc    eax,0xc6d2c3fb
  40c735:	and    esi,DWORD PTR [edi+esi*8+0x14]
  40c739:	cld    
  40c73a:	or     eax,0x43460da8
  40c73f:	mov    bl,0x26
  40c741:	and    BYTE PTR [ebx+0x702be85f],bh
  40c747:	cmp    DWORD PTR [ecx+edx*8-0x51],esp
  40c74b:	and    eax,0xfdcef2b
  40c750:	test   BYTE PTR [edi],al
  40c752:	inc    eax
  40c753:	aad    0x2
  40c755:	clc    
  40c756:	repnz imul ebp,DWORD PTR [esi+0x68],0x1d1777fa
  40c75e:	es dec edi
  40c760:	inc    edx
  40c761:	push   edi
  40c762:	test   DWORD PTR [ecx+0x512352c9],0xcee87bc9
  40c76c:	push   0x28
  40c76e:	dec    eax
  40c76f:	jb     0x40c786
  40c771:	mov    esp,0xc1081089
  40c776:	aas    
  40c777:	xor    ebx,DWORD PTR [edi+eiz*4]
  40c77a:	fcom   QWORD PTR [edi+0x75]
  40c77d:	sub    DWORD PTR [ebx-0x57],esi
  40c780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c781:	daa    
  40c782:	stos   DWORD PTR es:[edi],eax
  40c783:	pop    es
  40c784:	test   al,0xb
  40c786:	retf   0xb229
  40c789:	pop    ebx
  40c78a:	push   eax
  40c78b:	push   ds
  40c78c:	jecxz  0x40c76e
  40c78e:	stc    
  40c78f:	push   DWORD PTR [esi+edx*4-0x1f60c0d]
  40c796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c797:	ds sbb esp,eax
  40c79a:	dec    esi
  40c79b:	pop    esp
  40c79c:	inc    eax
  40c79d:	jne    0x40c7be
  40c79f:	jecxz  0x40c77f
  40c7a1:	add    cl,BYTE PTR [ecx]
  40c7a3:	imul   eax,DWORD PTR [ebx+0x643ee42],0xffffff97
  40c7aa:	daa    
  40c7ab:	jmp    0x40c819
  40c7ad:	mov    dh,0xba
  40c7af:	std    
  40c7b0:	push   eax
  40c7b1:	sar    BYTE PTR [eax+0x456d7dda],0xf
  40c7b8:	(bad)  
  40c7b9:	push   esp
  40c7ba:	mov    cl,0xe
  40c7bc:	sub    eax,0x8baa420
  40c7c1:	lahf   
  40c7c2:	shl    BYTE PTR [edi+0x40367b13],cl
  40c7c8:	imul   edx,esp,0x5a
  40c7cb:	in     eax,dx
  40c7cc:	outs   dx,DWORD PTR ds:[esi]
  40c7cd:	loopne 0x40c7e4
  40c7cf:	jle    0x40c7b4
  40c7d1:	retf   
  40c7d2:	push   0xffffffba
  40c7d4:	cs jmp 0xf87a:0x2391d807
  40c7dc:	aas    
  40c7dd:	inc    ebx
  40c7de:	lea    esp,[esi]
  40c7e0:	push   eax
  40c7e1:	mov    cl,0xba
  40c7e3:	sbb    ebx,eax
  40c7e5:	cmp    eax,0x9e267d06
  40c7ea:	sub    ebx,DWORD PTR [edi]
  40c7ec:	sbb    bl,BYTE PTR [eax]
  40c7ee:	repz and DWORD PTR [edi],0x1
  40c7f2:	in     al,dx
  40c7f3:	sub    ebx,DWORD PTR [ebx]
  40c7f5:	test   DWORD PTR [eax],esi
  40c7f7:	aas    
  40c7f8:	(bad)  
  40c7f9:	mov    ebp,0xb8cf3534
  40c7fe:	adc    DWORD PTR [ebx+eiz*4+0x35eaaca9],ecx
  40c805:	in     eax,dx
  40c806:	das    
  40c807:	xchg   ebx,eax
  40c808:	fist   WORD PTR [edi-0x471bf938]
  40c80e:	jp     0x40c7d7
  40c810:	addr16 or eax,0x1639a52e
  40c816:	or     al,0x5d
  40c818:	and    al,0xec
  40c81a:	sub    ebp,DWORD PTR [edi-0x79]
  40c81d:	xchg   edx,eax
  40c81e:	fs xchg ebp,eax
  40c820:	xchg   DWORD PTR [edi+0x31d98185],ecx
  40c826:	call   0x64b10769
  40c82b:	aaa    
  40c82c:	adc    eax,0xdb8b98f8
  40c831:	adc    BYTE PTR [ecx-0x4beee3c3],0x0
  40c838:	jmp    0x3ef42636
  40c83d:	pop    esi
  40c83e:	push   ecx
  40c83f:	pushf  
  40c840:	sbb    ah,0x33
  40c843:	xchg   esp,eax
  40c844:	loop   0x40c7ee
  40c846:	(bad)  
  40c848:	mov    DWORD PTR [edi+0x6ba1f885],ecx
  40c84e:	loopne 0x40c7dc
  40c850:	call   0x8714506
  40c855:	adc    edi,DWORD PTR [ecx]
  40c857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c858:	push   ebx
  40c859:	ret    0x8aa9
  40c85c:	dec    edi
  40c85d:	mov    ds:0x34d1473f,eax
  40c862:	pop    esi
  40c863:	(bad)  
  40c864:	ss pop edi
  40c866:	pshufw mm5,QWORD PTR [edx-0x2f],0xb8
  40c86b:	stc    
  40c86c:	into   
  40c86d:	js     0x40c802
  40c86f:	add    DWORD PTR [ebx-0x26],ebp
  40c872:	sub    eax,0xa5078386
  40c877:	mov    edx,cs
  40c879:	pop    ebp
  40c87a:	push   ds
  40c87b:	cmp    eax,0x80f49111
  40c880:	sub    DWORD PTR [eax-0x3a],ebx
  40c883:	rol    BYTE PTR [ebp-0x68],0xbf
  40c887:	dec    ebx
  40c888:	jo     0x40c8fb
  40c88a:	pop    ecx
  40c88b:	aam    0x33
  40c88d:	and    ecx,edi
  40c88f:	aas    
  40c890:	inc    edi
  40c891:	inc    edi
  40c892:	in     al,0xc7
  40c894:	shl    al,cl
  40c896:	pop    ebx
  40c897:	call   0xdf74460e
  40c89c:	bound  esp,QWORD PTR [edx+0x53398b30]
  40c8a2:	or     edi,DWORD PTR [esi]
  40c8a4:	add    BYTE PTR es:[edx-0x19],bh
  40c8a8:	aam    0x9a
  40c8aa:	(bad)  
  40c8ac:	pop    ds
  40c8ad:	sbb    ch,ch
  40c8af:	scas   eax,DWORD PTR es:[edi]
  40c8b0:	leave  
  40c8b1:	(bad)  [ecx]
  40c8b3:	jl     0x40c87a
  40c8b5:	pop    ds
  40c8b6:	push   ebp
  40c8b7:	push   edx
  40c8b8:	dec    BYTE PTR [edx+0x22]
  40c8bb:	push   0x63
  40c8bd:	mov    esi,0x897ff17d
  40c8c2:	sub    edi,ebp
  40c8c4:	cmc    
  40c8c5:	push   esp
  40c8c6:	ja     0x40c8d4
  40c8c8:	pop    edi
  40c8c9:	data16 jns 0x40c8ec
  40c8cc:	adc    DWORD PTR [edx-0x55a880ad],edi
  40c8d2:	xchg   BYTE PTR ds:0x58b7f3dc,bh
  40c8d8:	push   esp
  40c8d9:	push   eax
  40c8da:	cli    
  40c8db:	pop    edx
  40c8dc:	bswap  esi
  40c8de:	stos   BYTE PTR es:[edi],al
  40c8df:	cld    
  40c8e0:	repnz cli 
  40c8e2:	push   cs
  40c8e3:	xlat   BYTE PTR ds:[ebx]
  40c8e4:	test   BYTE PTR [edx],dl
  40c8e6:	call   0x3257:0xbbf6f59e
  40c8ed:	daa    
  40c8ee:	sbb    ch,dl
  40c8f0:	dec    edx
  40c8f1:	repz dec edi
  40c8f3:	sbb    esp,ecx
  40c8f5:	sub    eax,0x1a094e0d
  40c8fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8fb:	add    ecx,esi
  40c8fd:	stc    
  40c8fe:	pushf  
  40c8ff:	jl     0x40c925
  40c901:	cs mov cl,0xe4
  40c904:	test   BYTE PTR [ebx-0x57],bh
  40c907:	push   ebp
  40c908:	daa    
  40c909:	mov    ss,WORD PTR [esi+0x709eaad4]
  40c90f:	mov    esi,0xcefe6d21
  40c914:	sbb    al,0x19
  40c916:	xchg   esi,eax
  40c917:	mov    ds:0xfcd95237,al
  40c91c:	inc    esp
  40c91d:	loop   0x40c8ea
  40c91f:	jns    0x40c905
  40c921:	ja     0x40c960
  40c923:	xchg   ebx,ecx
  40c925:	js     0x40c90f
  40c927:	je     0x40c959
  40c929:	icebp  
  40c92a:	out    dx,eax
  40c92b:	inc    ebx
  40c92c:	iret   
  40c92d:	outs   dx,BYTE PTR ds:[esi]
  40c92e:	cs sub cl,bh
  40c931:	aaa    
  40c932:	inc    ecx
  40c933:	lock xor edi,DWORD PTR [edx]
  40c936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c937:	int3   
  40c938:	adc    edi,ecx
  40c93a:	inc    ecx
  40c93b:	sti    
  40c93c:	lahf   
  40c93d:	sbb    edi,0x71
  40c940:	push   edi
  40c941:	fidivr DWORD PTR ds:0x357b8fef
  40c947:	cmp    eax,0xe3b196d
  40c94c:	jns    0x40c981
  40c94e:	mov    gs,ecx
  40c950:	inc    ebp
  40c951:	xor    DWORD PTR [eax+0x4f651e05],esp
  40c957:	out    0x48,eax
  40c959:	push   edi
  40c95a:	rcl    DWORD PTR [eax-0x73fe71c2],0x4c
  40c961:	push   cs
  40c962:	bound  eax,QWORD PTR [ecx-0x6fa7a2b5]
  40c968:	xor    DWORD PTR [esi+0x51],edi
  40c96b:	aam    0x25
  40c96d:	mov    cl,cl
  40c96f:	ins    BYTE PTR es:[edi],dx
  40c970:	xchg   edx,eax
  40c971:	mov    eax,DWORD PTR [ebx-0x4d]
  40c974:	sbb    DWORD PTR [esi],esp
  40c976:	mov    ah,0x5b
  40c978:	xor    DWORD PTR [ecx],ebx
  40c97a:	sub    bl,BYTE PTR [edx]
  40c97c:	cs hlt 
  40c97e:	jge    0x40c9dc
  40c980:	mov    ch,BYTE PTR [ebp-0x6f744b53]
  40c986:	ds jb  0x40c926
  40c989:	mov    al,ds:0xd2c277a5
  40c98e:	xor    al,0x28
  40c990:	xor    al,0x86
  40c992:	sbb    al,0x1e
  40c994:	shr    BYTE PTR [ebp-0x12],1
  40c997:	jge    0x40c923
  40c999:	cmp    eax,0x5d1a7c0e
  40c99e:	repz sbb ebx,0xfffffff7
  40c9a2:	sub    BYTE PTR [edx-0x4ce2fc44],cl
  40c9a8:	mov    ds:0x499d0a2b,eax
  40c9ad:	rcl    DWORD PTR [eax+0x32589854],1
  40c9b3:	(bad)  
  40c9b4:	popf   
  40c9b5:	scas   eax,DWORD PTR es:[edi]
  40c9b6:	mov    ecx,0xed8c5880
  40c9bb:	shl    DWORD PTR fs:[ebx],cl
  40c9be:	mov    dh,0x31
  40c9c0:	cmp    BYTE PTR [edi+eax*1-0x69],al
  40c9c4:	sub    eax,0x2f3d98f8
  40c9c9:	inc    esi
  40c9ca:	xchg   edx,eax
  40c9cb:	call   0xca71:0x62b76d6e
  40c9d2:	(bad)  
  40c9d3:	loopne 0x40ca23
  40c9d5:	xchg   ebp,eax
  40c9d6:	sti    
  40c9d7:	mov    al,0x3d
  40c9d9:	iret   
  40c9da:	dec    edx
  40c9db:	dec    DWORD PTR [edx-0x22]
  40c9de:	pop    edi
  40c9df:	cli    
  40c9e0:	(bad)  
  40c9e1:	ins    DWORD PTR es:[edi],dx
  40c9e2:	ds mov edx,0x4ee57ab9
  40c9e8:	stc    
  40c9e9:	push   edx
  40c9ea:	xchg   DWORD PTR [ebp+0x61],esp
  40c9ed:	mov    edx,0x9c0a32cb
  40c9f2:	in     al,0xc2
  40c9f4:	adc    edi,DWORD PTR [esi+0x65]
  40c9f7:	test   BYTE PTR [ebx-0x68],0xbf
  40c9fb:	mov    ds:0x87b48a42,eax
  40ca00:	cmp    eax,0xa8969bea
  40ca05:	aas    
  40ca06:	sbb    al,0xc9
  40ca08:	adc    DWORD PTR [ebx],ebp
  40ca0a:	jbe    0x40ca81
  40ca0c:	mul    BYTE PTR [edi+0x49]
  40ca0f:	ret    
  40ca10:	add    BYTE PTR [esi+0x6b0a22ed],al
  40ca16:	test   DWORD PTR [ebx+0x387d1e9c],ebp
  40ca1c:	pop    ebx
  40ca1d:	test   BYTE PTR [esi+0x256b2d02],ah
  40ca23:	test   al,0x1f
  40ca25:	pop    eax
  40ca26:	repnz stc 
  40ca28:	mov    cl,BYTE PTR [ebx-0x32de9f36]
  40ca2e:	shl    DWORD PTR [edx+0x1b],1
  40ca31:	sahf   
  40ca32:	mov    ah,dl
  40ca34:	xchg   esp,eax
  40ca35:	iret   
  40ca36:	xchg   ebp,eax
  40ca37:	adc    eax,0x44698033
  40ca3c:	pop    ecx
  40ca3d:	repz out 0xaa,al
  40ca40:	jb     0x40cab2
  40ca42:	int    0x65
  40ca44:	xchg   edx,eax
  40ca45:	cmp    cl,dl
  40ca47:	repnz lds edi,FWORD PTR [esi+0x69]
  40ca4b:	ins    BYTE PTR es:[edi],dx
  40ca4c:	je     0x40cac1
  40ca4e:	and    eax,0x3a5ea76
  40ca53:	ret    
  40ca54:	aam    0xad
  40ca56:	xor    BYTE PTR [esi+ebp*8+0x30],dh
  40ca5a:	push   ecx
  40ca5b:	sahf   
  40ca5c:	push   eax
  40ca5d:	push   0x8b4bb883
  40ca62:	fwait
  40ca63:	and    BYTE PTR ds:0x590bf58e,dl
  40ca69:	mov    esp,0x4033d5fd
  40ca6e:	adc    al,0xe6
  40ca70:	dec    ebx
  40ca71:	arpl   WORD PTR [ebp-0x5fd74dae],dx
  40ca77:	in     eax,0xa2
  40ca79:	push   es
  40ca7a:	push   esi
  40ca7b:	xchg   ecx,eax
  40ca7c:	add    esp,ecx
  40ca7e:	inc    esi
  40ca7f:	(bad)  
  40ca80:	mov    ah,0x5
  40ca82:	fadd   QWORD PTR [esi+0x5]
  40ca85:	adc    BYTE PTR [edx],0x5a
  40ca88:	bound  eax,QWORD PTR [edx-0x6ee59565]
  40ca8e:	or     eax,0x94a78921
  40ca93:	xor    al,0x3c
  40ca95:	imul   ecx,esi,0xffffffef
  40ca98:	imul   edi,DWORD PTR [ebx],0xe96b815f
  40ca9e:	lahf   
  40ca9f:	jg     0x40ca98
  40caa1:	dec    edx
  40caa2:	pop    ds
  40caa3:	mov    bh,0xca
  40caa5:	push   esi
  40caa6:	cmp    bh,0x3a
  40caa9:	xchg   edi,eax
  40caaa:	xchg   ebp,eax
  40caab:	shl    BYTE PTR [ebx+eiz*1+0x16],1
  40caaf:	and    ch,BYTE PTR [ebx]
  40cab1:	add    cl,BYTE PTR [ecx+0x579cfccc]
  40cab7:	sub    dh,BYTE PTR [esi]
  40cab9:	xchg   DWORD PTR [edx],edi
  40cabb:	out    dx,eax
  40cabc:	add    al,0xad
  40cabe:	mov    edx,0x31c1365f
  40cac3:	cld    
  40cac4:	popa   
  40cac5:	xor    esi,DWORD PTR [esi+0x66d958c8]
  40cacb:	jecxz  0x40cab2
  40cacd:	(bad)  
  40cace:	sahf   
  40cacf:	jns    0x40cabf
  40cad1:	int    0xd7
  40cad3:	mov    DWORD PTR [eax-0x34e4cd43],0xfa281130
  40cadd:	movhps QWORD PTR [ebx],xmm2
  40cae0:	mov    dh,0x41
  40cae2:	cs nop
  40cae4:	xchg   esi,eax
  40cae5:	call   0xbdca:0x192a85ed
  40caec:	jo     0x40cb3a
  40caee:	test   BYTE PTR [edi],cl
  40caf0:	aaa    
  40caf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caf2:	add    eax,0xba5cd7bf
  40caf7:	and    esi,DWORD PTR [ebx]
  40caf9:	push   esp
  40cafa:	int3   
  40cafb:	fcom   DWORD PTR [ebx-0x5bceb332]
  40cb01:	cmp    ecx,ebx
  40cb03:	and    bh,BYTE PTR [ebx+0x77]
  40cb06:	ja     0x40ca8e
  40cb08:	shl    DWORD PTR [esi+0x1e],0xca
  40cb0c:	ja     0x40cac3
  40cb0e:	jmp    0xc86e76e7
  40cb13:	dec    esi
  40cb14:	sbb    ecx,DWORD PTR [ebp+0x7]
  40cb17:	mov    bl,BYTE PTR [ebp+0x4fad0e4c]
  40cb1d:	rol    DWORD PTR [ecx+edi*1],cl
  40cb20:	fldpi  
  40cb22:	sti    
  40cb23:	xchg   dl,bl
  40cb25:	aam    0xd1
  40cb27:	sub    cx,WORD PTR [esp+eax*2-0x2a]
  40cb2c:	iret   
  40cb2d:	add    DWORD PTR [edi-0x2ed05be7],eax
  40cb33:	inc    ebx
  40cb34:	push   ebx
  40cb35:	in     eax,0xc9
  40cb37:	add    ah,BYTE PTR [ecx+edi*4-0x80]
  40cb3b:	(bad)  
  40cb3c:	jl     0x40cb6b
  40cb3e:	aaa    
  40cb3f:	pop    ebx
  40cb40:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb42:	dec    edx
  40cb43:	clc    
  40cb44:	into   
  40cb45:	sub    eax,0x5ad155b
  40cb4a:	xor    al,0x82
  40cb4c:	jo     0x40cb08
  40cb4e:	fcom   DWORD PTR [esi]
  40cb50:	jne    0x40cb9f
  40cb52:	mov    al,0x64
  40cb54:	arpl   WORD PTR [edi+0x437e2a06],si
  40cb5a:	neg    DWORD PTR [eax+0x43742cd8]
  40cb60:	push   es
  40cb61:	add    edi,ecx
  40cb63:	mov    ebx,0x224c063a
  40cb68:	dec    esi
  40cb69:	gs mov ch,0x93
  40cb6c:	cmp    DWORD PTR [edx],ecx
  40cb6e:	cld    
  40cb6f:	inc    esi
  40cb70:	test   BYTE PTR ds:0xe9833223,bh
  40cb76:	das    
  40cb77:	ins    BYTE PTR es:[edi],dx
  40cb78:	mov    WORD PTR [ebx],ss
  40cb7a:	xchg   esp,eax
  40cb7b:	add    DWORD PTR [eax-0x67],esi
  40cb7e:	fimul  DWORD PTR [ecx-0x3d]
  40cb81:	cs cld 
  40cb83:	loop   0x40cb90
  40cb85:	pop    ecx
  40cb86:	sbb    dl,BYTE PTR [ebx]
  40cb88:	aam    0x8b
  40cb8a:	into   
  40cb8b:	ror    al,0xf7
  40cb8e:	add    dl,BYTE PTR [ebx]
  40cb90:	ins    DWORD PTR es:[edi],dx
  40cb91:	fdiv   QWORD PTR [edx]
  40cb93:	mov    DWORD PTR [ebp+0x5ae1c4dd],ebx
  40cb99:	add    eax,0x3f2026b6
  40cb9e:	pop    edx
  40cb9f:	xor    DWORD PTR [eax],eax
  40cba1:	sahf   
  40cba2:	popa   
  40cba3:	xchg   BYTE PTR [esi+0x527cba34],bl
  40cba9:	imul   BYTE PTR [edi+0x61763f9b]
  40cbaf:	sahf   
  40cbb0:	jae    0x40cb69
  40cbb2:	aad    0xf2
  40cbb4:	mov    esi,0x97d8a7ef
  40cbb9:	rcl    DWORD PTR [ebx+0x1f],0xbd
  40cbbd:	(bad)  
  40cbbe:	push   ds
  40cbbf:	aas    
  40cbc0:	clc    
  40cbc1:	fsubr  QWORD PTR [esi-0x5ba578d9]
  40cbc7:	popa   
  40cbc8:	xor    al,0x91
  40cbca:	imul   edi,DWORD PTR [esi+0x79],0x76095156
  40cbd1:	mov    al,0xfd
  40cbd3:	dec    eax
  40cbd4:	jo     0x40cc11
  40cbd6:	xchg   esi,eax
  40cbd7:	fnstsw WORD PTR [esi]
  40cbd9:	add    eax,0x38118837
  40cbde:	jae    0x40cc09
  40cbe0:	sbb    bh,BYTE PTR [esi-0x5b]
  40cbe3:	or     eax,0x9d377a54
  40cbe8:	in     al,dx
  40cbe9:	lea    edi,[edx-0x5d]
  40cbec:	and    al,0xe9
  40cbee:	mov    dh,0x9c
  40cbf0:	out    dx,eax
  40cbf1:	jmp    0xdf6e:0x9853a50e
  40cbf8:	pop    ebx
  40cbf9:	cmp    al,0xa5
  40cbfb:	imul   DWORD PTR [ebx+0x5d]
  40cbfe:	xor    bh,BYTE PTR [esi+0x4]
  40cc01:	jb     0x40cb91
  40cc03:	adc    DWORD PTR [ecx+0x3e],ebx
  40cc06:	dec    ebp
  40cc07:	out    dx,al
  40cc08:	inc    eax
  40cc09:	lods   eax,DWORD PTR ds:[esi]
  40cc0a:	sbb    edx,DWORD PTR [ecx+ecx*1]
  40cc0d:	rcl    DWORD PTR [ecx+0x54f64cd8],1
  40cc13:	pusha  
  40cc14:	test   al,0xa0
  40cc16:	mov    esp,0x589d6da2
  40cc1b:	cmp    ch,bh
  40cc1d:	add    dh,BYTE PTR [esi]
  40cc1f:	pop    edi
  40cc20:	fst    DWORD PTR [esi-0x23]
  40cc23:	rcl    DWORD PTR [ebp+0x7d],1
  40cc26:	and    ebp,DWORD PTR [ecx]
  40cc28:	push   0x8feb1a04
  40cc2d:	add    al,0x96
  40cc2f:	js     0x40cc31
  40cc31:	xor    al,BYTE PTR ds:[esi-0x67]
  40cc35:	adc    BYTE PTR [ebp+0x3b],0x9d
  40cc39:	div    DWORD PTR [edx]
  40cc3b:	xchg   ecx,eax
  40cc3c:	cmp    eax,0xe5abb705
  40cc41:	lds    edi,FWORD PTR [edx+esi*2-0x1faa9252]
  40cc48:	pushf  
  40cc49:	cmp    ebx,DWORD PTR [edx+0x67]
  40cc4c:	int3   
  40cc4d:	pop    ds
  40cc4e:	stos   DWORD PTR es:[edi],eax
  40cc4f:	xchg   ebx,edx
  40cc51:	sub    dl,ch
  40cc53:	or     DWORD PTR [edx-0xab85e8b],ebx
  40cc59:	hlt    
  40cc5a:	inc    ebp
  40cc5b:	lock outs dx,BYTE PTR ds:[esi]
  40cc5d:	and    al,0x96
  40cc5f:	adc    al,0x90
  40cc61:	rcl    edi,0x22
  40cc64:	xor    ebx,DWORD PTR [edx-0x394a0f33]
  40cc6a:	mov    dl,BYTE PTR [ecx]
  40cc6c:	or     ah,0x9c
  40cc6f:	mov    al,ds:0x3b7476c6
  40cc74:	mov    ds:0x3312dd1,eax
  40cc79:	push   ebp
  40cc7a:	dec    edi
  40cc7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc7c:	lahf   
  40cc7d:	dec    ebx
  40cc7e:	and    DWORD PTR [edi+0x4a54cdc9],ebx
  40cc84:	cmp    eax,0x529d7b28
  40cc89:	fs adc eax,0x840674d4
  40cc8f:	xchg   esp,eax
  40cc90:	popa   
  40cc91:	push   ecx
  40cc92:	cmp    al,ah
  40cc94:	test   BYTE PTR [ebx+esi*1],0x86
  40cc98:	xor    bl,BYTE PTR [edi+0x107561b2]
  40cc9e:	mov    bl,0xfe
  40cca0:	test   DWORD PTR [edi-0x3c],esi
  40cca3:	dec    ebx
  40cca4:	call   0xc9bda3c5
  40cca9:	push   esp
  40ccaa:	unpcklps xmm4,xmm1
  40ccad:	rol    DWORD PTR [edi-0x1e],1
  40ccb0:	gs pushaw 
  40ccb3:	add    DWORD PTR [ecx+0x4b],eax
  40ccb6:	jns    0x40cd27
  40ccb8:	lds    eax,FWORD PTR [ebp*1+0x24b3d2f6]
  40ccbf:	add    BYTE PTR [ebp-0xec5c0fe],0x2c
  40ccc6:	mov    bl,0x9d
  40ccc8:	stos   BYTE PTR es:[edi],al
  40ccc9:	mov    edi,0xfa224980
  40ccce:	stc    
  40cccf:	loop   0x40ccf0
  40ccd1:	pop    edi
  40ccd2:	shr    BYTE PTR [ebx-0x1ef686d2],1
  40ccd8:	push   esp
  40ccd9:	or     eax,0x606a898d
  40ccde:	enter  0xc9e,0x93
  40cce2:	outs   dx,BYTE PTR ds:[esi]
  40cce3:	call   0x783c:0x7d5e7eaf
  40ccea:	fstp   QWORD PTR [ebp-0x62d8db97]
  40ccf0:	shr    DWORD PTR [edi+0x141b4129],1
  40ccf6:	or     BYTE PTR [eax-0x64289127],cl
  40ccfc:	fiadd  WORD PTR [ebp+0x358f32e3]
  40cd02:	hlt    
  40cd03:	mov    ecx,0x6668360c
  40cd08:	mov    esi,0xa967b16f
  40cd0d:	dec    esp
  40cd0e:	pusha  
  40cd0f:	sbb    eax,0x123df344
  40cd14:	jg     0x40cc9d
  40cd16:	cmp    edi,DWORD PTR [edi+0x278127fe]
  40cd1c:	aam    0x5c
  40cd1e:	push   edi
  40cd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd20:	dec    ebx
  40cd21:	fisttp QWORD PTR [eax+0x7f]
  40cd24:	mov    al,0xc1
  40cd26:	jo     0x40cd66
  40cd28:	adc    eax,esp
  40cd2a:	stc    
  40cd2b:	pop    es
  40cd2c:	mov    ah,0xad
  40cd2e:	pusha  
  40cd2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd30:	jmp    0x40cd5a
  40cd32:	pop    ebp
  40cd33:	cmp    esp,eax
  40cd35:	add    eax,0xb14f77eb
  40cd3a:	mov    eax,ds:0x7d334eb6
  40cd3f:	fs ret 
  40cd41:	(bad)  
  40cd42:	fisttp WORD PTR [eax*1-0x54877f2a]
  40cd49:	mov    ecx,0xa513cb35
  40cd4e:	mov    bl,0x68
  40cd50:	add    eax,0x3ed48347
  40cd55:	lahf   
  40cd56:	dec    ebp
  40cd57:	loop   0x40cd5d
  40cd59:	into   
  40cd5a:	sbb    eax,DWORD PTR [ebp+edi*2+0x29b2f3ee]
  40cd61:	out    dx,eax
  40cd62:	mov    edi,ebp
  40cd64:	rcr    DWORD PTR [edi],cl
  40cd66:	cwde   
  40cd67:	pop    esp
  40cd68:	arpl   WORD PTR [esi+edx*8-0x5c5a7d0a],di
  40cd6f:	scas   al,BYTE PTR es:[edi]
  40cd70:	cmp    BYTE PTR [edi+0x43],al
  40cd73:	adc    al,0x67
  40cd75:	inc    esp
  40cd76:	dec    edi
  40cd77:	scas   al,BYTE PTR es:[edi]
  40cd78:	add    edx,eax
  40cd7a:	mov    ds:0x5c6b1b83,al
  40cd7f:	leave  
  40cd80:	ror    ch,0xfd
  40cd83:	icebp  
  40cd84:	mov    ch,0xd4
  40cd86:	xor    ah,al
  40cd88:	jl     0x40cddb
  40cd8a:	add    dl,BYTE PTR [esi+ecx*1-0xf87d0a5]
  40cd91:	fwait
  40cd92:	mov    BYTE PTR [ebx+0x583f0217],ch
  40cd98:	(bad)  
  40cd99:	xor    ebx,DWORD PTR cs:[edx-0x1c]
  40cd9d:	clc    
  40cd9e:	xlat   BYTE PTR ds:[ebx]
  40cd9f:	int3   
  40cda0:	out    0xad,eax
  40cda2:	addr16 inc edx
  40cda4:	fnstenv [edx]
  40cda6:	(bad)  
  40cda7:	xchg   ebp,eax
  40cda8:	xor    al,0xce
  40cdaa:	mov    ebp,0xa1bd5db3
  40cdaf:	ins    BYTE PTR es:[edi],dx
  40cdb0:	jge    0x40cdc5
  40cdb2:	xchg   edx,eax
  40cdb3:	push   edi
  40cdb4:	daa    
  40cdb5:	sti    
  40cdb6:	pop    ecx
  40cdb8:	and    edi,ebp
  40cdba:	cdq    
  40cdbb:	fbld   TBYTE PTR [eax]
  40cdbd:	jb     0x40cdb9
  40cdbf:	cmp    eax,ecx
  40cdc1:	test   DWORD PTR [ecx],0x20fdd72
  40cdc7:	aaa    
  40cdc8:	sub    esi,DWORD PTR [esi-0x28]
  40cdcb:	in     eax,dx
  40cdcc:	and    al,0xb3
  40cdce:	sub    al,0x60
  40cdd0:	push   ebx
  40cdd1:	jnp    0x40cd84
  40cdd3:	mov    dl,0x54
  40cdd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdd6:	out    dx,al
  40cdd7:	loopne 0x40cd8c
  40cdd9:	push   es
  40cdda:	push   ds
  40cddb:	or     al,0x33
  40cddd:	or     ah,cl
  40cddf:	int    0xe8
  40cde1:	lods   eax,DWORD PTR ds:[esi]
  40cde2:	jmp    0x6824:0xa8a873
  40cde9:	in     eax,dx
  40cdea:	xor    dl,0x6b
  40cded:	hlt    
  40cdee:	test   al,0x76
  40cdf0:	out    dx,al
  40cdf1:	cmp    bl,bh
  40cdf3:	or     edi,edi
  40cdf5:	mov    al,0x1
  40cdf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdf8:	push   cs
  40cdf9:	mov    dh,0xbf
  40cdfb:	das    
  40cdfc:	das    
  40cdfd:	or     BYTE PTR [ebx],ah
  40cdff:	dec    edi
  40ce00:	sti    
  40ce01:	xor    al,0x83
  40ce03:	out    dx,eax
  40ce04:	stos   DWORD PTR es:[edi],eax
  40ce05:	call   0x41d3a5ed
  40ce0a:	jle    0x40ce6c
  40ce0c:	mov    dh,0x4
  40ce0e:	jnp    0x40cdc5
  40ce10:	fsub   DWORD PTR [eax+edx*2+0xb]
  40ce14:	mov    dh,0xdc
  40ce16:	lea    esp,[ebx]
  40ce18:	add    eax,DWORD PTR [ecx+0x3c]
  40ce1b:	xor    al,0x78
  40ce1d:	rol    dl,0xb6
  40ce20:	pop    ds
  40ce21:	sub    eax,0xad18c6d1
  40ce26:	das    
  40ce27:	xchg   esi,eax
  40ce28:	push   ebx
  40ce29:	cmp    eax,0xe6afd8ba
  40ce2e:	add    eax,0x66beca3f
  40ce33:	push   esi
  40ce34:	push   esp
  40ce35:	xchg   ecx,eax
  40ce36:	hlt    
  40ce37:	or     al,0x65
  40ce39:	(bad)
  40ce3c:	cmp    dh,BYTE PTR [ecx-0x1e]
  40ce3f:	cmp    esp,esp
  40ce41:	xchg   ebx,eax
  40ce42:	aas    
  40ce43:	inc    edi
  40ce44:	in     eax,0x2
  40ce46:	push   es
  40ce47:	add    DWORD PTR [edi+0x406b3623],esi
  40ce4d:	sbb    ah,BYTE PTR [edx-0x3d]
  40ce50:	xor    DWORD PTR [ecx-0x75d5cdb6],ecx
  40ce56:	test   bl,cl
  40ce58:	or     BYTE PTR [edx-0x42],al
  40ce5b:	dec    ecx
  40ce5c:	sbb    al,dl
  40ce5e:	sti    
  40ce5f:	adc    al,dl
  40ce61:	push   es
  40ce62:	xchg   DWORD PTR [edi],edx
  40ce64:	or     edx,ecx
  40ce66:	cmc    
  40ce67:	and    al,0xb
  40ce69:	jmp    0xaf0f3435
  40ce6e:	out    dx,al
  40ce6f:	jmp    0x3367:0x5ebf966c
  40ce76:	cli    
  40ce77:	or     BYTE PTR [ebp+ebx*2+0x1c05a04b],al
  40ce7e:	push   ebp
  40ce7f:	mov    ?,WORD PTR [ecx+ebp*8-0x236283b]
  40ce86:	push   ecx
  40ce87:	test   al,0x84
  40ce89:	bound  ebx,QWORD PTR [edi+edi*2-0x61ac270c]
  40ce90:	jecxz  0x40ced9
  40ce92:	es sti 
  40ce94:	stos   BYTE PTR es:[edi],al
  40ce95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce96:	out    0x85,eax
  40ce98:	bound  eax,QWORD PTR [eax-0x7a020823]
  40ce9e:	ret    
  40ce9f:	(bad)  
  40cea0:	stos   BYTE PTR es:[edi],al
  40cea1:	iret   
  40cea2:	pop    ss
  40cea3:	or     eax,0xb6b45549
  40cea8:	fisub  DWORD PTR [ebx-0x20]
  40ceab:	adc    ch,BYTE PTR [ecx-0x5c4cf607]
  40ceb1:	sbb    edi,DWORD PTR [edi-0x6e]
  40ceb4:	ins    DWORD PTR es:[edi],dx
  40ceb5:	mov    ss,eax
  40ceb7:	cld    
  40ceb8:	sub    cl,BYTE PTR [ebx-0x47]
  40cebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cebc:	stc    
  40cebd:	xchg   ebx,eax
  40cebe:	push   ecx
  40cebf:	popa   
  40cec0:	pop    edi
  40cec1:	and    DWORD PTR [ecx+0x3d],ecx
  40cec4:	arpl   bx,cx
  40cec6:	cmp    bh,BYTE PTR [edi-0xe4fec2f]
  40cecc:	add    dh,al
  40cece:	mov    esi,0x50765d33
  40ced3:	ins    BYTE PTR es:[edi],dx
  40ced4:	dec    esi
  40ced5:	fdivr  DWORD PTR [esi]
  40ced7:	cmp    DWORD PTR [ecx+0xa],ebp
  40ceda:	outs   dx,DWORD PTR ds:[esi]
  40cedb:	or     eax,0x204d788b
  40cee0:	sbb    eax,0x513d8250
  40cee5:	mov    edi,0x38a20fef
  40ceea:	sub    esp,esi
  40ceec:	outs   dx,BYTE PTR ds:[esi]
  40ceed:	xor    BYTE PTR [esi],0xd2
  40cef0:	(bad)  
  40cef1:	adc    al,0x92
  40cef3:	jbe    0x40cf26
  40cef5:	mov    dl,0x64
  40cef7:	sbb    ch,BYTE PTR [ebp+0x7a569dd7]
  40cefd:	fwait
  40cefe:	das    
  40ceff:	and    eax,0xe22aeb86
  40cf04:	enter  0x2d1c,0x52
  40cf08:	and    bh,bh
  40cf0a:	cmp    DWORD PTR [ecx+ecx*1],ecx
  40cf0d:	cli    
  40cf0e:	mov    ebp,0x12d991d7
  40cf13:	mov    bl,0xcd
  40cf15:	inc    ebx
  40cf16:	(bad)
  40cf19:	shr    BYTE PTR [ecx+0x511bc06d],1
  40cf1f:	mov    cl,0x20
  40cf21:	inc    esi
  40cf22:	mov    ebx,0xb3c1b6bb
  40cf27:	rcr    DWORD PTR [edi+0xdf37184],1
  40cf2d:	test   al,0x58
  40cf2f:	repnz fadd QWORD PTR [ecx-0x44]
  40cf33:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40cf35:	dec    esi
  40cf36:	fld    TBYTE PTR [ebp-0x6a]
  40cf39:	stc    
  40cf3a:	lods   al,BYTE PTR ds:[esi]
  40cf3b:	ss jnp 0x40cf64
  40cf3e:	jbe    0x40cee1
  40cf40:	cmp    DWORD PTR [ebx-0x27],ebp
  40cf43:	loopne 0x40cf49
  40cf45:	daa    
  40cf46:	push   0x62
  40cf48:	pshufw mm1,mm0,0x84
  40cf4c:	not    DWORD PTR ds:0xbb5d7bb
  40cf52:	push   ds
  40cf53:	and    al,BYTE PTR [edi]
  40cf55:	cmc    
  40cf56:	fwait
  40cf57:	xchg   ebp,eax
  40cf58:	retf   0x194e
  40cf5b:	mov    ah,0x48
  40cf5d:	ret    0x932a
  40cf60:	and    BYTE PTR [ebp+edx*1+0x4b],ah
  40cf64:	call   0x497e:0x700ce104
  40cf6b:	outs   dx,BYTE PTR ds:[esi]
  40cf6c:	xchg   DWORD PTR [esi],eax
  40cf6e:	cmp    BYTE PTR [edi-0x3526f22],0xac
  40cf75:	aad    0xe9
  40cf77:	shl    ebx,cl
  40cf79:	dec    eax
  40cf7a:	inc    esp
  40cf7b:	mov    dl,0x72
  40cf7d:	jae    0x40cf76
  40cf7f:	in     eax,0x82
  40cf81:	adc    eax,0xf5c61614
  40cf86:	lahf   
  40cf87:	call   FWORD PTR [eax+0x35]
  40cf8a:	pop    edx
  40cf8b:	jnp    0x40cf3d
  40cf8d:	enter  0x3600,0xc8
  40cf91:	adc    DWORD PTR [esi],ebx
  40cf93:	mov    DWORD PTR [edi],ebx
  40cf95:	jg     0x40cf48
  40cf97:	dec    edx
  40cf98:	inc    ebx
  40cf99:	push   cs
  40cf9a:	push   ebx
  40cf9b:	jae    0x40cf4a
  40cf9d:	hlt    
  40cf9e:	ins    DWORD PTR es:[edi],dx
  40cf9f:	pop    edx
  40cfa0:	sub    DWORD PTR [eax+0x1f],esi
  40cfa3:	movaps XMMWORD PTR [eax-0x7e779078],xmm2
  40cfaa:	xor    ebx,0xffffffdb
  40cfad:	pusha  
  40cfae:	fild   QWORD PTR [edx]
  40cfb0:	std    
  40cfb1:	das    
  40cfb2:	adc    al,BYTE PTR [ebx+0x2215860]
  40cfb8:	lds    ebx,FWORD PTR [ebx+edi*2]
  40cfbb:	pop    ebp
  40cfbc:	push   ebp
  40cfbd:	mov    cs,WORD PTR [eax]
  40cfbf:	add    eax,0xd9a72e3b
  40cfc4:	fstp   DWORD PTR [edx+0x8a1a975]
  40cfca:	lahf   
  40cfcb:	into   
  40cfcc:	inc    bx
  40cfce:	jg     0x40cf8c
  40cfd0:	sub    eax,0x61bb0ea1
  40cfd5:	in     al,dx
  40cfd6:	pop    edi
  40cfd7:	sub    BYTE PTR ds:[edi+eiz*8],dl
  40cfdb:	jle    0x40d032
  40cfdd:	push   ebp
  40cfde:	aad    0x86
  40cfe0:	push   esi
  40cfe1:	sub    ch,bl
  40cfe3:	stc    
  40cfe4:	mov    ch,0x9d
  40cfe6:	imul   ebp,DWORD PTR [edi-0x3f],0xfb4ab2a5
  40cfed:	jno    0x40d02c
  40cfef:	and    al,0xfc
  40cff1:	call   0x5689c40b
  40cff6:	inc    esi
  40cff7:	fsubr  DWORD PTR [ecx]
  40cff9:	rcr    DWORD PTR [ebp-0x771892a],0x5
  40d000:	int3   
  40d001:	std    
  40d002:	push   edx
  40d003:	jmp    0x40d007
  40d005:	mov    DWORD PTR [ebx+0x11645398],esp
  40d00b:	repnz and eax,0x7ada76ac
  40d011:	xor    ecx,DWORD PTR [ebx+edx*4]
  40d014:	jg     0x40d089
  40d016:	inc    edx
  40d017:	mov    cl,0x4e
  40d019:	test   BYTE PTR [edx],bl
  40d01b:	fwait
  40d01c:	add    al,0x3f
  40d01e:	lock jne 0x40d07b
  40d021:	jne    0x40d08f
  40d023:	xor    eax,0x3abfa98c
  40d028:	imul   ebx,edx,0xffffffc7
  40d02b:	sub    al,0xbe
  40d02d:	mov    ah,0xcc
  40d02f:	fidivr WORD PTR [edi-0x2f]
  40d032:	(bad)  
  40d033:	pop    ds
  40d034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d035:	or     al,0x19
  40d037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d038:	in     eax,dx
  40d039:	dec    eax
  40d03a:	adc    ecx,ebp
  40d03c:	sbb    bl,BYTE PTR [edx+0x6e]
  40d03f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d040:	push   ecx
  40d041:	cmc    
  40d042:	add    dl,bh
  40d044:	cs nop
  40d046:	daa    
  40d047:	call   0x7f5b633f
  40d04c:	std    
  40d04d:	repz push 0xa40aff97
  40d053:	jb     0x40d04e
  40d055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d056:	jecxz  0x40d080
  40d058:	sub    DWORD PTR ds:[ecx-0x66ec6aa4],0x21
  40d060:	add    al,0xe1
  40d062:	xchg   ebp,eax
  40d063:	push   esi
  40d064:	and    al,0xdd
  40d066:	(bad)  [eax+eax*1+0x2b]
  40d06a:	call   0x93a:0x4ca244f2
  40d071:	mov    ebx,0x1bc33ef5
  40d076:	lahf   
  40d077:	popa   
  40d078:	in     eax,0x94
  40d07a:	retf   0xe106
  40d07d:	ds add al,0x33
  40d080:	adc    al,0x8e
  40d082:	aad    0x62
  40d084:	daa    
  40d085:	mov    bl,0x77
  40d087:	and    DWORD PTR [ebx-0x4f],ecx
  40d08a:	adc    cl,BYTE PTR [ebx]
  40d08c:	pop    ds
  40d08d:	push   es
  40d08e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d08f:	xor    BYTE PTR [edx],ah
  40d091:	push   ss
  40d092:	and    BYTE PTR ds:[eax],ch
  40d095:	fdivr  QWORD PTR [esi]
  40d097:	push   0x828b33b0
  40d09c:	dec    ebx
  40d09d:	outs   dx,DWORD PTR ds:[esi]
  40d09e:	sub    DWORD PTR [edi-0x1e407c15],ebp
  40d0a4:	stc    
  40d0a5:	sub    dh,BYTE PTR [esi-0x52]
  40d0a8:	xor    bh,ch
  40d0aa:	jp     0x40d04e
  40d0ac:	mov    eax,0x95e6c5fd
  40d0b1:	jae    0x40d0f9
  40d0b3:	int    0x97
  40d0b5:	adc    eax,edx
  40d0b7:	fyl2xp1 
  40d0b9:	jb     0x40d04b
  40d0bb:	push   cs
  40d0bc:	or     DWORD PTR [edx+eiz*1-0x2ced87dc],0xffffffba
  40d0c4:	enter  0x20e5,0x9c
  40d0c8:	xchg   DWORD PTR [ebp+0x63],edx
  40d0cb:	sahf   
  40d0cc:	jno    0x40d08f
  40d0ce:	not    BYTE PTR [esi]
  40d0d0:	xor    bl,cl
  40d0d2:	sahf   
  40d0d3:	push   esp
  40d0d4:	mov    ebx,0x8f89c97
  40d0d9:	in     al,0x10
  40d0db:	retf   0x26c8
  40d0de:	(bad)  
  40d0df:	fldenv [edi+0x46]
  40d0e2:	into   
  40d0e3:	(bad)  
  40d0e4:	fst    DWORD PTR [eax]
  40d0e6:	cmp    edi,DWORD PTR [esi]
  40d0e8:	in     eax,0x60
  40d0ea:	lock inc ebp
  40d0ec:	mov    ah,0x9e
  40d0ee:	pusha  
  40d0ef:	add    ah,bh
  40d0f1:	scas   eax,DWORD PTR es:[edi]
  40d0f2:	clc    
  40d0f3:	rcr    DWORD PTR [edx],1
  40d0f5:	mov    ecx,0x38dba1bf
  40d0fa:	sub    ebx,ecx
  40d0fc:	and    al,0x69
  40d0ff:	inc    ecx
  40d100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d101:	mov    DWORD PTR [edx-0x722cc4cb],ebx
  40d107:	or     DWORD PTR [ebp-0x2b],edi
  40d10a:	mov    edx,0x2267b898
  40d10f:	ror    DWORD PTR [edx-0x7a],0x61
  40d113:	mov    ds:0x6b7f37,al
  40d118:	mov    ah,BYTE PTR [edi+0x59]
  40d11b:	clc    
  40d11c:	xchg   edi,eax
  40d11d:	mov    ch,0x7c
  40d11f:	jp     0x40d18b
  40d121:	jo     0x40d101
  40d123:	dec    ecx
  40d124:	cmp    DWORD PTR [ebp-0xd4578f7],ebx
  40d12a:	(bad)  
  40d12b:	sub    esi,edx
  40d12d:	sub    DWORD PTR [esp+ebx*4],ebx
  40d130:	cld    
  40d131:	add    BYTE PTR [ecx-0x69],bh
  40d134:	jle    0x40d0ec
  40d136:	jge    0x40d194
  40d138:	pusha  
  40d139:	mov    ebp,0x22308ec
  40d13e:	jnp    0x40d1a2
  40d140:	or     BYTE PTR [edx-0x3dae8557],cl
  40d146:	sub    eax,0x68f9b087
  40d14b:	push   ss
  40d14c:	pop    ecx
  40d14d:	push   ecx
  40d14e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d14f:	jg     0x40d0de
  40d151:	sar    dh,0xb9
  40d154:	jbe    0x40d156
  40d156:	inc    ecx
  40d157:	rcr    DWORD PTR [edx+0x30a6b0ef],cl
  40d15d:	(bad)  
  40d15e:	jmp    0xda48b6b8
  40d163:	daa    
  40d164:	xchg   edi,eax
  40d165:	into   
  40d166:	and    edx,DWORD PTR [ebp+0xe9f8c78]
  40d16c:	push   ecx
  40d16d:	neg    BYTE PTR [esi-0x71]
  40d170:	dec    esp
  40d171:	rep ins BYTE PTR es:[edi],dx
  40d173:	jae    0x40d193
  40d175:	cmp    esp,DWORD PTR [esi+eiz*8]
  40d178:	push   es
  40d179:	(bad)  
  40d17a:	xchg   esp,eax
  40d17b:	arpl   WORD PTR [ebx+0x1f],cx
  40d17e:	add    DWORD PTR [ebp+0x357415b8],esp
  40d184:	adc    al,0x75
  40d186:	iret   
  40d187:	xchg   BYTE PTR [esi-0xa],al
  40d18a:	in     al,dx
  40d18b:	inc    ecx
  40d18c:	dec    edi
  40d18d:	aam    0x31
  40d18f:	aam    0xb0
  40d191:	cmp    BYTE PTR [edi+0x6f62ffdb],dh
  40d197:	ss into 
  40d199:	mov    esp,0xc9ec701f
  40d19e:	outs   dx,DWORD PTR ds:[esi]
  40d19f:	ror    DWORD PTR [eax+eax*1],0x66
  40d1a3:	cmp    eax,0x18d664f0
  40d1a8:	and    al,0x31
  40d1aa:	retf   
  40d1ab:	jmp    0x40d1d3
  40d1ad:	and    cl,BYTE PTR [eax-0x69]
  40d1b0:	nop
  40d1b1:	std    
  40d1b2:	sub    BYTE PTR [esi],dh
  40d1b4:	xor    DWORD PTR [edx*1+0x6b6b4e3b],ebp
  40d1bb:	das    
  40d1bc:	(bad)  
  40d1bd:	enter  0x467c,0x8d
  40d1c1:	inc    ebx
  40d1c2:	cmp    ch,bh
  40d1c4:	jl     0x40d1db
  40d1c6:	push   eax
  40d1c7:	push   0x9
  40d1c9:	aad    0x66
  40d1cb:	jmp    0xb568:0xba37bab4
  40d1d2:	mov    ds:0x517bd2b,al
  40d1d7:	in     eax,0x42
  40d1d9:	stos   BYTE PTR es:[edi],al
  40d1da:	mov    eax,ds:0xb70ff8a0
  40d1df:	pop    es
  40d1e0:	clc    
  40d1e1:	cld    
  40d1e2:	push   ds
  40d1e3:	scas   al,BYTE PTR es:[edi]
  40d1e4:	ret    0x7475
  40d1e7:	xlat   BYTE PTR ds:[ebx]
  40d1e8:	ret    
  40d1e9:	daa    
  40d1ea:	(bad)  
  40d1eb:	repz or al,0x6f
  40d1ee:	cli    
  40d1ef:	popf   
  40d1f0:	scas   al,BYTE PTR es:[edi]
  40d1f1:	repz fdiv DWORD PTR [esi+0x62bbbff9]
  40d1f8:	adc    BYTE PTR ds:0xfb7b793c,dl
  40d1fe:	xchg   ecx,eax
  40d1ff:	int    0xde
  40d201:	adc    esp,0xffffffb7
  40d204:	imul   edi,DWORD PTR [edi+0x75],0x3aefa762
  40d20b:	sbb    bl,BYTE PTR [ebx*8+0x14889ab2]
  40d212:	inc    esi
  40d213:	jo     0x40d255
  40d215:	scas   al,BYTE PTR es:[edi]
  40d216:	pop    esp
  40d217:	dec    ebp
  40d218:	daa    
  40d219:	fs add esp,0x64663c6b
  40d220:	fistp  DWORD PTR [ebp+ebp*2+0x29fdd0d8]
  40d227:	ficom  WORD PTR [ebp-0x53]
  40d22a:	sbb    eax,0xc88ebf9c
  40d22f:	imul   ebx,ecx,0x5f
  40d232:	scas   al,BYTE PTR es:[edi]
  40d233:	adc    DWORD PTR [edx+edi*8],edx
  40d236:	push   ss
  40d237:	mov    ecx,0xef1bc7c6
  40d23c:	rol    DWORD PTR [esi-0x1e],0x1d
  40d240:	pop    ecx
  40d241:	ins    BYTE PTR es:[edi],dx
  40d242:	int    0xbf
  40d244:	aad    0x57
  40d246:	or     al,0x96
  40d248:	or     dh,BYTE PTR [eax+0xd66671c]
  40d24e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d24f:	pop    eax
  40d250:	or     edx,ebp
  40d252:	and    bl,BYTE PTR [eax-0x342bd3d4]
  40d258:	pop    esp
  40d259:	or     edx,DWORD PTR [edx]
  40d25b:	add    ebp,DWORD PTR cs:[ecx+esi*8+0x9]
  40d260:	retf   
  40d261:	mov    ecx,0xbeae7945
  40d266:	mov    ds:0x5d27b910,eax
  40d26b:	add    DWORD PTR [esi],ebp
  40d26d:	pop    ebp
  40d26e:	(bad)  
  40d26f:	dec    edx
  40d270:	cld    
  40d271:	adc    DWORD PTR ds:[ecx+0x5c923744],ecx
  40d278:	call   0x7715:0x2dc187b4
  40d27f:	mov    edi,0x2a92ea32
  40d284:	mov    cl,0x34
  40d286:	add    al,0xbc
  40d288:	mov    ch,0x7e
  40d28a:	repnz cmp eax,0xc8bdbfe8
  40d290:	imul   eax,DWORD PTR [ebp-0x5b],0x2f00631f
  40d297:	(bad)
  40d29b:	push   eax
  40d29c:	push   ecx
  40d29d:	jo     0x40d232
  40d29f:	scas   al,BYTE PTR es:[edi]
  40d2a0:	in     al,0x44
  40d2a2:	adc    ebp,DWORD PTR [esi]
  40d2a4:	mov    esi,0x2d0054c
  40d2a9:	xor    DWORD PTR [edi],ebp
  40d2ab:	and    al,0x74
  40d2ad:	clc    
  40d2ae:	jns    0x40d29d
  40d2b0:	jne    0x40d2b8
  40d2b2:	jbe    0x40d305
  40d2b4:	inc    esp
  40d2b5:	pop    edx
  40d2b6:	mov    eax,ds:0xefd3bfb
  40d2bb:	inc    ebp
  40d2bc:	push   edx
  40d2bd:	mov    bh,0xc6
  40d2bf:	or     BYTE PTR [ecx+0x50dc4b42],ch
  40d2c5:	push   ss
  40d2c6:	fcomp  QWORD PTR es:[edi+0x2800b5ed]
  40d2cd:	in     al,0x4e
  40d2cf:	xor    esi,ecx
  40d2d1:	push   ecx
  40d2d2:	fs test bl,bl
  40d2d5:	add    DWORD PTR [edi-0x4b],esp
  40d2d8:	xor    al,0x4a
  40d2da:	and    ah,ah
  40d2dc:	add    al,0x42
  40d2de:	or     BYTE PTR [edx+ebp*1-0x3f],bl
  40d2e2:	test   DWORD PTR [esi+ecx*4],esp
  40d2e5:	dec    eax
  40d2e6:	fcomp  DWORD PTR [ecx+0x105e5e82]
  40d2ec:	out    0x61,al
  40d2ee:	mov    edi,es
  40d2f0:	push   DWORD PTR [esi-0x7f86e6b7]
  40d2f6:	xchg   esi,eax
  40d2f7:	outs   dx,BYTE PTR ds:[esi]
  40d2f8:	dec    edi
  40d2f9:	jl     0x40d313
  40d2fb:	int3   
  40d2fc:	leave  
  40d2fd:	(bad)  
  40d2fe:	pop    esp
  40d2ff:	ins    BYTE PTR es:[edi],dx
  40d300:	lock sti 
  40d302:	mov    eax,ds:0x42085c69
  40d307:	inc    ebp
  40d308:	repz sbb BYTE PTR [edx-0x4e],dl
  40d30c:	xor    BYTE PTR ds:0x9a3a865c,cl
  40d312:	pop    edi
  40d313:	mov    bl,0x10
  40d315:	in     eax,dx
  40d316:	mov    al,0xf3
  40d318:	cmp    ah,BYTE PTR [edx+0x5dfef25d]
  40d31e:	dec    edi
  40d31f:	dec    ebp
  40d320:	jp     0x40d337
  40d322:	sbb    al,0xf8
  40d324:	jg     0x40d397
  40d326:	enter  0x5d9a,0x87
  40d32a:	fist   DWORD PTR [eax+0x3e644215]
  40d330:	repz call 0x2a5e78a6
  40d336:	cli    
  40d337:	fadd   QWORD PTR [eax+ecx*4+0xaa6dfab]
  40d33e:	pop    ebp
  40d33f:	mov    edx,0xce3703af
  40d344:	adc    eax,0xdfa8ace4
  40d349:	add    BYTE PTR [ecx-0x4616cf63],dh
  40d34f:	mov    ds:0xe685aa1,eax
  40d354:	xchg   BYTE PTR [esi-0x38f6c89a],dl
  40d35a:	mov    esi,0xccf057a1
  40d35f:	punpcklwd mm0,mm1
  40d362:	retf   
  40d363:	inc    ebx
  40d364:	cli    
  40d365:	and    esi,DWORD PTR [edi-0x708663c9]
  40d36b:	push   edx
  40d36c:	add    DWORD PTR [ecx],ebp
  40d36e:	shl    esi,0x36
  40d371:	xor    DWORD PTR [edx-0x48],esp
  40d374:	dec    edi
  40d375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d376:	imul   ebx,edi,0xf
  40d379:	out    0x8a,eax
  40d37b:	(bad)  
  40d37c:	popa   
  40d37d:	inc    DWORD PTR [ecx+0x1002c3]
  40d383:	add    BYTE PTR [ebp-0x2ffc17bb],cl
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	add    al,BYTE PTR [esi-0x2c4dd76a]
  40d3d6:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffa6
  40d3dd:	sar    dl,1
  40d3df:	outs   dx,BYTE PTR ds:[esi]
  40d3e0:	test   ch,bh
  40d3e2:	pop    edx
  40d3e3:	dec    ebp
  40d3e4:	(bad)  
  40d3e5:	push   eax
  40d3e6:	ds int3 
  40d3e8:	scas   eax,DWORD PTR es:[edi]
  40d3e9:	stc    
  40d3ea:	mov    esp,0xef689f9b
  40d3ef:	test   al,0x88
  40d3f1:	repz cmc 
  40d3f3:	xchg   edi,eax
  40d3f4:	dec    esp
  40d3f5:	jp     0x40d393
  40d3f7:	xchg   edi,eax
  40d3f8:	stc    
  40d3f9:	or     BYTE PTR [edi+0x1b],bl
  40d3fc:	shl    DWORD PTR [edi-0x537c5f9f],1
  40d402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d403:	out    0x29,al
  40d405:	les    ebx,FWORD PTR [ebp+0x50]
  40d408:	enter  0x2833,0xbe
  40d40c:	hlt    
  40d40d:	pop    esp
  40d40e:	enter  0xb0f3,0xac
  40d412:	out    dx,eax
  40d413:	pushf  
  40d414:	and    al,0x84
  40d416:	dec    ebx
  40d417:	add    BYTE PTR [ebp-0x39],ch
  40d41a:	push   ecx
  40d41b:	sbb    BYTE PTR [edi+0x4f],cl
  40d41e:	(bad)  
  40d41f:	(bad)  
  40d420:	cmp    al,0x3
  40d422:	push   eax
  40d423:	jmp    0xd196:0xc612e8f0
  40d42a:	les    eax,FWORD PTR [eax+0x7b]
  40d42d:	mov    fs,WORD PTR [ebp-0x452584bc]
  40d433:	das    
  40d434:	ficom  DWORD PTR [eax+0x49d7468e]
  40d43a:	sbb    dl,BYTE PTR [eax]
  40d43c:	test   al,0x44
  40d43e:	mul    BYTE PTR [edx-0x69055a3c]
  40d444:	int    0xc3
  40d446:	adc    BYTE PTR [edi-0x74],bl
  40d449:	inc    ebx
  40d44a:	ins    BYTE PTR es:[edi],dx
  40d44b:	std    
  40d44c:	push   edi
  40d44d:	out    0x99,eax
  40d44f:	adc    bl,BYTE PTR [ecx+0x2b]
  40d452:	aas    
  40d453:	jecxz  0x40d3f1
  40d455:	jmp    0xd856:0x3b900abc
  40d45c:	outs   dx,DWORD PTR ds:[esi]
  40d45d:	jmp    0x40d42b
  40d45f:	adc    ebx,DWORD PTR [ecx-0x28]
  40d462:	pop    ebp
  40d463:	std    
  40d464:	push   0xffffffc0
  40d466:	dec    ebx
  40d467:	inc    edi
  40d468:	ja     0x40d49c
  40d46a:	aas    
  40d46b:	xchg   esi,eax
  40d46c:	push   es
  40d46d:	les    ecx,FWORD PTR [edx]
  40d46f:	clc    
  40d470:	je     0x40d48d
  40d472:	jno    0x40d456
  40d474:	or     bh,BYTE PTR [ebx]
  40d476:	xchg   esp,eax
  40d477:	push   esi
  40d478:	push   ebp
  40d479:	jmp    0x40d489
  40d47b:	or     eax,0x74f8f69f
  40d480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d481:	mov    al,ds:0xad50244c
  40d486:	ja     0x40d4b5
  40d488:	adc    eax,0x1d2eb877
  40d48d:	daa    
  40d48e:	loope  0x40d4cb
  40d490:	cmp    eax,0x5044841a
  40d495:	ins    BYTE PTR es:[edi],dx
  40d496:	pop    es
  40d497:	mov    eax,0x293d83e0
  40d49c:	add    DWORD PTR [ecx+0x382c1066],esi
  40d4a2:	lea    ecx,[eax-0x14882ccb]
  40d4a8:	mov    ecx,0xb993eaa9
  40d4ad:	fist   WORD PTR [ecx-0x54]
  40d4b0:	mov    ah,0xc0
  40d4b2:	out    dx,al
  40d4b3:	jnp    0x40d51a
  40d4b5:	data16 jbe 0x40d459
  40d4b8:	and    esp,DWORD PTR ds:0xbe85d5ef
  40d4be:	push   edi
  40d4bf:	ins    BYTE PTR es:[edi],dx
  40d4c0:	jne    0x40d52c
  40d4c2:	stos   DWORD PTR es:[edi],eax
  40d4c3:	dec    esi
  40d4c4:	shr    cl,cl
  40d4c6:	mov    al,ds:0x4ed73d1
  40d4cb:	lahf   
  40d4cc:	cmp    DWORD PTR [ecx],eax
  40d4ce:	test   ch,al
  40d4d0:	sahf   
  40d4d1:	inc    ecx
  40d4d2:	cmp    al,0x82
  40d4d4:	das    
  40d4d5:	xchg   ecx,eax
  40d4d6:	iret   
  40d4d7:	fwait
  40d4d8:	shl    BYTE PTR [ebp+0x267e0070],1
  40d4de:	jmp    0x40d47b
  40d4e0:	or     al,0x47
  40d4e2:	fs sbb eax,0x19bfc712
  40d4e8:	retf   
  40d4e9:	inc    edx
  40d4ea:	out    0x4d,eax
  40d4ec:	ins    BYTE PTR es:[edi],dx
  40d4ed:	mov    esp,0x2e69ec47
  40d4f2:	mov    al,0x93
  40d4f4:	and    esi,DWORD PTR [edi-0x7]
  40d4f7:	xor    DWORD PTR [edx-0x2],esi
  40d4fa:	mov    WORD PTR [ecx],es
  40d4fc:	push   cs
  40d4fd:	cs add eax,0x9b83e1ab
  40d503:	sbb    eax,0x44f072d7
  40d508:	xor    DWORD PTR [esi],ecx
  40d50a:	lea    edi,ds:0xae8febd0
  40d510:	repnz sub edx,DWORD PTR [edx]
  40d513:	das    
  40d514:	addr16 nop
  40d516:	mov    ah,0xe3
  40d518:	mov    ah,0xcf
  40d51a:	sti    
  40d51b:	sub    al,0x16
  40d51d:	enter  0xd71a,0xe2
  40d521:	push   edx
  40d522:	mov    eax,0xc071dbf1
  40d527:	call   0x5b05:0x414ec0b7
  40d52e:	std    
  40d52f:	cdq    
  40d530:	(bad)  
  40d534:	jae    0x40d5aa
  40d536:	sbb    al,0x93
  40d538:	xchg   edx,eax
  40d539:	les    esp,FWORD PTR [esi]
  40d53b:	fsubr  DWORD PTR [ecx-0x71]
  40d53e:	and    bh,dh
  40d540:	xor    al,0xec
  40d542:	xor    eax,0x3ad25652
  40d547:	data16 int 0x38
  40d54a:	mov    ch,0x4b
  40d54c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d54d:	push   ebx
  40d54e:	cmc    
  40d54f:	mov    dh,bl
  40d551:	mov    al,cl
  40d553:	mov    ds:0xd039675e,eax
  40d558:	adc    DWORD PTR [eax+0x2a9996b4],ecx
  40d55e:	cli    
  40d55f:	xchg   ecx,eax
  40d560:	xor    cl,BYTE PTR [ebx+0x10223666]
  40d566:	ret    0x1341
  40d569:	pop    esi
  40d56a:	push   cs
  40d56b:	push   ds
  40d56c:	fstp   DWORD PTR [ecx-0x36]
  40d56f:	fwait
  40d570:	stc    
  40d571:	(bad)  
  40d572:	dec    ebx
  40d573:	fld    DWORD PTR [edx+0x72c45945]
  40d579:	cmp    ah,0x4f
  40d57c:	sbb    edi,DWORD PTR [edx-0x37]
  40d57f:	fs push eax
  40d581:	rcl    BYTE PTR [esi-0xe],1
  40d584:	dec    ebx
  40d585:	repz inc esp
  40d587:	clc    
  40d588:	fs cmp edx,ebp
  40d58b:	imul   ecx,DWORD PTR [ebx+0x7d2e066f],0x123404c1
  40d595:	mov    ?,WORD PTR [ebx]
  40d597:	dec    ebp
  40d598:	jmp    0xe95f10e
  40d59d:	jle    0x40d5e1
  40d59f:	lods   eax,DWORD PTR ds:[esi]
  40d5a0:	cld    
  40d5a1:	pop    esi
  40d5a2:	aas    
  40d5a3:	addr16 jmp 0x40d61b
  40d5a6:	outs   dx,BYTE PTR ds:[esi]
  40d5a7:	js     0x40d60f
  40d5a9:	les    ebx,FWORD PTR [ebp+0x7a001a6e]
  40d5af:	pop    ebx
  40d5b0:	xchg   ebx,eax
  40d5b1:	pop    ecx
  40d5b2:	push   0x3c891079
  40d5b7:	xchg   ecx,eax
  40d5b8:	fsub   st(6),st
  40d5ba:	pop    ecx
  40d5bb:	aaa    
  40d5bc:	test   DWORD PTR [esp+edi*1+0x138da76c],esp
  40d5c3:	cmp    ecx,esp
  40d5c5:	test   al,0xb0
  40d5c7:	mov    al,ds:0x1f76768
  40d5cc:	lea    ecx,[edi+0x1c648097]
  40d5d2:	and    DWORD PTR [edi-0x44ce77f5],esi
  40d5d8:	lods   al,BYTE PTR ds:[esi]
  40d5d9:	shl    DWORD PTR ds:0x837bb4f,1
  40d5df:	daa    
  40d5e0:	in     al,0xad
  40d5e2:	xor    eax,0x91725eda
  40d5e7:	pop    ds
  40d5e8:	cmp    edx,DWORD PTR [ebp+0x5e]
  40d5eb:	andnps xmm3,xmm2
  40d5ee:	adc    eax,0x78544f38
  40d5f3:	nop
  40d5f4:	inc    edx
  40d5f5:	adc    DWORD PTR [ecx],ebx
  40d5f7:	add    al,0x9c
  40d5f9:	add    edx,DWORD PTR [esi-0xb39f6c3]
  40d5ff:	sbb    ebp,esp
  40d601:	push   cs
  40d602:	aaa    
  40d603:	dec    edi
  40d604:	sub    eax,0xdfb9eb8e
  40d609:	call   0x7a2fce1e
  40d60e:	adc    cl,ch
  40d610:	(bad)  
  40d611:	clc    
  40d612:	pushf  
  40d613:	int    0x46
  40d615:	jae    0x40d639
  40d617:	and    eax,0x3eebc23c
  40d61c:	into   
  40d61d:	test   al,0x2c
  40d61f:	call   DWORD PTR [ebx-0x19]
  40d622:	sub    al,BYTE PTR [esi+ebp*2-0x12]
  40d626:	pop    ss
  40d627:	out    0x64,eax
  40d629:	xadd   DWORD PTR [ebp+0x63ba58db],esi
  40d630:	xchg   edi,eax
  40d631:	enter  0xba11,0x31
  40d635:	imul   eax,esp,0xe94f5bf1
  40d63b:	jecxz  0x40d63f
  40d63d:	push   edi
  40d63e:	xchg   ecx,eax
  40d63f:	mov    BYTE PTR ds:0x6dba1c0c,dh
  40d645:	adc    eax,0x61ef5fe3
  40d64a:	pusha  
  40d64b:	cwde   
  40d64c:	fs inc ebp
  40d64e:	popf   
  40d64f:	xor    DWORD PTR [edx-0x6ce10460],eax
  40d655:	jecxz  0x40d687
  40d657:	cwde   
  40d658:	into   
  40d659:	das    
  40d65a:	pop    ds
  40d65b:	jbe    0x40d6bb
  40d65d:	es es sbb esi,DWORD PTR ds:[esi-0x2a]
  40d663:	mov    eax,ds:0xb5d4e40d
  40d668:	std    
  40d669:	or     BYTE PTR [edi+0x29],cl
  40d66c:	xchg   ebx,eax
  40d66d:	xchg   BYTE PTR [esp+edi*8-0x3107a3ca],bl
  40d674:	(bad)  
  40d675:	fbstp  TBYTE PTR [ecx-0xe]
  40d678:	ins    BYTE PTR es:[edi],dx
  40d679:	jp     0x40d623
  40d67b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d67c:	aam    0x1c
  40d67e:	test   BYTE PTR [ecx+0x3aa348eb],bl
  40d684:	fdivr  QWORD PTR [eax-0x55]
  40d687:	dec    edx
  40d688:	mov    al,0x84
  40d68a:	dec    eax
  40d68b:	mov    cl,0x2f
  40d68d:	jmp    0x5ec7:0xc7ed537d
  40d694:	(bad)  [edi-0x5c]
  40d697:	scas   eax,DWORD PTR es:[edi]
  40d698:	repz sub edi,DWORD PTR [edx-0x594563af]
  40d69f:	pusha  
  40d6a0:	mov    BYTE PTR [ebx],dh
  40d6a2:	call   0x7ea0:0xf7928d7f
  40d6a9:	mov    ecx,0x47eaee0c
  40d6ae:	mov    ds:0xbc8c75af,eax
  40d6b3:	xor    BYTE PTR [ecx-0x80],dl
  40d6b6:	and    eax,0xd2b4dd25
  40d6bb:	or     DWORD PTR [edi-0x7b9d550e],ecx
  40d6c1:	popa   
  40d6c2:	outs   dx,DWORD PTR ds:[esi]
  40d6c3:	popf   
  40d6c4:	sbb    ah,BYTE PTR [edx]
  40d6c6:	mov    bh,0x71
  40d6c8:	mov    edi,0x750d476
  40d6cd:	scas   al,BYTE PTR es:[edi]
  40d6ce:	popf   
  40d6cf:	add    DWORD PTR [eax-0x319bd374],ecx
  40d6d5:	mov    DWORD PTR ds:0xce2c2704,esi
  40d6db:	add    ebx,eax
  40d6dd:	sbb    edx,esp
  40d6df:	out    dx,al
  40d6e0:	sti    
  40d6e1:	sbb    BYTE PTR [ebp+0x23],0xbf
  40d6e5:	pop    ebp
  40d6e6:	adc    DWORD PTR [ecx+0x74287e58],ecx
  40d6ec:	or     BYTE PTR [ebx-0x4a],0xf0
  40d6f0:	xchg   esi,eax
  40d6f1:	xchg   ebp,eax
  40d6f2:	pop    ss
  40d6f3:	fcomp  QWORD PTR [ebx]
  40d6f5:	pop    ds
  40d6f6:	dec    DWORD PTR [ecx+0x246f2d67]
  40d6fc:	xor    eax,0x3a141b2c
  40d701:	lea    ebx,[ebx]
  40d703:	adc    BYTE PTR [ecx+ebp*8+0x2742ec56],bl
  40d70a:	je     0x40d73b
  40d70c:	ror    DWORD PTR ds:0xd0cd077f,1
  40d712:	mov    eax,DWORD PTR [ebx+0xa89e600]
  40d718:	test   BYTE PTR [esi-0x73],0x44
  40d71c:	add    al,0x7d
  40d71e:	inc    esp
  40d71f:	xor    BYTE PTR [esi+0x40],ah
  40d722:	cmp    DWORD PTR [edi],0xffffffcb
  40d725:	and    eax,0xdeb553f9
  40d72a:	cwde   
  40d72b:	fidiv  WORD PTR [edi-0x7bbcea47]
  40d731:	ficom  DWORD PTR [edx-0x5627b229]
  40d737:	out    dx,eax
  40d738:	imul   edi,DWORD PTR [ebx+edi*2],0xd5834a8c
  40d73f:	mov    DWORD PTR [edx+ecx*8],edx
  40d742:	xchg   BYTE PTR [ecx-0x1c],bh
  40d745:	push   0xffffff82
  40d747:	sub    DWORD PTR [edi+esi*2+0x1d],0x5f2c95c0
  40d74f:	je     0x40d711
  40d751:	jns    0x40d7c4
  40d753:	retf   0x254a
  40d756:	or     eax,0x4cccbe98
  40d75b:	(bad)  
  40d75c:	cmp    DWORD PTR [ebx-0x6cd81edd],ebp
  40d762:	(bad)
  40d767:	cmp    edi,ecx
  40d769:	sub    eax,0xb1047ab9
  40d76e:	dec    edi
  40d76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d770:	mov    bh,0x83
  40d772:	xchg   esp,eax
  40d773:	inc    esp
  40d774:	hlt    
  40d775:	push   cs
  40d776:	enter  0x7ab9,0x28
  40d77a:	arpl   WORD PTR [ecx-0x1a4ce23d],di
  40d780:	in     al,0xb6
  40d782:	pop    ds
  40d783:	xor    ch,BYTE PTR [edi+0x467bb5df]
  40d789:	adc    edx,DWORD PTR [edx+0x5c]
  40d78c:	add    eax,0x4b20abf9
  40d791:	gs (bad) 
  40d794:	lock adc BYTE PTR [ebx-0x17],al
  40d798:	and    al,0xd6
  40d79a:	fs inc ebp
  40d79c:	in     al,dx
  40d79d:	add    eax,0xc6da3b59
  40d7a2:	jmp    0xb626:0x99288a82
  40d7a9:	mov    dl,0x96
  40d7ab:	scas   al,BYTE PTR es:[edi]
  40d7ac:	cmp    cl,BYTE PTR [ecx]
  40d7ae:	add    BYTE PTR [ebp+eiz*2-0x21],dl
  40d7b2:	jmp    0x40d7d3
  40d7b4:	rol    dl,1
  40d7b6:	add    al,BYTE PTR [edi-0x54]
  40d7b9:	mov    edi,0xd0100c4d
  40d7be:	jecxz  0x40d81f
  40d7c0:	aaa    
  40d7c1:	sub    ch,BYTE PTR [edx+0x25]
  40d7c4:	sbb    edi,DWORD PTR [esi+0x132ab29f]
  40d7ca:	and    dl,BYTE PTR [ebp+eiz*4+0x40230a60]
  40d7d1:	adc    ecx,DWORD PTR [eax+0x5ed880c2]
  40d7d7:	and    cl,ch
  40d7d9:	aas    
  40d7da:	jmp    0x40d7ef
  40d7dc:	sub    ch,BYTE PTR [esi+0x7570f0]
  40d7e2:	adc    BYTE PTR [esi+ebp*1-0x3d17c030],ch
  40d7e9:	int    0x53
  40d7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ec:	dec    esi
  40d7ed:	pop    edi
  40d7ee:	push   edi
  40d7ef:	adc    dh,BYTE PTR [edx+0x1c]
  40d7f2:	xor    al,0x93
  40d7f4:	lahf   
  40d7f5:	jmp    DWORD PTR [edi]
  40d7f7:	mov    fs,WORD PTR [ecx+0x2d52dce5]
  40d7fd:	(bad)  
  40d7fe:	xchg   ebx,ebx
  40d800:	cmp    al,0xfd
  40d802:	pop    edx
  40d803:	jge    0x40d7da
  40d805:	bound  ebp,QWORD PTR [ecx]
  40d807:	lods   eax,DWORD PTR ds:[esi]
  40d808:	rcl    DWORD PTR [ebp+0x39],cl
  40d80b:	in     al,0x6e
  40d80d:	loop   0x40d874
  40d80f:	out    dx,al
  40d810:	daa    
  40d811:	sub    bl,BYTE PTR [esi-0x4e828592]
  40d817:	xchg   esp,eax
  40d818:	das    
  40d819:	paddusw mm2,QWORD PTR [ebp-0x1408aed8]
  40d820:	push   cs
  40d821:	js     0x40d7a8
  40d823:	jae    0x40d7db
  40d825:	imul   esp,DWORD PTR [ebp+ebx*1-0x64],0xf91a8e9f
  40d82d:	dec    esi
  40d82e:	sbb    DWORD PTR [edi+0x6abe588b],ecx
  40d834:	enter  0xcdf6,0xca
  40d838:	pop    edx
  40d839:	and    BYTE PTR [eax-0x7c1b5a2b],ah
  40d83f:	mov    edx,0x204dd330
  40d844:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40d846:	sbb    DWORD PTR [edx+0x52],0x32
  40d84a:	jae    0x40d80b
  40d84c:	sbb    al,0x31
  40d84e:	fs clc 
  40d850:	das    
  40d851:	scas   eax,DWORD PTR es:[edi]
  40d852:	push   ss
  40d853:	outs   dx,BYTE PTR ds:[esi]
  40d854:	pop    ebx
  40d855:	xchg   ebp,eax
  40d856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d857:	mov    dl,0x69
  40d859:	sub    BYTE PTR [ebx+0x63],dl
  40d85c:	jo     0x40d845
  40d85e:	xchg   ebx,eax
  40d85f:	ss cld 
  40d861:	rcl    BYTE PTR [eax-0x79],0x5d
  40d865:	inc    edx
  40d866:	mov    WORD PTR [ecx-0x27],?
  40d869:	(bad)  
  40d86a:	dec    eax
  40d86b:	or     ebp,DWORD PTR [edx]
  40d86d:	push   es
  40d86e:	pop    esi
  40d86f:	xchg   BYTE PTR [eax],al
  40d871:	and    bh,dl
  40d873:	repz out 0x97,al
  40d876:	fidivr DWORD PTR [ecx+0x75]
  40d879:	add    al,0xd5
  40d87b:	sub    BYTE PTR ds:0xfe866970,bl
  40d881:	mov    ebx,0x3d526559
  40d886:	mov    esi,0x5dbc357b
  40d88b:	ss pop ecx
  40d88d:	fistp  DWORD PTR [ebx]
  40d88f:	in     al,0x5b
  40d891:	mov    al,0x4b
  40d893:	shl    bl,cl
  40d895:	push   0xdfca24fb
  40d89a:	pop    ecx
  40d89b:	call   0xa9b1:0x846868c
  40d8a2:	inc    eax
  40d8a3:	inc    esp
  40d8a4:	icebp  
  40d8a5:	repnz pushf 
  40d8a7:	adc    al,0x5a
  40d8a9:	jmp    0x19a:0xdd1b0bad
  40d8b0:	ja     0x40d8d7
  40d8b2:	add    eax,0xfa3a236
  40d8b7:	xchg   DWORD PTR [edi-0x3dbe64ca],edx
  40d8bd:	int3   
  40d8be:	and    al,0x5f
  40d8c0:	xor    al,ch
  40d8c2:	cli    
  40d8c3:	retf   0x7e37
  40d8c6:	imul   esp,DWORD PTR [ecx-0xd],0xffffffb4
  40d8ca:	dec    edx
  40d8cb:	adc    eax,0x136576e
  40d8d0:	sahf   
  40d8d1:	jo     0x40d8d2
  40d8d3:	ret    0xda3f
  40d8d6:	pop    es
  40d8d7:	rcr    al,1
  40d8d9:	in     al,dx
  40d8da:	ja     0x40d946
  40d8dc:	sub    dh,BYTE PTR [ebx+0x14c16203]
  40d8e2:	stos   DWORD PTR es:[edi],eax
  40d8e3:	mov    cl,0x80
  40d8e5:	sub    al,BYTE PTR [esi-0x43bca7a8]
  40d8eb:	les    esi,FWORD PTR [esi]
  40d8ed:	shl    BYTE PTR [ecx-0x72ca7769],0x15
  40d8f4:	pushf  
  40d8f5:	fidiv  WORD PTR [ecx+0x47ce538e]
  40d8fb:	stc    
  40d8fc:	jg     0x40d944
  40d8fe:	in     al,0xf6
  40d900:	stos   BYTE PTR es:[edi],al
  40d901:	imul   edx,DWORD PTR [esp+eax*1],0x50b23992
  40d908:	out    dx,al
  40d909:	pusha  
  40d90a:	mov    DWORD PTR [edx],esp
  40d90c:	and    al,0xaa
  40d90e:	addr16 ret 
  40d910:	lahf   
  40d911:	jmp    0x40d8f6
  40d913:	and    dl,ch
  40d915:	fistp  QWORD PTR [eax+0xe]
  40d918:	or     BYTE PTR [ebx-0x64047d07],dh
  40d91e:	rcl    BYTE PTR [edi+0x3243344b],cl
  40d924:	cdq    
  40d925:	mov    ah,0xbe
  40d927:	xchg   ebp,eax
  40d928:	mov    esp,0x49a6492f
  40d92d:	jnp    0x40d9ab
  40d92f:	lods   al,BYTE PTR ds:[esi]
  40d930:	ins    DWORD PTR es:[edi],dx
  40d931:	pop    DWORD PTR [ecx-0xed43d1]
  40d937:	(bad)  [eax+0x39e4eeb3]
  40d93d:	fs pop ss
  40d93f:	adc    esp,DWORD PTR [eax+0x713d0872]
  40d945:	inc    BYTE PTR [eax-0x239c61cb]
  40d94b:	xchg   ebx,eax
  40d94c:	addr16 repz (bad) 
  40d94f:	xchg   ebp,eax
  40d950:	cmp    BYTE PTR ds:0xa15ce863,0x59
  40d957:	sub    DWORD PTR [ebx-0xf],0x44ad1551
  40d95e:	add    esi,esp
  40d960:	and    eax,0x4e0adb5d
  40d965:	mov    ah,0x45
  40d967:	enter  0x2cab,0x5a
  40d96b:	test   BYTE PTR [eax+0x7dab54cc],0x43
  40d972:	or     eax,DWORD PTR [ebx+edi*1]
  40d975:	(bad)  
  40d976:	repz icebp 
  40d978:	mov    ds:0x4d6b91f,al
  40d97d:	push   0x8595a5d6
  40d982:	jg     0x40d97f
  40d984:	inc    edi
  40d985:	push   ebx
  40d986:	jns    0x40d98e
  40d988:	and    DWORD PTR [edx+0x29],ebp
  40d98b:	cli    
  40d98c:	jnp    0x40d98a
  40d98e:	jmp    0x40d9e6
  40d990:	mov    cl,0xbf
  40d992:	les    ebx,FWORD PTR [ecx]
  40d994:	sahf   
  40d995:	in     eax,0xf5
  40d997:	add    al,0x7f
  40d999:	jne    0x40d97d
  40d99b:	hlt    
  40d99c:	neg    DWORD PTR [ebx]
  40d99e:	sar    DWORD PTR [ecx-0x43],cl
  40d9a1:	jnp    0x40d977
  40d9a3:	push   esi
  40d9a4:	jecxz  0x40d9c5
  40d9a6:	pop    ebx
  40d9a7:	mov    bl,0x70
  40d9a9:	fimul  WORD PTR [ecx-0x30]
  40d9ac:	icebp  
  40d9ad:	jne    0x40d976
  40d9af:	xor    al,0x1
  40d9b1:	out    dx,eax
  40d9b2:	mov    ds:0xd44c2d25,al
  40d9b7:	addr16 (bad) 
  40d9b9:	cmp    eax,0x50acf0ce
  40d9be:	lds    ecx,FWORD PTR [esi]
  40d9c0:	cmp    eax,0xe4ed9c30
  40d9c5:	sbb    ebx,esi
  40d9c7:	dec    edx
  40d9c8:	mov    ecx,DWORD PTR [ebx+0x25d2e0d8]
  40d9ce:	dec    esp
  40d9cf:	aaa    
  40d9d0:	cmp    DWORD PTR [edx],0xffffffd4
  40d9d3:	and    edi,ebp
  40d9d5:	lea    ebx,[edi]
  40d9d7:	sar    BYTE PTR es:[esi-0x7216808a],cl
  40d9de:	mov    bh,0x89
  40d9e0:	mov    ds:0x941bb82,al
  40d9e5:	pop    edx
  40d9e6:	jg     0x40d9bb
  40d9e8:	mov    al,0xde
  40d9ea:	xchg   edi,esp
  40d9ec:	outs   dx,BYTE PTR ds:[esi]
  40d9ed:	xchg   esp,eax
  40d9ee:	dec    ebp
  40d9ef:	xchg   ebx,eax
  40d9f0:	sti    
  40d9f1:	or     BYTE PTR [esp+eax*4-0x61],0xef
  40d9f6:	lods   eax,DWORD PTR ds:[esi]
  40d9f7:	outs   dx,BYTE PTR ds:[esi]
  40d9f8:	sar    DWORD PTR [ecx+0x45],1
  40d9fb:	pop    ecx
  40d9fc:	les    ebx,FWORD PTR [ebx]
  40d9fe:	push   ds
  40d9ff:	xor    esi,esi
  40da01:	mov    BYTE PTR [ebp-0x40],dl
  40da04:	lods   eax,DWORD PTR ds:[esi]
  40da05:	fcmovne st,st(7)
  40da07:	mov    eax,ds:0xf025bacb
  40da0c:	stos   BYTE PTR es:[edi],al
  40da0d:	fidiv  DWORD PTR [ecx]
  40da0f:	lds    esp,FWORD PTR [ebp-0x7e]
  40da12:	dec    edi
  40da13:	and    esp,DWORD PTR [eax-0x3450fa83]
  40da19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da1a:	push   edi
  40da1b:	mov    eax,0x6270806f
  40da20:	mov    WORD PTR [edx+0xf],fs
  40da23:	inc    edx
  40da24:	cs dec esp
  40da26:	mov    edi,0x45c39a7
  40da2b:	cmp    BYTE PTR [eax+edx*1],0x72
  40da2f:	ja     0x40da40
  40da31:	mov    ah,0x13
  40da33:	xor    al,0xbe
  40da35:	cmp    edi,DWORD PTR [esi+0x76]
  40da38:	les    cx,DWORD PTR [eax-0x15]
  40da3c:	and    bl,BYTE PTR [edx]
  40da3e:	outs   dx,BYTE PTR ds:[esi]
  40da3f:	pop    es
  40da40:	push   ebp
  40da41:	inc    esp
  40da42:	popa   
  40da43:	dec    eax
  40da44:	jge    0x40d9fc
  40da46:	add    al,0xd2
  40da48:	push   ebp
  40da49:	enter  0x16e9,0x23
  40da4d:	push   esp
  40da4e:	fst    DWORD PTR [esi+ebp*2+0x5]
  40da52:	je     0x40da63
  40da54:	lock push edi
  40da56:	xchg   BYTE PTR [ecx+edx*8],ch
  40da59:	jne    0x40da8c
  40da5b:	xor    eax,0x68daa29a
  40da60:	xor    al,0x48
  40da62:	cmp    al,0x31
  40da64:	mov    dl,0x7b
  40da66:	adc    al,0xe
  40da68:	fisubr WORD PTR [eax+0x311858ae]
  40da6e:	mov    al,ds:0xedbba8e5
  40da73:	push   0xc85b033f
  40da78:	imul   ebx,DWORD PTR [ecx-0x79f12f71],0x1517643a
  40da82:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40da84:	and    eax,0x44376b9e
  40da89:	ins    BYTE PTR es:[edi],dx
  40da8a:	inc    ebp
  40da8b:	sub    edi,DWORD PTR [esp+edi*4+0xc7e5e28]
  40da92:	cmp    BYTE PTR [esi-0x1e90cfa6],bh
  40da98:	mov    gs,WORD PTR cs:[eax+0x3c044e81]
  40da9f:	sub    ecx,DWORD PTR [ecx+0x4e4c79e3]
  40daa5:	jno    0x40dab0
  40daa7:	(bad)  
  40daa8:	(bad)  [edi]
  40daaa:	mov    bl,0x3d
  40daac:	mov    al,0xbd
  40daae:	xchg   ebx,eax
  40daaf:	add    eax,DWORD PTR [esp+ecx*4+0x4012a7a3]
  40dab6:	push   0x63a403fb
  40dabb:	push   ds
  40dabc:	xchg   esp,eax
  40dabd:	xchg   edx,eax
  40dabe:	jne    0x40db0f
  40dac0:	mov    eax,ds:0x2185a488
  40dac5:	xor    al,0x25
  40dac7:	loop   0x40da99
  40dac9:	fwait
  40daca:	pop    ss
  40dacb:	adc    DWORD PTR [edi+ebx*8],ecx
  40dace:	fs cs fwait
  40dad1:	and    esp,DWORD PTR [esi+0x25]
  40dad4:	mov    fs,WORD PTR [ebx-0x7bbe2f5f]
  40dada:	or     al,BYTE PTR [eax]
  40dadc:	loopne 0x40da63
  40dade:	mov    eax,ds:0x52aabb17
  40dae3:	adc    BYTE PTR [edx+0x3b],cl
  40dae6:	ret    
  40dae7:	jbe    0x40dacb
  40dae9:	jg     0x40da78
  40daeb:	(bad)  
  40daed:	icebp  
  40daee:	pusha  
  40daef:	lahf   
  40daf0:	xlat   BYTE PTR ds:[ebx]
  40daf1:	push   ecx
  40daf2:	les    edx,FWORD PTR [edx+edx*2]
  40daf5:	repz adc al,BYTE PTR [edi-0x32b9fdcc]
  40dafc:	add    BYTE PTR ds:[edi+0x70],bl
  40db00:	and    BYTE PTR [ebx+0x40],ch
  40db03:	and    eax,0x2558af29
  40db08:	ja     0x40db85
  40db0a:	sbb    DWORD PTR [ebp+0x1262664c],esi
  40db10:	pop    edx
  40db11:	jnp    0x40db03
  40db13:	retf   
  40db14:	mov    ch,ah
  40db16:	into   
  40db17:	push   ebp
  40db18:	xchg   BYTE PTR [esi+0x51],ah
  40db1b:	fisubr WORD PTR [edi-0x75]
  40db1e:	shr    BYTE PTR [edi-0x529b325f],cl
  40db24:	retf   0xbed7
  40db27:	mov    bh,0xb
  40db29:	or     DWORD PTR [ebx-0x3],ebp
  40db2c:	xchg   DWORD PTR [edi],esi
  40db2e:	xchg   ebp,eax
  40db2f:	pop    ebp
  40db30:	sub    ch,BYTE PTR ds:0x19fa45e7
  40db36:	pop    edi
  40db37:	inc    ecx
  40db38:	adc    eax,0x5431ac37
  40db3d:	xchg   DWORD PTR [edx+0x3b],edi
  40db40:	enter  0x658d,0x6b
  40db44:	das    
  40db45:	sub    BYTE PTR [ecx+0x9],0xa9
  40db49:	xor    al,0x4f
  40db4b:	add    al,0xca
  40db4d:	aas    
  40db4e:	xchg   esi,eax
  40db4f:	pop    ss
  40db50:	add    BYTE PTR [ebx-0x74ec74d0],0x5a
  40db57:	push   esi
  40db58:	retf   0x57b2
  40db5b:	dec    edi
  40db5c:	add    DWORD PTR [ebx+eiz*8-0xa],esp
  40db60:	or     eax,ecx
  40db62:	arpl   dx,bp
  40db64:	mov    dl,0x64
  40db66:	push   edx
  40db67:	jg     0x40db1c
  40db69:	hlt    
  40db6a:	dec    edx
  40db6b:	pop    ebp
  40db6c:	mov    esi,0x5807239
  40db71:	xor    al,0xcc
  40db73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db74:	in     al,dx
  40db75:	dec    esi
  40db76:	xor    eax,0x61405f67
  40db7b:	adc    dl,dh
  40db7d:	mov    dl,0x6d
  40db7f:	mov    esp,0xf5d2f59a
  40db84:	shr    BYTE PTR gs:[edx+ebx*2-0x3a],cl
  40db89:	pop    edx
  40db8a:	dec    ebx
  40db8b:	inc    ebp
  40db8c:	pusha  
  40db8d:	and    BYTE PTR [edi],al
  40db8f:	test   al,0x50
  40db91:	mov    dl,0x51
  40db93:	mov    WORD PTR [ebp+0x55],ss
  40db96:	cmp    DWORD PTR [edx+0x6c9ce218],edi
  40db9c:	mov    esp,0xf0efbff5
  40dba1:	sub    BYTE PTR [ebp-0x4e53f0bd],bh
  40dba7:	jle    0x40dbad
  40dba9:	jge    0x40db8a
  40dbab:	sbb    eax,0x8ef9e4c8
  40dbb0:	xchg   edx,eax
  40dbb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbb2:	or     BYTE PTR [ebp+0x75],0x43
  40dbb6:	shl    DWORD PTR [esi+edi*2+0x3a],cl
  40dbba:	aaa    
  40dbbb:	jns    0x40db4d
  40dbbd:	pop    ebp
  40dbbe:	cmp    al,0xaa
  40dbc0:	inc    ebx
  40dbc1:	das    
  40dbc2:	scas   al,BYTE PTR es:[edi]
  40dbc3:	mov    bh,bl
  40dbc5:	mov    BYTE PTR [edx+edx*1],cl
  40dbc8:	int    0x60
  40dbca:	mov    DWORD PTR ds:0xf638dc50,edx
  40dbd0:	nop
  40dbd1:	jmp    0xcc3a6414
  40dbd6:	mov    dh,0xcd
  40dbd8:	sahf   
  40dbd9:	mov    al,ds:0x6bcd7e01
  40dbde:	or     eax,0xf0993332
  40dbe3:	mov    ebx,0xf34350f5
  40dbe8:	fstp   QWORD PTR [ecx+0x5f]
  40dbeb:	test   al,0xf3
  40dbed:	or     DWORD PTR [eax+0x9],esp
  40dbf0:	pop    ebx
  40dbf1:	xchg   ebp,eax
  40dbf2:	(bad)  [eax-0x52]
  40dbf5:	leave  
  40dbf6:	daa    
  40dbf7:	mov    edx,0x7e5cda4
  40dbfc:	xchg   DWORD PTR [edi+0x3e],edi
  40dbff:	stc    
  40dc00:	rcl    BYTE PTR [ebp+0x33b70a2f],0x7b
  40dc07:	mov    ch,0x38
  40dc09:	lods   eax,DWORD PTR ds:[esi]
  40dc0a:	mov    ebp,0x98045e60
  40dc0f:	mov    WORD PTR [ebx],fs
  40dc11:	mov    edi,esp
  40dc13:	cmp    esi,ebp
  40dc15:	xor    eax,0x5687c3b0
  40dc1a:	add    edx,DWORD PTR [ebp+0x7]
  40dc1d:	mov    eax,DWORD PTR [edi-0x15dcb98a]
  40dc23:	mov    eax,ds:0xf4d965e8
  40dc28:	iret   
  40dc29:	scas   al,BYTE PTR es:[edi]
  40dc2a:	fidivr WORD PTR [eax+0x72]
  40dc2d:	or     eax,0x713829df
  40dc32:	repnz push eax
  40dc34:	inc    ebx
  40dc35:	push   edi
  40dc36:	mov    bh,0xf9
  40dc38:	in     eax,0x7d
  40dc3a:	inc    edx
  40dc3b:	mov    DWORD PTR [edx],esi
  40dc3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc3e:	jae    0x40dc7d
  40dc40:	sbb    eax,0x48ba4934
  40dc45:	icebp  
  40dc46:	icebp  
  40dc47:	adc    eax,0xd7c09df1
  40dc4c:	sub    bh,BYTE PTR cs:[eax-0x3b8c989e]
  40dc53:	adc    bh,ah
  40dc55:	clc    
  40dc56:	push   ebp
  40dc57:	pop    esi
  40dc58:	xor    bh,ch
  40dc5a:	add    DWORD PTR [ebx+0xeaed960],ebx
  40dc60:	mov    esp,0xb63bcc8f
  40dc65:	adc    esp,DWORD PTR [ebx-0x9ca8781]
  40dc6b:	sbb    al,0x41
  40dc6d:	jl     0x40dbff
  40dc6f:	int    0xf0
  40dc71:	std    
  40dc72:	push   edi
  40dc73:	or     al,0x31
  40dc75:	jne    0xc1e8d357
  40dc7b:	xchg   edx,eax
  40dc7c:	dec    ebp
  40dc7d:	xor    BYTE PTR [ecx+0x6ba444b1],ch
  40dc83:	xor    al,0x1e
  40dc85:	outs   dx,BYTE PTR ds:[esi]
  40dc86:	dec    esi
  40dc87:	jg     0x40dcc2
  40dc89:	cmp    DWORD PTR [ecx+ebp*1+0x58d973a9],eax
  40dc90:	ret    
  40dc91:	cmp    eax,0x7c77d83
  40dc97:	sahf   
  40dc98:	and    BYTE PTR [eax+0x2ff886f5],dh
  40dc9e:	xchg   ecx,eax
  40dc9f:	das    
  40dca0:	(bad)  
  40dca1:	loop   0x40dcdb
  40dca3:	mov    eax,0xac4b4646
  40dca9:	fst    DWORD PTR [edi-0x3d]
  40dcac:	dec    ebp
  40dcad:	mov    eax,ds:0x5d54a48c
  40dcb2:	mov    al,0xf8
  40dcb4:	loop   0x40dca0
  40dcb6:	fwait
  40dcb7:	adc    esi,DWORD PTR [ecx-0xc]
  40dcba:	cmp    BYTE PTR [ebx-0x2e],ah
  40dcbd:	cmp    esp,DWORD PTR [ebp-0x7c9fcab7]
  40dcc3:	mov    al,ds:0xf48f56c1
  40dcc8:	jge    0x40dcfc
  40dcca:	push   edx
  40dccb:	arpl   WORD PTR [eax+0x73],sp
  40dcce:	pop    ebp
  40dccf:	stos   DWORD PTR es:[edi],eax
  40dcd0:	and    al,0x99
  40dcd2:	inc    eax
  40dcd3:	cwde   
  40dcd4:	push   cs
  40dcd5:	mov    BYTE PTR ss:[ebx-0x34961ffd],bh
  40dcdc:	and    DWORD PTR [esi+0xaad90c4],0x3
  40dce3:	mov    DWORD PTR [ebx+0x49],esp
  40dce6:	mov    ebp,0xdaf56ec7
  40dceb:	imul   esp,DWORD PTR [esi+ebp*2-0x66],0xffffffe0
  40dcf0:	cmp    BYTE PTR [ebp+0x5b],ch
  40dcf3:	pushf  
  40dcf4:	lds    esi,FWORD PTR [ecx]
  40dcf6:	sbb    DWORD PTR [edi],edi
  40dcf8:	or     al,0x88
  40dcfa:	mov    cl,0x8
  40dcfc:	sbb    eax,0xf5ae6e43
  40dd01:	mov    ch,bh
  40dd03:	or     DWORD PTR [esi+eax*1+0x4b],ebp
  40dd07:	xor    ebp,DWORD PTR [eax+0x1404ddb8]
  40dd0d:	dec    esi
  40dd0e:	rcl    DWORD PTR [ebp-0x80fe90],cl
  40dd14:	stos   BYTE PTR es:[edi],al
  40dd15:	dec    ebx
  40dd16:	popf   
  40dd17:	jp     0x40dd11
  40dd19:	mov    dh,BYTE PTR [esi-0x3d6f62a6]
  40dd1f:	leave  
  40dd20:	cs jmp 0x84e29cdd
  40dd26:	push   ecx
  40dd27:	and    eax,0x2bc77919
  40dd2c:	mov    ch,0xdd
  40dd2e:	add    BYTE PTR [ebp-0x13a3397e],dh
  40dd34:	mov    bl,0xe0
  40dd36:	addr16 push ebp
  40dd38:	dec    ecx
  40dd39:	push   eax
  40dd3a:	in     al,0xe5
  40dd3c:	inc    esp
  40dd3d:	or     DWORD PTR ds:0x1c8ff551,edi
  40dd43:	inc    edx
  40dd44:	mov    eax,ds:0x6395c6bb
  40dd49:	out    dx,eax
  40dd4a:	mov    edx,0x43217f3b
  40dd4f:	jne    0x40dcf8
  40dd51:	cwde   
  40dd52:	push   ecx
  40dd53:	jbe    0x40dd5a
  40dd55:	jbe    0x40dce8
  40dd57:	shr    DWORD PTR [edi+0x3f352bd2],0x3b
  40dd5e:	loope  0x40dd52
  40dd60:	xor    eax,0xc253fd59
  40dd65:	into   
  40dd66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd67:	out    0xcf,al
  40dd69:	mov    BYTE PTR [ecx-0x64],al
  40dd6c:	je     0x40dd7f
  40dd6e:	sub    al,0x9b
  40dd70:	dec    ecx
  40dd71:	pop    ebx
  40dd72:	fnstenv [eax-0x56]
  40dd75:	inc    ebx
  40dd76:	adc    dh,al
  40dd78:	cmp    al,0xb2
  40dd7a:	test   BYTE PTR ds:0x4be29eca,bh
  40dd80:	push   ds
  40dd81:	mov    ds:0x5338d626,al
  40dd86:	push   es
  40dd87:	fcom   st(4)
  40dd89:	adc    esi,DWORD PTR [ecx+0x537011ad]
  40dd8f:	scas   al,BYTE PTR es:[edi]
  40dd90:	xor    bh,BYTE PTR ds:0x8bfeaf90
  40dd96:	mov    dl,0xf2
  40dd98:	adc    bl,0x77
  40dd9b:	jb     0x40ddf6
  40dd9d:	cmove  ebx,DWORD PTR [esi+0x75]
  40dda1:	xor    bh,dl
  40dda3:	xchg   ebp,eax
  40dda4:	xor    ecx,0xa5e2e77b
  40ddaa:	fisttp QWORD PTR [edi]
  40ddac:	in     al,dx
  40ddad:	(bad)  
  40ddae:	ins    DWORD PTR es:[edi],dx
  40ddaf:	pusha  
  40ddb0:	jge    0x40ddcb
  40ddb2:	aaa    
  40ddb3:	xchg   ebx,eax
  40ddb4:	push   edi
  40ddb5:	cmp    eax,esp
  40ddb7:	cmp    edi,DWORD PTR [ecx+0x51ddbb18]
  40ddbd:	lea    esp,[eax]
  40ddbf:	xor    DWORD PTR [ebp+0x185436a3],esp
  40ddc5:	sahf   
  40ddc6:	push   eax
  40ddc7:	push   es
  40ddc8:	repnz push ebp
  40ddca:	es (bad) 
  40ddcc:	xlat   BYTE PTR ds:[ebx]
  40ddcd:	test   BYTE PTR [eax+eiz*1+0x75],cl
  40ddd1:	inc    edx
  40ddd2:	cli    
  40ddd3:	and    DWORD PTR [esi-0xc],edi
  40ddd6:	xor    al,dl
  40ddd8:	fdiv   QWORD PTR [esi-0x350e7b82]
  40ddde:	sti    
  40dddf:	std    
  40dde0:	xor    dh,BYTE PTR [edx]
  40dde2:	outs   dx,BYTE PTR ds:[si]
  40dde4:	mov    BYTE PTR [esi+0x3fd31cea],ch
  40ddea:	add    bl,0x1f
  40dded:	pop    edi
  40ddee:	cwde   
  40ddef:	fdiv   st(2),st
  40ddf1:	push   cs
  40ddf2:	and    eax,0x9a7f3bef
  40ddf7:	xchg   ebp,eax
  40ddf8:	test   eax,0x45d43b58
  40ddfd:	stos   DWORD PTR es:[edi],eax
  40ddfe:	retf   0xf588
  40de01:	(bad)  
  40de02:	mov    ecx,DWORD PTR ds:0xb2e67a05
  40de08:	mov    ebx,0x3a526991
  40de0d:	int    0x81
  40de0f:	loop   0x40ddb6
  40de11:	jno    0x40de6f
  40de13:	data16 adc BYTE PTR ds:[eax+0x5a],0x92
  40de19:	dec    esi
  40de1a:	push   ecx
  40de1b:	jae    0x40ddc3
  40de1d:	retf   0x8033
  40de20:	loop   0x40de19
  40de22:	or     cl,BYTE PTR [edx+edi*1]
  40de25:	fimul  DWORD PTR [edi]
  40de27:	lods   eax,DWORD PTR ds:[esi]
  40de28:	rcl    DWORD PTR [edx-0xd],cl
  40de2b:	rcl    BYTE PTR [ecx],cl
  40de2d:	in     eax,dx
  40de2e:	pusha  
  40de2f:	sub    al,0xf1
  40de31:	jmp    0x48564d43
  40de36:	cmc    
  40de37:	push   ss
  40de38:	rcr    DWORD PTR [esi+eiz*8+0x2c],1
  40de3c:	ror    esp,0x84
  40de3f:	test   BYTE PTR [edx-0x41753bd3],cl
  40de45:	js     0x40de75
  40de47:	sub    al,0xcc
  40de49:	xor    dl,BYTE PTR [ebp+0xaa22874]
  40de4f:	mov    edx,0xea9c1354
  40de54:	int    0xa0
  40de56:	ja     0x40ddeb
  40de58:	dec    eax
  40de59:	in     al,0x34
  40de5b:	lock (bad) 
  40de5d:	or     bh,BYTE PTR [ecx]
  40de5f:	out    dx,eax
  40de60:	push   ss
  40de61:	test   BYTE PTR [eax],ah
  40de63:	jl     0x40deaa
  40de65:	push   edx
  40de66:	(bad)  
  40de67:	jg     0x40de5d
  40de69:	inc    esp
  40de6a:	dec    esp
  40de6b:	stos   BYTE PTR es:[edi],al
  40de6c:	aam    0x66
  40de6e:	fadd   DWORD PTR [eax+0x4e]
  40de71:	shl    BYTE PTR [esi+0x57],1
  40de74:	pop    edx
  40de75:	jge    0x40de31
  40de77:	(bad)  
  40de79:	add    BYTE PTR [edx+0x6873d112],bl
  40de7f:	cmc    
  40de80:	or     cl,BYTE PTR ds:0x197cadf6
  40de86:	out    0xc1,al
  40de88:	xchg   DWORD PTR [esi],eax
  40de8a:	imul   esp,DWORD PTR [esi],0xffffffa9
  40de8d:	xor    dl,BYTE PTR [edx-0x48]
  40de90:	stos   BYTE PTR es:[edi],al
  40de91:	cld    
  40de92:	enter  0x6a5c,0x5f
  40de96:	adc    al,0xa5
  40de98:	(bad)  
  40de9a:	jge    0x40de4f
  40de9c:	imul   esi,DWORD PTR [eax+0x23],0x2c8044cd
  40dea3:	sbb    ebp,edi
  40dea5:	in     eax,dx
  40dea6:	daa    
  40dea7:	sbb    cl,dl
  40dea9:	arpl   WORD PTR [esp+esi*8],di
  40deac:	mov    bh,0x6b
  40deae:	adc    ecx,DWORD PTR [eax]
  40deb0:	in     eax,dx
  40deb1:	jo     0x40de41
  40deb3:	lods   al,BYTE PTR ds:[esi]
  40deb4:	push   eax
  40deb5:	xor    bh,BYTE PTR [eax]
  40deb7:	sub    eax,0x4a33f216
  40debc:	pop    ebx
  40debd:	add    edi,ebx
  40debf:	or     eax,0xf4164092
  40dec4:	mov    ah,0xb2
  40dec6:	ja     0x40de8d
  40dec8:	and    DWORD PTR es:[edi-0x4f],ecx
  40decc:	pop    ebx
  40decd:	and    al,0x61
  40decf:	shl    DWORD PTR cs:[ecx+0xd31ccc7],cl
  40ded6:	mov    eax,ds:0xa7f6de2b
  40dedb:	xchg   edi,eax
  40dedc:	inc    ebp
  40dedd:	xor    esi,esp
  40dedf:	or     BYTE PTR [ebp+esi*2+0x28],dl
  40dee3:	js     0x40df3b
  40dee5:	inc    ecx
  40dee6:	enter  0x78ba,0xed
  40deea:	fcomp  st(4)
  40deec:	jo     0x40deb4
  40deee:	inc    ecx
  40deef:	mov    ah,0xea
  40def1:	ror    DWORD PTR [edi-0x6a8c8ce8],0xec
  40def8:	test   eax,0x4e3c8322
  40defd:	xchg   ebx,eax
  40defe:	call   FWORD PTR [edx+0x77]
  40df01:	mov    WORD PTR [edi-0x61],?
  40df04:	inc    esp
  40df05:	add    DWORD PTR [esi+0x5f],ebx
  40df08:	pop    esp
  40df09:	inc    ebx
  40df0a:	sti    
  40df0b:	loop   0x40df38
  40df0d:	dec    edx
  40df0e:	push   ds
  40df0f:	gs in  eax,0x20
  40df12:	mov    edi,0x66c06f8d
  40df17:	cwde   
  40df18:	push   ebx
  40df19:	les    ebx,FWORD PTR [eax+0x21b62bed]
  40df1f:	mov    al,0x68
  40df21:	shl    BYTE PTR ds:[esi+0x50],1
  40df25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df26:	mov    ebx,0x799e4697
  40df2b:	sbb    al,0xde
  40df2d:	js     0x40dec1
  40df2f:	or     bl,BYTE PTR [eax+edx*8]
  40df32:	call   0xf6d227f1
  40df37:	mov    edx,0x6707d57d
  40df3c:	leave  
  40df3d:	(bad)  
  40df3e:	pop    esi
  40df3f:	adc    DWORD PTR [edx],eax
  40df41:	(bad)  
  40df42:	pop    edi
  40df43:	(bad)  
  40df44:	(bad)
  40df49:	and    cl,dl
  40df4b:	inc    eax
  40df4c:	jp     0x40def3
  40df4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df4f:	(bad)  
  40df50:	es xor edx,edx
  40df53:	pop    ebx
  40df54:	push   es
  40df55:	sahf   
  40df56:	imul   esp,eax,0x5ace611e
  40df5c:	scas   eax,DWORD PTR es:[edi]
  40df5d:	aas    
  40df5e:	mov    esi,0x83976b63
  40df63:	adc    eax,0xd7e70f1
  40df68:	mov    esi,0x913092eb
  40df6d:	shr    BYTE PTR [ebx+edi*1+0x4b],0x4d
  40df72:	jmp    0x40df83
  40df74:	dec    edx
  40df75:	out    dx,al
  40df76:	fmul   DWORD PTR [eax-0x431a08d7]
  40df7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df7d:	nop
  40df7e:	add    bh,BYTE PTR [esi+0x61]
  40df81:	xor    al,0xdc
  40df83:	loope  0x40df9c
  40df85:	icebp  
  40df86:	cmp    DWORD PTR [eax-0x3a866a29],edx
  40df8c:	mov    ecx,0x4f8ede63
  40df91:	add    al,0xb5
  40df93:	sub    DWORD PTR [ebx-0x25b4dc87],esi
  40df99:	xchg   edx,eax
  40df9a:	inc    eax
  40df9b:	std    
  40df9c:	aas    
  40df9d:	or     DWORD PTR [ecx-0x407ec4c6],0xb336af08
  40dfa7:	into   
  40dfa8:	push   edi
  40dfa9:	aas    
  40dfaa:	dec    eax
  40dfab:	cmp    ecx,0xffffffd2
  40dfae:	sub    eax,0x1c910651
  40dfb3:	xlat   BYTE PTR ds:[ebx]
  40dfb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb5:	stos   DWORD PTR es:[edi],eax
  40dfb6:	xchg   ecx,eax
  40dfb7:	loope  0x40df57
  40dfb9:	jnp    0x40dfb2
  40dfbb:	sub    BYTE PTR [eax+esi*8],ah
  40dfbe:	or     eax,0xbbf956f4
  40dfc3:	pop    es
  40dfc4:	jmp    0x2c08:0x319f84d
  40dfcb:	jg     0x40dfcb
  40dfcd:	mov    eax,ds:0x12f495ff
  40dfd2:	cli    
  40dfd3:	int3   
  40dfd4:	loope  0x40e02f
  40dfd6:	pop    edx
  40dfd7:	xchg   ecx,eax
  40dfd8:	xchg   BYTE PTR [eax-0x682719f3],dh
  40dfde:	xchg   edi,eax
  40dfdf:	mov    cl,0x79
  40dfe1:	cmp    DWORD PTR [edx],eax
  40dfe3:	sub    dh,BYTE PTR [edx-0x25246a8f]
  40dfe9:	jne    0x40dfd3
  40dfeb:	loope  0x40df81
  40dfed:	and    BYTE PTR [edi-0x35],bl
  40dff0:	out    dx,eax
  40dff1:	xor    eax,0x66321843
  40dff6:	add    eax,0x632af06d
  40dffb:	adc    eax,0x670128d
  40e000:	jno    0x40e004
  40e002:	push   0x5
  40e004:	cdq    
  40e005:	mov    al,0x2d
  40e007:	loope  0x40df97
  40e009:	ss inc edi
  40e00b:	mov    bh,0x1
  40e00d:	mov    ds:0xf13c1999,al
  40e012:	mov    al,ds:0x7bb6b585
  40e017:	xlat   BYTE PTR ds:[ebx]
  40e018:	test   DWORD PTR [ebp+ebp*8+0x180058ca],edi
  40e01f:	lods   al,BYTE PTR ds:[esi]
  40e020:	ins    BYTE PTR es:[edi],dx
  40e021:	push   esp
  40e022:	and    esp,DWORD PTR [edi+0x212b20c0]
  40e028:	lods   eax,DWORD PTR ds:[esi]
  40e029:	mov    esi,0x1107e07a
  40e02e:	fild   DWORD PTR [ecx+esi*1]
  40e031:	outs   dx,DWORD PTR ds:[esi]
  40e032:	lods   eax,DWORD PTR ds:[esi]
  40e033:	fdivr  QWORD PTR ds:0x7f59920c
  40e039:	das    
  40e03a:	mov    BYTE PTR [edx],cl
  40e03c:	pusha  
  40e03d:	(bad)  
  40e03f:	push   edx
  40e040:	and    eax,0x2e64a80d
  40e045:	stos   BYTE PTR es:[edi],al
  40e046:	fdiv   DWORD PTR [ecx+0x3d6440c9]
  40e04c:	add    dh,bl
  40e04e:	add    ch,BYTE PTR [edx-0x55ea130b]
  40e054:	test   edi,esp
  40e056:	mov    ds:0xf0aeadc8,eax
  40e05b:	(bad)  
  40e05c:	scas   al,BYTE PTR es:[edi]
  40e05d:	fmul   st(0),st
  40e05f:	test   DWORD PTR [eax],0xe8c1ea49
  40e065:	mov    dh,BYTE PTR [ecx-0x43]
  40e068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e069:	push   ds
  40e06a:	(bad)  
  40e06b:	js     0x40e056
  40e06d:	jmp    0x682:0x9da465b0
  40e074:	pop    edi
  40e075:	pop    ecx
  40e076:	or     BYTE PTR ss:[edx-0x5b381945],0x1e
  40e07e:	and    eax,DWORD PTR [edx]
  40e080:	test   DWORD PTR [edi+0x21ae204d],0x29d81fe9
  40e08a:	pop    ebx
  40e08b:	xchg   DWORD PTR [edi-0x4e],ebp
  40e08e:	xchg   ebp,eax
  40e08f:	std    
  40e090:	mov    ebx,DWORD PTR [edi]
  40e092:	stos   BYTE PTR es:[edi],al
  40e093:	fnsave [edx-0x66a2967b]
  40e099:	sub    ch,al
  40e09b:	out    0xfb,eax
  40e09d:	xor    ebx,edi
  40e09f:	scas   al,BYTE PTR es:[edi]
  40e0a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a1:	xor    eax,ebx
  40e0a3:	cmp    edx,ebp
  40e0a5:	rcr    esp,1
  40e0a7:	or     cl,ch
  40e0a9:	stos   BYTE PTR es:[edi],al
  40e0aa:	ds stos DWORD PTR es:[edi],eax
  40e0ac:	inc    edx
  40e0ad:	js     0x40e126
  40e0af:	cmp    DWORD PTR [esi+edx*8+0x75a68c2],edx
  40e0b6:	mov    bl,0xd9
  40e0b8:	pop    ebp
  40e0b9:	js     0x40e0fe
  40e0bb:	pop    ebx
  40e0bc:	pop    ss
  40e0bd:	outs   dx,DWORD PTR ds:[esi]
  40e0be:	(bad)  
  40e0bf:	jle    0x40e0f5
  40e0c1:	sbb    cl,ah
  40e0c3:	loope  0x40e072
  40e0c5:	ins    DWORD PTR es:[edi],dx
  40e0c6:	jle    0x40e083
  40e0c8:	mov    edi,0x6a0dde7d
  40e0cd:	sti    
  40e0ce:	imul   esi,DWORD PTR [eax-0x460e19ed],0x22
  40e0d5:	add    bl,ch
  40e0d7:	mov    ebx,0x6ec04543
  40e0dc:	stos   BYTE PTR es:[edi],al
  40e0dd:	jmp    0xfa3f:0x5f81ae0b
  40e0e4:	xchg   ecx,eax
  40e0e5:	jle    0x40e0ca
  40e0e7:	ror    DWORD PTR [ebp+0x5f],0x7
  40e0eb:	rcr    BYTE PTR [ecx+0x7df13354],1
  40e0f1:	mov    DWORD PTR [edx+0x74],eax
  40e0f4:	xor    DWORD PTR [ecx],esi
  40e0f6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40e0f8:	call   0xfddf47f0
  40e0fd:	sti    
  40e0fe:	push   ecx
  40e0ff:	mov    esi,0xc3d188db
  40e104:	pop    es
  40e105:	pop    ecx
  40e106:	add    eax,0xe00c3294
  40e10b:	xchg   ebp,eax
  40e10c:	rol    BYTE PTR [ebx-0x34],0xf
  40e110:	mov    eax,ds:0x89b3c7b4
  40e115:	sub    BYTE PTR [ebx],bh
  40e117:	inc    esi
  40e118:	iret   
  40e119:	ds cmc 
  40e11b:	mov    ecx,0xd931e26
  40e120:	xor    bh,BYTE PTR [edi+0x7a]
  40e123:	push   cs
  40e124:	cmp    eax,0xf165ba4f
  40e129:	sub    DWORD PTR [edx],esp
  40e12b:	and    dh,dl
  40e12d:	xchg   ebx,eax
  40e12e:	aad    0xcf
  40e130:	mov    ds:0x7ab873dc,al
  40e135:	(bad)  
  40e136:	nop
  40e137:	fild   WORD PTR [esi+0x25]
  40e13a:	dec    esp
  40e13b:	mov    dh,0x89
  40e13d:	mov    dh,0x97
  40e13f:	inc    edi
  40e140:	fistp  QWORD PTR [edi-0x58]
  40e143:	mov    cl,0x35
  40e145:	dec    ebx
  40e146:	arpl   ax,si
  40e148:	lock je 0x40e1b8
  40e14b:	loope  0x40e1c3
  40e14d:	inc    ecx
  40e14e:	jmp    0x3aab7210
  40e153:	mov    eax,0xb50701ea
  40e158:	fmul   QWORD PTR [eax+edx*4+0x5c]
  40e15c:	pop    ecx
  40e15d:	pop    es
  40e15e:	mul    BYTE PTR [ecx+0x29]
  40e161:	jbe    0x40e128
  40e163:	dec    ebx
  40e164:	popf   
  40e165:	xor    DWORD PTR es:[ebx+0x61efda5d],ebp
  40e16c:	mov    ebp,0x41cae42a
  40e171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e172:	mov    esp,0x50432364
  40e177:	push   ds
  40e178:	outs   dx,BYTE PTR ds:[esi]
  40e179:	push   cs
  40e17a:	retf   
  40e17b:	and    eax,0x3d643287
  40e180:	test   eax,0xe0804980
  40e185:	jmp    0x40e19c
  40e187:	adc    DWORD PTR [ecx+0x64054c7f],edx
  40e18d:	dec    ebp
  40e18e:	jmp    0xd466:0x1bbc7e
  40e195:	cmp    esp,DWORD PTR [eax-0x77]
  40e198:	xor    al,0xa4
  40e19a:	rol    edi,0xbb
  40e19d:	sbb    ebx,edx
  40e19f:	(bad)  
  40e1a0:	jmp    0x40e1e0
  40e1a2:	jnp    0x40e1cd
  40e1a4:	mov    dl,0xa8
  40e1a6:	or     ah,BYTE PTR [ebp-0x1e9c2deb]
  40e1ac:	cld    
  40e1ad:	or     ecx,DWORD PTR [edi+0x6a8dca8b]
  40e1b3:	mov    cl,BYTE PTR [edi]
  40e1b5:	icebp  
  40e1b6:	ins    DWORD PTR es:[edi],dx
  40e1b7:	xchg   edx,eax
  40e1b8:	fsubr  DWORD PTR [esp+eiz*4]
  40e1bb:	dec    ebp
  40e1bc:	leave  
  40e1bd:	push   ebx
  40e1be:	and    al,dh
  40e1c0:	push   cs
  40e1c1:	out    dx,al
  40e1c2:	push   esi
  40e1c3:	dec    eax
  40e1c4:	xor    DWORD PTR [edi],0xffffffc5
  40e1c7:	or     eax,0x3991b0ab
  40e1cc:	in     eax,dx
  40e1cd:	(bad)  
  40e1ce:	xchg   ecx,eax
  40e1cf:	imul   ebp,DWORD PTR [ebx-0x18],0x7f
  40e1d3:	jp     0x40e22f
  40e1d5:	lds    ecx,FWORD PTR [eax]
  40e1d7:	add    al,0x6
  40e1d9:	scas   al,BYTE PTR es:[edi]
  40e1da:	xlat   BYTE PTR ds:[ebx]
  40e1dc:	dec    esp
  40e1dd:	mov    cl,0xf0
  40e1df:	ret    0x891d
  40e1e2:	leave  
  40e1e3:	jns    0x40e1e0
  40e1e5:	mov    eax,0xb41cfd54
  40e1ea:	hlt    
  40e1eb:	sbb    al,BYTE PTR ds:0x4fea5051
  40e1f1:	call   FWORD PTR [ebp+0xf]
  40e1f4:	cs stos BYTE PTR es:[edi],al
  40e1f6:	ins    BYTE PTR es:[edi],dx
  40e1f7:	mov    ch,0x9
  40e1f9:	inc    edi
  40e1fa:	mov    bh,0x48
  40e1fc:	loop   0x40e1f5
  40e1fe:	out    dx,eax
  40e1ff:	(bad)  
  40e201:	and    ch,BYTE PTR [ebp+0x4d5e7d97]
  40e207:	xor    DWORD PTR [di],ebp
  40e20a:	mov    al,0x81
  40e20c:	xchg   edi,eax
  40e20d:	arpl   WORD PTR [eax+ebx*1],si
  40e210:	pushf  
  40e211:	aaa    
  40e212:	fisubr WORD PTR [eax-0x310b30ab]
  40e218:	xor    dh,BYTE PTR [edx]
  40e21a:	lock fcomp DWORD PTR [ecx-0x614a701b]
  40e221:	enter  0xa1ce,0x6e
  40e225:	gs out dx,al
  40e227:	ins    DWORD PTR es:[edi],dx
  40e228:	add    ch,BYTE PTR [edx-0x5774ff49]
  40e22e:	mov    ch,0x10
  40e230:	xchg   ecx,eax
  40e231:	mov    cl,0xde
  40e233:	sub    ecx,edi
  40e235:	in     eax,dx
  40e236:	sar    BYTE PTR [ebp-0x777347e4],1
  40e23c:	imul   edi,DWORD PTR [edx+0x3083bf52],0x62
  40e243:	pushf  
  40e244:	xor    DWORD PTR [ecx-0x2c343f59],ebp
  40e24a:	xchg   esp,eax
  40e24b:	sbb    eax,0x1de83bf3
  40e250:	push   0xea184378
  40e255:	mov    ecx,0xc3f32820
  40e25a:	mov    ch,0x58
  40e25c:	fcomp  st(3)
  40e25f:	stos   DWORD PTR es:[edi],eax
  40e260:	jmp    0x42f7:0xb2d91c12
  40e267:	mov    bl,0x7a
  40e269:	stc    
  40e26a:	ins    BYTE PTR es:[edi],dx
  40e26b:	xchg   ebp,eax
  40e26c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e26d:	inc    esp
  40e26e:	sar    edx,cl
  40e270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e271:	mov    ah,0x9f
  40e273:	and    al,0x80
  40e275:	nop
  40e276:	cld    
  40e277:	xchg   BYTE PTR [edx+eiz*2],bh
  40e27a:	mov    edi,0x295c0845
  40e27f:	dec    edi
  40e280:	loope  0x40e21f
  40e282:	push   ss
  40e283:	xor    dh,BYTE PTR [esi]
  40e285:	sub    DWORD PTR [esi+0x46],esp
  40e288:	and    bh,BYTE PTR [esi+0x66]
  40e28b:	inc    ecx
  40e28c:	fmul   QWORD PTR [edx+0x18154c6]
  40e292:	xor    ecx,eax
  40e294:	xor    ebx,edi
  40e296:	mov    edx,0x3eeda5cd
  40e29b:	add    al,0xd2
  40e29d:	stos   DWORD PTR es:[edi],eax
  40e29e:	pop    ebp
  40e29f:	stos   BYTE PTR es:[edi],al
  40e2a0:	inc    ebp
  40e2a1:	into   
  40e2a2:	fild   QWORD PTR [eax]
  40e2a4:	ret    0x50d6
  40e2a7:	cs pusha 
  40e2a9:	mov    edx,0x98775443
  40e2ae:	cli    
  40e2af:	mul    BYTE PTR [ecx-0x8]
  40e2b2:	clc    
  40e2b3:	sub    al,0xec
  40e2b5:	and    eax,DWORD PTR ds:0xdd46ca04
  40e2bb:	pop    ebp
  40e2bc:	add    cl,BYTE PTR [ecx-0x37]
  40e2bf:	push   ds
  40e2c0:	jae    0x40e2c7
  40e2c2:	shr    ecx,cl
  40e2c4:	adc    BYTE PTR [ebp+edi*8-0xf],bh
  40e2c8:	loope  0x40e2d0
  40e2ca:	neg    BYTE PTR [eax+0x59e39f2c]
  40e2d0:	and    BYTE PTR [ebx+esi*4-0x42d3ec3f],0xc5
  40e2d8:	pusha  
  40e2d9:	retf   0xe402
  40e2dc:	jmp    FWORD PTR [ebp+edx*1-0x669f5b06]
  40e2e3:	xchg   DWORD PTR [esi-0x1a],ebp
  40e2e6:	(bad)  
  40e2e8:	aaa    
  40e2e9:	xor    BYTE PTR [eax+0xdf9b4d1],dh
  40e2ef:	inc    edi
  40e2f0:	in     eax,dx
  40e2f1:	ja     0x40e2b5
  40e2f3:	mov    WORD PTR [edi],fs
  40e2f5:	scas   al,BYTE PTR es:[edi]
  40e2f6:	xchg   esi,eax
  40e2f7:	xor    dl,BYTE PTR [edx]
  40e2f9:	lea    edx,[edx-0x3291239f]
  40e2ff:	loope  0x40e31d
  40e301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e302:	in     al,0x73
  40e304:	mov    esi,0x949d8b2b
  40e309:	leave  
  40e30a:	sbb    eax,0xabfa7149
  40e30f:	and    BYTE PTR [edx],al
  40e311:	call   DWORD PTR [ebx]
  40e313:	xor    bh,BYTE PTR [ebx+0x45]
  40e316:	call   0x3e7c0966
  40e31b:	iret   
  40e31c:	or     eax,0x8fd383d3
  40e321:	nop
  40e322:	dec    esi
  40e323:	in     eax,0x67
  40e325:	adc    eax,0xe63dee57
  40e32a:	jle    0x40e397
  40e32c:	dec    esi
  40e32d:	or     dh,ch
  40e32f:	lods   al,BYTE PTR ds:[esi]
  40e330:	xchg   ebp,eax
  40e331:	lods   eax,DWORD PTR ds:[esi]
  40e332:	dec    eax
  40e333:	rcr    BYTE PTR [esi-0x74cf6c77],1
  40e339:	psllw  mm1,QWORD PTR [esi-0x3c]
  40e33d:	push   0x29e3dce4
  40e342:	mov    dl,0xc5
  40e344:	std    
  40e345:	pop    edx
  40e346:	lea    esp,[ebx-0x11ec44c]
  40e34c:	outs   dx,DWORD PTR ds:[esi]
  40e34d:	(bad)  
  40e34e:	leave  
  40e34f:	sub    bl,ah
  40e351:	ins    BYTE PTR es:[edi],dx
  40e352:	mov    eax,ds:0xe541df76
  40e357:	fadd   QWORD PTR [eax]
  40e359:	mov    DWORD PTR [ebp+0x6a],0xa764101d
  40e360:	sbb    esi,DWORD PTR [edi-0x7e]
  40e363:	(bad)  
  40e364:	push   ss
  40e365:	imul   bx,WORD PTR [edi-0xd],0xffe2
  40e36a:	(bad)
  40e36d:	dec    esp
  40e36e:	push   0x2f68ee82
  40e373:	lods   eax,DWORD PTR ds:[esi]
  40e374:	mov    dh,BYTE PTR [ebx+0x14c61aea]
  40e37a:	in     al,0x3d
  40e37c:	fdivp  st(0),st
  40e37e:	xchg   ecx,eax
  40e37f:	push   cs
  40e380:	jo     0x40e3df
  40e382:	and    eax,0xe8eb4b0d
  40e387:	mov    ebp,0x4e82263e
  40e38c:	daa    
  40e38d:	jne    0x40e3f7
  40e38f:	pop    edi
  40e390:	dec    esp
  40e391:	sbb    al,0xef
  40e393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e394:	ins    BYTE PTR es:[edi],dx
  40e395:	cli    
  40e396:	mov    ebx,0xc9e9cd5f
  40e39b:	ret    
  40e39c:	add    bh,BYTE PTR [ebp-0x57]
  40e39f:	xchg   esp,eax
  40e3a0:	test   dl,bh
  40e3a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3a3:	sar    DWORD PTR [edi+eax*2-0x6d49e7d5],0xfc
  40e3ab:	addr16 mov edi,0xc1493e04
  40e3b1:	mov    al,0x1d
  40e3b3:	cmp    eax,0x2d0f62f7
  40e3b8:	jb     0x40e3c6
  40e3ba:	loope  0x40e42e
  40e3bc:	pop    es
  40e3bd:	xor    DWORD PTR [edx-0x3d],edi
  40e3c0:	sbb    DWORD PTR [ecx+0xef9912b],ecx
  40e3c6:	push   edi
  40e3c7:	xchg   ecx,eax
  40e3c8:	sbb    al,0x3b
  40e3ca:	or     DWORD PTR [ecx-0x290f0fd1],esi
  40e3d0:	jbe    0x40e43b
  40e3d2:	mov    DWORD PTR [edx+0x19],eax
  40e3d5:	xor    BYTE PTR [ebx+0x27169b35],ah
  40e3db:	out    0xfb,al
  40e3dd:	inc    edi
  40e3de:	cdq    
  40e3df:	stos   DWORD PTR es:[edi],eax
  40e3e0:	sub    ecx,eax
  40e3e2:	sub    eax,0x690873c6
  40e3e7:	and    eax,0x87271178
  40e3ec:	les    edx,FWORD PTR [ebp*8+0x5e31d184]
  40e3f3:	ins    BYTE PTR es:[edi],dx
  40e3f4:	and    esp,edx
  40e3f6:	ret    
  40e3f7:	push   ecx
  40e3f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f9:	repnz fwait
  40e3fb:	hlt    
  40e3fc:	inc    edi
  40e3fd:	sahf   
  40e3fe:	mov    ebp,0x84765c9d
  40e403:	pushf  
  40e404:	jge    0x40e3fb
  40e406:	sub    esp,DWORD PTR [edi]
  40e408:	adc    eax,0x1649b6ce
  40e40d:	repz mov eax,ds:0x1031237
  40e413:	xor    al,bh
  40e415:	dec    edx
  40e416:	dec    esp
  40e417:	dec    ecx
  40e418:	imul   esp,DWORD PTR [ecx],0xd28e6783
  40e41e:	out    dx,al
  40e41f:	movlps xmm6,QWORD PTR [esi+0x73]
  40e423:	cmc    
  40e424:	cwde   
  40e425:	add    cl,cl
  40e427:	shl    DWORD PTR [edx-0x28],cl
  40e42a:	outs   dx,BYTE PTR ds:[esi]
  40e42b:	test   BYTE PTR [ecx-0x3951e631],dl
  40e431:	fnstcw WORD PTR [edx]
  40e433:	lea    ecx,[edx+0x4e]
  40e436:	fbstp  TBYTE PTR [ebx]
  40e438:	jnp    0x40e4a7
  40e43a:	stos   DWORD PTR es:[edi],eax
  40e43b:	push   ebp
  40e43c:	int3   
  40e43d:	and    DWORD PTR [eax+0x574a3ec4],eax
  40e443:	adc    al,0x3b
  40e445:	out    dx,al
  40e446:	adc    DWORD PTR [esi+edi*4+0x15],esi
  40e44a:	cmp    ah,bh
  40e44c:	mov    dl,0x59
  40e44e:	push   ss
  40e44f:	daa    
  40e450:	fsubrp st(6),st
  40e452:	mov    al,ds:0x2429cee2
  40e457:	leave  
  40e458:	ins    DWORD PTR es:[edi],dx
  40e459:	aaa    
  40e45a:	es retf 
  40e45c:	test   eax,0x248942dc
  40e461:	and    al,0xee
  40e463:	sbb    ebp,DWORD PTR [ebx-0x7]
  40e466:	test   BYTE PTR [eax-0xb],0x55
  40e46a:	test   BYTE PTR [edi],ch
  40e46c:	pop    ebp
  40e46d:	ds ins DWORD PTR es:[edi],dx
  40e46f:	cmc    
  40e470:	and    ebx,DWORD PTR [esi*4-0x51556cc8]
  40e477:	push   esi
  40e478:	dec    esi
  40e479:	sub    bh,0xe
  40e47c:	loopne 0x40e3ff
  40e47e:	sbb    edx,DWORD PTR [edi+0x4324900e]
  40e484:	sbb    BYTE PTR [ecx-0x20],dl
  40e487:	test   BYTE PTR ds:0x24e51ed5,bl
  40e48d:	sar    DWORD PTR [edx+0x66],1
  40e490:	push   cs
  40e491:	mov    ebx,0x7178e19b
  40e496:	out    dx,eax
  40e497:	cmc    
  40e498:	in     eax,0xa7
  40e49a:	mov    edi,edi
  40e49c:	mov    eax,ds:0x3faeb90c
  40e4a1:	sub    edi,DWORD PTR [esi+0x52]
  40e4a4:	xor    esi,edi
  40e4a6:	out    dx,eax
  40e4a7:	mov    DWORD PTR [edx+esi*8],ecx
  40e4aa:	adc    ch,dh
  40e4ac:	cs pop ecx
  40e4ae:	sbb    ecx,DWORD PTR [edx+ecx*8+0x0]
  40e4b2:	xlat   BYTE PTR ds:[ebx]
  40e4b4:	shl    BYTE PTR [ecx-0x4d],0xf2
  40e4b8:	adc    BYTE PTR [ebx+ecx*2-0x71a9c4ee],0x3e
  40e4c0:	and    BYTE PTR [edi],bh
  40e4c2:	mov    edi,DWORD PTR ds:0x584876b7
  40e4c8:	out    0x8b,eax
  40e4ca:	cs aad 0x78
  40e4cd:	sbb    bl,BYTE PTR [edx+0x23]
  40e4d0:	mov    WORD PTR [esi],ss
  40e4d2:	hlt    
  40e4d3:	dec    edi
  40e4d4:	inc    edx
  40e4d5:	mov    al,ds:0xb3250851
  40e4da:	xchg   esi,esp
  40e4dc:	xor    al,0x82
  40e4de:	add    DWORD PTR [ecx-0x5fe02536],0x68
  40e4e5:	pop    ecx
  40e4e6:	ret    
  40e4e7:	inc    esp
  40e4e8:	(bad)  
  40e4e9:	lea    edx,[ebx-0x22]
  40e4ec:	retf   
  40e4ed:	enter  0x27b8,0x16
  40e4f1:	jne    0x40e47f
  40e4f3:	pop    ss
  40e4f4:	pop    es
  40e4f5:	inc    ecx
  40e4f6:	(bad)  
  40e4f7:	fstp   QWORD PTR [edi-0x48]
  40e4fa:	pop    eax
  40e4fb:	mov    esi,0x7e295039
  40e500:	sub    esi,DWORD PTR [ebx+0x41990345]
  40e506:	or     DWORD PTR [ecx+0x22],ebx
  40e509:	pop    ss
  40e50a:	(bad)  
  40e50b:	push   0x8fabec8b
  40e510:	scas   al,BYTE PTR es:[edi]
  40e511:	popf   
  40e512:	sbb    cl,BYTE PTR [ebx]
  40e514:	xchg   esp,eax
  40e516:	not    DWORD PTR ds:0xa95d74be
  40e51c:	and    DWORD PTR [edi+0x23da823b],edi
  40e522:	sbb    al,0x1
  40e524:	mov    eax,0xf84b330
  40e529:	leave  
  40e52a:	mov    ds:0xd966744f,eax
  40e52f:	lahf   
  40e530:	xchg   edx,eax
  40e531:	mov    bh,0x3e
  40e533:	sbb    ch,dl
  40e535:	inc    ebx
  40e536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e537:	int    0x23
  40e539:	call   DWORD PTR [ebx+0x5a7c4732]
  40e53f:	mov    bh,0x8a
  40e541:	sar    DWORD PTR [edi+0x3d043fc],cl
  40e547:	xor    cl,BYTE PTR [esi-0x5f8c2988]
  40e54d:	add    esp,edi
  40e54f:	shr    BYTE PTR [ecx],0x94
  40e552:	or     BYTE PTR [edx],bh
  40e554:	and    ebx,DWORD PTR [eax]
  40e556:	ror    DWORD PTR [esp+edx*8-0x79d20a79],0xa3
  40e55e:	jb     0x40e4ff
  40e560:	lock and BYTE PTR [eax+0x5277c3d],bh
  40e567:	cmp    eax,0x5383429e
  40e56c:	ins    DWORD PTR es:[edi],dx
  40e56d:	scas   eax,DWORD PTR es:[edi]
  40e56e:	ja     0x40e5c7
  40e570:	je     0x40e5bf
  40e572:	jno    0x40e5c3
  40e574:	xor    al,0x97
  40e576:	fst    DWORD PTR [edx+0x1f]
  40e579:	cmp    eax,0x4cbf62b6
  40e57e:	les    esp,FWORD PTR [ecx]
  40e580:	xlat   BYTE PTR ds:[ebx]
  40e581:	sub    eax,0x75d36b7c
  40e586:	jle    0x40e580
  40e588:	pop    ebp
  40e589:	int3   
  40e58a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e58b:	pusha  
  40e58c:	dec    ecx
  40e58d:	pop    es
  40e58e:	sub    BYTE PTR [edx+0x4],dh
  40e591:	imul   BYTE PTR [esi+0x4b]
  40e594:	cdq    
  40e595:	mov    dh,0x6a
  40e597:	repnz sub eax,0x4f6d8738
  40e59d:	dec    esi
  40e59e:	ror    DWORD PTR [edx+esi*4+0x35852d1e],cl
  40e5a5:	pusha  
  40e5a6:	repz enter 0xa857,0x75
  40e5ab:	into   
  40e5ac:	jbe    0x40e5ed
  40e5ae:	xor    eax,0x656c6b62
  40e5b3:	adc    cl,BYTE PTR [edi+ebp*2]
  40e5b6:	jne    0x40e565
  40e5b8:	daa    
  40e5b9:	sbb    DWORD PTR [ecx],esi
  40e5bb:	jno    0x40e580
  40e5bd:	sbb    eax,0x3225c082
  40e5c2:	sbb    DWORD PTR [ecx],0x34
  40e5c5:	loope  0x40e633
  40e5c7:	push   0xf3c3130f
  40e5cc:	jecxz  0x40e54f
  40e5ce:	(bad)  
  40e5cf:	cld    
  40e5d0:	dec    esp
  40e5d1:	cmp    esp,DWORD PTR [esi-0x1444acf2]
  40e5d7:	jmp    0xc6605633
  40e5dc:	push   ecx
  40e5dd:	xlat   BYTE PTR ss:[ebx]
  40e5df:	mov    esi,0x473d2d59
  40e5e4:	inc    ecx
  40e5e5:	in     eax,dx
  40e5e6:	cmc    
  40e5e7:	dec    esi
  40e5e8:	mov    eax,0xc4cc229d
  40e5ed:	lods   al,BYTE PTR ds:[esi]
  40e5ee:	leave  
  40e5ef:	adc    al,0x98
  40e5f1:	mov    ?,WORD PTR [ecx]
  40e5f3:	in     al,dx
  40e5f4:	and    BYTE PTR [esi],bl
  40e5f6:	push   ss
  40e5f7:	mov    ds:0xee02e722,eax
  40e5fc:	add    esp,edi
  40e5fe:	sub    al,0xc6
  40e600:	mov    cs,WORD PTR [edx+esi*2+0x19]
  40e604:	and    al,BYTE PTR [esi+0x3a3769a9]
  40e60a:	jg     0x40e637
  40e60c:	sbb    ah,BYTE PTR [edx-0x4b764f62]
  40e612:	push   eax
  40e613:	ja     0x40e5d1
  40e615:	idiv   BYTE PTR [edx]
  40e617:	cmc    
  40e618:	dec    eax
  40e619:	in     al,0xbc
  40e61b:	jmp    0x86eb9fac
  40e620:	add    BYTE PTR [ecx-0x53],al
  40e623:	outs   dx,BYTE PTR ds:[esi]
  40e624:	fisubr DWORD PTR [eax]
  40e626:	sbb    al,0x6a
  40e628:	pushf  
  40e629:	inc    edi
  40e62a:	xor    esi,DWORD PTR [eax+0x1144a5da]
  40e630:	nop
  40e631:	xor    BYTE PTR [esi+0x5161aba7],bl
  40e637:	jg     0x40e621
  40e639:	xchg   ebp,eax
  40e63a:	clc    
  40e63b:	std    
  40e63c:	jg     0x40e5d7
  40e63e:	in     al,dx
  40e63f:	jbe    0x40e5eb
  40e641:	(bad)  [edi]
  40e643:	popf   
  40e644:	loop   0x40e63e
  40e646:	stc    
  40e647:	loop   0x40e677
  40e649:	xor    cl,dh
  40e64b:	cmp    eax,0x2a1a0d34
  40e650:	dec    eax
  40e651:	adc    eax,0x1f39628c
  40e656:	sbb    DWORD PTR [edi-0x7ae47714],edi
  40e65c:	call   0xecfffa95
  40e661:	retf   0xf9e1
  40e664:	jl     0x40e605
  40e666:	repz mov edx,edi
  40e669:	push   ds
  40e66a:	arpl   WORD PTR [ebx],cx
  40e66c:	jle    0x40e6d0
  40e66e:	lock outs dx,BYTE PTR ds:[esi]
  40e670:	mov    eax,ds:0xda854159
  40e675:	dec    esi
  40e676:	bound  eax,QWORD PTR [ebp+0x56]
  40e679:	mov    edx,0x916c348
  40e67e:	mov    bh,0x22
  40e680:	sahf   
  40e681:	mov    dl,0x4d
  40e683:	or     al,BYTE PTR [edi+eax*8+0x28]
  40e687:	cwde   
  40e688:	imul   eax,DWORD PTR [eax],0x46f580e7
  40e68e:	in     al,dx
  40e68f:	jl     0x40e6a2
  40e691:	push   0xffffff8d
  40e693:	aam    0x89
  40e695:	or     bh,BYTE PTR [ecx]
  40e697:	add    bl,BYTE PTR [edx-0x3f]
  40e69a:	rcr    DWORD PTR [ecx],1
  40e69c:	sahf   
  40e69d:	xlat   BYTE PTR ds:[ebx]
  40e69e:	add    ebx,DWORD PTR [esi+0x31]
  40e6a1:	call   0xbe818b1f
  40e6a6:	fistp  QWORD PTR [ebp-0x76]
  40e6a9:	lds    dx,DWORD PTR [edi]
  40e6ac:	adc    BYTE PTR [eax+0x14],bh
  40e6af:	mov    DWORD PTR [edi],edx
  40e6b1:	pop    eax
  40e6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6b3:	mul    DWORD PTR [ebx-0x3d]
  40e6b6:	mov    DWORD PTR [eax+0x230cbfd8],ebx
  40e6bc:	xchg   ecx,eax
  40e6bd:	mov    dh,BYTE PTR [ebx]
  40e6bf:	mov    cl,0xc0
  40e6c1:	jbe    0x40e696
  40e6c3:	ja     0x40e6cd
  40e6c5:	xor    dl,BYTE PTR [ebp+0x75]
  40e6c8:	neg    DWORD PTR [bx+di+0x6c]
  40e6cc:	and    DWORD PTR [ecx-0x60462dad],0xfb1d609e
  40e6d6:	int3   
  40e6d7:	sbb    edi,edx
  40e6d9:	jmp    0xda21764d
  40e6de:	xchg   BYTE PTR [ebx-0x2b237dac],bl
  40e6e4:	ret    0x15f3
  40e6e7:	int3   
  40e6e8:	push   0x1c
  40e6ea:	in     eax,dx
  40e6eb:	jmp    0x2a19:0x33167a54
  40e6f2:	data16 sbb al,0x9c
  40e6f5:	jne    0x40e719
  40e6f7:	sub    eax,0x8d5baa76
  40e6fc:	add    ah,BYTE PTR [ebp+0x943f021]
  40e702:	rcl    BYTE PTR [eax+edi*8-0x1d],cl
  40e706:	mov    bh,ah
  40e708:	adc    ebx,DWORD PTR [esp+eax*8-0x19]
  40e70c:	in     eax,dx
  40e70d:	adc    eax,0xdd72a600
  40e712:	mov    eax,0x6e2ba80b
  40e717:	add    eax,0xce9a41e5
  40e71c:	stos   BYTE PTR es:[edi],al
  40e71d:	hlt    
  40e71e:	leave  
  40e71f:	in     al,0x5a
  40e721:	mov    ch,0xad
  40e723:	(bad)  
  40e724:	(bad)  
  40e726:	repnz pop ss
  40e728:	cmp    ebp,DWORD PTR [edx]
  40e72a:	retf   0x1994
  40e72d:	leave  
  40e72e:	mov    ebp,0xa29ab017
  40e733:	loope  0x40e6ba
  40e735:	es cmp al,ch
  40e738:	cmp    eax,0xc08c9d55
  40e73d:	dec    ecx
  40e73e:	inc    edi
  40e73f:	mov    ds:0xcf8d3ba4,al
  40e744:	xchg   edx,eax
  40e745:	inc    ebp
  40e746:	jne    0x40e71b
  40e748:	ficomp DWORD PTR [edi+ecx*1+0x40]
  40e74c:	jbe    0x40e715
  40e74e:	jl     0x40e7c7
  40e750:	mov    DWORD PTR [esp+ecx*2-0x54],0xdaed44cc
  40e758:	push   ss
  40e759:	test   DWORD PTR ds:0xfc7a81a1,ebp
  40e75f:	imul   ebx,ecx,0xffffff98
  40e762:	test   ecx,ecx
  40e764:	leave  
  40e765:	sub    al,0xb3
  40e767:	cmp    eax,0xbd7e6b7
  40e76c:	add    BYTE PTR [ebx-0x2232341f],dh
  40e772:	shr    BYTE PTR [ecx+0x5d858c1b],cl
  40e778:	mov    ah,0xe
  40e77a:	cdq    
  40e77b:	test   BYTE PTR [ebx],bh
  40e77d:	jmp    0xe1001a30
  40e782:	jmp    0xecfc:0xbc5b0e23
  40e789:	xchg   ebx,eax
  40e78a:	(bad)  
  40e78c:	add    edx,DWORD PTR [ecx+0x7fd11aec]
  40e792:	mov    dl,0xc3
  40e794:	cli    
  40e795:	aad    0xd9
  40e797:	cli    
  40e798:	ror    BYTE PTR ds:0xb8120e9,1
  40e79e:	add    ebp,edx
  40e7a0:	sbb    BYTE PTR [esi-0x36],dh
  40e7a3:	pop    es
  40e7a4:	int    0xa1
  40e7a6:	push   eax
  40e7a7:	shl    BYTE PTR [ecx+0x5c8d9e4f],0x43
  40e7ae:	dec    edx
  40e7af:	shl    ebp,cl
  40e7b1:	cmp    ah,dl
  40e7b3:	sbb    eax,0x97b0b2c7
  40e7b8:	or     eax,0xe2f3c201
  40e7bd:	jno    0x40e745
  40e7bf:	mov    al,ds:0x1fa47646
  40e7c4:	xor    ah,BYTE PTR [ecx-0x58]
  40e7c7:	fdiv   DWORD PTR [ecx]
  40e7c9:	jmp    FWORD PTR [ebp-0x80]
  40e7cc:	out    0x27,al
  40e7ce:	iret   
  40e7cf:	lock and cl,BYTE PTR [ebx]
  40e7d2:	push   ecx
  40e7d3:	in     al,0xf3
  40e7d5:	mov    ebx,0x8614b76
  40e7da:	lock inc edi
  40e7dc:	test   al,0x59
  40e7de:	sub    BYTE PTR [esi+0x5d],al
  40e7e1:	ficom  DWORD PTR [eax+0x3789183f]
  40e7e7:	pusha  
  40e7e8:	jge    0x40e7e8
  40e7ea:	out    0xda,eax
  40e7ec:	ror    bl,0xaf
  40e7ef:	mov    ecx,0x10ee8cfe
  40e7f4:	push   es
  40e7f5:	or     ebx,DWORD PTR ds:0xe0dc607a
  40e7fb:	add    ecx,DWORD PTR [eax-0x71cec945]
  40e801:	jno    0x40e84b
  40e803:	fcomip st,st(5)
  40e805:	inc    esp
  40e806:	ins    BYTE PTR es:[edi],dx
  40e807:	out    dx,al
  40e808:	pop    ebp
  40e809:	stc    
  40e80a:	call   0xe2081053
  40e80f:	out    dx,al
  40e810:	loopne 0x40e871
  40e812:	cdq    
  40e813:	sbb    al,dh
  40e815:	jle    0x40e7da
  40e817:	xchg   edx,eax
  40e818:	lock add eax,ebx
  40e81b:	les    esi,FWORD PTR [ebp-0x3c]
  40e81e:	xchg   BYTE PTR [esi+0x3b8c7b3a],bl
  40e824:	jbe    0x40e80a
  40e826:	rol    DWORD PTR [esi],1
  40e828:	push   ds
  40e829:	mov    al,ds:0xaf3dda94
  40e82e:	std    
  40e82f:	xor    al,0xd6
  40e831:	repnz sbb bh,ah
  40e834:	leave  
  40e835:	and    bh,ah
  40e837:	pop    ecx
  40e838:	pop    ds
  40e839:	or     ebx,ebx
  40e83b:	add    al,cl
  40e83d:	add    al,0x98
  40e83f:	xor    DWORD PTR [edx+0x5f],edx
  40e842:	push   esi
  40e843:	push   ebx
  40e844:	pop    ebx
  40e845:	mov    ecx,0x85fde8aa
  40e84a:	mov    dh,0x30
  40e84c:	in     eax,dx
  40e84d:	mov    ebp,0x13cb5596
  40e852:	shl    DWORD PTR [eax+ebp*1-0x3e],1
  40e856:	push   cs
  40e857:	cmp    DWORD PTR ds:0x34d386b8,ecx
  40e85d:	rcl    ebx,1
  40e85f:	xor    cl,BYTE PTR [esi-0x18866e04]
  40e865:	repz push ds
  40e867:	pusha  
  40e868:	fist   WORD PTR [edx+0x4]
  40e86b:	sub    DWORD PTR [ebx+0x5bdbbf29],edi
  40e871:	pop    edx
  40e872:	xchg   ecx,eax
  40e873:	xor    DWORD PTR [edx+0x7b],esp
  40e876:	push   cs
  40e877:	mov    BYTE PTR [edx-0x29],bl
  40e87a:	pop    esi
  40e87b:	sub    DWORD PTR [ebp-0x211ea846],edi
  40e881:	jmp    0xd623:0xeeabd86c
  40e888:	inc    eax
  40e889:	xchg   DWORD PTR [ecx],eax
  40e88b:	dec    eax
  40e88c:	rcl    BYTE PTR [esi+0x7b7bf96c],1
  40e892:	jno    0x40e880
  40e894:	sbb    eax,0x268ce20c
  40e899:	rcr    DWORD PTR [ebp+0xb],0xa3
  40e89d:	or     BYTE PTR [ebx-0x198d01dd],0x1
  40e8a4:	sbb    cl,BYTE PTR [ebx-0x53432ed2]
  40e8aa:	mov    bh,BYTE PTR [ebx+0x42]
  40e8ad:	loopne 0x40e864
  40e8af:	fwait
  40e8b0:	mov    al,ds:0x270ea7aa
  40e8b5:	mov    cl,0xea
  40e8b7:	std    
  40e8b8:	sbb    al,0xf7
  40e8ba:	cmp    al,0xc7
  40e8bc:	xchg   ecx,eax
  40e8bd:	inc    esp
  40e8be:	adc    al,0x88
  40e8c0:	es pop esi
  40e8c2:	xchg   cl,ch
  40e8c4:	mov    edx,0x3897210a
  40e8c9:	mov    al,ds:0x87748b99
  40e8ce:	dec    esp
  40e8cf:	sbb    al,0x9
  40e8d1:	inc    edx
  40e8d2:	in     eax,dx
  40e8d3:	jbe    0x40e8e3
  40e8d5:	push   ds
  40e8d6:	xchg   esp,eax
  40e8d7:	fwait
  40e8d8:	and    DWORD PTR [ecx-0x63152db1],ebx
  40e8de:	icebp  
  40e8df:	dec    edi
  40e8e0:	scas   eax,DWORD PTR es:[edi]
  40e8e1:	and    eax,0x5295ffe1
  40e8e6:	bound  ecx,QWORD PTR [edx+esi*1-0x69]
  40e8ea:	sbb    dh,BYTE PTR [edx]
  40e8ec:	mov    ch,0xdb
  40e8ee:	in     eax,dx
  40e8ef:	(bad)  
  40e8f0:	cld    
  40e8f1:	data16 jb 0x40e927
  40e8f4:	jmp    0x40e89b
  40e8f6:	pop    es
  40e8f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8f8:	aas    
  40e8f9:	mov    ebx,0x3f9a235a
  40e8fe:	(bad)  
  40e8ff:	rcl    DWORD PTR [edx+0x3113f0d7],cl
  40e905:	leave  
  40e906:	push   cs
  40e907:	mov    dl,0xfb
  40e909:	push   ss
  40e90a:	xor    edx,esi
  40e90c:	xor    ebx,eax
  40e90e:	(bad)  
  40e912:	jl     0x40e97b
  40e914:	clc    
  40e915:	ja     0x40e90b
  40e917:	xchg   esi,eax
  40e918:	add    DWORD PTR [ecx-0x27],ecx
  40e91b:	arpl   bp,si
  40e91d:	sub    edx,0x15
  40e920:	js     0x40e8db
  40e922:	scas   al,BYTE PTR es:[edi]
  40e923:	mov    ebx,0x7152c8c7
  40e928:	out    0x54,eax
  40e92a:	dec    edi
  40e92b:	mov    edx,0x5a7daee3
  40e930:	cwde   
  40e931:	fsubrp st(6),st
  40e933:	jae    0x40e8d7
  40e935:	pcmpgtb mm1,QWORD PTR [edx-0x2]
  40e939:	xor    eax,0x25b0f594
  40e93e:	imul   eax,DWORD PTR [esi-0x4],0x73
  40e942:	xor    bl,ah
  40e944:	mov    eax,0xf3b9d70a
  40e949:	sbb    al,0x6f
  40e94b:	daa    
  40e94c:	inc    edx
  40e94d:	mov    ecx,DWORD PTR [ebx-0x21]
  40e950:	push   0xffffffe3
  40e952:	push   edx
  40e953:	stos   DWORD PTR es:[edi],eax
  40e954:	and    ecx,eax
  40e956:	lods   al,BYTE PTR ds:[esi]
  40e957:	jo     0x40e938
  40e959:	sub    BYTE PTR [eax+ebp*2-0x2b8d57e0],al
  40e960:	dec    ebp
  40e961:	mov    cl,BYTE PTR gs:[ebp-0x113587e1]
  40e968:	mov    DWORD PTR [edx+0x13a3df21],esp
  40e96e:	push   edx
  40e96f:	jle    0x40e9af
  40e971:	mov    cl,0x3a
  40e973:	(bad)  
  40e974:	mov    ds:0x8422ec92,eax
  40e979:	jmp    0x40e953
  40e97b:	pushf  
  40e97c:	xchg   BYTE PTR [edi],bl
  40e97e:	sub    al,0x6e
  40e980:	daa    
  40e981:	fsubr  DWORD PTR [esi-0x66]
  40e984:	outs   dx,BYTE PTR ds:[esi]
  40e985:	nop
  40e986:	sahf   
  40e987:	mov    edi,ebx
  40e989:	aaa    
  40e98a:	mov    DWORD PTR [ebx+0x66f4e2f4],ebp
  40e990:	jmp    0xfd8cc623
  40e995:	ffree  st(6)
  40e997:	pop    esi
  40e998:	or     dl,BYTE PTR [edx-0x7f]
  40e99b:	sub    esp,esi
  40e99d:	inc    eax
  40e99e:	int3   
  40e99f:	idiv   cl
  40e9a1:	ret    0x90ee
  40e9a4:	retf   0xdb54
  40e9a7:	in     eax,dx
  40e9a8:	out    0x2c,eax
  40e9aa:	lods   al,BYTE PTR ds:[esi]
  40e9ab:	jl     0x40e9ca
  40e9ad:	bound  eax,QWORD PTR [ebx+0x2fc79656]
  40e9b3:	lea    ecx,[ebx]
  40e9b5:	push   edx
  40e9b6:	cwde   
  40e9b7:	inc    ebx
  40e9b8:	mov    bl,0x33
  40e9ba:	fs push ds
  40e9bc:	jne    0x40e9be
  40e9be:	xchg   edi,eax
  40e9bf:	es fcmovb st,st(4)
  40e9c2:	inc    esp
  40e9c3:	xor    eax,0xe2fffb45
  40e9c8:	cmp    eax,0x30516599
  40e9cd:	xor    eax,0x7981d509
  40e9d2:	daa    
  40e9d3:	pop    ecx
  40e9d4:	in     eax,0x35
  40e9d6:	fstp   TBYTE PTR [esi-0x12d2dcab]
  40e9dc:	out    dx,al
  40e9dd:	repnz inc ebp
  40e9df:	ds int3 
  40e9e1:	jb     0x40ea4f
  40e9e3:	adc    eax,0x2ad16092
  40e9e8:	add    DWORD PTR [edi-0x4b371b68],0x1b
  40e9ef:	test   eax,0x51609364
  40e9f4:	push   es
  40e9f5:	mov    bl,0x8d
  40e9f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f8:	mov    ah,0x6f
  40e9fa:	div    cl
  40e9fc:	adc    DWORD PTR [ecx+esi*4],ecx
  40e9ff:	push   eax
  40ea00:	popa   
  40ea01:	adc    eax,0xed855997
  40ea06:	or     ch,BYTE PTR [eax]
  40ea08:	ss pop ecx
  40ea0a:	jno    0x40ea10
  40ea0c:	retf   
  40ea0d:	or     ebx,ebp
  40ea0f:	mov    bl,0xd9
  40ea11:	push   ecx
  40ea12:	mov    ch,BYTE PTR [edx+0x2dcddc7b]
  40ea18:	dec    ebp
  40ea19:	fadd   QWORD PTR [esi-0x41]
  40ea1c:	jmp    0xa1134af8
  40ea21:	dec    ecx
  40ea22:	adc    edi,edi
  40ea24:	sub    eax,0x712586aa
  40ea29:	cmp    ecx,DWORD PTR [ebx+0x10d23145]
  40ea2f:	inc    ebx
  40ea31:	mov    ecx,0x384ecf6b
  40ea36:	jne    0x40eaa4
  40ea38:	mov    dl,0x5
  40ea3a:	(bad)  
  40ea3b:	daa    
  40ea3c:	xchg   edx,eax
  40ea3d:	jle    0x40ea67
  40ea3f:	xchg   DWORD PTR [ecx+0x6b],ebp
  40ea42:	in     al,dx
  40ea43:	gs fsub st,st(1)
  40ea46:	mov    WORD PTR [eax-0x4c],gs
  40ea49:	dec    ebp
  40ea4a:	in     eax,0xda
  40ea4c:	popa   
  40ea4d:	retf   
  40ea4e:	inc    esi
  40ea4f:	xchg   esi,eax
  40ea50:	cdq    
  40ea51:	push   esi
  40ea52:	xor    ecx,DWORD PTR [edi]
  40ea54:	sub    eax,0xd7e873d3
  40ea59:	dec    ebx
  40ea5a:	mov    ecx,0x92b0e2bb
  40ea5f:	fisub  WORD PTR [edx]
  40ea61:	adc    eax,DWORD PTR [ecx+0x7e0051d2]
  40ea67:	xor    BYTE PTR [ecx-0x7e],ah
  40ea6a:	jmp    0x4591:0xe24064a2
  40ea71:	loope  0x40e9fe
  40ea73:	ins    DWORD PTR es:[edi],dx
  40ea74:	xchg   edi,eax
  40ea75:	sub    al,0xe3
  40ea77:	sub    DWORD PTR [edx-0x35],edi
  40ea7a:	(bad)  
  40ea7c:	ins    DWORD PTR es:[edi],dx
  40ea7d:	int3   
  40ea7e:	xor    eax,DWORD PTR [edi-0x55879d5f]
  40ea84:	xchg   DWORD PTR [edx+0x3c],edi
  40ea87:	add    ebx,DWORD PTR [edi+0x18]
  40ea8a:	clc    
  40ea8b:	dec    ecx
  40ea8c:	sbb    BYTE PTR [edx],dh
  40ea8e:	sbb    al,0xd8
  40ea90:	int    0x13
  40ea92:	inc    edx
  40ea93:	mov    eax,0x2025e7d6
  40ea98:	adc    dh,ah
  40ea9a:	mov    bh,0xf7
  40ea9c:	in     eax,dx
  40ea9d:	xor    al,0x1a
  40ea9f:	repnz leave 
  40eaa1:	aaa    
  40eaa2:	out    dx,eax
  40eaa3:	mul    ecx
  40eaa5:	inc    edx
  40eaa6:	or     ah,ch
  40eaa8:	iret   
  40eaa9:	gs sub al,0x68
  40eaac:	jae    0x40ea50
  40eaae:	stos   DWORD PTR es:[edi],eax
  40eaaf:	test   cl,dl
  40eab1:	jmp    0xe7f96729
  40eab6:	xchg   DWORD PTR [eax-0x74],ecx
  40eab9:	sbb    BYTE PTR [edx+edx*2],ah
  40eabc:	push   es
  40eabd:	mov    WORD PTR [eax+0x72a98114],?
  40eac3:	mov    bl,0x29
  40eac5:	adc    DWORD PTR ss:[edx+0x64],ebx
  40eac9:	jbe    0x40ea74
  40eacb:	add    eax,0x4b60cee1
  40ead0:	leave  
  40ead1:	pop    es
  40ead2:	(bad)  
  40ead3:	jecxz  0x40eae3
  40ead5:	sahf   
  40ead6:	call   0xf943:0x7c873d1c
  40eadd:	fnstenv ss:[eax]
  40eae0:	int    0x3a
  40eae2:	mov    ch,0x15
  40eae4:	stos   BYTE PTR es:[edi],al
  40eae5:	jl     0x40eb0e
  40eae7:	mov    DWORD PTR [eax],eax
  40eae9:	lods   al,BYTE PTR ds:[esi]
  40eaea:	jmp    0x779e:0xc41fd926
  40eaf1:	mov    DWORD PTR cs:[ecx+0x442c7fbb],ecx
  40eaf8:	mov    dh,0x39
  40eafa:	jne    0x40eb14
  40eafc:	aad    0x13
  40eafe:	xchg   DWORD PTR [eax+ebp*2],ecx
  40eb01:	jg     0x40ea9e
  40eb03:	leave  
  40eb04:	mov    ecx,0xb2a5ae6b
  40eb09:	in     eax,0x30
  40eb0b:	push   cs
  40eb0c:	in     al,0xbb
  40eb0e:	inc    ebx
  40eb0f:	repnz mov ebp,0xac8c9b8d
  40eb15:	or     DWORD PTR [edi+eax*1+0x2db99500],0x546e3f2d
  40eb20:	fcomp  DWORD PTR [eax+ecx*1]
  40eb23:	lea    eax,[ebx]
  40eb25:	outs   dx,BYTE PTR ds:[esi]
  40eb26:	mov    dh,0x80
  40eb28:	add    eax,0xc26acfdf
  40eb2d:	pusha  
  40eb2e:	adc    esi,DWORD PTR [ebp-0x244a6850]
  40eb34:	mov    cl,0x65
  40eb36:	push   edx
  40eb37:	mov    dh,ah
  40eb39:	jg     0x40eb4a
  40eb3b:	std    
  40eb3c:	jp     0x40eb39
  40eb3e:	(bad)  
  40eb3f:	fsubr  DWORD PTR [esp+eiz*4+0x5750e998]
  40eb46:	mov    DWORD PTR [ebx-0x27],esp
  40eb49:	mov    ah,0xed
  40eb4b:	jl     0x40eb52
  40eb4d:	(bad)  
  40eb4e:	jle    0x40eb8d
  40eb50:	pop    ebx
  40eb51:	outs   dx,BYTE PTR ds:[esi]
  40eb52:	into   
  40eb53:	add    bh,BYTE PTR [edx]
  40eb55:	mov    ebp,ebx
  40eb57:	bound  ebx,QWORD PTR [edx+0x15]
  40eb5a:	test   BYTE PTR [ecx-0x5d631b75],cl
  40eb60:	jmp    0x74bc433d
  40eb65:	jb     0x40eb1b
  40eb67:	loop   0x40eb00
  40eb69:	jge    0x40ebb6
  40eb6b:	dec    DWORD PTR [eiz*1-0x122fd7f5]
  40eb72:	push   0xffffff88
  40eb74:	push   ecx
  40eb75:	out    dx,eax
  40eb76:	or     al,BYTE PTR [edx-0x58eea1d0]
  40eb7c:	sub    ebx,ecx
  40eb7e:	sub    eax,0x2b274a87
  40eb83:	ja     0x40eb1f
  40eb85:	sbb    DWORD PTR [ebp+0x6],0xebc11b47
  40eb8c:	mov    WORD PTR [ebp-0x782b9f10],?
  40eb92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb93:	je     0x40ebcb
  40eb95:	shl    BYTE PTR [ebx],cl
  40eb97:	mov    ebx,0xdd78a0ba
  40eb9c:	je     0x40ebf2
  40eb9e:	push   0x94e0667
  40eba3:	xor    edi,DWORD PTR [ebp+0x4a]
  40eba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eba7:	sub    al,BYTE PTR ds:0xc1f0582e
  40ebad:	adc    eax,0x9dd681e2
  40ebb2:	fstp   QWORD PTR [ecx]
  40ebb4:	jno    0x40eb4f
  40ebb6:	xchg   esi,eax
  40ebb7:	sbb    esp,DWORD PTR [edi+edi*2-0x26]
  40ebbb:	mov    ds:0x53b2e7c5,eax
  40ebc0:	pop    ebx
  40ebc1:	add    BYTE PTR [eax],bh
  40ebc3:	(bad)  
  40ebc4:	cld    
  40ebc5:	mov    al,0x9
  40ebc7:	jge    0x40eb84
  40ebc9:	stc    
  40ebca:	and    BYTE PTR [edx+0x5fa596a6],cl
  40ebd0:	inc    esp
  40ebd1:	data16 sti 
  40ebd3:	mov    BYTE PTR [ebx],al
  40ebd5:	dec    esp
  40ebd6:	push   ecx
  40ebd7:	shl    BYTE PTR [edx-0x4d],0x96
  40ebdb:	int3   
  40ebdc:	mov    eax,ds:0x7f496a32
  40ebe1:	stos   BYTE PTR es:[edi],al
  40ebe2:	ins    BYTE PTR es:[edi],dx
  40ebe3:	ror    DWORD PTR [ebp-0x66abfb4e],1
  40ebe9:	jbe    0x40ebc5
  40ebeb:	out    dx,eax
  40ebec:	hlt    
  40ebed:	and    DWORD PTR [eax+0x49],eax
  40ebf0:	inc    edx
  40ebf1:	(bad)  
  40ebf2:	clc    
  40ebf3:	aam    0xa8
  40ebf5:	(bad)  
  40ebf6:	sbb    DWORD PTR [ebp+esi*1-0x6a],ecx
  40ebfa:	je     0x40ec5c
  40ebfc:	xchg   esp,eax
  40ebfd:	rol    DWORD PTR [edi-0x6c],cl
  40ec00:	pushf  
  40ec01:	les    esp,FWORD PTR [edx+0x7f1eb543]
  40ec07:	test   al,0xef
  40ec09:	(bad)  
  40ec0a:	cmc    
  40ec0b:	lods   al,BYTE PTR es:[esi]
  40ec0d:	ins    DWORD PTR es:[edi],dx
  40ec0e:	mov    ebx,0xebcdf7b2
  40ec13:	push   edx
  40ec14:	pusha  
  40ec15:	fimul  WORD PTR [ebx-0x7f]
  40ec18:	push   esp
  40ec19:	(bad)  [ebx-0x473167af]
  40ec1f:	repnz cmp DWORD PTR [ebp-0x71],ecx
  40ec23:	push   es
  40ec24:	xor    al,BYTE PTR [ecx]
  40ec26:	out    0xb7,eax
  40ec28:	rol    DWORD PTR [esi+0x7ee0b162],cl
  40ec2e:	add    eax,0x6e5a49c5
  40ec33:	mov    ecx,0x69e728d9
  40ec38:	adc    ebp,DWORD PTR [ebx-0x74]
  40ec3b:	mov    ebx,0xc3a5eb2
  40ec40:	jb     0x40ec9f
  40ec42:	shl    BYTE PTR [ecx+0x68],0xe9
  40ec46:	fisub  WORD PTR [esi-0x6e]
  40ec49:	or     esi,DWORD PTR [edi+0x44]
  40ec4c:	(bad)  
  40ec4d:	sahf   
  40ec4e:	fdivp  st(6),st
  40ec50:	or     BYTE PTR [ecx+0x6a207e63],cl
  40ec56:	push   edi
  40ec57:	or     al,0x40
  40ec59:	popf   
  40ec5a:	dec    ebp
  40ec5b:	bound  esi,QWORD PTR [esi]
  40ec5d:	rcl    BYTE PTR [ebx-0x2f13b8e5],cl
  40ec63:	loope  0x40ebf0
  40ec65:	push   es
  40ec66:	stos   BYTE PTR es:[edi],al
  40ec67:	shr    DWORD PTR [edx],0x8a
  40ec6a:	into   
  40ec6b:	test   BYTE PTR [ebx],ch
  40ec6d:	and    eax,0xffffffcf
  40ec70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec71:	add    eax,ebp
  40ec73:	mov    fs,esp
  40ec75:	ret    
  40ec76:	fiadd  DWORD PTR [edi+0x1f]
  40ec79:	dec    esp
  40ec7a:	push   0xffffffa4
  40ec7c:	stos   BYTE PTR es:[edi],al
  40ec7d:	add    bl,dl
  40ec7f:	popa   
  40ec80:	(bad)  
  40ec82:	jecxz  0x40ecec
  40ec84:	jl     0x40ed04
  40ec86:	repnz mov ebx,0x1a121006
  40ec8c:	jle    0x40ec4c
  40ec8e:	daa    
  40ec8f:	das    
  40ec90:	jmp    0x40ec4a
  40ec92:	mov    al,ds:0x6de6b6ad
  40ec97:	stc    
  40ec98:	imul   eax,DWORD PTR [esi+0x26],0x17
  40ec9c:	out    0x58,eax
  40ec9e:	mov    ebp,0x276bc654
  40eca3:	scas   al,BYTE PTR es:[edi]
  40eca4:	mov    cl,0x5a
  40eca6:	pop    ebx
  40eca7:	call   0xc80a:0x8b391da7
  40ecae:	inc    eax
  40ecaf:	mov    eax,ds:0x866a780f
  40ecb4:	sub    eax,0x8f93e1d6
  40ecb9:	jne    0x40ed08
  40ecbb:	dec    ecx
  40ecbc:	and    al,0xc9
  40ecbe:	cmp    ebx,DWORD PTR [edi-0x80]
  40ecc1:	or     cl,BYTE PTR [eax+eax*4-0x65]
  40ecc5:	add    eax,0xa1ead47c
  40ecca:	daa    
  40eccb:	add    edi,esi
  40eccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecce:	jno    0x40eca2
  40ecd0:	dec    edx
  40ecd1:	and    al,0x8b
  40ecd3:	pop    esp
  40ecd4:	pop    edi
  40ecd5:	js     0x40ed26
  40ecd7:	js     0x40ecdd
  40ecd9:	push   esp
  40ecda:	pop    ss
  40ecdb:	jne    0x40ed1c
  40ecdd:	ja     0x40ecea
  40ecdf:	push   0x3dd76254
  40ece4:	xchg   esp,eax
  40ece5:	cli    
  40ece6:	push   cs
  40ece7:	xchg   ebx,eax
  40ece8:	jecxz  0x40ecac
  40ecea:	push   0x38782ea2
  40ecef:	or     BYTE PTR gs:[esi+0xf2502da],0x3e
  40ecf7:	cli    
  40ecf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecf9:	mov    ds:0x69e310a3,eax
  40ecfe:	or     esi,DWORD PTR [edi-0x52]
  40ed01:	xchg   ebx,eax
  40ed02:	or     eax,0xd9ab8ea8
  40ed07:	mov    edi,0xd84101a7
  40ed0c:	in     al,0xb5
  40ed0e:	bound  esi,QWORD PTR [edx]
  40ed10:	sbb    DWORD PTR [ecx-0x79f296bf],ebx
  40ed16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed17:	imul   edx,DWORD PTR [eax],0x9ab0f40b
  40ed1d:	inc    ebp
  40ed1e:	fsub   st(5),st
  40ed20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed21:	xchg   edi,eax
  40ed22:	push   ds
  40ed23:	aas    
  40ed24:	or     dh,dl
  40ed26:	mov    DWORD PTR [ebx+0x25c737de],edi
  40ed2c:	mov    edi,ebp
  40ed2e:	fisttp DWORD PTR [ebx+0x28]
  40ed31:	in     eax,dx
  40ed32:	mov    al,ds:0x37e79846
  40ed37:	(bad)  
  40ed38:	jp     0x40ed77
  40ed3a:	call   0xb032:0x2ac4f3e4
  40ed41:	mov    BYTE PTR [eax-0x7d218015],al
  40ed47:	(bad)  
  40ed48:	push   ecx
  40ed49:	and    eax,0x1b7ea47e
  40ed4e:	push   ecx
  40ed4f:	pusha  
  40ed50:	test   BYTE PTR [ebp-0x3e],dh
  40ed53:	repnz out 0x98,eax
  40ed56:	pusha  
  40ed57:	dec    esi
  40ed58:	and    al,0xd
  40ed5a:	jo     0x40eda4
  40ed5c:	in     al,dx
  40ed5d:	pop    eax
  40ed5e:	fucomi st,st(5)
  40ed60:	push   edi
  40ed61:	retf   0xb7d4
  40ed64:	push   0xbadec546
  40ed69:	popa   
  40ed6a:	cmp    ebp,DWORD PTR [esi+0x1f]
  40ed6d:	out    0x3,eax
  40ed6f:	scas   eax,DWORD PTR es:[edi]
  40ed70:	fcom   QWORD PTR [ecx]
  40ed72:	adc    DWORD PTR [ebx+0x6d],ebx
  40ed75:	xchg   esi,eax
  40ed76:	pop    esi
  40ed77:	adc    al,0x9c
  40ed79:	cmp    BYTE PTR [edi+0x74],bl
  40ed7c:	(bad)  
  40ed7d:	popf   
  40ed7e:	mov    edi,0xb27e1082
  40ed83:	xor    al,0xb2
  40ed85:	iret   
  40ed86:	inc    ebp
  40ed87:	(bad)  
  40ed88:	ficomp WORD PTR [ebx+eax*8-0x40]
  40ed8c:	mov    bh,0x7d
  40ed8e:	push   ebp
  40ed8f:	xchg   esi,eax
  40ed90:	jo     0x40ed43
  40ed92:	xor    ah,ch
  40ed94:	lods   al,BYTE PTR ds:[esi]
  40ed95:	clc    
  40ed96:	adc    DWORD PTR [ecx-0x6d85c45f],esi
  40ed9c:	adc    DWORD PTR [ebx],0xf76ab535
  40eda2:	mov    ah,0xb7
  40eda4:	mov    edx,0xa7bb9330
  40eda9:	mov    ds:0x3298db56,ax
  40edaf:	(bad)  
  40edb0:	mov    ebp,0x45c6877e
  40edb5:	fld    QWORD PTR [edi+eiz*2+0x40cb99d7]
  40edbc:	fidivr DWORD PTR [ebx]
  40edbe:	dec    edx
  40edbf:	or     BYTE PTR [ebx+eiz*1-0x7],bl
  40edc3:	jecxz  0x40eda7
  40edc5:	xor    BYTE PTR [edi+0x19],ch
  40edc8:	(bad)  
  40edc9:	fbld   TBYTE PTR [ebx+edx*1]
  40edcc:	shl    DWORD PTR [ecx],0x1
  40edcf:	popa   
  40edd0:	jmp    0x27da53a4
  40edd5:	retf   
  40edd6:	push   ecx
  40edd7:	sahf   
  40edd8:	ss xor eax,0xa60189a2
  40edde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eddf:	pop    esp
  40ede0:	push   edx
  40ede1:	bound  edi,QWORD PTR [edx]
  40ede3:	add    dh,BYTE PTR [esi]
  40ede5:	sub    DWORD PTR [edx+eax*2+0x1cd3cee8],eax
  40edec:	pop    ebp
  40eded:	cmp    BYTE PTR [ecx+0x47610034],dl
  40edf3:	fsubr  st(7),st
  40edf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf6:	fld    DWORD PTR [esi+0x60]
  40edf9:	in     al,dx
  40edfa:	mov    ch,BYTE PTR [ebx+0x18]
  40edfd:	test   edi,ebp
  40edff:	cs inc ebx
  40ee01:	dec    edx
  40ee02:	je     0x40ee2f
  40ee04:	test   al,0x11
  40ee06:	into   
  40ee07:	mov    ah,0xaa
  40ee09:	sbb    BYTE PTR [esi],cl
  40ee0b:	adc    al,0x9a
  40ee0d:	(bad)  
  40ee0e:	push   ebx
  40ee0f:	repnz in al,dx
  40ee11:	pop    edi
  40ee12:	cmp    ch,BYTE PTR [edi+0x16]
  40ee15:	mov    eax,0x9207f45c
  40ee1a:	in     al,dx
  40ee1b:	stc    
  40ee1c:	sahf   
  40ee1d:	es or  eax,0x2a9cc0bf
  40ee23:	push   cs
  40ee24:	or     eax,0x27bd5c67
  40ee29:	push   0xffffffd0
  40ee2b:	mov    ds:0xe9965547,eax
  40ee30:	sub    esp,DWORD PTR [eax]
  40ee32:	(bad)  
  40ee34:	ss adc al,0x5
  40ee37:	mov    BYTE PTR [esi],ah
  40ee39:	shl    BYTE PTR [ebx+ecx*4],0x66
  40ee3d:	pavgw  mm7,QWORD PTR [ecx]
  40ee40:	dec    eax
  40ee41:	adc    DWORD PTR cs:[esi+0x72f5e8db],esp
  40ee48:	inc    esi
  40ee49:	jg     0x40edd3
  40ee4b:	retf   
  40ee4c:	or     DWORD PTR [esi],esp
  40ee4e:	pop    eax
  40ee50:	cmp    al,0x39
  40ee52:	rcr    DWORD PTR [ebp-0x369b6c8b],cl
  40ee58:	(bad)  
  40ee59:	sahf   
  40ee5a:	mov    dh,0xc9
  40ee5c:	sub    edi,DWORD PTR [ebp+0x5d]
  40ee5f:	fidivr WORD PTR [ecx]
  40ee61:	(bad)  
  40ee62:	outs   dx,DWORD PTR ds:[esi]
  40ee63:	and    al,BYTE PTR ds:0xe572d3af
  40ee69:	add    al,BYTE PTR [esi-0x12c26f4e]
  40ee6f:	jge    0x40ee3a
  40ee71:	retf   
  40ee72:	xchg   esi,eax
  40ee73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee74:	mov    ah,BYTE PTR [esi+0x63]
  40ee77:	out    0xed,al
  40ee79:	cmp    BYTE PTR [edx],bl
  40ee7b:	scas   eax,DWORD PTR es:[edi]
  40ee7c:	push   ebx
  40ee7d:	mov    esp,0xd1b28180
  40ee82:	jecxz  0x40eed5
  40ee84:	fidivr WORD PTR [esi+esi*1-0x25]
  40ee88:	jge    0x40eedb
  40ee8a:	or     al,0x48
  40ee8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee8d:	jge    0x40ee2a
  40ee8f:	jo     0x40eede
  40ee91:	adc    DWORD PTR [edx],ebx
  40ee93:	fild   QWORD PTR [esi]
  40ee95:	adc    BYTE PTR [ebp-0x3477c514],dh
  40ee9b:	mov    al,ds:0xf5cf4341
  40eea0:	test   ebx,ebp
  40eea2:	or     ebx,DWORD PTR [ebx]
  40eea4:	pop    ebp
  40eea5:	sti    
  40eea6:	in     al,0x43
  40eea8:	sub    DWORD PTR [eax],0x3c
  40eeab:	and    bl,BYTE PTR [ebp+0x47]
  40eeae:	pop    ss
  40eeaf:	(bad)  
  40eeb1:	xchg   edi,eax
  40eeb2:	(bad)  
  40eeb3:	out    dx,eax
  40eeb4:	and    DWORD PTR [eax],ebp
  40eeb6:	push   eax
  40eeb7:	jb     0x40ef19
  40eeb9:	leave  
  40eeba:	add    al,0xfe
  40eebc:	push   ecx
  40eebd:	lea    esp,[esi-0x7d]
  40eec0:	(bad)  
  40eec2:	lods   eax,DWORD PTR ds:[esi]
  40eec3:	ins    BYTE PTR es:[edi],dx
  40eec4:	ja     0x40ee9f
  40eec6:	push   ebx
  40eec7:	ss inc edi
  40eec9:	popa   
  40eeca:	loopne 0x40ef33
  40eecc:	jg     0x40ef14
  40eece:	pop    ss
  40eecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eed0:	test   eax,0x1f99b3dc
  40eed5:	sub    eax,0xbb556d61
  40eeda:	push   ecx
  40eedb:	mov    eax,ds:0xc79ae98e
  40eee0:	fadd   QWORD PTR [edi-0x20]
  40eee3:	les    esi,FWORD PTR [eax-0x25e908ef]
  40eee9:	push   esi
  40eeea:	mov    ch,0x38
  40eeec:	or     DWORD PTR ds:[esi],0xe877ded9
  40eef3:	outs   dx,BYTE PTR ds:[esi]
  40eef4:	dec    ebx
  40eef5:	jnp    0x40eeb1
  40eef7:	scas   eax,DWORD PTR es:[edi]
  40eef8:	cmp    bh,BYTE PTR [eax]
  40eefa:	mov    edx,0x2b1f0ecf
  40eeff:	xlat   BYTE PTR ds:[ebx]
  40ef00:	mov    esp,esp
  40ef02:	sub    BYTE PTR ds:0x56b66ceb,al
  40ef08:	frstor gs:[ecx]
  40ef0b:	inc    eax
  40ef0c:	mov    bl,0x4a
  40ef0e:	lock jmp 0x5c99:0xc3d985bb
  40ef16:	in     eax,0xd3
  40ef18:	add    ebx,DWORD PTR [esi-0x75]
  40ef1b:	(bad)  
  40ef1c:	into   
  40ef1d:	sahf   
  40ef1e:	mov    esp,0xdf859254
  40ef23:	jecxz  0x40eead
  40ef25:	mov    edx,0x6f22fa5d
  40ef2a:	cli    
  40ef2b:	cmp    eax,0xfc696d5f
  40ef30:	push   ecx
  40ef31:	int3   
  40ef32:	fwait
  40ef33:	mov    edx,0x6b945bcf
  40ef38:	add    ah,dh
  40ef3a:	push   cs
  40ef3b:	add    DWORD PTR [ebx+0x704741ba],edi
  40ef41:	jp     0x40eef6
  40ef43:	xchg   DWORD PTR [edi],eax
  40ef45:	mov    bl,0x34
  40ef47:	push   ebx
  40ef48:	(bad)  
  40ef4a:	sbb    eax,0xafeaba2d
  40ef4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef50:	fnstcw WORD PTR [ebp-0x24170b93]
  40ef56:	pop    ebx
  40ef57:	fild   DWORD PTR [esi+0x4abe6b92]
  40ef5d:	mov    eax,ds:0xc5d66526
  40ef62:	pop    ds
  40ef63:	and    bl,BYTE PTR [edx+0x34]
  40ef66:	rcr    ch,1
  40ef68:	(bad)  
  40ef69:	mov    bh,ah
  40ef6b:	jge    0x40ef22
  40ef6d:	cld    
  40ef6e:	and    esi,DWORD PTR [edi-0x6976c532]
  40ef74:	jle    0x40ef3c
  40ef76:	jbe    0x40ef9c
  40ef78:	out    dx,eax
  40ef79:	out    0x2e,al
  40ef7b:	mov    bl,0x60
  40ef7d:	in     eax,dx
  40ef7e:	sub    ebp,esp
  40ef80:	cmp    ecx,DWORD PTR [ebp-0x1b4d2c51]
  40ef86:	inc    edx
  40ef87:	push   ebp
  40ef88:	push   edx
  40ef89:	mov    esp,0xa6e7f158
  40ef8e:	hlt    
  40ef8f:	inc    esi
  40ef90:	rcl    DWORD PTR [ecx],cl
  40ef92:	imul   DWORD PTR [ebx-0x5b97c715]
  40ef98:	mov    esi,?
  40ef9a:	clc    
  40ef9b:	lahf   
  40ef9c:	fcomp  QWORD PTR [ebx]
  40ef9e:	mov    WORD PTR [eax+ecx*4+0x20],?
  40efa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efa3:	mov    al,0x95
  40efa5:	inc    edx
  40efa6:	mov    ah,BYTE PTR [edx+0x36]
  40efa9:	mov    WORD PTR [ebp-0x7109cda9],ss
  40efaf:	pop    ds
  40efb0:	pop    edx
  40efb1:	fwait
  40efb2:	adc    DWORD PTR [ecx],edi
  40efb4:	stc    
  40efb5:	iret   
  40efb6:	dec    edx
  40efb7:	ficom  WORD PTR [edx]
  40efb9:	stos   BYTE PTR es:[edi],al
  40efba:	int    0x52
  40efbc:	mov    gs,WORD PTR [esi-0x7e]
  40efbf:	sub    edx,DWORD PTR [edx+0x14ba6c57]
  40efc5:	out    dx,al
  40efc6:	(bad)  
  40efc7:	jmp    0x350534b7
  40efcc:	fistp  DWORD PTR [edi]
  40efce:	das    
  40efcf:	push   ss
  40efd0:	pop    ebx
  40efd1:	jmp    0xb662:0x446a1235
  40efd8:	scas   al,BYTE PTR es:[edi]
  40efd9:	(bad)  
  40efdb:	adc    ecx,DWORD PTR [ecx+eax*2]
  40efde:	sbb    al,ch
  40efe0:	scas   al,BYTE PTR es:[edi]
  40efe1:	xor    esp,eax
  40efe3:	fimul  WORD PTR [ebp-0x24]
  40efe6:	cdq    
  40efe7:	inc    esi
  40efe8:	outs   dx,DWORD PTR ds:[esi]
  40efe9:	cmp    DWORD PTR [ebp+0x44e5a0c],0x86ea8d1d
  40eff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eff4:	(bad)  
  40eff6:	aam    0x2f
  40eff8:	mov    cl,0x46
  40effa:	test   DWORD PTR [edi],eax
  40effc:	sbb    eax,0x9d721f12
  40f001:	jge    0x40f076
  40f003:	fistp  QWORD PTR [eax+0x19c41a04]
  40f009:	dec    edx
  40f00a:	jl     0x40f02e
  40f00c:	and    esi,0x7146f957
  40f012:	sub    DWORD PTR [edx+0x46],esp
  40f015:	cwde   
  40f016:	jb     0x40f081
  40f018:	icebp  
  40f019:	popa   
  40f01a:	scas   al,BYTE PTR es:[edi]
  40f01b:	mov    esp,0xc5dd08f7
  40f020:	repnz dec ebx
  40f022:	retf   0xcc5c
  40f025:	cmp    eax,DWORD PTR [edi+0x14]
  40f028:	xchg   ecx,eax
  40f029:	sahf   
  40f02a:	adc    al,0x57
  40f02c:	fcomp  QWORD PTR [eax]
  40f02e:	jno    0x40efda
  40f030:	fnsave [esi]
  40f032:	sbb    esi,ebp
  40f034:	xchg   esp,eax
  40f035:	(bad)
  40f038:	mov    fs:0x5d9be170,al
  40f03e:	pop    eax
  40f03f:	push   ebx
  40f040:	(bad)  
  40f041:	mov    ebp,0xb46b4e01
  40f046:	xor    bh,BYTE PTR [ebx-0x2409aa2d]
  40f04c:	in     al,0x53
  40f04e:	adc    bl,BYTE PTR es:[edx+0x5a3681ea]
  40f055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f056:	push   ds
  40f057:	popa   
  40f058:	and    bl,BYTE PTR [ebx]
  40f05a:	xor    DWORD PTR [eax-0x6b],edi
  40f05d:	mov    DWORD PTR [edx+ebp*1+0x57cc2a7d],esp
  40f064:	ins    BYTE PTR es:[edi],dx
  40f065:	scas   al,BYTE PTR es:[edi]
  40f066:	sti    
  40f067:	and    edi,DWORD PTR [ecx+ebp*8-0x51c8a4c9]
  40f06e:	xchg   ecx,eax
  40f06f:	(bad)  
  40f070:	out    dx,al
  40f071:	xor    ah,BYTE PTR [ebp+0x72]
  40f074:	cli    
  40f075:	mov    ch,0xdc
  40f077:	and    al,0xf3
  40f079:	add    BYTE PTR [ebp+0x56be3d04],bl
  40f07f:	gs retf 0xa857
  40f083:	shr    DWORD PTR [ecx+0x6d950928],1
  40f089:	sti    
  40f08a:	push   cs
  40f08b:	jmp    0x824492ca
  40f090:	arpl   WORD PTR [edx],bp
  40f092:	into   
  40f093:	xchg   ebp,eax
  40f094:	enter  0x10e9,0xa7
  40f098:	aas    
  40f099:	pop    esp
  40f09a:	aad    0x32
  40f09c:	xor    dh,BYTE PTR [ecx]
  40f09e:	pop    ebx
  40f09f:	and    BYTE PTR [eiz*8+0x1e3ba800],0xc
  40f0a7:	jmp    FWORD PTR [ecx]
  40f0a9:	int    0xb
  40f0ab:	mov    ds:0x28f17278,al
  40f0b0:	mov    ebx,0xf0da34f0
  40f0b5:	cmc    
  40f0b6:	ds mov dl,0xb9
  40f0b9:	inc    eax
  40f0ba:	pop    esp
  40f0bb:	dec    ecx
  40f0bc:	mov    ds:0xd6dfa3ae,al
  40f0c1:	sub    BYTE PTR [eax+ebx*1],bl
  40f0c4:	loope  0x40f13e
  40f0c6:	int    0x6e
  40f0c8:	out    dx,al
  40f0c9:	pop    ss
  40f0ca:	sahf   
  40f0cb:	cs ss aaa 
  40f0ce:	mov    edi,0x4df45910
  40f0d3:	xlat   BYTE PTR ds:[ebx]
  40f0d4:	pop    edx
  40f0d5:	mov    ch,0xf7
  40f0d7:	or     bh,0x16
  40f0da:	and    al,0x7
  40f0dc:	shl    BYTE PTR [edx+0x35e2a8e8],1
  40f0e2:	jp     0x40f134
  40f0e4:	jmp    0x40f11c
  40f0e6:	or     DWORD PTR [ebx+0x60cd5cd],ebx
  40f0ec:	in     al,dx
  40f0ed:	sahf   
  40f0ee:	jne    0x40f0d3
  40f0f0:	push   ds
  40f0f1:	repnz cmp DWORD PTR [ecx+0x1b],ebp
  40f0f5:	test   eax,0x5aef0018
  40f0fa:	neg    DWORD PTR [esp+edi*4]
  40f0fd:	mov    eax,0xde84d4f2
  40f102:	pop    esi
  40f103:	mov    ds:0x3199c0c1,al
  40f108:	hlt    
  40f109:	je     0x40f0bc
  40f10b:	cmp    DWORD PTR [edx+0x32],edi
  40f10e:	mov    edi,0x1ad28f44
  40f113:	jbe    0x40f125
  40f115:	sub    eax,0xa677a79
  40f11a:	pop    edx
  40f11b:	pop    ds
  40f11c:	aad    0x82
  40f11e:	iret   
  40f11f:	(bad)  
  40f120:	cmp    DWORD PTR [ecx+0x3fec222e],ecx
  40f126:	sar    BYTE PTR [ebp+eax*8-0x45],0xd7
  40f12b:	int    0x43
  40f12d:	lods   al,BYTE PTR ds:[esi]
  40f12e:	sbb    eax,0x54de0bec
  40f133:	cmp    DWORD PTR [edx-0x37],eax
  40f136:	fiadd  WORD PTR ds:0x125b720
  40f13c:	sbb    bh,BYTE PTR [ebx+0x62e460cb]
  40f142:	ins    DWORD PTR es:[edi],dx
  40f143:	pop    esi
  40f144:	aam    0x44
  40f146:	and    DWORD PTR [ebx+0x233aae85],ecx
  40f14c:	mov    bh,0xc5
  40f14e:	dec    edi
  40f14f:	fcmovnu st,st(3)
  40f151:	pushf  
  40f152:	in     al,0xaa
  40f154:	fild   WORD PTR [ebx+ebx*4+0x7a851821]
  40f15b:	rol    dl,0x31
  40f15e:	cmpltps xmm2,xmm3
  40f162:	push   ss
  40f163:	aas    
  40f164:	jns    0x40f17c
  40f166:	lock xchg BYTE PTR [ecx],ah
  40f169:	repz rcr BYTE PTR [edx-0x80],0x27
  40f16e:	xor    eax,0x8eafc2d4
  40f173:	fisttp WORD PTR [eax+0x72]
  40f176:	mov    esp,0x7ddd1f5e
  40f17b:	pop    ecx
  40f17c:	mov    dh,0xb8
  40f17e:	loop   0x40f17e
  40f180:	inc    edi
  40f181:	enter  0xc1ec,0x6e
  40f185:	mov    WORD PTR [ebx],es
  40f187:	popa   
  40f188:	outs   dx,BYTE PTR ds:[esi]
  40f189:	push   es
  40f18a:	mov    dh,0x77
  40f18c:	mov    eax,0x6506fee2
  40f191:	or     edx,DWORD PTR ds:0x751ac444
  40f197:	push   edx
  40f198:	dec    esp
  40f199:	jle    0x40f1b3
  40f19b:	add    DWORD PTR [ecx-0x57408fc4],esi
  40f1a1:	sbb    ah,dh
  40f1a3:	xor    DWORD PTR ds:0xbf2a18ef,0xffffff98
  40f1aa:	inc    edi
  40f1ab:	push   cs
  40f1ac:	(bad)
  40f1b0:	in     al,dx
  40f1b1:	stos   DWORD PTR es:[edi],eax
  40f1b2:	sub    edi,DWORD PTR [esi]
  40f1b4:	ss ret 
  40f1b6:	xor    DWORD PTR [esi],esi
  40f1b8:	or     ecx,DWORD PTR gs:[ecx]
  40f1bb:	and    eax,0x3066f907
  40f1c0:	inc    edi
  40f1c1:	add    BYTE PTR [edi],0xdb
  40f1c4:	cmp    BYTE PTR [eax-0x5a],ch
  40f1c7:	scas   al,BYTE PTR es:[edi]
  40f1c8:	(bad)  
  40f1c9:	pushf  
  40f1ca:	adc    al,0x4
  40f1cc:	bound  ebx,QWORD PTR [edi+0xd]
  40f1cf:	sub    ebp,DWORD PTR [edx-0x133b68f]
  40f1d5:	jl     0x40f1eb
  40f1d7:	bound  esp,QWORD PTR ds:0x7cd7f11c
  40f1dd:	jns    0x40f241
  40f1df:	mov    ds:0xf52b8c24,eax
  40f1e4:	mov    ah,0xd1
  40f1e6:	xchg   esp,eax
  40f1e7:	cmp    esi,ecx
  40f1e9:	and    ebx,eax
  40f1eb:	sbb    al,BYTE PTR ds:0xf1f6ab44
  40f1f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1f2:	pop    esp
  40f1f3:	adc    dl,BYTE PTR [ebp-0x8cefc11]
  40f1f9:	add    ebx,esi
  40f1fb:	adc    cl,BYTE PTR [edx+0x24]
  40f1fe:	mov    al,0x1b
  40f200:	xor    eax,0x38fb3d22
  40f205:	push   ss
  40f206:	in     al,0xfb
  40f208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f209:	inc    edx
  40f20a:	call   0xfcbe:0x29fd4f07
  40f211:	shl    DWORD PTR [ebx*2-0x47de06e2],cl
  40f218:	icebp  
  40f219:	and    DWORD PTR [ebx],edx
  40f21b:	jns    0x40f22f
  40f21d:	(bad)  
  40f21e:	jp     0x40f1c6
  40f220:	cmp    eax,0xaba00cae
  40f225:	xlat   BYTE PTR ds:[ebx]
  40f226:	call   0xa6eaf233
  40f22b:	hlt    
  40f22c:	cdq    
  40f22d:	dec    ebp
  40f22e:	arpl   WORD PTR [esi],ax
  40f230:	cmp    al,0x6a
  40f232:	cmp    al,0x83
  40f234:	inc    ecx
  40f235:	call   DWORD PTR gs:[eax-0x7a]
  40f239:	jbe    0x40f202
  40f23b:	mov    dl,0xef
  40f23d:	push   eax
  40f23e:	ret    0x30fc
  40f241:	push   0x44
  40f243:	in     eax,0xa4
  40f245:	fsub   QWORD PTR [ecx-0x1f]
  40f248:	ret    0x22e
  40f24b:	sar    BYTE PTR [esi+0x6c3d1e3d],cl
  40f251:	push   eax
  40f252:	les    eax,FWORD PTR [ebx]
  40f254:	cmp    ebx,DWORD PTR [edx-0x3f]
  40f257:	pop    ecx
  40f258:	xor    bh,BYTE PTR [ebx]
  40f25a:	xor    eax,0xc532b673
  40f25f:	and    BYTE PTR ds:0x569f81a3,0x92
  40f266:	jmp    0xa7db1cfe
  40f26b:	scas   al,BYTE PTR es:[edi]
  40f26c:	mov    ?,WORD PTR [ebx+0x49]
  40f26f:	and    eax,0xac0bb38
  40f274:	xchg   DWORD PTR [ecx+edi*8],esi
  40f277:	or     BYTE PTR ss:[edx],0xb4
  40f27b:	popf   
  40f27c:	stos   DWORD PTR es:[edi],eax
  40f27d:	into   
  40f27e:	cmp    ecx,DWORD PTR [ebx-0x2aa217b9]
  40f284:	adc    eax,0xd357ac26
  40f289:	aas    
  40f28a:	sub    al,0xd9
  40f28c:	out    0xbb,al
  40f28e:	pop    ss
  40f28f:	mov    ah,0x3e
  40f291:	das    
  40f292:	test   DWORD PTR [ebp+0x2b],edi
  40f295:	xchg   esi,eax
  40f296:	inc    esi
  40f297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f298:	arpl   WORD PTR [esi-0x1678e0a9],di
  40f29e:	add    eax,0x675f6171
  40f2a3:	or     al,0x33
  40f2a5:	add    al,BYTE PTR [eax+0x41]
  40f2a8:	ins    DWORD PTR es:[edi],dx
  40f2a9:	sub    eax,0xa2d9890f
  40f2ae:	sar    DWORD PTR [edi],cl
  40f2b0:	rcl    dl,0xf9
  40f2b3:	sub    BYTE PTR [eax*8-0x7822fd6],bl
  40f2ba:	fs fwait
  40f2bc:	addr16 and esi,0xf02ac8c8
  40f2c3:	pusha  
  40f2c4:	inc    ecx
  40f2c5:	dec    DWORD PTR [esi-0x46]
  40f2c8:	jmp    0x40f274
  40f2ca:	xchg   BYTE PTR [edx+0x26],dl
  40f2cd:	or     al,0x8c
  40f2cf:	push   eax
  40f2d0:	inc    edi
  40f2d1:	ins    DWORD PTR es:[edi],dx
  40f2d2:	div    DWORD PTR [edx-0x7a82dae3]
  40f2d8:	dec    ebx
  40f2d9:	xor    dh,bl
  40f2db:	clc    
  40f2dc:	sub    cl,bl
  40f2de:	xchg   DWORD PTR [ebp-0x5ac1b8df],edx
  40f2e4:	jbe    0x40f2f0
  40f2e6:	sub    dh,BYTE PTR [ecx]
  40f2e8:	or     esi,esi
  40f2ea:	(bad)  
  40f2eb:	push   0x1977d5b0
  40f2f0:	adc    esp,esp
  40f2f2:	icebp  
  40f2f3:	pop    DWORD PTR [eax]
  40f2f5:	mov    al,0x1d
  40f2f7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40f2f9:	pop    esp
  40f2fa:	(bad)  
  40f2fb:	push   ebp
  40f2fc:	popf   
  40f2fd:	call   FWORD PTR [ecx-0x4312ec2b]
  40f303:	inc    edx
  40f304:	mov    ch,0xa4
  40f306:	push   eax
  40f307:	push   esp
  40f308:	cli    
  40f309:	jg     0x40f32d
  40f30b:	pusha  
  40f30c:	jnp    0x40f336
  40f30e:	push   esi
  40f30f:	fldenv [ebx]
  40f311:	(bad)  
  40f312:	sar    DWORD PTR [ebp+0x7],1
  40f315:	mov    bh,0x6e
  40f317:	repnz popf 
  40f319:	sbb    esp,0x5e
  40f31c:	lea    edx,[edx+0x365a1c80]
  40f322:	add    DWORD PTR [ecx],edx
  40f324:	adc    ebx,edx
  40f326:	inc    eax
  40f327:	xchg   DWORD PTR [esi-0x64],esp
  40f32a:	and    eax,0xc430a36
  40f32f:	xor    DWORD PTR [ebx-0x60573af0],esp
  40f335:	cmc    
  40f336:	inc    ecx
  40f337:	scas   eax,DWORD PTR es:[edi]
  40f338:	in     eax,0x74
  40f33a:	jae    0x40f2d4
  40f33c:	jmp    0xba7f89c1
  40f341:	push   edx
  40f342:	mov    esi,DWORD PTR [ebx+0x12]
  40f345:	std    
  40f346:	and    BYTE PTR [edi+edi*2],cl
  40f349:	jmp    0x40f2f8
  40f34b:	mov    eax,ds:0x5999105d
  40f350:	(bad)  
  40f351:	mov    dh,0x21
  40f353:	xchg   ebp,eax
  40f354:	cs not ah
  40f357:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40f359:	aam    0x17
  40f35b:	sub    eax,0x9d2234ad
  40f360:	fdiv   st(2),st
  40f362:	jp     0x40f335
  40f364:	add    bl,BYTE PTR [edi+0x58]
  40f367:	iret   
  40f368:	test   eax,0xbb3acfef
  40f36d:	inc    esi
  40f36e:	sub    ebx,ebx
  40f370:	cmp    ebp,0xffffffa2
  40f373:	cmp    eax,0xaf9290b8
  40f378:	and    dh,BYTE PTR [edi]
  40f37a:	or     BYTE PTR [edx-0x2e],0xf4
  40f37e:	pop    eax
  40f37f:	inc    edx
  40f380:	test   al,0xd8
  40f382:	and    BYTE PTR [eax-0xa],al
  40f385:	mov    al,0xd2
  40f387:	dec    edi
  40f388:	scas   eax,DWORD PTR es:[edi]
  40f389:	int3   
  40f38a:	sbb    al,0x94
  40f38c:	hlt    
  40f38d:	inc    esi
  40f38e:	adc    DWORD PTR [edi+edx*8+0x10],eax
  40f392:	jg     0x40f390
  40f394:	mov    edi,0xef730acd
  40f399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f39a:	adc    BYTE PTR [ecx],cl
  40f39c:	dec    ecx
  40f39d:	ins    BYTE PTR es:[edi],dx
  40f39e:	dec    ebp
  40f39f:	inc    eax
  40f3a0:	adc    dh,BYTE PTR [ecx+0x496ba33]
  40f3a6:	out    dx,al
  40f3a7:	rcr    BYTE PTR [eax-0x64573cec],cl
  40f3ad:	sub    DWORD PTR [ecx-0x5451e2c],0x58ede40e
  40f3b7:	inc    esi
  40f3b8:	xor    DWORD PTR [ebp+0x5d1dc63f],ebp
  40f3be:	hlt    
  40f3bf:	sbb    DWORD PTR [ebp+0x7b],edi
  40f3c2:	cld    
  40f3c3:	addr16 icebp 
  40f3c5:	adc    edx,DWORD PTR [eax]
  40f3c7:	sbb    BYTE PTR [edx+edx*4],al
  40f3ca:	mov    ebp,0x7c8f8061
  40f3cf:	jo     0x40f42e
  40f3d1:	sub    BYTE PTR [edx+0x319a86fa],ah
  40f3d7:	xchg   BYTE PTR [edx-0x652ecce0],dh
  40f3dd:	dec    ebx
  40f3de:	aam    0xd7
  40f3e0:	(bad)  
  40f3e1:	ficom  WORD PTR [esi]
  40f3e3:	pop    ebp
  40f3e4:	hlt    
  40f3e5:	je     0x40f384
  40f3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3e8:	ja     0x40f41c
  40f3ea:	(bad)  
  40f3eb:	cmp    BYTE PTR [ecx-0x12],bh
  40f3ee:	mov    ?,WORD PTR [esi+0x5e3d323a]
  40f3f4:	retf   
  40f3f5:	jecxz  0x40f3f9
  40f3f7:	sbb    eax,0xc0d41de8
  40f3fc:	xchg   BYTE PTR [ebx+0x65],dl
  40f3ff:	das    
  40f400:	sub    eax,0x7f27469f
  40f405:	push   0x684d06b4
  40f40a:	mov    dh,0x56
  40f40c:	mov    fs,esi
  40f40e:	retf   0xd707
  40f411:	xlat   BYTE PTR ds:[ebx]
  40f412:	mov    al,0x2
  40f414:	xor    ax,0xbfe2
  40f418:	or     eax,0xc7a94bc5
  40f41d:	jb     0x40f46b
  40f41f:	inc    ecx
  40f420:	(bad)  
  40f421:	jg     0x40f432
  40f423:	shl    DWORD PTR [ebp+0x6f],0xd7
  40f427:	or     eax,DWORD PTR [eax-0x8]
  40f42a:	add    al,0x18
  40f42c:	or     ebx,0x28376cc1
  40f432:	xor    dh,al
  40f434:	pop    esp
  40f435:	inc    edi
  40f436:	in     al,dx
  40f437:	mov    fs,WORD PTR [esi+ecx*1-0x31]
  40f43b:	call   0x55dd:0x14552a2f
  40f442:	mov    ds:0x9b6dc49d,eax
  40f447:	xchg   ecx,eax
  40f448:	and    bh,BYTE PTR [ecx+0x2d]
  40f44b:	xchg   dl,dl
  40f44d:	cmp    eax,0xf4494a33
  40f452:	cdq    
  40f453:	mov    fs,edx
  40f455:	push   0x9119b929
  40f45a:	test   ch,bh
  40f45c:	mov    ebx,0x97704657
  40f461:	out    0xa8,eax
  40f463:	push   ds
  40f464:	sbb    eax,0x6d6d32cc
  40f469:	and    DWORD PTR [edi+0x10],eax
  40f46c:	jno    0x40f425
  40f46e:	sbb    al,0x22
  40f470:	xchg   edx,eax
  40f471:	retf   
  40f472:	pushf  
  40f473:	add    BYTE PTR [edi-0x1c],bh
  40f476:	jp     0x40f4b2
  40f478:	mov    edi,0x84bed1d3
  40f47d:	fdiv   QWORD PTR [eax+0x2dd27273]
  40f483:	mov    bl,0x74
  40f485:	aaa    
  40f486:	xchg   ebx,eax
  40f487:	scas   al,BYTE PTR es:[edi]
  40f488:	leave  
  40f489:	inc    si
  40f48b:	xchg   ebp,eax
  40f48c:	lahf   
  40f48d:	aaa    
  40f48e:	sbb    al,0xf5
  40f490:	sahf   
  40f491:	loope  0x40f487
  40f493:	mov    ds,WORD PTR [edx]
  40f495:	shl    DWORD PTR [ebx-0x4ed3274f],1
  40f49b:	pop    ebp
  40f49c:	push   cs
  40f49d:	ins    DWORD PTR es:[edi],dx
  40f49e:	jno    0x40f480
  40f4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4a2:	sbb    ebx,DWORD PTR [ebp-0x12]
  40f4a5:	mov    dl,0xe7
  40f4a7:	xchg   esp,eax
  40f4a8:	or     dl,al
  40f4aa:	int    0x84
  40f4ac:	jno    0x40f48c
  40f4ae:	data16 icebp 
  40f4b0:	ss (bad) 
  40f4b2:	push   es
  40f4b3:	scas   eax,DWORD PTR es:[edi]
  40f4b4:	inc    esi
  40f4b5:	jmp    0x66d0:0xb177edcc
  40f4bc:	add    esi,edi
  40f4be:	xor    eax,0xf821aeaa
  40f4c3:	lahf   
  40f4c4:	pop    esi
  40f4c5:	sbb    bh,BYTE PTR [ebp-0x26]
  40f4c8:	int    0xfe
  40f4ca:	nop
  40f4cb:	add    esi,DWORD PTR [ecx]
  40f4cd:	cmp    edi,0xb3b9bf45
  40f4d3:	or     edx,ecx
  40f4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d6:	(bad)  
  40f4d7:	int    0x2b
  40f4d9:	mov    al,fs:0x4aaceea4
  40f4df:	inc    ebx
  40f4e0:	jbe    0x40f4d1
  40f4e2:	stos   DWORD PTR es:[edi],eax
  40f4e3:	jmp    0x5c8294b0
  40f4e8:	jne    0x40f52c
  40f4ea:	pusha  
  40f4eb:	pusha  
  40f4ec:	retf   
  40f4ed:	sub    esp,eax
  40f4ef:	sar    DWORD PTR [edi-0x225225cc],cl
  40f4f5:	or     bl,BYTE PTR [esi+0x78]
  40f4f8:	pop    esp
  40f4f9:	mov    esi,DWORD PTR [eax]
  40f4fb:	dec    esp
  40f4fc:	or     al,0xd8
  40f4fe:	fidivr WORD PTR [ebx]
  40f500:	retf   
  40f501:	jp     0x40f57c
  40f503:	and    ebx,DWORD PTR [esi+0x27]
  40f506:	adc    al,BYTE PTR [edi+0x76]
  40f509:	ss inc edx
  40f50b:	jmp    0x40f51f
  40f50d:	push   0x1e4e028c
  40f512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f513:	aaa    
  40f514:	jmp    0x40f548
  40f516:	adc    dh,BYTE PTR [ecx+0xd]
  40f519:	xor    BYTE PTR [ebx],bh
  40f51b:	js     0x40f510
  40f51d:	scas   eax,DWORD PTR es:[edi]
  40f51e:	lods   eax,DWORD PTR ds:[esi]
  40f51f:	pop    ss
  40f520:	add    BYTE PTR [edx],bh
  40f522:	sub    al,0xf6
  40f525:	stos   BYTE PTR es:[edi],al
  40f526:	or     BYTE PTR [edi],0xa9
  40f529:	(bad)
  40f52c:	inc    edi
  40f52d:	lahf   
  40f52e:	mov    ah,BYTE PTR [ecx]
  40f530:	test   BYTE PTR [edx+0x157c53b2],0x64
  40f537:	inc    esi
  40f538:	add    ecx,DWORD PTR [edi]
  40f53a:	or     eax,0x308c92a2
  40f53f:	jo     0x40f4ff
  40f541:	ins    DWORD PTR es:[edi],dx
  40f542:	in     al,0xc5
  40f544:	sub    edx,edi
  40f546:	sub    ebp,DWORD PTR [esi-0x6e]
  40f549:	mov    esp,0xb998a876
  40f54e:	stc    
  40f54f:	js     0x40f527
  40f551:	jo     0x40f54d
  40f553:	call   0xa69ee512
  40f558:	stos   DWORD PTR es:[edi],eax
  40f559:	sar    edi,cl
  40f55b:	(bad)  
  40f55c:	(bad)  
  40f55d:	std    
  40f55e:	push   eax
  40f55f:	mov    al,ds:0xca81a83a
  40f564:	add    BYTE PTR [edi-0x1616b253],ch
  40f56a:	dec    edi
  40f56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f56c:	shl    BYTE PTR [edi-0x64395553],0x7f
  40f573:	sub    al,0xf0
  40f575:	hlt    
  40f576:	ficomp DWORD PTR [eax]
  40f578:	ins    DWORD PTR es:[edi],dx
  40f579:	shr    DWORD PTR [ebx+0x5e],0xea
  40f57d:	rcl    dl,0x9b
  40f580:	out    0xc9,al
  40f582:	dec    esp
  40f583:	cmp    bh,bl
  40f585:	push   esi
  40f586:	mov    ds:0xa75ce3a,eax
  40f58b:	test   DWORD PTR [ecx],ebx
  40f58d:	adc    eax,0x55644d1a
  40f592:	or     ebp,DWORD PTR [edx+0x1]
  40f595:	add    al,0xd5
  40f597:	mov    fs,WORD PTR [edi]
  40f599:	dec    esp
  40f59a:	push   ecx
  40f59b:	pop    ecx
  40f59c:	push   0x4345d22f
  40f5a1:	(bad)  
  40f5a2:	cmc    
  40f5a3:	ss jo  0x40f585
  40f5a6:	rcl    ebp,0x55
  40f5a9:	jle    0x40f59c
  40f5ab:	add    BYTE PTR [esi+0x5a],0xf3
  40f5af:	test   eax,0x2a959bc0
  40f5b4:	sbb    eax,0xbd13ccb8
  40f5b9:	cmc    
  40f5ba:	pop    ds
  40f5bb:	js     0x40f5fd
  40f5bd:	ins    BYTE PTR es:[edi],dx
  40f5be:	bound  esp,QWORD PTR [ebx+0x26]
  40f5c1:	ror    DWORD PTR [ebp+0x276bf488],cl
  40f5c7:	pop    eax
  40f5c8:	push   ebp
  40f5c9:	sbb    al,0xa9
  40f5cb:	std    
  40f5cc:	adc    eax,0xa7d9ee0d
  40f5d1:	iret   
  40f5d2:	bound  esi,QWORD PTR [edx+esi*4]
  40f5d5:	dec    ebx
  40f5d6:	dec    ebp
  40f5d7:	sub    al,0x91
  40f5d9:	lahf   
  40f5da:	xchg   ebx,eax
  40f5db:	fadd   DWORD PTR [ebx+0x7bcaf6b7]
  40f5e1:	xchg   ebp,eax
  40f5e2:	(bad)  
  40f5e3:	pop    edx
  40f5e4:	jge    0x40f5d4
  40f5e6:	cli    
  40f5e7:	rcl    DWORD PTR [eax],0x39
  40f5ea:	imul   esp,DWORD PTR [bp+0x67af],0x67a898b7
  40f5f3:	fmul   st,st(1)
  40f5f5:	outs   dx,DWORD PTR ds:[esi]
  40f5f6:	and    al,0xde
  40f5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5f9:	hlt    
  40f5fa:	retf   0x6968
  40f5fd:	and    edx,eax
  40f5ff:	pop    ds
  40f600:	leave  
  40f601:	in     eax,0xe9
  40f603:	loopne 0x40f5fc
  40f605:	adc    edx,eax
  40f607:	inc    ebx
  40f608:	inc    edi
  40f609:	pop    eax
  40f60a:	xchg   DWORD PTR [eax-0x3],ecx
  40f60d:	xor    ebp,esi
  40f60f:	fdiv   st(6),st
  40f611:	or     al,0x42
  40f613:	dec    ecx
  40f614:	dec    esi
  40f615:	xchg   esi,eax
  40f616:	xchg   edx,eax
  40f617:	push   ecx
  40f618:	mov    ah,0xa6
  40f61a:	xor    BYTE PTR [ecx-0x2886d628],bh
  40f620:	jg     0x40f68d
  40f622:	dec    eax
  40f623:	mov    al,0x54
  40f625:	sub    ebx,DWORD PTR [esi-0x15249edb]
  40f62b:	lods   al,BYTE PTR ds:[esi]
  40f62c:	adc    al,0x7
  40f62e:	aad    0x53
  40f630:	pop    esi
  40f631:	int3   
  40f632:	fcom   DWORD PTR [edx]
  40f634:	xor    DWORD PTR [edx+0x6f970273],ebp
  40f63a:	gs push edi
  40f63c:	aaa    
  40f63d:	ret    
  40f63e:	pop    ecx
  40f63f:	in     eax,dx
  40f640:	push   ss
  40f641:	push   cs
  40f642:	shl    edi,0x74
  40f645:	mov    ah,0x4d
  40f647:	and    eax,0x1e58f611
  40f64c:	ins    BYTE PTR es:[edi],dx
  40f64d:	cmp    al,0x27
  40f64f:	dec    eax
  40f650:	add    ch,BYTE PTR ds:0x86bd4fea
  40f656:	dec    ebx
  40f657:	in     al,dx
  40f658:	cmp    edi,DWORD PTR ds:0x30d4190f
  40f65e:	frstor [ebp+0x5e264e6c]
  40f664:	mov    DWORD PTR [esp+esi*2],0xbc60f592
  40f66b:	loope  0x40f6e4
  40f66d:	cmc    
  40f66e:	ret    
  40f66f:	aad    0x90
  40f671:	clc    
  40f672:	mov    ecx,0x5185897
  40f677:	push   ebp
  40f678:	popa   
  40f679:	idiv   DWORD PTR [ebp+0x20c3bb06]
  40f67f:	mov    ebx,0x5a9abd49
  40f684:	or     DWORD PTR [ecx],ecx
  40f686:	xchg   ebp,eax
  40f687:	mov    BYTE PTR [esi-0x68],dl
  40f68a:	cmp    edx,ecx
  40f68c:	push   edx
  40f68d:	hlt    
  40f68e:	pusha  
  40f68f:	imul   ecx,DWORD PTR [ebp-0x62],0xbd5d15f
  40f696:	in     al,0xb3
  40f698:	cdq    
  40f699:	fsubr  DWORD PTR [edx-0x579d03d5]
  40f69f:	or     esi,ebp
  40f6a1:	sar    ch,cl
  40f6a3:	mov    dh,BYTE PTR [di]
  40f6a6:	mov    esp,DWORD PTR [bp+di+0x54]
  40f6aa:	leave  
  40f6ab:	mov    es,WORD PTR [esi-0x5440812]
  40f6b1:	jns    0x40f6de
  40f6b3:	pop    ebx
  40f6b4:	ja     0x40f6a6
  40f6b6:	xchg   ebp,eax
  40f6b7:	ret    
  40f6b8:	sub    eax,0x838472c7
  40f6bd:	dec    edx
  40f6be:	dec    ebx
  40f6bf:	mov    bh,BYTE PTR [esi]
  40f6c1:	ja     0x40f6c9
  40f6c3:	mov    al,0x65
  40f6c5:	bound  esi,QWORD PTR [edx]
  40f6c7:	rol    DWORD PTR [edi],cl
  40f6c9:	dec    esp
  40f6ca:	jns    0x40f6a0
  40f6cc:	dec    esi
  40f6cd:	lods   eax,DWORD PTR ds:[esi]
  40f6ce:	nop
  40f6cf:	ret    0x62a1
  40f6d2:	add    ecx,DWORD PTR [eax+0x2]
  40f6d5:	sti    
  40f6d6:	dec    eax
  40f6d7:	adc    BYTE PTR [esi+ebx*4-0x7023e9db],0xc
  40f6df:	sbb    DWORD PTR [esi+0x6a7fab69],ebp
  40f6e5:	fwait
  40f6e6:	loop   0x40f6e8
  40f6e8:	push   ecx
  40f6e9:	inc    esp
  40f6ea:	inc    ebx
  40f6eb:	dec    esp
  40f6ec:	repnz pop ss
  40f6ee:	lods   eax,DWORD PTR ds:[esi]
  40f6ef:	mov    eax,ds:0x9930eb2
  40f6f4:	sti    
  40f6f5:	and    BYTE PTR [eax+edi*8-0x5cf1b05b],al
  40f6fc:	in     eax,0x96
  40f6fe:	sbb    al,0x4a
  40f700:	mov    ch,0xb9
  40f702:	xchg   DWORD PTR [edi+0x47604d40],ecx
  40f708:	dec    eax
  40f709:	div    BYTE PTR [ebx+0x68]
  40f70c:	pop    ds
  40f70d:	jae    0x40f74b
  40f70f:	std    
  40f710:	adc    ch,BYTE PTR [edi-0x6c]
  40f713:	mov    ds:0x77f062e,al
  40f718:	sub    ebx,DWORD PTR ds:0x12ef349f
  40f71e:	xor    ecx,esi
  40f720:	ss dec edi
  40f722:	push   0xf8159975
  40f727:	clc    
  40f728:	into   
  40f729:	sub    DWORD PTR [ecx+0x65],ebp
  40f72c:	fist   DWORD PTR [ebp+0x416e458e]
  40f732:	outs   dx,BYTE PTR ds:[esi]
  40f733:	jo     0x40f737
  40f735:	rol    bh,cl
  40f737:	pop    ds
  40f738:	push   0x17ef5ca1
  40f73d:	dec    ebx
  40f73e:	in     eax,0xcc
  40f740:	inc    ebx
  40f741:	test   eax,0x7bc801e9
  40f746:	mov    al,ds:0x88c8e612
  40f74b:	int    0xbe
  40f74d:	adc    DWORD PTR [ebx-0x3f],0x92e003b5
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0xee75
  41000c:	jne    0x410080
  41000e:	aas    
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	add    DWORD PTR [ebx-0x7c7ca1c2],0xffffff8e
  410017:	jmp    0x41008e
  410019:	ins    BYTE PTR es:[edi],dx
  41001a:	xor    bh,dh
  41001c:	stos   DWORD PTR es:[edi],eax
  41001d:	push   ss
  41001e:	mov    WORD PTR [eax],ds
  410020:	mov    eax,edx
  410022:	jp     0x410072
  410024:	or     BYTE PTR [ebx],dh
  410026:	push   0x33
  410028:	in     eax,dx
  410029:	retf   
  41002a:	cld    
  41002b:	cmp    ebp,eax
  41002d:	ret    
  41002e:	stos   DWORD PTR es:[edi],eax
  41002f:	sbb    eax,0x3669ba9a
  410034:	aaa    
  410035:	in     eax,0x4e
  410037:	jmp    DWORD PTR [eax+0x332f26b0]
  41003d:	cdq    
  41003e:	in     al,0x72
  410040:	mov    ebp,0xc5af9e9e
  410045:	add    ebp,DWORD PTR [esi-0x7bbb8459]
  41004b:	cwde   
  41004c:	jb     0x41007e
  41004e:	mov    edx,0xf719457e
  410053:	retf   
  410054:	and    BYTE PTR cs:[ecx],ch
  410057:	push   ecx
  410058:	sbb    BYTE PTR [ecx-0x4a4632ee],ah
  41005e:	imul   bl
  410060:	pop    edi
  410061:	loop   0x40ffeb
  410063:	repz jo 0x40fff3
  410066:	call   0xcc1a:0xc68d7e91
  41006d:	icebp  
  41006e:	add    DWORD PTR [edx],ebp
  410070:	lea    ecx,[ebx-0x2f]
  410073:	imul   esi,DWORD PTR [ecx-0x20],0xeaf34c9
  41007a:	scas   al,BYTE PTR es:[edi]
  41007b:	out    0x80,al
  41007d:	jo     0x4100d7
  41007f:	stos   BYTE PTR es:[edi],al
  410080:	pop    ds
  410081:	pop    ebp
  410082:	lds    esp,FWORD PTR [esi]
  410084:	mov    ?,WORD PTR [ebx]
  410086:	inc    edx
  410087:	xchg   DWORD PTR [ebx+0x32afa1aa],eax
  41008d:	mov    bh,0x59
  41008f:	jnp    0x410101
  410091:	xchg   edi,eax
  410092:	adc    cl,BYTE PTR [esi+0x1af36b32]
  410098:	mov    esi,0xb1c6b0e6
  41009d:	mov    ch,0xaa
  41009f:	xor    eax,0x19abdd6d
  4100a4:	add    eax,0xb625a06a
  4100a9:	ins    DWORD PTR es:[edi],dx
  4100aa:	fsub   DWORD PTR [eax-0x4d]
  4100ad:	mov    esp,0x4d50453e
  4100b2:	push   0xffffffcd
  4100b4:	imul   edx,DWORD PTR [eax-0x57],0xf6df8b
  4100bb:	ins    BYTE PTR es:[edi],dx
  4100bc:	ja     0x41006e
  4100be:	test   BYTE PTR [ebx+0x6e],cl
  4100c1:	pop    edi
  4100c2:	sbb    al,0xc2
  4100c4:	lock nop
  4100c6:	add    dh,BYTE PTR [edi-0x76]
  4100c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ca:	mov    bl,0x70
  4100cc:	test   BYTE PTR [esp],dl
  4100cf:	sub    eax,0x74f69411
  4100d4:	rcr    ebx,0x97
  4100d7:	mov    ds:0x4e879acc,eax
  4100dc:	(bad)  [ebx+0x4e2a221a]
  4100e2:	mov    ecx,0x38f407fa
  4100e7:	test   BYTE PTR ds:0xb901b96a,dl
  4100ed:	sar    cl,0xfe
  4100f0:	mov    eax,0x6d57de95
  4100f5:	sub    eax,0x96703e37
  4100fa:	stos   BYTE PTR es:[edi],al
  4100fb:	fimul  WORD PTR [edx+edi*2+0x700579a6]
  410102:	loope  0x410105
  410104:	ja     0x41015d
  410106:	sbb    eax,0xcffa5cc3
  41010b:	(bad)  
  41010c:	pop    edx
  41010d:	mov    eax,0xf8d3ac5
  410112:	xchg   ah,ch
  410114:	mov    ebp,0xde772dca
  410119:	mov    ds:0xfbd5c9b8,eax
  41011e:	mov    cl,0xb9
  410121:	stc    
  410122:	cmp    BYTE PTR [edx+0xdea7ab2],dl
  410128:	imul   ebx,DWORD PTR [ebp+esi*8-0x563ac1f9],0x59
  410130:	ret    0x199a
  410133:	adc    eax,0x8db09c9
  410138:	stos   DWORD PTR es:[edi],eax
  410139:	je     0x410197
  41013b:	jmp    0x31edb48d
  410140:	or     edx,esp
  410142:	lods   al,BYTE PTR ds:[esi]
  410143:	xchg   ecx,eax
  410144:	cwd    
  410146:	sahf   
  410147:	mov    edi,0xdd2b8e91
  41014c:	push   cs
  41014d:	(bad)  
  41014e:	in     eax,0x6f
  410150:	dec    edi
  410151:	mov    al,ds:0x8044663
  410156:	aad    0x52
  410158:	mov    al,0x6b
  41015a:	jne    0x410152
  41015c:	mov    esp,0x3ecbb00f
  410161:	mov    eax,0x96af516b
  410166:	jnp    0x410184
  410168:	clc    
  410169:	iret   
  41016a:	ret    0xf539
  41016d:	mov    ds:0xba2ac81a,al
  410172:	lea    ecx,[edx+0x60]
  410175:	dec    ebp
  410176:	pop    ebp
  410177:	pop    ebx
  410178:	rcr    BYTE PTR [esi],cl
  41017a:	sub    DWORD PTR [esi],eax
  41017c:	inc    ecx
  41017d:	stc    
  41017e:	in     al,dx
  41017f:	shl    DWORD PTR [edx],0xde
  410182:	in     eax,0xe4
  410184:	cmp    al,0xb6
  410186:	pop    es
  410187:	test   DWORD PTR [eax+0x4a14a167],edx
  41018d:	test   ah,0x92
  410190:	call   0x5cef:0xc7770379
  410197:	jmp    0x220fb19c
  41019c:	dec    ebx
  41019d:	cmp    esi,edx
  41019f:	mov    dl,ah
  4101a1:	sbb    DWORD PTR [ebx],esp
  4101a3:	push   ds
  4101a4:	pusha  
  4101a5:	(bad)  
  4101a6:	aas    
  4101a7:	pop    ss
  4101a8:	push   eax
  4101a9:	mov    dl,0x73
  4101ab:	cdq    
  4101ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101ad:	pop    ebx
  4101ae:	mov    dl,0x51
  4101b0:	mov    edx,0x4b06aa82
  4101b5:	cmc    
  4101b6:	inc    edx
  4101b7:	(bad)  
  4101b8:	mov    cl,0xe3
  4101ba:	leave  
  4101bb:	push   esi
  4101bc:	lods   al,BYTE PTR ds:[esi]
  4101bd:	sub    dh,dh
  4101bf:	mov    al,0xcb
  4101c1:	js     0x410189
  4101c3:	fwait
  4101c4:	or     al,0x5f
  4101c6:	(bad)  
  4101c7:	push   ecx
  4101c8:	scas   eax,DWORD PTR es:[edi]
  4101c9:	jns    0x41016c
  4101cb:	pop    ecx
  4101cc:	pushf  
  4101cd:	pop    ds
  4101ce:	cmp    ebx,DWORD PTR [edi]
  4101d0:	pop    ebx
  4101d1:	pop    eax
  4101d2:	mov    eax,0xe52f6a2a
  4101d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101d8:	dec    eax
  4101d9:	aas    
  4101da:	in     eax,0xd
  4101dc:	(bad)  
  4101dd:	pop    esp
  4101de:	xchg   edi,eax
  4101df:	sbb    al,ch
  4101e1:	scas   eax,DWORD PTR es:[edi]
  4101e2:	and    al,0xf
  4101e4:	or     BYTE PTR [eax-0x5b],dh
  4101e7:	lds    ebx,FWORD PTR [esi+esi*2+0x4c]
  4101eb:	(bad)  
  4101ed:	outs   dx,DWORD PTR ds:[esi]
  4101ee:	lahf   
  4101ef:	(bad)  
  4101f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101f1:	cmp    ah,BYTE PTR [esi-0x13a1fb64]
  4101f7:	lds    esi,FWORD PTR [ebp+0x232b3c7f]
  4101fd:	inc    esi
  4101fe:	sbb    edx,DWORD PTR [eax]
  410200:	jecxz  0x4101b1
  410202:	aad    0x88
  410204:	pop    eax
  410205:	mov    ch,0x31
  410207:	cmp    eax,0xcc7d831a
  41020c:	or     eax,DWORD PTR [eax-0x43ce06d1]
  410212:	rol    DWORD PTR [edi+0x2d],0x92
  410216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410217:	fwait
  410218:	test   eax,0x919c3ad8
  41021d:	js     0x4101fd
  41021f:	pop    edx
  410220:	retf   
  410221:	push   ecx
  410222:	es stos BYTE PTR es:[edi],al
  410224:	lods   al,BYTE PTR ds:[esi]
  410225:	inc    eax
  410226:	push   ebx
  410227:	push   edx
  410228:	add    BYTE PTR [ebx+0x74],cl
  41022b:	xchg   esi,eax
  41022c:	rcl    DWORD PTR [eax+0x6d],cl
  41022f:	xchg   edx,eax
  410230:	pop    ss
  410231:	and    ah,0xca
  410234:	hlt    
  410235:	addr16 js 0x4101e4
  410238:	cld    
  410239:	das    
  41023a:	or     cl,BYTE PTR [ebx+0x7c5ed99f]
  410240:	outs   dx,DWORD PTR ds:[esi]
  410241:	mov    ds:0x82499fe1,eax
  410246:	(bad)  
  410247:	sbb    esi,eax
  410249:	lock jmp 0xc80e:0xd8da8171
  410251:	leave  
  410252:	dec    edx
  410253:	dec    edi
  410254:	pop    ds
  410255:	cmp    DWORD PTR ds:0x839122ed,edx
  41025b:	shl    BYTE PTR [ecx],0x39
  41025e:	(bad)  
  41025f:	ins    DWORD PTR es:[edi],dx
  410260:	cli    
  410261:	leave  
  410262:	push   ebp
  410263:	inc    esi
  410264:	adc    eax,0xc4a2b279
  410269:	nop
  41026a:	loope  0x410241
  41026c:	int3   
  41026d:	das    
  41026e:	imul   DWORD PTR [ecx]
  410270:	outs   dx,BYTE PTR ds:[esi]
  410271:	xor    dh,BYTE PTR fs:[ebx+ecx*8+0x609cdbf0]
  410279:	or     esp,DWORD PTR ds:0x90d3589b
  41027f:	mov    bh,0xcb
  410281:	push   ecx
  410282:	call   0xc186:0xdaa757e4
  410289:	jmp    0xa162:0x522ad530
  410290:	pushf  
  410291:	mov    al,ds:0xa2ae2246
  410296:	jl     0x41028a
  410298:	xor    bh,ah
  41029a:	repnz xchg ebx,eax
  41029c:	jbe    0x410240
  41029e:	data16 jns 0x4102a4
  4102a1:	xchg   ebx,eax
  4102a2:	imul   ebx,DWORD PTR [eax-0x138df93d],0xccaff6dd
  4102ac:	cmp    DWORD PTR [edi],edx
  4102ae:	cmc    
  4102af:	mov    ah,0xf2
  4102b1:	pop    esi
  4102b2:	adc    eax,0xdb7396c7
  4102b7:	inc    edx
  4102b8:	popf   
  4102b9:	jge    0x4102d4
  4102bb:	test   al,0xc9
  4102bd:	das    
  4102be:	add    al,0xf6
  4102c0:	mov    dh,0x19
  4102c2:	cmp    esi,DWORD PTR es:[bx+si]
  4102c6:	retf   0xb6db
  4102c9:	clc    
  4102ca:	add    eax,0x2af78acf
  4102cf:	or     eax,0xef716232
  4102d4:	adc    cl,bl
  4102d6:	aad    0xf7
  4102d8:	(bad)  
  4102d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102da:	jg     0x410318
  4102dc:	ret    
  4102dd:	mov    ds:0xb74bef70,al
  4102e2:	add    DWORD PTR [ebx-0x4a],esi
  4102e5:	pop    ds
  4102e6:	stc    
  4102e7:	jns    0x4102e2
  4102e9:	in     al,0xee
  4102eb:	and    dh,dh
  4102ed:	jnp    0x410354
  4102ef:	lea    ebx,[ecx-0x2b]
  4102f2:	cld    
  4102f3:	jns    0x4102a6
  4102f5:	xchg   edx,eax
  4102f6:	push   0x98574aac
  4102fb:	(bad)  
  4102fc:	rcl    BYTE PTR [ebx-0x5e5c239a],0x91
  410303:	sbb    BYTE PTR [ebp+0x5269e0a1],cl
  410309:	add    ebp,ebp
  41030b:	xchg   edx,eax
  41030c:	repz inc eax
  41030e:	test   eax,0x8303b9a4
  410314:	cwde   
  410315:	add    eax,0xc8d0948
  41031a:	or     ebx,ecx
  41031c:	jae    0x410386
  41031e:	loopne 0x41030e
  410320:	imul   bl
  410322:	lock sbb BYTE PTR [ecx],dh
  410325:	(bad)  
  410326:	cwde   
  410327:	mov    WORD PTR [eax],ds
  410329:	dec    eax
  41032a:	call   0xc13d2130
  41032f:	fcomp  st(0)
  410331:	jmp    0x410387
  410333:	lods   eax,DWORD PTR ds:[esi]
  410334:	dec    ebp
  410335:	fistp  DWORD PTR [ecx+edx*1-0x5c]
  410339:	adc    esi,edx
  41033b:	push   ds
  41033c:	(bad)
  41033f:	push   eax
  410340:	ret    
  410341:	add    eax,DWORD PTR [esi+0x1fdbe00c]
  410347:	std    
  410348:	fyl2x  
  41034a:	and    eax,0xfffaa2a2
  41034f:	test   eax,0x2e1e5f65
  410354:	add    al,0x4e
  410356:	call   0x577bf7b3
  41035b:	enter  0x97fa,0x6a
  41035f:	fild   WORD PTR [eax+0xd]
  410362:	sub    ebp,DWORD PTR [ecx+0x38e23a28]
  410368:	mov    ds:0xc93321a5,eax
  41036d:	xor    edi,ebp
  41036f:	fsubr  QWORD PTR [eax-0x5e32349d]
  410375:	and    eax,0x47da431f
  41037a:	add    bl,BYTE PTR [esi-0x5c]
  41037d:	inc    ebp
  41037e:	sbb    esp,DWORD PTR [eax-0x7bddc9b2]
  410384:	(bad)  
  410385:	aam    0x43
  410387:	(bad)  
  410388:	or     dh,dh
  41038a:	cmp    DWORD PTR [eax+0xbe31f0d],ecx
  410390:	mov    al,ds:0x360bc780
  410395:	sub    eax,0x792c119d
  41039a:	into   
  41039b:	test   al,0x65
  41039d:	bound  esi,QWORD PTR [ebp-0x6bff1d4e]
  4103a3:	jecxz  0x410351
  4103a5:	sbb    al,0xdb
  4103a7:	xchg   esp,eax
  4103a8:	std    
  4103a9:	mov    eax,ds:0x43f2775a
  4103ae:	mov    al,ds:0xb4b82976
  4103b3:	cwde   
  4103b4:	imul   esp,DWORD PTR [edi+0x77],0xaa1aa671
  4103bb:	adc    DWORD PTR [ebx+0x29],0x2b53708b
  4103c2:	popf   
  4103c3:	jecxz  0x410396
  4103c5:	add    eax,0xbf0f834
  4103ca:	int3   
  4103cb:	inc    edx
  4103cc:	call   0xe909:0xc95aaef5
  4103d3:	std    
  4103d4:	jl     0x410362
  4103d6:	and    al,0x50
  4103d8:	(bad)  
  4103d9:	jge    0x41045a
  4103db:	sbb    dl,BYTE PTR [ebx+0x7ce9379e]
  4103e1:	(bad)  
  4103e2:	ins    DWORD PTR es:[edi],dx
  4103e3:	adc    al,0x7b
  4103e5:	cs (bad) 
  4103e8:	out    dx,eax
  4103e9:	outs   dx,BYTE PTR ds:[esi]
  4103ea:	not    ebx
  4103ec:	jecxz  0x4103a9
  4103ee:	fsub   QWORD PTR [edi-0x44]
  4103f1:	cmp    bl,al
  4103f3:	std    
  4103f4:	psrad  mm5,QWORD PTR [eax-0xf]
  4103f8:	mov    ecx,0x36b0f5a1
  4103fd:	ror    DWORD PTR [ebx+ecx*4-0x39],cl
  410401:	cmc    
  410402:	sahf   
  410403:	int    0xc9
  410405:	inc    edi
  410407:	xchg   esi,eax
  410408:	add    DWORD PTR [esi],edi
  41040a:	or     al,0xac
  41040c:	pop    eax
  41040d:	and    DWORD PTR [ecx],edx
  41040f:	sub    edx,DWORD PTR [ebx+0x7f8eb823]
  410415:	mov    esp,0xf2ccc684
  41041a:	and    ah,al
  41041c:	mov    WORD PTR [esp+eiz*2-0x4ba8953d],es
  410423:	fld    DWORD PTR [edi]
  410425:	sbb    bh,BYTE PTR [ebx-0x1e251ec0]
  41042b:	push   eax
  41042c:	and    DWORD PTR [ebp-0x23866383],edx
  410432:	pop    ss
  410433:	pop    ds
  410434:	gs push ss
  410436:	std    
  410437:	mov    DWORD PTR [ebx-0x2164b445],ecx
  41043d:	jp     0x410413
  41043f:	ins    BYTE PTR es:[edi],dx
  410440:	sub    BYTE PTR [esi+0x442f6201],dl
  410446:	aad    0x25
  410448:	jbe    0x41047b
  41044a:	imul   esp,DWORD PTR [ecx-0x6e03a6b1],0xac72969d
  410454:	aaa    
  410455:	inc    ebx
  410456:	inc    edi
  410457:	(bad)  
  410458:	push   ds
  410459:	xchg   edi,eax
  41045a:	das    
  41045b:	dec    esi
  41045c:	pop    es
  41045d:	cmc    
  41045e:	shl    bh,1
  410460:	cld    
  410461:	retf   
  410462:	sti    
  410463:	(bad)  
  410464:	xchg   ebx,eax
  410465:	jb     0x4104d4
  410467:	ret    
  410468:	xchg   ebx,eax
  410469:	outs   dx,BYTE PTR ds:[esi]
  41046a:	mov    esp,0x2ec1d4d1
  41046f:	ins    BYTE PTR es:[edi],dx
  410470:	into   
  410471:	jmp    0x6578da2d
  410476:	push   eax
  410477:	ret    
  410478:	jl     0x4104a8
  41047a:	and    BYTE PTR [edi-0x2da3a150],cl
  410480:	mov    ds:0x7f79211d,al
  410485:	or     DWORD PTR [ecx],esp
  410487:	dec    eax
  410488:	imul   ecx,DWORD PTR [ebp+ebx*4+0x79],0xb81cf497
  410490:	cmp    DWORD PTR [esi-0x202666b5],edx
  410496:	mov    ds:0xad508d4,eax
  41049b:	daa    
  41049c:	call   0x7edc3c61
  4104a1:	mov    DWORD PTR [esi+0x30ce140b],esi
  4104a7:	leave  
  4104a8:	addr16 dec esp
  4104aa:	pushf  
  4104ab:	push   ebp
  4104ac:	or     DWORD PTR [ecx+0x73167d20],ecx
  4104b2:	not    BYTE PTR [eax-0x25ca131b]
  4104b8:	push   ebp
  4104b9:	enter  0x705c,0xc8
  4104bd:	ja     0x41047e
  4104bf:	fidiv  DWORD PTR [eax]
  4104c1:	push   es
  4104c2:	xchg   ebp,eax
  4104c3:	add    al,0xd1
  4104c5:	sub    ah,BYTE PTR [ecx+0x65]
  4104c8:	pop    ax
  4104ca:	inc    edx
  4104cb:	jmp    0x41044d
  4104cd:	add    BYTE PTR [ecx],bl
  4104cf:	push   edx
  4104d0:	cmc    
  4104d1:	mov    bl,0x9b
  4104d3:	adc    cl,BYTE PTR [ecx]
  4104d5:	cmp    DWORD PTR [esi-0x26],ebx
  4104d8:	sub    eax,0x24ac2c59
  4104dd:	(bad)  
  4104de:	mov    esi,0xad4a7306
  4104e3:	xor    BYTE PTR [ebp+0x47ee91e5],0xbb
  4104ea:	adc    ecx,DWORD PTR [ebp+0x2e]
  4104ed:	lahf   
  4104ee:	fldenv [edx+0x47]
  4104f1:	sub    eax,0x4f3c6155
  4104f6:	in     al,0x90
  4104f8:	push   edi
  4104f9:	daa    
  4104fa:	mov    bl,0x13
  4104fc:	cmc    
  4104fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104fe:	sub    eax,0xae6cc256
  410503:	xchg   edi,eax
  410504:	jb     0x410534
  410506:	dec    edx
  410507:	test   al,0xd2
  410509:	inc    ebp
  41050a:	imul   esi,DWORD PTR [edi+0x1b9d1032],0xc604c854
  410514:	and    DWORD PTR [ebp-0x4c],ebp
  410517:	outs   dx,DWORD PTR ds:[esi]
  410518:	adc    al,0xae
  41051a:	enter  0x1329,0xab
  41051e:	mov    bl,0xd0
  410520:	aam    0xc
  410522:	add    DWORD PTR [esi-0x1f0b398b],0xffffffe2
  410529:	arpl   WORD PTR [eax-0xb],bp
  41052c:	jp     0x41055c
  41052e:	mov    dl,0x58
  410530:	push   es
  410531:	mov    eax,0x44f8fac8
  410536:	outs   dx,DWORD PTR ds:[esi]
  410537:	pop    esp
  410538:	hlt    
  410539:	add    al,0x2b
  41053b:	inc    edi
  41053c:	push   cs
  41053d:	aam    0x7
  41053f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410540:	iret   
  410541:	inc    edi
  410542:	iret   
  410543:	dec    ecx
  410544:	sbb    eax,0x139b09ad
  410549:	dec    esi
  41054a:	mov    bl,0x34
  41054c:	call   0xa9572d44
  410551:	loope  0x410552
  410553:	ret    0x7401
  410556:	aam    0x2e
  410558:	or     ebp,DWORD PTR [eax+0x57]
  41055b:	jae    0x4104e7
  41055d:	int    0xf8
  41055f:	loopne 0x410540
  410561:	arpl   di,si
  410563:	popa   
  410564:	push   edi
  410565:	shr    ch,0xb9
  410568:	sti    
  410569:	arpl   WORD PTR [ecx+eax*8+0x373ba94],dx
  410570:	or     DWORD PTR [esi],0xffffffbe
  410573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410574:	addr16 std 
  410576:	jge    0x4105f7
  410578:	int    0xc6
  41057a:	inc    DWORD PTR ds:0x9c8a90fe
  410580:	mov    edi,esp
  410582:	mov    esi,0x76c79fee
  410587:	repz dec ebx
  410589:	scas   al,BYTE PTR es:[edi]
  41058a:	sub    eax,0x5804efbf
  41058f:	pop    eax
  410590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410591:	dec    edi
  410592:	inc    esp
  410593:	cmp    DWORD PTR [ebx+ebx*1-0x4729d786],ecx
  41059a:	mov    ecx,0x5ef71395
  41059f:	adc    DWORD PTR [edi-0x47373c05],ebx
  4105a5:	mov    al,0xdc
  4105a7:	loop   0x4105e6
  4105a9:	add    ah,cl
  4105ab:	nop
  4105ac:	out    0x9,al
  4105ae:	push   ss
  4105af:	loope  0x41058c
  4105b1:	mov    ecx,0x67637cc4
  4105b6:	pop    eax
  4105b7:	xlat   BYTE PTR ds:[ebx]
  4105b8:	daa    
  4105b9:	and    al,0x7f
  4105bb:	dec    ebx
  4105bc:	add    BYTE PTR [ecx-0x636c2cc2],bl
  4105c2:	lahf   
  4105c3:	pop    es
  4105c4:	in     eax,dx
  4105c5:	bound  esp,QWORD PTR [eax]
  4105c7:	ins    BYTE PTR es:[edi],dx
  4105c8:	add    BYTE PTR [eax+eiz*8+0x2e],cl
  4105cc:	dec    ebp
  4105cd:	lahf   
  4105ce:	inc    ecx
  4105cf:	mov    bl,0x8a
  4105d1:	cs jo  0x4105c4
  4105d4:	and    BYTE PTR fs:[edi],al
  4105d7:	lea    edi,[eax+0x7272bd70]
  4105dd:	jbe    0x410608
  4105df:	fwait
  4105e0:	jmp    0x41065b
  4105e2:	mov    ecx,0xc1b3985c
  4105e7:	stc    
  4105e8:	dec    edi
  4105e9:	dec    edx
  4105ea:	add    eax,0x6fbfc34d
  4105ef:	inc    ecx
  4105f0:	pusha  
  4105f1:	cs popa 
  4105f3:	nop
  4105f4:	pop    ss
  4105f5:	imul   ecx,DWORD PTR [eax],0x9c8300d3
  4105fb:	inc    ecx
  4105fc:	cli    
  4105fd:	arpl   dx,dx
  4105ff:	adc    al,0x62
  410601:	pop    eax
  410602:	dec    edi
  410603:	mov    ds:0xa9d36016,al
  410608:	sbb    eax,0x1f380c62
  41060d:	sub    al,BYTE PTR [ecx-0x32e2162d]
  410613:	sub    BYTE PTR [edx+0x693888c5],0x49
  41061a:	cs mov al,0x55
  41061d:	test   al,0xce
  41061f:	imul   esp,DWORD PTR [ebx-0x7b57857a],0xa5863cd3
  410629:	cdq    
  41062a:	sub    esp,DWORD PTR [eax]
  41062c:	das    
  41062d:	cwde   
  41062e:	adc    ch,ch
  410630:	lods   al,BYTE PTR ds:[esi]
  410631:	sub    cl,bl
  410633:	jmp    0xfa57adb0
  410638:	cmc    
  410639:	jb     0x410695
  41063b:	cs inc ebx
  41063d:	sti    
  41063e:	fcomp  st(1)
  410640:	mov    al,ds:0xebfdc7cd
  410645:	jnp    0x4106b2
  410647:	(bad)  
  410648:	in     al,0x6d
  41064a:	pop    eax
  41064b:	mov    ds:0x44f20104,eax
  410650:	sar    DWORD PTR [esi-0x33],cl
  410653:	jnp    0x41064a
  410655:	into   
  410656:	xor    eax,0xc1ebc279
  41065b:	sbb    BYTE PTR [ecx+0x1a6a6266],ah
  410661:	jmp    0x292f:0xee9b6bfb
  410668:	leave  
  410669:	jg     0x41068b
  41066b:	repnz sub al,0x26
  41066e:	out    dx,al
  41066f:	push   edi
  410670:	xor    BYTE PTR [ebp+0x50],dl
  410673:	sar    DWORD PTR [esp+ebp*1+0x3ffd74ab],1
  41067a:	sub    ah,0x2
  41067d:	fild   WORD PTR [edx+0xbc18988]
  410683:	icebp  
  410684:	sti    
  410685:	mov    al,0x3c
  410687:	adc    eax,DWORD PTR [ebp+0x20321735]
  41068d:	push   ecx
  41068e:	sbb    ah,BYTE PTR [ebp-0x51ab6833]
  410694:	push   eax
  410695:	push   edx
  410696:	pop    ss
  410697:	fcom   st(7)
  410699:	je     0x410643
  41069b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41069c:	fiadd  WORD PTR ds:0x2b84e991
  4106a2:	in     eax,dx
  4106a3:	pop    ecx
  4106a4:	push   0xe7e476af
  4106a9:	bound  esi,QWORD PTR [esi]
  4106ab:	test   eax,0x1197cee9
  4106b0:	sbb    al,0xd
  4106b2:	push   esi
  4106b3:	(bad)  [esi-0x75a29b99]
  4106b9:	mov    eax,ds:0xea17c125
  4106be:	push   0x1160d027
  4106c3:	mov    edx,0xbe943996
  4106c8:	(bad)  
  4106c9:	loop   0x4106b2
  4106cb:	into   
  4106cc:	inc    BYTE PTR cs:[edx]
  4106cf:	dec    DWORD PTR [ebx+ebp*4]
  4106d2:	in     ax,0x57
  4106d5:	and    BYTE PTR [ebp+esi*8-0x3a],bh
  4106d9:	xchg   edx,eax
  4106da:	hlt    
  4106db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106dc:	fmul   st,st(2)
  4106de:	push   ecx
  4106df:	das    
  4106e0:	mov    ebp,ecx
  4106e2:	jle    0x410760
  4106e4:	shl    DWORD PTR [ecx-0x5d2603c6],cl
  4106ea:	mov    dl,0x4d
  4106ec:	(bad)  
  4106ed:	jl     0x4106d5
  4106ef:	popa   
  4106f0:	cld    
  4106f1:	dec    ebp
  4106f2:	mov    ds:0xafa627b2,eax
  4106f7:	sbb    cl,0x64
  4106fa:	cmc    
  4106fb:	sbb    DWORD PTR [esi],esp
  4106fd:	push   cs
  4106fe:	mov    DWORD PTR [edi+0x1413e319],0x578ff423
  410708:	adc    eax,0x134ee2b4
  41070d:	sar    DWORD PTR [ebx],cl
  41070f:	cmc    
  410710:	outs   dx,BYTE PTR ds:[esi]
  410711:	cmp    cl,BYTE PTR ds:0xf8305bf0
  410717:	inc    edi
  410718:	jno    0x4106c9
  41071a:	push   ss
  41071b:	push   ebx
  41071c:	popa   
  41071d:	imul   esi,DWORD PTR [ebx+0x27f3ef9a],0xffffffe1
  410724:	sub    dl,BYTE PTR [ebx]
  410726:	xlat   BYTE PTR ds:[ebx]
  410727:	sahf   
  410728:	jmp    0x8d05:0x495350e7
  41072f:	sbb    eax,0xa0e63333
  410734:	imul   eax,DWORD PTR [ebx-0x58f01138],0x8b6cf670
  41073e:	mov    al,0xc
  410740:	out    dx,al
  410741:	mov    eax,0x40dc1505
  410746:	sbb    DWORD PTR ds:0x8cb65885,edx
  41074c:	xchg   ecx,eax
  41074d:	rol    ebp,cl
  41074f:	mov    ecx,0x9f935d43
  410754:	xchg   esp,eax
  410755:	jns    0x410739
  410757:	jle    0x410718
  410759:	sub    DWORD PTR [eax],esp
  41075b:	dec    ebp
  41075c:	cmp    eax,0xffe74bce
  410761:	jl     0x4107bb
  410763:	aam    0x2d
  410765:	sbb    dl,dh
  410767:	or     eax,0x79287efa
  41076c:	and    ebp,0x72
  41076f:	sbb    bh,ch
  410771:	ins    BYTE PTR es:[edi],dx
  410772:	shl    BYTE PTR [edi],0xed
  410775:	xor    al,0xf7
  410777:	gs cdq 
  410779:	shl    DWORD PTR [esi],0x22
  41077c:	(bad)
  41077f:	aaa    
  410780:	jl     0x41073d
  410782:	cwde   
  410783:	sub    al,0xbd
  410785:	inc    ebp
  410786:	das    
  410787:	out    dx,al
  410788:	hlt    
  410789:	push   edi
  41078a:	mov    eax,ds:0xd1acc2db
  41078f:	ds push edx
  410791:	stos   BYTE PTR es:[edi],al
  410792:	aad    0x6d
  410794:	xor    cl,BYTE PTR [edx+0x49]
  410797:	jne    0x4107dc
  410799:	clc    
  41079a:	jae    0x4107c6
  41079c:	lea    ebp,[ebp+0x4]
  41079f:	(bad)  
  4107a0:	pushf  
  4107a1:	imul   BYTE PTR [edi-0x59]
  4107a4:	dec    esp
  4107a5:	jns    0x4107e0
  4107a7:	push   ds
  4107a8:	inc    BYTE PTR [edx-0x6566aba1]
  4107ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107af:	dec    ebx
  4107b0:	jnp    0x4107c8
  4107b2:	push   cs
  4107b3:	lea    eax,[edx]
  4107b5:	stc    
  4107b6:	lahf   
  4107b7:	es pushf 
  4107b9:	lods   al,BYTE PTR ds:[esi]
  4107ba:	cmp    eax,0xa9667149
  4107bf:	add    ebx,DWORD PTR [esi-0x55]
  4107c2:	pop    eax
  4107c3:	push   cs
  4107c4:	lods   al,BYTE PTR ds:[esi]
  4107c5:	mov    al,ds:0x7328244
  4107ca:	xchg   edi,eax
  4107cb:	sub    BYTE PTR [edx-0x6e442c1b],dh
  4107d1:	cmp    eax,0x441e76e8
  4107d6:	add    al,0xc1
  4107d8:	xor    esi,DWORD PTR ds:0x85035fe6
  4107de:	dec    eax
  4107df:	hlt    
  4107e0:	push   es
  4107e1:	lods   eax,DWORD PTR ds:[esi]
  4107e2:	fadd   QWORD PTR [edi]
  4107e4:	test   BYTE PTR [ebp+0x19a27fc0],cl
  4107ea:	sbb    eax,0x793ef79f
  4107ef:	pop    edi
  4107f0:	xchg   edi,eax
  4107f1:	call   DWORD PTR [ebx]
  4107f3:	out    dx,al
  4107f4:	pop    eax
  4107f5:	xor    al,0x5f
  4107f7:	sub    esi,esp
  4107f9:	jg     0x4107fa
  4107fb:	out    dx,eax
  4107fc:	aaa    
  4107fd:	jmp    0x410785
  4107ff:	mov    eax,0x372cd204
  410804:	pop    edi
  410805:	ror    BYTE PTR [ebp-0x12],cl
  410808:	jno    0x41078c
  41080a:	mov    BYTE PTR [ebx+0x49],dh
  41080d:	(bad)  
  41080e:	fcmovbe st,st(1)
  410810:	cmp    bl,BYTE PTR [ebp-0x4249d257]
  410816:	dec    edi
  410817:	jns    0x4107bf
  410819:	rcr    DWORD PTR [ecx-0x3844bce6],cl
  41081f:	push   eax
  410820:	lea    esp,[edi]
  410822:	mov    al,0x9e
  410824:	mov    edx,0xe23707e6
  410829:	inc    edx
  41082a:	and    esp,DWORD PTR [esi-0x51b0ef2a]
  410830:	and    al,0x3e
  410832:	cmc    
  410833:	retf   
  410834:	mov    ecx,0x7465eeaa
  410839:	jp     0x410832
  41083b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41083c:	sub    DWORD PTR [edi+0x7a7d984d],esp
  410842:	(bad)  
  410843:	data16 add BYTE PTR [ebx+edx*4-0x445e92d9],dl
  41084b:	popf   
  41084c:	mov    bl,0x3c
  41084e:	pop    ebp
  41084f:	pop    esi
  410850:	inc    esp
  410851:	adc    al,al
  410853:	jb     0x410853
  410855:	jno    0x4107fb
  410857:	lock cli 
  410859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41085a:	pushf  
  41085b:	or     BYTE PTR [ebx-0x476076a6],cl
  410861:	push   cs
  410862:	das    
  410863:	add    BYTE PTR [ecx-0xb8a5ba7],bl
  410869:	ret    0xb53e
  41086c:	mov    eax,ds:0x4761fc57
  410871:	and    al,0x22
  410873:	push   0x45
  410875:	pop    edi
  410876:	shl    ch,0xdf
  410879:	inc    esp
  41087a:	push   edx
  41087b:	pop    ds
  41087c:	addr16 sbb bl,al
  41087f:	(bad)  
  410880:	or     dl,ch
  410882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410883:	iret   
  410884:	test   eax,0xc5dcd488
  410889:	adc    DWORD PTR [edi-0x7f520a6b],ebx
  41088f:	test   ecx,0x807d20b4
  410895:	pop    edx
  410896:	jb     0x41090c
  410898:	aam    0x1f
  41089a:	sub    al,0xf2
  41089c:	or     al,ah
  41089e:	(bad)  
  41089f:	sbb    ecx,DWORD PTR [edi]
  4108a1:	pop    esi
  4108a2:	sti    
  4108a3:	sub    eax,0x9bcf58d2
  4108a8:	fisttp QWORD PTR [eax+edi*4+0x44]
  4108ac:	dec    ecx
  4108ad:	in     al,0x34
  4108af:	inc    eax
  4108b0:	push   esp
  4108b1:	mov    DWORD PTR [esi-0x1c37d918],0xa8193365
  4108bb:	rcl    BYTE PTR [esi-0x235154b5],1
  4108c1:	outs   dx,BYTE PTR ds:[esi]
  4108c2:	add    esp,DWORD PTR [eax]
  4108c4:	retf   0x9a47
  4108c7:	leave  
  4108c8:	rol    DWORD PTR [ebx],1
  4108ca:	push   edi
  4108cb:	cwde   
  4108cc:	lods   eax,DWORD PTR ds:[esi]
  4108cd:	out    dx,eax
  4108ce:	add    DWORD PTR [edx],edi
  4108d0:	mov    ch,0xa7
  4108d2:	outs   dx,DWORD PTR ds:[esi]
  4108d3:	push   es
  4108d4:	jge    0x4108a5
  4108d6:	adc    DWORD PTR ds:0x197aee1f,ecx
  4108dc:	shl    edi,1
  4108de:	idiv   DWORD PTR [edi-0x1168be02]
  4108e4:	mov    ah,al
  4108e6:	mov    ds:0x7aa00167,al
  4108eb:	mov    esp,0x87d3c329
  4108f0:	mov    bh,BYTE PTR ds:0xfbc41503
  4108f6:	inc    esp
  4108f7:	out    0xe8,eax
  4108f9:	xor    esp,DWORD PTR [esi-0x213272fc]
  4108ff:	push   esp
  410900:	jl     0x4108f4
  410902:	repnz mov ebx,0x64daf332
  410908:	hlt    
  410909:	xchg   esi,eax
  41090a:	dec    esi
  41090b:	adc    bh,dh
  41090d:	rol    bh,cl
  41090f:	(bad)  
  410910:	clc    
  410911:	pop    edx
  410912:	add    dl,bl
  410914:	out    0x91,eax
  410916:	les    esi,FWORD PTR [esi]
  410918:	adc    al,0x69
  41091a:	inc    esi
  41091b:	sub    DWORD PTR [ebx],esp
  41091d:	ja     0x4108e1
  41091f:	das    
  410920:	pop    ss
  410921:	stc    
  410922:	xchg   ebp,eax
  410923:	cmc    
  410924:	inc    eax
  410925:	outs   dx,DWORD PTR ds:[esi]
  410926:	es xchg ecx,eax
  410928:	loope  0x410904
  41092a:	jno    0x410973
  41092c:	xchg   BYTE PTR [edi-0x7f140af6],al
  410932:	repz jg 0x410963
  410935:	test   ch,bh
  410937:	dec    ecx
  410938:	repnz mov edx,0x30a64b45
  41093e:	lods   eax,DWORD PTR ds:[si]
  410940:	shl    BYTE PTR [edx],0x88
  410943:	mov    BYTE PTR [esi+esi*4+0x33],0xb1
  410948:	imul   BYTE PTR [esp+esi*1-0x6f]
  41094c:	cli    
  41094d:	imul   edi,DWORD PTR [eax-0x72],0xdd9402e
  410954:	ins    BYTE PTR es:[edi],dx
  410955:	fsub   st,st(2)
  410957:	jmp    0x5f6eb2dd
  41095c:	mov    DWORD PTR [eax-0x7e928388],ebx
  410962:	aam    0x1
  410964:	mov    BYTE PTR [eax+0xb],dl
  410967:	mov    ecx,0x68df86c4
  41096c:	mov    ah,0xde
  41096e:	cli    
  41096f:	sahf   
  410970:	aam    0x15
  410972:	mov    esi,0x8dbd8c70
  410977:	jbe    0x410972
  410979:	inc    esp
  41097a:	adc    bh,BYTE PTR [edi]
  41097c:	outs   dx,BYTE PTR ds:[esi]
  41097d:	(bad)  
  41097e:	and    ah,al
  410980:	xor    esi,DWORD PTR [ebx+eiz*1]
  410983:	stos   BYTE PTR es:[edi],al
  410984:	or     BYTE PTR [ecx+0x23eb68fb],ch
  41098a:	loop   0x41096c
  41098c:	push   es
  41098d:	sub    cl,BYTE PTR [edi+0x0]
  410990:	inc    ebp
  410991:	jl     0x410992
  410993:	mov    edx,0xe4713567
  410998:	mov    dl,0x3e
  41099a:	jg     0x410931
  41099c:	jo     0x4109da
  41099e:	(bad)  
  41099f:	push   ebx
  4109a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109a1:	mov    dh,0x75
  4109a3:	mov    esi,0xe46a79a9
  4109a8:	out    dx,eax
  4109a9:	pop    es
  4109aa:	dec    esp
  4109ab:	lods   al,BYTE PTR ds:[esi]
  4109ac:	mov    ebx,0xe6683ef4
  4109b1:	cmc    
  4109b2:	mov    bl,0xd7
  4109b4:	scas   al,BYTE PTR es:[edi]
  4109b5:	sahf   
  4109b6:	adc    BYTE PTR [esi+0x149d05a3],cl
  4109bc:	or     DWORD PTR [ecx],ecx
  4109be:	dec    ebp
  4109bf:	aas    
  4109c0:	push   ebx
  4109c1:	push   0x71698102
  4109c6:	adc    eax,0x3a17981
  4109cb:	push   esp
  4109cc:	imul   edi,DWORD PTR [ecx-0x75],0x47
  4109d0:	cmp    BYTE PTR [edi+0x58],0xca
  4109d4:	out    0x1e,eax
  4109d6:	sahf   
  4109d7:	stc    
  4109d8:	add    al,bl
  4109da:	add    esi,ebp
  4109dc:	ins    DWORD PTR es:[edi],dx
  4109dd:	or     dh,BYTE PTR [ecx+ebx*1]
  4109e0:	or     eax,0x730cc246
  4109e5:	and    eax,0xd29079bf
  4109ea:	outs   dx,DWORD PTR ds:[esi]
  4109eb:	adc    DWORD PTR [ebp-0x49],eax
  4109ee:	test   BYTE PTR [edx-0x3cb02c1a],dl
  4109f4:	xor    edi,esi
  4109f6:	and    DWORD PTR [ecx-0x12],ebp
  4109f9:	dec    esi
  4109fa:	xchg   esp,eax
  4109fb:	sub    eax,0x5c02429a
  410a00:	adc    dl,BYTE PTR [esi+0x51]
  410a03:	add    edi,ebp
  410a05:	pop    esi
  410a06:	outs   dx,BYTE PTR ds:[esi]
  410a07:	fidiv  WORD PTR [edi]
  410a09:	cmovle edx,DWORD PTR [ebx-0x73]
  410a0d:	je     0x4109c8
  410a0f:	push   edi
  410a10:	stc    
  410a11:	xchg   esi,eax
  410a12:	adc    DWORD PTR [eax],ecx
  410a14:	(bad)  
  410a15:	lock popf 
  410a17:	xor    BYTE PTR [esi+eiz*8],al
  410a1a:	xchg   BYTE PTR [esi+esi*2],bl
  410a1d:	pop    eax
  410a1e:	xchg   edi,eax
  410a1f:	outs   dx,BYTE PTR ds:[esi]
  410a20:	sub    cl,BYTE PTR [esi]
  410a22:	mov    bl,0x4e
  410a24:	lahf   
  410a25:	data16 (bad) 
  410a27:	leave  
  410a28:	adc    bh,ah
  410a2a:	mov    BYTE PTR [esi],ch
  410a2c:	mov    bl,0x8d
  410a2e:	mov    dh,0x42
  410a30:	jbe    0x410a3f
  410a32:	xor    BYTE PTR [ebx-0x3a70b857],dl
  410a38:	mov    cs,edx
  410a3a:	xchg   ebp,eax
  410a3b:	shr    BYTE PTR [esi-0x39],cl
  410a3e:	std    
  410a3f:	test   esp,ecx
  410a41:	arpl   WORD PTR [edi+0x531f40d1],bp
  410a47:	stc    
  410a48:	adc    eax,0x511e9d7c
  410a4d:	pop    ebx
  410a4e:	mov    edi,0x39fd348e
  410a53:	jmp    0x6acf:0x7ff21baa
  410a5a:	daa    
  410a5b:	loope  0x410a60
  410a5d:	std    
  410a5e:	lahf   
  410a5f:	jno    0x410a68
  410a61:	fmul   QWORD PTR ds:0x19f57cfe
  410a67:	sbb    eax,0xcc936ac9
  410a6c:	js     0x410a8d
  410a6e:	ins    DWORD PTR es:[edi],dx
  410a6f:	xor    ah,BYTE PTR [ecx+0x7c3a33ff]
  410a75:	ins    DWORD PTR es:[edi],dx
  410a76:	js     0x410a35
  410a78:	pop    ecx
  410a79:	les    edi,FWORD PTR [edi+0x183e1673]
  410a7f:	pop    edi
  410a80:	in     eax,dx
  410a81:	loope  0x410a67
  410a83:	mov    ds:0xca3d383d,al
  410a88:	call   0x1a8ca87b
  410a8d:	cmp    al,bh
  410a8f:	test   eax,0xb03aa42d
  410a94:	pusha  
  410a95:	popa   
  410a96:	inc    esi
  410a97:	jg     0x410a92
  410a99:	je     0x410a95
  410a9b:	fist   DWORD PTR [edi-0x1e]
  410a9e:	ja     0x410aae
  410aa0:	popa   
  410aa1:	xchg   DWORD PTR [ebx+eax*1-0xe786949],edi
  410aa8:	add    eax,0x77a3041a
  410aad:	cdq    
  410aae:	dec    ebp
  410aaf:	lods   eax,DWORD PTR ds:[esi]
  410ab0:	gs cmp ah,al
  410ab3:	aaa    
  410ab4:	ret    0x7dfa
  410ab7:	sbb    esi,DWORD PTR [edi+0x1c]
  410aba:	mov    ss,WORD PTR [edi-0x52]
  410abd:	cmp    eax,0x70a21397
  410ac2:	in     eax,dx
  410ac3:	cli    
  410ac4:	or     al,al
  410ac6:	mov    ecx,DWORD PTR [eax+0x0]
  410ac9:	dec    ebp
  410aca:	ror    BYTE PTR [eax-0x46],cl
  410acd:	push   edx
  410ace:	xchg   ecx,eax
  410acf:	cmp    al,0xcf
  410ad1:	gs inc ecx
  410ad3:	and    al,0x42
  410ad5:	icebp  
  410ad6:	dec    ebp
  410ad7:	bound  edx,QWORD PTR ss:[esi+0x79]
  410adb:	and    al,0xee
  410add:	add    al,0x6c
  410adf:	mov    cl,0xc7
  410ae1:	push   eax
  410ae2:	test   DWORD PTR [esi+0xb78b41a],0x505008b9
  410aec:	and    al,0xf9
  410aee:	aaa    
  410aef:	pop    esp
  410af0:	mov    ds:0xe67432e4,al
  410af5:	outs   dx,DWORD PTR ds:[esi]
  410af6:	inc    ebp
  410af7:	jp     0x410aa8
  410af9:	(bad)  
  410afb:	xchg   BYTE PTR [ecx],cl
  410afd:	(bad)  
  410afe:	pushf  
  410aff:	outs   dx,BYTE PTR ds:[esi]
  410b00:	repz xor al,0xfa
  410b03:	xchg   ebx,edx
  410b05:	cmp    BYTE PTR [ecx+0x49],ch
  410b08:	(bad)  
  410b09:	push   ebx
  410b0a:	adc    eax,DWORD PTR [edi+0xe56a4ab]
  410b10:	add    BYTE PTR [edi],cl
  410b12:	adc    eax,0xb95346f0
  410b17:	fsub   DWORD PTR [ecx+0x25c72496]
  410b1d:	aaa    
  410b1e:	push   ecx
  410b1f:	or     esp,edi
  410b21:	cs push es
  410b23:	outs   dx,BYTE PTR ds:[esi]
  410b24:	mov    esp,0xf06787e0
  410b29:	lds    ebx,FWORD PTR [edi+0x3ff8acfe]
  410b2f:	push   edx
  410b30:	push   ecx
  410b31:	or     ch,BYTE PTR [ebx+0x36b4778d]
  410b37:	xchg   edi,eax
  410b38:	jl     0x410b30
  410b3a:	ins    BYTE PTR es:[edi],dx
  410b3b:	leave  
  410b3c:	add    al,0x78
  410b3e:	xchg   ecx,eax
  410b3f:	cwde   
  410b40:	mov    ch,0x38
  410b42:	les    ebx,FWORD PTR [edx+eax*8+0x7025744]
  410b49:	add    esp,DWORD PTR [esi]
  410b4b:	mov    ch,0xb1
  410b4d:	int3   
  410b4e:	gs dec ebx
  410b50:	mov    bh,0x65
  410b52:	(bad)
  410b57:	(bad)  
  410b58:	aam    0xed
  410b5a:	jg     0x410bba
  410b5c:	sub    dh,ch
  410b5e:	ret    
  410b5f:	fnstsw WORD PTR [eax+edx*4-0x78]
  410b63:	dec    edi
  410b64:	int    0xb8
  410b66:	imul   esp,DWORD PTR [eax+0x4e934c91],0x76
  410b6d:	in     al,dx
  410b6e:	pop    ds
  410b6f:	xchg   ecx,eax
  410b70:	pop    ss
  410b71:	xchg   edi,eax
  410b72:	xor    eax,0x293642c8
  410b77:	repnz into 
  410b79:	adc    cl,al
  410b7b:	cmp    edi,esp
  410b7d:	sbb    eax,0x18b18660
  410b82:	mov    ds:0xb4bddf02,eax
  410b87:	ins    DWORD PTR es:[edi],dx
  410b88:	pop    ds
  410b89:	sub    eax,0x7de34a9d
  410b8e:	or     ecx,0x8
  410b91:	lea    ebp,[edx+0x2b]
  410b94:	cmp    DWORD PTR [edi+0x22be537],eax
  410b9a:	(bad)  
  410b9b:	jle    0x410b9b
  410b9d:	enter  0x223b,0x94
  410ba1:	pusha  
  410ba2:	or     BYTE PTR [edx-0x6c],ch
  410ba5:	push   ebp
  410ba6:	sub    dl,al
  410ba8:	mov    eax,ds:0x5d386d54
  410bad:	push   es
  410bae:	bound  edx,QWORD PTR [eax+0xcbda5e4]
  410bb4:	push   es
  410bb5:	add    ebx,DWORD PTR [edx+0x11c9fbcb]
  410bbb:	shr    DWORD PTR [ebx],0x8
  410bbe:	xor    ch,dh
  410bc0:	inc    edx
  410bc1:	pop    ss
  410bc2:	ds xor bh,bh
  410bc5:	leave  
  410bc6:	add    al,0xe4
  410bc8:	mov    edx,0x27921cf7
  410bcd:	pop    ebx
  410bce:	pop    eax
  410bcf:	mov    ah,BYTE PTR [edi+0x4c68d9e9]
  410bd5:	dec    ebp
  410bd6:	add    al,0x65
  410bd8:	pop    ebp
  410bd9:	(bad)  
  410bdb:	inc    cl
  410bdd:	and    dl,bh
  410bdf:	jnp    0x410c26
  410be1:	je     0x410c5f
  410be3:	fisubr WORD PTR [eax-0x489eb4a]
  410be9:	pop    ebx
  410bea:	xchg   BYTE PTR [edx+0x2dc28a23],cl
  410bf0:	xchg   BYTE PTR [eax+0x656259f7],ah
  410bf6:	add    DWORD PTR [eax-0x1],edx
  410bf9:	push   edx
  410bfa:	repz or ebp,ebp
  410bfd:	and    eax,0xad0e6f9f
  410c02:	add    DWORD PTR [esi],0x6ad75c67
  410c08:	gs jp  0x410c55
  410c0b:	dec    esp
  410c0c:	sub    dl,bl
  410c0e:	cmp    BYTE PTR [ecx+edx*4-0x561f23f2],ah
  410c15:	hlt    
  410c16:	ret    
  410c17:	mov    eax,ds:0xebb73c36
  410c1c:	mov    DWORD PTR [ebx-0x649ad344],0x542caf1
  410c26:	fdiv   QWORD PTR [eax]
  410c28:	mov    DWORD PTR [edi-0x16ebe304],ecx
  410c2e:	inc    eax
  410c2f:	mov    ebx,0xa45ccf92
  410c34:	sbb    BYTE PTR [ebx+0x10],cl
  410c37:	shr    DWORD PTR [ebp+0x748fdbaa],0x4a
  410c3e:	icebp  
  410c3f:	sbb    eax,0xde8fa827
  410c44:	pop    ds
  410c45:	adc    eax,DWORD PTR [esi-0x3b]
  410c48:	xchg   esp,eax
  410c49:	(bad)  
  410c4a:	leave  
  410c4b:	adc    DWORD PTR [eax-0x61],esp
  410c4e:	and    al,0xe6
  410c50:	fimul  WORD PTR [ebp+0x43d755be]
  410c56:	imul   edx,DWORD PTR [edx+ecx*2-0x2ed2da85],0xffffffc7
  410c5e:	pop    ebx
  410c5f:	jno    0x410c8f
  410c61:	lahf   
  410c62:	xchg   ecx,eax
  410c63:	aas    
  410c64:	and    eax,0x783da47
  410c69:	dec    BYTE PTR ds:0x36c700a3
  410c6f:	jo     0x410ca3
  410c71:	mov    eax,0xaa7e3009
  410c76:	iret   
  410c77:	xor    al,0x17
  410c79:	xchg   ebp,eax
  410c7a:	inc    ecx
  410c7b:	icebp  
  410c7c:	xchg   ecx,eax
  410c7d:	sub    cl,ah
  410c7f:	jg     0x410c5d
  410c81:	push   ebx
  410c82:	pop    ss
  410c83:	aas    
  410c84:	ss in  al,0xee
  410c87:	inc    edx
  410c88:	pop    esi
  410c89:	jmp    0x410c39
  410c8b:	jg     0x410c27
  410c8d:	jmp    DWORD PTR ds:0xeb9e67b8
  410c93:	sbb    DWORD PTR [ebp+edx*8+0x6eea2afd],esp
  410c9a:	mov    ch,0x98
  410c9c:	mov    ?,WORD PTR [edx+0x47cd9b9d]
  410ca2:	in     al,dx
  410ca3:	or     BYTE PTR [edi+0x4c7d19ed],dl
  410ca9:	mov    al,ds:0x2e889768
  410cae:	ret    0x4c1e
  410cb1:	or     BYTE PTR [eax-0x74a25c55],0xe6
  410cb8:	or     DWORD PTR [esi],ecx
  410cba:	test   BYTE PTR [ecx-0x6d7b848e],ch
  410cc0:	lds    ecx,FWORD PTR [edi-0x5fa32219]
  410cc6:	adc    BYTE PTR [esi-0x7c],dh
  410cc9:	lea    eax,[ebx]
  410ccb:	sub    DWORD PTR [ebx+eiz*4],esp
  410cce:	push   ss
  410ccf:	imul   ebp,DWORD PTR [esi-0x7e],0x897afc49
  410cd6:	dec    ecx
  410cd7:	push   0xa12ffa42
  410cdc:	das    
  410cdd:	pop    ss
  410cde:	jne    0x410d0b
  410ce0:	jbe    0x410cbc
  410ce2:	retf   
  410ce3:	pop    esp
  410ce4:	jns    0x410d4a
  410ce6:	fcomp  DWORD PTR [eax-0x504c07e4]
  410cec:	stos   DWORD PTR es:[edi],eax
  410ced:	ror    BYTE PTR [esi],1
  410cef:	stos   DWORD PTR es:[edi],eax
  410cf0:	mov    BYTE PTR ds:[ebx+0x10aa100e],ch
  410cf7:	imul   esp,ebx,0x24
  410cfa:	pop    ss
  410cfb:	xchg   esi,eax
  410cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cfd:	mul    edx
  410cff:	lods   al,BYTE PTR ds:[esi]
  410d00:	iret   
  410d01:	aaa    
  410d02:	jmp    0x410ca5
  410d04:	mov    edi,0xb06b2273
  410d09:	push   0x1ef80d8c
  410d0e:	fisub  DWORD PTR [edi]
  410d10:	inc    eax
  410d11:	xchg   esp,eax
  410d12:	jne    0x410ca1
  410d14:	sbb    esp,edx
  410d16:	iret   
  410d17:	xor    BYTE PTR [eax+ebx*1-0x593a6341],0x62
  410d1f:	push   ebx
  410d20:	mov    ch,0xf2
  410d22:	lahf   
  410d23:	mov    ecx,0x2ca2da9c
  410d28:	inc    ebp
  410d29:	push   eax
  410d2a:	mov    dh,0xa2
  410d2c:	inc    ebp
  410d2d:	add    al,0x13
  410d2f:	add    eax,0x65b4870a
  410d34:	dec    ebp
  410d35:	xchg   edx,eax
  410d36:	xchg   ebx,eax
  410d37:	xchg   BYTE PTR [esi],dl
  410d39:	outs   dx,BYTE PTR ds:[esi]
  410d3a:	inc    edi
  410d3b:	or     ebx,DWORD PTR [eax+0x1a]
  410d3e:	sub    ecx,DWORD PTR [edx+0x519716d2]
  410d44:	or     BYTE PTR [edi-0x133f2695],bh
  410d4a:	(bad)  
  410d4c:	adc    BYTE PTR ds:0xa6b73,0x76
  410d53:	(bad)  
  410d54:	push   ebp
  410d55:	loope  0x410d4f
  410d57:	lods   eax,DWORD PTR ds:[esi]
  410d58:	div    BYTE PTR [ecx-0x21]
  410d5b:	bound  ebp,QWORD PTR [ecx+0x2d2e4b72]
  410d61:	leave  
  410d62:	loop   0x410d29
  410d64:	fsubr  DWORD PTR [ebx]
  410d66:	xchg   ebx,eax
  410d67:	stos   BYTE PTR es:[edi],al
  410d68:	push   0x5f931537
  410d6d:	std    
  410d6e:	scas   eax,DWORD PTR es:[edi]
  410d6f:	mov    ah,0x2f
  410d71:	cmp    dh,BYTE PTR [edi+0x28]
  410d74:	inc    BYTE PTR [eax]
  410d76:	jae    0x410d18
  410d78:	adc    BYTE PTR [esi],dh
  410d7a:	leave  
  410d7b:	jae    0x410dea
  410d7d:	mov    eax,0x3460fb5b
  410d82:	push   edi
  410d83:	jnp    0x410d57
  410d85:	push   ss
  410d86:	pop    edx
  410d87:	imul   ecx,eax,0x56d4accb
  410d8d:	inc    edi
  410d8e:	push   esi
  410d8f:	mov    WORD PTR [esi+ecx*2-0x3af923b8],es
  410d96:	(bad)  
  410d97:	fsub   st(1),st
  410d99:	push   ebx
  410d9a:	add    eax,0xa9d7ca7f
  410d9f:	jp     0x410d7c
  410da1:	mov    bl,0x49
  410da3:	pop    esi
  410da4:	mov    al,0x4a
  410da6:	mov    esp,0x67f31b63
  410dab:	mov    edx,0x6f3a1c98
  410db0:	xchg   ecx,eax
  410db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410db2:	lods   al,BYTE PTR ds:[esi]
  410db3:	mov    al,ds:0x5f42ee30
  410db8:	push   ds
  410db9:	push   ss
  410dba:	ret    0xd690
  410dbd:	adc    BYTE PTR [ecx+edx*1+0x35],cl
  410dc1:	sbb    al,0x73
  410dc3:	add    eax,0xd88725a9
  410dc8:	stc    
  410dc9:	and    al,0x50
  410dcb:	sub    BYTE PTR [ebx],bh
  410dcd:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  410dcf:	mov    bl,0xb3
  410dd1:	stos   DWORD PTR es:[edi],eax
  410dd2:	fisubr WORD PTR [eax]
  410dd4:	ins    DWORD PTR es:[edi],dx
  410dd5:	pop    ecx
  410dd6:	inc    esi
  410dd7:	(bad)  
  410dd8:	shl    DWORD PTR [edx-0x2395b6bd],1
  410dde:	test   cl,cl
  410de0:	push   edi
  410de1:	in     eax,dx
  410de2:	cmp    DWORD PTR [ecx+0x6b1ada44],0xde06004
  410dec:	int3   
  410ded:	and    DWORD PTR [ebp-0x35e1d6b0],esi
  410df3:	inc    esi
  410df4:	or     BYTE PTR ds:[ecx+0x43968ddc],bl
  410dfb:	mov    ds:0x9c38ee,al
  410e00:	icebp  
  410e01:	stos   DWORD PTR es:[edi],eax
  410e02:	repz in eax,0xdc
  410e05:	scas   al,BYTE PTR es:[edi]
  410e06:	mov    ecx,0x2c00acb7
  410e0b:	xchg   esp,eax
  410e0c:	fcmovnbe st,st(7)
  410e0e:	jno    0x410e82
  410e10:	(bad)  
  410e11:	fistp  QWORD PTR [edi]
  410e13:	fs sbb eax,edx
  410e16:	mov    ds:0x6de3cc34,eax
  410e1b:	xor    edi,eax
  410e1d:	ror    BYTE PTR [ecx],cl
  410e1f:	adc    DWORD PTR [edx],0xe26071ef
  410e25:	inc    esp
  410e26:	xchg   ecx,eax
  410e27:	xchg   ebx,eax
  410e28:	jbe    0x410e23
  410e2a:	push   ss
  410e2b:	mov    ecx,edx
  410e2d:	daa    
  410e2e:	test   eax,0x6069ffcc
  410e33:	das    
  410e34:	std    
  410e35:	enter  0x9f90,0xd3
  410e39:	cmp    al,0x1b
  410e3b:	sbb    BYTE PTR [edi+esi*2+0x3c],ah
  410e3f:	mov    ebx,edi
  410e41:	enter  0x817f,0x7e
  410e45:	pop    edx
  410e46:	sbb    ah,bh
  410e48:	mov    gs,WORD PTR [esi-0x70]
  410e4b:	(bad)  
  410e4c:	hlt    
  410e4d:	sub    BYTE PTR [edi],dl
  410e4f:	pop    es
  410e50:	and    eax,0xe4cf40bd
  410e55:	mov    ds:0xb1d304b7,al
  410e5a:	ins    DWORD PTR es:[edi],dx
  410e5b:	inc    esi
  410e5c:	ss out dx,al
  410e5e:	out    dx,al
  410e5f:	fwait
  410e60:	les    ebx,FWORD PTR [ebx+0x69edc885]
  410e66:	mov    ah,0x8f
  410e68:	mov    BYTE PTR [ebx+0x8d622c5],dl
  410e6e:	mov    al,0x48
  410e70:	(bad)
  410e73:	fiadd  DWORD PTR [ebx]
  410e75:	lea    edi,[edx]
  410e77:	popa   
  410e78:	sbb    ebx,DWORD PTR [edi]
  410e7a:	jbe    0x410dfd
  410e7c:	cld    
  410e7d:	shr    DWORD PTR [ecx-0x30],0x96
  410e81:	cli    
  410e82:	dec    eax
  410e83:	push   edx
  410e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e85:	mov    edi,0x838350b4
  410e8a:	mov    ah,0x7b
  410e8c:	ror    DWORD PTR [eax-0x8d8086b],1
  410e92:	cmp    ecx,esp
  410e94:	gs jnp 0x410eed
  410e97:	jbe    0x410f0c
  410e99:	(bad)  
  410e9a:	mov    dh,0xa4
  410e9c:	in     eax,0x1c
  410e9e:	jmp    0x410e44
  410ea0:	in     al,dx
  410ea1:	mov    edi,0x154d7b3c
  410ea6:	inc    ebx
  410ea7:	jmp    0xcbc:0x9c5770a5
  410eae:	sub    al,0x81
  410eb0:	jae    0x410eb6
  410eb2:	int3   
  410eb3:	int3   
  410eb4:	cmc    
  410eb5:	std    
  410eb6:	test   DWORD PTR [ecx-0x113d4a09],0x86f482a2
  410ec0:	adc    eax,0x828ed8da
  410ec5:	xchg   DWORD PTR ds:0xe312ff2e,esp
  410ecb:	jae    0x410ecf
  410ecd:	dec    ebx
  410ece:	sub    eax,0xf84c23c7
  410ed3:	cmp    al,0x5e
  410ed5:	daa    
  410ed6:	sbb    DWORD PTR [edx],ecx
  410ed8:	xchg   BYTE PTR [edi],dh
  410eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410edb:	or     al,0x79
  410edd:	rol    ebx,cl
  410edf:	inc    ecx
  410ee0:	pop    ss
  410ee1:	shr    esp,cl
  410ee3:	outs   dx,DWORD PTR ds:[esi]
  410ee4:	sar    BYTE PTR [ecx+0x4d],1
  410ee7:	push   edi
  410ee8:	sahf   
  410ee9:	clc    
  410eea:	pop    ss
  410eeb:	xchg   DWORD PTR [ecx+0x42b2a194],esp
  410ef1:	call   0xec94ea65
  410ef6:	pop    esi
  410ef7:	xor    ebx,DWORD PTR ds:0x1eeaa274
  410efd:	xor    eax,0x4a3fda17
  410f02:	sub    al,0x88
  410f04:	in     eax,dx
  410f05:	sub    DWORD PTR [edx],edx
  410f07:	xchg   edx,eax
  410f08:	dec    eax
  410f09:	xchg   ebp,eax
  410f0a:	jmp    0x3c85:0x667af386
  410f11:	dec    edx
  410f12:	ins    DWORD PTR es:[edi],dx
  410f13:	push   eax
  410f14:	or     DWORD PTR [esi+eiz*1+0x1e052b51],0xffffffd5
  410f1c:	test   BYTE PTR [ebx+0x4b],0x9d
  410f20:	jl     0x410edf
  410f22:	mov    WORD PTR [edx],?
  410f24:	xchg   al,cl
  410f26:	jo     0x410ee1
  410f28:	jno    0x96145664
  410f2e:	leave  
  410f2f:	ret    0x15ee
  410f32:	dec    esp
  410f33:	cmp    eax,0xcca0006c
  410f38:	js     0x410efb
  410f3a:	mov    edx,0xd8ac8c61
  410f3f:	mov    al,0xbd
  410f41:	dec    edi
  410f42:	inc    edx
  410f43:	adc    al,0xd5
  410f45:	enter  0xd696,0xa0
  410f49:	push   esi
  410f4a:	int    0x4d
  410f4c:	stos   DWORD PTR es:[edi],eax
  410f4d:	lods   eax,DWORD PTR ds:[esi]
  410f4e:	fcmovnb st,st(5)
  410f50:	sbb    DWORD PTR [edi+0x29bf57dd],edx
  410f56:	fistp  QWORD PTR [edi+eax*2]
  410f59:	push   cs
  410f5a:	sbb    BYTE PTR [edi-0x3d],ch
  410f5d:	fs cs pop edi
  410f60:	rcl    DWORD PTR [ecx+0x2f],0x1f
  410f64:	fnsave [ecx-0x6db4c0af]
  410f6a:	cli    
  410f6b:	pop    ss
  410f6c:	repz ret 
  410f6e:	mov    esi,0x4cfe9de0
  410f73:	(bad)  
  410f74:	jecxz  0x410fe1
  410f76:	ja     0x410f1a
  410f78:	stc    
  410f79:	retf   0xb810
  410f7c:	js     0x410f32
  410f7e:	mov    ?,WORD PTR [edi-0x5d3e3194]
  410f84:	jns    0x410fa6
  410f86:	fist   WORD PTR [ebx]
  410f88:	pushf  
  410f89:	sub    BYTE PTR [esi],al
  410f8b:	aas    
  410f8c:	jno    0x410f2a
  410f8e:	mov    bl,0x4d
  410f90:	fs out dx,eax
  410f92:	ja     0x410f59
  410f94:	adc    al,0x33
  410f96:	dec    edi
  410f97:	arpl   WORD PTR [ecx],sp
  410f99:	mov    bh,0xae
  410f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f9c:	inc    ecx
  410f9d:	or     ebx,esp
  410f9f:	std    
  410fa0:	sbb    ch,BYTE PTR [eax-0x6c8efa83]
  410fa6:	mov    ebx,DWORD PTR [ecx+0x35]
  410fa9:	imul   esp,ecx,0x6b4ffc8b
  410faf:	sub    eax,edi
  410fb1:	pop    esp
  410fb2:	mov    esi,0x7cff2e6f
  410fb7:	add    eax,edx
  410fb9:	xor    dl,0x8a
  410fbc:	in     eax,dx
  410fbd:	daa    
  410fbe:	inc    eax
  410fbf:	inc    ebp
  410fc0:	retf   
  410fc1:	sub    BYTE PTR [edx-0x399c4d9],ch
  410fc7:	jo     0x410f96
  410fc9:	into   
  410fca:	mov    edi,0xa4efa0b
  410fcf:	or     BYTE PTR [edx],ah
  410fd1:	cld    
  410fd2:	add    eax,0x59e58ab4
  410fd7:	ins    DWORD PTR es:[edi],dx
  410fd8:	dec    BYTE PTR es:[ebx+ebp*1+0x685989ac]
  410fe0:	(bad)  
  410fe1:	popa   
  410fe2:	xor    edx,eax
  410fe4:	xchg   DWORD PTR [edi*2+0x6442c0e4],ecx
  410feb:	int3   
  410fec:	sub    ecx,DWORD PTR [eax]
  410fee:	iret   
  410fef:	adc    al,0xc
  410ff1:	aas    
  410ff2:	pop    ebp
  410ff3:	lods   eax,DWORD PTR ds:[esi]
  410ff4:	lods   al,BYTE PTR ds:[esi]
  410ff5:	add    al,0x4e
  410ff7:	js     0x411020
  410ff9:	mov    ah,0x14
  410ffb:	cmp    edi,DWORD PTR [edx]
  410ffd:	call   0x72efc610
  411002:	(bad)
  411006:	inc    esp
  411007:	es cli 
  411009:	cmp    DWORD PTR [ebp+0xc],esp
  41100c:	and    ch,bh
  41100e:	mov    BYTE PTR [esi+edx*2+0x19c1b6de],dl
  411015:	pop    ds
  411016:	mov    ds:0x2752254e,eax
  41101b:	pushf  
  41101c:	sahf   
  41101d:	jge    0x411016
  41101f:	inc    ebp
  411020:	(bad)
  411023:	mov    cl,0xb3
  411025:	sbb    DWORD PTR [edx+0x57],edi
  411028:	cdq    
  411029:	test   DWORD PTR [edx+ebp*4],esi
  41102c:	int3   
  41102d:	mov    bh,0x0
  41102f:	ins    DWORD PTR es:[edi],dx
  411030:	jb     0x410ffb
  411032:	xchg   ebx,eax
  411033:	or     dh,BYTE PTR [eax-0x3f]
  411036:	les    esi,FWORD PTR [esi-0x2e]
  411039:	inc    esi
  41103a:	fmul   DWORD PTR [esi+eiz*2-0x35]
  41103e:	jbe    0x410fc5
  411040:	ins    DWORD PTR es:[edi],dx
  411041:	jnp    0x41105c
  411043:	sbb    eax,0xca06be21
  411048:	ins    BYTE PTR es:[edi],dx
  411049:	inc    ebp
  41104a:	je     0x41103b
  41104c:	ret    
  41104d:	push   edx
  41104e:	jp     0x410ff9
  411050:	das    
  411051:	cs popf 
  411053:	mov    ebp,0xcf89e97b
  411058:	jmp    0x3dc3f4aa
  41105d:	fistp  DWORD PTR ds:0x5d13b01a
  411063:	xor    eax,0xc611b6fc
  411068:	jo     0x411020
  41106a:	add    eax,0x66505dd8
  41106f:	ja     0x41105d
  411071:	jnp    0x41104d
  411073:	fdivrp st(5),st
  411075:	jp     0x4110b6
  411077:	jg     0x4110c0
  411079:	out    dx,al
  41107a:	xchg   edi,eax
  41107b:	fsub   st,st(6)
  41107d:	cli    
  41107e:	std    
  41107f:	inc    esi
  411080:	leave  
  411081:	loope  0x4110e6
  411083:	and    eax,0x9b804d3d
  411088:	(bad)  
  411089:	shr    dl,cl
  41108b:	dec    esi
  41108c:	sbb    eax,0x28df5870
  411091:	popf   
  411092:	in     eax,dx
  411093:	enter  0x12a5,0x2f
  411097:	dec    ebp
  411098:	adc    al,0x66
  41109a:	test   BYTE PTR [esi],bl
  41109c:	add    esi,DWORD PTR [edx+0x253cae13]
  4110a2:	test   BYTE PTR [edx],al
  4110a4:	jb     0x4110ba
  4110a6:	clc    
  4110a7:	sbb    esi,DWORD PTR [ecx]
  4110a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110aa:	js     0x4110bd
  4110ac:	pop    esp
  4110ad:	cmp    dh,bl
  4110af:	add    al,0x74
  4110b1:	dec    edx
  4110b2:	xor    al,0x4a
  4110b4:	and    eax,0x6ed55278
  4110b9:	int3   
  4110ba:	inc    ebp
  4110bb:	pushf  
  4110bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110bd:	add    esi,DWORD PTR [edx-0x1954de55]
  4110c3:	lods   al,BYTE PTR ds:[esi]
  4110c4:	jo     0x411093
  4110c6:	into   
  4110c7:	sub    DWORD PTR [ebp+eiz*1-0x12343863],0xfffffff9
  4110cf:	mov    ds:0x936e6984,al
  4110d4:	dec    ebp
  4110d5:	cmp    ah,BYTE PTR [edx+0x5e20bfa2]
  4110db:	test   eax,0x8e7b902d
  4110e0:	pop    edx
  4110e1:	es in  al,0xd5
  4110e4:	in     eax,0x4a
  4110e6:	xor    DWORD PTR [ebx],edx
  4110e8:	std    
  4110e9:	jmp    FWORD PTR [ebx+edi*4+0x5]
  4110ed:	arpl   WORD PTR [ecx-0xa],bp
  4110f0:	shl    ecx,cl
  4110f2:	push   ecx
  4110f3:	or     dl,ah
  4110f5:	mov    edx,0xa3775997
  4110fa:	sbb    DWORD PTR [edx+0x72],ecx
  4110fd:	push   edx
  4110fe:	xor    BYTE PTR [ebp+0x32ffb979],dh
  411104:	add    ebp,DWORD PTR [eax]
  411106:	inc    esi
  411107:	movntps XMMWORD PTR [ebx+0x7c],xmm3
  41110b:	add    esi,eax
  41110d:	retf   0xbd24
  411110:	sub    DWORD PTR [esi-0x76d31b16],edi
  411116:	dec    esi
  411117:	(bad)
  41111a:	mov    WORD PTR [eax+0xf4a603f],fs
  411120:	(bad)  
  411121:	sub    eax,0x6f4516d9
  411126:	cmp    bh,BYTE PTR [ecx-0x5c91d002]
  41112c:	sbb    eax,0x7d99a821
  411131:	xchg   esi,eax
  411132:	mov    ebp,0xa52b5b6f
  411137:	cs inc ecx
  411139:	out    0x26,al
  41113b:	arpl   di,di
  41113d:	lock fiadd WORD PTR [edx+0x29033e4f]
  411144:	cwde   
  411145:	add    bl,bl
  411147:	mov    BYTE PTR [ebp-0x7],ah
  41114a:	mov    dh,0x88
  41114c:	inc    esp
  41114d:	mov    al,0xa9
  41114f:	aad    0x46
  411151:	adc    eax,0x1bbd7b31
  411156:	test   DWORD PTR [ebx-0x22dedfc8],esp
  41115c:	loope  0x4110ec
  41115e:	xor    al,0x72
  411160:	mov    dh,cl
  411162:	cmp    al,0x74
  411164:	call   0x18ee:0x5195537d
  41116b:	pusha  
  41116c:	mov    ecx,0x600f52c4
  411171:	xor    BYTE PTR [eax-0x53],al
  411174:	fldenv [edx+ebp*2-0x7d]
  411178:	mov    WORD PTR [edi],ds
  41117a:	push   cs
  41117b:	loope  0x411185
  41117d:	xchg   ebp,eax
  41117e:	and    edi,DWORD PTR [ecx]
  411180:	int    0x96
  411182:	das    
  411183:	hlt    
  411184:	aad    0x89
  411186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411188:	xor    DWORD PTR [ebx],ebp
  41118a:	shl    DWORD PTR [edi-0xc],0x90
  41118e:	sub    eax,0xb527db21
  411193:	outs   dx,BYTE PTR ds:[esi]
  411194:	and    eax,0x11f90fcf
  411199:	ja     0x4111e9
  41119b:	jg     0x411121
  41119d:	push   cs
  41119e:	or     bh,BYTE PTR [ebp+ecx*1+0x4c]
  4111a2:	pop    edx
  4111a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a4:	mov    ebx,0xbb5e193c
  4111a9:	or     ch,BYTE PTR [esi]
  4111ab:	repz out dx,eax
  4111ad:	mov    bl,ch
  4111af:	sbb    edx,esp
  4111b1:	hlt    
  4111b2:	push   eax
  4111b3:	or     al,0x14
  4111b5:	dec    eax
  4111b6:	and    edi,DWORD PTR [ebp+0x72]
  4111b9:	out    dx,eax
  4111ba:	sub    ebx,edi
  4111bc:	or     eax,0x6a6ae98e
  4111c1:	enter  0x5430,0x3d
  4111c5:	loope  0x41117b
  4111c7:	(bad)  
  4111c8:	xor    eax,0x5d5b0490
  4111cd:	lods   al,BYTE PTR ds:[esi]
  4111ce:	stos   DWORD PTR es:[edi],eax
  4111cf:	shrd   ecx,ecx,cl
  4111d2:	fadd   DWORD PTR [esi+edx*1]
  4111d5:	push   ebp
  4111d6:	cdq    
  4111d7:	sbb    edx,DWORD PTR [esi+0x48c7f6a4]
  4111dd:	cs sub edx,0x68
  4111e1:	sub    edi,DWORD PTR [edi+0x4f]
  4111e4:	adc    edx,DWORD PTR ds:[eax-0x76901460]
  4111eb:	out    0xc3,al
  4111ed:	xchg   DWORD PTR [ecx+0xa],edx
  4111f0:	adc    al,al
  4111f2:	or     BYTE PTR [edx],0x58
  4111f5:	popf   
  4111f6:	adc    al,0x45
  4111f8:	js     0x41126c
  4111fa:	ret    
  4111fb:	or     dh,BYTE PTR [edx+0x65a860e2]
  411201:	jbe    0x4111ba
  411203:	(bad)  
  411204:	adc    esi,esp
  411206:	lods   al,BYTE PTR ds:[esi]
  411207:	retf   0x65ab
  41120a:	inc    edx
  41120b:	aaa    
  41120c:	push   esp
  41120d:	lahf   
  41120e:	cmp    DWORD PTR [edi-0x493fd999],esp
  411214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411215:	push   0x55
  411217:	shl    BYTE PTR [edi-0x622469e4],1
  41121d:	in     eax,dx
  41121e:	jbe    0x4111ec
  411220:	mov    ds:0x1938221e,al
  411225:	and    ah,ah
  411227:	jne    0x4111d9
  411229:	ins    BYTE PTR es:[edi],dx
  41122a:	mov    eax,ds:0x911112b2
  41122f:	cmc    
  411230:	out    dx,al
  411231:	int    0x27
  411233:	loope  0x411291
  411235:	(bad)  
  411236:	mov    dh,0x25
  411238:	jmp    0x99cfe76d
  41123d:	push   esp
  41123e:	mov    dl,0x2
  411240:	xor    BYTE PTR [edi+0x345fa25e],cl
  411246:	dec    ecx
  411247:	test   al,0x41
  411249:	inc    ebp
  41124a:	jb     0x41127c
  41124c:	push   esp
  41124d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41124e:	paddusw mm5,mm3
  411251:	psrlw  mm1,QWORD PTR [ecx]
  411254:	adc    al,0xc
  411256:	mov    ecx,0xf0a73dea
  41125b:	in     al,dx
  41125c:	pushf  
  41125d:	adc    ebp,DWORD PTR [esi-0x8]
  411260:	jns    0x4112dd
  411262:	ret    0x6b82
  411265:	js     0x411213
  411267:	xor    al,0xcc
  411269:	mov    dl,0x54
  41126b:	data16 adc dl,cl
  41126e:	inc    ecx
  41126f:	addr16 jmp 0x559dfc4c
  411275:	(bad)  
  411276:	mov    esp,0x699c5110
  41127b:	xchg   esi,eax
  41127c:	aas    
  41127d:	int    0xf9
  41127f:	mov    bl,0xee
  411281:	cmp    al,0xc8
  411283:	push   ss
  411284:	add    DWORD PTR [ebp-0x3a],0x2a
  411288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411289:	push   esp
  41128a:	pop    ebx
  41128b:	in     eax,0x9f
  41128d:	fidivr WORD PTR [ebx]
  41128f:	repnz mov ebx,0x946bf891
  411295:	rol    BYTE PTR [ebx+ecx*8],0x4d
  411299:	pop    edx
  41129a:	cmc    
  41129b:	mov    al,ds:0xb9e61aa0
  4112a0:	pop    ebp
  4112a1:	cdq    
  4112a2:	pop    ds
  4112a3:	xchg   ecx,eax
  4112a4:	pusha  
  4112a5:	and    ch,BYTE PTR [edi]
  4112a7:	call   0xfe8d398c
  4112ac:	cwde   
  4112ad:	or     edi,DWORD PTR [edi-0x6]
  4112b0:	retf   0x6ea0
  4112b3:	jmp    0x4016:0x764b1b29
  4112ba:	popa   
  4112bb:	js     0x411339
  4112bd:	arpl   ax,bp
  4112bf:	lahf   
  4112c0:	fstp   QWORD PTR [esp+ebp*2-0x11]
  4112c4:	call   0xa6ba:0x1603bcf8
  4112cb:	push   ebx
  4112cc:	pop    esi
  4112cd:	inc    esi
  4112ce:	sar    DWORD PTR [ebx-0x4],cl
  4112d1:	in     eax,dx
  4112d2:	in     al,0x2d
  4112d4:	imul   esi,DWORD PTR ds:0xb6fde1db,0xa0bbb6c4
  4112de:	adc    esp,DWORD PTR [ebp+0x3b0b061f]
  4112e4:	pop    DWORD PTR [edi+0x8]
  4112e7:	adc    cl,BYTE PTR [esi-0x1378f0a7]
  4112ed:	and    eax,0x88f5dd40
  4112f2:	xchg   esi,eax
  4112f3:	into   
  4112f4:	fistp  QWORD PTR [edi+0x1c]
  4112f7:	aam    0xdc
  4112f9:	fwait
  4112fa:	push   esp
  4112fb:	mov    ah,0xfc
  4112fd:	push   ds
  4112fe:	jl     0x411349
  411300:	(bad)  
  411301:	mov    edi,0x85fc55cf
  411306:	out    dx,eax
  411307:	jnp    0x41134c
  411309:	stc    
  41130a:	pop    edx
  41130b:	xor    al,0xe6
  41130d:	dec    ebp
  41130e:	adc    al,0x4e
  411310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411311:	sar    BYTE PTR [ebx+eiz*4],0x15
  411315:	pop    ebp
  411316:	retf   0xacdb
  411319:	mov    ebx,0x7cf041bb
  41131e:	push   ebx
  41131f:	add    eax,0xcc8931d2
  411324:	retf   
  411325:	call   0x7309:0x9f8b6ed9
  41132c:	(bad)  
  41132d:	fwait
  41132e:	mov    ebx,0x652d1d8e
  411333:	ins    BYTE PTR es:[edi],dx
  411334:	push   ecx
  411335:	std    
  411336:	mov    ds:0xce1719bb,al
  41133b:	push   cs
  41133c:	fs mov eax,?
  41133f:	repnz mov ds:0xa3334493,ax
  411346:	cwde   
  411347:	sbb    al,0x86
  411349:	sub    ecx,DWORD PTR [ecx]
  41134b:	sahf   
  41134c:	push   esi
  41134d:	mov    bh,0x65
  41134f:	or     BYTE PTR [esi+0x50a18bbc],0x61
  411356:	mov    bl,BYTE PTR [ebx]
  411358:	and    BYTE PTR ds:0xaef094a8,ch
  41135e:	aam    0xcf
  411360:	and    eax,0xea7338a4
  411365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411366:	jb     0x41131f
  411368:	adc    DWORD PTR [esi],ebx
  41136a:	ss mov dh,0x6d
  41136d:	iret   
  41136e:	or     DWORD PTR [edi-0x45],edx
  411371:	inc    edi
  411372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411373:	mov    esi,0x9db5605c
  411378:	inc    edi
  411379:	loope  0x411344
  41137b:	(bad)  
  41137c:	jle    0x4113bd
  41137e:	cs stc 
  411380:	ds mov esp,0x6eed9439
  411386:	xor    al,0x5
  411388:	xchg   edx,eax
  411389:	and    BYTE PTR [edx+0x72ebac18],cl
  41138f:	rcl    esi,0x3f
  411392:	int    0xc9
  411394:	mov    bl,0x1d
  411396:	lock in al,dx
  411398:	dec    edx
  411399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41139a:	stos   DWORD PTR es:[edi],eax
  41139b:	sub    dl,BYTE PTR [ebx+eiz*1]
  41139e:	mov    esi,0xe8d655af
  4113a3:	fdiv   QWORD PTR [ebx]
  4113a5:	test   DWORD PTR [ecx+0xe600e0d],ebx
  4113ab:	mov    ecx,0x3393a3f8
  4113b0:	mov    al,ds:0x19a0b0d0
  4113b5:	gs pop esp
  4113b7:	or     esp,DWORD PTR [ebp-0x7f2a977]
  4113bd:	addr16 cmp esp,edi
  4113c0:	mov    ah,0x60
  4113c2:	and    DWORD PTR [ebp-0x73960d18],edi
  4113c8:	push   0x44
  4113ca:	rcr    al,0x8d
  4113cd:	cld    
  4113ce:	js     0x4113e4
  4113d0:	and    ch,al
  4113d2:	out    0x31,eax
  4113d4:	or     cl,BYTE PTR [eax]
  4113d6:	adc    dh,BYTE PTR [ecx-0x59e6e74]
  4113dc:	mov    dh,0xc8
  4113de:	enter  0x934e,0xcb
  4113e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113e3:	cmp    eax,0x8c5a3c03
  4113e8:	dec    ebp
  4113e9:	in     eax,0xf
  4113eb:	pushf  
  4113ec:	retf   
  4113ed:	sbb    al,0x97
  4113ef:	cmp    eax,0xc5a82372
  4113f4:	ss nop
  4113f6:	dec    esp
  4113f7:	dec    ebx
  4113f8:	xchg   ecx,eax
  4113f9:	push   0x23
  4113fb:	ds loop 0x411478
  4113fe:	jl     0x411453
  411400:	xlat   BYTE PTR ds:[ebx]
  411401:	aas    
  411402:	test   eax,edx
  411404:	ja     0x411431
  411406:	sti    
  411407:	jb     0x4113b8
  411409:	jno    0x4113bd
  41140b:	pop    edi
  41140c:	mov    dh,0x79
  41140e:	push   0x3d
  411410:	and    al,0xc5
  411412:	mov    al,0xb3
  411414:	aaa    
  411415:	jmp    0xa60e:0x5f20a38a
  41141c:	arpl   sp,sp
  41141e:	icebp  
  41141f:	adc    eax,0x6392591b
  411424:	fcom   QWORD PTR [ebx]
  411426:	xchg   ebp,eax
  411427:	dec    ecx
  411428:	add    dh,BYTE PTR [edi+0x6f3ef529]
  41142e:	add    BYTE PTR [edi-0x32],bh
  411431:	sahf   
  411432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411433:	xchg   esp,eax
  411434:	pop    ss
  411435:	les    ebx,FWORD PTR [esi-0x3e8498c5]
  41143b:	add    ebp,esp
  41143d:	and    eax,0xdce78a11
  411442:	jg     0x41145b
  411444:	inc    edi
  411445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411446:	cmp    DWORD PTR [eax-0x79],ecx
  411449:	xor    esi,DWORD PTR [eax-0x12d0bc43]
  41144f:	in     al,0x91
  411451:	push   esp
  411452:	and    eax,0x1e6cd185
  411457:	out    0x2a,eax
  411459:	nop
  41145a:	jmp    0xa399540
  41145f:	sbb    DWORD PTR [edi],ecx
  411461:	push   0xffffff86
  411463:	scas   al,BYTE PTR es:[edi]
  411464:	sub    ah,BYTE PTR [eax]
  411466:	jge    0x41144e
  411468:	sub    eax,0x4c840d49
  41146d:	jbe    0x41147a
  41146f:	add    al,0x78
  411471:	sub    dh,BYTE PTR [edi-0x5530620f]
  411477:	clc    
  411478:	adc    al,0x5c
  41147a:	test   BYTE PTR [edi],0xde
  41147d:	xchg   ecx,eax
  41147e:	mov    al,0xe0
  411480:	push   0x2891594c
  411485:	or     eax,0x49ee1525
  41148a:	jbe    0x4114bc
  41148c:	popa   
  41148d:	call   0x421a1b68
  411492:	fwait
  411493:	dec    esi
  411494:	mov    ecx,0x951b784f
  411499:	adc    eax,DWORD PTR [ecx]
  41149b:	xor    esp,ebx
  41149d:	mov    eax,0x2d66f421
  4114a2:	or     DWORD PTR gs:[ebx],edi
  4114a5:	arpl   WORD PTR [edi],bp
  4114a7:	xchg   ebp,eax
  4114a8:	and    eax,0x2a7e390d
  4114ad:	shl    ch,0xd4
  4114b0:	and    DWORD PTR [ecx-0x67b50c6b],edx
  4114b6:	push   0xa418c0a2
  4114bb:	mov    edx,0x9358bd50
  4114c0:	loop   0x4114b4
  4114c2:	xor    al,0xe5
  4114c4:	dec    esi
  4114c5:	mov    bh,0x29
  4114c7:	cdq    
  4114c8:	fsubrp st(4),st
  4114ca:	xchg   edi,eax
  4114cb:	add    eax,edi
  4114cd:	push   ebp
  4114ce:	je     0x411481
  4114d0:	cmp    bl,BYTE PTR [esi+0x71112315]
  4114d6:	cmc    
  4114d7:	scas   eax,DWORD PTR es:[edi]
  4114d8:	aas    
  4114d9:	push   esi
  4114da:	(bad)  
  4114db:	add    BYTE PTR [ebx+eax*1-0x369d7fc9],0xf5
  4114e3:	mov    edx,0x48a88d76
  4114e8:	inc    edi
  4114e9:	aam    0x26
  4114eb:	(bad)  [ecx]
  4114ed:	pop    ds
  4114ee:	in     al,dx
  4114ef:	mov    esp,0xe5f90d91
  4114f4:	out    dx,eax
  4114f5:	xor    DWORD PTR [ecx+ecx*2-0x450064f5],esi
  4114fc:	fsubr  DWORD PTR [edx-0x46]
  4114ff:	arpl   WORD PTR [eax],dx
  411501:	pop    esp
  411502:	mov    al,ds:0x615b3ae9
  411507:	jmp    0x41153e
  411509:	adc    DWORD PTR [edx-0x5e427507],ebp
  41150f:	jp     0x4114c2
  411511:	push   ecx
  411512:	daa    
  411513:	mov    BYTE PTR [edi-0x45],ah
  411516:	dec    ecx
  411517:	aam    0xcc
  411519:	or     ebp,0x7a
  41151c:	aad    0xfd
  41151e:	stc    
  41151f:	inc    edx
  411520:	loop   0x4114f0
  411522:	dec    edi
  411523:	and    eax,0x7e9d3a2f
  411528:	pop    ds
  411529:	cmc    
  41152a:	int    0xdb
  41152c:	push   ecx
  41152d:	pop    es
  41152e:	jecxz  0x411557
  411530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411531:	and    eax,0x96a2e3d8
  411536:	sbb    DWORD PTR [eax-0x23b1526b],ebx
  41153c:	sub    esp,edi
  41153e:	pop    ds
  41153f:	inc    DWORD PTR [esi+esi*8]
  411542:	push   es
  411543:	retf   0x2402
  411546:	neg    DWORD PTR [edi]
  411548:	fst    QWORD PTR [ecx-0x7d6b990f]
  41154e:	rcr    BYTE PTR ds:0x77f34195,cl
  411554:	xchg   esi,eax
  411555:	loope  0x411579
  411557:	add    BYTE PTR [edx-0x53],bl
  41155a:	sub    edx,eax
  41155c:	sub    al,0xfe
  41155e:	add    BYTE PTR [ecx],bl
  411560:	lds    esi,FWORD PTR [ebp+0x465987c]
  411566:	mov    ecx,0x22443954
  41156b:	mov    esi,0x32ed597
  411570:	mov    esi,0xf737a2da
  411575:	sub    eax,0x69003f99
  41157a:	into   
  41157b:	pop    esp
  41157c:	arpl   WORD PTR [ebp-0x684b9d6f],dx
  411582:	les    eax,FWORD PTR [ebp+0x391b2da1]
  411588:	daa    
  411589:	push   ebx
  41158a:	mov    al,0xf0
  41158c:	call   0xc8df:0xa30dfd67
  411593:	fdiv   DWORD PTR [eax-0x2ab5d182]
  411599:	lea    esi,[esi+0x31f1a566]
  41159f:	call   0x9e32:0xc498da6
  4115a6:	cld    
  4115a7:	dec    ebx
  4115a8:	mov    ds:0x37118209,al
  4115ad:	add    dl,BYTE PTR [esi]
  4115af:	jg     0x41161e
  4115b1:	adc    BYTE PTR [edi-0x19],bl
  4115b4:	sub    eax,0x374d3232
  4115b9:	stos   DWORD PTR es:[edi],eax
  4115ba:	loope  0x411628
  4115bc:	push   0x8d9bd492
  4115c1:	dec    edi
  4115c2:	in     eax,dx
  4115c3:	dec    ebx
  4115c4:	xor    DWORD PTR [esi+0x1a],edi
  4115c7:	test   ch,ch
  4115c9:	ss pop esi
  4115cb:	addr16 pop eax
  4115cd:	sub    BYTE PTR [eax-0x38],dl
  4115d0:	mov    al,ds:0xa3492569
  4115d5:	mov    bh,0xc3
  4115d7:	mov    ebp,DWORD PTR [esi]
  4115d9:	addr16 mov dl,0xf3
  4115dc:	(bad)  
  4115dd:	loop   0x411584
  4115df:	adc    DWORD PTR [esi+0x283f6265],ebp
  4115e5:	dec    ebp
  4115e6:	cwde   
  4115e7:	cmp    eax,0xa3e8c019
  4115ec:	adc    DWORD PTR [ebx+0x29],edi
  4115ef:	ins    DWORD PTR es:[edi],dx
  4115f0:	stc    
  4115f1:	lods   eax,DWORD PTR ds:[esi]
  4115f2:	or     DWORD PTR [esi+0x16],edi
  4115f5:	lea    edi,[eax]
  4115f7:	jle    0x4115d8
  4115f9:	into   
  4115fa:	push   es
  4115fb:	enter  0x2b2c,0x70
  4115ff:	cmp    ecx,ebp
  411601:	inc    ecx
  411602:	sti    
  411603:	push   edi
  411604:	ja     0x4115c2
  411606:	cmp    edi,0xfffffff1
  411609:	out    dx,eax
  41160a:	outs   dx,BYTE PTR ds:[esi]
  41160b:	sbb    al,0x6
  41160d:	cmc    
  41160e:	xchg   ebx,eax
  41160f:	sub    al,BYTE PTR [ecx-0x379c14a]
  411615:	push   0x76dbdddf
  41161a:	sti    
  41161b:	nop
  41161c:	(bad)  
  41161d:	pcmpgtb mm2,QWORD PTR [ebx]
  411620:	push   cs
  411621:	cmp    esp,ecx
  411623:	fldenv [ecx-0xc52064c]
  411629:	loop   0x41167d
  41162b:	(bad)  
  41162c:	cld    
  41162d:	cs pop eax
  41162f:	xchg   esi,eax
  411630:	iret   
  411631:	idiv   DWORD PTR [ebp+0x65]
  411634:	xchg   BYTE PTR [edx-0x2eb33004],dl
  41163a:	jbe    0x4115df
  41163c:	out    dx,al
  41163d:	or     BYTE PTR [ebx-0xb],cl
  411640:	mov    ah,0xe4
  411642:	imul   ecx,DWORD PTR [ecx-0x386e3826],0xffffffa2
  411649:	in     eax,dx
  41164a:	std    
  41164b:	mov    ?,WORD PTR [edx]
  41164d:	inc    edx
  41164e:	cmp    eax,esp
  411650:	imul   esp,DWORD PTR [ebx-0xf973962],0x40
  411657:	bound  ecx,QWORD PTR [ecx+0x1105516e]
  41165d:	pop    ds
  41165e:	sub    dl,BYTE PTR ds:0x41633733
  411664:	xchg   dl,dl
  411666:	cmp    DWORD PTR [edi],0x74a580a9
  41166c:	mov    edi,0x4834fb39
  411671:	ins    BYTE PTR es:[edi],dx
  411672:	(bad)  
  411673:	mov    edx,0x2dde0b84
  411678:	cdq    
  411679:	adc    edi,eax
  41167b:	loopne 0x4116d1
  41167d:	mov    dl,dh
  41167f:	aaa    
  411680:	dec    esi
  411681:	mov    ds:0xc908c4a1,eax
  411686:	fs push cs
  411688:	into   
  411689:	in     eax,0x86
  41168b:	add    bh,dh
  41168d:	push   esp
  41168e:	outs   dx,DWORD PTR ds:[esi]
  41168f:	add    al,0x65
  411691:	rcl    BYTE PTR [esi],1
  411693:	test   al,0xb4
  411695:	add    al,0xd2
  411697:	mov    ebx,0x15613610
  41169c:	out    dx,al
  41169d:	jne    0x41162f
  41169f:	nop
  4116a0:	push   ecx
  4116a1:	popa   
  4116a2:	daa    
  4116a3:	std    
  4116a4:	mov    al,ds:0x4b97d748
  4116a9:	loopne 0x411716
  4116ab:	pop    edx
  4116ac:	cmc    
  4116ad:	dec    esp
  4116ae:	call   0x4fb5:0x68da236f
  4116b5:	jae    0x41164d
  4116b7:	jmp    0x2d81:0xb8e272a8
  4116be:	xor    BYTE PTR [edi+0x1e6707c],dh
  4116c4:	das    
  4116c5:	ret    
  4116c6:	mov    eax,ds:0xed5a1b11
  4116cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116cc:	mov    eax,0x8a447964
  4116d1:	adc    dl,BYTE PTR [edx]
  4116d3:	test   al,0xd5
  4116d5:	mov    dh,0x51
  4116d7:	loop   0x4116d2
  4116d9:	xor    al,0xb7
  4116dc:	sbb    DWORD PTR [ecx-0x4f],edi
  4116df:	xchg   ebx,eax
  4116e0:	inc    ebp
  4116e1:	mov    eax,ds:0xb3be5f66
  4116e6:	in     eax,dx
  4116e7:	cmp    DWORD PTR [ecx],0xffffffa3
  4116ea:	mov    ds:0x5fb43d7a,eax
  4116ef:	inc    ebp
  4116f0:	inc    esp
  4116f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f2:	fstp   QWORD PTR [ebp+0x485c219d]
  4116f8:	clc    
  4116f9:	push   ss
  4116fa:	adc    BYTE PTR [ebx+eax*8+0x64],dl
  4116fe:	iret   
  4116ff:	xchg   BYTE PTR [bp+di+0x33],ch
  411703:	scas   al,BYTE PTR es:[edi]
  411704:	cmp    BYTE PTR [eax],bh
  411706:	jmp    0x411741
  411708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411709:	lods   al,BYTE PTR ds:[esi]
  41170a:	mov    eax,ds:0x4f3b668f
  41170f:	adc    ebx,DWORD PTR [ebx]
  411711:	outs   dx,BYTE PTR ds:[esi]
  411712:	mov    bh,BYTE PTR [eax+0x54ec526a]
  411718:	mov    bh,0x6a
  41171a:	in     al,0x74
  41171c:	pop    edx
  41171d:	inc    ebx
  41171e:	add    bl,bl
  411720:	jge    0x4116a9
  411722:	dec    edx
  411723:	sahf   
  411724:	imul   BYTE PTR ds:0xb6c4b8fc
  41172a:	rol    dh,cl
  41172c:	push   0xffffffb2
  41172e:	or     eax,0x2ba9db60
  411733:	sbb    al,0x24
  411735:	push   ebp
  411736:	mov    eax,ds:0xbe4c7e85
  41173b:	mov    ch,0xfa
  41173d:	mov    esp,0x23d3050c
  411742:	cdq    
  411743:	ins    BYTE PTR es:[edi],dx
  411744:	cdq    
  411745:	rcl    ah,0xb8
  411748:	pop    ecx
  411749:	jmp    0xc34b64e3
  41174e:	mov    cl,0xb9
  411750:	mov    esi,0xd8b92b7b
  411755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411756:	fdivrp st(7),st
  411758:	sub    al,0xc9
  41175a:	(bad)  
  41175b:	fsub   QWORD PTR [edi+0x60af0528]
  411761:	mov    edi,0xec0c6c9
  411766:	fwait
  411767:	sub    al,0xf9
  411769:	ficomp DWORD PTR [eax]
  41176b:	xchg   edx,eax
  41176c:	ins    BYTE PTR es:[edi],dx
  41176d:	mov    bh,0x82
  41176f:	mov    esi,0x11901245
  411774:	add    BYTE PTR [edx-0xd],dl
  411777:	daa    
  411778:	cmp    esp,DWORD PTR [ecx-0x43a59e9e]
  41177e:	aad    0x1
  411780:	aaa    
  411781:	sbb    eax,0x36582626
  411786:	inc    ebx
  411787:	add    DWORD PTR [edx],ebx
  411789:	(bad)  
  41178a:	into   
  41178b:	push   edi
  41178c:	popa   
  41178d:	mov    al,ds:0x3fc1255a
  411792:	xor    BYTE PTR [esp+ecx*8],ch
  411795:	xor    BYTE PTR [ebx-0xb],dl
  411798:	cs pop edx
  41179a:	push   ecx
  41179b:	xor    edx,esp
  41179d:	stc    
  41179e:	fwait
  41179f:	iret   
  4117a0:	add    eax,0x69ca6057
  4117a5:	and    ah,BYTE PTR [ebx-0x2e065896]
  4117ab:	jg     0x41174f
  4117ad:	addr16 pop ss
  4117af:	or     al,0x15
  4117b1:	dec    eax
  4117b2:	data16 aas 
  4117b4:	out    0x44,al
  4117b6:	push   0x63ad4927
  4117bb:	xchg   ebx,eax
  4117bc:	and    BYTE PTR [edx],dl
  4117be:	shl    edi,1
  4117c0:	imul   ecx,DWORD PTR [ebp+0x13b43e16],0xb
  4117c7:	pop    ecx
  4117c8:	mov    ebx,0xdb6c7ef6
  4117cd:	mov    edx,gs
  4117cf:	rcr    BYTE PTR [edi-0x15f63d34],cl
  4117d5:	sbb    BYTE PTR [edi-0x75a3c81c],cl
  4117db:	adc    cl,0x11
  4117de:	sbb    ebp,edx
  4117e0:	sti    
  4117e1:	lock adc dl,BYTE PTR [edx-0x110ee7b0]
  4117e8:	clc    
  4117e9:	sar    DWORD PTR [eax+0x12570e40],1
  4117ef:	sub    eax,0x8e48b131
  4117f4:	jnp    0x411844
  4117f6:	dec    ecx
  4117f7:	ror    DWORD PTR [ecx+0x4a],1
  4117fa:	dec    esi
  4117fb:	push   0x78eda9aa
  411800:	dec    esi
  411801:	fistp  WORD PTR [ebp+ecx*1-0x55]
  411805:	stos   BYTE PTR es:[edi],al
  411806:	inc    eax
  411807:	fucomi st,st(3)
  411809:	aad    0xc3
  41180b:	jns    0x41183b
  41180d:	imul   edx,DWORD PTR [eax+0x6d16490f],0x20
  411814:	jb     0x41187b
  411816:	cld    
  411817:	pop    edi
  411818:	sub    dl,BYTE PTR [esi]
  41181a:	pop    ss
  41181b:	mov    al,ds:0x48ce37d8
  411820:	cmp    ecx,DWORD PTR [edi-0x33183a3f]
  411826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411827:	dec    esi
  411828:	cwde   
  411829:	push   es
  41182a:	cs jmp 0xfb777c5a
  411830:	sti    
  411831:	jl     0x4117dc
  411833:	test   DWORD PTR [edx],ebp
  411835:	xor    BYTE PTR [edx-0x44],0x78
  411839:	pusha  
  41183a:	cmp    esi,DWORD PTR [eax+0xcab0635]
  411840:	jge    0x411884
  411842:	retf   0xf74c
  411845:	jmp    0x4117f6
  411847:	out    dx,al
  411848:	cmp    BYTE PTR [ecx-0x456c746],al
  41184e:	fiadd  DWORD PTR [ecx]
  411850:	loopne 0x411837
  411852:	fwait
  411853:	push   esp
  411854:	pop    ebp
  411855:	inc    eax
  411856:	imul   eax,DWORD PTR [eax],0xffffffbc
  411859:	aaa    
  41185a:	scas   eax,DWORD PTR es:[edi]
  41185b:	ins    BYTE PTR es:[edi],dx
  41185c:	xchg   edi,eax
  41185d:	sub    BYTE PTR [edx-0x47c24c5d],cl
  411863:	mov    eax,0x836cad79
  411868:	and    al,0x2d
  41186a:	add    bl,cl
  41186c:	dec    ebx
  41186d:	xchg   edx,eax
  41186e:	jns    0x411846
  411870:	mov    eax,0x99fe6b9c
  411875:	mov    ebx,0xd2b6803e
  41187a:	mov    cl,0xda
  41187c:	stos   BYTE PTR es:[edi],al
  41187d:	shr    BYTE PTR [eax+0x64],0x8a
  411881:	xor    al,0x62
  411883:	pop    ds
  411884:	xor    DWORD PTR [eax],0xa214846d
  41188a:	cmp    bl,BYTE PTR [edx]
  41188c:	mov    WORD PTR [ebx+0x86a09e2],?
  411892:	sbb    DWORD PTR [ebx+0x14],edx
  411895:	jns    0x411915
  411897:	add    DWORD PTR [edi+0x60],0xffffffd3
  41189b:	out    0xff,eax
  41189d:	push   0xf0c8a047
  4118a2:	push   ecx
  4118a3:	inc    esp
  4118a4:	lods   eax,DWORD PTR ds:[esi]
  4118a5:	adc    ah,BYTE PTR [esi]
  4118a7:	mov    ch,0x99
  4118a9:	out    0x8c,al
  4118ab:	mov    esp,0x6c132753
  4118b0:	cs mov bh,0x99
  4118b3:	push   0x44
  4118b5:	(bad)  
  4118b6:	mov    eax,0x46a17fc2
  4118bb:	jmp    0x4118b6
  4118bd:	fiadd  WORD PTR [esi]
  4118bf:	int3   
  4118c0:	dec    esi
  4118c1:	in     al,0x82
  4118c3:	xlat   BYTE PTR ds:[ebx]
  4118c4:	sbb    cl,BYTE PTR [edi]
  4118c6:	dec    esi
  4118c7:	mov    dh,0x8b
  4118c9:	cmp    al,0x4e
  4118cb:	out    dx,eax
  4118cc:	loop   0x411949
  4118ce:	loop   0x4118bf
  4118d0:	xlat   BYTE PTR fs:[ebx]
  4118d2:	stc    
  4118d3:	scas   eax,DWORD PTR es:[edi]
  4118d4:	push   cs
  4118d5:	std    
  4118d6:	dec    esp
  4118d7:	daa    
  4118d8:	sub    al,BYTE PTR [eax+0x18]
  4118db:	es loope 0x41191c
  4118de:	gs out 0x90,al
  4118e1:	adc    dl,BYTE PTR [edx]
  4118e3:	or     al,0x52
  4118e5:	cmc    
  4118e6:	mov    bl,dh
  4118e8:	mov    ecx,esi
  4118ea:	ds pop ebp
  4118ec:	daa    
  4118ed:	int    0x97
  4118ef:	mov    ch,0xbf
  4118f1:	mov    dh,0x9d
  4118f3:	lea    edx,[eax+0x1a]
  4118f6:	mov    ds:0x9e66e698,al
  4118fb:	rcl    DWORD PTR [edx+edx*4],0xa4
  4118ff:	inc    eax
  411900:	out    dx,al
  411901:	jbe    0x411897
  411903:	inc    ebp
  411904:	jae    0x411971
  411906:	fadd   QWORD PTR [esp+eax*2+0x4d]
  41190a:	xor    DWORD PTR [ebx+0x346ae54a],ecx
  411910:	fcmove st,st(7)
  411912:	inc    ebp
  411913:	test   DWORD PTR [eax+ebp*4],edi
  411916:	ret    0xe100
  411919:	out    dx,al
  41191a:	int3   
  41191b:	sbb    ecx,ebx
  41191d:	dec    edx
  41191e:	jbe    0x41191d
  411920:	hlt    
  411921:	test   al,0x82
  411923:	sti    
  411924:	je     0x4118cd
  411926:	(bad)  
  411927:	cli    
  411928:	jb     0x41199d
  41192a:	fiadd  WORD PTR [edx+0x41]
  41192d:	into   
  41192e:	xchg   edi,eax
  41192f:	mov    ds:0x25b0c804,eax
  411934:	or     al,0x43
  411936:	xchg   BYTE PTR [ebx+0x11],bh
  411939:	sub    DWORD PTR [ebx+0x57fa69ad],eax
  41193f:	out    0x5f,eax
  411941:	mov    esp,0x748aa466
  411946:	repz jns 0x4119b4
  411949:	rol    BYTE PTR [eax+0x3de26bd7],1
  41194f:	push   ebx
  411950:	fist   WORD PTR [ecx-0x74]
  411953:	mov    edx,0xecf87a02
  411958:	clc    
  411959:	add    al,0x9d
  41195b:	mov    eax,0x714d7a67
  411960:	pop    esp
  411961:	sbb    bh,BYTE PTR [eax+ebp*1]
  411964:	call   0x8fa3:0xc36bb2cd
  41196b:	jbe    0x4119e0
  41196d:	out    0x80,eax
  41196f:	retf   
  411970:	xchg   esp,eax
  411971:	fldenv [eax]
  411973:	inc    ebp
  411974:	or     esi,DWORD PTR [ecx+0x68]
  411977:	adc    cl,BYTE PTR [edi-0x24]
  41197a:	lahf   
  41197b:	arpl   WORD PTR [ebx+ebx*2+0x77957a4e],si
  411982:	out    0xe4,eax
  411984:	fcom   st(6)
  411986:	push   eax
  411987:	or     eax,0xcc9dfbed
  41198c:	mov    ah,0xb5
  41198e:	test   eax,0x22828b1b
  411993:	push   ds
  411994:	pop    ss
  411995:	das    
  411996:	mov    ds,WORD PTR [ebx+0x61]
  411999:	and    esi,DWORD PTR ds:0xccab9b36
  41199f:	test   BYTE PTR [edx+ecx*4],dl
  4119a2:	sar    DWORD PTR [ebp+0x491bc9ba],1
  4119a8:	(bad)  
  4119a9:	jmp    0x4119d0
  4119ab:	push   0xffffffea
  4119ad:	ror    BYTE PTR [ecx],0x92
  4119b0:	idiv   DWORD PTR [edx+0x56f4e0c]
  4119b6:	jns    0x4119b5
  4119b8:	adc    BYTE PTR [eax-0x63],bl
  4119bb:	lock sub eax,0x1bc5845c
  4119c1:	adc    ch,bh
  4119c3:	imul   BYTE PTR [ecx]
  4119c5:	xchg   ecx,eax
  4119c6:	cmp    al,0x95
  4119c8:	cld    
  4119c9:	push   es
  4119ca:	cmp    cl,0x8d
  4119cd:	ins    DWORD PTR es:[edi],dx
  4119ce:	push   edx
  4119cf:	pop    ebx
  4119d0:	push   edi
  4119d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d2:	and    BYTE PTR [esp+eax*8+0x49],0x64
  4119d7:	pop    esp
  4119d8:	or     DWORD PTR [eax+0x7775dff6],0x88088c2
  4119e2:	push   ebp
  4119e3:	mov    cl,0x3b
  4119e5:	adc    edi,DWORD PTR [ecx-0x7b]
  4119e8:	pop    ebp
  4119e9:	popa   
  4119ea:	xchg   ebp,eax
  4119eb:	loopne 0x411a5b
  4119ed:	mov    ebp,0x498de84b
  4119f2:	ins    DWORD PTR es:[edi],dx
  4119f3:	gs cmp eax,0xe7253c03
  4119f9:	sub    eax,0x47a71c9a
  4119fe:	mov    cl,0x95
  411a00:	adc    eax,0x4b0a1a75
  411a05:	push   esp
  411a06:	adc    eax,0x1830a4c8
  411a0b:	pushf  
  411a0c:	xor    bh,dh
  411a0e:	test   BYTE PTR [edi],al
  411a10:	dec    esp
  411a11:	add    eax,0x36
  411a14:	scas   al,BYTE PTR es:[edi]
  411a15:	loopne 0x411a5e
  411a17:	es in  al,dx
  411a19:	jl     0x411a86
  411a1b:	pop    edx
  411a1c:	test   DWORD PTR [esp+eiz*2],esi
  411a1f:	adc    ecx,DWORD PTR [edx]
  411a21:	int3   
  411a22:	out    0x67,al
  411a24:	nop
  411a25:	push   esp
  411a26:	fcmovne st,st(4)
  411a28:	jp     0x411a11
  411a2a:	sbb    DWORD PTR [edi-0x6fed3bfa],edi
  411a30:	xchg   edx,eax
  411a31:	(bad)  
  411a32:	call   0x341e:0xdb75069f
  411a39:	sub    eax,0x3a5fe64b
  411a3e:	and    ecx,DWORD PTR [edi-0x789f3462]
  411a44:	and    DWORD PTR [bp+di],esp
  411a47:	imul   ebp,DWORD PTR [ecx+edi*2],0xffffffaf
  411a4b:	(bad)  
  411a4c:	fsubr  QWORD PTR [eax+0x296ff349]
  411a52:	sbb    bl,BYTE PTR [ecx+esi*4]
  411a55:	data16 aas 
  411a57:	retf   0x7589
  411a5a:	adc    edx,0x2
  411a5d:	pop    es
  411a5e:	dec    esi
  411a5f:	je     0x411a70
  411a61:	aas    
  411a62:	lods   eax,DWORD PTR ds:[esi]
  411a63:	adc    al,0xf8
  411a65:	pop    ss
  411a66:	xor    DWORD PTR [edx+0x6a],ebp
  411a69:	addr16 loopne 0x4119f3
  411a6c:	inc    edi
  411a6d:	hlt    
  411a6e:	jne    0x411a63
  411a70:	jmp    0x704997d8
  411a75:	mov    edx,0x60313c78
  411a7a:	fimul  WORD PTR [ecx+0xb]
  411a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a7e:	add    ebx,DWORD PTR [ecx+0x53]
  411a81:	inc    esi
  411a82:	inc    ebp
  411a83:	(bad)  
  411a84:	jo     0x411a1c
  411a86:	sbb    ebp,DWORD PTR [esp+esi*1+0x5eae4139]
  411a8d:	jns    0x411a8e
  411a8f:	test   al,0x8e
  411a91:	or     BYTE PTR [esi],ch
  411a93:	lods   eax,DWORD PTR ds:[esi]
  411a94:	xchg   DWORD PTR [esi+0x1471395c],esi
  411a9a:	or     eax,ebx
  411a9c:	outs   dx,BYTE PTR ds:[esi]
  411a9d:	lds    esi,FWORD PTR [ecx]
  411a9f:	and    eax,0x867f6e20
  411aa4:	ja     0x411a41
  411aa6:	add    esp,DWORD PTR [ebp-0x3a5318d1]
  411aac:	aam    0xf5
  411aae:	outs   dx,BYTE PTR ds:[esi]
  411aaf:	push   0xffffffdd
  411ab1:	shl    BYTE PTR [edi-0x6977ed1b],1
  411ab7:	into   
  411ab8:	int    0xb6
  411aba:	xchg   esi,eax
  411abb:	retf   
  411abc:	sbb    dh,ah
  411abe:	mov    bl,0x9a
  411ac0:	xchg   ebp,eax
  411ac1:	xchg   edx,eax
  411ac2:	leave  
  411ac3:	sub    BYTE PTR [eax+0x3390fc7d],al
  411ac9:	cmp    DWORD PTR [ebx-0x72066a2d],eax
  411acf:	lock inc ebx
  411ad1:	in     eax,0x68
  411ad3:	fdiv   st,st(7)
  411ad5:	lods   al,BYTE PTR ds:[esi]
  411ad6:	enter  0xb621,0x59
  411ada:	scas   al,BYTE PTR es:[edi]
  411adb:	outs   dx,DWORD PTR ds:[esi]
  411adc:	test   DWORD PTR [edi+0x6e],eax
  411adf:	out    0xaf,al
  411ae1:	aad    0xa8
  411ae3:	jbe    0x411a73
  411ae5:	xor    al,0x15
  411ae7:	push   edx
  411ae8:	sbb    al,0xd2
  411aea:	xor    al,0x33
  411aec:	mov    esi,0xb81b8aa9
  411af1:	xchg   edx,eax
  411af2:	mov    al,0x3b
  411af4:	mov    ah,0x90
  411af6:	popa   
  411af7:	jmp    0xcf1f:0x663430e5
  411afe:	sub    eax,0xd206347d
  411b03:	push   esi
  411b04:	or     cl,bh
  411b06:	iret   
  411b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b08:	mov    eax,ds:0x32c102d2
  411b0d:	cmp    BYTE PTR [edx],cl
  411b0f:	sbb    cl,BYTE PTR [ebp+0xc]
  411b12:	je     0x411adb
  411b14:	mov    edx,0x316f0cad
  411b19:	rol    ch,1
  411b1b:	jno    0x411b50
  411b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b1e:	xchg   ebx,eax
  411b1f:	out    dx,al
  411b20:	adc    edi,DWORD PTR [ecx]
  411b22:	loop   0x411adf
  411b24:	pop    edx
  411b25:	pop    ecx
  411b26:	mov    ecx,0xd8158db6
  411b2b:	adc    BYTE PTR [edi-0x3db16163],0x8
  411b32:	mov    dh,0xbb
  411b34:	cmp    al,0xb
  411b36:	xchg   esp,eax
  411b37:	jns    0x411ab9
  411b39:	jg     0x411b82
  411b3b:	inc    edx
  411b3c:	rol    DWORD PTR [eax+ecx*4],1
  411b3f:	std    
  411b40:	adc    al,0x4c
  411b42:	adc    BYTE PTR [eax-0x57],al
  411b45:	fild   QWORD PTR [ecx+0x40c71375]
  411b4b:	xor    al,0x4
  411b4d:	or     ah,0x4c
  411b50:	inc    esp
  411b51:	ror    BYTE PTR [ebx-0x72],1
  411b54:	xchg   ecx,eax
  411b55:	jge    0x411b7e
  411b57:	aam    0xae
  411b59:	in     eax,dx
  411b5a:	call   0x49601e27
  411b5f:	xchg   edx,eax
  411b60:	inc    ecx
  411b61:	daa    
  411b62:	inc    esi
  411b63:	pop    edx
  411b64:	cli    
  411b65:	pop    ebx
  411b66:	add    eax,0x533d9845
  411b6b:	test   cl,0x62
  411b6e:	aam    0xb3
  411b70:	push   ecx
  411b72:	push   ss
  411b73:	std    
  411b74:	push   ebp
  411b75:	adc    DWORD PTR [ecx+0x7b],eax
  411b78:	cwde   
  411b79:	and    BYTE PTR [eax-0x343044e0],cl
  411b7f:	or     al,0x9e
  411b81:	add    eax,0x812e678e
  411b86:	daa    
  411b87:	sub    al,0xa
  411b89:	sbb    DWORD PTR [eax+ebp*4-0x7],eax
  411b8d:	daa    
  411b8e:	jne    0x411bc1
  411b90:	push   cs
  411b91:	pop    eax
  411b92:	les    esi,FWORD PTR [ecx]
  411b94:	call   0x251b1905
  411b99:	loope  0x411b81
  411b9b:	ja     0x411b33
  411b9d:	ds out dx,al
  411b9f:	mov    ds:0x733905be,al
  411ba4:	sub    eax,0xfa4f9984
  411ba9:	fcmovnbe st,st(2)
  411bab:	pop    ss
  411bac:	aad    0xa5
  411bae:	or     DWORD PTR ss:[esi+edi*2+0x5ca9f5e1],edx
  411bb6:	data16 arpl WORD PTR [ebp-0x6a2f9721],bp
  411bbd:	cmp    al,0xe5
  411bbf:	or     ah,BYTE PTR [edi]
  411bc1:	cmp    BYTE PTR [eax],dh
  411bc3:	in     eax,0xaf
  411bc5:	push   ebx
  411bc6:	pop    ds
  411bc7:	popf   
  411bc8:	fcomp  QWORD PTR [ecx]
  411bca:	and    BYTE PTR [esi-0x8],bh
  411bcd:	aaa    
  411bce:	loop   0x411be6
  411bd0:	repz (bad) 
  411bd2:	fdiv   st,st(7)
  411bd4:	into   
  411bd5:	or     BYTE PTR ds:0x7ce27c80,bl
  411bdb:	fld    TBYTE PTR [ebx-0x30]
  411bde:	ds dec ebp
  411be0:	mov    ds:0x406ce507,eax
  411be5:	rol    dl,0x5d
  411be8:	or     dh,dl
  411bea:	xor    BYTE PTR [edi+0x71f03c31],ah
  411bf0:	adc    BYTE PTR [ecx+0x17df6963],dl
  411bf6:	sub    eax,0x44f13066
  411bfb:	sbb    DWORD PTR [edx+0x6b],edi
  411bfe:	sbb    al,ah
  411c00:	push   es
  411c01:	add    BYTE PTR ds:0xb800857a,al
  411c07:	xor    eax,0xb4a3e591
  411c0c:	mov    bh,0x61
  411c0e:	(bad)  [eax+0x5a632df2]
  411c14:	mov    ecx,0x6df6503a
  411c19:	sbb    DWORD PTR [ebp-0x53],edx
  411c1c:	xchg   edi,ebx
  411c1e:	adc    BYTE PTR [edi-0x24],bl
  411c21:	mov    bh,0x33
  411c23:	sub    eax,0xeb893d99
  411c28:	jno    0x411c26
  411c2a:	ins    BYTE PTR es:[edi],dx
  411c2b:	ss mov eax,0xfcdcbf2f
  411c31:	mov    al,ds:0xbcf1b528
  411c36:	add    al,0x8c
  411c38:	push   ecx
  411c39:	and    BYTE PTR [ebp+ecx*4+0x1cc678ab],dl
  411c40:	cmovge edx,DWORD PTR [eax+eax*8-0x8b7a4b2]
  411c48:	mov    al,0x15
  411c4a:	(bad)  
  411c4c:	sbb    BYTE PTR [edx+0x16],dl
  411c4f:	arpl   WORD PTR [edi],bp
  411c51:	and    eax,0x64cc7c48
  411c56:	dec    esi
  411c57:	jno    0x411c12
  411c59:	add    esp,DWORD PTR [ebx+ebp*4-0x7e4ba0e]
  411c60:	fwait
  411c61:	bound  eax,QWORD PTR ds:0xc6108592
  411c67:	mov    ah,BYTE PTR [ecx]
  411c69:	retf   
  411c6a:	push   esi
  411c6b:	iret   
  411c6c:	dec    esi
  411c6d:	mov    bl,0x3f
  411c6f:	sub    BYTE PTR [eax+edi*8+0x1],dl
  411c73:	in     eax,dx
  411c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c75:	neg    BYTE PTR [esi]
  411c77:	mov    ebp,0x6d54f954
  411c7c:	pop    ebp
  411c7d:	cwde   
  411c7e:	mov    ebx,0xcbb426fe
  411c83:	add    DWORD PTR [ecx+0x10352e0a],esp
  411c89:	pop    ebx
  411c8a:	mov    ch,BYTE PTR [ebp-0x54e34597]
  411c90:	inc    ebx
  411c91:	push   es
  411c92:	(bad)  
  411c93:	stc    
  411c94:	dec    ebx
  411c95:	pop    edx
  411c96:	loopne 0x411c96
  411c98:	inc    ebp
  411c99:	lods   eax,DWORD PTR ds:[esi]
  411c9a:	add    ebp,edi
  411c9c:	mov    ah,0xc
  411c9e:	mov    bh,0x7b
  411ca0:	dec    esi
  411ca1:	adc    bl,al
  411ca3:	ror    BYTE PTR [esi-0x5f8c0dc9],1
  411ca9:	push   ds
  411caa:	push   ebx
  411cab:	in     al,0xb1
  411cad:	sub    esp,DWORD PTR [ebx]
  411caf:	es dec esp
  411cb1:	xor    ecx,DWORD PTR [edx-0x79]
  411cb4:	and    DWORD PTR [eax+0x67f383f6],eax
  411cba:	xchg   ebp,eax
  411cbb:	jmp    0x63ab:0x3e90d0cd
  411cc2:	fild   DWORD PTR [ebx]
  411cc4:	(bad)  
  411cc6:	pop    eax
  411cc7:	adc    ebx,ebp
  411cc9:	xchg   DWORD PTR [ecx-0x7d7c78f6],ecx
  411ccf:	out    0x21,al
  411cd1:	inc    ecx
  411cd2:	pop    ss
  411cd3:	imul   esi,DWORD PTR [eax+ebp*2+0x525e1bfa],0xd579c9f5
  411cde:	sbb    ah,BYTE PTR ds:[eax-0x5c880856]
  411ce5:	mov    bh,0x7a
  411ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce8:	xor    DWORD PTR [esp+edi*2-0x8c18ada],ecx
  411cef:	jmp    0xed55:0x6e8c8e69
  411cf6:	xchg   ebp,eax
  411cf7:	lods   eax,DWORD PTR ds:[esi]
  411cf8:	xor    DWORD PTR [esi-0x6df1a6cb],edi
  411cfe:	fcmovne st,st(1)
  411d00:	in     al,dx
  411d01:	jae    0x411d1e
  411d03:	xor    ebx,DWORD PTR [ebp+0x67]
  411d06:	sbb    BYTE PTR [esi],cl
  411d08:	mov    esi,0x884db8ee
  411d0d:	aas    
  411d0e:	xor    BYTE PTR [edi],0x4d
  411d11:	fadd   QWORD PTR [edi+0x5a6686cf]
  411d17:	sub    ecx,DWORD PTR [esi-0x30]
  411d1a:	outs   dx,DWORD PTR ds:[esi]
  411d1b:	scas   eax,DWORD PTR es:[edi]
  411d1c:	jp     0x411d83
  411d1e:	xchg   edx,eax
  411d1f:	aas    
  411d20:	sub    cl,BYTE PTR [ebx]
  411d22:	sbb    al,BYTE PTR [edi+edi*2-0x4b]
  411d26:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  411d28:	mov    ds:0xa5057ec4,eax
  411d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d2e:	ror    ah,0x36
  411d31:	mov    esi,0xb249280e
  411d36:	pop    ebx
  411d37:	xor    BYTE PTR [edx-0x4b],dl
  411d3a:	cdq    
  411d3b:	cdq    
  411d3c:	sub    eax,0x997b581f
  411d41:	js     0x411cc3
  411d43:	jg     0x411d1b
  411d45:	xor    ecx,ecx
  411d47:	stc    
  411d48:	cmp    eax,0x42231bf6
  411d4d:	mov    ecx,0xa6e89389
  411d52:	and    bl,BYTE PTR [eax+ecx*4+0x682d4685]
  411d59:	inc    edx
  411d5a:	cmc    
  411d5b:	sti    
  411d5c:	xchg   esi,eax
  411d5d:	ss loopne 0x411d5e
  411d60:	aad    0x9c
  411d62:	test   ebx,esi
  411d64:	stos   BYTE PTR es:[edi],al
  411d65:	jmp    0x411da1
  411d67:	fld    TBYTE PTR [ecx-0x76216b84]
  411d6d:	and    al,0xaf
  411d6f:	fwait
  411d70:	sub    BYTE PTR [ecx+0x477dd304],dh
  411d76:	mov    bl,0x9c
  411d78:	lods   al,BYTE PTR ds:[esi]
  411d79:	add    DWORD PTR [ebx-0x107c0d67],edi
  411d7f:	sbb    dh,BYTE PTR [ebp+edx*8+0x52]
  411d83:	pop    esp
  411d84:	rcl    BYTE PTR [ebp-0x6d6c1a77],0xb5
  411d8b:	stos   BYTE PTR es:[edi],al
  411d8c:	stos   DWORD PTR es:[edi],eax
  411d8d:	(bad)  
  411d8e:	repnz fdiv st(3),st
  411d91:	adc    bh,dh
  411d93:	data16 into 
  411d95:	adc    eax,0xb3e0bf69
  411d9a:	inc    ebx
  411d9b:	stos   DWORD PTR es:[edi],eax
  411d9c:	sti    
  411d9d:	cs pusha 
  411d9f:	test   BYTE PTR [ecx+0x79f90cf3],ch
  411da5:	jle    0x411da7
  411da7:	popa   
  411da8:	push   ebx
  411da9:	mov    ds:0xb9875a75,al
  411dae:	push   0xffffff96
  411db0:	pop    DWORD PTR [edi]
  411db2:	mov    ebx,0x3349f792
  411db7:	sub    dh,BYTE PTR [eax-0x49de8f60]
  411dbd:	dec    ebx
  411dbe:	push   edi
  411dbf:	push   es
  411dc0:	jne    0x411e39
  411dc2:	or     BYTE PTR [esi+esi*8],ah
  411dc5:	int    0x8f
  411dc7:	fldcw  WORD PTR [edx+ebp*1-0x4cae4431]
  411dce:	pop    ebx
  411dcf:	jns    0x411dbc
  411dd1:	test   BYTE PTR [edx-0x70fa6afb],bh
  411dd7:	xchg   esi,eax
  411dd8:	sub    BYTE PTR [ecx],0xed
  411ddb:	xor    esp,DWORD PTR [edi-0x17]
  411dde:	sub    ecx,DWORD PTR [edx-0x1c]
  411de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411de2:	pop    es
  411de3:	jl     0x411dd1
  411de5:	lds    edx,FWORD PTR [esi]
  411de7:	fs fs sub al,0xe7
  411deb:	cmc    
  411dec:	mov    ebp,0x6b9610f1
  411df1:	call   0x85a:0x3f7d266b
  411df8:	mov    dl,0x4b
  411dfa:	ja     0x411e73
  411dfc:	cmp    ah,ch
  411dfe:	jl     0x411da1
  411e00:	fistp  WORD PTR [ecx-0x5ec30db1]
  411e06:	loope  0x411e75
  411e08:	or     edx,DWORD PTR [esi+edi*4-0x36718d44]
  411e0f:	jae    0x411e60
  411e11:	ret    
  411e12:	hlt    
  411e13:	mov    ch,0xad
  411e15:	scas   eax,DWORD PTR es:[edi]
  411e16:	loopne 0x411e3b
  411e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e19:	mov    fs,WORD PTR [edx+edi*4+0x71]
  411e1d:	and    DWORD PTR [esi-0x16],esp
  411e20:	jo     0x411e7d
  411e22:	stos   BYTE PTR es:[edi],al
  411e23:	adc    dh,BYTE PTR [eax+0x22]
  411e26:	sets   dl
  411e29:	xor    BYTE PTR [edi-0x5e49fe51],0x1e
  411e30:	or     al,0x81
  411e32:	xor    DWORD PTR [ebp-0x20],0xffffff9e
  411e36:	repz (bad) 
  411e38:	arpl   ax,ax
  411e3a:	loopne 0x411e47
  411e3c:	push   ebx
  411e3d:	xchg   edi,eax
  411e3e:	aaa    
  411e3f:	inc    edi
  411e40:	pushf  
  411e41:	jb     0x411e00
  411e43:	and    ch,BYTE PTR [edx+0x734ab04]
  411e49:	mov    dh,0xb2
  411e4b:	aam    0x74
  411e4d:	add    DWORD PTR [edx-0x5d],eax
  411e50:	std    
  411e51:	jno    0x411ec8
  411e53:	add    bl,BYTE PTR [ecx]
  411e55:	lds    ecx,FWORD PTR [eax-0x46]
  411e58:	mov    ds:0xfd27f676,eax
  411e5d:	lods   al,BYTE PTR ds:[esi]
  411e5e:	into   
  411e5f:	pop    edi
  411e60:	ss jmp 0x73a6:0x4a41216d
  411e68:	and    dl,BYTE PTR [ebx+0x5174801c]
  411e6e:	and    DWORD PTR [edi-0x949e38b],0x2af3682d
  411e78:	outs   dx,DWORD PTR ds:[esi]
  411e79:	inc    ecx
  411e7a:	inc    ebp
  411e7b:	cld    
  411e7c:	or     edi,DWORD PTR [esp+ebx*2-0x28cfb047]
  411e83:	and    eax,0x6d7299d9
  411e88:	dec    edi
  411e89:	mov    dh,0xb
  411e8b:	dec    esp
  411e8c:	and    DWORD PTR [edi],0xffffff88
  411e8f:	mov    DWORD PTR [esi],eax
  411e91:	fild   WORD PTR [eax+0x2e]
  411e94:	shr    BYTE PTR [eax+ebp*1+0x43],cl
  411e98:	mov    eax,ds:0x1b012fb5
  411e9d:	and    BYTE PTR [esi+0x73450c46],dl
  411ea3:	dec    edx
  411ea4:	cmp    BYTE PTR [ebx+edi*4-0x62],0xc1
  411ea9:	and    eax,0xb7b01238
  411eae:	xchg   ebp,eax
  411eaf:	mov    dh,0xec
  411eb1:	mov    al,ds:0x643d98fe
  411eb6:	mov    al,0x3c
  411eb8:	aas    
  411eb9:	arpl   WORD PTR [ebx+0x16eaaf33],bp
  411ebf:	xchg   ebp,eax
  411ec0:	or     al,0xe6
  411ec2:	cmp    eax,0x5324015f
  411ec7:	lods   eax,DWORD PTR ds:[esi]
  411ec8:	adc    BYTE PTR [edi+0x57add0f],0x4a
  411ecf:	sub    al,0xf5
  411ed1:	mov    DWORD PTR [eax+ebx*1-0x18],edi
  411ed5:	jb     0x411e72
  411ed7:	pop    ecx
  411ed8:	fild   WORD PTR [ebx-0x54]
  411edb:	xchg   ebp,eax
  411edc:	imul   edx,DWORD PTR [ebp-0x77e72e37],0x8
  411ee3:	fwait
  411ee4:	sub    ebp,0x49
  411ee7:	sahf   
  411ee8:	retf   0x5910
  411eeb:	mov    eax,0xcd53d501
  411ef0:	xor    bp,WORD PTR [edx+0x5695704a]
  411ef7:	cmc    
  411ef8:	mov    ebx,0xca475397
  411efd:	(bad)  
  411efe:	nop
  411eff:	sbb    eax,0xa7548fc3
  411f04:	dec    esi
  411f05:	jno    0x411f79
  411f07:	inc    eax
  411f08:	ja     0x411f02
  411f0a:	jmp    0x411ec6
  411f0c:	std    
  411f0d:	pop    eax
  411f0e:	mov    ebp,0x98ef4197
  411f13:	gs add edx,eax
  411f16:	mov    ebx,0x823ac9dc
  411f1b:	call   0x1e59:0x187cc193
  411f22:	loop   0x411ee3
  411f24:	outs   dx,BYTE PTR ds:[esi]
  411f25:	not    DWORD PTR [esi]
  411f27:	loop   0x411ed5
  411f29:	push   edi
  411f2a:	dec    eax
  411f2b:	lods   eax,DWORD PTR ds:[esi]
  411f2c:	sub    al,0xed
  411f2e:	cmp    ecx,DWORD PTR [ebx-0x1730f01f]
  411f34:	inc    ebx
  411f35:	mov    DWORD PTR [ecx+0x37],esp
  411f38:	pop    ds
  411f39:	ins    BYTE PTR es:[edi],dx
  411f3a:	mov    DWORD PTR [edx-0x6e20fa98],esi
  411f40:	cmp    BYTE PTR [eax-0x3b8aa872],al
  411f46:	das    
  411f47:	imul   edi,DWORD PTR [edx],0xffffff81
  411f4a:	ss int 0x2d
  411f4d:	adc    eax,0x58dced0f
  411f52:	lea    esi,ds:0xc7dbe073
  411f58:	mov    eax,ds:0x7be7dd99
  411f5d:	inc    ebp
  411f5e:	dec    ebx
  411f5f:	sar    ecx,cl
  411f61:	fs ja  0x411fcd
  411f64:	and    eax,0xabb5b31f
  411f69:	test   DWORD PTR [ecx+0x5abaa407],esi
  411f6f:	push   ecx
  411f70:	inc    eax
  411f71:	and    cl,BYTE PTR [esi-0x5a861960]
  411f77:	sti    
  411f78:	sbb    eax,0x7f45a903
  411f7d:	neg    DWORD PTR [ebx]
  411f7f:	adc    esi,ebx
  411f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f83:	fimul  DWORD PTR [edx-0x7e]
  411f86:	mov    eax,0x6b4a3e0a
  411f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f8c:	mov    ah,BYTE PTR [eax-0x10]
  411f8f:	xchg   edi,eax
  411f90:	sbb    BYTE PTR [edi+0x741947e],0x2b
  411f97:	sti    
  411f98:	dec    ecx
  411f99:	push   esp
  411f9a:	in     al,dx
  411f9b:	rol    DWORD PTR [edx-0x7b],0xf8
  411f9f:	out    0x63,eax
  411fa1:	(bad)  
  411fa3:	jecxz  0x41201e
  411fa5:	add    ebp,DWORD PTR [edx]
  411fa7:	jge    0x411ffe
  411fa9:	or     DWORD PTR [edx],edx
  411fab:	jge    0x411f3f
  411fad:	add    edx,DWORD PTR [ebx+edi*4+0x32]
  411fb1:	dec    edx
  411fb2:	cmp    ecx,DWORD PTR [ecx-0x65]
  411fb5:	imul   esp,edi,0x9e2eba9b
  411fbb:	inc    bp
  411fbd:	adc    eax,0x6b5fa9de
  411fc2:	mov    ch,0x65
  411fc4:	rcl    DWORD PTR [ebp-0x2f],1
  411fc7:	sub    al,0x35
  411fc9:	mov    WORD PTR [edi],?
  411fcb:	and    DWORD PTR [ebp+0x255936a6],ebx
  411fd1:	or     DWORD PTR [esp+eax*2-0x68],edi
  411fd5:	imul   ecx,ebx,0xe48044cf
  411fdb:	fcomip st,st(3)
  411fdd:	adc    eax,0xc90aca7f
  411fe2:	mov    dl,0xd2
  411fe4:	cmp    DWORD PTR [edx],edx
  411fe6:	mov    eax,ds:0xcddb8c77
  411feb:	imul   esp,DWORD PTR [eax],0xf17ec884
  411ff1:	fs push cs
  411ff3:	fs js  0x412037
  411ff6:	ins    DWORD PTR es:[edi],dx
  411ff7:	jle    0x411f8e
  411ff9:	mov    ebp,0x2e113b5a
  411ffe:	cmp    esp,DWORD PTR [ecx-0x62295c79]
  412004:	add    al,0xb1
  412006:	retf   0xd469
  412009:	das    
  41200a:	jmp    0xc334:0x13264b22
  412011:	outs   dx,BYTE PTR ds:[esi]
  412012:	mov    ah,0x38
  412014:	add    ecx,DWORD PTR [ebx-0x2a29339a]
  41201a:	adc    dh,al
  41201c:	xor    eax,0x2d387a07
  412021:	loopne 0x412076
  412023:	xor    ah,ah
  412025:	inc    ecx
  412026:	lods   eax,DWORD PTR ds:[esi]
  412027:	out    0xf1,eax
  412029:	mov    eax,ds:0x8643318e
  41202e:	sbb    bl,al
  412030:	retf   
  412031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412032:	scas   al,BYTE PTR es:[edi]
  412033:	mov    DWORD PTR [esi],esp
  412035:	gs inc edx
  412037:	mov    ecx,0x5f200510
  41203c:	sbb    ebx,ecx
  41203e:	dec    eax
  41203f:	and    DWORD PTR [ebx+edx*2+0x12827ea6],ecx
  412046:	sbb    cl,BYTE PTR [ebx+0x4b41170a]
  41204c:	jmp    0x4d47:0xb7d8c8c0
  412053:	sti    
  412054:	xor    ebx,DWORD PTR [eax+0xbd7d4f7]
  41205a:	xor    BYTE PTR [esp+edx*8],cl
  41205d:	xor    BYTE PTR [ebx+0x16],dh
  412060:	push   0xfffffff7
  412062:	mov    ecx,0xe34bd890
  412067:	sub    esp,DWORD PTR [edx+0x3a]
  41206a:	dec    eax
  41206b:	xchg   edi,eax
  41206c:	loope  0x412045
  41206e:	xchg   ecx,eax
  41206f:	push   ds
  412070:	call   0xc1b8278
  412075:	xchg   BYTE PTR [ebx],cl
  412077:	rcr    DWORD PTR [ecx-0x55d761fb],1
  41207d:	std    
  41207e:	push   edi
  41207f:	popf   
  412080:	cs into 
  412082:	arpl   WORD PTR [esi-0x43],cx
  412085:	inc    ecx
  412086:	call   0x8088:0xedfba9f0
  41208d:	stos   BYTE PTR es:[edi],al
  41208e:	inc    eax
  41208f:	jne    0x41202b
  412091:	xchg   esp,eax
  412092:	dec    eax
  412093:	loopne 0x4120b3
  412095:	add    eax,0x29de8f63
  41209a:	lahf   
  41209b:	dec    ebx
  41209c:	push   ebx
  41209d:	mov    bl,0x26
  41209f:	jle    0x412042
  4120a1:	ss call 0x734af223
  4120a7:	repnz mov bh,0x33
  4120aa:	call   DWORD PTR [edx]
  4120ac:	xchg   edx,eax
  4120ad:	cmp    DWORD PTR [edx],0xc6880381
  4120b3:	pop    ecx
  4120b4:	ret    
  4120b5:	pop    ds
  4120b6:	xchg   ecx,eax
  4120b7:	ins    BYTE PTR es:[edi],dx
  4120b8:	fcmovnb st,st(1)
  4120ba:	xchg   edi,eax
  4120bb:	out    0xe8,eax
  4120bd:	lahf   
  4120be:	cdq    
  4120bf:	test   BYTE PTR [esi-0x1c],ah
  4120c2:	or     DWORD PTR [edx-0x3a],0x3f
  4120c6:	mov    dh,BYTE PTR [edx+0x60fc5b5]
  4120cc:	ret    0x1138
  4120cf:	xor    DWORD PTR [ebx-0x7e],esi
  4120d2:	shl    BYTE PTR [ecx],1
  4120d4:	push   cs
  4120d5:	nop
  4120d6:	retf   
  4120d7:	shl    DWORD PTR [edi+0x1f],0xe3
  4120db:	scas   eax,DWORD PTR es:[edi]
  4120dc:	mov    ebx,0xa8b95f2c
  4120e1:	(bad)  
  4120e2:	gs push ebp
  4120e4:	add    eax,0xbe0bca8a
  4120e9:	ret    0xd54c
  4120ec:	sahf   
  4120ed:	push   0x81509eec
  4120f2:	sbb    bh,BYTE PTR [edx+0x38]
  4120f5:	repnz cmp dh,BYTE PTR [esi+edi*8-0x30cf3e1c]
  4120fd:	jno    0x41209d
  4120ff:	cmp    BYTE PTR [edi+ecx*2-0x7417c418],al
  412106:	push   edx
  412107:	sub    eax,0xf6fb4339
  41210c:	sub    al,0x94
  41210e:	(bad)  
  41210f:	mov    ecx,0x705d0c86
  412114:	test   BYTE PTR [ecx+0x1],ah
  412117:	xchg   esi,eax
  412118:	sbb    eax,0x9fb8c0d0
  41211d:	scas   eax,DWORD PTR es:[edi]
  41211e:	rcr    esp,cl
  412120:	jns    0x412116
  412122:	cmp    eax,0xcce78051
  412127:	inc    eax
  412128:	into   
  412129:	ja     0x4121a4
  41212b:	shl    ebx,cl
  41212d:	cmp    DWORD PTR [ebx+0x44],0xffffffb9
  412131:	out    0x6d,eax
  412133:	push   0xffffffa8
  412135:	(bad)  
  412136:	into   
  412137:	stos   BYTE PTR es:[edi],al
  412138:	ins    DWORD PTR es:[edi],dx
  412139:	xchg   dh,cl
  41213b:	add    al,0x65
  41213d:	xchg   esi,eax
  41213e:	frndint 
  412140:	dec    ebx
  412141:	sti    
  412142:	mov    cs,WORD PTR ss:[ebx+0x3e]
  412146:	shl    edx,0x14
  412149:	je     0x4120fc
  41214b:	loope  0x41218e
  41214d:	push   esi
  41214e:	into   
  41214f:	not    BYTE PTR [edx+esi*8-0x67]
  412153:	idiv   DWORD PTR [eax+0x5b]
  412156:	(bad)  
  412157:	aas    
  412158:	in     eax,0x91
  41215a:	ds xchg esi,eax
  41215c:	in     al,0xba
  41215e:	stc    
  41215f:	call   0x42ad:0xa43330ee
  412166:	pop    edi
  412167:	cwde   
  412168:	add    DWORD PTR [ecx+0x68],ecx
  41216b:	or     ecx,edi
  41216d:	jbe    0x4121ed
  41216f:	inc    eax
  412170:	fwait
  412171:	jo     0x4121be
  412173:	das    
  412174:	add    BYTE PTR [edi+0x16],0x27
  412178:	fwait
  412179:	clc    
  41217a:	jmp    0x40566502
  41217f:	out    dx,al
  412180:	aad    0x61
  412182:	idiv   DWORD PTR [ecx-0x9]
  412185:	xchg   ebx,eax
  412186:	les    edx,FWORD PTR [edx-0x46]
  412189:	xchg   edx,eax
  41218a:	add    al,0xa5
  41218c:	repnz inc esi
  41218e:	adc    bl,ah
  412190:	mov    WORD PTR [ecx+0x16c25232],?
  412196:	sbb    al,0x8d
  412198:	jbe    0x4121af
  41219a:	xor    BYTE PTR [esi-0x49ae1058],al
  4121a0:	cmp    eax,0x824ed30c
  4121a5:	outs   dx,BYTE PTR ds:[esi]
  4121a6:	push   ecx
  4121a7:	ds cmp esp,esp
  4121aa:	mov    esp,0xd4527cdd
  4121af:	pop    ecx
  4121b0:	mov    ds:0x23c2727e,eax
  4121b5:	inc    esi
  4121b6:	rol    DWORD PTR [ecx+0x15],cl
  4121b9:	push   ds
  4121ba:	call   0xaf2e:0x7a7fb42d
  4121c1:	stc    
  4121c2:	xor    ebx,ebx
  4121c4:	pop    es
  4121c5:	jae    0x4121d6
  4121c7:	inc    edi
  4121c8:	pop    ebx
  4121c9:	pop    edi
  4121ca:	fs cs ret 
  4121cd:	mov    DWORD PTR [esi-0x54e2e873],edx
  4121d3:	add    al,0x5e
  4121d5:	mov    al,0x66
  4121d7:	cmp    eax,0x6329fb60
  4121dc:	lods   al,BYTE PTR ds:[esi]
  4121dd:	jecxz  0x4121c1
  4121df:	jbe    0x41219f
  4121e1:	hlt    
  4121e2:	adc    eax,0x7c4b94fc
  4121e7:	ror    DWORD PTR [eax-0x48],0x8c
  4121eb:	lea    esi,[ebp+ebp*8+0x624d4906]
  4121f2:	outs   dx,BYTE PTR ds:[esi]
  4121f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121f4:	(bad)  
  4121f5:	mov    bh,0x75
  4121f7:	mov    BYTE PTR [ecx+0x38656a47],ah
  4121fd:	jne    0x4121a3
  4121ff:	cmp    DWORD PTR [ebp-0x4e],eax
  412202:	xor    cl,BYTE PTR [ecx]
  412204:	adc    dh,BYTE PTR [edi+0x65]
  412207:	(bad)  
  412208:	sbb    DWORD PTR [edi+esi*2],ecx
  41220b:	xchg   esp,eax
  41220c:	adc    eax,0x25d56fa6
  412211:	jmp    0x21d81247
  412216:	mov    bl,0x9a
  412218:	popf   
  412219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41221a:	or     esp,DWORD PTR [ecx]
  41221c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41221d:	push   esp
  41221e:	aaa    
  41221f:	sub    al,0xb6
  412221:	outs   dx,BYTE PTR ds:[esi]
  412222:	icebp  
  412223:	mov    ch,0x8a
  412225:	fadd   DWORD PTR [ebx+0x356cfd8f]
  41222b:	cmc    
  41222c:	push   DWORD PTR [esi]
  41222e:	mov    cs,WORD PTR [edi]
  412230:	imul   esi,esp,0x18
  412233:	jno    0x4121b8
  412235:	push   0xa91ae252
  41223a:	add    esi,esi
  41223c:	cmp    BYTE PTR [ebx-0x452c95c5],ah
  412242:	cmp    DWORD PTR [edi+edi*2],edi
  412245:	sub    al,0xa9
  412247:	lods   eax,DWORD PTR ds:[esi]
  412248:	adc    edx,DWORD PTR [edi+0x38e14109]
  41224e:	fild   WORD PTR [esi+0x91fa970]
  412254:	lods   eax,DWORD PTR ds:[esi]
  412255:	int3   
  412256:	push   eax
  412257:	adc    BYTE PTR [esi-0x8],0x6c
  41225b:	jecxz  0x4122cc
  41225d:	or     ch,BYTE PTR [ebx+0x7]
  412260:	sbb    eax,0xac5439c0
  412265:	cmp    BYTE PTR [ecx],ah
  412267:	(bad)  
  412268:	fcom   DWORD PTR [esi-0x57]
  41226b:	aas    
  41226c:	add    al,dh
  41226e:	pop    edx
  41226f:	mov    bh,BYTE PTR [ecx]
  412271:	push   ebp
  412272:	lahf   
  412273:	pop    edx
  412274:	fisub  WORD PTR [edi]
  412276:	mov    dh,BYTE PTR [ebp-0x7f]
  412279:	(bad)  
  41227a:	out    dx,al
  41227b:	stc    
  41227c:	push   0x6b
  41227e:	xchg   esi,eax
  41227f:	add    bh,dh
  412281:	adc    al,0x3d
  412283:	sbb    BYTE PTR [ebp-0x3d],cl
  412286:	xchg   DWORD PTR [edx+edi*8],ecx
  412289:	std    
  41228a:	retf   0x3b9d
  41228d:	popa   
  41228e:	sub    cl,bh
  412290:	sti    
  412291:	mov    ds:0xd42c3e8c,eax
  412296:	add    DWORD PTR [ebp+0x4841a678],edx
  41229c:	adc    DWORD PTR [ebx+0xf],esi
  41229f:	call   FWORD PTR [esi+0x3359df95]
  4122a5:	imul   ebx,DWORD PTR [eax-0x4262ef59],0xb839adc7
  4122af:	(bad)  
  4122b0:	lock aas 
  4122b2:	ss push ecx
  4122b4:	stos   DWORD PTR es:[edi],eax
  4122b5:	xchg   esi,eax
  4122b6:	icebp  
  4122b7:	frstor [ebx]
  4122b9:	lods   eax,DWORD PTR ds:[esi]
  4122ba:	int    0xfd
  4122bc:	mov    cl,0x3a
  4122be:	push   esi
  4122bf:	shl    BYTE PTR [esi],1
  4122c1:	inc    esp
  4122c2:	sbb    DWORD PTR [ebp+edi*2+0x46],esp
  4122c6:	xchg   edx,eax
  4122c7:	or     BYTE PTR [ecx],dl
  4122c9:	scas   al,BYTE PTR es:[edi]
  4122ca:	cmp    ah,0x75
  4122cd:	jecxz  0x412275
  4122cf:	pop    edx
  4122d0:	jnp    0x4122df
  4122d2:	and    al,0x69
  4122d4:	stos   BYTE PTR es:[edi],al
  4122d5:	hlt    
  4122d6:	inc    edi
  4122d7:	out    0x20,eax
  4122d9:	dec    BYTE PTR [esi+0x96fcf7]
  4122df:	cmovbe ebp,eax
  4122e2:	jb     0x4122ea
  4122e4:	push   edi
  4122e5:	stos   BYTE PTR es:[edi],al
  4122e6:	push   edx
  4122e7:	or     DWORD PTR [edx+edi*2-0x32],eax
  4122eb:	and    BYTE PTR [ecx+0x6f],0x8b
  4122ef:	cld    
  4122f0:	mov    ds:0x27317e15,eax
  4122f5:	xchg   DWORD PTR [edx-0x1],ebx
  4122f8:	mov    al,0x5f
  4122fa:	scas   al,BYTE PTR es:[edi]
  4122fb:	sbb    DWORD PTR [edi],edi
  4122fd:	push   eax
  4122fe:	retf   0xaf9f
  412301:	hlt    
  412302:	jmp    0x412373
  412304:	jae    0x4122b8
  412306:	xchg   DWORD PTR [ecx-0x41a5aeb9],ebp
  41230c:	in     eax,dx
  41230d:	fsubr  st,st(7)
  41230f:	fs push 0x91560bbe
  412315:	dec    edx
  412316:	sub    al,0x10
  412318:	inc    BYTE PTR [esi-0x8]
  41231b:	and    dl,BYTE PTR [ebx]
  41231d:	mov    al,ds:0x722da359
  412322:	std    
  412323:	nop
  412324:	mov    esp,0x6adf34ba
  412329:	dec    esi
  41232a:	jo     0x41234c
  41232c:	xor    ebx,ebx
  41232e:	mov    ebx,0xf3d64195
  412333:	cld    
  412334:	fdiv   DWORD PTR [edi+0x59d726e3]
  41233a:	outs   dx,DWORD PTR ds:[esi]
  41233b:	sbb    ebx,eax
  41233d:	outs   dx,BYTE PTR ds:[esi]
  41233e:	shl    DWORD PTR [ecx-0x4619ac2a],1
  412344:	sbb    BYTE PTR ds:0xe4cbc7fc,dh
  41234a:	ficom  DWORD PTR [eax+0x1d]
  41234d:	lds    ebp,FWORD PTR [ebx]
  41234f:	ja     0x41231e
  412351:	lds    ebp,FWORD PTR [ebp-0x4cad8575]
  412357:	lods   al,BYTE PTR ds:[esi]
  412358:	push   esp
  412359:	mov    edx,DWORD PTR [ebp+0x8]
  41235c:	and    DWORD PTR ds:0x42b21a,0x0
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	test   BYTE PTR [edx-0x51cbe17],0x8a
  41256c:	add    DWORD PTR [ebx-0x7c7ca1c2],0xfffffffc
  412573:	test   al,0x14
  412575:	xchg   edx,eax
  412576:	pop    es
  412577:	div    BYTE PTR [eax+ebx*2]
  41257a:	repz sti 
  41257c:	mov    edx,0x7cabe8ae
  412581:	pop    ecx
  412582:	mov    BYTE PTR [edx-0x23],ah
  412585:	xor    al,0x3f
  412587:	cli    
  412588:	test   al,0xda
  41258a:	mov    ebx,DWORD PTR [ecx+0x332b7cd6]
  412590:	mov    al,0xc1
  412592:	mov    eax,ds:0x938ae37c
  412597:	out    0xc9,eax
  412599:	aad    0xea
  41259b:	mov    BYTE PTR [ebx-0x4a],al
  41259e:	outs   dx,DWORD PTR ds:[esi]
  41259f:	dec    ebx
  4125a0:	jo     0x4125a6
  4125a2:	pop    ss
  4125a3:	lds    esp,FWORD PTR [ebx-0x1351fa8f]
  4125a9:	loop   0x4125f0
  4125ab:	jno    0x412619
  4125ad:	ss cs pop eax
  4125b0:	push   cs
  4125b1:	and    DWORD PTR [ecx+0x4f1f7595],esp
  4125b7:	pop    esp
  4125b8:	xchg   edi,eax
  4125b9:	sti    
  4125ba:	call   0xb2ed:0xd1a7537b
  4125c1:	stc    
  4125c2:	xchg   edi,ecx
  4125c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125c5:	cmc    
  4125c6:	and    BYTE PTR [ebx+0x6b],dl
  4125c9:	je     0x4125ec
  4125cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125cc:	popf   
  4125cd:	add    edx,ebx
  4125cf:	outs   dx,DWORD PTR ds:[esi]
  4125d0:	push   ebx
  4125d1:	inc    esp
  4125d2:	push   ecx
  4125d3:	inc    edx
  4125d4:	stos   BYTE PTR es:[edi],al
  4125d5:	cmovnp ebx,DWORD PTR ds:[eax-0x639c5035]
  4125dd:	in     eax,dx
  4125de:	mov    edi,0x9ea7b33e
  4125e3:	ins    DWORD PTR es:[edi],dx
  4125e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125e5:	mov    ah,0xa5
  4125e7:	sub    al,0x33
  4125e9:	fild   QWORD PTR [esi-0x3a]
  4125ec:	mov    eax,ds:0x106df6f7
  4125f1:	addr16 mov edi,0xff4b611d
  4125f7:	mov    ah,0x57
  4125f9:	int3   
  4125fa:	jns    0x4125b7
  4125fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125fd:	jo     0x4125ca
  4125ff:	adc    cl,dh
  412601:	sbb    cl,bh
  412603:	mov    esp,0x1a18d968
  412608:	cmp    al,0x80
  41260a:	pop    ss
  41260b:	push   edi
  41260c:	aas    
  41260d:	in     eax,dx
  41260e:	gs push ss
  412610:	stos   DWORD PTR es:[edi],eax
  412611:	clc    
  412612:	xor    ah,BYTE PTR [eax+0x42]
  412615:	repz dec edx
  412617:	repz push ds
  412619:	add    DWORD PTR ds:0x5188b4a7,esi
  41261f:	push   0xfce92ef9
  412624:	in     eax,0x37
  412626:	inc    edx
  412627:	int3   
  412628:	sbb    DWORD PTR [ecx],ecx
  41262a:	mov    cl,0x1a
  41262c:	test   BYTE PTR [esi],dh
  41262e:	hlt    
  41262f:	inc    ebp
  412630:	push   cs
  412631:	or     ch,bl
  412633:	test   DWORD PTR [edx-0x3c77072f],ecx
  412639:	or     DWORD PTR [eax-0xb443634],edi
  41263f:	mov    ds:0xd00cdbcc,al
  412644:	jnp    0x41260c
  412646:	or     edi,eax
  412648:	cmp    al,0x5c
  41264a:	inc    ebp
  41264b:	mov    ebp,esi
  41264d:	cld    
  41264e:	adc    cl,BYTE PTR [edi-0x55]
  412651:	mov    esp,DWORD PTR [ecx]
  412653:	neg    BYTE PTR [edx-0x2]
  412656:	fsubr  DWORD PTR [eax+0x37]
  412659:	cmp    eax,0x6e240917
  41265e:	cld    
  41265f:	fstp   TBYTE PTR [eax]
  412661:	jmp    0x4125ee
  412663:	mov    WORD PTR [edx],?
  412665:	pusha  
  412666:	or     DWORD PTR [ebp+0x2349829d],0x9121e98
  412670:	call   0x95d6f31a
  412675:	(bad)  
  412676:	or     dh,dh
  412678:	mov    bh,0xba
  41267a:	mov    dl,0x41
  41267c:	jae    0x41262e
  41267e:	iret   
  41267f:	fs pop edi
  412681:	add    bl,BYTE PTR [ecx+edx*2+0x97d9c1f]
  412688:	fucomp st(4)
  41268a:	ins    BYTE PTR es:[edi],dx
  41268b:	jecxz  0x412702
  41268d:	ja     0x41267b
  41268f:	(bad)  
  412690:	pop    ebp
  412691:	add    ebp,DWORD PTR [eax-0x6b]
  412694:	cmp    ch,BYTE PTR [esi]
  412696:	shr    DWORD PTR [ebp-0x6],1
  412699:	cmp    esp,DWORD PTR [esi]
  41269b:	fs inc ebx
  41269d:	adc    al,0x17
  41269f:	pusha  
  4126a0:	add    bl,BYTE PTR [eax+0x1c]
  4126a3:	inc    ecx
  4126a4:	push   0xffffffe3
  4126a6:	jb     0x41267e
  4126a8:	push   ebp
  4126a9:	xchg   edi,eax
  4126aa:	pop    ss
  4126ab:	aam    0x33
  4126ad:	outs   dx,BYTE PTR ds:[esi]
  4126ae:	les    edi,FWORD PTR [edi-0x3f68f84a]
  4126b4:	or     ecx,DWORD PTR [edi-0x5]
  4126b7:	aas    
  4126b8:	adc    dh,BYTE PTR [eax-0x3f]
  4126bb:	cwde   
  4126bc:	and    BYTE PTR [ebp+0x1b144f30],0xd9
  4126c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126c4:	inc    eax
  4126c5:	adc    eax,0xbbcdd1a4
  4126ca:	ror    BYTE PTR [esi+0x7f55f774],cl
  4126d0:	xchg   esi,eax
  4126d1:	or     BYTE PTR [si+0x77],ah
  4126d5:	xchg   ecx,eax
  4126d6:	or     DWORD PTR [ecx+0x2ae709c3],ebx
  4126dc:	out    0xc,eax
  4126de:	cmp    eax,DWORD PTR [edx+edi*8]
  4126e1:	mov    dh,bh
  4126e3:	scas   al,BYTE PTR es:[edi]
  4126e4:	cld    
  4126e5:	or     eax,0xc246af24
  4126ea:	push   0xb2ce4214
  4126ef:	or     DWORD PTR [edx],esp
  4126f1:	stos   DWORD PTR es:[edi],eax
  4126f2:	mov    es,WORD PTR [esi-0x6fca3a7f]
  4126f8:	mov    ah,0x66
  4126fa:	je     0x41270c
  4126fc:	or     bl,al
  4126fe:	sbb    eax,0x4a9a0a0a
  412703:	dec    edx
  412704:	sub    DWORD PTR fs:[ecx-0x61ca613c],edx
  41270b:	jbe    0x412737
  41270d:	push   ss
  41270e:	out    0xe1,eax
  412710:	mov    cl,BYTE PTR [ecx]
  412712:	ret    
  412713:	pop    esp
  412714:	mov    ebx,DWORD PTR [edi+0x1988710c]
  41271a:	loope  0x4126b0
  41271c:	jmp    0xa518:0x83de085a
  412723:	int3   
  412724:	dec    esp
  412725:	adc    al,0x61
  412727:	or     cl,BYTE PTR [edx-0x15]
  41272a:	cmp    DWORD PTR [eax+0x4b],esi
  41272d:	bswap  ebx
  41272f:	and    bh,BYTE PTR [edx-0x1bfee9b9]
  412735:	sti    
  412736:	or     DWORD PTR ds:0x607b64ec,edi
  41273c:	pop    esi
  41273d:	imul   esp,esi,0x3
  412740:	rol    DWORD PTR [esp+ecx*1],0xe2
  412744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412745:	jl     0x41272e
  412747:	sub    eax,DWORD PTR [esi+0x4709a78f]
  41274d:	out    0xa0,eax
  41274f:	(bad)  
  412750:	or     eax,0x73d0c18e
  412755:	sahf   
  412756:	sbb    eax,0x7727b8a0
  41275b:	sub    ch,BYTE PTR [ecx+eiz*4-0x1e]
  41275f:	rcl    dl,0xa9
  412762:	push   ebx
  412763:	idiv   DWORD PTR [bx+si+0x1544]
  412768:	mov    cl,0x3a
  41276a:	or     cl,BYTE PTR [eax]
  41276c:	push   ebx
  41276d:	push   ecx
  41276e:	ja     0x412756
  412770:	xor    al,0xf3
  412772:	push   edx
  412773:	cmp    BYTE PTR [esi+0x5c8ed366],ah
  412779:	pop    ebx
  41277a:	js     0x41276b
  41277c:	or     ah,0x96
  41277f:	pushf  
  412780:	or     BYTE PTR [ecx],0x10
  412783:	int    0xca
  412785:	mov    esi,0x2c328327
  41278a:	js     0x41272e
  41278c:	loope  0x4127b3
  41278e:	ja     0x412801
  412790:	pop    esi
  412791:	test   BYTE PTR [ecx-0x7],bl
  412794:	icebp  
  412795:	pop    ss
  412796:	popa   
  412797:	mov    ss,edi
  412799:	addr16 (bad) 
  41279b:	das    
  41279c:	retf   0x6d8
  41279f:	adc    eax,0xf881976e
  4127a4:	les    ebp,FWORD PTR ds:0x5b7dcc60
  4127aa:	and    DWORD PTR [ecx-0x2a],ecx
  4127ad:	ins    DWORD PTR es:[edi],dx
  4127ae:	push   cs
  4127af:	mov    bh,0x48
  4127b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b2:	mov    edi,0x59a9a8c6
  4127b7:	adc    eax,0x6fe8d406
  4127bc:	cmp    BYTE PTR [edx],bh
  4127be:	xchg   edx,eax
  4127bf:	cdq    
  4127c0:	aas    
  4127c1:	jge    0x412795
  4127c3:	imul   esi
  4127c5:	rcr    DWORD PTR [ebx-0x494d229f],0x1e
  4127cc:	jae    0x4127bc
  4127ce:	cmp    BYTE PTR [ebx-0x2ca235d2],dl
  4127d4:	pop    eax
  4127d5:	inc    eax
  4127d6:	(bad)  
  4127d7:	push   0xffffff8e
  4127d9:	jb     0x412802
  4127db:	lock push eax
  4127dd:	fstp   DWORD PTR [ebp+ecx*1-0x29]
  4127e1:	ins    BYTE PTR es:[edi],dx
  4127e2:	(bad)  
  4127e3:	sahf   
  4127e4:	rcr    BYTE PTR [esi+0x69],cl
  4127e7:	out    dx,eax
  4127e8:	jbe    0x4127f0
  4127ea:	cmp    ch,cl
  4127ec:	jnp    0x41284b
  4127ee:	stos   BYTE PTR es:[edi],al
  4127ef:	push   eax
  4127f0:	mov    eax,ds:0x1fcac685
  4127f5:	and    BYTE PTR [ebx-0x6a29eef0],0x7a
  4127fc:	into   
  4127fd:	das    
  4127fe:	jmp    0xef27:0x43f093b3
  412805:	add    al,0x98
  412807:	sub    al,0x44
  412809:	pop    esp
  41280a:	mov    bl,0xe8
  41280c:	xchg   ecx,eax
  41280d:	sbb    dl,BYTE PTR [ecx+0x4b]
  412810:	mov    esp,0xae24e5ab
  412815:	jb     0x412881
  412817:	xchg   edx,eax
  412818:	mov    ds:0x810ee51a,eax
  41281d:	aad    0x80
  41281f:	call   0xd169:0x20bad7c
  412826:	push   0x38794ab
  41282b:	jle    0x41282b
  41282d:	jg     0x41288d
  41282f:	lock xor eax,0xb15c8bad
  412835:	bound  ebp,QWORD PTR [ecx-0x56]
  412838:	add    DWORD PTR [edi+0x69],eax
  41283b:	push   esi
  41283c:	(bad)  
  41283d:	cmp    eax,0xb1aedffa
  412842:	aam    0xe8
  412844:	mov    esi,0x6b49fa22
  412849:	jg     0x412881
  41284b:	out    dx,al
  41284c:	outs   dx,BYTE PTR ds:[esi]
  41284d:	(bad)  
  41284e:	push   0x53ff8276
  412853:	data16 std 
  412855:	loop   0x412808
  412857:	cli    
  412858:	retf   0x2e44
  41285b:	mov    eax,ds:0x681d822f
  412860:	sahf   
  412861:	cmp    eax,0xfbd09920
  412866:	xor    al,0x3c
  412868:	push   edx
  412869:	mov    ecx,0xb3b5f74e
  41286f:	scas   eax,DWORD PTR es:[edi]
  412870:	ret    
  412871:	inc    ebx
  412872:	mov    ebx,0x53fcdbe2
  412877:	jo     0x41286a
  412879:	lea    eax,[ebp+0x46]
  41287c:	mov    ebx,0x1592a2e1
  412881:	in     al,dx
  412882:	push   ebx
  412883:	mov    edi,0x52b6d7f0
  412888:	cli    
  412889:	test   DWORD PTR [ebx+0x7c],edi
  41288c:	repnz dec esp
  41288e:	mov    ecx,0xdc9144ef
  412893:	inc    eax
  412894:	mov    eax,0x9884ee49
  412899:	into   
  41289a:	out    0x6e,al
  41289c:	loop   0x41288e
  41289e:	test   DWORD PTR [di-0x6099],0xf71b78a5
  4128a7:	xor    eax,0xb2926df2
  4128ac:	mov    ah,0x63
  4128ae:	jno    0x4128b6
  4128b0:	jmp    0xb3af6bd9
  4128b5:	sub    dh,bh
  4128b7:	inc    ecx
  4128b8:	cdq    
  4128b9:	stos   BYTE PTR es:[edi],al
  4128ba:	cs lock (bad) 
  4128bd:	je     0x4128d5
  4128bf:	inc    edx
  4128c0:	mov    DWORD PTR [eax],ecx
  4128c2:	inc    ebx
  4128c3:	sub    BYTE PTR [ecx],0x45
  4128c6:	lds    edx,FWORD PTR [edx]
  4128c8:	out    0xf7,al
  4128ca:	xchg   edi,eax
  4128cb:	outs   dx,BYTE PTR ds:[esi]
  4128cc:	imul   BYTE PTR [esi-0x1e]
  4128cf:	aaa    
  4128d0:	popf   
  4128d1:	push   esi
  4128d2:	jb     0x412927
  4128d4:	adc    al,0xe
  4128d6:	popf   
  4128d7:	out    dx,al
  4128d8:	(bad)  
  4128d9:	adc    al,0x24
  4128db:	ror    BYTE PTR [ebx+0x5f84b77a],cl
  4128e1:	shl    DWORD PTR [edx+0x23],0xf4
  4128e5:	xor    eax,0xb8300451
  4128ea:	pusha  
  4128eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ec:	ss jge 0x412951
  4128ef:	add    ch,0x6
  4128f2:	add    al,0xb2
  4128f4:	into   
  4128f5:	mov    esi,0x44fec566
  4128fa:	mov    esi,0x57983047
  4128ff:	lods   eax,DWORD PTR ds:[esi]
  412900:	inc    eax
  412901:	dec    edi
  412902:	xlat   BYTE PTR ds:[ebx]
  412903:	mov    dl,0x2b
  412905:	repnz push ebp
  412907:	stc    
  412908:	cmp    eax,0xf6998479
  41290d:	fcomi  st,st(0)
  41290f:	sub    eax,0x99bea847
  412914:	sbb    al,0x24
  412916:	push   esp
  412917:	pop    ebx
  412918:	xchg   BYTE PTR [ebx+0x38],bh
  41291b:	loop   0x4128a8
  41291d:	cwde   
  41291e:	das    
  41291f:	jg     0x4128aa
  412921:	mov    ebx,0x32b3462f
  412926:	mov    ch,0x7f
  412928:	imul   esp,DWORD PTR [ebx],0x61
  41292b:	in     eax,0x65
  41292d:	cmp    dh,BYTE PTR [ecx-0x6]
  412930:	push   ds
  412931:	(bad)  
  412932:	cmp    eax,DWORD PTR [esi+0x61]
  412935:	or     cl,cl
  412937:	outs   dx,DWORD PTR ds:[esi]
  412938:	and    eax,0xd4d20bf3
  41293d:	icebp  
  41293e:	and    DWORD PTR [ecx-0x76056f75],esi
  412944:	or     DWORD PTR [ebx],edi
  412946:	hlt    
  412947:	iret   
  412948:	sbb    DWORD PTR [edx-0x2e],esp
  41294b:	push   0x60
  41294d:	xchg   ebp,eax
  41294e:	xlat   BYTE PTR ds:[ebx]
  41294f:	jns    0x41296e
  412951:	cmp    eax,DWORD PTR [edx+0x6b]
  412954:	xchg   ebx,eax
  412955:	adc    DWORD PTR [eax+0x18],esi
  412958:	retfw  
  41295a:	sbb    ebx,edi
  41295c:	sub    al,0x10
  41295e:	nop    DWORD PTR [ecx+0x2fcf112e]
  412965:	xchg   edi,eax
  412966:	pop    ebp
  412967:	icebp  
  412968:	or     eax,0xc6ea82cc
  41296d:	sub    esi,0x76
  412970:	sahf   
  412971:	inc    edx
  412972:	jmp    DWORD PTR [esi-0x795649b7]
  412978:	mov    edi,DWORD PTR [eax]
  41297a:	ja     0x4129b6
  41297c:	add    BYTE PTR [eax+0x4b756017],cl
  412982:	cmp    al,0x9c
  412984:	pop    edx
  412985:	cdq    
  412986:	int3   
  412987:	daa    
  412988:	jb     0x41292f
  41298a:	ss cmp ebx,0x1d
  41298e:	fistp  DWORD PTR [edx]
  412990:	push   0xffffffca
  412992:	xor    esp,0xc9b2ee01
  412998:	inc    ecx
  412999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299a:	push   edi
  41299b:	cmc    
  41299c:	mov    eax,edx
  41299e:	addr16 xchg edi,eax
  4129a0:	mov    eax,ds:0x878d3e9
  4129a5:	adc    dh,BYTE PTR [edx+0x2e]
  4129a8:	push   0xffffff83
  4129aa:	push   edx
  4129ab:	and    al,0x63
  4129ad:	nop
  4129ae:	dec    ebx
  4129af:	orps   xmm2,XMMWORD PTR [ebp+0x246dbd2e]
  4129b6:	bound  ebp,QWORD PTR [edi+0x4a]
  4129b9:	or     edx,0xad868ed8
  4129bf:	sbb    BYTE PTR [eax-0x2ff33166],bh
  4129c5:	dec    edi
  4129c6:	shl    DWORD PTR [ecx+0x90301a3],1
  4129cc:	push   edx
  4129cd:	rol    ebp,0x19
  4129d0:	xchg   BYTE PTR [ecx-0x41],al
  4129d3:	push   ss
  4129d4:	mov    ah,0xa6
  4129d6:	je     0x4129f2
  4129d8:	push   edi
  4129d9:	mov    ah,0xb4
  4129db:	into   
  4129dc:	pushf  
  4129dd:	pop    edx
  4129de:	fbstp  TBYTE PTR [eax]
  4129e0:	mov    bh,0x99
  4129e2:	sub    DWORD PTR [esi],edi
  4129e4:	je     0x41299a
  4129e6:	inc    edi
  4129e7:	adc    ebx,DWORD PTR [edi-0x52]
  4129ea:	jg     0x41298d
  4129ec:	sahf   
  4129ed:	lods   eax,DWORD PTR ds:[esi]
  4129ee:	xchg   ecx,eax
  4129ef:	call   0x47629fad
  4129f4:	adc    al,0xbb
  4129f6:	sbb    ah,BYTE PTR [esi]
  4129f8:	into   
  4129f9:	pop    ds
  4129fa:	push   esi
  4129fb:	dec    ebp
  4129fc:	mov    eax,0xe9c63839
  412a01:	and    BYTE PTR [eax+0x6a4fdddc],0x1d
  412a08:	jae    0x412a22
  412a0a:	mov    eax,ds:0x719383c1
  412a0f:	ret    0x1f23
  412a12:	xchg   ebp,eax
  412a13:	dec    esp
  412a14:	iret   
  412a15:	cli    
  412a16:	lahf   
  412a17:	inc    ebx
  412a18:	xchg   esi,eax
  412a19:	push   edi
  412a1a:	out    0x95,eax
  412a1c:	into   
  412a1d:	mov    BYTE PTR [esi],ch
  412a1f:	loopne 0x412a43
  412a21:	push   cs
  412a22:	test   al,0xd7
  412a24:	jnp    0x4129cd
  412a26:	adc    al,0x7d
  412a28:	lods   eax,DWORD PTR ds:[esi]
  412a29:	idiv   ch
  412a2b:	and    BYTE PTR [edi],bl
  412a2d:	cs in  eax,0xdc
  412a30:	nop
  412a31:	rcl    edx,cl
  412a33:	mov    bl,0xc9
  412a35:	jl     0x412a67
  412a37:	mov    bl,0xd5
  412a39:	jp     0x412a5c
  412a3b:	ins    BYTE PTR es:[edi],dx
  412a3c:	mov    edi,0xcafe9a4f
  412a41:	sub    cl,BYTE PTR [edx+0x2a]
  412a44:	inc    ebp
  412a45:	rcl    DWORD PTR [esi-0x5715a728],1
  412a4b:	or     BYTE PTR [eax-0x3e],dh
  412a4e:	jl     0x412a49
  412a50:	jns    0x412a70
  412a52:	pop    eax
  412a53:	or     eax,0x60975d8f
  412a58:	into   
  412a59:	mov    bl,0x20
  412a5b:	shl    bl,cl
  412a5d:	jp     0x412a8d
  412a5f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  412a61:	pop    ds
  412a62:	ins    DWORD PTR es:[edi],dx
  412a63:	imul   edx,DWORD PTR [ebx+0x78],0xee0e809f
  412a6a:	xchg   esi,eax
  412a6b:	imul   esi,DWORD PTR [edx+0x6a],0x19
  412a6f:	outs   dx,BYTE PTR ds:[esi]
  412a70:	add    eax,0xc5b87c72
  412a75:	mov    ds:0x3a97459d,eax
  412a7a:	shl    BYTE PTR [esi+0x4bb3dbcb],0x9f
  412a81:	pop    esp
  412a82:	cmp    DWORD PTR [esi],0xaf244e59
  412a88:	ss gs hlt 
  412a8b:	xor    BYTE PTR [eax],bh
  412a8d:	jl     0x412afe
  412a8f:	sub    eax,0xda7eefbc
  412a94:	fidiv  WORD PTR [eax+0x4fa39a72]
  412a9a:	inc    esp
  412a9b:	jno    0x412a27
  412a9d:	jo     0x412aed
  412a9f:	push   edi
  412aa0:	pop    eax
  412aa1:	hlt    
  412aa2:	or     eax,0x9a91eddd
  412aa7:	pop    ss
  412aa8:	xchg   DWORD PTR [ebp+0x3f33ab51],edi
  412aae:	mov    esi,0x15e8b723
  412ab3:	add    al,0x74
  412ab5:	ins    DWORD PTR es:[edi],dx
  412ab6:	test   BYTE PTR [eax-0x66d3bc54],bh
  412abc:	mov    bh,0x2c
  412abe:	test   al,0x14
  412ac0:	in     al,dx
  412ac1:	pusha  
  412ac2:	cmp    ah,BYTE PTR [edx-0x1c8ac2bf]
  412ac8:	xor    ch,BYTE PTR [ecx]
  412aca:	push   0x84c94c6
  412acf:	test   eax,0x3ff70811
  412ad4:	sub    al,0xb8
  412ad6:	dec    esi
  412ad7:	lds    eax,FWORD PTR [esi+0x32]
  412ada:	push   edx
  412adb:	jae    0x412b45
  412add:	add    eax,0x84becc8e
  412ae2:	sub    BYTE PTR [eax],bh
  412ae4:	jg     0x412ada
  412ae6:	inc    edx
  412ae7:	lea    esi,[ecx+0x7c]
  412aea:	push   0x780feaf6
  412aef:	repnz adc edi,DWORD PTR [edx+0x12]
  412af3:	into   
  412af4:	sub    al,0x73
  412af6:	xchg   edi,eax
  412af7:	xchg   esi,eax
  412af8:	retf   
  412af9:	lea    esp,[edi+edi*4-0x3153741f]
  412b00:	sbb    al,0x4c
  412b02:	retf   0xabfa
  412b05:	inc    esp
  412b06:	aad    0x73
  412b08:	and    al,0x21
  412b0a:	cmp    eax,0x3de27b2d
  412b0f:	jbe    0x412b35
  412b11:	mov    WORD PTR [ecx],?
  412b13:	cwde   
  412b14:	daa    
  412b15:	xor    DWORD PTR [ebx],edi
  412b17:	jne    0x412b77
  412b19:	pop    eax
  412b1b:	mov    ebx,DWORD PTR [ebp+ecx*2-0x180d237]
  412b22:	retf   
  412b23:	pop    es
  412b24:	cld    
  412b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b26:	xchg   edx,eax
  412b27:	xor    BYTE PTR [edx-0x2a2cb3d2],dl
  412b2d:	push   es
  412b2e:	jne    0x412ad3
  412b30:	sbb    BYTE PTR ds:0xa17cc989,0xe1
  412b37:	sub    al,0xc2
  412b39:	int    0x4b
  412b3b:	bound  ebx,QWORD PTR [ebp+ebp*2+0x3a3d6890]
  412b42:	and    ch,al
  412b44:	jp     0x412af5
  412b46:	mov    DWORD PTR ds:0x622776e4,ebp
  412b4c:	std    
  412b4d:	sub    al,0x6a
  412b4f:	shl    DWORD PTR [edi],cl
  412b51:	dec    eax
  412b52:	fs push edi
  412b54:	xchg   esp,eax
  412b55:	jecxz  0x412bca
  412b57:	lahf   
  412b58:	mov    ebp,0xecdd274d
  412b5d:	mov    edx,0x9740543b
  412b62:	cwde   
  412b63:	mov    cl,0x41
  412b65:	jge    0x412b1e
  412b67:	ret    0x10a0
  412b6a:	stos   BYTE PTR es:[edi],al
  412b6b:	mov    bl,0xa6
  412b6d:	sbb    esp,esi
  412b6f:	mov    bh,0x25
  412b71:	push   esp
  412b72:	scas   eax,DWORD PTR es:[edi]
  412b73:	lahf   
  412b74:	mov    al,0x6e
  412b76:	mov    ebx,edi
  412b78:	xchg   edi,eax
  412b79:	pop    ss
  412b7a:	or     al,BYTE PTR [ebp+0x2b7cf6c8]
  412b80:	xchg   ebp,eax
  412b81:	xor    eax,0x6cdba779
  412b86:	(bad)  
  412b87:	ins    DWORD PTR es:[edi],dx
  412b88:	test   eax,0xc37daa48
  412b8d:	mov    ecx,0xcb6a9049
  412b92:	xchg   esi,eax
  412b93:	in     eax,dx
  412b94:	fimul  DWORD PTR [edx-0x5]
  412b97:	mov    edx,gs
  412b99:	mov    cl,0x8c
  412b9b:	fidivr WORD PTR [edx+0x33]
  412b9e:	in     al,0x3f
  412ba0:	adc    eax,0x47363dab
  412ba5:	or     ecx,edx
  412ba7:	in     al,0xc7
  412ba9:	ja     0x412b3f
  412bab:	adc    edi,DWORD PTR [eax+ebx*1-0x47]
  412baf:	jmp    0x4a8b:0xeafd22ca
  412bb6:	push   ebp
  412bb7:	int3   
  412bb8:	clc    
  412bb9:	icebp  
  412bba:	iret   
  412bbb:	retf   0x12c1
  412bbe:	xor    al,0x7c
  412bc0:	xchg   ebx,eax
  412bc1:	add    eax,0x5fc6f649
  412bc6:	xor    eax,0xc304d1c8
  412bcb:	mov    al,0xd3
  412bcd:	xchg   edi,eax
  412bce:	xchg   ebx,eax
  412bcf:	cmp    BYTE PTR [ebx+0x1f],cl
  412bd2:	scas   eax,DWORD PTR es:[edi]
  412bd3:	and    al,0xd1
  412bd5:	les    ecx,FWORD PTR [ebx]
  412bd7:	inc    ecx
  412bd8:	loop   0x412ba6
  412bda:	test   DWORD PTR [ebx-0x595e47f0],esi
  412be0:	push   es
  412be1:	jns    0x412bb3
  412be3:	int    0xc7
  412be5:	xor    esp,DWORD PTR [edi+eax*8-0x2769532d]
  412bec:	xchg   ebx,eax
  412bed:	adc    DWORD PTR [eax-0x3fa94add],ecx
  412bf3:	xor    BYTE PTR [edx-0x1c],cl
  412bf6:	jae    0x412c67
  412bf8:	jo     0x412bbb
  412bfa:	xor    BYTE PTR [edx+0x4b668cec],0xd0
  412c01:	sbb    al,bl
  412c03:	stos   DWORD PTR es:[edi],eax
  412c04:	jl     0x412c76
  412c06:	ins    BYTE PTR es:[edi],dx
  412c07:	mov    ebp,0x73c36e11
  412c0c:	adc    ebp,DWORD PTR [edx]
  412c0e:	inc    ebp
  412c0f:	pop    es
  412c10:	adc    cl,BYTE PTR ds:0xa7d26df5
  412c16:	imul   esi,ecx,0x80d614e
  412c1c:	sbb    al,0x2c
  412c1e:	jp     0x412bb1
  412c20:	sub    eax,DWORD PTR [edi+0x3c]
  412c23:	inc    esp
  412c24:	jbe    0x412be0
  412c26:	adc    ah,BYTE PTR ds:0xc0bee472
  412c2c:	dec    edi
  412c2d:	add    al,0xb5
  412c2f:	xor    ebp,edx
  412c31:	out    0x78,al
  412c33:	jb     0x412c83
  412c35:	retf   0xfe51
  412c38:	xlat   BYTE PTR ds:[ebx]
  412c39:	or     al,0xed
  412c3b:	push   ebx
  412c3c:	and    esp,DWORD PTR ds:[eax-0x4e3ae685]
  412c43:	nop
  412c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c45:	xchg   ebp,eax
  412c46:	xchg   BYTE PTR [ebx+0x6a08d1c6],al
  412c4c:	ds push cs
  412c4e:	mov    eax,ss
  412c50:	jl     0x412bfe
  412c52:	xchg   ebp,eax
  412c53:	mov    dl,0x9
  412c55:	mov    ebx,0xc29ad201
  412c5a:	inc    esp
  412c5b:	outs   dx,BYTE PTR ds:[esi]
  412c5c:	add    dh,dh
  412c5e:	pop    ss
  412c5f:	ds scas eax,DWORD PTR es:[edi]
  412c61:	or     DWORD PTR [eax+0x45429b97],0xffffffc6
  412c68:	test   DWORD PTR [esi+0x3e254ef0],edi
  412c6e:	retf   
  412c6f:	xchg   edx,eax
  412c70:	inc    ebp
  412c71:	sub    dl,BYTE PTR [ebx]
  412c73:	and    al,0x2a
  412c75:	arpl   WORD PTR ds:0xd1a490b3,sp
  412c7b:	jmp    0xecf2294f
  412c80:	and    eax,0xb9ed4649
  412c85:	and    eax,0x4e553887
  412c8a:	cmc    
  412c8b:	cmp    eax,0xc6670972
  412c90:	or     DWORD PTR [ecx],ebx
  412c92:	sbb    al,BYTE PTR [ebp+0x16]
  412c95:	fild   QWORD PTR [edx+0xe3836f0]
  412c9b:	or     DWORD PTR [ebx+0x16bffe8b],esp
  412ca1:	adc    BYTE PTR ds:0xa418d32b,cl
  412ca7:	dec    ebp
  412ca8:	fs call 0x7accee69
  412cae:	test   DWORD PTR [edx+0x47],0xbb646319
  412cb5:	pop    edx
  412cb6:	fistp  DWORD PTR [esi]
  412cb8:	test   eax,0x8f82a6c6
  412cbd:	xchg   ecx,eax
  412cbe:	mov    dh,0x25
  412cc0:	rcl    DWORD PTR [eax],0x4d
  412cc3:	sbb    ah,cl
  412cc5:	mov    BYTE PTR [edi],dh
  412cc7:	ja     0x412c87
  412cc9:	xlat   BYTE PTR ds:[ebx]
  412cca:	add    eax,0xfb85e675
  412ccf:	ds enter 0xa011,0x5d
  412cd4:	adc    esp,edx
  412cd6:	scas   al,BYTE PTR es:[edi]
  412cd7:	push   ss
  412cd8:	es leave 
  412cda:	push   edi
  412cdb:	mov    dl,0x3b
  412cdd:	shr    BYTE PTR [ecx-0x1dcbc94c],0x85
  412ce4:	pushf  
  412ce5:	or     edi,DWORD PTR [ebx]
  412ce7:	dec    edi
  412ce8:	pushf  
  412ce9:	cmp    al,0x6d
  412ceb:	shr    cl,1
  412ced:	inc    esp
  412cee:	jno    0x412ca5
  412cf0:	push   ebp
  412cf1:	cli    
  412cf2:	pop    ebx
  412cf3:	jecxz  0x412c85
  412cf5:	or     DWORD PTR [eax],edi
  412cf7:	pop    esi
  412cf8:	or     eax,eax
  412cfa:	mov    DWORD PTR [edi+0x78],esi
  412cfd:	dec    edx
  412cfe:	mov    ecx,0x7bd25a2a
  412d03:	or     DWORD PTR [ebx+0x36],eax
  412d06:	icebp  
  412d07:	das    
  412d08:	push   0xcab36246
  412d0d:	jno    0x412d12
  412d0f:	xchg   BYTE PTR [ecx-0x6ff5705a],cl
  412d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d16:	hlt    
  412d17:	dec    ebx
  412d18:	test   DWORD PTR [eax+eiz*4-0x61],ebp
  412d1c:	ja     0x412d03
  412d1e:	es xchg esi,eax
  412d20:	(bad)  
  412d21:	jne    0x412cd8
  412d23:	adc    edx,DWORD PTR [edi+0x55]
  412d26:	inc    esp
  412d27:	into   
  412d28:	inc    edx
  412d29:	and    al,0xd9
  412d2b:	call   0xdf79071b
  412d30:	jae    0x412ced
  412d32:	int    0x42
  412d34:	in     al,dx
  412d35:	stc    
  412d36:	das    
  412d37:	test   BYTE PTR [ecx-0x3190c9],al
  412d3d:	fdiv   DWORD PTR [eax]
  412d3f:	adc    BYTE PTR [edx+0xc],0x6f
  412d43:	inc    edx
  412d44:	dec    eax
  412d45:	xchg   BYTE PTR [ecx+0x37],dl
  412d48:	out    dx,eax
  412d49:	sbb    ebx,DWORD PTR [ebp-0x20]
  412d4c:	lods   eax,DWORD PTR ds:[esi]
  412d4d:	sbb    eax,0x7a489542
  412d52:	cwde   
  412d53:	and    DWORD PTR [edx+0x5ecc3516],esi
  412d59:	xor    DWORD PTR ds:0x50733ddb,edx
  412d5f:	scas   eax,DWORD PTR es:[edi]
  412d60:	mov    ch,0x73
  412d62:	sbb    eax,0x16b34b40
  412d67:	push   ebp
  412d68:	lea    esi,[eax]
  412d6a:	xor    eax,0x5872fd9c
  412d6f:	jns    0x412d80
  412d71:	bound  eax,QWORD PTR [ebx-0x14]
  412d74:	xor    ebx,edi
  412d76:	aas    
  412d77:	mov    ds:0x95e75262,al
  412d7c:	mov    BYTE PTR [edx-0x24993c03],dl
  412d82:	sub    eax,0x6ec04d3a
  412d87:	mov    BYTE PTR [bx+di-0x2d],ch
  412d8b:	inc    ebx
  412d8c:	sub    esi,edi
  412d8e:	popa   
  412d8f:	sar    DWORD PTR ds:0x4d780eeb,0x7c
  412d96:	pop    esp
  412d97:	repz call 0x2782:0x775dc823
  412d9f:	out    0x97,eax
  412da1:	in     eax,dx
  412da2:	test   eax,0xb3c7def4
  412da7:	sti    
  412da8:	push   esp
  412da9:	(bad)  
  412daa:	mov    eax,0x76a423c1
  412daf:	mov    esp,0x82d29616
  412db4:	mov    ds:0x116035a1,al
  412db9:	sub    edi,DWORD PTR [ecx+0x1c]
  412dbc:	int3   
  412dbd:	bound  ebp,QWORD PTR [edx+0x5183ce75]
  412dc3:	bound  edi,QWORD PTR [eax+0x78]
  412dc6:	es inc ebp
  412dc8:	(bad)  
  412dc9:	call   FWORD PTR [eax+0x24]
  412dcc:	inc    eax
  412dcd:	in     eax,dx
  412dce:	inc    eax
  412dcf:	lahf   
  412dd0:	rcl    eax,0xac
  412dd3:	inc    ebx
  412dd4:	dec    ebp
  412dd5:	mov    ch,0x49
  412dd7:	mov    dh,0x71
  412dd9:	callw  0x6a7b
  412ddd:	mov    cl,0x62
  412ddf:	push   cs
  412de0:	xchg   DWORD PTR [ebx-0x42],edi
  412de3:	or     eax,0x4a5b57b3
  412de8:	addr16 sub ecx,edx
  412deb:	cdq    
  412dec:	imul   bl
  412dee:	les    esi,FWORD PTR [ebx]
  412df0:	mov    ds:0x74258dad,al
  412df5:	pop    eax
  412df6:	sbb    dl,BYTE PTR [esi-0x9]
  412df9:	push   ebp
  412dfa:	mov    edi,DWORD PTR [ebx]
  412dfc:	hlt    
  412dfd:	fnstcw WORD PTR [esi-0x4178b4c4]
  412e03:	push   edx
  412e04:	xor    cl,cl
  412e06:	test   BYTE PTR [edi+ebx*2-0x60],bh
  412e0a:	sub    ecx,esp
  412e0c:	cwde   
  412e0d:	ror    cl,cl
  412e0f:	mov    ebx,0x9e5864e8
  412e14:	fild   QWORD PTR [ebp-0x4adef371]
  412e1a:	xlat   BYTE PTR ds:[ebx]
  412e1b:	jmp    0x412e83
  412e1d:	ja     0x412db7
  412e1f:	js     0x412dd6
  412e21:	repz adc DWORD PTR [ecx+0x8],edi
  412e25:	ins    DWORD PTR es:[edi],dx
  412e26:	fistp  WORD PTR [edx-0x62c2e69d]
  412e2c:	lods   al,BYTE PTR ds:[esi]
  412e2d:	xor    DWORD PTR [ebp+0x3103d892],edi
  412e33:	cmp    DWORD PTR [edx+0x1e],ecx
  412e36:	add    bl,BYTE PTR [eax]
  412e38:	out    0x77,al
  412e3a:	cmp    al,BYTE PTR [ebx-0x4]
  412e3d:	fcmovbe st,st(6)
  412e3f:	and    DWORD PTR [edx-0x77],ebp
  412e42:	add    BYTE PTR [esi+0x54c19271],cl
  412e48:	push   es
  412e49:	add    DWORD PTR [edx-0x7031db1],0xb2395b7b
  412e53:	icebp  
  412e54:	adc    esp,DWORD PTR [edi-0x30]
  412e57:	xchg   ebp,eax
  412e58:	in     eax,0xcf
  412e5a:	xchg   ebx,eax
  412e5b:	pop    edi
  412e5c:	xchg   BYTE PTR [ebx+ecx*2+0x5a],ch
  412e60:	aas    
  412e61:	retf   
  412e62:	mov    ecx,edx
  412e64:	cdq    
  412e65:	mov    dh,0xb6
  412e67:	out    dx,al
  412e68:	pop    es
  412e69:	or     BYTE PTR [eax],dh
  412e6b:	mov    bl,0x7a
  412e6d:	xor    DWORD PTR [esi-0x45736e2d],0xffffffa9
  412e74:	je     0x412e3b
  412e76:	mov    al,0x4e
  412e78:	sbb    ebp,DWORD PTR [ecx]
  412e7a:	inc    esi
  412e7b:	popf   
  412e7c:	cmp    dh,0xc9
  412e7f:	jp     0x412e7b
  412e81:	pop    ss
  412e82:	je     0x412ea3
  412e84:	sub    eax,0x89c1beb
  412e89:	(bad)  
  412e8a:	aas    
  412e8b:	imul   ebx,DWORD PTR [eax-0x9],0x66
  412e8f:	arpl   WORD PTR [ebp+0x3d],dx
  412e92:	ficomp WORD PTR [edx]
  412e94:	mov    eax,ds:0x29ff6d87
  412e99:	push   DWORD PTR [edi-0x724fec0]
  412e9f:	rcl    DWORD PTR [ebx-0xeac8dad],0x3c
  412ea6:	fisttp WORD PTR [ecx-0xe]
  412ea9:	hlt    
  412eaa:	jno    0x412e9b
  412eac:	sub    bl,BYTE PTR [ebp+ebp*4-0x2cd626d6]
  412eb3:	sbb    ch,al
  412eb5:	jno    0x412e3d
  412eb7:	fadd   DWORD PTR [ebx+0x5cee29db]
  412ebd:	sti    
  412ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ebf:	add    eax,0x9eb200d9
  412ec4:	fimul  WORD PTR [ebp+0x372ee6a1]
  412eca:	jne    0x412ef9
  412ecc:	adc    DWORD PTR [ebx],0xffffffd2
  412ecf:	push   ecx
  412ed0:	pop    ds
  412ed1:	or     ah,BYTE PTR fs:[ebp-0x48d94bb7]
  412ed8:	fldcw  WORD PTR [esi]
  412eda:	cdq    
  412edb:	hlt    
  412edc:	fcom   st(7)
  412ede:	fadd   st(6),st
  412ee0:	loope  0x412eb2
  412ee2:	jmp    0x2fa4:0x600dc726
  412ee9:	mov    edi,0xef144670
  412eee:	lea    ecx,[ebx]
  412ef0:	imul   ecx,DWORD PTR [esi],0xfffffff1
  412ef3:	stos   DWORD PTR es:[edi],eax
  412ef4:	retf   0x24fe
  412ef7:	sub    dl,BYTE PTR [eax+esi*2+0x77faa1ef]
  412efe:	and    ecx,ebx
  412f00:	mov    WORD PTR [ebx+ebx*2+0x69cc5570],es
  412f07:	mov    ebp,0x20d9ea75
  412f0c:	jp     0x412f39
  412f0e:	mov    dh,0x7b
  412f10:	xor    al,BYTE PTR [ebp-0x4d]
  412f13:	add    al,0xf0
  412f15:	inc    esi
  412f16:	popf   
  412f17:	(bad)  
  412f18:	jb     0x412f66
  412f1a:	clc    
  412f1b:	cwde   
  412f1c:	fisttp DWORD PTR [ebp+esi*2+0x695ea4bd]
  412f23:	xlat   BYTE PTR ds:[ebx]
  412f24:	nop
  412f25:	popf   
  412f26:	mov    esi,0xc555ead9
  412f2b:	out    0xa8,al
  412f2d:	jge    0x412f36
  412f2f:	xor    bl,BYTE PTR [esi+0x63]
  412f32:	ror    DWORD PTR [ecx+0x33],0x9b
  412f36:	mov    ds:0x5427c1a1,al
  412f3b:	mov    al,0xf8
  412f3d:	push   ecx
  412f3e:	add    esi,edx
  412f40:	jo     0x412f0f
  412f42:	inc    ebp
  412f43:	mov    BYTE PTR [esi-0x4276e558],bh
  412f49:	mov    al,ds:0xb3fd56ea
  412f4e:	push   eax
  412f4f:	clc    
  412f50:	adc    dl,BYTE PTR [ecx+ecx*2]
  412f53:	popa   
  412f54:	jmp    0x1621:0xa0b354a3
  412f5b:	xchg   edi,eax
  412f5c:	xor    DWORD PTR [ecx-0x13],0xab162b2d
  412f63:	int3   
  412f64:	xlat   BYTE PTR ds:[ebx]
  412f65:	push   ebp
  412f66:	cs xchg ebp,eax
  412f68:	pop    esp
  412f69:	and    dh,cl
  412f6b:	dec    edx
  412f6c:	mov    dh,0x67
  412f6e:	adc    DWORD PTR [edi-0x613f3a8d],ebx
  412f74:	inc    ecx
  412f75:	sbb    al,0xa0
  412f77:	mov    edx,0xb2c53e2a
  412f7c:	(bad)  
  412f7d:	stc    
  412f7e:	adc    al,0x36
  412f80:	pop    es
  412f81:	jb     0x412fc8
  412f83:	(bad)  
  412f84:	adc    BYTE PTR [ebx+edi*1+0x1e],bl
  412f88:	xor    BYTE PTR ds:0x2273cf8,bl
  412f8e:	sbb    BYTE PTR [ebp-0x3f],ch
  412f91:	inc    esp
  412f92:	adc    al,0xe
  412f94:	fmul   DWORD PTR [esi]
  412f96:	pusha  
  412f97:	pop    ebp
  412f98:	jae    0x412f82
  412f9a:	inc    edi
  412f9b:	iret   
  412f9c:	popa   
  412f9d:	lock mov edx,0xe5438182
  412fa3:	inc    ebp
  412fa4:	xor    eax,0x3e4046cd
  412fa9:	mov    cl,0x93
  412fab:	fdivr  QWORD PTR [edi-0x20db1c4f]
  412fb1:	push   esi
  412fb2:	retf   
  412fb3:	mov    eax,ds:0x3822addd
  412fb8:	jl     0x412fe1
  412fba:	into   
  412fbb:	ret    0x6820
  412fbe:	aaa    
  412fbf:	jmp    0x70a9:0xd2d50a2b
  412fc6:	in     eax,0x78
  412fc8:	pop    edx
  412fc9:	(bad)  
  412fca:	sbb    esi,DWORD PTR [ecx+0x2bfe1855]
  412fd0:	sub    dl,ah
  412fd2:	cmp    BYTE PTR [eax+0x42181e26],0x41
  412fd9:	jmp    0x412fb2
  412fdb:	dec    ebx
  412fdc:	test   al,0xbb
  412fde:	mov    BYTE PTR [edi],dl
  412fe0:	pushf  
  412fe1:	xor    esi,0x71
  412fe4:	loop   0x413057
  412fe6:	clc    
  412fe7:	jle    0x413059
  412fe9:	xchg   esp,eax
  412fea:	sbb    DWORD PTR [edx],ebx
  412fec:	pop    esi
  412fed:	dec    ebp
  412fee:	xchg   esp,eax
  412fef:	jge    0x412f85
  412ff1:	inc    edi
  412ff2:	ja     0x412fe1
  412ff4:	xor    edx,DWORD PTR [edi]
  412ff6:	jmp    0xc566befb
  412ffb:	mov    dh,BYTE PTR [edi+0x1dd123b1]
  413001:	int3   
  413002:	xchg   edx,eax
  413003:	out    0xce,al
  413005:	es js  0x412fa3
  413008:	xchg   ebp,eax
  413009:	pop    ecx
  41300a:	cld    
  41300b:	or     eax,0x478a2df1
  413010:	push   bx
  413012:	jb     0x413076
  413014:	push   ebp
  413015:	scas   al,BYTE PTR es:[edi]
  413016:	xchg   DWORD PTR [esi],esi
  413018:	cmp    dl,bl
  41301a:	sbb    esp,esi
  41301c:	outs   dx,DWORD PTR ds:[esi]
  41301d:	mov    bh,0xec
  41301f:	sbb    bh,BYTE PTR [edx-0x3eca5162]
  413025:	into   
  413026:	cs daa 
  413028:	out    dx,eax
  413029:	rcl    DWORD PTR [eax+edx*2-0x5b898681],1
  413030:	sub    eax,0x3651606b
  413035:	repz aam 0x18
  413038:	push   ss
  413039:	cwde   
  41303a:	sbb    eax,0x6978f530
  41303f:	scas   eax,DWORD PTR es:[edi]
  413040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413041:	int3   
  413042:	mov    edi,0xe8b9481
  413047:	into   
  413048:	push   edx
  413049:	dec    ebx
  41304a:	xchg   ebp,eax
  41304b:	mov    ecx,0x1964f171
  413050:	addr16 ds jns 0x41303a
  413054:	fwait
  413055:	adc    BYTE PTR [esi+0x76],0xa6
  413059:	stc    
  41305a:	jmp    DWORD PTR [esi+0x7d67b93a]
  413060:	fistp  QWORD PTR ss:[esi-0x2f23cf64]
  413067:	xchg   ecx,eax
  413068:	imul   ebp,DWORD PTR [edx],0x21
  41306b:	ret    0xa9f9
  41306e:	pop    eax
  41306f:	mov    ds:0xcdf8bd6f,eax
  413074:	push   0x30d77e78
  413079:	pop    ss
  41307a:	popa   
  41307b:	ret    
  41307c:	mov    dh,0xb4
  41307e:	inc    esp
  41307f:	lea    esi,[eax+eiz*1]
  413082:	sbb    dh,BYTE PTR [ecx+0x42d2130b]
  413088:	mov    dl,0x5b
  41308a:	or     DWORD PTR [esi],0x3cac040d
  413090:	push   ss
  413091:	in     al,dx
  413092:	inc    esi
  413093:	jp     0x4130dc
  413095:	jno    0x413101
  413097:	jnp    0x4130b9
  413099:	push   cs
  41309a:	cmp    esi,eax
  41309c:	pop    ebx
  41309d:	xor    ah,bl
  41309f:	imul   ecx,esi,0xffffffff
  4130a2:	in     al,0xb8
  4130a4:	pushf  
  4130a5:	cmp    esi,DWORD PTR [edx]
  4130a7:	out    0x18,eax
  4130a9:	jp     0x4130db
  4130ab:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4130ad:	xchg   esi,eax
  4130ae:	inc    esi
  4130af:	retf   0xf883
  4130b2:	xchg   BYTE PTR [edx+0x6f63615b],ah
  4130b8:	aas    
  4130b9:	loop   0x413083
  4130bb:	dec    edi
  4130bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130bd:	pop    esi
  4130be:	cmp    bh,BYTE PTR [ecx+edx*2]
  4130c1:	repz (bad) 
  4130c3:	pushf  
  4130c4:	lea    eax,[ebp+0x4d]
  4130c7:	nop
  4130c8:	stos   BYTE PTR es:[edi],al
  4130c9:	cmp    esi,DWORD PTR [edi-0x756ba493]
  4130cf:	and    ecx,DWORD PTR [ebx-0x66]
  4130d2:	pusha  
  4130d3:	xchg   DWORD PTR [ecx],ecx
  4130d5:	jne    0x4130a1
  4130d7:	cmp    esp,DWORD PTR [ebx-0x31]
  4130da:	push   ebx
  4130db:	and    BYTE PTR [edx+eax*2-0x11],ah
  4130df:	xlat   BYTE PTR ds:[ebx]
  4130e0:	dec    ebp
  4130e1:	les    edx,FWORD PTR [esi+0x6d68dd78]
  4130e7:	add    al,0xc2
  4130e9:	lods   eax,DWORD PTR ds:[esi]
  4130ea:	adc    BYTE PTR [edx+0x4849b202],dl
  4130f0:	jmp    0xfef69d3a
  4130f5:	pop    edi
  4130f6:	leave  
  4130f7:	mov    bh,0x96
  4130f9:	dec    ecx
  4130fa:	ss sbb eax,esi
  4130fd:	sti    
  4130fe:	jo     0x41310c
  413100:	scas   al,BYTE PTR es:[edi]
  413101:	mov    al,BYTE PTR [ebx+0x1cf90245]
  413107:	xor    al,0xe3
  413109:	fadd   DWORD PTR [edi+edx*8]
  41310c:	jg     0x4130e4
  41310e:	imul   ecx,DWORD PTR [ebp+0x24],0x81ae49bf
  413115:	mov    bl,0xe9
  413117:	stc    
  413118:	cmp    ebp,DWORD PTR [ebx+0x4f2b15e9]
  41311e:	mov    DWORD PTR [ebp+0x4542df4b],esi
  413124:	imul   ebp,edi,0xc08f7e9d
  41312a:	(bad)  
  41312b:	in     eax,0xa5
  41312d:	pop    ebp
  41312e:	jmp    0x413138
  413130:	pop    di
  413132:	es pop ebx
  413134:	cmp    DWORD PTR [esi-0x62],ebx
  413137:	inc    ecx
  413138:	pop    eax
  413139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41313a:	mov    ecx,0xaa416e30
  41313f:	in     al,dx
  413140:	pop    ss
  413141:	int3   
  413142:	iret   
  413143:	sti    
  413144:	lea    esp,ds:0x54e97649
  41314a:	les    edx,FWORD PTR [esi+ebp*4+0x55feab7c]
  413151:	jge    0x41310e
  413153:	adc    al,0x8d
  413155:	adc    eax,0x361a4e94
  41315a:	adc    ebp,esi
  41315c:	fsubr  QWORD PTR [ecx+ebx*8]
  41315f:	sbb    BYTE PTR [edx+0x4],bl
  413162:	mov    DWORD PTR [edi],esp
  413164:	jnp    0x4131aa
  413166:	mov    bl,0xd7
  413168:	xor    ecx,DWORD PTR [edx+0x6e]
  41316b:	xchg   edx,eax
  41316c:	inc    ebp
  41316d:	ins    BYTE PTR es:[edi],dx
  41316e:	ss jbe 0x4130fe
  413171:	pop    esp
  413172:	mov    DWORD PTR [ecx-0x4382401f],ecx
  413178:	cwde   
  413179:	test   eax,0x3cafb1bd
  41317e:	jnp    0x4131e8
  413180:	xchg   edi,eax
  413181:	(bad)  [eax+0xe]
  413184:	xchg   edi,eax
  413185:	add    eax,0xf9f98bfe
  41318a:	add    eax,0x5921d9b6
  41318f:	jnp    0x4131b7
  413191:	jg     0x413180
  413193:	in     eax,0xf0
  413195:	xchg   ebx,eax
  413196:	fmul   QWORD PTR [eax-0x8dc70e8]
  41319c:	push   eax
  41319d:	pop    eax
  41319e:	mov    ebp,edi
  4131a0:	mov    ah,BYTE PTR [esi+0x29a3b9]
  4131a6:	pushf  
  4131a7:	mov    edi,0x1955b2c1
  4131ac:	leave  
  4131ad:	mov    ecx,0xa51e2e04
  4131b2:	dec    edi
  4131b3:	bnd js 0x41322d
  4131b6:	out    dx,eax
  4131b7:	pop    ecx
  4131b8:	adc    eax,0xacb207ad
  4131bd:	sub    dh,BYTE PTR [edi+0x23559699]
  4131c3:	pop    ebp
  4131c4:	and    DWORD PTR [ecx],esp
  4131c6:	rcr    DWORD PTR [ebp+eiz*8-0x79628901],0x33
  4131ce:	scas   al,BYTE PTR es:[edi]
  4131cf:	ja     0x413204
  4131d1:	dec    ebp
  4131d2:	and    bh,BYTE PTR [edi-0x4f094b77]
  4131d8:	shl    DWORD PTR [esi-0x1bdba178],1
  4131de:	jp     0x41321e
  4131e0:	pop    ss
  4131e1:	je     0x41320b
  4131e3:	sub    DWORD PTR ss:[ebx+esi*8+0x13],eax
  4131e8:	sub    eax,0xd182894
  4131ed:	test   DWORD PTR [ecx+eax*2+0x2e],ebp
  4131f1:	(bad)  
  4131f2:	lods   eax,DWORD PTR ds:[esi]
  4131f3:	nop
  4131f4:	aam    0xb6
  4131f6:	gs cli 
  4131f8:	dec    ebx
  4131f9:	(bad)  
  4131fa:	cld    
  4131fb:	mov    ds:0x24900f9,eax
  413200:	or     ebx,DWORD PTR ds:0x855feef9
  413206:	jne    0x4131ef
  413208:	pop    es
  413209:	push   0xf2d71cbe
  41320e:	retf   
  41320f:	aad    0x70
  413211:	push   0xffffff94
  413213:	add    al,0x8b
  413215:	cdq    
  413216:	xchg   ebx,eax
  413217:	retf   0x45c9
  41321a:	fdiv   DWORD PTR [ebp+0x406a0036]
  413220:	sbb    BYTE PTR [edx],cl
  413222:	ret    
  413223:	imul   esp,DWORD PTR [eax+ebx*1+0x4f6be2db],0x37a13e42
  41322e:	sub    BYTE PTR [esi+eiz*1-0x3b4c52ff],bh
  413235:	sar    DWORD PTR [ecx+0x7b],1
  413238:	lahf   
  413239:	loopne 0x413214
  41323b:	rcr    DWORD PTR [ecx-0x57738ea8],cl
  413241:	pop    eax
  413242:	cwde   
  413243:	dec    ebp
  413244:	outs   dx,BYTE PTR ds:[esi]
  413245:	(bad)  
  413246:	(bad)  [ecx]
  413248:	out    0xd6,eax
  41324a:	outs   dx,DWORD PTR ds:[esi]
  41324b:	mov    esp,0x9d62cddf
  413250:	ret    
  413251:	or     DWORD PTR [esi],ebx
  413253:	and    ch,al
  413255:	and    DWORD PTR [eax+0x16c5924f],ebx
  41325b:	and    dh,al
  41325d:	ficom  WORD PTR [edx-0x41]
  413260:	cdq    
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	out    0x3b,eax
  413264:	jnp    0x4132be
  413266:	push   ebx
  413267:	iret   
  413268:	fxch   st(5)
  41326a:	mov    edi,0x150b5023
  41326f:	loope  0x413228
  413271:	mov    ecx,0x97e156f8
  413276:	dec    edi
  413277:	inc    esp
  413278:	jne    0x41326a
  41327a:	or     esp,DWORD PTR [ebx-0x746e4877]
  413280:	dec    edi
  413281:	dec    esp
  413282:	xor    DWORD PTR [ecx+0x35],0xaddb0798
  413289:	loope  0x413293
  41328b:	mov    ds:0xd173ba7f,al
  413290:	clc    
  413291:	xor    eax,0x105de2f8
  413297:	dec    esp
  413298:	push   edx
  413299:	adc    eax,0xd5d302fd
  41329e:	sub    eax,0xd97fb51b
  4132a3:	call   0x270aac1b
  4132a8:	fwait
  4132a9:	xor    al,0x80
  4132ab:	xor    al,0x42
  4132ad:	in     eax,0x97
  4132af:	and    ecx,ebp
  4132b1:	cmp    bl,BYTE PTR [edi]
  4132b3:	mov    esi,0xd1eab864
  4132b8:	ret    
  4132b9:	stc    
  4132ba:	retf   0x5670
  4132bd:	push   ecx
  4132be:	push   ebp
  4132bf:	adc    eax,DWORD PTR [eax]
  4132c1:	ds pop ecx
  4132c3:	xor    ah,BYTE PTR [ecx]
  4132c5:	xchg   ebp,eax
  4132c6:	lds    eax,FWORD PTR [esi-0x2a]
  4132c9:	dec    edx
  4132ca:	xor    bh,BYTE PTR [edx+esi*2+0x5f]
  4132ce:	lods   eax,DWORD PTR ds:[esi]
  4132cf:	xchg   esi,eax
  4132d0:	and    ah,BYTE PTR [edx-0x798da102]
  4132d6:	xchg   esp,eax
  4132d7:	or     al,0xf
  4132d9:	or     esi,0x51
  4132dc:	and    eax,0xc43b5022
  4132e1:	xchg   ebx,eax
  4132e2:	pop    es
  4132e3:	rcr    BYTE PTR [edi+ecx*8],cl
  4132e6:	aas    
  4132e7:	fcmovnbe st,st(4)
  4132e9:	pop    ebx
  4132ea:	mov    WORD PTR [esi+0x21ac013d],es
  4132f0:	lahf   
  4132f1:	loope  0x413312
  4132f3:	xchg   edx,eax
  4132f4:	mov    WORD PTR [edi+0x5c],?
  4132f7:	les    esp,FWORD PTR [ecx+eiz*4+0x62]
  4132fb:	sub    BYTE PTR [ebp+0x4c2fe8ea],ah
  413301:	fst    DWORD PTR [edx+0x4]
  413304:	std    
  413305:	gs int 0x30
  413308:	xchg   edx,eax
  413309:	and    cl,ch
  41330b:	xlat   BYTE PTR ds:[ebx]
  41330c:	ins    DWORD PTR es:[edi],dx
  41330d:	jle    0x41334d
  41330f:	stc    
  413310:	push   ecx
  413311:	push   0x9294826c
  413316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413318:	mov    esp,0x943d9341
  41331d:	cs xchg esi,eax
  41331f:	xor    edi,DWORD PTR [ebx+0x469a9d45]
  413325:	(bad)  
  413326:	cmc    
  413327:	dec    esp
  413328:	sbb    DWORD PTR [eax],0x881011c4
  41332e:	retf   
  41332f:	jns    0x413383
  413331:	outs   dx,BYTE PTR ds:[esi]
  413332:	push   edx
  413333:	test   BYTE PTR [edi],ch
  413335:	or     ecx,DWORD PTR [edi-0x47d472c3]
  41333b:	adc    dh,ah
  41333d:	neg    bh
  41333f:	xchg   esp,eax
  413340:	sbb    eax,0x5d0751e7
  413345:	or     BYTE PTR [edi-0x7b],bh
  413348:	lods   al,BYTE PTR ds:[esi]
  413349:	lds    eax,FWORD PTR [edx+0x70]
  41334c:	fidivr DWORD PTR ds:0x97c0c18b
  413352:	cli    
  413353:	into   
  413354:	cs repnz inc esp
  413357:	jno    0x4133af
  413359:	mov    esi,0xc4addf19
  41335e:	loopne 0x4133c1
  413360:	push   0xffffffcb
  413362:	mov    ebp,0x460d2494
  413367:	jmp    0x4132fc
  413369:	out    0xd5,eax
  41336b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41336c:	sub    bl,BYTE PTR [ebx]
  41336e:	pop    ecx
  41336f:	imul   ecx,DWORD PTR [ebp+esi*1+0x79],0xffffffdf
  413374:	sbb    DWORD PTR ds:0xe7e5b1e,ebx
  41337a:	adc    dl,ch
  41337c:	sub    BYTE PTR [ebx+0x42],dl
  41337f:	sub    ah,BYTE PTR [edi-0x23]
  413382:	out    0x60,eax
  413384:	sbb    al,0xf7
  413386:	mov    cl,0x1e
  413388:	(bad)  
  413389:	jp     0x4133a8
  41338b:	inc    eax
  41338c:	inc    eax
  41338d:	adc    DWORD PTR [eax-0x44fd5298],edi
  413393:	mov    ah,0xaa
  413395:	fadd   QWORD PTR [ecx]
  413397:	xor    BYTE PTR [ebp-0x2126be47],0xf7
  41339e:	and    BYTE PTR [ebp+0x3a735795],bl
  4133a4:	jg     0x413421
  4133a6:	fild   QWORD PTR cs:[eax]
  4133a9:	cli    
  4133aa:	out    0xa8,al
  4133ac:	enter  0x5337,0x50
  4133b0:	hlt    
  4133b1:	sar    cl,1
  4133b3:	or     edi,esi
  4133b5:	mov    esi,DWORD PTR [ebx]
  4133b7:	shl    DWORD PTR [ecx*4+0x3a6765e9],cl
  4133be:	cdq    
  4133bf:	xchg   ecx,eax
  4133c0:	mov    edi,0xffd8f6e6
  4133c5:	mov    ebx,ebp
  4133c7:	test   DWORD PTR [edi-0x26e91bfc],esi
  4133cd:	test   al,0xf4
  4133cf:	sti    
  4133d0:	cmp    eax,edx
  4133d2:	push   cs
  4133d3:	adc    eax,0xe1f29eb4
  4133d8:	loopne 0x41337e
  4133da:	sbb    ebp,DWORD PTR [ecx+0x203e199c]
  4133e0:	xor    bh,dl
  4133e2:	repz sti 
  4133e4:	mov    bl,0xab
  4133e6:	push   edx
  4133e7:	sbb    DWORD PTR [ebp+0x353885b7],0x61
  4133ee:	retf   
  4133ef:	pop    esp
  4133f0:	or     BYTE PTR [edx],dh
  4133f2:	in     al,0xc0
  4133f4:	scas   al,BYTE PTR es:[edi]
  4133f5:	repz pop edx
  4133f7:	je     0x4133b9
  4133f9:	leave  
  4133fa:	jne    0x4133be
  4133fc:	call   0x4b0230dc
  413401:	add    al,0x92
  413403:	pop    ss
  413404:	imul   dh
  413406:	adc    al,0xb5
  413408:	(bad)  
  413409:	and    esp,DWORD PTR [ecx]
  41340b:	mov    bh,0x1d
  41340d:	push   ebx
  41340e:	in     al,0x28
  413410:	jp     0x4133f3
  413412:	push   ecx
  413413:	aam    0x8b
  413415:	pop    esp
  413416:	xchg   edi,eax
  413417:	out    0xdf,al
  413419:	jbe    0x4133ca
  41341b:	wbinvd 
  41341d:	cmc    
  41341e:	or     al,0x39
  413420:	cld    
  413421:	cmp    dh,dh
  413423:	push   es
  413424:	or     ebx,DWORD PTR [eax]
  413426:	jbe    0x4133af
  413428:	adc    BYTE PTR [edi-0x6f],bl
  41342b:	mov    ecx,0xf377626c
  413430:	xor    al,0x30
  413432:	pop    eax
  413433:	and    eax,0x305aaa1a
  413438:	shl    DWORD PTR [edi],0x5c
  41343b:	pop    es
  41343c:	nop
  41343d:	ins    BYTE PTR es:[edi],dx
  41343e:	fild   DWORD PTR ss:[ecx-0x5b99811a]
  413445:	sahf   
  413446:	in     eax,dx
  413447:	push   0xc217acf1
  41344c:	adc    eax,0xd205988f
  413451:	jo     0x41344c
  413453:	mov    ds:0x120e6ea2,al
  413458:	stc    
  413459:	or     BYTE PTR [esi+0x71a967d2],ch
  41345f:	es ret 
  413461:	add    al,0x52
  413463:	fisub  WORD PTR [eax-0x36ab5824]
  413469:	sbb    cl,BYTE PTR [ebx]
  41346b:	ds xchg esp,eax
  41346d:	rol    DWORD PTR [esi-0x6f],0x2
  413471:	lods   al,BYTE PTR ds:[esi]
  413472:	push   esi
  413473:	ret    
  413474:	jb     0x41345c
  413476:	in     eax,0xc7
  413478:	push   ebp
  413479:	pop    edi
  41347a:	push   es
  41347b:	adc    eax,0x9651e996
  413480:	in     al,0xbb
  413482:	fdivr  st,st(1)
  413484:	mov    al,0x82
  413486:	jmp    0xf46e:0xccc3e75b
  41348d:	loop   0x4134ad
  41348f:	mov    bh,0x25
  413491:	popf   
  413492:	inc    edx
  413493:	(bad)  
  413494:	sub    DWORD PTR [ebx],edx
  413496:	xchg   ecx,eax
  413497:	or     BYTE PTR [ebp+0x7a],al
  41349a:	mov    al,0xfd
  41349c:	sub    dh,cl
  41349e:	ficomp DWORD PTR [eax]
  4134a0:	add    DWORD PTR [edx],eax
  4134a2:	or     BYTE PTR [ebp-0x7e],0xf5
  4134a6:	push   ss
  4134a7:	pop    ebx
  4134a8:	adc    eax,0xe01f3387
  4134ad:	xchg   edi,eax
  4134ae:	and    BYTE PTR [ebx-0x1cd123fe],dh
  4134b4:	pop    ebx
  4134b5:	and    eax,0x38913521
  4134ba:	cmp    eax,0x4cec7c0a
  4134bf:	mov    ds:0x2a132458,eax
  4134c4:	aaa    
  4134c5:	es xchg esp,eax
  4134c7:	or     cl,al
  4134c9:	rcr    BYTE PTR [eax-0x1049a603],cl
  4134cf:	aad    0x73
  4134d1:	call   0xc835:0xc3a0b146
  4134d8:	jne    0x41350d
  4134da:	sub    DWORD PTR [esi+0x253fbd3b],ebx
  4134e0:	adc    dh,BYTE PTR [ecx+0xc]
  4134e3:	scas   al,BYTE PTR es:[edi]
  4134e4:	in     al,dx
  4134e5:	xor    ecx,0x71ad5056
  4134eb:	sti    
  4134ec:	sub    al,0x36
  4134ee:	inc    ecx
  4134ef:	stc    
  4134f0:	add    al,BYTE PTR [edi]
  4134f2:	pop    edi
  4134f3:	push   ss
  4134f4:	aas    
  4134f5:	bound  ebx,QWORD PTR [esi+0x1b]
  4134f8:	pop    DWORD PTR [eax-0x3]
  4134fb:	out    0x75,eax
  4134fd:	rol    dh,0x65
  413500:	dec    edx
  413501:	mov    bl,0xad
  413503:	mov    esp,DWORD PTR [eax]
  413505:	jb     0x41356a
  413507:	loope  0x41357e
  413509:	or     bh,BYTE PTR [ebx+ebp*1+0x12]
  41350d:	jmp    0x9ab5:0xb27ceb9a
  413514:	pop    ds
  413515:	frstor [ebp-0x4]
  413518:	int    0x28
  41351a:	icebp  
  41351b:	pop    edi
  41351c:	jg     0x413575
  41351e:	mov    ds:0xe11a3231,eax
  413523:	and    eax,0xa5593c1c
  413528:	xchg   ebx,eax
  413529:	loopne 0x413578
  41352b:	out    0xe6,eax
  41352d:	adc    DWORD PTR [edx],0xffffffdb
  413530:	jle    0x41356b
  413532:	push   eax
  413533:	jb     0x413559
  413535:	ds push edi
  413537:	pop    edx
  413538:	cdq    
  413539:	xchg   ebp,eax
  41353a:	retf   0xce92
  41353d:	ins    DWORD PTR es:[edi],dx
  41353e:	loop   0x413530
  413540:	in     eax,0xf
  413542:	test   al,0xbc
  413544:	popf   
  413545:	inc    ecx
  413546:	test   DWORD PTR [ebx+0x32],0x243f8eb3
  41354d:	jno    0x413580
  41354f:	mov    cl,0xaa
  413551:	call   0x78d5135c
  413556:	fst    QWORD PTR [ebx]
  413558:	add    al,al
  41355a:	inc    edx
  41355b:	pop    edi
  41355c:	bound  esi,QWORD PTR ds:0x129ff019
  413562:	mov    cs,WORD PTR [esi-0x45]
  413565:	js     0x413511
  413567:	cmp    DWORD PTR [ecx],eax
  413569:	lahf   
  41356a:	mov    WORD PTR [edi-0x33],gs
  41356d:	xlat   BYTE PTR ds:[ebx]
  41356e:	mov    al,ds:0x465c42f8
  413573:	and    al,0x38
  413575:	and    BYTE PTR [ebp+eiz*1+0x5a],bl
  413579:	push   cs
  41357a:	add    eax,0x6b3d2e9f
  41357f:	mov    ebp,DWORD PTR [esi-0x5e]
  413582:	xor    eax,0x16857600
  413587:	jne    0x4135f5
  413589:	or     BYTE PTR [ebx+0x18],ah
  41358c:	pop    ss
  41358d:	mov    edi,edx
  41358f:	addr16 mov al,0x54
  413592:	test   DWORD PTR ds:0xbb03ab04,0x563c68ad
  41359c:	and    ebx,ecx
  41359e:	cmp    BYTE PTR [edx+0x38],0x81
  4135a2:	mov    bl,BYTE PTR [edx+esi*1]
  4135a5:	mov    ah,BYTE PTR [edi]
  4135a7:	ins    BYTE PTR es:[edi],dx
  4135a8:	jl     0x41354c
  4135aa:	mov    dh,0x55
  4135ac:	push   esi
  4135ad:	lods   eax,DWORD PTR ds:[esi]
  4135ae:	jae    0x4135e9
  4135b0:	dec    ebp
  4135b1:	cdq    
  4135b2:	fldenv [eax-0xb]
  4135b5:	jo     0x413576
  4135b7:	xor    al,0x1f
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	repnz retf 
  4135bc:	inc    ecx
  4135bd:	fisttp QWORD PTR [ebx-0x47]
  4135c0:	call   0xd017:0x6151b54b
  4135c7:	rcl    eax,0xd
  4135ca:	push   eax
  4135cb:	xor    al,BYTE PTR [esi]
  4135cd:	dec    ebx
  4135ce:	pop    es
  4135cf:	push   0x25
  4135d1:	popf   
  4135d2:	dec    edi
  4135d3:	fwait
  4135d4:	mov    ds:0xb8b2e0a9,al
  4135d9:	inc    ebp
  4135da:	fiadd  DWORD PTR [edi+0x52fd780f]
  4135e0:	adc    bh,dl
  4135e2:	mov    esi,0x8616b4c9
  4135e7:	inc    esi
  4135e8:	aam    0xcf
  4135ea:	ss jbe 0x4135d3
  4135ed:	pusha  
  4135ee:	sub    dh,BYTE PTR ds:0x1110adf7
  4135f4:	imul   edx,DWORD PTR [edx+0x31],0xfffffff9
  4135f8:	bound  eax,QWORD PTR [eax+0x14]
  4135fb:	jne    0x4135b4
  4135fd:	iret   
  4135fe:	sti    
  4135ff:	push   ecx
  413600:	mov    esi,0x5e9ba484
  413605:	lods   eax,DWORD PTR ds:[esi]
  413606:	add    BYTE PTR [ecx],al
  413608:	test   BYTE PTR [ebp-0x52],dh
  41360b:	xchg   ecx,eax
  41360c:	or     cl,ch
  41360e:	scas   eax,DWORD PTR es:[edi]
  41360f:	sbb    edi,0x91f9c16e
  413615:	aad    0x80
  413617:	pop    ebx
  413618:	push   cs
  413619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41361a:	xchg   ecx,eax
  41361b:	sbb    esi,edi
  41361d:	jecxz  0x413686
  41361f:	jmp    0x413652
  413621:	je     0x4135ba
  413623:	lock xor BYTE PTR [ebp+0x4c],ah
  413627:	cwde   
  413628:	out    0x40,al
  41362a:	inc    esp
  41362b:	out    dx,al
  41362c:	mov    edx,0x2bb4fcf8
  413631:	mov    esp,0x487def56
  413636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413637:	fbstp  TBYTE PTR [esi]
  413639:	je     0x413606
  41363b:	push   eax
  41363c:	imul   ecx,esp,0xffffffab
  41363f:	imul   ecx,DWORD PTR [ebp+0x1d],0x6d
  413643:	shr    DWORD PTR [ebp+0x36189f7],1
  413649:	(bad)  
  41364a:	mov    ch,0x7c
  41364c:	push   esi
  41364d:	add    eax,0xd1a03fb9
  413652:	fs mov bh,0xbb
  413655:	test   BYTE PTR [esi-0x4300fec9],dl
  41365b:	xor    eax,0x44733cc3
  413660:	and    BYTE PTR [ebx+0x6ab3205a],0x3a
  413667:	sahf   
  413668:	and    ah,BYTE PTR [ebx]
  41366a:	jnp    0x4136c9
  41366c:	shl    edx,cl
  41366e:	int3   
  41366f:	fst    QWORD PTR [ebp-0x62f794ad]
  413675:	cwde   
  413676:	xor    DWORD PTR [ebp-0x767cfbf9],eax
  41367c:	(bad)  
  41367d:	int    0x27
  41367f:	pop    esi
  413680:	nop
  413681:	mov    esp,0x8ad3462a
  413686:	(bad)  
  413687:	test   ah,0xb7
  41368a:	mov    DWORD PTR [edi],ebx
  41368c:	pop    eax
  41368d:	aaa    
  41368e:	cmp    dl,dl
  413690:	inc    ebp
  413691:	in     al,dx
  413692:	dec    esi
  413693:	push   0xffffffec
  413695:	into   
  413696:	fisubr DWORD PTR [ebx+0x77ccc6d8]
  41369c:	inc    esi
  41369d:	add    BYTE PTR [esi-0x6824ce5e],dl
  4136a3:	cmp    eax,0x3f6287d4
  4136a8:	mov    bl,bh
  4136aa:	ins    BYTE PTR es:[edi],dx
  4136ab:	cwde   
  4136ac:	push   edx
  4136ad:	dec    ebp
  4136ae:	retf   
  4136af:	rcr    DWORD PTR [ebx],1
  4136b1:	retf   0x9890
  4136b4:	pusha  
  4136b5:	jne    0x4136c4
  4136b7:	adc    al,dl
  4136b9:	ret    
  4136ba:	fisubr DWORD PTR fs:[esi+0x67b8378c]
  4136c1:	out    dx,eax
  4136c2:	adc    eax,DWORD PTR [ecx]
  4136c4:	fiadd  DWORD PTR [esi-0x35]
  4136c7:	dec    ecx
  4136c8:	out    dx,eax
  4136c9:	loope  0x4136eb
  4136cb:	push   ebp
  4136cc:	add    dl,dh
  4136ce:	mov    esi,0x33d8381
  4136d3:	or     al,BYTE PTR [ebx-0xd95b121]
  4136d9:	xor    al,0x3e
  4136db:	mov    esi,0x8dcb078d
  4136e0:	sbb    eax,0x8249c68d
  4136e5:	mov    ebp,0x5d50dd78
  4136ea:	fcmovnbe st,st(0)
  4136ec:	pop    ecx
  4136ed:	rcr    BYTE PTR [ebx],0xf0
  4136f0:	popfw  
  4136f2:	xor    bh,BYTE PTR [edi-0x1f7231d0]
  4136f8:	dec    esi
  4136f9:	loope  0x4136d4
  4136fb:	sahf   
  4136fc:	mov    ch,0x92
  4136fe:	push   ss
  4136ff:	pop    ebx
  413700:	sub    ch,bl
  413702:	push   ebx
  413703:	lods   al,BYTE PTR ds:[esi]
  413704:	pop    eax
  413705:	jecxz  0x4136e5
  413707:	lods   al,BYTE PTR ds:[esi]
  413708:	scas   al,BYTE PTR es:[edi]
  413709:	pusha  
  41370a:	in     al,dx
  41370b:	inc    ecx
  41370c:	jge    0x4136e2
  41370e:	pop    ebx
  41370f:	call   0xdd6f31eb
  413714:	jmp    0x4de5a133
  413719:	dec    edi
  41371a:	mov    eax,0xf5ee243c
  41371f:	jmp    0xfe16:0xb38eb762
  413726:	push   0x28
  413728:	inc    edx
  413729:	mov    bh,BYTE PTR [ebp-0x4d4243f9]
  41372f:	and    ch,BYTE PTR [eax-0x73]
  413732:	and    BYTE PTR [ecx+edi*4-0x3b018e5b],ch
  413739:	dec    edx
  41373a:	lods   eax,DWORD PTR ds:[esi]
  41373b:	stc    
  41373c:	stos   BYTE PTR es:[edi],al
  41373d:	xchg   esp,eax
  41373e:	repz dec ebx
  413740:	xor    ecx,DWORD PTR [eax]
  413742:	push   ss
  413743:	nop
  413744:	cmp    edi,ecx
  413746:	gs into 
  413748:	in     al,dx
  413749:	pusha  
  41374a:	add    bh,dl
  41374c:	sbb    edi,DWORD PTR ss:[ecx]
  41374f:	je     0x41378e
  413751:	mov    cl,0x8d
  413753:	fs sahf 
  413755:	pop    edi
  413756:	rol    BYTE PTR [ebp+0x3517de44],0x4b
  41375d:	std    
  41375e:	lahf   
  41375f:	imul   edx,DWORD PTR [eax+0xb],0x2f
  413763:	push   esi
  413764:	(bad)  
  413765:	retf   
  413766:	push   cs
  413767:	sub    eax,0x11eb4ee0
  41376c:	je     0x413757
  41376e:	push   0xbc3efc33
  413773:	push   ds
  413774:	and    DWORD PTR [esi+0x78103b4f],edi
  41377a:	ds retf 0xc1d4
  41377e:	es cmp eax,0x558fc8d0
  413784:	mov    esp,edx
  413786:	cld    
  413787:	(bad)  
  413788:	scas   al,BYTE PTR es:[di]
  41378a:	ja     0x41375e
  41378c:	sub    al,0x6f
  41378e:	or     al,0x6
  413790:	sub    DWORD PTR [edx-0x49ffe9c8],edi
  413796:	ins    BYTE PTR es:[edi],dx
  413797:	loop   0x4137b0
  413799:	mov    dl,0xd2
  41379b:	les    esp,FWORD PTR [ebp-0x27a31c27]
  4137a1:	shr    BYTE PTR [edi+ebx*1],cl
  4137a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137a5:	out    0x2f,al
  4137a7:	daa    
  4137a8:	rol    dh,cl
  4137aa:	jno    0x4137ad
  4137ac:	popa   
  4137ad:	jmp    0xc437:0x335f59b1
  4137b4:	cmovae eax,edi
  4137b7:	dec    ecx
  4137b8:	mov    cs,WORD PTR [edi+0x65]
  4137bb:	mov    dl,0x2a
  4137bd:	mov    edx,DWORD PTR [edi+0x452aebe2]
  4137c3:	out    dx,al
  4137c4:	mov    dl,0x26
  4137c6:	nop
  4137c7:	or     eax,DWORD PTR [esi-0x2b2751cb]
  4137cd:	mov    dh,0xf1
  4137cf:	mov    ebp,0xd4cb79a2
  4137d4:	lahf   
  4137d5:	mov    ch,0x94
  4137d7:	pop    ss
  4137d8:	dec    esi
  4137d9:	jbe    0x413835
  4137db:	cwde   
  4137dc:	popa   
  4137dd:	cmp    esp,DWORD PTR [ecx-0x60]
  4137e0:	add    al,0x81
  4137e2:	mov    cl,0x8e
  4137e4:	xor    bl,0x2
  4137e7:	jb     0x4137e7
  4137e9:	leave  
  4137ea:	(bad)  
  4137eb:	(bad)  
  4137ec:	mov    edx,ebx
  4137ee:	les    ecx,FWORD PTR [ecx]
  4137f0:	ins    DWORD PTR es:[edi],dx
  4137f1:	mov    ecx,0x2c69776e
  4137f6:	icebp  
  4137f7:	xor    BYTE PTR [ebx],dh
  4137f9:	bts    esp,eax
  4137fc:	adc    DWORD PTR [eax+0x761ae4ef],0x54
  413803:	gs pop eax
  413805:	sub    ch,BYTE PTR [eax-0x62]
  413808:	dec    esi
  413809:	lahf   
  41380a:	sub    dl,0x61
  41380d:	pop    ecx
  41380e:	aad    0xd2
  413810:	sbb    eax,0xc76af353
  413815:	imul   esp,DWORD PTR [ecx-0x47],0x38e936bd
  41381c:	in     al,0xf2
  41381e:	lahf   
  41381f:	add    DWORD PTR [edx],edi
  413821:	(bad)  
  413822:	push   0x3d
  413824:	xchg   edx,eax
  413825:	loopne 0x413836
  413827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413828:	adc    eax,esp
  41382a:	shl    BYTE PTR [ebp+edx*4-0x30],cl
  41382e:	pop    edi
  41382f:	xor    eax,0x3b1eb752
  413834:	icebp  
  413835:	neg    DWORD PTR [ecx-0x7a]
  413838:	ret    0x6fe9
  41383b:	jns    0x41384a
  41383d:	aas    
  41383e:	dec    ebx
  41383f:	dec    edx
  413840:	jno    0x41384d
  413842:	cld    
  413843:	push   esp
  413844:	iret   
  413845:	ret    0x4021
  413848:	(bad)
  41384b:	mov    al,ds:0xc01faf85
  413850:	dec    edx
  413851:	in     al,0x7c
  413853:	push   esi
  413854:	int3   
  413855:	and    BYTE PTR fs:[ebp+0x324d0481],0x37
  41385d:	ja     0x413874
  41385f:	inc    ecx
  413860:	inc    esi
  413861:	popa   
  413862:	mov    ecx,0x57fc1b5d
  413867:	pop    esi
  413868:	(bad)  [edi-0x5c]
  41386b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41386d:	mov    bl,0x4
  41386f:	ins    DWORD PTR es:[edi],dx
  413870:	hlt    
  413871:	popa   
  413872:	mov    dh,0xf9
  413874:	ret    0x5173
  413877:	jnp    0x41389a
  413879:	dec    edi
  41387a:	daa    
  41387b:	mov    edi,0x899ab47e
  413880:	mov    BYTE PTR [ecx+0x56],al
  413883:	dec    esi
  413884:	xchg   DWORD PTR [eax+0xc],esi
  413887:	pop    ebx
  413888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41388a:	out    0x49,eax
  41388c:	xlat   BYTE PTR ds:[ebx]
  41388d:	out    dx,eax
  41388e:	(bad)  
  41388f:	jl     0x413897
  413891:	adc    eax,0x29a6cde8
  413896:	(bad)  
  413897:	scas   al,BYTE PTR es:[edi]
  413898:	mov    eax,ds:0xa70d2d07
  41389d:	push   ss
  41389e:	mov    bl,0xf2
  4138a0:	sti    
  4138a1:	out    0x60,eax
  4138a3:	scas   al,BYTE PTR es:[edi]
  4138a4:	adc    ebp,ebx
  4138a6:	cmp    eax,esp
  4138a8:	int    0x69
  4138aa:	sti    
  4138ab:	adc    ah,BYTE PTR [ebp+0x6e0f4d8e]
  4138b1:	pop    es
  4138b2:	mov    al,ds:0x4cfc1648
  4138b7:	in     al,0x7a
  4138b9:	xor    bl,ch
  4138bb:	xor    DWORD PTR [ebp+0x5e],edi
  4138be:	mov    al,ds:0xe8353001
  4138c3:	mov    ecx,0x99948561
  4138c8:	and    al,0x22
  4138ca:	outs   dx,BYTE PTR ds:[esi]
  4138cb:	inc    ebp
  4138cc:	rol    BYTE PTR [ecx],1
  4138ce:	ja     0x4138cb
  4138d0:	fisubr DWORD PTR [ebx-0x24fcd5d9]
  4138d6:	xchg   ecx,eax
  4138d7:	adc    bl,BYTE PTR [eax-0x7b]
  4138da:	aam    0x52
  4138dc:	dec    eax
  4138dd:	sbb    al,BYTE PTR [ebx-0x7a71747f]
  4138e3:	out    dx,al
  4138e4:	sbb    al,0x58
  4138e6:	mov    ch,0x15
  4138e8:	fild   WORD PTR [ecx-0x7668f980]
  4138ee:	cs stos BYTE PTR es:[edi],al
  4138f0:	mov    ds:0x9b77aae3,al
  4138f5:	or     edx,DWORD PTR [edi]
  4138f7:	mov    esi,0xec55c49b
  4138fc:	sbb    ebx,DWORD PTR [ecx-0x9d1a91d]
  413902:	jo     0x4138fb
  413904:	pop    edi
  413905:	or     ch,0x79
  413908:	inc    ecx
  413909:	sub    eax,0x4dbfe1d8
  41390e:	xor    DWORD PTR [esi+0x34],edx
  413911:	rcr    ecx,1
  413913:	xchg   ecx,eax
  413914:	mov    edi,0x83cf94e6
  413919:	lods   eax,DWORD PTR ds:[esi]
  41391a:	stos   BYTE PTR es:[edi],al
  41391b:	mov    al,ds:0xc572d3cc
  413920:	(bad)  
  413921:	inc    edx
  413922:	gs mov bh,0xa1
  413925:	add    ch,BYTE PTR [esp+ebx*8]
  413928:	fidivr DWORD PTR [edx-0x7486a691]
  41392e:	out    dx,al
  41392f:	pop    edx
  413930:	mov    edx,0x5c5beb4c
  413935:	pop    esp
  413936:	dec    eax
  413937:	and    BYTE PTR [ebp+0xde641c1],bh
  41393d:	shr    al,0x45
  413940:	or     DWORD PTR [ecx],0xae8022df
  413946:	cmc    
  413947:	popf   
  413948:	clc    
  413949:	dec    esp
  41394a:	repz cmp cl,al
  41394d:	pop    edx
  41394e:	repz out 0x5e,al
  413951:	xor    bh,0x9f
  413954:	cli    
  413955:	sub    eax,0xff25b378
  41395a:	(bad)  
  41395b:	jo     0x4138f7
  41395d:	shr    BYTE PTR [edx],cl
  41395f:	test   DWORD PTR [ecx+ebx*1-0x558d5f38],0xa3cc2c
  41396a:	mov    ecx,0x5fe07e05
  41396f:	push   esp
  413970:	pop    es
  413971:	sbb    BYTE PTR [ebx-0x79],ah
  413974:	ins    BYTE PTR es:[edi],dx
  413975:	pop    ebx
  413976:	out    dx,al
  413977:	ss inc ebp
  413979:	data16 (bad) 
  41397b:	out    dx,ax
  41397d:	(bad)  
  41397e:	lock push esp
  413980:	or     ecx,ebp
  413982:	test   BYTE PTR [ebx+0x578cc6bd],al
  413988:	ret    0x42bb
  41398b:	add    DWORD PTR [eax-0x4d],esi
  41398e:	fwait
  41398f:	rol    DWORD PTR [ebx+eax*1],0x57
  413993:	and    BYTE PTR [edi+0x30],dl
  413996:	dec    ebp
  413997:	mov    esi,0x3ee5e3b5
  41399c:	inc    esp
  41399d:	push   ss
  41399e:	xchg   ebx,eax
  41399f:	cmp    eax,DWORD PTR [ebx+edi*2+0xe]
  4139a3:	out    0x30,al
  4139a5:	xor    eax,0xa58047d6
  4139aa:	mov    eax,ds:0xea17d556
  4139af:	push   ebx
  4139b0:	xchg   esi,eax
  4139b1:	mov    dh,0x53
  4139b3:	js     0x4139f0
  4139b5:	sbb    eax,0xb8e075fc
  4139ba:	lea    eax,[edi+ecx*4]
  4139bd:	iret   
  4139be:	(bad)  
  4139bf:	lock jne 0x4139b7
  4139c2:	repnz mov esp,0x808ed551
  4139c8:	jnp    0x413987
  4139ca:	repnz cmp BYTE PTR [esi-0x38],dl
  4139ce:	test   DWORD PTR [esi-0x64],ebx
  4139d1:	dec    edx
  4139d2:	or     al,0x16
  4139d4:	cld    
  4139d5:	push   0xffffffdc
  4139d7:	dec    ebp
  4139d8:	jge    0x4139ba
  4139da:	in     al,0xea
  4139dc:	jl     0x4139a3
  4139de:	in     al,0xee
  4139e0:	mov    al,ds:0xbc017bc4
  4139e5:	(bad)  
  4139e6:	pop    ecx
  4139e7:	mov    bh,BYTE PTR [ecx+0xa78175a]
  4139ed:	(bad)  
  4139ee:	lods   al,BYTE PTR ds:[esi]
  4139ef:	or     al,al
  4139f1:	stos   BYTE PTR es:[edi],al
  4139f2:	cmp    DWORD PTR ds:0xd8be726d,eax
  4139f8:	sub    ah,BYTE PTR [edx+0x5a554172]
  4139fe:	push   edi
  4139ff:	addr16 loopne 0x413a33
  413a02:	je     0x4139f4
  413a04:	and    al,0xc2
  413a06:	mov    al,0x82
  413a08:	(bad)  
  413a09:	loopne 0x413a04
  413a0b:	mov    ah,0xee
  413a0d:	pop    eax
  413a0e:	cmc    
  413a0f:	mov    cl,0x5c
  413a11:	imul   eax,DWORD PTR [esi],0xbfea37f1
  413a17:	and    al,0x6
  413a19:	shr    DWORD PTR [esi+0x7aa104ac],0xde
  413a20:	std    
  413a21:	push   cs
  413a22:	fcmovnu st,st(2)
  413a24:	mov    ds:0xe94f715b,al
  413a29:	xor    DWORD PTR [esi],esp
  413a2b:	mov    edx,0x88c4b3cc
  413a30:	mov    ecx,0x3d064924
  413a35:	inc    eax
  413a36:	xlat   BYTE PTR ds:[ebx]
  413a37:	mul    DWORD PTR [esi]
  413a39:	ffreep st(3)
  413a3b:	cmp    dl,ch
  413a3d:	sub    ch,BYTE PTR [ebx+0x3f]
  413a40:	cld    
  413a41:	push   edx
  413a42:	sbb    ch,BYTE PTR [ebp+0x30]
  413a45:	cmp    DWORD PTR [edx],edx
  413a47:	(bad)  
  413a48:	and    cl,dl
  413a4a:	cmovns esp,DWORD PTR [ebx-0x18]
  413a4e:	mov    dh,0xc9
  413a50:	sbb    esp,eax
  413a52:	adc    al,0x84
  413a54:	inc    esp
  413a55:	scas   al,BYTE PTR es:[edi]
  413a56:	lahf   
  413a57:	xchg   DWORD PTR [edx],ebx
  413a59:	call   0xbd7fba1f
  413a5e:	lods   al,BYTE PTR ds:[esi]
  413a5f:	sbb    al,0x79
  413a61:	das    
  413a62:	cs neg esp
  413a65:	jo     0x413a18
  413a67:	jl     0x413a89
  413a69:	xchg   edx,eax
  413a6a:	cmp    eax,0xdf4c494c
  413a6f:	or     ebp,DWORD PTR ds:0x6fc2366a
  413a75:	add    DWORD PTR [esi+0x79],ebx
  413a78:	stos   DWORD PTR es:[edi],eax
  413a79:	aaa    
  413a7a:	mov    ebx,0xe00cb99e
  413a7f:	fidivr DWORD PTR ds:0x88e7798b
  413a85:	jbe    0x413ae2
  413a87:	pop    eax
  413a88:	in     al,dx
  413a89:	xor    eax,0x75227088
  413a8e:	pavgb  mm2,mm5
  413a91:	pop    edi
  413a92:	sub    al,0xce
  413a94:	int    0xb6
  413a96:	xchg   ecx,eax
  413a97:	push   ebx
  413a98:	repnz in al,dx
  413a9a:	inc    ebx
  413a9b:	test   ah,ch
  413a9d:	push   esi
  413a9e:	(bad)  
  413a9f:	(bad)  
  413aa0:	sub    al,0xdb
  413aa2:	sar    ecx,0x53
  413aa5:	adc    al,BYTE PTR [ecx+0x3b]
  413aa8:	or     DWORD PTR [edi-0x48],edi
  413aab:	xor    edx,esi
  413aad:	push   es
  413aae:	sub    ebp,DWORD PTR es:[esi+0x29]
  413ab2:	sbb    DWORD PTR [eax-0x104992e2],ebp
  413ab8:	ds push ss
  413aba:	inc    esi
  413abb:	jo     0x413a78
  413abd:	rcl    ah,1
  413abf:	sbb    eax,0xc089d198
  413ac4:	inc    ebx
  413ac5:	aam    0x81
  413ac7:	mov    ch,0xe7
  413ac9:	lahf   
  413aca:	xchg   edi,eax
  413acb:	aas    
  413acc:	bound  ebp,QWORD PTR [esp+ebx*8]
  413acf:	aaa    
  413ad0:	test   DWORD PTR [edi],ecx
  413ad2:	add    edx,eax
  413ad4:	mov    edx,0x86ee5d3d
  413ad9:	retf   
  413ada:	mov    gs:0x48c19bc,ax
  413ae1:	push   0xffffffdb
  413ae3:	mov    al,0xd1
  413ae5:	ret    0xb56f
  413ae8:	xor    al,0x7d
  413aea:	jno    0x413b06
  413aec:	movzx  edx,BYTE PTR [edi-0x6f]
  413af0:	cmp    al,BYTE PTR ds:0xa9a46de8
  413af6:	in     al,0x8b
  413af8:	hlt    
  413af9:	int    0x36
  413afb:	sbb    al,0x7e
  413afd:	lock xchg ecx,eax
  413aff:	out    dx,al
  413b00:	test   eax,0x2c72f258
  413b05:	aam    0x8
  413b07:	jmp    0x4d62:0xc72ecda7
  413b0e:	push   esp
  413b0f:	cmp    DWORD PTR [edi+0x5e],0x57cdb656
  413b16:	mov    di,0xc5f2
  413b1a:	xor    ebp,edi
  413b1c:	jmp    0xe7d7dd4e
  413b21:	loopne 0x413b31
  413b23:	mov    ah,0xde
  413b25:	addr16 lock lds esp,FWORD PTR [si+0x71c4]
  413b2c:	push   edx
  413b2d:	and    ah,BYTE PTR [esi]
  413b2f:	pop    ebp
  413b30:	push   ds
  413b31:	aad    0x26
  413b33:	pop    ecx
  413b34:	shl    DWORD PTR [eax+0x7c],cl
  413b37:	adc    edi,esp
  413b39:	std    
  413b3a:	mov    al,0xa
  413b3c:	arpl   WORD PTR [ebx+0x5a524751],bx
  413b42:	fistp  DWORD PTR [esi-0x764b39f8]
  413b48:	test   al,0xd2
  413b4a:	(bad)  
  413b4b:	xlat   BYTE PTR ds:[ebx]
  413b4c:	push   ebx
  413b4d:	xor    al,0xc5
  413b4f:	mov    DWORD PTR [ecx-0x1cd3ae5],edx
  413b55:	push   cs
  413b56:	push   edx
  413b57:	mov    al,0xc1
  413b59:	sbb    dh,cl
  413b5b:	(bad)  
  413b5c:	js     0x413bc4
  413b5e:	mov    edi,0x6dc82dad
  413b63:	shr    DWORD PTR [bp-0x3e],cl
  413b67:	or     al,0xf4
  413b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b6a:	and    al,0x4b
  413b6c:	mov    al,ds:0xc3fe82cd
  413b71:	and    ebx,DWORD PTR [ebx]
  413b73:	ret    
  413b74:	cwde   
  413b75:	cdq    
  413b76:	push   ds
  413b77:	mov    ebx,0x1cf8fb92
  413b7c:	xor    eax,0x48843fcc
  413b81:	cvttps2pi mm2,QWORD PTR [edi+0x7233b043]
  413b88:	xor    eax,0x2282b54
  413b8d:	inc    ebx
  413b8e:	int3   
  413b8f:	xor    DWORD PTR [esi],0x18
  413b92:	mov    ch,0xa3
  413b94:	js     0x413b57
  413b96:	jns    0x413b93
  413b98:	pop    es
  413b99:	mov    dh,0xf2
  413b9b:	cmp    ebp,DWORD PTR [ecx]
  413b9d:	inc    edx
  413b9e:	ja     0x413b4f
  413ba0:	mov    BYTE PTR [ebx+edx*2+0xf],cl
  413ba4:	data16 add BYTE PTR es:[eax+0xfa70c9b],ch
  413bac:	out    dx,al
  413bad:	or     al,0x12
  413baf:	ins    BYTE PTR es:[edi],dx
  413bb0:	jb     0x413bc4
  413bb2:	sti    
  413bb3:	test   DWORD PTR [ecx+eax*1+0x591e016a],0xbaa201e2
  413bbe:	aad    0xd9
  413bc0:	out    dx,eax
  413bc1:	sbb    al,0x4b
  413bc3:	lahf   
  413bc4:	out    0x4e,al
  413bc6:	out    dx,al
  413bc7:	cmp    ah,ah
  413bc9:	cwde   
  413bca:	popa   
  413bcb:	shl    eax,0xac
  413bce:	retf   0xff6a
  413bd1:	add    al,0xa4
  413bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bd4:	or     al,BYTE PTR [eax]
  413bd6:	out    dx,eax
  413bd7:	bound  esp,QWORD PTR [ecx+0x2157138c]
  413bdd:	lea    edi,[ecx-0x7d]
  413be0:	xlat   BYTE PTR ds:[ebx]
  413be1:	clc    
  413be2:	test   al,0xdd
  413be4:	jne    0x413bad
  413be6:	shl    bl,0x7
  413be9:	mov    al,ds:0x940ed098
  413bee:	inc    ebx
  413bef:	fbld   TBYTE PTR [ecx+edi*1+0x3b331334]
  413bf6:	mov    ebx,0xcbe492c8
  413bfb:	(bad)  
  413bfc:	jmp    0x413bd0
  413bfe:	mov    WORD PTR [esi-0x3],?
  413c01:	shl    DWORD PTR [edx],cl
  413c03:	enter  0x28c6,0xe1
  413c07:	outs   dx,BYTE PTR ds:[esi]
  413c08:	mov    edx,0xb5b930df
  413c0d:	pop    edx
  413c0e:	(bad)  
  413c10:	shl    DWORD PTR [edx],1
  413c12:	mov    BYTE PTR [edx],bl
  413c14:	nop
  413c15:	mov    edx,0xe84b87c5
  413c1a:	sub    cl,BYTE PTR [edx]
  413c1c:	adc    al,0x41
  413c1e:	pushf  
  413c1f:	in     eax,dx
  413c20:	jle    0x413ba8
  413c22:	xor    BYTE PTR [esi-0x5d48ef01],dh
  413c28:	loop   0x413ca3
  413c2a:	ins    BYTE PTR es:[edi],dx
  413c2b:	pop    ss
  413c2c:	adc    BYTE PTR [ebx],0xb6
  413c2f:	push   ebp
  413c30:	sbb    eax,0xb0fda10b
  413c35:	jp     0x413c0c
  413c37:	cmp    eax,0xa669b62a
  413c3c:	js     0x413bfa
  413c3e:	jnp    0x413cac
  413c40:	adc    ebx,edi
  413c42:	inc    edx
  413c43:	popa   
  413c44:	mov    ebx,0xedf4b054
  413c49:	jmp    0xcb31:0x9921c070
  413c50:	and    BYTE PTR [edi-0x42],0xe6
  413c54:	clc    
  413c55:	pop    ebx
  413c56:	push   0xffffffd7
  413c58:	inc    ecx
  413c59:	in     eax,dx
  413c5a:	mov    edx,0xe4a93dcc
  413c5f:	mov    esi,0xba357704
  413c64:	jns    0x413cac
  413c66:	dec    ebx
  413c67:	pop    esi
  413c68:	loope  0x413c41
  413c6a:	jl     0x413cbe
  413c6c:	in     eax,dx
  413c6d:	xchg   ebp,eax
  413c6e:	retf   
  413c6f:	xor    eax,DWORD PTR [ecx]
  413c71:	and    al,bl
  413c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c74:	jbe    0x413cc2
  413c76:	inc    ebp
  413c77:	mov    ah,0x59
  413c79:	jne    0x413cab
  413c7b:	ficomp WORD PTR [ebp+0x512c1b14]
  413c81:	iret   
  413c82:	sar    BYTE PTR [ecx-0xc],cl
  413c85:	jne    0x413c4a
  413c87:	xchg   DWORD PTR [esi],edi
  413c89:	loop   0x413c3f
  413c8b:	pushf  
  413c8c:	iret   
  413c8d:	push   ebp
  413c8e:	pop    ecx
  413c8f:	cmp    esp,DWORD PTR [ecx-0x7b]
  413c92:	shr    DWORD PTR [ebx+ecx*8-0x1edbc608],0x1f
  413c9a:	cmp    al,0x2a
  413c9c:	cs push edx
  413c9e:	mov    WORD PTR [eax-0xa97093f],es
  413ca4:	push   ebx
  413ca5:	jg     0x413c99
  413ca7:	loope  0x413c72
  413ca9:	and    al,0xfd
  413cab:	jecxz  0x413c3d
  413cad:	ja     0x413c3e
  413caf:	out    0xd2,al
  413cb1:	dec    edx
  413cb2:	cmp    al,0x36
  413cb4:	pop    ds
  413cb5:	lock inc ebp
  413cb7:	mov    bh,ah
  413cb9:	mov    ebp,0x6c853d73
  413cbe:	inc    ebx
  413cbf:	push   ds
  413cc0:	push   ecx
  413cc1:	and    eax,esi
  413cc3:	stos   BYTE PTR es:[edi],al
  413cc4:	int3   
  413cc5:	mov    bh,BYTE PTR [edi-0x7a]
  413cc8:	and    esi,DWORD PTR [edx+0x5d755159]
  413cce:	jle    0x413d38
  413cd0:	lods   eax,DWORD PTR ds:[esi]
  413cd1:	or     esp,DWORD PTR [esi]
  413cd3:	jg     0x413d27
  413cd5:	mov    WORD PTR [esi+0x450720b8],cs
  413cdb:	icebp  
  413cdc:	(bad)  
  413cdd:	jae    0x413d33
  413cdf:	icebp  
  413ce0:	xor    ecx,DWORD PTR [edx-0x18093bc1]
  413ce6:	fwait
  413ce7:	and    BYTE PTR [ecx],dh
  413ce9:	sbb    esi,DWORD PTR [eax+0x77]
  413cec:	test   DWORD PTR [eax],ebp
  413cee:	pushf  
  413cef:	and    eax,0xc3c65c8
  413cf4:	jp     0x413d18
  413cf6:	sbb    BYTE PTR [edi+0x5d],dh
  413cf9:	ins    DWORD PTR es:[edi],dx
  413cfa:	xor    al,0xe5
  413cfc:	jg     0x413cb8
  413cfe:	xchg   BYTE PTR [eax],cl
  413d00:	pop    esi
  413d01:	in     eax,dx
  413d02:	(bad)  
  413d03:	(bad)  
  413d04:	mov    cl,0xfc
  413d06:	and    esi,ebp
  413d08:	stos   DWORD PTR es:[edi],eax
  413d09:	sti    
  413d0a:	pusha  
  413d0b:	pushf  
  413d0c:	mov    edx,edx
  413d0e:	mov    edi,0x668a8fb7
  413d13:	fiadd  WORD PTR [esi-0x4a]
  413d16:	fcomp  DWORD PTR [ebx+ebx*4]
  413d19:	mov    esi,0xbe99dde3
  413d1e:	call   0xc9da:0x50282c9c
  413d25:	sub    al,0x80
  413d27:	inc    edi
  413d28:	adc    BYTE PTR [esi+0x62389f84],0xe9
  413d2f:	dec    ebx
  413d30:	mov    eax,0x88dc2b3c
  413d35:	and    BYTE PTR [ebp-0x30],bl
  413d38:	push   cs
  413d39:	daa    
  413d3a:	sub    edi,0x6b
  413d3d:	adc    DWORD PTR [eax],edi
  413d3f:	ins    BYTE PTR es:[edi],dx
  413d40:	out    dx,al
  413d41:	dec    ebp
  413d42:	stos   DWORD PTR es:[edi],eax
  413d43:	dec    esi
  413d44:	dec    eax
  413d45:	cmp    DWORD PTR [esi-0x3441ac4b],ebp
  413d4b:	(bad)  
  413d4c:	xchg   edx,eax
  413d4d:	out    0x69,eax
  413d4f:	cmp    eax,0x58db54ba
  413d54:	push   esi
  413d55:	daa    
  413d56:	int3   
  413d57:	es jg  0x413d95
  413d5a:	outs   dx,DWORD PTR ds:[esi]
  413d5b:	js     0x413d3f
  413d5d:	sbb    BYTE PTR [ebx-0x4e0b95dd],ah
  413d63:	mov    ebp,0x72ba9c93
  413d68:	lods   al,BYTE PTR ds:[esi]
  413d69:	fs daa 
  413d6b:	jp     0x413d1f
  413d6d:	inc    ebx
  413d6e:	fnstsw WORD PTR [edi-0x337d19ff]
  413d74:	jp     0x413d57
  413d76:	dec    DWORD PTR [ebx]
  413d78:	mov    bl,0x6c
  413d7a:	test   al,0x92
  413d7c:	scas   eax,DWORD PTR es:[edi]
  413d7d:	es inc edi
  413d7f:	fstp   QWORD PTR [esi+eax*2+0x746e82c4]
  413d86:	retf   
  413d87:	cmp    al,0x9a
  413d89:	repz pop edi
  413d8b:	std    
  413d8c:	jno    0x413d3f
  413d8e:	mov    ?,WORD PTR [edi+0x51]
  413d91:	out    0xdf,eax
  413d93:	mov    dh,ch
  413d95:	push   ss
  413d96:	ret    0x28e7
  413d99:	lods   al,BYTE PTR ds:[esi]
  413d9a:	add    eax,0x3b7de906
  413d9f:	jns    0x413d27
  413da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da2:	out    dx,eax
  413da3:	mov    ebx,0x53cd1d20
  413da8:	push   ecx
  413da9:	bound  ebp,QWORD PTR [ebp+0x57924445]
  413daf:	scas   eax,DWORD PTR es:[edi]
  413db0:	push   0x7bcbdd94
  413db5:	mov    edi,0xb371d71f
  413dba:	or     eax,ecx
  413dbc:	stc    
  413dbd:	pop    ss
  413dbe:	xchg   DWORD PTR [edx],eax
  413dc0:	cld    
  413dc1:	aaa    
  413dc2:	rcr    bh,1
  413dc4:	xchg   ebp,eax
  413dc5:	test   eax,0x9b554501
  413dca:	sub    dh,BYTE PTR [esi]
  413dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dcd:	xchg   edx,eax
  413dce:	arpl   WORD PTR [edx+0x1127156a],dx
  413dd4:	stc    
  413dd5:	jmp    0xefbd:0x214db0e4
  413ddc:	fs push 0xaf787c1e
  413de2:	adc    BYTE PTR [ecx],cl
  413de4:	cwde   
  413de5:	sub    eax,0x7ecd69a1
  413dea:	sbb    bl,ch
  413dec:	jno    0x413db7
  413dee:	xchg   esi,eax
  413def:	mov    edx,0x14c994db
  413df4:	xor    ecx,ecx
  413df6:	sahf   
  413df7:	int    0x23
  413df9:	enter  0x6a5b,0x76
  413dfd:	shl    bl,0xd3
  413e00:	dec    eax
  413e01:	rol    BYTE PTR [ebx],cl
  413e03:	push   esp
  413e04:	sbb    al,0xf5
  413e06:	cs ins DWORD PTR es:[edi],dx
  413e08:	adc    cl,ch
  413e0a:	mov    bh,0xa7
  413e0c:	push   cs
  413e0d:	push   edx
  413e0e:	hlt    
  413e0f:	sub    al,0x73
  413e11:	popa   
  413e12:	add    al,0x8b
  413e14:	mov    al,ds:0x8bb5a7cc
  413e19:	adc    BYTE PTR [edx+0x41],0x63
  413e1d:	loopne 0x413dff
  413e1f:	mov    ds:0xe0d6c72d,eax
  413e24:	push   ebp
  413e25:	pop    ecx
  413e26:	jle    0x413e07
  413e28:	fcom   QWORD PTR [esi]
  413e2a:	jp     0x413e97
  413e2c:	mov    eax,ds:0x221077f6
  413e31:	cmc    
  413e32:	sar    DWORD PTR [edx],0x7
  413e35:	push   edx
  413e36:	std    
  413e37:	cwde   
  413e38:	es push eax
  413e3a:	leave  
  413e3b:	pop    esi
  413e3c:	mov    ecx,0x6306f775
  413e41:	jne    0x413e8d
  413e43:	popa   
  413e44:	dec    esi
  413e45:	mov    cl,0x62
  413e47:	in     eax,0xb4
  413e49:	fsubrp st(0),st
  413e4b:	cmp    DWORD PTR fs:[eax+0x2f],ecx
  413e4f:	aas    
  413e50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e51:	hlt    
  413e52:	les    ebp,FWORD PTR [edi+0x57bb34f7]
  413e58:	cs ret 0xbaa8
  413e5c:	dec    ebp
  413e5d:	sbb    bh,BYTE PTR [si]
  413e60:	xor    DWORD PTR [esi+0x5e58092],esp
  413e66:	inc    edx
  413e67:	sahf   
  413e68:	sub    al,0xa0
  413e6a:	sub    DWORD PTR [esi],edx
  413e6c:	dec    ebp
  413e6d:	pop    es
  413e6e:	int    0x66
  413e70:	rcl    cl,cl
  413e72:	nop
  413e73:	fcomp  DWORD PTR [edi]
  413e75:	mov    al,0x64
  413e77:	or     BYTE PTR [ecx+0x5c7627f3],0x87
  413e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e7f:	clc    
  413e80:	rol    DWORD PTR [ebx+0x13681c16],0x26
  413e87:	mov    ebp,DWORD PTR [esi-0x72cdb733]
  413e8d:	xchg   edi,eax
  413e8e:	aaa    
  413e8f:	push   ecx
  413e90:	fnstcw WORD PTR [edi+0x7d]
  413e93:	sbb    ebx,DWORD PTR [ebp-0x19]
  413e96:	enter  0x4aa,0xd5
  413e9a:	jmp    0x413ef9
  413e9c:	mov    ds:0x3f18f27e,eax
  413ea1:	dec    edx
  413ea2:	or     eax,0xad731a6c
  413ea7:	(bad)  
  413ea8:	pop    ebx
  413ea9:	fistp  DWORD PTR [edx-0x5e]
  413eac:	and    edx,DWORD PTR [esi]
  413eae:	js     0x413ed1
  413eb0:	mov    bh,0x94
  413eb2:	out    0x94,eax
  413eb4:	es je  0x413e7e
  413eb7:	pop    ebp
  413eb8:	js     0x413ed6
  413eba:	pop    esp
  413ebb:	sub    DWORD PTR [esi+0x5cabbab3],esi
  413ec1:	adc    BYTE PTR [ecx-0xe60c302],bl
  413ec7:	push   0xb53095c
  413ecc:	pop    ecx
  413ecd:	jl     0x413eb1
  413ecf:	adc    eax,0x28d0d02d
  413ed4:	ja     0x413f45
  413ed6:	addr16 test ecx,ebx
  413ed9:	into   
  413eda:	stos   BYTE PTR es:[edi],al
  413edb:	(bad)  
  413edc:	int    0x78
  413ede:	xchg   edx,eax
  413edf:	mov    eax,0x1e95344b
  413ee4:	(bad)  
  413ee5:	clc    
  413ee6:	cld    
  413ee7:	adc    DWORD PTR [edx],0x7b554547
  413eed:	mov    al,ds:0xa664df50
  413ef2:	mov    ebx,0x322f6818
  413ef7:	fdiv   QWORD PTR [ebx-0x3c]
  413efa:	add    cl,BYTE PTR [esi+0x72]
  413efd:	xchg   edi,eax
  413efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eff:	push   esi
  413f00:	inc    edx
  413f01:	shl    DWORD PTR [ebx+0x3f8dfc1],1
  413f07:	mov    dl,0x6
  413f09:	pop    esi
  413f0a:	ds mov eax,0xb7174d5c
  413f10:	add    dl,BYTE PTR [ebp+0x7a0ed067]
  413f16:	in     al,dx
  413f17:	sub    edx,esp
  413f19:	jmp    0x6ea3:0xab37a9a7
  413f20:	jb     0x413f1c
  413f22:	lods   al,BYTE PTR ds:[esi]
  413f23:	int3   
  413f24:	in     eax,dx
  413f25:	push   ds
  413f26:	(bad)  
  413f27:	in     al,dx
  413f28:	repnz push ebx
  413f2a:	push   ebx
  413f2b:	loope  0x413f0a
  413f2d:	std    
  413f2e:	mov    bl,0x25
  413f30:	cdq    
  413f31:	rcr    bh,0xf8
  413f34:	and    al,0xb6
  413f36:	out    dx,al
  413f37:	sbb    dh,BYTE PTR ds:0xb2884d4e
  413f3d:	ret    
  413f3e:	clc    
  413f3f:	cmc    
  413f40:	jne    0x413f83
  413f42:	jg     0x413f42
  413f44:	jmp    0x413f84
  413f46:	hlt    
  413f47:	pusha  
  413f48:	(bad)  
  413f49:	out    dx,al
  413f4a:	inc    ebx
  413f4b:	mov    eax,0xf4272be4
  413f50:	inc    ebx
  413f51:	add    ebp,esi
  413f53:	push   0x6893af83
  413f58:	or     bh,ch
  413f5a:	jl     0x413eff
  413f5c:	fdivr  QWORD PTR ds:[ebp+ecx*8+0x42dfb546]
  413f64:	mov    bl,0xe7
  413f66:	jae    0x413fbe
  413f68:	inc    eax
  413f69:	std    
  413f6a:	jmp    0xdb09e0bd
  413f6f:	mov    BYTE PTR [esi+0x209184a7],cl
  413f75:	and    eax,0x6aa17838
  413f7a:	ins    BYTE PTR es:[edi],dx
  413f7b:	mov    ecx,0xd3dfff69
  413f80:	mov    al,ds:0xf6a00056
  413f85:	mov    edi,0x3a4d9e51
  413f8a:	mov    esi,0x4d099d74
  413f8f:	jp     0x413f93
  413f91:	mov    bl,al
  413f93:	lea    ebp,[esi]
  413f95:	fisub  WORD PTR [eax-0x2a]
  413f98:	and    DWORD PTR [ecx+0x43812a70],0x18
  413f9f:	sbb    ebp,DWORD PTR ds:0xa0018700
  413fa5:	test   eax,0x8ec403cc
  413faa:	pop    eax
  413fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fac:	into   
  413fad:	sbb    ebp,esp
  413faf:	cwde   
  413fb0:	push   ebp
  413fb1:	repz inc ecx
  413fb3:	repz hlt 
  413fb5:	hlt    
  413fb6:	inc    edi
  413fb7:	jecxz  0x413fd1
  413fb9:	xchg   ebx,eax
  413fba:	jmp    0xcc110909
  413fbf:	test   al,0x20
  413fc1:	gs xor al,0x35
  413fc4:	xchg   BYTE PTR [esi+0x6c],cl
  413fc7:	add    eax,0xfe03e3b5
  413fcc:	out    0x5d,eax
  413fce:	push   es
  413fcf:	inc    ebp
  413fd0:	test   BYTE PTR [ebx],0xa
  413fd3:	xor    al,0x8
  413fd5:	inc    ebp
  413fd6:	mov    esp,0x27175915
  413fdb:	adc    eax,0xa5908c48
  413fe0:	stc    
  413fe1:	jp     0x413fe9
  413fe3:	sub    BYTE PTR [eax-0x17],ch
  413fe6:	inc    esp
  413fe7:	scas   eax,DWORD PTR es:[edi]
  413fe8:	xchg   ebp,eax
  413fe9:	push   esp
  413fea:	sbb    BYTE PTR ds:0x6d67991,ah
  413ff0:	adc    al,0xa1
  413ff2:	mov    eax,0x22ba29ec
  413ff7:	jno    0x413f85
  413ff9:	xchg   esp,eax
  413ffa:	xchg   esi,eax
  413ffb:	push   ecx
  413ffc:	cli    
  413ffd:	sub    DWORD PTR [esp+edx*1+0x4a],edi
  414001:	fmul   st,st(4)
  414003:	adc    al,0x3d
  414005:	sub    DWORD PTR [ebp+0x1186356],edx
  41400b:	pop    esi
  41400c:	and    DWORD PTR [esi+0x3f],0x4f
  414010:	pop    DWORD PTR [edx]
  414012:	stos   DWORD PTR es:[edi],eax
  414013:	aaa    
  414014:	jge    0x413ffd
  414016:	ins    DWORD PTR es:[edi],dx
  414017:	repz stc 
  414019:	inc    ebp
  41401a:	xchg   edx,eax
  41401b:	or     eax,0xa018603d
  414020:	lods   al,BYTE PTR ds:[esi]
  414021:	iret   
  414022:	mov    bh,BYTE PTR [ebp-0x66]
  414025:	push   ss
  414026:	(bad)  
  414027:	mov    esi,0x4347bb97
  41402c:	(bad)  
  41402d:	mov    edx,0x138d0540
  414032:	scas   al,BYTE PTR es:[edi]
  414033:	sub    eax,0x2d414910
  414039:	in     eax,0x55
  41403b:	jae    0x414093
  41403d:	and    edx,DWORD PTR [ebx-0x40]
  414040:	push   0xaa3dd33d
  414045:	imul   esp,eax,0xe289eafc
  41404b:	dec    ecx
  41404c:	popf   
  41404d:	xchg   edx,eax
  41404e:	mov    cl,0x35
  414050:	pop    eax
  414051:	cld    
  414052:	push   edx
  414053:	xchg   ebx,eax
  414054:	and    eax,0x31868002
  414059:	mov    cl,0x62
  41405b:	cmp    eax,0x2a77258a
  414060:	mov    dl,0xd8
  414062:	add    al,0x18
  414064:	xchg   edi,eax
  414065:	cmp    eax,0x83a74820
  41406a:	sbb    esi,DWORD PTR [ebx]
  41406c:	sahf   
  41406d:	cmp    al,0x7b
  41406f:	sub    DWORD PTR [eax],edx
  414071:	xor    eax,0xbd3a3f1e
  414076:	lds    eax,FWORD PTR [ebx-0x32a77e8e]
  41407c:	imul   bh
  41407e:	rcl    BYTE PTR fs:[ecx-0x14],cl
  414082:	and    bh,0x9e
  414085:	pop    esi
  414086:	div    BYTE PTR [edx-0x2aab06ee]
  41408c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41408d:	dec    edi
  41408e:	pop    es
  41408f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414090:	add    DWORD PTR [ecx-0x1be26535],esp
  414096:	xchg   edi,eax
  414097:	repz jecxz 0x4140d4
  41409a:	ds into 
  41409c:	cmp    BYTE PTR [edi+0x5f2d5ca5],ah
  4140a2:	ins    DWORD PTR es:[edi],dx
  4140a3:	jbe    0x41406c
  4140a5:	rcl    BYTE PTR [esp+eax*8],cl
  4140a8:	js     0x414120
  4140aa:	and    esi,esi
  4140ac:	(bad)
  4140af:	test   eax,0x3c1876e1
  4140b4:	fsubr  QWORD PTR [esi-0x37]
  4140b7:	push   ebx
  4140b8:	cs (bad) 
  4140ba:	(bad)  
  4140bb:	xchg   ecx,eax
  4140bc:	std    
  4140bd:	jno    0x41407c
  4140bf:	dec    ebx
  4140c0:	out    dx,al
  4140c1:	loopne 0x414141
  4140c3:	mov    ecx,0x7563c62e
  4140c8:	(bad)  
  4140c9:	js     0x4140d4
  4140cb:	scas   eax,DWORD PTR es:[edi]
  4140cc:	mov    esi,0xa99806a5
  4140d1:	in     eax,dx
  4140d2:	add    cl,BYTE PTR [ecx]
  4140d4:	mov    bl,0x85
  4140d6:	push   esp
  4140d7:	sbb    ah,BYTE PTR [eax+edx*4+0x4bb4ccf4]
  4140de:	hlt    
  4140df:	jp     0x41409e
  4140e1:	mov    cl,0x56
  4140e3:	xlat   BYTE PTR ds:[ebx]
  4140e4:	fwait
  4140e5:	ror    DWORD PTR [esi-0x5a],1
  4140e8:	test   DWORD PTR [esi],esp
  4140ea:	leave  
  4140eb:	push   ss
  4140ec:	inc    eax
  4140ed:	jecxz  0x4140a9
  4140ef:	in     al,0x12
  4140f1:	ret    0x88e6
  4140f4:	push   ss
  4140f5:	int    0x7b
  4140f7:	mov    esp,0xd207ffca
  4140fc:	mov    eax,ds:0xbded1334
  414101:	(bad)  
  414102:	shl    BYTE PTR [esi+0x5b42520b],1
  414108:	pop    ss
  414109:	push   es
  41410a:	adc    DWORD PTR [esi+edx*8-0x37],edi
  41410e:	cdq    
  41410f:	add    eax,0x5f991537
  414114:	cmp    al,0x45
  414116:	fsub   st,st(5)
  414118:	xchg   esi,ecx
  41411a:	das    
  41411b:	out    dx,al
  41411c:	add    ebx,esi
  41411e:	mov    ch,0xb2
  414120:	adc    DWORD PTR [eax-0x6163d21b],eax
  414126:	call   0x1249:0x8b67a565
  41412d:	and    bh,dh
  41412f:	add    BYTE PTR [ebp-0x31bbe497],al
  414135:	cmp    BYTE PTR [edx+0x47],ah
  414138:	jmp    0xa09:0xdd8ebe49
  41413f:	enter  0x6795,0x9d
  414143:	xchg   esi,eax
  414144:	and    eax,0x64ce517b
  414149:	xor    al,0x14
  41414b:	retf   0x31f6
  41414e:	sub    esi,DWORD PTR [ecx]
  414150:	and    ecx,DWORD PTR [ecx+0x25]
  414153:	popf   
  414154:	stos   DWORD PTR es:[edi],eax
  414155:	add    eax,0x5699266a
  41415a:	repnz test BYTE PTR [ebx],dl
  41415d:	leave  
  41415e:	adc    eax,DWORD PTR [ebp+0x3509e754]
  414164:	imul   edi,ebx,0xc6907280
  41416a:	mov    eax,0xe4f7809b
  41416f:	pushf  
  414170:	ja     0x4141dd
  414172:	push   eax
  414173:	in     eax,dx
  414174:	push   cs
  414175:	ins    BYTE PTR es:[edi],dx
  414176:	pusha  
  414177:	ja     0x414115
  414179:	cmp    BYTE PTR [ebx+0x1de641fe],dl
  41417f:	sbb    ah,BYTE PTR [ebx+0x4a]
  414182:	mov    ecx,0xd950706d
  414187:	scas   al,BYTE PTR es:[edi]
  414188:	mov    al,ds:0xcb90611a
  41418d:	xchg   esi,eax
  41418e:	in     al,0x99
  414190:	popa   
  414191:	stc    
  414192:	dec    esp
  414193:	stos   DWORD PTR es:[edi],eax
  414194:	shl    esi,cl
  414196:	idiv   dh
  414198:	jne    0x414152
  41419a:	xchg   ebp,eax
  41419b:	sbb    BYTE PTR ds:0xcae92964,dh
  4141a1:	test   BYTE PTR [eax],dh
  4141a3:	jecxz  0x414176
  4141a5:	or     ah,BYTE PTR [edx]
  4141a7:	push   ebx
  4141a8:	loopne 0x414202
  4141aa:	inc    edi
  4141ab:	xchg   ebp,eax
  4141ac:	sbb    cl,bl
  4141ae:	mov    dl,0xfc
  4141b0:	mov    ds:0xf13bd4b,al
  4141b5:	std    
  4141b6:	mov    esp,0x4fd09937
  4141bb:	dec    esi
  4141bc:	or     DWORD PTR [ecx+0x3d2e98a1],ebx
  4141c2:	cmp    DWORD PTR [esi-0x2314a5ad],eax
  4141c8:	and    dl,dl
  4141ca:	repz xchg bh,bl
  4141cd:	mov    cl,0xb3
  4141cf:	shl    DWORD PTR [edi+esi*2-0x1c],0xcc
  4141d4:	(bad)  [ecx]
  4141d6:	cmp    ecx,DWORD PTR [eax+esi*1-0x4e]
  4141da:	add    DWORD PTR [edi+0x55b4ac22],eax
  4141e0:	dec    esi
  4141e1:	push   ds
  4141e2:	jae    0x41418c
  4141e4:	dec    esi
  4141e5:	scas   al,BYTE PTR es:[edi]
  4141e6:	sub    eax,DWORD PTR [edx+0x4272091]
  4141ec:	rcl    BYTE PTR [edi-0x7b],cl
  4141ef:	cmp    DWORD PTR [ebp+0x30],eax
  4141f2:	es pop ds
  4141f4:	dec    esp
  4141f5:	or     BYTE PTR [eax+eax*2-0x4c],bl
  4141f9:	pop    ebx
  4141fa:	xchg   ebp,eax
  4141fb:	push   ds
  4141fc:	mov    edi,0x76143418
  414201:	cli    
  414202:	push   es
  414203:	stc    
  414204:	out    0x1,al
  414206:	ficomp DWORD PTR [ecx]
  414208:	adc    al,0x91
  41420a:	mov    ds:0x13832d69,eax
  41420f:	pop    ecx
  414210:	jle    0x4141eb
  414212:	or     ah,bh
  414214:	aaa    
  414215:	or     DWORD PTR [edi-0x56],eax
  414218:	nop
  414219:	sbb    dl,dh
  41421b:	and    DWORD PTR [edx+0x7f839b7b],0x17e83ac4
  414225:	fnstenv ds:0x785f5dd5
  41422b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41422c:	add    esi,DWORD PTR [ecx*1-0x5dc8fcd3]
  414233:	stc    
  414234:	cmp    eax,0xffd4d4ce
  414239:	push   edx
  41423a:	inc    ebx
  41423b:	jecxz  0x41420b
  41423d:	cdq    
  41423e:	pop    esi
  41423f:	mov    ecx,0x57be4953
  414244:	dec    ebx
  414245:	mov    ch,0xd9
  414247:	pop    eax
  414248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414249:	popf   
  41424a:	loope  0x41420e
  41424c:	mov    ds:0x956e3320,eax
  414251:	ins    BYTE PTR es:[edi],dx
  414252:	and    eax,edx
  414254:	imul   ebx,DWORD PTR [edi+0x7f],0xb4ea22c1
  41425b:	test   al,0x61
  41425d:	repnz ins DWORD PTR es:[edi],dx
  41425f:	icebp  
  414260:	mov    eax,ds:0xe9085fa6
  414265:	add    DWORD PTR [edx+0x113fe2c4],edi
  41426b:	aas    
  41426c:	mov    ah,0x97
  41426e:	test   BYTE PTR [esi+0x61],0x27
  414272:	clc    
  414273:	sbb    al,dl
  414275:	ret    0x2118
  414278:	pop    ss
  414279:	pusha  
  41427a:	aam    0x4d
  41427c:	sub    eax,0xffffff81
  41427f:	shrd   DWORD PTR [edx+0x33],edx,0xd1
  414284:	and    al,0xf
  414286:	rsm    
  414288:	jg     0x41427c
  41428a:	ror    BYTE PTR [edi],1
  41428c:	test   eax,0x5496b527
  414291:	xchg   esp,eax
  414292:	fist   DWORD PTR [ebx+0x7cf24a9e]
  414298:	inc    ecx
  414299:	mov    ah,0xa8
  41429b:	(bad)  
  41429c:	imul   edx,DWORD PTR [eax+0x47],0x2326fae6
  4142a3:	add    eax,0x9a675560
  4142a8:	call   0x76fb0179
  4142ad:	pop    ss
  4142ae:	pop    esp
  4142af:	mov    ch,0xdf
  4142b1:	(bad)
  4142b4:	jno    0x414332
  4142b6:	and    al,0xd5
  4142b8:	inc    edi
  4142b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ba:	xchg   BYTE PTR [ecx],dh
  4142bc:	xchg   edx,eax
  4142bd:	fnstsw WORD PTR [eax]
  4142bf:	ret    
  4142c0:	rcr    DWORD PTR [eax],1
  4142c2:	jo     0x4142fc
  4142c4:	call   0x3c5a:0x9ca713b3
  4142cb:	(bad)  
  4142cc:	in     eax,0xb8
  4142ce:	adc    dh,BYTE PTR [ecx-0x5b]
  4142d1:	mov    fs,WORD PTR [edi-0x6d]
  4142d4:	les    esi,FWORD PTR [esi]
  4142d6:	add    al,0x62
  4142d8:	or     eax,0xfa23c5d7
  4142dd:	in     eax,0x3d
  4142df:	cdq    
  4142e0:	out    0x5c,eax
  4142e2:	cs jnp 0x414266
  4142e5:	xchg   esp,eax
  4142e6:	xchg   BYTE PTR [esi+0x5d80eed],bh
  4142ec:	stc    
  4142ed:	aaa    
  4142ee:	or     bh,bh
  4142f0:	jns    0x414320
  4142f2:	ja     0x41434e
  4142f4:	pmulhuw mm3,QWORD PTR [eax]
  4142f7:	aas    
  4142f8:	mov    BYTE PTR [ebp-0x4c],ch
  4142fb:	test   al,0xbc
  4142fd:	lahf   
  4142fe:	call   0xb5539ae2
  414303:	int    0x3
  414305:	xchg   esp,eax
  414306:	(bad)  
  414307:	out    dx,eax
  414308:	xor    al,ch
  41430a:	repz sbb bh,bl
  41430d:	es aas 
  41430f:	xchg   esp,eax
  414310:	and    esi,DWORD PTR [eax-0x78]
  414313:	cdq    
  414314:	outs   dx,BYTE PTR ds:[esi]
  414315:	mov    ch,0x4a
  414317:	mov    al,0xe3
  414319:	icebp  
  41431a:	sub    esi,ebx
  41431c:	fild   DWORD PTR [ecx-0x65]
  41431f:	push   esi
  414320:	and    al,0x7d
  414322:	in     al,0x7a
  414324:	add    BYTE PTR [esi+0x27],bl
  414327:	test   eax,0xcf1e7652
  41432c:	mov    edi,0x571cf5f4
  414331:	push   edx
  414332:	xchg   DWORD PTR [ebx],esp
  414334:	bound  esp,QWORD PTR [eax+0x74]
  414337:	add    ah,BYTE PTR [ebx+0x48114f27]
  41433d:	sub    eax,0xd18e462b
  414342:	push   0x5fe38f1a
  414347:	test   DWORD PTR [eax],esi
  414349:	pop    ecx
  41434a:	js     0x4142eb
  41434c:	cmp    ecx,esp
  41434e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41434f:	inc    edi
  414350:	add    al,0x2c
  414352:	xlat   BYTE PTR ds:[ebx]
  414353:	fiadd  DWORD PTR [esi+0x78]
  414356:	dec    esi
  414357:	sbb    DWORD PTR [esi+0xc],eax
  41435a:	sbb    al,0x54
  41435c:	cli    
  41435d:	jg     0x4143a9
  41435f:	out    dx,eax
  414360:	xchg   ebx,eax
  414361:	xchg   ebp,eax
  414362:	(bad)  [eax]
  414364:	outs   dx,BYTE PTR ds:[esi]
  414365:	sbb    DWORD PTR [ecx],0x58e8cf4d
  41436b:	les    esi,FWORD PTR [ebx+0x7814c027]
  414371:	jae    0x41439d
  414373:	push   ds
  414374:	push   ebp
  414375:	mov    ah,0x24
  414377:	mov    ds:0x36d400e,eax
  41437c:	and    al,0x8d
  41437e:	adc    dl,BYTE PTR [ecx-0x78]
  414381:	sbb    BYTE PTR [edi+0x75611844],ch
  414387:	jecxz  0x414357
  414389:	aam    0xe9
  41438b:	pop    esp
  41438c:	pop    ebp
  41438d:	pushf  
  41438e:	sub    BYTE PTR [eax+0xd00235],bl
  414394:	inc    esi
  414395:	inc    esi
  414396:	jle    0x4143fb
  414398:	nop
  414399:	cmp    eax,esp
  41439b:	push   ds
  41439c:	cmp    ch,BYTE PTR [esi-0x55]
  41439f:	push   0xffffffd0
  4143a1:	mov    dh,0x93
  4143a3:	hlt    
  4143a4:	rol    esi,cl
  4143a6:	fsubr  st,st(4)
  4143a8:	test   bh,dh
  4143aa:	push   ecx
  4143ab:	aam    0x34
  4143ad:	out    0x6,al
  4143af:	rol    DWORD PTR [ecx-0x24921224],0xc8
  4143b6:	dec    ecx
  4143b7:	mov    BYTE PTR [edi-0x657b35a4],ch
  4143bd:	fwait
  4143be:	xor    al,0x8d
  4143c0:	jle    0x414431
  4143c2:	mov    eax,0x9f890b3b
  4143c7:	mov    cl,0x9
  4143c9:	and    ecx,DWORD PTR [ebx]
  4143cb:	call   0xe863:0x77ef391f
  4143d2:	mov    dl,0xdc
  4143d4:	inc    ecx
  4143d5:	mov    esi,0x76476b15
  4143da:	xlat   BYTE PTR ds:[ebx]
  4143db:	mov    bh,0x61
  4143dd:	loope  0x4143d8
  4143df:	ret    
  4143e0:	pop    eax
  4143e1:	fist   WORD PTR [esi]
  4143e3:	pop    eax
  4143e4:	neg    ebp
  4143e6:	cmp    DWORD PTR ds:0x384375e7,ecx
  4143ec:	inc    edi
  4143ed:	mov    edx,DWORD PTR [ecx]
  4143ef:	sub    DWORD PTR [ecx+0x39],esp
  4143f2:	push   eax
  4143f3:	push   ebp
  4143f4:	push   esi
  4143f5:	sbb    BYTE PTR [eax+0x32],dl
  4143f8:	jne    0x4143f8
  4143fa:	fdiv   DWORD PTR [ecx+0x2a]
  4143fd:	sub    BYTE PTR [ebp+ebx*1-0xe],bl
  414401:	mov    cs,ebp
  414403:	xor    BYTE PTR [eax+0x59b43527],bl
  414409:	ds (bad) 
  41440c:	pop    ecx
  41440d:	ins    DWORD PTR es:[edi],dx
  41440e:	enter  0x5522,0xf9
  414412:	test   BYTE PTR [edi+0x1c6e04ad],bh
  414418:	out    0x6e,eax
  41441a:	shr    BYTE PTR [edi-0x54f0360],0x3
  414421:	in     eax,dx
  414422:	ret    0x79d4
  414425:	out    0x26,al
  414427:	add    al,0x1b
  414429:	fldenv ss:[esi-0x34]
  41442d:	popa   
  41442e:	fist   WORD PTR [eax+0x75]
  414431:	and    al,BYTE PTR [ebx-0x24]
  414434:	int3   
  414435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414436:	push   esp
  414437:	fwait
  414438:	dec    edx
  414439:	arpl   sp,ax
  41443b:	inc    eax
  41443c:	dec    edx
  41443d:	jl     0xc70a5f8b
  414443:	adc    al,0x42
  414445:	stc    
  414446:	sub    al,0xac
  414448:	push   0x6cbc0e07
  41444d:	sbb    ecx,DWORD PTR [ebx+0x489adf5f]
  414453:	and    esp,DWORD PTR [esi-0x1d]
  414456:	int3   
  414457:	add    DWORD PTR [eax+0x4],eax
  41445a:	dec    ecx
  41445b:	jp     0x4144c7
  41445d:	cmp    DWORD PTR [edi+0x41],eax
  414460:	mov    DWORD PTR [edx-0x48149343],ecx
  414466:	inc    ebx
  414467:	inc    edx
  414468:	test   BYTE PTR [ebp-0xd],0xca
  41446c:	outs   dx,DWORD PTR ds:[esi]
  41446d:	dec    ebx
  41446e:	mov    esp,0xed9a2ee9
  414473:	dec    edi
  414474:	adc    eax,0xa90e12a9
  414479:	adc    BYTE PTR [esi-0x5b],ch
  41447c:	mov    DWORD PTR [ebx-0x79],ebx
  41447f:	inc    edx
  414480:	xchg   ebp,eax
  414481:	inc    esi
  414482:	(bad)  
  414483:	xor    al,0xce
  414485:	xchg   ebx,eax
  414486:	inc    eax
  414487:	ss fwait
  414489:	arpl   WORD PTR [esi],bx
  41448b:	sub    al,0x38
  41448d:	pop    es
  41448e:	out    dx,al
  41448f:	pop    ss
  414490:	adc    esi,DWORD PTR [esi-0x7d9007c7]
  414496:	push   edi
  414497:	push   0x3a43e53a
  41449c:	lock jmp 0x383d:0x393c078a
  4144a4:	sub    DWORD PTR ds:0xc0b6f074,0xffffffb7
  4144ab:	lods   eax,DWORD PTR ds:[esi]
  4144ac:	mov    edx,0x57dfb3
  4144b1:	test   cl,bh
  4144b3:	fcomp  DWORD PTR [eax+0x7]
  4144b6:	jno    0x414480
  4144b8:	sub    esp,DWORD PTR [esi+0x3e9d3554]
  4144be:	ror    BYTE PTR [esi],1
  4144c0:	(bad)  
  4144c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144c2:	mov    al,0x12
  4144c4:	sub    bh,BYTE PTR [esi-0x5ead2819]
  4144ca:	sbb    DWORD PTR ds:0x6eb96f0b,eax
  4144d0:	lods   al,BYTE PTR ds:[esi]
  4144d1:	cmp    dh,BYTE PTR [ecx+ebx*1-0x3fcbc3ee]
  4144d8:	sahf   
  4144d9:	jmp    0x43c:0x1b3c9251
  4144e0:	push   DWORD PTR [eax+0x2f040984]
  4144e6:	fidiv  DWORD PTR [edx+0x45]
  4144e9:	mov    WORD PTR [esi+edi*4+0x7e1e5627],ss
  4144f0:	xchg   DWORD PTR es:[edi],edi
  4144f3:	pop    edx
  4144f4:	sti    
  4144f5:	iret   
  4144f6:	std    
  4144f7:	fmul   QWORD PTR [esi]
  4144f9:	cmp    BYTE PTR [edx-0x517e17b8],al
  4144ff:	sahf   
  414500:	mov    dl,bl
  414502:	mov    ah,0x30
  414504:	mov    esp,0xb920ac3d
  414509:	sbb    ebp,DWORD PTR [esp+0x37]
  41450d:	loop   0x414580
  41450f:	push   edi
  414510:	mov    ebp,0x91c51299
  414515:	and    al,0x73
  414517:	(bad)  
  414518:	out    dx,eax
  414519:	arpl   WORD PTR [esi],ax
  41451b:	inc    edx
  41451c:	and    esi,esp
  41451e:	pop    esi
  41451f:	lods   eax,DWORD PTR ds:[esi]
  414520:	outs   dx,BYTE PTR ds:[esi]
  414521:	test   al,0x71
  414523:	hlt    
  414524:	push   0xffffffab
  414526:	pop    ds
  414527:	fidiv  DWORD PTR [eax-0x76690deb]
  41452d:	cmc    
  41452e:	add    esp,ecx
  414530:	cmc    
  414531:	pop    ecx
  414532:	and    bh,BYTE PTR [eax-0x59733c2f]
  414538:	or     cl,BYTE PTR [edi-0x7831e178]
  41453e:	out    0x99,al
  414540:	inc    ebp
  414541:	pushf  
  414542:	stos   BYTE PTR es:[edi],al
  414543:	inc    edi
  414544:	fnstenv [ecx+0x5458e0b8]
  41454a:	mov    ebp,0xd46fc7ac
  41454f:	pop    ebp
  414550:	sbb    ecx,esi
  414552:	fs inc esi
  414554:	jle    0x414541
  414556:	mov    ds:0xf601f8f8,eax
  41455b:	es call 0xecdade28
  414561:	jecxz  0x414554
  414563:	cdq    
  414564:	inc    BYTE PTR [edx]
  414566:	xchg   BYTE PTR [edi],dh
  414568:	jae    0x41453f
  41456a:	ficomp WORD PTR [esi-0x5f]
  41456d:	cmp    esi,DWORD PTR [esi]
  41456f:	data16 lods al,BYTE PTR ds:[esi]
  414571:	jae    0x4144ff
  414573:	cld    
  414574:	add    eax,0xb0144f6e
  414579:	mov    ebx,0x248590e4
  41457e:	add    edi,edx
  414580:	push   ebx
  414581:	mov    cl,BYTE PTR [ebx]
  414583:	mov    bh,0xb4
  414585:	push   es
  414586:	cwde   
  414587:	popf   
  414588:	adc    DWORD PTR [ecx+0x27],esp
  41458b:	lods   al,BYTE PTR ds:[esi]
  41458c:	dec    esi
  41458d:	(bad)  
  41458f:	call   FWORD PTR [edx+0x3e]
  414592:	xchg   edx,eax
  414593:	rol    BYTE PTR [edx-0x485e511a],0xfe
  41459a:	nop
  41459b:	mov    edx,0x3e36d89d
  4145a0:	mov    ebp,0x8b03dd1f
  4145a5:	dec    ecx
  4145a6:	push   eax
  4145a7:	int    0xaf
  4145a9:	test   bh,0x1f
  4145ac:	hlt    
  4145ad:	loop   0x4145b0
  4145af:	rol    DWORD PTR [edi],1
  4145b1:	fstp   QWORD PTR [esi+0x1a]
  4145b4:	aas    
  4145b5:	stos   DWORD PTR es:[edi],eax
  4145b6:	dec    edx
  4145b7:	inc    ebx
  4145b8:	js     0x4145cd
  4145ba:	xor    al,0x0
  4145bc:	adc    eax,0xc61c752a
  4145c1:	mov    eax,gs:0x8cfcda8b
  4145c7:	push   ebx
  4145c8:	(bad)
  4145cc:	rcr    BYTE PTR [ebx+0x63],1
  4145cf:	lock and eax,DWORD PTR [ecx-0x65ebecf4]
  4145d6:	in     al,0x35
  4145d8:	mov    bl,0x5e
  4145da:	and    al,0x55
  4145dc:	fld    QWORD PTR [esi+edx*2]
  4145df:	fs (bad) 
  4145e1:	jno    0x414567
  4145e3:	jl     0x414650
  4145e5:	mov    esp,DWORD PTR [esi+0x4ece7c40]
  4145eb:	(bad)  
  4145ec:	push   esp
  4145ed:	sbb    eax,0xc3c6a997
  4145f2:	loopne 0x4145ec
  4145f4:	mov    eax,gs:0x523d8fde
  4145fa:	jmp    0x414678
  4145fc:	dec    edx
  4145fd:	mov    ebp,0x4f129cb6
  414602:	icebp  
  414603:	cmp    ebp,ebx
  414605:	cdq    
  414606:	retf   0xc3e9
  414609:	lods   al,BYTE PTR ds:[esi]
  41460a:	out    dx,al
  41460b:	imul   esi,esp,0x5694c7f4
  414611:	imul   esp,DWORD PTR [edx],0xffffff92
  414614:	and    ebx,DWORD PTR ds:0xaee19b53
  41461a:	xor    eax,0xcda4a06b
  41461f:	enter  0x5c9f,0x54
  414623:	pop    es
  414624:	jae    0x5d004291
  41462a:	or     eax,0x8c70cf49
  41462f:	test   al,0x49
  414631:	jecxz  0x4145b4
  414633:	repnz xchg ecx,eax
  414635:	fs push esp
  414637:	sbb    DWORD PTR [eax],ecx
  414639:	mov    cl,0xb
  41463b:	jecxz  0x4146a6
  41463d:	(bad)  
  41463e:	out    dx,al
  41463f:	into   
  414640:	out    0x7c,eax
  414642:	push   esp
  414643:	mov    bl,0x2f
  414645:	or     edx,DWORD PTR [esi+0x9bb7ac4]
  41464b:	je     0x41465d
  41464d:	inc    esp
  41464e:	rol    BYTE PTR [ebp-0x20d996c0],0x9e
  414655:	lds    ebx,FWORD PTR [edi]
  414657:	aad    0x24
  414659:	mov    ah,0xea
  41465b:	pop    edi
  41465c:	mov    eax,0x53254910
  414661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414662:	jg     0x41467b
  414664:	scas   eax,DWORD PTR es:[edi]
  414665:	outs   dx,DWORD PTR ds:[esi]
  414666:	idiv   dl
  414668:	pop    esp
  414669:	es inc esp
  41466b:	dec    eax
  41466c:	adc    esi,esi
  41466e:	xor    eax,0x1e29e2fc
  414673:	sbb    al,0x84
  414675:	ror    DWORD PTR [ecx+0x7b],cl
  414678:	pop    esi
  414679:	jbe    0x4146db
  41467b:	ins    BYTE PTR es:[edi],dx
  41467c:	sub    eax,DWORD PTR [ecx+ecx*4+0x21]
  414680:	loope  0x4146b4
  414682:	jb     0x4146c7
  414684:	pop    es
  414685:	or     eax,0x85e0f665
  41468a:	sub    BYTE PTR [ebx+0x1b69894e],dh
  414690:	aad    0x8d
  414692:	push   ds
  414693:	push   0xffffffb4
  414695:	adc    ebp,DWORD PTR cs:[ebx-0x19c65da6]
  41469c:	adc    bl,bl
  41469e:	or     al,0x58
  4146a0:	pop    es
  4146a1:	sub    esi,DWORD PTR [eax-0x76d497b5]
  4146a7:	lods   eax,DWORD PTR ds:[esi]
  4146a8:	je     0x4146c1
  4146aa:	sub    eax,0x33173027
  4146af:	imul   esp,edx,0xfffffff8
  4146b2:	scas   eax,DWORD PTR es:[edi]
  4146b3:	sbb    al,0x49
  4146b5:	sub    eax,0x6fe0a34d
  4146ba:	call   0x8d313a41
  4146bf:	jo     0x4146fb
  4146c1:	pop    edx
  4146c2:	call   DWORD PTR [ecx-0x32]
  4146c5:	aas    
  4146c6:	sub    dh,BYTE PTR [ecx+0x17d27141]
  4146cc:	mov    ecx,0x9cb2ffc3
  4146d1:	mov    DWORD PTR [ecx],esi
  4146d3:	adc    al,BYTE PTR [ebx+0xf]
  4146d6:	mov    dh,BYTE PTR [esp+esi*8-0x26]
  4146da:	add    al,0xca
  4146dc:	mov    bl,0x28
  4146de:	stos   BYTE PTR es:[edi],al
  4146df:	inc    esi
  4146e0:	test   DWORD PTR ds:0xe75f0cd2,esp
  4146e6:	sbb    DWORD PTR [eax-0x288084fa],ebx
  4146ec:	sbb    al,BYTE PTR [ecx-0x1258210e]
  4146f2:	jle    0x414675
  4146f4:	or     edi,esi
  4146f6:	cmp    al,0x5
  4146f8:	test   DWORD PTR [ecx+eiz*8+0x47],ebx
  4146fc:	nop
  4146fd:	dec    edx
  4146fe:	push   esp
  4146ff:	cmp    eax,0xfc9732bb
  414704:	jle    0x4146f4
  414706:	mov    ch,0xdd
  414708:	xor    DWORD PTR [edi],0x5743c46
  41470e:	int3   
  41470f:	mov    BYTE PTR [ebx-0x1a],cl
  414712:	loopne 0x414723
  414714:	daa    
  414715:	pop    ds
  414716:	enter  0x4a12,0xf
  41471a:	push   ebp
  41471b:	loopne 0x4146cb
  41471d:	inc    ebx
  41471e:	mov    cx,WORD PTR [edi-0x3e]
  414722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414723:	dec    eax
  414724:	add    BYTE PTR [ebx],dl
  414726:	ins    DWORD PTR es:[edi],dx
  414727:	(bad)  
  414728:	cmp    al,0xa3
  41472a:	sbb    edi,ebx
  41472c:	mov    bl,0x99
  41472e:	sbb    ebp,DWORD PTR [esi+0x6193a833]
  414734:	das    
  414735:	pushf  
  414736:	punpckhdq mm6,mm5
  414739:	aas    
  41473a:	(bad)  
  41473b:	sbb    eax,0xb4ceacdc
  414740:	in     al,0xde
  414742:	loopne 0x41479c
  414744:	add    ah,BYTE PTR [ebp-0x3d6fbcd8]
  41474a:	xchg   ebp,eax
  41474b:	jg     0x41472a
  41474d:	add    edi,eax
  41474f:	fs mov al,0xb0
  414752:	mov    edi,0x91c6e92b
  414757:	aam    0xf3
  414759:	xor    BYTE PTR [eax+0x5b2ebb44],dl
  41475f:	and    al,0xcd
  414761:	or     ecx,ecx
  414763:	retf   0xa3e0
  414766:	jae    0x414751
  414768:	jnp    0x414738
  41476a:	sub    ch,BYTE PTR [esi+0x19e7612f]
  414770:	xor    DWORD PTR [ebp-0x24],edi
  414773:	mov    ebp,0x224dc5a9
  414778:	push   eax
  414779:	(bad)  
  41477a:	rcl    BYTE PTR [ecx+esi*2+0x64],1
  41477e:	outs   dx,BYTE PTR ds:[esi]
  41477f:	xlat   BYTE PTR ds:[ebx]
  414780:	(bad)  
  414781:	mov    ds:0x731f181f,eax
  414786:	mov    ecx,0xe484a3c7
  41478b:	cmc    
  41478c:	xchg   edx,eax
  41478d:	aaa    
  41478e:	repz xlat BYTE PTR ds:[ebx]
  414790:	push   ecx
  414791:	mov    ds:0x26dcecfd,al
  414796:	sub    edi,DWORD PTR [edx+0x1e]
  414799:	xor    ch,dl
  41479b:	call   ecx
  41479d:	ins    BYTE PTR es:[edi],dx
  41479e:	xor    eax,0xf782cd21
  4147a3:	aaa    
  4147a4:	push   0x9d3c8fc1
  4147a9:	sub    BYTE PTR [edx+edx*8-0x60],dh
  4147ad:	jg     0x4147b0
  4147af:	push   ds
  4147b0:	ror    DWORD PTR [edi+0x74],cl
  4147b3:	test   al,0x80
  4147b5:	jp     0x41482a
  4147b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b8:	xchg   esi,eax
  4147b9:	fnstsw WORD PTR [eax-0x14]
  4147bc:	add    al,0x6
  4147be:	retf   
  4147bf:	inc    edi
  4147c0:	paddsw mm6,QWORD PTR [edi]
  4147c3:	pushf  
  4147c4:	js     0x4147ce
  4147c6:	push   0xffffffda
  4147c8:	jne    0x4147ab
  4147ca:	cmp    BYTE PTR [esi],ch
  4147cc:	nop
  4147cd:	xor    DWORD PTR [esp+ebx*1-0x5f55d852],0xffffff90
  4147d5:	jae    0x41477c
  4147d7:	ret    0xa438
  4147da:	add    eax,0x587a964f
  4147df:	add    al,0xa0
  4147e1:	js     0x41480a
  4147e3:	(bad)  
  4147e4:	ss mov bh,0x60
  4147e7:	jnp    0x41485a
  4147e9:	push   0xffffffcf
  4147eb:	push   edx
  4147ec:	and    BYTE PTR [ecx-0x2d],bl
  4147ef:	mov    esp,0xf5e7deb3
  4147f4:	(bad)  
  4147f5:	mov    edi,0xc6ecbbcb
  4147fa:	in     al,0x28
  4147fc:	jno    0x4147ff
  4147fe:	cmp    bl,BYTE PTR [esi]
  414800:	sub    DWORD PTR [ebp+0x212a26de],ebx
  414806:	mov    eax,DWORD PTR [edx+ecx*4+0x78]
  41480a:	xor    esi,DWORD PTR [edx+0x6]
  41480d:	stos   BYTE PTR es:[edi],al
  41480e:	jg     0x4147ff
  414810:	sub    ebp,ecx
  414812:	pop    eax
  414813:	sti    
  414814:	(bad)  
  414815:	retf   
  414816:	popf   
  414817:	push   ss
  414818:	mov    dl,0x92
  41481a:	push   es
  41481b:	pop    ss
  41481c:	rcl    ebp,cl
  41481e:	in     al,0x38
  414820:	out    0xff,al
  414822:	arpl   WORD PTR [ebp-0x111cdd43],bp
  414828:	push   es
  414829:	xor    cl,ch
  41482b:	add    DWORD PTR [ebp+0x4d2e5d48],esp
  414831:	or     ch,dh
  414833:	jge    0x414856
  414835:	sub    DWORD PTR [esi],edx
  414837:	dec    ebp
  414838:	jl     0x414807
  41483a:	sar    DWORD PTR [ebp-0xb6ccc7],cl
  414840:	push   edx
  414841:	cmp    esp,eax
  414843:	in     eax,dx
  414844:	fisttp DWORD PTR [ebx+0x43]
  414847:	jbe    0x4147fb
  414849:	pop    ecx
  41484a:	sub    DWORD PTR [eax-0xe],edi
  41484d:	int    0xd3
  41484f:	aad    0x1c
  414851:	pop    ss
  414852:	cs je  0x414894
  414855:	(bad)  
  414856:	and    bh,BYTE PTR [ebx+0x8]
  414859:	call   0x9cab45a8
  41485e:	xor    al,0x59
  414860:	xchg   ebx,eax
  414861:	test   al,0x6
  414863:	add    eax,edi
  414865:	iret   
  414866:	xor    al,0xbf
  414868:	mov    DWORD PTR [esi-0x5c],esi
  41486b:	ror    BYTE PTR [ebx+0x7c5fb195],0x24
  414872:	std    
  414873:	adc    BYTE PTR [edi+edx*8-0x58],ah
  414877:	mov    WORD PTR [esi],?
  414879:	dec    edi
  41487a:	loopne 0x414874
  41487c:	add    BYTE PTR [ebp-0x6e],ah
  41487f:	data16 arpl WORD PTR [eax],dx
  414882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414883:	inc    edi
  414884:	iret   
  414885:	hlt    
  414886:	inc    esp
  414887:	add    al,0xc3
  414889:	pushf  
  41488a:	mov    eax,ds:0xe564ca95
  41488f:	push   cs
  414890:	rcr    DWORD PTR [ecx],0x17
  414893:	sub    ebp,edx
  414895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414896:	je     0x4148ac
  414898:	jg     0x414844
  41489a:	enter  0xb55c,0x9f
  41489e:	out    dx,al
  41489f:	or     bl,cl
  4148a1:	clc    
  4148a2:	lods   al,BYTE PTR es:[esi]
  4148a4:	loope  0x41490f
  4148a6:	repz sub BYTE PTR [ebx],ah
  4148a9:	(bad)  
  4148aa:	in     eax,dx
  4148ab:	in     eax,dx
  4148ac:	xchg   ebp,eax
  4148ad:	cwde   
  4148ae:	cmp    ebx,0x1d
  4148b1:	adc    al,0xfc
  4148b3:	mov    ebx,0x8558b51
  4148b8:	xor    edx,eax
  4148ba:	add    edx,esi
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0x321088bf
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx-0x371b1589],0xffffffbb
  414952:	lds    esp,FWORD PTR [ebx]
  414954:	ror    bl,0xf3
  414957:	pop    ebp
  414958:	rol    DWORD PTR [ebx],cl
  41495a:	jecxz  0x414906
  41495c:	jmp    0x414905
  41495e:	or     DWORD PTR [edx-0x19],0xc616ef35
  414965:	pushf  
  414966:	mov    ebx,0x98a9c02b
  41496b:	and    DWORD PTR [edi],ebx
  41496d:	sbb    eax,0x71ac920a
  414972:	sub    eax,edi
  414974:	mov    ?,WORD PTR [esi]
  414976:	and    eax,0x493756d4
  41497b:	mov    DWORD PTR [edx],0x70f7c79b
  414981:	mov    eax,ds:0xc0cb69f8
  414986:	out    dx,al
  414987:	lahf   
  414988:	push   0x25
  41498a:	mov    esp,0x81d35325
  41498f:	fsub   QWORD PTR ds:0x9557370d
  414995:	test   DWORD PTR [ebp-0x55cd2a2],ebx
  41499b:	mov    eax,ds:0x70648f24
  4149a0:	or     DWORD PTR [ecx-0x2c],ebp
  4149a3:	addr16 mov ch,0xe4
  4149a6:	sbb    eax,0x4c3aa651
  4149ab:	popf   
  4149ac:	les    esi,FWORD PTR [edx+edx*2-0x7250a071]
  4149b3:	fimul  DWORD PTR [ecx]
  4149b5:	(bad)  
  4149b6:	(bad)  [edi-0x18cb58ba]
  4149bc:	or     DWORD PTR [ebp+0x78],ebp
  4149bf:	dec    edx
  4149c0:	aas    
  4149c1:	arpl   WORD PTR [ebp+0x5061c863],sp
  4149c7:	in     al,0x33
  4149c9:	pop    eax
  4149ca:	jo     0x4149c6
  4149cc:	les    esi,FWORD PTR [eax-0x9]
  4149cf:	(bad)  
  4149d0:	fmul   DWORD PTR [ebx-0x367987d7]
  4149d6:	leave  
  4149d7:	adc    BYTE PTR [eax+eiz*4+0x7e],bh
  4149db:	fprem1 
  4149dd:	pop    ebx
  4149de:	sub    cl,BYTE PTR [edx+0x68]
  4149e1:	int    0x23
  4149e3:	fwait
  4149e4:	mov    edi,0x14795c07
  4149e9:	test   cl,ch
  4149eb:	pop    ss
  4149ec:	and    al,0xf7
  4149ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149ef:	dec    esi
  4149f0:	jnp    0x4149dc
  4149f2:	ror    BYTE PTR [edx-0x65],1
  4149f5:	mov    eax,0xbeb27d49
  4149fa:	test   BYTE PTR [ebx+eiz*1+0x11],bl
  4149fe:	rcr    DWORD PTR ds:0x2e58b213,cl
  414a04:	fldcw  WORD PTR [eax-0x1f766f52]
  414a0a:	pop    edi
  414a0b:	mov    fs,ebx
  414a0d:	icebp  
  414a0e:	push   esi
  414a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a10:	jno    0x414a70
  414a12:	xchg   esp,eax
  414a13:	xchg   edx,eax
  414a14:	push   0xffffffe1
  414a16:	jnp    0x414a84
  414a18:	out    dx,eax
  414a19:	fs mov dl,0x6f
  414a1c:	inc    ecx
  414a1d:	xor    eax,DWORD PTR [ebx-0x1d536c8a]
  414a23:	pop    ds
  414a24:	xchg   ebx,eax
  414a25:	inc    ebp
  414a26:	sub    ebp,DWORD PTR [ebx+eax*1]
  414a29:	sub    edi,ebx
  414a2b:	push   edi
  414a2c:	mov    ds,WORD PTR [edi]
  414a2e:	imul   esi,DWORD PTR [edi],0x5e
  414a31:	scas   eax,DWORD PTR es:[edi]
  414a32:	inc    eax
  414a33:	xchg   ebp,eax
  414a34:	lock stc 
  414a36:	test   eax,0x5501948
  414a3b:	das    
  414a3c:	stc    
  414a3d:	lds    eax,FWORD PTR [eax-0x36]
  414a40:	imul   ecx,ebp,0xffffffd6
  414a43:	mov    ebp,0xa4c8d1ce
  414a48:	push   esi
  414a49:	add    BYTE PTR [esi+ebx*4+0x22],al
  414a4d:	fsubr  QWORD PTR [edi-0x3575a27a]
  414a53:	movd   DWORD PTR [edx],mm3
  414a56:	sub    dh,BYTE PTR [ebp-0xa]
  414a59:	sbb    esi,DWORD PTR [edi+0x2e74f473]
  414a5f:	stos   DWORD PTR es:[edi],eax
  414a60:	outs   dx,DWORD PTR ds:[esi]
  414a61:	xor    dl,al
  414a63:	shl    BYTE PTR [esi+eiz*8-0x6ec31308],cl
  414a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a6b:	jne    0x414ad7
  414a6d:	lds    edi,FWORD PTR [edi+0xf35043f]
  414a73:	stc    
  414a74:	sub    DWORD PTR [ebp-0x7e],ebx
  414a77:	lods   al,BYTE PTR ds:[esi]
  414a78:	jecxz  0x414aa2
  414a7a:	das    
  414a7b:	mov    dh,0xb3
  414a7d:	sub    eax,0x1850ee27
  414a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a83:	punpcklbw mm5,mm0
  414a86:	sar    bh,1
  414a88:	retf   0xe509
  414a8b:	fidivr DWORD PTR [esi+0x153068a3]
  414a91:	pushf  
  414a92:	repz inc ebx
  414a94:	and    ah,0x56
  414a97:	sar    BYTE PTR [ebx],1
  414a99:	imul   DWORD PTR [edi]
  414a9b:	sub    al,0xfc
  414a9d:	imul   edx,DWORD PTR [ebp-0x1],0x3c
  414aa1:	int    0x8c
  414aa3:	pusha  
  414aa4:	mov    BYTE PTR ds:0x32e321be,al
  414aaa:	sar    BYTE PTR [esi-0xfa842a1],1
  414ab0:	rcl    BYTE PTR [edx+0x6fb198a],0x3d
  414ab7:	stos   BYTE PTR es:[edi],al
  414ab8:	ja     0x414ab4
  414aba:	mov    ds:0x6e48f63c,eax
  414abf:	pop    esi
  414ac0:	in     ax,0xc
  414ac3:	sub    DWORD PTR [ecx+0x77],edi
  414ac6:	inc    eax
  414ac7:	les    ecx,FWORD PTR [esi+ebp*8]
  414aca:	sub    al,0xe
  414acc:	je     0x414a81
  414ace:	sbb    DWORD PTR [ebp-0x10636314],ecx
  414ad4:	mov    bl,0xc2
  414ad6:	imul   eax,DWORD PTR [edi+ecx*2],0x54
  414ada:	sbb    BYTE PTR [eax+0x7b],bl
  414add:	mov    gs,edi
  414adf:	or     al,0x38
  414ae1:	xchg   edi,eax
  414ae2:	sbb    BYTE PTR [edi+0xecc30e6],dh
  414ae8:	add    al,0x79
  414aea:	adc    eax,0x5efeac3
  414aef:	sbb    BYTE PTR [ebx],cl
  414af1:	or     al,0xde
  414af3:	add    eax,0x5ab7e51a
  414af8:	ss retf 0x7b3c
  414afc:	xchg   ebp,eax
  414afd:	das    
  414afe:	pop    esi
  414aff:	xchg   DWORD PTR [eax+eiz*8+0x52b57c13],esi
  414b06:	(bad)  
  414b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b08:	jno    0x414aeb
  414b0a:	jecxz  0x414ade
  414b0c:	sub    eax,0xc71bae30
  414b11:	stc    
  414b12:	push   es
  414b13:	out    dx,eax
  414b14:	sub    bl,ah
  414b16:	pushf  
  414b17:	adc    DWORD PTR [esi+0x7c],ecx
  414b1a:	mov    edi,DWORD PTR [edx+0x48b024d7]
  414b20:	mov    al,ah
  414b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b23:	cmp    BYTE PTR ds:0x33952433,bl
  414b29:	mov    esi,0xeb59728a
  414b2e:	fimul  DWORD PTR [edx+ecx*1-0x26]
  414b32:	cs push ss
  414b34:	stos   DWORD PTR es:[edi],eax
  414b35:	xchg   ebp,eax
  414b36:	not    DWORD PTR [ebx+0x5f3e2209]
  414b3c:	cdq    
  414b3d:	sub    eax,0x825f063e
  414b42:	jno    0x414b3b
  414b44:	data16 add ch,dh
  414b47:	inc    ebp
  414b48:	mov    ds:0x491079da,al
  414b4d:	enter  0x253a,0x3b
  414b51:	(bad)  
  414b52:	lods   eax,DWORD PTR ds:[esi]
  414b53:	imul   edx,DWORD PTR [eax+ebx*4-0x32],0xffffffd7
  414b58:	pop    eax
  414b59:	bound  eax,QWORD PTR [ebx-0x6e07194a]
  414b5f:	out    dx,al
  414b60:	push   0x44eb415e
  414b65:	sub    ch,bh
  414b67:	mov    eax,0x7d401cfc
  414b6c:	les    ebp,FWORD PTR [edx-0x80]
  414b6f:	jns    0x414ba0
  414b71:	daa    
  414b72:	dec    esi
  414b73:	sub    al,0x1f
  414b75:	sbb    DWORD PTR [eax+0x4c],ebp
  414b78:	mov    WORD PTR [ebx-0x23],?
  414b7b:	test   DWORD PTR [ebp+0x3586eea],ecx
  414b81:	sbb    al,0x30
  414b83:	mov    eax,0x41363397
  414b88:	pop    ss
  414b89:	lahf   
  414b8a:	clc    
  414b8b:	mov    eax,ds:0x156d984f
  414b90:	sbb    eax,0x3e79d6d0
  414b95:	jns    0x414b1d
  414b97:	xchg   edi,eax
  414b98:	mov    ebp,0x53220224
  414b9d:	in     eax,0x52
  414b9f:	cmc    
  414ba0:	xchg   esi,eax
  414ba1:	cdq    
  414ba2:	jbe    0x414b6b
  414ba4:	inc    eax
  414ba5:	hlt    
  414ba6:	sbb    ah,BYTE PTR [edx+ebp*1+0xb66e58]
  414bad:	xchg   edx,eax
  414bae:	jns    0x414c27
  414bb0:	and    eax,0xa6610995
  414bb5:	cmp    edx,DWORD PTR [eax+0x64ae545a]
  414bbb:	xor    dh,cl
  414bbd:	div    DWORD PTR [edi]
  414bbf:	fcmovbe st,st(4)
  414bc1:	xor    al,BYTE PTR [ecx]
  414bc3:	push   ds
  414bc4:	pop    ebp
  414bc5:	dec    ebx
  414bc6:	cmp    esi,DWORD PTR [ebx-0x3d]
  414bc9:	addr16 pop ecx
  414bcb:	int    0x4b
  414bcd:	gs xchg esp,eax
  414bcf:	jo     0x414ba3
  414bd1:	mov    ecx,0xb9ec2180
  414bd6:	mov    bh,0x8a
  414bd8:	add    dh,dl
  414bda:	fisubr WORD PTR [edi+edi*2]
  414bdd:	fstp   st(4)
  414bdf:	jp     0x414c10
  414be1:	in     eax,dx
  414be2:	mov    ebp,0xd939a2f9
  414be7:	ds daa 
  414be9:	mov    bl,0x91
  414beb:	add    al,0x38
  414bed:	cmp    DWORD PTR [ecx-0x7a],ebp
  414bf0:	mov    edi,0x2010609
  414bf5:	lds    ebp,FWORD PTR [edx+0x32554ef8]
  414bfb:	pop    ds
  414bfc:	mov    eax,ds:0x5cb4b992
  414c01:	mov    al,ds:0xe5dbc676
  414c06:	shl    cl,0x3a
  414c09:	mov    ebx,0x4d0fdf89
  414c0e:	lahf   
  414c0f:	jno    0x414bf2
  414c11:	imul   ch
  414c13:	add    DWORD PTR ds:0x625a61c4,eax
  414c19:	in     eax,dx
  414c1a:	push   edx
  414c1b:	adc    bl,al
  414c1d:	cmc    
  414c1e:	mov    ch,bh
  414c20:	les    edx,FWORD PTR [edx]
  414c22:	fs jl  0x414bfd
  414c25:	(bad)  
  414c26:	sbb    al,0x9d
  414c28:	pusha  
  414c29:	shr    BYTE PTR [edx+0x74df591],1
  414c2f:	lods   eax,DWORD PTR ds:[esi]
  414c30:	nop
  414c31:	fsubr  QWORD PTR [edi-0x4d123d60]
  414c37:	xor    esi,DWORD PTR [esi+0x5d68928b]
  414c3d:	pop    edi
  414c3e:	and    eax,0x6d9c6733
  414c43:	jge    0x414c1f
  414c45:	stos   DWORD PTR es:[edi],eax
  414c46:	dec    edi
  414c47:	jne    0x414bf9
  414c49:	test   eax,0x376f2923
  414c4e:	jp     0x414cb8
  414c50:	mov    eax,0x5b8aabb8
  414c55:	mov    esp,0xf8c95377
  414c5a:	mov    ds:0x6b97026b,eax
  414c5f:	or     al,0x1c
  414c61:	into   
  414c62:	adc    al,0x6e
  414c64:	stos   BYTE PTR es:[edi],al
  414c65:	push   ebp
  414c66:	mov    ebx,0xf492f04b
  414c6b:	call   DWORD PTR [edx+0x72f34ee0]
  414c71:	ret    0x4db6
  414c74:	mov    esp,0x1b1376c4
  414c79:	leave  
  414c7a:	je     0x414c4d
  414c7c:	sar    BYTE PTR [edx-0xd],cl
  414c7f:	cmc    
  414c80:	or     ecx,DWORD PTR [edi-0x69]
  414c83:	nop
  414c84:	jp     0x414cae
  414c86:	daa    
  414c87:	(bad)  
  414c88:	scas   eax,DWORD PTR es:[edi]
  414c89:	stos   BYTE PTR es:[edi],al
  414c8a:	xor    ecx,edx
  414c8c:	popa   
  414c8d:	dec    esp
  414c8e:	sub    dl,dl
  414c90:	sbb    edx,DWORD PTR [edi]
  414c92:	fcom   QWORD PTR [ebx]
  414c94:	xor    al,BYTE PTR [edx-0x2b]
  414c97:	and    al,0xfe
  414c99:	mov    ebp,0x6e86e0c9
  414c9e:	dec    eax
  414c9f:	addr16 jmp 0x414c79
  414ca2:	leave  
  414ca3:	sub    eax,0x1bc37187
  414ca8:	lods   al,BYTE PTR ds:[esi]
  414ca9:	push   esp
  414caa:	mov    dh,0xb
  414cac:	push   cs
  414cad:	cmc    
  414cae:	and    eax,0x1a2c93e2
  414cb3:	mov    edi,0x5043d40d
  414cb8:	repz xchg ebx,eax
  414cba:	iret   
  414cbb:	xchg   ebp,eax
  414cbc:	jle    0x414ce4
  414cbe:	xor    eax,0x76c4602
  414cc3:	test   eax,0x92ee2619
  414cc8:	lods   al,BYTE PTR ds:[esi]
  414cc9:	clc    
  414cca:	jbe    0x414c99
  414ccc:	test   al,0x16
  414cce:	jmp    0x414d2a
  414cd0:	aaa    
  414cd1:	pop    esi
  414cd2:	(bad)  
  414cd3:	jnp    0x414d18
  414cd5:	add    ch,dl
  414cd7:	fild   DWORD PTR [si]
  414cda:	or     BYTE PTR [ecx+0x2eb2d458],ah
  414ce0:	xlat   BYTE PTR ds:[ebx]
  414ce1:	xchg   ebx,eax
  414ce2:	ret    
  414ce3:	push   ebp
  414ce4:	inc    ebx
  414ce5:	sbb    BYTE PTR [edx-0x1b901340],bl
  414ceb:	fnstsw WORD PTR [ebp-0xdd58416]
  414cf1:	mov    bp,0xddcc
  414cf5:	sbb    DWORD PTR [eax+0x5d],0x2e73507a
  414cfc:	fisub  DWORD PTR [eax]
  414cfe:	int3   
  414cff:	push   cs
  414d00:	push   es
  414d01:	(bad)  
  414d02:	retf   0x38a5
  414d05:	push   esp
  414d06:	pminsw mm5,QWORD PTR [edi]
  414d09:	add    DWORD PTR [ebp+0x44f3e9c1],eax
  414d0f:	push   cs
  414d10:	aaa    
  414d11:	and    BYTE PTR [esi-0x68aaf59f],0x1a
  414d18:	cld    
  414d19:	int    0x30
  414d1b:	leave  
  414d1c:	retf   0xba9
  414d1f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d21:	js     0x414d65
  414d23:	mov    eax,ds:0x361a862e
  414d28:	ror    dl,1
  414d2a:	rol    BYTE PTR [ebx+0x76736886],cl
  414d30:	ror    DWORD PTR [ebx],0x3d
  414d33:	sub    al,0x7f
  414d35:	pop    ebp
  414d36:	xchg   edi,eax
  414d37:	add    esp,DWORD PTR [ebp+eax*2-0x1c]
  414d3b:	xchg   edx,eax
  414d3c:	xor    dl,BYTE PTR [edi+0x76]
  414d3f:	xchg   ebp,eax
  414d40:	push   eax
  414d41:	test   BYTE PTR [eax],0xf8
  414d44:	sbb    eax,0x1ca6dd4e
  414d49:	sbb    eax,0xda0f912c
  414d4e:	sub    BYTE PTR [edi+0x19],ch
  414d51:	mov    esi,DWORD PTR [ebx]
  414d53:	cmp    DWORD PTR [edi-0x37],eax
  414d56:	dec    eax
  414d57:	mov    ds:0x1c7a7d5b,al
  414d5c:	rcr    BYTE PTR [edx-0x28aba6c5],cl
  414d62:	and    al,0xad
  414d64:	scas   eax,DWORD PTR es:[edi]
  414d65:	push   eax
  414d66:	std    
  414d67:	adc    BYTE PTR [ebp-0x42],dl
  414d6a:	frstor [ebx+0x23847192]
  414d70:	jae    0x414d41
  414d72:	mov    bh,0xd9
  414d74:	sub    BYTE PTR [esi],al
  414d76:	ret    0xcc5
  414d79:	gs mov edx,0x632df00e
  414d7f:	mov    ah,0x1b
  414d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d82:	mov    cl,0x68
  414d84:	lds    ecx,FWORD PTR [eax]
  414d86:	clc    
  414d87:	add    al,0x71
  414d89:	sbb    BYTE PTR [ebp-0x69],dl
  414d8c:	lahf   
  414d8d:	sub    DWORD PTR [ebp+0x77e9f10],ecx
  414d93:	fisttp QWORD PTR [edx-0x3ccb9390]
  414d99:	loopne 0x414dbc
  414d9b:	jmp    0x414da2
  414d9d:	cmc    
  414d9e:	int3   
  414d9f:	push   es
  414da0:	in     al,dx
  414da1:	jle    0x414d98
  414da3:	pop    es
  414da4:	sbb    al,0x5
  414da6:	push   cs
  414da7:	(bad)  
  414da8:	test   eax,0xfd78041
  414dad:	jbe    0x414e18
  414daf:	cmp    eax,0x1ab24d6
  414db4:	and    BYTE PTR [eax-0x3d6991f9],ch
  414dba:	pop    ss
  414dbb:	jae    0x414d41
  414dbd:	mov    ecx,0x1c8860f1
  414dc2:	add    al,0x81
  414dc4:	jmp    0xfa9f:0x29bc1300
  414dcb:	pop    edx
  414dcc:	push   ss
  414dcd:	ja     0x414dea
  414dcf:	clc    
  414dd0:	push   cs
  414dd1:	pop    ecx
  414dd2:	jae    0x414db1
  414dd4:	(bad)  
  414dd5:	daa    
  414dd6:	leave  
  414dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dd8:	(bad)  
  414dd9:	xor    dl,bl
  414ddb:	jmp    0x9226:0xe9320325
  414de2:	add    al,BYTE PTR fs:[ebx]
  414de5:	shl    BYTE PTR [esi+0xb],cl
  414de8:	jb     0x414d94
  414dea:	and    DWORD PTR [ebx+0x1b],edi
  414ded:	jle    0x414ddc
  414def:	fwait
  414df0:	lock jl 0x414df4
  414df3:	enter  0xf7d2,0xce
  414df7:	push   esp
  414df8:	push   ecx
  414df9:	jle    0x414d80
  414dfb:	inc    edi
  414dfc:	and    ecx,DWORD PTR [ebp+0x7af72be3]
  414e02:	xchg   esp,eax
  414e03:	sti    
  414e04:	inc    esp
  414e05:	pop    es
  414e06:	ins    DWORD PTR es:[edi],dx
  414e07:	dec    ebx
  414e08:	push   0xfa8511d3
  414e0d:	mov    eax,ds:0xc67561e2
  414e12:	jg     0x414db6
  414e14:	xor    BYTE PTR [ecx-0x6f9eebe3],0xc2
  414e1b:	sbb    al,0x80
  414e1d:	adc    al,0x14
  414e1f:	push   es
  414e20:	dec    edx
  414e21:	arpl   WORD PTR [eax-0x80],sp
  414e24:	dec    esi
  414e25:	mov    ds:0xc4c9a862,eax
  414e2a:	into   
  414e2b:	fldlg2 
  414e2d:	push   ebp
  414e2e:	cmp    BYTE PTR es:[eax],ah
  414e31:	xchg   edx,eax
  414e32:	push   eax
  414e33:	add    eax,esp
  414e35:	in     eax,0xe0
  414e37:	imul   edi,DWORD PTR [edx-0x7761b0dd],0x61
  414e3e:	add    eax,0x32d0bf45
  414e43:	pop    eax
  414e44:	jg     0x414dea
  414e46:	rcl    DWORD PTR [eax],cl
  414e48:	inc    edx
  414e49:	(bad)  
  414e4a:	or     BYTE PTR [edx-0x691b9090],cl
  414e50:	adc    al,al
  414e52:	shl    BYTE PTR [edx+ecx*8-0x1f],0xe2
  414e57:	int3   
  414e58:	sbb    al,0x73
  414e5a:	stos   DWORD PTR es:[edi],eax
  414e5b:	cmc    
  414e5c:	pop    edx
  414e5d:	jns    0x414e5e
  414e5f:	or     DWORD PTR [edi+0x5838a0ea],0xffffffa2
  414e66:	dec    esp
  414e67:	and    BYTE PTR [esi-0x2acdeccf],0xeb
  414e6e:	aaa    
  414e6f:	imul   eax,DWORD PTR [eax+0x30],0x4782e8d1
  414e76:	retf   
  414e77:	sub    eax,ecx
  414e79:	(bad)  
  414e7a:	xchg   BYTE PTR [bx+si-0x58],bh
  414e7e:	aad    0x8e
  414e80:	mov    dl,0x82
  414e82:	retf   
  414e83:	inc    esp
  414e84:	out    dx,al
  414e85:	sar    DWORD PTR [eax],cl
  414e87:	xchg   ecx,eax
  414e88:	popf   
  414e89:	mov    dl,0xf9
  414e8b:	ss pop esp
  414e8d:	mov    WORD PTR [ecx-0x1f],fs
  414e90:	cs mov ecx,0xce6c3b29
  414e96:	jne    0x414e3a
  414e98:	lds    ebp,FWORD PTR [eax+0x4472e7ce]
  414e9e:	das    
  414e9f:	push   0x64
  414ea1:	jb     0x414eb4
  414ea3:	push   es
  414ea4:	jecxz  0x414e84
  414ea6:	and    DWORD PTR ds:0xbbc61b61,eax
  414ead:	or     eax,0xe1159dac
  414eb2:	xchg   ebx,eax
  414eb3:	inc    esp
  414eb4:	jp     0x414e79
  414eb6:	jne    0x414e9d
  414eb8:	mov    ecx,0xee6b795d
  414ebd:	dec    eax
  414ebe:	mov    dl,dh
  414ec0:	out    0x4a,eax
  414ec2:	mov    edi,0xb5f4dfa4
  414ec7:	aaa    
  414ec8:	and    BYTE PTR [eax+0x23],al
  414ecb:	and    ecx,DWORD PTR [esp+edi*8-0x19]
  414ecf:	addr16 call 0x7abc5aad
  414ed5:	shl    esp,cl
  414ed7:	popf   
  414ed8:	and    BYTE PTR [ebp-0x17ca8f8b],al
  414ede:	sar    ah,cl
  414ee0:	std    
  414ee1:	ja     0x414e7c
  414ee3:	cmp    al,0xc0
  414ee5:	(bad)  
  414ee6:	mov    DWORD PTR ds:0x80a4f02a,eax
  414eec:	push   eax
  414eed:	ja     0x414eb1
  414eef:	pusha  
  414ef0:	fdivr  st,st(7)
  414ef2:	sub    al,0xa6
  414ef4:	sub    eax,0x43dffbda
  414ef9:	pop    esp
  414efa:	push   esi
  414efb:	test   al,dh
  414efd:	mov    dh,0x64
  414eff:	mov    dl,0xcd
  414f01:	push   edx
  414f02:	imul   esi,DWORD PTR [ebp+edx*8-0x6f538e96],0x22
  414f0a:	ror    BYTE PTR [esi-0x1956fe06],cl
  414f10:	aaa    
  414f11:	iret   
  414f12:	inc    esi
  414f13:	push   ebp
  414f14:	mov    dh,0x53
  414f16:	rcr    DWORD PTR [edi-0x56fa0392],1
  414f1c:	std    
  414f1d:	and    eax,0x3fa1c430
  414f22:	pop    esp
  414f23:	or     DWORD PTR [ecx+0x4c],ebp
  414f26:	in     al,0x50
  414f28:	out    0x4a,al
  414f2a:	push   edi
  414f2b:	fs inc eax
  414f2d:	xor    dh,BYTE PTR [ebx-0x48]
  414f30:	out    dx,al
  414f31:	mov    cl,0x6
  414f33:	int3   
  414f34:	or     DWORD PTR [eax+0x1c],esp
  414f37:	push   ebp
  414f38:	lods   al,BYTE PTR ds:[esi]
  414f39:	adc    DWORD PTR [eax+0x70ae592a],esi
  414f3f:	fdivrp st(0),st
  414f41:	sahf   
  414f42:	inc    edx
  414f43:	add    al,0xa8
  414f45:	sub    DWORD PTR [edi+0x7b812fcf],esp
  414f4b:	shr    bh,cl
  414f4d:	pop    edi
  414f4e:	mov    BYTE PTR [ecx],dh
  414f50:	jecxz  0x414fa1
  414f52:	out    dx,al
  414f53:	dec    edx
  414f54:	je     0x414f7a
  414f56:	loop   0x414f71
  414f58:	sahf   
  414f59:	mov    dl,0xf1
  414f5b:	std    
  414f5c:	enter  0x3d53,0xd
  414f60:	xchg   esp,eax
  414f61:	test   BYTE PTR [eax-0x4e76e50],al
  414f67:	lods   eax,DWORD PTR ds:[esi]
  414f68:	sbb    eax,0xb88b0d22
  414f6d:	mov    ecx,0x33fdd82b
  414f72:	push   cs
  414f73:	push   edx
  414f74:	je     0x414fa5
  414f76:	daa    
  414f77:	or     edi,esp
  414f79:	pop    es
  414f7a:	lock daa 
  414f7c:	leave  
  414f7d:	lock hlt 
  414f7f:	xor    BYTE PTR [eax],dl
  414f81:	outs   dx,DWORD PTR ds:[esi]
  414f82:	add    dh,cl
  414f84:	cmp    eax,0x3b36e70f
  414f89:	mov    edi,0x95b905b
  414f8e:	test   dl,dl
  414f90:	jl     0x414fc6
  414f92:	sub    eax,0xb0ace082
  414f97:	inc    ecx
  414f98:	add    bh,BYTE PTR [eax+0x7b]
  414f9b:	jns    0x414f71
  414f9d:	sbb    DWORD PTR [edi-0x19],0x8d243555
  414fa4:	jmp    0x4f8f:0x3b87c8a
  414fab:	sbb    al,0x11
  414fad:	int3   
  414fae:	xchg   ebx,eax
  414faf:	out    dx,al
  414fb0:	bound  ebx,QWORD PTR ds:0x9e82678d
  414fb6:	iret   
  414fb7:	retf   0x6702
  414fba:	pop    es
  414fbb:	add    dh,ch
  414fbd:	idiv   edx
  414fbf:	add    dl,BYTE PTR [esi]
  414fc1:	xchg   cl,bh
  414fc3:	push   ebp
  414fc4:	mov    ebp,0x4c8a2e44
  414fc9:	cwde   
  414fca:	or     DWORD PTR [ecx+0x2ab5bd6],0x65e26ccb
  414fd4:	fisttp QWORD PTR [edx-0x54]
  414fd7:	or     eax,0x32df6ee1
  414fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fdd:	pop    edx
  414fde:	adc    al,0xd6
  414fe0:	xchg   esi,eax
  414fe1:	add    dl,bl
  414fe3:	cmp    DWORD PTR [eax-0x41],esi
  414fe6:	inc    ebp
  414fe7:	or     BYTE PTR [esi+esi*8-0x4833ab30],dh
  414fee:	push   ebx
  414fef:	inc    edi
  414ff0:	fadd   DWORD PTR [eax+0x5a]
  414ff3:	add    cl,BYTE PTR [edi+0xf9cc4a9]
  414ff9:	mov    cl,0x56
  414ffb:	arpl   WORD PTR [edi-0x54],bx
  414ffe:	and    esi,DWORD PTR [eax-0x77abcf78]
  415004:	loopne 0x414fc4
  415006:	rcr    DWORD PTR [edx],0xd7
  415009:	fadd   DWORD PTR [ebp+0x7f]
  41500c:	js     0x414fdf
  41500e:	cmp    eax,0x3b97f651
  415013:	seto   BYTE PTR [esi+edx*1-0x6d818b19]
  41501b:	add    eax,0x89f052b9
  415020:	add    al,0xe3
  415022:	or     ecx,DWORD PTR [esi+0x48ff6f00]
  415028:	add    ah,BYTE PTR [ecx+0x33f724ec]
  41502e:	and    al,BYTE PTR [edi-0x299e198e]
  415034:	sub    edx,DWORD PTR [ecx]
  415036:	pop    esp
  415037:	ja     0x414fba
  415039:	jg     0x415079
  41503b:	push   eax
  41503c:	fld    TBYTE PTR [esi+ebp*2+0x8]
  415040:	add    ch,ah
  415042:	(bad)  
  415043:	icebp  
  415044:	clc    
  415045:	mov    cl,0x70
  415047:	push   ecx
  415048:	dec    ecx
  415049:	cmp    BYTE PTR [esi+0x5],ah
  41504c:	mov    edi,0x57d60855
  415051:	mov    al,0x9
  415053:	xchg   esp,eax
  415054:	scas   eax,DWORD PTR es:[edi]
  415055:	fcomp  QWORD PTR [esi]
  415057:	mov    dh,0x99
  415059:	inc    eax
  41505a:	loope  0x415035
  41505c:	dec    esp
  41505d:	jbe    0x415076
  41505f:	mov    cl,0x19
  415061:	ins    DWORD PTR es:[edi],dx
  415062:	in     eax,dx
  415063:	daa    
  415064:	fucompp 
  415066:	mov    gs,WORD PTR [ecx-0x71]
  415069:	mov    ebp,0x7f0d8d89
  41506e:	cmp    edi,edi
  415070:	dec    eax
  415071:	out    0xe7,al
  415073:	mov    cl,0x2f
  415075:	mov    edi,0xc5cae324
  41507a:	push   ds
  41507b:	jbe    0x4150a6
  41507d:	dec    edi
  41507e:	adc    DWORD PTR [edx-0x63db942b],edx
  415084:	jecxz  0x4150d7
  415086:	adc    BYTE PTR ds:0x25eaeef2,cl
  41508c:	(bad)  
  41508d:	xor    al,0xaf
  41508f:	ss mov al,0xa1
  415092:	and    al,0x89
  415094:	sub    BYTE PTR cs:[ecx-0x7c],dl
  415098:	pusha  
  415099:	mov    esp,0xb5f87988
  41509e:	sbb    DWORD PTR [edx],eax
  4150a0:	mov    al,0x1d
  4150a2:	pop    esi
  4150a3:	test   BYTE PTR [edi],ah
  4150a5:	mov    ch,0x3b
  4150a7:	stc    
  4150a8:	cmp    al,0xb8
  4150aa:	lods   eax,DWORD PTR ds:[esi]
  4150ab:	addr16 out 0x6c,eax
  4150ae:	loop   0x4150ce
  4150b0:	rol    DWORD PTR [eax+0x4cb7e2c4],0xe3
  4150b7:	sbb    eax,0x6556ea45
  4150bc:	rol    DWORD PTR [edi+0x1c3c91c6],1
  4150c2:	outs   dx,DWORD PTR ds:[esi]
  4150c3:	mov    ch,0xe6
  4150c5:	ret    0x3609
  4150c8:	pop    eax
  4150c9:	fwait
  4150ca:	jnp    0x415073
  4150cc:	ss in  eax,0xf4
  4150cf:	mov    ch,BYTE PTR [edx+0x4f]
  4150d2:	repnz scas eax,DWORD PTR es:[edi]
  4150d4:	mov    eax,ds:0xdb9d4c98
  4150d9:	inc    edx
  4150da:	cmp    BYTE PTR [eax-0x26fa50a4],ch
  4150e0:	cmp    DWORD PTR [esi+0x79050f15],0xffffff92
  4150e7:	std    
  4150e8:	ret    
  4150e9:	fwait
  4150ea:	test   BYTE PTR [ecx-0xc],bl
  4150ed:	in     al,0x2d
  4150ef:	sub    al,0xd0
  4150f1:	cs pop esp
  4150f3:	mov    cl,0xeb
  4150f5:	mov    bh,0xc8
  4150f7:	dec    ebx
  4150f8:	mov    ecx,0x7be59d5b
  4150fd:	sbb    al,0x8a
  4150ff:	mov    bl,0xc5
  415101:	loop   0x4150fc
  415103:	adc    ch,BYTE PTR [esi]
  415105:	in     eax,dx
  415106:	out    dx,eax
  415107:	out    0xef,al
  415109:	sti    
  41510a:	fucom  st(2)
  41510c:	pop    ecx
  41510d:	rcl    BYTE PTR [esi],1
  41510f:	push   ss
  415110:	pop    esp
  415111:	mov    ds:0x276864e9,eax
  415116:	add    bh,BYTE PTR [ebx]
  415118:	scas   al,BYTE PTR es:[edi]
  415119:	popa   
  41511a:	shl    DWORD PTR ds:0xb00b76dd,0x36
  415121:	push   ecx
  415122:	outs   dx,BYTE PTR ds:[esi]
  415123:	jno    0x41518e
  415125:	arpl   WORD PTR [edx-0x66],bp
  415128:	clc    
  415129:	push   ds
  41512a:	pop    es
  41512b:	pop    ebx
  41512c:	inc    ebx
  41512d:	test   eax,0x5e34216d
  415132:	mov    cl,0x3d
  415134:	hlt    
  415135:	inc    edi
  415136:	mov    ds:0xcf27dd87,al
  41513b:	and    ebp,esi
  41513d:	mov    esi,0x60ff9957
  415142:	addr16 xor cl,bh
  415145:	fs sbb al,0x7e
  415148:	fstp   TBYTE PTR [edi-0x51]
  41514b:	mov    bl,0x57
  41514d:	imul   DWORD PTR [eax-0xe]
  415150:	pushf  
  415151:	pop    edx
  415152:	jp     0x41517e
  415154:	dec    esp
  415155:	and    eax,0x1488a8ed
  41515a:	(bad)  
  41515b:	out    dx,al
  41515c:	jae    0x415125
  41515e:	into   
  41515f:	mov    ebp,0x6c117e82
  415164:	push   0x508e051c
  415169:	mov    ds:0x4513034d,al
  41516e:	ret    0x758e
  415171:	push   edx
  415172:	outs   dx,DWORD PTR ds:[esi]
  415173:	mov    cl,0x47
  415175:	jno    0x4151a2
  415177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415178:	jno    0x415128
  41517a:	sub    ebx,DWORD PTR [ebp+0x2a1fcfa0]
  415180:	jmp    esi
  415182:	fst    DWORD PTR [edi+0x72008c26]
  415188:	inc    esi
  415189:	mov    eax,ds:0x400c554f
  41518e:	(bad)  
  41518f:	jmp    0x53773e36
  415194:	out    0x69,al
  415196:	and    esi,ebp
  415198:	aam    0x15
  41519a:	mov    edi,0x9c7516db
  41519f:	jge    0x4151d2
  4151a1:	cmp    BYTE PTR [ebx],al
  4151a3:	iret   
  4151a4:	mov    eax,ds:0x2bb7053a
  4151a9:	xchg   ebp,eax
  4151aa:	pop    ebp
  4151ab:	xchg   ecx,eax
  4151ac:	mov    dh,BYTE PTR [edx+ebx*4-0xe]
  4151b0:	into   
  4151b1:	pop    ss
  4151b2:	cmp    esi,0x72
  4151b5:	and    eax,0xa9335284
  4151ba:	xlat   BYTE PTR ds:[ebx]
  4151bb:	imul   edi,DWORD PTR ds:0x6e75d4e2,0xa11b76f0
  4151c5:	dec    ecx
  4151c6:	pop    esp
  4151c7:	int    0x40
  4151c9:	jle    0x415166
  4151cb:	ja     0x4151a4
  4151cd:	js     0x415216
  4151cf:	xchg   esi,eax
  4151d0:	fdivr  st,st(3)
  4151d2:	pop    edi
  4151d3:	(bad)  
  4151d4:	fist   WORD PTR [edx+0x7a1049ee]
  4151da:	xor    DWORD PTR fs:[ebp-0x11],edi
  4151de:	scas   eax,DWORD PTR es:[edi]
  4151df:	and    BYTE PTR [ebx],ah
  4151e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e2:	sbb    ebp,esi
  4151e4:	push   esi
  4151e5:	push   0x44a477a0
  4151ea:	push   edi
  4151eb:	call   0x71b26042
  4151f0:	xchg   bl,dh
  4151f2:	mov    al,0xe9
  4151f4:	mov    al,0x32
  4151f6:	push   edx
  4151f7:	sub    DWORD PTR [ecx-0x35],ebp
  4151fa:	lds    edx,FWORD PTR [esi+0x48]
  4151fd:	popa   
  4151fe:	fninit 
  415200:	adc    eax,0x96efffea
  415205:	ret    0x3024
  415208:	or     eax,0xaa23b6f8
  41520d:	pop    ds
  41520e:	cmp    DWORD PTR [esi+0x7a],edi
  415211:	lods   eax,DWORD PTR ds:[esi]
  415212:	fdiv   QWORD PTR [esi+0x22]
  415215:	xchg   esi,eax
  415216:	lods   eax,DWORD PTR ds:[esi]
  415217:	sbb    DWORD PTR [esi-0x58],edi
  41521a:	dec    ecx
  41521b:	and    edx,DWORD PTR [edi]
  41521d:	pop    edi
  41521e:	call   0x7043:0x3ffd153a
  415225:	bound  esp,QWORD PTR [eax+0x22]
  415228:	mov    al,0x41
  41522a:	adc    DWORD PTR [edx-0xdd5e9a1],ebp
  415230:	and    al,0x83
  415232:	or     ah,BYTE PTR [edi]
  415234:	jecxz  0x415238
  415236:	inc    ebp
  415237:	adc    eax,0x7f169122
  41523c:	iret   
  41523d:	mov    esi,0xd3d4c501
  415242:	ins    DWORD PTR es:[edi],dx
  415243:	pinsrw mm5,WORD PTR [ecx+esi*1+0x23395dad],0x8a
  41524c:	test   BYTE PTR ds:0xfc84dfce,al
  415252:	mov    ch,0xf4
  415254:	(bad)  [edi]
  415256:	and    eax,0x88e370a2
  41525b:	cld    
  41525c:	clc    
  41525d:	cmc    
  41525e:	jecxz  0x4152bc
  415260:	test   al,0x55
  415262:	je     0x415232
  415264:	cmp    eax,0x35421add
  415269:	pop    ecx
  41526a:	out    dx,al
  41526b:	sbb    esp,DWORD PTR [edx-0x76]
  41526e:	das    
  41526f:	sub    ch,BYTE PTR [edi+esi*2-0x35]
  415273:	cmp    DWORD PTR ds:0xe141663c,ebx
  415279:	sbb    eax,ecx
  41527b:	sub    ebp,DWORD PTR [eax-0x77]
  41527e:	test   BYTE PTR ss:[ecx-0x17],al
  415282:	pop    eax
  415283:	jmp    0x5e380aa2
  415288:	cs jb  0x4152f7
  41528b:	shl    BYTE PTR [ecx+0x43],cl
  41528e:	scas   al,BYTE PTR es:[edi]
  41528f:	retf   0x22f6
  415292:	pop    es
  415293:	enter  0x6dd6,0x65
  415297:	rcr    BYTE PTR [eax+ebp*2+0x2e],cl
  41529b:	inc    edx
  41529c:	xchg   edx,eax
  41529d:	aad    0x97
  41529f:	xchg   edx,eax
  4152a0:	mov    ecx,0xa65b0e54
  4152a5:	mov    esi,0x96758a71
  4152aa:	add    dl,BYTE PTR [ebp+0x72]
  4152ad:	or     BYTE PTR [edi-0x2b7e2cbe],dh
  4152b3:	stc    
  4152b4:	seta   BYTE PTR [esi]
  4152b7:	test   al,0x84
  4152b9:	adc    esp,DWORD PTR [eax-0x1b]
  4152bc:	cwde   
  4152bd:	mov    edi,0x16d5b490
  4152c2:	add    eax,0x9dcb5eb3
  4152c7:	outs   dx,DWORD PTR ds:[esi]
  4152c8:	push   es
  4152c9:	adc    ecx,DWORD PTR ds:0xcbdcf876
  4152cf:	stos   BYTE PTR es:[edi],al
  4152d0:	jnp    0x415253
  4152d2:	add    esp,DWORD PTR [edx+0x1054a3c3]
  4152d8:	leave  
  4152d9:	mov    bl,0xf
  4152db:	out    0xe4,al
  4152dd:	das    
  4152de:	dec    edi
  4152df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152e0:	lea    ecx,[ecx-0x3d]
  4152e3:	pop    ebp
  4152e4:	add    cl,BYTE PTR [edi+0x44563853]
  4152ea:	jmp    0x2f67:0x7c6bfd4e
  4152f1:	sub    BYTE PTR [ebx+0x15],bh
  4152f4:	je     0x4152e0
  4152f6:	test   DWORD PTR [edi],esi
  4152f8:	je     0x4152d7
  4152fa:	inc    edi
  4152fb:	inc    ebp
  4152fc:	ret    
  4152fd:	mov    esi,0x85ea3aca
  415302:	mov    esi,0xec703f97
  415307:	in     al,dx
  415308:	daa    
  415309:	jno    0x4152ce
  41530b:	mov    BYTE PTR [ebx-0x11],ah
  41530e:	and    bl,bl
  415310:	mov    DWORD PTR [esi+ebx*4+0x4aee36a0],esi
  415317:	mov    eax,ds:0x974d0968
  41531c:	popa   
  41531d:	div    BYTE PTR [ecx]
  41531f:	or     al,0x1f
  415321:	cdq    
  415322:	js     0x415365
  415324:	lods   eax,DWORD PTR ds:[esi]
  415325:	pusha  
  415326:	aam    0x7d
  415328:	test   esi,eax
  41532a:	add    eax,0x9f05ed95
  41532f:	xor    al,0xc8
  415331:	sub    eax,0xd33eafc1
  415336:	jecxz  0x415314
  415338:	in     eax,dx
  415339:	xor    ebx,DWORD PTR [edx-0x3b7834fb]
  41533f:	mov    esi,0x126c54e5
  415344:	push   ecx
  415345:	mov    bl,ah
  415347:	mov    cl,0x91
  415349:	stc    
  41534a:	scas   eax,DWORD PTR es:[edi]
  41534b:	jge    0x415307
  41534d:	xlat   BYTE PTR ds:[ebx]
  41534e:	lahf   
  41534f:	jmp    0x415373
  415351:	add    DWORD PTR [ecx+esi*4-0x54],esp
  415355:	pop    esp
  415356:	jmp    0x415357
  415358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415359:	and    DWORD PTR [esi],ebp
  41535b:	jns    0x4152eb
  41535d:	dec    ebp
  41535e:	add    al,BYTE PTR [ebx+0x40]
  415361:	icebp  
  415362:	fxch   st(4)
  415364:	xchg   esp,ebp
  415366:	cld    
  415367:	pushf  
  415368:	or     al,0xc
  41536a:	xor    DWORD PTR [ebx+edx*2+0x2e29af89],ebp
  415371:	add    edi,DWORD PTR [eax+0x71]
  415374:	inc    eax
  415375:	cdq    
  415376:	sbb    esp,esp
  415378:	enter  0xf1b0,0xb4
  41537c:	sub    eax,0xccef209c
  415381:	lods   eax,DWORD PTR ds:[esi]
  415382:	push   0xffffffc3
  415384:	stc    
  415385:	mov    DWORD PTR [edi+0x4b],esi
  415388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415389:	jae    0x41535f
  41538b:	enter  0xdc6,0xc0
  41538f:	in     eax,dx
  415390:	push   eax
  415391:	mov    ds:0xbbcb0915,eax
  415396:	icebp  
  415397:	push   esi
  415398:	repnz popf 
  41539a:	dec    ebp
  41539b:	ins    DWORD PTR es:[edi],dx
  41539c:	into   
  41539d:	fiadd  WORD PTR [edx]
  41539f:	or     esi,0xc
  4153a2:	inc    esi
  4153a3:	test   DWORD PTR [esi],0x1b5da89
  4153a9:	sub    DWORD PTR [edx-0x16],0xfe33c4da
  4153b0:	out    0xb6,al
  4153b2:	jbe    0x4153a0
  4153b4:	push   es
  4153b5:	enter  0xe1f6,0xeb
  4153b9:	in     al,dx
  4153ba:	ss shl BYTE PTR ds:0x36510199,0x2d
  4153c3:	btr    DWORD PTR [edi-0x635894c4],ecx
  4153ca:	mov    edi,0x16af4bd2
  4153cf:	loope  0x4153c8
  4153d1:	or     dh,BYTE PTR [ecx-0x56484dd1]
  4153d7:	push   ebx
  4153d8:	xchg   ebx,eax
  4153d9:	xchg   eax,eax
  4153db:	mov    ah,0x60
  4153dd:	sbb    BYTE PTR [ebx+0x1d33aae4],ch
  4153e3:	cmp    bl,BYTE PTR [ecx+0x46]
  4153e6:	jmp    0x3dca:0x78988953
  4153ed:	jb     0x41544f
  4153ef:	enter  0x8525,0x74
  4153f3:	xchg   esp,eax
  4153f4:	xor    edx,DWORD PTR [ebp-0x6ffb45d2]
  4153fa:	sub    ebx,DWORD PTR [ebx-0x7b]
  4153fd:	sub    bl,BYTE PTR [ebp-0x404dc8bb]
  415403:	xchg   BYTE PTR [eax],ch
  415405:	mov    edi,0x71817912
  41540a:	jle    0x41547c
  41540c:	dec    ecx
  41540d:	out    dx,al
  41540e:	and    al,0xaa
  415410:	push   ebx
  415411:	jmp    0xabee:0xaea0dc86
  415418:	lea    esi,[ecx+ebx*4+0x72]
  41541c:	sahf   
  41541d:	mov    eax,0xeef3154f
  415422:	push   ebx
  415423:	sbb    esi,ebp
  415425:	fiadd  DWORD PTR [ecx]
  415427:	jnp    0x415468
  415429:	pop    es
  41542a:	or     eax,0x5a2134d6
  41542f:	push   cs
  415430:	ret    0xfa83
  415433:	push   0x58581754
  415438:	out    0xbe,eax
  41543a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41543b:	mov    WORD PTR [ebp-0x42],ds
  41543e:	sbb    DWORD PTR [ebx-0x25],0xffffffc7
  415442:	in     al,dx
  415443:	ret    
  415444:	imul   ecx,DWORD PTR [eax],0x43ee94d6
  41544a:	loopne 0x41545e
  41544c:	fadd   QWORD PTR [esi-0x6daf7d7c]
  415452:	xlat   BYTE PTR ds:[ebx]
  415453:	out    0x33,eax
  415455:	sub    ecx,esp
  415457:	out    dx,eax
  415458:	mov    al,ds:0x21a0ba6b
  41545d:	aad    0xf7
  41545f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415460:	movhps QWORD PTR [ecx+0x612059bd],xmm1
  415467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415468:	inc    dl
  41546a:	xor    cl,BYTE PTR [ebx+0x2d]
  41546d:	test   al,0xd5
  41546f:	push   esi
  415470:	popa   
  415471:	lods   eax,DWORD PTR ds:[esi]
  415472:	pusha  
  415473:	cs (bad) 
  415475:	shl    DWORD PTR [ebx+ebx*8-0x30cdb5e7],1
  41547c:	mov    eax,0xd418f325
  415481:	out    dx,eax
  415482:	inc    ebp
  415483:	mov    edx,0xc321a7e0
  415488:	into   
  415489:	aam    0x5a
  41548b:	mov    al,cs:0xf3c0ccd
  415491:	inc    DWORD PTR [ebx+0x572dbfad]
  415497:	cmp    edi,DWORD PTR [edi]
  415499:	or     eax,0xb1a47838
  41549e:	imul   edi,DWORD PTR [esi-0x8],0x77
  4154a2:	ja     0x415461
  4154a4:	dec    esp
  4154a5:	or     al,0x86
  4154a7:	cmp    eax,0xc87ee166
  4154ac:	inc    ebp
  4154ad:	inc    eax
  4154ae:	lahf   
  4154af:	push   ds
  4154b0:	fnstcw WORD PTR [ebp+0x8]
  4154b3:	add    dh,BYTE PTR [esi-0x5]
  4154b6:	push   edi
  4154b7:	(bad)  
  4154b8:	push   ss
  4154b9:	cld    
  4154ba:	int    0x7
  4154bc:	fsubr  DWORD PTR [edx]
  4154be:	inc    esi
  4154bf:	jns    0x415465
  4154c1:	ja     0x415483
  4154c3:	jp     0x41550b
  4154c5:	pop    ebp
  4154c6:	and    ch,BYTE PTR [esi-0x4f7d7260]
  4154cc:	push   cs
  4154cd:	cmp    eax,0xb04ab224
  4154d2:	push   ss
  4154d3:	sbb    al,0x36
  4154d5:	pop    esi
  4154d6:	sbb    bh,BYTE PTR [ebp+0x7d]
  4154d9:	test   BYTE PTR [ebp-0xf],ch
  4154dc:	push   ss
  4154dd:	jb     0x415534
  4154df:	or     eax,0x2d318715
  4154e4:	push   edi
  4154e5:	aas    
  4154e6:	sub    al,BYTE PTR [eax+0x4e835d7a]
  4154ec:	ffreep st(0)
  4154ee:	leave  
  4154ef:	test   eax,0xdf04307a
  4154f4:	xor    DWORD PTR [ebx],edi
  4154f6:	push   cs
  4154f7:	and    al,0xce
  4154f9:	dec    ebp
  4154fa:	and    al,0xc8
  4154fc:	xor    BYTE PTR [edi],0x16
  4154ff:	sar    BYTE PTR ds:0x78512787,cl
  415505:	and    dl,ah
  415507:	int3   
  415508:	das    
  415509:	xor    bl,ch
  41550b:	pop    ds
  41550c:	and    esi,DWORD PTR [edi-0x32af46c1]
  415512:	mov    al,ds:0xbce3e2ec
  415517:	fist   WORD PTR [esi+0x5b]
  41551a:	push   esi
  41551b:	and    BYTE PTR [edi-0x49],0x3e
  41551f:	xlat   BYTE PTR ds:[ebx]
  415520:	push   edx
  415521:	mov    esp,DWORD PTR [ebx-0x1c8c3b9b]
  415527:	cs dec eax
  415529:	mov    esi,0xdd7103c8
  41552e:	add    eax,0xd5d50b1f
  415533:	xor    ah,cl
  415535:	ffreep st(4)
  415537:	push   edx
  415538:	aam    0x87
  41553a:	sub    bh,BYTE PTR [edi+0x1ee4ff02]
  415540:	xchg   esi,eax
  415541:	std    
  415542:	les    ebx,FWORD PTR [ecx]
  415544:	push   cs
  415545:	mov    ch,0x16
  415547:	lahf   
  415548:	xor    al,0x1c
  41554a:	cmp    DWORD PTR [eax-0x64],ebp
  41554d:	and    DWORD PTR [eax-0x29ddf707],edi
  415553:	aam    0x37
  415555:	(bad)  
  415556:	nop
  415557:	adc    ecx,esi
  415559:	lds    ebx,FWORD PTR [edx+0x2cd7fe33]
  41555f:	mov    edx,0xcc93a314
  415564:	jle    0x415532
  415566:	xlat   BYTE PTR ds:[ebx]
  415567:	dec    esp
  415568:	mov    ebx,0xbcc13269
  41556d:	mov    bh,0xdc
  41556f:	xchg   edx,eax
  415570:	nop
  415571:	lods   al,BYTE PTR ds:[esi]
  415573:	in     al,dx
  415574:	sbb    BYTE PTR [esi-0x93474d1],cl
  41557a:	repnz inc ebp
  41557c:	xchg   BYTE PTR [edi],bh
  41557e:	int3   
  41557f:	sub    ch,bh
  415581:	push   ds
  415582:	pop    eax
  415583:	(bad)  
  415584:	xor    eax,0xfaba8cdd
  415589:	mov    dh,BYTE PTR [esi+0x27]
  41558c:	loope  0x415605
  41558e:	(bad)  
  41558f:	sahf   
  415590:	cdq    
  415591:	sbb    DWORD PTR [edx-0x22],ebp
  415594:	dec    ecx
  415595:	xchg   DWORD PTR [edi],esi
  415597:	ds ins DWORD PTR es:[edi],dx
  415599:	lock fiadd WORD PTR [eax+0x27]
  41559d:	or     al,0xaf
  41559f:	mov    dl,0x31
  4155a1:	pop    ds
  4155a2:	outs   dx,BYTE PTR ds:[esi]
  4155a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155a4:	xchg   esp,eax
  4155a5:	in     eax,dx
  4155a6:	jno    0x41556f
  4155a8:	test   eax,0x23d48cf1
  4155ad:	stos   BYTE PTR es:[edi],al
  4155ae:	cmovle ebp,edx
  4155b1:	jg     0x415549
  4155b3:	push   di
  4155b5:	mov    edi,gs
  4155b7:	jbe    0x4155f2
  4155b9:	mov    gs,ebx
  4155bb:	out    0xed,al
  4155bd:	sub    eax,0x1f958977
  4155c2:	pop    esp
  4155c3:	xor    BYTE PTR [ebx+0x71],0xf7
  4155c7:	jno    0x415637
  4155c9:	jne    0x415571
  4155cb:	fwait
  4155cc:	pop    eax
  4155cd:	mov    bh,0x43
  4155cf:	mov    WORD PTR [ebp+0x29],gs
  4155d2:	push   edi
  4155d3:	out    0xfc,al
  4155d5:	mov    ebp,0xc4b60144
  4155da:	mov    edx,0x63f7b0fd
  4155df:	cdq    
  4155e0:	push   ss
  4155e1:	add    DWORD PTR [ebp+0x2ff25aa4],ebx
  4155e7:	lods   al,BYTE PTR ds:[esi]
  4155e8:	and    al,0x3e
  4155ea:	mov    al,gs:0x4b5dd313
  4155f0:	dec    ecx
  4155f1:	jg     0x4155de
  4155f3:	shl    BYTE PTR [esi-0x1a],0xe0
  4155f7:	pop    ss
  4155f8:	xor    eax,0xd8d53708
  4155fd:	cmp    esp,edi
  4155ff:	xor    DWORD PTR [edx+edi*1],edx
  415602:	std    
  415603:	and    DWORD PTR [ebx+0x2c052d76],edx
  415609:	xor    esp,ebx
  41560b:	jae    0x415608
  41560d:	and    al,0xa2
  41560f:	push   ebp
  415610:	imul   edi,DWORD PTR [edx],0x24
  415613:	add    edx,DWORD PTR [edx-0x45]
  415616:	mov    al,ds:0x108f09df
  41561b:	sub    al,0x95
  41561d:	lods   al,BYTE PTR ds:[esi]
  41561e:	int    0xa4
  415620:	xchg   ebx,eax
  415621:	pop    eax
  415622:	add    ecx,DWORD PTR [edx]
  415624:	dec    ebp
  415625:	into   
  415626:	add    ch,ch
  415628:	psraw  mm5,QWORD PTR [esi]
  41562b:	sub    al,0x24
  41562e:	ins    BYTE PTR es:[edi],dx
  41562f:	outs   dx,DWORD PTR ds:[esi]
  415630:	outs   dx,BYTE PTR ds:[esi]
  415631:	ins    DWORD PTR es:[edi],dx
  415632:	push   eax
  415633:	push   ebp
  415634:	out    dx,eax
  415635:	leave  
  415636:	into   
  415637:	cmp    bh,BYTE PTR ds:0x133c7f09
  41563d:	outs   dx,DWORD PTR ds:[esi]
  41563e:	cwde   
  41563f:	xor    cl,ch
  415641:	call   0x5406b898
  415646:	inc    eax
  415647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415648:	inc    eax
  415649:	push   esp
  41564a:	fsubr  DWORD PTR [esi]
  41564c:	retf   
  41564d:	jne    0x4155ea
  41564f:	mov    ss,WORD PTR [esi+0x3632aef1]
  415655:	or     dl,bh
  415657:	mov    cl,0x83
  415659:	xor    al,al
  41565b:	xchg   edi,eax
  41565c:	popa   
  41565d:	and    al,BYTE PTR [ebp+0x77f70c37]
  415663:	enter  0xe9d8,0x1e
  415667:	into   
  415668:	lea    ebx,[esi-0x30ed5bad]
  41566e:	fsubr  QWORD PTR [ebp+0xa45f9c5]
  415674:	fmul   st,st(2)
  415676:	sbb    al,0xe6
  415678:	retf   
  415679:	dec    eax
  41567a:	mov    ecx,0xf644628d
  41567f:	test   eax,0xb58c0feb
  415684:	and    DWORD PTR [ecx],esp
  415686:	(bad)  
  415687:	fidiv  DWORD PTR [eax]
  415689:	mov    BYTE PTR [esi],bl
  41568b:	(bad)  
  41568c:	xchg   ebp,eax
  41568d:	mov    esi,ecx
  41568f:	fwait
  415690:	dec    ecx
  415691:	and    al,0xaa
  415693:	cwde   
  415694:	sbb    dh,BYTE PTR [esi-0x3e]
  415697:	xor    al,0x7f
  415699:	jne    0x415637
  41569b:	or     al,0x71
  41569d:	mov    dl,0x4
  41569f:	cwde   
  4156a0:	pop    esi
  4156a1:	clc    
  4156a2:	icebp  
  4156a3:	gs dec edi
  4156a5:	div    edi
  4156a7:	mov    WORD PTR [edx],es
  4156a9:	out    0xd8,al
  4156ab:	imul   ebp,DWORD PTR [edx-0x4c0b7dd3],0xc2f86471
  4156b5:	das    
  4156b6:	add    al,0xe7
  4156b8:	mov    esp,0x5c7361fd
  4156bd:	scas   eax,DWORD PTR es:[edi]
  4156be:	mov    al,0x9e
  4156c0:	xchg   BYTE PTR [ebx+0x7a9884dc],cl
  4156c6:	retf   
  4156c7:	mov    ebx,0x82d54058
  4156cc:	push   0xffffffbd
  4156ce:	or     bh,BYTE PTR [ebx-0x15]
  4156d1:	jmp    DWORD PTR [ebp+0x7277140e]
  4156d7:	aad    0xe0
  4156d9:	popf   
  4156da:	neg    BYTE PTR [edi+0x4be993ee]
  4156e0:	mov    bh,BYTE PTR [eax]
  4156e2:	xor    al,0x11
  4156e4:	ins    BYTE PTR es:[edi],dx
  4156e5:	stos   BYTE PTR es:[edi],al
  4156e6:	mov    cl,0xe9
  4156e8:	out    dx,eax
  4156e9:	xor    dl,BYTE PTR [esi]
  4156eb:	dec    ebp
  4156ec:	add    DWORD PTR [eax-0x34],ebp
  4156ef:	out    dx,eax
  4156f0:	fist   WORD PTR [esi-0x1b]
  4156f3:	inc    ecx
  4156f4:	es jle 0x91e5fd26
  4156fb:	int    0xb
  4156fd:	sahf   
  4156fe:	int    0xaa
  415700:	push   esi
  415701:	daa    
  415702:	into   
  415703:	mov    ecx,0xbb029ac7
  415708:	sbb    BYTE PTR [edi],dh
  41570a:	(bad)  
  41570b:	dec    ecx
  41570c:	(bad)  
  41570d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41570e:	outs   dx,DWORD PTR ds:[esi]
  41570f:	test   eax,0x29e5fc03
  415714:	and    eax,0xa0d46857
  415719:	push   ss
  41571a:	lea    ecx,[esp+eax*4+0x621506c4]
  415721:	lods   eax,DWORD PTR ds:[esi]
  415722:	inc    edi
  415723:	retf   
  415724:	sbb    BYTE PTR [edi+edi*4+0x76d5a5d7],bh
  41572b:	js     0x415760
  41572d:	idiv   DWORD PTR [esi-0xc1f313c]
  415733:	inc    eax
  415734:	out    dx,eax
  415735:	loopne 0x4156fc
  415737:	pusha  
  415738:	into   
  415739:	shl    DWORD PTR [edi+0x42a9009e],cl
  41573f:	addr16 daa 
  415741:	gs scas al,BYTE PTR es:[edi]
  415743:	(bad)  
  415744:	dec    esi
  415745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415746:	nop
  415747:	cmc    
  415748:	xor    dh,al
  41574a:	sub    eax,0x99209529
  41574f:	sbb    BYTE PTR [ecx+0x2309e10],ah
  415755:	jns    0x41574a
  415757:	addr16 lock push 0x7708c291
  41575e:	adc    BYTE PTR [ebp-0x14],ah
  415761:	jmp    0x10cbde2b
  415766:	int3   
  415767:	jns    0x415772
  415769:	dec    edi
  41576a:	pop    ebx
  41576b:	cmp    DWORD PTR [edx+0x32],edx
  41576e:	xchg   ebp,eax
  41576f:	lods   al,BYTE PTR ds:[esi]
  415770:	aas    
  415771:	repnz sub BYTE PTR [esi],bh
  415774:	mov    eax,0x581b594d
  415779:	jae    0x41578a
  41577b:	dec    esi
  41577c:	loopne 0x4157d1
  41577e:	stos   BYTE PTR es:[edi],al
  41577f:	cmp    bl,dh
  415781:	rol    DWORD PTR [edi-0x7d35139a],cl
  415787:	or     al,0x2a
  415789:	xchg   edx,eax
  41578a:	jmp    0x713594d6
  41578f:	add    al,0x6a
  415791:	inc    edx
  415792:	jae    0x4157c5
  415794:	aas    
  415795:	dec    edi
  415796:	retf   
  415797:	loopne 0x415796
  415799:	jmp    0x56fd4eec
  41579e:	push   0x70c50d36
  4157a3:	or     cl,BYTE PTR [ebp-0x5de290e5]
  4157a9:	repnz lods eax,DWORD PTR ds:[esi]
  4157ab:	inc    BYTE PTR ds:0x34343449
  4157b1:	and    edx,DWORD PTR [eax-0x7a]
  4157b4:	ins    DWORD PTR es:[edi],dx
  4157b5:	loope  0x4157a8
  4157b7:	cld    
  4157b8:	mov    bh,0x8
  4157ba:	out    0x21,al
  4157bc:	imul   esp,DWORD PTR [ecx],0x61
  4157bf:	fnstsw WORD PTR ds:0x3139bb11
  4157c5:	mov    ecx,0x85143385
  4157ca:	add    ah,bh
  4157cc:	xchg   edi,eax
  4157cd:	sub    BYTE PTR [edi],bh
  4157cf:	dec    ebp
  4157d0:	pop    ecx
  4157d1:	andps  xmm5,XMMWORD PTR [ebx]
  4157d4:	adc    ebx,ebp
  4157d6:	ret    
  4157d7:	pop    eax
  4157d8:	into   
  4157d9:	or     DWORD PTR [ebx+ebx*1-0x7f],0x10
  4157de:	cs pop ds
  4157e0:	pop    esp
  4157e1:	jo     0x4157cc
  4157e3:	cmp    bh,BYTE PTR [ecx+0x12]
  4157e6:	cli    
  4157e7:	dec    edi
  4157e8:	loop   0x4157d3
  4157ea:	mov    edi,0xbfca94db
  4157ef:	xchg   eax,esi
  4157f1:	aas    
  4157f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157f3:	and    al,0x27
  4157f5:	pop    ebp
  4157f6:	sub    ebx,DWORD PTR [ebx+0x8]
  4157f9:	aaa    
  4157fa:	ds popa 
  4157fc:	je     0x4157a5
  4157fe:	mov    ebp,0x4183443
  415803:	jmp    0x4d17788b
  415808:	test   BYTE PTR [esi+0xc],ah
  41580b:	bt     ecx,esp
  41580e:	jp     0x41587c
  415810:	mov    ebp,0x23a49efd
  415815:	dec    edi
  415816:	xor    bh,BYTE PTR [ecx-0x2d]
  415819:	inc    ebx
  41581a:	sub    al,0x2
  41581c:	cdq    
  41581d:	cmp    al,0xe9
  41581f:	push   edi
  415820:	rol    esp,0x9d
  415823:	adc    eax,0xad3d9e2a
  415828:	mov    fs,WORD PTR [edi-0x7d71b4d]
  41582e:	mov    ebx,0x9376a81f
  415833:	mov    eax,ds:0x18d40929
  415838:	call   0xa672286c
  41583d:	cmp    eax,0x66c8fa2
  415842:	loope  0x4157c7
  415844:	sub    eax,0xa8625b6c
  415849:	jbe    0x415804
  41584b:	add    BYTE PTR [eax+0x41e5d0d8],0x84
  415852:	inc    ebp
  415853:	sub    al,0xb8
  415855:	clc    
  415856:	or     eax,0xca1babfe
  41585b:	jp     0x415854
  41585d:	push   ebp
  41585e:	mov    ebp,0xa4ec8f35
  415863:	fsubr  DWORD PTR [edx-0x41b29824]
  415869:	mov    ah,0x96
  41586b:	jg     0x415803
  41586d:	cmp    BYTE PTR [ebx],ah
  41586f:	mov    bl,0xd1
  415871:	add    al,0x44
  415873:	sub    eax,0x4bdef39c
  415878:	cli    
  415879:	xlat   BYTE PTR ds:[ebx]
  41587a:	je     0x415861
  41587c:	push   edi
  41587d:	inc    ebx
  41587e:	fsubr  QWORD PTR [edi-0x62]
  415881:	xchg   ecx,eax
  415882:	sbb    dh,BYTE PTR [ecx]
  415884:	(bad)  
  415886:	mov    cl,BYTE PTR [esi]
  415888:	sub    al,0x4a
  41588a:	adc    eax,0xc6b325ff
  41588f:	repnz dec esi
  415891:	shl    BYTE PTR [edx-0x508167b1],1
  415897:	(bad)  
  415898:	lds    ecx,FWORD PTR [ebp+0x48]
  41589b:	jns    0x4158a4
  41589d:	mov    BYTE PTR [ebx+0x513253e],dh
  4158a3:	xchg   edx,eax
  4158a4:	call   0x6943:0x2c8d70ac
  4158ab:	pushf  
  4158ac:	cwde   
  4158ad:	mov    bh,0xa6
  4158af:	jge    0x4158d5
  4158b1:	sahf   
  4158b2:	jno    0x4158f3
  4158b4:	mov    bh,0xbe
  4158b6:	out    0xa2,eax
  4158b8:	sub    cl,bh
  4158ba:	jmp    0x415875
  4158bc:	mov    cl,0x45
  4158be:	push   edi
  4158bf:	enter  0x6b9,0xe4
  4158c3:	sub    DWORD PTR [eax-0x37],ecx
  4158c6:	sbb    al,BYTE PTR [ebp+0x1c1ce955]
  4158cc:	addr16 mov edx,0x54ead7aa
  4158d2:	(bad)  
  4158d4:	jle    0x4158af
  4158d6:	xchg   bh,ch
  4158d8:	xchg   esi,ebx
  4158da:	pop    esi
  4158db:	mul    DWORD PTR [ebp-0xd]
  4158de:	mov    BYTE PTR [edx-0x7c8a55a6],al
  4158e4:	test   ch,bl
  4158e6:	cmp    DWORD PTR [ebp+0x2fbe2d2a],eax
  4158ec:	sub    dl,BYTE PTR [esi]
  4158ee:	ret    0x446f
  4158f1:	push   0xffffff9d
  4158f3:	test   DWORD PTR [edi-0x6ffc6b2b],esi
  4158f9:	jmp    0x4158d2
  4158fb:	lods   eax,DWORD PTR ds:[esi]
  4158fc:	and    al,0xf1
  4158fe:	outs   dx,DWORD PTR ds:[esi]
  4158ff:	(bad)  
  415900:	(bad)  
  415902:	cld    
  415903:	jmp    FWORD PTR [ecx]
  415905:	push   ds
  415906:	mov    ds:0xe995a21f,al
  41590b:	and    dl,BYTE PTR [esp+edi*8]
  41590e:	jns    0x415941
  415910:	pop    eax
  415911:	jmp    0xa4ca766e
  415916:	mov    DWORD PTR [eax],edi
  415918:	cmp    DWORD PTR [eax+0x5dfb807],edi
  41591e:	fild   DWORD PTR fs:[ebx+ecx*4]
  415922:	call   0x82bd:0x40b981a2
  415929:	js     0x41593d
  41592b:	push   ecx
  41592c:	push   ecx
  41592d:	cdq    
  41592e:	sbb    cl,BYTE PTR [ebx]
  415930:	in     al,dx
  415931:	push   cs
  415932:	dec    edi
  415933:	mov    eax,ds:0x90512a01
  415938:	add    BYTE PTR [ecx+0x1f754df6],ah
  41593e:	and    cl,0xac
  415941:	mov    esi,0xaca401d7
  415946:	mov    cl,0x39
  415948:	mov    cl,BYTE PTR gs:[eax+0x3b]
  41594c:	je     0x415992
  41594e:	jecxz  0x415902
  415950:	cmp    dh,dl
  415952:	fucomp st(2)
  415954:	popa   
  415955:	cmp    al,0x20
  415957:	pop    eax
  415958:	dec    DWORD PTR [ecx+eiz*2]
  41595b:	data16 fisttp QWORD PTR [ecx-0x63]
  41595f:	or     eax,eax
  415961:	push   ss
  415962:	cmp    al,0x7c
  415964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415965:	or     al,BYTE PTR [ebx+0x19]
  415968:	sub    al,0x1a
  41596a:	mov    dh,0x45
  41596c:	xor    esp,DWORD PTR [edi-0x23]
  41596f:	add    al,0x71
  415971:	or     bl,BYTE PTR [esi+eax*8]
  415974:	adc    eax,0xc971fc78
  415979:	inc    esi
  41597a:	rol    BYTE PTR [ebx],0x71
  41597d:	pop    esi
  41597e:	cmp    DWORD PTR [eax+0x1c6bf080],ebx
  415984:	sub    ah,ch
  415986:	retf   0xf94c
  415989:	xchg   BYTE PTR [ebx+0x14],ah
  41598c:	pop    ds
  41598d:	popf   
  41598e:	sbb    eax,DWORD PTR [edx]
  415990:	pusha  
  415991:	shl    ch,cl
  415993:	lahf   
  415994:	and    al,0x2a
  415996:	je     0x415a04
  415998:	out    dx,eax
  415999:	in     eax,dx
  41599a:	pop    ss
  41599b:	ror    BYTE PTR [eax],1
  41599d:	bound  esp,QWORD PTR [esp+edx*1-0x3d09e8e5]
  4159a4:	jb     0x4159b5
  4159a6:	call   0x55dd661a
  4159ab:	fucom  st(6)
  4159ad:	mov    al,ds:0xcebef7ec
  4159b2:	jp     0x4159ed
  4159b4:	pop    esi
  4159b5:	out    0xaf,al
  4159b7:	sahf   
  4159b8:	nop
  4159b9:	ja     0x41597c
  4159bb:	dec    ecx
  4159bc:	mov    ?,edx
  4159be:	xchg   ecx,eax
  4159bf:	aam    0x72
  4159c1:	out    dx,eax
  4159c2:	(bad)  
  4159c3:	push   ebp
  4159c4:	sti    
  4159c5:	scas   al,BYTE PTR es:[edi]
  4159c6:	sbb    BYTE PTR [edi+edi*8],bl
  4159c9:	mov    al,0x43
  4159cb:	adc    eax,0xedf2869
  4159d0:	scas   al,BYTE PTR es:[edi]
  4159d1:	jecxz  0x415999
  4159d3:	push   esp
  4159d4:	cmp    al,0x18
  4159d6:	shl    DWORD PTR [ecx+0x15],cl
  4159d9:	jp     0x41595e
  4159db:	jns    0x415a1e
  4159dd:	xor    al,0xb2
  4159df:	pop    ebp
  4159e0:	jne    0x415a35
  4159e2:	xchg   ebp,eax
  4159e3:	cmp    DWORD PTR [ebp-0x624db],0x11
  4159ea:	or     al,0x29
  4159ec:	sub    BYTE PTR [ebx-0x12],ch
  4159ef:	pop    esi
  4159f0:	(bad)  
  4159f1:	shl    BYTE PTR [ebx+edi*8-0x44797750],0x6a
  4159f9:	jmp    0x7e29:0xb135b187
  415a00:	dec    esp
  415a01:	adc    esi,DWORD PTR [ebp+0x3ec61f43]
  415a07:	aad    0x28
  415a09:	xor    dl,BYTE PTR [ecx+0x28]
  415a0c:	dec    ebx
  415a0d:	(bad)  
  415a0e:	and    BYTE PTR [ebp-0x3f],ch
  415a11:	popf   
  415a12:	mov    ebp,0xe31d66e5
  415a17:	in     eax,dx
  415a18:	pop    ebp
  415a19:	mov    esi,0xcc7c3d0a
  415a1e:	add    BYTE PTR [edi],0xec
  415a21:	sbb    BYTE PTR [eax-0x566f065b],dl
  415a27:	jne    0x415a7c
  415a29:	sbb    DWORD PTR [ecx+0x42fa590a],edx
  415a2f:	jle    0x415aad
  415a31:	call   0xcf0c3a66
  415a36:	rol    DWORD PTR [edi-0x4b0d123c],0x55
  415a3d:	sbb    eax,0x1af588a9
  415a42:	sub    bh,cl
  415a44:	xchg   ebp,eax
  415a45:	popf   
  415a46:	inc    edi
  415a47:	add    cl,dh
  415a49:	leave  
  415a4a:	sbb    al,0x47
  415a4c:	in     al,dx
  415a4d:	push   esp
  415a4e:	mov    ds:0xd1084901,eax
  415a53:	fwait
  415a54:	int    0x7
  415a56:	nop
  415a57:	ins    DWORD PTR es:[edi],dx
  415a58:	loop   0x415aa7
  415a5a:	ds in  eax,dx
  415a5c:	mul    dl
  415a5e:	cdq    
  415a5f:	sub    esp,DWORD PTR ds:0x6e44056d
  415a65:	and    eax,0x1d4c68bf
  415a6a:	add    edx,DWORD PTR [ecx]
  415a6c:	jp     0x415aa3
  415a6e:	in     eax,0x70
  415a70:	xchg   esp,eax
  415a71:	push   edx
  415a72:	sub    ebx,DWORD PTR [ecx-0x24c1a550]
  415a78:	clc    
  415a79:	xchg   esp,eax
  415a7a:	data16 (bad) 
  415a7c:	mov    ah,BYTE PTR [esi]
  415a7e:	xlat   BYTE PTR ds:[ebx]
  415a7f:	stos   BYTE PTR es:[edi],al
  415a80:	ror    DWORD PTR [esi-0x6e],cl
  415a83:	jecxz  0x415ab8
  415a85:	out    dx,al
  415a86:	xchg   BYTE PTR [ebp+eax*1-0x516cc258],al
  415a8d:	inc    esp
  415a8e:	dec    edi
  415a8f:	ror    BYTE PTR [eax+0x46e545fe],0x6e
  415a96:	addr16 jl 0x415ac3
  415a99:	sbb    al,0x96
  415a9b:	(bad)  
  415a9d:	adc    al,0xb5
  415a9f:	sbb    bh,0x98
  415aa2:	cmc    
  415aa3:	mov    al,BYTE PTR [ebx+0x55]
  415aa6:	adc    ecx,edi
  415aa8:	push   ss
  415aa9:	fldenv fs:[edx+0x32]
  415aad:	dec    edx
  415aae:	(bad)  
  415aaf:	ins    DWORD PTR es:[edi],dx
  415ab0:	enter  0xa95b,0xb4
  415ab4:	cdq    
  415ab5:	cmp    al,0x0
  415ab7:	loopne 0x415a8e
  415ab9:	sbb    dl,BYTE PTR [edx]
  415abb:	add    al,0x34
  415abd:	push   edx
  415abe:	cmp    cl,bl
  415ac0:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415ac2:	add    DWORD PTR [ecx+0x2e46524a],eax
  415ac8:	or     DWORD PTR [esi+0x47],ecx
  415acb:	mov    ebp,0xd2a6288
  415ad0:	aad    0x84
  415ad2:	dec    esi
  415ad3:	or     ebx,esi
  415ad5:	bound  esi,QWORD PTR [edi-0x726318e0]
  415adb:	repnz xchg esp,eax
  415add:	hlt    
  415ade:	gs retf 
  415ae0:	add    BYTE PTR [ebp-0x3173d5c0],ah
  415ae6:	je     0x415ac5
  415ae8:	je     0x415b69
  415aea:	dec    eax
  415aeb:	out    dx,eax
  415aec:	pop    esp
  415aed:	and    al,0x37
  415aef:	xchg   ecx,eax
  415af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415af1:	mov    ch,0xb9
  415af3:	xchg   esp,eax
  415af4:	jns    0x415b1a
  415af6:	mov    bl,0x89
  415af8:	(bad)  ds:0x734beea5
  415afe:	enter  0x75ff,0x7
  415b02:	enter  0xdcb4,0x76
  415b06:	sbb    dh,ah
  415b08:	fld    DWORD PTR [ebx+0x2d]
  415b0b:	inc    ecx
  415b0c:	xchg   ebp,eax
  415b0d:	out    0xf9,eax
  415b0f:	push   ebp
  415b10:	cmp    DWORD PTR [ecx],edi
  415b12:	fwait
  415b13:	dec    ecx
  415b14:	jb     0x415b8f
  415b16:	pusha  
  415b17:	xor    esi,0x28899c0d
  415b1d:	call   0x1c5497a4
  415b22:	test   DWORD PTR [edx],edx
  415b24:	call   0xde92515
  415b29:	rcl    BYTE PTR ds:[edi],0x60
  415b2d:	pusha  
  415b2e:	adc    DWORD PTR [esp+eiz*8],edi
  415b31:	stos   DWORD PTR es:[edi],eax
  415b32:	inc    ebp
  415b33:	stos   BYTE PTR es:[edi],al
  415b34:	mov    dh,0x8
  415b36:	ins    DWORD PTR es:[edi],dx
  415b37:	loopne 0x415b8e
  415b39:	and    al,0xb2
  415b3b:	jle    0x415bbb
  415b3d:	scas   eax,DWORD PTR es:[edi]
  415b3e:	ror    DWORD PTR [eax-0x1f01e46e],cl
  415b44:	repz xor esi,DWORD PTR [esi]
  415b47:	xor    eax,0xa54f1b9e
  415b4c:	lock (bad) 
  415b4e:	pop    eax
  415b4f:	in     eax,0xc5
  415b51:	push   cs
  415b52:	xchg   edi,eax
  415b53:	repnz inc edi
  415b55:	jmp    0x415b29
  415b57:	add    eax,0xc50f686f
  415b5c:	mov    edx,0xbcfa7da2
  415b61:	arpl   WORD PTR [ebx-0x1b1f02a6],bp
  415b67:	out    dx,eax
  415b68:	std    
  415b69:	cld    
  415b6a:	in     eax,0x6
  415b6c:	inc    esp
  415b6d:	xor    DWORD PTR [ebx],ebx
  415b6f:	dec    edi
  415b70:	lahf   
  415b71:	mov    dh,0xff
  415b73:	fisubr WORD PTR [ebp-0xd]
  415b76:	(bad)  
  415b77:	in     al,0x62
  415b79:	enter  0xa424,0x8
  415b7d:	jns    0x415b72
  415b7f:	mov    edi,0xdbc1056b
  415b84:	dec    esp
  415b85:	lods   eax,DWORD PTR ds:[esi]
  415b86:	dec    eax
  415b87:	inc    ecx
  415b88:	adc    eax,DWORD PTR [esi+0x2d648a15]
  415b8e:	push   0x5d
  415b90:	int    0xee
  415b92:	adc    BYTE PTR [esi-0xf],al
  415b95:	xchg   DWORD PTR [edi-0x3e],esp
  415b98:	sti    
  415b99:	add    DWORD PTR [edx-0x3e],0x61
  415b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b9e:	pop    ebp
  415b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ba0:	inc    esp
  415ba1:	jnp    0x415c06
  415ba3:	or     BYTE PTR [eax+0x2f],al
  415ba6:	hlt    
  415ba7:	(bad)  
  415ba8:	or     al,bh
  415baa:	ret    0x4184
  415bad:	cmp    esi,edx
  415baf:	pushf  
  415bb0:	in     eax,dx
  415bb1:	xchg   edi,eax
  415bb2:	mov    al,0x8f
  415bb4:	xchg   edi,eax
  415bb5:	xchg   esp,eax
  415bb6:	fldcw  WORD PTR [eax-0x722f7c87]
  415bbc:	cmp    DWORD PTR [esi+0x50],ecx
  415bbf:	jge    0x415b81
  415bc1:	mov    edx,?
  415bc3:	mov    esp,0xb152c744
  415bc8:	call   0xad3c6f83
  415bcd:	ret    0xec52
  415bd0:	nop
  415bd1:	rcl    edx,1
  415bd3:	outs   dx,DWORD PTR ds:[esi]
  415bd4:	adc    al,0xf6
  415bd6:	mov    ch,0x84
  415bd8:	mov    bl,0xaf
  415bda:	push   ds
  415bdb:	mov    BYTE PTR [eax-0x167936ff],bh
  415be1:	adc    eax,0x81368a55
  415be6:	rcl    BYTE PTR [ecx-0x7f],0x71
  415bea:	sub    cl,BYTE PTR [ecx-0x4837cc3]
  415bf0:	push   edi
  415bf1:	repz (bad) 
  415bf3:	cmp    al,0x3c
  415bf5:	les    ebx,FWORD PTR [edi+0x513ab60]
  415bfb:	dec    ebx
  415bfc:	popa   
  415bfd:	sub    DWORD PTR ds:0x48706e80,ebp
  415c03:	xchg   ecx,eax
  415c04:	hlt    
  415c05:	fsubr  QWORD PTR [edx-0x2e]
  415c08:	hlt    
  415c09:	mov    WORD PTR ss:[edx+eiz*8],fs
  415c0d:	call   0x5850e1f9
  415c12:	sub    BYTE PTR [ebx-0x73],ah
  415c15:	stos   BYTE PTR es:[edi],al
  415c16:	mov    edi,0xce829b75
  415c1b:	cmp    DWORD PTR [ecx+0x5b],ebp
  415c1e:	(bad)  
  415c1f:	adc    BYTE PTR [ebp-0x2d],al
  415c22:	(bad)  
  415c24:	je     0x415bf3
  415c26:	out    dx,eax
  415c27:	shr    BYTE PTR [eax+0x77],cl
  415c2a:	mov    al,ds:0xa7ab596
  415c2f:	ret    
  415c30:	inc    edx
  415c31:	sti    
  415c32:	mul    DWORD PTR [ebx-0x76]
  415c35:	mov    ecx,ebx
  415c37:	xor    cl,0x33
  415c3a:	shl    BYTE PTR [edx+ebp*8-0x5166ecd7],0x46
  415c42:	retf   0xb5c6
  415c45:	sahf   
  415c46:	jp     0x415c28
  415c48:	cmp    cl,dl
  415c4a:	int3   
  415c4b:	ret    
  415c4c:	iret   
  415c4d:	shl    DWORD PTR [eax+0xf],1
  415c50:	xor    BYTE PTR [esi+0x63cb3430],cl
  415c56:	jo     0x415ccf
  415c58:	bound  edx,QWORD PTR [eax]
  415c5a:	imul   edx,DWORD PTR [ebp+0x64e3ce9b],0x8247795d
  415c64:	mul    DWORD PTR [esi+0x4804e609]
  415c6a:	test   al,0xa5
  415c6c:	dec    esi
  415c6d:	mov    DWORD PTR [ebx+0x26],ecx
  415c70:	lea    ebx,[edi-0x4c]
  415c73:	mov    gs,WORD PTR [edx+0x3d]
  415c76:	jle    0x415c18
  415c78:	ret    0x2e2
  415c7b:	les    eax,FWORD PTR [ebx+0x5aea6055]
  415c81:	dec    BYTE PTR [ebp-0x72]
  415c84:	xchg   esi,eax
  415c85:	or     DWORD PTR [ebx-0x4f572f6f],0xb4ecebf1
  415c8f:	pop    ebx
  415c90:	repnz or eax,0x2d4cd611
  415c96:	div    DWORD PTR [esi+0x36]
  415c99:	ds mov ah,0xae
  415c9c:	mov    ds:0xe922e1d9,al
  415ca1:	mov    al,0x16
  415ca3:	(bad)  
  415ca4:	mov    ch,0xd6
  415ca6:	xchg   edx,eax
  415ca7:	outs   dx,BYTE PTR ds:[esi]
  415ca8:	mov    esi,0x77d0342c
  415cad:	xchg   BYTE PTR [ebx+0xc],ah
  415cb0:	ja     0x415cc9
  415cb2:	xchg   edx,eax
  415cb3:	and    BYTE PTR [edx-0x70],0x4
  415cb7:	dec    esp
  415cb8:	sahf   
  415cb9:	shrd   ecx,eax,0x26
  415cbd:	retf   0xb54f
  415cc0:	add    DWORD PTR [esi],edi
  415cc2:	outs   dx,BYTE PTR ds:[esi]
  415cc3:	jmp    0xd8f793a0
  415cc8:	push   cs
  415cc9:	xor    BYTE PTR [eax],0x49
  415ccc:	sti    
  415ccd:	add    DWORD PTR [bp+0x4d81],edi
  415cd2:	mov    ds:0xa836feec,eax
  415cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cd8:	mov    dl,0x1c
  415cda:	mov    WORD PTR [ebx+0x2ad7060a],ss
  415ce0:	pop    ecx
  415ce1:	and    cl,BYTE PTR [ebp+0x43]
  415ce4:	jmp    0x9cf6:0x8970b2da
  415ceb:	retf   
  415cec:	mov    ecx,0xa72f34e7
  415cf1:	mov    bl,0x62
  415cf3:	imul   edx,edx,0x2dec47f
  415cf9:	and    al,BYTE PTR [esi+0x5168c16e]
  415cff:	cs leave 
  415d01:	lods   al,BYTE PTR ds:[esi]
  415d02:	or     BYTE PTR [eax+ebx*1],bl
  415d05:	mov    bh,0x1
  415d07:	xor    DWORD PTR [edx],ebx
  415d09:	test   eax,0x8cc406d9
  415d0e:	nop
  415d0f:	xchg   edx,eax
  415d10:	mov    es:0xa5059782,eax
  415d16:	xor    ecx,DWORD PTR [edi-0x1]
  415d19:	popf   
  415d1a:	sahf   
  415d1b:	push   esi
  415d1c:	data16 loopne 0x415d21
  415d1f:	aas    
  415d20:	sar    BYTE PTR [edi-0x7289f42d],cl
  415d26:	pop    esi
  415d27:	mov    esp,0x1b8b5728
  415d2c:	jmp    0x1dfd:0x30b6a1c8
  415d33:	je     0x415d86
  415d35:	iret   
  415d36:	mov    ebx,0x13c8f047
  415d3b:	push   esp
  415d3c:	in     al,0x3e
  415d3e:	push   esp
  415d3f:	cdq    
  415d40:	sbb    eax,0x3229732f
  415d45:	xchg   edi,eax
  415d46:	arpl   sp,di
  415d48:	and    DWORD PTR ss:[ebp-0x24],ecx
  415d4c:	repnz or DWORD PTR [esp+eiz*4],0xffffffef
  415d51:	pop    esi
  415d52:	cmp    ch,BYTE PTR [edx+eiz*8+0x46]
  415d56:	xor    DWORD PTR [eax-0x5e296cfe],esi
  415d5c:	lea    eax,[edi]
  415d5e:	jp     0x415da2
  415d60:	inc    ebp
  415d61:	mov    ecx,0xe2acff21
  415d66:	jns    0x415d46
  415d68:	xchg   edx,eax
  415d69:	mov    ds:0x79fe4038,eax
  415d6e:	aas    
  415d6f:	paddw  mm3,QWORD PTR [esi-0x1d]
  415d73:	inc    edi
  415d74:	mov    ebx,ecx
  415d76:	test   DWORD PTR [eax-0x54],ecx
  415d79:	inc    ebx
  415d7a:	in     al,dx
  415d7b:	daa    
  415d7c:	add    al,0x5e
  415d7e:	mov    ds,WORD PTR [edi+0x5029851d]
  415d84:	fs dec edx
  415d86:	push   esi
  415d87:	push   cs
  415d88:	lods   al,BYTE PTR ds:[esi]
  415d89:	loopne 0x415de8
  415d8b:	shl    BYTE PTR [ecx+ebx*1],cl
  415d8e:	sbb    DWORD PTR [esi-0x2935abe8],ecx
  415d94:	sub    ebx,edi
  415d96:	scas   al,BYTE PTR es:[edi]
  415d97:	inc    ebx
  415d98:	sti    
  415d99:	jo     0x415d94
  415d9b:	push   ebp
  415d9c:	fnstsw WORD PTR [ecx]
  415d9e:	scas   eax,DWORD PTR es:[edi]
  415d9f:	dec    esi
  415da0:	xor    BYTE PTR [edx],0x7c
  415da3:	jne    0x415d91
  415da5:	and    bl,BYTE PTR [eax+0x1b1f9039]
  415dab:	pop    ss
  415dac:	repz rcr BYTE PTR [ebx+0x7c869e2],cl
  415db3:	pop    ebp
  415db4:	sbb    esp,DWORD PTR [esi]
  415db6:	push   ecx
  415db7:	ja     0x415e13
  415db9:	lods   eax,DWORD PTR ds:[esi]
  415dba:	lods   al,BYTE PTR ds:[esi]
  415dbb:	and    BYTE PTR [ebx+0x43],dl
  415dbe:	push   edi
  415dbf:	dec    eax
  415dc0:	std    
  415dc1:	mov    cl,0xf3
  415dc3:	push   esi
  415dc4:	loopne 0x415db0
  415dc6:	ds dec ecx
  415dc8:	shr    BYTE PTR [eax+0x42cd7c07],0x6c
  415dcf:	cmp    ah,dl
  415dd1:	fstp   st(5)
  415dd3:	mov    bh,0xbb
  415dd5:	jg     0x415e23
  415dd7:	in     al,dx
  415dd8:	cli    
  415dd9:	inc    ebx
  415dda:	loop   0x415dfa
  415ddc:	das    
  415ddd:	push   esi
  415dde:	mov    cl,BYTE PTR ds:0x71f023cb
  415de4:	cmp    al,al
  415de6:	aam    0xf8
  415de8:	pop    ss
  415de9:	inc    esp
  415dea:	add    al,BYTE PTR [esi]
  415dec:	loopne 0x415d89
  415dee:	push   es
  415def:	ins    BYTE PTR es:[edi],dx
  415df0:	std    
  415df1:	cmp    esi,DWORD PTR [eax-0x24666a0e]
  415df7:	xchg   ebp,eax
  415df8:	jno    0x415e72
  415dfa:	xchg   esi,eax
  415dfb:	mov    WORD PTR [esi],?
  415dfd:	mov    dl,0x72
  415dff:	dec    esi
  415e00:	push   eax
  415e01:	mov    bl,0x9a
  415e03:	jmp    0x415e84
  415e05:	add    al,0x63
  415e07:	in     al,dx
  415e08:	repz loop 0x415e71
  415e0b:	jmp    0x531155a3
  415e10:	nop
  415e11:	idiv   BYTE PTR [ecx-0x42]
  415e14:	aaa    
  415e15:	add    edi,esi
  415e17:	adc    eax,0x3ec8b410
  415e1c:	ins    BYTE PTR es:[edi],dx
  415e1d:	jle    0x415e63
  415e1f:	cld    
  415e20:	mov    al,0xf4
  415e22:	adc    al,0xc3
  415e24:	scas   al,BYTE PTR es:[edi]
  415e25:	dec    ebp
  415e26:	repnz and eax,0x991caf4
  415e2c:	test   al,0x5e
  415e2e:	fisttp WORD PTR [eax]
  415e30:	in     eax,dx
  415e31:	lods   eax,DWORD PTR ds:[esi]
  415e32:	jb     0x415e27
  415e34:	cmp    esp,DWORD PTR [esi+0x7f40e82]
  415e3a:	mov    esi,0x6c62c021
  415e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e40:	or     eax,0x26d09841
  415e45:	jbe    0x415e56
  415e47:	mov    ah,0x7c
  415e49:	jbe    0x415e56
  415e4b:	lock or al,BYTE PTR [ecx-0x4bcddbbe]
  415e52:	pop    esp
  415e53:	leave  
  415e54:	jbe    0x415ecd
  415e56:	jmp    0x415de5
  415e58:	shr    ecx,cl
  415e5a:	fwait
  415e5b:	mov    edx,0x85077645
  415e60:	fbld   TBYTE PTR [ebp-0x52]
  415e63:	nop
  415e64:	xchg   ebp,eax
  415e65:	mov    eax,ds:0x3bb7cf6e
  415e6a:	xchg   ecx,eax
  415e6b:	or     eax,0xa4c5804a
  415e70:	mov    BYTE PTR [esi-0x31ba7c57],bl
  415e76:	xor    al,BYTE PTR [ebp+0x26]
  415e79:	push   ebp
  415e7a:	aad    0xaa
  415e7c:	ficom  DWORD PTR [ecx+0x3f7436b9]
  415e82:	inc    ecx
  415e83:	dec    edx
  415e84:	sbb    edx,DWORD PTR [edx-0x1c]
  415e87:	dec    edx
  415e88:	add    cl,dl
  415e8a:	xor    dl,BYTE PTR [esi]
  415e8c:	xchg   edx,eax
  415e8d:	cmp    BYTE PTR [esi],dh
  415e8f:	loope  0x415efe
  415e91:	adc    eax,0xc477067c
  415e96:	adc    al,bh
  415e98:	sub    eax,0xfb0bd554
  415e9d:	xor    ebx,ecx
  415e9f:	clc    
  415ea0:	add    BYTE PTR [edi],ah
  415ea2:	or     DWORD PTR [eax-0x125b05eb],0xffffffa3
  415ea9:	push   ss
  415eaa:	jno    0x415ec1
  415eac:	arpl   WORD PTR [edx],bp
  415eae:	dec    ecx
  415eaf:	push   edi
  415eb0:	or     DWORD PTR [ebx-0x9adb622],edi
  415eb6:	dec    eax
  415eb7:	inc    ecx
  415eb8:	repz mov bl,0x10
  415ebb:	addr16 jae 0x415ea0
  415ebe:	push   es
  415ebf:	popf   
  415ec0:	push   ss
  415ec1:	and    esp,DWORD PTR [edx]
  415ec3:	add    al,0x4
  415ec5:	std    
  415ec6:	les    edx,FWORD PTR [esi+0x4c]
  415ec9:	xlat   BYTE PTR ds:[ebx]
  415eca:	mov    eax,ds:0x9f1bac16
  415ecf:	test   ebp,ebx
  415ed1:	sbb    eax,0xe678695a
  415ed6:	daa    
  415ed7:	in     eax,dx
  415ed8:	test   BYTE PTR [edx],bh
  415eda:	stc    
  415edb:	rcr    ebx,cl
  415edd:	scas   al,BYTE PTR es:[edi]
  415ede:	jle    0x415ef4
  415ee0:	pop    esp
  415ee1:	neg    BYTE PTR [eax]
  415ee3:	ffree  st(1)
  415ee5:	cmp    BYTE PTR [ebp-0x75d69a80],bh
  415eeb:	sar    BYTE PTR [ebp-0x7a],1
  415eee:	add    BYTE PTR [edi],bh
  415ef0:	pop    ss
  415ef1:	mov    dl,al
  415ef3:	xchg   esp,eax
  415ef4:	scas   al,BYTE PTR es:[edi]
  415ef5:	pop    ds
  415ef6:	mov    dh,0xca
  415ef8:	fiadd  DWORD PTR ds:0x2e9f0ed5
  415efe:	xchg   BYTE PTR [ebx],al
  415f00:	js     0x415f18
  415f02:	add    DWORD PTR [eax+edx*4+0x50],eax
  415f06:	adc    eax,0x95c78f0d
  415f0b:	dec    ebp
  415f0c:	xor    DWORD PTR [edx*8+0x518b8771],edi
  415f13:	mov    ecx,0x54e3d0fc
  415f18:	addr16 adc ah,cl
  415f1b:	aaa    
  415f1c:	jbe    0x415ed8
  415f1e:	mov    edx,0x48c4752e
  415f23:	push   esp
  415f24:	ins    DWORD PTR es:[edi],dx
  415f25:	das    
  415f26:	mov    BYTE PTR [eax+0x56e6d8e],al
  415f2c:	popf   
  415f2d:	add    al,0x4c
  415f2f:	and    ebx,DWORD PTR es:[ecx]
  415f32:	repz jecxz 0x415f90
  415f35:	(bad)  
  415f37:	aas    
  415f38:	jmp    0x8dd5220e
  415f3d:	pop    ss
  415f3e:	fs enter 0x30c1,0xfa
  415f43:	xchg   ebp,eax
  415f44:	add    al,0xdb
  415f46:	push   ebp
  415f47:	pop    ebp
  415f48:	bound  ebp,QWORD PTR [eax]
  415f4a:	push   edx
  415f4b:	int3   
  415f4c:	popf   
  415f4d:	out    dx,al
  415f4e:	ss popf 
  415f50:	or     DWORD PTR [esi-0xc2d6fcc],0xfffffffc
  415f57:	es ja  0x415f5e
  415f5a:	inc    esi
  415f5b:	pop    ds
  415f5c:	test   ah,dh
  415f5e:	loopne 0x415f13
  415f60:	cmc    
  415f61:	xor    ecx,DWORD PTR [esi]
  415f63:	sar    BYTE PTR [esi+esi*1-0x4],cl
  415f67:	rcr    DWORD PTR [edi],1
  415f69:	dec    ch
  415f6b:	push   ds
  415f6c:	cld    
  415f6d:	js     0x415fa3
  415f6f:	adc    BYTE PTR [ebx],bh
  415f71:	test   BYTE PTR [esi],dh
  415f73:	mov    ch,0x94
  415f75:	dec    edx
  415f76:	dec    edi
  415f77:	xor    ecx,DWORD PTR [ecx-0x64]
  415f7a:	pop    eax
  415f7b:	adc    eax,0x24f3b043
  415f80:	push   esp
  415f81:	rcr    BYTE PTR [edi],0x40
  415f84:	outs   dx,BYTE PTR ds:[si]
  415f86:	mov    edi,DWORD PTR [edi*4+0x57abe169]
  415f8d:	xor    BYTE PTR [edx-0x35],0x18
  415f91:	add    DWORD PTR [edi+eax*2],edi
  415f94:	call   0xa967:0xbcf7c817
  415f9b:	add    ch,BYTE PTR [edx+0xd0f6ec9]
  415fa1:	ret    
  415fa2:	mov    esi,0x2c922ddf
  415fa7:	fs xchg edx,eax
  415fa9:	jne    0x415fc4
  415fab:	lods   al,BYTE PTR ds:[esi]
  415fac:	daa    
  415fad:	jg     0x415f82
  415faf:	add    ebp,0xffffffba
  415fb2:	dec    edx
  415fb3:	sbb    eax,0x2bc04b25
  415fb8:	clc    
  415fb9:	enter  0x5b77,0x66
  415fbd:	jmp    0x76ff229b
  415fc2:	jle    0x415fed
  415fc4:	xchg   edi,eax
  415fc5:	xor    BYTE PTR cs:[ebp-0x52],bl
  415fc9:	aaa    
  415fca:	les    esi,FWORD PTR [edi+0x6a399515]
  415fd0:	cwde   
  415fd1:	cmp    eax,DWORD PTR [esi+0x3c0d660d]
  415fd7:	fst    QWORD PTR [edx-0x723a61f3]
  415fdd:	inc    ebp
  415fde:	rcl    DWORD PTR [edx+edx*2-0x66d513fd],cl
  415fe5:	sbb    DWORD PTR [ebp+0x66fba619],ebp
  415feb:	and    al,0xb0
  415fed:	xchg   edi,eax
  415fee:	dec    ebx
  415fef:	scas   eax,DWORD PTR es:[edi]
  415ff0:	inc    eax
  415ff1:	add    eax,0x369dd148
  415ff6:	scas   al,BYTE PTR es:[edi]
  415ff7:	adc    BYTE PTR [edx-0x22],0xaa
  415ffb:	mov    al,ds:0x6a76869b
  416000:	push   esi
  416001:	(bad)  
  416003:	push   esp
  416004:	cmc    
  416005:	repnz pop eax
  416007:	mov    cl,0xc0
  416009:	mov    edi,0x42ce18dd
  41600e:	add    ebx,ebp
  416010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416011:	aaa    
  416012:	pop    ss
  416013:	push   esi
  416014:	addr16 pop ss
  416016:	cs pop ecx
  416018:	test   BYTE PTR [esi+edx*2],dl
  41601b:	mov    BYTE PTR [ecx-0x180aaa4c],dl
  416021:	xor    al,ah
  416023:	add    eax,DWORD PTR [edi+0x2b7d6879]
  416029:	bswap  esi
  41602b:	cmp    BYTE PTR [ecx],bl
  41602d:	pop    ss
  41602e:	mov    bh,0x33
  416030:	sub    BYTE PTR [ecx-0x38dedcdd],al
  416036:	add    eax,0x518a63f3
  41603b:	lock mov bl,0x2c
  41603e:	and    eax,0xc6983017
  416043:	mov    ebp,DWORD PTR [ebx+ecx*4+0x2858fa70]
  41604a:	sbb    eax,0xbe34f762
  41604f:	scas   al,BYTE PTR es:[edi]
  416050:	out    dx,al
  416051:	cs int3 
  416053:	push   0x1b
  416055:	outs   dx,DWORD PTR ds:[esi]
  416056:	dec    ebp
  416057:	lea    ebp,[ecx]
  416059:	daa    
  41605a:	and    al,0x2c
  41605c:	scas   al,BYTE PTR es:[edi]
  41605d:	pop    ds
  41605e:	push   ebx
  41605f:	cmc    
  416060:	push   cs
  416061:	fnstenv [ecx]
  416063:	ja     0x415ff1
  416065:	pop    ebx
  416066:	fidiv  DWORD PTR ss:[edx-0x58]
  41606a:	js     0x4160b4
  41606c:	pop    eax
  41606d:	xchg   esi,eax
  41606e:	aad    0x81
  416070:	int3   
  416071:	sub    al,0x49
  416073:	inc    esi
  416074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416075:	xor    BYTE PTR [ebp+eax*1-0x26477908],cl
  41607c:	sub    al,0x41
  41607e:	ins    BYTE PTR es:[edi],dx
  41607f:	cwde   
  416080:	xor    cl,BYTE PTR [edx]
  416082:	into   
  416083:	xor    edi,ebp
  416085:	ficomp WORD PTR [ebx]
  416087:	ja     0x416095
  416089:	std    
  41608a:	loope  0x416037
  41608c:	(bad)  
  41608d:	adc    DWORD PTR [ebx],ebx
  41608f:	or     al,0x20
  416091:	out    0x88,al
  416093:	add    al,0x96
  416095:	xor    dh,0xae
  416098:	or     edx,DWORD PTR [esi-0x37e9e585]
  41609e:	push   ecx
  41609f:	ret    0x4da8
  4160a2:	mov    edx,0x3cba9e6a
  4160a7:	call   0x95b2:0x2a9265b4
  4160ae:	ins    DWORD PTR es:[edi],dx
  4160af:	imul   esi,edx,0x8885b125
  4160b5:	dec    ecx
  4160b6:	call   0x13c1c49b
  4160bb:	or     bh,al
  4160bd:	not    BYTE PTR ss:[ebp-0x54]
  4160c1:	in     eax,0x81
  4160c3:	sbb    BYTE PTR [edx],dl
  4160c5:	jns    0x4160ed
  4160c7:	cwde   
  4160c8:	sbb    bh,al
  4160ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160cb:	cmp    eax,0x217d77ca
  4160d0:	fmul   st(0),st
  4160d2:	jae    0x4160c8
  4160d4:	push   ds
  4160d5:	mov    esi,0xa53b5ba3
  4160da:	push   ss
  4160db:	pop    edi
  4160dc:	retf   
  4160dd:	aad    0x4b
  4160df:	enter  0xd4e4,0x6d
  4160e3:	mov    ds:0xb9567573,al
  4160e8:	out    dx,eax
  4160e9:	in     eax,dx
  4160ea:	xchg   ebp,eax
  4160eb:	pop    ds
  4160ec:	(bad)  
  4160ed:	fdiv   DWORD PTR [ebp+0xa]
  4160f0:	sub    DWORD PTR [ebp+0x27e5d411],esi
  4160f6:	xor    ch,dh
  4160f8:	sub    BYTE PTR [esi],dl
  4160fa:	xor    BYTE PTR [ebx-0x2549907b],ch
  416100:	push   0x3d
  416102:	cli    
  416103:	mov    dl,BYTE PTR [edi]
  416105:	cmp    al,0xaa
  416107:	std    
  416108:	jae    0x4160b4
  41610a:	ja     0x4160b5
  41610c:	pop    eax
  41610d:	mov    edi,0x19b38ef6
  416112:	lds    ebx,FWORD PTR [esi+0x3c]
  416115:	nop
  416116:	mov    cl,0x51
  416118:	out    0x3d,al
  41611a:	loopne 0x416188
  41611c:	in     eax,0x80
  41611e:	ins    DWORD PTR es:[edi],dx
  41611f:	les    eax,FWORD PTR [ebx-0x16966792]
  416125:	gs mov al,0x5c
  416128:	dec    edi
  416129:	enter  0xf22,0x80
  41612d:	inc    eax
  41612e:	jo     0x416114
  416130:	scas   al,BYTE PTR es:[edi]
  416131:	mov    WORD PTR [eax+0x69],es
  416134:	xchg   ebp,eax
  416135:	in     eax,dx
  416136:	enter  0x5544,0x22
  41613a:	jmp    0xb9e1:0x9191e21a
  416141:	and    dh,bl
  416143:	push   0x372f2cce
  416148:	out    dx,al
  416149:	adc    al,0x77
  41614b:	mov    ch,0xc5
  41614d:	xor    al,bl
  41614f:	out    0x94,eax
  416151:	mov    edi,0x720d2b78
  416156:	ins    DWORD PTR es:[edi],dx
  416157:	push   eax
  416158:	outs   dx,DWORD PTR ds:[esi]
  416159:	imul   ebx,DWORD PTR [esi+0x3fb72b4b],0xffffffb5
  416160:	popa   
  416161:	leave  
  416162:	outs   dx,DWORD PTR ds:[esi]
  416163:	mov    esi,0x4816898b
  416168:	ja     0x41617c
  41616a:	sar    BYTE PTR [ecx-0x71],1
  41616d:	add    cl,BYTE PTR [ebp+0x18]
  416170:	mov    esp,0x88617c75
  416175:	mov    edi,0xb6188b3c
  41617a:	jl     0x41616f
  41617c:	fadd   st(3),st
  41617e:	fldcw  WORD PTR [esi]
  416180:	mov    esp,0x1d29b74a
  416185:	sub    eax,0x8826cf28
  41618a:	mov    ds:0xc37343c7,eax
  416190:	outs   dx,BYTE PTR ds:[esi]
  416191:	pop    ss
  416192:	sbb    ebp,edi
  416194:	pop    ds
  416195:	xchg   ebp,eax
  416196:	dec    edi
  416197:	loop   0x416156
  416199:	sub    al,0xfd
  41619b:	xor    al,0xbc
  41619d:	in     eax,0xe2
  41619f:	aam    0x30
  4161a1:	add    edx,ebx
  4161a3:	in     al,dx
  4161a4:	or     al,0xbc
  4161a6:	scas   al,BYTE PTR es:[edi]
  4161a7:	jno    0x4161a6
  4161a9:	mov    WORD PTR [ebp+0x3],?
  4161ac:	div    ecx
  4161ae:	mov    eax,ds:0xab7481b2
  4161b3:	cmc    
  4161b4:	std    
  4161b5:	adc    edx,DWORD PTR [esp+eiz*2]
  4161b8:	xchg   edx,eax
  4161b9:	pop    eax
  4161ba:	fisub  WORD PTR [edx+0x4bdd4b73]
  4161c0:	scas   eax,DWORD PTR es:[edi]
  4161c1:	shl    DWORD PTR [ecx-0x63],0xf8
  4161c5:	mov    cs,WORD PTR [ebx]
  4161c7:	mov    BYTE PTR [ebp-0x2],ch
  4161ca:	push   0xab2eb6e4
  4161cf:	mov    bh,bl
  4161d1:	repz mov ebp,esi
  4161d4:	(bad)  
  4161d6:	mov    ah,0xc0
  4161d8:	das    
  4161d9:	popa   
  4161da:	push   esi
  4161db:	xchg   edi,eax
  4161dc:	cmp    esp,DWORD PTR [edx-0x6411173c]
  4161e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161e3:	or     BYTE PTR ds:[edi],dh
  4161e6:	sbb    DWORD PTR [ebp-0x4c],esp
  4161e9:	adc    dh,0x70
  4161ec:	jle    0x416256
  4161ee:	fmul   QWORD PTR ds:0xa3f625a0
  4161f4:	and    al,BYTE PTR [ebx]
  4161f6:	ds ror edi,0x62
  4161fa:	enter  0x3278,0xc4
  4161fe:	jno    0x416224
  416200:	cs retf 0x97b5
  416204:	(bad)  
  416205:	fcom   QWORD PTR [esi-0x66]
  416208:	fwait
  416209:	in     eax,0x49
  41620b:	xchg   esi,eax
  41620c:	xchg   edx,eax
  41620d:	pop    eax
  41620e:	shr    BYTE PTR [edx],0x5c
  416211:	xchg   ecx,eax
  416212:	mov    WORD PTR [ebx-0x2794939a],?
  416218:	icebp  
  416219:	or     al,0x6c
  41621b:	sbb    BYTE PTR [ecx-0x5d],bh
  41621e:	push   edi
  41621f:	popa   
  416220:	adc    al,0xcb
  416222:	aam    0xa8
  416224:	cmp    dl,BYTE PTR [edx-0x4f]
  416227:	int3   
  416228:	pop    es
  416229:	cmp    eax,0x4f2bac36
  41622e:	dec    ebp
  41622f:	daa    
  416230:	retf   
  416231:	test   eax,0xc7606de2
  416236:	sbb    al,0xec
  416238:	mov    eax,ds:0x69dbbe4f
  41623d:	add    ecx,DWORD PTR [edx]
  41623f:	pop    es
  416240:	aam    0x73
  416242:	pop    ss
  416243:	jbe    0x4162b8
  416245:	sub    DWORD PTR cs:[ecx-0x47d7f87b],ebx
  41624c:	mov    al,0x2d
  41624e:	arpl   WORD PTR [esi],sp
  416250:	sbb    edi,DWORD PTR [edi+0x18]
  416253:	pop    esi
  416254:	cld    
  416255:	xor    esp,DWORD PTR [ecx-0x66]
  416258:	sahf   
  416259:	cs mov ebp,0x114750b8
  41625f:	pop    edi
  416260:	mov    ecx,0xa38e8cc0
  416265:	dec    edx
  416266:	sub    eax,0x5de9a9e1
  41626b:	(bad)  
  41626c:	rol    DWORD PTR [ecx],1
  41626e:	mov    ebx,0xc000e98f
  416273:	jne    0x41622e
  416275:	jp     0x416298
  416277:	jg     0x4162b4
  416279:	mov    edx,0x6e8e4f42
  41627e:	sub    ebx,DWORD PTR [ecx-0x64326834]
  416284:	jnp    0x416292
  416286:	je     0x416246
  416288:	inc    esp
  416289:	fdiv   st,st(2)
  41628b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41628c:	jmp    0x2db714bc
  416291:	test   BYTE PTR [esi],al
  416293:	inc    esi
  416294:	push   ds
  416295:	leave  
  416296:	call   eax
  416298:	(bad)
  41629b:	jb     0x41629c
  41629d:	cmp    DWORD PTR [ebp-0x670cf14a],edx
  4162a3:	sar    ch,cl
  4162a5:	xchg   ecx,eax
  4162a6:	mov    edi,0x1171056
  4162ab:	jo     0x416325
  4162ad:	mov    esi,DWORD PTR [esi+0x38]
  4162b0:	int    0x56
  4162b2:	mov    ah,0x81
  4162b4:	in     eax,0x1c
  4162b6:	dec    esp
  4162b7:	jbe    0x4162d0
  4162b9:	fwait
  4162ba:	or     BYTE PTR [esi+0x3841a1bf],bh
  4162c0:	cmc    
  4162c1:	loop   0x41633d
  4162c3:	xor    BYTE PTR [eax-0x5f96f204],0xb8
  4162ca:	pop    ebx
  4162cb:	add    al,0x95
  4162cd:	cdq    
  4162ce:	and    BYTE PTR [ebx-0x261f246f],cl
  4162d4:	(bad)  
  4162d5:	(bad)  [ebp+0x5c3d19dc]
  4162db:	loopne 0x4162a8
  4162dd:	sar    bh,0x1
  4162e0:	add    eax,0x18010d5c
  4162e5:	sbb    ebp,DWORD PTR [eax]
  4162e7:	inc    esi
  4162e8:	mov    bl,dl
  4162ea:	stos   DWORD PTR es:[edi],eax
  4162eb:	and    BYTE PTR [ebx],0xe4
  4162ee:	call   0xda37e521
  4162f3:	jl     0x4162e1
  4162f5:	inc    edi
  4162f6:	inc    ecx
  4162f7:	cmp    edi,ebp
  4162f9:	shr    BYTE PTR [edx+ebp*8-0x29962e5],0x7
  416301:	ja     0x4162d7
  416303:	cld    
  416304:	lock cmc 
  416306:	add    eax,0x64177cf
  41630b:	sbb    ebx,DWORD PTR [ebx-0x2c4aefbe]
  416311:	inc    esi
  416312:	sbb    dh,BYTE PTR [edx]
  416314:	mov    eax,0x48ed7496
  416319:	lahf   
  41631a:	hlt    
  41631b:	loop   0x416356
  41631d:	push   ecx
  41631e:	pop    ecx
  41631f:	mov    dl,0xbb
  416321:	push   eax
  416322:	sub    DWORD PTR [ebp-0x13],0x33
  416326:	hlt    
  416327:	push   cs
  416328:	mov    bl,0x39
  41632a:	xlat   BYTE PTR ds:[ebx]
  41632b:	test   DWORD PTR [edi-0x4a],0x7524f762
  416332:	dec    eax
  416333:	leave  
  416334:	mov    ds:0x8b4f0004,eax
  416339:	mov    ch,0x16
  41633b:	lds    ebx,FWORD PTR [esi]
  41633d:	sbb    al,0xf1
  41633f:	sbb    ebp,ebx
  416341:	and    al,0x2e
  416343:	sbb    DWORD PTR [ecx+0x3e06de1d],0x1abd6369
  41634d:	and    DWORD PTR [eax+0x4629ba4b],esp
  416353:	adc    esi,esi
  416355:	inc    ecx
  416356:	imul   esp,ebx,0xffffffeb
  416359:	jle    0x416305
  41635b:	clc    
  41635c:	iret   
  41635d:	or     eax,0x902cdb67
  416362:	lahf   
  416363:	cld    
  416364:	xor    ebp,edi
  416366:	or     eax,0xac03a261
  41636b:	jns    0x4163ae
  41636d:	add    eax,0xfe098696
  416372:	pop    esp
  416373:	xor    al,0xa0
  416375:	pop    eax
  416376:	sub    DWORD PTR [esi+0x51],eax
  416379:	clc    
  41637a:	loopne 0x41633a
  41637c:	push   0xffffff8e
  41637e:	jne    0x416365
  416380:	sti    
  416381:	dec    esi
  416382:	mov    cl,0xbb
  416384:	iret   
  416385:	or     eax,0x9fb20504
  41638a:	in     al,0x93
  41638c:	popf   
  41638d:	jae    0x416356
  41638f:	mov    ch,0x51
  416391:	std    
  416392:	and    eax,0x71b388a4
  416397:	ins    DWORD PTR es:[edi],dx
  416398:	push   edx
  416399:	adc    BYTE PTR [ebx+0x2539a3ca],ah
  41639f:	and    dh,BYTE PTR [ebx]
  4163a1:	xchg   esp,eax
  4163a2:	dec    edi
  4163a3:	inc    esp
  4163a4:	(bad)  
  4163a5:	imul   edi,DWORD PTR [esi],0xffffffcb
  4163a8:	adc    al,0xb1
  4163aa:	mov    eax,ds:0xe38773d0
  4163af:	xchg   esi,eax
  4163b0:	xchg   ebp,eax
  4163b1:	das    
  4163b2:	cld    
  4163b3:	pop    ebx
  4163b4:	xor    cl,ch
  4163b6:	push   ss
  4163b7:	push   ss
  4163b8:	das    
  4163b9:	push   ss
  4163ba:	call   0xac1e3004
  4163bf:	cmp    edi,edi
  4163c1:	ss mov ch,0x48
  4163c4:	std    
  4163c5:	jp     0x41639e
  4163c7:	pop    esp
  4163c8:	fcomp  QWORD PTR [edx*8+0x3df4386f]
  4163cf:	repnz and eax,0x61a237c5
  4163d5:	add    eax,DWORD PTR [ebx+ecx*1+0x74]
  4163d9:	xchg   esi,eax
  4163da:	or     eax,0x68654aac
  4163df:	fnstsw WORD PTR [ecx+0x311b0bee]
  4163e5:	jmp    DWORD PTR [eax-0x4d7691c7]
  4163eb:	nop
  4163ec:	fdiv   QWORD PTR [ebx-0x251a6a1a]
  4163f2:	shl    DWORD PTR [edx+ebp*4+0x6c],cl
  4163f6:	mov    ds:0xe8e874f6,eax
  4163fb:	(bad)  
  4163fc:	lahf   
  4163fd:	int3   
  4163fe:	stc    
  4163ff:	call   0x71eb:0x20c92d92
  416406:	int3   
  416407:	mov    bh,0xf2
  416409:	jae    0x416453
  41640b:	imul   ebp,ebp,0xffffffd6
  41640e:	push   esp
  41640f:	stos   BYTE PTR es:[edi],al
  416410:	sbb    eax,0x4369a8b2
  416415:	outs   dx,DWORD PTR ds:[esi]
  416416:	mov    ebx,0xd104a284
  41641b:	push   ecx
  41641c:	js     0x4163aa
  41641e:	xchg   DWORD PTR [ebx],ebp
  416420:	or     al,0x90
  416422:	mov    DWORD PTR [ebp-0x114fa15a],ebp
  416428:	inc    ebx
  416429:	add    al,0x6c
  41642b:	pop    es
  41642c:	cli    
  41642d:	loope  0x416406
  41642f:	sub    al,BYTE PTR [edx+0x1a]
  416432:	cpuid  
  416434:	xchg   ecx,eax
  416435:	inc    esi
  416436:	or     al,0x88
  416439:	push   ebp
  41643a:	je     0x4164a1
  41643c:	pop    esi
  41643d:	rcr    DWORD PTR [esi],cl
  41643f:	mov    ch,0x50
  416441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416442:	(bad)  
  416443:	mov    esp,0xf9455a1e
  416448:	pop    ss
  416449:	(bad)  
  41644a:	stos   BYTE PTR es:[edi],al
  41644b:	imul   esi,edx,0x14
  41644e:	outs   dx,BYTE PTR ds:[esi]
  41644f:	or     DWORD PTR [ecx-0x20],ebx
  416452:	icebp  
  416453:	inc    eax
  416454:	sub    al,BYTE PTR [ebx+0x4eeb7542]
  41645a:	int3   
  41645b:	and    esp,0xffffff80
  41645e:	out    dx,eax
  41645f:	imul   ebp,esp,0x3d
  416462:	jbe    0x416478
  416464:	push   ss
  416465:	daa    
  416466:	add    ch,BYTE PTR [ebx+0xa]
  416469:	mov    bh,0xb7
  41646b:	arpl   WORD PTR [edi],ax
  41646d:	mov    ds:0xf23451cb,eax
  416472:	sbb    ecx,DWORD PTR ds:0x46165faf
  416478:	data16 mov al,0x6b
  41647c:	jnp    0x4164c9
  41647e:	jmp    0x416437
  416480:	in     al,dx
  416481:	jecxz  0x4164c9
  416483:	push   ebx
  416484:	les    eax,FWORD PTR [eax]
  416486:	(bad)  
  416487:	(bad)  
  416488:	fwait
  416489:	icebp  
  41648a:	mov    ah,dh
  41648c:	leave  
  41648d:	idiv   al
  41648f:	push   edi
  416490:	test   al,0xe6
  416492:	icebp  
  416493:	and    ebp,DWORD PTR [ecx+0x57]
  416496:	adc    eax,0x554f3459
  41649b:	scas   eax,DWORD PTR es:[edi]
  41649c:	push   esp
  41649d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649e:	stos   DWORD PTR es:[edi],eax
  41649f:	or     DWORD PTR [ebx+0x3],ecx
  4164a2:	sub    bl,BYTE PTR [edx+0x22]
  4164a5:	jns    0x4164a9
  4164a7:	xchg   ecx,eax
  4164a8:	mov    ebp,esp
  4164aa:	fadd   st(4),st
  4164ac:	(bad)  
  4164ad:	std    
  4164ae:	pop    ds
  4164af:	es pop ebp
  4164b1:	sbb    edx,ebp
  4164b3:	dec    edi
  4164b4:	aad    0x54
  4164b6:	mov    ch,0x2f
  4164b8:	add    ah,0xd
  4164bb:	dec    ecx
  4164bc:	pop    edi
  4164bd:	mov    eax,DWORD PTR [edi+eiz*1+0x1]
  4164c1:	sub    BYTE PTR [edx],dh
  4164c3:	gs dec ecx
  4164c5:	jns    0x416481
  4164c7:	inc    esi
  4164c8:	xor    eax,DWORD PTR [ebx]
  4164ca:	push   esp
  4164cb:	ins    DWORD PTR es:[edi],dx
  4164cc:	sbb    bh,BYTE PTR [ecx+0x9d81fe8]
  4164d2:	mov    WORD PTR [eax-0x8],gs
  4164d5:	mov    ebx,0x48920e8b
  4164da:	inc    edi
  4164db:	clc    
  4164dc:	sbb    eax,0x5839e1e7
  4164e1:	enter  0x80ab,0x49
  4164e5:	mov    dl,0x7b
  4164e7:	cwde   
  4164e8:	aaa    
  4164e9:	(bad)  
  4164ea:	cld    
  4164eb:	outs   dx,DWORD PTR ds:[esi]
  4164ec:	jae    0x4164c7
  4164ee:	pusha  
  4164ef:	int3   
  4164f0:	cmp    DWORD PTR [eax+0x639e7859],edx
  4164f6:	in     al,dx
  4164f7:	(bad)  
  4164f9:	sbb    eax,ebx
  4164fb:	xor    DWORD PTR [ebp-0x7],ebp
  4164fe:	pop    ds
  4164ff:	retf   
  416500:	pop    eax
  416501:	inc    edi
  416502:	fwait
  416503:	add    DWORD PTR [eax+0x73],0x6a86bdab
  41650a:	push   edi
  41650b:	in     eax,dx
  41650c:	mov    cs,WORD PTR [edi-0x210bed8f]
  416512:	inc    esi
  416513:	ins    BYTE PTR es:[edi],dx
  416514:	in     al,0x7e
  416516:	dec    eax
  416517:	mov    BYTE PTR ds:0x7de3e726,al
  41651d:	mov    al,0x5
  41651f:	mov    ecx,0x7a54d309
  416524:	xchg   DWORD PTR ds:0xb8bb674f,esp
  41652a:	inc    eax
  41652b:	mov    eax,ds:0x88552133
  416530:	mov    bh,0x74
  416532:	popa   
  416533:	or     esi,DWORD PTR [edx]
  416535:	and    DWORD PTR [esi+ecx*8+0xd],0x48
  41653a:	int3   
  41653b:	stos   DWORD PTR es:[edi],eax
  41653c:	dec    ebx
  41653d:	inc    edx
  41653e:	xor    ecx,0x43
  416541:	push   edi
  416542:	jmp    0x416534
  416544:	out    0xe1,eax
  416546:	loopne 0x416510
  416548:	inc    esi
  416549:	div    al
  41654b:	xor    DWORD PTR ss:[eax+ebp*8+0x37],ecx
  416550:	jle    0x4165c1
  416552:	inc    ebp
  416553:	and    ecx,eax
  416555:	(bad)  
  416556:	jle    0x41659f
  416558:	xchg   edx,eax
  416559:	in     eax,0x1d
  41655b:	add    DWORD PTR [ebx-0x2],ecx
  41655e:	shl    bl,cl
  416560:	icebp  
  416561:	ss or  al,0x58
  416564:	in     eax,0xdf
  416566:	or     al,0x41
  416568:	aaa    
  416569:	mov    dl,0xfa
  41656b:	shl    edx,0xb5
  41656e:	jmp    DWORD PTR [esi+0x0]
  416571:	or     edi,DWORD PTR [edx]
  416573:	sub    cl,ch
  416575:	fsubr  DWORD PTR [edi]
  416577:	ror    DWORD PTR [edi+eiz*1],1
  41657a:	fwait
  41657b:	stos   DWORD PTR es:[edi],eax
  41657c:	mov    ?,WORD PTR [ecx]
  41657e:	xor    BYTE PTR [ecx],0x66
  416581:	mov    esi,0x2dfde7a3
  416586:	inc    edi
  416587:	jp     0x41650d
  416589:	pop    ecx
  41658a:	data16 mov bh,0xdc
  41658d:	stc    
  41658e:	fstp   DWORD PTR [edi+0x76]
  416591:	push   sp
  416593:	stos   DWORD PTR es:[edi],eax
  416594:	jmp    0x79a558cc
  416599:	jae    0x4165b7
  41659b:	push   ss
  41659c:	pop    eax
  41659d:	aam    0x39
  41659f:	dec    edi
  4165a0:	adc    al,0x5e
  4165a2:	jecxz  0x4165e0
  4165a4:	lods   al,BYTE PTR ds:[esi]
  4165a5:	sbb    al,0x10
  4165a7:	sub    ch,BYTE PTR [ebp-0x155388e6]
  4165ad:	(bad)  
  4165ae:	mov    ah,0x2
  4165b0:	ja     0x41662f
  4165b2:	mov    cl,0x4d
  4165b4:	fsubp  st(7),st
  4165b6:	sti    
  4165b7:	add    ch,0x19
  4165ba:	push   ds
  4165bb:	and    DWORD PTR [edi+0xe139793],esp
  4165c1:	stos   BYTE PTR es:[edi],al
  4165c2:	mov    al,ds:0xfb4ec3ec
  4165c7:	pop    eax
  4165c8:	dec    ebp
  4165c9:	lock retf 
  4165cb:	jl     0x41655d
  4165cd:	push   esi
  4165ce:	retf   0x6fdc
  4165d1:	aad    0x77
  4165d3:	ds scas al,BYTE PTR es:[edi]
  4165d5:	leave  
  4165d6:	lods   eax,DWORD PTR ds:[esi]
  4165d7:	jge    0x41663a
  4165d9:	jo     0x4165e0
  4165db:	mov    al,ds:0xa95f2150
  4165e0:	aad    0x7b
  4165e2:	sbb    al,0x44
  4165e4:	call   0xe65c6128
  4165e9:	xchg   esi,eax
  4165ea:	jnp    0x4165d7
  4165ec:	sti    
  4165ed:	in     al,dx
  4165ee:	sbb    bp,WORD PTR [bx+si]
  4165f2:	mov    ebp,0xcb7fa25a
  4165f7:	jb     0x416591
  4165f9:	iret   
  4165fa:	jmp    0x416645
  4165fc:	push   ss
  4165fd:	adc    dh,bl
  4165ff:	inc    ebp
  416600:	adc    eax,DWORD PTR [ebx+0x137b379f]
  416606:	and    ch,dl
  416608:	push   cs
  416609:	jmp    FWORD PTR [ebx-0x45]
  41660c:	stc    
  41660d:	xor    esi,DWORD PTR [edi+0x480da116]
  416613:	mov    ch,BYTE PTR [edx]
  416615:	xchg   DWORD PTR [eax-0x3aec5715],eax
  41661b:	mul    DWORD PTR [edx+0x79]
  41661e:	xor    esi,DWORD PTR ds:0xe9af322a
  416624:	leave  
  416625:	es inc ebp
  416627:	add    cl,BYTE PTR [edi]
  416629:	push   cs
  41662a:	pop    ebp
  41662b:	popf   
  41662c:	fdivp  st(6),st
  41662e:	pop    esp
  41662f:	adc    BYTE PTR [edx+eax*4],0x5a
  416633:	enter  0xaf1,0xe
  416637:	xchg   BYTE PTR [esi-0x74],dl
  41663a:	mov    ds:0x58ecc3d6,al
  41663f:	push   ebx
  416640:	(bad)  
  416641:	cmp    eax,0x1bc91b46
  416646:	xor    eax,0xfec025c3
  41664b:	test   DWORD PTR [esi+0x7edc61bb],edi
  416651:	xchg   ebx,eax
  416652:	dec    esi
  416653:	cli    
  416654:	faddp  st(5),st
  416656:	(bad)  
  416657:	rcl    ecx,cl
  416659:	les    ecx,FWORD PTR [edi+0x3a]
  41665c:	xchg   ebx,eax
  41665d:	jecxz  0x4166a2
  41665f:	out    dx,eax
  416660:	pop    es
  416661:	inc    edx
  416662:	or     al,BYTE PTR ds:0x8dcf7388
  416668:	retf   0x3595
  41666b:	mov    esp,0x70b60ba5
  416670:	outs   dx,BYTE PTR ds:[esi]
  416671:	add    al,0x4a
  416673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416674:	stc    
  416675:	pop    edx
  416676:	add    eax,eax
  416678:	fsub   DWORD PTR [edx]
  41667a:	mov    eax,ds:0xa0aae32c
  41667f:	lds    edx,FWORD PTR [ebx-0x67]
  416682:	jle    0x4166a0
  416684:	fcomi  st,st(2)
  416686:	mov    BYTE PTR [edi+esi*2],cl
  416689:	enter  0x10dc,0x29
  41668d:	pop    ss
  41668e:	sub    eax,0x5026ed4c
  416693:	dec    esi
  416694:	jmp    0xca23d3a3
  416699:	mov    eax,ds:0x7399bb5d
  41669e:	sub    eax,0x7d7986c2
  4166a3:	into   
  4166a4:	jne    0x416656
  4166a6:	test   DWORD PTR [eax+0x11],esi
  4166a9:	mov    dl,0xd2
  4166ab:	inc    ecx
  4166ac:	xor    DWORD PTR [edi-0x21bee501],eax
  4166b2:	repz (bad) 
  4166b5:	push   edx
  4166b6:	cmp    DWORD PTR [eax-0x8],ecx
  4166b9:	(bad)  
  4166bb:	dec    edi
  4166bc:	or     eax,0x9a5fdb9d
  4166c1:	fwait
  4166c2:	add    BYTE PTR [ecx],ah
  4166c4:	or     edx,eax
  4166c6:	call   0x9ad3534
  4166cb:	push   es
  4166cc:	sub    esp,DWORD PTR [ebx]
  4166ce:	(bad)  
  4166cf:	or     eax,0x7ea9da6
  4166d4:	mov    cl,0x55
  4166d6:	cmc    
  4166d7:	and    BYTE PTR ds:[edi+0x7e],ch
  4166db:	and    eax,0xaab2e8e
  4166e0:	cwde   
  4166e1:	push   cs
  4166e2:	dec    edi
  4166e3:	int3   
  4166e4:	cmp    al,0x3e
  4166e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166e7:	jne    0x416673
  4166e9:	adc    eax,0xb927580
  4166ee:	addr16 out 0x1b,eax
  4166f1:	inc    esi
  4166f2:	push   ds
  4166f3:	shr    DWORD PTR [edx-0x3902c7c],0x73
  4166fa:	push   es
  4166fb:	or     eax,0x4f473757
  416700:	xor    dh,BYTE PTR [eax]
  416702:	sbb    BYTE PTR [edx+0x7369b299],ah
  416708:	(bad)  
  416709:	xor    al,0x3f
  41670b:	data16 mov dl,dl
  41670e:	stos   BYTE PTR es:[edi],al
  41670f:	les    eax,FWORD PTR [edi-0x25]
  416712:	test   DWORD PTR [esi-0x66],edx
  416715:	mov    DWORD PTR [ebx-0x54],0x6cd8d952
  41671c:	mov    eax,0x59d2a1d2
  416721:	add    BYTE PTR [edx],al
  416723:	outs   dx,BYTE PTR ds:[esi]
  416724:	push   cs
  416725:	imul   esp,DWORD PTR [ecx-0x14],0x85a1484d
  41672c:	dec    ecx
  41672d:	out    0x15,eax
  41672f:	in     al,0x92
  416731:	inc    edi
  416732:	jno    0x4166b4
  416734:	jae    0x416734
  416736:	ror    BYTE PTR [esi+0x5fd7c57],0x61
  41673d:	pusha  
  41673e:	or     al,0xe
  416740:	mov    BYTE PTR [edx+0x1ccf9eaf],dl
  416746:	test   eax,0xf025c4ca
  41674b:	mov    ecx,0xb50b160a
  416750:	ret    0xbf1b
  416753:	(bad)  
  416755:	mov    edi,DWORD PTR [edx-0x10ec12bf]
  41675b:	dec    esp
  41675c:	fs mov dl,0x7b
  41675f:	or     BYTE PTR [eax],bl
  416761:	dec    esp
  416762:	adc    DWORD PTR [ebx+0x3f5d2b2e],eax
  416768:	push   edi
  416769:	call   0xab3e:0xec0d5e1c
  416770:	mov    dh,0xd4
  416772:	(bad)  
  416773:	fcomi  st,st(1)
  416775:	or     BYTE PTR [edx+0x4cf298ab],dl
  41677b:	mov    dl,0x99
  41677d:	and    DWORD PTR [eax],0x8dba5c7e
  416783:	(bad)  
  416784:	xchg   ebx,eax
  416785:	adc    BYTE PTR [bp+si+0x6f68],ch
  41678a:	add    edi,DWORD PTR [edx+0x3860f60b]
  416790:	out    0xf4,eax
  416792:	mov    esp,0xa387d7bb
  416797:	push   ecx
  416798:	aam    0x78
  41679a:	mov    DWORD PTR [eax+0x4a50c79c],ebp
  4167a0:	(bad)  
  4167a1:	sub    al,0xfb
  4167a3:	mov    BYTE PTR [esi+0x73],dh
  4167a6:	push   0xf8fb205a
  4167ab:	or     BYTE PTR [ebx+0x57],0x6e
  4167af:	shl    BYTE PTR [eax],0xc2
  4167b2:	ror    ebx,1
  4167b4:	mov    ds:0x282c949d,eax
  4167b9:	push   esp
  4167ba:	frstor [edx]
  4167bc:	xor    BYTE PTR [edi+0x239f137b],dh
  4167c2:	in     eax,0x30
  4167c4:	push   cs
  4167c5:	jp     0x416840
  4167c7:	enter  0x74a7,0x95
  4167cb:	mov    esi,edi
  4167cd:	pop    edi
  4167ce:	std    
  4167cf:	mov    ah,0x24
  4167d1:	pusha  
  4167d2:	push   ebp
  4167d3:	fisttp WORD PTR [esi]
  4167d5:	and    dh,BYTE PTR [ebx]
  4167d7:	jle    0x4167ed
  4167d9:	add    dh,BYTE PTR ds:0x98bcb1e
  4167df:	cmc    
  4167e0:	data16 (bad) 
  4167e2:	xlat   BYTE PTR ds:[ebx]
  4167e3:	fidivr WORD PTR [edx+eax*8]
  4167e6:	or     al,BYTE PTR [esi-0xb8de065]
  4167ec:	nop    DWORD PTR [eax]
  4167ef:	cdq    
  4167f0:	cwde   
  4167f1:	es sahf 
  4167f3:	cmp    BYTE PTR [edi],dh
  4167f5:	cli    
  4167f6:	dec    edi
  4167f7:	mov    esi,0xeea6636b
  4167fc:	sub    eax,0x65951ab4
  416801:	add    esi,DWORD PTR [si]
  416804:	in     eax,0x8
  416806:	ins    BYTE PTR es:[edi],dx
  416807:	lea    edi,[ebx+0x33]
  41680a:	call   0x3977:0xd8d1a6f
  416811:	mov    esi,0x9e7c5280
  416816:	cli    
  416817:	mov    edi,gs
  416819:	fs xor al,0x28
  41681c:	adc    cl,al
  41681e:	jmp    0x416825
  416820:	jmp    0x495e:0x1c4641c
  416827:	cmp    eax,DWORD PTR [esi]
  416829:	scas   al,BYTE PTR es:[edi]
  41682a:	cmp    eax,0x764c6a85
  41682f:	jmp    0x1eaa:0xdd07ea5a
  416836:	dec    ecx
  416837:	xchg   cl,dh
  416839:	inc    ebp
  41683a:	push   cs
  41683b:	out    0xfe,al
  41683d:	js     0x41686f
  41683f:	test   eax,0xccf4d0a8
  416844:	sbb    dl,BYTE PTR [edx]
  416846:	adc    BYTE PTR [edi+ebx*8-0x23],cl
  41684a:	xor    edi,DWORD PTR [esi+edx*1-0x7f70cd80]
  416851:	imul   ecx,DWORD PTR [ebp+0x37],0xc8d6973d
  416858:	(bad)  
  416859:	sub    ecx,DWORD PTR [eax-0x7b72992f]
  41685f:	jne    0x4167ea
  416861:	sti    
  416862:	mov    edx,DWORD PTR [edx]
  416864:	mov    ecx,0xfecb9c7
  416869:	int    0xe1
  41686b:	add    BYTE PTR [ebp-0x3a],bl
  41686e:	push   cs
  41686f:	mov    edi,0xe5c4ae9f
  416874:	dec    ecx
  416875:	mov    ah,0x6
  416877:	daa    
  416878:	fild   DWORD PTR [ebp+0x1a]
  41687b:	mov    ds,WORD PTR [ebx-0x5b]
  41687e:	call   0x7bbd:0xb7e2e1a8
  416885:	rcl    ch,cl
  416887:	pop    ecx
  416888:	icebp  
  416889:	mov    ebp,0x848b3d2b
  41688e:	sbb    BYTE PTR [esi],cl
  416890:	jmp    0x416817
  416892:	lods   al,BYTE PTR ds:[esi]
  416893:	mov    ecx,0x38ba07f6
  416898:	mov    eax,ebx
  41689a:	outs   dx,DWORD PTR ds:[esi]
  41689b:	and    ch,ah
  41689d:	pop    ebp
  41689e:	test   DWORD PTR [ebp+0x52],edx
  4168a1:	out    dx,eax
  4168a2:	dec    esi
  4168a3:	sbb    edi,esi
  4168a5:	jo     0x41687a
  4168a7:	sbb    DWORD PTR [eax-0x31],edx
  4168aa:	cld    
  4168ab:	fwait
  4168ac:	xor    BYTE PTR [esi+0x1737dd48],bh
  4168b2:	js     0x41685b
  4168b4:	xchg   esp,eax
  4168b5:	jnp    0x4168a3
  4168b7:	dec    esi
  4168b8:	in     al,dx
  4168b9:	call   0x71be:0x3a08e681
  4168c0:	or     al,dl
  4168c2:	(bad)  
  4168c3:	into   
  4168c4:	pop    ecx
  4168c5:	or     al,0x99
  4168c7:	repnz (bad) 
  4168ca:	mov    cl,0x64
  4168cc:	test   esp,ebx
  4168ce:	sub    ah,BYTE PTR [edx]
  4168d0:	in     eax,0x51
  4168d2:	sub    eax,0x834a6ff5
  4168d7:	push   ecx
  4168d8:	leave  
  4168d9:	cmp    eax,0x838a3fcb
  4168de:	cmpxchg ebx,edx
  4168e1:	xchg   esp,eax
  4168e2:	adc    al,0x70
  4168e4:	or     DWORD PTR [ebx+0x4a],0xffffffc8
  4168e8:	clc    
  4168e9:	sub    ch,BYTE PTR [esi-0x2a]
  4168ec:	xchg   edi,eax
  4168ed:	or     eax,0xc5257b46
  4168f2:	jp     0x4168ba
  4168f4:	jecxz  0x4168c3
  4168f6:	rcr    BYTE PTR [eax+0x11],0xa8
  4168fa:	fsubp  st(7),st
  4168fc:	dec    eax
  4168fd:	call   0xccf6:0xea2eba1a
  416904:	sbb    DWORD PTR [ecx+0x73],0x5ffdbc5f
  41690b:	xor    DWORD PTR [ebx],eax
  41690d:	lahf   
  41690e:	ret    
  41690f:	aaa    
  416910:	mov    esp,0xf01f534d
  416915:	dec    ebp
  416916:	pusha  
  416917:	in     eax,dx
  416918:	add    al,0xe2
  41691a:	cmc    
  41691b:	retf   
  41691c:	js     0x41691b
  41691e:	sbb    bl,al
  416920:	scas   eax,DWORD PTR es:[edi]
  416921:	lea    ebp,[ecx+0x35b17523]
  416927:	and    ebx,eax
  416929:	xchg   esp,eax
  41692a:	loopne 0x416953
  41692c:	adc    al,cl
  41692e:	jbe    0x4168d6
  416930:	pop    esp
  416931:	rcr    DWORD PTR [esi],1
  416933:	addr16 inc edi
  416935:	iret   
  416936:	sti    
  416937:	jnp    0x41690e
  416939:	lock lods al,BYTE PTR ds:[esi]
  41693c:	lods   al,BYTE PTR ds:[esi]
  41693d:	push   ebp
  41693e:	pop    ebp
  41693f:	mov    dh,0xfe
  416941:	xchg   DWORD PTR [edx],edi
  416943:	pusha  
  416944:	xchg   DWORD PTR [eax-0xe],esi
  416947:	add    bl,BYTE PTR [eax+0x4c]
  41694a:	xchg   ebx,eax
  41694b:	mov    ds:0xa6da3325,al
  416950:	punpcklwd mm2,DWORD PTR [eax]
  416953:	jge    0x4169a4
  416955:	cmp    al,0x22
  416957:	lods   eax,DWORD PTR ds:[esi]
  416958:	cmp    dl,ah
  41695a:	push   0x8612aaeb
  41695f:	jg     0x4168eb
  416961:	loopne 0x4169b1
  416963:	into   
  416964:	add    BYTE PTR [ebx-0x6b43f350],cl
  41696a:	inc    ecx
  41696b:	inc    edi
  41696c:	add    BYTE PTR [ebp-0xa],dh
  41696f:	js     0x416988
  416971:	dec    esi
  416972:	xor    ebx,DWORD PTR [ecx+0xc]
  416975:	push   esi
  416976:	push   eax
  416977:	in     al,dx
  416978:	xor    DWORD PTR [edi-0x70],0xffffffd6
  41697c:	adc    BYTE PTR [eax-0x4125d112],al
  416982:	lds    esp,FWORD PTR [ebx-0x4e]
  416985:	mov    ch,0x70
  416987:	sbb    DWORD PTR [ebp-0x651405e0],esp
  41698d:	mov    eax,ds:0xd3b41fcc
  416992:	push   ebx
  416993:	cwde   
  416994:	and    eax,0x7033d070
  416999:	mov    ds:0x4537a5d9,al
  41699e:	rol    BYTE PTR [eax+0xb],cl
  4169a1:	adc    BYTE PTR [eax-0x61],bl
  4169a4:	out    0x39,eax
  4169a6:	adc    bl,BYTE PTR [eax+0x7344ad30]
  4169ac:	push   eax
  4169ad:	pop    ss
  4169ae:	retf   
  4169af:	mov    esp,0xb987fb3d
  4169b4:	sahf   
  4169b5:	in     eax,0xca
  4169b7:	adc    al,0xb1
  4169b9:	jnp    0x4169c6
  4169bb:	xor    BYTE PTR [edi+0x499ceae8],0x92
  4169c2:	aam    0xd8
  4169c4:	rol    ecx,0x8
  4169c7:	dec    ebx
  4169c8:	retf   0x5b5d
  4169cb:	adc    ebx,DWORD PTR [edx]
  4169cd:	ja     0x4169d9
  4169cf:	or     cl,ch
  4169d1:	(bad)  
  4169d2:	mov    dh,0x39
  4169d4:	ins    BYTE PTR es:[edi],dx
  4169d5:	dec    eax
  4169d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d7:	xchg   esp,eax
  4169d8:	lahf   
  4169d9:	cmp    eax,0xae7a6082
  4169de:	js     0x416a22
  4169e0:	jl     0x4169ea
  4169e2:	push   esi
  4169e3:	loopne 0x416a16
  4169e5:	and    BYTE PTR [esi],bh
  4169e7:	jl     0x4169ef
  4169e9:	fbstp  TBYTE PTR [ebp+ebp*1+0x5f5c45f0]
  4169f0:	adc    al,0xa0
  4169f2:	inc    ecx
  4169f3:	sbb    al,0x0
  4169f5:	js     0x416a6f
  4169f7:	popf   
  4169f8:	adc    DWORD PTR [edx-0x53],0x142a5425
  4169ff:	inc    ecx
  416a00:	mov    bl,0x7
  416a02:	inc    ebp
  416a03:	enter  0x9477,0x1d
  416a07:	xchg   edi,eax
  416a08:	push   ebx
  416a09:	adc    DWORD PTR [edx-0x405a7aee],eax
  416a0f:	call   0x725f:0xf88edae5
  416a16:	xchg   esp,eax
  416a17:	inc    ebx
  416a18:	loopne 0x416a49
  416a1a:	pop    ebp
  416a1b:	push   ecx
  416a1c:	ret    
  416a1d:	push   ss
  416a1e:	add    eax,0xcc4e522
  416a23:	mov    ebx,0xd99c82f2
  416a28:	loop   0x4169d8
  416a2a:	mov    al,ds:0xe956bd5
  416a2f:	test   BYTE PTR [eax],cl
  416a31:	int3   
  416a32:	and    al,0x93
  416a34:	fcmovu st,st(4)
  416a36:	jp     0x416a87
  416a38:	mov    dh,0x80
  416a3a:	daa    
  416a3b:	sahf   
  416a3c:	mov    edx,DWORD PTR [esi+edi*8-0x77f0d94d]
  416a43:	icebp  
  416a44:	stos   DWORD PTR es:[edi],eax
  416a45:	jge    0x4169ec
  416a47:	loope  0x416ac2
  416a49:	dec    edx
  416a4a:	adc    ebp,DWORD PTR [edx+eax*8-0x4d79063b]
  416a51:	cmp    al,ch
  416a53:	push   esp
  416a54:	cmc    
  416a55:	xor    ecx,DWORD PTR [esi-0x6]
  416a58:	jnp    0x416ab2
  416a5a:	rol    DWORD PTR [esi],1
  416a5c:	repz dec ebx
  416a5e:	ret    0xa75b
  416a61:	mov    WORD PTR [esi+0x9],ds
  416a64:	xchg   esp,eax
  416a65:	mov    gs,WORD PTR [ecx]
  416a67:	int3   
  416a68:	retf   
  416a69:	push   es
  416a6a:	sub    eax,0x89302952
  416a6f:	sbb    esp,esp
  416a71:	mov    cl,ah
  416a73:	sar    DWORD PTR [ebx-0x3a3fc87c],0xf7
  416a7a:	add    ebp,DWORD PTR [esi]
  416a7c:	inc    edi
  416a7d:	jb     0x416a10
  416a7f:	(bad)  
  416a81:	pop    eax
  416a82:	pop    eax
  416a83:	(bad)  
  416a84:	ficomp DWORD PTR [edi-0x7b]
  416a87:	or     esi,DWORD PTR [esi+0x43]
  416a8a:	pop    esp
  416a8b:	xor    esi,DWORD PTR [edx+0x78]
  416a8e:	je     0x416a30
  416a90:	inc    esi
  416a91:	jbe    0x416a9e
  416a93:	call   0xcb13:0x9178e8b0
  416a9a:	mov    al,ds:0x3be12c7a
  416a9f:	inc    ebp
  416aa0:	cmp    ebx,eax
  416aa2:	popf   
  416aa3:	int    0xe2
  416aa5:	outs   dx,DWORD PTR ds:[esi]
  416aa6:	jmp    0xd6b7d317
  416aab:	shr    esp,0x83
  416aae:	int3   
  416aaf:	cmp    DWORD PTR [ebp+0x21e9d0f2],esi
  416ab5:	fbstp  TBYTE PTR [edi]
  416ab7:	pop    ebp
  416ab8:	sbb    al,0x46
  416aba:	xor    eax,0x77473b5e
  416abf:	xlat   BYTE PTR ds:[ebx]
  416ac0:	sbb    BYTE PTR [eax],bl
  416ac2:	addr16 jp 0x416b1c
  416ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac6:	loopne 0x416a50
  416ac8:	popf   
  416ac9:	fistp  WORD PTR [ecx]
  416acb:	fisttp QWORD PTR [eax-0x73]
  416ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416acf:	jo     0x416b38
  416ad1:	pusha  
  416ad2:	sub    DWORD PTR [esi+0x4bf813f1],0x483ab948
  416adc:	das    
  416add:	xor    esp,DWORD PTR [esi-0x50]
  416ae0:	daa    
  416ae1:	mov    ds:0x6fb268b4,al
  416ae6:	xchg   ecx,eax
  416ae7:	pop    edi
  416ae8:	data16 (bad) [eax-0x44]
  416aec:	mov    ebx,0x20cba59c
  416af1:	repnz inc edx
  416af3:	mov    ds:0x7bea15a9,al
  416af8:	mov    bh,0xe2
  416afa:	sti    
  416afb:	(bad)  
  416afc:	(bad)  
  416afd:	sbb    DWORD PTR [ebx],eax
  416aff:	mov    ah,0xe0
  416b01:	es mov bl,0xa5
  416b04:	(bad)  
  416b05:	pop    ebx
  416b06:	lahf   
  416b07:	and    al,0xcb
  416b09:	enter  0xcd9c,0x5f
  416b0d:	push   esi
  416b0e:	push   esi
  416b0f:	pop    ebp
  416b10:	pop    esi
  416b11:	sbb    edx,DWORD PTR [edx+0x73]
  416b14:	ret    
  416b15:	xchg   BYTE PTR [ebx-0x70842c76],ch
  416b1b:	repz inc ebx
  416b1d:	xlat   BYTE PTR ds:[ebx]
  416b1e:	jl     0x416b75
  416b20:	loope  0x416abc
  416b22:	sbb    BYTE PTR [ebx+0x11],ch
  416b25:	mul    BYTE PTR [edi]
  416b27:	push   es
  416b28:	or     bh,BYTE PTR [ebx-0x5d]
  416b2b:	mov    ss,WORD PTR [ecx-0x77]
  416b2e:	mul    BYTE PTR [ecx-0x5c]
  416b31:	add    DWORD PTR [esi+0x623e3925],eax
  416b37:	popa   
  416b38:	xor    edi,DWORD PTR [edx]
  416b3a:	xchg   esi,eax
  416b3b:	or     DWORD PTR [eax-0x7bfff321],0xffffffe4
  416b42:	or     DWORD PTR [esi],ebx
  416b44:	gs or  al,0xfc
  416b47:	inc    eax
  416b48:	jno    0x416ba8
  416b4a:	bound  eax,QWORD PTR ds:0xee24773b
  416b50:	shl    DWORD PTR ds:0xdeefa360,cl
  416b56:	in     al,dx
  416b57:	add    eax,DWORD PTR [ebx+0x3fd2c5d2]
  416b5d:	ret    
  416b5e:	or     DWORD PTR [eax-0x42124159],0xf70c0a26
  416b68:	xchg   ebp,eax
  416b69:	or     DWORD PTR [ecx+0x4b],edi
  416b6c:	mov    WORD PTR [edi+eiz*2+0x2723a801],fs
  416b73:	pop    edi
  416b74:	sbb    edi,DWORD PTR [eax-0x314e7274]
  416b7a:	adc    al,0x53
  416b7c:	(bad)  
  416b7d:	scas   al,BYTE PTR es:[edi]
  416b7e:	mov    bl,0x21
  416b80:	les    edx,FWORD PTR [esi]
  416b82:	popa   
  416b83:	in     al,dx
  416b84:	stos   DWORD PTR es:[edi],eax
  416b85:	mov    ah,0x29
  416b87:	mov    edi,0xb935da44
  416b8c:	and    BYTE PTR [ecx],cl
  416b8e:	xor    al,0x3
  416b90:	sbb    eax,0xfdef038c
  416b95:	xor    dl,0xea
  416b98:	sbb    BYTE PTR [eax+0x428ebe00],dh
  416b9e:	cmp    eax,0xf609fe60
  416ba3:	add    eax,DWORD PTR [ebp+0x399f3f57]
  416ba9:	sub    bl,bl
  416bab:	sub    dh,BYTE PTR cs:[esi-0x17fa616a]
  416bb2:	repz jns 0x416bcb
  416bb5:	adc    DWORD PTR [ebx+0x4c654a60],esp
  416bbb:	pop    edi
  416bbc:	loope  0x416c14
  416bbe:	pop    edx
  416bbf:	aam    0x98
  416bc1:	fistp  WORD PTR [esi-0x2571ef08]
  416bc7:	xchg   BYTE PTR [ebx-0x23],ah
  416bca:	adc    al,0x3a
  416bcc:	jno    0x416bab
  416bce:	daa    
  416bcf:	add    DWORD PTR [ecx+0x2d],ecx
  416bd2:	mul    DWORD PTR [esi+0x2c]
  416bd5:	and    DWORD PTR [esi+0x9],0xffffff96
  416bd9:	fsub   QWORD PTR [esi-0x3c]
  416bdc:	mov    bl,0xa2
  416bde:	push   eax
  416bdf:	sar    DWORD PTR [eax],cl
  416be1:	repnz rcr DWORD PTR [ebx],1
  416be4:	mov    ecx,0xa3a8e820
  416be9:	ror    DWORD PTR [esi+eiz*2+0x54],1
  416bed:	xor    al,0x31
  416bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bf0:	popa   
  416bf1:	inc    esi
  416bf2:	lods   eax,DWORD PTR ds:[esi]
  416bf3:	adc    edi,eax
  416bf5:	mov    ds:0x120c17ae,eax
  416bfa:	sub    eax,0x6
  416bfd:	jns    0x416b86
  416bff:	scas   al,BYTE PTR es:[edi]
  416c00:	cs jge 0x416c60
  416c03:	mov    al,0x1b
  416c05:	ret    
  416c06:	(bad)  
  416c08:	in     eax,0x57
  416c0a:	or     eax,0x7b6b2a84
  416c0f:	and    esp,0x4c
  416c12:	sbb    esp,0xffffffd1
  416c15:	mov    ch,0xb0
  416c17:	je     0x416c0d
  416c19:	jne    0x416c0f
  416c1b:	dec    ebx
  416c1c:	jecxz  0x416bb2
  416c1e:	in     al,0xb8
  416c20:	xor    bh,ah
  416c22:	mov    edx,0xc12bd7c6
  416c27:	jg     0x416be4
  416c29:	test   eax,0xc1d11640
  416c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c2f:	push   es
  416c30:	(bad)  
  416c31:	sub    ch,BYTE PTR [esi-0x32]
  416c34:	mov    esi,fs
  416c36:	pop    eax
  416c37:	(bad)  
  416c38:	push   cs
  416c39:	jg     0x416be2
  416c3b:	enter  0x5f70,0xd8
  416c3f:	and    al,0xd
  416c42:	std    
  416c43:	xor    bh,dl
  416c45:	adc    ebp,0x8fe4542d
  416c4b:	jmp    0x9e5e:0xaa397ab6
  416c52:	ins    DWORD PTR es:[edi],dx
  416c53:	or     al,0xde
  416c55:	xor    DWORD PTR [edi+0x5a535ce0],ebx
  416c5b:	jno    0x416ca6
  416c5d:	pop    edx
  416c5e:	call   0x28ebdbd2
  416c63:	or     al,0x2f
  416c65:	or     eax,0x5ee35237
  416c6a:	test   eax,0xf068e6d4
  416c6f:	test   esp,ebp
  416c71:	push   eax
  416c72:	ret    0x2e29
  416c75:	sub    BYTE PTR [ebp+0x41],bl
  416c78:	adc    eax,0xd4da9c44
  416c7d:	jae    0x416cc8
  416c7f:	pop    edx
  416c80:	push   ss
  416c81:	xor    eax,0xe06ca8bb
  416c86:	dec    esi
  416c87:	sub    DWORD PTR [esi+0x5a],0x71
  416c8b:	cmc    
  416c8c:	je     0x416cf2
  416c8e:	(bad)  
  416c8f:	xchg   BYTE PTR [ebx-0x2fcc07a3],cl
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    ah,ah
  416df4:	jmp    0x45b64b07
  416df9:	add    BYTE PTR [ebx-0x7c7ca1c2],0x2e
  416e00:	xchg   esi,eax
  416e01:	dec    ecx
  416e02:	mov    ds:0xf4a97ac3,eax
  416e07:	iret   
  416e08:	leave  
  416e09:	mov    dh,0xb7
  416e0b:	adc    eax,0xd268753b
  416e10:	jns    0x416e1a
  416e12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e13:	push   ds
  416e14:	rcl    BYTE PTR [esi+edx*1],cl
  416e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e18:	sahf   
  416e19:	gs ins BYTE PTR es:[edi],dx
  416e1b:	pop    ss
  416e1c:	lds    ebx,FWORD PTR [edi+0x59]
  416e1f:	stos   DWORD PTR es:[edi],eax
  416e20:	sub    DWORD PTR [ebx],0xa5ffaff9
  416e26:	lds    ebp,FWORD PTR [edx-0x40fd62df]
  416e2c:	les    eax,FWORD PTR [edi+0x6a1782c4]
  416e32:	inc    edx
  416e33:	add    al,0xfb
  416e35:	in     al,dx
  416e36:	dec    ebp
  416e37:	clc    
  416e38:	and    DWORD PTR [esi-0x51],ecx
  416e3b:	nop
  416e3c:	rol    ecx,0x23
  416e3f:	adc    DWORD PTR [esi],esp
  416e41:	cmp    esi,ebp
  416e43:	in     eax,dx
  416e44:	xor    al,0x9e
  416e46:	cmp    ebx,edi
  416e48:	data16 sti 
  416e4a:	jns    0x416e22
  416e4c:	mov    ch,0x28
  416e4e:	or     eax,0x200dec54
  416e53:	in     eax,dx
  416e54:	adc    eax,0x6fa19ec4
  416e59:	cwde   
  416e5a:	cdq    
  416e5b:	test   eax,0xf860a04
  416e60:	loopne 0x416e62
  416e62:	pop    ecx
  416e63:	xor    BYTE PTR [esi],bh
  416e65:	mov    ds:0x7fe3fba5,eax
  416e6a:	das    
  416e6b:	adc    ah,dl
  416e6d:	hlt    
  416e6e:	(bad)  
  416e6f:	pop    ss
  416e70:	mov    DWORD PTR [ebx],esi
  416e72:	xchg   ebx,eax
  416e73:	hlt    
  416e74:	gs mov bl,0x2b
  416e77:	mov    cl,0x60
  416e79:	test   BYTE PTR [ecx],cl
  416e7b:	jge    0x416e00
  416e7d:	xchg   edi,eax
  416e7e:	bound  edi,QWORD PTR [ebp+0x2e]
  416e81:	jmp    0x5fada2e8
  416e86:	loope  0x416ebd
  416e88:	push   edx
  416e89:	push   0x6f268cbd
  416e8e:	cmp    eax,0xd5439026
  416e93:	call   0xbc4e2510
  416e98:	push   ds
  416e99:	fs (bad) 
  416e9b:	mov    ch,0x47
  416e9d:	pop    eax
  416e9e:	fs hlt 
  416ea0:	or     BYTE PTR [ecx-0x45],ch
  416ea3:	(bad)  
  416ea4:	ror    BYTE PTR [eax],0xb8
  416ea7:	xchg   edi,eax
  416ea8:	lock inc ebp
  416eaa:	and    ecx,edi
  416eac:	div    DWORD PTR [esi+0x50ad6fd7]
  416eb2:	retf   0x1272
  416eb5:	leave  
  416eb6:	push   es
  416eb7:	inc    ebp
  416eb8:	adc    dh,dh
  416eba:	mov    edi,?
  416ebc:	repnz add cl,BYTE PTR [edi-0x5c619768]
  416ec3:	fwait
  416ec4:	jmp    0x867e8905
  416ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eca:	out    0x2e,al
  416ecc:	mov    ?,WORD PTR [ebx+0xc13294]
  416ed2:	mov    ah,0xef
  416ed4:	add    BYTE PTR [ebx+eiz*2],bh
  416ed7:	cli    
  416ed8:	xor    DWORD PTR [esi+0x5d],esp
  416edb:	fwait
  416edc:	div    BYTE PTR [eax]
  416ede:	sub    al,BYTE PTR [eax+0x63]
  416ee1:	mov    dl,0x90
  416ee3:	js     0x416f43
  416ee5:	arpl   WORD PTR [ecx+eax*2+0x39ec2ee9],bx
  416eec:	(bad)  
  416eed:	push   0xe30fe6f7
  416ef2:	imul   eax,DWORD PTR [ebx+0x33],0xffffffbd
  416ef6:	sahf   
  416ef7:	stc    
  416ef8:	mov    dl,0x51
  416efa:	mov    esp,0xa36d9686
  416eff:	add    ch,BYTE PTR [ebp+eax*1-0x25]
  416f03:	inc    edx
  416f04:	jl     0x416f20
  416f06:	and    dh,cl
  416f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f09:	cmp    DWORD PTR [ebx-0x569cf9eb],edi
  416f0f:	add    BYTE PTR [edi+0x5f902aee],ch
  416f15:	or     eax,eax
  416f17:	jne    0x416f21
  416f19:	pop    eax
  416f1a:	sbb    eax,0x32100479
  416f1f:	push   ebp
  416f20:	xlat   BYTE PTR ds:[ebx]
  416f21:	mov    dh,0xe1
  416f23:	shr    bh,0x2e
  416f26:	mov    ebx,0xd2c717d4
  416f2b:	das    
  416f2c:	push   ds
  416f2d:	xchg   DWORD PTR [edx-0x2ea94dd2],esi
  416f33:	sbb    BYTE PTR [ebp+0x62],0x2c
  416f37:	add    eax,0x4d7be908
  416f3c:	sub    bh,BYTE PTR [ecx+0x1]
  416f3f:	push   ecx
  416f40:	dec    esi
  416f41:	or     BYTE PTR [ecx+0x52],bl
  416f44:	outs   dx,DWORD PTR ds:[esi]
  416f45:	mov    ecx,0x94c7d093
  416f4a:	(bad)  
  416f4c:	jecxz  0x416fc7
  416f4e:	jno    0x416fc3
  416f50:	push   ebx
  416f51:	std    
  416f52:	add    DWORD PTR [ebp+0x50ccce0c],edx
  416f58:	aas    
  416f59:	aad    0x55
  416f5b:	std    
  416f5c:	in     al,0x71
  416f5e:	aam    0x33
  416f60:	out    dx,al
  416f61:	rol    DWORD PTR [esi+0x7cea4a28],cl
  416f67:	ds stos BYTE PTR es:[edi],al
  416f69:	in     eax,dx
  416f6a:	mov    ah,0x62
  416f6c:	retf   0x954
  416f6f:	imul   ebx,DWORD PTR [ebp+0x4be163f0],0x5c100900
  416f79:	jp     0x416f68
  416f7b:	fst    st(7)
  416f7d:	adc    DWORD PTR [eax+edx*1+0x5d],esi
  416f81:	cdq    
  416f82:	sub    al,0xa6
  416f84:	in     al,0x9c
  416f86:	adc    DWORD PTR [edx+0x37b66821],ebp
  416f8c:	add    dl,dh
  416f8e:	xlat   BYTE PTR ds:[ebx]
  416f8f:	push   esp
  416f90:	push   ss
  416f91:	clc    
  416f92:	js     0x416f4a
  416f94:	and    BYTE PTR [edx],dh
  416f96:	mov    eax,0x59d8132
  416f9b:	push   ebp
  416f9c:	fdivr  st,st(1)
  416f9e:	int    0xb5
  416fa0:	cmp    BYTE PTR [edi+esi*1-0x2e56953c],cl
  416fa7:	out    dx,al
  416fa8:	mov    bh,0x48
  416faa:	push   ecx
  416fab:	sahf   
  416fac:	out    0xc4,eax
  416fae:	adc    eax,0x7fb64b8a
  416fb3:	xor    bl,ch
  416fb5:	or     BYTE PTR [edi],bh
  416fb7:	sbb    eax,DWORD PTR [ebx+0x4fbc861d]
  416fbd:	ja     0x416f84
  416fbf:	and    BYTE PTR [ebp+eiz*2+0xb56b14c],bh
  416fc6:	test   BYTE PTR [ebx],ah
  416fc8:	mov    ebx,0xeb296edd
  416fcd:	jo     0x41701b
  416fcf:	sbb    eax,0xd121098b
  416fd4:	loope  0x416ff0
  416fd6:	jbe    0x416f67
  416fd8:	jno    0x416fe0
  416fda:	xor    al,0x45
  416fdc:	cmp    eax,0x665a334a
  416fe1:	cmp    eax,0xa941664b
  416fe6:	dec    eax
  416fe7:	dec    edi
  416fe8:	in     eax,0xd2
  416fea:	jae    0x416fb8
  416fec:	push   ebp
  416fed:	xchg   ebp,eax
  416fee:	mov    bl,0x66
  416ff0:	jns    0x416f75
  416ff2:	dec    ecx
  416ff3:	(bad)  
  416ff4:	in     eax,0xd
  416ff6:	retf   
  416ff7:	pushf  
  416ff8:	push   ebx
  416ff9:	push   ecx
  416ffa:	mov    ch,0x10
  416ffc:	mov    BYTE PTR [ecx],0x99
  416fff:	imul   ebx,DWORD PTR ds:0x196f8ce6,0xe899b32f
  417009:	loope  0x417088
  41700b:	lea    ebp,[ebx+0x34145d16]
  417011:	icebp  
  417012:	mov    eax,0xa7cc759b
  417017:	mov    es,WORD PTR [edi-0x5d]
  41701a:	mov    edi,0xd08a94a1
  41701f:	(bad)  
  417020:	xor    al,dh
  417022:	or     BYTE PTR [ecx-0x176bba20],0x9
  417029:	cwde   
  41702a:	push   cs
  41702b:	and    DWORD PTR [ebp-0x5fa314de],edi
  417031:	rcl    DWORD PTR [ebp+ebx*4-0x5e6eaffe],cl
  417038:	push   ebp
  417039:	inc    esi
  41703a:	in     al,dx
  41703b:	mov    DWORD PTR [ecx+0x2c],eax
  41703e:	inc    ecx
  41703f:	scas   eax,DWORD PTR es:[edi]
  417040:	jmp    0x854ecb6a
  417045:	iret   
  417046:	add    DWORD PTR [eax+0x5],edx
  417049:	sbb    eax,0x56681619
  41704e:	dec    esi
  41704f:	ret    
  417050:	xor    al,0x53
  417052:	idiv   DWORD PTR [edx]
  417054:	dec    ebx
  417055:	sub    al,0xbe
  417057:	mov    ecx,0x1ab5fd2d
  41705c:	xchg   esp,eax
  41705d:	or     DWORD PTR [ebx+0x1b],ecx
  417060:	jp     0x416ffe
  417062:	add    al,0xff
  417064:	fnsave [eax+ecx*2-0xe]
  417068:	in     eax,dx
  417069:	xor    BYTE PTR [ebx+0x50],ch
  41706c:	and    BYTE PTR [edx-0x3a274ea7],0x15
  417073:	jg     0x417068
  417075:	adc    edi,edi
  417077:	into   
  417078:	push   ebx
  417079:	cld    
  41707a:	sbb    eax,0x915a1b1
  41707f:	ret    
  417080:	jns    0x41700a
  417082:	mov    cl,0xe1
  417084:	jp     0x41706a
  417086:	sbb    BYTE PTR [edi-0x54],bh
  417089:	imul   BYTE PTR [ecx]
  41708b:	pop    edi
  41708c:	sub    DWORD PTR [edi],ebx
  41708e:	cli    
  41708f:	inc    BYTE PTR [edi-0x2a82a116]
  417095:	aad    0x73
  417097:	and    DWORD PTR [ecx],edx
  417099:	xchg   DWORD PTR [edx-0x23199229],edi
  41709f:	and    ebx,DWORD PTR [ecx+0x68]
  4170a2:	shl    DWORD PTR [ecx],cl
  4170a4:	cmp    al,0xb1
  4170a6:	jnp    0x41704b
  4170a8:	mov    eax,ds:0xcfc24c67
  4170ad:	mov    ebx,0x3e029f3e
  4170b2:	and    eax,0x1bf0d365
  4170b7:	xchg   DWORD PTR [edx],eax
  4170b9:	fdivr  st(6),st
  4170bb:	mov    fs,ebp
  4170bd:	ins    DWORD PTR es:[edi],dx
  4170be:	xchg   DWORD PTR [edx-0x4a807f65],ecx
  4170c4:	adc    edx,esi
  4170c6:	mov    ecx,0x96e86edf
  4170cb:	sub    DWORD PTR [ecx-0x7dc68748],0xffffffc1
  4170d2:	cld    
  4170d3:	in     al,0xa1
  4170d5:	(bad)  
  4170d6:	loopne 0x4170a7
  4170d8:	loopne 0x4170ca
  4170da:	inc    esp
  4170db:	inc    ebx
  4170dc:	arpl   WORD PTR ds:0xb8712901,di
  4170e2:	sbb    ebx,DWORD PTR [esi+0x4213d36d]
  4170e8:	bound  eax,QWORD PTR [ebx+0x5d]
  4170eb:	(bad)  
  4170ec:	push   esi
  4170ed:	xor    ah,cl
  4170ef:	xor    BYTE PTR [edx],ch
  4170f1:	cmp    DWORD PTR [esi-0x4e],ecx
  4170f4:	jns    0x41716f
  4170f6:	scas   eax,DWORD PTR es:[edi]
  4170f7:	add    eax,0x77da352d
  4170fc:	jg     0x417104
  4170fe:	pop    eax
  4170ff:	in     eax,dx
  417100:	pop    es
  417101:	mov    ?,WORD PTR [ebp+0x5fe148a3]
  417107:	shl    ebp,0xbe
  41710a:	mov    esi,0x7af947cc
  41710f:	loopne 0x4170ac
  417111:	ins    DWORD PTR es:[edi],dx
  417112:	mov    dh,BYTE PTR [edi]
  417114:	(bad)  
  417115:	xor    al,0xd0
  417117:	ins    BYTE PTR es:[edi],dx
  417118:	ds mov ebx,0x48a10514
  41711e:	mov    dl,0x15
  417120:	sbb    edi,DWORD PTR [esi]
  417122:	jae    0x41716b
  417124:	and    ebp,esi
  417126:	mov    ebp,0xb0e60eb8
  41712b:	pop    ecx
  41712c:	pop    ds
  41712d:	fisttp QWORD PTR ds:0xfab43652
  417133:	arpl   WORD PTR [edx],dx
  417135:	mov    dl,0x70
  417137:	inc    ecx
  417138:	inc    ebp
  417139:	dec    eax
  41713a:	push   eax
  41713b:	fild   DWORD PTR [esi-0xdab3d4f]
  417141:	adc    BYTE PTR [ebx+0x36],al
  417144:	jns    0x41717b
  417146:	jo     0x417147
  417148:	xchg   edi,eax
  417149:	dec    esp
  41714a:	daa    
  41714b:	jle    0x41710a
  41714d:	clc    
  41714e:	inc    eax
  41714f:	aaa    
  417150:	pushf  
  417151:	stos   DWORD PTR es:[edi],eax
  417152:	sub    eax,0x73532bbf
  417157:	cmp    DWORD PTR gs:[ebp+ebp*1+0x2f7c0e42],edi
  41715f:	sub    DWORD PTR [ebp+0x74],0x40
  417163:	(bad)  
  417164:	iret   
  417165:	xchg   BYTE PTR [esi+edi*8+0x42],bh
  417169:	dec    esi
  41716a:	shr    BYTE PTR ds:0x8e2d193e,cl
  417170:	(bad)  
  417171:	jg     0x4171c9
  417173:	or     esp,DWORD PTR [edx+ebp*2+0xf]
  417177:	mov    WORD PTR [esi-0x77],gs
  41717a:	mov    ebp,0x44a18ca9
  41717f:	jne    0x417177
  417181:	(bad)  
  417182:	mov    eax,ds:0x43dc7d03
  417187:	lds    eax,FWORD PTR ds:0x584f1b0e
  41718d:	or     DWORD PTR [edx+0x3f],ecx
  417190:	(bad)  
  417191:	sub    eax,0xc795c61a
  417196:	js     0x4171cd
  417198:	ret    0x4568
  41719b:	lock inc esi
  41719d:	ret    0xd02
  4171a0:	enter  0x1385,0x99
  4171a4:	fisub  WORD PTR ds:[esi]
  4171a7:	loopne 0x41719e
  4171a9:	xchg   ebx,eax
  4171aa:	mov    esi,0x16be2a9c
  4171af:	mov    bh,ah
  4171b1:	call   0x8f0998ec
  4171b6:	inc    ebx
  4171b7:	or     BYTE PTR [edx+0x7593dc57],dh
  4171bd:	sub    edi,edi
  4171bf:	(bad)
  4171c2:	lods   eax,DWORD PTR ds:[esi]
  4171c3:	xor    al,0x3
  4171c5:	add    dh,BYTE PTR [edx]
  4171c7:	cmp    ch,cl
  4171c9:	xor    esp,DWORD PTR [edx+0x3]
  4171cc:	mov    ds:0x54c7ee24,eax
  4171d1:	inc    eax
  4171d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171d3:	add    eax,0x43d043f2
  4171d8:	or     eax,0x3dba11c6
  4171dd:	xchg   ebp,eax
  4171de:	fidivr DWORD PTR [esi+0x1]
  4171e1:	lods   eax,DWORD PTR ds:[esi]
  4171e2:	je     0x41719b
  4171e4:	dec    ebp
  4171e5:	je     0x4171d5
  4171e7:	add    eax,0xb8d74a4e
  4171ec:	repnz mov ah,0xa7
  4171ef:	retf   0xf20b
  4171f2:	inc    edx
  4171f3:	inc    esp
  4171f4:	repz (bad) 
  4171f7:	hlt    
  4171f8:	out    dx,eax
  4171f9:	sar    BYTE PTR [edx+eiz*1-0x3d1ae68e],cl
  417200:	imul   ebx,DWORD PTR [edi-0x39],0x5946acf5
  417207:	inc    ebx
  417208:	(bad)  [ecx]
  41720a:	in     al,0xaf
  41720c:	les    ebx,FWORD PTR [eax+0x7fc8a73f]
  417212:	jnp    0x4171ac
  417214:	pop    esi
  417215:	adc    eax,0x26d97ce0
  41721a:	dec    ebp
  41721b:	daa    
  41721c:	jmp    0x1e7b4772
  417221:	jecxz  0x41729a
  417223:	dec    esp
  417224:	dec    edi
  417225:	or     cl,BYTE PTR [ebp-0x67717e46]
  41722b:	mov    ds:0xd6957c48,eax
  417230:	fild   WORD PTR ds:0x6f86ba7f
  417236:	pop    edx
  417237:	test   al,0xc2
  417239:	cmp    ebx,DWORD PTR [esi-0x17]
  41723c:	lds    ebp,FWORD PTR [eax-0x58]
  41723f:	pop    ebx
  417240:	mov    ?,WORD PTR [esi+0x4f]
  417243:	sbb    DWORD PTR [esi+0x6e00c32f],edi
  417249:	mov    dl,BYTE PTR [eax+0x7d]
  41724c:	cmp    bl,cl
  41724e:	xchg   ebp,eax
  41724f:	cmp    DWORD PTR ds:[ecx+0x1876875c],edi
  417256:	adc    BYTE PTR [ecx+edx*1],0x1b
  41725a:	(bad)  
  41725b:	outs   dx,BYTE PTR ds:[esi]
  41725c:	lods   al,BYTE PTR ds:[esi]
  41725d:	ficomp DWORD PTR [edx]
  41725f:	stos   DWORD PTR es:[edi],eax
  417260:	mov    eax,ds:0xfbe4b070
  417265:	test   BYTE PTR [ecx-0x62cb76c4],bl
  41726b:	pop    esi
  41726c:	sub    ch,dh
  41726e:	add    dh,BYTE PTR [eax+0x2c180c3b]
  417274:	fisub  WORD PTR [ebx]
  417276:	js     0x417263
  417278:	mov    bh,0xa1
  41727a:	and    eax,0x4d35499c
  41727f:	aad    0x31
  417281:	repz pop esp
  417283:	mov    ecx,DWORD PTR [eax-0x6b]
  417286:	test   ah,al
  417288:	mov    esp,0xb75b66ae
  41728d:	adc    BYTE PTR [edx],0xf4
  417290:	and    dl,cl
  417292:	enter  0x6b27,0xaa
  417296:	inc    ebx
  417297:	sbb    bh,BYTE PTR [edi]
  417299:	test   DWORD PTR [esi-0x57],ecx
  41729c:	mov    edi,DWORD PTR [ecx+ecx*1-0x4a8f9ca]
  4172a3:	std    
  4172a4:	sti    
  4172a5:	xchg   DWORD PTR [eax+0x65a240f7],ebx
  4172ab:	add    bl,BYTE PTR [edi]
  4172ad:	arpl   WORD PTR [edi],dx
  4172af:	mov    gs,ebp
  4172b1:	mov    dl,BYTE PTR [ebp-0x43]
  4172b4:	in     eax,dx
  4172b5:	sbb    ecx,esp
  4172b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172b8:	mov    esp,0x75562034
  4172bd:	mov    esp,DWORD PTR [eax+0x2]
  4172c0:	scas   al,BYTE PTR es:[edi]
  4172c1:	out    0xe2,al
  4172c3:	mov    bl,BYTE PTR [esp+eiz*8+0x53af3226]
  4172ca:	loop   0x4172d1
  4172cc:	(bad)  
  4172cd:	lgs    esp,FWORD PTR [edi]
  4172d0:	xchg   ecx,eax
  4172d1:	fs dec BYTE PTR es:[esi]
  4172d5:	push   es
  4172d6:	jge    0x417268
  4172d8:	pushf  
  4172d9:	pop    es
  4172da:	xor    BYTE PTR [edi+0xc360595],ch
  4172e0:	sbb    ecx,ecx
  4172e2:	push   eax
  4172e3:	lahf   
  4172e4:	mov    edx,0x4c736ee4
  4172e9:	pop    es
  4172ea:	adc    DWORD PTR [edi+0x566cd4e],ebp
  4172f0:	jns    0x4172fd
  4172f2:	mov    eax,0xd8d423f4
  4172f7:	jge    0x4172f2
  4172f9:	sbb    al,0xee
  4172fb:	xchg   eax,esp
  4172fd:	fcmovnb st,st(4)
  4172ff:	mov    dl,bh
  417301:	mov    ecx,0x189e0e6a
  417306:	cmp    eax,0x99f9195f
  41730b:	mov    esi,0x5afed7b2
  417310:	cld    
  417311:	mov    ah,0x81
  417313:	cwde   
  417314:	push   es
  417315:	sub    al,0x26
  417317:	(bad)  
  417318:	xor    cl,BYTE PTR [ecx]
  41731a:	jmp    0xdef6c897
  41731f:	xor    DWORD PTR [edi-0x61],esi
  417322:	jb     0x417312
  417324:	or     al,0xc
  417326:	dec    eax
  417327:	(bad)  
  417328:	into   
  417329:	sub    edx,DWORD PTR [edx-0x7584b29b]
  41732f:	xlat   BYTE PTR ds:[ebx]
  417330:	jbe    0x417317
  417332:	and    ebp,DWORD PTR [ebx-0x64c169e8]
  417338:	jb     0x417344
  41733a:	and    eax,0x5200fdd9
  41733f:	sub    BYTE PTR [ebx-0x38],0x7f
  417343:	mov    ds:0x177beab1,eax
  417348:	sub    ah,BYTE PTR [esi+0x5d8a41a3]
  41734e:	popa   
  41734f:	int    0x7c
  417351:	sahf   
  417352:	xor    al,0x6b
  417354:	imul   esp,DWORD PTR [esi-0x410999f5],0x15
  41735b:	daa    
  41735c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41735d:	pop    ecx
  41735e:	enter  0x8a3e,0x4e
  417362:	inc    esi
  417363:	jne    0x417343
  417365:	inc    ebx
  417366:	lods   eax,DWORD PTR ds:[esi]
  417367:	pop    ebp
  417368:	addr16 sub cl,cl
  41736b:	mov    al,0xd5
  41736d:	jge    0x4173b7
  41736f:	dec    edx
  417370:	ins    DWORD PTR es:[edi],dx
  417371:	pushf  
  417372:	jg     0x4172fa
  417374:	es neg dh
  417377:	fs loop 0x417383
  41737a:	mov    ebp,0xe4093562
  41737f:	sub    al,0x2d
  417381:	cmp    al,BYTE PTR [ecx-0x27232e3e]
  417387:	iret   
  417388:	sbb    cl,BYTE PTR [edx+0x44]
  41738b:	jbe    0x41736b
  41738d:	stc    
  41738e:	ret    0x8b7e
  417391:	mov    ch,bl
  417393:	cdq    
  417394:	repnz ins DWORD PTR es:[edi],dx
  417396:	fwait
  417397:	outs   dx,DWORD PTR ds:[esi]
  417398:	push   0x48
  41739a:	jle    0x417389
  41739c:	test   BYTE PTR [edi+0x2fae618d],0xa3
  4173a3:	xchg   esp,eax
  4173a4:	mov    edx,DWORD PTR [eax-0x5]
  4173a7:	jbe    0x41734c
  4173a9:	enter  0x8316,0xb3
  4173ad:	mov    eax,ds:0x98070386
  4173b2:	sahf   
  4173b3:	fsub   DWORD PTR [edx+edi*1]
  4173b6:	aaa    
  4173b7:	adc    DWORD PTR [esi],esp
  4173b9:	jno    0x41742d
  4173bb:	add    al,0x52
  4173bd:	or     al,BYTE PTR [edx+0x23a6d277]
  4173c3:	loope  0x41740d
  4173c5:	scas   al,BYTE PTR es:[edi]
  4173c6:	sbb    al,0x1a
  4173c8:	aas    
  4173c9:	bound  esi,QWORD PTR [edx-0x501ecb2c]
  4173cf:	test   esi,eax
  4173d1:	call   0x61878895
  4173d6:	mov    DWORD PTR [edi-0x7948c306],ebx
  4173dc:	test   eax,0xb46f27c9
  4173e1:	repnz push ebx
  4173e3:	(bad)  
  4173e4:	fadd   DWORD PTR [ecx+0x64]
  4173e7:	inc    edi
  4173e8:	es test ah,dl
  4173eb:	and    eax,0x2c7dee7d
  4173f0:	sub    edx,eax
  4173f2:	xor    al,0xb5
  4173f4:	cmp    eax,0x6e980c5b
  4173f9:	jmp    0xcc47ac52
  4173fe:	stos   BYTE PTR es:[edi],al
  4173ff:	sahf   
  417400:	lahf   
  417401:	and    al,0xfa
  417403:	add    bl,BYTE PTR [edi-0xc]
  417406:	int    0x55
  417408:	push   esi
  417409:	jmp    DWORD PTR [edx-0x6c]
  41740c:	scas   al,BYTE PTR es:[edi]
  41740d:	mov    esi,0xad6ef479
  417412:	adc    DWORD PTR ss:[esi-0x30],ebx
  417416:	inc    eax
  417417:	lods   al,BYTE PTR ds:[esi]
  417418:	or     eax,0x97bb54e8
  41741d:	dec    edx
  41741e:	fs das 
  417420:	pop    esp
  417421:	dec    eax
  417422:	les    ebp,FWORD PTR [eax]
  417424:	push   esi
  417425:	mov    bh,0xa6
  417427:	xchg   esi,eax
  417428:	or     al,BYTE PTR [ebp+edx*1+0x4d]
  41742c:	(bad)  
  41742d:	mov    ds:0xf7dc189e,eax
  417432:	xchg   ebx,eax
  417433:	or     cl,BYTE PTR [eax-0x29]
  417436:	std    
  417437:	adc    ebx,esp
  417439:	fs ja  0x4173e5
  41743c:	sti    
  41743d:	and    cl,0xf9
  417440:	cmp    dh,bl
  417442:	jmp    0xfa24:0xaa639a6a
  417449:	sub    DWORD PTR [edi+0x12],edx
  41744c:	or     ah,BYTE PTR ds:0xf1a72805
  417452:	add    eax,0xc21e1d00
  417457:	and    DWORD PTR [eax+edi*2-0x377c5fd9],ebp
  41745e:	lahf   
  41745f:	(bad)
  417462:	out    0xdb,eax
  417464:	cdq    
  417465:	dec    eax
  417466:	push   0x1134aeaf
  41746b:	push   edi
  41746c:	xchg   ebx,eax
  41746d:	popf   
  41746e:	pop    ebx
  41746f:	sub    DWORD PTR [ecx],ecx
  417471:	mov    dh,0xe1
  417473:	push   ebp
  417474:	xchg   ebp,eax
  417475:	rcr    BYTE PTR [edx],cl
  417477:	test   al,0xf7
  417479:	shl    BYTE PTR [edx-0x63],0x99
  41747d:	ss dec ecx
  41747f:	push   0xffffffb9
  417481:	xor    al,0x34
  417483:	xchg   edi,eax
  417484:	fwait
  417485:	xchg   ecx,eax
  417486:	imul   esp,DWORD PTR [ecx+0x416837eb],0x888f4715
  417490:	std    
  417491:	je     0x4174f8
  417493:	xchg   esp,eax
  417494:	xlat   BYTE PTR ds:[ebx]
  417495:	test   DWORD PTR [edi-0x3c328d8c],esi
  41749b:	push   ds
  41749c:	push   esi
  41749d:	stos   DWORD PTR es:[edi],eax
  41749e:	mov    eax,ds:0xc8a63ed4
  4174a3:	popa   
  4174a4:	add    edx,DWORD PTR [ebx]
  4174a6:	add    BYTE PTR [ebx+0x5],dl
  4174a9:	iret   
  4174aa:	out    dx,al
  4174ab:	pop    edx
  4174ac:	pop    edi
  4174ad:	ins    BYTE PTR es:[edi],dx
  4174ae:	jb     0x417502
  4174b0:	nop
  4174b1:	ja     0x417523
  4174b3:	scas   eax,DWORD PTR es:[edi]
  4174b4:	jge    0x417438
  4174b6:	loop   0x41751e
  4174b8:	aas    
  4174b9:	mov    edx,0xb0ca158f
  4174be:	xor    cl,BYTE PTR [ebx+0x1d9b9ba0]
  4174c4:	or     BYTE PTR [esi+0x5b17bf5e],bl
  4174ca:	std    
  4174cb:	(bad)  
  4174cc:	fisttp WORD PTR [ecx+0x10]
  4174cf:	push   ss
  4174d0:	and    DWORD PTR ds:0xbf0942bd,ebx
  4174d6:	mov    DWORD PTR [eax],0xdf59ac30
  4174dc:	pop    ds
  4174dd:	jp     0x417503
  4174df:	cmc    
  4174e0:	das    
  4174e1:	pop    ebx
  4174e2:	je     0x41746d
  4174e4:	push   esi
  4174e5:	js     0x417505
  4174e7:	mov    esi,0xcc85eaa0
  4174ec:	dec    eax
  4174ed:	in     al,dx
  4174ee:	(bad)  
  4174ef:	shr    DWORD PTR [edx-0x5b6cdc1],cl
  4174f5:	sbb    eax,DWORD PTR [edi-0x733025e0]
  4174fb:	inc    ebx
  4174fc:	and    dh,BYTE PTR [edx+0x2e01d24e]
  417502:	fisubr DWORD PTR [edi+0x6f]
  417505:	add    al,0xf4
  417507:	out    dx,eax
  417508:	nop
  417509:	jb     0x4174bf
  41750b:	jns    0x417531
  41750d:	cmp    BYTE PTR [ebx-0x7146552c],bh
  417513:	inc    esp
  417514:	daa    
  417515:	push   ebx
  417516:	mov    dl,0x85
  417518:	aas    
  417519:	in     al,0x50
  41751b:	or     DWORD PTR [ecx+0x6d],ebp
  41751e:	stos   DWORD PTR es:[edi],eax
  41751f:	das    
  417520:	pop    esp
  417521:	je     0x41756d
  417523:	jno    0x4174ee
  417525:	mov    edi,0xe8fb814d
  41752a:	fstp   QWORD PTR [edx+0x4a]
  41752d:	nop
  41752e:	test   al,0x1
  417530:	xchg   ebx,eax
  417531:	push   ecx
  417532:	xchg   edx,eax
  417533:	mov    ds:0x4339492a,al
  417538:	out    0xe4,eax
  41753a:	and    ah,ah
  41753c:	xchg   ecx,eax
  41753d:	mov    ah,0x33
  41753f:	jge    0x417561
  417541:	sar    dh,0x31
  417544:	push   0x45
  417546:	mov    eax,0xd881c69e
  41754b:	jne    0x4174d0
  41754d:	jns    0x41759d
  41754f:	or     cl,BYTE PTR [esi+0x9b28fd9]
  417555:	daa    
  417556:	icebp  
  417557:	sub    BYTE PTR [esi+0x62a6d1f3],dl
  41755d:	jmp    0x4175a0
  41755f:	adc    eax,0x95661209
  417564:	outs   dx,BYTE PTR ds:[esi]
  417565:	(bad)  [ebx-0x69df0292]
  41756b:	dec    ebx
  41756c:	in     eax,0xa8
  41756e:	in     eax,dx
  41756f:	add    dl,dl
  417571:	add    esp,DWORD PTR [ebx-0x5716e14f]
  417577:	xor    ecx,DWORD PTR [ebp-0x3a]
  41757a:	stc    
  41757b:	add    eax,0x80647766
  417580:	cmp    ah,cl
  417582:	xor    al,0x8b
  417584:	popa   
  417585:	jne    0x4175e5
  417587:	or     bh,cl
  417589:	into   
  41758a:	cld    
  41758b:	enter  0x4d32,0xa8
  41758f:	sbb    al,0xbd
  417591:	imul   ecx,DWORD PTR [ebx],0xffffff8a
  417594:	or     al,0x58
  417596:	add    al,0x60
  417598:	push   edi
  417599:	iret   
  41759a:	out    0x3f,eax
  41759c:	jmp    0x417605
  41759e:	jmp    0x915b:0xc5ff895
  4175a5:	lock adc eax,0x882e91a6
  4175ab:	cmc    
  4175ac:	stos   BYTE PTR es:[edi],al
  4175ad:	call   0xb7b7:0x9ee832c7
  4175b4:	mov    ebp,0x49055333
  4175b9:	jae    0xb8d3955c
  4175bf:	xor    edi,DWORD PTR [esi+0x781a43c4]
  4175c5:	loopne 0x4175c5
  4175c7:	add    esi,esp
  4175c9:	jmp    0x857224e7
  4175ce:	jl     0x4175e7
  4175d0:	xor    ecx,DWORD PTR [ebx+0x28abc34e]
  4175d6:	xchg   ebx,eax
  4175d7:	retf   0xa849
  4175da:	mov    edi,0xeeaea244
  4175df:	shl    ecx,cl
  4175e1:	leave  
  4175e2:	add    DWORD PTR [ecx],ecx
  4175e4:	popa   
  4175e5:	cmp    dl,BYTE PTR [edx]
  4175e7:	pxor   mm7,QWORD PTR [edx-0xadffc31]
  4175ee:	lahf   
  4175ef:	push   0x1cf54212
  4175f4:	add    dh,ah
  4175f6:	fcmovnu st,st(1)
  4175f8:	fidiv  DWORD PTR [ecx+0x39864a17]
  4175fe:	xor    eax,0xcdf72d7f
  417603:	(bad)  
  417604:	fisttp QWORD PTR [ecx-0xc]
  417607:	jne    0x4175d2
  417609:	jl     0x417644
  41760b:	pusha  
  41760c:	xchg   ebp,eax
  41760d:	and    eax,0x6b7695e0
  417612:	lock mov dh,0x8b
  417615:	(bad)  
  417616:	shr    BYTE PTR [esi],1
  417618:	inc    eax
  417619:	test   DWORD PTR [ebp-0x28],ebx
  41761c:	push   esi
  41761d:	in     al,0x5b
  41761f:	dec    esp
  417620:	push   esp
  417621:	retf   
  417622:	pusha  
  417623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417624:	test   eax,0x797527e5
  417629:	dec    eax
  41762a:	(bad)  
  41762b:	xchg   esp,eax
  41762c:	or     eax,DWORD PTR [eax-0x5c]
  41762f:	aaa    
  417630:	mov    bl,0x2d
  417632:	add    eax,0x8343187b
  417637:	and    bl,BYTE PTR [eax+0x22]
  41763a:	adc    DWORD PTR [ebx],ebp
  41763c:	fs inc eax
  41763e:	xor    eax,0x980e16f1
  417643:	cmp    al,BYTE PTR [ebp-0x37cceb46]
  417649:	sbb    ebx,DWORD PTR [eax-0x73]
  41764c:	mov    eax,0xe78efe18
  417651:	test   DWORD PTR [edx-0x5f07e2e3],0x3bff9c08
  41765b:	sbb    al,0x65
  41765d:	not    BYTE PTR [ecx-0x7941293b]
  417663:	jo     0x41764d
  417665:	scas   eax,DWORD PTR es:[edi]
  417666:	cmp    eax,DWORD PTR [ebp+0x24957b0a]
  41766c:	pop    ebp
  41766d:	mov    eax,0x88eff4e9
  417672:	mov    edx,0xffe882a8
  417677:	mov    dh,0xe6
  417679:	in     al,0x48
  41767b:	mov    ch,0xf6
  41767d:	dec    ebp
  41767e:	mov    bh,0x16
  417680:	popa   
  417681:	mov    ah,0xc9
  417683:	and    DWORD PTR [edi+0x4b],eax
  417686:	retf   
  417687:	mov    ebp,0xd05f53ae
  41768c:	mov    bl,0xdf
  41768e:	xchg   esp,eax
  41768f:	rol    BYTE PTR [eax-0x34],cl
  417692:	jmp    0x417614
  417694:	jbe    0x417662
  417696:	mov    es,WORD PTR [eax+0x6479c81f]
  41769c:	int    0x32
  41769e:	cmp    eax,0xf475c441
  4176a3:	ror    BYTE PTR [edx],cl
  4176a5:	(bad)  
  4176a6:	dec    edx
  4176a7:	add    DWORD PTR [ebp-0x43fbd876],edx
  4176ad:	adc    eax,0x1643391b
  4176b2:	pop    ebp
  4176b3:	and    DWORD PTR [di],0x4e
  4176b7:	dec    edi
  4176b8:	ins    BYTE PTR es:[edi],dx
  4176b9:	sahf   
  4176ba:	pop    ebx
  4176bb:	retf   
  4176bc:	sbb    DWORD PTR [ecx+0x4],edx
  4176bf:	cwde   
  4176c0:	repz jbe 0x41769c
  4176c3:	(bad)
  4176c8:	test   DWORD PTR [edx-0x15],ebp
  4176cb:	xor    ch,BYTE PTR [ecx-0x6b09c04b]
  4176d1:	sub    ecx,edx
  4176d3:	xchg   edx,eax
  4176d4:	jne    0x417696
  4176d6:	or     ch,BYTE PTR [ebx-0x499afbb1]
  4176dc:	je     0x417675
  4176de:	mov    WORD PTR [esi-0x5d],?
  4176e1:	icebp  
  4176e2:	fs push ds
  4176e4:	loope  0x4176ac
  4176e6:	loope  0x417708
  4176e8:	cmp    eax,DWORD PTR [eax]
  4176ea:	sahf   
  4176eb:	inc    ebp
  4176ec:	xor    BYTE PTR ds:0x3eea46,bl
  4176f2:	jmp    0x41773d
  4176f4:	in     eax,dx
  4176f5:	inc    esp
  4176f6:	lea    ebp,[ecx-0x2f531563]
  4176fc:	enter  0x842,0x48
  417700:	dec    edx
  417701:	retf   
  417702:	mov    ebx,0xb4995e6f
  417707:	pop    edi
  417708:	(bad)  
  41770a:	inc    ebp
  41770b:	cwde   
  41770c:	stos   DWORD PTR es:[edi],eax
  41770d:	cmp    al,0x75
  41770f:	ror    DWORD PTR [eax+0x52],cl
  417712:	out    dx,al
  417713:	push   es
  417714:	scas   al,BYTE PTR es:[edi]
  417715:	dec    esp
  417716:	or     DWORD PTR [ebx-0x12],ebp
  417719:	jl     0x4176e2
  41771b:	pop    edi
  41771c:	xchg   edx,eax
  41771d:	dec    ecx
  41771e:	or     dl,BYTE PTR [ecx+edx*2+0x2c3093da]
  417725:	mov    al,0x6a
  417727:	js     0x417717
  417729:	xchg   edx,eax
  41772a:	and    ebp,esp
  41772c:	fmulp  st(1),st
  41772e:	ins    BYTE PTR es:[edi],dx
  41772f:	push   cs
  417730:	fidiv  WORD PTR [edi-0x5d]
  417733:	loope  0x417781
  417735:	xchg   DWORD PTR [ebp+0x77c62a83],eax
  41773b:	xlat   BYTE PTR ds:[ebx]
  41773c:	ins    BYTE PTR es:[edi],dx
  41773d:	test   eax,0xb5edf8f2
  417742:	cdq    
  417743:	jnp    0x417701
  417745:	inc    ecx
  417746:	cmp    dl,bh
  417748:	push   0xffffffd4
  41774a:	add    edi,esp
  41774c:	add    ah,0xd
  41774f:	dec    ebp
  417750:	mov    cl,0x82
  417752:	leave  
  417753:	fwait
  417754:	imul   edx,DWORD PTR [ecx+esi*8+0x6d81e159],0x54
  41775c:	pop    edi
  41775d:	and    DWORD PTR [ebx-0x706f8d01],0xffffffac
  417764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417765:	mov    ebx,0xea25e109
  41776a:	sub    ah,BYTE PTR [esi+edi*1+0x2cd755c9]
  417771:	not    BYTE PTR [edx]
  417773:	sub    al,0xf4
  417775:	arpl   cx,dx
  417777:	ds mov cl,0xce
  41777a:	inc    eax
  41777b:	or     eax,0xa1aa95ae
  417780:	je     0x41770e
  417782:	mov    BYTE PTR [ebx+0x4c],ah
  417785:	dec    eax
  417786:	lea    ebp,[esi+0x4e0ca312]
  41778c:	mov    BYTE PTR [ebp-0x3],cl
  41778f:	scas   al,BYTE PTR es:[edi]
  417790:	fistp  DWORD PTR [esi+0x39]
  417793:	or     al,0x1
  417795:	jne    0x4177ad
  417797:	push   esi
  417798:	and    bh,BYTE PTR [edi]
  41779a:	fbld   TBYTE PTR [esi]
  41779c:	ror    DWORD PTR [edi-0x608d8e36],1
  4177a2:	xor    bh,BYTE PTR ds:0x4f76105a
  4177a8:	jo     0x4177fc
  4177aa:	lock outs dx,BYTE PTR ds:[esi]
  4177ac:	mov    bh,0x96
  4177ae:	jg     0x417756
  4177b0:	out    dx,eax
  4177b1:	jnp    0x4177be
  4177b3:	jo     0x417813
  4177b5:	mov    bh,0xcb
  4177b7:	jge    0x4177ad
  4177b9:	add    cl,ah
  4177bb:	push   ebx
  4177bc:	sahf   
  4177bd:	xchg   esp,eax
  4177be:	dec    ecx
  4177bf:	cli    
  4177c0:	mov    ?,WORD PTR [ebx+0x6f]
  4177c3:	sti    
  4177c4:	push   ebp
  4177c5:	cs ss jge 0x417817
  4177c9:	retf   
  4177ca:	dec    esi
  4177cb:	sahf   
  4177cc:	std    
  4177cd:	repz xor bl,ch
  4177d0:	fdivr  DWORD PTR [ebp-0x61e510a2]
  4177d6:	mov    dh,0x2
  4177d8:	arpl   WORD PTR [ebx+0x7f811765],sp
  4177de:	sbb    BYTE PTR [edx-0x3d9be2a9],dl
  4177e4:	fst    DWORD PTR [ecx]
  4177e6:	and    ch,BYTE PTR [edx-0x2becc4a2]
  4177ec:	mov    edx,DWORD PTR [ecx]
  4177ee:	mov    ebp,eax
  4177f0:	pop    esi
  4177f1:	imul   esp,DWORD PTR [ebx+0x52e64811],0x2c4e6a9e
  4177fb:	daa    
  4177fc:	scas   eax,DWORD PTR es:[edi]
  4177fd:	adc    cl,dh
  4177ff:	mov    ebp,0xb8a31c23
  417804:	dec    esi
  417805:	int3   
  417806:	outs   dx,DWORD PTR ds:[esi]
  417807:	outs   dx,DWORD PTR ds:[esi]
  417808:	push   edx
  417809:	jne    0x4177c1
  41780b:	mov    ecx,edx
  41780d:	push   ds
  41780e:	add    DWORD PTR [eax],0x976bef86
  417814:	adc    eax,DWORD PTR [edx+0x28]
  417817:	push   esp
  417818:	sub    ebp,DWORD PTR [eax-0x76004411]
  41781e:	sub    ah,0xdf
  417821:	push   cs
  417822:	jle    0x417863
  417824:	sbb    eax,0xff933456
  417829:	pusha  
  41782a:	test   DWORD PTR [ecx+ebp*1+0x1e035f36],eax
  417831:	sar    BYTE PTR [esi-0x3bab43f1],0x97
  417838:	push   cs
  417839:	jecxz  0x41789b
  41783b:	mov    ds:0x1ca740d5,al
  417840:	es dec esi
  417842:	or     eax,0xb666a832
  417847:	or     edi,esi
  417849:	adc    ebp,DWORD PTR [ebp+0x48]
  41784c:	lock or ecx,DWORD PTR [edi-0x6e]
  417850:	sar    BYTE PTR [edi],cl
  417852:	test   eax,0xca9f3dd4
  417857:	add    ah,BYTE PTR [eax+0x2919e60b]
  41785d:	mov    ds:0xf666c7a4,eax
  417862:	jge    0x4178c9
  417864:	pop    edi
  417865:	push   0xa178cf22
  41786a:	mov    al,0x4a
  41786c:	aas    
  41786d:	inc    ebp
  41786e:	mov    ecx,0xab8335da
  417873:	xchg   ebx,eax
  417874:	mov    al,BYTE PTR [edx]
  417876:	imul   esi,eax,0xf67f2f65
  41787c:	enter  0xd734,0x77
  417880:	sub    ebp,eax
  417882:	xor    eax,0xe373288f
  417887:	mov    bl,0x89
  417889:	adc    eax,0xaf9c7315
  41788e:	test   eax,0x1474f883
  417893:	mov    ebp,0xefd2b3a8
  417898:	call   0xa0c8:0xedb22e16
  41789f:	xlat   BYTE PTR ds:[ebx]
  4178a0:	mov    BYTE PTR ds:0x1fc8ab,0x4f
  4178a7:	out    dx,al
  4178a8:	dec    eax
  4178a9:	dec    edx
  4178aa:	sub    DWORD PTR [edi-0x5128e77c],edi
  4178b0:	scas   eax,DWORD PTR es:[edi]
  4178b1:	test   al,0x65
  4178b3:	jp     0x417909
  4178b5:	not    BYTE PTR [ebx+0x3c]
  4178b8:	mov    eax,0xa3231d12
  4178bd:	retf   
  4178be:	dec    ecx
  4178bf:	ret    
  4178c0:	xlat   BYTE PTR ds:[ebx]
  4178c1:	mov    bh,0x37
  4178c3:	dec    esp
  4178c4:	push   es
  4178c5:	imul   esi,DWORD PTR [ecx+0x35],0x5f1833ce
  4178cc:	das    
  4178cd:	das    
  4178ce:	xchg   esp,eax
  4178cf:	outs   dx,BYTE PTR ds:[esi]
  4178d0:	lds    esi,FWORD PTR [ecx-0x41]
  4178d3:	fmul   QWORD PTR [ebp-0x64]
  4178d6:	push   ss
  4178d7:	(bad)  
  4178d9:	adc    bl,BYTE PTR [eax-0x49fbfc16]
  4178df:	lds    ebp,FWORD PTR [eax+ebx*4+0x6877782c]
  4178e6:	mov    fs,ebx
  4178e8:	jmp    0x4178ff
  4178ea:	iret   
  4178eb:	jmp    0x417938
  4178ed:	sub    eax,0x9889952e
  4178f2:	mov    gs,edi
  4178f4:	mov    bh,0xf7
  4178f6:	and    ebp,eax
  4178f8:	adc    al,0x16
  4178fa:	(bad)  
  4178fb:	les    edx,FWORD PTR [ebx-0x51]
  4178fe:	cmc    
  4178ff:	cmc    
  417900:	mov    BYTE PTR [ebx+0x6016fde2],ch
  417906:	lods   eax,DWORD PTR ds:[esi]
  417907:	mov    WORD PTR [edi],?
  417909:	mov    ah,0xf6
  41790b:	jg     0x417989
  41790d:	hlt    
  41790e:	inc    ebx
  41790f:	cs pop ebp
  417911:	push   esi
  417912:	loope  0x4178be
  417914:	cs sahf 
  417916:	sbb    ah,BYTE PTR [ecx-0x22]
  417919:	xchg   ch,al
  41791b:	mov    ah,0xf9
  41791d:	es push cs
  41791f:	ds cs mov bl,0x81
  417923:	arpl   WORD PTR [ebx+eax*2-0x47],cx
  417927:	lock xchg ebx,eax
  417929:	popf   
  41792a:	fadd   st(2),st
  41792c:	rcl    cl,0x3c
  41792f:	(bad)  
  417931:	addr16 dec esp
  417933:	scas   al,BYTE PTR es:[edi]
  417934:	test   DWORD PTR [ebx],esi
  417936:	pop    ds
  417937:	sbb    eax,0xdcf74e5f
  41793c:	push   ds
  41793d:	cwde   
  41793e:	sbb    ah,BYTE PTR [esi+eiz*8+0x58]
  417942:	stc    
  417943:	dec    ebx
  417944:	inc    edi
  417945:	neg    edx
  417947:	in     al,dx
  417948:	inc    ebx
  417949:	push   edi
  41794a:	stc    
  41794b:	xor    dh,BYTE PTR ds:0xb6adca6
  417951:	pop    esp
  417952:	rcr    DWORD PTR ds:0x96a9ba7b,1
  417958:	call   0x49b:0xfd5d9724
  41795f:	dec    esi
  417960:	loopne 0x4178ed
  417962:	mov    esi,0x902eabff
  417967:	mov    cl,0xff
  417969:	or     BYTE PTR [edx-0x36f06874],dh
  41796f:	gs daa 
  417971:	or     dh,BYTE PTR [eax]
  417973:	adc    dl,BYTE PTR [esi]
  417975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417976:	push   0xd02ab1ba
  41797b:	ret    
  41797c:	popa   
  41797d:	add    ah,BYTE PTR [eax-0x38]
  417980:	call   0xae4af34a
  417985:	dec    esi
  417986:	stos   BYTE PTR es:[edi],al
  417987:	inc    ebp
  417988:	inc    eax
  417989:	push   eax
  41798a:	mov    al,0xb8
  41798c:	loope  0x417921
  41798e:	(bad)  [eax+0x77]
  417991:	das    
  417992:	sub    al,0x88
  417994:	pop    ecx
  417995:	jns    0x41791d
  417997:	int    0x78
  417999:	test   BYTE PTR [ebx+ebp*8-0x7e],0xe2
  41799e:	jg     0x4179f0
  4179a0:	imul   ebx,DWORD PTR [esi+0x7e],0xffffff8e
  4179a4:	fcom   QWORD PTR [edx+ebx*8+0x51]
  4179a8:	pop    esp
  4179a9:	inc    edi
  4179aa:	add    DWORD PTR [edx+0x23007385],esi
  4179b0:	lds    edx,FWORD PTR [edx-0x2d2bfb30]
  4179b6:	jle    0x417a2f
  4179b8:	retf   
  4179b9:	clc    
  4179ba:	data16 mov bl,0x87
  4179bd:	cmp    BYTE PTR [esi-0x59506090],ch
  4179c3:	cmp    ebx,esp
  4179c5:	pop    esi
  4179c6:	mov    cl,BYTE PTR [edi+0x169dd40b]
  4179cc:	cmp    BYTE PTR [edx+0x76],cl
  4179cf:	xchg   ebp,eax
  4179d0:	cld    
  4179d1:	mov    edx,0x28ef6645
  4179d6:	aam    0x70
  4179d8:	loop   0x4179e9
  4179da:	push   edi
  4179db:	int    0x25
  4179dd:	imul   ebp,DWORD PTR [esi+0x684b8611],0x382b8dd9
  4179e7:	(bad)  
  4179e8:	aad    0x1a
  4179ea:	xor    al,0x4c
  4179ec:	sub    bl,BYTE PTR [esi+0x0]
  4179ef:	nop
  4179f0:	test   DWORD PTR [ebp-0x13],ebp
  4179f3:	loop   0x4179d9
  4179f5:	je     0x4179c1
  4179f7:	popa   
  4179f8:	mov    BYTE PTR [ebp+esi*8-0x1b9af110],dh
  4179ff:	test   eax,0xf2faa8a4
  417a04:	(bad)  
  417a05:	in     al,dx
  417a06:	mov    edx,0xae0637f6
  417a0b:	push   ecx
  417a0c:	retf   0xacc2
  417a0f:	call   0x159b6449
  417a14:	adc    cl,al
  417a16:	dec    ecx
  417a17:	fidivr DWORD PTR [edx]
  417a19:	adc    ch,bh
  417a1b:	outs   dx,BYTE PTR ds:[si]
  417a1d:	add    bh,BYTE PTR [edx]
  417a1f:	cmp    ch,BYTE PTR [ecx+eiz*1]
  417a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a23:	ret    0x6e05
  417a26:	in     eax,dx
  417a27:	pop    edx
  417a28:	and    edx,DWORD PTR [eax]
  417a2a:	and    ecx,DWORD PTR [ebx-0x2ce7b8b2]
  417a30:	and    DWORD PTR [edx],edi
  417a32:	imul   esi,DWORD PTR [ecx],0x5ae70c0
  417a38:	and    dl,BYTE PTR [edi-0x5f]
  417a3b:	rcr    BYTE PTR [edi],1
  417a3d:	jnp    0x417aa3
  417a3f:	mov    bl,0xcf
  417a41:	xor    esp,DWORD PTR [eax]
  417a43:	ret    
  417a44:	ss je  0x417a63
  417a47:	call   0x7c57:0x67133992
  417a4e:	pusha  
  417a4f:	add    ch,BYTE PTR [ebp+0x63]
  417a52:	dec    esp
  417a53:	out    dx,al
  417a54:	fcmovu st,st(3)
  417a56:	enter  0x6730,0x5d
  417a5a:	addr16 xchg edi,eax
  417a5c:	inc    esp
  417a5d:	rcl    dl,1
  417a5f:	mov    esi,0xd3d8faa6
  417a64:	dec    esi
  417a65:	push   edi
  417a66:	inc    esp
  417a67:	stos   BYTE PTR es:[di],al
  417a69:	cld    
  417a6a:	inc    ebp
  417a6b:	sub    BYTE PTR [ebx-0x61977b64],bh
  417a71:	ret    0x5dc2
  417a74:	jae    0x417ab1
  417a76:	or     esi,esp
  417a78:	rol    DWORD PTR [eax+0x6c],cl
  417a7b:	or     eax,0x212c746d
  417a80:	and    cl,0x85
  417a83:	fisttp QWORD PTR [ecx-0x48d10480]
  417a89:	xchg   ebx,eax
  417a8a:	or     al,0xdb
  417a8c:	aam    0xfb
  417a8e:	sub    edi,DWORD PTR ds:0xba33a4ba
  417a94:	xor    ebp,esp
  417a96:	pop    esp
  417a97:	add    ecx,DWORD PTR ds:0xc33a9c25
  417a9d:	sar    DWORD PTR [ebp+0x37],cl
  417aa0:	jnp    0x417a71
  417aa2:	mov    ecx,0x7fd4b2a7
  417aa7:	call   0xce4ec412
  417aac:	ret    
  417aad:	test   eax,0x519c4233
  417ab2:	mov    DWORD PTR [edi+0xca1267c],0x7eef3ec8
  417abc:	cmp    BYTE PTR [edx+ebx*2-0x57360085],dh
  417ac3:	in     eax,0x91
  417ac5:	ins    DWORD PTR es:[edi],dx
  417ac6:	push   esi
  417ac7:	aam    0x5b
  417ac9:	jg     0x417ac4
  417acb:	ja     0x417a53
  417acd:	outs   dx,DWORD PTR ds:[esi]
  417ace:	push   ebp
  417acf:	mov    ds:0xdde31bf6,al
  417ad4:	inc    esp
  417ad5:	xor    eax,0xc2fc15a
  417ada:	pop    ebp
  417adb:	mov    esp,0x57f335ab
  417ae0:	push   gs
  417ae2:	call   0xbd31:0xa57d837e
  417ae9:	in     al,0x28
  417aeb:	pop    ecx
  417aec:	addr16 push es
  417aee:	(bad)  
  417aef:	idiv   DWORD PTR [esi]
  417af1:	popa   
  417af2:	adc    DWORD PTR [ebp+edx*4-0x723ffc00],eax
  417af9:	(bad)  
  417afa:	out    0x45,al
  417afc:	test   DWORD PTR [ebp+0x3],ecx
  417aff:	pop    ebx
  417b00:	stc    
  417b01:	popf   
  417b02:	inc    eax
  417b03:	cld    
  417b04:	arpl   ax,bx
  417b06:	aam    0x43
  417b08:	out    dx,al
  417b09:	jle    0x417b63
  417b0b:	cli    
  417b0c:	add    eax,0x63127109
  417b11:	fucomip st,st(7)
  417b13:	dec    ebp
  417b15:	sbb    bh,BYTE PTR [ebx]
  417b17:	mov    edi,ebx
  417b19:	mov    al,0x38
  417b1b:	sbb    BYTE PTR [ebx-0x6a],dl
  417b1e:	sbb    dl,dl
  417b20:	xchg   ebp,eax
  417b21:	jmp    0xedb:0x3c91d6c0
  417b28:	jnp    0x417acf
  417b2a:	dec    esi
  417b2b:	mov    bl,0x21
  417b2d:	jmp    0xabb5:0xe2c44203
  417b34:	xchg   ecx,eax
  417b35:	mov    edx,0xb516880a
  417b3a:	dec    edi
  417b3b:	cmp    BYTE PTR [edi+edi*8],bl
  417b3e:	jnp    0x417b1d
  417b40:	mov    ebx,0x3d387c50
  417b45:	jp     0x417b44
  417b47:	jp     0x417b57
  417b49:	xchg   ecx,eax
  417b4a:	xchg   edx,eax
  417b4b:	lea    ecx,[edi+0x5bf96f8c]
  417b51:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b53:	std    
  417b54:	jmp    0xf78b9355
  417b59:	sahf   
  417b5a:	adc    BYTE PTR [edx+0x30],bh
  417b5d:	dec    esi
  417b5e:	sbb    BYTE PTR [ebx+0x37],al
  417b61:	sbb    al,0xdb
  417b63:	mov    ds:0x12788cf8,al
  417b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b69:	call   0x5cf3dda7
  417b6e:	dec    edx
  417b6f:	cmp    al,0x1a
  417b71:	loopne 0x417b89
  417b73:	push   esi
  417b74:	xchg   edx,eax
  417b75:	(bad)  
  417b76:	push   ds
  417b77:	dec    esi
  417b78:	int3   
  417b79:	jecxz  0x417bb8
  417b7b:	pushf  
  417b7c:	cmp    DWORD PTR ds:[edx+0x7a],esp
  417b80:	(bad)  
  417b82:	cmp    eax,DWORD PTR [edx-0x61]
  417b85:	cs es sti 
  417b88:	inc    esp
  417b89:	ret    0x90e3
  417b8c:	imul   eax,DWORD PTR [edx-0x53],0x27b4ec85
  417b93:	xchg   ebx,eax
  417b94:	or     DWORD PTR [ebx],eax
  417b96:	popf   
  417b97:	outs   dx,BYTE PTR ds:[esi]
  417b98:	mov    ecx,0x4379f3a0
  417b9d:	lds    ebp,FWORD PTR [ecx]
  417b9f:	xor    DWORD PTR [ebp+ecx*1-0x422e6083],ebx
  417ba6:	out    dx,eax
  417ba7:	les    esi,FWORD PTR [eax]
  417ba9:	ja     0x417ba2
  417bab:	mov    eax,0x4e971cc2
  417bb0:	sub    BYTE PTR [ecx],bl
  417bb2:	test   BYTE PTR [ecx+0x41],bl
  417bb5:	xor    edx,DWORD PTR ds:0x4d930631
  417bbb:	inc    edx
  417bbc:	mov    bh,0x1e
  417bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bbf:	mov    al,ds:0x5574e0b
  417bc4:	mov    cs,WORD PTR [ebp+0x3d]
  417bc7:	aam    0x76
  417bc9:	push   esp
  417bca:	cs inc eax
  417bcc:	dec    ecx
  417bcd:	xor    al,0xea
  417bcf:	push   ebx
  417bd0:	mov    ebx,0xd4bd8b
  417bd5:	dec    ecx
  417bd6:	cmc    
  417bd7:	pop    ebx
  417bd8:	dec    ebx
  417bd9:	jno    0x417bd6
  417bdb:	iret   
  417bdc:	dec    edi
  417bdd:	inc    ebx
  417bde:	sub    DWORD PTR [esi+esi*8+0x676fbb11],edx
  417be5:	ret    
  417be6:	rcr    BYTE PTR [ecx-0x615f96c9],0x6b
  417bed:	icebp  
  417bee:	add    ecx,DWORD PTR [edi-0x3fcbe32a]
  417bf4:	mov    ah,0x3b
  417bf6:	mov    ecx,DWORD PTR [esi]
  417bf8:	dec    edx
  417bf9:	mov    ecx,0xd56a4e0b
  417bfe:	daa    
  417bff:	sbb    DWORD PTR [edi+0x73],esi
  417c02:	pop    ecx
  417c03:	inc    ebp
  417c04:	inc    edx
  417c05:	pop    edi
  417c06:	jmp    0xd15:0x29c8098c
  417c0d:	mov    dh,0x51
  417c0f:	push   0x665684d8
  417c14:	lds    eax,FWORD PTR [edx+0x7ef1154f]
  417c1a:	fisub  DWORD PTR [edx-0x23]
  417c1d:	inc    ecx
  417c1e:	or     ebx,esp
  417c20:	into   
  417c21:	inc    ebx
  417c22:	pop    ds
  417c23:	cmp    BYTE PTR [eax+0x6b],bl
  417c26:	push   es
  417c27:	mul    esi
  417c29:	push   esp
  417c2a:	mov    dh,0x90
  417c2c:	je     0x417c5a
  417c2e:	xchg   bl,dh
  417c30:	xchg   ecx,eax
  417c31:	retf   
  417c32:	dec    edi
  417c33:	jg     0x417c2b
  417c35:	and    al,0x61
  417c37:	(bad)  
  417c38:	popf   
  417c39:	aaa    
  417c3a:	xchg   BYTE PTR [edx],ch
  417c3c:	and    esi,DWORD PTR [edx+0x3060439d]
  417c42:	adc    BYTE PTR [edx-0xe8426d4],bh
  417c48:	or     al,0x6
  417c4a:	adc    ebp,DWORD PTR [edx-0x364fc4a]
  417c50:	mov    eax,ds:0x8cec6e89
  417c55:	test   ch,bl
  417c57:	outs   dx,DWORD PTR ds:[esi]
  417c58:	cmp    DWORD PTR [esi+0xf],ebx
  417c5b:	pop    esi
  417c5c:	fisttp QWORD PTR [edx-0x50]
  417c5f:	imul   esp,DWORD PTR ds:0x3a40a8b8,0x39
  417c66:	out    0x9f,al
  417c68:	popf   
  417c69:	(bad)
  417c6c:	ret    
  417c6d:	add    BYTE PTR [esi],ah
  417c6f:	xlat   BYTE PTR ds:[ebx]
  417c70:	outs   dx,BYTE PTR ds:[esi]
  417c71:	rcl    DWORD PTR [ebx+0x63],1
  417c74:	(bad)  
  417c75:	mov    edx,0xdb5a789
  417c7a:	mov    esp,0x277d73e3
  417c7f:	jge    0x417ca8
  417c81:	sub    BYTE PTR ds:0x918688ba,dl
  417c87:	(bad)  
  417c88:	jecxz  0x417cb3
  417c8a:	enter  0xd89f,0xaf
  417c8e:	pusha  
  417c8f:	sar    BYTE PTR [ebx],0xb4
  417c92:	pop    ecx
  417c93:	xchg   esi,eax
  417c94:	popa   
  417c95:	lahf   
  417c96:	scas   eax,DWORD PTR es:[edi]
  417c97:	mov    cl,0x25
  417c99:	xchg   edi,eax
  417c9a:	mov    dl,0xab
  417c9c:	cmp    ebx,eax
  417c9e:	mov    edi,0x572d16c9
  417ca3:	mov    al,0x6f
  417ca5:	jns    0x417d24
  417ca7:	adc    DWORD PTR [edx-0x360bb668],edx
  417cad:	add    dl,BYTE PTR [ebx+0x3543f08f]
  417cb3:	inc    ecx
  417cb4:	and    DWORD PTR [eax],esi
  417cb6:	bound  edi,QWORD PTR [ecx]
  417cb8:	dec    ebx
  417cb9:	xlat   BYTE PTR ds:[ebx]
  417cba:	and    BYTE PTR [ecx],0x1b
  417cbd:	es mov edi,0xbd9b03a4
  417cc3:	test   DWORD PTR [edi-0x1b],0x221065e5
  417cca:	addr16 mov ds:0x17bd,al
  417cce:	or     ah,BYTE PTR [edi*2-0x20a813dc]
  417cd5:	dec    ebx
  417cd6:	adc    BYTE PTR [eax+ecx*4],0x20
  417cda:	fld    st(3)
  417cdc:	repz mov eax,0x10c8acb1
  417ce2:	mov    bl,0x67
  417ce4:	mov    edx,0xf30aad49
  417ce9:	dec    ebp
  417cea:	(bad)  
  417ceb:	pop    ds
  417cec:	xchg   DWORD PTR [ecx+0x19],eax
  417cef:	stos   DWORD PTR es:[edi],eax
  417cf0:	add    eax,0x31c1e1d1
  417cf5:	or     al,dh
  417cf7:	inc    ebx
  417cf8:	mov    ds:0xc58210a4,eax
  417cfd:	pop    edx
  417cfe:	and    DWORD PTR [edx],eax
  417d00:	dec    esi
  417d01:	aad    0xe3
  417d03:	jae    0x417c87
  417d05:	retf   
  417d06:	cmp    DWORD PTR [edi+edi*8],ebx
  417d09:	fst    st(6)
  417d0b:	mov    ecx,0x26b28163
  417d10:	cmc    
  417d11:	xchg   edi,eax
  417d12:	retf   
  417d13:	sbb    DWORD PTR [esi+0x32],esi
  417d16:	clc    
  417d17:	jle    0x417ce6
  417d19:	loop   0x417c9c
  417d1b:	pop    esp
  417d1c:	bound  edi,QWORD PTR [esi-0x4f5c63e8]
  417d22:	outs   dx,BYTE PTR ds:[esi]
  417d23:	push   esi
  417d24:	in     al,dx
  417d25:	sub    bl,BYTE PTR [ebx-0x78]
  417d28:	xchg   esi,eax
  417d29:	test   BYTE PTR [ecx],dl
  417d2b:	loope  0x417cba
  417d2d:	(bad)  
  417d2e:	or     eax,0x60ec5005
  417d33:	not    BYTE PTR [ecx+0x55]
  417d36:	add    dh,bh
  417d38:	push   cs
  417d39:	fwait
  417d3a:	scas   al,BYTE PTR es:[edi]
  417d3b:	sahf   
  417d3c:	stc    
  417d3d:	pop    esi
  417d3e:	adc    DWORD PTR [ecx*2+0x19894ed5],esp
  417d45:	push   esi
  417d46:	mov    al,ds:0x76207129
  417d4b:	fwait
  417d4c:	dec    ecx
  417d4d:	scas   al,BYTE PTR es:[edi]
  417d4e:	jns    0x417dc6
  417d50:	cmp    eax,0x898263d1
  417d55:	hlt    
  417d56:	fs jae 0x417d39
  417d59:	(bad)  
  417d5a:	call   0x1c03a0b1
  417d5f:	dec    ebx
  417d60:	jge    0x417d05
  417d62:	sahf   
  417d63:	push   esi
  417d64:	sub    dh,dl
  417d66:	add    ebx,esi
  417d68:	add    eax,0xf2c70915
  417d6d:	jno    0x417dc2
  417d6f:	ja     0x417db2
  417d71:	mov    eax,ds:0x7308aa9a
  417d76:	cmp    ebx,DWORD PTR [ebp-0x27]
  417d79:	push   esi
  417d7a:	test   DWORD PTR [eax-0x37fb476f],eax
  417d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d81:	pushf  
  417d82:	das    
  417d83:	xchg   edx,eax
  417d84:	sahf   
  417d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d86:	fcomp  DWORD PTR [ebp+0x67]
  417d89:	push   ds
  417d8a:	xor    eax,0xd2daca69
  417d8f:	iret   
  417d90:	aad    0xa5
  417d92:	jmp    0x55c4:0x1903e638
  417d99:	(bad)  
  417d9a:	stos   BYTE PTR es:[edi],al
  417d9b:	iret   
  417d9c:	xchg   esi,eax
  417d9d:	xor    eax,0x37410cd2
  417da2:	je     0x417df8
  417da4:	arpl   WORD PTR [ecx+0x6c],ax
  417da7:	jne    0x417d92
  417da9:	cmp    eax,0xa33ad354
  417dae:	clc    
  417daf:	jmp    0x417d62
  417db1:	jecxz  0x417d49
  417db3:	stos   DWORD PTR es:[edi],eax
  417db4:	stos   BYTE PTR es:[edi],al
  417db5:	in     eax,0x43
  417db7:	pop    edx
  417db8:	test   BYTE PTR [edx-0x9],ah
  417dbb:	imul   esp,DWORD PTR [ebx+0x4e],0xcdf065f5
  417dc2:	aaa    
  417dc3:	(bad)  
  417dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dc6:	mov    BYTE PTR [esi-0x2844c229],dl
  417dcc:	iret   
  417dcd:	(bad)  [eax]
  417dcf:	pop    eax
  417dd0:	pop    eax
  417dd1:	push   ds
  417dd2:	ret    
  417dd3:	jge    0x417d90
  417dd5:	mov    bh,BYTE PTR [edx-0x5f]
  417dd8:	cmp    BYTE PTR [ebp+0x4e],ch
  417ddb:	popa   
  417ddc:	or     dh,dh
  417dde:	cmp    al,0x6f
  417de0:	fadd   st(1),st
  417de2:	iret   
  417de3:	ror    esi,0x4f
  417de6:	pop    esp
  417de7:	cmp    ebp,edx
  417de9:	cmp    eax,0x70a146ea
  417dee:	jae    0x417e06
  417df0:	mov    cl,0x26
  417df2:	xor    esi,DWORD PTR [ecx-0x6f]
  417df5:	dec    esp
  417df6:	mov    ecx,0x25517c62
  417dfb:	int    0xdc
  417dfd:	or     bl,al
  417dff:	jb     0x417dc4
  417e01:	mov    ebp,0x717fd522
  417e06:	adc    DWORD PTR [ecx-0x57],esp
  417e09:	push   cs
  417e0a:	pushf  
  417e0b:	icebp  
  417e0c:	imul   edx,DWORD PTR [ebp+0x22],0x39
  417e10:	into   
  417e11:	sbb    eax,0x7a2f14c3
  417e16:	out    0x6e,al
  417e18:	and    edx,ebp
  417e1a:	mov    bh,0x9f
  417e1c:	xchg   edi,eax
  417e1d:	out    0xaa,eax
  417e1f:	mov    gs,WORD PTR [edx+eiz*8+0x7d]
  417e23:	pop    si
  417e25:	out    0x1b,al
  417e27:	push   es
  417e28:	repnz mov BYTE PTR [eax-0x7b],ah
  417e2c:	dec    edi
  417e2d:	jle    0x417e14
  417e2f:	push   esp
  417e30:	rcl    ah,cl
  417e32:	mov    cl,0xde
  417e34:	pop    esp
  417e35:	ins    BYTE PTR es:[edi],dx
  417e36:	push   ds
  417e37:	shr    DWORD PTR cs:[ecx+0x24],0xaf
  417e3c:	ret    
  417e3d:	popa   
  417e3e:	cmp    DWORD PTR [esi-0x18],ebx
  417e41:	shl    BYTE PTR [edx],cl
  417e43:	pop    ds
  417e44:	(bad)
  417e48:	jle    0x417dda
  417e4a:	cmp    BYTE PTR [edi],dl
  417e4c:	xor    eax,DWORD PTR [eax+0x5b1f6319]
  417e52:	out    dx,al
  417e53:	mov    BYTE PTR [ebx+0x24499164],dl
  417e59:	loope  0x417e91
  417e5b:	jo     0x417e78
  417e5d:	pop    esi
  417e5e:	jnp    0x417e47
  417e60:	daa    
  417e61:	aam    0xc0
  417e63:	fsubrp st(7),st
  417e65:	add    ebx,esi
  417e67:	int    0x9a
  417e69:	cld    
  417e6a:	icebp  
  417e6b:	das    
  417e6c:	adc    ebx,esi
  417e6e:	pop    es
  417e6f:	jb     0x417e2b
  417e71:	lea    edi,[ecx]
  417e73:	jb     0x417ea3
  417e75:	ins    DWORD PTR es:[edi],dx
  417e76:	jnp    0x417dff
  417e78:	jno    0x417e95
  417e7a:	or     edi,DWORD PTR [ebx]
  417e7c:	or     bl,dh
  417e7e:	lock (bad) 
  417e82:	lods   al,BYTE PTR ds:[esi]
  417e83:	mov    WORD PTR [ebp-0x1a],ss
  417e86:	sbb    DWORD PTR [ecx],0x2
  417e89:	ret    0x8954
  417e8c:	mov    bh,0x94
  417e8e:	adc    al,0x27
  417e90:	loop   0x417e87
  417e92:	pinsrw mm4,eax,0x5f
  417e96:	or     eax,0xa0f05b8b
  417e9b:	mov    esp,0x71d06bee
  417ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ea1:	pop    esp
  417ea2:	gs mov eax,0x611c09bb
  417ea8:	shr    DWORD PTR [ecx+0x78],1
  417eab:	adc    BYTE PTR [edx-0x58ef8e2b],0xd0
  417eb2:	jge    0x417e3a
  417eb4:	xor    esp,esi
  417eb6:	out    0xab,al
  417eb8:	fcomi  st,st(7)
  417eba:	rol    dh,1
  417ebc:	sub    BYTE PTR [esi+0x336bc279],al
  417ec2:	mov    edx,0x3d16fe87
  417ec7:	xor    BYTE PTR [ecx+0x1b],ch
  417eca:	sahf   
  417ecb:	xchg   ecx,ebp
  417ecd:	cmp    ebp,esp
  417ecf:	adc    edx,DWORD PTR [edx]
  417ed1:	jl     0x417ebc
  417ed3:	sub    BYTE PTR [edi-0x3f],al
  417ed6:	push   edi
  417ed7:	into   
  417ed8:	ror    BYTE PTR ds:0x6e6296dd,0x94
  417edf:	xchg   ecx,eax
  417ee0:	mov    esp,0x711da84b
  417ee5:	add    dh,BYTE PTR [esi+0x4b]
  417ee8:	mov    ebp,0xda9443c2
  417eed:	add    eax,0x14c91711
  417ef2:	jmp    0x37d8aeb3
  417ef7:	mov    al,0x90
  417ef9:	xchg   edi,eax
  417efa:	(bad)  
  417efb:	in     eax,dx
  417efc:	mov    edi,0x3c4bac1a
  417f01:	nop
  417f02:	(bad)  
  417f03:	ss mov esp,0x1583a055
  417f09:	das    
  417f0a:	inc    ecx
  417f0b:	jmp    0xabce:0xf727c491
  417f12:	jnp    0x417f00
  417f14:	inc    ebx
  417f15:	out    dx,al
  417f16:	mov    cs,WORD PTR [edx]
  417f18:	fcmovbe st,st(0)
  417f1a:	fcom   st(7)
  417f1c:	ret    0x10aa
  417f1f:	(bad)  
  417f20:	mov    ds:0x10f0eca7,al
  417f25:	mov    ds:0x1ec72545,al
  417f2a:	mov    eax,0xf148c62a
  417f2f:	gs xchg ebp,eax
  417f31:	out    dx,al
  417f32:	cmp    BYTE PTR [esi],bh
  417f34:	leave  
  417f35:	loopne 0x417f96
  417f37:	pop    ecx
  417f38:	jmp    0xf835a01f
  417f3d:	pop    ds
  417f3e:	aam    0x58
  417f40:	adc    ch,BYTE PTR [edi-0x8]
  417f43:	push   ds
  417f44:	pop    ds
  417f45:	cmp    DWORD PTR [ebp-0x4e],0xffffffe3
  417f49:	mov    esp,0xfa81e9d5
  417f4e:	dec    ecx
  417f4f:	xchg   esi,eax
  417f50:	in     al,dx
  417f51:	lgdtd  [esi]
  417f54:	push   es
  417f55:	pop    ecx
  417f56:	out    dx,eax
  417f57:	(bad)  
  417f58:	test   eax,0x23dc4be4
  417f5d:	loopne 0x417eee
  417f5f:	or     ch,al
  417f61:	mov    BYTE PTR [edx+0x48aa6552],0xff
  417f68:	adc    eax,DWORD PTR [ecx+0x42ba9804]
  417f6e:	das    
  417f6f:	sbb    eax,0x74fab75d
  417f74:	cmp    BYTE PTR [ebp+esi*4-0x47],bh
  417f78:	in     al,dx
  417f79:	sbb    DWORD PTR [edi+0x3d4c7e32],esi
  417f7f:	pop    edx
  417f80:	fsub   QWORD PTR [edi]
  417f82:	(bad)  
  417f83:	push   eax
  417f84:	mov    dl,0x59
  417f86:	push   0xef1485d5
  417f8b:	jbe    0x417f38
  417f8d:	add    BYTE PTR [ebp+0x1a56e9cb],bh
  417f93:	bound  esp,QWORD PTR [edi]
  417f95:	sbb    al,0x70
  417f97:	lahf   
  417f98:	mov    bl,0x2d
  417f9a:	and    bl,ch
  417f9c:	(bad)
  417fa1:	test   DWORD PTR ds:0x8f0edd36,edx
  417fa7:	jmp    0x417fba
  417fa9:	adc    al,0x9
  417fab:	leave  
  417fac:	(bad)
  417fb0:	cmp    ch,BYTE PTR [eax+esi*2]
  417fb3:	cmp    ah,bl
  417fb5:	fsubr  DWORD PTR [eax]
  417fb7:	adc    eax,0xb3bb4633
  417fbc:	jnp    0x417f78
  417fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fbf:	or     eax,0x4c14f40f
  417fc4:	out    dx,al
  417fc5:	fcmove st,st(6)
  417fc7:	fwait
  417fc8:	push   0xffffffe7
  417fca:	int    0xb1
  417fcc:	add    DWORD PTR [esi-0x6a],ebx
  417fcf:	ins    DWORD PTR es:[edi],dx
  417fd0:	xchg   edx,eax
  417fd1:	leave  
  417fd2:	dec    edx
  417fd3:	pop    ebp
  417fd4:	in     eax,0xfa
  417fd6:	add    edx,edx
  417fd8:	pop    edi
  417fd9:	mov    WORD PTR [ebx+edi*1-0x3a40952d],ds
  417fe0:	jmp    0x418008
  417fe2:	mov    ecx,0xb1b9415d
  417fe7:	(bad)  
  417fe8:	in     eax,0x80
  417fea:	fld    DWORD PTR [eax+0x55]
  417fed:	fs pop edi
  417fef:	push   0xffffff93
  417ff1:	int3   
  417ff2:	push   0x73
  417ff4:	shl    BYTE PTR [esi-0x70d3188c],cl
  417ffa:	ss mov esp,0x82dd813f
  418000:	jae    0x417ff7
  418002:	fdivr  DWORD PTR [ebx-0x71]
  418005:	adc    BYTE PTR [edx],bl
  418007:	or     eax,0x383080f5
  41800c:	ret    0x93f2
  41800f:	xchg   edi,eax
  418010:	mov    dh,0xa0
  418012:	out    0xee,eax
  418014:	dec    ecx
  418015:	jmp    0x418021
  418017:	jge    0x418030
  418019:	call   0xd4827218
  41801e:	sbb    al,0xce
  418020:	cmc    
  418021:	sbb    eax,ebx
  418023:	fdivr  QWORD PTR [edx]
  418025:	outs   dx,DWORD PTR ds:[esi]
  418026:	jb     0x418033
  418028:	cmp    cl,BYTE PTR [eax+0x532e00e5]
  41802e:	push   esi
  41802f:	cmp    ebx,DWORD PTR [eax]
  418031:	xchg   DWORD PTR [edi],ebx
  418033:	jg     0x417fdb
  418035:	inc    eax
  418036:	and    BYTE PTR [ebx-0x514e96be],bh
  41803c:	in     al,dx
  41803d:	in     al,dx
  41803e:	mov    ebp,0x3b5a8c08
  418043:	lods   eax,DWORD PTR ds:[esi]
  418044:	xchg   edi,eax
  418045:	sti    
  418046:	push   edx
  418047:	push   0x24
  418049:	in     al,dx
  41804a:	ins    BYTE PTR es:[edi],dx
  41804b:	outs   dx,DWORD PTR ds:[esi]
  41804c:	xor    eax,DWORD PTR [ecx-0x1a]
  41804f:	cdq    
  418050:	jle    0x41803f
  418052:	div    BYTE PTR [edx]
  418054:	cmp    DWORD PTR [edx],edx
  418056:	mov    ds:0x1d4dd1ce,eax
  41805b:	mov    dl,0x90
  41805d:	rcl    ecx,1
  41805f:	add    al,0x7d
  418061:	in     al,0x7f
  418063:	std    
  418064:	stos   BYTE PTR es:[edi],al
  418065:	jmp    0xd665:0xc1e47cd9
  41806c:	les    eax,FWORD PTR [edx+0x3a]
  41806f:	cmp    dl,BYTE PTR [edi]
  418071:	adc    eax,0xc608a879
  418076:	js     0x418056
  418078:	or     BYTE PTR ds:0xad377e85,dh
  41807e:	cdq    
  41807f:	loop   0x4180c7
  418081:	leave  
  418082:	pop    esp
  418083:	js     0x418029
  418085:	nop
  418086:	sbb    al,BYTE PTR [edi+ebx*2+0x68]
  41808a:	test   DWORD PTR [eax+edi*4],0xc7fb73d7
  418091:	sub    al,0xc0
  418093:	jle    0x4180d7
  418095:	je     0x41810d
  418097:	sbb    eax,0xa927ab9
  41809c:	rcr    edi,1
  41809e:	in     al,0xb3
  4180a0:	dec    ebp
  4180a1:	jp     0x418105
  4180a3:	jne    0x41811f
  4180a5:	mov    DWORD PTR [edi+0x4f],ecx
  4180a8:	aas    
  4180a9:	sti    
  4180aa:	ficomp WORD PTR [edx+ebp*1-0x57fef7bd]
  4180b1:	mov    cl,0xd
  4180b3:	loop   0x418086
  4180b5:	mov    bh,0xaf
  4180b7:	adc    eax,0xa6a3e523
  4180bc:	inc    ecx
  4180bd:	push   edi
  4180be:	std    
  4180bf:	loop   0x4180a7
  4180c1:	mov    bh,0x35
  4180c3:	mov    ch,0x2c
  4180c5:	loopne 0x418080
  4180c7:	(bad)  [edx]
  4180c9:	das    
  4180ca:	xchg   esp,eax
  4180cb:	pop    ds
  4180cc:	and    al,0x33
  4180ce:	sbb    dh,BYTE PTR [ebp-0x49]
  4180d1:	mov    ch,0x11
  4180d3:	xor    ebp,DWORD PTR [ebx]
  4180d5:	daa    
  4180d6:	xor    edi,ebx
  4180d8:	ret    0x5209
  4180db:	or     DWORD PTR [esi-0x1c145e3e],ebp
  4180e1:	imul   ebp,DWORD PTR [edi-0x4752a61d],0x8a0a38d5
  4180eb:	dec    esi
  4180ec:	push   cs
  4180ed:	fdivr  st(1),st
  4180ef:	mov    dh,0xa5
  4180f1:	ja     0x418116
  4180f3:	ret    
  4180f4:	add    cl,bh
  4180f6:	sbb    al,0x87
  4180f8:	outs   dx,BYTE PTR ds:[esi]
  4180f9:	push   esp
  4180fa:	lods   eax,DWORD PTR ds:[esi]
  4180fb:	fcom   DWORD PTR [edi+0x45]
  4180fe:	das    
  4180ff:	es in  al,dx
  418101:	sub    eax,edx
  418103:	jg     0x4180fa
  418105:	pushf  
  418106:	rol    BYTE PTR [ebx-0x35c9421],1
  41810c:	adc    dl,BYTE PTR [esi]
  41810e:	ret    0xb65b
  418111:	gs xchg edx,eax
  418113:	pop    edx
  418114:	bound  esp,QWORD PTR [edx+0x26]
  418117:	jecxz  0x41809e
  418119:	add    al,al
  41811b:	imul   esp,DWORD PTR [edx+0x5d5237a8],0x146b8f24
  418125:	add    ch,dh
  418127:	xchg   edx,eax
  418128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418129:	mov    ?,WORD PTR [esi+0x7d]
  41812c:	add    eax,0x7c55c9a6
  418131:	jb     0x418141
  418133:	outs   dx,DWORD PTR ds:[esi]
  418134:	sub    ecx,DWORD PTR [ecx]
  418136:	cld    
  418137:	jns    0x41815e
  418139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41813a:	scas   eax,DWORD PTR es:[edi]
  41813b:	inc    ecx
  41813c:	and    BYTE PTR ds:0x8be10d5c,0x2f
  418143:	rol    ch,cl
  418145:	(bad)  
  418146:	mov    ebx,0xfcdf5aa0
  41814b:	jl     0x41819a
  41814d:	shl    DWORD PTR [edi+ecx*4-0x4f66b920],cl
  418154:	xor    BYTE PTR [edi],0x74
  418157:	add    bl,BYTE PTR [ecx-0x67665a46]
  41815d:	mov    ebp,0x127e7ae
  418162:	inc    cl
  418164:	mov    ch,0x93
  418166:	arpl   WORD PTR [ecx],sp
  418168:	sub    ah,BYTE PTR [edi]
  41816a:	jg     0x418166
  41816c:	jmp    0xccb8:0xe9ce8ca5
  418173:	pop    es
  418174:	sbb    DWORD PTR [ebx+0x75dd3ccc],esp
  41817a:	push   cs
  41817b:	ficomp WORD PTR [esi-0xb7596f3]
  418181:	shl    al,1
  418183:	pop    ebp
  418184:	lock cli 
  418186:	bound  eax,QWORD PTR [eax]
  418188:	ins    DWORD PTR es:[edi],dx
  418189:	repnz int 0x61
  41818c:	pop    es
  41818d:	stos   BYTE PTR es:[edi],al
  41818e:	scas   al,BYTE PTR es:[edi]
  41818f:	mov    edi,0xf0ad5113
  418194:	xor    ah,BYTE PTR [ebx+0x62]
  418197:	(bad)  
  418199:	cld    
  41819a:	bound  ebx,QWORD PTR [eax-0x62caf45d]
  4181a0:	jo     0x418131
  4181a2:	jg     0x418194
  4181a4:	repnz cwde 
  4181a6:	es (bad) 
  4181a8:	mov    ch,0xd
  4181aa:	sub    ebx,DWORD PTR [edi]
  4181ac:	cmp    al,0xd4
  4181ae:	popf   
  4181af:	loopne 0x4181f7
  4181b1:	jl     0x41817d
  4181b3:	jbe    0x4181dc
  4181b5:	sub    bh,BYTE PTR [ebp+0x5e3178e3]
  4181bb:	hlt    
  4181bc:	mov    eax,0x51c2b229
  4181c1:	fist   WORD PTR [ebx+edi*2-0x4d]
  4181c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181c6:	fistp  WORD PTR [edx+0x7785d951]
  4181cc:	pop    esi
  4181cd:	jge    0x4181c5
  4181cf:	fimul  DWORD PTR [edx-0x11]
  4181d2:	pop    edx
  4181d3:	cdq    
  4181d4:	push   ecx
  4181d5:	das    
  4181d6:	imul   ebx,DWORD PTR [edx-0x124d9fd1],0xffffffcf
  4181dd:	arpl   WORD PTR [esi+0x742c841d],sp
  4181e3:	test   al,0xa3
  4181e5:	not    DWORD PTR [ecx]
  4181e7:	or     bl,dh
  4181e9:	xchg   edx,eax
  4181ea:	mov    ecx,0x408b850b
  4181ef:	test   DWORD PTR [eax+ebp*1],edx
  4181f2:	add    DWORD PTR [ebp+0x1],edx
  4181f5:	xchg   esi,eax
  4181f6:	loope  0x41818a
  4181f8:	inc    edi
  4181f9:	add    BYTE PTR [esi-0x66],0x4d
  4181fd:	dec    esi
  4181fe:	adc    al,BYTE PTR [edx+0x5ca9d6ff]
  418204:	(bad)  
  418205:	sti    
  418206:	xor    edi,DWORD PTR [edx]
  418208:	in     eax,dx
  418209:	mov    edi,0xa33a7f8c
  41820e:	in     eax,dx
  41820f:	xchg   DWORD PTR [esi],eax
  418211:	lods   al,BYTE PTR ds:[esi]
  418212:	sar    BYTE PTR [edi],0xf9
  418215:	pusha  
  418216:	aas    
  418217:	xor    ebp,esp
  418219:	imul   edi,DWORD PTR [ebx+0x7a],0xffffffc5
  41821d:	jnp    0x4181fb
  41821f:	inc    edx
  418220:	mov    edx,ebp
  418222:	mov    cl,0x42
  418224:	pop    edx
  418225:	xor    eax,0xac7fb7f5
  41822a:	xlat   BYTE PTR ds:[ebx]
  41822b:	mov    edi,0x3430f94
  418230:	(bad)  
  418231:	(bad)  
  418232:	and    DWORD PTR [esi],0x44ed9eb8
  418238:	imul   ebx,DWORD PTR [edx],0x44
  41823b:	jne    0x418283
  41823d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41823e:	xchg   DWORD PTR [eax],ebp
  418240:	mov    DWORD PTR [esi],eax
  418242:	ins    BYTE PTR es:[edi],dx
  418243:	imul   edi,edi,0x691bb6a2
  418249:	repnz xchg ebp,eax
  41824b:	add    eax,0xe496d3b6
  418250:	icebp  
  418251:	lds    edi,FWORD PTR ss:[esi+0x16401ac8]
  418258:	push   ebp
  418259:	dec    edi
  41825a:	pop    ss
  41825b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41825c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41825d:	addr16 mov ebp,0x8831aacd
  418263:	je     0x418254
  418265:	jmp    0x4182ce
  418267:	sahf   
  418268:	arpl   WORD PTR [ebx],dx
  41826a:	pop    ebx
  41826b:	mov    edi,0xdfe14120
  418270:	xor    DWORD PTR [esi],edi
  418272:	xor    BYTE PTR [ecx-0x56],ch
  418275:	mul    BYTE PTR [ebx]
  418277:	test   eax,0xcdb20d1d
  41827c:	add    DWORD PTR [ecx+0x11],esp
  41827f:	and    dl,ch
  418281:	pop    ebp
  418282:	iret   
  418283:	ins    DWORD PTR es:[edi],dx
  418284:	mov    edx,0xd73513f
  418289:	mov    ds:0xa0df3e1b,eax
  41828e:	xchg   edx,eax
  41828f:	xor    DWORD PTR [ebp-0x1b11bb5d],edx
  418295:	repz pop esi
  418297:	inc    esp
  418298:	(bad)  
  418299:	aaa    
  41829a:	popa   
  41829b:	ins    DWORD PTR es:[edi],dx
  41829c:	push   cs
  41829d:	jns    0x418222
  41829f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a0:	pop    ecx
  4182a1:	sbb    BYTE PTR [ecx],ah
  4182a3:	into   
  4182a4:	daa    
  4182a5:	pop    esp
  4182a6:	(bad)  
  4182a7:	mov    ecx,0xb688c56c
  4182ac:	pop    ds
  4182ad:	scas   eax,DWORD PTR es:[edi]
  4182ae:	in     eax,dx
  4182af:	inc    ebx
  4182b0:	repz retf 0xdbdc
  4182b4:	dec    ebx
  4182b5:	fmulp  st(7),st
  4182b7:	adc    DWORD PTR [ecx-0x56f720d3],eax
  4182bd:	mov    BYTE PTR [edi-0x411a1997],ah
  4182c3:	mov    ds:0xe1805b74,eax
  4182c8:	inc    esp
  4182c9:	mov    DWORD PTR [edi-0x66b6704d],esi
  4182cf:	push   esp
  4182d0:	mov    ebp,0xf60ebcc3
  4182d5:	mov    WORD PTR [ebx],ds
  4182d7:	outs   dx,DWORD PTR ds:[esi]
  4182d8:	push   edx
  4182d9:	adc    bh,BYTE PTR [edi]
  4182db:	inc    ecx
  4182dc:	sbb    BYTE PTR [ebp+0x6a726e59],bl
  4182e2:	sub    ah,dh
  4182e4:	add    DWORD PTR [esi+0x39969c0c],esp
  4182ea:	or     ax,WORD PTR [esi+0x4a6c0f21]
  4182f1:	into   
  4182f2:	sbb    cl,ah
  4182f4:	shl    BYTE PTR [edx-0x62bca820],cl
  4182fa:	inc    eax
  4182fb:	retf   
  4182fc:	xchg   DWORD PTR [edx],eax
  4182fe:	(bad)  
  4182ff:	xchg   edx,eax
  418300:	stos   DWORD PTR es:[edi],eax
  418301:	push   es
  418302:	xor    BYTE PTR [ecx],0xbf
  418305:	push   ebp
  418306:	dec    edi
  418307:	add    eax,0x93d7b2c
  41830c:	dec    eax
  41830d:	and    eax,0x56ddc659
  418312:	jge    0x4182ea
  418314:	sbb    eax,0x9b2d884f
  418319:	xor    al,0xf9
  41831b:	jp     0x418396
  41831d:	dec    esi
  41831e:	popa   
  41831f:	lahf   
  418320:	add    eax,0x80374786
  418325:	mov    ds,ecx
  418327:	mov    bl,0xdd
  418329:	push   ss
  41832a:	push   es
  41832b:	stc    
  41832c:	out    0xf1,eax
  41832e:	jle    0x41832d
  418330:	shl    DWORD PTR [edi],0x1e
  418333:	clc    
  418334:	mov    edx,0xee1f4a5b
  418339:	aas    
  41833a:	ins    DWORD PTR es:[edi],dx
  41833b:	pop    edi
  41833c:	std    
  41833d:	outs   dx,DWORD PTR ds:[esi]
  41833e:	or     eax,0xd3db6157
  418343:	scas   eax,DWORD PTR es:[edi]
  418344:	adc    eax,DWORD PTR [ebp+0x51]
  418347:	jecxz  0x418334
  418349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41834a:	mov    ds:0x87c3217a,al
  41834f:	add    eax,0xf75b41c7
  418354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418355:	inc    ecx
  418356:	enter  0xec20,0xa2
  41835a:	xor    eax,0xbb58dba5
  41835f:	test   BYTE PTR [eax+eiz*4-0x67],ch
  418363:	cdq    
  418364:	sub    edi,DWORD PTR [ebp+0x15fa6bc]
  41836a:	int3   
  41836b:	cmp    al,0xa0
  41836d:	sub    eax,0x39565cb4
  418372:	mov    ds:0xc4c6707c,al
  418377:	sbb    DWORD PTR [ebx+eax*1-0x15],ebx
  41837b:	in     eax,0x82
  41837d:	(bad)  
  41837e:	mov    cl,0x25
  418380:	mov    gs,WORD PTR [edx]
  418382:	sti    
  418383:	test   al,0xd6
  418385:	mov    ds:0x7bdc97eb,al
  41838a:	pop    edi
  41838b:	and    eax,0x73a5a24
  418390:	xchg   BYTE PTR [esp+ebx*8+0x562eb02],al
  418397:	jo     0x4183f8
  418399:	bound  esp,QWORD PTR [esi]
  41839b:	sbb    cl,al
  41839d:	mov    ebp,0x96d9d3e3
  4183a2:	scas   al,BYTE PTR es:[edi]
  4183a3:	xchg   ebp,eax
  4183a4:	jmp    0x4183ef
  4183a6:	fidiv  DWORD PTR [bp+di]
  4183a9:	scas   al,BYTE PTR es:[edi]
  4183aa:	adc    BYTE PTR [eax-0x71],ah
  4183ad:	jge    0x418346
  4183af:	inc    esp
  4183b0:	arpl   WORD PTR [edx-0x63a501d7],bx
  4183b6:	pop    ds
  4183b7:	pop    ebp
  4183b8:	hlt    
  4183b9:	push   cs
  4183ba:	pushw  ss
  4183bc:	enter  0x731d,0x5d
  4183c0:	push   esp
  4183c1:	or     DWORD PTR [eax+0x5a3864de],esp
  4183c7:	inc    ecx
  4183c8:	aad    0x51
  4183ca:	into   
  4183cb:	out    0xd1,al
  4183cd:	pop    eax
  4183ce:	mov    cl,0xf4
  4183d0:	dec    esp
  4183d1:	push   eax
  4183d2:	mov    dl,0xc8
  4183d4:	pop    esp
  4183d5:	sbb    edx,DWORD PTR [edx+0x54c351fd]
  4183db:	fldcw  WORD PTR [esi+0x7f068931]
  4183e1:	ins    BYTE PTR es:[edi],dx
  4183e2:	or     eax,0x23d1bd54
  4183e7:	cmp    ch,al
  4183e9:	iret   
  4183ea:	imul   DWORD PTR [esp+edi*2-0x4a7ee8e7]
  4183f1:	mov    ah,0xdc
  4183f3:	and    eax,0xd30b8c38
  4183f8:	jecxz  0x4183e5
  4183fa:	arpl   WORD PTR [ebx],cx
  4183fc:	out    0x55,al
  4183fe:	sub    ch,BYTE PTR [esi]
  418400:	mov    ebp,0x17ec3b94
  418405:	push   ebp
  418406:	push   ebp
  418407:	test   BYTE PTR [ecx-0x4a],ch
  41840a:	jns    0x418470
  41840c:	xchg   DWORD PTR [esi-0x65],esp
  41840f:	dec    ebx
  418410:	les    edi,FWORD PTR [edi+0x5117eb47]
  418416:	push   eax
  418417:	dec    esi
  418418:	and    ebx,0x42b4d1c7
  41841e:	std    
  41841f:	add    esi,edx
  418421:	and    BYTE PTR [esi],ah
  418423:	sub    BYTE PTR [ecx+0x49],bh
  418426:	fwait
  418427:	mov    cl,0x2
  418429:	ror    ebx,0xe6
  41842c:	call   0xf4293d80
  418431:	shr    BYTE PTR [edi-0x7b016894],cl
  418437:	pop    esi
  418438:	inc    edx
  418439:	fcom   QWORD PTR [edi-0x2a]
  41843c:	xchg   edi,eax
  41843d:	lea    ecx,[ebx+0x4bf0d0e3]
  418443:	(bad)  [ebx-0x37785874]
  418449:	sbb    eax,0x31084a25
  41844e:	(bad)  
  41844f:	mov    ebp,0xea2f0541
  418454:	pop    edi
  418455:	xor    DWORD PTR [esi-0x270ea113],ecx
  41845b:	out    dx,al
  41845c:	repnz xchg esi,eax
  41845e:	sbb    eax,0xdbb94aa6
  418463:	(bad)
  418467:	popa   
  418468:	je     0x4184b6
  41846a:	shr    DWORD PTR [ecx+0x111940b],1
  418470:	adc    eax,0xca43c294
  418475:	jmp    0x4a9110d4
  41847a:	push   es
  41847b:	xchg   edi,eax
  41847c:	ins    BYTE PTR es:[edi],dx
  41847d:	sbb    al,0x72
  41847f:	pop    eax
  418480:	icebp  
  418481:	jno    0x4184ad
  418483:	jle    0x418419
  418485:	shl    BYTE PTR [ecx+0x48],1
  418488:	call   FWORD PTR [eax+edi*8+0x7a3b1733]
  41848f:	call   0x9f8ddd92
  418494:	cmc    
  418495:	pop    ebp
  418496:	push   esp
  418497:	mov    ds:0xffc0b15f,eax
  41849c:	and    eax,0xf16b3e5a
  4184a1:	pop    edx
  4184a2:	outs   dx,DWORD PTR ds:[esi]
  4184a3:	sbb    DWORD PTR [ecx],eax
  4184a5:	xor    ah,dl
  4184a7:	out    0xad,al
  4184a9:	icebp  
  4184aa:	fld    st(1)
  4184ac:	push   es
  4184ad:	pop    edx
  4184ae:	(bad)  
  4184af:	and    ebp,DWORD PTR [esi-0x279a08b6]
  4184b5:	loopne 0x4184ac
  4184b7:	mov    ecx,0x961d0389
  4184bc:	in     eax,0xe3
  4184be:	in     eax,0x81
  4184c0:	ss pop esi
  4184c2:	retf   
  4184c3:	jo     0x4184c9
  4184c5:	jge    0x418506
  4184c7:	fist   DWORD PTR [edi-0x22]
  4184ca:	push   cs
  4184cb:	ss and dh,bh
  4184ce:	retf   0x39e9
  4184d1:	push   esp
  4184d2:	xor    cl,BYTE PTR [ebx+0x71]
  4184d5:	xor    bh,cl
  4184d7:	sub    eax,0x333d1670
  4184dc:	dec    ecx
  4184dd:	test   eax,0xf3506692
  4184e2:	sub    BYTE PTR [eax],al
  4184e4:	out    0xf7,al
  4184e6:	or     al,0x95
  4184e8:	(bad)  
  4184e9:	pusha  
  4184ea:	push   cs
  4184eb:	xor    esp,DWORD PTR [esi+0x8156266]
  4184f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184f2:	adc    ebp,DWORD PTR [ebp+eax*1-0x77]
  4184f6:	sar    DWORD PTR [edi],0xda
  4184f9:	lock out 0x95,eax
  4184fc:	int3   
  4184fd:	out    0x7f,eax
  4184ff:	adc    BYTE PTR [ebp+0x5e],dl
  418502:	inc    ebp
  418503:	push   ds
  418504:	loop   0x418539
  418506:	mov    BYTE PTR [edx-0x61],ah
  418509:	fsub   st(5),st
  41850b:	fiadd  WORD PTR ds:[edi+0x6cb7848b]
  418512:	xchg   edx,eax
  418513:	dec    esi
  418514:	push   0xffffffef
  418516:	aam    0xf7
  418518:	pusha  
  418519:	mov    bl,0x3
  41851b:	push   ss
  41851c:	pop    ebp
  41851d:	stc    
  41851e:	scas   eax,DWORD PTR es:[edi]
  41851f:	mov    ah,BYTE PTR [edx]
  418521:	xchg   esp,eax
  418522:	cmp    DWORD PTR [ebx-0x2d],ecx
  418525:	inc    ebx
  418526:	jle    0x4184ca
  418528:	int    0x39
  41852a:	pushf  
  41852b:	push   eax
  41852c:	fisttp DWORD PTR [ecx]
  41852e:	or     DWORD PTR [ecx],esi
  418530:	inc    edx
  418531:	fiadd  WORD PTR [edx+0x1d]
  418534:	fnstsw WORD PTR [ebx+eiz*2+0x3b92a1bb]
  41853b:	sbb    eax,0x8109f54f
  418540:	fmulp  st(6),st
  418542:	push   eax
  418543:	sub    DWORD PTR [ebx-0x50165475],eax
  418549:	or     dh,BYTE PTR [edx-0x3fb12801]
  41854f:	fnstsw WORD PTR [esi]
  418551:	sub    BYTE PTR [ebx],dl
  418553:	ds cli 
  418555:	or     al,0xa
  418557:	push   ss
  418558:	sub    eax,0x366aec8b
  41855d:	add    ah,BYTE PTR [ecx]
  41855f:	mov    edx,0xbfa107cc
  418564:	cmp    esi,DWORD PTR [ebp+0x5]
  418567:	mov    dl,0x23
  418569:	outs   dx,BYTE PTR ds:[esi]
  41856a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41856b:	cmp    bh,BYTE PTR [ebp+0x5ce139d4]
  418571:	pop    ebp
  418572:	aam    0xd5
  418574:	xchg   ebx,eax
  418575:	sub    al,0x17
  418577:	and    ah,BYTE PTR [ebp+0x3a7ab506]
  41857d:	not    BYTE PTR [ebp+0x18c6f6ae]
  418583:	mov    al,ds:0x55805b8
  418588:	lahf   
  418589:	mov    esp,0xc829d723
  41858e:	pop    edx
  41858f:	push   edx
  418590:	fild   DWORD PTR [ebp-0x2c]
  418593:	xchg   eax,edx
  418595:	mov    ecx,0x9606d6fc
  41859a:	push   ebx
  41859b:	in     al,dx
  41859c:	in     al,0x4d
  41859e:	adc    esp,DWORD PTR ds:0xa3d9d90d
  4185a4:	in     eax,0x6e
  4185a6:	pop    esi
  4185a7:	xchg   ebx,eax
  4185a8:	or     eax,DWORD PTR [eax-0x61a335e9]
  4185ae:	mov    bh,0xde
  4185b0:	push   ds
  4185b1:	hlt    
  4185b2:	(bad)  
  4185b4:	mov    bl,BYTE PTR [esp+ebp*8]
  4185b7:	or     dh,BYTE PTR [ebx+ebx*8+0x3e44557d]
  4185be:	lea    esi,[ebp+ebp*2-0x18497510]
  4185c5:	push   cs
  4185c6:	jo     0x4185f6
  4185c8:	xchg   ebx,eax
  4185c9:	add    esi,DWORD PTR [edx-0x59cbbcfc]
  4185cf:	aaa    
  4185d0:	add    DWORD PTR [ebx-0xbd53b7b],edx
  4185d6:	and    ah,BYTE PTR [eax+0x21]
  4185d9:	ret    0x281f
  4185dc:	mov    ch,0x44
  4185de:	jge    0x418632
  4185e0:	adc    bh,BYTE PTR [ebp+0x7c6411d7]
  4185e6:	xor    al,0x26
  4185e8:	xchg   ebx,eax
  4185e9:	pop    ebp
  4185ea:	clc    
  4185eb:	out    0xeb,eax
  4185ed:	ror    BYTE PTR [ecx+0x0],cl
  4185f0:	jmp    0x41862a
  4185f2:	test   DWORD PTR [eax],0xa2b596b0
  4185f8:	jnp    0x418626
  4185fa:	xor    al,BYTE PTR [eax-0x1e]
  4185fd:	jns    0x4185ca
  4185ff:	add    eax,DWORD PTR [edx]
  418601:	jg     0x418667
  418603:	test   eax,0x43b4bcfd
  418608:	into   
  418609:	test   al,0x17
  41860b:	inc    eax
  41860c:	iret   
  41860d:	ret    
  41860e:	outs   dx,DWORD PTR ds:[esi]
  41860f:	and    ebp,esi
  418611:	rcl    BYTE PTR [ebp-0x40],cl
  418614:	or     edi,DWORD PTR [ebx]
  418616:	test   eax,0x4db6b593
  41861b:	mov    dl,0x5d
  41861d:	mul    BYTE PTR [edi+ebp*8]
  418620:	ss inc edi
  418622:	enter  0xe7a,0x7c
  418626:	(bad)  
  418627:	jo     0x418681
  418629:	int    0x76
  41862b:	loopne 0x418694
  41862d:	pop    eax
  41862e:	test   DWORD PTR ds:0xc2e0bcaf,ecx
  418634:	mov    ebx,0xe1114d8d
  418639:	or     ch,al
  41863b:	shl    ah,cl
  41863d:	mov    bh,0x82
  41863f:	jno    0x4185e7
  418641:	push   0xffffffe7
  418643:	inc    ebx
  418644:	ret    
  418645:	dec    eax
  418646:	pushf  
  418647:	sub    BYTE PTR [edx-0x2f21dc6],al
  41864d:	cmc    
  41864e:	jo     0x41861e
  418650:	test   edi,ebp
  418652:	rcl    DWORD PTR [ecx],0xbf
  418655:	std    
  418656:	and    cl,ch
  418658:	mov    edi,0x67a00e66
  41865d:	mov    DWORD PTR [ebx-0xe],ebp
  418660:	imul   ebp,edi,0xc49d21e9
  418666:	fsubr  QWORD PTR [ebx+ecx*2-0x60]
  41866a:	and    DWORD PTR [esi+0x4],ebp
  41866d:	mov    edx,0x7c36d2d7
  418672:	test   DWORD PTR [ebx+0x27e4d29a],edx
  418678:	inc    ecx
  418679:	xchg   ecx,eax
  41867a:	mov    cl,0x75
  41867c:	orps   xmm7,XMMWORD PTR [ebx+0x1d]
  418680:	xor    bl,dl
  418682:	out    0xb2,eax
  418684:	xor    DWORD PTR [ebp+0x5c1c7a09],0xab542567
  41868e:	stos   DWORD PTR es:[edi],eax
  41868f:	xor    DWORD PTR [esi-0x4e3b3ccb],esp
  418695:	lock sub ebx,esi
  418698:	mov    es,WORD PTR [eax]
  41869a:	mov    eax,0x72ac28b7
  41869f:	aaa    
  4186a0:	add    ebx,edx
  4186a2:	outs   dx,DWORD PTR ds:[esi]
  4186a3:	pop    eax
  4186a4:	sbb    cl,0xac
  4186a7:	pop    edx
  4186a8:	push   esp
  4186a9:	lds    edi,FWORD PTR [edx+0x3]
  4186ac:	xchg   BYTE PTR [edi-0x7f],ch
  4186af:	push   edi
  4186b0:	add    ecx,ebp
  4186b2:	jmp    0x46282e24
  4186b7:	pop    ss
  4186b8:	jmp    0x7ec3:0x4b4a84ff
  4186bf:	fwait
  4186c0:	inc    ebx
  4186c1:	or     ebp,ebp
  4186c3:	sbb    esp,DWORD PTR [esi+eax*8-0x32a4cc20]
  4186ca:	pusha  
  4186cb:	pop    ebp
  4186cc:	inc    ebx
  4186cd:	or     al,0xd4
  4186cf:	shr    BYTE PTR [edi+0x6b902fc8],0xaa
  4186d6:	xor    DWORD PTR [edi],esi
  4186d8:	xchg   DWORD PTR [ebx+0x2c85a959],esi
  4186de:	push   0xb348a023
  4186e3:	ins    DWORD PTR es:[edi],dx
  4186e4:	icebp  
  4186e5:	mov    bl,0x24
  4186e7:	inc    ebx
  4186e8:	push   eax
  4186e9:	adc    bh,dl
  4186eb:	out    dx,al
  4186ec:	pop    ss
  4186ed:	pop    edi
  4186ee:	inc    ebx
  4186ef:	fstp   QWORD PTR [edx]
  4186f1:	outs   dx,BYTE PTR ds:[esi]
  4186f2:	fs push ecx
  4186f4:	fstp   DWORD PTR [edi-0x738a4763]
  4186fa:	ret    
  4186fb:	pop    es
  4186fc:	aaa    
  4186fd:	mov    fs,WORD PTR [edi-0x62]
  418700:	mov    ebx,DWORD PTR [ebp-0xe220210]
  418706:	ret    0x740
  418709:	mov    cl,0xf9
  41870b:	cmp    eax,0xa37a76ea
  418710:	sub    al,BYTE PTR [edi+0x79]
  418713:	mov    al,0x5d
  418715:	test   eax,0xef095f7f
  41871a:	je     0x4186d4
  41871c:	and    BYTE PTR [ebx+esi*8-0x34118c1b],bh
  418723:	and    eax,DWORD PTR [edi-0x7e]
  418726:	inc    esi
  418727:	fcmovu st,st(4)
  418729:	mov    BYTE PTR [edi-0x16],cl
  41872c:	pop    ebx
  41872d:	push   ebx
  41872e:	sbb    BYTE PTR [eax-0x1730119b],al
  418734:	dec    edx
  418735:	jns    0x418765
  418737:	test   al,0x29
  418739:	inc    ecx
  41873a:	pusha  
  41873b:	jnp    0x418751
  41873d:	xor    bh,0x40
  418740:	xor    ecx,DWORD PTR [eax-0x6a]
  418743:	add    eax,0x6e26360e
  418748:	xchg   esi,eax
  418749:	sbb    al,BYTE PTR [edx-0x36d37dae]
  41874f:	push   0x30
  418751:	lock fadd QWORD PTR [esi]
  418754:	pop    es
  418755:	jmp    0xf12b:0xf78103e7
  41875c:	sahf   
  41875d:	test   al,0x4e
  41875f:	mov    ds:0x11386ad0,eax
  418764:	push   ss
  418765:	push   ecx
  418766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418767:	and    BYTE PTR [ecx+0x13],dl
  41876a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41876b:	and    bh,bh
  41876d:	xor    ebx,DWORD PTR [edi+0x56]
  418770:	mov    cl,0xde
  418772:	and    dl,BYTE PTR [eax-0x19]
  418775:	call   DWORD PTR [ecx+0x76a393e8]
  41877b:	xor    al,0x88
  41877d:	mov    ebp,0x4f22000
  418782:	inc    ebp
  418783:	jb     0x41878b
  418785:	fild   DWORD PTR [ebx+ecx*1-0x107d01c8]
  41878c:	add    ch,ah
  41878e:	adc    BYTE PTR [ebx+0x7d],ah
  418791:	and    DWORD PTR [ecx+0x6e],edi
  418794:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  418796:	out    0xba,al
  418798:	jl     0x41880f
  41879a:	jge    0x418812
  41879c:	ror    bh,cl
  41879e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41879f:	int    0x92
  4187a1:	jne    0x41872a
  4187a3:	jb     0x418818
  4187a5:	jbe    0x41872c
  4187a7:	(bad)  
  4187a8:	inc    eax
  4187a9:	test   dl,0xd3
  4187ac:	pusha  
  4187ad:	pop    eax
  4187ae:	jb     0x418750
  4187b0:	push   esp
  4187b1:	adc    ch,dl
  4187b3:	(bad)  
  4187b4:	push   esp
  4187b5:	xchg   esp,eax
  4187b6:	mov    cl,0x71
  4187b8:	gs add eax,0xd7737a84
  4187be:	or     edx,DWORD PTR [esi+0x5ad4df9f]
  4187c4:	mov    WORD PTR [eax+0x5462ed1f],gs
  4187ca:	pop    eax
  4187cb:	lods   eax,DWORD PTR ds:[esi]
  4187cc:	ins    BYTE PTR es:[edi],dx
  4187cd:	test   edx,eax
  4187cf:	les    edi,FWORD PTR [ebx]
  4187d1:	in     al,dx
  4187d2:	or     eax,0xc8c2c0cc
  4187d7:	shl    BYTE PTR [ebx-0x6],0xb0
  4187db:	pop    ecx
  4187dd:	dec    esi
  4187de:	fxch   st(7)
  4187e0:	sub    BYTE PTR gs:[ebp+0x78],dl
  4187e4:	test   al,0xa5
  4187e6:	mov    edx,0x61a390d2
  4187eb:	(bad)  
  4187ec:	fsubr  QWORD PTR [edi]
  4187ee:	add    BYTE PTR [eax-0x7e125767],ah
  4187f4:	(bad)  
  4187f5:	pop    esi
  4187f6:	xchg   esi,eax
  4187f7:	lods   eax,DWORD PTR ds:[esi]
  4187f8:	jl     0x418827
  4187fa:	ds mov bh,0x22
  4187fe:	inc    ebp
  4187ff:	inc    ebx
  418800:	fistp  WORD PTR [eax+0x1ed22025]
  418806:	add    cl,dl
  418808:	add    BYTE PTR [ebp-0x5a],dh
  41880b:	adc    eax,DWORD PTR [ecx-0x275469fb]
  418811:	push   ds
  418812:	sub    BYTE PTR [ebp-0x52],0x37
  418816:	aaa    
  418817:	or     al,BYTE PTR ds:[esi-0x79]
  41881b:	repz ret 0x3f68
  41881f:	mov    bh,0x72
  418821:	lods   al,BYTE PTR ds:[esi]
  418822:	mov    al,ds:0xa676e356
  418827:	xor    al,0xb3
  418829:	aad    0xa4
  41882b:	enter  0x793d,0xd9
  41882f:	fld    DWORD PTR [eax+esi*8]
  418832:	pop    ss
  418833:	int3   
  418834:	dec    esi
  418835:	push   ebp
  418836:	stos   BYTE PTR es:[edi],al
  418837:	adc    eax,0x5a20a96f
  41883c:	pop    esp
  41883d:	or     DWORD PTR [esi],ebp
  41883f:	daa    
  418840:	fs sub al,0xb1
  418843:	adc    BYTE PTR [eax-0x765d37ac],ah
  418849:	sub    BYTE PTR [ecx-0x5518ed79],0xab
  418850:	sar    DWORD PTR [eax+0x34],cl
  418853:	push   0x67
  418855:	push   es
  418856:	adc    DWORD PTR [esi+0x43e96b07],ebx
  41885c:	or     bh,BYTE PTR [esi+ecx*1+0x73]
  418860:	cmp    BYTE PTR [edi+0x1a],al
  418863:	jbe    0x41883c
  418865:	mov    edi,0xe6b01895
  41886a:	cmp    BYTE PTR [ebp+0x78],bl
  41886d:	clc    
  41886e:	test   al,0x9b
  418870:	ror    BYTE PTR [ecx],0x10
  418873:	and    ch,BYTE PTR [eax-0x52645e8f]
  418879:	adc    DWORD PTR [ecx],0xe656475e
  41887f:	es mov bh,0xb
  418882:	cmc    
  418883:	fimul  WORD PTR [edx-0x47]
  418886:	add    cl,dh
  418888:	and    dh,al
  41888a:	inc    edi
  41888b:	adc    DWORD PTR [eax],ecx
  41888d:	cmp    ch,BYTE PTR [ecx]
  41888f:	adc    edx,edx
  418891:	mov    ds:0xb51cc7fa,eax
  418896:	push   esp
  418897:	gs int3 
  418899:	shr    DWORD PTR [ecx-0xf],0x91
  41889d:	dec    eax
  41889e:	push   ebp
  41889f:	jmp    0x9cce6e2
  4188a4:	and    edi,DWORD PTR [ecx-0x48]
  4188a7:	jl     0x41886b
  4188a9:	fidiv  DWORD PTR [edi+0x66]
  4188ac:	mov    dl,0x4b
  4188ae:	imul   eax,esi,0xffffff87
  4188b1:	jnp    0x418907
  4188b3:	sbb    eax,0x4223ae43
  4188b8:	dec    ebp
  4188b9:	xlat   BYTE PTR ds:[ebx]
  4188ba:	jecxz  0x4188fb
  4188bc:	mov    ecx,0x25c85983
  4188c1:	xor    eax,0x85fb5447
  4188c6:	and    ebp,DWORD PTR [edx-0x23b8545d]
  4188cc:	adc    ecx,DWORD PTR [edx]
  4188ce:	mov    al,0x63
  4188d0:	adc    esi,DWORD PTR [eax]
  4188d2:	dec    edx
  4188d3:	ficomp DWORD PTR [edi-0x1c66182a]
  4188d9:	cmp    DWORD PTR [edi+eiz*8],esi
  4188dc:	dec    edx
  4188dd:	sbb    al,0xec
  4188df:	jge    0x418908
  4188e1:	cmp    edi,DWORD PTR [ebx]
  4188e3:	mul    WORD PTR [esi]
  4188e6:	mov    eax,0x464d6eb7
  4188eb:	jp     0x4188b8
  4188ed:	sahf   
  4188ee:	and    eax,0xdc717790
  4188f3:	adc    eax,0x69012e2b
  4188f8:	xlat   BYTE PTR ds:[ebx]
  4188f9:	cli    
  4188fa:	push   0x4c9f0985
  4188ff:	mov    ebx,0xd0e4066d
  418904:	cmp    bh,BYTE PTR [edx-0x3f30b6cb]
  41890a:	pop    ebp
  41890c:	pop    ebp
  41890d:	adc    BYTE PTR [ebx],dl
  41890f:	adc    BYTE PTR [edx+0x4af8bf22],bl
  418915:	test   DWORD PTR [eax-0x5de6f77d],esp
  41891b:	sbb    eax,0x621b3bba
  418920:	out    dx,al
  418921:	ins    DWORD PTR es:[edi],dx
  418922:	jno    0x41895a
  418924:	les    ebp,FWORD PTR [edi+0x79]
  418927:	loopne 0x418935
  418929:	add    edx,DWORD PTR [esi]
  41892b:	mov    ebx,0x93eac33d
  418930:	mov    cl,al
  418932:	leave  
  418933:	cmp    BYTE PTR [edx+0x7997123c],bl
  418939:	push   esp
  41893a:	pop    ss
  41893b:	sub    esp,DWORD PTR [esi+0x318e4a5d]
  418941:	xchg   ebx,eax
  418942:	popf   
  418943:	ds inc esi
  418945:	sar    ch,1
  418947:	jg     0x418901
  418949:	or     DWORD PTR [ebx+0x6e],esi
  41894c:	push   cs
  41894d:	(bad)  
  41894e:	push   esi
  418950:	imul   esp,eax,0xffffff92
  418953:	outs   dx,DWORD PTR ds:[esi]
  418954:	mov    eax,ds:0x6d1bdb91
  418959:	jle    0x4189a7
  41895b:	mov    ds:0x3c0981e,al
  418960:	ret    0x31dd
  418963:	xchg   ecx,ebp
  418965:	cdq    
  418966:	sbb    eax,0xdb4260c6
  41896b:	mov    esi,0x5d641ae6
  418970:	or     DWORD PTR [ebp-0x53ae18e5],esi
  418976:	call   0xad2ec7bf
  41897b:	(bad)  
  41897c:	mov    es,WORD PTR [esi+0x61]
  41897f:	and    BYTE PTR [edi],al
  418981:	retf   
  418982:	xchg   esp,eax
  418983:	inc    ecx
  418984:	repnz xor BYTE PTR [esi],0x1d
  418988:	inc    edx
  418989:	(bad)  
  41898a:	push   0xffffffc8
  41898c:	ss jnp 0x418990
  41898f:	push   ebx
  418990:	or     BYTE PTR ds:0x7e502e70,0x5b
  418997:	cmp    BYTE PTR [ebx],bl
  418999:	push   0xffffffbf
  41899b:	aad    0xf1
  41899d:	std    
  41899e:	stc    
  41899f:	xchg   DWORD PTR [eax-0x72],ebp
  4189a2:	inc    ecx
  4189a3:	sbb    BYTE PTR [ebx+0x60a17933],bh
  4189a9:	jne    0x418935
  4189ab:	mov    ecx,0xa8625d7e
  4189b0:	xchg   esp,eax
  4189b1:	jge    0x4189fc
  4189b3:	cmp    al,0x89
  4189b5:	ret    
  4189b6:	shr    BYTE PTR [edi+0x298a727b],1
  4189bc:	pop    ebp
  4189bd:	push   ebp
  4189be:	mov    al,ds:0x2fd0bfcf
  4189c3:	sub    dh,dh
  4189c5:	mov    ds:0xaf64d673,eax
  4189ca:	test   BYTE PTR [edx],al
  4189cc:	jecxz  0x4189d5
  4189ce:	test   BYTE PTR [eax],dl
  4189d0:	ret    
  4189d1:	jp     0x4189af
  4189d3:	(bad)  
  4189d4:	jle    0x4189c9
  4189d6:	arpl   WORD PTR [ecx+ecx*1+0x57],bx
  4189da:	sar    DWORD PTR [ecx+0x4b],0x58
  4189de:	popa   
  4189df:	adc    cl,BYTE PTR [eax+0x1c2514eb]
  4189e5:	adc    DWORD PTR [eax+0x16e61aed],edi
  4189eb:	fild   WORD PTR [ecx-0xef13293]
  4189f1:	sub    bl,BYTE PTR [edx]
  4189f3:	aaa    
  4189f4:	sub    ecx,0xd8ed2eef
  4189fa:	fistp  WORD PTR fs:[edi]
  4189fd:	mov    eax,0x730327ef
  418a02:	loope  0x4189c8
  418a04:	jl     0x418a85
  418a06:	call   0x9d327664
  418a0b:	xchg   DWORD PTR [eax],esp
  418a0d:	sub    esi,esp
  418a0f:	inc    esp
  418a10:	clc    
  418a11:	dec    esi
  418a12:	iret   
  418a13:	and    bh,BYTE PTR [edi+0x3b492bde]
  418a19:	or     DWORD PTR [ebx-0x61],eax
  418a1c:	icebp  
  418a1d:	arpl   cx,ax
  418a1f:	mov    ecx,DWORD PTR [esi+0x452b8b9d]
  418a25:	adc    DWORD PTR [ebx+0x24cb2f3c],edx
  418a2b:	rcl    bh,1
  418a2d:	jo     0x418a7c
  418a2f:	cmp    ebp,ebp
  418a31:	icebp  
  418a32:	cs shl dl,1
  418a35:	mov    cl,BYTE PTR [edi+0x7ca302fd]
  418a3b:	aaa    
  418a3c:	repz in al,0x65
  418a3f:	fsubrp st(7),st
  418a41:	lock xchg DWORD PTR [esi+0x1],edx
  418a45:	scas   eax,DWORD PTR es:[edi]
  418a46:	xlat   BYTE PTR ds:[ebx]
  418a47:	ins    DWORD PTR es:[edi],dx
  418a48:	mov    dh,0x27
  418a4a:	fs fdivrp st(6),st
  418a4d:	sbb    ebx,DWORD PTR [ebx+0x154b8a99]
  418a53:	hlt    
  418a54:	pop    ebp
  418a55:	add    dl,ah
  418a57:	arpl   si,sp
  418a59:	inc    esi
  418a5a:	add    ecx,ebx
  418a5c:	pop    ss
  418a5d:	or     al,0xf1
  418a5f:	jnp    0x418ab3
  418a61:	inc    edx
  418a62:	cli    
  418a63:	cs jge 0x418abf
  418a66:	shl    BYTE PTR [esi+0x14182cbb],cl
  418a6c:	sub    al,BYTE PTR [ecx-0x71a0cccf]
  418a72:	inc    eax
  418a73:	repnz pop ecx
  418a75:	call   0x41c0:0x72b0eaf
  418a7c:	in     eax,0x2e
  418a7e:	inc    esp
  418a7f:	xor    BYTE PTR [edx-0x45b296f7],al
  418a85:	jmp    0x418aa3
  418a87:	xchg   esp,eax
  418a88:	scas   eax,DWORD PTR es:[edi]
  418a89:	int    0xb3
  418a8b:	shl    BYTE PTR [eax-0x1c7ae8a4],cl
  418a91:	or     cl,0xec
  418a94:	cmp    edi,0xfffffffa
  418a97:	cdq    
  418a98:	add    DWORD PTR [edi-0x7a04cc06],edx
  418a9e:	mov    edx,DWORD PTR [edi-0x7e89dc8a]
  418aa4:	loope  0x418ab5
  418aa6:	dec    esp
  418aa7:	pop    esi
  418aa8:	(bad)  
  418aa9:	out    0x47,al
  418aab:	dec    edi
  418aac:	push   0xffffffb6
  418aae:	mov    esi,ds
  418ab0:	mov    dl,0x33
  418ab2:	xor    bh,BYTE PTR ds:0x3625f4c
  418ab8:	fisttp DWORD PTR ds:0x986c9a3b
  418abe:	call   0xa182:0x12990720
  418ac5:	sbb    al,BYTE PTR [ebx-0x3f30f2f9]
  418acb:	mov    ebp,0x75077cab
  418ad0:	add    esi,eax
  418ad2:	xchg   esi,eax
  418ad3:	loope  0x418aad
  418ad5:	sbb    al,0x4d
  418ad7:	push   edi
  418ad8:	lea    ebp,[esi+0x4b]
  418adb:	mov    esp,0x377f519b
  418ae0:	mov    ds:0x372017a0,al
  418ae5:	and    DWORD PTR [eax+0x37],ebp
  418ae8:	sub    al,0x4b
  418aea:	fsub   DWORD PTR [esp+ecx*4+0x2248ea2c]
  418af1:	xor    dl,BYTE PTR [eax-0x63cc81c2]
  418af7:	mov    ebx,0xb74f5bc9
  418afc:	jecxz  0x418ada
  418afe:	push   esp
  418aff:	rcl    DWORD PTR [eax+0x6a5afd24],1
  418b05:	and    ch,BYTE PTR [edi]
  418b07:	aam    0xf9
  418b09:	loope  0x418b0b
  418b0b:	daa    
  418b0c:	cmp    esi,DWORD PTR [edx+0x1f348d7d]
  418b12:	dec    esp
  418b13:	gs je  0xbd242f86
  418b1a:	inc    eax
  418b1b:	and    al,bh
  418b1d:	jl     0x418b13
  418b1f:	push   esp
  418b20:	pusha  
  418b21:	(bad)  ds:0x494d731f
  418b27:	add    BYTE PTR ds:0x202f1174,bl
  418b2d:	add    ecx,DWORD PTR ds:[eax+0x10]
  418b31:	mov    bh,0x6a
  418b33:	in     al,0xe5
  418b35:	js     0x418b03
  418b37:	into   
  418b38:	push   ecx
  418b39:	sti    
  418b3a:	xchg   bh,bl
  418b3c:	xor    esp,ebx
  418b3e:	ret    0x5dfb
  418b41:	int    0x54
  418b43:	gs scas eax,DWORD PTR es:[edi]
  418b45:	xor    edx,DWORD PTR [edi-0x16]
  418b48:	aaa    
  418b49:	int    0x5b
  418b4b:	outs   dx,DWORD PTR ds:[esi]
  418b4c:	add    ebx,edx
  418b4e:	(bad)  [ecx-0x3aa33b14]
  418b54:	ror    DWORD PTR [edi],1
  418b56:	dec    edi
  418b57:	push   eax
  418b58:	pop    ebx
  418b59:	sbb    BYTE PTR [ebx-0x33],dl
  418b5c:	(bad)  
  418b5d:	pusha  
  418b5e:	lods   eax,DWORD PTR ds:[esi]
  418b5f:	mov    dh,0x9a
  418b61:	pop    esp
  418b62:	and    BYTE PTR [eax-0x3ebd5020],0x1
  418b69:	adc    BYTE PTR [ebx],dh
  418b6b:	aam    0x5
  418b6d:	imul   edi,DWORD PTR [edi+eiz*4-0x71],0x56
  418b72:	add    DWORD PTR [eax],esp
  418b74:	inc    ecx
  418b75:	fwait
  418b76:	xchg   BYTE PTR [eax],bl
  418b78:	pop    esi
  418b79:	call   0x1299:0x2d618277
  418b80:	jmp    0xd487:0x96e03dce
  418b87:	popa   
  418b88:	aaa    
  418b89:	stos   DWORD PTR es:[edi],eax
  418b8a:	pushf  
  418b8b:	repnz dec esp
  418b8d:	push   cs
  418b8e:	lods   eax,DWORD PTR ds:[esi]
  418b8f:	iret   
  418b90:	dec    edx
  418b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b92:	ss stos BYTE PTR es:[edi],al
  418b94:	inc    ebp
  418b95:	mov    ecx,0xf8d70ac2
  418b9a:	or     eax,esi
  418b9c:	pop    ebp
  418b9d:	sub    esp,0x19
  418ba0:	sbb    eax,0x7eb6bbee
  418ba5:	add    ah,BYTE PTR ds:0xcd93e3d9
  418bab:	jp     0x418bf2
  418bad:	add    al,0x7b
  418baf:	mov    ch,0xdc
  418bb1:	cmp    ebp,DWORD PTR ds:0xfeda6878
  418bb7:	jbe    0x418c0a
  418bb9:	sub    bl,bh
  418bbb:	retf   
  418bbc:	jo     0x418c14
  418bbe:	and    DWORD PTR [ebx+0x2d],eax
  418bc1:	ret    0xcce0
  418bc4:	(bad)  [edi+0x23]
  418bc7:	xor    eax,0x6ed44dc3
  418bcc:	cmc    
  418bcd:	shl    BYTE PTR [eax+ebx*8-0x7e],0x2d
  418bd2:	shl    BYTE PTR [esi-0x21],0x7b
  418bd6:	or     BYTE PTR [edx+0x7a0103c6],al
  418bdc:	ins    BYTE PTR es:[edi],dx
  418bdd:	add    al,0x7d
  418bdf:	dec    ebp
  418be0:	adc    eax,0xdad7ed1b
  418be5:	repz pop ebx
  418be7:	push   es
  418be8:	stos   BYTE PTR es:[edi],al
  418be9:	mov    dh,0x8a
  418beb:	ins    BYTE PTR es:[edi],dx
  418bec:	out    0x99,eax
  418bee:	call   0xabcefba2
  418bf3:	in     al,dx
  418bf4:	adc    BYTE PTR [edi],bl
  418bf6:	sbb    edi,DWORD PTR [esi+0x7d]
  418bf9:	jmp    0x4ad6:0x350824a4
  418c00:	lds    ebp,FWORD PTR [ebx-0x7855f9c5]
  418c06:	(bad)  
  418c07:	xor    eax,0xcbb9095b
  418c0c:	pop    ss
  418c0d:	mov    ebx,0x32fb8507
  418c12:	jmp    0x1e4675aa
  418c17:	pop    esi
  418c18:	ror    BYTE PTR [esi-0x1788fe25],cl
  418c1e:	cmp    dl,BYTE PTR [edi+0x2b40e1ad]
  418c24:	lea    esi,[esi-0x6c]
  418c27:	sbb    eax,0xde88bb17
  418c2c:	push   0x21
  418c2e:	xor    ch,BYTE PTR [esi+0x68]
  418c31:	dec    ebx
  418c32:	outs   dx,DWORD PTR ds:[esi]
  418c33:	adc    al,0x7c
  418c35:	mov    ds:0x92d2a675,eax
  418c3a:	add    al,0x1
  418c3c:	xor    al,0xe0
  418c3e:	lods   al,BYTE PTR ds:[esi]
  418c3f:	push   ebp
  418c40:	jp     0x418c64
  418c42:	push   edi
  418c43:	adc    BYTE PTR [edx],dl
  418c45:	stos   DWORD PTR es:[edi],eax
  418c46:	pusha  
  418c47:	jge    0x418c61
  418c49:	sub    bl,bh
  418c4b:	cmp    bh,al
  418c4d:	xor    al,0x17
  418c4f:	xchg   ch,dl
  418c51:	mov    ds:0xb3652384,eax
  418c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c57:	scas   eax,DWORD PTR es:[edi]
  418c58:	xchg   esi,eax
  418c59:	push   edi
  418c5a:	mov    eax,ecx
  418c5c:	int    0x73
  418c5e:	mov    BYTE PTR [eax+0x1f],cl
  418c61:	pop    eax
  418c62:	aam    0x61
  418c64:	leave  
  418c65:	push   edi
  418c66:	fadd   DWORD PTR [ebp-0x32b085]
  418c6c:	rcl    edi,1
  418c6e:	dec    ecx
  418c6f:	es jmp 0x418c3d
  418c72:	dec    eax
  418c73:	out    0x22,eax
  418c75:	imul   ecx,DWORD PTR [eax+eiz*2],0x7f
  418c79:	sbb    eax,0xc795cd11
  418c7e:	popf   
  418c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c80:	xor    al,0x92
  418c82:	retf   0xece7
  418c85:	imul   eax,DWORD PTR [eax-0x416bb42b],0x3f
  418c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c8d:	push   ss
  418c8e:	push   es
  418c8f:	inc    eax
  418c90:	sbb    BYTE PTR [edx+0x629dbecc],al
  418c96:	mov    WORD PTR [esi],gs
  418c98:	jmp    0x85e8:0x10617b95
  418c9f:	(bad)  
  418ca0:	mov    al,fs:0x9bef9ac6
  418ca6:	jmp    0xce1a628d
  418cab:	fdivr  DWORD PTR [ebx]
  418cad:	ja     0x418d1d
  418caf:	ret    
  418cb0:	test   eax,0x16961b0e
  418cb5:	dec    edx
  418cb6:	inc    edx
  418cb7:	mov    dl,0xdc
  418cb9:	xor    bl,al
  418cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cbc:	lds    edx,FWORD PTR [ebx+0xb]
  418cbf:	mov    ebp,0x1ab3caaa
  418cc4:	mov    ecx,0x6d3f8102
  418cc9:	adc    ebp,DWORD PTR [ecx-0x27]
  418ccc:	aad    0x89
  418cce:	fild   QWORD PTR [edx+0x15c58b9e]
  418cd4:	ja     0x418c78
  418cd6:	cmc    
  418cd7:	pushf  
  418cd8:	jo     0x418ca6
  418cda:	int3   
  418cdb:	push   eax
  418cdc:	call   0x679d:0xcf4ef244
  418ce3:	jle    0x418cf5
  418ce5:	inc    esp
  418ce6:	ins    BYTE PTR es:[edi],dx
  418ce7:	pop    ecx
  418ce8:	out    0x8b,eax
  418cea:	mov    dl,0xf
  418cec:	lods   eax,DWORD PTR ds:[esi]
  418ced:	sbb    eax,0x72ab0642
  418cf2:	mov    esi,0x1e5b5a47
  418cf7:	jo     0x418d61
  418cf9:	test   ecx,0x6ce012b9
  418cff:	pop    esi
  418d00:	ins    DWORD PTR es:[edi],dx
  418d01:	xor    al,0x32
  418d03:	js     0x418c86
  418d05:	es inc esi
  418d07:	pop    ebp
  418d08:	popa   
  418d09:	pop    ebp
  418d0a:	cmp    al,0x28
  418d0c:	cs iret 
  418d0e:	cld    
  418d0f:	sub    eax,0xe6967661
  418d14:	fsubr  QWORD PTR [ebp-0x5a]
  418d17:	lds    edi,FWORD PTR [esi-0x50f96179]
  418d1d:	or     eax,0x34301ee8
  418d22:	test   DWORD PTR [ebx-0x74],ecx
  418d25:	test   eax,0xda9dfb94
  418d2a:	imul   esi,DWORD PTR [ebx],0xffffffaf
  418d2d:	aas    
  418d2e:	fidiv  DWORD PTR [edi]
  418d30:	scas   al,BYTE PTR es:[edi]
  418d31:	cld    
  418d32:	mov    al,ds:0xb5a4c217
  418d37:	add    al,0x67
  418d39:	jbe    0x418d5c
  418d3b:	mov    BYTE PTR ds:0x33776c9c,bh
  418d41:	into   
  418d42:	lahf   
  418d43:	popa   
  418d44:	in     eax,dx
  418d45:	std    
  418d46:	int3   
  418d47:	push   ebp
  418d48:	test   eax,0x29e583a
  418d4d:	or     dh,al
  418d4f:	enter  0x7985,0xfd
  418d53:	and    eax,0xe64cccc1
  418d58:	jmp    0x418cfa
  418d5a:	lock mov ds:0xdcd5a05f,al
  418d60:	gs loopne 0x418d10
  418d63:	mov    ah,0xa0
  418d65:	or     eax,0x951c5add
  418d6a:	cmp    esp,esp
  418d6c:	(bad)  
  418d6d:	std    
  418d6e:	lds    ebx,FWORD PTR [edi]
  418d70:	es add bh,cl
  418d73:	fnsave [edi-0x5e]
  418d76:	jl     0x418d4f
  418d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d79:	push   es
  418d7a:	ror    DWORD PTR fs:[ebp+0x23],cl
  418d7e:	lock and ch,BYTE PTR [edi]
  418d81:	dec    ebx
  418d82:	pop    ebp
  418d83:	push   0x31
  418d85:	fldenv [ebx]
  418d87:	test   BYTE PTR [ebx],bl
  418d89:	mov    esi,0x7a4c7bfc
  418d8e:	cmp    DWORD PTR [ebx-0x5ff607c7],ecx
  418d94:	fsub   QWORD PTR [ebp+0x7c]
  418d97:	or     eax,0xc505c9c5
  418d9c:	sar    ecx,1
  418d9e:	mov    ah,0x85
  418da0:	push   ebx
  418da1:	lds    esi,FWORD PTR [ebp+0x5a]
  418da4:	lods   eax,DWORD PTR ds:[esi]
  418da5:	jo     0x418d5e
  418da7:	dec    edx
  418da8:	sub    eax,0xf3519d24
  418dad:	iret   
  418dae:	fldenv [ebx*8-0x180bb26b]
  418db5:	adc    cl,BYTE PTR [edx]
  418db7:	cmp    al,0xf4
  418db9:	sbb    BYTE PTR [ebx-0x48d8b8ba],al
  418dbf:	sahf   
  418dc0:	rcr    DWORD PTR [edi+0x5a43f7a],cl
  418dc6:	jg     0x418d7c
  418dc8:	sub    dh,0x2e
  418dcb:	jnp    0x418d6d
  418dcd:	frstor [ebx+0x76]
  418dd0:	pop    ecx
  418dd1:	(bad)  
  418dd2:	int3   
  418dd3:	adc    eax,0x6abf232f
  418dd8:	mov    dh,0x2d
  418dda:	cmp    BYTE PTR [ebp+0x37],al
  418ddd:	fdivr  DWORD PTR [edi-0x665a0c91]
  418de3:	out    0x95,eax
  418de5:	rol    DWORD PTR [esi-0x4b43e4ae],1
  418deb:	dec    esp
  418dec:	jns    0x418d82
  418dee:	jns    0x418dd4
  418df0:	std    
  418df1:	add    eax,0x6985499
  418df6:	jmp    0x9db5:0xb2f4aa95
  418dfd:	lea    ecx,[bx]
  418e00:	fisubr DWORD PTR [esi+0x61c9cdcc]
  418e06:	inc    ebp
  418e07:	xchg   esi,eax
  418e08:	pop    esp
  418e09:	fdivrp st(4),st
  418e0b:	sbb    esp,edi
  418e0d:	xchg   esi,eax
  418e0e:	xchg   edi,eax
  418e0f:	push   ss
  418e10:	add    dl,0xc1
  418e13:	lock lahf 
  418e15:	outs   dx,DWORD PTR ds:[esi]
  418e16:	fist   WORD PTR [ebx]
  418e18:	or     eax,0xf336d1b6
  418e1d:	dec    edi
  418e1e:	shr    DWORD PTR [ebx-0x5d104f97],cl
  418e24:	jmp    0x418ea3
  418e26:	(bad)  
  418e27:	je     0x418e35
  418e29:	or     BYTE PTR ds:0x81d24b42,cl
  418e2f:	inc    edx
  418e30:	mov    ah,0x30
  418e32:	call   0xc1b1:0x1615700f
  418e39:	sahf   
  418e3a:	pop    ecx
  418e3b:	bound  ebp,QWORD PTR [edx+0x5a0d6a0f]
  418e41:	push   eax
  418e42:	in     eax,dx
  418e43:	push   sp
  418e45:	sbb    eax,0x8fea6086
  418e4a:	push   eax
  418e4b:	rcr    BYTE PTR [ebx-0x13346684],1
  418e51:	xor    al,0x4b
  418e53:	push   edx
  418e54:	test   BYTE PTR [eax-0x2ed22f4f],0xbf
  418e5b:	adc    eax,0x574f586e
  418e60:	fst    QWORD PTR [eax-0x5e]
  418e63:	push   edx
  418e64:	pop    esp
  418e65:	mov    ds:0x9184704d,al
  418e6a:	ret    
  418e6b:	fbstp  TBYTE PTR [esi-0x46]
  418e6e:	mov    esi,0xa4fbcba3
  418e73:	fdivr  DWORD PTR [eax+0xf8a79c6]
  418e79:	sub    eax,0x18d2c0f1
  418e7e:	dec    esi
  418e7f:	ficom  WORD PTR [esi+0x62]
  418e82:	(bad)  
  418e83:	dec    BYTE PTR [edx+0x21]
  418e86:	fnstsw WORD PTR [ecx]
  418e88:	cmc    
  418e89:	cmp    esp,DWORD PTR [ebp+eiz*2+0x73]
  418e8d:	jne    0x418e30
  418e8f:	push   ss
  418e90:	inc    esi
  418e91:	sar    edi,1
  418e93:	mov    ds:0xb027e4d3,al
  418e98:	sbb    edx,DWORD PTR [ebx+0xfd1e913]
  418e9e:	mov    ds:0xc5a55134,al
  418ea3:	fadd   QWORD PTR [esi]
  418ea5:	mov    edx,esi
  418ea7:	cmp    eax,0x48bc0b7e
  418eac:	mov    BYTE PTR [ebx],cl
  418eae:	xchg   edi,eax
  418eaf:	out    0xe5,al
  418eb1:	xchg   eax,esi
  418eb3:	xor    BYTE PTR [eax-0x3a9d45db],dl
  418eb9:	out    0xb2,eax
  418ebb:	mov    ebp,0x6fe17b0f
  418ec0:	pop    ss
  418ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec2:	arpl   WORD PTR [ebx+0x1ba0d78a],ax
  418ec8:	scas   eax,DWORD PTR es:[edi]
  418ec9:	in     eax,dx
  418eca:	add    BYTE PTR [edx+0x1],bl
  418ecd:	(bad)  
  418ece:	and    dh,BYTE PTR ss:[ecx-0x677b3d6f]
  418ed5:	jmp    0xc623055
  418eda:	adc    BYTE PTR [edx+0x3c],bl
  418edd:	xor    eax,0xfc45e2e0
  418ee2:	rol    BYTE PTR [ebx+eax*1+0x1a],1
  418ee6:	mov    ds:0x310cce0a,al
  418eeb:	mov    ebp,0x627d1a54
  418ef0:	add    DWORD PTR [ecx+0x7b],ebp
  418ef3:	dec    edi
  418ef4:	xchg   BYTE PTR [ebp+0x3a7ea15a],dh
  418efa:	sub    al,0x67
  418efc:	jecxz  0x418e90
  418efe:	pusha  
  418eff:	inc    esi
  418f00:	dec    esi
  418f01:	mov    ah,0xe1
  418f03:	shl    BYTE PTR [ecx-0x12c240eb],cl
  418f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f0a:	pop    eax
  418f0b:	scas   eax,DWORD PTR es:[edi]
  418f0c:	scas   al,BYTE PTR es:[edi]
  418f0d:	push   ebx
  418f0e:	push   edi
  418f0f:	repnz push ss
  418f11:	fst    DWORD PTR [edi]
  418f13:	(bad)  
  418f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f15:	dec    ebx
  418f16:	mov    al,ds:0x123e064d
  418f1b:	cmc    
  418f1c:	add    al,0x19
  418f1e:	cmp    BYTE PTR [edi-0x16],dl
  418f21:	int    0x32
  418f23:	dec    ebx
  418f24:	xchg   esi,eax
  418f25:	inc    ebx
  418f26:	push   0x2a
  418f28:	lods   al,BYTE PTR fs:[esi]
  418f2a:	retf   0x310f
  418f2d:	cs es hlt 
  418f30:	xor    eax,DWORD PTR [ebp+0x53]
  418f33:	xchg   ecx,eax
  418f34:	fcomp  QWORD PTR [edx]
  418f36:	xchg   DWORD PTR [ebp-0x74],edx
  418f39:	stos   DWORD PTR es:[edi],eax
  418f3a:	add    eax,0xbbebec76
  418f3f:	dec    BYTE PTR [esi+0x38]
  418f42:	add    BYTE PTR [edi+ecx*8],cl
  418f45:	xchg   ebp,eax
  418f46:	ins    DWORD PTR es:[edi],dx
  418f47:	and    al,0xb
  418f49:	sbb    esi,esp
  418f4b:	mov    edx,0x267befd2
  418f50:	das    
  418f51:	dec    esp
  418f52:	ja     0x418f94
  418f54:	adc    eax,0x9fe08d93
  418f59:	(bad)
  418f5d:	inc    ebx
  418f5e:	sub    eax,0xf7690754
  418f63:	inc    ebx
  418f64:	xchg   esp,eax
  418f65:	fsubr  DWORD PTR ds:0x3da65d7e
  418f6b:	shr    DWORD PTR [eax],1
  418f6d:	lea    eax,[edx+0x3ce1414f]
  418f73:	retf   0xaca0
  418f76:	shr    edx,1
  418f78:	pop    eax
  418f79:	repz cdq 
  418f7b:	and    eax,0xd3858def
  418f80:	(bad)  
  418f81:	std    
  418f82:	ja     0x418f59
  418f84:	les    ebp,FWORD PTR [edx-0x67db996c]
  418f8a:	or     DWORD PTR [edi+0x69],0xce6a953f
  418f91:	cs cmc 
  418f93:	add    al,0xc6
  418f95:	mov    edi,0xe236c961
  418f9a:	aad    0xa5
  418f9c:	icebp  
  418f9d:	je     0x418fc2
  418f9f:	xchg   ecx,eax
  418fa0:	out    0xa1,al
  418fa2:	jns    0x418fc2
  418fa4:	(bad)  
  418fa6:	mov    ecx,es
  418fa8:	mov    ecx,0xd669cd4e
  418fad:	dec    eax
  418fae:	fdiv   QWORD PTR [edi]
  418fb0:	jp     0x418f9b
  418fb2:	and    al,0x96
  418fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fb5:	xchg   esi,eax
  418fb6:	mov    dh,0xa4
  418fb8:	mov    edx,0xb33d78a1
  418fbd:	pop    ebx
  418fbe:	sub    DWORD PTR [eax-0x1772ba84],eax
  418fc4:	popf   
  418fc5:	push   0xb8d837be
  418fca:	outs   dx,DWORD PTR ds:[esi]
  418fcb:	add    eax,0x9439e81f
  418fd0:	xlat   BYTE PTR ds:[ebx]
  418fd1:	pop    edi
  418fd2:	dec    ebp
  418fd3:	push   esp
  418fd4:	pop    eax
  418fd5:	cld    
  418fd6:	cld    
  418fd7:	push   edx
  418fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd9:	cdq    
  418fda:	hlt    
  418fdb:	retf   0x1a46
  418fde:	mov    ds:0x81320af6,eax
  418fe3:	ror    BYTE PTR [ecx+ecx*1-0x20],cl
  418fe7:	add    BYTE PTR ds:0x8ba5255a,bl
  418fed:	and    BYTE PTR [edi],ch
  418fef:	out    0xb3,al
  418ff1:	jg     0x419027
  418ff3:	shl    ecx,0x47
  418ff6:	xor    dl,BYTE PTR [eax]
  418ff8:	jle    0x418fb8
  418ffa:	(bad)  
  418ffb:	sbb    dl,BYTE PTR [ebp+0x29cd1867]
  419001:	mov    WORD PTR ds:0xfee81a4d,es
  419007:	jle    0x419003
  419009:	inc    edi
  41900a:	and    ah,BYTE PTR [ebx]
  41900c:	mov    cl,0xae
  41900e:	(bad)  
  41900f:	clc    
  419010:	adc    DWORD PTR [eax-0xe4965a7],esi
  419016:	iret   
  419017:	or     DWORD PTR [ebp+0xd],esi
  41901a:	pop    esi
  41901b:	mov    dl,0x31
  41901d:	xlat   BYTE PTR ds:[ebx]
  41901e:	ins    DWORD PTR es:[edi],dx
  41901f:	or     al,0x8b
  419022:	ins    DWORD PTR es:[edi],dx
  419023:	add    al,0x8c
  419025:	jp     0x419037
  419027:	in     al,0xe0
  419029:	outs   dx,BYTE PTR ds:[esi]
  41902a:	or     DWORD PTR [ebx+ecx*8+0x686c0b52],edx
  419031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419032:	cli    
  419033:	add    eax,0xdfb7b725
  419038:	shl    BYTE PTR [esi+0x7e512f5c],cl
  41903e:	adc    eax,0x2d4c7bc2
  419043:	out    0x66,al
  419045:	push   ebx
  419046:	jl     0x418fce
  419048:	mov    eax,ds:0x351d7599
  41904d:	pop    edx
  41904e:	dec    esi
  41904f:	sub    al,0xca
  419051:	stos   BYTE PTR es:[edi],al
  419052:	loopne 0x41905b
  419054:	add    ch,dh
  419056:	push   ss
  419057:	jecxz  0x4190b0
  419059:	outs   dx,DWORD PTR ds:[esi]
  41905a:	sbb    dl,al
  41905c:	mov    ecx,0x519aed24
  419061:	sub    BYTE PTR [ebx+0x6b],ch
  419064:	pop    ebp
  419065:	fist   DWORD PTR [ecx]
  419067:	ror    DWORD PTR [ebp+0x75],cl
  41906a:	mov    al,0xd2
  41906c:	(bad)  
  41906d:	sbb    al,0xdc
  41906f:	movlps xmm3,QWORD PTR [ebx+eax*1]
  419073:	sahf   
  419074:	nop
  419075:	add    eax,edi
  419077:	and    al,0x53
  419079:	xor    cl,BYTE PTR [esi-0x77]
  41907c:	xchg   edx,eax
  41907d:	retf   0xd038
  419080:	mov    edx,es
  419082:	ret    0x9eb1
  419085:	sbb    al,0xb2
  419087:	cmp    eax,DWORD PTR [edi-0x71]
  41908a:	push   ebp
  41908b:	sahf   
  41908c:	sbb    edi,DWORD PTR [edi+edi*8+0x1e]
  419090:	scas   al,BYTE PTR es:[edi]
  419091:	jle    0x419106
  419093:	dec    edx
  419094:	xor    eax,0xc85b4536
  419099:	sub    BYTE PTR [eax-0x1b460df0],cl
  41909f:	aad    0xad
  4190a1:	mov    esi,0x9d836739
  4190a6:	(bad)  [edi-0x73e5bd78]
  4190ac:	or     edx,edi
  4190ae:	clc    
  4190af:	leave  
  4190b0:	mov    eax,0x8dd34308
  4190b5:	mov    esp,0x2b1ed118
  4190ba:	jmp    0x4190e6
  4190bc:	mov    al,BYTE PTR [ebp+0x19]
  4190bf:	daa    
  4190c0:	rol    DWORD PTR [edi-0x66],0x87
  4190c4:	pop    ebx
  4190c5:	xor    al,0x63
  4190c7:	jbe    0x419148
  4190c9:	cli    
  4190ca:	jno    0x419140
  4190cc:	iret   
  4190cd:	adc    al,0x38
  4190cf:	push   esp
  4190d0:	data16 jle 0x419098
  4190d3:	rcr    BYTE PTR [eax],0xa2
  4190d6:	xor    esi,DWORD PTR [ecx+ecx*2-0x4b29d508]
  4190dd:	shl    DWORD PTR [esi+0x1884dc6d],0x74
  4190e4:	xor    DWORD PTR [edi-0x5b],esp
  4190e7:	dec    esi
  4190e8:	mov    edi,0x553912f3
  4190ed:	loopne 0x41915d
  4190ef:	daa    
  4190f0:	cvtps2pi mm2,QWORD PTR [ecx+0x18]
  4190f4:	xchg   ebx,eax
  4190f5:	xchg   esp,eax
  4190f6:	inc    eax
  4190f7:	xchg   edx,eax
  4190f8:	xor    DWORD PTR [eax-0xf],esi
  4190fb:	cdq    
  4190fc:	mov    ds:0x3d71916a,eax
  419101:	cwde   
  419102:	ss (bad) 
  419105:	int3   
  419106:	pushf  
  419107:	fsubr  DWORD PTR [esi-0x26e09d49]
  41910d:	mov    ah,0x8c
  41910f:	jns    0x419105
  419111:	fcomp  DWORD PTR [eax-0x35]
  419114:	or     al,0x8c
  419116:	ja     0x419106
  419118:	fild   QWORD PTR [esi]
  41911a:	jo     0x419165
  41911c:	add    al,0x8f
  41911e:	inc    esi
  41911f:	jmp    0x419118
  419121:	push   ebp
  419122:	xor    cl,BYTE PTR [edx-0x5a175a3c]
  419128:	or     eax,0xa1e1813b
  41912d:	mov    edi,0x7ade2b02
  419132:	cmp    BYTE PTR [eax],cl
  419134:	jg     0x419102
  419136:	loop   0x4190ea
  419138:	outs   dx,DWORD PTR ds:[esi]
  419139:	xchg   edi,eax
  41913a:	cwde   
  41913b:	adc    edi,edi
  41913d:	xchg   ecx,eax
  41913e:	xlat   BYTE PTR ds:[ebx]
  41913f:	or     BYTE PTR [eax-0x4faa769d],bh
  419145:	mov    edx,DWORD PTR [ebp+0x8]
  419148:	mov    ebx,DWORD PTR [ebp-0x4c]
  41914b:	add    edx,edi
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx+0x8f7278c]
  419207:	fnstenv [esi]
  419209:	pop    esp
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0xf5
  419213:	push   esi
  419214:	hlt    
  419215:	test   BYTE PTR [ebx+0x11844016],bl
  41921b:	and    al,0xd4
  41921d:	fdivr  QWORD PTR [ecx]
  41921f:	mov    edx,0x6cc2e3c5
  419224:	jecxz  0x4191c7
  419226:	mov    bh,0x81
  419228:	push   ss
  419229:	add    dh,cl
  41922b:	or     DWORD PTR [eax+0x13],0x53
  41922f:	push   ds
  419230:	push   0xd
  419232:	sbb    ebp,DWORD PTR [ebp+0xecf6f6d]
  419238:	sbb    eax,0xdeac4d25
  41923d:	retf   
  41923e:	sbb    eax,0x12ec1b30
  419243:	das    
  419244:	ja     0x419253
  419246:	inc    edx
  419247:	jl     0x4192b6
  419249:	cwde   
  41924a:	je     0x4192bf
  41924c:	push   edi
  41924d:	mov    ecx,0xc20015ac
  419252:	daa    
  419253:	(bad)  
  419254:	in     eax,0xae
  419256:	sub    esi,edi
  419258:	and    al,0xbc
  41925a:	push   ds
  41925b:	push   edi
  41925c:	mov    ah,0x71
  41925e:	inc    ecx
  41925f:	aad    0x31
  419261:	inc    ebx
  419262:	les    esi,FWORD PTR [edi]
  419264:	ffreep st(2)
  419266:	jbe    0x4191f4
  419268:	jmp    0xee15:0x2db1ae8c
  41926f:	mov    ds:0xe9623f9f,eax
  419274:	stos   DWORD PTR es:[edi],eax
  419275:	xor    cl,0x13
  419278:	cwde   
  419279:	test   DWORD PTR [ebx+0x4dee4014],ecx
  41927f:	int3   
  419280:	(bad)  
  419281:	dec    ebp
  419282:	mov    edx,0x585d0c96
  419287:	push   edi
  419288:	cwde   
  419289:	(bad)  
  41928a:	jno    0x4192f4
  41928c:	and    ah,dl
  41928e:	(bad)  
  419290:	lods   al,BYTE PTR ds:[esi]
  419291:	(bad)  
  419293:	bound  esi,QWORD PTR [ecx-0x3959871a]
  419299:	jg     0x419319
  41929b:	aaa    
  41929c:	xchg   ebx,eax
  41929d:	sbb    al,0xbe
  41929f:	test   al,bl
  4192a1:	(bad)  
  4192a2:	sub    al,0xe7
  4192a4:	push   edx
  4192a5:	pushf  
  4192a6:	in     eax,dx
  4192a7:	dec    edi
  4192a8:	gs pop ebp
  4192aa:	or     BYTE PTR ds:0x72165d26,dh
  4192b0:	cwde   
  4192b1:	push   esi
  4192b2:	mov    ds:0xadd54f7,al
  4192b7:	out    0x63,eax
  4192b9:	jle    0x4192fb
  4192bb:	pop    ebx
  4192bc:	rcl    BYTE PTR [edx+0x52],cl
  4192bf:	add    BYTE PTR [ebx],ch
  4192c1:	(bad)  
  4192c3:	jmp    0x8629:0x17bedab1
  4192ca:	dec    eax
  4192cb:	cmp    DWORD PTR [ebp-0x544964b5],ebx
  4192d1:	add    bh,BYTE PTR [edx]
  4192d3:	push   es
  4192d4:	xchg   BYTE PTR [ebx+0x49],dh
  4192d7:	dec    ebx
  4192d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192d9:	out    dx,eax
  4192da:	jp     0x41933c
  4192dc:	out    dx,eax
  4192dd:	int3   
  4192de:	daa    
  4192df:	or     eax,0x4040bf7b
  4192e4:	xchg   esi,eax
  4192e5:	in     al,dx
  4192e6:	sub    esp,DWORD PTR [esi-0x2277a6e4]
  4192ec:	test   al,0xa3
  4192ee:	jp     0x419348
  4192f0:	loopne 0x41936f
  4192f2:	sti    
  4192f3:	je     0x419348
  4192f5:	aam    0xf5
  4192f7:	sbb    bl,BYTE PTR [esi-0x322358b1]
  4192fd:	add    al,0xfd
  4192ff:	or     dh,BYTE PTR [edx+esi*2-0x761f28af]
  419306:	pop    ebp
  419307:	sbb    eax,0x7619d574
  41930c:	xchg   edx,eax
  41930d:	or     BYTE PTR [bp+di+0x25],dl
  419311:	outs   dx,BYTE PTR ds:[esi]
  419312:	or     al,0x87
  419314:	popf   
  419315:	repz push edx
  419317:	jl     0x41931a
  419319:	ss xor al,0x58
  41931c:	ret    0xacda
  41931f:	nop
  419320:	sub    edx,DWORD PTR [ecx+0x4bb9f656]
  419326:	mov    eax,ds:0xb8112c7c
  41932b:	push   ebp
  41932c:	and    dh,BYTE PTR [eax+edi*1-0x3ccf716e]
  419333:	adc    eax,0xff88d329
  419338:	aad    0x94
  41933a:	jmp    0x4192c1
  41933c:	(bad)  
  41933d:	mov    bl,0xcf
  41933f:	inc    edx
  419340:	call   DWORD PTR [ecx]
  419342:	add    al,0xc3
  419344:	mov    ecx,0x5230792
  419349:	push   ss
  41934a:	in     al,0xb5
  41934c:	stos   DWORD PTR es:[edi],eax
  41934d:	test   al,0xe0
  41934f:	or     al,BYTE PTR ds:0x617b6d65
  419355:	xchg   esi,eax
  419356:	sbb    al,0xf5
  419358:	(bad)  
  419359:	icebp  
  41935a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41935b:	add    al,0xb2
  41935d:	pop    es
  41935e:	mov    ah,0xb1
  419360:	pop    ecx
  419361:	push   0x47
  419363:	and    dh,ah
  419365:	and    BYTE PTR [ebp-0x2900f5c0],bh
  41936b:	cmp    ah,BYTE PTR [ecx+0x5c2a9990]
  419371:	loopne 0x4193cf
  419373:	daa    
  419374:	sub    DWORD PTR [edi],edi
  419376:	xchg   ebx,ebx
  419378:	pop    ebx
  419379:	inc    esi
  41937a:	ins    BYTE PTR es:[edi],dx
  41937b:	outs   dx,BYTE PTR ds:[esi]
  41937c:	jns    0x41931a
  41937e:	ret    0xff7a
  419381:	hlt    
  419382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419383:	or     eax,0xd5d44a89
  419388:	sbb    eax,0x573835b5
  41938d:	xchg   ebx,eax
  41938e:	xchg   esi,eax
  41938f:	xchg   DWORD PTR [ebx-0x4d90f7b0],eax
  419395:	das    
  419396:	bound  ebx,QWORD PTR [ebx-0x7f]
  419399:	into   
  41939a:	(bad)  
  41939b:	(bad)  
  41939c:	jmp    0x419357
  41939e:	cmp    DWORD PTR [esi],ebx
  4193a0:	add    DWORD PTR [edx-0x11f3521c],eax
  4193a6:	(bad)  
  4193a7:	(bad)  
  4193a8:	or     dh,BYTE PTR [ecx+edi*2+0x181e7441]
  4193af:	dec    edi
  4193b0:	xchg   ecx,eax
  4193b1:	out    0xf5,eax
  4193b3:	add    al,0x24
  4193b5:	cmc    
  4193b6:	or     BYTE PTR [esp+ebx*2],bh
  4193b9:	mov    ah,0xfd
  4193bb:	aaa    
  4193bc:	outs   dx,DWORD PTR ds:[esi]
  4193bd:	fsub   st,st(6)
  4193bf:	psraw  mm4,QWORD PTR [ebp+ebp*2-0x2]
  4193c4:	js     0x41942b
  4193c6:	in     eax,0x61
  4193c8:	mov    esi,0xa1fbfcca
  4193cd:	test   DWORD PTR [edi-0x6d1e534b],eax
  4193d3:	fsubr  QWORD PTR [ebp+0x1aaaacc8]
  4193d9:	jecxz  0x419365
  4193db:	sbb    eax,0xa4358be1
  4193e0:	xchg   ecx,eax
  4193e1:	push   ebx
  4193e2:	fsubr  DWORD PTR [edi+0x4f79b6ae]
  4193e8:	int    0xf9
  4193ea:	xor    esp,DWORD PTR [eax-0x7d]
  4193ed:	sbb    BYTE PTR [eax-0x51c2a13d],ch
  4193f3:	mov    DWORD PTR [eax],edi
  4193f5:	mov    eax,ds:0x17884666
  4193fa:	fwait
  4193fb:	sbb    DWORD PTR cs:[edx-0x56b4d97e],ecx
  419402:	sbb    eax,0x8055b8bb
  419407:	jg     0x4193ec
  419409:	test   al,0xdc
  41940b:	mov    dl,0x85
  41940d:	mov    dh,0xb8
  41940f:	stos   BYTE PTR es:[edi],al
  419410:	out    dx,eax
  419411:	mov    eax,ds:0xf1088b56
  419416:	pop    esp
  419417:	std    
  419418:	ds jae 0x4193b3
  41941b:	push   ebp
  41941c:	jnp    0x41949d
  41941e:	int    0xf4
  419420:	mov    cl,0x35
  419422:	sub    esp,0x7c
  419425:	mov    dh,0xf3
  419427:	push   eax
  419428:	(bad)  
  419429:	mov    ah,0x59
  41942b:	pop    edx
  41942c:	cld    
  41942d:	adc    ebp,DWORD PTR [ecx+0x1180d1ad]
  419433:	pop    es
  419434:	jmp    0xa77c:0xe479c512
  41943b:	push   cs
  41943c:	or     eax,ecx
  41943e:	add    eax,ebx
  419440:	xor    al,0xde
  419442:	pop    ecx
  419443:	in     eax,0xad
  419445:	push   0xffffffe0
  419447:	ins    BYTE PTR es:[edi],dx
  419448:	das    
  419449:	je     0x419436
  41944b:	jae    0x419446
  41944d:	gs (bad) 
  41944f:	cli    
  419450:	mov    bh,0xa6
  419452:	rcl    BYTE PTR [ebx],0xe0
  419455:	mov    bh,0xab
  419457:	mov    esp,DWORD PTR [esi]
  419459:	imul   ecx,DWORD PTR [edx],0x41d5c6d0
  41945f:	mov    esp,0x6ab5b3ca
  419464:	fisttp QWORD PTR [ecx+0x68]
  419467:	cmc    
  419468:	mov    al,0x2a
  41946a:	and    al,BYTE PTR [edi]
  41946c:	cmc    
  41946d:	pop    esi
  41946e:	inc    edi
  41946f:	lahf   
  419470:	cmp    esi,DWORD PTR [eax]
  419472:	push   0x1a259ded
  419477:	retf   0xd219
  41947a:	call   0xa1fccab9
  41947f:	inc    BYTE PTR [ebx-0x7e]
  419482:	cli    
  419483:	add    DWORD PTR [ebp+0x11],eax
  419486:	out    dx,eax
  419487:	dec    ebp
  419488:	mov    edi,0x5d2212a9
  41948d:	or     edi,ecx
  41948f:	repnz hlt 
  419491:	scas   eax,DWORD PTR es:[edi]
  419492:	ja     0x4194f5
  419494:	or     al,0x8d
  419496:	pop    ds
  419497:	push   ds
  419498:	loopne 0x419465
  41949a:	ret    0xf9e3
  41949d:	mov    ebx,0xdd94daff
  4194a2:	jbe    0x4194f1
  4194a4:	mov    dh,0x14
  4194a6:	mov    al,ds:0x76e43feb
  4194ab:	mov    bh,ah
  4194ad:	sbb    DWORD PTR ds:0xe3c33cc5,ebp
  4194b3:	fadd   QWORD PTR [edi]
  4194b5:	xor    eax,0xcb983282
  4194ba:	int3   
  4194bb:	pop    esi
  4194bc:	lods   al,BYTE PTR ds:[esi]
  4194bd:	test   DWORD PTR [eax+edi*8+0x54],esi
  4194c1:	mov    cl,BYTE PTR [eax+0x11]
  4194c4:	sbb    edi,DWORD PTR [ebx+ebx*1]
  4194c7:	sbb    BYTE PTR [ebx+eax*1+0x9800c42],cl
  4194ce:	xchg   ebp,eax
  4194cf:	xor    DWORD PTR [esi],0x75
  4194d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194d3:	inc    edx
  4194d4:	test   al,0x36
  4194d6:	repz test eax,0x89ece816
  4194dc:	jb     0x41948f
  4194de:	fsubp  st(5),st
  4194e0:	jo     0x419473
  4194e2:	mov    cl,0xe0
  4194e4:	or     eax,0xed0d4553
  4194e9:	inc    eax
  4194ea:	cld    
  4194eb:	cmp    al,0xd9
  4194ed:	mov    ds:0x9a8b0399,al
  4194f2:	in     al,dx
  4194f3:	jl     0x4194f2
  4194f5:	popf   
  4194f6:	pusha  
  4194f7:	ret    
  4194f8:	cmp    ebx,DWORD PTR [edi+ecx*8-0x62]
  4194fc:	and    dh,BYTE PTR [ecx-0x4e5aa323]
  419502:	int    0x7d
  419504:	stos   DWORD PTR es:[edi],eax
  419505:	ds mov bl,0xe3
  419508:	pop    es
  419509:	add    ah,dh
  41950b:	popa   
  41950c:	inc    edx
  41950d:	push   cs
  41950e:	push   cs
  41950f:	stos   DWORD PTR es:[edi],eax
  419510:	and    eax,0x990d01b9
  419515:	(bad)  
  419516:	(bad)  
  419517:	jge    0x4194af
  419519:	mov    ebx,0x75c5c606
  41951e:	retf   
  41951f:	cmc    
  419520:	leave  
  419521:	sbb    BYTE PTR [ebx+0x39a33127],bh
  419527:	and    DWORD PTR [ebx+0x1b53aa29],0xffffffc7
  41952e:	shl    DWORD PTR [ebx+0x20],0x40
  419532:	add    BYTE PTR [esi+0x0],0x48
  419536:	mov    al,ds:0x5763945
  41953b:	adc    BYTE PTR [ebp-0x72f063e4],cl
  419541:	add    DWORD PTR [esi],0x10
  419544:	inc    edx
  419545:	test   al,0x5f
  419547:	jmp    0x708d1922
  41954c:	xchg   ebp,eax
  41954d:	js     0x41956b
  41954f:	push   cs
  419550:	sbb    BYTE PTR [ebx],ah
  419552:	mov    al,ds:0xbe175247
  419557:	ret    0x24a0
  41955a:	int    0x7
  41955c:	or     bh,bh
  41955e:	jge    0x4195b5
  419560:	sbb    edi,ecx
  419562:	pushf  
  419563:	mov    ch,0x9c
  419565:	arpl   WORD PTR [ebx],ax
  419567:	std    
  419568:	cli    
  419569:	int    0x22
  41956b:	pushf  
  41956c:	xchg   edx,eax
  41956d:	enter  0xbf36,0xe5
  419571:	sub    ebp,esi
  419573:	fadd   st,st(1)
  419575:	mov    esp,0x4ed7a672
  41957a:	pop    es
  41957b:	js     0x419505
  41957d:	mov    bl,0xf3
  41957f:	aad    0x9d
  419581:	stc    
  419582:	popf   
  419583:	ds test eax,0x9e2fd264
  419589:	mov    WORD PTR cs:[esi*2-0x453d0a03],ss
  419591:	mov    eax,0x4f0cab63
  419596:	push   esi
  419597:	jmp    0xeb85:0xf1613e43
  41959e:	inc    ecx
  41959f:	mov    esp,0x99ac870e
  4195a4:	mul    ecx
  4195a6:	neg    BYTE PTR [ebp+0x35102ef3]
  4195ac:	xchg   bh,cl
  4195ae:	aaa    
  4195af:	xchg   edx,eax
  4195b0:	dec    ebp
  4195b1:	xor    BYTE PTR [ecx],cl
  4195b3:	adc    dl,cl
  4195b5:	outs   dx,BYTE PTR ds:[esi]
  4195b6:	les    ecx,FWORD PTR [edx]
  4195b8:	(bad)  
  4195b9:	lock shr BYTE PTR [esi-0x75],cl
  4195bd:	out    0x3d,al
  4195bf:	pop    esi
  4195c0:	and    BYTE PTR [ebx+esi*4+0x504837bc],ch
  4195c7:	sbb    DWORD PTR [ebx-0x188a4aa7],ebp
  4195cd:	test   al,0x80
  4195cf:	cs pop ebp
  4195d1:	bound  esp,QWORD PTR [esi]
  4195d3:	push   esi
  4195d4:	cmc    
  4195d5:	xor    DWORD PTR [edx],ebx
  4195d7:	dec    eax
  4195d8:	mov    ebp,0x474954a9
  4195dd:	push   edi
  4195de:	aam    0x41
  4195e0:	dec    edi
  4195e1:	pop    ebx
  4195e2:	or     al,0x98
  4195e4:	arpl   bp,cx
  4195e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195e7:	cdq    
  4195e8:	and    al,0x40
  4195ea:	mov    edi,0x890f2d73
  4195ef:	jecxz  0x419653
  4195f1:	dec    esi
  4195f2:	div    BYTE PTR ds:0x96a033d
  4195f8:	test   al,0xfb
  4195fb:	add    eax,0x8bbbc921
  419600:	sub    al,0xc7
  419602:	push   es
  419603:	aas    
  419604:	scas   eax,DWORD PTR es:[edi]
  419605:	mov    edi,DWORD PTR [edi]
  419607:	pop    ss
  419608:	dec    esp
  419609:	mov    eax,0x8664f47e
  41960e:	sahf   
  41960f:	cmp    dh,ch
  419611:	int3   
  419612:	xchg   edx,eax
  419613:	shr    BYTE PTR ds:0xba51395d,1
  419619:	jmp    DWORD PTR [eax+0x15ecd0fe]
  41961f:	lds    ecx,FWORD PTR ds:0xaf7a6096
  419625:	push   esi
  419626:	and    ecx,DWORD PTR [edi]
  419628:	pop    es
  419629:	lock xchg edx,eax
  41962b:	inc    esi
  41962c:	add    BYTE PTR [edi+eax*2+0x74],0xf5
  419631:	cmp    BYTE PTR [ecx-0x4a],bl
  419634:	mov    esp,0xdfc63ca4
  419639:	mov    ebx,fs
  41963b:	retf   0x6cb4
  41963e:	fadd   st(2),st
  419640:	mov    bp,0x531e
  419644:	das    
  419645:	push   ebx
  419646:	add    al,0x93
  419648:	pop    ss
  419649:	imul   BYTE PTR [eax]
  41964b:	mov    ecx,0x5a035f5b
  419650:	pop    esi
  419651:	xlat   BYTE PTR ds:[ebx]
  419652:	mov    ds:0x344ecfb0,eax
  419657:	hlt    
  419658:	mov    bl,0x68
  41965a:	xchg   ecx,eax
  41965b:	retf   
  41965c:	jg     0x4196a0
  41965e:	dec    BYTE PTR [ecx]
  419660:	cmp    al,BYTE PTR [esi+0x36]
  419663:	add    esi,DWORD PTR [ebx-0x2f]
  419666:	jg     0x41968b
  419668:	scas   eax,DWORD PTR es:[edi]
  419669:	out    0xa5,al
  41966b:	pop    eax
  41966c:	jns    0x419639
  41966e:	fdivr  DWORD PTR [ecx-0x1687f8c1]
  419674:	test   al,0xd2
  419676:	neg    BYTE PTR [ebx+0x65f101c3]
  41967c:	adc    DWORD PTR ds:0x8581ce49,ebp
  419682:	fnstsw WORD PTR [ebp+0x6d]
  419685:	retf   
  419686:	jns    0x4196dc
  419688:	inc    esi
  419689:	push   0x49db2820
  41968e:	pop    ebp
  41968f:	dec    eax
  419690:	mov    ebx,0xe683a0db
  419695:	retf   
  419696:	pop    ds
  419697:	pushf  
  419698:	push   ebp
  419699:	push   ebp
  41969a:	js     0x41961d
  41969c:	ja     0x4196c5
  41969e:	mov    al,ds:0xc7d2f298
  4196a3:	pop    edi
  4196a4:	sbb    ecx,edx
  4196a6:	ror    BYTE PTR [ecx-0x6c6bbfbe],0x61
  4196ad:	sahf   
  4196ae:	cmp    bh,BYTE PTR [eax+0x1]
  4196b1:	scas   al,BYTE PTR es:[edi]
  4196b2:	out    0x1c,eax
  4196b4:	(bad)  
  4196b5:	cmc    
  4196b6:	xor    ah,0x42
  4196b9:	sbb    esi,DWORD PTR [edx+ebx*8]
  4196bc:	adc    al,0x30
  4196be:	aam    0xd9
  4196c0:	(bad)  
  4196c1:	mov    ecx,0xe3787a99
  4196c6:	add    eax,0x8db4009b
  4196cb:	jl     0x4196fb
  4196cd:	stc    
  4196ce:	mov    ds:0x6caa258b,eax
  4196d3:	sbb    ch,BYTE PTR [edx]
  4196d5:	cdq    
  4196d6:	loope  0x419696
  4196d8:	rcr    BYTE PTR [eax+0x21922c3c],0xbc
  4196df:	sub    edi,DWORD PTR [eax+0x14536daa]
  4196e5:	xchg   ebx,eax
  4196e6:	jae    0x41972b
  4196e8:	(bad)  
  4196e9:	(bad)  [edx]
  4196eb:	into   
  4196ec:	(bad)  
  4196ed:	mov    edi,0xaa68b11b
  4196f2:	mov    cl,0x17
  4196f4:	rcl    DWORD PTR [ebx-0x8],0xb5
  4196f8:	ins    DWORD PTR es:[edi],dx
  4196f9:	cmp    BYTE PTR [esp+ebp*1-0x3e],bl
  4196fd:	mov    al,ds:0x403a63dd
  419702:	cmp    eax,0x7ca19e8a
  419707:	or     eax,0xff0fa020
  41970c:	pop    edx
  41970d:	add    al,0x8c
  41970f:	and    BYTE PTR ds:0x2847393b,al
  419715:	and    BYTE PTR [ebp-0x1b87d975],dh
  41971b:	mov    al,ds:0xbc3d1848
  419720:	pop    es
  419721:	(bad)  
  419722:	and    DWORD PTR [edx-0x57],esp
  419725:	test   DWORD PTR [edi-0x6],ebx
  419728:	fs xor al,0x37
  41972b:	(bad)  
  41972c:	jmp    0x419708
  41972e:	and    al,0xdd
  419730:	cmp    DWORD PTR ss:[esi-0x34],ebx
  419734:	and    al,0x64
  419736:	scas   eax,DWORD PTR es:[edi]
  419737:	add    ebp,DWORD PTR [esi]
  419739:	je     0x41978e
  41973b:	sbb    eax,0xe23b2f66
  419740:	xor    eax,0xbc0869af
  419745:	adc    eax,0x21bee635
  41974a:	cs add al,0x47
  41974d:	cs xchg ebp,eax
  41974f:	mov    BYTE PTR [esi+0x42],ch
  419752:	gs pop ss
  419754:	xchg   esp,eax
  419755:	mov    ebp,0x660e32dc
  41975a:	(bad)  
  41975b:	sbb    al,ah
  41975d:	imul   edx,ebp,0x71d46c69
  419763:	sub    al,0xfc
  419765:	fs (bad) fs:[edx+0x118ad8ac]
  41976d:	jmp    0x419723
  41976f:	addr16 dec edi
  419772:	ins    BYTE PTR es:[edi],dx
  419773:	div    DWORD PTR [esi-0x139044ba]
  419779:	xchg   edx,eax
  41977a:	ret    
  41977b:	out    0x8c,al
  41977d:	cmp    BYTE PTR [eax],0x4f
  419780:	jnp    0x419770
  419782:	inc    edi
  419783:	out    dx,al
  419784:	adc    esi,DWORD PTR ds:0x6def0f0d
  41978a:	std    
  41978b:	push   ecx
  41978c:	in     al,0xf6
  41978e:	ret    0xb517
  419791:	and    al,0x92
  419793:	les    esi,FWORD PTR [ebx]
  419795:	cmp    BYTE PTR [edi],0xc0
  419798:	xor    ecx,DWORD PTR ds:0xb834fd7a
  41979e:	push   cs
  41979f:	mov    edx,0xde5655f4
  4197a4:	out    0xfb,al
  4197a6:	mov    DWORD PTR [esi],edi
  4197a8:	mov    ebp,0xc2c80954
  4197ad:	jae    0x4197a3
  4197af:	mov    gs,WORD PTR [ebx+0x374df7b0]
  4197b5:	pop    esp
  4197b6:	or     BYTE PTR [eax+0x28],cl
  4197b9:	aas    
  4197ba:	mov    al,ds:0x9b03b787
  4197bf:	sbb    eax,0xa610ed4a
  4197c4:	fmul   DWORD PTR [edi-0x77a6f1d8]
  4197ca:	ins    BYTE PTR es:[edi],dx
  4197cb:	mov    esp,0x5d1bd02f
  4197d0:	mov    ah,0x93
  4197d2:	push   ss
  4197d3:	in     eax,0xec
  4197d5:	popf   
  4197d6:	dec    esp
  4197d7:	mov    esp,0x573af4d9
  4197dc:	in     al,0x18
  4197de:	(bad)  
  4197df:	mov    ch,0x27
  4197e1:	pop    esi
  4197e2:	pop    ebp
  4197e3:	cmp    BYTE PTR [eax-0x64],bh
  4197e6:	jmp    0x41980d
  4197e8:	jo     0x4197bd
  4197ea:	inc    edi
  4197eb:	xchg   esp,esp
  4197ed:	sahf   
  4197ee:	xor    eax,0xafbbbb38
  4197f3:	test   eax,0x753f8d7
  4197f8:	push   cs
  4197f9:	mov    ds:0xbf63da8b,eax
  4197fe:	push   es
  4197ff:	rcr    BYTE PTR [esi+eax*2+0x6c],0xab
  419804:	sbb    esp,DWORD PTR [ebx+0x28]
  419807:	and    dl,BYTE PTR [ecx+0x3f3c391f]
  41980d:	and    ch,dh
  41980f:	mov    al,0x1d
  419811:	xor    esp,DWORD PTR [edx-0x4b815445]
  419817:	mov    ch,BYTE PTR [edi+0x9]
  41981a:	into   
  41981b:	inc    ecx
  41981c:	imul   esi,DWORD PTR [ecx],0x41
  41981f:	out    0xd4,al
  419821:	(bad)  
  419823:	mov    esi,0xe8f0b8d4
  419828:	ficom  DWORD PTR [edx]
  41982a:	je     0x419820
  41982c:	sti    
  41982d:	int3   
  41982e:	ds iret 
  419830:	mov    eax,0x9bea6ec9
  419835:	xchg   esi,eax
  419836:	or     bh,cl
  419838:	test   BYTE PTR [ecx-0x65ffea86],ch
  41983e:	mov    ecx,0x7e8b75e9
  419843:	adc    edi,DWORD PTR [edi]
  419845:	mov    ecx,DWORD PTR [esi+0x65]
  419848:	ins    DWORD PTR es:[edi],dx
  419849:	enter  0x957f,0xd5
  41984d:	adc    BYTE PTR [eax-0x42],ch
  419850:	dec    esi
  419851:	add    dl,ah
  419853:	test   al,0x3d
  419855:	sbb    eax,0xf009e681
  41985a:	in     eax,0x89
  41985c:	pop    eax
  41985d:	jae    0x4197e9
  41985f:	iret   
  419860:	add    esi,DWORD PTR [esp]
  419863:	test   BYTE PTR [ecx],cl
  419865:	ret    0xba29
  419868:	fsub   st,st(2)
  41986a:	mov    ah,0x53
  41986c:	and    eax,0x73f9569c
  419871:	xor    BYTE PTR [edx+0x7d],cl
  419874:	mov    edx,0x58b23737
  419879:	pop    eax
  41987a:	shl    DWORD PTR [ecx+eiz*2-0x4b33ecc1],cl
  419881:	inc    edi
  419882:	in     eax,0x43
  419884:	mov    edi,DWORD PTR [esi]
  419886:	jnp    0x419879
  419888:	ds pop ebx
  41988a:	xchg   esp,eax
  41988b:	(bad)  
  41988c:	popa   
  41988d:	aad    0xb4
  41988f:	mov    edx,0x8b36a721
  419894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419895:	sbb    edi,ebp
  419897:	mov    bh,bh
  419899:	xor    eax,0x1ae85225
  41989e:	fsubr  QWORD PTR [edx+ebx*1-0x3372ca13]
  4198a5:	cmc    
  4198a6:	out    0x53,eax
  4198a8:	sbb    DWORD PTR [eax-0x529886c],esi
  4198ae:	bound  esp,QWORD PTR [ecx-0x5727fa81]
  4198b4:	or     al,0xfa
  4198b6:	xchg   edi,eax
  4198b7:	jo     0x419854
  4198b9:	pop    eax
  4198bb:	mov    esi,0xfff51f9f
  4198c0:	push   0xc9adbe4f
  4198c5:	push   esp
  4198c6:	add    al,0x60
  4198c8:	xchg   ecx,eax
  4198c9:	retf   
  4198ca:	sbb    al,0x37
  4198cc:	jmp    0x4198d7
  4198ce:	cwde   
  4198cf:	je     0x419869
  4198d1:	push   esi
  4198d2:	arpl   WORD PTR [ebx-0x5610199c],si
  4198d8:	jmp    0x67bc:0x2102c6b3
  4198df:	call   0x7d9e:0xd1b8f6e6
  4198e6:	mov    ebx,esp
  4198e8:	add    BYTE PTR [ebx+esi*8-0x7ef07fa5],0x16
  4198f0:	sbb    al,0x70
  4198f2:	inc    ecx
  4198f3:	push   0xadcd9890
  4198f8:	mul    BYTE PTR [edi-0x5eaf8817]
  4198fe:	cld    
  4198ff:	sub    edi,DWORD PTR [edi+edi*4]
  419902:	les    edi,FWORD PTR [eax-0x79a4a829]
  419908:	or     eax,0xc3bfb1a4
  41990d:	mov    bh,0xa3
  41990f:	jno    0x419955
  419911:	pop    ecx
  419912:	mov    cl,0x62
  419914:	jmp    0x419903
  419916:	fwait
  419917:	loopne 0x4198da
  419919:	fild   DWORD PTR [esi]
  41991b:	call   0x711455c9
  419920:	or     DWORD PTR [ecx],ebp
  419922:	mov    edx,0x1fda9407
  419927:	nop
  419928:	lods   eax,DWORD PTR ds:[esi]
  419929:	push   0x9905a621
  41992e:	xchg   edx,eax
  41992f:	aam    0x62
  419931:	ret    
  419932:	lods   eax,DWORD PTR ds:[esi]
  419933:	imul   ebp,ebp,0xaa926b2c
  419939:	imul   edi,DWORD PTR [edi],0x16
  41993c:	sub    ah,dl
  41993e:	das    
  41993f:	je     0x419922
  419941:	mov    eax,0x9bbd60bd
  419946:	outs   dx,DWORD PTR ds:[esi]
  419947:	sub    BYTE PTR [eax+0x2359f065],al
  41994d:	popf   
  41994e:	lock cmp BYTE PTR [esi-0x69],dl
  419952:	push   cs
  419953:	mov    esp,0xb0b9142b
  419958:	test   DWORD PTR [esi+0x7c08e10a],edi
  41995e:	enter  0x6eb9,0xa0
  419962:	add    BYTE PTR [ebx+0x26],dl
  419965:	push   eax
  419966:	arpl   WORD PTR [esp+edx*2+0x53],si
  41996a:	test   al,0x28
  41996c:	or     BYTE PTR [eax+0x6e],ch
  41996f:	out    dx,al
  419970:	jp     0x419932
  419972:	xor    eax,0xb1eadc57
  419977:	add    BYTE PTR [edx],bl
  419979:	out    dx,al
  41997a:	jns    0x4199e2
  41997c:	push   cs
  41997d:	dec    eax
  41997e:	pop    ss
  41997f:	daa    
  419980:	jmp    0x9f3c0d6b
  419985:	out    0xd6,al
  419987:	lods   eax,DWORD PTR ds:[esi]
  419988:	aaa    
  419989:	icebp  
  41998a:	jae    0x419a09
  41998c:	sub    esi,DWORD PTR [ebp+0x1f500bc9]
  419992:	or     BYTE PTR [eax+0x17],dh
  419995:	mov    ch,0x5b
  419997:	shl    BYTE PTR [esi-0x4022a1aa],0x44
  41999e:	push   ds
  41999f:	dec    edx
  4199a0:	std    
  4199a1:	sub    edx,DWORD PTR [esi+0x13]
  4199a4:	lahf   
  4199a5:	jmp    0x13ea9ee7
  4199aa:	jecxz  0x419957
  4199ac:	mov    ebx,0x8e067ed1
  4199b1:	mov    cl,0x4f
  4199b3:	add    DWORD PTR ds:0xaef8e9a1,edi
  4199b9:	pop    eax
  4199ba:	test   BYTE PTR [edx],bl
  4199bc:	xchg   ebp,eax
  4199bd:	dec    esi
  4199be:	lock ja 0x419a33
  4199c1:	shl    DWORD PTR [ecx-0x64],1
  4199c4:	push   edx
  4199c5:	inc    edi
  4199c6:	pop    es
  4199c7:	xchg   ecx,eax
  4199c8:	cli    
  4199c9:	dec    edi
  4199ca:	lods   al,BYTE PTR ds:[esi]
  4199cb:	jl     0x4199f9
  4199cd:	pop    ss
  4199ce:	sub    al,0x45
  4199d0:	xchg   WORD PTR [eax-0x76],di
  4199d4:	into   
  4199d5:	jbe    0x419976
  4199d7:	dec    esp
  4199d8:	add    ebp,esi
  4199da:	push   ds
  4199db:	mov    eax,0x6c5f2d5d
  4199e0:	imul   edx,ecx,0x6e6ac7f
  4199e6:	call   0x1c81:0x253df568
  4199ed:	jbe    0x419a18
  4199ef:	mov    dl,0xc6
  4199f1:	inc    ecx
  4199f2:	cmp    bl,BYTE PTR [ecx+ecx*1-0x2782d5ac]
  4199f9:	dec    ebp
  4199fa:	fidiv  WORD PTR [ebp+0x62814879]
  419a00:	shl    DWORD PTR ds:0x12bb1eb4,0x58
  419a07:	mov    eax,ds:0x62f3bece
  419a0c:	cld    
  419a0d:	jbe    0x419a8a
  419a0f:	pop    es
  419a10:	in     al,dx
  419a11:	mov    dh,0x3e
  419a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a14:	push   edi
  419a15:	xor    esi,0x18845848
  419a1b:	fs push ds
  419a1d:	or     al,0x45
  419a1f:	sbb    eax,0x456f88a8
  419a24:	pop    ss
  419a25:	(bad)  
  419a26:	adc    DWORD PTR [edx+0x53f76321],ebp
  419a2c:	fiadd  DWORD PTR [edi+0x61]
  419a2f:	leave  
  419a30:	push   cs
  419a31:	mov    esi,0xdce3f42f
  419a36:	inc    ebx
  419a37:	inc    esi
  419a38:	out    0x5c,eax
  419a3a:	test   eax,0x81d3603c
  419a3f:	mov    esi,0xcf9de1e9
  419a44:	pop    eax
  419a45:	push   ebx
  419a46:	ror    edx,1
  419a48:	dec    edi
  419a49:	cmp    ah,BYTE PTR [ebp-0x5a]
  419a4c:	lds    edx,FWORD PTR [edx+0x21]
  419a4f:	fidivr WORD PTR [ecx+esi*4-0x555283ce]
  419a56:	imul   ebx,ebx,0x233bfed
  419a5c:	inc    esp
  419a5d:	add    dl,cl
  419a5f:	mov    al,0x55
  419a62:	lods   al,BYTE PTR ds:[esi]
  419a63:	jmp    0xd631672e
  419a68:	sub    DWORD PTR [esi],esi
  419a6a:	(bad)  
  419a6b:	js     0x419a5e
  419a6d:	mov    ah,BYTE PTR [ecx]
  419a6f:	sub    al,0x6b
  419a71:	pop    es
  419a72:	imul   ecx,DWORD PTR [ebp+0x18],0x7023528f
  419a79:	shr    BYTE PTR [ebx+0x7abbbe7b],0xb2
  419a80:	sar    BYTE PTR [edx-0x1e],0x5
  419a84:	cmp    BYTE PTR [edi-0x3a],ch
  419a87:	out    dx,eax
  419a88:	mov    ebx,esp
  419a8a:	loop   0x419a9f
  419a8c:	xor    eax,0x21bade3
  419a91:	fwait
  419a92:	and    al,0xd1
  419a94:	mov    ch,0x75
  419a96:	jp     0x419aac
  419a98:	test   BYTE PTR [edx],al
  419a9a:	xor    BYTE PTR [ecx+0x7d],dh
  419a9d:	ret    
  419a9e:	dec    ecx
  419a9f:	adc    al,0x55
  419aa1:	xor    DWORD PTR [edx-0x29c185f3],ebp
  419aa7:	gs mov al,ss:0x979e7ca7
  419aae:	cmp    ebx,ecx
  419ab0:	(bad)  
  419ab1:	pop    ds
  419ab2:	rcr    BYTE PTR [ecx],cl
  419ab4:	and    edi,DWORD PTR [eax]
  419ab6:	inc    ecx
  419ab7:	fwait
  419ab8:	ins    BYTE PTR es:[edi],dx
  419ab9:	add    al,0x1d
  419abb:	in     al,0x72
  419abd:	(bad)  
  419abe:	or     eax,0xd3e389b0
  419ac3:	mov    eax,0xe99185c5
  419ac8:	les    ecx,FWORD PTR [ecx-0x63abb96c]
  419ace:	sub    DWORD PTR [esi-0x581bce5f],edx
  419ad4:	inc    esi
  419ad5:	jmp    0xc894:0x2eb158d2
  419adc:	ins    DWORD PTR es:[edi],dx
  419add:	dec    ebp
  419ade:	jmp    0x419a95
  419ae0:	ja     0x419b45
  419ae2:	shr    DWORD PTR [ebp+esi*1+0x5c],1
  419ae6:	les    ebx,FWORD PTR [ebx-0x78b0eb39]
  419aec:	and    bh,BYTE PTR [eax]
  419aee:	pop    ds
  419aef:	cmc    
  419af0:	xchg   ecx,eax
  419af1:	dec    esi
  419af2:	adc    eax,0xbfee5f23
  419af7:	mov    ch,0x97
  419af9:	mov    ah,dh
  419afb:	push   eax
  419afc:	xor    al,0x66
  419afe:	repz in eax,0x61
  419b01:	adc    edx,ecx
  419b03:	retw   
  419b05:	std    
  419b06:	test   al,0x6d
  419b08:	jae    0x419b46
  419b0a:	gs inc ebx
  419b0c:	push   edi
  419b0d:	inc    edi
  419b0e:	into   
  419b0f:	pop    edx
  419b10:	xor    dl,BYTE PTR [esi+0x1d44abca]
  419b16:	aas    
  419b17:	leave  
  419b18:	jge    0x419ac9
  419b1a:	push   ds
  419b1b:	push   ebp
  419b1c:	sub    DWORD PTR [eax],ebp
  419b1e:	sub    DWORD PTR [eax+0x2a],edi
  419b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b22:	or     BYTE PTR [ebx+edx*4-0x77b1dec4],bh
  419b29:	sahf   
  419b2a:	dec    ecx
  419b2b:	adc    BYTE PTR [edx],bh
  419b2d:	jnp    0x419b2d
  419b2f:	sti    
  419b30:	mov    es,esp
  419b32:	jmp    0x322bd1f8
  419b37:	loopne 0x419bb8
  419b39:	ja     0x419b9e
  419b3b:	pop    eax
  419b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b3d:	enter  0x370c,0xff
  419b41:	jg     0x419b0f
  419b43:	push   ss
  419b44:	push   cs
  419b45:	or     al,0x19
  419b47:	push   esp
  419b48:	mov    ecx,0xc501282c
  419b4d:	in     eax,dx
  419b4e:	jbe    0x419b73
  419b50:	rcr    dl,cl
  419b52:	push   ebx
  419b53:	lock fs pop ebx
  419b56:	push   0xa57c3b91
  419b5b:	aas    
  419b5c:	mov    al,ds:0xbbe2e47
  419b61:	clc    
  419b62:	sbb    eax,0xe9df1b57
  419b68:	sub    bh,BYTE PTR [eax+0x7d]
  419b6b:	iret   
  419b6c:	(bad)  
  419b6d:	int3   
  419b6e:	(bad)  
  419b6f:	call   0x17b:0x22462e15
  419b76:	push   eax
  419b77:	mov    WORD PTR [ecx+0x77],cs
  419b7a:	mov    DWORD PTR [edi],edi
  419b7c:	aad    0x6b
  419b7e:	pop    es
  419b7f:	adc    al,0x67
  419b81:	xor    al,0x62
  419b83:	xor    esp,ebx
  419b85:	pop    esi
  419b86:	repnz shr BYTE PTR [ecx-0x4e],cl
  419b8a:	lea    ebx,[ebx-0x37118112]
  419b90:	mov    ecx,0x78e587a0
  419b95:	mov    eax,ebp
  419b97:	pusha  
  419b98:	cmp    al,0x3a
  419b9a:	into   
  419b9b:	mov    esp,0x2318aeb8
  419ba0:	or     edx,esp
  419ba2:	sbb    DWORD PTR [ebx+ebp*1+0x4d],0xf2258ee5
  419baa:	cld    
  419bab:	cmp    bl,BYTE PTR fs:[ecx-0x33]
  419baf:	fist   DWORD PTR [eax]
  419bb1:	xlat   BYTE PTR ds:[ebx]
  419bb2:	mov    esp,0x36f2bb38
  419bb7:	in     eax,dx
  419bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bb9:	pop    ebp
  419bba:	sbb    ch,BYTE PTR [ebx-0x7a13f301]
  419bc0:	rcl    BYTE PTR [edx],1
  419bc2:	xchg   ebx,eax
  419bc3:	mov    esi,0x5733d1bc
  419bc8:	add    cl,bl
  419bca:	adc    al,0xea
  419bcc:	loope  0x419bd8
  419bce:	cmp    DWORD PTR [ecx-0x19e3b319],esp
  419bd4:	jg     0x419bb9
  419bd6:	dec    ecx
  419bd7:	or     BYTE PTR [esi+eiz*1],dl
  419bda:	mov    ds:0x81884335,eax
  419bdf:	addr16 dec edi
  419be1:	rcl    dl,0xf7
  419be4:	mov    edi,0x358ff2d1
  419be9:	sub    eax,0xa0f4e840
  419bee:	fcom   QWORD PTR [eax-0xe]
  419bf1:	or     al,0x7f
  419bf3:	fs jecxz 0x419b86
  419bf6:	imul   ebx,DWORD PTR [eax-0x3be1f520],0x34
  419bfd:	inc    edx
  419bfe:	ret    
  419bff:	and    DWORD PTR [ecx+0x28],0x1b02d9e6
  419c06:	sub    eax,0x467dccd1
  419c0b:	idiv   dl
  419c0d:	cmp    DWORD PTR [edi-0x14],0xffffff95
  419c11:	fwait
  419c12:	sub    BYTE PTR [ebp-0x5d94914e],dl
  419c18:	mov    edi,DWORD PTR [esi-0x16]
  419c1b:	mov    ds:0x6ff4b972,eax
  419c20:	or     dh,dh
  419c22:	xor    esp,eax
  419c24:	scas   al,BYTE PTR es:[edi]
  419c25:	push   edi
  419c26:	stos   BYTE PTR es:[edi],al
  419c27:	inc    esp
  419c28:	inc    ebx
  419c29:	les    edi,FWORD PTR [ecx]
  419c2b:	sbb    BYTE PTR [esi],bh
  419c2d:	(bad)  
  419c2f:	and    BYTE PTR [edi+0xa],0x3c
  419c33:	in     al,dx
  419c34:	xor    al,BYTE PTR [ebx-0x6cdb3016]
  419c3a:	add    ah,al
  419c3c:	jecxz  0x419c50
  419c3e:	pop    ebx
  419c3f:	mov    esi,0xed79134c
  419c44:	in     eax,0x9d
  419c46:	outs   dx,DWORD PTR ds:[esi]
  419c47:	xchg   edx,eax
  419c48:	or     ebp,DWORD PTR [eax]
  419c4a:	test   eax,0xf159dbea
  419c4f:	sub    DWORD PTR [ecx-0x546df3ec],ecx
  419c55:	cli    
  419c56:	into   
  419c57:	shl    BYTE PTR ss:[edi],0x3d
  419c5b:	imul   edx,DWORD PTR [ecx-0x5d74932e],0xffffffb7
  419c62:	rol    BYTE PTR [edx-0x25],cl
  419c65:	add    esi,ebx
  419c67:	sub    DWORD PTR [eax],0x25
  419c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c6b:	or     al,0xa6
  419c6d:	xchg   edi,eax
  419c6e:	data16 mov al,ds:0xb076b577
  419c74:	cmp    BYTE PTR [ecx*8-0x1407e900],ah
  419c7b:	mov    esi,0x893705b9
  419c80:	je     0x419cc9
  419c82:	bound  esp,QWORD PTR [eax+0x6e]
  419c85:	and    edi,DWORD PTR [eax-0x3f]
  419c88:	mov    esi,0xb0735abc
  419c8d:	(bad)  
  419c8e:	adc    eax,0x5bc71bf8
  419c93:	or     al,BYTE PTR [esi+edi*1+0x3c0cd030]
  419c9a:	jge    0x419c1f
  419c9c:	mov    ch,0x17
  419c9e:	sub    ah,al
  419ca0:	stos   DWORD PTR es:[edi],eax
  419ca1:	or     al,0x6a
  419ca3:	push   cs
  419ca4:	loop   0x419cfa
  419ca6:	add    BYTE PTR [ecx],ah
  419ca8:	les    edi,FWORD PTR es:[ebp-0x7d737c8c]
  419caf:	mov    ds:0x209187ec,eax
  419cb4:	jmp    DWORD PTR [eax+eiz*4+0xc7cdc4]
  419cbb:	pop    ss
  419cbc:	xchg   DWORD PTR [eax+ebp*4+0x13],edi
  419cc0:	sbb    eax,0x52c81add
  419cc5:	sbb    ebx,ecx
  419cc7:	push   es
  419cc8:	pushf  
  419cc9:	int    0xa5
  419ccb:	icebp  
  419ccc:	or     al,0xd0
  419cce:	push   es
  419ccf:	rol    DWORD PTR [edx-0x3e],cl
  419cd2:	jns    0x419d49
  419cd4:	(bad)  
  419cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cd6:	add    esi,DWORD PTR [ebx]
  419cd8:	scas   eax,DWORD PTR es:[edi]
  419cd9:	sub    al,0xae
  419cdb:	stc    
  419cdc:	cmp    DWORD PTR [ebp+0x2c],esp
  419cdf:	mov    dl,0xc5
  419ce1:	in     al,0x51
  419ce3:	(bad)  
  419ce4:	jbe    0x419d4d
  419ce6:	stos   BYTE PTR es:[edi],al
  419ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ce8:	xor    ah,bh
  419cea:	sub    dh,BYTE PTR [edx-0x29]
  419ced:	popa   
  419cee:	and    BYTE PTR [ebx+0x7721fe1a],bh
  419cf4:	loopne 0x419d50
  419cf6:	test   BYTE PTR [edi+0x6d851c94],ch
  419cfc:	cmc    
  419cfd:	ins    DWORD PTR es:[edi],dx
  419cfe:	jae    0x419c82
  419d00:	fmulp  st(3),st
  419d02:	fistp  QWORD PTR [eax]
  419d04:	dec    esi
  419d05:	call   0x673d:0x5c9f88da
  419d0c:	loopne 0x419d0b
  419d0e:	xor    BYTE PTR [edi],ah
  419d10:	push   0x48
  419d12:	cmp    DWORD PTR [ebx-0x2415d4ed],eax
  419d18:	dec    si
  419d1a:	aas    
  419d1b:	jns    0x419cd1
  419d1d:	jae    0x419d71
  419d1f:	(bad)  
  419d20:	lods   eax,DWORD PTR ds:[esi]
  419d21:	cs fxch st(7)
  419d24:	mov    bh,BYTE PTR [esp+ebx*2-0x6f]
  419d28:	mov    bl,0x14
  419d2a:	push   eax
  419d2b:	retf   
  419d2c:	cmp    eax,0x2de333b7
  419d31:	pop    edx
  419d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d33:	(bad)
  419d37:	outs   dx,BYTE PTR ds:[esi]
  419d38:	lock sahf 
  419d3a:	ret    0x3aa0
  419d3d:	cmp    BYTE PTR [ebx-0x46b5c3a2],ch
  419d43:	mov    ch,BYTE PTR [eax+0x5a]
  419d46:	mov    ebp,0x71e5cc96
  419d4b:	gs call 0xf49d:0xf4e22654
  419d53:	aad    0x3c
  419d55:	mov    edx,0x7f54f10a
  419d5a:	sahf   
  419d5b:	dec    esi
  419d5c:	adc    esp,DWORD PTR [edx+0x30]
  419d5f:	ds sbb al,0xdc
  419d62:	mov    esi,0xf027dd1b
  419d67:	cdq    
  419d68:	mov    esi,0xcb5f3e2b
  419d6d:	add    ah,dh
  419d6f:	xor    edi,0x16
  419d72:	pop    edx
  419d73:	sar    esi,cl
  419d75:	mov    eax,0x81c64a8e
  419d7a:	ja     0x419d0f
  419d7c:	inc    edx
  419d7d:	xor    DWORD PTR [ecx+0x7],edx
  419d80:	aam    0xf7
  419d82:	mov    bh,ch
  419d84:	xchg   DWORD PTR [ecx],ecx
  419d86:	iret   
  419d87:	jnp    0x419da0
  419d89:	or     BYTE PTR [edx+0xb],dh
  419d8c:	outs   dx,BYTE PTR ds:[esi]
  419d8d:	push   0xffffff91
  419d8f:	and    BYTE PTR [ebx-0x4b52bc88],ch
  419d95:	or     DWORD PTR [eax],ebp
  419d97:	js     0x419d2b
  419d99:	imul   eax,DWORD PTR [edx+0x3a],0x88306e9a
  419da0:	sbb    al,0x3a
  419da2:	push   ebp
  419da3:	in     eax,0xa9
  419da5:	sar    cl,0xf3
  419da8:	stos   DWORD PTR es:[edi],eax
  419da9:	push   es
  419daa:	popf   
  419dab:	jp     0x419dce
  419dad:	mov    dl,dh
  419daf:	cwde   
  419db0:	dec    esi
  419db1:	add    al,0xfc
  419db3:	sub    edi,DWORD PTR [edi-0x29b9bdab]
  419db9:	mov    ebx,0xc3290c8e
  419dbe:	dec    edi
  419dbf:	pusha  
  419dc0:	xor    DWORD PTR [eax+0x40],0xe72e9305
  419dc7:	addr16 retf 
  419dc9:	out    0xfb,al
  419dcb:	dec    ecx
  419dcc:	(bad)
  419dd0:	jecxz  0x419e44
  419dd2:	test   DWORD PTR [eax-0x6b],esp
  419dd5:	cmp    al,BYTE PTR [edi+esi*4]
  419dd8:	aad    0xae
  419dda:	ret    
  419ddb:	test   bh,bh
  419ddd:	outs   dx,DWORD PTR ds:[esi]
  419dde:	popa   
  419ddf:	sbb    ebp,DWORD PTR [ebx-0x68ad22d]
  419de5:	(bad)  
  419de6:	fdiv   DWORD PTR [eax-0xf49e93f]
  419dec:	mov    al,ds:0x6d6d0d81
  419df1:	xlat   BYTE PTR ds:[ebx]
  419df2:	pop    ax
  419df4:	aam    0xf1
  419df6:	ret    0x1431
  419df9:	mov    ss,WORD PTR [ecx-0x3e]
  419dfc:	inc    edx
  419dfd:	imul   ebx,ebx,0x7d90791c
  419e03:	or     al,BYTE PTR [edx]
  419e05:	add    eax,0x53cf7329
  419e0a:	sub    eax,0xd9f6987a
  419e0f:	or     DWORD PTR [ebp+eax*1+0xa789647],eax
  419e16:	cmp    eax,edi
  419e18:	mov    al,gs:0x5c44c59d
  419e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e1f:	into   
  419e20:	popf   
  419e21:	xchg   BYTE PTR [esi-0x23e44946],dl
  419e27:	cmc    
  419e28:	adc    BYTE PTR [eax],cl
  419e2a:	sub    al,dh
  419e2c:	cmp    esi,DWORD PTR [edx]
  419e2e:	jmp    0xb653:0x49fb7ed4
  419e35:	add    ch,BYTE PTR [eax-0x1aef2dbc]
  419e3b:	mov    dh,0x9b
  419e3d:	push   eax
  419e3e:	mov    edx,DWORD PTR [esi]
  419e40:	fadd   QWORD PTR [ebx-0x65]
  419e43:	lahf   
  419e44:	loope  0x419dd7
  419e46:	mov    BYTE PTR [eax-0x759f9853],ah
  419e4c:	shr    DWORD PTR [edx],cl
  419e4e:	cdq    
  419e4f:	add    eax,0x2a1b5233
  419e54:	or     eax,0x216b38a0
  419e59:	sbb    ebx,0xa0212596
  419e5f:	or     DWORD PTR [esi-0x4939787b],ebx
  419e65:	add    DWORD PTR [ebp+0x3a],ebp
  419e68:	add    DWORD PTR [eax-0x57],edi
  419e6b:	or     al,0x10
  419e6d:	or     ebx,DWORD PTR [esi-0x4b]
  419e70:	popa   
  419e71:	retf   
  419e72:	dec    ebx
  419e73:	in     al,dx
  419e74:	xor    ah,BYTE PTR [ebp-0x4fc97df6]
  419e7a:	or     BYTE PTR [edi+0x8],bl
  419e7d:	adc    bl,BYTE PTR [ebx]
  419e7f:	ja     0x419e5c
  419e81:	les    edi,FWORD PTR [edi-0x1c]
  419e84:	sar    bl,0x96
  419e87:	push   eax
  419e88:	aad    0xb1
  419e8a:	fdiv   st,st(5)
  419e8c:	inc    esp
  419e8d:	outs   dx,DWORD PTR ds:[esi]
  419e8e:	xor    DWORD PTR [eax-0x3c97094f],ebx
  419e94:	push   esp
  419e95:	lods   eax,DWORD PTR ds:[esi]
  419e96:	cmp    al,0xf7
  419e98:	add    bh,ah
  419e9a:	xchg   esp,eax
  419e9b:	(bad)  
  419e9c:	idiv   BYTE PTR [edi-0x3f8b4139]
  419ea2:	lock pop ebx
  419ea4:	and    DWORD PTR [edi-0x27733ee7],eax
  419eaa:	fs pushf 
  419eac:	bswap  ecx
  419eae:	mov    ch,0xe5
  419eb0:	jmp    0xa318:0x49d0abb7
  419eb7:	adc    esp,DWORD PTR [eax+0x771cd45a]
  419ebd:	adc    edx,0x62e85d4
  419ec3:	pop    ss
  419ec4:	imul   ebx,edi,0xa8c2ef98
  419eca:	popa   
  419ecb:	sub    BYTE PTR [edx],ah
  419ecd:	sar    bh,1
  419ecf:	(bad)  
  419ed0:	push   edi
  419ed1:	adc    DWORD PTR [ecx+edx*8+0x2f],0x5e
  419ed6:	add    eax,DWORD PTR [esi-0x53168ba4]
  419edc:	pop    ebx
  419edd:	fcom   DWORD PTR [edi+ebx*2-0x59]
  419ee1:	(bad)  [ebx-0x40]
  419ee4:	loop   0x419f33
  419ee6:	pop    edi
  419ee7:	mov    esi,ecx
  419ee9:	aas    
  419eea:	lock jae 0x419eb1
  419eed:	inc    esp
  419eee:	sub    DWORD PTR [edi+0x2aebbf7f],esp
  419ef4:	adc    eax,0xa4cb4f80
  419ef9:	jge    0x419f5d
  419efb:	jp     0x419f7b
  419efd:	add    eax,0x4b9a96a5
  419f02:	pushf  
  419f03:	cmp    BYTE PTR [edx+0x17],bh
  419f06:	xlat   BYTE PTR ds:[ebx]
  419f07:	pusha  
  419f08:	sahf   
  419f09:	mov    ah,0x89
  419f0b:	jns    0x419ef1
  419f0d:	mov    cl,0xaf
  419f0f:	fs mov dh,0x79
  419f13:	push   esi
  419f14:	xchg   esp,eax
  419f15:	add    ecx,DWORD PTR [esi]
  419f17:	jns    0x419ed6
  419f19:	jno    0x419ede
  419f1b:	mov    al,0xb2
  419f1d:	ret    0x3daf
  419f20:	int3   
  419f21:	pop    ecx
  419f22:	icebp  
  419f23:	cwde   
  419f24:	inc    eax
  419f25:	in     al,dx
  419f26:	repnz dec ebp
  419f28:	add    ebx,DWORD PTR [eax+0x2c9b70e1]
  419f2e:	push   0x2b382b34
  419f33:	mov    al,ds:0x41f98cec
  419f38:	pusha  
  419f39:	push   edx
  419f3a:	xor    BYTE PTR [edi+0x67],dl
  419f3d:	push   ebx
  419f3e:	jmp    0x1c907614
  419f43:	pop    ebx
  419f44:	pop    ecx
  419f45:	sbb    bh,bl
  419f47:	cmp    BYTE PTR [ecx-0x4891aa1d],bl
  419f4d:	into   
  419f4e:	in     eax,dx
  419f4f:	and    esi,DWORD PTR [eax]
  419f51:	push   esi
  419f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f53:	out    0x9a,eax
  419f55:	and    BYTE PTR [ecx-0xd0a227e],cl
  419f5b:	inc    ecx
  419f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f5d:	sbb    BYTE PTR [eax-0x4b],bh
  419f60:	(bad)  
  419f61:	lock add bh,0x5a
  419f65:	test   al,0x26
  419f67:	xchg   ebx,eax
  419f68:	mov    ecx,0x6f34ae27
  419f6d:	add    BYTE PTR [ebx+esi*2],al
  419f70:	sbb    al,0xd4
  419f72:	mov    al,0xf4
  419f74:	es jecxz 0x419f36
  419f77:	xor    eax,0x87cc5172
  419f7c:	mov    ah,0xda
  419f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f7f:	(bad)  
  419f80:	jp     0x419fdd
  419f82:	xchg   ecx,eax
  419f83:	mov    BYTE PTR [esi],cl
  419f85:	or     DWORD PTR [eax+0x7a],esp
  419f88:	ins    DWORD PTR es:[edi],dx
  419f89:	pop    ecx
  419f8a:	(bad)  
  419f8c:	ins    BYTE PTR es:[edi],dx
  419f8d:	shl    ebx,1
  419f8f:	sbb    al,0xcb
  419f91:	(bad)  
  419f92:	retf   0x8187
  419f95:	xchg   ebx,eax
  419f96:	ret    
  419f97:	leave  
  419f98:	pop    ds
  419f99:	mov    gs,WORD PTR [ebp-0x4d]
  419f9c:	inc    ebp
  419f9d:	addr16 jnp 0x419f86
  419fa0:	outs   dx,BYTE PTR ds:[esi]
  419fa1:	adc    dl,BYTE PTR [esi]
  419fa3:	in     al,0x85
  419fa5:	or     eax,DWORD PTR [edx-0x51]
  419fa8:	or     dl,0x1a
  419fab:	dec    edi
  419fac:	ret    0x6eaa
  419faf:	xlat   BYTE PTR ds:[ebx]
  419fb0:	and    ecx,DWORD PTR ds:0xb798526b
  419fb6:	xor    ecx,DWORD PTR [esp+ebx*1]
  419fb9:	xchg   DWORD PTR [edi-0x58fd10fb],ebx
  419fbf:	push   ebx
  419fc0:	inc    esi
  419fc1:	add    al,0xbd
  419fc3:	je     0x41a026
  419fc5:	aaa    
  419fc6:	xor    ebx,DWORD PTR [esi]
  419fc8:	add    dh,ah
  419fca:	jbe    0x41a039
  419fcc:	test   al,0xd9
  419fce:	jp     0x41a04e
  419fd0:	inc    eax
  419fd1:	out    dx,al
  419fd2:	xor    bl,BYTE PTR [ecx+eax*4-0x70]
  419fd6:	mov    ebx,0xe83d4966
  419fdb:	add    DWORD PTR [eax-0x2a70abda],edx
  419fe1:	retf   0x8e8d
  419fe4:	adc    al,0x57
  419fe6:	cmc    
  419fe7:	inc    ecx
  419fe8:	mov    ah,0xf2
  419fea:	aad    0x62
  419fec:	xchg   ebp,eax
  419fed:	(bad)  
  419fee:	or     edx,DWORD PTR [esi+0x5e3338a9]
  419ff4:	dec    esp
  419ff5:	hlt    
  419ff6:	add    ah,BYTE PTR fs:[ecx-0x3e48b537]
  419ffd:	jae    0x41a02a
  419fff:	mov    al,ds:0x523e7541
  41a004:	cmp    ch,ch
  41a006:	jb     0x419fbe
  41a008:	jbe    0x41a047
  41a00a:	test   eax,0x1de02d06
  41a00f:	cmp    DWORD PTR ds:0xb9c702e6,eax
  41a015:	leave  
  41a016:	xor    BYTE PTR [ecx+0x70af47e9],0x3
  41a01d:	cmp    bl,BYTE PTR [edi+ebp*4]
  41a020:	pop    ebx
  41a021:	cld    
  41a022:	pop    edi
  41a023:	sub    edi,DWORD PTR [eax+0x59f2c877]
  41a029:	and    eax,0x4d57696
  41a02e:	sti    
  41a02f:	inc    edx
  41a030:	loop   0x41a002
  41a032:	pop    edx
  41a033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a034:	xchg   esp,eax
  41a035:	push   dx
  41a037:	ror    al,0xb7
  41a03a:	bound  edi,QWORD PTR [eax+0x20]
  41a03d:	add    edi,esp
  41a03f:	sbb    ecx,DWORD PTR [edx-0x21]
  41a042:	xchg   edx,eax
  41a043:	xor    al,0x1e
  41a045:	aas    
  41a046:	aad    0x65
  41a048:	popf   
  41a049:	addr16 mov ebx,0x69bd515e
  41a04f:	inc    esp
  41a050:	ins    BYTE PTR es:[edi],dx
  41a051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a052:	add    al,0x66
  41a055:	into   
  41a056:	in     eax,dx
  41a057:	fnstcw WORD PTR [ecx-0x69]
  41a05a:	jmp    0xf55d:0x6c14fd40
  41a061:	lods   al,BYTE PTR ds:[esi]
  41a062:	mov    esp,0x5278de9e
  41a067:	xor    cl,BYTE PTR [edi-0x3b25b84e]
  41a06d:	xchg   esi,eax
  41a06e:	pop    ebx
  41a06f:	std    
  41a070:	shl    BYTE PTR [esi],0xcf
  41a073:	rcr    ah,0x90
  41a076:	add    edx,DWORD PTR [edi+0x1b]
  41a079:	mov    ebp,0xf5cfabf3
  41a07e:	mov    eax,0xce5c8427
  41a083:	mov    eax,0x3c31fb4d
  41a088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a089:	pusha  
  41a08a:	xchg   ebx,eax
  41a08b:	adc    al,0xe6
  41a08d:	shl    BYTE PTR fs:[ecx],1
  41a090:	out    dx,eax
  41a091:	icebp  
  41a092:	adc    DWORD PTR [edi-0x493259d3],ebx
  41a098:	rep outs dx,DWORD PTR ds:[esi]
  41a09a:	pop    eax
  41a09b:	xchg   esp,eax
  41a09c:	adc    ch,BYTE PTR [edi]
  41a09e:	jmp    0x676a:0x8ad6999f
  41a0a5:	leave  
  41a0a6:	sbb    eax,0x7c3d6476
  41a0ab:	xlat   BYTE PTR ds:[ebx]
  41a0ac:	push   ebx
  41a0ad:	std    
  41a0ae:	xor    edi,DWORD PTR [esi]
  41a0b0:	sbb    ebx,DWORD PTR [edx+0x4c]
  41a0b3:	shl    DWORD PTR [edx-0x77],0x2b
  41a0b7:	push   esp
  41a0b8:	add    eax,ebp
  41a0ba:	pop    ss
  41a0bb:	repz xchg ebx,eax
  41a0bd:	mov    ebx,0xa1de0104
  41a0c2:	cmp    eax,0x843210b
  41a0c7:	mov    edx,0x94df4ee3
  41a0cc:	mov    edx,0xfbb8efd0
  41a0d1:	cmc    
  41a0d2:	xor    BYTE PTR [ebp-0x6a],cl
  41a0d5:	repnz xor dx,0x24
  41a0da:	pusha  
  41a0db:	cmp    BYTE PTR [ecx-0x4c],ah
  41a0de:	inc    ebp
  41a0df:	in     eax,dx
  41a0e0:	sub    BYTE PTR [ecx+edi*4-0x5cea4f11],0x5e
  41a0e8:	(bad)  
  41a0e9:	cmp    BYTE PTR ds:0x63e9fea0,al
  41a0ef:	pusha  
  41a0f0:	inc    edi
  41a0f1:	outs   dx,DWORD PTR ds:[esi]
  41a0f2:	rol    DWORD PTR [edi+ebx*4],0x18
  41a0f6:	ins    DWORD PTR es:[edi],dx
  41a0f7:	xchg   esi,eax
  41a0f9:	pop    ds
  41a0fa:	jmp    0x41a08f
  41a0fc:	add    DWORD PTR [esi-0x6e],eax
  41a0ff:	loop   0x41a0b4
  41a101:	lock fild DWORD PTR [si-0x2f]
  41a106:	inc    esp
  41a107:	dec    esi
  41a108:	xchg   BYTE PTR [edi-0x585423a],ah
  41a10e:	jle    0x41a0e5
  41a110:	sub    bh,BYTE PTR [bp+di-0x6590]
  41a115:	pushf  
  41a116:	and    ch,BYTE PTR [ecx+0x38]
  41a119:	sub    edi,DWORD PTR [ebx-0x127521f1]
  41a11f:	fsubr  QWORD PTR [edx-0x51]
  41a122:	jp     0x41a14a
  41a124:	jnp    0x41a188
  41a126:	sub    BYTE PTR [edi+eiz*1+0x4f],bl
  41a12a:	xchg   esi,eax
  41a12b:	jne    0x41a0c4
  41a12d:	xchg   esi,eax
  41a12e:	sub    al,0x12
  41a130:	pop    ebp
  41a131:	rcl    ch,0xef
  41a134:	outs   dx,BYTE PTR ds:[esi]
  41a135:	xor    eax,0x7f85d39b
  41a13a:	shl    BYTE PTR [ecx+edi*8+0x32],1
  41a13e:	push   ebp
  41a13f:	mov    dl,0x23
  41a141:	stc    
  41a142:	ret    
  41a143:	shl    DWORD PTR [ebp+ebp*1-0x61eed68c],1
  41a14a:	jmp    0x41a135
  41a14c:	cmp    edx,DWORD PTR [ebx]
  41a14e:	mov    edi,ds
  41a150:	out    0x42,al
  41a152:	xlat   BYTE PTR ds:[ebx]
  41a153:	jb     0x41a0f4
  41a155:	adc    bh,BYTE PTR [ebp+edx*2+0x7f]
  41a159:	mov    bl,0xe
  41a15b:	outs   dx,BYTE PTR ds:[esi]
  41a15c:	jae    0x41a0ff
  41a15e:	arpl   WORD PTR [ebp+0xc],di
  41a161:	loop   0x41a1b1
  41a163:	xchg   BYTE PTR [ebx],bh
  41a165:	xor    eax,0x2c82aae7
  41a16a:	add    eax,0xdfcebb00
  41a16f:	and    al,0xd1
  41a171:	sahf   
  41a172:	test   ebx,edx
  41a174:	xor    ecx,0x14
  41a177:	jge    0x41a157
  41a179:	xor    al,0x20
  41a17b:	dec    edx
  41a17c:	into   
  41a17d:	pop    ebx
  41a17e:	cld    
  41a17f:	int    0x5e
  41a181:	push   edi
  41a182:	pushf  
  41a183:	out    0x5f,al
  41a185:	xchg   DWORD PTR [ebx-0x6fbdb08d],edx
  41a18b:	test   BYTE PTR [edi],0x66
  41a18e:	inc    ecx
  41a18f:	ret    
  41a190:	popf   
  41a191:	ins    WORD PTR es:[edi],dx
  41a193:	stc    
  41a194:	fstp   QWORD PTR [edx+ebx*2-0xe]
  41a198:	inc    edi
  41a199:	sbb    al,0x4
  41a19b:	mov    ds:0xee2c4883,eax
  41a1a0:	ja     0x41a1b9
  41a1a2:	lock mov ds:0xe89bea9,eax
  41a1a8:	gs out dx,eax
  41a1aa:	mul    DWORD PTR [edx+0x576863a7]
  41a1b0:	cmp    DWORD PTR [ecx-0x266e4ec9],esi
  41a1b6:	je     0x41a163
  41a1b8:	dec    esp
  41a1b9:	push   edi
  41a1ba:	lods   al,BYTE PTR ds:[esi]
  41a1bb:	(bad)  
  41a1bc:	jmp    0x41a1cc
  41a1be:	daa    
  41a1bf:	out    dx,eax
  41a1c0:	(bad)  
  41a1c1:	lea    ebx,[edx+edi*4]
  41a1c4:	in     eax,0xf0
  41a1c6:	call   0x4eedbee7
  41a1cb:	lahf   
  41a1cc:	push   ebp
  41a1cd:	js     0x41a16d
  41a1cf:	add    al,0x94
  41a1d1:	mov    ebp,ebp
  41a1d3:	xor    eax,0xbf47f4d0
  41a1d8:	in     al,dx
  41a1d9:	mov    cl,0xe5
  41a1db:	push   0xd50493cb
  41a1e0:	and    BYTE PTR [eax+0xf8b8476],al
  41a1e6:	rcr    ebp,0x6f
  41a1e9:	mov    ch,BYTE PTR [edx]
  41a1eb:	mov    esi,0xda4b0cfa
  41a1f0:	std    
  41a1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1f2:	push   ss
  41a1f3:	(bad)
  41a1f7:	push   ss
  41a1f8:	push   eax
  41a1f9:	int3   
  41a1fa:	lods   eax,DWORD PTR ds:[esi]
  41a1fb:	jg     0x41a20b
  41a1fd:	mov    ebx,0xa91d2479
  41a202:	mov    cl,0x2f
  41a204:	xor    BYTE PTR [edi-0x30fe8e50],cl
  41a20a:	enter  0xa262,0x3c
  41a20e:	in     al,0x6a
  41a210:	and    edi,DWORD PTR [ebp+eax*2+0x2b]
  41a214:	test   DWORD PTR gs:[ebx+0x459cddd0],edi
  41a21b:	sbb    esi,edx
  41a21d:	xchg   DWORD PTR [edi-0x36207cf3],esi
  41a223:	dec    edx
  41a224:	mov    ebx,eax
  41a226:	lods   eax,DWORD PTR ds:[esi]
  41a227:	add    al,bl
  41a229:	jbe    0x41a1bf
  41a22b:	es je  0x41a1f8
  41a22e:	xor    BYTE PTR [ecx],0x2b
  41a231:	into   
  41a232:	fwait
  41a233:	pop    esp
  41a234:	int3   
  41a235:	test   DWORD PTR [ebp-0x6a],0x361f1b22
  41a23c:	mov    esi,0xf259d676
  41a241:	xchg   ecx,eax
  41a242:	imul   DWORD PTR ds:0x7fcda79e
  41a248:	(bad)  
  41a249:	ins    DWORD PTR es:[edi],dx
  41a24a:	push   esi
  41a24b:	mov    gs,WORD PTR [eax]
  41a24d:	inc    eax
  41a24e:	xor    ah,BYTE PTR [ecx-0x3773700f]
  41a254:	aas    
  41a255:	in     al,0xd2
  41a257:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a259:	pusha  
  41a25a:	pop    edi
  41a25b:	xchg   edi,eax
  41a25c:	pop    ss
  41a25d:	xor    BYTE PTR [ebx-0x3f],dh
  41a260:	inc    eax
  41a261:	jge    0x41a298
  41a263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a264:	jns    0x41a1e6
  41a266:	and    DWORD PTR [ebx+0x47],esp
  41a269:	add    edi,DWORD PTR [ebx-0x7f49f7c5]
  41a26f:	nop
  41a270:	repz jae 0x41a2b2
  41a273:	popf   
  41a274:	mov    ecx,0x9825075
  41a279:	push   ss
  41a27a:	jae    0x41a225
  41a27c:	mov    ebx,0x41c4e653
  41a281:	cmc    
  41a282:	mov    ebp,0xa4091a6a
  41a287:	pusha  
  41a288:	inc    ebx
  41a289:	neg    DWORD PTR [edx+0x20f0f32e]
  41a28f:	xor    al,0x95
  41a291:	retf   
  41a292:	repz sub dl,dl
  41a295:	rcr    BYTE PTR [edx+eax*2+0x65],1
  41a299:	jge    0x41a24d
  41a29b:	js     0x41a2f6
  41a29d:	loope  0x41a262
  41a29f:	les    edx,FWORD PTR fs:[edx+0x44]
  41a2a3:	xchg   ebp,eax
  41a2a4:	and    ch,BYTE PTR [ebx-0x3b]
  41a2a7:	mov    ecx,0xb40c92f1
  41a2ac:	in     al,dx
  41a2ad:	dec    esp
  41a2ae:	jg     0x41a246
  41a2b0:	cmp    cl,bh
  41a2b2:	je     0x41a332
  41a2b4:	ins    BYTE PTR es:[edi],dx
  41a2b5:	add    esi,DWORD PTR [ebx-0x2b]
  41a2b8:	dec    ebx
  41a2b9:	lods   eax,DWORD PTR ds:[esi]
  41a2ba:	sub    ebp,DWORD PTR [edi-0x3772cd5c]
  41a2c0:	mov    edi,0xd7810b1d
  41a2c5:	jecxz  0x41a27a
  41a2c7:	fs sbb ebx,ecx
  41a2ca:	ins    DWORD PTR es:[edi],dx
  41a2cb:	dec    esp
  41a2cc:	jl     0x41a292
  41a2ce:	fs inc esi
  41a2d0:	imul   edi,DWORD PTR [ebx*8-0x3e6af996],0xffffffc0
  41a2d8:	mov    cl,0x3f
  41a2da:	test   DWORD PTR [edi],edx
  41a2dc:	pop    esp
  41a2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2de:	xchg   edx,eax
  41a2df:	push   es
  41a2e0:	into   
  41a2e1:	outs   dx,DWORD PTR ds:[esi]
  41a2e2:	mov    WORD PTR [edx],cs
  41a2e4:	test   eax,0xe64f594d
  41a2e9:	and    DWORD PTR [ecx],eax
  41a2eb:	jmp    0x1d5765ca
  41a2f0:	ror    DWORD PTR [edx+0x7a80594c],0xf3
  41a2f7:	cld    
  41a2f8:	sub    al,0x32
  41a2fa:	call   0x2f32:0xb9197ea
  41a301:	mov    cl,BYTE PTR [ecx+ecx*1-0x163bab5f]
  41a308:	push   0x638bb924
  41a30d:	scas   eax,DWORD PTR es:[edi]
  41a30e:	stos   BYTE PTR es:[edi],al
  41a30f:	inc    esp
  41a310:	cmp    dh,BYTE PTR [eax-0x3db7c296]
  41a316:	enter  0x13f2,0x74
  41a31a:	or     DWORD PTR [edi+0x16],edx
  41a31d:	sub    edi,DWORD PTR [eax]
  41a31f:	ret    0x219d
  41a322:	mov    dl,0x40
  41a324:	imul   eax,DWORD PTR gs:[ebx],0xd9ec9796
  41a32b:	push   esi
  41a32c:	mov    edi,0x5136ba47
  41a331:	dec    ebp
  41a332:	inc    ebx
  41a333:	push   ds
  41a334:	or     ch,BYTE PTR [eax+0x3]
  41a337:	or     dl,bl
  41a339:	fdiv   st,st(0)
  41a33b:	push   ecx
  41a33c:	arpl   di,sp
  41a33e:	pusha  
  41a33f:	jbe    0x41a355
  41a341:	pop    esi
  41a342:	inc    ecx
  41a343:	mov    bh,0x9c
  41a345:	adc    DWORD PTR [edi+edx*2+0x34],eax
  41a349:	mov    al,0xae
  41a34c:	out    dx,al
  41a34d:	loop   0x41a350
  41a34f:	and    ecx,eax
  41a351:	dec    esp
  41a352:	adc    ah,BYTE PTR [esp+ebx*8]
  41a355:	fidiv  WORD PTR [edx-0x12]
  41a358:	mov    edx,ds
  41a35a:	xor    al,0x8f
  41a35c:	xor    dl,BYTE PTR [eax-0x72]
  41a35f:	in     eax,0xcd
  41a361:	sti    
  41a362:	adc    BYTE PTR [edi+0x54],0xc5
  41a366:	into   
  41a367:	push   eax
  41a368:	mov    edi,0xa3e6499a
  41a36d:	cdq    
  41a36e:	cmp    al,0x52
  41a370:	push   edi
  41a371:	retf   0xc9ff
  41a374:	inc    eax
  41a375:	cmp    al,0xf3
  41a377:	push   cs
  41a378:	(bad)  
  41a379:	ret    0xfe6f
  41a37c:	mov    cl,0xc
  41a37e:	cmc    
  41a37f:	loop   0x41a3fe
  41a381:	leave  
  41a382:	or     ah,BYTE PTR [ebx+ecx*1-0x123c1204]
  41a389:	xor    al,0x4b
  41a38b:	inc    ecx
  41a38c:	cmp    dl,BYTE PTR [eax+0x2a83d268]
  41a392:	pop    ss
  41a393:	push   ss
  41a394:	inc    edx
  41a395:	xor    al,dh
  41a397:	cmp    BYTE PTR [ecx-0x20],0x67
  41a39b:	xchg   esp,eax
  41a39c:	mov    esp,0x11940f22
  41a3a1:	adc    DWORD PTR [edi],ecx
  41a3a3:	mov    eax,0x8b0cba80
  41a3a8:	xchg   esi,eax
  41a3a9:	sbb    al,0xbd
  41a3ab:	push   ebx
  41a3ac:	scas   al,BYTE PTR es:[edi]
  41a3ad:	ficomp WORD PTR [edi+edx*4]
  41a3b0:	xor    ch,cl
  41a3b2:	inc    edi
  41a3b3:	data16 or al,0xb7
  41a3b6:	sub    al,0xb8
  41a3b8:	cli    
  41a3b9:	or     BYTE PTR [ebp-0x504b7936],bh
  41a3bf:	or     al,BYTE PTR [edx-0x5e3c81e]
  41a3c5:	int    0x92
  41a3c7:	mov    ecx,0x75134d0
  41a3cc:	push   eax
  41a3cd:	pop    eax
  41a3ce:	into   
  41a3cf:	imul   ebp,DWORD PTR [eax+0x30],0xffffffa9
  41a3d3:	(bad)  
  41a3d4:	popa   
  41a3d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3d6:	fcomp  QWORD PTR [ecx+edx*4-0xd]
  41a3da:	fsubr  DWORD PTR [ebx-0x3]
  41a3dd:	shl    BYTE PTR [ecx+0x7206b6c0],cl
  41a3e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3e4:	int3   
  41a3e5:	mov    eax,DWORD PTR [edi-0x6ee75d48]
  41a3eb:	inc    esi
  41a3ec:	and    ch,BYTE PTR [esi+0x7f]
  41a3ef:	dec    esp
  41a3f0:	sar    BYTE PTR [ebx],1
  41a3f2:	nop
  41a3f3:	push   esp
  41a3f4:	jo     0x41a395
  41a3f6:	sbb    ah,BYTE PTR [edi]
  41a3f8:	shr    BYTE PTR [eax],1
  41a3fa:	adc    ebp,esi
  41a3fc:	jl     0x41a3ec
  41a3fe:	popf   
  41a3ff:	dec    ebp
  41a400:	pop    ebp
  41a401:	hlt    
  41a402:	mov    eax,0x5ee08011
  41a407:	retf   0xe200
  41a40a:	push   edx
  41a40b:	sbb    BYTE PTR [edx-0x4b5342e4],dh
  41a411:	mov    al,0xc8
  41a413:	test   BYTE PTR [eax+0x50],dh
  41a416:	div    al
  41a418:	pop    es
  41a419:	leave  
  41a41a:	aam    0x7e
  41a41c:	cmp    al,0xfd
  41a41e:	fs mov al,0xa1
  41a421:	xchg   edi,eax
  41a422:	or     ebp,edx
  41a424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a425:	push   ds
  41a426:	pop    edi
  41a427:	fdiv   QWORD PTR [esi+0x49]
  41a42a:	int3   
  41a42b:	imul   edx,DWORD PTR [eax+0x2f35a3ad],0xa77a95e5
  41a435:	or     al,0x55
  41a437:	pop    es
  41a438:	jge    0x41a3cb
  41a43a:	mov    DWORD PTR [eax],0xe4337aec
  41a440:	fistp  QWORD PTR [esi]
  41a442:	jns    0x41a450
  41a444:	cli    
  41a445:	xchg   eax,eax
  41a447:	xor    edx,DWORD PTR [ebx]
  41a449:	hlt    
  41a44a:	add    BYTE PTR [edx],cl
  41a44c:	push   edi
  41a44d:	jmp    0x41a413
  41a44f:	loope  0x41a3f8
  41a451:	jmp    0x4fd:0x8a25d226
  41a458:	pushf  
  41a459:	jge    0x41a424
  41a45b:	adc    DWORD PTR [ecx-0x62dc6c66],0xb498e797
  41a465:	das    
  41a466:	rcl    dl,cl
  41a468:	fbld   TBYTE PTR [edi-0x471e43a4]
  41a46e:	cmp    al,0x36
  41a470:	fst    DWORD PTR [eax]
  41a472:	in     al,0x5
  41a474:	sbb    ch,0x47
  41a477:	hlt    
  41a478:	cmp    BYTE PTR [ebp-0x5a],dl
  41a47b:	add    eax,DWORD PTR [ecx]
  41a47d:	pop    es
  41a47e:	mov    bh,0xbd
  41a480:	test   BYTE PTR [esi+0x1c],al
  41a483:	dec    edi
  41a484:	mov    ch,0xdf
  41a486:	sub    bh,BYTE PTR [edx]
  41a488:	frstor [ecx]
  41a48a:	test   DWORD PTR [ebx+0x195453fb],edi
  41a490:	(bad)  
  41a491:	fistp  DWORD PTR [ecx]
  41a493:	les    ebp,FWORD PTR [ecx+edx*4]
  41a496:	cmp    BYTE PTR [ecx-0x40],dl
  41a499:	lds    ecx,FWORD PTR [eax+eiz*8+0xfd2220b]
  41a4a0:	test   al,0xaa
  41a4a2:	xchg   ecx,eax
  41a4a3:	mov    ds:0xb98d8e50,eax
  41a4a8:	jecxz  0x41a513
  41a4aa:	sbb    BYTE PTR [edi-0x1b9e2aea],bl
  41a4b0:	scas   eax,DWORD PTR es:[edi]
  41a4b1:	jl     0x41a504
  41a4b3:	pop    ebx
  41a4b4:	xlat   BYTE PTR ds:[ebx]
  41a4b5:	mov    ds:0xf0c6bf92,eax
  41a4ba:	popf   
  41a4bb:	xchg   BYTE PTR [edx+0x77ceb1a5],dh
  41a4c1:	xor    al,BYTE PTR [ecx]
  41a4c3:	jnp    0x41a47c
  41a4c5:	mov    bh,0x2d
  41a4c7:	test   DWORD PTR [edx-0x1b872d9d],edx
  41a4cd:	push   edi
  41a4ce:	ret    
  41a4cf:	loop   0x41a53b
  41a4d1:	sar    DWORD PTR [edx],cl
  41a4d3:	and    al,0x53
  41a4d5:	shl    DWORD PTR [ecx+0x11367b5a],1
  41a4db:	jecxz  0x41a4a6
  41a4dd:	rcl    BYTE PTR [ebp-0x49],1
  41a4e0:	stc    
  41a4e1:	mov    eax,0x1d4cd025
  41a4e6:	aaa    
  41a4e7:	or     eax,0x5568206
  41a4ec:	call   DWORD PTR [esi+0x7b]
  41a4ef:	sub    BYTE PTR [edx-0x1f],ah
  41a4f2:	in     eax,0x19
  41a4f4:	ret    
  41a4f5:	jmp    0x41a547
  41a4f7:	mov    bh,0xa1
  41a4f9:	rep lods eax,DWORD PTR ds:[esi]
  41a4fb:	mov    ch,0x61
  41a4fd:	and    al,0x86
  41a4ff:	lock sub al,0x5a
  41a502:	fst    DWORD PTR [ebx+0x32]
  41a505:	sbb    al,0xd9
  41a507:	popf   
  41a508:	xchg   ebp,eax
  41a509:	int    0xed
  41a50b:	push   cs
  41a50c:	call   0x7637:0xfcc9e91b
  41a513:	test   esp,eax
  41a515:	(bad)  
  41a516:	jge    0x41a567
  41a518:	add    DWORD PTR [ecx-0x625bda16],0xf26d7f73
  41a522:	push   edx
  41a523:	imul   ebp,eax,0xffffffe4
  41a526:	arpl   WORD PTR [eax],bx
  41a528:	add    DWORD PTR [esi+0x7d],ebp
  41a52b:	mov    al,0xe7
  41a52d:	jge    0x41a52b
  41a52f:	div    DWORD PTR [ebx-0x3f145fd8]
  41a535:	xor    DWORD PTR [ebx+0x63],esp
  41a538:	pop    ebp
  41a539:	test   al,0x9
  41a53b:	ffreep st(1)
  41a53d:	and    bh,BYTE PTR [edx-0x7a]
  41a540:	aas    
  41a541:	sbb    edi,DWORD PTR [edi]
  41a543:	jecxz  0x41a4ca
  41a545:	test   al,0x7b
  41a547:	es or  eax,0x16fc34ce
  41a54d:	xor    eax,0x12ff727e
  41a552:	fidivr WORD PTR [esi+0x13]
  41a555:	jno    0x41a50b
  41a557:	pop    esp
  41a558:	hlt    
  41a559:	(bad)  [edi-0x6]
  41a55c:	fld    DWORD PTR [ecx+ebx*2-0x57abda6f]
  41a563:	add    DWORD PTR [edx-0x68],ebp
  41a566:	jmp    0x41a516
  41a568:	jo     0x41a581
  41a56a:	jmp    0x41a5b1
  41a56c:	sbb    dh,BYTE PTR [eax-0x25]
  41a56f:	xor    al,0x8a
  41a571:	fstp   DWORD PTR [ebp-0x8de73fd]
  41a577:	jg     0x41a570
  41a579:	(bad)  
  41a57a:	push   edi
  41a57b:	jp     0x41a595
  41a57d:	push   0xffffffa0
  41a57f:	xchg   edi,eax
  41a580:	out    dx,al
  41a581:	fwait
  41a582:	xchg   ecx,eax
  41a583:	outs   dx,BYTE PTR ds:[esi]
  41a584:	mov    cl,0xd6
  41a586:	add    cl,BYTE PTR [ebp-0x179516d2]
  41a58c:	icebp  
  41a58d:	or     eax,0x8b08ded7
  41a592:	inc    esi
  41a593:	pop    edx
  41a594:	pop    esp
  41a595:	sub    dl,BYTE PTR [ecx+eax*2+0x2f]
  41a599:	xor    al,0x68
  41a59b:	test   DWORD PTR [ebp+0x9],eax
  41a59e:	mov    eax,ds:0x5b163e0c
  41a5a3:	cmp    esp,DWORD PTR [edi]
  41a5a5:	cwde   
  41a5a6:	out    dx,eax
  41a5a7:	ins    DWORD PTR es:[edi],dx
  41a5a8:	lds    ebp,FWORD PTR [esi+eax*2+0x7def9126]
  41a5af:	out    dx,eax
  41a5b0:	cmp    ch,BYTE PTR ds:0xda5b8f84
  41a5b6:	adc    bh,BYTE PTR [esi]
  41a5b8:	sbb    al,0x7e
  41a5ba:	int3   
  41a5bb:	retf   0xd5c9
  41a5be:	ss js  0x41a5e0
  41a5c1:	shl    BYTE PTR [ebx+eiz*1-0x39],1
  41a5c5:	clc    
  41a5c6:	mov    WORD PTR [esi-0x51],es
  41a5c9:	lea    ebp,[ebp-0x5f]
  41a5cc:	in     al,0x7
  41a5ce:	pop    eax
  41a5cf:	call   0x70b121dd
  41a5d4:	ins    DWORD PTR es:[edi],dx
  41a5d5:	pop    edx
  41a5d6:	int    0xb3
  41a5d8:	lock or al,0xce
  41a5db:	inc    ebp
  41a5dc:	mov    bl,0xfd
  41a5de:	ds out 0x29,eax
  41a5e1:	es or  al,0xb8
  41a5e4:	add    al,BYTE PTR [eax+0x5f]
  41a5e7:	jae    0x41a571
  41a5e9:	test   al,0xd4
  41a5eb:	sar    BYTE PTR [eax-0x21],cl
  41a5ee:	addr16 push ss
  41a5f0:	scas   eax,DWORD PTR es:[edi]
  41a5f1:	mov    edx,0x261b4b42
  41a5f6:	ret    
  41a5f7:	cs inc edx
  41a5f9:	inc    edi
  41a5fa:	cdq    
  41a5fb:	dec    esi
  41a5fd:	add    esi,ebx
  41a5ff:	adc    al,0xa8
  41a601:	popf   
  41a602:	std    
  41a603:	stc    
  41a604:	jmp    0x41a5ec
  41a606:	data16 int 0x5
  41a609:	pop    esp
  41a60a:	jp     0x41a656
  41a60c:	imul   esp,DWORD PTR [esi-0x60],0x1d
  41a610:	(bad)
  41a613:	in     al,0xa1
  41a615:	pop    ecx
  41a616:	push   ecx
  41a617:	pushf  
  41a618:	scas   eax,DWORD PTR es:[edi]
  41a619:	xor    DWORD PTR [eax],ecx
  41a61b:	leave  
  41a61c:	mov    ch,0x72
  41a61e:	enter  0xa332,0x3a
  41a622:	cwde   
  41a623:	or     al,0x5
  41a626:	shl    DWORD PTR [ebx-0x2fa4f05e],0xfd
  41a62d:	arpl   WORD PTR [edi+0x25f5dd1e],si
  41a633:	pop    esi
  41a634:	pop    es
  41a635:	jg     0x41a680
  41a637:	aam    0x31
  41a639:	add    ebx,DWORD PTR [edi]
  41a63b:	loop   0x41a670
  41a63d:	clc    
  41a63e:	jns    0x41a67c
  41a640:	xor    BYTE PTR [eax],dl
  41a642:	enter  0xe0c9,0x91
  41a646:	push   ecx
  41a647:	inc    eax
  41a648:	enter  0x5bba,0xad
  41a64c:	mov    al,BYTE PTR [eax+0x7f]
  41a64f:	sbb    eax,DWORD PTR [edi]
  41a651:	mov    ecx,0x8db95e6f
  41a656:	adc    dl,dh
  41a658:	mov    esp,0x9bef4088
  41a65d:	sub    DWORD PTR [eax+edx*8+0x27],0x6cbaa86e
  41a665:	mov    esp,0x5e0b0acf
  41a66a:	cmp    al,0x81
  41a66c:	push   ecx
  41a66d:	not    BYTE PTR [esi]
  41a66f:	sub    cl,BYTE PTR [edi]
  41a671:	push   edi
  41a672:	and    BYTE PTR [edx+ebx*8+0x21],0x7
  41a677:	mov    edi,0xf8942238
  41a67c:	mov    al,0x4f
  41a67e:	add    edi,eax
  41a680:	hlt    
  41a681:	and    dh,BYTE PTR [esi]
  41a683:	xchg   DWORD PTR [edi+0x133ac0da],ebp
  41a689:	inc    eax
  41a68a:	outs   dx,DWORD PTR ds:[esi]
  41a68b:	int3   
  41a68c:	lods   eax,DWORD PTR ds:[esi]
  41a68d:	cmp    DWORD PTR [edx+edi*2-0x45],esp
  41a691:	push   cs
  41a692:	and    eax,0xdbbd9b8e
  41a697:	fadd   DWORD PTR [edi]
  41a699:	mov    ch,0x16
  41a69b:	aam    0x23
  41a69d:	jecxz  0x41a696
  41a69f:	ins    DWORD PTR es:[edi],dx
  41a6a0:	mov    dl,0xcc
  41a6a2:	ret    0x9623
  41a6a5:	xchg   esp,esp
  41a6a7:	test   BYTE PTR ds:0x165d7693,cl
  41a6ad:	int    0x3a
  41a6af:	mov    eax,0xe42439ec
  41a6b4:	cli    
  41a6b5:	fidivr WORD PTR [ebp+0x21]
  41a6b8:	in     eax,dx
  41a6b9:	inc    edx
  41a6ba:	frstor [ecx+0x7]
  41a6bd:	push   ecx
  41a6be:	push   eax
  41a6bf:	pushf  
  41a6c0:	aad    0x6b
  41a6c2:	push   ds
  41a6c3:	fst    QWORD PTR [eax-0x73]
  41a6c6:	pop    esi
  41a6c7:	leave  
  41a6c8:	jle    0x41a654
  41a6ca:	jo     0x41a6ab
  41a6cc:	mov    ds:0x223e321f,eax
  41a6d1:	sub    cl,dh
  41a6d3:	or     BYTE PTR ds:0xa353673d,0xa3
  41a6da:	jns    0x41a73f
  41a6dc:	fadd   DWORD PTR [eax+0x5c]
  41a6df:	jnp    0x41a6d4
  41a6e1:	fidiv  WORD PTR [edi]
  41a6e3:	hlt    
  41a6e4:	pusha  
  41a6e5:	xor    eax,0xa1c645fa
  41a6ea:	mov    dl,0x81
  41a6ec:	mov    ecx,0xa1310020
  41a6f1:	pop    edi
  41a6f2:	popa   
  41a6f3:	or     cl,BYTE PTR [esi]
  41a6f5:	adc    cl,BYTE PTR [ebp+0x44]
  41a6f8:	fnstenv [esi+0x630ae110]
  41a6fe:	inc    eax
  41a6ff:	mov    ah,0xb1
  41a701:	pandn  mm6,QWORD PTR [edi]
  41a704:	adc    eax,0x2e0d8601
  41a709:	xlat   BYTE PTR ds:[ebx]
  41a70a:	add    dl,bl
  41a70c:	jae    0x41a740
  41a70e:	xchg   esp,eax
  41a70f:	inc    esi
  41a710:	loope  0x41a725
  41a712:	daa    
  41a713:	push   ebx
  41a714:	mov    cs,WORD PTR [ebx+0x5c1ddfcf]
  41a71a:	daa    
  41a71b:	test   al,0xe2
  41a71d:	xchg   esp,eax
  41a71e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a71f:	and    al,0x30
  41a721:	leave  
  41a722:	icebp  
  41a723:	mov    edi,0xebdb9bfb
  41a728:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a72a:	push   0x6d77fbc2
  41a72f:	std    
  41a730:	push   edi
  41a731:	ds mov edi,0x4f55471
  41a737:	addr16 icebp 
  41a739:	lock fst QWORD PTR cs:[ebp+0x7]
  41a73f:	mov    ds:0x7a509cf,eax
  41a744:	or     bl,bl
  41a746:	adc    DWORD PTR [ebx+0x2d],esp
  41a749:	xchg   edx,eax
  41a74a:	call   0x728a:0x34450431
  41a751:	push   esp
  41a752:	adc    bl,BYTE PTR [edx+0x1e]
  41a755:	mul    DWORD PTR [esi-0x1d]
  41a758:	dec    ecx
  41a759:	mov    edx,0x9d2c9b6b
  41a75e:	in     al,dx
  41a75f:	aas    
  41a760:	sub    ch,BYTE PTR [edi+ecx*8]
  41a763:	icebp  
  41a764:	adc    al,0x3f
  41a766:	call   0xddae:0xaa673b86
  41a76d:	inc    esi
  41a76e:	out    0x27,al
  41a770:	nop
  41a771:	fadd   QWORD PTR [esi+0x74]
  41a774:	aaa    
  41a775:	popa   
  41a776:	xor    al,0x30
  41a778:	xor    al,0x5e
  41a77a:	leave  
  41a77b:	inc    ecx
  41a77c:	mov    al,0x65
  41a77e:	cmp    dl,BYTE PTR [ecx+ebp*1+0x55ab924a]
  41a785:	les    ecx,FWORD PTR [esi]
  41a787:	pop    ss
  41a788:	or     ah,BYTE PTR [esi]
  41a78a:	dec    esp
  41a78b:	add    BYTE PTR [ebp+0x7],ch
  41a78e:	push   ss
  41a78f:	ins    DWORD PTR es:[edi],dx
  41a790:	jmp    0x41a80d
  41a792:	rol    edx,1
  41a794:	cmp    bh,BYTE PTR [esi-0x5b]
  41a797:	lods   eax,DWORD PTR ds:[esi]
  41a798:	mov    WORD PTR [edx+edi*1],gs
  41a79b:	add    DWORD PTR [esi],0x8522993d
  41a7a1:	and    dh,BYTE PTR [esi-0x41ac8038]
  41a7a7:	js     0x41a803
  41a7a9:	pcmpgtd mm6,QWORD PTR [ebx+esi*1+0x35f09c78]
  41a7b1:	push   esi
  41a7b2:	ss (bad) 
  41a7b5:	jb     0x41a816
  41a7b7:	in     al,0x16
  41a7b9:	icebp  
  41a7ba:	mov    ah,0x7e
  41a7bc:	leave  
  41a7bd:	dec    edx
  41a7be:	mov    eax,0xc00d34b8
  41a7c3:	sahf   
  41a7c4:	ds pop eax
  41a7c6:	ds xchg ebp,eax
  41a7c8:	and    al,0x20
  41a7ca:	inc    eax
  41a7cb:	out    0xe8,eax
  41a7cd:	loop   0x41a7f4
  41a7cf:	mov    eax,ds:0x3383ca48
  41a7d4:	imul   ebx,esi,0x7b
  41a7d7:	adc    ecx,DWORD PTR [edx+esi*8-0x5421c303]
  41a7de:	jge    0x41a7cd
  41a7e0:	sbb    BYTE PTR [eax-0x3e],0xe6
  41a7e4:	out    dx,al
  41a7e5:	fiadd  DWORD PTR [ebp+ecx*1-0x36]
  41a7e9:	xchg   ebx,eax
  41a7ea:	das    
  41a7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ec:	add    BYTE PTR [ecx-0x46],dh
  41a7ef:	mov    ah,0xbd
  41a7f1:	and    ecx,DWORD PTR [edi+0x4e]
  41a7f4:	jl     0x41a819
  41a7f6:	repnz bound ebp,QWORD PTR [esi+0x14]
  41a7fa:	xor    eax,0x271e23a0
  41a7ff:	outs   dx,BYTE PTR ds:[esi]
  41a800:	jge    0x41a7bb
  41a802:	jecxz  0x41a80b
  41a804:	mov    edx,0x366517c0
  41a809:	pop    eax
  41a80a:	scas   eax,DWORD PTR es:[edi]
  41a80b:	push   esi
  41a80c:	or     BYTE PTR [edx],cl
  41a80e:	leave  
  41a80f:	enter  0xb228,0x1c
  41a813:	sti    
  41a814:	out    dx,al
  41a815:	sbb    al,0x70
  41a817:	stc    
  41a818:	(bad)  
  41a819:	fisttp WORD PTR cs:[ebx-0x78]
  41a81d:	or     DWORD PTR [edi-0x15c94a03],ebp
  41a823:	push   ds
  41a824:	repz test esp,ecx
  41a827:	hlt    
  41a828:	daa    
  41a829:	rol    BYTE PTR [edi],1
  41a82b:	xor    BYTE PTR [ebx-0x7bec8b91],0xa
  41a832:	jmp    0xb8c4:0x6adb354e
  41a839:	sub    ebx,DWORD PTR [ebp+ebp*1-0xa]
  41a83d:	out    dx,eax
  41a83e:	pop    eax
  41a83f:	cwde   
  41a840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a841:	pushf  
  41a842:	cmp    al,0x6
  41a844:	sub    eax,DWORD PTR [ebx+0x1ee5020d]
  41a84a:	fidiv  DWORD PTR [ebp-0x3f7f4cd6]
  41a850:	xor    ch,bh
  41a852:	mov    edi,?
  41a854:	into   
  41a855:	xchg   cl,bh
  41a857:	push   ebp
  41a858:	das    
  41a859:	lods   eax,DWORD PTR ds:[esi]
  41a85a:	aam    0xa0
  41a85c:	addr16 cmp al,0xed
  41a85f:	repz inc ecx
  41a861:	int    0xce
  41a863:	push   cs
  41a864:	xor    ah,0xa9
  41a867:	retf   0x5bde
  41a86a:	dec    ebp
  41a86b:	push   ebx
  41a86c:	dec    ecx
  41a86d:	mov    ch,0x2d
  41a86f:	ret    
  41a870:	or     DWORD PTR [esi],ecx
  41a872:	repnz cdq 
  41a874:	cmp    cl,0xb1
  41a877:	add    ch,dh
  41a879:	loopne 0x41a84a
  41a87b:	mov    ?,WORD PTR [eax]
  41a87d:	scas   eax,DWORD PTR es:[edi]
  41a87e:	jo     0x41a85e
  41a880:	lds    edx,FWORD PTR [edx-0x7f5433fb]
  41a886:	mov    al,0x61
  41a888:	test   esp,eax
  41a88a:	cmp    dl,al
  41a88c:	or     eax,DWORD PTR [eax]
  41a88e:	xchg   edi,eax
  41a88f:	ins    DWORD PTR es:[edi],dx
  41a890:	mov    esi,0xe8c7e170
  41a895:	sub    eax,0x89924a3c
  41a89a:	fidivr WORD PTR [esi-0x7a01b9de]
  41a8a0:	or     eax,DWORD PTR [esi]
  41a8a2:	mov    cl,0x2c
  41a8a4:	loopne 0x41a841
  41a8a6:	icebp  
  41a8a7:	sbb    BYTE PTR [edi],dl
  41a8a9:	scas   al,BYTE PTR es:[edi]
  41a8aa:	dec    esp
  41a8ab:	mov    esp,0x86ff9c3
  41a8b0:	cmp    edx,DWORD PTR [ebx+0x14ddc68e]
  41a8b6:	inc    ecx
  41a8b7:	cmc    
  41a8b8:	jbe    0x41a8c8
  41a8ba:	mov    ds:0xa52c1488,al
  41a8bf:	xor    BYTE PTR [ebp-0xc],0xeb
  41a8c3:	shr    bh,1
  41a8c5:	jge    0x41a884
  41a8c7:	dec    esi
  41a8c8:	inc    edi
  41a8c9:	scas   eax,DWORD PTR es:[edi]
  41a8ca:	sbb    eax,0xfb999d2c
  41a8cf:	sbb    eax,0x57052cda
  41a8d4:	mov    ecx,0x57fba289
  41a8d9:	cmp    eax,0x4b6bbe91
  41a8de:	jmp    DWORD PTR [esp+ebp*2-0xb0cf9b6]
  41a8e5:	fistp  DWORD PTR [eax+0x1f]
  41a8e8:	out    0xd8,al
  41a8ea:	jg     0x41a958
  41a8ec:	mov    edi,0xbbb9237b
  41a8f1:	mov    dh,0xe5
  41a8f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8f4:	outs   dx,DWORD PTR ds:[esi]
  41a8f5:	rcl    DWORD PTR [edi],1
  41a8f7:	rcr    DWORD PTR [ecx+0x7],1
  41a8fa:	sbb    BYTE PTR [esi-0x35a4f1d3],dh
  41a900:	inc    ebx
  41a901:	in     eax,0xf
  41a903:	xlat   BYTE PTR ds:[ebx]
  41a904:	and    BYTE PTR [edi-0x1b],bl
  41a907:	out    dx,al
  41a908:	pop    ecx
  41a909:	leave  
  41a90a:	shl    BYTE PTR [ebx-0x19],1
  41a90d:	scas   al,BYTE PTR es:[edi]
  41a90e:	fwait
  41a90f:	xor    esi,DWORD PTR [ecx-0x26]
  41a912:	(bad)  
  41a913:	xchg   edi,eax
  41a914:	clc    
  41a915:	adc    ecx,DWORD PTR [esi-0x5b3ed6e1]
  41a91b:	daa    
  41a91c:	cbw    
  41a91e:	adc    ebp,DWORD PTR [ebp-0x28024e8a]
  41a924:	fild   WORD PTR [ebx-0x75a72467]
  41a92a:	add    eax,0x369b9910
  41a92f:	ins    BYTE PTR es:[edi],dx
  41a930:	call   0xe9dd194a
  41a935:	idiv   DWORD PTR [ebx]
  41a937:	mov    ecx,0x903d7de8
  41a93c:	aas    
  41a93d:	jmp    0x471d92c3
  41a942:	push   esp
  41a943:	std    
  41a944:	adc    esi,DWORD PTR [ecx]
  41a946:	sub    edx,esp
  41a948:	push   edi
  41a949:	fs test eax,0xbc7a74a3
  41a94f:	add    BYTE PTR [eax],cl
  41a951:	mov    ch,0x95
  41a953:	add    eax,0xdac77fac
  41a958:	xor    eax,0xbf5e9cf5
  41a95d:	arpl   WORD PTR [ecx+0x5],di
  41a960:	inc    esp
  41a961:	ins    BYTE PTR es:[edi],dx
  41a962:	push   es
  41a963:	nop
  41a964:	dec    eax
  41a965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a966:	add    eax,0x4071732e
  41a96b:	push   es
  41a96c:	push   ebp
  41a96d:	repnz outs dx,BYTE PTR ds:[esi]
  41a96f:	mov    ds:0x90c6978,eax
  41a974:	lods   al,BYTE PTR ds:[esi]
  41a975:	lahf   
  41a976:	jae    0x41a92a
  41a978:	sub    esi,eax
  41a97a:	aaa    
  41a97b:	aad    0x86
  41a97d:	ins    DWORD PTR es:[edi],dx
  41a97e:	jnp    0x41a9a8
  41a980:	lock neg BYTE PTR ds:[edx]
  41a984:	xchg   ecx,eax
  41a985:	dec    eax
  41a986:	adc    BYTE PTR [ebp-0x68],0xfe
  41a98a:	jo     0x41a9e8
  41a98c:	sahf   
  41a98d:	cmp    eax,0x12322622
  41a992:	shr    BYTE PTR [edx],1
  41a994:	test   eax,0x891db463
  41a999:	fsubr  QWORD PTR ds:0xe4652313
  41a99f:	mov    ds:0x7b127f5b,eax
  41a9a4:	jge    0x41a978
  41a9a6:	xchg   ebp,eax
  41a9a7:	popa   
  41a9a8:	rol    BYTE PTR [eax+0xf],cl
  41a9ab:	pop    ss
  41a9ac:	gs inc edx
  41a9ae:	jb     0x41aa08
  41a9b0:	cs add eax,0x2bbcf5e5
  41a9b6:	jne    0x41a9c2
  41a9b8:	push   ss
  41a9b9:	mov    esi,0x4403f9ac
  41a9be:	in     al,0x56
  41a9c0:	jmp    0x41a99d
  41a9c2:	mov    dl,0x34
  41a9c4:	dec    eax
  41a9c5:	out    0x49,al
  41a9c7:	mov    al,0xb5
  41a9c9:	dec    BYTE PTR [edi+0x2857d6d6]
  41a9cf:	add    BYTE PTR [ecx+0x2e0a00a3],ah
  41a9d5:	sbb    cl,BYTE PTR [ebx-0x3d1105d8]
  41a9db:	into   
  41a9dc:	shr    DWORD PTR [esi],0xf0
  41a9df:	imul   esp,DWORD PTR ds:0xf4fec586,0x3d
  41a9e6:	sub    ebp,edi
  41a9e8:	or     al,0xec
  41a9ea:	inc    ebx
  41a9eb:	div    DWORD PTR [ebx]
  41a9ed:	aad    0xac
  41a9ef:	loope  0x41a97e
  41a9f1:	pop    edx
  41a9f2:	inc    esi
  41a9f3:	rcl    BYTE PTR [ebp+0xd5e1916],1
  41a9f9:	loope  0x41aa53
  41a9fb:	aam    0xe5
  41a9fd:	xor    DWORD PTR [eax-0x2284ded8],esi
  41aa03:	cmp    ebx,eax
  41aa05:	rcr    BYTE PTR [ebx+0x7edf2f36],cl
  41aa0b:	lods   eax,DWORD PTR ds:[esi]
  41aa0c:	es iret 
  41aa0e:	mov    dl,ah
  41aa10:	jnp    0x41a9cb
  41aa12:	xchg   edx,eax
  41aa13:	sbb    al,0xe0
  41aa15:	lods   al,BYTE PTR ds:[esi]
  41aa16:	lea    eax,[ecx+0x7f]
  41aa19:	jl     0x41a9c2
  41aa1b:	and    bl,BYTE PTR [edx]
  41aa1d:	xor    eax,0x28eaf918
  41aa22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa23:	ins    BYTE PTR es:[edi],dx
  41aa24:	adc    ah,BYTE PTR [ebp+0x4e971a90]
  41aa2a:	fdivr  DWORD PTR [ecx-0x46]
  41aa2d:	sti    
  41aa2e:	rcr    DWORD PTR [eax+0x75],0x84
  41aa32:	pop    esp
  41aa33:	add    edx,DWORD PTR [ebx-0x6bbae50f]
  41aa39:	mov    ebx,0xde51b6e1
  41aa3e:	(bad)  
  41aa3f:	jmp    0xfb81:0x285067e0
  41aa46:	mov    ebp,0x412ad4db
  41aa4b:	jnp    0x41aaa7
  41aa4d:	je     0x41a9f9
  41aa4f:	sar    esi,1
  41aa51:	push   cs
  41aa52:	mov    edx,0x807d864f
  41aa57:	sar    BYTE PTR [ebp+0x3b],cl
  41aa5a:	retf   
  41aa5b:	push   esp
  41aa5c:	out    dx,al
  41aa5d:	mov    cl,0x21
  41aa5f:	mov    DWORD PTR [esi+0x2d],esp
  41aa62:	mov    DWORD PTR ds:0xcca43d6c,esp
  41aa68:	push   ds
  41aa69:	hlt    
  41aa6a:	retf   
  41aa6b:	push   eax
  41aa6c:	lods   al,BYTE PTR ds:[esi]
  41aa6d:	out    dx,al
  41aa6e:	and    BYTE PTR [eax+0x9],cl
  41aa71:	loope  0x41aa7a
  41aa73:	out    0x1d,al
  41aa75:	jae    0x41aaea
  41aa77:	mov    ds:0x9a72fb78,eax
  41aa7c:	push   0xe1461f65
  41aa81:	icebp  
  41aa82:	loop   0x41aaf9
  41aa84:	bound  esi,QWORD PTR [eax]
  41aa86:	pop    eax
  41aa87:	inc    esp
  41aa88:	and    DWORD PTR [eax-0x3fe21059],esi
  41aa8e:	scas   eax,DWORD PTR es:[edi]
  41aa8f:	pop    eax
  41aa90:	pop    esp
  41aa91:	cmp    eax,DWORD PTR [eax-0x2e]
  41aa94:	push   esi
  41aa95:	into   
  41aa96:	xchg   ebx,eax
  41aa97:	cdq    
  41aa98:	inc    ecx
  41aa99:	(bad)  
  41aa9b:	ss out dx,eax
  41aa9d:	jmp    0x8365:0x8e19baea
  41aaa4:	jle    0x41aa61
  41aaa6:	test   BYTE PTR [ebp-0x536b7b54],bh
  41aaac:	fadd   QWORD PTR [esi+0x27618320]
  41aab2:	in     eax,0x9e
  41aab4:	inc    edx
  41aab5:	out    dx,al
  41aab6:	push   cs
  41aab7:	push   cs
  41aab8:	adc    al,0xb6
  41aaba:	rol    dl,0x38
  41aabd:	adc    DWORD PTR [esi],eax
  41aabf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aac0:	mov    es,WORD PTR [esp+edi*4+0x1c010292]
  41aac7:	ins    DWORD PTR es:[edi],dx
  41aac8:	push   ebp
  41aac9:	test   BYTE PTR [edi+edx*4],0x77
  41aacd:	xchg   DWORD PTR [edi+0x4e],ecx
  41aad0:	addr16 (bad) 
  41aad2:	cli    
  41aad3:	popf   
  41aad4:	loop   0x41aaa8
  41aad6:	adc    eax,0xfe6a6f76
  41aadb:	(bad)  
  41aadc:	xchg   edi,eax
  41aadd:	mov    eax,ds:0xd8d86606
  41aae2:	in     al,0xd5
  41aae4:	push   edi
  41aae5:	sti    
  41aae6:	or     BYTE PTR [ebx+eiz*4],dl
  41aae9:	dec    ebp
  41aaea:	xor    ecx,DWORD PTR [edx+edi*4-0x1b]
  41aaee:	sub    eax,0xcf0d73f5
  41aaf3:	mov    esp,0x770edae9
  41aaf8:	pop    ss
  41aaf9:	outs   dx,BYTE PTR ds:[esi]
  41aafa:	sbb    eax,0x4aadb59a
  41aaff:	outs   dx,DWORD PTR ds:[esi]
  41ab00:	je     0x41aacc
  41ab02:	loope  0x41ab21
  41ab04:	(bad)  
  41ab06:	je     0x41aaa8
  41ab08:	scas   eax,DWORD PTR es:[edi]
  41ab09:	sub    ch,BYTE PTR [esp+ebp*4-0x49ab3755]
  41ab10:	dec    edx
  41ab11:	sub    al,0xaf
  41ab13:	pop    ds
  41ab14:	inc    eax
  41ab15:	int3   
  41ab16:	fld    TBYTE PTR [eax+eiz*4]
  41ab19:	fsubr  QWORD PTR [eax-0x33b70aa8]
  41ab1f:	mov    ebx,0x4889ff84
  41ab24:	fsubr  QWORD PTR [ecx+0x7bc9e3f8]
  41ab2a:	in     eax,dx
  41ab2b:	sbb    edi,DWORD PTR [ebp+0x150c57e]
  41ab31:	imul   DWORD PTR ds:[esi+0x4c]
  41ab35:	jmp    0x41ab1f
  41ab37:	data16 (bad) 
  41ab39:	sti    
  41ab3a:	repnz sub ah,BYTE PTR [edi+0x138cc2f9]
  41ab41:	ss push ebx
  41ab43:	jne    0x41aaff
  41ab45:	jo     0x41ab9f
  41ab47:	cmc    
  41ab48:	leave  
  41ab49:	addr16 and eax,0x98e50c61
  41ab4f:	es jmp 0x7436:0x23a1
  41ab56:	idiv   BYTE PTR [ebp-0x66]
  41ab59:	jmp    0x9563:0xc9e7e08a
  41ab60:	hlt    
  41ab61:	int3   
  41ab62:	(bad)  
  41ab63:	cmp    eax,0xa165bc7
  41ab68:	push   ecx
  41ab69:	or     DWORD PTR [edi-0x719b209a],esi
  41ab6f:	and    BYTE PTR [eax+0x34],cl
  41ab72:	out    0x48,al
  41ab74:	out    dx,eax
  41ab75:	mov    esp,DWORD PTR [ecx]
  41ab77:	push   cs
  41ab78:	ror    DWORD PTR [esi-0x45bef619],cl
  41ab7e:	fwait
  41ab7f:	dec    ebx
  41ab80:	cmp    bl,cl
  41ab82:	push   eax
  41ab83:	mov    bl,0x95
  41ab85:	sub    DWORD PTR [ebx+0x5c],edi
  41ab88:	xor    dl,BYTE PTR es:[edx]
  41ab8b:	adc    DWORD PTR [ebx+0x6fde9fc9],edx
  41ab91:	mov    edx,ds
  41ab93:	cmp    al,0x6a
  41ab95:	mov    al,BYTE PTR [eax+edi*8+0x70bd9be5]
  41ab9c:	sbb    eax,0x6bd3aa0d
  41aba1:	nop
  41aba2:	int    0xd8
  41aba4:	dec    edi
  41aba5:	(bad)  
  41aba6:	in     al,dx
  41aba7:	jbe    0x41ab64
  41aba9:	xor    al,BYTE PTR [esi+ebx*1-0x78e9586a]
  41abb0:	adc    ebp,DWORD PTR [ecx]
  41abb2:	jne    0x41ac0b
  41abb4:	push   ecx
  41abb5:	jno    0x41ac08
  41abb7:	mov    ebp,DWORD PTR [edx+0x43f4db06]
  41abbd:	jmp    0xf9a19cb3
  41abc2:	dec    esi
  41abc3:	cwde   
  41abc4:	cld    
  41abc5:	lahf   
  41abc6:	pushf  
  41abc7:	test   al,0x8c
  41abc9:	pop    ebx
  41abca:	cmp    eax,0xbb228045
  41abcf:	cmp    al,BYTE PTR [ecx-0x6ab53688]
  41abd5:	cld    
  41abd6:	inc    edi
  41abd7:	dec    esi
  41abd8:	retf   0x4616
  41abdb:	(bad)  
  41abdc:	repnz pop es
  41abde:	jbe    0x41aba4
  41abe0:	and    eax,0x475bd32f
  41abe5:	call   0xc5fef1b9
  41abea:	dec    esi
  41abeb:	test   DWORD PTR [edi],ebx
  41abed:	lods   eax,DWORD PTR ds:[esi]
  41abee:	xchg   ebp,eax
  41abef:	pop    esi
  41abf0:	mov    ah,0x6a
  41abf2:	mov    cl,0x85
  41abf4:	add    ecx,0xb7a610b2
  41abfa:	sar    BYTE PTR [edi-0x492d97fc],0xcd
  41ac01:	rcl    ebx,1
  41ac03:	xor    al,0x2
  41ac05:	push   esp
  41ac06:	popa   
  41ac07:	lahf   
  41ac08:	fdivr  QWORD PTR [edi+0x7a]
  41ac0b:	dec    edi
  41ac0c:	and    dh,bh
  41ac0e:	or     dl,BYTE PTR [ebx]
  41ac10:	stos   DWORD PTR es:[edi],eax
  41ac11:	fistp  WORD PTR [esp+ebx*8]
  41ac14:	retf   0x2380
  41ac17:	in     al,0x88
  41ac19:	adc    BYTE PTR [ebx],cl
  41ac1b:	jg     0x41ac33
  41ac1d:	mov    ch,ah
  41ac1f:	sbb    eax,0x385d8b4f
  41ac24:	cdq    
  41ac25:	mov    esp,DWORD PTR [eax]
  41ac27:	or     DWORD PTR [eax],esi
  41ac29:	lods   al,BYTE PTR ds:[esi]
  41ac2a:	adc    esp,DWORD PTR ds:0x41a86646
  41ac30:	inc    ebp
  41ac31:	jns    0x41abcc
  41ac33:	pop    ebp
  41ac34:	mov    bh,0xf0
  41ac36:	sbb    al,0x13
  41ac38:	loop   0x41acaf
  41ac3a:	outs   dx,BYTE PTR ds:[esi]
  41ac3b:	pop    ebx
  41ac3c:	and    BYTE PTR [esi],0xd1
  41ac3f:	mov    edx,0xe0df7b3b
  41ac44:	mov    cl,0xe1
  41ac46:	mov    edi,0x96192162
  41ac4b:	sbb    esi,DWORD PTR [edi+0x46]
  41ac4e:	mov    WORD PTR [ecx+0x876dbcf],ds
  41ac54:	rcr    dl,0xb0
  41ac57:	js     0x41abef
  41ac59:	js     0x41acb7
  41ac5b:	sub    DWORD PTR [esi],eax
  41ac5d:	mov    ss,WORD PTR [esi-0x6c13f7a2]
  41ac63:	fsubr  DWORD PTR [eax+0x7c]
  41ac66:	adc    al,0x3c
  41ac68:	dec    edx
  41ac69:	jno    0x41abfc
  41ac6b:	repnz sub DWORD PTR [edx-0x15],0x27c6daa1
  41ac73:	mov    eax,0x4223d403
  41ac78:	mov    edi,0x37b46677
  41ac7d:	iret   
  41ac7e:	sub    BYTE PTR [edx-0x6caf9a64],0x5e
  41ac85:	in     al,dx
  41ac86:	ds sahf 
  41ac88:	adc    DWORD PTR [edx+ecx*2-0x6],0xffffffc8
  41ac8d:	in     al,dx
  41ac8e:	cmp    eax,DWORD PTR [esi+0x5e]
  41ac91:	pop    ebp
  41ac92:	push   eax
  41ac93:	stos   BYTE PTR es:[edi],al
  41ac94:	cmp    ah,BYTE PTR [ebx+eiz*8]
  41ac97:	adc    DWORD PTR [eax-0x2d],0x60
  41ac9b:	cmp    eax,ebx
  41ac9d:	addr16 push 0x2f
  41aca0:	mov    bh,0x6d
  41aca2:	iret   
  41aca3:	not    BYTE PTR [edi-0x3624c902]
  41aca9:	stos   DWORD PTR es:[edi],eax
  41acaa:	das    
  41acab:	add    al,0xcb
  41acad:	fisttp QWORD PTR [ebp-0x16]
  41acb0:	jle    0x41ad0f
  41acb2:	push   esp
  41acb3:	jns    0x41ad19
  41acb5:	push   eax
  41acb6:	retf   0xe169
  41acb9:	mov    al,ch
  41acbb:	or     DWORD PTR fs:[ecx],ecx
  41acbe:	mov    bh,0xd9
  41acc0:	and    DWORD PTR [ecx],eax
  41acc2:	and    al,0xd9
  41acc4:	push   esp
  41acc5:	int3   
  41acc6:	jns    0x41ad3d
  41acc8:	mov    eax,0x18752064
  41accd:	in     eax,dx
  41acce:	stos   DWORD PTR es:[edi],eax
  41accf:	sub    BYTE PTR [edi+eax*4-0x2d5283f2],bh
  41acd6:	mov    esi,0x9859109c
  41acdc:	pop    edi
  41acdd:	mov    esp,0x6e17cf42
  41ace2:	out    dx,al
  41ace3:	jb     0x41ad3f
  41ace5:	(bad)  
  41ace6:	fmul   QWORD PTR [edi+edx*4]
  41ace9:	pop    edx
  41acea:	mov    dh,BYTE PTR fs:[esi+0x4debf2d6]
  41acf1:	xchg   edi,eax
  41acf2:	xchg   ebx,eax
  41acf3:	xchg   esi,eax
  41acf4:	sbb    cl,dl
  41acf6:	jae    0x41ad01
  41acf8:	push   edi
  41acf9:	popf   
  41acfa:	cmp    BYTE PTR [eax*8+0x4a13d05b],0x39
  41ad02:	mov    al,ds:0x1f166236
  41ad07:	nop
  41ad08:	xchg   edx,eax
  41ad09:	adc    eax,0x5e8bba04
  41ad0e:	das    
  41ad0f:	shl    DWORD PTR [ecx-0x1d2f4443],1
  41ad15:	cld    
  41ad16:	add    eax,0xb7b7a044
  41ad1b:	xchg   ebx,eax
  41ad1c:	inc    eax
  41ad1d:	jns    0x41ace1
  41ad1f:	pop    esp
  41ad20:	sti    
  41ad21:	dec    eax
  41ad22:	and    ah,BYTE PTR [eax-0x6d7ddc2d]
  41ad28:	pop    ecx
  41ad29:	jp     0x41ad56
  41ad2b:	xchg   ebp,eax
  41ad2c:	mov    ch,0x5b
  41ad2e:	jp     0x41acef
  41ad30:	xchg   edx,eax
  41ad31:	cdq    
  41ad32:	and    al,0xb0
  41ad34:	popf   
  41ad35:	iret   
  41ad36:	dec    ebp
  41ad37:	(bad)  
  41ad38:	out    dx,eax
  41ad39:	adc    edx,DWORD PTR [esi-0xe]
  41ad3c:	xchg   edx,eax
  41ad3d:	ss pop edi
  41ad3f:	adc    eax,0xb856279
  41ad44:	inc    edx
  41ad45:	stos   DWORD PTR es:[edi],eax
  41ad46:	xor    al,0x47
  41ad48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad49:	(bad)  
  41ad4a:	xor    BYTE PTR [edi],bl
  41ad4c:	sub    dl,dl
  41ad4e:	rcr    esp,0xec
  41ad51:	sbb    ebp,DWORD PTR [edx+esi*4-0x6fa56f42]
  41ad58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad59:	cld    
  41ad5a:	ret    
  41ad5b:	dec    BYTE PTR [esi-0x5fb4c759]
  41ad61:	in     eax,0xdc
  41ad63:	or     al,0xdb
  41ad65:	daa    
  41ad66:	test   DWORD PTR [eax-0x6d438bfb],ebx
  41ad6c:	jg     0x41ad4c
  41ad6e:	aaa    
  41ad6f:	mov    ebx,0xe18edadf
  41ad74:	(bad)  
  41ad75:	dec    esi
  41ad76:	fst    QWORD PTR [edx+eiz*8-0x4334c640]
  41ad7d:	mov    ecx,0x7c7adc33
  41ad82:	cmc    
  41ad83:	sub    esp,ebx
  41ad85:	sub    dh,BYTE PTR [ebp+0x100dee1]
  41ad8b:	or     ecx,DWORD PTR [ecx+0x1ffae8ce]
  41ad91:	test   al,0xc7
  41ad93:	mov    ds:0x2030843f,al
  41ad98:	fst    DWORD PTR [edi-0x40]
  41ad9b:	pop    edi
  41ad9c:	lea    ebp,[ebx-0x69433d26]
  41ada2:	retf   
  41ada3:	add    eax,0x617138d6
  41ada8:	xor    DWORD PTR [eax-0x6e],esi
  41adab:	inc    ebp
  41adac:	ins    DWORD PTR es:[edi],dx
  41adad:	inc    ebp
  41adae:	loop   0x41adbe
  41adb0:	aad    0x37
  41adb2:	rol    DWORD PTR [edx],cl
  41adb4:	(bad)  
  41adb5:	mov    edi,0x144ea958
  41adba:	fistp  WORD PTR [edx-0x3e]
  41adbd:	rol    dl,cl
  41adbf:	fmulp  st(5),st
  41adc1:	sub    al,0xe0
  41adc3:	imul   ebp,DWORD PTR [ebx+0x56],0xf2480529
  41adca:	stos   DWORD PTR es:[edi],eax
  41adcb:	pushf  
  41adcc:	inc    edx
  41adcd:	out    dx,al
  41adce:	out    dx,eax
  41adcf:	int3   
  41add0:	cdq    
  41add1:	cld    
  41add2:	in     al,dx
  41add3:	push   cs
  41add4:	mov    bh,0x8b
  41add6:	or     DWORD PTR [edx],ebp
  41add8:	pop    ebp
  41add9:	push   ecx
  41adda:	mov    BYTE PTR [esi-0x611c8ead],ah
  41ade0:	not    BYTE PTR [edi+0x7e310319]
  41ade6:	popf   
  41ade7:	stc    
  41ade8:	mov    dl,cl
  41adea:	xchg   esp,eax
  41adeb:	push   edi
  41adec:	add    BYTE PTR [ebx],bl
  41adee:	iret   
  41adef:	scas   al,BYTE PTR es:[edi]
  41adf0:	sbb    eax,0x2de3575f
  41adf5:	sbb    ah,BYTE PTR [ebp-0x75]
  41adf8:	cmp    BYTE PTR [eax+0x672841ae],ch
  41adfe:	imul   ebx,DWORD PTR [eax+0x25],0x7fd2ff37
  41ae05:	dec    eax
  41ae06:	test   eax,0xe77c1d3f
  41ae0b:	add    edx,DWORD PTR [edi]
  41ae0d:	call   0x6a6d:0x7cfde029
  41ae14:	ins    BYTE PTR es:[edi],dx
  41ae15:	mov    edx,0xe86a7b61
  41ae1a:	pop    edx
  41ae1b:	cmp    eax,0x2f2bf879
  41ae20:	aad    0xcc
  41ae22:	nop
  41ae23:	aad    0x8a
  41ae25:	sub    ch,bl
  41ae27:	sub    dl,ah
  41ae29:	rcl    BYTE PTR [ebp-0x39119473],cl
  41ae2f:	ret    
  41ae30:	mov    edx,0x31399b98
  41ae35:	fcom   DWORD PTR [bp+si+0xf]
  41ae39:	jge    0x41ae46
  41ae3b:	mov    DWORD PTR [ecx],ebp
  41ae3d:	jl     0x41ae89
  41ae3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae40:	into   
  41ae41:	push   ebx
  41ae42:	pushf  
  41ae43:	(bad)  
  41ae44:	pushf  
  41ae45:	test   eax,0x48fb3ac0
  41ae4a:	in     eax,0x42
  41ae4c:	test   DWORD PTR cs:[edx+0x554248c2],ebx
  41ae53:	ret    
  41ae54:	(bad)  
  41ae55:	sub    edi,edi
  41ae57:	inc    ecx
  41ae58:	pop    ebx
  41ae59:	(bad)  
  41ae5c:	(bad)  
  41ae5d:	sbb    dh,ch
  41ae5f:	addr16 cdq 
  41ae61:	xchg   ebp,eax
  41ae62:	or     al,0xcb
  41ae64:	jno    0x41ae2f
  41ae66:	retf   0x43e2
  41ae69:	psubsw mm7,mm2
  41ae6c:	leavew 
  41ae6e:	cld    
  41ae6f:	das    
  41ae70:	div    DWORD PTR [esp+ebp*4+0x47d7aa92]
  41ae77:	pop    es
  41ae78:	push   ebp
  41ae79:	stos   DWORD PTR es:[edi],eax
  41ae7a:	ret    0xda9c
  41ae7d:	dec    ebp
  41ae7e:	loope  0x41aedd
  41ae80:	adc    BYTE PTR [ebx+0x53d4b080],0x12
  41ae87:	scas   al,BYTE PTR es:[edi]
  41ae88:	pop    eax
  41ae89:	fnsave [esi+0x631fbcf5]
  41ae8f:	push   0x1f
  41ae91:	ja     0x41aec1
  41ae93:	push   ss
  41ae94:	not    DWORD PTR [ecx-0x73]
  41ae97:	dec    eax
  41ae98:	int    0x0
  41ae9a:	gs dec esi
  41ae9c:	call   0x77de:0x4a400d76
  41aea3:	jb     0x41aeaf
  41aea5:	test   eax,0x7b43590b
  41aeaa:	adc    DWORD PTR [esi+eax*1-0x4b],edx
  41aeae:	pop    ecx
  41aeaf:	(bad)  
  41aeb0:	fadd   QWORD PTR [esi-0x3b25893a]
  41aeb6:	dec    ecx
  41aeb7:	xor    eax,0x4cb50f0e
  41aebc:	pop    edi
  41aebd:	std    
  41aebe:	mov    edi,0x4881bc01
  41aec3:	stos   DWORD PTR es:[edi],eax
  41aec4:	push   ebx
  41aec5:	mov    ebp,0xacca77b8
  41aeca:	ins    DWORD PTR es:[edi],dx
  41aecb:	rcl    BYTE PTR [esi-0xb],0x9d
  41aecf:	call   0x6fb6:0xebe24b23
  41aed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed7:	or     bl,BYTE PTR [ebx+0x5b3fee80]
  41aedd:	aaa    
  41aede:	jae    0x41af30
  41aee0:	mov    esp,0xb7acaa26
  41aee5:	sub    al,0x12
  41aee7:	aas    
  41aee8:	pop    edi
  41aee9:	dec    ecx
  41aeea:	jno    0x41af3d
  41aeec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeed:	mov    esp,0x16c6dccb
  41aef2:	xchg   ecx,eax
  41aef3:	fiadd  WORD PTR [edi-0x4bbbdade]
  41aef9:	fist   WORD PTR ds:0x27bcdc3
  41aeff:	scas   eax,DWORD PTR es:[edi]
  41af00:	popf   
  41af01:	mov    WORD PTR [ebx+0xec6b693],fs
  41af07:	repnz or al,0x43
  41af0a:	repnz mov ebp,0xe67300ce
  41af10:	mov    ecx,0xa0c2a08
  41af15:	fptan  
  41af17:	dec    esi
  41af18:	push   es
  41af19:	pop    esp
  41af1a:	jmp    0x41af07
  41af1c:	mov    esp,0xdf9d2f96
  41af21:	sbb    BYTE PTR [ebp-0x7],dl
  41af24:	in     al,0xd0
  41af26:	cmp    eax,0x80ee7d25
  41af2b:	fisttp DWORD PTR [edi+0x27]
  41af2e:	das    
  41af2f:	mov    cl,0xc2
  41af31:	add    eax,0xc49db63b
  41af36:	xor    al,0x3a
  41af38:	imul   eax,DWORD PTR [edi-0x41],0xffffffbe
  41af3c:	add    cl,al
  41af3e:	jle    0x41af91
  41af40:	mov    edx,0xfcece3f0
  41af45:	and    al,0x19
  41af47:	push   esp
  41af48:	adc    eax,ebx
  41af4a:	pushf  
  41af4b:	fwait
  41af4c:	or     dh,BYTE PTR [ebp-0x5]
  41af4f:	fs fwait
  41af51:	gs aad 0x1d
  41af54:	std    
  41af55:	xor    eax,esp
  41af57:	fisttp WORD PTR cs:[ebp+eiz*4-0x7b9a1239]
  41af5f:	push   edx
  41af60:	clc    
  41af61:	fdivr  QWORD PTR ds:0x6129c967
  41af67:	or     al,0x4a
  41af69:	lods   al,BYTE PTR ds:[esi]
  41af6a:	ja     0x41afc8
  41af6c:	cmp    esp,edx
  41af6e:	cli    
  41af6f:	je     0x41afef
  41af71:	xor    ebp,DWORD PTR [edi-0x41]
  41af74:	aam    0xd5
  41af76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af77:	dec    edi
  41af78:	or     eax,esp
  41af7a:	rol    DWORD PTR [esi-0x578102d8],0x44
  41af81:	dec    ebp
  41af82:	icebp  
  41af83:	mov    ds:0x958834fc,al
  41af88:	aaa    
  41af89:	ror    DWORD PTR [edi-0x15aa8e10],0xab
  41af90:	adc    dh,BYTE PTR [ecx]
  41af92:	xchg   esp,eax
  41af93:	push   ebx
  41af94:	mov    edx,0xe96d2f3
  41af99:	sbb    eax,0xe9b9fdcb
  41af9e:	dec    edx
  41af9f:	iret   
  41afa0:	adc    al,0x89
  41afa2:	test   al,0xf6
  41afa4:	mov    edx,0x35cd8fec
  41afa9:	sub    edx,DWORD PTR [ebp-0x100f3a6f]
  41afaf:	fidivr DWORD PTR [ebp-0x78ce23b9]
  41afb5:	cmp    bh,0x9
  41afb8:	push   ecx
  41afb9:	xor    ebx,eax
  41afbb:	adc    ah,0x3
  41afbe:	ins    DWORD PTR es:[edi],dx
  41afbf:	adc    esp,edx
  41afc1:	mov    ebx,0x13711d59
  41afc6:	push   eax
  41afc7:	(bad)  
  41afc8:	out    dx,al
  41afc9:	xchg   eax,ecx
  41afcb:	jb     0x41af6c
  41afcd:	fld    TBYTE PTR [ebx+esi*1-0x472806cd]
  41afd4:	mov    al,ds:0xa9a8573d
  41afd9:	sbb    al,0xfd
  41afdb:	mov    bl,0xc7
  41afdd:	xor    eax,0xa2f32ffa
  41afe2:	mov    bh,0x2
  41afe4:	xchg   esi,eax
  41afe5:	add    eax,0xc0d61431
  41afea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afeb:	fild   QWORD PTR [ecx+0x5716ab26]
  41aff1:	test   dl,bl
  41aff3:	sahf   
  41aff4:	jns    0x41afc7
  41aff6:	mov    edi,0x8d2b1dd3
  41affb:	das    
  41affc:	sbb    BYTE PTR [ebx],ch
  41affe:	rcl    DWORD PTR [edi-0x60],1
  41b001:	push   esi
  41b002:	push   edi
  41b003:	(bad)  
  41b004:	ret    
  41b005:	pop    esp
  41b006:	and    eax,0x47983d8b
  41b00b:	push   ss
  41b00c:	sbb    dh,bl
  41b00e:	mov    ds:0x37de2071,al
  41b013:	lods   eax,DWORD PTR ds:[esi]
  41b014:	xchg   ebx,eax
  41b015:	mov    ebp,0xee7fec54
  41b01a:	xor    ah,BYTE PTR [eax]
  41b01c:	push   ds
  41b01d:	les    edx,FWORD PTR [ebx-0x19]
  41b020:	push   0x33deddfa
  41b025:	xchg   edi,ebx
  41b027:	inc    ecx
  41b028:	fnstsw WORD PTR [esi]
  41b02a:	xchg   DWORD PTR [ebp-0x2e382a92],esi
  41b030:	and    edx,DWORD PTR [esi-0x77]
  41b033:	jp     0x41b002
  41b035:	aam    0x13
  41b037:	inc    edx
  41b038:	mov    esp,0xa89c91d4
  41b03d:	aas    
  41b03e:	fdiv   QWORD PTR [edx]
  41b040:	mov    DWORD PTR [edx+0x5],esi
  41b043:	xlat   BYTE PTR ds:[ebx]
  41b044:	mov    ?,WORD PTR [ebp-0x54]
  41b047:	mov    bh,0x3c
  41b049:	jl     0x41aff9
  41b04b:	cs and al,0xac
  41b04e:	cmp    bl,bh
  41b050:	enter  0x5bf4,0xb7
  41b054:	loopne 0x41b01e
  41b056:	test   al,0xab
  41b058:	lods   al,BYTE PTR ds:[esi]
  41b059:	mov    ds:0x6b6d59cf,al
  41b05e:	push   esp
  41b05f:	fisubr WORD PTR [ebp+0x33]
  41b062:	pop    ecx
  41b063:	jg     0x41b022
  41b065:	ins    DWORD PTR es:[edi],dx
  41b066:	and    DWORD PTR [edi+0x46],0xffffffec
  41b06a:	ss xor edx,ebp
  41b06d:	mov    ah,0xa4
  41b06f:	xchg   ecx,eax
  41b070:	sub    BYTE PTR ds:0xc5c964bd,0xae
  41b078:	sub    al,0x9b
  41b07a:	jnp    0x41b03b
  41b07c:	inc    eax
  41b07d:	push   es
  41b07e:	pusha  
  41b07f:	cmp    edi,ebp
  41b081:	and    ebx,DWORD PTR [ecx-0x6915d69e]
  41b087:	jo     0x41b0e0
  41b089:	test   BYTE PTR [esi-0x26],dl
  41b08c:	jno    0x41b028
  41b08e:	mov    al,0xa3
  41b090:	mov    edx,0x680bae3b
  41b095:	cmp    al,BYTE PTR [edx]
  41b097:	out    0x52,eax
  41b099:	cmp    esp,DWORD PTR [ecx-0x6673db50]
  41b09f:	aam    0xa1
  41b0a1:	mov    WORD PTR [eax],?
  41b0a3:	aad    0xa0
  41b0a5:	outs   dx,DWORD PTR ds:[esi]
  41b0a6:	xlat   BYTE PTR ds:[ebx]
  41b0a7:	push   edi
  41b0a8:	stc    
  41b0a9:	or     BYTE PTR [edx+ebx*2-0x6da0546d],ah
  41b0b0:	pop    esi
  41b0b1:	jge    0x41b082
  41b0b3:	dec    edx
  41b0b4:	hlt    
  41b0b5:	push   esp
  41b0b6:	mov    ebx,0x3379ba8d
  41b0bb:	in     eax,0x8b
  41b0bd:	(bad)  
  41b0be:	push   esp
  41b0bf:	loope  0x41b13d
  41b0c1:	push   cs
  41b0c2:	call   0x79075d60
  41b0c7:	lahf   
  41b0c8:	aam    0x14
  41b0ca:	popf   
  41b0cb:	inc    edx
  41b0cc:	inc    edi
  41b0cd:	lds    edx,FWORD PTR ds:0x879c43e9
  41b0d3:	out    0x18,al
  41b0d5:	enter  0xe7cd,0x1f
  41b0d9:	mov    fs,WORD PTR [edi+edx*2-0x77]
  41b0dd:	dec    esp
  41b0de:	mov    BYTE PTR ds:0x8236496a,dl
  41b0e4:	arpl   WORD PTR [eax+0x22826b0],di
  41b0ea:	shl    DWORD PTR [edi],0x6e
  41b0ed:	adc    al,0xca
  41b0ef:	retf   
  41b0f0:	(bad)  
  41b0f1:	push   edi
  41b0f2:	inc    ebx
  41b0f3:	jno    0x41b09f
  41b0f5:	inc    esi
  41b0f6:	leave  
  41b0f7:	add    BYTE PTR [eax+eiz*1+0x6f5d6965],ch
  41b0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ff:	adc    esi,DWORD PTR ds:0x90301dc
  41b105:	inc    ebp
  41b106:	jae    0x41b169
  41b108:	fwait
  41b109:	lds    edx,FWORD PTR [edx+0x6]
  41b10c:	hlt    
  41b10d:	js     0x41b129
  41b10f:	xchg   edx,eax
  41b110:	pop    ebp
  41b111:	mov    dh,0x66
  41b113:	cmp    eax,0x27d6b93d
  41b118:	or     bl,dh
  41b11a:	loopne 0x41b0e7
  41b11c:	lds    ecx,FWORD PTR [eax-0x581fac3c]
  41b122:	ret    0x2aeb
  41b125:	mov    eax,ds:0x26201f3
  41b12a:	sbb    al,0x70
  41b12c:	fbld   TBYTE PTR [eax+0x652efbaf]
  41b132:	and    eax,0xee65a952
  41b137:	sub    al,0xf1
  41b139:	ins    DWORD PTR es:[edi],dx
  41b13a:	sub    esp,DWORD PTR [eax+0x1b]
  41b13d:	inc    ebx
  41b13e:	(bad)  
  41b13f:	idiv   BYTE PTR [ebp-0x65871bd5]
  41b145:	arpl   si,sp
  41b147:	(bad)  
  41b148:	sahf   
  41b149:	xor    edx,DWORD PTR [edx-0x39]
  41b14c:	cwde   
  41b14d:	mov    BYTE PTR [ebp-0x468585df],ah
  41b153:	adc    BYTE PTR [edi+0x3],cl
  41b156:	push   edi
  41b157:	(bad)  
  41b158:	call   DWORD PTR [eax+eiz*4]
  41b15b:	int3   
  41b15c:	retf   0x5571
  41b15f:	or     al,0x1
  41b161:	sbb    DWORD PTR [ebp+0x20],eax
  41b164:	lahf   
  41b165:	repz mov ds:0x3dc37f40,eax
  41b16c:	and    BYTE PTR [edx+0x54],ah
  41b16f:	or     ebx,DWORD PTR [ebx-0x419c8e99]
  41b175:	jb     0x41b151
  41b177:	(bad)  
  41b178:	cmp    BYTE PTR [ebx-0x1a13eae2],dl
  41b17e:	adc    eax,0xb11c644b
  41b183:	enter  0xc1a4,0x61
  41b187:	out    dx,al
  41b188:	mov    DWORD PTR [ecx+0x6f],esi
  41b18b:	add    ebx,DWORD PTR [esi+0x88667dd]
  41b191:	ret    
  41b192:	(bad)  
  41b193:	adc    eax,0x179ced
  41b198:	push   ebp
  41b199:	data16 fsub DWORD PTR [edx+0x62]
  41b19d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b19e:	call   0xb2d7:0xb8088a90
  41b1a5:	mov    ?,WORD PTR [edi+eiz*2]
  41b1a8:	sub    BYTE PTR [esi-0x79],dh
  41b1ab:	jg     0x41b1b8
  41b1ad:	and    bl,BYTE PTR [edi-0x1dba1abf]
  41b1b3:	xchg   edi,eax
  41b1b4:	mov    esp,0x2747610c
  41b1b9:	inc    edi
  41b1ba:	sahf   
  41b1bb:	push   0xffffffdf
  41b1bd:	jnp    0x41b21c
  41b1bf:	mov    eax,cs
  41b1c1:	js     0x41b188
  41b1c3:	(bad)  
  41b1c5:	pushf  
  41b1c6:	mov    ch,dl
  41b1c8:	mov    esi,0x5091addb
  41b1cd:	xchg   esi,eax
  41b1ce:	mov    eax,0xb9f6bd0d
  41b1d3:	sub    esp,DWORD PTR [ecx+ecx*2+0x3d666f86]
  41b1da:	push   es
  41b1db:	push   edx
  41b1dc:	push   edx
  41b1dd:	push   edx
  41b1de:	jb     0x41b24d
  41b1e0:	xor    dh,BYTE PTR [esi-0x54]
  41b1e3:	adc    al,BYTE PTR [eax+0x27]
  41b1e6:	rcl    BYTE PTR [ebp+0x67984ae6],cl
  41b1ec:	mov    cl,0xf4
  41b1ee:	stc    
  41b1ef:	aaa    
  41b1f0:	xchg   edx,eax
  41b1f1:	or     BYTE PTR [ebx-0x1c],dh
  41b1f4:	or     al,0xe3
  41b1f6:	and    BYTE PTR [ebx],dh
  41b1f8:	add    ch,BYTE PTR [edi]
  41b1fa:	mov    ds:0x8abe9eed,al
  41b1ff:	in     eax,0xc6
  41b201:	and    cl,cl
  41b203:	bound  ecx,QWORD PTR [ebp-0x57]
  41b206:	mov    ecx,0xc35dc957
  41b20b:	out    dx,al
  41b20c:	pop    ecx
  41b20d:	test   DWORD PTR [esi-0x3f],ebp
  41b210:	les    ebp,FWORD PTR [esi+0x3f081a9b]
  41b216:	mov    edx,0x9a68a3d
  41b21b:	pop    ebx
  41b21c:	push   edi
  41b21d:	outs   dx,DWORD PTR ds:[esi]
  41b21e:	retf   0x9e27
  41b221:	retf   0xdd12
  41b224:	sub    edi,DWORD PTR [eax+0x5]
  41b227:	jmp    0xafa69275
  41b22c:	cmp    dh,bh
  41b22e:	retf   
  41b22f:	fidivr WORD PTR [edi+0x15cc5464]
  41b235:	mov    ebp,DWORD PTR [ecx]
  41b237:	aad    0x95
  41b239:	(bad)  
  41b23b:	cmp    eax,0x861e79cb
  41b240:	dec    ebp
  41b241:	jecxz  0x41b2b4
  41b243:	pop    edi
  41b244:	jbe    0x41b2a9
  41b246:	scas   eax,DWORD PTR es:[edi]
  41b247:	repnz add cl,bl
  41b24a:	cdq    
  41b24b:	retf   
  41b24c:	into   
  41b24d:	add    eax,0xb7fe98d6
  41b252:	adc    BYTE PTR [edi+0x7546550f],ah
  41b258:	mov    dh,bl
  41b25a:	dec    edx
  41b25b:	cmp    cl,BYTE PTR [eax-0x3186565d]
  41b261:	adc    al,0x95
  41b263:	jns    0x41b1f2
  41b265:	push   ss
  41b266:	jmp    0xa142:0xe9e5955
  41b26d:	jmp    0xb8c6:0x93649c68
  41b274:	mov    eax,0xe1224421
  41b279:	pop    ds
  41b27a:	xchg   ebx,eax
  41b27b:	and    eax,0x7bd42dc4
  41b280:	sbb    BYTE PTR [eax+0xc],cl
  41b283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b284:	xlat   BYTE PTR ds:[ebx]
  41b285:	pop    esi
  41b286:	imul   ebx,DWORD PTR [edx+eax*2-0x5f5b2b16],0xffffffb9
  41b28e:	xor    al,BYTE PTR [ebx]
  41b290:	ins    DWORD PTR es:[edi],dx
  41b291:	fstp   st(7)
  41b293:	call   0xceba895e
  41b298:	sbb    al,0x9e
  41b29a:	pop    ds
  41b29b:	inc    edi
  41b29c:	cmp    esi,DWORD PTR [esi]
  41b29e:	xor    esp,DWORD PTR [ebx+0x443bcf70]
  41b2a4:	imul   edi,esp,0x1e9aca53
  41b2aa:	inc    eax
  41b2ab:	int    0x21
  41b2ad:	or     eax,0x208c53dd
  41b2b2:	sub    DWORD PTR [ecx],eax
  41b2b4:	sar    al,cl
  41b2b6:	sub    dh,ah
  41b2b8:	mov    ebx,0xb28fa83b
  41b2bd:	ret    
  41b2be:	adc    DWORD PTR [ebp+0x1a],esi
  41b2c1:	call   0xd667:0x9ef52e58
  41b2c8:	adc    DWORD PTR [ecx+0x270e6d14],edi
  41b2ce:	dec    esi
  41b2cf:	inc    edx
  41b2d0:	sbb    ah,BYTE PTR [ebp+edi*2-0x62]
  41b2d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2d5:	in     eax,0xe5
  41b2d7:	ds jg  0x41b2bc
  41b2da:	adc    edi,eax
  41b2dc:	inc    edx
  41b2dd:	retf   
  41b2de:	div    esp
  41b2e0:	imul   eax,DWORD PTR ds:0x4fd8a0b0,0x6a
  41b2e7:	mov    ch,0xe5
  41b2e9:	jle    0x41b33f
  41b2eb:	and    ecx,DWORD PTR [edx-0x4]
  41b2ee:	scas   eax,DWORD PTR es:[edi]
  41b2ef:	fsub   DWORD PTR [ebp-0x79]
  41b2f2:	(bad)  
  41b2f3:	add    ebp,eax
  41b2f5:	dec    edx
  41b2f6:	jbe    0x41b350
  41b2f8:	dec    edi
  41b2f9:	stos   DWORD PTR es:[edi],eax
  41b2fa:	adc    al,0x36
  41b2fc:	fwait
  41b2fd:	xchg   ecx,eax
  41b2fe:	dec    eax
  41b2ff:	pop    eax
  41b300:	xchg   edi,eax
  41b301:	xor    esi,esp
  41b303:	mov    ds:0xb2d64d3d,al
  41b308:	dec    esp
  41b309:	push   0xffffff90
  41b30b:	inc    ebp
  41b30c:	ss ss (bad) 
  41b30f:	lock js 0x41b366
  41b312:	scas   eax,DWORD PTR es:[edi]
  41b313:	add    al,BYTE PTR [esi+0x14]
  41b316:	inc    ebx
  41b317:	push   0x4e749789
  41b31c:	xor    edx,edx
  41b31e:	push   cs
  41b31f:	retf   0xb532
  41b322:	loope  0x41b366
  41b324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b325:	jl     0x41b31d
  41b327:	xchg   ebp,eax
  41b328:	sbb    ah,al
  41b32a:	(bad)  
  41b32b:	int3   
  41b32c:	add    DWORD PTR [edi+esi*8-0x79a733d5],esp
  41b333:	pop    ebx
  41b334:	mov    ebx,0x471c5468
  41b339:	fcmovnbe st,st(6)
  41b33b:	arpl   WORD PTR [ecx],bp
  41b33d:	xchg   BYTE PTR [ebp-0x5],bl
  41b340:	xor    cl,bh
  41b342:	xor    bh,dh
  41b344:	sbb    esi,0xdfb484c2
  41b34a:	ins    DWORD PTR es:[edi],dx
  41b34b:	inc    edx
  41b34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b34d:	outs   dx,DWORD PTR ds:[esi]
  41b34e:	fabs   
  41b350:	iret   
  41b351:	ja     0x41b37d
  41b353:	mov    edx,0xa6c60c3e
  41b358:	fisub  WORD PTR [ebx+0x6]
  41b35b:	xor    DWORD PTR [eax-0x2198085a],ecx
  41b361:	das    
  41b362:	xchg   edx,eax
  41b363:	xchg   edi,eax
  41b364:	je     0x41b37e
  41b366:	and    al,0x62
  41b368:	stc    
  41b369:	das    
  41b36a:	fsub   st,st(7)
  41b36c:	cwde   
  41b36d:	je     0x41b32e
  41b36f:	dec    BYTE PTR [edx+0xb]
  41b372:	ret    
  41b373:	mov    eax,0xf2b279d9
  41b378:	sub    al,0x9b
  41b37a:	in     eax,dx
  41b37b:	jbe    0x41b344
  41b37d:	(bad)  [ecx+0x3595dfe6]
  41b383:	jle    0x41b3f3
  41b385:	push   edi
  41b386:	and    al,0x47
  41b388:	out    0x82,al
  41b38a:	inc    esi
  41b38b:	mov    edi,DWORD PTR [edi]
  41b38d:	enter  0xb372,0x45
  41b391:	cmp    DWORD PTR [ebx],esp
  41b393:	rol    BYTE PTR [eax-0x413c1eff],1
  41b399:	mov    ebp,0x9cdc35c
  41b39e:	and    al,0x59
  41b3a0:	and    eax,0x5769ec5c
  41b3a5:	sbb    BYTE PTR [eax+ebp*8+0x3ba5a784],ch
  41b3ac:	cmp    esi,DWORD PTR [edx]
  41b3ae:	dec    ebx
  41b3af:	lock ss pop esp
  41b3b2:	mov    eax,ds:0xd4b2ed18
  41b3b7:	push   ds
  41b3b8:	out    dx,al
  41b3b9:	mov    al,ds:0x46e61f6
  41b3be:	sub    DWORD PTR [ebx+0x48],esi
  41b3c1:	nop
  41b3c2:	push   ss
  41b3c3:	arpl   di,di
  41b3c5:	or     DWORD PTR [ebx-0x7],ebp
  41b3c8:	xor    eax,0xbf11f1dc
  41b3cd:	jno    0x41b442
  41b3cf:	push   0xfffffff5
  41b3d1:	in     eax,0x45
  41b3d3:	in     eax,0x4
  41b3d5:	adc    eax,0xc8c351be
  41b3da:	sub    BYTE PTR [esi-0x5],bh
  41b3dd:	sbb    dh,cl
  41b3df:	xchg   ah,bh
  41b3e1:	test   al,al
  41b3e3:	jne    0x41b3c2
  41b3e5:	stos   BYTE PTR es:[edi],al
  41b3e6:	aaa    
  41b3e7:	mov    bl,0x28
  41b3e9:	fist   DWORD PTR [edi]
  41b3eb:	mov    WORD PTR [ebx+0x46],cs
  41b3ee:	cmp    al,0x2b
  41b3f0:	out    dx,al
  41b3f1:	add    eax,0xe1894e6
  41b3f6:	aad    0x5c
  41b3f8:	jo     0x41b45e
  41b3fa:	outs   dx,DWORD PTR ds:[esi]
  41b3fb:	das    
  41b3fc:	sbb    cl,al
  41b3fe:	out    dx,eax
  41b3ff:	pop    edx
  41b400:	xor    cl,cl
  41b402:	rcl    BYTE PTR [ecx-0x4e334de9],cl
  41b408:	dec    edi
  41b409:	add    DWORD PTR [eax],edi
  41b40b:	shl    BYTE PTR [ecx+0x3bc4c8b9],cl
  41b411:	add    eax,0x7c2c867e
  41b416:	nop
  41b417:	imul   edx,ebx,0xa220025e
  41b41d:	xor    BYTE PTR [ebp+0x4c8e1d15],bh
  41b423:	cld    
  41b424:	out    dx,al
  41b425:	xchg   edi,eax
  41b426:	or     eax,0x5b6213d7
  41b42b:	cmp    eax,ebp
  41b42d:	push   0xe2de15f2
  41b432:	jae    0x41b49c
  41b434:	mov    ?,ecx
  41b436:	adc    DWORD PTR [esi+0x4fe9e461],0x42ec5c92
  41b440:	push   0xdb60150c
  41b445:	popa   
  41b446:	mov    ecx,0x95bfe09d
  41b44b:	dec    ebx
  41b44c:	or     al,0x27
  41b44e:	sbb    al,BYTE PTR [esi+0x4]
  41b451:	repz sub ebx,DWORD PTR [edi+edi*2]
  41b455:	lahf   
  41b456:	sbb    eax,0xf57b6a18
  41b45b:	cmp    al,0x24
  41b45d:	cs aas 
  41b45f:	je     0x41b4cb
  41b461:	fdivr  QWORD PTR [edx+0x715c67d7]
  41b467:	fcomp  DWORD PTR [edx-0x49]
  41b46a:	call   0xadfa2dc1
  41b46f:	mov    cl,0xd6
  41b471:	jmp    0x29638fa8
  41b476:	test   BYTE PTR [esi],ah
  41b478:	mov    ?,WORD PTR [esi+0xc]
  41b47b:	mov    edi,0x6b3b8f00
  41b480:	mov    DWORD PTR [edi],eax
  41b482:	inc    ebp
  41b483:	aad    0x82
  41b485:	and    DWORD PTR [edi+eax*8],esi
  41b488:	dec    esi
  41b489:	inc    ecx
  41b48a:	sbb    al,0x19
  41b48c:	add    BYTE PTR [ecx],ah
  41b48e:	fidiv  DWORD PTR [eax+0x3ffd17d8]
  41b494:	enter  0x73eb,0xbe
  41b498:	sbb    dh,BYTE PTR [edi+0x3b]
  41b49b:	out    dx,eax
  41b49c:	xor    ebp,DWORD PTR [ebp-0x7c]
  41b49f:	mov    edi,0xec676584
  41b4a4:	push   esi
  41b4a5:	xor    eax,0x5caa04c3
  41b4aa:	out    0xf7,eax
  41b4ac:	push   cs
  41b4ad:	ins    DWORD PTR es:[edi],dx
  41b4ae:	or     eax,DWORD PTR [eax+0x64]
  41b4b1:	jne    0x41b438
  41b4b3:	adc    edi,0x70c5f14b
  41b4b9:	in     al,dx
  41b4ba:	or     BYTE PTR [ecx],dh
  41b4bc:	outs   dx,DWORD PTR ds:[esi]
  41b4bd:	mov    ebp,0x78fe7f37
  41b4c2:	pop    ebp
  41b4c3:	repnz sbb DWORD PTR [edx+0x41],esi
  41b4c7:	hlt    
  41b4c8:	enter  0x5e8,0x7e
  41b4cc:	or     al,0x61
  41b4ce:	pop    ebx
  41b4cf:	test   BYTE PTR [ecx+0x3c050980],cl
  41b4d5:	push   esi
  41b4d6:	in     eax,dx
  41b4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4d8:	rcl    BYTE PTR [eax+0x7],0x40
  41b4dc:	xor    al,BYTE PTR [edx]
  41b4de:	cli    
  41b4df:	jo     0x41b52a
  41b4e1:	aam    0x91
  41b4e3:	and    al,ch
  41b4e5:	mov    bh,0x8d
  41b4e7:	popa   
  41b4e8:	inc    BYTE PTR [eax+0xe]
  41b4eb:	and    DWORD PTR [esi],0x47f2159f
  41b4f1:	(bad)  
  41b4f4:	adc    DWORD PTR [ecx+0x7e149990],0xf5738e32
  41b4fe:	rcl    DWORD PTR [edx+0x7082a6ae],0x12
  41b505:	sbb    ch,bl
  41b507:	mul    DWORD PTR [eax+0x51]
  41b50a:	out    0x8d,al
  41b50c:	mov    dh,bh
  41b50e:	adc    eax,0x1d49d6cc
  41b513:	int3   
  41b514:	mov    edx,gs
  41b516:	push   esi
  41b517:	test   BYTE PTR [ebp-0x3e],0xb8
  41b51b:	xor    BYTE PTR [ebx+0x76e3aa00],bl
  41b521:	mov    ds:0x9d1a8baf,al
  41b526:	test   cl,0x82
  41b529:	push   esp
  41b52a:	loopne 0x41b56b
  41b52c:	mov    ah,0xf9
  41b52e:	sbb    dl,BYTE PTR [ecx]
  41b530:	jmp    0x911c:0xcf8cbdc1
  41b537:	dec    ebp
  41b538:	out    0x76,eax
  41b53a:	(bad)  [ebx+0x56f15fb5]
  41b540:	shl    BYTE PTR [ebp-0xad43f35],cl
  41b546:	and    eax,0x4ec2f0e9
  41b54b:	mov    bh,0x8f
  41b54d:	push   ecx
  41b54e:	mov    ebx,0xa851ebeb
  41b553:	(bad)  
  41b555:	mov    ecx,DWORD PTR [ebp+0x8]
  41b558:	mov    edx,DWORD PTR [ebp-0x4c]
  41b55b:	add    ecx,edi
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	loop   0x41b89d
  41b872:	dec    eax
  41b873:	fucomip st,st(6)
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	and    DWORD PTR [edx],0xffffffad
  41b87e:	arpl   WORD PTR [esi+0x17edb273],bx
  41b884:	lea    eax,ds:0x7b658823
  41b88a:	jg     0x41b85b
  41b88c:	fwait
  41b88d:	iret   
  41b88e:	in     eax,dx
  41b88f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b890:	adc    bl,dh
  41b892:	mov    eax,ds:0xb09bc058
  41b897:	mov    ebp,0x5eac6888
  41b89c:	and    eax,0x7dbf5055
  41b8a1:	xchg   ecx,eax
  41b8a2:	sub    eax,0xfb0cec7a
  41b8a7:	adc    al,0x39
  41b8a9:	xor    ebx,DWORD PTR [ecx]
  41b8ab:	jae    0x41b8a5
  41b8ad:	add    esp,edx
  41b8af:	in     al,0x13
  41b8b1:	in     al,dx
  41b8b2:	dec    esp
  41b8b3:	ror    BYTE PTR [ebp-0x3e],0xc
  41b8b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8b8:	or     al,0x1e
  41b8ba:	and    edx,ebp
  41b8bc:	jo     0x41b883
  41b8be:	mov    BYTE PTR [edi],ch
  41b8c0:	or     esp,DWORD PTR [edx]
  41b8c2:	xor    eax,0x6cd3fbc0
  41b8c7:	jge    0x41b887
  41b8c9:	mov    esi,DWORD PTR [eax+ecx*1-0x38]
  41b8cd:	out    0x0,eax
  41b8cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8d0:	js     0x41b857
  41b8d2:	push   ebp
  41b8d3:	test   bl,cl
  41b8d5:	test   eax,0xa0a1bd1e
  41b8da:	and    DWORD PTR [edx-0x4e],esp
  41b8dd:	aaa    
  41b8de:	and    al,0xd3
  41b8e0:	xadd   BYTE PTR [edi-0x7b2cbfca],ch
  41b8e7:	lea    edi,[ebx]
  41b8e9:	sbb    bh,bl
  41b8eb:	popa   
  41b8ec:	adc    eax,DWORD PTR [ebp-0x61]
  41b8ef:	sbb    eax,0xebc4321c
  41b8f4:	or     BYTE PTR [edx-0x6ec1e972],ch
  41b8fa:	add    al,0x86
  41b8fd:	cmp    al,0x5a
  41b8ff:	mov    dl,0x29
  41b901:	pusha  
  41b902:	xchg   esi,eax
  41b903:	nop
  41b904:	and    eax,0xbe6a15d3
  41b909:	mov    bh,0x26
  41b90b:	test   al,0xff
  41b90d:	and    eax,0x45a56df0
  41b912:	xor    ebx,DWORD PTR [ecx-0x4343acfd]
  41b918:	jns    0x41b998
  41b91a:	ds aad 0xc8
  41b91d:	pop    esi
  41b91e:	cdq    
  41b91f:	sbb    al,0xcc
  41b921:	js     0x41b9a0
  41b923:	fisttp WORD PTR [ebp+ebp*1+0x3e]
  41b927:	jmp    0x8aca:0xe94e4a65
  41b92e:	cmp    BYTE PTR [ebx-0x27],dh
  41b931:	sbb    al,0xa5
  41b933:	mov    bh,0x8d
  41b935:	test   al,0xe7
  41b937:	xchg   BYTE PTR [eax],bh
  41b939:	mov    ds:0x95da5dce,eax
  41b93e:	pop    ebp
  41b93f:	cmp    al,0xc2
  41b941:	or     DWORD PTR [ebp-0x4],ebx
  41b944:	out    dx,eax
  41b945:	fdecstp 
  41b947:	outs   dx,DWORD PTR ds:[esi]
  41b948:	pop    ebx
  41b949:	push   edx
  41b94a:	inc    edi
  41b94b:	in     al,dx
  41b94c:	sub    dh,al
  41b94e:	fisubr WORD PTR [edx]
  41b950:	es push ebx
  41b952:	into   
  41b953:	nop
  41b954:	xor    cl,BYTE PTR [ebx+0x70]
  41b957:	mov    cl,0x14
  41b959:	sub    esp,DWORD PTR [ecx-0x7e]
  41b95c:	addr16 pop ecx
  41b95e:	das    
  41b95f:	mov    DWORD PTR [esi+0x3eaf9651],esp
  41b965:	int3   
  41b966:	or     BYTE PTR [edi-0x5e],bl
  41b969:	sar    esp,0x80
  41b96c:	add    edi,DWORD PTR [esi+0x423666ec]
  41b972:	add    eax,0xeb86cda2
  41b977:	daa    
  41b978:	adc    BYTE PTR [edx],ah
  41b97a:	cmp    eax,0xa6a083e7
  41b97f:	dec    ecx
  41b980:	cs out dx,al
  41b982:	lock cmp BYTE PTR [ebx+0x191df69b],ah
  41b989:	ins    DWORD PTR es:[edi],dx
  41b98a:	hlt    
  41b98b:	xor    ah,ch
  41b98d:	push   0x3bf309ad
  41b992:	push   eax
  41b993:	xor    al,0x9e
  41b995:	femms  
  41b997:	stos   DWORD PTR es:[edi],eax
  41b998:	pushf  
  41b999:	(bad)  
  41b99a:	imul   ebp,DWORD PTR [edx+0x52],0x9cb4078a
  41b9a1:	jo     0x41b926
  41b9a3:	adc    ecx,ecx
  41b9a5:	sub    dl,BYTE PTR [ebp+0x6673df3f]
  41b9ab:	sbb    DWORD PTR [ebp-0x3d85ccf2],ecx
  41b9b1:	or     eax,0xa3f99bf0
  41b9b6:	or     BYTE PTR [edx],bl
  41b9b8:	out    0xdd,eax
  41b9ba:	mov    eax,ds:0xdc396091
  41b9bf:	xchg   ecx,eax
  41b9c0:	je     0x41b9a9
  41b9c2:	sahf   
  41b9c3:	pop    es
  41b9c4:	adc    eax,0xb000e4a3
  41b9c9:	out    dx,eax
  41b9ca:	or     BYTE PTR [eax],dh
  41b9cc:	lahf   
  41b9cd:	call   0x2480:0x4e02b22a
  41b9d4:	mov    dh,0xca
  41b9d6:	rcl    esp,0x5d
  41b9d9:	push   cs
  41b9da:	dec    esp
  41b9db:	call   0xf63999d7
  41b9e0:	and    BYTE PTR [ecx+ebp*8-0x21164125],0xac
  41b9e8:	fcom   QWORD PTR [edx-0x17b5c0cc]
  41b9ee:	mov    dl,0x4c
  41b9f0:	sbb    al,0x3f
  41b9f2:	sahf   
  41b9f3:	pop    ds
  41b9f4:	(bad)  
  41b9f5:	es jns 0x41b9a4
  41b9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9f9:	arpl   WORD PTR [ebp-0x416c5752],ax
  41b9ff:	fldenv [ecx]
  41ba01:	mov    bh,0xfb
  41ba03:	cmp    ch,BYTE PTR [eax]
  41ba05:	(bad)  
  41ba06:	xchg   esp,eax
  41ba07:	pop    edx
  41ba08:	sti    
  41ba09:	test   DWORD PTR [edi],esi
  41ba0b:	mov    al,0x55
  41ba0d:	xchg   edx,eax
  41ba0e:	(bad)  
  41ba10:	popa   
  41ba11:	inc    esp
  41ba12:	mov    ds:0x3fbb2f26,al
  41ba17:	popf   
  41ba18:	sbb    eax,0xda1d1c8a
  41ba1d:	inc    ebx
  41ba1e:	push   ecx
  41ba1f:	enter  0x1fe9,0x8c
  41ba23:	ret    0x1d64
  41ba26:	jb     0x41ba4d
  41ba28:	mov    bl,BYTE PTR [edx+ebp*8-0x30fb5732]
  41ba2f:	ficom  DWORD PTR [ecx-0x4d]
  41ba32:	in     eax,0x70
  41ba34:	adc    ebx,0xc73effbf
  41ba3a:	cmp    al,0xec
  41ba3c:	cmc    
  41ba3d:	mov    bl,0x43
  41ba3f:	xor    DWORD PTR [ebp*1+0x6bb51dd],edx
  41ba46:	jmp    0xccb0c4c5
  41ba4b:	cmp    ebx,DWORD PTR [eax+0x21]
  41ba4e:	ret    0x2eda
  41ba51:	push   eax
  41ba52:	stos   BYTE PTR es:[edi],al
  41ba53:	push   cs
  41ba54:	push   eax
  41ba55:	test   eax,0xd203c76a
  41ba5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba5b:	(bad)  
  41ba5c:	out    dx,eax
  41ba5d:	mov    ah,0x64
  41ba5f:	dec    ecx
  41ba60:	push   edx
  41ba61:	xor    al,0xf4
  41ba63:	fidiv  WORD PTR [ebp+0x44d9c40e]
  41ba69:	push   edi
  41ba6a:	lods   eax,DWORD PTR ds:[esi]
  41ba6b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41ba6d:	stos   WORD PTR es:[edi],ax
  41ba6f:	adc    DWORD PTR [edi],0x2
  41ba72:	pop    ebp
  41ba73:	outs   dx,DWORD PTR ds:[esi]
  41ba74:	add    edi,DWORD PTR ds:0x59645b86
  41ba7a:	inc    eax
  41ba7b:	dec    ebx
  41ba7c:	cdq    
  41ba7d:	icebp  
  41ba7e:	or     dl,BYTE PTR [edx+0x6e4fb68f]
  41ba84:	call   0x22442629
  41ba89:	pop    eax
  41ba8a:	xor    esp,DWORD PTR [ecx-0x2adcc3ff]
  41ba90:	cmp    DWORD PTR [edx],0xb68c8bee
  41ba96:	dec    edi
  41ba97:	cmp    DWORD PTR [edx-0x47e628c4],esp
  41ba9d:	scas   eax,DWORD PTR es:[edi]
  41ba9e:	cli    
  41ba9f:	mov    cl,0xc7
  41baa1:	nop
  41baa2:	mov    eax,0x45ac6bc9
  41baa7:	adc    al,0x88
  41baa9:	jmp    0x9d37:0x751634b3
  41bab0:	fxch   st(4)
  41bab2:	(bad)  
  41bab4:	jb     0x41bb01
  41bab6:	sbb    cl,0xb9
  41bab9:	push   ecx
  41baba:	xor    al,0x33
  41babc:	and    BYTE PTR [edi],0x61
  41babf:	(bad)  
  41bac0:	js     0x41baf5
  41bac2:	jo     0x41ba72
  41bac4:	dec    esi
  41bac5:	xchg   edx,eax
  41bac6:	pop    esp
  41bac7:	add    DWORD PTR [ecx+edi*1-0x21],esi
  41bacb:	or     BYTE PTR [ebp+eiz*8-0x340758f1],dl
  41bad2:	pop    ebp
  41bad3:	xor    edi,ebx
  41bad5:	mov    ds:0x1acf0e1f,al
  41bada:	in     eax,dx
  41badb:	stos   DWORD PTR es:[edi],eax
  41badc:	stc    
  41badd:	dec    eax
  41bade:	mov    ds:0x3c3d1ec6,eax
  41bae3:	mov    bl,0x5a
  41bae5:	pop    ecx
  41bae6:	pop    ds
  41bae7:	cli    
  41bae8:	sub    BYTE PTR [ecx],0x96
  41baeb:	pop    DWORD PTR ds:0x1eb8daec
  41baf1:	test   edi,esi
  41baf3:	leave  
  41baf4:	sbb    al,0x15
  41baf6:	repnz inc dx
  41baf9:	cwde   
  41bafa:	or     DWORD PTR [eax],ecx
  41bafc:	test   bl,bl
  41bafe:	cdq    
  41baff:	jno    0x41baa5
  41bb01:	adc    BYTE PTR [edx+0x5b],bh
  41bb04:	test   al,0xbd
  41bb06:	es aas 
  41bb08:	and    ebp,esp
  41bb0a:	js     0x41bb28
  41bb0c:	sbb    al,0x46
  41bb0e:	add    ebp,0xc2bd7405
  41bb14:	dec    esi
  41bb15:	pop    es
  41bb16:	xor    al,0x52
  41bb18:	repz adc BYTE PTR [eax],0x34
  41bb1c:	retf   0x4ba3
  41bb1f:	sub    eax,0xb99d41eb
  41bb24:	cdq    
  41bb25:	lahf   
  41bb26:	scas   al,BYTE PTR es:[edi]
  41bb27:	cmp    ebx,DWORD PTR [ebx+ecx*8]
  41bb2a:	adc    al,0x5d
  41bb2c:	jae    0x41bb34
  41bb2e:	popw   ss
  41bb30:	ret    0x282
  41bb33:	mov    esp,0x282886d
  41bb38:	pop    es
  41bb39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb3a:	xor    ch,BYTE PTR [edi]
  41bb3c:	(bad)  
  41bb3d:	aaa    
  41bb3e:	das    
  41bb3f:	and    esi,DWORD PTR [ebx-0x5c]
  41bb42:	popf   
  41bb43:	mov    al,ds:0x5f256e63
  41bb48:	xor    ebx,ebx
  41bb4a:	les    eax,FWORD PTR [eax+0x1c]
  41bb4d:	int3   
  41bb4e:	sbb    ebx,DWORD PTR [esi+0x28c8722f]
  41bb54:	(bad)  
  41bb56:	mov    ebp,0x3e16e4b5
  41bb5b:	hlt    
  41bb5c:	ret    0x9613
  41bb5f:	or     ch,dh
  41bb61:	or     bh,BYTE PTR [edi+edx*4]
  41bb64:	dec    edi
  41bb65:	push   eax
  41bb66:	add    DWORD PTR [eax+edx*1-0x4c],edi
  41bb6a:	fcomp  st(3)
  41bb6c:	inc    ecx
  41bb6d:	jge    0x41bbbd
  41bb6f:	stos   DWORD PTR es:[edi],eax
  41bb70:	test   eax,0x30d3ad51
  41bb75:	out    0xbe,al
  41bb77:	sar    DWORD PTR [eax],1
  41bb79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb7a:	and    eax,0x412688fc
  41bb7f:	stos   DWORD PTR es:[edi],eax
  41bb80:	pop    ecx
  41bb81:	aam    0xc3
  41bb83:	jae    0x41bb52
  41bb85:	push   edi
  41bb86:	cld    
  41bb87:	xor    DWORD PTR [ecx-0x14],esp
  41bb8a:	fnstcw WORD PTR [esp+edx*8-0x6d]
  41bb8e:	or     eax,0x4e60b5c1
  41bb93:	stc    
  41bb94:	and    DWORD PTR ds:0xa7d93f44,esi
  41bb9a:	cmc    
  41bb9b:	shr    DWORD PTR ds:0xc28c7918,0x41
  41bba2:	sbb    cl,cl
  41bba4:	xor    ebx,DWORD PTR [ebp+edx*2+0x5835bf]
  41bbab:	out    0x7,al
  41bbad:	stos   BYTE PTR es:[edi],al
  41bbae:	cdq    
  41bbaf:	scas   eax,DWORD PTR es:[edi]
  41bbb0:	mov    cl,0x9c
  41bbb2:	ja     0x41bbee
  41bbb4:	outs   dx,DWORD PTR ds:[esi]
  41bbb5:	xchg   BYTE PTR [edx],al
  41bbb7:	(bad)  
  41bbb9:	lods   al,BYTE PTR ds:[esi]
  41bbba:	mov    ah,0x76
  41bbbc:	sub    BYTE PTR [ebp+ecx*4-0x3b0ca667],0x6
  41bbc4:	or     BYTE PTR [ebp-0x7881d799],dh
  41bbca:	sbb    edi,edi
  41bbcc:	xchg   ebx,eax
  41bbcd:	fistp  WORD PTR [edx-0x49]
  41bbd0:	das    
  41bbd1:	bswap  ebx
  41bbd3:	fcomp  DWORD PTR [ebp-0x5a]
  41bbd6:	pop    ebx
  41bbd7:	add    eax,0xbb33802a
  41bbdc:	inc    esp
  41bbdd:	outs   dx,BYTE PTR ds:[esi]
  41bbde:	loope  0x41bbdf
  41bbe0:	add    al,0x3c
  41bbe2:	rol    DWORD PTR [edx],cl
  41bbe4:	xchg   edx,ebp
  41bbe6:	stos   DWORD PTR es:[edi],eax
  41bbe7:	pop    esp
  41bbe8:	sar    DWORD PTR [edx-0x371f21c0],cl
  41bbee:	in     eax,dx
  41bbef:	mov    bh,BYTE PTR [edx]
  41bbf1:	cmp    al,0x3f
  41bbf3:	dec    esi
  41bbf4:	xor    al,0x37
  41bbf6:	mov    bl,BYTE PTR [edx]
  41bbf8:	sbb    al,BYTE PTR [esi+0x2e]
  41bbfb:	sbb    eax,0x433e2c19
  41bc00:	(bad)  
  41bc01:	fwait
  41bc02:	lea    eax,[edi+0x4d]
  41bc05:	pop    ebp
  41bc06:	retf   
  41bc07:	pop    eax
  41bc08:	cmp    eax,0x7cc46d25
  41bc0d:	push   ebx
  41bc0e:	mov    eax,ds:0x4d2288cf
  41bc13:	and    DWORD PTR [ecx],esi
  41bc15:	sahf   
  41bc16:	jmp    0x41bbf1
  41bc18:	(bad)  
  41bc19:	cmp    esp,DWORD PTR ds:0x16a37cee
  41bc1f:	sti    
  41bc20:	push   ds
  41bc21:	mov    esp,ebp
  41bc23:	sub    ebx,DWORD PTR [edi-0x3a]
  41bc26:	hlt    
  41bc27:	lea    edx,[edi-0x11]
  41bc2a:	xchg   ebp,eax
  41bc2b:	xchg   edx,eax
  41bc2c:	lods   al,BYTE PTR ds:[esi]
  41bc2d:	push   0x92fe645e
  41bc32:	lock inc esp
  41bc34:	pop    edi
  41bc35:	ror    DWORD PTR [eax-0x32],cl
  41bc38:	bound  esp,QWORD PTR [ecx]
  41bc3a:	or     esi,esi
  41bc3c:	pusha  
  41bc3d:	adc    dh,BYTE PTR [eax+0x59]
  41bc40:	dec    ebp
  41bc41:	pop    esp
  41bc42:	and    ebp,DWORD PTR [ebx]
  41bc44:	or     ah,BYTE PTR [ebx+0x17]
  41bc47:	int3   
  41bc48:	pop    edx
  41bc49:	pop    ss
  41bc4a:	and    esi,DWORD PTR [ecx]
  41bc4c:	push   esi
  41bc4d:	xor    edi,ebp
  41bc4f:	mov    ebx,0xd50ed35d
  41bc54:	pop    ebp
  41bc55:	test   eax,0x6846b57a
  41bc5a:	mov    ds:0xbac13241,eax
  41bc5f:	adc    eax,0xf2192600
  41bc64:	pop    ebp
  41bc65:	test   al,0xd7
  41bc67:	or     ch,0xa5
  41bc6a:	(bad)  
  41bc6b:	jbe    0x41bc6d
  41bc6d:	pop    eax
  41bc6e:	addr16 pushf 
  41bc70:	call   0x6763d30a
  41bc75:	jb     0x41bc88
  41bc77:	or     DWORD PTR [ebp-0x2f],0xfffffff2
  41bc7b:	xlat   BYTE PTR ds:[ebx]
  41bc7c:	int    0x1
  41bc7e:	pop    esp
  41bc7f:	or     BYTE PTR [edi-0x6b0f0e33],0x1
  41bc86:	pop    edi
  41bc87:	adc    al,0x23
  41bc89:	inc    ebp
  41bc8a:	mov    ds:0x544625a1,eax
  41bc8f:	rcr    ah,0x14
  41bc92:	adc    DWORD PTR [ecx-0x1ae9b1c1],0x44b25066
  41bc9c:	jbe    0x41bccb
  41bc9e:	xchg   ebp,eax
  41bc9f:	pop    ebp
  41bca0:	popa   
  41bca1:	jae    0x41bcb3
  41bca3:	aaa    
  41bca4:	xchg   BYTE PTR [edx+0xd0a9ebc],ch
  41bcaa:	(bad)  
  41bcab:	xchg   esp,eax
  41bcac:	mov    bh,0x3a
  41bcae:	and    eax,0xd1f55caf
  41bcb3:	xchg   esp,eax
  41bcb4:	xor    DWORD PTR [ebp+0x2],edi
  41bcb7:	jl     0x41bcd8
  41bcb9:	rcr    bl,1
  41bcbb:	adc    al,0xc8
  41bcbd:	ja     0x41bcf3
  41bcbf:	jmp    0xc7a99f61
  41bcc4:	test   eax,0xa3b4ba21
  41bcc9:	popa   
  41bcca:	icebp  
  41bccb:	mov    DWORD PTR [ecx+edx*2+0x5dd77f63],ebp
  41bcd2:	(bad)
  41bcd6:	pop    es
  41bcd7:	stos   DWORD PTR es:[edi],eax
  41bcd8:	or     edi,DWORD PTR [edi]
  41bcda:	xchg   ebp,eax
  41bcdb:	mov    edx,0x1a16e06e
  41bce0:	xor    eax,DWORD PTR [edi]
  41bce2:	pop    ds
  41bce3:	jmp    0x41bd31
  41bce5:	(bad)  [edx-0x7e704d17]
  41bceb:	sub    DWORD PTR [ecx-0x2c94cc25],ebx
  41bcf1:	add    al,BYTE PTR [edi+eax*4+0x2]
  41bcf5:	int    0xba
  41bcf7:	retf   0x156e
  41bcfa:	cmp    ecx,eax
  41bcfc:	sub    BYTE PTR [ecx-0x4e],0x4a
  41bd00:	xor    DWORD PTR [ebx],0x80d84e48
  41bd06:	jp     0x41bc9c
  41bd08:	cdq    
  41bd09:	gs cli 
  41bd0b:	and    bh,BYTE PTR [ebp-0x7bc1767b]
  41bd11:	repnz add DWORD PTR [edx-0x64b11dfb],ecx
  41bd18:	xchg   edi,eax
  41bd19:	pop    edi
  41bd1a:	aad    0xfb
  41bd1c:	clc    
  41bd1d:	jnp    0x41bd8a
  41bd1f:	sub    DWORD PTR [edi],ebp
  41bd21:	push   esi
  41bd22:	ja     0x41bca5
  41bd24:	pop    ds
  41bd25:	jne    0x41bcfc
  41bd27:	sub    al,al
  41bd29:	push   ds
  41bd2a:	adc    cl,BYTE PTR [ebp-0x72]
  41bd2d:	mov    cl,0xc3
  41bd2f:	fild   QWORD PTR [ebp+0x25fa35f6]
  41bd35:	mov    WORD PTR [ecx+0x32],fs
  41bd38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd39:	scas   al,BYTE PTR es:[edi]
  41bd3a:	and    al,0xcd
  41bd3c:	sti    
  41bd3d:	arpl   WORD PTR ds:0x81aac5c4,sp
  41bd43:	pop    esp
  41bd44:	and    edi,DWORD PTR [ebp+eiz*1+0x3fa14361]
  41bd4b:	rcl    DWORD PTR [eax],1
  41bd4d:	les    esp,FWORD PTR [edx+0x23]
  41bd50:	push   esi
  41bd51:	dec    ecx
  41bd53:	xchg   edi,eax
  41bd54:	cdq    
  41bd55:	push   ds
  41bd56:	outs   dx,BYTE PTR ds:[esi]
  41bd57:	or     al,0x63
  41bd59:	stc    
  41bd5a:	pushf  
  41bd5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd5c:	pop    ebp
  41bd5d:	scas   eax,DWORD PTR es:[edi]
  41bd5e:	dec    ebx
  41bd5f:	test   eax,0x379ce5c0
  41bd64:	jb     0x41bd32
  41bd66:	cmp    BYTE PTR [esp+edi*1],0x45
  41bd6a:	dec    esp
  41bd6b:	xor    esp,DWORD PTR [ecx+eax*8]
  41bd6e:	xlat   BYTE PTR ds:[ebx]
  41bd6f:	xchg   edi,eax
  41bd70:	in     al,dx
  41bd71:	jge    0x41bd3c
  41bd73:	sbb    DWORD PTR [edx+0x6e],esp
  41bd76:	dec    eax
  41bd77:	in     al,0x4f
  41bd79:	sub    DWORD PTR [edi],edi
  41bd7b:	add    al,0x37
  41bd7d:	inc    ecx
  41bd7e:	sbb    al,0x72
  41bd80:	mov    edi,DWORD PTR [edx-0x5]
  41bd83:	(bad)  
  41bd84:	push   esi
  41bd85:	mov    ch,0x46
  41bd87:	sahf   
  41bd88:	mov    edx,0xa36da201
  41bd8d:	ins    BYTE PTR es:[edi],dx
  41bd8e:	xor    DWORD PTR [edx-0x26],esi
  41bd91:	int3   
  41bd92:	call   0xbf72:0xf092171c
  41bd99:	add    al,BYTE PTR [ebx]
  41bd9b:	add    ebx,DWORD PTR [ecx-0xd]
  41bd9e:	sub    al,0x5e
  41bda0:	push   edx
  41bda1:	lds    ebx,FWORD PTR [ebx-0x14]
  41bda4:	or     BYTE PTR [eax],bh
  41bda6:	daa    
  41bda7:	clc    
  41bda8:	jg     0x41bd4f
  41bdaa:	daa    
  41bdab:	or     ebx,DWORD PTR [ebx-0x2b]
  41bdae:	jecxz  0x41bd88
  41bdb0:	jge    0x41bd6f
  41bdb2:	add    eax,0xfaed5da3
  41bdb7:	jno    0x41bdc3
  41bdb9:	pop    ebx
  41bdba:	and    edi,DWORD PTR [esi]
  41bdbc:	adc    al,bl
  41bdbe:	leave  
  41bdbf:	scas   eax,DWORD PTR es:[edi]
  41bdc0:	xor    eax,0x43561f12
  41bdc5:	cdq    
  41bdc6:	sbb    al,0x7f
  41bdc8:	sub    esi,DWORD PTR ds:0x99e0b3b7
  41bdce:	pop    ebx
  41bdcf:	call   0x66470b51
  41bdd4:	arpl   WORD PTR [esi+0x62c0c0b7],bx
  41bdda:	cs mov ecx,0x4b4d9d43
  41bde0:	ss (bad) 
  41bde2:	mov    bh,0xe3
  41bde4:	xor    eax,0xa245c504
  41bde9:	sub    DWORD PTR [eax+eiz*1+0x3],edi
  41bded:	div    DWORD PTR [ecx-0x2594a5ef]
  41bdf3:	pop    ebp
  41bdf4:	(bad)  
  41bdf5:	or     dh,BYTE PTR [eax+0x55]
  41bdf8:	push   es
  41bdf9:	mov    cl,0xed
  41bdfb:	sbb    al,0xda
  41bdfd:	les    ecx,FWORD PTR [edx]
  41bdff:	popa   
  41be00:	ss dec edx
  41be02:	xchg   edx,eax
  41be03:	fyl2x  
  41be05:	push   ecx
  41be06:	lods   eax,DWORD PTR ds:[esi]
  41be07:	shr    DWORD PTR ds:0x1b4aabfa,1
  41be0d:	pop    edx
  41be0e:	ret    0xe6eb
  41be11:	mov    ecx,0x6ca5d78d
  41be16:	xchg   edi,eax
  41be17:	sub    BYTE PTR [ecx],ch
  41be19:	jae    0x41bdf7
  41be1b:	popf   
  41be1c:	outs   dx,BYTE PTR ds:[esi]
  41be1d:	sub    BYTE PTR [ebx],ch
  41be1f:	sbb    eax,0x4478d0ea
  41be24:	jg     0x41be92
  41be26:	mov    ecx,0x7a30e276
  41be2b:	fwait
  41be2c:	sar    BYTE PTR [edi],0xa0
  41be2f:	sar    dh,0xac
  41be32:	add    eax,0xa769f2c9
  41be37:	int    0x60
  41be39:	and    ebp,edx
  41be3b:	mov    dh,0xcf
  41be3d:	and    eax,0xbf2f74c
  41be42:	cmp    esp,ebp
  41be44:	rcr    BYTE PTR [eax-0x13],cl
  41be47:	lods   eax,DWORD PTR ds:[esi]
  41be48:	rcl    DWORD PTR [eax+0x67],cl
  41be4b:	pop    edx
  41be4c:	arpl   WORD PTR [esi-0x25],si
  41be4f:	and    ecx,DWORD PTR [edi+ebp*2]
  41be52:	mov    ecx,0xf6b42f99
  41be57:	gs cld 
  41be59:	dec    esp
  41be5a:	loope  0x41be16
  41be5c:	or     BYTE PTR [ebx-0x2ad862f6],0xb7
  41be63:	pop    ds
  41be64:	aad    0x56
  41be66:	sbb    eax,0xf89549fc
  41be6b:	(bad)  
  41be6d:	repnz mov ebp,0x7f35f87a
  41be73:	cmp    DWORD PTR [eax],edi
  41be75:	fs mov edi,0x4a1d7a2d
  41be7b:	sub    eax,0xdd89353
  41be80:	mov    al,ds:0x45dbfb8b
  41be85:	cmp    edi,DWORD PTR [ebx-0x2f]
  41be88:	into   
  41be89:	test   al,0x16
  41be8b:	nop
  41be8c:	nop
  41be8d:	mov    eax,ds:0xcd613afb
  41be92:	xchg   ebp,eax
  41be93:	push   ds
  41be94:	ret    
  41be95:	jbe    0x41bf01
  41be97:	mov    esi,DWORD PTR [esi-0x7a]
  41be9a:	loope  0x41be2f
  41be9c:	out    dx,al
  41be9d:	mov    esp,0x43ac18f3
  41bea2:	inc    esi
  41bea3:	and    al,0x1c
  41bea5:	xchg   ecx,eax
  41bea6:	mov    bh,0x9b
  41bea8:	repnz mov al,ds:0xda1f25e
  41beae:	or     DWORD PTR [esi+0x4b],esp
  41beb1:	dec    edi
  41beb2:	sar    BYTE PTR [eax+0x1342f42d],cl
  41beb8:	sbb    edi,DWORD PTR [edx+0x5d]
  41bebb:	add    eax,0x6a1ee848
  41bec0:	xlat   BYTE PTR ds:[ebx]
  41bec1:	jbe    0x41be60
  41bec3:	nop
  41bec4:	repnz mov bl,0x75
  41bec7:	pusha  
  41bec8:	aad    0x30
  41beca:	mov    edx,0x5738994f
  41becf:	repnz inc esi
  41bed1:	or     ch,0x3d
  41bed4:	scas   eax,DWORD PTR es:[edi]
  41bed5:	jbe    0x41bf46
  41bed7:	pop    es
  41bed8:	sub    BYTE PTR ds:0xe0d5c2a2,al
  41bede:	sbb    al,0x21
  41bee0:	xor    eax,0x77e81efc
  41bee5:	adc    eax,0x402956bc
  41beea:	dec    ecx
  41beeb:	adc    eax,0xbb719f99
  41bef0:	adc    eax,0x1ffbd047
  41bef5:	sti    
  41bef6:	cmp    DWORD PTR [ebx+ebp*8+0x8bfdeb1],ebx
  41befd:	fistp  WORD PTR [edx]
  41beff:	addr16 xchg esp,eax
  41bf01:	mov    ebp,0x39ba6aee
  41bf06:	repz cmp BYTE PTR [eax+eax*2-0x4e],al
  41bf0b:	iret   
  41bf0c:	test   al,0x80
  41bf0e:	loope  0x41bec0
  41bf10:	and    al,0x5
  41bf12:	push   ebp
  41bf13:	dec    ebx
  41bf14:	and    edx,esp
  41bf16:	out    dx,al
  41bf17:	loopne 0x41bf43
  41bf19:	jmp    0xa8da2cd0
  41bf1e:	push   ss
  41bf1f:	cs sbb eax,DWORD PTR cs:[edi]
  41bf23:	into   
  41bf24:	and    DWORD PTR ds:0x476d4cf4,edi
  41bf2a:	(bad)  
  41bf2b:	dec    ecx
  41bf2c:	stos   BYTE PTR es:[edi],al
  41bf2d:	imul   DWORD PTR ds:0xbc39cee8
  41bf33:	mov    WORD PTR [ecx-0x4cbecb78],?
  41bf39:	push   ecx
  41bf3a:	ss stc 
  41bf3c:	lock lock sbb bl,ch
  41bf40:	adc    al,0x8
  41bf42:	cmc    
  41bf43:	sahf   
  41bf44:	dec    ebx
  41bf45:	fistp  QWORD PTR [eax]
  41bf47:	aam    0xcf
  41bf49:	mov    ebx,0xaba0396f
  41bf4e:	mov    ch,0x80
  41bf50:	adc    eax,0xc38dd251
  41bf55:	das    
  41bf56:	inc    edx
  41bf57:	imul   edi,ebp,0xa426455
  41bf5d:	and    al,0x88
  41bf5f:	pusha  
  41bf60:	push   es
  41bf61:	xchg   DWORD PTR [ebx-0x6a],ebx
  41bf64:	cli    
  41bf65:	lds    edx,FWORD PTR [ebx]
  41bf67:	sbb    al,0xc5
  41bf69:	pop    ss
  41bf6a:	call   0xd9c9891e
  41bf6f:	mov    bh,0xa9
  41bf71:	jecxz  0x41befa
  41bf73:	sti    
  41bf74:	add    DWORD PTR ds:0xfb0533e8,edx
  41bf7a:	test   DWORD PTR [esp+ecx*2+0x9],esp
  41bf7e:	mov    ds:0xbd029bf4,al
  41bf83:	out    dx,eax
  41bf84:	cmp    eax,ecx
  41bf86:	imul   esp,DWORD PTR ds:0xa004c348,0x52
  41bf8d:	jmp    0x9310acb0
  41bf92:	xor    eax,0x32683d55
  41bf97:	dec    esp
  41bf98:	mov    dh,0x59
  41bf9a:	inc    edi
  41bf9b:	inc    edx
  41bf9c:	or     BYTE PTR [eax+esi*8+0x62df26fe],bl
  41bfa3:	pand   mm1,QWORD PTR [ecx+edi*1]
  41bfa7:	mov    ebp,0x1eb0ed5e
  41bfac:	xor    ah,BYTE PTR [edi+ebp*1+0x2a]
  41bfb0:	push   edx
  41bfb1:	cmp    DWORD PTR [ebp+0x1a],0x30cdfb30
  41bfb8:	adc    edi,edi
  41bfba:	and    edi,DWORD PTR [ebx-0x75]
  41bfbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfbe:	jecxz  0x41bff4
  41bfc0:	stc    
  41bfc1:	adc    ch,BYTE PTR [edi]
  41bfc3:	mov    esi,0x7941521a
  41bfc8:	loopne 0x41bff8
  41bfca:	mov    ecx,0x3cf88f4c
  41bfcf:	xchg   ebp,eax
  41bfd0:	sbb    eax,0xb9b36bff
  41bfd5:	cmp    BYTE PTR ds:0xaf49a725,bh
  41bfdb:	sbb    DWORD PTR [edi-0x61],ebx
  41bfde:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41bfe0:	fld    QWORD PTR [ecx]
  41bfe2:	or     DWORD PTR [ebx],ecx
  41bfe4:	jb     0x41bf71
  41bfe6:	pop    ebx
  41bfe7:	sub    al,0xc8
  41bfe9:	iret   
  41bfea:	je     0x41bfa6
  41bfec:	sub    esp,edi
  41bfee:	pop    ebp
  41bfef:	xor    al,BYTE PTR [edi+0x3fea1d91]
  41bff5:	xor    DWORD PTR [ecx-0x36e9de67],edx
  41bffb:	or     eax,DWORD PTR [eax-0x19f66c53]
  41c001:	mov    cl,0x6f
  41c003:	cdq    
  41c004:	call   0x518389c0
  41c009:	jbe    0x41bfe4
  41c00b:	push   0xffffffb6
  41c00d:	push   ebx
  41c00e:	inc    eax
  41c00f:	inc    esi
  41c010:	mov    esp,0x67241079
  41c015:	outs   dx,DWORD PTR ds:[esi]
  41c016:	and    al,0xf5
  41c018:	sahf   
  41c019:	pop    edx
  41c01a:	fs mov ecx,0x999e29de
  41c020:	jbe    0x41c014
  41c022:	into   
  41c023:	leave  
  41c024:	das    
  41c025:	out    0x9f,al
  41c027:	int    0x0
  41c029:	and    DWORD PTR [ecx+0x259d9de5],ebx
  41c02f:	(bad)  
  41c030:	lock test DWORD PTR [ecx],esi
  41c033:	(bad)  
  41c034:	mov    eax,0xd8195698
  41c039:	mov    eax,0x9e80f1f7
  41c03e:	xchg   ebp,eax
  41c03f:	sub    esi,esp
  41c041:	and    cl,BYTE PTR [edx-0x58c90572]
  41c047:	cmp    DWORD PTR [ecx-0x106078e9],eax
  41c04d:	add    eax,0x5fe7d6c9
  41c052:	prefetchnta BYTE PTR [ebp+0x2a]
  41c056:	pop    ebp
  41c057:	stos   DWORD PTR es:[edi],eax
  41c058:	retf   0xf9ed
  41c05b:	out    0xe3,al
  41c05d:	mov    ds:0xce5530da,eax
  41c062:	(bad)  
  41c063:	mov    al,0xff
  41c065:	jmp    DWORD PTR [esi+ebp*4-0xbc99b50]
  41c06c:	ror    ah,0xb9
  41c06f:	push   edi
  41c070:	dec    esp
  41c071:	fbld   TBYTE PTR [edx+0x60fe1a7]
  41c077:	pop    ebp
  41c078:	(bad)  
  41c07a:	or     ebx,DWORD PTR [esi+eax*4-0x786d1608]
  41c081:	jmp    0x3b9a:0x1b261a0
  41c088:	(bad)  
  41c089:	fcomp  st(2)
  41c08b:	pop    edi
  41c08c:	dec    edx
  41c08d:	cdq    
  41c08e:	inc    ebp
  41c08f:	xchg   edx,eax
  41c090:	xchg   ebp,eax
  41c091:	cmp    al,0x37
  41c093:	cmp    dh,cl
  41c095:	add    eax,0xef290b0d
  41c09a:	sar    edi,1
  41c09c:	push   0xffffff8f
  41c09e:	sbb    BYTE PTR [eax+esi*4-0x6c337339],ch
  41c0a5:	ins    BYTE PTR es:[edi],dx
  41c0a6:	fs fwait
  41c0a8:	adc    ecx,DWORD PTR [esi-0x4b]
  41c0ab:	nop
  41c0ac:	jnp    0x41c0df
  41c0ae:	call   0xdf50ce7f
  41c0b3:	xchg   DWORD PTR [esi],ecx
  41c0b5:	pop    ebx
  41c0b6:	int3   
  41c0b7:	in     eax,dx
  41c0b8:	sub    al,0x3d
  41c0ba:	sar    ch,cl
  41c0bc:	cmp    DWORD PTR [esi],0xfffffff9
  41c0bf:	xchg   edx,esp
  41c0c1:	add    DWORD PTR [eax-0x3a4d4cf8],esi
  41c0c7:	pop    esp
  41c0c8:	lock shr DWORD PTR [ebp+0x4d],1
  41c0cc:	mov    ecx,esp
  41c0ce:	adc    al,0x2b
  41c0d0:	cwde   
  41c0d1:	adc    DWORD PTR ds:0xcb3368b5,edi
  41c0d7:	push   ebp
  41c0d8:	dec    esi
  41c0d9:	mov    ebp,esi
  41c0db:	sar    DWORD PTR ds:0xe6f1a8f1,cl
  41c0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0e2:	or     BYTE PTR [ebx+0x3d],ah
  41c0e5:	sub    BYTE PTR [eax+0x3f70b79b],cl
  41c0eb:	ins    DWORD PTR es:[edi],dx
  41c0ec:	pop    edi
  41c0ed:	not    eax
  41c0ef:	jae    0x41c0c0
  41c0f1:	mov    dh,bl
  41c0f3:	xchg   edi,eax
  41c0f4:	inc    ebx
  41c0f5:	sbb    bh,ch
  41c0f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0f8:	mov    ebp,0x3d82a1a
  41c0fd:	mov    cl,0x18
  41c0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c100:	icebp  
  41c101:	push   esp
  41c102:	inc    esp
  41c103:	mov    ds:0xb6f4aef,al
  41c108:	dec    DWORD PTR [ebx]
  41c10a:	in     al,0x78
  41c10c:	pop    edi
  41c10d:	rcl    esi,1
  41c10f:	cmp    BYTE PTR [eax-0x78cf4a0],dh
  41c115:	and    eax,0xbb063bb
  41c11a:	jecxz  0x41c113
  41c11c:	cli    
  41c11d:	lods   al,BYTE PTR ds:[esi]
  41c11e:	xchg   edi,eax
  41c11f:	and    DWORD PTR [eax-0x6d812527],edx
  41c125:	sub    edi,DWORD PTR [ebp+0x36e7c098]
  41c12b:	mov    al,ds:0x89780fe7
  41c130:	mov    WORD PTR [eax-0x35],cs
  41c133:	rcl    DWORD PTR [edx+0x60b90f78],1
  41c139:	add    dl,BYTE PTR [edx]
  41c13b:	and    al,bh
  41c13d:	xchg   ecx,eax
  41c13e:	sub    esp,DWORD PTR [edx-0xc]
  41c141:	sbb    eax,0x6f0198e6
  41c146:	jl     0x41c120
  41c148:	ins    WORD PTR es:[edi],dx
  41c14a:	mov    eax,ds:0x21bccc4f
  41c14f:	xor    al,0xc1
  41c151:	fisttp DWORD PTR [esi+0x6dda178e]
  41c157:	xchg   edi,eax
  41c158:	or     DWORD PTR [edx],edi
  41c15a:	xchg   ebp,eax
  41c15b:	sti    
  41c15c:	pop    ds
  41c15d:	inc    edi
  41c15e:	sbb    al,0xf3
  41c160:	fisubr DWORD PTR [ecx-0x4e]
  41c163:	push   cs
  41c164:	mov    DWORD PTR ds:0xf9ec6911,edi
  41c16a:	adc    bl,BYTE PTR [eax*8+0x421a94ce]
  41c171:	jmp    0x6351:0x7ff4f11
  41c178:	ret    
  41c179:	iret   
  41c17a:	cmp    eax,0xc07f9abd
  41c17f:	imul   ebp,ecx,0xffffff80
  41c182:	mov    esp,0x5d5aed41
  41c187:	and    DWORD PTR [ecx+0xc9c2a7a],edi
  41c18d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c18e:	rcr    DWORD PTR [ebx-0x19],1
  41c191:	xor    eax,0xd255e990
  41c196:	sbb    al,0x2e
  41c198:	sbb    eax,0x261262eb
  41c19d:	fwait
  41c19e:	cdq    
  41c19f:	pop    ds
  41c1a0:	dec    ebx
  41c1a1:	cmp    al,0x64
  41c1a3:	test   DWORD PTR [ecx+0x45],esi
  41c1a6:	mov    ds:0x972d84a6,eax
  41c1ab:	mov    al,ds:0x7633cde5
  41c1b0:	daa    
  41c1b1:	dec    esi
  41c1b2:	push   esp
  41c1b3:	push   eax
  41c1b4:	inc    edi
  41c1b5:	cs jle 0x41c151
  41c1b8:	std    
  41c1b9:	inc    edi
  41c1ba:	or     BYTE PTR [edx-0x59],0x9c
  41c1be:	mov    edi,0x202d774b
  41c1c3:	dec    eax
  41c1c4:	popf   
  41c1c5:	stc    
  41c1c6:	xchg   ebp,eax
  41c1c7:	add    al,0xa9
  41c1c9:	sbb    esi,DWORD PTR [esi-0xf]
  41c1cc:	fcmovne st,st(5)
  41c1ce:	xchg   edi,eax
  41c1cf:	test   BYTE PTR [ecx],al
  41c1d1:	ins    BYTE PTR es:[edi],dx
  41c1d2:	cwde   
  41c1d3:	(bad)  
  41c1d5:	aad    0x68
  41c1d7:	out    dx,al
  41c1d8:	sub    BYTE PTR [esp+eax*1-0x30],al
  41c1dc:	pop    ecx
  41c1dd:	(bad)  
  41c1de:	xchg   ebx,eax
  41c1df:	mov    ds:0xe8f9e728,eax
  41c1e4:	scas   al,BYTE PTR es:[edi]
  41c1e5:	idiv   ch
  41c1e7:	stos   BYTE PTR es:[edi],al
  41c1e8:	out    dx,al
  41c1e9:	cmp    BYTE PTR [edx],0x6a
  41c1ec:	or     eax,0x238fd18
  41c1f1:	sahf   
  41c1f2:	jg     0x41c1bc
  41c1f4:	xor    edi,DWORD PTR [eiz*8-0x728c02bd]
  41c1fb:	dec    edi
  41c1fc:	in     eax,0x96
  41c1fe:	push   ebp
  41c1ff:	adc    ch,BYTE PTR [ebx-0xc]
  41c202:	inc    edi
  41c203:	add    BYTE PTR [ebp+edi*1+0x69],bl
  41c207:	mov    dh,0x7a
  41c209:	and    al,0x14
  41c20b:	xor    al,BYTE PTR [edi]
  41c20d:	out    0xc2,al
  41c20f:	inc    eax
  41c210:	mov    eax,0x94b9db9d
  41c215:	addr16 add dx,bx
  41c219:	sub    BYTE PTR [esi+0x509d50e1],dh
  41c21f:	dec    ebx
  41c220:	stos   DWORD PTR es:[edi],eax
  41c221:	push   esi
  41c222:	cmp    BYTE PTR [ecx],bl
  41c224:	push   ebx
  41c225:	loope  0x41c22d
  41c227:	(bad)  
  41c228:	js     0x41c201
  41c22a:	xchg   ecx,eax
  41c22b:	lods   al,BYTE PTR ds:[esi]
  41c22c:	cmp    DWORD PTR [ebx-0x6ab076bd],edx
  41c232:	cld    
  41c233:	mov    ebp,0xe608d023
  41c238:	mov    bl,0xbe
  41c23a:	and    BYTE PTR [ebp+ebx*8+0x37],dl
  41c23e:	dec    edi
  41c23f:	adc    al,0xce
  41c241:	daa    
  41c242:	icebp  
  41c243:	mov    dh,0xfa
  41c245:	cld    
  41c246:	stc    
  41c247:	or     bl,BYTE PTR [ebx-0x5c]
  41c24a:	or     eax,0xd72febef
  41c24f:	jmp    DWORD PTR [eax*1-0x4f30a294]
  41c256:	dec    esp
  41c257:	pop    eax
  41c258:	jb     0x41c1f5
  41c25a:	(bad)
  41c25e:	sub    eax,0x27c1caeb
  41c263:	mov    ebx,esi
  41c265:	add    eax,0x4c24252b
  41c26a:	ds cdq 
  41c26c:	es bswap eax
  41c26f:	push   esi
  41c270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c271:	ss xchg ebp,eax
  41c273:	aaa    
  41c274:	push   ebx
  41c275:	rcr    BYTE PTR [edx-0x5f399daf],1
  41c27b:	enter  0x17d0,0x46
  41c27f:	jle    0x41c2ea
  41c281:	push   eax
  41c282:	in     al,dx
  41c283:	cmp    eax,0xa6a983a3
  41c288:	sub    BYTE PTR [ecx-0x58],0x76
  41c28c:	js     0x41c309
  41c28e:	pusha  
  41c28f:	xchg   esp,eax
  41c290:	cmp    BYTE PTR [edi-0x1ffeda07],ah
  41c296:	adc    dh,BYTE PTR [ecx-0x26]
  41c299:	adc    DWORD PTR [ebx-0x66],ecx
  41c29c:	pop    es
  41c29d:	dec    ebx
  41c29e:	dec    edx
  41c29f:	jns    0x41c278
  41c2a1:	push   0x66
  41c2a3:	mov    al,0xa9
  41c2a5:	push   ebp
  41c2a6:	gs xchg bl,al
  41c2a9:	in     al,dx
  41c2aa:	loope  0x41c2ec
  41c2ac:	add    BYTE PTR [ebp+0x17],dl
  41c2af:	popf   
  41c2b0:	mov    dh,BYTE PTR [ebx]
  41c2b2:	cmp    al,ah
  41c2b4:	out    dx,al
  41c2b5:	rcl    BYTE PTR [ebp-0x43],1
  41c2b8:	imul   edi,DWORD PTR [edi+0x232d24ce],0xffffffde
  41c2bf:	mov    es,eax
  41c2c1:	retf   0x8a73
  41c2c4:	test   BYTE PTR [edx+0x3141d24c],al
  41c2ca:	fdivr  QWORD PTR [ecx-0x26]
  41c2cd:	mov    edi,0xc15cc8dd
  41c2d2:	push   edi
  41c2d3:	push   ecx
  41c2d4:	push   edx
  41c2d5:	outs   dx,DWORD PTR ds:[esi]
  41c2d6:	icebp  
  41c2d7:	test   BYTE PTR [esi],bh
  41c2d9:	iret   
  41c2da:	or     al,BYTE PTR [edi+0x38]
  41c2dd:	or     al,0xa9
  41c2df:	popf   
  41c2e0:	push   esp
  41c2e1:	lock shr edx,0xa7
  41c2e5:	sahf   
  41c2e6:	mov    eax,0x5383c8f2
  41c2eb:	inc    ecx
  41c2ec:	mov    eax,DWORD PTR [eax+eax*8-0x7465576e]
  41c2f3:	jmp    0x4e62:0x7b1e93d5
  41c2fa:	mov    dl,0x48
  41c2fc:	add    esi,DWORD PTR [ecx+0x41]
  41c2ff:	std    
  41c300:	scas   eax,DWORD PTR es:[edi]
  41c301:	jns    0x41c376
  41c303:	sti    
  41c304:	(bad)  
  41c306:	sub    al,0xac
  41c308:	imul   esp,DWORD PTR [esi+0x1927430f],0x3f
  41c30f:	outs   dx,DWORD PTR ds:[esi]
  41c310:	(bad)  
  41c311:	dec    eax
  41c312:	stc    
  41c313:	pop    ecx
  41c314:	(bad)  
  41c315:	cmp    ebx,DWORD PTR [edx]
  41c317:	sub    BYTE PTR [ebp+esi*1-0x75657489],0x9e
  41c31f:	mov    al,ds:0xf3696da7
  41c324:	sbb    BYTE PTR ds:0xe540dff2,ch
  41c32a:	popf   
  41c32b:	push   eax
  41c32c:	dec    edx
  41c32d:	push   cs
  41c32e:	sub    esi,DWORD PTR [edi+0x3b]
  41c331:	fs ins BYTE PTR es:[edi],dx
  41c333:	push   edi
  41c334:	ss or  eax,0xf4c2afa2
  41c33a:	je     0x41c30c
  41c33c:	std    
  41c33d:	ins    DWORD PTR es:[edi],dx
  41c33e:	call   0x4e97:0x33c751bb
  41c345:	jne    0x41c2d9
  41c347:	xor    al,0xba
  41c349:	adc    al,0x4d
  41c34b:	adc    DWORD PTR [esi+0x65],ecx
  41c34e:	out    dx,eax
  41c34f:	sbb    ebx,edi
  41c351:	pop    ds
  41c352:	inc    ecx
  41c353:	cmp    BYTE PTR [esi],bh
  41c355:	jbe    0x41c321
  41c357:	call   0xc2bd:0x203cc929
  41c35e:	cmove  ecx,DWORD PTR [esi-0x63]
  41c362:	add    DWORD PTR [ebp-0x7dfdfa70],ebx
  41c368:	call   FWORD PTR [edi-0x54f2251a]
  41c36e:	cwde   
  41c36f:	leave  
  41c370:	sar    BYTE PTR [ebp+edx*2-0x4e959fb],0x1c
  41c378:	jno    0x41c355
  41c37a:	sti    
  41c37b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c37c:	push   edx
  41c37d:	inc    eax
  41c37e:	fist   WORD PTR [ecx+0x4d82e2bf]
  41c384:	je     0xee72181c
  41c38a:	jg     0x41c3dd
  41c38c:	repz ja 0x41c325
  41c38f:	cmp    BYTE PTR es:[esi],0x1
  41c393:	jle    0x41c369
  41c395:	sub    DWORD PTR [ebx],esi
  41c397:	xor    esi,DWORD PTR [eax]
  41c399:	repnz pop ebx
  41c39b:	pop    edx
  41c39c:	pop    edi
  41c39d:	pop    eax
  41c39e:	rol    BYTE PTR [ebx+0xd453207],1
  41c3a4:	mov    eax,0x8ba351f8
  41c3a9:	hlt    
  41c3aa:	popf   
  41c3ab:	ins    BYTE PTR es:[edi],dx
  41c3ac:	test   eax,0x9b46d849
  41c3b1:	(bad)  
  41c3b2:	adc    BYTE PTR ds:0x46e04bf3,dl
  41c3b8:	mov    ah,0xd3
  41c3ba:	mov    ah,BYTE PTR [eax]
  41c3bc:	pop    ebx
  41c3bd:	(bad)  
  41c3be:	cmp    al,0x61
  41c3c0:	push   ecx
  41c3c1:	push   DWORD PTR [eax]
  41c3c3:	pusha  
  41c3c4:	mov    DWORD PTR [esi+0x60],esi
  41c3c7:	lock in eax,dx
  41c3c9:	shl    DWORD PTR [edx+0xbb6377d],0xa3
  41c3d0:	cdq    
  41c3d1:	cdq    
  41c3d2:	jge    0x41c3f7
  41c3d4:	sbb    ebp,DWORD PTR [eax]
  41c3d6:	add    DWORD PTR [ecx+esi*1+0x66f54e7],esi
  41c3dd:	push   ebx
  41c3de:	jne    0x41c431
  41c3e0:	add    al,0x9f
  41c3e2:	mov    bh,0x6e
  41c3e4:	xor    al,0x32
  41c3e6:	mov    ds:0xb589ac04,eax
  41c3eb:	test   al,0x71
  41c3ed:	fwait
  41c3ee:	add    BYTE PTR [esi-0x66131856],bl
  41c3f4:	or     BYTE PTR [edi],dl
  41c3f6:	mov    bh,0x41
  41c3f8:	mov    ah,0x1d
  41c3fa:	ja     0x41c43d
  41c3fc:	mov    ecx,0xa43fd7ab
  41c401:	mov    DWORD PTR [esi+0x31],ecx
  41c404:	mov    esi,0xd90514b3
  41c409:	mov    ah,0x13
  41c40b:	mov    ebp,0xa8690ceb
  41c410:	mov    ch,0xec
  41c412:	sti    
  41c413:	xlat   BYTE PTR ds:[ebx]
  41c414:	cwd    
  41c416:	push   es
  41c417:	in     al,0x79
  41c419:	mov    DWORD PTR ds:0x87a06e23,edx
  41c41f:	popa   
  41c420:	xchg   esp,eax
  41c421:	ja     0x41c3d8
  41c423:	dec    ecx
  41c424:	mov    dh,0x55
  41c426:	div    BYTE PTR [eax-0x70]
  41c429:	push   edi
  41c42a:	shr    BYTE PTR [ebp-0x7d],1
  41c42d:	(bad)  
  41c42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c42f:	fcomp  QWORD PTR [ecx-0x4a6e8881]
  41c435:	xlat   BYTE PTR ds:[ebx]
  41c436:	popf   
  41c437:	dec    esi
  41c438:	dec    ebp
  41c439:	std    
  41c43a:	add    eax,0x6e7d7747
  41c43f:	and    al,0xf4
  41c441:	mov    ch,0xcc
  41c443:	je     0x41c485
  41c445:	loopne 0x41c3d9
  41c447:	and    BYTE PTR [ecx],ch
  41c449:	icebp  
  41c44a:	mov    ch,0x18
  41c44c:	sbb    ah,BYTE PTR [bp+si+0x17ab]
  41c451:	gs test al,0x61
  41c454:	xor    dh,BYTE PTR [ebp+edi*4-0x63]
  41c458:	cmc    
  41c459:	retf   
  41c45a:	pop    es
  41c45b:	adc    DWORD PTR [eax-0x7b],ebx
  41c45e:	test   BYTE PTR [esi-0x79c3e408],dl
  41c464:	xchg   eax,ebx
  41c466:	adc    ecx,DWORD PTR [edx+0x16]
  41c469:	loope  0x41c47a
  41c46b:	push   ds
  41c46c:	nop
  41c46d:	fsub   DWORD PTR [ebx+0x3fd61dba]
  41c473:	or     ebp,ebp
  41c475:	das    
  41c476:	jecxz  0x41c496
  41c478:	jo     0x41c408
  41c47a:	nop
  41c47b:	ficom  DWORD PTR [eax-0x22]
  41c47e:	enter  0xfe7c,0x8c
  41c482:	jo     0x41c4b5
  41c484:	jmp    0xb59c68d3
  41c489:	dec    esp
  41c48a:	mov    dh,0x59
  41c48c:	mov    fs,WORD PTR [eax+0x74]
  41c48f:	js     0x41c484
  41c491:	mov    ebx,0x2089950c
  41c496:	and    DWORD PTR [esi-0x8d7af25],0xffffff9a
  41c49d:	mov    ebx,eax
  41c49f:	je     0x41c49a
  41c4a1:	ja     0x41c4ac
  41c4a3:	fadd   DWORD PTR [edx-0x48]
  41c4a6:	pop    ebp
  41c4a7:	fdivrp st(2),st
  41c4a9:	add    DWORD PTR [ebx+ebx*1+0x60],ebp
  41c4ad:	cld    
  41c4ae:	mov    ebp,0xf6b0369e
  41c4b3:	or     al,BYTE PTR [ebp-0x80]
  41c4b6:	addr16 shr bl,1
  41c4b9:	aaa    
  41c4ba:	in     eax,0x19
  41c4bc:	leave  
  41c4bd:	daa    
  41c4be:	imul   ecx,DWORD PTR [edi+0x1fa4f37],0x70
  41c4c5:	sti    
  41c4c6:	inc    edi
  41c4c7:	fdivrp st(4),st
  41c4c9:	xor    al,cl
  41c4cb:	or     eax,0xb724efc
  41c4d0:	pushf  
  41c4d1:	sub    ecx,DWORD PTR [ecx]
  41c4d3:	dec    eax
  41c4d4:	adc    ebp,ecx
  41c4d6:	adc    dl,BYTE PTR [edi-0x7bae8aeb]
  41c4dc:	jne    0x41c4cf
  41c4de:	(bad)  
  41c4df:	mov    ebx,0xc7367bda
  41c4e4:	mov    ch,0x5b
  41c4e6:	and    bl,BYTE PTR [edi-0x55cd2fb5]
  41c4ec:	add    dh,BYTE PTR ds:0x9b2790d6
  41c4f2:	xchg   edi,eax
  41c4f3:	fwait
  41c4f4:	loope  0x41c55a
  41c4f6:	push   esi
  41c4f7:	jecxz  0x41c55c
  41c4f9:	pop    ds
  41c4fa:	das    
  41c4fb:	and    edi,ecx
  41c4fd:	sahf   
  41c4fe:	imul   edx,eax,0xfee0a53
  41c504:	ins    DWORD PTR es:[edi],dx
  41c505:	sbb    eax,0x15e54095
  41c50a:	push   DWORD PTR [edi+ebx*1]
  41c50d:	push   eax
  41c50e:	retf   
  41c50f:	jae    0x41c4d3
  41c511:	mov    ah,0xaf
  41c513:	pop    edx
  41c514:	xlat   BYTE PTR ds:[ebx]
  41c515:	test   al,0x9b
  41c517:	rol    al,1
  41c519:	aas    
  41c51a:	or     bh,BYTE PTR [esi+0x12e517ad]
  41c520:	pop    ebp
  41c521:	mov    al,0x76
  41c523:	sub    eax,0x2bde9187
  41c528:	xor    eax,0x67cffee
  41c52d:	pop    es
  41c52e:	and    BYTE PTR [esi-0x44],ch
  41c531:	les    ebp,FWORD PTR ds:0xdb30a17f
  41c537:	sub    ecx,DWORD PTR [ebp+esi*8-0x66f8cca0]
  41c53e:	adc    eax,0x92f3d77a
  41c543:	dec    eax
  41c544:	xor    eax,0x913f3f93
  41c549:	inc    edx
  41c54a:	fsubr  DWORD PTR [ebx+0x4d]
  41c54d:	stos   BYTE PTR es:[edi],al
  41c54e:	enter  0x159f,0x15
  41c552:	mov    WORD PTR [edi*2-0x1f263e1d],gs
  41c559:	outs   dx,BYTE PTR ds:[esi]
  41c55a:	cmp    al,0xde
  41c55c:	aaa    
  41c55d:	out    0xbb,al
  41c55f:	inc    edi
  41c560:	loopne 0x41c568
  41c562:	out    0x14,eax
  41c564:	mov    ds:0x66bb4fc0,al
  41c569:	(bad)  
  41c56a:	cmp    eax,0x73ed777a
  41c56f:	loope  0x41c524
  41c571:	pop    ecx
  41c572:	out    dx,eax
  41c573:	in     eax,dx
  41c574:	push   esi
  41c575:	lods   eax,DWORD PTR ds:[esi]
  41c576:	xchg   esi,eax
  41c577:	outs   dx,DWORD PTR ds:[esi]
  41c578:	pop    esi
  41c579:	outs   dx,DWORD PTR ds:[esi]
  41c57a:	mov    bh,0x10
  41c57c:	psubw  mm2,QWORD PTR [edx-0x61d2b97f]
  41c583:	push   ebp
  41c584:	fnstsw WORD PTR [edi]
  41c586:	aas    
  41c587:	outs   dx,DWORD PTR ds:[esi]
  41c588:	daa    
  41c589:	ins    DWORD PTR es:[edi],dx
  41c58a:	fnstsw WORD PTR [edx-0x20]
  41c58d:	(bad)  
  41c58e:	loope  0x41c55f
  41c590:	adc    edx,esi
  41c592:	dec    esi
  41c593:	aaa    
  41c594:	xchg   DWORD PTR [esp+edi*4],eax
  41c597:	retf   
  41c598:	repz mov edi,0x79765132
  41c59e:	loope  0x41c60a
  41c5a0:	bound  esi,QWORD PTR [edi-0x345e0b6e]
  41c5a6:	jmp    0x253e:0xa544c0a
  41c5ad:	jle    0x41c580
  41c5af:	jmp    0x41c59f
  41c5b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5b2:	push   ebx
  41c5b3:	retf   0xe994
  41c5b6:	jo     0x41c5d7
  41c5b8:	cwde   
  41c5b9:	jle    0x41c58f
  41c5bb:	imul   esp,DWORD PTR [edx-0x19],0xdadd90ee
  41c5c2:	xor    eax,0x6a8de2b1
  41c5c7:	dec    esp
  41c5c8:	adc    al,0xe1
  41c5ca:	push   ss
  41c5cb:	popa   
  41c5cc:	pusha  
  41c5cd:	cmp    al,0xc9
  41c5cf:	(bad)  
  41c5d0:	mov    bl,0xb
  41c5d2:	lods   al,BYTE PTR ds:[esi]
  41c5d3:	or     ebx,ecx
  41c5d5:	sbb    ecx,DWORD PTR [ebx]
  41c5d7:	add    BYTE PTR [edi],bl
  41c5d9:	fnstsw WORD PTR [eax+0x3718ee7]
  41c5df:	push   edi
  41c5e0:	or     bh,BYTE PTR [edx+0x59]
  41c5e3:	dec    edx
  41c5e4:	imul   eax,DWORD PTR [ebp+0x49185606],0x843ad084
  41c5ee:	ins    BYTE PTR es:[edi],dx
  41c5ef:	pop    edi
  41c5f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5f1:	fisubr DWORD PTR [edi-0xc]
  41c5f4:	xor    edi,DWORD PTR [ecx-0x5e27e63]
  41c5fa:	pop    ss
  41c5fb:	out    dx,al
  41c5fc:	ja     0x41c663
  41c5fe:	xchg   esi,eax
  41c5ff:	call   0x51ae8068
  41c604:	push   0xc931ef3e
  41c609:	and    edi,DWORD PTR [ebx]
  41c60b:	jg     0x41c637
  41c60d:	push   edx
  41c60e:	sbb    BYTE PTR [ebp+0xd],0x26
  41c612:	retf   
  41c613:	sub    BYTE PTR [ecx],bh
  41c615:	das    
  41c616:	dec    ebp
  41c617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c618:	mov    esp,0xb704effc
  41c61d:	loop   0x41c639
  41c61f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c620:	imul   ecx,DWORD PTR [edi+0x3601bd84],0xffffff9f
  41c627:	sbb    esi,ebp
  41c629:	pop    ss
  41c62a:	cs (bad) 
  41c62c:	aad    0x95
  41c62e:	xchg   DWORD PTR [edx+0x257bb490],eax
  41c634:	int    0xd7
  41c636:	push   ds
  41c637:	xlat   BYTE PTR ds:[ebx]
  41c638:	jbe    0x41c5ed
  41c63a:	ror    ecx,0x41
  41c63d:	clc    
  41c63e:	mov    ch,0xb9
  41c640:	das    
  41c641:	sbb    bl,ch
  41c643:	aam    0x60
  41c645:	jmp    0xeb794451
  41c64a:	push   edi
  41c64b:	in     al,dx
  41c64c:	retf   0x55e0
  41c64f:	pop    edi
  41c650:	loope  0x41c62d
  41c652:	xchg   edi,eax
  41c653:	je     0x41c610
  41c655:	mov    dh,0x95
  41c657:	cs loope 0x41c5f8
  41c65a:	xchg   edi,eax
  41c65b:	rcr    BYTE PTR [esi],cl
  41c65d:	mov    edi,DWORD PTR [esi-0x6d]
  41c660:	jno    0x41c64e
  41c662:	xchg   DWORD PTR [eax-0x52],ebx
  41c665:	mov    ebp,0xe6a3b05f
  41c66a:	jp     0x41c6c0
  41c66c:	lahf   
  41c66d:	sbb    esp,DWORD PTR [ebp-0x5420a0f]
  41c673:	xor    DWORD PTR [ebx-0x46],eax
  41c676:	retf   0xe53c
  41c679:	lods   eax,DWORD PTR ds:[esi]
  41c67a:	push   eax
  41c67b:	jl     0x41c633
  41c67d:	popa   
  41c67e:	pop    edx
  41c67f:	clc    
  41c680:	jo     0x41c6e4
  41c682:	ja     0x41c616
  41c684:	lods   al,BYTE PTR cs:[esi]
  41c686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c687:	inc    eax
  41c688:	mov    edx,0x4818bc12
  41c68d:	sbb    al,0xad
  41c68f:	into   
  41c690:	cmc    
  41c691:	les    edx,FWORD PTR [edx-0x23]
  41c694:	pop    ebp
  41c695:	inc    ecx
  41c696:	jle    0x41c642
  41c698:	and    bh,BYTE PTR [ebx-0x3baea624]
  41c69e:	cli    
  41c69f:	xchg   esp,eax
  41c6a0:	or     al,0x9e
  41c6a2:	xor    DWORD PTR [edx],eax
  41c6a4:	mov    eax,0xad6c620
  41c6a9:	sub    DWORD PTR [edx],eax
  41c6ab:	test   DWORD PTR [ecx],esi
  41c6ad:	push   es
  41c6ae:	sub    ch,BYTE PTR [ecx-0x65c9cbfc]
  41c6b4:	or     DWORD PTR [edx-0x6c4e78d2],esi
  41c6ba:	and    al,0x7d
  41c6bc:	(bad)  
  41c6bd:	cmp    BYTE PTR [edi-0x53],dh
  41c6c0:	lods   al,BYTE PTR ds:[esi]
  41c6c1:	add    cl,BYTE PTR [ebp+0x34]
  41c6c4:	sahf   
  41c6c5:	pop    ebx
  41c6c6:	sbb    DWORD PTR [edi],ebx
  41c6c8:	sub    cl,BYTE PTR [ecx-0x3a]
  41c6cb:	imul   ecx,DWORD PTR [eax],0xc3984ff5
  41c6d1:	mov    al,ds:0xfdd36d47
  41c6d6:	mov    edi,0x66d127d4
  41c6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6dc:	addr16 fwait
  41c6de:	inc    ebx
  41c6df:	pop    esp
  41c6e0:	(bad)  
  41c6e1:	xchg   esp,eax
  41c6e2:	pop    ebp
  41c6e3:	(bad)  
  41c6e5:	inc    eax
  41c6e6:	sbb    dl,dl
  41c6e8:	inc    edx
  41c6e9:	sub    DWORD PTR [ecx],edx
  41c6eb:	mov    al,ds:0xb0dbfcbd
  41c6f0:	adc    esp,DWORD PTR [edi]
  41c6f2:	cmp    BYTE PTR [eax+0x230398c4],0xa9
  41c6f9:	sbb    BYTE PTR [edx-0x4a],bh
  41c6fc:	sbb    al,dl
  41c6fe:	ins    BYTE PTR es:[edi],dx
  41c6ff:	js     0x41c761
  41c701:	xchg   ah,ah
  41c703:	rcl    eax,1
  41c705:	adc    eax,0x908bd894
  41c70a:	dec    ebp
  41c70b:	addr16 mov eax,edi
  41c70e:	push   edx
  41c70f:	and    ah,BYTE PTR [ebx+0x4470ed73]
  41c715:	ds call 0x1c17e094
  41c71b:	call   0xd71c66b3
  41c720:	push   esp
  41c721:	dec    edi
  41c722:	cmp    al,0x1e
  41c724:	xor    ebp,ecx
  41c726:	mov    BYTE PTR cs:[edx],dh
  41c729:	sub    esi,edx
  41c72b:	sbb    bh,BYTE PTR [edx-0x38]
  41c72e:	mov    dl,0x70
  41c730:	adc    edx,ecx
  41c732:	out    0x86,eax
  41c734:	fisub  DWORD PTR fs:[edi-0x28]
  41c738:	add    ebp,DWORD PTR [ebx]
  41c73a:	or     ebx,ebx
  41c73c:	out    0x3e,eax
  41c73e:	push   es
  41c73f:	add    DWORD PTR [edi-0x15],esp
  41c742:	pop    edi
  41c743:	pop    edi
  41c744:	add    eax,0x40bf8142
  41c749:	pop    ebp
  41c74a:	adc    BYTE PTR [edx-0x7e],dl
  41c74d:	xchg   esp,eax
  41c74e:	sbb    edi,DWORD PTR [edi]
  41c750:	mov    WORD PTR [ecx-0x2c42b9e8],cs
  41c756:	mov    ds:0x451782ae,eax
  41c75b:	jo     0x41c758
  41c75d:	iret   
  41c75e:	mov    edi,0x4dc7de78
  41c763:	sub    BYTE PTR [edx-0x7f],0xd7
  41c767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c768:	fnstcw WORD PTR [edx]
  41c76a:	sub    DWORD PTR [ecx],ebx
  41c76c:	div    BYTE PTR ds:0xeff13502
  41c772:	out    dx,al
  41c773:	pop    es
  41c774:	jle    0x41c705
  41c776:	mov    ds:0x2384f731,eax
  41c77c:	or     bl,bh
  41c77e:	mov    al,0x20
  41c780:	cli    
  41c781:	sar    bl,cl
  41c783:	xor    eax,0x9424edb9
  41c788:	jg     0x41c7fe
  41c78a:	mov    cs,WORD PTR [edi+0x73]
  41c78d:	xchg   ebx,eax
  41c78e:	sub    al,0x3b
  41c790:	jge    0x41c7d9
  41c792:	popf   
  41c793:	hlt    
  41c794:	arpl   WORD PTR [esi+0x7e],cx
  41c797:	xor    ebx,DWORD PTR [eax+0x2c5a6eed]
  41c79d:	daa    
  41c79e:	addr16 pop ecx
  41c7a0:	fs dec esp
  41c7a2:	mov    eax,ds:0x2fb442a7
  41c7a7:	mov    ds:0xb35ed45c,al
  41c7ac:	cmp    dl,BYTE PTR [edi+0x234aac41]
  41c7b2:	rcl    DWORD PTR [esi-0x29],1
  41c7b5:	arpl   WORD PTR [ebp-0x6ade3b51],bp
  41c7bb:	jno    0x41c7e5
  41c7bd:	popf   
  41c7be:	(bad)  
  41c7bf:	pop    ebp
  41c7c0:	rcr    DWORD PTR [eax+0x30],1
  41c7c3:	push   edi
  41c7c4:	jmp    0xd1af:0xdbd712ce
  41c7cb:	int    0xbb
  41c7cd:	cmp    al,0xa4
  41c7cf:	ds (bad) 
  41c7d1:	pop    ds
  41c7d2:	mov    eax,ds:0xc4ad32c0
  41c7d7:	sub    ebp,DWORD PTR [eax-0x74]
  41c7da:	sub    BYTE PTR [edx+edi*2-0x5],al
  41c7de:	inc    ebp
  41c7df:	and    DWORD PTR [edx],0x1cbde915
  41c7e5:	(bad)  
  41c7e6:	adc    al,0x93
  41c7e8:	xchg   bh,ah
  41c7ea:	js     0x41c84d
  41c7ec:	aad    0x9a
  41c7ee:	xchg   esi,eax
  41c7ef:	and    al,0x23
  41c7f1:	jno    0x41c858
  41c7f3:	xchg   esp,eax
  41c7f4:	retf   0xf76c
  41c7f7:	add    ah,bl
  41c7f9:	mov    dl,0xac
  41c7fb:	pusha  
  41c7fc:	and    BYTE PTR [eax+0x49],dl
  41c7ff:	out    0x2a,al
  41c801:	mov    al,0xa9
  41c803:	jecxz  0x41c86b
  41c805:	rol    BYTE PTR [edx],1
  41c807:	loope  0x41c854
  41c809:	xor    ecx,ebx
  41c80b:	(bad)  [esi+0x7f856beb]
  41c811:	pop    eax
  41c812:	fidiv  DWORD PTR [edi]
  41c814:	xor    DWORD PTR [eax-0xe632492],ecx
  41c81a:	aam    0x8e
  41c81c:	adc    eax,0x17bf3a0f
  41c821:	inc    ebp
  41c822:	js     0x41c7aa
  41c824:	push   edx
  41c825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c826:	ret    0x65e0
  41c829:	popa   
  41c82a:	test   ah,dl
  41c82c:	xchg   edi,eax
  41c82d:	jp     0x41c841
  41c82f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c830:	sub    edi,DWORD PTR [eax-0x67aa8f3c]
  41c836:	push   0xcc9c6a82
  41c83b:	xor    bl,BYTE PTR ss:[edx+0x58c07500]
  41c842:	adc    DWORD PTR [edi],esp
  41c844:	leave  
  41c845:	repnz fld st(3)
  41c848:	mov    dl,0x6b
  41c84a:	mov    WORD PTR [edi+0x73],?
  41c84d:	iret   
  41c84e:	das    
  41c84f:	mov    al,0x6
  41c851:	cmp    dh,ch
  41c853:	sub    BYTE PTR [ebp-0x4b],ch
  41c856:	mov    ebx,0xa120865e
  41c85b:	mov    fs,WORD PTR [esi-0x29]
  41c85e:	rcr    BYTE PTR [esi+eax*2],1
  41c861:	cmp    BYTE PTR ds:0x3c1d8b68,0xa9
  41c868:	in     al,dx
  41c869:	loope  0x41c88f
  41c86b:	mov    dl,dl
  41c86d:	ja     0x41c7f3
  41c86f:	cmp    BYTE PTR [edi],dl
  41c871:	mov    BYTE PTR [ecx],bl
  41c873:	shl    BYTE PTR [ebp+0x6e],cl
  41c876:	aam    0x3c
  41c878:	ret    
  41c879:	add    eax,0xd784bc0e
  41c87e:	cmp    edx,DWORD PTR [ebp-0x23535b14]
  41c884:	hlt    
  41c885:	rcl    ebx,1
  41c887:	sub    esi,DWORD PTR [eax]
  41c889:	cmc    
  41c88a:	mov    WORD PTR [ebx-0x7a],?
  41c88d:	pop    eax
  41c88e:	and    al,0x14
  41c890:	lea    eax,[edx+0x26]
  41c893:	sbb    eax,0xeae41b6c
  41c898:	and    eax,0x62bc8df4
  41c89d:	sub    eax,0x1fd158ad
  41c8a2:	mov    eax,0xf775a451
  41c8a7:	arpl   WORD PTR [ecx+0x4e876304],bp
  41c8ad:	mov    WORD PTR [eax+0x73e0a3e0],fs
  41c8b3:	sub    bl,dh
  41c8b5:	jge    0x41c907
  41c8b7:	push   0xffffffc3
  41c8b9:	mov    eax,ds:0x2e6a6846
  41c8be:	popa   
  41c8bf:	xor    BYTE PTR [eax-0x4c],bl
  41c8c2:	jecxz  0x41c8b6
  41c8c4:	pusha  
  41c8c5:	call   0x54da9990
  41c8ca:	mov    edx,0x6f3dd4a6
  41c8cf:	cmp    eax,0xdeb1ecdc
  41c8d4:	popa   
  41c8d5:	gs cld 
  41c8d7:	inc    ebx
  41c8d8:	pop    esp
  41c8d9:	sbb    ebp,esi
  41c8db:	icebp  
  41c8dc:	loop   0x41c897
  41c8de:	xor    cl,BYTE PTR fs:[ebp-0x5b6024a2]
  41c8e5:	leave  
  41c8e6:	outs   dx,BYTE PTR ds:[esi]
  41c8e7:	xor    al,0x3d
  41c8e9:	ss mov eax,0x68d6a8da
  41c8ef:	outs   dx,BYTE PTR ds:[esi]
  41c8f0:	xchg   ecx,eax
  41c8f1:	jge    0x41c87d
  41c8f3:	jb     0x41c91f
  41c8f5:	loop   0x41c894
  41c8f7:	lods   al,BYTE PTR ds:[esi]
  41c8f8:	out    dx,eax
  41c8f9:	mov    esp,0x5b35d3ba
  41c8fe:	icebp  
  41c8ff:	ror    BYTE PTR [eax],0x9d
  41c902:	adc    eax,0xd82861a6
  41c907:	push   ebx
  41c908:	mov    eax,ds:0xfff8656c
  41c90d:	mov    esp,0x44d1be88
  41c912:	cmp    DWORD PTR [eax],ebx
  41c914:	pop    eax
  41c915:	sub    eax,0xf221644
  41c91a:	repnz pusha 
  41c91c:	mov    ds:0x19f3ff17,al
  41c921:	imul   ebp,eax,0xcba86e8a
  41c927:	aad    0xc3
  41c929:	frstor [eax]
  41c92b:	fnstenv [ebx]
  41c92d:	xor    al,0xf2
  41c92f:	xchg   edi,eax
  41c930:	addr16 pop ebx
  41c932:	mov    ch,0xec
  41c934:	xchg   ebp,eax
  41c935:	xchg   ebx,eax
  41c936:	or     eax,0x219c7392
  41c93b:	cmp    al,0xe7
  41c93d:	jge    0x41c9a2
  41c93f:	andps  xmm3,xmm3
  41c942:	mov    al,ds:0x4b3b790e
  41c947:	or     DWORD PTR [edi+0x50],edx
  41c94a:	xchg   DWORD PTR [ebp+0x328ce762],ebx
  41c950:	pop    ecx
  41c951:	call   0x372b4c80
  41c956:	das    
  41c957:	addr16 add eax,0x294b9994
  41c95d:	loop   0x41c9ac
  41c95f:	add    al,0xb5
  41c961:	xchg   edx,eax
  41c962:	aaa    
  41c963:	sahf   
  41c964:	imul   ebx,DWORD PTR [ebp+ebp*8+0x1272447c],0xfffffff5
  41c96c:	dec    ecx
  41c96d:	xchg   edx,eax
  41c96e:	(bad)  
  41c96f:	fcmovne st,st(1)
  41c971:	mov    ?,WORD PTR [ecx-0x2d]
  41c974:	push   esp
  41c975:	mov    ds:0x7205ed6e,eax
  41c97a:	mov    al,0xf
  41c97c:	sbb    DWORD PTR [eax+eiz*4-0x4a],eax
  41c980:	mov    BYTE PTR [ecx+0x4e],ah
  41c983:	mov    BYTE PTR [eax+0x24],bl
  41c986:	or     DWORD PTR [edx+0x35],ebp
  41c989:	mov    WORD PTR [edi+ebp*8+0x3],?
  41c98d:	inc    eax
  41c98e:	pop    esp
  41c98f:	ins    BYTE PTR es:[edi],dx
  41c990:	ret    0x2852
  41c993:	inc    ecx
  41c994:	stos   BYTE PTR es:[edi],al
  41c995:	xor    DWORD PTR [esi+0x5b8f2ea6],ecx
  41c99b:	mov    ecx,0xd6736404
  41c9a0:	inc    eax
  41c9a1:	adc    al,0xff
  41c9a3:	mov    edi,0xc7cc743c
  41c9a8:	pop    edx
  41c9a9:	sub    bh,BYTE PTR [edx+0x39]
  41c9ac:	sti    
  41c9ad:	addr16 dec ebp
  41c9af:	int3   
  41c9b0:	xchg   edi,eax
  41c9b1:	out    0xae,eax
  41c9b3:	add    al,0x3e
  41c9b5:	inc    ecx
  41c9b6:	xchg   BYTE PTR [esi-0x11b867c2],dl
  41c9bc:	adc    BYTE PTR [edi],bh
  41c9be:	pop    edi
  41c9bf:	std    
  41c9c0:	pop    eax
  41c9c1:	inc    ebx
  41c9c2:	push   cs
  41c9c3:	xor    al,0x69
  41c9c5:	pop    ds
  41c9c6:	xor    ecx,DWORD PTR [ebp+edx*2+0x20]
  41c9ca:	lds    esp,FWORD PTR [esi-0x50]
  41c9cd:	jnp    0x41ca0a
  41c9cf:	(bad)  
  41c9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9d1:	and    eax,0x4421f3fe
  41c9d6:	gs (bad) 
  41c9d8:	cmp    al,0x7f
  41c9da:	mov    eax,ds:0x48c0a78c
  41c9df:	nop
  41c9e0:	rcl    DWORD PTR [eax-0x3dd51a61],cl
  41c9e6:	xor    BYTE PTR [ebp+edx*8+0x653abfab],cl
  41c9ed:	adc    al,0x9b
  41c9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9f0:	mov    ds:0x72511a4b,eax
  41c9f5:	in     eax,dx
  41c9f6:	stos   DWORD PTR es:[edi],eax
  41c9f7:	xchg   edi,eax
  41c9f8:	inc    ecx
  41c9f9:	push   ds
  41c9fa:	xchg   ebx,eax
  41c9fb:	mov    al,0xc0
  41c9fd:	push   ebx
  41c9fe:	jb     0x41ca65
  41ca00:	push   edi
  41ca01:	mov    eax,ds:0xdb987d5b
  41ca06:	call   0x9b1db284
  41ca0b:	enter  0xf3ae,0xfe
  41ca0f:	mov    esp,0x9eab8538
  41ca14:	sub    DWORD PTR [ecx+0x7d],eax
  41ca17:	or     eax,0xc1e5e3ca
  41ca1c:	pop    eax
  41ca1d:	fsub   QWORD PTR [edi]
  41ca1f:	dec    edi
  41ca20:	rdgsbase ebp
  41ca24:	imul   eax,DWORD PTR [ecx+0x1baf119b],0x3dcd4f83
  41ca2e:	sbb    al,0x3f
  41ca30:	mov    cl,0x55
  41ca32:	cmp    DWORD PTR [eax],0x9fe0bd90
  41ca38:	stc    
  41ca39:	stos   BYTE PTR es:[edi],al
  41ca3a:	out    0x0,eax
  41ca3c:	bound  ebx,QWORD PTR [edi]
  41ca3e:	xchg   edx,eax
  41ca3f:	add    eax,0xb04eb0a5
  41ca44:	je     0x41ca52
  41ca46:	or     eax,0xa9ad2887
  41ca4b:	inc    edi
  41ca4c:	shl    BYTE PTR [esi+0x4e8e74b8],1
  41ca52:	dec    eax
  41ca53:	aad    0xee
  41ca55:	repz cdq 
  41ca57:	sahf   
  41ca58:	mov    ah,0xe3
  41ca5a:	in     al,dx
  41ca5b:	aaa    
  41ca5c:	inc    eax
  41ca5d:	sbb    eax,0xdd1a1311
  41ca62:	xor    eax,0xa5f6a230
  41ca67:	mov    ecx,0x67664f66
  41ca6c:	push   ecx
  41ca6d:	mov    esi,0xaccb47b2
  41ca72:	push   ds
  41ca73:	cdq    
  41ca74:	push   ss
  41ca75:	rol    DWORD PTR [ecx+0x38d39a08],cl
  41ca7b:	xor    DWORD PTR [edi],edx
  41ca7d:	ja     0x41ca87
  41ca7f:	add    eax,0x4873d7e6
  41ca84:	inc    eax
  41ca85:	mov    al,0x62
  41ca87:	xchg   ebp,eax
  41ca88:	call   0x7fc24cde
  41ca8d:	lds    esi,FWORD PTR ds:0x62899b63
  41ca93:	push   ds
  41ca94:	sub    eax,0xf54ce37d
  41ca99:	mov    bl,0x8
  41ca9b:	xor    eax,0xbf1b02fd
  41caa0:	cmp    ecx,ebx
  41caa2:	(bad)  
  41caa3:	push   ebp
  41caa4:	int    0x15
  41caa6:	mov    al,ds:0x12fbcea
  41caab:	test   BYTE PTR [eax-0x71c6d71c],cl
  41cab1:	jle    0x41ca98
  41cab3:	rol    DWORD PTR [ecx-0x20],0xe
  41cab7:	jmp    0x41ca4b
  41cab9:	popf   
  41caba:	cmp    eax,0x6c4c7a32
  41cabf:	pop    ebp
  41cac0:	stc    
  41cac1:	(bad)  
  41cac2:	neg    edx
  41cac4:	mov    cl,0x29
  41cac6:	inc    eax
  41cac7:	pusha  
  41cac8:	mov    ch,0xae
  41caca:	mov    dh,0x89
  41cacc:	imul   ecx,DWORD PTR [edx+0x7c],0xd
  41cad0:	out    0x4,al
  41cad2:	push   eax
  41cad3:	repnz dec eax
  41cad5:	test   BYTE PTR [ebx+0x6d],dh
  41cad8:	test   BYTE PTR [esi+eiz*2+0xfedc697],al
  41cadf:	nop
  41cae0:	and    DWORD PTR [ecx+0x7b],0x6d
  41cae4:	pop    ss
  41cae5:	fnstcw WORD PTR ds:0x33dd62ff
  41caeb:	outs   dx,DWORD PTR ds:[esi]
  41caec:	jmp    0x9ac9:0x7fa6aea5
  41caf3:	mov    cl,0xe4
  41caf5:	in     eax,0xe7
  41caf7:	(bad)  
  41caf8:	lds    esi,FWORD PTR [edx+0x11434707]
  41cafe:	nop
  41caff:	ins    DWORD PTR es:[edi],dx
  41cb00:	mov    ecx,0xd728b783
  41cb05:	and    esi,DWORD PTR [eax+0x1945e2b4]
  41cb0b:	pop    edx
  41cb0c:	jp     0x41caa4
  41cb0e:	ins    DWORD PTR es:[edi],dx
  41cb0f:	out    dx,al
  41cb10:	sar    bh,0x91
  41cb13:	inc    eax
  41cb14:	sub    DWORD PTR gs:[ebp+0x49f30478],edx
  41cb1b:	test   ebx,edx
  41cb1d:	data16 out 0x1a,al
  41cb20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb21:	jns    0x41cb7b
  41cb23:	sub    esi,DWORD PTR [edx-0x56]
  41cb26:	adc    DWORD PTR [eax-0x9],ecx
  41cb29:	js     0x41cad1
  41cb2b:	xchg   esp,eax
  41cb2c:	in     al,dx
  41cb2d:	inc    edi
  41cb2e:	inc    eax
  41cb2f:	mov    esp,0x79f15050
  41cb34:	outs   dx,BYTE PTR ds:[esi]
  41cb35:	pusha  
  41cb36:	lea    esp,[edi-0xed1e02b]
  41cb3c:	sub    eax,0xaae097df
  41cb41:	xchg   ebx,eax
  41cb42:	pop    edi
  41cb43:	cmp    BYTE PTR [edx+0x5],dh
  41cb46:	mov    ds:0x80d6f210,al
  41cb4b:	mov    edi,0x432e0df9
  41cb50:	adc    eax,0x4c08dc2
  41cb55:	stos   BYTE PTR es:[edi],al
  41cb56:	call   0x8e35:0x17907c6f
  41cb5d:	jns    0x41cb26
  41cb5f:	stc    
  41cb60:	mov    edx,DWORD PTR ds:0x49d2561b
  41cb66:	sbb    eax,0x25911c64
  41cb6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb6c:	jnp    0x41cb86
  41cb6e:	das    
  41cb6f:	sbb    eax,0x7de93c10
  41cb74:	sahf   
  41cb75:	or     cl,al
  41cb77:	int    0xaa
  41cb79:	push   cs
  41cb7a:	pusha  
  41cb7b:	cmp    DWORD PTR [edx],0xdc7b67b1
  41cb81:	fst    QWORD PTR [edi]
  41cb83:	add    dl,BYTE PTR ds:0xb4d12b12
  41cb89:	push   ebx
  41cb8a:	inc    edi
  41cb8b:	fwait
  41cb8c:	sbb    eax,0x2b678f42
  41cb91:	xor    BYTE PTR [edx],bh
  41cb93:	or     al,0x8d
  41cb95:	int3   
  41cb96:	ficom  DWORD PTR [ebx-0x6a]
  41cb99:	cmp    dl,BYTE PTR [esi-0x2e124704]
  41cb9f:	or     eax,0xae85ff22
  41cba4:	aaa    
  41cba5:	push   eax
  41cba6:	ins    BYTE PTR es:[edi],dx
  41cba7:	dec    ebp
  41cba8:	sub    al,dh
  41cbaa:	loopne 0x41cbe2
  41cbac:	xchg   DWORD PTR [esp+ebp*4-0x63],ebp
  41cbb0:	mov    ch,0x73
  41cbb2:	dec    ebp
  41cbb3:	scas   eax,DWORD PTR es:[edi]
  41cbb4:	mov    DWORD PTR [edx],edi
  41cbb6:	push   ebx
  41cbb7:	dec    ecx
  41cbb8:	jnp    0x41cbda
  41cbba:	popf   
  41cbbb:	xchg   ecx,esp
  41cbbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbbe:	nop
  41cbbf:	mov    eax,0xe08c9e97
  41cbc4:	mov    DWORD PTR [edi+0x37c0f5b1],eax
  41cbca:	or     BYTE PTR [ecx],ah
  41cbcc:	sbb    al,0x7c
  41cbce:	jns    0x41cc09
  41cbd0:	scas   al,BYTE PTR es:[edi]
  41cbd1:	or     al,0x3d
  41cbd3:	test   BYTE PTR [ebx],ah
  41cbd5:	and    DWORD PTR [esi],eax
  41cbd7:	inc    ecx
  41cbd8:	pop    es
  41cbd9:	inc    ebp
  41cbda:	loop   0x41cbf6
  41cbdc:	xchg   esi,eax
  41cbdd:	pop    ss
  41cbde:	aas    
  41cbdf:	jg     0x41cb90
  41cbe1:	es iret 
  41cbe3:	mov    bl,0x30
  41cbe5:	inc    esp
  41cbe6:	and    bl,BYTE PTR [esp+edx*2]
  41cbe9:	xchg   ah,al
  41cbeb:	test   DWORD PTR [edx+0x12],ebx
  41cbee:	mov    BYTE PTR [ebx],ah
  41cbf0:	push   eax
  41cbf1:	xlat   BYTE PTR ds:[ebx]
  41cbf2:	test   eax,0x501eec25
  41cbf7:	cmp    al,0x32
  41cbf9:	jmp    0x26e2:0xd2f3fe71
  41cc00:	leave  
  41cc01:	hlt    
  41cc02:	adc    al,0x98
  41cc04:	and    dh,BYTE PTR [ecx+0x49ad7150]
  41cc0a:	mov    eax,0xbe8d5164
  41cc0f:	jge    0x41cc5f
  41cc11:	jle    0x41cbcf
  41cc13:	pop    esp
  41cc14:	cdq    
  41cc15:	push   esi
  41cc16:	in     eax,0xda
  41cc18:	mov    WORD PTR [ebp+0x27],ds
  41cc1b:	(bad)  
  41cc1c:	cmp    edi,ebp
  41cc1e:	mov    ebx,0xd0db708e
  41cc23:	cli    
  41cc24:	sbb    BYTE PTR [esi-0x53b676c4],dh
  41cc2a:	lods   al,BYTE PTR ds:[esi]
  41cc2b:	nop
  41cc2c:	mov    edx,0x49d4ade7
  41cc31:	cmp    eax,0x10610f72
  41cc36:	out    0x13,al
  41cc38:	and    DWORD PTR [eax+0x30f1f0c0],0xffffffe1
  41cc3f:	(bad)  
  41cc40:	fild   QWORD PTR [ecx]
  41cc42:	sub    BYTE PTR [edx+0x34],ch
  41cc45:	jle    0x41cc61
  41cc47:	adc    bh,BYTE PTR [edi]
  41cc49:	addr16 xchg ecx,eax
  41cc4b:	or     ecx,DWORD PTR [ebx+0x75]
  41cc4e:	sub    BYTE PTR [esi],0xd7
  41cc51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc52:	fnstenv ds:0x41e98ce9
  41cc58:	inc    ebx
  41cc59:	dec    ebx
  41cc5a:	xor    edx,esi
  41cc5c:	dec    edi
  41cc5d:	dec    ecx
  41cc5e:	pop    eax
  41cc5f:	mov    BYTE PTR [ecx+0x36],ch
  41cc62:	mov    al,0xed
  41cc64:	push   esp
  41cc65:	pusha  
  41cc66:	push   0xd5aaef93
  41cc6b:	std    
  41cc6c:	in     al,0x76
  41cc6e:	push   ecx
  41cc6f:	sub    BYTE PTR [ebx],0xb4
  41cc72:	cmp    bh,ah
  41cc74:	lods   al,BYTE PTR ds:[esi]
  41cc75:	scas   eax,DWORD PTR es:[edi]
  41cc76:	out    0xc6,al
  41cc78:	sbb    al,0xe2
  41cc7a:	in     al,dx
  41cc7b:	cmc    
  41cc7c:	bound  esi,QWORD PTR ds:0x7fd4dedc
  41cc82:	jle    0x41ccef
  41cc84:	clc    
  41cc85:	popa   
  41cc86:	sub    ebx,DWORD PTR [edx+edx*4+0xb]
  41cc8a:	dec    edx
  41cc8b:	cmp    al,0xb0
  41cc8d:	jnp    0x41cc1c
  41cc8f:	stos   DWORD PTR es:[edi],eax
  41cc90:	cli    
  41cc91:	repz dec edx
  41cc93:	cmp    DWORD PTR [esi-0x2bbd698b],edi
  41cc99:	adc    bh,BYTE PTR [edx-0xd]
  41cc9c:	add    bh,al
  41cc9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc9f:	add    ecx,DWORD PTR [ebx-0x2925fa9d]
  41cca5:	loope  0x41cd17
  41cca7:	sbb    al,0xec
  41cca9:	or     eax,0xfd847d08
  41ccae:	or     ebp,ecx
  41ccb0:	in     al,dx
  41ccb1:	test   eax,0x92afd9e2
  41ccb6:	push   edx
  41ccb7:	sub    ah,dl
  41ccb9:	adc    esp,DWORD PTR [ebx]
  41ccbb:	lods   al,BYTE PTR ds:[esi]
  41ccbc:	push   ebp
  41ccbd:	test   eax,0x581cab36
  41ccc2:	inc    ebx
  41ccc3:	popa   
  41ccc4:	sbb    al,0xc1
  41ccc6:	sbb    eax,0x37cba7af
  41cccb:	push   cs
  41cccc:	sbb    eax,0x9e04970
  41ccd1:	daa    
  41ccd2:	cmp    DWORD PTR [edx-0x4a],ebx
  41ccd5:	pop    edi
  41ccd6:	push   0xbc5efc75
  41ccdb:	add    edx,edi
  41ccdd:	aad    0x56
  41ccdf:	inc    ebx
  41cce0:	dec    edi
  41cce1:	jo     0x41cc8e
  41cce3:	scas   al,BYTE PTR es:[edi]
  41cce4:	sbb    eax,0xfd4ab022
  41cce9:	cmc    
  41ccea:	pop    ebp
  41cceb:	sar    BYTE PTR [edx-0x5885c0ac],1
  41ccf1:	test   eax,0xcb38a607
  41ccf6:	or     bl,0xaa
  41ccf9:	mov    ebp,0x1119f9df
  41ccfe:	and    BYTE PTR [bx+di-0xf4c],al
  41cd03:	xchg   esp,eax
  41cd04:	je     0x41cd30
  41cd06:	push   esi
  41cd07:	inc    ebx
  41cd08:	add    al,0x78
  41cd0a:	xchg   BYTE PTR [edx-0x40],dh
  41cd0d:	fstp   DWORD PTR [edx+edx*2+0x41be1de2]
  41cd14:	enter  0x4638,0x6a
  41cd18:	repz sub DWORD PTR [edi+0x470bad94],eax
  41cd1f:	jmp    0x41cce2
  41cd21:	pop    ecx
  41cd22:	ss aas 
  41cd24:	mov    al,ds:0x762ac7a2
  41cd29:	(bad)  
  41cd2a:	xor    al,BYTE PTR [edi]
  41cd2c:	add    BYTE PTR [esi-0x43],al
  41cd2f:	push   edi
  41cd30:	mov    ch,0x89
  41cd32:	and    DWORD PTR [edx],eax
  41cd34:	(bad)  
  41cd36:	pushf  
  41cd37:	sbb    al,0x6e
  41cd39:	imul   ebp,DWORD PTR [edi+0x44],0x7
  41cd3d:	sbb    ah,BYTE PTR [esi+0x9ff3363]
  41cd43:	cmp    DWORD PTR [edi-0x61de164f],ecx
  41cd49:	xor    al,0x1c
  41cd4b:	sub    ebx,DWORD PTR ds:0x435ae7cb
  41cd51:	sub    eax,0x9a9691e3
  41cd56:	mov    ah,0xfc
  41cd58:	jb     0x41cce1
  41cd5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd5b:	xchg   ecx,eax
  41cd5c:	or     esp,edx
  41cd5e:	or     dh,BYTE PTR [edi]
  41cd60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd61:	jg     0x41cd5f
  41cd63:	mov    eax,0xf3f21cff
  41cd68:	pop    edx
  41cd69:	and    DWORD PTR [esi],ebp
  41cd6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd6c:	dec    esp
  41cd6d:	or     eax,0x6e117818
  41cd72:	je     0x41cd96
  41cd74:	test   eax,0x7a25a998
  41cd79:	mov    ecx,0xfd4d854d
  41cd7e:	jecxz  0x41cd38
  41cd80:	mov    eax,0x907a2c14
  41cd85:	out    0x95,al
  41cd87:	arpl   WORD PTR [ecx-0x39],si
  41cd8a:	mov    bl,0x8e
  41cd8c:	sub    dl,BYTE PTR [edi+0x64]
  41cd8f:	retf   0x613c
  41cd92:	xchg   ebp,eax
  41cd93:	jbe    0x41cddb
  41cd95:	pop    ebx
  41cd96:	mov    bl,ah
  41cd98:	stos   BYTE PTR es:[edi],al
  41cd99:	fsubp  st(2),st
  41cd9b:	mov    BYTE PTR [edx],cl
  41cd9d:	jno    0x41cd61
  41cd9f:	adc    edx,DWORD PTR [eax-0x3c]
  41cda2:	lds    ebp,FWORD PTR [esi+0x46]
  41cda5:	xor    eax,0x4cc31d44
  41cdaa:	cmp    eax,0x1a1cc7c
  41cdaf:	xor    esp,DWORD PTR [ecx]
  41cdb1:	in     eax,dx
  41cdb2:	mov    WORD PTR [esi-0x3c],cs
  41cdb5:	popf   
  41cdb6:	(bad)  
  41cdb8:	vpcmpeqw xmm2,xmm5,XMMWORD PTR [ecx]
  41cdbc:	cmp    BYTE PTR [ebx-0x243bf178],cl
  41cdc2:	add    DWORD PTR [ecx+0x339c9e8e],edx
  41cdc8:	es push esp
  41cdca:	adc    DWORD PTR [edx],ebp
  41cdcc:	dec    ebp
  41cdcd:	(bad)  
  41cdce:	jmp    0x1c29:0x4a5a272b
  41cdd5:	rcl    DWORD PTR [edx+0xa4ec726],1
  41cddb:	push   ds
  41cddc:	bound  ebx,QWORD PTR ds:0x56442f7c
  41cde2:	or     eax,0xfe0be423
  41cde7:	fcom   st(7)
  41cde9:	jp     0x41ce38
  41cdeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdec:	dec    esp
  41cded:	jp     0x41ce5d
  41cdef:	out    0x98,al
  41cdf1:	(bad)  
  41cdf2:	and    cl,cl
  41cdf4:	shl    DWORD PTR [ecx-0x24c39fc],0x60
  41cdfb:	aas    
  41cdfc:	pop    esp
  41cdfd:	or     esi,DWORD PTR [esi+0x9]
  41ce00:	lock xor BYTE PTR [ebp+0x3df2faae],0xde
  41ce08:	jns    0x41cda5
  41ce0a:	retf   0xe86b
  41ce0d:	xchg   ebp,eax
  41ce0e:	test   eax,0xb67a7d2
  41ce13:	les    ecx,FWORD PTR [ebx]
  41ce15:	fild   WORD PTR [edi-0x48]
  41ce18:	(bad)  
  41ce19:	rcl    al,1
  41ce1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce1c:	fs in  eax,0x66
  41ce1f:	pop    es
  41ce20:	mov    dh,0x27
  41ce22:	and    BYTE PTR [ecx+0x33],ch
  41ce25:	sbb    BYTE PTR [edi],0xe3
  41ce28:	sub    BYTE PTR [edi+0x5c],0x39
  41ce2c:	xchg   esp,eax
  41ce2d:	sub    DWORD PTR [ecx],eax
  41ce2f:	push   edx
  41ce30:	push   ecx
  41ce31:	inc    edx
  41ce32:	in     al,dx
  41ce33:	pop    ds
  41ce34:	push   DWORD PTR [edx-0x26]
  41ce37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce38:	inc    BYTE PTR [eax]
  41ce3a:	pop    es
  41ce3b:	mov    cl,0xd0
  41ce3d:	sub    DWORD PTR [ecx],esp
  41ce3f:	xchg   BYTE PTR [ebx],ah
  41ce41:	in     eax,dx
  41ce42:	shl    BYTE PTR [ebx-0x62],0xe2
  41ce46:	push   esp
  41ce47:	mov    DWORD PTR [eax],edi
  41ce49:	xor    BYTE PTR [esi+0x7d543fa0],bh
  41ce4f:	sahf   
  41ce50:	enter  0x1ce9,0x92
  41ce54:	pop    edx
  41ce55:	add    bl,dh
  41ce57:	adc    al,0xfe
  41ce59:	lods   al,BYTE PTR ds:[esi]
  41ce5a:	mov    bh,BYTE PTR [eax+edi*2-0x60]
  41ce5e:	xchg   cl,ah
  41ce60:	push   esi
  41ce61:	adc    al,0xa2
  41ce63:	loope  0x41ce15
  41ce65:	scas   eax,DWORD PTR es:[edi]
  41ce66:	inc    edx
  41ce67:	out    dx,al
  41ce68:	jo     0x41ce2b
  41ce6a:	push   esp
  41ce6b:	mov    ebx,0x94fb3ee0
  41ce70:	add    al,0x4
  41ce72:	test   eax,0x20ff9e1c
  41ce77:	mov    BYTE PTR [ecx],bl
  41ce79:	inc    edi
  41ce7a:	cmp    eax,edx
  41ce7c:	test   DWORD PTR [eax],ecx
  41ce7e:	bound  ebp,QWORD PTR [ebp+0x20]
  41ce81:	mov    bh,0x93
  41ce83:	jb     0x41ce2a
  41ce85:	shl    DWORD PTR [ecx],0x4b
  41ce88:	sbb    ebx,esp
  41ce8a:	repz mul DWORD PTR [edx-0x557a0109]
  41ce91:	loop   0x41ce63
  41ce93:	cmc    
  41ce94:	lahf   
  41ce95:	jmp    0xfea3d99d
  41ce9a:	mov    edx,ecx
  41ce9c:	xchg   edi,eax
  41ce9d:	push   ecx
  41ce9e:	out    0xdd,eax
  41cea0:	dec    ebp
  41cea1:	cld    
  41cea2:	push   edx
  41cea3:	jmp    0x73881a6d
  41cea8:	or     al,BYTE PTR [ecx]
  41ceaa:	jp     0x41ce6c
  41ceac:	ss jp  0x41ce9e
  41ceaf:	dec    esp
  41ceb0:	into   
  41ceb1:	inc    eax
  41ceb2:	jp     0x41cea4
  41ceb4:	mov    esi,0x7c606f37
  41ceb9:	push   DWORD PTR [ecx]
  41cebb:	mov    al,ds:0x635be666
  41cec0:	imul   eax,DWORD PTR [ecx],0xffffff95
  41cec3:	lahf   
  41cec4:	and    BYTE PTR [ecx+0x46],dl
  41cec7:	inc    ecx
  41cec8:	ds out 0xcd,al
  41cecb:	xor    al,0x67
  41cecd:	sub    BYTE PTR [esi],al
  41cecf:	mov    bh,0x66
  41ced1:	int    0x1e
  41ced3:	adc    eax,0xe207934
  41ced8:	dec    esi
  41ced9:	mov    WORD PTR [ebp-0x1a],es
  41cedc:	inc    esp
  41cedd:	jnp    0x41ced3
  41cedf:	cld    
  41cee0:	rcr    BYTE PTR [ebx+0x7f32934a],1
  41cee6:	mov    al,0xe9
  41cee8:	or     al,0x50
  41ceea:	lea    ecx,[esi-0x68ca8243]
  41cef0:	lods   al,BYTE PTR ds:[esi]
  41cef1:	cmp    edi,esp
  41cef3:	addr16 (bad) 
  41cef5:	push   esp
  41cef6:	pusha  
  41cef7:	dec    esp
  41cef8:	psubsw mm6,QWORD PTR [edx+ecx*4-0x527ff47e]
  41cf00:	sub    BYTE PTR [edi-0x20cafc87],al
  41cf06:	jle    0x41cf66
  41cf08:	jmp    0xeda8:0xf7aed1f2
  41cf0f:	jl     0x41ced8
  41cf11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf12:	add    cl,al
  41cf14:	lods   al,BYTE PTR ds:[esi]
  41cf15:	adc    al,0x85
  41cf17:	mov    BYTE PTR ds:0xf2a942ae,bl
  41cf1d:	and    al,0x25
  41cf1f:	fstp   QWORD PTR [esi+edx*1-0x5a]
  41cf23:	push   esp
  41cf24:	sub    ebp,DWORD PTR [edi-0x4255e782]
  41cf2a:	mov    bh,0x60
  41cf2c:	dec    ebp
  41cf2d:	retf   
  41cf2e:	hlt    
  41cf2f:	in     al,0xb1
  41cf31:	or     ch,ch
  41cf33:	mov    dh,0xc8
  41cf35:	jae    0x41cebf
  41cf37:	xchg   ecx,eax
  41cf38:	ja     0x41cf13
  41cf3a:	jne    0x41ceea
  41cf3c:	jnp    0x41cfbb
  41cf3e:	ja     0x41cec2
  41cf40:	sbb    BYTE PTR [eax+eax*4],dl
  41cf43:	scas   eax,DWORD PTR es:[edi]
  41cf44:	jmp    0xeb1b9a14
  41cf49:	pop    ecx
  41cf4a:	push   ss
  41cf4b:	es sbb eax,0x1c50bbbf
  41cf51:	out    0xfa,al
  41cf53:	sbb    eax,0xd9e48b9c
  41cf58:	scas   al,BYTE PTR es:[edi]
  41cf59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf5a:	sub    al,0x9
  41cf5c:	mov    eax,ds:0x8c841017
  41cf61:	loop   0x41cf66
  41cf63:	hlt    
  41cf64:	jp     0x41cfc1
  41cf66:	imul   esp,ecx,0xffffff8b
  41cf69:	aas    
  41cf6a:	sahf   
  41cf6b:	cmp    al,0xb5
  41cf6d:	ret    0xccfe
  41cf70:	outs   dx,DWORD PTR ds:[esi]
  41cf71:	sub    DWORD PTR [edi],edi
  41cf73:	jl     0x41cfda
  41cf75:	sub    BYTE PTR [ebp-0x1fedf5c4],dl
  41cf7b:	ret    
  41cf7c:	scas   al,BYTE PTR es:[edi]
  41cf7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf7e:	sub    al,0x7a
  41cf80:	add    BYTE PTR [edi-0x7e4e5540],bh
  41cf86:	scas   eax,DWORD PTR es:[edi]
  41cf87:	mov    ds:0x5338da94,eax
  41cf8c:	sbb    BYTE PTR [ecx+edx*4-0x4ea7ba62],bh
  41cf93:	clc    
  41cf94:	aad    0xd8
  41cf96:	xor    cl,BYTE PTR [esi]
  41cf98:	sub    DWORD PTR [esp+edx*8-0x41],edx
  41cf9c:	inc    eax
  41cf9d:	jnp    0x41cfff
  41cf9f:	pop    ss
  41cfa0:	shr    BYTE PTR [edx-0x46],1
  41cfa3:	jmp    0x2da46faf
  41cfa8:	fsub   DWORD PTR [ebp+0x79]
  41cfab:	mov    edi,0x8f4a8970
  41cfb0:	leave  
  41cfb1:	imul   DWORD PTR [edi-0x1446a6dc]
  41cfb7:	iret   
  41cfb8:	shl    BYTE PTR [ecx+0x4e1f444d],cl
  41cfbe:	fisub  WORD PTR [ecx-0x6df6cd60]
  41cfc4:	push   0x32fe62ce
  41cfc9:	stos   BYTE PTR es:[edi],al
  41cfca:	inc    esp
  41cfcb:	shl    BYTE PTR [ebx-0x395829b7],cl
  41cfd1:	jae    0x41cff6
  41cfd3:	imul   edi,DWORD PTR [edi-0x77],0x34
  41cfd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfd8:	pop    ebx
  41cfd9:	jmp    0xc7cd8129
  41cfde:	mov    ds:0xde13ef66,al
  41cfe3:	xor    ah,ah
  41cfe5:	bound  edi,QWORD PTR [edi-0x33]
  41cfe8:	or     DWORD PTR [esp+ebp*8-0x688d1bd9],eax
  41cfef:	mov    esi,?
  41cff1:	shr    BYTE PTR ds:0x2252b0fe,cl
  41cff7:	inc    edi
  41cff8:	push   ecx
  41cff9:	mov    ebx,0x515c48a8
  41cffe:	jle    0x41d025
  41d000:	je     0x41d00e
  41d002:	addr16 mov dl,0xd2
  41d005:	fdivr  DWORD PTR [ebx+ecx*4-0x11]
  41d009:	or     DWORD PTR ds:0x8eb2f902,esi
  41d00f:	(bad)  
  41d010:	and    edx,DWORD PTR [eax-0x1d]
  41d013:	ja     0x41cfec
  41d015:	out    0xcc,eax
  41d017:	add    DWORD PTR [eax+edi*2],edx
  41d01a:	pop    esi
  41d01b:	and    eax,0xffffff8b
  41d01e:	adc    eax,0x3a479e8
  41d023:	inc    edi
  41d024:	fs addr16 dec edx
  41d027:	inc    ebx
  41d028:	les    edi,FWORD PTR ds:0x4323fe6d
  41d02e:	xlat   BYTE PTR ds:[ebx]
  41d02f:	and    eax,esi
  41d031:	or     ah,BYTE PTR [esi-0x35]
  41d034:	fiadd  DWORD PTR [eax]
  41d036:	fwait
  41d037:	cmp    al,0xc6
  41d039:	jo     0x41cfd3
  41d03b:	push   esp
  41d03c:	jmp    0x41d015
  41d03e:	xor    ah,BYTE PTR [edi]
  41d040:	(bad)  
  41d041:	fadd   DWORD PTR [ebp-0x2a]
  41d044:	push   ss
  41d045:	pop    ebx
  41d046:	call   0x3919:0xf29df7a6
  41d04d:	popf   
  41d04e:	sbb    al,cl
  41d050:	or     al,0x8c
  41d052:	mov    eax,ds:0x9ccb7942
  41d057:	test   eax,0x3c99cc05
  41d05c:	cwde   
  41d05d:	xor    eax,0x9f135597
  41d062:	call   FWORD PTR [edi]
  41d064:	mov    esi,0x550ae33b
  41d069:	mov    WORD PTR [edi+0x347bada6],gs
  41d06f:	pop    esp
  41d070:	xchg   edi,eax
  41d071:	xor    eax,0xc3cf49e8
  41d076:	mov    cs,esi
  41d078:	pop    eax
  41d079:	scas   al,BYTE PTR es:[edi]
  41d07a:	lahf   
  41d07b:	xor    DWORD PTR [edx],0x31
  41d07e:	test   cl,bl
  41d080:	and    BYTE PTR [eax+0x3],bl
  41d083:	sub    ebp,ebp
  41d085:	cmp    eax,0xb9aecc6
  41d08a:	cdq    
  41d08b:	cmp    BYTE PTR [esi],dl
  41d08d:	dec    ecx
  41d08e:	pusha  
  41d08f:	mov    bh,0xf6
  41d091:	outs   dx,DWORD PTR ds:[esi]
  41d092:	push   ds
  41d093:	mov    al,ds:0x99748bec
  41d098:	add    al,0xe4
  41d09a:	jne    0x41d049
  41d09c:	jp     0x41d050
  41d09e:	push   ss
  41d09f:	call   0xd495:0x26b5a419
  41d0a6:	push   edx
  41d0a7:	and    esp,ecx
  41d0a9:	xlat   BYTE PTR ds:[ebx]
  41d0aa:	sbb    al,0x5a
  41d0ac:	mov    bh,0xcf
  41d0ae:	push   ebx
  41d0af:	out    dx,al
  41d0b0:	mov    dh,BYTE PTR [ebp+0x467b6541]
  41d0b6:	cs clc 
  41d0b8:	test   eax,0xa0a96e70
  41d0bd:	sub    DWORD PTR [ebp-0x2c],esi
  41d0c0:	push   0x4a
  41d0c2:	leave  
  41d0c3:	or     ebp,edi
  41d0c5:	push   edi
  41d0c6:	js     0x41d07a
  41d0c8:	mov    eax,0x7cbc0341
  41d0cd:	dec    ecx
  41d0ce:	bound  edx,QWORD PTR [esi+0x612520a2]
  41d0d4:	dec    ebx
  41d0d5:	call   DWORD PTR [edi-0x13cdaab]
  41d0db:	arpl   WORD PTR [eax+0x93748c8],ax
  41d0e1:	cmp    ebp,DWORD PTR [ecx-0x42]
  41d0e4:	(bad)  
  41d0e5:	mov    esi,0x87bd733a
  41d0ea:	(bad)  
  41d0eb:	pusha  
  41d0ec:	adc    ah,BYTE PTR ds:0xd65af708
  41d0f2:	inc    edi
  41d0f3:	clc    
  41d0f4:	inc    esp
  41d0f5:	int    0xce
  41d0f7:	sub    ecx,edi
  41d0f9:	mov    WORD PTR [ebx],fs
  41d0fb:	mov    ah,0xc2
  41d0fd:	pushf  
  41d0fe:	mov    ch,0xea
  41d100:	aas    
  41d101:	das    
  41d102:	daa    
  41d103:	mov    esi,0xaa2b6db8
  41d108:	mov    cl,0x85
  41d10a:	out    0x18,al
  41d10c:	mov    DWORD PTR [edx+0x3496eff1],esi
  41d112:	cmp    al,0x16
  41d114:	fwait
  41d115:	cmp    al,0x88
  41d117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d118:	lea    esp,[eax]
  41d11a:	sbb    eax,0xf07e8bf1
  41d11f:	popf   
  41d120:	jbe    0x41d112
  41d122:	(bad)  
  41d123:	test   eax,0x47dafcf2
  41d128:	in     eax,dx
  41d129:	jmp    0x41d0e2
  41d12b:	pushf  
  41d12c:	or     eax,edi
  41d12e:	fisttp WORD PTR [esi-0x69]
  41d131:	test   al,0x8
  41d133:	in     al,0xfc
  41d135:	xor    DWORD PTR [edx-0x71],eax
  41d138:	jmp    0xe6dd:0x1a95601a
  41d13f:	pop    ebx
  41d140:	hlt    
  41d141:	inc    DWORD PTR [ecx]
  41d143:	out    dx,eax
  41d144:	add    al,0x2c
  41d146:	and    ecx,esi
  41d148:	shl    BYTE PTR [edi+0x4d],cl
  41d14b:	mov    ds:0xb1013462,ax
  41d151:	aas    
  41d152:	inc    esp
  41d153:	aas    
  41d154:	inc    ecx
  41d155:	sub    dh,bh
  41d157:	push   edi
  41d158:	cwde   
  41d159:	mov    esi,0xf8deeb39
  41d15e:	lock mov ebp,0xafe57eba
  41d164:	std    
  41d165:	cmp    cl,BYTE PTR [eax+0x61]
  41d168:	ins    BYTE PTR es:[edi],dx
  41d169:	pop    edi
  41d16a:	xchg   ebx,eax
  41d16b:	cmc    
  41d16c:	xchg   ecx,eax
  41d16d:	add    ebp,DWORD PTR [eax-0x679a4a80]
  41d173:	out    0xf6,eax
  41d175:	mov    BYTE PTR [esi+0x5b],ch
  41d178:	inc    ebx
  41d179:	lea    ecx,[eax]
  41d17b:	pop    ss
  41d17c:	xlat   BYTE PTR ds:[ebx]
  41d17d:	push   cs
  41d17e:	sub    ecx,eax
  41d180:	ja     0x41d184
  41d182:	idiv   cl
  41d184:	das    
  41d185:	imul   ebx,DWORD PTR [ebx+0x5],0xffffffe7
  41d189:	(bad)  
  41d18a:	test   bh,0xf6
  41d18d:	adc    BYTE PTR [edi],0x1c
  41d190:	pop    ebp
  41d191:	cmp    eax,0xd423c67
  41d196:	sbb    DWORD PTR fs:[ecx-0x10],esp
  41d19a:	retf   
  41d19b:	dec    esp
  41d19c:	xchg   edi,eax
  41d19d:	fisubr DWORD PTR [edx+0x70fbc7f2]
  41d1a3:	mov    esi,DWORD PTR [eax+0x68]
  41d1a6:	push   esp
  41d1a7:	(bad)  
  41d1a8:	cmp    dl,BYTE PTR ds:0x4b3ef6cf
  41d1ae:	pusha  
  41d1af:	mov    edx,0x187b737a
  41d1b4:	or     DWORD PTR [ebx-0x11],0x19dc155a
  41d1bb:	or     al,0x92
  41d1bd:	xor    al,0x23
  41d1bf:	scas   al,BYTE PTR es:[edi]
  41d1c0:	lods   eax,DWORD PTR ds:[esi]
  41d1c1:	mov    edi,DWORD PTR [eax-0x32a3233a]
  41d1c7:	and    BYTE PTR [ebp+ecx*1+0x6],cl
  41d1cb:	add    ebx,DWORD PTR [ebp+0x56]
  41d1ce:	add    al,0x97
  41d1d0:	xor    ch,cl
  41d1d2:	ret    
  41d1d3:	and    eax,0x64a0d75e
  41d1d8:	jmp    0x9d8ad077
  41d1dd:	xor    BYTE PTR [ebx],cl
  41d1df:	cmp    edi,DWORD PTR [edx]
  41d1e1:	xor    eax,0x40
  41d1e4:	loopne 0x41d1ff
  41d1e6:	std    
  41d1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1e8:	xchg   ebp,eax
  41d1e9:	enter  0x1cc2,0x2e
  41d1ed:	(bad)  
  41d1ee:	pushf  
  41d1ef:	cmp    eax,0x4aadda8b
  41d1f4:	jecxz  0x41d1f8
  41d1f6:	pop    ds
  41d1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1f8:	or     BYTE PTR [edx],cl
  41d1fa:	xchg   DWORD PTR [ecx+0x12943e51],edi
  41d200:	loop   0x41d1e9
  41d202:	inc    esi
  41d203:	jl     0x41d1e3
  41d205:	ss adc eax,0x2316b8f
  41d20b:	or     al,0xfa
  41d20d:	dec    ebp
  41d20e:	cwde   
  41d20f:	mov    ch,0x9a
  41d211:	sbb    DWORD PTR [ecx],eax
  41d213:	dec    eax
  41d214:	jg     0x41d24a
  41d216:	imul   ebx,DWORD PTR [edx+0x75],0x8eb7e7b1
  41d21d:	push   esp
  41d21e:	dec    edx
  41d21f:	mov    ds:0x5438c8a3,al
  41d224:	mov    ebx,0x318ca7e2
  41d229:	call   0x48c1:0xcb0ab4f9
  41d230:	mul    BYTE PTR [ebp-0x28110f1]
  41d236:	or     ebp,esi
  41d238:	div    BYTE PTR [edx+ebx*8+0x707627ff]
  41d23f:	jns    0x41d2a9
  41d241:	add    BYTE PTR [eax-0xf8e05ce],al
  41d247:	dec    eax
  41d248:	or     eax,0x83b616f1
  41d24d:	adc    DWORD PTR [ecx-0x4d136b5c],0xd5e71c1a
  41d257:	sbb    DWORD PTR [edx+0x51ba8bd5],eax
  41d25d:	repnz lods al,BYTE PTR ds:[esi]
  41d25f:	or     BYTE PTR [ecx+0x51fb4d88],dl
  41d265:	and    al,0x35
  41d267:	pop    edx
  41d268:	cmp    edi,DWORD PTR [ebp-0x7c]
  41d26b:	pop    ecx
  41d26c:	xor    ch,cl
  41d26e:	and    eax,0xc26d1de5
  41d273:	in     eax,dx
  41d274:	aam    0xf1
  41d276:	mov    ebx,0x576384c7
  41d27b:	(bad)  
  41d27c:	jecxz  0x41d2cc
  41d27e:	or     eax,edi
  41d280:	xor    BYTE PTR [edi+0x41ee1011],dh
  41d286:	ret    0xc165
  41d289:	popf   
  41d28a:	adc    cl,BYTE PTR [ebx]
  41d28c:	(bad)  
  41d28d:	in     al,0x84
  41d28f:	mov    ds:0xb82a2740,al
  41d294:	(bad)  
  41d295:	xchg   esi,eax
  41d296:	xor    BYTE PTR [eax+0x41aad81c],ah
  41d29c:	pop    esi
  41d29d:	arpl   WORD PTR [ebp+0x3],sp
  41d2a0:	hlt    
  41d2a1:	mov    ch,ah
  41d2a3:	shl    DWORD PTR [ebp+0x5e5353fe],cl
  41d2a9:	inc    esi
  41d2aa:	adc    al,0x13
  41d2ac:	push   es
  41d2ad:	push   ss
  41d2ae:	dec    esp
  41d2af:	jnp    0x41d297
  41d2b1:	pop    eax
  41d2b2:	or     bl,BYTE PTR ds:0x4caea8ba
  41d2b8:	fidiv  DWORD PTR [edi+eax*8-0x37e1c72e]
  41d2bf:	cdq    
  41d2c0:	fcom   DWORD PTR [ebx-0x37]
  41d2c3:	jnp    0x41d280
  41d2c5:	dec    esi
  41d2c6:	(bad)  
  41d2c9:	push   es
  41d2ca:	xor    al,0xeb
  41d2cc:	in     al,dx
  41d2cd:	dec    esi
  41d2ce:	popa   
  41d2cf:	dec    ebx
  41d2d0:	push   ecx
  41d2d1:	mov    eax,0x6138c7d7
  41d2d6:	mov    WORD PTR [edx-0x1fe85b33],ds
  41d2dc:	dec    edi
  41d2dd:	mov    WORD PTR [edi+0xe],?
  41d2e0:	jnp    0x41d2f7
  41d2e2:	lahf   
  41d2e3:	or     eax,0xa289f3f3
  41d2e8:	dec    eax
  41d2e9:	pop    esp
  41d2ea:	xchg   edi,eax
  41d2eb:	ins    DWORD PTR es:[edi],dx
  41d2ec:	and    DWORD PTR [ecx-0x1f],edi
  41d2ef:	sbb    al,0x45
  41d2f1:	cld    
  41d2f2:	pusha  
  41d2f3:	aaa    
  41d2f4:	je     0x41d36e
  41d2f6:	jae    0x41d374
  41d2f8:	push   eax
  41d2f9:	cmp    dl,BYTE PTR [eax]
  41d2fb:	cli    
  41d2fc:	jge    0x41d36a
  41d2fe:	inc    eax
  41d2ff:	add    al,0x23
  41d301:	in     al,0x20
  41d303:	test   eax,0xfdd02e8f
  41d308:	push   edx
  41d309:	stc    
  41d30a:	push   edi
  41d30b:	inc    esp
  41d30c:	out    0x48,eax
  41d30e:	mov    al,ds:0x98316653
  41d313:	and    al,0xeb
  41d315:	sub    eax,0x150bd5e8
  41d31a:	int    0x50
  41d31c:	pop    es
  41d31d:	popf   
  41d31e:	mov    es,ebp
  41d320:	pop    esp
  41d321:	xor    ah,BYTE PTR [edi-0x2a0fd704]
  41d327:	cmp    eax,0x12694334
  41d32c:	and    DWORD PTR [ecx],eax
  41d32e:	shr    BYTE PTR [eax+0x76],1
  41d331:	wbinvd 
  41d333:	jne    0x41d3b1
  41d335:	lods   eax,DWORD PTR ds:[esi]
  41d336:	retf   
  41d337:	xor    eax,0xaf4e199e
  41d33c:	les    ecx,FWORD PTR ds:0xf5bbe139
  41d342:	add    eax,0xb263f4e6
  41d347:	mov    bh,BYTE PTR [esi+esi*2]
  41d34a:	ins    BYTE PTR es:[edi],dx
  41d34b:	adc    eax,0x3035b296
  41d350:	dec    esi
  41d351:	mov    DWORD PTR [ebp-0x41055efd],ebx
  41d357:	les    edx,FWORD PTR [esi-0x18]
  41d35a:	mov    ecx,0x874dc705
  41d35f:	aam    0xa2
  41d361:	je     0x41d344
  41d363:	push   ecx
  41d364:	xchg   edi,esi
  41d366:	mov    ebx,0xcfe3d62c
  41d36b:	xor    al,0x76
  41d36d:	mov    BYTE PTR [ebx+0x4bdf93b1],0x85
  41d374:	div    DWORD PTR [esi+edx*1]
  41d377:	mov    BYTE PTR [esi],cl
  41d379:	push   0x54
  41d37b:	mov    bl,0xa8
  41d37d:	shl    BYTE PTR [ecx-0x25],1
  41d380:	jecxz  0x41d3dd
  41d382:	mov    bh,0x41
  41d384:	out    dx,al
  41d385:	ds sub ebp,ebx
  41d388:	mov    ch,0xbd
  41d38a:	shr    DWORD PTR [edi],0xfa
  41d38d:	in     eax,dx
  41d38e:	fcom   DWORD PTR [ebp-0x1ae1f849]
  41d394:	loope  0x41d37e
  41d396:	sbb    bl,BYTE PTR [edx-0x43]
  41d399:	xchg   edi,ebx
  41d39b:	mov    ch,ah
  41d39d:	fs push edi
  41d39f:	xchg   ebx,eax
  41d3a0:	pushf  
  41d3a1:	daa    
  41d3a2:	jne    0x41d39c
  41d3a4:	push   es
  41d3a5:	jb     0x41d33c
  41d3a7:	mov    eax,ds:0x10c1a7b0
  41d3ac:	add    al,0x93
  41d3ae:	into   
  41d3af:	scas   eax,DWORD PTR es:[edi]
  41d3b0:	ja     0x41d40d
  41d3b2:	push   0x42
  41d3b4:	aam    0xf1
  41d3b6:	pop    ss
  41d3b7:	std    
  41d3b8:	and    al,bh
  41d3ba:	sbb    DWORD PTR [esi+0x18],edi
  41d3bd:	pop    ebx
  41d3be:	jnp    0x41d436
  41d3c0:	inc    ecx
  41d3c1:	adc    DWORD PTR ds:0x5e65ad81,esp
  41d3c7:	lds    ebx,FWORD PTR [esi-0x69]
  41d3ca:	mov    BYTE PTR [ebp-0x73],cl
  41d3cd:	lock inc esi
  41d3cf:	cmp    DWORD PTR [ebp+0x21],0x15
  41d3d3:	test   dl,al
  41d3d5:	dec    ecx
  41d3d6:	jo     0x41d3f5
  41d3d8:	(bad)  
  41d3d9:	cmp    eax,0x3151a3e
  41d3de:	repnz adc DWORD PTR [ecx-0xe149355],ebp
  41d3e5:	lahf   
  41d3e6:	sbb    al,0x50
  41d3e8:	cs xchg ebx,eax
  41d3ea:	and    DWORD PTR [ebp+0x7e],0x3a
  41d3ee:	xor    DWORD PTR [ebp-0x33],edi
  41d3f1:	add    bh,dl
  41d3f3:	pop    edi
  41d3f4:	push   ebx
  41d3f5:	dec    ebx
  41d3f6:	jmp    edi
  41d3f8:	test   DWORD PTR [ebp+0x579c99d0],edx
  41d3fe:	rcl    BYTE PTR [ebp-0x1f323828],1
  41d404:	and    al,0x85
  41d406:	repnz leave 
  41d408:	jbe    0x41d437
  41d40a:	out    0x81,al
  41d40c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d40d:	jmp    0xe652:0xd318c84
  41d414:	fidivr DWORD PTR [ecx+ebx*2-0x7039ef31]
  41d41b:	add    eax,0x5cda0929
  41d420:	fldenv [edx+0x40]
  41d423:	inc    ebx
  41d424:	cmp    BYTE PTR [edi+0x5214347a],dh
  41d42a:	es jge 0x41d3b3
  41d42d:	mov    BYTE PTR [eax+0x46],0x4d
  41d431:	cmp    al,BYTE PTR [edx-0x63494a9f]
  41d437:	pop    esp
  41d438:	pop    ebp
  41d439:	push   ds
  41d43a:	(bad)  
  41d43b:	and    al,0xbb
  41d43d:	sub    al,0xd8
  41d43f:	pop    edi
  41d440:	test   al,0x26
  41d442:	jb     0x41d3d1
  41d444:	sub    dl,BYTE PTR [edx-0x26fdf9e5]
  41d44a:	sbb    al,0x58
  41d44c:	add    edi,DWORD PTR [eax+0x1e17d962]
  41d452:	sti    
  41d453:	xchg   esp,eax
  41d454:	lea    edi,[ebx+ecx*4+0x78]
  41d458:	jmp    0x41d46b
  41d45a:	loop   0x41d45c
  41d45c:	inc    edx
  41d45d:	cmp    eax,0x9bdc72ad
  41d462:	add    ch,BYTE PTR [ecx+0x31]
  41d465:	outs   dx,DWORD PTR ds:[esi]
  41d466:	les    edi,FWORD PTR [edx-0x4d]
  41d469:	push   es
  41d46a:	and    BYTE PTR [edx],cl
  41d46c:	sub    BYTE PTR [ebp+0x2e],dl
  41d46f:	out    0x9a,al
  41d471:	xchg   ebx,edx
  41d473:	xor    ebp,DWORD PTR [eax]
  41d475:	(bad)  
  41d477:	and    bl,BYTE PTR [eax+0x55668e1a]
  41d47d:	dec    ebp
  41d47e:	int3   
  41d47f:	in     eax,0x90
  41d481:	push   0xffffffe9
  41d483:	lock ss inc esp
  41d486:	(bad)  
  41d487:	aaa    
  41d488:	adc    eax,0x1ecaf059
  41d48d:	push   ebx
  41d48e:	sti    
  41d48f:	jns    0x41d4d4
  41d491:	retf   0x8943
  41d494:	cld    
  41d495:	aas    
  41d496:	rcl    BYTE PTR [ebp+0x20],cl
  41d499:	iret   
  41d49a:	in     al,0xa1
  41d49c:	test   al,0x97
  41d49e:	pop    es
  41d49f:	test   eax,0x53c31e6d
  41d4a4:	pop    esi
  41d4a5:	lock sbb esp,DWORD PTR [edi-0x63]
  41d4a9:	mov    ebp,0x5b35d1f
  41d4ae:	test   BYTE PTR [edi],al
  41d4b0:	(bad)  
  41d4b1:	mov    bl,0xca
  41d4b3:	retf   
  41d4b4:	mov    edi,ds
  41d4b6:	out    dx,eax
  41d4b7:	(bad)  
  41d4b9:	daa    
  41d4ba:	hlt    
  41d4bb:	in     eax,dx
  41d4bc:	push   esp
  41d4bd:	ins    DWORD PTR es:[edi],dx
  41d4be:	lea    ebx,[edx]
  41d4c0:	pop    edi
  41d4c1:	popf   
  41d4c2:	ss pop ecx
  41d4c4:	bound  ecx,QWORD PTR [ecx+0x1a]
  41d4c7:	pop    esp
  41d4c8:	ror    DWORD PTR cs:[ebx-0x12],0x64
  41d4cd:	stc    
  41d4ce:	mov    DWORD PTR [edi+eax*4-0x17],edi
  41d4d2:	push   ss
  41d4d3:	mov    ecx,0xa4a13a76
  41d4d8:	int    0x26
  41d4da:	pop    es
  41d4db:	retf   0xeaa9
  41d4de:	sub    al,0x76
  41d4e0:	(bad)  
  41d4e1:	xchg   DWORD PTR [esi],edi
  41d4e3:	jp     0x41d46a
  41d4e5:	xchg   esi,eax
  41d4e6:	jne    0x41d4f0
  41d4e8:	cmp    ch,dl
  41d4ea:	xor    DWORD PTR [edx],eax
  41d4ec:	xchg   DWORD PTR [ebx+0x64],ebp
  41d4ef:	retf   0x193b
  41d4f2:	fwait
  41d4f3:	and    DWORD PTR ds:0xeb75f11d,esi
  41d4f9:	jmp    0x41d529
  41d4fb:	jp     0x41d4dc
  41d4fd:	sub    ebx,ecx
  41d4ff:	jae    0x41d4f0
  41d501:	mov    bl,0x89
  41d503:	aas    
  41d504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d505:	rcl    BYTE PTR [ebx-0x6a],cl
  41d508:	icebp  
  41d509:	sbb    ebp,DWORD PTR [edi-0x60]
  41d50c:	and    dl,bl
  41d50e:	mov    ds:0xe50004d0,al
  41d513:	inc    ebx
  41d514:	call   0xd6125c84
  41d519:	adc    bh,BYTE PTR [ecx+0x9]
  41d51c:	inc    al
  41d51e:	sbb    BYTE PTR [edx],ch
  41d520:	imul   eax,ecx,0x75af2ae4
  41d526:	(bad)  
  41d527:	enter  0x7460,0x33
  41d52b:	jbe    0x41d56e
  41d52d:	xor    dl,0x11
  41d530:	dec    eax
  41d531:	sub    al,0x55
  41d533:	test   DWORD PTR [eax+0x69],ebp
  41d536:	jne    0x41d4e2
  41d538:	adc    esp,ebp
  41d53a:	stc    
  41d53b:	test   al,0x76
  41d53d:	pusha  
  41d53e:	pusha  
  41d53f:	jnp    0x41d5b4
  41d541:	dec    ecx
  41d542:	adc    al,0x46
  41d544:	and    dh,BYTE PTR [edi]
  41d546:	sub    DWORD PTR es:0xdfe75a7d,edi
  41d54d:	and    al,0x4b
  41d54f:	out    dx,eax
  41d550:	inc    edi
  41d551:	push   eax
  41d552:	std    
  41d553:	mov    ecx,0x47090832
  41d558:	test   BYTE PTR [eax+0x3f5c970c],bl
  41d55e:	sub    DWORD PTR [edi+0x5f01aef9],ebx
  41d564:	xor    ch,bh
  41d566:	jmp    0xc36e:0xe75fab1b
  41d56d:	mov    edx,0xefec5f10
  41d572:	imul   esp,DWORD PTR [ecx+edi*2],0xffffff82
  41d576:	int3   
  41d577:	mov    bl,0x9a
  41d579:	sbb    al,BYTE PTR [ecx+eax*2-0x5c311d28]
  41d580:	rol    DWORD PTR [esi-0x60],0x35
  41d584:	pop    esi
  41d585:	repz out dx,al
  41d587:	repz and eax,0xcd75677b
  41d58d:	retf   
  41d58e:	mov    ebp,0xaae14426
  41d593:	lahf   
  41d594:	or     dh,BYTE PTR [eax+0x15]
  41d597:	and    al,BYTE PTR [esi]
  41d599:	in     al,dx
  41d59a:	mov    eax,0x64874fa2
  41d59f:	or     bl,ch
  41d5a1:	dec    esp
  41d5a2:	sbb    BYTE PTR [edi+0x6f558265],dl
  41d5a8:	jnp    0xf13a7213
  41d5ae:	lods   al,BYTE PTR ds:[esi]
  41d5af:	jmp    0x41d5ce
  41d5b1:	xor    al,0x65
  41d5b3:	aad    0xab
  41d5b5:	xor    DWORD PTR [ecx],0xffffffb6
  41d5b8:	inc    esp
  41d5b9:	mov    edi,0x3c3d6c06
  41d5be:	push   esi
  41d5bf:	pusha  
  41d5c0:	ins    BYTE PTR es:[edi],dx
  41d5c1:	sbb    al,0x1e
  41d5c3:	mov    ds:0xa3afb09a,al
  41d5c8:	stos   DWORD PTR es:[edi],eax
  41d5c9:	outs   dx,DWORD PTR ds:[esi]
  41d5ca:	or     eax,DWORD PTR [edi+0x529dd6ab]
  41d5d0:	cmp    bl,BYTE PTR [esi-0x713560cb]
  41d5d6:	out    dx,eax
  41d5d7:	stc    
  41d5d8:	or     DWORD PTR [edx],esp
  41d5da:	out    dx,al
  41d5db:	dec    esp
  41d5dc:	pusha  
  41d5dd:	into   
  41d5de:	scas   al,BYTE PTR es:[edi]
  41d5df:	inc    ecx
  41d5e0:	aas    
  41d5e1:	sub    BYTE PTR [edx-0x26],dl
  41d5e4:	cmp    al,0x50
  41d5e6:	div    DWORD PTR [eax]
  41d5e8:	imul   ebx,DWORD PTR [edi],0x5b
  41d5eb:	hlt    
  41d5ec:	sbb    DWORD PTR [edi+0x3fe32b99],ecx
  41d5f2:	inc    ebx
  41d5f3:	mov    bl,0xec
  41d5f5:	cld    
  41d5f6:	pop    ss
  41d5f7:	(bad)  
  41d5f8:	cmp    eax,0x42d065e3
  41d5fd:	dec    ebp
  41d5fe:	mov    DWORD PTR [ecx+eax*1+0xd9ccefc],edx
  41d605:	mov    esp,0xccd079ea
  41d60a:	js     0x41d5e8
  41d60c:	aas    
  41d60d:	mov    eax,0xf0270619
  41d612:	add    DWORD PTR [eax+0x5763f193],0xa2f5267b
  41d61c:	(bad)  
  41d61d:	sbb    al,0xf9
  41d61f:	(bad)
  41d623:	sbb    eax,0x8952ab0a
  41d628:	push   ecx
  41d629:	icebp  
  41d62a:	sbb    DWORD PTR [ebx+eiz*8],ebp
  41d62d:	ins    DWORD PTR es:[edi],dx
  41d62e:	sbb    BYTE PTR [esi],bl
  41d630:	adc    eax,0x46c993ab
  41d635:	dec    edx
  41d636:	cmp    eax,0x212abdeb
  41d63b:	sbb    al,BYTE PTR [ecx+0x39f90e70]
  41d641:	and    DWORD PTR ds:0x8401fb4c,eax
  41d647:	retf   
  41d648:	pop    edi
  41d649:	ss push esi
  41d64b:	gs push 0xc
  41d64e:	out    dx,al
  41d64f:	mov    ecx,0xf5ceead6
  41d654:	xchg   ebx,eax
  41d655:	pop    edi
  41d656:	icebp  
  41d657:	or     eax,0x5ca4364c
  41d65c:	jns    0x41d677
  41d65e:	gs in  eax,0x65
  41d661:	or     BYTE PTR [eiz*8-0x28630d65],cl
  41d668:	pop    ebx
  41d669:	dec    eax
  41d66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d66b:	pop    ecx
  41d66c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d66d:	and    DWORD PTR [edx],eax
  41d66f:	das    
  41d670:	ja     0x41d644
  41d672:	fsubr  DWORD PTR [edx+ebx*1+0x62ef2e5e]
  41d679:	inc    edi
  41d67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d67b:	cld    
  41d67c:	dec    ecx
  41d67d:	dec    ecx
  41d67e:	div    BYTE PTR [ebx+0x4c]
  41d681:	pop    ds
  41d682:	fiadd  WORD PTR [esi-0x10]
  41d685:	and    DWORD PTR [eax+0x1dcd3c7a],esp
  41d68b:	push   ebx
  41d68c:	jnp    0x41d6f0
  41d68e:	xchg   edi,eax
  41d68f:	xor    eax,0x15c3e559
  41d694:	scas   al,BYTE PTR es:[edi]
  41d695:	xor    DWORD PTR [edx-0x5f8408ba],esp
  41d69b:	add    dl,ah
  41d69d:	dec    edx
  41d69e:	sbb    dl,cl
  41d6a0:	xchg   DWORD PTR [edx-0x2b37331d],esp
  41d6a6:	cwde   
  41d6a7:	fimul  DWORD PTR [ebx-0x8]
  41d6aa:	je     0x41d6b2
  41d6ac:	test   DWORD PTR [eax-0x19f99d8f],0xb11218ac
  41d6b6:	add    eax,0x5debd5a0
  41d6bb:	push   esp
  41d6bc:	xchg   ebp,eax
  41d6bd:	ds loopne 0x41d6f0
  41d6c0:	mov    esp,0x9c3b6d59
  41d6c5:	shl    DWORD PTR [edi],cl
  41d6c7:	out    dx,eax
  41d6c8:	mov    bh,BYTE PTR [eax-0x27]
  41d6cb:	inc    edi
  41d6cc:	ds push edi
  41d6ce:	and    al,0x93
  41d6d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d1:	cmp    BYTE PTR [esi+0x491dcbca],ah
  41d6d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d8:	cdq    
  41d6d9:	lea    edi,[ebp-0x1e0bdf66]
  41d6df:	mov    eax,0xb04f3bd3
  41d6e4:	pop    eax
  41d6e5:	push   ebx
  41d6e6:	shr    BYTE PTR [esi+0x4b],1
  41d6e9:	outs   dx,DWORD PTR ds:[esi]
  41d6ea:	test   edx,0x498ce552
  41d6f0:	sbb    BYTE PTR [eax],dh
  41d6f2:	arpl   WORD PTR [edi-0x5],dx
  41d6f5:	lock les edi,FWORD PTR [ebp-0x26]
  41d6f9:	xchg   edx,eax
  41d6fa:	clc    
  41d6fb:	int3   
  41d6fc:	loop   0x41d735
  41d6fe:	push   ds
  41d6ff:	imul   eax,DWORD PTR [ecx+0x1e1e8bba],0x37
  41d706:	mov    ebp,0xd7ea0454
  41d70b:	cmp    al,0x80
  41d70d:	xor    al,0xc5
  41d710:	mov    eax,0xb287cd14
  41d715:	adc    ah,dl
  41d717:	out    0x34,eax
  41d719:	jecxz  0x41d6ae
  41d71b:	xor    cl,BYTE PTR [edi]
  41d71d:	add    ebx,DWORD PTR [edx]
  41d71f:	push   ss
  41d720:	shl    ecx,cl
  41d722:	jae    0x41d73f
  41d724:	xor    cl,dh
  41d726:	push   0x85f07768
  41d72b:	cmp    BYTE PTR [edi-0x6dae9c14],dh
  41d731:	mov    ebx,0x9ac93c1f
  41d736:	mov    esp,0x42d796d5
  41d73b:	or     ch,BYTE PTR [ecx]
  41d73d:	imul   esi,DWORD PTR [ebp+0x76],0x3c
  41d741:	xchg   ebp,eax
  41d742:	cmp    DWORD PTR [esp+esi*2-0x62427ead],esi
  41d749:	sbb    eax,0x668c2caa
  41d74e:	jmp    0x41d71d
  41d750:	addr16 mov bl,0x27
  41d753:	or     BYTE PTR [ecx],dh
  41d755:	call   0x19aa:0xc1995a3a
  41d75c:	inc    edi
  41d75d:	mov    bl,dl
  41d75f:	inc    esp
  41d760:	ror    DWORD PTR [edx],cl
  41d762:	jl     0x41d7d1
  41d764:	stc    
  41d765:	pop    edi
  41d766:	mov    ah,ah
  41d768:	test   DWORD PTR [eax],ebp
  41d76a:	cmp    esi,DWORD PTR [esi+0x24]
  41d76d:	xor    ch,BYTE PTR [edx+0x3b542deb]
  41d773:	pop    ecx
  41d774:	enter  0x371e,0xd
  41d778:	inc    ebx
  41d779:	(bad)  
  41d77a:	xlat   BYTE PTR ds:[ebx]
  41d77b:	mov    DWORD PTR fs:[ebx-0x79],ebp
  41d77f:	sub    ah,dl
  41d781:	push   cs
  41d782:	sub    eax,DWORD PTR [ecx-0x58d7ca77]
  41d788:	and    al,0xb1
  41d78a:	int3   
  41d78b:	xchg   esi,eax
  41d78c:	sub    dh,ah
  41d78e:	push   eax
  41d78f:	aas    
  41d790:	xor    al,0x8d
  41d792:	mov    dh,0x8e
  41d794:	icebp  
  41d795:	mov    esp,0x8e252de2
  41d79a:	(bad)  
  41d79b:	sahf   
  41d79c:	mov    dl,0x77
  41d79e:	sub    cl,BYTE PTR ds:0xe505d2fb
  41d7a4:	xchg   edi,eax
  41d7a5:	add    al,0x14
  41d7a7:	repz add BYTE PTR [ecx],al
  41d7aa:	fldenv [esi-0x7f]
  41d7ad:	and    al,0xfd
  41d7af:	push   eax
  41d7b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7b1:	push   ebp
  41d7b2:	(bad)  
  41d7b3:	out    0xc7,eax
  41d7b5:	test   DWORD PTR [ebx],esp
  41d7b7:	mov    eax,ds:0x2c816733
  41d7bc:	xor    ecx,ecx
  41d7be:	imul   edx,DWORD PTR [esi-0x78],0x77
  41d7c2:	sbb    eax,0x35d604e4
  41d7c7:	dec    ebp
  41d7c8:	call   DWORD PTR [edx-0x51]
  41d7cb:	inc    esp
  41d7cc:	xchg   esp,edi
  41d7ce:	aam    0x95
  41d7d0:	add    ch,bl
  41d7d2:	loopne 0x41d789
  41d7d4:	fidiv  WORD PTR [ebp-0x2a]
  41d7d7:	iret   
  41d7d8:	call   0x467eed2
  41d7dd:	xchg   ebp,eax
  41d7de:	xchg   esp,eax
  41d7df:	(bad)  
  41d7e0:	fs sub al,0xc1
  41d7e3:	test   dh,dh
  41d7e5:	xor    BYTE PTR [ebp-0x53],bh
  41d7e8:	out    dx,al
  41d7e9:	retf   
  41d7ea:	or     BYTE PTR [edi],dh
  41d7ec:	es dec esi
  41d7ee:	mov    bl,0x66
  41d7f0:	or     edx,DWORD PTR [esi+edi*4-0xe99e8f5]
  41d7f7:	mov    al,ds:0xbf1c6e63
  41d7fc:	xor    bl,dl
  41d7fe:	inc    ebx
  41d7ff:	pop    ebx
  41d800:	pushf  
  41d801:	popa   
  41d802:	scas   al,BYTE PTR es:[edi]
  41d803:	je     0x41d7c8
  41d805:	int    0x67
  41d807:	jno    0x41d7e2
  41d809:	add    BYTE PTR [esi+0x37],0xc1
  41d80d:	jmp    0x2ade:0xddf51ed6
  41d814:	inc    ebx
  41d815:	xor    BYTE PTR [edi],ah
  41d817:	push   eax
  41d818:	or     dl,BYTE PTR [ecx-0x3e]
  41d81b:	into   
  41d81c:	fisttp WORD PTR [edx+0x7c]
  41d81f:	add    BYTE PTR [esi+0x6e539fe6],0x51
  41d826:	loope  0x41d81c
  41d828:	add    al,0xa3
  41d82a:	pop    edi
  41d82b:	addr16 je 0x41d82d
  41d82e:	sbb    eax,0x45a69ff
  41d833:	aam    0x4b
  41d835:	retf   0xd4c9
  41d838:	jbe    0x41d7eb
  41d83a:	aaa    
  41d83b:	cmp    BYTE PTR [ebx],bh
  41d83d:	mov    esi,0x184402c7
  41d842:	bswap  eax
  41d844:	mov    esp,ecx
  41d846:	in     al,dx
  41d847:	or     BYTE PTR [edi-0x60],dl
  41d84a:	and    eax,0xc7d131c2
  41d84f:	aam    0x87
  41d851:	add    DWORD PTR [ebp+0x37],ecx
  41d854:	imul   esi,DWORD PTR [esi],0xfffffff8
  41d857:	inc    DWORD PTR [ecx+ebx*4-0x313060b6]
  41d85e:	test   dl,dh
  41d860:	dec    ecx
  41d861:	jb     0x41d837
  41d863:	popa   
  41d864:	push   edx
  41d865:	in     al,0xa7
  41d867:	add    esi,eax
  41d869:	fsub   QWORD PTR cs:[edx-0x35512893]
  41d870:	out    0xc4,eax
  41d872:	(bad)  
  41d873:	pop    esp
  41d874:	pop    esp
  41d875:	outs   dx,DWORD PTR ds:[esi]
  41d876:	xor    eax,0x8f30ad8e
  41d87b:	jg     0x41d8ec
  41d87d:	sbb    eax,0x181de2ef
  41d882:	xchg   esp,eax
  41d883:	outs   dx,DWORD PTR ds:[esi]
  41d884:	dec    esp
  41d885:	mov    al,0xa0
  41d887:	(bad)  
  41d888:	and    al,dh
  41d88a:	mov    dh,0x1b
  41d88c:	shr    BYTE PTR [eax],cl
  41d88e:	or     eax,0x4c041fff
  41d893:	faddp  st(3),st
  41d895:	fmul   st,st(7)
  41d897:	sti    
  41d898:	sub    BYTE PTR ds:0x29d7dc77,bl
  41d89e:	or     edi,DWORD PTR [ecx-0x8a007f3]
  41d8a4:	(bad)  
  41d8a5:	das    
  41d8a6:	repnz data16 imul BYTE PTR ds:0x576da8cc
  41d8ae:	and    BYTE PTR [ebx],bh
  41d8b0:	adc    DWORD PTR [esi-0x3ebb0d80],edi
  41d8b6:	call   0xf02b:0x483371ae
  41d8bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8be:	adc    al,0x4e
  41d8c0:	or     dh,bl
  41d8c2:	or     eax,ebx
  41d8c4:	cmp    al,0x0
  41d8c6:	popf   
  41d8c7:	dec    edx
  41d8c8:	aaa    
  41d8c9:	dec    esp
  41d8ca:	jne    0x41d865
  41d8cc:	jnp    0x41d8fc
  41d8ce:	add    BYTE PTR [esi+ebx*8],0x83
  41d8d2:	inc    eax
  41d8d3:	inc    esp
  41d8d4:	sti    
  41d8d5:	into   
  41d8d6:	and    eax,0x2c16a987
  41d8db:	sub    ebx,DWORD PTR [esp-0x4da19eb8]
  41d8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e3:	mov    cl,0x66
  41d8e5:	test   eax,0x5cfbc231
  41d8ea:	aaa    
  41d8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8ec:	std    
  41d8ed:	stos   BYTE PTR es:[edi],al
  41d8ee:	push   ds
  41d8ef:	mov    ecx,0x576dfe3
  41d8f4:	and    ch,al
  41d8f6:	sbb    DWORD PTR [edx],esp
  41d8f8:	lods   eax,DWORD PTR ds:[esi]
  41d8f9:	inc    eax
  41d8fa:	xor    DWORD PTR [esp+ebp*1],eax
  41d8fd:	call   0x6325b38d
  41d902:	push   es
  41d903:	jae    0x41d961
  41d905:	fsubr  QWORD PTR [ecx]
  41d907:	loopne 0x41d933
  41d909:	pop    ebp
  41d90a:	leave  
  41d90b:	xchg   edi,eax
  41d90c:	addr16 adc ebp,ecx
  41d90f:	outs   dx,DWORD PTR ds:[esi]
  41d910:	lock mov ebp,0xbf374536
  41d916:	lahf   
  41d917:	ret    
  41d918:	jg     0x41d972
  41d91a:	and    edx,DWORD PTR [edx-0x2d]
  41d91d:	scas   eax,DWORD PTR es:[edi]
  41d91e:	sbb    eax,DWORD PTR [ebp+0x25188d1f]
  41d924:	or     al,0xca
  41d926:	mov    eax,0x62f94a24
  41d92b:	add    BYTE PTR [esi+0xb],bl
  41d92e:	inc    edx
  41d92f:	retf   0xed22
  41d932:	or     BYTE PTR [ecx-0x4f94d417],0xfd
  41d939:	shl    BYTE PTR [ebx-0x16],cl
  41d93c:	adc    edi,DWORD PTR [ebx-0x33]
  41d93f:	imul   BYTE PTR [esp+edi*8+0x36]
  41d943:	xchg   BYTE PTR [edx],bh
  41d945:	mov    al,0x2
  41d947:	mov    esi,DWORD PTR [edi]
  41d949:	fadd   DWORD PTR [ebx+0x56]
  41d94c:	pop    es
  41d94d:	adc    BYTE PTR [ebp+0x3a],ch
  41d950:	pop    ds
  41d951:	push   es
  41d952:	jl     0x41d9b5
  41d954:	out    0x5c,al
  41d956:	mov    ebx,0x75b0e263
  41d95b:	or     ch,dh
  41d95d:	test   DWORD PTR [ecx-0x32],ebp
  41d960:	mov    ecx,0x4b92e2c2
  41d965:	sbb    esi,DWORD PTR ds:0x8689f4d4
  41d96b:	push   ecx
  41d96c:	push   esi
  41d96d:	je     0x41d9c1
  41d96f:	push   edx
  41d970:	jmp    0xe56459b8
  41d975:	add    BYTE PTR [esi],bl
  41d977:	dec    eax
  41d978:	inc    esi
  41d979:	xchg   ebx,eax
  41d97a:	out    0xc0,al
  41d97c:	cwde   
  41d97d:	sbb    BYTE PTR [ebx+0x6f],cl
  41d980:	cmp    DWORD PTR [edx-0x795c7edf],ecx
  41d986:	sbb    eax,0x9d415ba
  41d98b:	dec    ebp
  41d98c:	out    dx,eax
  41d98d:	mov    ebx,0x9ad7430e
  41d992:	ss scas eax,DWORD PTR es:[edi]
  41d994:	lea    esi,[esi-0x1e69b7f5]
  41d99a:	icebp  
  41d99b:	push   cs
  41d99c:	lods   eax,DWORD PTR ds:[esi]
  41d99d:	adc    eax,DWORD PTR ds:0x3b75d6a9
  41d9a3:	sub    esp,0xffffffed
  41d9a6:	push   eax
  41d9a7:	js     0x41d9f3
  41d9a9:	jb     0x41d966
  41d9ab:	nop
  41d9ac:	stos   BYTE PTR es:[edi],al
  41d9ad:	imul   esi,DWORD PTR [edx-0x5abf2c47],0xffffffae
  41d9b4:	out    0x1a,eax
  41d9b6:	outs   dx,BYTE PTR ds:[esi]
  41d9b7:	sbb    eax,0xc60e9e84
  41d9bc:	mov    ecx,0x9975d395
  41d9c1:	cmp    BYTE PTR [edx-0x75],al
  41d9c4:	pop    ss
  41d9c5:	cmc    
  41d9c6:	or     DWORD PTR [eax+0x7f],esp
  41d9c9:	repz idiv BYTE PTR [edi+0x129083be]
  41d9d0:	mov    esi,0xff4ab9b
  41d9d5:	and    BYTE PTR ds:0xf6a35094,bl
  41d9db:	test   al,0x3a
  41d9dd:	xor    eax,0x22a655f5
  41d9e2:	jo     0x41da33
  41d9e4:	mov    ds,WORD PTR [ecx+edi*2-0x2]
  41d9e8:	xor    dh,bh
  41d9ea:	lea    edx,[ebx+0x1c566030]
  41d9f0:	and    DWORD PTR [eax+0x43001f4],ebx
  41d9f6:	ret    0x6bfe
  41d9f9:	or     eax,0xd092ec02
  41d9fe:	loope  0x41da2a
  41da00:	call   0x7aa:0xb81c0e0d
  41da07:	ins    BYTE PTR es:[edi],dx
  41da08:	xor    eax,0xe01a2b85
  41da0d:	sbb    al,0xf5
  41da0f:	dec    esp
  41da10:	in     al,dx
  41da11:	loop   0x41da59
  41da13:	jg     0x41da56
  41da15:	ins    BYTE PTR es:[edi],dx
  41da16:	mov    bl,0x4a
  41da18:	jo     0x41d9f1
  41da1a:	std    
  41da1b:	adc    al,0x5a
  41da1d:	add    eax,ebx
  41da1f:	jb     0x41d9ce
  41da21:	xchg   edx,eax
  41da22:	jb     0x41da3d
  41da24:	lds    eax,FWORD PTR [eax-0x14e59ccf]
  41da2a:	ins    DWORD PTR es:[edi],dx
  41da2b:	shl    DWORD PTR [ebx+0x60],0xae
  41da2f:	mov    eax,ds:0x5da6ed4
  41da34:	aam    0x5b
  41da36:	sar    DWORD PTR [edi+0x5ed872f3],1
  41da3c:	or     eax,0xf120d547
  41da41:	data16 rcr BYTE PTR ds:0x7f3c9366,cl
  41da48:	lock inc ebp
  41da4a:	inc    ecx
  41da4b:	fsubr  QWORD PTR [esi+0x63]
  41da4e:	dec    edi
  41da4f:	dec    edi
  41da50:	je     0x41da5f
  41da52:	pusha  
  41da53:	jnp    0x41da19
  41da55:	repz int3 
  41da57:	dec    ebx
  41da58:	add    al,0xf2
  41da5a:	jmp    0xe4c9:0x327862f2
  41da61:	dec    ebp
  41da62:	or     BYTE PTR [edx+eax*2-0x382d2ee5],0xdd
  41da6a:	and    eax,0xbd0f3d3f
  41da6f:	out    0xc7,al
  41da71:	stc    
  41da72:	test   BYTE PTR [ecx-0x24ae286a],ah
  41da78:	sub    cl,BYTE PTR [edi+0x2b]
  41da7b:	fdiv   DWORD PTR [edx-0x53]
  41da7e:	dec    ecx
  41da7f:	out    0xb5,al
  41da81:	retf   0xd3a8
  41da84:	xchg   esi,eax
  41da85:	inc    ecx
  41da86:	repz rol DWORD PTR [ecx+0x3190b31c],cl
  41da8d:	push   es
  41da8e:	nop
  41da8f:	pop    edi
  41da90:	push   ebx
  41da91:	or     ebp,DWORD PTR [ebx+0x2ee1ab07]
  41da97:	push   edi
  41da98:	jg     0x41da96
  41da9a:	cwde   
  41da9b:	lds    edi,FWORD PTR [edi]
  41da9d:	jmp    0xf622:0x4836c2d6
  41daa4:	pop    esp
  41daa5:	mov    edi,0x5b1e7e6f
  41daaa:	lock sbb edx,DWORD PTR [edi+0x64]
  41daae:	scas   al,BYTE PTR es:[edi]
  41daaf:	mov    esi,0x84fd1399
  41dab4:	outs   dx,DWORD PTR ds:[esi]
  41dab5:	dec    ebp
  41dab6:	es push edx
  41dab8:	mov    eax,ds:0x6b4e642a
  41dabd:	xor    al,0x36
  41dabf:	adc    BYTE PTR [esi],0x48
  41dac2:	and    cl,BYTE PTR [ecx]
  41dac4:	add    esi,DWORD PTR [edx-0xadca269]
  41daca:	call   0x7adb:0x99baaf0
  41dad1:	adc    al,0xc8
  41dad3:	sbb    al,0x9b
  41dad5:	aad    0xd0
  41dad7:	add    DWORD PTR [edx+0x6c56e654],0x9652c3dc
  41dae1:	dec    edx
  41dae2:	push   cs
  41dae3:	lods   eax,DWORD PTR ds:[esi]
  41dae4:	hlt    
  41dae5:	popa   
  41dae6:	mov    ch,0x9f
  41dae8:	frstor [eax]
  41daea:	pop    edi
  41daeb:	xchg   edi,eax
  41daec:	sahf   
  41daed:	popf   
  41daee:	mov    edx,0xc69fd7e5
  41daf3:	hlt    
  41daf4:	test   eax,0x36f7bb53
  41daf9:	mov    eax,ds:0x709528a6
  41dafe:	(bad)  
  41daff:	in     eax,0x4f
  41db01:	sbb    dh,BYTE PTR [eax-0x78]
  41db04:	cli    
  41db05:	test   ebp,eax
  41db07:	jecxz  0x41daeb
  41db09:	inc    edi
  41db0a:	outs   dx,BYTE PTR ds:[esi]
  41db0b:	ret    
  41db0c:	je     0x41db6e
  41db0e:	dec    ecx
  41db0f:	adc    al,0x39
  41db11:	repz (bad) 
  41db13:	mov    al,ds:0x55b6a63e
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   ds
  41db1a:	jbe    0x41db6b
  41db1c:	mov    edx,0x9983f910
  41db22:	call   0x3f84:0x6cf0008d
  41db29:	add    eax,0x226715f6
  41db2e:	jmp    0x31ed:0x6e96e381
  41db35:	and    ebx,DWORD PTR [esi]
  41db37:	rol    BYTE PTR [ecx],1
  41db39:	je     0x41db84
  41db3b:	jbe    0x41db2d
  41db3d:	jp     0x41db16
  41db3f:	push   edx
  41db40:	xchg   ecx,eax
  41db41:	pop    esi
  41db42:	ds push edx
  41db44:	pushf  
  41db45:	lea    esi,[eax-0x3fe5bfaf]
  41db4b:	ss (bad) 
  41db4d:	int3   
  41db4e:	add    DWORD PTR [ecx-0x76],edi
  41db51:	and    esp,esi
  41db53:	sbb    DWORD PTR [ebx-0x5f674c0b],esp
  41db59:	cmp    ebp,DWORD PTR [edx]
  41db5b:	int3   
  41db5c:	jmp    0x102:0x5cbedfba
  41db63:	and    dh,BYTE PTR [edx+0x30]
  41db66:	in     al,dx
  41db67:	sar    ebx,cl
  41db69:	scas   eax,DWORD PTR es:[edi]
  41db6a:	ret    0x9e5e
  41db6d:	inc    esi
  41db6e:	xchg   esi,eax
  41db6f:	cmp    al,0x8b
  41db71:	ins    BYTE PTR es:[edi],dx
  41db72:	adc    bh,BYTE PTR [esi+0x4d]
  41db75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db76:	add    eax,0xfdb96174
  41db7b:	mov    ds:0x6d493461,al
  41db80:	mov    dl,0x3
  41db82:	adc    eax,0x5084909a
  41db87:	jmp    0xf791bd77
  41db8c:	push   ecx
  41db8d:	jne    0x41db6a
  41db8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db90:	jne    0x41db55
  41db92:	shr    DWORD PTR [esi+0x7503f06a],0x84
  41db99:	ins    BYTE PTR es:[edi],dx
  41db9a:	sbb    DWORD PTR [esi],esp
  41db9c:	in     eax,dx
  41db9d:	out    dx,eax
  41db9e:	fisubr DWORD PTR [edx]
  41dba0:	daa    
  41dba1:	repz call 0x86ff1947
  41dba7:	push   edi
  41dba8:	adc    al,ch
  41dbaa:	or     DWORD PTR [ebx+0xf],ebx
  41dbad:	inc    eax
  41dbae:	xchg   edx,eax
  41dbaf:	lods   al,BYTE PTR ds:[esi]
  41dbb0:	jbe    0x41db74
  41dbb2:	sahf   
  41dbb3:	inc    ecx
  41dbb4:	mov    BYTE PTR [esi],bl
  41dbb6:	fisubr WORD PTR [eax+0x65]
  41dbb9:	sub    bh,BYTE PTR [edi-0x2c]
  41dbbc:	mov    bl,0x5a
  41dbbe:	sub    BYTE PTR [ebp+0x5f],al
  41dbc1:	adc    dl,BYTE PTR [eax-0x32c34db3]
  41dbc7:	xor    eax,0x575b758e
  41dbcc:	nop
  41dbcd:	(bad)  
  41dbce:	in     al,0x98
  41dbd0:	push   0xffffffe3
  41dbd2:	add    cl,BYTE PTR [edi-0x3c9d92e3]
  41dbd8:	mov    ecx,0x200c60af
  41dbdd:	daa    
  41dbde:	rcr    DWORD PTR [ebx-0x5e],1
  41dbe1:	scas   eax,DWORD PTR es:[edi]
  41dbe2:	jp     0x41dc12
  41dbe4:	mov    ds:0xbd43b813,eax
  41dbe9:	sub    ch,bl
  41dbeb:	inc    edi
  41dbec:	sbb    eax,0x89aeca30
  41dbf1:	inc    ebp
  41dbf2:	lock mov ecx,DWORD PTR ds:0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	adc    BYTE PTR cs:[edi-0x2485d4b0],bh
  41dc80:	add    BYTE PTR [ebx-0x7c7ca1f1],0x63
  41dc87:	fidivr DWORD PTR [ecx-0x17]
  41dc8a:	inc    eax
  41dc8b:	repz bound esp,QWORD PTR [edx]
  41dc8e:	sub    eax,0xd56c1324
  41dc93:	and    bh,dh
  41dc95:	sbb    edi,ebp
  41dc97:	push   edx
  41dc98:	jno    0x41dcaf
  41dc9a:	ja     0x41dd15
  41dc9c:	repz js 0x41dc4f
  41dc9f:	dec    ebx
  41dca0:	ss xchg esp,eax
  41dca2:	adc    eax,0x11647b22
  41dca7:	sub    BYTE PTR ds:0xe632ff3,bh
  41dcad:	sub    edi,0xffffff9b
  41dcb0:	dec    ecx
  41dcb1:	mov    bl,0xff
  41dcb3:	inc    edi
  41dcb4:	mov    dh,bh
  41dcb6:	jb     0x41dcee
  41dcb8:	scas   al,BYTE PTR es:[edi]
  41dcb9:	int3   
  41dcba:	xor    al,0xa2
  41dcbc:	sbb    bl,BYTE PTR [edi-0x29]
  41dcbf:	scas   eax,DWORD PTR es:[edi]
  41dcc0:	inc    eax
  41dcc1:	xchg   ebp,eax
  41dcc2:	add    eax,0x158f8731
  41dcc7:	mov    eax,ds:0x2252cf35
  41dccc:	repnz scas al,BYTE PTR es:[edi]
  41dcce:	ins    BYTE PTR es:[edi],dx
  41dccf:	push   ss
  41dcd0:	mov    edx,0x7eb81c
  41dcd5:	pushf  
  41dcd6:	leave  
  41dcd7:	cmp    DWORD PTR [edx+0x71c8747f],ecx
  41dcdd:	mov    BYTE PTR [ebx+eax*8],ah
  41dce0:	adc    cl,al
  41dce2:	cmp    BYTE PTR [esi-0x24502d9b],al
  41dce8:	jo     0x41dd3d
  41dcea:	add    BYTE PTR ds:0x422fe706,al
  41dcf0:	mov    esp,0xb1e89e36
  41dcf5:	shl    DWORD PTR [ebx],0x8e
  41dcf8:	sub    al,0x7e
  41dcfa:	add    eax,0x10ecbd09
  41dcff:	jecxz  0x41dce6
  41dd01:	mov    bl,0xbf
  41dd03:	adc    ch,ch
  41dd05:	mov    ebp,0xae925d33
  41dd0a:	enter  0xb0d,0x2e
  41dd0e:	sub    ebx,DWORD PTR [ebp+0x6e]
  41dd11:	fcomp  DWORD PTR [ecx]
  41dd13:	gs add eax,0x7bc58f21
  41dd19:	addr16 call eax
  41dd1c:	mov    es,ebp
  41dd1e:	in     al,dx
  41dd1f:	mov    DWORD PTR ds:0xab52545c,ebx
  41dd26:	fsubp  st(4),st
  41dd28:	inc    ecx
  41dd29:	sub    edi,DWORD PTR cs:[ebp-0x6aaf06bd]
  41dd30:	out    0xed,eax
  41dd32:	clc    
  41dd33:	adc    ecx,DWORD PTR [eax+edx*2-0x60]
  41dd37:	cdq    
  41dd38:	es pop edi
  41dd3a:	inc    ebp
  41dd3b:	mov    eax,ds:0x78b0a921
  41dd40:	fimul  DWORD PTR [eax+eiz*2-0x7e]
  41dd44:	(bad)  
  41dd45:	js     0x41dd22
  41dd47:	pop    esi
  41dd48:	popa   
  41dd49:	jge    0x41dd5c
  41dd4b:	mov    BYTE PTR [edx-0x5d],ch
  41dd4e:	sub    eax,0x667585fc
  41dd53:	inc    ecx
  41dd54:	mov    eax,ds:0x5d90e26c
  41dd59:	popa   
  41dd5a:	lds    esi,FWORD PTR [ebx+esi*1+0x141667c8]
  41dd61:	movlps xmm2,QWORD PTR [eax-0x9]
  41dd65:	outs   dx,BYTE PTR ds:[esi]
  41dd66:	ja     0x41dd9b
  41dd68:	mov    bh,0xd
  41dd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd6b:	arpl   WORD PTR [ebx],di
  41dd6d:	cs jne 0x41dd06
  41dd70:	ds in  al,0xf9
  41dd73:	add    BYTE PTR [ebx+0x5b],0xf4
  41dd77:	push   eax
  41dd78:	lahf   
  41dd79:	push   0xf1f84888
  41dd7e:	inc    ebp
  41dd7f:	jge    0x41dd3f
  41dd81:	ret    
  41dd82:	shr    DWORD PTR [esi],0xce
  41dd85:	fcom   QWORD PTR [ecx-0x33f4543e]
  41dd8b:	pop    ds
  41dd8c:	lea    eax,[ebp-0x57]
  41dd8f:	jmp    0x41ddd6
  41dd91:	stos   DWORD PTR es:[edi],eax
  41dd92:	test   eax,0x96b18fba
  41dd97:	(bad)  
  41dd98:	popa   
  41dd99:	sub    cl,BYTE PTR ds:0x98866554
  41dd9f:	pusha  
  41dda0:	mov    ah,0xde
  41dda2:	sub    BYTE PTR [eax+0x7a],ah
  41dda5:	call   0xfae65d5b
  41ddaa:	xor    al,0x44
  41ddac:	jp     0x41ddae
  41ddae:	and    eax,DWORD PTR [esi-0xa57e7ee]
  41ddb4:	rol    BYTE PTR [ecx],1
  41ddb6:	jmp    0x41de07
  41ddb8:	xchg   edx,eax
  41ddb9:	aaa    
  41ddba:	fbstp  TBYTE PTR [ebx+ebp*1+0x66]
  41ddbe:	dec    ecx
  41ddbf:	mov    BYTE PTR [edx],dl
  41ddc1:	mov    dh,0xb5
  41ddc3:	aas    
  41ddc4:	call   0xb2c6:0xd9a11ad4
  41ddcb:	dec    ebx
  41ddcc:	sub    DWORD PTR [esi-0x72],esi
  41ddcf:	adc    al,0xbd
  41ddd1:	mov    esi,0xce52b98d
  41ddd6:	add    eax,0x4e0d623
  41dddb:	lods   al,BYTE PTR ds:[esi]
  41dddc:	fsubr  QWORD PTR [edx]
  41ddde:	cmp    DWORD PTR [ebx-0x6b2e232d],eax
  41dde4:	mov    al,ds:0xdb9a7a2e
  41dde9:	rol    DWORD PTR [ecx-0x416a9308],cl
  41ddef:	lods   al,BYTE PTR ds:[esi]
  41ddf0:	(bad)  
  41ddf1:	lea    edx,[eax]
  41ddf3:	sbb    ebx,0x6b53191
  41ddf9:	mov    ds:0x5166eed9,eax
  41ddfe:	cmp    ebp,DWORD PTR [edi+0x791a7e93]
  41de04:	mov    dh,0xe2
  41de06:	add    BYTE PTR [edx-0x63],0x93
  41de0a:	das    
  41de0b:	pop    ecx
  41de0c:	in     al,0xdf
  41de0e:	add    dl,dh
  41de10:	pop    edi
  41de11:	cdq    
  41de12:	and    eax,0x9a7921bc
  41de17:	mov    cl,0x45
  41de19:	push   ecx
  41de1a:	xor    BYTE PTR [esi],bh
  41de1c:	stc    
  41de1d:	jbe    0x41de2f
  41de1f:	jb     0x41de3d
  41de21:	pop    edi
  41de22:	mov    cl,0x57
  41de24:	mov    eax,0x2b5ecee0
  41de29:	sub    al,0x33
  41de2b:	fnsave [eax+0x43e538b5]
  41de31:	xchg   esp,eax
  41de32:	dec    ebx
  41de33:	dec    ecx
  41de34:	das    
  41de35:	(bad)  
  41de36:	ja     0x41de43
  41de38:	xchg   ebx,esp
  41de3a:	das    
  41de3b:	sub    al,0xf5
  41de3d:	mov    bl,0x7f
  41de3f:	and    al,0x25
  41de41:	jmp    0x41de1c
  41de43:	mov    ebx,0x1c90fb1b
  41de48:	jmp    0xcd8e:0xe741311d
  41de4f:	pop    ds
  41de50:	lea    esi,[esi]
  41de52:	repnz dec esp
  41de54:	lods   eax,DWORD PTR ds:[esi]
  41de55:	lods   al,BYTE PTR ds:[esi]
  41de56:	cmp    eax,0xd9b7c921
  41de5b:	and    dl,0x58
  41de5e:	adc    al,0xb9
  41de60:	inc    esi
  41de61:	add    esi,DWORD PTR [eax+ebp*2]
  41de64:	pop    ebx
  41de65:	mov    bl,0xbf
  41de67:	pop    ds
  41de68:	inc    edx
  41de69:	adc    edx,DWORD PTR [ebx+0x7e]
  41de6c:	ret    0x998c
  41de6f:	fcom   DWORD PTR [ebp+0x34]
  41de72:	lds    esi,FWORD PTR [edi+ebx*1-0x723a929f]
  41de79:	add    al,0x14
  41de7b:	mov    ebx,0x3176a299
  41de80:	cdq    
  41de81:	sti    
  41de82:	jecxz  0x41ded7
  41de84:	mov    edi,eax
  41de86:	inc    esi
  41de87:	int    0x5d
  41de89:	in     eax,0x7
  41de8b:	std    
  41de8c:	sbb    al,0xc9
  41de8e:	outs   dx,DWORD PTR ds:[esi]
  41de8f:	dec    ebp
  41de90:	or     eax,0x5619da57
  41de95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de96:	outs   dx,DWORD PTR ds:[esi]
  41de97:	push   ebx
  41de98:	push   esp
  41de99:	nop
  41de9a:	mov    dl,0x1
  41de9c:	imul   esp,DWORD PTR [ebx+0x3293c98b],0x46a37b53
  41dea6:	adc    ebp,DWORD PTR [esi]
  41dea8:	mov    cl,0x9c
  41deaa:	rcr    BYTE PTR [esi-0x66],cl
  41dead:	shl    ebx,cl
  41deaf:	mov    ch,0xee
  41deb1:	jns    0x41de50
  41deb3:	jg     0x41de73
  41deb5:	add    al,0x3d
  41deb7:	in     eax,dx
  41deb8:	pop    eax
  41deb9:	(bad)  
  41debb:	and    eax,0xb813788a
  41dec0:	xor    al,0x45
  41dec2:	icebp  
  41dec3:	mov    cl,0x30
  41dec5:	mov    ds:0x72a3dfc6,al
  41deca:	add    DWORD PTR [ebx-0xd1e1f7b],eax
  41ded0:	adc    al,0x6c
  41ded2:	out    dx,al
  41ded3:	mov    edx,0xaf34f7b9
  41ded8:	or     BYTE PTR [edi],dh
  41deda:	in     al,dx
  41dedb:	int3   
  41dedc:	ins    DWORD PTR es:[edi],dx
  41dedd:	adc    eax,0xc34e98ed
  41dee2:	mov    ebx,0xe9fd78d3
  41dee7:	retf   0x9391
  41deea:	sub    BYTE PTR ds:0x61d5367,0x29
  41def1:	iret   
  41def2:	loope  0x41df42
  41def4:	adc    dl,ch
  41def6:	mov    dl,0x3
  41def8:	mov    bh,0x8c
  41defa:	jmp    FWORD PTR [ebx+0x51]
  41defd:	jl     0x41df42
  41deff:	icebp  
  41df00:	dec    ecx
  41df01:	lods   eax,DWORD PTR ds:[esi]
  41df02:	jno    0x41deba
  41df04:	inc    esp
  41df05:	push   ss
  41df06:	add    al,0x49
  41df08:	arpl   WORD PTR [ebx],di
  41df0a:	pop    edx
  41df0b:	shl    bh,1
  41df0d:	stos   BYTE PTR es:[edi],al
  41df0e:	pushf  
  41df0f:	div    DWORD PTR [edi+0x3e71c130]
  41df15:	scas   al,BYTE PTR es:[edi]
  41df16:	lods   al,BYTE PTR ds:[esi]
  41df17:	nop
  41df18:	push   edi
  41df19:	jge    0x41df54
  41df1b:	pop    ds
  41df1c:	push   ebp
  41df1d:	cmp    BYTE PTR [ebx+0x70e7cd82],0xba
  41df24:	scas   eax,DWORD PTR es:[edi]
  41df25:	jns    0x41df5e
  41df27:	ficom  DWORD PTR [edx-0xa]
  41df2a:	pop    edi
  41df2b:	leave  
  41df2c:	cs pop ebp
  41df2e:	or     al,0x97
  41df30:	out    dx,al
  41df31:	dec    DWORD PTR [eax+0x4402ef2b]
  41df37:	dec    esi
  41df38:	sbb    DWORD PTR [edx],edx
  41df3a:	fnstenv [eax-0x43dfbd9f]
  41df40:	xchg   edx,eax
  41df41:	pop    edi
  41df42:	js     0x41df6c
  41df44:	dec    esi
  41df45:	xchg   esi,eax
  41df46:	inc    ebx
  41df47:	scas   eax,DWORD PTR es:[edi]
  41df48:	mov    edx,0x57afedd8
  41df4d:	shl    BYTE PTR [ecx-0x23],1
  41df50:	mov    ecx,edi
  41df52:	and    al,0xee
  41df54:	adc    al,0x30
  41df56:	or     eax,0xc32825f0
  41df5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df5c:	add    DWORD PTR [ecx],0x10
  41df5f:	add    al,0x32
  41df61:	nop
  41df62:	stos   BYTE PTR es:[edi],al
  41df63:	pop    esi
  41df64:	jns    0x41defc
  41df66:	repnz cmp eax,0x95e1a474
  41df6c:	adc    al,0x61
  41df6e:	jecxz  0x41dfba
  41df70:	dec    ecx
  41df71:	fwait
  41df72:	hlt    
  41df73:	dec    eax
  41df74:	scas   eax,DWORD PTR es:[edi]
  41df75:	(bad)  
  41df77:	pop    ecx
  41df78:	mov    esp,0x4c5aeec5
  41df7d:	shl    esi,0xb5
  41df80:	and    bl,BYTE PTR [esi]
  41df82:	pop    eax
  41df83:	push   edi
  41df84:	and    bh,BYTE PTR [esi+0x843a8f1]
  41df8a:	jp     0x41df67
  41df8c:	lods   eax,DWORD PTR ds:[esi]
  41df8d:	std    
  41df8e:	mov    ah,0x18
  41df90:	pop    eax
  41df91:	cwde   
  41df92:	jnp    0x41df4c
  41df94:	push   cs
  41df95:	sbb    al,0x7d
  41df97:	mov    eax,ds:0xeccbe860
  41df9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df9d:	repnz xor BYTE PTR [edi],bh
  41dfa0:	shl    BYTE PTR [bx+di+0x535b],0x24
  41dfa6:	mov    eax,0x58dee6
  41dfab:	repz cwde 
  41dfad:	out    0xf8,eax
  41dfaf:	loope  0x41dfe6
  41dfb1:	in     al,0xc0
  41dfb3:	inc    ebx
  41dfb4:	mov    esi,0x928eae10
  41dfb9:	stos   DWORD PTR es:[edi],eax
  41dfba:	lock jg 0x41dfe8
  41dfbd:	dec    eax
  41dfbe:	jb     0x41dfd9
  41dfc0:	jbe    0x41df62
  41dfc2:	inc    ebp
  41dfc3:	jl     0x41dfc4
  41dfc5:	pop    edi
  41dfc6:	retf   0xf582
  41dfc9:	into   
  41dfca:	sbb    BYTE PTR [ebx+0x3dfe4af9],0x19
  41dfd1:	sbb    al,0x9e
  41dfd3:	fadd   DWORD PTR [eax-0x66]
  41dfd6:	call   0x8ecc:0x8801fdac
  41dfdd:	mov    eax,ds:0x94e26d08
  41dfe2:	xor    DWORD PTR [eax+ecx*4-0x46],edi
  41dfe6:	xor    DWORD PTR [ebp+0x6f],ebx
  41dfe9:	dec    edi
  41dfea:	mov    DWORD PTR [edx],eax
  41dfec:	lahf   
  41dfed:	dec    ebx
  41dfee:	dec    edi
  41dfef:	jno    0x41e06a
  41dff1:	fld    DWORD PTR [edx]
  41dff3:	rcl    bl,1
  41dff5:	xor    al,0xcd
  41dff7:	jnp    0x41e002
  41dff9:	xor    ecx,DWORD PTR [eax-0x70d662b2]
  41dfff:	pop    ss
  41e000:	jnp    0x41e002
  41e002:	adc    bl,dh
  41e004:	cmc    
  41e005:	dec    esp
  41e006:	imul   ecx,DWORD PTR [ebx+0x60],0x55
  41e00a:	leave  
  41e00b:	push   es
  41e00c:	or     edi,DWORD PTR [edx-0x11]
  41e00f:	xor    eax,DWORD PTR [ecx-0x4538666c]
  41e015:	pop    ecx
  41e016:	cmp    eax,0x9ba89bf
  41e01b:	test   ebx,esp
  41e01d:	fdiv   QWORD PTR [esi]
  41e01f:	lock outs dx,DWORD PTR ds:[esi]
  41e021:	sub    al,0x9
  41e023:	out    dx,al
  41e024:	stos   DWORD PTR es:[edi],eax
  41e025:	xlat   BYTE PTR ds:[ebx]
  41e026:	loope  0x41e041
  41e028:	pushf  
  41e029:	sub    al,bh
  41e02b:	sbb    ebp,DWORD PTR [edi]
  41e02d:	clc    
  41e02e:	jmp    0xf277:0xb16326e7
  41e035:	pop    es
  41e036:	or     DWORD PTR [eax-0x43],eax
  41e039:	mov    ecx,0x1e9cd812
  41e03e:	popa   
  41e03f:	ds mov bh,0x51
  41e042:	pop    ebx
  41e043:	and    al,0x9b
  41e045:	scas   eax,DWORD PTR es:[edi]
  41e046:	add    al,0xe
  41e048:	mov    cl,0x3a
  41e04a:	adc    BYTE PTR [eax],0xf3
  41e04d:	imul   edi,esi,0x62
  41e050:	das    
  41e051:	icebp  
  41e052:	ins    BYTE PTR es:[edi],dx
  41e053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e054:	scas   al,BYTE PTR es:[edi]
  41e055:	cmc    
  41e056:	xor    cl,BYTE PTR [esi*4+0x476131a1]
  41e05d:	jo     0x41e0c3
  41e05f:	(bad)  
  41e061:	lods   al,BYTE PTR ds:[esi]
  41e062:	xor    DWORD PTR [edx+0x1],eax
  41e065:	jnp    0x41e04f
  41e067:	xchg   esi,eax
  41e068:	(bad)  [edx-0x12]
  41e06b:	xor    dh,al
  41e06d:	mov    DWORD PTR [eax+ebp*1],ebp
  41e070:	aad    0x45
  41e072:	dec    ebx
  41e073:	mov    BYTE PTR [esi],al
  41e075:	jo     0x41e0f4
  41e077:	mov    ebp,0x3bab2298
  41e07c:	icebp  
  41e07d:	aad    0x30
  41e07f:	call   0xda5dd0c7
  41e084:	mov    ebp,0x19de4a03
  41e089:	push   eax
  41e08a:	mov    esi,0x1877fbb1
  41e08f:	cmp    DWORD PTR [ecx],0x6426d6d2
  41e095:	inc    esi
  41e096:	jb     0x41e031
  41e098:	or     dh,al
  41e09a:	xchg   ecx,eax
  41e09b:	add    eax,0x3fc80c9e
  41e0a0:	mov    ds:0x70e99df2,al
  41e0a5:	fnsave [edx+0x58]
  41e0a8:	test   eax,0x25c75238
  41e0ad:	cmp    al,0xf
  41e0af:	gs xchg ebp,eax
  41e0b1:	shr    BYTE PTR [ebx+0x66458ee3],1
  41e0b7:	in     eax,0xb2
  41e0b9:	push   edx
  41e0ba:	in     eax,0xb3
  41e0bc:	stc    
  41e0bd:	jecxz  0x41e097
  41e0bf:	jns    0x41e062
  41e0c1:	jecxz  0x41e107
  41e0c3:	stos   DWORD PTR es:[edi],eax
  41e0c4:	mov    ch,0x3b
  41e0c6:	pushf  
  41e0c7:	ja     0x41e0ea
  41e0c9:	jecxz  0x41e0db
  41e0cb:	mov    DWORD PTR [edx+0x32c7c3f1],eax
  41e0d1:	push   cs
  41e0d2:	dec    esi
  41e0d3:	pop    ss
  41e0d4:	add    ebp,esp
  41e0d6:	lods   al,BYTE PTR ds:[esi]
  41e0d7:	jno    0x41e061
  41e0d9:	lea    eax,[ecx]
  41e0db:	iret   
  41e0dc:	mov    al,0xfa
  41e0de:	jge    0x41e07a
  41e0e0:	fs test eax,0xddc5fcd4
  41e0e6:	(bad)  
  41e0e8:	push   0x7ecbe739
  41e0ed:	out    dx,eax
  41e0ee:	pushf  
  41e0ef:	call   0x6266:0xc050774f
  41e0f6:	lds    ebx,FWORD PTR [eax-0x40]
  41e0f9:	xlat   BYTE PTR ds:[ebx]
  41e0fa:	jo     0x41e0a2
  41e0fc:	push   0xffffffbc
  41e0fe:	(bad)  
  41e0ff:	imul   esp,DWORD PTR [esi+ebx*8+0x5e],0xfffffff6
  41e104:	mov    BYTE PTR [esi],ch
  41e106:	push   ebp
  41e107:	inc    ebx
  41e108:	mov    bh,0x30
  41e10a:	shl    BYTE PTR [eax],0x85
  41e10d:	arpl   WORD PTR [esi],bx
  41e10f:	lea    edx,[eax-0x6c]
  41e112:	push   0xcbc103da
  41e117:	xor    cl,BYTE PTR [ebx]
  41e119:	in     eax,0x44
  41e11b:	loop   0x41e0af
  41e11d:	aam    0xd0
  41e11f:	bnd jle 0x41e105
  41e122:	xchg   ecx,eax
  41e123:	cwde   
  41e124:	dec    ecx
  41e125:	and    eax,0xce61542b
  41e12a:	adc    al,0x2
  41e12c:	dec    ebx
  41e12d:	ret    
  41e12e:	add    BYTE PTR [edx+ecx*2],bh
  41e131:	retf   
  41e132:	out    dx,al
  41e133:	loop   0x41e1a6
  41e135:	mov    ds,WORD PTR [edx]
  41e137:	pop    ecx
  41e138:	inc    ecx
  41e139:	idiv   BYTE PTR [ebx]
  41e13b:	cdq    
  41e13c:	sbb    al,0xfe
  41e13e:	daa    
  41e13f:	or     eax,0x40a58719
  41e144:	ja     0x41e145
  41e146:	lods   eax,DWORD PTR ds:[esi]
  41e147:	adc    ecx,DWORD PTR [edx-0x40]
  41e14a:	fwait
  41e14b:	jae    0x41e18e
  41e14d:	sahf   
  41e14e:	jo     0x41e114
  41e150:	ret    0x7618
  41e153:	or     esp,DWORD PTR [ecx-0x3d]
  41e156:	icebp  
  41e157:	cld    
  41e158:	ins    BYTE PTR es:[edi],dx
  41e159:	cmp    al,dh
  41e15b:	pop    ds
  41e15c:	jne    0x41e130
  41e15e:	or     eax,DWORD PTR [edx+edi*4]
  41e161:	mov    esp,0xccd8e3d7
  41e166:	jo     0x41e152
  41e168:	cmp    ah,bl
  41e16a:	jnp    0x41e18f
  41e16c:	xor    BYTE PTR [ebx+edx*2-0x4961d365],ah
  41e173:	stos   DWORD PTR es:[edi],eax
  41e174:	sar    BYTE PTR [esi+0x56],0xd4
  41e178:	push   edi
  41e179:	pop    edx
  41e17a:	or     bh,BYTE PTR [ebp-0x57]
  41e17d:	(bad)  
  41e17e:	das    
  41e17f:	xchg   edx,eax
  41e180:	lods   al,BYTE PTR ds:[esi]
  41e181:	xor    ebp,DWORD PTR [ebp+0x2e]
  41e184:	pop    ebx
  41e185:	daa    
  41e186:	inc    esp
  41e187:	ja     0x41e164
  41e189:	cmp    ecx,DWORD PTR [ebx]
  41e18b:	fstp   QWORD PTR [eax+0xe]
  41e18e:	fbstp  TBYTE PTR [edx]
  41e190:	mov    es,WORD PTR [esp+ecx*1]
  41e193:	daa    
  41e194:	jmp    0xc241:0xcb8137dd
  41e19b:	ss mov ebp,0x987163fa
  41e1a1:	in     eax,0x4e
  41e1a3:	jno    0x41e212
  41e1a5:	out    dx,al
  41e1a6:	lea    ebx,[ebx+ecx*1-0x2f]
  41e1aa:	daa    
  41e1ab:	mov    ebp,0xc08517b6
  41e1b0:	add    dh,dh
  41e1b2:	push   ecx
  41e1b3:	js     0x41e18e
  41e1b5:	jle    0x41e18b
  41e1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1b8:	dec    eax
  41e1b9:	or     BYTE PTR [esp+ebp*1+0x63f47f90],bl
  41e1c0:	push   cs
  41e1c1:	js     0x41e1da
  41e1c3:	jmp    0x41e237
  41e1c5:	inc    esi
  41e1c6:	mov    esi,0xb6dd86a2
  41e1cb:	sbb    BYTE PTR [ecx-0x1a],cl
  41e1ce:	into   
  41e1cf:	ret    
  41e1d0:	fmul   DWORD PTR [eax+0x6]
  41e1d3:	xchg   ecx,eax
  41e1d4:	mov    bl,0xb0
  41e1d6:	mov    ebp,0xb97334a
  41e1db:	push   ss
  41e1dc:	pop    edx
  41e1dd:	(bad)  
  41e1de:	xor    esi,edi
  41e1e0:	loopne 0x41e196
  41e1e2:	add    eax,0x59f6ee52
  41e1e7:	dec    ebx
  41e1e8:	shl    DWORD PTR [eax+0x6d65180d],cl
  41e1ee:	out    dx,eax
  41e1ef:	fsub   QWORD PTR [ebx+0x2]
  41e1f2:	fucomp st(5)
  41e1f4:	pop    eax
  41e1f5:	pop    ss
  41e1f6:	mov    esi,0x142af023
  41e1fb:	adc    al,0xfd
  41e1fd:	fbld   TBYTE PTR [edi+0x30]
  41e200:	fwait
  41e201:	mov    dh,0x35
  41e203:	xor    edi,DWORD PTR [ebp+0x18]
  41e206:	fadd   QWORD PTR [ebx+eax*1+0x52]
  41e20a:	bound  ebx,QWORD PTR [esi-0x5]
  41e20d:	xor    ah,BYTE PTR [eax-0x42cbbd2d]
  41e213:	rcr    DWORD PTR [esp+ecx*8-0x7fa03565],1
  41e21a:	lods   al,BYTE PTR ds:[esi]
  41e21b:	sub    edi,ebp
  41e21d:	pop    eax
  41e21e:	xor    al,0x41
  41e220:	fst    st(4)
  41e222:	adc    DWORD PTR [edx],edi
  41e224:	lahf   
  41e225:	xor    BYTE PTR gs:[ecx+0x6321edc],cl
  41e22c:	icebp  
  41e22d:	or     cl,BYTE PTR [di-0x27e7]
  41e232:	aaa    
  41e233:	mov    al,0xb2
  41e235:	or     ebx,ebx
  41e237:	cmp    ah,bl
  41e239:	sbb    BYTE PTR [ebx+0x5f68fd97],dh
  41e23f:	js     0x41e20d
  41e241:	data16 jp 0x41e273
  41e244:	test   eax,0xf0a4de7d
  41e249:	outs   dx,DWORD PTR ds:[esi]
  41e24a:	jmp    0x41e2a0
  41e24c:	out    0x2a,al
  41e24e:	ds fcomip st,st(6)
  41e251:	jbe    0x41e2a2
  41e253:	push   ss
  41e254:	jl     0x41e20d
  41e256:	or     eax,0x1b02d01d
  41e25b:	jmp    0x3e27df1
  41e260:	mov    gs,WORD PTR [esi+0xb9cc7af]
  41e266:	mov    edi,0x57d3dd4a
  41e26b:	jb     0x41e1fa
  41e26d:	(bad)  
  41e26e:	int3   
  41e26f:	xor    ecx,DWORD PTR [ecx]
  41e271:	cmp    DWORD PTR [edx-0xe72409f],eax
  41e277:	pop    edi
  41e278:	cs jmp 0x69a5189d
  41e27e:	mov    ebp,0xe614333d
  41e283:	push   ecx
  41e284:	mov    edi,0xa6dc7da8
  41e289:	mov    cl,0xca
  41e28b:	retf   
  41e28c:	pusha  
  41e28d:	pop    ss
  41e28e:	cmp    bh,BYTE PTR [ebp-0x3a5314cc]
  41e294:	dec    edx
  41e295:	adc    dl,BYTE PTR [esi+0x1ef80068]
  41e29b:	gs mov esi,0xea7d6194
  41e2a1:	and    al,0x69
  41e2a3:	(bad)  
  41e2a4:	and    eax,0xf490a087
  41e2a9:	imul   ebx,ebx,0x5c
  41e2ac:	nop
  41e2ad:	push   es
  41e2ae:	inc    ebx
  41e2af:	loopne 0x41e2a5
  41e2b1:	mov    bh,0x6e
  41e2b3:	cmp    eax,0xdc614469
  41e2b8:	ja     0x41e24b
  41e2ba:	jne    0x41e2bf
  41e2bc:	mov    al,0x89
  41e2be:	sti    
  41e2bf:	pusha  
  41e2c0:	es push ebx
  41e2c2:	push   esi
  41e2c3:	bound  ebp,QWORD PTR [ebx+0x51]
  41e2c6:	int3   
  41e2c7:	push   edi
  41e2c8:	xchg   esi,eax
  41e2c9:	bound  edx,QWORD PTR [edi+0x7]
  41e2cc:	ja     0x41e24e
  41e2ce:	fwait
  41e2cf:	or     ch,BYTE PTR [eax]
  41e2d1:	jmp    0x41e2de
  41e2d3:	add    al,0x37
  41e2d5:	iret   
  41e2d6:	loope  0x41e332
  41e2d8:	cmp    DWORD PTR [eax+edx*8+0x3c],0xffffffd7
  41e2dd:	pop    ecx
  41e2de:	mov    al,ds:0x8101c275
  41e2e3:	sbb    esp,DWORD PTR [ebx+0x79f114a9]
  41e2e9:	imul   esi,esp,0xbb4cab17
  41e2ef:	fcmovnu st,st(7)
  41e2f1:	mov    WORD PTR [ecx-0x422223f5],es
  41e2f7:	cmp    eax,0x68ed828b
  41e2fc:	mov    bh,0xab
  41e2fe:	mov    bh,0x22
  41e300:	imul   esi,DWORD PTR [eax],0x7d
  41e303:	cmc    
  41e304:	shr    ecx,1
  41e306:	pop    ecx
  41e307:	pusha  
  41e308:	pop    ds
  41e309:	lds    esi,FWORD PTR [ecx*4+0x2343149c]
  41e310:	or     eax,0xc5550ce7
  41e315:	stos   BYTE PTR es:[edi],al
  41e316:	inc    ecx
  41e317:	mov    ebp,0x611cb7c7
  41e31c:	xchg   esp,eax
  41e31d:	icebp  
  41e31e:	pop    ebp
  41e31f:	mov    eax,ds:0x76c85b93
  41e324:	and    DWORD PTR [eax-0x2c],esp
  41e327:	cmp    DWORD PTR [edx-0x1c],0xf8f67128
  41e32e:	and    al,0xea
  41e330:	(bad)  
  41e331:	lahf   
  41e332:	sub    ah,bh
  41e334:	adc    ch,BYTE PTR [esi+0x26396906]
  41e33a:	stc    
  41e33b:	das    
  41e33c:	cld    
  41e33d:	xor    al,0x31
  41e33f:	pop    ds
  41e340:	xchg   BYTE PTR [ebp+0x49],bh
  41e343:	pop    ss
  41e344:	aas    
  41e345:	jmp    0x1b61c120
  41e34a:	sub    al,0x70
  41e34c:	cmp    DWORD PTR [esi],0xd565e474
  41e352:	xor    ecx,DWORD PTR [edx+0x2d]
  41e355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e356:	not    DWORD PTR [ecx+0x26]
  41e359:	xor    eax,ecx
  41e35b:	xor    edx,DWORD PTR [ecx+0x68]
  41e35e:	inc    esi
  41e35f:	or     ecx,DWORD PTR [edi]
  41e361:	mov    ds:0x2921d9ab,al
  41e366:	dec    esi
  41e367:	dec    esp
  41e368:	xor    BYTE PTR [ebx+ecx*2+0x30],cl
  41e36c:	or     cl,BYTE PTR [edi]
  41e36e:	jmp    0xb897:0x6e2d318d
  41e375:	call   DWORD PTR [ecx+0x19]
  41e378:	jbe    0x41e331
  41e37a:	jnp    0x41e3eb
  41e37c:	(bad)  
  41e37d:	popf   
  41e37e:	pop    ebp
  41e37f:	clc    
  41e380:	sub    dl,BYTE PTR [ebp-0x7330798a]
  41e386:	ja     0x41e318
  41e388:	test   DWORD PTR [ebp+0x41],esp
  41e38b:	push   0x1c
  41e38d:	popa   
  41e38e:	je     0x41e34f
  41e390:	or     ch,cl
  41e392:	xor    al,0x6e
  41e394:	mov    ch,0x48
  41e396:	add    BYTE PTR [edx+ebx*2],bh
  41e399:	pop    edi
  41e39a:	(bad)  
  41e39b:	enter  0x7f38,0x17
  41e39f:	jmp    0x41e37f
  41e3a1:	inc    eax
  41e3a2:	cmp    BYTE PTR [eax],0x26
  41e3a5:	adc    eax,0x8e0923d5
  41e3aa:	add    eax,DWORD PTR [ebp+0x487677de]
  41e3b0:	push   esp
  41e3b1:	and    al,0xa4
  41e3b3:	and    BYTE PTR [edi],dl
  41e3b5:	pusha  
  41e3b6:	dec    edx
  41e3b7:	shl    DWORD PTR [ecx+0x76a48fce],1
  41e3bd:	data16 mov cl,0x9e
  41e3c0:	test   BYTE PTR [edi-0x3f1f5afe],ah
  41e3c6:	addr16 pushf 
  41e3c8:	mov    bl,0xe0
  41e3ca:	test   eax,ebp
  41e3cc:	cmp    DWORD PTR [edx-0x1e2c4449],0x95af0a7a
  41e3d6:	pop    es
  41e3d7:	push   0xffffffdd
  41e3d9:	fcom   QWORD PTR [edx]
  41e3db:	test   DWORD PTR [esi-0x7fb93e72],esp
  41e3e1:	jecxz  0x41e44b
  41e3e3:	jno    0x41e397
  41e3e5:	lahf   
  41e3e6:	ja     0x41e3e6
  41e3e8:	hlt    
  41e3e9:	xchg   edi,eax
  41e3ea:	pop    esp
  41e3eb:	mov    eax,ds:0xc5cca589
  41e3f0:	gs push edi
  41e3f2:	push   es
  41e3f3:	and    ah,BYTE PTR [edi+0x70320c5f]
  41e3f9:	(bad)  
  41e3fa:	lods   eax,DWORD PTR ds:[esi]
  41e3fb:	gs fwait
  41e3fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3fe:	adc    edi,DWORD PTR [ebp-0xe]
  41e401:	test   ah,cl
  41e403:	lea    ebp,[esi-0x1336eaa3]
  41e409:	fdivr  QWORD PTR [esi+0x33]
  41e40c:	push   eax
  41e40d:	mov    ebp,0xce6376c1
  41e412:	xor    al,0x1c
  41e414:	jle    0x41e48b
  41e416:	jle    0x41e48a
  41e418:	dec    ebx
  41e419:	pop    esp
  41e41a:	dec    edx
  41e41b:	add    bl,BYTE PTR [eax]
  41e41d:	or     al,0xc0
  41e41f:	loop   0x41e3d6
  41e421:	mov    esp,0x6df978fa
  41e426:	mov    bl,0xf1
  41e428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e429:	test   al,0x42
  41e42b:	icebp  
  41e42c:	inc    esp
  41e42d:	push   esp
  41e42e:	mov    bl,0xca
  41e430:	lahf   
  41e431:	fld    TBYTE PTR [edx-0x15fafa6e]
  41e437:	cmc    
  41e438:	fst    DWORD PTR [ebx-0x33]
  41e43b:	(bad)  
  41e43d:	in     al,0xa3
  41e43f:	sbb    esp,DWORD PTR [ebp+0x4f]
  41e442:	push   ecx
  41e443:	pusha  
  41e444:	inc    ebx
  41e445:	lods   eax,DWORD PTR ds:[esi]
  41e446:	retf   0xbdf
  41e449:	dec    esi
  41e44a:	ficom  DWORD PTR [ecx-0x15e2c91a]
  41e450:	mov    bh,BYTE PTR [ecx-0x2f]
  41e453:	pop    ecx
  41e454:	(bad)  
  41e457:	push   0xffffffd9
  41e459:	(bad)  
  41e45a:	xor    al,0x81
  41e45c:	pop    es
  41e45d:	loopne 0x41e3e0
  41e45f:	cmp    BYTE PTR [eax-0x7775aec7],0x22
  41e466:	or     ebx,DWORD PTR [edi+0x13]
  41e469:	mov    cl,bl
  41e46b:	and    bl,BYTE PTR [ebx-0x3]
  41e46e:	push   esp
  41e46f:	or     bh,BYTE PTR [esi]
  41e471:	push   cs
  41e472:	outs   dx,DWORD PTR ds:[esi]
  41e473:	les    edi,FWORD PTR [esi]
  41e475:	fwait
  41e476:	xchg   DWORD PTR [ebx],eax
  41e478:	dec    edi
  41e479:	(bad)  
  41e47a:	and    bh,al
  41e47c:	fdivr  QWORD PTR [esi+0x38]
  41e47f:	test   BYTE PTR [ecx-0x429d6b43],0xe1
  41e486:	jmp    0x41e479
  41e488:	xor    DWORD PTR [esi+0x5b55165f],edi
  41e48e:	or     ecx,DWORD PTR [esi]
  41e490:	je     0x41e430
  41e492:	xor    ebx,ebp
  41e494:	ret    
  41e495:	add    al,0xad
  41e497:	dec    edx
  41e498:	fidiv  DWORD PTR [ebp+0x2e353312]
  41e49e:	in     eax,dx
  41e49f:	sti    
  41e4a0:	rcr    DWORD PTR [eax-0xc],1
  41e4a3:	cmp    ebx,edx
  41e4a5:	or     al,0x79
  41e4a7:	xor    BYTE PTR [esi-0xb82b6ff],ch
  41e4ad:	mov    dh,0x80
  41e4af:	loope  0x41e453
  41e4b1:	sbb    eax,0xad02330e
  41e4b6:	pmuludq mm1,mm5
  41e4b9:	pop    ebx
  41e4ba:	call   0x833:0x5cc239e0
  41e4c1:	sbb    al,0xe1
  41e4c3:	sbb    ah,dh
  41e4c5:	push   ds
  41e4c6:	sub    DWORD PTR [eax+ecx*4-0x13caf174],esi
  41e4cd:	or     DWORD PTR [edi-0x54cc6169],esp
  41e4d3:	clc    
  41e4d4:	add    bl,cl
  41e4d6:	scas   al,BYTE PTR es:[edi]
  41e4d7:	xor    bl,cl
  41e4d9:	fild   QWORD PTR [ebp-0x62]
  41e4dc:	ds mov ecx,0x74c19ed9
  41e4e2:	jecxz  0x41e4df
  41e4e4:	sbb    BYTE PTR [edi],ah
  41e4e6:	mov    ebp,0xfc5544cd
  41e4eb:	inc    eax
  41e4ec:	cld    
  41e4ed:	cld    
  41e4ee:	jb     0x41e534
  41e4f0:	push   eax
  41e4f1:	int    0x8a
  41e4f3:	pop    edi
  41e4f4:	dec    eax
  41e4f5:	std    
  41e4f6:	push   ebp
  41e4f7:	pop    esi
  41e4f8:	xchg   esp,eax
  41e4f9:	pusha  
  41e4fa:	scas   al,BYTE PTR es:[edi]
  41e4fb:	mov    edi,0x13218f20
  41e500:	dec    ecx
  41e501:	fld    st(5)
  41e503:	popa   
  41e504:	aas    
  41e505:	sub    ch,BYTE PTR [edi+0x6034fd99]
  41e50b:	xor    dl,dh
  41e50d:	in     eax,0xd
  41e50f:	ret    0xdce1
  41e512:	cs jne 0x41e4f9
  41e515:	stos   BYTE PTR es:[edi],al
  41e516:	or     esp,ecx
  41e518:	dec    esp
  41e519:	adc    eax,DWORD PTR es:[esi-0x6c4a5b75]
  41e520:	jl     0x41e5a0
  41e522:	adc    bl,0xea
  41e525:	mov    al,0xda
  41e527:	xor    al,0x8e
  41e529:	(bad)  
  41e52a:	or     al,0x4d
  41e52c:	cmp    BYTE PTR [edi+eax*4],cl
  41e52f:	mov    edi,esp
  41e531:	pop    eax
  41e532:	mov    edi,0x5dec05b0
  41e537:	mov    fs,WORD PTR [ecx-0x32]
  41e53a:	test   eax,0x12ef6cb2
  41e53f:	mov    bl,0xb9
  41e541:	icebp  
  41e542:	lea    edx,[ecx-0x5ef6ea77]
  41e548:	aam    0xbc
  41e54a:	jge    0x41e524
  41e54c:	mov    dh,0x87
  41e54e:	out    0xb,al
  41e550:	adc    dh,0xbb
  41e553:	mov    esi,0x1f43c70d
  41e558:	xchg   ecx,eax
  41e559:	mov    dl,0x9d
  41e55b:	adc    esp,DWORD PTR [edx-0x9]
  41e55e:	out    dx,eax
  41e55f:	loope  0x41e5b9
  41e561:	pop    es
  41e562:	js     0x41e577
  41e564:	xchg   ebx,eax
  41e565:	popa   
  41e566:	xor    ebx,DWORD PTR [esi]
  41e568:	mov    fs,WORD PTR [ecx+eax*4]
  41e56b:	push   esi
  41e56c:	int3   
  41e56d:	xchg   esp,eax
  41e56e:	ret    
  41e56f:	xchg   ecx,eax
  41e570:	cwde   
  41e571:	imul   esp,ebp,0x5f2c48f5
  41e577:	xchg   edx,eax
  41e578:	lahf   
  41e579:	jp     0x41e511
  41e57b:	lea    ebx,[ebp+eiz*1+0x7]
  41e57f:	sub    al,0xab
  41e581:	psllq  mm4,mm4
  41e584:	dec    ebx
  41e585:	stc    
  41e586:	cs (bad) 
  41e58a:	scas   eax,DWORD PTR es:[edi]
  41e58b:	mov    dh,0xe6
  41e58d:	jle    0x41e5c6
  41e58f:	xchg   edi,eax
  41e590:	mov    bl,0xa0
  41e592:	loop   0x41e5cf
  41e594:	out    dx,eax
  41e595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e596:	pop    esp
  41e597:	mov    WORD PTR [ebx],gs
  41e599:	mov    ecx,0x157ff1eb
  41e59e:	inc    ebx
  41e59f:	adc    al,0xca
  41e5a1:	cmp    al,0x8c
  41e5a3:	and    al,0xd7
  41e5a5:	xor    eax,0xaa2d4e8a
  41e5aa:	ret    
  41e5ab:	add    eax,0x1f819f02
  41e5b0:	add    cl,BYTE PTR [eax-0x73]
  41e5b3:	mov    ds:0x9fbc10e3,eax
  41e5b8:	or     dl,BYTE PTR [ecx]
  41e5ba:	gs call 0x5f35e3bd
  41e5c0:	pop    ebp
  41e5c1:	cmc    
  41e5c2:	lods   eax,DWORD PTR ds:[esi]
  41e5c3:	sbb    eax,0xc633845f
  41e5c8:	or     BYTE PTR ds:0x328ef6ba,0x6c
  41e5cf:	inc    ebp
  41e5d0:	dec    edi
  41e5d1:	ins    BYTE PTR es:[edi],dx
  41e5d2:	xor    al,0x17
  41e5d4:	inc    esi
  41e5d5:	pop    ss
  41e5d6:	scas   al,BYTE PTR es:[edi]
  41e5d7:	dec    ecx
  41e5d8:	inc    eax
  41e5d9:	gs adc eax,0x9c240ae3
  41e5df:	mov    bh,0x98
  41e5e1:	sub    dl,bl
  41e5e3:	xchg   ebx,eax
  41e5e4:	sub    eax,0x83c83f10
  41e5e9:	push   ebx
  41e5ea:	daa    
  41e5eb:	mov    al,ds:0xc7aa4bab
  41e5f0:	les    ebx,FWORD PTR [eax-0x18669372]
  41e5f6:	lock sub eax,0xcf8de46
  41e5fc:	rcr    dl,cl
  41e5fe:	ret    0xccb6
  41e601:	and    edx,esi
  41e603:	retf   0x2189
  41e606:	xchg   edi,eax
  41e607:	xchg   esi,eax
  41e608:	inc    ebx
  41e609:	mov    bh,0x64
  41e60b:	and    BYTE PTR [ebp+0x2d6187d7],dh
  41e611:	inc    eax
  41e612:	mov    esi,ebp
  41e614:	jmp    0xbfe0:0x6ef39efb
  41e61b:	dec    esp
  41e61c:	shl    esi,cl
  41e61e:	dec    eax
  41e61f:	add    BYTE PTR [edi+0x3b],cl
  41e622:	arpl   WORD PTR [ebx-0x7a],sp
  41e625:	ror    BYTE PTR [ebp-0xa17b988],1
  41e62b:	adc    al,0x5c
  41e62d:	jno    0x41e622
  41e62f:	sub    BYTE PTR [ecx+0x365834e3],0x20
  41e636:	add    al,BYTE PTR [ecx-0x11]
  41e639:	inc    edi
  41e63a:	mov    ds:0xb7b2f467,eax
  41e63f:	in     eax,0xe0
  41e641:	retf   0x406a
  41e644:	nop
  41e645:	out    dx,al
  41e646:	sti    
  41e647:	cmp    esp,0x5e
  41e64a:	dec    edx
  41e64b:	aam    0xbd
  41e64d:	mov    BYTE PTR [eax],dh
  41e64f:	iret   
  41e650:	xor    al,0x8f
  41e652:	test   al,0xa6
  41e654:	ror    DWORD PTR [ecx-0x4c],0xc
  41e658:	xor    BYTE PTR [ecx-0x50],dl
  41e65b:	sub    dh,BYTE PTR [ebp+0x751a0814]
  41e661:	fwait
  41e662:	sbb    bl,BYTE PTR [eax]
  41e664:	lahf   
  41e665:	pop    eax
  41e666:	not    ah
  41e668:	push   ss
  41e669:	test   ebx,0x509fbdee
  41e66f:	imul   esi
  41e671:	sbb    DWORD PTR [edx-0x43b02456],edx
  41e677:	sbb    DWORD PTR [esp+ecx*8],eax
  41e67a:	mov    cl,0x8a
  41e67c:	add    eax,0xb741cd8e
  41e681:	xor    bl,BYTE PTR [esp+ebp*1-0x44]
  41e685:	bound  ebp,QWORD PTR [ecx+0x3d]
  41e688:	and    eax,0x207e772e
  41e68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e68e:	retf   0x8967
  41e691:	add    esp,DWORD PTR [ecx]
  41e693:	inc    edx
  41e694:	in     al,dx
  41e695:	lds    edx,FWORD PTR [esp+edx*8-0x58]
  41e699:	mov    bl,0x0
  41e69b:	pop    ecx
  41e69c:	ds mov ebp,0x1eb7b852
  41e6a2:	xor    DWORD PTR [edx+0x2e],ebp
  41e6a5:	not    DWORD PTR [ebx]
  41e6a7:	mov    dl,0x48
  41e6a9:	je     0x41e675
  41e6ab:	jno    0x41e6bd
  41e6ad:	mov    dl,0x1d
  41e6af:	push   ds
  41e6b0:	xchg   ebp,eax
  41e6b1:	and    BYTE PTR [ecx],dl
  41e6b3:	dec    esi
  41e6b4:	inc    ebp
  41e6b5:	or     esp,0x72aa0122
  41e6bb:	xor    al,0x3f
  41e6be:	push   edx
  41e6bf:	mov    ch,0xf0
  41e6c1:	nop
  41e6c2:	(bad)  
  41e6c3:	jp     0x41e679
  41e6c5:	mov    eax,0x1b41b5c5
  41e6ca:	xor    eax,0xf0a6e62c
  41e6cf:	sbb    eax,0x2d596ffe
  41e6d4:	sbb    BYTE PTR [ecx],dh
  41e6d6:	sbb    cl,BYTE PTR [ecx]
  41e6d8:	repnz out 0x9d,eax
  41e6db:	push   esi
  41e6dc:	fbld   TBYTE PTR [esp+ecx*4]
  41e6df:	cli    
  41e6e0:	cmp    eax,DWORD PTR [ebx+0x70]
  41e6e3:	jae    0x41e75a
  41e6e5:	sbb    eax,0x3debaabf
  41e6ea:	dec    esp
  41e6eb:	cmp    edi,DWORD PTR [esi+0x22afb1c7]
  41e6f1:	cmp    DWORD PTR [edi-0x64d2af5f],ecx
  41e6f7:	clc    
  41e6f8:	and    DWORD PTR [edx-0x3f],edi
  41e6fb:	jb     0x41e75c
  41e6fd:	mov    eax,0xc9a15a08
  41e702:	jecxz  0x41e720
  41e704:	and    eax,0xde5ec79c
  41e709:	call   0x5b39:0x14f3935b
  41e710:	fst    DWORD PTR [eax+0x53]
  41e713:	jge    0x41e72d
  41e715:	call   FWORD PTR [edi]
  41e717:	jno    0x41e765
  41e719:	dec    ebx
  41e71a:	retf   
  41e71b:	(bad)  
  41e71c:	adc    al,0xae
  41e71e:	mov    dl,0xee
  41e720:	mov    cl,BYTE PTR [ebx-0x3158c956]
  41e726:	mov    eax,fs:0xef54e772
  41e72c:	pop    ds
  41e72d:	push   ds
  41e72e:	scas   al,BYTE PTR es:[edi]
  41e72f:	(bad)  
  41e731:	fst    QWORD PTR [esp+ebp*4-0x7ddba164]
  41e738:	xchg   ebx,eax
  41e739:	jne    0x41e795
  41e73b:	je     0x41e79e
  41e73d:	int3   
  41e73e:	pushf  
  41e73f:	fld    DWORD PTR [ebx-0x3d29d9f8]
  41e745:	cdq    
  41e746:	int    0xfe
  41e748:	adc    ebx,DWORD PTR [ebx+0x13719c9e]
  41e74e:	stc    
  41e74f:	mov    ch,0x8f
  41e751:	xor    eax,0xfef45aed
  41e756:	adc    cl,bh
  41e758:	arpl   WORD PTR [ebp-0x45],si
  41e75b:	jbe    0x41e72e
  41e75d:	and    BYTE PTR [ecx+eax*8+0x695dec03],cl
  41e764:	cld    
  41e765:	imul   esp,esp,0xf42ad800
  41e76b:	sub    eax,0xa9d63972
  41e770:	rcl    BYTE PTR [esi],0x65
  41e773:	jne    0x41e7ae
  41e775:	sub    eax,0x100533d7
  41e77a:	call   0x2fb0:0xa17b3ab
  41e781:	add    cl,dl
  41e783:	mov    al,0x8c
  41e785:	fwait
  41e786:	int3   
  41e787:	mov    bh,BYTE PTR [ebx+0x29]
  41e78a:	or     eax,0xd1426c96
  41e78f:	mov    ecx,0xe4148af1
  41e794:	aaa    
  41e795:	out    0xb0,al
  41e797:	jno    0x41e748
  41e799:	sub    ecx,DWORD PTR [ebp-0x63]
  41e79c:	sub    BYTE PTR [edi-0x27],ah
  41e79f:	shl    dl,0x9b
  41e7a2:	xor    eax,0xcf7da812
  41e7a7:	cld    
  41e7a8:	mov    ebp,ss
  41e7aa:	dec    ebx
  41e7ab:	xchg   edi,eax
  41e7ac:	out    dx,al
  41e7ad:	popa   
  41e7ae:	xor    al,0xbc
  41e7b0:	inc    ebx
  41e7b1:	cmp    ch,bl
  41e7b3:	inc    ebp
  41e7b4:	sbb    edi,DWORD PTR [eax-0x7c]
  41e7b7:	shl    DWORD PTR [ebp+0x4e],0x63
  41e7bb:	fisttp QWORD PTR [ebp+0x66]
  41e7be:	mov    edx,0x908c05b9
  41e7c3:	inc    edi
  41e7c4:	popa   
  41e7c5:	mov    eax,ds:0x70f9c43
  41e7ca:	sub    DWORD PTR [edi],edi
  41e7cc:	or     DWORD PTR gs:[eax-0x1a],ecx
  41e7d0:	nop
  41e7d1:	dec    ecx
  41e7d2:	outs   dx,DWORD PTR ds:[esi]
  41e7d3:	mov    esp,0x8a767968
  41e7d8:	cmp    ecx,edi
  41e7da:	jmp    0x41e804
  41e7dc:	inc    esp
  41e7dd:	loop   0x41e805
  41e7df:	push   ebx
  41e7e0:	inc    esi
  41e7e1:	inc    esi
  41e7e2:	test   BYTE PTR [esi-0x23],bl
  41e7e5:	loopne 0x41e84c
  41e7e7:	lock mov ah,0xf6
  41e7ea:	sbb    eax,0x816cf826
  41e7ef:	sbb    bh,BYTE PTR [ebx+ebp*2]
  41e7f2:	dec    esi
  41e7f3:	dec    ebx
  41e7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7f5:	int3   
  41e7f6:	mov    esi,0xc40d2515
  41e7fb:	mov    esp,0xaa6668f5
  41e800:	(bad)  
  41e801:	in     eax,dx
  41e802:	sbb    ebx,eax
  41e804:	sbb    ebp,DWORD PTR [edx+eiz*1]
  41e807:	ja     0x41e867
  41e809:	xchg   esp,eax
  41e80a:	push   edi
  41e80b:	shl    BYTE PTR [esi+0x3563b112],0xb5
  41e812:	pop    edx
  41e813:	adc    eax,0x59829d8a
  41e818:	mov    eax,ds:0x1876d312
  41e81d:	jmp    0x41e7fd
  41e81f:	cmp    al,0x28
  41e821:	lea    edx,[ebx]
  41e823:	mov    eax,ds:0xd84abbf1
  41e828:	gs es ss popf 
  41e82c:	mov    ch,0x56
  41e82e:	pop    esi
  41e82f:	rcr    ecx,0x84
  41e832:	jp     0x41e7c3
  41e834:	mov    dh,cl
  41e836:	jno    0x41e7cc
  41e838:	xchg   BYTE PTR [esp+esi*1-0x6108cc51],dh
  41e83f:	cli    
  41e840:	cmp    eax,0x1a6016e4
  41e845:	jbe    0x41e7d9
  41e847:	outs   dx,DWORD PTR ds:[esi]
  41e848:	stc    
  41e849:	or     al,0x6a
  41e84b:	jge    0x41e872
  41e84d:	xlat   BYTE PTR ds:[ebx]
  41e84e:	dec    eax
  41e84f:	call   0x63b3:0xfe400511
  41e856:	daa    
  41e857:	push   0xffffffff
  41e859:	pop    edi
  41e85a:	cmp    BYTE PTR ds:0x5e7ac66b,bh
  41e860:	cmp    ch,BYTE PTR [edi-0x4396d850]
  41e866:	data16 aas 
  41e868:	out    dx,eax
  41e869:	and    DWORD PTR [ebx],edi
  41e86b:	mov    ah,0xff
  41e86d:	push   0x1
  41e86f:	daa    
  41e870:	mov    bl,0x58
  41e872:	repz jg 0x41e8cc
  41e875:	fldenv [eax-0x60]
  41e878:	pop    es
  41e879:	cwde   
  41e87a:	cmp    BYTE PTR [ebx],bh
  41e87c:	mov    bh,0x70
  41e87e:	pop    ds
  41e87f:	mov    WORD PTR [edx],cs
  41e881:	mov    eax,ds:0xbf646b22
  41e886:	hlt    
  41e887:	jg     0x41e8ae
  41e889:	lahf   
  41e88a:	mov    bh,0xe3
  41e88c:	or     esp,esp
  41e88e:	adc    BYTE PTR [edx+0x4f91fa0f],ch
  41e894:	sti    
  41e895:	lahf   
  41e896:	cmp    al,0xcb
  41e898:	jb     0x41e878
  41e89a:	pop    es
  41e89b:	adc    dh,0x21
  41e89e:	mov    bh,0xf9
  41e8a0:	fstp   QWORD PTR [ebx-0x3f7d1a5]
  41e8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8a7:	push   edx
  41e8a8:	inc    ebx
  41e8a9:	inc    edx
  41e8aa:	push   0x53
  41e8ac:	ins    DWORD PTR es:[edi],dx
  41e8ad:	or     BYTE PTR [esi+edx*8],dl
  41e8b0:	mov    edx,0xa3790791
  41e8b5:	xor    al,0x62
  41e8b7:	bound  esp,QWORD PTR [ebx]
  41e8b9:	xor    dl,BYTE PTR ds:0xcff9a902
  41e8bf:	retf   0xed4a
  41e8c2:	sub    ch,dl
  41e8c4:	mov    ah,0x9f
  41e8c6:	fadd   QWORD PTR [eax+0x5339d820]
  41e8cc:	inc    eax
  41e8cd:	mov    ebp,DWORD PTR [esi-0x3efbc437]
  41e8d3:	mov    ds:0xfca09715,eax
  41e8d8:	call   0xdb1f6732
  41e8dd:	repz mov eax,ds:0x659f69c6
  41e8e3:	in     al,dx
  41e8e4:	pop    ebx
  41e8e5:	or     dl,BYTE PTR [edi+eax*2-0x15]
  41e8e9:	push   esp
  41e8ea:	call   0xf7ca2344
  41e8ef:	(bad)  
  41e8f0:	out    dx,eax
  41e8f1:	inc    esi
  41e8f2:	and    eax,0x4ab56b40
  41e8f7:	arpl   WORD PTR ds:0x9eb6b719,sp
  41e8fd:	dec    edi
  41e8fe:	loop   0x41e8db
  41e900:	mov    ds:0x4ed06192,al
  41e905:	imul   ecx,DWORD PTR [eax+0x31],0x27
  41e909:	add    DWORD PTR [esi],esp
  41e90b:	bound  esi,QWORD PTR [eax-0x4a6a78e8]
  41e911:	fbstp  TBYTE PTR [eax]
  41e913:	std    
  41e914:	fs leave 
  41e916:	add    BYTE PTR [ecx+ebp*4-0x3cedb468],dh
  41e91d:	sub    al,0x39
  41e91f:	in     eax,0xda
  41e921:	cmp    al,0x7
  41e923:	in     eax,0xa3
  41e925:	or     bh,BYTE PTR [eax+eax*1+0x4210bc09]
  41e92c:	and    edi,DWORD PTR [esi]
  41e92e:	out    dx,eax
  41e92f:	mov    ch,0x4
  41e931:	sbb    bl,cl
  41e933:	xchg   ecx,eax
  41e934:	push   ebp
  41e935:	fld    DWORD PTR [ecx+edx*2-0x78]
  41e939:	lods   al,BYTE PTR ds:[esi]
  41e93a:	aaa    
  41e93b:	pop    ebp
  41e93c:	iret   
  41e93d:	inc    esi
  41e93e:	icebp  
  41e93f:	mov    ah,0x54
  41e941:	cli    
  41e942:	leave  
  41e943:	clc    
  41e944:	pop    ebp
  41e945:	mov    cl,0x13
  41e947:	popa   
  41e948:	mov    eax,ds:0x5645b9d
  41e94d:	sbb    DWORD PTR [esi+ebx*4-0x6ad7df2f],eax
  41e954:	(bad)  
  41e955:	hlt    
  41e956:	jbe    0x41e8f9
  41e958:	dec    edx
  41e959:	cld    
  41e95a:	dec    esi
  41e95b:	xchg   esp,eax
  41e95c:	fistp  QWORD PTR [ebx+ebx*8-0x2b08be86]
  41e963:	(bad)  
  41e964:	out    0x7b,al
  41e966:	lds    ebp,FWORD PTR [ecx+0x6670add8]
  41e96c:	sbb    ch,bh
  41e96e:	inc    esp
  41e96f:	jbe    0x41e9e3
  41e971:	mov    ebp,0xf8edd0a1
  41e976:	jg     0x41e9ca
  41e978:	push   edi
  41e979:	sbb    BYTE PTR [esi+0x55],dl
  41e97c:	pop    ecx
  41e97d:	sub    bl,ch
  41e97f:	push   0x45
  41e981:	or     al,0xd1
  41e983:	inc    ebx
  41e984:	fadd   QWORD PTR [ecx]
  41e986:	test   BYTE PTR [edx],ch
  41e988:	mov    DWORD PTR [eax+0x4f296e51],esp
  41e98e:	fs pop eax
  41e990:	dec    ecx
  41e991:	scas   al,BYTE PTR es:[edi]
  41e992:	shl    DWORD PTR [ebx-0x1964eb0],1
  41e998:	nop
  41e999:	push   edx
  41e99a:	adc    eax,0x6015fff8
  41e99f:	add    dh,al
  41e9a1:	rcr    dh,cl
  41e9a3:	loope  0x41e971
  41e9a5:	cld    
  41e9a6:	test   al,0xc7
  41e9a8:	ror    BYTE PTR [ebx+esi*1-0x61cd3099],0x44
  41e9b0:	pop    ebx
  41e9b1:	push   cs
  41e9b2:	inc    edx
  41e9b3:	sub    DWORD PTR [eax+0x26057aa8],edx
  41e9b9:	add    dl,BYTE PTR [ecx+0x67dccf97]
  41e9bf:	in     eax,dx
  41e9c0:	js     0x41ea0b
  41e9c2:	imul   eax,edi,0x140079b1
  41e9c8:	call   0x20b2:0x1a4944f8
  41e9cf:	(bad)  
  41e9d0:	cmp    DWORD PTR [ecx],edx
  41e9d2:	dec    ebp
  41e9d3:	mov    dh,0x57
  41e9d5:	jbe    0x41e95b
  41e9d7:	inc    esi
  41e9d8:	shl    BYTE PTR [edi+ecx*4],cl
  41e9db:	loopne 0x41ea1d
  41e9dd:	and    DWORD PTR [ebx-0x6919ba9e],0xe32afa3a
  41e9e7:	test   DWORD PTR [ebx-0x7],edx
  41e9ea:	rol    BYTE PTR [ebx],0x55
  41e9ed:	jne    0x41e991
  41e9ef:	jmp    0x41ea65
  41e9f1:	xchg   ecx,eax
  41e9f2:	rol    DWORD PTR [edx-0x2f],0x25
  41e9f6:	hlt    
  41e9f7:	sar    BYTE PTR [eax+ebp*2],1
  41e9fa:	pusha  
  41e9fb:	mov    DWORD PTR [ecx-0x60fd0a06],esi
  41ea01:	imul   esp,DWORD PTR [esi-0x36bde666],0x60
  41ea08:	shr    DWORD PTR [edi+0x76],0x95
  41ea0c:	xchg   bh,cl
  41ea0e:	repz jae 0x41e9e1
  41ea11:	mov    al,0x34
  41ea13:	push   ebx
  41ea14:	imul   edx,DWORD PTR [ebp-0x3f],0x66c37948
  41ea1b:	in     eax,0xa2
  41ea1d:	push   esp
  41ea1e:	mov    DWORD PTR ds:0xb8270bb2,eax
  41ea24:	cmp    esp,DWORD PTR [esi]
  41ea26:	fst    QWORD PTR ss:[eax]
  41ea29:	jb     0x41ea85
  41ea2b:	in     eax,0xdd
  41ea2d:	gs jb  0x41ea3b
  41ea30:	dec    ecx
  41ea31:	inc    eax
  41ea32:	fdivr  QWORD PTR [di]
  41ea35:	or     eax,0xc1b7b6b8
  41ea3a:	jmp    0x41ea6e
  41ea3c:	xchg   BYTE PTR [ebx-0x62],cl
  41ea3f:	rcl    BYTE PTR [edx+0x6f5eca84],0xfb
  41ea46:	sbb    ecx,ecx
  41ea48:	aad    0xe3
  41ea4a:	xor    al,0x17
  41ea4c:	loope  0x41e9d3
  41ea4e:	mov    edx,DWORD PTR [ecx+0x44]
  41ea51:	jge    0x41ea1c
  41ea53:	push   0x42d2e6e1
  41ea58:	or     DWORD PTR [ebx+0x55],0x59261ac2
  41ea5f:	out    dx,al
  41ea60:	rcr    ebx,1
  41ea62:	fs mov esp,0x869bb932
  41ea68:	inc    edi
  41ea69:	in     al,0xc7
  41ea6b:	add    BYTE PTR [ebp-0x39],cl
  41ea6e:	es cs add eax,0xfb984835
  41ea75:	mov    DWORD PTR ds:0x31c42542,esp
  41ea7b:	xchg   edx,eax
  41ea7c:	imul   esi,edx,0xffffffd7
  41ea7f:	mov    bl,0xea
  41ea81:	and    edi,eax
  41ea83:	sbb    eax,0xd3db3bc1
  41ea88:	test   al,bl
  41ea8a:	hlt    
  41ea8b:	pop    esp
  41ea8c:	or     ah,BYTE PTR [ebx+edi*2]
  41ea8f:	aaa    
  41ea90:	shl    dh,1
  41ea92:	add    al,0xac
  41ea94:	jge    0x41ea95
  41ea96:	xor    al,BYTE PTR [ecx]
  41ea98:	and    eax,0x3d1ce6b2
  41ea9d:	ror    BYTE PTR [edi],cl
  41ea9f:	stos   BYTE PTR es:[edi],al
  41eaa0:	sub    ah,BYTE PTR [edx+eiz*4-0x3f4f2e4b]
  41eaa7:	arpl   WORD PTR [edx+edi*4-0x7f],cx
  41eaab:	or     ah,BYTE PTR [edx+0xf40fd11]
  41eab1:	mov    bh,0x57
  41eab3:	adc    eax,0xdca0057d
  41eab8:	loopne 0x41ea81
  41eaba:	(bad)  
  41eabb:	js     0x41eae4
  41eabd:	push   edx
  41eabe:	pop    eax
  41eabf:	minps  xmm0,xmm7
  41eac2:	xor    ah,bl
  41eac4:	leave  
  41eac5:	dec    ebp
  41eac6:	xor    eax,0xd1125034
  41eacb:	xchg   edx,eax
  41eacc:	daa    
  41eacd:	inc    esi
  41eace:	fild   DWORD PTR [edi]
  41ead0:	dec    ebp
  41ead1:	mov    cl,BYTE PTR [edi-0x5e]
  41ead4:	adc    bl,BYTE PTR [edx+0x1c]
  41ead7:	out    dx,al
  41ead8:	(bad)  
  41ead9:	enter  0x899f,0x8e
  41eadd:	imul   ebx,DWORD PTR [eax],0xb899b08d
  41eae3:	dec    BYTE PTR [ecx+0x49]
  41eae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae7:	inc    edi
  41eae8:	jae    0x41eb28
  41eaea:	push   edx
  41eaeb:	scas   al,BYTE PTR es:[edi]
  41eaec:	stos   BYTE PTR es:[edi],al
  41eaed:	xchg   ebp,eax
  41eaee:	sbb    BYTE PTR [ecx-0x40338810],cl
  41eaf4:	sbb    bl,dl
  41eaf6:	out    dx,eax
  41eaf7:	mov    edx,0xe43d57ec
  41eafc:	jp     0x41eac5
  41eafe:	adc    BYTE PTR [edx],cl
  41eb00:	enter  0x4735,0x3b
  41eb04:	mov    ebx,esi
  41eb06:	pop    ebp
  41eb07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb08:	xor    edx,DWORD PTR cs:[esi+0x39]
  41eb0c:	fldenv [ebx+ecx*8]
  41eb0f:	out    dx,al
  41eb10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb11:	xlat   BYTE PTR ds:[ebx]
  41eb12:	add    DWORD PTR [esi],ebp
  41eb14:	cdq    
  41eb15:	jb     0x41eb6d
  41eb17:	in     al,0xf8
  41eb19:	mov    BYTE PTR [ecx+edi*1+0x4c],bh
  41eb1d:	adc    eax,0xbbacece2
  41eb22:	mov    ebx,0x9b227a38
  41eb27:	cmp    eax,0x9f03729a
  41eb2c:	sbb    dh,BYTE PTR [esp+edi*8-0x3]
  41eb30:	or     ecx,esp
  41eb32:	sub    eax,0x7bbebf41
  41eb37:	jnp    0x41eb3d
  41eb39:	arpl   WORD PTR [esi+edi*2-0x7],di
  41eb3d:	pusha  
  41eb3e:	lahf   
  41eb3f:	mov    al,0xc
  41eb41:	adc    BYTE PTR [edx+ebp*1],ah
  41eb44:	xchg   esp,eax
  41eb45:	dec    eax
  41eb46:	or     BYTE PTR [edi-0x14],cl
  41eb49:	push   edi
  41eb4a:	lods   eax,DWORD PTR ds:[esi]
  41eb4b:	mov    eax,fs:0xf307762b
  41eb51:	jl     0x41eb8e
  41eb53:	or     ah,BYTE PTR [edi]
  41eb55:	cmp    al,0x61
  41eb57:	adc    edi,DWORD PTR ds:0xd58c52dd
  41eb5d:	xchg   esp,eax
  41eb5e:	rcr    BYTE PTR [edi],1
  41eb60:	lahf   
  41eb61:	(bad)  
  41eb62:	int3   
  41eb63:	(bad)  
  41eb64:	sbb    dh,BYTE PTR [ebx-0x1d]
  41eb67:	mov    ebp,0x41538bd5
  41eb6c:	sbb    DWORD PTR [esi],ecx
  41eb6e:	push   ds
  41eb6f:	add    ebp,DWORD PTR [edi]
  41eb71:	stos   DWORD PTR es:[edi],eax
  41eb72:	je     0x41eb17
  41eb74:	in     eax,0x35
  41eb76:	dec    esp
  41eb77:	(bad)  
  41eb78:	imul   edi,DWORD PTR [ebx+edi*4+0xa],0xffffffa0
  41eb7d:	and    eax,0xd6fc3857
  41eb82:	dec    ebp
  41eb83:	pop    edx
  41eb84:	(bad)  
  41eb85:	jecxz  0x41eb9e
  41eb87:	adc    DWORD PTR [ebp-0x4b4a4f89],0xc11e2fa9
  41eb91:	(bad)  
  41eb92:	xchg   esi,eax
  41eb93:	push   es
  41eb94:	dec    esp
  41eb95:	mov    ch,0x1a
  41eb97:	or     al,BYTE PTR fs:[eax-0x5061b302]
  41eb9e:	xor    bl,BYTE PTR [ebx-0xf]
  41eba1:	xlat   BYTE PTR ds:[bx]
  41eba3:	xor    DWORD PTR [edi+0x6b],edi
  41eba6:	push   esi
  41eba7:	call   0xc3403559
  41ebac:	cdq    
  41ebad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebae:	std    
  41ebaf:	cdq    
  41ebb0:	sub    cl,BYTE PTR [ebp+ecx*4+0x500e6fc]
  41ebb7:	push   0x4c75e7e4
  41ebbc:	adc    DWORD PTR [ebx+0x68],esp
  41ebbf:	adc    BYTE PTR [edi-0x18],dh
  41ebc2:	mov    ds:0x763b2849,eax
  41ebc7:	mov    al,al
  41ebc9:	adc    cl,BYTE PTR [edx+0x4c]
  41ebcc:	add    esi,edi
  41ebce:	(bad)  
  41ebcf:	neg    BYTE PTR [esi+edi*4]
  41ebd2:	ja     0x41ec30
  41ebd4:	call   0xc856:0x695d00ed
  41ebdb:	(bad)  
  41ebdc:	das    
  41ebdd:	fisub  WORD PTR [edi]
  41ebdf:	sar    eax,cl
  41ebe1:	xchg   edx,eax
  41ebe2:	mov    eax,ds:0x479d5ebc
  41ebe7:	xor    al,0x59
  41ebe9:	loop   0x41eb97
  41ebeb:	or     DWORD PTR fs:[ebx],ebp
  41ebee:	lock dec esi
  41ebf0:	pop    ds
  41ebf1:	int3   
  41ebf2:	call   0xc0d6:0x85358da
  41ebf9:	cld    
  41ebfa:	push   es
  41ebfb:	jb     0x41ec25
  41ebfd:	pop    ss
  41ebfe:	pop    esi
  41ebff:	mov    WORD PTR ds:0x28ed7a57,es
  41ec05:	push   0xffffffdf
  41ec07:	sbb    esi,eax
  41ec09:	cmp    BYTE PTR [eax+0x68],al
  41ec0c:	in     eax,dx
  41ec0d:	fcom   QWORD PTR [eax+0x3b]
  41ec10:	dec    ecx
  41ec11:	mov    eax,0xfcb69135
  41ec16:	inc    ecx
  41ec17:	or     eax,0x877fac3f
  41ec1c:	mov    dh,0x51
  41ec1e:	pop    ecx
  41ec1f:	dec    ebp
  41ec20:	clts   
  41ec22:	jecxz  0x41ebc6
  41ec24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec25:	ss loop 0x41ebbf
  41ec28:	(bad)  
  41ec29:	mov    ah,0xf9
  41ec2b:	mov    ebx,0x75da239f
  41ec30:	sbb    DWORD PTR [edx-0x22],ebp
  41ec33:	jne    0x41ebf0
  41ec35:	jl     0x41ec92
  41ec37:	inc    edi
  41ec38:	ret    0x40ab
  41ec3b:	test   eax,0x9c3cb389
  41ec40:	push   eax
  41ec41:	or     eax,0xb8b2a869
  41ec46:	int    0xdc
  41ec48:	xor    bh,BYTE PTR [ecx-0x5a]
  41ec4b:	adc    DWORD PTR [ebp-0x2d],edx
  41ec4e:	daa    
  41ec4f:	mov    ah,BYTE PTR [edi+ebp*1]
  41ec52:	ins    BYTE PTR es:[edi],dx
  41ec53:	xchg   edi,eax
  41ec54:	sbb    bh,BYTE PTR [ebx-0x4d]
  41ec57:	push   edi
  41ec58:	dec    eax
  41ec59:	loop   0x41ec2c
  41ec5b:	dec    ebx
  41ec5c:	lds    esi,FWORD PTR [esi+esi*2-0x63a4394e]
  41ec63:	push   ecx
  41ec64:	(bad)  
  41ec65:	mov    dh,0x79
  41ec67:	mov    eax,ds:0x418aeb3d
  41ec6c:	or     edi,DWORD PTR [edi+edi*8]
  41ec6f:	dec    ecx
  41ec70:	neg    BYTE PTR [ebx-0x32]
  41ec73:	push   ds
  41ec74:	or     bh,BYTE PTR [ecx+0x7f3bf293]
  41ec7a:	leave  
  41ec7b:	fild   DWORD PTR [eax*8-0x4c1ce0c6]
  41ec82:	fadd   DWORD PTR [edx-0xc824676]
  41ec88:	mov    ds:0x45970624,al
  41ec8d:	xlat   BYTE PTR ds:[ebx]
  41ec8e:	add    BYTE PTR [ecx-0x78],0xd
  41ec92:	iret   
  41ec93:	test   al,0x46
  41ec95:	sub    ah,BYTE PTR [ebx+edi*2-0x68e07a13]
  41ec9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec9d:	mov    ecx,0x77fff6c
  41eca2:	and    ecx,DWORD PTR ds:0x82990cf1
  41eca8:	xor    BYTE PTR [esi],0x9c
  41ecab:	ins    DWORD PTR es:[edi],dx
  41ecac:	jb     0x41ec47
  41ecae:	loop   0x41ecda
  41ecb0:	icebp  
  41ecb1:	nop
  41ecb2:	mov    esp,0x90913601
  41ecb7:	pop    esp
  41ecb8:	loop   0x41ec52
  41ecba:	or     cl,BYTE PTR [esi]
  41ecbc:	jo     0x41ed34
  41ecbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecbf:	jmp    0x41ed34
  41ecc1:	adc    DWORD PTR [ebx],esi
  41ecc3:	pop    ds
  41ecc4:	mov    ebx,0x3021b21a
  41ecc9:	imul   esi,DWORD PTR [edi],0x7d
  41eccc:	fisttp QWORD PTR [edi-0x5f010220]
  41ecd2:	enter  0x3825,0x54
  41ecd6:	ret    0xa7bd
  41ecd9:	sahf   
  41ecda:	cmc    
  41ecdb:	inc    ch
  41ecdd:	mov    al,0xaf
  41ecdf:	xchg   ebp,eax
  41ece0:	jecxz  0x41ed1c
  41ece2:	sbb    BYTE PTR [ecx+0x672eb917],cl
  41ece8:	cmp    ah,BYTE PTR [edi+0x1d0cf062]
  41ecee:	call   DWORD PTR [ebx+0x7208dd7]
  41ecf4:	xor    BYTE PTR [edx],cl
  41ecf6:	sar    bh,1
  41ecf8:	stos   BYTE PTR es:[edi],al
  41ecf9:	mov    eax,ds:0x85a8f991
  41ecfe:	pusha  
  41ecff:	data16 fucomip st,st(6)
  41ed02:	test   al,0x13
  41ed04:	gs (bad) 
  41ed06:	cld    
  41ed07:	pop    edx
  41ed08:	xchg   ah,dl
  41ed0a:	cmp    cl,BYTE PTR [esi]
  41ed0c:	jno    0x41ed64
  41ed0e:	jne    0x41ecca
  41ed10:	mov    edi,0xc5548ecf
  41ed15:	cdq    
  41ed16:	fwait
  41ed17:	inc    ebx
  41ed18:	shr    BYTE PTR [ecx+ebx*4],0xcd
  41ed1c:	inc    eax
  41ed1d:	xor    DWORD PTR [edi],edi
  41ed1f:	pop    esi
  41ed20:	pusha  
  41ed21:	mov    esp,0x43d847d8
  41ed26:	into   
  41ed27:	or     eax,0xf43159b3
  41ed2c:	out    dx,al
  41ed2d:	xchg   BYTE PTR [esi+0x11],dl
  41ed30:	mov    eax,ds:0x2ef846fd
  41ed35:	pop    ebx
  41ed36:	mov    al,0x19
  41ed38:	push   0xfffffff7
  41ed3a:	loop   0x41eccb
  41ed3c:	jnp    0x41ed86
  41ed3e:	popa   
  41ed3f:	jmp    0x43a73a43
  41ed44:	sbb    edx,DWORD PTR [ebx+0x5a0b12e2]
  41ed4a:	inc    edx
  41ed4b:	stos   DWORD PTR es:[edi],eax
  41ed4c:	dec    eax
  41ed4d:	mov    al,0x82
  41ed4f:	jns    0x41ed54
  41ed51:	inc    ebx
  41ed52:	push   ss
  41ed53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed54:	ds mov edx,0xf1af3e17
  41ed5a:	jae    0x41edb2
  41ed5c:	adc    eax,0xf653d86c
  41ed61:	ja     0x41ecea
  41ed63:	pop    esi
  41ed64:	imul   ebx,edi,0x4fc5ddb
  41ed6a:	call   0xd4ba0f99
  41ed6f:	xlat   BYTE PTR ds:[ebx]
  41ed70:	enter  0x57a1,0x15
  41ed74:	sbb    DWORD PTR [ebx],esp
  41ed76:	push   esi
  41ed77:	and    eax,0xe0a91ed5
  41ed7c:	mov    dh,0xcd
  41ed7e:	jae    0x41ed35
  41ed80:	(bad)  
  41ed81:	cld    
  41ed82:	xchg   ebx,eax
  41ed83:	ret    
  41ed84:	unpcklps xmm6,XMMWORD PTR [edi+0x5d]
  41ed88:	xchg   edx,eax
  41ed89:	mov    dl,BYTE PTR [ebx+eax*2+0x42a8ded3]
  41ed90:	test   BYTE PTR [ebp+0x6a],bl
  41ed93:	out    0xe,eax
  41ed95:	shl    ebx,0x2e
  41ed98:	sbb    edx,DWORD PTR [edx-0x53]
  41ed9b:	icebp  
  41ed9c:	and    al,0x7d
  41ed9e:	and    edx,esi
  41eda0:	ins    DWORD PTR es:[edi],dx
  41eda1:	sti    
  41eda2:	aas    
  41eda3:	call   0x867d:0x16010bd8
  41edaa:	adc    BYTE PTR [esi+ecx*1],dh
  41edad:	push   cs
  41edae:	iret   
  41edaf:	jne    0x41ee20
  41edb1:	or     BYTE PTR [ecx*4-0x1a520149],ah
  41edb8:	pop    esp
  41edb9:	push   ss
  41edba:	fbld   TBYTE PTR [ebx-0x5d]
  41edbd:	push   es
  41edbe:	adc    al,0x94
  41edc0:	(bad)  
  41edc1:	pop    ecx
  41edc2:	out    dx,al
  41edc3:	and    DWORD PTR [ebp+0x78],esp
  41edc6:	int    0x21
  41edc8:	sar    BYTE PTR [ecx-0x6cf535fc],0xc1
  41edcf:	es sbb al,0x62
  41edd2:	int    0xd4
  41edd4:	sar    ch,cl
  41edd6:	or     ah,ah
  41edd8:	and    bh,BYTE PTR [ebx]
  41edda:	aas    
  41eddb:	popf   
  41eddc:	int    0xf
  41edde:	mov    ds:0x198b782d,eax
  41ede3:	rcl    DWORD PTR [bx+si-0x6e1a],1
  41ede8:	ds mov esp,0xc03595aa
  41edee:	enter  0xd3df,0xe9
  41edf2:	ss adc eax,0x771af9a2
  41edf8:	mov    eax,0xed5edf90
  41edfd:	and    eax,0x5fe52514
  41ee02:	sar    DWORD PTR [ebp+0x2e9296fa],cl
  41ee08:	out    0x51,al
  41ee0a:	je     0x41edaf
  41ee0c:	rcr    BYTE PTR [esi+0x2ec8ead4],0xe4
  41ee13:	out    0x3f,eax
  41ee15:	loop   0x41ee4b
  41ee17:	and    BYTE PTR [edx-0x25],cl
  41ee1a:	loopne 0x41ede5
  41ee1c:	mov    edi,0x8bf37c04
  41ee21:	pop    ebx
  41ee22:	cs mov edi,0x8b500898
  41ee28:	xchg   BYTE PTR es:[ecx+0x2da985db],dl
  41ee2f:	pop    ds
  41ee30:	xor    DWORD PTR [ebp-0xb5e0ab],edx
  41ee36:	pop    ebp
  41ee37:	xlat   BYTE PTR ds:[ebx]
  41ee38:	arpl   WORD PTR [edx+0x2e],si
  41ee3b:	and    DWORD PTR [edi],ecx
  41ee3d:	fs cld 
  41ee3f:	(bad)  [ecx+0x548bfa9e]
  41ee45:	out    0x25,eax
  41ee47:	sub    esp,0x3a2d0df1
  41ee4d:	or     DWORD PTR [ecx+eax*2],edx
  41ee50:	cmp    eax,0xd9f1e632
  41ee55:	sub    ah,BYTE PTR [ecx]
  41ee57:	sbb    dh,al
  41ee59:	jmp    0x41ee8c
  41ee5b:	inc    edi
  41ee5c:	aam    0x53
  41ee5e:	int3   
  41ee5f:	and    BYTE PTR [edi+0x78d2478c],ah
  41ee65:	xlat   BYTE PTR ds:[ebx]
  41ee66:	inc    dh
  41ee68:	push   es
  41ee69:	in     al,dx
  41ee6a:	and    ebp,0xffffffa6
  41ee6d:	jo     0x41ee5b
  41ee6f:	push   ecx
  41ee70:	fst    QWORD PTR [ebx+esi*8+0x7f97b1fe]
  41ee77:	jnp    0x41ee34
  41ee79:	inc    ecx
  41ee7a:	arpl   WORD PTR [ecx-0x1de57bde],bx
  41ee80:	jmp    0xe7f0cda0
  41ee85:	lds    edx,FWORD PTR [ebp+0x6d]
  41ee88:	(bad)  
  41ee8a:	outs   dx,BYTE PTR ds:[esi]
  41ee8b:	pop    ecx
  41ee8c:	sbb    esp,DWORD PTR [ebp-0x59]
  41ee8f:	dec    edx
  41ee90:	pop    ecx
  41ee91:	ds in  al,0xe8
  41ee94:	xchg   edi,eax
  41ee95:	out    dx,al
  41ee96:	inc    esp
  41ee97:	mov    eax,0x49da0c43
  41ee9c:	pop    edx
  41ee9d:	lea    ebp,[ebx-0x13543d43]
  41eea3:	pop    edi
  41eea4:	mov    bl,0xd7
  41eea6:	sti    
  41eea7:	inc    edx
  41eea8:	pop    es
  41eea9:	fidiv  WORD PTR [ebx]
  41eeab:	jmp    0xfff77a79
  41eeb0:	and    DWORD PTR [ebx],edi
  41eeb2:	mov    bl,dl
  41eeb4:	imul   ecx,esi,0x6d
  41eeb7:	mov    ds:0xcbb5f8d9,eax
  41eebd:	xchg   edi,eax
  41eebe:	aad    0xdd
  41eec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eec1:	sub    al,0x45
  41eec3:	pop    esp
  41eec4:	and    al,0xa1
  41eec6:	sub    al,0xdd
  41eec8:	cmp    BYTE PTR [eax],0x40
  41eecb:	xchg   edi,eax
  41eecc:	out    dx,eax
  41eecd:	sbb    al,0xe9
  41eecf:	sub    edi,edx
  41eed1:	ret    
  41eed2:	lds    ebp,FWORD PTR [edx]
  41eed4:	icebp  
  41eed5:	pop    ebx
  41eed6:	mov    BYTE PTR [edi-0x28ced68b],bl
  41eedc:	cs jg  0x41ee9d
  41eedf:	and    eax,0xcf1e8f72
  41eee4:	xor    esp,DWORD PTR [eax+0x784a51d8]
  41eeea:	jmp    0x2b501f01
  41eeef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eef0:	call   0x5df2:0xe86ca2a1
  41eef7:	adc    ebp,edx
  41eef9:	retf   0x835d
  41eefc:	dec    ebp
  41eefd:	dec    ebp
  41eefe:	shr    DWORD PTR [esp+esi*2],1
  41ef01:	xchg   cx,ax
  41ef03:	mov    bl,0x25
  41ef05:	lock or ch,BYTE PTR [ecx]
  41ef08:	push   ebx
  41ef09:	dec    ebx
  41ef0a:	cmp    eax,0x6d4f66e8
  41ef0f:	push   es
  41ef10:	(bad)
  41ef14:	adc    cl,BYTE PTR [edi+ebx*1+0x3bffae3]
  41ef1b:	dec    ebp
  41ef1c:	les    esp,FWORD PTR [edi+0x92e60fb]
  41ef22:	cmp    al,0x9d
  41ef24:	mov    ecx,0x8861b509
  41ef29:	imul   esp,DWORD PTR [ecx-0xb],0xc5e95c21
  41ef30:	pop    es
  41ef31:	test   ah,dh
  41ef33:	mov    eax,ds:0x9f5e912c
  41ef38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef39:	in     eax,0xf
  41ef3b:	push   ebx
  41ef3c:	rol    BYTE PTR [edx],0xb7
  41ef3f:	test   esi,ebp
  41ef41:	and    DWORD PTR [edx],ebp
  41ef43:	inc    eax
  41ef44:	shl    dl,cl
  41ef46:	add    ch,ah
  41ef48:	pushf  
  41ef49:	ret    
  41ef4a:	pop    ss
  41ef4b:	retf   0xfaf2
  41ef4e:	loopne 0x41efb6
  41ef50:	inc    ebx
  41ef51:	inc    eax
  41ef52:	sti    
  41ef53:	xchg   edi,eax
  41ef54:	inc    esi
  41ef55:	mov    ah,0x8
  41ef57:	mov    BYTE PTR [esi+0x358866db],ah
  41ef5d:	fdiv   st,st(0)
  41ef5f:	jno    0x41efc2
  41ef61:	mov    BYTE PTR [ebx],ch
  41ef63:	add    DWORD PTR [esi],esp
  41ef65:	xchg   BYTE PTR [edx+0x4a],ch
  41ef68:	ins    DWORD PTR es:[edi],dx
  41ef69:	push   cs
  41ef6a:	sahf   
  41ef6b:	xchg   BYTE PTR [ecx-0x270fe388],al
  41ef71:	(bad)  
  41ef72:	std    
  41ef73:	(bad)  
  41ef74:	outs   dx,DWORD PTR ds:[esi]
  41ef75:	sub    al,0xbd
  41ef77:	inc    edx
  41ef78:	and    eax,DWORD PTR [ebx+0x6b]
  41ef7b:	cmp    BYTE PTR [eax-0x52494852],bh
  41ef81:	jecxz  0x41efee
  41ef83:	(bad)  
  41ef84:	xor    dh,ah
  41ef86:	or     eax,0x6a0bf3f3
  41ef8b:	not    ecx
  41ef8d:	add    al,0x1e
  41ef8f:	dec    eax
  41ef90:	(bad)  
  41ef91:	hlt    
  41ef92:	rol    dh,cl
  41ef94:	addr16 retf 
  41ef96:	aam    0xcd
  41ef98:	lahf   
  41ef99:	in     eax,dx
  41ef9a:	push   cs
  41ef9b:	and    ah,bh
  41ef9d:	test   DWORD PTR [ecx],esi
  41ef9f:	shr    BYTE PTR [ecx],cl
  41efa1:	push   ecx
  41efa2:	in     al,dx
  41efa3:	jle    0x41f005
  41efa5:	dec    esp
  41efa6:	adc    eax,0xd8ed76c9
  41efab:	shr    DWORD PTR [eax-0x1c439d29],0x10
  41efb2:	add    al,0x61
  41efb4:	sub    BYTE PTR [edi-0x350b6f4d],bh
  41efba:	or     esi,esp
  41efbc:	sub    eax,0x1988cbe4
  41efc1:	in     al,0x8
  41efc3:	mov    BYTE PTR [edi-0x15],bh
  41efc6:	xchg   BYTE PTR [edx],ah
  41efc8:	push   ebx
  41efc9:	inc    edx
  41efca:	cdq    
  41efcb:	in     eax,0x5b
  41efcd:	fst    QWORD PTR [edx+0xf1c2bd8]
  41efd3:	pusha  
  41efd4:	scas   al,BYTE PTR es:[edi]
  41efd5:	pop    ebp
  41efd6:	cmp    eax,0x291de402
  41efdb:	rcl    dh,1
  41efdd:	sbb    eax,0xaafbe397
  41efe2:	sbb    BYTE PTR [edi],dl
  41efe4:	shl    cl,cl
  41efe6:	sbb    DWORD PTR [ecx+0x65],ebp
  41efe9:	sbb    eax,0xca64978d
  41efee:	rcr    DWORD PTR [esi+ebx*1+0x3],cl
  41eff2:	push   ss
  41eff3:	xchg   BYTE PTR [edx+0x320af80c],al
  41eff9:	dec    ecx
  41effa:	mov    al,0x7e
  41effc:	jecxz  0x41f002
  41effe:	inc    edx
  41efff:	lea    esp,[edi]
  41f001:	cmp    DWORD PTR [eax],ebx
  41f003:	fcom   DWORD PTR [ecx]
  41f005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f006:	ror    DWORD PTR [ecx-0xf],cl
  41f009:	repnz xor BYTE PTR [eax-0x19],cl
  41f00d:	or     al,BYTE PTR ds:0x4e25c8a8
  41f013:	mov    edx,0x510c49da
  41f018:	pop    ss
  41f019:	sbb    al,0xdc
  41f01b:	pop    edi
  41f01c:	add    BYTE PTR [ebp+0x70],0x2d
  41f020:	push   esp
  41f021:	sub    edi,esi
  41f023:	push   es
  41f024:	and    eax,0x800c9ed9
  41f029:	push   eax
  41f02a:	pop    DWORD PTR [edx+0x2c]
  41f02d:	pusha  
  41f02e:	and    edi,DWORD PTR [ebp+0x3f29229e]
  41f034:	sub    DWORD PTR [edx-0x31],esp
  41f037:	bound  edx,QWORD PTR ds:0x361dc118
  41f03d:	mov    esp,0xc56b5ff6
  41f042:	sub    eax,0x794fdf6a
  41f047:	mov    ah,0x63
  41f049:	inc    edi
  41f04a:	mov    dh,0x5e
  41f04c:	lock xor eax,0x36491286
  41f052:	jmp    0x915aa89d
  41f057:	mov    ch,cl
  41f059:	dec    ecx
  41f05a:	sbb    eax,0xa3aaf7b1
  41f05f:	mov    edx,0x97f45f02
  41f064:	fwait
  41f065:	scas   eax,DWORD PTR es:[edi]
  41f066:	dec    ebx
  41f067:	int    0x0
  41f069:	jae    0x6d54a0ba
  41f06f:	inc    esp
  41f070:	ins    DWORD PTR es:[edi],dx
  41f071:	jnp    0x41f085
  41f073:	bnd jge 0x41f026
  41f076:	outs   dx,BYTE PTR fs:[esi]
  41f078:	cwde   
  41f079:	pop    esi
  41f07a:	iret   
  41f07b:	retf   
  41f07c:	or     al,0x33
  41f07e:	inc    esp
  41f07f:	xor    BYTE PTR [ebx+0x6e],bh
  41f082:	aad    0xef
  41f084:	dec    ecx
  41f085:	jns    0x41f014
  41f087:	mov    bl,0xe0
  41f089:	and    DWORD PTR [eax+0x34],eax
  41f08c:	outs   dx,BYTE PTR ds:[esi]
  41f08d:	cmc    
  41f08e:	sar    DWORD PTR [esp+edi*2+0x30],cl
  41f092:	push   0xffffff9d
  41f094:	xchg   edi,eax
  41f095:	sub    bh,bh
  41f097:	add    eax,0xa2426d80
  41f09c:	push   esi
  41f09d:	push   ecx
  41f09e:	daa    
  41f09f:	sti    
  41f0a0:	push   0x2
  41f0a2:	mov    al,0xf1
  41f0a4:	dec    ebx
  41f0a5:	ror    BYTE PTR [ebp+0x185435ba],1
  41f0ab:	add    eax,0x1d5d91ae
  41f0b0:	cli    
  41f0b1:	adc    DWORD PTR [ecx-0x2e],0x5ca7ecb2
  41f0b8:	cwde   
  41f0b9:	aad    0xaf
  41f0bb:	aas    
  41f0bc:	push   ss
  41f0bd:	ins    BYTE PTR es:[edi],dx
  41f0be:	sub    ah,BYTE PTR [ebx+0x18fa588d]
  41f0c4:	lea    ebx,[ebx+eax*8+0x23]
  41f0c8:	mov    ch,0xc0
  41f0ca:	stc    
  41f0cb:	pop    ecx
  41f0cc:	pusha  
  41f0cd:	sub    DWORD PTR [esp+eax*1+0x56],ebp
  41f0d1:	mov    dh,0x44
  41f0d3:	and    dh,BYTE PTR [ecx]
  41f0d5:	sub    dl,BYTE PTR [esi]
  41f0d7:	cs xchg edi,eax
  41f0d9:	mov    dh,0x3e
  41f0db:	dec    esp
  41f0dc:	mov    ah,0x91
  41f0de:	dec    esi
  41f0df:	add    al,0xb4
  41f0e1:	jmp    0xa216:0x7a1a2f87
  41f0e8:	xor    al,BYTE PTR [eax-0x9a5c310]
  41f0ee:	pop    edx
  41f0ef:	xchg   ebx,eax
  41f0f0:	jg     0x41f12b
  41f0f2:	xchg   ebx,eax
  41f0f3:	adc    al,0xa9
  41f0f5:	pop    eax
  41f0f6:	pop    edx
  41f0f7:	dec    edi
  41f0f8:	pop    ebp
  41f0f9:	sar    BYTE PTR [ebx+eiz*1],cl
  41f0fc:	mov    bh,0x5b
  41f0fe:	fistp  WORD PTR [eax-0x71a8b277]
  41f104:	ins    DWORD PTR es:[edi],dx
  41f105:	mov    esi,0x1b0a6aa4
  41f10a:	pop    edi
  41f10b:	gs mov esi,0x1a5e132f
  41f111:	cmc    
  41f112:	pop    edx
  41f113:	jg     0x41f115
  41f115:	dec    eax
  41f116:	adc    eax,0x272e42c0
  41f11b:	dec    esp
  41f11c:	daa    
  41f11d:	cmp    ebp,DWORD PTR [ecx+0x49]
  41f120:	xor    bl,bl
  41f122:	int    0xbe
  41f124:	sbb    edx,ebp
  41f126:	adc    al,0xe0
  41f128:	aad    0xe7
  41f12a:	mov    dh,0x8d
  41f12c:	es adc esi,ebx
  41f12f:	call   0x8142:0x78c9ea4d
  41f136:	jbe    0x41f126
  41f138:	shr    DWORD PTR [ebp-0x59],1
  41f13b:	addr16 push cs
  41f13d:	mov    ah,0xd5
  41f13f:	jae    0x41f17c
  41f141:	scas   al,BYTE PTR es:[edi]
  41f142:	(bad)  
  41f143:	pop    edi
  41f144:	cld    
  41f145:	(bad)  
  41f146:	jns    0x41f161
  41f148:	sbb    al,0xd9
  41f14a:	or     edi,eax
  41f14c:	inc    edi
  41f14d:	jmp    0x2174:0x4293a93a
  41f154:	popa   
  41f155:	hlt    
  41f156:	cmp    DWORD PTR [edi],esi
  41f158:	jl     0x41f12f
  41f15a:	adc    eax,0x8c1185c8
  41f15f:	mov    ebx,0x5b74f774
  41f164:	lea    eax,[edi-0x29cb498f]
  41f16a:	jnp    0x41f19e
  41f16c:	iret   
  41f16d:	pop    ebp
  41f16e:	inc    ecx
  41f16f:	xor    DWORD PTR [esi+0x275c14e2],ebp
  41f175:	std    
  41f176:	adc    al,al
  41f178:	rol    eax,0xc7
  41f17b:	fsubr  QWORD PTR [edi]
  41f17d:	sar    dl,1
  41f17f:	mov    dh,0x2a
  41f181:	pop    ecx
  41f182:	in     al,dx
  41f183:	(bad)  
  41f185:	lahf   
  41f186:	inc    ebp
  41f187:	fs or  al,0xbb
  41f18a:	ds sbb al,0xa7
  41f18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f18e:	cmp    eax,0xcd2c1dae
  41f193:	sub    edi,0x7ecd4407
  41f199:	ret    0x1fb2
  41f19c:	ds mov bl,0x5
  41f19f:	xchg   edx,eax
  41f1a0:	sub    al,0xc8
  41f1a2:	loope  0x41f187
  41f1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1a5:	adc    BYTE PTR [edx+0x2e1e639c],bl
  41f1ab:	std    
  41f1ac:	xchg   edx,eax
  41f1ad:	mov    ah,0x84
  41f1af:	add    eax,0x66dd8b7c
  41f1b4:	mov    edi,esi
  41f1b6:	popf   
  41f1b7:	js     0x41f1a8
  41f1b9:	pop    DWORD PTR [eax]
  41f1bb:	mov    BYTE PTR [edi],0x55
  41f1be:	in     eax,0x11
  41f1c0:	pop    ds
  41f1c1:	inc    edi
  41f1c2:	pop    esi
  41f1c3:	xor    al,0xc7
  41f1c5:	(bad)  
  41f1c6:	ret    0x200b
  41f1c9:	push   ebx
  41f1ca:	cmp    ecx,DWORD PTR [ebp+0x55a64d0c]
  41f1d0:	aad    0x94
  41f1d2:	add    edi,edi
  41f1d4:	jecxz  0x41f227
  41f1d6:	and    esi,DWORD PTR ds:[ecx+edi*2+0x7d]
  41f1db:	inc    edx
  41f1dc:	imul   esi,DWORD PTR [ecx+0x0],0xfffffffe
  41f1e0:	stc    
  41f1e1:	fcom   DWORD PTR [esi+0x6baf8b6e]
  41f1e7:	mov    ds:0x4aee21b7,al
  41f1ec:	or     DWORD PTR [edi+0x3c6c7542],edi
  41f1f2:	ss stos BYTE PTR es:[edi],al
  41f1f4:	test   eax,0x67a0cfc9
  41f1f9:	aas    
  41f1fa:	mov    cl,0x5d
  41f1fc:	aam    0xd4
  41f1fe:	pushf  
  41f1ff:	sbb    DWORD PTR [ebp+ecx*1+0x1e60c96a],esi
  41f206:	iret   
  41f207:	push   eax
  41f208:	test   eax,0xef83e9f
  41f20d:	ins    BYTE PTR es:[edi],dx
  41f20e:	lock jmp 0xc43d:0x2145d522
  41f216:	cli    
  41f217:	xor    eax,DWORD PTR [edi]
  41f219:	shl    DWORD PTR [edi+ebp*2+0x7b],cl
  41f21d:	or     al,0x41
  41f21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f220:	retf   
  41f221:	cmp    edi,DWORD PTR [ebx-0x6]
  41f224:	pop    edx
  41f225:	cmp    eax,0x7e3cc5bd
  41f22a:	das    
  41f22b:	mov    ch,bl
  41f22d:	pop    es
  41f22e:	xor    bh,BYTE PTR [eax+0x1ab80372]
  41f234:	sub    ecx,DWORD PTR [eax+0x2f5a44d5]
  41f23a:	into   
  41f23b:	adc    DWORD PTR [ebx],ecx
  41f23d:	inc    esi
  41f23e:	outs   dx,DWORD PTR ds:[esi]
  41f23f:	or     BYTE PTR [eax+0x6000f169],0x70
  41f246:	xchg   ecx,eax
  41f247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f248:	es out 0xa,al
  41f24b:	sti    
  41f24c:	mov    cl,0x66
  41f24e:	jle    0x41f275
  41f250:	retf   0x69e
  41f253:	(bad)
  41f256:	add    BYTE PTR [edi+ebx*2+0x574d5191],cl
  41f25d:	pop    es
  41f25e:	fwait
  41f25f:	adc    eax,0x208e41f8
  41f264:	add    edx,DWORD PTR [ebx]
  41f266:	jmp    0x272f:0xca09b686
  41f26d:	ror    DWORD PTR [ebx-0x50],1
  41f270:	scas   eax,DWORD PTR es:[edi]
  41f271:	xor    BYTE PTR [esi-0x67499a97],bh
  41f277:	sub    ah,bl
  41f279:	call   0x12d16a62
  41f27e:	fwait
  41f27f:	jbe    0x41f2e5
  41f281:	sub    cl,BYTE PTR [edi-0x7c9dd6a1]
  41f287:	mov    es,esp
  41f289:	push   0x69
  41f28b:	and    al,0xcf
  41f28d:	pop    ebx
  41f28e:	dec    esi
  41f28f:	popf   
  41f290:	mov    dl,0x30
  41f292:	ret    0x9275
  41f295:	icebp  
  41f296:	jno    0x41f2f3
  41f298:	sbb    al,0x7d
  41f29a:	jp     0x41f228
  41f29c:	data16 jno 0x41f2a9
  41f29f:	ins    BYTE PTR es:[edi],dx
  41f2a0:	lahf   
  41f2a1:	jo     0x41f254
  41f2a3:	push   ebx
  41f2a4:	pop    es
  41f2a5:	dec    edx
  41f2a6:	stos   BYTE PTR es:[edi],al
  41f2a7:	add    al,0x93
  41f2a9:	cld    
  41f2aa:	stos   BYTE PTR es:[edi],al
  41f2ab:	sbb    eax,0x328376a3
  41f2b0:	popf   
  41f2b1:	bound  edi,QWORD PTR [ecx]
  41f2b3:	out    dx,eax
  41f2b4:	std    
  41f2b5:	mov    edx,DWORD PTR [edi]
  41f2b7:	sbb    edi,DWORD PTR [edx-0x2d4f3b0]
  41f2bd:	lods   al,BYTE PTR ds:[esi]
  41f2be:	mov    al,0x5a
  41f2c0:	xor    al,0xe3
  41f2c2:	jg     0x41f28c
  41f2c4:	test   eax,0xdaf5361f
  41f2c9:	push   esi
  41f2ca:	mov    cl,0xa7
  41f2cc:	ds retf 0x68d4
  41f2d0:	stos   DWORD PTR es:[edi],eax
  41f2d1:	iret   
  41f2d2:	aad    0x21
  41f2d4:	fwait
  41f2d5:	outs   dx,BYTE PTR ds:[esi]
  41f2d6:	fisub  DWORD PTR [edx-0x4b]
  41f2da:	jmp    0xe54b9ab6
  41f2df:	out    dx,al
  41f2e0:	xor    bh,ah
  41f2e2:	and    ebx,esp
  41f2e4:	rcr    BYTE PTR [eax],cl
  41f2e6:	inc    esi
  41f2e7:	lods   al,BYTE PTR ds:[esi]
  41f2e8:	cs jb  0x41f275
  41f2eb:	sub    esp,ecx
  41f2ed:	loope  0x41f280
  41f2ef:	mov    ch,0x26
  41f2f1:	dec    eax
  41f2f2:	test   BYTE PTR [eax+0x202e2695],bl
  41f2f8:	pop    ds
  41f2f9:	or     eax,0x60b72c2
  41f2fe:	arpl   WORD PTR [ebx+0x4],cx
  41f301:	dec    esi
  41f302:	addr16 sbb al,0x15
  41f305:	xor    ch,BYTE PTR [ebp-0x7]
  41f308:	mov    WORD PTR [ebx-0x10a74cee],fs
  41f30e:	fldenv [ecx+0x722790]
  41f314:	dec    esp
  41f315:	cmc    
  41f316:	test   eax,0xfcc806ff
  41f31b:	sub    al,0x94
  41f31d:	arpl   WORD PTR [ecx],si
  41f31f:	out    0x23,al
  41f321:	xchg   edi,eax
  41f322:	enter  0xe0d0,0x64
  41f326:	lea    edi,[eax-0x6b]
  41f329:	jp     0x41f2e7
  41f32b:	add    eax,0xfb4177b0
  41f330:	fcom   QWORD PTR [ebp-0x47ac9d31]
  41f336:	shl    DWORD PTR [eax-0x3a],1
  41f339:	(bad)  
  41f33a:	dec    DWORD PTR [ecx+0x78ecc49e]
  41f340:	xchg   edx,eax
  41f341:	scas   al,BYTE PTR es:[edi]
  41f342:	div    ebx
  41f344:	or     DWORD PTR [esi-0x1d099c29],esp
  41f34a:	cli    
  41f34b:	pop    ecx
  41f34c:	mov    bh,0xb2
  41f34e:	sti    
  41f34f:	xor    DWORD PTR [edx],edi
  41f351:	and    eax,0xa60a695c
  41f356:	jle    0x41f3d4
  41f358:	(bad)  
  41f35b:	adc    al,0x62
  41f35d:	es retf 
  41f35f:	jae    0x41f3b6
  41f361:	ja     0x41f322
  41f363:	and    eax,0x76c4253e
  41f368:	pop    esp
  41f369:	push   esp
  41f36a:	(bad)  
  41f36b:	jecxz  0x41f369
  41f36d:	push   0x495fb009
  41f372:	sti    
  41f373:	pushf  
  41f374:	and    cl,dl
  41f376:	or     bl,dl
  41f378:	(bad)
  41f37b:	rcr    BYTE PTR [edx+0x40870408],cl
  41f381:	sahf   
  41f382:	xchg   edx,eax
  41f383:	jmp    0xc6766d7
  41f388:	jecxz  0x41f347
  41f38a:	clc    
  41f38b:	ins    BYTE PTR es:[edi],dx
  41f38c:	sbb    al,0x5a
  41f38e:	int3   
  41f38f:	lahf   
  41f390:	pusha  
  41f391:	imul   esi,ebp,0x2a
  41f394:	aad    0x11
  41f396:	pushf  
  41f397:	sti    
  41f398:	into   
  41f399:	adc    BYTE PTR [edx+0x6a],cl
  41f39c:	in     al,dx
  41f39d:	arpl   bx,sp
  41f39f:	mov    cl,0x64
  41f3a1:	jne    0x41f3d7
  41f3a3:	jo     0x41f3fa
  41f3a5:	outs   dx,BYTE PTR ds:[esi]
  41f3a6:	fisttp WORD PTR ds:0x9cb89cf4
  41f3ac:	daa    
  41f3ad:	inc    esi
  41f3ae:	not    dl
  41f3b0:	push   ebp
  41f3b1:	jno    0x41f403
  41f3b3:	scas   al,BYTE PTR es:[edi]
  41f3b4:	jae    0x41f378
  41f3b6:	pop    esi
  41f3b7:	shr    DWORD PTR [edx-0x61],cl
  41f3ba:	loop   0x41f3a1
  41f3bc:	mov    ds:0x8a63b2a3,eax
  41f3c1:	xchg   esp,eax
  41f3c2:	sti    
  41f3c3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41f3c5:	out    0xc4,al
  41f3c7:	out    0x29,eax
  41f3c9:	mul    DWORD PTR [ecx+0x49]
  41f3cc:	mov    bh,BYTE PTR [ebp+ecx*4-0x2394398d]
  41f3d3:	inc    edx
  41f3d4:	adc    DWORD PTR [ebx],ebp
  41f3d6:	or     al,0xaa
  41f3d8:	ret    
  41f3d9:	cmp    al,0x1e
  41f3db:	test   al,0x82
  41f3dd:	inc    edx
  41f3de:	inc    esi
  41f3df:	push   0x52b99c1a
  41f3e4:	scas   eax,DWORD PTR es:[edi]
  41f3e5:	or     ch,dh
  41f3e7:	pop    ebp
  41f3e8:	xlat   BYTE PTR ds:[ebx]
  41f3e9:	je     0x41f42d
  41f3eb:	mov    cl,0x95
  41f3ed:	sub    eax,0x4774890d
  41f3f2:	call   0x4c77:0xc828b1ad
  41f3f9:	mov    WORD PTR [esi+0x11],fs
  41f3fc:	push   esi
  41f3fd:	outs   dx,DWORD PTR ds:[esi]
  41f3fe:	xor    eax,0x7aee0a3e
  41f403:	xchg   BYTE PTR [ebx],dl
  41f405:	mov    eax,0x1af0ccb6
  41f40a:	and    al,0x68
  41f40c:	nop
  41f40d:	arpl   WORD PTR [ecx],bp
  41f40f:	jl     0x41f39f
  41f411:	lock std 
  41f413:	pop    ebx
  41f414:	arpl   WORD PTR [eax+0x4aaa0ac8],sp
  41f41a:	lea    edx,[esi]
  41f41c:	mov    esi,0x57a907c3
  41f421:	add    DWORD PTR [ebx-0x70],0x51
  41f425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f426:	lods   al,BYTE PTR ds:[esi]
  41f427:	sub    eax,0x35e4d324
  41f42c:	add    eax,0x90e6e14c
  41f431:	xchg   edx,eax
  41f432:	fimul  DWORD PTR [esi]
  41f434:	(bad)  
  41f435:	mov    eax,0xc0eab84f
  41f43a:	push   DWORD PTR [ecx+eiz*1]
  41f43d:	and    DWORD PTR [eax],ebx
  41f43f:	aaa    
  41f440:	stc    
  41f441:	sub    DWORD PTR [edx+0xa957d60],ebx
  41f447:	add    edx,DWORD PTR [ecx+0x77471b10]
  41f44d:	jecxz  0x41f459
  41f44f:	xchg   ebx,eax
  41f450:	shr    ch,1
  41f452:	pop    esi
  41f453:	xchg   ecx,eax
  41f454:	push   0xffffffbd
  41f456:	fcom   DWORD PTR [ebx+0x10]
  41f459:	sbb    DWORD PTR es:[ecx-0x12],esi
  41f45d:	pop    edx
  41f45e:	xchg   ebp,eax
  41f45f:	aam    0xb8
  41f461:	lock mov bl,0x1c
  41f464:	arpl   WORD PTR [ebp-0x4bdfe74d],bx
  41f46a:	xor    DWORD PTR [eax+0x5c293cfb],eax
  41f470:	iret   
  41f471:	dec    ecx
  41f472:	bound  edx,QWORD PTR [edi-0x2d]
  41f475:	(bad)  
  41f476:	push   eax
  41f477:	push   ebp
  41f478:	test   edx,esp
  41f47a:	dec    edx
  41f47b:	je     0x41f416
  41f47d:	ss aas 
  41f47f:	lock leave 
  41f481:	and    bl,BYTE PTR [ebx]
  41f483:	(bad)  
  41f484:	or     BYTE PTR [esp+ebp*4-0x14],ah
  41f488:	rol    dl,0x33
  41f48b:	sub    ebx,ebp
  41f48d:	pop    eax
  41f48e:	add    eax,0x99504451
  41f493:	mov    esi,0xaeda408d
  41f498:	xchg   BYTE PTR [edx],ch
  41f49a:	retf   0x643
  41f49d:	sbb    DWORD PTR [ecx-0x40121a43],esp
  41f4a3:	mov    bl,0x68
  41f4a5:	mov    dl,0xf6
  41f4a7:	pop    ds
  41f4a8:	mov    dh,0x17
  41f4aa:	dec    esp
  41f4ab:	jp     0x41f4ce
  41f4ad:	add    eax,0x1e3eed28
  41f4b2:	dec    ebx
  41f4b3:	push   ds
  41f4b4:	cmp    BYTE PTR [eax],dl
  41f4b6:	rcl    ebp,0xc
  41f4b9:	push   ds
  41f4ba:	rol    BYTE PTR [ebx-0x75],0xf9
  41f4be:	adc    al,0xcd
  41f4c0:	cmp    cl,ah
  41f4c2:	shl    DWORD PTR [esi],cl
  41f4c4:	pushf  
  41f4c5:	pop    ebp
  41f4c6:	cmp    al,0xd5
  41f4c8:	mov    es,WORD PTR [esi-0x7c]
  41f4cb:	loopne 0x41f486
  41f4cd:	pushf  
  41f4ce:	xchg   esp,eax
  41f4cf:	(bad)  
  41f4d0:	iret   
  41f4d1:	and    eax,ebx
  41f4d3:	outs   dx,DWORD PTR ds:[esi]
  41f4d4:	imul   BYTE PTR [esi]
  41f4d6:	fucomp st(1)
  41f4d8:	repz fst DWORD PTR ds:0x6a9f7364
  41f4df:	test   BYTE PTR [esi],al
  41f4e1:	mov    esi,0xf4f851f
  41f4e6:	retf   
  41f4e7:	inc    esp
  41f4e8:	rcl    DWORD PTR [ebp-0x33bf5de6],0x94
  41f4ef:	mov    ebx,0x2e2c0c5a
  41f4f4:	mov    dl,0xa
  41f4f6:	(bad)  
  41f4f7:	in     al,dx
  41f4f8:	cmp    eax,DWORD PTR [ecx]
  41f4fa:	inc    esi
  41f4fb:	repz or DWORD PTR [edi+ebp*2-0x56],ebp
  41f500:	mov    dh,0x79
  41f502:	adc    al,0x9e
  41f504:	repnz and ecx,esi
  41f507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f508:	push   ecx
  41f509:	fnstsw WORD PTR [esi]
  41f50b:	cmp    dh,BYTE PTR [ecx]
  41f50d:	or     dh,BYTE PTR [edx+0x15]
  41f510:	fisub  WORD PTR [ebp+0x3d]
  41f513:	inc    eax
  41f514:	xchg   edx,eax
  41f515:	rcr    DWORD PTR [ebx-0x1a],cl
  41f518:	dec    ebp
  41f519:	jg     0x41f561
  41f51b:	aas    
  41f51c:	sub    al,0xb4
  41f51e:	inc    esp
  41f51f:	(bad)  
  41f520:	outs   dx,BYTE PTR ds:[si]
  41f522:	dec    esi
  41f523:	shr    BYTE PTR [edx],1
  41f525:	shr    DWORD PTR [edx-0x29f0fa9d],1
  41f52b:	ins    BYTE PTR es:[edi],dx
  41f52c:	push   ebx
  41f52d:	repnz pop edx
  41f52f:	sbb    ebx,esi
  41f531:	(bad)  
  41f532:	pop    ss
  41f533:	cli    
  41f534:	and    bl,al
  41f536:	lods   al,BYTE PTR ds:[esi]
  41f537:	push   0x7ea45133
  41f53c:	sti    
  41f53d:	push   eax
  41f53e:	lahf   
  41f53f:	aam    0x60
  41f541:	dec    esp
  41f542:	jbe    0x41f4cd
  41f544:	(bad)  
  41f545:	push   cs
  41f546:	pop    esi
  41f547:	fiadd  DWORD PTR [ecx]
  41f549:	popf   
  41f54a:	pop    ds
  41f54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f54c:	xchg   edi,eax
  41f54d:	cs cmp al,ch
  41f550:	jb     0x41f584
  41f552:	(bad)  
  41f553:	fstp   TBYTE PTR [edx-0x38]
  41f556:	rcl    DWORD PTR fs:[ebp+ebp*1+0x54],cl
  41f55b:	repz mov bl,0xfa
  41f55e:	call   edi
  41f560:	mov    dh,al
  41f562:	dec    ebp
  41f563:	cld    
  41f564:	fistp  DWORD PTR [edx+0x55ab6764]
  41f56a:	dec    ebp
  41f56b:	jo     0x41f586
  41f56d:	dec    eax
  41f56e:	lea    eax,[eax-0x25acef70]
  41f574:	mov    esp,0xabfe310e
  41f579:	lea    edi,[ebp+ecx*4+0x53]
  41f57d:	xor    al,0xba
  41f57f:	mov    eax,cs
  41f581:	jle    0x41f5fc
  41f583:	cli    
  41f584:	fnstenv [eax-0x53eb0f12]
  41f58a:	push   edi
  41f58b:	in     al,dx
  41f58c:	(bad)  
  41f58e:	xchg   DWORD PTR [eax-0x41],esi
  41f591:	mov    edi,0x7b7cf539
  41f596:	dec    eax
  41f597:	fld    QWORD PTR [edi-0x24]
  41f59a:	in     al,dx
  41f59b:	loope  0x41f55b
  41f59d:	sti    
  41f59e:	jge    0x41f611
  41f5a0:	add    eax,0x2532e7
  41f5a5:	mov    ebx,0xcf7620de
  41f5aa:	mov    edi,0x12f2f8a5
  41f5af:	jg     0x41f619
  41f5b1:	inc    esp
  41f5b2:	pop    esp
  41f5b3:	push   esp
  41f5b4:	outs   dx,DWORD PTR ds:[esi]
  41f5b5:	aas    
  41f5b6:	ror    BYTE PTR [ecx+0x71],cl
  41f5b9:	ins    DWORD PTR es:[edi],dx
  41f5ba:	pop    esi
  41f5bb:	mov    bh,0xf6
  41f5bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5be:	xchg   ebp,eax
  41f5bf:	loop   0x41f54b
  41f5c1:	out    0xd8,al
  41f5c3:	jmp    0xb14a:0x3a9a783c
  41f5ca:	loopne 0x41f560
  41f5cc:	sbb    eax,0xfb722f26
  41f5d1:	and    ah,BYTE PTR [ebx+0x11]
  41f5d4:	mov    ecx,0xc26824c3
  41f5d9:	dec    ebx
  41f5da:	and    eax,0x5fc847de
  41f5df:	loopne 0x41f638
  41f5e1:	cdq    
  41f5e2:	ins    DWORD PTR es:[edi],dx
  41f5e3:	add    dl,bh
  41f5e5:	mov    dl,0x51
  41f5e7:	rcr    BYTE PTR [eax],1
  41f5e9:	das    
  41f5ea:	dec    ebx
  41f5eb:	hlt    
  41f5ec:	push   0x19
  41f5ee:	pop    eax
  41f5ef:	mov    esi,0x99c1674a
  41f5f4:	fs push 0x76e3a99
  41f5fa:	mov    dl,0xef
  41f5fc:	jo     0x41f5c3
  41f5fe:	xor    DWORD PTR [ecx-0x2830a7fc],edi
  41f604:	xchg   DWORD PTR [ebp-0x1aa86b0b],esp
  41f60a:	mov    bl,0x82
  41f60c:	in     eax,dx
  41f60d:	adc    BYTE PTR [edi+0x146f593d],ch
  41f613:	cmp    bh,cl
  41f615:	jb     0x41f63a
  41f617:	aas    
  41f618:	arpl   WORD PTR [edx+0x4cbc8dd3],si
  41f61e:	mov    bh,cl
  41f620:	mov    ebx,0xc2df1de2
  41f625:	(bad)  
  41f626:	lahf   
  41f627:	mov    ch,0xc9
  41f629:	(bad)  
  41f62a:	jmp    0x94648023
  41f62f:	push   esi
  41f630:	lahf   
  41f631:	popf   
  41f632:	adc    eax,0x67ae5ca5
  41f637:	and    bl,BYTE PTR [ecx-0x57]
  41f63a:	fwait
  41f63b:	ret    0x194
  41f63e:	test   BYTE PTR [edi+0x37e4c6c4],ch
  41f644:	xchg   dh,ah
  41f646:	data16 mov ds:0x7499942b,al
  41f64c:	daa    
  41f64d:	test   DWORD PTR [edi+ebp*4],edx
  41f650:	mov    bl,BYTE PTR [ebp+esi*2-0x4e]
  41f654:	js     0x41f5de
  41f656:	pushf  
  41f657:	das    
  41f658:	es jno 0x41f6a2
  41f65b:	xor    BYTE PTR [edi+0x49],bl
  41f65e:	mul    BYTE PTR [edx]
  41f660:	inc    ebp
  41f661:	add    al,0x28
  41f663:	push   esp
  41f664:	test   al,0xf3
  41f666:	imul   edi,DWORD PTR [edi-0x7ee959ac],0x6
  41f66d:	sbb    DWORD PTR [edi-0x68ea68fd],edi
  41f673:	cmp    esp,edx
  41f675:	fcmovu st,st(7)
  41f677:	push   ebp
  41f678:	push   esp
  41f679:	jae    0x41f60e
  41f67b:	ficom  DWORD PTR [ebx-0x59]
  41f67e:	pushf  
  41f67f:	jge    0x41f659
  41f681:	inc    edi
  41f682:	xchg   ebp,eax
  41f683:	call   0xf480d7a0
  41f688:	ret    
  41f689:	bnd jne 0x41f669
  41f68c:	mov    al,ds:0x6853fa32
  41f691:	pop    esp
  41f692:	jbe    0x41f650
  41f694:	shl    BYTE PTR [ebx+eiz*8+0x6012bc0d],0x67
  41f69c:	rol    ah,1
  41f69e:	mov    esp,0x59b83619
  41f6a3:	cmp    eax,DWORD PTR [edx+edx*4]
  41f6a6:	mov    bh,0x81
  41f6a8:	adc    al,0x46
  41f6aa:	test   al,0x42
  41f6ac:	push   es
  41f6ad:	retf   0x1e53
  41f6b0:	psllw  mm1,mm7
  41f6b3:	out    0xae,al
  41f6b5:	sahf   
  41f6b6:	les    ebp,FWORD PTR [edx+0x9589551]
  41f6bc:	in     al,0xf7
  41f6be:	cmc    
  41f6bf:	xor    eax,0x1b327ad4
  41f6c4:	push   0x23fcfde5
  41f6c9:	cdq    
  41f6ca:	fwait
  41f6cb:	cmp    DWORD PTR [ebx+0x4dcc5236],0xecd5c0e7
  41f6d5:	retf   
  41f6d6:	les    esp,FWORD PTR [edi+0x31a375ba]
  41f6dc:	ins    DWORD PTR es:[edi],dx
  41f6dd:	cmp    eax,0x804088db
  41f6e2:	mov    ds:0x58af232e,eax
  41f6e7:	(bad)  
  41f6e8:	sub    BYTE PTR [esi],al
  41f6ea:	mov    cs,WORD PTR [edx-0x520dac00]
  41f6f0:	push   eax
  41f6f1:	aad    0x1c
  41f6f3:	xchg   ecx,eax
  41f6f4:	fucom  st(6)
  41f6f6:	call   0xe8e3027b
  41f6fb:	cli    
  41f6fc:	les    edx,FWORD PTR [edx+edx*4]
  41f6ff:	mov    ds:0xa47f0fae,al
  41f704:	js     0x41f6fa
  41f706:	rol    BYTE PTR [edi],1
  41f708:	adc    BYTE PTR [ecx+0x67],bh
  41f70b:	imul   BYTE PTR [esp+eax*1+0x521f3a1f]
  41f712:	lahf   
  41f713:	daa    
  41f714:	fidivr WORD PTR [ecx+0x4538946e]
  41f71a:	add    ch,BYTE PTR [esp+ecx*4]
  41f71d:	or     al,0x4f
  41f71f:	push   ecx
  41f720:	icebp  
  41f721:	pop    edi
  41f722:	adc    cl,ah
  41f724:	cmp    eax,0x64455e71
  41f729:	js     0x41f74b
  41f72b:	fisubr DWORD PTR [ebx+eiz*1-0x1b84c4cd]
  41f732:	xchg   ebx,eax
  41f733:	jnp    0x41f78c
  41f735:	adc    bh,BYTE PTR ss:[ecx]
  41f738:	or     ebp,ebp
  41f73a:	sbb    al,0x5
  41f73c:	push   cs
  41f73d:	out    dx,al
  41f73e:	or     edi,DWORD PTR [ebx-0x3]
  41f741:	loopne 0x41f704
  41f743:	mov    WORD PTR [edi+ecx*2-0x2dcf60e2],es
  41f74a:	mov    WORD PTR [edx-0x2b623b87],?
  41f750:	cdq    
  41f751:	stos   BYTE PTR es:[edi],al
  41f752:	dec    eax
  41f753:	xchg   ebp,eax
  41f754:	mov    ah,BYTE PTR [eax-0x75]
  41f757:	dec    esi
  41f758:	add    BYTE PTR [edx-0x50],dl
  41f75b:	jo     0x41f7bc
  41f75d:	mov    edi,0x1c9b02d5
  41f762:	dec    ebx
  41f763:	sbb    esp,DWORD PTR [ecx-0x71]
  41f766:	mov    eax,ds:0x3e7a76ff
  41f76b:	ins    BYTE PTR es:[edi],dx
  41f76c:	xor    BYTE PTR [esp+edi*1+0x2c],dl
  41f770:	pusha  
  41f771:	enter  0x7f75,0xc0
  41f775:	dec    edi
  41f776:	iret   
  41f777:	mov    dh,0xae
  41f779:	adc    ebx,DWORD PTR [edx]
  41f77b:	shr    bh,cl
  41f77d:	shl    BYTE PTR fs:[edx],cl
  41f780:	jmp    0xbbf282f0
  41f785:	push   ecx
  41f786:	pop    edx
  41f787:	and    al,BYTE PTR [eax-0x11]
  41f78a:	sub    al,0xe2
  41f78c:	arpl   dx,di
  41f78e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f78f:	ret    
  41f790:	jp     0x41f7fe
  41f792:	adc    bh,BYTE PTR [edi+0x1f5a6988]
  41f798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f799:	retf   
  41f79a:	rol    esp,0x38
  41f79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f79e:	mov    al,ds:0x3abc78f5
  41f7a3:	cmp    DWORD PTR [ecx+0x6f],edx
  41f7a6:	add    al,0x77
  41f7a8:	and    BYTE PTR [ebx-0x7b],0xb5
  41f7ac:	cwde   
  41f7ad:	add    edx,DWORD PTR [ecx]
  41f7af:	popa   
  41f7b0:	pop    eax
  41f7b1:	inc    ebp
  41f7b2:	fldcw  WORD PTR ds:0xa3e947c7
  41f7b8:	jno    0x41f82e
  41f7ba:	shr    BYTE PTR [ecx+0x5a],cl
  41f7bd:	out    dx,al
  41f7be:	lahf   
  41f7bf:	loop   0x41f807
  41f7c1:	xchg   BYTE PTR [esi],dh
  41f7c3:	cmc    
  41f7c4:	xchg   esp,eax
  41f7c5:	mov    ds,WORD PTR [edi+0x32]
  41f7c8:	push   ecx
  41f7c9:	jmp    0x4bb5d0e
  41f7ce:	data16 jecxz 0x41f81f
  41f7d1:	xor    eax,0x57d58093
  41f7d6:	ror    ebx,1
  41f7d8:	fbstp  TBYTE PTR [edi]
  41f7da:	jg     0x41f7e8
  41f7dc:	xor    ebx,DWORD PTR [edi+ebx*1+0xe]
  41f7e0:	and    ecx,DWORD PTR [ecx-0x6bd7d5ed]
  41f7e6:	or     eax,0x3049de61
  41f7eb:	mov    ebp,0x5297b9a3
  41f7f0:	inc    esp
  41f7f1:	bound  ecx,QWORD PTR [edi-0x54eb93ba]
  41f7f7:	test   al,0xf3
  41f7f9:	(bad)  
  41f7fb:	adc    esp,DWORD PTR [edi+eax*1]
  41f7fe:	mov    DWORD PTR [ebp+0x7c9a9e58],esi
  41f804:	outs   dx,DWORD PTR ds:[esi]
  41f805:	cmp    esp,DWORD PTR [ebx-0x7f3d6092]
  41f80b:	xchg   edx,eax
  41f80c:	mov    eax,0xd7376fbc
  41f811:	mov    dl,0xc
  41f813:	pop    es
  41f814:	pop    es
  41f815:	lock xor ebp,DWORD PTR [edi]
  41f818:	push   eax
  41f819:	jae    0x41f7ad
  41f81b:	jne    0x41f816
  41f81d:	adc    DWORD PTR [ebx],esi
  41f81f:	cmp    BYTE PTR [edi+0x31],bh
  41f822:	stc    
  41f823:	adc    dh,BYTE PTR [ebx-0xd]
  41f826:	and    BYTE PTR [edi],bl
  41f828:	mov    al,0x45
  41f82a:	sub    ebx,ecx
  41f82c:	loop   0x41f882
  41f82e:	fwait
  41f82f:	cli    
  41f830:	dec    eax
  41f831:	fisttp QWORD PTR [ecx+ebp*1-0x3a]
  41f835:	fmul   DWORD PTR [ebx+0x737c74b2]
  41f83b:	cmp    dl,BYTE PTR [edx-0x40]
  41f83e:	shld   DWORD PTR [esi-0x511c07ff],ebp,cl
  41f845:	lock arpl WORD PTR [ebx+0x64e246eb],si
  41f84c:	int3   
  41f84d:	(bad)  
  41f84e:	mov    cl,dl
  41f850:	jbe    0x41f85f
  41f852:	cs in  eax,dx
  41f854:	fadd   st,st(7)
  41f856:	add    edi,DWORD PTR [esp+edi*1]
  41f859:	sar    DWORD PTR [ecx-0x545c0279],0x61
  41f860:	dec    ecx
  41f861:	cld    
  41f862:	push   esi
  41f863:	adc    al,BYTE PTR ds:0x9f3a68e5
  41f869:	jge    0x41f802
  41f86b:	lods   eax,DWORD PTR ds:[esi]
  41f86c:	add    al,0x9
  41f86e:	jge    0x41f875
  41f870:	cdq    
  41f871:	dec    esi
  41f872:	mov    cs,WORD PTR ds:0xea618b70
  41f878:	enter  0x8981,0x1f
  41f87c:	dec    eax
  41f87d:	fninit 
  41f87f:	adc    DWORD PTR gs:[ebx+0x7c0771e8],ebx
  41f886:	pop    es
  41f887:	cmp    eax,0x9428b150
  41f88c:	mov    ?,WORD PTR [ecx-0x4e]
  41f88f:	ret    
  41f890:	out    dx,al
  41f891:	adc    bl,BYTE PTR [ebx]
  41f893:	out    dx,eax
  41f894:	add    eax,0x6879135
  41f899:	sbb    BYTE PTR [esi-0x7fbd069a],ah
  41f89f:	adc    eax,0x786ce7f5
  41f8a4:	sbb    esp,edx
  41f8a6:	cmc    
  41f8a7:	pop    edx
  41f8a8:	pop    ds
  41f8a9:	daa    
  41f8aa:	or     BYTE PTR [edi+0x1b42acc3],bh
  41f8b0:	leave  
  41f8b1:	push   cs
  41f8b2:	repz bound esp,QWORD PTR [edi+0x17]
  41f8b6:	icebp  
  41f8b7:	test   ebp,ecx
  41f8b9:	or     al,0x9a
  41f8bb:	push   ds
  41f8bc:	clc    
  41f8bd:	ss scas eax,DWORD PTR es:[edi]
  41f8bf:	out    dx,al
  41f8c0:	sar    BYTE PTR [esi+0x1f45426d],1
  41f8c6:	jg     0x41f867
  41f8c8:	or     al,0xf7
  41f8ca:	std    
  41f8cb:	and    eax,0xa4021c28
  41f8d0:	xor    eax,0xb836e0fe
  41f8d5:	adc    BYTE PTR [esi],bh
  41f8d7:	lods   eax,DWORD PTR ds:[esi]
  41f8d8:	mov    ch,0xb8
  41f8da:	imul   ecx,DWORD PTR [edx+0x12],0x2177a429
  41f8e1:	cdq    
  41f8e2:	add    ecx,edi
  41f8e4:	das    
  41f8e5:	mov    WORD PTR [ebx],?
  41f8e7:	jge    0x41f955
  41f8e9:	push   edx
  41f8ea:	sub    DWORD PTR [ebp-0x570a05b3],eax
  41f8f0:	scas   eax,DWORD PTR es:[edi]
  41f8f1:	push   ebp
  41f8f2:	bound  eax,QWORD PTR [ebx+0x52aa0a3d]
  41f8f8:	iret   
  41f8f9:	in     al,0x78
  41f8fb:	dec    ebx
  41f8fc:	test   ecx,ecx
  41f8fe:	inc    eax
  41f8ff:	arpl   sp,di
  41f901:	adc    DWORD PTR [ecx],esi
  41f903:	test   eax,0xe47e477a
  41f908:	mov    bh,BYTE PTR [ebx-0x152e2efd]
  41f90e:	inc    ebx
  41f90f:	cmp    DWORD PTR [ebx+0x59c1ce9c],0xe322ab0b
  41f919:	or     DWORD PTR [edi+0x41],edi
  41f91c:	call   0xa7f80927
  41f921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f922:	outs   dx,BYTE PTR ds:[esi]
  41f923:	mov    gs,esp
  41f925:	(bad)  
  41f926:	push   edx
  41f927:	jl     0x41f90b
  41f929:	push   ecx
  41f92a:	retf   0x1956
  41f92d:	(bad)  
  41f92e:	scas   al,BYTE PTR es:[edi]
  41f92f:	add    ebp,DWORD PTR [edx+ecx*1]
  41f932:	mov    cl,0xdc
  41f934:	arpl   WORD PTR [ecx],si
  41f936:	mov    ecx,0x1c2dc5c5
  41f93b:	addr16 mov esi,0xd4b2ee4e
  41f941:	pop    ebp
  41f942:	and    BYTE PTR [esi-0x784db7aa],0x70
  41f949:	popa   
  41f94a:	mov    eax,0x7adc3bc3
  41f94f:	xor    DWORD PTR [edx-0x15a86810],0x2f393723
  41f959:	mul    DWORD PTR [ebx]
  41f95b:	or     eax,0x4a34fd71
  41f960:	mov    DWORD PTR [ecx+ebx*4-0x703de552],eax
  41f967:	cmp    al,0xbf
  41f969:	and    DWORD PTR [edx-0x22],ecx
  41f96c:	xor    eax,0x712a124d
  41f971:	pop    ecx
  41f972:	sub    BYTE PTR [esi-0x48],ah
  41f975:	popf   
  41f976:	mov    eax,0x385ba24
  41f97b:	fdiv   QWORD PTR [eax]
  41f97d:	jno    0x41f98f
  41f97f:	sub    eax,0xb9ba4230
  41f984:	xor    al,BYTE PTR [edi+0x4dacea44]
  41f98a:	or     edi,esp
  41f98c:	add    al,BYTE PTR [edi-0x2955c31d]
  41f992:	shr    DWORD PTR [ebx-0x44],1
  41f995:	in     eax,0x0
  41f997:	out    0xcb,eax
  41f999:	mov    al,ds:0x704c98e8
  41f99e:	iret   
  41f99f:	pop    esi
  41f9a0:	push   edi
  41f9a1:	push   ebx
  41f9a2:	(bad)  
  41f9a3:	fmul   QWORD PTR [edi-0x7842e777]
  41f9a9:	int3   
  41f9aa:	fisubr WORD PTR [edx]
  41f9ac:	repz push 0x4b
  41f9af:	pushf  
  41f9b0:	push   eax
  41f9b1:	aas    
  41f9b2:	cmp    BYTE PTR gs:[ebx-0x5f773b1d],al
  41f9b9:	das    
  41f9ba:	aam    0xf0
  41f9bc:	pop    ds
  41f9bd:	push   esp
  41f9be:	pop    edi
  41f9bf:	cld    
  41f9c0:	test   al,0x58
  41f9c2:	adc    al,0x4b
  41f9c4:	retf   
  41f9c5:	and    cl,bl
  41f9c7:	adc    al,0x68
  41f9c9:	fiadd  DWORD PTR [ebx]
  41f9cb:	mov    dl,0x6
  41f9cd:	push   es
  41f9ce:	dec    ebp
  41f9cf:	mov    ch,BYTE PTR [ebx-0x448f42ae]
  41f9d5:	popa   
  41f9d6:	ins    DWORD PTR es:[edi],dx
  41f9d7:	push   edx
  41f9d8:	jbe    0x41f9e1
  41f9da:	mov    DWORD PTR [edi-0x11380aa0],0xf94086e
  41f9e4:	xor    DWORD PTR [ebx],ecx
  41f9e6:	xchg   edi,eax
  41f9e7:	xchg   edx,eax
  41f9e8:	stc    
  41f9e9:	das    
  41f9ea:	ficomp DWORD PTR [edx]
  41f9ec:	rcr    BYTE PTR [edi-0x42],0xdb
  41f9f0:	push   cs
  41f9f1:	xor    BYTE PTR [esi],ch
  41f9f3:	out    dx,al
  41f9f4:	mov    esi,0x6f3b7644
  41f9f9:	mov    dh,0xf7
  41f9fb:	dec    esi
  41f9fc:	mov    ch,0xc
  41f9fe:	push   ds
  41f9ff:	mov    es:0x4add5b1,al
  41fa05:	xchg   edi,eax
  41fa06:	sub    edi,edx
  41fa08:	inc    eax
  41fa09:	ficomp WORD PTR [edi]
  41fa0b:	mov    ds:0x97160858,al
  41fa10:	cmp    ah,BYTE PTR [edx+eax*2]
  41fa13:	sbb    ax,dx
  41fa16:	jl     0x41f9db
  41fa18:	arpl   dx,di
  41fa1a:	retf   
  41fa1b:	gs cmp DWORD PTR ds:[ecx+0x68894b29],ebx
  41fa23:	mov    ds:0xeff44c97,al
  41fa28:	scas   al,BYTE PTR es:[edi]
  41fa29:	fmul   QWORD PTR [ecx+0x363e35b6]
  41fa2f:	imul   edx,DWORD PTR [esi+edi*1-0x46],0x82401792
  41fa37:	pop    edi
  41fa38:	into   
  41fa39:	mov    esp,0xf52bfc47
  41fa3e:	jbe    0x41f9c7
  41fa40:	mov    esi,0x32792ebb
  41fa45:	enter  0x9544,0x7c
  41fa49:	rcr    DWORD PTR [eax+0x27447be7],1
  41fa4f:	fprem1 
  41fa51:	mov    ebp,DWORD PTR [ebp+0x6b]
  41fa54:	ss es sub eax,0xa0712e36
  41fa5b:	test   eax,0x9daa2e47
  41fa60:	(bad)  
  41fa61:	xor    cl,bh
  41fa63:	test   eax,0x460dd8df
  41fa68:	or     DWORD PTR [ebx-0x4c],edi
  41fa6b:	rcl    BYTE PTR [ebp-0x22],0x7a
  41fa6f:	leave  
  41fa70:	ja     0x41fa26
  41fa72:	enter  0x92c8,0x7d
  41fa76:	shl    DWORD PTR [ecx+0x70],0x8c
  41fa7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa7b:	aad    0x88
  41fa7d:	push   ss
  41fa7e:	xchg   esp,eax
  41fa7f:	cli    
  41fa80:	arpl   WORD PTR [ebx-0x67fe6b34],dx
  41fa86:	daa    
  41fa87:	jo     0x41fa82
  41fa89:	push   esp
  41fa8a:	mov    cs,edx
  41fa8c:	and    cl,BYTE PTR [esi]
  41fa8e:	sbb    BYTE PTR [edx+ecx*1-0x18237627],dh
  41fa95:	lock and esi,esi
  41fa98:	shl    BYTE PTR [eax-0x57],cl
  41fa9b:	mov    eax,0x3140c65e
  41faa0:	fdivr  DWORD PTR [ecx-0x1b]
  41faa3:	jns    0x41fa63
  41faa5:	in     eax,dx
  41faa6:	or     al,al
  41faa8:	aad    0xf
  41faaa:	shr    BYTE PTR [ecx],cl
  41faac:	push   ss
  41faad:	(bad)  
  41faae:	sar    BYTE PTR [edi],0x17
  41fab1:	les    ebx,FWORD PTR ds:0xa7140e2f
  41fab7:	(bad)
  41faba:	mov    ah,0x8b
  41fabc:	(bad)  
  41fabd:	mov    BYTE PTR [ebx],dl
  41fabf:	(bad)  
  41fac0:	hlt    
  41fac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fac2:	addr16 popa 
  41fac4:	mov    ebx,0xbf2d649f
  41fac9:	xor    al,0x1c
  41facb:	inc    ecx
  41facc:	pop    esp
  41facd:	jecxz  0x41fa61
  41facf:	test   al,0x59
  41fad1:	or     BYTE PTR [ebx-0x59],0xee
  41fad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fad6:	in     al,0x51
  41fad8:	jnp    0x41fa84
  41fada:	push   es
  41fadb:	imul   edx,ebp,0xffffffe5
  41fade:	cmp    cl,BYTE PTR [eax]
  41fae0:	add    BYTE PTR [ebx+0x3d],dl
  41fae3:	fild   QWORD PTR [ebx-0x9]
  41fae6:	xchg   BYTE PTR [esi+0x5e],al
  41fae9:	sub    BYTE PTR [edx],ah
  41faeb:	pusha  
  41faec:	add    BYTE PTR [edx],0x5e
  41faef:	xchg   ebx,eax
  41faf0:	jo     0x41fafb
  41faf2:	into   
  41faf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faf4:	mov    ds:0x13d4adec,eax
  41faf9:	(bad)  
  41fafa:	sbb    al,0x64
  41fafc:	dec    edi
  41fafd:	add    edx,DWORD PTR [eax+ebp*1]
  41fb00:	mov    al,0x9c
  41fb02:	lea    edi,[edi+edi*8+0x27e13db1]
  41fb09:	add    al,0x3b
  41fb0b:	(bad)  [ebx+edi*2-0x72cc3fed]
  41fb12:	xlat   BYTE PTR ds:[ebx]
  41fb13:	cwde   
  41fb14:	jp     0x41fb20
  41fb16:	ret    
  41fb17:	mov    edx,ebp
  41fb19:	xor    BYTE PTR [edx],ah
  41fb1b:	mov    esi,0x3678040d
  41fb20:	push   edi
  41fb21:	inc    ebx
  41fb22:	sub    eax,0x420edbbf
  41fb27:	xchg   ebx,eax
  41fb28:	retf   
  41fb29:	ins    BYTE PTR es:[edi],dx
  41fb2a:	hlt    
  41fb2b:	icebp  
  41fb2c:	in     eax,0x1
  41fb2e:	stos   DWORD PTR es:[edi],eax
  41fb2f:	pop    es
  41fb30:	add    bl,BYTE PTR [esi+0x32cd05ee]
  41fb36:	mov    ebp,0xd07bf02d
  41fb3b:	bound  eax,QWORD PTR [ebp-0x149ecee5]
  41fb41:	scas   eax,DWORD PTR es:[edi]
  41fb42:	sub    BYTE PTR [ebp-0x61047983],dl
  41fb48:	add    eax,0x31282750
  41fb4d:	repnz push ss
  41fb4f:	mov    bh,0xe
  41fb51:	imul   BYTE PTR [ecx-0x47]
  41fb54:	stos   DWORD PTR es:[edi],eax
  41fb55:	loope  0x41fb7f
  41fb57:	or     eax,esp
  41fb59:	jnp    0x41fb12
  41fb5b:	clc    
  41fb5c:	sbb    eax,0x8edb5355
  41fb61:	das    
  41fb62:	mov    bl,0xfa
  41fb64:	jae    0x41fb19
  41fb66:	sub    esp,ebx
  41fb68:	mov    ebp,0x8b88befc
  41fb6d:	mov    esp,0xf721345d
  41fb72:	inc    edi
  41fb73:	sbb    dh,cl
  41fb75:	sbb    BYTE PTR ds:[edx+0x51dbe07e],0x31
  41fb7d:	jg     0x41fba3
  41fb7f:	xor    eax,DWORD PTR [ebx-0x1d70e833]
  41fb85:	mov    ah,0xd9
  41fb87:	iret   
  41fb88:	loope  0x41fbdb
  41fb8a:	xor    DWORD PTR [ebp+0x42],eax
  41fb8d:	shufps xmm6,XMMWORD PTR [ebp-0x20f9ba40],0x95
  41fb95:	in     al,dx
  41fb96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb97:	mov    ah,0x46
  41fb99:	add    dh,dh
  41fb9b:	dec    ebx
  41fb9c:	xchg   BYTE PTR [ecx-0x78588372],ch
  41fba2:	mov    ds,WORD PTR [ecx]
  41fba4:	sbb    eax,0xa11343bf
  41fba9:	xchg   esi,eax
  41fbaa:	jb     0x41fbf8
  41fbac:	pop    edi
  41fbad:	jl     0x41fb68
  41fbaf:	fs mov ecx,0xf7088912
  41fbb5:	cmp    cl,dh
  41fbb7:	add    esp,DWORD PTR [ebp+0x51]
  41fbba:	rcl    BYTE PTR ds:0x899ef36c,0x9d
  41fbc1:	hlt    
  41fbc2:	sahf   
  41fbc3:	jecxz  0x41fb47
  41fbc5:	add    al,0x76
  41fbc7:	mov    esp,0x8831ddd9
  41fbcc:	xchg   ecx,eax
  41fbcd:	imul   esp,DWORD PTR [edx],0xff2fc0c4
  41fbd3:	add    eax,0x11000c73
  41fbd8:	data16 ficomp DWORD PTR [edi-0x4d436944]
  41fbdf:	and    eax,0xd1f2460b
  41fbe4:	mov    bl,0x7c
  41fbe6:	lods   eax,DWORD PTR ds:[esi]
  41fbe7:	add    eax,0x43e5db2c
  41fbec:	les    edx,FWORD PTR [ebx+0x6f63da0d]
  41fbf2:	adc    al,0xe6
  41fbf4:	gs int3 
  41fbf6:	cdq    
  41fbf7:	dec    ecx
  41fbf8:	enter  0x69c0,0xaa
  41fbfc:	fwait
  41fbfd:	push   eax
  41fbfe:	retf   0xf2a8
  41fc01:	jmp    0x2e63:0x8d100aa6
  41fc08:	(bad)  
  41fc09:	mov    edi,0x9f0d167f
  41fc0e:	inc    edx
  41fc0f:	arpl   WORD PTR [edi+0x20],sp
  41fc12:	adc    al,0xbe
  41fc14:	jmp    0x91bf6c1
  41fc19:	js     0x41fbb5
  41fc1b:	ds in  al,dx
  41fc1d:	fmul   QWORD PTR [edx+0x6]
  41fc20:	sub    bl,ch
  41fc22:	sbb    BYTE PTR [eax-0x430761dd],ah
  41fc28:	dec    esp
  41fc29:	in     eax,0xee
  41fc2b:	dec    edx
  41fc2c:	mov    DWORD PTR [edi+eiz*4-0x73406c36],ecx
  41fc33:	in     eax,dx
  41fc34:	fist   DWORD PTR [ebx+edi*1+0xc]
  41fc38:	imul   eax,ebx,0xfffffff3
  41fc3b:	inc    esp
  41fc3c:	mov    al,0x22
  41fc3e:	or     eax,0x7c9a6786
  41fc43:	imul   esp,DWORD PTR [eax],0x82732682
  41fc49:	push   ebx
  41fc4a:	popa   
  41fc4b:	leave  
  41fc4c:	das    
  41fc4d:	jno    0x41fc32
  41fc4f:	outs   dx,DWORD PTR ds:[esi]
  41fc50:	lock mov eax,ds:0x5873e0f2
  41fc56:	mov    ch,0xaa
  41fc58:	in     eax,dx
  41fc59:	(bad)  
  41fc5a:	mov    bh,0x91
  41fc5c:	and    DWORD PTR [ebx-0x2b],0x57
  41fc60:	mov    edi,0x49039092
  41fc65:	sub    BYTE PTR [ecx],al
  41fc67:	and    ecx,esp
  41fc69:	sar    BYTE PTR [ecx-0x19],1
  41fc6c:	(bad)  
  41fc6d:	jmp    0xe58e609
  41fc72:	loope  0x41fc51
  41fc74:	push   ds
  41fc75:	adc    edi,edi
  41fc77:	fadd   st,st(2)
  41fc79:	cmp    eax,0x23ea12fe
  41fc7e:	mov    ebp,0xb5ad953a
  41fc83:	dec    esp
  41fc84:	inc    ebp
  41fc85:	inc    ecx
  41fc86:	pop    edi
  41fc87:	ror    BYTE PTR [ebx],cl
  41fc89:	or     dl,dh
  41fc8b:	and    DWORD PTR [edx-0x2a],ebx
  41fc8e:	sbb    edx,ebp
  41fc90:	pushf  
  41fc91:	in     al,dx
  41fc92:	mov    al,0x96
  41fc94:	ja     0x41fca2
  41fc96:	mov    BYTE PTR [esi-0x76],0x67
  41fc9a:	jns    0x41fc85
  41fc9c:	mov    ah,0xae
  41fc9e:	stc    
  41fc9f:	mov    ah,0x4b
  41fca1:	and    al,0x23
  41fca3:	hlt    
  41fca4:	pop    ds
  41fca5:	adc    DWORD PTR [esi-0x3d60d260],edx
  41fcab:	xchg   ebp,eax
  41fcac:	mov    esi,0xe28e82b9
  41fcb1:	xchg   ecx,eax
  41fcb2:	mov    ch,0xc6
  41fcb4:	pusha  
  41fcb5:	arpl   WORD PTR [edi+ecx*1],ax
  41fcb8:	jo     0x41fc52
  41fcba:	mov    BYTE PTR [eax+ecx*1+0x22],ch
  41fcbe:	test   eax,0x425ab19b
  41fcc3:	mov    ebp,0x417e5700
  41fcc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcc9:	out    dx,al
  41fcca:	push   0xee0751a3
  41fccf:	jne    0x41fd40
  41fcd1:	hlt    
  41fcd2:	xor    BYTE PTR [edi+ecx*2-0x25379f1],ch
  41fcd9:	mov    eax,0x890bfc48
  41fcde:	iret   
  41fcdf:	mov    al,ds:0x2ce3277b
  41fce4:	mov    edx,0xdfaa5295
  41fce9:	loop   0x41fcfc
  41fceb:	inc    ebx
  41fcec:	add    cl,BYTE PTR [esi+0x3b]
  41fcef:	and    DWORD PTR [ebp+0x61],ebx
  41fcf2:	xchg   ebp,eax
  41fcf3:	pop    edx
  41fcf4:	pop    es
  41fcf5:	or     BYTE PTR [eax+0x6ed827cd],bl
  41fcfb:	jmp    0x48cb:0x34d9d8d4
  41fd02:	dec    ebx
  41fd03:	mov    al,BYTE PTR [edi-0x17ac9c5e]
  41fd09:	in     al,0xb4
  41fd0b:	push   ebp
  41fd0c:	cld    
  41fd0d:	lock mov ecx,DWORD PTR [esi-0x6d]
  41fd11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd12:	sbb    DWORD PTR ds:0xf9405a01,0xfc70a752
  41fd1c:	ss loopne 0x41fd54
  41fd1f:	mov    cl,0x92
  41fd21:	(bad)  
  41fd22:	pusha  
  41fd23:	xchg   BYTE PTR [ebx+ebx*4-0x859327a],bh
  41fd2a:	inc    ecx
  41fd2b:	jo     0x41fd33
  41fd2d:	dec    esp
  41fd2e:	sbb    eax,0x9199e910
  41fd33:	xor    bl,BYTE PTR ds:0x95c96bea
  41fd39:	aaa    
  41fd3a:	inc    ebx
  41fd3b:	scas   al,BYTE PTR es:[edi]
  41fd3c:	dec    eax
  41fd3d:	es ja  0x41fd77
  41fd40:	ins    BYTE PTR es:[edi],dx
  41fd41:	push   ss
  41fd42:	pop    eax
  41fd43:	repz icebp 
  41fd45:	outs   dx,BYTE PTR ds:[esi]
  41fd46:	lods   al,BYTE PTR ds:[esi]
  41fd47:	xchg   esi,eax
  41fd48:	in     eax,0x19
  41fd4a:	push   edx
  41fd4b:	sub    ch,0xe7
  41fd4e:	in     al,dx
  41fd4f:	in     eax,dx
  41fd50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd51:	sub    ebp,DWORD PTR [ebx-0x7e32a4c]
  41fd57:	test   eax,0x860de657
  41fd5c:	or     BYTE PTR [esi+0x624e8f55],cl
  41fd62:	aam    0x89
  41fd64:	mov    DWORD PTR [eax],eax
  41fd66:	adc    DWORD PTR [edi+0xa8d7846],edx
  41fd6c:	inc    ebx
  41fd6d:	dec    eax
  41fd6e:	arpl   WORD PTR [edx-0x7b],ax
  41fd71:	push   edx
  41fd72:	add    BYTE PTR [esi],0xd9
  41fd75:	retf   0xd158
  41fd78:	(bad)  
  41fd79:	pop    ebx
  41fd7a:	pushf  
  41fd7b:	in     al,0x76
  41fd7d:	or     ecx,ecx
  41fd7f:	test   al,0x7
  41fd81:	mov    al,0xb7
  41fd83:	ret    
  41fd84:	(bad)  
  41fd85:	sub    al,0x4
  41fd87:	aaa    
  41fd88:	in     eax,0xe3
  41fd8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8b:	repz mov bl,0x18
  41fd8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd8f:	ins    BYTE PTR es:[edi],dx
  41fd90:	fisub  DWORD PTR [ecx+0x6e]
  41fd93:	ds aaa 
  41fd95:	in     eax,dx
  41fd96:	outs   dx,DWORD PTR es:[esi]
  41fd98:	imul   esi,DWORD PTR [eax-0x22374a51],0x29c71014
  41fda2:	push   esi
  41fda3:	fnstsw WORD PTR [edx]
  41fda5:	rcl    BYTE PTR [esi+0x48],0x78
  41fda9:	out    dx,al
  41fdaa:	jle    0x41fdf0
  41fdac:	popa   
  41fdad:	lahf   
  41fdae:	int3   
  41fdaf:	popa   
  41fdb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdb1:	call   0xb702:0xbc0a1459
  41fdb8:	js     0x41fd8e
  41fdba:	(bad)  
  41fdbb:	push   ecx
  41fdbc:	jo     0x41fdcb
  41fdbe:	and    eax,0x339c8610
  41fdc3:	jne    0x41fdb3
  41fdc5:	shr    BYTE PTR [ecx],1
  41fdc7:	jl     0x41fda2
  41fdc9:	mov    al,0x90
  41fdcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdcc:	add    eax,0x55acd4dd
  41fdd1:	imul   ecx,edx,0xec363fcf
  41fdd7:	fld    QWORD PTR [ebx+0x5645371f]
  41fddd:	inc    edx
  41fdde:	adc    DWORD PTR [edi+0x68],edx
  41fde1:	jbe    0x41fddd
  41fde3:	pop    edx
  41fde4:	clc    
  41fde5:	icebp  
  41fde6:	sbb    eax,0xcb896920
  41fdeb:	sub    DWORD PTR [edi],0xffffff8e
  41fdee:	cmp    bl,BYTE PTR [ecx+0xe]
  41fdf1:	in     eax,dx
  41fdf2:	loop   0x41fe6d
  41fdf4:	call   0x1d47100a
  41fdf9:	jp     0x41fddd
  41fdfb:	lods   al,BYTE PTR ds:[esi]
  41fdfc:	(bad)  
  41fdfd:	xchg   ecx,eax
  41fdfe:	push   ecx
  41fdff:	xor    edx,DWORD PTR [ebx-0x2620a829]
  41fe05:	push   0xf7dcff43
  41fe0a:	ror    BYTE PTR fs:[esi+0x4d0bce35],1
  41fe11:	lea    esi,[eax-0x52fc82]
  41fe17:	ja     0x41fdb2
  41fe19:	ss mov ebx,0xc2e094ed
  41fe1f:	fs (bad) 
  41fe21:	lahf   
  41fe22:	mov    dl,0xbe
  41fe24:	push   ss
  41fe25:	arpl   WORD PTR [edi],ax
  41fe27:	and    eax,edx
  41fe29:	scas   eax,DWORD PTR es:[edi]
  41fe2a:	inc    ecx
  41fe2b:	pop    ebx
  41fe2c:	and    BYTE PTR [ebx+0x42],dl
  41fe2f:	lea    edx,[ecx-0x17]
  41fe32:	jg     0x41fe13
  41fe34:	lahf   
  41fe35:	fucomp st(1)
  41fe37:	mov    eax,ds:0x7ff50a88
  41fe3c:	jb     0x41feb5
  41fe3e:	test   BYTE PTR [eax-0x7ec0f462],0x7d
  41fe45:	arpl   WORD PTR [ecx+eiz*8],di
  41fe48:	adc    al,0x36
  41fe4a:	shl    BYTE PTR [esi+eax*2+0x74f0a5e9],1
  41fe51:	pop    ss
  41fe52:	or     al,0x27
  41fe54:	js     0x41fe93
  41fe56:	sar    DWORD PTR [edi+0x6520d1ad],0x77
  41fe5d:	mov    ebx,0x8946d474
  41fe62:	push   0xfa7e8de4
  41fe67:	shl    DWORD PTR [esi+0x23a8427d],1
  41fe6d:	adc    bl,BYTE PTR [ebp+eax*2-0x3e]
  41fe71:	adc    ah,BYTE PTR [esi]
  41fe73:	sbb    ebx,DWORD PTR [eax-0x40]
  41fe76:	mov    eax,ds:0x426ab862
  41fe7b:	iret   
  41fe7c:	mov    esp,0x1a09ed4f
  41fe81:	fxtract 
  41fe83:	stc    
  41fe84:	push   eax
  41fe85:	fidivr DWORD PTR [ebp+0x445a7439]
  41fe8b:	arpl   WORD PTR [esi],sp
  41fe8d:	and    ah,0x82
  41fe90:	sbb    eax,0xd02bb57b
  41fe95:	push   esi
  41fe96:	push   ss
  41fe97:	repz jg 0x41fe26
  41fe9a:	in     al,dx
  41fe9b:	mov    cl,0xce
  41fe9d:	or     BYTE PTR [edi+0x3a831e92],dh
  41fea3:	xor    ecx,DWORD PTR [ebp-0x4fe44018]
  41fea9:	xchg   ecx,eax
  41feab:	outs   dx,BYTE PTR ds:[esi]
  41feac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fead:	xor    dl,dh
  41feaf:	cmp    al,0xba
  41feb1:	mov    ebp,0xe3d1b49f
  41feb6:	ret    0x83d9
  41feb9:	xor    ah,bh
  41febb:	ss inc edx
  41febd:	add    BYTE PTR [edi],dh
  41febf:	repnz mov esi,0xdaac80bd
  41fec5:	push   edi
  41fec6:	or     eax,0x1d1d9c76
  41fecb:	sbb    esp,DWORD PTR [ebp-0x8]
  41fece:	ss dec edx
  41fed0:	outs   dx,DWORD PTR ds:[esi]
  41fed1:	fs mov al,0x47
  41fed4:	retf   
  41fed5:	(bad)  
  41fed6:	test   DWORD PTR [eax-0x27d3c6a0],0xb106cddc
  41fee0:	pop    es
  41fee1:	ret    
  41fee2:	(bad)  [edi]
  41fee4:	stos   DWORD PTR es:[edi],eax
  41fee5:	(bad)  
  41fee6:	in     al,0x83
  41fee8:	sbb    edi,ebp
  41feea:	(bad)  
  41feeb:	in     al,dx
  41feec:	mov    ebx,0xd0131f86
  41fef1:	add    DWORD PTR [eax-0x6f],ebx
  41fef4:	sub    eax,0xec36fac1
  41fef9:	ja     0x41febf
  41fefb:	jg     0x41ff17
  41fefd:	jge    0x41fec1
  41feff:	mov    edx,esp
  41ff01:	fcom   DWORD PTR [ebp+0x61]
  41ff04:	and    al,0x70
  41ff06:	xor    al,BYTE PTR [ebp+0x7fcc2ec2]
  41ff0c:	cmp    eax,0xd5fad12e
  41ff11:	test   BYTE PTR [esi],0xdf
  41ff14:	int    0xb6
  41ff16:	shr    DWORD PTR [esi],cl
  41ff18:	sub    ebp,DWORD PTR [ebp+0x203409f2]
  41ff1e:	loop   0x41ff9a
  41ff20:	pop    ss
  41ff21:	in     al,0x95
  41ff23:	adc    eax,DWORD PTR [ebx-0x3b]
  41ff26:	mov    ebx,0x130bd813
  41ff2b:	stc    
  41ff2c:	xor    edx,ebx
  41ff2e:	fistp  QWORD PTR ds:0x6b6adbed
  41ff34:	fadd   QWORD PTR [ebx+0x5098cb65]
  41ff3a:	or     BYTE PTR [esi+ebp*8],dl
  41ff3d:	mov    ?,WORD PTR [edx]
  41ff3f:	mov    esi,0xf7fb45c3
  41ff44:	inc    esi
  41ff45:	push   esp
  41ff46:	sti    
  41ff47:	mov    cl,0x1c
  41ff49:	imul   edi,ecx,0xffffff94
  41ff4c:	jecxz  0x41ff94
  41ff4e:	call   0x1d1d:0x179d712d
  41ff55:	sbb    bl,BYTE PTR [ecx+0x122bfb7b]
  41ff5b:	mov    ebp,0x18f8bf37
  41ff60:	pop    esp
  41ff61:	ja     0x41ff13
  41ff63:	ins    DWORD PTR es:[edi],dx
  41ff64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff65:	leave  
  41ff66:	call   0xf2f5:0x5969be87
  41ff6d:	imul   ebx,esp,0xfffffffc
  41ff70:	cli    
  41ff71:	xchg   ecx,eax
  41ff72:	(bad)  
  41ff73:	mov    edx,0xef26db62
  41ff78:	xchg   eax,esp
  41ff7a:	xchg   ebx,eax
  41ff7b:	pop    ebx
  41ff7c:	add    BYTE PTR [edi-0x67227e4],bh
  41ff82:	ficom  WORD PTR [ebx+0x41]
  41ff85:	xlat   BYTE PTR ds:[ebx]
  41ff86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff87:	sub    bh,BYTE PTR [edx-0x62]
  41ff8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff8b:	mov    WORD PTR [esi+0x43a070a0],fs
  41ff91:	call   DWORD PTR [esi+edx*4]
  41ff94:	fnstsw WORD PTR [esi+0x60]
  41ff97:	fadd   QWORD PTR [edx]
  41ff99:	arpl   WORD PTR [edi-0x5a31fb00],sp
  41ff9f:	sub    al,BYTE PTR [eax+esi*8-0x2e153f45]
  41ffa6:	ja     0x41ffc2
  41ffa8:	jae    0x420010
  41ffaa:	repnz fadd QWORD PTR [ecx+0x739eecf7]
  41ffb1:	jp     0x420026
  41ffb3:	xor    ebp,DWORD PTR [edx]
  41ffb5:	mov    bh,0x76
  41ffb7:	aas    
  41ffb8:	mov    cl,0x5
  41ffba:	and    edi,eax
  41ffbc:	iret   
  41ffbd:	stos   DWORD PTR es:[edi],eax
  41ffbe:	test   al,0xd0
  41ffc0:	ja     0x41ff65
  41ffc2:	loopne 0x41ffe3
  41ffc4:	es jg  0x41ff86
  41ffc7:	push   ecx
  41ffc8:	ins    BYTE PTR es:[edi],dx
  41ffc9:	lods   al,BYTE PTR ds:[esi]
  41ffca:	mov    cl,0x38
  41ffcc:	mov    ch,0xe9
  41ffce:	fbstp  TBYTE PTR [edi-0x47]
  41ffd1:	mov    ecx,0xf39e0f21
  41ffd6:	fmul   QWORD PTR [edi-0x1c9f8587]
  41ffdc:	(bad)  
  41ffdd:	fsubr  QWORD PTR [ecx-0x2]
  41ffe0:	loope  0x42002f
  41ffe2:	mov    bh,0x83
  41ffe4:	add    DWORD PTR [eax],esp
  41ffe6:	in     eax,dx
  41ffe7:	and    eax,0xa24b51e
  41ffec:	mov    eax,ds:0x5d4ec279
  41fff1:	xchg   esi,eax
  41fff2:	retf   
  41fff3:	and    dh,dh
  41fff5:	pop    es
  41fff6:	mov    ah,al
  41fff8:	sti    
  41fff9:	sub    BYTE PTR [ebx-0x3ed417b3],cl
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0x9204fb0a
  420121:	jmp    0x83c2b72c
  420126:	divps  xmm0,XMMWORD PTR [ebx-0x427e7f7d]
  42012d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42012e:	mov    ebp,0x2f75bed6
  420133:	je     0x4201ae
  420135:	loopne 0x420181
  420137:	ins    DWORD PTR es:[edi],dx
  420138:	mov    ds:0xf037f01,al
  42013d:	scas   al,BYTE PTR es:[edi]
  42013e:	std    
  42013f:	pop    es
  420140:	add    DWORD PTR [ebx+0x48],0xa443521b
  420147:	jb     0x42016a
  420149:	outs   dx,BYTE PTR ds:[esi]
  42014a:	scas   al,BYTE PTR es:[edi]
  42014b:	mov    dh,0x5a
  42014d:	adc    ecx,DWORD PTR [eax]
  42014f:	rcl    BYTE PTR [edi],1
  420151:	dec    ecx
  420152:	arpl   WORD PTR [eax+esi*4-0x423b0be3],dx
  420159:	test   esi,ebx
  42015b:	sub    DWORD PTR [edi],ecx
  42015d:	loop   0x4200f9
  42015f:	cmp    al,0x9d
  420161:	pop    ebp
  420162:	(bad)  
  420163:	cld    
  420164:	popa   
  420165:	sub    eax,0x49a5d91a
  42016a:	out    dx,al
  42016b:	pop    esi
  42016c:	or     cl,bl
  42016e:	adc    eax,0xce59dca
  420173:	or     eax,0xafbd2463
  420178:	cmc    
  420179:	call   0x3c3c:0x96ef8ae0
  420180:	cmp    ebp,0x365e743e
  420186:	pop    esp
  420187:	ds xchg edi,eax
  420189:	rcl    al,1
  42018b:	ret    0x54c4
  42018e:	gs inc ecx
  420190:	adc    DWORD PTR [esi+0x3b],0xffffffef
  420194:	punpcklwd mm3,DWORD PTR [esi+0x7b]
  420198:	es xchg edi,eax
  42019a:	(bad)  
  42019b:	sbb    BYTE PTR [ecx+0x7],0xe8
  42019f:	das    
  4201a0:	add    ah,0x18
  4201a3:	push   edi
  4201a4:	gs pusha 
  4201a6:	xchg   edi,eax
  4201a7:	mov    al,0x6e
  4201a9:	push   cs
  4201aa:	cmp    DWORD PTR [edx],eax
  4201ac:	xor    edi,DWORD PTR [ebp+0x31]
  4201af:	dec    edx
  4201b0:	pop    es
  4201b1:	stos   DWORD PTR es:[edi],eax
  4201b2:	jne    0x42014c
  4201b4:	cmp    BYTE PTR [esi],dl
  4201b6:	cmp    BYTE PTR [ebp+0x477be366],ah
  4201bc:	aam    0xbd
  4201be:	ror    WORD PTR [esi-0x775749d0],cl
  4201c5:	xor    ch,BYTE PTR ds:0x369c305a
  4201cb:	xchg   ebp,eax
  4201cc:	icebp  
  4201cd:	or     BYTE PTR [eax],bl
  4201cf:	and    eax,0x358ebc5f
  4201d4:	inc    ecx
  4201d5:	mov    ebx,0xb8143fb2
  4201da:	inc    esp
  4201db:	cmp    DWORD PTR [esi],eax
  4201dd:	inc    BYTE PTR [edx]
  4201df:	cmp    dh,0xf9
  4201e2:	fwait
  4201e3:	and    ax,0x6d3e
  4201e7:	iret   
  4201e8:	mov    ds:0xc23530ae,al
  4201ed:	inc    esp
  4201ee:	stc    
  4201ef:	imul   esi,DWORD PTR [ebx-0x1c],0xffffff9d
  4201f3:	sub    ebp,0x2d
  4201f6:	cli    
  4201f7:	cmp    bh,BYTE PTR ss:[eax-0x4baaa605]
  4201fe:	cmp    esi,esp
  420200:	sub    al,0x15
  420202:	je     0x4201a2
  420204:	loopne 0x420228
  420206:	inc    esp
  420207:	cwde   
  420208:	stos   BYTE PTR es:[edi],al
  420209:	(bad)  
  42020a:	push   ds
  42020b:	jno    0x420190
  42020d:	jae    0x4201c5
  42020f:	out    0xf2,eax
  420211:	mov    edx,0x4d0d9ec7
  420216:	fistp  QWORD PTR [eax+0x9]
  420219:	arpl   dx,ax
  42021b:	push   ds
  42021c:	fisubr DWORD PTR [edx-0x5dee0c49]
  420222:	inc    edx
  420223:	addr16 mov cl,0xa4
  420226:	mov    ch,0xbc
  420228:	nop
  420229:	outs   dx,BYTE PTR ds:[esi]
  42022a:	add    edx,edi
  42022c:	push   eax
  42022d:	outs   dx,BYTE PTR ds:[esi]
  42022e:	push   edi
  42022f:	ds pop es
  420231:	push   edx
  420232:	(bad)  
  420233:	lahf   
  420234:	xchg   ebx,eax
  420235:	inc    esi
  420236:	mov    ebx,0x238b00d8
  42023b:	push   0x46
  42023d:	sbb    cl,ch
  42023f:	mov    eax,0x28723b64
  420244:	push   edi
  420245:	fcom   st(2)
  420247:	xor    DWORD PTR [edx],0x6
  42024a:	xchg   BYTE PTR [ebx-0x25],dh
  42024d:	loopne 0x420280
  42024f:	inc    esi
  420250:	(bad)  
  420251:	xor    eax,0xe7d0d685
  420256:	inc    ebp
  420257:	dec    ecx
  420258:	xchg   ebp,eax
  420259:	into   
  42025a:	xchg   BYTE PTR [edx],bl
  42025c:	and    al,0x61
  42025e:	adc    BYTE PTR [esi+eax*4-0x34],dh
  420262:	and    esi,edi
  420264:	cmp    al,0x79
  420266:	push   0xffffff82
  420268:	sub    DWORD PTR [edi-0xc6cbc97],edi
  42026e:	sbb    eax,0x11626417
  420273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420274:	mov    ebp,esi
  420276:	jg     0x4201fb
  420278:	int    0xc1
  42027a:	lock jmp 0xac8b:0x84579b5
  420282:	loopne 0x4202dc
  420284:	adc    cl,BYTE PTR [eax]
  420286:	cmp    cl,bl
  420288:	aaa    
  420289:	or     BYTE PTR [esi],bl
  42028b:	mov    ah,0xc8
  42028d:	jne    0x420309
  42028f:	inc    ebx
  420290:	add    eax,0xe72c33a1
  420295:	and    DWORD PTR [ebx-0x706a06fe],ebp
  42029b:	lea    ebp,[ebx+0x384af7e9]
  4202a1:	xchg   ecx,eax
  4202a2:	and    DWORD PTR [edi],0xe8344653
  4202a8:	out    0xbf,eax
  4202aa:	iret   
  4202ab:	arpl   bp,di
  4202ad:	(bad)  
  4202ae:	rol    edi,1
  4202b0:	or     ch,ch
  4202b2:	or     ecx,ebp
  4202b4:	push   ss
  4202b5:	pop    ds
  4202b6:	js     0x420285
  4202b8:	mov    WORD PTR [esi+0x2d],?
  4202bb:	jnp    0x42032c
  4202bd:	xor    al,0x54
  4202bf:	rcr    DWORD PTR [esp+eiz*8],cl
  4202c2:	popf   
  4202c3:	inc    esp
  4202c4:	dec    ebp
  4202c5:	es push cs
  4202c7:	push   ds
  4202c8:	aaa    
  4202c9:	push   ds
  4202ca:	xchg   esi,eax
  4202cb:	sar    esi,cl
  4202cd:	pushf  
  4202ce:	mov    ecx,0x2398c5ed
  4202d3:	xchg   ebx,eax
  4202d4:	inc    edi
  4202d5:	inc    eax
  4202d6:	dec    eax
  4202d7:	sahf   
  4202d8:	hlt    
  4202d9:	push   DWORD PTR ds:0xadbf9b64
  4202df:	sbb    BYTE PTR [edi+0x3c856114],cl
  4202e5:	dec    eax
  4202e6:	xlat   BYTE PTR ds:[ebx]
  4202e7:	ds out 0xe5,al
  4202ea:	mov    cl,0x2b
  4202ec:	jg     0x4202ff
  4202ee:	mov    ch,0x18
  4202f0:	aas    
  4202f1:	sub    bl,cl
  4202f3:	inc    edi
  4202f4:	add    al,0x79
  4202f6:	and    al,0xf0
  4202f8:	stc    
  4202f9:	mov    al,0x4b
  4202fb:	pop    ds
  4202fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202fd:	leave  
  4202fe:	fnstsw WORD PTR [edx+0x3c]
  420301:	adc    bh,0xc
  420304:	imul   edx,DWORD PTR ds:0x1e89ea76,0x1c9681cb
  42030e:	pushf  
  42030f:	rol    BYTE PTR [esi-0x10],1
  420312:	pop    esp
  420314:	sti    
  420315:	mov    ds:0x368a1b62,eax
  42031a:	pop    ss
  42031b:	mov    eax,0x3bbe0b45
  420320:	push   ebp
  420321:	xor    esi,DWORD PTR [edi-0x7e]
  420324:	and    eax,0x40411931
  420329:	adc    al,0x19
  42032b:	aad    0xb7
  42032d:	out    0xb8,al
  42032f:	ror    DWORD PTR [eax+0x4980add8],0x16
  420336:	test   ch,cl
  420338:	dec    ecx
  420339:	popf   
  42033a:	fist   WORD PTR [esi-0x4d]
  42033d:	cs mov gs:0x668ed005,al
  420344:	ret    
  420345:	xor    al,0x5b
  420347:	inc    edi
  420348:	jae    0x4202ea
  42034a:	addr16 or ebx,ebx
  42034d:	ins    DWORD PTR es:[edi],dx
  42034e:	jno    0x4203b7
  420350:	test   dh,al
  420352:	call   0x40101f7e
  420357:	scas   al,BYTE PTR es:[edi]
  420358:	add    ecx,DWORD PTR [eax+0x16]
  42035b:	and    bl,BYTE PTR [edi-0xa]
  42035e:	lea    ebx,[eax+0x4b04462b]
  420364:	std    
  420365:	adc    esi,DWORD PTR [edx]
  420367:	shl    DWORD PTR [eax+0x36],0x42
  42036b:	arpl   WORD PTR ds:0x3aec70bb,sp
  420371:	pusha  
  420372:	jae    0x420308
  420374:	test   al,0xfa
  420376:	inc    esi
  420377:	je     0x4203c6
  420379:	and    ax,0xf943
  42037d:	test   BYTE PTR [edi-0x1],0xd0
  420381:	lds    ecx,FWORD PTR [edi-0x118de339]
  420387:	sub    esi,esi
  420389:	into   
  42038a:	das    
  42038b:	dec    edx
  42038c:	daa    
  42038d:	outs   dx,DWORD PTR ds:[esi]
  42038e:	frstor [ebp-0x3f]
  420391:	call   0x17ca:0x9f3483fc
  420398:	sub    eax,0x7a701f60
  42039d:	and    BYTE PTR [edi*8+0x669093b9],dh
  4203a4:	repz xchg ebx,eax
  4203a6:	mov    bh,0x4d
  4203a8:	inc    ecx
  4203a9:	test   eax,0x4e31b3ad
  4203af:	je     0x420338
  4203b1:	inc    esp
  4203b2:	cmp    eax,eax
  4203b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203b5:	bound  ecx,QWORD PTR [eax]
  4203b7:	retf   0x6244
  4203ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203bb:	mov    cl,0x5c
  4203bd:	jne    0x420431
  4203bf:	adc    eax,0xd881be7c
  4203c4:	push   edi
  4203c5:	sti    
  4203c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203c7:	std    
  4203c8:	jnp    0x4203fa
  4203ca:	int    0x1a
  4203cc:	xor    dh,BYTE PTR [ecx-0x13]
  4203cf:	call   0x2462b3e8
  4203d4:	cmc    
  4203d5:	jns    0x42036f
  4203d7:	xlat   BYTE PTR ds:[ebx]
  4203d8:	fisttp WORD PTR [eax-0x2ac4f519]
  4203de:	outs   dx,BYTE PTR ds:[esi]
  4203df:	outs   dx,BYTE PTR ds:[esi]
  4203e0:	enter  0x4ef0,0x93
  4203e4:	cmp    edi,ecx
  4203e6:	mov    edi,0x19b4ec6
  4203eb:	test   BYTE PTR [edi],dl
  4203ed:	pop    esi
  4203ee:	(bad)
  4203f1:	shr    BYTE PTR [ebp+0x5640202f],1
  4203f7:	jne    0x4203a7
  4203f9:	iret   
  4203fa:	push   esp
  4203fb:	jbe    0x420426
  4203fd:	jecxz  0x420433
  4203ff:	mov    ch,0xf7
  420401:	jb     0x420399
  420403:	cmp    eax,0x6d722654
  420408:	in     eax,dx
  420409:	ret    0x50a4
  42040c:	sbb    al,ch
  42040e:	mov    ebp,0x6aa30a3c
  420413:	(bad)  
  420414:	fild   WORD PTR [esp+eax*4+0x6c]
  420418:	in     eax,0xba
  42041a:	push   ds
  42041b:	bound  ebp,QWORD PTR [ecx]
  42041d:	(bad)  
  42041e:	mov    ebp,DWORD PTR [edx]
  420420:	mov    edx,0x9afb1877
  420425:	rcr    DWORD PTR [esi+0x6a],cl
  420428:	pop    ecx
  420429:	in     eax,dx
  42042a:	iret   
  42042b:	mov    al,0x9
  42042d:	call   ebp
  42042f:	retf   
  420430:	mov    eax,0x1c2c6b0a
  420435:	out    dx,al
  420436:	into   
  420437:	iret   
  420438:	ror    DWORD PTR [edi+0x3c],cl
  42043b:	ds scas eax,DWORD PTR es:[edi]
  42043d:	xchg   edx,eax
  42043e:	inc    ebx
  42043f:	ds mov edi,0x85074dfc
  420445:	mov    ds:0x298973ae,al
  42044a:	mov    ds:0xfc21da8,eax
  42044f:	and    BYTE PTR [edx-0x601eb281],dh
  420455:	mov    ds:0x2635ddf4,al
  42045a:	add    DWORD PTR [eax],0xace62de2
  420460:	xchg   edi,eax
  420461:	push   edi
  420462:	mov    edx,0xe882c41
  420467:	and    ecx,ecx
  420469:	mov    eax,0xe9baaf9b
  42046e:	adc    dh,al
  420470:	stc    
  420471:	jnp    0x420403
  420473:	mov    eax,ds:0x75d3634a
  420478:	pop    ss
  420479:	push   0xd0f82a07
  42047e:	in     eax,dx
  42047f:	jbe    0x42040c
  420481:	and    DWORD PTR [ebx-0x2e],0x21048573
  420488:	sub    DWORD PTR [esi-0x23],esp
  42048b:	xor    dl,BYTE PTR [esi+ebx*8+0x3a8f53ab]
  420492:	clc    
  420493:	imul   esp,DWORD PTR ds:0xaf0dcff0,0xdfbd5b42
  42049d:	mov    ds:0x22f828e1,eax
  4204a2:	mov    al,0xe0
  4204a4:	cmp    BYTE PTR [esi],dh
  4204a6:	ins    DWORD PTR es:[edi],dx
  4204a7:	into   
  4204a8:	adc    DWORD PTR [ebx-0x1a],ebp
  4204ab:	int    0xca
  4204ad:	test   bh,dh
  4204af:	data16 xchg BYTE PTR [ebp+edi*4+0x60d3fb8e],bh
  4204b7:	sub    al,BYTE PTR [eax]
  4204b9:	mov    eax,ds:0x29d6ff6f
  4204be:	out    0x9f,al
  4204c0:	mov    esi,0xb6174307
  4204c5:	add    cl,cl
  4204c7:	popa   
  4204c8:	in     al,dx
  4204c9:	xor    ecx,esi
  4204cb:	inc    ecx
  4204cc:	leave  
  4204cd:	cmp    BYTE PTR ds:0xaec94835,0x38
  4204d4:	push   cs
  4204d5:	and    cl,BYTE PTR [ebx]
  4204d7:	hlt    
  4204d8:	add    ecx,DWORD PTR [edx-0x4790b29d]
  4204de:	shl    DWORD PTR [eax-0x5bf01fe4],cl
  4204e4:	mov    fs,ebp
  4204e6:	mov    ?,WORD PTR [ecx-0x7c]
  4204e9:	pop    eax
  4204ea:	mov    ebx,0xc4aa8bd
  4204ef:	(bad)  
  4204f0:	fisubr DWORD PTR [edx+0x1437c3e7]
  4204f6:	aad    0xc9
  4204f8:	outs   dx,BYTE PTR ds:[esi]
  4204f9:	mov    WORD PTR [edi+eiz*8],gs
  4204fc:	push   0x64
  4204fe:	das    
  4204ff:	jecxz  0x4204e3
  420501:	xchg   edi,eax
  420502:	std    
  420503:	stos   BYTE PTR es:[edi],al
  420504:	leave  
  420505:	and    DWORD PTR [ecx-0x2172846e],edx
  42050b:	(bad)  
  42050c:	xchg   esp,esi
  42050e:	mov    ebp,0xcdbb5d70
  420513:	out    0x56,al
  420515:	mov    edx,DWORD PTR [eax-0x492417fc]
  42051b:	mov    bh,0x51
  42051d:	jp     0x420563
  42051f:	adc    DWORD PTR [eax-0x58],0xa
  420523:	push   ds
  420524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420525:	scas   eax,DWORD PTR es:[edi]
  420526:	out    dx,al
  420527:	lds    esp,FWORD PTR [esi+0x4f29b36d]
  42052d:	jns    0x42056d
  42052f:	pop    ss
  420530:	ret    
  420531:	and    DWORD PTR [eax+0x4b],0xb2d7a8a3
  420538:	jecxz  0x4204f2
  42053a:	or     dx,di
  42053d:	mov    eax,0xecd8187f
  420542:	popf   
  420543:	leave  
  420544:	pop    ebp
  420545:	out    0x47,eax
  420547:	xchg   ecx,eax
  420548:	rcl    DWORD PTR [edi-0x3b2449a0],0x90
  42054f:	inc    edi
  420550:	push   esp
  420551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420552:	inc    ecx
  420553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420554:	ja     0x42050b
  420556:	adc    bh,BYTE PTR [edx+0x400baa54]
  42055c:	pop    ebp
  42055d:	mov    eax,ds:0x7da9c19b
  420562:	push   esi
  420563:	lock outs dx,BYTE PTR ds:[esi]
  420565:	mov    cl,0x9f
  420567:	xor    al,0xa7
  420569:	push   ebp
  42056a:	xor    dl,BYTE PTR [ebp+0x7a92a97b]
  420570:	cdq    
  420571:	repz xor BYTE PTR [eax],dl
  420574:	xchg   ecx,eax
  420575:	in     al,dx
  420576:	mov    ds:0xee9cc17d,al
  42057b:	inc    edi
  42057c:	cmp    eax,0x88131fde
  420581:	daa    
  420582:	xor    BYTE PTR [ebx],ch
  420584:	inc    eax
  420585:	test   BYTE PTR [edx-0x66],bh
  420588:	cmp    DWORD PTR [edx],ebx
  42058a:	in     eax,0x8f
  42058c:	add    al,0xbf
  42058e:	sbb    BYTE PTR [edx-0x54],dl
  420591:	cmp    al,0xdc
  420593:	add    bl,bl
  420595:	xchg   edx,eax
  420596:	or     ah,BYTE PTR [edi]
  420598:	pop    ebx
  420599:	div    BYTE PTR [ecx-0x4521e103]
  42059f:	mov    ebx,0x54107e3c
  4205a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205a5:	or     BYTE PTR [ecx-0x62],bh
  4205a8:	dec    ebp
  4205a9:	dec    ebp
  4205aa:	inc    esp
  4205ab:	jbe    0x420531
  4205ad:	jnp    0x4205e6
  4205af:	cmp    al,0xce
  4205b1:	ss hlt 
  4205b3:	das    
  4205b4:	mov    eax,ds:0xf195b245
  4205b9:	sub    BYTE PTR [edi-0x65],al
  4205bc:	imul   ecx,DWORD PTR [ebp+0x44],0xbc8b821e
  4205c3:	(bad)  
  4205c4:	pushf  
  4205c5:	add    cl,BYTE PTR [esp+eiz*8-0x6022f174]
  4205cc:	adc    ch,dl
  4205ce:	pop    esi
  4205cf:	out    dx,eax
  4205d0:	rcl    esp,cl
  4205d2:	and    dl,BYTE PTR ds:0x772f321f
  4205d8:	xor    DWORD PTR [ebx-0x72271056],edi
  4205de:	xor    edx,esi
  4205e0:	xchg   BYTE PTR [ecx+0x2c],bl
  4205e3:	inc    edi
  4205e4:	push   esp
  4205e5:	inc    ecx
  4205e6:	push   ebx
  4205e7:	sahf   
  4205e8:	sbb    eax,0x6d094ec4
  4205ed:	stos   BYTE PTR es:[edi],al
  4205ee:	lock pop ecx
  4205f0:	iret   
  4205f1:	ins    DWORD PTR es:[edi],dx
  4205f2:	imul   edx,DWORD PTR [edx+0xc9dc7ce],0x79
  4205f9:	imul   edi,DWORD PTR [edx-0x58d6f5e3],0x50
  420600:	enter  0xb5c2,0xc5
  420604:	pop    esi
  420605:	stc    
  420606:	in     al,dx
  420607:	ins    BYTE PTR es:[edi],dx
  420608:	jnp    0x42067b
  42060a:	mul    DWORD PTR [edx+0x2d]
  42060d:	es cdq 
  42060f:	test   ah,0xd4
  420612:	sub    eax,0x14732ea7
  420617:	or     al,0xf6
  420619:	fidiv  WORD PTR [eax]
  42061b:	jmp    0x420664
  42061d:	mov    ecx,0x9a623175
  420622:	dec    ebx
  420623:	rcr    BYTE PTR [ecx+0x76],0x86
  420627:	shl    edi,1
  420629:	js     0x4205e0
  42062b:	cmc    
  42062c:	mov    cl,0x2c
  42062e:	push   edi
  42062f:	data16 sub al,0x3f
  420632:	jns    0x4205d8
  420634:	inc    ebp
  420635:	dec    esi
  420636:	push   0xd37762a9
  42063b:	scas   al,BYTE PTR es:[edi]
  42063c:	cmp    eax,0x870dc98f
  420641:	xchg   DWORD PTR [ecx-0x17a80d4],edx
  420647:	inc    esi
  420648:	mov    ebp,0x9260569
  42064d:	sahf   
  42064e:	int    0xe0
  420650:	in     eax,dx
  420651:	push   cs
  420652:	mov    WORD PTR [ebp-0x69],fs
  420655:	or     edi,DWORD PTR [esi-0x51]
  420658:	push   ecx
  420659:	jae    0x420648
  42065b:	jl     0x42069c
  42065d:	loop   0x42064b
  42065f:	or     BYTE PTR [esi+esi*2],dh
  420662:	xchg   ebx,eax
  420663:	jmp    0xaf42a556
  420668:	mov    BYTE PTR [edi+eax*8+0x3242185b],ah
  42066f:	mov    bh,0x46
  420671:	ss jae 0x420654
  420674:	mov    esp,0xd5cf63d7
  420679:	or     ebx,ebp
  42067b:	mov    cl,0x2
  42067d:	mov    ax,ds:0xf04ab0
  420683:	cmp    ecx,0x24
  420686:	mov    eax,0x5fd15bc3
  42068b:	push   0x308410ac
  420690:	mov    WORD PTR [ecx-0x7e],ds
  420693:	mov    ah,0x93
  420695:	sbb    ebp,esi
  420697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420698:	mov    esi,0xe09a30b1
  42069d:	push   esp
  42069e:	aad    0x51
  4206a0:	push   ss
  4206a1:	shl    DWORD PTR es:[ebp+0x1a],cl
  4206a5:	icebp  
  4206a6:	xor    BYTE PTR [edi-0x3b63e829],cl
  4206ac:	pop    eax
  4206ad:	mov    esi,0x54968121
  4206b2:	les    esi,FWORD PTR [edi-0x7b92b48e]
  4206b8:	dec    esi
  4206b9:	out    dx,eax
  4206ba:	repz jno 0x42066e
  4206bd:	mov    edx,0x7c7076b9
  4206c2:	mov    ah,0x95
  4206c4:	pop    edi
  4206c5:	out    dx,eax
  4206c6:	mov    esp,0x34459bb7
  4206cb:	jmp    0x3b3513fe
  4206d0:	jmp    0x4206dd
  4206d2:	pushf  
  4206d3:	pushf  
  4206d4:	shr    DWORD PTR [si],0xa0
  4206d8:	jno    0x420680
  4206da:	adc    DWORD PTR [esi-0x6b9b94c],ebx
  4206e0:	sar    BYTE PTR [edx],cl
  4206e2:	retf   
  4206e3:	vunpcklps xmm6,xmm5,XMMWORD PTR [edx]
  4206e7:	inc    ebp
  4206e8:	outs   dx,BYTE PTR ds:[esi]
  4206e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ea:	icebp  
  4206eb:	aaa    
  4206ec:	inc    ecx
  4206ed:	xchg   edx,eax
  4206ee:	loop   0x420769
  4206f0:	sti    
  4206f1:	(bad)  
  4206f2:	js     0x42074f
  4206f4:	call   0xbabe:0x706c0f6b
  4206fb:	push   eax
  4206fc:	lea    esp,[eax+0x4b]
  4206ff:	and    eax,0xad445705
  420704:	cmp    cl,ch
  420706:	mov    edi,DWORD PTR [ebp-0x64ed999f]
  42070c:	fdiv   QWORD PTR [esi+0x34]
  42070f:	cmp    bh,dl
  420711:	in     eax,dx
  420712:	fs add al,0x7c
  420715:	sbb    BYTE PTR [ecx+0x5d22085f],0x6d
  42071c:	jno    0x420797
  42071e:	cmp    ah,BYTE PTR [ecx+0x9c81cd4]
  420724:	test   al,cl
  420726:	test   DWORD PTR [eax-0x28],ebx
  420729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42072a:	and    ebx,DWORD PTR [edx-0x296a222c]
  420730:	fbld   TBYTE PTR [ebx-0x15]
  420733:	cmp    DWORD PTR [edx+0x47],edx
  420736:	sbb    DWORD PTR [ebp+0x70],esp
  420739:	jge    0x42074e
  42073b:	in     al,dx
  42073c:	mov    bl,0xa1
  42073e:	mov    esi,0xdd8b94ef
  420743:	xor    ah,BYTE PTR ds:0x96b0d60e
  420749:	push   edx
  42074a:	add    eax,0xec30cefe
  42074f:	sbb    BYTE PTR [esi],cl
  420751:	rcl    DWORD PTR [esi-0x82ac9b9],cl
  420757:	loopne 0x4206e8
  420759:	add    ebp,DWORD PTR [esi+0x32f6f42f]
  42075f:	mov    ds:0xa6809a9b,al
  420764:	or     eax,0xc60c9d79
  420769:	ins    BYTE PTR es:[edi],dx
  42076a:	or     cl,BYTE PTR [ebx+0x76]
  42076d:	sub    BYTE PTR [esi+0x7a],dh
  420770:	sub    al,0x5
  420772:	adc    WORD PTR [ebp+0x15],ax
  420776:	xchg   BYTE PTR [ebx+0x66],dh
  420779:	sbb    eax,0x14814254
  42077e:	xlat   BYTE PTR ds:[ebx]
  42077f:	cmp    al,0x75
  420781:	outs   dx,BYTE PTR ds:[esi]
  420782:	fsubr  QWORD PTR [eax-0x550362a6]
  420788:	shl    cl,1
  42078a:	cli    
  42078b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42078c:	push   edi
  42078d:	mov    cl,0xce
  42078f:	es sahf 
  420791:	out    dx,eax
  420792:	in     eax,dx
  420793:	fcomp  DWORD PTR [ebx+edi*8]
  420796:	stos   DWORD PTR es:[edi],eax
  420797:	pop    ebx
  420798:	sbb    ch,BYTE PTR ds:0x413873f9
  42079e:	adc    edi,ecx
  4207a0:	ins    BYTE PTR es:[edi],dx
  4207a1:	loope  0x4207f5
  4207a3:	jbe    0x4207e7
  4207a5:	call   ebx
  4207a7:	(bad)  
  4207a8:	test   ebx,0x36a8719
  4207ae:	into   
  4207af:	push   ss
  4207b0:	in     al,dx
  4207b1:	inc    eax
  4207b2:	(bad)  
  4207b3:	cmc    
  4207b4:	mov    edx,0x349afd0e
  4207b9:	jb     0x420839
  4207bb:	dec    esp
  4207bc:	and    BYTE PTR [edi],bh
  4207be:	lahf   
  4207bf:	pop    eax
  4207c0:	popa   
  4207c1:	into   
  4207c2:	jns    0x420818
  4207c4:	inc    eax
  4207c5:	mov    ebx,0x5ee6612f
  4207ca:	bound  eax,QWORD PTR [esi+0x4bee5db1]
  4207d0:	push   0x2d
  4207d2:	stos   BYTE PTR es:[edi],al
  4207d3:	cdq    
  4207d4:	out    dx,eax
  4207d5:	in     al,0x2f
  4207d7:	mov    DWORD PTR [edx-0x3a],esp
  4207da:	retf   
  4207db:	emms   
  4207dd:	dec    ebp
  4207de:	dec    ebp
  4207df:	and    DWORD PTR [ebx],ebx
  4207e1:	ret    0x8e93
  4207e4:	mov    ecx,0x73590ae2
  4207e9:	ror    BYTE PTR [edi],cl
  4207eb:	pop    eax
  4207ec:	xor    eax,0xf6e945e1
  4207f1:	mov    ebp,0x3d83d5bb
  4207f6:	cdq    
  4207f7:	pop    esp
  4207f8:	jle    0x4207a1
  4207fa:	or     DWORD PTR [ecx+0x78b95ac6],0x50028846
  420804:	mov    dh,0xcf
  420806:	scas   eax,DWORD PTR es:[edi]
  420807:	mov    bl,0xa7
  420809:	push   ecx
  42080a:	jae    0x42087c
  42080c:	ret    
  42080d:	icebp  
  42080e:	and    DWORD PTR [edi+eax*2-0x64],ebx
  420812:	cs enter 0x4484,0x2d
  420817:	sub    cl,BYTE PTR [eax-0x1c]
  42081a:	pop    ebp
  42081b:	scas   eax,DWORD PTR es:[edi]
  42081c:	shr    ebx,1
  42081e:	sub    esp,ebx
  420820:	mov    BYTE PTR [esi+0x1db26e0],dh
  420826:	aad    0x6a
  420828:	push   edx
  420829:	loop   0x42087f
  42082b:	xchg   ebp,eax
  42082c:	test   eax,0x6947cfce
  420831:	and    al,BYTE PTR [edx+eiz*8+0x788628f8]
  420838:	xchg   DWORD PTR [ebx-0x868b6be],esp
  42083e:	std    
  42083f:	(bad)  
  420840:	pushf  
  420841:	inc    edi
  420842:	mov    cl,0x65
  420844:	xor    eax,0xb4b836af
  420849:	pop    edi
  42084a:	arpl   si,bp
  42084c:	jge    0x4207d6
  42084e:	sti    
  42084f:	mov    bh,0xb8
  420851:	xor    eax,0xb087d880
  420856:	rcl    BYTE PTR [edi-0x2c],0xbe
  42085a:	int    0x14
  42085c:	sub    al,0x8d
  42085e:	jb     0x420805
  420860:	test   al,0x53
  420862:	mov    dh,BYTE PTR [esi]
  420864:	imul   ebx,DWORD PTR [edx],0xffffffd4
  420867:	xchg   ebp,eax
  420868:	cdq    
  420869:	repnz pop es
  42086b:	lahf   
  42086c:	loop   0x42085a
  42086e:	retf   
  42086f:	(bad)  
  420870:	icebp  
  420871:	mov    dh,0xa5
  420873:	addr16 fcom st(5)
  420876:	outs   dx,BYTE PTR ds:[esi]
  420877:	dec    eax
  420878:	loope  0x4208b1
  42087a:	xchg   edi,edx
  42087c:	popa   
  42087d:	cmp    al,0xd6
  42087f:	gs add al,0xa3
  420882:	xor    dh,BYTE PTR [di+0x3a74]
  420887:	push   ebp
  420888:	cli    
  420889:	int    0xb8
  42088b:	lods   eax,DWORD PTR ds:[esi]
  42088c:	adc    DWORD PTR [esi+0x67],edi
  42088f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420890:	push   es
  420891:	jmp    0x478f:0x100bad46
  420898:	shr    BYTE PTR [ebp-0x92f7d66],0x18
  42089f:	fadd   QWORD PTR [esi+0x71c54dfd]
  4208a5:	ja     0x4208b2
  4208a7:	fs inc ebx
  4208a9:	and    ebp,DWORD PTR [esi+0x5]
  4208ac:	dec    ecx
  4208ad:	adc    BYTE PTR [edi+0x49],cl
  4208b0:	scas   al,BYTE PTR es:[edi]
  4208b1:	(bad)  
  4208b3:	cmp    al,0x80
  4208b5:	mov    ebp,tr2
  4208b8:	jae    0x4208b1
  4208ba:	xor    BYTE PTR [esi+0x7b82d55],0x30
  4208c1:	add    al,0xeb
  4208c3:	popa   
  4208c4:	ret    
  4208c5:	hlt    
  4208c6:	(bad)  
  4208c7:	stos   DWORD PTR es:[edi],eax
  4208c8:	cli    
  4208c9:	fcomi  st,st(4)
  4208cb:	pop    ss
  4208cc:	cs inc ebp
  4208ce:	xchg   edi,eax
  4208cf:	mov    edx,0xa2a35869
  4208d4:	sub    DWORD PTR [edi-0x5ae3294f],ecx
  4208da:	dec    esp
  4208db:	fneni(8087 only) 
  4208dd:	adc    DWORD PTR [esi+0x61],ebp
  4208e0:	adc    eax,0xd7fe5996
  4208e5:	mov    ebp,0x29c13dcf
  4208ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208eb:	loopne 0x4208ec
  4208ed:	scas   al,BYTE PTR es:[edi]
  4208ee:	cld    
  4208ef:	add    eax,0x1cce3480
  4208f4:	test   DWORD PTR [ebp+0x24],ebx
  4208f7:	xchg   edx,eax
  4208f8:	jo     0x420974
  4208fa:	cmp    ch,BYTE PTR ds:0xfd915e33
  420900:	or     al,0x2d
  420902:	add    al,0x40
  420904:	rol    DWORD PTR [ecx+0x50e11a7a],cl
  42090a:	mov    ebx,0xec9e9aad
  42090f:	push   ebp
  420910:	or     eax,0xfad22f8c
  420915:	xor    BYTE PTR [eax+0x53],0xcf
  420919:	(bad)  
  42091a:	ins    BYTE PTR es:[edi],dx
  42091b:	cmc    
  42091c:	stc    
  42091d:	dec    edi
  42091e:	in     al,dx
  42091f:	sbb    al,0x7c
  420921:	call   0x9ac97365
  420926:	xchg   ebp,eax
  420927:	int3   
  420928:	in     al,dx
  420929:	or     BYTE PTR [eax+eiz*8-0x12f711bd],ch
  420930:	mov    edi,0x13865b6f
  420935:	ins    BYTE PTR es:[edi],dx
  420936:	or     al,0xae
  420938:	and    al,0x42
  42093a:	cwde   
  42093b:	sub    eax,0x2c47907
  420940:	inc    ebx
  420941:	enter  0x5c74,0xff
  420945:	les    edx,FWORD PTR [ecx-0x76]
  420948:	aaa    
  420949:	jecxz  0x4208db
  42094b:	in     al,dx
  42094c:	sbb    eax,0xbf094040
  420951:	push   0x43
  420953:	jl     0x4208dc
  420955:	mov    edi,0x829645d0
  42095a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42095b:	call   0xc6bb:0x2dc71fff
  420962:	or     al,0x1d
  420964:	pop    cx
  420966:	out    0xe1,al
  420968:	and    dl,BYTE PTR [edi-0x67]
  42096b:	jecxz  0x420978
  42096d:	xor    eax,0xc2fd6171
  420972:	shl    DWORD PTR [edi+0x559ca64b],1
  420978:	clc    
  420979:	push   ss
  42097a:	mov    ch,0x1
  42097c:	push   0x19a28508
  420981:	(bad)  
  420982:	mov    esi,0xbd4a27d9
  420987:	dec    edi
  420988:	enter  0xb0d0,0x8f
  42098c:	add    ecx,DWORD PTR [eax+0x3c]
  42098f:	lahf   
  420990:	stc    
  420991:	pop    ecx
  420992:	jnp    0x42096e
  420994:	and    BYTE PTR [edx-0x47],0x47
  420998:	fld    QWORD PTR [edi-0x1ea8d667]
  42099e:	jmp    0x6a9:0xc4a33f08
  4209a5:	pop    es
  4209a6:	push   es
  4209a7:	or     al,0xaf
  4209a9:	push   ebp
  4209aa:	dec    ebp
  4209ab:	std    
  4209ac:	daa    
  4209ad:	repnz and edx,edx
  4209b0:	inc    esp
  4209b1:	cdq    
  4209b2:	scas   eax,DWORD PTR es:[edi]
  4209b3:	stos   BYTE PTR es:[edi],al
  4209b4:	ins    BYTE PTR es:[edi],dx
  4209b5:	mov    al,0x41
  4209b7:	pop    esp
  4209b8:	mov    dh,0xd3
  4209ba:	adc    al,0x41
  4209bc:	enter  0xb643,0xb3
  4209c0:	stos   BYTE PTR es:[edi],al
  4209c1:	inc    edi
  4209c2:	sub    ah,dh
  4209c4:	sbb    edi,esi
  4209c6:	imul   edi,DWORD PTR [eax-0x1da16566],0x46956991
  4209d0:	lock mov ah,0x2a
  4209d3:	cmp    DWORD PTR [esp+ebp*8-0x21],ebp
  4209d7:	das    
  4209d8:	or     DWORD PTR [edi-0x6dfcfc25],esi
  4209de:	repz (bad)
  4209e1:	mov    eax,0xa3c7b616
  4209e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209e7:	stos   DWORD PTR es:[edi],eax
  4209e8:	push   esp
  4209e9:	loopne 0x4209ba
  4209eb:	sbb    DWORD PTR [edi+edx*1+0x1f306b73],ecx
  4209f2:	cmp    eax,0x95f675d0
  4209f7:	sbb    al,0x70
  4209f9:	or     ebp,esi
  4209fb:	pusha  
  4209fc:	pop    eax
  4209fd:	pop    ds
  4209fe:	mov    al,ds:0x42847a42
  420a03:	xor    ah,dh
  420a05:	fdivr  QWORD PTR [ebp+0xd4571ec]
  420a0b:	hlt    
  420a0c:	jo     0x420a60
  420a0e:	pop    ecx
  420a0f:	cwde   
  420a10:	repz inc ecx
  420a12:	push   ecx
  420a13:	sub    edx,edi
  420a15:	shl    DWORD PTR [ebp-0x25bf2d79],0x51
  420a1c:	mov    ecx,0x732f5227
  420a21:	mov    esi,0x60254a90
  420a26:	pop    es
  420a27:	dec    ebp
  420a28:	xchg   edi,eax
  420a29:	ret    0x309e
  420a2c:	inc    edi
  420a2d:	inc    esi
  420a2e:	sbb    al,0xee
  420a30:	shl    dl,cl
  420a32:	cmp    bh,BYTE PTR [ebx+eiz*1+0x64]
  420a36:	ror    DWORD PTR [eax+0x57],0x9e
  420a3a:	je     0x420a23
  420a3c:	ins    BYTE PTR es:[edi],dx
  420a3d:	dec    ecx
  420a3e:	sub    eax,0x18a73952
  420a43:	mov    dl,0x12
  420a45:	lods   al,BYTE PTR ds:[esi]
  420a46:	jl     0x4209ef
  420a48:	mov    ebp,0xf253bdc4
  420a4d:	or     eax,ebp
  420a4f:	mov    edx,0x69adc725
  420a54:	jbe    0x420a36
  420a56:	push   0x2e
  420a58:	lods   eax,DWORD PTR ds:[esi]
  420a59:	cld    
  420a5a:	xchg   DWORD PTR [eax+0x5f4d580b],eax
  420a60:	jle    0x420adf
  420a62:	sub    al,0x91
  420a64:	cmp    edi,DWORD PTR [eax-0x5f]
  420a67:	xor    BYTE PTR [eax+0x499a62ef],bh
  420a6d:	out    dx,eax
  420a6e:	jbe    0x420a33
  420a70:	xor    DWORD PTR [edi+0x1f69f55b],edi
  420a76:	or     DWORD PTR [ebp+0x7c],ecx
  420a79:	(bad)
  420a7d:	or     DWORD PTR [ebx+0x27],0x69ca16de
  420a84:	pop    ebp
  420a85:	or     edx,DWORD PTR [esi+0x7cc7a44e]
  420a8b:	pop    ebp
  420a8c:	mov    ch,0xf7
  420a8e:	in     eax,0x66
  420a90:	cs ret 0x1327
  420a94:	xchg   edx,eax
  420a95:	je     0x420a4b
  420a97:	add    cl,BYTE PTR [edi-0x216d998e]
  420a9d:	mov    ebx,0xc44f6717
  420aa2:	ja     0x420af4
  420aa4:	sub    al,0xe1
  420aa6:	push   eax
  420aa7:	inc    eax
  420aa8:	fldenv [eax+eiz*8-0x362d47a0]
  420aaf:	push   eax
  420ab0:	or     bl,cl
  420ab2:	not    BYTE PTR [ecx-0x42]
  420ab5:	mov    ecx,0x625a74b8
  420aba:	test   BYTE PTR [ebx+0x273d51],cl
  420ac0:	sub    al,0x1b
  420ac2:	pop    ss
  420ac3:	xchg   edx,eax
  420ac4:	ret    0xc9a1
  420ac7:	cmp    BYTE PTR [ebp+eiz*4+0x5c],ah
  420acb:	mov    BYTE PTR [edx+0x36a10e82],al
  420ad1:	inc    edi
  420ad2:	sub    dh,ch
  420ad4:	aam    0x85
  420ad6:	sub    BYTE PTR [ebx],0xcd
  420ad9:	scas   al,BYTE PTR es:[edi]
  420ada:	bsf    esi,edx
  420add:	jl     0x420b0b
  420adf:	gs xlat BYTE PTR gs:[ebx]
  420ae2:	adc    bh,al
  420ae4:	or     esp,edx
  420ae6:	xor    al,0x79
  420ae8:	mov    eax,0x9cfc4806
  420aed:	fmul   QWORD PTR [eax]
  420aef:	sub    DWORD PTR [ecx*4-0x45e10094],edx
  420af6:	ficom  WORD PTR [ebx]
  420af8:	sbb    ebp,DWORD PTR gs:[edx+0x28720cea]
  420aff:	cmp    eax,0x75c018aa
  420b04:	scas   al,BYTE PTR es:[edi]
  420b05:	das    
  420b06:	dec    edx
  420b07:	jl     0x420af6
  420b09:	and    al,0x65
  420b0b:	mov    edx,0x52a5e83a
  420b10:	pop    ebp
  420b11:	push   ds
  420b12:	(bad)  
  420b13:	xchg   ebp,eax
  420b14:	addr16 add al,bh
  420b17:	cs aaa 
  420b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b1a:	lea    ebx,[edx]
  420b1c:	jmp    0x84ea:0x86d0f437
  420b23:	arpl   WORD PTR [ebx+0x25fd1617],ax
  420b29:	dec    esp
  420b2a:	pop    esp
  420b2b:	inc    edx
  420b2c:	jno    0x420aea
  420b2e:	out    dx,al
  420b2f:	mov    eax,0x5973a549
  420b34:	xchg   esp,eax
  420b35:	sub    DWORD PTR [ebp-0x3d6203c4],eax
  420b3b:	arpl   bx,bx
  420b3d:	in     al,dx
  420b3e:	in     al,0xe8
  420b40:	sub    eax,0xc1e5de85
  420b45:	xor    dl,0xf
  420b48:	dec    esp
  420b49:	pop    es
  420b4a:	pop    eax
  420b4b:	pop    edi
  420b4c:	fwait
  420b4d:	in     al,dx
  420b4e:	cmp    DWORD PTR [eax],ebp
  420b50:	dec    eax
  420b51:	sbb    al,0x96
  420b53:	or     BYTE PTR [eax],cl
  420b55:	pop    es
  420b56:	dec    ebp
  420b57:	sar    DWORD PTR [ebx+0x5b],0x8
  420b5b:	mov    bh,BYTE PTR [esi+0x67847a0f]
  420b61:	mov    ebp,ebp
  420b63:	int3   
  420b64:	mov    ecx,0xcec5bd8f
  420b69:	jb     0x420b27
  420b6b:	or     eax,0xeae46fad
  420b70:	(bad)  
  420b71:	cmp    BYTE PTR ds:0x5c0b33db,ah
  420b77:	loop   0x420b1d
  420b79:	sbb    edx,esp
  420b7b:	push   0xef29ddaa
  420b80:	jno    0x420b61
  420b82:	addr16 popa 
  420b84:	add    al,0x1f
  420b86:	sbb    al,0xd
  420b88:	sbb    BYTE PTR [eax+0x71],dh
  420b8b:	pop    ss
  420b8c:	test   al,0x37
  420b8e:	(bad)  
  420b8f:	jns    0x420bd9
  420b91:	adc    ebx,eax
  420b93:	ret    
  420b94:	inc    ebp
  420b95:	pop    edx
  420b96:	cmc    
  420b97:	sub    eax,0xe4537b2f
  420b9c:	sub    BYTE PTR [edi+0x1e05b777],bl
  420ba2:	out    dx,al
  420ba3:	xchg   ebx,eax
  420ba4:	add    ebx,eax
  420ba6:	ins    BYTE PTR es:[edi],dx
  420ba7:	in     eax,0x51
  420ba9:	ins    DWORD PTR es:[edi],dx
  420baa:	imul   eax
  420bac:	xchg   edx,eax
  420bad:	jnp    0x420b6b
  420baf:	dec    edi
  420bb0:	push   esp
  420bb1:	arpl   WORD PTR [ecx],ax
  420bb3:	mov    edx,0xde9dfba6
  420bb8:	fisub  WORD PTR [ecx-0x9e7c1a3]
  420bbe:	pusha  
  420bbf:	mov    edx,0x79f0e798
  420bc4:	(bad)  
  420bc5:	pop    ss
  420bc6:	fild   QWORD PTR [edx+0xd]
  420bc9:	fdivr  QWORD PTR [ebp+0x2e]
  420bcc:	test   BYTE PTR [ebx-0x5dbec479],al
  420bd2:	cld    
  420bd3:	into   
  420bd4:	int    0x87
  420bd6:	adc    al,0xa6
  420bd8:	sub    BYTE PTR ds:0x7af0eaf3,cl
  420bde:	mov    esp,0x72a1ecc4
  420be3:	mov    eax,DWORD PTR [ecx]
  420be5:	xchg   esi,eax
  420be6:	rol    al,0x1
  420be9:	push   esi
  420bea:	aad    0xcc
  420bec:	pop    es
  420bed:	aam    0x58
  420bef:	(bad)
  420bf3:	fstp   QWORD PTR [ebx-0x49]
  420bf6:	sub    al,BYTE PTR [ecx]
  420bf8:	sub    eax,0x48840144
  420bfd:	iret   
  420bfe:	or     ch,cl
  420c00:	(bad)  
  420c01:	mov    ds:0x49b5d533,al
  420c06:	xchg   ebp,eax
  420c07:	(bad)  
  420c08:	out    dx,al
  420c09:	leave  
  420c0a:	pop    edx
  420c0b:	dec    edi
  420c0c:	mov    esi,DWORD PTR [edi+0x7e]
  420c0f:	push   ss
  420c10:	loopne 0x420bef
  420c12:	and    BYTE PTR [esi+edi*2],dl
  420c15:	inc    eax
  420c16:	popf   
  420c17:	ss iret 
  420c19:	jecxz  0x420bb0
  420c1b:	popf   
  420c1c:	mov    edi,0x9a37a4d5
  420c21:	shl    ebx,cl
  420c23:	or     ebx,ebp
  420c25:	sub    esp,DWORD PTR [ebx-0x5111cb0e]
  420c2b:	fsub   st,st(2)
  420c2d:	pop    ds
  420c2e:	test   al,0xf1
  420c30:	dec    ebp
  420c31:	aas    
  420c32:	inc    ebx
  420c33:	es aam 0x9a
  420c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c37:	test   al,0x33
  420c39:	rcr    DWORD PTR ds:0xbb64fb14,0x10
  420c40:	pop    esp
  420c41:	repnz or BYTE PTR [edx-0x7ca8c3aa],al
  420c48:	es mov bl,cl
  420c4b:	xchg   BYTE PTR [ecx+edi*4],ah
  420c4e:	call   0x5f1124dc
  420c53:	rol    DWORD PTR [edi],0xfa
  420c56:	push   ebp
  420c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c58:	(bad)  
  420c59:	push   esi
  420c5a:	jae    0x420cd8
  420c5c:	ja     0x420cb5
  420c5e:	scas   al,BYTE PTR es:[edi]
  420c5f:	mov    esp,0x7030eb90
  420c64:	aam    0x60
  420c66:	adc    al,0x76
  420c68:	(bad)  
  420c69:	rcl    eax,0x86
  420c6c:	ret    0x3b99
  420c6f:	xchg   ebx,eax
  420c70:	shr    esp,cl
  420c72:	sbb    bl,BYTE PTR [ebx-0x42]
  420c75:	or     al,0x7
  420c77:	je     0x420bfc
  420c79:	push   ebx
  420c7a:	mov    cl,0x17
  420c7c:	inc    ebx
  420c7d:	mov    al,ds:0x7fc1ad88
  420c82:	jns    0x420c22
  420c84:	jmp    0x1bda:0xc9b0ad4c
  420c8b:	nop
  420c8c:	ins    DWORD PTR es:[edi],dx
  420c8d:	arpl   WORD PTR [edi],si
  420c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c90:	ret    0xa2dc
  420c93:	mov    ch,0xa3
  420c95:	xchg   edi,eax
  420c96:	mov    ds:0x85c9ffd8,al
  420c9b:	adc    eax,0xdf829df1
  420ca0:	arpl   WORD PTR [ebx-0x5e],sp
  420ca3:	xchg   ecx,eax
  420ca4:	test   eax,0x7667a9d2
  420ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420caa:	push   0x724c7e7d
  420caf:	xor    eax,0x5e751dd6
  420cb4:	aad    0x5f
  420cb6:	xor    BYTE PTR [ebp-0x68],ah
  420cb9:	push   ecx
  420cba:	pop    esi
  420cbb:	mov    bl,0xe7
  420cbd:	aam    0x15
  420cbf:	popa   
  420cc0:	push   eax
  420cc1:	int    0xc5
  420cc3:	mov    ds:0x7db6d5bc,al
  420cc8:	imul   ebp,DWORD PTR [edx+0x3ab1baec],0xa882e978
  420cd2:	pop    ebp
  420cd3:	jle    0x420ceb
  420cd5:	xor    cl,BYTE PTR [ebx]
  420cd7:	sbb    DWORD PTR [edi+0x3d],0x3fa52517
  420cde:	lods   eax,DWORD PTR ds:[esi]
  420cdf:	push   edi
  420ce0:	ret    
  420ce1:	leave  
  420ce2:	test   al,0xcb
  420ce4:	xor    BYTE PTR [ebp+0x9],cl
  420ce7:	stos   BYTE PTR es:[edi],al
  420ce8:	lock jmp 0x420d17
  420ceb:	(bad)  
  420cec:	ins    BYTE PTR es:[edi],dx
  420ced:	inc    esi
  420cee:	xchg   edx,eax
  420cef:	mul    ecx
  420cf1:	cmp    al,bl
  420cf3:	and    bl,BYTE PTR [eax+0x36]
  420cf6:	clc    
  420cf7:	fadd   DWORD PTR [esi+0x3db828dd]
  420cfd:	pushf  
  420cfe:	ret    
  420cff:	fist   DWORD PTR [ebp-0x79]
  420d02:	mov    bl,0xa7
  420d04:	and    BYTE PTR [esi+0x2107f19f],0x3c
  420d0b:	lods   al,BYTE PTR ds:[esi]
  420d0c:	das    
  420d0d:	and    cl,bl
  420d0f:	jmp    0xfdc2058e
  420d14:	int3   
  420d15:	or     DWORD PTR [eax+ebx*8+0x45],esi
  420d19:	xchg   esi,eax
  420d1a:	mov    bl,0xa2
  420d1c:	and    al,0xf6
  420d1e:	icebp  
  420d1f:	pop    ebx
  420d20:	scas   al,BYTE PTR es:[edi]
  420d21:	mov    BYTE PTR [ebx+0x59407c0d],cl
  420d27:	mov    ecx,0xf2b0d83c
  420d2c:	add    ch,BYTE PTR [eax+eiz*1]
  420d2f:	or     DWORD PTR [ebx+esi*8-0x4b419bf],edx
  420d36:	out    dx,eax
  420d37:	shr    DWORD PTR [ebp-0x56],1
  420d3a:	cwde   
  420d3b:	jmp    0xc0b96f0c
  420d40:	mov    ah,0x1f
  420d42:	enter  0x51fb,0xc3
  420d46:	ja     0x420d37
  420d48:	arpl   WORD PTR [ecx-0x60c79f19],sp
  420d4e:	or     eax,0x1e6f55c3
  420d53:	enter  0xfbc2,0x42
  420d57:	sub    al,0x9a
  420d59:	scas   eax,DWORD PTR es:[edi]
  420d5a:	adc    ebp,DWORD PTR [edx-0x5d]
  420d5d:	inc    ebx
  420d5e:	leave  
  420d5f:	dec    eax
  420d60:	jmp    DWORD PTR [edi-0x2]
  420d63:	mov    ebx,0x9155bb16
  420d68:	(bad)  
  420d6a:	rcl    DWORD PTR [ebx],1
  420d6c:	push   es
  420d6d:	add    BYTE PTR [esi+edx*2],bh
  420d70:	mov    eax,0xfec9a608
  420d75:	mov    ch,0x6e
  420d77:	inc    edx
  420d78:	jl     0x420d4e
  420d7a:	retf   0x4632
  420d7d:	test   eax,0x42be5f30
  420d82:	sub    bh,BYTE PTR [ecx-0x3c70a03]
  420d88:	in     al,dx
  420d89:	cmp    DWORD PTR ds:0xba44a464,esi
  420d8f:	add    DWORD PTR [esi+0x17],0xffffff9a
  420d93:	in     eax,dx
  420d94:	add    eax,0x37f279d9
  420d99:	add    edi,DWORD PTR [edx+0x2a]
  420d9c:	(bad)  
  420d9d:	mov    ebp,0x184c15a2
  420da2:	xor    eax,0xde810b08
  420da7:	inc    edx
  420da8:	clc    
  420da9:	dec    edi
  420daa:	rcr    BYTE PTR [ecx+0x185c81ca],1
  420db0:	jne    0x420d42
  420db2:	adc    BYTE PTR [ecx-0x6e],al
  420db5:	out    0x79,eax
  420db7:	imul   edx,DWORD PTR [edx-0x41],0xffffffe4
  420dbb:	out    0x5b,eax
  420dbd:	stc    
  420dbe:	xor    bh,bh
  420dc0:	push   0x3c
  420dc2:	xchg   edi,eax
  420dc3:	ffree  st(2)
  420dc5:	sub    ch,BYTE PTR [ecx+eiz*8]
  420dc8:	jle    0x420e26
  420dca:	mov    edi,0x4c7e1f40
  420dcf:	aad    0x55
  420dd1:	ret    
  420dd2:	leave  
  420dd3:	xor    BYTE PTR [eax+0x7f],0xe2
  420dd7:	popf   
  420dd8:	cmp    BYTE PTR [edi+0x3b96548a],bh
  420dde:	lea    esp,[ebp+edi*8+0x2b]
  420de2:	icebp  
  420de3:	jb     0x420e2a
  420de5:	xor    ebp,DWORD PTR [ebx-0x4b6e162c]
  420deb:	or     al,0x83
  420ded:	lahf   
  420dee:	sbb    al,0x51
  420df0:	scas   eax,DWORD PTR es:[edi]
  420df1:	mov    edi,0x94812932
  420df6:	xor    ecx,edx
  420df8:	adc    BYTE PTR [edx],cl
  420dfa:	and    eax,0xea4096ad
  420dff:	jne    0x420e33
  420e01:	fimul  DWORD PTR [ebx+ebp*8+0x15615701]
  420e08:	rcl    BYTE PTR [eax+0x49],cl
  420e0b:	pop    eax
  420e0c:	push   eax
  420e0d:	mov    bl,0x97
  420e0f:	and    BYTE PTR [edx+0x7cd165da],dh
  420e15:	add    bl,BYTE PTR [edi+0x29]
  420e18:	push   ebx
  420e19:	inc    ebx
  420e1a:	adc    DWORD PTR [esp+eax*1-0xc],0x5dc526b2
  420e22:	dec    ebp
  420e23:	xor    al,0x68
  420e25:	add    DWORD PTR [edi-0x24],edx
  420e28:	dec    eax
  420e29:	and    eax,0x9a5c8229
  420e2e:	sub    bh,BYTE PTR [edi+0x52a730fb]
  420e34:	dec    edi
  420e35:	push   0xffffffb6
  420e37:	pop    ds
  420e38:	out    dx,eax
  420e39:	bound  eax,QWORD PTR [ebp+0x469991ed]
  420e3f:	mov    bl,0x3e
  420e41:	add    DWORD PTR ds:0x9aaa82c,0x8a83dc76
  420e4b:	pop    ebp
  420e4c:	repnz fistp DWORD PTR [eax+0x54e89466]
  420e53:	jl     0x420e8f
  420e55:	aas    
  420e56:	jl     0xc5b08583
  420e5c:	or     ah,BYTE PTR [eax]
  420e5e:	imul   ebp,DWORD PTR ds:0x3c9c1fea,0xfffffff6
  420e65:	xchg   esp,eax
  420e66:	pop    ss
  420e67:	xor    eax,0x38b371db
  420e6c:	int3   
  420e6d:	fisttp DWORD PTR [edi]
  420e6f:	aaa    
  420e70:	lfs    esi,FWORD PTR [ebp-0x38]
  420e74:	(bad)  
  420e75:	ds in  eax,dx
  420e77:	sbb    edx,DWORD PTR [ecx-0x5646fecf]
  420e7d:	inc    ecx
  420e7e:	out    0x2a,eax
  420e80:	mov    ebp,0xbbe63349
  420e85:	dec    esp
  420e86:	in     eax,0xf3
  420e88:	or     dl,BYTE PTR [eax-0x1b]
  420e8b:	(bad)  
  420e8c:	jmp    0x420e48
  420e8e:	in     eax,0x7c
  420e90:	fisttp WORD PTR [eax-0xf5bcbaa]
  420e96:	jecxz  0x420e4c
  420e98:	pop    ecx
  420e99:	add    ax,0xfe2
  420e9d:	push   ds
  420e9e:	scas   eax,DWORD PTR es:[edi]
  420e9f:	in     eax,dx
  420ea0:	xchg   edi,eax
  420ea1:	mov    bl,dl
  420ea3:	adc    al,BYTE PTR [bp-0x1b02]
  420ea8:	ror    BYTE PTR [edx],1
  420eaa:	fiadd  WORD PTR [eax+0x75]
  420ead:	mov    DWORD PTR [edi],edi
  420eaf:	mov    eax,0x161e6f23
  420eb4:	jnp    0x420e9b
  420eb6:	dec    ebx
  420eb7:	aaa    
  420eb8:	push   ebp
  420eb9:	and    eax,0x478486b5
  420ebe:	adc    eax,0x6d4df7a5
  420ec3:	dec    ebx
  420ec4:	dec    edi
  420ec5:	sub    eax,0xf6bf1648
  420eca:	or     BYTE PTR [edi],cl
  420ecc:	adc    al,0xd3
  420ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ecf:	fwait
  420ed0:	inc    eax
  420ed1:	rol    DWORD PTR [edi+0x33f855a8],cl
  420ed7:	inc    ecx
  420ed8:	adc    bh,BYTE PTR fs:[edi+0x70]
  420edc:	leave  
  420edd:	pop    ecx
  420ede:	xor    ebp,DWORD PTR [ebx-0x1db00d6e]
  420ee4:	(bad)  
  420ee6:	sbb    al,0xeb
  420ee8:	xchg   esp,eax
  420ee9:	jb     0x420e93
  420eeb:	push   ebp
  420eec:	ja     0x420ef3
  420eee:	aas    
  420eef:	mov    dh,0x29
  420ef1:	mov    edi,0x8f375383
  420ef6:	loop   0x420f34
  420ef8:	sti    
  420ef9:	repnz or ecx,ebx
  420efc:	mov    cl,0x24
  420efe:	and    eax,0xfd7fffd3
  420f03:	ret    0x70d
  420f06:	inc    edx
  420f07:	out    dx,eax
  420f08:	xchg   esi,eax
  420f09:	mov    al,ds:0xc5f934f7
  420f0e:	or     BYTE PTR [esi+0x20],cl
  420f11:	push   eax
  420f12:	push   0x6d301401
  420f17:	sub    al,0x62
  420f19:	js     0x420ed1
  420f1b:	push   ebx
  420f1c:	push   0xd18caab2
  420f21:	xchg   esp,eax
  420f22:	xchg   esp,eax
  420f23:	add    al,0x58
  420f25:	add    DWORD PTR [edi],0x75
  420f28:	lods   al,BYTE PTR ds:[esi]
  420f29:	scas   eax,DWORD PTR es:[edi]
  420f2a:	pop    ebp
  420f2b:	popa   
  420f2c:	pop    edx
  420f2d:	xor    al,0xcf
  420f2f:	pop    esi
  420f30:	rcr    BYTE PTR [edi+0x7f],1
  420f33:	jl     0x420f67
  420f35:	pop    esi
  420f36:	cld    
  420f37:	pop    es
  420f38:	jno    0x420ed6
  420f3a:	mov    ch,0x7b
  420f3c:	cmp    eax,0xc3a52061
  420f41:	test   dl,bh
  420f43:	xor    al,0x18
  420f45:	cld    
  420f46:	shl    BYTE PTR ds:0x750aef26,1
  420f4c:	xor    eax,DWORD PTR [ebx+edi*1+0x1a]
  420f50:	bnd jae 0x420f7d
  420f53:	pop    esi
  420f54:	repz inc edx
  420f56:	xor    al,0x51
  420f58:	pop    esi
  420f59:	in     al,dx
  420f5a:	inc    ebx
  420f5b:	xchg   DWORD PTR ds:0x65730243,ebp
  420f61:	sub    al,0xc0
  420f63:	(bad)  
  420f64:	mov    esp,edx
  420f66:	mov    ebp,ebp
  420f68:	add    al,cl
  420f6a:	in     eax,dx
  420f6b:	mov    esi,0x18e26e5c
  420f70:	int3   
  420f71:	ins    DWORD PTR es:[edi],dx
  420f72:	mov    edi,0xcdccf5e1
  420f77:	mov    dl,0x3
  420f79:	(bad)  
  420f7a:	stc    
  420f7b:	ret    
  420f7c:	sbb    al,0xb4
  420f7e:	or     edx,0x93704eca
  420f84:	out    0xb2,al
  420f86:	outs   dx,DWORD PTR ds:[esi]
  420f87:	cld    
  420f88:	loope  0x420fbe
  420f8a:	mov    esp,0x77000e5c
  420f8f:	cmp    BYTE PTR [eax+ebp*1],0xed
  420f93:	cmp    cl,BYTE PTR [eax-0x147bf81e]
  420f99:	mov    al,ds:0x2baef038
  420f9e:	adc    al,0xe
  420fa0:	jo     0x420f8c
  420fa2:	adc    eax,0xbcd9abd5
  420fa7:	inc    ebx
  420fa8:	dec    edx
  420fa9:	int3   
  420faa:	out    dx,al
  420fab:	xor    cl,BYTE PTR [edx+0x27]
  420fae:	popa   
  420faf:	mov    edi,0x8af1671
  420fb4:	push   edx
  420fb5:	push   ecx
  420fb6:	lahf   
  420fb7:	lds    eax,FWORD PTR [ebx]
  420fb9:	lock int3 
  420fbb:	xchg   edx,eax
  420fbc:	inc    edx
  420fbd:	fwait
  420fbe:	pop    eax
  420fbf:	sbb    ebp,ecx
  420fc1:	test   al,0xbd
  420fc3:	mov    al,ds:0xb7644f99
  420fc8:	dec    edx
  420fc9:	dec    esi
  420fca:	add    al,0x4b
  420fcc:	data16 arpl WORD PTR [ebx],bx
  420fcf:	icebp  
  420fd0:	adc    cl,dl
  420fd2:	sub    al,0xdc
  420fd4:	inc    esp
  420fd5:	cmp    ah,al
  420fd7:	fs adc eax,0x83128db8
  420fdd:	test   BYTE PTR [ebx],cl
  420fdf:	xor    DWORD PTR [eax-0x52],0x70534b07
  420fe6:	les    ebx,FWORD PTR [eax+0x1c]
  420fe9:	xchg   DWORD PTR [esi+0x4abc9d14],ebx
  420fef:	cli    
  420ff0:	pop    ebp
  420ff1:	out    dx,eax
  420ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ff3:	sbb    edi,DWORD PTR [eax]
  420ff5:	ss mov esi,0x40144fa4
  420ffb:	cmp    cl,BYTE PTR [eax+0x6da9d67a]
  421001:	lods   al,BYTE PTR ds:[esi]
  421002:	cmp    al,0x4d
  421004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421005:	inc    ebx
  421006:	xor    eax,0xf5fac9ef
  42100b:	mov    al,0xd4
  42100d:	mov    ah,0x9a
  42100f:	or     eax,edx
  421011:	mov    bh,0xf0
  421013:	mov    al,0xe0
  421015:	mov    bl,0xd0
  421017:	sbb    BYTE PTR [edi],0x22
  42101a:	adc    eax,DWORD PTR [eax]
  42101c:	outs   dx,BYTE PTR ds:[esi]
  42101d:	push   ss
  42101e:	hlt    
  42101f:	or     ah,bh
  421021:	stc    
  421022:	lahf   
  421023:	popa   
  421024:	mov    ch,0xab
  421026:	fs ss fmul st(3),st
  42102a:	inc    eax
  42102b:	push   ebp
  42102c:	mov    ebx,0x6e1a8233
  421031:	ret    0x2741
  421034:	fwait
  421035:	mov    ch,0x64
  421037:	jae    0x4210a4
  421039:	cdq    
  42103a:	xlat   BYTE PTR ds:[ebx]
  42103b:	ret    0x7d8f
  42103e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42103f:	loope  0x42109b
  421041:	lahf   
  421042:	push   es
  421043:	in     al,dx
  421044:	scas   eax,DWORD PTR es:[edi]
  421045:	(bad)  
  421046:	adc    edx,edi
  421048:	aas    
  421049:	xchg   esi,eax
  42104a:	(bad)  
  42104b:	jle    0x42101b
  42104d:	fwait
  42104e:	loop   0x42108e
  421050:	push   es
  421051:	and    ch,ch
  421053:	das    
  421054:	dec    ebx
  421055:	test   DWORD PTR [ebp+0x5b],esi
  421058:	dec    edi
  421059:	xor    BYTE PTR [edx-0x7ff5fe17],0x33
  421060:	mov    cl,0xe3
  421062:	xor    BYTE PTR ds:0x77583e89,bh
  421068:	pop    ecx
  421069:	and    al,0xe
  42106b:	or     esi,edx
  42106d:	pop    esp
  42106e:	imul   ecx,DWORD PTR [ebx-0x3bea2ad6],0x26
  421075:	fdivr  QWORD PTR [esi+0x8ab35a0]
  42107b:	pushf  
  42107c:	xor    dl,dh
  42107e:	and    bh,cl
  421080:	clc    
  421081:	popf   
  421082:	adc    BYTE PTR [edx+0x20],bh
  421085:	and    al,0xe7
  421087:	cdq    
  421088:	xor    edx,DWORD PTR [ecx+0x60]
  42108b:	out    dx,al
  42108c:	ins    BYTE PTR es:[edi],dx
  42108d:	js     0x421024
  42108f:	mov    ebp,0xb800873f
  421094:	and    DWORD PTR [ebp+eax*2-0x6cb4a4c8],ecx
  42109b:	xor    eax,0x2c585ad0
  4210a0:	fdiv   DWORD PTR ds:0xab38cb29
  4210a6:	jae    0x421124
  4210a8:	cmc    
  4210a9:	jno    0x42105b
  4210ab:	cs sbb eax,0x38c4a5b9
  4210b1:	or     bh,ch
  4210b3:	xchg   ecx,eax
  4210b4:	fldcw  WORD PTR [ebp+ecx*2-0x7b79985a]
  4210bb:	and    al,0x31
  4210bd:	(bad)  
  4210be:	mov    eax,0x983fad45
  4210c3:	inc    edi
  4210c4:	xor    edx,edi
  4210c6:	xchg   ebx,eax
  4210c7:	or     BYTE PTR [edx],bh
  4210c9:	stos   DWORD PTR es:[edi],eax
  4210ca:	push   ds
  4210cb:	jle    0x42108e
  4210cd:	jb     0x42109d
  4210cf:	adc    BYTE PTR [ebp+0x584b0c8],ah
  4210d5:	or     ch,ah
  4210d7:	rcr    BYTE PTR [esi+0x6a],1
  4210da:	ret    
  4210db:	lahf   
  4210dc:	imul   ebp,DWORD PTR [ebx-0x3f],0xba5e6cd9
  4210e3:	lods   eax,DWORD PTR ds:[esi]
  4210e4:	shr    eax,1
  4210e6:	pop    edi
  4210e7:	fst    DWORD PTR [eax]
  4210e9:	add    eax,0x267ed9c3
  4210ee:	or     BYTE PTR [edx],ah
  4210f0:	cmp    ebp,edi
  4210f2:	adc    DWORD PTR [esi],esi
  4210f4:	dec    DWORD PTR [esi+eiz*8-0x61b7a07e]
  4210fb:	sub    BYTE PTR [edx+0x14],bh
  4210fe:	test   al,0x6c
  421100:	adc    dl,ch
  421102:	add    ah,0xb8
  421105:	js     0x42117b
  421107:	inc    edi
  421108:	ja     0x4210e8
  42110a:	mov    ds:0xb794914a,al
  42110f:	and    BYTE PTR [ebx],ch
  421111:	out    dx,al
  421112:	stos   BYTE PTR es:[edi],al
  421113:	or     eax,0x65232824
  421118:	mov    ds:0xab1497a5,al
  42111d:	je     0x421133
  42111f:	add    al,BYTE PTR [edi-0x49]
  421122:	push   esi
  421123:	mov    esi,0x69aea37f
  421128:	cmc    
  421129:	inc    ebp
  42112a:	cmp    bh,BYTE PTR [ebp+ebx*1+0x5a39c503]
  421131:	mov    edi,0x73c0b458
  421136:	sbb    DWORD PTR [ebx-0x22],0x82036d47
  42113d:	add    DWORD PTR [edx],ebp
  42113f:	cwde   
  421140:	ss inc eax
  421142:	and    DWORD PTR [edi+0x87871e2],esp
  421148:	pusha  
  421149:	scas   eax,DWORD PTR es:[edi]
  42114a:	pop    eax
  42114b:	fcmovnb st,st(5)
  42114d:	(bad)  
  42114e:	dec    ebp
  42114f:	dec    edi
  421150:	cmp    cl,ch
  421152:	or     ah,BYTE PTR [edx+0x28]
  421155:	pop    ecx
  421156:	push   es
  421157:	dec    eax
  421158:	retf   0xcaec
  42115b:	mov    ecx,0x5949cb71
  421160:	dec    ecx
  421161:	lds    sp,DWORD PTR [ebp+0x58]
  421165:	es call 0xdb3d:0x31662f08
  42116d:	cmp    BYTE PTR [eax-0x67],bh
  421170:	pop    edi
  421171:	adc    esp,DWORD PTR [edi+0x76c8fdc7]
  421177:	sbb    cl,dl
  421179:	or     DWORD PTR [eax+0x2121f081],edi
  42117f:	or     ebp,DWORD PTR [eax-0x7e]
  421182:	or     dh,BYTE PTR [edi+0x4f1c8d41]
  421188:	fisub  DWORD PTR [edi-0x3591a75]
  42118e:	mov    esp,0xecc44ddc
  421193:	adc    ch,BYTE PTR [edi]
  421195:	cmp    DWORD PTR [edi-0x652c4790],0xffffffb0
  42119c:	cmc    
  42119d:	mov    ss:0x8667f11d,al
  4211a3:	push   es
  4211a4:	ficomp WORD PTR [esi]
  4211a6:	cs fwait
  4211a8:	push   eax
  4211a9:	ss pushf 
  4211ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211ac:	test   al,0xb2
  4211ae:	mov    es:0x8950d112,eax
  4211b4:	push   ss
  4211b5:	jp     0x42122f
  4211b7:	xor    ah,BYTE PTR [ecx+0x5646fdd8]
  4211bd:	mov    ch,0x51
  4211bf:	int    0x49
  4211c1:	es xchg esi,eax
  4211c3:	sahf   
  4211c4:	loop   0x42121c
  4211c6:	xchg   ebx,edi
  4211c8:	ret    
  4211c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211ca:	jecxz  0x42114f
  4211cc:	push   0xb595ff34
  4211d1:	std    
  4211d2:	push   edi
  4211d3:	push   esi
  4211d4:	loopne 0x42115d
  4211d6:	sub    BYTE PTR [esp+eiz*2+0x7c],dh
  4211da:	das    
  4211db:	popa   
  4211dc:	xchg   ebx,eax
  4211dd:	aad    0x23
  4211df:	xchg   edi,eax
  4211e0:	cdq    
  4211e1:	mov    bh,0xe7
  4211e3:	or     BYTE PTR [ebx],ch
  4211e5:	jns    0x421228
  4211e7:	jmp    0x85df86cb
  4211ec:	stos   DWORD PTR es:[edi],eax
  4211ed:	pop    esi
  4211ee:	add    DWORD PTR [edi+0x27],0x6cbbc57a
  4211f5:	test   eax,0xcb61840f
  4211fa:	xchg   edi,eax
  4211fb:	into   
  4211fc:	mov    WORD PTR [esi],gs
  4211fe:	xchg   ebp,eax
  4211ff:	xlat   BYTE PTR ds:[ebx]
  421200:	mov    cl,0x47
  421202:	or     edx,DWORD PTR [ecx+0x417a5c69]
  421208:	pop    ds
  421209:	(bad)  
  42120a:	lahf   
  42120b:	ss std 
  42120d:	adc    bh,ch
  42120f:	out    0x62,eax
  421211:	inc    ecx
  421212:	pop    esi
  421213:	outs   dx,DWORD PTR ds:[esi]
  421214:	mov    cl,BYTE PTR [ecx]
  421216:	idiv   BYTE PTR [ebx+0x6d]
  421219:	sub    ebx,ecx
  42121b:	pushf  
  42121c:	adc    ecx,esp
  42121e:	jae    0x421224
  421220:	xor    DWORD PTR [edi+0x59],eax
  421223:	mov    ds:0xceb08406,al
  421228:	lahf   
  421229:	cmp    eax,0xf40edcc9
  42122e:	imul   esi,DWORD PTR [ebp+0x24],0xffffffcb
  421232:	jmp    0x421276
  421234:	leave  
  421235:	lods   eax,DWORD PTR ds:[esi]
  421236:	push   edi
  421237:	dec    esi
  421238:	push   ecx
  421239:	push   ebx
  42123a:	out    dx,al
  42123b:	jne    0x421297
  42123d:	in     al,0x38
  42123f:	mov    cl,0x85
  421241:	(bad)  
  421242:	cdq    
  421243:	ret    
  421244:	pusha  
  421245:	jl     0x4212c0
  421247:	push   ecx
  421248:	std    
  421249:	mov    esi,ebx
  42124b:	jns    0x421272
  42124d:	adc    al,0x6c
  42124f:	adc    al,0x5c
  421251:	adc    eax,0xb7ef56ca
  421256:	fisub  DWORD PTR [ebx]
  421258:	xor    esi,edi
  42125a:	aam    0xe5
  42125c:	jmp    0x421221
  42125e:	pop    edi
  42125f:	stos   BYTE PTR es:[edi],al
  421260:	cmp    cl,dh
  421262:	ins    BYTE PTR es:[edi],dx
  421263:	test   ch,bh
  421265:	lock int 0xc3
  421268:	ins    DWORD PTR es:[edi],dx
  421269:	push   esi
  42126a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42126b:	adc    ecx,esi
  42126d:	cmp    DWORD PTR ds:0x6ea1dfef,edi
  421273:	rcl    DWORD PTR [ecx+0x7c160cec],1
  421279:	xchg   ecx,eax
  42127a:	scas   eax,DWORD PTR es:[edi]
  42127b:	test   DWORD PTR [ecx-0x80],0x558c253e
  421282:	retf   
  421283:	jmp    0xd9f25d99
  421288:	mov    dl,0x94
  42128a:	push   ecx
  42128b:	pop    ds
  42128c:	adc    edx,ecx
  42128e:	je     0x421306
  421290:	test   DWORD PTR [edi+0x9ab681f],0x29bcacf9
  42129a:	xchg   ebp,eax
  42129b:	loope  0x421275
  42129d:	loop   0x421235
  42129f:	call   DWORD PTR [esi+0x1bec7ef0]
  4212a5:	(bad)  
  4212a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212a7:	pusha  
  4212a8:	repz test eax,0xbd9124cc
  4212ae:	sbb    al,0x75
  4212b0:	(bad)  [ecx-0x13]
  4212b3:	out    0xb9,eax
  4212b5:	dec    edx
  4212b6:	fist   DWORD PTR [ebx]
  4212b8:	and    dl,cl
  4212ba:	xlat   BYTE PTR ds:[ebx]
  4212bb:	les    edi,FWORD PTR [ebp-0x4a9889e8]
  4212c1:	stc    
  4212c2:	pop    ebp
  4212c3:	push   ss
  4212c4:	sub    cl,dh
  4212c6:	xchg   edx,eax
  4212c7:	mov    eax,ds:0x920e7327
  4212cc:	sub    DWORD PTR [esp+ebp*2+0x4f6605ce],ebp
  4212d3:	mov    ds:0x73d22ee0,eax
  4212d8:	xchg   ecx,eax
  4212d9:	pop    edx
  4212da:	ret    
  4212db:	(bad)  
  4212dc:	out    0xbd,al
  4212de:	out    0x4e,al
  4212e0:	xchg   DWORD PTR [edi],esi
  4212e2:	lahf   
  4212e3:	cmp    bl,BYTE PTR [edi+eiz*4+0x22]
  4212e7:	pop    edx
  4212e8:	pop    eax
  4212e9:	xor    DWORD PTR [edx-0x25],eax
  4212ec:	lods   eax,DWORD PTR ds:[esi]
  4212ed:	xor    ah,BYTE PTR [esi]
  4212ef:	nop
  4212f0:	repz icebp 
  4212f2:	fcomp  st(4)
  4212f4:	shl    BYTE PTR [edi],cl
  4212f6:	shl    DWORD PTR [ecx],1
  4212f8:	mov    eax,0x6f84bc3d
  4212fd:	xor    eax,0xeb5eecda
  421302:	mov    WORD PTR [eax],ss
  421304:	mov    ds:0xac439693,eax
  421309:	outs   dx,DWORD PTR ds:[esi]
  42130a:	cli    
  42130b:	mov    esp,0x2c315bbf
  421310:	mul    DWORD PTR [ebx+0x2ab05bee]
  421316:	push   ebp
  421317:	cvtdq2ps xmm6,XMMWORD PTR [esi+0x5d1d7252]
  42131e:	mov    dl,BYTE PTR [eax-0x2d]
  421321:	imul   ebx,edi,0x31c76c03
  421327:	add    DWORD PTR [edx],ecx
  421329:	lds    ebp,FWORD PTR [eax+0x5e4920ad]
  42132f:	jb     0x421372
  421331:	dec    edx
  421332:	in     al,dx
  421333:	jo     0x421396
  421335:	xchg   ebx,eax
  421336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421337:	mov    esi,DWORD PTR [ecx]
  421339:	adc    bh,BYTE PTR [ecx]
  42133b:	cdq    
  42133c:	pop    esi
  42133d:	xchg   eax,esp
  42133f:	inc    esp
  421340:	lds    esi,FWORD PTR [ecx]
  421342:	dec    ecx
  421343:	mov    ah,BYTE PTR [eax-0x56]
  421346:	(bad)  
  421347:	(bad)  
  421348:	div    BYTE PTR [edi-0x69faa5d4]
  42134e:	add    dh,BYTE PTR [ebp-0x5c]
  421351:	cs into 
  421353:	mov    ds:0x33b764e9,eax
  421358:	out    0x7c,eax
  42135a:	dec    eax
  42135b:	cmc    
  42135c:	mov    cl,0xb7
  42135e:	sub    eax,0xefe82eb3
  421363:	mov    eax,ds:0x859cd144
  421368:	clc    
  421369:	mov    edi,0x29cd5446
  42136e:	mov    dl,0x2a
  421370:	sub    edx,eax
  421372:	ins    BYTE PTR es:[edi],dx
  421373:	bsf    esp,DWORD PTR [ebp+0x57995f5a]
  42137a:	scas   al,BYTE PTR es:[edi]
  42137b:	jle    0x421381
  42137d:	jmp    FWORD PTR [esi+ecx*4-0x52]
  421381:	(bad)  
  421382:	int    0x30
  421384:	and    BYTE PTR [edi-0x7d],dl
  421387:	mov    dh,0xf1
  421389:	(bad)  
  42138a:	out    dx,al
  42138b:	aad    0xab
  42138d:	aas    
  42138e:	mov    cl,0xb9
  421390:	sbb    ebx,DWORD PTR [ebx+0x63]
  421393:	inc    ebp
  421394:	xchg   ebx,eax
  421395:	adc    al,0x3f
  421397:	mov    ebx,0x311e7b32
  42139c:	call   0xa492:0x2b0c680f
  4213a3:	adc    BYTE PTR [ebp-0x208cb1da],cl
  4213a9:	(bad)  
  4213aa:	in     eax,dx
  4213ab:	jmp    0x64b3da7f
  4213b0:	sbb    eax,0x59a3aff5
  4213b5:	dec    esi
  4213b6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4213b8:	inc    dl
  4213ba:	fidiv  WORD PTR [ebx-0x77]
  4213bd:	jno    0x42138d
  4213bf:	push   DWORD PTR [edx+0x2e5632ad]
  4213c5:	je     0x421425
  4213c7:	pop    ecx
  4213c8:	cli    
  4213c9:	dec    ecx
  4213ca:	es or  eax,0xfc5eb943
  4213d0:	add    eax,0x8042a142
  4213d5:	push   eax
  4213d6:	inc    ebp
  4213d7:	gs mov dl,0xaf
  4213da:	mov    dh,dh
  4213dc:	hlt    
  4213dd:	sub    al,BYTE PTR [esi-0x392da786]
  4213e3:	ja     0x42138c
  4213e5:	mov    cl,0xd2
  4213e7:	ss push 0x33
  4213ea:	pop    es
  4213eb:	dec    esi
  4213ec:	ja     0x4213be
  4213ee:	or     al,0x5a
  4213f0:	mov    bl,0xd5
  4213f2:	les    esp,FWORD PTR [ebx-0x2b]
  4213f5:	jmp    esp
  4213f7:	jbe    0x4213e9
  4213f9:	dec    ebp
  4213fa:	dec    edx
  4213fb:	sub    cl,cl
  4213fd:	push   ebp
  4213fe:	or     al,0x1
  421400:	xor    edx,DWORD PTR [ebp+0x5fd2f3e2]
  421406:	test   BYTE PTR [esi+0x12335acd],ch
  42140c:	xor    edi,DWORD PTR [eax-0x253562eb]
  421412:	arpl   WORD PTR [edx+ebp*2-0x40617241],bp
  421419:	pop    ebp
  42141a:	test   DWORD PTR [ebx+0x17],ebp
  42141d:	adc    eax,0x2a43dee2
  421422:	adc    DWORD PTR [edx-0x6f],edi
  421425:	(bad)  
  421426:	lahf   
  421427:	test   eax,0xd694f716
  42142c:	mov    ebx,0x14b5048d
  421431:	arpl   WORD PTR [ebx+0x6b],di
  421434:	mov    edi,0xd189f33c
  421439:	loop   0x421434
  42143b:	xor    al,0x21
  42143d:	sbb    DWORD PTR [ebx+edx*2-0x4c],ecx
  421441:	mov    ebx,0xe6e8c5e3
  421446:	jbe    0x4213eb
  421448:	mov    es,WORD PTR [esi]
  42144a:	mov    dh,0xc
  42144c:	push   0x78
  42144e:	adc    ah,BYTE PTR [ebp-0x1a]
  421451:	jae    0x4214c0
  421453:	ror    edx,cl
  421455:	push   eax
  421456:	mov    bl,0x5c
  421458:	aad    0xda
  42145a:	add    al,0x33
  42145c:	jmp    0x809e:0xf18c811d
  421463:	sbb    BYTE PTR [ebx+edx*2+0x64],0xd
  421468:	mov    al,gs:0x8930b91
  42146e:	xchg   edx,eax
  42146f:	cmc    
  421470:	bound  esp,QWORD PTR [esi]
  421472:	cwde   
  421473:	mov    bl,0x5f
  421475:	ret    
  421476:	enter  0x4b9d,0x64
  42147a:	je     0x4214df
  42147c:	and    dl,bh
  42147e:	popa   
  42147f:	add    DWORD PTR [ecx],edi
  421481:	push   0xe8810192
  421486:	addr16 push esp
  421488:	xchg   edx,eax
  421489:	rcr    BYTE PTR [ecx],cl
  42148b:	xor    al,0xfc
  42148d:	push   ss
  42148e:	push   eax
  42148f:	mov    WORD PTR [eax+edx*8+0x1893d59d],?
  421496:	call   0x54ba:0x274c7879
  42149d:	cli    
  42149e:	push   edi
  42149f:	popa   
  4214a0:	lea    esp,[esi]
  4214a2:	xchg   esp,eax
  4214a3:	jns    0x42142c
  4214a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a6:	repnz lods al,BYTE PTR ds:[esi]
  4214a8:	jo     0x4214a4
  4214aa:	xchg   esi,eax
  4214ab:	push   esp
  4214ac:	das    
  4214ad:	addr16 aam 0xce
  4214b0:	cmp    eax,DWORD PTR ds:0x76a2fd1c
  4214b6:	(bad)  
  4214b7:	jp     0x42152f
  4214b9:	mov    ch,0x3d
  4214bb:	jae    0x42146f
  4214bd:	ins    BYTE PTR es:[di],dx
  4214bf:	mov    ds:0x528a44d6,al
  4214c4:	push   edi
  4214c5:	imul   eax,DWORD PTR [ebx+0x2702d91a],0xffffffd0
  4214cc:	sar    DWORD PTR [ebx+0x24643de],cl
  4214d2:	ds push eax
  4214d4:	add    BYTE PTR [edi+0x4acfa3d3],al
  4214da:	sbb    BYTE PTR [eax+0x320dad75],bh
  4214e0:	cmp    BYTE PTR [eax],bh
  4214e2:	ss (bad) 
  4214e4:	fld    QWORD PTR [eax-0xa]
  4214e7:	ss stc 
  4214e9:	sub    ecx,DWORD PTR [ebx-0x49]
  4214ec:	add    BYTE PTR [ebx],dh
  4214ee:	rcr    DWORD PTR [edi],0x33
  4214f1:	jecxz  0x4214db
  4214f3:	mov    dh,0xb7
  4214f5:	jb     0x421569
  4214f7:	(bad)  
  4214f8:	(bad)  
  4214fa:	cmp    ah,BYTE PTR [eax+ebp*8-0x5928aafa]
  421501:	test   ecx,0xc71d5358
  421507:	mov    eax,ds:0x1c770681
  42150c:	div    DWORD PTR [ebx-0x2b1ba229]
  421512:	or     al,ch
  421514:	mov    ebp,0xe0f9df89
  421519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42151a:	stos   BYTE PTR es:[edi],al
  42151b:	mov    al,ds:0x64c94876
  421520:	mov    ah,BYTE PTR [edx+edx*4-0x3979110]
  421527:	outs   dx,DWORD PTR ds:[esi]
  421528:	sbb    eax,0x76d6ba0f
  42152d:	inc    BYTE PTR [ecx+edx*4+0x4c]
  421531:	cs mov esi,0x3cc8e39b
  421537:	xchg   edx,eax
  421538:	loope  0x42153d
  42153a:	sbb    al,0x58
  42153c:	bound  eax,QWORD PTR [ebx-0x12]
  42153f:	push   eax
  421540:	scas   eax,DWORD PTR es:[edi]
  421541:	addr16 out 0x4a,al
  421544:	jnp    0x42155c
  421546:	cs jg  0x4214ee
  421549:	cs jno 0x4215c7
  42154c:	pop    edx
  42154d:	push   es
  42154e:	mov    cl,0xe6
  421550:	mov    esi,0xeffa9313
  421555:	xchg   edi,eax
  421556:	test   BYTE PTR [ebp-0x25],dh
  421559:	popf   
  42155a:	push   esp
  42155b:	sub    DWORD PTR [ebp+0x68],esp
  42155e:	pop    ebx
  42155f:	repnz xchg ebx,eax
  421561:	xchg   ebx,eax
  421562:	pop    esi
  421564:	addr16 pop ecx
  421566:	jb     0x42153b
  421568:	dec    eax
  421569:	in     eax,0x69
  42156b:	push   ebp
  42156c:	arpl   WORD PTR ds:[edi+eax*2],bp
  421570:	dec    edi
  421571:	ds push edi
  421573:	pop    ebp
  421574:	repz sbb ch,BYTE PTR [ecx]
  421577:	cwde   
  421578:	cmp    eax,0x89d52c1e
  42157d:	rol    DWORD PTR [ecx],cl
  42157f:	sbb    DWORD PTR [edx+eiz*2],ecx
  421582:	dec    ebp
  421583:	int3   
  421584:	mov    ch,BYTE PTR ds:[ebp-0x22]
  421588:	stos   DWORD PTR es:[edi],eax
  421589:	lock ret 0x299c
  42158d:	jl     0x42159d
  42158f:	jb     0x421536
  421591:	mov    eax,ds:0xce0c2a69
  421596:	ja     0x4215a4
  421598:	sub    esp,DWORD PTR [ebp-0x6c8759ac]
  42159e:	xor    ch,al
  4215a0:	mov    edx,0x94f3c6b9
  4215a5:	add    BYTE PTR [ebx],dl
  4215a7:	xor    bl,BYTE PTR ds:0xa71c1cf0
  4215ad:	(bad)
  4215b1:	jo     0x4215b7
  4215b3:	xchg   esp,eax
  4215b4:	ins    DWORD PTR es:[edi],dx
  4215b5:	rol    DWORD PTR [edi-0x584790b],0x3f
  4215bc:	lods   al,BYTE PTR ds:[esi]
  4215bd:	jp     0x4215a5
  4215bf:	push   ss
  4215c0:	out    0x7e,eax
  4215c2:	xchg   ebp,eax
  4215c3:	cs xchg edx,eax
  4215c5:	addr16 (bad) 
  4215c7:	(bad)  
  4215c8:	test   DWORD PTR [ecx-0x388579d4],0xa7bf1d7a
  4215d2:	mov    DWORD PTR [edx-0x29],edi
  4215d5:	pop    ss
  4215d6:	cs aas 
  4215d8:	lahf   
  4215d9:	int3   
  4215da:	lods   al,BYTE PTR ds:[esi]
  4215db:	add    al,0x64
  4215dd:	in     eax,0xc7
  4215df:	fld    TBYTE PTR [ebx-0x41]
  4215e2:	ja     0x4215ea
  4215e4:	jno    0x421616
  4215e6:	imul   edx,DWORD PTR [eax+0x1dcfe243],0xd5642bac
  4215f0:	jb     0x42159d
  4215f2:	retf   0x17b1
  4215f5:	pop    ss
  4215f6:	pop    ebx
  4215f7:	jg     0x421654
  4215f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215fa:	std    
  4215fb:	pop    esp
  4215fc:	loopne 0x421642
  4215fe:	xchg   ebx,eax
  4215ff:	cli    
  421600:	and    ebx,eax
  421602:	mov    bh,0xeb
  421604:	mov    bh,0xb
  421606:	push   edx
  421607:	nop
  421608:	add    ebx,ecx
  42160a:	mov    WORD PTR [esi],fs
  42160c:	fidivr WORD PTR [edx-0x10]
  42160f:	sbb    BYTE PTR [ebp-0x56],0x3
  421613:	and    BYTE PTR [eax-0x1e],dh
  421616:	and    DWORD PTR [eax-0xf3dd15f],esi
  42161c:	lods   al,BYTE PTR ds:[esi]
  42161d:	pop    esi
  42161e:	addr16 ret 0x43b0
  421622:	adc    al,0x1c
  421624:	out    0x8a,eax
  421626:	loop   0x4215ea
  421628:	mov    BYTE PTR [esi],bh
  42162a:	lahf   
  42162b:	push   ds
  42162c:	test   DWORD PTR [ecx+ecx*2+0x57],0xd8294680
  421634:	loop   0x4215f7
  421636:	mov    WORD PTR [edi-0x68bbc9b4],ds
  42163c:	out    dx,eax
  42163d:	ins    DWORD PTR es:[edi],dx
  42163e:	pop    edx
  42163f:	pop    edx
  421640:	ds push ebx
  421642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421643:	outs   dx,DWORD PTR ds:[esi]
  421644:	xchg   ecx,eax
  421645:	dec    eax
  421646:	jae    0x421669
  421648:	hlt    
  421649:	sbb    al,0xe3
  42164b:	xchg   esi,eax
  42164c:	push   esp
  42164d:	push   es
  42164e:	mov    cl,0x1f
  421650:	out    0x29,al
  421652:	stos   BYTE PTR es:[edi],al
  421653:	jmp    0xe85567b2
  421658:	push   ss
  421659:	lahf   
  42165a:	xchg   edi,eax
  42165b:	leave  
  42165c:	mov    edx,0x7b0d14dc
  421661:	xor    al,ah
  421663:	iret   
  421664:	fs (bad) 
  421666:	les    ecx,FWORD PTR [edi]
  421668:	add    esp,esi
  42166a:	stc    
  42166b:	push   es
  42166c:	es xchg edi,eax
  42166e:	or     BYTE PTR [ecx],bl
  421670:	loop   0x421670
  421672:	arpl   WORD PTR [edi+0x17],ax
  421675:	push   0xe6f81e68
  42167a:	nop
  42167b:	xor    DWORD PTR [ebx+eiz*2-0x171d1973],esp
  421682:	push   edi
  421683:	test   al,0xb3
  421685:	xchg   edx,eax
  421686:	inc    edx
  421687:	cwde   
  421688:	out    0x62,eax
  42168a:	fwait
  42168b:	xor    dl,ah
  42168d:	xor    DWORD PTR [ecx+0x28],esp
  421690:	fs mov eax,0x27ad25e
  421696:	test   DWORD PTR [edi-0x3f],ebp
  421699:	imul   edx,DWORD PTR [esi+esi*8-0x60],0xfffffffd
  42169e:	xor    ebx,ebp
  4216a0:	ds and eax,0xc977bfe1
  4216a6:	in     eax,0x77
  4216a8:	stos   BYTE PTR es:[edi],al
  4216a9:	dec    eax
  4216aa:	inc    ecx
  4216ab:	ja     0x421690
  4216ad:	mov    cs,ebp
  4216af:	sub    edx,eax
  4216b1:	xor    ebx,DWORD PTR [ebp-0x40]
  4216b4:	jl     0x4216f6
  4216b6:	ins    BYTE PTR es:[edi],dx
  4216b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216b8:	int    0x8c
  4216ba:	call   0x6efd8da6
  4216bf:	cmp    al,0x1
  4216c1:	in     eax,0x52
  4216c3:	icebp  
  4216c4:	ror    ecx,1
  4216c6:	push   ecx
  4216c7:	out    dx,eax
  4216c8:	cli    
  4216c9:	mov    ebp,?
  4216cb:	bnd jl 0x421714
  4216ce:	add    DWORD PTR [ebp+0x2d76ef47],ebp
  4216d4:	jle    0x4216fa
  4216d6:	mov    dl,0x15
  4216d8:	cwde   
  4216d9:	add    al,0x3
  4216db:	fadd   QWORD PTR [edx]
  4216dd:	adc    ecx,DWORD PTR [ecx-0x5d7fe35f]
  4216e3:	clc    
  4216e4:	lock mov ecx,0x45a51ffa
  4216ea:	ds mov dh,cl
  4216ed:	xchg   esi,eax
  4216ee:	and    eax,0xa8db7984
  4216f3:	repnz and BYTE PTR [ecx],ch
  4216f6:	(bad)  
  4216f7:	push   ebx
  4216f8:	sub    DWORD PTR [esi],esp
  4216fa:	popf   
  4216fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216fc:	dec    ecx
  4216fd:	sbb    al,0xd8
  4216ff:	outs   dx,BYTE PTR ds:[esi]
  421700:	hlt    
  421701:	lods   eax,DWORD PTR ds:[esi]
  421702:	test   al,0x1c
  421704:	jp     0x4216a7
  421706:	cmp    al,al
  421708:	push   ebx
  421709:	imul   ebx,DWORD PTR [ebp+0x1259ad91],0x9f03bbe0
  421713:	test   eax,0x9701dda7
  421718:	dec    eax
  421719:	push   eax
  42171a:	mov    DWORD PTR [edx+0x62da1f1f],eax
  421720:	rcl    BYTE PTR [eax-0x32],0x7
  421724:	dec    esi
  421725:	xchg   ebp,eax
  421726:	inc    ebp
  421727:	pushf  
  421728:	test   eax,0xb40e5aa0
  42172d:	pop    eax
  42172e:	scas   eax,DWORD PTR es:[edi]
  42172f:	push   ebx
  421730:	pop    ds
  421731:	nop
  421732:	xchg   ebx,eax
  421733:	inc    ecx
  421734:	pop    ss
  421735:	push   esp
  421736:	adc    edi,ecx
  421738:	xor    BYTE PTR [ecx*2+0x2855ca1c],bl
  42173f:	and    DWORD PTR [ebp+0x70],0xfffffff5
  421743:	js     0x4216e4
  421745:	xor    bh,BYTE PTR [ecx-0x6c]
  421748:	push   0x9418d706
  42174d:	inc    eax
  42174e:	aas    
  42174f:	data16 jb 0x421740
  421752:	jmp    0x2cfeeb36
  421757:	push   edx
  421758:	cld    
  421759:	imul   esp,DWORD PTR [edx+ebx*2+0x1e7c2bbc],0x399bbbd
  421764:	mov    dh,0x73
  421766:	test   eax,0x7335d07c
  42176b:	lods   al,BYTE PTR ds:[esi]
  42176c:	add    DWORD PTR [ebp+ebp*2+0x368098a1],ebp
  421773:	mov    dl,0xc1
  421775:	xor    ecx,edi
  421777:	(bad)  
  421778:	jge    0x421766
  42177a:	xchg   esp,eax
  42177b:	xchg   esi,eax
  42177c:	fwait
  42177d:	js     0x421747
  42177f:	cdq    
  421780:	lock sbb ecx,DWORD PTR [ebx+esi*8-0x2d]
  421785:	ret    0xeccd
  421788:	fcmove st,st(7)
  42178a:	xor    dh,dl
  42178c:	jns    0x4217db
  42178e:	pop    ss
  42178f:	ret    
  421790:	push   ebp
  421791:	ja     0x42173b
  421793:	dec    ebx
  421794:	mov    al,ds:0xe904eb3d
  421799:	and    bh,dh
  42179b:	scas   eax,DWORD PTR es:[edi]
  42179c:	pop    ebp
  42179d:	out    0xd0,eax
  42179f:	mov    esp,0x6d300981
  4217a4:	push   edx
  4217a5:	xor    dl,ch
  4217a7:	retf   0xbada
  4217aa:	inc    ebp
  4217ab:	sbb    eax,0xeae6efcd
  4217b0:	jle    0x4217de
  4217b2:	jle    0x421766
  4217b4:	pop    ds
  4217b5:	mov    edx,esi
  4217b7:	jecxz  0x421775
  4217b9:	icebp  
  4217ba:	aad    0xc8
  4217bc:	adc    DWORD PTR [ebx+0x4534ce25],esi
  4217c2:	xor    bh,BYTE PTR [ecx+0x50]
  4217c5:	jmp    0xe3ce:0xf4d20dec
  4217cc:	bound  eax,QWORD PTR [ecx+0x2b]
  4217cf:	(bad)  
  4217d0:	call   0xef3b248c
  4217d5:	xchg   ecx,eax
  4217d6:	mov    edx,?
  4217d8:	cwde   
  4217d9:	mov    ebx,DWORD PTR [ebx-0x12]
  4217dc:	push   0x48f6b436
  4217e1:	cli    
  4217e2:	jo     0x421852
  4217e4:	add    ebp,ebx
  4217e6:	das    
  4217e7:	jns    0x4217cd
  4217e9:	xchg   edx,eax
  4217ea:	jne    0x4217c2
  4217ec:	or     bh,BYTE PTR [edi]
  4217ee:	cmp    eax,0x8ec62e3b
  4217f3:	sub    edi,DWORD PTR [ebx]
  4217f5:	lods   eax,DWORD PTR ds:[esi]
  4217f6:	jmp    0x1f030187
  4217fb:	stc    
  4217fc:	cmp    al,0x58
  4217fe:	inc    esp
  4217ff:	clc    
  421800:	mov    ebp,DWORD PTR [esi-0x7d]
  421803:	dec    edi
  421804:	jp     0x4217b3
  421806:	xchg   esp,eax
  421807:	mov    edi,esp
  421809:	lods   eax,DWORD PTR ds:[esi]
  42180a:	imul   ebp,DWORD PTR [eax],0x5c
  42180d:	or     edi,0x3dc21070
  421813:	sbb    DWORD PTR [esi+0x63],eax
  421816:	mov    esp,0xe8a02369
  42181b:	(bad)  
  42181c:	xor    edi,DWORD PTR [ecx-0x25]
  42181f:	mov    edi,0x52b33b2c
  421824:	jge    0x42189a
  421826:	sbb    bl,BYTE PTR [eax+0x1f820e83]
  42182c:	out    dx,al
  42182d:	mov    ebp,0x90e41607
  421832:	push   ebp
  421833:	or     al,0x5a
  421835:	push   edx
  421836:	or     eax,0xbddb1245
  42183b:	das    
  42183c:	pop    edi
  42183d:	push   esp
  42183e:	push   ecx
  42183f:	(bad)  
  421840:	jb     0x4217d0
  421842:	dec    ebp
  421843:	addr16 out dx,al
  421845:	and    DWORD PTR [eax],ebx
  421847:	push   esi
  421848:	out    dx,al
  421849:	pop    esp
  42184a:	or     ebp,DWORD PTR [ecx+0x797cae43]
  421850:	push   ebx
  421851:	and    BYTE PTR [ecx+0x17],dh
  421854:	inc    edx
  421855:	lock mov ch,0x40
  421858:	and    al,0xae
  42185a:	xlat   BYTE PTR ds:[ebx]
  42185b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42185c:	int    0xbc
  42185e:	into   
  42185f:	adc    DWORD PTR [ecx-0x3f],edx
  421862:	xor    BYTE PTR [ecx-0x31828292],al
  421868:	test   eax,0x4ca00c9d
  42186d:	or     al,0xca
  42186f:	repnz mov al,0x81
  421872:	loopne 0x42181f
  421874:	scas   al,BYTE PTR es:[edi]
  421875:	xor    edx,DWORD PTR [esi-0x43a689dd]
  42187b:	add    al,BYTE PTR [esi+0x69]
  42187e:	repnz sub eax,0xbaf28f6d
  421884:	and    eax,DWORD PTR [eax+0x4ab181b9]
  42188a:	lds    edi,FWORD PTR [ecx+0x76]
  42188d:	pop    ebp
  42188e:	sub    al,0xf2
  421890:	sub    eax,0xfe5cc7ca
  421895:	and    al,0xdc
  421897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421898:	daa    
  421899:	(bad)  
  42189a:	test   al,0xe
  42189d:	daa    
  42189e:	xchg   ebx,eax
  42189f:	inc    ebx
  4218a0:	hlt    
  4218a1:	test   DWORD PTR [edi],0x86ef2a72
  4218a7:	mov    BYTE PTR [eax-0x481becb1],dh
  4218ad:	push   edi
  4218ae:	test   BYTE PTR [edi+0x660994ac],cl
  4218b4:	push   edi
  4218b5:	(bad)
  4218b8:	push   eax
  4218b9:	(bad)  
  4218bb:	jmp    0xee6b:0x72d775bf
  4218c2:	and    al,0xe6
  4218c4:	popa   
  4218c5:	push   esi
  4218c6:	inc    ebp
  4218c7:	sub    bh,BYTE PTR [ebp+0x32c7ab81]
  4218cd:	iret   
  4218ce:	sub    al,0x16
  4218d0:	inc    ebp
  4218d1:	adc    cl,BYTE PTR [edx-0x1b]
  4218d4:	je     0x42192b
  4218d6:	nop
  4218d7:	or     bh,dl
  4218d9:	cmp    eax,0xcf9e891c
  4218de:	dec    eax
  4218df:	mov    eax,0xcde68319
  4218e4:	sbb    cl,dl
  4218e6:	xchg   esp,eax
  4218e7:	jecxz  0x421931
  4218e9:	jecxz  0x421953
  4218eb:	repz or ebx,ebp
  4218ee:	arpl   WORD PTR [edx-0x3e062256],si
  4218f4:	add    DWORD PTR [eax],edx
  4218f6:	and    ecx,DWORD PTR [ebx-0x3eda51e5]
  4218fc:	sub    BYTE PTR [esi-0x1ce08522],dl
  421902:	sti    
  421903:	mul    DWORD PTR [ecx+0x293bda66]
  421909:	ret    0x7ec3
  42190c:	leave  
  42190d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42190f:	test   al,ah
  421911:	xchg   ebp,eax
  421912:	in     al,dx
  421913:	xor    al,0x3e
  421915:	jns    0x421983
  421917:	aas    
  421918:	cmc    
  421919:	mov    al,0x80
  42191b:	std    
  42191c:	jns    0x4218d6
  42191e:	(bad)  
  42191f:	sub    DWORD PTR [ebp-0x4bfec618],eax
  421925:	and    esi,DWORD PTR [edx]
  421927:	pop    ecx
  421928:	sbb    edx,edx
  42192a:	daa    
  42192b:	pop    edx
  42192c:	aaa    
  42192d:	mov    al,0xf2
  42192f:	loope  0x421947
  421931:	inc    esi
  421932:	mov    edx,0x3bdf2f8f
  421937:	xchg   ebp,esi
  421939:	and    bl,BYTE PTR [ebx]
  42193b:	jg     0x421939
  42193d:	(bad)  
  42193e:	fnstcw WORD PTR [edx+0x56]
  421941:	test   al,0x73
  421943:	imul   edx,edx,0x6d
  421946:	xchg   ecx,eax
  421947:	mov    bh,0xa3
  421949:	in     al,0x7a
  42194b:	sbb    al,0xf4
  42194e:	bnd jmp 0xf716e320
  421954:	xchg   esp,eax
  421955:	cmp    al,0x2d
  421957:	(bad)  
  421958:	imul   esi,eax,0xb3d0a39
  42195e:	ja     0x42191f
  421960:	jg     0x421969
  421962:	arpl   WORD PTR [edx-0x44],di
  421965:	not    BYTE PTR [eax-0x48736061]
  42196b:	hlt    
  42196c:	(bad)  
  42196e:	xor    al,0x5d
  421970:	mov    bh,0x93
  421972:	mov    esi,0xd691e9de
  421977:	fimul  WORD PTR [esi]
  421979:	push   es
  42197a:	push   ds
  42197b:	or     edi,DWORD PTR [edx+0x39]
  42197e:	mov    bh,0x7f
  421980:	jb     0x42194c
  421982:	dec    ecx
  421983:	imul   ebx,DWORD PTR [edi-0x72],0x8a53a43b
  42198a:	cmp    DWORD PTR [edi-0x28b442b8],0x2
  421991:	jne    0x421973
  421993:	mov    es,WORD PTR [edi+0x5d960d05]
  421999:	out    0x44,al
  42199b:	push   ss
  42199c:	cld    
  42199d:	(bad)  
  42199e:	repnz inc edx
  4219a0:	and    cl,BYTE PTR [ebx-0x74184a4e]
  4219a6:	pop    eax
  4219a7:	mul    DWORD PTR [ebx]
  4219a9:	add    DWORD PTR [ebp+0x7359daeb],ecx
  4219af:	xor    DWORD PTR [ebx+ebx*8-0x340496d1],0x2
  4219b7:	inc    ecx
  4219b8:	cmp    DWORD PTR [esi],esp
  4219ba:	cmp    eax,0x5ec464b2
  4219bf:	inc    ebp
  4219c0:	cld    
  4219c1:	xor    al,ah
  4219c3:	aas    
  4219c4:	cwde   
  4219c5:	sar    BYTE PTR [ecx-0x20d39006],cl
  4219cb:	imul   ebp,esp,0x6
  4219ce:	cli    
  4219cf:	(bad)  
  4219d0:	xor    DWORD PTR [eax+0x56],esp
  4219d3:	in     eax,dx
  4219d4:	imul   ebp,eax,0x12e6fed8
  4219da:	std    
  4219db:	test   al,0xe5
  4219dd:	and    esi,edx
  4219df:	mov    BYTE PTR [eax],al
  4219e1:	push   es
  4219e2:	jae    0x421978
  4219e4:	aad    0xe8
  4219e6:	es or  eax,0x6d9390d5
  4219ec:	cwde   
  4219ed:	add    eax,0x8982aa92
  4219f2:	lahf   
  4219f3:	jmp    0x6494f788
  4219f8:	test   BYTE PTR [esi+0x70cf69fd],bl
  4219fe:	xchg   esi,eax
  4219ff:	sahf   
  421a00:	adc    ch,ch
  421a02:	cmc    
  421a03:	add    eax,esp
  421a05:	stos   BYTE PTR es:[edi],al
  421a06:	and    al,0xf0
  421a08:	add    al,0x39
  421a0a:	jne    0x4219ba
  421a0c:	dec    ebp
  421a0d:	repnz dec esp
  421a0f:	fild   QWORD PTR [ebp+0x154eab23]
  421a15:	xor    al,BYTE PTR [eax-0x12]
  421a18:	xor    edi,DWORD PTR [eax-0x795a51c5]
  421a1e:	sbb    BYTE PTR [esi-0x5],bh
  421a21:	in     eax,dx
  421a22:	xchg   edx,eax
  421a23:	sub    dl,ch
  421a25:	jle    0x421a36
  421a27:	shl    ch,0x37
  421a2a:	xchg   edi,eax
  421a2b:	(bad)  
  421a2c:	push   ebp
  421a2d:	lds    ebx,FWORD PTR [edx]
  421a2f:	inc    edi
  421a30:	ret    0xe6dd
  421a33:	lea    esp,[ecx+edi*1-0x6762af2d]
  421a3a:	xchg   edi,eax
  421a3b:	fidiv  DWORD PTR [ebx+0x7df77b71]
  421a41:	inc    edi
  421a42:	test   bl,ah
  421a44:	repnz imul ecx,edx,0xb7ea9c0
  421a4b:	xor    DWORD PTR [edi],ecx
  421a4d:	dec    esp
  421a4e:	loopne 0x421a3b
  421a50:	scas   al,BYTE PTR es:[edi]
  421a51:	ret    
  421a52:	mov    esp,0x52f2b4e5
  421a57:	and    BYTE PTR [edx+0x7cae5575],ch
  421a5d:	xchg   esi,eax
  421a5e:	ja     0x421a23
  421a60:	sbb    DWORD PTR [ebx-0x476df565],ebp
  421a66:	mov    edx,DWORD PTR [esi]
  421a68:	and    bl,BYTE PTR [esi]
  421a6a:	cs std 
  421a6c:	adc    eax,0x1c56d4f
  421a71:	(bad)  
  421a72:	aaa    
  421a73:	cmp    BYTE PTR [ecx-0x37],0x69
  421a77:	push   edi
  421a78:	loope  0x421ad6
  421a7a:	sub    eax,esi
  421a7c:	jb     0x421a46
  421a7e:	fldcw  WORD PTR [ebp+0x49eb122]
  421a84:	in     eax,dx
  421a85:	je     0x421a67
  421a87:	lods   eax,DWORD PTR ds:[esi]
  421a88:	or     al,0xc
  421a8a:	mov    esp,DWORD PTR [ebx-0x747b2303]
  421a90:	cmp    ebx,eax
  421a92:	aas    
  421a93:	and    ebx,DWORD PTR [eax+0x20554776]
  421a99:	jge    0x421aa1
  421a9b:	add    DWORD PTR [eax],ebp
  421a9d:	pavgb  mm7,mm4
  421aa0:	pop    esp
  421aa1:	ja     0x421a6a
  421aa3:	dec    ebx
  421aa4:	adc    eax,0x55fb42db
  421aa9:	push   ss
  421aaa:	sbb    dl,BYTE PTR [edx+0x189e1657]
  421ab0:	add    BYTE PTR [edx-0x40],dh
  421ab3:	pop    ds
  421ab4:	cld    
  421ab5:	stos   DWORD PTR es:[edi],eax
  421ab6:	mov    eax,0x9cc92be1
  421abb:	dec    edx
  421abc:	mov    es,WORD PTR gs:[eax-0xdce4c6e]
  421ac3:	in     eax,dx
  421ac4:	repz out dx,al
  421ac6:	mov    ebp,0x4166801a
  421acb:	inc    esi
  421acc:	push   ebx
  421acd:	dec    ebp
  421ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421acf:	jns    0x421abe
  421ad1:	addr16 jb 0x421b29
  421ad4:	aaa    
  421ad5:	add    BYTE PTR [ecx],dl
  421ad7:	shl    BYTE PTR [eax-0x6e1676c8],cl
  421add:	jmp    0xbf5c:0xa6724a9
  421ae4:	or     eax,0x302d33c0
  421ae9:	add    al,0x1
  421aeb:	mov    dh,0x98
  421aed:	clc    
  421aee:	sahf   
  421aef:	lock add DWORD PTR [ecx+0x360dd78e],ebx
  421af6:	mov    cl,0xf9
  421af8:	mov    al,0xa
  421afa:	jnp    0x421abb
  421afc:	add    DWORD PTR [eax],ebx
  421afe:	repnz sub edx,ebp
  421b01:	fidivr DWORD PTR ds:0xb11ba28b
  421b07:	mov    ebx,0x11d41300
  421b0c:	xchg   esi,eax
  421b0d:	add    DWORD PTR [edi-0x6f],edx
  421b10:	popf   
  421b11:	xor    edx,edi
  421b13:	scas   eax,DWORD PTR es:[edi]
  421b14:	xor    al,0xfc
  421b16:	imul   ebp,ebp,0x4aec526
  421b1c:	mov    ebx,0x46822875
  421b21:	rcr    DWORD PTR [ebp+0x5f],0x6d
  421b25:	clc    
  421b26:	jbe    0x421b81
  421b28:	jecxz  0x421aad
  421b2a:	mov    ecx,0x1cf7fd
  421b2f:	push   esi
  421b30:	in     al,dx
  421b31:	push   ecx
  421b32:	(bad)  
  421b33:	xchg   edi,eax
  421b34:	push   ebx
  421b35:	out    dx,eax
  421b36:	jmp    0x421b7e
  421b38:	les    edx,FWORD PTR [eax+0x3032456c]
  421b3e:	popf   
  421b3f:	xor    DWORD PTR [ebx+0x3bf9bbdd],ebp
  421b45:	and    eax,0x550979c
  421b4a:	ret    
  421b4b:	lods   al,BYTE PTR ds:[esi]
  421b4c:	shl    BYTE PTR [ebx],1
  421b4e:	shl    DWORD PTR ds:0xc0d96d82,0x5c
  421b55:	in     eax,dx
  421b56:	push   0x6174e07
  421b5b:	push   ecx
  421b5c:	ror    BYTE PTR [ecx],1
  421b5e:	test   al,0xc6
  421b60:	test   BYTE PTR [ecx+0x5f6a1ca4],0xf9
  421b67:	and    bh,BYTE PTR [ecx+0x2d]
  421b6a:	dec    edi
  421b6b:	sub    esi,DWORD PTR [eax+esi*2]
  421b6e:	mov    edi,DWORD PTR [eax+0x5d]
  421b71:	mov    eax,ds:0x4ba3def2
  421b76:	data16 loope 0x421bf4
  421b79:	inc    ebx
  421b7a:	mov    ds:0x512b1f3f,al
  421b7f:	adc    eax,esp
  421b81:	cmc    
  421b82:	mov    bl,0x44
  421b84:	sahf   
  421b85:	in     al,0x79
  421b87:	retf   
  421b88:	xor    eax,0xa175e817
  421b8d:	rcl    DWORD PTR [ebx-0xd930d1],0x41
  421b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b95:	inc    esi
  421b96:	sbb    edi,DWORD PTR [edi]
  421b98:	cld    
  421b99:	in     eax,0x91
  421b9b:	cmp    DWORD PTR [edi+0xc],esi
  421b9e:	call   0xe7f7:0x4dd7ea7e
  421ba5:	mul    BYTE PTR [edx+0x15]
  421ba8:	cmp    al,0xb7
  421baa:	jle    0x421b4a
  421bac:	pop    ds
  421bad:	(bad)  
  421bae:	lahf   
  421baf:	js     0x421c0f
  421bb1:	jne    0x421c03
  421bb3:	je     0x421b7f
  421bb5:	enter  0x4cf4,0x18
  421bb9:	sbb    eax,0xcb7b3052
  421bbe:	sbb    al,0x9b
  421bc0:	jmp    0x421bcd
  421bc2:	jmp    0x6790e44
  421bc7:	dec    esp
  421bc8:	out    dx,eax
  421bc9:	pop    ebx
  421bca:	sahf   
  421bcb:	add    BYTE PTR [esi+0x78],ah
  421bce:	cwde   
  421bcf:	adc    bh,BYTE PTR [edi-0x29]
  421bd2:	add    BYTE PTR [ebp-0x2a],al
  421bd5:	mov    esi,0x1333f4d3
  421bda:	mov    dh,0x54
  421bdc:	jecxz  0x421b74
  421bde:	mov    dl,0xae
  421be0:	sbb    cl,BYTE PTR [esi]
  421be2:	js     0x421c11
  421be4:	pop    DWORD PTR [edx+esi*1-0x187ee8d0]
  421beb:	pop    edx
  421bec:	dec    ecx
  421bed:	adc    eax,0x222d3a11
  421bf2:	mov    dh,0x45
  421bf4:	loopne 0x421b78
  421bf6:	sub    BYTE PTR [edx-0x6d],ah
  421bf9:	add    eax,DWORD PTR [esp+ebp*1]
  421bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bfd:	push   eax
  421bfe:	cs test esi,edi
  421c01:	adc    al,0x7b
  421c03:	cdq    
  421c04:	fdivr  DWORD PTR [ebp+0x68]
  421c07:	mov    dh,0xd3
  421c09:	dec    edx
  421c0a:	shl    dl,cl
  421c0c:	popf   
  421c0d:	repz or ch,BYTE PTR [edi-0x22]
  421c11:	fcomp  DWORD PTR [ecx]
  421c13:	inc    esp
  421c14:	inc    ebp
  421c15:	aas    
  421c16:	jns    0x421bad
  421c18:	imul   esp,DWORD PTR [ebx+edi*8],0x77
  421c1c:	sub    edx,ecx
  421c1e:	lea    eax,[edx+0x60afe102]
  421c24:	(bad)
  421c27:	int    0x82
  421c29:	jmp    0x421c5b
  421c2b:	and    al,BYTE PTR [edx]
  421c2d:	out    dx,eax
  421c2e:	sbb    eax,0xa1c748b1
  421c33:	jnp    0x421c0f
  421c35:	nop
  421c36:	shl    ebx,0xd6
  421c39:	xchg   esi,eax
  421c3a:	dec    eax
  421c3b:	inc    ebx
  421c3c:	jbe    0x421c9a
  421c3e:	sbb    al,0x6b
  421c40:	adc    ah,0x40
  421c43:	hlt    
  421c44:	fisub  WORD PTR [edx+0x924cc35]
  421c4a:	shl    BYTE PTR [eax+0x5025e953],1
  421c50:	and    eax,0xc8df59ff
  421c55:	outs   dx,BYTE PTR ds:[esi]
  421c56:	or     bh,dl
  421c58:	es std 
  421c5a:	push   ds
  421c5b:	inc    edi
  421c5c:	pop    esi
  421c5d:	cdq    
  421c5e:	ds inc esp
  421c60:	inc    sp
  421c62:	sbb    eax,0x252839bd
  421c67:	rol    DWORD PTR [esi],1
  421c69:	shl    BYTE PTR [eax],0x9f
  421c6c:	jo     0x421ce2
  421c6e:	retf   
  421c6f:	test   DWORD PTR [ecx+0x3b],eax
  421c72:	push   esi
  421c73:	lock jl 0x421c35
  421c76:	push   0xe6e6afba
  421c7b:	or     DWORD PTR [ebx],0xfb62264a
  421c81:	retf   
  421c82:	and    BYTE PTR ds:0x754efad1,0x68
  421c89:	test   DWORD PTR [ebx-0x3dcd5b07],edi
  421c8f:	out    0x9e,al
  421c91:	mov    ebx,0xdbfc528f
  421c96:	enter  0x1f1b,0x1c
  421c9a:	pop    esp
  421c9b:	cld    
  421c9c:	fs lahf 
  421c9e:	sbb    DWORD PTR [edi+edx*8],ebx
  421ca1:	les    esi,FWORD PTR [edx+0x2adb63b2]
  421ca7:	aam    0x48
  421ca9:	nop
  421caa:	pop    eax
  421cab:	lock in al,dx
  421cad:	repnz sbb al,0xa4
  421cb0:	loop   0x421cdb
  421cb2:	in     eax,0xd1
  421cb4:	(bad)  
  421cb5:	arpl   si,bp
  421cb7:	push   ds
  421cb8:	xchg   edi,eax
  421cb9:	or     ax,0x5135
  421cbd:	int    0x32
  421cbf:	call   0xf69af4da
  421cc4:	or     DWORD PTR [edi],0xbc4c6202
  421cca:	loop   0x421c71
  421ccc:	lahf   
  421ccd:	lea    ebx,ds:0x6050a348
  421cd3:	sbb    dl,BYTE PTR fs:[eax+ecx*2]
  421cd7:	pop    edx
  421cd8:	push   ebx
  421cd9:	pop    ss
  421cda:	mov    DWORD PTR [edx],ebx
  421cdc:	or     ch,BYTE PTR ds:0x86fe5aed
  421ce2:	sub    ah,bh
  421ce4:	mov    edx,0xff13d62c
  421ce9:	inc    edi
  421cea:	cdq    
  421ceb:	lahf   
  421cec:	pop    esp
  421ced:	jecxz  0x421c97
  421cef:	jnp    0x421ca7
  421cf1:	nop
  421cf2:	dec    ebp
  421cf3:	and    DWORD PTR [edi-0x1],esi
  421cf6:	dec    ebp
  421cf7:	and    BYTE PTR [edx-0x64307d4e],dl
  421cfd:	xchg   esp,eax
  421cfe:	or     eax,0x5815b3cc
  421d03:	push   DWORD PTR [edx]
  421d05:	adc    BYTE PTR [eax+eiz*4-0x40],0x44
  421d0a:	and    esi,DWORD PTR [edx+eiz*2-0x55]
  421d0e:	rcr    ebx,1
  421d10:	push   edi
  421d11:	sub    al,0x20
  421d13:	outs   dx,BYTE PTR ds:[esi]
  421d14:	das    
  421d15:	into   
  421d16:	sbb    ebp,edx
  421d18:	lds    ebp,FWORD PTR [eax+0x61]
  421d1b:	mov    bh,0x24
  421d1d:	xor    cl,BYTE PTR ds:0xebe46619
  421d23:	sub    eax,0x68bb6e99
  421d28:	loopne 0x421cc0
  421d2a:	sbb    BYTE PTR ds:0x6c65c5ad,bl
  421d30:	or     al,BYTE PTR [esi]
  421d32:	mov    esp,0xc4566663
  421d37:	dec    esi
  421d38:	addr16 ja 0x421d90
  421d3b:	sub    DWORD PTR [edi],0x18
  421d3e:	or     cl,BYTE PTR [esi+0x48f8fcdc]
  421d44:	adc    DWORD PTR [edx+0x33793d57],edx
  421d4a:	bswap  ebp
  421d4c:	mov    ch,0xf6
  421d4e:	jge    0x421d37
  421d50:	pop    esp
  421d51:	sub    al,0x5b
  421d53:	clc    
  421d54:	pop    ebx
  421d55:	aad    0x58
  421d57:	(bad)  
  421d58:	xor    DWORD PTR [esi+0x7aaf27a0],ecx
  421d5e:	mov    eax,ds:0x5dc40f8d
  421d63:	dec    eax
  421d64:	xchg   ecx,eax
  421d65:	popa   
  421d66:	pusha  
  421d67:	dec    edi
  421d68:	ds retf 
  421d6a:	cmp    ah,BYTE PTR [eax+0x34b3a82]
  421d70:	fst    DWORD PTR [edi+0x4eeb6f14]
  421d76:	test   BYTE PTR [ecx-0x7d71eef0],ah
  421d7c:	and    bl,bl
  421d7e:	add    bh,BYTE PTR ds:0x9ec124c3
  421d84:	adc    al,0x26
  421d86:	mov    ebp,0xf1ada09f
  421d8b:	push   ebp
  421d8c:	cwde   
  421d8d:	rol    BYTE PTR [ebp-0x4a],cl
  421d90:	sbb    al,0x34
  421d92:	jge    0x421dea
  421d94:	add    ebx,eax
  421d96:	call   0x79139b3a
  421d9b:	jo     0x421d25
  421d9d:	mov    al,ds:0x5095cc1b
  421da2:	adc    DWORD PTR [edx],edi
  421da4:	mov    edi,0x2c73d6a3
  421da9:	jbe    0x421dda
  421dab:	mov    ds:0x8eea769b,eax
  421db0:	sbb    ecx,eax
  421db2:	cmp    al,0x6b
  421db4:	loope  0x421e17
  421db6:	gs pop esi
  421db8:	(bad)  
  421db9:	mov    edx,0xd56fcace
  421dbe:	bound  esp,QWORD PTR [eax+edx*2+0x68eda2c8]
  421dc5:	or     BYTE PTR [edi-0x6],ah
  421dc8:	xor    dh,BYTE PTR [esi+0x6f]
  421dcb:	test   DWORD PTR [edi],ecx
  421dcd:	mov    ebx,0x69d99cff
  421dd2:	and    edx,ecx
  421dd4:	lods   eax,DWORD PTR ds:[esi]
  421dd5:	xchg   ebx,eax
  421dd6:	stc    
  421dd7:	xor    al,0xf6
  421dd9:	fadd   QWORD PTR [edx]
  421ddb:	xchg   ecx,eax
  421ddc:	(bad)  
  421ddd:	push   ecx
  421dde:	sbb    BYTE PTR [ecx+0xf],bh
  421de1:	pop    edi
  421de2:	js     0x421d7e
  421de4:	pop    ds
  421de5:	dec    esp
  421de6:	push   0x3f
  421de8:	fdiv   st,st(6)
  421dea:	jmp    0x94fd05b7
  421def:	and    BYTE PTR [ebp+0x5d],ch
  421df2:	cmp    eax,0xd187518a
  421df7:	(bad)  [edi]
  421df9:	xchg   ebx,eax
  421dfa:	mov    al,ds:0xc33f807
  421dff:	cmp    DWORD PTR [ebp+0x5d74452b],0x3a
  421e06:	push   0xfa029ab1
  421e0b:	inc    eax
  421e0c:	gs call 0x85d17c06
  421e12:	nop
  421e13:	push   ds
  421e14:	out    dx,eax
  421e15:	push   es
  421e16:	mov    eax,0xb6d0b1d9
  421e1b:	mov    ebx,0x6391bace
  421e20:	stos   DWORD PTR es:[edi],eax
  421e21:	pop    ss
  421e22:	inc    eax
  421e23:	xlat   BYTE PTR ds:[ebx]
  421e24:	pop    esp
  421e25:	inc    ebp
  421e26:	mov    bh,0xb0
  421e28:	sub    ebx,DWORD PTR [ecx-0x37]
  421e2b:	push   0xba0061c8
  421e30:	mov    ch,0xe5
  421e32:	add    eax,0x36a32ba0
  421e37:	fist   DWORD PTR [edi]
  421e39:	dec    eax
  421e3a:	out    0xd4,eax
  421e3c:	mov    ah,0x8
  421e3e:	in     eax,dx
  421e3f:	ret    
  421e40:	add    BYTE PTR [ebx-0x23],ah
  421e43:	or     eax,0x53920e39
  421e48:	add    bh,bh
  421e4a:	jno    0x421e7f
  421e4c:	xchg   esi,eax
  421e4d:	sub    al,0xf8
  421e4f:	add    ebp,DWORD PTR [edi+esi*8+0x1f7af71]
  421e56:	mov    ds:0x24c9fe8a,eax
  421e5b:	jne    0x421e68
  421e5d:	mov    fs,WORD PTR ds:0xe0833a8c
  421e63:	les    ecx,FWORD PTR [ebp+0x2e492e28]
  421e69:	and    DWORD PTR [eax+0x6b],ecx
  421e6c:	inc    esp
  421e6d:	dec    eax
  421e6e:	in     eax,dx
  421e6f:	clc    
  421e70:	clc    
  421e71:	in     eax,0x81
  421e73:	cmc    
  421e74:	in     eax,dx
  421e75:	je     0x421e3b
  421e77:	in     al,0x40
  421e79:	leave  
  421e7a:	jl     0x421e85
  421e7c:	push   cs
  421e7d:	pop    edi
  421e7e:	fsubr  DWORD PTR [edx]
  421e80:	pop    ecx
  421e81:	bound  esp,QWORD PTR [esi+ebp*1-0x23]
  421e85:	mov    cl,0xf8
  421e87:	and    ebx,DWORD PTR [esi+0x4cf8de84]
  421e8d:	xor    eax,0x6d2f6958
  421e92:	into   
  421e93:	icebp  
  421e94:	js     0x421edd
  421e96:	out    0xb4,al
  421e98:	call   0x36e0e8c0
  421e9d:	fcom   DWORD PTR [ecx+0x45]
  421ea0:	int    0x9e
  421ea2:	sub    eax,esi
  421ea4:	mov    ebx,0x3836aaf3
  421ea9:	or     al,0xfa
  421eab:	or     DWORD PTR [ecx+0xd337a57],ecx
  421eb1:	add    al,0xae
  421eb3:	in     al,0x68
  421eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421eb6:	retf   
  421eb7:	or     eax,DWORD PTR [edi+0x3c]
  421eba:	and    al,0x59
  421ebc:	xchg   BYTE PTR [esi+0x287f30c8],dl
  421ec2:	push   ss
  421ec3:	push   esp
  421ec4:	enter  0xe0d5,0x67
  421ec8:	ficomp WORD PTR [esi]
  421eca:	xor    bl,bh
  421ecc:	call   0x4354:0x3e5f0f78
  421ed3:	add    eax,0xc27da0ce
  421ed8:	loop   0x421ee1
  421eda:	lock shr BYTE PTR [eax-0x16],1
  421ede:	std    
  421edf:	(bad)  
  421ee1:	scas   eax,DWORD PTR es:[edi]
  421ee2:	icebp  
  421ee3:	push   ebp
  421ee4:	mov    dh,0x1d
  421ee6:	adc    al,0x2f
  421ee8:	cs jae 0x421eed
  421eeb:	sahf   
  421eec:	and    BYTE PTR [ebp+esi*4-0xb8f22fa],al
  421ef3:	cmp    eax,0x2d964b6
  421ef8:	ins    BYTE PTR es:[edi],dx
  421ef9:	cmp    BYTE PTR [edx],cl
  421efb:	and    eax,0x95a095bd
  421f00:	pop    edx
  421f01:	(bad)  
  421f03:	adc    ecx,esp
  421f05:	test   DWORD PTR [ecx+0x55961eb9],ebx
  421f0b:	cwde   
  421f0c:	stc    
  421f0d:	cwde   
  421f0e:	and    esp,DWORD PTR [ebp-0x15e69e79]
  421f14:	xor    ah,ch
  421f16:	div    BYTE PTR [eax+0x5bbc40a2]
  421f1c:	adc    edi,DWORD PTR [eax]
  421f1e:	cld    
  421f1f:	dec    esi
  421f20:	jmp    0x6069c7e9
  421f25:	mov    ch,0xef
  421f27:	mov    al,ds:0xdbdf8949
  421f2c:	mov    esi,0xfbae084b
  421f31:	add    dh,cl
  421f33:	inc    ebp
  421f34:	js     0x421ebd
  421f36:	les    ebx,FWORD PTR [edx+ebp*2+0x6c]
  421f3a:	leave  
  421f3b:	inc    edi
  421f3c:	icebp  
  421f3d:	adc    dh,dl
  421f3f:	sub    DWORD PTR [eax-0x4e],0xffffff90
  421f43:	mov    edi,0xfde303a4
  421f48:	pop    ebx
  421f49:	bound  ecx,QWORD PTR [edx+edx*2]
  421f4c:	or     al,0x93
  421f4e:	stos   DWORD PTR es:[edi],eax
  421f4f:	adc    ah,cl
  421f51:	inc    esp
  421f52:	pop    ecx
  421f53:	mov    edi,0x6685e976
  421f58:	in     al,0x6b
  421f5a:	in     eax,dx
  421f5b:	in     al,dx
  421f5c:	dec    edi
  421f5d:	mov    DWORD PTR [eax],esp
  421f5f:	out    dx,al
  421f60:	pop    es
  421f61:	mov    ebp,0x9084d96c
  421f66:	jns    0x421fc2
  421f68:	fs mov bl,0x91
  421f6b:	sbb    dh,dl
  421f6d:	push   0x47f92f6c
  421f72:	pop    ss
  421f73:	xor    eax,0x6d9e2630
  421f78:	mov    DWORD PTR [esi+0x2ac3478b],edi
  421f7e:	pop    ecx
  421f7f:	sbb    DWORD PTR [ebx],edi
  421f81:	and    BYTE PTR [ecx-0x5e],0x7f
  421f85:	fcmovb st,st(6)
  421f87:	call   0x1dccb9a0
  421f8c:	adc    eax,0xe62a2dc5
  421f91:	push   ebx
  421f92:	jmp    0xfb4c:0x37af582b
  421f99:	fs xchg edi,eax
  421f9b:	inc    ebx
  421f9c:	sub    DWORD PTR [ebx-0x20],esp
  421f9f:	cmp    al,0x7b
  421fa1:	jl     0x421f62
  421fa3:	lods   eax,DWORD PTR ds:[esi]
  421fa4:	bound  ebx,QWORD PTR [eax]
  421fa6:	cmc    
  421fa7:	leave  
  421fa8:	stc    
  421fa9:	repz neg bh
  421fac:	pop    ss
  421fad:	jbe    0x421f63
  421faf:	fild   QWORD PTR [esi+0x19c6eeec]
  421fb5:	push   ebp
  421fb6:	jle    0x421f87
  421fb8:	and    eax,0xeb20afc1
  421fbd:	ret    
  421fbe:	pop    ecx
  421fbf:	push   eax
  421fc0:	dec    edx
  421fc1:	xchg   ecx,eax
  421fc2:	mov    esi,0x83262ce9
  421fc7:	pop    ecx
  421fc8:	xchg   esp,eax
  421fc9:	push   0xe52c5dca
  421fce:	inc    ecx
  421fcf:	mov    ebp,0xa7a60d26
  421fd4:	xchg   ebx,eax
  421fd5:	int3   
  421fd6:	(bad)  
  421fd7:	jecxz  0x422008
  421fd9:	or     DWORD PTR [edx],esp
  421fdb:	mov    ebx,DWORD PTR [edx]
  421fdd:	pop    ebp
  421fde:	jle    0x421f6f
  421fe0:	aas    
  421fe1:	pop    eax
  421fe2:	daa    
  421fe3:	cmc    
  421fe4:	xchg   BYTE PTR [eax],ch
  421fe6:	xor    al,0x69
  421fe9:	shl    DWORD PTR [eax-0x4bdec9a8],1
  421fef:	gs fcmovnbe st,st(6)
  421ff2:	inc    ebx
  421ff3:	pop    esp
  421ff4:	jno    0x421fd1
  421ff6:	jp     0x421fb6
  421ff8:	leave  
  421ff9:	jb     0x42204b
  421ffb:	sbb    al,0xee
  421ffd:	inc    esp
  421ffe:	pop    es
  421fff:	out    dx,al
  422000:	gs add al,0xfd
  422003:	std    
  422004:	rol    BYTE PTR [ecx],1
  422006:	sub    ch,BYTE PTR [ecx-0x59688298]
  42200c:	jmp    0x282d:0xca8effbe
  422013:	and    ecx,DWORD PTR [esi]
  422015:	fidiv  DWORD PTR [ecx]
  422017:	loope  0x421ff4
  422019:	inc    edx
  42201a:	jnp    0x421fc3
  42201c:	aaa    
  42201d:	pop    es
  42201e:	dec    edi
  42201f:	fmul   QWORD PTR [ebp-0x6f]
  422022:	jl     0x422060
  422024:	jno    0x421fae
  422026:	fstp   QWORD PTR [edx+0x493c9da4]
  42202c:	adc    eax,0x911098ce
  422031:	sub    edi,ebp
  422033:	ins    BYTE PTR es:[edi],dx
  422034:	pop    ebx
  422035:	sub    DWORD PTR [ecx-0x60733a3],ebx
  42203b:	sbb    cl,cl
  42203d:	sbb    eax,0x263f6ff9
  422042:	inc    ebp
  422043:	imul   edi,DWORD PTR [edi-0x13b464b8],0x7b
  42204a:	mov    esp,0x8aa421f0
  42204f:	aas    
  422050:	sbb    eax,DWORD PTR [ebp-0x27f1b417]
  422056:	inc    ecx
  422057:	inc    esp
  422058:	mov    edi,0x4858069c
  42205d:	in     al,dx
  42205e:	xchg   cl,bh
  422060:	and    DWORD PTR [ebx],eax
  422062:	aam    0xc1
  422064:	push   0xffffffcb
  422066:	repnz dec DWORD PTR [ebp-0x29]
  42206a:	lods   al,BYTE PTR ds:[esi]
  42206b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42206c:	adc    ax,0x4975
  422070:	stos   BYTE PTR es:[edi],al
  422071:	mov    dh,0x15
  422073:	push   ss
  422074:	stos   BYTE PTR es:[edi],al
  422075:	lahf   
  422076:	mov    esi,0xa5787d3b
  42207b:	jmp    0x4220f7
  42207d:	enter  0x6104,0x9
  422081:	aam    0x83
  422083:	sar    DWORD PTR [eax+ebp*8],1
  422086:	aas    
  422087:	test   DWORD PTR [edx],esi
  422089:	outs   dx,DWORD PTR ds:[esi]
  42208a:	push   cs
  42208b:	mov    BYTE PTR [edx+edi*4-0x6d4ae42b],ch
  422092:	jp     0x4220f1
  422094:	inc    ecx
  422095:	pushf  
  422096:	jmp    0xbc4efad2
  42209b:	dec    BYTE PTR [esi]
  42209d:	add    DWORD PTR [esi],ebx
  42209f:	mov    BYTE PTR [edx+0x75],ah
  4220a2:	or     ecx,eax
  4220a4:	adc    DWORD PTR [edx-0x58],edx
  4220a7:	fldcw  WORD PTR ds:0x99703bdc
  4220ad:	fsub   st,st(7)
  4220b0:	neg    BYTE PTR [esp+ebx*2]
  4220b3:	and    dl,dl
  4220b5:	sbb    ebx,DWORD PTR [ebp*8+0x5d8672e7]
  4220bc:	mov    DWORD PTR ds:0x28073b28,ebp
  4220c2:	aaa    
  4220c3:	sub    eax,0x8bbb7a4f
  4220c8:	(bad)  
  4220c9:	jmp    0xfa830dbe
  4220ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220cf:	dec    edi
  4220d0:	inc    edx
  4220d1:	ds (bad) 
  4220d3:	iret   
  4220d4:	sub    al,0x35
  4220d6:	mov    ebx,0xba0cfe8a
  4220db:	bound  edi,QWORD PTR [edi+0x38]
  4220de:	cld    
  4220df:	loop   0x4220bd
  4220e1:	mov    ds,WORD PTR [edi]
  4220e3:	push   0x6d4c1027
  4220e8:	push   ebp
  4220ea:	leave  
  4220eb:	das    
  4220ec:	sbb    BYTE PTR [edi-0x63],bh
  4220ef:	jl     0x422092
  4220f1:	xor    al,0x80
  4220f3:	or     DWORD PTR [ecx+0x6c],edi
  4220f6:	(bad)  
  4220f7:	sbb    DWORD PTR [edi+0x51],0x72cedbb0
  4220fe:	leave  
  4220ff:	repz fcomp QWORD PTR [ecx]
  422102:	or     DWORD PTR [ebx],ecx
  422104:	dec    esi
  422105:	sub    eax,0x7b7580ae
  42210a:	push   ebp
  42210b:	push   ecx
  42210c:	cmp    ebx,DWORD PTR [edi]
  42210e:	push   esi
  42210f:	test   al,0x0
  422111:	mov    dh,0x43
  422113:	call   0x2fe154e6
  422118:	push   edi
  422119:	pop    esi
  42211a:	push   0x3e
  42211c:	mov    WORD PTR [esi+0x6be25b4],ds
  422122:	mov    esi,0x51bd5c9f
  422127:	mov    dl,0xe3
  422129:	std    
  42212a:	and    al,0xff
  42212c:	sbb    DWORD PTR [ecx+eax*8],edx
  42212f:	pop    ss
  422130:	cmp    BYTE PTR [ecx+0x6c],bl
  422133:	mov    ebp,0xeade0cab
  422138:	jo     0x422123
  42213a:	jmp    0xb79e:0x14fb7a93
  422141:	lods   al,BYTE PTR ds:[esi]
  422142:	xor    DWORD PTR [ebx],0x8fc4970
  422148:	ins    DWORD PTR es:[edi],dx
  422149:	sub    cl,BYTE PTR [eax]
  42214b:	(bad)
  42214e:	or     eax,0x7c94faa1
  422153:	adc    ah,ah
  422155:	jmp    0x8d3766d9
  42215a:	mov    ecx,ebp
  42215c:	jp     0x422135
  42215e:	push   eax
  42215f:	inc    ecx
  422160:	int    0x5
  422162:	mov    bh,0x1b
  422164:	into   
  422165:	dec    ebx
  422166:	adc    BYTE PTR [edi],dh
  422168:	shr    dl,1
  42216a:	pusha  
  42216b:	sbb    ch,BYTE PTR [ebx]
  42216d:	pop    esp
  42216e:	rcl    cl,0x9c
  422171:	push   es
  422172:	jg     0x4221e5
  422174:	leave  
  422175:	push   ebx
  422176:	sub    bl,BYTE PTR [eax+eiz*2+0x18b72b33]
  42217d:	jl     0x422192
  42217f:	mov    dh,0xc6
  422181:	push   esi
  422182:	adc    esp,DWORD PTR [ecx-0x3e]
  422185:	aas    
  422186:	lods   eax,DWORD PTR ds:[esi]
  422187:	inc    esi
  422188:	sbb    BYTE PTR [esi+0x2b],ch
  42218b:	fsubr  QWORD PTR [edi+0x49e8e5b]
  422191:	dec    esp
  422192:	xchg   BYTE PTR [eax+0x403d111],ch
  422198:	mov    ?,eax
  42219a:	stos   DWORD PTR es:[edi],eax
  42219b:	push   ecx
  42219c:	ror    DWORD PTR [edx+0x7fa7137d],cl
  4221a2:	jmp    0x5ef8:0x5545f1d5
  4221a9:	cli    
  4221aa:	lods   eax,DWORD PTR ds:[esi]
  4221ab:	xor    ebx,DWORD PTR [ebp+eax*2-0x9ead212]
  4221b2:	fwait
  4221b3:	adc    dl,BYTE PTR [edx-0x1806b3c0]
  4221b9:	ins    DWORD PTR es:[edi],dx
  4221ba:	mov    DWORD PTR [ebx],0xacaf3b01
  4221c0:	adc    DWORD PTR [edi+0xf],0x57
  4221c4:	cmp    DWORD PTR [eax],0x19646aa1
  4221ca:	jb     0x422206
  4221cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221cd:	ficom  WORD PTR [ebx-0x5]
  4221d0:	fisub  WORD PTR [edx*8-0x6d9025d5]
  4221d7:	xchg   BYTE PTR [ecx-0x6f],al
  4221da:	xchg   ebp,eax
  4221db:	push   esi
  4221dc:	sub    eax,0x4777c43b
  4221e1:	push   ds
  4221e2:	xchg   edx,eax
  4221e3:	xchg   ebx,eax
  4221e4:	std    
  4221e5:	ins    DWORD PTR es:[edi],dx
  4221e6:	jo     0x422240
  4221e8:	and    bh,ah
  4221ea:	pop    eax
  4221eb:	test   BYTE PTR [ecx+edx*8+0x4c],bh
  4221ef:	icebp  
  4221f0:	cwde   
  4221f1:	dec    esi
  4221f2:	push   cs
  4221f3:	test   edi,esi
  4221f5:	xor    BYTE PTR [esi+0x693537cb],bh
  4221fb:	popf   
  4221fc:	cmp    bh,BYTE PTR [ecx]
  4221fe:	pop    esi
  4221ff:	push   esp
  422200:	sbb    edx,0x8cea8e5a
  422206:	inc    edi
  422207:	pop    ebp
  422208:	test   DWORD PTR [esi+0x6e],0xc601416
  42220f:	mov    esi,0xf12402fa
  422214:	(bad)  
  422215:	fisttp WORD PTR [esi+0x3dc4e9f0]
  42221b:	stos   BYTE PTR es:[edi],al
  42221c:	mov    cl,0x87
  42221e:	out    0xc6,eax
  422220:	pop    ecx
  422221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422222:	(bad)  
  422224:	mov    al,ds:0xa53c87cd
  422229:	fsubr  QWORD PTR [ebx+eiz*8+0x3f]
  42222d:	ret    0x7ae7
  422230:	mov    ah,BYTE PTR [ebp-0x474b316a]
  422236:	addr16 sti 
  422238:	rcr    al,0x94
  42223b:	ss sub al,0xd3
  42223e:	into   
  42223f:	fldenv [esi-0x449f0ab9]
  422245:	mov    edi,0xa3b3e507
  42224a:	dec    ecx
  42224b:	xor    esi,edi
  42224d:	repz pop esi
  42224f:	sets   BYTE PTR [ecx+0x10]
  422253:	(bad)  
  422254:	or     DWORD PTR es:[ebx-0x36],edx
  422258:	loopne 0x422208
  42225a:	outs   dx,BYTE PTR ds:[esi]
  42225b:	or     BYTE PTR [ebp-0x64f3b468],bl
  422261:	jbe    0x42228e
  422263:	xor    bh,dh
  422265:	in     eax,dx
  422266:	xchg   ebp,eax
  422267:	(bad)  
  422268:	cmp    DWORD PTR [ebx+0x62f81e8f],ebp
  42226e:	mov    edx,0x448502a2
  422273:	test   DWORD PTR [esi+0x28],edx
  422276:	lea    esi,[edi]
  422278:	add    BYTE PTR [edi-0x1d],bl
  42227b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42227c:	xchg   ebp,eax
  42227d:	xor    ebp,DWORD PTR [esi-0x11]
  422280:	push   ebp
  422281:	jl     0x422270
  422283:	pop    edx
  422284:	fsubrp st(4),st
  422286:	sar    ecx,1
  422288:	gs pop eax
  42228a:	dec    ebx
  42228b:	push   ecx
  42228c:	add    BYTE PTR [edx],bl
  42228e:	xchg   esi,eax
  42228f:	add    BYTE PTR [esi+0x2c],dh
  422292:	dec    edi
  422293:	lods   eax,DWORD PTR ds:[esi]
  422294:	inc    esp
  422295:	pop    ds
  422296:	jb     0x42230f
  422298:	mov    cl,0x4f
  42229a:	sub    edi,DWORD PTR [ebx]
  42229c:	imul   esi,eax,0x278cc3d5
  4222a2:	jge    0x42223b
  4222a4:	sub    eax,0x6a0babda
  4222a9:	push   esp
  4222aa:	sub    DWORD PTR [ecx],edx
  4222ac:	mov    dl,0xfb
  4222ae:	pop    ecx
  4222af:	stos   BYTE PTR es:[edi],al
  4222b0:	xor    al,0xd0
  4222b2:	(bad)  
  4222b3:	out    dx,al
  4222b4:	jae    0x42223c
  4222b6:	aad    0xf7
  4222b8:	stos   BYTE PTR es:[edi],al
  4222b9:	fnstenv [edi]
  4222bb:	sub    DWORD PTR [ecx+0x30a040bd],eax
  4222c1:	(bad)  
  4222c2:	ja     0x4222f7
  4222c4:	xchg   ebx,eax
  4222c5:	mov    dl,BYTE PTR [ebx-0x2d]
  4222c8:	add    esp,esi
  4222ca:	add    al,0xff
  4222cc:	xchg   edx,eax
  4222cd:	adc    DWORD PTR [esi-0x55],0xb9e64476
  4222d4:	push   ebx
  4222d5:	xor    eax,0x52343547
  4222da:	or     BYTE PTR [esi-0x1d],ah
  4222dd:	add    esi,esp
  4222df:	mov    esi,0x28c74b7a
  4222e4:	and    al,0xae
  4222e6:	adc    ebx,DWORD PTR [eax]
  4222e8:	ss pop ds
  4222ea:	gs cmc 
  4222ec:	call   0x576:0x7b6ae139
  4222f3:	cli    
  4222f4:	mov    bl,0x38
  4222f6:	add    eax,esi
  4222f8:	add    eax,0x9db08c8
  4222fd:	lds    ecx,FWORD PTR [ebp+0xa]
  422300:	jle    0x42231e
  422302:	jecxz  0x42228d
  422304:	mov    ebp,0x777ae0b
  422309:	mov    ds:0x2e0a6ae9,eax
  42230e:	pop    ecx
  42230f:	mov    eax,0xd132894c
  422314:	sahf   
  422315:	(bad)  
  422316:	xchg   esi,eax
  422317:	jmp    0x4222a5
  422319:	cmp    DWORD PTR [ecx+0x42],edi
  42231c:	jb     0x422353
  42231e:	(bad)  
  42231f:	pop    edi
  422320:	bound  ebp,QWORD PTR [ecx-0x6d378b62]
  422326:	(bad)  
  422327:	les    esi,FWORD PTR [eax+0x7e]
  42232a:	inc    edx
  42232b:	sahf   
  42232c:	mov    eax,ds:0xac61f72d
  422331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422332:	jnp    0x4222e9
  422334:	dec    ebp
  422335:	je     0x42238d
  422337:	jmp    0x4222fa
  422339:	cli    
  42233a:	cmp    DWORD PTR [ecx-0x72b20970],eax
  422340:	retf   
  422341:	jl     0x422330
  422343:	mov    bh,0xfa
  422345:	cli    
  422346:	psubd  mm4,QWORD PTR [bx+di+0x27]
  42234b:	xchg   BYTE PTR [ebx+0x1b41611],al
  422351:	cs push esi
  422353:	test   bl,ch
  422355:	outs   dx,BYTE PTR ds:[esi]
  422356:	out    0xb,eax
  422358:	add    ah,dl
  42235a:	cmc    
  42235b:	std    
  42235c:	push   ecx
  42235d:	mov    cs,WORD PTR ds:0x57204a6d
  422363:	loope  0x4223cf
  422365:	lea    ebp,ds:0xec36635f
  42236b:	xchg   ecx,eax
  42236c:	cli    
  42236d:	js     0x422341
  42236f:	xchg   DWORD PTR [ebx+esi*4+0x63],ecx
  422373:	adc    bh,BYTE PTR [edx]
  422375:	xor    al,0xf6
  422377:	(bad)  
  422378:	retf   
  422379:	call   0x1e9:0x81695583
  422380:	adc    dl,dl
  422382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422383:	and    DWORD PTR [ebx-0x70],ebx
  422386:	stos   BYTE PTR es:[edi],al
  422387:	les    ebp,FWORD PTR [ecx+ecx*8+0x71]
  42238b:	icebp  
  42238c:	xor    esp,DWORD PTR [ecx+0x49]
  42238f:	sbb    al,0xc5
  422391:	jo     0x4223c6
  422393:	pop    es
  422394:	push   ebp
  422395:	repz inc ebp
  422397:	loope  0x422379
  422399:	and    DWORD PTR [edi+0x7bd5d052],esp
  42239f:	sbb    ch,cl
  4223a1:	sub    al,0xcf
  4223a3:	push   ebx
  4223a4:	sub    eax,0xff9438f0
  4223a9:	rol    DWORD PTR [esi-0x35],cl
  4223ac:	js     0x422358
  4223ae:	enter  0x7af1,0xea
  4223b2:	cmp    esi,DWORD PTR [ecx]
  4223b4:	outs   dx,BYTE PTR ds:[si]
  4223b6:	push   ds
  4223b7:	aaa    
  4223b8:	cmp    al,0xbf
  4223ba:	xchg   esp,esi
  4223bc:	cld    
  4223bd:	mov    al,0xf6
  4223bf:	repnz mov ch,0xac
  4223c2:	jno    0x4223ca
  4223c4:	jp     0x4223e1
  4223c6:	cli    
  4223c7:	pop    edi
  4223c8:	push   ecx
  4223c9:	mov    BYTE PTR [ecx-0x75eb09d2],ch
  4223cf:	outs   dx,BYTE PTR ds:[esi]
  4223d0:	jmp    0x393a:0xd32a5b26
  4223d7:	int3   
  4223d8:	sbb    BYTE PTR [esi],ch
  4223da:	sbb    BYTE PTR [ebp+0x2c],0xd9
  4223de:	jo     0x42240e
  4223e0:	inc    ebx
  4223e1:	adc    al,0xee
  4223e3:	std    
  4223e4:	dec    esi
  4223e5:	lds    ecx,FWORD PTR [ebx-0x21]
  4223e8:	dec    DWORD PTR [eax+0x3a]
  4223eb:	int3   
  4223ec:	daa    
  4223ed:	mov    bh,0xe6
  4223ef:	xor    al,0x58
  4223f1:	adc    dl,dl
  4223f3:	and    al,0xf8
  4223f5:	push   eax
  4223f6:	ret    0x3af1
  4223f9:	icebp  
  4223fa:	xchg   edi,eax
  4223fb:	lahf   
  4223fc:	shl    DWORD PTR [eax-0x62dd3f8d],1
  422402:	mov    ebx,DWORD PTR [ecx+eax*8+0x1c]
  422406:	ficomp WORD PTR [ecx-0x218dc3c3]
  42240c:	inc    edi
  42240d:	cmp    eax,0x2da33631
  422412:	or     al,0x4e
  422414:	or     dh,BYTE PTR [ecx-0x569ac200]
  42241a:	adc    al,0xf4
  42241c:	pop    edi
  42241d:	(bad)  
  42241f:	pop    esp
  422420:	mov    BYTE PTR [ebp+0x14649c83],0xb6
  422427:	imul   edi,edi,0x7a4b77e1
  42242d:	or     eax,0x4d31a532
  422432:	mov    ebp,0xf1481583
  422437:	dec    ecx
  422438:	int    0x88
  42243a:	push   esp
  42243b:	pop    ecx
  42243c:	stc    
  42243d:	jae    0x422455
  42243f:	adc    BYTE PTR [ebp-0x4279a80c],0xc8
  422446:	stos   BYTE PTR es:[edi],al
  422447:	shr    DWORD PTR [ecx-0x62],1
  42244a:	call   DWORD PTR [edi-0x1]
  42244d:	and    dl,BYTE PTR [eax+edx*8+0x63a0b357]
  422454:	sbb    BYTE PTR [edx-0x193ea06b],al
  42245a:	inc    edi
  42245b:	jl     0x42245f
  42245d:	xchg   ebx,eax
  42245e:	mov    ebp,0x67412c8a
  422463:	xor    DWORD PTR [ebp+0x43],edi
  422466:	push   edi
  422467:	(bad)  
  422468:	jl     0x4224a1
  42246a:	rcr    DWORD PTR [esi+0x13],1
  42246d:	fcmovne st,st(4)
  42246f:	push   si
  422471:	imul   esi,DWORD PTR [edx+0x65d603ea],0x2a776d2
  42247b:	mov    bl,0xca
  42247d:	inc    esi
  42247e:	jmp    DWORD PTR [eax+0x77b529a4]
  422484:	adc    BYTE PTR ds:0xb4f0eabc,bl
  42248a:	inc    ebx
  42248b:	mov    ds:0xddbd3d01,eax
  422490:	mov    edi,0x7babe4e5
  422495:	pop    eax
  422496:	in     al,dx
  422497:	addr16 aad 0x51
  42249a:	imul   edx,DWORD PTR [edx],0x75ffa593
  4224a0:	fadd   st(6),st
  4224a2:	add    cl,ch
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x4257d9
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x2f2776ec
  4242c9:	cs enter 0x9220,0x95
  4242ce:	add    BYTE PTR [ebx-0x7c7c9384],0x38
  4242d5:	std    
  4242d6:	cdq    
  4242d7:	jmp    0x42434e
  4242d9:	ret    
  4242da:	xlat   BYTE PTR ds:[ebx]
  4242db:	add    eax,0x669bce31
  4242e0:	xchg   esi,eax
  4242e1:	(bad)  
  4242e2:	jns    0x4242f8
  4242e4:	in     eax,dx
  4242e5:	leave  
  4242e6:	jg     0x424339
  4242e8:	retf   0x1d1d
  4242eb:	repz dec eax
  4242ed:	in     al,0x3e
  4242ef:	int    0x87
  4242f1:	jmp    0xddb3331f
  4242f6:	xchg   DWORD PTR [edx+0x31aabe09],edi
  4242fc:	inc    eax
  4242fd:	lods   al,BYTE PTR ds:[esi]
  4242fe:	sub    eax,0xda353a27
  424303:	cld    
  424304:	xchg   esi,eax
  424305:	test   al,0xcd
  424307:	mov    ebx,DWORD PTR [edx]
  424309:	lock jmp 0xda9d:0xc6025c36
  424311:	ja     0x424375
  424313:	lods   al,BYTE PTR ds:[esi]
  424314:	ja     0x4242b6
  424316:	sbb    DWORD PTR [ecx+0xf2dc218],0x63dcdf24
  424320:	jecxz  0x42432c
  424322:	sahf   
  424323:	xchg   eax,esi
  424325:	or     al,dh
  424327:	scas   eax,DWORD PTR es:[edi]
  424328:	xor    ah,al
  42432a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42432b:	lds    edx,FWORD PTR [edi]
  42432d:	jmp    0x42438c
  42432f:	in     al,0x41
  424331:	mov    ah,ch
  424333:	ss mov ecx,0x6baaad6b
  424339:	mov    ah,0xe5
  42433b:	popf   
  42433c:	(bad)  
  42433d:	and    al,0x26
  42433f:	pop    ss
  424340:	xor    ecx,0x9b1813d6
  424346:	in     eax,dx
  424347:	jb     0x42435e
  424349:	xlat   BYTE PTR ds:[ebx]
  42434a:	hlt    
  42434b:	or     DWORD PTR [eax-0x4d],0x4e
  42434f:	mov    al,0xc8
  424351:	cmp    eax,0x6c4aeccc
  424356:	repnz mov ds:0x648744fb,eax
  42435c:	dec    ebp
  42435d:	add    al,0xba
  42435f:	aad    0x81
  424361:	inc    BYTE PTR [ecx+0x5c1d4055]
  424367:	sahf   
  424368:	stos   DWORD PTR es:[edi],eax
  424369:	out    0xa0,eax
  42436b:	pusha  
  42436c:	rol    DWORD PTR [edx+eiz*1],1
  42436f:	sbb    edi,eax
  424371:	jns    0x424337
  424373:	jae    0x4243b5
  424375:	xor    al,0x15
  424377:	retf   
  424378:	cmp    DWORD PTR [esp+ecx*1],ebp
  42437b:	sti    
  42437c:	mov    esi,0xcb5f0130
  424381:	daa    
  424382:	add    eax,0x7cf0e349
  424387:	xchg   ecx,eax
  424388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424389:	sbb    BYTE PTR [ebx],0x94
  42438c:	push   0x62
  42438e:	or     eax,ebx
  424390:	mov    ds:0x1388852e,al
  424395:	sub    al,0x3f
  424397:	push   edx
  424398:	pop    ebp
  424399:	sbb    BYTE PTR [eax-0x65],cl
  42439c:	push   ebp
  42439d:	das    
  42439e:	in     al,0x28
  4243a0:	lea    ebx,[edi]
  4243a2:	mov    dh,0x67
  4243a4:	xchg   edi,eax
  4243a5:	mov    bh,0x5b
  4243a7:	pop    edi
  4243a8:	sub    eax,0x1c8af0b8
  4243ad:	scas   eax,DWORD PTR es:[edi]
  4243ae:	scas   eax,DWORD PTR es:[edi]
  4243af:	mov    cl,0x86
  4243b1:	or     eax,DWORD PTR [edi-0xa0ff62b]
  4243b7:	adc    DWORD PTR [ecx-0x6d],eax
  4243ba:	arpl   WORD PTR [ecx],dx
  4243bc:	lds    esp,FWORD PTR [edx-0x55031b62]
  4243c2:	add    al,0x57
  4243c4:	(bad)  
  4243c5:	cs push esi
  4243c7:	xchg   esi,eax
  4243c8:	repnz add DWORD PTR [esi],0xffffff90
  4243cc:	rcl    BYTE PTR [edi-0x3c],1
  4243cf:	js     0x424373
  4243d1:	inc    eax
  4243d2:	xor    esi,DWORD PTR [edi-0x23c46c8f]
  4243d8:	mov    dl,0x46
  4243da:	mov    cl,BYTE PTR [ecx-0x72]
  4243dd:	lock or bl,BYTE PTR [ebx+0x7c905562]
  4243e4:	xor    cl,BYTE PTR [ecx]
  4243e6:	(bad)  [esi+ebx*1+0x14c1792a]
  4243ed:	pop    edi
  4243ee:	jecxz  0x4243a6
  4243f0:	xor    bl,BYTE PTR [ebx-0x67]
  4243f3:	mov    ch,0xb2
  4243f5:	lds    edx,FWORD PTR [ebp-0x3]
  4243f8:	push   edi
  4243f9:	xor    esp,DWORD PTR [eax]
  4243fb:	mov    ds:0xf04bc886,eax
  424400:	jo     0x424461
  424402:	sub    al,0x4b
  424404:	push   ebx
  424405:	inc    eax
  424406:	mov    eax,ds:0xb3dde8be
  42440b:	ret    
  42440c:	mov    ds,edx
  42440e:	lea    eax,[edx]
  424410:	mov    dh,BYTE PTR [ebp-0x70]
  424413:	sbb    cl,BYTE PTR [ebx+0x25]
  424416:	or     eax,0xa4234671
  42441b:	xor    ecx,ebx
  42441d:	stc    
  42441e:	or     esp,esi
  424420:	cmp    BYTE PTR [ebp-0x31],bl
  424423:	dec    ebx
  424424:	iret   
  424425:	call   0x8e15:0xa1eb416
  42442c:	dec    edx
  42442d:	inc    ebx
  42442e:	mov    eax,ds:0xd7c20ee
  424433:	lods   eax,DWORD PTR ds:[esi]
  424434:	sar    ch,cl
  424436:	xchg   BYTE PTR [ecx-0x4],ch
  424439:	push   edi
  42443a:	xchg   ebx,eax
  42443b:	pop    ds
  42443c:	je     0x4243e6
  42443e:	xchg   esi,eax
  42443f:	sbb    DWORD PTR [eax+ecx*1+0x680581aa],eax
  424446:	xor    DWORD PTR [edi-0x8],esi
  424449:	fwait
  42444a:	jmp    0x4244c0
  42444c:	or     BYTE PTR [esi-0x4c],ah
  42444f:	mov    esp,0xa9e1ebcf
  424454:	dec    ebp
  424455:	je     0x424453
  424457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424458:	jns    0x42443f
  42445a:	lds    eax,FWORD PTR [ecx-0x3]
  42445d:	arpl   WORD PTR [esi],bp
  42445f:	or     BYTE PTR [edi],al
  424461:	xchg   esi,eax
  424462:	push   0x977ed33a
  424467:	popf   
  424468:	or     BYTE PTR [edx+0x73962165],ah
  42446e:	jmp    0xe5da:0x185dcca5
  424475:	sbb    al,0x22
  424477:	add    al,0x60
  424479:	xor    BYTE PTR [edi],0x34
  42447c:	pop    es
  42447d:	jg     0x4244c8
  42447f:	stc    
  424480:	pop    edi
  424481:	hlt    
  424482:	push   ebp
  424483:	add    edi,ecx
  424485:	loope  0x424417
  424487:	mov    BYTE PTR [edi],bh
  424489:	in     al,dx
  42448a:	loope  0x4244b3
  42448c:	in     eax,dx
  42448d:	cmp    cl,dh
  42448f:	arpl   WORD PTR [edx],ax
  424491:	dec    ebp
  424492:	(bad)  
  424493:	lods   al,BYTE PTR ds:[esi]
  424494:	push   0xceecb15e
  424499:	fxch   st(1)
  42449b:	std    
  42449c:	and    BYTE PTR [bx+si+0x7da2],dh
  4244a1:	cmp    DWORD PTR [eax+0x5e3fe87a],0x559261b
  4244ab:	les    eax,FWORD PTR [ecx]
  4244ad:	adc    edi,eax
  4244af:	add    eax,0xcf59ae5d
  4244b4:	inc    esi
  4244b5:	dec    esp
  4244b6:	sar    edx,1
  4244b8:	xor    eax,0xb5d7faab
  4244be:	aam    0x43
  4244c0:	iret   
  4244c1:	loope  0x4244ff
  4244c3:	mov    ebp,0xe9d5743a
  4244c8:	jnp    0x4244d9
  4244ca:	mov    ds:0x75b5c0b5,al
  4244cf:	enter  0x18cf,0xd9
  4244d3:	pusha  
  4244d4:	jns    0x42449e
  4244d6:	inc    esi
  4244d7:	ret    
  4244d8:	jmp    0x42448f
  4244da:	push   cs
  4244db:	cmp    BYTE PTR [edx],dl
  4244dd:	iret   
  4244de:	xchg   ebp,eax
  4244df:	mov    fs,WORD PTR [ebp-0x6112452f]
  4244e5:	lds    ecx,FWORD PTR [ebx+0x69]
  4244e8:	loope  0x424499
  4244ea:	in     al,0x39
  4244ec:	xchg   edi,eax
  4244ed:	mov    eax,cs
  4244ef:	lock adc cl,BYTE PTR [ecx+edi*4]
  4244f3:	call   0x9ade:0xde36e88
  4244fa:	inc    esi
  4244fb:	(bad)  
  4244fc:	int3   
  4244fd:	(bad)  
  4244fe:	psubd  mm3,QWORD PTR [ebx+eax*2]
  424502:	test   al,0xff
  424504:	(bad)  ds:0x4bb8f674
  42450a:	scas   al,BYTE PTR es:[edi]
  42450b:	push   ebp
  42450c:	scas   eax,DWORD PTR es:[edi]
  42450d:	xchg   edx,eax
  42450e:	imul   BYTE PTR [eax+esi*2+0x25]
  424512:	aas    
  424513:	mov    dh,0x7
  424515:	pushf  
  424516:	in     eax,0xdb
  424518:	cwde   
  424519:	cld    
  42451a:	mov    esi,0x6309947e
  42451f:	int3   
  424520:	repz mov al,BYTE PTR [eax-0x464dfe4]
  424527:	aas    
  424528:	jge    0x42450a
  42452a:	and    BYTE PTR [esi],ah
  42452c:	shr    BYTE PTR [ebx+0x6ea0bc6e],cl
  424532:	(bad)  
  424533:	stc    
  424534:	pop    ds
  424535:	test   DWORD PTR [ebx],esi
  424537:	push   ecx
  424538:	add    al,cl
  42453a:	ror    dh,0xa6
  42453d:	ss jns 0x424519
  424540:	pop    ebx
  424541:	push   ebp
  424542:	xor    ch,dl
  424544:	pop    esp
  424545:	popa   
  424546:	push   eax
  424547:	pop    ss
  424548:	add    al,0x2f
  42454a:	mul    ebp
  42454c:	mov    dl,0xa
  42454e:	push   ebp
  42454f:	outs   dx,BYTE PTR ds:[esi]
  424550:	lods   al,BYTE PTR ds:[esi]
  424551:	aaa    
  424552:	pop    ebp
  424553:	mov    bl,0x8a
  424555:	mov    bl,0x6a
  424557:	sbb    eax,0x2a862c2
  42455c:	add    bh,BYTE PTR [edi]
  42455e:	(bad)  
  42455f:	push   edi
  424560:	(bad)  
  424561:	retf   
  424562:	cs cmp al,0x21
  424565:	pop    eax
  424566:	pop    esi
  424567:	sub    al,0x2a
  424569:	aaa    
  42456a:	push   esi
  42456b:	sbb    DWORD PTR [ebx+edx*4+0xc56da56],edx
  424572:	xchg   edx,eax
  424573:	cwde   
  424574:	out    dx,al
  424575:	push   cs
  424576:	(bad)  
  424577:	push   ds
  424578:	or     DWORD PTR [ebx],esi
  42457a:	pop    edx
  42457b:	dec    esp
  42457c:	stc    
  42457d:	adc    ah,BYTE PTR [edx]
  42457f:	inc    ebx
  424580:	xchg   edx,eax
  424581:	xchg   edx,eax
  424582:	or     edi,DWORD PTR [eax+eiz*8]
  424585:	and    BYTE PTR [ebp+esi*8+0x47c2a395],ch
  42458c:	shl    DWORD PTR [esp+edi*8],0xa0
  424590:	xchg   eax,esi
  424592:	fild   QWORD PTR [esi-0x37]
  424595:	pop    esp
  424596:	push   ds
  424597:	sar    BYTE PTR [ebp+0x37cdfd3e],cl
  42459d:	in     al,dx
  42459e:	and    ebp,DWORD PTR [eax]
  4245a0:	push   ebx
  4245a1:	icebp  
  4245a2:	cmp    eax,esi
  4245a4:	loope  0x4245e0
  4245a6:	mov    ah,0x76
  4245a8:	frstpm(287 only) 
  4245aa:	pushf  
  4245ab:	out    0xf6,al
  4245ad:	jne    0x4245f4
  4245af:	inc    ebp
  4245b0:	mov    dl,al
  4245b2:	or     DWORD PTR [ebx+ebp*1+0x67a490ed],ebp
  4245b9:	stc    
  4245ba:	cmc    
  4245bb:	sbb    ebx,DWORD PTR [edi]
  4245bd:	and    DWORD PTR [ebp-0x1bf2acad],0xed6ebaf3
  4245c7:	sbb    DWORD PTR [edi+0x7171f4b4],0x59d8fe86
  4245d1:	jae    0x424582
  4245d3:	add    BYTE PTR ds:0xbe7475d8,0x79
  4245da:	push   es
  4245db:	ret    0x6cc1
  4245de:	xchg   DWORD PTR [ebx],eax
  4245e0:	je     0x424581
  4245e2:	adc    bh,al
  4245e4:	xor    DWORD PTR [edi+0x62],edi
  4245e7:	mov    ch,0x72
  4245e9:	out    0xc,eax
  4245eb:	xchg   ecx,eax
  4245ec:	shl    DWORD PTR [esi-0x212b8e07],1
  4245f2:	push   edx
  4245f3:	(bad)  
  4245f5:	stos   DWORD PTR es:[edi],eax
  4245f6:	fucomp st(5)
  4245f8:	xor    al,0x47
  4245fa:	int    0x3d
  4245fc:	es fdiv st,st(7)
  4245ff:	adc    bh,BYTE PTR [esi+ebp*8+0x5b2a1bf9]
  424606:	and    BYTE PTR [eax],0x61
  424609:	add    al,0x7b
  42460b:	or     eax,0x25c30580
  424610:	dec    eax
  424611:	jne    0x4245dd
  424613:	mov    dl,0x36
  424615:	mov    BYTE PTR [edi],dh
  424617:	or     DWORD PTR [esi+0x3c12a849],eax
  42461d:	enter  0x7d04,0x72
  424621:	imul   DWORD PTR [edi+eiz*4+0x1e]
  424625:	popa   
  424626:	mov    esp,0x755fd640
  42462b:	repnz fadd DWORD PTR [esi-0x40]
  42462f:	mov    ch,0xae
  424631:	and    al,0xad
  424633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424634:	sub    ch,ah
  424636:	pop    ebp
  424637:	imul   edx,esp,0xffffffeb
  42463a:	push   cs
  42463b:	les    esp,FWORD PTR [eax]
  42463d:	inc    ebp
  42463e:	dec    ecx
  42463f:	pop    esp
  424640:	cmp    al,0xb
  424642:	es push esp
  424644:	mov    esi,0xa5d853d3
  424649:	fisubr WORD PTR [esi-0x30]
  42464c:	mov    eax,0x8fd66e99
  424651:	ja     0x4246cc
  424653:	inc    esp
  424654:	push   0x7
  424656:	je     0x4246ce
  424658:	mov    dl,0xa2
  42465a:	mov    edx,0x6f6ac7e4
  42465f:	mov    ecx,0xe8dd5a28
  424664:	ins    DWORD PTR es:[edi],dx
  424665:	push   edx
  424666:	push   edi
  424667:	fisub  DWORD PTR [ebp+0x6c]
  42466a:	add    edi,DWORD PTR [esp+eiz*4+0x57]
  42466e:	push   esp
  42466f:	pop    ecx
  424670:	test   DWORD PTR [eax-0x52],eax
  424673:	add    DWORD PTR [esi-0x2da3dc00],esp
  424679:	jle    0x4246d7
  42467b:	push   ds
  42467c:	aas    
  42467d:	aas    
  42467e:	imul   ecx,DWORD PTR [esi+0x14],0xdf1695dc
  424685:	clc    
  424686:	xor    eax,0xe1a32242
  42468b:	mov    dl,0x20
  42468d:	add    al,0x21
  42468f:	sub    ah,BYTE PTR [edx+ebp*1]
  424692:	inc    esp
  424693:	mov    dl,0xed
  424695:	je     0x4246d9
  424697:	hlt    
  424698:	or     dl,BYTE PTR [edx]
  42469a:	and    ebp,DWORD PTR [edi-0x73]
  42469d:	shl    bh,0xb4
  4246a0:	jne    0x42463f
  4246a2:	push   cs
  4246a3:	scas   al,BYTE PTR es:[edi]
  4246a4:	pop    ebx
  4246a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246a6:	jp     0x424657
  4246a8:	lea    eax,[edx+ebp*4-0xfe86edb]
  4246af:	ret    
  4246b0:	xor    eax,0x5f47b3f7
  4246b5:	inc    ebx
  4246b6:	mov    WORD PTR [edx-0x444ec932],es
  4246bc:	add    eax,0xc094e627
  4246c1:	es mov ch,0x98
  4246c4:	stos   BYTE PTR es:[edi],al
  4246c5:	repnz iret 
  4246c7:	mov    ebp,0xf6be51c7
  4246cc:	or     eax,0xb9686f0b
  4246d1:	aad    0xf4
  4246d3:	dec    edi
  4246d4:	ret    
  4246d5:	pop    ss
  4246d6:	imul   ecx,DWORD PTR [eax-0x37],0xffffffbe
  4246da:	shl    BYTE PTR [eax+0x7c4e101],0x65
  4246e1:	or     BYTE PTR [ebx],dl
  4246e3:	test   BYTE PTR es:[eax+0x3e4eee5b],dl
  4246ea:	dec    ebx
  4246eb:	pushf  
  4246ec:	adc    al,0x73
  4246ee:	shl    BYTE PTR [esi+ebx*4+0x23f1127],cl
  4246f5:	dec    ebp
  4246f6:	push   eax
  4246f7:	dec    ebx
  4246f8:	push   esp
  4246f9:	adc    DWORD PTR [edi],ebx
  4246fb:	and    eax,0x907e2165
  424700:	lods   eax,DWORD PTR ds:[esi]
  424701:	inc    edx
  424702:	cwde   
  424703:	sti    
  424704:	lods   eax,DWORD PTR ds:[esi]
  424705:	lahf   
  424706:	es jnp 0x42477d
  424709:	loopne 0x42474d
  42470b:	adc    al,0x3d
  42470d:	add    al,0x17
  42470f:	gs out 0x51,al
  424712:	into   
  424713:	xor    eax,0x702f2683
  424718:	std    
  424719:	mov    esp,0x85dcb6a8
  42471e:	and    BYTE PTR [ecx+0x3b],dl
  424721:	jge    0x42472f
  424723:	pop    esp
  424724:	(bad)  
  424726:	ss xor dh,0xe3
  42472a:	hlt    
  42472b:	pusha  
  42472c:	les    esp,FWORD PTR [eax+0x21]
  42472f:	fisubr DWORD PTR gs:[ebx]
  424732:	xchg   edx,eax
  424733:	fcmovne st,st(5)
  424735:	sahf   
  424736:	dec    ecx
  424737:	shr    cl,1
  424739:	or     eax,0xccf99a46
  42473e:	sbb    ah,BYTE PTR [edx+esi*8+0x2a]
  424742:	sbb    DWORD PTR [edi+0x79fa49a2],0x9cc7db36
  42474c:	add    al,0xff
  42474e:	stos   BYTE PTR es:[edi],al
  42474f:	out    0x80,al
  424751:	(bad)  
  424752:	jp     0x424797
  424754:	cs or  ebp,edx
  424757:	sbb    ebx,DWORD PTR [esi-0x2]
  42475a:	and    bl,BYTE PTR [ecx]
  42475c:	add    ah,BYTE PTR [ebx]
  42475e:	push   eax
  42475f:	jle    0x4246ff
  424761:	push   0xffffffe0
  424763:	mov    eax,DWORD PTR [eax+eax*1]
  424766:	nop
  424767:	jb     0x4247e7
  424769:	xchg   esp,eax
  42476a:	data16 or al,0xb5
  42476d:	in     eax,0x98
  42476f:	aaa    
  424770:	pop    ebx
  424771:	in     al,0x6d
  424773:	out    0xbb,eax
  424775:	sbb    al,0x5d
  424777:	fstp   DWORD PTR [esi]
  424779:	retf   0x464b
  42477c:	rcr    BYTE PTR [esi-0x2f],0x4c
  424780:	mov    cl,0x14
  424782:	clc    
  424783:	popa   
  424784:	mov    ebx,es
  424786:	xchg   esi,eax
  424787:	ret    0xbead
  42478a:	test   BYTE PTR [ecx+0x37720253],0x42
  424791:	sbb    DWORD PTR [edi],edx
  424793:	es pop ds
  424795:	push   ebp
  424796:	mov    WORD PTR [eax+0x3d7ad335],fs
  42479c:	pop    es
  42479d:	sbb    ah,bh
  42479f:	pop    edx
  4247a0:	jns    0x4247f8
  4247a2:	fnsave [ebx]
  4247a4:	jbe    0x4247e9
  4247a6:	fidiv  WORD PTR [edi+ebx*2+0xd8e57a6]
  4247ad:	fldenv [edi+0x14]
  4247b0:	pusha  
  4247b1:	sbb    DWORD PTR [ebx],ebp
  4247b3:	mov    ds:0x73d05b0e,al
  4247b8:	cli    
  4247b9:	jge    0x4247af
  4247bb:	ficomp DWORD PTR [edx-0x34]
  4247be:	fist   WORD PTR [ecx-0x4c]
  4247c1:	pop    ebp
  4247c2:	imul   esi,DWORD PTR [ecx+0x18],0x20d0157d
  4247c9:	test   DWORD PTR [edi+eiz*1-0x68],ebp
  4247cd:	push   ebp
  4247ce:	mov    WORD PTR [ebx],gs
  4247d0:	mov    ah,0xab
  4247d2:	fnsetpm(287 only) 
  4247d4:	xchg   ebp,eax
  4247d5:	xor    BYTE PTR [ecx+0x13],0xf
  4247d9:	std    
  4247da:	xchg   ebx,eax
  4247db:	fadd   st(6),st
  4247dd:	cmp    al,0xd9
  4247df:	dec    edx
  4247e0:	push   eax
  4247e1:	cld    
  4247e2:	or     al,0x5d
  4247e4:	ret    0x6ec
  4247e7:	add    edx,esp
  4247e9:	sbb    ebx,DWORD PTR [ecx-0x7f]
  4247ec:	push   ecx
  4247ed:	ins    DWORD PTR es:[edi],dx
  4247ee:	mov    ecx,0x7b77c63b
  4247f3:	pop    ebp
  4247f4:	jle    0x4247f4
  4247f6:	jmp    0x4f5b:0xf169dd34
  4247fd:	xchg   ebx,eax
  4247fe:	cmp    eax,0xc9a2940c
  424803:	adc    esi,DWORD PTR [eax-0x3544aaff]
  424809:	sti    
  42480a:	popf   
  42480b:	pop    esp
  42480c:	mov    eax,0x3c768782
  424811:	les    eax,FWORD PTR [edi+eiz*8+0x30]
  424815:	sub    eax,0x93d6c24b
  42481a:	pop    edi
  42481b:	xchg   DWORD PTR [ebx],edx
  42481d:	sbb    ebx,ebx
  42481f:	mov    ch,0xef
  424821:	pop    eax
  424822:	scas   eax,DWORD PTR es:[edi]
  424823:	mov    al,cl
  424825:	and    DWORD PTR [eax+0x44],0xffffff9c
  424829:	int3   
  42482a:	fwait
  42482b:	lods   al,BYTE PTR ss:[esi]
  42482d:	ror    ah,cl
  42482f:	mov    eax,0xf2fd78fc
  424834:	ins    BYTE PTR es:[edi],dx
  424835:	push   cs
  424836:	mov    bh,0xeb
  424838:	ror    al,1
  42483a:	inc    ecx
  42483b:	dec    ebp
  42483c:	lds    ebp,FWORD PTR [esi-0x7530252f]
  424842:	mov    gs,WORD PTR [ecx]
  424844:	jp     0x4247cf
  424846:	jb     0x424872
  424848:	in     eax,dx
  424849:	xchg   esi,eax
  42484a:	std    
  42484b:	test   eax,0x8ddca9c7
  424850:	xor    esi,DWORD PTR [esi+0xf]
  424853:	xor    bh,BYTE PTR [ebx]
  424855:	mov    ds:0x4e160272,eax
  42485a:	fs in  eax,0x8f
  42485d:	in     eax,0xd8
  42485f:	mov    dl,0x8a
  424861:	mov    cr4,edi
  424864:	out    0x6d,eax
  424866:	mov    ah,0x79
  424868:	inc    ebp
  424869:	in     al,dx
  42486a:	lods   al,BYTE PTR ds:[esi]
  42486b:	enter  0xdb9f,0x86
  42486f:	jmp    0x84c6:0x946b2e11
  424876:	ficomp DWORD PTR [edi-0x22]
  424879:	fsub   QWORD PTR [edi]
  42487b:	and    eax,edx
  42487d:	or     eax,0xb8ae365
  424882:	idiv   DWORD PTR [ecx-0x44]
  424885:	sub    DWORD PTR [ecx+0x2904fb30],esp
  42488b:	mov    bh,0x8c
  42488d:	xchg   ebx,eax
  42488e:	pop    edx
  42488f:	inc    esp
  424890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424891:	jl     0x42487d
  424893:	popf   
  424894:	mov    esi,0xc9a5f08d
  424899:	push   esp
  42489a:	inc    edx
  42489b:	mov    ecx,0x52317ba7
  4248a0:	add    ebx,ecx
  4248a2:	push   ds
  4248a3:	jbe    0x4248dd
  4248a5:	repz dec esp
  4248a7:	jecxz  0x424849
  4248a9:	test   al,0x3d
  4248ab:	les    esp,FWORD PTR [edx]
  4248ad:	ins    BYTE PTR es:[edi],dx
  4248ae:	sahf   
  4248af:	pop    edi
  4248b0:	bound  eax,QWORD PTR [ebp-0x3b01ed0f]
  4248b6:	ret    
  4248b7:	pop    esp
  4248b8:	push   esp
  4248b9:	inc    ebx
  4248ba:	add    BYTE PTR [eax-0x5272d6e0],dl
  4248c0:	aad    0xe6
  4248c2:	sbb    al,BYTE PTR [edx]
  4248c4:	jp     0x42489c
  4248c6:	sahf   
  4248c7:	mov    ecx,esi
  4248c9:	push   esp
  4248ca:	adc    ebp,ebp
  4248cc:	fild   WORD PTR [eax-0x18]
  4248cf:	ja     0x424941
  4248d1:	sbb    eax,DWORD PTR [eax-0x3c]
  4248d4:	call   0xb5d90003
  4248d9:	scas   eax,DWORD PTR es:[edi]
  4248da:	xor    DWORD PTR [ebx],edx
  4248dc:	pop    ebx
  4248dd:	test   BYTE PTR [ebx],al
  4248df:	push   ecx
  4248e0:	pop    ebx
  4248e1:	xor    eax,0x5be56e2b
  4248e6:	dec    ecx
  4248e7:	js     0x42489b
  4248e9:	imul   ecx,edx,0x9c51ee30
  4248ef:	add    eax,0x635f2506
  4248f4:	jmp    0xf0b5f33e
  4248f9:	fwait
  4248fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248fb:	ror    esi,0x28
  4248fe:	mov    BYTE PTR [ebx+edi*1],bl
  424901:	inc    esp
  424902:	add    al,0x89
  424904:	add    BYTE PTR [ebx],dl
  424906:	adc    DWORD PTR es:[ecx],0x47
  42490a:	ds push ebp
  42490c:	jg     0x42492f
  42490e:	sub    BYTE PTR [ecx+0x649494c1],0x3c
  424915:	icebp  
  424916:	inc    edi
  424917:	pop    edi
  424918:	inc    eax
  424919:	mov    esp,0x628cdb2d
  42491e:	pop    es
  42491f:	stos   BYTE PTR es:[edi],al
  424920:	or     BYTE PTR [edi+0x2],bl
  424923:	mov    eax,0x4df9ca45
  424928:	xlat   BYTE PTR ds:[ebx]
  424929:	ror    BYTE PTR [ebx+0x37],1
  42492c:	iret   
  42492d:	mov    eax,ds:0x382f8b7d
  424932:	pop    DWORD PTR ds:0x9d65232e
  424938:	pop    ds
  424939:	xchg   dl,dh
  42493b:	lods   eax,DWORD PTR ds:[esi]
  42493c:	xchg   esi,eax
  42493d:	push   ecx
  42493e:	xor    al,0x2c
  424940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424941:	dec    eax
  424942:	add    BYTE PTR [eax-0x43],al
  424945:	test   al,0x93
  424947:	cmp    eax,0xd3a13e3d
  42494c:	retf   
  42494d:	push   esp
  42494e:	jge    0x424960
  424950:	cmc    
  424951:	sub    bl,al
  424953:	sbb    ebp,DWORD PTR [ebx+0x29]
  424956:	push   esp
  424957:	lods   eax,DWORD PTR ds:[esi]
  424958:	adc    DWORD PTR [ebx+0x7250c368],0x48dd63ba
  424962:	pop    ecx
  424963:	push   ds
  424964:	leave  
  424965:	mov    eax,0xa9973df
  42496a:	jbe    0x42494a
  42496c:	xchg   BYTE PTR [eax+0x3f],dh
  42496f:	xchg   edx,eax
  424970:	shl    BYTE PTR [ebx+edx*8+0xb],0x2b
  424975:	xchg   ecx,eax
  424976:	out    0x4e,eax
  424978:	xor    al,0xca
  42497a:	jnp    0x42495d
  42497c:	mov    al,ds:0x80d8eb6f
  424981:	rcr    esp,0x52
  424984:	pop    eax
  424985:	xor    DWORD PTR [esp+ecx*4-0x1a],ecx
  424989:	pusha  
  42498a:	sar    BYTE PTR [edi-0x24],1
  42498d:	mov    al,0x43
  42498f:	std    
  424990:	jp     0x424943
  424992:	sbb    BYTE PTR [edx],bl
  424994:	out    dx,al
  424995:	xchg   DWORD PTR [ebp-0x59afbba],esp
  42499b:	cmp    edx,DWORD PTR [edi]
  42499d:	in     al,0x39
  42499f:	pushf  
  4249a0:	inc    esp
  4249a1:	in     al,dx
  4249a2:	mov    dh,cl
  4249a4:	xchg   ecx,eax
  4249a5:	fisttp WORD PTR [eax-0x2d464a13]
  4249ab:	inc    esi
  4249ac:	dec    ebx
  4249ad:	sbb    BYTE PTR [ebp-0x3a],0x18
  4249b1:	cwde   
  4249b2:	int3   
  4249b3:	dec    ebp
  4249b4:	add    bh,bh
  4249b6:	mov    al,ds:0x4ea665f
  4249bb:	mov    al,0xe3
  4249bd:	mov    dl,0xcb
  4249bf:	mov    ds:0x2b77a7a6,eax
  4249c4:	jbe    0x4249d9
  4249c6:	pusha  
  4249c7:	and    esp,DWORD PTR [ebx]
  4249c9:	or     al,0xc6
  4249cb:	in     al,0x3
  4249cd:	add    dh,al
  4249cf:	sbb    al,0xd3
  4249d1:	push   ecx
  4249d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249d3:	jne    0x424a53
  4249d5:	add    BYTE PTR ds:0x78c25015,0x14
  4249dc:	call   0xbe0d5b96
  4249e1:	std    
  4249e2:	pop    es
  4249e3:	push   eax
  4249e4:	jo     0x424a11
  4249e6:	loopne 0x4249ba
  4249e8:	add    eax,0x4d36e842
  4249ed:	add    BYTE PTR [edi-0xc4d1195],0xb7
  4249f4:	or     bl,BYTE PTR [ebp+0x77]
  4249f7:	js     0x424a72
  4249f9:	scas   al,BYTE PTR es:[edi]
  4249fa:	cld    
  4249fb:	jecxz  0x424a4b
  4249fd:	xor    edx,DWORD PTR [ebx]
  4249ff:	mov    ebx,0xf031bb38
  424a04:	mov    ecx,0xe5bdb3cc
  424a09:	or     esp,esi
  424a0b:	xchg   edx,eax
  424a0c:	pop    ebx
  424a0d:	call   0x7661:0x2eebc72a
  424a14:	out    0x40,eax
  424a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a17:	sub    DWORD PTR [ebp-0xf46712e],ecx
  424a1d:	(bad)  
  424a1e:	fwait
  424a1f:	aas    
  424a20:	push   esp
  424a21:	push   ebp
  424a22:	arpl   WORD PTR [ebx*4+0x1201ed8],bp
  424a29:	mov    eax,0x3c02dd8d
  424a2e:	mov    al,0x22
  424a30:	icebp  
  424a31:	jae    0x424a46
  424a33:	fistp  WORD PTR [ebx+0x6e]
  424a36:	in     eax,dx
  424a37:	and    esp,esi
  424a39:	or     esp,edi
  424a3b:	aad    0x5b
  424a3d:	in     al,0x3b
  424a3f:	into   
  424a40:	sti    
  424a41:	xlat   BYTE PTR ds:[ebx]
  424a42:	fist   DWORD PTR [edi-0x291c3b1e]
  424a48:	call   0x9069c4d4
  424a4d:	iret   
  424a4e:	cmc    
  424a4f:	adc    al,0x26
  424a51:	sbb    al,0xd2
  424a53:	imul   DWORD PTR [edx-0x368fe4dc]
  424a59:	xchg   esp,eax
  424a5a:	xor    al,0x43
  424a5d:	cdq    
  424a5e:	pop    es
  424a5f:	push   es
  424a60:	ror    BYTE PTR es:[ebx-0x5aaf6a0],cl
  424a67:	loop   0x4249ec
  424a69:	mov    bl,0x0
  424a6b:	cmp    eax,0xda0314b2
  424a70:	sbb    DWORD PTR ds:0xb412946e,edx
  424a76:	inc    ebx
  424a77:	das    
  424a78:	sub    al,0xc5
  424a7a:	lods   eax,DWORD PTR ds:[esi]
  424a7b:	sub    DWORD PTR [eax],edi
  424a7d:	es xchg edi,eax
  424a7f:	mov    ds:0xa25b4bd6,eax
  424a84:	mov    edi,0x384959ad
  424a89:	xchg   esi,eax
  424a8a:	mov    DWORD PTR [ecx+0x4408226d],ecx
  424a90:	jp     0x424a63
  424a92:	cli    
  424a93:	xchg   esi,eax
  424a94:	rol    BYTE PTR [ecx-0x2b1a9d6b],0x89
  424a9b:	mov    bh,0xc2
  424a9d:	cmp    BYTE PTR [esi],ah
  424a9f:	push   ecx
  424aa0:	xor    bl,BYTE PTR [eax+0x33d580e5]
  424aa6:	mov    eax,0x50c65319
  424aab:	push   esi
  424aac:	and    BYTE PTR [edi+0x28],ch
  424aaf:	ja     0x424a57
  424ab1:	outs   dx,BYTE PTR ds:[esi]
  424ab2:	add    eax,DWORD PTR [edi-0x1f]
  424ab5:	out    dx,al
  424ab6:	jge    0x424aca
  424ab8:	cmc    
  424ab9:	ss push 0x61
  424abc:	adc    edx,0x1dad38e0
  424ac2:	mov    DWORD PTR [edi-0x3b028d43],ebx
  424ac8:	jg     0x424aec
  424aca:	or     BYTE PTR [edx-0x14],bh
  424acd:	clc    
  424ace:	lahf   
  424acf:	sahf   
  424ad0:	mov    cl,0xe7
  424ad2:	mov    esi,0xed101e83
  424ad7:	add    DWORD PTR ds:0x78459774,esi
  424add:	xchg   ebx,eax
  424ade:	dec    edi
  424adf:	repnz inc BYTE PTR [edi+ecx*1]
  424ae3:	int3   
  424ae4:	sub    eax,0xfc5c941b
  424ae9:	scas   al,BYTE PTR es:[edi]
  424aea:	pop    ebx
  424aeb:	fcomp  DWORD PTR [ecx+eiz*2+0x20dad6aa]
  424af2:	and    DWORD PTR [ebx+eax*8+0x58aff7d5],esp
  424af9:	cmp    bh,BYTE PTR [ecx-0x654c00d7]
  424aff:	and    BYTE PTR [ebp+0x67d3767],ch
  424b05:	jp     0x424b31
  424b07:	cli    
  424b08:	xchg   ebx,eax
  424b09:	mov    dl,0x6e
  424b0b:	inc    edi
  424b0c:	mov    cs,ebp
  424b0e:	pushf  
  424b0f:	das    
  424b10:	dec    edx
  424b11:	aam    0x23
  424b13:	mov    ah,0xaa
  424b16:	rcr    ebx,1
  424b18:	mov    edx,DWORD PTR [ebx]
  424b1a:	or     al,0x7
  424b1c:	push   0x31
  424b1e:	dec    DWORD PTR [edi]
  424b20:	mov    ebp,0xee87b808
  424b25:	stos   BYTE PTR es:[edi],al
  424b26:	inc    edx
  424b27:	cwde   
  424b28:	mov    edx,0xd780ec11
  424b2d:	(bad)  
  424b2e:	sar    bh,1
  424b30:	cmp    bl,ch
  424b32:	cmp    eax,0xd8d7dd3a
  424b37:	bound  edi,QWORD PTR [ebx-0x38]
  424b3a:	clc    
  424b3b:	xor    eax,0xf6d08704
  424b40:	test   DWORD PTR [esp+ebp*2+0x58],ebp
  424b44:	test   BYTE PTR [edi],al
  424b46:	shl    BYTE PTR [esi-0x2206692b],cl
  424b4c:	push   0xffffffaf
  424b4e:	fstp   TBYTE PTR ds:0x849af9c6
  424b54:	xrelease xchg DWORD PTR [ebx],esp
  424b57:	push   cs
  424b58:	imul   ecx,DWORD PTR [ebp+0x68],0xffffffb7
  424b5c:	aaa    
  424b5d:	push   ds
  424b5e:	leave  
  424b5f:	mov    esp,0x636cb05d
  424b64:	add    edx,eax
  424b66:	shr    BYTE PTR es:[eax],1
  424b69:	pop    ss
  424b6a:	mov    eax,ds:0x3485b525
  424b6f:	cmp    al,0xfc
  424b71:	addr16 out dx,eax
  424b73:	and    dh,BYTE PTR [esi+ebx*1]
  424b76:	ret    0x6d58
  424b79:	imul   ebx,DWORD PTR [ebp+0x5f4e3589],0x3c
  424b80:	pop    edx
  424b81:	(bad)  
  424b82:	retf   0xd9e5
  424b85:	jle    0x424bd2
  424b87:	cwde   
  424b88:	mov    al,0xed
  424b8a:	push   edx
  424b8b:	stos   DWORD PTR es:[edi],eax
  424b8c:	mov    al,ds:0x4b7de263
  424b91:	repz mov eax,0xf9e6dc89
  424b97:	jle    0x424b7c
  424b99:	test   BYTE PTR [edi+0x2ae1317b],bh
  424b9f:	mov    ah,0x85
  424ba1:	inc    ebx
  424ba2:	jne    0x424b39
  424ba4:	xchg   ebp,eax
  424ba5:	jne    0x424bcc
  424ba7:	inc    ecx
  424ba8:	adc    DWORD PTR [esi],0xfffffffe
  424bab:	adc    eax,0x7140921f
  424bb0:	or     DWORD PTR [esi],ebx
  424bb2:	dec    eax
  424bb3:	push   esi
  424bb4:	fst    QWORD PTR [ecx]
  424bb6:	fs mov bh,0x43
  424bb9:	out    dx,eax
  424bba:	jnp    0x424bfc
  424bbc:	inc    ebx
  424bbd:	out    0x98,eax
  424bbf:	pop    ebx
  424bc0:	shl    BYTE PTR [edx+0x4d5b6015],0x29
  424bc7:	mov    BYTE PTR [ecx+0x75],ah
  424bca:	lahf   
  424bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bcc:	cs mov cl,0x8a
  424bcf:	jae    0x424ba3
  424bd1:	mov    dl,0xa6
  424bd3:	add    BYTE PTR [edx],0x78
  424bd6:	mov    edx,0xe3bd9ee0
  424bdb:	pop    edi
  424bdc:	jns    0x424b9a
  424bde:	push   cs
  424bdf:	mov    edx,0x4aa2d5ea
  424be4:	adc    al,0xfc
  424be6:	rol    DWORD PTR [edi],cl
  424be8:	xlat   BYTE PTR ds:[ebx]
  424be9:	jle    0x424bf6
  424beb:	mov    ds:0xaeea567c,eax
  424bf0:	rcl    esp,1
  424bf2:	arpl   WORD PTR [edi],bp
  424bf4:	adc    eax,0x7b0e026
  424bf9:	jecxz  0x424bd3
  424bfb:	mov    edi,0x2cea33a4
  424c00:	mov    al,ds:0xe3bc6213
  424c05:	cmp    eax,0x34e2a69a
  424c0a:	loopne 0x424bce
  424c0c:	in     al,0x86
  424c0e:	push   ax
  424c10:	sub    ah,dl
  424c12:	sbb    eax,0x8bc5c1a4
  424c17:	fild   WORD PTR [esi-0x622826d1]
  424c1d:	mov    eax,0x66cfac83
  424c22:	pop    es
  424c23:	sub    DWORD PTR [ebx],0x5a
  424c26:	test   al,0xeb
  424c28:	cld    
  424c29:	xchg   esp,eax
  424c2a:	jo     0x424c55
  424c2c:	shr    BYTE PTR [ebx],0x3b
  424c2f:	xor    ah,BYTE PTR [eax+0x1e]
  424c32:	out    0x48,al
  424c34:	mov    dh,0x5a
  424c36:	test   DWORD PTR [eax],ecx
  424c38:	or     al,0x1e
  424c3a:	lods   al,BYTE PTR ds:[esi]
  424c3b:	mov    ch,0x73
  424c3d:	mov    edx,0x2abde003
  424c42:	aas    
  424c43:	cli    
  424c44:	push   edx
  424c45:	sub    al,0x29
  424c47:	xchg   BYTE PTR [esi-0x61],bh
  424c4a:	loopne 0x424c22
  424c4c:	imul   edx,DWORD PTR [ebx-0x19665a20],0x8d131ac4
  424c56:	rep lods eax,DWORD PTR ds:[esi]
  424c58:	ficom  DWORD PTR [ebx-0x4b0c6c26]
  424c5e:	lods   al,BYTE PTR ds:[esi]
  424c5f:	pop    ds
  424c60:	sub    al,0xb1
  424c62:	nop
  424c63:	add    BYTE PTR [ebx],bl
  424c65:	push   edi
  424c66:	ja     0x424bf7
  424c68:	fmul   DWORD PTR [ebx+0x3d0b99e9]
  424c6e:	or     al,0x2e
  424c70:	mov    ecx,0x3caed1fd
  424c75:	xor    cl,ah
  424c77:	ja     0x424c07
  424c79:	inc    ecx
  424c7a:	cld    
  424c7b:	test   al,0x19
  424c7d:	push   esp
  424c7e:	mov    ds:0x48005916,eax
  424c83:	in     eax,dx
  424c84:	add    BYTE PTR [eax],ah
  424c86:	cdq    
  424c87:	and    al,ah
  424c89:	(bad)  
  424c8b:	dec    ebp
  424c8c:	imul   ecx,esi,0x7912dc8c
  424c92:	shr    BYTE PTR [ebx-0x5e],1
  424c95:	fucom  st(5)
  424c97:	dec    ebp
  424c98:	retf   0x7e16
  424c9b:	in     eax,0x59
  424c9d:	in     eax,0xf9
  424c9f:	mov    ebp,0xb94d9a03
  424ca4:	iret   
  424ca5:	inc    eax
  424ca6:	jp     0x424c8d
  424ca8:	ror    DWORD PTR [edi+0x6ad0a844],1
  424cae:	mov    dl,0xe8
  424cb0:	in     al,0xfb
  424cb2:	mov    dl,0x3b
  424cb4:	jl     0x424d20
  424cb6:	int3   
  424cb7:	mov    WORD PTR [ecx+ebx*8],gs
  424cba:	adc    DWORD PTR [ebx+0xb5ad82],ecx
  424cc0:	in     al,dx
  424cc1:	cmp    eax,0x59001277
  424cc6:	cmp    ebp,ebx
  424cc8:	stos   BYTE PTR es:[edi],al
  424cc9:	ret    
  424cca:	jecxz  0x424cb8
  424ccc:	hlt    
  424ccd:	mov    al,0x35
  424ccf:	inc    ecx
  424cd0:	ss pop esp
  424cd2:	jl     0x424c7b
  424cd4:	sub    eax,0xa5e41324
  424cd9:	xchg   esp,eax
  424cda:	xchg   dl,cl
  424cdc:	retf   
  424cdd:	cmp    eax,0x4e5086f3
  424ce2:	fs fs enter 0x7968,0xd7
  424ce8:	xor    al,0xe6
  424cea:	xchg   ebx,eax
  424ceb:	loopne 0x424cb6
  424ced:	mov    BYTE PTR [edx-0x6e],ch
  424cf0:	mov    esi,0x248d85f0
  424cf5:	add    DWORD PTR [ecx],edi
  424cf7:	arpl   WORD PTR [esi],bp
  424cf9:	mov    cl,0xc5
  424cfb:	add    eax,0x8ec73a37
  424d00:	mov    ch,0x1e
  424d02:	jmp    0xde03:0xfbf69600
  424d09:	mov    ebp,0xe038f5dc
  424d0e:	div    DWORD PTR [ebx]
  424d10:	sub    eax,0x6bbbd7c0
  424d15:	or     dh,BYTE PTR [esi]
  424d17:	fild   QWORD PTR [edi]
  424d19:	add    DWORD PTR [ecx-0x1a],0xffffff88
  424d1d:	push   es
  424d1e:	push   es
  424d1f:	popf   
  424d20:	inc    esi
  424d21:	in     eax,0x16
  424d23:	fadd   QWORD PTR [esi-0xc]
  424d26:	cs ret 
  424d28:	retf   
  424d29:	repnz adc edi,DWORD PTR [esi-0x54]
  424d2d:	lods   al,BYTE PTR ds:[esi]
  424d2e:	jg     0x424cc1
  424d30:	int3   
  424d31:	sti    
  424d32:	mov    esi,0x936052c
  424d37:	push   0x36
  424d39:	mov    bl,dh
  424d3b:	stos   BYTE PTR es:[edi],al
  424d3c:	sub    edx,DWORD PTR [ecx]
  424d3e:	lea    esp,[edi+0x2a2843a1]
  424d44:	int3   
  424d45:	jb     0x424db6
  424d47:	xor    al,0x33
  424d49:	shl    BYTE PTR [eax-0x5fe6085c],0x71
  424d50:	inc    ecx
  424d51:	shr    edx,1
  424d53:	sub    al,0xed
  424d55:	retf   
  424d56:	call   0x18e604e8
  424d5b:	ret    
  424d5c:	outs   dx,BYTE PTR ds:[esi]
  424d5d:	lds    ebp,FWORD PTR [ebx+0x5fecd943]
  424d63:	int3   
  424d64:	nop
  424d65:	les    ebp,FWORD PTR [ebx-0x60]
  424d68:	or     al,0x1f
  424d6a:	js     0x424dd7
  424d6c:	out    dx,eax
  424d6d:	fs (bad) 
  424d70:	stc    
  424d71:	ss imul ebx,eax,0x76
  424d75:	push   esp
  424d76:	fdivr  DWORD PTR [esi]
  424d78:	neg    BYTE PTR [ebp+0x6]
  424d7b:	push   ss
  424d7c:	ret    0x85c0
  424d7f:	dec    esp
  424d80:	jno    0x424d58
  424d82:	jbe    0x424db5
  424d84:	and    DWORD PTR [eax+0x6cf4a3f2],ebp
  424d8a:	sub    DWORD PTR [eax+0x1169f27a],0x4
  424d91:	sbb    DWORD PTR [ebp+0x76403a92],edx
  424d97:	adc    eax,0x9770def4
  424d9c:	or     al,0xca
  424d9e:	and    ah,BYTE PTR [ebx]
  424da0:	xor    ebx,ecx
  424da2:	inc    DWORD PTR [edi+eax*4]
  424da5:	mov    dl,BYTE PTR [eax-0x5e]
  424da8:	pop    ecx
  424da9:	(bad)  
  424dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dac:	or     esp,ecx
  424dae:	pop    esi
  424daf:	or     DWORD PTR [eax+0x5b26afd0],0x7ed56cfe
  424db9:	loop   0x424d8a
  424dbb:	jns    0x424d5a
  424dbd:	arpl   WORD PTR [eax+0x6f],dx
  424dc0:	loop   0x424daf
  424dc2:	xor    BYTE PTR [ebx+0x52875862],0xb6
  424dc9:	add    al,0x1b
  424dcb:	xor    DWORD PTR [edx+0x6764cc63],eax
  424dd1:	cmc    
  424dd2:	mov    dh,0xf3
  424dd4:	ja     0x424de0
  424dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dd7:	aam    0xe3
  424dd9:	xor    bl,0xde
  424ddc:	nop
  424ddd:	push   ecx
  424dde:	and    eax,0x8cca37ce
  424de3:	aad    0x5e
  424de5:	ret    
  424de6:	ret    
  424de7:	out    0xf9,eax
  424de9:	bound  ebp,QWORD PTR [edx]
  424deb:	xchg   DWORD PTR [esi+0x1b2fd37],edi
  424df1:	push   ss
  424df2:	cmp    BYTE PTR [edi+0x5e],0xc6
  424df6:	mov    bl,0xe3
  424df8:	(bad)  
  424df9:	sub    al,0x37
  424dfb:	test   BYTE PTR [ebp-0x60],bl
  424dfe:	pop    edx
  424dff:	mov    esp,ebp
  424e01:	jg     0x424d8e
  424e03:	sti    
  424e04:	shl    BYTE PTR [esi-0x46],1
  424e07:	xor    al,0x88
  424e09:	mov    esi,0x5ce8ad33
  424e0e:	sar    BYTE PTR [eax-0x60],1
  424e11:	or     ecx,0xfffffffc
  424e14:	loope  0x424dea
  424e16:	les    ecx,FWORD PTR [eax-0xaa95311]
  424e1c:	inc    ebp
  424e1d:	clc    
  424e1e:	rcr    BYTE PTR [edi-0x4a],cl
  424e21:	sbb    ebx,DWORD PTR [ecx-0x6b1c4e6]
  424e27:	cmp    eax,0xfe45fbce
  424e2c:	push   esi
  424e2d:	adc    eax,0xfecb75d1
  424e32:	gs dec ebp
  424e34:	jo     0x424e53
  424e36:	fdiv   QWORD PTR [edi+ecx*2+0x57]
  424e3a:	ja     0x424e29
  424e3c:	and    al,0x8e
  424e3e:	nop
  424e3f:	call   0xaaca:0x7ad8ea2b
  424e46:	dec    ebx
  424e47:	jno    0x424eb2
  424e49:	cmp    cl,BYTE PTR [edi-0xe40bf21]
  424e4f:	nop
  424e50:	ror    DWORD PTR [edi+0x36],1
  424e53:	push   edx
  424e54:	push   ss
  424e55:	jle    0x424e62
  424e57:	mov    ah,0x8
  424e59:	sub    edi,ecx
  424e5b:	mov    dh,0xc8
  424e5d:	xor    BYTE PTR [edx+0x2a38676d],dl
  424e63:	rcr    BYTE PTR [ecx-0x75],1
  424e66:	dec    ecx
  424e68:	(bad)  
  424e69:	cld    
  424e6a:	mov    ecx,0x2c92cd9
  424e6f:	jo     0x424e10
  424e71:	sti    
  424e72:	clc    
  424e73:	mov    dl,0x90
  424e75:	inc    ebp
  424e76:	in     eax,0xb4
  424e78:	fiadd  DWORD PTR [ebx]
  424e7b:	mov    esp,0x2e312b87
  424e80:	pop    ds
  424e81:	mov    ah,0x81
  424e83:	adc    DWORD PTR [edx+0x2d],ebp
  424e86:	mov    ds:0x5cff48a6,eax
  424e8b:	inc    eax
  424e8c:	push   ecx
  424e8d:	mov    DWORD PTR [eax+0x2fce6810],esp
  424e93:	push   ebx
  424e94:	jl     0x424e21
  424e96:	loopne 0x424e5d
  424e98:	cmp    BYTE PTR [ecx+0x3],ah
  424e9b:	pop    ds
  424e9c:	aam    0x5f
  424e9e:	mov    al,0x37
  424ea0:	inc    eax
  424ea1:	dec    di
  424ea3:	es jle 0x424e40
  424ea6:	cmp    BYTE PTR fs:[edx-0x1a085dc0],bh
  424ead:	jle    0x424e33
  424eaf:	arpl   ax,dx
  424eb1:	mov    edi,0xd50720f8
  424eb6:	or     DWORD PTR [esi],0x51
  424eb9:	add    BYTE PTR [edx+0x8],0xae
  424ebd:	pop    eax
  424ebe:	jge    0x424f0d
  424ec0:	addr16 or eax,0x961eb3ae
  424ec6:	inc    edx
  424ec7:	arpl   WORD PTR [esi-0x671e7804],di
  424ecd:	scas   eax,DWORD PTR es:[edi]
  424ece:	mov    ch,0xdf
  424ed0:	fidivr DWORD PTR [edi-0x22]
  424ed3:	lods   al,BYTE PTR ds:[esi]
  424ed4:	jne    0x424e9c
  424ed6:	and    ebp,esi
  424ed8:	in     al,0x6b
  424eda:	mov    esi,DWORD PTR [esi]
  424edc:	pop    ds
  424edd:	mov    ebp,0xa4b4e1c4
  424ee2:	cwde   
  424ee3:	out    0x8c,al
  424ee5:	dec    edi
  424ee6:	mov    ebp,0xdb13e548
  424eeb:	and    dl,bl
  424eed:	or     dh,dh
  424eef:	add    cl,dl
  424ef1:	sti    
  424ef2:	add    BYTE PTR [esi+0x16],bh
  424ef5:	in     al,dx
  424ef6:	or     dh,BYTE PTR [ebx+0x33e2f673]
  424efc:	sbb    DWORD PTR [esi-0x65769733],0x23
  424f03:	retf   0x91eb
  424f06:	pop    edx
  424f07:	test   eax,0xf59c7ce1
  424f0c:	cwde   
  424f0d:	xor    al,0xbe
  424f0f:	cmp    al,0x5c
  424f11:	xlat   BYTE PTR ds:[ebx]
  424f12:	loope  0x424f89
  424f14:	loopne 0x424f49
  424f16:	cmp    BYTE PTR [eax],ah
  424f18:	(bad)  
  424f19:	ja     0x424f82
  424f1b:	das    
  424f1c:	lds    ebp,FWORD PTR [esi-0x1231ceb5]
  424f22:	mul    esp
  424f24:	ret    0x932b
  424f27:	jne    0x424f2f
  424f29:	pop    ebp
  424f2a:	or     ecx,esp
  424f2c:	setge  ah
  424f2f:	dec    esi
  424f30:	shl    edi,0x5e
  424f33:	(bad)  
  424f34:	jmp    0x424f2b
  424f36:	ja     0x424f27
  424f38:	xchg   bl,bh
  424f3a:	xchg   esi,eax
  424f3b:	test   BYTE PTR [eax-0x3d078e90],bh
  424f41:	dec    edx
  424f42:	js     0x424ef9
  424f44:	pop    esp
  424f45:	push   ds
  424f46:	es sti 
  424f48:	adc    BYTE PTR [edx-0x44c2f4f3],cl
  424f4e:	pusha  
  424f4f:	add    al,0x24
  424f51:	inc    edi
  424f52:	sahf   
  424f53:	jg     0x424f5f
  424f55:	int    0x3b
  424f57:	adc    cl,BYTE PTR [esi+0x34cca0c0]
  424f5d:	test   BYTE PTR [ebx+0x15e276e5],al
  424f63:	pop    edx
  424f64:	iret   
  424f65:	ret    0x4aa8
  424f68:	in     al,dx
  424f69:	adc    al,0xd
  424f6b:	jnp    0x424f80
  424f6d:	dec    eax
  424f6e:	xchg   esi,eax
  424f6f:	xchg   ecx,eax
  424f70:	pop    edx
  424f71:	ret    0x6b33
  424f74:	adc    esp,ebp
  424f76:	or     al,0x1b
  424f78:	pop    esi
  424f79:	sbb    bh,BYTE PTR [ebx]
  424f7b:	mov    dh,0xdd
  424f7d:	push   ecx
  424f7e:	and    al,bh
  424f80:	cmp    DWORD PTR [eax],edx
  424f82:	or     ch,0x38
  424f85:	sub    al,0x94
  424f87:	dec    esi
  424f88:	or     ecx,eax
  424f8a:	leave  
  424f8b:	mov    edi,DWORD PTR [esi]
  424f8d:	dec    ecx
  424f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f8f:	xchg   edi,eax
  424f90:	shl    DWORD PTR [esi+0x55],1
  424f93:	adc    eax,0x9b0f991c
  424f98:	pop    esi
  424f99:	imul   edx,DWORD PTR [edi-0x3],0x74
  424f9d:	adc    DWORD PTR [eax+0x792b5f12],ebp
  424fa3:	mov    ch,0xce
  424fa5:	mov    ah,0xa8
  424fa7:	(bad)  
  424fa8:	hlt    
  424fa9:	bswap  ebp
  424fab:	xchg   DWORD PTR [esi-0x70],edx
  424fae:	mov    ds:0xc2e82b64,eax
  424fb3:	(bad)  
  424fb4:	adc    ah,0x77
  424fb7:	adc    eax,0x51d2ba0d
  424fbc:	ror    BYTE PTR [ecx+0x22],cl
  424fbf:	aaa    
  424fc0:	sar    BYTE PTR [ebx],0x20
  424fc3:	retf   
  424fc4:	lahf   
  424fc5:	push   ebp
  424fc6:	xor    DWORD PTR [ebx+esi*2],edi
  424fc9:	pop    esp
  424fca:	imul   ecx,DWORD PTR [edi+0x4312b94b],0xffffffa2
  424fd1:	arpl   si,dx
  424fd3:	inc    ebx
  424fd4:	and    al,0x40
  424fd6:	push   esp
  424fd7:	xor    BYTE PTR [ebp-0x16c5bc20],cl
  424fdd:	popf   
  424fde:	stos   BYTE PTR es:[edi],al
  424fdf:	in     al,0xdc
  424fe1:	call   DWORD PTR [ebp+0x5d47122]
  424fe7:	xchg   esp,eax
  424fe8:	or     al,BYTE PTR [eax-0x1ccd26e3]
  424fee:	lahf   
  424fef:	mov    ebx,cs
  424ff1:	in     al,dx
  424ff2:	mov    bl,0x32
  424ff4:	nop
  424ff5:	mov    ss,WORD PTR [ebp+0x6f9c969]
  424ffb:	add    ebx,DWORD PTR [edi-0x1c]
  424ffe:	out    dx,al
  424fff:	jmp    0xa81e:0xdcea2bc8
  425006:	jmp    0x424fb8
  425008:	pop    ebp
  425009:	lahf   
  42500a:	sub    esi,edi
  42500c:	mov    edi,0x62367500
  425011:	add    BYTE PTR [eax],0x5c
  425014:	test   al,0x56
  425016:	ins    BYTE PTR es:[edi],dx
  425017:	push   esi
  425018:	shr    al,1
  42501a:	jle    0x424fea
  42501c:	xchg   esi,eax
  42501d:	and    cl,ch
  42501f:	add    al,0xb4
  425021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425022:	(bad)  
  425024:	or     BYTE PTR [edi+edi*8],ah
  425027:	lahf   
  425028:	rol    BYTE PTR [esi],0xce
  42502b:	and    edx,eax
  42502d:	mov    edi,0xc289ddfe
  425032:	push   cs
  425033:	shr    cl,0xa9
  425036:	mov    WORD PTR [ecx],ds
  425038:	xor    cl,BYTE PTR [edx+ecx*1]
  42503b:	loope  0x425099
  42503d:	addr16 out dx,eax
  42503f:	loope  0x42508a
  425041:	rol    DWORD PTR [edx-0x4fab4fe3],cl
  425047:	mov    ebp,eax
  425049:	xchg   esp,eax
  42504a:	gs pop es
  42504c:	fst    QWORD PTR [edx-0x1c]
  42504f:	imul   ebp,DWORD PTR [edi-0x5d],0x64795b4c
  425056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425057:	retf   
  425058:	sbb    eax,0xd25fb11c
  42505d:	and    ebp,ebp
  42505f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425060:	pop    es
  425061:	retf   0x7ec5
  425064:	push   esp
  425065:	mov    ah,0x9b
  425067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425068:	mov    ebp,0x90f9ca5f
  42506d:	imul   ebp,DWORD PTR [esi+0x4f745b24],0x21cb4e52
  425077:	jo     0x4250ca
  425079:	call   FWORD PTR gs:[eax-0x1d823b4e]
  425080:	mov    ebp,0xe489b09b
  425086:	cmp    ebp,edi
  425088:	jne    0x4250fd
  42508a:	mov    al,ds:0xf940aed1
  42508f:	xchg   cl,bl
  425091:	test   BYTE PTR [ecx],0x3a
  425094:	jnp    0x4250e0
  425096:	pop    ds
  425097:	in     al,dx
  425098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425099:	repz addr16 out 0xc3,al
  42509d:	stos   BYTE PTR es:[edi],al
  42509e:	loope  0x425057
  4250a0:	les    ebp,FWORD PTR [esi-0x7b480be0]
  4250a6:	xor    bh,BYTE PTR [esp+ebx*1+0x4d7eeadc]
  4250ad:	sub    eax,0xba80d776
  4250b2:	sub    al,dl
  4250b4:	jp     0x4250a9
  4250b6:	or     esi,ebp
  4250b8:	mov    eax,edx
  4250ba:	mov    ecx,0xddb13423
  4250bf:	test   al,0x2
  4250c1:	stc    
  4250c2:	sub    dh,cl
  4250c4:	sub    DWORD PTR [eax],edx
  4250c6:	push   eax
  4250c7:	repnz xor DWORD PTR [ecx+ebp*4-0x6eb20d09],ecx
  4250cf:	sahf   
  4250d0:	jle    0x4250eb
  4250d2:	add    esi,DWORD PTR [edx]
  4250d4:	mov    ss,WORD PTR [ebx+0x37]
  4250d7:	ins    BYTE PTR es:[edi],dx
  4250d8:	es push 0x886c2ec1
  4250de:	je     0x4250d9
  4250e0:	mov    eax,ds:0x9cc5d642
  4250e5:	xchg   ecx,eax
  4250e6:	aas    
  4250e7:	packuswb mm1,mm0
  4250ea:	sub    ebx,DWORD PTR [edx-0x40]
  4250ed:	call   0x89d0:0x70b11ed9
  4250f4:	fadd   DWORD PTR [edx]
  4250f6:	or     ah,BYTE PTR [ebx-0x3a]
  4250f9:	lock int 0xa9
  4250fc:	dec    ebp
  4250fd:	pop    eax
  4250fe:	adc    eax,DWORD PTR [ebp+0x24]
  425101:	outs   dx,BYTE PTR ds:[esi]
  425102:	xor    BYTE PTR [esp+eax*1],cl
  425105:	loope  0x4250f5
  425107:	sub    BYTE PTR [ebx+0x19de788b],cl
  42510d:	lahf   
  42510e:	jl     0x42509f
  425110:	inc    ebx
  425111:	push   cs
  425112:	fimul  DWORD PTR ds:0x91cb2a09
  425118:	cmp    eax,0x6644e2c7
  42511d:	scas   eax,DWORD PTR es:[edi]
  42511e:	cli    
  42511f:	mov    dh,0xac
  425121:	push   ecx
  425122:	not    DWORD PTR ds:0x811221a4
  425128:	sti    
  425129:	sub    esp,DWORD PTR [ecx+0x34]
  42512c:	loop   0x425177
  42512e:	jo     0x4250ce
  425130:	ins    BYTE PTR es:[edi],dx
  425131:	pop    esp
  425132:	cli    
  425133:	cmp    BYTE PTR [eax-0x6890d825],ch
  425139:	ins    BYTE PTR es:[edi],dx
  42513a:	sub    al,0x2f
  42513c:	dec    edi
  42513d:	jno    0x42512d
  42513f:	cmp    DWORD PTR [ebx+0x2b],ebx
  425142:	push   es
  425143:	xchg   ebp,eax
  425144:	jne    0x4250f3
  425146:	(bad)  
  425147:	loopne 0x425150
  425149:	or     edi,DWORD PTR [ecx-0x5a]
  42514c:	popa   
  42514d:	xor    al,0x24
  42514f:	cmp    dl,BYTE PTR ds:0xdfffd08a
  425155:	inc    edx
  425156:	dec    esp
  425157:	or     BYTE PTR [eax-0x62],0x17
  42515b:	mov    eax,0x745051cf
  425160:	sbb    BYTE PTR [ecx-0x69],dh
  425163:	lock jmp 0xd001:0x777e2669
  42516b:	xchg   DWORD PTR [ebp-0x71],eax
  42516e:	sbb    bl,0xe8
  425171:	xchg   esp,eax
  425172:	mov    edx,DWORD PTR [esi+0x6f708ce7]
  425178:	(bad)  
  42517b:	jno    0x4251f6
  42517d:	push   edi
  42517e:	je     0x425111
  425180:	call   0x3750:0x41136c0c
  425187:	dec    esi
  425188:	lods   al,BYTE PTR ds:[esi]
  425189:	xor    al,0xf7
  42518b:	mov    ah,0x33
  42518d:	(bad)  
  42518e:	xchg   ebx,eax
  42518f:	dec    ecx
  425190:	lods   al,BYTE PTR ds:[esi]
  425191:	ret    0x6086
  425194:	lahf   
  425195:	push   0x62
  425197:	jb     0x4251af
  425199:	cli    
  42519a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42519b:	pushf  
  42519c:	inc    ecx
  42519d:	add    eax,esp
  42519f:	cld    
  4251a0:	mov    ebp,0x44ac38d5
  4251a5:	fwait
  4251a6:	cmp    eax,0xd6943149
  4251ab:	int    0x4a
  4251ad:	mov    esi,0x56239003
  4251b2:	jnp    0x42513f
  4251b4:	jle    0x425143
  4251b6:	mov    dl,cl
  4251b8:	pop    ebp
  4251b9:	outs   dx,BYTE PTR ds:[esi]
  4251ba:	jp     0x425194
  4251bc:	pop    eax
  4251bd:	add    al,0x4c
  4251bf:	cs sahf 
  4251c1:	sub    ch,BYTE PTR [ecx+0x2b57a2bf]
  4251c7:	jp     0x42521d
  4251c9:	pop    ecx
  4251ca:	sub    edi,esp
  4251cc:	or     DWORD PTR [ebx],esi
  4251ce:	cmp    BYTE PTR [ebx-0x80],ch
  4251d1:	and    al,0xa2
  4251d3:	fnstsw WORD PTR [esi-0x4d]
  4251d6:	xor    al,0x26
  4251d8:	(bad)  
  4251d9:	xchg   ecx,eax
  4251da:	xor    DWORD PTR ds:0x4102686a,ebx
  4251e0:	lock sub bl,BYTE PTR [eax-0x1e993b7d]
  4251e7:	xor    DWORD PTR [esi-0x42],0xaae883c0
  4251ee:	jo     0x425198
  4251f0:	jmp    0x4c22:0x4e8d012c
  4251f7:	mov    ch,0x53
  4251f9:	repz cmp eax,0x1ca91b0c
  4251ff:	loop   0x425203
  425201:	retf   
  425202:	xor    bl,BYTE PTR [edx+ebp*1-0x51]
  425206:	test   DWORD PTR [ebp-0x78dc56db],0x504808b8
  425210:	push   0x271c4672
  425215:	imul   edi,DWORD PTR [ebx],0x85f4e98e
  42521b:	out    dx,eax
  42521c:	mov    ebx,0xc155412e
  425221:	push   0xdf4fa19e
  425226:	jo     0x425238
  425228:	les    esi,FWORD PTR [edx+0x33]
  42522b:	mov    al,0x57
  42522d:	xor    al,0x20
  42522f:	js     0x4251c7
  425231:	lahf   
  425232:	std    
  425233:	rcl    BYTE PTR [edx-0x5c],cl
  425236:	or     eax,0x5199d1b6
  42523b:	mov    fs,WORD PTR ds:0x9654be66
  425241:	add    eax,0x89004803
  425246:	repnz pop ebx
  425248:	ja     0x42527a
  42524a:	pusha  
  42524b:	nop
  42524c:	jmp    0xdb4d49b9
  425251:	sub    eax,0x47c0c3a
  425256:	mov    ecx,0x9833e6ce
  42525b:	or     al,0x35
  42525d:	xchg   edx,eax
  42525e:	mov    dh,0x1a
  425260:	(bad)  
  425261:	mov    ds:0xb3141e8b,eax
  425266:	fwait
  425267:	ds jecxz 0x425212
  42526a:	cmc    
  42526b:	(bad)  
  42526c:	jl     0x4252ac
  42526e:	xchg   ecx,eax
  42526f:	fcomp  QWORD PTR [ecx+0x76d9c704]
  425275:	sbb    eax,ebp
  425277:	pop    ss
  425278:	mov    dl,0x3e
  42527a:	mov    al,BYTE PTR [esi-0x2b8c62de]
  425280:	fnstcw WORD PTR [edi+eiz*2-0x46]
  425284:	cli    
  425285:	mov    ds:0x4e0323d1,eax
  42528a:	adc    BYTE PTR [ebp-0xe6837a0],dl
  425290:	xor    BYTE PTR [esi+0x16],bh
  425293:	ins    DWORD PTR es:[edi],dx
  425294:	test   al,0x66
  425296:	sbb    BYTE PTR [esp+edi*8-0x80],dl
  42529a:	sbb    edx,DWORD PTR [edx+0x51e8ca31]
  4252a0:	xlat   BYTE PTR ds:[ebx]
  4252a1:	test   DWORD PTR ds:0x44186762,esi
  4252a7:	inc    ebx
  4252a8:	call   0xa977:0x5b5f4c91
  4252af:	adc    al,0x6e
  4252b1:	punpckhwd mm0,mm1
  4252b4:	jae    0x4252a1
  4252b6:	cld    
  4252b7:	ins    DWORD PTR es:[edi],dx
  4252b8:	lock sbb eax,0xb9837247
  4252be:	iret   
  4252bf:	mov    eax,DWORD PTR [eax-0x1c]
  4252c2:	lods   eax,DWORD PTR ds:[esi]
  4252c3:	shl    BYTE PTR [eax-0x5a],1
  4252c6:	fsubr  DWORD PTR [ebx-0x3a4b6173]
  4252cc:	add    BYTE PTR [esi-0x68a6abe8],ah
  4252d2:	icebp  
  4252d3:	iret   
  4252d4:	mov    al,ds:0x7d7c2228
  4252d9:	clc    
  4252da:	mov    bp,0xce69
  4252de:	fucomip st,st(6)
  4252e0:	or     BYTE PTR [edx+0x10459577],0x1
  4252e7:	repz and bl,dl
  4252ea:	or     eax,0x9ccfda2b
  4252ef:	push   edx
  4252f0:	pop    ds
  4252f1:	lods   al,BYTE PTR gs:[esi]
  4252f3:	psubsw mm6,mm4
  4252f6:	ds or  eax,0x3931e035
  4252fc:	xchg   DWORD PTR ds:0xf8622b6d,esp
  425302:	cmp    DWORD PTR [edx+0x7e0825b0],edx
  425308:	out    dx,eax
  425309:	js     0x425327
  42530b:	imul   BYTE PTR ds:0x75940d75
  425311:	out    dx,eax
  425312:	div    bh
  425314:	xor    esi,edx
  425316:	stos   BYTE PTR es:[edi],al
  425317:	inc    esi
  425318:	test   eax,0xcd06106
  42531d:	push   esp
  42531e:	mov    ah,0xaa
  425320:	pop    esi
  425321:	lods   eax,DWORD PTR ds:[esi]
  425322:	inc    edi
  425323:	cs inc ebx
  425325:	(bad)  
  425326:	sub    BYTE PTR [ebp+0x6b],cl
  425329:	lods   al,BYTE PTR ds:[esi]
  42532a:	dec    ebx
  42532b:	fdivr  QWORD PTR [eax+0x5f]
  42532e:	xchg   edi,eax
  42532f:	hlt    
  425330:	(bad)  
  425331:	cmp    ebx,esi
  425333:	inc    esi
  425334:	jae    0x4252d5
  425336:	sub    bh,BYTE PTR [ebx-0x10a88ded]
  42533c:	mov    bl,0x4d
  42533e:	inc    edx
  42533f:	mov    eax,0xa015b579
  425344:	out    0xe5,eax
  425346:	mov    ebx,0x3255a51e
  42534b:	repnz dec edx
  42534d:	xor    al,0xaa
  42534f:	jl     0x42539a
  425351:	pop    esi
  425352:	mov    al,0x18
  425354:	clc    
  425355:	or     DWORD PTR [edx],esi
  425357:	dec    BYTE PTR [ebx]
  425359:	cmp    edx,ecx
  42535b:	sub    eax,DWORD PTR [edx+0x56]
  42535e:	mov    BYTE PTR [esi+0x2d],dh
  425361:	jnp    0x425304
  425363:	sbb    edx,edx
  425365:	dec    eax
  425366:	lea    ebx,[edi-0x10]
  425369:	in     al,dx
  42536a:	cmp    eax,0xb1accb05
  42536f:	sub    dl,BYTE PTR [edi]
  425371:	sub    ecx,ebx
  425373:	push   esp
  425374:	in     eax,0x47
  425376:	(bad)  
  425377:	xchg   ebx,eax
  425378:	mov    bl,0x6b
  42537a:	mov    bl,0xdb
  42537c:	push   cs
  42537d:	cmc    
  42537e:	push   ebx
  42537f:	sti    
  425380:	stc    
  425381:	mov    al,ds:0xd1c4536c
  425386:	add    BYTE PTR [esi-0x5a8f1c95],0x63
  42538d:	mov    esp,0xa7e45dbd
  425392:	push   eax
  425393:	(bad)  
  425394:	jmp    0x9e5f:0x21f51b6f
  42539b:	mov    ?,WORD PTR [ebx+ebp*4]
  42539e:	mul    DWORD PTR [ecx+ebp*2+0x4c]
  4253a2:	pop    es
  4253a3:	ror    DWORD PTR [ebx],1
  4253a5:	fisub  WORD PTR [ebx+0x4fb19651]
  4253ab:	push   edx
  4253ac:	push   ss
  4253ad:	ret    0x9cd7
  4253b0:	xor    eax,0xc4b3ecf6
  4253b5:	mov    dh,BYTE PTR [edx]
  4253b7:	push   eax
  4253b8:	sub    esi,esi
  4253ba:	in     al,0x4d
  4253bc:	ficomp DWORD PTR [ebx]
  4253be:	xchg   BYTE PTR [edx+0x29],dl
  4253c1:	xchg   esi,eax
  4253c2:	je     0x425399
  4253c4:	jle    0x42541f
  4253c6:	mov    BYTE PTR [esi+edi*8],bl
  4253c9:	loope  0x425357
  4253cb:	popa   
  4253cc:	add    eax,0x42565a18
  4253d1:	int    0xd7
  4253d3:	rcr    ah,0xae
  4253d6:	xlat   BYTE PTR ds:[ebx]
  4253d7:	adc    al,0xbb
  4253d9:	pop    es
  4253da:	iret   
  4253db:	jne    0x425450
  4253dd:	xchg   BYTE PTR [esi-0x15],bl
  4253e0:	or     BYTE PTR [edi-0x453a7a2e],bh
  4253e6:	stos   BYTE PTR es:[edi],al
  4253e7:	dec    ecx
  4253e8:	ret    
  4253e9:	call   0x6db1:0x74b3788c
  4253f0:	dec    eax
  4253f1:	into   
  4253f2:	mov    ecx,0xfdcf8538
  4253f7:	sub    DWORD PTR [ebx-0x384c38ae],ecx
  4253fd:	sbb    ch,BYTE PTR [ebp-0x4a86c611]
  425403:	in     eax,0x46
  425405:	(bad)  
  425406:	and    DWORD PTR [ebx-0x71],edi
  425409:	mov    esi,0xb456ea63
  42540e:	test   eax,0x90a52b4a
  425413:	pop    esi
  425414:	psadbw mm2,QWORD PTR [esi]
  425417:	popf   
  425418:	(bad)  
  425419:	retf   0x4b79
  42541c:	push   ecx
  42541d:	or     al,0x95
  42541f:	jecxz  0x425476
  425421:	pushf  
  425422:	in     al,0x65
  425424:	xor    DWORD PTR [esi],edx
  425426:	mov    al,ds:0xfe145c15
  42542b:	es retf 0xc86a
  42542f:	pop    ds
  425430:	jl     0x425425
  425432:	push   ebp
  425433:	adc    al,0xa5
  425435:	inc    ecx
  425436:	enter  0xbc43,0xb5
  42543a:	fidivr DWORD PTR [ebp+0x74]
  42543d:	ror    DWORD PTR [ecx],1
  42543f:	in     eax,0xaa
  425441:	pop    ss
  425442:	dec    esi
  425443:	mov    esp,0x212173fa
  425448:	repz push esi
  42544a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42544b:	jmp    0x1da8:0x70b561df
  425452:	or     BYTE PTR [edi],bh
  425454:	jns    0x4253e5
  425456:	repz jns 0x4254a9
  425459:	jo     0x4253e4
  42545b:	sub    BYTE PTR [eax+0x7d],ah
  42545e:	(bad)  
  42545f:	je     0x425429
  425461:	aad    0x27
  425463:	cli    
  425464:	dec    ecx
  425465:	stos   BYTE PTR es:[edi],al
  425466:	lock outs dx,DWORD PTR ds:[esi]
  425468:	jnp    0x42545f
  42546a:	pop    edx
  42546b:	test   DWORD PTR [ebx+0x1f],eax
  42546e:	dec    edi
  42546f:	mov    al,0x36
  425471:	mov    esp,0x16f8f1f6
  425476:	ins    DWORD PTR es:[edi],dx
  425477:	(bad)  
  425478:	xor    DWORD PTR [esi+0x10ccef5d],ecx
  42547e:	fisub  WORD PTR [edi-0x235e1777]
  425484:	and    eax,0x52fc1653
  425489:	ins    DWORD PTR es:[edi],dx
  42548a:	not    DWORD PTR [esi-0x2d8a4136]
  425490:	retf   0xf854
  425493:	sbb    BYTE PTR [edx-0x28],ah
  425496:	and    DWORD PTR [edx],edi
  425498:	xchg   ecx,eax
  425499:	sbb    BYTE PTR [esi+ebp*1+0x620dffa0],al
  4254a0:	lahf   
  4254a1:	fild   QWORD PTR [ebp-0x5dea1372]
  4254a7:	ror    ebp,0x7f
  4254aa:	add    ebp,DWORD PTR [ecx-0x1902dd7f]
  4254b0:	push   edx
  4254b1:	sub    esi,DWORD PTR [edx+ebx*1+0x64fe7c1f]
  4254b8:	pop    edx
  4254b9:	leave  
  4254ba:	out    0x8,eax
  4254bc:	pop    edi
  4254bd:	aaa    
  4254be:	sbb    DWORD PTR [ecx+ebx*2],edi
  4254c1:	pop    ds
  4254c2:	les    ebx,FWORD PTR [esi-0x1c9bd3aa]
  4254c8:	shr    DWORD PTR [esi],0xbb
  4254cb:	outs   dx,DWORD PTR ds:[esi]
  4254cc:	inc    ecx
  4254cd:	and    dl,ah
  4254cf:	jp     0x4254af
  4254d1:	and    BYTE PTR [edx],ah
  4254d3:	and    ah,ah
  4254d5:	in     al,dx
  4254d6:	mov    ah,0x31
  4254d8:	mov    eax,ds:0x23c700bc
  4254dd:	pop    esi
  4254de:	add    al,0x33
  4254e0:	xlat   BYTE PTR ds:[ebx]
  4254e1:	imul   ebp,DWORD PTR [ebp-0xc2c5ebf],0x75123a65
  4254eb:	rcr    BYTE PTR ds:0x7b386f94,1
  4254f1:	and    esp,ebp
  4254f3:	push   cs
  4254f4:	sbb    al,0xb9
  4254f6:	test   eax,0x128c7e8
  4254fb:	aam    0xc4
  4254fd:	test   al,0xfe
  4254ff:	xchg   edi,eax
  425500:	mov    DWORD PTR [ebx+0x51],edx
  425503:	xchg   DWORD PTR [edx-0x4935fc4b],eax
  425509:	mov    eax,ds:0x673a9119
  42550e:	pop    ss
  42550f:	test   al,0x11
  425511:	cmc    
  425512:	push   ss
  425513:	push   esi
  425514:	inc    eax
  425515:	xor    edx,DWORD PTR [eax-0x2be9fba1]
  42551b:	repnz repz (bad) 
  42551e:	and    al,0x7a
  425520:	in     eax,dx
  425521:	fst    DWORD PTR [eax+eiz*1+0x3aa9428a]
  425528:	lods   eax,DWORD PTR ds:[esi]
  425529:	mov    DWORD PTR [edx+0x41],ebx
  42552c:	stos   BYTE PTR es:[edi],al
  42552d:	mov    ebx,0xd6b4e200
  425532:	dec    ebp
  425533:	out    0x9a,al
  425535:	dec    esp
  425536:	pop    ecx
  425537:	jle    0x425599
  425539:	xchg   ebp,eax
  42553a:	lea    ecx,[eax]
  42553c:	sti    
  42553d:	scas   eax,DWORD PTR es:[edi]
  42553e:	inc    ebx
  42553f:	lods   eax,DWORD PTR ds:[esi]
  425540:	imul   edx,DWORD PTR [ebx],0xfffffff6
  425543:	aas    
  425544:	inc    ecx
  425545:	jge    0x4254d5
  425547:	cld    
  425548:	xor    DWORD PTR [edx],edi
  42554a:	add    eax,0x15bc9f0e
  42554f:	mov    eax,ds:0x9c4c8186
  425554:	ins    BYTE PTR es:[edi],dx
  425555:	or     edi,0xffffffec
  425558:	cmc    
  425559:	inc    eax
  42555a:	push   esp
  42555b:	pop    esp
  42555c:	les    ecx,FWORD PTR [edi]
  42555e:	inc    esi
  42555f:	jns    0x4254e4
  425561:	imul   DWORD PTR [esi+0x40]
  425564:	mov    ds:0x49b0ed9b,al
  425569:	push   esp
  42556a:	lods   eax,DWORD PTR ds:[esi]
  42556b:	jbe    0x4254f3
  42556d:	cdq    
  42556e:	std    
  42556f:	cdq    
  425570:	enter  0xb3fe,0xf0
  425574:	dec    eax
  425575:	sti    
  425576:	mov    WORD PTR [edi+0x76014182],ds
  42557c:	js     0x4255cc
  42557e:	out    dx,al
  42557f:	adc    BYTE PTR ds:0x55ddd0f1,ch
  425585:	pop    esi
  425586:	push   ebx
  425587:	fistp  WORD PTR [ebp-0x45]
  42558a:	push   eax
  42558b:	ret    
  42558c:	mov    eax,ds:0x77297e53
  425591:	sbb    edx,eax
  425593:	xor    al,BYTE PTR [eax]
  425595:	popa   
  425596:	adc    ebx,DWORD PTR [edx-0x430c2f78]
  42559c:	int3   
  42559d:	mov    WORD PTR [edx],?
  42559f:	shr    DWORD PTR [edx-0x5245c812],1
  4255a5:	sub    BYTE PTR [edi+0x57],ch
  4255a8:	push   esp
  4255a9:	mov    eax,0xd155d609
  4255ae:	inc    ebp
  4255af:	out    dx,al
  4255b0:	(bad)  
  4255b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255b3:	arpl   WORD PTR [ebx+0x33],bp
  4255b6:	push   ebp
  4255b7:	push   edi
  4255b8:	dec    ebx
  4255b9:	xor    al,0x6a
  4255bb:	ins    DWORD PTR es:[edi],dx
  4255bc:	mov    ds,WORD PTR [edi]
  4255be:	jns    0x4255d3
  4255c0:	and    BYTE PTR [ebp*1+0x36f755cd],bh
  4255c7:	cld    
  4255c8:	inc    eax
  4255c9:	stc    
  4255ca:	mov    ch,0x6
  4255cc:	scas   eax,DWORD PTR es:[edi]
  4255cd:	mov    eax,0x31eeed51
  4255d2:	int    0x4d
  4255d4:	mov    ecx,ebx
  4255d6:	sbb    BYTE PTR ds:0xb802d267,0x7e
  4255dd:	mov    ecx,0xca67f1da
  4255e2:	sti    
  4255e3:	jne    0x425613
  4255e5:	aas    
  4255e6:	cmp    eax,0xfcf0dd1d
  4255eb:	call   0xa055:0x9162d17e
  4255f2:	xor    al,0x9d
  4255f4:	and    esi,edx
  4255f6:	xchg   bl,cl
  4255f8:	jmp    0x809f:0xb78b5e7a
  4255ff:	out    0x1,eax
  425601:	push   0x6e
  425603:	fdiv   DWORD PTR [edi]
  425605:	ss pop es
  425607:	clc    
  425608:	push   ebx
  425609:	and    al,0x8c
  42560b:	cdq    
  42560c:	retf   
  42560d:	add    eax,0xf3f32d1f
  425612:	inc    BYTE PTR [edi]
  425614:	test   DWORD PTR [edi+0x43],edx
  425617:	fs mov edx,0x2b27ce7
  42561d:	or     BYTE PTR [esi-0x1d],0xbb
  425621:	int3   
  425622:	lds    esp,FWORD PTR [esp+ebx*1]
  425625:	mov    ch,0x84
  425627:	or     eax,0x35b92e6c
  42562c:	pop    ds
  42562d:	inc    ecx
  42562e:	xor    eax,0x5bf9d9e0
  425633:	imul   edx,DWORD PTR [edi],0x28
  425636:	in     eax,dx
  425637:	pusha  
  425638:	add    cl,cl
  42563a:	adc    eax,0x6c9f8356
  42563f:	(bad)  
  425640:	xchg   DWORD PTR [ecx+0xf211821],esp
  425646:	fwait
  425647:	test   al,0x5d
  425649:	mov    ecx,0x2e92e360
  42564e:	in     eax,0x69
  425650:	in     al,0x17
  425652:	stos   BYTE PTR es:[edi],al
  425653:	xlat   BYTE PTR ds:[ebx]
  425654:	and    DWORD PTR [edi+ebp*2+0x63],esi
  425658:	cmp    ah,BYTE PTR [eax+esi*2]
  42565b:	mov    dh,0x61
  42565d:	push   ss
  42565e:	lock add bh,BYTE PTR [ebx+0x5e]
  425662:	mov    esp,0x4f812c95
  425667:	add    ah,BYTE PTR [esi]
  425669:	xchg   ebx,eax
  42566a:	inc    ebx
  42566b:	jmp    0x3adc:0x181ba481
  425672:	xor    DWORD PTR [edx],ebp
  425674:	movsx  edi,BYTE PTR [ebp+ebp*4-0x4f]
  425679:	scas   al,BYTE PTR es:[edi]
  42567a:	cli    
  42567b:	pop    edi
  42567c:	push   ebx
  42567d:	push   ecx
  42567e:	adc    BYTE PTR [ebx-0x26],dl
  425681:	or     ah,cl
  425683:	jno    0x425614
  425685:	jg     0x425631
  425687:	hlt    
  425688:	idiv   DWORD PTR [ebp+0x39]
  42568b:	pushf  
  42568c:	cld    
  42568d:	xchg   BYTE PTR [esi+eax*8-0x69ec00aa],cl
  425694:	push   esi
  425695:	call   0xafd9:0x83a3f1d2
  42569c:	jmp    0x425625
  42569e:	or     eax,eax
  4256a0:	je     0x4256f5
  4256a2:	fadd   QWORD PTR [esi-0x47]
  4256a5:	or     BYTE PTR [ecx-0x4b],bl
  4256a8:	dec    edx
  4256a9:	call   0xd0ab:0xd8175fb4
  4256b0:	jle    0x4256c9
  4256b2:	sub    eax,0xffffffdb
  4256b5:	les    esi,FWORD PTR [edx+0x1]
  4256b8:	xor    eax,0xc962f38
  4256bd:	(bad)  
  4256be:	mov    WORD PTR [ecx],gs
  4256c0:	add    DWORD PTR [eax-0x5e496eab],edx
  4256c6:	xchg   ecx,eax
  4256c7:	cmp    eax,0xb4be21a6
  4256cc:	push   esp
  4256cd:	jbe    0x42567b
  4256cf:	xchg   ebx,eax
  4256d0:	push   es
  4256d1:	xchg   ecx,eax
  4256d2:	ds iret 
  4256d4:	push   ebp
  4256d5:	or     DWORD PTR [ebx+0xb],0x1850fc73
  4256dc:	shr    BYTE PTR [eax-0x11513885],0x68
  4256e3:	in     al,0x7d
  4256e5:	arpl   WORD PTR [edx+ebp*4+0x5e9b721a],cx
  4256ec:	adc    ebx,DWORD PTR [ecx-0x10]
  4256ef:	shl    esi,0x8d
  4256f2:	imul   ebp,DWORD PTR [eax],0x44edfef9
  4256f8:	pop    edi
  4256f9:	outs   dx,BYTE PTR ds:[esi]
  4256fa:	push   ecx
  4256fb:	lods   eax,DWORD PTR fs:[esi]
  4256fd:	hlt    
  4256fe:	adc    DWORD PTR [esi+0x51108df4],0x7e
  425705:	jg     0x425733
  425707:	dec    eax
  425708:	into   
  425709:	(bad)  
  42570a:	into   
  42570b:	sti    
  42570c:	popf   
  42570d:	rol    BYTE PTR [esp+edi*2+0x63],0xb4
  425712:	mov    ch,BYTE PTR [esi+0x7368de19]
  425718:	pop    ebx
  425719:	jg     0x42569d
  42571b:	cmp    eax,0x4eb5b3f
  425720:	aas    
  425721:	aaa    
  425722:	push   ss
  425723:	inc    ebx
  425724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425725:	or     cl,bh
  425727:	mov    ds:0x5fb431cd,al
  42572c:	sub    DWORD PTR [ecx-0x5c5cf181],edi
  425732:	inc    edi
  425733:	jle    0x425718
  425735:	idiv   DWORD PTR [esi-0x2c]
  425738:	test   DWORD PTR [esi-0x30],ecx
  42573b:	lock test ebx,0x76b1a8e2
  425742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425743:	mov    al,0x1d
  425745:	mov    ds:0x3f438364,al
  42574a:	cs repnz sub esi,ebx
  42574e:	cdq    
  42574f:	(bad)  
  425750:	(bad)  [ebx]
  425752:	jle    0x4257d1
  425754:	retf   
  425755:	jp     0x425707
  425757:	ds cmc 
  425759:	in     eax,dx
  42575a:	test   eax,0x85f4411b
  42575f:	sub    DWORD PTR [edi-0x2a],edx
  425762:	push   ds
  425763:	dec    edx
  425764:	loope  0x4257b5
  425766:	ds leave 
  425768:	ins    BYTE PTR es:[edi],dx
  425769:	inc    eax
  42576a:	(bad)  
  42576b:	lods   eax,DWORD PTR ds:[esi]
  42576c:	xor    eax,0xb0e456ad
  425771:	hlt    
  425772:	jge    0x42572b
  425774:	(bad)  
  425775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425776:	dec    esp
  425777:	mov    al,ds:0x4e6e757a
  42577c:	adc    ch,ch
  42577e:	lahf   
  42577f:	cmp    ch,BYTE PTR [ebx]
  425781:	(bad)  
  425782:	aad    0xa1
  425784:	dec    ebp
  425785:	ffree  st(2)
  425787:	pushf  
  425788:	push   esp
  425789:	nop
  42578a:	xchg   ecx,eax
  42578b:	lds    edi,FWORD PTR [ecx*2-0x12a82b53]
  425792:	add    DWORD PTR [edi-0x21],edi
  425795:	clc    
  425796:	ja     0x42571c
  425798:	(bad)  
  425799:	idiv   DWORD PTR [edx-0x3a3bd676]
  42579f:	cmc    
  4257a0:	shl    BYTE PTR [eax+0x2],0xa6
  4257a4:	les    edi,FWORD PTR [ecx]
  4257a6:	dec    esp
  4257a7:	mov    ebx,0x5d3bb6d7
  4257ac:	jbe    0x4257b4
  4257ae:	inc    edi
  4257af:	in     al,0xa8
  4257b1:	mov    ecx,0xc1f27495
  4257b6:	stos   DWORD PTR es:[edi],eax
  4257b7:	lods   eax,DWORD PTR ds:[esi]
  4257b8:	std    
  4257b9:	sub    DWORD PTR [ebx-0x1f80f679],edx
  4257bf:	push   ebx
  4257c0:	add    ch,al
  4257c2:	push   eax
  4257c3:	pop    ebp
  4257c4:	push   cs
  4257c5:	dec    edi
  4257c6:	shr    ecx,0x11
  4257c9:	sbb    eax,0x9b464760
  4257ce:	scas   al,BYTE PTR es:[edi]
  4257cf:	in     eax,0xb8
  4257d1:	cld    
  4257d2:	jno    0x4257b7
  4257d4:	push   ss
  4257d5:	mov    BYTE PTR [edi-0x7c490be],bh
  4257db:	je     0x425830
  4257e1:	mov    DWORD PTR [ebp-0xc],esi
  4257e4:	mov    eax,DWORD PTR [ebp-0xc]
  4257e7:	mov    esi,DWORD PTR [ebp+0xc]
  4257ea:	xor    eax,ecx
  4257ec:	lea    eax,[eax*8+0x1939820]
  4257f3:	mov    eax,DWORD PTR [esi+eax*1]
  4257f6:	mov    DWORD PTR [ebp+0xc],eax
  4257f9:	mov    eax,DWORD PTR [ebp-0x4]
  4257fc:	mov    esi,DWORD PTR [ebp-0x8]
  4257ff:	xor    eax,ecx
  425801:	xor    esi,ecx
  425803:	add    esi,edx
  425805:	add    eax,edx
  425807:	imul   eax,esi
  42580a:	mov    esi,DWORD PTR [ebp+0xc]
  42580d:	cmp    esi,eax
  42580f:	je     0x425830
  425815:	mov    eax,DWORD PTR [ebp-0x4]
  425818:	xor    eax,ecx
  42581a:	mov    ecx,DWORD PTR [ebp+0xc]
  42581d:	add    eax,edx
  42581f:	imul   eax,ecx
  425822:	add    eax,DWORD PTR [ebp+0x8]
  425825:	mov    DWORD PTR [ebp+0xc],eax
  425828:	mov    eax,DWORD PTR [ebp+0xc]
  42582b:	jmp    0x425841
  425830:	mov    eax,DWORD PTR [ebp-0x4]
  425833:	mov    esi,DWORD PTR [ebp-0x8]
  425836:	xor    esi,ecx
  425838:	xor    eax,ecx
  42583a:	add    esi,edx
  42583c:	add    eax,edx
  42583e:	imul   eax,esi
  425841:	pop    edi
  425842:	pop    esi
  425843:	leave  
  425844:	ret    0x8
	...
  425853:	add    ah,cl
  425855:	cmp    al,0xf3
  425857:	dec    ebp
  425858:	add    BYTE PTR [eax],al
  42585a:	add    BYTE PTR [eax],al
  42585c:	add    al,BYTE PTR [eax]
  42585e:	add    BYTE PTR [eax],al
  425860:	add    BYTE PTR ss:[eax],al
  425863:	add    BYTE PTR [eax+0x58],dh
  425866:	add    al,BYTE PTR [eax]
  425868:	jo     0x4258b6
  42586a:	add    al,BYTE PTR [eax]
  42586c:	add    BYTE PTR [eax],al
  42586e:	add    BYTE PTR [eax],al
  425870:	push   edx
  425871:	push   ebx
  425872:	inc    esp
  425873:	push   ebx
  425874:	inc    eax
  425875:	sbb    BYTE PTR [di-0x3ad5],dl
  42587a:	ror    DWORD PTR [ecx-0x78],1
  42587d:	int3   
  42587e:	je     0x4258bb
  425880:	pop    ebp
  425881:	jb     0x425892
  425883:	test   DWORD PTR [ecx],0x47000000
  425889:	cmp    bl,BYTE PTR [ebx+edx*2+0x79]
  42588d:	jae    0x4258af
  42588f:	inc    esp
  425890:	imul   esi,DWORD PTR [edx+0x20],0x5c6e6957
  425897:	inc    esi
  425898:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  4258a0:	outs   dx,BYTE PTR ds:[esi]
  4258a1:	jae    0x42590c
  4258a3:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  4258ab:	or     BYTE PTR [ecx],al
  4258ad:	add    BYTE PTR [eax],al
  4258af:	push   ebx
  4258b0:	mov    eax,ebx
  4258b2:	xchg   ecx,eax
  4258b3:	mov    eax,DWORD PTR [ebp+0x8]
  4258b6:	cmp    eax,0xf89c85a5
  4258bb:	jne    0x425d7c
  4258c1:	mov    eax,DWORD PTR [ebp+0xc]
  4258c4:	cmp    eax,0xf89c85a2
  4258c9:	jne    0x425d7c
  4258cf:	mov    eax,DWORD PTR [ebp+0x24]
  4258d2:	mov    DWORD PTR [ebp-0x4],eax
  4258d5:	mov    eax,DWORD PTR [ebp-0x4]
  4258d8:	mov    eax,DWORD PTR [eax+0x1d8]
  4258de:	mov    eax,DWORD PTR [eax]
  4258e0:	mov    eax,DWORD PTR [eax]
  4258e2:	mov    DWORD PTR [ebp-0x8],eax
  4258e5:	mov    BYTE PTR [ebp-0x18],0x1a
  4258e9:	mov    BYTE PTR [ebp-0x17],0x1f
  4258ed:	mov    BYTE PTR [ebp-0x16],0x18
  4258f1:	mov    BYTE PTR [ebp-0x15],0x4e
  4258f5:	mov    BYTE PTR [ebp-0x14],0x51
  4258f9:	mov    BYTE PTR [ebp-0x13],0x83
  4258fd:	mov    BYTE PTR [ebp-0x20],0xc
  425901:	mov    BYTE PTR [ebp-0x1f],0xe
  425905:	mov    BYTE PTR [ebp-0x1e],0x1c
  425909:	mov    BYTE PTR [ebp-0x1d],0x11
  42590d:	mov    BYTE PTR [ebp-0x1c],0x4e
  425911:	mov    BYTE PTR [ebp-0x1b],0x51
  425915:	mov    BYTE PTR [ebp-0x1a],0x83
  425919:	mov    BYTE PTR [ebp-0x28],0xe
  42591d:	mov    BYTE PTR [ebp-0x27],0x1b
  425921:	mov    BYTE PTR [ebp-0x26],0x17
  425925:	mov    BYTE PTR [ebp-0x25],0xa
  425929:	mov    BYTE PTR [ebp-0x24],0x20
  42592d:	mov    BYTE PTR [ebp-0x23],0x13
  425931:	mov    BYTE PTR [ebp-0x22],0x18
  425935:	mov    BYTE PTR [ebp-0x21],0x83
  425939:	xor    ecx,ecx
  42593b:	lea    eax,[ebp+ecx*1-0x18]
  42593f:	movzx  edx,BYTE PTR [eax]
  425942:	xor    edx,0x7e
  425945:	add    edx,0x3
  425948:	inc    ecx
  425949:	mov    BYTE PTR [eax],dl
  42594b:	cmp    ecx,0x6
  42594e:	jb     0x42593b
  425950:	xor    ecx,ecx
  425952:	lea    eax,[ebp+ecx*1-0x20]
  425956:	movzx  edx,BYTE PTR [eax]
  425959:	xor    edx,0x7e
  42595c:	add    edx,0x3
  42595f:	inc    ecx
  425960:	mov    BYTE PTR [eax],dl
  425962:	cmp    ecx,0x7
  425965:	jb     0x425952
  425967:	xor    ecx,ecx
  425969:	lea    eax,[ebp+ecx*1-0x28]
  42596d:	movzx  edx,BYTE PTR [eax]
  425970:	xor    edx,0x7e
  425973:	add    edx,0x3
  425976:	inc    ecx
  425977:	mov    BYTE PTR [eax],dl
  425979:	cmp    ecx,0x8
  42597c:	jb     0x425969
  42597e:	lea    eax,[ebp-0x2c]
  425981:	mov    DWORD PTR [ebp-0x8],eax
  425984:	mov    ecx,DWORD PTR [ebp-0x8]
  425987:	mov    eax,0x7113fccf
  42598c:	mov    DWORD PTR [ecx],eax
  42598e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425991:	push   esi
  425992:	push   edi
  425993:	mov    esi,0x4e3e
  425998:	mov    ebx,0x3272f5
  42599d:	cmp    ecx,eax
  42599f:	jne    0x425a6a
  4259a5:	lea    eax,[esi+0x39]
  4259a8:	mov    WORD PTR [ebp-0x78],ax
  4259ac:	mov    eax,esi
  4259ae:	mov    WORD PTR [ebp-0x76],ax
  4259b2:	add    eax,0x3f
  4259b5:	mov    WORD PTR [ebp-0x74],ax
  4259b9:	lea    eax,[esi-0x2]
  4259bc:	mov    WORD PTR [ebp-0x72],ax
  4259c0:	add    eax,0x43
  4259c3:	mov    ecx,eax
  4259c5:	lea    eax,[esi-0x9]
  4259c8:	mov    WORD PTR [ebp-0x66],ax
  4259cc:	mov    eax,esi
  4259ce:	mov    WORD PTR [ebp-0x64],ax
  4259d2:	add    eax,0xffffffec
  4259d5:	mov    WORD PTR [ebp-0x62],ax
  4259d9:	mov    eax,0x443
  4259de:	mov    WORD PTR [ebp-0x60],ax
  4259e2:	mov    eax,0x5670
  4259e7:	mov    WORD PTR [ebp-0x5e],ax
  4259eb:	mov    eax,0x6110
  4259f0:	mov    WORD PTR [ebp-0x5c],ax
  4259f4:	lea    eax,[ebp-0xe0]
  4259fa:	push   eax
  4259fb:	mov    eax,DWORD PTR [ebp+0xc]
  4259fe:	mov    edi,0x75108ae
  425a03:	xor    eax,edi
  425a05:	add    eax,ebx
  425a07:	push   eax
  425a08:	mov    WORD PTR [ebp-0x70],cx
  425a0c:	lea    ecx,[esi-0xe]
  425a0f:	mov    edx,ecx
  425a11:	lea    eax,[ebp-0x78]
  425a14:	push   eax
  425a15:	mov    eax,DWORD PTR [ebp-0x4]
  425a18:	mov    eax,DWORD PTR [eax+0x198]
  425a1e:	mov    WORD PTR [ebp-0x6e],dx
  425a22:	mov    edx,0x4f8a
  425a27:	mov    WORD PTR [ebp-0x6c],dx
  425a2b:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425a32:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425a39:	mov    DWORD PTR [ebp-0xe0],0x1
  425a43:	mov    DWORD PTR [ebp-0xdc],0x255
  425a4d:	push   DWORD PTR [eax]
  425a4f:	mov    eax,DWORD PTR [ebp+0x10]
  425a52:	call   eax
  425a54:	mov    DWORD PTR [ebp-0x8],eax
  425a57:	mov    eax,DWORD PTR [ebp-0x8]
  425a5a:	test   eax,eax
  425a5c:	je     0x425a6f
  425a5e:	xor    DWORD PTR ds:0x76586876,0x87687666
  425a68:	jmp    0x425a6f
  425a6a:	mov    edi,0x75108ae
  425a6f:	mov    eax,DWORD PTR [ebp-0x4]
  425a72:	mov    ecx,DWORD PTR [eax+0x18c]
  425a78:	xor    eax,eax
  425a7a:	cmp    DWORD PTR [ecx],eax
  425a7c:	jne    0x425cef
  425a82:	mov    ecx,DWORD PTR [ebp-0x4]
  425a85:	mov    ecx,DWORD PTR [ecx+0x17c]
  425a8b:	mov    DWORD PTR [ecx],eax
  425a8d:	mov    ecx,DWORD PTR [ebp-0x4]
  425a90:	mov    ecx,DWORD PTR [ecx+0x180]
  425a96:	mov    DWORD PTR [ecx],eax
  425a98:	mov    eax,0x4e6d
  425a9d:	mov    WORD PTR [ebp-0x9c],ax
  425aa4:	mov    eax,esi
  425aa6:	mov    WORD PTR [ebp-0x9a],ax
  425aad:	mov    eax,0x4e7d
  425ab2:	mov    WORD PTR [ebp-0x98],ax
  425ab9:	add    eax,0xffffffc0
  425abc:	mov    WORD PTR [ebp-0x96],ax
  425ac3:	mov    eax,0x4f8e
  425ac8:	mov    WORD PTR [ebp-0x94],ax
  425acf:	mov    eax,0x4e32
  425ad4:	mov    WORD PTR [ebp-0x92],ax
  425adb:	add    eax,0x4d
  425ade:	mov    WORD PTR [ebp-0x90],ax
  425ae5:	mov    eax,0x4e30
  425aea:	mov    WORD PTR [ebp-0x8e],ax
  425af1:	mov    eax,esi
  425af3:	mov    WORD PTR [ebp-0x8c],ax
  425afa:	mov    eax,0x4e31
  425aff:	mov    WORD PTR [ebp-0x8a],ax
  425b06:	mov    eax,0x99fd
  425b0b:	mov    WORD PTR [ebp-0x88],ax
  425b12:	mov    eax,0x8d62
  425b17:	mov    WORD PTR [ebp-0x86],ax
  425b1e:	mov    eax,0xd66f
  425b23:	mov    WORD PTR [ebp-0x84],ax
  425b2a:	mov    eax,0xd783
  425b2f:	mov    WORD PTR [ebp-0x82],ax
  425b36:	mov    eax,0x2780
  425b3b:	mov    WORD PTR [ebp-0x80],ax
  425b3f:	mov    eax,0x4780
  425b44:	mov    WORD PTR [ebp-0x7e],ax
  425b48:	mov    eax,0x4e33
  425b4d:	push   0x8
  425b4f:	mov    WORD PTR [ebp-0x7c],ax
  425b53:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425b5a:	mov    DWORD PTR [ebp-0xc],0x83181320
  425b61:	lea    eax,[ebp-0x10]
  425b64:	pop    ecx
  425b65:	mov    dl,BYTE PTR [eax]
  425b67:	xor    dl,0x7e
  425b6a:	add    dl,0x3
  425b6d:	mov    BYTE PTR [eax],dl
  425b6f:	inc    eax
  425b70:	dec    ecx
  425b71:	jne    0x425b65
  425b73:	lea    eax,[ebp-0x10]
  425b76:	mov    DWORD PTR [ebp-0xdc],eax
  425b7c:	lea    eax,[ebp-0xe0]
  425b82:	push   eax
  425b83:	mov    eax,DWORD PTR [ebp+0xc]
  425b86:	xor    eax,edi
  425b88:	add    eax,ebx
  425b8a:	push   eax
  425b8b:	mov    eax,DWORD PTR [ebp-0x4]
  425b8e:	add    eax,0x66
  425b91:	push   eax
  425b92:	mov    eax,DWORD PTR [ebp-0x4]
  425b95:	mov    eax,DWORD PTR [eax+0x198]
  425b9b:	mov    DWORD PTR [ebp-0xe0],0x1
  425ba5:	push   DWORD PTR [eax]
  425ba7:	mov    eax,DWORD PTR [ebp+0x10]
  425baa:	call   eax
  425bac:	mov    ecx,DWORD PTR [ebp+0x8]
  425baf:	xor    ecx,edi
  425bb1:	add    ecx,ebx
  425bb3:	mov    DWORD PTR [ebp-0x8],eax
  425bb6:	cmp    eax,ecx
  425bb8:	jne    0x425bd3
  425bba:	mov    eax,ds:0x33730bcc
  425bbf:	or     eax,0x22150bcf
  425bc4:	mov    ds:0x33730bcc,eax
  425bc9:	add    eax,0x3372e92f
  425bce:	mov    ds:0x33730bcc,eax
  425bd3:	mov    ecx,0x4e66
  425bd8:	mov    eax,ecx
  425bda:	mov    WORD PTR [ebp-0x40],ax
  425bde:	add    eax,0x5
  425be1:	mov    edx,eax
  425be3:	mov    WORD PTR [ebp-0x3e],dx
  425be7:	mov    edx,0x4f93
  425bec:	mov    WORD PTR [ebp-0x3c],dx
  425bf0:	add    edx,0xfffffff8
  425bf3:	mov    WORD PTR [ebp-0x3a],dx
  425bf7:	mov    edx,0x4f89
  425bfc:	mov    WORD PTR [ebp-0x38],dx
  425c00:	add    edx,0x3
  425c03:	mov    WORD PTR [ebp-0x36],dx
  425c07:	mov    edx,0x4f87
  425c0c:	mov    WORD PTR [ebp-0x34],dx
  425c10:	mov    WORD PTR [ebp-0x32],cx
  425c14:	mov    ecx,esi
  425c16:	mov    WORD PTR [ebp-0x30],cx
  425c1a:	lea    ecx,[edx-0x1]
  425c1d:	mov    edx,ecx
  425c1f:	mov    WORD PTR [ebp-0x54],dx
  425c23:	mov    edx,eax
  425c25:	mov    WORD PTR [ebp-0x52],dx
  425c29:	mov    edx,0x4e73
  425c2e:	mov    WORD PTR [ebp-0x50],dx
  425c32:	mov    WORD PTR [ebp-0x4e],ax
  425c36:	lea    eax,[edx-0xa]
  425c39:	mov    WORD PTR [ebp-0x4c],ax
  425c3d:	add    eax,0x3
  425c40:	mov    WORD PTR [ebp-0x4a],ax
  425c44:	lea    eax,[edx-0xc]
  425c47:	mov    WORD PTR [ebp-0x48],ax
  425c4b:	mov    WORD PTR [ebp-0x46],cx
  425c4f:	mov    WORD PTR [ebp-0x44],si
  425c53:	mov    eax,DWORD PTR [ebp+0x8]
  425c56:	movzx  ecx,WORD PTR [ebp-0x54]
  425c5a:	xor    eax,edi
  425c5c:	add    eax,ebx
  425c5e:	xor    eax,ecx
  425c60:	mov    WORD PTR [ebp-0x54],ax
  425c64:	mov    eax,DWORD PTR [ebp+0x8]
  425c67:	movzx  ecx,WORD PTR [ebp-0x40]
  425c6b:	xor    eax,edi
  425c6d:	add    eax,ebx
  425c6f:	xor    eax,ecx
  425c71:	mov    WORD PTR [ebp-0x40],ax
  425c75:	xor    eax,eax
  425c77:	mov    WORD PTR [ebp-0xf4],ax
  425c7e:	mov    WORD PTR [ebp-0x108],ax
  425c85:	mov    edi,DWORD PTR [ebp+0x24]
  425c88:	lea    eax,[ebp-0xf4]
  425c8e:	lea    edx,[ebp-0x54]
  425c91:	mov    DWORD PTR [ebp-0xe0],0x2
  425c9b:	mov    DWORD PTR [ebp-0xdc],eax
  425ca1:	call   0x4286d9
  425ca6:	mov    DWORD PTR [ebp-0xd8],eax
  425cac:	lea    eax,[ebp-0xe0]
  425cb2:	push   eax
  425cb3:	mov    eax,DWORD PTR [ebp+0xc]
  425cb6:	xor    eax,0x75108ae
  425cbb:	add    eax,ebx
  425cbd:	push   eax
  425cbe:	lea    eax,[ebp-0x9c]
  425cc4:	push   eax
  425cc5:	push   DWORD PTR [ebp-0x8]
  425cc8:	mov    eax,DWORD PTR [ebp+0x10]
  425ccb:	call   eax
  425ccd:	mov    edi,DWORD PTR [ebp+0x24]
  425cd0:	lea    eax,[ebp-0x108]
  425cd6:	lea    edx,[ebp-0x40]
  425cd9:	mov    DWORD PTR [ebp-0xdc],eax
  425cdf:	call   0x4286d9
  425ce4:	mov    DWORD PTR [ebp-0xd8],eax
  425cea:	mov    edi,0x75108ae
  425cef:	mov    eax,DWORD PTR [ebp+0x14]
  425cf2:	push   DWORD PTR [ebp-0x4]
  425cf5:	push   DWORD PTR [ebp+0x20]
  425cf8:	push   DWORD PTR [ebp+0x1c]
  425cfb:	push   DWORD PTR [ebp+0x18]
  425cfe:	push   DWORD PTR [ebp+0x10]
  425d01:	push   DWORD PTR [ebp+0x8]
  425d04:	push   DWORD PTR [ebp+0xc]
  425d07:	call   0x426f7a
  425d0c:	test   eax,eax
  425d0e:	je     0x425d52
  425d10:	add    DWORD PTR [ebp-0x4],eax
  425d13:	push   DWORD PTR [ebp-0x4]
  425d16:	lea    esi,[ebp+0x4]
  425d19:	call   0x42616a
  425d1e:	mov    eax,DWORD PTR [ebp-0x4]
  425d21:	mov    eax,DWORD PTR [eax+0x1c8]
  425d27:	mov    eax,DWORD PTR [eax]
  425d29:	xor    eax,edi
  425d2b:	add    eax,ebx
  425d2d:	mov    eax,DWORD PTR [ebp-0x4]
  425d30:	jne    0x425d48
  425d32:	mov    ecx,DWORD PTR [ebp-0x4]
  425d35:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425d3b:	push   DWORD PTR [ecx]
  425d3d:	mov    eax,DWORD PTR [eax+0x1e0]
  425d43:	call   DWORD PTR [eax+0x28]
  425d46:	jmp    0x425d52
  425d48:	mov    eax,DWORD PTR [eax+0x17c]
  425d4e:	mov    eax,DWORD PTR [eax]
  425d50:	add    DWORD PTR [esi],eax
  425d52:	mov    eax,DWORD PTR [ebp-0x4]
  425d55:	mov    eax,DWORD PTR [eax+0x1dc]
  425d5b:	dec    DWORD PTR [eax]
  425d5d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d60:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425d66:	mov    eax,DWORD PTR [eax]
  425d68:	lea    eax,[ecx+eax*4]
  425d6b:	mov    ecx,DWORD PTR [ebp-0x4]
  425d6e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425d74:	mov    eax,DWORD PTR [eax]
  425d76:	mov    ecx,DWORD PTR [ecx]
  425d78:	add    DWORD PTR [eax],ecx
  425d7a:	pop    edi
  425d7b:	pop    esi
  425d7c:	pop    ebx
  425d7d:	leave  
  425d7e:	ret    0x20
  425d81:	push   edi
  425d82:	push   esi
  425d83:	push   ebx
  425d84:	push   ebp
  425d85:	mov    ebp,esp
  425d87:	mov    eax,DWORD PTR [ebp+0x24]
  425d8a:	add    DWORD PTR [ebp+0x28],eax
  425d8d:	push   eax
  425d8e:	cld    
  425d8f:	mov    esi,DWORD PTR [ebp+0x18]
  425d92:	add    DWORD PTR [ebp+0x1c],esi
  425d95:	push   esi
  425d96:	mov    esi,DWORD PTR [ebp+0x14]
  425d99:	lods   eax,DWORD PTR ds:[esi]
  425d9a:	xchg   edx,eax
  425d9b:	push   edx
  425d9c:	mov    cl,BYTE PTR [esi-0x2]
  425d9f:	or     eax,0xffffffff
  425da2:	shl    eax,cl
  425da4:	not    eax
  425da6:	push   eax
  425da7:	mov    cl,dh
  425da9:	or     eax,0xffffffff
  425dac:	shl    eax,cl
  425dae:	not    eax
  425db0:	push   eax
  425db1:	add    cl,dl
  425db3:	mov    edi,esi
  425db5:	sub    esp,0xc
  425db8:	sub    eax,eax
  425dba:	inc    eax
  425dbb:	push   eax
  425dbc:	push   eax
  425dbd:	push   eax
  425dbe:	push   eax
  425dbf:	push   eax
  425dc0:	push   edi
  425dc1:	sub    esi,esi
  425dc3:	push   esi
  425dc4:	or     ebx,0xffffffff
  425dc7:	mov    eax,0x300
  425dcc:	shl    eax,cl
  425dce:	lea    ecx,[eax+0x736]
  425dd4:	mov    eax,0x4000400
  425dd9:	shr    ecx,1
  425ddb:	rep stos DWORD PTR es:[edi],eax
  425ddd:	push   0x5
  425ddf:	pop    ecx
  425de0:	call   0x4260cb
  425de5:	loop   0x425de0
  425de7:	lea    esi,[esi]
  425de9:	lea    edi,[edi]
  425deb:	mov    edi,DWORD PTR [ebp-0x4]
  425dee:	mov    eax,DWORD PTR [ebp-0x10]
  425df1:	sub    edi,DWORD PTR [ebp+0x24]
  425df4:	and    eax,edi
  425df6:	mov    DWORD PTR [ebp-0x18],eax
  425df9:	mov    al,0x0
  425dfb:	call   0x4260e3
  425e00:	jne    0x425e9b
  425e06:	mov    cl,BYTE PTR [ebp-0xc]
  425e09:	and    edi,DWORD PTR [ebp-0x14]
  425e0c:	shl    edi,cl
  425e0e:	sub    cl,0x8
  425e11:	neg    cl
  425e13:	shr    esi,cl
  425e15:	pop    eax
  425e16:	add    edi,esi
  425e18:	pop    esi
  425e19:	lea    edi,[edi+edi*2]
  425e1c:	shl    edi,0x8
  425e1f:	cmp    al,0x7
  425e21:	pop    edx
  425e22:	lea    ecx,[esi+edi*2+0xe6c]
  425e29:	push   ecx
  425e2a:	push   esi
  425e2b:	mov    esi,0x100
  425e30:	push   eax
  425e31:	mov    al,0x1
  425e33:	jb     0x425e69
  425e35:	mov    edi,DWORD PTR [ebp-0x4]
  425e38:	sub    edi,DWORD PTR [ebp-0x24]
  425e3b:	movzx  edi,BYTE PTR [edi]
  425e3e:	mov    ebp,DWORD PTR [ebp-0x34]
  425e41:	shl    edi,1
  425e43:	mov    ecx,esi
  425e45:	and    esi,edi
  425e47:	add    ecx,esi
  425e49:	lea    ebp,[ebp+ecx*2+0x0]
  425e4d:	call   0x426102
  425e52:	mov    ecx,eax
  425e54:	shr    esi,0x8
  425e57:	and    ecx,0x1
  425e5a:	cmp    esi,ecx
  425e5c:	mov    esi,0x100
  425e61:	jne    0x425e71
  425e63:	cmp    eax,esi
  425e65:	jb     0x425e3e
  425e67:	jmp    0x425e7d
  425e69:	mov    ebp,DWORD PTR [ebp-0x34]
  425e6c:	call   0x426102
  425e71:	inc    eax
  425e72:	inc    esi
  425e73:	sub    eax,0x1
  425e76:	sub    esi,0x1
  425e79:	cmp    eax,esi
  425e7b:	jb     0x425e69
  425e7d:	pop    edx
  425e7e:	inc    edx
  425e7f:	cmp    edx,0x5
  425e82:	dec    edx
  425e83:	mov    ecx,edx
  425e85:	jb     0x425e96
  425e87:	inc    edx
  425e88:	cmp    edx,0xb
  425e8b:	dec    edx
  425e8c:	mov    cl,0x4
  425e8e:	dec    cl
  425e90:	jb     0x425e96
  425e92:	mov    cl,0x7
  425e94:	dec    cl
  425e96:	sub    edx,ecx
  425e98:	push   edx
  425e99:	jmp    0x425eea
  425e9b:	mov    al,0xc1
  425e9d:	dec    al
  425e9f:	call   0x4260f3
  425ea4:	jne    0x425eba
  425ea6:	pop    eax
  425ea7:	pop    edi
  425ea8:	pop    edx
  425ea9:	pop    ecx
  425eaa:	pop    edx
  425eab:	pop    ecx
  425eac:	push   DWORD PTR [esp]
  425eaf:	push   ecx
  425eb0:	push   edx
  425eb1:	mov    edx,0x664
  425eb6:	mov    cl,0x0
  425eb8:	jmp    0x425f2d
  425eba:	mov    al,0xcd
  425ebc:	dec    al
  425ebe:	call   0x4260f3
  425ec3:	jne    0x425ef3
  425ec5:	mov    al,0xf1
  425ec7:	dec    al
  425ec9:	call   0x4260e3
  425ece:	jne    0x425f23
  425ed0:	pop    eax
  425ed1:	cmp    al,0x7
  425ed3:	mov    al,0x9
  425ed5:	jb     0x425ed9
  425ed7:	mov    al,0xb
  425ed9:	push   eax
  425eda:	mov    esi,DWORD PTR [ebp-0x4]
  425edd:	sub    esi,DWORD PTR [ebp-0x24]
  425ee0:	cmp    esi,DWORD PTR [ebp+0x24]
  425ee3:	jb     0x4260ba
  425ee9:	lods   al,BYTE PTR ds:[esi]
  425eea:	mov    edi,DWORD PTR [ebp-0x4]
  425eed:	stos   BYTE PTR es:[edi],al
  425eee:	jmp    0x426081
  425ef3:	mov    al,0xd8
  425ef5:	call   0x4260f3
  425efa:	mov    esi,DWORD PTR [ebp-0x28]
  425efd:	je     0x425f1a
  425eff:	mov    al,0xe4
  425f01:	call   0x4260f3
  425f06:	mov    esi,DWORD PTR [ebp-0x2c]
  425f09:	je     0x425f14
  425f0b:	mov    esi,DWORD PTR [ebp-0x30]
  425f0e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f11:	mov    DWORD PTR [ebp-0x30],ecx
  425f14:	mov    ecx,DWORD PTR [ebp-0x28]
  425f17:	mov    DWORD PTR [ebp-0x2c],ecx
  425f1a:	mov    ecx,DWORD PTR [ebp-0x24]
  425f1d:	mov    DWORD PTR [ebp-0x28],ecx
  425f20:	mov    DWORD PTR [ebp-0x24],esi
  425f23:	pop    eax
  425f24:	pop    edi
  425f25:	pop    ecx
  425f26:	mov    edx,0xa68
  425f2b:	mov    cl,0x8
  425f2d:	add    edx,edi
  425f2f:	push   edx
  425f30:	push   edi
  425f31:	cmp    al,0x7
  425f33:	mov    al,cl
  425f35:	jb     0x425f39
  425f37:	add    al,0x3
  425f39:	push   eax
  425f3a:	mov    ebp,DWORD PTR [ebp-0x34]
  425f3d:	call   0x426100
  425f42:	jne    0x425f58
  425f44:	mov    eax,DWORD PTR [ebp-0x18]
  425f47:	mov    edi,DWORD PTR [ebp-0x34]
  425f4a:	shl    eax,0x3
  425f4d:	sub    ecx,ecx
  425f4f:	push   0x8
  425f51:	pop    esi
  425f52:	lea    edi,[edi+eax*2+0x4]
  425f56:	jmp    0x425f8d
  425f58:	mov    ebp,DWORD PTR [ebp-0x34]
  425f5b:	add    ebp,0x2
  425f5e:	call   0x426100
  425f63:	jne    0x425f7d
  425f65:	mov    eax,DWORD PTR [ebp-0x18]
  425f68:	mov    edi,DWORD PTR [ebp-0x34]
  425f6b:	shl    eax,0x3
  425f6e:	push   0x8
  425f70:	pop    ecx
  425f71:	push   0x8
  425f73:	pop    esi
  425f74:	lea    edi,[edi+eax*2+0x104]
  425f7b:	jmp    0x425f8d
  425f7d:	mov    edi,0x204
  425f82:	add    edi,DWORD PTR [ebp-0x34]
  425f85:	push   0x10
  425f87:	pop    ecx
  425f88:	mov    esi,0x100
  425f8d:	mov    DWORD PTR [ebp-0x1c],ecx
  425f90:	sub    eax,eax
  425f92:	inc    eax
  425f93:	mov    ebp,edi
  425f95:	call   0x426102
  425f9a:	mov    ecx,eax
  425f9c:	sub    ecx,esi
  425f9e:	jb     0x425f93
  425fa0:	add    DWORD PTR [ebp-0x1c],ecx
  425fa3:	cmp    DWORD PTR [ebp-0x3c],0x4
  425fa7:	jae    0x42605d
  425fad:	add    DWORD PTR [ebp-0x3c],0x7
  425fb1:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fb4:	cmp    ecx,0x4
  425fb7:	jb     0x425fbc
  425fb9:	push   0x3
  425fbb:	pop    ecx
  425fbc:	mov    edi,DWORD PTR [ebp-0x38]
  425fbf:	shl    ecx,0x6
  425fc2:	sub    eax,eax
  425fc4:	inc    eax
  425fc5:	push   0x40
  425fc7:	pop    esi
  425fc8:	lea    edi,[edi+ecx*2+0x360]
  425fcf:	mov    ebp,edi
  425fd1:	call   0x426102
  425fd6:	mov    ecx,eax
  425fd8:	sub    ecx,esi
  425fda:	jb     0x425fcf
  425fdc:	mov    DWORD PTR [ebp-0x18],ecx
  425fdf:	mov    DWORD PTR [ebp-0x24],ecx
  425fe2:	cmp    ecx,0x4
  425fe5:	jb     0x42605a
  425fe7:	mov    esi,ecx
  425fe9:	and    DWORD PTR [ebp-0x24],0x1
  425fed:	shr    esi,1
  425fef:	or     DWORD PTR [ebp-0x24],0x2
  425ff3:	dec    esi
  425ff4:	cmp    ecx,0xe
  425ff7:	jae    0x426012
  425ff9:	mov    eax,0x2af
  425ffe:	sub    eax,ecx
  426000:	mov    ecx,esi
  426002:	shl    BYTE PTR [ebp-0x24],cl
  426005:	add    eax,DWORD PTR [ebp-0x24]
  426008:	shl    eax,1
  42600a:	add    eax,DWORD PTR [ebp-0x38]
  42600d:	mov    DWORD PTR [ebp-0x34],eax
  426010:	jmp    0x42603f
  426012:	sub    esi,0x4
  426015:	call   0x4260bf
  42601a:	shr    ebx,1
  42601c:	shl    DWORD PTR [ebp-0x24],1
  42601f:	cmp    DWORD PTR [ebp-0x20],ebx
  426022:	jb     0x42602a
  426024:	inc    DWORD PTR [ebp-0x24]
  426027:	sub    DWORD PTR [ebp-0x20],ebx
  42602a:	dec    esi
  42602b:	jne    0x426015
  42602d:	mov    eax,0x644
  426032:	add    eax,DWORD PTR [ebp-0x38]
  426035:	mov    DWORD PTR [ebp-0x34],eax
  426038:	shl    DWORD PTR [ebp-0x24],0x4
  42603c:	push   0x4
  42603e:	pop    esi
  42603f:	sub    edi,edi
  426041:	inc    edi
  426042:	mov    eax,edi
  426044:	mov    ebp,DWORD PTR [ebp-0x34]
  426047:	call   0x426102
  42604c:	test   al,0x1
  42604e:	je     0x426053
  426050:	or     DWORD PTR [ebp-0x24],edi
  426053:	shl    edi,1
  426055:	dec    esi
  426056:	jne    0x426044
  426058:	jmp    0x42605a
  42605a:	inc    DWORD PTR [ebp-0x24]
  42605d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426060:	add    ecx,0x2
  426063:	mov    edi,DWORD PTR [ebp-0x4]
  426066:	mov    eax,edi
  426068:	sub    eax,DWORD PTR [ebp+0x24]
  42606b:	cmp    DWORD PTR [ebp-0x24],eax
  42606e:	ja     0x4260ba
  426070:	mov    esi,edi
  426072:	sub    esi,DWORD PTR [ebp-0x24]
  426075:	mov    edx,DWORD PTR [ebp+0x28]
  426078:	lods   al,BYTE PTR ds:[esi]
  426079:	stos   BYTE PTR es:[edi],al
  42607a:	cmp    edi,edx
  42607c:	jae    0x426081
  42607e:	dec    ecx
  42607f:	jne    0x426078
  426081:	mov    DWORD PTR [ebp-0x4],edi
  426084:	movzx  esi,al
  426087:	cmp    edi,DWORD PTR [ebp+0x28]
  42608a:	jb     0x425deb
  426090:	call   0x4260bf
  426095:	sub    eax,eax
  426097:	lea    ebp,[esp+0x3c]
  42609b:	mov    edx,DWORD PTR [ebp+0x20]
  42609e:	mov    esi,DWORD PTR [ebp-0x8]
  4260a1:	sub    esi,DWORD PTR [ebp+0x18]
  4260a4:	mov    DWORD PTR [edx],esi
  4260a6:	mov    dh,0xdd
  4260a8:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  4260ae:	sbb    BYTE PTR [esi+0x1f5af70],ch
  4260b4:	add    eax,0x188f893
  4260b9:	jmp    0x37cbebf2
  4260be:	jmp    0x42604e
  4260c0:	ja     0x42604a
  4260c2:	mov    BYTE PTR [eax-0x6873ae74],cl
  4260c8:	(bad)  
  4260c9:	pop    ss
  4260ca:	test   al,0xe1
  4260cc:	mov    dh,0x5d
  4260ce:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  4260d3:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  4260d9:	test   al,0x3a
  4260db:	scas   al,BYTE PTR es:[edi]
  4260dc:	popf   
  4260dd:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  4260e3:	mov    dh,0xbd
  4260e5:	fwait
  4260e6:	les    esp,FWORD PTR [edx-0x75]
  4260e9:	(bad)  
  4260ea:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  4260f2:	mov    al,ds:0x948b62c4
  4260f7:	popf   
  4260f8:	fwait
  4260f9:	mov    dh,0x3d
  4260fb:	stos   DWORD PTR es:[edi],eax
  4260fc:	mov    esi,0x34889d39
  426101:	mov    edi,DWORD PTR [esi-0x717762c7]
  426107:	ja     0x426091
  426109:	mov    BYTE PTR [eax-0x4907aa74],cl
  42610f:	mov    ecx,0x198f6818
  426114:	sbb    BYTE PTR [eax],cl
  426116:	test   al,0x74
  426118:	mov    ecx,0xfa55f918
  42611d:	mov    dl,0xcc
  42611f:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  426125:	test   al,0x88
  426127:	push   esp
  426128:	and    al,0x20
  42612a:	mov    ecx,ebx
  42612c:	movzx  edx,WORD PTR [ebp+0x0]
  426130:	shr    ecx,0xb
  426133:	imul   ecx,edx
  426136:	cmp    DWORD PTR [esp+0x20],ecx
  42613a:	jae    0x426153
  42613c:	mov    ebx,ecx
  42613e:	mov    ecx,0x800
  426143:	sub    ecx,edx
  426145:	shr    ecx,0x5
  426148:	add    WORD PTR [ebp+0x0],cx
  42614c:	add    eax,eax
  42614e:	lea    ebp,[esp+0x40]
  426152:	ret    
  426153:	shr    edx,0x5
  426156:	sub    DWORD PTR [esp+0x20],ecx
  42615a:	sub    ebx,ecx
  42615c:	sub    WORD PTR [ebp+0x0],dx
  426160:	add    eax,eax
  426162:	add    eax,0x1
  426165:	lea    ebp,[esp+0x40]
  426169:	ret    
  42616a:	push   ebp
  42616b:	mov    ebp,esp
  42616d:	sub    esp,0x12c
  426173:	push   ebx
  426174:	push   esi
  426175:	push   edi
  426176:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42617d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426184:	mov    eax,DWORD PTR [ebp+0x8]
  426187:	mov    DWORD PTR [ebp+0x8],eax
  42618a:	mov    ecx,DWORD PTR [ebp-0x10]
  42618d:	mov    ebx,0x75108ae
  426192:	xor    ecx,ebx
  426194:	mov    eax,0x3272f5
  426199:	add    ecx,eax
  42619b:	mov    DWORD PTR [ebp-0x24],ecx
  42619e:	mov    ecx,DWORD PTR [ebp-0x10]
  4261a1:	xor    ecx,ebx
  4261a3:	add    ecx,eax
  4261a5:	mov    DWORD PTR [ebp-0x40],ecx
  4261a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4261ab:	xor    ecx,ebx
  4261ad:	add    ecx,eax
  4261af:	mov    DWORD PTR [ebp-0x3c],ecx
  4261b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4261b5:	xor    ecx,ebx
  4261b7:	add    ecx,eax
  4261b9:	mov    DWORD PTR [ebp-0xd8],ecx
  4261bf:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  4261c6:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  4261cd:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  4261d4:	push   0x25
  4261d6:	pop    ecx
  4261d7:	mov    DWORD PTR [ebp-0x30],ecx
  4261da:	mov    DWORD PTR [ebp-0x30],ecx
  4261dd:	push   0x65
  4261df:	pop    ecx
  4261e0:	mov    DWORD PTR [ebp-0x30],ecx
  4261e3:	mov    DWORD PTR [ebp-0x30],ecx
  4261e6:	mov    DWORD PTR [ebp-0x30],0x4d
  4261ed:	mov    DWORD PTR [ebp-0x30],0x43
  4261f4:	mov    ecx,DWORD PTR [ebp-0x10]
  4261f7:	xor    ecx,ebx
  4261f9:	add    ecx,eax
  4261fb:	mov    DWORD PTR [ebp-0x30],ecx
  4261fe:	mov    ecx,DWORD PTR [ebp-0x10]
  426201:	xor    ecx,ebx
  426203:	add    ecx,eax
  426205:	mov    DWORD PTR [ebp-0x30],ecx
  426208:	mov    DWORD PTR [ebp-0x28],0x258
  42620f:	mov    DWORD PTR [ebp-0x34],0x36
  426216:	mov    DWORD PTR [ebp-0x14],0x7a
  42621d:	lea    edi,[ebp-0x10c]
  426223:	lea    esi,[ebp-0x12c]
  426229:	call   0x426ee9
  42622e:	dec    DWORD PTR [ebp-0x14]
  426231:	jne    0x42621d
  426233:	dec    DWORD PTR [ebp-0x34]
  426236:	jne    0x426216
  426238:	dec    DWORD PTR [ebp-0x28]
  42623b:	jne    0x42620f
  42623d:	mov    DWORD PTR [ebp-0x28],0x400e
  426244:	mov    eax,DWORD PTR [ebp-0x10]
  426247:	xor    eax,ebx
  426249:	mov    esi,0x3272f5
  42624e:	add    eax,esi
  426250:	mov    DWORD PTR [ebp-0x1c],eax
  426253:	mov    eax,DWORD PTR [ebp-0x10]
  426256:	and    DWORD PTR [ebp-0x94],0x0
  42625d:	xor    eax,ebx
  42625f:	add    eax,esi
  426261:	mov    DWORD PTR [ebp-0x38],eax
  426264:	mov    eax,fs:0x18
  42626a:	mov    DWORD PTR [ebp-0x94],eax
  426270:	mov    eax,DWORD PTR [eax+0x30]
  426273:	mov    DWORD PTR [ebp-0xcc],eax
  426279:	mov    eax,DWORD PTR [eax+0xc]
  42627c:	mov    DWORD PTR [ebp-0xc0],eax
  426282:	mov    eax,DWORD PTR [ebp+0x8]
  426285:	lea    ecx,[ebp-0x94]
  42628b:	mov    DWORD PTR [eax+0x1a0],ecx
  426291:	mov    eax,DWORD PTR [ebp+0x8]
  426294:	lea    ecx,[ebp-0xcc]
  42629a:	mov    DWORD PTR [eax+0x1a4],ecx
  4262a0:	mov    eax,DWORD PTR [ebp+0x8]
  4262a3:	push   DWORD PTR [ebp+0x8]
  4262a6:	lea    ecx,[ebp-0xc0]
  4262ac:	mov    DWORD PTR [eax+0x1a8],ecx
  4262b2:	call   0x4286aa
  4262b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4262ba:	xor    ecx,ebx
  4262bc:	add    ecx,esi
  4262be:	cmp    ecx,eax
  4262c0:	je     0x426643
  4262c6:	mov    eax,DWORD PTR [ebp+0x8]
  4262c9:	mov    eax,DWORD PTR [eax+0x194]
  4262cf:	mov    ecx,DWORD PTR [eax]
  4262d1:	mov    eax,DWORD PTR [ebp+0x8]
  4262d4:	mov    eax,DWORD PTR [eax+0x194]
  4262da:	mov    eax,DWORD PTR [eax]
  4262dc:	add    eax,DWORD PTR [ecx+0x3c]
  4262df:	mov    ecx,DWORD PTR [ebp+0x8]
  4262e2:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4262e8:	lea    edx,[ebp-0xec]
  4262ee:	push   edx
  4262ef:	mov    edx,DWORD PTR [ebp+0x8]
  4262f2:	mov    edx,DWORD PTR [edx+0x18c]
  4262f8:	mov    edx,DWORD PTR [edx]
  4262fa:	add    edx,DWORD PTR [eax+0x88]
  426300:	push   0x4
  426302:	push   DWORD PTR [eax+0x8c]
  426308:	push   edx
  426309:	call   DWORD PTR [ecx+0x1c]
  42630c:	push   DWORD PTR [ebp+0x8]
  42630f:	xor    eax,eax
  426311:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  42631b:	mov    DWORD PTR [ebp-0xa4],0x12371120
  426325:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  42632f:	mov    BYTE PTR [ebp-0x9c],0x83
  426336:	lea    edi,[ebp-0x9b]
  42633c:	stos   DWORD PTR es:[edi],eax
  42633d:	stos   WORD PTR es:[edi],ax
  42633f:	stos   BYTE PTR es:[edi],al
  426340:	xor    eax,eax
  426342:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  42634c:	mov    DWORD PTR [ebp-0xb8],0x12371120
  426356:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426360:	mov    BYTE PTR [ebp-0xb0],0x83
  426367:	lea    edi,[ebp-0xaf]
  42636d:	stos   DWORD PTR es:[edi],eax
  42636e:	stos   WORD PTR es:[edi],ax
  426370:	stos   BYTE PTR es:[edi],al
  426371:	mov    edi,DWORD PTR [ebp+0x8]
  426374:	mov    eax,DWORD PTR [ebp+0x8]
  426377:	mov    edx,DWORD PTR [eax+0x1b8]
  42637d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426384:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42638b:	mov    WORD PTR [ebp-0x60],0x8340
  426391:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  42639b:	mov    DWORD PTR [ebp-0x8c],0x17401120
  4263a5:	mov    DWORD PTR [ebp-0x88],0x35201b13
  4263af:	mov    DWORD PTR [ebp-0x84],0x111c140c
  4263b9:	mov    DWORD PTR [ebp-0x80],0x83401e18
  4263c0:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  4263c7:	mov    DWORD PTR [ebp-0x78],0x17401120
  4263ce:	mov    DWORD PTR [ebp-0x74],0x35201b13
  4263d5:	mov    DWORD PTR [ebp-0x70],0x111c140c
  4263dc:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  4263e3:	call   0x4286d9
  4263e8:	push   eax
  4263e9:	mov    eax,DWORD PTR [ebp+0x8]
  4263ec:	mov    eax,DWORD PTR [eax+0x1a8]
  4263f2:	push   DWORD PTR [eax]
  4263f4:	call   0x42837a
  4263f9:	test   eax,eax
  4263fb:	jne    0x42644d
  4263fd:	mov    eax,DWORD PTR [ebp+0x8]
  426400:	mov    eax,DWORD PTR [eax+0x1e0]
  426406:	mov    edi,DWORD PTR [ebp+0x8]
  426409:	add    eax,0x4
  42640c:	mov    DWORD PTR [ebp-0x20],eax
  42640f:	mov    eax,DWORD PTR [ebp+0x8]
  426412:	mov    edx,DWORD PTR [eax+0x1b8]
  426418:	call   0x4286d9
  42641d:	push   eax
  42641e:	mov    eax,DWORD PTR [ebp-0x20]
  426421:	call   DWORD PTR [eax]
  426423:	test   eax,eax
  426425:	jne    0x42644d
  426427:	mov    eax,DWORD PTR [ebp+0x8]
  42642a:	mov    eax,DWORD PTR [eax+0x1e0]
  426430:	mov    edi,DWORD PTR [ebp+0x8]
  426433:	add    eax,0x10
  426436:	mov    DWORD PTR [ebp-0x20],eax
  426439:	mov    eax,DWORD PTR [ebp+0x8]
  42643c:	mov    edx,DWORD PTR [eax+0x1b8]
  426442:	call   0x4286d9
  426447:	push   eax
  426448:	mov    eax,DWORD PTR [ebp-0x20]
  42644b:	call   DWORD PTR [eax]
  42644d:	mov    eax,DWORD PTR [ebp-0x10]
  426450:	mov    ecx,DWORD PTR [ebp-0x28]
  426453:	xor    eax,ebx
  426455:	add    eax,esi
  426457:	cmp    eax,ecx
  426459:	je     0x42661c
  42645f:	mov    eax,DWORD PTR [ebp-0x18]
  426462:	xor    eax,ebx
  426464:	mov    ecx,0xffcd8d0b
  426469:	sub    ecx,eax
  42646b:	add    ecx,DWORD PTR [ebp-0x28]
  42646e:	mov    eax,DWORD PTR [ebp-0x1c]
  426471:	cmp    eax,ecx
  426473:	ja     0x42661c
  426479:	mov    DWORD PTR [ebp-0x34],0x0
  426480:	push   DWORD PTR [ebp+0x8]
  426483:	mov    edi,DWORD PTR [ebp+0x8]
  426486:	mov    eax,DWORD PTR [ebp+0x8]
  426489:	mov    edx,DWORD PTR [eax+0x1b4]
  42648f:	call   0x4286d9
  426494:	push   eax
  426495:	mov    eax,DWORD PTR [ebp+0x8]
  426498:	mov    eax,DWORD PTR [eax+0x1a8]
  42649e:	push   DWORD PTR [eax]
  4264a0:	call   0x42837a
  4264a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4264a8:	mov    ecx,DWORD PTR [ecx+0x19c]
  4264ae:	mov    DWORD PTR [ecx],eax
  4264b0:	mov    eax,DWORD PTR [ebp+0x8]
  4264b3:	mov    edi,DWORD PTR [eax+0x1e0]
  4264b9:	mov    esi,DWORD PTR [ebp+0x8]
  4264bc:	xor    eax,eax
  4264be:	lea    edx,[ebp-0x7c]
  4264c1:	call   0x42870f
  4264c6:	push   eax
  4264c7:	mov    eax,DWORD PTR [ebp+0x8]
  4264ca:	mov    eax,DWORD PTR [eax+0x19c]
  4264d0:	push   DWORD PTR [eax]
  4264d2:	call   DWORD PTR [edi+0x8]
  4264d5:	mov    DWORD PTR [ebp-0x20],eax
  4264d8:	mov    eax,DWORD PTR [ebp+0x8]
  4264db:	mov    edi,DWORD PTR [eax+0x1e0]
  4264e1:	mov    esi,DWORD PTR [ebp+0x8]
  4264e4:	xor    eax,eax
  4264e6:	lea    edx,[ebp-0x90]
  4264ec:	call   0x42870f
  4264f1:	push   eax
  4264f2:	mov    eax,DWORD PTR [ebp+0x8]
  4264f5:	mov    eax,DWORD PTR [eax+0x19c]
  4264fb:	push   DWORD PTR [eax]
  4264fd:	call   DWORD PTR [edi+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	mov    edi,DWORD PTR [eax+0x1e0]
  426509:	mov    esi,DWORD PTR [ebp+0x8]
  42650c:	xor    eax,eax
  42650e:	lea    edx,[ebp-0xa8]
  426514:	call   0x42870f
  426519:	push   eax
  42651a:	mov    eax,DWORD PTR [ebp+0x8]
  42651d:	mov    eax,DWORD PTR [eax+0x19c]
  426523:	push   DWORD PTR [eax]
  426525:	call   DWORD PTR [edi+0x8]
  426528:	and    DWORD PTR [ebp-0x8],0x0
  42652c:	mov    DWORD PTR [ebp-0x48],eax
  42652f:	mov    eax,DWORD PTR [ebp-0x8]
  426532:	and    eax,0x7
  426535:	add    eax,0x31
  426538:	push   eax
  426539:	call   DWORD PTR [ebp-0x20]
  42653c:	test   eax,eax
  42653e:	je     0x426582
  426540:	mov    eax,DWORD PTR [ebp-0x8]
  426543:	push   0x19
  426545:	xor    edx,edx
  426547:	pop    ecx
  426548:	div    ecx
  42654a:	add    dl,0x41
  42654d:	movzx  eax,dl
  426550:	push   eax
  426551:	call   DWORD PTR [ebp-0x48]
  426554:	test   eax,eax
  426556:	jne    0x426582
  426558:	mov    eax,DWORD PTR [ebp+0x8]
  42655b:	mov    edi,DWORD PTR [eax+0x1e0]
  426561:	mov    esi,DWORD PTR [ebp+0x8]
  426564:	xor    eax,eax
  426566:	lea    edx,[ebp-0x68]
  426569:	call   0x42870f
  42656e:	push   eax
  42656f:	mov    eax,DWORD PTR [ebp+0x8]
  426572:	mov    eax,DWORD PTR [eax+0x198]
  426578:	push   DWORD PTR [eax]
  42657a:	call   DWORD PTR [edi+0x8]
  42657d:	mov    DWORD PTR [ebp-0x14],eax
  426580:	jmp    0x426586
  426582:	and    DWORD PTR [ebp-0x14],0x0
  426586:	inc    DWORD PTR [ebp-0x8]
  426589:	cmp    DWORD PTR [ebp-0x8],0x10
  42658d:	jb     0x42652f
  42658f:	mov    eax,DWORD PTR [ebp-0x18]
  426592:	mov    esi,DWORD PTR [ebp+0x8]
  426595:	xor    eax,ebx
  426597:	mov    edi,0x3272f5
  42659c:	add    eax,edi
  42659e:	lea    edx,[ebp-0x10c]
  4265a4:	call   0x42870f
  4265a9:	push   eax
  4265aa:	mov    eax,DWORD PTR [ebp-0x10]
  4265ad:	mov    esi,DWORD PTR [ebp+0x8]
  4265b0:	xor    eax,ebx
  4265b2:	add    eax,edi
  4265b4:	lea    edx,[ebp-0x12c]
  4265ba:	call   0x42870f
  4265bf:	push   eax
  4265c0:	call   DWORD PTR [ebp-0x14]
  4265c3:	mov    ecx,DWORD PTR [ebp-0x10]
  4265c6:	xor    ecx,ebx
  4265c8:	add    ecx,edi
  4265ca:	cmp    ecx,eax
  4265cc:	jne    0x4265d5
  4265ce:	mov    DWORD PTR [ebp-0x34],0x1
  4265d5:	mov    eax,DWORD PTR [ebp-0x18]
  4265d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265db:	xor    eax,ebx
  4265dd:	lea    eax,[eax+ecx*1+0x3272f5]
  4265e4:	mov    DWORD PTR [ebp-0x1c],eax
  4265e7:	mov    eax,DWORD PTR [ebp-0x34]
  4265ea:	test   eax,eax
  4265ec:	je     0x426600
  4265ee:	mov    eax,DWORD PTR [ebp-0x18]
  4265f1:	mov    ecx,DWORD PTR [ebp-0x38]
  4265f4:	xor    eax,ebx
  4265f6:	lea    eax,[eax+ecx*1+0x3272f5]
  4265fd:	mov    DWORD PTR [ebp-0x38],eax
  426600:	mov    eax,DWORD PTR [ebp-0x18]
  426603:	xor    eax,ebx
  426605:	mov    ecx,0xffcd8d0b
  42660a:	sub    ecx,eax
  42660c:	add    ecx,DWORD PTR [ebp-0x28]
  42660f:	mov    eax,DWORD PTR [ebp-0x1c]
  426612:	cmp    eax,ecx
  426614:	jbe    0x426479
  42661a:	mov    esi,edi
  42661c:	mov    eax,DWORD PTR [ebp-0x38]
  42661f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426622:	cmp    ecx,eax
  426624:	jne    0x426637
  426626:	push   DWORD PTR [ebp+0x8]
  426629:	lea    eax,[ebp-0x40]
  42662c:	push   eax
  42662d:	call   0x42917e
  426632:	mov    DWORD PTR [ebp-0x24],eax
  426635:	jmp    0x426643
  426637:	mov    eax,DWORD PTR [ebp-0x24]
  42663a:	mov    ecx,DWORD PTR [ebp-0x18]
  42663d:	xor    ecx,ebx
  42663f:	add    ecx,esi
  426641:	xor    DWORD PTR [eax],ecx
  426643:	mov    eax,DWORD PTR [ebp-0x10]
  426646:	mov    ecx,DWORD PTR [ebp-0x24]
  426649:	xor    eax,ebx
  42664b:	add    eax,esi
  42664d:	cmp    eax,ecx
  42664f:	je     0x426dc7
  426655:	mov    eax,DWORD PTR [ebp-0x10]
  426658:	mov    ecx,DWORD PTR [ebp-0x40]
  42665b:	xor    eax,ebx
  42665d:	add    eax,esi
  42665f:	cmp    eax,ecx
  426661:	je     0x426dc7
  426667:	mov    eax,DWORD PTR [ebp-0x10]
  42666a:	xor    eax,ebx
  42666c:	add    eax,esi
  42666e:	jmp    0x42668c
  426670:	mov    edi,DWORD PTR [ebp-0x24]
  426673:	mov    cl,al
  426675:	and    cl,0x1f
  426678:	or     dl,0xff
  42667b:	sub    dl,cl
  42667d:	add    BYTE PTR [edi+eax*1],dl
  426680:	mov    ecx,DWORD PTR [ebp-0x18]
  426683:	xor    ecx,ebx
  426685:	lea    eax,[eax+ecx*1+0x3272f5]
  42668c:	mov    ecx,DWORD PTR [ebp-0x40]
  42668f:	cmp    eax,ecx
  426691:	jb     0x426670
  426693:	mov    eax,DWORD PTR [ebp-0x40]
  426696:	mov    DWORD PTR [ebp-0x28],eax
  426699:	mov    eax,DWORD PTR [ebp-0x24]
  42669c:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4266a3:	mov    DWORD PTR [ebp-0xd4],eax
  4266a9:	mov    edi,0xf89c85a2
  4266ae:	mov    DWORD PTR [ebp-0x2c],edi
  4266b1:	mov    eax,DWORD PTR [ebp-0x38]
  4266b4:	xor    eax,ebx
  4266b6:	add    eax,esi
  4266b8:	mov    DWORD PTR [ebp-0xc],eax
  4266bb:	mov    eax,DWORD PTR [ebp-0x38]
  4266be:	xor    eax,ebx
  4266c0:	add    eax,esi
  4266c2:	mov    DWORD PTR [ebp-0x8],eax
  4266c5:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4266cc:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  4266d3:	mov    eax,DWORD PTR [ebp-0x38]
  4266d6:	mov    ecx,DWORD PTR [ebp-0x28]
  4266d9:	xor    eax,ebx
  4266db:	add    eax,esi
  4266dd:	cmp    ecx,eax
  4266df:	je     0x4268de
  4266e5:	jmp    0x4268ba
  4266ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4266ed:	mov    eax,DWORD PTR [ebp-0x28]
  4266f0:	sub    eax,ecx
  4266f2:	mov    ecx,DWORD PTR [ebp-0x48]
  4266f5:	xor    ecx,ebx
  4266f7:	add    ecx,esi
  4266f9:	xor    edx,edx
  4266fb:	div    ecx
  4266fd:	mov    DWORD PTR [ebp-0x8],eax
  426700:	mov    eax,DWORD PTR [ebp-0x4c]
  426703:	mov    ecx,DWORD PTR [ebp-0x8]
  426706:	xor    eax,ebx
  426708:	add    eax,esi
  42670a:	cmp    ecx,eax
  42670c:	jbe    0x426718
  42670e:	mov    eax,DWORD PTR [ebp-0x4c]
  426711:	xor    eax,ebx
  426713:	add    eax,esi
  426715:	mov    DWORD PTR [ebp-0x8],eax
  426718:	mov    eax,DWORD PTR [ebp-0x48]
  42671b:	mov    ecx,DWORD PTR [ebp-0x8]
  42671e:	xor    eax,ebx
  426720:	add    eax,esi
  426722:	imul   eax,ecx
  426725:	mov    DWORD PTR [ebp-0x8],eax
  426728:	mov    eax,DWORD PTR [ebp-0x38]
  42672b:	mov    ecx,DWORD PTR [ebp-0x8]
  42672e:	xor    eax,ebx
  426730:	add    eax,esi
  426732:	cmp    ecx,eax
  426734:	je     0x4268a8
  42673a:	mov    eax,DWORD PTR [ebp-0x8]
  42673d:	mov    DWORD PTR [ebp-0x14],eax
  426740:	mov    eax,DWORD PTR [ebp-0xc]
  426743:	add    eax,DWORD PTR [ebp-0xd4]
  426749:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426750:	mov    DWORD PTR [ebp-0x34],edi
  426753:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  42675d:	mov    DWORD PTR [ebp-0x8],eax
  426760:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426767:	mov    DWORD PTR [ebp-0x1c],edi
  42676a:	mov    eax,DWORD PTR [ebp-0x20]
  42676d:	xor    eax,ebx
  42676f:	add    eax,esi
  426771:	jmp    0x426867
  426776:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426780:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42678a:	mov    eax,DWORD PTR [ebp-0x1c]
  42678d:	mov    ecx,DWORD PTR [ebp-0x44]
  426790:	xor    eax,ebx
  426792:	add    eax,esi
  426794:	imul   eax,ecx
  426797:	mov    ecx,DWORD PTR [ebp-0x8]
  42679a:	mov    al,BYTE PTR [eax+ecx*1]
  42679d:	mov    BYTE PTR [ebp-0x2],al
  4267a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4267a3:	mov    ecx,DWORD PTR [ebp-0x44]
  4267a6:	xor    eax,ebx
  4267a8:	add    eax,esi
  4267aa:	imul   eax,ecx
  4267ad:	mov    ecx,DWORD PTR [ebp-0xe8]
  4267b3:	xor    ecx,ebx
  4267b5:	add    eax,ecx
  4267b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ba:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4267c2:	mov    ecx,DWORD PTR [ebp-0xe0]
  4267c8:	xor    ecx,ebx
  4267ca:	lea    eax,[ecx+eax*1+0x3272f5]
  4267d1:	movzx  ecx,BYTE PTR [ebp-0x2]
  4267d5:	xor    ecx,eax
  4267d7:	mov    BYTE PTR [ebp-0x2],cl
  4267da:	mov    al,BYTE PTR [ebp-0x2]
  4267dd:	mov    ecx,DWORD PTR [ebp-0x1c]
  4267e0:	mov    edx,DWORD PTR [ebp-0x44]
  4267e3:	xor    ecx,ebx
  4267e5:	add    ecx,esi
  4267e7:	imul   ecx,edx
  4267ea:	mov    edx,DWORD PTR [ebp-0x8]
  4267ed:	mov    BYTE PTR [ecx+edx*1],al
  4267f0:	mov    eax,DWORD PTR [ebp-0x1c]
  4267f3:	mov    ecx,DWORD PTR [ebp-0x44]
  4267f6:	xor    eax,ebx
  4267f8:	add    eax,esi
  4267fa:	imul   eax,ecx
  4267fd:	mov    ecx,DWORD PTR [ebp-0x8]
  426800:	mov    al,BYTE PTR [eax+ecx*1]
  426803:	mov    BYTE PTR [ebp-0x2],al
  426806:	mov    eax,DWORD PTR [ebp-0x1c]
  426809:	mov    ecx,DWORD PTR [ebp-0x44]
  42680c:	xor    eax,ebx
  42680e:	add    eax,esi
  426810:	imul   eax,ecx
  426813:	mov    ecx,DWORD PTR [ebp-0x34]
  426816:	xor    ecx,ebx
  426818:	add    eax,ecx
  42681a:	mov    ecx,DWORD PTR [ebp-0x8]
  42681d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426825:	mov    ecx,DWORD PTR [ebp-0xc4]
  42682b:	xor    ecx,ebx
  42682d:	lea    eax,[ecx+eax*1+0x3272f5]
  426834:	movzx  ecx,BYTE PTR [ebp-0x2]
  426838:	xor    ecx,eax
  42683a:	mov    BYTE PTR [ebp-0x2],cl
  42683d:	mov    al,BYTE PTR [ebp-0x2]
  426840:	mov    ecx,DWORD PTR [ebp-0x1c]
  426843:	mov    edx,DWORD PTR [ebp-0x44]
  426846:	xor    ecx,ebx
  426848:	add    ecx,esi
  42684a:	imul   ecx,edx
  42684d:	mov    edx,DWORD PTR [ebp-0x8]
  426850:	mov    BYTE PTR [ecx+edx*1],al
  426853:	mov    eax,DWORD PTR [ebp-0x30]
  426856:	mov    ecx,DWORD PTR [ebp-0x34]
  426859:	xor    eax,ebx
  42685b:	xor    ecx,ebx
  42685d:	add    eax,esi
  42685f:	add    ecx,esi
  426861:	imul   eax,ecx
  426864:	add    eax,DWORD PTR [ebp-0x44]
  426867:	mov    DWORD PTR [ebp-0x44],eax
  42686a:	mov    eax,DWORD PTR [ebp-0x44]
  42686d:	mov    ecx,DWORD PTR [ebp-0x14]
  426870:	cmp    ecx,eax
  426872:	jb     0x426776
  426878:	mov    eax,DWORD PTR [ebp-0x34]
  42687b:	mov    ecx,DWORD PTR [ebp-0x14]
  42687e:	xor    eax,ebx
  426880:	add    eax,esi
  426882:	imul   eax,ecx
  426885:	mov    ecx,DWORD PTR [ebp-0x20]
  426888:	xor    ecx,ebx
  42688a:	add    ecx,esi
  42688c:	or     eax,ecx
  42688e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426891:	xor    ecx,ebx
  426893:	add    eax,ecx
  426895:	mov    ecx,DWORD PTR [ebp-0x2c]
  426898:	xor    ecx,ebx
  42689a:	add    eax,ecx
  42689c:	mov    ecx,DWORD PTR [ebp-0xc]
  42689f:	lea    eax,[eax+ecx*1+0x64e5ea]
  4268a6:	jmp    0x4268b7
  4268a8:	mov    eax,DWORD PTR [ebp-0x2c]
  4268ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4268ae:	xor    eax,ebx
  4268b0:	lea    eax,[eax+ecx*1+0x3272f5]
  4268b7:	mov    DWORD PTR [ebp-0xc],eax
  4268ba:	mov    eax,DWORD PTR [ebp-0x2c]
  4268bd:	xor    eax,ebx
  4268bf:	mov    ecx,0xffcd8d0b
  4268c4:	sub    ecx,eax
  4268c6:	add    ecx,DWORD PTR [ebp-0x28]
  4268c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4268cc:	mov    edx,DWORD PTR [ebp-0xc]
  4268cf:	xor    eax,ebx
  4268d1:	add    eax,esi
  4268d3:	imul   eax,edx
  4268d6:	cmp    eax,ecx
  4268d8:	jbe    0x4266ea
  4268de:	mov    eax,DWORD PTR [ebp-0x10]
  4268e1:	mov    ecx,DWORD PTR [ebp-0x40]
  4268e4:	mov    eax,DWORD PTR [ebp+0x8]
  4268e7:	mov    edx,DWORD PTR [ebp-0x54]
  4268ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4268f0:	xor    edx,ebx
  4268f2:	add    edx,esi
  4268f4:	push   edx
  4268f5:	mov    edx,DWORD PTR [ebp-0x3c]
  4268f8:	xor    edx,ebx
  4268fa:	add    edx,esi
  4268fc:	push   edx
  4268fd:	push   ecx
  4268fe:	mov    DWORD PTR [ebp-0x30],ecx
  426901:	mov    ecx,DWORD PTR [ebp-0x10]
  426904:	xor    ecx,ebx
  426906:	add    ecx,esi
  426908:	push   ecx
  426909:	call   DWORD PTR [eax+0x14]
  42690c:	mov    edi,eax
  42690e:	mov    eax,DWORD PTR [ebp-0x10]
  426911:	xor    eax,ebx
  426913:	add    eax,esi
  426915:	cmp    eax,edi
  426917:	je     0x426972
  426919:	mov    eax,DWORD PTR [ebp-0x10]
  42691c:	jmp    0x42693f
  42691e:	mov    ecx,DWORD PTR [ebp-0x24]
  426921:	xor    eax,ebx
  426923:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  42692a:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  426931:	mov    ecx,DWORD PTR [ebp-0x18]
  426934:	xor    ecx,ebx
  426936:	lea    eax,[ecx+eax*1+0x3272f5]
  42693d:	xor    eax,ebx
  42693f:	mov    ecx,DWORD PTR [ebp-0x40]
  426942:	sub    ecx,esi
  426944:	xor    ecx,ebx
  426946:	cmp    eax,ecx
  426948:	jne    0x42691e
  42694a:	mov    eax,DWORD PTR [ebp+0x8]
  42694d:	mov    ecx,DWORD PTR [ebp-0x50]
  426950:	mov    eax,DWORD PTR [eax+0x1e0]
  426956:	xor    ecx,ebx
  426958:	add    ecx,esi
  42695a:	push   ecx
  42695b:	mov    ecx,DWORD PTR [ebp-0x10]
  42695e:	xor    ecx,ebx
  426960:	add    ecx,esi
  426962:	push   ecx
  426963:	push   DWORD PTR [ebp-0x24]
  426966:	call   DWORD PTR [eax+0x18]
  426969:	mov    eax,DWORD PTR [ebp-0x30]
  42696c:	mov    DWORD PTR [ebp-0x24],edi
  42696f:	mov    DWORD PTR [ebp-0x40],eax
  426972:	mov    edi,DWORD PTR [ebp-0x24]
  426975:	mov    eax,DWORD PTR [ebp-0x18]
  426978:	mov    ecx,DWORD PTR [ebp-0x10]
  42697b:	xor    eax,ebx
  42697d:	mov    DWORD PTR [ebp-0x30],edi
  426980:	add    eax,esi
  426982:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426989:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426990:	jmp    0x4269c4
  426992:	xor    ecx,ebx
  426994:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  42699b:	xor    dl,0x7e
  42699e:	add    dl,0x3
  4269a1:	mov    DWORD PTR [ebp-0x3c],ecx
  4269a4:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  4269ac:	movzx  edx,dl
  4269af:	cmp    ecx,edx
  4269b1:	jne    0x4269ce
  4269b3:	mov    ecx,DWORD PTR [ebp-0x18]
  4269b6:	mov    edx,DWORD PTR [ebp-0x3c]
  4269b9:	xor    ecx,ebx
  4269bb:	lea    ecx,[ecx+edx*1+0x3272f5]
  4269c2:	xor    ecx,ebx
  4269c4:	cmp    ecx,0xf89c85bd
  4269ca:	jne    0x426992
  4269cc:	jmp    0x4269d5
  4269ce:	mov    eax,DWORD PTR [ebp-0x10]
  4269d1:	xor    eax,ebx
  4269d3:	add    eax,esi
  4269d5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269d8:	xor    ecx,ebx
  4269da:	add    ecx,esi
  4269dc:	cmp    ecx,eax
  4269de:	je     0x426b51
  4269e4:	mov    eax,DWORD PTR [edi+0x8]
  4269e7:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4269ee:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  4269f5:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  4269fc:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426a03:	mov    DWORD PTR [ebp-0x14],eax
  426a06:	mov    eax,DWORD PTR [ebp+0x8]
  426a09:	mov    ecx,DWORD PTR [ebp-0x20]
  426a0c:	xor    ecx,ebx
  426a0e:	add    ecx,esi
  426a10:	push   ecx
  426a11:	mov    ecx,DWORD PTR [ebp-0x48]
  426a14:	mov    eax,DWORD PTR [eax+0x1e0]
  426a1a:	xor    ecx,ebx
  426a1c:	add    ecx,esi
  426a1e:	push   ecx
  426a1f:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a22:	xor    ecx,ebx
  426a24:	add    ecx,esi
  426a26:	push   ecx
  426a27:	mov    ecx,DWORD PTR [ebp-0xc]
  426a2a:	xor    ecx,ebx
  426a2c:	add    ecx,esi
  426a2e:	push   ecx
  426a2f:	call   DWORD PTR [eax+0x14]
  426a32:	mov    edi,eax
  426a34:	mov    eax,DWORD PTR [ebp+0x8]
  426a37:	mov    ecx,DWORD PTR [ebp-0x20]
  426a3a:	mov    eax,DWORD PTR [eax+0x1e0]
  426a40:	xor    ecx,ebx
  426a42:	add    ecx,esi
  426a44:	push   ecx
  426a45:	mov    ecx,DWORD PTR [ebp-0x48]
  426a48:	xor    ecx,ebx
  426a4a:	add    ecx,esi
  426a4c:	push   ecx
  426a4d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a50:	push   DWORD PTR [ebp-0x14]
  426a53:	xor    ecx,ebx
  426a55:	add    ecx,esi
  426a57:	push   ecx
  426a58:	call   DWORD PTR [eax+0x14]
  426a5b:	mov    ecx,DWORD PTR [ebp-0xc]
  426a5e:	xor    ecx,ebx
  426a60:	add    ecx,esi
  426a62:	mov    DWORD PTR [ebp-0x20],eax
  426a65:	cmp    ecx,edi
  426a67:	je     0x426df4
  426a6d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a70:	xor    ecx,ebx
  426a72:	add    ecx,esi
  426a74:	cmp    ecx,eax
  426a76:	je     0x426df4
  426a7c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426a83:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426a8a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a8d:	xor    cl,0xae
  426a90:	sub    cl,0xb
  426a93:	mov    BYTE PTR [edi],cl
  426a95:	mov    ecx,DWORD PTR [ebp-0xc]
  426a98:	xor    cl,0xae
  426a9b:	sub    cl,0xb
  426a9e:	mov    BYTE PTR [edi+0x1],cl
  426aa1:	mov    ecx,DWORD PTR [ebp-0x54]
  426aa4:	xor    cl,0xae
  426aa7:	sub    cl,0xb
  426aaa:	mov    BYTE PTR [edi+0x2],cl
  426aad:	and    DWORD PTR [ebp-0xc8],0x0
  426ab4:	and    DWORD PTR [ebp-0xdc],0x0
  426abb:	lea    ecx,[ebp-0xdc]
  426ac1:	push   ecx
  426ac2:	push   DWORD PTR [ebp-0x14]
  426ac5:	push   eax
  426ac6:	lea    eax,[ebp-0xc8]
  426acc:	push   eax
  426acd:	mov    eax,DWORD PTR [ebp-0x30]
  426ad0:	push   DWORD PTR [eax+0xc]
  426ad3:	mov    eax,DWORD PTR [ebp-0x24]
  426ad6:	add    eax,0x10
  426ad9:	push   eax
  426ada:	push   edi
  426adb:	call   0x425d81
  426ae0:	mov    DWORD PTR [ebp-0x3c],eax
  426ae3:	mov    eax,DWORD PTR [ebp+0x8]
  426ae6:	mov    ecx,DWORD PTR [ebp-0x50]
  426ae9:	mov    eax,DWORD PTR [eax+0x1e0]
  426aef:	xor    ecx,ebx
  426af1:	add    ecx,esi
  426af3:	push   ecx
  426af4:	mov    ecx,DWORD PTR [ebp-0xc]
  426af7:	xor    ecx,ebx
  426af9:	add    ecx,esi
  426afb:	push   ecx
  426afc:	push   edi
  426afd:	call   DWORD PTR [eax+0x18]
  426b00:	mov    eax,DWORD PTR [ebp-0x3c]
  426b03:	add    eax,0xffcd8d0b
  426b08:	xor    eax,ebx
  426b0a:	cmp    eax,0xf89c85a5
  426b0f:	mov    eax,DWORD PTR [ebp+0x8]
  426b12:	mov    eax,DWORD PTR [eax+0x1e0]
  426b18:	mov    ecx,DWORD PTR [ebp-0x50]
  426b1b:	jne    0x426b3e
  426b1d:	xor    ecx,ebx
  426b1f:	add    ecx,esi
  426b21:	push   ecx
  426b22:	mov    ecx,DWORD PTR [ebp-0xc]
  426b25:	xor    ecx,ebx
  426b27:	add    ecx,esi
  426b29:	push   ecx
  426b2a:	push   DWORD PTR [ebp-0x24]
  426b2d:	call   DWORD PTR [eax+0x18]
  426b30:	mov    eax,DWORD PTR [ebp-0x20]
  426b33:	mov    DWORD PTR [ebp-0x24],eax
  426b36:	mov    eax,DWORD PTR [ebp-0x14]
  426b39:	mov    DWORD PTR [ebp-0x40],eax
  426b3c:	jmp    0x426b51
  426b3e:	xor    ecx,ebx
  426b40:	add    ecx,esi
  426b42:	push   ecx
  426b43:	mov    ecx,DWORD PTR [ebp-0xc]
  426b46:	xor    ecx,ebx
  426b48:	add    ecx,esi
  426b4a:	push   ecx
  426b4b:	push   DWORD PTR [ebp-0x20]
  426b4e:	call   DWORD PTR [eax+0x18]
  426b51:	mov    eax,DWORD PTR [ebp-0x40]
  426b54:	mov    DWORD PTR [ebp-0x38],eax
  426b57:	mov    eax,DWORD PTR [ebp-0x24]
  426b5a:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426b61:	mov    DWORD PTR [ebp-0x3c],eax
  426b64:	mov    edi,0xf89c85a2
  426b69:	mov    DWORD PTR [ebp-0x2c],edi
  426b6c:	mov    eax,DWORD PTR [ebp-0x28]
  426b6f:	xor    eax,ebx
  426b71:	add    eax,esi
  426b73:	mov    DWORD PTR [ebp-0xc],eax
  426b76:	mov    eax,DWORD PTR [ebp-0x28]
  426b79:	xor    eax,ebx
  426b7b:	add    eax,esi
  426b7d:	mov    DWORD PTR [ebp-0x14],eax
  426b80:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426b87:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426b8e:	mov    eax,DWORD PTR [ebp-0x28]
  426b91:	mov    ecx,DWORD PTR [ebp-0x38]
  426b94:	xor    eax,ebx
  426b96:	add    eax,esi
  426b98:	cmp    ecx,eax
  426b9a:	je     0x426d90
  426ba0:	jmp    0x426d6c
  426ba5:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba8:	mov    eax,DWORD PTR [ebp-0x38]
  426bab:	sub    eax,ecx
  426bad:	mov    ecx,DWORD PTR [ebp-0x48]
  426bb0:	xor    ecx,ebx
  426bb2:	add    ecx,esi
  426bb4:	xor    edx,edx
  426bb6:	div    ecx
  426bb8:	mov    DWORD PTR [ebp-0x14],eax
  426bbb:	mov    eax,DWORD PTR [ebp-0x20]
  426bbe:	mov    ecx,DWORD PTR [ebp-0x14]
  426bc1:	xor    eax,ebx
  426bc3:	add    eax,esi
  426bc5:	cmp    ecx,eax
  426bc7:	jbe    0x426bd3
  426bc9:	mov    eax,DWORD PTR [ebp-0x20]
  426bcc:	xor    eax,ebx
  426bce:	add    eax,esi
  426bd0:	mov    DWORD PTR [ebp-0x14],eax
  426bd3:	mov    eax,DWORD PTR [ebp-0x48]
  426bd6:	mov    ecx,DWORD PTR [ebp-0x14]
  426bd9:	xor    eax,ebx
  426bdb:	add    eax,esi
  426bdd:	imul   eax,ecx
  426be0:	mov    DWORD PTR [ebp-0x14],eax
  426be3:	mov    eax,DWORD PTR [ebp-0x28]
  426be6:	mov    ecx,DWORD PTR [ebp-0x14]
  426be9:	xor    eax,ebx
  426beb:	add    eax,esi
  426bed:	cmp    ecx,eax
  426bef:	je     0x426d5a
  426bf5:	mov    eax,DWORD PTR [ebp-0x14]
  426bf8:	mov    DWORD PTR [ebp-0x34],eax
  426bfb:	mov    eax,DWORD PTR [ebp-0xc]
  426bfe:	add    eax,DWORD PTR [ebp-0x3c]
  426c01:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426c08:	mov    DWORD PTR [ebp-0x14],edi
  426c0b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426c12:	mov    DWORD PTR [ebp-0x1c],eax
  426c15:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426c1c:	mov    DWORD PTR [ebp-0x8],edi
  426c1f:	mov    eax,DWORD PTR [ebp-0x4c]
  426c22:	xor    eax,ebx
  426c24:	add    eax,esi
  426c26:	jmp    0x426d19
  426c2b:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426c35:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426c3f:	mov    eax,DWORD PTR [ebp-0x8]
  426c42:	mov    ecx,DWORD PTR [ebp-0x18]
  426c45:	xor    eax,ebx
  426c47:	add    eax,esi
  426c49:	imul   eax,ecx
  426c4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c4f:	mov    al,BYTE PTR [eax+ecx*1]
  426c52:	mov    BYTE PTR [ebp-0x1],al
  426c55:	mov    eax,DWORD PTR [ebp-0x8]
  426c58:	mov    ecx,DWORD PTR [ebp-0x18]
  426c5b:	xor    eax,ebx
  426c5d:	add    eax,esi
  426c5f:	imul   eax,ecx
  426c62:	mov    ecx,DWORD PTR [ebp-0x54]
  426c65:	xor    ecx,ebx
  426c67:	add    eax,ecx
  426c69:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c6c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426c74:	mov    ecx,DWORD PTR [ebp-0xe4]
  426c7a:	xor    ecx,ebx
  426c7c:	lea    eax,[ecx+eax*1+0x3272f5]
  426c83:	movzx  ecx,BYTE PTR [ebp-0x1]
  426c87:	xor    ecx,eax
  426c89:	mov    BYTE PTR [ebp-0x1],cl
  426c8c:	mov    al,BYTE PTR [ebp-0x1]
  426c8f:	mov    ecx,DWORD PTR [ebp-0x8]
  426c92:	mov    edx,DWORD PTR [ebp-0x18]
  426c95:	xor    ecx,ebx
  426c97:	add    ecx,esi
  426c99:	imul   ecx,edx
  426c9c:	mov    edx,DWORD PTR [ebp-0x1c]
  426c9f:	mov    BYTE PTR [ecx+edx*1],al
  426ca2:	mov    eax,DWORD PTR [ebp-0x8]
  426ca5:	mov    ecx,DWORD PTR [ebp-0x18]
  426ca8:	xor    eax,ebx
  426caa:	add    eax,esi
  426cac:	imul   eax,ecx
  426caf:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cb2:	mov    al,BYTE PTR [eax+ecx*1]
  426cb5:	mov    BYTE PTR [ebp-0x1],al
  426cb8:	mov    eax,DWORD PTR [ebp-0x8]
  426cbb:	mov    ecx,DWORD PTR [ebp-0x18]
  426cbe:	xor    eax,ebx
  426cc0:	add    eax,esi
  426cc2:	imul   eax,ecx
  426cc5:	mov    ecx,DWORD PTR [ebp-0x14]
  426cc8:	xor    ecx,ebx
  426cca:	add    eax,ecx
  426ccc:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ccf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426cd7:	mov    ecx,DWORD PTR [ebp-0xd0]
  426cdd:	xor    ecx,ebx
  426cdf:	lea    eax,[ecx+eax*1+0x3272f5]
  426ce6:	movzx  ecx,BYTE PTR [ebp-0x1]
  426cea:	xor    ecx,eax
  426cec:	mov    BYTE PTR [ebp-0x1],cl
  426cef:	mov    al,BYTE PTR [ebp-0x1]
  426cf2:	mov    ecx,DWORD PTR [ebp-0x8]
  426cf5:	mov    edx,DWORD PTR [ebp-0x18]
  426cf8:	xor    ecx,ebx
  426cfa:	add    ecx,esi
  426cfc:	imul   ecx,edx
  426cff:	mov    edx,DWORD PTR [ebp-0x1c]
  426d02:	mov    BYTE PTR [ecx+edx*1],al
  426d05:	mov    eax,DWORD PTR [ebp-0x30]
  426d08:	mov    ecx,DWORD PTR [ebp-0x14]
  426d0b:	xor    eax,ebx
  426d0d:	xor    ecx,ebx
  426d0f:	add    eax,esi
  426d11:	add    ecx,esi
  426d13:	imul   eax,ecx
  426d16:	add    eax,DWORD PTR [ebp-0x18]
  426d19:	mov    DWORD PTR [ebp-0x18],eax
  426d1c:	mov    eax,DWORD PTR [ebp-0x18]
  426d1f:	mov    ecx,DWORD PTR [ebp-0x34]
  426d22:	cmp    ecx,eax
  426d24:	jb     0x426c2b
  426d2a:	mov    eax,DWORD PTR [ebp-0x14]
  426d2d:	mov    ecx,DWORD PTR [ebp-0x34]
  426d30:	xor    eax,ebx
  426d32:	add    eax,esi
  426d34:	imul   eax,ecx
  426d37:	mov    ecx,DWORD PTR [ebp-0x4c]
  426d3a:	xor    ecx,ebx
  426d3c:	add    ecx,esi
  426d3e:	or     eax,ecx
  426d40:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d43:	xor    ecx,ebx
  426d45:	add    eax,ecx
  426d47:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d4a:	xor    ecx,ebx
  426d4c:	add    eax,ecx
  426d4e:	mov    ecx,DWORD PTR [ebp-0xc]
  426d51:	lea    eax,[eax+ecx*1+0x64e5ea]
  426d58:	jmp    0x426d69
  426d5a:	mov    eax,DWORD PTR [ebp-0x2c]
  426d5d:	mov    ecx,DWORD PTR [ebp-0xc]
  426d60:	xor    eax,ebx
  426d62:	lea    eax,[eax+ecx*1+0x3272f5]
  426d69:	mov    DWORD PTR [ebp-0xc],eax
  426d6c:	mov    eax,DWORD PTR [ebp-0x2c]
  426d6f:	xor    eax,ebx
  426d71:	mov    ecx,0xffcd8d0b
  426d76:	sub    ecx,eax
  426d78:	add    ecx,DWORD PTR [ebp-0x38]
  426d7b:	mov    eax,DWORD PTR [ebp-0x2c]
  426d7e:	mov    edx,DWORD PTR [ebp-0xc]
  426d81:	xor    eax,ebx
  426d83:	add    eax,esi
  426d85:	imul   eax,edx
  426d88:	cmp    eax,ecx
  426d8a:	jbe    0x426ba5
  426d90:	push   DWORD PTR [ebp+0x8]
  426d93:	mov    eax,DWORD PTR [ebp+0x8]
  426d96:	push   DWORD PTR [eax+0x1cc]
  426d9c:	lea    eax,[ebp-0xd8]
  426da2:	push   eax
  426da3:	mov    eax,DWORD PTR [ebp+0x8]
  426da6:	mov    eax,DWORD PTR [eax+0x1c4]
  426dac:	push   DWORD PTR [eax]
  426dae:	mov    eax,DWORD PTR [ebp+0x8]
  426db1:	mov    eax,DWORD PTR [eax+0x1c0]
  426db7:	push   DWORD PTR [eax]
  426db9:	push   DWORD PTR [ebp-0x40]
  426dbc:	push   DWORD PTR [ebp-0x24]
  426dbf:	call   0x427856
  426dc4:	mov    DWORD PTR [ebp-0x3c],eax
  426dc7:	mov    eax,DWORD PTR [ebp-0x10]
  426dca:	mov    ecx,DWORD PTR [ebp-0x24]
  426dcd:	xor    eax,ebx
  426dcf:	add    eax,esi
  426dd1:	cmp    eax,ecx
  426dd3:	je     0x426df4
  426dd5:	mov    eax,DWORD PTR [ebp+0x8]
  426dd8:	mov    ecx,DWORD PTR [ebp-0x50]
  426ddb:	mov    eax,DWORD PTR [eax+0x1e0]
  426de1:	xor    ecx,ebx
  426de3:	add    ecx,esi
  426de5:	push   ecx
  426de6:	mov    ecx,DWORD PTR [ebp-0x10]
  426de9:	xor    ecx,ebx
  426deb:	add    ecx,esi
  426ded:	push   ecx
  426dee:	push   DWORD PTR [ebp-0x24]
  426df1:	call   DWORD PTR [eax+0x18]
  426df4:	pop    edi
  426df5:	pop    esi
  426df6:	pop    ebx
  426df7:	leave  
  426df8:	ret    0x4
  426dfb:	push   ebp
  426dfc:	mov    ebp,esp
  426dfe:	push   ecx
  426dff:	push   ecx
  426e00:	lea    eax,[ebp-0x8]
  426e03:	mov    DWORD PTR [ebp-0x4],eax
  426e06:	push   esi
  426e07:	mov    esi,DWORD PTR [ebp-0x4]
  426e0a:	mov    eax,0xf881ba2f
  426e0f:	mov    DWORD PTR [esi],eax
  426e11:	mov    esi,DWORD PTR [ebp-0x8]
  426e14:	cmp    esi,eax
  426e16:	pop    esi
  426e17:	jne    0x426e21
  426e19:	mov    BYTE PTR [ecx+0xa],0x83
  426e1d:	mov    BYTE PTR [edx+0x8],0x2e
  426e21:	mov    BYTE PTR [edx+0xa],0x83
  426e25:	mov    BYTE PTR [ecx+0x2],0x15
  426e29:	leave  
  426e2a:	ret    
  426e2b:	push   ebp
  426e2c:	mov    ebp,esp
  426e2e:	push   ecx
  426e2f:	push   ecx
  426e30:	lea    eax,[ebp-0x8]
  426e33:	mov    DWORD PTR [ebp-0x4],eax
  426e36:	mov    edx,DWORD PTR [ebp-0x4]
  426e39:	mov    eax,0xf88b0bcb
  426e3e:	mov    DWORD PTR [edx],eax
  426e40:	mov    edx,DWORD PTR [ebp-0x8]
  426e43:	cmp    edx,eax
  426e45:	jne    0x426e56
  426e47:	mov    eax,DWORD PTR [ebp+0x8]
  426e4a:	mov    BYTE PTR [ecx+0x9],0xf
  426e4e:	mov    BYTE PTR [eax+0x7],0x56
  426e52:	mov    BYTE PTR [ecx+0x6],0xe
  426e56:	mov    BYTE PTR [ecx+0x3],0x1f
  426e5a:	leave  
  426e5b:	ret    0x4
  426e5e:	push   ebp
  426e5f:	mov    ebp,esp
  426e61:	push   ecx
  426e62:	push   ecx
  426e63:	lea    eax,[ebp-0x8]
  426e66:	mov    DWORD PTR [ebp-0x4],eax
  426e69:	mov    edx,DWORD PTR [ebp-0x4]
  426e6c:	mov    eax,0x7e0da2f
  426e71:	mov    DWORD PTR [edx],eax
  426e73:	mov    edx,DWORD PTR [ebp-0x8]
  426e76:	cmp    edx,eax
  426e78:	jne    0x426e7e
  426e7a:	mov    BYTE PTR [ecx+0x7],0x56
  426e7e:	mov    eax,DWORD PTR [ebp+0x8]
  426e81:	mov    BYTE PTR [ecx+0x1],0x18
  426e85:	mov    BYTE PTR [eax+0x9],0x2f
  426e89:	leave  
  426e8a:	ret    0x4
  426e8d:	push   ebp
  426e8e:	mov    ebp,esp
  426e90:	push   ecx
  426e91:	push   ecx
  426e92:	lea    eax,[ebp-0x8]
  426e95:	mov    DWORD PTR [ebp-0x4],eax
  426e98:	push   esi
  426e99:	mov    esi,DWORD PTR [ebp-0x4]
  426e9c:	mov    eax,0x7060e3c
  426ea1:	mov    DWORD PTR [esi],eax
  426ea3:	mov    esi,DWORD PTR [ebp-0x8]
  426ea6:	cmp    esi,eax
  426ea8:	pop    esi
  426ea9:	jne    0x426eb5
  426eab:	mov    BYTE PTR [edx+0x4],0x12
  426eaf:	mov    WORD PTR [ecx+0x3],0x121f
  426eb5:	mov    BYTE PTR [edx],0x3e
  426eb8:	leave  
  426eb9:	ret    
  426eba:	push   ebp
  426ebb:	mov    ebp,esp
  426ebd:	push   ecx
  426ebe:	push   ecx
  426ebf:	lea    eax,[ebp-0x8]
  426ec2:	mov    DWORD PTR [ebp-0x4],eax
  426ec5:	mov    edx,DWORD PTR [ebp-0x4]
  426ec8:	mov    eax,0xf8870b3f
  426ecd:	mov    DWORD PTR [edx],eax
  426ecf:	mov    edx,DWORD PTR [ebp-0x8]
  426ed2:	cmp    edx,eax
  426ed4:	jne    0x426ee1
  426ed6:	mov    eax,DWORD PTR [ebp+0x8]
  426ed9:	mov    BYTE PTR [ecx+0x8],0xe
  426edd:	mov    BYTE PTR [eax+0x1],0x18
  426ee1:	mov    BYTE PTR [ecx+0x5],0xa
  426ee5:	leave  
  426ee6:	ret    0x4
  426ee9:	push   esi
  426eea:	mov    ecx,edi
  426eec:	call   0x426eba
  426ef1:	mov    edx,edi
  426ef3:	mov    ecx,esi
  426ef5:	mov    BYTE PTR [esi],0x1e
  426ef8:	call   0x426e8d
  426efd:	push   esi
  426efe:	mov    ecx,edi
  426f00:	mov    BYTE PTR [esi+0x5],0xa
  426f04:	call   0x426e5e
  426f09:	push   esi
  426f0a:	mov    BYTE PTR [esi+0x6],0xe
  426f0e:	call   0x426e2b
  426f13:	mov    BYTE PTR [esi+0x2],0x15
  426f17:	mov    edx,esi
  426f19:	jmp    0x426dfb
  426f1e:	push   ebp
  426f1f:	mov    ebp,esp
  426f21:	push   ecx
  426f22:	mov    ecx,DWORD PTR [edx+0x194]
  426f28:	push   esi
  426f29:	mov    esi,DWORD PTR [ebp+0x8]
  426f2c:	mov    esi,DWORD PTR [esi]
  426f2e:	mov    DWORD PTR [ecx],esi
  426f30:	mov    ecx,DWORD PTR [edx+0x194]
  426f36:	mov    ecx,DWORD PTR [ecx]
  426f38:	mov    esi,DWORD PTR [edx+0x190]
  426f3e:	mov    DWORD PTR [esi],ecx
  426f40:	mov    eax,DWORD PTR [edx+0x194]
  426f46:	mov    ecx,DWORD PTR [eax]
  426f48:	mov    ecx,DWORD PTR [ecx+0x3c]
  426f4b:	add    ecx,DWORD PTR [eax]
  426f4d:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426f54:	mov    eax,DWORD PTR [ebp-0x4]
  426f57:	movzx  ecx,WORD PTR [ecx+0x16]
  426f5b:	xor    eax,0x75108ae
  426f60:	add    eax,0x3272f5
  426f65:	pop    esi
  426f66:	test   ecx,eax
  426f68:	je     0x426f76
  426f6a:	mov    eax,DWORD PTR [edx+0x1c8]
  426f70:	mov    DWORD PTR [eax],0xf89c85a2
  426f76:	leave  
  426f77:	ret    0x4
  426f7a:	push   ebp
  426f7b:	mov    ebp,esp
  426f7d:	sub    esp,0x70
  426f80:	and    DWORD PTR [ebp-0x20],0x0
  426f84:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  426f8b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426f92:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  426f99:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426fa0:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  426fa7:	mov    eax,DWORD PTR [ebp+0x20]
  426faa:	mov    eax,DWORD PTR [eax+0x194]
  426fb0:	mov    DWORD PTR [ebp-0xc],eax
  426fb3:	mov    eax,DWORD PTR [ebp+0x20]
  426fb6:	push   ebx
  426fb7:	push   esi
  426fb8:	mov    esi,DWORD PTR [eax+0x190]
  426fbe:	mov    eax,DWORD PTR [ebp+0x20]
  426fc1:	mov    eax,DWORD PTR [eax+0x18c]
  426fc7:	mov    DWORD PTR [ebp-0x8],eax
  426fca:	mov    eax,DWORD PTR [eax]
  426fcc:	push   edi
  426fcd:	mov    DWORD PTR [ebp-0x4],esi
  426fd0:	test   eax,eax
  426fd2:	jne    0x426fdf
  426fd4:	push   DWORD PTR [ebp+0x1c]
  426fd7:	mov    edx,DWORD PTR [ebp+0x20]
  426fda:	call   0x426f1e
  426fdf:	mov    eax,DWORD PTR [esi]
  426fe1:	mov    ebx,DWORD PTR [esi]
  426fe3:	add    ebx,DWORD PTR [eax+0x3c]
  426fe6:	mov    eax,DWORD PTR [ebp+0xc]
  426fe9:	mov    ecx,DWORD PTR [ebp-0x8]
  426fec:	mov    ecx,DWORD PTR [ecx]
  426fee:	mov    esi,0x75108ae
  426ff3:	xor    eax,esi
  426ff5:	mov    edi,0x3272f5
  426ffa:	add    eax,edi
  426ffc:	cmp    eax,ecx
  426ffe:	jne    0x427236
  427004:	mov    eax,DWORD PTR [ebp-0xc]
  427007:	mov    eax,DWORD PTR [eax]
  427009:	mov    DWORD PTR [ebp-0x10],eax
  42700c:	mov    eax,DWORD PTR [ebx+0x50]
  42700f:	mov    DWORD PTR [ebp-0x68],eax
  427012:	mov    eax,DWORD PTR [ebp-0x18]
  427015:	xor    eax,esi
  427017:	add    eax,edi
  427019:	mov    DWORD PTR [ebp-0x64],eax
  42701c:	mov    eax,DWORD PTR [ebp-0x14]
  42701f:	and    DWORD PTR [ebp-0x6c],0x0
  427023:	xor    eax,esi
  427025:	add    eax,edi
  427027:	mov    DWORD PTR [ebp-0x60],eax
  42702a:	lea    eax,[ebp-0x70]
  42702d:	push   eax
  42702e:	mov    eax,DWORD PTR [ebp+0x8]
  427031:	xor    eax,esi
  427033:	add    eax,edi
  427035:	push   eax
  427036:	mov    eax,DWORD PTR [ebp+0x20]
  427039:	add    eax,0xaa
  42703e:	push   eax
  42703f:	mov    eax,DWORD PTR [ebp+0x20]
  427042:	mov    eax,DWORD PTR [eax+0x198]
  427048:	mov    DWORD PTR [ebp-0x70],0x4
  42704f:	push   DWORD PTR [eax]
  427051:	mov    eax,DWORD PTR [ebp+0x10]
  427054:	call   eax
  427056:	mov    ecx,DWORD PTR [ebp-0xc]
  427059:	mov    ecx,DWORD PTR [ecx]
  42705b:	mov    edx,DWORD PTR [ebp-0x8]
  42705e:	mov    DWORD PTR [ebp-0x6c],eax
  427061:	mov    DWORD PTR [ebp+0x1c],eax
  427064:	mov    DWORD PTR [edx],ecx
  427066:	mov    ecx,DWORD PTR [ebp-0x4]
  427069:	mov    DWORD PTR [ecx],eax
  42706b:	mov    eax,DWORD PTR [ebx+0x50]
  42706e:	mov    DWORD PTR [ebp-0x68],eax
  427071:	mov    eax,DWORD PTR [ebp-0x1c]
  427074:	xor    eax,esi
  427076:	add    eax,edi
  427078:	mov    DWORD PTR [ebp-0x64],eax
  42707b:	lea    eax,[ebp-0x20]
  42707e:	mov    DWORD PTR [ebp-0x60],eax
  427081:	lea    eax,[ebp-0x70]
  427084:	push   eax
  427085:	mov    eax,DWORD PTR [ebp+0x8]
  427088:	xor    eax,esi
  42708a:	add    eax,edi
  42708c:	push   eax
  42708d:	mov    eax,DWORD PTR [ebp+0x20]
  427090:	add    eax,0xee
  427095:	push   eax
  427096:	mov    eax,DWORD PTR [ebp+0x20]
  427099:	mov    eax,DWORD PTR [eax+0x198]
  42709f:	mov    DWORD PTR [ebp-0x70],0x4
  4270a6:	push   DWORD PTR [eax]
  4270a8:	mov    eax,DWORD PTR [ebp+0x10]
  4270ab:	call   eax
  4270ad:	test   eax,eax
  4270af:	je     0x4270d4
  4270b1:	and    DWORD PTR [ebp+0xc],0x0
  4270b5:	cmp    DWORD PTR [ebx+0x50],0x0
  4270b9:	jbe    0x4270d4
  4270bb:	mov    eax,DWORD PTR [ebp+0x1c]
  4270be:	mov    ecx,DWORD PTR [ebp-0x10]
  4270c1:	sub    ecx,eax
  4270c3:	mov    dl,BYTE PTR [ecx+eax*1]
  4270c6:	inc    DWORD PTR [ebp+0xc]
  4270c9:	mov    BYTE PTR [eax],dl
  4270cb:	mov    edx,DWORD PTR [ebp+0xc]
  4270ce:	inc    eax
  4270cf:	cmp    edx,DWORD PTR [ebx+0x50]
  4270d2:	jb     0x4270c3
  4270d4:	mov    edx,DWORD PTR [ebp+0x1c]
  4270d7:	mov    ecx,DWORD PTR [edx+0x3c]
  4270da:	add    ecx,edx
  4270dc:	mov    eax,DWORD PTR [ecx+0xa0]
  4270e2:	mov    ebx,DWORD PTR [ecx+0x28]
  4270e5:	add    eax,edx
  4270e7:	sub    edx,DWORD PTR [ebp-0x10]
  4270ea:	add    ebx,DWORD PTR [ebp+0x1c]
  4270ed:	mov    DWORD PTR [ebp+0xc],edx
  4270f0:	mov    DWORD PTR [ebp-0x2c],ecx
  4270f3:	mov    DWORD PTR [ebp-0x14],ebx
  4270f6:	mov    DWORD PTR [ebp-0x8],0x0
  4270fd:	jmp    0x427179
  4270ff:	add    edx,0xfffffff8
  427102:	shr    edx,1
  427104:	mov    DWORD PTR [ebp-0x18],edx
  427107:	je     0x427165
  427109:	lea    edx,[eax+0x8]
  42710c:	mov    DWORD PTR [ebp-0x4],edx
  42710f:	mov    edx,DWORD PTR [ebp-0x18]
  427112:	mov    DWORD PTR [ebp-0x18],edx
  427115:	mov    edx,DWORD PTR [ebp-0x4]
  427118:	movzx  edx,WORD PTR [edx]
  42711b:	mov    DWORD PTR [ebp-0x24],edx
  42711e:	and    edx,0xfff
  427124:	mov    DWORD PTR [ebp-0x28],edx
  427127:	mov    edx,DWORD PTR [ebp-0x24]
  42712a:	shr    edx,0xc
  42712d:	add    edx,0xffcd8d0b
  427133:	xor    edx,esi
  427135:	cmp    edx,0xf89c85a0
  42713b:	jne    0x42715c
  42713d:	mov    edx,DWORD PTR [ebp-0x28]
  427140:	add    edx,DWORD PTR [ebp+0x1c]
  427143:	mov    ebx,DWORD PTR [eax]
  427145:	cmp    DWORD PTR [ebx+edx*1],0x0
  427149:	je     0x427159
  42714b:	mov    ecx,DWORD PTR [ebp+0xc]
  42714e:	add    ecx,DWORD PTR [ebx+edx*1]
  427151:	mov    ebx,DWORD PTR [eax]
  427153:	mov    DWORD PTR [edx+ebx*1],ecx
  427156:	mov    ecx,DWORD PTR [ebp-0x2c]
  427159:	mov    ebx,DWORD PTR [ebp-0x14]
  42715c:	add    DWORD PTR [ebp-0x4],0x2
  427160:	dec    DWORD PTR [ebp-0x18]
  427163:	jne    0x427115
  427165:	mov    edx,DWORD PTR [ebp-0xc]
  427168:	add    DWORD PTR [ebp-0x8],edx
  42716b:	mov    edx,DWORD PTR [ebp-0x8]
  42716e:	cmp    edx,DWORD PTR [ecx+0xa4]
  427174:	jae    0x427187
  427176:	add    eax,DWORD PTR [ebp-0xc]
  427179:	mov    edx,DWORD PTR [eax+0x4]
  42717c:	mov    DWORD PTR [ebp-0xc],edx
  42717f:	test   edx,edx
  427181:	jne    0x4270ff
  427187:	mov    eax,DWORD PTR [ebp-0x10]
  42718a:	mov    DWORD PTR [ebp-0x6c],eax
  42718d:	mov    DWORD PTR [ebp-0x70],0x4
  427194:	mov    eax,DWORD PTR [ecx+0x50]
  427197:	mov    DWORD PTR [ebp-0x68],eax
  42719a:	mov    eax,DWORD PTR [ebp-0x1c]
  42719d:	xor    eax,esi
  42719f:	add    eax,edi
  4271a1:	mov    DWORD PTR [ebp-0x64],eax
  4271a4:	lea    eax,[ebp-0x20]
  4271a7:	mov    DWORD PTR [ebp-0x60],eax
  4271aa:	lea    eax,[ebp-0x70]
  4271ad:	push   eax
  4271ae:	mov    eax,DWORD PTR [ebp+0x8]
  4271b1:	xor    eax,esi
  4271b3:	add    eax,edi
  4271b5:	push   eax
  4271b6:	mov    eax,DWORD PTR [ebp+0x20]
  4271b9:	add    eax,0xee
  4271be:	push   eax
  4271bf:	mov    eax,DWORD PTR [ebp+0x20]
  4271c2:	mov    eax,DWORD PTR [eax+0x198]
  4271c8:	push   DWORD PTR [eax]
  4271ca:	mov    eax,DWORD PTR [ebp+0x10]
  4271cd:	call   eax
  4271cf:	mov    eax,DWORD PTR [ebp+0x20]
  4271d2:	mov    eax,DWORD PTR [eax+0x180]
  4271d8:	add    eax,DWORD PTR [ebp+0xc]
  4271db:	mov    ecx,DWORD PTR [ebp+0xc]
  4271de:	push   DWORD PTR [ebp+0x18]
  4271e1:	mov    DWORD PTR [eax],ecx
  4271e3:	push   DWORD PTR [ebp+0x14]
  4271e6:	push   DWORD PTR [ebp+0x1c]
  4271e9:	call   ebx
  4271eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271ee:	add    ecx,DWORD PTR [ebp+0x20]
  4271f1:	lea    eax,[ebp+0x4]
  4271f4:	mov    DWORD PTR [ebp+0x20],ecx
  4271f7:	mov    ecx,DWORD PTR [ebp+0x20]
  4271fa:	mov    ecx,DWORD PTR [ebp+0x20]
  4271fd:	mov    edx,DWORD PTR [ecx+0x190]
  427203:	mov    ecx,DWORD PTR [ebp+0x20]
  427206:	mov    ecx,DWORD PTR [ecx+0x18c]
  42720c:	mov    esi,DWORD PTR [ecx]
  42720e:	cmp    DWORD PTR [eax],esi
  427210:	jb     0x427231
  427212:	mov    esi,DWORD PTR [edx]
  427214:	mov    edi,DWORD PTR [edx]
  427216:	mov    esi,DWORD PTR [esi+0x3c]
  427219:	lea    esi,[edi+esi*1+0x50]
  42721d:	mov    edi,DWORD PTR [ecx]
  42721f:	add    edi,DWORD PTR [esi]
  427221:	cmp    DWORD PTR [eax],edi
  427223:	jae    0x427231
  427225:	mov    esi,DWORD PTR [ecx]
  427227:	mov    ecx,DWORD PTR [eax]
  427229:	mov    edx,DWORD PTR [edx]
  42722b:	sub    ecx,esi
  42722d:	add    edx,ecx
  42722f:	mov    DWORD PTR [eax],edx
  427231:	mov    eax,DWORD PTR [ebp+0xc]
  427234:	jmp    0x427238
  427236:	xor    eax,eax
  427238:	pop    edi
  427239:	pop    esi
  42723a:	pop    ebx
  42723b:	leave  
  42723c:	ret    0x1c
  42723f:	push   ebp
  427240:	mov    ebp,esp
  427242:	sub    esp,0x1c
  427245:	push   esi
  427246:	mov    esi,eax
  427248:	mov    eax,DWORD PTR [ecx+0x190]
  42724e:	cmp    DWORD PTR [eax],0x0
  427251:	je     0x427361
  427257:	test   edx,edx
  427259:	je     0x427361
  42725f:	test   esi,esi
  427261:	je     0x427361
  427267:	mov    eax,DWORD PTR [esi+0x88]
  42726d:	test   eax,eax
  42726f:	je     0x42735c
  427275:	cmp    DWORD PTR [esi+0x8c],0x10
  42727c:	je     0x42735c
  427282:	cmp    DWORD PTR [esi+0x34],edx
  427285:	je     0x42735c
  42728b:	mov    esi,DWORD PTR [ecx+0x18c]
  427291:	and    DWORD PTR [ebp-0x10],0x0
  427295:	mov    ecx,edx
  427297:	sub    ecx,DWORD PTR [esi]
  427299:	add    eax,edx
  42729b:	movzx  edx,WORD PTR [eax+0xc]
  42729f:	mov    DWORD PTR [ebp-0x1c],ecx
  4272a2:	movzx  ecx,WORD PTR [eax+0xe]
  4272a6:	add    ecx,edx
  4272a8:	je     0x42735c
  4272ae:	lea    ecx,[eax+0x14]
  4272b1:	push   ebx
  4272b2:	mov    DWORD PTR [ebp-0x18],ecx
  4272b5:	mov    esi,0x7fffffff
  4272ba:	push   edi
  4272bb:	test   DWORD PTR [ecx],esi
  4272bd:	je     0x42733e
  4272bf:	mov    edx,DWORD PTR [ecx]
  4272c1:	and    DWORD PTR [ebp-0xc],0x0
  4272c5:	and    edx,esi
  4272c7:	add    edx,eax
  4272c9:	movzx  edi,WORD PTR [edx+0xe]
  4272cd:	movzx  ebx,WORD PTR [edx+0xc]
  4272d1:	add    edi,ebx
  4272d3:	je     0x42733e
  4272d5:	lea    ecx,[edx+0x14]
  4272d8:	mov    DWORD PTR [ebp-0x14],ecx
  4272db:	test   DWORD PTR [ecx],esi
  4272dd:	je     0x427320
  4272df:	mov    ecx,DWORD PTR [ecx]
  4272e1:	and    DWORD PTR [ebp-0x8],0x0
  4272e5:	and    ecx,esi
  4272e7:	add    ecx,eax
  4272e9:	movzx  edi,WORD PTR [ecx+0xe]
  4272ed:	movzx  ebx,WORD PTR [ecx+0xc]
  4272f1:	add    edi,ebx
  4272f3:	je     0x427320
  4272f5:	lea    edi,[ecx+0x14]
  4272f8:	mov    DWORD PTR [ebp-0x4],edi
  4272fb:	mov    edi,DWORD PTR [ebp-0x4]
  4272fe:	mov    edi,DWORD PTR [edi]
  427300:	test   edi,edi
  427302:	je     0x42730a
  427304:	mov    ebx,DWORD PTR [ebp-0x1c]
  427307:	add    DWORD PTR [edi+eax*1],ebx
  42730a:	movzx  edi,WORD PTR [ecx+0xe]
  42730e:	movzx  ebx,WORD PTR [ecx+0xc]
  427312:	inc    DWORD PTR [ebp-0x8]
  427315:	add    DWORD PTR [ebp-0x4],0x8
  427319:	add    edi,ebx
  42731b:	cmp    DWORD PTR [ebp-0x8],edi
  42731e:	jb     0x4272fb
  427320:	movzx  edi,WORD PTR [edx+0xe]
  427324:	movzx  ebx,WORD PTR [edx+0xc]
  427328:	mov    ecx,DWORD PTR [ebp-0x14]
  42732b:	inc    DWORD PTR [ebp-0xc]
  42732e:	add    ecx,0x8
  427331:	add    edi,ebx
  427333:	mov    DWORD PTR [ebp-0x14],ecx
  427336:	cmp    DWORD PTR [ebp-0xc],edi
  427339:	jb     0x4272db
  42733b:	mov    ecx,DWORD PTR [ebp-0x18]
  42733e:	movzx  edx,WORD PTR [eax+0xe]
  427342:	movzx  edi,WORD PTR [eax+0xc]
  427346:	inc    DWORD PTR [ebp-0x10]
  427349:	add    ecx,0x8
  42734c:	add    edx,edi
  42734e:	mov    DWORD PTR [ebp-0x18],ecx
  427351:	cmp    DWORD PTR [ebp-0x10],edx
  427354:	jb     0x4272bb
  42735a:	pop    edi
  42735b:	pop    ebx
  42735c:	xor    eax,eax
  42735e:	inc    eax
  42735f:	jmp    0x427363
  427361:	xor    eax,eax
  427363:	pop    esi
  427364:	leave  
  427365:	ret    
  427366:	push   ebp
  427367:	mov    ebp,esp
  427369:	mov    ecx,DWORD PTR [ecx+0x190]
  42736f:	mov    eax,DWORD PTR [ebp+0xc]
  427372:	sub    esp,0x10
  427375:	push   ebx
  427376:	xor    ebx,ebx
  427378:	push   esi
  427379:	push   edi
  42737a:	cmp    DWORD PTR [ecx],ebx
  42737c:	je     0x427404
  427382:	cmp    eax,ebx
  427384:	je     0x427404
  427386:	cmp    DWORD PTR [eax+0x78],ebx
  427389:	jne    0x427390
  42738b:	xor    eax,eax
  42738d:	inc    eax
  42738e:	jmp    0x427406
  427390:	mov    eax,DWORD PTR [eax+0x78]
  427393:	add    eax,DWORD PTR [ebp+0x8]
  427396:	mov    ecx,DWORD PTR [eax+0x1c]
  427399:	mov    edx,DWORD PTR [eax+0x24]
  42739c:	mov    esi,DWORD PTR [eax+0x14]
  42739f:	mov    edi,DWORD PTR [eax+0x18]
  4273a2:	add    ecx,DWORD PTR [ebp+0x8]
  4273a5:	add    edx,DWORD PTR [ebp+0x8]
  4273a8:	mov    DWORD PTR [ebp-0x4],esi
  4273ab:	cmp    esi,edi
  4273ad:	ja     0x4273b2
  4273af:	mov    DWORD PTR [ebp-0x4],edi
  4273b2:	mov    DWORD PTR [ebp-0x8],ebx
  4273b5:	cmp    DWORD PTR [ebp-0x4],ebx
  4273b8:	jbe    0x42738b
  4273ba:	cmp    ebx,DWORD PTR [eax+0x14]
  4273bd:	jae    0x4273c5
  4273bf:	movzx  esi,WORD PTR [edx+ebx*2]
  4273c3:	jmp    0x4273c7
  4273c5:	mov    esi,ebx
  4273c7:	lea    esi,[ecx+esi*4]
  4273ca:	mov    edi,DWORD PTR [esi]
  4273cc:	test   edi,edi
  4273ce:	je     0x4273f9
  4273d0:	add    edi,DWORD PTR [ebp+0x8]
  4273d3:	mov    DWORD PTR [ebp-0x10],edi
  4273d6:	cmp    edi,eax
  4273d8:	jbe    0x4273ea
  4273da:	mov    ebx,DWORD PTR [ebp+0xc]
  4273dd:	mov    ebx,DWORD PTR [ebx+0x7c]
  4273e0:	add    ebx,eax
  4273e2:	cmp    edi,ebx
  4273e4:	jae    0x4273ea
  4273e6:	mov    esi,DWORD PTR [esi]
  4273e8:	jmp    0x4273f2
  4273ea:	sub    edi,DWORD PTR [ebp+0x8]
  4273ed:	mov    DWORD PTR [esi],edi
  4273ef:	mov    esi,DWORD PTR [ebp-0x10]
  4273f2:	test   esi,esi
  4273f4:	je     0x427404
  4273f6:	mov    ebx,DWORD PTR [ebp-0x8]
  4273f9:	inc    ebx
  4273fa:	mov    DWORD PTR [ebp-0x8],ebx
  4273fd:	cmp    ebx,DWORD PTR [ebp-0x4]
  427400:	jb     0x4273ba
  427402:	jmp    0x42738b
  427404:	xor    eax,eax
  427406:	pop    edi
  427407:	pop    esi
  427408:	pop    ebx
  427409:	leave  
  42740a:	ret    0x8
  42740d:	push   ebp
  42740e:	mov    ebp,esp
  427410:	sub    esp,0x2c
  427413:	mov    edx,0xf89c85a5
  427418:	mov    DWORD PTR [ebp-0x4],edx
  42741b:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  427422:	mov    eax,DWORD PTR [ebp-0x4]
  427425:	mov    ecx,DWORD PTR [ebp-0x4]
  427428:	mov    ecx,DWORD PTR [ebp-0x4]
  42742b:	mov    ecx,DWORD PTR [ebp-0x4]
  42742e:	mov    ecx,DWORD PTR [ebp-0x4]
  427431:	mov    ecx,DWORD PTR [ebp-0x4]
  427434:	push   ebx
  427435:	mov    ebx,DWORD PTR [ebp+0x10]
  427438:	push   esi
  427439:	mov    esi,0x75108ae
  42743e:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  427445:	mov    ecx,DWORD PTR [ebp-0x4]
  427448:	mov    ebx,DWORD PTR [ebx+0x190]
  42744e:	push   edi
  42744f:	mov    edi,0x3272f5
  427454:	xor    ecx,esi
  427456:	xor    eax,esi
  427458:	add    eax,edi
  42745a:	add    ecx,edi
  42745c:	mov    DWORD PTR [ebp-0x18],eax
  42745f:	cmp    ecx,DWORD PTR [ebx]
  427461:	je     0x4276e2
  427467:	mov    ebx,DWORD PTR [ebp-0x4]
  42746a:	mov    ecx,DWORD PTR [ebp+0xc]
  42746d:	xor    ebx,esi
  42746f:	add    ebx,edi
  427471:	cmp    ebx,ecx
  427473:	je     0x4276e2
  427479:	mov    ebx,DWORD PTR [ebp-0x4]
  42747c:	mov    ecx,DWORD PTR [ecx+0x80]
  427482:	xor    ebx,esi
  427484:	add    ebx,edi
  427486:	cmp    ecx,ebx
  427488:	je     0x4276dd
  42748e:	add    ecx,DWORD PTR [ebp+0x8]
  427491:	mov    DWORD PTR [ebp-0x2c],ecx
  427494:	mov    ebx,edx
  427496:	xor    ebx,esi
  427498:	add    ebx,edi
  42749a:	mov    DWORD PTR [ebp-0x10],ebx
  42749d:	mov    ebx,DWORD PTR [ebp-0x10]
  4274a0:	cmp    ebx,edx
  4274a2:	je     0x4274b6
  4274a4:	mov    edx,DWORD PTR [ebp-0x10]
  4274a7:	mov    ebx,DWORD PTR [ebp-0x4]
  4274aa:	imul   edx,edx,0x14
  4274ad:	xor    ebx,esi
  4274af:	add    ebx,edi
  4274b1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4274b4:	jne    0x4274cd
  4274b6:	mov    edx,DWORD PTR [ebp-0x10]
  4274b9:	mov    ebx,DWORD PTR [ebp-0x4]
  4274bc:	imul   edx,edx,0x14
  4274bf:	xor    ebx,esi
  4274c1:	add    ebx,edi
  4274c3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4274c7:	je     0x4276cf
  4274cd:	mov    eax,DWORD PTR [ebp-0x4]
  4274d0:	mov    ebx,DWORD PTR [ebp-0x4]
  4274d3:	mov    eax,DWORD PTR [ebp-0x10]
  4274d6:	imul   eax,eax,0x14
  4274d9:	add    eax,ecx
  4274db:	mov    ecx,DWORD PTR [eax+0x10]
  4274de:	add    ecx,DWORD PTR [ebp+0x8]
  4274e1:	xor    ebx,esi
  4274e3:	mov    DWORD PTR [ebp-0x1c],ecx
  4274e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e9:	mov    edx,DWORD PTR [ebp-0x4]
  4274ec:	xor    ecx,esi
  4274ee:	add    ecx,edi
  4274f0:	xor    edx,esi
  4274f2:	mov    DWORD PTR [ebp-0x24],ecx
  4274f5:	mov    ecx,DWORD PTR [eax]
  4274f7:	add    edx,edi
  4274f9:	add    ebx,edi
  4274fb:	cmp    ecx,edx
  4274fd:	je     0x427505
  4274ff:	add    ecx,DWORD PTR [ebp+0x8]
  427502:	mov    DWORD PTR [ebp-0x24],ecx
  427505:	mov    ecx,DWORD PTR [ebp-0x4]
  427508:	xor    ecx,esi
  42750a:	add    ecx,DWORD PTR [eax+0xc]
  42750d:	mov    eax,DWORD PTR [ebp+0x8]
  427510:	lea    eax,[ecx+eax*1+0x3272f5]
  427517:	mov    DWORD PTR [ebp+0xc],eax
  42751a:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  427521:	mov    eax,DWORD PTR [ebp+0x10]
  427524:	push   DWORD PTR [ebp+0xc]
  427527:	mov    eax,DWORD PTR [eax+0x1e0]
  42752d:	call   DWORD PTR [eax]
  42752f:	mov    ecx,DWORD PTR [ebp-0x4]
  427532:	xor    ecx,esi
  427534:	add    ecx,edi
  427536:	mov    DWORD PTR [ebp-0xc],eax
  427539:	cmp    ecx,eax
  42753b:	jne    0x42754f
  42753d:	mov    eax,DWORD PTR [ebp+0x10]
  427540:	push   DWORD PTR [ebp+0xc]
  427543:	mov    eax,DWORD PTR [eax+0x1e0]
  427549:	call   DWORD PTR [eax+0xc]
  42754c:	mov    DWORD PTR [ebp-0xc],eax
  42754f:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  427556:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  42755d:	mov    eax,DWORD PTR [ebp-0x4]
  427560:	xor    eax,esi
  427562:	add    eax,edi
  427564:	cmp    eax,DWORD PTR [ebp-0xc]
  427567:	jne    0x42758c
  427569:	mov    eax,DWORD PTR [ebp-0x8]
  42756c:	mov    ecx,DWORD PTR [ebp-0x20]
  42756f:	xor    eax,esi
  427571:	xor    ecx,esi
  427573:	lea    ebx,[ebx+eax*1+0x3272f5]
  42757a:	mov    eax,DWORD PTR [ebp+0x10]
  42757d:	mov    eax,DWORD PTR [eax+0x1e0]
  427583:	add    ecx,edi
  427585:	imul   ecx,ebx
  427588:	push   ecx
  427589:	call   DWORD PTR [eax+0x24]
  42758c:	mov    eax,DWORD PTR [ebp-0x4]
  42758f:	xor    eax,esi
  427591:	add    eax,edi
  427593:	cmp    eax,DWORD PTR [ebp-0xc]
  427596:	jne    0x4275a7
  427598:	mov    eax,DWORD PTR [ebp-0x28]
  42759b:	xor    eax,esi
  42759d:	add    eax,edi
  42759f:	cmp    ebx,eax
  4275a1:	jbe    0x427521
  4275a7:	mov    eax,DWORD PTR [ebp-0x4]
  4275aa:	xor    eax,esi
  4275ac:	add    eax,edi
  4275ae:	cmp    eax,DWORD PTR [ebp-0xc]
  4275b1:	jne    0x4275ca
  4275b3:	mov    eax,DWORD PTR [ebp-0x8]
  4275b6:	mov    ecx,DWORD PTR [ebp-0x18]
  4275b9:	xor    eax,esi
  4275bb:	lea    eax,[ecx+eax*1+0x3272f5]
  4275c2:	mov    DWORD PTR [ebp-0x18],eax
  4275c5:	jmp    0x4276b9
  4275ca:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  4275d1:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4275d8:	mov    ebx,DWORD PTR [ebp-0x4]
  4275db:	xor    ebx,esi
  4275dd:	add    ebx,edi
  4275df:	jmp    0x4276a6
  4275e4:	mov    eax,DWORD PTR [ebp-0x4]
  4275e7:	xor    eax,esi
  4275e9:	add    eax,edi
  4275eb:	mov    DWORD PTR [ebp-0x14],eax
  4275ee:	mov    eax,DWORD PTR [ebp-0x4]
  4275f1:	xor    eax,esi
  4275f3:	add    eax,edi
  4275f5:	mov    DWORD PTR [ebp+0xc],eax
  4275f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275fb:	mov    eax,DWORD PTR [ebp-0x24]
  4275fe:	xor    ecx,esi
  427600:	add    ecx,edi
  427602:	cmp    ecx,eax
  427604:	je     0x42760c
  427606:	mov    eax,DWORD PTR [eax+ebx*4]
  427609:	mov    DWORD PTR [ebp-0x14],eax
  42760c:	mov    eax,DWORD PTR [ebp-0x1c]
  42760f:	mov    eax,DWORD PTR [eax+ebx*4]
  427612:	mov    DWORD PTR [ebp+0xc],eax
  427615:	mov    eax,DWORD PTR [ebp-0x4]
  427618:	mov    ecx,DWORD PTR [ebp-0x14]
  42761b:	xor    eax,esi
  42761d:	add    eax,edi
  42761f:	cmp    eax,ecx
  427621:	je     0x42764c
  427623:	mov    eax,DWORD PTR [ebp-0x4]
  427626:	mov    ecx,DWORD PTR [ebp-0x14]
  427629:	xor    eax,esi
  42762b:	add    eax,edi
  42762d:	shr    ecx,0x1f
  427630:	cmp    eax,ecx
  427632:	je     0x42764c
  427634:	mov    ecx,DWORD PTR [ebp-0x14]
  427637:	mov    eax,DWORD PTR [ebp+0x10]
  42763a:	mov    eax,DWORD PTR [eax+0x1e0]
  427640:	movzx  ecx,cx
  427643:	push   ecx
  427644:	push   DWORD PTR [ebp-0xc]
  427647:	call   DWORD PTR [eax+0x8]
  42764a:	jmp    0x427665
  42764c:	mov    eax,DWORD PTR [ebp+0xc]
  42764f:	add    eax,DWORD PTR [ebp+0x8]
  427652:	mov    ecx,DWORD PTR [ebp+0x10]
  427655:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42765b:	add    eax,0x2
  42765e:	push   eax
  42765f:	push   DWORD PTR [ebp-0xc]
  427662:	call   DWORD PTR [ecx+0x8]
  427665:	mov    DWORD PTR [ebp+0xc],eax
  427668:	mov    eax,DWORD PTR [ebp-0x4]
  42766b:	mov    ecx,DWORD PTR [ebp+0xc]
  42766e:	xor    eax,esi
  427670:	add    eax,edi
  427672:	cmp    eax,ecx
  427674:	mov    eax,DWORD PTR [ebp-0x8]
  427677:	jne    0x42768a
  427679:	mov    ecx,DWORD PTR [ebp-0x18]
  42767c:	xor    eax,esi
  42767e:	lea    eax,[ecx+eax*1+0x3272f5]
  427685:	mov    DWORD PTR [ebp-0x18],eax
  427688:	jmp    0x42769a
  42768a:	mov    ecx,DWORD PTR [ebp+0xc]
  42768d:	xor    eax,esi
  42768f:	add    eax,edi
  427691:	imul   eax,ecx
  427694:	mov    ecx,DWORD PTR [ebp-0x1c]
  427697:	mov    DWORD PTR [ecx+ebx*4],eax
  42769a:	mov    eax,DWORD PTR [ebp-0x8]
  42769d:	xor    eax,esi
  42769f:	lea    ebx,[ebx+eax*1+0x3272f5]
  4276a6:	mov    eax,DWORD PTR [ebp-0x4]
  4276a9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4276ac:	xor    eax,esi
  4276ae:	add    eax,edi
  4276b0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4276b3:	jne    0x4275e4
  4276b9:	mov    edx,DWORD PTR [ebp-0x10]
  4276bc:	mov    eax,DWORD PTR [ebp-0x18]
  4276bf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4276c2:	sub    edx,0x3272f4
  4276c8:	xor    edx,esi
  4276ca:	jmp    0x427494
  4276cf:	mov    ecx,DWORD PTR [ebp-0x4]
  4276d2:	xor    ecx,esi
  4276d4:	add    ecx,edi
  4276d6:	cmp    eax,ecx
  4276d8:	mov    eax,DWORD PTR [ebp-0x4]
  4276db:	jne    0x4276e5
  4276dd:	mov    eax,DWORD PTR [ebp-0x8]
  4276e0:	jmp    0x4276e5
  4276e2:	mov    eax,DWORD PTR [ebp-0x4]
  4276e5:	xor    eax,esi
  4276e7:	add    eax,edi
  4276e9:	pop    edi
  4276ea:	pop    esi
  4276eb:	pop    ebx
  4276ec:	leave  
  4276ed:	ret    0xc
  4276f0:	push   ebp
  4276f1:	mov    ebp,esp
  4276f3:	sub    esp,0x28
  4276f6:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4276fd:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  427704:	mov    eax,DWORD PTR [ebp+0xc]
  427707:	mov    DWORD PTR [ebp+0xc],eax
  42770a:	push   esi
  42770b:	mov    eax,eax
  42770d:	mov    eax,DWORD PTR [ebp-0x4]
  427710:	mov    esi,DWORD PTR [ebp+0x8]
  427713:	mov    ecx,0x75108ae
  427718:	xor    eax,ecx
  42771a:	mov    edx,0x3272f5
  42771f:	add    eax,edx
  427721:	cmp    esi,eax
  427723:	je     0x42784a
  427729:	mov    eax,DWORD PTR [ebp+0x8]
  42772c:	mov    esi,DWORD PTR [ebp+0x8]
  42772f:	add    esi,DWORD PTR [eax+0x3c]
  427732:	push   edi
  427733:	mov    DWORD PTR [ebp+0xc],esi
  427736:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42773d:	mov    eax,DWORD PTR [ebp-0x1c]
  427740:	mov    esi,DWORD PTR [ebp-0x4]
  427743:	mov    edi,DWORD PTR [ebp+0xc]
  427746:	xor    esi,ecx
  427748:	xor    eax,ecx
  42774a:	add    esi,edx
  42774c:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  427753:	je     0x427844
  427759:	mov    esi,DWORD PTR [ebp+0xc]
  42775c:	mov    eax,DWORD PTR [ebp+0x8]
  42775f:	add    eax,DWORD PTR [esi+0xa0]
  427765:	mov    esi,DWORD PTR [ebp+0x8]
  427768:	mov    edi,DWORD PTR [ebp+0xc]
  42776b:	sub    esi,DWORD PTR [edi+0x34]
  42776e:	mov    edi,DWORD PTR [ebp-0x4]
  427771:	xor    edi,ecx
  427773:	add    edi,edx
  427775:	mov    DWORD PTR [ebp-0x24],esi
  427778:	cmp    esi,edi
  42777a:	je     0x427844
  427780:	mov    esi,DWORD PTR [ebp-0x4]
  427783:	xor    esi,ecx
  427785:	add    esi,edx
  427787:	mov    DWORD PTR [ebp-0x8],esi
  42778a:	push   ebx
  42778b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  427792:	jmp    0x42782e
  427797:	mov    esi,DWORD PTR [ebp-0x4]
  42779a:	xor    esi,ecx
  42779c:	lea    edi,[ebx-0x8]
  42779f:	add    esi,edx
  4277a1:	shr    edi,1
  4277a3:	cmp    esi,edi
  4277a5:	jae    0x427814
  4277a7:	sub    edi,esi
  4277a9:	lea    ebx,[eax+esi*2+0x8]
  4277ad:	mov    DWORD PTR [ebp-0x18],edi
  4277b0:	movzx  esi,WORD PTR [ebx]
  4277b3:	and    esi,0xfff
  4277b9:	mov    DWORD PTR [ebp-0x14],esi
  4277bc:	mov    edi,DWORD PTR [ebp-0x14]
  4277bf:	mov    esi,DWORD PTR [eax]
  4277c1:	sub    esi,edx
  4277c3:	add    edi,esi
  4277c5:	movzx  esi,WORD PTR [ebx]
  4277c8:	shr    esi,0xc
  4277cb:	xor    edi,ecx
  4277cd:	mov    DWORD PTR [ebp-0x20],edi
  4277d0:	mov    DWORD PTR [ebp-0x14],esi
  4277d3:	mov    esi,DWORD PTR [ebp-0x20]
  4277d6:	mov    edi,DWORD PTR [ebp+0x8]
  4277d9:	xor    esi,ecx
  4277db:	lea    esi,[esi+edi*1+0x3272f5]
  4277e2:	mov    DWORD PTR [ebp-0x20],esi
  4277e5:	mov    esi,DWORD PTR [ebp-0x10]
  4277e8:	mov    edi,DWORD PTR [ebp-0x14]
  4277eb:	xor    esi,ecx
  4277ed:	add    esi,edx
  4277ef:	cmp    edi,esi
  4277f1:	jne    0x427809
  4277f3:	mov    esi,DWORD PTR [ebp-0x10]
  4277f6:	mov    edi,DWORD PTR [ebp-0x14]
  4277f9:	xor    esi,ecx
  4277fb:	add    esi,edx
  4277fd:	cmp    edi,esi
  4277ff:	jne    0x427809
  427801:	mov    esi,DWORD PTR [ebp-0x20]
  427804:	mov    edi,DWORD PTR [ebp-0x24]
  427807:	add    DWORD PTR [esi],edi
  427809:	add    ebx,0x2
  42780c:	dec    DWORD PTR [ebp-0x18]
  42780f:	jne    0x4277b0
  427811:	mov    ebx,DWORD PTR [ebp-0xc]
  427814:	add    DWORD PTR [ebp-0x8],ebx
  427817:	mov    esi,DWORD PTR [ebp-0x1c]
  42781a:	mov    edi,DWORD PTR [ebp-0x8]
  42781d:	mov    ebx,DWORD PTR [ebp+0xc]
  427820:	xor    esi,ecx
  427822:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  427829:	jae    0x427843
  42782b:	add    eax,DWORD PTR [ebp-0xc]
  42782e:	mov    esi,DWORD PTR [ebp-0x4]
  427831:	mov    ebx,DWORD PTR [eax+0x4]
  427834:	xor    esi,ecx
  427836:	add    esi,edx
  427838:	mov    DWORD PTR [ebp-0xc],ebx
  42783b:	cmp    ebx,esi
  42783d:	jne    0x427797
  427843:	pop    ebx
  427844:	mov    eax,DWORD PTR [ebp-0x28]
  427847:	pop    edi
  427848:	jmp    0x42784d
  42784a:	mov    eax,DWORD PTR [ebp-0x4]
  42784d:	xor    eax,ecx
  42784f:	add    eax,edx
  427851:	pop    esi
  427852:	leave  
  427853:	ret    0x8
  427856:	push   ebp
  427857:	mov    ebp,esp
  427859:	sub    esp,0xd8
  42785f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427866:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42786d:	mov    eax,DWORD PTR [ebp-0x4]
  427870:	push   ebx
  427871:	push   esi
  427872:	mov    esi,0x75108ae
  427877:	xor    eax,esi
  427879:	push   edi
  42787a:	mov    edi,0x3272f5
  42787f:	add    eax,edi
  427881:	mov    DWORD PTR [ebp-0x18],eax
  427884:	mov    eax,DWORD PTR [ebp-0x4]
  427887:	xor    eax,esi
  427889:	add    eax,edi
  42788b:	mov    DWORD PTR [ebp-0x8],eax
  42788e:	mov    ebx,DWORD PTR [ebp+0x20]
  427891:	mov    eax,DWORD PTR [ebp-0x1c]
  427894:	mov    ecx,DWORD PTR [ebp-0x1c]
  427897:	xor    eax,ecx
  427899:	mov    DWORD PTR [ebp-0x1c],eax
  42789c:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4278a3:	mov    eax,DWORD PTR [ebp-0xc]
  4278a6:	mov    ecx,DWORD PTR [ebp-0xc]
  4278a9:	xor    eax,ecx
  4278ab:	mov    DWORD PTR [ebp-0xc],eax
  4278ae:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4278b5:	mov    eax,DWORD PTR [ebp-0x10]
  4278b8:	mov    ecx,DWORD PTR [ebp-0x10]
  4278bb:	xor    eax,ecx
  4278bd:	mov    DWORD PTR [ebp-0x10],eax
  4278c0:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  4278c7:	mov    eax,DWORD PTR [ebp-0x28]
  4278ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4278cd:	xor    eax,ecx
  4278cf:	mov    DWORD PTR [ebp-0x28],eax
  4278d2:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4278d9:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4278e0:	mov    eax,DWORD PTR [ebp+0x8]
  4278e3:	test   eax,eax
  4278e5:	je     0x427d6c
  4278eb:	mov    eax,DWORD PTR [ebp+0xc]
  4278ee:	test   eax,eax
  4278f0:	je     0x427d6c
  4278f6:	mov    eax,DWORD PTR [ebp+0x18]
  4278f9:	test   eax,eax
  4278fb:	je     0x427d6c
  427901:	mov    eax,DWORD PTR [ebp+0x20]
  427904:	mov    ecx,DWORD PTR [ebp+0x8]
  427907:	xor    eax,0x8ae
  42790c:	add    eax,0x72f5
  427911:	cmp    WORD PTR [ecx],ax
  427914:	jne    0x427d6c
  42791a:	mov    eax,DWORD PTR [ebp-0x4]
  42791d:	xor    eax,esi
  42791f:	add    eax,edi
  427921:	mov    DWORD PTR [ebp-0x30],eax
  427924:	mov    eax,DWORD PTR [ebp-0x4]
  427927:	mov    ecx,DWORD PTR [ebp+0x8]
  42792a:	mov    eax,DWORD PTR [ebp+0x8]
  42792d:	add    eax,DWORD PTR [ecx+0x3c]
  427930:	mov    DWORD PTR [ebp+0xc],eax
  427933:	mov    eax,DWORD PTR [eax+0x50]
  427936:	test   eax,eax
  427938:	je     0x427d6c
  42793e:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427945:	mov    eax,DWORD PTR [ebp-0x2c]
  427948:	xor    eax,esi
  42794a:	add    eax,edi
  42794c:	mov    DWORD PTR [ebp-0x2c],eax
  42794f:	mov    eax,DWORD PTR [ebp-0x4]
  427952:	mov    eax,DWORD PTR [ebx+0x190]
  427958:	mov    ecx,DWORD PTR [eax]
  42795a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42795d:	add    ecx,DWORD PTR [eax]
  42795f:	mov    eax,DWORD PTR [ebp-0x4]
  427962:	mov    eax,DWORD PTR [ebx+0x18c]
  427968:	mov    edx,DWORD PTR [eax]
  42796a:	mov    DWORD PTR [ebp-0x20],ecx
  42796d:	mov    DWORD PTR [ebp+0x20],edx
  427970:	cmp    edx,edx
  427972:	jne    0x4279a6
  427974:	mov    eax,DWORD PTR [ebx+0x1e0]
  42797a:	lea    edx,[ebp-0x18]
  42797d:	push   edx
  42797e:	mov    edx,DWORD PTR [ebp-0xc]
  427981:	xor    edx,esi
  427983:	add    edx,edi
  427985:	push   edx
  427986:	push   DWORD PTR [ecx+0x50]
  427989:	push   DWORD PTR [ebp+0x20]
  42798c:	call   DWORD PTR [eax+0x1c]
  42798f:	mov    eax,DWORD PTR [ebp-0x20]
  427992:	mov    ecx,DWORD PTR [eax+0x54]
  427995:	mov    eax,DWORD PTR [eax+0x50]
  427998:	sub    eax,ecx
  42799a:	add    ecx,DWORD PTR [ebp+0x20]
  42799d:	push   ecx
  42799e:	call   0x428309
  4279a3:	mov    edx,DWORD PTR [ebp+0x20]
  4279a6:	mov    eax,DWORD PTR [ebx+0x194]
  4279ac:	mov    DWORD PTR [eax],edx
  4279ae:	mov    eax,DWORD PTR [ebp+0xc]
  4279b1:	push   DWORD PTR [eax+0x54]
  4279b4:	push   DWORD PTR [ebp+0x8]
  4279b7:	push   edx
  4279b8:	call   0x4281ff
  4279bd:	mov    ecx,DWORD PTR [ebp+0x20]
  4279c0:	mov    eax,DWORD PTR [ecx+0x3c]
  4279c3:	add    eax,ecx
  4279c5:	movzx  ecx,WORD PTR [eax+0x14]
  4279c9:	lea    ecx,[ecx+eax*1+0x18]
  4279cd:	mov    DWORD PTR [ebp+0x18],ecx
  4279d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4279d3:	movzx  edx,WORD PTR [eax+0x6]
  4279d7:	xor    ecx,esi
  4279d9:	add    ecx,edi
  4279db:	mov    DWORD PTR [ebp+0xc],eax
  4279de:	cmp    edx,ecx
  4279e0:	je     0x427a8d
  4279e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4279e9:	xor    ecx,esi
  4279eb:	add    ecx,edi
  4279ed:	mov    DWORD PTR [ebp-0x8],ecx
  4279f0:	mov    ecx,DWORD PTR [ebp-0x24]
  4279f3:	movzx  edx,WORD PTR [eax+0x6]
  4279f7:	xor    ecx,esi
  4279f9:	sub    edx,ecx
  4279fb:	sub    edx,edi
  4279fd:	cmp    DWORD PTR [ebp-0x8],edx
  427a00:	ja     0x427a8d
  427a06:	mov    edx,DWORD PTR [ebp+0x18]
  427a09:	add    edx,0x8
  427a0c:	mov    DWORD PTR [ebp+0x18],edx
  427a0f:	jmp    0x427a14
  427a11:	mov    edx,DWORD PTR [ebp+0x18]
  427a14:	mov    eax,DWORD PTR [eax+0x38]
  427a17:	lea    ecx,[eax-0x1]
  427a1a:	mov    DWORD PTR [ebp-0x38],eax
  427a1d:	mov    eax,DWORD PTR [edx]
  427a1f:	test   eax,ecx
  427a21:	je     0x427a2a
  427a23:	not    ecx
  427a25:	and    eax,ecx
  427a27:	add    eax,DWORD PTR [ebp-0x38]
  427a2a:	mov    ecx,DWORD PTR [edx+0x4]
  427a2d:	add    ecx,DWORD PTR [ebp+0x20]
  427a30:	push   ecx
  427a31:	call   0x428309
  427a36:	mov    edx,DWORD PTR [ebp-0x4]
  427a39:	mov    eax,DWORD PTR [ebp+0x18]
  427a3c:	mov    ecx,DWORD PTR [eax+0x8]
  427a3f:	xor    edx,esi
  427a41:	add    edx,edi
  427a43:	cmp    ecx,edx
  427a45:	je     0x427a5e
  427a47:	push   ecx
  427a48:	mov    ecx,DWORD PTR [ebp+0x8]
  427a4b:	add    ecx,DWORD PTR [eax+0xc]
  427a4e:	mov    eax,DWORD PTR [eax+0x4]
  427a51:	add    eax,DWORD PTR [ebp+0x20]
  427a54:	push   ecx
  427a55:	push   eax
  427a56:	call   0x4281ff
  427a5b:	mov    eax,DWORD PTR [ebp+0x18]
  427a5e:	mov    ecx,DWORD PTR [ebp-0x24]
  427a61:	mov    edx,DWORD PTR [ebp-0x8]
  427a64:	add    eax,0x28
  427a67:	xor    ecx,esi
  427a69:	lea    ecx,[edx+ecx*1+0x3272f5]
  427a70:	mov    edx,DWORD PTR [ebp+0xc]
  427a73:	mov    DWORD PTR [ebp+0x18],eax
  427a76:	mov    eax,DWORD PTR [ebp-0x24]
  427a79:	movzx  edx,WORD PTR [edx+0x6]
  427a7d:	xor    eax,esi
  427a7f:	sub    edx,eax
  427a81:	mov    eax,DWORD PTR [ebp+0xc]
  427a84:	sub    edx,edi
  427a86:	mov    DWORD PTR [ebp-0x8],ecx
  427a89:	cmp    ecx,edx
  427a8b:	jbe    0x427a11
  427a8d:	mov    edx,DWORD PTR [ebx+0x18c]
  427a93:	mov    ecx,DWORD PTR [ebp+0x20]
  427a96:	cmp    ecx,DWORD PTR [edx]
  427a98:	jne    0x427ac1
  427a9a:	mov    eax,DWORD PTR [ebx+0x1e0]
  427aa0:	lea    edx,[ebp-0x18]
  427aa3:	push   edx
  427aa4:	mov    edx,DWORD PTR [ebp-0x10]
  427aa7:	xor    edx,esi
  427aa9:	add    edx,edi
  427aab:	push   edx
  427aac:	mov    edx,DWORD PTR [ebp-0x20]
  427aaf:	push   DWORD PTR [edx+0x54]
  427ab2:	push   ecx
  427ab3:	call   DWORD PTR [eax+0x1c]
  427ab6:	test   eax,eax
  427ab8:	je     0x427d5d
  427abe:	mov    eax,DWORD PTR [ebp+0xc]
  427ac1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427ac7:	mov    ecx,DWORD PTR [ecx]
  427ac9:	xor    ecx,esi
  427acb:	add    ecx,edi
  427acd:	je     0x427c88
  427ad3:	mov    eax,DWORD PTR [ebp-0x4]
  427ad6:	xor    eax,esi
  427ad8:	add    eax,edi
  427ada:	and    DWORD PTR [ebp+0x8],0x0
  427ade:	mov    DWORD PTR [ebp-0x14],eax
  427ae1:	mov    eax,0xf89c85c1
  427ae6:	lea    ecx,[eax+0x18]
  427ae9:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427af0:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427af7:	mov    DWORD PTR [ebp-0x50],eax
  427afa:	mov    DWORD PTR [ebp-0x4c],ecx
  427afd:	mov    DWORD PTR [ebp-0x48],ecx
  427b00:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427b07:	mov    edx,DWORD PTR [ebp+0x8]
  427b0a:	mov    ecx,0x8ae
  427b0f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427b14:	mov    edx,0x72f5
  427b19:	add    cx,dx
  427b1c:	mov    edx,DWORD PTR [ebp+0x8]
  427b1f:	inc    DWORD PTR [ebp+0x8]
  427b22:	cmp    DWORD PTR [ebp+0x8],0x6
  427b26:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427b2e:	jb     0x427b07
  427b30:	mov    ecx,0xf89c85d3
  427b35:	mov    DWORD PTR [ebp-0xb0],eax
  427b3b:	mov    DWORD PTR [ebp-0x9c],eax
  427b41:	mov    DWORD PTR [ebp-0x74],eax
  427b44:	mov    DWORD PTR [ebp-0x70],eax
  427b47:	lea    eax,[ecx-0x3]
  427b4a:	lea    edx,[ecx+0x2c]
  427b4d:	mov    DWORD PTR [ebp-0x64],eax
  427b50:	mov    DWORD PTR [ebp-0x60],eax
  427b53:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427b5d:	mov    DWORD PTR [ebp-0xac],ecx
  427b63:	mov    DWORD PTR [ebp-0xa8],edx
  427b69:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427b73:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427b7d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427b87:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427b91:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427b9b:	mov    DWORD PTR [ebp-0x8c],ecx
  427ba1:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427bab:	mov    DWORD PTR [ebp-0x84],edx
  427bb1:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427bb8:	mov    DWORD PTR [ebp-0x7c],ecx
  427bbb:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427bc2:	mov    DWORD PTR [ebp-0x6c],ecx
  427bc5:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427bcc:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427bd3:	xor    eax,eax
  427bd5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427bdc:	xor    cl,0xae
  427bdf:	sub    cl,0xb
  427be2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427be9:	inc    eax
  427bea:	cmp    eax,0x17
  427bed:	jb     0x427bd5
  427bef:	mov    eax,DWORD PTR [ebx+0x1e0]
  427bf5:	lea    ecx,[ebp-0xc0]
  427bfb:	push   ecx
  427bfc:	call   DWORD PTR [eax+0x4]
  427bff:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427c05:	lea    edx,[ebp-0xd8]
  427c0b:	push   edx
  427c0c:	push   eax
  427c0d:	call   DWORD PTR [ecx+0x8]
  427c10:	mov    DWORD PTR [ebp-0x40],eax
  427c13:	lea    eax,[ebp-0x14]
  427c16:	push   eax
  427c17:	mov    eax,DWORD PTR [ebx+0x18c]
  427c1d:	push   DWORD PTR [eax]
  427c1f:	mov    eax,DWORD PTR [ebp-0x40]
  427c22:	call   eax
  427c24:	mov    eax,DWORD PTR [ebp-0x4]
  427c27:	xor    eax,esi
  427c29:	add    eax,edi
  427c2b:	mov    DWORD PTR [ebp-0x34],eax
  427c2e:	mov    ecx,DWORD PTR [ebp-0x4]
  427c31:	mov    eax,DWORD PTR [ebp-0x14]
  427c34:	xor    ecx,esi
  427c36:	add    ecx,edi
  427c38:	cmp    eax,ecx
  427c3a:	je     0x427c85
  427c3c:	mov    DWORD PTR [ebp-0x3c],eax
  427c3f:	jmp    0x427c50
  427c41:	mov    eax,DWORD PTR [eax]
  427c43:	mov    ecx,DWORD PTR [ebp-0x3c]
  427c46:	mov    DWORD PTR [ebp-0x14],eax
  427c49:	mov    eax,DWORD PTR [ebp-0x14]
  427c4c:	cmp    eax,ecx
  427c4e:	je     0x427c5d
  427c50:	mov    edx,DWORD PTR [eax+0x18]
  427c53:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c59:	cmp    edx,DWORD PTR [ecx]
  427c5b:	jne    0x427c41
  427c5d:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c63:	mov    edx,DWORD PTR [eax+0x18]
  427c66:	cmp    edx,DWORD PTR [ecx]
  427c68:	jne    0x427c85
  427c6a:	mov    ecx,DWORD PTR [ebx+0x190]
  427c70:	mov    edx,DWORD PTR [ebp-0x20]
  427c73:	mov    edx,DWORD PTR [edx+0x28]
  427c76:	add    edx,DWORD PTR [ecx]
  427c78:	mov    DWORD PTR [eax+0x1c],edx
  427c7b:	mov    eax,DWORD PTR [ebp-0x24]
  427c7e:	xor    eax,esi
  427c80:	add    eax,edi
  427c82:	mov    DWORD PTR [ebp-0x34],eax
  427c85:	mov    eax,DWORD PTR [ebp+0xc]
  427c88:	push   ebx
  427c89:	push   eax
  427c8a:	push   DWORD PTR [ebp+0x20]
  427c8d:	call   0x42740d
  427c92:	test   eax,eax
  427c94:	je     0x427d5d
  427c9a:	push   DWORD PTR [ebp+0xc]
  427c9d:	mov    ecx,ebx
  427c9f:	push   DWORD PTR [ebp+0x20]
  427ca2:	call   0x427366
  427ca7:	test   eax,eax
  427ca9:	je     0x427d5d
  427caf:	mov    eax,DWORD PTR [ebp+0xc]
  427cb2:	mov    edx,DWORD PTR [ebp+0x20]
  427cb5:	mov    ecx,ebx
  427cb7:	call   0x42723f
  427cbc:	test   eax,eax
  427cbe:	je     0x427d5d
  427cc4:	push   ebx
  427cc5:	push   DWORD PTR [ebp+0x20]
  427cc8:	call   0x4276f0
  427ccd:	test   eax,eax
  427ccf:	je     0x427d5d
  427cd5:	mov    eax,DWORD PTR [ebx+0x18c]
  427cdb:	mov    edx,DWORD PTR [ebp+0x20]
  427cde:	cmp    edx,DWORD PTR [eax]
  427ce0:	jne    0x427cfc
  427ce2:	mov    eax,DWORD PTR [ebx+0x1e0]
  427ce8:	lea    ecx,[ebp-0x18]
  427ceb:	push   ecx
  427cec:	push   DWORD PTR [ebp-0x18]
  427cef:	mov    ecx,DWORD PTR [ebp-0x20]
  427cf2:	push   DWORD PTR [ecx+0x54]
  427cf5:	push   edx
  427cf6:	call   DWORD PTR [eax+0x1c]
  427cf9:	mov    edx,DWORD PTR [ebp+0x20]
  427cfc:	mov    eax,DWORD PTR [ebx+0x1c8]
  427d02:	mov    eax,DWORD PTR [eax]
  427d04:	xor    eax,esi
  427d06:	add    eax,edi
  427d08:	je     0x427d41
  427d0a:	mov    ecx,DWORD PTR [ebp+0xc]
  427d0d:	mov    eax,DWORD PTR [ecx+0x28]
  427d10:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427d17:	mov    esi,DWORD PTR [ebp+0x8]
  427d1a:	push   DWORD PTR [ebp+0x14]
  427d1d:	xor    esi,0x8ae
  427d23:	push   DWORD PTR [ebp+0x10]
  427d26:	add    esi,0x72f5
  427d2c:	or     WORD PTR [ecx+0x16],si
  427d30:	add    eax,edx
  427d32:	push   edx
  427d33:	call   eax
  427d35:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427d3f:	jmp    0x427d4b
  427d41:	mov    eax,DWORD PTR [ebp+0xc]
  427d44:	mov    eax,DWORD PTR [eax+0x28]
  427d47:	add    eax,edx
  427d49:	call   eax
  427d4b:	mov    DWORD PTR [ebp-0x8],eax
  427d4e:	mov    eax,DWORD PTR [ebp-0x8]
  427d51:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d54:	mov    DWORD PTR [ecx],eax
  427d56:	mov    DWORD PTR [ebp-0x30],0x1
  427d5d:	cmp    DWORD PTR [ebp-0x30],0x0
  427d61:	jne    0x427d67
  427d63:	and    DWORD PTR [ebp+0x20],0x0
  427d67:	mov    eax,DWORD PTR [ebp+0x20]
  427d6a:	jmp    0x427d6e
  427d6c:	xor    eax,eax
  427d6e:	pop    edi
  427d6f:	pop    esi
  427d70:	pop    ebx
  427d71:	leave  
  427d72:	ret    0x1c
  427d75:	push   ebp
  427d76:	mov    ebp,esp
  427d78:	movzx  edx,WORD PTR [ecx+0x6]
  427d7c:	movzx  eax,WORD PTR [ecx+0x14]
  427d80:	push   ebx
  427d81:	push   edi
  427d82:	xor    edi,edi
  427d84:	lea    eax,[eax+ecx*1+0x18]
  427d88:	test   edx,edx
  427d8a:	je     0x427dab
  427d8c:	mov    ecx,DWORD PTR [eax+0xc]
  427d8f:	lea    ebx,[ecx+esi*1]
  427d92:	cmp    DWORD PTR [ebp+0x8],ebx
  427d95:	jb     0x427da3
  427d97:	mov    ebx,DWORD PTR [eax+0x8]
  427d9a:	add    ebx,ecx
  427d9c:	add    ebx,esi
  427d9e:	cmp    DWORD PTR [ebp+0x8],ebx
  427da1:	jb     0x427dad
  427da3:	add    eax,0x28
  427da6:	inc    edi
  427da7:	cmp    edi,edx
  427da9:	jb     0x427d8c
  427dab:	xor    eax,eax
  427dad:	pop    edi
  427dae:	pop    ebx
  427daf:	pop    ebp
  427db0:	ret    0x4
  427db3:	push   ebp
  427db4:	mov    ebp,esp
  427db6:	sub    esp,0x34
  427db9:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427dc0:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427dc7:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427dce:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427dd5:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427ddc:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427de3:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427dea:	mov    DWORD PTR [ebp-0x10],eax
  427ded:	mov    eax,DWORD PTR [ebp+0x8]
  427df0:	mov    DWORD PTR [ebp-0x14],eax
  427df3:	mov    eax,DWORD PTR [ebp-0xc]
  427df6:	push   ebx
  427df7:	mov    ecx,0x75108ae
  427dfc:	xor    eax,ecx
  427dfe:	push   esi
  427dff:	mov    esi,DWORD PTR [ebp-0x10]
  427e02:	mov    edx,0x3272f5
  427e07:	add    eax,edx
  427e09:	push   edi
  427e0a:	cmp    esi,eax
  427e0c:	je     0x427feb
  427e12:	mov    eax,DWORD PTR [ebp-0xc]
  427e15:	mov    esi,DWORD PTR [ebp-0x14]
  427e18:	xor    eax,ecx
  427e1a:	add    eax,edx
  427e1c:	cmp    esi,eax
  427e1e:	je     0x427feb
  427e24:	mov    eax,DWORD PTR [ebp-0xc]
  427e27:	xor    eax,ecx
  427e29:	add    eax,edx
  427e2b:	mov    DWORD PTR [ebp-0x24],eax
  427e2e:	mov    eax,DWORD PTR [ebp-0xc]
  427e31:	xor    eax,ecx
  427e33:	add    eax,edx
  427e35:	mov    DWORD PTR [ebp-0x28],eax
  427e38:	mov    edi,DWORD PTR [ebp-0x20]
  427e3b:	mov    ebx,DWORD PTR [ebp-0x8]
  427e3e:	mov    esi,0x8ae
  427e43:	xor    edi,esi
  427e45:	mov    eax,0x72f5
  427e4a:	xor    ebx,esi
  427e4c:	add    edi,eax
  427e4e:	add    ebx,eax
  427e50:	sub    ebx,edi
  427e52:	mov    WORD PTR [ebp-0x8],bx
  427e56:	jmp    0x427f1b
  427e5b:	mov    edi,DWORD PTR [ebp-0xc]
  427e5e:	mov    bx,WORD PTR [ebp-0x4]
  427e62:	xor    edi,esi
  427e64:	add    edi,eax
  427e66:	cmp    bx,di
  427e69:	je     0x427f5d
  427e6f:	mov    edi,DWORD PTR [ebp-0xc]
  427e72:	mov    ebx,DWORD PTR [ebp+0xc]
  427e75:	xor    edi,ecx
  427e77:	add    edi,edx
  427e79:	cmp    ebx,edi
  427e7b:	mov    di,WORD PTR [ebp-0x4]
  427e7f:	mov    bx,WORD PTR [ebp+0x8]
  427e83:	je     0x427eee
  427e85:	cmp    bx,di
  427e88:	je     0x427ef7
  427e8a:	mov    edi,DWORD PTR [ebp-0x20]
  427e8d:	mov    bx,WORD PTR [ebp+0x8]
  427e91:	xor    edi,esi
  427e93:	add    edi,eax
  427e95:	cmp    bx,di
  427e98:	jb     0x427eb8
  427e9a:	mov    edi,DWORD PTR [ebp-0x2c]
  427e9d:	mov    bx,WORD PTR [ebp+0x8]
  427ea1:	xor    edi,esi
  427ea3:	add    edi,eax
  427ea5:	cmp    bx,di
  427ea8:	ja     0x427eb8
  427eaa:	movzx  edi,WORD PTR [ebp+0x8]
  427eae:	movzx  ebx,WORD PTR [ebp-0x8]
  427eb2:	add    edi,ebx
  427eb4:	mov    WORD PTR [ebp+0x8],di
  427eb8:	mov    edi,DWORD PTR [ebp-0x20]
  427ebb:	mov    bx,WORD PTR [ebp-0x4]
  427ebf:	xor    edi,esi
  427ec1:	add    edi,eax
  427ec3:	cmp    bx,di
  427ec6:	jb     0x427ee6
  427ec8:	mov    edi,DWORD PTR [ebp-0x2c]
  427ecb:	mov    bx,WORD PTR [ebp-0x4]
  427ecf:	xor    edi,esi
  427ed1:	add    edi,eax
  427ed3:	cmp    bx,di
  427ed6:	ja     0x427ee6
  427ed8:	movzx  edi,WORD PTR [ebp-0x4]
  427edc:	movzx  ebx,WORD PTR [ebp-0x8]
  427ee0:	add    edi,ebx
  427ee2:	mov    WORD PTR [ebp-0x4],di
  427ee6:	mov    di,WORD PTR [ebp-0x4]
  427eea:	mov    bx,WORD PTR [ebp+0x8]
  427eee:	cmp    bx,di
  427ef1:	jne    0x427feb
  427ef7:	mov    edi,DWORD PTR [ebp-0x1c]
  427efa:	mov    ebx,DWORD PTR [ebp-0x10]
  427efd:	xor    edi,ecx
  427eff:	lea    edi,[edi+ebx*1+0x3272f5]
  427f06:	mov    DWORD PTR [ebp-0x10],edi
  427f09:	mov    edi,DWORD PTR [ebp-0x1c]
  427f0c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f0f:	xor    edi,ecx
  427f11:	lea    edi,[edi+ebx*1+0x3272f5]
  427f18:	mov    DWORD PTR [ebp-0x14],edi
  427f1b:	mov    edi,DWORD PTR [ebp-0x24]
  427f1e:	mov    ebx,DWORD PTR [ebp-0x10]
  427f21:	mov    di,WORD PTR [ebx+edi*2]
  427f25:	mov    WORD PTR [ebp+0x8],di
  427f29:	mov    edi,DWORD PTR [ebp-0x28]
  427f2c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f2f:	mov    di,WORD PTR [ebx+edi*2]
  427f33:	mov    WORD PTR [ebp-0x4],di
  427f37:	mov    edi,DWORD PTR [ebp-0xc]
  427f3a:	mov    bx,WORD PTR [ebp+0x8]
  427f3e:	xor    edi,esi
  427f40:	add    edi,eax
  427f42:	cmp    bx,di
  427f45:	jne    0x427e5b
  427f4b:	mov    eax,DWORD PTR [ebp-0x18]
  427f4e:	mov    esi,DWORD PTR [ebp-0xc]
  427f51:	xor    eax,ecx
  427f53:	add    eax,edx
  427f55:	imul   eax,esi
  427f58:	mov    DWORD PTR [ebp-0xc],eax
  427f5b:	jmp    0x427f6f
  427f5d:	mov    eax,DWORD PTR [ebp-0xc]
  427f60:	mov    esi,DWORD PTR [ebp-0x18]
  427f63:	xor    eax,ecx
  427f65:	lea    eax,[eax+esi*1+0x3272f5]
  427f6c:	mov    DWORD PTR [ebp-0x18],eax
  427f6f:	mov    eax,DWORD PTR [ebp-0x24]
  427f72:	sub    eax,edx
  427f74:	xor    eax,ecx
  427f76:	mov    DWORD PTR [ebp-0x30],eax
  427f79:	mov    eax,DWORD PTR [ebp-0x28]
  427f7c:	sub    eax,edx
  427f7e:	xor    eax,ecx
  427f80:	mov    DWORD PTR [ebp-0x34],eax
  427f83:	mov    eax,DWORD PTR [ebp-0x34]
  427f86:	mov    esi,DWORD PTR [ebp-0x1c]
  427f89:	xor    esi,ecx
  427f8b:	add    esi,edx
  427f8d:	xor    eax,ecx
  427f8f:	add    eax,0x3272f5
  427f94:	imul   esi,eax
  427f97:	mov    eax,DWORD PTR [ebp-0x14]
  427f9a:	movzx  eax,WORD PTR [esi+eax*1]
  427f9e:	mov    esi,DWORD PTR [ebp-0x30]
  427fa1:	mov    edi,DWORD PTR [ebp-0x1c]
  427fa4:	xor    esi,ecx
  427fa6:	add    esi,edx
  427fa8:	xor    edi,ecx
  427faa:	add    edi,edx
  427fac:	imul   edi,esi
  427faf:	mov    esi,DWORD PTR [ebp-0x10]
  427fb2:	movzx  esi,WORD PTR [edi+esi*1]
  427fb6:	sub    eax,edx
  427fb8:	sub    esi,edx
  427fba:	xor    eax,ecx
  427fbc:	xor    esi,ecx
  427fbe:	cmp    esi,eax
  427fc0:	jne    0x427feb
  427fc2:	mov    eax,DWORD PTR [ebp-0x30]
  427fc5:	mov    esi,DWORD PTR [ebp-0x1c]
  427fc8:	xor    eax,ecx
  427fca:	add    eax,0x3272f5
  427fcf:	xor    esi,ecx
  427fd1:	add    esi,edx
  427fd3:	imul   esi,eax
  427fd6:	mov    eax,DWORD PTR [ebp-0x10]
  427fd9:	movzx  eax,WORD PTR [esi+eax*1]
  427fdd:	mov    esi,DWORD PTR [ebp-0xc]
  427fe0:	sub    eax,edx
  427fe2:	xor    eax,ecx
  427fe4:	cmp    eax,esi
  427fe6:	mov    eax,DWORD PTR [ebp-0xc]
  427fe9:	je     0x427fee
  427feb:	mov    eax,DWORD PTR [ebp-0x18]
  427fee:	pop    edi
  427fef:	xor    eax,ecx
  427ff1:	pop    esi
  427ff2:	add    eax,edx
  427ff4:	pop    ebx
  427ff5:	leave  
  427ff6:	ret    0x8
  427ff9:	push   ebp
  427ffa:	mov    ebp,esp
  427ffc:	push   ecx
  427ffd:	mov    cx,WORD PTR [eax]
  428000:	push   esi
  428001:	mov    esi,0x3b5c
  428006:	sub    cx,si
  428009:	mov    esi,0x8a9a
  42800e:	xor    cx,si
  428011:	mov    esi,0x4e3e
  428016:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42801d:	mov    edx,0xf89c85a5
  428022:	cmp    cx,si
  428025:	je     0x428084
  428027:	push   ebx
  428028:	push   edi
  428029:	movzx  ecx,cx
  42802c:	mov    edi,0xffcd8d0b
  428031:	mov    esi,0x75108ae
  428036:	mov    ebx,0x4f9a
  42803b:	cmp    cx,bx
  42803e:	jne    0x428043
  428040:	mov    DWORD PTR [ebp-0x4],edx
  428043:	lea    edx,[edi+0x1]
  428046:	xor    edx,esi
  428048:	mov    edi,edx
  42804a:	xor    edi,esi
  42804c:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  428054:	mov    ebx,0x3b5c
  428059:	sub    cx,bx
  42805c:	mov    ebx,0x8a9a
  428061:	xor    cx,bx
  428064:	mov    ebx,0x4e3e
  428069:	cmp    cx,bx
  42806c:	jne    0x428036
  42806e:	mov    ecx,DWORD PTR [ebp-0x4]
  428071:	pop    edi
  428072:	pop    ebx
  428073:	cmp    ecx,0xf89c85a4
  428079:	je     0x428084
  42807b:	xor    ecx,esi
  42807d:	lea    eax,[eax+ecx*2+0x64e5ec]
  428084:	pop    esi
  428085:	leave  
  428086:	ret    
  428087:	push   ebp
  428088:	mov    ebp,esp
  42808a:	push   ecx
  42808b:	push   esi
  42808c:	push   edi
  42808d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  428094:	mov    esi,0xf89c85a5
  428099:	call   0x427ff9
  42809e:	mov    edi,eax
  4280a0:	mov    al,BYTE PTR [edi]
  4280a2:	sub    al,0x3
  4280a4:	xor    al,0x7e
  4280a6:	cmp    al,0x83
  4280a8:	je     0x42810b
  4280aa:	mov    eax,edi
  4280ac:	mov    edx,0xffcd8d0b
  4280b1:	mov    ecx,0x75108ae
  4280b6:	push   ebx
  4280b7:	mov    ax,WORD PTR [eax]
  4280ba:	mov    ebx,0x3b5c
  4280bf:	sub    ax,bx
  4280c2:	mov    ebx,0x8a9a
  4280c7:	xor    ax,bx
  4280ca:	mov    ebx,0x4e48
  4280cf:	cmp    ax,bx
  4280d2:	jne    0x4280d7
  4280d4:	mov    DWORD PTR [ebp-0x4],esi
  4280d7:	lea    esi,[edx+0x1]
  4280da:	xor    esi,ecx
  4280dc:	mov    edx,esi
  4280de:	xor    edx,ecx
  4280e0:	lea    eax,[edi+edx*2+0x64e5ea]
  4280e7:	mov    bl,BYTE PTR [eax]
  4280e9:	sub    bl,0x3
  4280ec:	xor    bl,0x7e
  4280ef:	cmp    bl,0x83
  4280f2:	jne    0x4280b7
  4280f4:	mov    eax,DWORD PTR [ebp-0x4]
  4280f7:	pop    ebx
  4280f8:	cmp    eax,0xf89c85a4
  4280fd:	je     0x42810b
  4280ff:	xor    eax,ecx
  428101:	xor    ecx,ecx
  428103:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  42810b:	mov    eax,edi
  42810d:	pop    edi
  42810e:	pop    esi
  42810f:	leave  
  428110:	ret    
  428111:	push   ebp
  428112:	mov    ebp,esp
  428114:	push   ecx
  428115:	push   esi
  428116:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42811d:	mov    esi,0xf89c85a5
  428122:	call   0x427ff9
  428127:	mov    cx,WORD PTR [eax]
  42812a:	mov    edx,0x3b5c
  42812f:	sub    cx,dx
  428132:	mov    edx,0x8a9a
  428137:	xor    cx,dx
  42813a:	mov    edx,0x4e3e
  42813f:	cmp    cx,dx
  428142:	je     0x42819b
  428144:	push   ebx
  428145:	push   edi
  428146:	movzx  ecx,cx
  428149:	mov    edx,0xffcd8d0b
  42814e:	mov    edi,0x75108ae
  428153:	mov    ebx,0x4e48
  428158:	cmp    cx,bx
  42815b:	jne    0x428160
  42815d:	mov    DWORD PTR [ebp-0x4],esi
  428160:	lea    esi,[edx+0x1]
  428163:	xor    esi,edi
  428165:	mov    edx,esi
  428167:	xor    edx,edi
  428169:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428171:	mov    ebx,0x3b5c
  428176:	sub    cx,bx
  428179:	mov    ebx,0x8a9a
  42817e:	xor    cx,bx
  428181:	mov    ebx,0x4e3e
  428186:	cmp    cx,bx
  428189:	jne    0x428153
  42818b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  428192:	pop    edi
  428193:	pop    ebx
  428194:	je     0x42819b
  428196:	xor    eax,eax
  428198:	inc    eax
  428199:	jmp    0x42819d
  42819b:	xor    eax,eax
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ecx
  4281a4:	mov    eax,DWORD PTR [ebp+0x8]
  4281a7:	movzx  ecx,WORD PTR [eax]
  4281aa:	push   esi
  4281ab:	lea    eax,[ecx-0x3b5c]
  4281b1:	mov    esi,0x8a9a
  4281b6:	push   edi
  4281b7:	xor    eax,esi
  4281b9:	mov    edi,0x4e3e
  4281be:	mov    DWORD PTR [ebp-0x4],edx
  4281c1:	cmp    ax,di
  4281c4:	je     0x4281f1
  4281c6:	mov    eax,DWORD PTR [ebp+0x8]
  4281c9:	sub    eax,edx
  4281cb:	mov    DWORD PTR [ebp+0x8],eax
  4281ce:	jmp    0x4281d3
  4281d0:	mov    eax,DWORD PTR [ebp+0x8]
  4281d3:	mov    WORD PTR [edx],cx
  4281d6:	add    edx,0x2
  4281d9:	movzx  edi,WORD PTR [eax+edx*1]
  4281dd:	mov    ecx,edi
  4281df:	add    edi,0xffffc4a4
  4281e5:	xor    edi,esi
  4281e7:	mov    eax,0x4e3e
  4281ec:	cmp    di,ax
  4281ef:	jne    0x4281d0
  4281f1:	xor    eax,eax
  4281f3:	pop    edi
  4281f4:	mov    WORD PTR [edx],ax
  4281f7:	mov    eax,DWORD PTR [ebp-0x4]
  4281fa:	pop    esi
  4281fb:	leave  
  4281fc:	ret    0x4
  4281ff:	push   ebp
  428200:	mov    ebp,esp
  428202:	sub    esp,0x18
  428205:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  42820c:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  428213:	mov    ecx,DWORD PTR [ebp-0x8]
  428216:	push   esi
  428217:	mov    eax,0x75108ae
  42821c:	xor    ecx,eax
  42821e:	mov    esi,0x3272f5
  428223:	add    ecx,esi
  428225:	mov    DWORD PTR [ebp-0x4],ecx
  428228:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42822f:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  428236:	push   edi
  428237:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  42823e:	jmp    0x4282df
  428243:	mov    ecx,DWORD PTR [ebp-0x4]
  428246:	mov    edx,DWORD PTR [ebp+0x10]
  428249:	sub    edx,ecx
  42824b:	mov    ecx,DWORD PTR [ebp-0xc]
  42824e:	xor    ecx,eax
  428250:	add    ecx,esi
  428252:	cmp    edx,ecx
  428254:	jbe    0x428271
  428256:	mov    edx,DWORD PTR [ebp-0x4]
  428259:	add    edx,DWORD PTR [ebp+0x8]
  42825c:	mov    ecx,DWORD PTR [ebp-0x4]
  42825f:	add    ecx,DWORD PTR [ebp+0xc]
  428262:	mov    edi,DWORD PTR [ecx]
  428264:	mov    DWORD PTR [edx],edi
  428266:	mov    ecx,DWORD PTR [ecx+0x4]
  428269:	mov    DWORD PTR [edx+0x4],ecx
  42826c:	mov    ecx,DWORD PTR [ebp-0xc]
  42826f:	jmp    0x4282be
  428271:	mov    ecx,DWORD PTR [ebp-0x4]
  428274:	mov    edx,DWORD PTR [ebp+0x10]
  428277:	sub    edx,ecx
  428279:	mov    ecx,DWORD PTR [ebp-0x10]
  42827c:	xor    ecx,eax
  42827e:	add    ecx,esi
  428280:	cmp    edx,ecx
  428282:	mov    ecx,DWORD PTR [ebp-0x4]
  428285:	jbe    0x428299
  428287:	add    ecx,DWORD PTR [ebp+0x8]
  42828a:	mov    edx,DWORD PTR [ebp-0x4]
  42828d:	add    edx,DWORD PTR [ebp+0xc]
  428290:	mov    edx,DWORD PTR [edx]
  428292:	mov    DWORD PTR [ecx],edx
  428294:	mov    ecx,DWORD PTR [ebp-0x10]
  428297:	jmp    0x4282be
  428299:	mov    edx,DWORD PTR [ebp+0x10]
  42829c:	sub    edx,ecx
  42829e:	mov    ecx,DWORD PTR [ebp-0x14]
  4282a1:	xor    ecx,eax
  4282a3:	add    ecx,esi
  4282a5:	cmp    edx,ecx
  4282a7:	mov    ecx,DWORD PTR [ebp-0x4]
  4282aa:	jbe    0x4282cf
  4282ac:	add    ecx,DWORD PTR [ebp+0x8]
  4282af:	mov    edx,DWORD PTR [ebp-0x4]
  4282b2:	add    edx,DWORD PTR [ebp+0xc]
  4282b5:	mov    dx,WORD PTR [edx]
  4282b8:	mov    WORD PTR [ecx],dx
  4282bb:	mov    ecx,DWORD PTR [ebp-0x14]
  4282be:	mov    edx,DWORD PTR [ebp-0x4]
  4282c1:	xor    ecx,eax
  4282c3:	lea    ecx,[ecx+edx*1+0x3272f5]
  4282ca:	mov    DWORD PTR [ebp-0x4],ecx
  4282cd:	jmp    0x4282df
  4282cf:	add    ecx,DWORD PTR [ebp+0x8]
  4282d2:	mov    edx,DWORD PTR [ebp-0x4]
  4282d5:	add    edx,DWORD PTR [ebp+0xc]
  4282d8:	mov    dl,BYTE PTR [edx]
  4282da:	mov    BYTE PTR [ecx],dl
  4282dc:	inc    DWORD PTR [ebp-0x4]
  4282df:	mov    ecx,DWORD PTR [ebp-0x18]
  4282e2:	mov    edx,DWORD PTR [ebp+0x10]
  4282e5:	xor    ecx,eax
  4282e7:	add    ecx,esi
  4282e9:	imul   ecx,edx
  4282ec:	mov    edx,DWORD PTR [ebp-0x8]
  4282ef:	mov    edi,DWORD PTR [ebp-0x4]
  4282f2:	xor    edx,eax
  4282f4:	lea    edx,[edx+edi*1+0x3272f5]
  4282fb:	cmp    edx,ecx
  4282fd:	jb     0x428243
  428303:	pop    edi
  428304:	pop    esi
  428305:	leave  
  428306:	ret    0xc
  428309:	push   ebp
  42830a:	mov    ebp,esp
  42830c:	sub    esp,0xc
  42830f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  428316:	push   esi
  428317:	mov    esi,eax
  428319:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  428320:	mov    edx,DWORD PTR [ebp-0x4]
  428323:	mov    eax,0x75108ae
  428328:	xor    edx,eax
  42832a:	mov    ecx,0x3272f5
  42832f:	add    edx,ecx
  428331:	cmp    esi,edx
  428333:	je     0x428375
  428335:	push   ebx
  428336:	push   edi
  428337:	mov    edx,DWORD PTR [ebp-0x8]
  42833a:	mov    ebx,DWORD PTR [ebp+0x8]
  42833d:	xor    edx,eax
  42833f:	mov    edi,0xffcd8d0b
  428344:	sub    edi,edx
  428346:	add    esi,edi
  428348:	lea    edx,[esi-0x3272f5]
  42834e:	xor    edx,eax
  428350:	mov    DWORD PTR [ebp-0xc],edx
  428353:	mov    edx,DWORD PTR [ebp-0x4]
  428356:	mov    edi,DWORD PTR [ebp-0xc]
  428359:	xor    dl,0xae
  42835c:	sub    dl,0xb
  42835f:	xor    edi,eax
  428361:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428368:	mov    edx,DWORD PTR [ebp-0x4]
  42836b:	xor    edx,eax
  42836d:	add    edx,ecx
  42836f:	cmp    esi,edx
  428371:	jne    0x428337
  428373:	pop    edi
  428374:	pop    ebx
  428375:	pop    esi
  428376:	leave  
  428377:	ret    0x4
  42837a:	push   ebp
  42837b:	mov    ebp,esp
  42837d:	sub    esp,0x21c
  428383:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42838a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  428391:	mov    eax,DWORD PTR [ebp+0x10]
  428394:	mov    eax,DWORD PTR [ebp-0x4]
  428397:	mov    ecx,DWORD PTR [ebp+0x8]
  42839a:	push   esi
  42839b:	push   edi
  42839c:	mov    edi,0x75108ae
  4283a1:	xor    eax,edi
  4283a3:	mov    esi,0x3272f5
  4283a8:	add    eax,esi
  4283aa:	cmp    eax,ecx
  4283ac:	mov    eax,DWORD PTR [ebp-0x4]
  4283af:	jne    0x4283ba
  4283b1:	xor    eax,edi
  4283b3:	add    eax,esi
  4283b5:	jmp    0x428466
  4283ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4283bd:	xor    eax,edi
  4283bf:	add    eax,esi
  4283c1:	cmp    eax,ecx
  4283c3:	jne    0x4283ca
  4283c5:	mov    eax,DWORD PTR [ebp-0x4]
  4283c8:	jmp    0x4283b1
  4283ca:	lea    eax,[ebp-0x21c]
  4283d0:	mov    DWORD PTR [ebp-0x8],eax
  4283d3:	mov    eax,DWORD PTR [ebp+0xc]
  4283d6:	mov    DWORD PTR [ebp-0x10],eax
  4283d9:	mov    eax,DWORD PTR [ebp-0x4]
  4283dc:	xor    eax,edi
  4283de:	add    eax,esi
  4283e0:	mov    DWORD PTR [ebp+0x10],eax
  4283e3:	mov    eax,DWORD PTR [ebp+0xc]
  4283e6:	push   ebx
  4283e7:	call   0x428111
  4283ec:	mov    ebx,eax
  4283ee:	mov    eax,DWORD PTR [ebp+0x8]
  4283f1:	mov    eax,DWORD PTR [eax+0x14]
  4283f4:	jmp    0x42844e
  4283f6:	mov    eax,DWORD PTR [ebp+0xc]
  4283f9:	sub    eax,0x8
  4283fc:	mov    DWORD PTR [ebp-0xc],eax
  4283ff:	mov    eax,DWORD PTR [ebp-0xc]
  428402:	mov    eax,DWORD PTR [eax+0x28]
  428405:	call   0x427ff9
  42840a:	mov    DWORD PTR [ebp+0x10],eax
  42840d:	push   DWORD PTR [ebp+0x10]
  428410:	mov    edx,DWORD PTR [ebp-0x8]
  428413:	call   0x4281a0
  428418:	mov    eax,DWORD PTR [ebp-0x4]
  42841b:	xor    eax,edi
  42841d:	add    eax,esi
  42841f:	cmp    eax,ebx
  428421:	jne    0x42842b
  428423:	mov    eax,DWORD PTR [ebp-0x8]
  428426:	call   0x428087
  42842b:	mov    eax,DWORD PTR [ebp-0x14]
  42842e:	xor    eax,edi
  428430:	add    eax,esi
  428432:	push   eax
  428433:	push   DWORD PTR [ebp-0x10]
  428436:	mov    eax,DWORD PTR [ebp-0x8]
  428439:	call   0x427db3
  42843e:	mov    ecx,DWORD PTR [ebp-0x4]
  428441:	xor    ecx,edi
  428443:	add    ecx,esi
  428445:	cmp    eax,ecx
  428447:	je     0x42846c
  428449:	mov    eax,DWORD PTR [ebp+0xc]
  42844c:	mov    eax,DWORD PTR [eax]
  42844e:	mov    DWORD PTR [ebp+0xc],eax
  428451:	mov    eax,DWORD PTR [ebp+0x8]
  428454:	mov    ecx,DWORD PTR [ebp+0xc]
  428457:	add    eax,0x14
  42845a:	cmp    ecx,eax
  42845c:	jne    0x4283f6
  42845e:	mov    eax,DWORD PTR [ebp-0x4]
  428461:	xor    eax,edi
  428463:	add    eax,esi
  428465:	pop    ebx
  428466:	pop    edi
  428467:	pop    esi
  428468:	leave  
  428469:	ret    0xc
  42846c:	mov    eax,DWORD PTR [ebp-0xc]
  42846f:	mov    eax,DWORD PTR [eax+0x18]
  428472:	jmp    0x428465
  428474:	push   ebp
  428475:	mov    ebp,esp
  428477:	mov    eax,DWORD PTR [ebp+0xc]
  42847a:	sub    esp,0x10
  42847d:	cmp    DWORD PTR [ebp+0x8],0x0
  428481:	push   ebx
  428482:	push   esi
  428483:	push   edi
  428484:	je     0x428539
  42848a:	test   eax,eax
  42848c:	je     0x428539
  428492:	movzx  eax,WORD PTR [eax+0x20]
  428496:	mov    ecx,eax
  428498:	mov    DWORD PTR [ebp-0x10],eax
  42849b:	xor    edx,edx
  42849d:	and    DWORD PTR [ebp-0x8],edx
  4284a0:	mov    eax,0x8a9a
  4284a5:	xor    ecx,eax
  4284a7:	add    ecx,0x3b5c
  4284ad:	mov    DWORD PTR [ebp-0xc],ecx
  4284b0:	and    DWORD PTR [ebp-0x4],0x0
  4284b4:	xor    ecx,ecx
  4284b6:	push   0xffffff81
  4284b8:	pop    edi
  4284b9:	cmp    cx,WORD PTR [ebp-0xc]
  4284bd:	jae    0x428523
  4284bf:	lea    esi,[edx-0x3b5c]
  4284c5:	xor    esi,eax
  4284c7:	movzx  ecx,WORD PTR [ebp-0x4]
  4284cb:	mov    ebx,DWORD PTR [ebp+0xc]
  4284ce:	lea    ecx,[ebx+ecx*4]
  4284d1:	cmp    WORD PTR [ecx+0x2],si
  4284d5:	jne    0x42850e
  4284d7:	movzx  ecx,WORD PTR [ecx]
  4284da:	mov    edi,0x4e3e
  4284df:	cmp    cx,di
  4284e2:	jne    0x4284f0
  4284e4:	mov    ebx,DWORD PTR [ebp+0x8]
  4284e7:	movzx  edi,dx
  4284ea:	cmp    BYTE PTR [edi+ebx*1],0x0
  4284ee:	je     0x42851d
  4284f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4284f3:	movzx  edi,dx
  4284f6:	movsx  di,BYTE PTR [edi+ebx*1]
  4284fb:	mov    ebx,0x3b5c
  428500:	sub    di,bx
  428503:	xor    di,ax
  428506:	cmp    cx,di
  428509:	je     0x42851d
  42850b:	push   0xffffff83
  42850d:	pop    edi
  42850e:	inc    DWORD PTR [ebp-0x4]
  428511:	mov    cx,WORD PTR [ebp-0xc]
  428515:	cmp    WORD PTR [ebp-0x4],cx
  428519:	jb     0x4284c7
  42851b:	jmp    0x428523
  42851d:	inc    DWORD PTR [ebp-0x8]
  428520:	push   0xffffff80
  428522:	pop    edi
  428523:	mov    esi,DWORD PTR [ebp+0x8]
  428526:	movzx  ecx,dx
  428529:	cmp    BYTE PTR [ecx+esi*1],0x0
  42852d:	je     0x428542
  42852f:	inc    edx
  428530:	cmp    edi,0xffffff83
  428533:	jne    0x4284b0
  428539:	xor    eax,eax
  42853b:	pop    edi
  42853c:	pop    esi
  42853d:	pop    ebx
  42853e:	leave  
  42853f:	ret    0x8
  428542:	mov    ecx,DWORD PTR [ebp-0x8]
  428545:	add    ecx,0xffffc4a4
  42854b:	xor    cx,ax
  42854e:	xor    eax,eax
  428550:	cmp    cx,WORD PTR [ebp-0x10]
  428554:	sete   al
  428557:	jmp    0x42853b
  428559:	push   ebp
  42855a:	mov    ebp,esp
  42855c:	sub    esp,0x50
  42855f:	push   edi
  428560:	mov    edi,eax
  428562:	mov    eax,DWORD PTR [edi+0x1a8]
  428568:	cmp    DWORD PTR [eax],0x0
  42856b:	jne    0x428574
  42856d:	xor    eax,eax
  42856f:	jmp    0x4286a5
  428574:	push   DWORD PTR [ebp+0x8]
  428577:	push   0x2c
  428579:	pop    eax
  42857a:	call   0x428309
  42857f:	mov    edx,DWORD PTR [edi+0x1ac]
  428585:	lea    eax,[edi+0x22]
  428588:	mov    DWORD PTR [ebp-0x4c],eax
  42858b:	lea    eax,[edi+0x44]
  42858e:	mov    DWORD PTR [ebp-0x48],eax
  428591:	lea    eax,[edi+0x66]
  428594:	mov    DWORD PTR [ebp-0x44],eax
  428597:	lea    eax,[edi+0x88]
  42859d:	mov    DWORD PTR [ebp-0x40],eax
  4285a0:	lea    eax,[edi+0xaa]
  4285a6:	mov    DWORD PTR [ebp-0x3c],eax
  4285a9:	lea    eax,[edi+0xcc]
  4285af:	mov    DWORD PTR [ebp-0x38],eax
  4285b2:	lea    eax,[edi+0xee]
  4285b8:	mov    DWORD PTR [ebp-0x34],eax
  4285bb:	lea    eax,[edi+0x110]
  4285c1:	mov    DWORD PTR [ebp-0x30],eax
  4285c4:	lea    eax,[edi+0x132]
  4285ca:	mov    DWORD PTR [ebp-0x2c],eax
  4285cd:	lea    eax,[edi+0x154]
  4285d3:	push   edi
  4285d4:	mov    DWORD PTR [ebp-0x50],edi
  4285d7:	mov    DWORD PTR [ebp-0x28],eax
  4285da:	call   0x4286d9
  4285df:	push   eax
  4285e0:	mov    eax,DWORD PTR [edi+0x1a8]
  4285e6:	push   DWORD PTR [eax]
  4285e8:	call   0x42837a
  4285ed:	mov    DWORD PTR [ebp-0x10],eax
  4285f0:	test   eax,eax
  4285f2:	je     0x4286a5
  4285f8:	mov    ecx,DWORD PTR [eax+0x3c]
  4285fb:	push   ebx
  4285fc:	push   esi
  4285fd:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428601:	add    esi,eax
  428603:	mov    edi,DWORD PTR [esi+0x24]
  428606:	mov    ecx,DWORD PTR [esi+0x1c]
  428609:	mov    edx,DWORD PTR [esi+0x20]
  42860c:	mov    ebx,DWORD PTR [esi+0x18]
  42860f:	add    edi,eax
  428611:	mov    DWORD PTR [ebp-0x20],edi
  428614:	mov    edi,DWORD PTR [esi+0x14]
  428617:	add    ecx,eax
  428619:	add    edx,eax
  42861b:	mov    DWORD PTR [ebp-0xc],ecx
  42861e:	mov    DWORD PTR [ebp-0x1c],edx
  428621:	mov    DWORD PTR [ebp-0x8],edi
  428624:	cmp    edi,ebx
  428626:	ja     0x42862b
  428628:	mov    DWORD PTR [ebp-0x8],ebx
  42862b:	xor    ebx,ebx
  42862d:	mov    DWORD PTR [ebp-0x18],ebx
  428630:	cmp    DWORD PTR [ebp-0x8],ebx
  428633:	jbe    0x4286a3
  428635:	jmp    0x42863a
  428637:	mov    edx,DWORD PTR [ebp-0x1c]
  42863a:	mov    edi,DWORD PTR [ebp-0x20]
  42863d:	movzx  edi,WORD PTR [edi+ebx*2]
  428641:	cmp    ebx,DWORD PTR [esi+0x18]
  428644:	jae    0x4286a3
  428646:	cmp    edi,DWORD PTR [esi+0x14]
  428649:	jae    0x4286a3
  42864b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42864e:	mov    edx,DWORD PTR [ebp+0x8]
  428651:	mov    edi,DWORD PTR [ecx+edi*4]
  428654:	mov    DWORD PTR [ebp-0x4],edx
  428657:	lea    edx,[ebp-0x50]
  42865a:	add    ebx,eax
  42865c:	add    edi,eax
  42865e:	sub    edx,DWORD PTR [ebp+0x8]
  428661:	mov    DWORD PTR [ebp-0x14],0xb
  428668:	mov    DWORD PTR [ebp-0x24],edx
  42866b:	mov    edx,DWORD PTR [ebp-0x4]
  42866e:	cmp    DWORD PTR [edx],0x0
  428671:	jne    0x42868e
  428673:	mov    eax,DWORD PTR [ebp-0x24]
  428676:	push   DWORD PTR [eax+edx*1]
  428679:	push   ebx
  42867a:	call   0x428474
  42867f:	mov    ecx,DWORD PTR [ebp-0xc]
  428682:	test   eax,eax
  428684:	je     0x42868b
  428686:	mov    eax,DWORD PTR [ebp-0x4]
  428689:	mov    DWORD PTR [eax],edi
  42868b:	mov    eax,DWORD PTR [ebp-0x10]
  42868e:	add    DWORD PTR [ebp-0x4],0x4
  428692:	dec    DWORD PTR [ebp-0x14]
  428695:	jne    0x42866b
  428697:	mov    ebx,DWORD PTR [ebp-0x18]
  42869a:	inc    ebx
  42869b:	mov    DWORD PTR [ebp-0x18],ebx
  42869e:	cmp    ebx,DWORD PTR [ebp-0x8]
  4286a1:	jb     0x428637
  4286a3:	pop    esi
  4286a4:	pop    ebx
  4286a5:	pop    edi
  4286a6:	leave  
  4286a7:	ret    0x4
  4286aa:	push   ebp
  4286ab:	mov    ebp,esp
  4286ad:	mov    eax,DWORD PTR [ebp+0x8]
  4286b0:	push   esi
  4286b1:	push   DWORD PTR [eax+0x1e0]
  4286b7:	lea    esi,[eax+0x198]
  4286bd:	mov    eax,DWORD PTR [ebp+0x8]
  4286c0:	call   0x428559
  4286c5:	mov    ecx,DWORD PTR [esi]
  4286c7:	mov    DWORD PTR [ecx],eax
  4286c9:	mov    eax,DWORD PTR [esi]
  4286cb:	xor    ecx,ecx
  4286cd:	cmp    DWORD PTR [eax],ecx
  4286cf:	pop    esi
  4286d0:	setne  cl
  4286d3:	mov    eax,ecx
  4286d5:	pop    ebp
  4286d6:	ret    0x4
  4286d9:	mov    ecx,DWORD PTR [edi+0x188]
  4286df:	push   ebx
  4286e0:	jmp    0x4286f5
  4286e2:	xor    eax,0x8a9a
  4286e7:	add    eax,0x3b5c
  4286ec:	mov    WORD PTR [ecx],ax
  4286ef:	add    ecx,0x2
  4286f2:	add    edx,0x2
  4286f5:	movzx  eax,WORD PTR [edx]
  4286f8:	mov    ebx,0x4e3e
  4286fd:	cmp    ax,bx
  428700:	jne    0x4286e2
  428702:	xor    eax,eax
  428704:	mov    WORD PTR [ecx],ax
  428707:	mov    eax,DWORD PTR [edi+0x188]
  42870d:	pop    ebx
  42870e:	ret    
  42870f:	push   edi
  428710:	mov    edi,eax
  428712:	mov    eax,DWORD PTR [esi+0x188]
  428718:	shl    edi,0x6
  42871b:	add    eax,edi
  42871d:	jmp    0x428729
  42871f:	xor    cl,0x7e
  428722:	add    cl,0x3
  428725:	mov    BYTE PTR [eax],cl
  428727:	inc    eax
  428728:	inc    edx
  428729:	mov    cl,BYTE PTR [edx]
  42872b:	cmp    cl,0x83
  42872e:	jne    0x42871f
  428730:	mov    BYTE PTR [eax],0x0
  428733:	mov    eax,DWORD PTR [esi+0x188]
  428739:	add    eax,edi
  42873b:	pop    edi
  42873c:	ret    
  42873d:	push   ebp
  42873e:	mov    ebp,esp
  428740:	sub    esp,0x14
  428743:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42874a:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  428751:	mov    eax,DWORD PTR [ebx]
  428753:	mov    DWORD PTR [ebp-0x8],eax
  428756:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42875d:	push   esi
  42875e:	push   edi
  42875f:	mov    DWORD PTR [ebp-0x14],0xead71885
  428766:	mov    edi,DWORD PTR [ebp-0x4]
  428769:	mov    ecx,DWORD PTR [ebp-0x10]
  42876c:	mov    eax,0x75108ae
  428771:	xor    edi,eax
  428773:	mov    edx,0x3272f5
  428778:	xor    ecx,eax
  42877a:	add    edi,edx
  42877c:	add    ecx,edx
  42877e:	imul   edi,ecx
  428781:	jmp    0x4287c9
  428783:	mov    ecx,DWORD PTR [ebp-0x8]
  428786:	mov    esi,DWORD PTR [ebp-0x4]
  428789:	xor    ecx,eax
  42878b:	xor    esi,eax
  42878d:	add    ecx,edx
  42878f:	add    esi,edx
  428791:	test   esi,ecx
  428793:	mov    esi,DWORD PTR [ebp-0x8]
  428796:	mov    ecx,DWORD PTR [ebp-0x4]
  428799:	je     0x4287b0
  42879b:	xor    ecx,eax
  42879d:	xor    esi,eax
  42879f:	add    ecx,edx
  4287a1:	add    esi,edx
  4287a3:	shr    esi,cl
  4287a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4287a8:	xor    ecx,eax
  4287aa:	add    ecx,edx
  4287ac:	xor    esi,ecx
  4287ae:	jmp    0x4287ba
  4287b0:	xor    esi,eax
  4287b2:	xor    ecx,eax
  4287b4:	add    esi,edx
  4287b6:	add    ecx,edx
  4287b8:	shr    esi,cl
  4287ba:	mov    DWORD PTR [ebp-0x8],esi
  4287bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4287c0:	xor    ecx,eax
  4287c2:	lea    edi,[edi+ecx*1+0x3272f5]
  4287c9:	mov    ecx,DWORD PTR [ebp-0xc]
  4287cc:	mov    esi,DWORD PTR [ebp-0x4]
  4287cf:	xor    esi,eax
  4287d1:	xor    ecx,eax
  4287d3:	sub    ecx,esi
  4287d5:	cmp    edi,ecx
  4287d7:	jbe    0x428783
  4287d9:	mov    eax,DWORD PTR [ebp-0x8]
  4287dc:	pop    edi
  4287dd:	mov    DWORD PTR [ebx],eax
  4287df:	mov    eax,DWORD PTR [ebp-0x8]
  4287e2:	pop    esi
  4287e3:	leave  
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x38
  4287eb:	push   ebx
  4287ec:	mov    ebx,0xf89c85a5
  4287f1:	mov    DWORD PTR [ebp-0x4],ebx
  4287f4:	lea    ecx,[ebx-0x3]
  4287f7:	mov    DWORD PTR [ebp-0x24],ecx
  4287fa:	mov    eax,DWORD PTR [ebp-0x4]
  4287fd:	mov    edx,DWORD PTR [ebp+0x8]
  428800:	push   esi
  428801:	mov    esi,0x75108ae
  428806:	xor    eax,esi
  428808:	push   edi
  428809:	mov    edi,0x3272f5
  42880e:	add    eax,edi
  428810:	cmp    edx,eax
  428812:	mov    eax,DWORD PTR [ebp-0x4]
  428815:	je     0x42897a
  42881b:	mov    edx,DWORD PTR [ebp+0xc]
  42881e:	xor    eax,esi
  428820:	add    eax,edi
  428822:	cmp    edx,eax
  428824:	je     0x428977
  42882a:	mov    eax,DWORD PTR [ebp+0x10]
  42882d:	mov    edx,DWORD PTR [ebp+0xc]
  428830:	mov    DWORD PTR [ebp-0x14],eax
  428833:	mov    eax,DWORD PTR [ebp+0x8]
  428836:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  42883d:	mov    DWORD PTR [ebp-0xc],eax
  428840:	lea    eax,[ebx-0x2]
  428843:	mov    DWORD PTR [ebp-0x1c],eax
  428846:	mov    DWORD PTR [ebp-0x10],ebx
  428849:	mov    DWORD PTR [ebp+0xc],ecx
  42884c:	mov    DWORD PTR [ebp+0x10],eax
  42884f:	mov    eax,DWORD PTR [ebp+0xc]
  428852:	xor    eax,esi
  428854:	mov    DWORD PTR [ebp-0x20],edx
  428857:	sub    edx,eax
  428859:	sub    edx,edi
  42885b:	mov    DWORD PTR [ebp+0x8],edx
  42885e:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428865:	jmp    0x428967
  42886a:	mov    eax,DWORD PTR [ebp+0xc]
  42886d:	mov    ecx,DWORD PTR [ebp+0xc]
  428870:	xor    eax,esi
  428872:	xor    ecx,esi
  428874:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42887b:	mov    eax,DWORD PTR [ebp+0x8]
  42887e:	xor    edx,edx
  428880:	div    ecx
  428882:	mov    eax,DWORD PTR [ebp+0x10]
  428885:	mov    ecx,DWORD PTR [ebp+0xc]
  428888:	xor    eax,esi
  42888a:	xor    ecx,esi
  42888c:	sub    eax,ecx
  42888e:	cmp    edx,eax
  428890:	jne    0x428926
  428896:	mov    eax,DWORD PTR [ebp+0x8]
  428899:	mov    ecx,DWORD PTR [ebp-0xc]
  42889c:	mov    dl,BYTE PTR [eax+ecx*1]
  42889f:	mov    eax,DWORD PTR [ebp-0x10]
  4288a2:	mov    ecx,DWORD PTR [ebp-0x8]
  4288a5:	xor    eax,esi
  4288a7:	xor    ecx,esi
  4288a9:	add    eax,edi
  4288ab:	add    ecx,edi
  4288ad:	cmp    eax,ecx
  4288af:	jae    0x4288f7
  4288b1:	lea    ecx,[eax-0x3272f5]
  4288b7:	mov    DWORD PTR [ebp-0x4],ecx
  4288ba:	mov    ebx,DWORD PTR [ebp-0x4]
  4288bd:	xor    ebx,esi
  4288bf:	add    ebx,0x7f55d8e3
  4288c5:	lea    ecx,[ebp+eax*4-0x38]
  4288c9:	mov    DWORD PTR [ecx],ebx
  4288cb:	mov    ebx,DWORD PTR [ecx]
  4288cd:	cmp    ebx,0x244ecb80
  4288d3:	jbe    0x4288dd
  4288d5:	add    DWORD PTR [ecx],0x405fcc1
  4288db:	jmp    0x4288e3
  4288dd:	add    DWORD PTR [ecx],0xfdaf433f
  4288e3:	mov    ecx,DWORD PTR [ebp-0x8]
  4288e6:	xor    ecx,esi
  4288e8:	inc    eax
  4288e9:	inc    DWORD PTR [ebp-0x4]
  4288ec:	add    ecx,edi
  4288ee:	cmp    eax,ecx
  4288f0:	jb     0x4288ba
  4288f2:	mov    ebx,0xf89c85a5
  4288f7:	cmp    DWORD PTR [ebp-0x14],0x0
  4288fb:	jne    0x428905
  4288fd:	xor    dl,0x7e
  428900:	add    dl,0x3
  428903:	jmp    0x42891b
  428905:	mov    eax,DWORD PTR [ebp-0x18]
  428908:	xor    al,0xae
  42890a:	mov    cl,0xb
  42890c:	sub    cl,al
  42890e:	add    dl,cl
  428910:	mov    ecx,DWORD PTR [ebp-0x1c]
  428913:	xor    cl,0xae
  428916:	sub    cl,0xb
  428919:	ror    dl,cl
  42891b:	xor    eax,eax
  42891d:	mov    eax,DWORD PTR [ebp+0x8]
  428920:	mov    ecx,DWORD PTR [ebp-0xc]
  428923:	mov    BYTE PTR [eax+ecx*1],dl
  428926:	mov    eax,DWORD PTR [ebp+0x8]
  428929:	mov    ecx,DWORD PTR [ebp-0x10]
  42892c:	sub    eax,edi
  42892e:	xor    eax,esi
  428930:	cmp    eax,ecx
  428932:	jne    0x428955
  428934:	mov    eax,DWORD PTR [ebp+0x10]
  428937:	mov    ecx,DWORD PTR [ebp+0xc]
  42893a:	xor    eax,esi
  42893c:	xor    ecx,esi
  42893e:	sub    eax,ecx
  428940:	mov    ecx,DWORD PTR [ebp-0x20]
  428943:	sub    eax,edi
  428945:	xor    eax,esi
  428947:	mov    DWORD PTR [ebp+0x10],eax
  42894a:	mov    eax,DWORD PTR [ebp+0xc]
  42894d:	xor    eax,esi
  42894f:	sub    ecx,eax
  428951:	sub    ecx,edi
  428953:	jmp    0x428964
  428955:	mov    eax,DWORD PTR [ebp+0xc]
  428958:	xor    eax,esi
  42895a:	mov    ecx,0xffcd8d0b
  42895f:	sub    ecx,eax
  428961:	add    ecx,DWORD PTR [ebp+0x8]
  428964:	mov    DWORD PTR [ebp+0x8],ecx
  428967:	mov    eax,DWORD PTR [ebp+0x10]
  42896a:	cmp    eax,ebx
  42896c:	jne    0x42886a
  428972:	mov    eax,DWORD PTR [ebp-0x24]
  428975:	jmp    0x42897a
  428977:	mov    eax,DWORD PTR [ebp-0x4]
  42897a:	xor    eax,esi
  42897c:	add    eax,edi
  42897e:	pop    edi
  42897f:	pop    esi
  428980:	pop    ebx
  428981:	leave  
  428982:	ret    0xc
  428985:	push   ebp
  428986:	mov    ebp,esp
  428988:	sub    esp,0x420
  42898e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428995:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  42899c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4289a3:	push   ebx
  4289a4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4289ab:	mov    eax,DWORD PTR [ebp-0x14]
  4289ae:	push   esi
  4289af:	mov    esi,0x75108ae
  4289b4:	push   edi
  4289b5:	xor    eax,esi
  4289b7:	mov    edi,0x3272f5
  4289bc:	add    eax,edi
  4289be:	mov    DWORD PTR [ebp-0x8],eax
  4289c1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4289c8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4289cf:	mov    DWORD PTR [ebp-0x10],0x8
  4289d6:	mov    ecx,ecx
  4289d8:	mov    eax,DWORD PTR [ebp-0xc]
  4289db:	mov    ecx,DWORD PTR [ebp-0x14]
  4289de:	xor    eax,esi
  4289e0:	xor    ecx,esi
  4289e2:	add    eax,edi
  4289e4:	add    ecx,edi
  4289e6:	imul   eax,ecx
  4289e9:	jmp    0x428a1c
  4289eb:	mov    eax,DWORD PTR [ebp-0x4]
  4289ee:	sub    eax,edi
  4289f0:	xor    eax,esi
  4289f2:	mov    DWORD PTR [ebp-0x8],eax
  4289f5:	lea    ebx,[ebp-0x8]
  4289f8:	call   0x42873d
  4289fd:	mov    DWORD PTR [ebp-0x8],eax
  428a00:	mov    eax,DWORD PTR [ebp-0x8]
  428a03:	mov    ecx,DWORD PTR [ebp-0x4]
  428a06:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428a0d:	mov    eax,DWORD PTR [ebp-0xc]
  428a10:	mov    ecx,DWORD PTR [ebp-0x4]
  428a13:	xor    eax,esi
  428a15:	lea    eax,[eax+ecx*1+0x3272f5]
  428a1c:	mov    DWORD PTR [ebp-0x4],eax
  428a1f:	mov    eax,DWORD PTR [ebp-0x18]
  428a22:	mov    ecx,DWORD PTR [ebp-0xc]
  428a25:	xor    ecx,esi
  428a27:	xor    eax,esi
  428a29:	sub    eax,ecx
  428a2b:	mov    ecx,DWORD PTR [ebp-0x4]
  428a2e:	cmp    ecx,eax
  428a30:	jbe    0x4289eb
  428a32:	mov    eax,DWORD PTR [ebp-0x1c]
  428a35:	xor    eax,esi
  428a37:	add    eax,edi
  428a39:	mov    DWORD PTR [ebp-0x8],eax
  428a3c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428a43:	mov    ebx,ebx
  428a45:	jmp    0x428aa8
  428a47:	mov    ecx,DWORD PTR [ebp-0x20]
  428a4a:	mov    eax,DWORD PTR [ebp-0x8]
  428a4d:	xor    ecx,esi
  428a4f:	add    ecx,edi
  428a51:	shr    eax,cl
  428a53:	mov    DWORD PTR [ebp-0x4],eax
  428a56:	mov    eax,DWORD PTR [ebp+0x8]
  428a59:	mov    cl,BYTE PTR [eax]
  428a5b:	mov    BYTE PTR [ebp+0xb],cl
  428a5e:	mov    cl,BYTE PTR [ebp+0xb]
  428a61:	mov    edx,DWORD PTR [ebp-0x8]
  428a64:	movzx  ecx,cl
  428a67:	xor    ecx,edx
  428a69:	mov    DWORD PTR [ebp+0x8],ecx
  428a6c:	mov    ecx,DWORD PTR [ebp-0x18]
  428a6f:	mov    edx,DWORD PTR [ebp+0x8]
  428a72:	xor    ecx,esi
  428a74:	add    ecx,edi
  428a76:	and    ecx,edx
  428a78:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428a7f:	mov    edx,DWORD PTR [ebp-0x4]
  428a82:	xor    ecx,edx
  428a84:	mov    DWORD PTR [ebp-0x8],ecx
  428a87:	mov    ecx,DWORD PTR [ebp-0xc]
  428a8a:	xor    ecx,esi
  428a8c:	lea    eax,[eax+ecx*1+0x3272f5]
  428a93:	mov    DWORD PTR [ebp+0x8],eax
  428a96:	mov    eax,DWORD PTR [ebp-0xc]
  428a99:	xor    eax,esi
  428a9b:	mov    ecx,0xffcd8d0b
  428aa0:	sub    ecx,eax
  428aa2:	add    ecx,DWORD PTR [ebp-0x10]
  428aa5:	mov    DWORD PTR [ebp-0x10],ecx
  428aa8:	mov    eax,DWORD PTR [ebp-0x14]
  428aab:	mov    ecx,DWORD PTR [ebp-0x10]
  428aae:	xor    eax,esi
  428ab0:	add    eax,edi
  428ab2:	cmp    ecx,eax
  428ab4:	jne    0x428a47
  428ab6:	mov    eax,DWORD PTR [ebp-0x1c]
  428ab9:	mov    ecx,DWORD PTR [ebp-0x8]
  428abc:	xor    eax,esi
  428abe:	add    eax,edi
  428ac0:	pop    edi
  428ac1:	pop    esi
  428ac2:	xor    eax,ecx
  428ac4:	pop    ebx
  428ac5:	leave  
  428ac6:	ret    0x4
  428ac9:	push   ebp
  428aca:	mov    ebp,esp
  428acc:	mov    eax,DWORD PTR [ebp+0x1c]
  428acf:	mov    ecx,DWORD PTR [ebp+0x8]
  428ad2:	mov    edx,DWORD PTR [ebp+0x10]
  428ad5:	mov    eax,DWORD PTR [eax+0x190]
  428adb:	mov    eax,DWORD PTR [eax]
  428add:	sub    esp,0x64
  428ae0:	push   ebx
  428ae1:	push   esi
  428ae2:	push   edi
  428ae3:	mov    edi,0x75108ae
  428ae8:	xor    ecx,edi
  428aea:	mov    ebx,0x3272f5
  428aef:	add    ecx,ebx
  428af1:	cmp    ecx,edx
  428af3:	jne    0x428b04
  428af5:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428aff:	jmp    0x429000
  428b04:	mov    ecx,DWORD PTR [ebp+0x8]
  428b07:	mov    esi,DWORD PTR [ebp+0x14]
  428b0a:	mov    edx,DWORD PTR [esi]
  428b0c:	xor    ecx,edi
  428b0e:	add    ecx,ebx
  428b10:	cmp    edx,ecx
  428b12:	je     0x428fbb
  428b18:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b1b:	mov    DWORD PTR [ebp-0x1c],eax
  428b1e:	mov    DWORD PTR [ebp+0x1c],ecx
  428b21:	mov    ecx,DWORD PTR [ebp+0x18]
  428b24:	mov    eax,DWORD PTR [esi]
  428b26:	mov    DWORD PTR [ebp-0x20],eax
  428b29:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428b30:	mov    edx,0xf89c85a2
  428b35:	mov    DWORD PTR [ebp-0x8],edx
  428b38:	mov    eax,DWORD PTR [ebp+0x1c]
  428b3b:	mov    DWORD PTR [ebp+0x1c],eax
  428b3e:	mov    eax,DWORD PTR [ebp+0x1c]
  428b41:	mov    eax,DWORD PTR [eax+0x190]
  428b47:	mov    eax,DWORD PTR [eax]
  428b49:	mov    DWORD PTR [ebp-0x24],ecx
  428b4c:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b4f:	mov    ecx,DWORD PTR [ecx+0x190]
  428b55:	mov    ecx,DWORD PTR [ecx]
  428b57:	add    ecx,DWORD PTR [eax+0x3c]
  428b5a:	mov    DWORD PTR [ebp+0x10],ecx
  428b5d:	mov    eax,DWORD PTR [ebp+0x8]
  428b60:	xor    eax,edi
  428b62:	add    eax,ebx
  428b64:	mov    DWORD PTR [ebp-0x4],eax
  428b67:	mov    eax,DWORD PTR [ebp+0x8]
  428b6a:	xor    eax,edi
  428b6c:	add    eax,ebx
  428b6e:	mov    DWORD PTR [ebp+0x18],eax
  428b71:	mov    eax,DWORD PTR [ebp+0x10]
  428b74:	mov    eax,DWORD PTR [eax+0x50]
  428b77:	sub    eax,0xc
  428b7a:	mov    DWORD PTR [ebp-0x28],eax
  428b7d:	mov    eax,DWORD PTR [ebp+0x10]
  428b80:	mov    eax,DWORD PTR [eax+0x38]
  428b83:	mov    ecx,DWORD PTR [ebp+0x10]
  428b86:	dec    eax
  428b87:	test   DWORD PTR [ecx+0x54],eax
  428b8a:	mov    eax,DWORD PTR [ebp+0x10]
  428b8d:	je     0x428ba7
  428b8f:	mov    eax,DWORD PTR [eax+0x38]
  428b92:	mov    ecx,DWORD PTR [ebp+0x10]
  428b95:	mov    ecx,DWORD PTR [ecx+0x54]
  428b98:	dec    eax
  428b99:	not    eax
  428b9b:	and    ecx,eax
  428b9d:	mov    eax,DWORD PTR [ebp+0x10]
  428ba0:	mov    eax,DWORD PTR [eax+0x38]
  428ba3:	add    eax,ecx
  428ba5:	jmp    0x428baa
  428ba7:	mov    eax,DWORD PTR [eax+0x54]
  428baa:	mov    DWORD PTR [ebp+0x1c],eax
  428bad:	mov    eax,DWORD PTR [ebp+0x8]
  428bb0:	xor    eax,edi
  428bb2:	add    eax,ebx
  428bb4:	mov    DWORD PTR [ebp+0x18],eax
  428bb7:	mov    eax,DWORD PTR [ebp+0x8]
  428bba:	xor    eax,edi
  428bbc:	add    eax,ebx
  428bbe:	mov    DWORD PTR [ebp+0x18],eax
  428bc1:	mov    eax,DWORD PTR [ebp+0x8]
  428bc4:	mov    ecx,DWORD PTR [ebp-0x24]
  428bc7:	xor    eax,edi
  428bc9:	add    eax,ebx
  428bcb:	mov    DWORD PTR [ecx],eax
  428bcd:	mov    DWORD PTR [ebp+0x18],edx
  428bd0:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428bd7:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428bde:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428be5:	mov    eax,DWORD PTR [ebp-0x8]
  428be8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428beb:	xor    eax,edi
  428bed:	add    eax,ebx
  428bef:	imul   eax,ecx
  428bf2:	mov    ecx,DWORD PTR [ebp+0x8]
  428bf5:	mov    edx,DWORD PTR [ebp-0x28]
  428bf8:	xor    ecx,edi
  428bfa:	lea    ecx,[ecx+edx*1+0x3272f5]
  428c01:	cmp    eax,ecx
  428c03:	jae    0x428fb4
  428c09:	mov    eax,DWORD PTR [ebp+0x8]
  428c0c:	xor    eax,edi
  428c0e:	add    eax,ebx
  428c10:	mov    DWORD PTR [ebp+0x18],eax
  428c13:	mov    eax,DWORD PTR [ebp+0x1c]
  428c16:	add    eax,DWORD PTR [ebp-0x1c]
  428c19:	mov    DWORD PTR [ebp-0x4],eax
  428c1c:	push   DWORD PTR [ebp-0x4]
  428c1f:	mov    esi,DWORD PTR [ebp-0x1c]
  428c22:	mov    ecx,DWORD PTR [ebp+0x10]
  428c25:	call   0x427d75
  428c2a:	mov    DWORD PTR [ebp+0xc],eax
  428c2d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428c34:	mov    eax,DWORD PTR [ebp-0x18]
  428c37:	xor    eax,edi
  428c39:	lea    ecx,[ebp-0x40]
  428c3c:	add    eax,ebx
  428c3e:	push   ecx
  428c3f:	call   0x428309
  428c44:	mov    eax,DWORD PTR [ebp+0xc]
  428c47:	test   eax,eax
  428c49:	je     0x428c99
  428c4b:	mov    eax,DWORD PTR [ebp-0x18]
  428c4e:	xor    eax,edi
  428c50:	add    eax,ebx
  428c52:	push   eax
  428c53:	push   DWORD PTR [ebp+0xc]
  428c56:	lea    eax,[ebp-0x40]
  428c59:	push   eax
  428c5a:	call   0x4281ff
  428c5f:	mov    eax,DWORD PTR [ebp-0x4]
  428c62:	mov    DWORD PTR [ebp-0x18],eax
  428c65:	mov    eax,DWORD PTR [ebp-0x18]
  428c68:	mov    ecx,DWORD PTR [ebp-0x1c]
  428c6b:	sub    eax,ecx
  428c6d:	mov    DWORD PTR [ebp-0x18],eax
  428c70:	mov    eax,DWORD PTR [ebp+0xc]
  428c73:	mov    ecx,DWORD PTR [ebp+0xc]
  428c76:	mov    eax,DWORD PTR [eax+0x10]
  428c79:	add    eax,DWORD PTR [ecx+0xc]
  428c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  428c7f:	cmp    ecx,eax
  428c81:	jb     0x428c99
  428c83:	mov    eax,DWORD PTR [ebp+0xc]
  428c86:	mov    eax,DWORD PTR [eax+0xc]
  428c89:	mov    ecx,DWORD PTR [ebp+0xc]
  428c8c:	add    eax,DWORD PTR [ecx+0x8]
  428c8f:	mov    ecx,DWORD PTR [ebp-0x18]
  428c92:	sub    eax,ecx
  428c94:	jmp    0x428f87
  428c99:	push   0xc
  428c9b:	push   DWORD PTR [ebp-0x4]
  428c9e:	lea    eax,[ebp-0x4c]
  428ca1:	push   eax
  428ca2:	call   0x4281ff
  428ca7:	mov    eax,0xf89c85a5
  428cac:	mov    DWORD PTR [ebp-0x2c],eax
  428caf:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428cb6:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428cbd:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428cc4:	lea    ecx,[ebp-0x2c]
  428cc7:	mov    DWORD PTR [ebp-0xc],ecx
  428cca:	lea    ecx,[ebp-0x30]
  428ccd:	mov    DWORD PTR [ebp-0x10],ecx
  428cd0:	lea    ecx,[ebp-0x34]
  428cd3:	mov    DWORD PTR [ebp+0xc],ecx
  428cd6:	lea    ecx,[ebp-0x38]
  428cd9:	mov    DWORD PTR [ebp-0x14],ecx
  428cdc:	mov    ecx,DWORD PTR [ebp+0x8]
  428cdf:	xor    ecx,edi
  428ce1:	add    ecx,ebx
  428ce3:	mov    DWORD PTR [ebp-0x18],ecx
  428ce6:	jmp    0x428ee2
  428ceb:	cmp    eax,0xf89c85a3
  428cf0:	je     0x428ef4
  428cf6:	mov    ecx,DWORD PTR [ebp-0x8]
  428cf9:	xor    ecx,edi
  428cfb:	mov    esi,eax
  428cfd:	add    ecx,ebx
  428cff:	mov    DWORD PTR [ebp+0x18],ecx
  428d02:	mov    eax,DWORD PTR [ebp-0x18]
  428d05:	xor    esi,edi
  428d07:	lea    eax,[eax+esi*1+0x3272f5]
  428d0e:	mov    DWORD PTR [ebp-0x18],eax
  428d11:	mov    eax,DWORD PTR [ebp-0x8]
  428d14:	mov    ecx,DWORD PTR [ebp-0x18]
  428d17:	xor    eax,edi
  428d19:	add    eax,ebx
  428d1b:	cmp    ecx,eax
  428d1d:	jne    0x428d32
  428d1f:	mov    eax,DWORD PTR [ebp+0x8]
  428d22:	xor    eax,edi
  428d24:	add    eax,ebx
  428d26:	push   eax
  428d27:	push   0xc
  428d29:	lea    eax,[ebp-0x4c]
  428d2c:	push   eax
  428d2d:	call   0x4287e5
  428d32:	mov    eax,DWORD PTR [ebp-0xc]
  428d35:	mov    eax,DWORD PTR [eax]
  428d37:	xor    eax,edi
  428d39:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d40:	mov    ecx,DWORD PTR [ebp+0x8]
  428d43:	xor    ecx,edi
  428d45:	movzx  eax,al
  428d48:	add    ecx,ebx
  428d4a:	cmp    eax,ecx
  428d4c:	je     0x428eca
  428d52:	mov    eax,DWORD PTR [ebp-0x10]
  428d55:	mov    eax,DWORD PTR [eax]
  428d57:	xor    eax,edi
  428d59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d60:	mov    ecx,DWORD PTR [ebp+0x8]
  428d63:	xor    ecx,edi
  428d65:	movzx  eax,al
  428d68:	add    ecx,ebx
  428d6a:	cmp    eax,ecx
  428d6c:	je     0x428eca
  428d72:	mov    eax,DWORD PTR [ebp+0xc]
  428d75:	mov    eax,DWORD PTR [eax]
  428d77:	xor    eax,edi
  428d79:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d80:	mov    ecx,DWORD PTR [ebp+0x8]
  428d83:	xor    ecx,edi
  428d85:	movzx  eax,al
  428d88:	add    ecx,ebx
  428d8a:	cmp    eax,ecx
  428d8c:	je     0x428eca
  428d92:	mov    eax,DWORD PTR [ebp-0x14]
  428d95:	mov    eax,DWORD PTR [eax]
  428d97:	xor    eax,edi
  428d99:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428da0:	mov    ecx,DWORD PTR [ebp+0x8]
  428da3:	xor    ecx,edi
  428da5:	movzx  eax,al
  428da8:	add    ecx,ebx
  428daa:	cmp    eax,ecx
  428dac:	je     0x428eca
  428db2:	mov    eax,DWORD PTR [ebp-0x10]
  428db5:	mov    eax,DWORD PTR [eax]
  428db7:	xor    eax,edi
  428db9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428dc0:	mov    ecx,DWORD PTR [ebp-0xc]
  428dc3:	mov    ecx,DWORD PTR [ecx]
  428dc5:	xor    ecx,edi
  428dc7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dce:	xor    al,cl
  428dd0:	mov    ecx,DWORD PTR [ebp+0xc]
  428dd3:	mov    ecx,DWORD PTR [ecx]
  428dd5:	xor    ecx,edi
  428dd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dde:	or     al,cl
  428de0:	mov    ecx,DWORD PTR [ebp-0xc]
  428de3:	mov    ecx,DWORD PTR [ecx]
  428de5:	xor    ecx,edi
  428de7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428dee:	cmp    cl,al
  428df0:	jne    0x428eca
  428df6:	mov    eax,DWORD PTR [ebp+0xc]
  428df9:	mov    eax,DWORD PTR [eax]
  428dfb:	xor    eax,edi
  428dfd:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e04:	mov    ecx,DWORD PTR [ebp-0x10]
  428e07:	mov    ecx,DWORD PTR [ecx]
  428e09:	xor    ecx,edi
  428e0b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e12:	xor    al,cl
  428e14:	mov    ecx,DWORD PTR [ebp-0x14]
  428e17:	mov    ecx,DWORD PTR [ecx]
  428e19:	xor    ecx,edi
  428e1b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e22:	or     al,cl
  428e24:	mov    ecx,DWORD PTR [ebp-0x10]
  428e27:	mov    ecx,DWORD PTR [ecx]
  428e29:	xor    ecx,edi
  428e2b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e32:	cmp    cl,al
  428e34:	jne    0x428eca
  428e3a:	mov    eax,DWORD PTR [ebp-0x14]
  428e3d:	mov    eax,DWORD PTR [eax]
  428e3f:	xor    eax,edi
  428e41:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e48:	mov    ecx,DWORD PTR [ebp+0xc]
  428e4b:	mov    ecx,DWORD PTR [ecx]
  428e4d:	xor    ecx,edi
  428e4f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e56:	xor    al,cl
  428e58:	mov    ecx,DWORD PTR [ebp-0xc]
  428e5b:	mov    ecx,DWORD PTR [ecx]
  428e5d:	xor    ecx,edi
  428e5f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e66:	or     al,cl
  428e68:	mov    ecx,DWORD PTR [ebp+0xc]
  428e6b:	mov    ecx,DWORD PTR [ecx]
  428e6d:	xor    ecx,edi
  428e6f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e76:	cmp    cl,al
  428e78:	jne    0x428eca
  428e7a:	mov    eax,DWORD PTR [ebp-0x14]
  428e7d:	mov    eax,DWORD PTR [eax]
  428e7f:	xor    eax,edi
  428e81:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e88:	mov    ecx,DWORD PTR [ebp-0xc]
  428e8b:	mov    ecx,DWORD PTR [ecx]
  428e8d:	xor    ecx,edi
  428e8f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e96:	xor    al,cl
  428e98:	mov    ecx,DWORD PTR [ebp-0x10]
  428e9b:	mov    ecx,DWORD PTR [ecx]
  428e9d:	xor    ecx,edi
  428e9f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ea6:	or     al,cl
  428ea8:	mov    ecx,DWORD PTR [ebp-0x14]
  428eab:	mov    ecx,DWORD PTR [ecx]
  428ead:	xor    ecx,edi
  428eaf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428eb6:	cmp    cl,al
  428eb8:	jne    0x428eca
  428eba:	lea    eax,[ebp-0x4c]
  428ebd:	push   eax
  428ebe:	call   0x428985
  428ec3:	mov    ecx,DWORD PTR [ebp-0x44]
  428ec6:	cmp    eax,ecx
  428ec8:	je     0x428ed4
  428eca:	mov    eax,DWORD PTR [ebp+0x8]
  428ecd:	xor    eax,edi
  428ecf:	add    eax,ebx
  428ed1:	mov    DWORD PTR [ebp+0x18],eax
  428ed4:	mov    eax,DWORD PTR [ebp-0x8]
  428ed7:	xor    eax,edi
  428ed9:	lea    eax,[eax+esi*1+0x3272f5]
  428ee0:	xor    eax,edi
  428ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  428ee5:	mov    edx,DWORD PTR [ebp+0x18]
  428ee8:	xor    ecx,edi
  428eea:	add    ecx,ebx
  428eec:	cmp    edx,ecx
  428eee:	je     0x428ceb
  428ef4:	mov    eax,DWORD PTR [ebp+0x8]
  428ef7:	mov    ecx,DWORD PTR [ebp+0x18]
  428efa:	xor    eax,edi
  428efc:	add    eax,ebx
  428efe:	cmp    ecx,eax
  428f00:	jne    0x428f13
  428f02:	mov    eax,DWORD PTR [ebp-0x8]
  428f05:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f08:	xor    eax,edi
  428f0a:	lea    eax,[eax+ecx*1+0x3272f5]
  428f11:	jmp    0x428f8a
  428f13:	push   0x18
  428f15:	push   DWORD PTR [ebp-0x4]
  428f18:	lea    eax,[ebp-0x64]
  428f1b:	push   eax
  428f1c:	call   0x4281ff
  428f21:	mov    eax,DWORD PTR [ebp+0x8]
  428f24:	mov    ecx,DWORD PTR [ebp-0x18]
  428f27:	xor    eax,edi
  428f29:	add    eax,ebx
  428f2b:	cmp    eax,ecx
  428f2d:	je     0x428f42
  428f2f:	mov    eax,DWORD PTR [ebp+0x8]
  428f32:	xor    eax,edi
  428f34:	add    eax,ebx
  428f36:	push   eax
  428f37:	push   0x18
  428f39:	lea    eax,[ebp-0x64]
  428f3c:	push   eax
  428f3d:	call   0x4287e5
  428f42:	mov    eax,DWORD PTR [ebp-0x4]
  428f45:	add    eax,0x18
  428f48:	mov    DWORD PTR [ebp+0x18],eax
  428f4b:	push   DWORD PTR [ebp-0x50]
  428f4e:	push   DWORD PTR [ebp+0x18]
  428f51:	mov    eax,DWORD PTR [ebp-0x54]
  428f54:	add    eax,DWORD PTR [ebp-0x20]
  428f57:	push   eax
  428f58:	call   0x4281ff
  428f5d:	mov    eax,DWORD PTR [ebp+0x8]
  428f60:	mov    ecx,DWORD PTR [ebp-0x18]
  428f63:	xor    eax,edi
  428f65:	add    eax,ebx
  428f67:	cmp    eax,ecx
  428f69:	je     0x428f7c
  428f6b:	push   0x0
  428f6d:	push   DWORD PTR [ebp-0x50]
  428f70:	mov    eax,DWORD PTR [ebp-0x54]
  428f73:	add    eax,DWORD PTR [ebp-0x20]
  428f76:	push   eax
  428f77:	call   0x4287e5
  428f7c:	mov    eax,DWORD PTR [ebp-0x24]
  428f7f:	mov    ecx,DWORD PTR [ebp-0x50]
  428f82:	add    DWORD PTR [eax],ecx
  428f84:	mov    eax,DWORD PTR [ebp-0x50]
  428f87:	add    eax,DWORD PTR [ebp+0x1c]
  428f8a:	mov    DWORD PTR [ebp+0x1c],eax
  428f8d:	mov    eax,DWORD PTR [ebp-0x8]
  428f90:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f93:	xor    eax,edi
  428f95:	add    eax,ebx
  428f97:	imul   eax,ecx
  428f9a:	mov    ecx,DWORD PTR [ebp+0x8]
  428f9d:	mov    edx,DWORD PTR [ebp-0x28]
  428fa0:	xor    ecx,edi
  428fa2:	lea    ecx,[ecx+edx*1+0x3272f5]
  428fa9:	cmp    eax,ecx
  428fab:	jb     0x428c09
  428fb1:	mov    esi,DWORD PTR [ebp+0x14]
  428fb4:	mov    eax,DWORD PTR [ebp-0x20]
  428fb7:	mov    DWORD PTR [esi],eax
  428fb9:	jmp    0x429000
  428fbb:	mov    ecx,DWORD PTR [ebp+0x8]
  428fbe:	mov    edx,DWORD PTR [ebp+0xc]
  428fc1:	xor    ecx,edi
  428fc3:	xor    edx,edi
  428fc5:	add    ecx,ebx
  428fc7:	add    edx,ebx
  428fc9:	cmp    ecx,edx
  428fcb:	jne    0x428fdf
  428fcd:	mov    eax,ds:0x7f642ddc
  428fd2:	imul   eax,eax,0x9f15fccf
  428fd8:	mov    ds:0x7f642ddc,eax
  428fdd:	jmp    0x429000
  428fdf:	mov    ecx,DWORD PTR [ebp+0x8]
  428fe2:	xor    ecx,edi
  428fe4:	add    ecx,ebx
  428fe6:	cmp    eax,ecx
  428fe8:	je     0x428ff6
  428fea:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428ff4:	jmp    0x429000
  428ff6:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  429000:	pop    edi
  429001:	pop    esi
  429002:	pop    ebx
  429003:	leave  
  429004:	ret    0x18
  429007:	push   ebp
  429008:	mov    ebp,esp
  42900a:	and    esp,0xfffffff8
  42900d:	mov    eax,DWORD PTR [ebp+0x20]
  429010:	sub    esp,0x14
  429013:	push   ebx
  429014:	mov    ebx,DWORD PTR [ebp+0x14]
  429017:	push   esi
  429018:	push   edi
  429019:	cmp    eax,0xf89c85a5
  42901e:	jne    0x42902a
  429020:	push   0xf89c85a2
  429025:	jmp    0x42915c
  42902a:	mov    eax,DWORD PTR [ebp+0x20]
  42902d:	cmp    eax,0xf89c85a2
  429032:	jne    0x42903e
  429034:	push   0xf89c85a3
  429039:	jmp    0x42915c
  42903e:	mov    eax,DWORD PTR [ebp+0x20]
  429041:	cmp    eax,0xf89c85a3
  429046:	jne    0x429052
  429048:	push   0xf89c85a0
  42904d:	jmp    0x42915c
  429052:	mov    eax,DWORD PTR [ebp+0x20]
  429055:	cmp    eax,0xf89c85a0
  42905a:	jne    0x429066
  42905c:	push   0xf89c85a1
  429061:	jmp    0x42915c
  429066:	mov    ecx,DWORD PTR [ebp+0x20]
  429069:	mov    eax,0xf89c85bc
  42906e:	cmp    ecx,eax
  429070:	jne    0x42912c
  429076:	mov    eax,DWORD PTR [ebp+0x10]
  429079:	mov    DWORD PTR [esp+0xc],eax
  42907d:	mov    eax,DWORD PTR [ebp+0x18]
  429080:	mov    DWORD PTR [esp+0x14],eax
  429084:	mov    eax,DWORD PTR [ebp+0xc]
  429087:	mov    DWORD PTR [esp+0x18],eax
  42908b:	mov    eax,DWORD PTR [ebp+0x8]
  42908e:	mov    DWORD PTR [esp+0x10],eax
  429092:	mov    eax,DWORD PTR [esp+0x10]
  429096:	mov    ecx,DWORD PTR [esp+0x14]
  42909a:	mov    edi,0x75108ae
  42909f:	xor    eax,edi
  4290a1:	mov    esi,0x3272f5
  4290a6:	add    eax,esi
  4290a8:	mov    DWORD PTR [ecx],eax
  4290aa:	mov    eax,DWORD PTR [esp+0xc]
  4290ae:	mov    eax,DWORD PTR [eax+0x194]
  4290b4:	mov    ecx,DWORD PTR [eax]
  4290b6:	mov    eax,DWORD PTR [esp+0xc]
  4290ba:	mov    eax,DWORD PTR [eax+0x194]
  4290c0:	mov    eax,DWORD PTR [eax]
  4290c2:	add    eax,DWORD PTR [ecx+0x3c]
  4290c5:	mov    ecx,DWORD PTR [esp+0xc]
  4290c9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4290cf:	mov    ecx,DWORD PTR [ecx+0x14]
  4290d2:	push   0x4
  4290d4:	push   0x3000
  4290d9:	push   DWORD PTR [eax+0x50]
  4290dc:	push   0x0
  4290de:	call   ecx
  4290e0:	mov    DWORD PTR [ebx],eax
  4290e2:	mov    eax,DWORD PTR [esp+0x10]
  4290e6:	push   DWORD PTR [esp+0xc]
  4290ea:	xor    eax,edi
  4290ec:	add    eax,esi
  4290ee:	mov    DWORD PTR [esp+0x20],eax
  4290f2:	lea    eax,[esp+0x20]
  4290f6:	push   eax
  4290f7:	push   ebx
  4290f8:	push   DWORD PTR [esp+0x20]
  4290fc:	push   DWORD PTR [esp+0x28]
  429100:	push   DWORD PTR [esp+0x24]
  429104:	call   0x428ac9
  429109:	mov    eax,DWORD PTR [esp+0x10]
  42910d:	mov    ecx,DWORD PTR [ebx]
  42910f:	xor    eax,edi
  429111:	add    eax,esi
  429113:	cmp    ecx,eax
  429115:	je     0x429173
  429117:	mov    eax,DWORD PTR [esp+0x18]
  42911b:	mov    ecx,DWORD PTR [esp+0x14]
  42911f:	xor    eax,edi
  429121:	add    eax,esi
  429123:	imul   eax,DWORD PTR [esp+0x1c]
  429128:	mov    DWORD PTR [ecx],eax
  42912a:	jmp    0x429173
  42912c:	mov    ecx,DWORD PTR [ebp+0x20]
  42912f:	cmp    ecx,0xf89c85a1
  429135:	jne    0x42913e
  429137:	push   0xf89c85be
  42913c:	jmp    0x42915c
  42913e:	mov    ecx,DWORD PTR [ebp+0x20]
  429141:	cmp    ecx,0xf89c85be
  429147:	jne    0x429150
  429149:	push   0xf89c85bf
  42914e:	jmp    0x42915c
  429150:	mov    ecx,DWORD PTR [ebp+0x20]
  429153:	cmp    ecx,0xf89c85bf
  429159:	jne    0x429173
  42915b:	push   eax
  42915c:	push   DWORD PTR [ebp+0x1c]
  42915f:	push   DWORD PTR [ebp+0x18]
  429162:	push   ebx
  429163:	push   DWORD PTR [ebp+0x10]
  429166:	push   DWORD PTR [ebp+0xc]
  429169:	push   DWORD PTR [ebp+0x8]
  42916c:	call   0x429007
  429171:	mov    DWORD PTR [ebx],eax
  429173:	mov    eax,DWORD PTR [ebx]
  429175:	pop    edi
  429176:	pop    esi
  429177:	pop    ebx
  429178:	mov    esp,ebp
  42917a:	pop    ebp
  42917b:	ret    0x1c
  42917e:	push   ebp
  42917f:	mov    ebp,esp
  429181:	sub    esp,0xc
  429184:	mov    eax,0xf89c85a5
  429189:	mov    DWORD PTR [ebp-0x8],eax
  42918c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  429193:	mov    ecx,DWORD PTR [ebp-0x8]
  429196:	xor    ecx,0x75108ae
  42919c:	add    ecx,0x3272f5
  4291a2:	mov    DWORD PTR [ebp-0x4],ecx
  4291a5:	mov    ecx,DWORD PTR [ebp+0xc]
  4291a8:	push   eax
  4291a9:	mov    DWORD PTR [ebp+0xc],ecx
  4291ac:	push   DWORD PTR [ebp+0xc]
  4291af:	lea    eax,[ebp-0x4]
  4291b2:	push   DWORD PTR [ebp+0x8]
  4291b5:	push   eax
  4291b6:	push   DWORD PTR [ebp+0xc]
  4291b9:	push   DWORD PTR [ebp-0xc]
  4291bc:	push   DWORD PTR [ebp-0x8]
  4291bf:	call   0x429007
  4291c4:	mov    DWORD PTR [ebp-0x4],eax
  4291c7:	mov    eax,DWORD PTR [ebp-0x4]
  4291ca:	leave  
  4291cb:	ret    0x8
